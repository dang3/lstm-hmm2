sbb
add
mov
xchg
mov
pop
or
mov
dec
mov
clc
movsl
lahf
sub
mov
cmp
xor
sub
mov
cmp
out
push
cmpsb
mov
mov
out
addl
jge,pn
cs
cmp
xchg
xor
lds
dec
jne
sbb
pop
jg
sarb
push
mov
insl
push
mov
jmp
pop
or
sub
jbe
cmp
loopne
jecxz
js
hlt
sub
int
dec
ljmp
sbb
shlb
cwtl
pop
addr16
push
cmp
pop
cmp
add
cmp
dec
aam
outsl
push
imul
cmpsb
lock
or
sahf
jb
int
xchg
mov
add
scas
xchg
push
pop
fidivrl
arpl
cmp
push
repnz
sub
pop
sub
cmp
in
aas
imul
icebp
lret
push
pop
push
shrl
inc
out
mov
push
testb
fwait
cltd
test
mov
decb
sbbb
push
xor
iret
ret
icebp
scas
shlb
cld
mov
mov
fwait
loopne
inc
fsubrl
sbb
push
mov
scas
jno
xchg
shr
xchg
in
push
mov
call
jl
sub
enter
enter
jecxz
lcall
pop
jl
xor
jb
jmp
lods
pop
lods
pop
adc
mull
jno
pop
hlt
aad
mov
mov
xor
lods
pop
push
xchg
inc
in
add
dec
mov
pop
adc
jns
xchg
jp
fs
jp
xor
fsts
ud0
mov
push
cmpb
mov
aas
nop
data16
xchg
mov
es
sub
popa
mov
ss
sbb
xor
addr16
pop
insl
cltd
push
sti
sti
mov
sbb
mov
mov
movsb
lock
cld
cmp
sbb
pop
push
out
jae
xor
mov
aaa
push
lret
pop
dec
mov
mov
in
xchg
adc
sbb
insb
test
and
inc
cmp
into
adc
mov
and
and
fidivrs
add
push
loope
and
sbb
sti
xlat
inc
cmp
pop
test
xchg
sbb
cmc
jne
mov
push
cmp
call
clc
lods
jge
xchg
or
imulb
pop
jb
stos
xor
pop
xchg
lret
sbb
shll
adc
subb
xor
lret
fwait
int
xchg
inc
push
inc
xchg
icebp
or
push
pop
inc
mov
in
jns
les
scas
pop
pop
mov
insb
movswl
stos
pop
add
and
inc
and
lds
sbb
xorb
aad
and
scas
aam
int3
dec
mov
sub
xchg
rorb
idivl
mov
sarb
push
mov
mov
pop
popf
push
or
xor
xchg
sbb
mov
out
repnz
call
inc
sub
sarb
jae
scas
pop
xchg
ljmp
incb
add
std
cmp
std
out
int
cld
adc
jl
push
ror
outsb
mov
pop
adc
in
mov
icebp
shll
in
je
insl
jne
das
pop
sub
scas
inc
adc
ja
mov
mov
and
sub
mov
sub
repz
das
xchg
pop
jnp
imul
fwait
nop
add
enter
add
lods
mov
adc
cmp
jmp
repz
xor
enter
adc
ljmp
out
test
add
and
pop
cmp
push
mov
pop
stos
mov
xchg
cmp
cmp
sbb
sahf
xor
push
imul
iret
repz
mov
xchg
mov
pop
loop
sarl
mov
filds
inc
data16
hlt
sbb
lahf
pop
sti
push
inc
mov
add
sub
mov
cmp
mov
sbb
dec
add
dec
fcmovnu
or
sbb
sub
fmulp
shl
and
imul
fwait
push
add
jne
push
dec
scas
aas
and
ds
ss
fwait
inc
stos
imul
in
nop
sarb
xchg
or
push
cwtl
add
std
stc
test
popf
imul
lea
push
mov
ret
push
mov
cld
add
repnz
sbb
dec
sbb
movsb
out
orl
insb
repz
lea
sbb
push
addr16
aam
das
leave
xor
repz
jmp
fcomi
xlat
ret
xchg
popf
mov
mov
xor
cmpsb
iret
and
cmpsb
loope
cmp
rol
cwtl
push
loopne
mov
mov
outsl
out
jecxz
mov
xlat
cmp
sbb
add
lods
scas
fistps
jmp
subl
inc
jp
dec
mov
sub
push
js
jo
imul
mov
or
cli
pop
pop
imul
fdivr
ret
out
lret
sub
add
mov
lods
hlt
bound
scas
push
lahf
mov
mov
sub
inc
lods
out
sbb
sub
lahf
fs
stos
das
pop
cmp
rol
cmp
ljmp
mov
sub
pop
bound
and
push
cmp
leave
mov
mov
cmp
pop
das
mov
cs
cmp
loopne
sub
ds
les
adc
stc
imul
idivl
repz
xchg
test
fsts
or
lcall
inc
aas
loope
pop
mov
lods
adc
cltd
xchg
lock
mov
loope
mov
pop
inc
jo
imul
jnp
and
lret
aam
pop
bound
pop
lcall
je
enter
pusha
lret
pop
add
pop
mov
push
add
adc
push
pop
push
scas
cld
and
gs
push
int3
incl
int
sbb
cli
push
ljmp
test
sarb
packssdw
xor
fistl
ret
pop
test
sub
ljmp
sub
sbb
fiadds
imul
ds
cmp
cld
nop
pushf
sbb
cs
push
fsubrs
mov
mov
cld
lods
in
int
mov
leave
loope
sbb
xchg
push
mov
stc
dec
jne
sti
pop
ret
add
xor
push
ret
stc
or
aam
lret
cmp
ror
xchg
fbstp
aad
xor
cmpsl
sub
or
push
loope
or
mov
test
out
rcll
xor
mov
out
jns
cltd
and
lea
mov
ret
stos
pop
xchg
movntps
scas
mov
xor
outsl
xlat
pusha
loopne
xchg
loopne
pusha
dec
ljmp
out
dec
mov
cmpb
adc
xchg
fldl
lahf
and
sub
in
arpl
jne
leave
pop
lret
push
xor
mov
movsb
cmp
lret
mov
mov
lret
xor
fisttpll
scas
jne
mov
sbb
push
jns
xor
testb
inc
stos
shlb
dec
pop
push
loope
or
pusha
inc
inc
std
shll
pusha
enter
popa
fs
mov
sub
xor
rorl
xlat
inc
jmp
int
push
aam
pop
push
in
sbb
idiv
mov
xor
pop
jb
push
xor
das
add
popf
dec
cwtl
sti
fdivl
mov
mov
inc
or
mov
in
xor
arpl
stos
fisttpll
fmull
xor
jno
cs
push
popa
xor
xchg
ret
in
fists
xlat
inc
mov
outsl
mov
sbb
fnsave
movsl
daa
mov
loope
xor
mov
sbb
sbb
push
or
mov
aad
mov
dec
les
stos
gs
pop
inc
or
rorb
cmp
out
jbe
mov
adc
jl
or
addb
loopne
jecxz
jecxz
outsl
jmp
dec
test
sbb
pop
pop
xchg
addb
push
xchg
cmp
cltd
xchg
sbb
cmp
adc
inc
mov
jp
dec
sub
aad
xor
jge
imul
inc
mov
cs
push
push
push
cmp
scas
jb
call
push
rcll
add
es
lods
movsb
push
ds
pop
xchg
jge
hlt
scas
sahf
sbb
mov
lods
sti
movsl
pop
je
sub
inc
fcoms
testl
negb
arpl
scas
sbb
sub
xor
pop
test
jecxz
pop
pop
das
adc
xor
out
dec
int3
xor
in
in
add
mov
sub
cmp
xor
mov
push
hlt
mov
in
mov
push
fcoml
test
shll
popf
lock
out
insb
xor
xchg
leave
or
enter
inc
stos
pop
mov
add
out
dec
jno
and
sbb
mov
stos
ja
jge
inc
insb
xor
jns
dec
inc
nop
adc
mov
push
sbb
xor
fstps
jl
stos
mov
adc
test
sti
or
sahf
hlt
icebp
ss
cmp
subb
pushf
cmp
outsb
fbld
pushf
fcomps
pop
fistps
arpl
jbe
xlat
adc
cmp
sub
stc
test
pop
je
stc
iret
sbbl
jmp
arpl
outsb
mov
ret
scas
daa
xor
loop
imul
push
mov
das
sub
jp
push
sbb
mov
test
xor
stos
subb
out
ljmp
cltd
inc
mov
xor
mov
loope
fwait
testb
mov
lahf
enter
pop
xor
jg
in
add
sbb
sub
in
mov
hlt
pop
add
xchg
sarl
sbb
idivb
ds
sbb
fnop
mov
push
aas
subb
xor
jae
sahf
push
clc
jnp
jne
rorb
cld
into
pop
jecxz
jb
jp
imul
fisubrs
cmp
adc
push
out
cmp
cmc
in
and
mov
sub
sbb
scas
aaa
ret
sub
arpl
insb
pop
std
and
and
push
ret
sub
lret
fdivl
push
xorl
fcmovnbe
hlt
xchg
pop
sbb
jmp
dec
rcrl
push
jo
mov
pop
add
cli
das
lret
xchg
ret
jnp
sbb
nop
inc
sub
cwtl
pop
or
sub
test
outsl
cli
and
out
test
mov
hlt
int3
in
rcrb
push
lahf
out
jp
jno
icebp
xchg
aad
jne
movsl
sub
fdivrp
xlat
mov
push
ror
movsb
pop
imul
xor
cltd
aad
repz
jbe
out
and
pop
sbb
and
mov
insl
mov
push
fcmovnu
sarb
or
sbbl
push
or
mov
add
pop
pushf
in
sub
jmp
adc
push
cmp
push
inc
mov
adc
lods
mov
cwtl
scas
sbb
jl
inc
pop
xchg
jns
lcall
in
outsl
jnp
mov
sub
push
jae
ret
cmp
mov
out
les
jae
lahf
and
pop
rorl
pop
mov
jp
nop
hlt
and
xchg
call
xchg
fbstp
add
inc
sbb
or
lods
mov
push
or
push
push
cmpsb
repnz
dec
je
and
or
mov
sbb
cmpb
lea
cmp
movsb
inc
rorl
lock
pop
mov
cld
les
push
bound
insb
and
xchg
addb
lea
pop
les
jg
cld
ljmp
adc
test
cmp
inc
out
loop
lock
jb
add
negb
adc
mov
mov
jb
adc
push
stos
xchg
mov
cmp
dec
and
cmpsl
push
test
and
sbb
subl
lcall
adc
push
movsl
push
inc
shl
xchg
rorl
outsl
dec
lcall
out
jnp
cmp
xor
pop
xor
into
ror
sub
test
cmp
movsl
jecxz
pop
mov
data16
add
enterw
mov
adc
ds
lahf
scas
mov
jge
push
xor
out
popa
xchg
mov
add
pop
fildll
jbe
lea
repnz
lret
aad
push
push
dec
fnsave
in
adc
and
out
sbbl
gs
popa
pop
xor
outsb
lods
dec
sub
scas
fs
cmp
ffree
gs
add
jp
pop
mov
dec
xor
add
ljmp
mov
aas
rolb
mov
mov
es
jns
cs
push
and
addr16
movsb
lahf
lods
mov
push
out
in
lods
lds
cmpsb
mov
push
scas
and
xor
orl
add
dec
push
scas
movsb
call
mov
mov
scas
xchg
call
pop
cmp
dec
movsb
shrl
cwtl
sub
jnp
pop
fldcw
stc
dec
jl
xor
xchg
loopne
or
aas
jae
es
jb
push
nop
inc
test
sbb
int3
lahf
push
push
mov
mov
dec
and
jg
ljmp
mov
inc
jae
lock
lret
jge
mov
xchg
mov
out
mov
jle
inc
int
dec
jecxz
mov
xchg
sub
jbe
cmp
outsb
sarl
out
sbb
flds
xchg
sub
jne
inc
jae
pop
or
aaa
lahf
ret
outsb
addr16
aam
cld
mov
or
xchg
or
sahf
aas
sbb
in
filds
stos
jle
add
xchg
xchg
mov
adc
negl
or
in
cmpsl
pop
sub
sbb
dec
insb
bound
cmp
ja
repz
pusha
mov
lea
sbb
pop
jae
lea
outsb
jg
cmp
sti
jne
sub
out
sub
sub
dec
sub
xor
mov
movsl
popa
shlb
mov
dec
in
in
sbb
out
xor
stc
xlat
aaa
in
nop
xchg
cmp
mov
sti
xor
jl
into
fdivs
into
outsl
inc
movsl
icebp
sahf
push
pop
xor
outsl
mov
mov
mov
imul
jae
mov
xor
or
aad
pushl
jp
stos
scas
in
add
popf
cld
mov
sbb
int
mov
adc
stos
inc
mov
mov
sub
mov
or
pop
int
outsl
fcmovbe
jbe
cmpsl
mov
and
dec
hlt
xchg
movsl
fs
loope
xor
fsubs
sbb
mov
data16
sarl
sahf
jle
or
adc
jae
out
cmpsb
inc
sti
cmp
outsb
push
jb
mov
flds
pminub
les
push
in
jle
xor
push
jns
scas
xchg
rcrb
push
std
inc
add
cmp
jl
inc
call
in
jge
sbbl
jae
add
and
in
hlt
es
mov
outsl
cmc
lcall
mov
int3
and
adc
iret
mov
cmp
mov
pop
sub
xchg
inc
jp
dec
movsb
mov
sub
fcomps
roll
mov
add
mov
xor
test
addb
mov
lret
dec
sti
out
fsub
pop
pop
inc
jnp
push
mov
pop
sahf
push
shlb
jl,pn
mov
xor
ss
pusha
cld
xchg
mov
xchg
xlat
inc
and
mov
jle
shlb
ret
dec
subl
sub
sub
cmpsl
mov
mov
push
test
aas
or
xchg
cmp
jbe
mov
cld
adc
and
cld
ljmp
mov
lcall
mov
negb
or
dec
sbb
cmc
test
xchg
sub
xchg
int
mov
jo
clc
add
movsb
add
mov
test
test
mov
add
stos
mov
inc
aaa
movsl
xchg
push
loope
bound
repnz
cmp
fsub
jge
xor
fmuls
add
or
fisubrl
jecxz
lret
popf
mov
mov
aad
adc
push
inc
ds
aad
mov
cmp
fidivs
mov
jecxz
andl
sbb
adc
pop
roll
test
push
cltd
jnp
mov
xor
jbe
mov
ror
in
mov
mov
sub
xlat
dec
inc
inc
movb
xchg
mov
mov
stc
ja
or
mov
inc
xchg
add
das
cmpb
out
adc
js
dec
mov
fmull
dec
out
test
jo
add
dec
xchg
lcall
add
insb
mov
or
mov
das
aas
test
incl
fcmovu
jge
cmpsl
lods
loop
shll
incb
push
fldcw
add
xor
cmp
dec
pushf
xor
out
adc
das
mov
cmp
jg
lods
aad
pop
movups
push
test
dec
pop
cmpsl
xor
sti
lcall
xchg
lcall
inc
scas
lods
ljmp
pop
and
stos
push
imul
jle
test
xchg
inc
and
lods
mov
cmp
mov
cld
jecxz
mov
shr
loopne
mov
push
subb
ljmp
mov
lret
shlb
shrl
lret
orl
bsf
sub
pop
pop
sub
lahf
dec
shll
fdivl
push
xor
jmp
imul
mov
lret
mov
aad
mov
sbb
cli
jmp
mov
movsl
inc
lcall
int3
or
adc
cld
popl
test
push
dec
adc
jle
inc
fistpl
scas
pusha
out
or
mov
loop
ja
or
cmpsl
lods
imul
add
in
shl
inc
sub
sub
repnz
cmp
data16
pusha
test
in
ss
xchg
xchg
fcmovb
or
mov
mov
cmpsl
mov
test
outsb
xor
daa
mov
insb
inc
pop
sahf
inc
call
dec
push
xlat
mov
sub
or
pop
arpl
out
ss
xchg
test
cmp
push
lret
scas
ds
sub
cmp
loop
cmpsb
and
adc
mov
sbb
scas
xor
sub
adc
mov
mov
out
aas
jmp
insl
jae
sub
mov
cmp
push
test
mov
mov
pop
psrld
pop
mov
dec
xchg
sbb
out
push
push
repz
sub
lahf
jmp
mov
mov
stos
aam
dec
jmp
idivl
outsl
or
pop
cmpsb
aaa
cmp
xor
daa
std
int3
mov
or
out
mov
test
adc
ffree
add
fdivs
testl
mov
mov
je
aas
push
dec
mov
lods
fisttpll
loopne
enter
push
imul
mov
xchg
xchg
mov
add
pop
sub
push
dec
push
or
out
push
rclb
sbb
pop
inc
mov
add
inc
movsb
inc
mov
outsb
fs
fstps
js
adc
stos
jo
push
sub
mov
fs
sahf
les
das
popa
inc
movsl
fidivs
pusha
push
hlt
decb
or
loop
stos
adc
es
cli
or
pop
outsb
mov
bound
jae
jge
jbe
es
lahf
fisubrl
fildll
fildll
pushf
stc
dec
aaa
push
jb
scas
mov
push
mov
fcomps
fistps
loope
clc
outsl
out
inc
rorb
sbb
dec
inc
fdivp
test
test
andl
arpl
xchg
in
in
fldcw
cmpsb
push
fdivrl
int
aas
adc
int
dec
cmpsl
dec
xor
out
nop
pop
rcr
movsl
pop
fdivs
fisttps
fs
adc
adc
dec
lds
cmpsb
push
je
mov
add
mov
loopne
jno
cltd
addl
adc
mov
addr16
push
cs
lret
roll
shll
inc
or
xor
add
cmp
add
sbb
outsl
insb
adc
dec
xor
jl
fnstenv
jb
mov
xchg
sahf
and
dec
adc
adc
sub
and
jbe
sub
gs
insb
and
nop
out
fstl
into
inc
mov
scas
xchg
insl
in
int3
movsl
imul
scas
inc
sbb
lea
inc
mov
in
sbb
mov
xchg
inc
pop
inc
imulb
dec
sbb
lds
sbb
dec
push
std
jle
arpl
cmc
rcrl
test
xchg
into
jecxz
jns
cmp
es
or
lcall
add
dec
jne
cld
xchg
pop
mov
inc
mov
jl
iret
lods
mov
mov
and
inc
out
pushf
cs
push
jle
and
ljmp
xor
scas
pusha
fidivrs
xchg
mov
xor
repnz
push
iret
out
mov
in
xlat
cld
lock
cmc
xchg
dec
test
jbe
jbe
dec
stos
mov
cmpxchg
mov
jae
shrl
and
dec
pop
fistl
aaa
into
into
sbb
dec
cmp
outsb
pop
mov
xchg
jno
les
jmp
jnp
aad
pop
fs
xor
bound
pop
movsl
shl
sub
cltd
into
and
testl
mov
jae
lods
mov
push
lret
mov
mov
stc
repnz
mov
sbb
dec
inc
pop
fcomip
data16
mov
call
es
lds
xor
sbb
push
add
int
jo
sub
cld
or
aas
push
icebp
jbe
sti
enter
sbb
or
xor
cmp
arpl
or
jb
lret
push
loopne
fcmovne
mov
mov
xor
into
sbb
gs
xchg
xor
jmp
jno
push
icebp
xchg
and
cmp
lcall
je
sbb
cmp
cs
sub
hlt
inc
scas
mov
inc
fsub
mov
pop
flds
loopne
jbe
ret
xor
sbb
and
dec
or
jle
xchg
cmp
cmc
xchg
mov
xchg
jns
inc
sub
les
cmp
push
lret
sbb
movsl
lret
aam
jge
fmuls
sbb
loop
mov
jbe
push
or
es
add
sub
movb
cmpsb
cmp
jo
dec
ljmp
cwtl
shl
push
push
add
bound
mov
mov
stc
loopne
les
dec
stos
lret
jnp
sub
pop
in
sub
adc
icebp
les
add
jp
dec
mov
xchg
fmull
out
xlat
int
ficompl
shll
mov
mov
jns
mov
jge
call
sub
fistpl
fiaddl
lds
in
add
and
ret
insb
iret
imul
pushf
mov
mov
fcoms
xchg
dec
addr16
cltd
fbstp
dec
out
mov
es
jb
sbb
push
outsb
aaa
push
orb
testl
sbb
jmp
adc
fwait
sahf
lea
aaa
data16
mov
js
xchg
and
push
push
pushf
test
dec
ret
ds
mov
cmp
test
or
xchg
xor
jns
cli
add
pop
xchg
pop
jns
lcall
mov
dec
mov
pop
push
dec
mov
imul
pushl
mov
jp
mov
pop
dec
scas
jns
in
jp
and
and
test
scas
pop
mov
push
sti
sbb
lock
cltd
mov
jb
in
adc
outsb
aam
mov
xor
test
outsb
in
cmp
jae
mov
insl
push
jmp
push
push
pop
aad
lret
int3
mov
test
andl
and
pop
jb
push
test
iret
mov
ds
jge
das
imul
mov
xor
ljmp
xchg
mulb
lret
push
out
jmp
pop
mov
adc
jbe
stc
int3
lret
imul
jl
in
sbb
ja
out
lret
test
xor
std
fistpl
test
mov
fsubrs
dec
mov
stos
int
movsb
pop
pop
xchg
mov
push
mov
inc
ficompl
pop
sahf
sbb
daa
out
insb
mov
mov
mov
addr16
popf
mov
xchg
push
adc
xlat
mov
pop
fstpl
fwait
je
cmp
leave
add
xchg
scas
popa
xor
imul
pop
jo
mov
xchg
scas
dec
mov
mov
push
out
lock
or
aaa
xor
dec
sub
fwait
sbb
in
cwtl
dec
das
movsl
stc
jno
jp
insl
sar
jne
shlb
enter
add
push
arpl
xor
popa
sub
or
jle
les
inc
addr16
or
lret
mov
pop
addr16
push
mov
pop
adc
and
stos
ja
aas
loop
or
or
jp
mov
movsl
jge
cld
std
xor
sub
sbb
or
vunpcklpd
fwait
adc
or
adc
or
mov
cmp
out
loop
call
in
popf
add
push
les
adc
jo
mov
loope
pop
aam
shll
test
dec
shr
xchg
cli
sbb
xchg
test
aaa
pusha
push
mov
in
mov
mov
ret
inc
ja
cmpsb
mov
mov
dec
dec
xchg
mov
pusha
mov
inc
enter
xor
loop
fidivl
push
fistps
xlat
ja
stos
sub
mov
add
add
mov
push
scas
lods
sti
lfs
or
add
jl
xor
arpl
add
sub
aas
cli
test
push
dec
pop
add
ffreep
lods
xor
mov
movsb
nop
ficoms
inc
fmul
pop
nop
push
test
inc
pop
aad
js
popf
dec
and
inc
or
sub
mov
out
shlb
rorb
cwtl
js
mov
jnp
test
cltd
sbb
loop
mov
in
std
jo
xchg
or
pop
in
shrl
jo
xlat
std
sbb
inc
shll
popf
xchg
or
fstps
cmp
imul
lahf
dec
push
and
jmp
jb
stos
dec
in
scas
out
xchg
movsb
negb
cmpsl
add
xor
mov
mov
dec
lret
xchg
lods
mov
adc
arpl
out
lret
sub
inc
pushf
sar
fiaddl
in
sbbb
mov
sbb
jns
outsl
out
and
push
sbb
mov
std
movsb
jecxz
xor
push
les
xchg
push
or
lret
movsb
xor
insb
adc
add
subb
lods
loopne
rolb
sbb
test
xor
mov
cmc
mov
out
xor
mov
mov
rcrb
cmc
dec
dec
and
xchg
xor
pop
xchg
mov
rorb
sbb
cli
sub
mov
js
mov
xchg
jne
in
shrb
jbe
inc
cltd
das
cmp
pop
je
repnz
jp
imul
nop
sbb
sbb
fists
cmp
or
pop
in
sub
jno
jo
aam
mov
leave
imul
jno
cmpsl
sahf
in
insb
xchg
lret
xchg
sti
dec
and
ror
mov
pop
repnz
xor
lea
stos
cltd
imul
xchg
mov
lret
jbe
loop
stc
dec
sbb
js,pn
addr16
add
mov
aad
pop
std
xchg
stos
aad
xlat
adc
test
imul
or
sbb
and
sub
fsubrs
shl
cmp
js
xchg
sti
cwtl
loope
dec
shl
int
mov
lahf
and
sub
outsl
or
mov
insb
mov
sti
mov
insl
jg
loopne
orl
cmpsb
xchg
adc
pop
pop
cmovno
cmp
push
inc
push
sbbb
out
or
out
sub
test
add
idivb
cmpsb
xor
pop
xchg
xlat
push
jne
xchg
fistpl
pop
mov
sub
jl
gs
loopne
das
push
push
jl
sarl
dec
sahf
lods
fwait
jne
in
outsb
xchg
xlat
push
cmc
enter
ret
dec
aas
jns
dec
adc
jle
outsl
fwait
enter
mov
loopne
push
fdivs
mov
add
fcomps
push
sbb
and
dec
push
and
ret
ss
adc
push
std
fwait
cmp
mov
dec
jl
mov
gs
or
sub
lds
inc
dec
imul
adc
lret
xchg
adc
aad
sub
pushf
out
into
cwtl
cmpsb
movsl
je
out
mov
lret
arpl
push
sub
inc
pop
ja
mov
push
jp
loop
push
inc
idivb
sbb
jmp
lret
lock
add
adc
mov
and
testl
push
movsb
jg
test
sub
or
mov
lods
out
fiadds
pop
test
jecxz
cmc
ret
in
shrl
jns
xchg
iret
xor
inc
mov
mov
mov
fsubrl
sbb
loop
test
sahf
cli
xchg
sbb
mov
add
fwait
repnz
jmp
je
push
das
jg
pop
add
push
add
nop
stos
cmc
inc
mov
scas
cmp
fdivrl
aas
xor
mov
data16
xor
flds
daa
mov
and
test
pop
fmull
mov
xor
fisubrl
fs
les
push
data16
les
insb
push
out
mov
pop
sahf
cmp
lds
push
and
dec
repnz
or
arpl
stos
or
sub
insl
int3
add
xlat
sbb
inc
inc
mov
adc
add
pushf
fistpll
bound
lods
es
push
dec
push
jb
pop
inc
jo
stos
inc
dec
fwait
ret
sbb
test
mov
push
stc
mov
call
cltd
inc
pop
jg
cmp
and
jbe
pop
outsb
stc
pop
cmp
cltd
lret
or
and
rclb
ljmp
xchg
push
xor
dec
pusha
bound
inc
add
stc
das
or
lcall
out
loopne
inc
sub
dec
enter
push
inc
adc
and
xchg
lds
push
mov
mov
fwait
sbb
cmpsl
call
mov
jb
mov
mov
adc
push
inc
and
mov
pop
sbb
stos
cmp
adc
mov
not
push
insb
or
testl
in
dec
push
sbb
xor
or
fistps
pop
clc
jp
or
jo
cwtl
xchg
mov
ljmp
in
andl
xor
movb
rclb
pop
mov
jo
mov
jmp
sub
int
xor
shrb
mov
movsl
lahf
mov
add
xor
daa
sub
xlat
mov
sbb
push
je
cmpsl
dec
xchg
lock
icebp
popa
push
movsb
inc
outsb
ret
pop
sti
mov
inc
out
or
add
dec
pop
mov
stos
lcall
stos
inc
push
xor
int3
cmc
arpl
mov
and
out
stos
dec
cmp
mov
mov
fldt
ret
mov
test
or
xchg
icebp
mov
xchg
mov
dec
xor
jecxz
xchg
sub
jns
pusha
in
cmpsb
dec
aad
insl
fmul
test
fmuls
mov
mov
sub
mov
les
dec
jne
pop
pop
insl
sbb
loopne
pop
mov
mov
cmp
das
leave
inc
pop
or
xor
imul
mov
sub
rcl
fstpl
mov
mov
add
scas
js
pop
or
out
int
add
mov
fists
pop
push
mov
dec
outsl
cs
ds
in
jecxz
mov
jne
lahf
lret
push
mov
lods
rdpmc
lahf
jns
jns
push
cwtl
push
jmp
pop
adc
sti
push
add
xchg
pop
mov
push
ja
repz
fwait
out
and
sbb
inc
or
push
movsl
jg
mov
add
jmp
pop
sub
das
mov
push
stos
lret
xor
nop
push
lahf
rorl
jg
clc
cmp
popf
outsl
mov
shl
pop
fistpll
xor
out
mov
jecxz
push
in
push
sbb
xchg
pop
mov
js
ljmp
testl
lock
add
in
mov
jno
std
push
mov
xor
imul
ret
ds
outsb
add
cmp
mov
pop
xlat
lcall
mov
mov
and
cld
mov
je
icebp
fs
test
vminsd
mov
sahf
mov
addr16
insb
dec
and
inc
mov
fldcw
lcall
mov
dec
cmpsb
subl
js
subb
jl
fwait
xlat
js
mov
lock
lds
dec
and
pop
xchg
add
sti
mov
sub
jp
stos
dec
add
fcmovnbe
push
xchg
dec
sub
stc
xor
sub
mov
out
push
movsl
pop
ljmp
cmpb
jb
inc
pop
imul
fucomp
lea
test
sub
add
cli
mov
xchg
pop
js
adcb
lock
ds
jb
push
out
rolb
mov
mov
scas
add
ficoml
adc
fmulp
inc
fists
push
cltd
sahf
in
adc
add
lret
imul
mov
loopne
into
jl
sub
and
inc
jg
leave
dec
push
dec
push
ss
aad
xchg
and
adc
push
jge
lret
pop
es
or
jp
icebp
popa
mov
mov
fidivs
mov
fwait
daa
adc
jle
mov
adc
add
jmp
scas
add
out
jb
xor
and
push
leave
mov
fdivs
test
jle
sbb
push
add
xchg
daa
test
pop
cmp
or
jp
mov
sub
mov
mov
movsl
test
xchg
in
mov
add
out
adc
add
mov
push
dec
loop
into
aaa
or
pop
call
out
or
pop
scas
das
daa
in
sbb
repz
cltd
pushl
mov
cmp
xchg
cwtl
jnp
pop
daa
mov
std
mov
arpl
mov
cmpsb
jae
or
xchg
fsubrs
lds
mov
mov
push
jecxz
push
iret
lcall
pop
cmp
inc
jle
rcr
iret
fimull
outsb
adc
dec
testl
fisubs
popa
fisttps
insl
add
loop
hlt
sub
xor
pusha
adc
stos
jae
in
icebp
add
cmc
flds
xor
mov
jno
sub
xchg
mov
xchg
ret
je
sbb
jo
jo
sbb
xor
dec
sbb
mov
test
push
test
jnp
sbb
adc
add
mov
pop
idiv
hlt
inc
pop
out
ss
add
cmpsb
bound
add
adc
cmp
fiadds
js
push
mov
push
dec
cltd
out
lods
das
and
push
insl
xor
xchg
stos
inc
sbb
and
push
xor
aad
cmp
insl
pop
sbb
ret
or
inc
jae
jp
inc
cld
test
pop
push
orl
lret
lods
xor
jmp
ror
fdivrs
es
movsb
stos
xchg
and
pop
mov
adc
sbb
jae
inc
pop
xchg
in
push
movsl
push
negl
std
xchg
adc
or
aad
aam
imul
mov
mov
fistpl
inc
mov
pop
dec
sbb
test
jg
mov
push
sahf
pop
insb
cs
push
add
outsb
fucomi
mov
pop
in
out
lret
xchg
sahf
jb
mov
xor
cmp
pop
nop
jno
jns
adc
popa
inc
into
inc
jmp
cmp
mov
sbb
lock
sbb
xor
sbb
mov
push
add
lods
xlat
jmp
es
lahf
jecxz
sbb
cmpsl
cmpsl
pop
fldt
das
rcrb
jb
mov
adc
inc
paddsw
jp
push
bound
jmp
fsubl
cwtl
push
fstl
mov
add
cmp
je
mov
dec
xchg
outsl
dec
jno
test
gs
jbe
jbe
scas
jb
push
mov
push
sbb
dec
arpl
add
sbb
jno
out
push
arpl
aad
sbb
jle
fldt
mov
insl
bound
xchg
aaa
arpl
arpl
jae
cmp
into
repnz
aas
ds
repz
pusha
stos
dec
mov
mov
jecxz
lds
ss
pop
lret
sub
push
ja
je
mov
add
test
scas
sbb
icebp
dec
push
sbb
add
and
addl
mov
adc
xchg
dec
cmp
mov
xchg
mov
enter
stc
imul
add
sahf
subb
in
mov
xchg
clc
sahf
adc
cmp
xchg
dec
ja
lret
stos
lock
rcll
out
das
inc
dec
jmp
mov
pop
loope
mov
dec
mov
cmp
fidivrl
shll
shrl
jne
fisttpl
dec
dec
mov
cmp
icebp
in
sti
xchg
inc
lcall
mull
cld
lcall
fbld
xchg
adc
mov
ja
pop
outsb
cmovle
push
cmp
mov
xchg
jge
idivb
in
ret
xchg
into
loop
cli
ret
outsb
dec
xor
inc
mov
idivb
mov
outsl
jle
jle
dec
bswap
clc
out
cltd
loopne
inc
fcompl
xchg
gs
testl
dec
bound
sub
into
out
cmp
fnstsw
ds
je
outsb
pop
ret
sbb
ss
pop
add
or
inc
outsl
xchg
movl
cltd
fwait
sbb
mov
shlb
xchg
adc
dec
jg
xchg
or
cmpb
xor
aam
push
inc
imul
xchg
mov
loope
dec
jmp
inc
cmp
adc
xlat
ljmp
jae
fcomi
and
jmp
pop
lret
negl
rcl
inc
js
or
inc
movsl
jmp
out
stc
mov
xchg
lret
je
ret
jge
mov
xor
fwait
scas
pop
or
addr16
xor
xchg
sbb
shl
fadds
test
loop
fwait
inc
lahf
outsl
popf
cmpsl
add
data16
jmp
cmpsl
mov
xchg
inc
jo
lock
sarb
mov
sahf
dec
rolb
pop
xchg
xor
xor
subb
aaa
xchg
shrl
das
sti
xchg
jecxz
ss
cmp
mov
ja
call
fwait
push
mov
arpl
or
mov
mov
lret
stc
xchg
pop
jmp
mov
repz
pop
into
pop
pop
sbbb
test
outsl
outsl
cli
sbb
jecxz
aaa
fcmovne
add
mov
jmp
je
xchg
mov
int
fimuls
adc
inc
popa
mov
xor
jl
cmp
jnp
inc
sbb
mov
ret
test
inc
movsb
push
push
insb
xchg
loopne
jl
pop
leave
rcll
sahf
sbb
push
push
add
sahf
fadds
sub
mov
imul
inc
cltd
pushf
sub
sub
sub
and
lcall
sub
mov
out
test
and
sbb
aad
inc
loop
push
xchg
jge
push
icebp
popa
xchg
cmc
mov
mov
hlt
shl
fsubs
lock
cmc
sarb
dec
jp
ret
jb
pop
fnstenv
mov
ja
push
mulb
in
stc
xchg
pop
sbb
stos
test
sub
sub
adc
dec
mov
in
dec
adc
outsl
inc
cmp
ja
fidivs
xor
into
lcall
jo
int3
jp
clc
sub
mov
enter
add
ret
subl
icebp
imul
cld
inc
or
stos
sub
mov
pop
gs
scas
fistpl
imul
xchg
xor
sahf
lahf
adc
sub
xchg
add
push
sub
loopne
or
xlat
in
fs
pop
dec
mov
shrl
sub
ret
xchg
fists
push
ds
movsb
xlat
lds
stos
inc
lahf
xchg
fstps
inc
inc
push
mov
lahf
loop
aas
fnstsw
dec
and
dec
int3
xchg
mov
jae
inc
jp
lods
jl
ss
lahf
clc
sahf
mov
dec
mov
insl
lret
push
mov
test
pop
frstor
lahf
sub
sbb
xchg
jge
scas
xchg
in
fs
and
xchg
jnp
inc
dec
movsb
jnp
sbb
mov
fwait
jne
inc
scas
jg
das
ror
mov
xchg
pop
dec
xchg
push
sub
aaa
pop
jg
hlt
insl
stc
mul
inc
jg
fs
sub
push
pop
out
aas
insb
mov
mov
mov
sbb
jo
ljmp
pop
scas
roll
dec
test
cmpsl
mov
add
ret
push
inc
xor
mov
pop
sahf
stc
mov
jns
xchg
mov
pop
jne
test
or
sbb
icebp
fs
bound
cmp
xchg
add
popa
lahf
pop
das
sub
add
mov
mov
push
movsb
subb
test
push
mov
sahf
jle
or
jge
and
inc
iret
daa
adc
lahf
scas
arpl
add
pop
pop
and
cld
gs
sub
int3
fdivs
insl
filds
stc
stos
sbb
stos
js
xlat
lea
stos
inc
lock
dec
adc
cmp
fbld
jbe
jg
mov
pop
and
mov
and
lahf
mov
push
add
mov
movsl
in
jle
push
leave
inc
jns
out
dec
int
push
popf
xor
mov
adc
dec
iret
mov
xchg
out
pop
xor
xor
mov
xchg
inc
iret
je
jno
dec
test
push
add
jne
stos
mov
and
xchg
cmp
push
loopne
fidivl
into
dec
or
rep
cmp
inc
nop
mov
in
test
mov
sti
jb
cmp
rolb
cmp
ret
das
cmp
insb
nop
dec
add
sub
loop
xorl
dec
stos
mov
ja
sbb
sarb
adc
push
and
jg
es
js
mov
dec
loop
adc
lcall
xchg
andb
inc
xchg
jae
xor
outsb
add
push
jae
insb
xor
or
adc
jp
push
loopne
jne,pn
push
imul
jecxz
adc
test
adc
jnp
sbb
fstpt
sti
outsb
aad
xchg
cmpsl
mov
or
in
lea
xchg
imul
lcall
or
mov
es
stc
insl
dec
inc
pop
xchg
fwait
cld
xor
jne
inc
das
pop
jae
mov
cmp
inc
out
pop
push
test
mov
jp
sub
and
push
movsb
cmp
and
bound
sub
imul
imul
and
xor
dec
mov
jns
mov
je
lret
push
ficompl
mov
into
outsb
popf
and
clc
jecxz
mov
out
sbb
push
sahf
jle
aad
push
mov
xor
mov
mov
xchg
inc
call
jns
jl
mov
ss
mov
inc
test
jp
and
jo
pop
dec
daa
jmp
in
sbb
xchg
mov
adc
ds
pop
jnp
loop
out
mov
daa
dec
mov
jbe
mov
mov
add
icebp
sarl
jno
loop
fildl
xchg
out
into
rorl
mov
xor
pop
inc
or
cmpsl
pusha
int
in
jbe
jl
dec
jae
pop
jae
pusha
and
or
lock
add
in
nop
pop
inc
pop
lret
mov
mov
jle
dec
lods
mov
std
push
into
jg
idivl
mov
pushf
adc
mov
pusha
pop
adcl
daa
cltd
sbb
push
mov
add
mov
xchg
push
mov
mov
jecxz
lods
pop
dec
les
pop
sub
in
dec
cmp
mov
jo
xor
pop
adc
rcrb
mov
insl
cmp
mov
movsb
outsb
arpl
sub
ljmp
add
enter
imul
aam
loopne
sub
std
clc
sub
cmp
push
test
fistpll
inc
rorl
rcrb
mov
fsubl
mov
sbb
pop
sbb
js
aad
jp
leave
imul
test
das
out
hlt
pop
aad
mov
inc
mov
jmp
mov
in
test
push
lahf
repz
sbb
aad
jl
cmpsb
aaa
or
push
mov
addl
mov
nop
clc
imul
xchg
or
xchg
cli
not
or
and
repnz
inc
lods
and
or
pop
add
dec
xchg
and
or
dec
add
outsl
icebp
push
push
push
das
gs
testl
add
insl
test
and
inc
pop
xor
cmpsl
jns
cmp
xchg
es
je
inc
loopne
loop
daa
xchg
enter
mov
dec
dec
or
pop
xor
dec
and
and
push
fsub
nop
shl
pop
mov
pop
lea
mov
outsb
cltd
jne
cld
fcomi
frstor
adc
fdivrs
xchg
inc
jg
cmpsl
sbb
xchg
addr16
xchg
pop
popf
dec
ret
mov
int
jecxz
shll
addr16
lcall
sub
jnp
pop
js
jmp
gs
xchg
ss
push
cmp
pop
aam
cmovl
inc
data16
data16
fcmovnb
sub
lcall
xchg
push
pop
jg
add
insb
bound
xor
sub
jnp
jae
lock
mov
adc
xchg
sahf
jg
jl
mov
cmp
push
jecxz
bts
lret
orb
stos
scas
cltd
xor
dec
lods
js
mov
xchg
fldenv
jnp
out
add
cmp
out
inc
or
lret
add
popf
andl
pop
out
fs
mov
cmp
jp
int
mov
mov
cld
rcrl
mov
aam
test
mov
pop
fdivs
cwtl
mov
mov
xchg
push
adc
xor
ljmp
xchg
int3
pop
out
xor
arpl
push
adcb
int
mov
jb
and
xor
incl
adc
cltd
mov
dec
dec
lods
xorb
stos
or
loope
xchg
jecxz
xchg
xor
sbb
dec
xchg
sub
push
xor
lods
cmp
fdivrp
es
jbe
mov
adc
fildll
push
jecxz
adc
gs
fs
jge
mov
call
sti
jo
cld
push
pop
mov
add
jno
bound
sbbb
insl
addr16
in
lret
fwait
or
ret
sub
cmp
out
sub
fimuls
push
push
and
imul
pop
leave
daa
cwtl
orl
xchg
jo
sub
push
in
sbb
jmpw
es
aam
mov
ret
jbe
adc
bound
pop
pop
mov
inc
out
ds
js
cltd
cmp
lcall
subb
out
lahf
popa
mov
mov
mov
pop
mov
rorb
mov
mov
or
lret
in
pop
jmp
lahf
mov
cmp
aad
pop
push
sub
loope
xchg
mov
cmp
repz
adc
xchg
fnstsw
fistps
movsb
lahf
mov
addr16
fsubl
inc
mov
negl
dec
xlat
scas
sti
adc
xlat
mov
mov
loop
daa
test
xor
adc
mov
loop
push
cmp
add
cmp
lds
iret
sub
bound
test
sbb
mov
sbb
mov
adc
jno
movsb
ljmp
mov
cli
rcl
push
aam
lahf
addr16
mov
xchg
iret
std
lea
fldt
stos
dec
ret
shl
scas
mov
mov
rcll
insb
or
or
dec
lods
dec
mov
adc
stos
mov
push
jmp
in
inc
mov
adc
arpl
aam
in
sbb
sub
bound
xlat
sub
test
pop
xchg
std
sti
aas
xlat
xor
jge
std
imul
or
inc
movsl
test
sbb
lcall
mov
mov
xchg
filds
pop
lock
ja
push
imul
movsb
dec
je
aam
in
mov
sbb
dec
ret
lcall
dec
mov
rcl
out
pop
out
mov
sahf
mov
sbb
lret
dec
mov
xor
insl
ret
xchg
data16
adc
popf
outsb
fists
enter
ja
imul
loop
test
add
xchg
push
ja
mov
or
call
leave
dec
jae
cli
push
inc
jno
cmp
jecxz
inc
stc
mov
mov
or
cld
pop
dec
mov
dec
mov
loop
xlat
loop
loope
jns
jae
fs
sbb
dec
push
or
jns
push
outsb
insb
iret
pop
jae
aaa
das
decb
fnstcw
aad
add
rorl
mov
pop
xor
mov
mov
dec
sub
shrl
lds
fimull
aaa
es
insb
jne
mov
mov
mov
pop
add
adc
inc
mov
fwait
pop
pop
fwait
aas
mov
insl
push
and
scas
push
sbb
loop
mov
fs
shlb
sti
in
pusha
jmp
xchg
es
cld
sub
nop
mov
test
scas
sub
inc
loope
nop
xchg
pop
add
push
sub
fstpt
lds
jge
sub
xchg
mov
fldl
xchg
cli
mov
ljmp
adc
push
mov
cmp
enter
scas
jns
in
dec
sub
mov
stc
in
test
add
add
pop
lea
jns
test
pop
mov
test
loop
movsb
xlat
or
push
mov
cmp
lods
hlt
clc
push
pusha
jo
movsb
mov
je
mov
aas
shrl
push
mov
mov
fdiv
bound
dec
dec
mov
mov
sbb
jo
lret
inc
enter
mov
fsub
dec
hlt
in
jp
inc
push
scas
mov
push
pushl
outsl
ret
in
add
jno
ds
jg
sbb
call
xor
xlat
sub
loope
inc
inc
cmp
mov
mov
loopne
jl
push
push
or
fsubrl
lcall
testb
std
mov
scas
xchg
stos
jae
cwtl
rep
inc
ret
dec
dec
iret
fiadds
push
call
outsl
or
sbb
ficoms
cmp
arpl
or
stc
decl
dec
imul
xor
imul
aam
cmp
cmp
setge
es
mov
cltd
ss
mov
mov
xchg
adc
add
divl
mov
add
je
mov
clc
icebp
call
or
xchg
mov
inc
sbbl
xchg
push
jmp
sahf
lret
inc
sbb
mov
xor
adc
cs
jmp
mov
pop
sbb
test
mov
add
xchg
adc
inc
cmp
xor
imul
insl
adc
push
fisubrs
cmp
fstpt
inc
in
and
xchg
mov
add
lods
and
je
adc
adc
stos
adc
jb
pop
inc
std
jae
inc
xor
cli
and
or
or
sub
fisubs
push
mov
lea
jecxz
jmp
push
push
lret
cli
sub
in
sbb
pop
sbb
ja
xor
ret
jae
mov
int
movb
jmp
lret
pop
dec
sbb
outsb
test
out
inc
pop
fisubrl
push
push
or
pop
fcmove
je
mov
icebp
frstor
ss
xchg
jnp
xchg
out
add
ficomps
int
lahf
jns
dec
mov
sti
mov
bnd
sbb
dec
test
loope
lahf
mov
call
xlat
jae
cmpsb
dec
inc
cmp
mov
arpl
or
pusha
aaa
xchg
add
aas
add
xor
sbb
lahf
ret
mov
int
shll
mov
inc
cli
or
push
icebp
lods
adc
push
dec
lock
or
lret
cltd
fs
rcll
xchg
adc
and
enter
insl
fimuls
or
icebp
imul
mov
cmp
or
pop
add
or
or
xor
mov
negb
cmp
daa
xor
or
pusha
aam
dec
stc
lahf
test
outsl
in
ficomps
cli
jae
insl
shll
and
push
and
out
jl
sbb
mov
movsb
mov
jmp
xor
mov
cld
fs
dec
pop
dec
loope
and
dec
cwtl
iret
aad
cwtl
and
dec
inc
or
cli
lods
fidivrs
jge
sub
imul
arpl
mov
xchg
and
xchg
dec
lds
and
in
idivl
sbb
dec
jns
jl
or
bswap
sub
imul
fcmovnbe
movsl
inc
jmp
cli
dec
mov
cwtl
mov
xchg
shlb
inc
fcompl
jns
mov
push
push
test
mov
jmp
pop
push
inc
or
cmpl
dec
les
sub
or
lret
nop
xlat
rorl
xchg
popf
mov
loopne
lea
xlat
lret
jb
ficompl
push
outsb
or
shll
fwait
loopne
inc
and
jae
xchg
clc
and
or
movsl
sbb
dec
stos
fs
jge
mov
push
mov
pop
mov
aaa
decb
mov
adc
add
pop
sub
in
rorl
xor
cmp
loopne
rorb
or
outsb
loop
out
cmp
mov
mov
mov
jmp
shll
adc
pop
je
jb
bound
cmp
shll
shr
pusha
outsb
out
imul
push
stc
or
pop
jg
rorl
fcmovne
fucomp
inc
shl
jo
or
cmpsb
and
fsubr
rol
subl
repnz
pop
add
das
lcall
or
js
iret
repz
cmp
sub
xchg
inc
addb
out
cmp
iret
lea
fdivl
enter
and
mov
adc
enter
cmp
or
mov
aas
mov
adc
fimull
or
aad
test
and
and
adc
push
cmp
test
sbb
rorl
arpl
popf
jg
out
cmp
dec
mov
jecxz
mov
dec
fstps
push
icebp
fisttpll
cld
pop
mov
or
pop
and
aas
cmc
xchg
ret
push
xchg
inc
dec
lret
addr16
sub
add
inc
int
push
inc
loope
mov
mov
aad
push
ds
jecxz
mov
popf
xchg
inc
negl
aas
lock
or
mov
add
lds
or
mov
test
loope
mov
sub
lock
sahf
ja
sbb
inc
mov
cli
add
fnstenv
inc
sbb
rcr
test
fs
cld
out
or
and
aad
andl
std
jmp
xor
stc
addb
testb
inc
mov
stc
testb
sarw
pop
andb
mov
cmpsl
sub
test
hlt
and
or
xchg
pop
pop
add
and
cld
and
div
cmp
repz
decb
mov
pop
pop
fstps
fstpl
fstpl
mov
dec
push
push
jg
loop
mov
mov
lcall
sbb
cmp
cmpsl
in
adc
push
mov
out
scas
cmc
lcall
push
pusha
cmpb
or
insb
sub
rclb
dec
cltd
in
dec
stos
les
int3
ja
cli
or
jnp
test
mov
xor
js
test
pop
jle
vmread
movsb
sbb
sbb
add
add
push
jmpw
push
inc
sbb
out
arpl
lret
mov
cmpsb
push
fsubs
fsubs
je
test
and
ret
mov
test
inc
adc
jae
jl
cmp
push
ds
cmp
inc
xor
mov
lods
or
or
mov
jnp
and
or
mov
scas
mov
xor
scas
stos
sti
mov
ret
mov
pop
je
push
and
fsubl
sub
jns
cmp
xchg
aad
aaa
add
pop
and
pop
xchg
xchg
mov
add
fs
nop
loope,pt
ljmp
inc
lock
push
lahf
lods
mov
scas
jne
dec
push
inc
enter
mov
in
mov
stc
xor
dec
xchg
imul
fstl
pop
jg
add
mov
mov
ljmp
xor
or
aaa
in
das
repz
jg
dec
dec
add
imulb
jl
dec
pop
xchg
adc
cmp
dec
mov
test
mov
cmpsl
ret
test
movl
and
ret
adc
into
push
icebp
or
std
hlt
mov
xlat
pushf
inc
cli
out
cmpsb
push
cmpl
and
in
out
sbb
aam
mov
mov
dec
lret
adc
adc
ret
mov
sbb
cltd
xorb
add
inc
inc
jl
cmp
movsb
ss
pushf
lods
dec
pop
and
xor
or
adc
int
push
inc
cmp
addr16
fcoms
fisttpll
fmull
push
cmp
int3
int3
inc
pop
mov
pop
hlt
xor
push
icebp
mov
mov
fstpl
or
dec
subl
push
ja
or
icebp
mov
and
fldl
add
in
das
outsl
into
sti
lcall
addr16
sbb
mov
xchg
test
mov
jmp
or
lret
orl
lock
and
push
xchg
cmp
mov
dec
add
stos
mov
sub
iret
mov
sbbl
mov
mov
jg
lcall
sbb
add
leave
lock
mov
xor
add
les
out
stos
fstps
out
mov
fdivrs
lret
out
dec
js
iret
loopne
inc
mov
pusha
xor
imul
enter
int3
shufps
or
int3
or
outsl
cwtl
pop
fcmovbe
cmp
inc
push
add
push
lds
cld
gs
mov
jl
mov
cli
sbb
mov
orb
xchg
in
fcomps
xlat
fcmove
cmp
mov
fst
pop
xor
jno
jnp
prefetch
or
pusha
in
cmp
jne
add
push
test
fwait
popa
sub
adc
insb
lret
imul
pop
jne
arpl
loope
dec
jmp
nop
xchg
xchg
flds
jmp
or
inc
and
sub
xor
inc
mov
pop
sub
add
push
xorb
in
mov
add
sahf
int3
fld
xorl
pop
test
adcl
imul
pop
es
inc
jo
rorl
lcall
adc
aam
xor
mov
icebp
stc
lods
and
pop
push
int
cmp
and
sarb
xchg
insl
push
call
arpl
pop
and
sub
jns
push
vpshlw
test
test
push
mov
sub
fcomip
push
icebp
mov
push
inc
mov
xchg
test
add
dec
xchg
jno
sarl
rcrb
mov
mov
leave
mov
cli
int
push
cmp
idivl
iret
push
std
sbb
jno
mov
xorl
push
sti
push
push
and
pushf
in
jb
pop
out
pop
cld
add
int
add
xchg
out
arpl
in
push
subb
dec
cmc
inc
idivb
lret
imull
pop
push
lcall
in
movsl
stos
sbb
call
cmp
into
les
popa
push
lock
mov
jl
int
dec
stos
xor
addr16
mov
scas
arpl
jl
gs
mov
les
popf
mov
aas
cli
aas
popf
adc
imul
sarl
clc
push
mov
mov
pop
fldenv
jne
cmc
std
std
lods
sarl
add
cmp
xchg
sub
inc
mov
mov
lods
dec
or
pop
mov
cmp
and
mov
aas
push
aam
call
insl
leave
dec
lock
insb
and
jecxz
xchg
ds
outsb
insl
or
repnz
push
and
mov
mov
popa
das
pop
lock
scas
adc
pop
sub
jb
and
inc
cmp
push
std
jl
jb
pop
adc
push
mov
jmp
cs
or
out
dec
sub
pop
jmp
inc
mov
mov
mov
sbb
push
clc
shll
cmp
mov
in
pop
xchg
dec
and
sbbl
nop
outsl
sub
iret
ds
fs
push
add
push
jle
mov
aam
adc
imul
cld
bound
rcl
pushf
rcrl
inc
or
adc
xchg
jne
jo
shll
stos
mov
pop
xchg
jb
inc
test
pause
ss
sub
cmp
xchg
stc
or
and
divb
pop
hlt
imulb
mov
jno
ret
jo
cmp
jae
repz
jle
ss
lahf
xchg
out
mov
mov
insl
push
adc
in
imul
lcall
push
dec
sbb
mov
add
mov
js
fcmovnb
jge
nop
ss
jmp
mov
test
sbb
insb
xchg
pop
aas
fidivs
in
xchg
pop
adc
test
pop
shl
xchg
pop
add
sub
enter
mov
pop
xchg
mov
test
push
cmpsl
repz
push
movsl
scas
cmp
lods
xchg
out
arpl
cld
inc
mov
xchg
cwtl
in
cli
inc
inc
pop
ja
cmp
dec
popf
dec
adc
adc
adc
pop
iret
mov
andb
pop
xchg
cmp
loopne
push
or
out
movsb
lahf
iret
mov
jnp
fnstenv
mov
add
xchg
loope
ficompl
sbbl
nop
inc
sbb
cwtl
sbb
pushf
xorl
sar
rclb
push
mov
pop
xchg
pop
jae
xor
pop
in
icebp
push
fisubrs
sub
mov
test
test
shlb
clc
mov
enter
testb
jae
arpl
mov
add
or
cmp
test
stc
push
or
cmp
mov
add
shll
cmp
movsb
mov
mov
dec
stos
or
scas
push
iret
std
popa
call
jmp
int3
cmpsb
jb
nop
into
in
push
imull
jbe
and
and
loop
lahf
out
adc
mov
cli
mov
jl
or
push
cmpsl
jbe
lea
adc
mov
add
jmp
int
cld
sbb
xchg
js
stc
int3
fwait
and
or
mov
or
jmp
or
out
rcl
les
ds
clc
es
out
dec
addb
mov
pusha
cmp
dec
or
cmp
in
mov
pusha
xchg
rol
out
cltd
out
push
mov
add
scas
movsl
mov
test
xchg
push
in
add
aaa
mov
cld
cmp
dec
pop
sti
shlb
push
cmp
hlt
sbb
dec
lods
dec
addl
cmp
jge
lock
inc
jge
add
or
lahf
dec
pop
cmp
xorl
repnz
sbb
sub
xor
ret
mov
add
xchg
fdiv
addr16
and
les
lret
rep
or
and
pcmpgtb
dec
stos
dec
sbb
loop
sub
aaa
outsl
enter
shl
test
divb
cld
jne
data16
ss
popa
jle
sub
popf
ss
ja
jno
paddb
inc
mov
cmc
scas
fsubrl
mov
inc
xchg
cmp
daa
lcall
push
loopne
sbb
icebp
pop
cmp
pushf
adc
mov
lcall
fistpll
adc
imul
jecxz
cmp
jge
and
pop
repz
adc
pop
inc
sub
dec
fs
addr16
in
jge
nop
jne
cmp
gs
ja
rcll
lods
jne
pop
popa
inc
cwtl
imul
bound
loope
push
out
cmp
pop
sub
xchg
sub
arpl
and
popf
mov
push
push
arpl
xor
mov
stos
cwtl
xchg
fistpll
out
pop
loope
insb
dec
test
data16
pop
or
pop
fimuls
fimull
test
jp
inc
rorb
das
icebp
pop
push
cmc
pop
add
xor
sbb
movsl
iret
test
jl
pop
iret
xchg
outsb
jmp
mov
push
out
adc
jg
sub
pop
and
xchg
sbb
rclb
mov
add
xorl
cmc
mov
dec
stos
shlb
stos
pop
push
fwait
shr
out
sub
aad
mov
push
sub
imul
pop
cwtl
cmp
fimull
cmpb
das
push
add
dec
scas
enter
lea
or
adc
push
dec
pop
sbb
cmp
pushf
xchg
xlat
ljmp
out
pop
insb
ss
or
js
enter
inc
movsl
xchg
push
sahf
sbbl
dec
mov
adc
adcb
mov
dec
cmpsl
mov
in
cli
add
in
adc
mov
sbb
in
adc
sarb
cli
xchg
inc
dec
imul
repz
stc
loop
and
sub
mov
jle
xchg
adc
pop
pop
inc
xor
or
test
push
inc
or
lret
in
and
les
sbb
fldlg2
or
popa
ds
mov
mov
mov
sbb
sarb
enter
mov
push
pop
add
inc
mov
sbb
xchg
sub
inc
sub
cmp
jae
aaa
inc
push
in
cltd
out
out
je
scas
or
push
jecxz
xlat
and
dec
in
sahf
xchg
xor
xchg
out
jp
popf
mov
adc
jmp
push
mov
adc
les
dec
mov
ljmp
xchg
sub
inc
pop
mov
cmc
rcll
sbb
pushf
adc
jg
or
pop
cltd
ljmp
mov
mov
scas
dec
dec
imul
out
outsl
xchg
push
addb
out
into
scas
adc
mov
xchg
mov
sbb
insb
sub
mov
jns,pn
xchg
mov
rcrb
jbe
dec
mov
or
sbb
pop
addb
xchg
aas
mov
aaa
icebp
xor
push
pop
roll
mov
hlt
mov
jb
mov
in
pop
xor
push
and
and
mov
xlat
jbe
push
xchg
or
iret
cmc
sbb
fimuls
cmp
sub
jns
out
fldcw
cmpsb
jl,pn
sahf
or
push
inc
cld
aam
movsl
loopne
or
cmpsl
movsb
add
test
stos
movsl
xchg
jp
or
cmp
fdivrl
movl
ret
push
pop
lds
inc
push
popa
mov
dec
aas
mov
insl
xchg
mov
mov
out
or
pop
shll
inc
dec
push
les
aas
xchg
xchg
jle
xchg
insb
out
shl
pop
int
xlat
in
nop
or
lods
jns
or
mov
out
repnz
xchg
leave
pop
adc
add
movsb
pusha
ljmp
mov
loopne
xor
xchg
addr16
ljmp
leave
mov
frstor
jo
ja
dec
sbb
adc
out
and
mov
adc
clc
cs
cmp
bound
shld
ljmp
dec
imul
mov
inc
stos
mov
imul
inc
adc
in
or
sti
add
mov
or
insl
jbe
sub
repz
ss
cmp
out
aas
imul
bound
xor
mov
jb
jecxz
dec
jnp
push
test
xor
testb
ret
lods
sbb
into
mov
insl
dec
mov
pushf
and
fstpl
adc
pop
mov
jle
sahf
hlt
inc
int
and
lret
in
or
jb
xchg
cmp
fstl
inc
cmp
aas
mov
loop
add
inc
sarb
mov
jecxz
mov
repz
mov
fistpl
lods
out
cmc
jo
ret
fisubs
popl
mov
into
cltd
fiadds
call
pop
ds
adc
data16
and
sbb
and
repz
int3
xor
jecxz
inc
lods
xchg
xchg
cmpsb
push
dec
int3
rcrb
pop
jmp
popa
push
les
sub
cmp
dec
xchg
xor
cmp
aas
movsl
movsl
sahf
in
xor
mov
push
dec
fcomp
mov
adc
in
and
sarb
adc
sub
xchg
nop
adc
cli
jmp
mov
or
out
jle
inc
mov
or
mov
mov
dec
loope
repz
jge
jo
sbb
lret
push
jge
push
subb
fistpl
ret
xor
rcll
sbb
nop
push
cmpsb
int
adc
or
cmp
imul
aam
ror
pop
sub
lret
mov
ja
fimuls
mov
repz
dec
pop
adc
imul
test
bound
jl
sbb
cmp
mov
sub
mov
imul
lds
cmc
jae
out
inc
xchg
push
dec
sub
iret
leave
js
pop
push
jp
int
cmpsb
mov
push
pop
adc
jae
and
and
rcr
mov
pop
pop
sar
and
sbb
testl
je
lea
movsb
inc
mov
cmp
and
add
mov
mov
pop
cmp
or
mov
aam
dec
lret
mov
fadds
xor
repz
push
mov
test
sbb
je
loope
roll
add
movsl
ficomps
mov
inc
decl
pop
ss
jge
and
or
popa
xor
in
push
pop
out
xchg
pop
fmuls
cs
out
sbb
fwait
adc
out
int
add
lods
mov
and
out
les
pop
out
push
mov
ret
inc
or
into
pop
mov
or
repnz
sub
jmp
icebp
out
into
pop
mov
xchg
stos
dec
neg
xchg
in
mov
pop
hlt
ret
lock
test
sbb
stos
xor
shlb
jle
xor
jb
std
sub
scas
mov
iret
leave
lea
ljmp
stos
fidivs
and
ret
aam
or
sub
push
out
mov
lret
int3
xor
mov
dec
mov
inc
mov
or
xor
hlt
rol
mov
cltd
push
nop
mov
push
jae
push
pop
mov
in
mov
jae
sub
daa
rolb
mov
sbb
jae
pusha
push
xchg
ficompl
mov
sbb
nop
bound
call
dec
sbb
call
mov
lret
loop
push
mov
mov
sbb
pop
mov
test
jl
mov
movzbl
ja
push
mov
inc
xor
cmpsl
inc
lods
push
dec
sbb
or
jbe
lds
pop
out
ja
addr16
sbb
shr
xchg
and
add
mov
es
xchg
dec
jns
xchg
push
es
jo
hlt
fwait
xchg
push
divb
mov
and
scas
push
xchg
push
inc
lock
xorl
mov
enter
dec
es
test
ret
push
por
js
int3
lret
rcll
test
imul
mov
cmp
in
sbb
cwtl
loopne
cwtl
cmpsb
xchg
sahf
mov
fsubr
popa
dec
mov
mov
xchg
repnz
sbbb
mov
and
pop
aas
fldcw
mov
mov
icebp
fists
test
loope
cmp
cmp
cld
mov
adc
ljmp
xor
or
int3
es
xlat
or
jb
jg
imul
gs
ret
dec
push
jecxz
sub
mulb
mov
test
mov
popa
divl
cld
dec
mov
add
xchg
jbe
dec
dec
xor
mov
sbb
fcoml
pop
xlat
cmp
sub
rolb
lea
xchg
ret
mov
les
test
je
pop
sbb
and
mov
rcr
jae
adc
xor
mov
ret
xchg
outsl
js
stc
push
sbb
icebp
repz
out
aaa
fucomip
es
cmc
inc
jae
sub
adc
and
aas
or
mov
popa
bnd
daa
loope
lret
mov
inc
cld
je
xchg
and
lahf
cmp
je
xor
and
pop
stc
xor
cmc
jns
popf
mov
loop
xor
fldl
imul
mov
dec
jg
push
dec
mov
adc
cmp
andl
ds
cmovbe
pop
pop
inc
inc
popa
and
pop
or
fbld
xchg
dec
push
popa
stos
sbb
daa
stos
ficomps
sbb
cmp
test
cmpsl
lahf
icebp
xchg
sub
mov
mov
test
cmp
dec
mov
aaa
movsl
xor
push
dec
xor
jp
mov
dec
pop
lret
in
pop
lods
and
inc
dec
scas
xor
mov
adc
loopne
aad
jb
pop
pop
mov
mov
cs
gs
mov
fimuls
das
xchg
lret
rolb
or
movsb
addr16
gs
sarb
les
push
repz
sub
and
js
imul
xor
sbb
clc
lret
xor
sbb
arpl
mov
cmp
into
vbroadcasti32x4
loop
cmp
xorb
outsb
aad
arpl
in
pop
mov
cmc
jb
sub
stos
inc
jb
sti
idivb
ret
inc
and
xchg
xor
cld
push
adc
fs
adc
pop
and
and
xor
nop
nop
inc
bound
xchg
jo
fwait
popf
mov
mov
cli
stos
cwtl
jno
mov
add
add
scas
push
xchg
jae
push
aaa
cmpsl
dec
ljmp
insl
stc
mov
jg
mov
cmp
pop
lcall
adc
roll
sub
cmc
xlat
cmp
aam
flds
xor
les
das
loop
jg
gs
les
into
add
std
lock
stos
fadds
mov
iret
fisubs
mov
sbb
sbb
mov
pop
int3
call
mov
push
cltd
fadd
mov
lods
pushf
xchg
rcrl
mov
add
out
ret
adc
mov
fstl
rcr
das
jecxz
aad
out
pop
loopne
fwait
nopl
pop
fldenv
mov
xchg
scas
xchg
mov
mov
mov
fcoml
les
movl
repz
fistpll
jbe
push
xor
add
fstpt
push
insb
das
lret
addl
sarl
push
push
in
roll
mov
out
pop
lods
data16
out
daa
and
and
pushf
and
lahf
xchg
xchg
pushf
sub
xor
es
aaa
push
ret
icebp
fstl
les
hlt
aad
jmp
adc
ret
pop
lret
and
icebp
pop
ficomps
enter
cld
int3
mov
mov
daa
clc
outsb
pusha
xlat
jno
cs
sbb
pop
push
and
hlt
cmp
ds
fs
sub
push
dec
add
sub
cmp
in
push
or
inc
cli
arpl
sbb
arpl
pop
loop
lods
in
je
xchg
out
sub
test
mov
inc
mov
in
mov
jns
scas
or
add
jb
dec
push
or
fldenv
sbb
sbb
in
js
daa
fnstsw
add
sbb
cmp
mov
pop
sub
mul
xchg
inc
add
inc
int
dec
mov
scas
adc
and
sub
add
std
push
inc
test
xchg
mov
icebp
pop
fidivl
pop
add
add
scas
mov
js
push
movsl
stos
jb
test
xor
data16
xchg
popa
movsl
sub
clc
js
sbb
loop
int
aam
cmp
daa
gs
cmpsb
mov
inc
jbe
push
popf
lret
xor
and
add
mov
mov
jo
sbb
sbbb
outsl
xchg
addr16
stos
jb
sbb
cmp
mov
adc
ret
pop
imul
stos
outsl
xchg
or
mov
mov
dec
cmp
mov
je
xlat
into
jg
adc
ds
push
cwtl
push
call
pushf
or
movb
fidivs
lea
js
lret
sbb
mov
jo
les
je
dec
int
lret
mov
jnp
int
mov
or
in
not
mov
push
pusha
pop
jbe
cmp
fucomp
jno
dec
and
jl
push
pop
or
inc
pop
dec
out
mov
insl
sub
fmulp
add
mov
jnp
mov
push
pop
cmp
adc
lret
and
daa
add
mov
in
jg
comiss
loopne
sub
pop
or
or
outsb
dec
popf
mov
mov
push
repz
mov
out
test
jno
xchg
fstps
imul
bound
outsl
and
or
fwait
loop
mov
jl
jns
or
hlt
and
cmc
out
jle
ficoms
loopne
and
data16
mov
push
push
rcl
hlt
test
dec
scas
inc
sub
sahf
adc
and
ja
cli
jg
aas
shll
cmp
cld
ja
test
fsubrl
jecxz
and
adc
push
or
xchg
and
aas
push
jg
inc
fidivl
adc
movsl
or
orb
jmp
push
faddl
clc
push
xchg
adcl
pop
lahf
leave
mov
and
enter
insb
push
and
inc
cwtl
pusha
ret
xchg
dec
inc
mov
das
sbb
rcr
or
push
xchg
call
mov
cmp
lock
es
jle
cmp
pusha
jmp
xchg
jno
jno
pushl
outsl
add
out
test
sbb
cwtl
rorb
fs
mov
xchg
insl
and
adcb
iret
sbb
or
push
dec
cmpsl
insb
cwtl
incb
aaa
jne
mov
inc
dec
pushf
test
jae
add
addr16
pop
cmc
mov
jnp
mov
lea
xor
fimull
in
or
or
sub
and
icebp
ret
cmc
out
addl
dec
lea
in
sarl
cmovs
pop
adc
mov
cmpsb
mov
add
mov
inc
add
scas
dec
xor
fidivl
add
popa
out
pop
push
sbb
or
and
cmp
mov
jp
add
adcl
push
adc
mov
fisubrl
jno
orl
pop
cmp
shlb
pusha
xchg
pop
gs
fwait
pop
ljmp
scas
into
lcall
lods
push
insb
inc
pop
mov
enter
mov
adc
mov
cmp
ja
lcall
cmp
js
cld
jl
push
mov
xor
xor
lds
jo
cmp
mov
mov
jmp
lahf
jnp
mov
test
js
cltd
push
out
in
rorb
or
mov
test
or
xor
outsl
call
pop
mov
out
pop
mov
scas
in
inc
dec
and
jle
fisubl
pushf
nop
xlat
add
inc
ljmp
cmp
or
sub
imul
fwait
dec
mov
test
xchg
mov
push
jnp
xor
jp
aaa
pop
mov
jns
enter
and
pop
mov
jle
inc
and
push
jns
arpl
ret
sbb
cmp
lahf
ljmp
pop
les
testb
xchg
in
push
inc
outsl
sarl
jns
mov
inc
aas
rolb
popa
shrb
push
into
outsb
mov
mov
sbb
iret
test
jmp
sub
jno
mov
imul
mov
xchg
lock
jmp
lcall
mov
repz
mov
pop
jp
dec
xor
aas
jge
add
xchg
or
in
mov
or
adc
js
jl
mov
les
xor
negl
inc
ljmp
and
add
cmp
clc
cmpsl
lcall
pop
roll
addr16
mov
out
daa
sub
loope
jae
bnd
arpl
adc
jmp
mov
and
arpl
xchg
loop
inc
aam
push
mov
insl
lcall
aad
push
mov
xor
and
adc
fucom
xchg
movsb
cli
sbb
mov
sub
sub
punpcklbw
jb
outsb
inc
out
dec
mov
bound
out
mov
es
dec
outsl
mov
scas
clc
lcall
in
stos
push
adc
test
aas
popa
jns
jg
or
mov
mov
cmp
iret
iret
mov
ret
out
pop
imull
icebp
mov
or
xchg
sub
nop
shlb
xor
dec
add
movsl
sub
movsl
nop
pop
pop
ror
dec
lods
stc
bound
out
dec
comiss
mov
xchg
jp
scas
jns
jmp
cmp
xor
jbe
out
shlb
cmp
mov
or
aad
xor
push
sbb
insb
sub
jl
sub
fisttps
and
add
inc
adc
out
shrl
add
fdivrl
out
sbb
shlb
pop
mov
sbb
popf
repz
cwtl
jg
mov
cmc
mov
jo
cmp
adc
iret
cmpsl
pop
fcmovnb
out
add
jl
jbe
fistpll
sbb
sub
jmp
sub
cltd
adc
test
adc
push
xor
outsl
adc
or
xchg
mov
xchg
jmp
and
fisttps
jne
ljmp
fwait
ret
dec
push
and
inc
push
push
push
lods
cmp
mov
sbb
scas
jne
jl
loop
jecxz
push
adc
dec
lcall
cmp
adc
sub
inc
add
stos
mov
dec
push
mul
fldcw
inc
arpl
mov
mov
mov
sbb
jg
fwait
ljmp
mov
cmc
imull
lcall
jmp
fwait
sahf
addl
jno
mov
push
dec
jmp
push
mov
xor
pop
jmp
mov
xchg
dec
ror
cld
mov
push
or
dec
sub
mov
pop
cmp
mov
sub
add
jb
jb
or
testb
pop
lock
push
mov
lock
sbb
sub
popf
or
jle
adc
dec
lret
mov
fistl
jno
inc
pop
and
mov
push
sub
outsb
dec
xor
add
mov
sti
mov
js
adc
lahf
adc
lock
xchg
fwait
dec
aam
das
mov
cmp
dec
fcomip
inc
idivl
enter
fimuls
sub
test
cli
xchg
mov
mov
outsb
arpl
jnp
iret
add
sub
out
aad
and
adc
nop
inc
mov
dec
pushf
cltd
cmp
and
push
xchg
mov
sarl
ret
add
fsubrl
cmp
pop
or
lods
push
popa
sbb
stos
xchg
sbb
dec
jp
sub
mov
lret
dec
xor
add
mov
or
in
push
test
pop
jns
sbb
xchg
add
sarl
ds
jae
jg
pop
or
jno
adc
inc
jecxz
dec
cld
push
xor
pop
adc
cmpsb
jne
and
stos
jae
xchg
xor
js
or
jle
and
sbb
iret
mov
mov
and
fsubrl
dec
lahf
sub
andb
repnz
int
cmpl
ret
movsb
into
nop
ret
call
adc
cmp
ret
imul
jmp
sbb
mov
mov
enter
adc
in
cli
pop
xorb
outsb
lods
lds
cld
mov
fwait
rorb
gs
xchg
pop
cmp
and
push
or
mov
add
fs
or
cltd
jno
xor
xchg
data16
mov
sub
pusha
or
mov
push
in
jbe
orb
mov
addl
inc
cwtl
inc
sbb
adc
xchg
pushf
pop
jle
pop
mov
pop
or
jo
scas
inc
repnz
divb
mov
lret
imul
lret
push
jle
ficompl
add
xor
add
pusha
xchg
test
flds
adc
and
cld
rcrl
add
xor
jg
adcl
ljmp
enter
pop
sub
sti
inc
pop
ds
movd
daa
decb
daa
mov
mov
ret
loopne
das
movsb
sbb
jae
dec
outsl
xor
mov
mov
adc
add
pop
and
fisubrs
push
out
cli
repz
fcoms
xor
scas
fisttpll
jecxz
jae
jno
lcall
jo
imul
int
mov
movsb
std
stc
mov
insl
test
pop
inc
divl
sbbl
adc
push
mov
jno
pop
pop
out
bound
notb
je
mov
mov
xchg
das
mov
sarb
xor
andl
xor
std
or
gs
and
sbb
int3
mov
dec
hlt
and
outsl
dec
mov
pop
mov
xchg
mov
test
jg
popa
mov
mov
inc
aam
mov
mov
in
test
xor
shr
inc
push
mov
push
dec
pop
and
clc
psrlq
pop
dec
cmp
mov
push
xchg
fstpl
hlt
mov
cmp
inc
in
lds
dec
insl
pop
pop
mov
cld
mov
jle
cld
scas
adc
out
cmc
ret
scas
shr
xchg
addl
xor
popa
cmp
dec
leave
das
pop
jns
int
adc
xor
xchg
lahf
loop
imul
pop
repnz
and
jo
sbbb
movsb
and
cmc
lock
cmp
cli
xchg
cmp
cld
cmp
inc
clc
sbb
sub
test
xchg
adc
loopne
pop
loop
arpl
jno
xchg
mov
jge
or
andl
out
or
adcl
clc
push
and
sbb
outsl
stos
push
cmpsl
sbb
pop
or
pop
data16
xchg
cltd
test
shlb
jno
or
adc
pushf
daa
dec
inc
jmp
aaa
mov
outsl
imul
aaa
xor
mov
repnz
rol
and
jmp
cmpsl
ficoml
and
ja
ret
inc
pop
sbb
xchg
outsl
repnz
adc
aam
rcrb
push
mov
out
pusha
xchg
add
push
dec
mov
mov
sub
dec
imulb
add
inc
xor
jnp
dec
repz
xor
repnz
mov
daa
insb
dec
shrb
mov
xor
rcrl
lcall
sbb
in
gs
int
addr16
lods
out
mov
imul
mov
xchg
push
ds
add
add
xchg
cs
add
inc
push
shrb
gs
mov
popf
and
orb
std
mov
or
mov
sbb
scas
inc
roll
cs
xor
jecxz
pop
inc
sbb
sub
inc
es
or
mov
xchg
int3
pop
bound
dec
or
or
pop
push
adc
call
or
call
daa
andl
dec
sahf
test
test
pushf
adc
cmp
iret
pop
pop
jb
dec
stos
out
ljmp
mov
cli
loop
dec
push
ret
or
fwait
ja
lcall
or
cmc
in
lret
dec
mov
or
jb
jns
mov
gs
xchg
rorb
cmp
jmp
int
rorb
aas
pop
mov
daa
popf
add
arpl
xchg
in
inc
fsubrl
int3
ret
mov
mov
dec
xchg
lods
sahf
pop
xchg
inc
jge
mov
shl
push
cmpb
push
pop
lock
in
sbb
add
js
lahf
dec
xchg
leave
shr
adc
or
xchg
mov
xor
mov
jae
in
jo
outsl
imul
fs
sbb
addr16
push
push
clc
and
and
ss
cmp
mov
loope
mov
call
into
dec
lds
and
test
hlt
paddsw
inc
xor
sub
repz
sub
cmpsb
or
outsb
mov
roll
std
jecxz
jle
test
scas
mov
mov
aas
cmc
and
sti
xchg
cmp
test
in
popf
push
in
sbb
mul
lock
sahf
push
fstl
dec
cmpsb
push
mov
mov
arpl
je
loopne
inc
lret
pop
ss
out
mov
insb
je
insl
sahf
or
stos
loopne
je
arpl
xlat
xlat
je
and
cmp
inc
dec
loopne
xchg
pop
adc
and
fcompl
xor
sub
mov
notl
je
lods
mov
cmpsl
ja
out
leave
enter
insl
jno
shl
adc
mov
ss
inc
and
out
mov
xor
mov
mov
and
jmp
mov
mov
add
or
and
fadds
push
bound
int
xor
repz
repz
aas
adc
xchg
sub
pushf
xchg
rorl
lock
mov
push
add
js
out
mov
mov
mov
or
loope
js
les
hlt
pop
xchg
mov
jge
in
fcomp
mov
lods
fwait
xor
and
and
mov
rorb
icebp
out
jne
pop
cli
and
inc
std
mov
xchg
stc
aam
xchg
loope
mov
and
mov
sbb
ret
jmp
idivl
cltd
shll
fcmovbe
ds
stc
xor
pop
cmpsb
or
dec
sub
mov
lar
inc
or
cmp
adc
and
out
call
mov
mov
gs
fdivrp
scas
aaa
adc
push
xor
push
repnz
mov
and
fnstsw
ss
lea
fucomp
cmp
ljmp
adc
add
ret
pop
ja
sbb
xchg
ds
jp
fnstcw
jecxz
dec
sti
pop
inc
ljmp
lea
aad
mov
xor
mov
sbb
in
sti
lds
dec
mov
lret
push
lahf
leave
cli
pushf
cmp
cmpsl
push
ja
pop
andb
loope
aas
movsb
inc
outsl
cmp
inc
std
rclb
push
and
mov
push
scas
out
pop
push
shl
shlb
add
mov
push
push
pop
sub
xor
ret
outsl
insl
dec
and
inc
inc
adc
push
jmp
mov
mov
add
call
imul
push
sub
outsb
test
sbb
icebp
mov
sbb
inc
dec
out
xchg
hlt
jecxz
lret
icebp
and
cltd
pusha
out
xchg
pop
sti
dec
mov
mov
sbb
loop
gs
pop
mov
inc
mov
pushf
nop
ret
andb
sbb
std
xor
and
mov
sbb
test
fdivr
or
inc
pop
into
inc
xchg
or
repz
push
xchg
add
cmp
mov
int3
xlat
cld
push
jecxz
jl
sub
or
mov
insb
xchg
mulb
cmp
ljmp
test
clc
mov
add
js
fwait
aam
and
pop
js
dec
add
icebp
dec
scas
imul
push
mov
inc
lds
insl
mov
dec
push
out
mov
sbb
inc
sbb
fisttpl
addl
xchg
stos
js
and
xchg
push
sub
inc
rorl
mov
and
mov
scas
cmc
xchg
and
lods
call
mov
pop
cmp
and
fstl
jp
mov
call
cmp
test
cmp
aaa
or
pop
mov
js
mov
cs
fsubs
fistpll
pop
out
ss
pop
push
xor
pop
add
sub
lcall
cli
popf
adc
pop
jnp
lcall
cmpsb
inc
jle
mov
cmp
test
test
add
cs
or
lods
test
out
das
mov
ja
jp
scas
adc
cli
int3
cmc
divb
sarl
hlt
lret
es
and
shrb
cmp
push
xchg
insb
mov
dec
jl
or
popf
sbb
push
jne
sub
sti
jge
mov
mov
in
push
roll
mov
daa
sub
pop
in
fildll
test
out
mov
in
inc
cltd
cmpsl
adc
mov
add
push
cmpsl
cmp
dec
xlat
shlb
arpl
jnp
push
roll
dec
pop
popf
jne
jno
add
and
and
std
clc
mov
push
push
pop
popa
dec
sbb
popf
sbb
nop
jmp
push
sbb
ret
in
push
inc
pop
clc
aad
add
stos
add
mov
mov
js
pop
les
scas
insb
jae
nop
jg
xor
gs
jnp,pn
push
inc
dec
ffree
cs
aad
rcr
cmp
add
inc
pop
add
inc
iret
jl
jb
movsl
xor
ret
mov
mov
dec
sub
xor
pop
inc
ja
stos
mov
cs
js
sar
fistl
adc
adc
lret
mov
dec
mov
aas
inc
adc
out
out
sbb
jo
adc
mov
sub
fsubrp
int3
pop
sub
pop
int3
mov
hlt
push
or
xchg
je
mov
push
mov
push
dec
push
push
movsb
sbb
shrb
mov
jecxz
jp
mov
test
outsl
cmp
or
cmp
add
fsubrl
mov
mov
test
mov
fisubrs
jle
fisubs
and
decl
mov
push
push
negl
pop
jae
mov
scas
pop
jo
stos
sub
cli
mov
push
pop
repz
add
fstpt
lock
test
clc
xor
jp
jecxz
out
dec
xor
mov
add
imull
xchg
movsl
mov
inc
dec
lea
imul
pop
fsubl
es
jl
adc
orl
xchg
mov
bound
push
in
lret
pop
dec
lds
jmp
mull
inc
daa
out
pop
scas
loop
sti
clc
xrelease
cs
push
aam
inc
cmc
xor
cmp
inc
gs
dec
ret
mov
dec
inc
fcoml
mov
mov
std
jnp
les
push
mov
adc
subl
xchg
push
test
lea
int3
cmp
gs
int3
mov
xor
mov
or
repnz
orb
subb
mov
mov
lock
pop
shl
add
xchg
cs
dec
sbb
loopne
aas
es
cwtl
lods
jb
mov
mov
pop
sub
repz
leave
out
cld
xchg
cmc
dec
imul
sahf
cmp
mov
cmp
dec
jns
stc
push
scas
add
repz
ficomps
push
push
popf
jo
xchg
inc
mov
inc
repnz
mov
adc
inc
dec
roll
cli
insb
inc
cmp
sbb
xchg
adc
aad
sub
mov
int
push
or
shr
loope
loopne
add
mov
sbb
dec
cs
pop
cmpsl
sub
dec
mov
into
jns
outsb
int
xchg
inc
push
std
inc
aas
mov
or
jl
adc
lea
aad
mov
imul
adc
nop
jp
repnz
rorb
adc
xor
adc
pop
std
gs
adc
into
jae
adc
jbe
inc
xor
pop
cmp
mov
test
test
pop
xchg
mov
pop
lods
xchg
arpl
mov
mov
lods
jecxz
fsubs
iret
push
fistps
jnp
lcall
fwait
gs
pop
subl
loope
add
mov
out
inc
les
ret
lcall
outsl
sub
xchg
out
fdivrl
mov
lret
in
fwait
xchg
adc
pop
push
push
inc
flds
out
dec
lea
stos
cmc
fmull
test
out
call
sub
add
push
outsl
or
cmp
lret
xchg
mov
rorb
dec
adc
test
pop
add
lcall
or
sbb
inc
push
cmp
pop
cmpsb
cmp
inc
mov
frstor
inc
inc
sbb
add
mov
aas
sbb
xchg
pushf
push
cmpsb
xor
jg
dec
xchg
jmp
xchg
inc
mov
imul
lret
mov
test
loopne
idivb
les
adc
sbb
loope
cltd
mov
imul
mov
add
call
out
push
mov
pushf
loopne
xchg
push
add
push
xchg
fisubs
mov
xor
dec
sub
enter
loopne
or
rclb
cmc
dec
inc
les
movsb
arpl
jle
lcall
dec
sub
jnp
test
in
jbe
inc
and
jns
jno
lahf
cltd
adc
in
loopne
cmp
daa
push
and
jge
push
pop
or
pop
bound
adc
int3
mov
sbb
and
mov
es
jp
js
ret
or
mov
xor
cmp
mov
fisubrs
imul
xchg
push
push
aas
jb
or
xor
xor
pushf
mov
bound
mov
sahf
insb
jge
pop
mov
cli
xor
jg
cmp
xor
mov
mov
sti
aas
pop
in
scas
shrb
cltd
jl
mov
jno
lock
out
xor
insb
push
out
adc
cmpsl
testb
aaa
inc
cmp
or
mov
jecxz
rorl
sbb
or
negl
xchg
stc
inc
adc
add
mov
les
adc
cs
sbb
cmp
icebp
sbbl
jecxz
fbld
and
push
fsubs
sub
test
pop
inc
jo
movsb
pusha
xchg
push
dec
jmp
into
fcmove
pop
and
xor
pop
inc
xor
arpl
xchg
pop
dec
into
cmp
mov
mov
sub
pop
jns
outsb
mov
jae
int
xor
pop
jg
rcr
sti
imul
xor
add
add
pop
data16
jno
xor
push
xor
ss
push
idiv
rcrb
out
pop
rdpmc
cmp
andb
add
mov
pop
inc
arpl
or
dec
lea
mov
cmp
cmp
push
das
adc
jb
popf
test
add
cmpsl
out
and
sti
add
add
push
movsl
xchg
xor
dec
mov
div
jp
mov
mov
inc
jmp
mov
inc
mov
icebp
adcl
iret
adc
fsubr
cmp
cwtl
jne
aad
add
movsl
inc
dec
leave
pop
add
push
pop
jns
arpl
int
rclb
ja
inc
sbb
cmp
mov
sub
cmp
cmp
add
jmp
jns
js
cmp
adc
cmp
test
leave
lret
pop
iret
pop
push
mov
mov
xor
mov
mov
jle
cmp
xor
jecxz
ffreep
daa
adcb
mov
aam
jo
xor
bound
adc
es
scas
scas
loop
cs
xchg
stos
pop
jbe
dec
push
ret
fwait
push
jge
jmp
orl
mov
sub
sbb
xor
jno
xor
add
movsb
pop
push
jb
push
push
stos
lahf
dec
or
iret
and
fldenv
pop
and
loop
push
enter
sub
sub
pop
mov
xor
jnp
sub
or
pop
or
xor
xor
mov
outsl
cmpb
call
jecxz
lret
sbb
fiadds
ja
repnz
lcall
mov
xchg
cmp
mov
mov
clc
outsb
sbb
cs
jp
dec
cwtl
lock
daa
aas
dec
data16
jp
mov
adc
push
add
pop
xchg
shll
mov
xchg
shlb
testl
mov
mov
mov
mov
int3
lods
xchg
jle
add
mov
aad
dec
adc
scas
and
inc
cmp
enter
cmpl
and
pusha
mov
and
lcall
cwtl
shlb
mov
stos
enter
dec
xor
xor
ret
in
mov
xchg
adc
dec
and
out
imul
add
stos
cmp
add
push
fdiv
mov
mov
into
jp
sbb
hlt
ret
insb
sbb
jmp
sub
stc
cmc
pop
inc
frstor
jmp
push
xchg
push
je
mov
scas
push
roll
hlt
jno
enter
mov
or
jl
nop
inc
bound
xor
xchg
xor
pop
xor
movsb
aas
in
pop
mov
sarl
int
movsl
pop
jno
mov
movsl
rclb
gs
test
dec
int
test
ja
repnz
scas
push
in
lods
jge
push
push
stos
mov
adc
mov
pop
mov
add
pusha
push
scas
and
xchg
repz
add
scas
js
adc
clc
sub
sbbb
div
pop
std
ljmp
jmp
pop
inc
push
push
jae
dec
aam
mov
cwtl
mov
ds
or
loopne
fcoms
mov
fdivr
push
cmp
int
repnz
or
inc
ret
lds
sub
pop
out
popa
loop
mov
or
mov
mov
xlat
xchg
fistps
pusha
dec
sbb
mov
or
popa
cld
xor
jae
xchg
fidivs
cld
or
aaa
jmp
lret
shlb
out
jno
pop
or
xor
jp
dec
outsl
mov
jbe
mov
repz
sub
xor
test
pop
mov
inc
xchg
push
pop
mov
mov
fcmovne
out
stos
xor
movups
aas
in
and
pop
test
pop
mov
push
add
xor
mov
hlt
push
loopne
movsl
or
mov
ret
test
mov
push
pop
lret
pop
in
dec
mov
sarl
mov
in
and
push
scas
js
aad
lahf
test
cmp
dec
dec
sub
inc
or
loop
mov
inc
shrl
push
jg
add
aaa
mov
dec
sub
gs
fdiv
pop
push
xchg
testl
test
test
leave
ret
int3
push
aaa
sub
repz
sbb
mov
ss
aam
fcmovnbe
jle
insl
movsl
cmp
notl
fwait
popf
adc
filds
test
lods
fstpl
ljmp
mov
mov
mov
or
pop
mov
mov
lret
das
jbe
mov
pop
out
incl
mov
push
jge
cs
sbb
push
dec
sbb
test
push
or
fnstcw
xlat
leave
push
mov
adcl
jp
arpl
xor
int
inc
lods
jecxz
mov
lock
out
fistpl
xchg
push
in
push
cmp
fldt
cmc
insl
and
xchg
xchg
xchg
mov
xchg
ficompl
rcrl
pop
mov
pop
mov
dec
sbb
cli
out
popa
aad
int
cmpsb
cmc
cmpb
xchg
outsl
jp,pn
add
enter
std
xor
jnp
xchg
push
push
mov
into
cmp
pop
adc
in
insb
adc
aam
ret
cmp
dec
inc
in
mov
pushf
xor
cmpsl
js
jae
les
mov
inc
cmc
fidivrs
xor
sbb
lea
add
roll
scas
ja
mov
inc
add
xlat
nop
jb
test
add
les
aaa
dec
mov
cmp
scas
popf
mov
outsl
nop
ja
lret
push
inc
jnp
mov
movsb
mov
jae
cli
push
cmp
cmp
pop
popf
or
or
or
and
xchg
or
data16
push
fs
loop
popa
dec
jmp
jmp
push
int
jecxz
xor
xchg
clc
jp
mov
jp
lock
dec
lret
out
sahf
test
xor
or
lods
sbb
insb
ljmp
adc
inc
mov
sub
adc
mov
repnz
mov
cmp
mov
pop
fsubs
and
add
mov
mov
mov
add
xchg
jmp
and
push
test
cltd
and
lret
fmull
popf
jmp
mov
cmp
mov
lock
insl
movsb
out
and
sbb
fcmovu
imul
loop
ret
ds
sarl
dec
cwtl
and
loopne
dec
pop
xchg
push
or
fldcw
daa
sarb
push
dec
mov
add
mov
jnp
sti
in
aas
dec
or
xchg
add
add
sbb
mov
push
xor
mov
xchg
jne
jno
cli
jo
cmp
test
dec
bound
sbb
pop
aas
dec
push
inc
mov
add
cmpsb
aaa
xor
fucomp
or
mov
insw
dec
decl
repz
nop
push
shll
sub
cmp
in
pop
push
mov
sbb
sub
jmp
rcl
ljmp
dec
sbb
cwtl
aaa
arpl
mov
leave
xor
int3
adc
xchg
out
cmpsl
dec
imul
lahf
mov
sti
or
daa
mov
pushf
sbb
sub
mov
inc
in
loop
sbb
lret
out
or
mov
loope
or
int3
dec
dec
mov
xchg
cmp
arpl
mov
add
mov
cmp
je
outsl
iret
in
rdtsc
cli
dec
subl
sbb
in
pop
inc
in
stos
aas
cs
mov
test
fs
sahf
or
mov
imul
jae
loope
mov
in
enter
push
add
and
xor
push
lock
or
push
push
jno
push
imul
fimuls
sbb
cs
cli
and
push
filds
popf
mov
cli
and
inc
pop
adc
xchg
push
add
jl
popf
out
or
insb
sbb
adc
dec
dec
stc
add
mov
xor
or
push
mov
mov
int
addr16
sub
pusha
push
arpl
sbb
mov
das
jns
sbb
out
pop
push
xor
and
jmp
cwtl
sbb
adcl
mov
inc
data16
inc
test
sti
int
rolb
pop
lods
mov
xor
mov
pop
icebp
fistps
cmp
dec
movsl
sub
add
push
xchg
insl
push
ret
hlt
jecxz
in
inc
mov
cmp
fnsave
aaa
das
fadd
loopne
cwtl
cmp
sarb
add
sub
icebp
ja
mov
mov
add
xchg
mov
sub
or
and
cmp
add
inc
je
cltd
mov
es
mov
pop
push
loopne
and
ljmp
ret
fwait
push
lock
les
je
pop
sti
lcall
stos
sub
xchg
inc
std
hlt
push
in
xchg
popf
jp
shll
xor
sub
ljmp
dec
jb
insl
into
divl
cltd
sub
pop
xchg
mov
and
sbb
cli
or
fadd
or
hlt
and
adc
adc
jge
nop
roll
fadds
pop
cltd
sub
scas
add
and
fldt
push
aaa
les
cli
push
push
jecxz
stos
mov
out
sbb
lret
into
pushf
fcoms
call
jmp
jg
and
rclb
cli
movsl
dec
gs
pop
adc
scas
repz
test
push
cmp
jbe
xorl
and
jbe
lods
loope
cwtl
xchg
sbb
mov
pause
fs
in
xchg
fnsave
mov
imul
popf
mov
mov
xchg
push
lea
test
push
mov
rorb
mov
inc
and
mov
movsl
mov
ljmp
inc
outsl
lcall
arpl
xchg
rcl
out
stc
fnstsw
and
aad
xor
xchg
into
out
lret
out
push
cmc
push
popf
aam
and
shll
js
cmp
icebp
lret
daa
dec
sub
jecxz
ljmp
ja
and
int3
push
and
pop
dec
push
aaa
cmp
add
es
ret
or
popa
enter
and
fwait
sub
cmp
fcompl
pop
cltd
cmc
ss
mov
arpl
test
pushf
cmc
push
out
mov
fistl
dec
and
mov
push
pop
cmp
dec
or
mov
out
in
xor
push
sahf
fimuls
daa
test
xchg
testl
adc
sub
push
into
repnz
mov
outsb
mov
adc
pop
in
cld
fdivs
call
xchg
mov
mov
xor
push
addr16
in
mov
jg
mov
pop
jne
mov
bnd
add
les
add
test
fcmovne
into
lds
cmp
jb
or
and
fildl
jo
sahf
out
add
mov
in
popa
lret
fldt
repz
jb
shl
sbb
mov
call
push
xor
lret
xchg
push
or
or
xchg
insb
jl
imul
clc
mov
xchg
in
xchg
fcomps
sub
add
repz
sti
mov
xchg
lock
add
add
mov
jl
sub
or
popa
adc
int
mov
imul
rolb
inc
arpl
or
nop
jmp
lahf
inc
adc
popf
and
cwtl
xchg
popa
test
cmp
xchg
push
sahf
push
push
lret
int3
xchg
cs
sub
out
jo
arpl
xor
clc
push
data16
inc
cmpsl
lahf
daa
mov
inc
jmp
enter
in
cmp
mov
movsl
inc
pop
adc
iret
fwait
in
stos
sbb
stos
sub
sub
jne
popa
iret
repnz
and
imul
ljmp
inc
into
push
mov
jl
mov
mov
jmp
in
sbb
gs
leave
jg
mov
subl
lcall
test
imulb
in
pushf
xor
mov
xor
in
leave
punpcklbw
movsb
jecxz
fidivrl
and
xchg
xchg
int
mov
stos
ja
push
dec
ret
or
hlt
push
and
in
std
push
jg
mov
aaa
mov
and
dec
adc
or
cmpb
sub
ret
test
iret
pop
scas
bound
cmpsl
jne
ljmp
aad
add
jbe
cmp
and
or
xchg
loop
daa
aaa
ss
jp
sub
sub
push
ja
jg
push
pop
out
sti
xor
jecxz
and
aas
pop
mov
jmp
cmc
xor
sbb
rcr
test
ret
dec
push
test
mov
xor
fldcw
mov
lret
popf
shlb
lea
adc
sbb
orb
adc
lret
cmp
int
cmp
push
pop
mov
js
mov
add
ficoml
jbe
loopne,pn
mov
push
xor
dec
add
das
lods
add
sbb
dec
or
dec
adc
cmp
mov
or
push
negb
cmpb
sbb
add
push
sbb
icebp
out
push
jnp
sbb
pop
mov
aad
cmp
push
sbb
add
ja
test
mov
sub
out
jnp
mov
xchg
mov
xchg
adc
je
lea
test
jmp
cli
in
in
xchg
dec
js
jns
fcmovne
xchg
mov
rcrb
push
aam
loop
jge
cmp
and
jp
xlat
xor
aaa
aad
add
xchg
ret
cwtl
pop
mov
jge
dec
sahf
adc
pop
cmp
test
jo
idiv
push
jl
addr16
xor
and
ret
dec
out
xor
loope
test
sbb
les
push
movsb
mov
aas
push
xchg
cmp
sahf
jmp
rcll
dec
jae
movsl
xchg
pop
mov
fnstcw
jecxz
push
cmp
rorb
jecxz
inc
cmpb
push
add
push
test
int
int3
mov
xor
sub
into
push
xchg
leave
sbb
dec
jmp
sbb
js
cmp
pop
and
pop
insb
lea
pop
fs
enter
push
pop
shrb
out
push
and
or
pop
mov
loop
or
add
xor
inc
popa
cmp
dec
inc
inc
mov
mov
aas
inc
pop
cmp
sbb
pop
jns
mov
xor
inc
mov
imul
mov
jg
outsb
and
pop
outsl
cmp
rol
out
lods
or
add
adc
cli
out
mov
xchg
ljmp
cmpsb
add
and
pop
stos
add
inc
test
push
lret
cli
mov
sbb
int
xor
and
lcall
jmp
std
ficompl
aaa
pop
dec
or
mov
mov
popf
dec
in
divl
jmp
data16
xchg
in
inc
data16
test
andl
std
pop
jl
aad
or
int
push
imul
cli
jnp
repnz
xchg
roll
push
add
imul
pop
popf
mov
mov
loopne
and
mov
push
cmpl
sub
dec
inc
out
leave
rorl
xorl
lods
sbb
repnz
mov
into
push
pop
lret
insb
int
mov
ljmp
push
mov
cmp
mov
xchg
int3
loope
test
stos
or
inc
pop
jb
mov
movsl
in
in
lea
dec
gs
xor
xchg
cmp
outsb
dec
shrl
xor
leave
adc
test
xchg
shll
mul
jl
dec
xchg
aad
shrl
and
sub
push
add
xor
xchg
add
xor
xor
xor
loope
inc
mov
es
push
mov
lea
mov
mov
lcall
out
push
fdiv
and
jge
out
add
dec
fldt
adc
ja
and
bound
daa
inc
xchg
sub
push
or
out
ja
lcall
ret
push
arpl
dec
mov
pop
mov
nop
mov
jl
int
fcoms
in
or
inc
add
les
popa
enter
pop
js
jecxz
add
pop
jns
cltd
ja
xor
ja
pop
and
xchg
push
push
push
mov
ret
xchg
dec
mov
mov
jae
push
std
lea
add
or
lahf
orl
adc
or
fimuls
xor
adc
in
lods
mov
dec
adc
int
and
cwtl
out
ja
adc
and
or
inc
sbb
stc
push
shrl
dec
in
inc
and
les
out
jg
pop
sbb
pop
sti
pop
mov
dec
add
xchg
ret
adc
pop
mov
dec
mov
jg
sbb
cmp
push
das
mov
push
cmp
icebp
mov
std
xchg
call
add
mov
push
push
shlb
xchg
rcrb
fyl2xp1
pusha
lahf
out
jb
xor
add
test
sbb
les
mov
jno
imul
pop
icebp
nop
rcll
xchg
cmp
call
mov
jecxz
aas
add
int
int3
sub
inc
sbb
and
imul
or
aam
sbb
je
xchg
nop
adc
fs
jae
dec
stos
xlat
xor
std
jmp
jae
mov
cmp
dec
popa
inc
or
cmpsb
in
pushf
or
cli
incb
out
jmp
sbb
cmp
and
clc
or
adc
inc
in
mov
jbe
divb
jnp
sti
mov
inc
xchg
mov
jb
xchg
pop
add
adc
mov
das
jne
int
push
sub
mov
push
out
sub
cli
cs
popa
sbb
mov
push
lds
out
loope
ss
mov
push
and
jl
sarb
mov
subl
arpl
lret
sahf
mov
and
cmc
add
xlat
mov
jge
sub
mov
shlb
mov
or
xor
xor
lahf
mov
sub
jmp
mov
clc
js
rolb
inc
ds
mov
or
loopne
insl
xchg
mov
movsb
or
in
or
cmpsl
jnp
lahf
pop
xchg
sub
mov
adc
popa
mov
imul
es
mov
push
push
imul
outsb
mov
icebp
aad
add
pop
fdivs
fcomps
jbe
mov
sbb
sbb
xor
pop
xchg
inc
xlat
push
cmc
aad
sub
cli
ja
mov
idivl
mov
jmp
aas
jl
fdivrl
and
pushf
add
inc
xchg
xor
push
cmp
nop
jne
cli
xchg
fildl
mov
or
adcb
bound
iret
in
mov
mov
ss
mov
and
and
rorb
addr16
adc
call
jno
add
jmp
stos
jp
decb
xchg
ret
and
inc
adc
add
or
push
push
je
faddl
arpl
aad
fldt
das
add
or
test
mov
pop
jnp
repz
mov
out
mov
call
dec
arpl
int
pushf
mov
js
dec
faddp
jmp
roll
mov
xchg
movsl
xchg
shll
out
leave
pushf
inc
and
mov
inc
xchg
movnti
dec
ja
aaa
ret
pop
push
inc
or
and
rorl
dec
inc
in
popl
xchg
cmp
and
push
pop
icebp
jae
mov
mov
loop
xchg
out
addr16
fiadds
call
pushf
mov
dec
pop
leave
dec
push
outsl
push
sub
jnp
es
mov
cs
enter
int
or
sub
shrl
ret
lea
cmp
dec
jl
push
or
mov
insl
rorl
js
pop
cmp
cmp
rolb
outsb
lds
or
xor
add
push
inc
push
push
scas
pop
popa
test
call
mov
jnp
cmp
or
addr16
call
ljmp
lods
mov
and
xchg
in
fcmovnb
jb
adc
cltd
pop
movsb
xor
aaa
add
imul
sbb
sbb
jo
aad
sub
lods
cli
pop
xchg
add
push
sahf
dec
cmc
mov
fsubp
outsl
sbb
cs
in
lret
idivb
lods
stos
xor
mov
lods
mov
sub
sahf
sub
mov
int
sbb
mov
sbb
pop
jp
insb
mov
xlat
mov
push
mov
mov
pop
cmp
rclb
sub
jae
fdivl
cmp
sbb
add
test
xchg
fnsave
pop
movsb
nop
mov
adc
pop
lahf
mov
fwait
orl
push
cmp
mov
push
sbb
pusha
mov
lea
jmp
lret
icebp
ror
xchg
stos
pop
sahf
test
imul
mov
push
jnp,pn
mov
cmp
sarl
sub
jmp
test
mov
into
fcmovu
jo
negb
adc
dec
in
ret
iret
push
mov
int3
fisttpl
xchg
mov
dec
stos
sub
cwtl
sub
shll
pop
jno
dec
push
call
test
div
push
push
lret
xor
je
imul
mov
sub
lds
sbb
aaa
inc
jnp
dec
into
mov
lret
jae
repnz
xor
in
jecxz
sahf
jae
pop
sbb
call
rcl
es
add
pop
into
clc
mov
sub
or
aas
jae
stos
cmp
sub
roll
mov
mov
sbbl
xor
add
cmpsl
mov
mov
cld
sub
daa
pusha
lea
jg
jmp
shl
idiv
leave
shrl
stos
mov
push
jp
pop
xchg
inc
ja
xchg
inc
push
mov
lahf
shl
cmpsl
cld
cmp
pop
fs
imul
mov
pop
andb
add
in
fsubp
sbb
dec
pop
jg
sub
pop
insb
push
mov
popa
mov
and
iret
mov
mov
xchg
cmpsb
stc
cmpsb
stos
int
lock
out
data16
fstps
add
icebp
adc
cs
dec
repz
lea
adc
xchg
cmp
mov
lret
lret
push
jl
mov
sbb
xor
mov
popa
fisubrs
inc
or
or
mov
pop
int
xor
or
jmp
lret
in
add
leave
cmp
roll
mov
mov
aad
push
andl
adc
mov
jg
or
mov
adc
push
sub
enter
into
push
xchg
cmpsl
add
aad
out
adc
xchg
sbb
fistpll
cmp
aas
orl
lahf
leave
jle
pushf
es
outsb
lds
rcl
in
sbb
sbb
call
outsl
fs
sub
and
mov
sbb
shl
sub
xor
dec
aam
test
imul
cwtl
mov
mov
inc
loope
mov
js
or
pop
jecxz
sub
js
sub
push
or
cltd
cld
sub
in
jns
cli
adc
push
fbstp
dec
mov
in
out
and
mov
fnstsw
das
testb
ja
pushf
data16
mov
into
int3
xchg
fldl
fnstsw
rorb
aaa
leave
adc
cmp
cmp
pop
rol
dec
push
add
cmp
inc
ss
mov
sub
cmp
pop
push
and
xchg
adc
pop
dec
clc
mov
out
cmp
mov
stc
dec
adc
cltd
jnp
jmp
dec
rorl
mov
shll
xlat
mov
mov
bound
inc
jl
stos
iret
sub
xchg
dec
xor
mov
jae
fwait
cs
sbb
cmpsb
inc
ret
jge
mov
pop
outsl
insb
je
scas
ljmp
jmp
dec
xchg
sub
test
cmp
dec
sub
mov
and
pop
add
icebp
xor
pop
or
sarl
aaa
leave
dec
std
ret
in
mov
imul
test
and
call
add
repz
mov
idivl
xorb
adc
or
mov
dec
mov
jecxz
add
mov
pop
mov
ljmp
sbb
mov
adc
inc
mov
and
dec
pop
jo
lahf
dec
mov
jne
add
pop
in
mov
aad
mov
insb
adc
adc
jae
pop
add
sub
mov
cmc
jns
xchg
divb
lds
in
out
in
push
clc
test
mov
outsb
jo
mov
adc
xchg
inc
jecxz
xor
inc
adc
push
cli
sbb
daa
push
xchg
fs
notl
xor
test
inc
int3
daa
adc
cltd
gs
frstor
adc
jmp
jmp
cmp
in
fwait
repz
in
popf
add
xor
lock
ja
or
repnz
fstpl
ds
mov
mov
and
fcoms
cbtw
dec
dec
add
xor
addl
icebp
aaa
or
dec
xchg
ficoms
jmp
gs
adc
test
es
pop
cwtl
xchg
scas
xor
jb
and
lret
xor
mov
sbb
iret
imul
daa
out
je
mov
out
dec
push
jge
in
icebp
and
cmp
mov
or
dec
xchg
adc
jnp
push
les
xchg
cmp
mov
lcall
loopne
mov
insl
cld
jmp
loop
push
jae
aad
push
mov
fistl
lock
test
cmc
sub
in
fdivl
add
rdpmc
push
lcall
stos
sub
into
adc
pop
xchg
push
sbbl
cmp
ja
fistl
mov
and
loope
sbb
imul
addb
lods
imul
int3
xchg
xor
and
push
sbb
add
add
jg
or
xor
ljmp
add
fsubr
cmpsl
mov
int3
sbb
inc
test
lods
cmp
out
into
sbb
les
dec
xchg
scas
adc
repz
in
push
cmpsb
adc
rcll
ds
push
pop
cmp
stc
sub
andb
js
and
sahf
jo
add
sti
jnp
sub
sub
inc
lret
sbb
es
mov
push
add
jns
loope
fildl
jbe
jno
ss
xorb
stc
push
inc
aaa
rorb
adc
addl
pop
popa
insl
cltd
jge
jp
sbb
jg
inc
mov
xor
xlat
dec
arpl
mov
in
add
xor
xchg
fstl
pop
in
arpl
sbb
inc
shrb
in
fdivr
adc
aas
loope
sbb
iret
dec
inc
sbb
call
fists
jp
mov
sbb
call
std
pushf
push
pop
lock
loope
cli
lcall
push
rcrb
jmp
or
sarb
leave
and
shll
int3
pop
popf
mov
adcb
mov
pop
or
test
jne
frstor
iret
push
sub
mov
or
sub
add
notl
sub
sub
aam
mov
daa
fistpll
popa
mov
imul
leave
push
pop
mov
ds
dec
loop
rcrl
mov
xor
outsl
xor
and
xor
add
pop
out
and
repnz
or
mov
sbb
shr
mov
call
mov
icebp
les
lods
in
and
andl
lcall
in
or
in
jp
sbb
inc
pusha
or
cmc
add
gs
sti
mov
lock
lret
xlat
jo
outsb
mov
adc
mov
sbb
enter
fbstp
xchg
push
sbb
jg
lds
mov
adc
xlat
mov
cmp
fidivl
lret
out
sbb
not
or
jbe
jne
lods
and
stos
addr16
adc
arpl
jns
cmp
jnp
lahf
test
out
shrb
push
xor
and
movl
mov
adc
sbbl
jg
mov
das
dec
push
or
lret
mov
repz
fwait
popf
jae
enter
movsb
mov
jne
fld
or
cltd
mov
mov
ret
cmp
repnz
cmc
dec
lcall
push
jmp
sbb
push
xor
sbb
aaa
adc
dec
xchg
sbb
jp
mov
dec
and
adc
dec
orl
pop
arpl
out
dec
inc
push
adc
sub
xchg
mov
adc
push
inc
jbe
ljmp
test
jecxz
rcrb
movsb
and
out
adc
cmp
pop
fmuls
mov
ret
popa
fwait
dec
mov
dec
mov
fsubs
popf
push
clc
je
push
adc
jnp
sbb
push
mov
xchg
in
add
mov
or
xchg
dec
lahf
std
mov
test
mov
inc
outsb
push
in
jbe
inc
test
gs
cmp
adc
out
mov
fnsave
repz
ror
lahf
ja
cmp
mov
mov
sub
xor
mov
sarl
test
xor
sbb
in
andb
jle
pop
mov
xchg
clc
pop
lahf
mov
jbe
cltd
push
in
pop
fsin
aam
adc
and
sbb
jae
push
test
loopne
js
fwait
xchg
fucomi
ror
mov
xor
jle
lds
mov
add
ja
inc
mov
ret
cltd
mov
sar
mov
xlat
loope
jecxz
scas
icebp
ret
jne
inc
stos
in
ficoml
adc
jns
mov
fmuls
jae
add
cmp
adc
nop
jnp
cs
into
insb
enter
in
xchg
add
daa
add
movsb
mov
fcmovne
cli
pop
popa
or
add
adc
dec
addr16
aad
jg
push
sub
jb
push
push
aam
je
mov
xor
add
insl
lods
xor
subl
pop
dec
cmp
ds
repnz
inc
lock
dec
loope
shrl
ja
je
inc
call
out
mov
inc
adc
or
pop
aad
cmp
test
mov
inc
aam
xor
mov
hlt
fs
outsl
adc
mull
xchg
test
mov
push
cmp
jo
and
xchg
cs
dec
shl
jns
ss
loope
out
push
int3
pop
clc
pop
ss
fnstsw
loope
dec
mov
mov
add
gs
mov
test
push
jp
int3
in
pop
into
xchg
sbb
pop
mov
pop
cmp
jp
popf
push
insb
cwtl
call
mov
mov
jbe
mov
cmp
iret
xor
sbb
sub
insl
pop
scas
pop
out
pop
enter
push
mov
mov
rclb
dec
cmp
fwait
jle
xor
stc
loop
fmuls
sub
in
push
aam
daa
add
shrl
cmp
sbb
add
jbe
ror
cs
decl
fs
aaa
in
test
fcom
lods
fbld
inc
es
mov
aam
in
add
or
stos
imul
cmc
int
jmp
ret
fisubrs
cmpsl
lret
cwtl
xor
repz
loopne
test
ljmp
daa
add
xchg
push
adc
iret
xlat
and
ljmp
add
lcall
lds
sub
jno
jne
clc
push
inc
sub
aam
cwtl
inc
pop
sub
cmpsl
sbb
add
ljmp
dec
pop
movsb
aad
push
out
jp
pop
shrl
insb
imul
mov
cmp
pop
loop
sbb
lahf
ja
int
and
and
adc
icebp
out
aas
idivl
stos
ret
push
fcmovnb
cmpsl
pop
repnz
jno
ds
sub
ds
cld
nop
aad
pushf
mov
mov
fdiv
test
jge
add
jno
add
adc
inc
mov
imulb
push
cmp
add
sarb
cmp
adc
lret
je
mov
cmpsb
inc
clc
pop
dec
rcr
aas
jecxz
jp
push
ljmp
mov
adc
cmp
stos
aad
push
mov
mov
mov
fnstcw
jbe
mov
xchg
aad
pop
xchg
jbe
cmp
cmc
sti
xor
cmp
jnp
push
pushl
adc
call
jnp
xchg
repz
test
and
lcall
lods
ds
and
aad
enter
adc
ret
push
jl
cmp
out
data16
push
xchg
popf
adc
xchg
mov
jle
xor
mov
dec
jecxz
lds
sti
pop
mov
mov
cmp
cli
imul
stc
add
jae
adc
mov
pop
mov
sahf
or
dec
or
int
jl
sahf
cmp
ja
sub
fiaddl
pushf
inc
pusha
push
js
jns
popa
inc
rcrb
xchg
pushf
add
xchg
cmpsl
inc
popa
dec
or
cmp
stos
mov
movsb
push
xor
lcall
jne
ds
jo
mov
or
mov
cmpsb
xor
icebp
cmp
add
loopne
xor
les
adc
out
add
jge
cmp
cmp
jno
add
mov
out
cmp
sbb
cmp
popa
cld
add
cmpsl
cmp
ds
rorb
and
jb
pop
fildl
jp
imul
mov
add
imul
xchg
push
dec
fldl
mov
out
ss
cmc
mov
sub
aam
inc
jbe
stc
sbb
test
jae
dec
lock
clc
jge
xchg
fs
mov
push
out
stos
cmp
mov
xchg
jg
fs
mov
push
mov
and
mov
call
inc
popf
pop
and
stos
ds
lret
push
and
sbb
or
stos
fisttps
sbb
iret
jnp
or
dec
add
xlat
mov
mov
lds
aam
popf
out
sbb
push
dec
jne
lds
cmp
mov
push
pop
stc
xor
sbb
dec
les
int
shrl
les
movsb
iret
outsb
test
sbbb
inc
clc
ja
arpl
hlt
movsb
stos
leave
jmp
aam
push
ljmp
push
xchg
xorb
xor
aam
pop
mov
push
subb
jmp
out
sbb
xchg
pop
sbb
stos
shlb
test
lea
mov
inc
ret
outsl
jp
cmpsb
mov
inc
cmpsb
arpl
or
pop
mov
popf
and
scas
in
mov
xlat
stos
in
orl
flds
sbb
movsl
xlat
aas
jno
imul
je
xchg
enter
jnp
adc
cmp
pop
jmp
mov
in
ret
inc
sbb
inc
xchg
scas
movsl
movsb
testl
into
mov
or
rclb
mov
mov
add
xor
insl
mov
enter
imul
outsb
mov
mov
movsl
mov
js
popa
cwtl
fcom
pushf
cmovb
push
dec
js
inc
std
sub
pop
hlt
cltd
pop
jle
mov
sar
mov
lds
shl
cmp
bound
push
and
in
sub
out
in
pop
pop
leave
in
ja
cmp
jo
cmp
cmpsl
or
rolb
cld
clc
xchg
fadd
repz
and
enter
xchg
addr16
or
jae
xchg
adc
add
insl
repz
leave
jne
shlb
nop
loopne
cmp
adc
sahf
sub
sbb
bound
add
inc
adc
stos
jg
ret
cmpsl
mov
movsb
ljmp
out
push
adc
jp
leave
or
out
ret
arpl
jle
sahf
mov
mov
xor
xchg
adc
cmp
test
test
loop
aad
negb
inc
pop
je
mov
lds
dec
sti
mov
add
mov
xor
ffree
push
and
or
mov
das
sahf
sub
sub
ret
pop
dec
out
cltd
add
shlb
je
addb
and
in
mov
dec
mov
and
mov
pop
jle
mov
in
daa
outsb
cmp
movsb
mov
adcl
jmp
pop
rcrl
inc
hlt
je
mov
dec
cmpsb
mov
pop
sub
ja
adc
loopne
mov
push
cs
int
and
xchg
cmp
pop
movsb
rolb
scas
data16
mov
int3
xor
fwait
xchg
insl
cmp
push
out
sarl
push
push
iret
inc
and
dec
sahf
mov
das
inc
xchg
sbb
or
ss
test
mov
push
sbb
je
notb
fucomi
cld
add
repnz
xchg
sbb
push
xchg
fmul
aam
inc
test
sub
adc
hlt
push
mov
test
call
mov
ds
push
dec
sub
mov
mov
mov
cmc
mov
xchg
divl
mov
mov
mov
or
inc
int
add
sahf
jb
cs
imul
push
adc
cmp
mov
std
xchg
mov
icebp
js
mov
adc
fldenv
insb
xchg
scas
popa
jl
imul
mov
idivl
push
jnp
or
jne
mov
xor
cmpsl
adc
out
mov
adc
xchg
popa
negl
adc
jp
inc
insb
pop
add
push
sbb
ret
adc
push
pop
movsb
popf
or
popf
dec
shlb
jae
mov
divb
fildll
leave
loop
jp
mov
cmp
out
or
inc
in
or
cwtl
sbb
hlt
jle
gs
push
sti
mov
jno
adc
or
push
nop
out
out
lahf
push
dec
jmp
jbe
mov
inc
pop
sahf
lea
je
sub
outsb
jae
cmp
negb
test
sub
sub
daa
cld
int
xchg
shlb
pushf
pop
sub
lahf
mov
sbb
mov
jp
fisubl
push
cmp
leave
lret
stos
xor
mov
hlt
inc
inc
sbb
js
arpl
xor
inc
inc
xor
lock
aad
lcall
pop
mov
push
mov
mov
pop
adc
cmpsl
out
and
mov
jnp
fwait
popa
dec
add
fcmovbe
mov
pop
push
enter
xchg
into
xchg
push
fistl
xlat
jo
mov
sti
jg
dec
shrl
imul
mov
cld
test
aad
stos
or
movsl
inc
aaa
mov
xchg
sbb
jb
outsb
xor
cmp
stos
mov
sub
mov
or
jmp
mov
sbb
mov
pop
or
stc
sbb
dec
cli
das
jae
imul
mov
hlt
fmuls
inc
xor
outsl
sub
and
adc
sub
dec
lods
scas
sbb
imul
jnp
add
jecxz
test
cld
in
pop
int
lds
jns
mov
add
pushf
addb
mov
jge
std
sbb
fstl
cmp
push
insl
add
mov
ja
sbb
jae
outsb
mov
cld
lret
jbe
adc
sub
cld
mov
adc
mov
jbe
dec
push
adc
add
xor
xchg
fsts
mov
cmp
mov
fidivrl
ret
ja
inc
addr16
cli
jl
outsb
xchg
arpl
leave
jno
mov
pop
out
jmp
mov
mov
sub
test
rcr
xchg
push
dec
enter
cmpsb
lret
xor
cld
dec
and
mov
pop
aas
mov
mov
lret
sti
sti
jo
xor
cltd
pushl
jo
or
in
pop
xchg
add
mov
dec
lock
out
pop
push
movsb
mov
add
sti
cld
pop
lret
movsl
mov
cli
mov
pop
decb
mov
push
inc
cmpsl
jle
sbb
push
push
mov
jo
xchg
sbb
and
dec
jmp
add
insl
jnp
mov
and
add
inc
lahf
sbb
cwtl
push
cltd
push
sbb
xchg
pop
daa
int3
loop
mov
fdiv
add
popf
jns
fldl
mov
xchg
or
enter
rclb
push
aad
sub
mov
bound
jne
shll
fistpll
into
jo,pn
fcomp
lock
push
popf
mov
clc
adcb
pop
data16
xchg
inc
cli
and
sub
and
mov
sub
push
dec
movsb
and
arpl
mov
hlt
mov
stos
mov
sub
lock
xchg
pushf
adc
scas
inc
ljmp
cltd
clc
in
loope
sbb
sbb
or
and
push
push
mov
mov
inc
inc
call
xchg
lahf
push
mov
mov
or
push
xor
notb
mov
icebp
repnz
lock
lods
insb
rorb
rclb
or
call
cltd
ss
inc
lods
divl
adc
sub
les
daa
cmp
cmc
mov
xor
ret
jns
addr16
or
pop
push
sub
out
xchg
sub
jbe
mov
mov
mov
mov
push
add
add
jmp
ficomps
xor
je
ja,pt
mulb
cmp
inc
lds
imul
mov
sub
xchg
in
lret
push
xchg
xchg
div
lds
add
jo
fs
rcll
scas
mov
fmuls
add
sti
popf
jbe
stc
or
popa
mov
add
mov
mov
mov
cmp
xchg
adc
into
sub
int
aas
sbb
movsb
sub
jbe
cmpsl
push
shll
call
mov
stc
sub
cld
movsb
push
push
adcb
jmp
ja
dec
lods
shlb
jb
jl
insl
fstps
dec
fxch
icebp
popa
mov
ret
je
in
inc
lcall
and
push
mov
loop
mov
cmp
ljmp
adc
cmp
not
cmp
xor
sub
pop
gs
jnp
subl
dec
daa
test
ja
lock
cmp
sbb
pusha
sub
xchg
lret
repz
insl
xor
popa
jle
subl
neg
mov
mov
ret
jae
or
nop
mov
dec
std
pop
loope
adc
inc
test
push
xchg
in
mov
cli
bnd
test
mov
mov
sbb
cmpsl
jo
add
test
adcl
call
sti
or
and
mov
aas
fisubl
push
adc
mov
xor
mov
ljmp
pusha
xchg
dec
shlb
mov
push
pop
sbb
scas
push
adc
jb
roll
mov
push
mov
xchg
push
sub
dec
push
or
mov
jmp
mov
daa
cmp
push
push
push
push
pop
or
pop
dec
shr
xor
dec
mov
mov
cmp
shl
lods
adc
mov
pop
movsb
bound
dec
test
cs
pop
fcompl
fsubl
mov
test
xor
sub
daa
outsl
daa
aam
xor
xor
xor
addl
lret
lret
jno
xchg
sbb
sti
ficompl
pop
mov
xor
push
shr
xchg
jne
int3
stos
push
push
aas
cmc
or
fists
lret
aam
push
push
je
adc
enter
push
in
ljmp
adc
inc
ja
loope
rcll
and
pop
jo
mov
jmp
xchg
ret
pop
mov
push
xor
fisubl
movsl
dec
sub
xor
loop
std
and
fsin
mov
inc
cli
es
popf
jge
roll
and
mov
sub
fnstenv
dec
aas
repnz
inc
out
mov
xchg
jnp
in
nop
mov
jg
jmp
push
mov
xor
sti
jns
adcb
ss
dec
cmp
filds
cmp
cli
pop
adc
add
dec
inc
dec
mov
mov
jle
mov
fnsave
ret
cmp
cmp
inc
pop
sbb
mov
sbb
lcall
daa
inc
xor
xchg
mov
push
aad
mov
xchg
imul
xchg
sarl
xor
push
mov
test
dec
cmp
cmp
ret
xlat
clc
mov
xchg
hlt
pop
jecxz
jno
add
xchg
ljmp
idivl
fisttpl
cmpsl
arpl
xchg
jb
repnz
cltd
lods
sub
outsb
mov
lock
push
sti
pslld
insl
hlt
stc
js
dec
cmp
test
clc
pop
jmp
rcrb
push
cmc
xchg
popf
and
hlt
xor
jl
pop
popa
adc
xor
or
shrb
cli
push
mov
jbe
mov
insb
insb
arpl
test
int3
jo
pusha
xor
imul
mov
imul
popl
lds
push
mov
xlat
push
or
iret
lds
popl
jecxz
leave
cmp
aam
xchg
jle
push
jae
mov
mov
std
enter
imul
mov
sub
sbb
mov
cmp
mov
imul
iret
mov
lock
leave
mov
imul
fnstsw
lods
das
dec
sub
sbb
test
or
inc
imul
imul
push
outsl
mov
add
push
addr16
pop
mov
iret
dec
inc
add
jbe
out
and
mov
push
lea
or
enter
adc
mov
stos
xchg
mov
mov
cmc
into
stos
jl
xchg
outsl
dec
jb
cli
cltd
fwait
jne
icebp
add
clc
and
int
xor
fistpll
insb
add
cmp
mov
cs
int
int3
adc
mov
sub
add
add
pop
add
in
pop
ja
test
mov
cmc
inc
fldl
xchg
mov
scas
jbe
pop
jns
testb
scas
cmp
lret
arpl
aas
jecxz
xchg
add
xchg
mov
mov
mov
cltd
mov
xor
xchg
dec
inc
cwtl
sub
dec
jmp
mov
push
lock
mov
jo
xchg
stc
je
sahf
mov
in
dec
repnz
jp
adc
in
inc
sbbb
nop
lock
xor
inc
add
mov
jmp
ret
loopne
loope
lcall
inc
scas
ss
das
xor
int3
dec
mov
stc
adc
mov
lret
outsb
xchg
push
xor
test
gs
std
fwait
loop
mov
es
dec
lods
ljmp
loope
jbe
mov
clc
add
xlat
push
push
jp
insl
pop
loopne
lret
popa
lea
xchg
or
decl
adc
pop
mov
lcall
lret
cmp
cmp
lret
gs
outsb
cmpsb
mov
les
cmp
xchg
add
pop
popa
pop
mov
into
jecxz
jle
and
sbb
outsl
sarb
repnz
out
aad
fbstp
es
lea
les
sti
push
prefetcht2
and
mov
pop
jecxz
in
push
addb
addb
push
adc
xor
cmp
adc
push
sub
ljmp
add
jnp
stos
jo
pop
mov
jnp
movsl
add
jle
and
push
adc
mov
fmull
mov
rcr
push
andl
add
jp
ja
call
loop
pop
fistpll
rclb
inc
xlat
and
lret
cld
jge
pop
pop
std
jae
pop
mov
popf
inc
dec
inc
mov
jge
loope
in
mov
aaa
sbb
daa
insb
xchg
daa
pop
lods
test
insb
cmp
setg
sahf
mov
mov
ja
jge
fidivrs
cld
dec
push
mov
pop
dec
lock
dec
inc
sbb
das
push
das
sti
mov
shl
or
movntps
jmp
xor
scas
dec
jge
cmp
push
dec
adc
sub
loopne
fistpl
inc
xor
jmp
inc
and
clc
xchg
iret
ds
cmpsl
cmp
sbbl
pop
push
cmp
ret
xlat
pop
movsb
mov
sub
cmc
jmp
jo
adc
int3
push
xlat
pop
imul
pop
jle
sarb
xchg
imul
lret
movsb
xor
mov
jb
cli
sti
cmp
cwtl
cmp
pop
jno
push
es
adc
mov
scas
sbb
mov
jb
pusha
aam
and
push
aas
cmp
mov
lret
pop
mov
mov
mov
pop
push
push
mov
repnz
out
repz
insb
loop
pusha
fdivs
hlt
popa
sbb
rol
cli
je
pusha
popl
and
and
lock
cmp
dec
shrl
mov
jne
add
test
sbb
xor
push
dec
pop
into
xchg
mov
sub
fimull
test
add
adc
push
mov
lds
mov
shll
shl
movsl
andl
cmpsl
sarb
push
or
xchg
and
sbb
sbb
push
outsb
repz
js
mov
mov
cld
or
pop
dec
mov
shlb
push
stos
xchg
lds
std
fcompl
cs
test
in
mov
and
iret
xchg
xchg
repnz
sbb
pop
mov
jae
in
movsl
notl
mov
inc
mov
mov
ss
or
sbb
jmp
fldt
or
dec
movsl
arpl
dec
arpl
jns
outsb
outsl
outsb
aad
or
fidivs
out
arpl
gs
dec
push
test
aaa
xchg
xchg
in
pop
or
and
push
addr16
push
push
sbb
test
mov
jae
lods
popa
decl
xor
imul
push
dec
out
daa
pusha
cs
adc
push
sub
out
pop
fistpl
jecxz
aaa
in
cli
mov
xor
rorl
mov
lahf
xor
cmp
cltd
sbb
imul
mov
mov
pop
pop
stc
xor
mov
loope
ss
mov
and
sub
inc
mov
mov
filds
xor
iret
andb
idivb
lret
add
pop
popf
fwait
mov
int
add
push
push
adc
xor
sbb
sub
inc
in
inc
dec
and
xor
and
sbb
sbb
inc
loop
pusha
pop
push
or
push
std
fisttpl
lods
dec
mov
push
lcall
daa
insl
cmp
pop
stc
mov
ret
pop
fadds
xchg
stos
pop
data16
or
sbbb
mov
enter
push
insb
pop
mov
mov
fcoml
inc
jne
fs
scas
xchg
add
cmp
add
fstl
loop
sub
cmp
xchg
push
add
pusha
mov
out
mov
jne
pop
sbb
cs
adc
sub
mov
mov
out
int
fcomp
jno
dec
daa
and
mov
pop
dec
adc
add
pop
and
pop
jg
insl
stc
in
pop
sub
rcr
rolb
pusha
fnstenv
mov
test
mov
outsl
mov
adc
push
adc
addb
xor
dec
xchg
enter
pop
mov
pop
dec
add
aam
push
mov
ret
and
add
inc
popf
sub
popa
inc
pop
lods
jnp
push
loope
inc
fs
rcll
fcompl
add
repnz
subl
aaa
enter
filds
dec
sahf
sbb
scas
mov
hlt
cmp
add
iret
adcl
jge
xor
pusha
dec
popf
in
out
xchg
dec
xor
adc
icebp
pusha
test
sub
sbb
loope
add
pop
outsl
leave
sub
das
bound
or
in
or
xchg
out
rcrb
mov
jno
sbb
xchg
or
inc
aas
dec
cmp
xchg
add
xchg
push
mov
mov
test
and
jg
aas
jo
lahf
inc
fsts
sub
xor
cld
dec
or
xor
mov
sub
cld
xchg
test
out
pop
bound
fucomi
cmp
or
xor
mov
lods
std
out
mov
mov
in
jle
push
xor
hlt
lods
push
inc
sbb
outsb
push
pop
in
in
pushl
pusha
pop
or
scas
test
nop
jecxz
fsub
flds
mov
out
loopne
xor
lahf
sbb
cltd
jge
sti
pop
and
sub
dec
cld
ret
loop
iret
sub
icebp
push
in
cwtl
inc
sbb
imul
test
jmp
pop
fwait
add
inc
loopne
cltd
in
cmpsb
js
pop
pop
mov
mov
inc
fbld
sub
sbb
push
jb
mov
out
cwtl
outsb
movsb
enter
jno
or
insl
mov
insb
insl
mov
inc
push
insl
pushf
mov
ljmp
arpl
push
scas
jge
outsl
cltd
out
cmovnp
mov
scas
mov
cwtl
xlat
aad
or
pushf
adc
mov
enter
pop
xor
xchg
fiaddl
cmp
pop
pop
sbb
mulb
jne
pop
adc
and
mov
jns
and
sub
lret
dec
ljmp
out
ror
adc
xchg
cmp
test
jecxz
scas
push
add
pop
xchg
adc
adc
sbb
shr
sub
mov
sub
mov
cmp
insl
mov
mov
jbe
and
jl
inc
adc
je
popa
xchg
jno
les
push
xchg
add
pop
aaa
mov
mul
scas
mov
xor
push
push
cmp
mov
imul
mov
xchg
push
scas
inc
add
nop
mov
push
filds
shrb
imul
lahf
jo
cmp
stc
xor
jge
addl
sub
sub
shlb
cmp
xchg
out
mov
pop
mov
in
dec
scas
aam
out
lret
movsl
es
jg
shlb
dec
cmp
add
dec
into
aad
lock
pusha
daa
daa
push
and
mov
cmpsl
out
mov
addr16
adc
mov
fnstcw
mov
pop
or
inc
out
pop
mov
push
std
push
push
test
cmp
bound
stc
out
inc
and
test
and
movsl
mov
jnp
cwtl
mov
mov
mov
sub
xchg
cwtl
pusha
adc
outsb
cmc
aam
loop
cs
loopne
xchg
dec
rorl
gs
and
clc
jns
push
sahf
sbb
pop
xchg
out
xor
jle
dec
icebp
clc
in
gs
jb
xor
loop
mov
or
xchg
inc
dec
xchg
mov
in
dec
test
add
mov
pop
aas
into
xor
icebp
in
in
rorl
out
fstpl
dec
lret
add
or
pop
pusha
lret
add
add
xchg
enter
stc
mov
cwtl
jbe
aaa
in
xor
pop
jmp
cmp
xchg
pusha
imul
push
inc
fildl
rcr
outsb
cltd
jnp
push
aaa
das
pop
xor
out
repz
and
cmp
jb
lods
pop
cmpsl
mov
push
mov
inc
mov
jnp
insb
pop
in
dec
push
mov
arpl
ret
push
adc
lock
and
mov
les
clc
inc
and
fnstsw
aas
lea
js
nop
ret
pop
cmp
int
pop
add
std
mov
xchg
cmp
data16
dec
repz
jg
shld
dec
pop
xchg
dec
mov
aas
pushf
rclb
xchg
xchg
inc
mov
add
mov
sbb
sarb
dec
mov
das
aaa
xlat
xchg
add
cwtl
inc
jecxz
lcall
mov
fwait
push
mov
push
in
mov
xchg
into
xchg
xchg
lahf
sub
xchg
nop
bound
xchg
imul
xor
pop
push
sub
push
mov
fnsave
loopne
mov
outsl
pop
lds
and
pushf
call
cmp
add
imul
mov
pop
cs
add
bound
repz
jo
jg
add
js
sbb
insb
lcall
inc
xchg
jecxz
jmp
push
out
fistps
mulps
sbb
mov
xor
enter
dec
in
mov
test
imul
jge
push
fs
xor
jb
add
sbbl
inc
jecxz
addr16
push
popa
xchg
cmc
mov
xchg
xor
loopne
xlat
gs
sub
sub
cmp
dec
sbbb
cmp
fdivrp
add
mov
sub
clc
push
xchg
or
mov
or
movsl
mov
cmp
jae
jecxz
mov
jo
sti
push
lcall
jp
in
leave
pop
pop
push
stc
out
dec
dec
sub
and
std
dec
fldl
push
adc
aad
lret
inc
pop
add
ret
sub
push
xlat
mov
or
sub
pop
push
xchg
and
mov
xchg
fucomi
jl
mov
aas
push
xchg
mov
fs
cmpsb
sbbb
mov
pop
sbbl
sbb
sbb
les
lods
cmp
mov
ljmp
mov
jmp
scas
xchg
jo
sub
pop
es
popa
sub
jg
pop
sub
stos
inc
shrb
pusha
mov
pop
scas
in
xor
mov
mov
mov
jns
inc
push
adc
xchg
cmp
jae
flds
sbb
cmc
dec
dec
mov
lcall
stc
jge
inc
js
adc
push
mov
lods
xchg
lcallw
repnz
pop
lret
push
test
ss
mov
mov
push
fs
leave
in
push
pop
lret
mov
nop
lret
int
adc
inc
mov
fwait
outsb
inc
mov
mov
jns
xchg
mov
addr16
iret
ret
jne
cmp
bound
in
mov
dec
popf
xor
ds
testl
jb
imul
ja
and
dec
into
iret
lds
popl
cmp
inc
dec
pop
pop
dec
inc
inc
das
mov
inc
cli
pop
push
and
ret
pop
and
flds
repz
xchg
mov
adc
inc
adc
scas
bound
lahf
ds
xchg
psubsb
mov
int
xchg
xchg
fwait
xorl
je,pn
and
es
mov
xchg
pop
xchg
jno
or
mov
or
out
nop
and
xor
mov
add
sbb
loopne
add
or
add
fdivs
insl
or
mov
push
ror
enter
movsb
nop
xchg
inc
pop
xor
xchg
mov
clc
lea
pop
adc
jo
adc
leave
incl
and
sti
adc
adc
mov
movl
lods
enter
pop
out
insl
lgs
fstl
outsb
jp
add
mov
cld
int
data16
cld
ret
test
push
lahf
mov
psubusb
nopl
pop
xchg
mov
es
or
dec
xlat
cmp
aas
xlat
push
or
out
push
fbld
add
xchg
xor
dec
jb
mov
pop
push
nop
mov
lods
pop
repnz
sbb
inc
mov
push
and
cmp
movsb
fidivs
out
dec
sbb
in
orl
data16
je
addr16
jge
push
decb
pop
jecxz
jmp
sbb
jp
lods
jp
mov
mov
fadd
movsl
lahf
add
mov
mov
pushf
stos
leave
ja
pop
test
mov
das
sbb
sahf
scas
outsb
cmp
orl
in
or
enter
into
push
dec
jne
ss
sbb
or
negl
outsl
sub
clc
and
aad
lods
mov
push
into
enter
sub
mov
ret
xchg
les
lahf
outsl
or
add
rcrl
cmpsb
and
hlt
adc
jmp
xchg
mov
js
dec
lret
dec
insl
jle
lock
sbb
mov
dec
es
pop
std
popf
mov
or
cs
cmpsl
cmpsb
push
push
mov
mov
mov
test
jae
roll
les
sti
mov
mov
lret
jne
push
lods
mov
enter
das
ljmp
das
lahf
and
js
xchg
sbb
sti
or
or
mov
push
fidivrs
mov
mov
loopne
add
inc
mov
push
pop
inc
aam
mov
mov
jl
cltd
pop
xchg
in
mov
loope
scas
mov
push
mov
mov
dec
dec
push
mov
test
push
pushf
fnsave
dec
add
mov
pop
pop
adc
lds
data16
outsb
popfw
xor
fistpl
ss
mov
adc
sbb
jbe
ret
mov
jo
mov
jae
xlat
cmp
movsb
mov
mov
inc
jge
shlb
dec
sub
jecxz
cmp
loopne
xor
insl
enter
aad
inc
in
std
movsb
lret
popf
sbb
dec
mov
imul
aas
aam
pushf
dec
mov
leave
arpl
adc
add
xchg
jg
lds
mov
mov
jns
xchg
push
adc
sbb
int3
xchg
dec
inc
out
sbb
mov
mov
orb
lds
ja
adc
mov
jg
pushf
loop
and
imul
add
cmpsb
dec
ret
sub
mov
dec
lock
jl
movsb
inc
jp
mov
or
cli
jle
mov
sbb
jo
mov
sub
inc
sub
ret
mov
out
stos
mov
fiaddl
jp
mov
popa
add
inc
mov
ret
out
imul
popf
or
das
mov
jle
mov
sbb
cwtl
pop
out
test
inc
in
dec
in
gs
cwtl
insb
out
into
outsl
in
push
mov
shl
push
les
out
sub
xor
xchg
inc
mov
jmp
arpl
jne
lods
cwtl
pop
dec
shlb
stc
dec
ljmp
hlt
pop
xchg
xchg
cs
xor
imul
cmp
pop
sahf
pop
adc
imul
into
std
cli
pop
and
lcall
mov
sti
out
add
mov
pushf
or
and
scas
cltd
pop
sbb
sub
das
lahf
cmp
adc
add
in
push
mov
adc
cmp
lcall
into
xor
inc
xor
mov
testb
fdivrl
pushf
or
jmp
test
mov
adc
aad
inc
jns
jle
jmp
adc
int3
cld
aaa
push
jnp
sub
xchg
test
ljmp
mov
movsb
or
push
mov
sarb
xchg
mov
ret
int3
dec
push
xor
lds
ljmp
test
out
sub
push
add
jp
xchg
test
adc
jp
jno
ret
xor
and
adc
rcrl
sbb
sarb
inc
cmpsl
cmc
xlat
xchg
and
dec
xor
jbe
lcall
lea
sub
repnz
add
dec
cltd
or
dec
sbb
loope
fldl
lods
pop
std
cs
out
jno
jno
sbb
into
xor
sub
xor
cwtl
pop
fbld
lods
inc
or
inc
push
aam
xchg
rcll
adc
mov
xor
out
lea
adc
rcrb
dec
adc
lods
add
rcr
cli
aaa
jl
xor
std
testl
cmpsb
loope
mov
push
jmp
vandnps
fcoms
push
cmp
xchg
lcall
ret
flds
cmc
sbb
sahf
dec
mov
lods
xor
xchg
enter
add
outsb
imul
xchg
icebp
pop
clc
jecxz
cmpl
aam
in
jle
test
sbb
cmp
lret
and
mov
and
pop
jnp
sarb
ljmp
mov
push
in
cmc
ds
and
add
and
cmpl
cmp
stos
movsl
add
and
add
mov
in
pop
ljmp
imul
imul
notl
or
roll
mov
imul
leave
and
adc
movsb
sti
add
push
jo
push
les
mov
sub
cmp
and
add
sbbl
int
rcrl
inc
fcoms
jbe
sbb
jecxz
xchg
mov
pop
cmpsl
stos
pop
iret
xchg
jg
test
ret
out
dec
mov
outsl
inc
and
cmp
xchg
and
cs
adc
out
rcrb
mov
dec
leave
pop
cli
and
push
pop
inc
insb
inc
cli
in
insb
push
cmp
addb
push
lock
mov
test
insl
std
pop
xchg
sbb
adcl
stc
loopne
ret
inc
sbb
cmp
inc
xor
cmc
sub
pop
sbb
mov
in
mov
pop
sbb
add
xchg
inc
dec
mov
inc
mov
pop
mov
js
jle
jno
cwtl
cs
or
test
xlat
cmpsl
ss
and
mov
adc
mov
or
nop
xlat
or
adc
and
adc
sbb
dec
js
cmp
jb
lea
gs
mov
inc
jb
push
mov
sub
mov
lock
jg
ds
cmpsb
sub
inc
sti
into
xchg
pop
ja
mov
sub
scas
lea
es
jb
adc
orb
out
mov
dec
inc
sub
xchg
or
mov
push
pop
pop
xor
dec
cltd
push
adc
or
pop
jg
mov
nop
sbb
out
mov
pop
or
out
push
mov
push
sbb
daa
mov
loopne
stc
cmp
dec
sub
xor
xor
pop
lret
mov
mov
add
lods
in
in
sub
pop
divb
lds
dec
adcb
xor
xor
or
std
pushf
push
mov
inc
rorb
push
scas
iret
clc
fs
adc
mov
push
cs
lcall
mov
test
cld
rcl
cmp
aam
lahf
loop
into
or
inc
shlb
mov
sbb
in
xor
sti
scas
mov
call
pusha
mov
sub
jnp
insl
rcll
cmp
fwait
mov
xchg
mov
cs
xchg
cld
xchg
pop
push
pop
sub
mov
inc
pop
jg
push
mov
dec
fdiv
scas
cli
sbb
xor
sbb
ljmp
out
inc
loope
jb
adcb
popa
sbb
jmp
inc
mov
idiv
jge
shrb
adc
test
inc
test
icebp
idiv
mov
pushf
xor
dec
outsl
iret
lret
rclb
dec
pop
bound
push
das
inc
into
jns
add
sub
xorb
shl
mov
std
out
popf
push
or
mov
arpl
and
loope
mov
adcb
sbb
push
adc
movsl
adc
fsts
xlat
inc
cs
lcall
lods
ljmp
cltd
adc
lcall
scas
jno
movl
or
xlat
lds
adc
loope
jge
in
outsb
mov
cltd
cmp
inc
inc
fistpl
aas
inc
sbb
rdmsr
js
lods
xor
sti
jecxz
aam
mov
repz
fnstcw
repnz
cmp
dec
int3
cmove
cs
or
inc
shlb
mulb
mov
add
jge
arpl
xchg
sub
cs
and
sub
movsb
popf
in
fnsave
inc
jbe
xorl
test
dec
xor
or
jg
push
inc
iret
leave
call
adc
and
push
mov
mov
add
jno
cmp
and
divb
pusha
cwtl
loop
lea
in
inc
mov
ss
leave
xchg
fsubr
mov
sub
fld
fcoms
hlt
cltd
stos
lret
mov
lahf
inc
push
jmp
data16
jne
sub
mov
aad
mov
aam
mov
stos
pushf
dec
push
repz
push
add
dec
pop
push
pop
cmp
int
xor
mov
out
les
loopne
rorb
add
fstps
loope
jne
inc
aas
and
test
stc
js
lds
xor
pop
adc
insb
mov
faddl
sbb
scas
outsb
inc
insl
adc
mov
out
bound
mov
cli
and
add
sti
xor
and
lahf
mov
and
cmpsb
inc
add
jg
cs
xchg
data16
es
ret
mov
in
lock
cld
cmp
testb
mov
stos
test
outsb
sub
push
cmpsl
pop
enter
clc
add
cmpsb
test
fbld
adc
iret
mov
mov
pushf
cmp
add
cs
mov
enter
lret
dec
mov
cmp
sbb
inc
adc
or
jp
pop
push
or
inc
imul
int
ret
pop
jmp
clc
mov
mov
pop
icebp
stc
inc
test
mov
out
jmp
push
pop
inc
inc
mov
loope
sub
lock
scas
cmp
jge
mov
pop
xchg
int3
push
mov
push
cmp
and
fistl
inc
push
imul
jns
je
mov
jmp
mov
shl
fst
sbb
pop
jecxz
and
add
add
pop
fsubs
lret
cmp
std
les
jecxz
loope
adc
data16
std
xor
mov
shrb
push
mov
or
pop
das
cmova
adcb
das
mov
sub
lret
adc
sbb
sub
scas
js
mov
and
mov
shll
push
mov
lcall
ja
movsb
pop
je
xchg
pop
jb
pushf
xor
xchg
mov
cmp
sbb
cmp
mov
sahf
and
cmp
imul
stos
loopne
dec
icebp
sub
imul
stc
enter
dec
loop
mov
mov
and
mov
ficoml
mov
test
jns
xchg
and
push
fisttps
mov
ss
and
pop
jae
cmp
dec
cmpsl
jae
fsubrl
or
sbb
cmp
cwtl
subl
and
or
rolb
dec
sub
test
or
mov
jbe
ds
std
loope
sub
pop
fildll
mov
inc
push
xchg
loope
scas
lcall
cmp
dec
add
push
ret
dec
rcr
mov
mov
push
xchg
push
xchg
xchg
xchg
jns
lcall
pop
adc
add
sarb
pop
mov
mov
pop
cmp
inc
mov
out
ret
rolw
loope
mov
imull
mov
and
cmp
cmp
add
push
add
roll
jne
inc
mov
shl
out
xor
cmp
push
xor
jmp
mov
lahf
sbbl
jmp
jge
cmc
sbb
arpl
clc
std
popa
or
fisttps
pop
mov
mov
lcall
loop
push
pushf
fwait
jo
mov
cmp
jno
xor
mov
lret
mov
mov
clc
movsl
jne
add
clc
out
inc
and
push
mov
and
fwait
das
jp
mov
pop
add
test
ficoms
int3
js
out
jle
addr16
fmull
clc
sbb
xchg
and
inc
cmp
in
sar
sub
xchg
xorb
repz
pop
out
das
jl
shl
inc
pop
out
mov
adc
or
js
cld
inc
leave
cmpsl
adc
add
add
adcl
aam
dec
nop
mov
pop
popa
add
loop
je
adc
dec
xor
xchg
sbbb
iret
push
scas
xor
push
push
out
imul
jbe
in
jb
int
ret
sub
mov
lea
loop
scas
cmp
lds
adc
shl
dec
inc
inc
xor
jg
xchg
int3
add
or
inc
sub
mov
hlt
test
cmp
cmc
mov
jne
cmp
inc
sbb
cmp
movntps
imul
shlb
fwait
add
pop
sub
out
add
xchg
js
push
outsb
mov
mov
pop
and
fstpt
mov
stos
and
mov
xchg
outsl
push
fisttps
mov
and
and
loop
mov
cld
icebp
movsl
adc
pop
mov
scas
sub
outsl
jne
push
sub
outsb
ret
xchg
lock
mov
pop
jg
out
adc
lods
pop
mov
lret
inc
pop
fmuls
or
dec
insl
lock
sub
pop
push
rolb
jns
ja
or
jmp
daa
push
aam
and
cmp
and
shll
adc
aaa
popa
jle
ss
xchg
xor
xor
mov
xchg
pop
iret
or
ds
sahf
xchg
or
dec
int3
add
xchg
outsl
push
scas
cmp
push
ret
mov
popfw
test
push
pop
xchg
mov
clc
sarb
dec
xchg
adc
sub
and
sbb
jns
sbb
in
sahf
xchg
cmc
dec
mov
aaa
mov
addr16
sbb
aaa
jge
mov
les
and
dec
addb
fists
cmp
xor
shl
outsb
lods
imul
jmp
daa
test
adc
sbbl
xchg
sbb
xor
int3
mov
stc
lea
xchg
push
aaa
pop
inc
mov
pop
jbe
loopne
pop
pop
push
adc
aaa
in
fistpl
clc
and
and
lret
jmp
stc
xor
shlb
out
pop
push
pop
cwtl
push
xor
sub
and
mov
push
pop
repz
dec
inc
iret
mov
mov
into
repz
xor
inc
ror
jmp
outsb
push
clc
jno
rcrb
jnp
test
inc
push
inc
cli
leave
std
pop
iret
insl
out
and
mov
icebp
jg
nop
adc
and
into
jbe
icebp
out
popf
push
pop
push
stos
mov
adcb
push
xor
sbbb
fsub
sub
sbb
bnd
cmp
fwait
inc
loop
push
xchg
sbb
fbstp
movsb
xchg
jp
outsl
shl
pop
es
in
push
add
fstl
xchg
or
out
out
jnp
mov
les
sub
data16
xchg
fstpt
out
mov
insl
cld
mov
push
jo
ds
jle
dec
cmp
push
inc
cmp
mov
xor
push
fwait
adc
jbe
lcall
lcall
cmp
mov
sub
sub
loopne
jle
jns
mov
mov
dec
jnp
jo
mov
cmp
mov
rcr
dec
or
fimuls
movsl
jb
adc
cwtl
scas
repz
sub
fcmove
jae
push
aaa
test
mov
ficomps
pop
inc
sbb
dec
dec
ja
imul
jae
and
scas
or
shll
pop
dec
insb
mov
repz
hlt
stos
clc
sub
pop
sbb
test
xchg
cmp
pop
cmp
lret
mov
inc
loope
push
aas
jle
movsl
mov
ret
cmp
pop
push
imulb
call
add
test
adc
test
dec
je
lds
push
nop
movsb
xchg
cmp
xchg
xchg
inc
addr16
inc
xchg
movsl
inc
add
or
mov
aad
icebp
das
push
mov
rcr
stos
pop
or
sbb
sbb
imul
cmp
lds
jp
adc
mov
mov
in
inc
rcrb
xor
js
pop
jne
mov
arpl
and
lahf
ror
insb
ficoml
bsf
jnp
movsl
and
outsb
cs
mov
mov
mov
out
stos
shrl
sbb
gs
test
mov
xor
movsb
stos
aaa
movsl
mov
adc
sbb
cmpsb
lock
scas
push
push
repz
cmp
sub
lcall
pop
packuswb
cmp
subb
shr
loopne
cmp
fdiv
cmp
dec
add
js
lcall
mov
dec
gs
mov
add
imul
xor
lret
lret
xlat
cmpsl
stos
sahf
push
icebp
nop
push
jae
fnstcw
into
flds
imul
lock
cmp
int
mov
fcompl
mov
ljmp
lds
je
es
call
xor
cmc
ret
in
loop
pop
xchg
daa
addr16
pusha
sub
mov
dec
push
sub
sbb
std
inc
sbb
adc
jno
cld
insb
fcmovne
pop
popf
cmp
out
in
rcll
cmp
adc
or
insb
imul
addl
insb
jno
lods
lock
cmp
fstpl
pop
add
dec
ljmp
decb
cmpsl
je
dec
idivb
push
mov
daa
sub
aaa
ljmp
pop
rorb
or
sbb
leave
push
xchg
scas
in
out
xchg
mov
pop
or
cs
and
scas
mov
stc
cmpsl
repz
popl
xchg
js
mov
lret
aaa
jns
inc
jl
lret
jp
ja
inc
sarb
outsb
lea
jo
cmpsb
loopne
xlat
adc
jns
shlb
aas
hlt
insl
pop
xchg
adc
jbe
and
lods
fcomip
xor
pop
arpl
and
imul
cmc
call
aas
jmp
cld
cmp
mov
xor
outsb
inc
lods
sub
pop
dec
or
and
adc
test
xchg
sti
mov
or
xchg
sub
jo
pop
sbb
into
add
cwtl
test
mov
test
jp
into
jae
outsb
andl
rol
lcall
mov
sub
xchg
add
mov
jbe
or
cmp
xchg
in
jecxz
arpl
fs
push
xor
out
hlt
sbb
in
fucomip
hlt
scas
jle
add
fdivrp
sub
pop
inc
call
movsb
and
js,pn
mov
in
test
xchg
and
jb
mov
mov
in
cmpsb
bound
mov
mov
add
lods
outsl
dec
sbb
mov
jno
inc
jne
cmp
push
ljmp
divb
imul
rorl
incl
xor
xorb
xor
dec
rolb
sti
sub
adc
scas
dec
sbb
ss
stc
test
inc
roll
incl
jbe
mov
cs
aad
push
pop
sbb
pusha
sbb
test
fs
or
xchg
insl
out
and
push
das
lea
jns
add
mov
jg
pop
unpckhps
and
push
mov
addb
push
insb
out
xorps
jb
fistl
mov
addr16
jbe
ljmp
repnz
or
cmpsb
cmc
test
xor
push
inc
lds
jns
xchg
mov
dec
sbb
dec
sbb
fwait
loop
sub
xor
add
nop
mov
mov
xor
and
sbbl
mov
cmpsl
bound
enter
or
ss
jp
in
aad
stos
xchg
adc
std
mov
cmp
pop
aad
leave
mov
adc
nop
daa
pop
incb
add
aad
mov
cmp
cmpl
push
push
into
cmp
popf
sub
les
sbb
and
dec
jne
shr
sub
push
icebp
sub
movsb
repnz
dec
push
outsl
mov
ret
pop
xchg
sti
mov
jnp
cltd
cmpsl
into
mov
pop
add
xor
jnp
sub
fmull
aad
push
xorl
in
fwait
or
xchg
inc
jae
push
cltd
cmpsb
xchg
cmp
and
subb
jg
lock
mov
mov
pop
fistpl
imul
dec
fsubr
pop
int
rcrb
or
pushl
xchg
out
mov
xor
cmp
adc
dec
adc
test
in
pushf
pop
fwait
rcl
ret
int3
sub
repnz
jne
out
add
adc
xchg
adcb
ret
mov
dec
dec
mov
sti
test
jle
stos
inc
aam
add
sub
mov
or
call
imul
pop
lock
mov
add
rolb
jg
popf
loop
inc
pop
mov
fninit
insl
bound
cmp
mov
pop
aas
dec
iret
and
xchg
inc
mov
std
inc
insl
xor
push
cmp
push
and
push
arpl
loopne
xchg
aad
mov
loop
inc
dec
nop
add
mov
pop
testb
adc
sbb
lods
sub
shrl
loop
out
idivb
push
inc
lea
fldenv
lea
mov
scas
ljmp
push
cltd
inc
jbe
mov
sbb
hlt
in
test
or
es
mov
inc
xlat
dec
cli
imul
cmp
lods
inc
cmp
cmc
stos
movsb
pop
int
jb
nop
jp
mov
cs
sub
push
jbe
adc
ret
cli
inc
cwtl
cwtl
insl
in
shrb
pop
jae
pop
ds
add
sbb
push
fprem1
out
or
mov
rep
aam
or
mov
loope
test
shrl
sbb
scas
out
leave
jne
negl
pop
mov
mov
fwait
mov
and
jle
and
fadd
or
adc
mov
jge
testl
pop
xchg
incb
add
cmp
dec
mov
or
inc
scas
add
scas
fs
jo
xor
fdivl
repnz
sub
imul
popf
sahf
pusha
fcompl
xor
mov
out
mov
cmpsb
es
dec
mov
mov
sbb
aad
popf
js
out
setnp
jg
mov
aam
jbe
pop
push
in
lahf
and
cld
ljmp
jmp
pop
and
inc
push
xchg
ja
dec
shll
dec
jl
jns
arpl
loope
fldt
adc
loope
lds
jecxz
push
add
mov
adc
mov
add
dec
mov
stos
out
push
xchg
idivb
xor
icebp
mov
adc
sub
nop
sub
push
mov
cs
xchg
cli
jge
cmp
sbb
adc
lods
sbb
and
jbe
cmp
nop
sahf
out
cltd
fmulp
enter
in
inc
and
xlat
lcall
cwtl
pop
dec
cmp
in
movsb
mov
mov
ja
mov
mov
mov
hlt
sar
jae
jle
mov
das
sub
cmp
into
leave
pushf
push
stos
cli
xor
testl
jecxz
mov
mov
daa
and
ljmp
cwtl
shlb
repz
lret
imul
or
xchg
jecxz
dec
dec
fmul
or
dec
in
aas
and
push
xchg
outsl
cmp
jns
negb
aas
mov
sahf
stc
sbb
add
pushf
adc
out
add
pop
push
mov
js
push
in
testb
int3
ds
je
mov
cmpsl
insl
call
mov
out
fwait
sbb
imul
fwait
cmp
cwtl
sub
enter
jmp
add
inc
mov
mov
lods
push
btc
adc
mov
mov
sub
lret
mov
in
scas
mov
dec
movsl
adc
lret
sbb
and
mov
xor
push
jge
sub
inc
mov
int3
jbe
test
sbb
mov
stos
decl
jl
sub
dec
fistl
inc
ss
loope
roll
movsl
or
sbb
inc
imul
ja
inc
push
mov
hlt
out
jl
mov
fmull
hlt
scas
mov
xchg
fstpl
jne
popa
fldenv
nop
decb
imul
cmp
mov
cmc
sub
xor
or
mov
cmpsb
xchg
dec
push
inc
shrb
inc
andb
xchg
es
push
lahf
stc
inc
and
loopne
jnp
loope
mov
or
sti
mov
mov
adc
shll
ja
and
mov
movsl
jle
or
inc
adc
mov
cmpb
movsl
movsb
sub
push
jle
adcb
xchg
daa
leave
repnz
jnp
mov
mov
stos
inc
jmp
aas
mov
cwtl
jecxz
je
push
les
inc
xchg
mov
movsl
or
xchg
jmp
test
pop
sbb
lcall
enter
sub
pushf
or
inc
xor
loopne
lcall
xor
shll
je
fidivrl
and
arpl
inc
shll
aad
repz
ret
arpl
add
cmp
in
xchg
mov
aas
fstpt
mov
ret
xorb
into
mov
leave
xchg
dec
sbb
mov
push
jmp
mov
aas
mov
outsl
iret
push
adcb
leave
xor
adc
mov
scas
vdivss
dec
arpl
shl
pand
push
xchg
sub
pushf
lret
pusha
fucomp
cmc
pop
iret
cli
cmpb
int
sbb
pop
dec
add
add
fsubs
scas
test
adc
leave
ja
push
iret
mov
aam
sub
lcall
out
mov
adc
xor
dec
jne
add
insb
push
outsb
shll
pop
hlt
pushf
insb
xor
cvtps2pi
mov
int
repnz
in
mov
push
dec
add
fistpl
jo
jbe
ja
mov
repz
gs
push
lea
fs
lds
test
jne
call
popf
xor
in
dec
ret
add
mov
out
mov
icebp
rorl
push
test
dec
popf
pop
popa
or
mov
lcall
scas
or
push
mov
addr16
add
fsubrp
jae
in
adc
lds
xor
ss
mov
inc
pop
imul
mov
xor
mov
jg
fidivrs
popa
xchg
clc
push
aam
xor
jno
xlat
clc
jmp
repnz
cmp
xchg
xor
iret
out
scas
cli
test
pop
add
dec
cwtl
jne
push
pop
xchg
adc
jmp
out
inc
and
ja
xchg
xor
add
mov
insb
xor
mov
adc
push
xor
sti
xlat
popa
cmp
not
call
and
sbb
pop
xchg
bound
sbb
test
lea
mov
int
fcmovu
or
xchg
cmp
xor
and
sub
in
inc
cli
adc
lods
psubusw
jmp
inc
xchg
sbb
add
jmp
pop
add
or
stc
aaa
mov
mov
mov
cwtl
shlb
nop
add
and
jge
lahf
and
dec
mov
mov
and
pop
sti
rcll
inc
jo
sbbl
jno
cmp
fbld
ror
sti
jo
js
cmp
jg
stos
stos
loope
addr16
pop
rolb
aas
mov
dec
xchg
xchg
xor
xchg
jae
push
ljmp
rcrb
daa
enter
ja
jae
cmp
lods
sub
or
xchg
aaa
or
mov
jp
jge
nop
popf
fwait
ja
and
popa
sahf
imul
inc
fsubrl
jbe
test
mov
adcl
stos
jo
lds
adc
sub
jno
and
or
fimuls
ret
mov
add
ljmp
ja
imul
test
leave
mov
cmp
sbb
and
sub
sub
and
pop
ret
int3
dec
aam
adc
cmp
cmpsl
inc
jb
fucomp
jmp
push
data16
xchg
push
adc
jae
jns
jmp
cmp
sahf
dec
fcmovnu
pop
jnp
out
pop
je
movsl
test
sahf
and
adc
jp
sahf
add
dec
mov
xlat
in
int
sbb
sahf
sti
xchg
clc
sub
mov
js
stos
mov
cmp
test
cmp
dec
xchg
mov
sbb
lahf
add
cmpb
lret
je
std
out
inc
or
push
call
sbb
adc
push
enter
xchg
jl
xchg
lahf
jne
aam
jns
idivl
ss
jno
xor
cwtl
sbb
inc
inc
clc
jae
mov
and
scas
shl
outsl
rolb
adc
cmc
dec
nop
outsb
shll
lods
notl
mov
cltd
sub
mov
pop
in
mov
mov
jge
int
cmp
fdivrl
jmp
dec
es
mov
sti
mov
loop
out
or
aaa
sbb
iret
arpl
arpl
fdivrs
cmp
pop
pop
jno
sbb
mov
scas
cs
ds
mov
sti
sahf
xchg
or
xchg
outsb
and
sti
mov
decb
mov
sbb
icebp
popf
pop
adc
ret
cltd
sbb
mov
mov
add
cmc
mov
popa
cli
jp
sub
mov
cmp
incl
push
and
pop
mov
dec
push
cmpsb
stc
nop
mov
adcb
ja
cmp
repnz
lahf
adc
shrl
loope
and
or
or
sbb
incb
pop
inc
lcall
push
andb
pop
and
in
das
int3
daa
iret
sbbb
xchg
cwtl
out
jnp
xchg
test
test
leave
mov
cwtl
push
jl
sbb
xchg
rolb
lods
mov
dec
jge
pop
inc
cli
jl
pop
stos
inc
pop
test
out
mov
mov
pop
jb
jmp
sbb
outsb
cmp
pop
rolb
cmc
and
mov
adc
push
divb
push
jb
ss
or
xchg
addr16
das
jmp
sbbb
xor
stos
int
mov
jae
popf
imul
lret
outsb
cmpl
mov
ja
dec
pop
jge
add
inc
or
sbb
movsl
mov
jmpw
ljmp
jge
dec
incl
test
outsl
std
and
mov
inc
inc
sahf
pop
inc
in
jg
pop
sbb
in
dec
dec
lcall
fincstp
js
test
lcall
movsb
nop
scas
add
adc
test
adc
jno
mov
push
mov
adc
pop
mov
ja
fninit
mov
int
clc
lret
mov
jle
xor
fcoms
sub
push
rcrl
fldenv
movsb
in
addr16
mov
mov
fwait
popa
rorl
jp
lret
push
sub
pushf
cli
cli
out
mov
mov
daa
mov
dec
mov
push
cltd
outsl
cmpb
mov
lock
push
push
lret
inc
fwait
insb
mov
mov
or
sub
xchg
sub
or
adc
sbb
and
mov
cmp
jne
or
xchg
movntq
in
pop
movsb
je
test
loope
jge
loopne
cmp
or
inc
jge
sub
add
add
push
mov
xchg
aam
adc
inc
pop
shrl
insb
push
lret
push
out
repz
insl
jne
rcrl
adc
nop
xchg
push
fwait
call
pop
std
add
in
jo
adc
cmp
daa
cmpl
mov
cwtl
out
frstor
mov
push
xlat
std
push
mov
jl
int3
cmp
orl
cli
cli
jns
cs
mov
sbb
dec
out
adcl
outsb
jns
cwtl
jno
push
call
in
and
xchg
xor
mov
hlt
mov
and
pop
mov
mov
xor
mov
insb
ficoml
aaa
xchg
imul
fadds
popa
movsl
inc
insb
sub
insl
lods
pop
or
and
add
or
dec
and
xlat
insl
cmp
shlb
gs
push
rcrl
add
mov
mov
mov
and
insb
sbb
cmc
leave
jle
sahf
mov
ret
mov
and
xchg
sti
xor
and
dec
mov
popf
pop
push
nop
and
add
aam
lds
sbb
cmp
sub
or
mov
cs
mov
add
push
dec
pusha
ret
cmpl
dec
insb
jmp
mov
rcl
nop
pop
lahf
roll
mov
shll
xchg
inc
cltd
outsl
jne
xorl
jno
add
daa
xor
in
dec
dec
aad
inc
jne
pop
aad
cmp
aad
gs
cmp
clc
int
dec
xor
add
mov
inc
int
cmpsl
dec
pop
mov
repnz
bound
addl
and
ja
jns
cwtl
push
es
add
inc
jb
cmp
mov
nop
mov
shlb
sarl
pop
or
sub
mov
mov
mov
pop
in
jmp
xchg
jle
add
js
mov
pop
sti
xor
push
bound
xor
in
in
xchg
push
jl
pop
lods
ds
push
sub
xlat
decl
sbb
andb
fs
fwait
mov
ljmp
xchg
xorb
out
rep
nop
mov
inc
dec
inc
inc
insl
dec
in
jbe
inc
cwtl
xor
je
jb
push
mov
push
orl
aaa
testl
push
push
add
xchg
xor
jno
or
or
test
adc
sarb
loopne
cmpsl
sbb
adc
outsl
enter
adc
cmc
xor
subb
or
xchg
out
repz
fiaddl
inc
lods
cmp
cmp
sbb
movsb
or
js
stos
popa
insl
sub
cmpsl
lock
dec
inc
xchg
dec
dec
mov
ret
je
outsl
inc
subl
push
popa
mov
mov
imul
ret
outsb
test
jns
pop
dec
or
push
pop
push
or
pop
jg
xchg
jg
fdivl
out
inc
lds
ljmp
mov
mov
push
inc
ror
stos
push
push
decl
and
mov
jne
ret
xor
push
out
aad
push
ss
mov
pop
out
xchg
cmpsl
lods
dec
or
mov
vpmulhuw
repz
std
pop
xor
inc
xchg
ljmp
int
cmp
mov
pushf
pop
cmp
enter
fadd
add
sbb
fidivrl
cmp
les
mov
insl
add
das
or
or
pop
xchg
xor
sub
sbb
lea
stos
mov
notb
xchg
pushf
add
stos
push
test
int
push
repnz
ja
and
cltd
mov
je
push
sub
int
inc
and
inc
mov
adc
ds
cs
js
xchg
outsl
cwtl
pop
and
dec
fisttpll
test
sub
inc
add
jl
insl
data16
aad
jne
das
pop
xor
aas
sub
rclb
inc
sub
cmp
cmpsl
shrl
leave
xchg
push
int3
mov
out
int
int
outsl
out
add
jo
in
xchg
mov
mov
cmp
call
mov
sub
dec
cmpsb
loop
in
jnp
mov
lcall
or
clc
iret
lods
ss
jle
or
loopne
or
test
call
or
lods
pushf
jmp
and
pop
ds
jmp
sarb
cmc
cmpsb
adc
xor
xcrypt-cbc
cmpsl
adc
pop
jno
pop
and
push
mov
lds
add
int
mov
jo
fdivl
les
jge
leave
mov
ret
xchg
in
pusha
jecxz
add
cmp
push
pop
rsm
add
insl
and
push
hlt
xor
bound
scas
jo
rcrl
or
data16
sarb
dec
inc
hlt
jmp
mov
repz
imul
inc
jecxz
mov
popf
lock
xchg
into
mov
or
adc
daa
iret
stos
aas
jb
loopne
adc
hlt
in
aam
or
mov
pop
and
leave
in
inc
xchg
insl
lods
dec
xchg
xlat
out
enter
fucom
sti
dec
xor
adc
add
sub
mov
mov
cmp
in
notl
mov
sbb
dec
add
nop
sbbb
scas
sbb
pop
xchg
mov
cmpsb
nop
dec
out
and
jbe
insb
or
sub
hlt
dec
mov
xchg
ret
push
popf
mov
xchg
mov
and
cmp
jl
add
sub
loope
stc
es
mov
nop
sub
jns
mov
push
pop
lret
xchg
jbe
fldenv
int3
push
pusha
mov
roll
insl
mov
and
add
in
pop
cmc
lea
mov
push
mov
loope
pop
pop
fwait
sahf
adc
xor
jnp
je
xor
gs
xor
dec
jle
push
push
sub
mov
lahf
mov
sbb
into
out
lods
inc
je
adc
push
mov
lock
lods
xchg
sbb
adcl
add
lahf
imul
scas
sub
sub
jge
test
lock
ljmp
repz
push
jo
and
push
mov
push
mov
jmp
and
nop
arpl
cwtl
data16
sub
jl
sbb
cmpsl
mov
add
out
sbb
nop
xchg
repz
test
stos
fsubl
cs
pop
nop
test
andl
shlb
jp
gs
in
outsb
push
into
sbb
imul
pop
jg
insb
repz
add
lds
push
ud0
jl
mov
loop
inc
sub
pop
mov
clc
jge
xchg
jmp
xchg
repnz
fsubrs
jae
cld
pop
je
sub
push
pop
fidivl
fidivrs
xor
sbb
int
in
jge
stos
aas
mov
adc
push
cmp
fimull
cmp
fistpll
push
enter
inc
out
in
sub
clc
xchg
cmp
xor
mov
push
mov
inc
add
mov
pop
ret
jl
push
imull
outsb
dec
pop
jle
mov
paddd
data16
jne
into
xchg
aad
stos
and
xchg
and
cld
mov
pop
push
adc
push
inc
adc
stc
xlat
aad
xor
in
xchg
xchg
sub
push
push
fimuls
bnd
enter
xchg
gs
movsb
lcall
outsb
pop
xchg
fucomi
test
xchg
rorl
int
jbe
inc
into
sbb
fwait
lods
push
stos
xor
sub
mov
jge
lock
cltd
lret
mov
cmp
sbb
add
adc
push
mov
xlat
nop
sbb
push
jae
nop
xor
jae
js
or
test
repz
out
sbb
mov
js
ljmp
push
pop
mov
lods
mov
cmc
adc
add
adc
into
and
xchg
mov
and
stos
sub
in
inc
push
xor
aaa
call
jae
mov
aam
inc
or
outsb
cmp
sti
cwtl
into
and
sub
lock
xor
push
mov
xchg
aaa
dec
test
dec
js
and
cwtl
bound
in
jle
cs
xchg
xchg
or
cmpsb
jle
fcomps
sbb
fcmovb
shrl
mov
lcall
add
aam
xchg
aam
inc
xor
add
mov
inc
mov
jae
inc
daa
cmpb
cmpsb
xchg
mov
inc
dec
mov
dec
xor
sub
xchg
push
mov
test
xchg
lods
fsubs
aam
sub
loope
sbb
bound
loop
xchg
push
cmp
cmpl
jle
int3
or
pop
xchg
or
lods
mov
fnsave
les
dec
inc
test
pusha
test
push
cmpsl
push
dec
insl
mov
mov
xchg
sbb
lret
sub
addl
cmpsb
cwtl
out
pop
and
cmp
insl
mov
inc
cmp
imul
fwait
int3
das
clc
imul
pop
push
mov
inc
and
inc
push
leave
out
inc
fs
xchg
mov
and
mov
fdivrs
mov
loope
mov
in
inc
add
icebp
test
test
test
xor
stos
add
ja
out
test
loop
cmpsl
in
or
jle
sti
or
mov
jge
xchg
aam
outsb
jg
xchg
dec
enter
test
inc
push
loope
xor
push
mov
fs
shll
jbe
lock
or
mov
fidivs
in
inc
push
xchg
jns
inc
mov
mov
mov
std
and
ss
nop
add
insb
sub
ss
dec
mov
enter
mov
dec
push
adcl
shlb
aas
in
mov
dec
mov
jns
xor
add
xchg
jg
js
xor
pop
pop
stos
loop
and
add
fidivrs
mov
test
cmp
popf
fimuls
pop
push
pop
or
rcll
or
inc
xchg
cmp
jecxz
jmp
or
lahf
cwtl
out
dec
xchg
je
out
popa
mov
bt
cli
add
push
aad
ss
mov
xchg
or
mov
sbb
add
xor
inc
in
xchg
aam
sarl
enter
mov
sbb
ss
pop
cwtl
xchg
and
dec
jmp
push
and
jbe
pop
dec
in
cmp
leave
subb
addr16
xchg
cmp
cmp
insl
or
mov
or
xor
and
shl
repz
adc
jmp
mov
mov
rolb
cmp
jae
push
test
adc
inc
dec
mov
pop
pop
inc
mov
cmp
push
inc
aas
mov
push
mov
pushf
or
dec
pop
aas
mov
enter
push
xchg
aas
cld
stc
or
in
mov
add
out
xchg
push
or
cmp
aad
sbb
mov
cli
mov
je
inc
clc
fmul
cli
imul
jb
icebp
icebp
lods
pusha
inc
push
lods
loope
mov
xchg
fadds
mov
cmp
lock
sbb
push
xchg
sub
pop
loope
fs
les
xchg
cld
inc
xchg
jp
cmp
sub
ret
inc
outsb
jbe
pop
and
push
add
lahf
xor
xor
negl
xlat
xchg
lcall
cmp
or
mov
jae
iret
hlt
in
inc
cli
push
mov
in
mov
and
stos
and
icebp
sbb
push
push
data16
ja
insl
push
sbb
or
xor
aad
out
icebp
or
mov
mov
jae
lock
jl
cmp
xor
mov
shrb
notb
jnp
pop
cs
mov
cmp
insl
adc
mov
mov
imul
pop
mov
cmp
es
xlat
lcall
in
test
test
jmp
je
dec
jle
push
and
xchg
mov
pop
cmpsb
cmp
xchg
pushf
sbbl
ret
dec
stos
inc
insb
fistpll
movsl
jb
and
add
pop
mov
lahf
pop
int3
xlat
loop
insb
lock
mov
sub
cmp
pop
jno,pt
cld
stc
aam
inc
sbb
fnsave
jbe
imul
in
movsl
hlt
jns
mov
test
mov
sub
pop
xchg
sbb
je
sahf
ds
push
mov
xchg
jb
mov
sub
cmp
bound
ss
fwait
adc
adc
jno
or
inc
and
pop
jecxz
xorb
xlat
outsb
sahf
dec
and
shlb
pushf
mov
in
imul
xor
or
xchg
lahf
or
push
adc
xchg
jecxz
lods
xor
push
int3
push
sub
or
ljmp
das
lret
add
les
inc
sub
sbb
add
dec
sbb
lret
outsb
pop
push
test
xor
xor
jge
shlb
inc
sbb
sbb
and
js
cmpsl
scas
out
inc
pop
sbb
fs
out
fsubrs
add
je
outsl
push
jbe
cmpsl
sbb
xor
call
mov
sahf
fisubs
je
jns
add
push
fists
out
sbb
mov
push
ret
mov
jp
dec
movsl
ljmp
xor
mov
cmp
aaa
or
adc
rorb
jae
frstor
inc
adc
in
mov
movntq
xor
testl
pop
stos
xchg
dec
pusha
xor
rcll
popa
pop
mov
hlt
sub
sbb
rorl
lods
sbb
test
jmp
nop
jecxz
xchg
arpl
mov
sbb
frstor
jg
out
popa
stos
call
mov
sarl
cmp
mov
cmp
cld
xrstors
insb
push
into
or
jl
cmp
push
mov
popf
push
mov
sahf
mov
aas
mov
add
push
test
mov
test
repz
loopne
mov
jl
stos
fsubs
stos
mov
imulb
stos
cmp
ror
lods
cltd
xchg
stc
dec
jns
clc
mov
cmp
or
lcall
lahf
mov
jmp
pop
pushf
arpl
jle
jecxz
adc
push
mov
push
inc
sub
sub
inc
and
or
sub
pop
lods
nop
mov
sbb
in
data16
loopne
addr16
adc
out
add
mov
mov
ss
lds
hlt
mov
pop
lea
test
in
incb
fnstenv
andl
sub
sub
pop
mov
shlb
cli
xchg
cmp
testl
cmc
repnz
xor
das
pusha
push
repz
dec
or
mov
add
lock
pop
and
dec
addl
lock
cli
mov
fwait
dec
jb
push
in
std
dec
vmread
hlt
sti
xchg
lret
add
repz
sti
cmp
addl
or
lods
cmp
push
mov
pop
call
add
movsb
inc
push
jno
mov
mov
or
js
stc
adc
or
js
outsb
cmp
adc
and
shl
gs
jl
mov
mov
mov
mov
out
and
cmpsl
int
int3
addl
iret
pop
mov
aaa
xchg
pushf
jns
add
and
cmp
and
es
add
int
add
xlat
je
cmp
push
or
pop
mov
push
loop
shlb
scas
mov
mov
gs
fld1
adc
mov
sub
mov
jo
cld
cltd
stos
orl
mov
aaa
loope
or
add
loop
das
mov
pop
sub
sub
mov
pop
add
inc
fmull
mov
fadds
in
in
loope
or
add
nop
add
xor
in
xchg
jae
lock
jae
mov
aad
xor
sbb
sub
jo
data16
cmp
out
jae
dec
lea
or
je
sub
pop
push
ret
scas
push
inc
test
andb
sub
into
jl
sub
add
movsb
jmp
mov
dec
cwtl
mov
sub
std
popf
mov
or
dec
jo
or
in
dec
and
pop
out
loop
push
mov
rorl
mov
into
loop
sbb
mov
xor
push
mov
je
inc
dec
test
repnz
lret
mov
lret
scas
in
mov
scas
js
pusha
pop
mov
gs
ja
adc
and
cmp
jne
dec
mov
cmp
xor
sbb
lret
mov
mov
push
loop
or
ficoml
rol
ret
aaa
test
xor
dec
fimull
fdivl
and
add
adc
pushl
fadd
jo
pop
xchg
ficomps
jae
pop
ret
dec
not
cs
fwait
pop
jp
or
sbb
pop
mov
aas
imul
xor
and
ds
sub
xchg
push
shr
mov
in
or
jl
shlb
movsb
sbb
xor
xor
cli
mov
fsub
pop
or
js
sub
aam
loop
decb
hlt
decb
sbb
sbb
push
ja
or
cmp
clc
negb
test
dec
push
movsb
mov
jmp
ss
xor
sbb
jb
arpl
mov
lods
pop
xorb
int3
sub
or
xchg
pop
leavew
clc
sub
in
cmc
in
pop
insl
clc
pop
sbb
sub
ret
push
cmpsb
lea
outsb
jnp
cs
xchg
pop
and
xchg
mov
mov
js
or
mov
xor
and
jne
filds
push
or
fabs
clc
cs
out
in
dec
sub
xor
mov
dec
jmp
mov
add
aaa
pop
push
fisubs
push
ds
or
fistps
pop
dec
adc
pop
adc
ja
jecxz
out
call
test
xchg
stos
pop
jo
push
aas
rcr
mov
in
xchg
fiadds
sarl
or
sbb
sub
ret
jmp
push
or
sti
mov
in
inc
mov
xorb
lcall
pop
add
jnp
mov
mov
mov
loopne
fwait
cmp
adc
sub
out
xor
movd
mov
mov
fldcw
push
scas
daa
sahf
sbb
mov
sub
leave
inc
pop
pop
sub
mov
imul
sbbb
lock
sub
cmpsb
rcrb
lret
and
inc
push
shlb
pop
insb
test
push
lcall
stos
mov
push
fisttpll
into
subb
lock
push
dec
xor
mov
out
and
dec
rclb
inc
mov
inc
pop
mov
mov
sahf
jg
xor
lock
and
std
sub
cmp
mov
out
inc
mov
filds
mov
adc
fdiv
mov
push
insb
rorl
push
shll
dec
mov
dec
xchg
sbb
inc
pop
insl
cmp
or
mov
addb
mov
pop
pop
inc
jmp
fistl
cltd
ja
ja
aaa
test
add
xchg
shll
mov
stos
mov
es
stc
or
pop
iret
ja
pop
insl
test
sahf
fildl
loop
xchg
pop
rolb
and
jmp
cmp
jmp
add
pop
enter
rcll
dec
vrcpps
pop
test
jae
aas
fadds
je
int
add
testb
fwait
sbb
test
and
iret
sub
int3
sub
pop
jp
rcl
lret
xor
inc
xor
cld
xchg
out
and
aam
inc
sbb
adc
mov
inc
inc
js
mov
xchg
adc
and
mov
dec
ja
daa
data16
cli
mov
nop
xchg
out
jne
mov
add
stos
shll
cmpsl
ds
jo
enter
ja
nopl
adc
fs
fbld
addr16
daa
pop
inc
jmp
pop
daa
shr
mov
sahf
sbb
mov
dec
mov
jns
cmp
jge
push
mov
and
testb
xchg
lcall
jo
div
inc
lods
xchg
ja
sbb
sbb
or
int
mov
cmpsb
fwait
outsl
mov
cmp
ss
or
xor
and
lea
push
leave
inc
push
or
add
leave
fiadds
js
jns
sbb
mov
push
mov
add
imull
mov
push
rorl
push
leave
fisubl
loope
cli
xchg
enter
pop
inc
sar
push
mov
adc
test
jl
lea
clc
inc
mov
out
cmp
mov
clc
xchg
mov
push
movl
cmp
movsb
in
add
pop
and
jb
fisubrl
xor
mov
call
dec
push
jmp
inc
add
adcl
mov
aaa
jmp
or
inc
push
adc
or
out
cltd
cld
enter
rcrb
or
push
cld
pop
popf
push
adc
out
adc
data16
shlb
inc
lret
loopne
xchg
std
cmpsb
in
cmpl
xchg
dec
jnp
push
loope
and
xor
stos
sbb
inc
pop
xchg
jb
jnp
mov
cmpb
cld
and
adc
jmp
data16
xlat
ret
stos
fidivs
add
fwait
mov
pop
or
jb
adc
out
hlt
add
iret
divb
rolb
mov
sahf
movsb
test
push
pop
data16
mov
nop
mov
jp
sti
ss
lds
sbbb
ret
shrb
add
or
cmpsb
test
fsubp
popa
es
and
ljmp
inc
ret
mov
sbb
mov
mov
push
sti
and
inc
inc
cli
mov
ret
pushf
ja
lret
pushf
pop
sub
insl
add
xor
lahf
ljmp
stc
inc
sub
pop
jmp
adc
push
out
inc
ror
lahf
push
mov
pop
push
ret
rclb
jge
pop
repz
dec
jbe
shr
jnp
add
jge
mov
call
sti
fisubs
or
inc
jg
dec
xchg
cmpsb
xchg
adc
repnz
xor
xorl
neg
jg,pt
iret
mov
mov
in
dec
sub
push
cmp
aam
dec
jbe
ficoms
insb
sbb
scas
inc
addr16
mov
xor
mov
loop
cmp
dec
fiadds
add
ficoml
cli
pop
popf
subl
cs
cwtl
dec
mov
or
cmc
xchg
mov
mov
iret
or
sub
rclb
lcall
lret
mov
and
test
push
mov
imul
sbb
pusha
cmpsl
pop
gs
cmpsb
mov
in
xor
or
test
out
mov
xchg
repnz
sbb
flds
aam
lahf
xor
inc
and
bound
lock
push
mov
dec
xchg
pusha
mov
sarb
insl
aad
out
and
les
cli
rclb
mov
mov
ds
loop
addr16
add
shlb
lea
cmc
in
ja
mov
xchg
idivl
addr16
loop
xor
sbb
nop
vxorps
fnstcw
test
iret
insb
inc
mov
lods
mov
push
and
mov
fcompl
inc
cmpsl
bnd
imul
inc
in
sub
pop
icebp
test
mov
push
xchg
mov
repnz
and
dec
push
inc
or
in
loopne
pop
clc
pop
mov
popf
repnz
dec
xchg
mov
aas
xor
mov
cmp
bound
addr16
arpl
cmp
aad
push
iret
fldcw
cmp
rep
xor
adc
repz
mov
hlt
icebp
rcrl
pop
adc
and
and
sub
pop
out
adc
xor
lret
jbe
mov
iret
repnz
cmp
mov
pushf
add
inc
out
lods
xor
in
adc
movsb
iret
sbb
loopne
xlat
xchg
loop
fnsave
daa
shlb
or
lret
mov
mov
in
dec
push
and
jmp
adc
mov
dec
or
or
xchg
mov
pushf
adc
jnp
aas
push
mov
xlat
mov
xorl
sbbl
push
cli
adc
dec
shlb
test
mov
xor
or
hlt
in
sub
dec
mov
jle
scas
cmpsb
int3
push
sub
dec
mov
sti
sub
sub
xor
sbb
sub
jecxz
pop
sub
push
add
dec
es
repz
sub
mov
mov
aas
adc
fistpll
movsb
add
inc
daa
ficomps
insb
popa
aas
aaa
dec
mov
popl
xchg
mov
push
gs
sbb
insb
pop
call
mov
pop
leave
jmp
das
loopne
je
adc
cmpsl
jg
xor
aam
rcr
movq
mov
aam
cmpsb
mov
mov
pop
lret
add
popl
cld
xlat
test
xchg
add
pop
jp
stc
hlt
ss
mov
fnstsw
pop
xor
fbstp
aas
lea
mov
dec
popl
mov
mov
sbb
int3
shll
bound
pop
pop
imul
add
out
popl
dec
lods
push
mov
cltd
add
mov
inc
pop
sbb
mov
adc
pop
or
stos
lcall
repnz
mov
push
outsl
jno
xor
pop
rcl
je
fnstsw
call
cmc
insl
jl
cmp
jge
push
pop
xor
mov
and
lods
dec
push
dec
mov
je
dec
mov
sbbl
xchg
scas
sbb
lds
rcll
iret
jo
sbb
aas
inc
pop
inc
in
jle
addb
xor
lock
outsl
fdivl
sbb
pop
ds
or
push
fidivrs
inc
movsl
push
int3
jo
mov
dec
lds
xchg
stos
stos
les
cmp
lahf
xor
loop
dec
inc
lock
nop
sub
loope
jmp
pop
push
out
inc
lods
jecxz
and
push
cltd
adc
iret
jp
cmp
lret
dec
hlt
inc
js
int3
popa
mov
dec
gs
xor
pop
sbb
jl
fists
mov
and
mov
sti
punpckldq
ret
repz
arpl
pop
jne
inc
push
cmc
notl
and
jae
adc
pop
inc
icebp
and
ljmp
insb
mov
loope
xchg
lret
jbe
sarb
lods
ret
xchg
hlt
mov
fdivs
out
sub
dec
xchg
adc
test
mov
iret
ds
sahf
mov
mov
pop
add
test
pop
popf
mov
rolb
sub
fsubrl
repz
xchg
arpl
cmp
js
mov
xchg
push
and
jge
adc
dec
mov
push
repnz
lahf
xor
push
cmp
xor
mov
dec
xor
out
dec
or
jle
push
pop
mov
cmp
mov
clc
or
or
rclb
lods
into
mov
jge
pop
mov
shrb
std
sub
jb
add
jno
cmp
or
jae
xchg
hlt
fcmovu
fcomi
aas
push
jno
cmp
cmp
mov
inc
fbld
mov
xchg
xchg
pop
mov
pop
and
cmp
mov
push
inc
aam
cli
insl
pop
out
pop
or
cltd
jl
in
shll
push
mov
leave
int3
scas
pop
xchg
push
fdivl
and
xchg
gs
imul
and
scas
xchg
sub
call
mov
or
notl
lock
pop
jge
push
jne
aam
sub
inc
xorl
pop
xor
cmpb
jle
xor
and
out
hlt
dec
cli
sbb
mov
into
dec
xchg
int
add
shl
xlat
mov
ljmp
outsl
fwait
imul
outsb
repz
mov
out
in
jo
xor
aas
aad
sbb
mov
inc
mov
lods
or
shll
cmp
enter
dec
push
xor
push
loopne
mov
clc
pop
shlb
dec
cmp
pop
pusha
jnp
test
bound
dec
sahf
pusha
jbe
xchg
aam
mov
lods
ficompl
ret
pop
mov
and
cwtl
ja
add
das
sbbb
add
rol
je
iret
jmp
push
push
adc
inc
push
sbb
mov
rol
adc
lods
ds
insb
shrl
pop
inc
fwait
pop
sub
xchg
pop
lea
xchg
xor
push
and
stos
push
daa
xchg
jl
dec
or
fs
negl
pop
adc
push
pushf
mov
xorb
fstpl
shl
fucomip
notb
scas
adc
mov
or
xchg
push
mov
jge
out
sub
jl
bound
ss
and
cwtl
repz
test
ret
mov
ljmp
pop
or
add
cmp
shrl
add
in
scas
cmpsl
sbb
cs
rclb
in
icebp
inc
into
aad
cmp
scas
adc
mov
stos
arpl
push
data16
sti
scas
ror
das
test
out
add
pop
mov
xchg
insl
jno
daa
jne
inc
mov
fcoms
loopne
fisubrl
int3
cltd
add
jne
jg
xchg
test
pop
mov
loope
xchg
pushf
and
imul
aas
addr16
aam
ficoms
mov
cld
jbe
insl
nop
nop
xchg
push
cmpsb
jmp
das
mov
aad
xchg
mov
xchg
jl
es
pushf
repz
repnz
mov
mov
push
push
jb
pop
lret
jp
aas
mov
rcrl
lret
inc
loopne,pn
lahf
xor
mov
mov
push
sbb
loop
push
jns
jne,pt
lcall
imul
loopne
adc
mov
testb
jecxz
stos
icebp
jno
jl
scas
cs
jns
in
incb
xchg
cmpsb
or
xlat
pushf
fstpl
pop
push
daa
cmc
lock
repz
xor
les
xor
pop
mov
test
mov
loop
sub
sbb
jl
sbbb
shll
and
cmp
xor
add
push
aas
adc
adc
repz
pop
loop
xor
bnd
or
or
mov
inc
mov
push
insl
add
sub
shrl
gs
out
movsl
out
jecxz
mov
lea
test
dec
lahf
aas
adc
sub
sbb
inc
lcall
sbb
inc
sub
inc
mov
adc
mov
mov
test
push
push
inc
add
fisttpll
call
xchg
jecxz
cs
mov
jg
xorb
data16
push
dec
jnp
lods
cltd
idivb
loope
jle
xchg
ret
cmp
and
pop
pop
xor
je
push
not
adc
xchg
stos
shlb
aad
push
push
mov
and
into
mov
jmp
push
dec
clc
test
les
in
insb
iret
pop
mov
sub
or
mov
mov
push
ljmp
int3
add
mov
jo
sbb
sub
idiv
movsb
mov
cli
cmp
cmp
add
pop
mov
sub
addr16
sub
data16
int3
mov
sub
lcall
or
outsb
fdivl
in
cmp
cmp
cmp
cltd
ja
stc
dec
test
lret
pop
and
das
lea
outsb
cs
push
xchg
stos
or
xor
cmp
mov
xchg
jno
leave
daa
mov
adc
mov
or
incl
pop
pop
pusha
sub
adc
mov
cmp
ljmp
pop
xor
mov
fcmovnb
mov
pop
mov
in
mov
pop
dec
pcmpgtd
loop
add
nop
outsl
in
push
bound
je
pop
sbb
xor
push
push
dec
cs
sbb
jnp
stos
loopne
xchg
int
aas
mov
mov
and
loop
leave
mov
xchg
mov
adc
jb
leave
fs
and
loop
jmp
out
lods
pushf
xlat
lock
push
loopw
dec
pop
fiadds
cmp
iret
sub
mov
lods
adcb
push
arpl
jecxz
subb
insb
add
dec
mov
jmp
push
push
sbb
fwait
imul
xor
mov
roll
add
pop
test
xlat
test
test
pop
xor
fcomps
xchg
movsb
lcall
in
mov
sbb
loopne
jmp
sbb
jae
adc
popf
mov
pusha
mov
jge
out
popf
jno
rclb
push
adc
fcoml
in
shlb
hlt
cmp
stc
in
mov
mov
in
sbb
lds
popa
inc
ficompl
ret
lock
fisttps
imul
cltd
loope
rolb
hlt
andb
pushf
add
inc
adc
rolb
addr16
jle
cmc
outsl
adc
adc
lahf
inc
mov
enter
ja
xor
mov
jle
sub
inc
bound
arpl
adc
movsl
popa
jg
xchg
jb
ficompl
enter
cmp
jmp
adc
dec
dec
cmpb
and
pop
shlb
cmp
jecxz
nop
stos
push
mov
xchg
xor
mov
jge
movsb
decb
pushf
jmp
pop
push
arpl
sbb
aaa
daa
out
jnp
mov
push
xor
adc
ds
stos
outsb
xorl
pop
lret
cwtl
int3
jb
sbb
adc
sbb
call
cmp
and
out
lret
xchg
push
es
mov
cmp
add
pop
jae
adc
andl
or
push
dec
and
mov
push
cmp
xchg
cmpb
pop
and
bound
test
ljmp
in
lahf
xchg
jl
mov
pop
add
cwtl
cmp
push
and
pop
push
lods
in
xchg
pop
sbb
xchg
sub
movsl
pusha
mov
and
jge
push
inc
mov
nop
int3
adc
fwait
in
loopne
je
decl
and
cmp
cmp
hlt
sub
inc
add
sub
arpl
xor
ljmp
pop
ffree
ds
mov
sub
and
pop
push
test
imul
mov
inc
insb
mov
ds
movsb
fwait
ja
dec
imul
sub
jge
in
incl
enter
addr16
sbb
mov
and
or
xor
cs
push
mov
dec
std
jp
jns
dec
and
daa
pop
or
jg
dec
dec
cld
lea
dec
fldenv
push
or
jbe
test
dec
pop
pop
aad
out
or
cmpsl
xlat
std
inc
pop
hlt
addr16
cwtl
test
xchg
aad
aad
cmpsb
cmc
or
aas
nop
pop
in
decb
cltd
in
popa
push
jecxz
pusha
xchg
jno
mov
shr
fldl
mov
call
push
cmp
fwait
mov
insl
scas
or
xchg
popa
stos
addl
dec
push
incl
aad
mov
sbb
sbb
mov
mov
jmp
or
das
bound
push
jno
fldcw
sub
sbb
gs
mov
xchg
les
fdivs
out
mov
jae
mov
insl
push
cwtl
xor
and
sbb
lea
xchg
sarl
xor
jecxz
push
out
int
popa
and
pushf
jge
cmp
inc
sbb
lret
leave
cmp
shrb
cmp
filds
xchg
xchg
push
enter
in
int3
loope
push
adc
xor
hlt
adc
add
fadds
aas
jae
jle
xorb
pop
fcoms
fs
adc
jecxz
or
in
jnp
ss
jnp
jns
ds
cmp
and
jo
rolb
dec
mov
jbe
sub
xchg
dec
pop
pusha
shl
lds
roll
pop
sub
daa
adc
mov
lock
cltd
pop
imul
inc
sub
inc
data16
add
pop
adc
jbe
enter
arpl
mov
and
cltd
ss
push
adc
xchg
cmp
test
jmp
add
cltd
lock
imull
mov
xor
adc
xor
shlb
xor
ljmp
adc
insb
aas
pinsrw
iret
xchg
test
mov
lret
insb
insl
std
cli
mov
lds
push
int
xchg
imul
sbb
sbbl
cs
loope
xor
imul
inc
sub
mov
popa
dec
sub
add
mov
lahf
mov
cmp
add
cltd
add
jno
lret
sub
iret
xor
pop
mov
sub
adc
outsb
dec
fwait
int3
lret
xchg
and
pop
and
mov
lcall
dec
push
scas
dec
sub
leave
xor
mov
xchg
inc
cmp
adc
add
shlb
fisttps
test
or
lret
jg
sbb
test
xor
sahf
jg
jg
adc
in
jge
stc
xor
pushf
shll
out
sub
and
shlb
lods
pop
add
mov
xor
call
push
xor
and
fistl
push
into
lds
adc
mov
cmovge
push
stc
mov
jae
clc
or
cmp
jb
sbb
xchg
add
mov
mov
mov
mov
push
pusha
push
mov
scas
cmp
xor
clc
imul
fsubr
mov
loopne
fmuls
repnz
inc
imul
mov
test
or
mov
gs
jle
and
addr16
sub
mov
mov
push
dec
jge
dec
push
inc
xchg
lcall
out
orb
je
inc
xchg
movsl
loope
sbb
les
rorb
xchg
test
jno
jge
cltd
mov
aad
jecxz
lret
xor
movsl
cmp
push
jge
add
add
popa
and
jl
jge
push
pushf
pop
jg
movsl
lcall
frstor
cmpsl
insl
jle
push
or
repnz
mov
mov
cmp
idivb
gs
dec
push
add
fldl2e
mov
adc
mov
cwtl
and
dec
cwtl
xchg
loop
mov
es
ljmp
cmp
lcall
pop
js
jle
push
dec
inc
add
adc
outsl
sbb
ja
inc
push
shll
fdivp
mov
dec
xchg
cmp
lahf
sub
inc
outsb
cmp
cmp
imul
mov
add
mov
inc
out
insl
enter
lret
cmp
shr
inc
inc
inc
xchg
inc
cld
addb
lods
and
pop
ljmp
add
fisubrl
jnp
repz
jnp
xchg
rclb
xor
pop
sarb
andl
xor
or
mov
mov
pop
mov
ret
and
cmp
das
fistps
lods
scas
into
or
push
add
inc
or
popf
jle
fdivl
addb
cmp
or
push
mov
lea
cmp
cs
sbb
iret
push
push
pop
scas
cmp
es
arpl
jl
arpl
mov
loope
imul
xor
fldenv
out
and
dec
out
leave
int3
aaa
mov
or
out
jne
push
mov
and
movsl
mov
int3
pusha
mov
sbb
mov
jl
xlat
scas
ja
aam
out
imul
insl
mov
xchg
enter
shlb
stos
push
sbb
daa
das
loopne
pop
xchg
sub
out
sahf
loopne
mov
arpl
or
mov
ja
mov
loop
je
mov
sub
sub
lods
imul
adc
mov
inc
aam
lret
mov
enter
xor
imulb
leave
or
add
icebp
lods
or
mov
push
jle
dec
cli
xor
repz
das
cmc
adc
jae
aad
inc
mov
popf
int3
inc
shr
add
inc
cli
adc
and
jl
loope
pop
scas
je
pop
out
aam
cmp
sub
cmp
sbb
lea
iret
iret
xchg
shlb
out
lret
enter
push
add
test
dec
sub
clc
cmp
cmp
outsb
movsl
into
addr16
and
pop
and
int
xor
insb
out
xchg
mov
xchg
cld
dec
push
inc
movsb
or
jnp
cmpsb
cmp
jno
and
lcall
jle
in
add
xchg
cmp
lea
jns
cltd
dec
dec
jno
sti
ret
das
andb
sahf
lea
stos
in
lods
in
xchg
ds
test
cltd
decl
icebp
idivl
mov
inc
mov
lds
adc
sub
inc
jge
fnsave
pop
mov
loop
or
cmp
or
loope
loop
mov
push
sub
imul
popf
movsl
mov
ja
push
fstl
leave
jbe
mov
lds
ja
jbe
scas
aam
js
dec
ret
jnp
popa
add
mov
stc
push
roll
mov
mov
sahf
mov
movsb
mov
rclw
jnp
cmp
hlt
mov
jge
call
adc
fildll
sub
mov
mov
shll
lret
jg
jg
ljmp
ljmp
xchg
xor
stos
inc
adc
lcall
int3
cmp
stos
cmp
sbb
imull
jnp
mov
xor
enter
pop
repnz
repnz
and
mov
xor
or
or
movb
push
mov
into
xchg
rolb
adc
pop
add
adc
ja
cmp
and
push
mov
inc
lods
outsl
jnp
inc
cmp
andl
or
mov
jo
xchg
jae
xchg
insb
lea
lea
fistps
pusha
add
sahf
fidivl
dec
ror
jle
mov
insb
inc
xchg
rorl
add
shlb
mov
int3
jb
stc
loop
sbb
add
out
push
leave
xchg
in
mov
arpl
and
jle
or
lret
jl
mov
pop
loopne
insl
mov
add
aam
push
mov
sbb
mov
pop
loop
add
inc
push
movsl
xchg
std
cmp
in
scas
pop
les
mov
sub
bndstx
or
adc
in
inc
pop
xchg
jle
cmp
mov
lret
pop
mov
enter
dec
xlat
inc
push
aad
repnz
addr16
cld
mov
sbb
pop
push
or
push
xorb
push
jecxz
add
xchg
xchg
inc
cwtl
sbb
xlat
lcall
ret
jns
fisttps
and
test
fldl
push
mov
inc
icebp
fistpll
daa
or
xlat
sbb
sub
int
xchg
mov
xchg
test
mov
dec
adc
ds
mov
fwait
aaa
aad
sbb
pop
xchg
or
jno
loop
or
xchg
push
scas
push
dec
out
inc
idivl
pushf
cmp
pop
add
scas
add
mov
adc
jbe
sbb
xlat
sti
sub
enter
inc
mov
xchg
xchg
cmpsl
aad
aad
xchg
test
and
push
fcomp
cmp
cli
sub
shrb
and
and
lds
sahf
sbb
aas
pop
fisubrl
rorb
leave
and
mov
loope
cltd
lahf
das
ffree
jl
jnp
dec
mov
xchg
push
adc
jno
loope
mov
mov
andb
mov
sahf
jecxz
xchg
adc
and
mov
push
stos
pushf
pushf
js
loope
jbe
mov
xor
pop
jo
cmc
imul
mov
jg
add
dec
add
gs
and
stos
sub
pop
mov
orb
push
fists
insl
xchg
mov
cmp
push
data16
aaa
mov
loope
adc
cmp
outsl
mov
push
push
iret
mov
stos
mov
sbb
pop
rclb
push
mov
test
loopne
les
std
loopne
sbb
movsl
imul
push
outsb
pop
add
leave
xor
and
and
pop
sub
cwtl
push
std
xor
push
dec
shl
das
xchg
shlb
mov
shll
adc
pusha
inc
icebp
mov
lods
xlat
adc
mov
and
pop
inc
in
mov
sub
xchg
xor
aas
in
sbb
xchg
xchg
ret
test
or
in
mov
cmc
pop
xchg
in
dec
mov
sub
push
ds
mov
xchg
xchg
lds
stos
jbe
mov
xlat
out
push
add
and
aad
fidivrl
mov
jb
and
mov
push
jmp
repz
cli
out
mov
aas
mov
testb
cltd
loop
pop
mov
jbe
sbb
mov
push
in
mov
adc
cs
ret
mov
sbb
add
mov
inc
out
push
jmp
push
push
jmp
lods
mov
stos
ja
mov
or
mov
adc
es
add
fsts
insl
pop
lods
mov
dec
and
adc
mov
ljmp
mov
shll
pop
adc
out
je
sub
iret
jmp
sbb
pop
into
ss
pop
pusha
mov
mov
xchg
mov
xchg
jbe
int
inc
out
inc
xchg
and
inc
push
add
inc
lahf
xchg
adc
and
in
mov
sub
xor
mov
pop
in
daa
pop
push
jb
pusha
cmpsb
xor
out
pushf
xchg
dec
adc
adcl
punpcklbw
jns
frstor
sub
add
in
sub
seto
arpl
cmpsb
enter
fiadds
adc
mov
xor
js
push
aas
movsl
or
stos
sbb
lock
adc
adcb
adc
rcl
inc
mov
jmp
mov
push
mov
in
fiadds
mov
pop
lret
push
lcall
xchg
inc
xchg
scas
les
sahf
xor
jecxz
enter
clc
into
mov
cmc
lea
out
lods
add
dec
outsb
or
mov
lock
xchg
or
or
push
jl
daa
push
sub
cmp
jno
xchg
or
ds
dec
lcall
xor
fs
repnz
xorb
loopne
add
ja
and
pop
orl
and
rorb
iret
cmp
out
outsl
inc
scas
cld
pusha
xor
icebp
push
mulb
jle
ficompl
cmpl
popf
enter
inc
mov
cmp
int
test
cli
dec
lods
cmp
mov
add
test
pop
fistl
rcl
clc
hlt
andl
mov
arpl
stos
sbb
add
or
into
dec
int
cmp
jae
outsl
mov
mov
jmp
or
xchg
sub
fbstp
mov
push
imulb
push
pop
in
in
jbe
int
test
xor
mov
push
mov
adc
popf
pop
mov
and
stc
inc
adc
push
push
int
cmp
or
push
jo
mov
aam
stos
jbe
sbb
or
mov
int
hlt
das
xchg
pushf
push
loope
add
and
daa
scas
or
dec
xor
aaa
aaa
cmp
adc
cmp
fdivrs
repnz
push
sbbl
cmp
in
cs
pop
xor
dec
and
xchg
lds
aad
loop
xlat
adc
addl
mov
shrl
sub
sbb
dec
scas
arpl
movb
test
iret
xchg
mov
pop
aam
mov
aaa
daa
mov
bound
adc
push
xor
imulb
dec
repz
pop
jb
outsl
jp
stc
add
inc
inc
cmpl
sub
sbb
xchg
adc
xor
clc
mov
das
push
mov
lahf
mov
pop
mov
dec
aam
or
repnz
clc
in
movsb
dec
adc
aam
xchg
jno
arpl
test
lods
aad
jno
xor
cmp
push
push
stc
adc
in
fwait
jne
xchg
mov
rol
inc
aam
or
mov
les
lcall
add
iret
test
cmp
adc
enter
int
and
test
mov
fists
sti
sub
jp
mov
xor
aad
movsl
ret
xor
pop
call
clc
fiadds
push
aaa
loop
imull
imul
jge
and
and
push
or
cmp
push
outsl
dec
stos
out
pop
dec
adc
lds
mov
push
icebp
cmp
xor
xchg
xchg
iret
mov
addr16
mov
or
les
lods
cli
aaa
adc
cmp
cld
mov
jno
xchg
jle
inc
je
cmp
out
sub
mov
shll
lret
mov
rolb
mov
xor
mov
jae
jae
sub
pop
int
pop
arpl
xchg
push
sbb
mov
dec
add
sub
repnz
jle
popf
push
cmpsb
into
movsl
es
sbb
ja
popa
ja
or
ret
out
mov
cmp
cmp
sbb
add
xor
js
push
shlb
hlt
bound
adc
pop
add
movsb
clc
stos
jae
cmp
aad
in
mov
gs
dec
fsubr
sahf
psubw
out
push
das
adc
jnp
insl
jl
aaa
pop
mov
fstpl
sarl
idivb
rol
xchg
test
ud0
ficoml
outsb
das
cmc
dec
push
sub
jno
jae
or
popf
mov
xchg
sub
xchg
bound
adc
adc
dec
lds
les
arpl
jo
dec
popf
iret
sahf
lock
out
cmc
loope
jge
das
popl
int
ja
jnp
jb
mov
push
scas
movsb
jle
repz
loopne
add
or
popf
pop
inc
ljmp
cltd
lahf
test
jle
dec
jne
loop
xor
and
movsl
jl
push
sti
movsl
outsb
pop
cmp
or
or
lahf
out
movsl
sbb
clc
popa
jmp
or
insb
clc
in
aaa
stos
imul
xchg
and
sbb
sub
mov
sbbb
ss
daa
pop
test
inc
in
push
jp
jecxz
lock
sbb
shl
xchg
lret
xchg
cmc
jmp
jg
lods
and
test
mov
or
aam
ret
sbb
cmpl
in
insb
or
ret
push
jle
mov
cltd
xchg
stos
int
dec
xchg
push
es
pushf
in
out
insl
nop
inc
outsl
jae
fmuls
das
cmp
shll
sbb
ds
je
pop
mov
loop
fimuls
sbbl
push
push
testb
mov
pop
loop
pop
dec
inc
mov
negb
mov
inc
jg
push
lret
jle
fidivs
fcoms
xlat
arpl
dec
nop
xlat
and
mov
and
rcr
inc
jns
js
mov
xor
ret
adc
ror
mov
add
aad
out
mov
arpl
add
adc
popf
stos
push
cltd
jp
iret
imul
push
jle
call
pusha
std
cmpsl
cmpsb
xchg
movsl
pop
inc
xchg
cmp
mov
aaa
leave
and
mov
xor
lods
mov
fidivrs
scas
xor
push
mov
mov
hlt
xor
call
lret
jg
push
cwtl
mov
bnd
cmpsb
lret
aam
out
lcall
mov
cmp
outsb
xor
data16
cmp
mov
push
and
push
add
pop
fwait
push
ret
add
cwtl
mov
adc
stos
lods
aaa
add
in
push
into
jecxz
inc
mov
stos
test
sbb
sub
sarb
sub
into
inc
push
mov
movsb
sbb
popf
ror
pop
fstpl
push
or
cltd
jle
xor
mov
repnz
add
sbb
rcrb
mov
pop
xlat
pop
fs
adc
popa
ror
cmp
insl
xor
in
in
mov
jae
insl
cs
dec
out
leave
push
xchg
pop
bound
sahf
ljmp
sbb
aas
aad
push
in
dec
loope
shll
mov
sub
xor
inc
notl
iret
mov
adc
shl
lea
cwtl
into
xor
xchg
std
cmp
lock
je
sahf
flds
jmp
sarb
test
lock
pushw
aas
out
dec
aam
dec
mov
icebp
rcr
pop
add
mov
lcall
lret
das
xor
inc
or
xor
lods
adc
mov
push
out
and
and
jo
ds
xchg
movsl
cpuid
add
cmc
dec
pop
xor
cpuid
jl
insb
add
into
fstp
push
mov
and
xchg
loope
inc
ror
fwait
enter
and
lock
sbb
push
incl
mov
sbbl
imul
outsb
cmc
mov
sub
in
xchg
lcall
adc
jmp
cmpsl
pop
jmp
enter
int3
jnp
mov
lock
mov
xchg
repz
ret
cli
xor
xor
sub
sbb
popf
xchg
bound
cmpsb
adc
mov
mov
sub
jb
push
repnz
mov
sarl
js
xchg
mov
and
add
cmp
sbb
mov
jb
dec
xchg
leave
dec
push
inc
adc
and
mov
dec
and
cmpl
add
cltd
add
nop
test
daa
in
jecxz
mov
in
popa
jne
pop
cltd
ret
adc
cmp
fcoms
outsb
stos
cmp
mov
or
fisubrs
imulb
cmp
movsl
mov
add
mov
aaa
or
adcb
dec
icebp
fbld
mov
xchg
rorl
and
ja
ret
mov
and
jmp
cs
mov
push
or
adc
cld
or
ljmp
in
pop
inc
push
aam
loope,pt
mov
mov
test
sub
repnz
dec
xchg
xchg
mov
jo
loopne
inc
mov
loopne
and
and
lret
dec
out
mov
push
push
js
out
nop
jb
popf
gs
mov
sub
mov
push
scas
mov
cld
out
push
int
imul
dec
adcl
ljmp
and
ljmp
jae
xchg
ficoml
xor
or
cmc
into
leave
cltd
lret
sarl
fists
cmp
js
int
out
mov
lret
repnz
test
mov
outsl
sub
inc
sahf
call
xlat
xor
push
call
jg
in
adc
sti
dec
les
dec
push
push
push
lea
scas
xor
stos
jnp
adc
adc
lret
adc
stos
lret
cmp
dec
mov
jp
inc
or
repz
xor
cmp
inc
and
sub
sub
dec
cmp
mov
arpl
jb
xor
sbb
movsl
jnp
push
mov
loope
mov
das
xlat
in
cmp
cld
mov
incb
out
push
sbb
sbb
ja
rcrl
xchg
mov
push
mov
ffreep
mov
or
mov
arpl
push
mov
fisttpll
mov
loope
movsb
push
xor
mull
loopne
pop
jnp
add
lret
xchg
and
das
mov
out
fs
repnz
jecxz
xor
pop
mov
nop
add
inc
jns
push
data16
push
aad
outsl
movsb
xor
adc
mov
xchg
mov
outsb
sub
bnd
mov
sub
xchg
pop
xchg
cmp
xchg
inc
mov
push
cli
fildll
push
and
sub
rcrb
aam
roll
dec
js
add
xchg
jno
lret
mov
mov
add
adc
sbb
aaa
mov
cmc
sbb
or
pushf
ret
ss
imul
sub
dec
push
push
push
ret
imul
movsb
mov
mov
popa
das
lret
lcall
imul
das
push
loope
int
jb
push
add
xor
out
out
fcom
jp
sub
ret
jmp
pop
xchg
push
dec
xlat
out
xchg
stc
daa
out
inc
adc
dec
or
mov
cs
cmp
call
loope
jne
mov
call
shrb
shrb
jmp
sbb
xor
xor
sub
test
ds
iret
mov
rclb
and
into
mov
fucomi
push
jge
in
out
inc
fdivl
cmp
inc
hlt
sub
cmp
jl
cmc
out
push
push
adc
dec
and
jns
cmpsl
les
lcall
inc
out
mov
push
cmp
je
add
jae
add
aad
mov
mov
pop
cmp
pop
jnp
jbe
sahf
inc
and
mov
pop
xchg
mov
iret
incl
push
jb
cmp
push
in
jae
arpl
push
test
pop
mov
notb
pusha
xchg
fisubl
bound
sub
movsl
pop
xchg
pop
insl
mov
imul
sahf
repnz
sub
icebp
sbbl
aas
cmp
ret
pop
out
mov
adc
dec
push
inc
push
adc
push
inc
pop
jno
mov
jo
add
push
xchg
add
mov
mov
jp
incl
rolb
xorb
xlat
xchg
movsl
popa
sub
sbb
pop
fldz
nop
test
xchg
and
cmpsb
sbb
jbe
mov
jne
xorb
push
mov
add
ljmp
lret
dec
jb
shl
fidivrl
xchg
in
jae
and
sub
add
adc
leave
jmp
aaa
nop
ds
fs
aam
push
test
jnp
ja
mov
pop
ret
fimuls
sub
mov
cld
mov
add
pop
insl
add
test
xor
cmp
mov
sti
ffreep
sbb
push
fldenv
test
imul
cmpsb
sub
hlt
test
inc
imul
mov
mov
movsb
xor
xchg
inc
xchg
stc
cli
cltd
or
cmp
dec
or
and
stos
dec
jl
loop
into
jnp
or
imul
xchg
cmp
popa
push
fcoml
pop
add
mov
addr16
and
jle
add
and
ljmp
xchg
cmpsb
jns
hlt
and
leave
call
data16
aam
jmp
sbb
pop
add
movsb
push
pop
cli
rcll
push
cmp
mov
inc
lcall
mov
adc
add
iret
cmp
andb
es
ja
mov
subl
sbb
decb
jb
mov
and
ret
xchg
jl
out
sbb
jg
faddl
mov
mov
rorl
jle
jecxz
add
mov
inc
mov
and
and
outsl
test
cmp
ljmp
or
and
sub
dec
xchg
fcmovnb
and
sbb
cmpsb
cmpsl
in
aam
mov
notl
jg
in
cs
cltd
inc
xor
xor
xchg
leave
push
dec
cmc
das
xor
lea
lea
cwtl
inc
shrl
pop
fwait
push
and
ret
or
fcmovnbe
rcrl
scas
jg
lods
loopne
sub
sahf
cmp
adc
out
dec
les
fwait
mov
lds
mov
add
sub
mov
push
into
jbe
inc
popf
push
pop
push
xor
mov
adc
lds
icebp
jg
xchg
in
jo
in
sbb
lcall
or
jmp
pushf
mov
or
into
jecxz
pop
scas
cwtl
sahf
cmp
jge
rolb
imul
xchg
es
addl
fisttps
cmp
in
and
push
popf
or
loope
jge
in
icebp
inc
cld
cli
inc
ficoml
xchg
push
xchg
pop
imul
pop
fadd
jns,pt
mov
inc
adc
pop
das
jae
jno
ss
mov
add
sbb
xchg
add
incl
and
rcll
sub
sbb
and
adc
inc
jnp
adc
pop
jns
mov
mov
push
add
mov
add
ja
pusha
testl
push
inc
xchg
push
xor
in
adc
fisubrl
sbb
sbb
pcmpeqd
call
adc
rcrl
xor
add
fidivrs
lcall
add
push
addr16
ret
stos
xchg
repz
test
mov
inc
aaa
cmp
add
fdivs
call
fwait
add
push
ret
mov
imul
roll
iret
imul
nop
jmp
aam
cmp
movsb
pop
sbb
mov
stc
cmp
lods
add
cmc
cmc
cmp
js
jg
mov
dec
xchg
ror
adc
sub
and
add
sbb
mov
jnp
add
rorb
xor
mov
in
cmp
inc
loope
pop
popf
pop
adc
cs
and
stc
pop
popa
add
stos
adc
jmp
xchg
xor
call
rcll
imul
test
sbb
dec
jle
or
inc
xor
rcr
outsb
aaa
insl
lods
push
mov
inc
xchg
jbe
sti
push
pop
imul
repnz
shrl
or
cmc
sbb
and
xchg
addr16
sbb
or
dec
add
das
pop
adc
je
adcb
and
push
js
cmpb
jle
adc
rcll
repz
lock
adc
adc
test
xchg
mov
je
scas
mov
pop
sbb
jg
outsl
and
aas
in
xchg
daa
push
pop
dec
add
ficoms
subl
pop
push
stos
mov
in
add
inc
lds
pop
dec
cs
mov
sbb
jne
sahf
es
sub
cmp
data16
cmp
std
adc
xchg
cmp
mov
or
xor
mov
or
push
lock
mov
xchg
mov
pop
add
aaa
loope
mov
gs
lock
sti
insl
fdivrl
test
jns
clc
jo
call
inc
sahf
add
adc
pop
sub
jg
fwait
insl
outsl
aad
xchg
xor
sar
lods
pop
xchg
pop
cmpsl
daa
andl
ds
inc
fldenv
xor
xor
push
jg
daa
fisttpll
js
sbb
inc
mov
enter
inc
adc
pop
pusha
mov
xchg
sbb
test
or
and
dec
mov
fists
cmpsb
lret
sbb
aad
inc
ss
cmp
inc
mov
or
jbe
dec
mov
ljmp
xchg
push
fiadds
fs
es
jle
mov
or
ds
fdivs
out
cmp
push
pop
loopne
cli
sub
sbb
xchg
aam
inc
addr16
add
ret
add
jae
fs
pop
pop
ja
pop
daa
dec
mov
scas
jo
enter
xor
mov
stos
pop
pop
push
add
mov
pusha
fwait
and
adc
xchg
push
enter
pop
ret
int
lret
sbb
cltd
imul
push
jb
pop
push
aaa
jnp
push
subps
push
sbb
ss
iret
jns
sub
ret
sbb
addb
cmc
push
stos
paddsb
insb
mov
movsl
mov
in
push
mov
or
call
sub
cmp
mov
into
aad
xor
das
idiv
pushf
jecxz
fdivs
sbb
and
xchg
aas
dec
or
mov
lahf
cmp
jp
clc
pop
pop
push
test
or
xchg
in
sbb
sbb
mov
dec
jae
mov
add
repz
lods
lahf
add
stos
and
jmp
sahf
loope
arpl
stc
push
inc
icebp
jb
int3
mov
faddl
inc
push
xchg
mov
xchg
test
fs
in
fcmovnu
mov
fidivrs
stc
enter
xchg
jge
imul
cmp
sti
icebp
imul
scas
inc
arpl
pop
pop
outsl
mov
jae
cmc
bound
pop
add
pushf
pop
ret
jnp
sub
pop
mov
xorb
jge
inc
dec
jl
xchg
scas
adcl
repnz
inc
add
sbb
sbb
aas
mov
movl
data16
ds
dec
outsb
out
sub
dec
mov
lods
lds
cmc
js
add
negb
lret
xchg
mov
pop
sbb
mov
sti
inc
jmp
mov
pop
cmp
ret
and
sub
lret
xor
out
movsb
jns
xchg
aam
ret
xchg
es
leave
xor
sbb
lods
idivb
test
loopne
and
inc
inc
push
dec
jl
jecxz
pop
jle
pusha
pushf
and
dec
jge
jecxz
fisubl
leave
popa
push
sbb
xlat
sti
pop
mov
xor
cmp
dec
adc
test
iret
push
mov
and
popa
pop
cmp
jle
push
push
cmp
ret
out
xchg
xor
xor
jns,pt
or
and
add
sub
sub
pop
jne
mov
cmp
cld
ja
pop
xor
mov
in
push
add
idivb
mov
or
je
mov
lds
xor
or
mov
sarl
out
arpl
inc
in
xchg
mov
lcall
movsb
setnp
ljmp
int3
mov
pop
mov
xor
js
adc
jp
xor
dec
inc
into
ss
stos
xchg
mov
dec
shll
inc
push
sbb
mov
jecxz
mov
fistpl
mov
fistpll
in
out
lret
ret
imul
or
test
popf
push
aas
bound
test
out
inc
dec
jo
sbb
lret
push
jg
inc
mov
jle
aam
jae
sub
cmp
lock
inc
mov
repnz
and
outsb
jnp
les
xor
stc
cmpsb
bnd
inc
inc
pop
mov
add
cs
add
popa
je
sbb
nop
sbbl
jo
mov
ss
psubsb
fcomip
xor
imul
subl
loop
repnz
cmp
stos
popf
xor
cltd
xlat
dec
addr16
pop
mov
cmpb
jbe
push
mov
aad
jno
sarl
cwtl
jne
adc
push
push
pop
push
xchg
sbb
in
out
pop
ja
adc
push
mov
cmp
or
rcrl
movsl
xchg
push
fstpt
pop
xor
mov
insb
dec
into
mov
sbb
into
jo
push
lds
pushf
call
nop
scas
pop
pop
movsl
push
mov
aas
xor
fsts
fs
ja
clc
push
andb
inc
jmp
add
out
sub
push
cltd
adc
daa
loopne
xchg
mov
adc
xchg
loop
add
xor
dec
scas
hlt
divl
ja
fnstenv
icebp
cmp
mov
inc
shll
jmp
pop
pusha
xor
aad
push
lods
dec
aam
pushf
push
xchg
shlb
out
fsubp
jmp
gs
inc
repnz
clc
mov
sub
jae
xor
jl
mov
adc
xchg
fnsave
sub
inc
aad
cli
out
cltd
jl
sbb
movsl
test
push
scas
jecxz
add
pop
loopne
fiaddl
adc
sbb
mov
enter
jmp
inc
sti
in
xor
jo
sub
int3
mov
loope
pop
xor
cwtl
mov
rcrl
cld
cmp
enter
in
mov
xchg
inc
xchg
dec
cmpsb
sbb
ret
or
test
sarl
and
mov
cli
ss
pop
xchg
add
inc
mov
lahf
fdivrs
pop
bnd
testb
or
imull
xlat
pop
and
push
and
push
hlt
idiv
imul
test
shl
fwait
and
mov
rolb
adc
repz
pop
xor
mov
out
nop
mov
jge
mov
lods
sbb
sbb
shl
mov
xor
cld
out
sub
xchg
cmpsl
cmp
dec
loope
mov
or
imul
dec
gs
mov
lea
sbb
push
add
mov
in
pop
jb
sbb
ds
sbb
mov
mov
and
fdivs
pop
lahf
in
sub
pop
jmp
xor
pop
lods
cmpsl
fisttpl
popf
loop
inc
clc
cmpsb
push
mov
mov
mov
arpl
jne
imul
add
stos
adc
shrb
in
fldenv
push
mov
cmp
push
dec
imul
mov
jbe
imul
stos
imul
sbb
dec
dec
dec
push
mov
andb
xor
inc
lds
jg
lds
inc
cmp
adcb
jmp
add
scas
or
mov
xchg
mov
fcom
in
shll
xchg
mov
and
add
aam
or
fs
fdiv
sahf
pushf
nop
sbb
stos
lcall
popa
push
lea
mov
enter
xchg
mov
dec
dec
mov
xchg
and
inc
jb
fs
xor
div
out
jo
test
mov
cld
mov
cmp
mov
sub
sbb
jp
frstor
mov
call
movsb
and
pushw
jle
adc
test
add
int
out
inc
in
in
adc
je
mov
sbb
fstl
mov
add
test
shr
lds
add
jmp
ss
sar
leave
popf
sarb
shlb
lock
daa
xor
leave
into
call
cmpsb
sbb
pusha
aam
xor
clc
loop
hlt
xlat
fcoms
inc
outsb
add
hlt
jmp
mov
insl
inc
fs
fucomip
punpckhdq
test
mov
lea
imul
popa
cli
sbb
or
mov
aam
sbb
cmpsl
hlt
or
adc
ja
jp
dec
jae
sub
arpl
mov
mov
mov
lret
mov
xchg
das
mov
sbb
decb
jp
insl
outsb
cmc
je
push
les
jmp
aam
push
or
shlb
mov
int3
scas
dec
in
rolb
and
rorb
insb
mov
lcall
cmpsb
jl
je
movsl
adcb
jne
add
adc
xchg
out
mov
mov
push
jns
js
sti
js
shrb
dec
js
jne
inc
adc
cmp
es
sti
push
xchg
fstps
popa
nop
xchg
fld
enterw
add
iret
mov
sub
mov
mov
jae
mov
sub
fdiv
int
sbb
inc
ret
pop
xchg
push
dec
pop
jecxz
pusha
loope
jno
fstpl
outsl
jge
into
jae
sub
and
mov
sahf
or
dec
sbb
xchg
test
in
cmp
cmovno
mov
cwtl
int3
test
inc
sub
mov
cmpsl
inc
add
mov
ljmp
std
fimull
sti
ja
out
es
cmp
lcall
mov
loopne
test
mov
xor
jecxz
pop
adc
out
in
mov
push
icebp
les
inc
xchg
iret
aaa
sbb
pop
sbb
dec
call
or
xchg
jmp
jecxz
test
cmp
or
into
ljmp
jp
xchg
or
xchg
cmp
scas
je
lock
popa
sbb
sub
mov
add
sbb
cmp
mov
and
pop
arpl
sbb
dec
xor
inc
jo
pop
lahf
push
jg
pop
adcl
fsubrl
arpl
mov
hlt
push
mov
jp
adc
loopne
mov
or
or
mov
add
push
and
mov
jae
add
jmp
xchg
int
add
ror
adc
ja
inc
in
fwait
push
jl
mov
mov
mov
cltd
adc
xchg
insl
jb
xor
xchg
lahf
mov
dec
lcall
addr16
and
cmp
xchg
xor
js
dec
xchg
adcb
ljmp
insl
out
into
adc
xor
dec
dec
loop
adc
je
jle
clc
mov
add
sub
sbb
sub
test
xchg
daa
push
push
pushf
in
ss
sub
arpl
add
mov
aaa
mov
hlt
adc
or
ret
inc
stos
mov
aam
or
outsl
pop
xchg
fsts
inc
je
arpl
lcall
test
mov
filds
mov
mov
sbb
push
rcrl
dec
cmpsl
mov
mov
cmp
add
cmp
pop
ret
sub
mov
mov
ds
test
cvtsi2ssl
mov
and
and
add
cmp
ds
adc
dec
jmp
pop
repz
pop
out
ljmp
into
add
cld
xchg
ljmp
popf
push
adc
mov
pop
cwtl
cld
pop
jo
pop
imulb
lods
adc
aaa
jle
and
push
cmpl
lods
adc
jl
push
testl
addr16
inc
repnz
into
mov
sbb
pop
dec
push
jbe
divb
inc
push
add
jge
inc
cmp
push
push
iret
test
jmp
test
fcoms
dec
lret
add
jge
xor
call
xor
test
nop
xor
shr
inc
inc
mov
imul
mov
not
js
dec
cld
ret
inc
sub
adc
add
std
lods
mov
data16
push
xchg
jecxz
jge
push
inc
cmp
cmp
push
and
outsb
lods
gs
pop
aas
aam
push
ret
aas
push
lods
aad
mov
sub
mov
push
xchg
pop
in
enter
insl
shlb
fistpl
pusha
in
and
lcall
aam
out
jl
int
das
pushf
rclb
xchg
dec
sub
or
xchg
icebp
movsb
icebp
mov
dec
mov
fisttpll
repz
lret
mov
daa
cmp
into
add
jne
das
aas
outsl
push
add
icebp
adc
lret
mov
sub
cwtl
adc
mov
mov
xchg
sahf
mov
pop
rclb
mov
jle
dec
scas
cmp
popl
popf
je
pop
ja
fimuls
nop
mov
mov
sbb
pop
icebp
and
lock
dec
jae
popa
pop
cs
jp
imul
icebp
xlat
jg
jl
test
std
sub
pop
std
dec
xchg
push
movsb
xchg
leave
mov
mov
aad
or
cmp
adc
cli
jecxz
rcl
call
insb
insl
cmpsb
jmp
adc
xor
mov
xchg
jmp
lods
cltd
test
in
sbb
or
lcall
xchg
aas
lret
push
loop
or
pop
xchg
xchg
insl
in
mov
movsl
stos
rcl
in
insb
aas
pusha
pop
mov
mov
mov
rolb
loope
es
outsl
test
popf
mov
cmp
mov
test
and
fldpi
push
fsubrl
sarb
mov
inc
dec
iret
aas
test
out
stc
imul
mov
or
or
push
or
mov
in
mov
test
sti
repz
daa
fwait
mov
lods
jb
mov
lock
cmp
mov
mull
sub
cmpsb
sarl
iret
clc
outsb
mov
out
mov
add
ja
mov
rorl
popf
mov
stos
repnz
es
es
mov
loope
es
jecxz
rolb
add
rcrb
push
fwait
inc
std
scas
fnstsw
aam
cmp
es
lret
lods
dec
sahf
mov
or
cmp
pop
leave
fdivr
andps
and
mov
inc
push
and
gs
rol
aas
or
ret
jp
dec
and
js
rorb
cmp
push
dec
dec
fucomi
add
mov
mov
mov
in
outsb
ret
mov
cmp
pop
inc
push
lods
jg
lret
cmp
leave
rorb
push
mov
or
stos
and
ljmp
js
adc
mov
lock
push
push
mov
enter
push
jns
mov
sub
loop
mov
fimuls
xchg
xchg
inc
fs
inc
enter
adc
aam
pushf
cs
pop
repnz
pop
dec
loopne
push
vdivsd
test
jns
test
ret
jmp
lods
outsb
pop
movsb
jle
sti
push
mov
lcall
mov
lds
sbb
rorl
add
jg
adc
test
rcl
gs
mov
sub
or
push
jb
scas
or
sti
mov
or
xor
dec
fxch
jge
push
mov
or
cmp
and
leave
jnp
sbb
div
and
dec
sub
lods
jns
sbb
icebp
int3
nop
push
in
pop
mov
push
outsb
inc
and
sbb
popf
sub
sub
push
jle
hlt
mov
add
sahf
jns
stc
mov
ds
icebp
add
cmp
lea
push
dec
scas
inc
sbb
flds
and
mov
xchg
call
inc
leave
push
stos
loopne
mull
sbb
mov
pop
popa
pop
es
pop
arpl
mov
aas
std
add
xchg
or
popa
cmp
add
push
ret
sbb
int
mov
mov
xor
jne
scas
hlt
test
lods
imul
jmp
jno
add
rcrb
push
sub
lds
jb
loop
test
subl
pop
push
cwtl
add
movsl
loop
fwait
mov
lret
xor
fisubrs
push
stos
lock
or
lcall
in
lahf
push
ss
lock
dec
sub
shl
clc
mov
dec
test
sub
pop
jb
lods
pop
fisubl
pop
dec
pop
and
push
add
mov
or
mov
in
xor
inc
cmp
and
add
xor
in
xor
stos
dec
mov
les
dec
jg
idivl
sti
loopne
push
adcl
and
mov
xchg
addr16
fidivrs
aas
xchg
ljmp
xchg
jns
dec
js
inc
jne
mov
int
in
aas
insb
mov
jp
stos
outsl
pusha
cmpsb
jmp
int
insl
add
decl
mov
mov
mov
ret
fisttps
jge
or
pushf
aas
movsl
xor
lds
in
mov
jns
adc
imul
ss
sti
cmpsb
std
mov
into
imul
add
add
mov
mov
pop
cmp
sbb
imul
stos
out
pop
loopne
mov
pop
dec
sub
pop
sbb
ljmp
aaa
cmpsb
std
decl
sbb
imul
xchg
push
in
rcrl
sbb
pop
mov
mov
call
inc
mov
cmp
pop
push
xchg
ss
fidivl
mov
pop
mov
inc
nop
mov
inc
mov
jg
or
inc
mov
sbb
int
pop
dec
xlat
aam
sub
cmp
add
lcall
ret
sbb
dec
cwtl
pop
out
sarl
inc
repnz
mov
sub
cld
loope
aam
push
es
pop
aas
es
in
and
insb
enter
aaa
jmp
mov
lock
insl
mov
loope
pop
dec
outsl
xchg
pop
mov
fmuls
pop
arpl
pop
cld
aaa
xchg
into
sub
lods
jmp
int
ss
fmuls
mov
sarb
or
and
shrb
xchg
pop
arpl
cmp
xor
enter
xor
daa
mov
rcr
xlat
ja
call
add
addr16
mov
mov
sarl
je
xchg
bound
sbb
sub
shrb
loop
je
cltd
pusha
xorb
mov
push
icebp
pop
cmp
add
dec
inc
cmp
shl
pop
cmp
xor
pop
xchg
sbb
test
lock
or
fsubrl
push
leave
and
idivl
cltd
inc
and
jns,pt
lret
jl
xchg
adc
cmp
dec
mov
je
dec
cli
pop
into
push
into
dec
filds
pop
scas
inc
insl
push
and
jl
xor
mov
lea
test
push
mov
inc
les
sti
pop
and
fnstcw
movsl
mov
jg
or
je
inc
push
enter
push
mov
cmpsb
pop
sbb
sti
sarl
mov
cli
jecxz
sbb
pop
loopne
push
in
jb
add
adc
cmp
cmp
jge
repnz
cmp
shll
and
inc
jecxz
inc
push
fstpl
stc
insb
adc
push
jmp
jbe
jnp
mov
in
insb
test
or
repz
inc
movl
xor
es
inc
pop
lret
add
push
adc
aad
push
push
sub
inc
pop
loopne
scas
ficomps
adc
xchg
mov
inc
or
aad
fsubrp
xor
jne
and
sub
and
roll
or
jp
dec
cmp
xchg
jl
sub
adc
aaa
xchg
into
clc
divb
mov
lock
subl
inc
cld
sub
sbb
repnz
sub
sub
jnp
inc
or
scas
leave
pop
push
aas
rcrl
or
push
sub
and
pusha
and
add
shll
lods
cmp
outsb
push
fcomps
adc
into
mov
jge
scas
lcall
out
xlat
and
out
jae
mov
outsl
inc
pop
es
dec
pop
xlat
out
mov
lahf
inc
testl
ret
inc
inc
ja
xor
push
movl
loopne
jb
loopne
sbb
push
rcr
pop
out
pusha
ret
jge
cld
fimuls
fsubl
sbb
add
movsb
lahf
repnz
sahf
xor
jmp
sub
scas
sar
sbb
fmulp
lock
stos
pop
out
popf
fcomp
or
lea
out
jge
sub
lret
arpl
subb
ljmp
stc
mov
inc
xchg
imul
push
and
fcomps
push
mov
js
bound
cmp
cmp
inc
and
mov
pop
add
xchg
xorb
ficompl
ret
cmp
enter
or
pop
std
push
jle
lods
sub
aas
cmpsb
arpl
std
mov
test
xlat
icebp
sti
dec
jno
adc
cmpsl
lcall
stc
jp
xchg
dec
add
mov
xor
jge
repnz
adc
inc
repz
les
xor
es
mov
push
cmp
sbb
and
add
inc
das
cmpsl
jmp
dec
mov
sbb
push
mov
and
mov
shll
add
addr16
outsb
lods
cmp
lret
pop
pop
push
sub
pop
pop
mov
sbb
shrb
mov
xlat
jg
out
rcl
les
outsb
cmp
lret
mov
ret
aad
mov
cmp
sti
xor
mov
aaa
xor
inc
test
dec
leave
ret
lods
ret
xchg
or
stos
cld
push
mov
xchg
faddp
mov
scas
xchg
adc
xchg
or
jbe
mov
and
andl
push
ret
popf
jnp
stos
dec
out
test
fnsave
xor
fwait
mov
fstps
sub
mov
jg
cwtl
mov
adc
xor
inc
adc
data16
pop
push
daa
xor
test
cmpsl
dec
dec
and
xor
pushf
and
xor
aam
js
lock
mov
ret
icebp
mov
jle
shrl
lea
add
pop
cmp
loop
cmp
scas
or
xor
mov
dec
jge
jmp
mov
inc
notb
sbb
pop
pop
adc
xchg
rolb
jp
dec
lods
sahf
mov
mov
popf
call
add
cmp
fwait
cmp
movups
hlt
and
rcpps
aad
vxorpd
shlb
mov
fists
inc
cld
lcall
test
jp
inc
cmpsl
mov
sub
movsb
call
mov
push
shrb
testl
sub
dec
mov
cld
jo
rol
sub
ss
test
xor
xor
arpl
push
stc
lret
cmpsl
mov
mov
fstp
ficoml
fwait
or
rcll
cmp
or
xchg
mov
scas
add
fwait
repz
std
sub
fnstsw
sub
cli
add
js
lcall
out
add
js
mov
adc
fimull
xchg
mov
imul
xor
dec
mov
icebp
in
dec
mov
xlat
sub
mov
dec
cmp
mov
sbb
sbb
mul
add
sarl
cmpsb
fcmove
push
lods
adc
iret
dec
rcll
cld
out
jbe
leave
sbbb
pusha
insb
fistps
sub
lret
adc
mov
dec
dec
pop
lds
fisttpl
mov
cmc
push
das
xchg
aaa
cwtl
xor
imul
in
ret
faddl
cmp
fs
cld
stos
xchg
mov
inc
es
out
mov
stc
inc
mov
aas
jne
call
jbe
lret
int3
dec
push
xor
or
inc
cmc
in
out
jo
xchg
add
imul
jg
sahf
call
jns
rolb
push
aam
in
mov
jbe,pt
and
xor
mov
ret
jp
dec
cmp
add
xchg
jb
cmp
inc
loop
sub
negb
jge
ds
xchg
gs
data16
fs
or
lahf
sub
test
jge
mov
mov
or
lret
xchg
stos
loopne
mov
lods
lds
mov
sbb
jge
sub
add
mov
jp
pop
mov
repz
add
out
lods
fldenv
and
or
sbb
cs
jns
sub
rcr
aas
add
push
pop
mov
or
adc
pop
push
out
cmpl
cmp
pop
adc
or
into
push
push
inc
rcll
sub
nop
mov
adc
out
arpl
xchg
fwait
dec
pop
pushf
mov
cmp
lahf
imul
xor
ror
scas
push
pop
inc
in
mov
scas
push
cmp
sub
fistl
mov
std
je
xor
in
xchg
sbb
sub
insb
mov
cs
cld
xor
notl
out
aam
sub
mov
out
dec
add
sbb
push
mov
inc
mov
mov
jecxz
sahf
repnz
and
ficoml
rolb
stos
aas
or
mov
fimull
or
out
sti
or
call
xor
lret
int3
dec
sbb
lds
jbe
pop
add
scas
ret
sub
jo
popa
cld
dec
fstpt
mov
xchg
lahf
add
in
loopne
adc
pop
inc
iret
shll
arpl
adc
idiv
dec
mov
loop
push
pop
push
cmpsb
fwait
push
jbe
fidivrs
aas
incb
dec
inc
shll
mov
xchg
adc
xchg
popl
pop
dec
sub
and
sbb
push
push
xchg
push
jmp
pop
ret
sub
leave
loop
jmp
lahf
icebp
jmp
sbb
ss
popa
and
pop
sahf
scas
imul
xor
mov
hlt
add
add
sub
jne
pop
outsl
xchg
movsl
push
xchg
pop
xchg
pop
xchg
jns
mov
sub
fisttpl
pop
repz
out
cli
push
mov
jg
sub
mov
mov
stc
cmpl
ds
dec
scas
lea
inc
setns
popa
lods
sbb
pop
out
and
fucom
in
push
ficomps
xor
sub
loopne
cmp
pop
stc
cmc
jno
lea
sub
mov
mov
xchg
outsb
dec
pop
repz
fiaddl
xchg
mov
idivb
loop
fstpl
xor
mov
sub
push
push
dec
push
fsubl
jmp
shl
dec
mov
pop
lods
sbb
mov
push
lret
pushf
pop
lea
mov
repz
pop
or
push
ss
shrb
mov
inc
dec
cmp
stos
scas
inc
pop
xor
push
popf
cltd
push
call
outsb
sub
add
jmp
cmpsb
or
dec
adc
and
daa
shrb
out
insl
out
sub
jno
pop
sbb
es
mov
movsb
dec
inc
mov
decl
push
sub
sahf
cmp
ret
cltd
pushf
pop
jb
notl
sub
fadd
push
fwait
int3
mov
xor
mulb
push
mov
lahf
ficomps
add
or
mov
lds
shlb
cltd
iret
cmp
mov
fnstenv
inc
test
inc
iret
fmulp
dec
mov
push
fiadds
mov
cltd
adc
push
aaa
out
pop
pop
and
movb
in
cmp
push
dec
sbb
int3
int
xor
or
sbb
lds
mov
sub
jg
jns
cmpsl
push
test
mov
stos
aad
jle
adc
fs
adc
add
sbb
insb
push
sub
outsl
pop
imul
jne
fcmovnbe
sub
imul
xchg
mov
jle
xchg
pop
mov
add
dec
push
orl
lods
sbb
fldln2
test
iret
leave
and
adc
sbb
mov
int
lret
xor
or
jecxz
add
sbb
push
or
sbb
or
mov
push
cs
lea
lock
idivl
aas
mov
cmp
lods
xchg
inc
or
add
dec
mov
and
push
pop
int3
mov
int3
mov
mov
and
lea
jle
add
in
mov
jae
lods
sbb
mov
or
and
push
jno
push
cli
fwait
adcl
sahf
add
adc
xor
jp
popa
jp
aas
pop
add
inc
pop
insb
xchg
pop
jecxz
mov
mov
cwtl
and
inc
sarl
rcrl
mov
inc
or
arpl
push
mov
push
inc
gs
dec
lret
aad
or
mov
ret
loopne
push
and
ret
xor
pop
jo
shr
cmp
andl
push
insb
daa
xchg
xchg
mov
mov
or
xchg
adc
lret
pop
sub
ds
scas
je
clc
push
movb
jge
adcb
icebp
xor
or
outsb
movl
std
iret
sti
int3
sub
fs
push
mov
sbb
bsr
in
test
insl
insb
xchg
adc
inc
jmp
lret
jle,pn
iret
jno
jo
iret
sub
cmp
bound
cld
fcoms
scas
push
mov
push
loope
ss
or
cltd
cmp
ffreep
cmpsl
sbb
pop
daa
outsb
iret
aaa
fs
cli
mov
out
sbb
inc
mov
scas
fmuls
jb
or
aam
and
xor
adc
negl
aas
outsb
push
mov
cmp
pop
imul
int3
mov
rorl
mov
gs
div
movsb
rcl
push
dec
out
ljmp
or
outsb
xor
and
faddl
fstl
sti
sbb
mov
mov
ljmp
ja
dec
xchg
movsb
stos
push
xor
dec
add
cmp
outsl
inc
aaa
out
add
pop
fistpll
and
push
mov
inc
in
dec
add
lahf
xor
int
repnz
cmp
sub
sbb
mov
pop
mov
ret
add
es
insl
dec
cmpsl
out
test
into
push
sbb
adc
jae
xchg
sub
pop
loop
iret
cmp
push
jp
aam
lock
fistpl
es
out
sti
jmp
cmp
daa
pusha
or
dec
insl
add
xor
mov
mov
lds
fmul
cmp
std
iret
mov
adcb
jns
scas
aaa
cs
jb
filds
mulb
mov
jl
or
stos
lods
jg
push
adc
stos
inc
mov
pusha
fidivl
add
push
mov
ljmp
jg
add
int
psrlw
jnp
sbb
dec
mov
cltd
cmc
ror
mov
jp
rcrl
std
sub
insl
mov
push
jl
push
pop
ffree
xlat
mov
mov
les
into
mov
push
data16
int
jg
dec
jmp
fcmove
push
cld
xchg
mov
insl
jmp
cs
stos
inc
outsb
pop
inc
cmpsb
test
mov
xor
sahf
sbb
xchg
cld
rorl
jo
inc
pop
adc
rclb
xchg
sbb
ficomps
stos
ficoml
jbe
sub
fdivrl
sbb
out
xchg
popf
mov
std
mov
in
into
in
pop
lods
xor
fcmovb
pop
inc
loop
xchg
or
jp
add
fldl
lcall
popf
sbb
and
and
add
or
xchg
sbb
cmc
inc
xlat
das
outsl
call
mov
shrb
js
or
shr
and
leave
loope
sti
sahf
lcall
mov
jbe
out
pop
das
fldenv
sbb
subl
or
dec
dec
or
mov
push
sub
pop
stos
mov
gs
hlt
stos
push
xor
pop
cs
mov
jno
push
fldl
ja
add
hlt
jnp
out
pop
shrb
xchg
inc
fdivl
adc
dec
push
jecxz
call
push
push
mov
push
icebp
int
int3
call
push
shr
xchg
or
rolb
sbb
or
sarl
mov
rcrl
jo
mov
repnz
or
xor
mov
inc
jl
xchg
fisttps
sarl
mov
leave
addr16
lods
test
out
cld
loopne
adc
sbb
mov
sahf
cmpsl
pop
xchg
add
add
mov
jg
jo
or
stc
pop
sbb
lock
mov
jg
imul
inc
inc
adc
adc
movsb
int3
pushl
movsb
addr16
insl
outsl
adc
cmp
leave
cmpsl
sbb
out
out
add
mov
push
dec
xor
sar
fidivrl
xor
pusha
aam
dec
mov
jo
mov
dec
sbb
sbb
push
addr16
stos
popf
mov
cmp
and
rcrb
fsubrl
inc
stos
or
mov
dec
push
repz
mov
mov
aas
rcll
sti
sbb
mov
jnp
testl
faddl
arpl
xor
rcrl
ret
push
push
xchg
jae
mov
xor
loopne
fimuls
rclb
sbb
and
outsb
ret
push
stos
cmc
xor
out
sbb
ja
outsb
js
sub
in
es
pop
and
push
hlt
dec
push
vdivpd
into
jp
sahf
pop
or
aaa
loope
push
fwait
sbb
inc
xorb
flds
std
mov
or
aas
push
daa
cmp
adc
mov
scas
sarl
lds
sbb
ljmp
mov
scas
jae
fucom
add
aad
fisttpl
in
push
xchg
outsb
mov
sub
inc
pop
std
jmp
xor
js
cmp
or
outsb
cmp
je
outsb
sbb
xor
rcrl
adc
jo
push
jb
dec
dec
cmp
repz
push
mov
test
jb
std
push
ljmp
sub
mov
popa
xlat
mov
xchg
aam
and
dec
movsb
sbb
sub
jge
pop
dec
jo
hlt
inc
mov
cmc
out
js
sub
sbb
push
add
in
jo
mov
pop
mov
dec
and
lahf
je
xchg
cwtl
mov
pop
test
sbb
hlt
cmp
cs
dec
mov
push
xchg
mov
rclb
dec
ret
leave
das
mov
int
hlt
outsl
and
cld
jo
push
jp
dec
pop
cs
sbb
popl
jmp
jg
dec
adc
mov
cmpsb
jl
leave
mov
outsl
aas
aad
pop
cli
gs
loope
cmp
xchg
fiadds
xchg
jge
repz
jb
xor
push
push
dec
das
adc
pop
in
pusha
inc
mov
mov
pop
jle
nop
test
bound
out
cli
daa
sarl
sbb
shl
adc
adc
movsb
fldt
jecxz
inc
sbb
gs
inc
out
iret
sarl
or
clc
cltd
add
inc
xchg
lcall
ret
jno
and
sbb
fsub
xchg
mov
insl
and
shrl
mov
lret
dec
cltd
ds
mov
pop
adc
sbb
inc
in
loopne
clc
loope
cmp
mov
pop
test
add
mov
xor
aam
in
in
push
push
movsl
mov
aad
movsl
sbb
lahf
xorb
lock
mov
mov
mov
push
pushf
mov
cmp
outsb
pushf
dec
cs
imul
cmpsl
loope
fidivl
or
push
cmpsl
lret
and
lcall
inc
cmp
fnstcw
xchg
arpl
inc
fiaddl
xchg
add
xor
movsb
dec
gs
pop
cli
fstpt
sbb
sub
inc
sbb
add
sti
inc
cwtl
or
add
addr16
iret
mov
adc
popa
mov
je
cmp
dec
scas
int3
rclb
sbb
mov
repnz
out
or
cmpsb
cmp
rolb
daa
sahf
push
dec
and
aas
mov
in
push
jge
sarb
stc
mov
sbb
mov
fcomps
sbb
jae
push
adc
add
roll
push
sar
loope
dec
clc
mov
pop
les
push
xlat
stos
push
orl
sbbb
lret
and
sub
call
in
repz
test
cmpsl
push
and
mov
sbb
mov
push
mov
push
fldcw
imul
cmp
out
in
jno
mov
test
or
es
sahf
pop
das
imulb
leave
js
cmpsl
sub
jl
jle
rorb
aas
inc
dec
jle
mov
jae
dec
or
clc
mov
andb
ss
das
mov
dec
add
mov
mov
and
jmp
test
jge
ljmp
add
pop
cmpsb
xchg
sbb
mov
jns
dec
sub
dec
popf
rcl
pop
stos
pop
addr16
aad
mov
or
gs
add
fst
flds
add
cmp
cli
pop
push
int
mov
lds
or
adcl
pop
fstpl
sbb
xchg
les
mov
ja
sub
xchg
pop
xchg
jns
sbb
lahf
data16
push
ror
arpl
xchg
adc
insl
xchg
push
insb
mov
sbbl
or
iret
sub
xlat
push
jg
fbstp
jnp
popa
pop
outsb
repz
icebp
xor
inc
adc
inc
pop
hlt
xor
cmp
xlat
push
shll
scas
sub
sub
mov
jg
inc
mov
adcb
jne
lahf
leave
shl
lods
jno
fidivs
jmp
movsb
push
out
add
push
cmp
mov
ljmp
loope
sbb
xchg
push
bound
in
das
push
je
in
mov
jmp
cmp
cmp
jnp
and
inc
jl
add
jnp
cmp
cmp
aam
negb
hlt
aam
fsub
lcall
mov
push
lods
push
jns
jno
mov
jg
sbb
stc
clc
mov
int
test
pop
ja
mov
jmp
or
push
bound
repnz
dec
sahf
xchg
adc
xor
mov
sbb
outsb
data16
aas
jmp
fsubl
cs
lods
fwait
inc
cltd
pop
lret
in
push
lret
sbb
popa
add
xchg
xchg
push
inc
inc
aam
jbe
test
dec
pop
aas
leave
in
outsb
pop
inc
les
aad
push
xor
in
pop
lahf
dec
test
lock
cli
stos
addb
ds
arpl
int
add
jg
push
cmp
mov
xchg
mov
out
cs
mov
pop
push
aam
add
mov
fwait
gs
rol
call
lahf
out
fwait
in
jnp
sub
xchg
sarl
push
pop
mov
dec
lods
lahf
and
rcrb
notl
pop
dec
cmc
loopne
jb
jae
pop
hlt
and
cs
mov
movsb
les
jbe
pop
xor
or
shr
mov
loopne
push
ret
outsb
and
xchg
and
scas
add
push
pop
scas
or
pop
aad
sub
ds
sbb
push
xchg
cmpsb
dec
lods
pushf
or
ret
mov
gs
subb
mov
stos
sbb
sti
shll
push
je
stos
pop
ja
sub
bound
out
sub
mov
arpl
into
cmp
cwtl
into
xlat
sarl
loope
xor
or
and
fistpl
outsb
imul
mov
sbb
inc
dec
fcmovnbe
adc
jbe
push
lcall
andb
pop
mov
mov
mov
loope
xchg
test
sub
fidivrs
in
xor
popf
das
test
cmp
sbb
adc
mov
jp
divb
xchg
jl
mov
test
inc
sarb
jge
adc
sbb
xchg
lods
xchg
adc
xor
add
push
test
nop
jmp
aam
pop
outsb
out
add
sbb
addr16
lds
mov
mov
aas
sbb
inc
mov
stos
jae
out
dec
iret
and
or
rcrl
ja
xor
inc
sbb
xchg
sbb
int
subl
jecxz
movsb
in
aas
cmp
lgs
dec
pop
popa
mov
rcll
arpl
mov
inc
xchg
push
ss
jnp
push
lret
sbb
fnsave
in
imul
push
xor
xchg
repnz
mov
push
lods
rcrl
movsb
sbb
xorl
sub
mov
push
and
jns
xor
das
and
mov
in
adc
jge
push
lret
popa
pop
ss
enter
cmp
pushf
lea
ljmp
ret
movsb
fdivrl
mov
push
cmp
in
repz
scas
cmpb
ja
push
pop
fwait
mov
or
sbb
push
add
loope
rcl
arpl
fwait
adc
jae
mov
lock
fidivrs
out
xor
push
and
push
sub
lods
loopne
push
mov
dec
int
pop
sbb
pop
rclb
out
mov
adc
pop
test
adc
cwtl
cmpsl
mov
push
push
cmp
scas
lods
shll
jb
repnz
lods
test
and
fdecstp
jp
pushf
lahf
dec
pop
dec
adc
repnz
pop
mov
adc
lcall
jmp
test
aad
cmp
sub
add
pop
or
fdivrl
shll
rolb
loope
lcall
xchg
es
xchg
sub
xchg
mov
mov
lcall
mov
je
leave
mov
push
pusha
shll
xchg
xchg
mov
or
aas
out
adc
cmpsl
xchg
or
shrb
cmpsl
sbb
pop
xchg
mov
ss
jecxz
push
test
add
inc
push
movsl
lds
arpl
mov
test
pop
fisubrs
loop
and
hlt
and
xchg
cmp
dec
and
and
ret
sbb
les
xor
popa
shrb
mov
add
repnz
rol
and
xchg
push
cli
insb
and
je
xlat
adc
bound
in
push
xor
andl
push
leave
mov
fimuls
pushf
cmp
repz
pop
sub
rcl
test
jnp
sbb
pop
xlat
fs
daa
insb
xchg
retw
pop
cmpsb
sbb
cmp
data16
add
mov
push
insb
pop
inc
rclb
sti
pop
bound
dec
mov
scas
sbb
mov
mov
es
push
mov
gs
fsubrl
aaa
hlt
mov
lds
mov
pushf
into
push
testb
std
mov
lret
add
lret
pop
mov
dec
lock
mov
xchg
stos
psubsw
clc
sbb
stos
mov
mov
les
popa
jmp
lock
dec
and
sub
or
outsb
ds
in
push
add
dec
daa
push
cmpsl
add
int
ret
and
loopne
push
incl
mov
lea
popa
out
shrb
insl
mov
mov
jb
xor
mov
jl
add
mov
mov
into
cmp
jbe
or
js
mov
jp
pop
es
ss
fdiv
ret
mulb
cmpsl
xlat
jmp
jmp
popa
mov
js
dec
iret
push
std
xor
repz
mov
jno
sub
roll
sahf
addl
lcall
mov
jmp
int3
add
jne
cmp
rcll
iret
mov
std
xchg
cmp
xor
sub
jno
loope
repz
mov
enter
cmp
cmp
sub
mov
test
iret
xor
sbb
es
xchg
cmpsb
xchg
fcoms
push
mov
ret
fsubrs
mov
das
xor
push
popa
fnstenv
jge
jns
rolb
outsb
push
pushf
xchg
jnp
adc
mov
sbb
mov
mov
dec
inc
lahf
push
push
or
jbe
pop
out
aam
and
lret
adc
xchg
inc
sbb
les
cli
mov
cmpsl
push
mov
push
lret
das
add
sbb
scas
jae
subb
dec
inc
push
fsubrl
iret
out
inc
icebp
enter
adc
data16
and
sbb
or
sbb
lds
sbbb
inc
faddl
and
and
ss
out
stos
lret
push
cmp
push
rorb
jae
pusha
lahf
xchg
out
fs
xchg
sbb
fnsetpm(287
push
cmpsl
and
mov
lret
hlt
xchg
push
nop
popa
xchg
outsb
shlb
aad
xor
jecxz
xchg
leave
mov
call
mov
lods
push
xchg
push
test
iret
inc
stos
sbb
adc
addb
sti
in
jne
dec
xlat
push
sbb
xor
mov
xchg
js
mov
mov
jae
cmpsb
outsb
dec
dec
cld
lahf
adc
jecxz
test
lea
adcl
out
stos
mov
ffree
cmpsb
fdivrl
push
cmp
push
rolb
scas
mov
arpl
fsubrl
fisttpll
xchg
js
cmp
rcr
fisttpl
mov
dec
push
lods
jle
data16
movsl
sub
adc
pop
fsubs
and
imul
mov
imul
mov
data16
aad
inc
leave
mov
xchg
popf
push
cli
xorb
xchg
dec
and
sbb
insb
xchg
ret
push
incl
enter
ljmp
lcall
jbe
out
adc
mov
pop
jnp
cs
loop
inc
ljmp
jnp
push
mov
movsb
sbb
or
cmp
pop
out
popf
scas
imul
inc
fistpll
imul
lcall
outsl
xor
setns
add
cltd
sarl
loop
push
lds
or
sbb
lret
pop
xor
shrb
lods
or
out
add
jo
lea
xor
xchg
sar
cmp
dec
inc
ja
pop
fsts
lock
add
push
dec
mov
iret
jns
jg
push
pop
pop
popf
and
cmpsb
add
and
add
leave
mov
mov
mov
imul
lods
adc
lret
mov
shlb
adc
dec
xchg
lea
rcrb
pop
mov
call
enter
pop
in
lods
shr
sbb
in
lret
or
cmp
arpl
xor
fs
xchg
mov
aaa
std
adc
negl
mov
inc
shll
fildll
xor
jo
pop
add
adc
cmp
gs
sub
adcl
dec
js
lods
imul
inc
cltd
repnz
inc
and
mov
sbbb
lods
in
push
jbe
fbstp
mov
lret
jmp
sti
mov
mov
ds
test
mov
fld
cmc
out
nop
jmp
and
andb
mov
xor
pop
inc
iret
arpl
mov
pop
xlat
push
mov
outsb
adc
lret
repnz
or
pop
xchg
mov
cmp
xor
shll
cwtl
int3
xchg
push
push
iret
mov
test
fidivrs
push
aaa
loopne
inc
adc
jp
shll
push
inc
add
stc
sbb
insl
xchg
inc
mov
mov
push
test
mov
dec
xor
push
test
pop
out
push
fstl
inc
jecxz
shll
mov
arpl
sqrtps
lahf
jbe
out
fs
popf
movsl
mov
rcll
push
prefetchnta
clc
ret
rcl
scas
jo
sbb
dec
cmp
in
es
mov
xchg
cmpsb
mov
dec
mov
add
ret
cli
fldt
dec
das
add
sbb
sbb
lds
mov
in
sbb
dec
pop
aas
xchg
test
jg
cmp
pushf
mov
mov
xor
mov
sub
rcll
roll
cmp
add
subb
in
jmp
outsb
add
negl
pop
pop
add
lock
es
sub
mov
mov
mov
imul
lea
repz
inc
jge
jge
push
mov
ss
fld
dec
push
addr16
insl
out
sahf
push
clc
repnz
sbb
or
xor
jae
fwait
test
lret
sbb
inc
outsl
or
iret
lahf
xchg
pop
sbb
mov
dec
xor
js
rolb
popf
nop
sub
or
mov
jo
xchg
fs
and
jmp
mov
mov
and
jge
cmc
cmp
cwtl
enter
fnstcw
les
cmp
loop
dec
mov
gs
stc
pop
sbb
insb
insl
push
push
pop
or
mov
outsl
rclb
add
insl
or
and
cmp
addl
cwtl
sbb
push
mov
cmc
jno
js
test
cmp
mov
aaa
sbb
imul
push
or
inc
enter
sub
ret
push
insl
push
pop
shrb
and
test
mov
out
orb
adc
and
aaa
int
xchg
xor
pop
or
adc
sub
outsb
adc
aam
mov
negl
sbb
addr16
insb
pop
stos
sub
aaa
daa
out
sbb
xlat
push
mov
mov
popa
cmp
mov
ja
lds
popa
sahf
adc
xor
cmpsb
or
sub
lcall
sbb
jbe
mov
adc
jnp
repnz
pop
arpl
and
fisubrl
scas
mov
xchg
jne
jecxz
cmc
cs
repnz
shlb
mov
scas
ss
divl
aad
xchg
ja
les
jne
faddl
stos
mov
shrb
pop
or
cmp
or
rcrb
lret
mov
mov
mov
nop
aas
call
mov
sub
rcl
sub
push
mov
xor
aas
popa
jmp
fldl
jae
xchg
and
pop
pop
and
or
fdivrs
loopne
inc
fisubs
jo
lods
lret
stc
mov
cmp
fcomip
inc
leave
jge
inc
mov
mov
mov
push
scas
or
push
bound
sub
imul
test
fwait
sbb
mov
arpl
fwait
repnz
push
dec
push
fidivl
cli
inc
nop
lret
mov
ja
xor
out
ret
pop
testb
add
xlat
lret
mov
adc
pop
fstpt
xchg
inc
addr16
lahf
push
jle
jle
inc
sub
setbe
pop
cmp
aad
shl
sub
jb
jecxz
mov
sbb
add
int3
lahf
push
jnp
jne
sub
add
push
cmpsb
xlat
cmp
neg
mov
push
mov
in
and
shl
out
sar
ret
in
push
mov
rcl
pop
fsubs
pop
mov
scas
imul
mov
mov
and
pop
testb
aam
adc
loopne
sub
xchg
mov
jno
fistl
inc
xchg
or
mov
and
push
test
mov
push
adc
cs
ja
fwait
lcall
test
pop
scas
popf
repz
or
in
mov
lock
loopne
clc
jnp
jg
dec
test
arpl
cld
movsl
cmpl
sub
inc
fcmovb
xchg
pusha
mov
mov
dec
xor
daa
xchg
pop
dec
std
cld
popa
ds
xor
int
int3
cmpsl
add
cmp
loope
adc
fldcw
bound
stos
mov
aam
or
jl
mov
push
imul
out
out
sahf
sbbl
les
jnp
icebp
sbb
pop
arpl
cld
orl
iret
flds
lods
sbb
test
daa
jmp
cld
jb
dec
jp
sbb
inc
sbb
jno
xchg
adc
pop
imul
loopne
pop
ds
popa
int
insl
mov
mov
fnstsw
xchg
add
lds
and
rorb
sbb
leave
ret
adc
xchg
mov
inc
stos
test
jp
jns
inc
jp
mov
pop
and
lea
adc
jnp
mov
xchg
test
movsb
push
aam
push
loopne
sub
mov
test
push
pop
mov
mov
jae
mov
mov
sbb
sahf
xchg
jno
cmp
repnz
sbb
cmp
sbb
ds
lods
cmp
and
enter
test
insb
mov
adc
dec
inc
sbb
imul
jae
inc
sbb
xor
fidivl
lods
adc
ret
loope
test
into
sbb
addl
sbb
jbe
es
in
pushf
fstp
xchg
lahf
dec
mov
sahf
fdiv
andb
pop
leave
add
push
and
data16
or
clc
lret
pop
movsb
popl
pop
xchg
push
mov
sbb
inc
ficoms
mov
jle
lret
inc
lcall
add
pop
loopne
in
insb
xchg
jae
dec
dec
jb
push
lock
dec
addl
push
call
and
xlat
cmpsb
arpl
pushf
sub
xor
xor
enter
xor
xor
js
shll
mov
adc
push
pop
jb
aad
sub
cmp
cmp
aaa
add
loopne
adc
call
ret
in
jp
mov
out
leave
rep
hlt
push
pop
pop
pop
push
cmpsl
in
or
inc
add
adc
nop
outsb
jbe
imul
push
aad
fldenv
xchg
and
dec
mov
mov
push
es
test
mov
test
adc
dec
loop
test
jl
ret
mov
lds
pusha
rclb
nop
push
lock
shll
lods
xchg
add
add
xor
and
clc
pop
sbb
pushf
in
into
lcall
and
jbe
adc
xor
jmp
flds
inc
pusha
dec
lods
clc
xchg
sti
lods
push
cli
or
jae
scas
insb
arpl
mov
lock
push
nop
inc
mov
fsts
test
jg
pop
push
imul
lahf
lret
xor
or
fidivrs
adc
lods
mov
mov
mov
lahf
jns
aaa
jmp
and
cs
adc
jp
mull
mov
lds
mov
daa
stos
aaa
jmp
sarb
leave
mov
and
or
imul
mov
sub
ljmp
sbb
jns
test
mov
xchg
add
dec
xchg
xor
and
jg
popf
pop
loopne
lcall
cli
add
xor
and
icebp
adc
cmp
out
xchg
loope
sbb
nop
gs
dec
inc
dec
je
push
in
test
pop
cld
test
add
push
loop
je
xchg
loope
mov
loopne
pushf
fadds
xor
or
mov
cmpsl
adc
push
nop
xorb
mov
push
fnstcw
sahf
out
leave
inc
mov
or
push
inc
gs
lahf
imul
sahf
push
je
rcrl
cmc
mov
push
cmc
mov
jae
dec
pop
pop
pop
je
xor
sarb
in
inc
xor
pop
mov
test
jl
enter
js
add
add
pop
addr16
mov
pop
or
jbe
add
lret
jae
jmp
repnz
pop
push
lret
mov
pop
lods
movsb
or
or
lock
loope
push
std
dec
sub
jp
cmpsb
jle
loop
test
fsub
imul
andl
fstpt
mov
in
pop
lret
out
cli
insl
xchg
xor
push
scas
fcom
int
stc
sub
pushf
mov
jmp
or
sbb
aas
insl
imul
xchg
sub
jmp
out
dec
xor
inc
mov
out
sub
cmp
pushl
ds
jb
insb
fwait
push
jmp
push
lock
call
jne
inc
push
mov
movsb
subl
mov
sbb
movsb
xchg
sub
jmp
insb
jno
decb
outsl
adc
out
adc
clc
adc
scas
divl
mov
pop
outsl
fpatan
out
dec
xchg
adc
inc
and
adc
mov
and
cltd
ret
scas
xor
sub
jp
mov
xchg
and
pop
pop
cmp
inc
test
add
cmc
repz
sub
mov
mov
jb
ja
loop
scas
or
fucomi
cmc
fldl
subb
repz
loopne,pt
xchg
sbb
or
xor
and
in
sub
imul
and
push
push
popa
dec
into
push
rcl
faddl
push
and
xlat
test
push
add
js
adc
sub
mov
and
xchg
fildll
fimuls
aad
pop
sarb
jbe
testb
jne
adc
adcl
repz
or
js
mov
clc
adc
and
mov
and
out
ss
or
jo
mov
lcall
int
ret
mov
insb
sub
mov
shrb
or
lea
pop
imul
jnp
adc
mov
clc
mov
fprem1
jge
fwait
inc
xor
jmp
jl
repz
mov
cmp
inc
xlat
mov
push
add
adc
fisttpl
xchg
test
popf
dec
push
sub
push
fwait
in
pusha
dec
lock
add
pop
dec
in
adc
ror
repz
add
mov
and
lcall
add
push
int3
add
cltd
mov
je
jnp
outsb
push
sbb
pop
sbb
psllq
jns
rorb
cmp
xchg
pop
nop
stos
ss
mov
xchg
push
rorb
sti
and
push
mov
rcr
fs
mov
cmp
or
movsb
call
push
mov
mov
test
xchg
dec
push
jb
inc
and
stc
xchg
sbb
push
aaa
mov
enter
lock
inc
in
inc
loopne
cmp
jbe
addr16
xchg
out
xor
lahf
mul
aaa
sub
inc
out
mov
test
xchg
stos
sub
sbb
aas
mov
pop
and
jb
mov
cltd
lods
xor
push
call
rclb
fnstcw
lahf
lock
out
ds
jecxz
mov
sahf
or
jecxz
push
jecxz
cmpsb
ljmp
scas
arpl
hlt
loop
jnp
sub
jnp
mov
nop
jle
in
sbb
xchg
dec
test
fmull
pop
jo
adcl
movsl
int3
call
jnp
and
fwait
mov
data16
imul
xor
push
cltd
arpl
mov
and
arpl
test
add
popa
dec
push
dec
cmp
push
dec
dec
ficomps
dec
cmpsb
add
cmp
and
sbb
loopne
and
xchg
cli
aam
pop
stos
mov
adc
jg
inc
xor
cs
hlt
xchg
imull
aam
loop
lahf
sub
fwait
jnp
pushf
in
shll
das
std
push
std
adc
push
xchg
jb
mov
int
add
lahf
push
xchg
pop
pop
xchg
mov
std
inc
test
xor
dec
ja
add
dec
mov
mov
add
adc
xchg
jge
mov
jmp
mov
test
adc
test
nop
jecxz
pop
pop
add
mov
sahf
inc
xchg
scas
add
adc
lahf
xchg
xchg
mov
in
test
push
push
or
pusha
mov
mov
jb
mov
sub
xchg
scas
shll
cs
push
cmp
pop
sub
testb
dec
add
mov
push
dec
std
mov
pop
pop
in
jnp
out
decb
jae
inc
jns
int
cltd
cwtl
mov
sbb
mov
add
adc
mov
push
arpl
mov
je
pop
mov
je
stos
xor
jmp
adc
pop
add
enter
or
icebp
popf
arpl
repz
mov
dec
lods
int3
adc
fsubr
xor
mov
test
adc
sbbb
ljmp
push
xchg
negl
pop
xchg
in
sbb
dec
ljmp
dec
fcoml
data16
notb
fisubrl
xchg
sub
push
clc
mov
fisubl
xor
clc
test
in
icebp
stc
aad
es
movsb
shrb
sbb
push
in
lahf
pop
jmp
jecxz
mov
adc
shlb
pop
hlt
hlt
push
out
je
ss
jo
cmp
cmp
add
inc
push
ds
mov
dec
rcll
xor
mov
push
stos
stc
push
scas
push
adc
mov
push
push
cmp
fmull
scas
leave
and
jne
leave
fiaddl
jle
mov
pop
and
shll
ljmp
or
lret
lret
sti
mov
jbe
mov
enter
adc
mul
or
mov
pop
stc
dec
dec
xorl
repnz
sbb
in
in
mov
jne
push
pop
iret
jbe
add
pop
push
lock
cli
dec
jne
xchg
push
fsubrl
in
outsl
mov
mov
mov
into
fs
popf
testl
popf
cmp
adc
dec
js
add
add
pop
sub
lds
push
mov
inc
and
sarl
push
scas
lahf
ljmp
mov
pop
mov
mov
int3
aas
lahf
jmp
int3
mov
push
mov
xchg
xchg
fldenv
hlt
xchg
scas
sbb
mov
lret
and
hlt
les
pop
ss
clc
cmp
adc
dec
mov
data16
popf
jnp
and
enter
aaa
outsb
nop
jns
out
fadds
mov
fstl
mov
xchg
repz
dec
jnp
movsb
fwait
int3
arpl
adc
inc
jg
fs
mov
cmpsb
or
test
xchg
inc
pop
mov
and
cli
dec
lods
push
push
push
xchg
std
inc
andb
mov
gs
jne
inc
ret
lcall
mov
inc
cmp
cs
inc
fs
adc
mov
movsb
adc
mov
orb
push
sub
xor
int3
mov
push
lds
cmp
cmp
js
loopne
ljmp
adc
xchg
cmp
bound
mov
or
sar
aas
movsl
fsubrl
mov
movsb
arpl
outsb
mov
push
or
out
adcl
cmpsl
aad
inc
xor
imul
repnz
data16
lcall
cmpsb
sub
jecxz
cmp
loopne
pop
out
sbb
cmp
xchg
xchg
xchg
lods
push
popa
insb
jnp
adc
add
rclb
and
push
sti
ret
sbb
in
and
mov
lcall
fs
pop
cmc
push
xlat
fcompl
add
test
stos
inc
test
mov
jecxz
fidivrl
mov
in
outsl
in
into
enter
pop
xor
inc
xchg
lea
insl
pop
push
or
xor
dec
lea
mov
mov
dec
xor
loope
in
or
enter
addr16
mov
frstor
cs
pushf
mov
sahf
jbe
jb
pop
je
mov
push
adc
fisttpl
insb
push
aam
stos
popa
ret
aaa
xchg
jecxz
pop
mov
or
fsubrl
xchg
fidivl
jbe
sub
test
sub
mov
mov
xor
pushf
ljmp
pop
test
mov
inc
add
xchg
imul
sub
mov
or
call
fistpll
nop
sbb
test
cmp
movl
sbb
sub
sbb
xor
dec
mov
sub
push
orl
dec
addr16
out
mov
leave
sbb
outsb
and
mov
sbb
mov
stos
push
aas
mov
and
fstl
enter
pushf
jg
inc
dec
inc
xchg
mov
lret
jns
test
xlat
add
adc
mov
sbb
test
aam
stos
inc
ficompl
jecxz
mov
mov
nop
idivb
cwtl
sub
or
dec
jle
xchg
mov
push
insl
sub
or
mov
test
cmp
add
or
or
imul
fdivrl
mul
iret
and
or
hlt
push
hlt
jmp
into
adc
aad
jle
xor
sbb
mov
not
inc
and
dec
or
repnz
push
cltd
lock
add
and
xorb
jb
dec
ja
enter
inc
divl
mov
pop
lock
lea
or
add
inc
cmpsb
and
test
pop
ljmp
xor
incb
mov
idiv
or
add
inc
push
sbb
int
mov
out
adc
mov
jbe
mov
mov
mov
push
sub
aad
pop
pop
mov
mov
sub
lcall
cld
dec
testb
pop
pop
mov
cmc
jb
cmpsb
push
or
add
adc
add
call
js
inc
aam
icebp
fadd
mov
cwtl
sbbl
xor
out
or
push
shll
cmc
mov
pop
jg
and
pusha
mov
pushl
ret
xor
lahf
fnstsw
pop
pop
adc
jp
jmp
rcll
jns
repnz
test
insb
enter
jmp
into
add
or
sub
rcr
into
xchg
mov
gs
lcall
mov
jg
jno
adc
pop
nop
rcl
jnp
add
jnp
add
lret
ja
shlb
pop
adc
clc
mov
les
test
sbb
cmp
push
lret
inc
out
bound
repnz
arpl
dec
sarb
sub
mov
cmpsl
bound
push
incb
adc
lods
mov
lahf
mov
adc
jmp
divl
movsb
sub
jl
inc
dec
hlt
int3
ds
xchg
cmp
loopne
pop
add
aam
lret
jmp
xchg
inc
add
jge
mov
xor
cld
dec
pop
adc
push
adc
iret
xchg
fisttps
cmp
dec
andb
add
roll
push
inc
movl
or
xor
iret
sbb
lahf
shlb
aas
sti
cmp
mov
ret
mov
repnz
cmp
es
pushf
mov
xchg
cltd
add
fnstenv
test
sub
cmpb
adc
mov
inc
push
wbinvd
inc
push
inc
mov
es
ret
mov
sahf
test
mov
sbb
scas
mov
xor
clc
sbb
cltd
inc
xor
mov
sahf
cmp
daa
mov
movsl
jns
es
inc
xchg
in
jge
lcall
addb
popa
pop
sbbl
inc
addr16
jmp
add
and
test
sub
and
leave
ds
adc
push
stos
mov
outsb
jmp
add
xchg
in
cs
add
shll
aad
dec
or
ds
inc
into
sbb
lahf
je
xchg
sbb
cmp
popf
or
jns
push
pushf
sbb
pop
or
lds
lds
in
in
out
sbb
dec
dec
fdivrl
mov
jmp
dec
outsb
test
insl
fldenv
dec
orl
pop
and
pop
mov
mov
fsubrl
and
scas
mov
adc
xorl
pusha
hlt
push
cmp
and
jno
mov
movl
mov
shrb
mov
repnz
loopne
fstps
pop
jle
and
ror
sub
in
fdivrl
push
test
push
fcmovb
and
popa
gs
repz
sarl
arpl
sar
imul
ljmp
jbe
pop
sub
push
cli
pop
sbb
xchg
xchg
insb
pop
inc
dec
push
ljmp
xchg
mov
xchg
mov
inc
dec
rcll
fmull
and
icebp
jge
and
jmp
mov
mov
lods
xor
inc
dec
add
sbb
or
in
xchg
pop
mov
inc
adc
jae
popa
or
mov
xchg
pop
dec
loope
repnz
mov
int3
mov
mov
ud0
cmc
xor
sti
insl
jecxz
and
sub
xlat
insb
fidivs
pop
scas
fwait
ss
push
dec
adc
push
cmp
sub
and
jb
rcll
jmp
rorl
mov
inc
fisubs
stos
loop
inc
dec
fsubl
movb
enter
ds
xchg
or
test
or
push
incl
and
sub
or
push
or
adc
sbb
jbe
add
jle
pop
mov
jne
mov
inc
fldt
and
shrb
pop
mov
dec
leave
cmp
sbb
cmp
adc
ja
xor
loope
ret
ljmp
inc
stos
jg
push
sbb
sub
or
inc
xor
adcl
or
sbb
lcall
mov
xor
repz
pop
aam
loope
hlt
stos
xchg
orb
xchg
test
jns
jns
xor
pushl
neg
popf
xor
jmp
pushf
and
push
cmp
repz
xchg
inc
sbb
mov
dec
xchg
inc
hlt
cmpsl
jne
pop
xchg
mov
jg
icebp
addr16
mov
xchg
pusha
push
aas
out
insl
repnz
pop
ja
nop
xchg
aas
popf
sbb
cltd
mov
adc
add
push
jmp
daa
rol
xor
inc
inc
xor
dec
dec
lea
mov
dec
jle
jp
add
jne
pop
fildl
test
jne
pop
mov
xchg
sbb
pusha
mov
xchg
loope
jo
adc
add
pop
dec
test
adc
and
movsl
push
sbb
out
mov
adc
mov
or
nop
mov
inc
mov
es
cmp
lods
jns
sub
pop
jae
aaa
repz
mov
xchg
movsb
inc
arpl
imul
fs
mov
daa
mov
sub
dec
push
mov
jo
cmp
daa
mov
movsb
outsb
icebp
pop
jge
dec
test
push
rcr
mulb
and
fsubrl
mov
shlb
fiadds
push
inc
mov
das
jo
mov
ds
push
push
leave
cmp
insb
inc
or
repnz
out
xchg
jge
repnz
sub
xor
xchg
inc
jecxz
pop
jmp
addr16
push
out
push
inc
mov
es
cmp
cwtl
out
xchg
mov
enter
lret
leave
aas
fldenv
jno
sub
repnz
jl
ret
push
jl
fstl
jo
out
int3
mov
jg
inc
test
pop
ds
dec
rclb
incb
into
vpmuludq
mull
xor
dec
mov
leave
lea
push
mov
xchg
test
dec
inc
sbb
xor
push
push
dec
mov
shll
jne
mov
adc
hlt
les
or
jae
scas
lahf
sub
push
enter
sahf
push
inc
push
fs
nop
jl
dec
addr16
sub
daa
stos
insb
cltd
jge
mov
lret
neg
dec
shrl
cmpsl
xor
lahf
push
xchg
push
cwtl
inc
bound
mov
ljmp
push
test
pop
mov
outsl
jns
and
out
adc
add
sub
aaa
daa
lcall
inc
xchg
ljmp
add
push
js
lcall
divb
dec
push
arpl
dec
adc
mov
pop
mov
jle
push
out
lcall
sub
add
mov
je
js
repnz
adcl
mov
je
nop
ss
pop
es
aam
and
es
xor
dec
lock
jnp
push
cmc
xor
insl
addr16
in
cs
or
lock
gs
inc
jae
repz
mov
jnp
hlt
in
ss
and
mov
lock
leave
mov
icebp
xchg
dec
popa
jo
mov
test
insl
add
jmp
sbb
jg
into
lods
inc
adc
cmc
xchg
and
mov
lods
out
dec
sub
xor
rolb
jle
jmp
cmpsl
xor
mov
inc
add
adc
jo
outsb
in
lea
cmpsl
aaa
sti
cmp
sbb
stos
sbb
rcl
and
lea
pop
sbb
and
jb
mov
push
shrb
and
add
popf
mov
decl
movsb
adc
std
in
jmp
fisubrl
adc
push
inc
scas
mov
subb
pop
lods
jo
push
cmpsb
int
mov
jnp
or
lea
lea
enter
aam
loop
test
or
add
out
push
or
cli
xchg
dec
cmp
and
dec
cmp
sub
sub
pop
jnp
in
pop
int
push
icebp
insb
aas
lds
jb
sub
xchg
push
lods
dec
jl
in
dec
outsl
or
mov
mov
jns
mov
jge
insl
sub
andb
add
add
rclb
mov
lret
xchg
mov
mov
stc
lcall
arpl
lock
es
dec
mov
push
test
sbb
adc
outsb
push
fwait
xchg
out
aas
xchg
bound
int
push
mov
cmp
pop
sub
cwtl
pushl
dec
dec
inc
jg
inc
pop
or
or
notl
push
std
push
sbb
push
insb
fucom
dec
xchg
mov
xchg
cwtl
xchg
imul
push
cs
iret
cwtl
push
jg
stos
call
lahf
or
sbb
idivl
addr16
out
cltd
pop
cmpl
mov
fistpl
icebp
mov
lret
addb
adc
pop
cmpsb
adc
dec
mov
sti
test
fisubrl
adc
je
btr
fstpt
push
das
mov
call
sbb
lods
xor
jecxz
mov
jmp
sbb
pusha
jno
movsl
pop
movsl
icebp
paddd
scas
inc
aaa
mov
mov
add
mov
pop
sbb
sbb
lcall
rcl
push
xor
stc
das
sbb
adc
jecxz
mov
fiadds
and
insb
ss
adc
nop
add
jno
fsubrp
xor
sbb
cmp
xor
in
add
in
sub
pop
es
sub
ljmp
ljmp
mov
mov
and
fisttpl
cmp
shlb
loope
xchg
inc
fnstenv
xor
push
stos
jle
popf
movsb
mov
jnp
mov
decl
hlt
addr16
dec
sub
sub
sbb
jge
icebp
out
test
stos
cmp
adc
adc
mov
add
jne
inc
lahf
das
lods
xchg
fstl
mov
dec
addb
imul
sub
sbb
lahf
popa
pop
push
add
dec
jne
bnd
mov
cmp
dec
dec
jne
adc
add
xor
cltd
jecxz
sbb
in
mov
je
ja
pop
cmpsb
das
insl
fwait
test
fists
sbb
dec
fbstp
clc
mov
add
mov
pop
sbb
mov
test
out
addr16
xchg
add
sbb
mov
into
shrb
mov
lret
int3
popf
addr16
dec
xchg
ret
inc
insl
adc
aaa
test
das
push
xchg
jae
and
mov
or
jecxz
fcmovb
pop
clc
push
xchg
addr16
mov
mov
bound
fisubrl
lcall
mov
mov
or
add
mov
iret
in
jno
mov
fwait
int
mov
les
dec
lock
jp
aad
pushf
push
lods
pusha
add
jns
mov
jle
jbe
inc
xchg
lods
lods
or
scas
xor
jp
and
ljmp
movsl
jmp
test
or
idivb
bound
std
mov
imul
jnp
xor
sbb
iret
iret
push
adc
push
cmc
push
jnp
jge
mov
icebp
mov
adc
cmpsl
loopne
popf
mov
sub
dec
jae
out
mov
jae
fcoms
ret
lahf
fwait
popf
xchg
sarb
or
sub
and
cbtw
pop
dec
dec
add
idivb
std
ret
push
dec
sbb
sub
jns
dec
pop
fst
sbb
xchg
sbb
mov
rol
xchg
inc
ja
and
imul
mov
lock
and
lods
nop
ret
dec
dec
inc
xchg
xor
pop
mov
sbb
dec
outsb
imul
cmpsl
push
scas
jmp
mov
lea
in
xor
xchg
jne
push
xchg
arpl
mulb
jbe
je
mov
aaa
push
cmp
and
pop
inc
dec
mov
fxch
inc
jl
mov
pop
lea
add
mov
inc
popa
lds
aas
sub
test
rep
pop
push
dec
add
outsl
in
sti
andl
popf
gs
dec
inc
flds
xchg
mov
aam
sub
mov
xchg
sub
push
mov
sub
xor
outsb
cmp
pop
adc
adcb
ret
or
dec
lock
jle
jecxz
xor
mov
lods
orl
fxch
mov
jb
inc
push
cmp
cmc
stos
shlb
scas
mov
out
sub
into
popf
out
lds
in
fimuls
xchg
jg
gs
and
xor
cmpsb
shrb
lds
movsb
imul
test
add
push
mov
lcall
mov
mov
xchg
ret
add
mov
add
inc
mov
mov
stos
das
in
repz
push
xchg
mov
xor
in
fwait
enter
inc
push
inc
int3
push
test
movsb
mov
ljmp
loope
aaa
cmp
bound
push
jae,pt
jo
mov
jb
inc
add
mov
lret
mov
mov
or
clc
xor
stos
nop
mov
rorl
ljmp
mov
push
pop
jns
imul
ficoms
movsl
imul
aaa
shll
ret
nop
and
lods
jle
cmpsb
mov
inc
cmpsb
add
dec
or
repnz
stc
jb
test
sbbb
sub
xchg
inc
lret
pop
aam
pop
stc
sbb
mov
stc
ret
push
test
test
ljmp
cli
or
addr16
and
in
fsubrs
pop
mov
leave
sbb
adc
jne
mov
mul
gs
sub
popf
mov
lds
fimuls
cltd
pop
or
loop
cwtl
adc
clc
test
dec
pushf
inc
mov
or
nop
mov
pop
xor
add
add
dec
pop
scas
xchg
test
fwait
sbbb
loopne
ds
fwait
int3
and
fmulp
jle
shlb
test
test
pop
aaa
dec
add
mov
repz
add
jp
outsl
jmp
mov
xlat
xchg
mov
jg
push
shll
ror
enter
or
push
jno
jl
and
adc
push
mov
test
into
add
das
dec
push
mov
sbb
clc
xchg
leave
popf
ss
adc
push
mov
and
lock
popf
mov
idivl
dec
dec
xor
test
inc
sub
pop
insb
adc
dec
rorb
jle
inc
aas
cmp
ret
lock
popa
ret
dec
lahf
pop
out
sub
std
xor
xor
pusha
mov
das
dec
adc
ror
rcrb
pop
jge
pusha
mov
orb
cs
test
push
pop
jb
or
repnz
jnp
push
lds
mov
push
sbb
cli
and
and
dec
cltd
in
cltd
mov
or
push
dec
and
jae
fnstenv
lahf
xchg
pop
xor
stos
inc
inc
aam
pop
and
js
cmc
sbb
pop
jbe
fisubl
cmp
inc
cmpsl
hlt
adc
sbb
aaa
rolb
dec
sub
aam
jo
lds
push
int3
fcomps
adc
mov
push
add
ret
inc
out
sub
hlt
mov
jmp
and
icebp
mov
pushf
and
mov
xchg
lret
mov
and
out
cmp
lods
pop
repnz
dec
xchg
out
imul
imul
repnz
dec
cmp
in
sub
inc
loopne
inc
xor
stos
mov
int3
mov
aam
cld
xchg
out
and
pop
cmc
subl
mov
jnp
inc
dec
mov
imul
js
inc
les
xchg
sbb
jge
cmpsl
jge
adc
ljmp
ficoms
sub
test
mov
add
outsb
sub
icebp
ss
add
fiaddl
mov
ss
loopne
std
iret
mov
inc
in
cltd
cld
push
xor
sbb
cltd
mov
jns
jl
popf
jp
mov
push
lcall
adc
mov
stos
in
adc
mov
and
xor
xchg
cmpsl
add
mov
ret
xor
lock
dec
jecxz
aaa
rorl
ss
lahf
mov
adc
test
adc
mov
push
mov
fmul
sbb
hlt
nop
fstpl
cmp
pop
pop
icebp
xor
or
fwait
test
insb
dec
pop
xchg
addb
test
mov
sbb
out
xchg
aad
jo
push
outsl
add
arpl
mov
fwait
push
push
lahf
or
outsb
je
add
mov
js
lock
cld
push
lods
scas
push
xchg
push
jb
xor
sub
pop
mov
loop
clc
mov
mov
cmp
es
iret
dec
out
sub
mov
xor
inc
sbb
in
lods
sbb
sub
push
pushf
test
sar
jnp
ds
test
or
mov
rolb
cmpsl
gs
pop
xor
mov
mov
sub
call
and
pusha
fbstp
imul
push
lods
pusha
insb
mov
outsb
cmpsl
jae
pop
pop
fidivl
and
andb
sbb
mov
fistps
add
popa
pushf
cmpsb
jbe
into
pop
je
fists
dec
pop
mov
mov
pop
aaa
and
fcmovnbe
fldl
fistl
adcb
or
andl
decl
xchg
jb
lret
js
fs
dec
and
xor
divb
pop
jbe
sub
mov
mov
lock
push
push
push
mov
push
xchg
mov
xchg
pop
or
ficompl
sub
and
push
jmp
xchg
cltd
dec
push
inc
cmp
cmpsl
insl
nop
jecxz
sbb
insb
jo
mov
mov
mov
jbe
jmp
lret
jmp
repnz
jae
adc
dec
negb
popf
es
jg
dec
lahf
aas
fsubp
cmc
scas
cmpsb
xchg
cli
out
pop
jbe
lds
sub
cwtl
xchg
sahf
out
es
inc
jbe
clc
push
push
ss
sahf
icebp
pusha
inc
mov
mov
inc
je
or
pop
cmp
jb
in
inc
fcom
and
enter
or
mov
rcr
jns
jl
out
mov
call
mov
sti
aaa
imul
xor
jmp
loope
aad
outsl
jne
push
xchg
leave
mov
cmp
lods
push
sbb
push
push
mov
jge
and
or
fdivl
mov
test
mov
mov
inc
xchg
and
mov
or
in
add
mov
xchg
scas
lret
and
xchg
daa
push
loope
pop
cltd
dec
jp
mov
adc
inc
clc
ret
hlt
cmp
or
xchg
nop
decl
aaa
push
jl
enter
jno
fs
mov
push
mov
inc
xor
xor
cli
clc
jecxz
mov
movsb
inc
ss
icebp
das
mov
dec
lods
lds
mov
inc
mov
iret
fldcw
mov
xor
inc
mov
push
jle
enter
dec
cmp
jae
faddl
mov
arpl
cmc
jg
lret
rorb
add
jle
fisubrs
dec
imull
or
pop
sub
test
out
sub
push
out
ret
sbb
xor
add
xchg
jge
add
jecxz
xchg
pop
mov
xchg
mov
xor
stos
jecxz
outsl
or
les
psrad
std
push
in
pop
xchg
push
fxam
insl
aam
leave
inc
inc
jecxz
dec
inc
fdiv
les
sbb
cmp
pop
lahf
out
or
mov
out
and
std
in
lcall
loop
mov
push
mov
out
pushl
adc
repnz
popf
mov
imul
fwait
xchg
mov
add
xor
mov
fwait
mov
mov
adc
test
fcmovbe
cltd
sahf
mov
inc
hlt
sahf
xor
dec
jnp
imul
push
dec
scas
int
pop
sbb
jp
mov
cwtl
out
jg
aad
cwtl
xchg
ja
pop
gs
cmp
arpl
cmc
add
inc
rclb
addr16
jnp
dec
adc
adc
jbe
in
cmp
push
pop
loope
cmp
mov
into
ljmp
outsl
pop
dec
jo
fadds
push
aam
clc
mov
mov
in
pop
repz
fdivr
out
xchg
mov
and
jl
cwtl
dec
out
rclb
out
mov
clc
int3
pushf
xlat
adc
sbb
jae
inc
ss
inc
out
inc
mov
test
iret
push
push
mov
cltd
popf
lahf
adc
mov
jecxz
mov
mov
add
push
sbb
aam
fsubrl
stos
stc
or
aam
pop
push
push
cld
push
add
inc
and
enter
pop
xor
lock
stc
dec
iret
mov
popf
lods
push
sub
adc
jo
fmuls
xchg
aaa
jp
mov
add
popl
aad
test
mov
mov
popa
inc
xor
in
int3
dec
mov
mov
lock
mov
rclw
inc
push
aad
inc
jae
fadd
bndldx
adc
add
int
loopne
popf
mov
mov
stc
push
testb
jmp
add
xchg
movsl
jp
adc
add
js
push
mov
sbb
or
aad
mov
mov
fidivrs
pop
push
sub
push
sub
inc
xor
mov
adc
mov
sub
dec
sahf
add
les
sbb
fldcw
cmp
aas
sbb
mov
ljmp
in
adc
pop
dec
popa
iret
jle
dec
push
lcall
sbb
rcrl
lock
sbb
or
mov
push
test
push
cmp
xor
jmp
mov
sbb
sbb
divb
subb
mov
les
sti
pop
bnd
call
popa
test
cltd
out
fiaddl
cmp
dec
shl
into
cmpb
or
mov
jno
scas
cmpsl
and
sub
jns
push
cmpsb
add
icebp
sbb
adc
xor
repnz
nop
jne
pop
add
pop
cmp
mov
inc
jl
movsb
out
vphaddwd
adc
ret
pusha
hlt
add
mov
data16
cmp
sub
je
add
sbb
stos
mov
outsl
inc
xchg
out
xor
dec
shlb
add
inc
ss
xor
btr
jbe,pn
call
pushf
dec
xchg
mulb
xchg
outsb
shr
jp
leave
out
rol
jae
mov
in
push
inc
cltd
dec
ss
arpl
sbb
fcmovnu
xchg
lds
aam
mov
mov
fwait
inc
push
out
jb
cmp
lods
sbb
jb
movsb
nop
andb
aas
sbb
sbb
outsb
lds
or
movsb
mov
mov
jp
xor
xchg
int3
add
fwait
jo
mov
inc
push
mov
sbb
jge
xor
push
icebp
stc
cmp
xor
rcll
mov
repnz
sbb
xchg
out
insl
popf
enter
cmc
ret
dec
xor
in
inc
loop
int
push
cmp
outsl
mov
mov
fnstsw
jne
and
cltd
fabs
imul
cmp
loop
in
rol
xor
shrb
xchg
clc
xor
test
mov
out
stc
shl
orb
rep
into
xor
lock
ljmp
jb
pop
stos
dec
inc
cmp
fidivrl
mov
mov
xlat
popa
fisubrs
outsl
aas
and
lcall
pop
jno
lret
add
in
xchg
shl
and
leave
push
sbb
in
push
push
jbe
stos
pop
push
dec
push
fwait
mov
dec
pusha
enter
repz
inc
in
ds
aad
ret
mov
mov
and
stos
std
mov
into
in
popf
dec
in
sbb
mov
dec
aas
hlt
pop
popa
inc
call
dec
mov
inc
xchg
lods
jge
out
in
mov
jp
push
mov
scas
lock
sub
aas
mov
lds
push
fbstp
incb
rcrl
push
aad
adc
loopne
sbb
packssdw
test
pop
pop
outsl
adc
jo
jno
mov
rclb
test
jns
aad
xchg
call
or
cltd
ret
lret
sti
nopl
lcall
lods
sbb
xorl
lds
push
pop
push
push
iret
outsb
xor
xor
push
pop
stc
das
inc
or
andb
cmp
pusha
and
imul
xchg
test
fadd
imul
mov
push
aam
insb
pop
push
xchg
lods
js
test
mov
fldenv
push
add
and
rcl
and
loope
sub
ss
int3
rolb
dec
jo
dec
leave
aas
and
lcall
pushw
insl
mov
fdivp
popa
fmull
aad
sub
ret
sarb
enter
inc
xchg
xchg
push
push
in
loopne
sub
fchs
aad
aad
fsubs
jp
sub
xchg
jp
jle
icebp
jae
mov
das
xor
lret
fcompl
mov
mov
pop
arpl
lds
mov
fsubl
sbb
cmpsb
cltd
mov
add
fwait
xchg
jne,pt
jge
cs
je
gs
or
ljmp
aas
into
out
aas
mov
sub
xlat
jg
cli
mov
push
pusha
aam
mov
clc
test
fdivrs
mov
xchg
ljmp
icebp
sub
imul
add
std
je
mov
lods
mov
movb
mov
mov
and
lret
lret
dec
lret
imul
in
cmp
leave
push
add
mov
inc
movsb
dec
sub
jg
adcb
pop
mov
call
or
mov
mov
mov
jge
sbb
shlb
sub
or
and
in
addr16
push
loopne
xor
iret
pop
mov
mov
in
dec
pushf
xchg
mov
insb
push
lock
sti
mov
shl
test
ds
int
mov
xor
daa
jecxz
dec
jb
repnz
fildl
in
xchg
adc
sub
push
mov
arpl
movsl
and
sub
pop
jb
push
fcompl
dec
inc
sub
incl
sub
cs
pop
xlat
xchg
jbe
mov
loop
es
shrl
xchg
add
mov
xlat
mov
add
cld
out
jnp
pushf
cmp
fwait
mov
mov
das
out
pop
mov
lret
out
pop
lds
out
mov
aaa
rolb
push
test
and
mov
insb
push
lret
inc
iret
inc
fs
test
leave
pop
pop
sub
cld
notb
push
mov
jmp
xor
xchg
ss
push
jns
cltd
mov
cmc
pop
jb
insl
xlat
int
xor
repz
in
cmp
add
fsubp
scas
sub
sub
push
out
xor
adc
jl
icebp
nop
pop
dec
and
sbbl
cmp
shlb
dec
jg
pop
idivb
push
pop
addr16
ja
pusha
mov
ret
push
int
sub
sub
repnz
ss
stos
loope
mov
nop
pop
xlat
jmp
jns
call
fidivrl
loop
mov
pop
cltd
or
test
adc
js
cmp
dec
movsl
clc
sti
repz
or
repnz
and
fildl
cmp
ljmp
dec
mov
push
cmp
lods
movsb
mov
or
nop
outsl
clc
cmp
inc
aaa
sahf
mov
test
or
adc
pop
stos
fwait
nop
ret
into
rcl
mov
pop
es
sarl
mov
fmuls
insb
cltd
jae
sub
sbb
out
repz
lds
or
push
jnp
pop
xor
mov
mov
sub
jle
daa
sti
jecxz
mov
repz
data16
dec
push
and
nop
repnz
mov
mov
hlt
insl
dec
lods
mov
decb
popa
xor
mov
jae
jecxz
jne
rcrb
sub
mov
data16
sub
test
js
dec
xchg
pop
adc
pop
mov
int
divl
jns
xchg
insb
adc
and
ss
pop
mov
stc
mov
xlat
repz
adc
and
movsl
dec
repz
arpl
int
scas
popfw
cmpsl
sbb
inc
out
movsb
daa
hlt
stc
mov
mov
xor
pushf
pop
or
adc
adc
ja
xor
lret
iret
push
lock
sarb
jo
ds
cmp
inc
in
inc
pusha
in
lods
mov
das
xor
fnstcw
inc
fidivs
loop
notb
push
xor
cmp
int
test
fnstcw
dec
xor
xchg
ljmp
sbb
les
cmp
cli
mov
addr16
clc
jne
scas
les
std
xor
or
out
xor
fildl
bound
fcmovnbe
lock
jbe
mov
sahf
dec
pushf
mov
aas
stos
sub
cld
mov
stos
loop
out
adc
lods
and
fiadds
rol
inc
pusha
adc
sbb
ja
fsubr
sub
mov
cltd
xorb
inc
stc
jb
mov
icebp
shll
movsl
jmp
adc
jl
add
int
sbb
or
int3
push
out
bsr
sbb
inc
test
mov
dec
mov
push
jno
dec
inc
test
fnstsw
adc
mov
lock
xchg
mov
sub
inc
adc
pop
push
sbb
ret
div
xor
cmpb
stos
sbb
int3
or
cmpsl
mov
fnstsw
aaa
and
push
pop
jle
mov
jbe
rorl
add
adc
sub
lock
mov
out
ss
loop
add
fmulp
ljmp
lcall
jl
add
jb
div
les
int3
cmpsl
mov
sub
imul
pop
in
loope
out
pop
or
push
ss
repnz
data16
movsb
addr16
or
pop
daa
mov
mov
xchg
jmp
mov
jnp
fwait
setp
pop
dec
out
push
pop
cwtl
or
and
or
cmp
push
ja
push
and
ret
int
sbb
arpl
adc
lea
dec
jg
shll
enter
xchg
pop
sub
aaa
loopne
shlb
add
xor
daa
fadd
push
dec
xchg
xor
xchg
jno
sahf
xchg
inc
xchg
mov
or
testl
and
es
outsl
stos
push
shl
inc
lods
loop
sarl
popa
fs
fimuls
mov
hlt
inc
mov
js
int3
jns
add
pop
push
sub
icebp
rclb
inc
cmp
and
pushf
out
xchg
xchg
daa
aaa
xchg
lock
and
testb
sbb
dec
ja
lock
lahf
setle
add
sub
gs
enter
test
int
xor
dec
pop
mov
xor
pushf
out
aas
xchg
pop
scas
jle
cwtl
jne
in
mov
adc
bswap
dec
sarl
cld
jo
adc
push
inc
scas
in
mov
jecxz
repz
popf
loopne
xchg
jp
cmpsl
sbb
out
jmp
fs
jl
mov
mov
stc
sahf
xor
add
mov
add
mov
push
movsl
and
shlb
dec
out
dec
das
dec
sti
jae
xor
lock
fidivrs
rolb
scas
sub
mov
jp
xor
jge
inc
and
insl
sahf
pop
je
out
lahf
cmpl
sti
xchg
ljmp
sar
add
aaa
mov
orb
loop
ret
test
popf
cmp
enter
xor
out
mov
mov
or
cmp
mov
loope
add
jo
push
stos
cmp
cwtl
add
test
cmp
cmp
movsl
call
sub
popf
push
push
out
and
loope
mov
test
out
data16
xor
popa
out
aas
pop
cmpl
cmp
jo
mov
dec
ljmp
adc
xchg
pop
enter
mov
cmpsl
sub
cs
cwtl
js
int
jb
bound
in
les
in
dec
adc
pop
mov
jg
loopne
idivb
pop
cs
cmp
inc
sahf
mov
xchg
push
mov
and
mov
mov
xchg
imul
push
popa
cmp
jle
mov
lock
mov
push
daa
mov
mov
jge
mov
or
xor
push
lods
std
out
mov
nop
add
inc
lret
jbe,pn
xor
mov
xlat
ljmp
or
cmp
inc
insb
out
gs
fwait
in
push
addr16
mov
pop
pop
arpl
icebp
jecxz,pt
cltd
xchg
jbe
repz
imul
mov
and
mov
or
mov
mov
bound
out
movsb
cmpsb
and
sbb
imul
sub
cltd
xchg
call
cmp
sti
mov
adc
cltd
pop
je
std
lcall
sub
mov
dec
mov
adc
arpl
aad
cli
mov
mov
sti
dec
jo
insb
mov
je
shll
je
icebp
sbb
mov
pop
cwtl
test
imul
mov
inc
and
mov
repz
pop
cmpsl
clc
inc
dec
ret
jae
mov
test
aad
mov
repnz
mov
mov
pop
insb
pop
mov
dec
push
insl
insb
stc
nop
push
adc
inc
pop
inc
dec
pop
or
jb
test
xchg
sub
pushf
or
and
or
scas
ja
inc
sbb
rorl
aas
jmp
adc
outsl
dec
sub
dec
shlb
push
les
push
sub
adc
je
sub
ljmp
inc
cltd
daa
mov
inc
xor
sub
negl
mov
or
cltd
add
or
dec
outsl
mov
xchg
nop
xor
xchg
mov
rolb
sub
test
adc
loop
data16
adcb
inc
mov
scas
xchg
movsl
jle
jo
scas
lret
sbb
sbb
fwait
cwtl
popf
dec
cmp
and
mov
and
imul
jp
pusha
jbe
push
and
pop
adc
test
cmp
adc
lret
cmp
iret
push
lds
into
sub
cmp
les
sub
dec
mov
test
dec
loope
shl
cmpsb
sarb
push
cmpsl
hlt
mov
sub
mov
xchg
lock
jg
out
adc
add
sub
mov
mov
push
inc
jecxz
sub
icebp
mov
gs
in
popfw
negb
ja
xchg
pop
cmpsl
jnp
and
dec
and
sbb
sbb
stc
sbb
xchg
rol
sbb
and
ja
inc
mov
sub
mov
mov
mov
inc
subb
shld
hlt
rcrb
arpl
cli
cltd
and
sbb
ja
mov
int
nop
mov
stos
inc
mov
fcomps
mov
mov
and
prefetch
or
pop
or
ds
sub
jg
movsb
lods
or
outsb
add
jne
push
ret
js
mov
shrl
or
pop
sbb
cltd
ss
mov
fld
rcrl
nop
dec
movsb
pusha
gs
jae
inc
dec
insl
adc
aas
xor
pushf
pop
imul
cwtl
test
outsb
lods
mov
dec
sub
sub
ds
ds
jmp
pop
add
mov
dec
daa
daa
shr
jnp
xor
xor
mov
xchg
fisubrl
or
inc
cmp
dec
shll
lret
mov
mov
rcl
lea
aas
sbb
and
xor
jecxz
enter
xchg
dec
outsl
aaa
lcall
mov
into
repz
ss
lret
jnp
negl
loop
sub
mov
incl
gs
repnz
rorb
testb
jns
popa
jb
jb
push
das
sub
mov
ficoms
fldl
xchg
out
xlat
or
stos
inc
leave
sbb
cmpb
loop
push
scas
push
into
sub
mov
jp
xchg
sbb
add
call
sub
push
bound
xchg
out
push
in
or
adc
sarb
lock
shll
test
adc
cmpsb
mov
add
mov
sbb
mov
xchg
inc
call
fucomi
adc
clc
iret
loop
mov
sbb
sarl
push
pusha
test
cld
push
rorb
cmc
sbb
jo
nop
divb
sub
pop
mov
jne
xor
fistpl
push
pop
adc
push
mov
push
stc
mov
jae
pop
movsb
jmp
arpl
out
call
mov
mov
jp
gs
dec
dec
cltd
push
xor
mov
adc
add
mov
add
idivb
ja
ja
jge
aaa
int3
jns
addr16
push
cwtl
mov
les
sbb
or
fstpl
test
adc
mov
jnp
outsl
or
and
out
and
adc
xchg
or
push
repz
mulb
dec
test
inc
inc
xchg
push
or
imul
jns
sarb
inc
sub
movsl
dec
or
push
xor
scas
popf
mov
into
xchg
hlt
ds
pushf
shrl
test
cltd
aad
push
pop
ss
xchg
dec
scas
mov
adc
or
mov
testl
call
sub
xchg
push
cmc
je
mov
inc
and
sti
lds
mov
jo
sti
arpl
or
lds
and
push
testb
cld
jno
das
leave
mov
cs
push
jnp
out
cmp
mov
rcrl
sbb
mov
test
sahf
xchg
push
pop
push
cld
xor
add
and
jmp
aad
sbbb
in
xchg
stos
je
in
std
fs
subl
jmp
in
sub
xor
int3
jmp
mov
jo
push
cmp
scas
or
push
popa
rep
pop
fidivl
bound
pushf
sahf
scas
push
loop
out
dec
xchg
idivl
test
data16
aas
insb
pop
clc
xchg
out
sbb
vandnps
repz
aam
dec
lock
lods
imul
mov
mov
sub
adc
cmc
lcall
xchg
lret
dec
or
das
sbb
cld
pop
pop
in
test
sbb
aaa
out
movsl
sub
or
add
or
aad
lret
fstpl
dec
adcb
das
in
dec
xchg
xor
lock
and
cmp
adc
leave
dec
xchg
lret
cmp
out
mov
into
lcall
mov
dec
insb
xor
cli
ficomps
mov
sbb
cmp
pop
std
xchg
in
jae,pn
cmp
repz
mov
mov
sbb
add
push
inc
inc
cld
mov
jnp
cmp
cmp
mov
jnp
ss
ljmp
adc
push
pmaddwd
iret
adc
bound
in
mov
fisttps
into
shrl
mov
push
xchg
pop
fdiv
fistpl
adc
cmp
cli
dec
in
int3
jle
stos
jp
psrlw
out
pop
sarb
adc
adc
mov
icebp
xor
pop
sub
push
scas
or
bound
dec
cmp
or
adc
popf
in
clc
adc
dec
cmp
adc
push
aaa
rcrl
mov
popf
in
mov
and
mov
ja
sbb
out
out
lret
xchg
int
fs
cmp
sbb
filds
adc
ja
scas
orl
mov
xor
mov
xorb
rorb
out
pop
hlt
sahf
test
cmp
nop
adc
in
jmp
hlt
mov
or
sbb
inc
push
in
cld
or
push
inc
pop
insb
add
mov
pop
sub
imul
xlat
add
dec
cmp
sar
jae
adc
pop
jno
dec
out
jno
lods
push
out
sub
cmpsb
adc
rorb
lahf
dec
neg
xor
xchg
test
pop
fadds
push
insl
dec
cmp
inc
aas
jne
xchg
mov
add
fucomi
jle
je
sbb
pop
jle
pop
sbbl
add
jecxz
repz
arpl
xchg
dec
jmp
cmp
cmc
lea
lcall
mov
out
dec
icebp
xchg
outsl
in
inc
adc
data16
push
xor
xchg
jp
xchg
or
icebp
cmp
mov
sub
je
das
fldcw
cmp
lods
fwait
pushf
jmp
sti
mov
fdivs
mov
imul
repz
addb
loop
ljmp
aas
pop
roll
pop
push
jp
cmp
outsb
mov
push
and
daa
sbb
mov
cli
sbb
leave
mov
in
data16
mov
in
jno
adc
lock
add
lea
adc
ret
call
and
bound
ss
cmc
ret
aaa
mov
adcl
cmp
cwtl
push
xor
xchg
data16
adc
cli
sub
dec
mov
xchg
mov
test
call
mov
rcrl
mov
pop
gs
test
imul
repnz
stos
xlat
push
add
xchg
lret
lock
adc
mov
inc
test
adc
mov
lods
sbb
sbb
dec
into
mov
stos
sbb
sub
sbb
dec
jns
sbb
pop
add
cmpsb
cmc
lods
push
mov
or
pop
lock
cmpl
scas
jb
subb
or
popf
scas
adc
rorl
nop
jecxz
cmc
xchg
adc
in
bound
les
cmp
sub
enter
pop
mov
aas
cmp
xor
inc
lods
or
inc
and
mov
mov
shrb
fisubrl
adcl
xor
pop
shll
xor
cmp
mov
clc
mov
or
int3
jne
idiv
cmp
iret
pop
xor
lods
lods
ja
fnstcw
push
insb
cmp
xor
sbb
mov
xchg
repz
in
cmp
in
fidivl
and
shlb
iret
push
cmp
daa
jnp
gs
sub
push
or
push
repnz
pmaddwd
or
repz
dec
repnz
jmp
mov
shl
xorb
pop
testl
shrl
sti
sub
jecxz
loop
push
and
fcoms
les
nop
popa
add
shll
fidivl
lcall
jae
adc
aas
fldenv
popf
jp
outsl
xchg
add
popf
cld
stos
addr16
dec
mov
sbb
hlt
cld
lret
fdivr
movsb
jb
sub
leave
shlb
ret
push
and
push
mov
scas
jg
mov
pop
or
fucomp
ja
add
mov
mov
xorb
jecxz
fisubrl
sbb
insb
in
or
pushf
cmc
enter
xor
cmp
cli
out
inc
xchg
ret
ret
xchg
clc
sub
mov
fwait
dec
cld
pop
jmp
push
add
mov
movsl
and
and
adc
cmp
jecxz
cwtl
add
cmpb
fcom
add
mov
cmp
cmp
push
rorl
fst
and
sahf
add
inc
mov
xchg
ja
push
push
in
insb
iret
jge
lahf
xor
ret
push
lds
sti
cmp
addr16
pushf
lock
popa
fucomi
mov
add
add
inc
mov
mov
out
clc
mov
sub
inc
dec
add
in
in
adc
pop
inc
cmp
push
mov
mov
pop
lret
cwtl
jmp
and
and
into
ss
idiv
jle
neg
lea
xlat
cmp
in
mov
jl
add
jp
leave
mov
ret
out
test
orb
inc
hlt
insb
xchg
inc
mov
mov
xlat
out
inc
fmull
dec
popa
xor
add
pop
pop
lcall
jo
dec
inc
push
ljmp
subl
cli
rorb
insb
icebp
subl
ficoms
movsb
cs
call
jl
or
shlb
fidivrl
je
add
xchg
add
push
cmovnp
je
mov
sub
mov
inc
enter
pop
daa
xchg
ljmp
dec
repnz
cwtl
scas
sub
and
scas
scas
inc
xchg
cmp
inc
jl
ret
sti
xchg
dec
test
hlt
inc
pop
push
dec
xchg
add
mov
adc
loope
jg
cmp
mov
xchg
push
fisttps
mov
xorl
arpl
test
out
sub
push
lods
xlat
dec
mov
imul
mov
scas
fwait
xor
das
lcall
push
jb
cli
lret
test
nop
cmpsb
jecxz
mov
fcomps
fisttpl
test
xchg
call
hlt
pop
adc
stos
mov
xchg
pusha
push
mov
pop
stos
cmp
lock
loop
mov
xor
pop
mov
scas
sub
and
pop
insl
dec
jmp
or
stos
imul
add
add
stos
or
rclb
cli
or
ljmp
shll
mov
mov
jg
pop
ret
push
pop
dec
fldl
sub
lahf
cmpsb
out
push
push
sbb
lret
pop
adc
xchg
fldenv
lret
mov
mov
into
pusha
and
jns
and
or
pop
fwait
daa
sub
xor
pop
into
xchg
test
ds
roll
fs
add
std
xchg
adc
pop
aas
das
dec
ds
lret
mov
or
inc
push
mov
push
push
out
jno
push
cld
out
sbb
outsl
inc
in
mov
scas
je
stos
cs
lcall
dec
mov
into
push
adc
addb
jmp
cli
add
xchg
cmp
xchg
push
movsl
lods
loopne
filds
imul
idivl
inc
js
fidivl
mov
sti
mov
push
mov
xchg
les
jge
jmp
pop
gs
or
shrl
cmp
adc
int
or
sbb
loop
add
jno
mov
cltd
daa
mov
flds
js
dec
inc
cmpsb
lock
decb
lods
and
mov
in
test
xchg
xor
xor
fistpl
sub
xor
add
outsl
fnstenv
add
loopne
bound
fcompl
add
sbb
xchg
xchg
jecxz
jmp
scas
lods
dec
stos
cmpsl
outsb
dec
dec
inc
xchg
xchg
push
fstpl
cmp
sbb
ds
scas
popa
and
dec
scas
out
icebp
scas
lahf
js
push
push
jl
dec
in
nop
fisubl
cmpsl
jb
push
out
dec
add
add
test
or
mov
add
jnp
pop
fcmove
loope
nop
leave
mov
faddp
jno
xchg
in
push
adc
dec
movsb
jle
inc
rep
ret
adc
xchg
es
mov
aad
push
mov
fcom
mov
xchg
stos
mov
jecxz
inc
inc
dec
stos
sub
ret
add
jo
mov
imul
test
aad
push
loop
or
or
cwtl
dec
adc
mov
daa
inc
outsl
ljmp
sti
dec
decb
lock
pusha
jp
test
mov
iret
mov
push
adc
fwait
andb
cmp
mov
test
mov
dec
push
jo
call
roll
icebp
mov
testl
or
mov
mov
or
push
mov
into
or
sti
movsl
xor
push
push
inc
dec
add
jmp
inc
fiaddl
std
imul
out
test
xchg
fnstsw
push
xor
jl
mov
lea
and
or
bound
push
pushf
ljmp
test
fldl
cmp
push
jo
pop
addb
and
mov
mov
jo
cmp
inc
pop
add
pop
aam
ss
repz
inc
adc
pop
rorl
aad
xchg
mov
xlat
push
aaa
xorl
pop
fs
push
lret
sbb
sbb
mov
sub
mov
loop
and
jge
lret
mov
lret
mov
lahf
outsb
and
clc
inc
xchg
xor
mov
pushf
in
ss
mov
pop
push
sbb
sbb
cmp
xlat
sarl
mov
cmp
cwtl
mov
or
adc
adc
mov
xor
in
cmpsl
adc
div
loopne
adc
lds
xor
in
push
push
mov
rep
jmp
fcmovb
bound
push
add
jne
outsb
sub
jbe
pop
mov
aaa
test
sbb
ret
push
sbb
inc
cmp
mov
clc
mov
cltd
loope
xchg
std
cld
push
push
imul
pop
outsl
insl
mov
mov
cmp
cltd
jnp
into
pop
push
mov
inc
pop
imulb
jg
into
jo
lock
daa
ljmp
pop
jnp
lods
lock
push
leave
adc
mov
pusha
getsec
pop
xor
out
sbb
orps
sbb
cs
xor
inc
mov
cli
pop
xchg
in
mov
roll
sti
test
sbb
std
aas
push
push
fildll
mov
pop
movsl
inc
sub
call
cmpb
pushl
xchg
pop
dec
mov
aas
pop
dec
sbb
iret
sub
cmp
cmp
push
cmp
repnz
in
mov
push
mov
xchg
mov
pop
dec
jbe
scas
call
rcll
insl
lret
pop
add
lds
and
mov
dec
push
insl
cmp
xor
adc
addr16
lcall
mov
sahf
jne
lods
repnz
pusha
pop
push
push
hlt
ficomps
lock
insb
test
or
lods
jp
test
sub
and
add
push
dec
int
and
pop
adc
in
sbb
inc
adc
incl
std
dec
loope
cmp
pop
or
and
pop
es
mov
mov
das
and
rcrb
faddl
andb
inc
int3
cwtl
dec
xor
cmc
mov
cli
pop
xchg
mov
add
mov
mov
test
int3
shl
push
mov
push
jne
insl
cs
sbb
add
ret
mov
in
xor
cld
dec
ss
xchg
inc
sub
loope
cmp
jnp
je
jge
jns
push
xchg
or
adc
popa
cmp
push
imul
add
jecxz
mov
inc
js
mov
test
out
and
cmpsl
mov
xor
mov
push
lock
mov
fdiv
dec
fwait
mov
mov
sub
push
pop
repz
repnz
pop
pop
push
cmp
cmp
xor
dec
les
xchg
test
dec
adc
xor
mov
cmpsb
jl
in
adc
rorl
jp
loop
insl
packsswb
das
pop
lret
inc
fmull
adc
add
das
xor
std
lods
dec
hlt
test
mov
inc
jns
jo
jb
hlt
pop
pop
gs
xor
fs
xchg
sbbb
shrl
stc
fsubrs
aaa
lret
icebp
mov
mov
fldl
aam
jg
movsb
ss
clc
incl
ss
es
xchg
fs
pop
fwait
dec
ret
lret
sub
add
mov
aas
shll
pop
sti
loope
daa
clc
cmpsl
lret
ret
push
cmpl
mov
inc
adc
pop
pushf
lods
movsb
pop
mov
insl
mov
mov
stc
test
jl
mov
xchg
cmp
das
add
ljmp
cwtl
sub
cmc
loope
lods
or
lock
pop
inc
gs
xor
push
lock
adc
negb
mov
and
sub
stc
inc
mov
cmp
jae
test
push
dec
cmp
movsb
std
in
aas
push
test
leave
jl
fsubrl
out
sub
shl
jbe
and
xlat
and
es
adc
test
push
cmp
fucomp
mov
dec
aam
pop
daa
sub
xchg
fdivrs
jecxz
sbb
int
push
push
lods
inc
inc
xchg
adc
mov
fcomps
imul
push
loopne
dec
adc
xchg
pop
pop
xchg
sbb
mov
push
and
sbb
je
adc
add
mov
lret
popa
xor
test
jae
xchg
fisttpll
subl
mov
je
adc
addl
cmpsb
push
fcmovnu
mov
fstl
xlat
mov
insb
mov
push
jae
ret
aaa
xor
mov
test
dec
add
aaa
rcrb
add
sub
lock
shrb
lea
lret
cltd
push
out
inc
cmp
push
bound
divl
mov
or
and
fildll
jnp
cmpb
mov
add
imul
xor
shl
push
repnz
out
pop
enter
mov
in
arpl
inc
or
inc
xor
mov
incb
jno
sbb
or
add
push
xchg
lock
ror
pushf
cmp
jne
mov
jge
lahf
pop
fisttpll
sub
shrb
mov
push
ficomps
scas
lods
lods
push
or
iret
pop
test
dec
repz
repnz
adc
imul
es
push
test
or
inc
in
xor
or
add
hlt
inc
xor
outsl
adc
sahf
addr16
xor
pop
std
mov
ficoml
sbb
and
or
mov
add
popf
lea
sbb
test
lcall
inc
mov
inc
popa
test
mov
pushf
std
jnp
subb
aad
pop
inc
inc
into
sbb
jns
dec
cli
stos
push
std
hlt
dec
xchg
movsb
incb
iret
or
sub
or
lock
cmpsb
lock
jecxz
pop
sub
rcll
push
addr16
adc
movsl
lret
and
roll
popf
mov
inc
push
daa
xchg
push
jg
xor
xor
jecxz
insl
mov
cmp
fnstenv
pop
and
cmp
xor
dec
jbe
fdivrs
add
fcomps
jnp
repz
pop
dec
test
xchg
cli
adc
cmp
std
mov
rorl
jbe
inc
xlat
xor
divb
movsl
push
lock
add
ret
add
xchg
or
dec
in
orl
ja
je
or
arpl
ret
stc
mov
mov
xchg
scas
mov
out
scas
scas
lret
xchg
sahf
test
xor
jge
imul
inc
jb
xorb
pop
je
stc
pop
or
push
xlat
imul
pop
stos
call
add
pop
aas
inc
call
lret
sarl
dec
xor
nop
outsb
lds
push
cmp
lret
mov
mov
push
cmp
pop
test
out
push
and
and
add
xor
adc
sub
mov
cmp
mov
in
rolb
mov
mov
mov
pop
nop
lret
lahf
adc
int3
mov
sahf
jno
std
es
xchg
mov
out
sub
mov
inc
enter
inc
push
outsb
mov
iret
cld
loop
jecxz
in
fdivrs
sub
imul
je
sbbb
inc
clc
dec
mov
jmp
int3
mov
mov
insl
flds
mov
jle
xrelease
mov
mov
ret
inc
add
js
xchg
insl
clc
jo
movsb
or
pop
sbb
hlt
in
fs
adc
pop
lods
mov
xchg
adc
je
cmp
jns
jnp
in
std
mov
dec
je
fnstsw
sahf
out
xchg
sbb
push
sub
cmpsb
mov
cmp
mov
or
push
jb
inc
mov
jbe
pop
test
inc
cwtl
add
pop
frstor
inc
push
lcall
push
adc
icebp
inc
jmp
jns
out
dec
rcrl
fistpl
add
mov
lods
mov
fistps
jne
addr16
dec
call
and
out
adc
into
sub
popf
dec
push
in
shll
cmp
sub
insb
jbe
test
push
jge
inc
dec
js
decl
sar
push
push
incb
in
push
gs
cltd
sub
subb
popf
sbb
repnz
faddl
jmp
add
shl
and
xchg
and
psubsb
aam
mov
aad
mov
xchg
test
movsb
push
stc
sar
mov
xor
popf
jno
arpl
popf
or
hlt
mov
jns
loope
inc
push
in
jge
mov
push
aam
rcrl
out
subl
scas
and
sub
aas
push
ss
inc
push
inc
repnz
xor
addr16
mov
mov
inc
enter
cmp
scas
fsubp
jmp
cmp
xor
push
mov
push
jae
out
ret
sahf
popf
ret
aas
lods
icebp
movsl
xor
dec
cmp
fildl
pop
mov
jmp
out
or
jle
push
negl
push
aaa
test
or
repnz
icebp
or
roll
mov
or
xlat
add
hlt
jmp
mov
hlt
mov
push
mov
fcompl
adc
pop
add
mov
bound
fstps
mov
xor
popf
lods
rorb
dec
ja
fs
bound
cld
cwtl
jns
pop
jbe
sub
lahf
ss
or
sbb
outsl
push
bound
adc
lods
mov
mov
sub
xchg
insb
movsl
pusha
movsb
out
jmp
mov
push
sub
or
lret
push
push
xor
add
jne
test
jo
mov
and
loop
mov
or
mov
sub
adcb
in
push
cli
iret
rorl
ss
or
sbb
jns
aas
bound
dec
inc
out
mov
cld
dec
test
sbb
je
mov
dec
jge
xlat
imul
in
adc
push
fisubrs
enter
cmp
lahf
in
scas
add
xchg
lea
xchg
mov
loopne
pop
push
and
xchg
rcrl
inc
icebp
mov
or
in
cmp
cmp
mov
ja
stos
cwtl
cli
jmp
sub
dec
jmp
idivb
in
adc
bnd
jne
aam
mov
mov
push
imul
pcmpgtw
cmp
pusha
and
cs
xor
push
fisubrs
jmp
adc
xor
sub
and
repnz
popa
lods
inc
out
scas
adc
fsubrp
stos
stos
fisubs
loope
inc
push
jae
push
mov
cli
fiadds
inc
inc
pop
xchg
cmp
push
nop
test
jmp
adcl
or
gs
cli
xchg
outsl
test
mov
stos
notb
lret
loop
sub
enter
pop
add
shrb
cmp
or
push
adc
ljmp
add
faddl
jns
jecxz
xchg
ja
push
lock
aad
mov
cmpsl
jnp
sbb
push
jge
lds
mov
or
xor
jns
mov
fwait
mov
aad
push
insl
loop
sahf
xchg
dec
movsb
sub
aaa
icebp
adc
imul
inc
adc
ret
in
cmc
sub
repz
add
fmuls
fidivs
scas
mov
mov
mov
je
sub
lcall
jnp
je
fdivrp
repz
mov
mov
lods
cmpsl
roll
and
lret
fnstsw
cli
sti
and
jb
aas
daa
cmpsl
cmc
dec
and
rcll
jmp
xlat
and
loop
jmp
sbb
and
xlat
je
inc
sbb
mov
not
pop
sbb
mov
data16
push
and
add
imul
cltd
rorb
nop
cwtl
aam
repz
mov
pop
xchg
ss
arpl
fs
inc
stos
xchg
inc
adc
cmp
or
sahf
dec
shll
inc
rorb
repnz
cmp
push
sbb
aam
out
mov
ljmp
mov
pop
dec
pop
repnz
cmp
lea
push
lret
add
push
add
dec
inc
ret
push
mov
and
test
add
add
je
push
mov
xchg
rcrb
jne
push
push
int
xlat
stc
es
xchg
inc
add
push
test
dec
out
in
dec
scas
data16
mov
cltd
sub
sub
into
pusha
xor
xchg
jo
insb
cmp
test
outsl
test
add
clc
adc
mov
int
ret
sub
mov
sahf
cmp
jl
mov
sub
jg
pop
add
pop
mov
fstpt
fcmove
adc
lods
icebp
add
icebp
aas
mov
enter
sub
jg
cs
add
xchg
aad
mov
ljmp
ret
leave
mov
or
sbb
in
cli
or
jo
jmp
mov
dec
xor
iret
jns
push
xchg
mov
in
mov
cwtl
addb
pop
adc
lods
cmp
lea
inc
daa
jecxz
stos
pop
sub
mov
test
xor
add
test
sar
adc
hlt
les
adc
or
xor
push
scas
fsubs
jbe
fdivp
roll
add
aaa
xor
xchg
jns
inc
jmp
dec
push
mov
dec
rcll
xchg
inc
xlat
pop
subl
add
inc
shlb
push
cmpsb
mov
fidivrs
inc
jo
lods
test
xor
fcoms
stos
inc
pop
in
sbb
paddw
sti
xor
or
shlb
xchg
sub
cmp
pusha
call
rcrb
std
jmp
xor
mov
aam
sbb
movsb
push
xorl
pop
test
or
sub
outsb
add
or
sahf
push
fisubrl
push
adc
xor
rclb
xchg
sbb
cmp
xor
bound
clc
xor
and
hlt
jp
mov
and
pop
stc
sub
icebp
ret
ficoml
int3
scas
dec
int3
cmc
cmpsl
call
mov
aam
insl
sahf
dec
leave
cmp
inc
ljmp
andl
pop
inc
mov
repz
inc
scas
pop
mov
lret
cmp
out
and
mov
les
xchg
clc
or
adc
or
ss
in
mov
jp
dec
cwtl
flds
mov
je
jnp
xor
xor
pop
pusha
dec
mov
add
xor
fst
cmp
enter
push
outsl
mov
test
ror
repnz
inc
rorb
out
sti
mov
jo
scas
sub
lret
movsb
mov
jns
in
push
andl
xor
fisubs
push
jns
push
popl
xor
mov
push
je
pop
shlb
push
fwait
lds
xor
mov
mov
push
fistpll
push
mov
lret
mov
test
jo
incl
jmp
mov
popa
jg
rcrb
jne,pt
stos
ja
push
sub
mov
or
and
mov
nop
mov
mov
bound
pop
jne
adcl
les
add
mov
mov
popf
push
xor
xor
sub
sub
insl
adc
mov
sbb
push
jmp
sbb
push
mov
push
jo
jmp
push
imulb
mov
loope
lret
rolb
fs
mov
fistl
fdivl
int3
pop
sub
pushf
xchg
ret
outsl
jbe
adc
inc
mov
sbb
sbb
dec
ss
hlt
aas
add
notb
sahf
inc
push
push
stos
fisttpl
clc
cltd
lock
mov
xchg
ds
lock
and
sbb
aad
iret
bound
sbb
movsb
aam
mov
adc
mov
in
fidivl
lcall
femms
test
pop
ret
or
add
mov
loopne
mov
daa
lea
sub
pop
bound
outsl
jge
mov
js
stos
jae
sbb
ljmp
leave
mov
in
or
in
push
repz
cmp
aad
bound
scas
push
sbb
incl
xchg
ror
lock
push
and
stc
push
popf
iret
add
jns
outsb
and
ja
scas
adc
cmp
inc
je
pop
pop
mov
mov
je
clc
lods
ret
or
int
and
xor
push
adc
aam
loop
in
js
pop
sbb
movsb
int
sbb
mov
cmp
dec
out
mov
cmp
jns
and
push
shlb
inc
push
xchg
pop
or
sub
cmp
sub
int
ss
push
lock
or
fidivrl
rolb
in
nop
and
mov
fwait
shll
adc
leave
xlat
js
out
mov
jns
push
ljmp
bound
inc
xchg
loop
incb
arpl
lahf
adc
mov
sahf
arpl
pop
mov
and
call
cmpsb
emms
lods
push
es
scas
jg
inc
cmp
xchg
out
xchg
pop
push
adc
pop
out
loop
outsl
jl
and
loope
inc
dec
mov
cmc
inc
lcall
pop
xchg
aam
inc
pushf
mov
data16
cs
xor
inc
rorb
push
jne
ss
repz
xchg
dec
scas
loopne
enter
inc
mov
notb
outsb
sbb
jmp
xchg
repnz
inc
mov
fnsave
lock
cmp
mov
cmp
xor
stc
mull
aad
test
or
mov
roll
mov
in
mov
or
push
sbb
sub
pop
popf
insl
cmp
add
mov
mov
hlt
xchg
push
mov
or
pop
mov
jecxz
stc
cmp
clc
xlat
call
loopne
xor
dec
outsb
cli
sub
lcall
fsubr
push
test
arpl
movb
xor
repnz
sub
leave
xchg
xlat
insb
mov
mov
mov
jle
fs
mov
iret
lods
push
pop
adc
ljmp
inc
pcmpgtb
mov
out
push
mov
adc
mov
cmp
jecxz
imul
movsb
or
xchg
stos
sbb
xlat
push
cld
loopne
add
sbbl
shl
push
ficoms
xchg
fs
in
das
inc
mov
push
cmp
aam
incl
cmp
sbb
push
xor
jp
mov
in
ret
jne
push
add
push
inc
shrb
inc
cld
or
xchg
test
ret
jno
cmp
sbb
cmp
and
in
mov
mov
push
jl
mov
sbb
es
xchg
ss
push
xor
fcomps
push
aaa
push
ss
add
stc
roll
sar
test
sets
xchg
sbb
adc
and
int
in
mov
dec
js
pushf
push
mov
das
mov
dec
push
std
in
mov
cmpsl
add
xor
fwait
pop
inc
fisubrs
popa
xorb
mov
pop
cltd
inc
pop
dec
lods
adc
adc
or
and
cmpsl
dec
mov
ljmp
xchg
lret
movsb
rol
lcall
scas
push
or
cld
inc
rcrb
sub
cli
push
testl
xchg
and
lret
bound
popf
cmp
movsb
push
sarl
jg
mov
loop
and
mov
push
jno
out
xor
scas
and
inc
jae
movsl
and
shlb
aaa
addl
mov
test
imul
push
andl
jns
orb
pop
lea
push
test
xchg
int
add
push
movsb
mov
inc
xchg
and
fsubl
xor
jge
scas
rorl
jae
jo
xor
pusha
icebp
inc
mov
cmpsl
loop
orl
and
inc
xchg
or
xchg
call
in
in
xchg
sub
mov
or
xchg
insb
jne
jge
cmpsb
out
cltd
lea
arpl
test
out
decb
xor
cmp
pop
and
icebp
cmpsl
pop
int
push
xor
inc
fisubl
jmp
xor
enter
jno
sbb
dec
adc
movsl
sbb
sbb
stos
addl
es
jae
and
fisttpll
das
frstor
scas
fcmovnb
call
sahf
stos
data16
int3
mov
jmp
mov
cmc
imul
repz
mov
push
push
cltd
add
add
or
mov
repnz
ret
leave
inc
stos
jae
lret
es
sub
pop
fs
dec
mov
lods
or
bound
ret
ds
sbb
mov
loopne
mov
in
gs
ret
lods
int3
xor
nop
mov
xchg
loope
aad
mov
mov
jge
test
lcall
idivl
add
lcall
lock
ja
aaa
rcll
lret
fidivl
js
sub
xor
je
sub
stos
xor
xchg
cmp
aas
mov
sbb
fildl
enter
ljmp
add
pop
and
jge
outsb
cmp
adc
sbb
loope
mov
sbb
lret
cltd
stos
sbb
pop
jp
stos
inc
pop
or
loop
jbe
sbb
jl
rcrb
xchg
xchg
xchg
jp
xorb
adc
bound
jg
icebp
dec
int3
mov
xchg
arpl
sbb
pop
inc
fidivl
daa
mov
dec
lock
lods
or
xor
jmp
enter
xor
dec
cmpb
pop
sub
mov
cmp
and
icebp
cld
fucomp
data16
mov
lret
pop
call
xchg
mov
fsts
sub
out
pop
cmp
and
mov
add
or
and
ljmp
cli
mov
insb
movsb
dec
mov
adc
subb
mov
fidivl
jb
jne
lods
sub
push
repnz
lods
sbb
movsl
jle
in
xlat
dec
orb
and
pop
sub
sub
subb
jp
sbb
dec
call
sub
lret
sbb
push
sbb
shll
test
imul
cmp
ret
into
shll
mov
add
pop
loope
iret
lds
xor
cmp
mov
clc
xchg
mov
jns
and
and
sub
push
jnp
and
push
mov
xchg
test
iret
leave
call
jecxz
xchg
dec
mov
jg
aas
jmp
jno
enter
add
sti
outsb
popf
pop
xchg
inc
xchg
pushf
and
arpl
xor
aad
imul
mov
notb
cld
and
jns
xchg
or
out
pop
cmp
jb
mov
jge
or
lahf
jg
push
insb
js
inc
rclb
pop
stos
aad
es
push
in
pop
xor
jno
dec
loopne
out
or
aam
dec
nop
aas
jne
cmc
ret
int3
jbe
jae
in
mov
pop
cmpsl
imul
mov
test
jge
and
mov
xchg
ljmp
add
out
or
enter
dec
jmp
pop
mov
adc
sub
or
out
fisubl
sarb
loop
loop
lahf
out
pop
mov
xchg
sub
div
das
popf
cltd
test
aaa
sub
cmp
jmp
mov
xor
leave
mov
fcomps
cmp
sbb
sbb
js
sbb
adc
mov
sbb
dec
mov
dec
clc
xchg
pop
cltd
lea
sub
add
rorl
mov
mov
mov
gs
inc
or
jp
stc
pop
push
cmp
call
arpl
bound
std
cmp
outsb
inc
js
movsb
mov
shll
or
dec
pop
push
mov
dec
push
movsl
iret
aas
xorb
ficoms
shlb
jns
mov
lea
mov
sub
dec
stos
pop
mov
mov
mov
bound
jecxz
insl
stc
pop
mov
repz
pop
aaa
insl
outsl
xor
movsb
out
aad
aad
sti
in
mov
xor
dec
mov
lahf
add
das
or
xchg
mov
lret
lds
push
ret
out
rdrand
scas
jge
sub
mov
pop
stos
jg
jno
sarb
ret
sahf
lods
int
add
jl
push
pop
fnstenv
inc
imul
jno
loopne
daa
std
cmpsl
scas
ds
sbb
fwait
lea
add
leave
and
into
xor
lcall
cld
and
iret
xor
movsb
sbb
mov
rolb
fwait
mov
and
lcall
int
jnp
mov
test
int
jp
ret
out
imul
stos
mov
pop
push
into
mov
xor
arpl
xchg
fidivl
push
movsb
add
xchg
test
fidivs
jp
add
cmp
xor
jp
dec
jmp
mov
lret
and
fistl
jg
inc
shrb
mov
inc
data16
jnp
push
cltd
decl
loope
xor
sbb
ss
popa
mov
arpl
iret
lock
js
ja
js
inc
sbb
and
into
jns
xchg
inc
jmp
je
pop
mov
sub
mov
adc
imul
clc
std
and
lods
push
pop
sub
jne
mov
and
jecxz
in
and
stos
fs
iret
mov
xchg
out
dec
or
lock
push
push
and
mull
sub
add
mov
fildll
psubw
jmp
sub
pusha
sub
sbbl
movsb
lock
dec
push
push
aas
sub
hlt
inc
sbb
outsl
push
or
and
arpl
stos
cmp
stos
mov
js
iret
cs
andb
daa
jnp
push
sub
dec
sub
cmpsl
dec
fwait
mov
push
pop
mov
ss
dec
ret
pop
cld
stos
aad
int3
mov
mov
jmp
loope
ljmp
cmpsl
call
add
jl
mov
lods
push
xchg
push
es
inc
dec
ss
mov
das
pop
sbb
adc
popf
nop
inc
ljmp
test
repnz
cmp
jmp
xchg
xchg
sub
xor
xor
jg
hlt
jno
pop
push
movnti
loope
mov
popf
pop
pop
mov
dec
pushf
call
mov
daa
adc
divb
mov
cmp
ret
mov
mov
scas
add
inc
inc
fsubl
lret
xchg
fdivrs
ficoml
roll
dec
inc
scas
xchg
in
lock
bnd
cmpsl
sahf
cld
out
mov
xchg
mov
lret
imul
test
outsb
inc
ja
push
pop
cmp
mov
nop
jcxz
fldcw
xchg
adc
cwtl
js
pop
fwait
loopne
pop
jbe
sbb
jle
dec
pop
cmp
mov
xor
inc
out
pop
push
sub
sub
daa
sub
stc
cli
jl
pop
daa
int
out
adc
mov
adc
push
jecxz
movb
sbb
enter
rorl
call
repnz
mov
inc
adc
mov
mov
leavew
mov
pop
and
jl
push
lea
loop
repz
cltd
dec
lods
pop
dec
insl
inc
dec
out
int
pusha
jb
adc
out
cld
popf
or
dec
int3
add
ret
stos
add
lea
jl
push
les
bound
pop
jae
insl
je
lea
enter
test
pop
lret
je
mov
dec
das
pop
mov
inc
shrb
add
mov
popf
in
jle
ljmp
pop
dec
sbb
pop
mov
nop
fs
sbb
fdivrl
inc
jmp
test
imul
cmc
sub
pop
into
lds
dec
cmpl
pop
mov
lds
dec
mov
cmp
push
add
rol
and
test
push
mov
and
xchg
add
xor
out
data16
sbb
xlat
fsub
pop
cmc
sub
cld
xor
shlb
dec
adc
cmp
sub
fidivrl
decb
lea
roll
xchg
sub
aam
xchg
jnp
pusha
lahf
xorb
scas
cmp
adc
mov
int
lret
dec
mov
xchg
pushf
mov
jg
mov
out
and
mov
outsl
insb
mov
into
dec
cli
adc
add
inc
cmp
cld
loopne
mov
insl
jl
mov
add
jno
fwait
inc
idivb
scas
add
add
int3
or
mov
stc
test
insb
fsubrs
mov
xchg
push
int3
mov
add
in
js
sub
in
mov
mov
add
or
pop
sbb
mov
mov
push
jb
leave
pushf
mov
lock
xchg
jae
movsb
jmp
pop
jmp
lods
sbb
jo
cmpsl
pop
loopne
imull
add
or
lds
xchg
xor
push
jno
cmp
ret
repnz
lcall
dec
mov
jp
sarl
mov
popf
sbb
shll
and
sahf
ds
cmp
rorl
jo
inc
in
int3
in
ja
ds
arpl
ljmp
insl
xor
cli
adc
sti
cld
or
cltd
addr16
xor
mov
jnp
inc
mov
fucomp
popa
pop
out
jae
sub
mov
xchg
lock
rol
inc
add
sti
cli
push
inc
jle
xchg
cmpsl
inc
xor
xor
cmp
sub
push
decl
rcll
scas
addr16
cld
mov
pop
mov
adc
insb
push
jae
jle
adc
pop
ljmp
xor
jl
cld
pop
scas
mov
fs
xchg
ss
jge
fisttps
imul
aas
jecxz
repz
mov
mov
adc
sub
outsl
xchg
pushf
add
mov
jge
fnstenv
jb
jecxz
test
xchg
inc
rcr
loopne
movsb
push
enter
andb
inc
mov
xchg
mov
fcomps
pop
pop
fildl
or
adc
imul
xchg
pop
hlt
orl
repz
sub
idiv
arpl
jns
sbb
fnstsw
fisttpll
clc
jne
sbbb
fs
xorb
cmp
cltd
xchg
daa
push
bound
xchg
xchg
lret
rorb
pushf
outsl
repnz
cmc
xchg
repz
mov
ja
adc
not
jmp
inc
dec
xor
out
sub
cmp
mov
mov
popa
or
fldcw
out
call
incl
outsb
je
jp
mov
fistps
jae
cltd
aas
and
xor
pop
jl
mov
fdivrl
jmp
mov
pop
rol
aaa
jmp
adc
push
mov
inc
movsl
icebp
push
ja
cmp
ret
mov
movsb
xor
loop
fs
dec
xchg
mov
int3
pop
jg
adc
fcoms
test
insb
in
cmc
jno
call
xchg
pop
out
outsb
clc
sbb
mov
rclb
push
outsl
out
push
jno
lds
or
insb
cmp
je
fiadds
xorb
xchg
xchg
out
dec
cld
in
pop
nop
jb
pop
fcmovb
jge
movsb
jo
iret
je
jge
xor
and
popf
gs
cmpsb
push
lea
inc
imul
jl
cmp
xor
out
mov
mov
push
adc
decb
mov
xchg
mov
in
jno
push
insb
ret
push
adc
sub
mov
push
imul
xchg
ljmp
push
xchg
iret
jge
stc
aas
sub
fwait
scas
adc
push
and
mov
in
fmull
cmp
adc
mov
jo
aas
xchg
jns
loop
mov
bound
pop
loope
lds
loopne
inc
jle
push
sub
mov
je
fdivrp
pop
dec
jnp
mov
xor
sbb
push
in
lds
stos
adc
add
pop
dec
cli
push
jno
loopne
cmpsb
fstpl
sbb
cmpl
daa
cmp
jle
xor
out
lods
mov
xchg
push
mov
rcr
pusha
xchg
inc
sahf
fs
sahf
inc
aas
popa
dec
xchg
jo
sbb
and
popa
or
lret
arpl
xor
push
ss
rcll
mov
fsubs
xor
or
add
add
mov
push
pop
rol
add
out
roll
dec
addr16
add
mov
insb
data16
jbe
cmp
mov
sbb
cmp
jp
push
insl
mov
pop
out
add
lret
aaa
mov
adc
adc
cmp
jmp
movsl
sbb
bound
sahf
lcall
jp
cmp
pop
scas
lods
aaa
and
cld
fimull
xlat
pop
scas
out
test
push
or
jno
or
fwait
popa
sbb
cwtl
adc
jle
mov
mov
packsswb
xor
jge
shll
data16
repz
lods
addl
cld
rclb
ss
das
mov
jo
in
je
inc
adc
and
push
pop
mov
pop
jmp
and
xor
cli
mov
jnp
mov
push
sahf
or
add
aam
mov
or
es
mov
dec
out
ljmp
inc
stos
jb
rol
sub
loop
and
dec
push
mov
mov
cmp
mov
or
test
sarl
push
outsb
movsl
pusha
rclb
pop
les
and
popa
cwtl
jb,pt
mov
mov
add
das
jb
loope
fcmovnu
push
in
in
jno
add
mul
cmp
sub
cmp
dec
jg
cmp
mov
jb
mov
mov
sarb
aas
addl
and
mov
xorb
outsb
xor
movsl
push
jmp
mov
push
or
mov
and
xor
negl
push
xor
fucomi
clc
xlat
dec
mov
fwait
lea
dec
xchg
xor
xlat
daa
sub
mov
int3
push
mov
xor
mov
mov
mov
in
sbb
pop
stc
pop
imul
jbe
js
mov
mov
and
inc
sahf
jle
pop
and
jbe
icebp
hlt
mov
push
sub
aad
add
popa
test
out
mov
or
popa
xchg
mov
cmc
sbb
dec
push
adcl
in
imul
jne
scas
lods
add
add
xor
test
loopne
or
xchg
mov
mov
push
test
push
mov
jae
cwtl
fisubs
dec
mov
test
mov
pop
xlat
loop
cmp
js
iret
sub
xchg
jl
outsb
mov
stc
push
and
int3
xlat
jbe
or
scas
push
movsb
cltd
cmp
adcb
in
arpl
divb
ljmp
pop
push
mov
sbb
mov
aad
sub
insl
popa
inc
sbb
imul
mov
repz
or
pop
add
sbb
in
cmpsb
into
mov
jo
dec
or
cmp
fmull
mov
push
gs
sub
fs
addl
inc
pop
mov
xor
js
shlb
push
mov
push
pop
cmp
inc
or
sbb
inc
loope
xor
xchg
ljmp
push
jnp
push
stos
jmp
jae
cmp
cwtl
push
out
or
dec
xor
xchg
lods
popf
pop
cmp
or
xchg
add
sahf
sub
fs
cmp
push
xchg
fdivl
cmp
js
sub
mov
mov
lods
lahf
jmp
jp
or
adc
daa
or
lcall
inc
pushf
mov
in
aaa
mulb
inc
ja
fwait
leave
rolb
rorl
in
enter
lret
stos
or
add
cld
jp
or
sti
loop
jno
out
stos
es
mov
pop
pop
pop
dec
sti
into
or
ret
movsb
dec
and
xchg
mov
add
insb
dec
lods
jne
imul
add
pop
stos
push
lock
movsb
iret
stos
cmp
sbb
cmpsb
sti
jns
push
jns
popf
lods
add
push
out
mov
es
jge
xchg
movsb
xchg
adc
scas
xor
je
dec
stos
mov
std
aas
test
xlat
push
mov
mov
fdivrs
push
movsl
imul
jnp
sub
or
pop
stc
es
je
daa
or
and
adc
add
loope
or
outsl
dec
sbb
ljmp
cmp
or
mov
bound
cmp
fs
ret
or
sbb
mov
dec
and
dec
xchg
xlat
pusha
repz
ljmp
or
xor
idivb
inc
inc
xor
leave
push
stos
mov
andl
hlt
ds
dec
lea
cmpl
lds
daa
mov
lock
lock
or
xor
bnd
enter
xorb
mov
jg
inc
mov
repz
les
or
xchg
push
push
iret
loop
jo
or
test
sbb
jl
movsb
push
jae
xor
cmc
ret
adc
jae
xor
movsl
xchg
addl
addr16
lods
xor
dec
sar
push
into
loopne
scas
and
ret
mov
jle
addr16
xorb
imul
adc
jle
fimuls
push
fdivl
mov
jp
jno
inc
jo
lret
in
cs
mov
xchg
in
mov
jnp
push
loopne
jns
or
movsl
sahf
cltd
fnstsw
test
stos
jo
sub
daa
jp
xor
imul
adc
and
push
das
rcl
jge
sti
rorl
mov
stos
adc
aam
pop
fisubs
inc
lock
lcall
mov
jle
nop
inc
pop
loopne
xchg
mov
lcall
lcall
test
in
xchg
mov
mov
inc
xchg
push
popl
xor
imul
shlb
sti
add
inc
push
mov
stos
sub
sti
fiadds
adc
cmp
mov
cwtl
inc
pop
xchg
mov
pop
jno
push
jecxz
sub
lcall
dec
push
iret
negl
sbb
inc
xor
paddq
sbb
inc
inc
mov
and
movsl
lret
hlt
or
cwtl
cltd
mov
mov
loop
fisttpll
outsl
icebp
or
cmp
cmpb
jbe
rcll
gs
mov
dec
ljmp
or
cmp
xchg
int
and
xchg
shrb
lret
out
adcl
into
aaa
pusha
sub
jle
imul
mov
loop
pop
lret
fwait
sbb
xchg
cmp
mov
push
add
pusha
mov
or
add
sbb
cli
fmull
cmp
movsb
mov
mov
gs
xchg
xchg
fs
mov
movsl
outsb
loope
dec
and
mov
or
mov
int
lea
icebp
pop
sarb
mov
fwait
jb
add
inc
xlat
cmpsb
jb
cmc
loopne
mov
cmpsl
leave
add
push
popa
mov
add
jb
inc
inc
rclb
pushf
out
shlb
jne
dec
sub
inc
fstl
fmuls
adc
jg
pop
enter
aad
dec
ror
adc
ret
add
xchg
sbb
les
push
xchg
sub
jae
out
push
out
je
push
mov
add
jo
pusha
or
cmp
inc
jno
je
outsb
shll
ds
out
push
dec
add
test
pop
cmc
mov
es
lahf
insl
neg
push
les
imull
xchg
add
sti
and
ljmp
sub
out
mov
pusha
ret
lcall
and
xchg
add
jbe
cmp
pop
andb
add
popf
dec
jg
pop
pop
and
or
and
aas
dec
lods
and
sub
xor
push
and
test
mov
shlb
je
lods
test
jbe
test
fsub
jg
push
lock
lods
mov
daa
loop
push
lret
jne
and
fcoms
push
popf
sbb
loop
and
imul
jl
sarb
xchg
sub
shll
fsts
and
or
xor
out
lods
sub
decl
testl
popf
jno
push
push
xchg
dec
nop
cmp
outsb
pop
xchg
movsb
iret
fdivl
mov
scas
cmp
lea
shr
pushf
sub
mov
jmp
mov
mov
add
xorl
pop
call
sub
mov
sub
inc
xor
fsubl
aas
dec
ss
and
cmp
xor
cmp
icebp
xchg
ffreep
jne
jge
jl
test
cli
dec
push
sbb
ret
std
or
xchg
dec
inc
sbb
int3
shlb
imul
xchg
mov
out
lea
inc
ficoml
call
xor
or
in
sub
int3
loop
nop
cmc
cmpsb
ljmp
or
into
push
pushf
loopew
push
cmp
push
out
lods
pop
in
jbe
fisttpl
xor
cmp
daa
adc
mov
sbb
das
cmp
repnz
in
dec
into
jnp
out
inc
pop
aad
jb
add
gs
pushf
popa
adc
movsl
xor
clc
mov
add
or
negl
clc
pop
push
xor
fsubrs
sysret
push
enter
push
xchg
mov
shlb
insl
xchg
fdivs
xchg
and
mov
xchg
test
call
data16
movsb
pop
scas
ficoms
jmp
sbb
mov
sub
push
inc
dec
call
fwait
rclb
dec
dec
xor
scas
dec
pop
inc
inc
jne
jne
cmp
jae
test
xor
sub
leave
repnz
aaa
adc
jne
in
incb
js
leave
dec
push
add
loopne
mov
gs
sub
xor
xor
icebp
ret
xor
in
push
push
clc
mov
jno
ja
orb
mov
test
push
jno
sbb
jg
insb
outsb
jae
push
loop
fs
push
mov
add
inc
cmpsl
push
mov
fnsave
loope
lret
cmc
add
jge
mov
bound
sub
jg
pop
cli
inc
lods
lahf
fiaddl
mul
dec
mov
loop
or
mov
jecxz
movsb
mov
dec
cmp
lahf
jl
out
cmp
jns
add
dec
fidivl
sub
mov
rep
xor
dec
adc
cwtl
repz
sahf
jno
rolb
jae
andl
outsb
pop
xchg
cltd
movsl
sub
mov
xchg
lcall
cmp
sub
add
xchg
in
fisubl
push
xchg
call
mov
mov
idivl
dec
imul
xor
xchg
pop
ficoml
pop
mov
pop
fs
cwtl
pop
sarb
cmpsb
mov
jno
add
push
std
pop
lea
pusha
add
jns
aad
nop
fs
shlb
adc
dec
mov
clc
and
adc
push
sbb
fstpt
push
shll
xchg
jecxz
insl
jae
fimuls
jmp
or
das
out
repnz
xchg
outsl
and
add
xchg
cwtl
lahf
bound
xchg
xchg
leave
shlb
test
aam
out
fwait
out
or
mov
out
shl
xorl
mov
or
sahf
lret
sub
cld
adcb
outsl
pop
mov
add
or
and
pop
jl
fcompl
push
mov
outsl
ss
dec
xchg
pusha
mov
add
test
movl
mov
cmp
jmp
cwtl
sbb
cld
ja
lods
dec
xor
jp
push
dec
push
xorl
cmp
mov
shl
mov
iret
shrl
dec
aaa
mov
pop
mov
jnp
sbb
jle
int
xchg
jl
mov
cld
icebp
push
push
outsl
in
lret
out
cs
mov
aas
xchg
mov
push
or
movsl
inc
or
lret
or
outsb
pusha
cmpsb
add
jb
arpl
dec
in
leave
xchg
insl
pop
movsb
out
jns
sub
adc
sbb
xor
or
enter
mov
jecxz,pn
sub
xor
jnp
lcall
and
aaa
add
mov
aas
add
gs
hlt
xchg
adc
cmp
mov
mov
add
pop
mov
mov
xchg
sub
fwait
push
cmpsb
push
stos
sbb
repnz
lret
fnsave
ljmp
sar
or
in
mov
bound
push
mov
pop
cmp
bound
cli
sbb
xor
dec
movsl
in
movsb
movsb
cltd
and
xlat
push
pusha
xchg
dec
jge
lret
mov
rcrb
xchg
sub
jmp
daa
mov
shll
push
mov
das
pusha
or
out
push
cmpsb
mov
sub
inc
cld
repnz
hlt
fmuls
mov
cmp
lods
insb
inc
mov
cmp
icebp
test
insb
je
inc
call
dec
outsl
push
shr
negb
pop
fldt
and
std
lds
popa
pusha
fcomp
and
dec
sbb
inc
mov
adc
aad
nop
js
or
mov
mov
adc
enter
or
sti
out
aad
imul
hlt
push
push
daa
push
in
inc
mov
arpl
insl
pop
iret
lds
clc
fisttpl
arpl
lock
stos
jmp
mov
xor
jno
inc
xor
dec
mov
xchg
mov
adc
outsl
cmp
pop
enter
or
sbb
and
sub
pop
repnz
pusha
mov
sub
inc
or
and
aam
arpl
sarl
add
push
outsl
dec
jecxz
add
loope
cwtl
arpl
ljmp
xorl
add
decl
mov
fmull
mov
sbbb
in
ret
mov
jmp
into
test
xchg
aaa
and
jecxz
mov
jo
push
or
nop
xor
push
loopne
ss
jl
xchg
add
negb
mov
jecxz
xchg
arpl
iret
mov
insl
mov
xor
out
add
std
or
cltd
jecxz
lahf
bound
cmp
sbb
cltd
cmp
lahf
or
xchg
fisubl
test
out
push
sbb
and
daa
adcb
outsb
stos
mov
dec
jge
das
pop
fsubp
popa
push
repz
mov
dec
mov
mov
fs
lahf
cmp
ret
mov
addr16
sub
adc
sbbl
push
xlat
testb
cmp
xchg
adc
or
add
test
push
pop
aad
dec
out
dec
dec
enter
mov
mov
pop
decl
fstpl
mov
sbb
mov
and
je
repnz
jo
inc
mov
inc
add
jecxz
mov
sbb
shrl
xchg
imul
into
int3
mov
lcall
rorb
sub
push
xchg
push
mov
loopw
mov
mov
stos
add
sbb
lret
mov
push
lret
lods
jge
xlat
loope
stc
sar
jb
push
dec
sahf
insb
cmp
hlt
pop
add
outsb
xor
mov
cmpsb
sub
push
dec
pop
or
jo
and
in
and
xor
daa
jnp
fadd
adcl
sbb
test
push
out
test
push
ret
scas
ds
inc
add
cmc
cmp
cmpsl
sub
enter
or
and
jns
in
in
je
jp
and
add
or
add
push
repnz
int
pop
ret
test
xchg
xchg
loop
or
popf
xor
rorb
add
shll
push
daa
cmp
in
xchg
inc
das
xchg
mov
lahf
xor
inc
std
xor
bound
stc
xchg
aas
dec
and
cli
xor
mov
pop
mov
ds
inc
inc
mov
push
aas
xor
pop
or
xchg
dec
dec
mov
fidivs
pop
jg
aaa
in
sbb
pop
lds
inc
rclb
push
pop
pop
mov
cmp
roll
jno
add
cltd
int
pop
push
or
cmpsl
push
xchg
rcrb
subl
out
mov
inc
scas
mov
xchg
popa
jmp
cmp
iret
and
es
xlat
out
aas
ljmp
sbb
test
ror
inc
mov
jl
fcomip
sbb
dec
loope
dec
mov
mov
int
jnp
insl
test
cmpb
mov
sbb
js
add
xchg
xor
aam
cmp
xlat
xchg
adc
or
dec
xchg
inc
cmp
enter
addb
or
xchg
adc
test
push
test
fldt
inc
xchg
mov
ljmp
cmc
and
cmp
hlt
push
sti
aaa
mov
ret
xchg
sbb
test
stc
lea
inc
and
add
negl
mov
test
imul
or
adc
inc
push
mov
sbb
mov
fstl
xchg
mov
jns
cmp
hlt
ds
movsb
mov
jns
inc
jns
mov
cmp
mov
xchg
push
outsl
pop
or
int3
or
xor
nop
mov
pop
rcll
fwait
into
cwtl
mov
jno
stos
inc
hlt
inc
or
mov
nop
push
sbb
int
xchg
ret
and
in
fstl
push
adcl
jg
clc
mov
jne
adc
sbb
arpl
out
fmul
mov
popf
stc
cmp
adc
pop
loope
mov
pop
cmp
jae
hlt
sbb
jge
sub
jle
ret
add
cmp
push
and
xchg
cltd
out
xchg
lahf
dec
sbb
adc
xchg
test
ljmp
jno
push
cli
or
mov
dec
xor
pushf
jl
imul
cmp
pop
dec
pop
push
ljmp
aam
push
sti
ja
pop
outsb
mov
jle
sbb
test
dec
shrl
add
jne
mov
test
sub
jns
xchg
aaa
pop
outsb
das
sahf
into
leave
ror
ds
cmp
or
ds
cmp
jmp
cltd
mov
jge
repnz
or
sbb
jmp
shll
and
and
add
cmc
push
xchg
subl
xchg
out
ljmp
popa
ss
aad
push
inc
aaa
xor
cli
lret
ds
xchg
popf
mov
daa
jno
cmp
enter
lods
es
int3
and
loope
into
jg
loope
lea
outsb
sub
mov
addr16
clc
push
mov
xorl
ror
cmpsl
xchg
cmpl
test
outsb
fs
jecxz
adc
icebp
rorb
adcl
sub
call
std
push
jo
pop
dec
and
int3
xchg
lods
loopne
lea
or
jno
shll
xchg
cmp
add
int3
dec
cmp
pop
sub
xchg
mov
insl
and
in
jns
cld
push
adc
popa
lea
sbb
loopne
out
push
mov
mov
and
insb
clc
cmp
out
adc
shlb
sti
and
sti
idivb
popf
sbb
pusha
imul
out
mov
jmp
and
xor
cld
mov
push
xor
mov
jne
cli
push
push
outsl
add
or
push
push
aaa
inc
jb
in
dec
sbb
pop
lds
mov
fcom
mov
jb
pop
cmpsl
out
ja
movsl
int
sar
decb
out
mov
add
mov
mov
aas
dec
aam
bound
or
mov
shrl
add
idivl
or
in
ja
cmp
movsl
dec
in
pop
pop
leave
sub
inc
xchg
aam
xchg
add
pusha
sbb
or
add
xchg
dec
mov
aad
cwtl
xor
xlat
fs
mov
pop
push
lea
outsl
fnstenv
adc
cmp
outsl
or
imul
or
into
xor
mov
mov
cs
mov
xorb
mov
fsubl
int
sbb
adc
and
daa
xchg
xor
mov
xchg
jle
mov
aad
dec
fidivs
pop
inc
dec
lock
mov
push
xor
xchg
xor
and
lods
add
sub
pop
xchg
loop
out
lret
enter
aas
add
xchg
sub
test
xor
inc
lcall
xchg
jbe,pt
outsl
jne
mov
dec
cli
and
mov
dec
inc
cmpsl
scas
cmp
mov
jl
sub
sarl
cld
mov
out
push
add
jle
adc
push
std
and
loopne
mov
sub
adc
pop
fcmovb
loop
cltd
xchg
aas
loop
mov
sub
jg
and
xchg
shrl
in
xchg
mov
subl
inc
inc
movsl
je
xlat
cwtl
add
popf
mov
or
adc
pop
mov
test
in
cmpb
std
negl
lods
mov
std
jb
xchg
je
pop
add
jp,pn
movl
fidivrs
test
fimull
js
unpckhps
aaa
iret
or
rcr
jge
aam
push
dec
or
and
or
push
divl
and
sub
addr16
pop
push
loopne
jl
lods
fsub
push
rorl
adc
add
push
sub
insb
or
ds
jle
xchg
push
daa
pop
mov
loope
xchg
lcall
cmc
jp
cmp
sbb
adc
bound
outsb
sub
mov
fbstp
cli
int3
js
add
inc
arpl
enter
or
ss
pushf
nop
iret
sti
movsb
or
inc
movsl
xchg
mov
aad
and
push
shrb
fldenv
and
add
icebp
sbb
adc
in
mov
stos
and
jmp
scas
sbb
dec
sti
push
jae,pn
daa
rorb
leave
es
aaa
test
mov
sbb
inc
xchg
shl
cmpsb
mov
ljmp
sub
sbb
fisubs
mov
fsubrl
out
xorl
push
adcb
and
pop
notl
push
dec
loope
push
out
imull
xchg
sbb
js
dec
outsb
out
inc
xor
inc
mov
and
std
jns
cli
and
and
sub
xchg
pusha
push
lock
or
pop
popa
cli
enter
test
popf
std
mov
adc
jae
fnclex
mov
cmp
rclb
cmp
fsubs
adc
inc
sbb
mov
icebp
push
add
xchg
adc
call
andl
mov
xchg
xor
push
inc
cmpsl
adc
outsb
xor
aas
jbe
imul
loop
push
lock
xchg
call
dec
and
mov
adc
lds
faddl
test
cmp
mov
mov
push
add
xchg
adc
lds
test
roll
dec
cmp
ret
aad
inc
push
call
movsb
mov
popa
push
cwtl
fwait
jmp
outsb
mov
lods
jne
or
in
popa
mov
push
call
push
pop
jns
xlat
mov
ds
mov
sub
mov
imul
sub
ret
xchg
idivl
imul
mov
outsl
add
mov
pushl
outsl
int3
das
aad
pop
inc
jp
xchg
cli
xchg
insl
mov
push
imul
lods
mov
xor
xchg
pop
xlat
in
fucom
mov
and
inc
test
rcr
xor
aad
aam
fsub
mov
imul
xchg
in
pop
int3
xchg
shlb
jecxz
fwait
push
adcl
inc
sub
cld
sub
mov
into
adc
hlt
adc
imul
mov
xor
fnsave
sub
mov
in
push
mov
add
loope
xlat
loop
xchg
ret
gs
mov
ss
pop
repz
jae
sbb
stos
dec
xchg
ficoml
pushf
xchg
insb
cmp
aad
nop
xor
jne
stos
add
lret
aas
mov
test
jg
push
sub
xchg
jno
test
jae
out
loopne
pop
cmp
into
fsubrl
or
push
pop
lahf
loop
mov
filds
js
in
mov
and
in
mov
xchg
in
sbb
dec
out
jl
push
cmp
or
cmp
dec
push
adc
mov
mov
pop
lret
repnz
popf
outsl
jns
push
cmpsl
out
in
testl
popf
xchg
fiadds
adc
push
push
adc
pop
loop
dec
push
jle
add
mov
fstp
and
xchg
movsl
decl
cmpsb
popf
popf
xor
gs
and
rolb
or
mov
or
xchg
cmp
adc
sarl
mov
sbb
pop
push
inc
inc
shrb
or
mov
jecxz
xor
cmp
sbb
icebp
mov
adc
scas
xchg
inc
rcrl
xchg
cmpsl
jmp
push
sub
leave
push
mov
ss
in
stos
mov
mov
mov
scas
push
jmp
push
adc
sub
mov
clc
loopne
cli
push
ret
insl
push
cmpsl
pop
lods
in
test
fcompl
test
push
sub
push
or
subl
lds
adc
cwtl
dec
mov
inc
ljmp
sub
push
loope
and
adc
add
mov
sub
pop
inc
dec
pop
mov
push
aas
outsl
mov
sbb
sbb
mov
test
adc
mov
sbb
test
mov
outsb
push
stos
in
jb
inc
and
push
cmp
inc
dec
fnstenv
xchg
imul
out
out
or
stc
xor
xchg
fs
jns
or
adc
or
inc
cwtl
pushf
inc
cs
mov
int3
dec
aas
gs
cwtl
loop
mov
xor
nop
insl
mov
jo
rcrb
jns
mov
xchg
mov
adc
stos
rcrl
sbb
inc
out
data16
addr16
adc
pop
ret
fdivr
xchg
and
icebp
push
iret
mov
mov
int3
stos
pop
test
shrb
push
sub
loopne
xchg
pusha
mov
jmp
cs
insl
xchg
mov
icebp
mov
pop
fildl
pop
sahf
add
das
jl
lock
or
scas
lods
push
ss
pop
lods
daa
or
in
jp
add
ljmp
lea
pop
mov
inc
cmc
js
cmp
out
das
rorl
aaa
filds
lds
jnp
stos
imul
sti
inc
call
fimuls
cld
jnp
push
stos
cmp
pop
xchg
mov
sbb
add
cmp
inc
stos
jno
dec
fdivs
jmp
dec
sbb
sbb
sub
and
mov
sub
adc
push
ja
pop
mov
ljmp
sbb
mov
jb
jl
adc
pop
or
stos
ret
or
cmp
xor
cmp
shrl
in
dec
out
jae
mov
mov
pop
out
mov
repz
cli
add
dec
mov
outsb
or
aas
dec
das
ficoml
jge
fs
daa
sbb
outsb
dec
jge
test
mov
or
movsb
and
js
and
gs
push
jae
or
xchg
jnp
bound
pop
sbb
jp
out
shll
fdivp
test
aaa
jnp
jle
push
add
cli
cmpsb
je
push
inc
mov
dec
ja
push
jmp
jnp
xchg
xchg
mov
cltd
addl
rcll
sahf
add
cmp
mov
shlb
test
pop
out
leave
mov
or
movsl
lret
ret
pop
sub
push
xorl
sti
das
jmp
pop
pop
mov
dec
inc
pop
dec
mov
or
adc
addl
out
not
js
sar
jp
stc
iret
jp
and
lret
pop
and
push
cwtl
push
fucom
inc
pop
inc
popa
xchg
sub
nop
int3
or
dec
inc
jns
outsl
imull
into
fldl
stos
adc
lock
jns
sbb
lret
ljmp
inc
je
mov
and
push
xchg
push
xlat
shlb
inc
imul
sub
insl
aad
out
jne
cmpsb
mov
out
sbb
xorb
mov
jb
mov
imul
call
mov
lcall
nop
mov
rorl
lock
je
scas
push
xchg
out
int
rcl
xchg
pop
jmp
in
in
sub
cmp
scas
mov
test
rcr
fcomip
xchg
mov
jg
js
xchg
lahf
jmp
pushf
pop
clc
test
test
push
in
xor
mov
push
sahf
push
jne
add
insl
test
push
pop
pop
add
movsl
sbb
lcall
scas
inc
out
xor
aaa
aaa
lods
lahf
add
xchg
repz
mov
xlat
jmp
insl
cmpsb
mov
push
out
sbb
push
ljmp
int3
adc
movsb
xor
fdiv
lret
rcrb
xor
add
xor
push
adc
jnp
jg
sti
and
into
push
outsb
mov
cmp
mov
xchg
test
icebp
jns
js
outsb
subb
dec
mov
shl
jmp
cmp
sbb
cwtl
xchg
ds
pop
add
dec
xor
dec
loop
push
and
lea
sub
clc
lret
xor
lds
mov
enter
jecxz
mov
xor
adc
xchg
xchg
test
stc
pop
jle
inc
ljmp
mov
jp
cli
aam
rorl
xchg
cmp
fsubs
dec
sub
lahf
mov
sahf
jnp
sbb
adc
dec
mov
cmpsl
popl
out
adc
push
test
arpl
add
ds
pushf
lret
inc
popa
leave
or
outsl
std
popf
add
rclb
adc
xor
jl
sbbb
stc
dec
sar
popa
stos
sbb
sub
dec
mov
les
mov
pop
jmp
mov
shll
lret
ret
pop
lods
out
cmp
lret
imul
popa
xchg
out
mov
aad
xchg
es
jge
mov
les
negb
std
push
lcall
fs
in
adcb
stos
fs
pop
jl
lret
adc
out
loop
or
jae
pop
xchg
jnp
pop
push
jbe
sub
out
ljmp
and
add
in
jbe
jle
fsubs
dec
xchg
xlat
sbb
jb
loop
in
shlb
pop
pop
or
mov
mov
test
jmp
imul
aas
jp
outsb
jle
movsb
mov
dec
lret
sbb
jmp
xor
inc
lea
push
pop
cmp
insb
iret
sarb
xchg
out
js
aad
cmp
mov
mov
call
mov
pop
movsl
mov
sub
lret
leave
ljmp
mov
xchg
cld
lods
sahf
jo
dec
into
ret
inc
arpl
and
or
jmp
xchg
inc
aaa
mov
sub
xchg
cld
inc
mov
cwtl
xlat
mov
add
jge
dec
and
xchg
jmp
lds
lods
enter
rorl
popa
dec
fwait
pop
fcmovne
rcrb
push
lods
sub
idivl
lcall
into
or
inc
loope
hlt
jl
movsl
leave
xchg
je
std
data16
and
jb
mov
roll
mov
add
sahf
mov
jl
loop
gs
xchg
arpl
sub
adc
jno
aas
lahf
jnp
sti
sbb
insl
movsb
xchg
fxch
ljmp
fs
push
sub
adc
aas
sbb
jp
add
mull
push
sbb
add
bound
fisubs
jl
stos
jne
cmc
cwtl
adc
out
rcr
xchg
cmc
add
xchg
das
jmp
pop
ss
nop
jb
push
sbb
mov
mov
mov
or
movsb
jno
inc
xlat
adc
lods
aaa
lds
mov
ret
sub
or
dec
rol
push
add
inc
cmp
pop
imul
or
mov
lock
adc
leave
mov
int
arpl
add
jae
out
jns
fcmovbe
pop
dec
mov
mov
cmpsb
mov
jmp
and
es
cwtl
outsb
adcl
leave
dec
mov
xor
inc
inc
iret
popf
jnp
or
push
cmp
pop
jb
leave
outsb
out
or
sbb
jg
in
aaa
mov
mov
imul
outsb
pop
sbb
pop
les
sbb
pop
xor
out
mov
mov
push
dec
xchg
pop
xchg
stc
add
addr16
jl
jle
mov
adc
hlt
daa
shlb
jns
push
pop
sub
dec
divl
xchg
push
jp
outsb
push
aam
out
cmp
push
ret
icebp
into
sar
inc
xchg
repnz
popl
mov
out
and
sub
lock
xor
jo
dec
pop
and
pop
sti
xchg
jb
mov
fstpt
jecxz
push
sbb
mov
mov
cmpsb
push
stc
daa
jo
sub
stos
dec
pop
fs
mov
dec
push
jmp
inc
jle
sbb
rcrl
jbe
dec
dec
ljmp
fwait
mov
push
jae
fcmovne
mov
out
xorl
dec
mov
cmpsb
push
dec
mov
fistps
mov
add
sub
xlat
jb
movsl
enter
rorb
ficomps
inc
adc
hlt
fcmovnu
mov
fldl
jns
add
mov
in
lahf
mov
loope
pop
mov
jge
mov
mov
loope
fdivrs
lods
lods
dec
clc
xchg
inc
test
pop
stos
cltd
nop
out
lea
test
mov
pop
mov
lea
xchg
je
dec
adc
adc
ljmp
mov
das
hlt
mov
mov
std
mov
cs
or
fwait
xchg
jnp
push
negl
push
arpl
jo
out
mov
cld
jge
inc
adc
pusha
enter
int
xor
sbb
pop
pop
mov
fcoml
int3
or
cmc
pop
jnp
outsb
push
push
mov
mov
aas
mov
in
push
sbb
sub
dec
test
lds
mov
mov
test
sahf
pop
dec
int3
pop
pop
iret
sub
ret
or
mov
stos
xchg
cld
dec
dec
xchg
mov
mov
mov
or
sbb
xor
scas
sbb
pusha
cld
cmp
xchg
or
push
adc
es
or
sbb
leave
ja
shrb
fnstcw
shlb
std
cltd
mov
je
int3
mov
mov
dec
lahf
test
out
mov
mov
lods
sub
jmp
add
and
inc
xchg
int
lahf
in
jge
cmp
out
sbb
inc
push
js
jbe
cmp
lret
xor
stc
mov
push
xchg
jl
mov
pop
stos
in
dec
mov
jp
xchg
fiadds
add
bnd
add
mov
pop
dec
pop
fiadds
sub
test
in
aad
popa
and
push
pop
adcb
js
popf
jo
adc
and
popa
inc
push
js
pop
mov
pop
xchg
sbb
lods
lret
mov
push
dec
aaa
leave
insl
add
mov
inc
inc
sub
mov
imul
mov
adc
add
mov
push
stos
scas
out
jnp
cmpsb
ret
cld
xor
nop
mov
pushl
sub
loopne
loopne
adc
sbb
pop
and
shlb
cmp
frstor
icebp
cmp
inc
push
int
sub
test
or
aaa
cltd
jne
and
lea
fdecstp
mov
and
adc
mov
filds
mov
stos
or
pop
cld
mov
into
xchg
stos
arpl
xchg
popf
cli
jmp
mov
push
mov
mov
cmp
mov
stos
inc
or
push
jo
sar
data16
aaa
popf
adc
inc
add
test
test
lret
dec
xor
jae
lods
jne
inc
nop
test
inc
lods
pop
imul
dec
lods
aad
jg
popf
aaa
mov
insl
popa
push
inc
sub
inc
jmp
mov
xor
sbb
cmp
jg
daa
pushf
aad
push
inc
xchg
cmp
lcall
inc
push
mov
call
xor
pushf
test
es
rcl
push
mov
mov
jecxz
aas
cs
movsb
push
fwait
add
enter
push
dec
jmp
imul
and
add
inc
add
xor
pop
jns
add
cmp
subb
std
mov
add
mov
popf
add
push
mov
push
push
xor
jg
add
scas
scas
fwait
out
stos
fsubs
or
rclb
gs
inc
frstor
enter
pop
or
cmp
lahf
push
push
data16
inc
les
mov
jb
mov
pop
mov
aas
aad
ja
dec
or
add
lods
mov
into
fwait
scas
repnz
movsb
cld
xor
pop
les
adc
pop
roll
mov
int
inc
xor
sarb
pop
loopne
sub
and
jl
add
inc
cmp
add
xchg
lret
data16
test
pop
dec
test
or
int
ret
mov
stos
bound
ljmp
jmp
cmp
dec
int
in
out
fwait
cmp
popa
popf
pop
fwait
mov
scas
mov
adc
pop
mov
pop
dec
pop
push
in
ret
sbb
cltd
mov
push
in
sbbl
jbe
pop
mov
nop
or
loope
out
adc
jns
out
and
shl
push
sub
jo
pop
rcrb
rorb
or
fcoms
fs
push
adc
push
clc
out
loope
or
fcomip
cltd
hlt
xchg
xor
pop
mov
pop
push
cltd
dec
mov
outsb
enter
bound
xchg
cmpsl
mov
int3
fwait
or
into
cmp
sub
inc
and
lret
push
jo
mov
xchg
dec
pushf
pop
sbb
jle
fdivr
xchg
adc
dec
push
mov
fs
jp
ja
int3
push
push
insb
xchg
sbb
pop
int
xor
push
sub
mov
cmpsb
test
or
add
sbb
je
mov
sub
aam
xchg
pop
cmp
ljmp
fpatan
xchg
cmp
push
xchg
add
lea
in
test
jnp
insb
outsb
orb
push
mov
gs
and
test
and
and
xlat
lea
jno
dec
out
pop
xchg
push
pop
or
and
test
pusha
enter
mov
mov
pop
lock
fwait
aad
jl
pop
lods
mov
mov
flds
loopne
jb
inc
mov
call
nop
pusha
hlt
lds
mov
mov
add
mov
and
in
adc
scas
imul
mov
inc
xor
sub
cmp
pusha
ret
xor
add
dec
cld
stos
mov
and
jmp
mov
add
movsb
xchg
cmpsb
push
insb
xchg
bnd
out
xlat
dec
sbb
adc
and
pop
out
cmc
fs
push
pop
jl
mov
in
cli
add
lock
cmp
adc
and
clc
cmp
out
pop
mov
and
mov
mov
out
ljmp
jo
aaa
cmpsb
pop
insb
out
or
movsl
mov
mov
ja
dec
test
dec
ret
or
dec
int
nop
or
mov
test
sub
push
mov
jp
sbb
mov
add
mov
jl
sub
ss
adc
cmp
scas
push
xchg
sahf
cli
and
dec
xchg
mov
mov
pop
rclb
pop
adc
xchg
push
es
lcall
pop
out
cmpsb
enter
andb
inc
jge
or
fcmovb
mov
jb
mov
inc
and
xor
fsts
mov
ja
mulb
sub
sub
test
jnp
pop
loopne
push
pop
add
mov
inc
ja
jns
pop
mov
add
adc
ficompl
lret
pop
push
cmp
inc
aam
jnp
lret
insl
cmp
push
sbb
daa
add
bswap
pop
rclb
arpl
not
push
jl
in
in
push
push
jns
push
mov
jnp
push
in
and
fwait
aam
shll
leave
cmp
jns
or
into
stos
fmuls
inc
jge
mov
enter
add
and
lea
int3
xchg
faddl
mov
mov
adc
xchg
les
jp
jae
dec
pop
cmp
and
adc
pop
sbbb
or
cmc
pop
test
call
pop
xlat
fcoml
cmp
js
push
pop
pop
aaa
add
push
fmull
mov
lahf
rep
jmp
lcall
iret
adcl
add
dec
pop
loopne
adc
js
icebp
lock
mov
test
push
in
xor
jle
xor
mov
into
sub
loopnew
js
das
cmp
sub
fucomi
test
test
jb
and
imul
scas
test
ljmp
into
xor
add
out
sbb
xchg
data16
loop
pop
lret
or
faddl
mov
mov
loopne
inc
xchg
test
sub
mov
fs
add
dec
sub
adc
push
dec
jle
mov
pop
aad
add
jb
pushf
mov
daa
add
mov
and
xchg
pmaxsw
push
test
jle
dec
mov
ret
insl
sbb
push
leave
rorb
shll
cmpsl
jae
aaa
or
sahf
adc
cmp
ja
lcall
pop
imul
and
fnstsw
cmp
jmp
cld
pusha
and
mov
and
mov
push
dec
sbb
or
sti
and
mov
mov
or
jl
push
mov
mov
insl
mov
pop
mov
and
iret
jl
push
test
cmp
xor
jg
sarl
outsb
jae
lods
inc
out
dec
sub
mov
aam
xchg
in
sbb
mov
stc
bound
gs
daa
mov
mov
pop
arpl
sbb
cmpsb
addr16
add
cmp
movsb
push
xchg
dec
nop
sbb
sub
icebp
adc
aad
outsb
mov
inc
loopne
jmp
xor
dec
cli
sub
adc
leave
xor
shl
adc
xlat
xchg
lret
and
pop
pop
dec
lahf
mov
sbb
les
dec
dec
pushf
jg
mov
fcmovbe
push
or
cmpsb
sbb
fucompp
xchg
sub
or
sub
je
sbb
insl
xlat
cltd
adc
xchg
das
int
lret
push
jae
sbb
pop
std
dec
bound
xchg
call
mov
push
rol
hlt
jnp
or
sub
fmul
subl
push
mov
sub
inc
pop
rorb
mov
jns
push
std
or
push
mov
mov
and
pop
in
push
sbb
enter
add
hlt
movsl
ret
mov
lock
lea
inc
mov
mov
pop
push
aas
push
imull
imul
invd
xchg
xchg
xor
dec
push
xor
ja
pop
adc
in
dec
insl
and
adc
shlb
sarl
movsb
add
or
sub
jmp
add
xchg
insb
movl
incl
insl
shll
mov
and
inc
insb
daa
mov
rcrl
lcall
lds
scas
xchg
lds
frstor
push
nop
mov
jge
add
sub
enter
in
add
adc
test
icebp
leave
movsl
add
and
nop
cmpsb
int
lret
call
mov
fucomi
mulb
mov
jnp
mov
and
or
aaa
lea
add
int3
sub
mov
icebp
push
cmp
aad
repnz
add
pop
jmp
sahf
ficomps
cmp
std
je
out
add
and
mov
xor
pop
sahf
jns
out
in
sarl
push
xchg
js
insl
gs
and
cwtl
out
lahf
stos
jnp
mov
mov
xchg
inc
mov
imull
or
fwait
mov
and
movd
jmp
fildl
sbb
pusha
sub
call
cmp
add
or
xor
mov
jns
push
mov
jnp
cmp
jmp
sub
jo
in
dec
push
cmp
icebp
pop
mov
rcl
add
sbb
jno
jecxz
pushf
inc
daa
mov
push
repz
gs
lds
lock
cmp
lea
cmpsl
jge
push
enter
inc
int3
push
sbbb
xlat
adc
and
jae
cld
hlt
lahf
clc
mov
mov
insl
xor
gs
adc
xor
loop
push
cmpsb
into
cli
test
imul
push
cmp
lds
push
mov
push
mov
and
jae
dec
repnz
jno
dec
movb
test
dec
mov
jo
imul
jno
sar
clc
sub
xchg
inc
jnp
cmp
clc
popf
mov
lret
add
xchg
cmpsb
xor
inc
sti
fldenv
pop
repz
out
add
lea
mov
push
pushf
mov
aam
push
or
mull
xchg
fstpl
out
adc
dec
mov
pop
xchg
xchg
sahf
xchg
in
xor
mov
mov
jp
mov
jl
cs
pop
cwtl
inc
lahf
cmp
jmp
push
repnz
arpl
cld
movsl
ret
sub
imul
adc
sbb
mov
in
rorb
in
notb
dec
fists
pop
lahf
call
das
iret
push
xchg
inc
int3
out
cmp
sub
mov
mov
dec
and
mov
aad
loopne
add
inc
xor
ret
mov
negl
fwait
pop
psadbw
pop
cmp
and
cmp
lret
xchg
jae
orl
mov
sub
enter
int3
arpl
mov
repz
and
sub
fldl
subb
out
fldenv
and
push
das
lods
add
xor
mov
je
xor
pop
test
mov
sub
or
sub
jecxz
movsl
ss
lret
adc
mov
and
mov
ss
cmpl
push
mov
sahf
cltd
jp
xchg
je
outsb
mov
cld
adc
jp
out
add
mov
dec
pop
stos
and
mov
leave
mov
xchg
shl
lret
test
nop
loop
jo
lock
int
imul
mov
xorb
lret
push
and
dec
bound
dec
jmp
add
movsl
in
add
inc
and
out
ja
gs
xor
mov
je
or
xor
xchg
int
cmp
push
testb
clc
inc
shrb
bswap
mov
icebp
mov
mov
imul
cmpsb
jg
inc
jge
test
scas
xor
insl
lret
sub
xor
pop
mov
inc
sahf
cmp
and
rorl
push
or
call
mov
cld
rclb
shrb
sub
inc
xchg
mov
popa
pop
mov
sub
sbb
scas
add
inc
or
mov
push
dec
pop
loop
inc
repz
pop
push
fs
xchg
cltd
mov
adc
mov
dec
loopne
cli
shll
out
and
mov
add
mov
and
xor
aaa
inc
mov
inc
fisubrl
in
sbb
fldl
pop
jecxz
jns
test
ds
std
sbbb
adc
jnp
je
xor
xchg
mov
mov
push
and
out
pop
jecxz
lahf
das
push
fildll
add
mov
xor
inc
mov
out
scas
sbb
mov
mov
arpl
subl
call
notb
jge
pop
stos
les
mov
pop
dec
movsb
data16
out
fildl
adc
adc
mov
es
in
push
mov
xchg
pop
imul
iret
adc
xchg
pop
dec
das
mov
or
push
pop
pop
push
subl
and
pop
adc
add
jmp
jno
sahf
xchg
frstor
inc
stos
ret
xchg
test
push
or
cmp
in
lods
fsubp
jbe
push
shrb
pusha
xchg
popf
push
jge
mov
jg
sahf
ret
add
adc
xor
into
lret
mov
pop
push
dec
sarb
movsb
mov
inc
pop
adc
or
adc
jg
sub
test
fdivrp
fisttpll
inc
jnp
leave
sub
mov
sub
cmp
sbb
jp
aas
je
cs
into
xchg
dec
fcompl
jmp
cmc
pop
imul
xor
inc
mov
cmp
ror
pop
pop
mov
mov
int3
movsb
push
mov
jmp
add
scas
int3
fnstsw
lret
push
dec
mov
in
in
push
xchg
xchg
mov
mov
leave
repnz
pop
cltd
sbb
mov
jmp
or
sar
sti
test
lea
sahf
in
incb
cli
adcb
bound
les
mov
subl
push
pop
je
enter
jge
dec
sbb
jmp
cs
jp
std
xor
cmpsb
inc
hlt
mov
cmp
jle
mov
ljmp
cmp
jge
cmpsl
je
pop
cltd
aaa
sub
mov
clc
xor
jl
inc
inc
xorl
clc
fbld
mov
xchg
int3
pop
scas
stos
ljmp
and
aas
inc
pop
push
stos
lret
negb
sub
dec
cltd
es
or
cmpsl
add
xchg
push
ds
mov
and
aad
jl
cli
xchg
xlat
jge
gs
inc
mov
jae
pop
in
pop
jb
sbb
sbbl
icebp
rcl
jle
out
add
sub
sub
nop
push
idivl
mov
ljmp
mov
mov
dec
hlt
lds
inc
inc
adc
test
sti
ret
jae
or
push
clc
jne
call
mov
addb
pop
scas
and
jns
ds
mov
rclb
std
xchg
bound
xor
out
dec
mov
test
gs
and
outsb
in
ja
js
cmp
popf
add
repz
xorb
jp
jp
dec
icebp
mov
test
inc
xlat
or
mov
ss
jg
lods
cmpsl
mov
mov
sub
pop
popf
aas
adc
fs
int
es
lcall
mov
and
cmp
pushl
fisubrl
mov
arpl
jno
andl
les
jne
dec
pop
fdivrp
movsl
cmp
jns
ss
pushf
mov
dec
sub
push
sbb
je
inc
idivl
aas
popf
add
xchg
fmull
inc
rorb
inc
aam
test
out
pop
mov
jno
cli
shll
loopne
jle
out
fisttpl
pop
dec
push
jp
push
lods
popa
insb
ds
cmc
andb
scas
mov
cltd
add
cmpsb
int
imul
test
and
add
dec
mov
sbb
mov
mov
ds
xchg
out
or
iret
out
jb
adc
xor
es
insb
pop
int
xor
gs
lock
fstpt
mov
and
inc
pop
imul
stc
ss
out
push
int
aam
rcrl
in
mov
mov
push
imul
repnz
jns
movsl
dec
add
aaa
das
xor
mov
push
das
cmc
dec
and
loope
mov
push
fs
int
stos
dec
mov
cmc
push
ds
ljmp
sub
addb
pusha
xor
inc
inc
loopne
imul
jl
mov
iret
stc
cmp
adc
movsl
jecxz
sub
cwtl
xchg
adc
mov
das
divl
adc
mov
push
push
or
lock
and
jo
hlt
mov
lock
out
aad
mov
sbb
inc
mov
loopne
jns
fdivl
or
cmp
repz
aad
mov
push
jns
mov
push
stc
ljmp
enter
xlat
cld
pop
pop
insb
into
mov
aad
mov
mov
repz
dec
mov
add
insb
or
dec
cli
pusha
or
xchg
inc
inc
mov
sbb
inc
repnz
iret
into
sbb
pusha
push
xchg
add
mul
cmpps
fldt
push
mov
es
dec
cmpsb
sub
sbbb
xchg
mov
ss
dec
loop
repnz
data16
pop
sub
cmc
mov
scas
jnp
shll
pop
mov
sub
lock
mov
push
data16
push
inc
adc
ljmp
mov
in
enter
testl
cld
dec
or
xchg
pop
jecxz
sub
or
les
sub
adc
roll
inc
in
xchg
sbb
inc
out
cld
or
cwtl
and
or
add
clc
sub
add
inc
rorl
dec
ljmp
jns
inc
xchg
or
mov
jmp
fsubrl
lcall
iret
sbb
push
lret
fbld
aad
daa
sbb
stos
lods
pop
cmp
or
sbb
xor
jns
sbb
pop
jno
and
push
push
adc
lods
outsb
shlb
jae
iret
loope
dec
pop
or
xor
xor
ret
fcmove
ss
inc
shl
sub
jb
xchg
pop
aad
punpckhwd
lret
fnstsw
fnsave
or
mov
clc
stc
or
insb
xchg
pop
ds
leave
lea
mov
xchg
xor
xchg
loop
xchg
lds
mov
imul
movsl
dec
ficompl
jb
movsl
subl
cmp
rcll
xchg
mov
addr16
inc
mov
arpl
fisubs
stos
mov
pop
xor
aas
mov
fsubs
pop
out
out
xor
mov
inc
shl
adc
inc
test
mov
repnz
test
jno
insl
out
test
mov
dec
mov
jl
shrl
mov
testb
lret
push
sbb
idivl
movsl
push
hlt
test
fwait
add
adc
push
cmp
ljmp
pop
sub
sbb
cltd
cmpsb
aam
es
mov
cmp
cmpsb
jl
mov
in
arpl
inc
aaa
aas
mov
bound
cwtl
movsl
or
inc
pop
push
rcr
pop
xlat
and
movsl
jle
stos
add
icebp
stos
cmp
push
movsl
int
push
and
jecxz
dec
pop
fadd
xchg
clc
int3
xor
cmp
lock
cmc
cmc
dec
jmp
pop
mov
push
mov
or
push
data16
test
sbb
jmp
in
ficomps
fs
add
pop
testw
cvttpd2dq
pusha
stos
loop
mov
jle
mov
mov
iret
or
push
jo
rol
xchg
cmc
inc
inc
mov
test
decl
pop
in
fisubl
cld
mov
aaa
mov
jo
test
and
int3
cs
out
cmp
mov
sbb
add
dec
xor
mov
mov
int3
cwtl
pop
or
loopne
lods
je
dec
pop
sbb
addb
ficoml
out
xchg
in
push
cmp
jo
hlt
in
out
es
test
push
xrelease
inc
push
dec
repnz
inc
or
lahf
mov
std
js
dec
mov
dec
cmp
test
xchg
je
cwtl
mov
xchg
lods
aaa
pop
sub
adc
roll
call
int
adc
sbb
push
clc
push
test
divb
movsl
cmp
lret
sbb
inc
fsubs
leave
inc
pop
daa
iret
das
std
lods
in
sti
dec
and
jg
sub
std
sub
out
out
imul
loop
lahf
push
jnp
rorb
sub
cld
jg
add
in
pop
movsb
push
dec
cli
cltd
insl
dec
scas
sub
push
mov
mov
gs
shlb
scas
mov
cmp
arpl
mov
fldpi
rorl
lods
sub
push
icebp
or
push
sahf
inc
pop
gs
and
enter
mov
xchg
or
mov
and
sub
sub
repz
mov
jle
or
xchg
daa
jae
aad
mov
dec
and
xor
repnz
mov
xor
add
mov
xchg
rolb
push
ljmp
add
jl
insb
sarl
jb
mov
stc
mov
cli
and
xchg
jb
pop
pushf
xchg
lods
jnp
imul
out
mov
js
ds
fistpl
sub
je
nop
bound
inc
ret
pop
movsb
push
xchg
fisttps
mov
mov
popf
mov
xor
cmp
fistps
ljmp
mov
dec
mov
mov
int
popf
adc
gs
xor
incb
lret
jmp
add
popf
loope
jne
dec
sbb
hlt
jbe
nop
dec
jecxz
xor
rcr
adc
subl
sbb
and
sahf
sbb
dec
push
xor
insl
aaa
aaa
jle
dec
jae
sbb
sub
jbe
dec
dec
jle
mov
or
or
out
cmpsl
pop
loop
scas
loope
mov
out
adc
jb
xor
es
and
outsb
and
pop
and
sahf
dec
rclb
mov
and
cmpsb
rorb
ja
add
lds
adc
enter
push
push
int3
xor
add
lock
xor
test
inc
pop
or
lea
clc
mov
movb
cmp
neg
sub
fstps
jge
ficomps
stc
mov
lea
inc
cmp
add
pushf
mov
enter
icebp
add
in
push
inc
mov
sub
and
sbb
dec
xchg
je
adc
fcoms
ret
xchg
test
out
and
movsb
ret
mov
ss
cmp
iret
sbb
jbe,pn
lods
imul
and
sahf
out
mov
and
jae
andl
fldcw
mov
out
in
fimuls
pop
xchg
inc
nop
jo
adc
adc
mov
rcr
xchg
and
lcall
adc
test
mov
xor
jb
test
ds
push
fs
jns
add
jns
xor
lods
adc
push
jmp
cmp
fisttpl
pop
insb
xor
cmp
push
dec
repz
push
lock
andb
loopne
mov
not
test
rorb
jg
ret
aam
int
lds
and
pxor
sub
cli
xor
xchg
adc
mov
aad
xchg
notl
ret
pop
std
push
roll
ja
xchg
add
addb
inc
dec
sbb
movsl
pop
jecxz
mov
icebp
clc
push
jmp
lods
mov
and
cli
cs
pop
add
pop
clc
add
mov
push
push
inc
or
or
pusha
jg
xor
and
sahf
adc
dec
lock
xor
loopne
ds
out
adc
pop
fwait
push
adc
xor
scas
ret
pop
xor
popf
mov
sahf
icebp
xchg
and
adc
into
mov
xor
mov
insl
and
scas
mov
mov
sub
xor
mov
shrb
scas
addr16
xchg
mov
mov
jne
ss
lock
pop
push
hlt
push
in
fidivs
test
mov
mov
or
insl
jecxz
push
roll
loope
or
test
test
fdivr
test
gs
ja
push
adcl
inc
aaa
popa
test
icebp
add
push
aaa
stc
cli
xchg
jl
push
cli
mov
and
xchg
shlb
add
cmpsb
imul
xchg
jno
sub
stc
daa
push
and
inc
stos
cmpsb
push
std
pop
mov
cmp
lret
les
sub
mov
es
repnz
repnz
lods
call
clc
xchg
mov
pusha
mov
daa
and
mov
insl
loop
gs
push
jl
dec
insl
jmp
inc
push
div
addr16
sub
insl
push
and
jl
add
push
nop
movsl
mulb
xchg
das
popf
jmp
aam
hlt
mov
xchg
test
push
or
or
xor
icebp
push
push
dec
xor
mov
push
sub
mov
or
cmp
cmp
gs
out
arpl
mov
push
int3
jns
xor
imull
adc
inc
ja
popf
clc
je
inc
movsb
es
divb
mov
mov
in
testl
jg
movsl
rclb
bound
pusha
out
in
ror
cwtl
ss
stos
mov
lahf
loop
jae
or
mov
mov
or
xlat
stos
sbb
adc
hlt
jecxz
cmp
lods
dec
addr16
pop
add
mov
fbstp
jp
clc
dec
out
lds
fs
ret
sub
pop
or
stos
push
or
xchg
xor
inc
inc
imul
into
or
in
and
or
add
movsb
cmp
dec
aas
xchg
popa
test
enter
jge
outsb
in
and
repz
test
fsubrs
insl
xchg
dec
inc
out
mov
fistpll
cld
mov
push
mov
faddl
mov
jle
scas
negb
cmp
and
xor
ds
call
in
outsl
pop
addr16
dec
xchg
jecxz
push
push
repz
in
or
in
negl
imul
push
hlt
testl
andb
rolb
mov
jl
dec
push
adc
xlat
aad
cmp
adc
rcrl
mov
lods
jg
push
jmp
cmp
bound
fidivrl
std
pop
xor
repnz
mov
xor
mov
repz
dec
sti
fwait
cli
jb
mov
sbb
icebp
sub
pop
xchg
imul
repz
inc
fucomi
and
cmp
jp
ss
and
and
in
or
pop
subl
movsl
sar
es
push
xchg
js
mov
jmp
xor
mov
inc
xchg
lcall
aad
inc
or
call
js
and
shl
pop
lods
or
dec
mov
inc
clc
shlb
inc
cmc
cmpsl
cmp
test
or
int3
mov
jns
dec
pop
add
inc
add
or
sub
popf
movsb
xchg
das
fildll
pop
push
cmovbe
stc
ja
fisubl
std
call
or
dec
sbb
int3
mov
out
fs
popa
push
leave
cs
aaa
jno
in
push
inc
xor
jo
mov
jns
shll
add
or
das
mov
cs
cmc
sub
cmp
test
fldenv
std
and
pusha
cmp
push
roll
or
lret
enter
pop
imul
in
mov
and
adc
nop
push
sbbb
mov
loope
lods
jne
xor
mov
mov
imul
pop
lcall
cs
scas
test
data16
adc
cwtl
dec
lcall
fs
psraw
xor
push
pop
pop
rorb
and
mov
mov
add
push
mov
sub
mov
movsb
stos
inc
imul
aas
fldl
imul
into
xchg
lcall
mov
rclb
fwait
popf
xchg
lock
sbb
out
push
mov
fwait
push
outsl
inc
xchg
ss
mov
cmp
xor
mov
gs
add
cmpsl
lds
jb
out
push
mov
iret
mov
adc
addr16
sub
clc
inc
add
leave
xchg
insl
mov
aad
mov
roll
fsubrs
imul
insb
add
mov
nop
je
cmp
data16
jne
cmpsb
loop
sub
lods
repnz
mov
rcrl
pop
xor
leave
fwait
mov
repnz
out
xchg
cmp
push
adc
frstor
int
and
popa
xchg
cmp
and
imul
pop
imul
pop
lcall
cmpsb
push
or
and
sub
mov
jecxz
loop
loopne
dec
pop
outsl
xlat
and
in
mov
pop
sub
sarb
test
adc
mov
mov
leave
nop
pop
jae
sbb
jae
dec
pushf
add
push
int3
mov
pop
xor
int
mov
sti
cmp
cmc
xor
pushf
fdivs
xchg
inc
adc
loopne
mov
pop
repnz
jno
lret
subb
adc
pop
xor
jg
imulb
push
pop
imul
lods
lds
jb
fldt
pushl
cmp
push
pusha
inc
sti
mov
push
xchg
jmp
lahf
mov
and
shl
out
js
inc
shrl
cwtl
movsl
cmpsb
ds
pushf
push
mov
out
jp
pop
xorl
fisttpl
fld
popf
adc
sahf
std
stos
cmp
mov
mov
lcall
fnstsw
lock
push
sub
gs
xchg
cltd
xchg
jmp
xor
out
xchg
out
sbb
pop
jno
xor
in
stos
shrw
adc
das
or
inc
dec
push
dec
jnp
mov
mov
push
jg
out
dec
cwtl
cmp
mov
sar
xchg
sub
mov
sbb
aas
pop
cwtl
int3
sub
rorl
into
jle
push
ljmp
lahf
sbb
mov
jb
inc
lods
mov
jecxz,pt
nop
xor
xlat
adc
inc
inc
cmp
cmpsb
xor
jl
jne
in
mov
fucomi
clc
loope
sbb
xor
ret
mov
pop
mov
and
jecxz
ret
pop
ret
sub
mov
sbb
shrl
mov
mov
xchg
jmp
xor
jae
lahf
mov
jns
rclb
sub
aad
stos
mov
dec
xlat
xor
mov
nop
adc
pop
dec
sbb
outsl
test
pop
ret
lock
rcr
xor
arpl
jle
cmp
adc
pushf
dec
pop
sub
cld
das
lock
popf
mov
sbb
lret
jnp
es
dec
call
dec
sahf
lahf
add
cmp
dec
cli
add
out
sbb
lret
scas
sbb
mov
sahf
dec
dec
jae
lret
jg
xor
jge
mov
inc
int
pushf
xor
lret
cmp
xchg
jg
stos
sub
pushf
and
insl
mov
stc
pusha
mov
xchg
push
xlat
mov
sti
inc
cmp
mov
mov
lea
jg
out
jl
jne
negb
aas
lret
icebp
jp
dec
jg
xchg
stc
and
sarl
xchg
and
push
xor
ja
mov
aas
jle
daa
scas
pop
sub
dec
sub
add
pusha
xchg
cltd
dec
loop
xchg
jl
dec
or
int3
or
addb
jae
shrb
orb
mov
add
nop
fadds
or
cli
push
push
sbb
sbb
jle
lret
and
ret
dec
outsl
pusha
daa
xchg
enter
jg
pop
add
scas
push
lret
repz
imul
mul
ss
rcr
xor
stos
enter
xrelease
pop
push
inc
das
pop
div
pop
xor
addr16
adc
mov
outsl
out
mov
or
jno
insb
xor
push
push
les
enter
aam
sub
xchg
cs
sar
or
scas
shl
xchg
inc
mov
loope
jmp
add
sbb
ljmp
pop
cs
out
mov
push
mov
adc
mov
mov
mov
add
std
fiaddl
fsubrs
mov
mov
orb
outsb
daa
outsb
xor
inc
test
inc
leave
repz
int3
mov
mov
bound
jl
mov
pop
sub
int
mov
push
adc
insl
movl
or
mov
int3
and
ds
sub
sub
test
bound
mov
add
fnstenv
test
inc
rcrb
push
lea
cli
scas
ljmp
mov
cltd
jmp
bound
imul
iret
aas
sahf
cmpsb
scas
arpl
mov
jb
inc
cmp
pop
test
ficompl
xor
cmp
cmp
mov
mov
mov
fistpll
aaa
xor
lret
ret
call
push
imul
out
pminub
mov
and
aam
inc
lret
or
dec
aad
mov
loopne
hlt
and
loop
shl
push
push
arpl
cmp
add
jo
jmp
les
int3
pop
ret
in
sbbb
add
pop
mov
mov
movsl
ljmp
jb
mov
test
sub
ficomps
jmp
xchg
inc
cmp
jle
mov
pop
rcll
jmp
or
mov
dec
adc
inc
imul
mov
bound
cmpsb
cmp
scas
rcl
out
jl
shlb
ret
pop
pop
push
xlat
xchg
xor
imul
mov
dec
ret
push
cmc
fimull
mov
and
and
mov
mov
or
cs
mov
pop
stc
cwtl
sbb
mov
push
popa
adc
std
xchg
xor
or
xor
fwait
adc
hlt
adc
lea
loopne
gs
test
push
and
sub
repnz
lods
jecxz
lret
call
adc
dec
mov
xor
inc
lods
inc
xchg
xchg
mov
fstl
repz
mov
inc
mov
cmp
xor
add
out
pop
aam
dec
repz
loope
mov
outsl
lcall
ret
cmpsb
test
enter
add
rol
int
inc
fwait
jnp
mov
pop
xlat
popf
dec
and
out
addb
mov
fadd
mov
cli
sbb
je
lahf
xlat
pop
imul
dec
mov
out
insl
xchg
popf
mov
jne
cmpsl
mov
sub
xor
lret
int
scas
mov
xchg
cmp
pop
cli
mov
jle
adc
scas
or
es
mov
jg
pop
push
jecxz
inc
testb
cmpsb
mov
sbb
and
inc
cmp
jae
cmc
xlat
test
mov
imul
das
ljmp
push
ret
push
jp
mov
daa
push
loopne
test
rcrl
out
clc
lret
xor
in
push
daa
stos
or
sbb
and
sbb
fdivl
xchg
sbb
stc
out
sbb
in
mov
repnz
call
and
pop
sub
clc
in
test
inc
inc
aad
addr16
movsb
mov
ret
jg
lds
ja
pop
leave
bound
loope
and
sbb
popf
sub
add
push
js
stos
mov
in
and
dec
mov
bound
adc
filds
iret
call
cltd
out
xchg
sbb
sbb
ror
pop
cmpsb
lock
sbb
lock
mov
sub
clc
xchg
push
sbb
sarb
repnz
jnp
pop
lods
js
mov
sub
scas
adcl
cld
mov
ret
push
inc
push
in
icebp
sbb
add
stos
dec
ss
pop
mov
in
cmp
push
sbb
pop
imul
jno
aad
cld
push
cmp
and
movsl
dec
leave
sub
pop
in
or
jnp
xchg
cli
lock
adc
and
dec
xchg
cmpsl
jp
sub
loop
xchg
push
std
aaa
int3
aam
pop
arpl
fsub
enter
cmpb
jb
push
mov
mov
mov
and
outsb
fcom
bound
fs
xor
pop
dec
jmp
roll
aad
push
or
sahf
lret
sub
cmp
rclb
dec
popf
or
push
out
nop
scas
xchg
movsl
inc
into
xor
xlat
jl
shrl
pusha
nop
fstps
xor
mov
cld
mov
jl
loopne
cmp
or
pushf
sbb
mov
pop
mulb
jmp
pop
ja
lea
lret
aam
push
mov
lahf
out
popf
sarl
daa
xor
or
push
cmp
jl
sbb
fisubl
mov
and
push
subb
out
lds
xor
xor
fs
rcll
mov
cmpsl
iret
mov
fwait
in
dec
push
inc
cs
mov
popf
stc
mov
not
inc
rclb
push
xchg
dec
gs
cmp
imul
call
movsl
shlb
xchg
loop
rcrb
lds
dec
gs
mov
xor
add
add
inc
ja
scas
hlt
loope
fwait
cld
je
std
iret
popa
out
push
xor
int
lea
idivl
add
push
stos
add
in
pusha
jmp
dec
inc
sqrtps
and
stc
fsubl
fimuls
popa
dec
xchg
add
fwait
dec
xchg
dec
dec
xor
mov
icebp
in
or
shlb
pop
repz
addl
lds
inc
outsl
testl
cmp
jp
push
or
jl
pop
mov
inc
mov
loope
popf
xor
and
fcompl
mov
jae
or
sub
repz
push
test
shl
aaa
out
testl
pop
ret
hlt
into
sti
in
lock
push
adc
mov
or
mov
push
push
and
jl
and
repz
inc
xchg
mov
add
popa
mov
push
loope
jns
sti
push
outsb
sub
negl
sarb
pop
popf
push
and
stos
ss
popf
cmp
jmp
adc
fistl
sub
arpl
xchg
test
outsl
jbe
shlb
mov
adcl
pop
inc
adc
inc
pop
shlb
lds
cltd
mov
or
and
subb
adc
mov
pop
fisttpll
add
jmp
lea
fldcw
xchg
mov
sar
imul
add
jle
cs
iret
testl
aam
daa
fwait
xchg
cmp
mov
adc
or
pushf
jne
dec
inc
ret
fs
sbb
filds
pop
dec
push
adc
das
icebp
aad
fmull
pop
fdivrs
mov
iret
mov
gs
add
push
and
in
mov
mov
psllw
sahf
sbb
addr16
and
mov
push
fwait
stos
cmpsb
add
sub
sbb
bnd
adc
clc
jo
inc
outsl
push
or
sysenter
fildl
pop
cmp
add
in
cltd
mov
jecxz
orb
mov
int
xor
aaa
dec
daa
or
and
leave
aad
mov
xor
popa
pop
mov
fucomip
fmull
dec
fldt
mov
leave
in
sti
inc
cmp
daa
and
xor
or
dec
jbe
push
push
xchg
fdiv
in
mov
cwtl
mov
sub
push
jg
dec
xor
mov
stos
mov
mov
mov
cmp
inc
dec
aad
and
cmp
std
mov
push
pop
adc
push
std
mov
fsqrt
rol
mov
scas
push
loopne
ret
mov
aaa
sbb
jg
adc
mov
out
test
test
inc
mov
addr16
push
movsl
pop
sbb
addb
jg
jne
mov
pop
cmp
mov
fsubrl
and
lods
mov
iret
pop
cli
push
inc
imull
lock
jne
mov
sarb
int
jle
pextrw
or
popf
mov
inc
lahf
inc
push
xor
int
outsb
cli
jbe
and
xchg
add
sub
and
adc
sbb
fistpl
xchg
xchg
inc
movb
mov
and
xor
cmp
lcall
pop
push
jo
xor
add
lahf
mov
dec
movsb
addr16
outsb
fstl
xor
cwtl
incl
dec
xchg
outsl
ljmp
add
sbb
enter
mov
xor
fcomps
xchg
je
icebp
pop
ja
dec
cmp
jne
das
xor
dec
jo
cmpsl
std
cltd
sub
pop
and
xchg
movsl
sbb
inc
and
lds
push
lea
flds
mov
and
in
mov
insl
xchg
out
xchg
inc
push
rorb
pushf
shll
mov
cltd
faddl
lods
addb
mov
push
cmp
push
jle
sbbl
cmp
add
xchg
dec
daa
add
ffree
xor
fsubs
outsl
inc
adc
add
cld
je
lret
sub
arpl
shl
bound
cmpsb
insb
dec
add
dec
and
lea
in
and
shll
jge
shrb
mov
fisubl
sub
mov
cmp
dec
incb
test
lods
movsb
ljmp
out
push
dec
sahf
mov
jno
inc
xor
enter
adc
jbe
iret
mov
add
loopne
push
inc
mov
jecxz
jne
or
cmp
movsb
ja
andb
outsl
icebp
jmp
icebp
out
sbb
mov
je
sbb
xchg
outsb
push
inc
int
cmp
mov
ret
xor
xor
push
mov
insb
stc
adc
xchg
dec
js
adc
nop
movsl
push
js
dec
mov
inc
xchg
test
pop
push
cmc
xor
int
or
cmp
cltd
cs
shl
jle
mov
loop
push
insl
push
out
shrl
leave
jmp
in
inc
lret
adc
or
shl
sbb
pop
in
mov
pop
fwait
stos
repz
push
sbb
jecxz
mov
fs
adc
or
inc
adc
cmpsb
mov
arpl
xor
inc
push
in
ljmp
pop
pop
fwait
ljmp
testl
pop
pop
imul
mov
fxch
xor
stos
lock
repnz
add
pop
mov
xor
loope
jae
push
je
and
push
add
adc
fcoms
xlat
cmc
add
add
add
popa
andb
adc
je
in
mov
out
jmp
js
mov
out
cmc
rep
imul
pop
pop
inc
pushf
pop
arpl
add
lock
push
mov
mov
mov
icebp
dec
adc
ss
ret
in
mov
jg
adc
inc
jnp
adc
jle
mov
cmp
decb
mov
dec
mov
arpl
in
andb
fcomp
aaa
loope
dec
push
pop
inc
jb
adc
adc
daa
insb
xchg
in
or
and
mov
adc
pop
ds
mov
enter
add
movsb
push
jmp
push
sbbl
mov
cwtl
push
scas
stos
push
mov
cmpb
lods
mov
sub
dec
pushf
pop
or
sti
insb
jmp
cmp
mov
jge
cs
pop
xor
and
dec
leave
lods
aad
sbbb
push
test
xor
sub
movsl
xchg
dec
imul
arpl
test
pop
push
push
rcll
jae
dec
mov
adc
pop
dec
imul
adc
inc
xchg
scas
mov
dec
cli
rolb
std
outsl
mov
pop
xchg
xor
or
sbb
mov
mov
xor
rcrl
lret
sbb
dec
add
xchg
xchg
shrl
sbb
arpl
cmc
push
cmp
xchg
popf
cmc
sahf
mov
mov
pop
xchg
sub
int
mov
fisttps
test
dec
sahf
fs
xchg
add
pop
ret
movsb
or
push
into
cmp
xchg
or
mov
lock
adc
pop
lods
pusha
adc
mov
jg
dec
push
lods
ss
sub
lret
and
sbb
xchg
lock
ret
mov
int
lock
pop
mov
mov
clc
inc
xchg
inc
fsubrs
scas
std
mov
cmp
add
or
sbbl
fwait
rolb
jnp
popf
cmp
push
mov
mul
nop
repnz
clc
mov
or
icebp
dec
cli
inc
xchg
out
lahf
lds
push
sahf
sahf
lods
mov
in
les
jle
imul
fistl
mov
adc
test
iret
sub
aas
jne
push
aad
push
fbld
int3
lds
cmp
inc
pop
in
pop
adc
pop
cmp
push
adc
repnz
data16
out
jno
sbb
dec
aad
add
imul
psubw
fdivr
repz
adc
sub
add
xor
xor
cmpsl
and
pop
jecxz
mov
push
push
fnstcw
lahf
movsl
in
iret
cmp
dec
xor
xchg
fsubs
loopne
cmpsb
jno
inc
sub
mov
mov
sbb
sahf
aam
andl
in
shrl
mov
cmc
imul
fists
push
sbb
add
pusha
shl
pop
sbb
and
add
les
sub
or
jg
and
pop
aam
aad
add
jl
xchg
repz
xadd
mov
repz
lret
sbb
loopne
inc
inc
outsb
icebp
dec
mov
jl
mov
xchg
ret
test
ret
mov
cmp
mov
add
fdivs
pop
sub
and
jae
cltd
mov
cwtl
add
adc
add
mov
mov
jb
lock
mov
stc
sub
mov
inc
or
fsubl
inc
cli
xchg
lcall
neg
xchg
and
and
fwait
ror
add
xchg
cmp
xor
roll
xor
popf
test
jbe
adc
xor
outsl
fstpl
push
ret
xchg
jg
idivl
xor
sahf
in
mov
adc
out
mov
jg
xchg
nop
mov
inc
add
jne
ds
out
jae
and
add
pop
xchg
cmp
jmp
flds
push
inc
lret
xchg
ret
jne
mov
aas
adc
mov
xor
inc
mov
stos
enter
loopne
xor
pop
push
in
pop
push
lods
xchg
addr16
imul
xchg
js
fcmovu
pop
mov
fstpl
sahf
int
lods
or
adc
loop
xchg
outsb
orl
mov
pop
popf
jnp
dec
inc
jmp
xor
idivb
ds
or
jle
mov
movd
and
not
adc
subb
nop
sbb
sbb
fidivrs
cmpsb
mov
movsb
enter
scas
fucomi
xor
xor
pusha
mov
dec
out
lret
jp
popa
fsubs
xor
outsb
int3
lock
lds
cmp
sbb
dec
push
es
add
cmp
fisubrs
jae
ljmp
xlat
mov
mov
sbb
sub
or
div
sbb
addr16
mov
movsl
adc
or
scas
mov
push
lock
aaa
jbe
push
aam
ljmp
clc
pop
cmpsb
mov
jmp
add
int
out
pop
fs
mov
xchg
push
jb
or
jp
pop
test
adc
scas
pop
std
ja
adc
in
int3
mov
ljmp
rorl
test
in
pushf
sub
enter
inc
in
xor
xor
into
adc
mov
push
das
dec
cltd
repz
pop
sarl
or
subl
push
movsb
arpl
sbb
pop
sbb
lds
dec
inc
test
push
jne
mov
out
lods
dec
xchg
mov
cmp
out
cmp
pop
rcrl
mull
inc
int
enter
and
in
sbb
in
lahf
repnz
imul
push
xor
mov
sahf
test
cld
fidivrl
leave
popf
sarb
push
mov
cmp
add
xor
sti
cmp
data16
lods
ret
pop
rcl
pop
cs
pop
sub
or
js
lahf
cmp
bound
jp
inc
push
notb
jl
adc
cmc
out
push
add
ljmp
enter
in
xchg
mov
cs
jbe
pop
std
ljmp
ljmp
mov
inc
movsl
mov
stc
data16
xor
shll
jo
or
lds
sti
mov
jmp
dec
sbb
int3
call
jp
mov
inc
loopne
fstpl
in
add
inc
dec
ret
int
cmp
insl
adc
mov
fnsave
mov
ljmp
mov
rol
mov
push
out
jge
in
movsb
inc
jne
or
sub
fwait
sub
imul
xchg
js
or
mov
ds
push
cwtl
test
pop
pop
jo
inc
adc
repz
add
xorl
push
jne
xchg
aas
inc
jns
add
xlat
pop
clc
arpl
ss
test
loopne
push
or
pop
mov
pop
pop
or
mov
pop
leave
lret
sub
mov
push
cwtl
imul
imul
pusha
sbb
orb
scas
jne
pop
adc
push
inc
sti
pop
jbe
pop
hlt
jne
add
pop
xchg
adc
sub
pop
inc
xchg
dec
arpl
sbbl
outsl
test
dec
ds
or
mov
imul
stos
cmp
stc
sbb
mov
push
dec
cli
mov
ljmp
xchg
shr
cmp
divb
or
add
lret
loopne
xchg
and
loop
pop
fdivrs
pop
or
in
lret
adc
push
je
mov
xor
add
xchg
fcmovnu
clc
cmp
add
insl
pop
or
sub
negb
aas
and
data16
hlt
cld
cmp
sub
aas
inc
call
push
das
jnp
push
jg
sbb
jmp
lret
fwait
sbb
sbb
mov
ljmp
mov
shrb
pop
and
push
cli
lods
add
outsb
sub
mov
fs
cmp
test
orb
cld
mov
insl
mul
roll
push
pop
adc
je
mov
push
rol
sbb
inc
test
mov
push
or
mov
pop
mov
add
pushf
leave
xchg
push
stc
sahf
adc
xor
inc
mov
in
and
sti
fdecstp
subb
push
icebp
lcall
test
fldt
mov
and
or
dec
mov
test
mov
jae
xchg
in
inc
sbb
xor
jbe
dec
push
jbe
mov
sbb
clc
pop
insb
sub
xchg
popf
das
jnp
stos
outsl
pop
movsb
mov
adc
lods
mov
adc
add
stos
shl
call
imul
jno
pop
divb
in
push
sarl
mov
cmp
or
out
dec
and
inc
shr
stc
push
jge
fiadds
iret
xchg
gs
outsl
xchg
fsubr
pop
add
mov
sub
ja
xchg
sbb
xor
jne
cmpsb
or
xor
sbb
jnp
imul
and
and
pop
popf
xchg
cmp
lret
lcall
rorb
in
into
pop
and
inc
jge
dec
arpl
sub
in
adc
jno
dec
add
aam
ficoml
movsb
lock
leave
dec
arpl
fs
jns
insb
mov
call
inc
fwait
push
pop
imul
aaa
or
mov
jb
mov
aam
push
mov
add
fwait
xchg
or
mov
insl
xchg
cltd
mov
cli
sbb
int3
mov
pop
in
push
icebp
divb
enter
pop
mov
adc
add
jl
out
ss
push
inc
clc
imul
out
dec
and
jge
mov
push
dec
ss
mov
mov
hlt
out
push
add
test
insl
fs
rorl
enter
add
fdiv
ss
pop
cmc
insb
nop
cmpsb
sub
mov
fbstp
cmp
or
insl
scas
jp
cs
stc
scas
sbbb
mov
mov
je
fwait
rcr
pop
scas
ja
fstps
sub
mov
add
icebp
int3
out
test
mov
add
mov
fidivl
sbb
inc
or
pop
jo
cmpsb
cmpsl
fmuls
lods
push
pop
imulb
add
in
mov
sub
add
repnz
loopne
shr
pop
fsubl
dec
repz
mov
jg
aaa
push
out
cmc
jno
push
push
test
xchg
xorb
mov
loopne
ja
ret
add
push
sub
cmp
and
xor
pop
sbb
in
mov
lret
add
xchg
aad
cltd
cmpsb
insl
mov
jecxz
fsubrl
mov
mov
cld
lret
mov
cltd
cmp
inc
fisubrs
scas
insb
testb
sub
mov
pusha
xchg
adcb
and
push
data16
and
pop
mov
out
sbb
mov
mov
cmp
sub
sbb
shl
enter
or
push
icebp
popf
dec
jl
notb
inc
pop
and
push
xor
xchg
push
mov
lea
adc
adc
xchg
lea
cmp
jmp
jbe
adc
jg
mov
clc
or
fcomi
cmp
pop
push
pop
sub
cmp
in
test
js
stc
test
pushf
sub
add
xor
shl
aaa
test
pop
out
xor
xchg
jb
test
in
clc
mov
aam
and
push
add
pop
sahf
repnz
push
inc
cmp
aam
mull
bound
inc
aas
xchg
sti
pop
xchg
mov
push
mov
fldt
xchg
das
lods
mov
lds
inc
insl
jae
pop
pop
mov
push
jmp
mov
mov
insb
ljmp
call
cmc
mulb
pushf
mov
fs
mov
frstor
hlt
xchg
xor
add
or
rcrb
adc
inc
push
inc
mov
push
push
adc
mov
mov
cmpsl
xchg
rorl
fisttps
cmp
dec
out
cmp
sub
fcompl
ljmp
leave
ja
dec
je
sarl
gs
repnz
iret
pop
int
inc
test
xchg
pop
vcvtss2si
dec
add
or
ds
xchg
mov
jb
dec
hlt
into
mov
ror
in
inc
xor
movsb
sahf
cld
pop
pusha
test
xor
dec
inc
add
fdivr
push
or
xor
add
ror
pop
adc
and
cs
mov
mov
das
cmp
mov
mov
wbinvd
inc
outsl
sti
arpl
mov
stos
pop
mov
dec
js
jg
lods
cs
xchg
dec
mov
in
movsl
sarl
push
xor
dec
inc
pop
pop
adc
sub
mov
mov
add
nop
leave
enter
and
xor
add
out
inc
dec
call
dec
mov
mov
in
shr
aad
cwtl
rcr
and
and
push
dec
push
outsl
pop
cmp
or
add
adc
cmp
rcr
dec
jl
mov
mov
nop
dec
mov
xchg
adc
mov
and
add
mov
xchg
pop
inc
jb
or
dec
jg
mov
push
mov
test
loop
and
dec
fst
push
push
ds
pop
jne
adc
ret
loopne
rcll
lods
xchg
xchg
dec
or
stos
add
push
adc
and
push
xor
in
dec
push
jmp
notl
inc
inc
stc
addb
mov
sub
xor
jnp
and
dec
xor
add
scas
cs
or
jne
push
and
adc
call
jns
add
in
scas
mov
or
scas
pushf
call
add
adc
loop
inc
adc
fadd
jb
enter
rcrl
cmpsb
or
pop
pusha
fucomp
xchg
xchg
std
pop
scas
push
shll
and
mov
clc
out
loopne
inc
jg
push
xlat
or
xor
jmp
sarl
mov
sbb
and
loope
xchg
movsl
jg
les
mov
test
pushf
adcb
aas
les
fidivs
repz
scas
mov
js
lret
inc
mov
push
push
std
sbb
xchg
xchg
pop
jo
jne
lret
in
dec
or
mov
orb
mov
cltd
add
loop
cmp
mov
sub
mov
xor
cmp
scas
mov
mov
aad
cltd
fistl
and
sub
scas
lea
jp
sbbb
cmp
out
push
push
jp
xchg
mov
das
jnp
in
xchg
cmp
in
insb
es
ja
cmovge
mov
pop
testb
xchg
sbb
lock
sub
sub
mov
pop
ljmp
sub
jecxz
out
add
rcl
inc
fiaddl
jl
inc
fcoml
mov
cwtl
lods
jmp
jae
mov
push
gs
push
push
pop
or
fwait
xchg
cmp
push
push
cmp
repnz
xchg
and
jg
jg
xor
mov
inc
sbb
mov
les
negb
insl
inc
sub
sahf
mov
cmp
or
es
frstor
mov
repz
mov
cmpsl
mov
jne
rcl
jl,pn
xchg
cmp
xchg
testb
jg
imul
cli
arpl
movb
pushf
or
fidivrs
ja
jl
cmpb
push
or
fdivl
sub
stos
je
movsb
lock
mov
mov
cwtl
jmp
and
dec
dec
repnz
mov
and
dec
adc
inc
xor
add
or
jmp
je
add
ret
loopne
cmp
mov
add
adc
mov
sti
fidivrl
dec
mov
jg
movsl
ss
mov
lock
out
stc
and
jnp
pop
mov
inc
push
sub
pusha
imul
inc
insb
insl
scas
ret
testl
cmp
and
adc
push
imulb
ret
es
xor
sbb
xchg
add
fs
std
fldl
add
sti
ljmp
data16
sbb
test
sbb
pop
shll
outsb
popl
mov
sbb
mov
push
std
dec
iret
jb
mov
cmp
imul
xchg
cltd
popf
mov
sbb
sbb
pop
push
xor
mov
jbe
dec
jle
sahf
ret
bound
xor
mov
push
add
lret
icebp
xchg
ljmp
fdivs
adc
mov
jns
add
rolb
lahf
popf
jle
daa
pop
adc
dec
or
hlt
dec
ret
out
cmpsb
jne
dec
cmpsb
sbb
pop
movsb
rcl
dec
mov
push
and
mov
nop
pop
push
sarb
nop
arpl
inc
dec
or
in
mov
into
in
jecxz
fadd
pop
or
xor
in
and
pop
pop
mov
hlt
lods
or
cltd
mov
sub
or
sbb
cmpsl
test
clc
pop
push
sbb
in
push
inc
mov
xchg
call
mov
adc
mov
fwait
jl
int3
shrl
and
les
aaa
fwait
inc
ret
push
out
add
or
int
adc
out
mov
inc
pop
sbb
inc
fistl
je
add
push
push
or
jmp
je
pop
adc
test
pop
cmpsb
push
das
int3
cmp
cmp
xchg
ljmp
push
jge
fcoml
mov
jge
sub
jmp
lds
jmp
imull
lret
fimull
mov
shl
push
pop
push
mov
inc
pushf
les
out
arpl
mov
cld
jge
jp
dec
jae
loopne
out
xor
shll
sbb
bound
jne
hlt
aaa
in
add
inc
mov
dec
test
fs
xchg
int3
dec
stos
xchg
test
cmp
out
dec
pushf
jmp
inc
adc
mov
inc
addl
lods
mov
xor
je
bswap
inc
inc
mov
lds
aas
ja
cld
div
lods
fs
jne
sbb
jnp
popf
push
mov
mov
je
jae
mov
ret
sarb
cmp
xor
test
lahf
mov
cmpsb
inc
out
or
js
and
adc
adc
ret
ja
inc
sti
adc
cmp
test
mov
mov
movb
std
loopne
pop
shlb
test
jl
dec
movsl
or
ljmp
pop
icebp
cmp
xchg
cli
stc
inc
das
imull
jge
aas
sbb
mov
cmpsl
jo
inc
repz
clc
xchg
mov
lods
pop
pop
adc
jae
pop
test
and
or
adcb
push
hlt
mov
sbb
mov
and
xchg
mov
jle
jne
subl
fimuls
mov
imul
addl
cmp
jecxz
imul
or
pop
and
mov
ficoms
imul
sbb
daa
push
jecxz
lea
negb
aaa
outsl
ret
mov
dec
sub
sub
dec
mov
pop
aad
insb
cmp
dec
mov
cmp
outsl
daa
cmp
pop
xor
or
inc
jno
mov
test
mov
lret
ret
and
cmp
outsb
mov
dec
stos
jle
mov
and
inc
cwtl
xor
mov
or
push
aad
cld
sub
clc
and
add
ret
lods
adc
xchg
and
shlb
outsl
ds
dec
cmp
inc
push
push
xchg
leave
mov
inc
js
or
bound
aam
sub
adcl
cltd
cmpsb
mov
neg
and
stos
pop
xchg
shll
or
xchg
jb
mov
add
icebp
add
imul
test
sub
sbb
repnz
and
mov
outsl
fdivrs
iret
ljmp
mov
test
inc
out
adc
pop
jo
sti
pop
or
insb
mov
insb
pop
mov
mov
sub
loopne
mov
adc
sub
and
test
addl
pop
cli
or
mov
adc
pop
push
add
lods
pop
loope
in
roll
pusha
xchg
repz
sbb
xor
mov
or
and
popa
sbb
pop
pop
pop
cs
movsl
mov
es
push
pop
imul
gs
xchg
dec
xor
mov
jb
lahf
mov
cli
sub
mov
xor
xor
dec
popa
pop
pop
push
xlat
rcrb
ret
dec
jg
sub
lahf
add
push
cmp
mov
inc
aad
je
or
hlt
idivb
sub
pop
fs
and
ss
xchg
cltd
and
insl
arpl
int
mov
and
negl
scas
inc
jmp
xor
push
mov
mov
mov
movsb
mov
fmuls
arpl
fdivrs
dec
shlb
cmp
das
or
sbb
push
sbb
or
es
call
fistpl
jge
cmp
mov
loopne
loopne
lret
test
mov
into
movsb
stos
daa
test
cltd
and
or
shll
stos
dec
pop
jl
cmp
and
pop
inc
and
stos
popa
sub
mov
or
jae
arpl
pop
mov
pop
mov
inc
faddp
push
or
or
movsl
pusha
test
jp
or
nop
pop
jecxz
mov
jo
add
fcmovu
xchg
mov
sbb
jmp
je
sbb
ror
outsb
mov
iret
es
insb
xor
sub
leave
movsl
or
pop
shrb
push
and
sbb
pop
addl
mov
push
dec
aad
or
inc
and
pusha
push
cmp
pop
clc
ret
repz
sbb
jp
jnp
ret
inc
inc
mov
loopne
loopne
sub
inc
or
inc
testb
cmp
and
call
add
hlt
scas
and
dec
and
fisttpll
sub
jns
mov
cmp
push
sbb
sbbb
ret
sbb
pop
icebp
push
xor
dec
pop
mov
enter
pop
adc
leave
sti
fwait
mov
jmp
push
aad
int
xchg
jmp
ret
sbb
sbb
nop
sti
add
dec
cmp
dec
aam
mov
test
jecxz
inc
sar
into
insb
pop
data16
jg
adcl
test
xchg
adc
push
inc
imul
aam
mov
push
je
das
or
xchg
outsb
fcmovne
mov
mov
mov
sbb
push
xor
cmpsb
push
xchg
test
inc
cmp
and
add
sbb
sbb
xor
push
adc
or
lahf
sub
sbb
push
or
pop
roll
negl
sub
ret
sbb
xchg
push
cmp
imul
dec
mov
fisubs
repz
dec
sub
aaa
pop
lds
adc
fsubrp
push
mov
je
xorb
jl
int
jae
add
sbb
lods
cmp
out
push
or
or
cmp
loope
or
enter
mov
in
jmp
in
inc
lods
and
push
testl
lret
out
mov
js
xor
mov
insl
fimuls
fildl
mov
mov
icebp
jne
jg
idivl
cltd
cmc
scas
add
gs
hlt
popf
int3
cmp
mov
testb
inc
pop
and
pop
mov
aam
push
out
xlat
mov
jne
lahf
push
andb
imul
lcall
lahf
loop
lcall
and
xchg
push
adc
js
sti
rcl
and
pop
leave
arpl
scas
loopne
xchg
sbb
inc
cmp
xchg
cmp
pop
dec
dec
sub
out
movsb
sub
jne
mov
inc
lods
adc
shl
add
fcmovnb
sti
std
pop
cld
test
jne
cmp
inc
mov
mov
fwait
imul
xor
cmp
cld
mov
lock
jmp
push
push
cmpsl
sbb
lahf
mov
inc
pop
ret
enter
inc
popa
push
in
jg
add
addr16
mov
lods
lock
out
xchg
int3
xor
push
mov
fdivs
dec
shll
adcl
mov
xchg
lret
sub
or
and
mov
mov
sbb
pop
repz
cs
sub
test
and
lds
push
fnstcw
fstpl
pop
es
xorl
scas
ret
dec
cmpsl
in
hlt
pop
pop
icebp
xlat
xchg
push
pop
push
aas
jl
stos
outsl
test
mov
aad
in
mov
outsb
dec
mov
cmp
int
icebp
push
sub
jl
jno
fcomip
pop
jns
fidivrl
push
jnp
cmpsl
cli
pop
fnsave
push
test
mov
in
jg
repz
cmp
push
popa
xor
test
mov
dec
add
pushf
xchg
fcmovne
pop
hlt
repnz
repnz
insb
mov
js
mov
inc
call
ret
mov
imul
mov
repnz
push
sbb
and
jne
shrb
lcall
xchg
ret
xchg
lock
stc
lret
jo
xchg
sbb
cmp
rcll
lods
mov
std
movsb
xchg
push
lds
pop
outsb
sbb
arpl
aaa
mov
es
mov
mov
push
gs
ret
jnp
push
push
jns
out
xor
pop
int3
aas
jmp
popf
hlt
in
xchg
or
mov
push
rorl
jns
test
dec
dec
adc
push
push
cmp
cld
mov
movsb
cltd
sbb
push
mov
mov
inc
jecxz
cmpsb
and
outsl
mov
mov
pop
int3
jb
sbb
nop
stc
or
stos
pop
es
jns
sub
lahf
cwtl
test
lcall
push
lahf
std
mov
or
and
cmc
insl
rcrb
sub
dec
gs
aaa
sub
movsl
jnp
aas
xor
das
fsts
scas
xchg
fs
sbb
popf
incb
sub
xchg
lcall
fwait
mov
js
fwait
mov
jbe
cmp
je
xlat
ficoms
fistps
mov
mov
push
jbe
adc
push
and
pop
bound
pop
clc
out
outsb
cld
inc
in
or
xchg
cmc
shlb
int
popf
mov
inc
jno
xchg
cmp
out
jne
mov
jns
fs
subl
pop
dec
mull
test
in
inc
mov
imul
ret
pop
sti
cli
fisubrl
cmp
or
pop
dec
mov
sbb
insb
cmpsl
push
int
dec
inc
aam
lods
stos
test
jg
mov
rorw
aad
jp
mov
clc
or
jb
mov
mov
mov
insl
mov
mov
adc
rorb
jbe
xor
push
cmp
jle
jne
mov
lock
addr16
fdivl
sub
dec
and
mov
xchg
negb
fcoml
outsl
or
shrl
mov
xchg
arpl
dec
jb
and
in
mov
mov
inc
stos
add
push
dec
sbb
popf
repz
rolb
pop
mov
popf
sbb
fstps
jno
jne
pop
out
inc
in
push
sub
mov
and
xor
ret
out
and
lahf
daa
or
or
jbe
mov
mov
test
cmpsb
push
aad
or
clc
cld
push
jg
xchg
jae
push
in
jmp
xchg
jnp
sub
imul
ds
add
loope
xor
cmp
dec
dec
fldt
push
imul
mov
pop
sti
mov
push
dec
and
iret
in
inc
subb
sahf
xor
andb
inc
xchg
mov
xchg
test
cmpsb
data16
out
pop
xchg
sub
cmp
mov
repnz
icebp
xor
adc
mov
pop
test
jnp
push
ret
sti
mov
call
ret
cld
lcall
inc
jge,pt
cmp
cmpb
push
in
sahf
push
mov
pop
or
mov
pop
cmp
testb
add
jbe
sbb
stos
dec
loopne
xlat
rorl
clc
xor
jmp
in
test
mov
jae
lods
mov
jge
ds
out
push
fldt
cltd
ja
lret
call
jns
xchg
and
mov
repnz
rorb
lods
or
jecxz
hlt
lret
cltd
int
movsl
cli
loop
dec
xchg
in
loop
dec
sbb
stc
adcl
push
sbb
sub
pop
fnstenv
mov
fucomip
ds
xor
std
mov
or
negl
and
in
in
test
insl
scas
repnz
stos
inc
nop
into
divb
and
ds
inc
mov
or
lods
sbbb
and
popa
fmuls
aam
fmulp
movsl
push
cltd
sbb
xchg
mov
mov
gs
push
mov
sahf
xchg
ljmp
dec
and
test
fiadds
mov
popl
pop
xlat
ljmp
cmpsl
inc
mov
jp
lock
push
or
mov
xchg
hlt
mov
fwait
cmpsb
aam
ret
push
push
repnz
push
mov
mov
in
decl
lea
iret
xchg
inc
fwait
cs
jo
and
faddp
loop
aad
ja
mov
add
jle
pushf
pop
jnp
or
std
or
fisttps
loop
in
jecxz
pop
fsts
add
sub
mov
pop
xchg
jae
push
scas
out
popa
adc
pushw
iret
mov
jne
adc
imul
mov
dec
jle
cmpxchg
pusha
dec
scas
xor
dec
inc
aad
jbe
pop
loop
fnstcw
or
push
push
add
mov
xchg
mov
adc
jmp
sub
iret
bound
int3
add
mov
popf
inc
mov
mov
js
xlat
or
dec
dec
mov
stos
aaa
or
pop
aas
push
dec
in
int
mov
jecxz
sub
mov
xchg
dec
add
pop
aad
lahf
push
pop
push
mov
scas
fidivl
lahf
cmp
cmp
daa
jne,pt
mov
out
pop
mov
inc
push
cwtl
ljmp
shll
out
imul
mov
dec
nop
lahf
enter
pop
jle
daa
mov
in
jno
adc
push
fiaddl
aaa
out
int3
sub
enter
mov
and
nop
jb
mov
push
mov
xchg
jle
inc
jno
mov
fnstcw
mov
lea
mov
sbb
jns
sub
mov
push
lea
popf
sub
inc
cmp
cmpsb
fbstp
test
jb
sub
cmc
shl
and
cmc
mov
mov
jp
mov
dec
aam
stos
mov
or
fwait
push
std
add
int3
pop
inc
jmp
ret
inc
mov
int3
mov
mov
mov
shl
dec
pop
in
movsb
pop
dec
lods
test
out
dec
push
sbb
sub
pop
sub
stos
mov
jecxz
or
jbe
inc
loopne
or
imul
xor
jecxz
outsb
push
dec
jbe
je
pop
test
dec
movsb
pop
pop
outsb
mov
mov
wbinvd
fnstenv
fbld
fucomip
das
and
jbe
fwait
jge
adc
scas
aam
movsb
outsb
mov
hlt
xorb
sub
sbb
dec
cmp
movsb
fmuls
jns
pop
push
xchg
lret
adc
pop
lock
loop
dec
push
test
sbb
out
dec
mov
sub
xor
bnd
jb
imul
aas
jne
dec
cmc
sub
in
scas
push
pop
sub
packuswb
lahf
xor
sbb
fsubr
repnz
ja
push
int
xchg
lahf
adc
roll
pop
jae
sarb
mov
cwtl
out
insl
test
jo
xchg
jno
je
loopne
test
insb
mov
std
clc
adc
inc
ret
or
aaa
push
hlt
movsl
cmp
or
repnz
icebp
push
lahf
mov
push
mov
inc
add
into
fwait
xor
and
push
adc
daa
sub
mov
mov
test
fs
pop
push
pop
iret
cmpsl
sub
mov
sub
mov
cmp
scas
stc
shl
sbb
xor
push
jae
add
and
and
dec
pop
jb
cmp
stc
xor
fcmove
daa
cs
lret
imul
outsl
adc
sub
mov
mov
push
mov
mov
mov
adc
repz
je
sbb
enter
mov
cmp
push
cmp
sbbb
adc
mov
scas
cltd
adc
dec
lods
fisubrl
test
fs
push
fcomp
movsl
mov
mov
mov
sbb
das
add
sarb
mov
fstl
xchg
fucomip
adc
fiadds
xor
outsb
lea
push
test
push
insl
dec
and
add
mov
out
imul
fucomi
into
sub
je
lcall
call
xor
insl
add
mov
mov
fnstcw
fstpt
cmp
into
lahf
pushaw
inc
mov
insb
inc
sti
cmpsb
cmc
into
int3
mov
int
fbstp
push
push
xor
mov
in
mov
scas
jns
or
cmp
or
movsb
dec
push
adc
popf
xchg
insb
loopne
test
out
push
lods
out
in
xchg
dec
stos
stos
es
push
lock
mov
paddd
fsubrs
jmp
adc
jno
orl
inc
inc
jle
push
pop
or
in
ret
mov
cmp
mov
popf
inc
push
pop
shlb
lds
arpl
vmovq
test
add
or
fldt
imul
push
inc
outsl
sbb
pop
hlt
sti
dec
mov
out
addr16
adc
cmp
xor
dec
testb
enter
scas
xor
inc
jl
jg
test
dec
in
ss
shl
out
sbb
mov
jbe
jbe
scas
das
mov
fdivrs
inc
je
sub
popf
mov
or
jge
outsl
divb
aad
jmp
push
jns
mov
mov
sbb
nop
shl
push
ret
dec
ror
fsubrs
repz
mov
loope
cli
mov
aam
fsubrl
push
add
jle
out
inc
mov
adc
jl,pt
iret
popa
cmp
mov
mov
cmpsl
popf
push
xchg
fisubrl
pop
lcall
rcll
or
xchg
jge
sarb
mov
push
dec
mov
add
es
ljmp
lret
xchg
or
mov
mov
repz
mov
int3
icebp
sbb
xor
pop
sub
rol
sbb
scas
adc
push
push
sahf
fstpl
cli
imull
scas
and
js
jne
dec
aas
movsb
xchg
push
jle
ljmp
push
jo
shl
rcll
hlt
and
lcall
sarl
jecxz
cmp
lds
je
fiadds
ja
cmp
mov
fbld
sub
int
loope
pushf
xor
mov
ret
cld
push
data16
mov
pop
repnz
fwait
inc
pop
leave
lret
xchg
sbb
das
nop
xor
mov
call
sub
dec
fstpt
call
cmp
sub
pop
cmc
insl
test
iret
scas
add
notb
jno
insb
sti
push
loop
leave
mulb
and
incb
divb
pushf
mov
xor
es
mov
mov
lcall
fiaddl
sub
js
jl
je
push
aas
cmp
testl
in
dec
xchg
pop
inc
adc
push
icebp
sbb
les
jns
notb
test
mov
testb
fstpt
shlb
incl
sti
or
adc
mov
xor
jmp
mov
pop
cmpsl
and
inc
push
mov
mov
mov
inc
ljmp
cmp
xor
mov
cmpl
xchg
in
insb
cmp
enter
cmc
sub
mov
insl
jmp
lods
mov
out
pop
mov
mov
sbbl
sub
pop
imul
or
and
sub
cmpsl
adc
mov
xor
sbb
je
cmpl
popl
nop
ret
cld
jne
addr16
push
hlt
push
in
add
pop
inc
aaa
xchg
xorb
xchg
and
sub
push
jb
pop
add
out
jmp
mov
add
popa
mov
dec
mov
shrb
jmp
call
std
leave
jnp
fs
ret
mov
inc
push
jge
inc
and
mov
imul
scas
add
jnp
xchg
inc
pop
je
cmp
pop
sti
jbe
dec
ret
addr16
pop
mov
hlt
in
in
add
es
js
jae
pop
icebp
mov
pop
inc
mov
mov
and
cmp
mov
mov
rcr
push
jno
insl
sbb
insl
jbe
and
popf
std
jnp
fnstcw
icebp
scas
aas
push
inc
outsl
cltd
pushf
enter
rcrl
jp
dec
mov
dec
ljmp
push
fsubp
popf
or
push
mov
mov
mov
movsb
ficoms
push
sbbb
cmp
in
lods
sub
call
fwait
fwait
out
aad
bound
add
sahf
and
cld
fstps
lcall
pop
push
cmp
cmp
push
push
inc
push
in
inc
jae
lods
sub
fsts
insl
xor
mov
jge
pop
mov
sub
int3
out
into
inc
cmp
pop
sbb
stos
ds
sub
outsb
fsubrl
test
lcall
movsl
dec
jbe
xor
in
jge
sbb
xchg
sub
jno
jno
mov
data16
ret
xor
or
cmpl
inc
xor
adc
inc
js
pop
aaa
stos
std
push
jg
pop
clc
pop
pop
mov
xchg
add
pop
cwtl
jp
pusha
inc
sbbb
ja
or
loope
xchg
gs
mov
mov
add
push
xor
and
ret
add
cmp
xor
push
in
mov
jmp
rolb
bound
cmp
cmp
adcb
cmp
jmp
cwtl
sub
dec
in
sbb
icebp
mov
inc
scas
imul
push
popa
xchg
or
int3
pop
sarl
add
mov
xor
inc
push
call
int3
mov
cmovnp
jnp
mov
push
int
add
sbb
stc
stc
xchg
cmpsb
fcoms
fs
ja
in
mov
xchg
jecxz
pop
sbb
jb,pn
lret
mov
mov
sub
lods
inc
jg
adcb
cmp
test
cmpsb
and
inc
loope
divl
pop
mov
pushf
std
repz
inc
adc
inc
ljmp
repnz
jmp
or
cmpsb
stc
cmp
fs
xchg
mov
xchg
cmp
std
int3
xor
inc
inc
push
xor
fwait
jecxz
mov
sbb
mov
inc
pop
xchg
xor
mov
or
push
mov
stos
call
mov
hlt
jae
adc
add
adc
mov
push
jl
movsl
sarl
test
cs
jb
jg
aaa
sahf
cmp
outsl
add
test
push
add
inc
call
fildll
sahf
xor
fbld
dec
imul
rcrl
leave
ljmp
testl
fstpt
inc
arpl
dec
shl
cmpsl
sub
rcrb
xchg
sti
loopne
gs
xchg
movsl
hlt
aaa
xorb
and
cs
icebp
mov
mov
xor
dec
fists
jno
ss
dec
sub
jb
push
xlat
mov
fistpl
test
cs
in
aaa
push
mov
test
xchg
xchg
and
sbb
jo
push
mov
dec
pushf
sbbl
lea
imul
shlb
mov
mov
jge
shll
xlat
and
jmp
push
jnp
push
paddq
call
sbb
stos
xchg
repnz
xor
inc
mov
mov
xchg
mov
pop
scas
lret
test
push
xor
cli
loop
jnp
mov
sbb
inc
pop
les
hlt
repz
enter
arpl
sub
jl
loopne
je
ret
fdivrl
dec
sbb
add
dec
test
fst
mov
leave
cmp
or
je
dec
out
test
mov
or
add
orl
adc
inc
fstpt
dec
ljmp
aam
popf
lcall
enter
or
data16
mov
xor
cli
movsb
add
in
add
std
jp
adc
xchg
jge
lods
mov
mov
andb
scas
mov
cld
push
pop
mov
adc
inc
stos
loop
lds
fstpl
mov
iret
mov
sbb
fldt
ret
mov
addr16
jecxz
leave
in
cmpsb
sub
out
in
loop
inc
stos
ss
push
movsl
fsubrl
in
dec
cmp
jnp
push
ljmp
lea
jnp
add
test
mull
push
stos
xor
lahf
and
dec
mov
std
fs
push
cwtl
fimull
xor
xor
sbb
movsl
lahf
dec
push
dec
pop
jmp
test
movsl
insl
addr16
aas
into
aaa
ret
and
lock
sub
jmp
mov
ljmp
jb
jmp
mov
mov
sub
lods
xchg
mov
fidivrl
pop
xchg
pop
inc
sahf
aad
lret
fcoml
div
pop
jle
or
insb
cmc
mov
mov
in
fs
mov
test
cmp
mov
popa
sbb
rcr
add
addl
in
xlat
xor
push
fnsave
insb
mov
repz
mov
lret
lods
cs
or
pop
mov
adc
add
lea
xor
and
cmc
into
cmp
push
pop
adc
das
sub
enter
test
sti
inc
push
and
hlt
sahf
aad
jno
jbe
cmp
xchg
in
mov
push
cmp
inc
insb
rcll
int3
mov
jmp
fsub
adc
jno
in
sub
lcall
jle
test
orb
out
mov
mov
jae
test
adc
adc
test
negl
sub
push
les
push
sar
enter
shll
mov
es
int
insl
sahf
xor
mov
jl
push
xlat
aaa
aad
xor
mov
in
sub
out
xor
imul
incb
aad
inc
mov
shlb
sub
or
xchg
and
inc
and
cmp
sbb
in
pop
adc
in
out
dec
ret
dec
xchg
daa
insb
clc
adc
mov
lcall
jmp
sbb
in
aas
and
jecxz
xchg
inc
or
out
fiaddl
rorb
jo
hlt
jmp
leave
xor
mov
push
adc
push
in
lods
dec
enter
mov
mov
or
xchg
push
jo
xchg
dec
lock
and
xor
xor
pop
inc
inc
or
test
sub
mov
loopne
notl
pop
cmp
fmuls
daa
mov
cmpsb
or
or
fmull
inc
pop
and
outsb
cs
adc
insl
mov
jno
sub
movsl
and
test
fistpll
enter
jne
sbb
jle
xchg
sti
lods
mov
cmp
xlat
movsl
pop
fnsave
in
mov
les
mov
ds
push
push
int3
cs
mov
cmpsb
into
mov
stos
mov
inc
cli
nop
loope
jno
cmp
in
mov
shll
mov
fcoms
push
push
xchg
lods
fistpl
or
jo
insb
cmc
and
ja
movsl
lcall
pop
cmp
push
dec
das
outsb
jle
mov
cmp
cmp
fcoml
fldcw
sbb
mov
dec
xchg
test
fldl
or
fwait
jmp
fnstsw
andl
fimull
pop
xor
mov
and
mov
or
inc
jge
sbb
mov
lahf
inc
dec
mov
xchg
sub
fiadds
or
xor
fs
and
add
add
movsl
out
xor
mov
inc
in
mov
pop
ret
xor
xchg
cli
jecxz
inc
insb
mov
add
pop
addr16
pop
mov
cmp
stc
inc
popf
sub
outsl
dec
test
pop
inc
add
adc
push
stc
stc
rolb
out
rcrb
xlat
inc
or
pop
sbbb
inc
mov
jp
pop
dec
inc
rorl
push
imul
push
mov
inc
sti
fs
xorb
jns
pop
push
scas
push
inc
sbbl
mov
sub
or
rcrl
push
inc
inc
aam
imul
pushf
jmp
pop
sub
xchg
jp
icebp
insl
fiaddl
and
jecxz
inc
in
icebp
dec
mov
adcl
jo
repz
lret
test
xchg
and
fs
fidivl
test
xchg
ret
jmp
or
insb
push
in
mov
stos
out
lret
sbb
pop
test
and
or
mov
dec
addr16
les
sarb
sub
sbb
mov
xchg
daa
outsl
shrl
enter
inc
repz
xchg
mov
or
pop
int
stos
in
adc
xchg
xor
sub
jne
rcrb
bound
loope
rcrl
std
test
jnp
cmp
stos
mov
push
sub
je
and
and
adc
push
shrl
or
lea
ret
imul
xor
mov
ficoml
mov
sahf
scas
lods
call
pop
mov
jle
and
decb
pop
xor
scas
rcr
inc
cmp
mov
jbe
mov
jb
cs
inc
xacquire
mov
xor
dec
xchg
mov
loopne
jne
sub
inc
stc
add
insb
fwait
out
stc
or
sub
imul
es
sub
movsl
stos
push
ja
aam
push
in
dec
outsb
cs
loope
rolb
cmp
pop
das
cmp
cld
xor
fists
dec
inc
movsb
rcr
inc
hlt
pop
insb
jg
ds
pusha
les
and
xor
lret
inc
inc
add
cld
pop
push
hlt
xchg
jne
nop
popf
stos
and
push
pop
pop
or
lock
mov
std
xchg
xchg
popa
xchg
repnz
stos
cmp
enter
fcoms
cmp
inc
and
and
aaa
sarb
insl
push
xor
xchg
jae
pop
je
dec
sahf
jnp
pop
mov
lret
pop
or
rep
xor
jnp
rorb
insl
in
fcoms
shlb
pop
dec
push
dec
stos
cmp
jbe,pn
je
mov
jbe
je
test
je
jecxz
cmp
test
cwtl
lea
test
add
ret
test
push
xor
jp
movsl
mov
push
adcb
addr16
loop
cmp
mov
cmc
pop
enter
hlt
ret
jle
int3
out
mov
pop
lods
int
cltd
sub
push
lret
and
nop
mov
js
fisubl
add
inc
cwtl
jge
pop
mov
jns
cmp
sbb
mov
cmp
mov
cmp
mov
mov
pop
dec
fcoml
shll
dec
pop
or
xchg
jecxz
fadds
sub
mov
cmpb
pop
enter
xchg
push
pushl
and
in
push
and
ljmp
add
out
xchg
stc
and
in
sub
addr16
xor
rcll
dec
mov
imul
subb
loop
sbb
in
adc
xchg
xor
mov
dec
lahf
pop
push
scas
add
js
mov
xor
lret
push
popl
stos
jno
pop
repz
or
and
adc
lret
cltd
add
das
jb
pop
push
dec
es
add
ret
loope
sbb
pop
jns
adcb
cltd
mov
push
mov
addr16
adc
pop
ror
inc
ljmp
sub
cmp
cmp
mov
into
loop
lds
push
xlat
xchg
adc
rcll
es
cmp
add
andl
sti
addb
ret
fstpl
lcall
inc
sbb
shrl
bound
or
inc
push
out
jge
and
aad
fldl
sub
cltd
shlb
xchg
divb
jnp
pop
xor
imul
mov
mov
and
idivl
stc
push
ret
xor
in
dec
pop
stos
stos
imul
mov
lea
sub
cmp
jns
inc
fidivrs
ffreep
pop
dec
add
push
in
cwtl
aam
ljmp
cltd
pop
sub
pop
xchg
mov
out
xchg
mov
push
mov
lea
out
push
and
rcll
push
cltd
cmp
mov
rcll
sub
test
mov
jl
xchg
fisubrs
mov
decl
jne
mov
pushf
cmp
or
lea
dec
xchg
loopne
mov
cmp
inc
ja
add
mov
push
sbb
insl
xor
call
mov
sbb
int
and
jo
ja
mov
test
xor
outsb
sub
mov
pop
das
adc
stos
cmpsb
verr
js
lea
loopne
insb
lret
fstpl
sbb
fwait
out
push
or
fadds
sbb
xchg
xor
lods
pop
mov
pop
pop
and
movsb
shl
mov
dec
shlb
mov
sbb
xchg
mov
dec
es
cmp
pop
pop
test
cmp
pop
add
xor
add
jg
jb
leave
lret
in
mov
mov
xchg
mov
and
dec
scas
or
test
and
mov
int3
mov
add
lea
cltd
daa
popa
jno
xchg
inc
cmp
pushf
inc
fisubs
ds
shr
cwtl
pop
push
enter
mov
repz
out
mov
sbb
popf
push
repz
pop
and
adc
mov
adc
filds
out
cmpl
and
mov
sub
jp
push
loop
jb
mov
movsl
or
pop
inc
in
imul
test
dec
cld
movsb
mov
call
ja
lds
cmp
sub
xor
int3
arpl
pop
std
jb
jge
xchg
iret
mov
rclb
outsb
pop
mov
add
repz
xchg
hlt
jnp
cltd
add
or
jno
cmp
adc
fld
bound
push
push
push
mov
pop
cmc
sbbb
jns
pop
mov
mov
outsl
repnz
and
jge
xor
dec
inc
mov
pop
test
add
mov
and
xchg
pop
pop
sarl
and
xor
and
imul
dec
adc
jle
xchg
lret
negl
dec
mov
nop
cmp
ss
call
shlb
pop
aam
scas
adc
test
sub
add
jge
jns
movsl
rorb
lock
xlat
or
and
xor
mov
lret
push
add
dec
shr
movsl
fisubrs
xchg
sarb
jnp
or
pop
xor
cmp
push
sbb
xchg
daa
adc
sub
pop
mov
pop
fimuls
insb
sbb
mov
xchg
jno
rcll
pop
cmpsl
cmovbe
pop
int
jns
in
sub
jnp
pop
loopne
inc
lahf
ds
push
rcrb
jae
pop
es
add
push
adc
xchg
inc
pop
xor
jp
mov
push
aad
iret
jo
iret
sti
lcall
or
outsb
jne
mov
dec
enter
cmp
sub
sbb
stos
mov
mov
bound
aas
mov
mov
aaa
stc
xchg
movsl
dec
cmc
cwtl
insl
or
in
xor
sbb
fistl
jne
mov
nop
std
gs
inc
and
cmp
sbb
add
and
cmp
jne
or
mov
mov
cs
dec
xchg
scas
jl
lds
cmpsb
xor
es
mov
pop
nop
shrb
in
out
dec
and
inc
addl
data16
pop
lret
cmp
sbb
cmp
test
pop
or
sbb
test
pop
mov
test
in
ror
call
push
in
out
add
xchg
add
stos
add
jno
push
outsl
mov
mov
xchg
je
dec
cmpsl
scas
dec
xlat
sbb
push
xor
cmp
mov
sbb
mov
call
jecxz
xchg
mov
mov
fiaddl
cmc
sbb
push
shll
mov
test
rcll
xchg
les
in
jecxz
sub
adc
adc
dec
cmp
cmc
out
xchg
or
adc
orb
fdivr
adc
repz
cmpb
fistpll
hlt
and
cmp
add
or
cs
or
cmp
stos
mov
xchg
push
std
in
xlat
xor
in
popa
fisubrl
repz
mov
xor
mov
dec
jle
icebp
stc
and
fsubrs
shll
ljmp
jge
arpl
pop
pop
in
sahf
arpl
fdivr
jne
decl
jecxz
int3
fwait
test
cmp
add
and
or
and
arpl
or
and
repz
xchg
rorl
xchg
jl
add
dec
or
fstpt
xlat
add
dec
mov
test
fcomps
ficoml
inc
je
push
fldenv
cmc
daa
fwait
jns
lods
mov
xchg
push
fidivrl
add
jnp
jbe
dec
cmpsb
adc
or
jg
leave
in
lret
inc
xchg
sti
and
kortestw
xor
scas
stc
adc
pushf
jae
xor
or
fdiv
test
mov
mov
jmp
xor
stos
inc
test
or
lcall
and
pusha
cltd
ds
les
mov
or
or
push
inc
pop
insl
cmp
dec
fistl
mov
add
sbb
fsubrs
pop
test
and
and
sbb
mov
mov
sarb
clc
sub
in
cmp
mov
add
sub
cmp
ja
or
imul
clc
into
cltd
push
mov
sbb
shrb
cs
cltd
repnz
inc
hlt
xchg
dec
and
push
or
stos
mov
mov
adc
xchg
outsb
xchg
or
inc
subb
mov
xchg
out
daa
xchg
ss
or
cmp
push
rcll
jp
out
test
nop
fsubrl
aas
push
jbe
adc
out
arpl
mov
mov
add
adc
imul
test
orb
sub
filds
push
pop
dec
sbb
lcall
fs
loopne
sbb
clc
push
mov
pop
inc
in
in
mov
inc
ret
sbb
mov
outsl
scas
ss
lock
bound
pop
xchg
lret
mov
jno
out
stos
jae
stos
pop
arpl
mov
mov
lcall
push
lahf
mov
push
scas
in
arpl
orl
xchg
cmp
dec
mov
inc
jns
sbb
sbb
adc
out
arpl
xchg
loopw
push
cs
stos
add
jae
jae
xchg
jnp
or
mov
inc
jns
and
movsb
dec
sub
ljmp
inc
roll
pop
mov
cli
or
lods
xor
adc
in
shll
bound
adc
sbb
mov
sub
out
pop
xor
mov
mov
out
add
add
pop
hlt
cmp
add
test
int
mov
sub
fistpll
pop
mov
int
jecxz
scas
ficoms
pop
xchg
loopne
std
cmp
shrb
inc
data16
cmp
add
sub
in
insb
jne
shrb
mov
push
mov
cwtl
es
adc
into
nop
imul
or
xor
int
push
xor
jp
jns
fcomip
dec
jle
stos
les
or
mov
pop
hlt
rclb
jmp
ljmp
mov
fmul
stos
aad
loopne
cmpsl
xorb
or
mov
sub
rcll
sub
decb
repnz
jo
mov
push
mov
mov
mov
ss
and
jmp
les
dec
es
adc
push
mov
sti
aam
fbld
add
mov
mov
and
pop
mul
push
add
push
pop
pushf
push
pop
into
icebp
add
popa
mov
and
hlt
sahf
xor
xlat
shrb
cltd
dec
or
mov
sbb
bound
loopne
xchg
xchg
data16
inc
ds
inc
sub
aaa
in
scas
jmp
stc
movsl
xor
mov
jmp
aad
inc
push
clc
repz
mov
aas
popa
mov
in
mov
push
sub
adc
mov
xlat
sarl
movsb
pop
repz
mov
test
lds
dec
popa
sub
cs
dec
daa
or
imul
popw
ret
aaa
sub
out
push
mov
and
or
stos
push
clc
jl
in
into
or
out
and
and
pusha
add
movsl
add
call
fsubs
jb
and
or
mov
es
pop
mov
js
push
bound
shll
dec
inc
add
mov
insl
pop
ret
adc
pop
cwtl
rolb
pop
sahf
push
xchg
gs
jns
mov
je
pop
ror
loope
in
dec
or
mov
ret
movsl
rolb
inc
shl
inc
or
mov
lahf
pop
arpl
dec
imul
lcall
das
pop
call
inc
ja
pop
mov
xchg
repz
mov
ret
dec
jb
add
shlb
imul
ss
jmp
pop
push
in
inc
popa
scas
mov
xor
rclb
int
out
xor
leave
daa
lret
cmc
cwtl
jno
jmp
sub
cltd
mov
mov
pop
xor
in
push
rclb
aad
ret
mov
outsb
subb
cmp
mov
inc
mov
ret
cmp
iret
xor
inc
lret
cld
sbb
lahf
add
mulb
lds
nop
jnp
mov
pusha
or
out
push
shlb
pop
fstpl
dec
std
dec
stc
ja
mov
mov
mov
loope
or
jnp
testb
jbe
xchg
orb
cwtl
loope
inc
mov
inc
fdivrs
int
xor
std
imul
jmp
and
mov
pushl
and
icebp
in
mov
sub
sbb
push
xor
or
loop
jg,pt
mov
and
scas
sbb
lods
andb
sti
loope
sbb
mov
sbbb
xchg
shrb
push
inc
mov
xchg
shl
inc
push
add
sbb
aaa
push
lahf
repz
or
ret
adc
mov
pop
xchg
lret
cmpsb
push
mov
pop
in
push
loope
fcmove
mov
jmp
pop
sub
icebp
iret
mov
mov
or
cmpsb
pushf
adc
divl
dec
mov
dec
xchg
in
imul
pop
push
ss
lods
ja
fwait
sub
int
movhps
fnsave
pop
dec
adc
inc
mov
pop
arpl
xor
push
dec
pop
mov
pop
dec
pop
push
and
sbb
and
in
test
xor
jbe
xchg
push
or
adc
cltd
mov
cltd
jo
push
mov
or
rcl
xor
dec
sbb
sub
pop
in
insb
xor
add
in
icebp
enter
jmp
push
fisubrs
pop
dec
iret
push
inc
je
fwait
mov
icebp
lret
insb
mov
fiaddl
test
mov
jge
mov
imul
jbe
nop
sub
xchg
mov
xchg
adc
or
xor
or
push
adc
mov
scas
fstpl
inc
fsub
xchg
add
adc
std
pop
inc
rcrl
test
adc
mov
shrl
aas
cs
pop
adc
cmp
mov
mov
add
xchg
xchg
int3
cmpsl
cwtl
outsl
pop
mov
sti
mov
mov
gs
mov
mov
lock
adc
dec
sub
mov
in
out
rol
cs
fisttpll
pop
loop
adc
adc
push
mov
inc
adcb
aaa
jo
mov
adc
inc
out
mov
shl
out
lea
pop
fldcw
inc
xor
hlt
loopne
add
pop
add
pop
mov
jg
scas
cmc
xor
out
insb
leave
or
popa
jp
out
pop
add
aam
adc
pusha
inc
inc
lcall
clc
imull
pop
xlat
jl
arpl
fsubs
xor
add
fcmovu
loope
les
sub
aad
xchg
mov
fcoml
push
lahf
dec
fisubl
xor
ficompl
jne
rcrl
stos
adc
nop
dec
fxch
cmpsl
inc
pushf
daa
rorb
inc
les
pop
js
dec
mov
mov
xchg
jae
mov
ficompl
add
dec
cwtl
mov
movsb
cmp
or
dec
into
xor
jno
std
jno
lods
addr16
or
mul
dec
sbb
mov
push
in
and
xor
fadd
dec
push
push
mov
icebp
mov
xor
mov
out
mov
loopne
hlt
in
aad
sub
mov
cltd
stc
inc
mov
mov
popa
mov
mov
std
or
icebp
inc
add
mov
push
shrl
mov
fdivs
inc
std
sbb
scas
loope
or
adc
adcl
das
pop
in
xlat
in
inc
jmp
ljmp
testb
lahf
push
clc
push
push
lret
fs
and
sub
popa
js
dec
pop
loop
xlat
ret
push
xor
ja
xchg
mov
lods
mov
cmc
mov
out
rol
adc
sbb
out
xor
imul
mov
inc
mov
xor
or
mov
loop
out
xor
and
and
lret
test
push
mov
mov
mov
out
leave
rcrb
pop
sbb
lods
in
repz
hlt
xchg
inc
jl
repnz
or
add
xor
jno
sub
ljmp
shrb
mov
mov
fdivr
mov
push
outsl
sub
adc
sahf
in
ret
jmp
dec
jo
push
jmp
or
fcoml
mov
dec
cld
xor
xchg
repz
inc
sub
insb
cmp
or
addr16
daa
fisttpll
or
leave
rcll
shll
adc
repz
lods
jecxz
das
push
ds
xchg
jle
repnz
cli
daa
ds
sbb
adc
and
push
out
jne
xor
andl
in
adc
out
aaa
xchg
cltd
ds
mov
push
or
push
sbb
dec
rorb
xchg
add
sbb
mov
mov
xchg
loopne
and
or
or
test
inc
sti
adc
mov
repnz
imul
sbb
div
stos
jge
mov
enter
in
outsl
inc
incl
mov
pop
into
push
jo
jg
sar
jae
mov
push
pop
cmpsl
test
lock
pop
scas
adc
mov
and
sarb
jb
mulb
popa
cmp
pop
mov
pop
movsl
and
fisttps
test
or
fsqrt
adc
adc
xchg
pop
leave
addr16
jno
pop
into
adc
mov
mov
mov
pop
lcall
or
inc
xor
cmp
int3
fnstenv
mov
xchg
imul
dec
lret
mov
cmp
mov
or
les
jb
push
mov
sub
cmpsl
xor
xorl
mov
cld
scas
cltd
lods
mov
xor
add
stos
cmp
push
push
xchg
insb
pop
loop
lods
dec
fs
mov
shrb
gs
jno
shr
cwtl
add
add
push
repnz
loope
cmpsb
mov
lcallw
fnstcw
lahf
into
outsl
mov
cmpsl
jle
movsl
inc
dec
push
mov
xchg
xchg
add
pop
dec
sahf
inc
mov
aas
push
mov
clts
mov
in
test
sarb
pop
lock
push
mov
push
add
inc
xor
das
and
out
dec
lods
test
dec
fs
mov
sahf
inc
fld1
push
sbb
cmpsb
sarl
jb,pt
in
rclb
or
pop
mov
lock
nop
and
and
int
mov
add
push
jae
and
dec
push
dec
int3
pop
out
js
push
icebp
loopne
inc
cli
add
ja
shlb
testb
adc
mov
mov
jo
mov
call
jbe
loopne
or
imul
mov
push
xor
push
xor
dec
dec
mov
dec
orl
sub
lret
mov
aaa
push
add
imul
int3
aad
sbb
pop
ret
ss
jge
fisubs
adc
popa
std
push
cmpsl
addl
cmpsb
jmp
insl
js
xchg
xor
lds
add
cmc
in
xchg
push
adc
xchg
or
push
adc
sti
ds
jg
xlat
pushf
inc
jns
mov
dec
push
xchg
loop
mov
out
mov
xor
adc
jno
mov
and
fistpl
xchg
mov
fwait
inc
test
sbb
into
add
sub
pop
ror
scas
inc
jle
jl
cs
push
lret
and
sub
cmp
inc
xchg
jno
jge
je
xchg
cmp
dec
lods
std
push
pop
and
push
jbe
xchg
pop
call
dec
sub
sbbb
mov
or
dec
arpl
mov
sub
inc
or
loopne
mov
mov
and
add
sub
push
fucom
scas
andb
outsl
sub
and
pop
cmp
push
inc
sbb
mov
dec
xchg
xchg
fs
fcoml
pop
out
cmp
jle
out
and
push
out
xchg
dec
and
test
dec
cmp
mov
xchg
mov
pop
ds
sbb
shld
mov
sub
dec
push
mov
dec
loopne
pop
add
sub
repz
fstps
inc
cli
sti
push
aad
push
and
dec
decl
mov
int
cmpb
inc
add
std
fimuls
mov
andb
clc
aas
addb
ret
add
xchg
je
pop
stc
cmp
mov
pop
mov
int
mov
lods
and
mov
jge
andb
imul
pushf
inc
fldpi
jo
cld
push
add
push
adc
adc
clc
mov
add
adcl
fiadds
jp
enter
std
or
sub
mov
push
fcmovb
lcall
mov
pop
push
push
je
popf
adc
mov
jg
insl
pop
dec
inc
mov
mov
mov
adc
clc
repz
bound
fdivp
jne
rorl
test
mov
xlat
mov
xor
enter
pop
jle
int
cli
adc
subl
inc
bound
repz
xchg
xor
or
push
pop
pop
inc
sub
lahf
out
ret
adc
adc
jmp
push
xor
and
fwait
adc
loopne
mov
lods
fisttpll
out
ljmp
push
mov
add
xor
loopne
das
mov
fs
jno
cmp
call
xchg
pop
int3
cmp
outsb
decb
push
pop
lods
add
push
dec
in
hlt
sahf
mov
jb
mov
mov
xor
push
push
inc
add
cltd
jmp
dec
inc
fwait
and
lods
mov
and
into
pop
push
dec
ficoml
mov
push
test
fldenv
push
sarb
mov
xchg
lods
int
mov
dec
pop
fsubrs
add
mov
and
sbb
rorl
push
mov
pop
and
adc
jg
testb
fstl
dec
dec
jb
jo
inc
inc
cmp
push
aam
idivl
loopne
shr
ret
inc
adcb
mov
loop
add
mov
mov
jmp
ljmp
addr16
aas
inc
jmp
inc
orl
add
lcall
imul
das
xor
loopne
cmp
loope
pop
sarb
and
or
and
rcll
cwtl
out
pop
mov
dec
aas
cli
ds
or
inc
rep
shr
adc
mov
lods
cmc
movsl
or
fildl
aad
fwait
inc
pop
icebp
stos
outsl
pop
mov
loope
cmp
mov
sbb
imul
and
xchg
fcoms
and
xor
in
addr16
fistl
mov
adc
icebp
sbb
dec
pop
push
imul
cmpsl
das
sbb
add
pop
cmp
adc
ficomps
testb
xchg
or
imul
test
nop
jecxz
lcall
cltd
test
leave
sbb
add
les
lret
mov
jge
xchg
pop
push
inc
sbb
or
orl
or
xchg
lods
in
aad
or
test
mov
imulb
cmp
iret
andl
enter
test
sbb
lret
dec
lret
adc
xchg
or
push
and
add
ja
outsl
push
sbb
and
xchg
dec
mov
or
add
inc
mov
addr16
sbbl
lods
pop
xbegin
sub
fldenv
out
mov
xor
add
inc
pushf
aas
mov
dec
jg
push
lock
jl
iret
xchg
loopne
repz
orl
jne
adc
and
sbb
ja
cltd
dec
in
or
addr16
mov
arpl
dec
cltd
cmp
push
cmp
pop
ret
inc
fucomi
js
mov
loopne
jbe
pop
push
in
dec
mov
sbb
jns
repnz
andb
cmp
jno
insl
cmp
xchg
lods
xchg
mov
ljmp
leave
data16
jbe
pusha
lods
xchg
das
adc
add
jle
into
shrl
sub
shrl
add
stos
clc
sub
mov
mov
jge
or
call
sub
and
mov
pop
add
in
cmp
add
test
iret
inc
inc
das
xchg
je
repnz
sti
bound
xchg
lahf
enter
out
mov
popa
sbb
lock
mov
push
es
lcall
ret
nopl
cwtl
rcrl
pushf
out
out
mov
lods
mov
xchg
iret
cmp
lods
dec
dec
xchg
inc
dec
adc
aam
xchg
nop
push
rolb
cmp
outsl
add
ror
pop
xor
stos
xor
mov
jne
mov
mov
bound
pusha
cmp
out
test
or
jp
pop
push
pop
push
jl
cmp
stos
cmp
lds
xchg
add
or
sti
sti
xchg
fstp
stos
jmp
sarb
mov
aad
jne
cwtl
rcll
add
fs
jns
call
sahf
inc
dec
xchg
pop
data16
jle
aas
decl
inc
mov
add
inc
sbb
mov
iret
movsl
xorb
and
test
aad
inc
dec
cmp
arpl
fidivrs
dec
push
adcl
js
xor
dec
pop
mov
dec
dec
stc
or
cmpsl
xchg
adc
and
out
movsl
cwtl
subl
xchg
mov
jb
bound
ja
mov
mov
lcall
jb
dec
rclb
mov
pop
leave
push
or
roll
adc
push
or
adc
out
pop
push
push
mov
cmp
pop
push
mov
imul
incb
push
jle
repnz
fyl2xp1
adc
repnz
inc
cmp
xor
inc
subl
fstp
sahf
sub
int3
push
cwtl
mov
clc
cwtl
pop
enter
mov
out
cs
jecxz
fistl
sbbb
cld
jnp
inc
pop
into
inc
sub
iret
ficoms
enter
xor
in
push
sbb
cmp
mov
sbb
into
inc
sbb
fcomp
xchg
addr16
push
adc
pop
jg
data16
imul
xlat
jne
push
xchg
cmpb
jg
pop
dec
and
mov
dec
lret
ja
xchg
pop
loop
int
scas
into
nop
mov
cli
and
cmp
dec
push
push
repnz
add
push
stos
hlt
mov
sbb
push
int
jle
cmpsb
xor
or
aad
or
mov
push
cmp
pop
cmp
int
jne
xor
mov
pop
sub
pop
add
sti
cmc
adc
sbb
lock
cmp
sbb
xchg
stos
sbb
jg
add
mov
adc
clc
subb
xor
sbb
xchg
mov
enter
shr
lods
push
jge
mov
movsl
or
mov
lret
xchg
cmp
cs
or
mov
je
jo
inc
mov
inc
jne
or
adc
shll
xlat
add
and
mov
and
dec
ja
aad
aaa
popf
pop
js
in
ljmp
lods
push
hlt
hlt
les
jl
subb
fwait
mov
or
lods
scas
orl
jle
inc
leave
movsb
scas
mov
push
pusha
or
popa
shll
add
arpl
mov
adc
rclb
adc
aas
hlt
mov
mov
mov
mov
aas
mov
and
jecxz
imul
mov
and
sbb
iret
es
fcoms
xchg
test
dec
js
xor
cmpb
sarb
dec
call
out
js
bound
xor
push
sub
sub
sub
sbb
addb
dec
inc
sbb
dec
mov
mov
mov
mov
inc
sub
cmp
mov
sbb
ficomps
xor
mov
fiadds
in
sbb
xchg
repnz
andl
push
push
push
out
push
pushf
jl
xchg
cwtl
or
push
dec
xchg
xchg
lds
fadd
push
dec
cmp
daa
xchg
call
imull
outsl
xor
fsubrs
jbe
adc
push
hlt
sti
pop
mov
mov
xchg
insb
inc
loope
or
push
inc
mov
inc
sbb
inc
fcomi
scas
sub
mov
inc
jbe
in
pop
fs
and
scas
mov
pop
fimull
ds
mov
or
cmpsl
sbb
add
gs
mov
fsubr
push
clc
xor
ljmp
fld
fimuls
cmpsl
repnz
fimull
rorl
cmpsl
cmp
aas
and
add
pop
sub
mov
into
cmp
sbb
push
cmpsb
mov
mov
mov
cmp
or
daa
jmp
push
inc
push
mov
je
or
outsl
or
pop
or
mov
mov
testb
and
shll
xor
arpl
mov
insb
orb
xchg
or
sarb
jmp
addr16
jnp
test
fcomps
iret
mov
sub
mov
arpl
lret
jmp
fistpl
mov
outsl
repnz
lds
in
int3
push
mov
roll
pop
outsb
push
xor
dec
xor
xchg
mov
pushf
jb
fnstenv
lret
jle
dec
adc
lods
mov
stc
das
ret
subb
aam
fcoml
sub
mulb
loop
outsb
and
out
and
gs
xor
fwait
pop
lock
pop
stos
out
leave
subl
pop
in
adc
ds
mov
or
js
test
aam
dec
xor
cmpsl
in
std
fisubl
in
dec
or
xchg
add
adc
iret
imul
ljmp
sbb
add
jge
adc
mov
xchg
push
nop
xchg
lods
leave
and
mov
test
jbe
shr
inc
sahf
cmc
mov
sbb
xlat
orb
lods
repnz
fstl
pop
aam
lock
inc
or
mov
sbb
and
xlat
add
pushf
pop
add
inc
or
dec
lods
or
rorw
dec
sub
or
pop
aas
xchg
adc
mov
insb
sbb
insl
xlat
scas
jne
add
out
out
cmpsb
orl
dec
push
and
mov
lea
insl
sub
inc
sbb
xor
adc
loope
ljmp
push
cltd
lcall
lret
mov
add
mov
dec
sbb
popa
xor
nop
jp
cwtl
fcomip
shlb
sub
mov
lods
into
scas
les
mov
adc
xchg
pop
push
fwait
sbb
xor
imul
les
or
cmp
dec
int3
sub
cmp
into
jecxz
and
movsb
loopne
mov
movsb
mov
shl
repz
es
cmp
fldl
and
xorb
push
jmp
cmp
lock
cmp
jbe
and
xor
pop
cld
sbb
jo
shlb
push
mov
mov
es
cmp
dec
pop
inc
and
jle
outsb
lock
insl
pop
mov
notl
out
push
sbb
xchg
sub
and
lcall
add
lea
push
imul
mov
ljmp
jmp
mov
ret
lret
adc
popa
cltd
mov
mov
jne
push
sub
aas
jg
adc
xorl
fsubp
pusha
push
test
push
enter
mov
test
cmp
inc
int
and
mov
jnp
pop
gs
xchg
adc
imulb
xchg
std
std
inc
mov
cmp
xor
loopne
clts
aaa
mov
dec
mov
insl
pop
decb
or
push
mov
jns
jg
mov
cmp
xlat
movsb
sub
cwtl
fadds
popf
scas
and
jmp
dec
aas
popa
push
rcl
test
mov
shll
into
arpl
imul
xor
arpl
movsb
mov
jp
in
jnp
adc
xor
pop
adc
xchg
pop
or
sahf
in
test
cmc
fdivrp
sbb
movl
negl
sub
add
pop
pop
ret
or
jb
or
mov
dec
cmovns
pop
fwait
jnp
mov
dec
cmp
sbb
ret
icebp
jbe
xor
adc
xchg
xchg
push
mov
sbb
jns
mov
int3
xchg
pop
mov
cltd
ss
popa
push
call
fists
cltd
dec
pop
or
sti
pushf
mov
push
xor
fmull
dec
std
insl
dec
repnz
lock
pop
in
or
sbb
push
xchg
and
push
lahf
in
int
jae
loopne
outsb
leave
jl
xor
push
adc
adc
pop
pop
inc
adc
arpl
dec
jle
jl
ror
stc
mov
sub
or
xchg
jmp
out
cs
pop
lret
mul
mov
push
shlb
mov
or
and
call
stos
add
out
mov
push
das
das
in
lret
sub
sbb
sbbl
xchg
xchg
mov
mov
xchg
leave
lods
jo
jnp
mov
xchg
xor
push
je
dec
idiv
add
sarl
mov
insl
xorb
cmp
lea
imulb
out
mov
arpl
cmp
fildll
stos
dec
cmpsb
jno
mov
or
fldt
jns
mov
add
testl
mov
cli
dec
jmp
push
clc
cli
mov
dec
into
movsb
in
xor
stos
mov
adc
jmp
sub
xchg
pop
xor
jb
jg
loope
rorl
adc
pop
into
clts
aas
movsb
xchg
push
cltd
push
cmp
sbb
dec
shlb
adc
mov
stos
cmp
js
data16
push
and
loopne
lret
mov
sub
pop
jl
push
cmp
mov
and
cmp
daa
sbb
leave
enter
out
xor
leave
adc
mov
push
pop
push
outsb
sub
stc
lcall
xchg
adc
int3
mov
push
or
xchg
fxch
pushf
mov
fdivrl
xor
adc
cmp
andl
cmp
cli
sub
mov
jp
add
xor
and
pop
jp
fdivl
arpl
lock
stos
mov
into
cwtl
ds
imul
add
xchg
ja
insl
fildll
add
jp
lods
jae
adc
xchg
mov
add
js
repnz
jbe
je
mov
pushf
and
mov
gs
mov
jecxz
and
sahf
sub
dec
lods
mov
dec
cmpsl
inc
dec
mov
jne
sti
je
test
mov
popa
and
cmc
push
adc
jmp
lods
mov
sbb
adc
outsl
sub
movsb
or
mov
cmp
jl
pop
mov
sub
mov
mov
push
into
loop
lea
imul
inc
nop
fistpll
movsb
pusha
inc
xor
pop
in
adc
xchg
xlat
pop
jp
movsl
xchg
fldt
dec
movsb
adc
sbb
pop
fnstsw
incl
adc
mov
lods
movsb
shll
jmp
scas
ja
out
xchg
push
sbb
push
sarb
cmc
and
out
movsl
add
mov
add
hlt
leave
xor
jmp
or
notl
fs
aas
out
loop
rol
jbe
incl
outsl
push
mov
mov
or
adc
xchg
push
rorl
sub
test
mov
cmpsl
jo
mov
bound
cmp
inc
jle
inc
scas
into
rorb
movsb
movsl
push
cmp
push
jns
lcall
lea
and
cmp
pushf
xchg
addr16
jmp
adc
sub
push
cmpsl
leave
pusha
stc
sti
sub
cld
mov
loopne
jmp
jecxz
in
mov
inc
mov
daa
mov
data16
mov
arpl
mov
nopl
mov
adc
mov
rclb
cwtl
pop
sub
cmp
xor
mov
in
clc
and
cmc
int
lds
cmpsb
jge
icebp
enter
pop
jecxz
outsl
or
mov
and
sahf
das
mov
mov
lahf
or
xor
filds
int
sub
fcomps
into
mov
rcrl
adc
mov
mov
xor
sbb
or
xor
repnz
push
daa
inc
lret
pop
loope
ljmp
aas
icebp
ss
sub
mov
daa
add
jecxz
test
cwtl
insb
out
add
mov
add
lea
in
cmp
adc
in
jge
data16
push
into
push
and
mov
xchg
loopne
nop
mov
pop
push
push
sbb
push
jmp
es
cwtl
idiv
mov
adc
stos
add
xorl
cmp
inc
sbb
filds
sbb
mov
jae
addr16
xchg
rcrb
fs
fisubl
enter
mov
mov
dec
xchg
push
jg
sub
mov
out
dec
addr16
cmp
fstpl
loopne
mov
fmull
scas
dec
ret
jg
jno
cmp
xchg
xor
or
push
sub
push
std
cmp
mov
je
pop
xchg
mov
xchg
push
je
mov
test
dec
cmp
mov
arpl
pop
sbb
mov
rorl
inc
sti
imul
mov
jae
pop
add
movsl
push
inc
roll
pop
shll
and
imul
cs
mov
mov
sub
adc
jge
lcall
jecxz
jle
sub
nop
xor
and
mov
pushf
out
jae
dec
push
int
scas
inc
and
fidivs
mov
jl
aam
imul
pop
jmp
pop
adc
loop
cmp
mov
or
sbb
shrl
push
or
loop
movsl
in
or
add
roll
xor
mov
jb
int3
xor
pop
sbb
cs
sbb
scas
jnp
negl
sub
add
add
sub
mov
fs
in
xchg
lods
das
lods
aad
pusha
mov
xchg
sub
pmulhw
stc
xor
pusha
or
cli
or
hlt
xor
outsl
xor
fdivr
mov
and
xor
sub
fsubl
fadd
mov
addr16
shrl
stos
les
push
ljmp
dec
and
adc
test
out
mov
ljmp
adc
jo
flds
fwait
adc
scas
pop
lods
lret
sbb
cld
jmp
pop
shlb
or
xchg
mov
mov
or
aad
out
scas
pop
lcall
pop
mov
or
xor
lret
cmp
mov
xchg
or
and
mov
ret
test
cmp
das
aam
mov
add
std
cmp
xchg
xor
in
cmc
push
inc
stos
mov
sub
pop
jns
dec
adc
aam
push
pop
enter
pop
dec
add
jle
or
xchg
push
hlt
test
jbe
and
ficoms
shl
mov
stos
imulb
sbb
sbb
inc
mov
aaa
push
imul
jp
mov
shlb
adc
pop
loop
cmp
pop
pusha
frstor
sub
lods
test
loope
movsl
fwait
inc
in
jne
xlat
cmp
sahf
stos
xor
or
in
sbb
fisubrl
pop
sti
dec
jnp
shrl
pop
cmp
push
lods
push
sbb
das
inc
jb
add
mov
cmp
pop
out
xchg
into
pop
mov
cmc
pop
fiaddl
pop
inc
arpl
stc
int
pusha
dec
vdivss
out
js
and
xchg
mov
lret
mov
mov
pop
push
clc
mov
cmp
inc
popf
ret
push
jne
dec
cmp
adc
jmp
mov
fwait
and
movsb
je
mov
push
repnz
push
ljmp
aam
mov
push
push
push
jbe
add
jle
adc
pop
in
xchg
mov
rcll
into
stos
adc
adc
xchg
ret
jge
out
loope
adc
out
add
sub
mov
jo
mov
mov
pop
mov
sahf
mov
mov
mov
and
stc
test
insl
es
into
inc
mov
inc
adcb
sbb
aam
mov
mov
out
add
jle
xchg
aaa
in
mov
ret
clc
adc
loop
push
dec
imul
cmpsb
sub
mov
loopne
mov
mov
jae
cmpsl
adc
dec
lea
inc
inc
push
orl
xchg
jns
jo
aam
and
push
adc
xor
sub
pop
pop
pop
cltd
and
jns
lret
mov
xor
call
out
xchg
sbb
lock
insb
add
and
xor
and
insb
adc
dec
es
sbb
mov
fisubrs
cmp
jecxz
test
mov
cmc
xor
mov
dec
dec
in
sub
popa
nop
jb
jp
imul
mov
mov
cmp
cmp
cmpsb
gs
pusha
loope
stos
fwait
push
dec
cmp
in
arpl
push
es
sbb
in
push
jge
gs
clc
pop
inc
inc
inc
jmp
inc
arpl
dec
mov
mov
mov
pop
push
xor
ss
cltd
push
insb
in
pop
orl
pop
pop
mov
mov
mov
ljmp
inc
inc
daa
push
dec
xchg
movsl
push
add
mov
xchg
push
addr16
jecxz
arpl
mov
mov
dec
pop
pop
icebp
stos
jmp
cmpsl
sbb
adc
mov
out
mov
fildll
jnp
cs
in
jne
or
adc
fdivrl
mov
mov
inc
ljmp
scas
sub
xchg
xchg
insb
dec
test
sub
je
mov
push
shrl
scas
jnp
adc
cld
rcrl
pop
adcl
test
adc
xchg
mov
insb
push
inc
mov
rcll
pushf
out
mov
andl
inc
jb
out
add
cltd
pushf
les
scas
xor
pusha
mov
xchg
dec
cltd
mov
lret
cmp
inc
inc
in
pop
pop
fiadds
add
xchg
xchg
mov
mov
movsl
arpl
gs
jecxz
pop
ret
adc
movsl
mov
sub
repnz
xlat
push
cmp
loop
mov
adc
setle
xchg
sub
stos
mov
mov
aas
push
dec
scas
fwait
test
jbe
fcom
cltd
dec
dec
xor
cld
mov
mov
lcall
xor
loope
js
nop
adc
sahf
leave
cmp
loopne
lds
test
cld
insl
xor
pop
fldcw
in
mov
int3
and
mov
stos
addr16
add
sub
ja
iret
fcompl
and
leave
clc
in
dec
rorb
or
mov
sub
jne
fwait
pop
pop
imul
pop
fucomip
imul
sbb
fimull
in
imul
shll
scas
adc
sbb
in
insl
mov
mov
xor
ret
xlat
adc
or
push
hlt
jno
jp
mov
inc
shrb
movsb
cmp
pop
insl
cmp
mov
xchg
add
sti
and
dec
pop
repz
sub
cmp
xchg
xor
add
sbb
insb
add
sbb
mov
hlt
mov
jns
add
jbe
adc
iret
lock
push
mov
das
inc
mov
addb
jp
shlb
xchg
test
adc
mov
out
and
or
jl
xor
das
sbb
adc
addr16
lods
push
sub
cmpsb
pop
hlt
or
inc
xor
bound
lods
mov
aam
lcall
hlt
adc
adc
jmp
roll
pop
xchg
pop
gs
mov
hlt
lods
pop
sbb
sub
jo
mov
ficompl
dec
inc
inc
and
mov
test
ja
mov
in
push
shlb
mov
mov
out
or
adc
sbb
iret
push
sub
dec
je
jbe
and
dec
insl
scas
xchg
sbb
fildl
scas
mov
adc
xchg
or
iret
cmp
je
sti
or
inc
adc
mov
scas
sub
mov
scas
daa
ljmp
mov
mov
pop
mov
push
add
sbb
stos
aas
push
aas
gs
add
icebp
sub
fs
dec
jbe
push
cltd
sbb
sub
scas
sarb
cmp
jo
add
or
aam
outsl
and
fdivs
ret
stc
roll
test
movsb
and
mov
stc
subl
lahf
dec
push
xchg
fcmovnb
repnz
or
lock
and
shl
cltd
je
inc
enter
xor
arpl
mov
test
dec
imul
sbb
aam
insl
xor
sbb
fcmove
out
lods
push
popf
mov
adc
mov
push
xor
xor
cmp
outsl
ljmp
lret
push
lods
or
mov
inc
mov
add
lods
sti
adc
aam
mov
mov
mov
sbb
fcmovnu
or
insl
out
add
sti
add
jg
test
pop
push
lea
rcl
adc
mov
add
xacquire
test
das
daa
inc
jno
sub
movsb
cmp
data16
call
movsb
fiadds
mov
cmp
mov
or
repnz
xor
lcall
aad
mov
lods
jnp
pop
das
or
add
inc
cmpsb
out
loope
inc
xor
push
stos
push
mov
setne
cs
fdivr
xchg
and
mov
jle
out
or
iret
pop
jle
rol
mov
or
stos
or
xchg
pop
ret
jo
scas
mov
scas
cld
jge
lods
js
and
sbb
cmp
mov
inc
mov
mov
in
popa
das
scas
movsl
xor
mov
inc
lods
mov
andl
lods
cwtl
arpl
lea
mov
fistl
inc
cmp
xchg
mov
jle
cmp
mov
in
outsb
mov
decl
movsl
scas
add
xchg
dec
addr16
add
into
outsb
inc
xchg
mov
std
and
sbb
inc
and
mov
or
or
and
or
dec
sub
out
test
dec
jmp
lea
add
sarl
shll
loop
adc
mov
sbb
mov
jmp
je
sbb
je
and
pop
pop
dec
lahf
popa
jae
jb
aam
fdivs
je
cmp
or
ljmp
mov
pop
or
mov
and
je
jecxz
xor
dec
cmp
test
jp
rorl
ss
pop
stc
adc
xor
fs
jmp
iret
leave
add
pop
in
shr
push
fs
dec
icebp
sbb
repz
test
pop
call
mov
mov
or
pusha
imul
xchg
fisttps
xchg
mov
inc
rorb
icebp
movb
dec
mov
scas
repnz
idivl
dec
jmp
xchg
out
loope
mov
sar
dec
fwait
das
iret
addl
pop
nop
mov
push
or
xor
cmpb
outsl
push
stos
out
stos
das
ss
lods
adcl
stc
loop
mov
xor
pop
xorl
jne
testl
pop
stc
test
sub
push
mov
jbe
cmp
dec
jle
or
imul
fucomip
and
xorl
dec
jle
and
dec
push
dec
jae
xchg
lahf
mul
ret
push
es
pop
out
out
fdivr
pop
std
mov
sarb
push
sarb
push
sub
sub
inc
scas
popa
adc
inc
aad
sbb
inc
dec
out
jb
aaa
sub
mov
not
mov
pop
mov
sub
mov
mov
push
movsb
sub
cmp
xchg
dec
clc
cmpsb
cwtl
sub
mov
ja
xchg
sub
fdivr
shrl
enter
and
movsb
mov
aaa
push
sub
jmp
sub
jne
mov
mov
test
cmpsl
leave
int3
stos
loopne
add
push
rcrb
mov
cmpl
fsts
push
xchg
add
sahf
addr16
mov
dec
jb
mov
pop
xchg
lods
out
not
popa
xchg
scas
jmp
sub
push
push
ja
lahf
pop
rcrb
cmp
dec
jns
test
xor
jno
repz
data16
in
sub
out
mov
sti
and
jnp
cs
sbb
lds
adc
aam
loopne
pop
push
lea
xlat
cmp
mov
stc
pop
mov
mov
and
insl
or
aaa
mov
add
ss
ds
cmp
push
fcoml
les
iret
stos
or
jnp
pop
cmp
adc
loopne
mov
pop
rcrl
dec
sbb
movsb
inc
subb
pop
shll
adc
addl
sub
pcmpgtw
dec
mov
and
test
out
or
repz
and
xchg
inc
xor
mov
aas
sbb
int3
lcall
inc
gs
push
xor
push
call
enter
mov
and
jbe
sub
data16
movsl
push
mov
les
sub
mov
mov
lock
out
lods
mov
ret
and
sub
jle
mov
nop
adc
dec
mov
mov
insl
pop
call
int3
out
cltd
pusha
and
push
xchg
ret
jge
or
leave
jl
out
sbb
pop
fisttpl
mov
add
cmp
bswap
mov
pushf
cld
adc
in
sub
dec
or
inc
sbb
adc
sbb
jnp
mov
out
push
adc
shrl
insl
in
mov
jl
dec
cltd
daa
cmc
and
jp
out
mov
scas
je
out
movsl
push
shll
test
sub
or
and
push
aaa
xchg
popa
addr16
mov
add
sub
sub
les
jl
jo
in
or
push
xchg
and
add
sbb
add
xchg
insl
je
outsb
adc
mov
sbb
cmp
leave
inc
jb
sub
sub
std
ja
jg
mov
outsl
fimuls
bound
or
adc
repnz
mov
pop
push
dec
pop
dec
or
jae
push
cmp
pusha
aad
repz
cwtl
stc
pop
mov
shll
pop
dec
mov
mov
cmpsb
sbb
adc
lea
push
subl
adc
push
mov
sub
sub
dec
cmp
sub
or
fiadds
mov
popa
inc
mov
pop
leave
xchg
xchg
dec
dec
and
mov
mov
jmp
xlat
enter
out
add
dec
mov
sbbl
pop
insl
pop
sub
cmp
movsb
adc
push
push
mov
imul
dec
mov
sub
mov
sbb
push
sub
cmp
aam
jbe
gs
and
arpl
sub
push
inc
daa
cltd
add
mov
cmc
jae
pop
inc
inc
push
outsb
fldcw
or
fisubs
and
sub
imul
gs
inc
cld
loope
add
lock
add
fwait
sub
jbe
test
shlb
aam
rcl
cmp
mov
adc
cmp
rcr
ljmpw
cmp
mov
shl
push
sahf
cmp
mov
sub
lret
jle
bound
dec
or
fwait
adc
push
add
in
jb
sbb
inc
mov
and
clc
push
dec
add
aad
in
add
push
sbb
jg
ret
xchg
mov
xchg
pop
int3
and
lea
ja
fidivrs
cltd
cmp
inc
ja
sub
dec
push
in
pop
push
sub
fs
fisttpll
mov
xor
dec
shll
jmp
sub
pop
xchg
or
std
fwait
push
loop
out
imul
nop
ret
dec
movsl
pop
xor
adc
outsb
jl
push
adc
out
shrb
mov
decl
sbb
cld
out
fs
mov
add
dec
fs
pushf
push
aas
push
pusha
adc
mov
fninit
mov
dec
mov
cwtl
sub
inc
les
repz
push
stc
mov
les
aam
aas
ss
mov
pop
xor
mov
mov
adc
stos
xor
mov
fisttpll
mov
std
cmp
pop
cli
dec
push
iret
insb
fwait
jb,pt
idivl
jmp
jecxz
mov
jb
outsl
dec
fimull
lock
and
inc
add
loop
in
aad
pushf
ret
jne
shlb
pop
fdivr
fsub
add
mov
cmc
cmpsb
mov
jmp
les
and
pop
cmp
and
outsl
mov
mov
and
ffree
mov
out
fisttps
push
mov
out
inc
dec
cmp
fsubrp
popf
loope
push
or
inc
sbb
pop
mov
mov
jecxz
sahf
adc
clc
nop
cld
mov
or
aad
pop
xchg
dec
test
stc
not
into
fistpll
mov
insl
push
xor
mov
dec
sbb
jb
jnp
push
cltd
arpl
je
movsb
adc
lods
pop
sub
test
testl
mov
les
jp
cwtl
lahf
arpl
div
sarb
sub
push
inc
pop
inc
mov
adc
xor
sub
mov
push
sbb
add
mov
mov
outsb
mov
sbb
adc
addr16
pop
ljmp
xor
loope
movsb
adc
pop
andl
xor
push
jns
inc
mov
mov
rolb
push
das
outsb
push
or
movsb
lods
out
jnp
dec
jecxz
stos
les
daa
pop
xchg
fists
sahf
cmpsl
fwait
js
test
les
fstp
lea
sahf
nop
add
lds
mov
aam
cs
gs
aaa
or
hlt
mov
out
jnp
aas
sbb
and
sbb
mov
call
cs
mov
push
pusha
stc
adc
iret
xchg
dec
push
popa
test
bound
push
xchg
sbb
push
in
push
fnstcw
push
aad
mov
lcall
scas
js
pop
mov
lret
mov
stos
push
pop
cs
add
mov
jo
dec
push
sbb
in
sub
loopne,pt
popa
jg
test
pop
mov
mov
xchg
cli
repnz
or
out
mov
push
ror
insb
pop
loopne
push
sub
pusha
jae
aaa
repz
cli
arpl
inc
xlat
lret
jge
ja
movsl
pop
dec
sbb
xor
push
adc
es
adcl
ret
iret
mov
lahf
das
jae
je
cmpsl
push
add
test
cs
call
es
stos
dec
data16
lret
icebp
cwtl
push
and
mov
dec
iret
gs
cmp
sbb
out
dec
or
sbb
insb
das
out
adc
addr16
jl
insl
inc
daa
cwtl
insb
rcll
in
and
lret
imul
pop
adc
jne
enter
test
je
pop
lods
addr16
je
mov
gs
mov
std
repnz
ss
or
addb
cmc
test
jecxz
dec
sbb
mov
hlt
arpl
sbb
mov
add
sbb
je
dec
inc
bound
imul
cltd
call
aad
icebp
je
dec
arpl
int3
ljmp
outsl
ss
and
inc
mov
cmp
mov
daa
aam
mov
jb
popf
add
pop
jmp
jae
popa
adc
inc
mov
xchg
es
int
aam
mov
mov
loop
xlat
mov
insl
stos
mov
pushf
jge
loope
push
adc
jbe
ja
sub
xor
jle
clc
inc
popf
icebp
xor
and
jmp
arpl
push
jl
test
aad
or
mov
cwtl
jmp
lea
mov
das
enter
mov
out
push
dec
dec
pop
jns
cmc
mov
sub
shll
push
sar
shll
subl
mov
dec
sbb
mov
adc
push
push
repz
mov
dec
mov
rorb
loopne
stc
adc
stos
pop
lret
jns
outsb
push
lods
cwtl
sub
mov
xor
pop
addr16
leave
cld
aad
outsb
mov
sbb
cwtl
sub
sub
icebp
jecxz
sbb
pushf
xchg
add
pop
jno
mov
imul
or
push
dec
mov
dec
bound
lret
jecxz
sbb
xchg
shr
pop
xlat
ljmp
aas
movsl
pop
cli
push
daa
fs
andb
lds
sub
sahf
outsl
fmul
mov
or
outsb
test
jmp
call
in
xchg
or
gs
push
test
sbb
or
add
inc
dec
dec
cmp
es
mov
dec
push
mov
divl
mov
sbb
lock
mov
push
xchg
ret
cwtl
jp
cld
dec
aad
xor
or
cs
loopne
arpl
js
out
shrl
mov
cmp
scas
cmp
lods
xchg
aaa
shll
int3
add
mov
es
jb
push
add
cmp
mov
fdivs
xchg
add
test
movsb
imul
loope
dec
dec
outsb
push
pop
mov
popf
and
lret
fucomip
movsl
loop
sub
mov
std
mov
repnz
xor
inc
push
ret
xor
and
mov
jecxz
sub
xchg
xor
arpl
push
mov
sbb
xchg
xchg
and
cmp
inc
sbb
mov
iret
sub
movsl
fistpl
adc
cs
dec
pop
cmc
mov
repnz
pop
push
mov
add
push
outsb
sahf
xor
adc
adc
inc
fs
call
in
jae
in
jb
mov
scas
sbb
xchg
add
sub
mov
lock
xlat
sbb
and
dec
outsl
xor
mov
xor
lods
out
push
mov
fbld
inc
adc
or
cmp
or
ret
add
js
mov
lret
cs
dec
sub
pop
enter
jg
outsl
pop
ficomps
outsb
fucomip
leave
jg
jo
adc
and
mov
inc
test
fdivrp
push
adc
or
inc
xchg
push
and
nop
rcll
push
inc
pop
push
out
mov
or
jmp
lea
jp
aam
ficomps
sbbl
daa
inc
jmp
and
inc
ja
mov
pop
cmp
loop
pusha
fadds
clc
add
mov
cmc
lcall
inc
test
sub
adc
and
hlt
xor
sbb
ret
push
adc
clc
shlb
sub
or
xor
and
in
sub
add
cltd
arpl
ret
inc
pop
std
xchg
sub
jnp
lods
mov
push
jnp
ret
inc
movb
daa
out
mov
and
jbe
push
sub
imul
add
ds
sub
jle
adcl
leave
adc
imul
pop
jge
aam
movsb
mov
je
jb
jae
cmovbe
ficoms
dec
fcoml
cvtpi2ps
movups
xchg
nop
pop
sub
ljmp
leave
and
inc
fnstenv
push
pusha
sti
jl
sbb
loope
mov
sub
ss
mov
out
sbb
iret
sbb
pop
pop
test
mov
mov
or
mov
in
mov
jge
or
aad
inc
mov
or
xchg
inc
outsl
adc
pop
cmp
fstl
dec
loope
lock
out
inc
fbstp
pop
xlat
inc
pop
lds
std
data16
xchg
inc
cs
ja
in
jns
enter
inc
and
repz
ret
cs
sbb
sahf
sub
jnp
xchg
fildll
add
test
mov
fs
mov
jecxz
shl
rcll
xor
or
xor
mov
fmulp
popf
ss
test
mov
xchg
addl
ljmp
aaa
test
lods
clc
cmp
add
or
fdivrl
pop
lea
mov
mov
or
and
mov
mov
daa
or
stos
mov
dec
data16
mov
xor
jge
sbb
imul
inc
cmp
nop
out
jns
rcrb
push
fcoml
add
mov
pop
jno
data16
and
je
adc
inc
std
test
mov
bound
int3
xor
sbb
mov
lods
nop
rorl
dec
mov
cmp
std
and
inc
add
adc
cmc
sub
aaa
mov
jl
mov
adc
jbe
push
dec
dec
les
and
shr
sahf
lea
sbb
mov
or
dec
dec
cmp
mov
mov
ja
add
daa
stos
mov
cmp
mov
jnp
jge
jmp
fdivrp
ret
pop
jbe
adc
in
bound
push
jp
add
xchg
lods
ja
jg
in
mov
push
pop
orb
imull
mov
xchg
shll
mov
jbe
loopne
lcall
ss
insl
in
sbb
and
mov
mov
dec
lahf
dec
xor
js
iret
cmp
mov
call
cmpsl
or
and
dec
push
sbb
mov
cmp
scas
add
faddp
jle
jecxz
mov
jmp
lret
bound
xor
add
xchg
sub
mov
ret
popf
and
adc
mov
out
add
stc
xor
scas
frstor
mov
push
insl
bound
cmp
imul
adc
inc
into
int
inc
jl
out
aam
adc
push
mov
add
adc
icebp
daa
out
cwtl
jnp
stos
push
cmp
ret
xchg
test
mov
xor
sarb
adc
dec
loope
fdivp
je
mov
adc
js
cmp
lret
inc
xlat
arpl
dec
jecxz
iret
push
jb
mov
push
je
sbb
jne
addr16
xor
mov
add
sbb
or
addr16
cmc
fidivs
sbb
mov
xchg
inc
sub
jo
dec
je
push
sbb
sbb
fdivp
nop
mov
dec
xor
ret
cmp
mov
stos
push
push
sub
mov
rcll
movhps
js
and
xor
adc
sub
faddp
jle
add
arpl
xchg
sbb
mov
jge
add
push
fistps
into
dec
pop
jns
fs
fiadds
mov
sbb
inc
jge
out
xor
pop
push
dec
rcrl
xor
jnp
sahf
and
js
sub
mov
shll
ret
mov
or
outsl
insl
movsb
ja
scas
scas
movsb
bound
xor
std
and
dec
scas
or
lret
inc
and
subb
ja
lods
loopne,pn
in
loope
push
in
daa
outsb
ds
enter
cld
test
add
and
dec
and
cmpsl
xor
or
mov
sbb
int
fs
xchg
sbb
dec
cli
jne
cmp
inc
lret
mov
or
arpl
pop
jmp
fistl
imul
lahf
addb
popa
sub
push
das
dec
lds
push
fdivr
in
add
adc
movsb
and
movsl
cmc
cwtl
bound
and
int3
fwait
test
dec
gs
jmp
or
fs
testl
imul
fidivrs
sbb
dec
das
test
stos
mov
aam
xchg
loope
sub
add
shrb
push
fucomp
outsb
pop
or
loopne
rcl
aad
xor
cmpsb
shlb
jno
lret
mov
mov
imul
lds
jl
mov
dec
adc
call
sarb
imul
in
jne
lcall
add
mov
jge
or
sub
push
out
push
cwtl
aaa
test
push
int3
jmp
inc
icebp
sub
and
jns
mov
out
and
adc
filds
lods
daa
movsl
hlt
push
pop
loopne
jb
push
xchg
imul
mov
mov
unpcklps
test
mov
js
cmpsl
cmp
push
jl
or
sbb
cmpsb
mov
sub
dec
sub
dec
push
push
jecxz
in
shll
jbe
aad
mov
cmp
jnp
xor
sub
mov
lret
sbb
movsl
sbb
cmp
inc
testl
lret
loopne
lds
jge
pushf
cli
fstl
inc
push
fidivrl
or
jle
xor
xor
xchg
adc
push
push
lods
pop
jne
pop
xchg
cmpsl
lret
xor
ror
pop
popf
push
cmp
ljmp
out
test
cmp
sbb
xor
sbb
jg
mov
push
inc
push
imul
lea
adc
or
push
insb
cli
mov
jb
gs
out
add
andl
outsb
sub
sbb
mov
out
sbb
mov
das
out
mov
nop
xchg
rep
xor
push
mov
loope
or
xorl
loope
dec
bound
movsb
cmp
out
sub
aad
pop
mov
mov
sbb
popa
scas
lods
push
mov
push
stos
subl
int3
js
jns
pop
test
push
cwtl
mov
fs
push
mov
cltd
std
push
xchg
pop
and
test
imul
xor
test
movsb
gs
cmpl
xor
add
add
pop
add
xchg
in
jo
daa
pop
outsb
insl
imul
mov
sbb
ss
das
mov
or
cmp
sub
or
mov
jns
leave
test
add
insl
test
cmp
inc
xchg
cli
sbb
addr16
test
mov
movsl
xor
fnstenv
arpl
inc
dec
ss
repz
sub
stos
cmp
es
pop
jl
push
push
pop
lret
inc
sahf
push
dec
insb
sub
lods
insl
pop
adc
xchg
mov
cmpsb
call
incb
push
insl
cmp
mov
xchg
push
cld
push
daa
jb
fcmovnu
nop
push
fwait
sub
sti
imul
adc
fwait
dec
iret
xor
xor
lods
shl
stos
outsb
arpl
iret
pop
mov
or
mov
jbe
inc
cmp
push
in
dec
cli
in
sub
leave
xor
repnz
lds
mov
scas
aad
jns
and
inc
sub
ss
movsl
inc
jle
cmp
jae
test
in
adc
test
cli
xchg
mov
bound
repnz
pop
mov
or
xchg
xchg
movsb
out
mov
pop
out
sub
stos
and
mov
lds
mov
xchg
push
push
sub
lret
lret
mov
les
add
and
sub
xor
pop
dec
hlt
iret
push
xchg
xor
push
fsubrl
push
cs
jb
ljmp
pop
fstps
push
adc
ja
jmp
push
inc
sbb
cltd
inc
fucomi
cltd
test
les
add
jecxz
cmpsb
jmp
pop
scas
fnstsw
push
adc
inc
test
insb
daa
pmuludq
add
pop
out
call
mov
adc
ja
jo
jae
scas
push
inc
sub
out
push
inc
mov
ds
mov
in
add
inc
mov
pop
inc
std
les
addr16
or
ret
incl
popw
inc
fs
jl
out
aas
andl
fcompl
andb
aad
out
aas
xchg
fcomps
jmp
mov
cmpsl
pop
incb
insl
rep
fs
inc
loopne
fisttpl
jo
jmp
std
lods
xor
aam
mov
hlt
adc
sbb
icebp
fldenv
xor
ja
ss
dec
jae
fstp
ss
dec
loope
iret
add
cmpsb
push
adc
mov
push
ds
and
jo
cs
nop
sub
and
mov
jno
mov
and
js
push
xchg
test
shr
jl
pop
jecxz
mov
xchg
loope
xchg
scas
pusha
bound
and
push
mov
cltd
arpl
sahf
sub
ret
lods
or
mov
cmp
adc
add
dec
jne
imul
mov
pop
jl
push
dec
sub
cmpb
xchg
mov
mov
mov
pop
mov
cmp
loopne
adc
xchg
sbb
and
sub
push
jae
outsb
scas
ret
adc
mov
hlt
cmc
repz
cmp
adc
inc
popa
lods
jbe
inc
or
jg
ret
loop
sti
add
or
jp
pop
stos
jno
gs
hlt
mov
imul
scas
mov
jmp
jb
rorb
cmc
lock
lods
pusha
or
mov
jg
xchg
rol
dec
mov
fidivs
shrl
xchg
fs
mov
mov
lods
ficomps
mov
leave
inc
xlat
adc
sub
push
clc
into
ss
add
and
rolb
dec
mov
inc
fisubrl
dec
adc
xchg
imul
inc
xor
aaa
add
pop
repnz
aaa
push
push
jns
cmp
pusha
xchg
sbb
jo
cmpsb
mov
dec
je
mov
jae
jl
mov
enter
popa
push
or
dec
mov
fnstenv
dec
push
lds
into
push
pop
out
hlt
dec
jno
std
inc
lock
mov
push
bnd
enter
lret
mov
lcall
dec
jns
test
out
cwtl
xchg
std
sar
lock
xchg
rorb
cltd
or
sbb
test
and
int
mov
std
shl
jecxz
adc
cmp
push
sysenter
mov
add
stc
mov
cmp
cltd
add
lea
jno
add
xor
add
icebp
es
in
inc
mov
popa
xchg
fadd
lods
pushf
iret
sbb
push
es
testb
push
pop
push
int
cmp
mov
out
sbbl
cld
mov
cmpsl
dec
dec
in
push
ss
popa
fidivrl
test
mov
shll
xchg
jg
sti
cmp
push
aam
nop
int
lret
mov
stos
mov
add
fistps
clc
xchg
sub
mov
repnz
dec
rorb
fisttpl
ja
and
xchg
mov
xchg
cmp
subb
data16
js
mov
aaa
out
out
add
xchg
es
dec
sub
jp
lods
movsl
jge
dec
mov
out
and
fstpl
sbb
inc
rcll
notl
mov
fwait
mov
loopne
mov
adc
dec
dec
popa
sub
jb
stos
pop
and
xor
out
repz
jnp
aaa
xor
dec
jmp
test
adc
push
repnz
inc
jne
pop
or
adc
and
fs
mov
xlat
fwait
test
adc
movsl
ja
sbb
sub
cli
movsb
cmp
lcall
mov
fmul
sahf
out
aas
sar
pop
mov
in
adc
mov
cmc
inc
pop
fistl
sti
aas
jnp
lods
mov
pop
adc
dec
xor
add
mov
and
push
adc
mov
inc
loopne
mov
add
gs
inc
and
outsl
sub
or
cmpl
pushl
sbb
addr16
sbb
aam
repz
jnp
push
mov
mov
push
or
lds
lods
out
bnd
push
jb
fsubs
in
leave
mov
js
sbb
inc
call
jecxz
loopne
dec
sbb
movsl
inc
mov
movb
mov
lahf
pop
test
pop
push
pop
jge
push
movsb
loopne
les
fisubs
fwait
lret
push
cli
or
jo
xchg
jecxz
jbe
cld
and
dec
leave
jo
movsb
mov
jnp
cld
or
mov
mov
dec
dec
xchg
sub
mov
call
inc
cld
pop
daa
out
lods
testl
ljmp
subb
daa
or
push
sbb
dec
xor
rolb
call
int3
stos
aas
popf
add
lods
lret
cmpsb
daa
jecxz
test
mov
std
out
push
stc
lret
mov
ja
repz
cmpsl
adc
mov
xchg
cs
xchg
xchg
push
xchg
cmp
sub
dec
sbb
imul
cmp
xchg
das
push
mov
lahf
push
and
push
sbb
or
leave
fidivrs
xorb
ljmp
mov
push
cwtl
dec
in
pop
xor
pop
nop
stc
cli
cmc
lcall
outsl
inc
inc
mov
mov
adc
inc
cmp
fistpll
incb
lcall
addl
pushf
movl
xor
fmuls
mov
dec
push
dec
jno
lret
movsb
mov
inc
movsb
dec
push
xor
enter
mov
insb
scas
mov
fcomi
cmpsb
rorl
lcall
stos
scas
les
mov
test
sub
lahf
inc
sub
rcrb
jmp
dec
stos
mov
cltd
add
data16
jae
test
cmp
mov
cmp
addb
xchg
jle
mov
lret
jne
xchg
dec
mov
sbb
nop
xchg
jle
scas
mov
push
repnz
jbe
scas
cwtl
scas
sub
jmp
mov
mov
stos
nop
fidivl
adc
push
add
xor
mov
pushf
and
sbb
popa
push
mov
jge
add
mov
sub
mov
sahf
stos
lcall
cmp
lret
stos
xor
sub
clc
push
int
push
adc
mov
jb
jmp
cmp
xor
pop
pop
or
xchg
sbb
lods
add
sbb
mov
mov
inc
inc
mov
test
mov
popf
xchg
xchg
mov
sbb
sub
stos
mov
gs
rorb
inc
popf
add
lock
pop
add
add
inc
fsts
inc
jmp
push
jmp
repz
mov
ljmp
inc
sub
mov
in
cmp
sub
jnp
test
pop
popa
mov
lahf
jmp
outsl
sbb
cltd
add
sbb
ret
push
mov
xchg
sub
push
and
mov
sti
out
inc
fwait
mov
sbb
add
pop
mov
lods
sub
push
adcb
sub
test
test
pusha
cmp
into
push
mov
and
pop
into
decb
fadds
inc
mov
add
mov
xor
mov
popf
ljmp
in
inc
inc
int3
popf
mov
out
loop
or
jae
das
gs
insb
xchg
xor
rorl
xor
push
scas
imul
add
icebp
push
push
addr16
scas
sub
rcl
fcoms
inc
lock
lea
cmc
push
adc
stos
data16
int3
ds
mov
lods
cmc
add
push
std
xchg
add
xorl
xchg
xchg
mov
mov
stc
std
inc
mov
add
cmpl
stos
fcoml
call
call
notb
mov
cli
jns
clc
fimull
movsl
lret
mov
shrl
add
nop
mov
pop
xchg
cmc
aad
dec
mov
fmuls
adc
jbe
repnz
add
mov
jl
mov
dec
ret
jle
lret
or
xor
cmp
xchg
aad
cs
pop
mov
cmp
mov
xchg
ret
cmpsl
cmp
jnp
pusha
inc
adcb
aad
cmp
es
pop
cmp
daa
andb
mov
jecxz
and
hlt
dec
ret
mov
adc
dec
push
sub
dec
sahf
int
enter
cmp
mov
enter
jmp
xor
sbb
xchg
mov
hlt
leave
jp
cld
dec
pop
gs
fisubrl
push
lret
lret
int3
jecxz
bound
and
jo
rorb
jge
cmp
roll
jnp
in
ljmp
dec
mov
dec
xchg
cmpsb
inc
ret
mov
test
arpl
dec
lret
dec
xchg
pop
mov
sbb
stos
stos
mov
pop
mov
cmpsl
add
cmp
stos
and
out
add
idiv
cmp
orl
push
insl
sub
jle
and
lahf
inc
fs
lods
sarl
int
mov
andl
mov
in
into
cmp
rorb
adc
out
pop
in
pop
stc
push
call
orl
aam
ja
cmp
fnsave
and
shrl
test
xrelease
ficoms
hlt
jmpw
inc
xchg
out
cmp
scas
mov
xchg
adc
jb
mov
push
pushf
lock
mov
jp
dec
mov
inc
shl
lods
xor
inc
cmp
xchg
mov
cli
and
adc
mov
add
push
xchg
out
pop
push
popa
rclb
pop
dec
sbb
out
mov
sar
mov
aas
not
shll
dec
sbb
and
rcrb
and
call
orl
incb
fdivs
mov
and
lock
xchg
mov
jmp
add
cmpsb
mov
outsl
ret
xor
mov
imul
aaa
jp
les
xchg
jo
rclb
inc
out
cmc
outsb
jge
or
cs
fwait
pop
faddp
fcomip
iret
sub
lahf
pop
sbb
add
aaa
mov
aas
sub
jb
push
jns
bound
jmp
into
mov
and
nop
movsl
xlat
sub
and
popa
lods
movsb
cmpsb
sub
lret
lds
bound
ret
mov
inc
cld
ss
fsubp
jge
pop
add
push
jnp
push
lock
sub
mov
mov
idivb
adc
sub
out
mov
adc
jmp
imul
adc
pusha
iret
stos
push
repnz
sub
seto
mov
js
cli
in
dec
lret
and
pop
int
xor
aad
mov
jecxz
outsl
pop
and
in
imul
xor
dec
pop
lcall
dec
push
jg
std
addr16
fwait
mov
pop
into
popf
sti
scas
out
mov
popf
push
dec
icebp
shrl
xor
sbb
and
call
push
insl
pop
push
ss
inc
cmp
cs
imul
sbb
ds
push
fs
xor
push
es
aam
mov
push
clc
mov
mov
or
adc
rorl
pop
sub
jae
lcall
mov
mov
ljmp
sub
movsb
pop
in
cmp
sbb
adc
aad
outsb
ds
mov
data16
out
push
movsl
pusha
push
das
aaa
fadds
jp
pshufw
orl
loopne
sbb
mull
mov
mov
mov
dec
cld
cld
mov
inc
and
fwait
sub
adc
out
in
mov
jnp
ds
mov
adc
and
ret
cmp
pop
cld
push
sbb
pop
ljmp
sub
and
fisttpl
shll
aam
mov
xor
shr
pop
jmp
ljmp
xor
rclb
ret
inc
icebp
test
mov
into
fstl
and
shrb
mov
jmp
js
loop
jg
ljmp
inc
mov
pop
pusha
xchg
xchg
and
fistps
xchg
mov
test
cmp
sbb
push
mov
lds
subl
jmp
xchg
stos
mov
cmpsb
out
mov
cmp
jp
scas
jge
dec
xchg
xor
sarb
loope
sbb
adc
xchg
pop
pop
jnp
cmp
insb
adc
pushf
inc
fsubl
shrb
cli
shlb
add
es
addr16
dec
lods
adc
cmpb
leave
pop
or
add
push
mov
dec
xor
mulb
mov
fsubrp
clc
sub
fstpt
sbb
pop
push
lcall
aas
fs
into
push
sbb
pop
cmp
push
xchg
lret
ja
lret
ret
cmpsb
neg
cmpsb
jle
jge
sti
into
test
int
add
data16
call
mov
push
aas
sub
pop
inc
hlt
das
or
cmp
mov
in
and
enter
in
or
loop
adc
jmp
mov
jl
es
mov
or
in
mov
imul
fwait
bound
xor
je
pop
sbb
adcl
xor
fsubr
aam
out
jle
rolb
inc
or
pop
gs
aas
mov
jae
rclb
jg
in
mov
js
rclb
jle
push
cld
cli
adc
insl
jge
lret
dec
sub
push
jge
rorb
dec
sbb
jmp
sbb
pop
pop
add
out
ss
cmc
sbb
shlb
inc
xchg
fildl
mov
mov
mov
mov
xor
xchg
pop
gs
xchg
xchg
sti
daa
pop
and
fsubrl
mov
loopne
push
push
inc
adc
cmpsl
es
push
pusha
mov
inc
icebp
xchg
sbb
jp
std
sub
adc
mov
ficomps
mov
push
mov
xor
imul
ss
daa
daa
and
pop
jecxz
xchg
ret
cld
cmp
cwtl
mov
sbb
sti
fidivs
mov
scas
xchg
pushf
or
mov
and
mov
sbb
mov
or
cmc
test
mov
lds
mov
movsb
popa
mov
or
jns
es
nop
sub
ds
dec
mov
mov
pop
xchg
sub
mov
cwtl
pop
inc
add
add
push
js
into
imul
inc
outsl
mov
mov
rorb
xor
sbb
in
lds
lret
xlat
jmp
and
jge
nop
pusha
xchg
pushf
cmp
out
xlat
inc
icebp
pop
imul
cmc
imul
fwait
sub
jns
inc
mov
mov
add
adc
test
mov
fs
mov
call
pop
sub
mov
xor
xchg
sub
mov
stos
mov
test
sti
fstps
xor
adc
imul
xorb
dec
andl
enter
inc
in
xor
loop
add
dec
inc
lea
inc
ja
cld
fldcw
xor
fimull
pop
dec
movsl
xchg
sbb
or
mov
out
bound
rcl
ja
bound
lret
adc
pop
jp
inc
fwait
cmp
cs
mov
xchg
sahf
jnp
clc
rcl
icebp
mov
jmp
test
pop
std
sbb
xchg
xchg
push
in
push
jne
mov
addr16
fsubs
jne
in
mov
xor
outsl
inc
js
mov
cmp
mov
xchg
out
int
xchg
add
lods
loope
cld
pop
scas
add
out
push
or
xor
mov
out
mov
mov
dec
inc
test
push
lock
mov
jl
mov
stos
cli
xor
les
push
mov
loopne
lods
inc
inc
into
mov
jmp
leave
sbb
mov
push
push
or
scas
popf
jb
fadds
popl
add
out
add
xor
cltd
add
addr16
aad
or
imul
imul
push
lock
cmp
xchg
pop
push
int3
cmpsl
fcoml
cmpl
and
push
cmp
popf
je
add
adc
leave
mov
pop
popf
popa
gs
inc
mov
pop
xlat
popf
mov
jg
inc
jbe
iret
sti
push
xor
pop
xor
les
hlt
cmp
add
inc
je
hlt
mov
stc
sarl
js
loop
test
inc
hlt
push
repnz
insb
stos
pop
mov
ljmp
adc
or
sub
sub
cld
and
lock
mov
lock
mov
popa
ficompl
mov
rclb
jecxz
mov
cmp
mov
sbb
leave
shl
pop
dec
int
mov
call
popf
xor
sub
repz
jp
xlat
or
nop
and
out
arpl
cmp
out
into
inc
popf
cmp
fidivrl
repz
aas
paddsw
mov
inc
test
push
inc
pop
mov
sub
dec
pop
adc
out
jmp
pop
jns
pop
fldl
hlt
enter
sti
push
xchg
test
or
jmp
and
shll
adc
push
mov
imul
cmpsb
xor
inc
jnp
scas
push
hlt
in
popa
jo
xchg
pop
push
mov
mov
out
lock
loop
xchg
push
popf
jo
mov
add
jle
adcl
or
shrl
mov
jo
dec
ds
imulb
sub
mov
dec
popf
insb
test
icebp
scas
inc
lahf
mov
inc
stc
dec
mov
sub
jge
inc
dec
and
sub
iret
sbb
mov
ficomps
fcompl
mov
sbb
pop
fdivp
adc
lgs
xchg
dec
mov
jns
repnz
push
push
divl
and
add
add
jo
adc
leave
jns
ds
test
cltd
insb
loopne
or
push
outsl
lock
aas
xlat
data16
inc
jae
inc
jg
sbb
sarl
stc
fdivr
mov
xor
mull
mov
xchg
icebp
adc
or
arpl
pop
sub
mov
pop
insb
jo
adc
stos
fsubrl
fidivl
mov
pop
cli
mov
inc
dec
aad
leave
xor
mov
lods
rcll
xor
ss
dec
jbe
sbb
loope
test
pop
pop
aaa
and
hlt
cmp
push
in
mov
xchg
pop
dec
or
pop
add
pop
daa
adc
faddl
cltd
cltd
cli
xor
cmp
cmp
idivl
leave
cmpsb
xor
and
cmpsb
mov
loope
mov
jbe
rcrl
push
jle
bound
icebp
mov
pop
dec
in
pushf
jo
mov
mov
mov
loopne
ljmp
popf
xor
call
fld
daa
jp
jb
or
ds
or
test
iret
mov
nop
pop
xor
xor
or
cwtl
cmp
stos
cmp
divb
dec
mov
cli
imul
aaa
inc
jno
sarb
mov
mov
mov
lcall
push
push
adc
fldt
fdivrp
repz
inc
aaa
loop
lods
mov
iret
sti
dec
jge
mov
gs
and
xor
sbb
call
fs
fstpl
push
cmp
cmp
cltd
pop
dec
adc
jne
dec
jp
xor
lea
sbb
push
sub
cmp
xchg
mov
jbe
enter
push
sub
nop
scas
fnstsw
cmpsl
or
push
mov
jle
add
daa
out
cmpsb
and
adc
inc
js
push
or
push
pop
push
pop
aam
xchg
xor
jne
outsb
push
sub
fsts
aaa
push
dec
dec
inc
pushf
xor
addr16
arpl
ret
out
mov
push
dec
sub
xchg
in
mov
repz
mov
mov
and
sahf
lds
push
pop
mov
outsl
imul
mov
popa
mov
test
in
lods
fcmovnu
cmp
jmp
jle
mov
out
and
stos
fisubrl
jns
pusha
adc
sub
stos
mov
out
or
ljmp
xor
rcl
lods
mov
aaa
cmp
inc
cmp
adc
adc
lcall
testb
push
loop
das
sar
sbb
or
xchg
push
dec
or
xor
add
pop
mov
ret
shl
iret
test
shl
pop
xlat
aas
imul
xchg
cmp
mov
rolb
sub
insb
xor
mov
adc
mov
addr16
rcrl
dec
xor
mov
adcb
inc
mov
jge
cmp
dec
out
push
sub
xchg
mov
es
scas
inc
daa
dec
hlt
fldt
push
pushf
dec
fldenv
jg
pushw
enter
pushl
test
dec
das
push
out
sub
in
arpl
jecxz
divl
inc
aam
bound
scas
cltd
das
pop
adc
add
nop
daa
jb
je
xchg
cld
repz
sbb
xchg
nop
pop
jae
sahf
loopne
xchg
mov
sub
push
push
mov
jns
mov
mov
xor
inc
dec
repz
add
shlb
jns
and
std
mov
bound
xor
cltd
mov
loop
fadds
jl
outsb
xor
or
dec
je
push
or
enter
add
jge
pop
lahf
xlat
popf
jo
jns
mov
dec
in
out
scas
sbbl
adc
mov
ret
test
mull
lret
dec
out
aaa
cwtl
mov
je
jae
cmp
pop
fbld
pop
jns
lods
icebp
sbb
inc
jp
stos
inc
pusha
sbb
jl
das
in
cmpsb
xchg
xchg
bound
mov
mov
addl
icebp
arpl
sub
sbb
inc
fwait
inc
loop
sub
mov
test
pop
jo
xchg
xchg
or
lds
cs
pusha
pop
mov
lcall
push
jmp
jne
sbb
ret
lods
cmp
popf
repnz
faddl
call
data16
lret
adcl
sub
add
xchg
mov
addl
mov
dec
out
imul
shrb
neg
add
sub
pop
lcall
call
pop
mov
hlt
adc
sbb
imul
addb
fsubrl
jno
adc
out
sbb
xchg
add
and
cld
fcmovne
mov
and
jne
xchg
test
or
cmpsl
sti
insb
cmp
adc
xchg
test
add
ret
push
addr16
dec
jnp
push
add
jne,pn
jg
imul
mov
jb
cs
sbb
push
ja
int3
cmc
add
or
xchg
cmp
add
fimuls
xchg
xchg
ret
andb
cmp
data16
push
rorb
fcmovnbe
stos
rcrb
xchg
xchg
paddusb
mov
push
xlat
mov
xchg
aam
sub
pop
jnp
out
cmp
fs
nop
and
mov
cmc
xor
xor
pop
lea
cwtl
sub
imul
and
daa
add
cld
inc
popf
inc
mov
insl
mov
out
pop
lcall
popf
repz
cmp
mov
sbb
jecxz
aas
filds
les
or
push
inc
js
loopne
xchg
push
test
mov
mov
mov
std
adc
pop
test
inc
mov
das
loope
dec
sub
dec
xor
sbb
out
stc
sbb
cmp
in
mov
push
jno
push
mov
push
stc
jmp
jl
or
xchg
scas
inc
sbbl
out
and
outsl
sti
pop
clc
in
sbb
jle
pop
stc
add
inc
mov
pop
call
loopne
lcall
cs
bound
mov
cmp
loopne
mov
cmpsb
rcrl
loopne
mov
cmc
lea
and
push
cld
or
jge
sahf
mov
sub
mov
dec
add
adc
es
cmpsb
sti
sarl
push
mov
mov
rorb
or
mov
xchg
repz
stc
out
aaa
dec
notl
jecxz
or
sub
dec
mov
dec
subl
pop
jb
iret
or
mov
mov
adc
adc
or
sub
rorb
punpckhdq
inc
sub
adc
adc
aad
cld
xchg
push
mov
rorb
sub
fwait
in
mov
js
out
push
dec
sbb
lock
push
repnz
jp
stc
sarl
divl
dec
test
pop
xor
pop
pop
clc
scas
pusha
adc
mov
mov
cmpsb
and
xor
mov
cli
mov
push
pop
je
cld
pop
push
jecxz
jmp
pop
cltd
fdivs
push
sti
mov
fldl
cmpsb
pop
iret
daa
inc
fildl
in
ror
out
pop
jbe
inc
push
push
into
mov
sbb
xor
lods
dec
aas
and
cmp
gs
mov
in
mov
je
jbe
or
mov
cmp
mov
sub
jp
es
mov
mov
stos
mov
add
scas
cmp
das
pop
insb
xor
sarl
adc
movsb
lods
cmp
les
sti
dec
mov
loop
lods
mov
sbb
xchg
jg
cltd
bnd
mov
in
or
mov
add
cmp
ficompl
add
mov
mov
orb
lret
jns,pn
enter
jmp
in
add
ds
push
xor
jecxz
iret
clc
xchg
or
popf
and
adc
cmpb
xchg
loop
xchg
cmpsl
testb
xchg
cmp
sbb
mov
insl
sbb
cmpsb
push
xchg
mov
pushf
std
pop
jb
mov
sbb
test
xor
jno
lods
push
inc
mov
repnz
stc
bound
fwait
push
in
mov
stos
gs
push
mov
fwait
sbb
lret
movsl
xor
push
fcomip
popa
mov
push
shr
cmp
or
inc
jno
pop
loop
pop
inc
xor
lock
jl
lods
sub
fcompl
cwtl
sub
popf
aad
movsb
sub
mov
or
xorl
jmp
jge
xchg
pop
dec
je
imul
jecxz
cmp
mov
cmpsb
mov
sub
push
shlb
jno
andl
enter
dec
popf
push
pop
cltd
jg
or
mov
sbbl
adc
adc
or
leave
loop
mov
cwtl
repnz
out
stos
js
cmp
jne
add
xchg
pop
jno
fidivrl
cmpl
jae
cmc
or
push
push
mov
js
pushl
dec
out
mov
push
and
xlat
aad
mov
loop
lods
jo
arpl
xor
icebp
push
adc
pop
cmp
cld
fnstenv
loopne
xchg
cltd
push
mov
fnsave
inc
mov
test
add
sbb
in
je
cmpsl
call
imul
rcrl
incl
aad
fistpl
lret
in
insb
xor
sub
xor
sti
aad
fstp
push
fsubs
mov
ficoml
jb
sub
loop
sahf
imul
insl
or
fdivl
mov
cwtl
and
sti
dec
dec
int
cltd
data16
pop
lret
mov
hlt
ljmp
add
xor
ljmp
xor
or
jmp
pop
push
mov
stos
xor
cli
mov
scas
ljmp
jno
jge
loop
ret
sahf
add
cmp
sbb
test
cltd
in
sub
add
jns
fldcw
push
dec
jl
call
xor
push
pop
out
fs
add
mov
in
push
or
xacquire
lock
pop
call
sbb
sub
inc
inc
sub
push
test
pop
mov
call
inc
fsubr
push
fwait
mov
xor
mov
mov
subb
pop
adc
mov
call
pop
scas
loope
mov
pop
clc
nop
pushf
in
cmpl
shrl
addr16
pop
pop
adc
inc
insl
and
in
mov
movsb
jbe
orl
mov
scas
fcoms
repnz
or
mov
rcrb
mov
enter
loopne
push
sub
add
xlat
test
clc
add
jge
mov
xor
in
jne
mov
xor
mov
scas
mov
sub
int
lahf
shr
shlb
out
addl
cmpl
cmp
test
int
aaa
and
push
popf
jg
mov
dec
pop
sub
hlt
lcall
int
popa
ja
sub
sub
cmpl
jo
sub
mov
and
rclb
sbb
or
mov
fwait
xchg
dec
push
inc
arpl
movsl
mov
mov
call
fildll
or
add
in
mov
lea
call
cmpsl
ret
adc
out
xchg
adc
ds
in
and
sbb
sub
add
test
fisttpl
jno
ret
test
loop
dec
sub
aaa
xor
mov
xor
jns
pop
xchg
cmpsb
mov
push
mov
pop
ss
sbb
mov
sti
mov
pop
jge
shlb
pop
insl
lahf
loop
cwtl
mov
xor
cli
jns
ds
jae
sub
sarb
mov
scas
mov
jae
lret
cwtl
ret
mov
xchg
ret
pop
fcomps
popa
and
mov
dec
nop
out
mov
jle
and
pop
stc
inc
mov
fucomip
xchg
inc
and
mov
push
and
xchg
test
sarb
sahf
idivl
cmp
inc
scas
pop
mov
mov
test
imul
add
add
orb
push
push
add
inc
xchg
loop
jmp
lret
mov
add
inc
jae
lock
push
adc
jge
sar
add
add
sbb
adc
lret
jp
xchg
add
jmp
cmp
inc
cmp
xchg
inc
adc
movsb
clc
ficompl
jo
add
sbb
sarl
ret
outsb
shlb
adc
sarb
mov
getsec
dec
push
int3
out
add
test
push
cmp
jne
call
icebp
ja
add
iret
pop
xchg
rcrl
push
inc
loop
adc
jno
scas
ss
cmp
popl
mov
push
mov
adc
or
xor
mov
jno
or
xchg
cmp
dec
mov
loope
out
hlt
das
adc
cmp
mov
dec
cltd
sti
stos
pop
cmp
sbb
test
push
scas
push
shll
mov
mov
hlt
pop
sub
daa
xchg
gs
loope
loope
and
mov
mov
rolb
adc
cmp
xor
or
aas
mov
mov
xchg
push
mov
inc
jne
clc
sbb
test
jbe
jl
pusha
imul
aad
shlb
mov
in
pop
jp
sbb
call
and
jo
mov
adcb
or
pop
pop
mov
jg
out
nop
mov
dec
movsb
cmp
ret
xor
dec
fwait
fs
iret
pop
outsl
jbe
sti
sbb
jl
and
dec
outsb
cltd
add
rorb
mov
jg
jp
rol
dec
sbb
loop
fldl
pop
enter
lcall
sub
repz
idiv
add
push
dec
imul
push
jmp
daa
arpl
movsb
sbb
xchg
cli
repnz
pushf
adc
pop
ret
xchg
cmc
aaa
push
sub
pop
mov
push
dec
js
icebp
sub
xchg
mov
lods
imul
sbb
cmp
mov
cmpsl
incb
push
dec
mov
mov
lods
out
mov
sbb
dec
xchg
fmuls
add
gs
cmpsb
gs
xchg
ja
into
sbb
xchg
ljmp
mov
add
mov
and
pop
mov
test
and
rorb
inc
push
mov
push
mov
mov
addl
ret
jae
sti
lea
fnsave
jl
xchg
mov
or
pop
pop
push
or
test
ss
lods
fldenv
jb
cmpsb
xor
loop
out
ret
or
mov
and
out
cmp
cmp
xchg
pop
xchg
mov
push
xor
or
lahf
pop
lods
inc
insb
jge
push
insl
xchg
sbb
sbb
ja
dec
mov
xchg
nop
mov
xor
ret
fcoml
lock
test
xchg
push
or
pop
sub
mov
cmpsl
xor
mov
sbb
dec
lods
out
repnz
das
cwtl
cmc
roll
and
je
fwait
dec
sub
inc
sbb
popf
icebp
xor
push
and
cmpsb
xor
pop
or
fnstsw
xchg
cmc
movsl
mov
mov
rorl
aam
cltd
in
mov
js
mov
daa
or
push
test
insb
add
sbb
push
sub
in
push
sbb
outsb
xor
mov
adc
jb
xchg
mov
adc
or
jbe
repz
cmp
gs
jno
or
ret
xor
sti
jle
mov
sti
mull
out
rcrl
mov
je
mov
fcompl
scas
push
or
xor
arpl
lcall
jb
and
xlat
sub
adc
adc
js
jmp
notb
mov
cmp
push
out
pop
lods
sbb
cmp
and
bound
dec
push
lea
sbb
jge
add
xchg
ret
push
lcall
mov
mov
and
pusha
add
and
aam
mov
mov
adc
mov
lea
push
test
and
pop
cmp
inc
xor
cld
lock
mov
xchg
sbb
xchg
lock
pop
mov
movsb
cmp
pop
fistl
sti
daa
xor
shlb
cmc
fsubrs
ror
cltd
in
jb
insl
pop
dec
jp
and
mov
test
ljmp
adc
push
fs
or
out
pop
push
loop
into
outsb
mov
sbb
es
movl
or
stc
fwait
pop
mov
sti
pop
ret
jno
adc
popa
pop
xchg
scas
mov
jmp
pop
gs
bound
ret
or
add
adc
jg
jbe
gs
dec
incl
iret
push
and
mov
hlt
mov
pop
xor
cmc
fistl
or
fimull
scas
inc
xchg
dec
xor
sbb
pop
push
mov
frstor
lret
cmp
push
inc
mov
les
das
push
loop
fs
push
lcall
call
hlt
xor
inc
xorl
mov
inc
repnz
in
cmp
ljmp
adcb
clc
lock
cmpsl
loope
jbe
out
add
dec
jl
dec
popf
sbb
stos
outsl
mov
out
sbb
addr16
jecxz
pusha
int3
leave
sahf
mov
xor
push
ds
pop
orb
add
insb
je
ss
js
dec
inc
loope
icebp
imul
mov
test
sahf
nop
pop
repz
mov
mov
insl
mov
orl
int
sub
pop
fucomp
push
and
push
loop
scas
jmp
mov
stos
push
jecxz
notl
mov
sarl
adc
xchg
daa
dec
dec
mov
xlat
jecxz
jb
jge
call
mov
cmp
mov
rcrl
pop
pusha
and
add
shr
xchg
mov
inc
cltd
push
adc
mov
call
in
pop
push
dec
jb
leave
cmp
jl
mov
movsl
adc
in
into
stos
push
loope
cltd
jno
adc
xor
fwait
pop
dec
sbb
iret
aad
adc
mov
lods
es
cmp
fwait
dec
repnz
loopne
test
iret
cltd
pop
mov
rcrl
mov
inc
cwtl
in
insl
stos
bound
cltd
and
add
out
cmp
add
xchg
icebp
xchg
mov
mov
insl
jae
xchg
loope
xchg
jge
and
test
std
inc
push
adc
sub
aam
push
ljmp
shll
outsb
jp
roll
orl
sbb
mov
in
movsb
dec
and
mov
hlt
sarl
mov
xor
fdivp
sbb
jp
sbb
shl
out
leave
out
loope
adc
push
pop
pop
cmp
cmp
xlat
lds
push
sub
ret
inc
xchg
test
fsts
in
dec
dec
les
sub
mov
mov
out
and
or
push
iret
mov
cmpsb
fmuls
adc
jl
and
out
jno
sub
lahf
sbb
xchg
pop
je
in
sbbl
ljmp
or
sbb
mov
mov
nop
xchg
mov
add
jecxz
mov
add
outsb
dec
popf
scas
ljmp
cmp
in
jbe
aad
call
roll
sbb
fsub
adc
mov
mov
clc
or
mov
adc
insb
jbe
dec
iret
mov
xor
shr
push
scas
mov
and
movsl
or
jp
mov
sub
pop
jns
scas
call
cmc
pushf
arpl
imul
xchg
cli
xchg
push
pop
push
jae
fildll
subb
popa
push
lcall
int
cmp
xor
outsb
lods
cltd
in
popa
mov
dec
jge
or
imul
imul
adc
lock
mov
pop
inc
pop
aad
pop
cld
std
xchg
loopne
and
or
pop
sarb
and
rclb
icebp
mov
cmp
cmp
xchg
aaa
outsb
mov
mov
pop
out
sub
or
push
pop
push
cmpsl
dec
mov
rcrb
into
loope
pop
mov
xchg
cltd
pusha
leave
mov
adc
dec
into
jo
push
idiv
shll
mov
dec
pop
sbb
or
xor
or
cmp
arpl
mov
jnp
pop
or
jmp
mov
fisubrs
sub
movsb
inc
fdivrp
jmp
dec
push
pop
rdmsr
xchg
call
mov
push
pop
mov
rcl
mov
aaa
fimull
mov
and
fs
inc
enter
xchg
out
and
lock
nop
outsl
and
lods
sbb
cmc
and
sub
popl
imul
jns
lds
xchg
data16
je
lret
ljmp
add
bound
dec
neg
jb
jmp
stc
aad
inc
cmp
pop
aas
sub
mov
pushf
jae
xor
sub
cmp
es
push
cmc
fidivrl
push
adc
aaa
push
mov
scas
jmp
scas
cmp
xor
push
cwtl
mov
jmp
cltd
dec
push
aaa
jae
test
mov
adc
mov
adc
fbstp
rclb
cmpb
mov
insb
lods
aam
in
inc
adcl
mov
ss
xchg
in
dec
jb
insl
orb
push
mov
addr16
in
push
mov
inc
inc
dec
into
mov
xor
cmp
jle
push
inc
xchg
lahf
adc
fisubrl
pop
pushf
movsb
push
sahf
test
fs
cmp
sahf
mov
int3
orl
cltd
out
insb
xor
sti
push
lods
jg
loop
xor
cmp
jg
outsl
inc
mov
dec
rcr
pop
aad
filds
adc
std
in
cld
out
fwait
dec
add
push
movsb
sbb
aad
popf
rcrb
or
clc
addl
push
mov
pushf
es
ret
sbb
imul
pop
lock
push
or
jl
stos
std
add
mov
adc
add
jbe
cli
pop
and
call
mov
icebp
xchg
cmp
add
push
sti
lcall
mov
mov
mov
push
call
dec
fisubs
cmp
xchg
ficomps
orb
mov
cltd
cs
sbb
sbb
cltd
dec
adc
mov
bound
sbb
pop
add
in
in
fldcw
dec
cmpsl
js
fmul
sub
bound
pusha
test
lahf
nop
js
test
ret
aaa
xchg
enter
lret
iret
iret
cli
daa
aaa
lock
adc
je
cmp
jmp
lods
mov
insl
ljmp
loop
shlb
out
pop
jge
add
or
push
jne
dec
push
sub
outsl
push
cltd
mov
push
xchg
rcrb
ja,pt
int
sarb
mov
stos
out
std
test
sbb
jmp
add
mov
cmpsl
xor
inc
test
add
inc
aam
cmpsb
mov
jmp
cmc
jge
mov
mov
scas
fisubl
jle
mov
arpl
xchg
shll
out
daa
loope
xchg
cmp
push
cs
xchg
inc
lea
sub
outsb
sahf
std
std
mov
cmc
sbb
stc
xchg
pop
shlb
arpl
mul
mov
push
inc
outsb
test
adc
push
repnz
mov
push
pop
aam
dec
loopne
pop
cmpsl
dec
xchg
test
push
and
push
stc
in
or
xchg
std
ljmp
dec
rolb
jecxz
std
mov
outsl
loop
arpl
mov
or
dec
xor
ja
fsub
je
cmp
arpl
test
inc
jp
sub
sarb
jo
jg
jbe
out
mov
nop
sbb
cwtl
dec
xchg
push
sbb
out
jge
sub
pop
sbb
stos
or
out
mov
mov
dec
cmp
jle
mov
mov
mov
clc
and
test
hlt
repz
int
out
addr16
xor
add
int
cli
mov
and
es
xor
subl
outsl
sbb
push
jb
insb
xchg
fstps
fistpl
pop
mov
movb
and
sahf
mov
adc
ret
bound
imul
mov
jb
enter
lock
push
push
lods
imul
xchg
push
add
xchg
sub
sub
mov
in
iret
dec
ss
aas
jne
int3
xor
es
jmp
addr16
das
scas
jns
fstps
sub
ja
mov
ljmp
test
fstpl
inc
cmc
sbb
rclb
and
int3
sub
ja
dec
jecxz
mov
rorb
stc
push
xor
push
pop
push
cltd
mov
fwait
add
adc
das
notb
jle
mov
push
pop
jo
dec
push
sahf
pop
ret
push
icebp
dec
dec
cli
es
cmpsb
cmc
mov
sub
and
inc
or
inc
or
aad
cltd
jecxz
clc
test
and
ja
pop
mov
in
sarb
mov
psubsw
fsubr
sub
nop
fidivrl
lret
sbb
jns
in
inc
mov
xchg
push
dec
cli
enter
push
movsl
pop
orb
and
cmp
clc
cs
sbb
mov
cmp
jle
and
xchg
jns
outsb
scas
or
xchg
ret
arpl
mov
inc
test
adc
xor
jl
jp
or
rcrl
in
pusha
push
sub
push
xor
lcall
cmp
mov
stc
push
idivb
repz
into
lahf
xor
inc
or
call
pop
addl
sbb
sbb
leave
and
and
adc
push
dec
lock
pop
insl
je
icebp
inc
sbb
pop
mov
aam
push
sbb
in
push
push
mov
out
test
mov
jmp
sub
daa
fistps
jno
in
pop
stos
add
jg
xor
mov
adc
insl
pop
fildl
aaa
loopne
add
push
sub
xchg
arpl
mov
in
add
aam
sub
movsl
aad
in
shlb
pop
fbld
push
adc
inc
pop
mov
push
push
out
pop
xchg
dec
ret
jno
jae
and
cmp
in
push
lods
mov
gs
mov
gs
sar
lds
pop
xchg
mov
enter
out
cmpsb
stc
push
test
ss
adc
icebp
cld
in
leave
scas
sub
cmp
into
mov
in
in
shrb
cmp
push
imul
jae
mov
mov
mov
mov
xchg
int3
dec
dec
lcall
xabort
xchg
push
stc
xlat
inc
je
sbb
push
mov
push
mov
in
mov
add
adc
jbe
mov
pop
into
jl
push
push
and
pop
cld
mov
rorb
add
sbb
sahf
cmp
repnz
xor
or
push
lods
jbe
sub
les
jne
mov
push
add
xchg
popa
mov
mov
mov
or
loope
mov
jle
jno
xor
dec
push
pushf
loop
add
into
adc
mov
es
jnp
sbb
mov
push
movsb
lods
test
call
scas
mov
aaa
xchg
test
and
stos
insb
in
cld
xor
jno
pop
frstor
ret
mov
call
sbbl
scas
xchg
push
inc
sub
mov
mov
inc
mov
xchg
int3
dec
icebp
sbb
addr16
inc
inc
sub
xor
fs
add
pushw
lahf
adc
in
aas
mov
xor
sub
ljmp
pushf
mov
fdivp
and
sub
lods
cld
mov
std
mov
xor
in
xchg
sbb
cmp
addb
stos
pop
and
imul
sti
sbb
lea
and
push
addl
fisttpl
jno
dec
or
xchg
mov
pop
scas
pop
loop
ret
addl
dec
sbb
xchg
mov
mov
mov
dec
pop
xchg
cmp
test
cmp
popa
cmp
repnz
dec
jb
rorb
mov
cltd
stc
repnz
lret
push
xchg
fisubs
enter
mov
fs
cmp
xor
imul
and
cmp
fcmovu
insl
push
leave
in
lret
xchg
jne
pop
cmpsb
or
xchg
repnz
cmp
cmpsl
daa
jo
mov
repnz
ret
out
jne
sub
jae
arpl
scas
aas
daa
inc
add
dec
movsl
pop
jb
cmpb
mov
sbbb
ret
sbb
inc
movsb
inc
inc
xchg
mov
out
mov
mov
mov
push
jge
fs
insb
dec
es
jl
push
pusha
jge
pusha
cmpsb
testl
inc
ds
fcomps
lods
push
sbb
call
stos
adc
xchg
imul
aas
cmpsl
lea
xor
dec
sub
mov
testb
jmp
ficoms
out
repnz
jge
sub
inc
mov
add
pop
mov
inc
or
jmp
daa
stos
or
mov
cwtl
inc
pop
mov
mov
dec
leave
cmp
inc
sub
mov
push
sbb
jo
pop
pop
sbb
aas
push
or
dec
inc
pop
lea
je
sub
out
push
rorl
adc
push
adc
add
and
pop
stos
push
or
inc
mov
inc
or
adc
or
addl
inc
or
stos
pushf
mov
push
repnz
in
stc
push
imul
lret
mov
sub
in
and
and
test
inc
push
cmp
mov
push
cmpsb
or
push
mov
in
adc
dec
pop
cltd
adc
bound
jge
leave
push
mov
pop
ljmp
xchg
sbb
lock
jl
enter
pusha
pop
add
add
fidivs
mov
dec
out
cmp
add
mov
mov
cmp
pop
push
push
lods
mov
cmp
mov
xor
int3
pop
pop
clc
bound
sti
dec
nop
sub
adc
sbb
adc
lods
int
fildll
pop
xor
lcall
and
pop
xchg
adc
call
or
add
and
or
aam
dec
mov
dec
scas
pushf
mov
push
in
xor
inc
add
sub
stc
cmp
outsb
fstpl
int3
insl
add
mov
mov
adc
jl
out
cmp
jbe
repz
sub
dec
movsb
or
insl
cld
and
sub
mov
daa
adc
popa
jg
jae
jp
enter
push
mov
sub
jno
adc
stc
out
outsl
cld
movsl
inc
stos
xchg
jle
inc
daa
sbbb
mov
arpl
jmp
or
xor
clc
imul
sub
nop
lret
mov
cld
mov
scas
stos
pop
jb
mov
test
cmpsl
in
movsb
inc
mov
xor
iret
mov
and
xchg
mov
sbb
or
arpl
scas
test
push
std
mov
xor
mov
clc
add
dec
into
les
rolb
mov
adc
mov
sub
inc
inc
mov
gs
sub
test
aaa
mov
push
mov
fsubl
into
xchg
jns
lret
das
cmp
or
fcmovnu
fldcw
cld
iret
enter
insb
xor
sbbb
sub
ret
cmpsb
xchg
sbb
fistps
pop
add
sti
lahf
fidivrs
dec
in
cltd
jb
pop
pop
stos
jg
imul
or
push
xchg
inc
ja
adc
aaa
mov
subb
pop
mov
loop
mov
mov
clc
and
mov
dec
jo
lea
mov
push
lock
sub
call
sbb
pop
test
xchg
cmp
inc
cmpsb
sarb
sub
pop
lock
push
mov
xor
adc
pop
jp,pt
js
push
push
or
sbb
iret
jl
les
jbe
ret
and
mov
pop
push
sub
jg
jmp
and
mov
das
jg
sbb
xchg
and
test
dec
push
movsb
add
imul
xchg
ljmp
das
push
dec
adcb
adc
push
adc
cli
add
mov
jp
jo
int
push
int3
xlat
cmpsl
gs
adc
stos
mov
mov
cmp
fwait
inc
nop
loop
sbb
push
xchg
mov
jne
divb
jmp
and
mov
in
inc
negl
fsubrs
sahf
mov
mov
jae
pop
rcrl
sbb
stc
pop
adcb
lods
call
and
imul
js
pushf
push
out
shlb
in
test
mov
push
sarl
add
pop
sti
sub
nop
js
jno
fisttpll
mull
or
pop
push
xchg
cs
xor
push
push
sbb
pop
inc
adc
fldt
int
loop
pop
mov
cs
jb
jecxz
lahf
in
ficoms
push
fcmovne
filds
and
imul
add
cmc
pop
adc
mov
pop
cli
js
add
pop
pop
mov
in
add
movsb
xor
push
mov
rcl
pop
movsl
cmpsb
scas
mov
mov
or
inc
fnsave
sarl
shl
pop
jo
dec
loope
loope
or
add
mov
and
jnp
pusha
pop
dec
outsb
jg
or
arpl
xchg
mov
mov
mov
dec
je
jp
dec
dec
ja
add
orb
pop
or
movsl
sbb
insb
push
cld
fiaddl
add
imul
cmp
inc
ja
or
scas
ss
in
outsl
mov
sub
dec
int
lret
sub
or
repz
jno
repnz
in
push
addr16
popa
scas
stc
js
sti
jl
jne
xor
mov
push
or
cld
pop
jns
incb
cld
push
dec
lds
and
mov
out
cmp
jno
sub
pushl
mov
xchg
inc
xor
lock
divl
sbb
stos
orb
sbb
je
popf
fistps
jb
mov
lock
popf
inc
hlt
ret
or
mov
or
push
jno
not
out
lods
test
cld
movsb
hlt
add
dec
inc
es
xlat
shl
mov
pushf
sarl
adc
xchg
mov
test
loope
in
leave
mov
addb
mov
mulb
adc
or
icebp
xchg
addr16
mov
shll
daa
shlb
dec
lock
sbb
jns
adc
ret
pop
int
subb
or
dec
jecxz
lea
dec
mov
lahf
inc
push
fstp
lds
mov
cmp
cwtl
ja
lods
pop
ss
sbbb
cmc
std
inc
dec
and
dec
orb
dec
pushl
xlat
add
or
cmpsl
inc
sahf
add
test
push
mov
jnp
adcl
scas
mov
imul
push
test
into
dec
lea
repnz
lret
ret
shll
lea
test
mov
cmp
mov
subb
xchg
aas
sbb
pxor
or
mov
fptan
xchg
cmp
jg
sub
rep
mov
inc
les
xlat
add
out
sbb
sbb
mov
sub
push
jmp
inc
ret
jbe
add
lret
adc
xchg
aam
icebp
xchg
jmp
ficompl
dec
inc
repz
push
lds
xchg
cmp
mov
mov
sti
mov
idiv
mov
cmp
push
dec
bound
inc
inc
dec
ljmp
enter
fwait
test
pop
rcll
fisubrs
push
jne
inc
pop
ljmp
xchg
dec
outsb
fwait
and
icebp
inc
subl
lcall
test
pop
into
call
aas
add
stc
lods
imul
mov
fdiv
loopne
xor
fsubl
sbb
cmp
sub
les
mov
fsts
repz
loopne
outsb
scas
sub
inc
adc
or
jl,pn
xchg
mov
jb
pop
pop
mov
lock
rclb
jbe
mov
jg
adc
pop
cmp
into
adc
pushf
mov
cli
loop
sbb
js
in
add
insl
or
or
js
bound
aas
push
cmp
xchg
icebp
fldlg2
jmp
mov
in
cmp
add
outsl
shl
test
xchg
or
dec
sub
rorl
xchg
pop
dec
sbb
mov
adc
stos
gs
outsl
jns
adc
pop
or
pushf
cmp
mov
adc
lahf
rcll
es
je
orl
jnp
pushf
xor
jbe
outsl
lods
xor
das
jp
mov
sub
or
add
xchg
repz
mov
cwtl
mov
cli
shll
mov
push
add
nop
inc
fisttps
mov
in
xchg
ret
dec
cltd
or
sbb
negl
push
popf
test
mov
sbb
hlt
sbb
sbb
jae
mov
lret
sbb
lea
mov
jnp
test
add
mov
clc
and
cmpsb
adc
mov
nop
and
adc
es
out
insb
imul
pop
jae
pop
jae
mov
dec
adc
jno
aaa
fisubrs
jge
rcr
cmp
add
incl
and
lret
jnp
mov
aad
or
out
push
incb
add
popl
jno
hlt
scas
sub
jnp
loope
cmp
mov
cmp
xor
push
sbb
jae
dec
xchg
hlt
mov
push
cmovno
jle
ret
fcompl
fwait
sub
mov
pop
or
push
mov
jo
imul
ljmp
mov
mov
cltd
pop
fld
repz
in
jecxz
adc
mov
subb
cmpsb
arpl
jp
push
data16
fst
push
test
pop
mov
leave
push
sbb
jecxz
addl
pop
mov
test
hlt
adc
pop
out
xchg
cltd
popa
jbe
scas
or
push
xchg
rep
push
je
jge
outsb
cmp
mov
scas
mov
cmp
ljmp
adc
loopne
sub
push
jle
push
subl
iret
or
jbe
test
sbb
es
or
lcall
mov
cmp
pop
icebp
push
test
pop
xchg
pop
mov
sub
ja
xchg
jmp
push
scas
adc
cmp
test
clc
or
sahf
inc
or
andl
mov
js
pop
adc
jo
cmp
add
jnp
daa
int
or
cli
js
daa
fmuls
jb
loopne
lock
mov
xchg
das
aam
adcl
lock
into
cmpsb
jo
jecxz
adc
lret
cmp
out
xchg
add
mov
and
xlat
pop
pop
scas
mov
xchg
dec
pop
popf
mov
ss
and
fs
push
mov
pop
sbb
jnp
movb
call
xchg
cmp
dec
xor
xor
mov
add
push
mov
xchg
mov
fisubrs
dec
nop
leave
das
lock
lahf
mov
jle
mov
xchg
add
push
sub
fnstsw
aam
sbb
cmp
inc
loop
push
pop
mov
cld
add
mov
xchg
or
int3
mov
aaa
std
pop
mov
aas
mov
insb
push
adc
cli
mov
add
jg
std
mov
dec
movsl
arpl
movl
call
add
add
aam
cmpl
hlt
mov
mov
inc
sarb
clc
loop
add
push
lods
movsb
sbb
stc
dec
jl
out
mov
insb
into
movsb
adc
sahf
push
mov
adc
inc
test
adc
or
lock
jle
sbb
test
push
ljmp
sub
or
mov
inc
fistps
jle
pusha
cmpb
lret
sbb
andl
xor
pop
mov
xchg
push
inc
ljmp
movsb
cmp
pop
cmp
cmp
shrw
clc
dec
jnp
outsl
std
mov
call
adc
jp
jae
clc
jp
cld
rorb
cmp
pop
fstpt
dec
leave
mov
mov
mov
hlt
outsb
ds
or
test
xchg
xchg
xor
mov
xor
repnz
xor
xchg
imul
repz
test
dec
sub
adc
aad
mov
mov
cltd
xchg
daa
clc
mov
pop
data16
aam
enter
mov
orb
imulb
push
cmp
xchg
xchg
xchg
or
aaa
popa
test
mov
repz
and
ret
push
rcrl
lcall
int3
xchg
clc
jbe
cmp
iret
pop
jnp
pop
hlt
adcl
imul
loop
ljmp
or
nop
leave
mov
call
cs
or
inc
int
jne
jle
jmp
cmp
imul
dec
jae
adc
sub
xor
lea
xchg
addr16
aad
mov
adc
mov
out
pop
pop
lds
insb
or
dec
inc
add
fistpll
lea
cmp
sbb
jo
movsb
jle
sbb
xchg
cmp
xchg
xor
dec
mov
out
jge
add
icebp
cli
sahf
sub
test
add
sbb
push
test
push
repz
push
popf
ret
add
aad
jne
pop
dec
cmpsl
repnz
fimuls
imul
popa
xchg
in
dec
sub
aas
sbb
jnp
test
lods
inc
pop
mov
les
sbb
mov
mov
mov
rcrb
fwait
cwtl
pusha
adc
xor
leave
add
mov
gs
xor
sbb
fstl
mov
inc
js
dec
jecxz
nop
das
cltd
mov
pop
scas
leave
jge
xchg
sahf
push
loope
lods
xor
js
xchg
nop
mov
jae
arpl
push
xchg
lea
sbb
in
mov
push
jle
es
std
push
rol
xor
aas
lods
stos
mov
pop
cs
js
mov
add
scas
sar
insb
cmp
or
mov
js
jle
jbe
std
mov
xchg
roll
sbb
fmull
popa
movsl
or
sub
add
mov
cmp
inc
test
leave
ss
sahf
fwait
add
xchg
jmp
lcall
fsub
xor
cmp
int
cmpsb
in
ret
int3
or
lahf
xchg
xor
mov
inc
push
sahf
inc
or
data16
pop
pop
call
mov
sbb
xor
and
pusha
mov
mov
outsl
mov
push
dec
and
fisttpll
fs
jns
mov
test
pop
outsb
adc
je
pop
adc
sbb
ret
imul
mov
inc
out
mov
xchg
jp
sbb
jp
mov
push
in
pop
movsb
add
ja
in
lock
jg
loope
xchg
hlt
fldenv
or
or
lcall
adc
inc
test
andb
call
sbb
andb
pop
test
out
dec
mov
cmpsb
jle
xchg
iret
scas
sub
mov
out
loopne
pusha
lods
pop
in
arpl
pop
mov
jmp
dec
icebp
inc
popa
xchg
popa
add
fwait
shl
aaa
sbb
adc
aad
xor
cltd
loop
sub
popa
lds
fs
xchg
inc
insl
leave
pop
mov
rorb
ja
mov
mov
lret
or
and
repz
test
push
cmp
xor
nop
and
incl
inc
jmp
ljmp
xchg
pusha
leave
push
fdivr
and
repz
popl
dec
add
push
bound
or
rcl
mov
xchg
outsl
mov
cmp
xchg
fsubrs
divb
xchg
push
cli
add
mov
xor
cmpsl
pop
pop
pop
mov
out
lret
cltd
lcall
insb
mov
in
xacquire
jno
cld
sti
mov
sub
mov
in
push
lea
icebp
insb
mov
lods
cmp
or
insb
sbb
dec
imul
jle
lcall
push
push
and
clc
insb
cmpsl
dec
movsb
int
rclb
sub
dec
das
dec
lcall
aad
xor
rcll
outsl
sbb
outsb
ret
mov
xorl
in
ficomps
cwtl
in
xor
inc
shrb
mov
xor
call
push
sub
cmp
jno
jno
data16
mov
aad
mov
xlat
fstpl
sub
add
xchg
inc
jo
stc
mov
jno
aas
xor
stos
clc
inc
push
jnp
mov
out
bound
rcrb
push
cmp
jb
sahf
popa
in
sti
aad
mov
test
add
or
jo
cmp
cmpsl
jecxz
jecxz
add
icebp
ljmp
rcrl
mov
jno
icebp
mov
mov
sub
sub
arpl
adcl
ret
jbe
loop
cmpsl
aad
add
xchg
cmp
xor
mov
mov
insl
sub
int
sub
pop
push
dec
test
and
inc
ja
cwtl
int3
dec
jo
adc
fidivrl
call
xor
repz
pop
out
mov
cmp
pop
loope
xor
test
mov
ret
pop
stos
push
call
in
or
xchg
sub
cld
ds
pop
scas
mov
xlat
into
cmp
outsb
push
push
and
imul
push
arpl
pop
sub
jle
cwtl
mov
sbbb
jbe
in
cs
aad
jae
sbb
out
inc
xchg
sub
xchg
xchg
pop
and
adc
mov
cmpsb
sbb
std
cmp
sub
mov
dec
incl
dec
popf
xchg
sub
lea
inc
xchg
pop
lahf
sub
sahf
jp
inc
aas
mov
lret
inc
adc
jmp
add
cltd
cltd
xchg
lret
xor
mov
fld
aaa
cli
fldl
fiaddl
call
ss
aas
add
xor
pop
mov
add
pop
mov
mov
ljmp
mov
adc
mov
pop
or
sbb
scas
pop
dec
fnsave
stos
mov
test
and
jne
xchg
jecxz
xchg
loopne
push
and
pop
push
xchg
xor
fwait
aam
mov
cmp
sub
lock
popa
inc
imul
inc
inc
dec
push
add
clc
jns
gs
and
lcall
ljmp
adc
add
xchg
inc
and
mov
pushf
mov
arpl
mov
mov
decb
outsb
mov
adc
je
out
or
movl
ja
dec
in
push
push
dec
loopne
in
sbb
mov
sti
pushf
inc
insl
nop
add
int3
mov
adc
jo
mov
into
outsl
add
adc
or
sub
mov
and
into
sub
lods
fisubl
xchg
aad
mov
lahf
pop
pop
movsb
push
push
ljmp
mov
and
jbe
mov
jle
das
push
mov
pop
lcall
pop
or
inc
sti
enter
cwtl
in
icebp
mov
pop
fdivrl
jns
jae
cld
jp
xor
sub
pop
fs
mov
inc
fdivrl
lahf
mov
shl
stos
test
movsb
cmovs
into
xor
inc
inc
jmp
or
cmc
daa
ret
mov
lret
jecxz
inc
adc
add
into
jae
mov
hlt
sub
ret
sub
sub
shl
out
sub
mov
pop
loop
std
sub
fldl
xchg
xor
jmp
xchg
lds
sub
push
jb
add
dec
stos
xor
pop
mov
push
mov
lock
jb
jne
jp
push
xor
cwtl
lret
ja
pop
push
add
movsl
pusha
cwtl
mov
fisttps
aad
and
inc
xchg
in
enter
jae
inc
mov
scas
cmc
mov
push
in
cli
mov
lea
scas
xor
mov
pop
jno
rcll
pop
and
incb
push
sti
scas
pop
lea
out
xor
aaa
lahf
pop
hlt
sub
pop
sbb
lods
inc
pop
add
mov
clc
hlt
add
ds
repz
mov
fcmovu
cmp
jge
cmp
dec
ror
push
dec
out
sti
cwtl
pop
xorl
cld
push
pop
pusha
add
aas
call
icebp
inc
lods
clc
and
cwtl
jle
js
adc
std
xchg
pop
adc
push
mov
or
jg
add
cmp
pop
lret
jb,pn
xchg
xlat
adc
jmp
sahf
scas
cld
push
push
aad
dec
jmp
outsl
inc
addl
inc
in
stc
inc
inc
pop
sti
in
int
push
adc
push
jne
xchg
or
xor
gs
xchg
jne
xchg
xchg
popa
aas
cmp
outsb
mov
jmp
faddl
pop
pop
xchg
and
inc
and
mov
les
imul
mov
fs
nop
push
xchg
jecxz
cs
add
and
pop
dec
fwait
sub
mov
js
pop
loop
sti
sbb
ret
or
dec
pop
ret
sbb
pop
call
xchg
dec
pop
xor
jne
adc
mov
mov
mov
aad
roll
fcompl
jbe
cmpsb
imul
je
mov
shll
ja
addl
lods
jg
inc
mov
testl
push
sbb
in
xchg
mov
mov
mov
adc
and
xchg
mov
sti
mov
iret
test
imul
cmp
int
icebp
xor
lahf
xchg
push
xor
push
fwait
cmpsl
aas
mov
loop
es
ja
adc
ja
ljmp
loopne
roll
jnp
sbb
cmp
arpl
and
in
cld
imul
lahf
pop
ret
and
notb
dec
insl
push
or
rclb
nop
mov
xchg
sahf
or
xor
xchg
dec
mov
fs
inc
or
jle
lock
inc
and
add
icebp
hlt
test
xor
inc
cmp
mov
ret
insl
add
pop
push
int3
push
in
jle
loope
and
cmpl
leave
test
popf
dec
sub
enter
ja
scas
mov
add
in
jne
repnz
lods
dec
jg
lea
sbb
sub
aam
cltd
sbb
jns
dec
lahf
cmp
std
fnstcw
jge
jae
mov
xchg
das
das
jae
fucomp
or
sbb
jmp
addr16
push
mov
push
ljmp
sbb
insb
movsb
ds
stos
das
filds
pop
jmp
push
mov
lret
cmp
cmc
jo
pop
push
int
push
insl
dec
ret
add
xor
jecxz
push
or
push
les
xor
and
lods
xchg
jle
sbb
add
jmp
jnp
gs
xor
inc
fnstenv
mov
push
pop
dec
add
add
xchg
imull
rorl
push
jo
or
adc
mov
adc
cwtl
sahf
dec
repnz
jb
and
xchg
addr16
dec
int3
push
xor
add
fwait
mov
add
lea
mov
lods
adc
mov
inc
or
cmpsb
fwait
pop
adc
ljmp
xchg
jno
adc
stos
insb
cmp
insl
shl
mov
lahf
adc
push
pop
pop
pop
loopne
and
or
fs
pop
xchg
jns
mov
mov
dec
dec
adc
rclb
mov
dec
cwtl
add
dec
mov
sub
addl
mov
or
sub
lods
pop
pop
dec
mov
pop
outsl
add
push
call
pop
lea
mov
mov
das
xor
popaw
fildll
sti
cmp
insl
pop
push
inc
pop
cwtl
pop
push
sbb
or
xchg
sbb
xchg
jb
jge
lock
inc
or
sbbb
fs
fcmovu
mov
ja
in
sbb
dec
fnsave
or
stos
pop
pop
dec
aas
aad
stos
clc
lret
add
jmp
adc
sar
sbb
cmp
xor
fsubrl
inc
sti
scas
js
int
xchg
push
dec
push
loop
mov
pusha
fldenv
mov
pop
or
jle
outsl
mov
mov
adcl
test
dec
es
add
cmp
dec
mov
push
pusha
inc
in
ljmp
imul
jns
das
mov
push
test
adc
and
pop
push
pop
or
iret
push
jmp
xor
dec
cmc
sub
jmp
es
inc
leave
aad
mov
jmp
call
push
and
out
pop
fcoml
xlat
cld
add
sahf
movsb
dec
and
jecxz
cmc
jo
popf
clc
xchg
ficomps
jb
in
pop
mov
es
insl
mov
inc
inc
call
ret
aas
mov
add
cmpsb
jge
xor
xchg
add
xor
sahf
push
jg
or
cmpsb
inc
std
xchg
test
pop
mov
adc
pop
jno
push
add
inc
clc
adc
loope
push
push
mov
repz
push
bnd
mov
gs
push
mov
sbb
and
sahf
push
shlb
cmp
mov
push
out
jae
out
mov
add
or
jb
out
pop
outsb
mulps
testl
push
xchg
stos
sahf
popf
jae
and
fdiv
xor
jp
test
stos
test
pop
cmp
repnz
test
sbb
add
mov
jbe
repnz
stos
out
cltd
sbb
jbe
mov
cmp
mov
pop
clc
ss
fiaddl
mov
adc
cmp
aad
test
rorb
fdivl
pop
jo
loopne
nop
push
sub
lret
add
mov
inc
jno
jb
repnz
add
test
xchg
imul
and
push
call
fmuls
pusha
sahf
inc
adc
cmp
arpl
jge
lcall
push
push
mov
add
loop
jnp
mov
les
sahf
aam
inc
mov
mov
xchg
jle
push
aad
mov
mov
out
fs
mov
jmp
cmc
pop
sbb
lret
movb
fcomps
pop
inc
add
xchg
aas
popa
or
and
call
sub
cmpsl
imul
cwtl
add
inc
sub
shr
cmc
xor
xlat
adc
call
pop
dec
xlat
dec
ss
lods
outsl
test
out
popa
cmp
cwtl
js
mov
jb
cmp
xlat
fs
stos
int3
je
mov
mov
add
mov
jecxz
aas
sarl
repnz
add
movsb
mov
je
mov
imul
adc
cmc
fmull
dec
push
xchg
xchg
iret
or
jge
or
inc
movsb
mov
mov
xor
pop
out
into
out
shlb
adc
cmp
in
jp
sub
std
cmovnp
outsl
aas
mov
outsl
rolb
mov
mov
data16
sub
lcall
or
ss
inc
sub
fwait
sbb
fisttpll
mov
push
loope
xchg
or
mov
je
push
mov
push
jmp
dec
sbb
and
sub
inc
add
jo
pop
add
iret
orb
dec
ljmp
int3
daa
loope
frstor
iret
push
xchg
pop
psubd
inc
stc
sbb
mov
dec
dec
jmp
jne
ljmp
test
sub
daa
lods
pusha
shll
sub
pop
cli
pop
pop
xlat
push
movsb
xchg
push
jne
jmp
adc
cmpsb
daa
pop
lods
mov
movsl
adc
sbb
sarb
add
das
pushl
mov
adc
push
jns
nop
push
push
mov
lahf
jecxz
xor
sbb
daa
push
das
lcall
scas
mulb
test
inc
bound
adc
lret
sarb
outsb
in
loop
cmpsb
daa
and
stc
mov
push
mov
xchg
push
xor
dec
cmp
jecxz
fstpt
aam
adc
pushf
lea
subl
rolb
push
fcomps
xchg
pop
and
jb
add
enter
loopne
sub
jmp
imul
scas
lods
add
push
out
mov
test
mov
or
mov
insl
xor
push
in
or
fldt
push
adc
sbb
push
dec
cltd
lods
mov
aam
and
push
xchg
mov
test
dec
pop
inc
cmpsb
int
sti
xor
mov
pop
inc
scas
cmp
inc
xchg
dec
ss
pushl
jb
pop
dec
add
xchg
mov
pop
push
jbe
pop
in
xchg
ret
jmp
inc
scas
and
ljmp
jbe
sbb
ret
xlat
xor
ret
mov
sub
inc
add
js
shll
loop
pusha
xchg
stos
pop
ret
sbb
pop
xchg
dec
loopne
xchg
add
notl
adc
icebp
pop
mov
jbe
clc
dec
mov
sahf
outsl
movl
aad
pop
arpl
dec
inc
daa
jge
lea
aad
xchg
outsb
lahf
idiv
mov
pop
adc
adcl
das
push
outsl
divb
in
stos
mov
insl
test
or
fstps
add
push
pop
xorb
repz
xor
aaa
xchg
cwtl
pop
lock
inc
dec
inc
int
cli
out
and
sub
pop
sbb
mov
pop
jno
ror
cmpsl
clc
add
cmpsl
int3
pop
ret
repz
insl
xor
inc
aad
mov
out
aam
in
icebp
fnstsw
pop
idiv
mov
cmc
mov
mov
notb
mov
xchg
dec
cmc
jae
xchg
icebp
int
repz
negb
pop
xchg
mov
mov
cmp
push
cwtl
adc
jmp
testl
add
dec
push
stos
adc
cmc
cmp
imul
cmc
xchg
addr16
rcrl
cmp
mov
fistpl
bswap
stos
xchg
mov
ljmp
cmc
push
push
xor
xor
ficoml
xor
pop
fwait
sub
or
outsl
xor
out
xchg
cmp
ror
shr
push
in
and
cli
dec
hlt
ret
rcll
stos
mov
popa
lds
fbstp
clc
test
push
or
imul
adc
adc
stc
push
lds
jnp
xor
inc
pop
push
dec
fdivs
fsubrp
jbe
aaa
sbb
les
stos
call
mov
pop
jg
fisttpll
xchg
push
fdivp
fs
loope
push
inc
sarb
clc
push
inc
push
or
adc
jae
push
cmp
movsb
cmc
sti
lods
ds
and
negb
push
cmpsb
std
mov
jmp
sub
add
scas
mov
push
jns
mov
popa
cmp
pop
es
repnz
out
cmp
pop
cmp
xorl
outsb
jge
add
dec
sarl
in
dec
lahf
xchg
and
fldt
aad
rclb
mov
aaa
lcall
repnz
shrb
fildll
in
and
arpl
into
xchg
sub
inc
shlb
mov
cltd
cltd
mov
push
ret
popf
in
data16
sarl
inc
outsl
add
pop
fistpl
ret
imul
fnstcw
sarl
scas
cmpsl
push
jp
push
push
sahf
sahf
push
sub
jae
xchg
in
aas
push
sbbb
inc
call
fists
imul
addl
stc
pop
push
inc
xchg
dec
sub
aas
lret
pop
pop
std
stc
jge
sbb
js
or
in
jns
lods
imul
arpl
and
mov
sbb
mov
out
inc
icebp
jl
pop
jo
pop
push
rorb
insl
cltd
xchg
push
push
dec
loope
rorb
fmuls
call
jl
lcall
scas
addr16
jns
shrl
lret
scas
adc
dec
mov
in
sti
and
les
popf
insb
jg
repnz
mov
push
push
pop
ret
movsl
sahf
in
jb
xchg
insl
pop
xlat
mov
decl
loopne
nop
jb
test
out
cld
inc
stc
movsb
inc
loopne
or
and
cmp
rcr
enter
cmp
insb
lock
std
popl
lock
out
push
stos
roll
daa
adc
xchg
sahf
pop
in
fs
xchg
cmp
fcomps
fcmovu
jge
in
add
arpl
push
jbe
loope
dec
xor
cmpsb
cmpsl
rsm
jmp
gs
jge
pop
add
pop
xor
pop
jbe
pop
pop
xlat
cwtl
ja
xchg
xchg
mov
jae
mov
push
aaa
dec
lret
bound
ds
and
ss
stos
sbb
dec
in
cmp
cmp
repz
nop
mov
pushf
jb
adc
out
or
setne
rorb
jno
xchg
sbb
add
adc
pop
loope
push
xor
mov
mov
push
movsl
cltd
clc
stos
or
mov
xchg
loopne
lea
sarl
nop
or
inc
dec
int
clc
aas
lock
jl
out
icebp
jns
es
out
out
or
pop
popa
xor
ret
fdiv
es
repz
pop
fs
dec
xchg
and
lds
cld
add
lret
xor
out
ds
inc
das
adcl
ss
int3
sbbl
pop
lret
mov
sarl
lret
sbb
push
cmpsb
jecxz
verr
in
out
imul
arpl
pop
cld
and
cli
or
jbe
lcall
xor
jae
xchg
daa
aad
pop
leave
int3
cmp
mov
push
test
xor
or
clc
repnz
fisttpl
imul
andb
mov
push
test
fsts
cmc
cmpl
pop
addr16
in
xchg
stos
push
push
scas
add
mov
push
sub
je
popa
pop
push
cli
shll
mov
shl
fists
divl
int3
orb
push
hlt
add
shrl
and
cli
insb
push
out
das
push
push
nop
cld
push
cmp
ljmp
or
test
icebp
test
jns
mov
bound
jge
cmpsb
lret
mov
cli
test
test
mov
sbb
inc
add
daa
leave
inc
js
fists
xchg
mov
rolb
xchg
xor
pop
push
loope
cwtl
cmp
or
inc
mov
add
sub
mov
or
mov
push
xlat
mov
fwait
push
cmp
jecxz
pusha
adc
sub
add
sub
pop
pop
outsl
out
jp
clc
inc
rcrb
ja
cmpsl
or
jmp
or
and
and
in
cld
pop
jecxz
shlb
jmp
sbb
in
or
sbb
sahf
pusha
add
xchg
push
arpl
fistps
jle
repz
lcall
out
cmp
xor
sub
push
not
pusha
insl
mov
jnp
and
mov
mov
negb
icebp
pop
stos
data16
pop
or
jge
sub
sub
pop
fcomps
adc
das
mov
adc
ljmp
push
stc
and
daa
fwait
inc
cmp
sbb
push
sub
enter
pop
sti
add
jp
test
shlb
sahf
sbb
mov
mov
mov
fs
pushf
test
lds
or
pop
or
pop
imul
xorb
je
adc
sub
aam
inc
loope
jl
addr16
pop
adcl
ffree
fwait
roll
mov
daa
or
add
mov
xor
mov
inc
sub
fwait
pop
stos
sbb
popa
and
outsl
push
sub
inc
cmp
shrl
inc
neg
insb
jge
inc
out
lds
push
in
cmpsb
xchg
adc
push
xchg
push
aad
lock
insb
xchg
jecxz
adc
dec
insl
pop
or
popf
dec
mov
pusha
je
rcl
push
std
stos
ret
xchg
cltd
aam
mov
pusha
xchg
lss
pop
xchg
inc
sub
sbb
inc
out
xor
jns
and
aad
xchg
mov
sbb
mov
dec
loop
mov
adc
lret
ret
jecxz
sbb
mov
inc
push
fistpll
out
mov
add
in
xor
mov
mov
dec
js
sbb
mov
push
cmp
sbb
pop
mov
nop
aad
jecxz
sahf
out
inc
mov
mov
xor
loopne
inc
pushf
lods
lods
or
sbb
add
dec
jo
fwait
sub
mov
sub
int3
mov
or
dec
dec
jmp
dec
mov
inc
aas
pushf
lret
pop
push
mov
or
or
xchg
sub
and
xor
or
lret
in
adc
sub
hlt
and
lret
jns
sti
xor
mov
out
ljmp
mov
mov
pusha
inc
in
out
out
les
int3
pusha
inc
sbb
gs
test
mov
sbb
cmpsb
mov
int3
jbe
lahf
loop
inc
mov
int3
iret
push
nop
cs
call
out
lahf
dec
xchg
testl
sbb
cmp
xchg
jge
sbb
out
push
enter
lret
xchg
sbb
je
lret
dec
push
or
pop
cmp
test
and
cmp
mov
out
mov
aam
add
jle
call
mov
test
shl
inc
popa
jecxz
arpl
insb
or
addb
test
out
push
shll
popf
sbb
test
cmp
inc
hlt
rolb
mov
and
push
pop
inc
xchg
fadds
cs
pop
mov
stos
mov
out
in
test
out
and
lcall
xchg
mov
push
mov
inc
into
pop
idivl
jmp
xchg
fwait
nop
or
jb
dec
nop
fdivrl
jmp
and
cs
xchg
or
in
mov
mov
pop
test
mov
mov
jno
fwait
jne
adcl
mov
sar
popf
jns
sub
rclb
pop
call
movsb
aas
pushf
xchg
insb
sbb
cmpsb
ds
icebp
inc
xchg
out
dec
addb
sbb
jmp
dec
cmp
xchg
xor
js
xor
push
xchg
enter
iret
lods
xchg
add
lock
pop
lds
adc
and
iret
fistps
jmp
in
xchg
sahf
add
ret
decl
sub
adc
mov
cs
fs
aaa
cs
pop
adc
dec
dec
inc
scas
lret
insl
cld
imul
std
stos
push
hlt
jl
jae
mov
pop
push
mov
pop
je
mov
shl
sub
add
cmpsl
cltd
clc
aas
ret
aaa
pop
stc
jle
mov
add
insl
cmp
js
lock
cmpsb
pop
jbe
sbb
gs
mov
xlat
push
movsbl
inc
jne
lds
dec
xlat
imul
cmp
stos
cmpsb
push
ljmp
mov
sub
xor
push
add
iret
inc
jbe
in
xchg
into
or
and
fldenv
lret
xchg
sub
mov
into
scas
int
iret
hlt
cmp
jp
imul
xchg
xlat
daa
loopne
and
aaa
ljmp
mov
mov
mov
xchg
movsb
xor
imul
mov
mov
jmp
pusha
cs
mov
jae
clc
sub
or
xchg
jl
xlat
les
sti
xchg
sbb
push
cmpsl
test
mov
lcall
mov
in
push
jo
xchg
rcr
mov
jmp
add
andl
cmp
loop
pop
aas
add
jmp
fists
dec
fisttpll
sti
test
xor
lea
push
push
xchg
insb
sbbb
or
or
movsl
loope
xchg
fwait
int3
aad
into
loop
hlt
mov
inc
mov
adc
xchg
jmp
dec
in
cltd
mov
jbe
in
fwait
scas
mov
jecxz
xlat
out
adc
iret
iret
push
ret
cmp
inc
rcrl
invd
xor
and
into
sahf
push
int3
jne,pn
cmp
fcmovne
mov
out
ljmp
das
orl
lods
mov
leave
or
xchg
mov
icebp
mov
jo
pop
push
mov
shlb
mov
mov
sub
ja
testb
call
test
das
mov
xchg
pop
pop
scas
ja
scas
data16
and
push
imul
or
inc
push
out
into
data16
inc
ds
and
mov
bnd
or
mov
into
push
or
sbb
cld
movsb
cli
sti
pop
incb
dec
mov
sbb
or
mov
push
mov
add
cwtl
iret
aam
popl
add
cwtl
sbb
int
jno
iret
add
hlt
jg
xor
pop
mov
add
dec
jp
dec
pop
mov
pop
rcrl
fnstenv
add
lahf
fistl
rcl
out
jmp
cmp
int3
je
mov
popa
inc
fdivrl
stos
inc
xchg
jl
add
lods
stos
cmp
lret
test
in
test
cwtl
in
loope
mov
scas
mov
movsl
cli
mov
add
add
sub
inc
dec
dec
rcr
fistl
lock
mov
rolb
add
pop
insl
movsl
xor
mov
fcompl
movl
jne
cmc
insl
outsl
xchg
push
leave
stos
fldenv
sub
aas
mov
jl
lds
mov
inc
pop
out
xorb
es
arpl
pinsrw
jns
rcl
push
mov
xchg
out
mov
fiaddl
add
pop
imul
fistps
fidivs
in
shrb
outsb
fbstp
cltd
test
loop
sub
movsb
jge
dec
jbe
add
xor
out
leave
xor
pop
rcll
loop
cmp
out
les
mov
push
or
std
aaa
in
dec
ss
mov
dec
in
or
lds
movl
or
bound
lds
add
cld
test
ret
pusha
inc
dec
dec
les
ret
jl
cmp
dec
adc
mov
or
jp
aas
vpacksswb
test
lahf
testb
es
push
xchg
add
test
leave
das
add
mov
sbb
inc
mov
pop
pop
jle
jg
xchg
sub
sahf
enter
xlat
add
or
mov
out
cmp
shr
testb
out
imul
jle
int
out
mov
or
int
jns
or
popa
test
rcll
pop
mov
fucomip
shrl
and
shlb
jb
fwait
xor
jb
mov
lea
outsb
shlb
shrl
and
xchg
js
mov
enter
sbb
mov
mov
and
pop
jno
inc
cs
hlt
dec
std
outsl
adc
ret
loope
sbb
lock
std
sbb
adc
inc
loop
test
xor
pop
rcrl
test
adc
xchg
std
inc
jns
lds
in
xchg
jnp
adc
push
mov
cmpsb
mov
stc
call
or
push
enter
aam
adc
or
shrb
in
outsl
xchg
sbb
lret
nop
jmp
mov
push
xchg
ja
cwtl
cld
or
and
add
inc
icebp
dec
ret
out
dec
jle
pop
push
xchg
cmpsb
xchg
inc
test
shrb
push
mov
cmp
ret
sti
and
popf
lods
mov
pop
cs
fcomip
inc
mov
js
inc
or
push
mov
adc
cli
call
pop
xor
popf
cltd
movsl
aam
sbb
repz
loop
aad
jmp
addr16
jbe
cmc
sub
into
xchg
push
sbb
dec
jae
subl
outsb
jns
lret
lods
mov
aad
push
fwait
cmpsb
out
out
fldcw
cltd
jmp
insl
imul
dec
imul
mov
push
movl
test
lds
inc
stos
sub
scas
dec
lock
mov
jg,pn
out
mov
dec
icebp
or
fucomi
test
sbbl
dec
push
stos
xor
pop
xchg
dec
bound
ljmp
mov
iret
mov
insl
cmp
call
or
fsubl
sub
inc
dec
inc
int
iret
pop
jmp
sarb
les
pop
lret
pushf
sti
pop
pop
pusha
sbb
imul
pop
mov
enter
popa
add
and
inc
mov
leave
cmp
stos
pop
enter
test
movsl
cwtl
shl
fst
dec
mov
scas
iret
and
jno
das
test
jle
mov
fsqrt
cmpl
dec
mov
or
test
test
movsb
and
arpl
jae
aas
iret
jno
jbe
lods
stos
sbb
push
lret
mov
xor
fdiv
sub
int3
mov
cmp
inc
pushf
aam
inc
or
jmp
sbb
adc
cwtl
lea
shlb
ljmp
test
mov
repz
add
xor
daa
sti
mov
inc
mov
out
test
xchg
mov
or
add
or
mov
and
mov
add
stc
and
fwait
mov
int3
sbb
clc
mov
xorps
stos
insb
js
repz
lods
pmulhw
mov
jne
jmp
mov
inc
adc
add
aad
into
xchg
ret
dec
addr16
roll
clc
sbb
xchg
dec
loope
scas
lea
or
repz
push
in
mov
mov
pop
popa
jns
adc
cwtl
int3
mov
insb
xchg
in
popf
aam
leave
xchg
ss
loopne
and
repz
xchg
pushf
stc
mov
mov
xor
cmp
dec
loope
insl
xchg
ljmp
xor
loop
adc
js
mov
and
push
test
jl
loop
in
sbbl
adc
ret
lcall
push
popf
xor
mov
mov
inc
les
mov
loop
jno
push
xchg
arpl
adc
icebp
mov
fdivr
ljmp
adc
popf
xchg
outsb
fidivs
jg
inc
sahf
inc
mov
add
icebp
sbbb
inc
push
int3
xor
xchg
arpl
cmpsb
mov
sahf
or
push
pop
inc
dec
gs
inc
lahf
xchg
pop
push
inc
pop
mov
pop
mov
pop
ss
movsb
dec
hlt
push
aad
repz
jnp
mov
test
fwait
push
outsb
push
sbb
push
fmull
lods
scas
add
xor
or
pop
std
fadds
ret
iret
subb
add
xchg
out
mov
jl
shll
jle
stos
sarb
xchg
jl
push
and
inc
orb
jo
imull
test
hlt
std
xchg
aas
xor
pusha
notb
sbb
and
or
pushf
lahf
pop
push
test
jmp
std
cmc
int3
mov
sub
cmc
cmc
fsubrs
cmpsb
jg
andb
cmp
jne
dec
push
pop
in
lods
dec
shll
mov
adc
stos
jb
adc
mov
xlat
xor
aaa
mov
xchg
mov
das
fnstsw
mov
jb
xchg
aam
lret
push
add
pop
aaa
dec
call
dec
xchg
xchg
xchg
or
fisubl
adc
pop
or
jo
leave
cld
call
add
jbe
fnop
scas
inc
fisttpll
xor
ljmp
in
push
jg
cmpsb
daa
add
aad
xchg
lods
leave
repz
in
sbb
gs
jne
test
bound
aaa
jne
rclb
js
outsb
jge
mov
jle
repnz
sbb
jp
and
nop
mov
arpl
repz
jmp
fcmovnb
add
testb
jmp
imul
repnz
jmp
test
hlt
sahf
lods
sar
mov
lods
inc
je
cltd
or
jno
ds
bound
mov
mov
enter
lock
xor
out
and
add
add
je
pop
mov
adc
push
cmpsl
cld
xchg
and
imul
sub
psrld
xchg
push
xchg
or
outsl
push
cmp
inc
hlt
addr16
dec
mov
ror
aam
repnz
adc
and
fsubs
cmpsb
stc
add
pop
dec
enter
and
xor
shl
loop
xchg
pop
sub
and
pusha
pushf
sbb
adc
out
outsb
inc
inc
mov
jo
out
sbb
lods
adc
xchg
pop
sbb
mov
addr16
pop
cmp
fdiv
mov
add
pop
xchg
xchg
stos
cs
adc
mov
add
pop
stos
push
mov
mov
movsl
and
or
mov
push
pop
jmp
mov
fwait
xor
call
jnp
add
add
fidivrl
push
push
scas
xchg
jp
add
xor
sbb
in
insl
dec
push
aaa
xchg
popf
into
pop
cmpsl
stos
loopne
xor
popa
sbb
and
sahf
or
mov
mov
mov
arpl
inc
popa
mov
out
out
mov
mov
sahf
popa
or
mov
xchg
xchg
sub
cli
mov
es
outsl
add
pop
and
or
dec
aas
mov
push
test
push
test
insb
cmp
cli
add
loopne
pop
loope
mov
xor
gs
or
lret
mov
jp
into
push
dec
jl
xchg
adc
pushf
cmp
mov
inc
sub
shrb
inc
daa
push
loop
lret
rol
xchg
adc
insb
inc
ret
jbe
mov
pop
jmp
and
jp
jp
cmp
xchg
cmp
outsb
mulb
lock
push
xor
faddl
mov
dec
cmp
or
int3
inc
das
insb
jnp
mov
push
jae
jle
push
stos
mov
fs
dec
cld
lods
inc
xor
outsb
shll
pop
sbb
jecxz
iret
pop
jmp
scas
int3
jns
andb
shll
outsb
insb
xchg
push
sub
ja
mov
xchg
xlat
pop
out
mov
jl
cli
add
ljmp
inc
xchg
xor
pop
mov
addr16
jp
add
ljmp
pushf
xorb
inc
inc
jmp
in
cltd
cwtl
and
sbb
jno
dec
mov
lahf
arpl
jmp
nop
xchg
jo
add
outsb
ja
pop
push
pop
cmp
dec
push
lret
in
mov
bound
mov
dec
imul
pop
test
mov
int
and
jo
pop
mov
hlt
sbb
adc
add
testb
sub
xchg
les
gs
addl
cmp
shr
inc
int
rcrb
xor
lahf
cwtl
orl
gs
xchg
or
sbb
inc
jg
jae
fcomi
jbe
xchg
mov
popf
jg
dec
test
add
out
je
les
iret
out
push
insb
xorl
push
stos
xchg
fucomp
and
das
mov
dec
sub
dec
jbe
jle
rorb
out
xor
xchg
rcr
stc
xor
idivl
xchg
ret
adc
ljmp
insl
sbb
add
div
enter
pop
pop
dec
push
xorl
jns
mov
out
stos
lods
mov
clc
in
movaps
iret
mov
sarb
or
iret
sub
insb
jae
jmp
push
outsl
push
enter
dec
mov
xchg
push
and
rorb
jl
pop
je
jmp
mov
cmp
dec
sbb
out
je
jp
out
or
movsb
sub
mov
jg
pop
jle
pop
push
adc
fldl
loopne
push
lds
lea
jae
sbb
jns
or
pop
loopne
sub
insb
movsb
cmp
sbb
pop
popa
imul
xor
std
fdiv
das
scas
ljmp
lret
push
or
adc
sub
cmpsl
ja
jb
jmp
sub
in
int3
sbb
mov
flds
or
sub
dec
cmp
cmpsl
sbb
adc
fcomps
rorl
enter
bound
imul
dec
cs
fstps
cmp
aad
imul
cli
xor
pop
mov
adc
jmp
addl
je
push
jnp
or
fdivrs
hlt
push
push
ljmp
lret
in
add
jp
scas
imul
mov
sub
cmpsl
jo
hlt
shll
add
int3
addr16
lcall
sub
mov
adc
push
daa
or
mov
jns
inc
cli
pop
outsb
scas
mov
xor
orl
xor
pop
mov
jp
jnp
pusha
and
test
push
out
xlat
inc
or
jns
add
ficompl
adc
adc
out
xlat
movsl
adc
or
js
jns
xor
aam
and
or
popa
xor
mov
mov
test
mov
pop
js
sbb
sahf
add
pop
neg
test
movsb
mov
dec
mov
jns
test
add
push
jmp
pop
xchg
mov
mov
jg
out
inc
or
sub
hlt
mov
mov
nop
push
jbe
push
int
cmc
out
outsb
inc
mov
mov
adc
testl
xor
inc
testb
ljmp
push
pop
or
jg
popf
gs
inc
sub
jbe
xchg
mov
or
dec
in
xorb
rcll
imul
jno
mov
inc
jae
adc
cmpsl
dec
ret
xlat
jns
mov
mov
xchg
cmp
push
jmp
xor
jecxz
jecxz
clc
lods
sti
ror
cwtl
jp
mov
xor
push
fisttpll
adc
push
dec
imul
or
shlb
out
daa
loop
aad
lock
or
loop
lret
xchg
adc
cmp
mov
xor
lahf
cld
cmp
adc
ja
inc
push
popa
std
mov
movsl
push
outsb
mov
jo
pop
cmpsb
bound
call
push
mov
popf
mov
rcl
es
sbb
pusha
leave
in
repnz
shrl
lock
movsb
shlb
push
scas
imul
int3
stc
test
es
xor
outsl
lods
dec
scas
stos
call
ret
cmp
call
xchg
xchg
jl
adc
int3
mov
jp
fsubl
push
jl
fcmovbe
xchg
and
push
js
pop
sbb
out
icebp
pusha
and
cwtl
stos
pop
and
push
dec
sub
sbb
shlb
sub
stos
popa
adc
mov
jnp
adc
in
adc
sarl
add
adc
mov
bound
mov
cli
or
into
movsl
mov
fcoms
add
adc
les
push
push
addl
mov
stc
int3
pop
sbb
fldl
pop
nop
pop
jae
mov
sbb
aam
bnd
mov
push
shl
mov
les
adc
out
inc
std
jp
loop
cmp
mov
dec
jns
fistps
mov
adc
in
jle
cmp
clc
cli
popa
gs
out
add
ss
pushf
jno
movsl
sub
dec
cld
enter
mov
rorb
and
sbb
mov
mov
pop
push
sub
sbb
jo
out
push
fwait
enter
sub
pop
fists
scas
xor
inc
mov
jle
and
mov
push
addl
loope
scas
iret
ret
loop
adc
cmp
mov
or
sub
cli
inc
rcl
add
insb
lock
imul
and
pop
outsl
pop
fistpl
xchg
int3
sbb
aam
jmp
loope
lcall
pop
inc
pop
lcall
das
int3
ds
cltd
mov
sub
pop
lret
es
lahf
fbld
stos
add
clc
and
bound
pop
repz
inc
rcrb
ss
pop
fxch
daa
cmp
fiaddl
fnstsw
out
pushf
out
sbbl
mov
and
outsb
xor
jmp
jns
in
aas
fnstsw
test
sbb
call
shrl
imul
lods
mov
sub
sbb
pop
or
sarb
stos
clc
test
lahf
xor
aad
lods
xchg
insl
fwait
mov
mov
in
icebp
sarl
lea
cmp
arpl
orb
dec
fucomp
ds
dec
inc
fnstcw
leave
andl
sub
and
in
daa
sbb
sbb
addb
out
scas
mov
testl
movsb
lcall
icebp
ficompl
mov
pop
mov
es
or
mov
in
insl
test
lock
repnz
shlb
sub
gs
hlt
adc
and
fs
mov
js
add
int3
hlt
je
cs
mov
stc
cld
loop
mov
cs
xor
pop
sbb
pop
jmp
sub
inc
pushl
cmp
shl
mov
mov
xlat
out
sbb
xor
pop
aam
and
cmp
daa
sbb
mov
pop
cmp
gs
jle
jae
loope
lret
jge
sbb
adc
dec
test
ficomps
or
in
add
outsb
pop
mov
iret
out
scas
sbb
dec
out
test
or
cmp
xor
mov
mov
xor
lret
pop
xlat
add
lods
xor
aaa
xchg
stc
mov
push
cltd
sub
hlt
mov
sbb
push
cmc
jns
cld
out
cmpsb
dec
xorb
inc
mov
lods
cmp
je
test
cmp
insb
mov
daa
jmp
add
xlat
test
das
fcmovnu
inc
ljmp
mov
jp
xor
mov
mov
mov
jecxz
repz
push
lock
loope
add
aas
daa
pushl
cwtl
movb
pusha
clc
jne
fwait
test
ret
jo
insl
int3
lods
push
add
les
sbb
inc
mov
in
fcompl
sti
in
or
jnp
and
dec
lods
sti
cmp
roll
jge
jmp
mov
add
mov
fmull
and
into
dec
push
mov
fnstsw
jge
jbe
lods
xor
int
and
je
std
ficoms
pop
sub
jp
push
fwait
push
lods
or
and
es
jb
jge
into
pop
jmp
stc
sbb
dec
xor
add
push
jle
test
stos
push
jmp
jbe
adc
jne
cmpsl
jecxz
push
add
adcl
into
pop
out
jg
and
repnz
or
mov
add
jbe
in
mov
ja
inc
or
mov
arpl
pop
lds
incb
push
cmpsl
test
mov
loope
xor
test
pop
ret
push
ficomps
in
adc
cli
cltd
sbb
mov
out
mov
cmp
mov
sub
jecxz
sbb
ret
and
hlt
mov
insl
cmc
inc
jl
rolb
add
xchg
mov
arpl
stos
out
loope
das
mov
jo
add
dec
sysenter
imull
fisubrs
inc
mov
ret
dec
pushl
and
subl
mov
leave
popa
repnz
out
imul
cmp
xor
ja
into
pop
add
les
lds
lods
lds
test
lcall
and
sbb
inc
imul
mov
test
jbe
sbb
sub
inc
or
fwait
xchg
mov
popa
imul
decl
mov
in
hlt
loop
cmp
imull
pop
push
cmp
mov
imul
jmp
pop
test
adc
rcrb
pushl
lcall
scas
jge
out
jno
jno
pusha
rcll
faddl
imul
cmp
or
rol
xchg
and
sti
push
sbbb
or
or
test
fisttpl
mov
jnp
push
and
cmp
sbb
lret
addr16
imul
icebp
mov
add
jb
testl
sub
adc
jp
add
lods
xchg
cld
cmp
hlt
adc
add
enter
mov
aad
adc
ds
dec
pop
xor
lcall
sarb
aad
mov
daa
imul
ss
nop
sbb
jae
call
dec
loop
mov
icebp
adc
addr16
dec
lret
add
mov
cmp
jecxz
pop
lea
mov
mov
add
cmp
or
push
mov
ret
dec
sub
out
inc
jo
out
fyl2x
in
jo
cmp
dec
test
pusha
and
out
xchg
es
sahf
adc
xlat
push
shl
xchg
push
in
jns
pushf
xor
adc
push
insl
mov
aaa
dec
stos
push
fyl2xp1
mov
lret
xlat
adc
scas
inc
sub
pop
cmc
add
dec
sub
iret
mov
mov
rorl
cmp
mov
in
insb
cwtl
fbld
jmp
mov
fs
bound
aad
mov
test
hlt
clc
sbb
pushf
pop
lahf
cld
add
xchg
inc
cmpsb
mov
adc
loopne
xchg
adc
xor
call
mov
xchg
cmp
into
dec
inc
xchg
call
imul
xor
lret
and
les
push
fisttpll
bound
rorl
jae
loopne
fidivrl
in
pop
jl
and
clc
add
inc
popf
mov
jmp
cmp
addr16
inc
jecxz
xchg
inc
aaa
push
jbe
xchg
mov
fcoml
jns
fistps
iret
sbbl
out
notb
jne
dec
das
mov
lret
or
movsb
out
xchg
cld
addl
pushf
cld
pop
push
enter
jne
in
sub
test
dec
pop
in
ret
jmp
js
sarb
cld
insb
jo
fisttps
out
push
pop
mov
cmpsl
mov
add
sub
inc
pop
ljmp
add
cwtl
cmp
xor
cmpsb
inc
mov
movb
sti
push
iret
dec
arpl
jmp
daa
mov
dec
inc
cmp
out
cmp
mov
push
out
dec
movsl
lock
jp
mov
lahf
cltd
add
jne
cmp
mov
pop
mov
mov
sbb
cmp
pop
push
rcll
jecxz
pop
cmp
sub
stos
and
jno
ds
roll
shll
pop
out
arpl
int
push
mov
push
jmp
inc
lcall
stos
sbb
repnz
int3
cli
pop
add
mov
mov
lret
pop
insb
loope
cmp
out
aas
cli
inc
adcl
jae
mov
xchg
jno
inc
push
jmp
inc
mov
rorb
sbb
and
sbbb
jb
cmp
sub
call
dec
xchg
xor
mov
mov
xor
xchg
pop
scas
mov
adc
pop
or
inc
or
stos
push
fadds
sbb
inc
les
mov
mov
mov
pop
pop
xor
ljmp
dec
int3
push
sub
jb
insb
jecxz
in
cmpsb
hlt
cmp
jae
fisttpll
sbb
inc
jo
sti
adc
push
adc
mov
cmp
mov
insb
arpl
dec
enter
mov
inc
mov
clc
ja
lret
enter
cltd
or
subb
cmp
jb
jns
mov
shrl
pushf
subl
es
mov
cmp
fadds
sbb
sbb
add
cmc
mov
xor
jno
insl
cltd
adc
jne
outsb
or
inc
add
testb
pop
ljmp
mov
or
ficomps
pop
leave
sub
cwtl
jns
das
je
repz
mov
adc
std
mov
mov
xchg
movswl
cmp
lea
out
scas
fs
or
pop
push
aad
mov
aad
icebp
imul
or
adc
cmp
pop
orl
ljmp
jne
sbb
les
push
sub
stos
out
lahf
push
or
in
xchg
sbb
push
in
push
push
rorl
movsl
dec
mov
pop
andb
sbb
cs
push
mov
pop
mov
push
fists
or
inc
xlat
stos
jae
aaa
push
rcl
sbb
jle
pop
lds
mov
mov
ffreep
fnstsw
adc
mov
and
push
pop
in
out
sbb
cld
jae
xor
rcr
stos
insb
out
push
fisubl
xchg
mov
adc
inc
pop
pop
adc
cmp
lret
sbb
dec
xor
clc
aaa
dec
mov
inc
dec
mov
xor
mov
popf
pop
push
pop
cmp
push
das
lock
hlt
aaa
das
pop
mov
ds
sbb
mov
ljmp
xchg
les
arpl
repz
jg
mov
jnp
test
and
jecxz
pop
movsb
mov
cwtl
fndisi(8087
xchg
cmc
subl
and
jnp
in
stos
movsb
adc
mov
ja
inc
pop
or
ret
pusha
pop
dec
icebp
add
lcall
sbb
loopne
jbe
mov
add
mov
lods
dec
lahf
lahf
insb
test
pop
test
sbb
test
lock
fidivs
fs
dec
scas
adc
adc
cli
xchg
mov
out
lret
or
dec
mov
loopne
inc
cmp
jecxz
mov
sahf
mov
push
popa
xchg
pop
cmp
xor
pusha
cmpl
mulb
mov
pop
les
push
sahf
in
mov
lds
ja
aas
dec
je
enter
dec
pop
shll
push
sbb
fwait
sbb
mov
xor
shrb
pop
aaa
jg
in
and
push
rcrb
push
repz
loopne
mov
inc
divb
cli
ret
scas
orl
icebp
xchg
ret
cmp
push
push
lahf
sbb
or
in
sub
loopne
sbb
dec
out
call
iret
mov
fimuls
adc
mov
xor
mov
sbb
dec
push
sbb
sub
add
dec
lock
jae
adcb
test
or
push
push
fiaddl
ret
add
popf
pop
push
sbb
cmp
push
dec
mov
mov
inc
adc
shlb
cmp
fdivr
insl
jecxz
add
lret
testb
cltd
adc
int
push
lods
or
icebp
imul
push
daa
insb
mov
testb
movsl
xor
jo
xor
mov
and
sbb
dec
lods
lahf
fmull
push
xchg
daa
idiv
scas
fmull
aad
jbe
sbb
fs
and
cltd
xchg
mov
push
push
and
les
lods
shrl
bound
sub
sbb
xchg
stos
loopne
pop
testl
mov
out
ret
lock
aaa
mov
aad
rcr
call
movsl
dec
xchg
outsb
ja
xchg
stc
out
sub
push
inc
push
jle
hlt
inc
test
sbb
testl
add
mov
aad
pmaxsw
sahf
sbb
lds
xchg
in
adc
mov
jns
andb
sbb
sahf
push
jnp
std
mov
repz
jmp
pop
mov
clc
mov
adc
data16
call
ss
dec
and
mov
sar
pop
push
sbb
jge
xor
lds
inc
je
out
ss
out
imul
inc
or
pop
addr16
das
in
mov
dec
sti
ret
pop
jns
leave
jle
and
or
in
pop
xor
test
out
add
jne
test
dec
fldt
jecxz
xlat
inc
push
sti
xor
clc
out
push
add
es
mov
mov
out
xor
sbb
int
mov
jmp
loopne
push
jecxz
fwait
shlb
mov
xlat
in
mov
pusha
icebp
ficomps
lret
xchg
push
cmp
sub
adc
int3
mov
popf
mov
mov
cmc
aaa
daa
insl
in
es
pop
int3
mov
jae
into
pushf
test
pop
pop
movsb
or
cld
call
or
addl
xchg
gs
mov
mov
xchg
add
mull
addb
jnp
adc
mov
aad
jnp
aad
inc
orps
pusha
inc
mov
sahf
data16
mov
out
adc
mov
mov
lahf
ss
sbb
stos
aaa
inc
into
xchg
add
es
pop
sahf
rorl
jl
gs
mov
sbb
mov
scas
jp
cmpsl
inc
enter
test
pushf
ss
arpl
inc
xchg
mov
lods
xchg
fnstcw
xor
ret
and
dec
fucomp
mov
jmp
rol
adc
push
xchg
mov
lahf
aaa
repz
lock
outsl
inc
mov
sub
adc
adc
xchg
jbe
jecxz
inc
dec
mov
cmpsl
mov
into
xchg
lods
push
adc
add
orl
jle
mov
push
xchg
jne
and
bound
cmp
jecxz
fisubrs
or
rcl
mov
mov
fstpt
xchg
and
movsb
or
mov
cli
adc
lret
fsubrs
ret
inc
inc
mov
in
push
movsb
aas
aas
inc
ljmp
pusha
mov
cmp
xchg
lahf
clc
fisttpll
xchg
sub
cmc
xchg
scas
scas
outsl
test
mov
test
xchg
xchg
mov
xor
int
push
addr16
and
lret
jne
addl
add
jge
fidivrl
pop
cmp
pop
mov
pushf
aaa
repnz
jl
inc
jae
push
xchg
and
std
pop
or
fisttpl
adc
lods
adc
pop
pop
inc
or
pop
fistpl
rorb
jg
shlb
push
call
in
out
stos
into
inc
in
sti
inc
push
pushf
movsl
or
lds
pop
gs
mov
pop
stos
xorl
leave
pop
sub
int
jae
adc
xor
insb
enter
jmp
mov
mov
fs
mov
aam
sbb
gs
scas
clc
sbb
jnp
xchg
adc
pusha
outsl
es
push
out
or
iret
sub
pop
push
fwait
pop
repz
in
loope
loopne
pop
insl
dec
cmp
dec
outsb
mov
rorb
call
jg
or
xchg
adc
sub
in
jne
mov
pusha
mov
sbb
cltd
cmp
gs
decl
xor
inc
xchg
jle
fmul
cltd
cmp
and
xor
roll
cmpsl
xchg
lahf
rcl
stos
nop
push
rolb
push
lret
icebp
call
ds
out
xchg
daa
mov
popf
lods
fldcw
das
add
in
or
leave
aas
dec
movsl
sbb
inc
int3
dec
xor
cli
adc
test
stos
jb
push
incl
mov
jecxz
daa
or
fistpl
xchg
mov
sbbb
loop
jb
xor
mov
imul
test
xchg
push
xlat
add
lahf
sbb
sub
pop
xlat
pop
fbld
adc
dec
rolb
in
out
mov
das
out
mov
mov
or
lea
or
mov
inc
pop
fstpt
ss
jg
ror
addr16
incl
pop
imul
ja
xchg
cli
pop
cwtl
frstor
call
fbstp
es
outsl
fdivrp
jns
lods
inc
gs
inc
arpl
lahf
sti
mov
dec
icebp
add
outsl
mov
cltd
es
loop
sub
mov
jmp
mov
jp
enter
jge
je
jmp
jle
imul
pop
stos
jnp
inc
ret
ds
repnz
insl
popa
and
in
jecxz
stos
or
xchg
dec
stc
nop
cmp
pop
loopne
lea
iret
fildl
push
cmp
mov
cmp
test
mov
test
adcb
lret
cmp
ss
fwait
aam
in
popf
imul
mov
mov
or
cmpsl
mov
int
fdivl
cwtl
repnz
and
or
lahf
aaa
adc
inc
ljmp
out
testb
dec
iret
push
adc
adc
sbb
lcall
bound
sbb
jne
or
cwtl
lret
jb
test
cmpsl
mov
ret
stc
push
mov
sub
adc
fcmovu
lahf
lret
movd
push
js
out
or
xchg
xchg
pop
or
dec
js
insb
jno
loope
daa
push
dec
cmc
lds
sbb
popf
mov
jo
push
out
int3
mov
xchg
arpl
std
inc
insl
jp
mov
imul
dec
inc
pop
sub
sti
add
or
mov
movsb
pop
ds
and
mov
shll
sarl
out
cmc
stos
or
bound
jl
push
mov
xor
pop
xlat
adc
or
insl
and
or
add
mov
cs
andb
aad
cmpsl
mov
fldcw
lret
mov
in
push
sbb
test
push
pop
jo
jge
shlb
xchg
mov
pushf
xor
daa
sub
insl
fildl
dec
mov
outsb
cmc
cmpsb
dec
pusha
lret
push
loop
push
mov
jg
pop
cld
xchg
in
push
add
enter
push
and
jle
bound
mov
test
imull
addr16
mov
mov
pop
dec
divb
or
lods
adc
jne
ficomps
mov
cmp
mov
scas
je
push
das
xchg
adc
cli
mov
icebp
cmp
mov
jecxz
fs
inc
fwait
sti
cs
mov
mov
ffreep
ffree
out
cmp
and
jg
or
test
sbb
pop
mov
popf
xchg
dec
jns
push
cmp
pop
xor
mov
xchg
jne
cmovle
sbb
cmp
add
xor
in
xor
xchg
cmp
dec
enter
and
mov
pop
xchg
pop
int
in
ffree
lahf
rorl
sbb
mov
fnstsw
push
out
jo
call
cmpsl
push
aam
in
cmp
fs
pop
ljmp
sub
lods
push
push
cmp
dec
test
cltd
nop
jns
and
xchg
outsb
leave
in
or
cmpsl
and
pop
mov
fs
pop
add
sbb
lcall
stc
out
das
cltd
mov
and
pop
sub
mov
xor
dec
push
lcall
mov
mov
test
pop
jmp
sub
out
jmp
push
jnp
mov
xor
hlt
ss
in
imul
lret
sub
pop
dec
popa
mov
repz
dec
xchg
cmp
mov
push
jp
fidivl
lods
outsb
outsl
adc
movsl
push
imul
push
sub
popf
lock
inc
mov
inc
jne
outsl
dec
jp
test
movsb
and
sbb
in
mov
sub
roll
ret
and
imull
fildll
mov
push
jg
and
mov
mov
jo
bnd
imul
fwait
jno
xchg
addr16
xor
add
jbe
xchg
loope
call
roll
inc
pusha
outsb
or
dec
mov
movl
in
pop
pop
jnp
sbb
daa
dec
push
mov
push
repnz
lcall
sarl
adc
cmp
jbe
dec
cmp
movsb
cmpsb
aam
scas
sbb
into
mov
sub
xchg
push
and
jb
test
mov
andl
nop
mov
daa
data16
int
xor
xor
movsb
xchg
jns
inc
pushf
lret
in
jecxz
push
jo
jae
add
lods
push
add
movl
jp
out
jae
jmp
lods
test
mov
scas
push
sbb
xor
push
ret
mov
iret
into
mov
push
pop
mov
inc
bound
jmp
imul
enter
pop
test
insb
imul
into
xchg
lds
dec
inc
andb
jno
push
mov
fcomps
add
stc
scas
fldl
mov
mov
sub
pop
push
adc
push
xchg
stos
adc
jbe
push
mov
mov
in
jbe
clc
pop
inc
lds
rolb
dec
shr
int
push
pop
insb
subl
pop
jno
ljmp
push
mov
jecxz
fisubrs
bound
xchg
cmpsb
ljmp
xchg
dec
fnstsw
nop
jp
and
pop
xchg
adc
clc
in
and
inc
popa
jmp
fsubl
cs
dec
sahf
inc
data16
fs
stc
test
das
push
jb
fldcw
cli
psubw
es
dec
popa
pop
scas
popf
ss
int
cld
pusha
xor
sbb
flds
xchg
stos
movsl
sahf
dec
repz
or
dec
loope
ret
add
pop
lea
daa
sbb
push
push
mov
add
mov
in
stc
je
or
adc
mov
jae
and
jg
movl
sbb
cmp
in
push
push
out
cmc
movq
adc
push
and
stc
fs
sbb
fbstp
cltd
mov
enter
pop
scas
cmpsb
mov
mov
and
inc
inc
test
sarb
mov
mov
mov
xor
pop
adc
adc
lahf
daa
mov
push
testb
in
adc
sahf
pop
dec
lret
mov
clc
lea
jge
push
test
hlt
add
inc
fbstp
sahf
mov
jnp
lahf
mov
push
inc
push
imul
daa
push
jo
or
mov
mov
jns
sahf
fdivrs
xchg
fstl
movups
leave
hlt
jne
test
std
ret
popa
cmpsl
aas
mov
ljmp
push
sahf
fucom
mov
dec
and
xor
cwtl
ja
add
adc
dec
mov
and
add
stc
push
cltd
mov
and
jp
sub
xlat
xchg
and
xchg
ds
add
movsb
enter
mov
mov
sbb
inc
mov
jne
stos
xchg
out
inc
and
cmc
add
push
ss
cmp
jno
stc
aad
mov
push
shlb
xchg
clc
cmp
pop
jmp
arpl
and
lock
jmp
popf
stc
loopne
aam
fs
int
pop
xor
in
push
loopne
xor
adc
aaa
mov
daa
push
pop
mov
roll
lcall
jmp
popf
cmp
in
cmc
mov
mov
add
sbb
hlt
jne
repz
inc
stos
cmp
xchg
gs
enter
in
inc
iret
dec
xlat
inc
out
mov
push
shrl
lds
push
xor
dec
out
ret
mov
mov
popa
clc
or
sbb
add
mov
xchg
push
xor
je
orl
mov
and
jno
push
cmc
jmp
cmc
or
pop
cs
mov
rolb
cmpsb
in
rclb
das
mov
dec
adc
inc
xchg
dec
lods
outsb
xlat
dec
add
loopne
pop
mov
pop
pop
adc
xchg
mov
xor
dec
clc
dec
dec
push
cmp
test
xchg
sbb
les
mov
out
sub
movsb
int3
mov
xor
pop
push
dec
test
aam
push
je
sahf
jg
lock
xor
out
fwait
stos
scas
inc
jmp
hlt
jp
jmp
imul
loop
into
pop
in
in
mov
stos
jl
sbb
fistps
cmp
cmp
sarl
icebp
jns
stos
mov
gs
outsb
std
test
and
adc
pop
loop
lcall
orl
cmp
xor
dec
mov
rcrb
les
pop
inc
sub
popa
push
out
jmp
adc
popf
and
addl
xorl
addr16
scas
pusha
in
cmpsb
lcall
pop
movsb
jg
out
stos
add
cmpsl
xor
pextrw
or
xchg
call
xchg
pop
out
mov
call
shlb
sub
mov
lret
repnz
clc
cmpsl
cmpsl
mov
mov
mov
pop
dec
cmc
cmp
jnp
mov
jecxz
fsubs
or
ss
or
mov
xlat
cltd
sbb
aas
aas
inc
icebp
fistpll
scas
fistpll
pop
xor
xchg
sbb
fwait
lds
mov
push
sbb
int3
push
fnstenv
repnz
mov
cmpsl
test
pusha
addr16
cld
mov
inc
adc
hlt
jg
dec
mov
enter
mov
je
add
test
xor
xor
pop
mov
cli
and
and
cltd
shll
mov
push
sbb
loop
sub
jne
inc
in
adc
push
cmp
aam
mov
es
sbb
mov
adc
sbb
inc
xchg
dec
mov
outsl
jl
dec
xchg
cmp
sbbl
addr16
fcmovbe
mov
movsb
inc
daa
scas
jnp
imul
sbb
divl
adc
sub
sub
jmp
adc
imul
pop
aaa
xorl
loop
das
addl
pop
push
enter
or
ljmp
clc
push
lds
mov
sub
movsl
les
in
loop
jl
pop
rolb
aam
lahf
fistps
das
adcb
push
xchg
ljmp
cmpsl
test
subb
cltd
out
cmp
rclb
sbb
addr16
mov
pop
xor
jne
mov
lods
and
fcmovb
scas
std
ds
adc
in
pop
mov
shlb
pushf
lock
push
mov
clc
sub
xchg
cmpsl
sbb
call
test
cli
xchg
jae
adc
call
repnz
lods
sbb
pop
in
lcall
mov
mov
ljmp
mov
fsts
dec
xlat
testl
or
mov
xor
fwait
subl
add
in
aam
mov
pop
xchg
loopne
mov
jno
movsb
pop
cmc
cmp
adc
pop
push
insb
out
pushaw
out
ds
add
lahf
xor
imul
cmpsb
xor
dec
cli
xlat
pop
lods
pop
sbb
jb
push
nop
mov
orb
jbe
leave
lahf
xor
add
sbb
pop
xchg
iret
outsb
fidivrs
cmpsl
dec
jle
cmp
shr
aas
leave
mov
fwait
scas
push
movsl
mov
mov
inc
pop
mov
fwait
add
outsl
pop
push
in
and
cmpsl
mov
mov
call
mov
call
mov
sub
aas
int
fdivp
in
ss
popf
mov
in
pop
aam
xchg
dec
iret
js
lahf
inc
shr
adc
adc
js
push
jg
scas
adc
mov
inc
pop
mov
jmp
mov
ret
xchg
xlat
xchg
pop
in
inc
and
enter
pushf
add
pop
and
push
jecxz
ret
cmp
test
sub
dec
pop
lds
add
mov
cmp
ret
mov
mov
push
jle
rcr
xor
push
jne
xor
add
dec
inc
sub
cltd
pop
pop
test
mov
cmpsl
jg
jnp
dec
das
out
xor
xchg
jecxz
xchg
sbb
adc
pop
xor
icebp
push
das
cld
inc
cmp
ds
inc
insl
xchg
aad
je
cli
cmc
jmp
pop
ja
loop
xchg
popl
xor
fldcw
aas
inc
rolb
xlat
adc
fldl
add
aam
dec
xchg
pop
lock
adc
adc
jb
inc
shr
xchg
xor
mov
cltd
lock
xor
cmp
pop
xchg
dec
or
sub
arpl
mov
xor
sub
int3
out
lea
xchg
out
aas
mov
pop
xor
sub
es
sbb
ret
outsb
movsb
jno
pop
mov
dec
sbb
pop
push
xor
dec
sbb
xor
out
popa
mov
mov
imul
stos
pushf
fxch
jae
dec
pusha
inc
divb
lahf
push
mov
ss
pop
mov
add
rorl
push
rep
cmp
inc
scas
cmp
outsb
inc
mov
stc
fdivs
imul
into
push
neg
stc
ficompl
imul
aas
mov
aas
push
arpl
imul
popa
cli
cs
sub
jb
faddl
jecxz
xor
cmp
loope
adc
ret
push
xchg
cmp
bound
popa
dec
lret
loopne
fcoml
sub
lds
ja
imul
gs
xchg
mov
fcoms
lea
in
mov
cmc
mov
push
mov
push
scas
or
inc
mov
rclb
fbld
and
sub
or
pop
xchg
adc
enter
movsb
in
jns
imul
ja
leave
fiaddl
in
jns
pop
lea
jge
outsb
xor
add
and
mov
in
add
mov
mov
push
inc
outsl
notl
mov
xchg
jno
sub
inc
cmc
sbb
ja
or
inc
lods
mov
ja
pop
mov
dec
std
pushf
fisttps
icebp
jns
mov
test
push
adc
lds
dec
outsb
add
out
jl
jno
mov
jge
mov
nop
repz
shl
xchg
stos
add
inc
loopne
inc
mov
leave
pushf
daa
dec
inc
data16
xchg
insb
lds
dec
outsb
stc
xor
mov
push
or
popa
in
adc
nop
sub
fpatan
out
push
out
sub
add
jae
enter
pop
jl
pusha
xchg
outsl
pop
push
sub
lret
inc
test
lcall
jae
mov
bound
mov
cli
pusha
pusha
jb
jne
cs
and
movsb
and
sbb
dec
ja
sahf
mov
out
sub
sub
aaa
pusha
lock
pop
mov
xor
mov
int3
popa
mov
stos
sub
outsb
lods
adc
adcb
sub
shrl
icebp
add
cs
sbb
dec
xor
popa
mov
cmp
and
loope
inc
lret
mov
dec
and
inc
jnp
daa
sub
arpl
inc
enter
hlt
and
or
outsb
pusha
fistl
call
jl
out
test
push
push
sbb
pop
xor
lods
repnz
mov
push
pop
or
inc
xor
in
in
sbb
fistl
push
dec
out
mov
push
add
movsl
mov
stc
out
negb
ja
mov
cmp
fisttpl
or
mov
xor
or
jmp
push
ficoms
jno
sub
mov
mov
rcr
mov
leave
sarl
mov
imul
popa
xlat
cmp
fiadds
adc
xorl
sub
iret
xchg
cwtl
xchg
jns
sub
scas
pop
clc
xchg
inc
xchg
in
popf
inc
mov
loope
fistps
pop
enter
ss
test
and
je
xchg
inc
jmp
imul
negl
mov
and
sbb
mov
inc
fsubrs
sbb
rorl
mov
test
mov
mov
dec
and
mov
stos
hlt
enter
iret
out
xchg
std
pop
cmc
add
xor
aam
loopne
fwait
add
xchg
in
sahf
mov
mov
lods
popa
call
sbb
ja
mov
mov
es
enter
pop
push
shrl
cmc
bound
push
movsl
bnd
call
sub
loope
dec
aaa
xor
es
or
icebp
nop
adc
daa
or
cld
adc
lods
in
dec
sbb
xor
mov
int
insl
mov
ljmp
mov
sbb
inc
lcall
ret
mov
cmp
adc
inc
shl
out
leave
dec
je
movsl
popl
test
inc
push
inc
mov
lcall
pop
in
dec
sub
mov
jae
sub
int
ret
jmp
imul
pop
jo
cmpsb
movsb
mov
pop
rorb
or
pop
xor
clc
adc
aam
fnsave
popa
cmpsl
bswap
cmp
inc
pop
test
out
insl
loope
add
jne
mov
out
fs
mov
in
jno
cwtl
sbb
jne
je
xchg
sti
dec
xchg
loop
cmpsl
test
cmp
call
push
mov
mov
fdivl
jb
xor
or
cmp
sahf
sbb
das
lods
push
into
cmp
mov
mov
daa
jo
mov
jp
xchg
fnsave
mov
mov
dec
ficoml
xchg
cld
jp
cli
lcall
lahf
jecxz
daa
mov
pop
adc
filds
dec
and
xlat
adc
nop
aad
out
clc
insl
imul
mov
rorl
hlt
fmull
clc
imul
push
sub
into
push
in
fisttps
add
push
loop
cmp
cmpsl
add
xchg
imul
dec
repz
pop
cmpsb
test
dec
je
stc
loop
pushf
mov
fsubr
inc
sti
cmp
mov
sti
das
hlt
push
add
mov
outsl
jp
repz
jb
pop
and
jae
xchg
lods
mov
loop
mov
cmp
ret
add
and
out
lods
das
shl
es
and
or
xchg
pop
iret
xor
lahf
dec
aam
insl
push
inc
jnp
ss
and
jle
inc
mov
repz
mov
add
decl
cld
hlt
adc
pushl
cli
inc
push
mov
inc
fisubl
lods
aaa
xor
add
imul
xor
jmp
mov
jo
pop
pop
icebp
dec
mov
gs
xor
push
out
idivl
rcrb
mov
imul
or
shlb
jbe
mov
inc
adc
aaa
sbb
xchg
and
add
adc
mov
and
icebp
sub
lret
popl
mov
imul
je
cmpsb
test
jecxz
pop
sbb
xchg
out
cwtl
cmp
cmp
mov
out
inc
es
lret
lods
or
sub
call
dec
aaa
fdivl
mov
mov
inc
fmuls
and
mov
xchg
xchg
sbb
add
xchg
loopne
mov
push
dec
dec
mov
sahf
movsb
add
into
mov
sub
inc
in
mov
xchg
pop
loop
mov
adc
push
aam
dec
idivl
mov
inc
or
fld
mov
add
aad
aaa
lods
aaa
push
incl
xchg
cwtl
mov
mov
push
mov
xchg
and
add
pop
pop
mov
pop
ja
cmp
mov
orb
mov
not
xor
clc
sbb
fwait
sub
push
push
popa
xchg
test
cs
mov
jge
xchg
jae
mov
inc
ret
cmpsb
xchg
xor
fcmovu
sub
and
and
xchg
cmp
xlat
mov
inc
mov
enter
jge
icebp
in
or
mov
dec
mov
fdivrl
sub
loope
mov
pop
push
sbb
stos
aad
int
add
push
or
outsb
fldl
loope
sbb
dec
mov
outsb
sahf
sub
test
mov
jmp
mov
ja
adc
sub
xchg
scas
jnp
mov
gs
outsb
clc
es
xor
lods
je
dec
test
mov
iret
push
ja
std
mov
mov
push
lods
cwtl
inc
aad
fistpl
mov
ss
add
mov
mov
pextrw
ds
adc
ds
sbb
ja
and
aaa
sahf
mov
add
push
cmpsl
lahf
pop
add
sti
fildll
xor
sbb
dec
mov
aaa
adc
or
push
fstps
fs
sbb
ja
or
push
ret
mov
and
or
lock
in
fisubrs
lahf
push
fisubrs
push
pop
jge
add
adc
mov
mov
push
popf
jae
out
sbb
inc
xchg
push
add
push
jge
pop
lret
sub
frstor
pushf
push
sbb
push
xchg
or
mov
xlat
bound
mov
aam
dec
sbb
orl
fs
test
mov
push
add
arpl
push
xor
lret
clc
jno
stos
jp
jge
in
and
xor
or
jno
pushf
xchg
repnz
mov
out
mov
enter
sub
enter
jno
rep
or
sbb
jge
sbb
lds
sub
pop
or
icebp
lds
jo
pop
pop
es
add
repnz
shrb
cmc
and
jae
xchg
mov
cmp
iret
or
mov
push
adc
scas
aas
and
lcall
rorl
sbbl
sbb
jns
out
mov
incl
in
test
fisttpll
aad
hlt
movsb
sti
clc
sub
int
aam
cs
mov
and
push
insb
outsb
sbb
jno
adc
sub
js
jno
out
test
lods
imul
jmp
cs
adc
leave
mov
aam
push
test
sbb
xchg
fildl
mov
je
add
xor
jge
xchg
jo
dec
aam
add
mov
lahf
in
mov
cmp
fnstsw
or
inc
sbb
scas
data16
mov
mov
add
sbb
mov
daa
inc
or
sub
ret
adc
mov
pop
push
nop
pop
loopne
mov
add
lds
mov
cld
sub
sbb
hlt
out
ds
nop
inc
mov
cmpsl
std
in
lds
movsb
scas
dec
cmp
aad
sub
xor
mov
mov
sbb
inc
mov
xchg
mov
divb
xchg
lea
pop
inc
cmpl
lahf
and
cmpsl
xor
sbb
repnz
data16
dec
or
imul
cs
imull
jmp
and
or
aam
jg
pop
pop
pop
jecxz
push
inc
lea
hlt
int3
inc
fs
and
in
push
add
xor
xor
or
pop
mov
std
ja
add
adc
or
mov
mov
nop
xchg
push
in
jle
adc
mov
outsl
xchg
inc
paddsw
dec
mov
shrl
mov
js
mov
pushl
push
inc
push
jle
add
fisttps
xchg
adc
loopne
xchg
jmp
inc
pop
jne
jno
imul
out
in
xchg
ss
mov
ret
sahf
nop
push
inc
cmp
daa
aaa
leave
or
xlat
sub
or
mov
add
es
test
xlat
lahf
fdivrp
shrl
xchg
cwtl
add
test
sbb
gs
cli
mov
mov
cmpsl
daa
jbe
dec
rcrl
lret
adc
insl
ss
add
movsb
in
into
subps
sbb
adc
cmp
jecxz
push
xchg
xorb
inc
imul
aas
mov
xor
mov
xor
jae
aas
xor
mov
fcomps
xchg
hlt
cwtl
mov
scas
xchg
inc
sbb
iret
out
mov
dec
lahf
push
out
pusha
and
cmpsl
jg
les
mov
cld
mov
jle
pop
fs
dec
push
xor
pop
test
pop
cmp
out
call
stc
sub
jb
adc
out
and
cmp
out
dec
mov
adc
mov
push
dec
fistps
mov
mov
push
pop
fimull
and
xchg
cmp
mov
add
lret
and
and
sub
cmpsl
mov
pop
pop
test
mov
fnstcw
xor
xchg
aad
arpl
add
sub
inc
cmp
insb
sbb
mov
nop
pop
notl
popf
add
fcom
rol
fsts
dec
add
gs
sarb
int
push
pop
mov
sbb
aas
fdivrs
mov
jmp
fisttps
adc
std
loope
rcll
shlb
das
pop
daa
out
enter
ja
add
mov
add
int
mov
adc
ret
cwtl
into
ret
add
xor
inc
int
xor
mov
arpl
test
pop
cmp
bnd
aad
sbb
test
add
jb
xor
xor
bound
fnstsw
cmp
test
mov
dec
inc
fcomps
popa
adc
push
mov
callw
mov
xchg
pop
aas
popa
xorl
mov
cmpsl
add
bound
xchg
lret
stc
into
jle
push
daa
push
push
int
jbe
mov
outsb
and
push
cmp
fcomps
cwtl
fistps
xor
ret
out
adc
adcl
lock
data16
divb
adc
daa
lahf
das
sub
and
popa
mov
cltd
cli
pushw
cltd
xchg
jbe
ret
push
cwtl
pop
xchg
in
and
test
mov
aam
repz
xor
es
mov
push
cmp
enter
push
notl
sbb
add
mov
addr16
scas
push
jno
pop
stos
aad
ret
rcrb
shlb
adc
jno
and
cmp
mov
push
out
pop
ficoml
pop
pop
lods
mov
or
imul
mov
fidivrs
cltd
daa
int3
into
add
mov
adc
pusha
fsubs
sti
mov
inc
mov
bswap
inc
in
andl
sbb
pop
in
push
cmp
insb
jge
jo
pushf
in
mov
imul
adc
js
repz
jne
cmp
shlb
xor
jl
iret
aaa
sahf
and
insb
stos
pop
xor
mov
aad
add
cmpsb
cmc
sti
fadd
stc
inc
leave
xchg
xchg
in
push
bound
cmp
rcr
outsl
cmp
test
pop
sbb
scas
inc
jb
or
jo
test
loope
jmp
dec
inc
cltd
jo
mov
add
jmp
mov
jno
insl
push
cmp
cmp
mov
xlat
sbb
pop
addr16
mov
sub
fsubrs
sub
dec
xchg
pop
cmp
add
push
les
push
mov
sub
out
dec
adc
pop
popf
std
lret
enter
hlt
or
xor
clc
ret
sahf
sti
add
insl
inc
outsl
out
push
call
popf
ucomiss
dec
es
jnp
xor
out
add
jmp
jno
std
stc
pusha
rolb
loop
mov
icebp
test
cmp
movsb
lret
cmp
rcl
adc
jns
jns
xor
je
xor
cmp
inc
lods
and
lahf
cmp
call
pop
lea
dec
jbe
mov
jnp
jb
add
iret
not
jmp
mov
or
cmpsl
test
mov
xlat
xor
cltd
dec
std
andnps
daa
ficoms
adc
sbb
mov
pop
int3
negb
pop
in
fistps
addr16
mov
sub
mov
sbb
inc
jp
jmp
pop
enter
and
idivb
sbb
mov
in
mov
fidivrs
cmp
push
adc
inc
sbb
push
imul
dec
rorb
aas
adc
and
fucomp
xchg
mov
lcall
fucomp
dec
data16
jbe
hlt
scas
lods
andb
ficoms
adc
pusha
shl
inc
insl
ds
fidivrs
add
mov
mov
in
push
inc
cld
fwait
adc
fildll
and
push
into
cmc
mov
sbb
das
xlat
dec
call
stos
fwait
xor
sbb
jmp
fwait
sbb
rcrl
and
aad
ret
mov
cltd
and
xorb
daa
mov
stos
imul
xlat
pusha
pop
in
pop
pop
sub
repnz
push
gs
nop
fisttps
inc
cmp
ret
jb
sbb
gs
mov
loopne
fidivl
out
add
fstpl
imul
jo
ss
jl
into
cwtl
push
jg
xchg
je
jle
lods
hlt
adc
das
in
or
pop
sub
jp
imul
sub
pop
loopne
stos
xchg
test
rcrb
mov
test
fists
xchg
mov
sbbb
js
xchg
and
outsb
ret
imul
roll
and
or
or
pop
xchg
sbb
ljmp
leave
mov
ja
fildll
iret
enter
mov
mov
inc
out
mov
jmp
and
dec
push
scas
mov
sahf
pop
es
add
fucomp
mov
fwait
mov
jo
mov
inc
iret
aas
popf
and
lret
incb
test
sub
adc
pop
push
mov
fnsave
mov
popa
push
loopew
imulb
scas
cmp
imul
sbb
cmp
nop
movsb
sub
push
cmpsl
adc
call
mov
dec
inc
ja
int
pop
xchg
adc
pop
fistps
pmulhuw
pushf
rclb
out
sbb
scas
daa
cwtl
mov
insb
cwtl
inc
jbe
into
cltd
xchg
cli
je
cmp
stos
leave
sub
mov
xchg
jg
sbb
mov
js
loopne
rclb
mov
jp
and
inc
jo
dec
stos
cmpsl
repz
add
incl
das
leave
push
push
push
shrl
inc
jbe
push
fwait
cmp
stos
shrb
mov
lods
push
jp
test
xchg
add
pop
mov
mov
pop
outsl
xchg
scas
cmp
inc
dec
inc
xchg
insb
cmp
adc
mov
and
adc
jmp
dec
inc
add
inc
pop
mov
or
shlb
push
enter
in
mov
das
popf
jnp
ja
test
call
dec
clc
outsb
mov
out
pop
test
add
push
adc
inc
add
inc
js
movsl
dec
sahf
sub
push
enter
xor
bnd
loope
push
dec
in
pusha
insl
loope
mov
mov
or
add
mov
inc
cmp
add
test
dec
sbb
rol
into
arpl
cmp
push
pop
push
dec
sbb
test
or
pushf
fwait
sbb
aad
xor
repz
sbb
ret
outsb
and
pusha
int
daa
notl
insb
sub
fcoml
int3
dec
cltd
dec
outsb
inc
outsl
cltd
in
xor
jbe
jp
push
jge
adc
mov
cmpsb
xchg
decb
cli
push
xchg
mov
cltd
rorl
cmpsb
popa
mov
es
je
xor
frstor
xor
xor
pushf
fsubrl
mov
out
test
cld
dec
ss
xchg
leave
or
sbb
mov
outsb
dec
testl
stos
adc
jmp
push
outsl
rolb
in
add
add
cmp
add
or
cmpl
jne
cmp
ret
or
sub
icebp
xchg
icebp
mov
sbb
inc
sbbl
cltd
pop
cmp
aaa
add
pop
pop
shl
sbb
fwait
imul
sub
es
out
imul
cmp
dec
stos
out
or
jp
mov
ljmp
loop
mov
jmp
lock
jecxz
in
lea
mov
xlat
push
call
jg
cwtl
jle
xchg
sub
mov
mov
movsl
cli
mov
rcrb
div
or
sbb
jbe
js
cmp
cltd
or
loope
in
push
mov
adc
dec
rcrb
cmp
ret
das
jo
jb
pop
sbbb
mov
adc
inc
lret
inc
inc
js
mov
mov
scas
mov
pop
ret
push
jbe
jp
iret
adc
lods
xor
sbb
ret
or
adc
sbb
pop
adc
inc
fisubl
adc
xlat
cmp
out
rcrb
and
pop
loope
mov
and
sbb
cwtl
pop
ret
movl
push
jle
mov
jo
lods
jno
les
movsb
iret
and
dec
imul
mov
cli
aaa
mov
fs
mov
cld
push
sbb
pop
inc
push
inc
jge
jb
test
cmpsb
add
adc
jns
adcb
or
adc
stos
cmp
and
mov
mov
pop
in
ret
and
addr16
decb
jno
mov
mov
stos
xchg
pop
cltd
shl
mov
ss
icebp
cmp
out
insl
inc
sbb
sti
and
cmpsb
xor
push
sbb
mov
movsl
leave
mov
xchg
or
dec
adc
xor
add
adc
in
out
rcl
inc
loopne
push
mov
movl
jne
mov
adcb
sub
cmpb
inc
pop
jp
push
and
jmp
arpl
roll
mov
dec
addr16
add
fildll
daa
sahf
mov
xor
inc
rcrl
mov
mov
popf
mov
fsubs
sar
push
test
sub
lods
jg
dec
xchg
addb
inc
imul
or
cmc
mov
leavew
into
add
and
inc
adc
out
cmp
movsb
ja
sbb
ja
cmp
jne
jp
mov
popf
scas
mov
cmp
inc
jne
mov
out
lods
aas
mov
pop
int3
xchg
add
bound
xchg
and
mov
jbe
lea
in
xchg
in
imulb
mov
inc
dec
aam
cwtl
pop
pop
push
daa
mov
in
mov
mov
mov
sub
mov
sar
insb
lcall
cs
in
lcall
es
es
clc
lea
dec
xchg
shll
call
sbb
mov
sbb
mov
jo
hlt
xlat
push
push
cltd
sub
roll
shll
bound
and
outsl
inc
add
sub
jbe
out
cmp
test
add
adc
cmc
bound
inc
iret
and
push
pop
and
push
ds
aad
mov
ret
cmpb
fsubs
sub
rolb
cli
aam
test
sub
jne
fs
aas
fisubs
out
mov
or
jg
jle
aaa
lret
fwait
jge
int3
cltd
ficompl
pop
mov
and
sub
xchg
sub
stc
pop
hlt
pop
rcll
cmp
aaa
cltd
mov
add
add
mov
and
int
adc
sub
add
lcall
jmp
sub
data16
mov
mov
adc
in
jg
lea
adc
ds
scas
ret
imul
cmp
jl
dec
loop
adc
jo
xchg
inc
movsb
sarb
push
mov
jbe
shll
sbb
and
cmp
data16
rcr
adc
adc
add
or
push
scas
and
iret
dec
lahf
out
daa
and
mov
lds
push
push
adc
movsb
and
gs
cmpsb
push
jnp
lcall
test
in
cmpsb
cmpsl
cmp
lret
push
rcll
xorl
mov
push
mov
fcompl
pop
mov
xchg
mov
inc
mov
je
outsl
pop
hlt
hlt
in
xchg
pop
pop
or
adc
in
sbb
into
loope
inc
or
into
repnz
cmpsb
pshufw
stc
dec
or
pop
aam
mov
gs
ret
jl
sahf
fisttpl
pop
in
add
xchg
add
jmp
push
repz
dec
popf
pop
sub
int3
dec
dec
jmp
lds
sti
repnz
inc
xchg
in
xor
hlt
aad
pushf
ret
xor
fsubs
popl
ret
xor
dec
add
add
lcall
iret
mov
mov
je
push
lods
les
pop
xchg
jmp
or
faddl
dec
dec
dec
stc
cmp
stos
lahf
scas
cmpsb
lret
or
aad
jne
pop
mov
xchg
jno
add
push
mov
push
and
push
popa
shlb
imul
push
ljmp
sbb
mov
push
stos
jno
push
aaa
mov
sbb
jg
rclb
outsl
or
fcomi
adc
addr16
iret
push
adc
jno
jo
pop
sahf
mov
adc
daa
push
mov
add
mov
subl
jecxz
dec
or
insb
lds
mov
pop
ljmp
cs
dec
pop
mul
mov
divb
lea
fcmovbe
push
stos
and
push
mov
stos
sub
dec
sahf
add
push
dec
jae
stos
cmp
xor
mov
cmp
xchg
in
inc
lds
mov
sbb
mov
adc
out
js
out
stos
add
cld
jbe
or
sub
mov
fninit
inc
mov
stos
pop
mov
dec
adc
dec
mov
pop
out
lods
xchg
push
icebp
cmovl
rcrl
shll
lahf
das
icebp
adc
xor
orb
shl
cmpsb
xor
push
movsb
xor
add
stos
pop
jecxz
lea
out
leave
pop
sbb
inc
js
test
pop
into
add
xor
filds
popf
imul
cli
test
mov
shl
in
ret
mov
push
mov
outsl
andb
push
sub
xchg
ds
mov
sbb
repz
cmpsl
ja
xchg
sti
lds
mov
sub
inc
stos
stos
sbb
pop
outsl
mov
jae
push
scas
scas
pop
dec
mov
es
sub
push
cmpb
int
sub
scas
fildl
adc
dec
add
xchg
pop
iret
jne
add
or
lret
add
fbld
add
jne
movsl
push
push
and
dec
in
cmp
push
int3
jg
push
pop
dec
daa
push
or
outsl
lea
mov
pop
jmp
imul
pop
data16
mov
push
jo
mov
addr16
push
in
sahf
mov
aaa
adc
insl
sbb
jle
mov
push
fadd
mov
mov
out
in
jb
push
and
movsl
or
sbb
mov
shrb
leave
pop
cmp
fs
pop
mov
cmp
loopne
xchg
jecxz
sub
ja
or
push
stos
scas
inc
stc
inc
lea
jecxz
pop
add
add
aad
mov
aas
inc
xchg
stos
js
push
and
or
xor
outsb
push
rcrb
out
xor
adc
inc
mov
loope
or
mov
stos
dec
dec
addr16
mov
push
negl
mov
xchg
inc
gs
scas
pushf
push
clc
dec
clc
fyl2xp1
adc
jb
dec
mul
push
test
xchg
je
test
mov
jmp
dec
mov
je
shl
out
lahf
pop
aaa
pushf
add
lret
cli
xor
ret
push
mov
loop
push
dec
adc
ret
add
ja
aad
ret
pop
ljmp
movsl
ja
sbb
mov
and
fs
xor
fadds
xchg
gs
mov
movsl
mov
sub
sbb
jbe
sti
pcmpeqb
mov
jo
sbb
bound
cltd
mov
sub
out
xchg
btc
sarb
pop
iret
shll
lret
sbbb
cmpsb
mov
into
fwait
call
loop
pop
xchg
dec
inc
pop
sub
push
pop
and
lret
in
pop
add
mov
loopne
mov
inc
shll
jnp
or
rcl
xchg
lcall
cld
xchg
ficoml
mov
and
or
daa
and
sub
test
add
mov
sahf
push
flds
push
cmpsb
add
mov
mov
add
or
and
jg
or
fnstcw
in
xchg
movb
inc
daa
sahf
outsb
mov
fwait
cwtl
dec
lret
cmp
ficomps
mov
loope
test
fidivs
xchg
jns
out
in
inc
orl
ljmp
fidivrl
sbb
push
push
xor
call
xchg
data16
or
sub
stc
mov
xor
push
xor
cmpsb
rorl
and
sbb
scas
mov
aas
rcll
and
mov
aad
lods
cmp
sub
dec
rcrl
lds
addr16
inc
fcomip
mov
add
mov
sbb
fwait
jae
mov
dec
stos
and
stos
fimuls
sahf
push
push
adc
fidivrl
jb
lods
cmp
jl
pop
xchg
or
fdivs
popf
sub
ret
pop
shrl
cmp
lods
xchg
fdiv
cli
out
cltd
cmp
pop
mov
fsubl
sbb
inc
popa
jg
pop
pop
push
xchg
enter
sbb
insl
dec
pop
or
jp
lock
imul
test
mov
sub
xor
inc
xchg
fistpl
adc
cmp
loop
xor
fisubs
xor
imul
inc
push
insl
out
push
fdivs
add
fs
mov
dec
aas
jne
mov
mov
xor
mov
bswap
ljmp
mov
ret
mov
add
cmp
dec
cld
fcmovnbe
or
data16
test
pop
fdivs
sub
pop
pop
mov
lods
aam
insb
push
pop
sti
sahf
shll
xchg
ficompl
lods
push
cltd
mov
pop
cmc
rcrb
xchg
ffree
dec
sbb
sub
pop
mov
pushf
pushl
inc
xchg
loope
shll
mov
mov
adc
mov
and
shll
jecxz
xchg
movsl
outsl
jne
repnz
mov
cmpsl
cmp
mov
and
sub
insb
cmp
dec
xor
je
mov
fdivrl
out
and
cmpsl
sar
imul
inc
xor
xchg
mov
xor
mov
mov
shll
pop
mov
and
xchg
insb
ret
cwtl
loopne
jnp
jp
push
sbb
es
rcr
inc
jbe
mov
ja
mov
push
loopne
subb
mov
add
pop
pop
dec
xchg
mov
inc
jb
mov
push
loopne
loop
add
cli
or
mov
and
mov
cs
jg
or
pushf
scas
pop
repz
push
xchg
fstps
lock
add
pop
mov
ljmp
stos
and
cmp
inc
inc
sbb
nop
jg
test
or
fcmovnu
jo
fwait
sub
xor
adc
cmpsb
lods
mov
shr
icebp
dec
sbb
popa
fidivrl
cmpsl
outsb
push
xchg
in
and
fwait
das
and
adcl
outsb
mov
aas
inc
cwtl
pop
insl
js
mov
jge
inc
shl
mov
cltd
xchg
inc
ja
inc
lock
vmulsd
mov
pop
pop
pop
jbe
mov
jno
mov
stos
cmc
clc
jns
in
mov
es
push
pop
cltd
nop
ret
mov
lret
mov
inc
dec
jp
dec
inc
ja
jno
test
stc
sbb
push
or
fildl
aad
test
ss
inc
fwait
inc
dec
cs
pop
ss
leave
jmp
mov
jg
push
sbb
fiadds
out
dec
mov
das
call
stos
cmp
or
jbe
insl
test
sbb
adc
jmp
test
and
or
cld
clc
mov
push
call
cmp
xchg
xlat
mov
pusha
cli
cmp
cmpsl
mov
ds
jns
xor
test
jl
pop
popa
aaa
stos
xor
xchg
aas
pop
adc
or
push
insl
lea
xor
lret
jp
xchg
cmp
lret
repz
stc
pop
test
mov
pop
out
jle
fs
inc
sbb
dec
inc
jge
jo
imul
inc
sub
push
sub
mov
jb
pop
add
das
cmp
jo
clc
fldenv
add
or
pop
xchg
inc
fmull
and
lcall
jl
add
out
imul
jp
in
xchg
push
bound
icebp
das
repnz
push
dec
loopne
mov
add
mov
lds
push
and
loope
ret
cmc
sarb
add
hlt
rcl
dec
divl
inc
out
xchg
fldl
sub
mov
xchg
dec
nop
add
mov
dec
loopne
sbb
test
arpl
or
sahf
push
dec
pushf
int
pop
mov
cmp
push
imul
arpl
rcl
test
fsubs
jp
int3
mov
cli
scas
ljmp
lret
add
enter
in
pop
out
pop
inc
fistpl
push
and
pop
dec
cltd
push
mov
dec
inc
xor
stc
xchg
enter
jnp
sub
jg
ljmp
in
arpl
inc
sbb
mov
aam
dec
es
pop
push
inc
mov
sub
mov
jecxz
pop
dec
hlt
in
mov
jo
jmp
and
jnp
sub
xchg
xchg
pop
in
std
int
inc
adc
mov
push
add
fdivl
add
mov
mov
add
sub
scas
out
xchg
or
sbb
cmp
sahf
mov
xor
sbb
pop
inc
xorl
dec
icebp
inc
xchg
adc
loop
sbb
cmp
stos
lock
addl
fstps
scas
mov
rclb
fwait
popa
cmp
ja
ss
repz
jbe
loop
cltd
mov
rolb
outsl
ljmp
ljmp
ljmp
shrl
or
pushf
insb
mov
pop
push
lea
in
jl
ja
dec
repz
mov
mov
mov
push
xchg
xchg
cmp
mov
filds
adcb
cli
push
and
mov
call
or
adc
cs
jl
pop
int3
adc
mov
jno
push
jae
pop
cs
insb
sbb
jo
bswap
ljmp
daa
dec
push
jmp
lea
ds
sbb
mov
out
xor
sti
ficompl
cmpsl
sub
xor
xor
faddl
repnz
inc
xchg
gs
into
stos
push
pop
mov
adc
add
mov
pushf
push
mov
repz
loope
dec
mov
and
push
mov
jno
xor
push
dec
sub
and
mov
jne
je
fidivs
pop
jno
mov
pop
cwtl
dec
ss
xchg
sti
imul
ss
lcall
xchg
cli
pop
pop
rcll
jnp
enter
cmp
xor
dec
adc
lahf
arpl
notl
cli
gs
mov
mov
les
adc
xchg
leave
nop
xchg
fcomip
pop
and
in
sti
jns
xchg
fdivrl
cwtl
dec
pop
es
mov
and
push
adc
sbb
jmp
jae
jg
push
adcl
ret
mov
push
fistps
inc
pop
jo
adc
je
jb
xchg
sub
push
gs
shlb
cmp
and
push
mov
int3
jae
popf
out
test
dec
repz
out
add
mov
stos
jge
inc
xchg
add
movsb
test
jg
jae
sub
test
adc
mov
mov
jnp
repz
mov
push
pop
pop
lret
shl
cli
dec
cmp
addr16
pop
repnz
lock
dec
aas
or
std
push
mov
push
imul
daa
popf
call
and
in
push
mulb
push
lret
push
iret
mov
loope
pop
popa
inc
xchg
shlb
mov
addr16
mov
mov
pop
int3
nop
sub
inc
sarb
jns
adc
shr
or
notb
cmc
jp
mov
xor
leave
push
insb
jbe
insb
or
adc
pop
dec
aam
mov
aam
stos
xor
xchg
psllq
mov
push
or
sub
out
push
movsl
in
add
and
jb
jp
test
sbb
pop
int3
lods
dec
mov
jmp
loope
mov
xchg
mov
repnz
cmp
mov
jae
dec
gs
enter
inc
fimull
inc
test
sbb
lret
aas
inc
insb
xchg
test
shlb
js,pt
imul
mov
scas
outsl
fcmove
aam
pop
adc
lock
jmp
ja
lock
xor
leave
aaa
popf
test
imul
es
add
jb
inc
jmp
out
jo
inc
inc
mov
scas
push
mov
push
adc
shrl
jmp
scas
xchg
sbb
mov
sub
pop
and
push
jle
dec
adc
cs
cmp
orb
lods
xchg
ret
daa
or
fdivrs
ror
lahf
out
imul
test
push
das
addr16
test
push
roll
jmp
test
add
or
adc
sbb
ficompl
cmpsl
xor
negb
cli
daa
dec
in
push
mov
mov
dec
push
movsb
ja
dec
sbb
aad
sbb
fdivp
mov
cmp
bound
push
popf
xlat
cmp
ja
stos
ja
xchg
jae
mov
stc
enter
iret
cli
mov
in
push
push
mov
and
and
repnz
call
xor
mov
adc
push
mov
push
cwtl
insl
fs
cli
ret
xchg
jo
xchg
inc
cld
mov
jmp
repnz
outsb
jle
sbb
jo
jmp
icebp
add
lret
sbb
cmp
cmp
cld
pop
dec
pop
fidivl
add
sub
aad
decl
inc
jo
popa
dec
lock
and
mov
sbb
jbe
jg
rorb
push
add
push
xchg
popa
mov
shlb
out
or
sbb
cmp
jne
hlt
jnp
repz
mov
or
ja
pushf
mov
mov
push
mov
mov
movsl
leave
shlb
push
push
mov
mov
mov
mov
xchg
andl
jae
and
out
fwait
in
mov
cld
xchg
test
bound
aaa
jno
sub
in
test
enter
fiaddl
stos
in
push
jno
test
imul
add
jb
aas
fcom
mov
jp
add
mov
orb
push
loop
xchg
fcompl
sub
cmpsl
inc
scas
in
das
push
pop
loopne
jge
out
imul
cwtl
xchg
pop
inc
cmc
mov
xor
mov
lds
push
in
mov
add
std
sbb
and
and
xchg
and
test
scas
sbb
sbb
push
push
cs
xchg
or
mov
std
or
xchg
ret
addr16
punpcklwd
pop
sbb
fldl
shlb
test
push
jo
fsubrl
sahf
fnstcw
mov
inc
mov
ja
aam
inc
sbb
or
mov
stos
and
getsec
or
add
mov
xchg
cmp
sub
jae
cmp
and
dec
out
cmp
fidivrs
xorl
inc
sbb
add
or
push
pop
iret
int3
inc
inc
jnp
in
les
xchg
data16
jnp
mov
rclb
shlb
dec
loopne
aad
lock
icebp
jb
push
pusha
pop
imul
xchg
and
add
rol
lret
jg
shrb
cmp
mov
test
ss
ljmp
sbb
scas
imul
mov
xchg
divb
jnp
data16
inc
into
sub
mov
add
adc
stc
adc
cmpsl
mov
fsubrl
or
jae
adc
cmp
aaa
xchg
sub
mov
ljmp
sbb
rolb
lret
mov
int3
mov
test
insb
push
jb,pt
jne
fnstsw
jbe
shl
clc
mov
pop
fmull
inc
call
cld
xlat
xor
mov
or
call
into
inc
cld
mov
jbe
dec
dec
pushf
xchg
jmp
ds
jl
mov
lods
push
out
das
leave
push
mov
divb
xchg
enter
mov
loop
adc
fs
enter
pop
xchg
out
jno
jae
repnz
push
je
addr16
jg
or
xor
out
pop
sbb
mov
shlb
js
adc
or
stc
stc
outsb
fs
xchg
in
test
orl
std
dec
jb
dec
flds
andb
stos
adc
test
fcom
fmul
and
test
lret
jg
out
emms
inc
pop
sub
lea
addb
scas
fidivrl
xchg
in
ffreep
cmpsb
pop
jnp
sub
xor
mov
fxch
add
dec
cmp
rcrb
mov
test
mov
int3
mov
lret
out
dec
pop
mov
mov
cmp
jnp
mov
and
push
dec
lds
push
inc
adc
lahf
in
inc
test
xchg
cmpb
add
daa
sbb
push
cmp
fmul
adc
aaa
aaa
pushf
jmp
aaa
or
lds
outsl
adc
pop
lret
ret
mov
push
sahf
xlat
xor
or
cld
and
lcall
xchg
mov
xor
int3
jae
pop
mov
lock
jmp
cmp
les
insb
push
addl
fcomps
es
lret
xor
xchg
dec
cmp
mov
sbb
cmp
lahf
dec
xchg
outsl
int
xchg
inc
jp
es
mov
pop
mov
cmpsl
movl
divl
shl
shlb
insb
pop
and
lahf
adc
push
bound
in
xor
lcall
sub
xchg
xor
movb
scas
push
fwait
inc
sub
pop
je
cmp
pop
push
xchg
add
fs
push
push
std
inc
dec
jge
pop
push
inc
mov
or
ja
pop
sbb
mov
push
lret
jmp
mov
mov
adc
dec
cmpsl
cmpsl
mov
stc
outsl
ljmp
xchg
stos
in
cmpsb
push
inc
icebp
sbb
or
addr16
cld
pop
xchg
or
aam
push
xor
lret
sub
dec
aad
loop
ss
mov
insl
xchg
add
je
dec
js
sub
cmp
mov
dec
cmp
mov
insb
icebp
mov
pop
dec
add
pop
dec
mov
outsb
fstpl
and
add
popf
aas
sub
cmp
xchg
inc
shll
rcrb
movsb
jmp
aas
jmp
mov
test
inc
cs
imul
xchg
cmpsl
imul
push
cmc
pop
jmp
jge
aad
push
pop
shl
daa
xchg
fwait
jp
nop
lea
cmpsb
pop
jl
inc
adc
pop
jno
adc
sub
sar
push
pop
and
mov
out
cmp
lret
cmp
inc
arpl
cmp
mov
ja
daa
dec
orl
dec
mov
fistps
enter
outsb
push
adc
xlat
ret
ljmp
inc
mov
inc
push
pop
mov
les
cwtl
xor
out
loop
or
and
inc
cmp
and
or
lods
das
leave
int3
sub
dec
je
ds
lcall
pop
out
sbb
movsl
xchg
inc
ja
subb
lods
jmp
mov
adc
movsl
jmp
xlat
lcall
sti
xchg
cmp
ds
adc
mov
pop
popl
push
fisubs
in
and
sti
scas
dec
push
mov
stc
dec
inc
test
push
lahf
rolb
fwait
or
jnp
mov
loopne
push
pop
shlb
jmp
push
je
adc
add
inc
mov
xchg
cli
ffree
lret
rcl
dec
int
imul
xor
cld
xchg
cli
ds
mov
mov
mov
or
das
push
adc
cmc
dec
adc
jle
mov
pusha
repz
stc
dec
or
leave
and
push
gs
xor
shrb
sub
xor
cs
outsb
loope
mov
stos
dec
inc
lcall
sbb
xor
mov
pop
fadd
push
cmp
cmp
sbb
push
push
push
scas
lahf
movsl
jno
sub
mov
mov
and
xor
mov
dec
jae
and
cwtl
inc
mull
or
inc
inc
push
inc
and
cmp
lods
in
add
xchg
lahf
dec
cmpsl
and
in
ss
adc
and
and
negl
xchg
cmp
xchg
outsl
mov
xchg
out
mov
push
add
repz
add
cld
gs
cmp
push
jbe
fwait
or
pop
cmp
data16
mov
sub
int
ss
xchg
jns
scas
int
mov
push
add
xchg
push
dec
ret
add
mov
ja
mov
sbb
loope
sbbb
push
xlat
js
pop
std
sbbb
jnp
and
xor
xchg
insb
int
sbb
mov
sbb
jge
cld
orb
lret
loopne
enter
pop
mulb
mov
push
jns
pushl
jp
shll
mov
mov
test
arpl
cmc
jbe
mov
inc
scas
out
test
fprem
lods
inc
sbb
test
and
pop
mov
icebp
cmp
mov
leave
enter
xor
mov
outsb
jp
pusha
cld
aas
xchg
subb
xchg
je
sub
sbb
insb
popf
scas
movsl
add
stc
in
cmp
test
push
sti
xor
add
cmp
mov
mov
mov
mov
mov
push
add
test
into
cmp
mov
test
mov
cmp
mov
jbe
jae
out
in
sti
xor
stos
xlat
jmp
push
dec
daa
nop
enter
sub
dec
and
add
push
pop
ret
inc
dec
sbb
out
xor
pop
jbe
or
aaa
xchg
rcr
jns
arpl
test
mov
inc
jb
es
dec
sbb
call
and
xor
arpl
jae
repnz
int3
repz
push
outsb
mov
inc
test
xor
aam
rclb
sbb
push
mov
bound
outsb
bound
mov
cwtl
cwtl
ret
cmp
into
lret
add
xchg
fucom
adc
push
test
or
mov
mov
mov
imulb
mov
rorl
cltd
ss
cs
push
pop
push
scas
test
roll
fisubs
incl
addr16
imull
adc
imul
jae
insb
aas
test
push
pop
repz
push
out
stos
inc
je
adc
mov
test
test
repz
mov
xchg
mov
sahf
jle
jg
into
adc
xchg
cltd
fimull
imull
fxam
push
pusha
movsb
or
lods
jb
jne
stos
adc
xor
test
arpl
int3
hlt
mov
out
xor
mov
mov
cwtl
inc
jl
push
data16
jnp
push
movsb
jae
jnp
cld
int
sbb
movsl
jno
push
sub
lea
rcrl
pop
mov
popa
mov
xor
addr16
sbb
ja
pop
leave
pop
rcll
adc
adcl
cmp
into
dec
insl
insb
out
push
jne
mov
nop
or
xchg
or
movsb
or
adc
scas
sub
jmp
mov
ss
add
sub
inc
jbe
mov
adc
jle
mov
jecxz
xchg
and
stos
popf
cmpsl
sub
dec
mov
insb
lods
cmp
stos
imul
fsubp
arpl
add
das
push
out
mov
shlb
cld
or
ljmp
or
int
xchg
mov
psubsb
xor
or
bound
out
stos
inc
fs
pop
loope
dec
ret
mov
popf
push
in
in
cli
jo
mov
mov
flds
jle
adc
je
pop
mov
test
stos
cmp
fadds
jle
enter
stos
push
scas
fisubs
das
andl
inc
lcall
mov
adc
rorb
xor
sbb
ja
loop
subl
bound
jae
int
push
or
popf
sub
jle
cwtl
inc
arpl
imul
push
mov
cltd
stos
pop
aaa
aam
dec
cmp
stos
fwait
pop
nop
xchg
mov
pop
test
aam
dec
mov
jne
pop
aam
push
movsl
mov
push
lods
subb
push
loope
aas
and
les
cmp
fcomi
jo
dec
mov
clc
jnp
rolb
dec
scas
xor
cmc
hlt
jecxz
mov
cmpsl
rorb
arpl
ret
pop
in
jp
and
jp
aam
pop
xor
cmc
sti
movsb
inc
in
pop
cmp
and
dec
adc
mov
mov
sub
movsb
push
popl
lds
jns,pt
cmp
mov
sbb
xor
fbstp
fmuls
mov
dec
mov
sub
cmp
daa
mov
aas
jg
mov
mov
jl
rorl
xchg
out
sbb
push
push
jmp
mov
lret
cmp
fisttpll
sub
push
mov
inc
jg
outsb
jb
or
or
inc
cmp
scas
adc
cmp
fwait
out
ficompl
mov
inc
repnz
inc
push
jbe
andb
xor
adc
jge
push
add
imul
pushf
addr16
daa
sub
scas
xor
daa
out
mov
sub
roll
addb
stc
rolb
rcr
cld
jne
enter
pop
mov
mov
sbb
inc
pop
daa
jne
lret
sub
loopne
in
arpl
shrl
dec
scas
push
mov
or
jle
shl
mov
out
mov
dec
ret
and
jle
in
daa
jne
js
push
daa
fstpl
into
daa
mov
fcoml
aaa
or
test
fwait
inc
add
pusha
push
cwtl
xchg
dec
push
scas
aaa
mov
xlat
insb
xlat
loope
imull
scas
dec
mov
aad
jno
bound
xchg
lods
add
mov
add
das
add
mov
mov
lahf
push
daa
jg
ss
dec
inc
pushf
icebp
pop
rcr
push
and
inc
es
repz
in
jge
imul
xchg
add
jle
lret
adc
dec
mov
stc
ljmp
jp
lahf
icebp
addr16
inc
rcrl
mov
lods
add
cmpsl
or
add
jg
icebp
xchg
xor
clc
subl
fs
mov
xchg
testb
out
call
and
inc
arpl
add
rorb
repz
cmp
std
arpl
mov
hlt
cs
dec
push
pop
mov
push
bound
mov
xor
pop
ret
insb
and
test
sbb
rorb
pop
xchg
sub
xchg
scas
jmp
fdivrs
movsl
pusha
mov
pop
cwtl
dec
xchg
scas
fstps
xor
add
out
rcrb
xlat
mov
je
and
clc
mov
nop
mov
lret
scas
into
in
gs
popl
sbb
std
ffree
into
or
cmpsl
jmp
jb
xchg
imul
movsb
sub
mov
outsb
enter
lret
in
fsub
movsl
popa
push
mov
inc
push
cmpsb
sbb
jg
test
lret
cwtl
daa
pop
in
dec
pop
daa
xchg
ljmp
lea
imul
xchg
mov
sub
imul
push
movhps
out
fists
sbb
lods
and
pop
adc
or
inc
dec
mov
int
shr
leave
repnz
push
pop
jecxz
int3
inc
mov
cmp
fcomi
fs
mov
pop
das
incb
adc
leave
mov
movsl
mov
sub
mov
push
dec
sbb
pop
push
or
iret
mov
sub
sbb
sti
lret
pushf
xchg
ja
imul
push
fistpl
lods
ljmp
inc
sbb
fiaddl
leave
mov
das
mov
ljmp
push
add
jmp
clc
mov
sub
xchg
pop
or
push
push
hlt
sbb
repz
sbb
or
inc
sarl
sbbb
or
jo
insl
xchg
add
mov
pop
sub
inc
jl
mov
punpcklbw
cmp
pop
jo
outsl
push
cmpsl
dec
mov
fucomi
xchg
call
inc
jecxz
jl
push
mov
push
shrb
nop
hlt
int
pop
add
push
jne
jp
testl
es
fwait
or
rcll
out
mov
sahf
cli
sarb
mov
repz
rcll
dec
push
outsl
int
clc
or
out
xor
insb
push
mov
add
dec
jg
lcall
jecxz
cmovl
xchg
jo
es
outsb
adc
pop
xchg
cwtl
fwait
into
mov
repz
roll
sbb
fwait
xor
inc
rorl
rclb
push
inc
fidivl
test
fcmovnb
incb
enter
aam
dec
mov
mov
out
mov
pusha
aas
mov
daa
in
sub
xchg
iret
xchg
and
ret
aaa
out
sub
popf
add
arpl
jnp
insb
ss
js
lahf
jmp
test
rorl
add
test
push
fistpll
push
fdivrp
pop
pop
add
fs
stos
adc
dec
push
out
stos
stc
lods
aaa
mov
ja
fcmovb
test
pop
mov
rclb
sbb
and
fdivrs
cmpsb
push
or
out
out
push
cmp
dec
or
cmc
les
jns
popa
xchg
sbb
ret
mov
into
in
roll
sahf
or
cmpsl
in
cmp
xchg
push
jns
js
pusha
pop
clc
les
pop
ds
jno
push
pushl
out
push
out
mov
mov
in
jbe
imul
in
or
pop
push
or
push
xchg
and
fists
fcoms
shll
cmp
adc
test
add
aas
test
and
jp
mov
shrb
iret
jnp
and
fcoml
adc
xchg
inc
jg
mov
push
sahf
int3
scas
sub
div
cmp
jns
outsl
push
ja
xchg
mov
sbb
pop
and
jg
ja
nop
or
mov
sub
adc
sub
inc
add
ja
or
jg
cs
jbe
add
es
or
and
cmp
pop
jbe
and
mov
jge
mul
sbb
mov
pop
sahf
shll
fistl
cld
push
fildl
dec
in
dec
test
push
lods
insl
xchg
ss
scas
and
and
out
and
scas
rcl
emms
xchg
loop
pusha
push
adc
in
inc
cmp
mov
mov
ljmp
aaa
in
sbb
subb
jp
push
dec
dec
push
test
xchg
mov
sti
addr16
jecxz
dec
push
mov
out
add
fsubs
xchg
dec
rorb
mov
enter
push
jecxz
xchg
mov
js
ss
into
lcall
fwait
popa
je
out
inc
add
ss
data16
mov
xor
sub
mov
pushf
int3
shl
out
mov
scas
arpl
popa
add
dec
adc
imulb
pop
push
push
or
or
sub
and
aad
stc
and
int
fbld
mov
xchg
aad
jne
lods
fiadds
retw
popf
jecxz
mov
mov
shrl
push
cmp
loopne
dec
in
inc
pusha
jmp
inc
mov
loopne
sbb
insl
int
cmp
and
loope
xor
mov
fistl
mov
andb
std
push
or
shrl
adc
push
insl
imul
dec
mov
in
mov
add
cmpsb
dec
add
or
clc
adc
fwait
adc
mov
nop
repnz
mov
mov
hlt
dec
pusha
push
hlt
mov
sahf
xor
popl
ret
cmpsl
movsl
jae,pt
pop
push
add
or
sbb
popf
xchg
xor
je
mov
dec
insb
xor
cmp
jmp
pop
gs
scas
jne
jmp
call
dec
in
stc
ja
add
test
mov
stos
fisubrs
mov
mov
push
push
data16
iret
aaa
xor
nop
bound
cmp
mov
dec
int
add
ljmp
aad
bound
xchg
arpl
inc
repz
call
jae
mov
jmp
jo
sbb
push
add
jge
inc
mov
sbb
mov
mov
mov
fmull
imul
fwait
xor
xchg
pop
cmp
inc
sub
andb
bound
fisubrs
enter
daa
xchg
aaa
subb
enter
sbb
mov
cltd
movl
add
popa
shr
repnz
rorb
mov
and
cmp
gs
out
lahf
js
mov
adc
mov
fs
out
mov
sbb
outsb
nop
iret
aaa
mov
sub
and
mov
loope
xor
fdivrp
imul
mov
inc
dec
xlat
test
es
loope
jne
cs
add
cmovbe
fadds
mov
es
cmc
and
add
xor
mov
in
mov
ljmp
ljmp
les
outsl
mov
jl
nop
sbb
adc
fxch
inc
xchg
push
pop
mov
xchg
js
xchg
sub
pop
movsl
lods
xchg
mov
das
jg
lods
or
jp
int
hlt
insl
sbb
lcall
or
and
pop
pushf
jle
mov
rcrb
lods
push
sbb
pop
pop
mov
adc
inc
mov
xchg
mul
xor
xor
movsb
int3
xchg
add
add
out
jecxz
xchg
mov
or
mov
or
inc
inc
insl
or
push
pop
push
and
incl
out
adc
pushf
mov
cmpsl
rorl
mov
test
push
inc
lcall
js
sbb
lds
dec
das
mov
pop
enter
imul
cwtl
cli
jb
outsb
in
jns
cmp
ds
sub
scas
jmp
mov
orb
dec
mov
fistpll
inc
jl
xor
testl
lret
sbb
jge
xchg
push
pop
sbb
lock
jg
add
into
adc
jle
cmp
lods
mov
das
mov
or
jns
mov
mov
outsl
push
jge
insl
lcall
bnd
inc
adcl
shl
cmp
pop
addr16
or
aaa
sub
andl
fldenv
mov
or
cmc
and
inc
aad
cmp
or
lret
ss
in
mov
mov
xor
push
hlt
test
fcmove
cmp
push
jmp
or
mov
out
or
mov
je
push
inc
cltd
subl
stc
pop
subb
mov
jge
add
lods
lret
dec
xor
push
mov
or
push
adc
push
pop
adc
dec
xlat
flds
outsl
xchg
int
cmc
negb
int
aas
lods
push
add
dec
in
lods
xor
and
pop
imul
lods
insl
cwtl
outsl
hlt
adc
xchg
fwait
push
cwtl
sub
mov
dec
imul
jb
mov
pop
adc
push
arpl
pop
sub
pusha
out
jp
or
js
shl
arpl
ljmp
mov
adc
sub
test
add
loop
dec
nop
mov
jno
les
out
adc
mov
jl
xlat
push
jg
jl
popf
int3
xchg
push
pusha
inc
xchg
xchg
lods
inc
movsb
aam
adc
xor
hlt
test
xchg
add
inc
mull
sbb
nopl
push
icebp
test
shl
mov
and
pop
xor
add
mov
sub
dec
or
mov
jns
adc
dec
jno
mov
xchg
gs
mov
mov
imul
adc
mov
call
add
cmp
jno
ss
rclb
pop
jle
outsl
fimuls
sub
pop
icebp
xchg
cmp
ss
test
into
adc
cmp
pop
ds
sarb
sub
rcl
and
les
mov
mov
js
push
add
mov
mov
jmp
movsb
arpl
icebp
xchg
icebp
inc
cmp
dec
xchg
ret
int3
and
cmp
clc
fistpl
push
bound
leave
adc
mov
sahf
stos
xor
fistpll
cld
and
jg
mov
stc
mov
fs
cwtl
add
popa
add
flds
mov
daa
add
aas
mov
or
ret
fildll
jae
mov
or
inc
int3
shrb
mov
sub
sar
cmp
pop
rclb
lret
or
mov
jl
dec
outsb
je
inc
fisubl
pop
into
jmp
ljmp
pusha
sbb
scas
or
repnz
mov
jno
popf
clc
fwait
ret
repnz
pop
dec
mov
sub
shrb
lds
mov
add
testb
mov
pop
adc
mov
xlat
sbb
jns
pop
jae
pop
xchg
pushf
sub
imul
jp
cmp
pop
repnz
xor
dec
pop
cmp
out
jl
div
push
ret
xor
inc
pop
jecxz
jns
jo
lods
sub
rolb
shll
cld
movsb
cmp
xchg
out
cmc
jb
test
inc
push
mov
add
fucomi
subb
push
sub
cmc
inc
mov
mov
xor
dec
loopne
scas
xor
adc
xlat
inc
popa
cs
jmp
dec
adc
push
data16
sahf
mov
lods
jae
mov
push
daa
loope
stos
loope
sbb
imul
lret
sub
jae
xchg
ret
fnstenv
add
push
pop
insl
sti
push
sub
call
lahf
rsqrtps
mov
adc
push
xor
mov
xor
enter
sbb
sub
in
lcall
jge
dec
xchg
loopne
inc
ss
jnp
mov
xchg
cmpsl
jg
add
mov
pop
jp
jge
or
imul
cltd
mov
push
fadds
push
movsb
push
loope
jmp
push
cltd
popa
int
outsb
xor
push
repz
pop
mov
push
pop
jg
je
lods
xor
adc
rcl
jge
or
add
push
loopne
xchg
fwait
inc
or
inc
fisttps
fucomp
and
inc
insl
push
into
add
pop
sbb
je
mov
sub
ljmp
shrb
stos
xor
add
aaa
outsl
out
orb
push
cli
mov
push
or
addr16
lret
xchg
xchg
xor
sbb
in
cli
dec
xchg
fwait
test
gs
repnz
mov
rclb
mov
mov
push
out
xor
leave
cltd
mov
data16
insb
insb
or
jae
fmuls
mov
mov
jns
outsb
xorl
mov
dec
xchg
cs
push
xchg
lret
sbb
push
gs
out
ljmp
add
inc
ss
fyl2xp1
sub
movsb
jb
ret
push
scas
loop
fs
push
inc
xchg
in
jo
icebp
leave
cmp
ja,pt
stc
loope
adc
ds
jne
js
aad
mov
inc
in
cltd
mov
add
pop
jns
mov
dec
xlat
lds
dec
call
cld
negb
jo
xchg
das
lahf
xchg
rorl
mov
fmuls
mov
push
fpatan
xadd
into
movsl
push
stc
cmc
test
cs
sbb
cmpsb
pop
movsl
cmp
aam
mov
test
imul
scas
lahf
loopne
cmp
jns
test
cmp
clc
andb
pop
cmp
out
fdivrs
lret
mov
xchg
sub
loope
out
inc
scas
ret
xor
sub
sbb
add
jb
cs
jp
or
or
loopne
test
adc
negl
imul
cmp
inc
push
in
fwait
imul
cmp
dec
fdivr
pop
leave
sarb
sub
mov
mov
in
js
push
add
jp
sub
sub
add
sbb
jge
dec
in
out
js
mov
mov
lcall
mov
cltd
stos
cmc
mov
sbb
and
test
pop
fldt
outsb
and
iret
rcrb
lock
mov
sub
lds
mov
stos
sbb
xor
mov
imul
push
fisubl
sbb
xor
push
call
loope
add
push
mov
div
xor
in
xchg
fidivrl
es
and
out
mov
and
es
stos
xor
inc
sbb
mov
push
push
iret
push
push
dec
mov
mov
lret
cmp
inc
lret
mov
aad
lret
push
dec
clc
pushf
mov
cmp
and
aas
xor
mov
xchg
rolb
shrb
scas
test
mov
or
aam
push
in
in
jge
sub
ret
xor
xor
bound
stos
and
cmp
rorb
cmp
cmp
dec
in
mov
sti
jns
scas
fwait
xchg
fs
movsb
sub
push
jns
jo
and
xchg
xchg
sub
std
push
or
fcmovb
icebp
xlat
mov
xlat
test
add
or
inc
sbb
pop
pop
inc
xor
aaa
lret
adc
in
xchg
mov
pop
out
pusha
in
std
out
popf
and
dec
jbe
out
inc
js
repz
mov
pop
sub
int3
shll
dec
je
push
cmp
repnz
push
div
icebp
mov
addr16
push
mov
mulb
add
push
mov
nop
mov
ja
cmpl
leave
sbbb
jge
dec
xor
cmp
dec
mov
stc
cmp
cmp
xchg
inc
adc
push
sbb
mov
mov
push
xchg
xor
outsl
popa
inc
xorb
xor
adc
lods
shrl
push
fs
cmc
push
xchg
cmc
inc
mov
jge
jae
cmp
cs
push
push
and
psraw
lea
loopne
loopne
and
fwait
xchg
inc
jle
xchg
xchg
dec
rclb
mov
insb
jno
mov
daa
push
fsubp
fcom
mov
cmp
jnp
out
negb
or
je
mov
pop
loopne
lret
stos
cmp
sbb
stc
jecxz
jne
or
cltd
out
and
les
ss
sti
ret
and
daa
push
in
dec
icebp
mov
es
rcrl
add
scas
insl
and
jmp
rep
jns
xlat
fldcw
mov
mov
cmpsb
andl
gs
adc
aam
movsb
and
push
ds
xchg
or
mov
xchg
xor
arpl
lcall
in
aaa
xor
mov
add
inc
adc
dec
scas
out
add
imul
int3
out
mov
push
and
daa
push
xor
adc
sub
sti
popf
cmp
pop
lock
loopne
div
int
mov
gs
xchg
mov
std
and
inc
pop
adc
jne
test
lea
sbb
mov
mov
test
or
das
les
xor
push
jle
sbb
cmp
add
clc
mov
ja
mov
push
pop
imul
push
xor
ja
add
push
inc
imul
aas
xchg
mov
test
inc
stos
cmp
roll
inc
in
std
mov
mov
ret
sbbl
add
stos
pop
xlat
es
mov
repz
and
xchg
pop
shll
scas
psubsb
and
inc
in
jp
cmpsb
jb
push
inc
lahf
push
mov
icebp
icebp
fwait
mov
push
je
or
jmp
push
adc
mov
lds
rorl
icebp
and
adc
jnp
and
and
add
mov
jae
fsub
push
std
mov
in
in
adc
outsb
repz
in
jmp
or
dec
imul
jecxz
xlat
roll
adc
dec
lret
call
mov
in
add
mov
jo
pushf
loope
add
sbb
testl
dec
in
stos
ds
and
je
and
data16
mov
adc
cli
dec
in
dec
test
mov
rcrl
mov
int
mov
fdiv
dec
in
cmp
or
sbb
loope
mov
ret
mov
rorl
push
inc
push
stos
adc
push
sbbl
out
adc
cmp
js
lcall
test
fidivrs
push
inc
inc
push
inc
mov
cmpsb
xlat
jmp
loope
in
sbb
cmpsb
xor
xchg
cwtl
stos
lahf
mov
mov
pop
leave
cld
adc
les
lret
ret
aam
ret
addr16
sbb
mov
jno
sahf
xor
mov
and
in
or
pop
data16
xor
add
add
pop
or
push
inc
aaa
pop
mov
mov
sub
push
sbb
call
and
sbb
and
mov
jne
or
sahf
jmp
out
xor
xor
pusha
sbb
push
xor
xor
in
cld
mov
ljmp
mov
stc
push
cmp
movaps
push
pop
xor
test
mov
mov
pop
aam
into
mov
popf
loop
sub
loop
jnp
ljmp
push
in
cltd
dec
or
push
and
lret
jecxz
pop
push
push
or
adc
push
loop
jecxz
xlat
pop
aad
pop
out
test
imul
sub
add
mov
inc
dec
cwtl
mov
mov
cmpb
mov
push
sub
xorb
lock
and
addl
decl
in
dec
mov
outsl
insb
inc
jno
or
test
mov
mov
and
add
shrl
mov
or
mov
psadbw
push
mov
mov
hlt
push
pop
pop
add
inc
sbb
fisubs
jmp
repz
mov
adc
movl
movsl
clc
mov
shl
loop
andb
stc
jp
cmp
sbb
jge
jne
mov
mov
call
sbb
sbb
stos
ds
inc
mov
adc
rcrl
xchg
jle
cltd
add
test
add
orl
fwait
xor
rclb
cmp
scas
dec
xlat
mov
scas
pop
aaa
jae
rclb
notb
lea
and
inc
shrl
inc
in
loop
or
mov
daa
jle
leave
mov
int
lahf
in
nop
push
insl
ja
mov
fcomps
adc
rcrb
jmp
mov
fdivl
mov
rorl
jae
jge
sbbb
mov
notb
sbb
lock
int3
sub
daa
lods
xchg
outsb
lods
push
icebp
in
outsb
sbb
cmp
mov
push
addl
iret
push
mov
ret
jnp
call
stos
repnz
push
mov
and
nop
mov
push
sub
add
ljmp
cmc
test
fildll
nop
push
out
jb
sarb
adc
mov
pop
adc
xchg
jne
addr16
pop
loop
jle
stos
hlt
xor
sti
or
cmpsb
imul
sub
jp
aam
movsl
rolb
fdivs
add
std
jle
pop
push
movsl
lock
cld
js
dec
lret
xor
ljmp
adc
jecxz
lds
in
dec
mov
push
push
add
push
test
dec
testb
and
jl
inc
stos
stos
call
popa
add
fdivr
loopne
sub
ficoms
rol
mov
mov
adc
filds
out
hlt
inc
paddsb
dec
pusha
sbb
imul
mov
iret
iret
ljmp
cmpsl
orb
out
int3
sahf
pusha
es
aas
pop
dec
aaa
iret
enter
lahf
pop
dec
roll
adc
push
jle
aaa
shrb
lock
jge
mov
cmc
imul
push
shll
xchg
inc
pop
mov
push
das
iret
jb
mov
push
inc
push
mov
inc
mov
sbb
test
jge
xchg
test
dec
sub
stos
shr
je
aam
cwtl
cmp
add
mov
push
test
out
pop
mov
rorl
xchg
pop
mov
hlt
cmp
add
xor
lret
xchg
jne
mov
test
pop
shrl
scas
icebp
fwait
cmp
rorl
arpl
xchg
js
mov
ljmp
insl
jno
or
pop
dec
icebp
xor
adc
and
int
cwtl
adc
lods
push
in
add
mov
pusha
int
call
fiadds
jp
mov
sub
xor
xchg
out
bound
cmp
rorb
sub
adc
in
in
and
out
negl
popf
sub
sbb
jb
jle
sbb
ljmp
aad
inc
sub
paddb
inc
sub
push
sub
cmp
push
mov
lock
scas
mov
mov
gs
jge
out
mov
sti
test
xor
test
popa
mov
sbb
adc
jl
inc
in
call
xor
xchg
add
leave
mov
adc
addr16
pop
sahf
mov
mov
add
or
mov
call
mov
pop
or
and
sub
movsl
pop
sar
test
imul
adc
test
mov
xchg
mov
das
mov
jmp
push
mov
aaa
xlat
push
bound
sti
mov
fldt
inc
cmpsl
in
cmp
cmp
mov
inc
mov
ficoml
addb
fidivrs
mov
sbb
mov
adcl
mov
les
and
cmc
dec
xchg
push
add
mov
inc
mov
dec
test
shll
push
mov
imulb
dec
popf
and
push
mov
xor
fidivrl
pop
push
in
jne
lods
add
in
ficomps
ret
test
mov
mov
cmpsb
cmp
sub
and
push
sub
dec
icebp
aaa
and
xor
lea
adc
or
adc
dec
push
test
rcl
pop
adc
test
hlt
pop
test
sub
inc
hlt
add
scas
push
test
mov
sub
or
aad
test
jl
xchg
adc
lock
push
jb
mov
ljmp
rcrb
shr
movb
sub
ss
jne
dec
mov
xchg
in
dec
cmp
insl
xchg
dec
loopnew
aam
jns
sbb
cmc
cmpsl
nopl
out
je
into
dec
push
shlb
mov
cmpsb
push
sbb
push
aad
and
xchg
roll
fwait
xchg
and
mulb
dec
sbb
mov
dec
jp
push
adcb
cli
cmpb
adc
mov
leave
xor
sar
pop
js
in
push
int
mul
lea
stc
imul
bound
ja
or
dec
mov
cmp
daa
mov
outsl
test
sub
dec
jbe
cmpb
out
imul
hlt
adcl
mov
pop
jg
sbb
fildl
scas
push
sti
cld
movsb
jmp
pushf
dec
push
jae,pt
test
xor
jno
fsubp
iret
pop
lahf
int3
in
cmp
adc
mov
mov
ljmp
mov
sub
lods
or
mov
push
in
mov
pop
add
cmp
in
test
test
mov
mov
out
cmp
je
add
jbe
out
int3
pop
and
sub
push
sub
or
push
shrb
lds
bnd
push
cmp
hlt
sbb
stos
sbbl
pop
jbe
mov
shrb
inc
pop
xchg
fstpt
xor
or
mov
sahf
xlat
nop
cmpl
arpl
shl
dec
add
imul
scas
insb
mov
out
enter
xchg
aam
pop
in
pop
dec
pop
cmp
adc
mov
ljmp
in
sub
lock
add
xchg
jp
inc
mov
call
adc
fiaddl
inc
gs
mov
add
jp
pop
sbb
pushf
lahf
scas
jp
adc
jecxz
jl
xchg
push
fwait
mov
mov
cmp
rcrb
mov
out
mov
adcl
loopne
jle
popl
jne
orl
aad
xor
movsb
add
pop
lret
js
stos
jae
sbb
repz
out
mov
sbb
stos
lahf
jle
call
or
sub
cmp
test
rorb
test
push
outsb
mov
adc
or
in
loope
sbb
js
shll
stos
xchg
dec
arpl
shrd
mov
clc
lods
stc
xchg
mov
xchg
cmp
cmp
add
shr
push
adc
xchg
loopew
xchg
xor
inc
dec
fiadds
call
xchg
stos
mov
lahf
addb
and
xor
loop
xlat
loopne
ljmp
jecxz
inc
or
out
or
les
cs
cltd
mov
stc
movb
popa
je
pushf
lock
dec
sub
dec
repnz
pop
inc
cmp
ret
das
or
pop
int
jecxz
or
stos
inc
loop
adc
lret
jmp
mov
sub
lock
outsb
movsb
ds
xchg
inc
aas
test
cmp
arpl
mov
cmc
cmp
les
mov
push
les
fnsave
lods
mov
push
sub
or
pop
fildll
sbb
ret
push
int3
lea
ret
popf
cli
lcall
test
xchg
popl
adc
push
push
push
test
and
addr16
mov
add
and
adc
out
mov
xor
je
and
jae
mov
cmpsb
cmp
mov
arpl
mov
fstpt
pop
xor
pop
jns
mov
test
xor
shll
outsl
add
or
rcrb
mov
js
stc
dec
cld
loop
jae
fistl
fldenv
lcall
movsb
push
sahf
fiadds
jecxz
push
or
inc
inc
push
scas
and
adc
mov
sub
notb
outsb
pop
loope
or
cltd
jns
mov
mov
jge
cmp
lcall
lea
ret
and
sahf
xchg
push
inc
loop
cmp
cld
adc
cmp
mov
jne
jns
stc
mov
jl
popf
fisttpl
xor
rcll
std
push
iret
xchg
cmpl
fimuls
inc
rcrl
int
mov
loope
stos
pop
movsl
push
push
mov
negb
push
aas
xor
out
or
push
or
cli
add
arpl
cmp
fdivl
xchg
jmp
mov
mov
or
or
xorl
xchg
push
and
rolb
push
jno
sbb
jecxz
movsb
fisttpl
adc
stos
mov
cwtl
clc
dec
in
sbb
ljmp
push
fstpl
jecxz
lcall
pop
xor
mov
outsl
mov
push
sub
jne
cmp
mov
mov
sbb
dec
pop
mov
int
shrb
insb
xor
in
loop
jbe
push
cmp
mov
lock
out
mov
or
pop
imul
cli
pop
popa
in
jmp
pop
gs
addl
icebp
pop
jbe
jae
jnp
cmp
popa
enter
dec
es
fbld
inc
add
inc
mov
mov
fdivrs
push
mov
neg
les
mov
mov
dec
dec
pushf
cld
negl
mov
stc
adc
pop
sbb
mov
jp
xchg
popf
in
out
into
mov
pop
testl
test
movsb
push
test
push
mov
int3
mov
mov
sbb
repz
fwait
jl
rcr
inc
clc
mov
and
ret
jo
out
les
and
aas
mov
jnp
push
ret
popa
inc
sbbl
aam
into
jp
in
pusha
leave
cwtl
imul
ds
mov
rolb
jp
cli
cli
sbb
aaa
and
cmp
adc
xchg
mov
adc
mov
sub
int
inc
nop
mov
ss
psubusb
out
ds
mov
mov
mov
cli
popf
aaa
xchg
adc
gs
aad
adc
test
fildll
mov
das
xchg
in
inc
stos
pop
je
xchg
scas
xchg
dec
sub
mov
in
lods
jp
push
mov
idivl
into
pop
addb
mov
les
cmp
inc
rolb
das
ss
mov
iret
inc
lret
fwait
cmc
dec
stos
mov
jmp
mov
mov
xchg
ret
dec
fucomi
xor
lds
out
push
fs
loopne
and
pop
lea
or
dec
jl
jle
out
lods
jl
addr16
mov
fisttpll
cmp
icebp
int3
pop
pop
push
shlb
jb
mov
lods
ficoml
bound
jnp
pop
push
fcmovbe
popa
or
hlt
jle
out
lcall
sub
das
iret
xchg
js
mov
jae
popa
dec
sbb
test
xor
xor
pusha
daa
and
adc
adc
cmp
mov
daa
xchg
pushf
nop
inc
jns
xchg
mov
iret
mov
aaa
sti
xchg
jno
cli
xchg
in
lcall
jg
dec
in
stc
outsl
xchg
je
push
ja
dec
lret
daa
xchg
in
mov
xchg
cmp
repnz
and
pop
fsubrl
daa
sub
jecxz
jne
jne
imulb
push
fldl
daa
fwait
jge
das
cli
mov
lea
nop
jl
or
fstps
ljmp
mov
jb
insl
inc
xorb
pop
fmuls
adc
inc
pop
mov
and
dec
popf
lahf
flds
es
fiadds
mul
jb
xchg
adc
and
repnz
popa
add
push
lds
pop
cmp
cltd
pop
mov
adc
ss
fwait
hlt
and
xchg
jecxz
popa
mov
movsb
dec
fbstp
pop
xor
push
in
sub
and
sub
dec
mov
sub
icebp
fstps
jo
lret
mov
jl
enter
das
or
jb
inc
rcr
ljmp
movsl
push
xchg
pop
imul
jae
xor
lea
lcall
or
loop
xchg
xor
lock
push
addr16
mov
cwtl
sbb
dec
lea
push
pop
mov
jbe
frstor
jbe
xchg
lods
popf
sbb
jp
mov
pop
stos
jp
fwait
ljmp
or
and
dec
push
int3
mov
pop
jecxz
sbb
imulb
adc
fcmovu
push
mov
mov
dec
stos
push
mov
cwtl
cmpsl
push
push
fidivl
mov
and
mov
xchg
dec
in
stos
popf
mov
or
dec
inc
add
lahf
mov
fmuls
add
mov
or
fsubs
stos
push
cmp
inc
dec
inc
in
cmp
inc
das
push
mov
dec
sub
push
cltd
jo
shlb
test
test
mov
rep
cmc
pop
cmc
cmp
movsb
add
out
ficomps
cltd
popa
shl
fildl
mov
shrl
cmp
jge
ss
mov
pop
xor
inc
dec
push
rcll
jns
xchg
add
jle
cmp
ss
or
inc
adc
sahf
pop
dec
dec
inc
adc
dec
scas
mov
mov
sysret
jmp
jno
jbe
mov
cmc
push
hlt
sbb
inc
rcll
inc
mov
loope
jle
xlat
and
lahf
pop
mov
idivl
mov
addr16
dec
notl
shrb
cwtl
int
dec
inc
data16
lcall
push
dec
arpl
mov
pop
movsb
mov
jb
daa
out
pushl
in
sahf
mov
dec
or
mov
sti
mov
or
dec
shll
inc
sbb
movsl
xor
insb
mov
aaa
out
jg
adc
decb
pop
movl
rcll
test
mov
lock
push
rorb
or
mov
loop
enter
data16
dec
cltd
cmc
mov
sahf
jne
sbbb
jmp
pand
pushf
ret
and
and
add
int3
ljmp
popf
call
dec
imul
sbb
pop
cmp
fidivs
hlt
cmp
test
mov
enter
mov
mov
clc
inc
ja
mov
add
scas
aaa
in
adc
jb
push
lret
sub
xchg
mov
dec
push
call
ljmp
xchg
inc
mov
and
fistpll
movsl
sbb
in
pop
mov
cmp
std
cmp
mov
add
js
je
push
mov
jle
mov
mov
dec
mov
fstl
sahf
cmp
cmc
inc
into
xchg
aaa
xor
jmp
or
jbe
sub
xchg
ret
lcall
out
or
pop
push
mov
pop
dec
mov
clc
cli
sbb
mov
xor
mov
adcb
xchg
add
or
loopne
jae
add
ret
imul
call
inc
xchg
cwtl
add
sub
jecxz
arpl
lret
cltd
inc
push
and
push
clc
ljmp
nop
jp
xor
mull
fmuls
es
sub
jmp
icebp
mov
mov
cld
adc
stos
outsl
or
jns
mov
and
dec
fbstp
out
push
xchg
scas
jns
adc
insb
out
sbb
and
sbb
jae
sbb
std
sub
lcall
loope
ss
sub
mov
dec
xor
aad
xor
sub
rcrl
inc
andl
push
das
ja
sbbl
test
or
fists
cs
lret
cmp
xchg
cmp
popf
lods
arpl
sahf
ror
in
sub
enter
and
mov
cmc
dec
push
imul
mov
add
lock
fdivl
inc
sbbb
or
push
pop
das
and
dec
mov
or
inc
mov
aas
cltd
out
xor
pop
add
pop
daa
pushf
sub
inc
dec
and
pop
imul
inc
icebp
adc
sbbl
je
popf
jns
xchg
ror
cmp
jno
or
scas
inc
stc
sbb
adc
xchg
data16
mov
xor
int3
stos
push
in
jmp
dec
pop
aaa
call
push
pop
mov
push
addr16
add
add
in
pop
faddl
add
xor
sti
repnz
inc
rcrb
aas
push
popf
cmp
lock
or
jmp
sub
jns
push
popf
mov
xor
in
in
test
movsl
push
aaa
inc
inc
cld
push
xlat
mov
cmp
adc
ss
pop
pop
pop
into
sub
inc
cld
xchg
pusha
jp
pusha
ljmp
stos
movsb
xor
jge
add
lock
sarl
in
xor
insl
imul
jno
arpl
push
push
mov
lods
loop
mov
cmp
test
ja
inc
mov
fs
lods
outsb
xor
enter
les
lock
mov
and
dec
ret
sub
xchg
loop
lahf
into
jnp
cmpsb
pusha
loop
mov
mov
bound
push
dec
cmpsl
subl
or
jmp
adc
stc
sbb
dec
icebp
and
jge
dec
or
cwtl
sbb
xchg
pop
jnp
pusha
aam
xchg
outsl
and
repnz
push
or
push
pop
mov
jb
ljmp
mov
jecxz
hlt
outsb
fcmovnb
addr16
and
sbb
ret
scas
mov
xchg
mov
movsl
adc
pop
pop
hlt
mov
sbb
mov
dec
fcoml
cwtl
cld
mov
jecxz
daa
pop
sbb
xor
xor
inc
loopne
jbe
ret
mov
or
and
inc
cmp
in
es
cmc
movsl
xchg
sbb
pop
popf
fmull
jp
cmc
jnp
cld
lret
or
adc
clc
fldt
aaa
xor
clc
outsl
mov
adc
shrb
mov
lret
pop
xlat
pushf
dec
xchg
or
fwait
outsb
movsb
push
arpl
js
sbb
andb
leave
mov
and
and
add
lods
push
lods
xchg
cmp
sub
call
stos
fbld
inc
pop
fimull
cmp
adc
or
out
mov
aad
cmpsb
and
arpl
mov
scas
pop
mov
cli
or
adc
fisubs
loop
aam
cmp
rcl
test
mov
out
and
fldcw
sub
push
out
add
or
jns
jo
mov
lods
or
or
xor
xchg
mov
jecxz
lods
xchg
lds
pusha
insl
aad
mov
stos
push
and
cs
pop
frstor
cli
insb
mov
jae
bound
adc
dec
pop
sub
sbb
jp
inc
mov
mov
cmc
mov
xchg
mov
mov
pop
and
xchg
mov
mov
jne
xorb
push
ljmp
pusha
aad
repnz
xchg
cmpsb
mov
or
fcomip
test
mov
nop
outsl
push
pop
mov
xchg
push
jo
mov
imul
lock
movsl
fidivs
leave
mov
fwait
mov
jns
bound
pop
pop
cmpsl
fcomp
test
jl
jp
in
mov
xor
mov
mov
mulw
inc
inc
sub
mov
inc
mov
aas
stos
mov
push
std
loopne
inc
lret
mov
mov
int3
push
xor
mov
out
aad
lret
movsl
in
sbb
pop
ljmp
push
sbb
cwtl
cmp
test
sub
xchg
mov
pop
cmpsl
pop
mov
shr
repnz
xor
jo
add
aas
sub
sub
into
shl
jmp
outsb
test
pop
cmp
fcmovbe
iret
sbb
push
in
jl
pop
cmp
out
xchg
movsl
mov
mov
outsb
mov
out
repz
xor
ret
sub
das
leave
in
out
adc
aad
test
je
rcrl
dec
out
jne
call
out
mov
cmp
pushf
jmp
cmp
jle
negl
mov
fldenv
dec
repnz
adc
fs
aaa
cmp
lods
iret
sbb
xlat
loop
and
pop
xchg
clc
testb
and
mov
xor
loopne
mov
leave
cltd
out
pop
pop
dec
bound
dec
ljmp
inc
pop
testb
jg
mov
push
xchg
dec
int
adc
cmpb
dec
out
jnp
adc
xchg
jl
mov
iret
jl
fstl
lods
rolb
jp
ds
cmpsl
dec
fwait
outsb
mov
out
pusha
pop
lea
test
dec
scas
sbb
lods
push
repnz
and
scas
test
outsb
push
mov
push
dec
sub
add
mov
stos
movsb
test
sub
jne
pop
shlb
outsl
or
adc
xor
dec
subl
sbb
pop
cwtl
mov
lock
cmc
jbe
pushf
dec
leave
leave
arpl
or
cs
movsb
test
rorb
dec
dec
cmc
in
and
xchg
in
xor
lods
push
xchg
cmpsb
iret
xchg
mov
pop
push
inc
shr
adc
mov
out
enter
push
mov
jns
mov
dec
mov
into
add
loope
sarl
jns
push
jecxz
and
fcoms
dec
jns
call
pop
arpl
mov
lcall
xchg
cmp
adc
cld
pusha
dec
aam
loope
xor
jmp
pushf
cli
jno
fucom
ror
addr16
jnp
fisubrl
insl
fxch
shll
inc
les
adc
add
lods
xor
jg
push
sub
jns
mov
and
rcr
jno
cmp
sbbl
pop
jecxz
adc
inc
and
outsb
mov
mov
lret
sub
movsb
adc
cmp
push
adc
stc
pop
mov
hlt
xchg
arpl
mov
cmpsb
xchg
jl
ds
mov
inc
push
or
mov
popf
ljmp
ret
ss
dec
mov
dec
mov
mov
nop
lahf
ljmp
sbb
sti
dec
or
cmp
inc
mov
stos
arpl
dec
push
mov
imul
pop
push
insl
push
xor
or
int3
pop
call
lea
pop
cmpsl
clc
sub
push
dec
lcall
mov
dec
outsl
push
jecxz
mov
loop
in
cli
nop
popa
out
xchg
xchg
fwait
dec
or
ret
mov
lret
xchg
std
add
add
scas
fdivl
in
mov
cmp
sub
fstps
repnz
mov
mov
jl
ja
insl
cmp
sub
and
fmulp
sbbb
inc
in
pushl
pop
adc
test
adc
sarl
std
scas
test
mov
in
and
lods
cmpsb
mov
adc
or
enter
push
daa
lods
push
push
jne
push
xchg
mov
adc
shlb
push
inc
pop
fcom
cmp
fadds
sub
loopne
lock
out
iret
into
ror
jae
incl
pop
mov
xchg
fdivrl
jle
and
aaa
inc
stos
test
out
lock
mov
imul
idivl
outsl
xchg
insb
nop
inc
leave
and
mov
or
outsl
mov
mov
adc
scas
cltd
lds
andl
aam
mov
test
rcrl
stc
pop
je
mov
jae
in
cs
add
sub
frstor
mov
in
ss
xor
or
fdivrl
rcr
loopne
sti
mov
push
adc
pop
iret
adcb
mov
mov
arpl
hlt
imul
cwtl
fisttpll
fistps
dec
xor
sti
int
pop
scas
rcrb
cltd
test
dec
xchg
add
or
lods
lds
mov
bound
jmp
int3
and
jle
aaa
inc
aam
shlb
jb
add
adc
mov
mov
wbinvd
mov
jae
stos
in
mov
sbb
lock
sbb
fldt
adc
jno
push
popf
in
pop
push
or
push
ljmp
sbb
mov
adc
mov
cli
xlat
cmp
xor
xchg
lods
mov
imul
sti
dec
sbbb
nop
loopne
rclb
xchg
and
xchg
les
pop
das
pop
cmpsl
out
icebp
or
mov
stos
fiaddl
fisubrs
sti
sub
cmp
lret
out
sub
cld
outsb
cltd
ja
arpl
push
sub
xor
xor
xchg
aad
cmp
inc
shll
pushf
lcall
sub
rcl
subl
in
mov
pop
mov
aam
jmp
jne
inc
popw
pusha
out
pop
mov
mov
out
inc
je
mov
punpckhdq
push
fistpl
add
addr16
testl
cmp
pop
mov
inc
or
inc
mov
cmpsb
nop
dec
incl
test
stc
pop
int
fisttpll
cmp
pop
js
sbb
ret
lret
xchg
cmp
arpl
jae
movsb
xchg
dec
add
enter
ss
mov
ja
or
mov
jns
je
lahf
mov
lock
push
mov
out
sbb
cmp
popa
sub
inc
mov
pop
fdivs
inc
repz
mov
dec
sarl
mov
repz
aaa
mov
xchg
xor
dec
jne
push
adc
lds
mov
dec
ljmp
pop
add
push
cli
shlb
fcoms
jbe
jge
pop
cmp
jmp
or
cmp
repnz
xchg
xor
xor
std
xchg
cltd
jo
fimuls
pop
out
add
pushf
in
xchg
xor
pop
stos
sti
iret
xchg
je
lret
jp
jecxz
cmpsl
test
outsl
dec
xchg
xor
add
enter
push
es
sub
mov
negb
mov
sarl
jae
push
divps
jno
dec
lock
test
xchg
fucomp
lret
xchg
dec
lds
leave
pop
imul
jnp
out
insb
cmpsb
inc
fcomps
adc
mov
lea
mov
addr16
outsl
int
xchg
in
test
out
std
jns
jbe
xchg
jmp
mov
mov
mov
movsb
sub
add
xor
aas
ljmp
lds
or
mov
push
pop
rol
cmp
cld
ljmp
sbb
or
cld
mov
sbb
jl
jmp
inc
mov
fldenv
push
roll
jle
xor
movsl
add
cmp
jbe
mov
mov
pop
dec
iret
loope
mov
test
mov
and
or
pop
push
mov
loop
mov
stc
fstl
push
mov
stos
mov
out
jne
adc
fcmovbe
add
dec
fiadds
jg
inc
rcrl
jne
push
icebp
hlt
or
pop
adc
leave
mov
out
mov
push
into
xchg
call
mov
sarl
gs
xchg
call
or
sbb
adc
inc
insl
call
mov
int3
cwtl
out
push
out
dec
leave
aas
and
jns
fdivs
cmp
insb
outsb
pop
fstpl
mov
inc
xchg
lods
push
js
mov
mov
lret
loope
jae
mov
push
cmpsl
push
pop
jb
xchg
cs
jnp
mov
cli
sbb
push
inc
lahf
pop
sub
push
adc
cmp
jns
sub
cwtl
ja
jbe
sub
cmpb
shrb
mov
jl
xor
inc
inc
pop
arpl
sbb
pop
les
mov
mov
leave
and
jne
mov
push
adcl
imul
xchg
fs
sub
xor
pop
out
or
lods
loopne
shlb
sbb
mov
dec
cmp
dec
sub
jno
hlt
xchg
jae
inc
jnp
inc
lods
jmp
push
mov
xor
shrl
les
aaa
xchg
mul
jmp
loopne
xor
bnd
fdivrs
push
jne
sub
inc
xchg
movsl
or
sbb
repz
stos
xlat
repz
popa
out
in
clc
push
push
adc
ss
xor
pushf
outsb
sbb
pop
mov
gs
mov
push
testb
daa
ret
mov
xor
xor
aas
cs
adc
lret
pop
mov
daa
das
iret
out
mov
sbb
and
cmc
xchg
cmp
out
adc
in
call
nopl
cwtl
sub
push
xchg
gs
test
mov
fisttps
clc
rcl
mov
scas
sbb
movsl
dec
test
cmpsb
test
cmp
mov
and
xchg
lods
lcall
inc
pop
call
push
daa
xlat
or
int
mov
inc
push
repz
push
cmp
mov
movsb
lds
push
inc
test
mov
int3
inc
cmp
sub
incb
lea
ja
cmp
fcmovb
leave
jmp
sahf
mov
cmp
push
pop
hlt
pop
stos
fsubrl
push
mov
test
mov
int3
andb
xor
insl
into
dec
mov
mov
jge
jge
sub
xchg
movsb
and
sub
pop
adc
dec
add
mov
push
push
repnz
fstpt
sbb
out
gs
xchg
and
mov
lock
pop
loopne
ss
add
repz
mov
add
ljmp
push
jp
inc
push
imul
jl
cmp
add
mov
xor
adc
iret
rcrl
fiadds
sbb
mov
sub
clc
fs
fmul
and
xor
rcrw
push
lret
cwtl
push
cs
mov
sbb
xchg
dec
xchg
xchg
dec
inc
lret
xchg
mov
xor
xchg
cmp
int3
push
pop
fcomps
popf
rdpmc
arpl
xor
xor
add
insl
dec
lods
ret
sbb
mov
mov
je
stos
mov
cmp
fisubl
xor
stc
add
fmull
fs
cmpsl
push
lret
xchg
sub
and
sbb
loope
fs
push
pandn
out
fst
fs
stos
jmp
adc
cmp
xchg
imul
mov
add
sti
dec
inc
sub
xor
fldt
gs
mov
pop
mov
data16
xchg
xchg
mov
sbb
xchg
imul
mov
sbb
fdivs
dec
dec
and
dec
dec
cli
sahf
sbb
add
dec
mov
pop
and
int3
and
out
sti
inc
adc
popf
jnp
jno
or
shrl
shlb
cmpsl
cli
push
or
pop
dec
jo
mov
int3
xor
mov
sub
stos
ja
push
lock
rorb
xor
inc
adc
enter
inc
jmp
cltd
lock
lret
jle
and
or
mov
inc
filds
das
or
repz
pop
aas
out
mov
push
pop
rolb
xor
dec
roll
addr16
outsb
in
pop
dec
or
rorb
insl
adc
inc
jb
jp
ficoms
adc
cmc
xchg
dec
dec
xor
daa
mov
movsl
fwait
call
lcall
loope
sbb
into
add
push
test
and
sub
add
xor
test
bound
repnz
jle
sbb
adc
iret
dec
sti
xor
repz
inc
loope
insb
in
sub
dec
dec
call
jbe
popaw
movsb
jmp
cmp
fs
leave
push
les
in
out
ds
fimull
ljmp
inc
imul
adc
fnstenv
adc
ds
mov
sub
sti
insb
pop
cmp
fnstcw
leave
cmp
test
fsubs
pop
ja
dec
xchg
dec
loope
ljmp
sub
xor
xor
xchg
add
push
cld
mov
mov
out
repz
jo
pop
xor
sti
daa
dec
dec
mov
outsl
lods
sub
lock
repz
test
dec
cmc
pop
xor
stc
and
jecxz
cmp
inc
jns
inc
xchg
adc
scas
pavgw
sub
out
adc
jns
mov
ljmp
mov
movsl
cmp
and
pushf
cmc
fiaddl
pop
or
pop
movsb
pushf
inc
sti
push
or
or
jae
pop
xchg
mov
inc
das
xor
dec
lcall
outsb
pop
push
pop
pop
pop
aas
scas
sbb
jmp
lods
nop
xor
in
les
in
adc
je
enter
sub
pop
inc
fdiv
and
mov
daa
xlat
cmpsl
sbb
jge
xchg
inc
lea
mov
mov
cmpsb
cmp
cmp
adc
jb
inc
shrl
aaa
xlat
fwait
mov
mov
mov
cli
xor
mov
xor
push
out
lret
sahf
pop
mov
sbb
std
sbb
add
push
bound
add
adc
jae
test
std
insb
xchg
xor
iret
xor
movsl
mov
out
imul
xor
xchg
in
mov
dec
aas
js
lock
mov
mov
pop
add
xchg
hlt
inc
daa
shl
pop
push
xchg
js
rol
ror
jg
xor
sbb
xor
push
or
inc
daa
mov
sbb
ret
shll
and
out
mov
xchg
mov
test
mov
nop
fs
int3
stos
lret
pop
adc
imul
aad
xor
iret
arpl
mov
adc
stos
push
add
sbb
shlb
sbb
sti
mov
cmpsb
sub
jg
jno
arpl
lret
shr
sbb
and
push
sub
jae
mov
push
cwtl
aaa
xchg
jnp
adc
add
pop
stc
hlt
pop
jge
jmp
push
clc
push
cli
nop
adcb
sub
popf
scas
int
xor
sub
sahf
inc
rcrb
ret
rcrb
mov
dec
nop
mov
ljmp
lcall
pop
push
jo
pop
xchg
out
inc
xlat
aas
xchg
cld
jp
pop
sbb
scas
jno
movsb
mov
mov
cmp
adc
and
fs
xorl
and
cs
mov
mov
pop
cmp
cmpsl
xchg
push
mov
xor
out
and
jge
lods
sbb
loop
outsb
mov
cmc
insl
loope
cmp
pusha
int
sub
jl
fwait
lahf
mov
xchg
push
jo
jbe
clc
jmp
xchg
bound
nop
jmp
imulb
inc
mov
jmp
lods
in
mov
push
repnz
clc
jmp
adc
add
adc
push
sbb
pusha
xchg
into
xor
test
push
cmp
aas
ss
xchg
inc
mov
out
jo
mov
cltd
jge
cmc
test
inc
xchg
inc
in
and
mov
jecxz
add
mov
out
je
std
jbe
cli
lds
std
inc
jae
testb
hlt
repnz
xchg
cld
mov
jnp
push
scas
jns
inc
fidivrs
cmp
sbb
push
mov
scas
dec
dec
sbb
jo
mov
lret
inc
dec
cmp
jo
stc
lods
jns
insl
and
push
imul
cld
and
pop
cmp
or
iret
xor
jo
mov
inc
popa
pop
push
std
shlb
or
push
enter
sbb
test
pop
adc
dec
inc
fnstenv
push
jmp
push
aaa
out
pop
imul
xor
jne
out
ds
aas
scas
pop
sub
jecxz
jns
sbb
shlb
pop
ljmp
adc
xor
testl
bound
fdivrl
xchg
int
push
pop
jae
mov
inc
idiv
jge
outsb
cltd
fcomip
xchg
xor
xor
add
add
clc
outsl
xchg
movsl
push
jmp
js
and
cmp
push
lods
cmp
xor
fisubs
cmp
pop
mov
dec
inc
mov
leave
or
int
dec
lcall
inc
jmp
mov
dec
add
xor
loop
stc
aam
scas
xorb
pop
cmp
mov
add
dec
push
into
mov
pop
pop
idivl
movsl
int
lods
pop
in
scas
out
push
inc
cs
and
jle
mov
mov
dec
and
add
pusha
or
sub
pop
jg
pop
cmp
and
pop
mov
mov
xor
jge
mov
sub
adc
inc
mov
mov
int
jp
pop
push
cld
aad
inc
js
push
sbb
aas
cwtl
pusha
cltd
mov
adc
or
push
and
leave
cli
imul
fstpt
pop
sub
je
mov
jecxz
cmp
xchg
inc
mov
dec
adc
andb
push
push
out
jg
loope
or
loop
cwtl
push
bswap
cwtl
rolb
mov
pop
repnz
or
cmp
movsb
lcall
pop
in
inc
mov
cmp
lock
mov
ds
push
jno
aad
dec
ret
aas
out
stos
adc
and
dec
push
mov
xor
jns
inc
mov
and
inc
jmp
pop
add
lahf
mov
push
jnp
sub
scas
xor
cmp
ja
inc
aas
cmp
cmp
out
dec
fwait
mov
fisubs
fists
leave
das
add
xchg
sbb
or
push
sub
adc
xchg
add
rclb
mov
mov
lock
sub
stc
push
mov
cmp
or
pop
shrl
lods
or
idivl
hlt
scas
mov
sbb
mov
or
push
test
or
pop
popf
inc
scas
push
pop
push
cmc
outsb
add
mov
dec
dec
inc
rcrb
xor
cmpsl
lea
xor
lds
xor
inc
or
and
jne
sti
popf
mov
fidivl
and
fcoml
stos
push
lods
call
cmpsb
mov
aas
push
xchg
or
testb
sbb
add
push
out
movsl
mov
icebp
sbb
out
mov
lcall
mov
xchg
xchg
cmpsb
mov
testb
scas
psrlw
dec
iret
ror
cmp
loope
cwtl
xor
inc
mov
pusha
arpl
shll
push
fsubrs
push
xor
nop
xchg
int3
adc
xor
cmp
lock
inc
call
xchg
pushf
xor
lahf
fwait
mov
test
inc
popa
mov
jnp
mov
mov
mov
ficomps
push
and
data16
jmp
fcoms
jecxz
xchg
fimull
push
clc
lods
jae
pop
fisttps
or
sub
das
aam
test
jmp
in
out
shr
mov
mov
xor
fdivrs
push
ret
xor
mov
and
sub
movsl
and
inc
add
aad
add
xor
lock
leave
mov
clc
adc
fxch
pushf
mov
sbb
in
std
or
out
dec
cmp
cmp
pop
cmp
push
jmp
adc
and
mov
popa
and
sbb
adcl
repnz
and
sti
nop
cmp
or
lret
hlt
and
sbb
pop
fisubrl
push
dec
stos
pop
push
into
cmp
xlat
gs
icebp
cmpb
nop
sbb
inc
sub
add
popf
add
ds
adc
rcll
imul
xchg
inc
adc
jne
icebp
jg
mov
enter
sbb
and
dec
lcall
cmpsb
sbb
dec
lods
push
push
sub
dec
in
jns
lret
imul
dec
cmpb
push
and
repnz
lcall
cmpsb
cmp
adc
pop
xchg
aaa
jb
xchg
pusha
out
and
fdivrl
or
bound
loop
lahf
add
lret
loopne
xchg
lds
into
pop
stos
pushf
outsb
cmpsl
inc
xchg
ret
xor
or
aad
push
xor
cs
xchg
lcall
ficoms
push
js
push
adc
pop
cmp
sub
lock
insb
sub
ja
sbb
dec
lods
lods
pop
dec
dec
mov
shrl
popf
addb
cli
adcl
cmp
stos
mov
stc
inc
mov
das
sbb
enter
pop
dec
into
push
mov
test
loopne
pop
and
mov
xor
adc
push
xlat
in
lds
adc
inc
test
xrelease
fs
pop
cmp
dec
mov
cmp
test
inc
or
movsb
push
push
arpl
popa
inc
xlat
adcl
jle
into
out
pop
xor
fldl
mov
pop
dec
cs
jbe
xor
mov
test
pop
push
or
cmc
xor
gs
lods
push
lret
bndstx
adc
xor
fnsave
push
pop
dec
pusha
test
lds
xchg
pop
pop
jge
lods
and
push
ficoml
cmp
int
cmp
mov
xchg
lcall
cmpb
and
and
push
scas
push
sbb
or
ret
mov
add
insl
hlt
cli
add
cmp
scas
scas
lods
jp
out
xchg
test
mov
int3
loope
or
loop
test
insl
ja
setbe
mov
sub
dec
les
fcmovnbe
outsb
push
and
loope
lds
push
lret
dec
and
push
data16
test
xchg
ds
fsubr
cmp
sub
aam
mov
out
clc
pop
fdivl
lahf
or
and
inc
mov
xor
inc
add
inc
in
jecxz
jnp
fildll
jae
sbb
cmp
adc
rolb
and
rol
mov
adc
test
int3
or
push
push
daa
mov
lret
movsb
insb
sbbl
mov
mov
pop
inc
cmp
mov
test
mov
xchg
jmp
lret
pop
scas
inc
cmp
inc
mov
fwait
sarl
addr16
in
push
jmp
xor
clc
movsb
mov
das
and
aas
lds
fisubrs
fs
fsubrp
shr
inc
iret
cmpsl
push
xchg
cmp
shrb
adc
rorb
adc
mov
jnp
or
pop
dec
push
rcrb
add
dec
popf
pusha
dec
push
push
xchg
dec
lock
xchg
inc
cs
pop
mov
jg
mov
pop
int3
ss
in
adc
add
add
cmp
inc
dec
iret
xchg
add
push
scas
inc
popf
je
cmpsl
push
aad
xchg
jg
xor
dec
enter
decb
jb
adc
cli
push
pop
adc
hlt
inc
dec
lods
les
lds
mov
fincstp
push
imul
push
push
inc
push
mov
dec
jp
loop
mov
mov
out
jnp
pop
daa
push
rcrb
mov
mulb
dec
add
mov
inc
sub
pop
mov
cmp
or
xor
or
jl
sbb
xorb
xchg
jmp
xorl
es
lds
scas
sbb
push
mov
lea
dec
adc
outsb
lock
andl
outsb
ret
cli
add
das
lret
sub
push
sbb
cmp
decl
push
sub
andb
test
fs
pop
cmp
popf
jnp
leave
add
mov
jno
fisubrl
add
jae
jmp
push
movsl
imul
ror
fldl
pop
imul
jo
lea
fwait
lret
cli
jp
movsb
pop
leave
adc
popf
enter
jge
rolb
cmc
or
pop
lret
stos
fwait
mov
es
sub
jle
mov
inc
in
or
lods
sti
fnstsw
push
je
loopne
aam
push
cmovb
push
movsb
out
push
pusha
xchg
jmp
adc
dec
jle
mov
cmp
pop
jg
cmc
push
pop
addb
jbe
in
xchg
arpl
inc
push
sbb
rorl
scas
mov
out
sub
imul
cmp
or
push
push
ja
add
insb
rcll
clc
mov
lahf
shl
pop
repz
icebp
aam
movsl
cmp
mov
mov
pusha
loopne
push
mov
cmp
and
pushf
mov
fcoml
mov
xchg
inc
mov
movsb
lods
jnp
stos
outsl
mov
insl
mov
ljmp
enter
xor
mov
or
lret
jo
push
inc
bound
mov
inc
ret
test
pop
mov
rolb
or
cmp
je
cwtl
loope
or
incl
inc
cmpsb
call
out
test
xlat
dec
dec
mov
ret
or
test
fsub
mov
movsb
mov
gs
call
mov
push
lahf
dec
insl
out
popa
andl
ret
stos
add
nop
or
jne
inc
fisttps
inc
mov
adc
fbld
xor
xchg
insb
outsb
mov
sub
js
dec
repnz
jl
mov
insb
shrl
lods
pop
push
cmp
cld
mov
in
jmp
dec
leave
xor
jbe
push
icebp
push
add
mov
rcll
in
cmp
and
fcmovnbe
inc
xchg
roll
cmpb
xlat
mov
jae
mov
push
jge
and
add
fs
dec
test
aas
in
cmp
add
jae
dec
cwtl
mov
sbb
stc
mov
mov
dec
cltd
outsb
pusha
mov
adc
pushf
fisubl
add
xchg
jnp
out
stc
mov
fdivr
lock
addr16
adc
add
mov
loopne
jnp
lcall
aam
add
cmp
inc
cmc
dec
testl
sahf
std
jbe
push
jp
cld
push
shll
outsb
jnp
repnz
and
xor
fcmovnu
cltd
push
outsl
inc
push
sbb
ds
inc
outsb
repz
cltd
push
sbb
in
xchg
addr16
mov
pushf
jge
mov
jne
outsl
and
pop
and
je
insl
cld
in
pop
cmp
pop
jg
insb
pop
xchg
cmp
mov
sbb
ret
fdivrl
dec
jmp
xchg
pop
pop
mov
mov
pop
fadd
fidivrs
xchg
cmpsl
loop
addr16
add
mov
ret
pop
out
or
idiv
aaa
test
into
dec
imul
bound
fld
stos
or
pavgb
movsb
in
shr
repz
xor
in
inc
add
loopne
mov
add
mov
pop
cmp
adc
popf
scas
cwtl
jno
addl
cld
add
mov
out
add
scas
add
or
xor
iret
enter
and
sbb
into
dec
sub
int
imul
mov
pop
stos
rclb
mov
cltd
fldl
add
pop
repz
ljmp
mov
stc
pop
inc
shlb
jne
mov
lea
mov
lods
loop
lret
rorl
inc
cmp
mov
mov
mov
mov
cli
fld
or
std
xchg
jae
stc
pop
andl
aad
cmc
incb
inc
push
push
in
sub
inc
pop
jecxz
mov
cwtl
sbb
imul
lea
xor
mov
push
flds
xor
mov
adcl
push
push
pop
adc
or
stos
mov
stc
ljmp
mov
and
ss
push
push
add
cs
lock
outsb
pop
push
jne
or
mov
inc
jmp
inc
fldt
fisttpl
push
jg
adc
loop
neg
sbb
dec
pop
jg
cmp
jge
js
jle
sub
sub
pusha
pop
sbb
arpl
popa
fs
sbb
out
add
mov
mov
jmp
sub
loope
pop
dec
push
xchg
jl
adc
pop
xor
mov
jae
movsb
in
dec
movsl
inc
xchg
imul
faddl
popa
fs
fxch
ljmp
pop
les
dec
mov
cmpl
or
pop
hlt
adc
xchg
dec
cs
imul
repz
inc
arpl
stos
cmc
or
ret
out
mov
scas
cmp
insb
imul
les
adc
xchg
fiaddl
out
xchg
xchg
dec
clc
xor
pop
jle
xchg
into
pop
loope
clc
or
xchg
roll
mov
push
lahf
adc
jmp
jnp
mov
daa
dec
mov
loope
pop
insb
das
cmp
addr16
pop
int
test
xor
aad
das
rolb
xchg
ljmp
jmp
mov
add
and
and
fwait
xchg
cmc
cltd
add
inc
mov
mov
scas
mov
sbbl
in
mov
add
pop
pop
jns
je
nop
push
push
xchg
loope
aas
sbb
ss
mov
ret
ficompl
or
ljmp
gs
cmpb
lea
ss
inc
inc
mov
loope
cld
pop
push
sbb
mov
je
inc
jae
jp
call
mov
stos
int
jns
pop
iret
mov
movaps
das
lock
cld
jge
int
std
fldt
add
daa
call
repz
mov
enter
pop
jne
and
lahf
push
add
rorb
mov
mov
and
sub
push
jecxz
xor
jg
aas
mov
push
outsb
push
lret
mov
lret
fiadds
cmp
sbbb
out
xchg
cmp
addr16
ret
mov
and
mov
sahf
js
or
or
lret
jle
loop
test
mov
imul
pop
jbe
iret
popa
mov
pushf
lock
and
shll
adc
out
mov
ja
data16
cltd
je
mov
xchg
js
sbb
into
outsb
mov
cmp
mov
and
out
lods
cmp
out
push
mov
dec
mov
lcall
push
and
and
push
fldl
mov
icebp
jecxz
out
sub
add
hlt
lock
data16
inc
sub
cmovnp
jmp
adc
xchg
push
cmp
out
pop
cmp
loop
enter
dec
rcll
inc
cmpsl
arpl
jns
int3
arpl
xor
mov
mov
jle
in
enter
scas
stc
ret
test
sbb
mov
cld
into
test
pushf
push
inc
lods
adcb
popa
dec
cmp
pop
repz
movsb
adc
xchg
mov
pop
mov
jbe
xor
mov
add
jae
aad
aam
int3
and
dec
stos
inc
push
xchg
ljmp
call
pop
or
and
or
stos
popf
fsub
xchg
jl
in
dec
mov
push
push
aas
lods
mov
int3
aas
and
cmp
repnz
adc
xchg
test
xor
sub
push
mov
scas
mov
nop
mov
mov
shl
dec
stos
dec
sub
inc
or
gs
xchg
mov
je
jbe
ret
push
xchg
out
cs
mov
xor
pop
jno
cld
adc
dec
and
lods
lods
std
cltd
xchg
aas
xchg
rolb
adc
mov
push
rclb
loop
repnz
xor
cltd
pop
inc
dec
cmp
xlat
xor
inc
pop
sub
fsubp
or
sti
and
rolb
test
dec
orl
test
shlb
popa
jno
rcr
outsl
mov
sub
call
cs
enter
addw
jbe
fimuls
loope
xor
push
lret
shll
data16
xchg
pop
je
fistpl
shll
imul
daa
arpl
push
or
dec
fidivrl
in
adcb
sub
out
ja
xlat
test
pop
insb
popa
repz
js
dec
ret
sbb
dec
lods
pop
sahf
xchg
pop
pop
mov
outsl
push
xchg
jb
inc
mov
lds
jp
or
outsb
and
mov
jbe
dec
imul
jl
dec
mov
jbe
jg
jb
xor
push
fiadds
loope
xor
sbb
sub
inc
adc
je
dec
jecxz
xor
imul
sbb
xor
bound
mov
cmp
lahf
mov
addr16
xchg
or
dec
loopne
lret
push
divl
mov
inc
scas
ret
scas
xor
fbstp
or
sbb
sbb
xchg
add
ror
into
adc
cmp
test
fcomps
lret
jmp
enter
imul
pop
repz
leave
lods
mov
aaa
out
lahf
mov
stos
jmp
adc
mov
into
ficoml
lods
cmp
inc
fistl
dec
shrl
adc
jne
test
and
stc
lods
xchg
or
pop
pop
lods
mov
iret
fcoms
xorb
mov
xor
mov
outsb
lret
frstor
sbb
ljmp
fisubs
inc
pop
mov
popf
test
sbb
mov
push
or
jp
sub
xor
inc
lcall
cmp
cli
aaa
xlat
subb
repz
jns
pop
out
cmp
jge
lods
ljmp
add
dec
ret
dec
imul
std
xchg
push
push
test
adc
popa
aad
mov
cld
adc
fdivrs
or
mov
inc
dec
in
mov
ljmp
sti
pop
lods
repnz
test
cmpsl
jns
scas
loope
jno
cmc
pop
mov
popa
nop
jae
jle
mov
or
cmp
fdivrl
jno
and
adc
jbe
xchg
push
loope
lock
cmp
cs
sti
xchg
push
int
ds
stos
xor
aam
mov
xchg
mov
pop
fcmovu
cmc
test
or
shl
push
andb
sub
dec
data16
xchg
push
ljmp
repz
xchg
scas
dec
inc
ss
mov
adc
sub
sub
leave
mov
jne
or
loop
or
mov
fldcw
arpl
movsb
call
adc
jae
mov
dec
and
fsub
fdivrl
das
sub
adc
enter
orb
pushf
push
pop
jns
aas
pop
cmpsb
jae
jo
lea
adc
mov
out
ret
insb
shll
lret
and
jecxz
adc
ret
mov
push
iret
pusha
cs
lret
inc
push
cs
cs
rorb
shufps
lea
leave
stc
xchg
cmp
inc
aaa
roll
push
xor
pop
adc
dec
push
mov
aas
repz
mov
inc
pop
mov
addr16
add
aas
xor
cmp
mov
xchg
es
jae
pop
call
mov
sub
into
scas
push
cld
movsl
mov
hlt
hlt
loop
mov
das
push
mov
rcll
sub
inc
add
in
shll
cmp
arpl
mov
pop
gs
imul
int3
ret
cs
out
movsb
sbb
mov
sbb
push
lea
jbe
ret
loop
ss
push
xchg
mov
mov
and
test
aaa
cwtl
mov
and
cwtl
cmpsl
aaa
js,pn
enter
mov
lods
jno
or
insl
push
dec
add
cmp
add
sbb
push
add
ljmp
aad
pop
add
sti
rorl
dec
pop
mov
push
dec
inc
cli
lds
ljmp
les
mov
or
sbb
das
test
dec
into
dec
add
jbe
xchg
lock
stc
jne
sub
jne
cmpsl
xor
pushf
lret
pop
jecxz
icebp
jo
div
sub
pop
pop
pop
call
pop
cmp
xchg
enter
inc
imul
adc
js
gs
push
fldcw
popa
pop
out
adc
push
sub
mov
hlt
jo
inc
clc
movsl
ds
mov
dec
adc
xchg
cmp
mov
icebp
pop
test
rorl
fmul
les
xchg
pop
ljmp
inc
mov
int3
aam
add
inc
mov
sub
sbb
aas
inc
aad
sbb
push
popf
cmp
xchg
mov
cs
mov
add
icebp
cmp
enter
mov
insl
sub
pop
cli
bnd
std
aam
push
lock
jp
cmc
std
mov
inc
icebp
leave
mov
in
aaa
cmp
xor
popf
add
out
push
fdiv
js
push
fcmovnbe
mov
add
inc
sbb
lret
mov
dec
je
and
sbb
adc
sbb
push
sbb
nop
add
inc
sbb
in
repz
fs
ret
pop
jge
xchg
arpl
lods
mov
sub
aad
mov
pop
dec
sub
mov
test
mov
call
popa
sub
sub
ja
sbb
lahf
out
push
addr16
dec
xchg
test
nop
dec
aaa
adc
or
sbb
fwait
push
test
mov
outsl
dec
push
inc
inc
jns
arpl
insb
jp
inc
or
mov
or
dec
mov
cli
cmp
subb
cwtl
subl
sub
iret
jmp
adc
arpl
dec
jle
cmp
out
add
sti
inc
hlt
cld
pop
jnp
lret
std
in
xor
fs
add
out
lds
mov
pop
sahf
mov
and
push
push
mov
jbe
sub
push
shlb
mov
and
sub
xchg
push
mov
sbb
mov
xchg
dec
mov
or
dec
push
dec
insb
sub
mov
xchg
aaa
sub
add
and
arpl
lods
aaa
stos
imul
rcr
outsl
push
sub
cmp
aas
mov
push
fcoms
int3
mov
push
fsub
pop
xchg
mov
push
dec
icebp
sub
arpl
cmp
testl
and
pushf
inc
pop
cmp
popf
inc
adc
insl
and
jo
adc
repnz
dec
lds
push
adcl
dec
mov
testb
sub
xlat
dec
sar
iret
sarl
scas
in
inc
std
push
popa
lods
mov
daa
popf
jnp
or
xor
addb
fdivl
add
pop
jns
adc
test
adc
mov
jo
jne
insl
xchg
adc
rcll
jnp
rcl
sbb
mov
push
loop
cmp
fdivrs
sbb
fimuls
push
sti
js
hlt
mov
sub
lods
lea
pop
aam
test
adc
adc
pushf
fdivrs
out
mov
inc
mov
mov
sub
cmp
push
sub
mov
loope
sub
cmpsl
aam
xchg
data16
dec
inc
mov
cli
pop
adc
xor
jecxz
jmp
push
sbbb
loop
fildl
xorb
push
inc
je
imul
mov
jbe
cmp
movsb
or
pop
jae
or
xchg
cmp
jo
cli
pop
data16
push
push
mov
cmp
lods
pop
push
loop
mov
cmpsl
pop
cld
stc
dec
mov
pusha
subl
adcb
mov
cmp
or
inc
mov
cwtl
push
pop
jbe
jge
cmpsb
xor
pop
out
icebp
ds
movsl
sahf
pop
out
fld
sbb
push
data16
add
sbb
addr16
push
push
mov
stc
lea
lods
jg
mov
inc
gs
inc
fisubrs
fildll
ljmp
cmp
imul
into
adc
pusha
gs
cmp
imul
jo
pop
push
movsl
cmp
inc
pop
outsb
sub
iret
mov
cmc
daa
push
dec
and
or
std
test
push
xchg
xchg
lods
inc
mov
mov
sahf
imul
xchg
adc
jno
std
mov
xor
cld
or
movsb
aas
int3
mov
test
xchg
test
scas
pop
outsb
ret
fwait
push
out
ret
das
cmp
mov
or
inc
imul
mov
pop
mov
adcb
adc
rolb
inc
cmpsb
pop
rorb
jbe
adc
inc
and
cmp
aaa
test
and
dec
adc
adc
push
push
loopne
arpl
enter
cwtl
mov
sub
data16
jb
call
dec
sub
arpl
jns
xlat
jl
adc
cltd
push
scas
jmp
inc
test
sub
dec
lds
jmp
xchg
mov
orl
hlt
pop
sub
sub
lock
sti
add
scas
cwtl
xchg
popa
sbbl
dec
in
lock
mov
iret
lret
inc
push
ljmp
adc
popa
adc
xrelease
xchg
inc
or
xor
outsb
xchg
push
or
push
push
sub
push
fbstp
pushf
dec
dec
scas
inc
push
dec
adc
and
push
rcl
xor
inc
mov
icebp
xchg
adc
shlb
push
cld
negb
jb
lea
popa
push
pop
test
ret
pop
sub
popf
test
pop
stos
mov
push
inc
mov
stos
mov
adc
push
or
adcl
ffreep
fwait
mov
sub
pop
xchg
arpl
adc
ret
inc
dec
adc
les
ret
rolb
scas
jno
dec
cmc
and
rcrl
scas
mov
les
outsb
dec
cmpl
push
fnsave
jno
xchg
sbb
test
mov
out
aas
adc
cld
pop
jmp
xchg
add
sub
cld
clc
mov
icebp
loope
repnz
fistps
mov
fwait
out
jnp
cltd
jae
inc
lds
or
xor
es
mov
call
rcll
insl
push
imul
cs
loope
dec
xchg
insl
and
imul
and
dec
mov
pop
mov
mov
sub
or
xchg
pop
stos
push
xchg
or
pushf
jnp
push
xchg
in
sub
mov
bound
test
clc
lcall
push
in
cmpl
and
fcmovnu
mov
imul
mov
xor
int3
cltd
test
loop
test
sub
adc
out
sub
mov
repz
in
cwtl
adc
pushf
inc
dec
addl
dec
fcomps
sbb
jmp
jns
shlb
dec
push
ja
aad
mov
outsl
loop
mov
insb
mov
clc
pop
or
loope
pop
aad
xchg
adc
shll
fnstsw
ret
ljmp
jns
ja
ret
loope
and
or
or
mov
mov
cli
mov
pop
push
jle
mov
and
ds
ljmp
adc
push
fadds
xchg
and
or
dec
sarl
mov
cltd
fwait
std
shlb
jbe
mov
lahf
ja
cmpsb
add
dec
xor
add
inc
pop
sub
rcl
mov
pop
jmp
push
js
movzwl
cmp
adcb
in
xchg
mov
push
push
jno
adc
std
je
int3
cmp
inc
pop
pusha
cld
dec
xor
pushf
mov
cmp
xor
sbb
pop
xchg
sbb
cld
xor
sbb
mov
inc
and
bound
out
cltd
xchg
push
lods
sub
mov
dec
subl
insl
xchg
andl
push
xchg
mov
cmp
xchg
js
push
mov
and
insb
xchg
xchg
out
adc
xchg
insb
lret
sahf
aam
imul
jb
bound
jl
shr
lcall
adc
and
mov
and
push
out
jle
add
adc
in
test
mov
sbb
pop
push
mov
cmpsb
test
fisttps
mov
ds
cmp
in
je
addr16
cs
add
mov
movsb
push
xchg
push
adc
push
push
dec
lret
das
stos
jmp
dec
insb
fwait
orl
lahf
mov
fnstcw
xor
mov
sbb
jnp
jmp
jo
or
pop
pop
dec
and
cmpsl
and
xchg
cmp
xchg
jmp
jmp
nop
lea
xchg
testb
push
lds
push
xchg
xchg
cmc
mov
and
push
sbb
pop
lock
push
shlb
xor
fisttpl
es
inc
stos
loop
push
scas
mov
les
xor
mov
ficomps
fdivp
fstpt
lock
mov
std
neg
sub
push
dec
pop
fisubl
pop
push
push
push
jne
sbb
pushf
pop
mov
lret
mov
outsb
pop
loopne
and
xchg
add
in
push
imul
cmp
push
mov
into
aad
fsub
loope
cs
lret
push
rol
les
jno
and
sti
and
cmpsl
call
mov
mov
mov
addr16
rorb
nop
std
js
repnz
fildl
mov
mov
mov
xor
or
jl
lock
xchg
dec
cld
dec
jp
mov
mov
inc
stc
mov
mov
aam
cmp
and
xor
jbe
xor
lock
std
xchg
jbe
pop
xor
popf
scas
jno
adc
repnz
rorb
or
fnstenv
dec
repz
out
addb
sub
xchg
iret
insl
sbb
mov
inc
lds
into
cmp
sti
in
adc
mov
push
cmp
pop
dec
pop
fld
xorb
stos
fists
and
mov
test
mov
cld
movsb
inc
pop
loopne
xor
and
in
dec
jp
jecxz
dec
int
xor
rol
shll
xadd
mov
ret
inc
cmp
fisttpll
sbb
dec
lahf
mov
add
push
jne
fs
scas
ret
jle
sti
fsubrl
aam
cmp
xchg
mov
jle
lds
jns
aam
cwtl
ret
iret
iret
dec
mov
mov
int3
insl
js
mov
push
mov
lock
pop
dec
shlb
lret
mov
lahf
mov
adc
test
inc
sbb
stc
xor
mov
into
in
sub
cli
or
or
add
cmpsl
jl
test
xor
add
lock
pop
scas
arpl
inc
sarl
sbb
add
mov
mov
mov
daa
mov
inc
imul
rcr
xor
mov
pop
mov
std
int
out
and
ret
insl
add
repz
and
je
and
leave
lahf
adc
jbe
adc
test
adc
push
das
sub
mov
jmp
add
movsl
jge
daa
fisttps
push
cmp
and
dec
mov
mov
ss
lock
es
iret
mov
pop
xchg
adc
jbe
sub
mov
dec
adc
mov
push
ss
int3
mov
mov
jp
nop
push
and
inc
dec
or
xchg
cwtl
xor
jp
or
sarb
scas
push
cmp
jno
dec
negb
outsb
pop
xchg
addb
or
pop
and
mov
mov
push
adc
jae
cmp
fisubrl
sub
jo
pop
cs
mov
dec
jbe
stos
xchg
lcall
adc
out
pop
pusha
insb
mov
mov
iret
fcmovnb
cmpsb
inc
out
test
push
pusha
insb
inc
add
outsl
sub
jle
xor
inc
or
push
xchg
rolb
into
rolb
in
mov
add
out
pusha
sbb
push
pop
sbb
int3
out
mov
jmp
inc
jge
mov
xchg
xor
dec
cmp
fs
cmp
adc
rorb
mov
imul
push
jl
inc
test
push
sti
add
add
testb
sub
xchg
or
les
or
and
cmc
pop
movsb
fidivrl
adc
xor
sub
lret
fcompl
adc
clc
xor
or
jp
testb
or
jno
movsb
in
pushf
popf
adc
out
movsb
mov
ljmp
movsb
push
push
cmp
das
iret
notb
jno
stc
adc
and
or
test
enter
ficomps
into
xchg
xor
xor
icebp
jb
mov
sub
pop
cli
jge
adc
jp
pop
adc
mov
test
add
pop
sbb
int
sub
cmp
push
out
aad
jl
mov
cld
fmull
movsb
mov
sub
ffree
insb
mov
divb
pop
leave
cmpsb
pop
adc
int3
add
scas
and
ss
xchg
adc
dec
xlat
imull
push
sti
mov
cs
adc
sbb
sub
add
js
movsl
movl
fs
sbb
int3
adc
in
rclb
lahf
out
sahf
out
lods
push
inc
push
shrl
jns
bnd
push
ljmp
push
icebp
adc
inc
sub
fsubl
aad
jo
xchg
pop
dec
and
aam
fildll
xor
mov
mov
lcall
insb
dec
loop
sarl
imul
add
dec
pop
mov
push
lahf
popa
ljmp
cmc
test
sub
or
bound
xchg
jg
sbb
or
xor
or
jnp
ds
sti
not
xchg
jecxz
and
jecxz
aam
popa
adc
stos
cmpsb
pusha
push
fdivs
mov
jae
call
les
push
clc
shlb
mov
incb
fs
popf
sbb
dec
push
jl
mov
push
xchg
bound
sti
sub
mov
jge
mov
dec
xor
adc
add
ljmp
or
clc
repnz
cli
int
int3
cmp
xchg
in
pop
arpl
xor
pop
test
addr16
jge
dec
stc
lock
pushf
jne
xchg
cmp
pop
loope
repz
cmp
xor
pop
lret
mov
pop
dec
xchg
or
orl
outsl
dec
scas
mov
push
xchg
leave
arpl
adc
ret
push
adc
jno
mov
in
shrl
sbb
scas
out
gs
mov
xchg
in
cmp
fstpl
ret
mov
or
xor
or
dec
cmpsb
xchg
lods
out
rclb
adc
mov
push
daa
add
andb
ret
push
inc
push
into
out
cmp
stc
sub
sub
push
ss
lock
jmp
dec
jp
in
sub
stos
push
sub
iret
adcb
mov
sbb
sbb
call
cltd
cmp
les
cltd
out
icebp
push
push
fwait
adc
rcl
cli
jl
xor
out
mov
pop
mov
inc
lock
pushl
dec
or
sahf
das
lret
pop
jnp
pop
mov
mov
pushf
into
mov
out
mov
jmp
dec
daa
inc
sbb
lea
mov
xor
cmp
inc
jg
mov
inc
cmp
loopne
jge
mull
sub
mov
mov
sar
mov
ljmp
jmp
repnz
mov
int3
pop
inc
inc
insb
sbb
popf
jnp,pt
mov
test
xor
filds
and
add
and
cmpsl
inc
jge
loop
scas
mov
dec
cmpsb
push
and
stos
jl
adc
jnp
aad
add
rorb
lock
sarl
mov
je
mov
sbb
mov
stos
sahf
dec
push
mov
add
sti
mov
push
add
jno
addr16
and
mov
aas
stos
mov
out
xor
inc
jae,pn
xor
repz
cmpb
jbe
sbb
pop
cmp
xchg
mov
or
and
fsubrs
push
mov
mov
jl
jmp
cmc
jmp
js
js
or
xchg
orb
mov
mov
pop
mov
cmpl
mov
test
insb
popa
push
mov
ret
mov
adc
mov
xor
pop
xchg
fsubrl
iret
xchg
leave
rcrb
mov
pop
clc
imul
std
cmp
sbb
mov
and
insl
mov
das
lret
scas
fistps
push
sti
lret
and
sar
jge
or
test
sbb
ljmp
insb
jg
shlb
les
je
mov
cld
in
add
outsb
xchg
arpl
xor
pop
push
push
popa
scas
jne
mov
and
xchg
inc
xlat
cli
loop
ljmp
das
decl
in
leave
rclb
xchg
stos
adcb
adc
pusha
adc
xchg
dec
mov
daa
outsb
out
or
jno
and
dec
fwait
jae
mov
sub
dec
adc
insl
insl
negb
adc
ss
addr16
mov
stc
mov
cwtl
insb
mov
pop
leave
dec
mov
sbbb
lods
ret
outsb
adc
ret
repz
jle
mov
scas
imul
cli
cwtl
lds
jg
add
or
mov
stos
out
addb
cli
add
inc
xor
fdivs
xor
xchg
push
jle
test
cmpl
clc
cmp
mov
add
inc
or
sbb
cmovb
push
mov
int
and
and
leave
cmp
jg
or
icebp
cmc
inc
cmp
sub
loope
sbb
xor
push
mov
xor
jg
stos
xchg
inc
dec
mov
rolb
in
pop
push
mov
aaa
jmp
mov
mov
xchg
out
fdivp
sbb
out
dec
and
inc
outsb
lret
test
lods
pop
cli
sysenter
ljmp
loope
jbe
xor
test
sbb
bound
addr16
imul
mov
fwait
bound
and
lock
mov
or
loop
xor
movsl
jno
lret
cmp
rclb
and
xlat
xor
cmp
outsl
ja
cmc
and
pop
inc
adc
mov
or
mov
stos
sbb
cmp
dec
in
adc
frstor
push
jmp
test
mov
jae
loopne
or
jmp
push
cmp
mov
mov
mov
loop
nop
dec
lret
pop
jb
sbb
and
fdivrs
pop
lock
cli
mov
addr16
mov
inc
ja
sub
pop
test
xlat
mov
add
int
out
loop
imul
sbb
sub
xor
sti
nop
push
inc
sbb
in
aaa
adc
and
adcl
aas
aam
push
ret
push
mov
xchg
pop
xor
lahf
das
add
fstl
dec
je
push
aad
jbe
cwtl
jb
aaa
sbb
xor
aaa
repz
lret
fs
and
and
in
mov
lcall
test
dec
push
mov
fwait
leave
mov
adc
test
sub
hlt
shlb
je
mov
inc
lcall
psllq
in
call
or
jmp
dec
jnp
jl
inc
jl
mov
loope
fstpt
hlt
jl
mov
daa
or
das
xchg
aaa
sub
jae
psubd
sbb
push
imul
push
in
jmp
inc
cmpsl
push
xchg
rorl
inc
movsl
call
lret
mov
xlat
call
jno
daa
mov
add
dec
push
repnz
adc
clc
lock
lea
movsl
xchg
mov
jle
fstps
hlt
xchg
jg
fidivl
movsb
inc
test
mov
xorb
aas
je
cmpsl
stos
xor
stc
pop
loopne
push
dec
push
and
lahf
sbb
int
mov
fmulp
add
int
loopne
mov
jbe
ljmp
pop
imul
lea
mov
cmc
pop
and
fs
ss
push
mov
stos
insb
rolb
icebp
or
cli
xchg
xlat
arpl
test
into
ret
sub
shrb
lods
jl
jbe
fwait
pop
cwtl
shl
ds
sub
xchg
xor
sub
ret
dec
bound
pop
stos
imul
jmp
xchg
adc
pop
loop
ret
mov
jo
pusha
mov
mov
scas
jne
xchg
sbb
or
jne
push
jae
or
sbb
mov
cmp
xlat
pop
dec
std
sub
std
xor
inc
push
push
stc
nop
or
pushf
cmc
mov
out
in
mov
dec
enter
adc
or
jl
repnz
and
ds
mov
cltd
das
mov
popa
add
std
jnp
fidivl
pop
push
fcmovb
mov
jecxz
rolb
enter
inc
fs
or
popf
es
push
popw
js
inc
lahf
bound
mov
fcomps
movl
arpl
or
pop
cmc
or
jns
cmp
and
aas
sti
xor
mov
add
pop
ret
out
loop
dec
test
cmpsb
xchg
test
xchg
lock
jb
shrl
mov
add
adc
jne
inc
adc
or
rclb
xor
xor
push
insb
iret
pop
xlat
mov
roll
outsl
pop
and
int3
call
cmp
in
sbb
xor
push
mov
sub
add
lahf
mov
cmp
ljmp
int
xor
mov
pop
mov
fsubl
ja
xchg
push
outsl
mov
and
jne
rorl
dec
sbb
cmpb
dec
cmp
stos
xchg
leave
cli
jp
xchg
xlat
or
cmc
add
sub
jecxz
call
sub
xchg
je
or
ja
sub
in
lcall
loope
lcall
faddl
adc
fnstcw
arpl
jg
dec
cmc
sbb
cmp
clc
and
xchg
push
cli
add
and
nopl
idivb
and
and
aas
bound
jns
or
cmp
addr16
or
int3
cmc
xor
in
ficompl
and
cmp
mov
stc
or
push
adc
and
mov
mov
mov
pusha
push
cmpsb
scas
push
into
and
xor
push
or
mov
jge
mov
xor
push
mov
jmp
cmc
aam
mov
or
ss
pop
fldt
cmp
pop
lret
arpl
call
mov
out
arpl
add
aad
aam
push
ljmp
mov
orl
jge
or
test
push
mov
in
xor
aad
sbb
jp
pop
xchg
popf
pop
xlat
int
repz
pop
fildl
stos
inc
imul
pop
sahf
enter
push
sub
lret
mov
push
push
jmp
cmp
mov
mov
lds
push
mov
cmp
gs
push
sbb
aam
mov
cmc
push
insl
repz
push
sbb
imul
aad
mov
mov
fcomps
in
fcompl
addr16
aaa
sub
mov
and
into
adcb
adc
leave
mov
sub
cltd
loop
aad
fsubrl
out
dec
inc
stos
leave
xor
inc
dec
stos
test
ja
ss
lock
nop
mov
mov
int
or
push
pusha
push
xchg
ret
dec
outsb
push
inc
fwait
mov
push
out
and
xchg
dec
not
sbb
xor
push
js
mov
dec
leave
inc
sarb
push
outsl
stc
inc
arpl
cmp
cmc
pop
xchg
mov
imul
pop
stos
pop
xchg
xor
cmpb
cld
or
mov
mov
pop
shll
push
test
arpl
adc
inc
cmp
loopne
mov
xchg
aam
or
xor
cs
arpl
fildll
andl
or
cmp
xlat
sbb
cwtl
push
data16
push
popl
lret
imul
fsubs
pushf
xor
fmull
in
add
dec
or
sarb
cltd
les
dec
xchg
cld
mov
movsb
dec
movsb
mov
sub
mov
cmpsl
xchg
repz
and
dec
cwtl
jns
push
xchg
lcall
cmp
fs
aas
sbb
les
inc
xchg
push
xchg
xchg
pusha
popf
push
icebp
cli
outsb
sub
sbb
scas
sub
in
dec
pop
ja
xor
mov
imul
sbb
das
add
jle
movsl
pop
stos
mov
sub
push
cmp
or
orb
mov
push
add
mov
push
ja
xor
lea
mov
xchg
inc
sbb
into
or
xchg
negl
adc
insl
daa
mov
daa
mov
push
adc
clc
jne
pop
leave
outsb
adc
inc
out
inc
and
and
mov
jbe
and
sbb
mov
xorl
clc
sbb
jmp
call
xor
fisttpll
cmp
dec
inc
leave
loopne
sbb
pop
aam
inc
push
lods
pop
scas
push
jbe
push
clc
fbstp
xchg
cmp
push
inc
je
roll
xchg
push
add
fwait
lcall
adc
stc
lret
push
out
aam
adc
icebp
cltd
test
xor
rcrb
pop
jl
in
and
jg
add
pop
fcoms
int
sbb
jbe
jl
andl
push
loopne
std
loopne
jl
fcoms
mov
sub
cmp
and
or
mov
movsl
mov
mov
mov
in
and
sbb
add
int3
jns
call
and
cli
cmp
mov
push
xchg
add
or
popf
addl
decl
add
jl
rcl
and
push
inc
lret
fs
insl
add
mov
lret
lods
std
cmp
movsl
mov
mov
and
aad
xorl
inc
pop
dec
and
cmpsb
push
xor
jmp
les
mov
mov
or
jecxz
lret
mov
cmc
or
popa
js
jnp
inc
iret
sbb
scas
stos
sbb
ja
jno
adc
xchg
test
lahf
addr16
or
cmpl
lcall
jmp
mov
or
loop
fcoml
adc
jno
dec
push
mov
popa
imul
sub
repz
pop
mov
cld
int3
add
or
rcrl
clc
insl
adc
sub
loop
jle
jmp
sub
mov
xchg
in
mul
mov
shll
fnstenv
mov
push
adc
lods
adcl
aaa
lds
jb
rcll
lock
je
inc
jl
andb
push
sbb
loopne
pop
mov
push
imul
push
testl
jge
or
pushf
mov
jb
sbb
xchg
es
scas
xor
push
lret
mov
and
sub
push
jecxz
adc
lods
push
addr16
mov
dec
sub
call
push
shll
in
mov
jmp
push
push
aas
out
and
mov
push
call
push
test
or
scas
or
icebp
lea
xchg
les
dec
jae
cltd
inc
fistpl
jns
or
sbb
ss
cli
sub
dec
outsb
adc
inc
cmpsl
lret
cwtl
cs
fwait
add
outsb
xor
andl
es
ret
jb
xchg
or
inc
ret
mov
idiv
cmp
sub
push
stos
lds
xchg
or
loopne
test
xchg
mov
inc
sti
arpl
inc
mov
ja
mov
outsb
sarb
in
xchg
and
pop
mov
mov
lock
cmpl
cmp
cli
test
jb
mov
push
ja
mov
les
stos
sbb
mov
cmp
adc
add
jae
arpl
jnp
mov
mov
xchg
cmp
cltd
pop
mov
sub
pop
stos
cmpsb
cmc
push
mov
mov
and
mov
outsb
or
push
inc
mov
cmpsb
das
ljmp
dec
jp
xlat
inc
mov
push
std
inc
pop
push
inc
iret
push
gs
in
jnp
mov
aas
or
jae
mov
ficompl
xor
sbb
outsb
cmp
cltd
loop
jno
mov
lret
jne
ret
arpl
or
cmp
jle
dec
shrb
dec
subb
lcall
addr16
or
pop
scas
es
and
xor
cwtl
loop
jno
xchg
aas
or
das
pusha
and
jge
xchg
cmp
stos
iret
jb
adc
or
or
cmpsl
mov
enter
push
pop
push
es
lds
inc
jecxz
jl
lret
shrl
stos
push
orb
mov
mov
je
mov
sub
cmp
push
adc
xchg
movsl
and
add
out
mov
js
jae
pop
inc
hlt
je
adc
hlt
aaa
hlt
loop
lods
iret
inc
and
mov
fs
push
js
int
nop
dec
and
fmuls
iret
xchg
iret
mov
push
or
xor
pop
ffree
xchg
mov
inc
stos
or
outsl
inc
xor
jle
xchg
cltd
cmp
mov
pop
adc
jno
inc
fists
add
shll
mov
nop
dec
repz
cmpsb
movsl
cmp
fdivs
sbb
dec
inc
stc
jl
sbb
jmp
cmp
jns
loopne
fidivl
aaa
xor
push
flds
sub
std
push
push
cmp
and
pop
rolb
out
mov
adc
cmp
add
fsubr
pushf
addr16
and
inc
out
popa
sbb
push
xor
cmpsb
mov
lahf
fldt
stos
fidivl
sbb
cmpb
inc
dec
cmpsl
repnz
dec
xchg
cltd
ss
push
push
mov
inc
xor
add
jl
sahf
test
loop
mov
fisttpl
xchg
inc
sub
insl
mov
addl
add
lds
out
adc
inc
fcmove
fmul
sti
pop
cltd
cmp
cld
out
and
fs
push
in
dec
insb
pop
mov
add
femms
xchg
in
es
cmc
and
rcrl
nop
repnz
andb
ret
imul
xor
mov
mov
pop
dec
adc
rclb
pop
inc
push
adc
pop
enter
and
lcall
pop
inc
std
mov
int
test
sbb
repnz
jecxz
loopne
rcrl
sti
sub
mov
mov
mov
push
xorl
imull
pop
add
jge
dec
loope
scas
lods
lods
sti
notl
insl
bound
adc
je
jg
ja
xchg
shll
mov
lods
lret
sti
or
sub
jae
xor
inc
xchg
inc
sbb
mov
dec
cmpsb
test
xor
loopne
inc
sub
xchg
cmp
addr16
xor
cmpsl
and
add
shrd
mov
mov
hlt
shlb
dec
js
jle
xor
test
cli
fcoml
popa
jns
stos
in
enter
stos
fstl
lods
out
adc
test
sbb
push
cmp
jnp
xor
push
mov
jl
pop
shr
cmp
into
add
jae
hlt
gs
ja
adc
cmp
xor
inc
xor
popf
adc
adc
cmc
test
icebp
jb
mov
movsb
xorb
cmp
imull
lret
sub
sub
dec
inc
js
fbld
adc
iret
ss
mov
mov
push
adc
xchg
mov
fdivrl
cmpsb
cli
inc
jle
nop
je
pop
mov
orb
and
rolb
xor
push
inc
push
adc
orb
push
mov
push
sbb
add
xrelease
xor
rcrb
pop
xchg
or
lret
int3
lods
das
test
leave
fsubp
mov
sub
or
imul
vsqrtpd
jne
xor
ja
insl
insb
xchg
xchg
ja
and
nop
loopne
loop
pushf
or
xor
out
jbe
pop
jb
pushf
dec
shlb
jle
or
adc
adc
dec
jl
push
mov
sub
and
cmp
lret
mov
aad
xlat
hlt
sub
ret
out
or
xlat
stos
fstpt
jns
repz
sti
andb
inc
imul
and
ret
and
jns
cmp
inc
clc
loopne
out
sbb
adc
inc
shll
jecxz
adc
loopne
repnz
in
dec
dec
mov
lock
incl
divl
out
push
or
xor
mov
mov
and
pop
sbb
flds
mov
sbb
sti
push
jl
cs
xor
dec
es
cld
fs
sarb
sbb
sub
leave
cmp
cmp
mov
out
xor
int3
ret
mov
xor
or
inc
push
lcall
push
adc
adc
jnp
test
mov
or
xor
dec
jge
push
mov
lock
repz
jne
dec
mov
sub
or
cs
cmp
stc
push
cvtdq2ps
mov
fs
jg
mov
icebp
push
cmp
or
jns
pop
data16
out
mov
jmp
fwait
in
cmc
xor
enter
shrl
stc
arpl
dec
add
insl
add
push
gs
push
cmc
icebp
fistpl
ss
out
fadd
adc
sbb
lcall
fdiv
mov
mov
or
mov
mov
in
pop
pop
out
leave
aaa
push
jbe
push
mov
movsb
negl
dec
xor
pop
fdivl
fcomp
xchg
fstpt
sbb
sub
pop
cmp
jae
push
fistps
insb
insb
xchg
cmc
pop
fwait
mov
cmp
mov
or
mov
add
fwait
jb
jb
jmp
lods
jae
or
loop,pt
xchg
sbb
pop
xchg
rolb
cmc
adc
sub
add
loopne
cwtl
mov
mov
gs
fdivrs
adc
mov
std
adc
jmp
jge
push
nop
mov
inc
sub
mov
mov
jae
fwait
stos
insb
rorb
lcall
dec
outsb
xchg
icebp
cmpl
nop
pop
cmp
aas
mov
pop
xor
lods
pop
js
adc
xchg
cli
pop
cmp
pop
inc
add
push
cmc
push
pop
or
loop
insl
repnz
stos
outsl
ret
or
dec
push
push
or
cmp
out
push
stos
jp
dec
repnz
les
push
je
push
out
test
dec
aaa
mov
icebp
inc
hlt
pop
sbb
js
dec
imul
cmp
das
cs
jo
testb
fsts
add
les
xchg
mov
pusha
repz
inc
jp
adc
push
ljmp
sbb
push
pop
mov
jne
mov
inc
inc
pop
cld
lcall
jle
loope
cld
stos
jp
mov
mov
enter
scas
pop
and
inc
push
xchg
shlb
cmc
ja,pn
bound
pusha
jbe
insl
in
scas
or
jg
pop
push
adc
in
and
jp
mov
jecxz
negb
shll
mov
test
sar
or
xchg
jl
adc
scas
or
adc
lret
xchg
mov
jb
xchg
or
push
jns
iret
leave
cmp
shld
push
push
push
dec
outsl
xorb
xchg
test
shll
roll
and
lret
adc
jge
inc
mov
fbstp
mov
xchg
stos
in
jp
imul
orl
ror
icebp
iret
sbb
mov
sbb
loope
or
push
jb
sub
loopne
mov
or
sbb
xchg
pop
or
cs
dec
ds
ret
cmpsl
lods
scas
outsb
push
stos
addb
fs
sub
leave
repz
sti
and
pop
loop
inc
in
add
mov
pop
dec
movsb
mov
inc
jge
jnp
pop
stos
pop
js
int3
mov
mov
adc
push
notl
mov
popa
jbe
and
data16
out
sahf
scas
mov
sti
adc
add
enter
js
jge
xor
pop
addr16
push
loope
jmp
fisttpll
stc
inc
jg
in
in
aaa
shll
bound
in
cld
mulb
add
inc
xchg
xchg
pusha
test
jg
out
xchg
fwait
mov
xor
jbe
mov
movsb
insl
arpl
scas
mov
fidivrl
mov
cld
in
mov
adc
scas
or
aad
imul
jae
xor
mov
sahf
sti
add
lea
lret
adcl
sahf
inc
sbb
pop
mov
aas
cmp
lret
in
pusha
push
push
cmp
movsl
jg
jne
cwtl
or
or
lcall
adc
inc
jns,pn
push
rorl
movsb
daa
dec
and
jmp
in
clc
subb
dec
cmp
out
xchg
fsubr
sbb
inc
imul
scas
daa
sahf
pop
ficoml
aas
cmpsb
ljmp
sbb
push
dec
add
lret
fdiv
xchg
add
enter
leave
xchg
jle
test
addr16
sub
push
add
adc
inc
push
popa
jp
xor
leave
mov
xor
sub
add
ljmp
scas
cmc
dec
jns
lret
inc
mov
sahf
cmc
cltd
imul
gs
nop
pop
sbb
in
mov
mov
es
rol
pop
fdivrl
fidivrs
je
jg
sbb
dec
mov
addb
xor
daa
shlb
ds
mov
outsb
addr16
ret
mov
fwait
je
and
pop
aam
cmc
in
adc
or
mov
fcmovnbe
pop
setne
aam
mov
scas
and
loopne
jne
notb
dec
mov
pop
arpl
cmpsl
or
mov
int
push
out
jnp
repnz
mov
inc
dec
cmpsl
into
adcl
push
add
sbb
jp
inc
xor
jp
pop
xor
push
xchg
sbb
imul
jbe
test
clc
adc
push
in
dec
xchg
push
jae
jne
repnz
cwtl
scas
add
shrb
cmp
pushf
or
out
jmp
pop
pop
push
xor
in
fwait
cmpsl
sub
mov
add
mov
push
pop
mov
inc
fisttps
cmpb
hlt
jecxz
es
pop
repnz
jp
adc
add
and
in
jnp
neg
not
pop
adc
mov
push
xor
clc
cltd
mov
popa
ds
dec
lods
mov
lret
test
xor
cmc
mov
sbb
mov
xlat
pop
shrb
pop
add
imul
aaa
inc
or
sub
xlat
stos
adc
add
fcmovnu
xchg
jmp
fstps
rcrb
xchg
inc
clc
or
jl
mov
mov
roll
sahf
mov
mov
jge
dec
mov
dec
push
mov
and
cmpsb
ds
cld
aam
sbb
loopne
push
cmp
and
je
pusha
test
push
add
in
push
pop
sub
dec
cmp
sbb
adc
mov
movsb
mov
daa
subb
push
adc
icebp
push
xchg
test
xor
cmp
lods
jae
inc
inc
out
xor
jb
mov
arpl
cmpsb
pop
push
sbb
cmp
mov
movsl
ror
jge
lods
inc
aam
dec
cltd
push
enter
or
sub
dec
and
pop
jns
loopne
push
inc
outsl
mov
jo
dec
xor
push
ljmp
push
test
or
in
inc
roll
push
faddl
xlat
mov
das
negb
sbb
movl
mov
lds
and
fstl
loope
dec
pusha
add
add
xchg
lods
bound
addr16
push
inc
or
sbb
gs
xchg
sub
add
call
mov
mov
pop
nop
loopne
cmp
dec
mov
adc
insb
fists
sub
stos
adc
pop
jge
sub
aaa
inc
repnz
cli
pop
cmp
fnsave
bound
inc
shrb
add
dec
movsl
push
cmpsb
cli
mull
outsb
pop
pop
outsb
sahf
inc
push
movsl
in
xchg
or
mov
pushf
pushf
push
rolb
rclb
dec
pushf
stos
xchg
push
sub
imul
cmc
mov
std
inc
xor
dec
in
mov
and
bound
in
pop
out
cmp
into
jl
cwtl
jnp
xchg
ficoms
lcallw
sar
push
out
push
lret
imul
pop
fcmovbe
mov
cmp
std
mov
or
inc
push
aam
xchg
push
jno
dec
inc
jmp
inc
jbe
pop
sbb
sbb
jle
jno
pop
inc
fsubs
daa
mov
or
clc
and
lret
lahf
fsubrs
jnp
jb
cmpsl
sub
adc
xchg
int3
test
mov
add
mov
dec
loop
jno
push
mov
repnz
push
lds
sahf
dec
popa
xchg
mov
sub
xchg
jmp
mov
mov
dec
jno
movq
sbb
scas
mov
js
xor
jb
aaa
and
jae
lds
orb
jb,pt
ret
adc
mov
sub
jbe
inc
cs
addr16
test
sub
outsl
cltd
mov
das
xor
mov
dec
inc
adc
mov
rorb
xchg
sbb
sub
push
leave
stos
mov
test
enter
bound
lret
fistpl
xchg
mov
xchg
cmp
jne
or
cltd
out
aaa
push
push
mov
repnz
adc
add
fidivl
mov
add
fistpll
pop
sbb
aam
enter
push
push
inc
notl
adc
adc
pop
shll
inc
in
fmull
repz
imul
bound
gs
iret
arpl
dec
out
test
es
jae
jnp
add
out
pushf
hlt
test
add
mov
test
sub
pushf
inc
es
fwait
mov
movsb
pop
pop
sub
or
push
push
jmp
mov
test
stos
pop
add
mov
xchg
push
filds
and
mov
mov
mov
inc
mov
push
idivb
sti
sbb
push
mov
das
dec
sub
ja
dec
sub
call
adc
fdivrl
movsl
lods
lret
adc
pop
repz
clc
xor
out
xchg
jg
pop
mov
dec
loopne
jo
test
jo
or
icebp
push
dec
int
xchg
aas
mov
xor
rclb
loopne
push
pop
mov
jge
inc
sahf
xchg
mov
js
and
jne
lods
dec
dec
call
and
test
adc
pop
xchg
movsb
enter
pop
xor
mov
jp
stos
out
pop
pusha
lods
inc
cmpsl
adc
xchg
mov
cltd
out
and
or
aad
mov
and
jge
daa
dec
shll
cmpsb
gs
in
sub
lcall
sub
pop
jmp
jne
imul
cmp
mov
or
stos
add
inc
fs
jge
lea
testb
les
clc
cmp
xchg
sarl
ljmp
jae
push
adcl
mov
mov
sbb
lds
or
clc
arpl
push
jge
outsl
aas
ret
pop
gs
lock
shl
mov
pushf
jle
mov
pusha
xchg
lods
es
sti
mov
nop
add
ficoms
loope
mov
fnsave
or
sub
mov
or
jecxz
inc
push
test
mov
test
and
pop
and
mov
jecxz
push
pop
push
adc
lcall
dec
inc
es
call
pop
push
nop
cmpsl
pop
cs
ss
imul
sahf
lret
in
imul
xor
push
fdivp
mov
mov
in
int3
icebp
push
mov
jge
xor
pop
xor
cmp
cmpsl
in
int
jnp
je
pop
lret
adc
push
ds
xchg
pop
jp
rorb
mov
into
sarl
mov
cmpsb
pop
test
outsl
cmpsl
pop
shll
icebp
mov
mov
pop
fs
nop
mov
dec
adc
daa
test
xchg
inc
jmp
rcrl
insb
adc
iret
scas
xlat
push
cld
stc
aam
ret
repnz
xor
loope
cld
push
fwait
ret
mov
jle
dec
mov
into
fstps
enter
popf
mov
mov
aaa
inc
imul
and
xor
in
push
fwait
xchg
add
fwait
ds
sbb
lods
sahf
cmpsl
std
pop
jge
lds
jmp
ret
out
or
inc
and
mov
pop
lock
arpl
mov
int
xorl
std
out
inc
xor
pop
out
xor
mov
mov
sub
xchg
sahf
jae
out
or
je
push
fnsave
xor
and
and
jns
mov
sub
out
in
sub
jge
orb
and
and
adc
jp
shll
mov
jle
mov
mov
jae
lcall
aas
sub
xlat
dec
cwtl
out
sbb
or
add
sbb
xchg
cmp
pop
sbb
or
rorb
rorl
ret
mov
leave
int
dec
mov
jnp
and
repnz
dec
fs
mov
sbb
jecxz
cmp
call
fldenv
jle
aaa
loope
shr
jo
js
push
cmp
in
es
mov
push
mov
cmc
mov
rclb
lret
adc
rcr
out
stos
iret
cs
out
roll
cmpsl
cmpsl
or
mov
arpl
cs
pushf
into
push
in
icebp
ljmp
gs
jecxz
inc
sbb
push
imul
stc
dec
dec
into
test
cmp
clc
push
inc
adc
out
lcall
cmp
and
aam
out
jp
cvttps2pi
lret
in
rcrl
loopne
cmp
nop
fidivrs
lods
cmpsb
push
mov
pop
lock
jmp
bound
xor
mov
in
out
cmp
jge
mov
in
test
neg
inc
fcomp
lods
loop
xor
test
mov
push
rorb
xchg
xchg
pop
idivb
cmp
sbb
je
jge
movsb
cmp
adc
xorb
repnz
pop
jmp
ret
jns
sti
inc
xor
adc
in
dec
jne
xchg
dec
sahf
imul
pop
dec
out
sub
inc
imul
gs
and
mov
mov
jbe
or
popf
pop
dec
out
sub
stos
push
or
or
dec
and
hlt
push
cmp
or
test
mov
xchg
xchg
and
inc
inc
sahf
mov
iret
out
stos
adc
arpl
mov
lcall
jns
xchg
inc
xchg
sbb
inc
mov
mulb
and
lahf
xor
mov
bound
es
fadd
mulb
pop
push
ror
arpl
mov
repnz
xlat
icebp
daa
push
scas
ljmp
outsb
push
dec
cmp
mov
cmp
test
sbb
inc
inc
outsl
out
stos
icebp
inc
adc
fdivrl
jo
xchg
add
mov
aaa
sbb
sbbb
push
das
ror
mov
lret
pusha
jb
mov
clc
jle
lcall
dec
add
leave
movsb
mov
mov
sbb
xor
jl
push
iret
cmpsb
cmpl
jl
push
xor
cmc
int3
movsl
dec
lahf
push
push
mov
gs
jg
ret
and
addr16
inc
shlb
add
popf
dec
ss
ljmp
sub
lret
and
ja
jge
stos
dec
push
fsubs
xor
sub
sbb
mov
adc
or
rclb
mov
mov
test
xor
add
ror
xor
jne
mov
xor
xchg
dec
lahf
adc
push
jge
cmpsl
adc
jbe
or
mov
add
add
out
or
popf
fstl
cmp
idivb
pop
lods
inc
movsb
mov
and
push
pop
arpl
pop
push
inc
jle
add
and
sahf
imul
ja
xor
fnsave
call
es
jg
xor
sub
add
andl
popl
out
add
sbb
pop
dec
addr16
jno
sub
mov
dec
neg
in
sti
pusha
out
into
mov
daa
mov
push
pop
dec
pop
outsl
insl
mov
imul
sti
push
lret
dec
mov
xchg
add
pop
fwait
sub
push
dec
lods
cld
xor
xor
jbe
push
dec
add
or
jns
enter
fisubrl
aad
or
iret
lods
cmpl
arpl
xor
nop
cmp
inc
rcrl
mov
jl
and
filds
pop
aam
adc
cmp
dec
or
insl
or
mov
adc
xor
mov
push
mov
xchg
aaa
test
sub
push
imul
pushf
andb
push
fldenv
xor
jle
mov
int
jp
popf
test
xchg
mov
xor
or
movsb
fisubrl
lret
scas
lods
cwtl
mov
dec
int
xchg
pop
mov
outsb
add
xchg
xchg
mov
loope
scas
sbb
dec
adc
push
pop
or
outsl
adc
pop
movsb
int
shl
mov
push
repnz
sub
sti
mov
mov
shrb
subl
sti
dec
adc
enter
clc
popa
arpl
insl
xchg
and
es
mov
rclb
xor
mov
or
outsl
mov
clc
add
dec
add
cld
jns
xchg
shll
sub
jge
bound
xchg
mov
mov
imul
mov
packssdw
inc
popa
movsl
inc
sbb
cmp
sbb
repz
and
jbe
cmp
imul
es
fwait
dec
lahf
cmp
mov
sub
pusha
sbb
jns
mov
iret
imul
sub
clc
add
sub
and
jne
fwait
lahf
push
ret
ret
inc
cmp
jne
gs
stos
mov
sbb
jp
loope
nop
test
pop
repnz
int
mov
add
xor
notb
jecxz
fisubrl
push
imul
idiv
rol
ja
in
pop
pop
fdivr
and
daa
in
mov
mov
pop
push
xchg
jne
lods
jne
jle
sub
pop
je
jecxz
or
cmpsl
dec
jae
mov
inc
cli
std
jp
inc
mov
pop
or
xchg
xor
sbb
ficomps
pop
decb
out
pop
int
or
mov
add
jecxz
xchg
jg
jle
adc
imul
dec
add
aad
and
and
push
xor
inc
xchg
cmp
fldcw
push
ss
pop
and
add
xlat
mov
stc
test
out
iret
pop
shlb
mov
cltd
mov
jg
sbb
iret
xchg
push
nop
je
ljmp
xor
mov
add
xchg
cmp
push
xor
push
dec
mov
cltd
xor
push
clc
sbb
xchg
loope
js
xchg
jnp
sub
cwtl
loop
sbb
push
dec
hlt
mov
dec
shr
and
add
bound
fucomip
mov
enter
nop
outsb
inc
loop
sub
mov
jg
adc
jno
and
pop
push
inc
jp
icebp
xor
insl
stc
lea
in
pop
jecxz
mov
testl
and
ret
pushf
pop
adc
xor
outsb
lods
and
dec
outsb
xor
shlb
dec
icebp
inc
je
and
pusha
push
aaa
gs
enter
and
loop
test
addr16
xor
xchg
cmp
and
pop
mov
enter
pop
inc
scas
mov
fmull
sbb
add
mov
sub
cmp
dec
fimuls
dec
call
clc
pop
jmp
dec
push
addr16
add
jge
iret
jmp
ss
out
jb
cmp
test
add
mov
push
mov
out
mov
shr
fsubrl
sub
push
fcompl
pop
xor
mov
or
and
dec
cmp
xor
roll
xchg
loop
push
sbb
ret
jbe
and
fimull
xlat
rol
sub
jae
push
push
sub
pop
loope
adcb
negb
cmp
clc
lahf
or
dec
idivl
add
enter
mov
and
jle
cmpsb
jge
test
jnp
mov
sbb
ss
cmp
dec
add
repz
pop
sub
cmpsb
sub
pop
cli
das
mov
popa
sarl
push
repz
ja
stos
and
fcom
xor
pop
imul
and
pop
jae
inc
jl
mov
cmpsl
iret
pop
jae
aad
push
sbb
sbb
add
inc
lret
flds
cltd
shrb
ffree
in
dec
test
adc
insl
cld
inc
in
in
fstps
and
mov
sub
add
jle
jb
adc
xor
cmpsb
xor
sbb
fimuls
into
cmpsb
cmp
pop
aad
add
pop
in
adc
push
dec
and
or
out
and
aas
leave
in
jno
repnz
sbb
roll
jle
dec
lret
dec
jns
repnz
ss
push
add
inc
sahf
ljmp
sub
xor
or
cmc
pop
loope
cltd
call
xor
adc
mov
mov
push
sbb
push
and
popa
dec
mov
sub
ds
aad
cli
mov
and
push
jne
mov
je
sarb
aas
xchg
push
push
jge
popa
lret
shlb
fisttpll
mov
push
insl
js
and
lods
mov
leave
inc
and
jl
add
and
pop
mov
movsb
fsubs
or
mov
sahf
mov
xchg
shll
push
das
dec
xchg
jl
adc
cmc
leave
push
sahf
lahf
leave
adc
leave
add
add
pop
je
imul
lret
dec
mov
scas
shlb
test
add
test
loopne
add
data16
stos
dec
cmp
mov
jp
outsb
pop
sub
div
inc
push
ljmp
fldt
shll
and
sbb
or
sub
stos
xor
jno
test
mov
sbb
out
push
cs
jns
lea
dec
inc
pop
shll
mov
mov
adcb
inc
jcxz
hlt
mov
dec
jbe
pop
xor
inc
jle
and
jne
shlb
pop
rcr
loopne
sub
push
loopne
sahf
push
mov
cmc
and
xchg
mov
adc
rcll
sbb
inc
push
pop
lea
inc
and
insb
and
int3
jns
jns
mov
or
int3
fdivrs
or
xchg
mov
test
pop
xchg
mov
cmp
mov
inc
push
icebp
es
or
jge
jecxz
repz
xchg
adc
mov
ret
xchg
xchg
lret
and
icebp
mov
bound
cltd
mov
adc
mov
inc
in
scas
sub
pusha
cli
arpl
test
fwait
stc
jnp
outsb
lods
push
inc
lock
stc
push
dec
xor
push
xor
inc
mov
adc
push
xchg
clc
xchg
xchg
fwait
cltd
inc
xor
xor
in
fldl
loopne
sbbb
jno
push
fidivrl
lret
popf
in
jl
mov
mov
sub
repz
or
lahf
add
fs
dec
cmp
or
in
movsb
sub
and
scas
mov
enter
jecxz
add
and
and
push
fyl2xp1
mov
mov
fdivs
mov
mov
mov
inc
pop
mov
shr
andl
fwait
mov
movsb
xchg
dec
sbb
fldl
jns
mov
cmp
add
push
jecxz
mov
mov
jb
mov
xchg
test
mov
aaa
mov
xchg
xchg
jp
xchg
ds
jae
imul
cmp
pop
ljmp
jb
cmp
xor
cmp
scas
ljmp
mov
mov
inc
icebp
sub
in
add
pop
mov
push
sarb
mov
addr16
mov
mov
jecxz
daa
arpl
je
shll
imul
sbb
in
or
loope
cmp
mov
aam
xchg
jae
ret
test
push
jne
pop
test
inc
subb
shlb
pusha
cmp
sbb
xchg
bound
sbbb
imul
mov
repz
gs
fsubrl
jbe
cld
mov
bound
cmpsl
imul
sbb
sub
jp
cmp
push
addl
jb
pop
test
enter
cmp
test
in
cmp
das
mov
jmp
push
add
cmc
sub
mov
lds
fistps
mov
push
cld
hlt
dec
repnz
mov
cmpl
stos
push
inc
icebp
leave
lcall
xchg
jbe
out
xlat
cmc
adc
stos
mov
mov
and
mov
movl
inc
add
and
es
mov
ja
or
in
or
fiadds
sti
decl
leave
xlat
out
fisttpl
push
xchg
lcall
pushf
cs
shrl
imul
xor
and
fs
imul
aad
xor
mov
insb
imul
sub
mov
ljmp
jae
jo
int3
adc
pushf
mov
pop
mov
adc
fcoms
mov
adc
push
les
dec
mov
lret
sbb
stos
pop
push
mov
pop
cmpl
fldl
mov
and
movsb
insb
push
into
jmp
push
mov
pop
cwtl
jae
fldpi
xchg
ret
pop
lcall
cmp
jmp
std
push
lret
and
out
adc
push
mov
adc
xorb
aaa
aad
xchg
imul
lcall
adc
push
leave
gs
mov
push
pop
into
jae
pop
and
outsl
lods
or
mov
adc
jnp
das
cmp
pop
inc
sbb
mov
mov
imul
test
je
ss
adc
popf
mov
dec
repnz
insb
out
adc
aas
int3
inc
mov
adc
and
jmp
or
jns
push
cmp
and
daa
dec
inc
mov
cmp
dec
mov
imul
scas
xchg
mov
sbb
hlt
sub
push
arpl
mov
mov
xchg
jo
imul
outsb
sbb
lahf
fisttpll
out
shrl
push
mov
and
enter
daa
in
pop
popf
test
loopne
push
ret
std
repz
lods
sbb
xor
test
fisubs
inc
popa
data16
shrl
add
lock
in
das
xor
mov
cmp
and
fmuls
mov
xchg
mov
mov
fwait
les
or
sub
insb
xchg
test
in
push
imul
inc
xor
rcrl
lea
inc
sub
push
dec
cmpsb
mov
push
divb
jns
loop
fcomps
jb
enter
xor
popa
sbb
inc
mov
inc
in
cmpsl
add
imul
outsl
mov
les
inc
lcall
out
imul
cmp
das
into
sbb
push
xchg
add
add
cmpsb
dec
mov
mov
sbb
mov
xor
iret
fdivl
out
add
ds
adc
sub
pop
mov
icebp
iret
sub
shll
adc
cs
or
outsb
lret
and
sub
fs
in
mov
jne
clc
ljmp
mov
fisttps
jb,pn
xor
arpl
mov
test
cmpsl
loope
and
push
insb
push
and
sub
sbb
jb
out
push
mov
ficoml
addr16
dec
iret
inc
int
push
fcompl
clc
inc
lock
sub
clc
pop
ja
cmp
test
mov
out
push
add
mov
add
inc
dec
inc
inc
jle
lock
loopne
sarb
push
outsl
pusha
push
ja
inc
jbe
dec
mov
push
jmp
jae
jno
and
stc
into
ja
js
push
pop
addb
stc
call
dec
add
or
jno
in
mov
in
mov
aas
sbb
mov
push
mulb
scas
jp
pop
sub
add
xor
iret
adcl
push
int
pop
mov
mov
test
lds
jns
mov
or
dec
je
push
leave
addr16
inc
dec
shl
sahf
fninit
mov
mov
sub
arpl
addl
imul
imul
jb
mov
sbb
xchg
pop
push
mov
testl
adc
mov
out
les
fwait
or
scas
adc
sub
in
mov
out
mov
daa
dec
shl
cltd
arpl
data16
mov
jmp
out
mov
dec
not
aas
mov
inc
imul
jns
das
sbb
cmp
aaa
xchg
adc
add
sti
jg
cmp
add
or
test
ja
pop
mov
jg
push
inc
mov
inc
push
adc
xchg
fidivrl
jno
mov
sbb
add
in
in
cmp
hlt
or
loope
out
pop
cmp
xchg
add
in
mov
aad
jbe
adc
fwait
mov
mov
sbb
testb
insl
jl
or
jnp
pop
mov
fstl
or
in
jle
ja
add
lret
mov
push
cmp
mov
movsb
jo
push
les
pop
je
addl
or
jge
adc
cltd
mov
push
inc
daa
dec
in
sti
jge
stc
xchg
sbb
sub
out
lods
sahf
mov
push
les
orl
xchg
mov
lcall
sub
inc
lcall
add
mov
lcall
cmp
mov
sbb
icebp
std
lret
inc
loop
fs
sub
sbb
mov
movsb
scas
out
sbb
aad
or
push
gs
fdiv
or
jmp
fs
scas
mov
jo
jl
jle
test
nop
adc
arpl
add
push
mov
aad
cs
sub
jmp
jge
mov
jb
arpl
ret
test
cmp
repnz
mov
inc
jb
xchg
sahf
xchg
ljmp
xchg
dec
movl
xor
test
mov
fsub
addb
cmpsl
mov
and
jl
inc
out
int
add
repnz
xchg
arpl
pushl
sbb
lea
fcomps
pop
sbb
xor
ds
push
loope
add
loopne
ficoml
lods
sub
inc
pop
push
sub
or
xlat
sarb
out
adc
adc
mov
notb
cmp
ds
stos
fnsave
pop
leave
xchg
cli
xchg
notb
scas
mov
jle
pop
jne
call
or
data16
push
sti
repz
push
lret
jl
cmp
jb
push
sub
daa
sbb
ficomps
jg
xor
xor
sbbb
adc
fdivrs
popf
and
adc
pop
fbstp
movsb
inc
and
xchg
cltd
ds
jle
ljmp
mov
loope
jno
mov
xchg
dec
dec
mov
shlb
jmp
jl
mov
ds
icebp
jge
mov
insl
cmp
fildl
pop
pop
mov
cmpsb
xchg
xchg
stc
movsb
cmp
adc
out
sbb
inc
sbb
adc
call
jl
movsl
mov
sarl
jb
dec
movsl
pop
add
xchg
pcmpgtw
aaa
mov
dec
call
push
push
dec
sahf
bound
test
stc
lods
jge
jnp
and
push
arpl
sarl
jbe
mov
mov
pop
jle
jmp
mov
lods
xchg
mulb
hlt
jmp
cmp
test
in
pop
ficoml
xchg
and
aaa
pop
std
and
shl
push
xor
xor
mov
xchg
mov
gs
jae
mov
pop
jne
lret
pop
loopne
mov
cmp
cmc
fadd
dec
aaa
add
push
les
cmpsb
pop
jae
jge
int3
aas
mov
sbb
lahf
and
insb
lahf
repnz
pop
mov
mov
xchg
pop
in
popa
nop
pop
in
out
clc
add
xchg
pushf
jle
jb
es
popf
mov
rolb
gs
cmp
xchg
jmp
data16
cli
sbb
imul
inc
mov
pop
cmp
in
into
stos
add
mov
fisttpll
cmc
jecxz
sub
clc
pop
dec
dec
lds
mov
and
xor
or
jl
pop
mov
cmp
fnstsw
cld
or
aad
lcall
or
sub
mov
fwait
sti
push
jae
shrb
add
imul
popa
cmc
test
aad
es
mov
cmp
pop
dec
and
fmul
cmp
dec
xchg
sbb
xchg
lea
js
icebp
mov
out
jb
icebp
mov
out
and
scas
daa
adc
xlat
push
push
pop
push
mov
and
push
jb
ds
jb
inc
movsb
clc
mov
scas
or
out
test
dec
inc
or
or
iret
push
adc
imul
add
fildll
mov
arpl
pop
lcall
cmp
jp
ljmp
loop
lcall
mov
daa
jb
ds
mov
les
xorl
gs
and
push
adc
sbb
add
scas
xchg
leave
fstp
pop
sbb
xchg
xchg
scas
jle
pop
pop
pop
ret
test
pushf
cld
fdivl
lretw
add
dec
enter
ficomps
adc
sub
dec
outsl
lods
ret
stos
push
out
mov
inc
cmp
mov
cmp
push
and
fwait
lcall
dec
push
or
inc
movsb
loop
adc
mov
int3
cmpsl
dec
fdivrs
out
sahf
sub
mov
xchg
cmp
sub
popa
adc
sti
test
xlat
jmp
add
fsubs
add
mov
and
addr16
rolb
test
arpl
rep
mov
subl
jb
das
mov
lcall
jg
pop
out
push
add
cmp
xor
clc
push
loopne
cmp
jle
ja
inc
ja
push
outsl
or
mov
pop
jle
lret
dec
int
call
loope
xlat
dec
sub
out
ret
adc
mov
fsts
fiadds
and
shr
cs
stos
push
xchg
inc
xchg
movsl
ret
or
jg
mov
int3
add
data16
sbb
pop
sahf
xchg
mov
lock
push
dec
arpl
or
pop
mov
sub
outsl
mov
xor
int3
xor
mov
jae
jo
cmp
repz
js
mov
mov
shlb
pop
movaps
push
jecxz
jno
pop
add
pop
push
jle
xor
inc
xchg
mov
mov
mov
lret
or
sub
ss
cli
iret
mov
xchg
call
xchg
cmp
sub
cmp
dec
jecxz
adc
jnp
mov
jo
in
mov
rcrb
mov
sbb
loop
add
stc
rorb
xchg
dec
mov
inc
jle
popa
mov
out
push
mov
push
dec
jl
sbb
sub
and
xchg
push
popf
push
lret
ror
out
or
movsb
ficompl
xor
lock
outsl
lcall
mov
daa
cmp
dec
mov
sbb
jae
jb
cmp
fistl
xor
push
js
xchg
test
cmp
cmp
lock
mov
in
dec
sbb
std
inc
xorl
cmp
bound
fsubrl
rol
jb
mov
cmp
inc
push
xor
cmp
dec
neg
inc
xor
xchg
mov
cmpsb
push
inc
pop
cli
movsl
sub
sbb
arpl
adc
mov
sub
push
test
cmp
cltd
xor
test
mov
mov
fldl
fwait
std
popf
dec
into
xchg
push
aas
or
mov
fs
imulb
les
xchg
cwtl
pop
cmp
pop
mov
stos
sbb
pop
sti
je
mov
push
and
pop
cmp
mov
pop
ss
lock
dec
mov
mov
push
adc
mov
out
xchg
cmc
inc
dec
stos
dec
rcrb
ljmp
out
push
cs
push
pop
or
cltd
mov
inc
add
fistpll
xlat
inc
dec
jne
cmp
mov
or
fnstsw
imul
popa
xchg
mov
lock
and
lods
rorb
pop
in
pushf
and
sarl
mov
ret
loope
dec
int3
ds
call
test
sbb
enter
shrl
sub
or
xlat
and
xlat
fmul
sti
xchg
lods
insb
cwtl
insl
jge
icebp
cld
xor
aam
out
pop
dec
xor
push
xchg
shl
gs
mov
mov
cmc
jmp
mov
sbb
add
adc
push
or
pop
cld
movsb
xchg
test
repz
inc
push
jmp
icebp
filds
inc
add
mov
xchg
mov
mov
jl
push
fidivl
gs
sub
in
xchg
jbe
iret
clc
mov
rcrb
out
lret
and
dec
imul
cs
into
ss
nop
fcoms
int
push
mov
and
cmp
icebp
out
or
dec
push
cs
lds
mov
and
fists
cmp
mov
div
bound
dec
cmp
cmp
mov
sub
fwait
movsb
adc
in
dec
out
pop
xchg
dec
xor
in
dec
fldcw
out
shrb
cmpsb
xchg
jbe
pushf
jnp
xchg
jge
adc
nop
jmp
int
movsb
in
test
aaa
popl
jo
scas
cmc
lret
and
adc
sarl
pusha
xor
imul
pop
aas
sbb
mov
add
loope
je
fdivs
popf
push
jecxz
mov
loope
or
fadds
sbb
adc
sub
jmp
stos
cli
dec
adc
fwait
stos
call
jmp
sbb
insl
push
negl
mov
sub
jo
jo
xor
stos
int
sub
add
pushf
test
mov
rcrl
sub
xor
sti
scas
stos
cmp
pop
push
jo
js
dec
sbb
push
xchg
test
vunpcklpd
push
jl
psraw
inc
jp
sbb
pop
lock
sbb
rolb
and
fcomps
das
inc
dec
popf
push
or
sub
rcr
ret
cltd
mov
dec
jp
fmuls
fildl
add
sbb
clc
jno
mov
idivb
rcll
xor
inc
imul
pand
imul
aad
lret
fldt
sub
or
xor
pop
in
cmp
cwtl
fists
cli
jmp
jae
lds
sbb
scas
push
pushf
inc
sub
or
out
inc
or
jg
fdivs
mov
pop
and
dec
out
mov
xchg
jnp
mov
mov
pop
or
mov
push
mov
mov
gs
clc
dec
addr16
incb
ja
dec
fadds
dec
and
mov
js
repnz
mov
xor
out
andps
fstpt
cld
mov
adc
pushf
mov
ret
pop
mov
lods
loopne
dec
lock
and
fwait
sbb
cld
adc
push
xchg
pop
dec
lods
dec
push
divb
mov
mov
int3
js
push
jno
sbb
dec
mov
mov
icebp
out
jns
pop
jns
cmp
xchg
ret
hlt
movsb
push
lods
dec
lods
stos
mov
psrlw
sbb
jle
inc
pop
or
xchg
jmp
and
pop
sbb
xlat
fldenv
cmpsl
fistpl
mov
xor
lds
mov
jb
fcoml
jnp
inc
xchg
jnp
hlt
sbb
sbb
cltd
out
dec
subl
cmp
les
sbb
dec
incl
push
sub
movsl
vmovlps
js
ret
add
xchg
xchg
movswl
insl
mov
scas
sub
mov
loopne
mov
pop
push
sub
daa
enter
adc
filds
or
mov
xor
cmovns
xchg
lcall
xlat
or
fimull
stc
cltd
jnp
ficompl
mov
insl
loope
mov
adc
xchg
shr
xlat
fildl
sbb
jp
mov
fwait
xor
sub
int3
mov
mov
xor
push
testl
test
pop
add
push
jge
mov
fincstp
xor
addb
push
pop
dec
sar
test
flds
enter
xor
movb
cmp
popa
test
add
lds
fcomps
shl
in
jae
mov
push
mov
jl
cmp
test
and
dec
rclb
ds
ret
test
imul
jl
xor
adc
pop
movsb
frstor
fiadds
outsb
clc
push
sub
mov
push
fisubs
fdivrp
mov
cwtl
lcall
mov
loope
cmp
dec
adc
adc
rorb
scas
adc
mov
pop
fistps
popa
cmp
or
data16
sti
pop
cld
addr16
sbb
jmp
jne
xor
lock
dec
rclb
stos
mov
jg
xchg
push
add
mov
jae
xchg
in
rorl
adc
mov
aaa
pop
js
xchg
orl
xchg
inc
mov
lahf
arpl
or
push
aam
cmp
sbb
xchg
sti
lock
push
fstps
stc
xor
das
and
mov
insl
mov
loopne
cli
shll
stos
mov
jne
aad
sbb
mov
pop
xor
std
pop
and
push
pusha
lcall
mov
das
cmpsl
mov
push
push
and
cmc
xchg
inc
out
scas
hlt
jb
das
aaa
testb
popa
and
mov
cmpsb
jg
adc
mov
adc
xor
sub
clc
imull
shlb
add
enter
jno
ljmp
aad
hlt
mov
data16
cs
jp
mov
sahf
fsub
sarb
add
je
mov
xchg
aas
dec
mov
pcmpeqb
into
scas
repnz
call
inc
fwait
testb
fistl
andnps
ja
adc
popa
xchg
in
out
xor
cmpsl
mov
cmp
mov
or
inc
repz
dec
or
sub
xchg
lods
xchg
sbb
or
daa
cmpsl
mov
test
cltd
pop
dec
orb
push
rcrb
xchg
pop
test
ret
mov
xor
ss
loop
std
pop
mov
dec
xchg
xor
test
sbb
in
loope
mov
pop
xchg
jne
insb
or
xchg
xchg
pop
push
mov
xchg
xorb
arpl
mov
mov
dec
je
sub
leave
fmull
fwait
jbe
mov
xchg
jle
js
fsub
adc
fs
xchg
sub
iret
xor
ss
ss
shrb
jo
lahf
xor
pop
sub
ret
sub
mov
jnp
pop
loope
ret
test
xchg
pusha
inc
cmp
ficoml
sub
frstor
cli
pop
dec
jne
int
mov
mov
mov
adcb
jp
xor
leave
lea
test
xchg
sub
jl
lahf
cwtl
scas
sbb
mov
push
sbb
mov
addr16
pop
sarb
xor
inc
cmpsl
adc
mov
pop
mov
mov
dec
inc
adc
pop
fistpl
mov
cmp
notb
mov
and
inc
test
in
fisttps
mov
add
sbb
fimuls
adc
mov
sbb
aad
mov
mov
pop
ret
push
xchg
aad
or
inc
and
sbb
mov
ss
xor
pop
jmp
jmp
sarb
mov
mov
loop
and
out
inc
mov
lods
sbb
loopne
or
pusha
les
xchg
out
cmp
xor
and
and
jp
jecxz
sarl
adc
mov
divb
and
sub
inc
enter
daa
es
push
movsl
fcom
popf
pop
push
mov
cli
lcall
xor
test
pop
dec
push
pand
jp
int3
sub
jg
loopne
and
xchg
test
mov
cmp
mov
in
int
or
inc
cli
inc
cmpsb
push
xor
cli
or
sub
mov
mov
sub
mov
dec
xchg
xchg
mov
dec
int3
xor
xchg
jg
int3
inc
mov
stos
adc
and
mov
ret
push
and
shll
jno
mov
js
sbb
jge
adc
lds
inc
or
push
mov
movsb
test
scas
pop
mov
dec
in
pop
mov
adc
and
push
out
add
int
dec
mov
aas
mov
call
xchg
sbb
dec
pop
sub
push
enter
pop
add
shl
mov
jne
cltd
pop
fmuls
and
pop
stos
je
add
insb
cmpsl
push
push
pop
add
sbb
or
xchg
imulb
mov
cmp
lods
push
int
aad
mov
sub
mov
cmp
sbb
jns
js
mov
pushf
jne
sbb
in
mov
mov
setne
fwait
xchg
mov
subb
mov
loop
fstps
and
adc
mov
inc
or
sub
fcomps
mov
not
dec
push
pop
int3
mov
clc
aaa
movsl
ljmp
insl
faddp
xor
movsl
lods
cmp
sub
jmp
push
or
or
adc
or
sub
xchg
pop
and
mov
stos
dec
or
xor
clc
cli
scas
jecxz
movsl
sbb
sub
jp
adc
es
push
mov
fdivrs
pop
mov
push
ljmp
fucomi
or
sub
pop
aad
fld
mov
daa
lret
fsubp
sub
icebp
pop
sbb
and
xor
xor
inc
lds
in
adcl
es
xor
repnz
adc
loopne
cltd
pushf
int
pop
out
cmp
mov
jge
es
pop
mov
adc
dec
xchg
pop
fldenv
sub
push
jmp
scas
push
push
pop
sbb
pop
dec
test
add
in
inc
sub
cld
inc
sarb
adc
addr16
cmovns
in
cmpsb
adc
in
ror
loope
dec
outsl
inc
shlb
mov
and
stos
sbb
cmp
mov
push
leave
in
push
xchg
inc
gs
mov
bound
rolb
nop
mov
sahf
fs
jnp
fwait
cmp
xchg
mov
mov
out
push
pusha
jmp
jnp
mov
iret
add
add
cli
ja
add
enter
sti
sar
cli
loop
fwait
or
pop
cld
shll
out
jnp
bound
xchg
add
call
xchg
stc
pop
lods
jno
pop
mov
ret
cmp
cmp
dec
out
sub
cmpl
dec
loopne
pop
adc
test
cmpsb
leave
adc
mov
lods
ficoml
cmp
xchg
dec
push
jno
xchg
je
je
adc
ficoms
mov
mov
mov
test
jns
inc
mov
loop
jecxz
lret
dec
dec
out
movsb
cmp
mov
lcall
movsb
push
mov
adcl
addr16
out
inc
repz
and
clc
jno
repz
jge
mov
call
mov
lods
std
mov
rolb
insb
xor
insb
push
mov
mov
xchg
std
push
xchg
adc
sub
mov
popa
addr16
cmp
inc
lahf
sub
xchg
push
fs
loopne
xor
leave
or
mov
pop
addr16
fadds
add
addr16
test
jae
mov
ljmp
stos
add
scas
aas
or
sbb
jbe
repz
arpl
punpckhbw
mov
insb
lcall
sbbb
aam
dec
lods
insl
mov
imul
sub
pop
stos
add
lcall
test
lods
mov
sarl
mov
insl
notb
ds
lea
inc
arpl
andl
fistpll
ljmp
out
inc
mov
and
cmp
notb
and
mov
lock
je
jge
andb
insb
pushf
xlat
adc
cmc
and
lret
nop
mov
pusha
sub
clc
call
dec
jno
xchg
movsb
mov
push
fcmovu
sbb
mov
cmpsl
bound
pop
jle
sub
test
outsl
test
daa
scas
stc
mov
and
jmp
popa
xchg
out
push
cld
xchg
in
push
orl
xor
hlt
inc
mov
into
addl
les
push
mov
pop
fwait
and
mov
dec
negb
cs
inc
inc
sub
outsb
push
testl
jp
pop
dec
dec
mov
xor
or
mov
sub
popf
inc
orl
mov
adc
inc
mov
addb
in
sub
arpl
adc
push
negl
mov
sub
jns
push
sub
pop
fldt
mov
or
push
aaa
sub
jae
ljmp
jno
data16
or
sub
or
stos
and
pop
xchg
or
jns
stc
cmp
into
sub
push
loopne
push
stc
sbb
cmp
sbb
adc
mov
and
xor
cmc
movsl
imul
mov
jno
lahf
xchg
leave
in
mov
jno
ud1
push
loop
insb
adc
sbb
mov
sub
mov
mov
int
cmpsb
or
sbb
lret
les
and
shl
cmp
js
das
sbb
movsl
fnsave
inc
ret
mov
sbb
cli
or
insl
loopne
cmp
call
cmpsl
pop
and
dec
mov
mov
js
jmp
mov
push
mov
push
fstps
insl
sti
jno
xor
add
jle
add
fwait
popa
adc
jmp
std
mov
jge
mov
mov
mov
mov
sub
mov
inc
call
mov
pushf
cvtpi2ps
xchg
cmpsl
and
cmp
push
sbb
jbe
in
inc
cmp
mov
xor
fxch
push
ja
mov
fisubs
ss
or
jbe
in
and
or
mov
jl
or
rolb
aas
cmpsl
mov
inc
out
mov
rcll
adc
fmulp
cmp
lds
rclb
mov
aaa
mov
push
enter
mov
pop
imul
jmp
testb
cmp
mov
inc
inc
insb
mov
adc
outsl
mov
mov
or
popa
pop
loop
outsb
or
push
mov
sbb
loope
add
sbb
mov
sub
mov
daa
aas
mov
dec
push
aam
je
or
inc
shrb
rolb
mov
insl
xchg
stc
enter
aas
jmp
jp
push
sub
nop
or
ja
dec
sar
cmc
fwait
inc
aaa
dec
std
and
mov
pop
sbb
jb
mov
add
cmp
sti
jo
sbb
add
mov
pop
mov
aad
mov
jmp
sar
sub
push
inc
outsb
andl
hlt
mov
adc
sahf
hlt
test
and
jl
mov
sub
add
test
gs
mov
inc
ljmp
imul
dec
cmp
xchg
nop
push
das
lods
mov
adc
or
lcall
dec
mov
aas
jl
push
in
repnz
movsl
add
test
mov
mov
mov
cmp
and
je
mov
sub
adc
out
and
loope
inc
xchg
xor
flds
cmp
inc
rol
push
adc
insl
jle
rcrl
sbb
std
cmp
cmp
pmuludq
pop
xchg
adc
or
sahf
fwait
mov
loop
cs
aas
scas
or
pop
sbb
popa
push
out
cmp
loopne
push
leave
inc
mov
dec
lods
lods
rclb
outsb
or
addr16
adc
hlt
jg
dec
repnz
add
scas
fcompl
or
jecxz
xchg
xor
lea
pop
pop
outsl
push
mov
pop
scas
nop
cmp
xchg
rorb
movsl
in
lahf
xchg
push
mov
mov
inc
jl
pop
fwait
jg
orb
mov
push
adc
fidivl
pop
adcl
bound
inc
into
stos
push
in
mov
push
leave
jne
es
aam
pushf
jecxz
adc
fs
shlb
push
int3
lcall
mov
push
and
icebp
inc
daa
pop
out
ja
mov
daa
outsl
insb
pop
cmp
inc
mov
arpl
int3
stos
inc
mov
cmpsb
jl
add
jnp
push
add
sarl
lock
out
jecxz
mov
and
je
mov
dec
dec
popf
or
ret
adc
outsl
stc
dec
lret
sub
pop
adc
test
lcall
cmc
cmp
push
mov
cwtl
xchg
fmuls
rcrb
stc
cli
das
adc
imul
jae
mov
dec
adcb
cmp
gs
loop
push
cwtl
xor
xor
mov
repz
enter
loopne
aaa
or
divl
icebp
and
imul
mov
lcall
insb
hlt
xchg
cwtl
movsl
sub
jg
imul
pop
xchg
push
pop
add
mov
movsb
add
test
aad
sbb
test
cmpl
push
mov
mov
push
add
fsubrs
cmp
les
cmp
das
mov
lret
push
sub
add
mov
mov
lret
xchg
cmpsb
inc
lahf
adc
add
loope
fisubs
mov
lods
lods
push
dec
int3
test
loopne
insb
ja
cmp
cmpsb
jmp
xchg
push
aas
adcb
std
aaa
jmp
dec
out
xchg
xorl
stos
ja
jne
dec
dec
mov
sbb
or
sti
pop
subl
jge
imul
std
and
and
mov
add
lret
ljmp
dec
ss
outsl
scas
aad
inc
in
and
lods
push
sub
in
ss
dec
or
aaa
mov
fisubs
repnz
mov
wbinvd
fld1
xchg
push
scas
test
jmp
fs
cmp
stc
lea
sbb
mov
imul
cltd
sbb
subl
pop
mov
aam
sbb
cmp
mov
inc
enter
or
dec
push
in
mov
out
jg
insl
scas
loopne
push
loope
push
shrb
xchg
xchg
ficomps
insb
pop
arpl
jge
push
fisubl
push
fcmovne
out
pop
repz
ds
in
aaa
adc
sar
ds
leave
stos
out
je
push
or
adc
cmc
mov
xchg
dec
adc
dec
sbb
dec
in
dec
lret
add
add
pop
push
pop
iret
icebp
jge
sbb
and
and
sub
cs
clc
mov
in
push
in
and
pop
aas
ja
in
dec
lret
test
repz
xor
lcall
jne
jb
test
in
mov
into
push
jnp
push
sub
sbb
enter
inc
mov
adc
jo
loopne
inc
cmove
popa
cmp
mov
xchg
dec
add
out
and
test
jno
jg
into
push
and
sub
adc
dec
xchg
jl
inc
mov
fldenv
out
xchg
bound
lock
clc
mov
es
loop
into
pop
cs
in
pop
jge
sub
jae
popa
jbe
and
sbbl
ljmp
jmp
inc
sbb
mov
dec
jl
mov
outsb
fucomi
or
out
aaa
cmc
es
les
xchg
mov
inc
sub
popa
loope
movsl
cmp
stos
fwait
cmp
dec
imul
mov
cltd
int
sub
inc
jno
adc
or
daa
push
xchg
push
xor
fdivr
dec
mov
push
fcoml
sub
jns
ljmp
pop
daa
mov
sub
or
dec
sti
scas
jecxz
sub
fidivs
movl
push
andb
inc
sub
test
shr
mov
daa
sub
jge
mov
jnp
push
imul
bnd
mov
cs
push
inc
mov
stos
icebp
fwait
pop
addl
int3
aaa
dec
or
bnd
mov
jno
cmp
mov
arpl
inc
sti
lods
mov
sub
mov
sub
ljmp
fwait
pop
mov
jnp
jmp
pop
jnp
xor
pop
outsl
mov
inc
cs
pop
call
lock
outsb
aam
lods
xor
push
testb
mov
ds
cmc
xacquire
pop
jno
xchg
in
inc
pop
out
in
xchg
rcrl
push
and
mov
inc
iret
lahf
pop
inc
add
jno
cmpsl
xlat
into
test
sub
xchg
and
and
jp
loopne
and
ljmp
push
jl
mov
or
sub
bound
xchg
jp
mov
mov
sub
loopne
test
mov
push
loope
icebp
and
int3
aad
repz
out
push
clc
jg,pn
xor
fwait
jbe
pop
adc
sarl
mov
push
pop
fisttpl
xor
rcll
mov
clc
mov
push
add
arpl
adc
insw
mov
pop
mov
insb
mov
jle
aam
or
shl
pop
clc
inc
mov
jle
cld
ss
divps
cltd
out
dec
dec
and
int3
mov
in
mov
mov
inc
arpl
xchg
pop
fldt
aad
xchg
scas
add
scas
adc
pop
dec
adc
pop
imul
mov
loop
mov
jl
xchg
sub
pushf
repnz
int3
fdivl
bound
mov
and
in
dec
mov
scas
jge
popf
sub
fwait
cmp
adc
out
es
mov
mov
push
in
scas
mov
sub
stc
popa
dec
clc
jle
dec
jge
inc
ffree
mov
mov
jb
inc
sbb
mov
loop
out
es
lods
test
sahf
jmp
mov
incl
and
mov
sbb
push
rorb
stos
jns
fwait
xchg
sub
mov
aad
sub
cs
jnp
push
rorl
es
pop
test
pop
lahf
jge
and
add
cwtl
sub
jle
pop
aas
das
cmpsb
out
push
lock
flds
out
mov
shll
mov
bound
fninit
bnd
sbb
fst
push
jbe
test
xchg
sbb
jl
add
inc
push
leave
arpl
dec
out
xchg
sbb
cmp
stos
mov
notb
aas
fsts
dec
mov
outsb
insb
mov
mov
add
or
dec
mov
sti
mov
leave
aaa
jb
test
mov
stos
fs
out
out
mov
dec
or
mov
lea
pop
xchg
sbb
sub
cmp
xor
push
mov
ja
lcall
das
xchg
jne
pop
out
inc
jae
repz
inc
cmp
dec
cwtl
into
icebp
push
dec
push
adc
repz
adc
scas
sub
out
mov
outsb
jle
pop
push
ljmp
jae
imul
inc
mov
mov
push
lcall
lock
jp
repnz
mov
adc
cmpsl
nop
adc
add
rol
int3
cmpb
out
rcll
mov
jns
data16
call
sbb
test
sub
bound
pop
mov
in
stos
mov
data16
out
mov
cmc
imul
mov
ds
cmp
add
dec
loopne
fsubrp
mov
cltd
bound
test
sub
mov
call
outsl
int3
mov
lods
sbb
cmp
push
gs
aas
movsb
and
adc
notb
dec
push
sub
sti
jmp
push
sub
ljmp
push
sub
inc
rcl
sarl
jb
push
ficoml
xlat
stos
xchg
std
cmp
dec
cwtl
jo
iret
fcmovu
test
lea
or
mov
leave
cmpsb
out
inc
lods
sbb
jge
ret
aas
mov
cmp
push
inc
mov
jno
mov
subl
inc
aaa
std
adc
cmpsb
ljmp
rclb
jno
outsl
mov
adc
les
clc
cli
dec
das
aaa
push
das
sub
fisttpll
dec
or
cmp
and
pop
add
cmp
loop
int3
ss
xor
and
sub
and
dec
jno
mov
mov
repnz
fstps
cmp
dec
ret
adc
mov
out
lods
imul
push
sub
xor
mov
pop
adc
iret
adc
pop
bound
in
pop
cmp
repz
mov
inc
xchg
lret
fiadds
xor
mov
push
mov
aad
mov
dec
sbb
js
mov
jno
lds
dec
js
inc
mov
int3
fisubrs
sub
je
insb
test
inc
movsb
lea
rorl
test
rcrl
pop
mov
add
icebp
call
icebp
pop
enter
dec
sarb
cmp
dec
scas
call
or
fisttpll
adc
mov
divl
mov
adc
or
cld
and
dec
out
lods
sbb
call
or
addr16
mov
mov
pop
adc
inc
sub
xor
insb
sub
je
in
or
cmp
loop
je
mov
ja
mov
add
pop
inc
adc
std
mov
aad
testb
hlt
push
ret
inc
and
push
pusha
xor
push
addr16
gs
into
pop
inc
pop
stc
jb
stos
inc
rcrb
cmpsb
sbb
mov
mov
in
insb
xor
xchg
ret
cmp
pop
adc
lret
out
xchg
pop
add
mov
inc
cmpsl
punpckldq
mov
mov
xchg
into
xor
add
push
aaa
or
cltd
dec
adc
mov
push
push
mov
out
leave
mov
cmp
cmpsb
pop
xor
mov
or
insl
sub
je
fwait
shll
jge
cmpsl
cli
shrb
xchg
pop
movsb
enter
enter
pusha
mov
or
jecxz
dec
pop
mov
xlat
xchg
lahf
xlat
push
dec
aam
push
sbb
inc
jg
xchg
aaa
push
sub
pop
sahf
mov
dec
aad
inc
push
outsl
adc
lahf
out
xchg
mov
and
pop
and
mov
lock
xchg
mov
xchg
pop
mov
xchg
int
cmc
imul
adc
lret
inc
and
lcall
imul
cmp
movsl
imul
xchg
jmp
pop
cmp
xor
or
mov
lock
mov
fdivrl
cmpsb
mov
xchg
jp
mov
bswap
idivb
sahf
imul
xor
outsl
stc
pushf
lods
loope
out
push
mov
xchg
aas
cmp
cmpsl
daa
imul
sub
sbb
dec
sub
mov
or
inc
mov
push
test
mov
push
adc
lock
mov
mov
ss
in
mov
dec
lods
sub
xchg
mov
mov
lahf
icebp
push
adc
repnz
xchg
pop
andl
in
popw
scas
xor
js
or
outsb
imul
iret
or
add
add
sub
rcll
popf
pop
dec
lahf
mov
insl
mov
mov
lea
jns
mov
sub
cmpsb
or
xchg
std
into
fnstcw
cmpsb
mov
out
inc
out
rcrl
cmp
out
aam
push
fidivl
push
nop
int
sub
gs
movd
adc
xchg
push
mov
subl
test
sub
iret
dec
je
stos
pushl
imul
in
cs
bound
jo
jno
bound
jecxz
ret
push
fdivs
sub
sub
mov
repnz
ss
ret
subb
jmp
pop
adc
addr16
inc
xor
outsb
scas
loop
cmp
cs
jb
rorl
cmc
or
sub
mov
add
pop
cmp
loop
movsl
mov
aas
mov
fsubrs
pop
sub
jno
sub
leave
js
pop
decl
ja
insb
lcall
imul
mov
cmpsb
cmpsb
push
push
dec
mov
dec
push
cmpsb
and
dec
xor
ret
lods
maxps
out
jg
fwait
in
inc
lds
cmp
dec
dec
testl
daa
pop
lock
xor
jecxz
fwait
and
mov
push
stos
mov
cmpsl
cmc
mov
mov
adc
cmp
mov
mov
dec
jnp
test
sahf
push
das
sbb
aas
sbb
push
cltd
push
push
jp
push
test
mov
cld
hlt
adc
loopne
out
stos
dec
jbe
cmp
dec
ljmp
jae
mov
mov
mov
cltd
xchg
and
add
mov
jl
and
aam
jae
test
daa
lock
xchg
inc
jmp
stos
pop
fbstp
xchg
inc
and
frstor
in
add
jo
lret
adc
xor
in
inc
cmpsl
aas
push
cs
into
mov
or
lret
jns
xor
xchg
adcl
ja
cmp
int
popf
mov
xchg
cmpsl
or
imul
inc
jp
in
mov
adc
xchg
sbb
in
iret
and
cltd
jmp
sub
stos
dec
stos
add
push
adcb
or
sub
and
jbe
sub
fadd
fistpll
addb
push
out
or
inc
cmpsb
dec
xchg
arpl
sbb
mov
or
and
push
sbbb
jecxz
mov
dec
push
mov
or
mov
dec
inc
pop
mov
lret
add
cmp
adc
movswl
pop
cmp
fnstcw
lock
icebp
jb
mov
loop
cmp
dec
adc
sbb
loopne
hlt
fsts
ret
stos
test
or
cmp
sbb
idiv
pop
into
jle
mov
lcall
mov
loope
jns
lahf
popf
mov
lods
fs
cmpsb
mov
add
xor
cmp
or
mull
rorb
fnstenv
dec
mov
out
xchg
mov
std
cwtl
popf
inc
inc
out
insl
sbb
and
xchg
std
repnz
cmp
sbb
push
xor
fistl
sub
adc
mov
and
inc
test
lock
cmp
cmp
jmp
add
notb
and
lret
ret
sbb
ss
dec
mov
xlat
xchg
insl
out
repz
int
aas
mov
addl
xchg
push
in
movsl
loop
jl
inc
ret
jecxz
pop
mov
loope
insb
and
and
cmc
xor
jo
pop
pop
inc
test
test
in
pushf
and
inc
jle
fwait
dec
mov
pop
int
push
sbb
mov
adc
outsl
push
pop
nopl
repz
pop
jb
idivl
sarb
nop
mov
fimuls
add
jnp
loopne
repnz
add
jo
xchg
sub
cltd
jb
in
xchg
jbe
xor
call
into
xchg
sub
fs
ret
push
push
sbb
jecxz
dec
xchg
hlt
inc
fisubrs
movsw
adc
xor
pop
adc
cmp
clc
lds
sbb
out
mov
cmp
or
fistpl
jo
sbb
inc
adc
fst
jmp
push
hlt
cmp
je
pop
and
lds
enter
and
mov
inc
xchg
mov
int3
mov
jp
add
sub
lret
pop
xor
out
push
pop
mov
ret
xchg
out
ss
xor
stos
jne
pop
add
inc
icebp
mov
push
sbb
sbb
outsl
pop
pop
das
insl
ja
push
daa
pop
add
leave
jg
jne
pushf
jge
loop
adc
daa
sub
mov
xchg
fdivr
hlt
jg
sbb
pop
in
stc
jg
add
and
int
or
mulps
cmpsb
cs
jb
aam
pop
cli
dec
test
fldcw
repnz
mov
xor
jb
stos
cmp
jne
or
mov
negl
mov
jbe
aas
pop
add
cli
pop
or
into
cltd
jge
mov
push
or
xchg
in
mov
nop
mov
jbe
sahf
mov
int
cmp
mov
xor
insl
negb
lods
loop
sub
adc
lods
lds
dec
sbb
mov
dec
mov
xchg
and
mov
or
adc
cmp
bound
cwtl
sbb
and
pop
cwtl
xchg
rorl
push
imul
lret
mov
popa
mov
mov
inc
mov
xlat
inc
ss
pop
inc
or
sub
add
ss
mov
daa
cmp
in
dec
imul
and
or
mov
xor
sub
push
std
jl
clc
mov
push
ja
call
repz
int
jg
sbb
ja
enter
and
cmp
fwait
sbb
push
pushf
das
repnz
rol
ss
add
loope
lahf
cs
insb
push
dec
psadbw
jle
adc
and
or
adc
ss
addl
push
call
call
lods
cmp
mov
xchg
lret
dec
enter
icebp
daa
pop
push
xor
movsl
and
mov
outsb
push
mov
mov
loope
push
in
mov
cli
pop
cld
pop
int3
das
stos
xchg
xor
rol
or
mov
test
movsl
and
insl
ret
pop
dec
fcmove
add
cs
pusha
loope
scas
sbb
xchg
fdivr
jmp
push
idivb
fldl
cs
mov
popa
lds
dec
testb
shll
mov
add
adc
hlt
jbe
cld
mov
iret
lret
mov
iret
in
dec
cmp
mov
jle
mov
sbb
pop
lret
leave
xchg
out
add
pop
pop
aas
dec
data16
out
inc
pop
cmp
dec
cmpsl
ljmp
and
mov
sub
add
mov
mov
pop
xor
or
sbb
push
in
and
sar
mov
int3
cmp
sbb
clc
arpl
rorl
jae
leave
xor
hlt
fistps
fdivrl
in
jnp
xor
mov
or
outsb
jecxz
repz
ret
sbb
aad
xchg
fsubrs
mov
mov
gs
push
pop
mov
lock
inc
fstpl
jmp
mov
mov
mov
lods
inc
int3
fldcw
lcall
das
loope
or
inc
add
outsb
nop
and
ret
sar
push
bound
jbe
pop
pop
add
dec
imull
out
fwait
mov
pop
push
jp
mov
mov
and
shlb
jo
loope
sbb
insl
mov
or
mov
fs
paddsb
push
shlb
mov
shl
call
jno
or
imul
int3
dec
xlat
mov
mov
pop
shlb
stos
cmp
out
scas
xchg
mov
cmp
jbe
test
cmpsl
mov
ljmp
sbb
push
movsb
es
jo
mov
sub
pop
mov
pusha
push
push
loope
fiaddl
lcall
add
add
rcrb
push
add
enter
push
ror
inc
mov
or
pop
jae
dec
shll
xchg
mov
cli
mov
stos
push
push
dec
push
notl
into
mov
and
sbb
loopne
idivl
int3
loopne
cmp
nop
sarb
stos
cmp
outsb
add
mov
scas
sarb
jnp
insb
sbb
push
je
cwtl
out
mov
jmp
or
add
pop
je
dec
mov
pop
jnp
movsl
or
mov
jecxz
xchg
cmp
pusha
cmp
mov
daa
xchg
stc
out
or
jp
es
aaa
adc
cmp
jg
or
mov
aas
fcoms
add
aaa
leave
xchg
inc
xor
xchg
cmp
or
leave
sub
mov
push
or
std
push
movsb
sub
push
es
xchg
mov
addr16
jae
and
call
aaa
dec
jb
ja
cmpb
in
mov
push
subl
insb
imul
inc
dec
cltd
outsb
std
push
and
sbb
mov
and
inc
dec
add
stc
aam
ljmp
push
inc
xor
or
jmp
out
adc
fs
ljmp
gs
xchg
xchg
mov
push
push
rcrb
xorl
call
jae
inc
lahf
add
in
pop
jle
cwtl
mov
mov
push
call
std
mov
sub
sbb
jo
lods
adc
push
pop
fsubr
subl
sub
adc
xor
jno
adc
into
fldlg2
int
and
pop
jmp
test
dec
flds
lret
mov
aad
push
cltd
push
jmp
repz
adc
adc
mov
int
stos
mov
outsl
popl
movsl
xchg
add
test
cli
push
xlat
or
ret
cmp
idivb
and
inc
or
aam
inc
xlat
fldenv
jg
xchg
enter
jb
vrsqrtss
shrb
lret
sbbl
ret
addr16
sbb
xor
popa
mov
sbb
sbb
or
sub
adc
sbb
rcr
sub
pop
loopne
xchg
rolb
jge
jne
je
stos
xchg
xchg
sbb
idivl
cld
mov
or
mov
or
test
das
inc
repnz
push
call
xchg
pop
cs
xchg
aas
mov
push
std
in
add
pop
push
push
addr16
sarl
adc
jne
js
push
push
cmp
mov
les
dec
scas
scas
popf
push
inc
outsb
add
jne
push
pushf
and
mov
das
jmp
cmovg
clc
lret
std
push
mov
mov
pop
mov
mov
pop
or
stc
push
fwait
inc
xchg
and
call
xor
gs
loop
mov
and
and
mov
out
sbb
sub
mov
inc
dec
jp
idivl
push
leave
xor
push
cmpb
push
orl
sahf
sbb
lods
inc
aaa
sub
push
xchg
pop
test
fadds
sbbl
xchg
fiadds
test
stos
mov
ss
add
shrl
int
mov
adc
lods
cmpsl
in
shlb
push
sahf
sbb
arpl
dec
xchg
insb
enter
clc
mov
or
stos
fidivrs
mov
imul
jne
das
mov
iret
adc
jb
cmp
ret
aam
das
xchg
pop
pop
fmul
sti
orb
mov
lods
cli
adc
fs
aas
cmp
and
cmp
imul
jne
lods
mov
lods
shr
iret
xlat
imul
xchg
dec
clc
xchg
movsl
test
aas
add
ja
pop
cltd
and
daa
xor
xor
out
mov
jge
push
inc
push
pop
aaa
sub
fwait
xchg
or
lods
pusha
adc
nop
xchg
inc
sahf
pop
loope
cmc
push
mov
test
pop
mov
xchg
notl
cmp
add
cltd
sbb
push
xchg
mov
sarl
jns
lock
push
scas
push
aaa
cltd
sub
mov
xchg
sub
ror
gs
dec
fcmove
push
cmc
mov
push
jo
std
shl
ja
pop
cmp
sub
out
cltd
adc
pop
out
in
pop
pop
lods
vdivps
data16
inc
dec
fldt
sbb
mov
cs
les
mov
dec
cmp
mov
pop
rcrb
cltd
sbb
and
jae
cld
cmp
scas
les
cld
mov
icebp
enter
fnstcw
jne
test
inc
jmp
ljmp
imul
add
jns
loop
int3
xchg
cli
mov
sub
dec
cs
add
in
cmpsl
bound
add
int
sbb
dec
cmp
inc
mov
cltd
pop
sbb
hlt
lods
shrl
xchg
push
loop
bound
das
lea
out
pusha
jl
xchg
test
mov
mov
jne
lock
push
and
add
push
fsubr
xlat
push
scas
cmp
lock
jmp
push
mov
add
adc
mov
push
dec
adc
maskmovq
mull
and
mov
cmpl
sbb
adc
mov
jmp
jo
mov
mov
dec
xchg
push
add
add
cmpsl
aaa
sbb
dec
or
fdiv
fistl
and
out
pop
daa
nop
test
push
add
hlt
mov
sbb
jne
movaps
insb
int3
cli
push
jnp
mov
add
sub
aad
inc
cmp
inc
pop
cmc
repz
rsqrtps
into
cmc
mov
xchg
and
in
cmp
or
icebp
lahf
mov
xchg
jae
clc
dec
jmp
xchg
xorl
jne
cs
fisttpl
mov
mov
cld
es
insb
fidivrs
clc
sahf
push
ret
out
xlat
insb
jb
sahf
imulb
sub
inc
xor
jne
jle
repnz
enter
add
in
sub
push
jecxz
jmp
add
hlt
xchg
and
bnd
jge
mov
les
fiadds
add
imul
sub
inc
jg
lcall
aaa
dec
rcrb
jecxz
mov
mov
dec
mov
mov
repnz
sub
clc
lea
imul
es
popf
mov
pop
mov
iret
and
lods
mov
push
adc
clc
sbb
inc
fnstsw
test
pop
sub
in
push
int
sbb
loop
lods
sub
push
add
inc
mov
lods
mov
jnp
inc
adc
sarl
fdivrl
inc
popf
lahf
rclb
cld
stc
bound
cmpsb
repz
insb
jge
jns
cli
sub
aam
sti
xchg
jge
inc
nop
jle
mov
jbe
int3
cmc
sbb
das
and
mov
or
and
sahf
cmp
std
in
cmp
mov
mov
jl
mov
mov
push
add
lods
stos
popa
in
out
push
scas
sbb
xchg
repnz
movntq
sub
mov
and
loop
add
imul
push
add
mov
add
add
lret
imul
clc
test
hlt
jbe
pop
sbb
fmul
add
aaa
lret
hlt
loop
loop
push
lahf
xor
mov
cmp
cmp
mov
push
stos
cmp
lods
mov
xchg
test
sub
or
inc
mov
lds
jne
in
call
test
inc
dec
psubusb
inc
out
add
aad
and
mov
push
pop
mov
mov
jno
outsl
sbb
or
push
cmp
sbb
and
dec
sub
jle
ds
insb
mov
ljmp
or
pop
inc
pop
loop
clc
sbbl
fcomp
mov
sub
fdivs
sub
fbld
mov
fcoms
loop
addr16
dec
sbb
orb
icebp
jmp
add
test
lret
lock
pusha
xor
sub
dec
mov
loopne
lret
mov
add
jne
daa
data16
jae
adc
pop
lahf
sub
dec
cwtl
imul
xor
sub
enter
push
outsb
aaa
pop
sub
leave
jg
shlb
jmp
mov
add
xchg
pop
mov
je
pop
jns
jge
xchg
jmp
adc
in
add
push
jo
and
out
push
mov
dec
dec
ret
sbb
je
int3
sbb
mov
call
cmpl
mov
shlb
xchg
inc
shl
in
inc
out
clc
xchg
push
fcoml
gs
je
jnp
mov
popl
adc
cs
dec
bound
sub
les
pop
popa
test
xchg
xchg
test
inc
loop
mov
insb
cmp
dec
mov
std
cmp
fnstsw
mov
sub
xor
movsb
std
in
mov
mov
mov
xlat
sub
mov
pop
orl
lock
leave
pop
lea
enter
scas
mov
pusha
inc
arpl
into
push
push
es
xor
lret
stos
test
inc
jle
lcall
xor
jecxz
and
cmp
add
push
mov
mov
ret
ds
fldenv
push
mov
cmpsb
test
dec
push
out
out
adc
xlat
jl
mov
cmp
icebp
sub
repnz
pop
inc
xchg
int
lods
jg
adc
movsb
push
aaa
enter
into
fisubl
std
insb
popa
arpl
mov
xchg
iret
jae
mov
jae
in
mov
jnp
pusha
adc
insb
mov
cmp
cli
or
aad
mov
rcrb
push
nop
inc
mov
lds
fbstp
test
xchg
in
mov
add
sbb
iret
fucom
popf
push
jne
mov
mov
pop
jnp
or
loopne
psubb
and
lahf
shrl
xlat
sahf
fadd
pop
adc
and
xor
inc
ss
dec
pop
cli
movsl
cmp
fwait
ja
add
cltd
xor
inc
lcall
pusha
dec
dec
cmpsl
aaa
lret
data16
xchg
out
dec
dec
je
test
pop
out
icebp
or
push
cld
mov
lcall
popf
notl
xchg
mov
dec
fisttpl
jmp
sub
rol
push
mov
jle
cmpsl
mov
out
sbb
aam
stos
sub
fistps
and
sub
xchg
int
or
ljmp
aas
jne
xchg
sbb
cmpsb
jp
xor
cmp
shll
imul
cmc
fadds
and
jge
dec
xchg
outsb
or
add
loopne
dec
add
mov
xor
cmpsb
imul
hlt
cmp
sbb
incb
mov
aam
or
add
mov
lods
xor
sti
mov
and
sbb
sbb
out
mov
imul
inc
push
ds
push
push
mov
aad
pop
and
pop
mov
inc
gs
push
pop
dec
push
xor
inc
push
adcl
add
or
bound
inc
mov
xchg
data16
xchg
mov
sub
dec
jmp
mov
jle
cmp
sbb
daa
lea
cwtl
or
test
cld
cmp
into
dec
out
das
pop
sbb
mov
pop
int
mov
xchg
inc
dec
dec
xchg
fsubs
aam
cmp
jl
or
es
subb
push
xchg
std
imul
push
gs
inc
sti
adc
pop
mov
not
jo
repnz
fimuls
movsl
jae
sub
cmp
insb
divb
addr16
mov
sbb
stos
nop
das
xlat
cld
mull
and
call
jmp
nop
ja
mov
add
sti
les
nop
and
adc
imul
mov
popa
dec
and
cmp
testl
mov
jmp
push
subb
sbb
out
and
notb
shll
inc
div
xor
mov
aaa
adc
push
xchg
js
xchg
cmp
cmp
int3
xlat
push
jmp
in
pop
lcall
inc
adc
clc
pmullw
fucomi
addb
cmc
mov
inc
jp
mov
lret
scas
xor
out
insl
movsb
movsb
in
pushf
mov
jnp
ret
lret
lcall
aas
mov
shr
aam
cltd
outsl
lcall
mov
push
jns
dec
xchg
lods
mov
scas
dec
fistps
jnp
popl
sbb
push
cmp
xchg
push
data16
xor
imul
inc
loop
add
daa
adcb
and
stc
mov
fmull
inc
jae
daa
inc
mov
stos
jae
jp
jl
outsb
push
in
loopne
inc
cmp
jns
adc
rorb
aad
inc
cmpsb
repnz
int3
sub
fildll
sub
or
popa
js
xlat
rcl
push
add
leave
push
mov
shll
push
jbe
inc
scas
or
and
fistl
in
and
mov
scas
cmpsb
mov
mov
call
fildll
dec
inc
mov
ret
lods
jle
or
sub
pop
xchg
fmuls
or
sbb
mov
add
aaa
mov
jo
cmp
test
sbb
inc
mov
daa
imul
push
dec
mov
in
or
cs
in
enter
mov
inc
inc
sub
jp
mov
in
sub
dec
ret
mov
jnp
jne
jg
push
bound
pop
xorb
fs
xor
add
inc
outsb
data16
mov
leave
es
dec
add
ja
xor
filds
xchg
or
jp
jmp
test
adc
inc
int
adcl
imul
cmp
jg
iret
mov
imul
sbb
and
imul
push
xor
jo
scas
mov
sbb
xor
outsb
push
imul
outsl
dec
or
pop
jl
inc
cmp
jmp
cli
lcall
testl
aad
rcl
inc
jp
movb
imul
inc
out
sub
cmp
push
dec
mov
outsl
pop
and
add
sub
mov
outsb
insl
insl
or
fcoml
scas
mov
repnz
jge
push
add
push
and
inc
popa
mov
aaa
mov
imul
cmp
aam
mov
or
ret
inc
xchg
out
xchg
cwtl
lock
and
ja
push
test
cltd
inc
fsubrs
insl
fmuls
scas
aam
push
mov
push
movsl
dec
fisubs
ss
out
popf
xlat
outsb
fadd
inc
pop
or
fwait
out
cwtl
mov
add
fisubs
stc
notb
scas
sub
les
mov
push
loop
cmp
mov
or
fildll
jmp
push
nop
stc
into
cld
shl
jg
sbb
inc
aas
mov
rcrl
push
rcl
xor
sbb
lahf
sbb
ss
out
sub
cld
in
ret
cmp
fstpt
mov
popf
jnp
cmp
jbe
gs
xor
inc
pushf
jge
or
jne
pop
push
push
enter
xchg
push
iret
pushf
inc
cmpb
push
out
sbb
in
stos
or
ja
out
mov
xor
inc
xchg
in
in
insb
int
push
pop
aaa
in
mov
jl
cmp
jno
scas
lret
xchg
cmp
scas
pop
dec
pop
inc
fbstp
xor
js
inc
add
mov
push
loope
arpl
insb
pushf
push
jne
xor
repz
movsl
pop
push
lcallw
adc
stc
xor
scas
int3
stc
or
out
add
outsl
push
stos
in
xchg
xlat
out
ficoml
jns
jmpw
pop
dec
out
mov
out
xor
cmp
xchg
lret
dec
sbb
shrb
fmull
jne
xchg
xor
clc
outsl
bound
int3
xchg
ss
int
xor
cmpsl
aaa
push
sbb
daa
fs
orb
jmp
cltd
mov
cli
test
mov
fldenv
shll
push
add
js
mov
aas
dec
sbbl
fldt
loope
mov
in
loopne
ret
int3
cli
cwtl
mov
xchg
pop
popf
xor
aas
sbbb
inc
inc
or
mov
cmpsb
and
mov
adc
pusha
daa
ja
aam
das
dec
testl
mov
test
loop
into
test
and
test
mov
adc
push
xchg
arpl
nop
sub
mov
into
ss
dec
or
jle
inc
ret
cmp
mov
jo
jge
fldt
pushf
jl
nop
xchg
jge
mov
out
dec
iret
xor
and
jmp
cmc
mov
cltd
xchg
lret
or
push
movsl
nop
mov
out
xor
sbb
and
fmulp
test
data16
adc
fiadds
orl
sub
sub
loop
mov
mov
es
cli
ss
gs
call
jnp
sbb
shll
push
in
cmp
or
out
fisubrl
int3
xchg
dec
arpl
dec
pop
mov
cmpsb
leave
negl
out
shl
mov
xchg
arpl
dec
dec
cmpsl
push
mov
int3
dec
xor
lea
fsts
pusha
mov
aad
aaa
aaa
dec
lock
jle
add
out
test
ret
movsb
inc
outsb
loop
jnp
xchg
iret
insl
add
xor
lds
adc
orl
int3
jmp
out
mov
loopne
mov
adc
xor
jno
jmp
dec
and
or
hlt
or
rolb
push
aaa
arpl
ds
int
insl
shll
sub
scas
sarb
add
xchg
xchg
mov
xchg
aaa
cwtl
cwtl
sar
adc
leave
mov
adc
cmp
stos
adc
aas
cs
xor
add
shll
pop
enter
sub
mov
mov
int3
cmpsb
mov
mov
fnstenv
mov
and
or
mov
cld
xor
mov
les
mov
aad
loopne
cmc
or
sub
pop
pop
fcomps
mov
inc
ss
int
inc
jge
cmc
fcoms
lds
rcrl
mov
dec
aaa
add
push
push
xchg
out
pop
pop
in
push
jmp
vmovq
roll
sub
push
and
fwait
mov
inc
fwait
xchg
mov
mov
aam
push
out
jae
push
sub
jnp
stos
sub
rcr
imul
paddd
jae
and
scas
lea
jb
and
jbe
xor
inc
sahf
add
fldcw
out
or
sar
push
inc
loope
lret
popa
mov
in
out
cmp
imul
push
jmp
pop
and
je
push
xchg
cltd
jecxz
adc
dec
push
std
fldenv
and
addr16
mov
pop
aaa
fcomps
xchg
mov
mov
in
mov
xor
inc
dec
add
pop
pop
loopne
cmp
mov
call
push
mov
rolb
fidivs
adc
imul
add
aam
adc
jecxz
inc
out
push
add
pop
inc
jnp
lret
sahf
and
mov
movsl
in
stc
fstp
jo
or
mov
push
push
xor
mov
push
push
sub
ljmp
mov
lods
or
mov
push
push
and
mov
sbb
add
ljmp
jg
push
test
pop
repnz
repnz
mov
mov
inc
lea
movsb
push
dec
mov
inc
in
or
lods
jne
insl
sbbl
je
lea
pop
mov
cmp
pop
aam
cwtl
nop
jno
dec
movsl
int3
and
loop
pop
xchg
fldcw
mov
cmc
mov
popf
inc
ljmp
and
sbb
insb
fistpl
insb
mov
push
jbe
or
pop
sbb
sahf
mov
xor
jmp
and
xchg
push
cmp
cmp
xchg
icebp
sub
orb
sbb
aaa
negb
aas
iret
adc
out
imul
cmp
pushl
xor
bound
test
mov
dec
call
ss
iret
in
pop
popa
leave
out
sbb
mov
sub
scas
sbb
push
pop
xor
or
mov
test
adc
mov
mov
xchg
xor
jle
sub
in
mov
mov
push
mov
mov
pop
xchg
in
btc
test
lods
das
nop
fistps
ljmp
aad
inc
mov
mov
repz
aaa
js
sti
xchg
sub
mov
cwtl
shlb
lret
lret
jnp
ljmp
lahf
out
outsb
repnz
sbb
in
je
mov
mov
je
out
faddl
push
loopnew
mov
movsl
push
out
loopne
int
sub
leave
cld
cltd
cmc
push
adcl
mov
pop
insb
es
xchg
xchg
ret
shrb
cmpsl
mov
jno
ret
sbb
mov
push
dec
mov
psubusw
fcompl
ror
jmp
jle
mov
sub
xchg
push
in
adc
inc
cmc
mov
xor
in
int
rolb
and
xchg
or
pop
jne
fisubrl
insl
aad
cmp
mov
adc
into
into
cmp
ja
and
std
int3
mov
sarl
xor
pop
mov
xchg
xchg
cltd
fwait
pop
dec
sarl
es
rcll
inc
mov
cld
test
jae
pop
test
and
imul
jge
cmc
addr16
dec
xchg
test
shll
pop
or
adc
mov
cmp
sub
adc
repz
mov
imul
into
fmuls
mov
in
mov
iret
mov
inc
xor
add
xor
cmp
int3
out
pop
rol
adc
or
sbb
sub
ljmp
mov
aas
loop
push
hlt
jge
pushf
xorb
push
jnp
out
push
adc
fsub
inc
jbe
addl
cmp
mov
push
popa
je
mov
mov
or
movsl
lock
in
pop
inc
fistl
call
cmp
xor
or
jno
xchg
int3
push
mov
pop
sub
mov
jmp
shlb
icebp
cmp
sub
inc
into
push
enter
jle
mov
push
mov
mov
adc
mov
or
and
jbe
jmp
adcb
mov
fucomi
and
je
sbb
jg
pop
gs
mov
jno
jmp
lea
js
es
jae
pop
xorps
xchg
inc
stc
arpl
das
inc
and
test
scas
testl
mov
hlt
int3
dec
or
repz
pop
addr16
scas
sahf
xadd
push
add
lods
outsb
in
jecxz
add
sbb
mull
xor
test
lods
xor
jg
inc
xor
cld
ljmp
pushf
pop
pop
insl
adc
adc
xor
push
dec
xor
cwtl
cmp
repnz
inc
mov
in
add
pusha
cmpsb
ret
ret
mov
inc
sbb
out
lcall
movsl
inc
adcl
push
xor
scas
scas
adc
pop
int
out
outsb
jbe
pop
clc
in
dec
mov
jp
and
insl
fnstcw
jle
or
cld
xor
lret
ja
mov
test
hlt
jle
or
and
or
fdivrl
sbb
jne
ljmp
aam
pop
lcall
mov
lock
mov
inc
in
ja
loope
xor
sbb
int3
lret
pop
add
mov
cmc
test
jb
nop
mov
sub
xchg
pushf
pop
hlt
jne
mov
idivb
mov
inc
sbb
scas
enter
stos
into
outsl
dec
sub
push
add
inc
push
rorb
js
adc
mov
daa
test
xchg
iret
rorb
lea
push
pop
stos
sarb
jbe
sub
xor
push
das
mov
pop
jo
dec
pop
xchg
adc
movsb
adc
push
jmp
adc
cmp
daa
leave
adc
push
pop
stos
and
mov
push
leave
sub
inc
clc
loop
test
sub
cmp
push
pusha
arpl
in
rcll
lods
sti
enter
stos
popf
push
sbb
in
cmc
lods
std
std
xchg
sbb
mov
call
enter
sub
in
popf
cmp
jae
xor
sbb
into
push
popf
jbe
iret
xor
sub
push
cmp
into
pop
xchg
mov
push
inc
dec
lea
scas
push
inc
sti
fs
shlb
test
mov
inc
cmpsl
cltd
pop
icebp
mov
dec
ret
out
dec
mov
jae
mov
nop
call
out
jb
xchg
cmp
or
pushf
jnp
sbbl
add
push
add
push
test
aam
or
cli
mov
mov
bound
jg
sahf
push
pop
movsb
sbbb
xchg
dec
inc
cmc
out
dec
push
icebp
test
xor
and
andl
out
rcrb
orl
lods
mov
push
or
test
imul
fmul
cli
popf
mov
or
xchg
mov
cmpb
and
adc
sub
mov
loopne
ljmp
mov
push
test
iret
clc
add
xchg
sbb
popa
icebp
jns
pop
xchg
cmp
xor
sbb
or
mov
call
xor
mov
cmp
xchg
cmp
lods
push
mov
lock
inc
fbld
aas
mov
inc
fimuls
inc
push
mov
cmpsl
movsb
or
mov
sub
xchg
and
fnstsw
cltd
dec
js
arpl
push
dec
or
loopne
dec
cmp
sub
mov
rclb
arpl
jge
js
inc
mov
les
aad
lcall
in
subb
out
stos
loopne
in
int3
ret
aad
jbe,pt
sub
xchg
les
adc
xor
push
pop
ss
xchg
lds
jmp
jo
dec
or
dec
mov
insb
test
mov
or
xchg
mov
mov
mov
mov
mov
or
and
mov
sbb
mov
cmpsl
mov
imul
negl
mov
dec
inc
cltd
dec
sarb
outsb
fs
adc
pushf
sub
ss
push
imul
xlat
pop
sub
or
out
fidivs
push
lea
xor
out
pop
mov
outsl
xchg
js
js
xchg
fimuls
in
and
outsl
mov
lods
fisttps
in
int3
sahf
enter
push
or
mov
jb
lods
dec
lea
adc
outsl
cwtl
adc
sub
sub
pushf
add
movsb
xor
mov
push
mov
gs
mov
xchg
jp
sub
rcll
mov
xchg
push
sti
into
out
mov
push
inc
nop
or
mov
and
repnz
mov
pop
xchg
out
push
popf
imul
icebp
sbb
loope
in
lods
sub
xorb
sahf
cmpsb
dec
cmpsb
xchg
or
or
loope
jns
jno
cli
loope
xor
mov
sub
mov
clc
push
je
shll
pushf
call
pop
or
gs
in
jns
or
mov
pop
movsl
les
sarb
test
lret
jne
adc
ror
push
jg
jnp
icebp
stc
rclb
xchg
mov
into
dec
or
mov
adc
aad
lods
shr
imulb
leave
jp
xchg
lret
aam
fcompp
gs
xor
shlb
imul
and
cmpsb
call
jo
decl
iret
mov
orps
sbb
pop
pop
dec
scas
mov
sub
ds
fildl
sub
pop
js
jnp
push
push
bound
lods
mov
jp
jmp
xchg
jge
scas
mov
in
mov
mov
js
mov
mov
xlat
mov
mov
into
sbb
cwtl
pop
adc
pushf
xor
mov
mov
xchg
adc
adc
lret
jno
repz
test
inc
xor
sbbl
mov
movsb
shr
ret
mov
push
fdivrl
mov
or
mov
sbb
lds
sub
lret
jecxz
mov
mov
mov
mov
into
mov
popf
int3
or
mov
dec
mov
ds
push
sahf
mov
inc
adc
and
in
jae
cmp
addr16
fmul
cmp
dec
nop
mov
cmp
or
popa
in
test
jg
mov
ljmp
push
jo
mov
ds
cwtl
sti
cmp
mov
test
push
lods
dec
rcll
icebp
ret
push
adcb
push
jno
mov
lea
in
sub
sub
ja
cwtl
rcrb
push
hlt
jg
lds
mov
mov
frstor
or
or
aam
leave
mov
and
dec
mov
int
sti
notl
adc
push
push
mov
cwtl
push
std
xor
repnz
arpl
xchg
inc
hlt
movsl
test
and
xchg
shl
jne
loopne,pt
push
pop
aam
dec
scas
jb
add
add
or
cmpsl
pop
inc
sahf
mov
scas
and
dec
out
test
es
test
pop
loopne
mov
iret
xchg
enter
into
lock
inc
outsl
js
adc
jecxz
aad
cmp
inc
movsl
add
mov
push
cmp
cmp
and
lock
ret
shr
xchg
push
inc
dec
fdivs
jnp
cmp
ret
sub
mov
gs
pop
inc
or
and
inc
enter
dec
fmull
scas
jno
push
sub
xlat
mov
add
push
add
out
fildll
repz
jecxz
sbb
mov
pop
and
add
xchg
xor
lret
insb
pop
enter
pop
sub
xlat
xor
popa
cmp
cmpsb
mov
xor
mov
arpl
repz
cmp
adc
jno
xchg
lods
adc
scas
add
sub
sbb
mov
sbb
fsubr
fcomi
int3
insb
cli
je
out
js
push
pop
cmpb
jmp
addl
add
nop
jl
or
ret
xchg
push
pop
sbb
aas
mov
adc
sbb
movsb
rorb
shl
xchg
mov
xchg
mov
dec
jle
jno
adc
ljmp
push
mov
pmaddwd
mov
push
mov
dec
psubd
shrl
sbb
test
in
lods
out
cmp
xor
ds
xchg
xor
gs
inc
lahf
add
push
lcall
out
pop
add
mov
push
bound
test
icebp
std
add
dec
mov
adc
jns
stos
xchg
setp
insl
enter
push
popf
loope
test
or
push
inc
std
fwait
iret
mov
sarb
add
out
shrl
adc
inc
jns
pop
push
or
sub
mov
mov
push
lcall
dec
faddl
inc
pop
adc
daa
push
test
xor
push
cld
or
inc
loop
sti
fbld
push
push
paddusb
inc
movsb
out
adc
inc
es
mov
jmp
pop
outsb
sti
call
imul
cpuid
loopne
mov
rcr
cmpsb
out
cmp
xor
jb
outsl
inc
sbb
cmp
jno
jle
cmpsb
push
imul
test
fcompl
leave
pop
or
mov
cmp
add
adc
dec
sub
cs
pushf
adc
dec
imul
leave
je
lea
daa
roll
in
ret
arpl
andl
fldenv
mov
stc
or
in
subb
bound
aad
arpl
fstps
arpl
cmp
stc
jmp
pop
jno
sbb
scas
inc
pop
mov
cmpsl
adc
imul
mov
add
dec
inc
mov
test
pop
fadds
in
std
adc
and
add
stc
adc
lods
pop
daa
pusha
jp
push
cmc
rsm
arpl
lahf
pop
fst
das
jle
rcrb
lcall
mov
adc
inc
push
out
cmp
mov
sub
mov
test
in
xor
mov
out
mov
leave
dec
das
lods
arpl
or
or
jmp
xchg
and
std
int3
mov
lods
shlb
in
jl
ja
push
orb
cmc
or
dec
adc
addr16
xorb
mov
in
xchg
cmp
jbe
jg
movsb
push
push
addr16
psrlq
test
sbb
sbb
mov
std
inc
or
jno
cmc
sti
aad
jle
out
mov
xor
rcl
xchg
cmp
xchg
dec
jno
mov
mov
lock
lahf
fstpl
sub
sysret
jns
cwtl
cmc
xchg
xchg
ret
popa
jge
cmpsb
into
imul
mov
mov
cmpsl
into
rolb
jecxz
adc
loop
xchg
cmpsb
pop
adc
mov
lret
mov
mov
je
cld
cmp
std
lret
sub
mov
inc
mov
mov
push
jg
subl
pop
outsb
cs
push
jg
ficoml
test
cmpsb
dec
inc
fbld
and
fwait
or
dec
jle
insl
jb
je
xchg
mov
cmp
mov
dec
icebp
adc
mov
sbb
push
cmp
cmp
dec
popl
sahf
scas
in
and
insl
daa
js
loop
or
mov
cmp
xor
mov
inc
mov
lods
pop
and
add
mov
add
sub
sbb
jbe
mov
cmp
mov
mulb
int
mov
jl
aam
mov
jns
cmpsl
xchg
add
adc
sbb
mulb
jae
icebp
lods
cmp
ja
jne
adc
ss
and
push
jbe
mov
or
xchg
stc
xchg
lods
inc
jno
enter
out
jae
sti
outsb
pop
and
fisubrl
push
dec
pop
test
mov
mov
ljmp
arpl
mull
mov
int
cmpsb
fdivl
int
sbb
ret
lret
mov
std
xchg
inc
fsts
rclb
in
jo
or
inc
test
or
sbb
stos
jmp
xor
sbb
ret
xor
fidivl
add
inc
xchg
pop
aad
sub
adc
nop
scas
push
lods
mov
imulb
mov
in
cmpsb
xlat
andb
mov
popf
loopne
adc
popf
mov
lahf
cmpsl
cmp
sub
lea
lcall
jmp
movups
mov
les
dec
inc
inc
decb
pop
dec
lcall
rorb
xor
sahf
adc
repnz
cli
push
jne
xor
ja
dec
inc
jg
scas
inc
cmpb
ds
jno
sbb
clc
pop
das
aad
jns
add
iret
and
fbstp
std
jae
out
sbb
stc
loop
adc
into
mov
xchg
repz
push
aad
mov
xchg
test
outsl
or
mov
xchg
pop
pop
stos
jl
push
jl
mov
inc
pop
jo
fsubl
lds
fs
inc
lods
out
dec
psubd
cmp
ret
ss
push
xchg
dec
jg
mov
add
inc
push
xorb
icebp
fs
shrb
lods
dec
pop
loopne
int
pop
mov
subl
and
adc
or
jno
xor
pop
ss
in
leave
mov
inc
insl
or
mov
popf
shll
xor
mov
out
xor
adc
icebp
fwait
inc
pop
jle
jb
jb
sub
adc
adc
mov
inc
mov
sbb
movsb
test
pop
int
sub
outsl
nop
add
fnop
adc
movsb
mov
out
mov
aas
mov
jl
jb
push
imul
std
sbb
jae
sarb
iret
cmpsb
daa
lcall
test
addr16
lods
inc
cmovl
cmp
xchg
xor
jg
jnp
jecxz
clc
cmp
cmpsl
and
mov
xlat
pusha
lret
popf
and
jne
jbe
cmp
dec
jge
aas
insb
adc
outsb
leave
jle
das
jae
movsbl
dec
sub
aad
daa
insl
sbb
loopne
adc
push
mov
imul
imul
adc
in
out
xlat
sbb
addl
rorl
and
add
sub
dec
xor
and
stc
aaa
lds
jae
add
dec
fimull
addr16
pop
xlat
bound
mov
icebp
cmpxchg
push
faddp
es
sti
jne
stos
ja,pt
adc
jbe
sub
inc
mov
sub
jge
iret
test
jnp
xchg
push
movl
lcall
and
or
or
jmp
pop
repz
cld
mov
std
insl
bound
int3
out
lea
push
xchg
inc
sbb
sub
mov
mov
mov
or
das
je
negb
ret
pushl
pop
out
scas
fidivrs
push
and
adc
mov
dec
and
xchg
test
in
jle
sub
movsl
fcoms
movsb
inc
inc
mov
cmpsb
pop
pop
pop
add
mov
ds
notb
repz
dec
sub
aad
xor
outsb
mov
push
jle
pop
mov
insb
sbb
idiv
imul
sarb
inc
sbb
leave
pop
test
gs
mov
sbb
imulb
ss
cmp
fdivr
jnp
das
cmpsl
mov
out
jns
std
xchg
mov
cmp
jbe
ficoml
inc
sbbl
fstl
bswap
fcmovne
jns
scas
out
into
mov
mov
repz
xor
ss
lea
andl
arpl
mov
cwtl
inc
cli
dec
mov
mov
mov
and
test
mov
leave
ficomps
xchg
pushw
jge
int
xchg
idivl
mov
and
mov
inc
mov
cs
cmc
pop
stc
popf
lahf
sub
pop
jnp
lea
jle
jne
mov
cmpsl
aam
imul
cmp
mov
ret
mov
imulb
test
icebp
push
and
fcomps
insl
cmp
js
jb
lock
mov
push
jle
into
pop
outsb
jns
aas
iret
xchg
cmp
inc
cltd
xchg
and
in
mov
sarl
in
mov
insb
ficompl
xor
out
in
push
wrmsr
sarl
or
xchg
mov
cmp
mov
adc
or
ja
fs
sar
xlat
fidivrs
add
and
nop
jb
aaa
dec
add
xchg
or
adc
and
mov
add
adc
add
std
inc
imul
sub
or
lret
ljmp
cmp
int3
fwait
inc
adc
data16
xchg
add
rcl
bound
nop
stos
aaa
jg
sub
inc
pop
das
and
loop
or
jl
test
filds
mov
cmp
mov
repz
stos
add
std
jo
sbb
jl
sub
jmp
xor
pushf
jne
lret
leave
cmp
mov
aaa
push
shr
in
mov
and
xchg
adcl
psubq
push
lea
stos
iret
dec
pushf
pop
fimuls
leave
and
add
or
test
arpl
adc
arpl
std
loop
cmc
ret
cmpsb
xchg
dec
sub
mov
cmpsl
mov
inc
aad
push
mov
cld
dec
jmp
mov
inc
pop
enter
jecxz
jge
lods
jle
stc
sbb
xlat
mov
sub
sbb
jle
mov
pop
in
dec
mov
call
in
ficoml
xlat
push
nop
pusha
xlat
push
push
lcall
iret
jmp
jle
xchg
mov
mov
xchg
cmp
dec
cs
cmc
push
or
mov
pop
jb
in
dec
fdivrl
lock
and
in
cmpl
add
pop
push
lea
pop
xor
cmp
pop
pop
push
mov
fwait
inc
mov
mov
out
cltd
mov
xor
xor
and
mov
mov
js
lods
mov
test
inc
aas
les
sub
fdivrs
xchg
sti
mov
pop
xlat
pop
sub
adc
lods
inc
sahf
jno
lret
inc
hlt
sub
pop
shl
insb
out
nop
jae
in
sub
jae
push
mov
sub
jle
sub
movsl
stc
cltd
or
lcall
into
lods
and
add
repz
stos
or
mov
dec
ror
push
dec
outsb
mov
add
sbb
test
or
sbb
and
pop
out
insl
int3
cmp
inc
je
lcall
cld
or
mov
fmuls
incl
insl
cmpsl
in
or
push
cmp
push
or
xchg
push
aam
ja
fsubrs
pop
int3
aad
mov
xorb
pop
popa
repz
ret
mov
insb
daa
push
fisttps
cli
sbb
mov
lret
mov
imul
jnp
ljmp
jo
mov
les
xchg
test
pop
out
imul
out
in
xchg
shrl
nop
cmp
mov
jl
test
inc
outsl
lret
dec
insl
sti
test
clc
pop
imul
mov
addl
mov
in
lcall
icebp
std
mov
insb
shrb
in
push
pop
cmpsl
aam
mov
cmp
xor
hlt
xchg
xchg
inc
push
xor
icebp
jmp
cld
xor
pop
pop
xchg
inc
addr16
movb
stos
jns
or
jae
repnz
inc
pop
pop
int3
ljmp
add
loope
push
inc
pop
lahf
dec
std
push
pop
arpl
or
pop
int
sbb
mov
mov
pop
ret
shlb
pop
js
mov
inc
lds
pusha
push
push
fcmovnu
sub
push
in
test
lock
or
cmpl
push
cmc
push
mov
cmp
jb
inc
in
out
icebp
sub
or
jl
push
aaa
std
loope
imul
pop
jmp
outsl
mov
sub
test
aaa
dec
int3
and
xor
outsl
cltd
sbb
fdivs
es
mov
repz
adc
addr16
dec
dec
test
imul
sub
mov
imul
outsb
cmp
rcl
mov
jecxz
xchg
insb
hlt
push
pop
popa
dec
adc
mov
cmp
cmovae
xchg
in
sub
cmpsl
repz
lcall
pusha
pop
jl
mov
adc
bound
cmp
dec
mov
pop
sbb
shrb
ds
imul
out
orb
xchg
scas
stc
loopne
mov
add
add
jb
pop
ja
jo
cmpsb
dec
and
mov
mov
scas
leave
sbb
add
es
nop
aas
dec
scas
push
inc
xchg
mov
inc
js
aam
call
popf
rcrl
icebp
enter
jge
pusha
ficomps
dec
sahf
enter
jns
lods
mov
xor
imul
stos
loope
orl
lea
nop
cltd
movsb
xchg
jnp
pop
push
jne
mov
dec
sub
jae
fildll
imul
int
repnz
test
dec
add
xor
mov
xchg
jg
or
mov
call
test
inc
add
sub
scas
jecxz
xchg
sub
or
mov
out
int3
jl
adc
push
pop
leave
insl
jno
loopne
push
jae
popf
jg
mov
shrb
call
test
lret
sub
cmpsl
nop
pop
lret
roll
loop
xor
sbb
xor
jecxz
sbbb
pop
mov
cmp
cmp
shrb
cmp
gs
push
arpl
mov
and
cltd
add
add
mov
jle
xor
rclb
rcll
mov
fldcw
sub
out
pop
cltd
cmp
or
mov
out
jne
shrl
add
fldl
iret
xor
fdivrp
sarl
out
xor
lahf
jecxz
add
mov
pushf
iret
fmul
rorb
shll
add
xor
mov
mov
xchg
pop
pop
mov
stc
mov
loope
prefetcht2
es
pop
and
mov
mov
hlt
mov
or
in
jl
and
add
cmp
std
sbb
cmp
lds
outsb
addr16
mov
jbe
cmpb
xor
movsb
rclb
sahf
rorl
idiv
cmp
aas
push
add
cmpsb
add
or
cwtl
jle
icebp
and
mov
mov
pop
stc
bound
push
call
pop
xchg
mov
xchg
and
lcall
jmp
js
leave
cltd
jbe
clc
sub
pop
push
mov
lret
pop
or
pushf
inc
pop
daa
lods
mov
cmpsb
pop
inc
sub
add
cmp
stos
nop
movsl
stos
es
aas
sarb
mov
fisubs
scas
cltd
pop
jp
mov
mov
lods
pop
xor
shlb
ja
jae
pop
cmp
adcb
jno
jb
into
jg
and
popl
cltd
ret
sahf
lret
adc
inc
dec
dec
xchg
lods
lods
push
cmpsw
mov
loope
cli
mov
xor
xor
mov
sub
fnstenv
fsubl
push
mov
xor
ret
cmc
mov
sbb
cmp
dec
icebp
ds
out
test
mov
mov
pop
mov
jle
int3
jle
lods
mov
aam
dec
repz
sbb
lret
mov
ja
lods
inc
scas
mov
inc
inc
adc
ss
sbb
or
sbb
stos
sbb
js
pusha
in
push
jl
lods
add
fstpl
mov
push
ds
testb
data16
mov
je
inc
pop
out
xchg
addb
mov
pop
and
inc
or
cmpsl
add
out
in
and
xor
inc
push
sti
fildl
xchg
sbb
dec
fstl
dec
lret
popa
test
xchg
push
jno
sbb
stos
push
jp
shrb
ljmp
subl
roll
dec
mov
push
mov
jno
xor
inc
subl
push
cs
out
mov
xchg
add
dec
icebp
iret
arpl
sbb
xorb
adc
inc
xor
aad
inc
sbb
adc
lock
iret
xchg
jno
inc
add
lret
icebp
mov
out
lea
dec
sub
mov
push
scas
lahf
testb
mov
gs
push
inc
mull
mov
jae
push
lret
dec
sbb
push
data16
aas
lods
loopne
sub
fistps
push
add
push
or
inc
xor
push
sbbb
in
ljmp
mov
dec
jbe
jecxz
xlat
push
mov
nop
xchg
in
or
sahf
test
push
aam
add
loope
lahf
jno
sbb
dec
test
lock
stos
mov
imul
push
or
or
ljmp
sub
popl
xor
xchg
imul
cwtl
loope
ror
rcrl
subl
mov
xor
xchg
pop
das
dec
fdivr
push
pop
popa
or
popf
sub
nopl
dec
push
daa
xor
ret
mov
sbb
jns
xor
mov
insl
push
dec
stos
sub
test
and
dec
dec
fistps
pop
and
mov
pop
test
dec
es
mov
or
adc
pop
fimull
es
mov
jl
popf
out
dec
sti
mov
cmp
bound
mov
add
das
lock
jmp
mov
les
xchg
in
int
jp
insb
sarb
push
ljmp
jge
mov
fcompl
jns
inc
xchg
imul
arpl
cwtl
jae
outsb
or
sbb
out
mov
in
cmp
movsb
ja
aad
sbb
scas
addr16
jno
xchg
jp
mull
xor
out
cmc
adc
pop
cld
push
bound
add
pop
xchg
jge
cmpsl
mov
mov
hlt
jle
into
aad
in
inc
mov
pop
cmp
mov
inc
repz
leave
loope
mov
mov
filds
mov
test
or
fildll
aas
jne
gs
add
loopne
aam
mov
jge
fwait
loop
gs
data16
mov
outsb
cmpsl
adcb
test
mov
push
pushf
ja
ss
xor
pop
fistpl
inc
inc
cmp
fildll
push
sub
xchg
mov
add
pop
mov
pop
lock
push
cwtl
das
in
sub
lea
sbb
jae
xor
jle
or
and
jecxz
rorl
or
jp
mov
data16
lods
shlb
push
dec
xor
fidivrs
mov
ds
dec
lgdtl
inc
pop
into
mov
add
jo
in
mov
aaa
mov
xor
mov
or
test
sbb
xchg
or
iret
mull
aam
nop
adc
fwait
insl
mov
ljmp
lock
push
and
mov
jle
enter
mov
iret
pop
pop
push
or
or
aad
lock
cltd
push
cmp
or
js
adc
fwait
sahf
scas
jmp
pop
test
cltd
dec
and
inc
add
aaa
clc
movsb
test
mov
sbb
jmp
add
clc
in
xlat
xchg
jp
mov
xchg
into
or
arpl
lds
inc
add
or
roll
xlat
push
jecxz
mov
lret
jle
aad
cli
fnstsw
add
pop
addb
sub
xchg
and
xor
push
pushf
mov
sbb
mov
sbb
bound
ds
rcr
xchg
xchg
outsb
lret
mov
inc
sbb
daa
dec
outsb
xlat
push
adc
decb
stc
pusha
dec
cmpsl
cmp
shll
dec
insb
cmp
and
sub
mov
hlt
dec
pop
aas
iret
pop
or
push
sti
pop
mov
test
push
mov
inc
cmpsl
adcl
inc
jno
sub
test
mov
jge
loop
jns
int
popf
mov
xchg
jbe,pn
xor
xor
dec
and
ss
mov
pop
mov
sub
enter
or
cmpsl
mov
rorl
gs
xor
add
and
mov
ret
push
xor
add
mov
test
inc
mov
call
lret
lcall
xor
pop
xor
inc
dec
loop
or
lods
lods
aad
cmpsb
nop
lcall
dec
mov
stos
insb
cltd
imul
sub
dec
inc
pop
mov
xchg
xor
push
sbbl
pop
dec
sbb
dec
out
inc
andb
js
cmp
cwtl
xor
dec
in
clc
outsb
mov
fisubrl
test
mov
sbb
jmp
or
fcomps
dec
pop
shrb
lea
xor
fstpl
movnti
cmpsl
in
mov
xor
xor
xchg
mulb
pop
or
rcr
clc
dec
movsb
sbb
mov
add
mov
inc
insl
mov
repnz
insl
xchg
popf
dec
xchg
jo
or
aaa
xchg
insl
fidivs
ljmp
sub
insb
pop
xor
gs
pop
hlt
mov
lds
jle
lahf
lret
call
push
mov
dec
mov
jecxz
ja
inc
xor
xor
mov
mov
cwtl
aaa
cltd
xor
or
ja
popa
push
add
and
jge
push
adc
push
xor
jo
dec
lds
lcall
pop
std
mulb
cld
mov
fsubr
push
xchg
sub
pop
jns
sbb
stc
shlb
push
je
int
shll
clc
out
sbb
xor
or
mov
jl
push
sub
push
jle
out
xchg
mov
enter
xchg
and
and
xchg
outsl
cmpsb
xchg
inc
add
in
out
aaa
jg
or
int
jns
fildll
inc
jnp
lcall
inc
or
cwtl
mov
pop
sub
and
add
sbb
add
xor
pop
adc
adcl
cwtl
xor
mov
ljmp
mov
xchg
dec
mov
add
mov
fiaddl
cmp
inc
rcrb
jnp
popa
mov
loopne
sub
mov
xor
xor
mov
adc
xchg
arpl
shlb
shl
arpl
out
out
mov
loope
int3
ja
rorb
xchg
repz
sub
test
mov
test
dec
push
jno
mov
bound
ret
dec
shrl
das
fdivrs
ja
in
cmp
or
jmp
mov
pop
xchg
int
jnp
and
loope
imul
lcall
in
adc
xlat
int
mov
jo
inc
pop
inc
push
add
jle
arpl
shlb
incl
leave
cmp
pop
mov
inc
mov
cmp
xorb
addr16
cmp
dec
negl
outsl
outsb
sti
sbb
cmp
jnp
leave
cmpsb
cmpsb
jecxz
or
ss
fnstenv
icebp
lock
xor
cltd
rolb
sub
or
fdivp
stc
outsb
mov
mov
in
popa
pop
xchg
mov
mov
mov
push
outsl
sbb
fidivrl
addr16
xchg
mov
fisttps
adc
pop
push
or
ret
cmp
inc
and
fcoml
aaa
cmpsl
adc
cld
loop
scas
pop
jge
mov
cld
inc
ficoml
sti
je
cmpsb
xchg
or
int
xchg
xchg
fs
gs
aaa
adc
sbb
rorb
push
stos
mov
aam
hlt
loope
push
popa
xchg
pop
js
shll
adc
int3
push
stc
or
pop
xor
andl
cmpsb
sbb
or
mov
push
pop
pop
xlat
jl
pop
push
lret
repz
dec
roll
icebp
in
cmp
mov
test
mov
js
jne
jnp
jg
jne
popf
add
call
pop
call
and
outsb
push
mov
popa
test
inc
xor
adc
jle
xchg
fs
xor
outsb
scas
pop
orl
mov
sbb
aaa
adc
xorb
enter
jne
in
mov
call
hlt
jno
int
sbb
cmp
pop
mov
cwtl
cli
xchg
cld
jb
mov
divl
push
leave
lahf
jl
xchg
aad
imul
mov
neg
adc
push
movsb
out
pop
cli
out
lods
dec
mov
imul
or
das
fs
mov
push
jl
push
push
dec
xchg
cmpsb
stos
ds
fstl
je
addb
cmp
cmp
push
pusha
xchg
lret
fs
jl
lods
jae
mov
movsl
jbe
ret
or
sbb
push
push
cmp
mov
mov
push
fcoms
push
jp
fnstcw
xchg
jae
lock
sub
mov
jns
mov
scas
or
cmpl
popf
xchg
mov
es
nop
push
xchg
fnstenv
jno
inc
jmp
andl
cmp
or
test
adc
loop
cmp
into
add
cmp
mov
inc
dec
sub
adc
mov
cmp
push
push
hlt
fistps
dec
mov
icebp
lods
mov
sarl
xchg
jl
xor
movsb
or
test
rcr
mov
pusha
mov
mov
mov
das
xor
gs
jns
push
into
or
mov
mov
add
cmp
xchg
popa
fsubr
add
mov
mov
mov
ja
lock
pop
jecxz
xor
cmp
sbb
outsb
sbb
mulb
outsb
daa
out
pushf
pusha
mov
ss
repnz
movsb
bound
int
loope,pn
cmp
mov
daa
jb
jmp
nop
push
mov
fbstp
lret
jo
jp
div
in
into
pop
orb
cltd
lahf
clc
cmpsl
cmp
fistps
test
lods
mov
pushf
adc
daa
cmp
xlat
xor
fisubl
mov
shlb
dec
xchg
pushf
outsb
cwtl
stos
sbb
into
and
addr16
cmpsb
fnsave
mov
sub
or
rorl
lds
pop
jge
inc
adc
stos
cmp
out
jle
jnp
into
iret
xchg
fxam
gs
push
push
jb
leave
inc
aad
jb
sarl
rolb
shrl
lret
dec
lret
call
das
filds
xor
push
xchg
aas
jbe
fiadds
repz
fidivs
mov
sbb
push
add
pushf
pusha
add
jmp
and
shll
out
loopne
jnp
push
mov
cmp
mov
push
inc
sub
daa
cmpsb
jbe
jnp
mov
jge
xor
lock
pop
xor
push
cmpl
dec
mov
je
push
aam
sbb
mov
daa
les
das
test
mov
sbb
xor
lea
ret
int
cmp
or
arpl
insl
sub
lods
stos
lret
pop
mov
mov
mov
push
rorb
scas
push
jo
jp
xchg
test
sbb
push
sbb
pop
stos
push
cmp
mov
sub
leave
inc
js
lods
jmp
mov
jne
xchg
mov
pop
stos
sarl
sub
test
or
stos
fcoms
jle
out
inc
std
sub
outsb
popa
stos
insb
inc
loope
ja
mov
cmp
push
popf
into
das
js
mov
mov
xor
mov
jo
dec
aas
and
xlat
pop
pop
inc
push
fstl
sub
mov
xchg
test
fsubl
les
add
loop
pop
push
push
test
ja
sti
and
mov
pop
mov
adc
push
add
test
clc
insl
push
sbb
inc
arpl
fs
iret
adc
sub
ficomps
ljmp
mov
stos
xor
faddl
js
mov
cmc
aas
ljmp
mov
shl
add
ret
add
or
push
std
jb
pop
lods
and
movsb
push
jnp
stos
stos
in
mov
call
imul
and
bound
and
lods
clc
sahf
mov
mov
cmp
gs
xchg
jl
cmp
xchg
orl
mov
outsl
insl
cmp
add
fildll
sub
cmp
addl
or
inc
inc
mov
fstpl
mov
lahf
pop
sub
adc
dec
jecxz
leave
mov
pop
sub
xor
mov
pusha
mov
scas
mov
add
jmp
ljmp
adc
adc
out
sub
decb
xor
push
es
pop
inc
sbb
inc
call
push
pop
mov
xchg
push
xor
mov
or
sti
bound
fstpt
sti
movsl
inc
aas
xor
add
mov
cwtl
into
jae
jmp
sar
scas
icebp
js
mov
out
adc
outsb
rolb
sub
sub
push
nop
mov
xchg
cmp
push
add
fiadds
cmp
fistpl
xor
sbb
inc
lods
push
std
or
mov
mov
ret
push
ja
jmp
insb
sahf
fiaddl
xchg
pop
push
lods
loope
ficompl
fsubrs
add
add
in
loop
ljmp
cwtl
dec
pop
mov
jge
push
cmp
dec
nop
inc
pop
cmp
jge
mov
popf
clc
pop
imul
mov
fldt
push
js
inc
test
mov
loop
push
hlt
sahf
mov
addl
xor
sub
adc
pop
dec
xor
mov
pushf
imul
xchg
out
loop
mov
push
loopne
jmp
inc
repnz
in
dec
outsb
xchg
rcll
mov
jmp
addl
mov
into
inc
jnp
ljmp
adc
push
inc
cmp
cs
cmp
jo
xchg
dec
shlb
xor
sbb
mov
mov
sahf
push
add
jo
or
push
dec
hlt
rolb
dec
cmpsb
jne
sti
cmp
aad
shll
test
js
adc
mov
xor
loop
or
mov
push
lcall
add
pop
ret
mov
lahf
jb
fimull
add
iret
out
addr16
movl
mov
jno
xchg
negl
xor
push
jle
and
and
lods
jmp
pop
repnz
push
cmp
mov
push
js
xchg
add
dec
adc
xchg
fimull
mov
xor
pop
inc
lods
xchg
aad
inc
or
sub
mov
mov
adc
push
shrb
mov
cli
jnp
inc
sbb
mov
data16
push
test
aam
scas
in
jge
aaa
cmpsl
mov
ret
xchg
js
mov
jns
ret
aad
sub
in
leave
addr16
loope
pop
jnp
popf
mov
std
test
jno
adc
jb
ret
xchg
cmp
cmc
inc
sbb
clc
mov
push
xor
jmp
cmpps
int3
jo
or
jb
out
cwtl
movsl
mov
or
aad
sub
dec
aas
mov
push
mov
hlt
rdtsc
stos
leave
mov
xor
cld
jge
fcmovnu
inc
mov
mov
cs
lahf
sub
lret
flds
adc
push
out
and
aas
popa
jge
decl
gs
push
jno
sbb
dec
ja
shll
mov
fisttps
stos
inc
testb
nop
xchg
pop
pop
ljmp
lods
cmp
shrl
call
lds
cs
cmp
fiaddl
add
int3
jle
cmc
sbb
mov
repz
mov
sbb
insb
imul
adc
flds
and
adc
jmp
sub
andl
sbb
test
int
xchg
jg
rcrb
clc
sub
sbb
gs
das
mov
mov
jp
jge
or
stos
adc
aaa
test
pop
adc
out
clc
stos
and
lds
jb
mov
mov
mov
fldl
push
adc
dec
xor
into
ja
sub
sbb
inc
fwait
insl
rcll
in
mov
icebp
adc
fs
xchg
lret
cld
call
fldl
aad
test
or
pusha
inc
mov
cwtl
shlb
jbe
pop
or
test
movsl
adc
addr16
xor
or
fwait
stos
pop
sub
sbb
movsb
arpl
mov
add
xor
add
in
test
cmp
scas
lods
cld
scas
popa
sub
xchg
lret
inc
call
in
adc
fiadds
test
ja
sbb
inc
jnp
nop
ret
or
into
push
in
jp
or
test
imul
sub
or
shr
xchg
push
test
pop
enter
out
ss
add
cld
jmp
std
cmp
stos
movsl
sub
pop
sub
dec
div
jle
scas
lahf
pop
adc
xchg
xor
jge
inc
pop
shl
ret
jmp
or
enter
in
test
faddp
pop
lock
sar
dec
das
jmp
inc
xor
jecxz
xor
push
imul
jns
into
xchg
cltd
push
cmpsb
xor
in
pop
cmc
mov
subb
push
fcompl
jle
imul
inc
arpl
pop
lds
fstl
and
test
mov
push
cmp
mov
insb
dec
mov
insl
push
push
and
add
push
sbb
js
xchg
pop
data16
ljmp
lock
loope
cld
in
mov
push
rclb
sub
push
mov
jnp
stc
repnz
xchg
push
addr16
pop
jne
sbb
out
movsb
fstps
push
sub
subl
and
or
test
dec
inc
dec
rcr
xchg
pop
sbb
inc
mov
xor
add
sbb
lds
or
cmpl
adc
dec
popf
not
out
addb
dec
cs
stos
add
out
call
pop
sub
divl
jle
adc
outsl
jle,pt
xchg
js
adc
mov
cmp
es
xor
cmpl
xchg
dec
lcall
insb
adc
xlat
iret
les
repnz
ja
ljmp
cmpsb
movsl
sub
fdivp
xor
testl
pop
pop
icebp
out
jnp
imul
jns
add
outsl
lds
or
push
dec
int3
jo
lods
cmp
sbb
push
cmp
inc
iret
push
ret
lods
lahf
mov
lds
adcb
lods
mov
or
add
mov
stos
xor
mov
imul
mov
or
je
nop
shll
lea
out
aad
adc
pushf
cld
mov
add
and
sub
icebp
cs
loop
stos
divb
aad
mov
popf
mov
movsl
fxam
cwtl
mov
jp
sub
in
push
adc
push
aad
inc
lods
lods
xchg
sub
sub
addr16
loop
mov
sbbb
xchg
in
and
in
std
pop
fsubr
adc
fldl
pop
fstpl
push
pop
dec
sbb
mov
jecxz
outsb
push
in
nop
mov
das
jo
jmp
mov
xchg
fbld
sub
push
call
outsb
and
es
dec
in
dec
pop
cld
push
pop
push
into
xor
imul
sarl
add
and
xchg
scas
ds
and
mov
test
jb
pop
jns,pn
fstpt
aad
scas
mov
and
push
fdivrs
inc
mov
cmp
nop
mov
popa
imul
and
lods
aam
push
pushf
or
sbbb
pop
cmp
je
outsb
fimuls
sub
mov
and
mov
and
or
mov
inc
and
popf
shl
negl
jno,pt
dec
and
and
or
inc
hlt
das
outsb
lahf
pop
mov
xor
adcb
cld
icebp
mov
xchg
movsl
cmpl
gs
popa
fs
imul
xlat
xchg
add
jb
outsl
hlt
fwait
shlb
incl
shrl
loope
xchg
mov
fnstsw
jmp
js
jno
imul
mov
dec
jecxz
divb
fsubl
add
fs
jge
insb
xchg
push
jb
pop
clc
adc
outsb
jb
jae
push
or
fcompl
in
pop
jle
dec
inc
xor
rcl
jle
roll
or
and
fdiv
mov
lret
sub
nop
sub
mov
subb
sub
ds
push
mov
test
jne
mov
mov
or
gs
ljmp
ret
pop
and
stc
jmp
and
push
arpl
mov
sti
jp
dec
lods
push
fucomi
data16
and
adc
jge
dec
cmp
shll
and
cwtl
test
xor
shr
pop
mov
push
out
fstps
xor
sbb
cmp
pushf
jo
out
push
mov
popa
cmp
ret
sbb
testb
iret
jno
and
mov
push
scas
mov
push
adc
dec
test
jns,pn
pop
stc
or
cmpl
stc
dec
imul
jp
add
cmc
mov
push
loop
out
push
pop
lret
jmp
aaa
cmp
icebp
jg
cmc
cmp
fwait
xor
insl
cmp
cmp
pop
into
xchg
push
mov
test
bnd
or
and
xor
scas
and
xchg
jns
pop
imul
and
in
push
test
push
cmp
imul
fists
mov
inc
fs
inc
or
jbe,pt
and
adc
adc
inc
pop
ja
mov
jo
push
add
ja
sar
mov
aas
push
int
and
ss
test
shrb
cwtl
mov
adc
das
inc
xchg
dec
mov
mov
shrb
decl
mov
pop
sbb
and
push
inc
and
jno
mov
xor
imul
dec
xor
jge
pop
cmp
jb
inc
jnp
insl
mov
xchg
inc
stos
mov
ljmp
jle
xchg
ret
inc
faddl
mov
lcall
sahf
sti
enter
pushf
dec
adc
inc
adc
test
call
aam
jo
outsb
xchg
ljmp
sub
xchg
fldcw
dec
in
pop
clc
cs
inc
loopne
dec
js
cmp
or
xchg
sbb
adc
xor
iret
mov
dec
sub
adc
inc
call
inc
ret
fstp
xchg
pop
imul
mov
push
movsl
outsl
pop
repnz
sbb
outsl
xchg
es
repz
fdiv
xchg
ja
cmp
push
adc
adc
xchg
push
gs
into
hlt
xchg
xor
xor
adc
add
testb
xlat
push
stos
imul
test
mov
sbb
sbb
xchg
jmp
xor
negl
cltd
lods
xor
sub
jg
lret
push
xor
ds
insl
or
push
mov
imul
push
ds
shll
fsubr
sbb
jno
fdivr
bswap
std
mov
dec
arpl
ret
mov
pop
or
in
out
popf
imull
mov
fidivs
mov
hlt
push
mov
mov
das
pop
cmp
inc
or
int
es
cmp
xchg
push
vaddpd
out
leave
ret
mov
pushf
fisubrs
and
ror
or
add
sahf
jle
je
or
scas
jae
out
xchg
bound
xlat
dec
imul
filds
ljmp
or
test
dec
jmp
xor
push
sbb
mov
jae
into
mov
subl
pushl
test
aam
ret
out
push
dec
mov
or
rorb
mov
and
xchg
xchg
adc
cmp
ds
int3
arpl
fwait
add
bound
fstpt
pop
int
inc
lahf
test
mov
pop
push
or
je
cli
sbb
jp
mov
out
lods
push
pushf
inc
cmpl
test
rolb
je
mov
or
xchg
xchg
and
push
incl
add
sbb
sub
ja
jmp
fsubr
mov
xor
inc
fsubl
jge
mov
lahf
adc
sbb
stc
sbb
lret
rep
shrl
cmpsl
fisubrs
xor
cld
lcall
jle
stos
and
fs
or
adc
lds
sub
xor
sbb
in
es
sbb
ret
xorb
bound
pop
movsb
push
push
mov
lock
ja
icebp
imul
xchg
imulb
ret
lret
pusha
push
out
inc
xor
and
aam
fidivs
mov
cltd
mov
xchg
pop
cld
xor
adc
pusha
nop
cmc
cmpsl
sbb
cmpsl
adc
cltd
jmp
jne
sbbb
push
push
lcall
mov
aad
ljmp
xchg
xchg
jae
rorl
aad
sub
jo
push
add
cld
pusha
inc
in
repz
xchg
and
add
test
push
ljmp
es
jmp
xor
sub
js
lods
jmp
adc
pop
cmp
push
sbb
mov
mov
xchg
and
sbb
xor
mov
dec
stc
push
ret
pusha
gs
cmpsb
sbb
push
mov
insl
sub
cmpsl
in
popf
sub
lret
or
inc
cmpxchg
neg
out
scas
jb
insl
mull
mov
sub
ficoml
and
mov
inc
loopne
icebp
stc
leave
xchg
or
xor
daa
xor
ljmp
cli
inc
fmuls
inc
add
adc
repz
and
movsl
push
pop
jo
add
adc
and
jnp
lods
dec
mov
jecxz
cli
stc
rolb
test
fmull
imul
inc
fmull
aad
pop
cmp
push
or
and
fcoml
mov
inc
sbb
loopne
push
sbbb
dec
fcomps
dec
inc
mov
push
mov
dec
adc
std
xlat
or
movsb
push
fdivp
and
cwtl
rcrb
mov
or
and
lock
push
add
das
dec
sub
sarl
loop
pushf
dec
scas
mov
enter
push
sub
std
inc
int
lahf
cld
test
sbb
push
lcall
pop
faddl
in
ret
cmpsl
lods
push
cmpl
ret
insb
jns
fs
jbe
outsl
int
mov
and
inc
sbb
xor
dec
pop
inc
or
fcmovnb
inc
push
add
pushf
xchg
andl
and
push
adc
cwtl
lret
and
lret
cmp
jg
iret
enter
add
repnz
dec
test
push
lods
fwait
mov
test
dec
push
adc
fs
pop
push
mov
rorl
int
push
push
mov
inc
sub
inc
mov
push
fnstenv
aas
sahf
pushf
add
inc
mov
pop
repz
push
add
out
fsubs
adc
test
nop
frstor
cs
out
sub
sbb
mov
sbbb
jge
lret
mov
cmp
jno
aam
or
aam
pop
cmp
pop
cmp
data16
decl
call
xchg
out
pusha
data16
mov
mov
push
ret
sbb
imul
inc
in
add
aas
out
js
xchg
inc
std
lock
xchg
xor
negb
imull
sbbl
mov
inc
and
sub
mov
cmpsb
pop
inc
out
xchg
sub
xchg
xchg
jae
xchg
mov
dec
or
or
imul
out
adc
push
repz
out
ja
xor
das
sar
gs
mov
cld
out
add
lret
mov
push
push
rorb
xchg
insl
push
popf
in
popf
testl
les
ljmp
inc
jge
shlb
cmp
jnp
jnp
inc
out
pop
xchg
or
sub
sarb
lds
jnp
out
dec
addb
mov
and
push
mov
push
sbb
add
push
xchg
jmp
dec
les
push
arpl
sbb
sub
push
test
pop
add
lret
out
aas
jne
push
push
dec
jmp
sub
test
jb
and
lods
fistps
adc
sub
pusha
lods
sbb
enter
inc
mov
dec
cmp
bound
xchg
rclb
lea
inc
cltd
stos
cmp
xchg
jno
and
ds
mov
sbb
push
dec
cmpsl
cmp
push
dec
cld
repz
inc
in
repz
into
stos
dec
pop
bound
jl
sub
xor
adc
stos
jmp
add
sub
ja
xchg
repz
stc
cs
cmc
test
popa
popa
ds
shl
idivb
out
pop
cmp
xchg
cmp
faddl
imul
lcall
adc
mov
push
or
lods
shll
pop
mov
adc
jmp
cwtl
aad
mov
dec
adcl
add
loope
andb
cs
ja
inc
mov
rcl
dec
les
push
pop
mov
xor
inc
push
mov
xchg
paddusb
xchg
ss
jmp
xlat
arpl
sahf
cmp
sub
sti
ds
scas
xchg
mov
nop
hlt
and
das
dec
or
cmp
pop
call
cs
test
lock
or
xor
fsubl
sbb
adc
inc
test
cmpsb
sbb
xchg
subb
mov
pop
jge
sbb
add
stos
lret
bound
cmpsl
aas
ss
sbbb
mov
cmpsb
adc
adc
sti
sub
fwait
push
mov
repnz
pop
insb
mov
jmp
sbb
clc
xchg
mov
scas
jbe
cmp
inc
clc
int3
or
xor
ret
cmp
push
fwait
mov
xor
hlt
aaa
ret
jg
ret
sahf
sub
push
xor
push
mov
push
jb
push
xchg
dec
cmp
fs
aaa
xor
es
xchg
cld
pop
pause
dec
aad
or
sti
popf
std
cmp
hlt
push
jae
iret
stc
inc
je
adcb
sbb
sbb
pop
gs
mov
std
arpl
pushf
mov
pop
enter
cmp
lcall
push
notl
leave
adc
inc
sub
xor
idivb
mov
sub
adc
mov
xor
or
inc
push
push
add
push
mov
xor
divps
mov
lret
jle
xor
lcall
arpl
pop
xchg
adcb
and
sub
mov
mov
push
pop
popa
imul
add
pop
out
and
pop
test
mov
cmp
dec
stos
fistpll
push
or
jecxz
mov
add
and
test
fs
mov
sti
adc
sub
ds
and
or
xorb
sbb
xchg
cmp
orl
ds
cmp
lock
ficomps
mov
jb
mov
je
mov
in
rorl
mov
xor
out
xchg
sub
cmp
rcl
xchg
xchg
xorb
dec
push
pop
mov
adc
xchg
in
scas
inc
stos
fidivrl
fildl
xchg
scas
pop
repnz
xchg
dec
movsb
rclb
add
lcall
nop
mov
fidivrl
sbb
hlt
addr16
sbb
rcrb
pop
xchg
mov
or
lcall
shld
aaa
jmp
xor
clc
fbld
sub
inc
lock
jno
pop
xchg
jl
xor
jne
mov
add
lock
xlat
mov
mov
das
mov
and
enter
pop
mov
adc
or
and
mov
cmp
mov
scas
dec
xchg
icebp
das
xchg
pop
mov
into
sbb
adc
push
sub
pop
movsl
or
dec
xorb
jo
sub
sub
mov
cmp
fcmovb
decl
mov
scas
popa
xor
cmp
fsubl
pusha
roll
sbb
out
xchg
lret
jg
lock
push
sub
mov
jmp
xor
jp
pop
pop
ljmp
or
mov
into
sbb
mov
adc
add
movsl
pop
adc
jmp
imull
inc
xchg
popf
fildll
cwtl
xchg
lret
jp
and
mov
ljmp
mov
pop
popf
sahf
cmp
stc
sbb
mov
ss
jp
cmpsb
jecxz
xor
xor
adc
sbb
pop
sti
inc
je
setb
movsl
cmp
jmp
sti
dec
jno
popa
sbb
das
lods
push
mov
jle
pop
mov
mov
nop
and
imul
test
insl
cmp
data16
dec
jle
lods
push
pop
inc
shrl
aaa
ds
sub
scas
rcll
clc
pop
mov
adc
sbb
push
cmp
cld
rolb
filds
iret
test
lret
dec
xchg
mov
push
add
stos
sbb
xchg
dec
xor
pop
and
lcall
outsb
and
int
jl
or
inc
fiaddl
stos
into
ficomps
or
mov
pushf
cmpsl
mov
adc
dec
xchg
pushf
test
in
imul
pop
jns
lret
mov
movsl
popf
mov
adcl
jno
test
dec
inc
jnp
out
insb
mov
push
jne
icebp
mov
xchg
mov
stc
fcoms
aam
pushfw
add
lahf
ljmp
mov
fwait
addr16
cmpsb
daa
out
test
push
sub
xor
in
xchg
cmp
repnz
sub
mull
mov
test
sar
xchg
rcll
lcall
addr16
gs
pop
repz
ja
or
jno
sbb
ljmp
mov
jmp
sub
pop
loop
sbb
sbb
cmpsb
outsb
dec
pop
icebp
add
fldcw
arpl
xchg
ret
mov
cwtl
jmp
mov
dec
jecxz
outsb
xor
add
stos
cmc
add
and
dec
icebp
shlb
pop
xchg
mov
mov
inc
add
jmp
mov
popfw
sbb
adc
fwait
loop
push
push
add
jg
dec
and
xchg
outsl
sti
dec
lret
sub
push
jl
mov
iret
mov
lds
fwait
add
pushf
popa
jg
insl
jno
stos
jne
dec
cmp
out
mov
imul
jg
xchg
mov
vunpcklps
lods
loop
iret
insb
xchg
jg
xor
and
fstps
lret
pop
adc
out
into
and
test
out
hlt
push
mov
adc
xor
das
fs
jno
sbb
jae
fisubrs
idivl
dec
int3
inc
lods
mov
push
out
jae
jo
insb
push
push
clc
or
iret
cwtl
repnz
jo
sub
out
jge
mov
lods
into
rcll
pop
push
das
or
xchg
insb
push
mov
xor
not
xor
out
xchg
xor
mov
and
mov
push
rcrl
cmp
mov
jbe
pusha
cmp
mov
out
outsl
pushl
jne
loope
fmull
cmp
or
lds
addr16
imul
adc
out
gs
dec
ret
jp
sub
lods
into
sbb
lret
sbb
sub
fstpt
jmp
std
adc
adc
mov
mov
inc
xchg
push
and
xor
aaa
cli
outsb
dec
pop
dec
inc
decl
mov
lret
mov
xchg
roll
jl
adcb
xchg
xchg
setnp
les
jmp
dec
mov
mov
adc
icebp
divss
negl
cmc
cli
or
mov
ret
push
push
mov
adc
pop
addr16
mov
and
inc
sbb
dec
out
push
push
stc
imul
movsb
into
or
loope
mov
fcomp
subl
lahf
adc
dec
push
loope
jmp
lods
pushf
sbb
mov
enter
cmp
mov
adc
fs
ret
insl
ficompl
clc
int
arpl
pop
clc
test
outsb
adc
pushf
out
in
cli
mov
mov
jns
fistl
imul
ljmp
dec
es
int3
in
sbb
jge
or
andb
testl
popa
xor
ret
mov
es
mov
mov
pop
and
int
adc
push
mov
inc
cwtl
iret
lret
pop
adc
xlat
in
sbb
mov
dec
and
divb
iret
and
pusha
lret
mov
adc
nop
jl
ds
sub
adc
dec
dec
push
sarb
mov
jns
sbb
cmp
dec
out
xchg
jle
xchg
out
and
fidivs
testl
inc
es
xchg
cmp
test
adc
push
inc
popa
cmp
push
movsb
repz
cmc
sbb
test
add
jne
inc
push
rcl
push
xchg
sahf
lret
and
sub
sub
imul
jmp
in
or
push
mov
lret
and
sub
lret
xor
sub
pop
popf
jp
xchg
jbe
mov
inc
iret
cmp
repnz
xchg
jle
ljmp
pop
pop
pop
inc
aam
ds
or
cs
rorb
xchg
pop
lods
shrb
lcall
ljmp
ret
push
out
fst
add
inc
pop
xor
inc
xchg
nop
mov
hlt
rorb
xor
jl
xor
add
and
xchg
das
jmp
sub
push
insl
ss
arpl
inc
imul
test
imul
fwait
shrl
daa
addl
xchg
js
or
jae
sub
mov
in
mov
mov
mov
add
aas
jg
jno
pop
into
mov
in
jmp
add
pop
cmpsb
movl
add
popf
dec
xchg
mov
imul
xchg
shll
or
jecxz
sbb
xor
push
cmpl
jnp
bound
call
mov
fs
mov
stos
pushf
lret
push
popa
loop
fnstcw
das
fstps
jmp
add
dec
cltd
sbb
cmpsl
lss
xor
rolb
cmpsb
dec
mov
insl
out
stc
push
fistl
add
out
rcr
mov
mov
loope
push
or
xor
push
adc
cmp
pop
add
xor
bound
inc
sub
leave
dec
or
mov
lret
sub
imull
iret
or
cli
in
out
adc
stos
adc
int
enter
adc
xchg
popf
sbb
movsb
push
jne
ds
sti
bound
out
test
in
inc
cld
push
sub
mov
sub
cmpsl
xorl
and
pop
ffree
xor
es
out
repnz
mov
ljmp
and
ja
dec
in
xchg
cmp
push
or
lods
ljmp
jnp
scas
mov
push
aad
rorl
push
bound
dec
sbb
and
out
sub
enter
cli
daa
insb
in
out
mov
xor
test
mov
pop
fsubl
lret
sub
pop
mov
or
jl
or
mov
stc
shl
pop
push
lock
mov
mov
fs
pop
call
mov
adcb
inc
mov
pop
mov
mov
xor
fadds
pop
inc
rclb
repz
scas
fcoms
inc
and
cld
lds
test
sub
sahf
in
xor
fistpll
or
rolb
dec
pop
adc
jns
stc
mov
outsl
ja
notl
adc
push
xchg
aad
gs
push
add
mov
fdiv
into
aam
pop
iret
pop
test
dec
push
or
xchg
shl
push
adc
xchg
inc
std
icebp
sbb
push
cmp
les
test
mov
fs
or
mov
jge
xlat
js
jo
cmp
ds
or
push
out
hlt
pop
dec
std
das
popl
and
mov
jno
xor
fs
in
sbb
frstor
daa
pop
inc
les
cmc
insl
insl
rcpps
dec
insl
push
inc
leave
add
xor
ljmp
lret
push
cltd
fwait
iret
pop
loop
rcll
mov
dec
ss
mov
and
push
inc
push
inc
sbb
sub
cwtl
cwtl
push
mov
cmp
pop
pusha
ret
pop
cmpsb
punpckhwd
ljmp
pop
xchg
test
mov
mov
push
xchg
imul
arpl
push
imul
aad
jp
or
inc
sub
or
jb
xchg
gs
mov
mov
adc
push
mov
rcrl
aam
cmc
mov
bnd
in
inc
sahf
adc
push
sahf
fimuls
ja
fisubs
out
daa
push
push
xchg
xchg
cmc
pop
push
cmp
pop
test
xor
roll
jl
popa
call
jg
loopne
out
in
in
cmp
xor
mov
xlat
aad
dec
sub
xor
stc
jecxz
add
cmp
mov
mov
fwait
imul
loop
push
pop
mov
push
or
inc
int
repz
jbe
lds
es
not
pop
push
sub
cs
xchg
cmp
sub
mov
xchg
add
adc
xlat
sahf
sub
push
mov
std
popa
push
stc
lods
and
cli
and
movl
mov
sahf
push
ljmp
icebp
mov
cmc
jle
push
loopne,pt
add
outsl
dec
pop
mov
mov
cmp
sbb
stos
dec
gs
jno
repnz
xor
jmp
lea
das
dec
xchg
data16
outsb
stos
xorl
scas
subl
outsb
jno
jmp
dec
ds
test
cmp
cmp
sti
pop
xor
in
mov
xchg
or
stos
and
testb
dec
xor
fildl
or
repnz
js
test
xchg
cmpsb
and
inc
imul
test
inc
in
test
fimull
bnd
lahf
mov
mov
aaa
clc
xlat
fistps
sbb
fsubrs
sbb
xchg
fnsave
xor
sub
push
sub
xor
cmp
insb
push
and
movsl
pop
mov
cwtl
add
faddp
cmp
mov
rcll
dec
mov
fdivl
test
push
cmp
dec
mov
add
movl
xor
insl
cli
inc
sbb
add
loope
push
pushf
cmpsb
cli
jne
mov
pop
cltd
and
and
mov
sbb
or
inc
sub
repz
test
cli
inc
jg
cwtl
je
mov
pop
sbb
cmpsb
lods
call
pop
push
cmp
inc
sbb
cltd
xchg
loopne
add
movsl
cs
xor
mov
js
loope
dec
pop
inc
sbb
inc
mov
js
push
out
bound
int3
loopne
xlat
es
out
test
popa
dec
loope
inc
cwtl
jg
mov
mov
pop
inc
dec
shll
addr16
ret
decl
jne
and
xor
lcall
xchg
mov
cmp
xor
dec
loope
and
push
dec
call
mov
lea
push
fmul
xor
rcr
mov
js
inc
xchg
pop
pop
pop
in
cmp
and
push
sub
rcrb
pop
call
jp
movsl
lea
inc
sahf
push
data16
mov
jl
dec
pop
addr16
push
fdivl
popa
repz
mov
lods
cld
popf
pop
add
outsl
add
dec
or
pop
sub
and
push
hlt
xor
push
sub
or
dec
jnp
or
sub
push
out
test
cmpsl
and
and
mov
sti
int3
out
jbe
lods
test
adc
jnp
xor
and
lahf
mov
mov
push
lcall
call
leave
xchg
or
mov
shl
pop
dec
cmp
insb
mov
xor
sti
cltd
into
pop
stos
mov
clc
outsb
xchg
sub
xor
fisubs
mov
lahf
jbe
adc
aaa
lds
adc
sub
aas
jo
lahf
dec
or
ss
popf
push
cwtl
xor
mul
out
cmp
cli
out
notb
push
mov
inc
daa
add
jl
rcrb
pop
jno
psadbw
sti
lret
ds
ficomps
jmp
jl
out
icebp
mov
cmpsl
leave
les
sub
addr16
sbb
mov
js
js
lret
inc
or
and
sbb
imulb
stos
xor
xchg
insl
sub
xor
inc
pand
ret
or
xchg
lods
push
inc
std
in
in
xlat
fdivp
mov
jb
pushl
outsb
push
inc
and
push
repnz
xor
push
repnz
out
scas
mov
inc
int
dec
fwait
ret
int
push
dec
outsl
mov
push
push
lcall
push
popf
xor
enter
mov
xor
movsb
es
pop
pop
xor
mov
movsl
dec
je
xor
hlt
popa
xchg
sbb
cltd
mov
mov
sbb
lods
or
imul
mov
fildll
outsb
pop
pop
jge
fldl
xchg
je
sub
js
and
mov
fcompp
cld
or
loope
mov
cmp
adc
lods
pop
sbb
sbb
inc
push
inc
sbb
xchg
andl
addr16
and
iret
out
insl
hlt
lcall
or
subb
mov
mov
loopne
mov
loop
xor
sahf
cwtl
lret
sbb
pop
mov
mov
sub
dec
arpl
inc
push
push
xlat
rorb
scas
out
xor
sub
add
shrb
lods
sbb
outsl
mov
push
insb
jbe
or
xchg
dec
aas
mov
data16
xchg
xor
mov
pusha
push
xor
jg
or
pop
mov
sbb
aas
and
xchg
loop
push
repz
xchg
xchg
in
jle
test
fldt
fdivs
inc
sub
repnz
outsl
jne
scas
leave
jmp
pop
push
cli
xor
sbb
ret
and
outsb
pushl
sti
mov
mov
js
push
jbe
add
and
mov
jp
xchg
test
cmpsl
mov
out
bound
add
cmpsb
dec
pop
inc
sub
fidivrl
sbb
movsb
hlt
push
fcom
jnp
aam
icebp
es
inc
popl
xor
sahf
cmp
std
scas
leave
pop
lcall
movsl
sahf
decb
fiaddl
shlb
sub
ljmp
hlt
push
ja
add
pop
xchg
loopne
jecxz
cmp
cli
aad
leave
push
mov
mov
xchg
lods
fistpll
lock
movsb
in
mov
lea
sub
or
jl
lahf
call
push
sub
inc
jb
xor
xchg
xor
fstpt
mov
mov
pop
or
cwtl
add
test
mov
out
aas
push
xchg
pop
rcll
stc
push
mov
and
sub
mov
ja
fldt
add
ret
repz
xor
xlat
loop
lods
das
cwtl
subb
in
mov
iret
loope
mov
jmp
and
in
dec
dec
enter
popa
stc
jne
loop
add
cld
jmp
iret
or
mov
mov
jge
test
xchg
movsl
mov
xchg
and
xchg
outsb
sub
inc
rol
mov
or
das
movl
in
inc
adc
xor
sbb
ss
into
out
psraw
ret
push
cmp
mov
inc
push
inc
mov
gs
push
xchg
sbb
test
pop
mov
sub
call
jb
dec
pop
test
mov
fmull
add
into
leave
roll
mov
push
inc
sarl
mov
xor
jmp
mov
cmp
dec
dec
in
mov
inc
ret
hlt
ds
mov
das
xor
lock
mov
mov
in
push
lahf
andl
mov
and
stos
fistps
pusha
sub
push
lahf
lcall
in
xchg
mov
and
sub
adc
or
into
fldl
and
stc
andl
jecxz
addr16
fs
sbb
inc
push
cmp
push
mulb
dec
scas
inc
std
lcall
mov
mov
sbb
jl
ret
sub
cld
cwtl
xchg
fidivrl
adc
sub
fwait
aam
sbb
das
in
push
mov
loopne
js
das
mov
xchg
xor
mov
cld
stos
mov
icebp
scas
cmp
xchg
dec
dec
inc
je
pop
jl
jl
pop
rcrl
setno
rol
and
or
and
cltd
test
push
fstl
xor
mov
loop
pop
mov
mov
mov
into
idivb
fadd
sub
lcall
cmp
scas
sbb
add
dec
xor
mov
cmpsl
mov
adc
cs
mov
shll
lret
xor
inc
pop
sbb
and
cmc
out
adcb
mov
test
cwtl
and
hlt
inc
aam
sub
push
arpl
dec
adc
push
add
mov
cmp
daa
mov
xchg
outsl
in
dec
lods
imul
mov
aam
ret
push
and
jg,pn
jl
popa
jecxz
scas
sbb
cmpsb
shrl
ljmp
mov
shll
mov
push
jne
je
mov
push
cmp
add
lea
stos
xchg
jo
adc
push
movsl
add
imul
or
inc
lods
pop
outsl
loop
sub
mov
std
mov
or
lods
out
mov
iret
lret
aam
sbb
sub
int
pop
ja
xchg
push
popa
imul
sti
repz
out
sbb
and
push
xchg
fwait
stos
mov
jge
xchg
push
pop
cli
cmpsb
aad
fsubs
and
inc
out
ljmp
test
lret
jns
jle
and
ss
inc
xor
out
sub
add
dec
jae
cmp
xchg
mov
adc
out
fistpl
loopne
xorb
or
add
push
sbb
sti
jb
aas
mov
adc
mov
shll
cmpsl
imul
xchg
lods
mov
dec
test
out
jae
push
or
jecxz
icebp
push
ficomps
dec
pusha
repnz
dec
addr16
mov
jnp
xchg
imul
push
insl
xor
hlt
sbb
mov
ja
xlat
flds
inc
ss
enter
pop
popf
scas
sarl
das
jns
lds
in
mov
xchg
xchg
cmp
movsl
lret
sti
aad
dec
mov
jle
or
sbb
push
push
cmp
lds
mov
popf
cltd
xor
jle
mov
fcompl
or
cmpsb
repz
mov
dec
sbb
ret
jge
cmp
iretw
mov
sbb
aam
jmp
and
popf
sub
fsubrl
aam
cld
mov
fucomip
aam
movsb
push
jg
test
and
and
xchg
mov
mov
or
fsub
pop
insb
push
sbb
mov
cltd
sub
or
xchg
add
ret
insb
aad
inc
pop
push
or
rorl
into
cmp
jle
xchg
test
rcrl
and
and
cwtl
clc
orl
pop
jl
aad
sub
scas
push
iret
pop
cmp
popa
fistl
push
mov
pop
and
stos
xchg
xchg
es
popf
xor
sar
mul
adc
adc
out
test
js
std
mov
out
rcl
inc
add
js
jmp
int3
sbb
loop
in
std
iret
xchg
stos
mov
adc
ljmp
sbb
xor
mov
push
add
out
jo
pop
adc
mov
cmpsb
push
xchg
dec
xchg
icebp
sbb
xchg
xchg
movsl
es
sbb
shlb
jnp
and
cmp
test
movsb
mov
jae
nop
ss
into
inc
or
lock
xchg
jno
add
or
push
and
pop
cmp
jne
stos
hlt
cmp
stos
pop
xchg
cmp
lea
les
pop
lods
sub
stos
jnp
sbb
mov
movsl
jo
cwtl
add
cmp
pop
jl
insl
sbb
dec
xor
add
dec
jbe
mov
inc
push
in
inc
xchg
push
pop
lahf
or
jp
dec
ljmp
push
push
cmp
pushf
adc
xchg
xchg
ds
cs
lret
dec
mov
repz
ret
mov
jns
dec
or
sbb
jg
int3
sbb
mov
cmp
rol
mov
out
or
test
popf
xchg
in
aad
mov
clc
subb
js
push
sar
xor
lea
and
xor
or
imul
dec
mov
or
cmp
sub
xlat
xor
mov
inc
jns
in
pop
pop
sub
out
daa
xor
xor
cmp
cmpl
andb
mov
loop
push
mov
mov
out
push
mov
pop
dec
push
sbb
mov
lcall
aad
adc
js
cmp
jbe
xor
lods
nop
push
sbb
jne
mov
pop
and
out
gs
sub
mov
repnz
pop
shrb
test
std
push
add
cmpsl
aam
mov
sahf
lcall
clc
fcoms
push
out
ficoms
push
xchg
mov
int3
or
pop
inc
data16
mov
test
pop
sub
mov
inc
pop
inc
mov
mov
mov
cmp
sti
sub
fdivrp
push
insl
push
pop
cs
test
lret
jecxz
pop
push
test
pop
mov
lret
rclb
push
std
cmp
call
adc
into
into
add
mov
and
inc
add
sbb
pop
sbb
dec
fbstp
xchg
mov
push
xor
jo
idivb
negl
enter
mov
xchg
je
add
addr16
push
sub
mov
xchg
mov
push
mov
adc
jg
sub
mov
rclb
sub
mov
test
into
inc
test
adc
sbb
or
mov
imul
incb
arpl
and
sbbl
or
rcl
and
jb
and
stos
pusha
pop
sub
inc
mov
je
sbb
insb
fwait
cwtl
push
mov
popa
xlat
and
lods
add
fcmovnu
and
std
jmp
int
jmp
mov
mov
dec
xchg
aam
mov
mov
sbb
sub
mov
movl
cmp
cli
add
jb
cmp
push
xor
push
xchg
popa
in
stos
pop
loopne
mov
mov
out
pop
mov
daa
xor
repz
sahf
int
xchg
andl
or
fdivrl
stc
mov
lcall
lds
fisubrl
pop
dec
sbb
sti
sub
jnp
adc
je
ffreep
pop
popf
dec
nop
lret
or
ljmp
add
xor
outsb
out
mov
andb
or
push
out
imul
xchg
int3
stc
sub
push
xchg
jp
in
add
pop
mov
imul
inc
mov
ficoml
jmp
lahf
cmpsl
clc
adc
xchg
mov
loope
push
mov
mov
pushf
sbb
in
insl
pop
call
or
push
inc
xlat
movl
sub
or
push
pop
iret
inc
lock
daa
push
jns
adc
push
cmp
jns
push
cs
pop
dec
sahf
xchg
les
lcall
or
adc
jb
jae
out
pop
mov
jno
daa
dec
add
test
mov
in
lods
dec
sub
lret
loopne
cmpsl
or
xchg
divps
mov
adc
mov
inc
andb
movsb
in
fwait
cld
xor
cmpsb
pop
loopne
dec
test
addr16
repz
lcall
xlat
rcll
lods
jnp
add
mov
sahf
ret
out
sti
bound
ret
xor
mov
test
jmp
in
cmp
out
mov
icebp
int
mov
call
push
push
jbe
loope
pop
insb
mov
movsl
std
cmp
das
mov
pop
sub
jo
mov
fs
inc
cmp
stos
add
div
xchg
pop
movsb
push
mov
xor
dec
lock
loopne
dec
xlat
popa
ljmp
add
enter
rcrb
mov
sbb
cwtl
imul
jl
data16
imull
imul
cmp
mov
and
inc
xlat
push
shrl
mov
inc
ljmp
or
jnp
and
jbe
jg
sub
push
fidivl
pop
mov
sarb
or
push
sbb
test
jle
jecxz
adc
scas
pop
xor
pop
xchg
mov
iret
pop
push
mov
aam
out
xchg
cmp
testb
cmpsl
sti
sub
jecxz
test
adcl
in
out
push
jge
scas
jne
leave
popa
sbb
fnsave
lock
jno
lret
inc
dec
sahf
pop
jns
sbb
xchg
adc
dec
pop
xchg
cmp
movsb
testb
das
in
sbb
hlt
aas
int
cmp
sbb
add
dec
push
movsl
sbb
xlat
mov
cld
pop
cs
outsl
mulb
add
sbb
pop
pop
xchg
icebp
lret
lds
pop
arpl
xor
in
mov
xchg
sbb
pop
inc
pop
cmp
shrl
or
lock
add
fbld
mov
aaa
lret
xor
cmpsb
push
scas
out
stos
hlt
pop
inc
push
sti
jbe
int3
add
jbe
addl
daa
in
sbb
mov
or
int3
push
sbb
pop
pop
rclb
fwait
ss
out
lahf
pop
lcall
shrb
ja
icebp
pop
std
and
push
xor
mov
repz
cmpsb
jle
mov
cmp
fldt
mov
mulb
clc
test
pushl
pop
and
add
xchg
push
pop
call
std
nop
jno
imul
loopne
mov
jo
adc
mov
popf
sarl
flds
pop
jnp
jo
inc
aas
and
movl
out
and
jg
pop
ds
inc
mov
cli
into
jae
jno
push
stos
mov
dec
out
mov
inc
push
adc
out
sub
test
cmp
mov
sub
jae
xchg
shrl
and
mov
dec
lds
inc
adc
mov
push
nop
pop
xor
dec
out
scas
mov
imul
test
sbb
mov
xor
mov
fadds
push
outsb
sbb
out
pop
cli
jl
mov
arpl
dec
psubd
cmp
pop
sbb
mov
pop
cli
push
pop
mov
and
cmpsb
mov
mov
scas
or
seta
jns
test
lret
nop
mov
movl
add
sub
cli
popa
mov
pusha
cld
dec
or
and
in
xor
je
dec
int3
pop
mov
daa
mov
int
into
pop
dec
xor
jo
roll
and
or
and
inc
push
xchg
jge
test
pop
mov
jnp
lret
fdivs
ja
inc
cltd
imul
maskmovq
imull
mov
sti
ss
mov
jecxz
scas
pop
jl
push
jne
cmp
inc
fisttpl
sub
pusha
bound
xchg
dec
sbbb
ficoml
test
sub
pop
dec
hlt
lahf
out
adc
or
addl
dec
mov
pop
xchg
dec
loopne
ljmp
push
mov
mov
mov
rcrl
jp
nop
jl
and
outsl
sahf
lcall
pop
push
jo
jns
xchg
adc
jecxz
sahf
in
sbb
movsb
xlat
movsl
push
cli
xor
sbb
mov
dec
adc
ficomps
adc
imul
clc
loopne
mov
mov
outsl
push
les
jae
dec
repnz
sub
jnp
gs
adc
sub
lods
mov
jne
push
sub
mov
repz
lock
dec
mov
and
pop
stos
roll
adc
pop
push
das
in
into
fcompl
add
lcall
imul
rcll
out
mov
fs
mull
pop
scas
into
test
fists
leave
enter
jb
xchg
push
addr16
dec
xchg
or
jecxz
int
sub
mov
in
lahf
repz
xor
inc
pop
clc
jg
shrb
or
in
bound
inc
inc
or
jg
add
std
out
scas
adc
jmp
loope
cmp
jne
xor
cmc
fwait
in
ss
sbb
inc
and
stos
scas
orl
push
inc
xor
add
fimull
stos
daa
pop
fdivl
div
pop
mov
push
xchg
and
pusha
aaa
es
sub
bound
in
ret
fxtract
adc
adc
mov
iret
inc
test
mov
lahf
insl
into
pop
inc
sub
jne
or
xchg
mov
in
iret
adc
mov
or
enter
push
jmp
xchg
aad
fisubrl
cwtl
add
addr16
jb
out
lea
inc
dec
or
add
shlb
js
adc
and
in
movsb
pushf
insl
jns
cmpsb
scas
imul
xor
out
fmull
push
aas
xchg
stc
sahf
mov
lea
mov
sbb
jo
mov
push
scas
dec
loopne
cmp
sub
pusha
push
icebp
inc
arpl
sahf
pop
xor
add
icebp
add
test
testl
aam
mov
ret
push
jle
movsl
xor
ss
jle
xor
js
xchg
mov
mov
jl
loopne
outsb
lds
xadd
and
add
cli
sbb
add
sub
mov
sbb
in
and
or
push
push
out
fisttpll
fisttpll
fs
repnz
movsb
je
mov
push
lods
mov
push
int3
cmpb
xchg
lods
out
mov
adc
or
or
xor
loop
sbb
sbb
movsl
mov
stos
jne
ljmp
fsubp
jns
and
pop
sub
loopne
mov
stc
and
hlt
jb
fdivrs
loopne
dec
sub
lcall
std
push
dec
mov
cmp
mov
aas
leave
pop
loopne
in
es
shll
inc
out
and
shld
out
push
stos
xchg
mov
imul
cwtl
stos
or
xor
xchg
push
jns
sbb
jg
sahf
mov
lods
dec
mov
nop
outsb
push
cltd
jmp
xor
in
inc
shrb
inc
hlt
mov
mov
mov
sbb
lea
lcall
sub
and
out
cmp
jbe
mov
add
mov
jb
insb
adc
adc
insb
mov
arpl
add
popa
fnstenv
cmp
cmc
mov
icebp
push
jnp
test
add
mov
cmp
lock
sub
mov
pop
xchg
loope
out
scas
sub
shrl
popa
or
fs
scas
xchg
xchg
psubb
test
cmp
inc
cvttps2pi
and
pop
fisubl
jb
cmp
jae
or
rolb
imul
mov
call
fs
cld
setge
push
aad
pop
push
push
aas
bound
fsts
divb
inc
ret
mov
std
adc
push
mov
xor
push
sarb
aas
xchg
arpl
jg,pn
popf
hlt
jp
scas
inc
inc
sub
and
sub
sar
ja
jle
cld
mov
repz
xchg
test
ret
adc
loope
or
adc
rorb
and
sbb
outsb
and
xchg
mov
movsl
xchg
inc
adc
orb
std
mov
push
dec
jmp
rcll
dec
into
pop
clc
subl
mov
enter
rolb
shr
xor
mov
pop
jo
sub
dec
nop
inc
mov
je
cmp
ret
adc
inc
sub
mov
dec
push
push
cmp
jns
xor
or
leave
mov
pop
fcoml
push
clc
mov
pop
and
adc
push
push
adc
pop
decb
fiaddl
out
dec
cmp
push
test
jl
clc
lret
iret
mov
es
jg
fwait
ljmp
inc
imul
push
jle
xchg
loope
fists
imul
mov
notl
and
xchg
sahf
idivl
and
faddp
cltd
add
rorl
lock
dec
lds
and
leave
inc
icebp
out
pushf
pop
cmp
jb
pop
out
cmp
xchg
cltd
dec
jo
aam
iret
mov
mov
notl
fstpt
mov
out
inc
xlat
testl
dec
xchg
imul
leave
cmp
xchg
fdivrs
mov
fistpl
cmpsl
cmp
adc
pop
cld
shl
mov
sarb
cmp
aas
jle
inc
add
or
xor
mov
jo
fnclex
xchg
lods
push
loopne
sub
ret
out
lret
cmp
jbe
sub
repz
cmp
adc
aas
movsb
xchg
add
xchg
inc
dec
mov
inc
shlb
push
mov
and
add
push
add
insb
loope
loop
mov
lods
xor
in
das
mov
sbb
cmpsl
xor
icebp
ljmp
addr16
mov
int
roll
pop
pop
out
lahf
jecxz
int3
pushf
adc
and
lock
fidivs
xor
rorl
sbb
popa
es
scas
fwait
pushf
dec
xchg
ss
data16
test
test
jne
test
cmpb
dec
and
fs
mov
or
xchg
push
add
roll
xchg
mov
mov
test
sbb
or
jb
sbb
or
bound
fxch
faddl
dec
xchg
cmp
jmp
lds
cmp
inc
pop
lea
aaa
sub
int3
sub
push
out
sbb
scas
call
cmp
jnp
ficomps
xor
and
push
cmp
faddp
fstps
ja
dec
jbe
xchg
js
inc
jge
cltd
stc
mov
mov
scas
ret
and
fnstcw
add
xor
repnz
pushl
fbstp
shr
mov
hlt
fwait
dec
clc
mov
mov
inc
imul
test
lret
notl
xchg
mov
lods
and
aam
sarl
or
xchg
test
sub
and
test
mov
jne
sub
xchg
cmpsl
pushf
jge
loopne
cmc
ljmp
fwait
movsb
cmp
mov
xchg
out
cmpsl
adc
psubb
cmp
mov
jo
das
add
ds
push
xchg
sub
addb
addb
sbb
xchg
xor
mov
jp
dec
and
lds
das
mov
sub
pop
xchg
test
inc
dec
aam
inc
jns
ret
cs
lahf
or
imul
mov
jne
mov
in
jb
push
pushl
push
sti
mov
dec
rcr
cs
testb
xchg
push
nop
xchg
aad
andl
jle
sbb
adc
inc
jb
push
add
dec
lods
icebp
fisubl
jp
shlb
fcomip
mov
ljmp
stos
xchg
insl
lods
imul
fsubrl
int
imul
in
in
in
pop
adc
es
and
xchg
fwait
jl
mov
leave
mov
mov
and
pusha
cmc
ljmp
arpl
or
jge
jbe
cmp
mov
hlt
cwtl
mov
imul
push
fimull
xor
mov
in
out
roll
pop
mov
mov
adc
jns
jno
icebp
mov
sub
xchg
dec
jge
scas
jno
loop
or
fsubrp
inc
mov
mov
in
aam
std
pusha
and
jne
xlat
and
cmp
mov
data16
inc
mov
push
dec
push
adc
es
iret
pop
lahf
jbe
out
test
stos
mov
sub
pop
daa
push
aaa
clc
or
sub
cmpb
mov
in
and
imul
pop
cmpsb
call
fistpl
cmc
fxch
rorb
xchg
push
jp
shlb
mov
movsb
les
and
call
jnp
lods
in
stc
ljmp
pop
es
cmp
cmp
fstl
scas
ds
push
shlb
push
push
lea
sub
arpl
mov
mov
pusha
jmp
outsl
scas
imulb
scas
mov
mov
mov
sbb
xchg
leave
push
jbe
add
xchg
or
shll
mov
dec
inc
and
shrb
clc
inc
ljmp
inc
repnz
dec
xor
adcb
dec
cli
jno
xchg
and
pop
mov
repnz
imul
add
jae
loopne
pop
scas
cmp
outsl
pushf
mov
in
sub
mov
cmpsb
cltd
adc
dec
dec
mov
loopne
dec
mov
test
test
cli
mov
and
sub
xchg
aam
mov
out
sbb
mov
cli
in
or
lret
mov
mov
stc
mov
insb
mov
enter
push
mov
out
ds
mov
and
sub
dec
adc
or
addr16
roll
rcll
stos
adc
invd
xor
mov
dec
add
sarl
xchg
iret
add
das
neg
and
iret
lcall
mov
push
paddb
and
cmpl
js
or
inc
std
sar
jb
sub
xchg
ss
js
fsts
roll
insb
add
cmp
xchg
cmp
sbbl
ret
enter
add
or
pop
loop
mov
and
adc
bound
mov
je
imul
cld
lea
imull
loop
outsb
push
adc
iret
and
inc
and
add
xchg
sahf
mov
and
subb
jno
movsb
in
clc
leave
and
mov
xor
jno
pop
push
subb
rorb
jo
out
inc
jg
or
dec
jle
jb
dec
insb
imul
jp
pop
push
dec
cmp
sbb
dec
pop
adc
xchg
jo
push
iret
out
and
fst
lds
outsb
pop
int
cmpsb
lcall
out
aam
cmc
pop
mov
addr16
fs
inc
stc
lret
popf
dec
lahf
push
push
or
mov
sub
push
and
ret
mov
mov
mov
sti
jae
sbb
in
adc
sub
jmp
notl
out
stos
movsb
dec
push
inc
icebp
xlat
dec
mov
xorl
stos
outsl
pop
or
les
faddl
jmp
and
xchg
sub
insl
jae
sbb
mov
lods
inc
fwait
hlt
pop
inc
cwtl
or
mov
jecxz
sub
and
shlb
arpl
fists
mov
jmp
test
sti
push
mov
push
pop
lds
leave
mov
test
out
dec
nop
mov
mov
pop
xchg
lret
into
jg
jecxz
dec
dec
and
mov
jnp
lock
inc
ret
mov
mov
out
subl
mov
sbbb
stc
sub
push
or
cmc
movsl
jae
cmp
pop
fdivrs
sahf
aam
inc
xchg
sbb
pslld
xor
dec
push
push
shll
ffreep
cmpb
fdivl
test
out
push
push
popf
lods
das
jmp
and
jle
je
repnz
mov
sbb
jecxz
cmp
and
dec
test
js
xchg
fidivrl
jb
mov
adc
fidivrs
icebp
and
adc
push
fistpl
sbb
rorb
jo
pop
push
movsb
out
nop
push
jle
js
insl
fnstsw
cmp
cmp
cmp
xor
insl
aad
cmp
bound
pop
cltd
dec
in
test
sarb
and
mov
cmpsl
jmp
mov
adc
push
cmc
cli
lods
int3
sbb
out
and
addr16
inc
xchg
outsl
xor
cmp
insb
push
movsl
adc
jg
jl
jns
or
mov
rclb
add
popa
jae
mov
leave
jo
dec
inc
int3
hlt
sub
mov
dec
imul
aad
dec
pop
stc
mov
loop
neg
test
daa
pop
push
pop
inc
icebp
xchg
jne
gs
pop
mov
leave
jbe
lcall
inc
mov
jl
ja
mov
cmc
sub
loopne
in
pushf
outsb
jp
cmp
and
or
out
pusha
orl
stos
dec
repnz
in
loope
lods
mul
popf
mov
sbb
inc
and
jg
mov
cli
and
mov
inc
adc
fcoms
insb
lret
adc
shl
out
pop
pop
pop
pop
or
stos
popf
jmp
mov
imul
fwait
push
inc
ljmp
dec
mov
test
sbbl
stos
jne
or
push
dec
arpl
adc
jne
ficoml
push
dec
cmpsl
mov
pop
fsubp
dec
mov
loope
jo
repz
sbb
outsl
mov
lods
push
xchg
or
adc
sub
or
pusha
popa
pop
inc
sbb
int
or
cld
jl
xor
push
xor
out
sub
ret
pop
fldlg2
lods
leave
popa
in
jbe
push
shrb
lds
rcll
jmp
xchg
aam
or
loop
mov
add
jle
sub
ret
aaa
jmp
ud1
mov
ds
daa
stc
or
out
mov
sahf
mov
push
mov
dec
andl
mov
inc
repnz
bound
sub
sbb
or
xchg
cmp
sahf
scas
push
lret
movsl
mov
cmp
loope
mov
lods
dec
xchg
popa
fdivp
inc
adc
sbb
cmp
xor
mov
mov
dec
std
mov
insb
clc
mov
sbb
mov
adc
es
insl
out
inc
adc
ljmp
stos
mov
or
cmpsb
popf
in
jl
aam
pop
and
pop
in
rorl
xchg
inc
icebp
int
fisubrs
push
andl
iret
mov
test
fdivrl
ljmp
dec
cwtl
xchg
or
cmpsl
cld
inc
insb
hlt
mov
cld
addr16
xchg
ja
xchg
jge
jp
cmpsb
in
mov
addl
mov
cmp
inc
sahf
jb
jl
xor
mov
pop
lods
adc
xor
stos
mov
add
pop
andl
mov
add
ljmp
xor
mov
andl
idivl
sub
mov
fnstsw
imul
clc
repnz
lods
data16
cmp
or
jne
mov
fadd
clc
sub
jg
xor
aad
cmp
add
loopne
mov
pop
ficoms
in
cmpsb
cmc
push
psrad
ret
pop
mov
xchg
cmp
mov
lods
xchg
orb
add
mov
subl
cli
add
sbb
int
mov
js
lcall
repnz
shrl
clc
lcall
xchg
lods
mov
add
test
insl
andb
loopne
push
push
jae
xor
out
in
into
cltd
sbb
sbb
xor
adc
out
fsubrl
cltd
sahf
pop
clc
jnp
cwtl
jbe
jne
adc
dec
sbb
lcall
insb
mov
push
xchg
and
xchg
notb
xorb
addr16
repnz
jecxz
jo
jmp
jmp
ret
enter
popa
push
push
ret
adc
and
outsl
mov
mov
xchg
insl
out
scas
shrl
lea
fldenv
loop
or
leave
adc
outsb
inc
sub
enter
sbb
imul
std
adc
fnsave
scas
mov
push
pop
dec
fidivrl
jno
adc
lret
ficoms
adc
test
cmp
pop
fcompl
or
jg
adc
mov
xor
jmp
sarb
std
in
inc
xlat
sbb
call
jae
push
and
jnp
push
mov
and
sub
nop
cmp
fcoml
mov
add
xchg
inc
out
hlt
stc
jge
jb
inc
arpl
sub
push
push
mov
adc
repnz
add
in
test
dec
pop
add
outsl
mov
fisttpll
push
adc
call
fwait
jg
popa
sub
inc
out
mov
sbb
sbb
inc
or
mov
fdiv
notb
dec
xor
add
or
or
popf
lds
jmp
movntq
out
push
jge
push
add
ljmp
adc
add
pusha
pop
int
icebp
mov
fistpl
rcll
sbb
and
or
arpl
pop
cmp
cmp
sbb
jle
xchg
and
mov
clc
inc
call
leave
jae
mov
repz
jae
es
mov
xchg
les
push
clc
push
rcll
dec
ret
fimuls
xchg
push
cmp
adc
lods
xchg
roll
push
push
xchg
js
push
adc
popa
lret
outsl
ja
mov
icebp
push
mov
mov
fiaddl
scas
add
inc
push
mov
pop
hlt
stc
shl
test
loop
pusha
bound
fwait
cmovg
push
jo
xchg
mov
fnstcw
lret
jge
loop
push
push
rep
mov
sbb
je
xchg
js
xchg
pop
popa
loope
out
mov
movsl
push
xchg
mov
xchg
or
lahf
les
pop
or
push
push
add
xor
or
and
sbb
ret
stc
jle
notb
es
adc
cmp
repnz
mov
fst
repnz
test
mov
call
lock
and
mov
int
add
pop
add
adc
sbb
std
jmp
addb
fadd
or
loopne
xor
mov
jb
jae
bswap
jmp
cltd
push
inc
divb
add
xor
mov
or
jnp
mov
call
inc
mov
repnz
sbb
fbstp
xchg
fnclex
sbb
sahf
lahf
mov
cmpsl
and
test
rorb
mov
loope
cwtl
inc
inc
fstl
nop
subb
sub
std
mov
dec
fisubs
dec
pop
data16
andb
push
bound
test
rcrl
sbb
les
fsubrs
gs
jbe
jp
int
pop
stos
ret
cltd
push
frstor
sahf
xchg
jae
mov
jnp
scas
lahf
jb
xor
andb
aam
fisubrl
popf
or
movsl
or
cmp
or
pop
call
stos
cli
pushf
cld
push
mov
call
push
clc
mov
movsb
sub
or
call
dec
or
loope,pt
mov
mov
divb
sbbb
push
cld
lock
jmp
mov
mov
loope
push
rclb
cmp
adc
fwait
adc
xor
and
jns
enter
stos
clc
xor
jo
mov
cmp
pushf
pop
fwait
out
mov
push
xlat
jo
mov
int
mov
add
mov
xlat
rorb
movsb
into
pushf
mov
inc
xchg
cmc
inc
gs
jo
lret
xchg
xor
cmpsl
push
lock
push
dec
jbe
mov
jnp
pop
faddp
lds
pop
movsb
das
xchg
lret
inc
repz
shlb
inc
xchg
inc
shlb
divl
cmp
jle
add
dec
sub
xlat
cmp
pop
dec
pop
cld
mov
cmp
lahf
in
sbb
das
fwait
sub
ja
lock
jns
rclb
fdivl
in
shl
dec
nop
mov
and
test
sti
mov
shl
sub
sarb
into
lret
fwait
mov
xchg
out
pop
ljmp
jb
in
cmp
cli
jo
iret
stc
xchg
mov
jg
jne
sbb
mov
push
sbb
jg
mov
les
rolb
test
gs
jo
dec
ss
xor
orl
mov
es
sbb
roll
andb
popa
sub
mov
testb
or
mov
add
cwtl
mov
push
xchg
mov
inc
push
xchg
xor
sbb
cmc
pushl
out
jb
and
sti
das
in
inc
xor
pop
ffree
pop
rorb
mov
cld
dec
pop
push
int
xchg
xor
in
icebp
fiadds
jno
cld
adc
ljmp
imul
rorl
in
flds
int
and
or
sbb
js
jns
fs
movsb
xchg
mov
lret
or
insl
or
mov
sub
sbb
dec
ficomps
push
cs
adc
call
mov
jle
shrl
lods
jg
andps
cli
dec
int
push
jge
adc
xor
push
cmp
push
jae
xor
test
xlat
adc
and
test
imul
push
lret
sbb
dec
leave
int
dec
mov
cmp
popa
sarl
loopne
lock
aam
inc
lods
mov
les
adc
mov
in
push
icebp
mov
pop
push
cli
cmpsl
add
pop
ret
adc
dec
repz
jle
popf
test
mov
inc
mov
testl
xchg
lcall
cmp
dec
lock
jmp
mov
clc
fmulp
xor
and
or
push
inc
and
mov
aam
in
rorl
das
mov
lods
xor
fidivrs
jo
mov
aas
mov
cmc
pop
sbb
mov
cld
in
fcmovb
ror
imul
xchg
out
aaa
scas
std
rolb
sub
pop
mov
add
pusha
jl
inc
pop
addr16
daa
sub
cmp
repnz
inc
lock
jae
or
sub
add
cmp
push
imul
mov
dec
adc
cmp
lahf
sahf
mov
imul
pop
dec
and
test
sbb
push
test
add
jne
lcall
xchg
jmp
cmpsl
xor
je
out
mov
jno
cs
aas
jl
daa
loope
cltd
arpl
jnp
cld
cmp
cltd
testb
cltd
sub
or
loope
insl
popa
stos
and
shl
lods
int
lret
add
add
or
sbb
jge
xor
ljmp
pop
jp
xchg
shlb
dec
ds
xlat
mov
shr
sahf
dec
mulb
or
pop
std
leave
mov
pop
subb
xorl
dec
xor
and
push
mov
pop
loope
pop
dec
int3
mov
pushf
mov
in
loopne
mov
push
dec
adc
scas
daa
test
sahf
push
ret
dec
cmc
push
aam
jg
sbb
je
lods
jmp
js
mov
or
sub
cmpsb
dec
add
gs
lods
cmpsl
jecxz
pop
sbb
sbb
push
adc
dec
inc
and
ja
arpl
push
es
push
pop
mov
int
in
into
popf
jne
xor
fiaddl
aam
cmp
add
lock
dec
adc
sti
xor
xchg
pop
mov
push
hlt
xlat
pop
or
mov
ficoms
sahf
add
test
shrl
xchg
jle
mov
pop
fnstsw
into
adc
adc
mov
loop
ror
mov
js
or
lock
lea
rcl
ficompl
mov
pop
jl
outsb
les
sub
inc
mov
mov
mov
mov
decl
outsb
pop
and
inc
jo
pushf
sbb
cld
add
cmp
imul
shrb
mov
cmp
lret
call
ret
xchg
js
pop
int
jge
pop
sbb
call
or
jo
xor
mul
das
lds
clc
pop
xchg
pop
iret
mov
mov
cmp
xor
rolb
lds
mov
jns
lods
mov
mov
test
flds
movsb
jae
loopne
sub
into
add
inc
aaa
je
cmpsb
push
xchg
sbb
lock
ret
data16
sahf
addr16
fldl2t
shll
jnp
or
dec
ret
inc
ss
cld
aas
test
shll
jge
xlat
jp
rcrb
jne
fisttpll
or
add
dec
add
mov
cltd
std
mov
cmc
mov
pop
fdivrl
cmp
repz
sbb
das
or
inc
or
scas
dec
or
pushf
and
das
popl
xor
orb
ja
fmul
mov
aas
sub
sub
dec
inc
jmp
pushf
mov
movsl
test
dec
cmpsl
lret
xchg
inc
adc
test
bswap
cmp
xchg
jbe
pop
testl
movsl
mov
imul
ss
popf
ret
mov
mov
jns
sbb
mov
popa
ss
mov
shr
cld
out
daa
xchg
jle
insl
mov
gs
cld
cmpsl
das
pop
in
ljmp
out
pop
fdivr
jp
adc
cmp
test
ljmp
repnz
push
dec
pop
repnz
jp
in
lret
xchg
cmpsl
dec
fidivrl
icebp
jecxz
scas
mov
in
push
push
jno
dec
data16
outsb
in
xor
dec
out
fwait
call
clc
add
fists
cli
loop
jmp
fwait
pusha
xor
int
aad
push
inc
ret
adc
or
cmp
out
and
xorb
cmpsl
test
push
lods
insl
lea
sbb
rcrb
push
mov
or
lds
je
or
push
mov
push
or
sub
sbb
mov
mov
add
adc
xor
shufps
and
sub
mov
lds
test
inc
sub
out
adc
cmp
sbb
int3
lods
and
mov
cmc
scas
or
cmpsb
call
pop
imul
fdivs
jne
adc
dec
cmp
loopne
xor
ret
dec
lret
jbe
pop
push
xchg
stos
popf
ret
inc
jne
mov
mov
les
and
sbb
inc
xchg
mov
out
andl
fdivp
stos
js
and
cwtl
pop
mov
dec
cltd
inc
sahf
jb
cmp
fisttps
push
in
fwait
imul
push
and
sbb
or
es
or
push
test
inc
out
xor
repnz
xor
inc
test
sub
loopne
pop
cmp
inc
bound
or
jb
lea
icebp
lods
jmp
push
call
or
cmp
inc
outsb
imul
or
jge
lods
notl
and
fdivrl
push
out
cmc
push
push
xor
mov
dec
cmpsb
push
push
xor
mov
outsl
das
push
sbb
in
lock
inc
aas
loope
mov
ds
sbb
jge
sub
stos
movsl
jp
pop
xor
and
pop
dec
das
inc
shll
call
pop
push
mov
stc
lods
lahf
in
ss
adc
fcoml
loope
shr
stos
fcmovne
push
fidivs
out
and
push
and
jnp
negl
dec
and
les
pop
lcall
bound
shl
out
and
shrl
mov
add
call
cltd
into
enter
cmc
pop
sbb
ds
out
test
push
test
in
sti
adc
or
jecxz
xor
dec
jg
in
or
stos
scas
out
fidivrl
cmp
call
jb
xor
cmp
dec
push
inc
sar
inc
mov
mov
aas
adc
mov
out
adc
dec
dec
call
jne
je
inc
movsb
xor
aam
icebp
fldcw
cmp
popl
pop
flds
jecxz
inc
mov
int
icebp
pop
inc
inc
adc
add
in
sbb
push
inc
addr16
mov
lods
jecxz
xor
test
nop
xchg
and
and
adc
or
pop
fidivl
test
mov
sub
xlat
es
ja
push
mov
mov
sbb
xor
movsl
cmpsb
mov
cltd
call
nop
push
xorl
insl
jbe
subb
mov
add
daa
nop
pop
stos
mov
lcall
popa
xor
lahf
fs
or
xchg
push
push
mov
jl
cltd
mov
in
sbb
out
data16
insl
ss
hlt
fldenv
mov
lds
xor
loope
mov
push
jnp
add
sub
push
out
mov
sbb
cmpsb
adc
dec
pop
stc
inc
mov
std
es
cmp
hlt
cmp
in
ret
push
pusha
mov
repz
mov
iret
fucomip
addr16
in
and
mov
or
cmp
cld
bound
xor
pop
in
cmovo
jecxz
mov
aas
outsl
adc
in
jbe
push
xor
lcall
add
cltd
inc
xchg
movsb
mov
imull
sub
testb
bound
pop
jecxz
fimuls
in
mov
inc
mov
xchg
addr16
push
lods
sub
jmp
xchg
stc
dec
dec
mov
pop
push
mov
imulb
push
xchg
jno
push
cld
and
xlat
stc
xchg
jle
sti
loopne
adc
jne
aad
jno
movsb
loop
inc
push
and
mov
jl
ja
aad
push
cmp
stos
pop
xchg
sbb
in
fcomps
push
pop
pop
out
daa
cwtl
scas
push
pop
imul
ret
mov
ljmp
stos
add
in
faddl
jmp
adc
xchg
out
pop
pop
or
xchg
adc
or
lahf
loop
mull
dec
stos
or
les
adc
ss
enter
push
pop
mov
jne
mov
cmp
push
and
push
xchg
scas
dec
les
pusha
repz
and
push
sub
pop
pop
sbb
push
popf
cltd
jo
daa
mov
sti
adc
sbb
clc
jmp
loopne
push
add
popa
or
cmp
and
or
hlt
mov
lock
popa
inc
popf
jecxz
cmp
out
pushf
popf
insb
inc
cli
dec
sbb
lock
in
mov
add
push
in
in
outsb
mov
inc
push
adc
push
idiv
xor
jmp
mov
ret
mov
test
jecxz
mov
or
out
shrl
aad
cmpl
lods
xchg
and
out
mov
pushf
or
jp
adc
adc
cmc
adc
jbe,pt
dec
aad
push
and
push
xchg
push
mov
or
dec
repnz
clc
lods
fwait
cwtl
or
jmp
in
jne
repnz
xor
icebp
push
sbb
cmp
andb
adc
xlat
mov
scas
pop
mov
pop
jo
xor
and
sub
jp
jo
aad
movsl
jnp
ja
cmp
pop
mov
rorb
bnd
popl
in
mov
and
mov
dec
sub
cwtl
dec
ja
inc
xlat
fwait
hlt
dec
out
and
shrl
outsl
add
jb
xchg
lods
ja
or
aam
push
pushf
ret
ja
push
xor
xchg
icebp
fidivl
xlat
pop
adc
sub
shl
push
stos
mov
mov
cltd
lods
jae
ret
dec
add
adc
jno
fcompl
or
mov
and
repz
xor
push
push
adc
mov
fbstp
repnz
aad
xor
subb
bnd
pop
mov
lahf
test
fwait
int
lcall
loop
push
push
dec
xor
outsl
popf
cwtl
sahf
out
inc
jge
ficompl
inc
insb
jae
jge
leave
hlt
push
pop
stos
pushf
mov
fmulp
je
ljmp
ret
test
xor
stc
push
inc
getsec
xchg
xor
std
in
outsl
int
js
call
push
loop
cmp
in
xor
dec
int
xchg
or
aas
jae
lods
jbe
cltd
in
add
xchg
sub
sub
dec
aas
imul
stos
aam
push
adc
shlb
jb
sub
aaa
or
insl
fwait
xlat
pop
dec
bound
mov
nop
loopne
fwait
mov
test
test
push
or
push
fisttps
dec
aas
cmpsb
cmpsb
stos
sub
loope
fcomp
imull
jp
icebp
sbb
dec
mov
jg
sub
push
scas
cmp
cmp
sub
sub
push
hlt
out
dec
lods
stc
pop
push
mov
je
jl
mov
mov
mov
lds
pop
mov
test
hlt
push
add
push
ret
sbb
sbb
dec
add
mov
push
pop
pop
jns
xor
out
into
call
xlat
mov
out
and
lcall
cmpsb
add
push
ret
icebp
cmpsl
mul
ret
push
and
imul
sbb
aas
jmp
je
sbb
cmpsl
xlat
add
or
push
aas
mov
lods
cmpsb
rcrb
jle
mov
loop
adc
sub
adc
fsubs
imul
jg
push
xlat
xchg
mov
push
repnz
cmp
fcoml
int3
pop
mov
shlb
jmp
test
jo
inc
scas
sub
add
and
adc
std
jbe
fcompl
add
mov
mov
movl
inc
jg
cmp
jno
shlb
sbb
lods
inc
ds
out
jns
dec
push
insb
pop
cmpsl
es
mov
dec
push
push
mov
and
sbb
pusha
icebp
xchg
fisubs
ret
andl
jnp
cmp
sbb
pop
mov
xchg
mov
jns
pop
loope
dec
dec
inc
iret
mov
or
xor
fcmovbe
push
stos
xchg
jo
add
cmpsl
cltd
pop
cmp
sbb
daa
jnp
cmp
jmp
insl
repnz
pop
mov
subl
cmp
add
pop
mov
dec
negb
xchg
adc
sbb
jle
push
mov
out
or
mov
ss
leave
mov
inc
cmp
or
cmc
xor
aaa
or
icebp
testb
pushf
sarl
jb
push
push
sbb
sbb
pop
adc
sbb
movsb
or
in
les
movsl
test
mov
test
push
imul
push
mov
xchg
ret
in
and
fiadds
mov
mov
or
push
outsb
sub
push
in
shrb
dec
outsb
mov
mov
stos
mov
adc
mov
js
pusha
dec
mov
mov
push
in
jns
adc
scas
popa
mov
jb
push
sar
je
fimuls
loop
les
loopne
push
cwtl
add
cmp
inc
xor
dec
mov
rcrl
outsl
scas
jl
imul
push
jno
fdiv
mov
loop
lret
outsb
imul
mov
push
mov
cmp
outsl
push
lcall
push
pop
shr
les
xchg
cmp
inc
jno
mov
pop
push
cs
fwait
es
mov
popa
lret
xchg
outsl
jne
sbb
xchg
dec
and
sub
imul
dec
or
and
fisubrl
jne
xchg
adc
cmp
add
rcll
jl
or
stos
cltd
xor
pop
push
mov
iret
test
mov
push
jno
mov
cmp
cmp
lahf
add
stos
not
xchg
addr16
fstpl
adc
out
jne
mov
dec
insl
xchg
into
and
add
and
cmc
icebp
cmp
fpatan
push
inc
fmul
and
push
push
cltd
pop
mov
pusha
jnp
ss
sub
pop
xlat
add
xor
push
andb
sarl
mov
stc
jl
pop
cmpsl
mov
or
pop
mov
sub
push
push
gs
lret
pop
jo
pop
sti
push
repnz
lret
fwait
jb
jo
mov
fldenv
iret
lds
xchg
mov
mov
das
inc
pop
mov
sbb
lret
int3
xchg
in
sbb
push
stos
js
add
push
jo
sub
fldenv
pop
aas
daa
jne
int
pop
mov
test
lds
pop
test
rorb
fs
rcl
stos
and
xorl
jge
shrl
cmp
aaa
fnstenv
js
dec
dec
adc
sarb
pop
push
out
je
inc
xchg
in
mov
jo
jo
in
adc
mov
sub
sarl
je
aad
push
cld
sub
and
push
test
cmp
push
dec
rclb
rcr
cmp
lret
jae
mov
cli
sti
sub
lcall
mov
sbb
nop
add
ss
sahf
push
movsb
fldt
aaa
dec
ljmp
pop
out
xchg
xchg
aas
sub
or
sub
jecxz
push
mov
jmp
popa
mov
pop
adc
popa
or
imul
xor
xchg
clc
push
dec
stos
push
imul
icebp
or
je
mov
pop
xchg
pop
loop
stos
stc
xchg
or
aas
test
ret
into
push
jge
cmpsl
sbb
add
les
mov
call
out
xor
jnp
lret
sbb
dec
sbb
pusha
pop
xchg
pop
push
ficoms
repnz
nop
cmp
jg
mov
stos
xchg
dec
jl
pop
push
sub
mov
mov
lahf
sub
xlat
arpl
or
int3
jmp
mov
mov
adc
mov
repz
fistpll
push
mov
mov
mov
loopne
out
test
js
das
lret
mov
test
sub
add
mov
in
loop
addr16
jl
push
xorb
inc
and
repz
and
inc
bound
push
xlat
mov
xor
hlt
repz
test
imul
add
cmc
cmpsl
jecxz
out
jmp
scas
sub
outsl
cs
inc
sbb
iret
imul
mov
mov
imul
pop
sbb
pop
insb
pop
push
cmp
xchg
xlat
adc
pop
fisttpll
add
insb
pop
pop
out
xor
negb
pop
inc
fisubs
es
insl
push
mov
or
sub
mov
push
xchg
ret
push
add
add
mov
cmp
js
xor
add
push
push
in
mov
lahf
fisubrs
add
xor
push
ja
xor
loope
mov
adc
rorb
dec
xchg
ja
lea
dec
orb
push
fstps
dec
loopne
dec
ja
pop
pop
cld
add
sub
or
popa
popa
and
ljmp
ret
cmpsb
test
or
sub
add
insl
sbb
and
mov
xor
xchg
cmpsl
mov
add
aam
js
rcrb
les
jnp
and
int
movsb
xchg
jo
mov
test
push
push
lahf
and
movsb
jb
push
sbb
sub
ret
pop
dec
cmpb
cmpsb
nop
out
mov
push
xchg
cld
push
sti
cmp
xchg
das
inc
andb
aas
mov
add
mov
xchg
push
int3
xchg
jo
pop
mov
mov
es
pop
sub
fisttpl
in
add
subl
cld
add
idivb
push
insl
xchg
ror
and
pop
pop
rcll
out
imul
add
sub
shr
cltd
cmp
xlat
dec
add
sub
sub
shll
stos
sbb
pop
pop
ret
sarb
xchg
push
or
push
cmp
mov
pop
shlb
in
dec
test
xor
dec
cld
add
xlat
push
cmpsb
xlat
xor
or
sub
ja
adc
inc
cltd
fiadds
gs
dec
aaa
fsubl
addb
cmpsl
xchg
jo
out
inc
pop
sahf
icebp
ss
xchg
dec
jnp
dec
pop
add
cmp
push
inc
fcoml
mov
je
lods
addr16
or
and
jbe
sub
pop
test
sbb
dec
pop
arpl
jp
cmpsb
mov
dec
outsl
xor
addl
aas
inc
mov
xlat
clc
cs
xchg
jnp
or
cmp
repnz
mov
lods
inc
inc
push
faddl
mov
fcoms
cmc
imul
xchg
xchg
fneni(8087
movsb
movq
mov
std
cmp
cmp
fidivrs
out
adc
dec
mov
in
xchg
jo
and
mov
xchg
xchg
cmc
inc
ljmp
shlb
mov
test
and
addb
cmp
pop
add
lret
int3
shll
cmp
inc
shlb
and
add
aad
sub
mov
inc
cs
movsb
pop
popa
push
and
sbb
adcb
xchg
hlt
cmpsl
and
fildl
push
mov
push
adc
les
mov
and
mov
iret
decb
sahf
js
fwait
adc
stos
leave
outsb
fdivrl
mov
xchg
cld
xor
cli
sub
fildll
stos
ret
pop
sub
lahf
fmuls
xor
sub
pop
lahf
mov
ret
lahf
mov
notl
fcmove
testb
mov
mov
mov
dec
mov
adc
imul
stos
int3
mov
in
ljmp
mov
movsb
cltd
addr16
cmp
fsubrl
std
sbb
dec
lods
test
adc
mov
scas
loopne
call
sub
or
xor
ljmp
inc
sub
mov
mov
jae
lahf
pop
clc
xor
lahf
push
push
cli
jmp
ret
mov
sub
xor
or
leave
jbe
arpl
mov
ret
mov
mov
pop
cmp
pop
idiv
jno
js
stos
fidivs
jae
xor
ret
fcompl
sub
mov
stc
inc
jne
pop
std
sbb
mov
in
inc
aaa
cmp
jnp
adc
add
sub
pop
nop
inc
push
inc
sbb
jp
fcoms
scas
and
int3
mov
loop
scas
dec
sub
test
xor
push
xor
xor
aam
ss
js
in
idivl
test
xor
add
push
rcl
mov
cmp
adc
addl
out
cmpsl
xchg
ss
test
sbb
xor
cmp
out
stos
movsb
mov
dec
pop
cld
push
jp
lret
cmp
lods
pop
add
add
or
jnp
mov
jge
sbb
fsubrs
push
mov
bound
call
mov
xor
pop
pop
mov
mov
xor
jmp
into
cmpl
mov
cmpsl
in
int3
jb
pop
or
add
mov
fcmovb
shrl
jle
in
adc
add
sub
sarb
jmp
sbb
repz
in
bound
jno
and
xor
sub
add
jecxz
popf
xor
frstor
pop
jbe
sub
popf
push
add
jae
cmp
and
leave
add
cmp
sub
fmul
sbb
mov
int
xor
aaa
jmp
mov
out
dec
push
add
jg
inc
clc
aas
rolb
mov
imul
sti
dec
out
jecxz
data16
jns
cmp
inc
dec
push
cmp
cmp
lret
mov
xor
fidivs
lahf
inc
add
xchg
ljmp
sti
mov
inc
jae
dec
inc
or
xor
nopl
jecxz
sub
sbb
add
sbb
sub
add
xchg
icebp
loopne
ds
cmp
jb
inc
xchg
sub
sti
mov
mov
pmulhuw
push
sbb
jl
dec
aas
sbb
jp
and
cmpsl
movsb
icebp
cmp
pop
sbb
mov
and
fmul
icebp
pop
enter
pop
repz
jle
negb
cmp
pop
or
pop
jl
sbb
cmpsb
mov
jno
inc
mov
incl
adc
shll
xchg
inc
seta
mov
stc
andb
ret
add
popa
push
sar
add
mov
jp
dec
adc
imul
mov
stos
fadd
sbb
out
add
repnz
dec
mov
sbb
xchg
rcrb
sub
and
fsubrp
cmp
repnz
clc
loop
cmpsb
icebp
push
sti
outsb
push
jnp
sti
xor
or
sbb
inc
xor
or
daa
push
and
mov
dec
or
data16
adc
push
push
into
mov
push
scas
scas
inc
xchg
movsb
out
out
jns
movsl
rol
sarb
push
inc
jl
sbb
dec
lea
aas
enter
cmp
jae
inc
push
add
rcrb
adc
inc
decb
add
push
push
mov
jne
jbe
insl
or
out
int3
or
fstpt
jl
jno
nop
enter
jne
mov
imul
lods
mov
sahf
jnp
nop
sbb
or
push
cmpsl
cmp
and
sbb
fidivl
inc
cmp
sub
jmp
sbb
jecxz
dec
or
mov
das
lods
mov
sbb
int
imul
test
or
leave
pushl
in
dec
int3
rclb
push
cmp
addb
cmp
dec
push
or
in
mov
xor
dec
dec
in
push
adc
pop
dec
pop
fsubrs
cltd
inc
jp
icebp
cltd
adc
sub
or
loopne
repnz
push
dec
shll
sbb
lahf
mov
shll
xor
mov
loopne
or
mov
jno
cmp
mov
push
or
outsb
pop
jp
mov
adc
test
jp
aam
fnsave
pop
inc
pop
adc
movsl
ja
jle
add
or
leave
loop
mov
shl
call
mov
xor
jnp
dec
das
jecxz
das
les
test
pop
jae
add
or
lods
popf
in
movsl
lock
inc
xchg
mov
mov
push
shlb
fxch
arpl
lret
and
mov
leave
and
mov
adc
add
rol
or
dec
mov
jle
xor
mov
mov
sti
scas
sub
xchg
xchg
cs
ds
test
xchg
push
xchg
ficomps
sub
and
nop
stos
or
dec
cmc
movsl
mov
push
lret
ss
arpl
add
mov
mov
test
jp
sub
insl
and
sbb
cmp
xchg
jp
out
and
mov
sarb
movl
fadd
cli
jmp
xchg
mov
inc
fcoms
std
mov
mov
aas
daa
ss
out
cltd
mov
xchg
sbb
push
ficoml
inc
add
mov
jnp
enter
jg
icebp
test
lret
pop
scas
push
xlat
adc
xor
inc
sbb
in
sti
sub
repnz
lods
lret
push
or
addr16
stc
push
loopne
outsl
imul
pop
inc
imul
sub
iret
adc
clc
xchg
shrb
jb
pop
lahf
das
imul
or
push
xlat
mov
jbe
mov
xchg
sbb
test
faddl
mov
leave
jne
fdiv
negb
iret
icebp
aas
lea
mov
and
cwtl
mov
inc
lock
add
cmp
jle
mov
daa
jecxz
dec
test
cmp
cmc
pop
xchg
mov
js
xchg
xor
push
ret
mov
sbbl
adc
jns
sub
mov
negb
stos
call
cmp
popl
fisubrs
jb
inc
mov
lcall
mov
cmp
sarb
das
adc
jp
fs
adc
pop
lods
loopne
mov
push
out
test
mov
call
jno
inc
addl
mov
out
dec
jb
sbb
aad
xor
stos
jne
pop
pop
push
ret
inc
outsb
push
scas
fimuls
pop
xor
inc
jmp
scas
xchg
fisubrs
xor
test
in
lret
inc
pop
popa
inc
cmp
enter
dec
and
jge
cmp
test
pop
lds
mov
daa
scas
mov
sti
stos
in
mov
and
je,pt
adc
inc
andb
xchg
data16
ret
pusha
gs
xchg
mov
es
push
out
loopne
test
adc
or
pop
cmp
add
scas
popf
leave
xor
xchg
insl
bnd
adc
mov
push
out
jne
addr16
xchg
push
scas
push
jo
jnp
push
jecxz
push
in
ja
mov
lcall
rcrb
jp
fstsw
dec
add
cltd
adc
enter
or
adc
sub
mov
xor
mov
cli
repnz
add
pop
xchg
pop
arpl
imull
call
fstpt
test
pop
dec
mov
dec
sub
mov
inc
push
call
inc
mov
subl
or
arpl
hlt
orl
inc
rcrb
mov
lahf
repnz
inc
xchg
xor
repnz
std
inc
cmp
sbb
adc
add
or
push
xchg
xor
addr16
and
lock
stc
adc
int3
or
adc
pop
cmp
lret
orb
jge
shl
mov
sbb
jge
jb
call
dec
pop
hlt
aad
sbb
loop
out
sub
add
ja
ret
jns,pn
push
cwtl
jmp
sub
inc
int
data16
mov
les
push
ret
movsb
mov
or
push
rcrb
add
imulb
int3
cli
arpl
test
sbb
outsl
aam
mov
push
sbb
inc
and
xor
and
insb
dec
mov
inc
jl
cmpsl
jne
xchg
sbb
mov
lcall
mov
inc
test
add
cmpsb
dec
mov
push
dec
sbb
mov
xor
fs
arpl
and
push
out
pop
jne
and
dec
jnp
inc
xor
scas
ret
ds
into
fnstsw
jmp
call
fsubrl
aaa
int3
mov
insb
mov
and
inc
xchg
adc
or
add
xchg
pop
push
dec
aas
or
sti
dec
test
push
jne
push
loop
push
arpl
push
jbe
or
xchg
push
pop
fisubs
adc
sub
xor
xchg
xor
push
mov
pusha
sbb
mov
and
sub
stos
fsubrl
fistpl
mov
mov
int3
and
sbb
jnp
loop
xchg
scas
xchg
sbb
or
push
ror
jp
addr16
lock
jo
loop
hlt
rorb
sub
test
movsb
jo
lods
jp
in
lret
es
jecxz
lret
sarl
sysenter
mov
mov
daa
rcrl
test
pop
shll
dec
addr16
stos
icebp
or
subl
sub
pop
push
jle
push
js
sub
mov
frstor
aad
inc
and
push
das
inc
lret
jae
loopne
mov
and
sbbl
lahf
xchg
es
cwtl
inc
mov
add
out
mov
mov
and
cmpsb
and
pop
jae
sbb
mov
bound
movl
scas
lahf
aad
cmp
mov
xchg
inc
mov
roll
push
sarb
scas
shl
adcb
loop
inc
rol
lods
inc
and
mov
xchg
dec
and
rcr
lds
push
dec
call
xor
hlt
clc
arpl
add
enter
out
leave
pop
adcb
aaa
lahf
fstps
mov
lret
out
mov
leave
pop
mov
adc
and
cmp
xor
jmp
ss
sbb
and
rorb
mov
mov
lret
xor
inc
and
mov
test
shl
mov
out
xchg
rep
jae
mov
pop
ss
mov
in
xor
insb
xor
mov
push
cmp
dec
push
pop
mul
lret
pusha
bswap
shlb
push
push
jb
and
jg
xor
orb
arpl
imul
lcall
imul
xchg
out
jp
addr16
cli
test
sbb
mov
sahf
and
dec
xchg
jb
ret
and
test
sub
ds
inc
dec
pop
jo
int
cli
pop
std
dec
sbb
xor
cltd
xor
mov
mov
sub
mov
xchg
sub
sub
pop
pop
cmpsl
enter
in
clc
mov
pop
sbb
pusha
loop
ds
inc
xchg
mov
pop
sbb
sub
shrb
daa
es
pop
not
cltd
xlat
cmpsb
jb
test
pop
adc
or
lcall
sbb
in
loope
iret
orb
mov
pushf
stos
mov
xlat
mov
fcom
mov
repnz
mov
mov
leave
sub
pop
in
adcl
clc
ja
mov
mov
lret
cld
mov
loopne
xchg
push
insb
xchg
idivb
fs
pop
loopne
dec
inc
add
aas
decl
jecxz
int3
pop
jno
movsb
inc
sbb
add
sub
stc
cld
jle
dec
jecxz
test
les
clc
out
jnp
xor
ret
xchg
daa
nop
mov
push
aam
sahf
sub
gs
jnp
mov
lods
leave
loope
cmpsl
xchg
push
mov
mov
lahf
outsl
lahf
andl
pop
mov
std
hlt
mov
cmpsl
insl
imull
add
mov
xchg
push
pop
addb
scas
loope
rcrl
jp
push
push
call
mov
inc
mov
in
push
ret
outsl
lret
cmpsl
inc
xchg
jecxz
cmp
outsb
aam
cwtl
mov
add
adc
jg
rcll
mov
mov
pop
pop
push
push
cmp
stos
cli
dec
test
mov
daa
mov
out
dec
sub
lahf
int
sub
data16
inc
jbe
notl
inc
xchg
rclb
push
adcb
xchg
push
xor
sub
mov
lcall
mov
add
std
in
cmp
xchg
fcomi
mov
pop
loopne
stos
push
push
out
adc
call
test
xlat
mov
sub
adc
fcomps
fisttpl
outsb
sti
clc
xchg
int3
dec
xlat
or
lea
push
xor
xchg
sbb
jne
fistpl
jmp
in
movsl
sub
xchg
jge
cmpl
icebp
pop
data16
rolb
cltd
loop
adc
outsl
daa
jmp
mov
mov
rol
mov
mov
test
ret
fistpl
sti
xor
rolb
aaa
xchg
adc
out
nop
call
push
jecxz
subl
shlb
or
jo
push
inc
mov
jmp
dec
pop
xorb
push
in
pop
add
ss
inc
iret
nop
pusha
inc
imul
clc
mov
mov
cmc
shlb
xor
es
jne
std
pusha
jae
dec
out
mov
jno
mov
mov
xor
add
mov
rcl
loop
jae
mov
xchg
push
fdivrl
pavgw
dec
into
arpl
loopne
in
adc
fwait
icebp
test
jbe
jnp
sbb
mov
lods
aas
jo
out
dec
lock
push
xor
mov
cmp
jb
adc
es
xchg
push
xor
test
arpl
mov
daa
daa
inc
dec
cmp
orl
mov
mov
popf
adc
or
imul
cmp
roll
test
cs
je
pop
fnstsw
lret
clc
outsb
repz
pop
jmp
enter
bound
pusha
stc
push
testb
mov
mov
adc
popf
int
mov
push
adc
dec
icebp
pop
xor
test
lahf
jns
lahf
std
add
mov
xchg
sub
adc
imul
push
sub
std
orl
pushf
lcall
push
in
in
adc
sbb
xlat
xchg
adc
je
jmp
push
data16
push
std
pop
movsb
lods
fwait
pop
cmpsl
xchg
lods
dec
xlat
cmc
scas
fwait
dec
dec
dec
and
rcll
clc
fwait
xor
xchg
jbe
inc
xor
rcrb
lea
scas
jp
adc
push
cmp
outsl
xor
jp
sub
call
out
clc
call
push
xchg
popf
push
sub
fcomps
cld
les
lcall
incl
sbb
arpl
scas
and
dec
inc
push
loopne,pn
leave
leave
in
xor
mov
sub
mov
int3
jge
dec
push
push
cli
adc
cmp
push
pop
pop
scas
frstor
rcr
scas
push
test
mulb
sbb
gs
mov
test
movsl
repz
fiaddl
or
into
mov
pop
jge
in
pop
test
rcll
jecxz
sub
icebp
xchg
dec
shll
incl
movsl
fildll
mov
jl
dec
outsl
jmp
imul
testl
adc
addr16
pop
stc
mov
cmpsb
stos
jb
jmp
daa
xor
mov
insb
sbb
cwtl
aas
lock
lret
push
cltd
fwait
lock
lods
add
mov
mov
pop
push
mov
dec
cmp
push
cmp
add
xor
add
mov
mov
ljmp
in
mov
add
cmp
std
sub
xor
sub
xor
ss
sub
shlb
fsubr
fimull
dec
pop
or
addr16
rorl
in
lods
mov
push
lret
ret
xor
movsb
xor
dec
xchg
jl
in
cs
adc
lds
add
xchg
xchg
fs
sub
stc
pop
xor
jl
loopne
dec
and
test
mov
shlb
in
rorl
movsl
and
pop
popf
iret
out
jnp
xchg
mov
out
hlt
mov
in
sti
pop
mov
pop
cmp
mulb
aad
jl
scas
inc
addl
jl
cs
or
mov
push
test
jecxz
lock
mov
lock
in
lock
sub
fiaddl
push
ret
pushf
lea
xchg
mov
jmp
jnp
jg
xor
cli
sarb
dec
jmp
nop
pop
cmp
rcrl
pop
xchg
inc
sbb
movsl
loopne
pusha
test
adc
and
scas
movsb
push
mov
subl
fcoml
and
push
mov
push
add
int3
out
mov
cmpsb
je
dec
or
and
icebp
ret
push
addr16
fnsave
xchg
pusha
mov
pop
jae
repnz
jg
pop
xchg
inc
jo
leave
dec
movsb
mov
jg
jle
gs
stos
inc
lock
jb
and
insb
pop
and
xor
push
or
je
lods
js
loope
dec
daa
or
xchg
cmpsb
std
mov
sbb
xlat
scas
mov
pop
xor
arpl
nop
movsb
cmp
adc
inc
sub
inc
adc
int
pop
cs
das
push
inc
cmp
test
sub
cli
mov
fs
fidivl
mov
inc
rcrb
xlat
popa
fldt
das
cmp
lods
lods
pushf
mov
push
gs
cmpb
dec
add
out
mov
lods
or
cwtl
out
jmp
leave
fsubrs
or
mov
cmpsb
out
jg
push
mov
ret
gs
js
int
adc
add
xor
push
fnstsw
bnd
mov
cmp
mov
int3
pusha
int3
orl
adc
fbstp
cmpb
and
btc
sbb
insl
ja
push
sub
dec
sbb
inc
std
mov
arpl
or
fidivl
clc
mov
add
push
cmp
sub
fsub
jg
push
mov
in
dec
testb
add
xor
ljmp
aad
mov
cltd
mov
inc
enter
sub
xchg
jle
xchg
and
fildl
pop
arpl
mov
lret
ror
or
mov
es
mov
xor
shrb
jg
mov
loopne
mov
stc
fs
neg
jae
pop
cmpb
addr16
mov
xor
add
out
mov
jae
fs
in
stos
enter
ds
pop
pop
stos
rolb
pushf
addr16
lcall
sbb
nop
loop
xor
cltd
outsb
out
mov
arpl
mov
pop
cmpsb
push
mov
orb
daa
movsb
repz
add
outsb
sbb
or
adc
jle
mov
test
push
push
pop
push
push
mov
inc
fs
pop
notl
inc
dec
adc
popf
das
mov
shl
xchg
scas
mov
addr16
add
add
jb
scas
jb
icebp
test
sub
stos
adc
mov
mov
push
jbe
cmpsb
or
inc
arpl
test
dec
ljmp
loope
ret
dec
sub
enter
pop
xchg
or
jl
cli
data16
push
push
mov
imul
cmp
or
sub
inc
xchg
cmp
or
fidivrl
pop
inc
mov
imul
notl
test
dec
fucomip
and
xchg
stos
adc
lahf
sbb
pop
sub
popa
in
imul
push
aad
lds
add
fsub
pop
int3
xchg
fsubrs
xor
jl
popa
xchg
cmpsl
push
das
inc
fildl
push
scas
lods
lods
ljmp
sbb
mul
jmp
dec
lcall
adc
sub
mov
and
dec
std
inc
mov
inc
lds
sbb
or
push
sub
push
push
pushf
stos
leave
xchg
dec
sti
ljmp
adc
dec
fs
stos
es
jns
es
outsb
test
cwtl
test
pop
xchg
cltd
mov
adc
mov
push
jle
cwtd
xacquire
out
push
jae
rorb
mov
adc
cmp
xor
xlat
pop
cltd
std
pop
dec
lds
inc
pushf
enter
push
and
push
cmp
mov
sub
push
cld
mov
adc
cld
sub
loopne
jecxz
rcll
sti
loope
fdivrs
mov
add
pop
popf
dec
mov
sub
lock
popa
mov
add
xor
movsb
jns
mov
fwait
hlt
mov
sub
aaa
js
inc
sub
in
les
mov
jg
test
lcall
xorl
sarl
pop
add
jbe,pn
sub
cmp
sbb
mov
and
inc
mov
incl
pop
adc
add
mov
adc
test
nop
sub
cmp
push
loopne
inc
xor
jmp
cld
aad
nop
mov
sub
gs
mov
mov
pop
inc
xor
sub
std
adc
pop
cmp
sub
sahf
scas
and
mov
fidivrl
out
inc
xor
outsl
dec
xor
sbb
xor
add
ss
push
mov
icebp
sbb
fisttpll
pop
inc
out
icebp
jne
sbb
les
es
dec
or
lods
or
je
pop
in
lret
test
mov
pop
inc
fnstenv
call
shr
lods
push
fnstsw
cli
jae
mov
shrb
mov
shrl
push
jne
fisttps
aas
sbb
stc
test
xor
lea
cmpsl
pop
and
call
fwait
negb
aam
jns
sbb
stc
lds
insl
and
jb
flds
dec
test
mov
cmp
outsl
es
push
movsl
int
mov
xlat
xor
cmpsl
inc
pop
dec
xchg
cmp
imul
cmp
sub
mov
scas
ss
pop
or
adc
jnp
pop
push
lret
pop
add
scas
js
mov
outsl
add
add
test
ret
repz
add
xchg
pcmpeqb
fldt
sub
popa
fldenv
stos
inc
or
sbb
cld
and
xchg
in
test
sub
pop
repz
pop
idiv
xchg
loope
adc
push
repnz
dec
pop
out
cmpsl
jg
cmpsb
mov
inc
jle
inc
in
push
sbbl
scas
out
cmp
jo
inc
inc
lds
mov
dec
jb
outsl
and
fimuls
repz
fbstp
shrb
repnz
and
ja
cltd
pop
aam
test
and
insb
xor
icebp
jae
jnp
adc
push
imull
repnz
xchg
lea
xchg
jno
jbe
sahf
mov
in
addl
sbb
insb
shr
lds
cmp
sub
push
fs
ret
xchg
xchg
lea
fwait
out
and
pop
int3
jp
and
inc
test
mov
out
aas
lods
test
cmpsl
ljmp
mov
test
in
xchg
popa
scas
mov
mov
xchg
xchg
bound
sub
push
sbb
ja
pushl
aas
test
outsl
lock
lfs
push
cltd
cmp
mov
sbb
xlat
jb
pop
aaa
test
shll
adc
and
repz
repz
lds
lock
sub
repnz
je
test
lret
ljmp
cmc
adc
loopne
scas
push
push
aas
lock
fcmove
sbb
pop
dec
int3
outsb
jl
cmpsl
cli
xchg
gs
pop
outsl
ljmp
jo
xor
cmp
mov
inc
subl
sbb
push
adc
aaa
pop
mov
mov
inc
mov
xor
sti
lahf
cmp
insl
ret
xchg
add
repz
add
jmp
nop
insl
xchg
sbb
sub
mov
sbb
jne
cltd
pusha
mov
add
aad
pusha
test
push
mov
adc
mov
dec
movsb
mov
sbbb
lds
and
xor
stos
shll
pushf
ret
je
xchg
inc
jns
lods
pop
insb
and
and
mov
sub
and
cmp
push
push
push
pop
mov
fcom
pop
fwait
pop
or
mov
mov
xchg
sbb
movsb
pop
xchg
daa
mov
fsubrs
mov
pop
pop
aam
jle
pop
cmp
pop
cmpsb
lret
imull
mov
stos
adc
dec
in
out
sbb
popa
pushl
ret
jno
out
dec
test
sbb
jne
testl
inc
fdivs
cld
add
shlb
push
sub
aaa
mov
mov
sbb
daa
enter
dec
mov
shr
loopne
mov
in
mov
jae
mov
shlb
ret
push
mov
lods
adc
mov
push
xchg
push
dec
jo
pop
out
or
lock
push
inc
jno
popa
pop
in
fimuls
gs
dec
mov
pushf
jmp
mov
rorb
gs
xchg
fbld
xchg
ret
sahf
pusha
jbe
cmp
stc
or
test
test
cmp
mov
cmc
sub
icebp
push
push
ret
rorb
sub
dec
test
aaa
imul
mov
cmp
or
and
mov
mov
xchg
mov
int3
sub
jnp
fidivs
fstp
scas
rorl
idiv
sbb
loop
cltd
or
rcll
mov
dec
out
inc
and
mov
outsb
int3
das
scas
mov
cmpsl
out
insb
loope
mov
fcoms
adc
push
pop
mov
ds
je
ror
pusha
outsw
or
cmpsl
or
mov
sarl
out
xchg
in
pop
dec
pop
add
loop
jne
mov
push
or
cs
mov
push
mov
sub
scas
dec
cmc
arpl
fldt
xchg
mov
aam
rcll
push
lods
adc
lock
mov
or
inc
rorl
mov
lret
mov
cltd
jmp
xor
xchg
mov
cld
rolb
push
xor
rorb
xchg
xor
repz
jge
jno
sbb
adc
imul
cwtl
popf
shrb
addr16
mov
push
sbbl
dec
pop
pop
orb
or
jg
cmp
pop
cmc
sub
aas
xor
lret
or
imul
jo
push
push
or
outsb
je
mov
pop
lret
push
movsl
imulb
jg
fistpl
ja
inc
ret
aaa
in
in
stc
rolb
pop
mov
mov
rcrb
or
xchg
mov
es
addr16
sbb
lahf
arpl
cmpsb
bound
inc
and
jp
pop
jbe
dec
push
mov
mov
leave
xchg
inc
jmp
adc
mov
out
sbb
lods
mov
cmp
pop
popa
cmp
into
iret
mov
add
mov
dec
push
sbb
fcom
outsb
mov
rorb
rcrl
inc
xor
icebp
pushf
jg
addr16
jns
cmp
xchg
das
xchg
cmp
xor
mov
pop
test
fistps
sbb
das
loope
jnp
cwtl
mov
jmp
enter
adc
cmp
pop
and
mov
and
insl
lds
repnz
or
push
and
stos
int
add
lock
sbb
and
add
and
push
in
mov
push
int3
cmp
shlb
clc
jb
or
lds
pop
or
and
test
sub
jg
movsb
dec
dec
cltd
test
dec
push
adc
xor
hlt
call
mov
imul
jle
mov
mov
cwtl
ret
jo
pop
xlat
outsl
push
or
mov
out
jp
xchg
je
cs
stos
std
fstl
stc
or
xchg
mov
and
dec
sbb
insb
test
into
push
sub
push
sub
out
into
pop
xchg
cmp
lds
mov
loope
push
cmpsl
divl
repnz
loop
add
adc
inc
add
test
add
mov
xor
and
mov
mov
push
sub
and
jg
arpl
pushl
ror
sub
popf
nop
lods
push
sbb
std
and
inc
cld
addr16
pop
cmp
pop
and
mov
or
and
or
addb
shl
add
jp
inc
mov
in
xlat
das
shrb
mov
cmpsl
inc
cli
mov
pushf
gs
and
pop
push
push
insl
or
mov
je
pop
shll
adc
lea
clc
sbb
cmc
sbb
inc
push
lods
mov
mov
dec
jb
mov
imul
js
jne
enter
sbb
test
mov
lds
jne
sbb
mov
and
inc
dec
lods
mov
mov
cmpsb
dec
test
ret
clc
lock
cmp
xchg
das
stos
dec
dec
xchg
jbe
aas
pmaddwd
gs
jae
aaa
hlt
jae
hlt
movsb
outsl
mov
divb
popa
arpl
jmp
ljmp
into
jo
in
testl
add
mov
add
outsl
cmpsb
sbb
add
rcrl
mov
addb
sub
jg
fs
repnz
mull
rol
int
adc
addr16
add
popa
mov
iret
mov
ret
xchg
xchg
das
dec
sbb
jns
out
rorb
sub
icebp
cmp
push
lahf
mov
xchg
jo
pop
js
sbb
pushf
and
bound
add
xor
xchg
xor
pop
arpl
xchg
xlat
cld
xchg
imul
std
mov
clc
sbb
stc
mov
adc
jmp
aad
pop
push
cmp
jmp
dec
jg
dec
push
test
mov
and
lock
mov
fsubs
fwait
stos
in
add
xor
in
cli
jne
stos
jnp
mov
or
sub
das
cld
mov
imul
xchg
mov
pop
xchg
mov
cwtl
in
pusha
cmp
loopne
inc
fwait
loopne
outsb
mov
mov
xchg
or
jne
aam
out
mov
add
and
jnp
les
and
pusha
roll
sub
rcl
nop
mov
or
adc
add
lds
repnz
orb
in
xchg
rcll
fstpt
mov
dec
xorb
stos
lea
pop
push
mov
filds
lret
ret
loop
pop
mov
push
ror
in
sti
sbb
out
ljmp
pushf
lock
pop
xchg
in
cmp
fucomp
sbb
into
pop
test
xor
push
push
mov
cli
bswap
xchg
movsl
cmp
mov
xchg
ret
xor
mov
xor
jo
std
cmp
enter
xchg
in
in
out
out
repnz
nop
sbb
sub
hlt
sbb
shl
fucom
and
ljmp
cwtd
inc
dec
pop
lret
mov
gs
inc
sbb
cmp
nop
cli
decl
repz
out
pop
dec
push
and
sahf
adc
add
bound
ljmp
or
sbb
cli
push
orl
inc
adc
push
cli
inc
into
into
call
pop
scas
ja
icebp
push
adc
sti
jp
ret
outsb
push
mov
adcb
cmpb
mov
or
push
bound
sub
pop
adc
pushf
shrl
and
imul
xchg
mov
ljmp
pop
cld
cmpsl
mov
mov
dec
xchg
imul
fisubrs
pop
aam
lea
mov
les
sbb
and
or
ficomps
test
push
ret
or
clc
xchg
lcall
mov
push
stos
sahf
push
jg
push
cmp
inc
xor
push
dec
adc
cltd
fcoms
or
pop
lea
mov
ret
scas
data16
lea
add
push
pop
xchg
test
mov
aas
call
cmpsl
sub
push
dec
sbb
pusha
fsubs
cmc
sub
call
outsl
ljmp
cmc
sub
test
repnz
fiadds
stos
roll
inc
cmpb
and
dec
lods
inc
aaa
mov
xlat
int
fmul
pushf
stos
xor
int3
fwait
push
add
lret
dec
test
pop
aad
dec
xor
pop
push
add
cmc
add
testl
push
push
popf
movsb
sub
dec
pop
and
add
dec
mov
addr16
jp
push
adc
addb
stc
or
bound
testl
cmp
andl
or
add
jecxz
add
stos
fidivs
lods
daa
xchg
js
inc
lahf
lcall
xor
mov
xchg
sub
mov
test
loopne
clc
inc
pop
out
stos
sti
jno
fsubrs
or
cmp
xor
stos
roll
sub
call
mov
pop
into
mov
inc
pusha
div
insl
push
add
stos
lods
pop
sbb
sub
push
repnz
cmp
xchg
inc
jae
xchg
adc
stos
xchg
pop
mov
pop
arpl
shrl
sbb
dec
pop
inc
lcall
testl
or
adc
xor
hlt
mov
jl
jmp
xor
cmp
cmc
lods
sbb
hlt
enter
popf
xor
push
cmp
ficomps
dec
push
pop
or
cmc
mov
dec
push
mov
xor
stos
aam
pusha
sub
dec
mov
ret
jle
nop
sbb
jp
js
arpl
stc
andb
mov
jne
rcll
cld
mov
rcrl
jne
enter
xor
mov
data16
mov
mov
and
mov
xorl
mov
add
xchg
and
imul
jnp
cmp
dec
hlt
test
mov
loop
pop
push
dec
ljmp
sti
je
mov
or
mov
lea
movsl
pop
dec
cmpl
data16
cli
cmp
jns
sub
pop
in
fisttpl
outsb
in
xlat
or
mov
cmp
and
jmp
icebp
adc
cli
sbb
hlt
jg
and
dec
push
or
push
push
ret
mov
in
gs
or
and
imul
sub
sub
in
out
jnp
outsl
movsb
iret
out
in
fcompl
scas
dec
sbb
imul
pop
jl
out
add
pop
jno
and
pop
sbb
sub
or
mov
data16
shr
ljmp
je
bound
fsubr
insb
into
cmpb
mov
iret
jns
push
mov
jg
jge
aam
repnz
push
outsb
push
sahf
arpl
movsb
push
xchg
lds
inc
or
push
lahf
add
loope
or
fisttpll
xchg
mov
enter
adc
insl
cmpsl
mov
mov
bnd
ss
into
add
pop
jns
cmp
bound
pop
subl
mov
cmp
sbb
xor
les
mul
mov
int
fsubrl
divl
xlat
pusha
nop
sbb
rcrb
sti
in
das
lods
arpl
lcall
scas
lahf
add
pop
xchg
pop
shrb
xorl
hlt
insl
jno
jo
add
xchg
xchg
shrl
enter
pushf
inc
flds
xchg
data16
inc
xor
inc
adc
shlb
sub
loope
pop
pop
xor
add
pop
sub
xchg
cmc
xchg
sbb
xchg
mov
lock
push
ljmp
int3
sarl
cmpb
and
push
ja
cwtl
and
push
mov
cmpsl
in
mov
stc
mov
pop
xchg
xor
dec
push
ljmp
mov
adc
or
jb
jbe
das
pop
imul
cs
in
cmp
gs
mov
imul
fcmovu
mov
sbb
xor
movsl
js
xchg
xchg
adc
cli
mov
clc
cwtl
adc
lock
and
jle
movsb
loope
imul
dec
aam
out
cmp
dec
mov
adc
add
push
sub
jo
dec
andl
repnz
mov
cmp
clc
jb
sbb
imul
mov
ret
add
bound
push
adc
lds
fdivrs
rolb
imul
fcomps
inc
xchg
callw
cmp
mov
xchg
std
dec
dec
loopne
jne
pop
popa
xchg
movb
aad
dec
fdivrl
mov
insl
cmp
xchg
clc
pop
punpckhdq
jle
xorb
fwait
movsl
dec
dec
mov
adcl
test
inc
pop
push
outsb
xor
pushf
cmp
test
cs
push
dec
sub
icebp
push
pop
push
fwait
mov
or
shl
or
adc
std
movsl
jnp
push
jbe
icebp
scas
outsl
stos
xor
aas
jg
fisubl
mov
jo
dec
mov
sbb
popa
pushf
sub
sub
inc
scas
xor
adc
push
dec
addr16
test
rcr
xor
addb
jns
add
gs
mov
and
cmp
pop
xchg
in
sbb
jae
inc
mov
popf
ss
or
in
jb
mov
popa
lret
js
cmp
stos
add
pop
jb
in
nop
loop
sub
aas
ss
push
mov
inc
pop
popl
fsubrl
xchg
dec
pop
mov
shr
std
lods
sub
shrb
cmp
jno
xchg
loop
mov
mov
pusha
sahf
cmp
ret
mov
inc
test
rclb
push
stos
std
leave
and
push
lcall
arpl
cmp
pop
aad
mov
xchg
ja
fstl
cmp
adc
pop
xor
bnd
je
mov
in
clc
xor
mov
add
cmp
push
daa
daa
lods
repz
mov
test
pusha
scas
mov
fstl
cltd
fidivs
xchg
in
movsb
int
pop
fisubrs
aad
pusha
inc
sbb
jp
adc
xor
sbb
in
and
dec
sbb
pop
in
and
ja
jp
test
enter
pop
xor
pop
jecxz
xor
repz
mov
in
inc
sub
add
xchg
xchg
imul
xor
push
orl
data16
test
lods
stc
scas
cmp
hlt
xor
and
jmp
cwtl
dec
stos
jnp
dec
and
out
mov
sahf
gs
stc
js
leave
and
pop
sub
cld
xchg
sarb
jecxz
fdivl
stc
aam
popf
outsl
enter
cmpsl
jmp
mov
jle
push
dec
repnz
lea
test
mov
add
inc
inc
and
or
and
jmp
lret
orb
lcall
imul
and
pop
lock
mov
dec
pop
pop
aad
int3
cmp
adc
repz
and
or
xor
mov
and
repz
sub
xchg
outsl
adc
xchg
testb
dec
sarl
push
mov
xchg
mov
sbb
push
pop
and
cmp
out
xchg
jne
mov
insb
daa
jo
inc
jnp
push
push
pop
or
or
lahf
pop
pop
xchg
out
mov
jne
mov
mov
sub
jbe
je
sub
adcb
mov
movsb
cmp
add
jbe
sub
pop
lods
cmpsl
pop
rorb
outsl
loop
dec
bound
sub
lock
push
rorb
jmp
adc
icebp
sbb
aad
or
or
in
lds
mov
xchg
xchg
inc
cmc
pop
icebp
mov
mov
insl
cmp
clc
cmp
mov
rcl
mov
fistl
jne
jns
sbb
and
cmp
jle
out
xchg
hlt
data16
mov
int
dec
ljmp
sub
inc
adc
fadds
push
mov
inc
fimull
mov
fs
popf
jl
mov
and
movsl
sub
adc
daa
dec
pop
test
je
or
jb
inc
xlat
xchg
scas
mov
mov
out
or
xor
lods
lock
mov
pushf
and
jle
dec
pusha
xor
into
sbbb
dec
push
lods
mov
mov
or
mov
lret
cvtpi2ps
jo
out
jne
pop
loopne
into
int
cmp
sbb
xchg
sbb
test
mull
cmc
mov
nop
push
filds
fwait
mov
add
ds
sti
sub
adc
mov
cmc
cmpsb
cmp
ss
xlat
int
mov
addr16
mov
call
inc
scas
arpl
daa
xor
or
dec
sti
mov
inc
pop
stc
xor
das
fldenv
push
xchg
pop
mov
loope
push
dec
es
mov
jnp
dec
repnz
xlat
lahf
sti
sbb
mov
shlb
clc
and
pop
mov
stos
pop
leave
ds
popl
inc
imul
jg
lret
ljmp
out
xlat
inc
iret
sti
or
xchg
cltd
jno
pop
outsl
inc
hlt
imul
mov
sbb
or
push
jmp
mov
add
adc
js
sbb
dec
add
pop
rcrb
mov
ds
rcrl
fidivrs
inc
or
outsl
sbb
add
scas
scas
push
cld
mov
cmp
daa
ds
jg
pop
bound
sti
nop
sub
dec
xchg
xchg
push
jecxz
pop
pop
repnz
addb
sub
popa
jp
mov
inc
movsl
pop
lods
icebp
or
ret
inc
and
shll
sbb
or
divl
mov
pop
mov
xor
test
mov
movsb
jmp
or
push
addb
pop
push
xchg
pop
std
xchg
fisttpl
fmul
or
xchg
adc
or
mov
sbb
imul
enter
lcall
or
adc
cmp
mov
cli
fdivrl
pop
adc
jp
fildll
xchg
mov
aam
cmp
jnp
or
xorl
cli
xor
lods
dec
fwait
aad
pop
ljmp
inc
xor
call
or
mov
sbb
cli
cs
add
hlt
cld
cmp
lret
sbbl
mov
loope
pushf
scas
movsl
mov
sbb
and
gs
xchg
or
jo
mov
pop
cmp
mov
bound
aas
int3
scas
aaa
cmp
jmp
push
das
and
call
adc
lret
and
xchg
sarb
call
test
sbb
cmp
add
pop
or
sub
push
mov
sub
xchg
or
sbb
jmp
add
push
cmpsb
push
gs
inc
dec
cwtl
gs
xor
or
stos
loopne
mov
push
scas
mov
jbe
clc
gs
inc
mov
xchg
mov
daa
je
sub
push
dec
scas
and
repnz
icebp
gs
loopne
mov
inc
into
jbe
imulb
stc
push
push
nop
cmp
mov
lret
pop
dec
mov
mov
cmpsl
lods
loopne
mov
jle
cmpsl
cmpsb
pop
add
pop
movsl
fs
pop
cld
repnz
inc
and
loopne
or
cwtl
bnd
jne
cmp
and
mov
jp
enter
and
cmp
das
jl
and
pop
xchg
xchg
scas
mov
xchg
mov
les
jmp
mov
in
sbbb
insl
dec
popa
jnp
pmulhw
mov
mov
xchg
adc
icebp
sahf
insl
inc
xor
fldl
loop
pop
or
lret
pop
loop
sub
aad
sub
and
xor
inc
ss
push
adc
lcall
scas
nop
fwait
dec
or
ret
jmp
into
lock
call
outsb
mov
aam
inc
or
mov
xchg
enter
jns
cmp
dec
xor
mov
imulb
test
shll
sbb
int3
enter
stos
mov
hlt
lea
or
mov
mov
fcoml
addb
movsl
mov
testl
or
mov
or
sbb
sub
je
add
out
or
xchg
push
and
js
sbb
test
cmpl
stos
dec
mov
aas
sub
mov
repnz
jp
xchg
and
sbbb
orl
mov
push
ret
rcll
mov
test
dec
incb
fsubs
add
out
add
xchg
dec
idivb
or
add
and
mov
scas
jbe
sti
insb
adc
xchg
mov
push
into
sahf
jae
sarl
jns
js
push
nop
sub
mov
push
mov
fisubs
in
jmp
inc
mov
mov
and
mov
inc
out
and
xchg
fs
cmp
jns
je
dec
fcoms
mov
std
out
push
push
pcmpeqd
mov
and
bound
mov
mov
jg
stos
inc
cli
fwait
jle
jle
and
scas
push
sbb
subl
pusha
dec
sub
xchg
scas
sub
adc
mov
lods
xchg
xchg
dec
sub
hlt
or
insl
ret
and
popf
mov
push
and
cmp
repnz
pop
mov
into
ret
sub
mov
sbb
add
and
xchg
adc
int
dec
add
lods
jmp
xchg
loope
mov
ret
mov
and
popa
sbb
sbb
out
xorb
cld
add
js
stc
mov
xchg
pop
shlb
and
sbbb
in
mov
dec
sub
ret
lret
test
movsb
in
lock
divb
jo
adc
insl
shl
jno
int
dec
popa
idivb
inc
cwtl
js
adc
jnp
and
cmp
cmpsl
call
shlb
leave
xor
fisubrl
test
rorl
push
incl
mov
int
enter
sbb
cmc
pop
inc
cwtl
imul
insb
shl
push
push
ds
les
jmp
add
or
mov
testb
push
aad
aam
rcr
cli
mov
jnp
inc
fdivl
ljmp
mov
addb
jae
xor
std
dec
mov
insl
push
mov
push
pop
cmp
cltd
cmp
push
push
push
mov
mov
jne
and
jbe
sbb
iret
jno
test
les
mov
jno
int3
jp
jns
jno
lahf
in
sbb
pushf
mov
in
jge
xchg
loopne
daa
out
pushf
xorb
paddq
push
mov
daa
jl
in
mov
je
xor
sbb
shr
nop
xchg
xor
and
adc
test
je
negb
cmpsl
add
and
inc
cld
jl
insl
lea
cmp
dec
fiaddl
sub
jge
dec
cwtl
pop
dec
inc
sub
inc
lcall
cmpsb
jb
sahf
dec
imul
fnstcw
lds
add
insb
xchg
push
sbb
pushf
xchg
loopne
loopne
lods
pop
pusha
outsl
sahf
test
cmp
cmp
cwtl
mov
int3
adc
aas
data16
mulb
xchg
out
cmp
rcr
dec
test
sarb
or
lret
gs
lods
cmp
test
adc
iret
stc
mov
push
mov
nop
cmp
jo
pop
adc
out
out
fldl
push
sbb
cli
popf
xchg
fidivrs
fsubl
mov
popl
and
aaa
dec
mov
mov
aas
adc
fs
mov
inc
hlt
pusha
dec
add
xor
mov
pop
bnd
sbb
fistps
mov
adcb
mov
lock
add
pop
xchg
mov
dec
push
pop
lret
sbb
and
mov
and
mov
and
loop
scas
ja
cli
jle
cwtl
test
repnz
andb
push
fidivl
lods
das
inc
push
gs
mov
add
faddl
int
js
push
sbb
lret
push
lahf
sarb
rcl
stos
in
pmullw
xor
jmp
jbe
lock
adc
cmpsl
xlat
fldt
fwait
jns
jns
iret
sub
adc
mov
fs
rol
jnp
adc
jo
sbb
ret
add
sub
cmc
sbb
scas
rorl
lock
insb
pop
pop
xchg
pop
ljmp
jmp
fwait
pop
lret
nop
jge
fidivs
mov
mov
add
out
mov
loope
push
in
push
mov
jg
or
push
cmp
push
lods
movsl
fstp
pop
jns
dec
push
insl
pop
lret
xchg
xor
insl
fisttpll
add
push
imul
pop
or
mov
pop
in
dec
push
daa
shrb
and
stos
xor
sub
mov
aam
pop
jae
sub
enter
jl
xchg
insl
mov
push
lea
push
jb,pn
fldenv
sbb
sub
jg
pusha
mov
inc
js
int3
enter
test
push
xchg
mov
mov
sub
dec
pop
scas
pop
cmpsb
xchg
or
sub
mov
xchg
xchg
in
and
scas
xchg
dec
leave
test
loop
mov
sbb
aad
pop
xchg
jnp
add
mov
cwtl
adc
loope
mov
fisubrl
test
mov
imul
es
jae
aam
pushf
pop
cwtl
add
mov
xchg
insl
test
loop
fsubs
rorb
lahf
push
and
cmp
bnd
adc
jns
add
adcb
aaa
in
mov
mov
int
movsb
sbb
repz
jmp
js
imul
shrl
or
lret
ja
sbb
rorl
pop
pop
xchg
icebp
push
cmp
or
inc
adc
pop
xchg
movsl
icebp
pop
inc
mov
mov
or
loop
out
ss
mov
fmuls
xor
mov
js
mov
movsl
daa
call
je
popf
enter
sbb
cmp
xchg
mov
or
gs
and
inc
aas
sub
adc
jl
sbb
inc
xor
fdivs
xor
fisttps
mov
mov
cltd
inc
out
int3
lods
or
jmp
mov
cli
loope
sbb
arpl
cmp
or
orl
inc
lcall
cmpsb
subl
aad
push
popa
xlat
push
mov
cmpsb
push
sbb
inc
lock
mov
inc
cld
popf
xchg
test
cli
mov
mov
mov
mov
out
popa
mov
mov
sub
shrl
outsb
or
xchg
lret
test
aas
push
cli
xchg
rcrl
gs
xchg
sub
loop
push
in
das
and
dec
xlat
or
or
push
jmp
fmull
jg
add
es
inc
ds
loop
insb
and
imul
mov
sub
sub
mov
subl
jp
rolb
ss
les
push
jae,pt
icebp
jmp
call
scas
stos
xor
sub
jmp
shll
and
lret
xor
cmp
xchg
call
jge
ds
je
add
ja
popa
ljmp
lock
lock
mov
sbb
ds
sbb
icebp
or
cmp
mov
push
and
push
mov
gs
ljmp
adc
pmovmskb
lods
outsl
loope
stc
bound
xor
mov
sub
or
fadd
xchg
jbe
xor
mov
clc
stc
push
sub
xor
xchg
sbb
int3
push
cmc
xchg
push
dec
in
or
out
push
xchg
push
pop
mov
lea
cwtl
test
mov
test
fsubs
nop
std
sar
mov
jnp
jp
push
and
mov
xor
out
fldl
fistl
test
imul
pop
and
arpl
andl
xor
xor
lcall
idivl
xchg
inc
sub
xor
imul
mov
mov
sahf
mov
xchg
xchg
xor
lock
rclb
push
icebp
aam
les
gs
dec
add
adc
jle
xchg
sub
dec
daa
inc
jmp
push
test
mov
adc
mov
fbstp
or
or
fs
notb
sahf
sbb
and
sub
and
jo
les
stos
adc
les
fiadds
mov
popf
loopne
and
and
pop
cmc
rcll
push
out
xchg
or
mov
dec
or
sbb
dec
xchg
insl
mov
cmpsl
daa
add
pushf
xor
popa
mov
stos
insl
xchg
pop
push
xlat
clc
fisubrl
rcrb
popf
cmp
xchg
mov
cld
test
test
mov
rcrl
cmp
pushf
ret
or
enter
jno
shl
sub
jge
cld
stos
jle
mov
dec
mov
dec
pop
sub
sahf
dec
cmpsl
dec
push
jne
sbb
movl
or
jg
xor
pop
mov
insb
lcall
and
or
mov
ja
dec
adc
test
sahf
out
cltd
add
mov
mov
jno
and
push
ljmp
arpl
mov
inc
mov
ficoml
scas
je
jne
mov
mov
hlt
adc
and
es
push
shlb
and
xor
std
lea
pop
pop
fstpl
lcall
cmpsb
xchg
xchg
daa
inc
dec
sub
sbb
out
jnp
mov
inc
xchg
in
outsb
insl
mov
movsl
lods
add
mov
cmc
cltd
sub
js
inc
out
mov
ret
popf
test
imul
pxor
es
push
loop
pop
pushf
push
lret
sub
push
mov
jle
loope
and
jno
movl
add
test
popa
pusha
subl
jb
rolb
test
in
popa
adc
lcall
adc
fldenv
mov
movsb
dec
rclb
or
add
sub
add
mov
jb
ret
shll
outsl
adc
mov
cmc
sub
out
cmpsl
and
rorl
fldenv
mov
push
dec
pop
lods
push
ret
aad
ss
pop
and
fsubl
stos
fisttpll
add
and
bound
cld
mov
ret
cld
notb
jo
jno
out
pusha
shlb
leave
mov
fcmovb
rcll
sub
and
testb
or
lret
xlat
test
jecxz
lret
sbb
ficompl
scas
sti
jnp
cmp
jae
pop
std
mov
pop
je
push
fistpl
jne
adc
jge
add
inc
adc
push
mov
dec
or
out
cltd
xchg
fstpl
hlt
es
subb
rcl
call
jns
insl
xorb
dec
xor
push
das
fsts
movsl
fwait
imul
mov
lods
sbb
pop
movsl
and
out
xor
repz
rcrl
pop
std
xchg
push
gs
test
jl
push
iret
add
cmp
popf
jecxz
into
in
fistps
pop
iret
test
gs
aam
mov
push
xchg
add
sti
fnstsw
push
fcmovne
test
stos
jl
mov
pop
fstps
call
cs
jmp
shlb
lods
andb
xchg
jle
cmp
pop
add
xor
cmpsl
sbb
outsl
loop
std
xchg
imul
aaa
fdivr
inc
mov
dec
mov
xlat
add
mov
lahf
aas
sbb
inc
out
push
mov
sbb
pop
adc
repz
xlat
nop
das
xchg
sbb
sbb
jns
fs
js
push
pop
clc
mov
repnz
ds
dec
lret
push
test
roll
sub
pop
jmp
imul
inc
jecxz
arpl
sub
fistpl
mov
cld
movsb
cmpsb
mov
and
jne
ret
lods
inc
xchg
cmp
dec
inc
mov
dec
cmp
enter
shrb
ss
jb
xor
lret
ret
dec
push
xchg
daa
in
fst
push
ja
sub
lods
mov
andl
jae
jle
xor
dec
sub
jp
negb
and
xor
push
xor
push
clc
sar
fucomi
ljmp
lods
push
push
pop
fcomps
in
or
into
repnz
loop
add
push
push
les
sub
inc
jns
icebp
test
push
out
sti
leave
into
xchg
jmp
je
cmpsl
dec
mov
imul
movsl
lsl
mov
dec
xchg
or
int3
cmp
push
lret
inc
push
xor
xchg
inc
jle
addb
mov
popa
roll
pop
movsb
sbb
jg
and
sarb
inc
and
mov
pop
push
cwtl
dec
mov
lcall
sub
lods
sti
fcmovne
lret
addr16
in
lock
loopne
mov
call
add
cld
cli
mov
cltd
mov
add
xchg
pushf
cmpsb
pop
dec
repz
repz
leave
hlt
daa
or
js
loop
add
push
aaa
fwait
jg
push
movsb
jmp
jmp
xchg
ds
into
cld
scas
movsb
in
push
nop
repz
push
cs
add
ret
lock
xor
push
daa
sbb
cmp
mov
mov
xor
xchg
shll
lea
and
push
icebp
mov
cmp
fsubrl
inc
xlat
pop
int3
jmp
xchg
movsb
sub
pop
mov
scas
call
cmp
adc
add
lret
sub
mov
iret
idivl
gs
cmpsb
stc
or
mov
mov
and
adc
fsubl
or
data16
dec
dec
xchg
xchg
adc
cmp
fcomip
lock
jnp
dec
repnz
and
fstl
push
xor
test
or
add
ja
push
repz
pop
fidivs
inc
mov
div
cli
adc
and
add
mov
test
or
mov
mov
cmp
xchg
mov
shll
je
lea
dec
fbld
jle
ds
ljmp
cmp
mov
fsubs
pusha
mov
cmp
mov
iret
leave
psadbw
pop
dec
movl
fdivrs
cwtl
or
xchg
xchg
cmpsb
jne
negb
sti
out
movsb
inc
mov
adc
cmpb
xchg
jecxz
fbstp
enter
dec
add
adc
ja
pop
jns
popa
pushf
out
test
mov
addr16
out
insl
sub
ljmp
enter
outsl
fs
jnp
xchg
cmp
outsl
mov
std
mul
pop
fucom
mov
lea
dec
mov
sbbb
rcrb
pop
in
jle
sbb
rcrl
fwait
aaa
pop
or
push
popf
adc
int3
leave
xchg
sbb
std
mov
data16
pop
and
inc
clc
dec
xchg
or
hlt
push
push
ret
aaa
subl
shrb
lahf
test
addb
sti
jl
push
cmp
leave
push
js
pop
scas
jecxz
pop
push
insb
cltd
call
sbb
icebp
test
xchg
jle
das
xchg
rcll
pop
lret
ret
add
dec
aaa
sbb
and
fs
pop
sbb
or
imul
jbe
or
push
mov
ss
ret
pop
xchg
or
xor
xchg
stos
push
xchg
and
push
in
push
aaa
mov
aas
cmpsb
xor
sahf
adc
pop
lret
dec
lcall
stos
push
xchg
mov
fistpll
insb
pop
push
test
xchg
adc
repnz
jmp
mov
mov
rcll
sbb
fs
pop
dec
mov
pop
cmp
int
jnp
lea
xor
fimull
add
lods
mov
pop
mov
gs
cltd
or
xlat
enter
push
fs
daa
lahf
dec
pop
sbb
sub
adc
cmp
dec
inc
add
push
cwtl
dec
cmp
pop
lahf
ss
insb
not
ds
adc
daa
aaa
sbb
andb
imul
xor
and
dec
mov
jecxz
inc
mov
outsb
dec
and
fisubrl
or
out
orb
bound
sbbl
aam
fmuls
aaa
cwtl
popf
js
daa
pop
xlat
mov
sub
int3
lea
and
das
jnp
push
pop
insb
mov
push
add
das
or
ja
pusha
sbb
jg
xorb
notl
or
out
xchg
loop
dec
fsub
add
stos
mov
jle
pop
cmp
xor
stos
sbb
gs
cmc
shlb
jle
push
sbb
into
fldt
inc
add
xchg
and
in
inc
and
data16
gs
xchg
movsl
js
and
rcr
out
dec
mov
xchg
push
repnz
push
sbb
xlat
mov
mull
es
gs
add
jo
jne
adc
in
push
mov
xor
dec
mov
inc
shlb
movsb
cmp
fwait
scas
scas
lcall
inc
mov
or
inc
lret
jge
push
das
frstor
push
push
ss
mov
into
mov
imul
out
inc
test
inc
cmp
aad
cmp
ret
lods
jns
das
andb
in
test
cwtl
aad
jb
pop
insb
sbb
dec
rcl
and
ja
xchg
xchg
test
pop
fsts
lcall
mov
ret
cmp
and
call
mov
pop
and
in
and
mov
sti
xchg
test
add
ljmp
not
or
bound
aas
inc
dec
inc
sub
in
sbb
imul
lret
jb
inc
fs
push
test
jecxz
insb
outsb
xchg
cmp
mov
ret
jae
adc
push
jecxz
add
lret
popf
jnp
xchg
xor
adcl
ds
xchg
jg
push
sub
pop
lods
xor
pop
sub
jle
cltd
test
outsb
sbb
aas
fstpt
mov
movsb
push
movsl
mov
les
stos
out
jl
sub
mov
test
jmp
pop
jge
or
sbb
cmp
and
popf
jle
iret
dec
adc
loopne
adc
push
or
sbb
je
cmpsb
mov
add
or
test
je
fs
je
or
test
xchg
mov
popf
dec
mov
imul
lcall
xchg
mov
push
mov
cld
jmp
test
cmp
xchg
jmp
push
dec
jnp
push
cmp
int
xor
or
sub
cltd
cwtl
jne
out
sub
filds
pushf
mov
fdivrp
push
pmulhw
jb
in
cmp
lea
imul
paddw
xchg
cli
loopne
fldenv
mov
mov
hlt
in
xchg
xchg
pop
push
xor
sbb
inc
add
pop
adc
lds
mov
leave
cmp
cld
out
ds
jb
popa
loopne
leave
popf
arpl
dec
aad
aas
push
sbb
mov
mov
outsl
sbb
or
stc
ljmp
cmp
lock
sti
popf
insl
fldl
int
or
push
stos
movsl
rcr
lcall
inc
rclb
dec
gs
imul
xchg
in
loop
and
jmp
xor
dec
lret
fmuls
int3
call
mov
inc
mov
mov
dec
aad
pop
cs
jge
stc
inc
xor
mov
ja
xchg
mov
mov
sub
mov
enter
sbb
and
add
gs
cmp
popf
shll
add
pop
pop
jg
movsl
movsl
jmp
out
fs
movsl
xchg
iret
fsubrs
dec
std
push
test
mov
cs
mov
sbb
and
pop
mov
and
fistpll
aam
pop
movsb
push
cmp
adcl
into
fcompl
lods
fcoms
inc
push
rdtsc
cmp
add
hlt
test
cmp
pop
mov
loop
ret
loope
shll
test
sub
pop
jbe
lahf
test
stos
les
xor
rcl
out
movsl
pop
lcall
pop
ret
inc
imul
pop
or
jge
jns
cmpsb
sub
or
sbb
cwtl
inc
fsubrl
ret
sub
add
in
sub
push
out
jl
jg
hlt
out
xor
mov
pusha
ret
or
jge
cmp
jno
sub
xor
ja
jg
push
adc
jp
mov
js
addr16
into
loop
int
insl
push
push
in
ret
xchg
add
stos
jmp
imulb
aam
les
arpl
pop
jl
rol
cmc
int
jo
lcall
nop
xchg
test
out
in
push
push
mov
jb
lcall
and
in
jg
dec
in
jb
dec
test
decb
sti
add
push
xor
pop
nop
mov
stos
dec
in
mov
movsl
mov
push
xchg
inc
mov
das
pop
push
mov
ficompl
xor
adc
dec
push
movsl
repz
stc
pushf
out
xor
pushl
es
les
scas
ret
lods
xchg
loopne
jmp
lock
xchg
cwtl
cmp
jbe
cwtl
push
push
aad
arpl
scas
addl
mov
mov
add
in
adc
sti
mov
inc
loope
adc
andl
pusha
jp
outsl
stos
jp
daa
cmc
and
mov
mov
sbb
or
jl
icebp
jge
imul
or
scas
sub
sarb
adc
mov
mov
iret
insb
and
mov
sarb
jge
rcr
sbb
nop
lahf
dec
adc
sbb
mov
dec
out
imulb
push
xchg
inc
inc
into
out
jnp
pop
jge
in
in
ljmp
outsl
aam
lods
cmc
push
sbb
pop
in
pop
xchg
in
in
std
repnz
into
xchg
push
sub
pop
popa
and
sub
cmc
js
add
dec
repz
gs
cld
xor
jl
cmp
daa
pusha
push
mov
lahf
sub
scas
jno
jg
adc
cs
mov
inc
shrd
pop
xlat
mov
cmp
mov
addb
movsb
pop
mov
cmc
pop
jae
sbb
xchg
cmp
xchg
or
jnp,pn
add
sub
lcall
or
imul
in
xchg
test
sbb
add
fisttps
inc
dec
xchg
jo
pusha
push
adc
test
stos
lock
je
call
mov
push
out
pop
dec
or
mov
adc
adc
insb
rclb
xchg
adc
push
or
mov
adc
adc
prefetch
or
mov
out
popa
fsubl
insb
adc
loop
sbb
std
inc
jno
lret
mov
icebp
repz
out
andl
cmp
or
shrl
dec
in
mov
cli
divb
enter
xchg
xchg
adc
xlat
mov
add
lcall
push
xor
push
sbb
xlat
pop
clc
inc
jge
adcl
lcall
xchg
aad
dec
fwait
jne
out
and
cltd
sbb
adc
cmp
sbbl
out
sub
call
jp
pop
stc
adc
bswap
xchg
in
rcrl
insl
mov
iret
pushl
and
repnz
movsl
jmp
sbbl
test
lods
fcoms
mov
xchg
cltd
notb
or
pop
cmpsl
lret
idivl
jmp
jp
stc
sub
dec
shlb
clc
adc
or
mov
test
mov
mov
cltd
xlat
xor
or
sbb
dec
test
scas
jnp
adc
sub
pop
or
inc
xor
pop
addb
ret
sub
xor
dec
mov
push
cltd
aam
repnz
cmc
and
pop
fxch
mov
mov
sahf
outsb
out
shrb
int
pop
sbb
lcall
ljmp
lahf
or
divl
dec
mov
test
pop
jl
lods
repz
jp
inc
jae
test
mov
mov
dec
notb
jl
fadd
dec
inc
imul
jp
test
inc
pop
or
nop
fs
hlt
mov
leave
cld
pop
mov
daa
push
leave
pushf
movsb
loopne
insb
mov
test
mov
jb
cmp
inc
loop
sbb
lea
mov
outsl
stc
test
lds
test
inc
imul
or
sbb
icebp
add
loop
js
pushf
and
sar
mov
mov
iret
inc
mov
jecxz
mov
and
jmp
inc
inc
adc
mov
push
jmp
mov
and
push
lds
xchg
clc
dec
push
std
mov
inc
pop
mov
sbb
adc
out
mov
sbbb
loope
daa
add
cld
push
lcall
clc
pop
cltd
push
jecxz
mov
test
addr16
pop
aas
mov
dec
aad
cltd
cltd
push
or
je
test
inc
mov
cs
addb
sub
imul
rolb
fiaddl
add
add
movsl
pop
pop
xchg
mov
dec
gs
pop
leave
hlt
aas
shll
xchg
loopne
outsl
pop
xchg
inc
inc
rclb
add
and
mov
cmp
cltd
inc
insl
outsl
rol
pop
loopne
xchg
mov
leave
bound
push
or
insl
xchg
js
in
sbb
fsts
pop
jb
cltd
xor
adc
in
lret
popa
push
lock
mov
add
xlat
outsb
jmp
out
xor
jmp
cmpsl
xchg
cmc
or
ficompl
sti
fs
sub
rorl
sub
cli
sbbb
mov
or
mov
inc
stos
andb
jmp
out
jns
pop
roll
push
xchg
or
or
xchg
xchg
mulb
iret
ja
mov
adc
sti
mov
jge
xor
dec
jle
inc
or
sub
repz
pop
sbb
pusha
arpl
pop
lock
inc
leave
and
pop
ret
cli
sub
xchg
lahf
test
loop,pn
or
aaa
fisubs
jp
cmc
imul
sbb
roll
push
xor
cmp
xor
push
aam
frstor
idivl
and
jmp
adc
lea
icebp
sub
cmpsb
add
mov
jb
push
sbb
or
aaa
int3
mov
stos
or
jbe
loop
into
mov
in
adc
push
xchg
add
emms
adc
ds
add
lock
xlat
es
mov
mov
add
dec
mov
inc
inc
mov
jo
icebp
test
mov
sub
lret
fmul
test
stos
mov
cmp
dec
xor
and
iret
sbb
daa
int
lods
movsb
int
fnsetpm(287
sahf
loop
mov
mov
xchg
xchg
xor
push
adc
dec
sarl
xor
adc
test
inc
outsl
scas
sbb
aad
add
inc
xchg
jecxz
cmp
mov
das
ljmp
xchg
sti
js
inc
cmpsb
rcrl
ret
and
cmp
loop
mov
movsl
movntq
xchg
mov
in
dec
and
negl
mov
inc
inc
icebp
and
lcall
lret
mov
loope
pop
or
and
add
jno
lock
add
arpl
and
out
imul
int3
xor
jecxz
lods
sub
fidivrl
dec
insl
push
mov
pushf
xchg
shll
dec
aaa
adc
fisubrs
pop
addr16
jmp
push
adcl
loop
jnp
add
adc
sub
dec
xor
or
sbb
pop
sbb
mov
stos
fisttpl
xchg
stos
pop
mov
cmpsb
fnstenv
cld
pop
xchg
outsb
test
int
push
push
rorl
rcrl
movsl
adcl
sub
pop
addr16
sbb
in
into
imul
scas
jp
mov
inc
push
lcall
roll
sub
inc
xor
insb
cld
adc
pushf
cwtl
pop
fidivrl
sub
pop
sub
bound
data16
loop
or
fwait
inc
in
stos
movl
mov
mov
scas
les
push
mov
xchg
repz
sbb
fdivrl
jbe
into
pop
shrl
imul
and
lret
or
es
pop
lahf
xor
mov
outsb
rcl
mov
fistl
adc
jbe
out
outsl
pushf
adcl
enter
out
into
popf
pop
popfw
outsb
mov
lods
insl
jecxz
sub
dec
lds
cmp
enter
add
push
out
mov
xchg
jle
xor
rolb
cmp
dec
arpl
push
adc
push
ljmp
pop
fdivrl
push
bound
mov
or
popa
add
mov
adc
insb
pushf
mov
mov
je
js
and
leave
ja
mov
lret
dec
rorb
fidivrl
sub
cmovbe
mov
fldenv
cs
xor
pushf
push
mov
cmp
outsb
mov
je
pusha
orl
pop
jge
lret
stos
imul
mov
icebp
test
xor
in
aad
jge
ja
dec
fidivs
popa
inc
pop
movsl
aas
xchg
or
movsl
adc
sbb
lret
or
mov
fs
or
jp
ret
hlt
jmp
push
mov
repz
cmp
call
xor
adc
les
mov
jo
mov
movsl
iret
or
mov
inc
insb
adc
sub
xor
lret
gs
ret
fcomi
xor
xchg
xchg
xor
outsl
mov
lock
inc
pop
ds
flds
xorl
insb
jmp
jge
sarl
pop
mov
fldenv
adc
mov
enterw
pop
xor
in
jmp
mov
insb
aad
push
ffree
pop
inc
loope
add
push
pushf
push
loopne
fidivs
out
shll
adc
roll
xchg
and
push
add
lock
aas
sahf
xor
cmc
dec
rcl
shl
outsl
adc
mov
inc
ffreep
cli
or
dec
sbb
shrb
es
out
aas
jo
iret
jg
movsl
cmp
stos
mov
vunpcklps
das
icebp
mov
push
pop
adc
mov
ret
fwait
daa
or
je
sahf
test
sarl
inc
add
inc
popl
mov
cmp
fwait
adc
or
mov
ljmp
pop
push
es
pop
data16
out
fs
dec
clc
movsl
loope
dec
loopne
pop
int3
cwtl
and
ja
lret
push
cli
ljmp
inc
sbb
pop
add
out
push
mov
mov
fisubrl
pushf
jo
sti
pusha
push
lock
sbb
stc
push
pop
sarl
cmpsl
dec
jns
mov
loope
or
repnz
mov
dec
sbb
pop
sbb
sbbb
pop
pop
sbb
lods
insb
ficompl
cmp
fbld
push
inc
or
ss
enter
mov
push
loop
lret
pop
addb
fcomps
adc
mov
push
imul
pop
addr16
and
fadds
dec
div
cmpsl
cmpsb
popf
daa
lret
push
inc
loopne
or
je
jg
jg
fists
inc
movsb
jb
out
gs
aad
mov
jmp
cmpsb
xchg
loope
mulb
inc
sbb
inc
pop
imul
xor
push
insb
jg
test
inc
inc
outsl
jb
lock
movsl
or
mov
mov
mov
das
pushf
mov
or
out
mov
xor
sti
inc
and
mov
push
sbb
lahf
ss
icebp
mov
incl
cwtl
xchg
and
pusha
mov
mov
inc
xlat
xchg
fcmovbe
loopne
into
insb
test
arpl
push
cmpsl
pushf
jl
xchg
mov
cmp
xor
push
iret
mov
xor
jg
push
aas
lock
lods
cmpsl
jg
cli
or
popf
sbbb
lret
mov
cltd
xor
xchg
xor
es
xchg
push
int
hlt
outsl
sti
sbb
push
shl
push
cmp
mov
punpcklbw
sbb
xor
hlt
popf
iret
cmp
dec
gs
ror
imul
jne
mov
imul
pop
pop
jno,pn
in
pop
cmpl
xor
loopne
rolb
sbbb
add
push
hlt
xor
mov
xor
add
hlt
add
pop
or
insb
gs
and
jmp
fucomi
in
jle
xchg
aad
jo
mov
les
push
imulb
hlt
rorb
mov
mov
sub
insl
js
insl
dec
cmp
mov
jmp
loopne
movsb
sub
into
cmc
and
cmp
insb
fwait
fwait
jge
leave
xor
mov
mov
addr16
call
push
jmp
dec
gs
xor
lds
xchg
xchg
into
stos
lea
inc
fmuls
movsl
cmc
aam
mov
es
jbe
mov
pushf
mov
test
mov
cmpsl
cmpsb
lods
addl
pushf
inc
imul
dec
mov
ret
jne
cltd
out
dec
jns
add
pop
test
and
xlat
xchg
fwait
adc
xrelease
jge
xchg
inc
and
mov
pop
loop
lods
lret
sbb
js,pn
cmpsb
ja
sub
cmp
push
xchg
outsb
xlat
dec
xchg
cmp
xor
mov
outsl
and
and
shr
jmp
aas
xchg
mov
push
xchg
into
loope
data16
add
xor
mov
xchg
dec
fwait
sub
cmp
orb
addl
clc
and
jb
add
es
adc
test
mov
push
jmp
sbb
push
aad
cltd
add
adc
aad
mov
clc
xor
fistpll
add
aad
fstpl
or
and
test
adc
pusha
add
std
xchg
mov
cmpsl
xchg
jne
lds
aaa
and
inc
dec
dec
and
iret
xor
push
xor
push
dec
jns
or
dec
inc
loope
gs
sbb
mov
mov
mov
sub
jne
data16
cwtl
fwait
and
push
jne
adc
mov
pusha
outsb
jb
mov
mov
out
push
cltd
dec
fwait
pop
pop
jno
lods
addl
inc
adc
jns
jae
mov
jecxz
add
inc
xor
hlt
nop
xchg
fwait
pop
xchg
xchg
lods
fwait
jecxz
mov
daa
adc
sub
sub
jbe
dec
insl
cmp
xchg
sbb
jns
pop
push
into
inc
fnsave
mov
pop
dec
lods
jg
adc
in
int3
mov
cmp
test
das
in
jle
mov
inc
ljmp
ljmp
adc
jg
ja
fisubs
dec
mov
ret
jecxz
leave
push
sub
dec
addr16
pusha
out
pop
test
mov
sar
mov
ljmp
xchg
inc
jmp
adc
loop
sahf
loop
xchg
cmpsb
push
lods
stos
loopne
pop
push
in
sbb
lcall
xchg
fnsave
jmp
jge
lcall
jne
out
hlt
jg
mov
inc
xor
fidivrl
ret
push
add
mov
and
in
sbbl
mov
in
mov
std
mov
test
dec
rolb
and
loop
mov
push
jmp
fs
pop
push
xor
rcrb
xchg
jno
movl
xor
xor
jge
testl
mov
add
mov
xor
mov
mov
in
repz
jno
dec
sbb
cmp
lcall
dec
call
xchg
icebp
push
pushf
and
dec
enter
cmpsb
ret
mov
shl
std
pushf
test
add
cmpsb
std
rorb
movsl
cli
and
jbe
add
test
xchg
insw
mov
add
je
mov
xchg
dec
pop
xor
test
mov
aam
and
add
cmpsb
or
jae
aam
dec
movl
jae
jno
sahf
xor
rcl
jle
int3
or
test
and
dec
jb
cmp
xlat
loope
inc
push
lret
jns
pop
add
test
movsb
xor
loopne
inc
mov
stos
sbb
mov
into
clc
mov
cmp
repz
and
divb
adc
push
pop
sbb
push
jb
mov
mov
fcompl
sahf
lock
incl
xor
xor
cmp
pop
or
cmpl
sahf
pop
cmc
sbb
xchg
sbb
icebp
or
pushf
mov
roll
mov
test
jle
pop
mov
mov
fistpl
loope
addps
mov
mov
test
adcl
jp
popa
out
sub
or
fmul
ja
mov
jbe
gs
aas
mov
push
lock
sub
push
lods
testl
sbb
dec
movsl
push
xor
push
add
cmp
mov
fcmovu
mov
cmpsb
cmp
xor
mov
dec
sti
xchg
cmp
and
or
stos
imul
stos
dec
mov
addr16
add
inc
pop
push
cmp
stos
out
leave
mov
sarb
jp
shrl
pop
dec
pop
jae
dec
ret
imul
bound
pusha
cmp
xchg
call
mov
pop
jbe
dec
inc
sub
gs
xorb
and
jns,pn
lret
add
into
pop
leave
jnp
push
adc
flds
adc
mov
mov
sbb
stc
imul
push
cmp
ret
aam
cmp
lock
lahf
orb
popa
sub
aas
xchg
and
aam
lret
push
jecxz
in
adc
or
hlt
mov
iret
xchg
test
jg
addr16
out
jl,pn
cld
dec
je
mov
pop
jecxz
pop
adc
mov
mov
and
push
mov
aaa
int
xor
jl
mov
mov
ljmp
sbb
and
ja
sub
and
cmp
addr16
std
sahf
pushf
cmpsl
mov
mov
subb
fnsave
outsl
xchg
incl
leave
sbbb
xor
xchg
scas
int
mov
or
cmp
xlat
fimull
mov
add
test
and
jno
out
aaa
lea
xlat
cmpsb
fmuls
push
es
cmpsb
lods
stc
ja
xchg
sbb
and
push
mov
loop
mov
xor
imul
xor
outsb
cli
popf
test
and
and
xor
jmp
pop
cld
adc
call
push
jns
push
mov
inc
xchg
mov
mov
imul
lcall
push
ss
aaa
fwait
sub
add
sub
and
daa
jge
mov
mov
mov
add
mov
out
inc
and
push
enterw
inc
jmp
je
pop
cmp
xor
inc
or
loopne
cmp
mov
mov
ret
sub
and
dec
popf
push
ljmp
in
je
cmp
popf
sahf
fiaddl
sbb
or
xor
sub
pop
test
data16
xor
or
adc
push
cmp
push
hlt
inc
cwtl
and
inc
pop
adc
dec
sub
mov
inc
or
out
sbb
les
icebp
mov
movsl
pop
cmp
push
rcl
sub
imul
mov
jnp
pop
cs
mov
cmp
ret
loopne
xchg
lods
movlps
pop
aad
xchg
push
or
fimuls
shlb
jp
jmp
dec
repz
ret
imul
jmp
xchg
adcb
jg
outsl
or
jo
push
xchg
std
sub
repz
or
loope
mov
or
imul
rcrb
adcb
insl
lret
shlb
add
mov
cmp
inc
jo
fdivrs
decl
mov
or
inc
insl
pop
inc
test
fs
lods
pop
out
aad
sub
jg
js
out
push
out
and
imul
cmp
jns
test
jg
mov
inc
pop
sub
mov
cmp
adc
fsubs
fiaddl
sbb
xchg
push
call
jmp
aas
sarl
test
notl
dec
xchg
popa
pop
pop
leave
repnz
and
xor
cmp
push
and
xor
cmpsl
mov
push
arpl
adc
pop
push
ficompl
and
jle
mov
jno
daa
or
shrb
fcmovnu
and
inc
test
std
loopne
push
lods
call
dec
mov
pusha
stos
or
inc
pop
mov
xchg
adc
push
jl
cmpsb
mov
nop
int
pop
cmc
scas
cwtl
fs
pop
cmp
insl
in
xchg
push
inc
mov
outsb
xchg
jb
je
dec
cld
mov
xlat
inc
add
jmp
mov
outsb
mov
lods
add
jp
lods
pushf
cmp
add
dec
daa
daa
pop
in
fwait
jae
dec
pop
scas
and
testb
pop
mov
call
jge
sahf
filds
ja
add
push
jae
daa
movsl
js
dec
push
or
inc
cmc
in
sbbl
in
push
mov
pop
mov
push
push
mov
mov
fistpl
insl
call
push
sbb
jb
mov
call
popa
dec
jo
xchg
or
pop
add
sar
nop
cmpsb
push
sbb
dec
cmpsl
jecxz
ss
sti
pop
paddw
or
mov
daa
mov
lcall
decb
lahf
sahf
lahf
add
cmpsb
stc
mov
adc
xor
sbb
mov
or
or
jb
sub
in
pop
dec
icebp
bound
pop
clc
push
sbb
xor
loop
stos
pop
mov
or
inc
icebp
in
push
nop
inc
out
je
stos
lods
movsl
dec
daa
inc
iret
mov
pop
in
aaa
mov
out
or
sbb
stc
and
push
insl
mov
fmull
inc
inc
jmp
cltd
inc
and
sub
push
lods
mov
scas
scas
sti
in
pop
call
mov
jl
rcll
test
pop
cmp
sti
insl
scas
aas
or
dec
outsl
test
push
pop
dec
add
and
lret
std
es
pop
xor
pop
pop
xchg
cmpsb
addr16
out
mull
lods
and
sarb
mov
fwait
stos
inc
daa
cmp
hlt
lahf
jp
jl
rolb
cmp
xor
push
sahf
pop
lods
mov
pop
in
jge
cmp
lret
daa
jo
daa
inc
fdivrl
mov
loop
mov
sbb
xor
out
daa
pop
loope
lret
add
mov
and
outsl
add
sbb
jne
xor
stc
loopne
mov
jge
je
cs
pop
pusha
out
inc
cmc
cmp
adc
push
mov
adc
testl
push
jle
sti
bound
ret
or
sahf
adc
push
mov
ja
mov
lea
ja
call
pop
insl
xor
outsl
mov
faddp
aaa
into
cmp
inc
pop
fildl
test
lret
adc
ljmp
test
loopne
lcall
lock
jle
fcmove
add
push
data16
dec
lods
fs
sub
out
daa
mov
dec
xor
sub
bound
xor
xchg
fcmovnb
xlat
imul
adc
push
sbb
and
cltd
push
add
inc
out
stos
testb
cli
mov
adcl
orl
test
cli
mov
push
inc
dec
rorb
xchg
xor
arpl
or
shll
popf
push
sti
lock
add
lock
addl
enter
fisubrl
inc
add
bound
data16
add
dec
cmp
mov
jno
in
pop
call
or
push
sbb
nop
lods
pop
mov
jge
stc
andl
jbe
sbb
aas
and
push
push
test
bound
sti
push
add
into
icebp
jbe
xor
scas
call
popf
test
iret
dec
out
dec
mov
sub
mov
pop
pop
cmpsl
sbb
mov
lds
lcall
fiaddl
pop
scas
outsl
and
test
clc
sub
mov
outsl
and
int3
mov
mov
stc
dec
inc
mov
repz
in
sbb
out
lods
cmc
mov
adc
pushf
push
rcr
mov
cmp
roll
daa
xor
inc
mov
sub
iret
iret
ja
cli
ss
dec
in
lret
inc
in
xchg
in
push
and
jmp
cmp
popa
mov
ror
test
sbb
dec
outsl
data16
xchg
inc
insb
dec
push
mov
pop
fldenv
in
gs
out
dec
mov
mov
inc
in
mov
mov
adc
aam
lock
lods
movsl
and
dec
mov
xchg
push
jne
jp
scas
xchg
sbb
dec
insb
push
dec
fistps
ret
pop
cwtl
sar
xor
aad
mov
push
lea
cli
test
cmp
scas
andl
mov
push
int
insl
lods
adc
int3
popa
imul
mov
negb
or
push
sub
test
mov
adc
sbb
xchg
mov
pop
pop
jns
pop
push
xor
sbb
jecxz
jne
lods
jg
xor
dec
div
in
iret
fcmovbe
mov
cmovbe
ret
jno
adcb
sub
outsb
push
and
jp
mov
mov
xchg
sti
xlat
mov
push
push
add
popf
jae
mov
xchg
jns
outsl
cltd
jbe
adc
ljmp
popf
and
sbb
push
out
test
add
cmp
rorl
sti
dec
cmp
in
jno
mov
push
cltd
movsl
les
out
cmp
add
cwtl
popa
xor
fsts
mov
leave
or
es
mov
and
sbb
add
loopne
sbb
add
jl
pop
pop
clc
fidivl
das
dec
lret
pop
mov
jl
or
rcrl
bound
insl
rorb
mov
mov
lret
push
mov
adc
stos
mov
push
hlt
hlt
mov
daa
pushf
daa
pop
jo
fwait
insb
and
or
dec
mov
pop
mov
cmp
int3
sbb
mov
pop
test
jecxz
mov
les
aam
mov
sbb
xchg
xlat
mov
push
fwait
cmpsb
mov
mov
or
xchg
sahf
sti
pop
sub
adc
outsl
rorl
insb
cmp
xchg
sti
xchg
test
pusha
mov
leave
sbb
inc
cltd
fnstsw
add
mov
sub
or
divb
xchg
in
fildl
mov
push
sbb
int3
stc
xlat
out
iret
jge
pop
pop
mov
or
xor
xchg
dec
cltd
push
lds
push
sbb
dec
pmuludq
decl
aam
mul
xor
cmp
insl
fistps
xor
dec
out
dec
lds
jge
fnstenv
xchg
loope
aaa
mov
fildll
cmpsb
dec
arpl
fidivs
scas
sti
mov
dec
sub
xor
dec
incl
pusha
movsb
dec
inc
xchg
mov
sbb
push
jnp
xor
mov
cld
ret
xor
xchg
sbb
push
pop
and
call
jo
push
imull
jnp
into
scas
clc
out
pop
fcompl
cmpsl
mov
jge
mov
mov
popf
sbb
and
dec
push
adc
testl
movsb
mov
mov
test
cmp
jecxz
in
loop
hlt
fnstenv
fisttpll
fucomi
mov
sub
push
shlb
out
mov
mov
addr16
lahf
icebp
dec
sahf
insb
mov
mov
and
aam
lahf
add
inc
xlat
clc
stos
sbb
aas
imul
xlat
jns
dec
lock
cs
mov
out
scas
lret
bsr
cmp
add
shrl
rorl
pop
push
loop
xor
jb
test
fsubl
sub
add
das
in
das
ja
out
sub
sbb
xchg
insb
jno
mov
ss
push
bnd
jno
cs
std
addr16
or
js
adc
cmp
shrb
fdivl
jbe
int3
in
imul
xchg
cmpsb
inc
sub
lds
or
cld
jl,pn
pop
dec
outsb
adcb
sahf
notb
testb
push
popf
adc
pop
dec
cmp
pop
ret
rcrl
cwtl
and
dec
mov
sub
fidivrs
mov
jns
jb
loop
add
mov
cs
cmp
fwait
aad
jmp
adc
dec
push
iret
dec
stos
es
or
outsl
xchg
push
ret
or
pop
cwtl
arpl
sub
xor
push
dec
je
jmp
pop
mov
insl
sbb
xchg
jge
fcomi
mov
inc
pop
jl
mov
cs
ret
es
cltd
data16
dec
xchg
js
cmc
sub
xor
mov
mov
test
dec
xchg
je
ficoml
test
ds
jecxz
int3
std
jmp
gs
adc
fmull
mov
dec
dec
subb
push
jg
pop
mov
push
dec
push
push
repz
stc
and
inc
daa
mov
addr16
push
clc
out
movsl
xor
mov
cmc
jle
sbb
rclb
popa
adc
or
ret
add
andl
mov
adc
aaa
xor
imul
mov
pop
sbb
cltd
sub
mov
loop
gs
and
mov
mov
test
call
ds
loope
rorl
stos
iret
loope
test
data16
mov
inc
arpl
mov
leave
mov
pusha
cltd
out
and
jmp
mov
jbe
mov
stos
mov
lds
pop
fadds
xchg
addr16
pop
push
divl
mov
aam
xor
xor
stos
lods
fimull
test
popa
jmp
test
sub
jbe
push
cmp
fstpl
xchg
dec
sbb
mov
inc
je
xor
push
sub
lock
sub
lea
repnz
scas
cmp
jl
daa
lods
das
lret
out
aaa
cmc
push
mov
gs
pop
sti
ret
scas
xchg
jle
mov
leave
or
mov
mov
insl
test
in
cmpsl
jno
add
xlat
das
outsb
pop
scas
xchg
cmc
add
mov
sarb
xchg
mov
mov
jb
ret
shll
mov
lret
pop
push
push
dec
jo
sub
popf
lock
in
fs
pop
ljmp
mov
notl
mov
and
cli
mov
push
jg
stos
cwtl
xorl
insb
xorb
cwtl
dec
and
sub
shlb
and
mov
js
sub
push
clc
imul
adc
cltd
out
sub
mov
xchg
sbb
nop
bound
aad
out
mov
and
or
out
xor
fstp
fmull
sub
dec
xchg
push
sbb
mov
push
sub
cmpsl
xchg
xlat
lea
loopne
loope
push
or
jb
repz
call
stos
int
insl
jecxz
push
jo
lret
adcb
insl
dec
jg
daa
or
cmp
sub
cmp
jle
inc
in
lods
test
mov
fsubs
shll
or
and
loop
push
das
call
loopne
dec
in
stos
popl
testl
cwtl
mov
fwait
mov
lret
pop
bnd
mov
jp
out
mov
scas
sub
sub
xchg
pop
mov
adc
pop
cmp
lret
sahf
stos
push
mov
shlb
repz
cltd
loope
les
in
negb
mov
fildl
cmpsb
mov
ret
jnp
leave
inc
fucomp
dec
pushf
int3
cmc
push
cltd
sub
pushf
dec
test
movb
cmp
add
jl
into
jne
rdmsr
xor
mov
jle
mov
inc
in
aas
ljmp
in
lret
mov
sbb
mov
fidivl
or
jb
loop
aas
xsaves
jle
out
out
call
sbb
loope
sbb
mov
fdivr
addr16
pop
orl
mov
and
ret
pushf
call
mov
mov
sbb
push
mov
les
rcrl
inc
dec
ja
jge
je
mov
sbb
sbb
dec
mov
push
dec
jp
shlb
lods
js
mov
sub
fidivrs
mov
xchg
cmp
xchg
popf
pop
push
aaa
fxch
fsubl
pop
pop
jmp
jecxz
jb
jns
ror
icebp
out
fcoml
inc
insb
ret
cmc
cld
imul
bound
hlt
adc
jle
jg
mov
push
test
xchg
and
inc
into
ljmp
jbe
movsb
inc
push
mov
adc
popa
sbbl
inc
out
mov
jmp
lock
fcmovnu
in
stos
cltd
dec
dec
pop
mov
lods
shlb
ds
or
pop
sbbl
jge
outsb
imulb
in
mov
mov
mov
mov
sbb
outsl
xlat
mov
mov
into
jae
sbb
cmpsb
leave
mov
and
decb
popa
fsubs
mov
jp
cmp
fbld
add
sahf
lret
loopw
jno
mov
stos
mov
sbb
or
pop
xchg
push
cmp
stc
in
mov
stos
outsb
xor
dec
xlat
and
pop
inc
mov
clc
cmp
pshufw
clc
nop
add
repnz
dec
fcompl
mov
iret
test
in
adc
adc
hlt
xchg
mov
or
inc
sbb
addr16
das
or
and
fdivrl
arpl
jae
mov
pop
pusha
je
lea
xchg
inc
nop
dec
cmp
mov
sbb
sahf
sbb
add
outsb
es
repnz
call
jl
icebp
mov
loop
mov
and
lods
sub
lods
or
dec
stc
inc
xchg
adc
dec
movsb
ret
cmp
xchg
jne
sti
or
imul
xor
mov
pushf
sub
push
pop
aaa
mov
and
mov
lahf
shlb
test
jo
pusha
xchg
cmc
inc
flds
dec
insl
fmull
imul
push
imul
loope
repz
int3
movsb
xchg
cmpsb
cmp
or
mov
aad
rcr
aad
xor
bnd
dec
pop
mov
lret
insb
adc
dec
jecxz
enter
or
outsb
fcmovnbe
and
jno
roll
cmpsb
ss
xchg
mov
popa
outsb
mov
cmp
mov
xchg
add
movsb
jno
mov
es
xchg
push
jl
fnstsw
gs
mov
shll
adc
fwait
sub
pop
rcrl
add
repz
test
jno
adc
xchg
sbb
mov
sysret
and
adc
inc
push
xchg
sti
mov
inc
dec
aad
shll
cmp
mov
nop
mov
int
sbb
and
aaa
repz
std
daa
pop
ds
cld
pop
xor
pop
sti
mov
jmp
adc
mov
push
add
push
xchg
push
insl
imul
or
int
out
hlt
sub
out
pop
iret
pop
loop
adc
mulb
mov
or
push
repz
adc
cmp
inc
test
xchg
jno
ss
mov
sahf
adc
out
addr16
jmp
cmc
out
imul
add
std
movsl
jmp
add
add
repnz
aaa
dec
mov
xchg
xchg
jns
mov
xchg
scas
mov
jp
sub
cmp
sti
out
ror
in
push
fwait
push
dec
xor
dec
mov
xchg
lret
or
ficomps
fs
inc
xchg
adc
jns
movl
mov
inc
and
ret
sbb
insb
pop
ds
sti
ja
dec
inc
imul
or
flds
lds
xchg
inc
pop
jecxz
repnz
push
imul
adc
out
sbb
and
filds
cmpl
das
dec
mov
inc
mov
aaa
test
pmaddwd
pusha
rolb
insb
ljmpw
xchg
bound
and
sbb
shlb
push
xchg
out
cmp
repz
out
int3
ret
pop
in
mov
mov
push
xor
test
mov
jmp
or
add
lret
notb
nop
mov
or
sbb
data16
lods
push
or
idivl
add
insb
pushf
call
jl
or
testl
inc
popa
push
fwait
ljmp
sbb
adc
sbb
mov
je
jecxz
dec
repnz
xchg
outsb
dec
or
and
mov
je
jle
xor
adc
popa
popa
loop
mov
jns
stos
cmc
ret
and
xchg
mov
adc
stc
out
cmp
or
fiaddl
daa
dec
xlat
mov
or
out
mov
add
cwtl
jle
inc
loope
push
ds
sbb
add
inc
imull
mov
cld
dec
inc
adc
fistpl
sbb
aaa
pop
xchg
test
push
mov
pop
test
xchg
nop
idivb
dec
inc
dec
sahf
mov
add
aad
stos
and
test
sbb
dec
or
sbbl
fmull
dec
ret
in
pop
int
std
jmp
lock
mov
inc
push
sbb
jle
dec
fwait
popa
lds
lcall
cltd
push
mov
mov
cmp
int3
adc
jl
push
movsl
mov
dec
jns
xchg
iret
rolb
fsubrs
ret
or
int3
push
xchg
xchg
sub
sub
cwtl
jle
cmp
cmp
cld
push
sti
mov
xchg
stos
sub
negl
out
adc
out
xor
xor
lea
inc
loop
push
ss
fimuls
fnstenv
dec
xor
test
dec
xchg
fsubrl
adcb
jg
push
push
jle
adc
int3
sub
into
mov
icebp
jno
imul
mov
js
repz
inc
add
xlat
cmpsb
mov
pop
jae
mov
ds
mov
mov
jae
sbb
inc
mov
adc
pop
dec
mov
fmull
add
adc
fwait
dec
ss
cmp
dec
and
add
xchg
test
pop
shrl
insl
mov
call
enter
popf
inc
or
insl
and
mov
and
pusha
xor
movsl
fs
mov
and
jne
dec
xchg
pop
sbbb
sbb
adcb
sarb
cmpsb
sti
lahf
dec
jb
loope
dec
inc
mov
call
jle
outsl
mov
lret
vunpckhps
cmpsl
std
xor
lret
testl
mov
xchg
dec
imul
adc
aad
aam
imul
call
inc
push
fs
mov
cwtl
pop
nop
xchg
cmp
mov
sti
repz
xor
sub
sbb
je
sbb
jns
repz
push
aaa
add
xchg
lret
icebp
out
cs
pop
dec
icebp
addr16
or
and
fs
scas
push
mov
jnp
mov
dec
notl
aas
dec
bound
mov
ret
inc
out
test
adc
popf
pop
loopne
push
fisubrl
or
xor
cmc
sbbl
repz
pop
add
jbe
popa
out
ljmp
sbb
lods
hlt
xchg
add
add
mov
movsb
or
pop
andb
mulb
mov
jg
inc
dec
push
jno
into
sub
testl
push
mov
sub
jo
xchg
jle
pop
push
cmpsb
jb
popa
pop
les
mov
sub
push
call
ret
in
flds
adc
gs
imul
sub
add
mov
add
jg
das
enter
aas
cmpsl
inc
mov
loope
xor
dec
sti
push
rorb
mov
mov
push
pop
lods
stos
js
mov
xor
ret
fsub
push
sub
sbb
pushf
xchg
imul
push
mov
sbb
negb
shr
pop
pop
mov
dec
cmpsl
push
into
cmp
lahf
or
std
push
push
ljmp
xchg
nop
push
das
or
mov
mov
sbbb
pop
aas
popa
add
mov
in
stos
mov
add
pusha
sub
or
sbb
iret
js
inc
shl
call
add
xchg
pop
or
loope
push
mov
std
sub
popf
jl
test
xchg
mov
jae
dec
mov
cli
in
nop
lock
in
aas
adc
insb
adc
mov
push
loopne
xor
or
mov
dec
cld
inc
jle
das
cmp
mov
sbb
or
xchg
add
xor
jne
test
pop
mov
stos
jbe
scas
popa
sub
and
std
dec
adc
data16
loop
ret
stc
or
xchg
pop
repnz
data16
mov
je
adc
jle
adc
jnp
mov
or
sbb
pop
push
ret
and
sbb
inc
flds
fwait
out
xchg
xor
adc
into
mov
addb
push
sub
aad
aad
hlt
movsb
push
adc
mov
sbb
xchg
add
arpl
fistps
jle
cmc
or
stos
mov
jge
iret
and
inc
xor
mov
sbb
pop
cmp
cmpsb
sahf
mov
bound
dec
xor
inc
inc
cld
jle
cmp
sbb
xor
ficoms
fidivl
jo
repnz
cmp
pop
stc
add
mov
loopne
or
andb
in
add
fildll
cmc
cmpsl
out
dec
cmp
popf
int
sahf
pop
push
pop
mov
pop
insl
add
xchg
jne
shlb
jmp
loope
sub
stos
cmpsb
mov
subl
rcl
or
sbb
sub
sahf
jo
pop
cltd
pop
mov
pop
fcomip
testl
fstps
pop
test
iret
ja
fwait
lahf
mov
negb
pop
cmp
dec
fistpll
rorl
aas
data16
imul
fsub
dec
jecxz
or
pop
push
xchg
lea
ds
sub
enter
jb
or
jg
fldenv
add
int
cld
pop
adc
imul
roll
jno
sti
lods
xchg
aam
ljmp
je
push
jmp
xchg
jmp
or
stc
sbb
push
addl
pop
adc
mov
sub
sub
fnstenv
jo
test
in
std
lock
sbb
out
repz
push
shl
fistps
cmpb
ss
test
inc
dec
cmc
aas
imul
mov
lret
cmp
in
xchg
jle
mov
xchg
dec
and
cmc
dec
jl
adc
add
jp
mov
xchg
xor
lahf
cmp
sub
push
insb
cmp
mov
jae
sti
inc
xlat
imull
lahf
call
adc
jl
hlt
mov
xor
clc
pop
jecxz
testl
loope
mov
mov
stc
mov
mov
push
sub
push
fcmovb
xchg
push
dec
push
mov
cwtl
stc
mov
dec
jno
cli
sub
scas
inc
testb
cmp
cmp
cmp
in
and
cmp
lea
dec
out
movsb
mov
sub
in
ror
xor
cld
addl
mov
xor
lods
lret
lahf
mov
jmp
inc
insb
frstor
xor
mov
pop
enter
outsl
jmp
pop
xor
xchg
andl
fwait
sbbb
mov
movsb
sub
mov
pop
push
jge
or
push
pop
lcall
cs
js
or
and
rorl
lret
jle
fs
mull
inc
data16
jge
lret
ss
cmp
jmp
les
ss
adc
stc
lock
xchg
movsl
movsl
ret
xchg
add
call
and
dec
adc
pop
mov
out
xchg
inc
cmpsb
in
jle
ss
cmp
xor
jb
push
shll
inc
sbb
shlb
adc
fiaddl
cmp
or
push
pushf
std
mov
or
addr16
push
cmpsb
stos
jecxz
loope
sbb
cmc
mov
inc
cmp
lea
cmp
adc
mov
mov
sarl
cltd
sarl
mov
cmc
inc
cld
insl
clc
mov
test
scas
mov
loop
lds
add
fwait
ret
fninit
mov
cmp
fwait
arpl
sbb
mov
enter
mov
inc
ds
out
push
das
icebp
clc
add
push
xor
fwait
notl
mov
add
pop
jmp
jge
dec
loope
jge
subb
je
mov
nop
mov
mov
mov
dec
jns
cmpsl
lods
fwait
mov
add
add
mov
out
test
cmc
dec
dec
mov
inc
cwtl
bound
aad
dec
xchg
aaa
in
mov
mov
scas
loopne
fwait
add
in
sub
ljmp
inc
fadds
or
fsubr
lret
divl
dec
flds
outsl
arpl
add
mov
gs
cld
sarb
je
jge
adc
bound
test
jecxz
sbb
mov
roll
sub
leave
mov
leave
cmp
xchg
test
jb
rcr
mov
sub
mov
xchg
stos
sbb
ja
push
stos
mov
ljmp
pop
sbbb
push
inc
je
and
cmpsl
dec
icebp
movsb
leave
fiaddl
mov
testb
jmp
push
fstpl
and
test
mov
mov
loop
int3
xchg
xor
fwait
in
xlat
and
sbb
loope
inc
inc
bound
jnp
outsl
mov
sbb
std
int
pop
ljmp
cli
pop
aad
aam
movsb
or
push
mov
or
imul
and
mov
imul
push
adc
stos
sbbb
push
mov
push
outsl
xorl
hlt
into
inc
mov
lods
sub
hlt
mov
xor
push
dec
rol
inc
test
sub
in
in
pop
andl
lcall
mov
push
mov
and
cmp
mov
lods
sti
mov
xchg
call
lcall
and
test
jmp
adc
add
mov
sub
lock
push
cmp
mov
jae
sbb
je
rcrb
mov
bound
inc
fldenv
gs
mov
int
lcall
jmp
lcall
dec
xor
mov
mov
lret
mov
ret
ret
cmpsl
clc
std
aas
xchg
arpl
jae
lret
shll
and
push
mov
cmpsb
lahf
sub
jg
inc
mov
loop
fsubs
aam
push
inc
flds
mov
js
hlt
sbb
xor
inc
push
cmp
and
jg
jp
jns
test
xchg
icebp
pop
inc
mov
xor
mov
insb
inc
fwait
popa
pop
pop
push
loop
shrl
cltd
adc
xchg
fsub
pop
decb
jb
xor
out
cmp
sub
sbb
adc
pop
repnz
fstl
dec
add
clc
mov
sbb
lock
add
ret
int3
jmp
sbb
mov
or
not
xor
bound
adc
mov
xchg
adc
cs
cmpsb
push
lcall
xor
pop
xchg
jno
adc
mov
sahf
mov
dec
push
dec
testl
jno
ret
aaa
movsl
loope
mov
push
clc
jo
movsb
pop
mov
xchg
in
dec
addr16
xchg
cmp
rol
push
push
pop
push
stos
stos
xor
clc
popl
fdivrl
cs
or
mov
jg
mov
mov
push
mov
aam
insb
stc
push
jge
xor
repz
mov
subb
call
into
lea
das
inc
in
sahf
or
insb
jge
sbb
add
fwait
stos
lahf
sub
js
insl
mov
pop
and
lods
mov
test
inc
imul
insl
pop
lret
mov
insl
in
cs
icebp
dec
adc
mov
ret
mov
or
fistl
test
cld
subl
dec
cs
stc
xchg
aas
and
mov
push
out
xlat
mov
sub
aam
add
js
push
cmp
movsl
test
je
dec
inc
cmp
adc
push
clc
call
repz
jle
fstpl
cmp
sub
imul
jmp
xor
add
inc
mov
xor
aas
lret
adc
jae
sub
sahf
push
mov
or
dec
es
cmp
or
mov
lea
repnz
or
inc
sbb
in
sub
xchg
sbb
cwtl
pusha
jno
add
dec
inc
and
outsb
in
outsb
xlat
aam
xchg
in
insl
and
mov
fs
inc
inc
xor
fwait
lret
pop
dec
das
stos
pop
mov
jge
and
inc
push
sbb
add
cli
jle
enter
stc
je
mov
mov
lret
pop
movsl
scas
rol
in
scas
push
in
es
or
pop
dec
fs
add
pusha
sub
shll
sub
mov
fcos
mov
add
inc
push
or
insl
in
orl
in
xchg
pop
adc
and
sub
mov
mov
shlb
add
fwait
inc
jb
call
push
mov
dec
in
dec
aaa
xor
mov
aad
mov
enter
or
pushf
insb
rcl
sbb
aam
add
inc
aam
mov
ret
cmp
mov
mov
lahf
pop
cmp
scas
mov
cmp
fstpt
mull
pusha
xchg
outsl
sbb
inc
fmuls
pop
inc
lock
push
dec
cli
adc
cmp
push
xlat
jnp
mov
add
rcrb
add
mov
hlt
xorb
dec
stos
mov
adc
nop
inc
adc
rol
pop
mov
es
ljmp
lods
mov
pop
roll
dec
mov
sbb
xchg
test
jmp
outsl
ret
lahf
sub
xchg
mov
push
orl
xchg
bound
lds
repz
leave
iret
jbe
xorl
rcll
mov
cmp
ds
jno
and
pop
push
mov
ljmp
jg
pop
cmc
popf
add
push
inc
lret
insb
jmp
outsb
push
in
shrb
icebp
push
mov
mov
pop
aas
lahf
mov
xchg
ret
into
fsubrl
pop
push
cmc
lods
insl
xchg
push
xchg
mov
dec
cltd
xchg
cmp
mov
imul
xor
fdivrl
sbb
pop
aas
shrb
sbb
cs
mov
or
inc
pop
sub
jecxz
rcrl
test
inc
or
inc
add
pop
rorl
shr
in
addb
cmp
sahf
inc
jmp
adc
dec
ljmp
imul
hlt
pop
push
out
mov
xorl
test
add
xchg
dec
cmc
adc
adc
push
out
ds
dec
mov
mov
stc
call
mov
inc
imul
jno
and
scas
jle
sbb
adc
fistl
sub
ret
pop
inc
pushf
cmp
lock
shlb
xchg
pop
sub
mov
push
imul
flds
mov
or
and
push
mov
addl
push
sbb
push
sbb
dec
xor
xchg
push
mov
sub
sub
cmp
js
dec
inc
in
in
negl
adc
daa
mov
jo
pop
mov
jb
mov
pop
lods
movsb
out
outsl
rclb
push
mov
or
and
fistl
nop
scas
mov
sub
sbb
sbb
add
dec
aas
push
xchg
arpl
lahf
popf
ja
enter
loop
out
in
sbb
cltd
xchg
ljmp
pop
pop
pop
hlt
push
mov
cmpsl
jmp
push
lods
repnz
sbb
mov
xchg
mov
xor
scas
jge
xor
js
in
or
aam
enter
jecxz
fwait
adc
sub
mov
adc
cmp
xchg
movsl
ja
repnz
out
pop
arpl
repnz
push
jb
sahf
divl
sub
mov
or
jns
popa
call
pop
shlb
pop
into
pop
paddb
loop
jb
sarl
push
lds
inc
leave
js
inc
pushl
mov
outsb
shrb
cmp
mov
mov
leave
aad
mov
aad
stc
dec
psubsw
cmp
call
cmp
outsb
dec
outsl
sar
nop
test
iret
pop
jnp
sti
xchg
clc
scas
xor
pop
jae
out
dec
jae
je
rolb
pushf
mov
movsb
lock
xor
repnz
icebp
mov
jo
aas
jp
iret
adc
mov
pusha
pushf
addr16
inc
mov
push
nop
cwtl
pop
nop
icebp
shlb
xor
stos
xor
xor
movsb
data16
fisttpl
sahf
lock
ds
lods
sub
std
jmp
fisttpl
inc
iret
nop
xor
inc
mov
test
xor
pop
sar
aam
notl
cmpsl
jge
pop
and
dec
sbb
ret
shl
xchg
rclb
sbbl
xor
cmp
mov
shll
mov
mov
nop
out
xchg
lods
sub
jae
les
ljmp
pop
sbbb
add
int3
and
outsb
push
sbb
stos
inc
mov
sbb
mov
dec
cmp
sub
jnp
dec
xchg
mov
add
divl
lea
pop
rcrb
je
push
mov
test
test
cmpsb
and
outsb
callw
lcall
leave
gs
cmc
cmp
or
js
adc
popf
mov
stos
push
inc
int
jnp
xchg
add
lcall
jmp
bnd
call
adc
push
push
cs
mov
mov
data16
cltd
mov
jl
shrl
clc
mov
xor
shrb
mov
pop
out
fcmovu
std
dec
or
pop
sbb
ss
sbb
fstpt
jae
inc
mull
loop
adc
push
shll
and
xor
or
xchg
test
or
add
test
mov
xor
adc
cmc
cmpsl
iret
sub
pop
inc
scas
sti
pop
out
sub
or
lods
data16
jge
dec
mov
roll
xchg
and
scas
clc
and
cmp
xor
roll
in
fadds
int3
sbb
fimull
push
sbb
iret
push
adc
mov
idivl
fcompl
push
cld
lods
and
sar
ficompl
mov
clc
imul
shlb
subl
mov
cmp
mov
test
mov
movsb
push
bound
mov
icebp
add
fisubl
pusha
lea
shlb
jmp
mov
mov
xchg
add
and
lret
mov
out
push
pop
mov
fadds
ret
lea
fucom
mov
iret
pusha
into
ja
push
imul
std
inc
dec
shrb
cwtl
es
insb
jne
daa
xorl
out
std
jno
pop
out
ljmp
and
cmp
lret
mov
adc
loop
sahf
adc
add
xchg
in
adc
popf
dec
fmull
xchg
repnz
xchg
mov
jno
inc
lea
addr16
adc
les
fcmovnbe
pop
mov
jnp
jne
xchg
test
xor
popf
imul
cwtl
mov
push
fdivs
inc
mov
mov
cmc
mov
arpl
and
mov
daa
jbe
push
sbb
inc
lret
inc
cwtl
sti
loop
inc
insl
clc
sbb
loope
aaa
sbb
icebp
ffreep
mov
inc
test
jmp
jbe
fsubs
cmp
js
add
mov
mov
test
loop
out
cltd
inc
icebp
add
mov
cmpsl
inc
scas
xchg
push
shr
pusha
orl
xchg
push
fsubs
xor
out
imul
or
decb
sti
mov
or
pop
or
lea
sub
cwtl
icebp
sub
imul
adc
daa
iret
jae
outsl
outsb
inc
pop
dec
call
adc
outsb
jg
mov
jb
leave
dec
cmpb
jno
jne
fmulp
test
in
push
test
lret
es
shlb
enter
dec
add
lahf
push
stos
jnp
lods
pusha
aam
ja
mov
and
pop
insl
sub
pop
mov
or
mov
jg
mov
lret
push
mov
cltd
sub
stos
mov
fmull
les
xlat
lock
cmp
fdivs
jne
data16
cmp
ficompl
hlt
fsubl
jge
mov
xchg
sti
mov
push
leave
push
mov
enter
out
xor
sti
stos
xor
and
jne
adc
xchg
popa
test
test
mov
arpl
dec
fiadds
mov
push
dec
jne
push
xor
mov
stos
mov
ljmp
pop
inc
jbe
jne
xor
andb
xchg
or
pop
inc
and
jle
mov
mov
xor
inc
xor
xchg
test
sub
inc
push
dec
jle
fildl
fdivr
jle
mov
xchg
int3
jg
add
lods
sbb
cmp
in
leave
jp
dec
data16
sbb
pop
push
and
or
out
push
loop
pop
sbb
sahf
ret
fdivrl
push
jno
dec
cmpsb
movb
adc
hlt
jge
add
adcl
popa
imul
xor
push
cmp
aas
das
cmp
test
cmp
inc
push
push
mov
popf
jge
sub
mov
shll
xchg
xchg
jmp
and
push
bound
cmc
jo
dec
mov
xchg
add
ret
mov
insb
aam
pushf
fsubrl
stos
cmovne
pop
divb
pop
sub
lahf
push
stos
ja
aad
rep
sbb
movsb
or
in
cmp
and
pop
gs
sti
mov
inc
sub
sbb
stos
js
mov
jmp
int3
out
cmp
arpl
sar
add
push
test
cmpsb
test
shlb
shrl
loop
xchg
inc
fcomip
stc
das
jmp
cmp
fildll
jae
bound
or
cmp
out
ret
mov
adc
push
dec
ss
cmp
jle
popa
ret
mov
sbb
push
mov
sbb
cmpsl
mov
xchg
jbe
test
jmp
add
mov
add
subb
push
call
mov
mov
mov
xchg
arpl
mov
xor
icebp
jnp
andl
enter
popf
fld
inc
gs
or
cmp
cli
fsubrs
sub
mov
pop
sbb
mov
jg
xor
jae
in
ja
popf
shrl
jg
add
sarb
scas
mov
test
dec
fcmovnb
scas
loop
lret
or
call
int
mov
movsl
movsb
lods
ret
das
dec
xor
xor
mov
sbb
adc
stos
fwait
dec
call
xchg
pusha
mov
mov
mov
fdiv
fnstenv
sub
sbb
fmuls
pop
mov
cmp
jge
in
add
mov
cmc
arpl
jae
test
mov
repnz
mov
js
jne
add
les
mov
test
lret
dec
inc
call
lea
push
push
rorl
sahf
mov
leave
and
ja
inc
mov
mov
inc
mov
jl
push
jb
lea
lahf
xchg
pushf
enter
pop
and
mov
les
ret
add
cmpsl
fimull
jg
pop
cmpsb
push
pop
popa
mov
xchg
mov
adc
adc
pushf
xor
jnp
pop
test
mov
inc
jp
mov
insl
out
cmp
jne
ffree
mov
jg
and
cmp
popf
jmp
fimuls
dec
adc
call
stos
sub
sub
das
mov
add
push
sbb
sbb
lods
aad
jmp
pop
jns
es
mov
xchg
inc
jle
push
call
push
sub
fadds
dec
push
cmpsl
sbb
sbb
ret
mov
dec
ret
add
jecxz
sti
mov
xchg
jo
xchg
out
sbb
test
nop
in
mov
xlat
add
adc
fs
sub
cmp
sub
pop
mov
sti
inc
mov
repnz
push
cld
cmp
push
sbbl
inc
stos
jg
dec
cli
je
xchg
leave
sub
pop
mov
clc
add
lahf
ficompl
imul
inc
and
mov
stos
test
mov
push
jno
aam
xor
cld
and
fwait
imul
sbb
repz
aam
xchg
add
in
add
outsl
sahf
add
inc
xor
add
mov
inc
movsl
mov
aad
icebp
push
sahf
push
dec
enter
lds
xchg
pop
je
lret
lock
mov
pushl
jbe
sub
stc
add
lods
lods
int
add
dec
jp
or
lods
mov
and
insl
jecxz
popa
pushf
fsubrs
and
adc
cwtl
mov
leave
pusha
or
sti
shr
shl
aaa
mov
add
sbb
xor
aas
test
sbb
pop
ret
adc
jg
push
mov
loope
adc
mov
adc
ljmp
pop
cmp
test
adc
sub
stos
dec
test
dec
addr16
stc
shl
xor
cmp
sbb
mov
and
jo
ja
loope
push
icebp
je
xor
lcall
sbb
dec
inc
mov
repz
and
imul
xchg
mov
loop
and
mov
jp
and
sub
mov
mov
inc
ret
in
pusha
test
push
cmp
pop
stc
js
fnsave
mov
xchg
hlt
insl
adc
test
out
mov
pop
and
in
jle
leave
xchg
iret
lods
push
mov
cmp
cmpsl
jne
dec
out
mov
loopne
pop
or
iret
cmc
ficomps
jmp
dec
jp
or
es
pop
sub
iret
hlt
fwait
das
out
add
fimull
sub
pop
add
lcall
fs
xor
ds
jo
arpl
push
jbe
xorb
sub
push
cmp
cmp
les
in
jmp
cs
add
ja
lock
jo
aaa
inc
push
cmp
in
or
pop
cmp
xor
and
rol
sbb
push
sbb
sbb
cld
mov
mov
cmp
icebp
xor
repnz
pop
rcrl
inc
jne
mov
push
ja
std
cmp
cmpsb
or
xor
sti
push
sub
enter
iret
out
adc
insl
ljmp
jp
stos
rcll
fldt
negl
cli
fsubs
fs
ret
or
hlt
and
or
cmp
jnp
push
test
jno
jle
clc
mov
xor
std
xchg
jnp
daa
sub
jp
jecxz
insl
lock
fucom
inc
out
push
shlb
inc
pop
aam
bound
pop
rorl
dec
or
lret
cmc
mov
mov
or
or
mov
icebp
loope
call
sbb
cmpsb
fildl
popf
and
popa
pop
and
pop
in
bound
cmp
dec
out
cmp
fcoml
fs
push
popf
jns
or
lea
and
mov
dec
cli
fwait
pop
hlt
pushf
movsb
jno
scas
scas
cmp
ljmp
mov
cwtl
popa
ljmp
decb
pop
test
dec
std
imul
push
sbbl
imul
cmp
outsb
xlat
mov
sub
xchg
lcall
incl
dec
add
adc
movsb
push
push
cmp
mov
xchg
inc
repz
jae
repz
mov
movsb
fimull
stos
cmc
xor
int3
sahf
inc
popf
lods
mov
mov
into
and
add
add
aaa
sahf
pop
enter
push
ja
mov
test
pop
pop
out
cmc
sbb
sub
aad
cmc
lret
cmp
rcrb
dec
outsl
mov
dec
jbe
mov
data16
aam
ds
lret
xchg
sbb
fidivrs
mov
mov
dec
inc
int3
mov
in
mov
adc
sub
arpl
xchg
lds
lea
jp
mov
jl
or
inc
and
leave
adc
mov
fiadds
dec
imul
sbb
mov
or
sbb
pop
cmp
mov
and
inc
pop
outsb
push
inc
lea
sbbb
inc
push
adc
mov
inc
mov
stc
decb
add
idivb
sub
insl
ret
dec
jo
pusha
jecxz
push
sbbl
test
hlt
insl
push
fadds
push
imul
cld
pop
roll
addr16
push
lcall
cmp
inc
pop
loope
loop
and
and
mov
loop
rorl
sbb
pop
xchg
fmull
cli
imulb
hlt
or
rorl
jae
jmp
das
jl
leave
insl
lds
rcrl
jnp
sbb
hlt
fs
mov
icebp
cwtl
test
scas
adc
mov
or
inc
outsl
pusha
sub
repnz
mov
inc
jge
push
orb
mov
push
test
inc
jno
lea
mov
xorl
pop
adc
or
jne
and
lock
lods
pop
enter
out
rorl
jo
push
outsb
cmc
test
xlat
xchg
test
arpl
jb
rclb
cmp
or
jge
push
ja
sbb
shrl
cli
dec
enter
mov
cmp
jmp
cmp
jns
sub
into
nop
cld
dec
cli
dec
and
call
fsubl
pusha
mov
mov
xchg
outsb
adc
push
lret
push
dec
gs
imul
cmp
add
frndint
dec
xchg
pop
bound
test
jle
sarb
xchg
shll
iret
xor
cmp
or
inc
aas
mov
push
sahf
scas
ds
add
mov
scas
ljmp
mov
jle
lcall
loopne
xor
cmp
jnp
push
dec
push
jae
jns
push
mov
inc
movsl
outsb
sysexit
inc
mov
push
inc
insb
lods
into
jne
nop
fldlg2
roll
sub
adc
sub
pop
arpl
movsl
pop
sub
push
das
call
aam
mov
add
sahf
lcall
jle
test
sub
cmpsl
ljmp
mov
jbe
pop
push
arpl
mov
cli
cmp
mov
jmp
testl
out
stos
xor
lcall
inc
sub
in
and
and
repnz
and
test
aam
or
and
fmull
ficoml
movsb
cmp
mov
adc
mov
shl
in
mov
cmp
test
pop
dec
movsl
cmpsl
sbb
faddl
jle
jno
lcall
dec
sbb
sbb
cmc
lahf
sub
daa
fldcw
cmp
xchg
cli
scas
push
pop
test
dec
mov
das
and
and
ljmp
push
lods
popf
popa
out
xor
mov
fwait
out
dec
mov
popf
adc
std
xor
mov
inc
or
mov
clc
lea
insl
andl
jno
scas
pop
rclb
cwtl
mov
add
xchg
and
in
test
inc
ret
sbbl
sub
xchg
add
out
lods
lahf
lcall
insl
stos
stos
jnp
jecxz
and
mov
sbb
hlt
test
popf
and
push
decl
mov
xor
xor
xchg
push
dec
ret
loope
sbb
and
sbb
dec
mov
add
sti
xlat
mov
sarl
mov
cs
jp
call
or
dec
into
push
divb
mov
add
add
fwait
out
lds
sbb
sub
inc
cltd
out
hlt
mov
xor
sub
push
and
enter
and
cmpsl
mov
out
mov
xor
mov
sbb
sbb
add
pop
cli
push
push
jp
sti
cmp
jle
dec
fs
push
push
inc
das
nop
sbb
orb
push
and
push
push
jp
in
cmp
ss
or
bound
ret
or
clc
fstpl
fsts
mov
movsl
xchg
or
inc
rolb
add
add
lods
lret
xor
test
xchg
shll
iret
add
inc
mov
or
aam
popa
mov
adc
aaa
sbb
mov
add
loopne
xor
testb
aas
add
loopne
ret
in
jnp
xchg
inc
inc
cltd
adc
jmp
sahf
xlat
add
scas
and
nop
mov
mov
mov
pop
dec
and
shlb
xor
mov
adc
sbb
push
inc
adc
xchg
lods
loopne
js
test
popl
movsl
add
xor
loop
cltd
out
mov
je
daa
bound
in
mov
dec
popa
hlt
mov
les
popa
orb
nop
xchg
leave
cmpsb
xchg
movl
mov
mov
popa
mov
lret
jmp
inc
outsl
dec
dec
stos
add
movsb
mov
push
or
lahf
mov
push
inc
js
popf
lcall
inc
pushl
sub
mov
adc
daa
shll
cmp
add
or
cld
sbb
test
add
xor
mov
enter
repz
mov
shlb
pop
sbb
push
outsb
jge
jl
aad
mov
negb
mov
ja
xor
mov
lret
dec
sbb
jno
push
imul
adcl
dec
call
aam
mov
out
shll
add
dec
jbe
lods
fwait
sti
xor
jp
sub
adc
inc
cli
push
xor
scas
mov
repnz
push
je
adc
mov
adc
rcll
fdivrs
pop
stos
lods
cmpb
jmp
sub
sub
int
xchg
mov
bound
xchg
jle
addr16
xor
inc
cmp
lret
fistpll
movsl
jb
xchg
pusha
scas
jnp
push
js
and
fs
lea
pop
lea
push
movb
cltd
mov
in
add
out
cmpsl
mov
mov
clc
adc
sbb
idivb
sbb
in
xlat
stos
in
or
mov
mov
cli
or
mov
movsb
test
xor
lea
jecxz
mov
inc
mov
mov
pushf
sbb
cmp
imul
incl
aas
test
xchg
add
popf
fxch
rcrl
lods
in
pop
pop
inc
hlt
cwtl
adc
std
cmpsb
sub
or
int
iret
roll
out
imul
je
cmp
mov
jns
fdivr
xor
test
das
and
xchg
mov
push
sbb
mov
std
dec
test
sub
mov
in
scas
or
test
add
inc
movsl
and
jl
sub
lcall
mov
jae
fistpll
mov
sbb
mov
jp
aas
lret
and
dec
or
pop
sub
bound
jmp
imul
dec
add
hlt
fcmove
leave
daa
xor
cmp
js
add
stc
push
popa
call
stc
cmp
add
fisubrl
mov
imul
mov
xchg
xchg
or
add
push
stos
ljmp
adc
push
or
cmp
int
mov
imul
cmp
sahf
rep
sbb
and
or
pop
xor
jmp
fwait
outsl
call
mov
fmuls
xchg
pop
cmp
cmp
xchg
push
or
sbb
dec
cmp
fwait
addr16
sub
push
and
cmp
inc
pushf
mov
pop
mov
xchg
lcall
fdecstp
mov
rol
inc
dec
add
cmova
das
fcmovnbe
xchg
pop
cmp
fcmovbe
inc
pop
popa
inc
sbb
xlat
out
adcb
push
push
ret
stos
jge
cs
or
or
xchg
in
addb
mov
outsb
pop
out
jnp
xchg
inc
leave
cmp
or
lods
xor
aad
inc
dec
sub
jnp
lods
pop
sbb
inc
mov
repz
decb
push
xor
xchg
sbb
popa
jno
xor
gs
nop
push
cmp
cmpl
dec
sub
dec
add
xchg
dec
pop
and
inc
into
dec
int3
aas
aaa
mov
frstor
pop
mov
xor
icebp
inc
insb
adcb
mov
and
fisubl
add
mov
adc
test
ljmp
jmp
push
movsl
sub
popf
jle
xchg
mov
sbb
xchg
and
lcall
movsl
jne
cli
inc
pusha
fsts
cmp
cs
test
add
dec
adc
cltd
xorl
cmp
adc
loop
add
mov
and
lds
mov
sub
sub
sahf
inc
mov
pop
cmpsb
dec
adc
and
das
mov
mov
mov
shl
jle
sbb
and
and
dec
mov
popf
inc
pusha
dec
or
fs
or
adcl
lahf
bound
push
jle
into
pop
or
test
insb
push
xor
xchg
mov
or
aam
xchg
pop
arpl
es
mov
cmp
fimuls
pop
int
xorb
push
pusha
fldcw
pop
cmp
push
and
bound
mov
jecxz
xor
add
in
jle
dec
mov
mov
mov
pushf
addr16
fadd
mov
push
xchg
mov
bound
scas
shrl
iret
xchg
stos
dec
jmp
lret
scas
cmp
push
pusha
jle
negb
ljmp
pop
mov
and
daa
cwtl
into
mov
adc
hlt
xchg
gs
insl
xchg
sahf
out
out
inc
dec
adc
nop
mov
mov
cmp
sbb
je
jg
sub
mov
dec
add
in
push
jno
xchg
pop
pop
add
add
sub
outsb
xchg
dec
push
mov
inc
push
scas
or
into
mov
mov
daa
fnstsw
adc
pusha
jnp
in
scas
ret
mov
cmp
imul
mov
jl
int
adcb
sar
movsl
sub
lcall
push
cmp
mov
ljmp
test
test
or
adc
jl
add
adc
test
test
out
sahf
cmc
inc
ret
xlat
xor
cwtl
xor
test
outsl
aas
jo
jns
xor
ss
enter
jp
enter
dec
aaa
insb
cmp
cmp
sarb
or
fisttpll
sub
jp
in
jbe
cli
mov
push
clc
sub
xlat
jne
mov
push
mov
inc
cld
outsl
or
nop
rcr
enter
jo
inc
out
ss
insb
in
jmp
xchg
jecxz
mov
jmp
dec
idivb
fldt
pop
out
pop
int
sbb
mov
out
mov
push
je
jbe
lods
inc
mov
mov
adc
add
mov
outsl
xor
fdivrl
into
and
fnstcw
jl
ja
xchg
aam
into
push
les
mov
ret
pop
enter
xor
imul
jl
sbb
ds
or
cwtl
mov
xchg
rclb
or
jae
sti
xchg
ss
push
aaa
mov
stos
jb
pop
and
clc
cmp
es
pusha
cmpb
push
negb
sub
je
int3
push
jp
lea
and
fsubl
lret
push
pop
adc
mov
fnstenv
jnp
mov
mov
ss
in
mov
fcmovbe
xlat
adc
or
lret
or
out
xor
pop
rolb
js
fadds
xchg
xlat
mov
sbb
push
movb
or
jne
cmp
and
cmp
enter
rcr
xor
cs
mov
movsb
int
fwait
sub
jmp
push
orb
push
sub
dec
call
arpl
out
sub
xor
push
lods
push
stos
cmp
inc
inc
mov
mov
out
movsl
dec
sbb
lret
ret
arpl
in
pop
sub
jmp
push
test
in
pop
ret
pushf
int
sub
pop
ds
sti
lods
insb
movsb
push
in
andps
ret
out
sub
lcall
push
add
push
int3
ja
ja
icebp
lret
lret
inc
loope
clc
dec
or
in
jne
push
and
push
jle
dec
sbb
mov
push
test
out
jmp
sbb
ret
lahf
jmp
cli
inc
out
inc
addr16
xor
test
pop
cmpsb
and
cltd
test
jl
lds
fxch
hlt
fcomip
or
xor
mov
dec
mov
js
roll
fldln2
andb
std
mov
jns
std
inc
out
inc
shrb
fisubs
push
jae
into
lods
out
mov
mov
sti
mov
xchg
xor
add
daa
ljmp
loope
jo
jl
cmp
adc
iret
xor
mov
ret
jo
dec
enter
jle
inc
push
popf
das
orl
test
adc
arpl
or
scas
cmp
dec
pop
movsb
mov
jl
adc
push
pop
or
inc
mov
add
repnz
cmp
cli
cmpsl
push
push
sbb
cmp
int
fidivrl
mov
push
daa
test
fsubs
and
femms
les
add
ficomps
sub
popf
outsl
popa
fdivrl
mov
out
test
sarb
sbb
mov
dec
mov
inc
and
out
loope
fisubrl
std
clc
add
mov
insb
cmp
inc
sbb
xchg
fimull
or
loopne
addb
sub
dec
add
pop
aas
cmpsl
ret
leave
or
cmp
cmp
inc
mov
pop
in
into
pop
dec
fmul
jg
jmp
dec
ds
pop
mov
cmc
fimull
adc
lcall
gs
test
dec
push
or
pop
bound
sar
rcrl
adc
dec
mov
xchg
push
scas
or
inc
cwtl
pop
fidivrs
movl
daa
cmpl
test
or
jmp
push
lret
push
sarl
call
push
mov
adc
fwait
decl
pop
jne
lcall
ljmp
xchg
movsb
mov
or
into
stos
pop
sarl
fstpt
xchg
xchg
pushl
sub
mov
movsb
jl
nop
and
inc
dec
dec
and
xchg
xor
movsl
mov
dec
push
lods
pop
nop
mov
push
std
jmp
sub
addl
xor
insb
stc
xchg
mull
sbb
mov
pop
in
fdivrs
adc
mov
xchg
mov
push
shl
data16
sub
insl
iret
iret
fnsave
and
insl
bound
psubsw
cmpb
dec
lcall
jl
scas
stos
xlat
pusha
jp
jp
sub
cmp
cli
push
int3
xlat
negb
inc
mov
sbb
lretw
and
test
cmp
sub
psraw
adc
ljmp
nop
mov
xchg
pop
mov
insb
and
js
movups
sbb
ret
enter
sbb
int3
data16
adc
xor
xor
shlb
out
decb
fildll
add
or
daa
mov
mov
lret
aad
cmc
int3
cs
inc
xchg
and
jge
mov
pop
lods
mov
lret
nop
push
aad
jp
mov
cmp
dec
ret
lods
fdivrp
cltd
mov
pop
dec
sar
int
out
inc
rcrb
iret
mov
mov
outsl
xchg
xchg
mov
test
cmp
aaa
sub
leave
push
or
std
pop
add
cmp
icebp
aad
adc
xchg
icebp
divb
test
popa
xor
mov
ss
insb
cmp
fsubl
adc
out
and
push
sub
sub
stos
packsswb
xor
sbb
sub
xor
jp
mov
js
lahf
or
jle
hlt
loope
arpl
fs
xor
add
jo
iret
imul
test
dec
dec
icebp
dec
pushf
sub
push
cmp
ja
push
push
jmp
dec
push
inc
aaa
pop
sbb
movsl
ret
and
xchg
int3
movsl
mov
pop
sbb
dec
lods
and
repz
dec
jae
inc
dec
sub
cmpsl
out
jne
insb
popa
fisubl
int
std
bound
test
loope
inc
dec
shl
jmp
repnz
lcall
mov
ja
mov
into
pop
push
cmp
pop
rclb
sbb
jnp
xor
mov
adc
lret
sbb
push
xlat
aad
mov
repnz
and
sub
pop
lahf
rorl
mov
cmp
js
xchg
add
add
add
push
dec
inc
sub
fists
pushl
add
sub
sbb
xor
inc
movsb
jb
outsl
push
push
xchg
push
and
mov
jns
shrl
das
fcomip
push
lahf
scas
addb
lods
pop
stos
push
jae
sbb
pusha
daa
dec
xchg
lcall
pop
shrl
mov
jno
jnp
pop
aas
ficomps
pop
mov
or
arpl
loope
fiaddl
xor
pop
xlat
inc
xor
les
addb
mov
push
mov
push
mov
and
sbb
iret
jne
push
push
pusha
pusha
insb
push
inc
adcl
add
dec
and
xchg
add
xor
dec
insb
cltd
adc
bound
leave
mov
pop
mov
gs
sahf
and
fldcw
fisubs
xor
leave
lods
repnz
iret
cs
test
scas
lcall
sti
sub
lcall
pushf
mov
adc
aam
xor
in
jne
xchg
push
lcall
insl
xchg
add
scas
pop
daa
sti
and
sub
fildll
fstp
testl
inc
xchg
dec
stc
and
flds
sbbb
jmp
mov
sbb
cmp
icebp
inc
push
cwtl
inc
sub
aas
sar
xor
dec
arpl
mov
push
jne
xor
or
ret
in
sub
push
movsb
cmp
call
mov
xchg
or
cli
test
lods
fstpl
daa
xor
xchg
movaps
out
add
add
jns
daa
adcl
es
popa
int
ss
cmc
or
out
les
jns
push
cmp
std
push
sub
or
lret
out
dec
add
cltd
jns
add
dec
cmp
cmc
jl
xchg
fnstenv
js
cmpl
mov
pop
jge
mov
std
aam
imul
out
sbb
adc
inc
push
ror
or
pushf
sbb
jbe
mov
or
add
add
test
es
pop
pop
adc
subb
sbb
dec
aaa
leave
mov
jb
imul
sbb
push
cmpsb
cli
rcrb
lods
xchg
mov
rcrl
mov
cmpsb
sbb
jno
pop
fstpt
pushf
mov
xor
xor
pop
pop
popa
sub
shlb
push
push
pop
call
jle
sub
aad
adcb
pusha
xchg
sbb
pushf
mov
fiadds
popl
loop
mov
shll
nop
clc
add
out
dec
jg
dec
in
iret
repz
cmpsb
pusha
outsb
mov
mov
ret
sbb
xor
or
cmp
daa
mov
sub
adc
dec
stc
adc
bound
insl
ja
and
and
js
push
dec
adc
mov
mov
out
pop
inc
cld
mov
popf
xor
jge
xchg
lea
pop
aaa
mov
mov
or
jmp
adc
call
inc
sub
xchg
out
cli
jmp
int
imul
daa
mov
jne
fwait
dec
sbb
xchg
pop
mov
roll
popf
sarl
icebp
jge
rorb
cmp
sub
gs
out
mov
repnz
es
cltd
iret
dec
xor
pop
and
lock
sbb
sahf
dec
sbb
test
jp
addl
sbb
sbb
test
cmpsl
add
out
js
mov
test
and
push
xlat
jmp
and
sbb
mov
cmp
out
ret
jg
std
pop
mov
mov
les
add
sub
das
sub
adc
mov
fisttpll
mov
icebp
call
dec
push
mov
cmp
scas
int
pushf
test
fmuls
lcall
loopne
xchg
decb
lea
push
mov
insb
fildl
shlb
sub
lds
and
xlat
add
insb
insb
ret
xor
pushw
fsubrp
xor
mov
push
dec
aad
cwtl
mov
push
test
fsubl
cli
jl
and
push
lcall
cli
leave
mov
pop
adc
rorb
jmp
mov
and
stc
inc
call
lret
cld
push
sub
leave
sub
adc
mov
jl
ret
dec
repz
rcrl
loop
dec
icebp
sub
cmp
add
shlb
xor
test
xchg
push
testl
jmp
or
push
fs
cmp
arpl
dec
hlt
mov
imul
fildl
sub
mov
fldcw
cmp
lret
dec
dec
sub
pop
and
ret
pop
ret
loop
scas
xor
or
xlat
lods
scas
dec
insb
into
rol
jmp
xor
cmp
imul
and
push
int
mov
ss
mov
and
add
pop
lcall
and
repnz
add
sbb
fsubl
jp
test
and
add
scas
jecxz
dec
hlt
push
dec
adc
cmp
xor
sbb
out
sti
pop
leave
popa
dec
adc
jns
addb
push
cmp
gs
cmp
push
and
and
pop
out
xchg
shl
push
and
add
insl
pop
xchg
cwtl
jno
add
dec
call
adc
stos
inc
xchg
push
loop
mov
push
or
push
icebp
sbb
ds
push
loope
test
xlat
push
mov
aas
sbb
fsub
rcr
fwait
imul
sahf
mov
push
xor
sub
ja
jge
jle
std
dec
xchg
mov
xchg
rcrb
adc
pop
je
aam
mov
xchg
into
mov
aaa
int
xchg
outsl
iret
pop
jmp
rcll
repnz
jno
outsl
incl
int3
clc
loopne
adc
in
shlb
sbb
xchg
sti
push
shll
jge
fnstsw
popa
lahf
fwait
je
xchg
outsl
dec
mov
inc
and
imul
sub
or
push
pop
cmpb
divb
inc
cmp
inc
push
ret
jae
ljmp
pop
ljmp
pop
in
cmp
test
dec
push
test
push
cmp
cmp
fs
addr16
push
ss
mov
ja
popf
test
sbb
mov
jmp
cmp
loope
out
into
cmp
lock
mov
out
bound
aad
inc
lods
lods
or
or
decl
cld
adc
bound
test
mov
nop
sarb
jb
xor
mov
adc
fidivs
inc
insb
test
mov
inc
adc
xchg
cmp
dec
inc
cmp
cmp
cmc
mov
dec
xchg
lods
mov
dec
inc
out
dec
jge
mov
pusha
les
cmpsl
jb
or
sti
lds
dec
clc
pop
mov
les
sbb
imul
fistl
jecxz
or
cmp
sbb
mov
test
lcall
pop
adc
push
sub
lea
movsl
xor
scas
dec
push
pushf
push
mov
shlb
fldenv
cmp
test
pop
mov
fs
sub
ljmp
into
pop
stos
outsl
nop
in
cwtl
les
repnz
xor
or
cmp
mov
jb
sub
das
leave
js
mov
mov
mov
into
pop
mov
out
insl
inc
or
ljmp
cs
jo
xor
xor
xlat
add
sbb
stos
clc
mov
sbb
inc
cwtl
enter
lcall
push
gs
inc
sbb
xlat
enter
sbb
call
frstor
cmp
aas
push
xor
dec
cmp
out
sbb
dec
dec
cmp
xchg
cli
ret
sub
add
adc
mov
mov
xchg
mov
mov
jo
popa
ret
cmp
mulb
xchg
imul
pop
mov
xchg
mov
js
pop
pop
out
rorb
cmpsb
xorl
out
cs
mov
scas
and
lods
lret
rol
push
call
xor
fsubrs
loop
mov
pop
jb
cwtl
cli
notb
call
jmp
fcoms
lcall
push
mov
adc
sub
lret
movsl
shll
mov
inc
sbb
arpl
scas
and
shll
pop
ret
aad
es
stos
pop
add
dec
adc
jb
xor
stc
mov
sbb
mov
stc
sub
xchg
sbb
cmp
and
mov
mov
pop
jmp
mov
inc
fisubl
inc
popf
push
stc
dec
inc
mov
inc
mov
ljmp
mov
testl
iret
cmp
rcll
fs
aaa
and
test
mov
ret
jnp
lods
lret
cmp
repnz
sub
push
mov
cmc
xor
mov
inc
test
mov
mov
mov
std
push
pop
cmp
xor
xor
js
hlt
jmp
sbb
fnstenv
push
test
jae
stos
sbb
gs
fld
lahf
dec
mov
sahf
xchg
pop
dec
ljmp
push
adc
scas
fcoms
int
das
pop
pop
dec
add
sub
repnz
fwait
movsl
faddl
bound
sub
or
jg
sub
aaa
xchg
sbb
fcom
add
fwait
divl
lcall
mov
xor
mov
adc
into
test
inc
dec
fmuls
aam
adc
in
stos
xchg
cmp
jns
and
pop
iret
xchg
xchg
mov
jmp
dec
scas
xor
push
sti
lret
mov
jp
daa
leave
pop
cmp
sbb
lahf
jnp
lds
ss
ret
mov
jg
or
idivl
sub
xchg
sbb
xor
xchg
push
sahf
push
cmp
push
mov
inc
or
aam
divb
enter
sti
pop
popa
mov
dec
fisttpl
popa
aaa
adc
and
mov
jp
icebp
jno
dec
mov
outsl
out
adc
mov
sub
enter
data16
loope
pop
push
ljmp
cmp
mov
mov
aad
lods
test
nopl
xor
addr16
out
nop
aaa
or
int
and
ljmp
stos
in
and
push
cmp
loopne
inc
mov
push
push
fwait
sbb
lret
inc
inc
xlat
adc
dec
adc
cmp
es
push
or
sbb
outsl
fucom
movsl
in
fcoml
rcll
sub
scas
stc
add
sbb
ja
ss
dec
dec
jle
mov
loop
adc
inc
adc
sbb
add
dec
ss
push
enter
sub
xchg
lea
mov
mov
sub
xchg
rol
ret
and
lret
dec
sub
push
into
fldl
loop
mov
test
inc
pop
fbld
xor
or
cmp
cltd
fs
aam
insl
pop
pop
or
stos
in
mov
push
bound
pop
mov
into
cmc
push
leave
xchg
ljmp
stos
mov
es
ds
mov
aaa
call
dec
es
into
les
mov
aad
jmp
into
sub
mov
xor
movsl
mov
not
inc
fmull
lock
xor
cmp
dec
jle
sbb
inc
and
iret
lret
add
xchg
lods
push
in
faddl
or
push
xchg
repnz
xor
jl
int
xor
xor
mov
int3
jmp
clc
loopne
inc
out
mov
jmp
mov
mov
cmpsb
lds
mov
inc
inc
jae
jno
or
test
popl
movsl
insl
mov
rcrb
pop
push
leave
insb
fdivl
cmp
cltd
xchg
lret
dec
sub
fs
jge
mov
hlt
sbbb
add
mov
push
mov
mov
dec
es
mov
std
mov
ret
push
inc
and
pop
test
cmc
mov
xchg
jno
push
imul
hlt
cld
cli
aas
mov
push
sbb
cli
push
add
mov
xor
or
in
pop
fs
inc
lcall
jne
xchg
sbb
dec
inc
mov
cmp
mov
das
mov
sub
stos
imul
or
dec
jecxz
dec
fdivp
ja
pop
cld
add
data16
xchg
cmp
loop
jle
mov
dec
adc
imul
cmp
addl
fisubrs
push
mov
and
mov
push
outsl
andb
xchg
enter
out
jle
add
call
add
jl
push
jne
pop
push
mov
lods
scas
loop
ljmp
pop
sti
lock
dec
cmp
ja
or
outsb
mov
movsb
mov
or
jp
iret
mov
outsb
fisubrs
mov
sbb
add
push
lods
cmp
iret
or
and
outsb
dec
clts
xchg
pop
cs
cmp
fbld
arpl
fwait
pop
sbb
cltd
inc
roll
ds
loope
sbb
cmpsb
sar
sbbb
mov
xor
cs
add
jne
loopne
jnp
pop
or
shrb
pop
aad
imul
nop
movsb
cmpsb
incl
loop
clc
pop
mov
fistl
leave
push
pop
iret
xchg
nop
enter
shrb
and
push
ret
push
cmpsl
sbb
sbb
sub
pop
jae
cmp
fsubs
hlt
lahf
fs
imul
mov
and
mov
leave
or
mov
repnz
out
or
pop
push
fildll
dec
loopne
cmc
sbb
call
stos
jecxz
pop
sub
fldl
mov
sub
clc
or
mov
inc
or
jne
or
imul
adcl
adc
mov
cmp
pusha
lcall
push
mov
fs
ja
xchg
shrb
xor
sub
ret
cs
fists
daa
outsb
stos
repnz
mov
sbb
mov
les
and
test
arpl
cmp
call
jne
fidivrs
in
frstor
sub
lret
das
pop
dec
aaa
out
pop
int
pop
lret
imul
jle
outsl
adc
push
and
adc
arpl
cmp
mov
sbb
mulb
cmp
sti
cltd
es
orl
shll
sbb
cltd
lods
xor
xchg
and
adc
xchg
jnp
jo
xchg
ljmp
cmp
test
in
xor
cmpsb
sbb
clc
sbbl
cwtl
mov
dec
push
push
je
sbb
xchg
cltd
divl
jb
mov
lea
das
adcb
cmp
pusha
stos
mov
cmpsb
jg
cmp
addr16
jae
pop
mov
adc
xchg
cs
cmp
lock
gs
push
mov
movsl
mov
enter
pushf
popa
mov
push
imul
mov
jecxz
and
pop
sub
dec
hlt
inc
dec
xchg
fstl
mov
cmp
mov
fnstenv
mulb
loopne
jns
cli
xchg
sub
xchg
push
mov
cmp
fnstenv
mov
mov
xor
xor
call
lret
mov
xchg
fcmovnbe
push
outsb
xor
push
dec
rol
addr16
sbb
jbe
pop
das
mov
push
std
mov
mov
pop
mov
mov
rclb
sarb
test
jbe
dec
insb
mov
xchg
imul
fistl
fldenv
push
jns
cmp
or
ret
sub
mov
dec
or
out
fxch
lock
cmpsb
push
inc
lcall
inc
dec
insl
pop
imul
fcmovnu
mov
sbb
sub
push
scas
inc
push
out
imul
mov
aaa
fstps
mov
add
push
fisttpl
add
push
in
insb
out
sub
jno
push
push
cmp
js
nop
aaa
lds
test
insl
iret
je
ja
andl
fmul
mov
xchg
xorb
fwait
testb
add
cmp
pop
into
leave
aam
and
pop
sbb
scas
std
daa
pop
pop
popa
mov
inc
lahf
xchg
cmpsb
sbb
adc
enter
pop
push
cld
rcll
push
fdivl
lods
movsl
test
push
fwait
imul
jae
jmp
xchg
sbb
fsubrs
push
subl
dec
mov
add
mov
xchg
adc
push
jecxz
lds
or
shll
pop
movsl
sbbb
fcmovnb
mov
jmp
mov
stc
hlt
sbb
insl
or
aam
adc
jl
pop
mov
lods
lcall
sbb
and
adc
jae
add
ss
add
push
xchg
push
adcb
xchg
push
sub
hlt
cmp
jne
cltd
test
inc
adc
punpcklbw
cmp
popa
stos
aaa
lods
sbb
push
sbb
lods
popf
nop
outsl
push
aaa
out
mov
adc
adc
shlb
jo
or
xchg
shl
ljmp
mov
xchg
out
push
cmpsl
add
gs
sahf
add
adc
cld
loopne
mov
cltd
or
in
out
enter
daa
xor
cltd
test
scas
and
fs
shrl
out
mov
xlat
call
mov
std
inc
push
mov
mov
add
fmull
pop
jecxz
xchg
xchg
sbb
std
ljmp
adc
rorl
out
cltd
push
cmp
mov
and
cs
and
loop
adc
pop
and
mov
xchg
movsl
push
mov
mov
sbb
jl
sub
jecxz
leave
pop
aam
mov
jb
cmc
or
fadd
adc
xor
stos
shlb
pop
mov
leave
push
push
data16
dec
dec
icebp
xor
push
jge
mov
xor
push
inc
rclb
xchg
daa
sbb
cli
mov
sub
insl
push
dec
out
lods
pop
jae,pn
les
mov
push
inc
in
fstl
sbb
xchg
pop
sbb
insl
movsb
jg
inc
mov
ds
xchg
std
sbb
test
add
mov
out
lds
decb
xor
xor
jae
lcall
js
push
maskmovq
pop
in
jle
stos
mov
mov
pop
push
dec
xlat
jmp
push
out
mov
push
mov
insl
mov
inc
sbb
imul
cmp
push
jecxz
push
adc
dec
push
aaa
out
lcall
movsb
ljmp
lahf
sub
push
stc
sbb
int
cmp
xlat
xlat
gs
ljmp
dec
pop
xor
sub
xchg
xchg
dec
mov
jp
adc
scas
cmp
ret
fcoms
add
sub
outsb
cmpl
lea
inc
push
cmp
jo
pop
loope
out
adc
mov
mov
dec
push
add
add
nop
aaa
jmp
int
push
dec
xchg
popa
push
xor
enter
mov
mov
out
lcall
imul
and
dec
sub
adc
int3
sub
fwait
xchg
test
adc
push
mov
daa
adc
ja
icebp
xchg
and
cmp
addr16
sbb
cmp
jns
stos
fs
insl
xor
pushl
pusha
inc
repnz
ret
dec
jnp
iret
cli
aas
cmpsl
jmp
xor
mov
in
roll
xor
lahf
or
in
adcb
test
in
std
pusha
shll
pop
imul
mov
aad
lods
clc
adc
add
inc
aad
jns
dec
int
sub
jo
out
hlt
cmp
mov
in
jge
incb
scas
and
inc
push
push
push
push
xchg
mov
fptan
lds
dec
lods
xor
stc
pop
clc
adc
mov
rcrb
int
rorl
fs
pushf
out
imul
sahf
ljmp
jne
aas
adc
mov
adc
mov
loope
pop
mov
xchg
jbe
pushf
add
xchg
or
cmc
cmc
scas
mov
and
push
sub
fsubs
lods
jge
iret
movsb
fdivrl
push
mov
or
pop
add
addr16
jno
imul
sub
iret
sub
xor
cmpl
cmp
jb
inc
sti
xor
mov
pop
sbb
jmp
pop
fwait
adc
xchg
pop
dec
push
clc
xor
loope
lret
lret
pusha
sub
pop
add
xor
mov
push
and
fisttps
loopne
xchg
mov
fnstsw
add
mov
repnz
fimull
loop
jecxz
bound
cmp
xchg
adc
jae
push
out
dec
mov
cmpsb
adc
fisttps
jae
ljmp
repnz
out
cs
add
xor
loope
inc
int
ja
fs
mov
popf
pop
jnp
out
xor
daa
sarb
jno
xor
mov
inc
mov
je
hlt
shrb
mov
int3
adc
cmp
popa
shrb
pushf
mov
lahf
gs
xor
xorl
sahf
or
mov
and
imul
add
jge
shlb
sub
testl
xor
inc
or
test
hlt
pop
jae
push
lret
pop
cwtl
jge
push
int3
xor
test
sbb
mov
sub
push
inc
push
mov
int3
cmpsl
cmpsl
lds
inc
cld
mov
cmp
adc
mov
aas
test
nop
lds
out
jne
jns
nop
cli
xor
cmp
push
jno
and
icebp
mov
std
das
adc
pop
pop
call
outsl
xor
rcrb
push
int
pop
mov
fcoml
dec
add
add
aad
mov
or
scas
out
sbb
sbb
loop
lahf
negl
shrl
push
je
push
inc
notb
mov
push
push
rorl
push
lods
fsts
gs
inc
sub
mov
mov
fildll
jecxz
ret
lods
test
sbb
mov
xchg
cmp
ficomps
push
and
out
xchg
and
push
pop
sbb
mov
cs
jmp
loop
hlt
xorl
cli
and
mov
pop
ret
xor
mov
out
sbb
cmpsb
mov
xchg
push
mov
jns
sub
repz
inc
icebp
jne
inc
mov
xor
or
jbe
inc
sub
sahf
xchg
aas
and
add
push
sbb
in
jnp
sbb
jo
lahf
jl
fnstenv
hlt
push
stos
adc
test
ret
clc
inc
lea
dec
jp
mov
jle
aad
outsl
je
xor
xchg
push
divl
mov
dec
dec
cwtl
adc
je
push
and
lahf
or
fs
mov
in
pop
push
push
cmp
push
ret
es
das
sub
sete
add
xor
repnz
mov
pop
lods
orb
cmp
mov
jmp
mov
out
xchg
sbb
sahf
shll
fists
sub
cmp
lods
outsb
shl
or
inc
sbb
mov
jo
mov
enter
insb
inc
mov
cmp
fucom
stos
insb
cmc
std
xor
and
jae
in
lods
scas
xor
inc
roll
inc
inc
out
xchg
and
jmp
xchg
pop
data16
mov
fcmove
call
push
lea
and
push
mov
sar
sbb
jp
iret
jae
or
std
insb
roll
icebp
rcr
in
adc
test
push
pop
sbb
mull
xchg
cmp
inc
mov
dec
xlat
xrelease
cmp
das
xor
xorl
insb
pop
sub
rol
mul
aad
jno
mov
xor
adc
hlt
xor
pushf
xor
adc
push
cld
cmp
cmc
mov
aad
and
mov
cmp
xor
pushf
insl
jbe
push
popa
pop
roll
mov
push
xor
mov
and
repz
movsb
push
jae
out
pop
push
repnz
jge
test
ret
jnp
mov
xchg
jno
mov
sub
es
xchg
sbb
push
scas
lods
push
insb
cli
shrb
out
insb
iret
push
mov
add
ret
dec
je
and
rolb
sahf
dec
mov
mov
push
loope
push
jae
shlb
jl
je
mov
notb
adc
cmc
gs
push
push
xor
adc
sub
cld
push
xlat
mov
sub
out
test
jno
imul
scas
sahf
int3
pushf
mov
sub
inc
push
adc
adc
and
inc
sub
pusha
mov
pop
add
and
aad
js
loop
loopne
cld
xchg
pushf
arpl
inc
repz
loope,pn
mov
mov
add
mov
shrb
sbbb
mov
add
mov
rcrb
xchg
lret
xchg
test
pmuludq
jnp
or
inc
mov
sbb
dec
andl
push
mov
arpl
and
mov
test
push
mov
outsb
movsl
test
push
or
lods
jae
cld
cmp
daa
shll
or
add
dec
cmp
adc
loop
dec
int
inc
mov
lahf
lods
lret
pop
and
mov
fnstsw
enter
jbe
push
dec
lret
xchg
push
outsl
pusha
shrb
pop
popa
cltd
test
xor
aam
xchg
push
add
jmp
mov
scas
or
test
idiv
mov
or
shlb
add
loop
add
xor
adc
jns
dec
test
stos
ds
inc
add
sti
mov
sbb
mov
inc
rcrb
rcrb
loopne
aam
movsl
loope
scas
out
sahf
xchg
xor
rolb
sbb
cs
jecxz
adc
or
popf
xchg
mov
jge
enter
jbe
lods
xor
pop
cmp
add
sub
je
mov
xchg
into
mov
push
out
test
sbb
js
pusha
sub
inc
cmp
jnp
dec
lahf
aas
inc
aam
mov
push
jle
sbb
xchg
stc
and
inc
insb
repnz
pop
sbb
clc
pop
pop
push
xlat
pushf
lahf
pop
scas
push
sbb
mov
sub
popa
jle
lds
xchg
jge
fstps
mov
add
pop
jg
outsb
dec
cli
xchg
mulb
insb
sbb
and
mov
cld
xor
or
dec
cltd
es
faddl
repz
jns
sub
ds
fwait
loope
fistl
inc
hlt
mov
leave
mov
or
sub
mov
stos
aas
or
cmpsb
push
ret
dec
repz
out
imul
or
pop
push
push
cli
add
pminub
nop
push
mov
fcmovu
pop
push
pop
movsb
shrb
xor
fiadds
popf
out
mov
xchg
insb
fwait
movsl
mov
pushf
out
cmc
jle
mov
inc
sarb
add
ss
pop
ror
shl
mov
push
inc
repz
or
add
sbb
movsl
xor
mov
sub
out
es
xchg
fdivrs
jmp
jl
lcall
add
jo
sbb
mov
aaa
ret
adc
push
jo
ficoml
mov
mov
mov
insb
jecxz
pmulhw
mov
jecxz
jmp
add
xchg
fidivrs
push
xor
popf
movsl
and
movsb
mov
sbb
fldl
jae
sbb
or
into
in
push
stc
lods
adcb
xor
jae
cmp
jl
inc
push
mov
inc
xor
mov
sub
pop
jmp
fmuls
pop
mov
jne
inc
xchg
sub
loope
imul
mov
add
fldenv
cs
inc
xchg
int3
shll
int3
xor
inc
cld
mov
loope
mov
sbb
xor
fcmovnbe
fldl
inc
cmp
and
das
add
jne
xor
cmp
cltd
notl
mov
adc
sub
scas
sbb
push
mov
sbb
jo
ss
fs
mov
popa
jbe
add
inc
dec
xor
out
sbbl
dec
loop
push
nop
andl
pop
in
cmp
add
sahf
jmp
fscale
fwait
mov
shll
out
sub
and
cmpsb
fstpl
movsl
jle
sbb
test
and
or
xchg
in
lahf
fisubrs
nop
sbbb
jge
jne
cmc
test
mov
arpl
icebp
hlt
mov
jae
inc
mov
or
jmp
in
sub
cmp
and
dec
test
push
aas
add
lret
add
in
imull
mov
lods
xchg
outsl
fs
jg
scas
ss
jmp
push
in
mov
xor
imul
insb
cmp
mov
jmp
cmpsb
sub
scas
cmpsb
repnz
lds
fs
cltd
das
mov
pushf
lds
adc
loopne
fs
push
push
push
sti
mov
push
sub
mov
and
cli
add
pop
add
and
aaa
test
sub
lods
mov
mov
cmp
mov
and
mov
outsb
add
clc
sti
xor
mov
stos
lahf
xchg
fstpt
daa
mov
arpl
pop
lret
xor
sub
sub
push
and
addb
inc
jmp
fmull
fsubrl
ljmp
imul
imul
out
in
fcoml
inc
push
add
mov
stos
inc
sub
in
inc
lds
aam
xor
and
gs
es
xchg
aaa
pop
dec
mov
loop
push
out
lret
aad
cmpsb
xchg
jae
pop
sub
and
inc
gs
pop
sub
xor
js
inc
iret
push
or
xchg
scas
lcall
in
add
icebp
add
es
iret
cmp
push
add
sub
jmp
outsl
aas
popl
gs
sub
mov
nop
mov
xchg
mov
in
bound
imul
pop
clc
orl
dec
or
aaa
jo
adc
sbb
pusha
aam
dec
pop
rorl
not
push
shlb
imul
popf
push
or
sub
into
mov
stos
aaa
stc
outsl
jmp
pop
fwait
lds
sbb
mov
cmp
jmp
inc
and
sub
lds
pop
rcll
mov
fisubrl
ss
insl
aaa
adc
xorb
xor
loopne
mov
lock
push
data16
int3
dec
shl
movsl
shl
je
add
fwait
jmp
shr
adc
mov
xchg
xor
add
enter
and
iret
sahf
aam
gs
add
mov
ja
in
jns
xor
sbb
and
push
pop
int3
in
lret
xchg
adc
inc
lds
movsl
enter
jnp
js
mov
lret
movl
sub
inc
loop
cmp
test
dec
add
aas
sbb
inc
popf
xchg
lea
scas
cmp
insl
mov
cmp
test
ss
pushf
pop
jae
mov
push
cmp
cmp
push
and
ja
cwtl
pushf
jmp
andb
add
sub
jne
into
xlat
and
sub
lods
in
orb
xor
push
mul
mov
adc
mov
imul
jno
call
gs
sbb
idivb
mov
mov
jae
xor
xor
add
sbb
mov
arpl
add
push
gs
add
or
xchg
jp
push
fildll
cmpsb
mov
dec
repz
sub
or
icebp
push
cmp
shlb
loop
movsl
popa
lahf
dec
cmp
mov
pop
inc
imul
jne
testl
and
inc
fistpl
push
lea
sbb
daa
into
push
enter
jne
nop
mov
shr
lret
push
cmpb
pushf
cmp
and
add
sbb
xchg
lods
lahf
sub
inc
int
pop
dec
fiaddl
outsl
cli
push
ret
repz
push
fcomps
inc
ss
mov
enter
xchg
shlb
adc
shrl
or
inc
and
adc
gs
jmp
fwait
and
xchg
shll
cld
inc
or
outsb
loop
das
aas
dec
lcall
xor
adc
mov
jae
cmpsl
pop
inc
das
sub
nop
xor
jae
scas
mov
fistpll
dec
xlat
fisubrs
addr16
idivl
mov
push
jb
sti
ret
xchg
jg
fadds
icebp
lahf
jo
test
loopne
mov
dec
fisttps
hlt
mov
dec
pushf
pop
lods
cmc
mov
dec
mov
stc
add
inc
pop
fildll
ljmp
andb
and
sti
inc
or
xor
adc
shrb
pop
cltd
mov
xchg
sub
adc
loope
scas
or
clc
ret
in
pop
sub
outsb
mov
sub
adc
lods
adcb
loope
jne
or
out
pusha
rcr
xchg
add
xchg
xchg
jp
add
jle
call
sbb
dec
dec
pop
jecxz
dec
or
mov
outsl
sub
es
mov
adc
add
mov
and
pop
lcall
fadd
test
rorb
push
dec
inc
repnz
js
out
pop
or
mov
xchg
pop
mov
mov
stos
int
and
pop
outsl
xor
inc
std
lret
es
jae
mov
mov
xorb
xchg
add
js
add
lock
inc
fisttpll
enter
add
lds
add
sub
out
popf
rcll
mov
xchg
inc
xchg
add
pusha
xor
leave
bound
and
xchg
imul
jmp
or
push
push
faddl
int
ficompl
jle
int3
dec
data16
incb
call
sbb
sbb
fs
adc
mov
pop
mov
daa
jmp
xor
adc
push
mov
lcall
mov
pop
repnz
mov
adc
dec
push
mov
xchg
add
pop
sub
js
add
sbb
and
arpl
xor
ret
pop
arpl
push
test
fs
gs
cmp
lods
jge
aas
dec
pop
js
test
and
mov
iret
mov
dec
popf
xor
or
xor
mov
hlt
sbb
cld
and
pushf
es
jbe
push
push
or
pause
or
mov
sbb
add
xor
test
jne
push
or
fidivrs
inc
into
outsl
stc
add
idiv
rorl
push
dec
inc
jmp
mov
or
inc
and
cltd
xchg
movsl
pop
int3
repnz
fimull
xchg
inc
pusha
inc
aad
jge
adc
jne
fistl
stos
mov
ljmp
push
loope
push
fdiv
pop
mov
stos
addr16
inc
inc
bound
aaa
adc
jl
sti
movsl
fidivrs
cmp
inc
xor
fwait
movsb
rcr
fnstsw
jmp
inc
test
fsubs
mov
mov
add
jae
mov
sbb
cli
js
lods
cli
fwait
in
test
loopne
push
aam
ja
ret
movsl
roll
pop
mov
in
push
cmp
adc
mov
pop
idivl
sub
cmpsl
es
jne
fisubrl
ss
mov
imul
cmpsb
push
mov
lods
es
dec
dec
movb
jo
pop
inc
mov
xor
mov
movsb
mov
cmpsb
mov
scas
popa
mov
cmp
push
mov
aaa
and
pop
fs
imul
push
mov
nop
js
add
cltd
inc
cli
mov
push
push
dec
fwait
mov
jmp
inc
subl
mov
adc
daa
mov
inc
sub
push
add
add
sbb
jp
jecxz
xor
jp
fxch
ret
icebp
mov
in
xchg
fdivrs
test
addr16
ljmp
add
lret
shlb
shlb
cmpsl
add
or
pop
sub
sub
dec
jae
insb
xor
arpl
mov
hlt
negb
and
pop
pop
mov
dec
sbb
dec
pop
pop
jo
mov
pop
lahf
addr16
outsb
std
mov
ret
enter
mov
test
insb
pmaxsw
jne
ds
cmp
inc
out
jmp
sbb
push
mov
cwtl
nop
cmp
sub
aad
test
outsb
mov
dec
out
push
or
dec
mov
outsb
dec
mov
fists
inc
hlt
mov
adc
loope
aaa
adc
sbb
scas
das
sbb
push
pushf
lods
fstpt
mov
jo
fisubrs
rcll
push
pop
sub
ds
jo
pop
push
mov
pop
adc
xorl
cld
pop
negb
dec
push
imul
sar
dec
enter
ret
ljmp
sbb
xchg
push
push
or
jbe
ret
cmc
je
xchg
js
mov
adc
movsl
xor
push
bound
push
cmp
sbb
pop
popf
mov
ficoms
outsl
push
push
fsubs
push
popf
call
mov
jae
jg
sahf
imul
push
nop
push
lea
lret
loopne
pop
dec
jl
test
mov
xlat
push
call
adc
pop
or
hlt
sbb
in
inc
pusha
shrb
or
cmp
shlb
test
jbe
push
or
test
and
fistpll
cwtl
pop
push
sbb
jmp
int3
icebp
cmpsl
test
imul
mov
out
addr16
outsl
mov
out
test
data16
jbe
and
or
roll
and
movsb
cmp
lods
push
lret
in
pop
ret
in
add
xor
enter
dec
fildll
xchg
rcll
lea
jl
dec
cli
data16
sub
ja
dec
add
jno
insb
xor
mov
dec
cwtl
mov
or
dec
mov
mov
mov
jle
xor
dec
stc
jg
xchg
and
popa
jno
jb
mov
jp
push
inc
push
and
cmp
repnz
push
ss
outsb
xchg
cmp
clc
mov
jmp
push
mov
push
or
neg
mov
and
in
sub
pushl
lock
incl
pop
pushf
sbb
insb
push
ret
pop
sub
sub
sbb
mov
dec
dec
rcl
iret
lahf
loop
adc
jmp
add
jl
cmp
out
push
cmp
mov
rcll
loope
mov
dec
jg
adc
adcl
ss
ret
pop
inc
jnp
jge
loopne
jb
cmp
or
andb
xor
loop
loope
arpl
test
subl
pop
das
fxch
jae
xor
sbb
mov
mov
mov
and
jmp
lock
sub
ds
lds
lret
mov
cmp
addr16
adc
xor
in
mov
sti
inc
aam
and
shrb
xchg
pmovmskb
mov
out
and
aam
mov
insb
push
ja
cmp
bound
sbb
js
cmpsl
push
and
dec
ja
loope
dec
mov
and
iret
jl
or
jge
sbb
mov
inc
pop
pop
sbb
push
mov
test
sbb
mov
mov
push
fsubrs
xchg
push
test
inc
mov
rcll
popa
push
out
push
js
mov
mov
sarl
addr16
mul
stc
fcompl
sarl
es
dec
or
aas
xchg
cmp
in
in
sahf
xchg
fsubrp
xchg
jae
bound
jo
xor
incl
inc
adc
xor
in
jb
or
sub
mov
daa
push
js
adc
in
shl
adc
dec
jno
or
bswap
or
dec
gs
stos
leave
mov
inc
arpl
enter
jg
adc
jmp
mov
lcall
xor
sbb
pop
sbb
inc
cmp
dec
pushf
nop
pop
fnstsw
lods
dec
fisubrl
repz
jg
xor
dec
mov
xchg
pop
cwtl
mov
adc
inc
stos
fimuls
or
cld
in
mov
mov
daa
insl
xchg
repz
adc
pop
sbb
inc
lods
pop
xchg
mov
dec
jle
or
stc
mov
push
scas
dec
add
popa
mov
mov
cmc
cmc
lock
mov
inc
xor
icebp
mov
lea
pop
ficoms
mov
ljmp
jg
cmpsl
pop
push
push
adc
cmpsl
xlat
scas
sub
loopne
cmpsl
add
daa
mov
mov
dec
and
cmc
clc
xchg
mov
add
aas
push
ljmp
sub
pop
popw
das
fidivs
mov
add
insl
test
rorl
icebp
lcall
mov
pushf
inc
test
stos
sbb
adc
aam
adcb
inc
mov
and
xlat
mov
add
jbe
mov
addr16
stos
sbb
jne
push
bound
cmpsl
scas
je
sahf
rcll
js
imul
cld
pop
mov
push
mov
add
mov
scas
pop
sub
mov
movsb
inc
jns
movsb
out
inc
rcll
fwait
in
ja
or
mov
arpl
fwait
pop
mov
mov
pop
call
cmp
cmc
fwait
xlat
cs
pop
jnp
cli
jle
outsl
gs
nop
jecxz
push
sbbb
jns
fucomip
sbb
sub
pop
out
int3
iret
jae
add
pusha
aaa
filds
adc
ds
or
push
xor
add
jle
lods
lret
mov
enter
clc
in
cmc
pop
fs
lret
repz
jp
sbb
xchg
loop
inc
scas
xchg
adc
fwait
mov
es
lahf
test
inc
cld
int
and
add
je
dec
push
sti
xchg
pop
test
lock
dec
adc
arpl
mov
inc
out
jmp
cmp
mov
dec
cs
test
xchg
sub
arpl
jle
in
and
xor
lret
mov
loop
inc
sbbl
xorb
fildll
mov
movsb
in
inc
cld
adc
shr
add
dec
scas
mov
rol
jae
pop
jmp
mov
testl
xor
mov
cmp
pushf
fdivrl
stos
outsb
cs
jge
daa
sti
add
fidivrl
js
mov
xchg
arpl
push
sahf
inc
pusha
stos
sub
mov
out
stos
scas
mov
lds
jge
fucomi
cli
mov
cltd
dec
push
dec
inc
mov
cmp
std
dec
inc
jnp
add
jl
mov
fistpl
adc
adc
imul
dec
mov
mov
lods
cmp
stc
add
imul
cmpsl
mov
xchg
sbb
adc
xchg
jle
out
lcall
out
jbe
bnd
cmpsb
inc
or
jg
fwait
dec
in
pop
jmp
mov
adc
jno
divl
push
xchg
jb
mov
insl
or
call
add
mov
imul
jp
sub
cwtl
ja
sbb
or
mov
lret
int3
insb
mov
mov
add
orb
inc
pusha
cmp
xchg
push
insb
cmpsl
lahf
jmp
in
or
or
ret
mov
popw
faddl
pop
jmp
stos
dec
push
xor
and
mov
sub
outsb
cmpsl
lea
adc
iret
subl
loopne
notl
jge
mov
arpl
inc
add
loop
sar
pop
out
repz
or
out
lret
mov
jmp
lods
popl
xchg
mov
inc
addr16
loop
adc
leave
mov
pop
jecxz
xor
notl
mov
loopne
adc
push
sbb
and
icebp
mov
dec
lock
add
lcall
int3
std
lret
pop
jl
xchg
inc
mov
movsb
je
lret
scas
push
inc
cmp
insl
dec
mov
cld
out
jecxz
std
orb
cmpsb
mov
push
or
rcrl
add
ret
push
mov
add
push
add
loope
rcl
dec
jns
insb
stos
outsl
daa
stos
movsl
xchg
mov
xor
test
les
sbb
pushf
outsb
inc
outsl
sti
rcll
mov
push
cmp
pop
xor
mov
xorb
mov
dec
add
popf
xchg
mov
cmp
imul
gs
jbe
jge
loopne
lahf
dec
jo
and
fcmovu
in
push
test
sti
mov
mov
cwtl
idivl
mov
jns
mov
int3
mov
icebp
jno
xchg
mov
out
inc
daa
repnz
adc
sub
push
repnz
push
pop
jecxz
and
jle
andl
sub
xchg
cltd
inc
jecxz
popf
fs
mov
cmp
aad
jl
hlt
fisttps
stos
xchg
pop
push
or
dec
icebp
mov
mov
adc
sub
bound
jns
push
je
jbe
mov
jo
pop
lods
in
ds
sbbl
dec
jbe
aad
xchg
cs
fsubl
stc
jle
fs
lret
sub
ja
inc
mov
fimuls
and
fistpll
test
lods
push
xchg
cltd
pushf
xor
fidivrs
lock
fucom
loop
rcll
jg
sub
push
mov
outsl
jecxz
loope
jge
sub
inc
pusha
lret
ror
into
fdivrs
jmp
jle
jmp
stos
push
xor
mov
hlt
inc
mov
les
setno
push
mov
aad
stos
dec
fnstcw
sarl
es
inc
ljmp
call
dec
mov
sbb
mov
test
mov
xor
dec
jg
jp
mov
adc
cltd
xchg
mov
pop
inc
push
pop
xor
popf
pop
mov
imul
adc
mulb
shll
test
mov
mov
repz
pop
mov
xchg
insb
dec
fists
bound
lea
sbb
imul
sbbb
or
mov
jns
sbb
idivb
pusha
dec
int
jge
cld
jno
mov
jns
add
sbb
mov
or
sub
mov
sbb
test
jecxz
and
insb
sub
mov
test
inc
leave
subb
lahf
ss
adc
in
insb
inc
xchg
insb
sbb
shlb
add
scas
loopne
sub
sahf
or
sbb
push
into
adc
inc
das
sbb
rol
negb
jle
pop
into
adc
fsubs
ljmp
mov
push
stos
pop
shrl
sbb
add
mov
cmp
stos
pop
cli
push
jmp
ret
xor
mov
aad
adc
addr16
jmp
mov
movsb
ss
mov
add
jb
in
outsl
adc
sub
arpl
outsl
rcrl
mov
idivb
xchg
xchg
lcall
scas
sub
pop
and
popa
fs
and
xor
loope
clc
pusha
out
cmpsb
rclb
fisttpl
int3
mov
jl
push
ja
enter
stos
or
ja
pusha
test
mov
pop
divl
cwtl
lods
clc
sub
in
jns
or
movsl
sub
scas
enter
fwait
inc
and
or
aad
scas
or
push
jmp
xchg
addl
push
push
divb
jb
push
dec
xor
js
repnz
mov
mov
fstpt
sarb
out
in
inc
mov
xchg
jecxz
pop
imul
addr16
add
push
dec
scas
inc
cld
repnz
mov
addr16
and
cmpsb
push
fisubrl
pop
mov
rolb
cmpl
fiaddl
es
push
xor
shrl
cld
hlt
pop
xchg
adcb
lock
test
pop
stos
mov
cmp
in
sbbl
mov
xchg
mov
sbb
shrb
sbb
loop
xor
or
cmp
pop
rclb
aad
fdivs
cmp
xchg
rorb
push
fwait
cli
pop
xchg
dec
shll
aad
pop
add
or
jno
loop
notl
cmp
add
call
jmp
sub
add
lods
add
je
add
mov
lea
jl
jns
pop
jne
repnz
aad
pop
jp
call
pop
popa
mov
loopne
push
das
xor
xchg
movsl
test
iret
pop
lret
or
dec
scas
sbb
lcall
fwait
push
addr16
mov
out
xchg
xor
iret
test
jmp
cmovbe
test
mov
dec
mov
jno,pt
aam
mov
push
fidivl
push
jbe
insl
mov
jns
dec
adcb
pop
pushf
adc
inc
jp
mov
add
idivl
mov
xor
test
mov
xchg
sbb
push
mov
lods
lahf
or
add
sub
in
into
jae
sbb
sub
and
inc
dec
adcb
ljmp
dec
cmp
and
xchg
mov
insb
jae
dec
pushf
jne
mov
aas
xchg
add
into
addr16
jnp
xchg
jo
cmp
add
mov
insl
int
aam
xor
jne
sbb
push
or
fcmovne
fsave
xor
jmp
push
sub
in
cli
lock
ficompl
test
mov
adc
push
or
loop
test
inc
and
inc
xchg
cmp
bound
xchg
xor
cmp
sbb
push
pop
bound
clc
mov
dec
in
xchg
fidivs
push
fbld
inc
and
mov
and
dec
cmc
movsb
mov
sub
jle
popa
lahf
adc
test
ja
lahf
sub
aaa
or
mov
mov
add
loop
mov
inc
cmp
in
lea
lds
xchg
jge
stc
jne
shlb
hlt
subl
and
into
aad
sub
dec
nop
add
mov
test
xor
outsl
hlt
mov
pop
scas
and
out
mov
mov
sub
or
mov
add
out
imul
push
and
sbb
push
xchg
rorb
and
aaa
push
lods
dec
lods
jecxz
lcall
push
jl
jle
mov
push
push
pop
cli
stos
test
mull
push
mov
or
xlat
mov
mov
and
pop
inc
mull
and
xor
loop
inc
and
incl
fldenv
pop
ret
and
cltd
sti
mov
bound
xchg
and
es
push
in
push
icebp
mov
kmovw
adc
adc
in
pop
iret
fstps
inc
mov
mov
sbb
sub
dec
sub
aas
mov
repnz
xlat
add
inc
xor
mov
jns
ds
sbb
and
popl
inc
pushf
inc
imul
lret
add
movsl
mov
pop
pop
movsb
iret
insl
push
lret
das
sbb
clc
pop
stos
out
lds
jno
ss
ljmp
cltd
jmp
fnstsw
fwait
add
andb
sti
fsubl
mov
icebp
mov
shrl
inc
dec
sbb
int3
mov
lret
push
ja
jmp
push
pop
int3
pop
rorl
in
push
dec
flds
pop
xor
jne
in
jnp
adc
mov
push
xor
push
cmp
xchg
insb
cmp
jle
add
jo
and
dec
out
idivb
mov
daa
mov
andb
cmpsb
and
inc
xor
inc
jp
iret
cmp
and
insb
or
jge
and
and
sbb
inc
rcrb
sbb
push
pop
lahf
xor
push
mov
filds
out
mov
sti
and
mov
das
call
roll
sub
cmpsb
fwait
ja
pop
das
xchg
mov
gs
sahf
xchg
inc
div
cmp
in
call
lcall
pop
inc
aad
mov
xchg
xor
cwtl
fidivrs
lds
test
push
cmp
ds
pop
inc
leave
scas
sarl
sub
or
imul
dec
ror
sbb
jo
dec
sbb
in
test
rorl
sub
fsubl
sbb
dec
int3
mov
xchg
gs
lea
outsl
adc
out
or
mov
sahf
adc
rolb
xor
xchg
iret
pop
xor
push
pop
fcomp
fwait
cmp
or
into
dec
scas
outsb
xchg
in
out
push
dec
pop
dec
pop
pop
sub
or
stos
shlb
or
enter
out
lahf
fadds
xchg
adcl
mov
mov
dec
add
adc
cmp
int3
gs
pusha
mov
dec
daa
aad
sub
mov
jne
mov
jb
movsl
push
ror
dec
loop
int
jns
cwtl
insb
sbb
xchg
call
push
push
mov
dec
into
dec
pop
dec
xlat
sub
xchg
dec
cmpsl
lods
push
mov
fstl
cltd
adc
add
pop
dec
lcall
das
out
lods
cwtl
sbb
pop
insb
cltd
out
idivl
add
test
pop
daa
pop
pop
push
out
in
cmp
aam
or
adc
xor
out
ljmp
mov
test
dec
fxch
pop
daa
pop
add
mov
or
xor
xor
xor
int3
jno
jmp
push
inc
sti
pusha
insb
imul
dec
mov
cmp
adc
jl
ret
loopne
push
stc
sbb
ljmp
pop
mov
cmp
lahf
inc
gs
cmpxchg
push
push
or
imul
push
cmp
jp
cltd
les
rorl
lahf
push
test
jl
loopne
sub
fdivrp
cmp
test
les
jb
inc
or
jo
mov
cmp
add
and
repnz
inc
cltd
push
lahf
push
js
int
scas
dec
push
pop
mov
pop
jnp
mov
jg
aas
int
mov
arpl
ss
aas
dec
inc
or
jl
add
fdivr
sahf
xchg
test
rclb
hlt
dec
out
ret
pop
gs
mov
jle
jae
jns
test
fisttpll
or
jmp
out
stos
mov
stos
pop
gs
in
ss
pop
xchg
test
mov
call
lcall
add
mov
test
cwtl
cwtl
jb
lods
mov
outsl
mov
mov
sub
xor
inc
push
iret
add
push
or
pushf
adc
jl
lock
adc
jecxz
and
leave
pop
and
xchg
jne
pop
jno
or
pop
dec
xchg
sbb
dec
fistpl
push
and
iret
sbb
push
sbb
inc
pop
lahf
aad
mov
aam
aaa
adc
fisubs
dec
jnp
out
adc
faddl
pop
pop
jg
adc
xchg
test
test
data16
sbb
cmpsl
imul
ja
shrb
jo
mov
sahf
push
dec
call
enter
inc
call
inc
lds
testl
out
mov
and
das
or
xchg
into
lea
xor
out
cmp
jns
sbb
ret
sbbb
test
int3
and
mov
mov
sbbl
out
cmc
aaa
adc
cmpsl
cmp
inc
mov
leave
loope
sbb
sub
sbb
dec
in
cld
imul
or
mov
push
cmp
pop
loop
sbb
jl
std
mov
xchg
aad
sub
adcl
insl
adc
sbb
pop
bound
xchg
test
sub
dec
pop
loop
cltd
dec
shrb
cmp
jle
fidivrl
leave
jecxz
test
and
jnp
mov
scas
or
mov
xor
push
mov
cld
inc
orb
sbb
lods
dec
jge
xchg
and
loop
and
into
jno
sbb
jecxz
pop
cmp
add
mov
loopne
push
cmp
mov
insb
popa
gs
adc
int
movsb
test
cmpb
bound
hlt
dec
jl
sub
stos
mov
jae
push
jne
arpl
cli
fsubs
lcall
pop
les
out
sti
mov
das
sub
xor
call
xor
xchg
cmp
fsubrl
in
mov
and
popf
push
push
call
push
outsl
lahf
out
dec
push
add
pop
sub
adc
and
push
sbb
cwtl
push
jo
push
cmc
jae
sub
push
sub
push
mov
mov
fidivrl
fildll
push
cmp
cwtl
jge
mov
mov
inc
and
dec
ds
pop
roll
pop
xchg
mov
pop
rcr
fnstsw
ficompl
scas
popl
mov
call
fdivrs
fisttpl
and
xor
frstor
or
push
loope
jmp
js
xchg
popa
scas
mov
sbb
ja
in
pop
jbe
add
pop
xor
fsubrl
stc
mov
xor
outsl
lds
mov
mov
std
sbb
outsl
push
outsl
pop
lds
shll
in
mov
and
push
call
and
arpl
mov
mov
lea
fcoms
enter
push
loop
imul
cli
stos
xchg
inc
mov
ja
xorb
mov
andb
cmpsl
testl
icebp
mov
fcmove
rorb
iret
mov
dec
inc
push
dec
cmpsb
cwtl
dec
xchg
das
sbb
pop
aas
push
lahf
jbe
andb
mov
pop
lea
mov
mov
add
push
divl
and
stc
ja
pushw
dec
mov
inc
xorl
or
push
add
cli
out
rcr
mov
xchg
cmp
cmc
sti
inc
mov
and
pop
inc
pushf
push
mov
cmpl
mov
mov
push
lret
adc
mov
lret
movb
adc
cmp
mov
add
in
add
mov
mov
push
fdivrp
add
inc
ss
push
pop
in
insb
jge
jae
cmpsl
mov
dec
and
mov
mov
out
stos
mov
dec
jmp
mov
enter
in
outsb
mov
faddp
pop
add
mov
fsub
pop
das
or
or
inc
enter
in
out
sub
sti
or
jmp
ret
insb
and
push
push
pop
in
fisubl
divb
sbbb
scas
cltd
sub
pushf
in
inc
lcall
and
ljmp
jle
dec
push
dec
pop
repz
je
pop
jmp
dec
mov
jecxz
sbb
scas
cli
mov
ja
clc
js
sub
jge
sub
pusha
xor
mov
sbb
mov
cmp
xchg
jns
lahf
cmp
sub
xchg
and
out
ret
shll
sub
jns
sti
and
cmp
jg
test
loopne
mov
outsb
adc
mov
pop
jns
scas
or
mov
repnz
and
xchg
int3
push
push
add
ror
popf
icebp
mov
lcall
xchg
int3
push
lahf
movsl
popa
xor
dec
or
sub
mov
mov
add
inc
jp
loop
push
push
push
psrld
dec
outsb
cli
movsl
into
or
dec
mov
mov
add
jo
fcomp
lea
adc
ss
push
mov
imul
cli
bswap
xchg
insl
les
jo
mov
ret
mov
clc
test
inc
sub
push
scas
push
push
in
cli
xor
add
mov
dec
push
mov
out
pop
dec
test
lds
jge
and
sbb
lahf
push
cmpsb
mov
scas
fsubl
push
mov
push
sbb
xchg
mov
pusha
bound
add
add
mov
cmp
loope
push
inc
int
incb
jne
sub
aaa
xchg
stc
sbbb
jb
mov
add
data16
sbbl
or
dec
xchg
into
imul
loope
push
mov
dec
fcmove
shl
inc
insl
enter
nop
and
and
push
cltd
pop
xchg
enter
ret
testl
xor
rorl
or
minps
pop
mov
ret
js
out
xor
ds
push
cld
xchg
addr16
out
adc
push
jle
mov
sub
aam
shlb
sbb
pop
pop
scas
xlat
bound
adc
mov
jno
mov
andl
aad
repz
add
jns
enter
decb
mov
aam
cmp
pop
mov
shll
vmovhps
in
sbb
jecxz
int
js
iret
sbb
std
loop
dec
andl
jnp
jle
lock
in
in
jg
inc
xchg
sbb
popl
pop
jp
in
popa
inc
push
jle
cmp
adc
aad
addr16
jge
add
adc
cltd
xchg
add
sar
imull
mov
mov
push
dec
repz
xchg
inc
mov
pop
mov
push
popa
pushf
inc
or
cld
jno
std
leave
mov
lock
and
cld
dec
cmc
push
cs
and
test
xchg
push
loope
mov
jns
call
out
xchg
push
mov
push
nop
rolb
xchg
xor
call
lret
add
mov
cmp
push
das
inc
mov
gs
shlb
aas
ja
out
push
popf
xchg
pushf
xchg
jo
xchg
jg
fnsave
cltd
cbtw
push
sub
jb
imul
stos
fistps
pushf
pop
push
pop
mull
cmp
scas
sar
push
lcall
cltd
push
xor
aaa
andl
adc
mov
inc
pushf
jge
add
mov
sbb
out
cld
push
xchg
sub
dec
pushl
insb
mov
xchg
inc
and
push
xor
lock
loop
icebp
clc
sbb
dec
in
fists
add
mov
lahf
popa
xor
frstpm(287
adcb
mov
or
sti
jbe
mov
jae
xor
filds
popf
dec
stc
mov
sub
rcll
inc
xor
stc
dec
pop
stc
repnz
jne
ss
insb
add
jnp
push
rclb
xor
outsl
sbb
mov
rcrl
inc
add
mov
mov
push
dec
loop
addr16
mov
or
loopne
xchg
mov
dec
insl
test
and
pop
notb
push
icebp
inc
movsb
jle
push
pushf
xor
sarl
pop
arpl
inc
inc
jmp
clc
jb
push
lds
ficoms
lret
into
push
gs
aaa
pop
xor
jecxz
adc
mov
outsb
mov
lock
cmp
cmp
repnz
mov
sub
and
jle
fsub
out
mov
mov
adc
call
nop
ljmp
and
xchg
daa
ret
iret
repnz
xor
repnz
lods
cld
cvtps2pi
dec
in
test
mov
in
sarb
jg
scas
adc
pop
imul
jp
push
icebp
mov
jl
jle
sbb
jmp
outsb
push
shr
adc
test
mov
or
and
mov
cli
inc
jmp
sub
jecxz
dec
nop
int
sub
fnstcw
or
pop
adc
mov
mov
mov
xchg
jle
fwait
push
mov
pop
and
fwait
adc
fwait
lahf
mov
leave
fsubl
or
sub
push
loopne
push
es
fwait
lcall
mov
pushf
jecxz
ret
int
adc
pushf
jmp
xchg
mov
mov
inc
push
jb
inc
movsb
mov
popa
push
ss
adc
add
jecxz
mov
jg
lahf
fsubrl
lods
mov
push
cmp
and
sub
cli
mov
dec
push
xor
jb
dec
pop
test
xchg
or
mov
nop
xchg
imul
pusha
iret
xchg
pop
test
sub
ror
jle
clc
mov
ret
add
fwait
xchg
xor
ds
cmp
lcall
push
out
fmuls
add
mov
jbe
nop
sbb
jg
and
adc
xor
add
ja
stos
repz
push
nop
movsl
sahf
andl
cmp
push
xchg
push
xchg
xchg
repnz
movsl
sbb
psrad
dec
inc
test
cmp
mov
jp
xchg
ret
stos
sahf
stc
inc
rcl
sub
cld
cmc
push
das
loopne
xor
ret
jp
jb
aad
adc
push
out
imul
jne
repnz
sub
lods
push
mov
inc
xlat
outsl
pop
push
sbb
push
lea
dec
ret
push
repz
jnp
les
pop
or
je
mov
pop
jne
je
jmp
xchg
jecxz
adc
push
popa
fwait
arpl
roll
jp
es
xor
push
mov
arpl
jb
sub
dec
cmc
das
shlb
fisttpll
xchg
cmp
cwtl
out
pop
mov
mov
out
adc
lcall
daa
sbb
sbb
enter
sarl
mov
test
shrl
inc
dec
popa
insb
movsb
mov
push
pop
inc
push
push
pop
sbb
loopne
xchg
adc
push
pop
lds
aad
or
fnstsw
aam
xor
add
mov
jo
sbb
scas
xor
int3
and
sarb
xor
jmp
cmc
jo
sbb
out
int3
pop
pop
push
popa
xor
nop
sub
push
mov
test
and
lcall
fldl
mov
rep
dec
mov
movsbl
dec
insb
movsl
test
cmp
push
push
ljmp
mov
sbb
add
js,pn
lcall
stc
ret
aas
data16
pop
sbbl
outsl
jp
dec
fdivrl
dec
pop
lods
pop
out
fwait
xchg
pop
xchg
pop
dec
ficompl
jg
inc
jo
sbbl
inc
popf
push
pop
lea
dec
std
pop
cmp
xor
pushf
mov
iret
nop
pop
js
mov
mov
adc
mov
or
push
cltd
pusha
cmp
gs
cmpsl
out
add
cmp
rcrb
lods
dec
loope
dec
movb
add
inc
adc
add
cmp
mov
icebp
test
push
cmp
test
stc
mov
or
dec
icebp
das
sarb
xor
cwtl
iret
push
xor
hlt
mov
adc
pusha
pop
les
xor
jmp
mov
ja
jnp
sbbb
mov
xchg
mov
shlb
inc
lret
outsl
mov
add
pop
cmp
ljmp
jecxz
fcoms
cmp
push
out
inc
fcmove
fdivs
insl
popf
jb
icebp
inc
shr
push
rcrl
pop
enter
pop
out
scas
shrb
fwait
add
lock
mov
imul
push
lahf
sahf
clc
jge
pushf
test
push
test
sbb
inc
add
cli
push
movsl
jge
sbb
shll
lods
movl
and
xor
js
loope
das
xchg
push
jp
in
add
call
xchg
mov
and
jno
jl
pop
test
insl
ret
mov
mov
lods
add
pop
ret
cmp
fildll
lea
test
mov
jno
mov
inc
cmp
test
lahf
shll
loopne
sarl
dec
mov
out
push
nop
push
jecxz
insl
icebp
std
js
cs
fbld
nop
xor
jp
mov
bound
and
or
add
xchg
and
ficomps
lds
pushf
pop
insb
cmpsl
fcomi
pop
mov
lods
mov
and
jecxz
or
xor
stc
push
mov
push
int3
add
rcrl
jne
and
jno
mov
gs
sub
hlt
mov
stos
add
dec
dec
mov
test
pushf
shll
and
enter
imul
or
xor
inc
jnp
pop
jp
dec
repz
rorl
dec
mov
mov
dec
outsl
push
sub
inc
dec
lods
andl
sbb
subb
js
pop
add
push
sub
les
shrl
inc
fucomi
cmp
mov
lret
icebp
jae
dec
gs
pop
push
shlb
inc
jno
push
push
std
aas
stos
scas
fldt
ret
subb
fadds
ret
dec
scas
std
adc
outsb
mov
jmp
add
ret
out
stc
movsl
es
xchg
jno
bound
pop
mov
pop
sbb
xor
jns
fadds
mov
sbb
test
test
fdiv
int3
rorl
adc
cmp
cltd
or
pushl
ds
mov
jb
lods
mov
mov
mov
cmpsb
inc
call
mov
xchg
jmp
jmp
pop
adc
fdivp
aaa
inc
and
test
sbb
and
mov
mov
fiadds
push
dec
push
test
dec
jmp
dec
rcrb
daa
mov
adc
dec
gs
loop
push
sbb
sbb
mov
or
outsl
sub
stos
flds
mov
sub
xor
mov
jae
loope
jnp
insl
movsbl
adc
ljmp
insl
add
or
pushf
sub
out
hlt
notl
xorl
enter
lods
popa
outsl
rcl
jl
ds
lods
inc
pop
test
jp
movsb
sbb
daa
push
nop
cmpsl
add
ret
dec
imul
out
adc
sbb
add
mov
jle
icebp
mov
notl
loope
sub
aaa
pop
icebp
addr16
mov
insb
imul
imul
xor
cmp
stc
les
pushf
aam
mov
mov
aam
or
pop
enter
mov
cs
mov
int
pop
test
popa
ficoml
lods
sahf
incl
xlat
movsl
push
mov
mov
dec
xor
xchg
in
xor
xor
inc
sbb
pop
sbb
pop
cs
fisubrl
shlb
sahf
ds
push
or
aaa
shll
ss
adc
scas
je
xor
insl
frstor
jle
movsl
dec
push
mov
jle
mov
sbb
std
loope
popa
add
sub
jb
pop
lods
test
mov
ret
subl
or
adc
adcl
add
dec
push
or
inc
add
sbb
testb
into
shlb
or
stos
je
push
cmp
mov
add
jge
sub
inc
sarb
inc
add
repnz
push
fildl
repnz
xor
jnp
imul
leave
cmpsb
test
mov
lock
push
mov
gs
jo
mov
mov
add
test
sub
or
xchg
push
popa
fdivs
pop
cmp
clc
adc
rcrl
rcll
adc
sbb
add
aaa
enter
divb
push
and
fistpll
mov
inc
frstor
rorl
outsb
pop
fdivrp
cmp
adc
and
inc
or
dec
aad
ret
imul
pop
mov
daa
cmpb
test
mov
pusha
push
ret
int3
fstl
dec
mov
jp
pop
cmp
arpl
call
xor
hlt
sar
cmpsl
aas
inc
mov
fiaddl
lret
lea
sbb
lidtl
lock
negl
sub
jnp
js
sub
sbb
imul
lods
ljmp
dec
daa
dec
add
mov
and
stos
inc
mov
cld
or
xchg
inc
ss
out
lock
decb
pop
jnp
or
mov
inc
fidivs
cmp
or
adc
inc
call
cmp
jl
stos
lahf
loope
in
sub
insl
fcoms
mov
jns
dec
sarb
add
xchg
fildl
dec
mov
adc
out
pop
sbb
xchg
mov
add
mov
add
add
pop
cmp
jnp
pop
or
int
pop
mov
subl
push
out
fsubrp
test
xchg
mov
into
jae
xchg
rol
insl
movsl
adc
pushf
stos
movb
imul
mov
push
cmp
lock
ret
lret
pop
testb
mov
jle
jns
mov
xchg
inc
das
cmc
nop
pop
xchg
movsl
fmuls
push
push
pop
js
sub
std
push
sbb
cmp
sbb
enter
loop
xchg
xchg
roll
xchg
and
scas
stos
cmp
pop
ficomps
cmp
inc
xchg
mov
les
xor
in
push
mov
xor
lock
mov
loop
push
out
cmp
xchg
cmp
loop
test
daa
js
cmp
cli
call
fidivl
xor
test
lods
dec
mov
rorl
sbb
rcll
mov
adc
stos
rep
inc
lock
ljmp
repz
dec
outsb
mov
or
mov
pop
sbb
pusha
pop
adc
add
lods
xchg
mov
adc
mov
mov
pop
cmp
dec
sar
pop
sahf
or
leave
js
out
andb
add
call
and
add
js
aad
xchg
xchg
sbb
enter
mov
rcr
or
loopne
pop
mov
outsb
test
xor
push
and
mov
cmc
pop
dec
lret
imul
push
lds
js
fnstsw
mov
movsl
fmul
in
lock
out
cli
add
call
hlt
mov
ja
push
mov
sahf
mov
test
cmp
arpl
jnp
test
pop
adc
clc
mov
out
stc
push
rclb
fcompl
or
or
out
dec
lock
shlb
aaa
pop
repz
std
pop
sbb
fs
pop
sbb
aaa
lock
jae
cmpsb
sarl
push
loope
mov
rolb
push
in
or
or
test
mov
stc
and
mov
mov
xchg
dec
lea
mov
test
imul
scas
cli
xor
dec
push
mov
mov
cwtl
daa
fxtract
lds
push
stos
pop
int3
dec
pop
inc
jno
lods
clc
cmp
mov
fisttpll
out
mov
orb
outsl
orl
test
jbe
fs
mov
rorb
mov
pop
inc
add
ror
pop
inc
mov
lcall
or
inc
and
stos
fidivl
out
jge
add
xchg
daa
cmpl
movsl
xor
rorl
ficoml
mov
shl
sahf
hlt
pop
xlat
jnp
pop
sbb
or
lcall
add
inc
fmuls
lret
in
mov
push
inc
cmc
xor
and
mov
in
inc
test
fs
adc
sub
fcoml
mov
mov
jne
lahf
cwtl
jge
jg
insb
mov
add
jno
repz
xorb
dec
test
insl
test
pmulhuw
xor
adc
test
mov
mov
fisubl
xor
mov
push
fwait
sub
mov
mov
in
mov
push
sub
mov
int3
adc
je
icebp
mov
cmc
lahf
scas
sbb
or
les
sub
test
inc
cmp
popf
andb
mov
jns
ret
movsb
adc
xchg
lods
in
pop
dec
stos
ret
dec
mov
enter
jae
cli
jmp
sbb
jle
dec
pop
ljmp
test
mov
cmp
in
add
dec
mov
xlat
sarb
mov
ror
or
sahf
adc
fsubl
ja
les
das
mov
cmp
ja
sahf
or
lds
push
in
dec
fistl
mov
scas
bound
in
mov
push
jnp
ds
adc
in
and
in
mov
mov
mov
in
xlat
call
inc
push
push
add
arpl
sbb
sub
ljmp
push
cmpsb
add
js
pop
cmp
mov
orb
dec
ret
shlb
imul
adc
call
pop
dec
pop
push
mov
or
mov
add
pop
mov
xor
lcall
mov
stc
inc
test
jp
fisubrl
outsl
jae
lret
repnz
fs
aam
xchg
inc
push
add
sbb
mov
imul
div
mov
jl
rcll
test
adc
add
push
push
cmp
in
aad
arpl
sbb
daa
mov
inc
xchg
daa
int
in
xchg
stos
dec
roll
shrl
add
scas
adc
dec
xchg
jae
xor
aas
pop
or
lcall
pop
dec
pop
pushf
outsl
inc
out
andl
aad
addl
push
iret
dec
mov
rcrl
ret
xchg
push
adc
sbb
push
pop
pop
sbb
jae
mov
and
mov
push
sub
xchg
jmp
stos
cld
icebp
mov
xor
scas
rorl
push
daa
inc
jmp
cmc
leave
pop
push
add
int3
cli
mov
cmpsl
mov
xchg
insl
push
mov
inc
movsl
inc
pusha
cmc
in
mov
aad
iret
out
cmp
roll
xchg
inc
inc
ret
cmc
sti
xor
xor
stos
pop
pushf
int
aam
pop
pop
cli
pop
adc
jle
mov
or
dec
movsl
mov
sti
aaa
leave
je
sar
cmp
sti
fdiv
jl
outsl
loopne
mov
stos
lret
or
ljmp
sub
repnz
cli
inc
in
sbb
push
cmpsb
mov
movsb
fsubrl
sbb
add
mov
push
out
rorb
push
aas
andb
cld
ja
push
xor
js
cmc
dec
insb
push
out
cmp
sbb
push
xchg
cmpsb
xor
adc
stos
push
daa
sub
in
sub
call
addr16
mov
es
gs
dec
aad
mov
shll
inc
push
movsb
arpl
mov
cmp
xor
call
aaa
pop
out
jg
rcrb
cmp
sub
xor
sbb
pop
dec
or
xor
les
mov
mov
mov
iret
les
aaa
pop
adc
mov
add
jo
cmp
jmp
lea
ss
jnp
rorl
aam
add
and
leave
dec
cmpsl
shll
push
mov
mov
add
jns
push
mov
inc
cld
pushl
shlb
sbb
pushf
loop
dec
popf
xor
push
ljmp
push
lcall
mov
ss
cmp
cs
sub
lret
add
sbb
js
mov
mov
lock
adc
aaa
or
push
inc
aad
popf
outsb
negb
stc
fwait
adc
in
push
insb
inc
inc
test
sbb
shlb
cli
imul
decl
bound
push
fildll
in
sub
adc
dec
out
sahf
ljmp
sbb
jb
mov
xchg
cmpsb
out
add
sahf
inc
mov
imul
jle
in
add
popf
aas
out
cwtl
outsb
xchg
scas
pop
out
stos
inc
sbb
pop
mov
sbb
or
loopne
add
and
adc
mov
lret
rol
int3
xchg
mov
mov
jne
cmc
sub
outsb
jecxz
mov
sub
les
dec
or
gs
add
lods
fcoml
fistpl
sbbl
inc
mov
mov
jle
and
inc
cltd
mov
loop
shlb
adc
bound
or
and
data16
and
loopne
cld
cmp
test
pop
pop
pop
sbb
andl
mov
popf
out
push
sub
xchg
add
sub
int3
popa
mov
push
ret
sarb
and
scas
repz
jno
push
push
add
mov
das
sub
inc
sub
and
mov
icebp
or
lahf
repnz
jnp
clc
movsl
jle
int3
jo
mov
inc
enter
mov
pop
es
or
pop
xor
and
and
aad
cld
dec
sub
je
mov
jl
cmpsl
mov
pop
dec
jns
ret
sbb
and
push
aas
jbe
scas
je
pop
mov
dec
lds
fbld
cmp
int
sbb
cmpsl
jo
into
jl
or
shlb
or
jne
sbb
add
sbb
or
mov
sbb
or
dec
hlt
ljmp
in
pop
negb
jge
arpl
movsl
jne
cmpsb
lea
pop
sti
into
dec
sub
std
xchg
mov
jmp
pop
jne
ret
xchg
xchg
jae
stc
lret
aad
jg
testl
out
std
jp
or
jecxz
lcall
mov
or
or
roll
mov
in
jecxz
ja
mov
add
int3
cmp
pop
mov
jb
jp
je
lcall
dec
push
jg
xchg
stos
push
pcmpgtb
push
push
mov
inc
int
movsb
rol
stc
mov
jmp
movsl
sub
popf
xchg
ljmp
push
cmpsb
xchg
add
mov
xor
xor
pushf
call
stc
push
fs
sbb
nop
push
or
push
jo
outsb
and
in
adc
dec
jle
xor
xchg
mov
fdivr
cmp
pusha
sbb
loope
push
adc
mov
loop
pop
ret
sbb
lods
push
fidivl
insl
sbb
ret
xchg
mov
add
call
xor
mov
icebp
xchg
inc
fs
addr16
hlt
inc
shrl
xchg
repnz
aas
sbb
inc
out
or
clc
aas
mov
lea
lds
lods
insl
test
js
sbb
pop
xor
jbe
or
in
in
adc
and
stos
popf
sub
fistpll
mov
sbb
icebp
inc
add
mov
aaa
adc
xor
das
lret
push
mov
inc
cmpsl
std
or
add
jnp
push
sub
int3
jge
js
test
data16
insl
xchg
movsl
insb
bound
movsb
adc
ffree
jbe
arpl
lods
mov
lds
lods
sti
icebp
fbstp
andps
xchg
sti
lea
stc
add
repnz
add
clc
mov
loop
mov
jp
sub
in
pop
adc
mov
pop
inc
addr16
mov
pop
rorl
in
and
aas
cmpsl
xor
lret
adc
cmp
cmp
inc
sub
ljmp
cmp
sub
popf
pop
test
xlat
push
arpl
ss
cwtl
repnz
cmp
pop
and
xor
and
and
or
jne
scas
jo
inc
das
movsl
test
sub
xor
stos
aad
and
fwait
idivb
sbb
cmp
test
mov
ret
aad
push
sahf
inc
jno
outsb
dec
mov
test
mov
testb
pop
cmpsl
movsl
lock
add
xchg
mov
mov
les
cwtl
jp
fld
shl
adc
dec
adcl
arpl
out
cld
sarl
push
and
nop
outsl
add
inc
test
mov
xchg
sub
pop
pop
loop
sbbl
popa
in
inc
xlat
mov
inc
test
adc
imul
mov
jns
push
icebp
das
dec
fists
mov
mov
in
dec
outsl
xor
test
cli
fwait
out
push
not
pop
icebp
sub
subb
pusha
pop
popf
stos
mov
mov
fdivrp
icebp
fcompl
mov
and
sbb
mov
xor
shrl
pop
mov
push
repnz
in
lret
bnd
add
les
push
lods
fwait
mov
test
inc
pop
adcl
jnp
fadd
test
jns
pop
ja
aad
in
sbb
pop
mov
hlt
mov
cli
js
jns
inc
scas
mov
dec
lods
sub
and
jnp
mov
inc
cld
pop
fstpl
push
adc
pop
pop
jo
rcrb
fists
sub
push
ds
jp
sbb
test
lret
push
lds
loope
icebp
and
popf
fistps
daa
scas
orb
js
je
not
mov
mov
test
test
ret
push
mov
out
pusha
mov
push
inc
out
leave
fdivrl
fsts
mov
fmuls
int3
and
data16
ljmp
stc
jle
mov
xchg
loop
push
mov
cmpb
xchg
pop
xor
cwtl
dec
ja
movsl
inc
lods
mov
dec
dec
fwait
mov
fcmovnbe
popa
outsl
fsubl
xchg
dec
loop
and
outsl
and
or
add
js
test
sbb
jo
inc
push
cmp
lods
or
cmp
lcall
insb
lods
mov
dec
and
push
mov
sbb
cmp
mov
and
pop
adc
mov
and
int3
in
lcall
pop
fnstsw
stos
les
rcrb
mov
add
test
and
sub
mov
xchg
pop
fnstcw
pop
mov
lcall
outsl
or
loop
mov
imulb
and
and
dec
out
aam
xchg
mov
mov
lcall
dec
in
xchg
stc
push
in
mov
sub
jecxz
lds
lret
jo
subb
loopne
jno
aam
clc
fidivrl
jnp
sbb
into
div
mov
xorb
nop
xchg
pop
aaa
xor
push
fucomip
mov
add
xor
das
cmpsl
mov
sub
or
and
xchg
xor
and
repnz
aad
imull
jecxz
inc
in
data16
xchg
push
mov
fidivrs
pop
mov
mov
cmpsl
cltd
and
push
test
or
add
push
push
push
xor
movsl
xor
or
jmp
sbb
cli
xlat
xor
fwait
cmp
stos
lods
and
incb
insb
jb
lcall
arpl
sarl
neg
cmp
aad
gs
mov
mov
movsb
repz
mov
iret
fstpl
ficompl
pop
mov
jl
pop
xchg
inc
cmpsl
jmp
sbb
pop
push
mov
shrl
imul
jbe
jbe
rcrb
pop
add
stos
lods
mov
test
add
add
inc
nop
dec
add
cmp
add
ja
cwtl
dec
push
insl
stos
sbb
sbb
sub
in
ret
pop
add
insl
cld
hlt
mov
adc
inc
pop
cs
cmc
div
cs
movsl
cmp
cmp
dec
ds
std
cmpsb
mov
inc
movsb
add
leave
pop
sbb
sub
iret
jecxz
test
add
sti
or
rcrb
inc
insl
mov
mov
mov
lret
jne
push
sarl
and
xchg
bound
add
mov
shlb
mov
dec
lods
repz
xchg
or
jno
ja
xor
add
adc
std
inc
loopne
ret
pushf
push
or
push
in
fiadds
mov
cs
enter
pusha
cmp
lock
xchg
push
add
rcr
cwtl
push
nop
in
dec
dec
add
add
fwait
cwtl
sub
xchg
jb
lahf
pop
cs
idivl
dec
aas
rcrl
repz
popf
stos
movsl
adc
sub
lea
mov
push
js
cmp
int3
push
test
imul
pop
add
jge
xchg
mov
or
xor
popf
es
dec
adc
repnz
sbb
imul
cwtl
hlt
cmpsw
jge
or
lea
pop
mov
mov
stos
and
into
fbstp
adcl
into
mov
ret
insb
insl
mov
mov
sbb
repnz
inc
add
add
pop
push
or
faddl
or
aad
in
xchg
movsl
jbe
adc
insl
jle
pop
js
fidivrl
pop
cmpsb
insb
or
sbb
jecxz
adc
inc
sub
cmp
in
jge
into
jmp
xchg
mov
dec
lcall
stos
cmp
addr16
jmp
or
add
pop
sub
sbb
jb
daa
jecxz
inc
mov
dec
clc
or
icebp
imul
sub
sbb
enter
and
or
or
arpl
pop
add
adc
enter
dec
scas
jne
adc
xchg
inc
mov
push
loope
int
sub
shrb
add
les
jecxz
enter
cltd
lock
mov
xchg
rorb
cmp
daa
or
sahf
insl
pop
cmpsl
loopne
sub
xor
scas
xchg
scas
inc
add
adc
arpl
sub
or
popf
mov
sete
mov
call
orb
ss
mov
xchg
ljmp
xor
pop
scas
pop
xchg
jp
insl
mov
test
stc
enter
into
inc
mov
out
insl
ret
mov
sbb
arpl
lea
clc
sbb
mov
mov
fcmovnbe
and
or
out
and
cmpsl
sbb
hlt
push
cmpsl
jmp
inc
push
push
movsb
iret
fisttpl
lds
mov
cmp
out
and
jecxz
outsb
lea
pop
mov
xor
inc
and
or
xchg
mov
mov
es
or
js
push
insl
jmp
add
mov
lcall
pop
js
shlb
aaa
aas
hlt
adc
mov
or
lods
add
or
ret
stos
mov
cltd
mov
jge
aad
subb
ljmp
popf
fsubs
mov
add
mov
pop
add
and
or
popa
repnz
mov
sub
inc
inc
fmul
fsubs
in
inc
adc
cmp
mov
imul
iret
add
jle
inc
xchg
dec
dec
hlt
fisubrl
adc
sub
adc
mov
inc
and
shrl
repnz
aaa
int
mov
push
lret
addr16
dec
popf
push
mov
jg
push
mov
scas
je
lock
ret
notl
and
subb
mov
inc
dec
cmp
std
cmp
mov
or
inc
push
mov
or
xlat
adc
bound
dec
cmpsl
lods
push
hlt
jmp
stc
push
sub
jbe
jmp
add
or
lcall
aad
testb
test
jne
js
jecxz
adc
and
adc
mov
ret
sub
xorb
inc
jbe
or
lret
into
stos
cli
adc
mov
xor
mov
and
shrb
fs
cs
aad
sahf
scas
add
bound
cmp
sbb
jns
push
adc
xor
int3
dec
dec
lock
out
fdivrs
stos
ljmp
sti
jl
inc
pusha
xchg
mov
adc
imul
xor
int
es
pop
mov
push
jmp
ret
pushf
loop
sbb
cltd
adc
adc
pusha
push
sub
pop
iret
fstps
popa
leave
lods
rorb
and
mov
jmp
xchg
outsb
inc
cmp
out
add
and
stos
add
mov
out
xchg
iret
cmp
add
call
mov
dec
lret
aad
or
mov
mov
es
adc
mov
add
adc
stos
out
hlt
into
cmp
insb
fnstcw
lahf
es
cwtl
icebp
sti
call
sarb
aad
inc
jnp
or
xlat
dec
mov
jb
push
jnp
sahf
scas
xor
call
mov
sahf
pop
jmp
lock
xor
gs
out
int
push
lret
xchg
enter
mov
push
outsb
mov
and
pop
shr
jno
jle
loop
ret
imul
subb
loope
add
xor
test
mov
enter
ja
mov
cmpsl
loopne
dec
inc
mov
clc
stos
and
and
xchg
popf
sub
in
jno
cmc
dec
mov
push
out
adc
std
sbb
xor
test
in
sub
nop
test
inc
and
shll
sub
jecxz
or
jb
mov
fiaddl
cmp
xchg
xor
xchg
data16
jae
rolb
or
mov
filds
sbb
outsb
fs
and
jp
std
dec
mov
ja
daa
mov
jne
lcall
pop
or
sub
xchg
inc
rorl
fcompl
popf
mov
xchg
fs
cmp
out
testb
sub
sbb
add
or
inc
pop
pop
lea
sarl
lret
negb
xchg
lea
into
lods
divb
sti
daa
out
test
xor
mov
popa
xor
sbb
mov
shlb
sbb
lret
dec
loope
fstpt
out
push
xor
imul
ljmp
in
dec
es
int
xor
and
xchg
out
mov
pop
xor
movsb
aam
and
push
mov
mov
pop
push
mov
test
inc
cmp
sbbb
movsl
lds
jmp
mov
sub
lret
repz
jle
push
push
add
and
xchg
or
addr16
out
insl
pop
dec
sbb
rorl
loopne
into
stos
xorb
leave
lret
sahf
gs
add
pop
mov
je
mov
push
enter
sub
add
into
outsl
xchg
outsb
or
pop
dec
jecxz
ja
cli
fs
cmpsl
into
aaa
aam
sbb
mov
mov
loop
pop
push
jg
adc
sbb
pushf
sub
jbe
add
ret
rclb
jmp
aas
loop
outsb
cli
ljmp
rcr
fdivl
int
ds
sbb
iret
inc
fdivrl
aam
mov
mov
cmpsb
jb
and
push
jns
xor
mov
xchg
imul
arpl
pusha
test
adc
or
push
dec
mov
sub
cmp
cmpb
scas
mov
mov
data16
popf
xchg
inc
mov
mov
or
lock
pop
fdivl
les
adc
aam
mov
movsb
lods
lds
and
icebp
into
loopne
mov
mov
jb
cs
into
shrb
call
or
xchg
pusha
out
sub
pop
jnp
fsubrl
jae
insl
fsubr
mov
pop
pop
adc
inc
mov
xchg
mov
stos
jnp
fildll
outsl
jne
stc
vorps
inc
or
inc
mov
gs
lahf
repz
xchg
adc
aas
scas
fnsave
scas
icebp
lret
ret
inc
xor
jmp
adc
cmpsl
pop
push
insb
mov
inc
aam
out
pusha
jle
ss
ljmp
pusha
int
sbb
fldenv
mov
test
dec
cs
pop
or
pop
daa
mov
dec
or
sbb
mov
sbb
adc
push
test
sbb
sbb
push
mov
insl
or
pop
adc
mov
rclb
imul
shr
pop
out
addr16
lcall
push
into
call
mov
xchg
dec
mov
lock
mov
repnz
movsb
ss
inc
xchg
xchg
jg
jecxz
xor
jno
xor
add
push
and
imul
scas
mov
cmp
mov
mov
aam
dec
notl
push
xchg
add
rorb
jb
popa
xor
aam
sbb
sar
subl
pop
lret
mov
fwait
and
ds
mov
test
ja
inc
xchg
xchg
dec
test
ss
fcmovnb
xor
mov
scas
out
sbb
rcrl
add
sahf
bound
cmp
dec
shll
pop
aam
pop
gs
or
adc
push
xchg
dec
repnz
sti
and
sahf
insl
jo
adcl
fsubrs
sbb
add
xor
or
inc
into
adc
add
imul
pop
inc
jle
outsb
push
js
sti
and
inc
pushf
mov
and
inc
movsb
cmp
inc
mov
dec
je
push
dec
or
cltd
sbb
inc
sbb
mov
aaa
xchg
mov
push
mov
xchg
or
aas
call
and
negb
push
sbb
sbb
cmp
imull
das
lcall
adc
dec
mov
cmp
aam
outsl
lahf
aaa
scas
rorl
ret
scas
sub
popf
je
pop
pop
test
test
loope
jae
into
push
or
xchg
test
adc
jg
xchg
dec
sbb
xchg
mov
sti
sub
dec
jnp
add
lds
fsubs
sahf
inc
inc
jp
mov
les
fidivs
xor
adc
mov
in
inc
cli
mov
bound
jge
xchg
mov
pop
lock
andb
insl
leave
cmp
or
adc
pop
xlat
lret
icebp
lahf
mov
rcl
add
push
mov
imul
xlat
lods
mov
scas
and
jp
daa
std
jae
out
je
lods
and
into
movsb
mov
inc
orb
insl
pop
outsl
xchg
clc
rolb
xchg
cmp
and
mov
je
mov
fldln2
sahf
je
mov
push
mov
mov
mov
jne
inc
loope
push
push
mul
inc
dec
inc
or
or
fisubs
mov
or
movsl
jle
pop
xchg
sub
sub
mov
stos
out
cmp
fcompl
xchg
xchg
mov
push
gs
ljmp
xchg
push
ss
outsl
mov
divb
lods
pop
shlb
sub
jbe
enter
cmp
mov
cltd
repnz
pop
mov
aam
inc
sbb
jmp
out
fldcw
and
imul
mov
cmp
adc
xchg
lret
sub
lods
inc
mov
out
ja
adc
pop
les
outsl
stos
jne
push
or
adc
lock
adc
pop
int
sbb
xor
aaa
pop
sub
or
cmpsb
fdivp
mov
pushf
push
dec
icebp
sti
jbe
sub
data16
lods
sbbl
xchg
and
pushf
call
push
es
sub
jmp
mov
jo
dec
adc
rclb
sub
js
ror
add
in
and
cmc
mov
pop
lcall
lods
shl
scas
mov
lods
sub
mov
mov
mov
mov
pop
pop
adc
push
and
ljmp
mov
xchg
xor
les
in
subl
mov
xchg
mov
jne
xor
ret
push
add
push
mov
or
xchg
imul
cmp
cmpsb
rcr
push
mov
testb
mov
es
out
int3
stos
lret
inc
mov
add
adc
lods
loop
jmp
dec
or
add
xor
mov
sbb
in
fldenv
xor
xor
std
enter
shlb
sarl
cwtl
popf
cmp
adc
sarl
sbb
testb
aam
sub
pop
sub
xor
out
pushl
or
lcall
ss
push
test
cmp
xchg
inc
add
adc
fiaddl
dec
sub
mov
andb
repnz
insl
enter
lods
inc
bnd
faddl
leave
int3
mov
andb
dec
ds
cs
cmc
push
inc
in
es
inc
mov
push
int
sbb
add
mov
sub
pop
lret
subb
pop
cmp
xor
hlt
gs
push
and
mov
jmp
inc
push
test
inc
push
mov
jae
and
cmp
outsb
and
lods
xchg
sub
jb
sti
mov
inc
insl
in
push
jnp
xchg
inc
fsubr
in
xor
jp
call
fbstp
jno
in
dec
sti
push
bound
jbe
jg
xor
ds
cltd
mov
loop
sub
das
mov
std
xchg
fsubl
mov
cmpsb
rcrb
imul
xor
sub
ret
ficompl
sub
xchg
lcall
lret
jmp
jno
mov
pop
pop
stc
and
xchg
sbb
loopne
jp
int
jl
lahf
add
xchg
add
and
in
and
xor
adc
cmpsl
xor
jae
dec
inc
shrl
push
xchg
pop
in
rcrl
ret
dec
aaa
or
cmpsl
xlat
pop
shrl
xor
jmp
js
mov
inc
scas
and
gs
outsl
je
push
inc
or
addl
outsl
cltd
and
xlat
xlat
mov
mov
mov
add
xchg
popa
aad
jle
dec
xor
mov
or
les
sub
push
imul
data16
out
sarb
fildl
jl
mov
jp
int
xor
in
aaa
inc
pop
fwait
pop
pop
inc
loope
fcom
pop
stos
mov
jecxz
cmp
jp
lock
add
adc
and
ret
xchg
cli
cmpsb
icebp
frstor
sbb
pop
pop
dec
adcl
push
in
aaa
mov
xchg
filds
xor
push
sub
ss
jns
in
mov
push
ror
pop
int
push
std
push
inc
outsb
cmpsb
inc
into
lea
mov
xchg
lcall
push
xor
jno
test
xor
mov
mov
sub
add
xor
mov
cmp
push
dec
mov
dec
or
rcrb
mov
pop
add
rclb
icebp
fiadds
pusha
cmp
rol
and
dec
dec
mov
subb
xor
arpl
popf
jle
out
cmp
xor
lahf
and
setg
shll
cmp
push
js
subb
sub
faddl
jge
jo
dec
mov
xor
jge
xchg
vphsubbw
cltd
aas
das
xchg
fcom
add
add
lods
cmp
fs
mov
ljmp
xor
stos
out
xchg
xchg
mov
pop
stos
xor
sbb
jl
scas
out
jmp
andl
dec
xchg
mov
mov
push
addr16
pop
jnp
mov
sti
std
dec
aam
push
aas
out
jmpw
push
add
lahf
push
jecxz
enter
stos
bound
outsb
sbb
icebp
sub
or
sbb
push
pop
in
and
push
popa
loopne
sbb
pop
jecxz
push
test
fstpl
and
push
jmp
out
cwtl
test
mov
ret
cmc
pop
aam
mov
cmp
sbb
inc
dec
rcrl
push
dec
adc
xchg
and
push
and
cs
cmp
xlat
sbb
xor
push
xor
sbb
das
jl
scas
push
wbinvd
lods
test
xchg
test
sbb
lahf
imul
mov
fldl
sub
mov
stc
and
aas
jp
adc
xlat
aad
jle
add
jb
xchg
fwait
shrl
adc
fs
cmpsl
sub
mov
inc
inc
pop
cld
dec
push
push
out
mov
push
jmp
pop
out
aaa
xchg
mov
mov
pop
jbe
dec
mov
pop
loope
in
int
cwtl
xor
mov
sub
xchg
fcompl
xchg
scas
mov
mov
insb
ret
loope
aad
cmp
fisubs
mov
and
aaa
cmp
lock
jle
stos
fcoml
in
ret
pop
addr16
and
hlt
mov
mov
es
jbe
adc
lahf
push
orb
xchg
movsl
mov
pop
pop
les
lock
fsubp
mov
ss
xchg
mov
pushf
jne
adc
lret
xchg
jb
nop
adc
test
pop
std
push
mov
jne
scas
inc
pop
ljmp
xchg
sbb
mov
outsb
and
cmp
clc
cmpsb
xor
pop
adc
test
sub
test
inc
nop
sbb
subb
pop
scas
xorl
fsubrl
test
fists
pop
or
xor
cmp
ret
mov
xchg
lret
jns
push
mov
jne
push
mov
xor
xchg
jge
stc
arpl
outsb
mov
out
dec
clc
mov
rclb
push
pop
xor
aam
and
arpl
jno
mov
nop
stos
ljmp
fisttpll
ficomps
ret
pusha
dec
repz
fmull
adc
jge
adc
into
xchg
dec
test
pop
outsb
mov
push
ss
cmp
lods
lock
loopne
jmp
out
aad
jmp
lock
cmp
xchg
push
push
out
idivb
cmc
int
push
push
std
xchg
adc
add
add
movsb
add
lds
cwtl
push
aam
or
jl
inc
data16
pop
lock
mov
cmc
pop
sahf
je
jecxz
push
fwait
lds
cmc
dec
push
adc
cld
data16
push
cmc
or
pop
rclb
inc
movsl
icebp
push
incb
sbb
rorb
cmp
negl
ljmp
ljmp
mov
repnz
out
outsb
test
cmc
push
mov
or
pop
add
pop
lret
stos
or
out
stc
pop
cwtl
ss
or
xchg
sbb
dec
in
aas
xor
adc
adc
push
sub
stc
and
push
jl
ret
lret
pushf
ja
icebp
inc
fwait
rorl
push
push
inc
mov
jmp
outsb
and
lea
cmp
push
add
push
push
imul
dec
jns
sbb
bound
test
fstpl
in
add
mov
inc
sbbl
mov
xor
push
insb
and
mov
xchg
stc
xor
cmc
ja
scas
and
xlat
mov
nop
insb
scas
mov
jmp
aas
out
int
iret
push
mov
fdivl
aad
sti
pop
sub
repnz
addr16
mov
inc
cld
adc
pop
movsb
scas
sti
fdivl
mov
xchg
roll
stc
mov
loope
mov
mov
pop
jp
mov
mov
and
xchg
fldt
lods
out
adc
xchg
cmc
mov
push
iret
lea
inc
jne
pop
cli
movb
add
dec
test
andb
mov
cwtl
in
out
lods
sbb
pop
xor
scas
cmp
push
fmuls
pushf
popa
jecxz
sarl
mov
repz
pop
inc
repz
test
lods
jae
sub
mov
adc
jecxz
push
fwait
cmp
aas
xchg
shll
das
xlat
and
hlt
inc
pop
mov
xchg
clc
cltd
xlat
or
xor
fsubs
or
dec
sbb
scas
mov
je
lahf
dec
lods
mov
idivl
inc
filds
adc
dec
add
aam
sub
add
pushl
les
mov
pop
pop
xchg
loop
in
and
inc
mov
jg
out
dec
pop
and
inc
mov
fsubs
add
xchg
jno
sub
inc
into
fsubs
xchg
pop
cmpl
cli
add
xor
sti
clc
adc
notb
xor
cli
rolb
jge
xchg
mov
sarl
xchg
into
mov
xchg
sub
dec
xchg
in
lods
push
jmp
mov
jmp
das
inc
fdivrs
stos
xor
std
or
sub
cmpsl
xchg
and
sbb
pusha
cmpsl
mov
xchg
shrl
mov
jmp
push
or
in
std
sbb
jbe
leave
mov
cmpsb
icebp
mov
mov
mov
push
loopne
pop
or
icebp
and
and
pop
sahf
cmc
repz
in
icebp
add
sub
aad
cmp
stos
fdivs
mov
jge
mov
sub
sbb
js
push
jp
inc
or
bound
push
adc
jo
scas
dec
xor
xchg
es
dec
lods
jbe
pop
mov
pop
sbb
push
pusha
clc
xchg
sbb
fisubl
cs
jge
jo
add
push
or
cmc
fadd
dec
xor
ds
js
add
xor
sbb
mov
push
shlb
and
ror
add
jl
js
mov
jg
ljmp
or
outsl
or
sub
add
lds
in
mov
mov
push
in
stos
pop
xor
loopne
cmp
sbb
cmpsb
jno
jmp
incb
ret
psrad
pop
divl
jecxz
in
imul
inc
imul
sub
orl
jae
dec
iret
data16
adc
sbb
mov
jno
mov
fsts
clc
adc
fimull
pop
ljmp
hlt
mov
ss
sbb
fwait
mov
loopne
neg
or
and
lret
mov
cmp
in
popa
dec
sbb
push
adc
jl
xor
lret
cld
pop
inc
inc
push
movsl
xorb
jp
scas
mov
cld
sti
or
imul
and
dec
fiaddl
pop
lods
mov
push
inc
lret
cmc
pop
cltd
ja
xchg
testl
mov
jne
out
les
nop
inc
inc
gs
mov
out
pop
out
push
stc
fbstp
adc
jae
stos
and
push
incl
adc
xor
int
test
xor
sub
sub
andb
push
adc
and
shll
out
xlat
testl
movsb
push
inc
jae
mov
jecxz
adc
jb
int
inc
ret
xlat
or
cmp
sub
mov
ret
inc
push
notl
dec
pop
jno
fisubs
cmpsb
jmp
cld
sarb
std
sub
ljmp
pop
pushl
or
and
imul
and
das
dec
mov
es
or
cli
cmp
je
es
pusha
enter
mov
push
mov
in
andl
pop
incl
scas
mov
sub
aad
push
cmpsl
movsl
hlt
push
shrl
test
adc
mov
inc
adc
lahf
into
rorl
add
sbb
inc
imul
mov
jae
in
es
xchg
add
xchg
and
mov
stos
push
xchg
rol
adcl
jb
lret
or
decb
cmp
mov
pop
sbb
movsl
stc
add
mov
lahf
rcll
or
das
js
mov
jge
inc
out
add
push
mov
cli
sbb
dec
xchg
into
pusha
test
js
xchg
scas
mull
in
lcall
shr
aas
lds
cmp
lret
cs
ja
jmp
push
xor
mov
aam
adc
test
cltd
cltd
mov
inc
add
call
lret
mov
cs
xor
jb
jl
cmpsl
loope
mov
nop
loope
sub
mov
sub
pop
lcall
aam
mov
adc
or
into
sbb
push
sub
test
inc
das
cmp
mov
rclb
loop
shlb
test
mov
pop
pushf
pcmpeqb
inc
mov
int3
jb
xchg
scas
xlat
negl
cltd
push
jae
mov
push
incb
sbb
ret
adc
pop
mov
mov
add
sti
xlat
dec
bound
out
les
mov
adc
cmc
sbb
or
ss
sbb
inc
lcall
inc
daa
mov
pop
in
cs
out
or
sub
pop
lds
mov
push
add
fdivr
arpl
mov
push
add
pop
mov
or
push
add
ror
cmpsb
mov
daa
sub
mov
out
inc
in
psadbw
sbb
filds
scas
jne
jmp
lret
push
in
push
loop
mov
inc
jbe
lcall
jecxz
pop
xor
in
sbbb
pop
inc
enter
test
in
and
test
xchg
adc
fwait
push
sti
lock
mov
xor
pop
or
pusha
jnp
fistpll
aam
cmp
out
lret
icebp
add
cld
shlb
fstl
jo
cwtl
jecxz
pushf
es
idiv
ljmp
pop
mov
std
mov
jl
into
push
test
fsts
orb
out
fsubl
sti
or
rcl
jae
mov
pop
lock
bsr
jle
push
push
scas
add
imul
add
mov
sbb
ficoms
and
dec
in
lods
lret
mov
insb
add
movl
mov
and
jle
lcall
inc
xor
xchg
or
lds
cli
iret
std
sbb
xchg
jp
inc
addr16
or
std
dec
xor
pop
aaa
int
in
jno
cmp
repz
js
aaa
aad
add
and
add
push
adc
das
sahf
into
lcall
sub
out
cmpsb
std
cmp
xchg
mov
sar
into
xchg
test
test
cmc
cmp
sahf
inc
dec
mov
int
ret
adc
test
xor
ss
test
in
pop
lcall
xchg
dec
in
addr16
out
push
mov
stos
sti
jg
adc
sahf
int3
mov
jle
jge
pop
jmp
ljmp
sub
xor
insl
inc
outsb
outsl
and
xchg
cmp
outsl
xchg
stos
xor
jae
jnp
mov
arpl
cmp
push
sbb
out
push
outsb
aaa
mov
fnstcw
inc
subl
pop
fnsave
cwtl
ljmp
ja
cmpsl
cmp
aam
imul
loope
fsubl
in
cmpsl
jns
inc
in
mov
int3
or
adc
xchg
inc
fdivr
or
push
sbb
sub
jecxz
lret
fildl
pop
cmp
or
push
mov
pop
pop
imul
xchg
imul
test
xchg
frstor
lahf
je
ds
inc
pusha
lret
xchg
jo
rolb
insl
movsl
push
dec
test
inc
int
sub
outsl
adc
js
jb
add
jg
xchg
sub
mov
loop
sub
push
xor
mov
mov
push
sbb
cmp
jns
pop
sbb
pop
sbb
sbb
imulb
fistpll
mov
leave
cs
dec
enter
or
sub
sub
push
xor
or
call
dec
int
arpl
in
pop
leave
mov
arpl
or
mov
or
mov
jns
adc
pop
divl
out
push
mov
lcall
pop
pop
and
cli
mov
imul
inc
jmp
dec
jb
jae
add
cld
jbe
movsl
and
push
and
and
mov
sbb
je
pop
push
out
ss
sub
int
xchg
loope
sub
xchg
mov
or
adc
sub
adc
push
cmc
push
ds
sar
ja
dec
imul
daa
add
push
push
shrl
inc
mov
sbb
sub
ss
repz
sub
xchg
std
pop
cmp
pop
pop
xchg
stos
cmpsb
mov
std
repz
scas
xchg
in
and
xchg
and
jae
xor
sub
jecxz
mov
shlb
push
sbb
and
lret
adc
mov
pop
sub
adc
test
push
or
test
add
cs
in
push
icebp
or
xor
outsl
fiaddl
movsb
imul
sub
or
stos
pop
ds
stos
add
jle
sub
lcall
loope
test
movsl
hlt
push
pop
gs
fidivrl
or
icebp
mov
shll
cld
jecxz
add
lock
test
test
inc
inc
mov
jp
lds
mov
pop
int
lea
aam
cmpsl
pop
jle
daa
dec
fsubrs
iret
cmp
pop
inc
fiadds
dec
scas
shlb
sbbb
cmp
pop
dec
out
int
enter
scas
into
push
outsb
test
cmpsl
dec
xchg
sahf
adc
jae
stos
adc
xchg
stc
frstpm(287
popa
out
add
out
and
mov
sub
cmpsb
or
in
mov
jnp
mov
lods
jno
pop
xor
addb
dec
xor
fnstsw
sbb
mov
inc
xchg
push
mov
jge
into
orl
dec
lea
cmp
jp
cltd
mov
cmp
pop
cmp
out
dec
pop
repz
test
pop
and
push
movsl
mov
ret
popa
stos
add
mov
mov
pop
sbb
lods
std
ja
test
imulb
xor
movsb
cmpsb
xchg
mov
cmp
push
ja
xchg
popf
xor
mov
movsl
add
mov
xchg
adc
clc
xchg
adc
xchg
inc
ret
or
cs
pop
adc
mov
aam
sahf
xor
es
bound
mov
cwtl
xor
dec
mov
out
ffree
fs
mov
test
into
pop
mov
jp
sbb
xor
shrl
jecxz
testl
mov
push
and
gs
rorb
mov
lds
mov
mov
sub
fadd
xor
dec
push
xlat
movsb
and
test
into
lods
les
icebp
xlat
cmp
mov
dec
adc
adc
jecxz
fidivl
adc
js
cltd
pop
adc
mov
adc
sbb
xchg
fstl
addl
mov
insl
dec
mov
cld
call
cmp
mov
es
popf
push
or
je
daa
xor
imul
cmp
sub
addr16
scas
movsl
sbbl
add
pop
lods
pop
sbb
dec
dec
mov
out
xor
xor
fdivrl
mov
and
jecxz
jb
jle
lcall
cwtl
stos
sbb
mov
arpl
push
sbb
xor
sbb
popf
jmp
movsl
sti
mov
jl
mov
stos
test
cmp
into
outsb
ja
jmp
push
int3
in
fists
jne
or
les
adc
xchg
ss
mov
rcrb
std
lret
adc
xor
mov
xlat
shl
int3
cld
add
cmp
cmp
cmc
add
sbb
addb
mov
mov
negb
outsl
nop
sarb
jmp
xor
inc
mov
rolb
xor
fdivs
mov
movsb
dec
dec
aas
mov
jbe
js
ljmp
scas
mov
dec
xchg
cmpl
lea
rclb
inc
leave
or
jo
mov
mov
push
cwtl
add
jl
sti
rorb
insb
rclb
mov
leave
movsl
cmpsl
aam
and
stc
aaa
sti
cltd
push
nop
lret
insb
gs
test
mov
sub
mov
pushl
lcall
mov
aaa
inc
mov
lock
inc
or
mov
mov
outsb
lods
mov
jle
xchg
push
cwtl
arpl
mov
mov
inc
insl
sbbb
and
xor
sbbl
mov
push
test
pushl
xor
fsubr
sub
out
jae
out
jb
or
out
mov
jo
call
outsl
testb
inc
call
xor
mov
popf
push
movsb
pop
hlt
adc
push
or
sbb
mov
or
sub
arpl
inc
sbb
sbb
cmp
cmp
mov
push
push
cli
sbb
sbb
push
pop
je
test
jge
ret
jmp
imul
arpl
mov
jmp
into
add
push
dec
fcomps
jns
pop
cmp
jmp
xchg
cli
pushf
mov
fistl
insl
xchg
mov
ss
inc
dec
jo
jecxz
or
into
addb
pop
sbb
subl
pop
sti
push
loope
shll
cmp
inc
ja
in
adc
dec
jbe
cmp
and
int3
xorl
fisubs
sbb
lret
aad
mov
std
shll
add
xchg
push
fsubs
icebp
in
mov
xlat
aas
ret
mov
nop
repz
lret
fcoml
mov
je
inc
xor
or
rorb
stos
cld
push
jg
test
push
xor
jge
imul
xlat
pop
and
lret
pushf
out
lret
in
mov
adc
jle
int
xchg
cmp
imul
xor
lret
in
jmp
xchg
les
pop
mov
sbb
inc
jecxz
push
arpl
shlb
lock
jae
mov
ficompl
outsb
push
andb
push
std
sub
or
sbb
insl
or
js
xchg
adc
xchg
into
jns
jo
jb
and
add
loope
and
pop
sbb
pop
loop
out
sub
ljmp
pop
push
sbb
je
imul
sub
call
lea
adc
mov
dec
pop
jge
loop
sub
inc
jb
or
xchg
jne
jl
inc
pushfw
stc
outsb
inc
mov
mov
js
in
jg
enter
scas
mov
adc
lea
movsl
fmul
imul
adc
das
test
rcll
add
mov
scas
mov
movsb
scas
test
fsubrl
fcmovnu
cmp
dec
jne
push
sub
addr16
les
jecxz
mov
mov
mov
in
xlat
xchg
movsb
mov
xchg
cmc
adc
in
xchg
movsw
mov
icebp
pop
mov
aas
lock
lods
out
cmpsl
jmp
xchg
adc
sbb
xchg
pop
cld
adc
mov
jnp
mov
add
mov
fisubl
jo
push
lods
rcll
ljmp
fs
inc
enter
jb
aad
add
pop
nop
dec
mov
aam
jns
or
xchg
adc
in
dec
and
push
int
pop
mov
stos
sbbb
sub
pop
xchg
and
int3
dec
lahf
repz
fcoms
sbb
sbb
aam
mov
cmpsl
sbb
mov
mov
sbbl
clc
das
cmc
or
xor
dec
inc
leave
std
or
jl
or
jmp
fdivrs
push
xorb
jmp
push
jbe
repz
lods
mov
pop
pop
mov
xchg
loope
and
subb
sbb
sahf
sub
mov
lock
sub
aaa
icebp
adc
sbb
lods
adc
dec
in
dec
ljmp
mov
mov
xchg
xlat
bound
cmp
fcoml
push
loope
and
sub
adc
shlb
sti
jno
pusha
xchg
mov
gs
aas
xchg
ja
std
pop
out
lahf
mov
xchg
stos
push
dec
ja
hlt
xor
in
in
std
pop
add
jnp
jge
movsl
rorl
or
in
outsb
ret
pop
add
mov
mov
push
popa
sub
cmp
sbb
mov
add
adc
sbb
push
xchg
rorb
out
mov
fadds
mov
and
inc
in
fnstcw
fdivrl
mov
outsb
addr16
pusha
sub
mov
aas
dec
das
hlt
popa
jno
sub
pop
ret
testl
je
jge
andb
mov
or
iret
cmp
test
push
enter
jmp
icebp
ja
hlt
ds
call
imul
nop
aas
xchg
adc
or
jns
xchg
xchg
xchg
add
leave
lods
sbb
mov
push
add
into
dec
leave
push
fdivrs
ja
jmp
push
and
jl
and
fisttpll
inc
or
or
icebp
jg
xchg
cs
sbb
xchg
insl
xor
test
jp
or
scas
clc
leave
and
jne
inc
dec
clc
lahf
aad
shlb
xchg
imul
inc
subl
cmp
pmulhw
cmp
pop
inc
cmp
icebp
gs
xchg
popa
ret
stc
addb
and
jno
es
xchg
mov
xchg
iret
pushf
cmp
pusha
adc
clc
fwait
mov
ss
dec
or
cs
cmpsl
sahf
pop
scas
sbb
lods
jmp
xchg
das
or
sub
ss
ret
jge
scas
das
jbe
data16
idivl
cmc
out
sbb
lret
push
fdiv
icebp
sbb
cs
cmp
xchg
inc
jg
in
in
sti
shll
movb
jge
cwtl
xchg
jbe
out
je
insb
inc
xlat
inc
ror
cmpsb
lock
xor
leave
out
mov
jo
sub
and
out
mov
fisubrs
pop
sub
scas
dec
outsl
fsubrs
pop
test
insb
dec
or
adc
lret
push
inc
imul
scas
adc
cmp
or
arpl
lods
pop
or
or
sahf
test
lea
jnp
nop
cmpsb
imul
jbe
pop
je
fisubrl
sbb
push
ficomps
add
and
jns
sub
sbb
or
push
cld
mov
inc
jae
imul
rclb
xchg
dec
sub
cmp
mov
test
mov
das
rcr
sub
mov
clc
add
or
adc
mov
mov
in
mov
movsl
jl
xlat
loop
add
or
cwtl
push
je
loope
ss
dec
xchg
mov
shrb
mov
addr16
ret
inc
leave
pop
ss
into
int
ret
jno
and
ret
cltd
push
int3
loop
leave
xor
push
inc
jg
sahf
push
jb
gs
rcr
jp
and
jno
jecxz
mov
mov
in
cmpl
cmp
and
sub
jp
inc
int3
dec
test
mov
jg
fs
lods
push
pop
cltd
mov
repnz
sbb
or
nop
fs
adc
frstor
dec
into
mov
icebp
rcl
push
dec
loopne
jp
adc
jle
repnz
scas
inc
das
add
pop
inc
or
adc
enter
fcomps
in
pusha
adc
cmp
add
cwtl
inc
pusha
lds
popa
pop
push
jb
aaa
ss
movb
shl
push
and
mov
les
push
paddsw
addr16
cltd
jns
iret
and
adc
mov
inc
lret
xchg
add
pop
scas
mov
add
insb
dec
inc
insl
loope
jb
leave
das
adc
cmpsl
hlt
and
rcrl
movsl
inc
ret
cmp
cltd
rol
call
out
lods
cmp
and
cmp
adc
dec
sbb
sahf
mov
out
pop
push
call
js
sbb
mov
dec
xchg
inc
inc
cmpb
push
imulb
pop
sbb
mov
cld
aam
add
stos
mov
scas
fs
stos
jbe
dec
cld
adc
in
cld
repnz
push
arpl
push
and
jae
inc
lcall
popf
dec
mov
jecxz
les
stc
sbb
ljmp
fiadds
mov
fidivrs
cmc
xlat
xor
nop
push
and
and
out
movsl
cmpsb
inc
lock
mov
sahf
mov
xchg
in
test
jmp
push
popf
pop
adcl
aad
scas
idivl
scas
pop
push
mov
pushf
imul
xchg
lds
psrlq
mov
inc
mov
dec
lret
cmp
xchg
lcall
popf
add
in
aam
and
xor
mov
jbe
xor
outsl
pop
sub
jo
or
test
mov
adc
es
push
sub
jnp
into
cmp
stc
out
cmpsb
pop
cmp
outsl
test
aas
nop
data16
pop
inc
je
xchg
clc
scas
mov
jno
mov
jbe
adc
mov
mov
cmpsl
into
int
fisubrs
fadd
test
ss
jae
std
cmp
out
jmp
jb
fadd
sbb
lds
rcrb
maxps
dec
mov
aas
jmp
lea
bound
subl
cmpsb
popf
sbb
jmp
mov
pop
imul
lret
inc
aaa
and
xor
int
pop
inc
fstps
or
add
lods
rcl
lahf
fldt
fidivrl
ret
mov
out
subb
xchg
iret
jne
pusha
cs
and
jo
mov
lahf
loop
cmpsl
mov
ss
ss
pop
subb
dec
leave
push
imul
shll
pop
das
loope
sub
xor
cmc
xchg
pop
adc
cmp
mov
xchg
sbb
insl
dec
out
pop
ss
std
jg
outsb
jnp
stc
fdivr
int
pop
and
dec
jno
bswap
cltd
cs
sbb
adc
sub
stos
sbb
bound
jle
and
gs
mov
iret
sub
inc
imul
jecxz
mov
lcall
inc
inc
imul
fimull
sbb
test
mov
std
jge
pushf
pushf
testl
bound
addr16
adc
jae
inc
ja
inc
push
sub
jae
faddp
stc
mov
jmp
ret
jbe
adc
mov
add
inc
push
lret
fs
mov
cmp
sub
out
push
or
jnp
mov
xor
jb
ret
dec
call
fcmovbe
or
mov
mov
cmp
dec
jbe
inc
mov
sub
pusha
jle
addr16
mov
jecxz
xor
push
mov
and
fsubrs
sub
push
mov
cmp
xchg
sbb
xor
fldcw
sbb
notb
stos
shlb
mov
sub
data16
lahf
mov
sub
mov
sbb
xchg
lods
lods
in
mov
xchg
xor
jecxz
repz
iret
mov
adc
enter
jne
inc
test
pop
lahf
lret
jo
sub
mov
xlat
vmread
aad
sahf
int3
jbe
std
sarl
stc
and
pusha
test
xchg
mov
cwtl
push
rorb
xor
cmp
pushf
insb
hlt
aas
test
repz
inc
xor
push
lods
and
clc
adc
jge
adc
aaa
out
shl
or
ds
aam
addr16
sbb
mov
or
shll
arpl
pop
push
mov
xchg
jg
imul
fdivrp
sbb
adc
push
cs
xchg
jecxz
mov
fcomi
movsl
sbb
xor
popa
and
out
lods
imul
or
add
push
mov
sub
lods
push
stc
or
jecxz
loopne
xchg
sbb
push
outsl
mov
push
jle
push
cmpsb
out
pop
andb
fisttpl
and
imul
hlt
fcoms
inc
daa
jns
pop
push
mov
jg
mov
int3
inc
mov
push
jle
ficoml
or
mov
repz
or
dec
inc
dec
xchg
fcoms
pop
mov
cmp
sbb
repnz
add
popa
out
out
lea
sub
das
or
push
inc
adc
xchg
aaa
mov
add
cmc
jp
xchg
dec
stos
ret
add
pop
cli
jns
dec
sub
lfs
dec
pop
icebp
xchg
imul
mov
pop
push
mov
out
xor
arpl
pop
push
dec
ds
sbb
push
pop
add
hlt
add
mov
mov
daa
sbb
xor
aad
cwtl
xchg
xor
mov
decl
mov
int
addr16
mov
and
in
mov
adc
clc
xchg
in
out
js
in
sub
shll
add
push
lcall
lcall
cld
repz
xchg
or
cltd
cwtl
into
xchg
sub
leave
jb
pushf
inc
adc
push
push
pop
sub
and
xchg
cltd
xor
cli
iret
cmpsb
push
movsl
cmp
push
scas
fcmovnb
jb
or
rorl
xchg
pop
mov
pop
outsb
cmp
add
fs
add
push
scas
fildll
test
or
in
xor
mov
sahf
pop
aaa
pop
data16
in
aad
add
jns
call
andl
mov
mov
dec
xor
add
or
sub
call
rcl
dec
push
xchg
jecxz
mov
nop
cmpsb
cmp
mov
add
daa
call
xchg
push
xchg
rcrl
mov
mov
cmp
enter
dec
je
dec
lods
jg
xor
adc
pop
sub
lcall
rorb
mov
addb
popf
and
push
sbb
mov
stos
nop
insb
push
ds
je
cmp
jl
mov
jg
fwait
js
push
xchg
outsl
sub
mov
adcl
pop
nop
fisubrl
fs
movsb
mov
jl
push
test
sahf
or
mov
xor
xchg
scas
pusha
subb
movsl
push
mov
jg
out
jecxz
js
subl
mov
dec
fdivrs
shlb
mov
cmp
ficomps
sahf
fs
cmc
loop
sti
out
cmp
stc
mov
dec
xlat
hlt
and
xchg
mov
push
aas
jnp
rolb
jne
cld
jg
leave
arpl
rcr
jl
sti
out
fsubs
outsl
mov
sbb
ja
jbe
add
adc
inc
cmp
inc
inc
cmp
ffree
or
jne
in
inc
mov
jbe
mov
icebp
dec
cmp
enter
in
inc
cmc
mov
jp
cmc
pop
js
shr
in
cmc
push
insb
pop
pop
popa
lds
sub
mov
scas
mov
mov
es
mov
sub
jge
fwait
jo
mov
bound
adc
pop
cltd
cmc
dec
cld
pop
pop
loope
mov
es
pop
test
js
xchg
or
daa
stc
push
out
cmpsb
mov
divl
fs
jmp
and
pop
ret
adc
push
dec
lods
aas
fwait
mov
in
jmp
ficoml
add
cld
jns
xlat
dec
das
cmc
lahf
push
testl
dec
cmp
iret
popf
mov
sbb
xchg
fnop
clc
nop
ss
jmp
jp
mov
sbb
cltd
hlt
in
mov
xor
dec
xchg
test
jbe
mov
jno
mov
jmp
jns
mov
rorl
push
jno
in
mov
iret
aaa
mov
or
ja
jl
in
and
or
xchg
jecxz
in
scas
subl
jge
arpl
inc
pop
mov
and
scas
push
ljmp
jecxz
push
inc
cmc
add
pop
dec
sarl
pop
xor
les
xor
push
xchg
lods
rorl
inc
jb
mov
notb
out
scas
and
sbb
xor
mov
icebp
jle
inc
push
lea
sub
out
popf
scas
inc
xchg
arpl
jne
shlb
ror
stos
cltd
sti
cmp
pop
dec
inc
xchg
imul
das
pop
in
add
add
push
test
sbb
stos
pop
dec
adc
fwait
cs
fnstcw
leave
lea
add
sbb
popa
xor
daa
inc
lods
in
xor
mov
dec
je
add
xor
cmp
jge
fimuls
clc
lret
shll
cmp
push
xor
inc
inc
idivb
fs
pop
outsb
cld
shlb
andl
shlb
xchg
inc
jl
inc
cmpsb
jns
pushw
out
push
shlb
lods
push
fwait
daa
test
cli
or
dec
dec
sub
in
xchg
ficoml
jle
shll
sub
cmp
mov
push
stos
lcall
in
pop
mov
inc
lods
les
xchg
fcoms
cltd
jns
add
stos
mov
out
scas
add
jl
inc
xchg
jae
xchg
adc
pop
mov
test
push
cs
adc
imul
into
fimull
iret
imul
imul
int3
test
push
aas
std
sbb
or
dec
mov
pop
imul
popf
dec
mov
or
popf
pop
out
mov
add
mov
jmp
out
iret
stos
jmp
pop
das
stos
leave
adc
jle
and
cmc
xchg
imulb
mov
xor
xchg
out
pop
sub
fs
inc
sub
fildll
xor
xor
es
cmp
add
popf
mov
adc
jecxz
int3
or
mov
loopne
pextrw
in
xor
inc
dec
imul
lock
clc
mov
insl
repz
ror
shll
inc
push
out
cld
or
bswap
sahf
cmp
push
cmpsb
movb
je
sbb
inc
adc
rcrb
stos
add
mov
clc
mov
mov
addb
or
aaa
scas
icebp
aaa
add
imulb
lret
loope
or
adc
std
jns
sub
mov
iret
or
push
es
add
sub
and
dec
push
jbe
pop
fcmovnb
cwtl
pop
xchg
inc
mov
mov
hlt
sub
outsb
ret
mov
cmp
push
shlb
mov
cmp
testl
cmp
add
sbb
pop
or
push
test
adc
popa
bswap
jo
and
pop
cld
rorb
lret
pop
addr16
mov
cmp
sbb
aaa
xor
test
leave
mov
ret
jne
pop
sub
cmp
jo
cltd
or
or
out
push
out
and
rcl
daa
les
mov
out
test
push
jg
loopne
stos
inc
dec
push
cmp
loopne
add
clc
lock
push
jns
in
push
in
and
add
aad
fildl
push
sahf
inc
mull
xor
lahf
push
xchg
push
add
subl
add
push
mov
lahf
popa
jmp
xlat
pop
xchg
mov
inc
lods
roll
mov
sub
pop
dec
dec
push
sti
das
push
cwtl
repz
sahf
fstpt
push
test
ss
mov
mov
jns
in
jae
jge
addr16
enter
test
and
ficoml
push
fsubs
repnz
lods
cs
xchg
in
cmp
test
movsl
push
mov
pop
in
enter
in
mov
cmp
dec
ret
loope
add
mov
inc
pop
shll
mov
stos
inc
dec
jle
add
and
rolb
stos
scas
and
sbb
adc
imulb
and
fimull
shrl
leave
sbb
dec
cwtl
fwait
adc
mov
sbb
mov
adc
dec
mov
pop
and
nop
pop
add
mov
loop
inc
sbb
add
xchg
inc
mov
negb
out
inc
inc
add
jl
sub
les
mov
jae
imul
cltd
sahf
push
ss
inc
mov
adc
and
stos
in
pop
xor
mov
jecxz
push
mov
dec
dec
mov
xchg
nop
inc
inc
mov
jns
push
xchg
test
jp
mov
or
repnz
jnp
inc
mov
imul
test
fbld
daa
push
jp
sub
and
mov
sub
add
int
andb
movsl
mov
add
jle
or
cmp
mulb
ja
mov
int
mov
lds
adc
adc
sahf
lea
xlat
mov
sub
jo
gs
fldenv
jle
jno
dec
das
sub
sbb
fstpt
xchg
xchg
das
push
in
repnz
cwtl
out
cli
push
or
mov
cs
dec
mov
push
lock
or
cmp
sub
jmp
aas
xchg
mov
xor
sbb
out
fsts
xchg
and
insb
add
rclb
push
stos
push
push
lock
xchg
insl
ss
push
cmp
mov
cwtl
dec
ret
dec
in
daa
adc
imul
loopne
lahf
in
adc
fcoms
shrl
je
inc
fadd
adc
adc
jl
mov
mov
mov
xchg
inc
xor
pop
ss
xchg
jo
test
sti
int
sbb
pop
arpl
aam
cli
into
adc
mov
xor
cmp
adc
and
add
in
cmp
cmp
push
xor
jnp
popf
clc
sbb
inc
pushf
mov
dec
jle
orb
repnz
mov
test
xor
cmp
arpl
stc
fisubrs
mov
or
je
adc
cmc
pop
test
pop
lret
sub
sub
inc
pop
or
les
lods
int3
sub
cmp
mov
ljmp
push
and
push
mov
dec
and
pop
mov
pop
and
mov
push
jmp
pop
stos
orl
ljmp
cli
in
data16
ljmp
hlt
cmp
adc
call
aaa
cmc
outsl
aam
movsl
mov
fidivl
push
testb
arpl
inc
cmpsl
fiaddl
push
pushf
mov
cmp
in
cmp
mov
sbb
imul
and
push
add
out
and
and
dec
or
inc
adc
shrl
fisubs
jl
pop
push
xchg
add
call
jle
dec
mov
xor
add
push
in
mov
sbb
pop
sbb
sti
cltd
cmpb
xchg
jmp
shll
mov
loopne
test
lret
int
mov
cltd
das
imul
sub
fists
pop
sbb
adc
mov
cmpb
sbb
jge
dec
mov
sub
repz
aad
push
mov
jo
and
mov
add
bnd
adc
jmp
cld
mov
inc
sub
gs
or
rolb
je
fwait
in
mov
and
add
mov
int
clc
dec
and
inc
cmp
daa
sbb
cs
mov
jg
or
cmp
pop
insl
outsl
pop
fcmovbe
aam
dec
outsl
dec
dec
jp
pop
dec
pushl
xlat
aaa
mov
lahf
sbb
mov
imul
cmp
xorb
sub
ljmp
sub
repz
int3
lea
in
sbb
aas
pop
push
aam
adc
mov
add
xor
lret
inc
sbbb
fucomp
or
pusha
cmpsb
imul
adc
shr
xor
gs
sub
cmpsb
ret
mov
sbb
mov
arpl
daa
mov
xor
inc
dec
cld
push
dec
push
xor
jle
dec
leave
pushw
outsl
sbb
or
fidivrs
dec
int
jo
xorl
jge
sbb
mov
pop
add
adc
pusha
mov
mov
cmp
xor
sbb
aam
aas
popfw
push
push
fs
push
dec
pop
ds
mov
pop
shll
xor
dec
sub
in
jns
inc
inc
cmpsl
ret
mov
push
push
lcall
loope
mov
enter
xchg
test
push
cmpsl
push
push
icebp
lcall
mov
ffree
rorb
popf
rep
pop
push
flds
sbb
addr16
push
cmpsb
pop
fnstenv
sti
xchg
fisttps
push
sub
push
icebp
inc
jp
mov
js
or
cld
cmp
mov
cmp
pop
ret
test
jge
enter
in
mov
and
repnz
xlat
sbb
push
cmp
scas
push
jns
or
das
bnd
add
push
mov
xor
push
push
push
popa
nop
sbb
mov
jmp
dec
push
adc
fisubs
std
movsb
sbbb
dec
mov
fnstsw
jmp
dec
add
or
jb
faddl
outsl
je
cmpsb
sub
pushl
mov
mov
pop
popf
mov
jnp
std
push
adc
push
push
cmpsl
push
fdivl
cmpsl
rolb
adc
jg
or
lahf
pop
popf
cld
add
fdivl
aaa
cmpb
cmp
add
popa
enter
in
cs
out
mov
mov
jo,pt
and
rcll
outsl
lahf
dec
xor
sbb
push
xchg
mov
fidivs
adc
push
xchg
pop
push
fmuls
xor
repnz
add
inc
sahf
lea
cmp
jp
adc
dec
es
rolb
shlb
stos
test
pop
adc
insb
xchg
xchg
and
pop
ljmp
adc
cmp
filds
rorb
xor
into
fadds
cmp
pop
cmp
int3
fdivrs
sub
cld
inc
jecxz
xor
sub
add
enter
shrb
in
dec
daa
push
sub
loope
jo
pusha
mov
xchg
dec
outsl
xchg
jne
mov
int3
jl
inc
aad
imul
aad
test
aas
jae
dec
sub
and
js
fists
js
mov
dec
jns
into
jg
cli
es
ret
xchg
mov
pop
loop
dec
loop
sbb
fs
scas
pop
sti
push
and
mov
daa
cmp
ja
ljmp
mov
sar
jg
mov
xor
ljmp
int3
mov
pushf
xchg
into
mov
cmpsb
xchg
repnz
xorl
adc
pop
inc
daa
dec
es
add
sahf
push
inc
scas
leave
add
sbb
xchg
xrelease
mov
sub
ljmp
mov
hlt
dec
mov
test
sahf
adcl
add
jle
enter
andb
jle
frstor
les
pop
dec
rolb
cltd
mov
mov
gs
or
in
es
push
pop
jno
shll
cli
push
mov
jle
and
pop
or
jge
sub
jae
cli
les
pop
nop
xchg
ds
repz
mov
xchg
push
push
xchg
test
mov
adc
mov
data16
dec
pop
dec
push
rcll
add
mov
arpl
ds
sbb
adc
je
cltd
cld
outsl
sbb
push
cmp
pop
aas
frstor
arpl
dec
loop
push
sahf
stc
add
in
cmp
and
mov
addr16
enter
push
lea
jg
js
inc
xor
xchg
lods
cltd
mov
jb
sub
mov
add
in
inc
hlt
push
mov
sbb
xor
mov
ja
jle
bt
jg
fistpl
push
dec
fldenv
cmp
jnp
jb
lret
dec
cmpsb
outsl
inc
mov
hlt
scas
outsl
imul
push
int3
xor
mov
xor
testb
sub
sub
or
mov
mov
sbb
movsb
mov
repz
cltd
push
sbb
and
outsl
or
sbb
je
enter
jno
cmpsl
dec
pop
xchg
push
pop
in
push
xor
mov
sbb
dec
mov
or
xor
js
int
test
xor
and
sahf
xor
ja
mov
ja
mov
jle
int
push
jmp
mov
je
stos
mov
fnstcw
jb
hlt
adc
ja
icebp
repnz
add
pop
mov
mov
sbb
out
xor
lods
cld
jmp
jle
sbb
and
add
bound
lcall
nop
int3
push
xchg
dec
or
jae
mov
inc
inc
int3
shlb
shll
test
inc
adcl
js
mov
xor
jae
fistpl
in
int
fcomip
xchg
xor
xchg
nop
bound
cld
and
and
shll
mov
fldcw
jnp
mov
inc
sub
test
adc
call
popa
inc
mov
sahf
leave
ja
scas
int
stos
mov
push
xor
add
jmp
lock
adc
xlat
mov
idivl
stos
xchg
jp
scas
sbb
or
fucom
das
jb
mov
jge
addr16
jmp
ret
jne
xor
mov
cmp
sub
pop
lock
cltd
out
mov
stos
and
pop
add
xor
inc
xor
mov
push
sbb
ds
push
cmp
aad
mov
cld
repnz
and
mov
imul
inc
lret
sbb
addr16
dec
out
fwait
clc
dec
pop
enter
sti
movsb
push
insl
out
shlb
add
mov
mov
xor
push
mov
mov
rcr
adc
push
mov
pop
in
push
push
into
test
pop
stc
repz
repz
pushf
lret
push
cmp
pop
ljmp
mov
movsl
or
sbb
insb
repnz
sbb
add
fldenv
lock
fistps
pop
xor
aam
mov
int3
cmc
mov
xlat
sbb
lret
in
jae
xor
jmp
dec
jo
xor
push
fwait
push
gs
mov
in
shlb
xlat
adc
mov
stos
xchg
cmpb
add
adc
lcall
andb
fwait
adc
repz
add
mov
addr16
mov
js,pt
and
int3
insl
xchg
cmp
stc
cmp
push
xorl
jp
aam
cmp
and
jmp
inc
jb
in
fidivrs
xchg
imul
int
push
in
mov
cld
out
jo
hlt
aaa
not
addl
ret
dec
mov
jmp
xor
daa
xor
out
inc
inc
mov
xlat
mov
mov
mov
mov
push
adc
jne
gs
int3
mov
xchg
test
mov
clc
test
test
sub
add
out
outsb
outsl
ds
sub
jb
out
fwait
and
push
lea
out
adc
sub
out
and
mov
cmpsb
imul
mov
addl
push
imul
inc
insb
jp
xchg
cmp
cmp
adc
pushf
and
sahf
cmp
inc
xchg
in
push
fs
movsb
leave
sbb
adc
nop
xlat
mov
gs
and
out
push
in
mov
arpl
mov
xchg
scas
mov
sti
mov
pop
or
mov
fstps
mov
icebp
ss
mov
jae
cmp
sbb
sub
ret
push
inc
push
or
insb
xchg
add
ja
fistps
push
mov
push
xchg
in
or
sub
ja
int
jns
xchg
sbb
push
and
mov
bound
push
adc
lods
iret
and
jne
sbb
inc
xor
ljmp
ljmp
inc
push
fucom
cmp
rcl
mov
out
cwtl
call
xor
out
jg
test
pop
push
jae
movsb
movsb
lods
cwtl
ljmp
adc
push
call
loopne
lods
cmp
sub
inc
dec
lcall
and
mov
jbe
push
insb
mov
rcll
shll
enter
pop
mov
les
xor
out
mov
add
dec
loopne
gs
push
pop
pop
rorb
mov
jne
in
lahf
mov
jp
repnz
jno
enter
push
in
and
lods
dec
or
sbbl
adcl
xchg
push
mov
mov
xchg
roll
test
out
nop
scas
adc
mov
pop
into
cs
jp
or
pop
rcr
push
sbb
decl
xorb
and
xchg
cltd
sti
add
movsb
sarl
fimuls
aaa
mov
arpl
xchg
dec
es
testb
in
loopne
enter
jnp
je
pop
add
sti
sahf
ja
adc
aaa
test
pushf
push
inc
in
out
pusha
popl
test
shll
lret
adc
lods
cs
aas
add
pop
call
popf
stos
mov
xor
testb
loop
mov
adc
das
fadd
jno
shr
out
sbb
adc
fildl
jo
jmp
and
insl
ds
dec
xchg
scas
movsl
mov
adc
or
add
push
loop
scas
add
inc
xlat
in
out
or
or
pushf
jecxz
push
cmp
mov
iret
xchg
mov
inc
jnp
sti
pushf
fs
inc
les
jo
dec
mov
and
adc
add
sbb
lea
bound
xchg
icebp
mov
mov
push
test
shl
mov
stc
sub
int3
add
repz
int3
cmp
int
pop
sbb
inc
cmp
or
repz
lods
lds
in
xor
pop
out
iret
push
shlb
les
pushf
clc
notl
sbb
pop
movl
jb
mov
je
scas
aam
mov
or
push
adc
push
dec
xchg
cli
and
rorb
outsl
xorb
imul
lds
idivl
aas
mov
fisttps
and
push
cltd
ja
sbb
lock
ss
outsb
inc
jns
dec
sbb
pop
push
jl
aas
add
xchg
ror
mov
shr
jb
sbb
bound
dec
dec
gs
test
cs
out
cltd
lock
decb
es
pop
jnp
rcrb
adc
mov
xchg
dec
jne
fisttpl
jbe
xchg
scas
or
dec
and
int3
lret
mov
adc
ret
stos
test
iret
arpl
push
inc
gs
mov
sub
pushf
pop
sub
cli
inc
jnp
into
out
dec
fadd
loop
enter
cli
sub
xchg
add
mov
cmp
sarl
and
jbe
es
test
mov
add
inc
mov
leave
xor
mov
out
sbb
sbb
inc
int3
sbb
jp
jbe
iret
data16
jmp
cmc
and
aas
pop
nop
add
jecxz
xchg
rolb
adc
clc
mov
xor
es
add
lahf
inc
ljmp
cmpl
std
enter
xchg
call
mov
cmpl
arpl
inc
in
or
sub
adc
mov
mov
les
and
fs
out
inc
adc
addr16
in
push
daa
sbb
jp
dec
adc
fldenv
loope
fidivrs
mov
push
push
outsl
insb
cmpsb
inc
jb
add
les
inc
hlt
aaa
pop
popf
mov
lcall
popf
pop
out
mov
cmp
stos
adc
nop
add
fwait
or
mov
sahf
pop
jp
int3
push
nop
sbb
insl
mov
jmp
inc
mov
cmp
nop
scas
insl
addr16
add
test
add
je
loop
leave
inc
cs
das
push
push
mov
imul
xchg
minps
lahf
lcall
push
cli
andb
fimuls
es
in
fwait
movl
mov
add
movsb
cmp
push
cmc
mov
ja
xor
mov
out
mov
jg
mov
cmp
ja
ja
sub
push
test
lods
inc
pop
add
shlb
lock
cli
or
lods
dec
lcall
dec
cmpsl
add
pop
out
es
fstpl
repnz
mov
inc
xchg
xor
jg
pop
adc
fistl
add
or
dec
icebp
push
testl
pop
xchg
shlb
xlat
sbb
cli
mov
mov
xor
mov
cmc
pusha
mov
mov
push
movsb
fstpt
mov
or
cmpsl
mov
cld
mov
movb
sub
cmpsl
call
cmpsl
adc
sbb
cmc
filds
bound
and
les
orl
sbb
lea
test
or
stc
outsl
push
ret
iret
xchg
addr16
les
mov
push
mov
ficomps
repz
sub
int
xchg
cmp
sub
cmp
outsb
cwtl
out
xchg
es
inc
and
lret
insl
xor
loope
xchg
xor
mov
mov
in
bound
lahf
add
inc
xchg
sub
rcr
mov
int
stos
sahf
mov
cmpb
xchg
stos
cmp
stos
mov
mov
aas
cltd
pop
repz
pop
insb
insl
adc
popf
mov
cmp
mov
scas
sbb
movsb
push
dec
rolb
shrl
jae
xor
cmp
or
push
mov
and
jo
mov
pop
sarb
std
xor
sub
lea
xor
gs
in
mov
lea
xchg
call
push
aad
ret
test
stc
lret
cmp
push
or
inc
jne
push
sub
mov
cmp
adc
xchg
rcrl
mov
inc
push
or
adc
or
jb
cli
mov
cltd
cli
inc
mull
data16
push
jmp
das
hlt
stc
add
add
divl
sbb
or
das
ja
mov
sub
sub
mov
xor
gs
cmp
push
and
jge
fsts
test
xchg
sub
enter
lea
jae
xor
rorb
sahf
stc
and
inc
leave
insb
clc
sbb
xchg
scas
stos
int
adc
les
aam
jbe
xlat
insl
sbb
jb
xor
jl
rol
dec
lcall
push
add
pop
mov
inc
push
xor
xchg
loope
bound
add
test
cmp
xchg
popa
insb
fisubrl
fdivrl
cwtl
outsl
ret
hlt
mov
in
jl
mov
mov
mov
jne
dec
push
faddl
jmp
mov
cmp
mov
pop
leave
cmp
mov
repnz
iret
ja
and
jb
mov
in
test
leave
lock
pushf
mov
add
push
dec
outsb
into
mov
jmp
frstor
cmc
fwait
mov
mov
sbb
rclb
and
cmp
js
sti
clc
aam
mov
jne
out
sub
cmpsl
mov
in
dec
lcall
pop
vpsubq
movsb
loop
add
push
pushaw
rcll
inc
subb
cmpsl
jns
and
testl
push
cmpsb
ret
lods
dec
out
pop
in
xchg
xor
cmpsb
cmpsb
mov
xchg
out
cli
loop
mov
cmpsb
inc
repnz
inc
mov
jo
sti
es
pop
imul
imul
cmp
pop
fidivrs
mov
sbb
fiadds
lock
mov
push
push
rorl
imul
inc
xchg
and
test
fs
jp
dec
fmul
data16
or
das
sbb
mov
sub
loop
jae
xchg
int
sbb
push
xchg
insl
repz
lea
dec
ss
xchg
pushf
jae
and
mov
or
aad
dec
movb
jnp
sub
hlt
push
lods
rcrl
dec
and
lcall
mov
out
dec
aad
gs
add
sbb
dec
fmull
lret
jns
je
leave
sarl
pop
jnp
pop
or
out
shr
jo
gs
lcall
jmp
fwait
push
shll
aad
std
ret
pop
mov
subl
sti
sub
arpl
test
out
shll
add
and
jp,pn
jmp
adc
mov
bound
cs
subl
cmp
sbb
iret
xor
pop
push
cld
fisubrl
push
lods
xchg
std
roll
mov
dec
negl
scas
shrl
jae
mov
ficoms
imul
jp
sub
push
insb
stc
pop
daa
pop
fucomi
jb
mov
aad
jecxz
out
in
mov
jbe
mov
pop
sub
pusha
and
mov
add
dec
js
xchg
cmp
cwtl
rcrb
dec
negl
in
movsb
cmpsb
add
pop
in
adc
adc
rcll
and
fmull
pop
test
xchg
sbbl
mov
mov
adc
loop
mov
mov
popa
imul
mov
aas
repz
je
lods
js
out
adc
push
ficoms
mov
fisttps
adc
ja
sbb
cltd
das
or
xchg
and
cmp
outsb
fcmovb
movsb
add
outsl
shl
mov
insb
push
mov
mov
cmp
aad
sbb
xchg
adc
cmp
addl
or
jmp
out
mov
mov
pop
mov
enter
jge
and
aam
mov
mov
mov
mov
in
mov
xchg
adc
outsb
ds
nop
xchg
pop
xchg
jae
insl
mov
pop
inc
mov
inc
add
cmc
xchg
jne
insb
mov
inc
jecxz
enter
adc
mov
mov
fistps
in
cmp
test
cmp
cs
aam
jp
mov
xor
rcl
and
dec
sub
xor
aas
push
push
xor
push
mov
fst
lock
mov
mov
push
das
sbb
mov
test
push
cmpb
sbb
test
pop
or
adc
fisubl
xor
xor
jge
in
sahf
icebp
push
repz
into
mov
mov
mov
ret
rorl
inc
push
aas
mov
sahf
dec
out
adc
mov
dec
jno
mov
ficomps
mov
jae
fwait
dec
jmp
xchg
shrl
mov
insl
mov
jb
push
lcall
loop
mov
add
adc
mov
jo
xor
repz
sbb
imul
mov
pushf
xchg
leave
repnz
sub
pop
xorl
shrb
push
jo
push
cmpsl
sbb
xlat
in
aad
dec
inc
jb
and
out
and
ds
mov
xor
int
sub
jl
cwtl
and
mov
sub
xor
repz
nop
out
sar
sbb
mov
and
jae
sbb
cmp
mov
mov
dec
cmpsb
push
jge
cmp
roll
adc
data16
jne
sub
lret
dec
push
or
dec
dec
jge
shll
or
mov
sub
or
push
lods
jl
cmp
pop
push
andb
inc
lods
scas
cmpsl
cmp
lret
std
imul
push
jno
test
inc
scas
push
pop
testb
maskmovq
push
sub
xchg
mov
add
js
shrl
push
mov
cs
jp
inc
mov
add
into
shll
fnsave
sti
adc
push
cmp
sahf
jg
push
adc
test
ljmp
nopl
sti
jecxz
mov
pop
push
test
xchg
xor
dec
inc
lret
test
mov
fwait
pop
mov
dec
and
jle
fwait
lea
daa
mov
rol
mov
je
xchg
in
xor
jecxz
mov
ret
aas
std
js
adc
ja
or
adc
popf
mov
aas
sbb
xchg
inc
cltd
jbe
dec
jecxz
push
xor
dec
mov
add
or
gs
sub
bswap
call
sbb
getsec
push
mov
push
mov
sbb
cmpsl
sarl
stc
mov
push
sub
sti
xor
outsb
mov
mov
pop
jmp
dec
hlt
cwtl
das
jae
inc
pushf
and
adc
negb
sti
mov
fcomip
inc
cmpsb
fnstenv
cmp
movsb
push
cwtl
mov
pop
ds
cmpb
mov
or
lock
icebp
inc
lock
mov
js
enter
stos
arpl
inc
sub
fwait
aad
or
lcall
stos
mov
fsts
xor
and
fstpl
mov
mov
lret
addr16
aad
loopnew
stos
adc
lods
loop
arpl
fcomps
andl
int
cmp
jno
mov
fisttpl
adc
dec
add
clc
xchg
xor
negb
data16
sbb
test
or
xor
push
frstpm(287
xchg
je
cltd
das
sbb
fcomi
and
mov
test
jae
or
je
addr16
ss
xchg
pop
mov
test
mov
clc
stos
shrl
clc
jbe
pop
aaa
cmpsb
mov
in
push
sbb
pop
fcomp
sbb
inc
cmpsl
or
in
filds
mov
imul
fcomps
test
add
pop
cmpsb
jo
sub
xor
jl
lock
push
xchg
cmp
sub
lcall
inc
lret
push
subb
in
mov
xor
mov
push
stos
mov
sub
ja
ss
loop
aam
mov
jnp
and
jg
jge
repz
nop
scas
subb
and
inc
mov
imul
push
dec
pop
push
test
add
out
shl
xor
js
dec
inc
inc
fildll
mov
gs
add
and
jbe
adc
repz
sarl
adcb
popa
jmp
pop
iret
mov
ffree
aam
jge
mov
ret
adc
and
mov
out
push
jmp
and
xchg
or
and
xor
add
sbb
dec
add
lret
dec
lcall
mov
iret
mov
in
inc
and
and
out
out
insl
mov
adc
push
dec
jno
xor
outsb
mov
movb
mov
sbb
addr16
dec
jp
pop
sub
and
jnp
pusha
call
cmpsb
in
mov
or
push
mov
inc
push
xlat
push
jle
mov
dec
out
repz
int
addr16
fimull
and
jae
inc
dec
insl
pop
push
cmp
inc
mov
pop
pop
inc
pop
pop
cwtl
pop
pop
mov
xor
stos
inc
jp
xor
push
sbb
iret
das
sbb
sbbl
addr16
out
shrl
fistpll
dec
mov
movsl
cmpl
xor
inc
mov
push
cmp
ret
jge
test
fs
cld
outsl
inc
in
clc
pop
xlat
cmp
pop
jmp
jnp
test
jecxz
xor
and
cmpsl
sub
dec
shl
lods
aad
lret
in
jge
jmp
and
fstl
mov
imul
sbb
push
in
loop
cwtl
cmc
xchg
adc
inc
ficompl
les
dec
aad
stos
loopne
mov
in
or
ss
das
rol
jge
push
dec
out
add
insl
outsb
shrb
xchg
or
daa
lret
add
or
ret
push
add
mov
or
lahf
xchg
enter
sub
lea
fisttpl
push
push
inc
lea
push
adc
fmul
cmpsb
cli
or
inc
sub
inc
or
or
scas
out
loopne
rcll
add
fisttpll
dec
cmp
inc
cli
mov
out
aas
cmpb
bnd
lret
push
mov
aam
xchg
icebp
in
push
in
pop
push
cmpsl
arpl
popw
jb
mov
jg
cld
cs
je
xor
mov
jno
mov
hlt
lock
push
and
mov
pcmpeqd
ret
ja
je
mov
out
add
pushf
jg
push
jo
inc
push
adc
lahf
push
loope
adc
scas
out
mov
jo
lahf
sub
cmpsb
mov
pop
lret
pop
dec
enter
jge
fimull
js
icebp
add
enter
and
add
sub
in
out
rcll
sbb
cmpsb
daa
xchg
cltd
sti
imul
mov
and
inc
xchg
mov
xchg
and
sub
cmpsb
mov
xor
out
xlat
das
jge
cltd
aaa
movsb
pop
subl
sbb
mov
or
lea
xchg
adc
fldenv
jae
dec
inc
xchg
mov
inc
insb
loopne
out
mov
ja
jle
mov
je
jmp
fldln2
popf
jo
and
outsl
addr16
and
repz
mov
ja
loopne
enter
out
pop
ret
adc
jg
lcall
push
int3
jne
adc
out
enter
mov
sti
lds
push
jno
loop
and
add
fiadds
movl
mov
adc
int3
das
lds
sub
inc
add
adc
add
fucomip
inc
ja
cmpsl
sarb
jno
enter
xor
mov
cld
mov
scas
jne
xor
sub
jno
aad
movsl
in
mov
pop
ss
test
arpl
hlt
nop
pop
arpl
mov
sub
lret
cs
or
rol
jnp
jl
cmp
or
adc
inc
ret
sahf
rorl
enter
sbb
mov
in
sub
or
mov
shlb
push
jns
in
notb
xor
jl
and
lods
lds
cs
push
scas
repz
adc
cmp
dec
jns
mov
mov
dec
lcall
cmp
leave
dec
sbb
push
or
pop
stos
xlat
call
pop
cld
jnp
lcall
mov
ret
bound
or
out
jge
cmc
dec
mov
mov
je
mull
mov
cmc
mov
mov
sbb
ret
lret
test
dec
int
cmp
push
pop
mov
jecxz,pt
loop
cmpsb
shrb
mov
lret
scas
int
mov
push
jo
cmpsb
xor
cmpsl
fstp
rorb
sbb
cmc
dec
cwtl
and
aaa
movsb
cmpsb
out
shll
inc
mov
jnp
stos
or
popa
jb
dec
mov
pop
jb
mov
mov
arpl
inc
fs
ljmp
icebp
jmp
out
pop
adc
je
and
sbb
push
arpl
ljmp
lds
adc
pop
rcrb
xchg
or
loop
push
pop
imul
mov
xor
js
sbbb
mov
int
add
in
xchg
xor
fiadds
fsub
push
pop
nop
xchg
test
int
xor
daa
sbb
and
enter
iret
dec
dec
cmp
mov
es
jecxz
les
rolb
or
lods
pop
mov
mov
push
aaa
stc
dec
add
ret
stc
xor
sbbl
mov
xchg
stos
mov
ljmp
adcl
cmp
es
lret
ja
repnz
rcrb
and
fbstp
dec
cld
lock
pop
xchg
hlt
popa
loopne
adcb
fsubrs
mov
cmp
cmp
icebp
not
jl
js
movsb
lahf
mov
andl
mov
pop
xchg
fimuls
mov
out
pop
js
out
leave
cmpsb
inc
xchg
clc
mov
inc
dec
sub
jbe
rcl
and
enter
mov
lret
jae
adc
mov
xchg
movsl
fldenv
xor
dec
mov
xor
mov
ja
imul
inc
dec
cmp
lcall
mov
lahf
jmp
addb
and
push
inc
xor
aas
dec
inc
out
mov
add
jg
add
shr
jl
imul
cmp
inc
and
fistpl
inc
repz
in
iret
pop
sub
jb
pop
add
jle
xchg
out
pop
inc
icebp
mulb
imul
cs
jmp
imul
stos
cmp
cmp
inc
ljmp
je
out
push
out
cli
ds
sbb
xchg
out
mov
add
faddp
inc
ret
in
stos
sarb
jle
or
dec
stos
movsb
pop
pusha
dec
addr16
insb
mov
adc
or
or
dec
imul
push
xchg
bound
fs
loop
jecxz
pusha
in
mov
scas
cmpsl
imul
lea
loopne,pt
add
pusha
fiadds
cmp
jle
xchg
pop
lret
sbb
pop
mov
xchg
icebp
data16
dec
stos
ja
push
jge
jbe
push
pop
test
and
adc
ja
stos
fs
lock
fidivrs
in
push
mov
dec
push
sub
hlt
xor
mov
lea
test
jnp
adc
lds
push
aas
sub
pop
loopne
jmp
lods
mul
sbb
push
jb
jae
add
and
jmp
mov
repnz
sbbb
loop
sbb
and
and
clc
push
pusha
dec
fstp
xor
pop
lock
push
sbb
shll
jns
mov
mov
bound
cmc
and
addr16
sbb
mov
hlt
and
xor
adc
and
inc
and
inc
sub
ret
inc
xlat
mov
cmc
pop
test
fwait
aaa
sub
cld
ss
test
or
loope
jecxz
mov
lods
inc
jb
jmp
mov
insl
pop
xor
lahf
and
ja
cmp
imul
sub
stc
mov
adc
out
mov
pop
mov
inc
pop
movhps
out
sbb
xchg
push
pop
test
or
lods
pop
cltd
xchg
fs
outsl
xchg
enter
sub
lret
xor
mov
mov
ljmp
dec
dec
inc
outsl
shlb
sub
xchg
pop
cmp
ljmp
clc
call
andl
adc
cmpsb
cmp
cmp
jle
cmp
sbb
cmpsl
test
pushf
sar
dec
xor
ds
pop
mov
in
or
mov
inc
lock
stos
dec
jg
adc
pop
int3
jmp
std
add
inc
push
movsb
sub
and
es
aaa
outsl
js
pushf
xor
cli
je
imul
adc
pop
leave
pushf
sbb
insl
jl
adc
xchg
repz
add
test
jo
aas
push
mov
hlt
inc
inc
sbbl
push
mov
lret
pop
or
dec
movsl
and
inc
inc
jle
or
lret
push
mov
xor
mov
push
test
dec
jmp
aas
adc
xchg
dec
out
cmp
sahf
sti
or
out
jp
xor
mov
xchg
dec
mov
repnz
rorl
push
movsl
sbb
popf
lods
pop
jge
pop
test
sbb
pop
dec
adc
pop
dec
lahf
xchg
ja
test
adc
sbb
nop
inc
xor
popf
fisubrl
adc
hlt
add
mov
out
adc
add
adc
cwtl
add
std
nop
push
push
mov
jbe
mov
les
mov
or
lret
adc
inc
stc
dec
sub
pop
int
xchg
andb
pop
sar
cmpsb
ret
dec
aas
mov
push
mov
and
pop
push
inc
sbb
mov
test
mov
cld
out
and
out
cli
fadd
xor
sbb
in
sub
shrb
insl
daa
dec
xchg
aad
sti
lret
xor
or
jp
inc
sarl
dec
or
xchg
inc
pop
jl
pop
loopne
push
xor
sbb
mov
frstor
pop
mov
fnstsw
imul
push
leave
inc
jns
adc
jge
ja
xchg
lcall
inc
lods
fcoms
out
xorl
aaa
push
icebp
sbb
rcrb
js
push
sbb
cwtl
int
sti
fdivp
xchg
xchg
adc
adc
or
mov
push
pop
ret
jp
test
lods
std
lods
xchg
pop
les
les
outsb
gs
sub
out
call
mov
aad
ss
aas
fistpll
inc
xchg
out
cmpsb
jp
enter
fmuls
popa
sahf
mov
lds
lcall
sbb
jne
xchg
repz
jge
xchg
sub
push
ret
mov
and
xchg
out
sbb
loopne
add
xor
or
mul
cmp
ret
sub
and
jb
sub
and
lods
mov
cmovns
pop
sbb
inc
sub
cmp
or
adc
mov
dec
int3
or
pushf
divl
pop
or
addr16
mov
adc
repnz
pop
mov
push
mov
or
ja
mov
in
jae
adc
ljmp
adc
sbb
call
insb
imul
popf
je
cmc
and
xchg
or
into
xor
dec
repz
dec
out
push
mov
sbb
mov
sub
mov
stos
mov
fldl
push
adc
jl
mov
inc
in
push
mov
popf
in
add
xchg
aam
or
or
mov
push
xchg
and
addr16
sbb
and
mov
stos
sahf
xor
cmp
hlt
insb
rorb
mov
or
fisubl
jmp
lds
fistpll
rorl
adc
iret
outsb
test
aad
es
mov
lcall
hlt
cmpb
pop
adc
rolb
push
int3
scas
repz
fnstcw
and
mov
or
test
lret
int3
cmp
push
scas
fcompl
adc
inc
rorb
cltd
mov
rorl
add
addr16
mov
fists
fldenv
xor
sbb
imull
pop
inc
add
fdiv
jnp
hlt
fisttpll
jbe
push
icebp
adc
inc
mov
dec
dec
outsl
xchg
arpl
insb
das
in
icebp
cmpsl
cmp
jg
and
or
mov
adc
andl
dec
lea
jl
cmp
lret
out
push
dec
xorb
sbb
mov
cmp
fwait
outsb
or
fmulp
mov
push
int
mov
xor
fwait
jge
mov
ret
xchg
cmp
fstl
andb
mov
sbb
arpl
mov
sbb
dec
inc
cmp
jl
xchg
iret
repz
call
push
loopne
xchg
sti
mov
push
scas
scas
pop
mov
dec
notl
call
hlt
xchg
mov
mov
push
lods
mov
dec
scas
ds
jl
cmp
push
sbb
sbbl
inc
test
jp
es
and
ja
fcomps
test
ss
jmp
icebp
mov
jne
mov
or
push
int3
mov
ja
mov
adc
jnp
dec
dec
jno
imul
mov
sub
and
jmp
pusha
mov
lds
addr16
sub
cwtl
sub
or
push
mov
lods
sub
adc
push
jo
inc
push
scas
stc
imull
dec
cwtl
push
fwait
jb
jo
xorb
sub
mov
inc
sub
rcrb
enter
scas
clc
cmpb
rol
fnstenv
popf
pop
jecxz
sub
push
mov
arpl
xor
or
push
adc
das
es
xchg
pop
fucomi
cwtl
pushf
adc
sub
into
or
inc
out
or
out
jle
mov
pop
pop
shll
repnz
xor
jg
aad
mov
inc
ds
add
adc
inc
or
lret
sub
mov
mov
xchg
fwait
ret
pop
popa
insl
jp
sbb
jle
pop
out
adc
fwait
inc
mov
cmp
cmc
dec
sti
or
fists
mov
push
fldt
scas
jmp
push
and
dec
shll
jo
out
dec
outsb
add
jnp
popa
cmp
and
sarb
adc
jnp
xchg
scas
call
cwtl
mov
jmp
clc
adc
es
jmp
lahf
lods
xchg
in
jmp
cmpsl
lahf
mov
fiadds
mov
xor
repz
mov
je
xor
xor
pop
fwait
mov
sti
insb
daa
rcrb
or
sbb
sti
or
cli
sbb
cmp
or
jb
sbb
ret
das
cld
ret
mov
pop
sbb
push
add
push
movsb
cmp
cmp
sbb
pop
and
jnp
sub
push
adc
inc
push
cli
push
fwait
jo
std
mov
or
mov
push
cmp
sub
mov
inc
ss
cmp
sub
sbb
ret
stos
jne
loop
cltd
or
and
xor
jl
pushf
movsl
sbbl
pushf
xchg
add
std
mov
cwtl
ljmp
enter
aad
test
ss
mov
in
imul
push
fwait
mov
insb
sbb
mov
push
mov
push
mov
lret
fdiv
mov
add
xor
mov
in
inc
pop
outsb
jnp
adc
stc
loope
or
cmpb
inc
jle
inc
mov
add
and
outsb
loopne
sub
rcrb
push
sti
mov
sarl
xchg
repz
ja
dec
call
xor
xchg
sbb
dec
test
push
add
xchg
push
pop
movsb
pop
mov
cli
loop
and
add
repz
cmp
mov
xor
and
or
stc
jne
in
in
insb
sub
pusha
and
fisubrs
cmc
adc
fcom
adc
jns
bound
ret
inc
iret
mov
scas
in
loop
movb
fimull
fiaddl
aam
aam
rcrb
shll
loop
lods
icebp
or
push
push
mov
fcmovbe
xor
ljmp
add
inc
lret
pop
in
mov
outsb
and
xchg
andl
inc
in
adc
scas
jmp
lock
gs
data16
sub
fcom
or
dec
outsb
xor
push
imul
test
rol
mov
shlb
std
std
call
sbb
sarl
pop
mov
adc
outsl
push
daa
lods
lahf
xchg
cmp
pop
mov
fsubs
imul
mov
subl
push
mov
xchg
rolb
mov
stos
arpl
std
and
add
outsl
les
test
sbb
mov
push
mov
stos
jp
pop
and
cmp
inc
or
adc
mov
xchg
icebp
mov
movsb
xlat
dec
cmpb
push
sub
in
dec
mov
xchg
cmpsb
cmpsb
popa
fidivrs
sub
sarl
ja
and
ljmp
mov
pop
and
or
add
sbb
xor
rcrb
mov
xor
inc
xchg
xchg
fdivs
stos
push
loop
pop
push
popa
ljmp
jb
std
subb
orl
xchg
xor
add
mov
fisubrs
mov
incb
cmp
sbb
aad
and
pop
in
dec
int
lds
test
into
ja
add
mov
sub
sub
cld
int3
inc
filds
push
dec
push
into
roll
adcl
pop
dec
inc
pusha
les
aas
jle
sbb
je
and
cmp
xchg
dec
stc
scas
sti
testb
and
mov
or
add
pusha
mov
rorb
pop
fwait
xchg
je
cmp
cltd
or
push
outsb
or
pop
push
in
iret
pop
xorl
test
shlb
mov
xacquire
popa
repz
xor
mov
xor
fadd
jbe
dec
jmp
loopne
enter
jp
ds
mov
stc
and
fidivl
das
je
cltd
mov
cmp
hlt
ss
push
rcrb
repz
daa
divl
cmp
cwtl
call
cmp
jnp
add
outsb
sub
dec
aam
fnsave
jg
xchg
mov
aam
test
inc
std
andb
sbb
out
out
xor
push
cltd
mov
test
movsl
fwait
sub
pop
push
push
cmc
fisubrs
mov
mov
inc
cmpsb
insl
subb
pop
dec
cli
test
and
sub
mov
cmpsl
sbb
fs
in
push
cmp
inc
pop
mov
loop
jb
add
aas
dec
dec
int
les
stc
lock
mov
sahf
cmc
xchg
jbe
out
push
das
insl
xor
sub
jb
shl
and
ljmp
clc
mov
cmp
int3
je
mov
dec
loop
adc
cwtl
out
stos
push
jbe
cwtl
cmp
jae
push
outsl
js
xchg
cs
cmpsb
jno
arpl
rcrl
mov
outsl
jnp
mov
push
xchg
pop
cs
fiadds
and
and
leave
imul
clc
imulb
sti
sub
int
repz
rclb
mov
out
lods
or
lds
lcall
aam
shlb
dec
out
movb
aas
mov
outsl
cmc
mov
or
arpl
adc
inc
mov
lock
call
icebp
sub
cmp
ja
push
cli
stos
nop
xchg
mov
adc
repnz
adc
pop
add
out
nop
addr16
shl
stos
jmp
cs
popa
xlat
push
mov
pop
fidivs
lods
mov
test
arpl
out
sbb
pop
cld
stos
jl
dec
and
mov
cmc
or
movq
shr
icebp
rcr
stc
mov
lahf
jecxz
scas
cmpsl
sbb
xchg
cmp
loop
adc
loop
jp
imul
ss
pop
loope
xchg
fld
ret
test
in
test
aaa
je
je
inc
imul
fs
stc
cwtl
jb
and
incb
mov
mov
test
and
xchg
sbb
mov
mov
mov
xorb
push
sbb
dec
mov
fsubrs
xor
mov
mov
lcall
cli
lods
or
test
in
xchg
sub
mov
xor
mov
orl
mov
xchg
jl
and
stc
pusha
sub
jo
daa
xor
ss
out
xchg
or
mov
lods
lret
loopne
loope
loope
xor
inc
cmp
dec
xchg
cmp
loope
cs
mov
sub
movsl
sub
xlat
mov
or
iret
movsl
and
sbb
push
clc
jge
in
adc
movsl
ret
in
neg
xchg
fcomi
push
call
and
sub
cmc
ja
mov
jno
fcmovnbe
inc
je
aaa
mov
xchg
push
sbb
sub
or
cmp
call
adc
or
movsb
push
mov
mov
je
add
insl
cwtl
and
inc
nop
sub
mov
lock
xchg
into
ljmp
in
push
mov
mov
jp
mov
add
cmp
repnz
xor
sbb
imull
shlb
shll
and
and
popf
outsb
lock
mov
mov
movsb
jb
loopne
ss
mov
sub
xchg
adc
outsl
clc
pop
cmp
js
divb
pop
mov
sub
sub
sbb
aad
push
dec
imulb
inc
add
and
mov
mov
dec
push
sbb
in
jns
leave
mov
insl
push
dec
nop
adc
push
pop
mov
bound
adc
or
mov
mov
testb
aaa
mov
dec
xor
sbb
mov
popf
xor
mov
movsl
scas
sub
mov
mov
inc
es
push
movsl
jl
faddl
fwait
ss
mov
sarb
in
mov
aaa
cmp
out
pop
or
test
dec
rorb
cmp
and
pop
mov
xorl
scas
sub
stos
lock
jge
outsb
cmpsb
inc
mov
adc
dec
pusha
dec
test
jb
and
dec
jmp
cmp
push
jns
push
xchg
call
sub
stos
enter
and
mov
mov
mov
bound
fs
arpl
push
xchg
jns
xlat
or
push
rclb
inc
pushf
cs
cld
pop
dec
insb
push
mov
xchg
push
mov
add
xor
shrl
mov
lods
or
outsl
pusha
xchg
jg
ja
aam
popa
or
ret
adc
roll
mov
push
les
adc
xchg
xor
ret
mov
push
pop
stos
sahf
dec
or
popf
les
gs
sub
xor
mov
or
xor
test
imul
jnp
bnd
lcall
xchg
lret
add
shrl
mov
adc
aas
push
arpl
insl
in
cmp
loope
xor
shrb
test
sub
stc
push
or
out
xor
inc
cltd
leave
sbb
dec
add
fnstsw
imul
push
shrl
xor
mov
gs
jecxz
lcall
in
push
gs
sahf
clc
sbb
jb
test
adc
test
push
stos
dec
jl
xchg
insb
arpl
push
mov
add
aas
popf
sbb
cmp
or
cld
sbb
mov
fwait
cld
inc
xchg
gs
push
add
les
sahf
imul
std
jo
and
or
push
lock
jne
fidivs
jecxz
mov
and
jo
idiv
sbb
xor
push
inc
push
clc
dec
push
cmpb
addr16
sub
pop
jno
std
test
cmpb
dec
and
pop
cmp
cwtl
pop
in
fcoml
xchg
popa
mov
les
je
push
xor
xchg
xchg
lret
sub
arpl
ret
fwait
push
icebp
inc
pop
pop
jno
sbb
adc
jecxz
cmp
add
popl
xchg
sub
adcl
xchg
add
or
mov
xchg
pop
std
mov
sbb
loope
insl
outsb
lret
test
mov
inc
shll
lcall
into
dec
orl
or
ja
int
stos
clc
add
inc
and
fistpl
test
jns
popf
push
movsb
mov
push
out
or
ffreep
sbb
xor
popa
ficoms
add
pop
cwtl
shlb
in
mov
dec
js
xchg
dec
dec
and
outsb
call
lcall
mov
movsl
pop
add
ljmp
gs
outsb
sub
lock
xchg
push
jo
inc
arpl
in
into
pop
loop
loop
lock
jmp
fsubr
inc
shrb
loope,pn
enter
xor
dec
in
cmp
xchg
repnz
mov
lds
sbb
sahf
jmp
or
fisubrl
dec
dec
out
dec
pop
fimull
xchg
dec
sbb
lods
in
inc
loop
sub
cwtl
jae
sbb
fxch
dec
jmp
cltd
or
out
pop
in
xchg
repz
js
sti
enter
fsubl
mov
sub
addr16
mov
mov
lahf
push
push
leave
pushf
loope
stos
inc
orb
repnz
out
pop
sahf
jnp
cmp
lds
stos
sub
in
push
mov
sbb
sub
and
imul
in
imul
cmp
js
pusha
pushf
jle
lods
cltd
jp
push
push
pop
testb
inc
icebp
jp
outsb
call
pop
jmp
pop
pop
roll
and
jecxz
pusha
xor
ficoml
lret
and
pop
xor
fadd
xor
aad
xchg
ret
scas
add
out
pop
jnp
ss
mov
test
add
and
jl
mov
mull
stc
fiadds
stos
jo
inc
jg
jne
imul
sub
cmp
pop
and
cli
jg
inc
divl
shll
pop
mov
inc
loope
sub
js
add
dec
pushl
inc
ss
sti
cmpsb
test
hlt
lock
test
push
push
jns
pop
loopne
mov
push
push
pand
pop
arpl
mov
outsl
repz
and
push
cmpsl
push
sbb
inc
sub
test
cmc
or
ret
lock
xor
enter
sbb
xchg
test
subl
push
cs
push
aad
adc
mov
int3
ret
mov
in
ss
jecxz,pt
clc
push
pop
les
mov
ficoml
in
mov
jmp
pusha
or
jae
inc
pop
add
mov
scas
out
sub
inc
cvtpi2ps
inc
scas
push
ret
mov
bound
sub
fldenv
jl
mov
cmp
jo
aaa
movsb
popf
mov
lods
sub
mov
shll
outsb
cmp
lods
dec
jnp
arpl
mov
push
arpl
cwtl
in
fs
jmp
pop
cld
dec
pop
fucomi
loop
rcrl
xchg
cmp
js
in
jmp
fwait
push
add
shll
clc
pop
sahf
cmp
aam
nop
and
je
pop
fsubrs
mov
ficompl
std
ja
inc
in
jae
jmp
xor
adc
push
je
mov
dec
rcll
sub
pop
jle
and
cmp
loopne
dec
ret
mov
mov
cld
lods
fwait
adc
out
nop
hlt
mov
out
loop
and
adc
mov
les
cmpsb
sbb
hlt
pop
dec
test
frstor
out
ds
xchg
adc
faddl
push
cmc
in
jnp
loope
int
in
push
add
cmp
sbb
add
xor
push
idivl
sarl
mov
add
aaa
jo
in
into
int
push
pop
pop
sbb
push
mov
sbb
addr16
sbb
mov
loopne
fld1
loop
mov
mov
fs
jb
pop
leave
ret
inc
lock
fwait
out
popa
cmc
loopne
xchg
jae
psubb
xor
scas
stos
out
adc
dec
jl
stc
lds
and
sub
mov
jecxz
test
pop
flds
out
jl
je
xor
sub
jne
push
xor
dec
outsb
mov
mov
sub
movsl
and
inc
int
arpl
test
and
into
sbb
push
add
loope
movsb
xor
sub
aad
les
pop
xor
xchg
aam
xchg
imul
fnsave
sbb
cmp
add
loop
push
push
pshufw
xchg
sbb
ja
in
dec
sbb
loopne
xorl
lods
add
sub
test
xchg
outsl
xor
jp
mov
ds
stos
mov
pop
cmp
sbb
xchg
in
push
adc
mov
popf
arpl
cmovnp
sbb
in
enter
inc
addr16
in
sub
int3
into
mov
inc
pop
and
divl
cli
mov
mov
sbb
push
fidivrl
lret
leave
dec
in
dec
les
adc
cmpsb
push
popf
jge
and
inc
mov
lret
movsl
clc
ljmp
pop
sub
push
test
movsl
mov
in
movsb
insb
mov
clc
jne
insb
or
ja
dec
pop
push
adc
mov
fs
cmp
xchg
and
xchg
iret
es
clc
xchg
imul
and
sbb
and
lock
adc
cmpsl
out
outsl
push
mov
cmp
push
cmp
jecxz
mov
in
lods
push
xchg
add
or
inc
orl
rorl
enter
fcomps
sbb
pop
test
insb
idivl
lds
fcmovne
rorl
or
adc
mov
ja
pusha
mov
mov
adc
stos
dec
loopne
or
icebp
movsl
fisttpll
roll
mov
jno
sbb
sub
lret
inc
xchg
pop
cwtl
sbb
outsb
dec
jnp,pt
sub
fwait
adc
gs
push
jmp
fsts
inc
sarl
xor
push
inc
dec
push
mov
cmp
icebp
dec
add
or
ja
pop
popa
insb
mov
xchg
aas
nop
pusha
loopne
xlat
mov
jg
repnz
aas
push
pop
mov
jo
jb
mov
nop
addr16
push
ret
mov
popf
ljmp
fsubr
pop
pushf
jbe
testl
dec
or
inc
or
sbb
push
fwait
xchg
xor
out
call
adc
inc
in
pop
data16
pop
icebp
xchg
ret
nop
and
inc
cltd
push
test
mov
les
out
fmull
pop
cmp
imul
mov
cmp
roll
pop
jg
loopne
in
pop
pushf
fcoml
or
aaa
and
sarb
xchg
dec
mov
xor
inc
in
lcall
cmpsb
jo
jge
fsubrl
pop
xchg
icebp
cmp
jmp
sub
repz
movsb
ja
imul
test
pusha
lds
sbb
add
jmp
push
mov
ret
imul
xchg
and
pop
mov
pop
fbstp
int
add
imul
mov
xor
mov
pop
das
xchg
les
fnstsw
cmp
cli
xlat
inc
jge
push
pop
adc
xorl
cmp
orl
mov
and
lcall
dec
xchg
sub
fcoml
mov
and
jnp
in
setbe
sub
xor
and
arpl
aad
es
dec
mov
jge
in
lret
lods
cmpsl
pop
sub
push
xor
out
arpl
aam
lods
inc
xchg
clc
int
jb
push
mov
outsb
jo
daa
mov
popf
cwtl
js
aam
push
out
shl
cmp
pop
test
jo
mov
addr16
cmp
pop
jl
push
outsb
and
nop
mov
jns
std
jae
cli
pop
popf
push
inc
lret
mov
frstor
xchg
ss
insl
inc
mov
hlt
cmp
push
cmp
lcall
pop
outsb
in
dec
out
fucomp
aas
mov
cmp
mov
xor
enter
sbb
nop
inc
movsl
pop
mov
or
mov
jne
xchg
int
cmp
fsubrl
adc
sbb
push
jae
mov
push
and
aaa
inc
xor
lahf
in
jo
mov
inc
jbe
xor
aad
mov
cwtl
add
nop
mov
pop
fcoml
clc
ljmp
add
inc
mov
out
dec
shrl
insl
adc
mov
lds
sub
out
shl
cmp
add
shlb
and
jno
rol
add
sarb
and
ret
mov
pop
call
xor
pop
fistps
mov
pop
mov
sub
popf
cmpl
add
xchg
sbb
mov
movsl
push
fstpl
jg
mov
aam
int
push
ds
mov
dec
test
ficomps
shl
cmc
add
xchg
jb
fisttpl
mov
aam
dec
mov
repz
jmp
gs
cmp
mov
cmpb
sub
and
std
pop
inc
std
mov
and
inc
or
jne
rcrl
xlat
in
lcall
mov
adc
lock
xlat
xchg
es
jg
mov
sub
in
sbb
jmp
pop
jns
push
push
idiv
push
xchg
inc
aaa
adc
mov
mov
mov
mov
shll
fdivl
push
sarb
inc
mov
dec
call
or
hlt
js
pop
jno
xchg
insb
out
and
dec
fcomps
bound
in
jo
scas
dec
mov
cmpsb
adc
xor
adc
mov
addl
adc
jp
inc
loope
sbb
sub
add
jmp
push
adc
jne
mov
mov
push
aam
sub
cmp
inc
push
adc
arpl
xor
mov
cmp
sbb
xchg
push
notl
fs
gs
test
flds
data16
ror
in
sub
daa
mov
int3
hlt
popa
out
sar
popa
mov
test
jo
insb
mov
mov
sbb
loop
dec
push
xchg
stos
xor
arpl
push
aaa
outsb
cmp
les
jp
mov
and
xor
cmp
lcall
cmp
jl
xchg
push
push
mov
pushf
dec
mov
xchg
mov
xor
subl
adc
dec
mov
mov
dec
xor
push
mov
push
cmp
ficomps
dec
insb
pop
les
mov
aas
jbe
ret
mov
sub
sahf
cmp
dec
xchg
in
iret
dec
out
lods
sub
xor
sub
out
xor
xor
push
sti
pop
stos
pushf
mov
je
xchg
pop
outsl
repnz
mov
cli
pop
mov
aaa
inc
sbb
insl
jb
out
scas
push
iret
push
loop
pop
test
aaa
stos
lea
xcrypt-ecb
cmpsl
lret
lds
sarb
mov
bound
mov
lea
into
outsb
sub
mov
pop
out
xchg
mov
xor
xchg
test
sub
dec
lahf
mov
adcb
or
adc
das
cmp
or
jae
ja
or
jo
pop
outsl
pop
add
mov
pop
sub
cmpsb
xor
mov
adcb
sub
sbb
les
mov
mov
xchg
into
add
pop
jo
lods
dec
sub
stos
mov
jp
jmp
sbb
sbb
fdivrl
div
jecxz
mov
dec
mov
iret
gs
mov
dec
shll
loopne
inc
test
pushw
jnp
pushf
dec
dec
pop
sub
add
and
or
daa
fst
enter
test
inc
ss
dec
cmc
mov
jmp
jnp
jp
or
mov
jmp
out
repnz
daa
push
insl
popf
into
inc
mov
imul
jp
and
jno
pop
xor
add
mov
ret
mov
mov
test
pop
push
rorl
repnz
push
and
aad
cmp
cltd
mov
je
aas
in
cltd
push
jnp
sub
pop
imul
adc
inc
push
xchg
xchg
fistps
pop
xor
in
leave
sub
lahf
push
sbb
test
push
mov
loope
ss
adc
call
in
out
fsubl
push
imul
push
sti
or
dec
scas
insb
xor
ret
sarl
out
sub
rcl
dec
adc
lods
les
cmp
mov
adc
jmp
stc
hlt
sti
std
mov
hlt
jg
sbb
mov
xchg
jge
mov
xor
and
mov
cmp
in
dec
cmpsl
lock
or
stos
aam
dec
sub
mov
movsb
in
roll
jb
movsl
pop
imul
add
cmp
cld
std
lahf
stos
enter
loop
aam
xor
sub
cmpsl
addl
cli
push
cs
test
xor
and
mov
inc
lds
sub
mov
mov
inc
aad
mov
rorb
pop
test
fs
pop
ss
js
movsb
or
add
dec
mov
out
and
jl
gs
repz
movsb
and
or
rolb
jno
pop
add
jl
xor
notl
mov
loopne
test
sbbb
dec
pop
pop
sbb
pop
mov
mov
adc
mov
dec
cli
cmp
or
push
push
mov
dec
cs
loop
lahf
fstpl
mov
fsubl
sub
negl
sbb
fldcw
enterw
inc
xchg
push
xor
jae
mov
dec
shll
push
lds
aam
cmp
ret
lahf
xchg
jne
pop
mov
scas
frstor
mov
out
adcl
call
ret
lock
arpl
jne
ret
add
push
daa
jl
ffree
mov
loop
mov
lods
data16
jecxz
std
hlt
xor
cmp
lret
in
test
push
xchg
mov
shlb
xchg
jl
stos
inc
push
dec
jg
cmp
popf
cmc
in
mov
or
bound
cltd
and
scas
repz
lret
xchg
push
fmulp
xchg
or
insb
adc
push
arpl
push
cmc
mov
loope
mov
daa
scas
pop
or
pop
leave
sbb
jns
in
aam
stos
or
inc
sbb
fisttps
daa
fdecstp
mov
xor
add
fisubrs
push
add
icebp
push
mov
push
add
or
and
inc
inc
and
mov
inc
mov
test
fwait
addr16
sub
lds
inc
adc
adc
sahf
push
shl
sti
mov
call
clc
loope
adc
jmp
pop
and
adc
add
pop
xor
pop
inc
pop
repnz
test
movsl
fsubrs
xor
pop
xchg
sub
jns
fucomi
mov
fs
in
and
mov
adc
lcall
mov
movsl
cs
lods
loopne
add
inc
shr
scas
es
lea
xchg
cmp
arpl
icebp
xchg
pop
aas
pop
ljmp
roll
jg
int3
dec
leave
xor
xor
shll
adc
div
das
ds
subl
jmp
into
xchg
dec
repz
imull
adc
dec
adc
scas
pop
mov
lea
mov
and
jbe
lock
mov
incb
es
imul
pop
mov
fwait
in
mov
fsubrl
insb
push
cltd
mov
cmp
push
jnp
mov
scas
sub
popf
add
cmp
inc
pop
mov
dec
pushf
jns
pop
pushf
sbb
xor
stos
in
inc
sahf
fimull
test
fists
das
push
mov
xchg
repz
cmp
push
push
ret
add
mov
das
stos
test
mov
das
test
ror
cmp
je
jg
or
xlat
int
ret
sbb
sub
sbb
aam
jbe,pn
pop
ret
bound
fisttpll
in
out
fcompl
cmc
jns
rcrl
push
pushf
xor
mov
add
movsl
adc
and
aad
push
daa
mov
lcall
adc
and
mov
ret
idivl
jge
inc
icebp
sti
cltd
cltd
outsb
or
pop
xor
pushf
imul
push
pop
bound
mov
mov
out
mov
lret
sbb
push
out
push
sub
test
scas
push
std
mov
rcr
addl
push
cmp
push
sbb
jle
sbb
mov
mov
xor
cld
daa
dec
add
cs
shlb
adc
jge
or
xlat
sub
stos
shlb
xchg
or
push
mov
cmc
sub
push
mov
aam
adc
or
push
sbb
lock
nop
adc
jl
adc
out
out
cmpsl
in
std
dec
lret
xor
sbb
sub
mov
lock
out
adc
jge
jo
outsl
mov
jo
jge
enter
in
push
cmp
stos
faddl
out
in
int3
test
cmc
and
add
ret
mov
push
lcall
add
inc
mov
cmp
daa
cmpsl
add
orl
pop
in
push
push
push
xchg
cmc
das
and
and
fisttpll
ret
vmovd
mov
sub
inc
sarb
jmp
movsb
dec
sbb
adc
push
das
inc
notb
sub
mov
or
mov
cmpsl
adc
mov
cmc
enter
jle
loope
adc
rcl
es
push
pop
jmp
cmp
dec
rorl
in
cltd
jmp
add
adc
jg
testb
fcomip
pusha
into
push
adc
addb
xchg
cmp
cmp
mov
in
ds
popf
inc
data16
jmp
rcl
mov
xchg
movsb
mov
dec
xor
out
push
fstpt
scas
popf
movb
je
and
xor
mov
mov
lcall
mov
mov
jge
in
mov
mov
adc
adc
ret
shrl
loope
adcb
popf
push
int
mov
xchg
pop
and
movsl
mov
jo
mov
sahf
sub
xorw
jnp
lahf
mov
jmp
mov
fisubs
xor
andl
adc
add
shlb
out
jns
daa
addb
or
mov
adc
lds
sub
add
or
sub
and
lods
jmp
ret
jno
cmp
fsts
push
lret
clc
idivl
dec
ss
rol
popa
iret
popf
xchg
test
loop
fsubrp
mov
aaa
out
push
sarb
inc
loop
scas
jmp
xchg
dec
sub
xchg
sbb
nop
mov
sti
add
mov
out
test
or
jle
mov
cmpb
inc
out
add
pop
pop
ss
arpl
cmp
jne
xchg
mov
inc
sub
dec
xor
stos
in
add
dec
cs
in
inc
push
enter
icebp
lahf
sbbb
lds
or
sub
sub
mov
std
jge
fildll
jmp
dec
xchg
cmp
popf
mov
xor
mov
jnp
sbb
jge
sti
xchg
push
stos
cmp
jbe
pop
int3
stos
cs
loopne
lcall
xchg
lcall
cmp
push
inc
pop
jp
sbb
xchg
inc
fisubs
xchg
lock
xchg
sbb
mov
inc
fstpt
repz
dec
out
lds
sar
mov
hlt
js
vmwrite
xor
out
pop
push
out
lods
and
cmp
xchg
push
data16
fwait
aaa
inc
insb
push
rorl
cmpsb
or
stc
xchg
sysret
les
ficompl
cmp
subb
sti
lret
pop
in
test
stc
enter
mov
mov
adc
inc
test
ja
test
sbb
push
sbb
mov
pop
cmpsb
pushf
add
pop
push
cmp
int3
xchg
test
add
xchg
scas
repnz
loope,pn
mov
in
out
imul
in
sbb
push
std
pushl
and
test
and
test
hlt
test
mov
add
je
mov
fwait
add
std
stos
jmp
push
lods
dec
sub
repnz
and
dec
sub
jg,pn
xchg
sub
leave
repz
pop
fwait
lret
shl
sti
fs
mov
or
xchg
movsl
sbb
lahf
fwait
jns
xor
jb
repnz
rorb
inc
xchg
outsb
xor
into
cltd
test
or
data16
enter
imul
fxam
xchg
adc
out
jne
or
int3
adc
mov
out
inc
cwtl
call
dec
mov
loop
inc
in
or
push
hlt
loop
int3
subl
and
or
sbb
and
inc
sbb
lcall
mov
inc
lret
decb
inc
dec
lods
push
jns
in
add
test
out
aad
xchg
cli
popa
sbb
mov
push
psubd
xor
js
add
es
int3
js
xrelease
dec
adc
jecxz
mov
jecxz
pushf
mov
lods
cmc
dec
mov
cltd
or
mov
push
les
adc
test
dec
mov
pop
stos
movb
lock
fnstenv
ss
adc
pop
cmp
mov
push
insb
xchg
adc
aam
int3
sahf
shlb
and
mov
or
sub
and
jb
and
xorb
or
daa
mov
push
cli
or
test
or
sbb
stc
loope
shlb
jmp
xor
in
or
inc
mov
sbb
fbld
shrl
rcl
push
jecxz
cmp
xchg
cli
movsb
out
js
xchg
mov
mov
shll
loop
stos
unpckhps
push
cmpsb
xchg
pop
fstpl
shrb
or
push
adc
cli
orl
fmull
ja
mov
jbe
dec
scas
fstps
inc
in
dec
sub
xchg
lods
adc
out
orb
bound
add
je
mov
ftst
or
stos
push
movb
cs
mov
clc
jle
cmc
iret
testb
adc
gs
push
xor
xchg
or
push
mov
insl
adc
jbe
xchg
cmp
lret
xor
mov
mov
enter
or
data16
and
fsubrp
aaa
in
cmc
jne
sub
sub
lock
xor
std
push
sub
push
pop
mov
sbb
notl
add
pop
add
xchg
pushl
and
xchg
out
sar
shll
fistpl
and
out
mov
inc
inc
xor
mov
mov
int
cli
loop
inc
aaa
fwait
stc
lods
inc
test
jp
dec
push
jge
add
rolb
push
inc
lea
push
fnstsw
pushf
enter
enter
lcall
ret
jne
cmc
pop
xor
outsb
push
ret
and
cmp
jmp
sbb
pushf
shll
mov
movsl
je
add
push
mov
cmp
or
xchg
add
sti
mov
hlt
cmpsl
sub
loopne
mov
add
mov
lods
addr16
loopne
push
mov
test
mov
adc
add
xor
aad
jmp
in
insb
test
cmp
mov
loopne
xchg
scas
out
pushf
mov
dec
sub
es
cmpl
sub
xchg
jo
push
rclb
fsubrl
out
in
or
push
jg
imul
daa
cmp
sbb
icebp
xor
xlat
jnp
xor
mov
rorl
in
lea
icebp
pop
sbb
pushf
lods
mov
aam
sbb
ljmp
scas
aad
add
ret
addl
jl
test
out
leave
push
call
and
cmp
mov
jae
pop
jmp
rcl
mov
xor
pop
scas
mov
insb
pop
lret
jle
scas
inc
cwtl
mov
cmc
loop
pop
xchg
mov
and
push
je
fld
fisttpll
pushf
int3
sub
popa
or
add
mov
xor
in
mov
xor
mov
repnz
push
repnz
fiaddl
rolb
sbb
dec
cld
sahf
push
mov
pop
sbb
push
fcmovb
pop
jae
cwtl
xor
sub
sub
or
mov
inc
lock
sahf
jmp
xorb
pop
gs
rcrb
rcll
outsb
mov
cmc
sbb
and
cmpsl
push
adc
subl
fistpll
cmp
test
ret
into
jmp
jo
add
rorb
loop
push
sbb
push
ret
xchg
sbb
sub
imul
mov
outsb
xchg
mov
fwait
jbe
jmp
pop
adc
xor
and
es
test
movsl
inc
mov
ds
inc
and
inc
bound
hlt
cli
shll
addl
dec
ja
mov
push
adc
cs
aam
adcb
dec
test
jnp
dec
stos
adc
dec
jnp
stc
mov
pop
or
xor
fwait
clc
test
jmp
pop
mov
jno
lods
add
dec
dec
scas
mull
add
iret
mov
mov
cli
cmp
rcll
les
and
sarb
add
mov
sub
xchg
mov
and
pop
sub
xor
out
adcl
in
dec
sub
sbb
xchg
sub
xlat
stos
mov
bswap
cs
sahf
and
sub
iret
and
out
ds
imul
aad
lods
or
out
inc
xor
imul
int
loopne
stos
cltd
movsb
pop
movsl
cli
push
push
outsl
call
mov
mov
fwait
je
mov
bound
test
jns
mov
aaa
push
jle
sbb
scas
or
into
jb
hlt
clc
mov
inc
add
cmp
imul
pop
mov
sahf
cwtl
pop
orb
jnp
daa
inc
jmp
xor
inc
rol
sbb
pop
stc
clc
int
movsb
out
cmpsl
sub
xchg
pop
xchg
lock
push
and
test
dec
xchg
fimuls
cmp
sub
add
orl
pop
shrl
pop
jno
sub
int
add
and
pusha
flds
cmpsb
cs
xchg
loope
dec
push
xor
sti
dec
jb
pop
add
sbb
add
adc
adc
cmpsb
pop
mov
jmp
xor
add
mov
out
and
sbb
push
andl
in
mov
push
orb
cmc
jmp
mov
xor
test
popf
mov
ss
cli
jae
andb
jl
xor
add
fadd
push
mov
pop
mov
idivb
lods
xchg
lret
lret
and
jnp
inc
push
icebp
dec
xor
sbb
rolb
mov
jae
mov
mov
pop
das
and
xor
bsr
or
dec
sbb
add
std
xchg
and
pop
sub
jge
and
cmp
mov
add
int
les
fsubr
mov
pop
cmp
mov
mov
xor
cmp
sbb
hlt
mov
jo
xchg
ret
in
push
dec
add
add
insl
cmc
jp
xor
sbb
or
lret
out
dec
or
or
xor
jge
sbb
xchg
add
int
push
pop
and
jg
ja
push
out
inc
dec
movl
pop
mov
aam
movsl
jo
aas
sti
std
add
xor
sub
repnz
inc
mov
ss
pmaxsw
loopne
inc
and
sti
popa
jo
pop
or
or
and
xor
xchg
mov
das
mov
cmp
popa
inc
mov
mov
cmpl
sbb
or
lret
notl
dec
sub
insb
sbb
in
dec
mov
add
and
mov
mov
pop
jl
inc
cld
add
ret
adc
or
imul
jb
shll
cmpsb
sbb
lock
aad
mov
xlat
push
daa
mov
into
adc
cmp
ja
bound
call
lods
enter
jo
push
cltd
mov
jne
into
adc
mov
pop
cs
push
add
cmp
nop
cmp
cmpsl
mov
add
loope
mov
jne
into
or
inc
jb
shrl
loopne
sub
mov
push
sbb
jo
jle
mov
into
idivb
jbe
sbb
jle
test
cmp
dec
inc
andb
adc
out
adc
dec
mov
dec
or
aam
bound
out
sbb
jge
in
sub
fcomp
mov
cmpsl
sbb
sbb
pop
je
out
mov
ja
push
pop
fnstsw
mov
inc
mov
jbe
jno
stos
jg
es
leave
bnd
bound
ret
cmp
xor
stos
in
jge
push
pop
fxch
aam
in
mov
out
aas
and
roll
jnp
call
clc
mov
mov
dec
xor
pop
aam
daa
in
ja
jl
inc
sbb
idiv
insb
outsb
orb
sbb
cld
xchg
fnstsw
sub
mov
inc
dec
mov
pushf
and
and
hlt
cmpsl
push
in
pop
aad
push
push
outsb
xchg
adc
inc
ljmp
fdivrp
test
adcl
dec
xchg
test
test
push
popa
aam
xchg
xchg
and
in
or
mov
ds
aad
lods
addl
jb
dec
xor
in
mov
inc
jmp
inc
imull
xorb
stos
movsl
insb
sub
push
xchg
pop
int
inc
adc
in
xchg
mov
insl
jmp
push
mov
scas
aad
movsl
les
call
push
adcl
xchg
pop
jns
rorl
dec
cmp
dec
stos
cld
push
mov
dec
mov
cmpsb
push
and
fsts
lods
out
or
arpl
flds
mov
pop
push
xor
ljmp
divl
mov
mov
xchg
test
insb
add
icebp
add
add
mov
xor
fs
lock
lock
xor
xchg
dec
mov
aad
mov
nop
rcl
pop
imul
test
add
sar
adc
jg
mov
lock
mov
cmp
xor
push
loopne
and
imul
add
dec
xor
pop
cmpsl
js
fldenv
mov
xchg
sbb
dec
pusha
pushf
add
leave
stc
jmp
movsl
cmc
lea
add
sbb
ret
cmc
mov
inc
xchg
sbb
outsb
push
fiadds
in
sub
outsb
stc
pop
out
or
mov
mov
dec
sahf
mov
cmp
jg
cmp
pop
pop
push
shl
mov
xchg
int3
pop
shlb
adc
pusha
cmp
in
inc
jne
mov
lds
in
xchg
push
mov
adc
push
or
and
push
adc
mov
ret
or
fwait
mov
mov
notl
adc
call
cmp
ret
mov
push
jle
dec
add
adc
notb
pop
sbb
je
pop
adc
push
aam
push
lock
sub
inc
push
or
hlt
cmp
pop
mov
dec
test
and
mov
pop
movsb
ret
loopne
sbb
push
outsl
cmp
sub
jns
push
movsb
mov
xchg
enter
imul
in
push
scas
mov
mov
adc
loopne
js
stc
mov
ror
dec
lea
add
jmp
ret
dec
jne
fidivs
mov
mov
imul
push
jae
int
push
adc
mov
es
stos
jae
pusha
jge
mov
stc
cmp
or
movsl
dec
or
ss
fidivrl
sbb
test
fisubrl
popa
xchg
call
mov
cld
cmp
add
mov
sarb
pop
push
cmp
data16
mov
fldt
lret
pop
adc
es
mov
ror
mov
cmc
adc
mov
sti
gs
push
js
add
dec
dec
in
add
inc
lods
nop
lahf
jl,pt
jbe
or
fsubrs
inc
mov
sub
fwait
add
cmc
cltd
insb
jne
aam
bound
inc
enter
or
lock
sbb
out
addr16
xchg
arpl
stos
jb
addr16
bnd
fdivl
cmpsl
mov
pop
jns
xor
add
ss
scas
dec
cltd
jbe
dec
js
fwait
fwait
mov
push
adc
cli
jge
loopne
xor
das
add
sub
mov
jl
int3
sbb
jnp
jmp
dec
divb
lods
and
xor
or
cmpsl
mov
std
subb
rcll
out
pop
add
push
inc
mov
mov
rorl
mov
dec
add
dec
clc
dec
inc
sbb
xor
repz
in
shlb
int
mov
mov
push
lret
mov
jae
mov
inc
jbe
add
ret
and
scas
aas
adc
mov
fsubrl
data16
leave
mov
push
in
les
mov
iret
xor
hlt
mov
push
push
dec
pop
fs
inc
sbb
in
jg
pusha
stos
popf
or
jg
add
mov
push
ds
in
pusha
inc
cwtl
insl
push
xchg
fsubrl
hlt
ljmp
xor
sub
cmp
rol
pop
lcall
out
pop
lea
imul
and
jmp
outsl
or
loope
mov
mov
jmp
adc
pop
mov
dec
xlat
es
lret
add
aaa
jno
jl
insb
or
push
xchg
in
adc
dec
mov
addr16
out
rcll
jnp
jno
lods
sub
addl
rcl
fcmovnb
xchg
inc
movsb
sbb
fsubs
sahf
sub
xor
movsl
push
mov
stc
pop
xchg
push
sahf
hlt
xchg
gs
xchg
dec
adc
push
lahf
sbb
and
inc
icebp
inc
out
popf
push
cmp
popf
adc
lret
sbb
cli
xchg
lcall
shlb
movsb
scas
jg
movl
ja
mov
pop
les
push
or
cmp
mov
shll
jno
push
or
pop
xchg
or
cmp
repz
jb
fdivp
idivb
mov
jp
in
into
insl
mov
cmp
dec
ljmp
fldpi
adc
int
cmp
test
arpl
rclb
adc
loope
and
and
inc
mov
lds
sbb
ret
lock
cmp
test
jo
mov
je
imul
mov
andb
cmp
stos
jno
cmc
add
lods
sbb
mov
mov
rolb
fildl
inc
pop
mov
adc
fldenv
xor
pop
jp
sti
pop
sub
test
out
push
ja
stos
loopne
pop
xchg
push
iret
xchg
mov
mov
pop
shlb
rorl
lret
faddl
xchg
repz
inc
ret
ljmp
out
add
shll
push
int3
pushf
adc
and
repnz
jle
sbb
push
sbb
outsl
repz
enterw
pushf
mov
mov
je
cmpl
sub
push
aad
add
sbb
mov
lock
not
jb
sahf
push
lock
insb
and
mov
dec
xchg
ss
jecxz
lds
nop
jns
inc
test
cmpsb
mov
sbb
and
jae
out
orl
or
dec
mov
fildl
leave
lret
mov
lds
divl
push
mov
lock
add
mov
dec
popa
xor
adc
cmpsl
js
ja
inc
daa
xchg
pop
ljmp
xchg
loop
dec
insb
push
rep
popa
into
bound
pop
hlt
mov
xchg
pop
add
sahf
dec
mov
or
pop
cmp
cli
xlat
sbb
filds
ret
clc
outsl
or
imul
pusha
lods
xchg
jb
push
jp
stos
pop
je
call
jg
xchg
cmp
pop
lock
mov
sbb
jb,pt
fs
shlb
or
or
adc
subb
dec
loopne
pushf
into
scas
lea
stos
sahf
sub
stos
into
add
inc
das
xor
je
adc
rorb
or
sbb
xchg
in
mov
lahf
test
jne
sub
fcmovnu
icebp
aad
shll
mov
out
negl
or
clc
mov
clc
mov
mov
or
fs
jae
les
and
out
mov
adc
in
clc
lods
mov
in
sub
xchg
mov
adc
or
xor
stos
jmp
in
arpl
jl
lcall
push
jae
mov
or
movsl
jb
dec
cmp
pop
push
push
pop
leave
jg
out
jns
xor
lret
and
jbe
popf
mov
popa
pop
loop
and
mov
inc
dec
icebp
mov
inc
xlat
add
daa
mov
ss
add
int
fnstsw
jns
clc
inc
arpl
adc
leave
cmp
adc
stc
cltd
out
adc
rclb
xchg
in
fistpll
clc
popl
inc
mov
shl
add
cmp
mov
cmp
xchg
inc
jecxz
rcrb
jb
js
cmpsb
xorb
jo
xor
rcrl
std
mov
testl
insl
cmpsb
inc
in
xchg
inc
inc
xchg
loopne
sub
xchg
xchg
xchg
push
inc
pushl
jle
cmp
cltd
test
mov
mov
jnp
mov
pop
jmp
inc
inc
scas
arpl
sti
mov
add
inc
lahf
enter
clc
insl
ret
push
js
stc
test
xor
inc
push
cwtl
lahf
sbb
cmp
push
cltd
sub
in
ljmp
aad
andb
notb
ss
lds
cmp
fstps
shl
cmp
gs
mov
pushf
enter
cli
jne
ret
imul
imul
divl
cmp
aam
in
jns
jae
imul
lgs
inc
stc
and
mov
mov
jl
into
xchg
mov
xchg
cmpsl
aas
ret
mov
test
inc
pop
gs
sub
dec
sub
mov
jae
add
lods
dec
pusha
push
and
sub
int
test
in
xchg
mov
clc
loope
test
stos
xchg
jb
dec
jae
flds
gs
icebp
cli
lods
orb
push
pop
mov
xor
out
ljmp
test
add
mov
dec
imul
imul
jb
pop
mov
xchg
add
add
pop
mov
out
in
push
jb
leave
jmp
fists
sub
dec
xchg
dec
shlb
mov
test
pop
xor
xchg
jo
mov
in
std
cs
xchg
and
or
jl
xor
das
je
pop
aaa
xchg
imul
fimuls
loopne
loope
cmp
xchg
stc
cmpsl
rcrb
dec
push
cmove
and
push
jae
adc
outsl
pop
sub
mov
jb
jg
andb
inc
sbb
sti
popf
idivl
mov
test
mov
xchg
ljmp
sti
cmp
pop
push
aas
xlat
adc
mov
mov
dec
jle
imul
mov
adc
and
mov
xchg
mov
xchg
jne
std
adc
fimuls
icebp
mov
mov
xchg
push
test
mov
mov
subb
in
aas
insl
pop
cmp
add
mov
mov
jmp
stc
stos
push
test
test
sarb
pushf
rolb
push
add
gs
dec
testb
jl
nop
scas
xor
cmp
ljmp
clc
inc
outsl
bound
add
cmp
adc
xor
lret
dec
ds
mov
jg
mov
lcall
ret
jns
xchg
fstpt
cwtl
push
mov
cs
stos
test
jnp
mov
fldcw
xchg
fistpll
pop
stos
xor
adc
outsb
ret
addr16
or
mov
sahf
mov
xor
cmp
add
sarb
enter
mov
jle
mov
arpl
push
test
leave
mov
inc
push
mov
jp
add
or
mov
pusha
test
jne
fwait
test
dec
or
shll
pushf
leave
cli
rorl
jno
hlt
ss
mov
outsl
outsb
outsb
repz
scas
shrd
cmp
dec
test
cmp
fsubr
test
sbb
aad
push
or
mov
stos
hlt
aam
outsb
lea
dec
lret
or
cmp
jle
mov
repnz
sti
call
cmp
lods
mov
or
cltd
jno
aam
jg
loope
xchg
aad
out
sub
insl
aas
repnz
push
cmp
push
cmpb
push
mov
push
nop
mov
jbe
in
mov
aaa
in
in
stos
in
in
jns
jae
aam
pop
sbb
in
mov
mov
ss
jb
jb
mov
add
dec
popa
add
das
movsl
inc
in
and
lds
jmp
jb
mov
stos
sbb
mov
mov
xor
jp
mov
insb
lret
or
mov
sbb
out
push
adc
ja
or
jg
out
adc
jecxz
aad
shrb
sub
push
push
lea
ret
es
shlb
ljmp
or
daa
or
mov
mov
outsl
inc
mov
sahf
jecxz
sahf
pusha
xchg
adc
out
add
es
leave
stc
fstp
xor
cld
adc
outsb
test
jb
adc
cld
mov
add
jo
mov
out
or
jnp
sbbl
or
rcl
sub
jge
imul
mov
ret
pop
mov
shll
fsts
jo
xlat
das
lahf
ljmp
dec
jle
xchg
inc
aas
bound
cmp
lret
xlat
test
or
push
in
jns
jnp
fdivl
sarl
push
fdivs
mov
jno
cli
jle
adcl
dec
mov
jle
insl
fldcw
mov
rorl
fwait
out
mov
jbe
jmp
cmpsl
push
mov
jb
mov
gs
xor
out
jle
mov
test
stos
pop
sbb
loop
neg
lret
outsb
cmp
add
jle
lods
or
jnp
ljmp
and
xchg
das
push
mov
imul
sbbb
jge
cmpsb
cmp
cld
adc
ljmp
mov
outsb
ljmp
cli
xor
fadd
sbb
jae
cld
cli
js
add
std
fisttpl
pop
ss
int
fimull
mov
out
lods
je
jle
or
dec
leave
push
enter
frstor
ret
mov
and
nop
lahf
call
xor
xchg
scas
enter
enter
fmul
sub
xchg
pop
cmp
aas
jecxz
ret
lods
adc
les
push
pop
jmp
dec
stos
out
push
push
nop
imul
divb
inc
push
hlt
adcl
loope
lods
rcll
xchg
ficomps
and
lea
mov
lret
xor
or
lock
pop
cmp
fwait
cmp
or
cltd
sub
dec
cmpsb
shll
push
aas
sbb
jl
imul
daa
iret
cmp
outsl
jb
jecxz
adc
or
mov
std
out
adc
pop
add
sbb
mov
xchg
scas
mov
fwait
pop
ss
dec
int3
mov
mov
dec
and
jle
push
cmp
inc
dec
rol
add
fwait
xor
fcoml
sub
adc
mov
rcll
mov
inc
cltd
ss
das
cmp
or
fs
xchg
lret
or
lds
ficompl
pop
fs
xor
push
mov
sub
pop
mov
mov
pop
sbb
xor
pop
adc
xchg
fisubrs
push
inc
jge
jmp
cld
cltd
fisubrs
sahf
dec
fcomps
imul
and
lods
je
pusha
sti
adc
jmp
aas
push
pop
adc
mov
test
jno
push
aas
lret
ret
scas
fdivs
roll
xchg
stos
dec
pop
sub
fcomp
loope
icebp
lods
movsb
push
mov
lahf
mov
mov
pslld
das
loope
es
xor
jnp
mov
push
popa
add
mov
mul
rep
mov
scas
jl
mov
mov
mov
popf
mov
push
adc
pop
adc
imul
pusha
imul
cmp
in
cli
xor
push
push
aas
push
or
pop
or
add
movsb
add
insb
jmp
addb
adc
loop
xchg
xor
sub
addr16
and
daa
lret
sub
inc
iret
shr
scas
testl
stos
inc
sarb
out
inc
pop
test
decb
dec
push
xor
inc
xor
icebp
pop
mov
bound
outsb
ds
xchg
xchg
popf
xchg
aad
cwtl
lock
xlat
sbb
jecxz
into
scas
pop
mov
imul
inc
push
adc
gs
dec
popf
jl
cltd
movsb
test
xor
jmp
cld
jg
push
inc
in
and
dec
int3
add
xchg
jecxz
push
dec
lods
and
leave
popa
xchg
push
outsl
pop
pop
push
xchg
pop
adc
adc
jne
mov
jle
cmp
pop
bnd
sub
pop
jnp
mov
lock
jecxz
or
push
lock
ret
push
add
sub
mov
cmp
cld
testb
dec
jnp
add
jge
and
aad
and
leave
dec
ss
sub
sub
mov
push
pop
add
push
push
cmp
dec
pop
mov
insl
xor
ret
enter
sub
sbb
gs
jnp
das
into
or
imul
fcomip
mov
iret
xor
mov
scas
hlt
mov
push
xor
in
dec
ljmp
adc
inc
xchg
mov
stc
adc
xor
mov
in
jg
sarl
lret
iret
out
cmp
mov
or
xchg
loopne
lock
inc
negb
inc
jle
mov
push
test
xchg
fcmovnu
jmp
jge
mov
loope
aad
mov
mov
popa
mov
filds
ficoms
xor
dec
aad
das
push
in
adc
mov
add
dec
sub
jmp
cmc
inc
js
push
mov
push
mov
test
je
addb
cmpl
addr16
cld
sub
sti
icebp
in
mov
adc
or
lcall
popa
dec
dec
lds
scas
pop
fldcw
mov
out
loop
sbb
leave
gs
cld
pop
sbb
add
inc
and
fbstp
rclb
stos
and
addr16
xchg
ds
cmove
push
shlb
xor
xlat
inc
jmp
stos
std
xorl
push
inc
pcmpgtb
dec
out
xchg
pop
mov
int
cmpsb
mov
dec
loop
fwait
jne
dec
in
aam
gs
pop
imul
in
sbb
push
adcl
icebp
insb
hlt
pop
aam
divl
pusha
fld
lret
fwait
das
mov
lock
sbb
mov
es
mov
into
mov
idivl
xor
sub
test
jae
movsl
aaa
insl
mov
push
adc
sti
or
ret
lret
iret
scas
push
or
add
mov
addr16
cmp
not
out
jl
mov
lahf
lods
ljmp
outsb
pushf
push
out
cmc
shl
inc
inc
fidivrl
fucom
and
in
dec
lea
cmp
jp
xchg
cmp
data16
mov
cmc
cmp
sbb
pop
stc
mov
dec
aam
call
shll
rclb
mov
in
mov
scas
inc
jl
adc
adc
nop
out
add
aad
mov
outsb
dec
rolb
add
push
repnz
adc
fs
aaa
sub
jge
outsl
adc
std
ds
sub
mov
std
xor
test
push
loopne
pop
jns
inc
lods
and
jbe
fcoml
push
cmp
test
imul
loopne
out
add
adc
mov
mov
or
mov
aam
adc
add
mov
mov
cmp
sbbl
fsts
mov
cmpsl
loope
mov
dec
mov
movsl
pop
mov
fwait
insl
sub
push
insb
ljmp
xlat
aad
or
push
in
dec
mov
lods
add
adc
aas
js
in
clc
push
pop
pop
mov
jnp
jbe
adcb
pop
push
add
outsl
mov
xchg
aam
gs
sub
aas
xchg
stc
cmpsb
cmp
mov
lcall
cltd
dec
sti
push
dec
pop
iret
adc
push
mov
sub
sub
mov
icebp
pop
sbb
cmpb
scas
mov
ds
mov
cmc
lahf
pop
jno
mov
cmp
push
and
push
cli
push
mov
ret
out
or
pop
mov
loop,pn
fists
xchg
lcall
push
xchg
jb
repnz
iret
push
adc
lret
in
add
pop
mov
cpuid
mov
addb
pop
test
sub
jmp
jne
std
sub
idivl
add
mov
cmc
push
jne
sbb
xchg
mov
out
xor
call
shll
mov
das
aad
flds
enter
idiv
mov
jb
popf
ja
mov
adc
ja
add
inc
stos
lahf
jnp
dec
pop
or
jo
mov
mov
fs
mov
sbb
movsl
clc
les
cwtl
aas
nop
jmp
aaa
pop
cs
pop
pusha
cmp
or
lods
fidivl
jge
ja
mov
rorb
test
add
int
add
xchg
xor
jb
xor
test
xlat
sbb
lea
cmp
mov
mov
cmp
lods
and
xchg
mov
inc
pop
fimull
movsb
mov
lods
add
jmp
int3
push
imul
loopne
mov
mov
lods
push
inc
jnp
into
lods
sub
push
aam
inc
mov
push
mov
sar
ret
repnz
movsb
fistpl
pop
sbb
mov
pop
lods
sbb
mov
mov
jge
cmpsl
jmp
pushf
xchg
dec
popf
mov
out
sarl
je
fsubrp
daa
in
or
inc
xchg
loope
mov
cmp
mov
xlat
repz
lea
sbb
pop
jae
ret
mov
imul
out
scas
repz
inc
adc
dec
adc
sbb
or
cmp
insb
in
adc
sbb
mov
add
das
mov
in
ret
jbe
inc
fbstp
in
dec
in
add
fmuls
sbb
out
cmpb
in
push
push
punpckhdq
test
jg
lahf
push
add
rorb
andps
xor
ljmp
dec
xchg
shrl
xchg
dec
or
mov
xchg
mov
sbb
lock
xlat
inc
daa
ds
ss
sub
pop
test
int3
push
lret
popf
or
shll
popa
and
lods
mov
clc
push
mov
push
and
pusha
int3
mov
push
dec
mov
mull
ss
adc
dec
xor
adc
stos
test
cld
fistpll
push
gs
pop
lock
loope
jp
push
jg
jb
pop
aad
sti
imul
stc
call
neg
jne
or
dec
push
movb
fsubs
hlt
push
inc
jne
scas
sbb
fnstenv
bound
pop
pop
xor
pop
clc
and
inc
pop
jl
cmp
inc
push
ss
push
cli
dec
fwait
mov
and
fidivrl
and
cmpb
fiadds
push
inc
stc
daa
stos
xor
and
nop
mov
loopne
into
aaa
dec
and
sbb
pusha
push
scas
xchg
mov
lret
cmp
xor
mov
idiv
insl
mov
imul
and
and
cmc
ret
cmp
outsb
testl
fstp
pusha
adc
xor
fisubrs
shll
lret
push
iret
adc
adc
in
insb
aad
and
or
adc
leave
arpl
xchg
cmp
inc
leave
sbb
ret
adc
inc
es
inc
subb
adc
pop
aaa
daa
jle
pop
dec
aaa
cld
mov
or
pop
les
mov
dec
sub
sbb
add
inc
sbb
sahf
mov
rcrb
lock
and
add
xor
inc
cmp
mov
and
loop
aas
xor
movsl
mov
inc
int
clc
xor
push
mov
inc
push
jb
scas
ljmp
data16
jns
cmp
sti
mov
sahf
adc
icebp
and
mov
or
icebp
and
popf
push
popa
cmp
sub
xchg
repnz
sbb
push
je
cmp
ss
sti
cmp
ret
push
jg
pop
es
movsb
push
xchg
or
pop
and
les
loope
pop
orb
iret
js
cmp
mov
repz
push
sbb
pop
popa
dec
cmc
push
mov
mov
inc
cmp
call
xchg
pop
push
unpcklps
je
cwtl
out
jl
addr16
fs
inc
lds
pop
cmp
outsb
or
add
xchg
dec
loope
inc
incb
push
xchg
sbb
aas
ljmp
hlt
std
pop
lret
and
jg
or
push
xchg
fisttps
push
cs
les
jl
dec
lahf
cmc
xchg
dec
gs
outsl
ret
mov
cwtl
rcl
inc
cld
add
mov
out
lret
mov
shl
push
inc
and
sbb
jge
xchg
adc
cmc
ficompl
andb
fnstsw
push
loopne
ret
scas
xor
pop
xchg
mov
mov
add
push
jmp
pop
mov
jp
js
push
mov
pop
scas
je
add
sub
xor
cli
cli
dec
lock
dec
jg
pop
aad
jp
sub
ret
and
inc
cs
dec
enter
push
andl
adc
jle
aam
imul
pop
push
push
pop
xor
sub
cmp
call
addr16
in
mov
cld
outsb
sbb
mov
rolb
in
orl
sti
out
inc
push
nop
mov
add
fdivr
mov
ds
sub
xchg
cmp
mov
pop
cmp
daa
pop
test
lret
mov
or
aam
test
data16
mov
arpl
push
std
or
fdivr
sub
lock
mov
int
mov
cmp
stc
out
iret
push
mov
add
inc
mov
pop
fstpt
orl
popf
xchg
jae
mov
lods
jo
mov
cmpsl
cli
cltd
add
leave
repz
and
push
fldcw
lods
ret
scas
fcoms
cmpsl
dec
add
loopne
adc
out
loopnew
adc
and
push
in
int
lret
cld
shr
xchg
add
out
insb
ret
push
fadds
xchg
fsubr
xchg
push
cmp
in
dec
arpl
stos
cli
or
dec
fsubr
roll
mov
jecxz
and
js
popf
pusha
xchg
mov
or
inc
fwait
mov
and
mov
rdtsc
lds
xor
addr16
adc
jae
stos
mov
popf
mov
and
inc
aas
test
pop
xchg
popa
scas
movsl
fcompl
jae
arpl
cwtl
int3
push
loopne
xor
je
jae
aas
sbb
rolb
pushf
push
xor
xor
sbbb
dec
jae
aam
and
pop
or
mov
push
pushf
inc
dec
out
xlat
adc
mov
fcompl
imul
addr16
jmp
adc
dec
ret
cld
in
jecxz
pop
fxam
lcall
lock
sarl
das
mov
or
sub
stc
jg
cltd
mov
and
dec
cmc
inc
negb
pop
in
sar
mov
aas
mov
push
xchg
push
xchg
je
imul
and
iret
pop
adc
cwtl
repz
or
test
stc
and
mov
cmp
pusha
test
inc
enter
sub
adc
rcrl
popf
pushf
xchg
outsl
xor
pop
or
push
movsb
outsb
int3
mov
push
push
push
jmp
jne
and
mov
add
mov
aaa
fisttps
lcall
jmp
jmp
sbb
xor
push
jb
dec
ds
lock
mov
adc
adc
mov
mov
sbb
adc
dec
jg
ja
dec
push
dec
insb
outsl
cs
mov
mov
in
and
je
ss
fildll
roll
jns
fsts
inc
jp
data16
in
mov
testb
in
mov
arpl
mov
roll
mov
loop
rcll
or
adcl
push
mov
out
popa
and
repnz
fadd
call
into
jne
stc
mov
out
iret
cmp
rcl
movsb
hlt
jns
jmp
mov
xchg
sbb
fsubr
or
repz
jb
shr
clc
pop
negl
testl
sub
mov
shrl
movsl
loopne
mov
insl
in
add
frstor
fs
mov
or
scas
clc
push
jb
cmc
cwtl
jns
movl
jb
aam
mov
push
dec
mov
dec
dec
xor
mov
adcl
daa
dec
sub
push
xchg
sbb
push
out
int
aad
cltd
cmpb
mov
in
movsl
imul
dec
xlat
lea
xchg
xor
outsb
iret
cmpb
and
adc
jns
cmp
and
lock
push
or
in
mov
mov
xchg
mov
push
fsubs
out
sbb
and
test
shrl
sub
stc
jmp
adc
sbb
outsl
sbb
or
insb
loopne
adc
outsb
and
test
xchg
xchg
push
xorl
cmp
xor
out
test
xchg
xchg
mov
pop
sbb
sub
jecxz
insl
je
nop
xchg
cbtw
xchg
xor
sub
stos
cmc
rcr
jo
mov
add
cmp
mov
push
and
mov
jg
in
in
inc
jne
push
jbe
mov
jle
ljmp
adc
loopne
mov
xchg
dec
mov
jae
mov
sub
mov
add
movsb
shll
jmp
popf
pop
or
inc
divl
fsts
roll
jmp
sub
icebp
hlt
add
cmpsb
lcall
lock
jnp
inc
xchg
stos
movsl
lods
cld
xchg
incl
add
push
loop
xchg
loopne
mov
jo
imul
mov
mov
fs
jecxz
lret
push
in
aam
lahf
jno
mov
inc
jp
and
push
jl
aad
inc
xor
popf
cmc
shr
testl
xchg
add
out
push
popf
sbb
xor
int3
push
out
daa
inc
loopew
stc
xchg
jbe
popf
fldt
mov
int
adc
jg
and
jbe
test
mov
pop
out
inc
lret
xor
cmpsl
lret
subb
pusha
mov
popl
mov
inc
add
insb
scas
arpl
fcoml
sbb
pusha
sub
sarl
outsl
cmp
ja
bound
push
scas
adcb
test
jge
inc
scas
fldt
mov
out
pusha
lock
jno
mov
out
jle
pop
mov
xchg
fisubl
out
and
cmovg
pop
dec
cmp
rcll
imul
hlt
push
xor
sbb
dec
pushf
lds
xchg
lret
adc
mov
mov
sbb
cmp
ds
and
mov
pop
and
or
sub
in
add
test
xchg
mov
insl
mov
in
xchg
cli
xor
in
ss
scas
mov
add
sbb
fdivs
cmp
movsl
jns
movsb
mov
int3
dec
int3
xchg
add
insb
adc
sbb
or
popl
mov
shlb
cmp
sub
push
out
out
mov
cli
fsubs
jns
test
andb
cmp
rorl
add
rclb
std
and
jae
jae
fcoml
imul
mov
ret
sbb
xor
jge
sti
pop
data16
outsb
shrd
lods
inc
mov
es
push
fwait
adc
cmp
lods
movsb
js
or
repz
push
and
xor
pop
testl
inc
push
push
pusha
fnstenv
scas
aad
les
test
rorl
xor
mov
or
cmp
jne
mov
cmpsb
push
xchg
cmp
adc
pop
bound
jp
mov
scas
jp
mov
mov
adc
and
push
and
jb
ret
mov
ret
cmpsb
jp
xorb
jb
jae
bound
je
daa
test
xchg
insl
sub
cmc
int
lock
fidivrs
jne
xor
sarl
notb
mov
shrl
push
andl
sahf
fsubl
pop
clc
mov
imul
and
aad
roll
sbbb
xchg
insl
xchg
in
lds
lcall
pop
pop
dec
test
mov
ljmpw
fs
scas
mov
and
fs
mov
andl
sub
test
sub
out
sbb
add
outsb
jns
icebp
ficomps
fcompl
add
sub
jg
jb
jmp
mov
lahf
mov
mov
arpl
dec
icebp
data16
dec
in
das
mov
mov
arpl
addr16
cli
clc
cld
jns
cli
ret
mov
movsb
adc
dec
inc
arpl
sub
sbb
push
fldt
int
mov
adc
sahf
jecxz
std
pushf
test
add
cmpb
repz
iret
xlat
sub
fsubr
loope
sub
xor
mov
or
addr16
xchg
xchg
xchg
lret
cwtl
push
sub
mov
inc
in
and
cs
fmuls
data16
fimull
sub
mov
push
popa
ja
jmp
repnz
jno,pn
pop
and
aaa
add
movsb
jl
xchg
pop
mov
ljmp
lcall
fwait
jle
jae
test
mov
mov
lock
mov
mov
out
iret
sti
or
out
jo
jecxz
jns
je
out
sub
or
sbb
sbb
add
out
jae
sub
mov
dec
fidivrs
inc
mov
add
pop
mov
lcall
mov
dec
jnp
clc
add
mov
inc
subl
das
outsb
jns
jmp
aas
sub
inc
rorb
add
or
and
mov
out
mov
adc
repz
and
fs
lock
test
push
cmp
mov
in
rep
out
sahf
das
cmp
js
stc
push
or
xchg
out
fucompp
inc
js
les
jmp
cmp
xchg
bound
mov
movsb
loop
pusha
pop
out
js
mov
cmp
ror
sbb
xchg
jmp
inc
ljmp
jnp
cmp
mov
std
inc
mov
aam
or
stos
sbb
inc
in
lahf
adc
cmpsb
in
frstor
jns
dec
fwait
mov
pop
sbb
out
mov
or
push
ljmp
aas
mov
mov
mov
pop
and
fwait
lods
insl
pop
or
fiadds
jno
pop
xor
sahf
inc
les
jg
sbb
int3
jbe
fisubl
mov
mov
cmpl
aam
add
js
aad
mov
test
fmuls
adc
pop
loop
cmc
cmpl
xchg
xchg
xlat
pop
fdivs
testl
aaa
clc
xchg
hlt
lock
int
and
jo
movsb
mov
test
adc
lret
sbb
call
shll
pop
rcr
out
mov
out
and
xchg
std
inc
aad
dec
cmp
sbbl
ror
loop
inc
push
lea
aaa
dec
lcall
adcl
loopne,pt
test
repnz
pop
mov
push
out
pushf
rorl
std
mov
dec
fnstcw
in
sub
mov
in
imul
xacquire
adcb
push
test
ret
bound
cmpsb
xor
push
cmp
inc
imul
in
xchg
xchg
enter
mov
sub
stc
xchg
mov
xchg
ficoml
in
mov
out
inc
xchg
sub
sbb
psrld
xchg
inc
jmp
mov
pop
das
repz
arpl
sbb
dec
mov
scas
sub
inc
adc
test
mov
inc
xor
jg
and
or
pushf
jp
dec
sbb
cmp
adc
pop
mov
pop
cmp
mov
mov
inc
jle
xchg
sahf
or
xor
loopne
imul
fidivrs
mov
inc
lret
mov
and
fwait
icebp
jne
lea
enter
movsl
aad
inc
jle
xchg
addr16
addr16
dec
jecxz
ss
or
pop
insl
push
mov
sub
daa
mov
pop
fsts
lcall
jle
ret
and
sbb
ljmp
nop
xchg
cmp
sbb
cmc
shr
mov
mov
lods
or
loope
push
ret
add
cmc
xchg
jl
stc
cmp
cmp
in
push
in
int
insl
insl
outsb
mov
inc
filds
fldenv
faddp
jmp
pusha
idivl
cli
pop
repnz
fisubl
sub
xor
sarl
sbb
mov
inc
addr16
lahf
mov
pop
sti
push
push
jb
or
jl
shlb
out
pop
xor
adc
js
mov
xchg
cmp
ret
adc
xor
loop
pop
in
aas
mov
mov
adc
pop
outsb
notb
mov
hlt
pop
jo
mov
sarb
sub
mov
cmp
adc
aas
gs
inc
xchg
xlat
filds
xorl
loop
iret
mov
xor
out
dec
movsl
ss
out
out
and
das
mov
xor
adc
ljmp
outsb
sub
ret
cwtl
xchg
sub
ja
pusha
or
or
jbe
fcmove
mov
xchg
popf
stos
dec
test
test
push
xor
jbe
in
xchg
inc
pop
cmp
lret
test
sub
lahf
pop
cli
rolb
adcl
mov
lahf
lcall
sub
fdivl
je
xor
lcall
mov
add
loopne
mov
or
lock
ljmp
lret
cmp
jmp
stc
int
push
loopne
mov
aaa
dec
scas
or
jnp
jmp
add
jbe
jge
mov
adc
dec
loopne
shlb
incb
fbld
arpl
inc
mov
push
xlat
push
jle
fwait
dec
stos
mov
jp
nop
js
mov
add
sbb
xlat
pop
push
jmp
cmp
xlat
or
dec
pusha
imul
jbe
repnz
jg
sbb
mov
lock
adc
xchg
inc
and
scas
push
daa
cltd
int3
push
fistl
lea
icebp
jne
jmp
call
mov
inc
imul
or
fcmovb
fidivrs
jbe
sub
incl
and
fadds
sub
les
nop
call
cmp
cmp
hlt
cmp
cmpsb
inc
dec
mov
inc
movsl
pop
mov
aas
fldl
fnstcw
mov
js
jne
push
popa
or
ret
fwait
push
jg
or
int3
int3
jmp
cmp
sbb
mov
or
es
mov
inc
leave
in
repnz
sbb
iret
xor
enter
xchg
sub
adcl
add
lds
in
fidivrl
popa
push
sub
rcrb
pop
js
adc
fstpt
loop
inc
repnz
mov
shlb
hlt
imul
out
inc
push
data16
negl
test
mov
cmpb
and
sub
mov
jg
pusha
sub
cmc
test
mov
jg
cmp
test
gs
rorl
std
mov
jl
cmpsl
daa
and
insb
xchg
lahf
sub
repz
out
data16
stc
sub
out
enter
repnz
jne
fnstcw
outsl
xor
push
cmpsl
xor
jmp
inc
inc
xchg
es
mov
fadd
mov
test
das
movsl
jnp
arpl
loop
and
inc
call
pop
leave
lods
xchg
mov
cmpsl
cli
push
xor
popf
push
ja
mov
test
adc
or
lret
push
shrb
iret
jg
test
add
cltd
cli
xor
test
movsb
xor
jecxz
mov
push
dec
sbb
jge
shrl
mov
das
inc
fisubrs
jl
jmp
push
addr16
test
push
das
dec
and
mov
popf
cld
mov
xchg
xchg
pop
fsubrs
adc
pop
xchg
push
add
mov
jge
stc
cmpl
aam
and
sbb
add
push
push
jb
xchg
popa
clc
inc
lcall
dec
loope
test
push
cmp
frstor
shlb
pop
imul
xor
mov
push
jb
in
jmp
das
add
xor
ret
add
cld
lods
jp
mov
loopne
imulb
and
nop
fidivrl
pop
mov
out
mov
call
repz
mov
int3
dec
xor
xchg
mov
cmp
add
mov
mov
scas
xor
stos
dec
cld
test
cmp
das
divl
mov
ljmp
mov
or
lods
dec
xorb
sub
or
pop
enter
lret
pusha
sub
dec
or
and
xchg
aas
outsl
movsb
out
lea
push
out
stos
jmp
notl
cmpsl
in
dec
inc
ret
out
ljmp
test
andb
add
and
pop
std
push
sub
xchg
fwait
mov
mov
jmp
pop
jns
daa
adc
lret
popl
push
push
push
inc
sub
loope
je
or
add
mov
jae
jl
pop
pop
lea
jecxz
cmp
push
jno
inc
and
cmp
xlat
mov
mov
push
iret
xor
xchg
cwtl
push
sbb
jg
cltd
aaa
sub
fsubrs
dec
push
scas
jo
jge
sti
dec
pop
nop
out
adc
and
inc
and
andb
adc
in
cmp
sbb
popa
hlt
sub
orl
push
dec
and
lahf
scas
adc
sahf
ret
cld
jg
mov
das
cmc
jmp
loop
mov
mov
test
popa
add
int
loop
rclb
rcrl
xor
or
aam
dec
lds
mov
clc
or
insb
popaw
jl
jl
mov
cmp
mov
test
sbb
and
sub
mov
jl
adc
pop
jmp
psrlw
jle
popf
loop
or
cli
adc
shll
xchg
ljmp
add
fwait
or
lds
insb
xchg
ret
cmp
push
call
dec
sub
jno
fdivs
xor
or
insl
lods
dec
lock
sbb
cmp
mov
ret
inc
push
cmpsb
insl
pop
ja
scas
daa
xor
dec
cltd
ds
sbb
jp
dec
xchg
pop
je
fidivrs
mov
and
aad
xchg
daa
mov
pop
inc
inc
pop
pop
icebp
mov
ss
dec
shrb
test
frstor
in
xchg
mov
int
pushf
stc
or
nop
loop
sbb
adc
or
pop
sub
push
mov
sub
stc
aas
or
shlb
popf
fs
and
mov
xchg
cmp
flds
cmp
test
xchg
nop
or
out
sbb
xor
pop
add
lahf
in
fildl
mov
push
stos
fdivp
imul
pushf
movsl
mov
sbb
addr16
dec
pop
and
fildl
xchg
mov
mov
sbb
xchg
fcomps
xor
in
loope
addr16
inc
xchg
cmp
adc
mov
mov
out
mov
jmp
popf
add
inc
xor
pop
or
push
mov
lret
sbb
ss
fmull
mov
movsb
leave
in
cmpsb
push
mov
cmp
mov
dec
div
jnp
insb
mov
out
or
sti
jae
cmpsb
pop
pop
xchg
jmp
adc
ds
stc
sbb
adc
dec
adc
add
mov
outsw
dec
jno
stos
mov
cmp
push
in
or
jecxz
iret
call
adc
mov
scas
inc
pop
sbb
jle
push
cmp
lds
sahf
jle
push
out
adc
orl
mov
cmp
roll
jnp
sbb
jge
test
push
das
mov
cmpb
xor
jns
lcall
inc
mov
add
lret
xchg
aas
pop
mov
pop
lods
cs
push
inc
repnz
sub
dec
sti
sbb
xlat
xor
in
popf
addr16
stos
dec
fmuls
mov
int
or
hlt
cltd
xchg
cwtl
shlb
repnz
cmc
loop,pt
dec
fiadds
fdivs
mov
or
cmp
jl
or
stos
popf
mov
pop
mov
subb
loopne
test
clc
push
inc
jb
test
jno
imul
mov
or
sbb
test
fs
fsts
jle
cmc
mov
les
sbb
pop
xchg
add
or
icebp
es
add
push
or
pushf
test
stos
xchg
pop
stos
sbb
shr
aam
das
es
ret
cmpsb
ret
outsl
loop
mov
dec
repnz
cltd
xchg
scas
scas
sub
notb
jle
out
ljmp
pop
and
outsl
jp
cmp
pop
sub
jg
out
repnz
gs
cwtl
dec
jbe
push
cld
jo
push
push
test
lret
push
jle
shlb
add
xor
ds
jnp
mov
sbb
xor
pop
lds
pop
push
push
xor
jo
les
lea
or
popa
adc
out
and
and
inc
or
addr16
adc
push
out
inc
mov
sbbl
lods
dec
icebp
call
lahf
out
les
test
pop
jmp
inc
stos
fcoml
movsb
dec
popf
incl
outsl
outsb
andl
pop
pop
jmp
lea
jo
push
push
mov
xorl
and
pop
or
in
lds
pop
das
sbbb
push
test
xchg
xor
or
and
repnz
cmp
fcmovnbe
sahf
mov
cwtl
js
cwtl
daa
incl
in
adc
adc
test
mulb
out
cmp
sub
mov
add
jno
lock
xor
ljmp
dec
xorb
xor
lcall
cmp
mov
std
out
jb
dec
mov
and
fcoms
cli
clc
and
stos
rclb
mov
pop
aam
test
jb
in
rcr
lret
cwtl
adc
fcoml
js
fwait
cmp
ss
dec
clc
in
jno
out
addr16
stc
fidivrs
mov
cmp
sub
cmc
inc
fwait
in
insl
push
shlb
ja
inc
shl
sub
push
js
les
inc
inc
imul
xorl
push
test
lds
add
mov
mulb
dec
mov
dec
popf
mov
mov
jne
insb
jmp
push
xchg
ftst
mov
fisttpl
ljmp
pop
xchg
jp
and
add
test
bound
cs
push
inc
xchg
sub
inc
mov
decl
outsl
in
iret
fidivrs
and
in
cwtl
adc
and
sub
out
jge
clc
cmp
inc
repz
loope
xor
jge
dec
ret
mov
and
and
insb
or
aaa
js
sbb
cli
mov
inc
pop
jg
dec
das
test
sub
adc
xchg
gs
cmp
or
insl
iret
push
jge
rcl
incl
mov
cmp
pop
xchg
sub
lock
jecxz
and
xor
and
mov
or
lcall
xor
cld
fildll
xor
add
jne
int
aad
ljmp
adc
inc
and
push
lret
push
xor
aad
mov
fwait
lret
or
cmp
ss
repnz
add
aas
pushf
and
enter
mov
inc
cs
adc
cmp
or
arpl
push
shll
sub
ja
inc
dec
rorb
lcall
pop
pop
jl
fdivrs
cmpsl
xchg
aaa
add
andl
jae
in
xor
add
out
cmp
mov
xor
xor
push
pop
mov
add
cmp
js
sbb
pop
mov
jb
xor
adc
jae
sbb
out
sub
test
xchg
jae
insb
lahf
mov
inc
ds
test
icebp
mov
inc
jmp
lahf
mov
fcomps
lret
popa
push
clc
adc
int
jge
mov
jmp
lock
cmp
notw
test
xor
cli
fists
notl
nop
jl
iret
or
push
mov
lds
pop
sub
lret
mov
jnp
mov
idivl
or
and
inc
clc
pop
adc
and
sarb
aad
sti
adc
adc
cmp
nop
jo
ljmp
lods
loop
test
pop
cmpsb
lods
orl
sub
into
stc
mov
bound
push
fcmovnbe
pusha
stos
and
push
xorb
jno
outsl
sbb
sub
adc
sbb
loop
dec
xchg
aaa
rclb
push
jecxz
addl
aas
cmpl
icebp
les
sub
int
lods
and
adc
push
sbb
leave
iret
into
mov
int
xchg
add
and
test
icebp
jle
sub
mov
mov
popaw
mov
pop
fldt
rorl
and
int3
fwait
dec
jp
lods
mov
xor
stc
mov
inc
push
cld
lock
out
lods
xchg
xlat
aad
out
jnp
xlat
push
fbstp
xchg
clc
add
or
cmp
aas
cmc
push
lret
dec
rol
inc
sahf
shrb
push
lahf
daa
push
rol
aad
lods
sahf
and
jmp
cmp
adc
int
scas
adc
or
cwtl
jae
cmp
insb
mov
sub
adc
adc
adc
pop
xchg
mov
dec
enter
lods
out
mov
xchg
or
push
adc
out
sbb
xor
xchg
add
xor
insl
xor
sbb
fildll
jbe
pop
insl
test
sbb
xchg
arpl
pop
lods
stos
pop
lret
imul
lock
faddl
scas
outsl
pop
push
adc
aas
pop
add
ss
movsl
adc
gs
cmp
push
std
add
or
imul
shll
in
les
shlb
lds
mov
adc
pop
fs
out
call
mov
imull
loopne
mov
push
lds
mov
stc
fisubs
mov
nop
sbb
sbb
push
sahf
loope
fs
sub
cld
and
mov
aaa
sbb
mov
gs
jne
sub
and
stos
and
inc
fstp
dec
mov
fisubs
sahf
hlt
je
pop
inc
cmc
or
inc
and
shlb
add
or
or
mov
jp
inc
adc
data16
adc
stos
aas
inc
mov
out
xor
pusha
clc
rcrb
out
and
mov
sub
push
lret
or
mov
push
xor
xlat
and
outsl
psubsw
clc
and
or
xchg
cmp
insl
mov
aad
loope
mov
inc
adc
pop
inc
lret
xchg
stc
mov
in
add
adc
sub
insb
xchg
pop
push
xor
daa
mov
add
mov
push
fdivrl
and
insl
gs
dec
mov
dec
and
or
or
mov
lcall
sbb
call
lods
mov
xor
add
fidivl
or
cs
sbbb
stos
push
jns
ja
mov
aaa
sbb
mov
cld
pop
xchg
push
mov
call
out
dec
sbb
dec
aaa
cwtl
adc
adc
mov
mov
adc
outsl
mov
dec
sbb
stc
xchg
pushf
lea
sbb
adc
jge
or
jg
or
cwtl
call
jge
cmp
mov
fstl
in
or
xchg
sbb
mov
and
stc
es
hlt
or
aam
int
mov
mul
jle
ret
mov
lcall
jp
pop
jo
mov
out
in
cmp
jbe
and
and
dec
call
cmp
inc
sbb
test
mov
push
mov
add
gs
icebp
ja
xchg
lods
mov
jle
sub
out
test
pop
jecxz
mov
mov
pop
cmp
pop
daa
or
push
outsb
pop
nop
push
adc
fs
jbe
add
add
pushf
and
lea
aam
dec
cmp
int
xor
das
mov
push
xorb
sub
add
ret
and
adc
loope
adc
enter
int3
pop
nop
jmp
mov
lods
add
leave
adc
mov
mov
sub
adc
mov
cmc
push
xor
jle
mov
mov
jl
mov
enter
and
sahf
push
sarl
push
fildl
icebp
lret
add
orb
decb
ret
out
popf
int
test
pushf
inc
sbb
imull
jg
test
xchg
sti
xor
xlat
lcall
pop
push
fisttpll
popf
jge
cmc
adc
cld
jl
adc
lods
pop
xor
mov
push
mov
pushfw
dec
es
outsl
aad
xchg
push
xchg
outsl
icebp
dec
push
add
sbb
add
add
sahf
and
cmp
cmp
into
push
pop
and
pop
iret
add
popf
xchg
push
dec
popa
or
mov
mov
cmp
or
mov
ret
xor
test
aam
pop
mov
cmc
out
imull
sbb
enter
xor
jg
sub
test
xchg
xlat
cltd
cmpsb
xor
lret
gs
cmp
jbe
fcoml
push
xor
sahf
dec
fs
addl
out
cwtl
xor
sub
sub
jae
xor
sub
rorl
and
lods
imul
imul
xchg
push
fscale
scas
mov
inc
pop
movsb
mov
ror
in
sbb
sub
je
aad
inc
lods
cwtl
fxtract
mov
pusha
sub
in
stc
in
enter
push
push
cmp
xlat
int3
cltd
nop
sbb
xchg
fisubs
xlat
jns
das
lcall
stc
jnp
xchg
xor
outsl
xor
stos
jae
sub
push
movl
mov
or
popf
cmp
push
icebp
xor
sbb
jecxz
xchg
sub
sbb
pop
mov
inc
inc
ror
popf
cld
sbb
shll
in
pop
sbb
pop
imul
das
mov
pop
adc
cs
mov
paddw
stc
add
das
xchg
push
pop
xor
int3
cmp
out
inc
xchg
mov
lahf
fistpll
pop
mov
dec
in
fistps
enter
dec
pop
popa
pop
push
jecxz
je
out
fwait
add
push
idivb
addr16
inc
xor
xor
data16
daa
add
push
mov
cmp
je
test
aaa
out
popf
ret
pop
cmp
iret
and
mov
mov
mov
mov
ret
les
scas
cmp
cmp
jecxz
add
adc
sbbl
es
dec
lret
repnz
mov
inc
cld
add
jne
js
mov
xlat
jecxz
mov
inc
xor
xchg
sub
lret
cmp
stos
mov
mov
push
sbb
cmp
aaa
mov
xchg
jecxz
dec
pop
stos
rclb
and
jne
inc
push
popf
push
fisubrl
mov
rclb
add
sub
cmp
pop
push
into
popf
imul
pushf
stos
push
sahf
outsl
jbe
jl
xor
pop
push
mov
push
mov
xor
cmc
cmp
data16
dec
pop
test
into
sbb
xor
jle
filds
push
push
repnz
cmpsb
div
rcl
hlt
or
jbe
sub
push
add
jo
dec
jecxz
xchg
and
inc
jge
cmp
push
sbb
mov
xchg
in
push
xorl
adc
xor
jns
int
inc
pop
mov
das
iret
xchg
stos
xor
icebp
ja
jge
enter
lahf
sub
out
lods
aad
pop
out
roll
iret
dec
into
inc
imul
icebp
mov
insb
xchg
lds
in
out
cltd
lret
and
xor
into
outsb
sar
ret
into
leave
insl
jnp
lods
lods
dec
pop
pop
js
int
rorl
add
mov
test
ret
jo
les
xlat
add
outsl
not
sbb
pop
push
push
lock
push
dec
lcall
dec
cmpl
stos
or
jl
mov
pusha
aad
imul
mov
mov
cmpb
lea
cmp
jl
shll
cmp
pop
hlt
or
in
push
shrl
cld
inc
testl
or
sub
subb
cli
sub
ljmpw
mov
adc
dec
icebp
xchg
sub
sti
adc
jp
rol
clc
iret
das
inc
sbb
lods
or
les
mov
pop
icebp
gs
push
add
ja
pop
lret
push
outsl
into
pusha
jecxz
pop
loop,pn
popf
loopne
in
mov
xchg
mov
xchg
and
mov
dec
lcall
fsubp
stos
loopne
call
push
cs
arpl
push
add
je
sub
push
dec
out
push
lds
cmpsb
loope
scas
and
out
aas
enter
ljmp
dec
sub
lret
adc
sbbl
mov
and
leave
sbb
into
xchg
lock
js
data16
or
out
adc
and
fistpll
mov
pushf
pushl
add
mov
scas
iret
jle
mov
int
loope
sub
dec
sahf
inc
add
add
lea
test
lods
pusha
push
mov
xor
adc
loop
je
imul
iret
ja
xor
dec
aaa
lods
mov
js
lock
lcall
sti
outsb
out
jmp
pop
out
aam
cmpsl
int3
pop
scas
inc
imul
adc
testl
dec
movb
mov
repnz
dec
aam
leave
xor
mov
inc
and
cli
xor
dec
push
mov
add
fstpt
mov
arpl
adc
lret
fwait
int
in
push
or
xchg
push
and
mov
cmp
mov
mov
mov
or
test
stos
into
outsb
loope
cmpsl
stos
imul
ds
not
fsub
lcall
outsb
popa
jle
cmc
add
lcall
add
push
mov
cli
cmp
add
popf
or
xchg
loop
pop
xor
pop
sbb
jle
mov
mov
mov
add
cmp
xchg
daa
adc
inc
test
push
pop
adc
inc
inc
rorl
push
cmovns
xor
and
add
pop
mov
jo
pop
jl
and
in
subb
lahf
rcr
mov
mov
shrb
push
movsb
mov
lahf
data16
mov
mov
sbb
jb
xor
fwait
addr16
les
mov
mov
scas
push
jg
push
push
aaa
rorl
cmp
movsl
lods
movsb
xchg
mov
insl
loop
call
lds
add
gs
lahf
clc
fldcw
sbbb
insb
pushl
fnstenv
jmp
pop
int
adc
xchg
xchg
push
adc
movsl
lds
setg
jle
mov
mov
dec
mov
pop
adc
xor
xchg
xchg
dec
xchg
int
sbb
inc
push
mov
jo
push
jns
push
lret
jge
subl
cld
fdiv
int3
pop
jbe
inc
mov
out
adc
xchg
jbe
fldcw
imul
mov
stc
insb
scas
jnp
mov
inc
gs
int3
call
or
loope
rol
clc
pop
lock
cld
pop
push
inc
js
mov
dec
mov
xor
lock
pop
mov
aad
int
adc
jns
adc
inc
outsl
in
mov
jge
xchg
cltd
adc
stc
pop
xchg
pusha
jecxz
jnp
movsl
jbe
out
inc
ja
jo
jb
sbb
add
sbb
test
out
add
retw
arpl
push
jmp
cmp
or
jp
xor
movsl
adc
movsb
cmp
mov
or
mov
pop
mov
jae
jae
or
out
lods
mov
dec
mov
and
xor
push
push
cmpsb
and
add
push
loopne
sub
fcmovnbe
cmp
and
out
ds
pop
xor
dec
or
add
cs
cmp
inc
cwtl
push
push
mov
inc
xor
outsl
inc
bound
shll
insl
frstor
out
sahf
xor
pop
testb
pop
pushf
shlb
cmpb
jmp
mov
pop
push
push
ficoms
cli
sub
scas
fdiv
rorb
shl
xor
push
arpl
fstl
daa
outsb
pop
mov
shll
ffreep
ret
sbb
lret
leave
add
inc
addr16
popf
sbb
call
mov
push
xorb
mov
scas
add
push
jmp
cs
sub
in
mov
shrb
jg
call
jg
enter
push
mov
inc
out
adc
jge
mov
hlt
scas
dec
jmp
scas
ss
fdivrl
shlb
sbb
mov
mov
test
subl
adc
cltd
add
out
mov
pop
push
lods
sbb
xorl
add
pop
sar
pop
push
rorl
repz
mov
adc
int
cmp
je
xadd
push
pop
xor
faddp
pop
adc
imul
outsb
js
sub
sub
jns
pop
lock
xor
daa
dec
or
push
enter
and
sti
mov
leave
sahf
jb
lret
mov
je
mov
idivb
mov
push
mov
xchg
and
or
in
nop
pushf
fistpll
mov
cltd
ds
out
mov
lods
push
cmp
cmp
mov
into
outsb
jmp
adc
mov
push
pop
icebp
cmp
cld
fs
jns
stos
cmp
push
out
int3
call
pop
mov
je
lahf
ficompl
jge
mov
addr16
ret
call
add
push
sbb
pushf
jge
in
push
out
shrl
sti
jno
sbb
jge
pop
pushf
mov
fiaddl
fldt
popa
js
mov
mov
pop
dec
cmpsl
mov
xor
sbb
leave
les
jbe
inc
adc
dec
sub
fisttps
cltd
hlt
xchg
fxch
test
repnz
aaa
ss
ja
mov
sbb
je
daa
movb
cmp
cmp
cwtd
mull
sbbl
xchg
xchg
jnp
rcr
add
adc
push
push
std
fimuls
test
push
add
dec
cmp
arpl
sub
arpl
out
mov
sbb
push
gs
sub
fidivrs
lods
xchg
repz
mov
fldcw
xor
sub
test
jo
cmpsl
mov
clc
scas
imul
lahf
pop
pop
jle
cli
add
arpl
inc
sbb
cli
jbe
aas
and
xor
out
in
and
popf
out
je
nop
pusha
sub
pop
pop
push
jmp
and
fildll
cs
cmp
bound
lods
pop
test
jp
sbb
shrb
fiadds
and
jg
mov
push
imul
ds
xor
push
xchg
push
ss
loope
lds
mov
sbb
xchg
in
xor
daa
jl
mov
or
jg
lods
cs
xlat
xor
cwtl
hlt
jo
outsl
sahf
mov
or
shrl
mov
dec
push
sbb
fs
cmpsl
mov
mov
xlat
mov
fdivrs
and
or
in
inc
pop
dec
dec
gs
xchg
scas
add
mov
dec
inc
lea
lret
xchg
lea
int3
enter
jg
mov
das
jb
mov
cltd
mov
mov
jl
daa
inc
inc
pop
mov
ud1
nop
add
int3
cmpxchg
xchg
push
dec
dec
fsubs
out
aad
decb
out
inc
stos
lock
mov
fidivl
daa
cmpsl
jp
add
adc
xchg
jnp
daa
jmp
les
fs
mov
xor
sti
addr16
into
and
jae
sbbl
pop
push
sub
mov
rolb
lea
inc
mov
mov
lcall
pop
fists
outsl
and
rcll
mov
pop
jo
mov
push
out
es
dec
dec
imulb
or
dec
std
fisubrs
and
mov
pop
cld
inc
xor
mov
or
pop
das
jne
popf
xor
sahf
test
xchg
and
jge
mov
popa
dec
test
ds
scas
mov
cmp
dec
aaa
and
dec
imul
xchg
mov
mov
dec
xchg
mov
adc
xchg
leave
cs
jo
dec
es
and
adc
pop
dec
mov
in
test
pop
popa
dec
jo
popf
cmpsl
mov
loopne
pop
mov
cmp
lods
add
popa
jae
fs
cmpb
cmp
jecxz
sahf
ss
es
jle
bound
xorl
fcmovnb
jmp
and
ljmp
add
add
and
push
mov
inc
mov
cmc
xchg
sub
inc
add
pop
hlt
rcr
arpl
sahf
flds
daa
mov
enter
nopl
mov
daa
repz
mov
mov
insl
ss
das
cmp
test
scas
sub
clc
divb
or
movsl
add
mov
mov
sub
push
cmp
jecxz
sbb
sub
inc
and
adc
or
in
ljmp
shlb
jle
xor
sbb
pop
push
dec
push
cmp
mov
sub
push
mov
shl
lret
inc
insb
xchg
push
jge
je
lea
pop
jne
xchg
aam
dec
stc
adc
std
mov
push
sub
ret
push
or
mov
aas
pop
shl
xchg
jns
test
pop
adc
push
jne
add
cmp
and
jb
pop
stc
bound
push
mov
mov
xchg
jo
ret
inc
xor
mov
pop
add
add
pushf
xor
and
cmp
or
ja
xchg
sbb
jl
cwtl
rclb
xor
pusha
nop
out
subl
sub
outsb
sub
test
shll
iret
pop
mov
mov
fnstcw
xchg
pop
jne
push
test
mov
popf
mov
mov
in
cld
dec
jl
push
das
xchg
in
inc
pushf
icebp
xchg
jp
jns
cmp
mov
and
sarb
imulb
mov
mov
mov
jns
arpl
ror
and
xchg
and
sbb
out
dec
insl
dec
dec
and
cmp
adcl
or
adcl
out
aaa
call
popf
movsb
int3
ret
sti
adc
mov
jnp
aad
inc
loopne
mov
aas
mov
mov
mov
push
or
adc
mov
cmp
js
cmp
jecxz
mov
mov
faddl
or
mov
popl
aam
inc
es
sbb
mull
dec
lods
mov
dec
repz
test
dec
lock
out
aas
ret
cmpb
or
femms
iret
shl
push
xchg
testb
jge
jnp
inc
adc
bound
pop
aas
outsl
cmp
pop
add
push
gs
js
xchg
shr
in
mov
jnp
in
xorb
xchg
pop
xchg
jmp
cmp
out
push
inc
cmp
sub
adc
out
fstp
mov
rcrb
lea
inc
jle
test
in
jne
or
inc
xchg
or
sub
mov
push
sub
add
hlt
in
ficompl
jmp
orl
cmpsb
std
jbe
push
orl
lret
mov
adc
xchg
add
shll
stos
pop
jg
fmull
cmpl
cmpsb
loope
mov
dec
sarl
adc
mov
mov
int3
xchg
fdiv
test
in
test
mov
or
nop
dec
push
sahf
inc
ljmp
addr16
stc
jae
notb
into
xor
mov
mov
inc
mov
pop
aad
mov
mov
std
xorb
fs
sbb
in
in
mov
jnp
mov
cmc
in
jne
imul
das
movsl
mov
test
dec
inc
rorb
xlat
lret
adc
push
out
xchg
js
sahf
sbb
mov
sbb
movsl
dec
sbb
out
push
jg
mov
sub
cwtl
xor
fwait
add
xchg
js
sub
jno
repz
mov
sub
cmp
adc
sub
push
js
addr16
mov
repnz
ds
sub
scas
inc
aas
add
jmp
mov
imul
test
out
pushf
xorl
mov
test
insb
mov
sahf
sub
mov
test
dec
add
or
jae
or
test
pop
xor
or
push
dec
add
loope
xlat
pusha
lods
fwait
sub
std
mov
push
out
jmp
inc
xchg
mov
daa
xor
into
pop
adc
nop
dec
cmc
adc
shrb
add
out
xor
fstl
mov
dec
out
cmp
notl
out
xorl
xchg
inc
std
ljmp
stos
movsl
fidivs
mov
shrb
cmp
lods
or
mov
pusha
jns
adc
dec
push
ret
jle
std
ret
sub
pinsrw
pop
icebp
and
dec
cmc
push
stos
test
cmc
inc
sbb
bound
dec
jne
outsl
push
inc
sahf
popa
and
or
push
mov
scas
in
cwtl
jl
pop
popf
ret
mov
test
fldz
adc
jno
pop
inc
test
jbe
mov
loope
pop
cli
sbbb
adc
or
jl
outsb
or
push
cmp
lret
cmp
push
dec
sti
fcoms
loope
push
pop
out
mov
push
push
loopne
mov
dec
repnz
jnp
pop
lds
mov
clc
adc
icebp
and
jns
out
pop
pcmpgtb
mov
out
shlb
xlat
add
mov
shll
cwtl
cmpsl
mov
and
mov
adc
stos
pop
jmp
push
pop
aas
lret
lahf
enter
ss
pop
jne
add
push
test
cld
xchg
lahf
add
mov
lcall
xor
jno,pt
lret
or
js
pop
idiv
bnd
int3
jp
fldenv
mov
loopne
pop
sbb
jg
jno
fildll
push
mov
inc
xor
cmpsl
ss
scas
jnp
clc
xor
outsb
push
cmp
mov
sbb
jmp
pop
lahf
and
mov
xchg
mov
dec
enter
or
mov
adcl
ds
cs
loop
imul
pop
in
loopne
sub
pop
fdiv
fs
sbb
jbe
pop
into
popf
fldcw
dec
jns
and
jge
fldl
cmp
lret
inc
add
fbld
dec
flds
jp
mull
inc
inc
sub
test
xor
fcompl
insl
cmp
out
cmp
cmpsl
sahf
push
push
icebp
ja
xor
dec
shlb
icebp
gs
inc
ret
mov
cmp
in
roll
std
cmp
in
aam
outsb
stos
frstor
or
adc
mov
pop
popa
sbb
lcall
repnz
push
and
ret
adc
pop
popf
mov
push
ja
shrl
lods
sbb
xor
xor
daa
in
sub
movsl
add
pop
in
mov
push
repnz
mov
cmp
insl
xchg
loope
inc
movsb
cmp
jg
mov
nop
mov
inc
fsubr
adc
outsb
dec
jb
xchg
in
pop
bswap
and
jo
lods
jo
das
or
xor
mov
adcb
jbe
popf
or
jae
leave
test
inc
shll
faddl
rorb
fs
sub
mov
out
mov
jecxz
lahf
adc
ja
adc
loope
mov
inc
and
jnp
insl
xchg
inc
outsb
cmp
out
mov
adc
testb
push
movsl
lret
and
pusha
insb
or
rolb
jbe
sub
into
cmp
out
or
add
lahf
xchg
call
xchg
daa
pusha
push
jle
fldcw
sub
popf
adc
mov
inc
sub
rcrl
mov
stos
dec
xchg
dec
fistpl
xor
in
mov
mov
mov
xor
aaa
in
out
xchg
iret
jecxz
xchg
lds
ljmp
outsl
xchg
subl
mov
pop
dec
fwait
in
js
iret
or
das
push
loop
mov
cmp
add
dec
xchg
ja
or
leave
push
push
mov
rcrb
mov
xchg
add
in
and
shlb
movsb
loop
aas
fbstp
lods
jo
and
addb
cmpsl
jle
nop
ja
cltd
ret
or
push
mov
aaa
out
pop
xchg
or
add
inc
bound
enter
ret
inc
enter
scas
pop
in
shll
stc
dec
sub
xchg
fists
jbe
mov
dec
std
push
xor
inc
lcall
xor
orl
sbb
sbb
mov
mov
push
cmp
repz
arpl
sub
hlt
push
dec
and
cmp
mov
sbb
push
cld
lods
imul
mov
jp
xchg
push
gs
mov
xor
adc
out
cltd
stc
push
fildll
mov
jg
cli
daa
or
arpl
sbb
test
outsb
xchg
int
xchg
pop
fcmovnb
inc
sbb
lret
add
sti
in
hlt
rcll
ljmp
outsb
push
das
ds
ret
jbe
xor
adc
fildl
and
mov
mov
push
enter
add
sub
mul
mov
shrb
mov
mov
adc
pop
lret
in
jge
xchg
and
mov
shrb
cs
cmpsb
inc
scas
fwait
push
add
jmp
sbb
setp
mov
arpl
js
hlt
cwtl
mov
xor
flds
jl
int
jge
sbb
sub
es
sub
test
dec
pusha
adc
callw
dec
popf
test
loope
mov
mov
dec
sbb
and
and
cmp
mov
mulb
addr16
pop
xchg
rcr
pop
jne
stos
push
das
mov
pop
push
xor
mov
pop
push
fwait
jo
bound
in
cmp
sub
fs
mov
jne
ds
jmp
movsb
lea
enter
repz
mov
not
pop
scas
cmp
mov
jl
and
jl
adc
adc
testl
cltd
cmp
pusha
sti
testl
ja
jb
inc
mov
push
out
mov
mov
xchg
jecxz
jae
lods
popf
mov
pop
sub
cmpl
cmc
xor
imul
pop
sub
push
repnz
sbb
mov
into
or
inc
push
ds
cmp
xchg
pop
sbb
ss
shl
in
mov
mov
push
dec
and
push
mov
dec
call
aad
mov
mov
gs
lcall
or
mov
cmp
add
sub
add
pop
jnp
mov
les
enter
mov
sub
mov
pop
or
inc
pop
push
jl
mov
ret
out
xchg
popa
leave
popf
push
add
sub
int3
cltd
cmpsl
cmp
sbb
push
fsubrl
int3
cmp
jmp
xor
push
lods
dec
cmp
test
lret
fcomps
jg
in
idivb
inc
cmp
add
bound
insl
pop
leave
out
jnp
scas
pop
jbe
loopne
cwtl
outsb
clc
and
add
mov
mov
out
push
lret
in
pop
mov
inc
sbb
push
mov
popf
add
out
mov
pushf
push
push
xor
inc
dec
push
mov
lret
lods
add
add
in
hlt
mov
pop
adc
jbe
push
pusha
ret
call
or
sub
and
lret
stos
ss
cs
outsl
repnz
inc
repz
xchg
pop
out
dec
movsb
icebp
push
pop
xchg
add
mov
negb
dec
ficoml
out
add
testl
sub
sub
jb
xor
sbb
dec
sub
int
cmp
cld
mov
lcall
mov
push
push
adc
iret
xchg
or
adc
sarb
and
jnp
mov
xlat
repnz
xor
sbb
js
jno
xor
and
nop
cmp
fdiv
or
push
dec
pop
adc
imul
sub
inc
or
cli
into
dec
aad
cmpsb
mov
pop
bound
adc
das
rcrb
inc
jo
movsl
gs
repz
in
clc
push
push
addr16
xor
sarb
sbb
fadd
ljmp
cmp
mov
inc
scas
in
movsl
loop
lret
or
ds
pop
and
xor
xor
jge
xchg
or
sub
push
mov
mov
cmp
xchg
xlat
sub
jmp
aad
mov
pop
jge
ret
imul
cli
sarl
mov
ret
jo
frstor
xor
aaa
cmpsl
es
aam
test
or
inc
jns
dec
dec
cltd
rcrb
sub
mov
push
pop
jnp
jp
pop
pop
dec
lds
in
std
add
andb
dec
adc
int
cwtl
arpl
sbb
addl
nop
test
jl
sbbl
sbb
out
and
bound
jecxz
inc
push
jge
sub
xchg
adc
pop
addr16
xor
or
mov
jae
push
dec
test
dec
jns
and
lahf
push
aaa
or
orl
sahf
xor
push
mov
fs
pusha
cmp
rcll
sbb
neg
fs
inc
repz
lds
pop
mov
aas
or
push
popa
mov
cmp
cld
outsb
gs
es
mov
test
jecxz
fimull
lods
cmc
sub
int3
sahf
xchg
test
test
stos
jl
jo
cmp
data16
add
inc
lock
in
les
repz
aam
iret
jp
lahf
outsb
jmp
push
or
movsb
mov
mov
cmp
mov
cmp
inc
inc
scas
jecxz
shll
aad
int3
movsl
ja
sub
push
bound
pop
fsubr
jb
in
sub
or
cmp
es
mov
bound
xchg
nop
dec
cli
mov
mov
ret
in
add
pop
mov
stos
mov
sti
loop
fisubl
jmp
push
pop
mov
in
mov
insl
pushf
xchg
push
hlt
add
cmp
add
out
push
push
xchg
out
or
xchg
cmp
lea
pop
clc
fs
mov
add
xor
arpl
addr16
scas
mov
cltd
aaa
mov
dec
addr16
mov
rcrl
cltd
stos
jno
or
out
xchg
adc
mov
lcall
add
in
mov
aad
add
sbb
pop
xchg
xchg
xchg
enter
mov
jbe
mov
icebp
mov
fnstenv
inc
jne
mov
or
add
push
cmp
mov
das
inc
adc
icebp
outsb
es
add
fidivrs
xor
into
mov
popf
push
fiadds
add
bound
xchg
or
dec
and
sahf
das
mov
fisttpl
pop
sub
dec
lcall
bound
xor
pop
jne
sub
push
das
data16
mov
sbb
xchg
repz
in
sti
inc
out
cmp
cmp
rcrb
jle
pushf
sbb
lods
mov
sbb
mov
into
cmp
mov
sbb
imul
mov
fs
in
mov
and
inc
mov
sub
sahf
mov
add
adc
rcr
sub
lods
lods
sti
xor
movsb
sbb
xchg
out
push
rcl
pusha
ljmp
push
cmpsl
scas
fnstsw
mov
inc
iret
sub
or
sti
sub
xchg
lds
sbb
sub
pusha
mov
sub
into
call
icebp
fscale
cli
stos
jno
mov
and
int
daa
add
xchg
jb
cmp
frstor
adc
inc
xchg
pop
mov
arpl
mov
jae
out
scas
mov
fdivrs
nop
mov
xchg
jmp
dec
and
sbb
xchg
mov
lock
pushw
or
cltd
xor
test
inc
dec
add
test
pop
mov
sbb
out
or
or
push
inc
enter
lds
cmp
add
or
jp
adc
out
ret
idiv
jle
inc
mov
rorl
lods
das
enter
dec
or
int
push
out
push
xchg
lret
jb
mov
mov
bound
subb
std
popa
popa
push
and
mov
mov
idivb
rcrb
inc
push
fdiv
popf
mov
fs
mov
out
ret
and
inc
negb
add
mov
jecxz
inc
adc
rcr
imul
outsl
and
repnz
mov
xchg
pop
outsb
in
jp
add
flds
cmpsb
xor
gs
mov
test
add
inc
cmp
roll
iret
dec
jp
sbb
negl
shrl
mov
cs
cmpsl
inc
xchg
xor
fdivp
in
cld
adc
mov
aam
sti
test
insb
push
dec
cltd
pop
jb
clc
jmp
push
divl
dec
cmp
push
jmp
mov
dec
mov
jbe
push
stos
add
mov
pop
outsl
negl
cmpsl
aaa
mov
mov
sbb
and
jl
fscale
fsubrp
insl
cltd
loop
insb
adc
adc
and
outsl
push
mov
adcl
push
xchg
fwait
rcrl
jbe
sub
lea
sbb
jmp
subb
jbe
insl
xor
fnstcw
std
mov
xchg
jmp
mov
negb
push
popa
rcrl
insb
stos
test
je
sbb
pop
mov
in
loop
ljmp
dec
mov
inc
pop
out
stos
or
lret
add
jne
daa
aaa
add
xchg
mov
cs
mov
xor
bound
add
leave
adc
or
and
aaa
leave
bound
add
imul
jp
sarb
xlat
leave
pop
aam
iret
mov
jnp
repnz
and
pop
mov
pop
pop
bound
into
sub
sti
jnp
bound
xchg
adcb
add
int3
popa
out
pop
mov
mov
jp
cmpsl
cmp
aam
inc
sbb
aam
jo
fnstsw
jle
sub
test
fstpl
aad
mov
add
sbb
sbb
mov
ret
fwait
inc
cmp
xor
cli
int
add
mov
cmp
cmp
xchg
out
pop
xchg
movsb
adc
adc
scas
aas
sub
pop
cwtl
loope
scas
inc
popa
bound
ljmp
mov
fcoms
sub
pop
cmp
jb
into
cs
in
lcall
dec
xor
dec
shll
inc
pop
jo
test
jge
ds
movsl
mov
insb
bound
aaa
mov
jo
test
hlt
enter
add
mov
scas
dec
shr
lock
iret
xchg
lock
mov
jno
jbe
std
std
in
rorl
call
fstpt
pop
dec
jno
adc
push
adc
xor
jnp
fdivl
cmp
ret
mov
aas
bound
inc
fimull
dec
cltd
adc
sbb
sbb
jne
cmpsb
ret
cld
mov
mov
dec
or
inc
mov
stc
sbb
pusha
pop
dec
add
or
mov
mov
sbb
lods
bound
cmc
popa
jbe
mov
movb
mov
cmp
adc
mov
jle
adc
xchg
leave
xchg
rolb
outsb
xchg
push
push
rcr
pop
mov
pop
cli
mov
mov
mov
jp
mov
dec
lds
es
hlt
dec
inc
aam
xor
push
int3
data16
aas
jg
notl
jns
int
movsl
hlt
mov
icebp
popa
je
shll
inc
push
push
dec
sti
add
inc
or
dec
movsl
cmpsl
pusha
jb
cvtps2pi
je
sub
test
pop
sbb
add
lods
and
arpl
les
aaa
and
shlb
and
call
adc
push
cmp
bound
repz
cmpsl
call
push
loop
aaa
sbb
push
test
mov
adc
outsl
imul
dec
ds
aas
mov
xchg
lret
aaa
jmp
pop
or
movsl
sahf
cs
pop
fst
push
icebp
mov
sbb
xorl
pop
and
xorl
shrb
mov
and
mov
add
inc
je
ljmp
and
lock
aad
dec
adc
orb
das
lcall
inc
shl
mov
movsl
jnp
jg
dec
aas
out
jl
jo
jne
les
or
push
in
cwtl
fs
or
jno
inc
andl
or
adc
xlat
jae
mov
xchg
movsb
mov
sub
and
adc
popf
data16
shll
loop
out
push
out
cltd
mov
cmpsl
scas
cmp
xchg
adc
sub
sub
lahf
test
pop
out
into
stc
mov
jg
mov
mov
mov
jl
pusha
outsb
jmp
xor
scas
sbb
pop
in
testl
int3
adc
mov
sbb
nop
push
and
jmp
dec
into
lea
cmp
inc
test
sti
or
fldt
insl
insl
jns
outsl
lock
jne
dec
push
or
lahf
adc
rcrl
jb
in
call
xchg
jne
mov
in
or
pop
dec
aad
negl
xor
adc
subb
bound
icebp
mov
inc
pop
add
lds
scas
push
add
pop
lahf
test
sbbl
mov
push
dec
push
popf
mov
notl
icebp
jge
cwtl
jg
testb
xchg
test
ss
add
pushf
push
pop
mov
mov
dec
mov
in
pusha
sub
xchg
enter
mov
cmpsl
adc
and
in
xor
mov
sbb
popl
mulb
das
ss
jl
stc
stos
cmpsb
and
jbe
loope
pop
adc
xchg
jno
inc
leave
iret
jge
pop
ret
dec
push
int
daa
call
push
mov
xor
xorl
and
cs
push
sbb
pop
push
xchg
scas
mov
mov
fnsave
in
dec
add
push
cmpsb
int
loope
out
std
mov
into
mov
bound
jbe
push
or
add
mov
in
xchg
jne
jae
push
in
sub
add
fbld
sbb
lret
repz
inc
xor
mov
xchg
lret
outsl
pushf
add
fidivrl
mov
cld
shll
add
jno
inc
je
dec
jae
cmp
in
ljmp
mov
movsl
and
and
nop
nop
out
fadds
mov
rcl
add
mov
jb
pushf
shl
pusha
add
pushf
fstpt
add
shl
shll
xor
pop
adc
pop
rep
mov
fwait
pop
shll
in
adc
sub
movsl
pushf
fucomi
xor
jl
sub
aaa
leave
cmp
pop
mov
fadd
and
dec
pop
in
mov
mov
mov
ja
rclb
and
imul
adc
pop
mov
lret
les
mov
and
push
add
mov
push
lea
and
shl
mov
push
test
aaa
loopne
sub
xchg
jo
mov
ds
jmp
fsts
stos
les
loop
dec
mov
shl
sbbb
inc
daa
and
sub
fwait
lods
cmp
and
add
push
cmpsb
push
lods
mov
loopne
dec
adc
mov
sub
jae
or
jae
loop
cmp
inc
xchg
pop
push
mov
enter
loopne
xchg
arpl
andb
dec
jl
mov
pop
icebp
dec
mov
cld
rcll
mov
pop
push
test
adc
mov
and
push
mov
mov
sbb
arpl
cmp
cmpsl
js
pusha
mov
lret
xchg
ret
bound
or
je
insb
jnp
or
adc
xchg
in
xchg
sub
clc
sti
fwait
mov
adc
lods
sbb
xchg
pop
pop
sbb
pop
jg
cwtl
push
sbb
push
test
mov
shll
pop
fnstsw
clc
xchg
cltd
jno
je
pop
push
mov
mov
push
fs
cmp
mov
cs
inc
decl
adcb
pusha
push
push
movsl
adc
cld
pop
pop
addr16
sub
lcall
pop
adc
mov
xchg
xchg
mov
mov
jb
jl
sbb
cmp
mov
add
shrd
xor
test
ret
lcall
xlat
adc
test
push
push
insl
sarb
cltd
call
sarb
inc
mov
mov
daa
jg
xor
clc
jbe
or
or
inc
push
and
out
sub
cmp
cld
and
mov
jl
outsb
xor
pop
mov
cld
cs
movzbl
outsb
add
push
fidivs
jge
loopne
adc
mov
fimull
test
es
insl
adc
stc
arpl
sbb
adc
pop
add
push
add
xchg
push
pop
push
sbb
xchg
into
mov
mov
dec
mov
jecxz
jbe
and
pmulhuw
adc
aaa
and
loope
cmp
loop
inc
push
out
fiadds
lcall
pop
sub
stos
dec
aam
adc
xchg
jle
in
fistps
fsubs
subb
pop
in
mov
aas
inc
rclb
push
cld
xchg
sbb
mov
adcb
adc
mov
scas
jo
cmpsl
add
mov
and
in
sbb
pop
add
sub
fidivrl
jp
mov
hlt
lds
dec
pushf
jecxz
add
sub
add
aaa
lcall
cmp
test
pop
jle
insb
push
cmpsl
jecxz
scas
sub
in
bound
xchg
xlat
xchg
repnz
pmullw
push
popf
push
movsb
pop
xor
ret
mov
and
push
jo
lea
insb
cmc
test
cmpsl
fcoms
push
imul
adc
or
daa
or
daa
cmp
out
enter
in
movsb
adc
jge
orl
je
add
das
xchg
movaps
sub
clc
mov
pop
adc
xchg
js
sub
mov
shlb
push
movsl
push
sarb
jno
add
outsb
out
cwtl
mov
shrb
icebp
ljmp
jae
mov
ljmp
xchg
das
adc
repnz
lcall
cltd
mov
arpl
mov
xchg
sub
fmuls
addr16
das
imul
fistpl
insb
or
ror
test
sbb
mov
mov
fmul
adc
dec
add
outsl
sub
push
dec
inc
mov
fsubrs
or
cmp
sub
mov
mov
jecxz
push
nop
sbb
arpl
cmp
push
adc
int3
fdiv
mul
movsb
lods
pop
mov
push
andl
lea
gs
cld
dec
jl
js
popa
bts
and
cld
inc
sbb
aaa
sub
jae
lret
cmovge
in
or
mov
iret
fld
add
and
pusha
push
lods
mov
inc
jb
xchg
orl
xchg
daa
sti
and
mov
mov
xor
mov
scas
hlt
sub
xor
sbb
dec
imulb
out
dec
mov
into
pop
repnz
xcrypt-cbc
cmpsl
nop
mov
insb
push
stos
bound
in
mov
mov
xchg
jbe
aam
jle
imul
lods
inc
sub
push
mov
out
mov
inc
out
das
dec
sub
mov
or
aam
enter
inc
pop
xor
xorl
mov
ret
mov
ss
lds
sbbb
stc
dec
mov
bound
mov
enter
ja
jb
mov
sub
enter
gs
xchg
inc
clc
xchg
sbb
push
push
sbb
ljmp
jb
adc
cli
fisttpl
adc
int
adc
mov
push
xor
cmpsl
out
pop
xor
inc
sub
repnz
test
loope
addb
add
dec
or
test
out
push
mov
pop
popf
add
addl
cs
sbb
dec
cmp
mov
call
dec
daa
rcl
or
repnz
xchg
cwtl
jne
into
gs
std
lds
outsl
xchg
sbb
and
inc
lcall
push
push
mov
inc
dec
in
pusha
push
or
push
lds
loope
shll
mov
and
sub
inc
xor
inc
out
out
mov
cmpsb
jmp
or
outsb
fcmovb
xchg
or
mov
or
lods
cltd
outsl
shrl
jle
lahf
test
fbld
jle
lock
or
add
outsb
or
push
les
ss
ljmp
testb
mov
cmp
mov
leave
dec
adc
icebp
push
cwtl
cli
pushf
xor
jae
sbb
movl
xor
xchg
lds
aad
aad
je
adc
lret
aas
push
sub
add
bound
push
inc
bound
sub
test
cli
fcomp
jecxz
pop
popa
pop
stos
sbb
call
stos
loop
cli
in
test
out
iret
xor
xlat
stos
aas
enter
push
ret
xor
aam
jle
inc
lahf
hlt
test
sbb
fcmovu
and
enter
popa
adc
sbb
jge
mov
mov
push
es
ss
or
out
call
xor
inc
pop
push
dec
leave
xchg
ss
scas
push
mov
and
lea
jo
mov
mov
push
pop
jo
rorb
pop
mov
sub
mov
pop
xlat
dec
seto
dec
cmp
test
int3
mov
xchg
fmuls
rorl
sbb
inc
icebp
cmc
xchg
and
xchg
lock
cmp
mov
and
cmp
xor
divl
push
mov
pop
dec
jg
jmp
aad
adc
add
jae
xor
push
outsb
lret
lds
push
or
jmp
lahf
out
pop
stc
ss
daa
push
mov
das
shl
in
push
mov
push
jb
xchg
dec
repz
js
sbb
dec
lds
jnp,pn
mov
mov
jle
sarl
push
dec
or
xchg
inc
mov
insb
je
cltd
push
inc
push
rclb
in
jb
lahf
sbb
fdivs
cltd
lods
and
clc
aam
loopne
in
dec
jg
bound
mov
adc
es
cmp
dec
sbb
pop
sahf
and
cmp
aam
inc
nop
inc
inc
push
jl
xchg
dec
and
int
sub
pop
mov
andb
sub
movsb
dec
pop
fsts
and
xchg
mov
out
sahf
cmp
dec
adc
je
adc
out
and
cld
mov
test
jns
xor
and
inc
push
push
in
push
mov
sbb
aas
lret
iret
or
ljmp
sbb
jge
adc
lahf
jae
cltd
push
lods
lret
pop
push
dec
and
scas
aaa
cltd
in
lret
push
or
loop
inc
sub
lds
ljmp
outsl
rcrb
push
stos
cmp
sarl
pop
iret
mov
das
mulb
pop
cwtl
in
mov
adc
enter
jmp
iret
add
and
divl
dec
out
repnz
fisubs
or
cmp
jmp
pop
xchg
movb
push
ds
mov
pop
sub
or
lret
in
in
push
cmp
inc
jb
in
nop
stos
shl
inc
xchg
xchg
dec
sub
or
xchg
loope
add
xor
adc
mov
cmp
sub
lods
enter
lret
sub
lcall
es
pop
adc
shlb
jle
gs
xchg
adc
jne
out
dec
das
mov
jae
jo
mov
stos
push
bnd
push
loop
cli
clc
or
test
inc
adc
aam
dec
roll
sti
dec
sub
aas
add
into
ret
cmp
cmc
scas
std
and
out
mov
mov
dec
insl
jnp
mov
leave
nop
mov
sbb
jae
xor
inc
mov
xchg
lea
lock
push
fst
add
jmp
mov
mov
xor
sbb
jge
pusha
push
mov
rcrb
out
ret
lahf
mov
jge
mov
adc
clc
or
pop
sub
in
xchg
sbb
sti
pop
jne
fs
mov
sbb
or
mov
adc
ret
cmpsl
dec
outsl
cmp
mov
movl
ja
push
dec
shll
mov
push
adc
xchg
loope
ja
incl
ss
cmc
cmpsl
cld
int3
fsts
jne
ss
lods
xchg
out
add
mov
pop
repz
sbb
push
imul
cltd
cmpsl
mov
mov
xchg
adc
sahf
mov
jmp
lcall
sbb
movsw
mov
call
aam
xor
cmp
xor
test
fstps
cltd
ss
nop
add
out
arpl
pop
aaa
pop
cmp
mov
cmp
push
test
lds
and
out
xor
xlat
push
or
ds
outsl
rcll
rolb
rcl
fcoml
lods
test
pop
dec
adc
jns
ljmp
imul
sbbb
lock
mov
mov
mov
pop
inc
into
lock
fnsave
xchg
dec
dec
outsb
in
stos
fwait
hlt
lret
push
scas
daa
ja
and
and
lods
cmp
pop
mov
pop
arpl
sbb
fwait
stos
and
push
lahf
jmp
into
imul
scas
pop
inc
pop
and
icebp
jnp
jmp
adc
lods
jmp
out
outsb
dec
daa
aas
int3
out
add
mov
inc
adc
pop
adc
and
daa
cmp
outsb
cmp
addr16
push
add
sti
fucomip
push
fwait
popf
sub
popf
jo
or
push
in
xchg
es
outsl
mov
in
call
adc
xor
movsl
cmp
push
cmp
in
sub
stc
repz
int
rcl
pop
js
dec
mov
dec
mov
xchg
aaa
scas
fwait
and
push
inc
out
sub
mov
sbb
and
or
ja
cmpsb
mov
push
hlt
mov
in
xor
out
jnp
and
test
sbb
pop
mov
cli
jge
aad
jp
mov
sbb
mov
push
les
inc
fs
test
inc
adc
mov
rcrl
mov
sbb
jmp
jecxz
jo
add
jg
sbb
call
pop
cmp
xlat
js
sub
adc
mov
mov
cmc
mov
jle
add
push
adc
out
inc
push
imul
xlat
dec
push
add
out
pop
dec
out
and
jg
mov
push
adc
fsubrl
xor
mov
add
int
aad
lods
fstp
mov
imul
inc
xchg
iret
es
inc
cs
ret
sbb
icebp
mov
sub
call
xor
xchg
pop
iret
cwtl
push
sbb
popf
loop
inc
fimuls
sub
sub
je
arpl
sbb
movsl
clc
cld
loope
lock
outsb
inc
leave
push
test
int3
andb
aad
popf
loope
stos
mov
in
mov
inc
fisubl
xlat
rcll
sub
push
std
cs
jbe
push
mov
sub
sub
test
insb
fs
and
and
ja
fists
rcrb
lcall
push
js
jg
int3
sti
vcvtdq2ps
adc
lret
add
pop
repnz
leave
or
lock
jl
add
loop
data16
rcll
loop
stos
sub
lock
or
cmp
inc
cmp
push
insl
jg
sti
xor
ss
les
sbb
add
sbb
pop
and
pop
xor
or
sub
push
testl
dec
mov
sti
sub
push
mov
bound
lret
clc
cmpsl
jbe
add
sbb
add
test
jb
jmp
gs
data16
pop
sub
pop
mov
das
fbstp
cmpsl
mov
push
imul
dec
mov
adc
mov
jnp
das
push
test
in
mov
dec
popf
popf
mov
subb
loop
inc
sbb
stc
xorl
dec
out
mov
stc
jae
mov
ret
movsb
inc
xor
out
mov
cs
cmp
sbb
leave
sub
push
push
mov
pop
rcr
push
int3
mov
add
mov
jbe
fwait
cwtl
cmp
repnz
xchg
or
sub
faddl
imull
adc
jb
dec
lds
adc
pop
fidivl
addl
push
sbb
adc
insl
mov
xor
push
and
mov
cmp
and
adc
cs
arpl
fs
ror
jb
jo
rcr
test
sub
repnz
jle
data16
lea
jne
jg
in
jle
bnd
fnstenv
push
clc
inc
pop
pushf
lret
call
es
xlat
adc
out
add
lahf
pop
inc
push
stos
jae
ds
in
adc
mov
dec
mov
int
jne
inc
mov
clc
mov
stos
push
jns
xchg
push
sbb
cmp
jb
mov
push
lret
std
lock
push
insb
clc
fwait
scas
leave
mov
push
jae
push
push
in
dec
inc
out
test
scas
or
movsb
ja
sbb
loope
add
insb
xchg
xor
adc
xor
pop
jo
out
mov
mov
push
cli
int3
cmp
notl
cmp
cli
xor
subb
jp
jnp
lret
pop
out
pop
testb
fimull
xor
pop
test
pop
pop
mov
mov
rolb
inc
das
mov
mov
jnp
jo
add
cmp
das
ljmp
pop
inc
lcall
pop
xor
stos
mov
push
movsl
mov
dec
add
call
jnp
out
loope
cs
test
pop
addb
stc
sbb
cmpsl
xor
ficoml
aas
inc
enter
out
pushf
sbb
add
ret
sub
movl
loope
shl
pop
xchg
fadds
sbb
sbb
cmp
mov
jmp
xchg
loopne
cwtl
fwait
push
sbb
mov
add
and
sbb
jb
add
sub
imul
lods
xchg
mov
push
push
outsl
and
push
lods
xor
sahf
xchg
mov
jo
fisttpll
push
xchg
mov
sbb
pop
xor
scas
cmp
pop
push
and
add
dec
testl
push
cmp
pushf
mov
add
hlt
hlt
dec
and
sub
cmp
fadds
lea
push
push
movb
cmpsl
lds
mov
cmp
mov
mov
xor
add
jno
movsl
dec
lret
pop
data16
aam
addl
movsl
add
sub
outsb
mov
mov
into
adc
fwait
jle
sub
imul
jns
sub
fistpl
fcoms
loope
or
in
in
pop
or
leave
cli
mov
fimull
mov
push
mov
js
in
aad
fists
mov
leave
push
fs
dec
int3
popf
inc
jecxz
pop
rcrl
push
daa
lods
jb
dec
dec
repnz
mov
mov
xchg
jmp
fnstenv
add
lahf
loop
ds
stc
leave
into
adc
mov
sarl
cmp
cmp
js
out
lret
pop
mov
clc
stos
pushaw
dec
subl
inc
mov
xor
ss
leave
xor
rorl
std
mov
cmp
sahf
add
cs
hlt
jmp
cs
outsl
outsb
and
rcrb
mov
mov
xor
and
sbb
repz
mov
jae
and
and
push
push
add
addr16
subl
mov
xchg
pop
aas
popa
add
mov
arpl
andb
sbb
push
stos
nop
ljmp
pop
jbe
inc
sub
int
sbb
fucomip
into
fmuls
dec
jns
je
push
call
push
fcompl
xchg
fsubl
cmc
mov
dec
adc
jae
mov
pusha
cmp
nop
jle
xor
les
mov
loop
inc
add
cmpl
or
mov
leave
daa
dec
xor
adc
in
push
push
pop
jb
xor
cmpsl
test
lea
mov
mov
pop
xor
rcr
sbb
cwtl
loop
mov
in
mov
enter
or
ss
in
stos
bound
push
stc
jae
testl
inc
movsl
and
shlb
pop
aad
cwtl
push
xchg
jle
sahf
scas
bound
cs
pop
aad
and
aad
insl
inc
mov
fldenv
sti
cmp
pop
dec
sbb
inc
sbb
dec
test
data16
aam
sub
pop
xchg
mov
mov
enter
jbe
sub
fs
pop
mov
xor
lahf
inc
or
add
mov
xlat
leave
enter
dec
xorb
and
xchg
adc
xchg
dec
int
lock
xchg
pop
sahf
dec
xchg
push
rorb
loop
and
jp
je
adc
ficoms
lahf
popa
adcb
adc
call
and
mov
pop
imul
sbb
and
mov
ja
lret
addr16
cmp
sbb
mov
int
inc
sub
cmp
xchg
cmp
in
aad
mov
mov
arpl
scas
inc
loopne
lea
shlb
sub
call
sub
ljmp
ja
addl
mov
mov
or
push
cwtl
les
xchg
outsb
fldt
jae
ret
loopne
jl
cmp
jg
call
clc
push
popa
pop
pop
pushf
inc
push
jne
add
add
push
in
icebp
push
mov
mov
pop
aad
cs
lock
mov
fisubrl
fs
aaa
das
jns
aas
imul
dec
shlb
mov
cmp
lahf
neg
xor
and
lret
dec
and
lcall
mov
outsl
xchg
jmp
mov
addb
adc
in
mov
jns
mov
mov
stc
lret
or
int
jle
loopne
std
addb
pop
pop
rcrl
adc
fdivl
push
mov
fdivr
test
jb
dec
and
ret
adc
xor
push
xchg
mov
hlt
xchg
test
fadds
jle
cmpsb
in
dec
cltd
sub
cwtl
xchg
sub
hlt
and
mov
cmp
inc
jno
push
jbe
repz
add
jbe
cmp
lcall
or
shlb
dec
add
jge
jp
jb
inc
mov
pop
sub
fs
pushf
ss
ja
dec
pop
mov
dec
dec
cmp
add
leave
stc
mov
mov
pop
push
sub
lret
mov
sub
pop
jbe
enter
out
inc
mov
sbb
and
add
or
ss
dec
mov
ja,pt
sub
std
push
es
mov
mov
iret
fldl
lds
ja
test
mov
ljmp
mov
push
lcall
dec
fstps
loopne
into
pop
lret
jp
andb
mov
pop
and
pop
sub
dec
sahf
data16
mov
cmpsl
jecxz
or
jp
or
and
mov
clc
scas
mov
cmp
js
icebp
and
push
sub
imul
ret
sbb
xchg
in
mov
xor
test
js
faddl
loop
lods
testl
stc
das
fldpi
pop
jmp
rorb
bound
push
clc
mov
sub
stos
icebp
inc
in
cmpsb
mov
xor
mov
inc
add
cld
cmp
add
dec
xor
mov
xor
stc
jl
push
leave
dec
inc
daa
fwait
mov
in
cmp
stos
icebp
call
int
sub
xor
je
or
xor
stc
push
outsb
sahf
sarl
stos
test
xchg
mov
cmpsb
nop
mov
mov
push
xchg
out
loope
pop
and
outsb
movl
push
and
hlt
sbb
stos
mov
add
mov
jmp
jp
mov
arpl
mov
imul
fisubl
and
out
scas
mov
push
pop
push
xchg
sub
dec
out
or
mov
dec
aas
xlat
mov
data16
fcoml
enter
scas
cs
mov
in
mov
das
adc
sbb
xchg
mov
sets
sub
mov
test
pop
jnp
jmp
insl
ficompl
xchg
repnz
ja
xchg
test
clc
scas
cltd
inc
mov
addr16
popf
mov
lds
xor
test
ljmp
ljmp
cmpl
push
ds
ficompl
cmpsb
insl
push
stos
jmp
lods
les
repnz
mov
xchg
mov
test
addr16
jl
xor
or
imull
mov
sahf
lds
cmp
inc
pusha
jnp
add
in
cmp
daa
dec
jnp
sbb
jne
fucom
nop
into
data16
sub
sbb
outsl
cmc
pop
das
inc
adc
sub
rcr
adc
loopne
inc
std
adc
add
bound
or
pop
ret
imul
pop
mov
cli
ss
das
les
xor
jge
rorb
enter
ficompl
pop
in
inc
sbb
dec
sbb
sti
sub
cld
cmp
sub
dec
mov
mov
les
sub
xor
mov
lods
add
lods
pop
daa
push
inc
js
arpl
jbe
fimull
js
cmp
cmp
inc
dec
sbb
add
dec
xor
dec
jmp
and
push
inc
mov
adc
aad
mov
sub
int
or
ja
inc
adc
add
insb
sbbb
loopne
adc
adc
sti
lahf
xchg
fsubrs
orb
or
add
sbb
sar
shr
mov
cmp
cmp
into
adc
cli
repnz
jmp
jecxz
xadd
xchg
mov
setne
jmp
push
sbb
push
fwait
lretw
mov
insl
cmp
ja
add
pop
push
sub
pop
pop
xchg
mov
fstl
dec
in
insl
inc
xchg
adc
cmp
pop
xchg
add
xchg
xor
push
lahf
inc
sub
sbb
outsb
pop
jo
cmc
std
and
fcomps
jmp
inc
mov
mov
and
std
lret
jae
mov
jo
lahf
mov
cld
mov
mov
rolb
out
push
std
mov
adc
push
jg
sbb
fidivrl
add
cmp
sarl
shlb
mov
jmp
push
inc
fistpl
xlat
jae
mov
stos
xchg
je
xchg
or
and
pop
push
fildl
arpl
xlat
mov
inc
jne
jb
adc
cmpsb
dec
xchg
insl
idiv
jge
ficoml
sti
inc
jae
dec
mov
pop
rclb
dec
clc
jne
iret
idivl
jp
jnp
pushf
loopne
leave
xlat
sub
adc
cmp
cwtl
in
jge
out
mov
cwtl
dec
into
pop
or
inc
aam
pop
repnz
inc
pop
shrl
add
les
dec
inc
les
jmp
in
and
sbb
push
jecxz
ret
js
and
cltd
dec
lods
mov
inc
aaa
jp
jmp
loope
pusha
mov
in
shll
sub
dec
hlt
ja
in
dec
imul
mov
sarl
mov
mov
stos
out
or
mov
fbld
lods
repz
and
mov
scas
clc
mov
mov
adc
out
dec
lods
xchg
pop
ficomps
mov
jmp
fistpll
sbb
daa
sbb
mov
mov
outsl
adcb
bswap
jecxz
sbbl
mov
mov
shlb
push
inc
inc
adc
xor
in
xchg
jo
mov
scas
jle
aad
adc
xchg
roll
mov
insl
and
add
sub
inc
fistpl
into
stc
sahf
and
mov
mov
in
cmp
pop
pop
xor
and
subl
xor
insl
out
test
dec
push
shlb
xchg
adc
add
fistl
mov
or
pop
es
mov
insb
insb
subb
pushl
jl
jle
in
int3
outsl
mov
addr16
and
jge
enter
jmp
sbb
mov
das
add
or
shlb
and
cmpsl
es
aam
leave
sahf
negl
pop
sub
push
fcoml
cmc
cld
iret
jae
dec
cli
cmpsl
add
sub
ja
loop
aam
mov
sub
dec
insb
inc
sub
ss
adc
dec
push
xlat
jno
jecxz
pop
inc
jo
cmc
shrl
and
add
pusha
bound
out
popa
test
adc
mov
sbb
adc
inc
add
cmp
shrl
loope
lcall
outsb
int
movsl
jl
sub
bound
scas
sub
or
rclb
pop
xlat
add
jecxz
insl
mov
fdivr
test
sbb
call
adc
sub
dec
pop
mov
push
insb
pushl
loope
js
out
mov
xchg
lock
pop
mov
imul
jo
cmp
cmp
sbb
or
cwtl
sub
popa
popa
ret
mov
mov
andl
in
mov
loopne
lods
dec
mov
jl
lahf
test
or
push
or
mov
sbb
mov
or
in
data16
sbb
das
inc
push
adc
dec
add
sub
int3
sar
in
pop
fcmovnu
jb
jb
pop
jae
mov
and
jge
sbbb
decb
sub
fists
jecxz
add
in
mov
sti
sbb
fwait
int
mov
aad
jae
movsb
das
das
jno
icebp
mov
mov
fcmovnu
cmp
loope
lds
push
sbbl
push
arpl
shlb
push
jle
data16
shll
call
sub
sti
cmc
push
push
mov
xchg
adc
ret
or
sbb
std
fs
int3
les
inc
add
iret
adc
adc
xchg
jbe
add
into
incl
sub
and
or
jge
iret
dec
push
or
lea
pop
jns
ss
rep
push
shrl
mov
fiadds
mov
lcall
add
inc
cmp
jg
fisubrs
test
iret
adc
sbb
mov
push
push
mov
mov
inc
imull
das
mov
rclb
mov
repnz
sub
les
xor
out
xchg
leave
mov
push
mov
je
pushf
fldcw
popf
fwait
call
sti
jecxz
mov
jge
addl
cwtl
test
sbb
or
rorl
jp
test
pop
cmp
jns
icebp
enter
shll
inc
fucomp
out
ret
pop
pop
pusha
push
aaa
push
or
in
arpl
adc
xchg
dec
out
push
jnp
mov
test
pop
pop
hlt
in
cli
insb
cmp
mov
mov
testb
int
subl
jmp
mov
mov
mov
mov
outsl
cmp
sub
mov
sbb
test
movsl
aad
jbe
scas
jecxz
xchg
xchg
ss
fcmovnbe
mov
jae
mov
mov
inc
dec
out
stos
stos
int3
sbb
pop
pop
xchg
stc
jb
mov
inc
and
shl
mov
in
rorb
sub
xor
push
lods
mov
fidivs
mov
xchg
and
sbb
cmp
clc
in
stos
idivb
mov
push
mov
in
fstpt
fiadds
mov
fbstp
inc
xor
sbb
loop
lret
ret
fwait
ja
sub
adc
jno
outsb
mov
pop
testb
sub
out
push
mov
test
mov
dec
clc
out
mov
xor
mov
inc
lods
dec
imull
insl
add
xchg
insb
xor
pushf
imulb
and
repnz
mov
cmpsb
mov
ja
sbb
js
in
dec
int
dec
clc
mov
push
or
pop
xchg
das
xchg
sub
jge
jnp
stos
sub
jge
test
daa
add
scas
movsl
add
push
call
inc
inc
outsb
pop
in
cmp
ja
data16
test
mov
push
jno
push
fcoms
sbb
add
lahf
outsl
push
cwtl
xchg
cmp
clc
inc
xchg
jecxz
cmpsb
jecxz
popl
out
jecxz
in
xor
es
xor
mov
insb
mov
push
int3
out
jno
popa
icebp
add
dec
out
sub
orl
jg
mov
sub
and
movsb
mov
cmp
pop
pop
xchg
in
push
mov
jne
sub
inc
xor
pop
mov
je
mov
jae
insb
sbb
dec
push
mov
xchg
mov
mov
xchg
sub
cmp
jg
jl
jns
mov
xor
sahf
xor
mov
notb
cmp
out
xchg
cmp
xchg
jle
xchg
push
add
imul
rol
fwait
test
leave
pushf
xchg
outsb
call
and
shl
mov
out
dec
inc
add
xor
pop
add
cmp
xor
adcb
mov
cli
mov
iret
push
push
jecxz
in
lods
aam
inc
mov
iret
xor
iret
sbb
faddl
leave
push
mov
hlt
xchg
ja
dec
or
mov
testl
adc
or
fwait
pop
inc
movsl
mov
cld
fdivrl
fistpl
cmp
mov
inc
insb
leave
int3
xchg
fcompl
push
push
add
pop
xor
int
call
jb
sbb
push
pop
sbb
dec
inc
cmp
mov
mov
pop
ljmp
pop
push
xchg
push
push
into
dec
cmpsl
push
sub
jo
aaa
aad
pushf
mov
adc
jne
add
inc
fistps
pop
add
shr
lock
aas
jns
psrld
ss
add
jmp
adc
ret
out
sar
inc
dec
call
or
xchg
xchg
movsl
inc
es
cltd
dec
inc
out
mov
jb
inc
or
jo
and
inc
dec
mov
dec
js
xor
push
into
testb
sub
cli
adc
cmp
mov
or
icebp
push
or
xor
lcall
out
movb
push
sti
cmc
ljmp
into
lret
inc
imul
mov
es
inc
movsl
cld
xorb
movsl
repnz
mov
adc
inc
popl
dec
add
or
test
sbbl
add
push
imull
sbb
mov
fs
lea
cmc
lods
decb
mov
mov
in
addr16
cmp
arpl
xchg
adc
mov
fs
fisubs
popa
mov
loope
in
sti
pop
and
pop
js
jbe
sub
adc
pop
aam
and
push
into
fbstp
sub
xor
add
int
xor
xor
lods
out
push
sahf
or
out
adc
jge
push
ficoml
mov
pop
test
setle
xor
xor
dec
mov
data16
gs
pop
xchg
test
jmp
rorb
loop
and
xchg
mov
pop
lods
sub
dec
adc
decl
into
push
dec
std
and
popf
fnstsw
js
jecxz
and
sti
out
and
jge
lods
add
mov
jp
jbe
ret
cmp
cmp
mov
mov
call
out
scas
subb
dec
int
jg
jg
pop
loopne
iret
dec
ljmp
push
xchg
inc
push
push
or
mov
pop
xor
and
jns
cli
mov
push
cmp
into
les
push
stc
inc
mov
rorb
push
mov
xchg
push
fimull
mov
testb
enter
fstl
pop
lock
fsin
mov
xor
add
add
lahf
sub
negb
sbb
test
xchg
adc
mov
push
data16
xlat
mov
mov
push
inc
mov
cmp
mov
addb
sar
or
pop
mov
mov
pop
xor
repz
push
pop
add
test
inc
mov
pop
mov
sbb
dec
pop
sub
cmpsb
repnz
xchg
mov
cmp
xchg
mov
aad
mov
mov
lret
out
lcall
stos
iret
mov
sub
pop
inc
shl
ds
jp
fsts
push
mov
dec
fld
outsl
hlt
mov
stc
xrelease
shrl
xor
cmpsl
cmpsb
push
in
ja
push
test
cmp
cmpsl
int
dec
pop
jle
shr
sub
popf
leave
push
sbb
jl
or
mov
icebp
test
jo
test
xor
test
xchg
mov
in
in
mov
ret
in
sub
inc
shlb
orl
xor
mov
xchg
xchg
add
je
sbb
mov
sti
push
hlt
pop
or
mov
aaa
cmc
rorl
cmp
test
jecxz
ror
push
popl
cmpsb
push
jp
pop
push
hlt
fadd
sub
push
lock
xchg
pop
add
test
xchg
cmc
data16
cmp
cs
sub
andb
lahf
mov
mov
mov
or
and
jl
inc
fistps
in
add
mov
pop
in
frstor
xor
xchg
aas
add
push
jmp
cwtl
lds
outsb
pop
enter
jl,pn
push
mov
adc
mov
jbe
in
cld
popf
mov
mov
ljmp
addb
lret
mov
sbbb
les
xor
jno
jo
dec
push
mov
lods
mov
cmpsb
je
lahf
dec
jl
xchg
repz
popa
leave
sti
mov
inc
sbb
adc
lea
pop
mov
repnz
iret
sub
ret
xor
add
inc
cmp
push
in
sub
xchg
xor
mov
jle
outsl
lods
imulb
mov
fldl
add
sti
decl
stc
mov
xor
in
jo
mov
mov
cmpb
mov
test
rcrb
mov
test
xchg
mov
or
pop
and
pop
xor
loope
dec
inc
push
jge
pushf
clc
cmp
jb
push
mov
test
das
fbld
jno
test
pop
shll
lock
lret
punpckhdq
jbe
push
jmp
mov
sub
add
aad
adc
loope
pop
jge
push
lcall
ds
aas
dec
out
mov
xor
mov
divb
ret
dec
adc
jns
cwtl
loope
es
cmpsb
and
daa
jge
sbb
popa
sarb
xchg
jo
xor
push
pop
rcrb
es
loope
push
adc
adc
pop
addr16
rol
incl
mov
mov
xchg
xor
divb
lods
push
mov
dec
jae
pop
pop
inc
jae
andl
and
into
loop
dec
xchg
pop
orb
push
mov
adc
mov
cwtl
dec
lret
mov
xchg
aad
ret
cld
xor
sub
insb
dec
pop
dec
sbb
pop
loop
xorl
outsl
inc
call
pushf
mov
in
pminsw
movsl
or
pop
xchg
jb
repnz
xlat
test
out
inc
mov
call
inc
pop
sbb
push
sub
xor
jl
and
outsl
ret
cmp
pop
jo
sub
imul
adc
addb
ds
scas
fcompl
jle
or
daa
mov
add
imul
aas
add
outsb
xchg
adc
push
mov
mov
xchg
fs
pop
push
in
xchg
js
xchg
sbb
xchg
xchg
adc
pop
push
lret
or
lcall
das
pop
sarb
mov
xor
lret
data16
lea
and
inc
cmc
rcrb
mov
lcall
cs
pop
mov
or
sbb
add
gs
jecxz
adc
std
xchg
adc
hlt
dec
in
shl
pusha
push
mov
pop
js
lods
xchg
mov
push
xor
test
push
into
enter
fnstsw
pushl
out
rcl
gs
dec
jp
xor
ret
mov
and
cwtl
xor
jno
xor
filds
add
js
es
dec
es
inc
push
sbb
add
mov
push
jo
dec
xchg
sbb
dec
pop
cmp
xor
pop
notw
push
add
mov
rcll
inc
pop
inc
push
xor
push
jg
lea
xchg
out
push
rol
dec
adc
jno
mov
xchg
mov
or
push
cmp
cmp
push
mov
imul
testb
push
ja
mov
rorl
or
fsubr
xchg
hlt
push
sti
xor
xchg
sub
fisubl
stos
pop
dec
jo
aad
outsl
dec
out
insb
mov
lea
outsb
push
jb
dec
sarb
jns
int3
adc
cmc
in
and
out
sarl
ljmp
idivl
or
mov
sub
adc
shrb
jno
adc
ja
in
ljmp
icebp
scas
push
jo
inc
mov
push
jg
add
fwait
xor
xor
lahf
and
mov
pop
cmp
jmp
lret
jnp
fisttps
cmp
fldz
xor
fidivrs
cmp
fs
ds
sbb
out
mov
add
shrl
aad
stos
outsb
inc
dec
add
incl
and
and
dec
jg
lds
jmp
fcoms
and
ss
xchg
lahf
cmc
out
loope
cmp
movb
and
shrb
xlat
scas
xor
mov
test
in
mov
enter
stos
rcr
push
cmc
cmpsb
out
add
std
loop
std
cmp
push
mov
cltd
pop
sub
mov
test
in
lahf
sbb
dec
movsb
mov
xchg
clc
push
imul
test
add
js
sahf
xor
mov
aas
add
pop
cld
adc
or
push
lcall
ret
rcrl
push
dec
popf
push
inc
les
imul
pop
jbe
imul
icebp
mov
cli
shlw
fucomp
mov
jl
adc
lods
mov
jbe
xor
inc
mov
out
clc
xor
or
sub
lods
jle
decl
add
call
lods
jmp
jge
push
sahf
and
jne
ret
jecxz
orl
mov
outsb
gs
and
mov
push
dec
daa
jp
or
fsubr
daa
test
cmpsl
lods
and
mov
pop
insb
in
fcomps
fwait
and
iret
das
dec
fwait
call
out
aas
adc
rorb
and
xchg
and
shl
jge
inc
xchg
cmp
dec
pop
out
add
mov
push
dec
test
sub
test
lods
ss
pop
sub
jge
cs
push
in
insl
xor
jecxz
and
nop
lahf
or
cmp
movsb
pusha
icebp
fsts
es
xchg
mov
movsl
adc
je
int3
getsec
jl
inc
sbbb
mov
sahf
dec
xchg
inc
pop
mov
sub
mov
pushf
adc
andb
icebp
fwait
in
outsb
sub
xor
aas
sbb
and
add
mov
ja
pusha
enter
jg
mov
fstps
ss
dec
add
lret
test
sub
sbb
jns
das
daa
and
and
mov
lea
cmp
jg
cltd
adcl
pop
mov
nop
arpl
mov
dec
push
add
clc
mov
bound
cmc
test
mov
js
aad
cmp
mov
aas
test
sahf
mov
mov
add
fcompl
arpl
rol
dec
push
fists
lds
in
fnstsw
jl
repnz
pop
lods
test
pusha
sti
bound
das
jge
in
xor
addb
cmpl
cmp
pop
and
das
xchg
cmp
test
dec
adc
push
repz
mov
push
jge
jne
bound
xchg
daa
out
das
ret
add
add
icebp
dec
adc
scas
pop
push
test
filds
cmc
out
xor
bound
jns
in
sub
jae
ror
inc
push
dec
add
insl
iret
xor
mov
out
adc
mov
cld
pop
mov
data16
xchg
test
cmp
sti
mov
xchg
insl
das
stos
aam
arpl
cmp
inc
sub
jne
dec
dec
mov
sbb
les
push
sarb
rolb
jl
pop
sbb
or
leave
jne
shrb
call
pop
fucomp
icebp
inc
test
mov
mov
mull
leave
sub
push
filds
pop
jmp
dec
cmpsb
sub
push
add
test
test
enter
xchg
push
jp
mov
mov
jge
inc
das
pop
test
xor
das
jb
test
es
xchg
cwtl
jbe
pop
mov
push
xor
push
mov
xor
fisttps
xchg
pop
sarl
jp
lods
or
mov
popa
pop
cltd
add
xor
fiaddl
xchg
xchg
adc
adc
divl
lcall
pop
inc
lea
rorl
test
dec
or
fisubrs
mov
xor
mov
sahf
mov
loop
das
shll
loop
push
add
into
dec
jae
mov
int3
adc
call
adc
cmp
xchg
fdivrl
or
sbb
scas
bound
pop
hlt
inc
mov
mov
inc
fcoms
pop
mov
and
cmp
and
jne
mov
lock
and
fdivl
jns
bound
test
inc
cmp
push
xchg
popf
dec
inc
or
mov
mov
cwtl
icebp
outsb
insl
mov
sahf
loop
dec
jg
std
mov
lcall
mov
dec
jecxz
push
faddp
cmp
inc
cmc
adc
mov
mov
std
and
add
pop
jbe
je
nop
dec
sub
push
je
insb
in
push
add
lret
test
mov
add
mov
divl
pop
stc
cld
movsl
pop
or
out
andl
mov
mov
iret
xor
sub
mov
mov
mov
or
inc
pmulhuw
mov
sub
push
inc
js
insb
test
pop
and
mov
push
jle
jl
fnstsw
lea
mov
pop
lods
xchg
shll
xchg
or
ds
je
ds
aas
sbb
in
cld
mov
sub
and
jne
aam
enter
dec
in
jae
scas
cwtl
dec
ljmp
iret
jge
stos
ja
inc
pop
lods
test
leave
icebp
xor
ret
cmc
stos
push
insb
repnz
cltd
xor
jae
sarl
add
lahf
add
dec
xchg
cmp
pop
imul
js
je
cmc
dec
lret
in
push
jno
frstor
imul
mov
imul
cmpsl
jae
mov
or
out
mov
jecxz
lea
adc
call
pushf
stos
sub
int3
mov
jns
push
iret
mov
push
stc
fidivl
fidivs
test
mov
out
jge
mov
fldl
lock
addl
sbb
movsb
cmp
dec
arpl
xor
cwtl
sarb
inc
rcl
jae
xchg
xchg
pop
add
fs
ljmp
cmp
ret
mov
mov
test
dec
imul
pop
push
push
enter
push
xchg
imul
jb
into
imul
arpl
or
and
mov
dec
mov
fistpl
or
xchg
push
sbb
push
prefetchnta
adc
cmp
mov
pop
aam
adc
pop
mov
lods
aaa
ds
out
pushf
mov
cmp
push
and
cmp
fmuls
lods
repz
insb
inc
dec
int
loop
cwtl
cmp
sar
in
sbbb
je
ficoms
pusha
cmpsl
xchg
lret
test
cmp
fidivl
in
and
andb
scas
cmp
pop
jl
mov
pop
cmpl
lods
mov
mov
inc
stos
iret
bound
cwtl
jnp
push
iret
cmp
outsb
adc
loopne
jl
push
stos
lret
mov
add
call
pop
xchg
or
mov
push
jecxz
daa
xor
push
or
dec
dec
cmp
lahf
frstor
mov
mov
sbb
inc
push
ljmp
inc
xor
jb
push
push
movl
les
pusha
sub
aas
cmp
mov
fbstp
mov
jae
or
dec
loop
iret
dec
loopne
fists
cmp
jp
mov
mov
int
xchg
push
fisubrs
adc
mov
sbb
and
xor
push
mov
ljmp
sbb
xor
mov
int
jno
lock
in
dec
xchg
xorl
loop
inc
movsl
sbb
movsb
cmc
adc
lret
xchg
or
xchg
push
pop
movsl
or
jo
es
bound
or
aam
outsb
mov
fwait
xchg
sbb
mov
in
aas
out
add
pop
or
jp
lret
ficoms
cmc
sbb
jb
fcoml
sbb
xchg
mov
or
jo
adc
xor
fidivrs
lock
ss
or
test
gs
lods
adc
shl
jae
xor
popa
push
int
popa
pop
dec
cmp
push
lret
hlt
push
xor
sub
lahf
mov
push
cmp
mov
insl
add
je
enter
mov
test
sarl
sti
dec
rol
push
mov
or
mov
sub
pop
cmp
test
jge
int3
mov
xchg
in
push
or
ss
push
inc
adc
pop
pop
mov
mov
call
pop
out
scas
stc
lock
adc
push
mov
adc
jns
sub
mov
xor
add
sbb
aad
inc
inc
inc
mov
les
push
adc
pop
cmc
cli
imull
inc
cld
dec
and
jge
cmp
push
dec
repz
repnz
push
adc
jg
push
test
jmp
xchg
arpl
or
ret
jmp
xchg
xor
es
daa
aad
sub
clc
popa
pop
ljmp
and
mov
js
add
mov
nop
cmpsb
and
popf
es
adc
xor
std
sub
ss
adc
enter
movsb
lods
negl
outsl
in
repnz
pop
andl
cwtl
scas
mov
and
loop
es
pop
into
rclb
and
mov
cmp
shlb
fldcw
mov
mov
pop
jae
mov
lods
xchg
push
pop
dec
repnz
mov
clc
mov
mov
lds
xor
add
xchg
aaa
in
push
test
test
leave
sub
xor
dec
in
jmp
repz
mov
lret
fnstsw
cmpsl
xchg
xor
jecxz
mov
jmp
and
push
lods
inc
pop
xchg
mov
rcrl
gs
pop
cli
ss
test
mov
add
and
push
jns
insl
pop
inc
shll
loop
outsb
sbbb
call
xchg
fsub
fadd
xor
mov
out
push
rclb
jno
out
or
cli
sub
loope
imul
push
ljmp
outsl
mov
inc
xor
js
sahf
add
das
cwtl
sbb
ret
dec
scas
adc
pop
nop
test
fimull
xor
adc
push
pusha
fstpt
add
push
call
adc
adc
mov
daa
pop
in
pushf
das
lock
lods
cld
addr16
push
loopne
icebp
jg
loop
pop
and
loopne
jne
iret
add
dec
push
fdivs
xchg
mov
jl
cmp
xor
or
sub
cmpsb
lret
daa
int3
xor
dec
mov
inc
inc
sbb
lcall
fldl2t
fcmovbe
ja
shrb
sets
push
scas
cld
jb
mov
xor
js
adc
add
inc
fisubl
pop
cmpsl
adc
lcall
rclb
push
push
lret
sub
shlb
das
push
jb
test
insl
cmp
jg
xor
dec
movsb
out
mov
rorb
rorb
dec
mov
fwait
test
inc
mov
jmp
fists
sbb
sahf
or
push
sbb
add
out
daa
data16
adc
xor
cwtl
adc
inc
stos
testl
sub
stos
or
pop
cmp
push
jne
xchg
xor
mov
dec
jne
in
dec
shr
in
sub
adc
clc
adc
jl
mov
and
inc
or
jg
js
jns
push
add
scas
stos
cmpsl
in
jl
dec
push
popf
sbb
inc
loop
mov
pop
aad
mov
test
mov
rcrb
nop
jns
pop
stos
xchg
out
inc
sbb
dec
push
jnp
xchg
lods
dec
pop
fwait
mov
pop
sbb
pop
mov
test
or
in
into
cmp
lds
data16
xchg
das
inc
lock
std
mov
inc
dec
pop
mov
or
adc
ljmp
imul
cmp
mov
stos
xchg
sarb
sub
cmp
divb
sub
xor
cli
ret
fildl
and
dec
inc
xor
movl
pop
adc
out
movsb
sbb
add
je
mov
mov
lcall
pushf
mov
aas
mov
ja
pop
popa
addr16
jb
dec
mov
rcrl
and
test
mov
arpl
cli
jp
pusha
push
pop
dec
aam
cmp
dec
in
fwait
or
inc
notb
iret
data16
jp
imulb
push
iret
mov
xchg
push
dec
push
sub
mov
and
aad
dec
pusha
inc
aam
sub
int3
inc
das
sbbl
inc
mov
mov
inc
es
xchg
inc
push
inc
movsb
mov
lods
adc
inc
dec
push
sbb
testl
pusha
out
repnz
int
das
out
xchg
dec
push
xlat
xchg
popf
clc
inc
pop
data16
mov
sbb
outsl
orl
mov
push
cmpsl
adc
dec
jae
adc
mov
mov
fldcw
sub
xchg
cmp
insl
clc
mov
xor
inc
lods
cmc
lea
mov
dec
mov
mov
std
mov
lods
sub
dec
add
adc
adc
push
mov
aad
sbb
clc
jp
mov
ss
js
mov
out
push
cltd
jno
jg
lods
stos
lcall
mov
pop
push
push
lcall
push
mov
test
inc
sub
xchg
repnz
xor
sbb
outsl
inc
js
fistl
mov
test
and
cmp
mov
js
fdiv
pop
out
cmp
mov
sarb
push
aaa
pop
adc
popf
inc
xor
jne
and
pop
add
xchg
stos
and
addr16
int3
jne
scas
ljmp
scas
xchg
sbb
push
add
ja
pop
sub
lahf
stos
and
sub
pop
xor
shll
mov
cmp
insl
cmc
mov
lods
fnsetpm(287
stc
mov
sahf
popa
test
pop
jnp
jg
std
jle
pop
lock
cs
mov
les
mov
pusha
test
sub
data16
or
int3
adc
sbb
mov
sbb
inc
in
inc
mov
lea
aas
mov
cmp
and
xor
repnz
jo
fildll
cmpsl
loopne
sub
sbb
adc
xor
sub
enter
scas
and
cmp
jge
add
add
into
xor
dec
xchg
mov
jb
mov
mov
inc
push
out
xor
jge
sti
mov
jns
lds
xchg
fs
mov
mov
cmc
sbb
mov
in
testb
and
lcall
xor
mov
inc
mov
sub
outsl
fstps
cs
and
add
xchg
add
lds
arpl
stc
xchg
addl
cmp
dec
dec
mov
cmpsl
or
enter
pop
out
test
ret
test
out
xor
incb
outsl
mov
negb
add
std
stc
jl
cwtl
sbb
enter
ss
shl
xlat
inc
jnp
fisubl
stos
aaa
lahf
or
les
nop
inc
push
xchg
dec
pop
mov
xor
scas
fidivs
icebp
imul
mov
mov
arpl
pop
lods
decl
shl
imul
rcrl
jbe
fstpt
sub
mov
inc
daa
scas
push
cmp
test
add
xchg
and
bound
mov
cmp
scas
jmp
ret
cmpsl
mov
jmp
clc
mov
jmp
insb
int3
aam
xorl
cmpsl
lcall
sub
shll
jle
or
jmp
pop
mov
dec
adc
mov
ja
outsl
dec
stos
rcrl
jle
xchg
std
pop
sub
fprem
out
movsb
cmp
add
add
pop
xchg
xchg
dec
adc
leave
aad
jmp
or
jb
or
fcomps
push
xor
adc
jno,pn
icebp
adc
sub
roll
arpl
loopne
jle
sub
xchg
sub
andl
movsb
cmpb
dec
out
in
mov
jmp
das
jg
pop
mov
adc
cwtl
movsb
jmp
cmp
iret
mov
imul
leave
xor
nop
cmp
inc
in
xchg
xchg
mov
hlt
mov
int3
xlat
xor
stc
out
fimuls
ret
pop
xchg
mov
je
out
mov
cmp
sahf
xchg
and
aad
push
pop
aaa
or
adcl
fbstp
cwtl
aad
shlb
adc
orb
mov
imul
sbb
xor
inc
testl
inc
jle
mov
loopne
xchg
inc
popa
sub
mov
cmp
add
sbb
cs
push
sbb
push
bound
pop
or
test
cmp
jecxz
mov
addr16
rolb
and
test
sbb
mov
testl
jo
xor
pop
andb
out
add
cmp
fstpl
pushf
jl
rcll
fs
pushf
xor
repz
pop
and
push
sbb
outsb
mov
mov
lods
out
pusha
sti
cmp
add
push
lock
jl
popa
stos
mov
into
pusha
aam
cli
sub
jmp
sbb
repz
push
inc
shrb
dec
pop
icebp
xlat
xor
mov
or
outsl
inc
cltd
ds
jp
in
outsl
lods
cltd
sub
sub
sbb
mov
push
stc
imul
sub
jnp
jb
jb
push
int3
xor
xor
pusha
in
lods
mov
cmpsb
call
inc
fwait
in
nop
inc
push
pop
shll
mov
push
sbb
and
pop
cli
push
outsl
lcall
into
stos
nop
cmp
popa
jle,pt
imul
dec
xchg
cmp
sub
inc
pop
and
arpl
adc
stos
lods
sub
inc
mov
mov
lret
mov
rorb
sbb
pop
imul
outsl
sbb
add
add
data16
mov
into
enter
add
push
gs
sub
pusha
hlt
push
std
mov
sbb
nop
js
test
out
jecxz
sbb
mov
insl
xor
rorl
cmpsb
jl
cltd
shll
adc
push
roll
push
xor
popa
xchg
add
ja
ljmp
mov
cmpsl
loop
loop
lds
pushf
xchg
jle
mov
or
out
bound
push
mov
inc
push
jnp
in
stc
fistpl
repnz
push
les
or
jbe
mov
push
bound
popa
orb
int
jno
mov
mov
jae
call
cmp
sub
cltd
in
ljmp
sbb
fistps
in
mov
pop
in
out
sti
and
ret
pop
movsl
out
cmp
fisttpl
gs
sbb
out
into
outsl
les
push
pop
call
cmpsl
inc
ret
mov
mov
push
lahf
jnp
jle
xorb
call
dec
lods
test
mov
inc
insl
xchg
inc
test
shlb
xor
lret
mov
call
jns
sbb
push
mov
push
adc
push
out
scas
xchg
test
sub
pop
fisubrl
popf
or
mov
xchg
mov
outsl
cmp
ja
imul
mov
fwait
daa
aas
insb
scas
inc
repnz
daa
cmp
push
or
and
lods
in
enter
mov
adc
sbb
loope
addr16
icebp
inc
mov
or
sub
into
mov
stos
fnstsw
fisubrs
cli
andb
pop
mov
pop
lds
in
pop
xchg
adcl
add
fwait
lds
jo
pop
jae
push
addr16
mov
movsb
sub
in
dec
lods
lret
scas
popfw
nop
or
adc
aam
dec
int3
lods
mov
jbe
mov
lods
add
cmp
mov
fbstp
fcmovne
lahf
xchg
inc
ja
movsl
fcoms
push
pop
mov
lcall
xchg
lods
dec
add
nop
test
and
lods
fldcw
loop
loopne
add
push
int
cmp
pusha
in
sub
dec
arpl
shlb
test
push
daa
xchg
jg
test
jecxz
imull
or
cmpsl
adc
into
lret
fildl
js
hlt
in
mov
sbb
push
sbb
pop
ret
imul
out
sbb
aas
mov
fdivrs
cmpb
lods
sbb
dec
data16
rcrl
std
mov
adc
dec
lcall
lds
test
push
icebp
popf
mov
sbb
cmp
cmc
sub
or
cmp
adc
aad
dec
sub
push
pop
ret
ret
popf
int3
xchg
std
add
or
ds
shlb
inc
stos
xchg
lcall
mov
and
mov
mov
jbe
push
mov
and
std
xchg
fbld
je
icebp
adcl
mov
mov
cmp
shrb
or
sub
jne
inc
and
popf
into
mov
adc
imul
cmp
mov
xchg
dec
ds
test
stc
and
cmp
push
pop
in
je
bnd
aam
andb
or
outsl
push
sbb
jge
mov
stc
xchg
sbb
adc
adc
fisubrl
es
dec
push
sbb
jge
mov
cmp
test
hlt
rcrl
jp
iret
fs
pop
xchg
and
aam
push
pop
mov
or
inc
test
scas
lret
call
dec
push
xchg
pop
or
dec
xchg
xor
cmpsl
outsb
and
mov
sbb
dec
mov
outsl
fmul
cmpsb
aas
mov
lahf
xorl
cmp
neg
rol
iret
push
or
dec
mov
cwtl
mov
ret
popa
test
xchg
ret
jne
xchg
cmc
fwait
fwait
xchg
pop
push
incb
push
in
mov
mov
subl
sub
sbb
inc
fwait
jno
mov
cltd
mov
leave
xchg
movsb
xor
ja
jl
mov
shlb
fstps
cmp
imul
ret
push
aad
adc
or
fbstp
daa
cmp
out
sbb
out
cwtl
and
fcmove
ret
popf
test
dec
movsb
cld
xlat
mov
jne
cld
xchg
xchg
adc
sbb
mov
ret
sbb
push
shrb
or
xchg
or
fs
jmp
clc
in
in
or
dec
jmp
iret
mov
rclb
and
test
or
pop
xchg
xchg
scas
enter
movsb
lods
mov
sbb
mov
dec
xor
push
ljmp
cmp
mov
test
dec
stos
xor
dec
leave
jns
and
shrb
insl
clc
outsb
enter
shr
inc
popa
pushl
mov
inc
dec
hlt
and
scas
push
out
lods
mov
sub
js
sbb
mov
jne
sahf
lods
das
add
xor
dec
push
push
inc
out
and
and
cltd
adcb
inc
mov
cmp
mov
je
stos
sti
mov
mov
and
iret
dec
fwait
xor
int3
in
orl
icebp
jnp
popf
mov
int3
jno
outsl
js
stos
pop
cwtl
mov
mov
outsl
stos
test
jnp
mov
test
push
cmpsb
stc
or
das
pop
cltd
cli
out
xchg
cmp
outsb
incb
push
xchg
mov
int3
jns
loopne
xor
pop
mov
adc
jmp
inc
inc
lods
lods
je
fildl
xchg
xor
sub
add
stos
push
fistpl
sbbb
inc
into
and
in
pop
addb
and
test
mov
cltd
ret
jo
cli
and
adc
ja
lret
add
push
out
in
aas
lock
subb
es
jbe
push
adc
lret
scas
pop
xchg
bound
cwtl
hlt
stos
xchg
pusha
cmp
pop
aad
sub
fnstsw
cmp
sbb
cmp
mov
repnz
arpl
xchg
fdivrl
test
jb
loope
into
mov
daa
rol
inc
sbb
cld
stos
or
xchg
push
mov
mov
divb
mov
dec
ret
xor
ss
push
fsubrs
stc
and
ror
inc
mov
mov
mov
xor
movsb
aas
dec
or
mov
push
sbb
and
sub
loopne
je
and
pop
incl
lods
push
or
sti
xchg
lods
and
xchg
dec
inc
outsl
mov
cmc
mov
dec
lcall
jge
push
jae
cmc
and
pushf
cmp
sub
push
jns
sbb
sti
jmp
pop
and
cmc
mov
mov
mov
dec
mov
pop
in
mov
icebp
sub
jnp
scas
pop
cli
roll
arpl
sbb
lods
ret
mov
lock
adc
out
lcall
mulb
xchg
inc
jmp
cmp
mov
dec
sub
leave
mov
ljmp
dec
mov
pop
das
inc
ficomps
cld
and
mov
decl
adc
adc
dec
jbe
iret
xor
adc
addr16
aam
adc
push
sbb
psubd
add
bound
adc
stc
out
cmp
inc
std
clc
push
das
in
mov
in
jecxz
fsubs
lret
mull
enter
ret
push
pop
push
and
idivl
in
inc
push
dec
dec
pop
outsb
inc
xchg
addr16
arpl
xchg
inc
bound
test
mov
test
test
rclb
rorb
pop
xlat
orl
iret
mov
shr
add
push
addr16
dec
mov
cmp
pop
xor
rorl
adcl
sub
sub
gs
jmp
loop
add
sbb
sarl
movsl
bnd
jmp
mov
adc
mov
sub
jae,pt
lods
xorb
xchg
add
xorb
xchg
add
data16
ja
dec
in
jecxz
outsb
and
mov
adc
out
es
cmpsb
sub
in
jle
mov
bound
vmaxps
mov
icebp
dec
xor
ja
mov
fadd
xor
dec
pop
cmp
leave
lcall
adc
notb
dec
inc
imul
pushf
mov
sbb
imul
xor
stc
idiv
ljmp
add
mov
stc
ss
outsl
pop
cmpsl
mov
shld
xchg
jl
in
jno
inc
xlat
push
jns
xchg
or
movsb
push
sub
push
jl
shlb
jns
and
ret
xorl
aaa
sub
xor
xchg
pop
push
jmp
mov
or
dec
fxch
mov
pop
xchg
aam
lds
push
add
ret
in
aam
out
inc
ds
cmp
aam
pop
push
and
mov
lea
dec
sbb
ja
orl
ret
push
loope
dec
cmc
mov
dec
sbb
dec
jmp
or
outsb
sub
es
imul
aas
cli
push
dec
cmpb
add
into
mov
xchg
push
ret
lds
pop
jo
lock
or
pop
repz
test
push
or
out
push
mov
jle
inc
test
push
hlt
pop
ret
mov
inc
cld
cmp
mov
hlt
add
add
xchg
fwait
mov
cmpsl
aad
push
jecxz
leave
mov
fs
test
outsl
cmp
loopne
lahf
cmpsb
xor
jb
lds
out
add
or
push
ret
add
fidivrl
add
jecxz
gs
rcrl
pushf
in
sti
xchg
leave
pop
jle
xchg
shll
sub
rorb
outsl
pop
push
ja
arpl
test
mov
aad
imul
jecxz
lret
dec
sbb
test
aad
mov
mov
cmp
add
pop
fs
sar
outsb
and
and
ret
add
cmp
scas
jl
fisubrs
ret
imul
adc
das
fwait
pop
cmc
mov
jp
lcall
xchg
mov
mov
out
add
popf
or
std
dec
xchg
clc
push
fcmovne
push
mov
add
imul
inc
enter
sti
sar
pop
outsl
cmpsb
jbe
sub
sti
addr16
in
push
das
push
push
in
divps
jo
sbb
in
push
mov
sti
adcb
out
xchg
mov
push
dec
inc
lock
dec
inc
xchg
mov
mov
sbb
cmp
lock
movsb
shlb
daa
push
mov
jo
add
loop
iret
push
xor
xor
bound
filds
and
aam
mov
cmc
xchg
xor
xor
mov
packsswb
daa
dec
jmp
test
push
inc
movl
sbb
out
adcl
mov
jle
fwait
or
mov
rol
mov
scas
popf
dec
dec
jp
push
repnz
xchg
dec
out
and
pop
cmpsb
std
arpl
jmp
orl
xor
adc
mov
sub
int3
sbb
in
lods
mull
lcall
std
lea
mov
push
xor
lahf
incb
sbb
test
outsl
adc
push
mov
outsl
in
inc
outsl
sti
inc
mov
loop
test
push
sbb
mov
xor
sub
jge
outsl
push
divb
clc
add
push
and
call
cmpsl
push
sahf
mov
ljmp
and
in
mov
mov
cmp
or
shrl
kmovw
adc
loop
mov
pop
test
sbb
and
push
aam
pop
andl
fucom
jno
pop
in
int
leave
scas
aam
nop
gs
cmc
gs
xlat
dec
sbb
vmovaps
pop
sbb
outsb
outsb
lock
jb
jmp
jb
xchg
sub
dec
les
sub
jb
ret
pop
std
mov
jo
shlb
shll
adc
jle
xchg
lcall
jmp
aad
outsb
aas
dec
push
mov
arpl
pop
sbb
jmp
xchg
cld
lsl
mov
cmp
push
in
mov
sub
add
loop
test
pop
mov
insl
lcall
push
popa
adc
and
filds
rcrl
lret
xchg
js
xchg
mov
jb
push
out
aad
xchg
adc
xchg
mov
ljmp
jnp
dec
sahf
cmpsb
mov
jae
mov
cmp
ljmp
lods
jno
lcall
xchg
lret
ret
cs
in
lret
inc
dec
fiadds
adc
mov
sub
iret
popa
push
mov
xchg
pop
cmp
push
jae
das
push
sub
imul
data16
jno
mov
in
jnp
insl
dec
cmp
lods
shrb
pop
inc
rclb
pop
mov
hlt
sbb
mov
inc
jmp
adcb
dec
mov
call
out
pop
adc
push
mov
jp
bswap
push
cmpsb
ds
and
out
les
sub
orl
divb
push
pop
js
lcall
insb
in
push
mov
fiaddl
lods
push
mov
dec
dec
nop
xchg
lret
dec
add
mov
mov
xor
movsl
sub
xchg
imul
or
cli
orb
imul
stc
clc
dec
es
scas
rcrl
dec
jae
mov
adc
jae
mov
pop
cmp
mov
mov
mov
in
dec
hlt
clc
sahf
nop
cmp
add
into
mov
out
cwtl
or
jle
shll
hlt
hlt
and
xor
cltd
repnz
in
loopne
mov
mov
jle
mov
outsl
aad
mov
adc
ficoml
sti
push
inc
inc
sub
inc
xchg
jno
ja
and
push
ss
ss
cmp
adcb
aad
xor
mov
jnp
cmpsl
out
imul
popa
repz
mov
movsl
jne
out
fldcw
cmp
push
mov
sbbb
aam
ret
stos
popf
mov
mov
loopne
and
fwait
ss
mov
inc
cmp
data16
data16
cwtl
fmulp
mov
andl
test
xor
jmp
xchg
imul
iret
in
icebp
jecxz
and
pop
inc
jl
jmp
mov
lods
lea
xor
and
xchg
dec
stos
jbe
test
xchg
test
push
dec
mov
imul
pusha
pop
cmpl
cmp
ret
mov
jae
popa
into
aas
sub
les
pop
fcmovne
mov
gs
loop
repnz
mov
push
lock
adc
mov
ret
aaa
rorb
call
inc
xchg
xchg
push
in
outsb
cld
repnz
pop
jae
adc
fdivrs
hlt
inc
clc
jp
sub
dec
lods
and
mov
str
jle
mov
inc
push
icebp
pop
sbb
or
test
ret
adc
pop
sub
addr16
repz
movsb
pop
xchg
es
jge
scas
push
aam
add
gs
loop
add
repz
leave
and
and
sub
dec
pop
fnstenv
jecxz
mov
nop
loop
cmpsl
xchg
pop
xchg
pop
push
stos
pop
add
lods
mov
sahf
ss
fbstp
pop
push
frstpm(287
and
sub
or
inc
rolb
sub
xchg
mov
ret
add
mov
cmp
cmp
scas
cltd
and
sub
mov
push
orl
ja
inc
adcb
cwtl
cmp
inc
or
sbb
ljmp
fucom
mov
fcoms
xorb
movsb
jle
dec
mov
mov
add
in
fidivrs
dec
lods
pusha
insl
dec
fs
mov
pop
mov
fisttpll
and
xor
loop
dec
push
addr16
inc
sub
call
mov
dec
dec
adc
sub
cmovns
testl
sbb
push
lret
and
movl
sub
clc
in
dec
jnp
jns
add
fdivs
std
imul
out
popf
push
add
pusha
mov
and
mov
into
in
pushf
cld
jae
fcoml
cmpsl
xor
mov
ds
shlb
or
ret
cmp
data16
repnz
pop
lods
mov
in
test
or
adc
push
mov
xor
mov
push
xchg
jp
sti
xlat
repz
int
mov
fneni(8087
push
gs
fidivl
jo
mov
pushf
pop
sbb
lret
mov
fcompl
dec
dec
fildll
out
jns
sbb
test
repz
push
inc
push
pop
mov
add
pop
je
imul
pop
out
pop
sarl
mov
push
mov
and
out
jbe
jp
out
jl
xlat
jp
cmp
jge
sub
pop
stos
or
test
imul
add
sub
rol
enter
sbb
clc
push
adc
or
mov
inc
mov
addl
pop
pop
inc
imul
imul
inc
dec
mov
mov
inc
lret
xchg
lret
adcb
jno
cmpsb
pcmpeqw
mov
stos
lcall
xor
shll
cmp
push
out
xor
fistpl
js
push
dec
cmp
test
xchg
xor
inc
sub
out
mov
sub
xor
fisttps
push
imul
push
in
mov
imul
pop
popa
iret
or
adc
popf
fisubrs
sti
es
arpl
aas
js
mull
and
add
pusha
push
nop
push
mov
test
sbb
cmp
inc
setp
xchg
into
xlat
sbb
sub
push
das
mov
pop
sub
arpl
pop
loope
cmp
sahf
rol
inc
andb
ss
add
loopne
fisttps
xorb
pop
into
dec
stc
test
call
mov
sbb
push
jno
push
test
int3
dec
mov
cmpsb
adc
or
pop
mov
lock
mov
add
xchg
fisttpl
rorl
popa
int3
mov
adc
dec
or
icebp
push
adcl
push
mov
and
inc
adc
fdiv
movsl
arpl
xor
add
std
sub
inc
dec
push
sbb
mull
fs
inc
dec
inc
int
out
pop
scas
ss
xlat
and
sbb
jns
pushf
inc
inc
mov
in
or
outsb
push
cltd
jg
dec
insb
pop
notl
lcall
dec
xchg
inc
pop
rorb
dec
inc
push
add
repnz
cmp
int
pop
mov
das
mov
shl
xchg
sbb
test
push
xchg
pushf
pop
and
es
push
divl
jg
sub
jmp
adc
jg
xchg
dec
xchg
xlat
inc
rorl
pop
xor
mov
sbb
jae
ljmp
lahf
jp
adc
and
mov
or
adc
repnz
out
pop
in
daa
mov
mov
iret
cmc
into
fistpl
add
mov
aas
call
mov
in
popa
or
and
repz
aad
std
js
pop
out
inc
push
ds
jecxz
insb
push
out
mov
mov
mov
pop
jmp
push
test
int3
out
xchg
sahf
push
call
adc
cltd
mov
rcl
out
or
jecxz
shl
in
push
cli
or
lea
addr16
roll
ljmp
mov
scas
int
ja
shll
mov
js
popf
in
jmp
lock
data16
sbb
js
mov
pop
adc
xchg
add
sbb
sti
imul
cltd
and
mov
push
xor
rclb
sub
inc
xchg
lods
daa
mov
push
push
mov
jbe
movsb
mov
inc
mov
mov
stos
mov
jae
xor
sahf
or
push
and
in
cmp
in
test
jnp
push
dec
enter
cmp
cmp
jno
es
or
push
imul
aam
push
out
xchg
stos
push
pushf
movsl
shll
mov
adc
das
test
mov
push
popa
idivl
mov
movsl
sti
mov
jecxz
mov
inc
inc
sbb
cmp
dec
push
inc
out
arpl
jbe
inc
jmp
sbb
cmp
test
inc
mov
pop
adc
cmp
rolb
inc
mov
inc
jno
sub
in
jno
jo
xchg
mov
sub
js
pusha
add
fisttpll
ret
sbb
lds
sub
mov
cmp
xor
mov
insl
add
sub
andb
xor
and
xor
fistl
int3
push
inc
repnz
add
inc
insl
jp
dec
bnd
test
test
push
jp
call
cld
fwait
xchg
jbe
and
mov
pop
push
pop
mov
ret
mov
popf
lods
pop
daa
mov
push
mov
inc
leave
or
jg
in
xchg
pop
adc
cmp
pusha
sahf
cmp
xor
cmpsb
test
gs
cs
insl
hlt
or
xchg
xchg
push
jo
mov
jae
add
andb
mov
push
sbb
jno
inc
ficomps
data16
jmp
out
cmp
mov
mov
dec
pop
push
add
repz
jb
rsm
fadds
aam
ret
adc
cmp
scas
fiaddl
jle
pusha
and
imul
adc
les
fsub
mov
insl
sti
into
xchg
mov
xor
cltd
test
int
jle
jbe
sbb
sbb
inc
dec
hlt
frstor
sbb
mov
adc
cmp
jno
push
or
lods
test
pop
pop
orb
mov
hlt
push
sub
out
sub
shrb
sub
pop
add
je
mov
mov
push
jno
int
cli
lds
rcrb
lds
inc
push
out
in
pop
into
popf
div
mov
lods
fs
inc
inc
push
inc
int
cmp
imul
dec
test
xchg
xor
fisubrs
sub
jo
dec
xchg
lahf
pop
adc
add
xorb
aam
sti
daa
xchg
hlt
or
adc
rcll
xchg
sbbb
sbb
mov
cmp
cmp
inc
popa
test
clc
xor
inc
or
adc
sbb
popa
dec
xlat
dec
cli
stos
daa
ljmp
lret
or
xor
scas
lret
lret
nop
test
arpl
push
mov
out
das
mov
adc
movsl
inc
xor
mov
adc
add
fnstsw
in
movsl
cmc
out
mov
out
add
mov
lret
dec
sbb
stos
push
push
pop
lcall
dec
push
pusha
sbb
addr16
outsl
lds
or
mov
cli
mov
mov
jno
dec
jg
arpl
shlb
mov
inc
rorl
dec
pop
push
mov
or
jg
call
push
push
or
dec
and
sbb
test
shll
mov
divb
inc
stc
or
ljmp
push
out
leave
push
cltd
inc
movsl
sub
or
das
in
imul
adc
cmp
aaa
pusha
adc
les
mov
sarl
sbb
mov
sar
push
add
add
mov
in
xchg
push
pop
mov
push
fwait
stc
jnp
dec
sub
mov
addb
int
push
pop
xchg
push
mov
sahf
imul
push
rorb
repz
int
push
cmp
loope
xchg
lds
inc
int3
ret
ljmp
adc
test
cmp
stos
bound
sbb
out
scas
mov
sbb
lods
shrb
and
push
movlhps
and
add
les
or
jg
aam
idivl
insl
pop
xchg
pop
xor
in
enter
repnz
filds
ljmp
stos
dec
aad
mov
mov
into
fisubs
sbb
imul
push
sub
sbb
and
pop
and
movsl
pop
fsubl
jp
lods
out
push
ftst
sbb
mov
aaa
dec
orb
xor
je
sub
and
inc
cmpsb
fstpl
daa
mov
fwait
pop
scas
pop
sub
jp
aaa
fdivr
out
out
cwtl
into
outsl
jae
mov
inc
jle
adc
lcall
push
inc
jge
sub
mov
pop
sub
push
int3
pop
and
in
rclb
jbe
mov
dec
sti
and
or
push
mov
xchg
xchg
insb
mov
cmp
mov
jns
sbb
jle,pt
push
and
or
lahf
jmp
mov
ret
pop
cmp
mov
dec
bound
out
cmp
push
cmp
adc
iret
push
mov
pop
out
push
das
test
pop
mov
bnd
clc
ds
cli
int3
push
jg
lea
xchg
xchg
jg
xor
hlt
mov
add
in
addl
ja
cmp
divb
test
sahf
sbb
cmp
insb
jl
jns
mov
scas
pop
xor
imul
in
gs
xchg
mov
or
dec
je
pop
jnp
aam
and
cmp
movsb
adc
movsl
addb
lods
adc
int
bound
scas
pusha
movsl
push
adc
dec
add
mov
imul
sub
cmp
aas
es
cmp
repz
jbe
push
sahf
dec
mov
cmp
fwait
insb
mov
lock
xor
mov
fmull
pop
and
popa
loop
pop
popf
stos
sub
add
je
mov
lahf
insl
test
in
jb
aaa
dec
repnz
mov
cmp
cmp
xchg
dec
scas
repz
push
inc
and
cwtl
push
aas
dec
shl
ljmp
popa
fstpt
add
lea
inc
cmp
dec
jae
lret
je
ja
test
dec
inc
jle
mov
shlb
and
ficoml
orb
scas
mov
dec
fisubrl
adc
rcrb
adc
test
stos
popa
push
out
xor
fildll
sbb
addr16
pop
fwait
push
sbb
insb
inc
std
sub
dec
jo
jg
xorb
arpl
scas
sbb
leave
push
sarl
rcrl
mov
out
xor
jno
inc
jge
popa
adcl
mov
push
ss
mov
mov
push
mov
mov
js
push
mov
adc
sbb
cmp
push
mov
xor
sar
lods
cmp
sub
sub
pop
sbb
jne
repz
repnz
bound
or
loop
mov
sbb
sub
mov
push
insb
es
arpl
aas
fs
test
cmp
cmpb
jbe
and
sbb
rcll
push
ja
mov
mov
sub
div
shlb
adc
clc
bound
add
int
fcmovnu
mov
ss
pop
lahf
push
cmpl
jne
jge
jp
outsb
jecxz
xchg
mov
fidivrs
mov
sbb
jge
adc
mov
sbb
hlt
push
lds
fcmovbe
cmp
shll
pop
lret
lcall
push
mov
push
sbb
add
rol
loopne
mov
push
cwtl
lret
push
popa
push
sub
dec
jecxz
mov
xchg
movb
xor
imul
fistps
push
ret
xchg
imul
adc
mov
les
and
push
mov
sbb
mov
jmp
xchg
ja
cs
iret
popf
lret
dec
dec
jg
fcomp
int
push
rclb
les
pusha
cltd
jp
mov
inc
arpl
jg
idivl
arpl
outsb
mov
push
push
es
push
popf
cmp
test
fs
or
push
sub
push
jge
lods
bound
xchg
mov
movsb
in
sub
add
in
in
scas
rolb
int
jmp
sub
in
xchg
sub
daa
sbb
or
clc
pop
and
jmp
sbb
xchg
stc
adc
add
xchg
add
je
mov
mov
add
or
mov
lahf
jne
popf
aam
add
pop
outsl
ret
xchg
and
ds
mov
push
popf
and
xchg
std
scas
out
in
dec
test
call
orl
mov
stos
sbb
push
cld
push
aas
add
adc
data16
js
mov
inc
lods
and
and
loop
int
lods
in
ror
and
xchg
jbe
mov
push
mov
lods
adc
pop
flds
cmpl
fs
outsb
std
ret
stos
lods
pop
sbbb
mov
jo
clc
mov
mov
dec
xor
test
fildl
jae
fdivs
ret
loop
mov
jl
push
dec
mov
loope
cmp
leave
inc
mov
xchg
xor
inc
in
adc
sub
and
test
lock
push
add
mov
xchg
enter
sub
movsb
nop
push
int3
loopne
cmpsb
mov
xchg
pop
sbb
sbb
xchg
mov
ret
xor
xor
dec
fcom
xor
jbe
cli
je
inc
icebp
sub
in
jmp
aas
mov
gs
shr
jno
sbbl
xor
or
and
pop
pop
jae
pop
jge
in
jno
es
insl
mov
pop
andl
adc
or
in
cmp
addl
xchg
mov
sub
scas
mov
and
fstpt
sub
aad
pop
int
sbb
in
add
notb
push
out
shlb
xchg
cltd
insb
xlat
push
push
fisubrl
out
pop
fs
cmc
jl
push
addb
lret
cld
push
mov
test
lock
scas
out
icebp
inc
or
inc
jl
popf
sub
adc
sarl
js
mov
int
mov
mov
dec
sbb
jp
jo
xchg
lret
shlb
add
sub
push
adc
pop
xchg
gs
or
popfw
ja
cmpsb
or
test
in
and
inc
int3
fcoms
pushf
cmpsb
xor
inc
lock
or
mov
cwtl
es
pop
js
push
sarl
call
adc
mov
inc
push
cmp
mov
movsb
xchg
nop
and
sub
fildll
cmp
jmp
scas
lret
pop
sub
or
xchg
into
add
xlat
fbld
mov
enter
fdivrs
insl
loop
push
mov
adc
sbb
xor
ficomps
imulb
movsl
andl
sbbb
sbb
fildll
inc
mov
aaa
lods
inc
leave
dec
mov
mov
je
inc
iret
es
add
pop
scas
scas
les
fcmovnb
xchg
arpl
jge
and
fiadds
int3
repz
rcrb
insb
jge
dec
std
mov
push
js
sub
lds
dec
nop
jmp
bnd
sbb
stc
ret
or
outsb
lea
or
test
cmp
cmp
test
stos
and
cwtl
xor
or
notl
xchg
les
gs
repnz
xchg
sbb
jbe
sub
ds
xchg
dec
sub
addr16
repz
ficoml
mov
mov
cld
ret
add
std
pop
jnp
adc
inc
or
xchg
lahf
dec
cmpl
sti
dec
adc
rolb
insb
pop
lods
xchg
add
xchg
into
stc
or
add
int
out
push
push
jle
int3
dec
pushf
inc
push
out
imul
mov
xor
leave
scas
lods
sub
adc
sub
les
mov
pop
adc
in
cli
xor
test
into
dec
sub
fwait
dec
ds
bound
or
andl
jo
xchg
shll
sub
or
out
pop
inc
dec
push
int
sbb
into
jmp
and
sbb
cmp
or
jge
dec
and
push
pop
jnp
inc
stos
add
sbb
es
cltd
roll
jge
arpl
or
mov
or
stc
sub
rorl
xor
ret
into
mov
imulb
push
loope
add
test
out
pop
inc
enter
xorb
push
push
and
iret
and
ret
mov
pop
mov
dec
adc
lock
adc
in
dec
xchg
xor
data16
call
or
adc
notb
jbe
jecxz
insb
pop
mov
push
sbb
xchg
mov
push
movsl
pop
cmp
pop
shl
loope
fwait
ljmp
push
lahf
push
pop
out
mov
aas
and
xchg
inc
mov
xchg
nop
icebp
cli
in
sub
iret
lret
outsb
sub
sbb
add
outsl
jo
aad
inc
dec
cmp
out
or
xchg
cmpsl
ja
mov
pop
push
pop
pushf
cmp
mov
or
out
adc
subl
push
cmp
jno
fwait
mov
mov
xchg
ljmp
jp
test
leave
cmc
lods
out
insl
dec
xchg
push
lea
mov
testb
out
mov
jmp
into
lds
cmpsl
lock
lahf
std
and
ret
cwtl
dec
mov
xchg
pop
ljmp
pop
idivl
mov
sub
or
pop
out
adc
xor
jg
mov
shl
roll
inc
push
dec
push
xchg
cmp
adc
lods
jmp
aad
arpl
inc
call
adc
mov
ds
imul
nop
cmp
dec
pop
loop
cmpsl
pop
mov
or
scas
fdivrl
mov
stos
pop
outsl
add
push
loopne
xchg
lods
inc
jp
sahf
xor
int
xchg
jp
repnz
add
mov
pushf
xor
shl
mov
lret
je
notb
mov
mov
imul
sub
outsl
popa
jmp
std
lea
loopne
test
lret
cmpsl
cmp
jp
icebp
rorl
outsl
imul
shl
jae
imul
test
jb
hlt
loope
push
inc
jl
test
add
jae
rorl
push
icebp
adc
in
jmp
imul
and
mov
mov
sub
mov
mov
repz
fsubrs
imul
arpl
addr16
cmp
mov
rorl
push
cltd
mov
sarb
adc
nop
mov
cmp
int3
jl
push
fldl
enter
or
mov
fisubs
fistl
cwtl
push
sub
ljmp
cmp
sbb
scas
in
xor
pop
out
jge
dec
xorb
nop
fs
sub
bnd
nop
pusha
add
dec
aam
scas
sub
popa
sub
lods
mov
shrb
sti
sbb
mov
cli
clc
sti
repnz
pushl
loopne
xor
push
imul
scas
cmp
lock
int3
xchg
loope
movsl
gs
nop
test
mov
xor
aam
in
lea
leave
in
popf
mov
aas
mov
mov
and
add
neg
lds
imul
inc
pop
dec
ljmp
inc
push
test
out
push
push
fmuls
arpl
sahf
rolb
jecxz
call
mov
clc
cwtl
cmp
fwait
hlt
lret
push
pop
cs
mov
pop
mov
mov
js
push
cmpsb
movsl
push
mov
dec
aad
int3
shll
shld
jmp
mov
cmpsl
ja
fisttpl
cld
gs
pop
lret
cmp
adc
cld
mov
int3
test
insl
and
cwtl
jo
ja
stc
nop
testl
mov
push
movsb
lahf
loope
ds
sub
ret
ss
js
push
out
clc
pop
data16
call
into
xor
xor
sub
inc
mov
jns
out
js
jbe
test
pop
insl
xchg
data16
stc
loop
sub
fidivl
sbb
setae
cmp
inc
push
jge
call
mov
cmp
sti
xchg
inc
out
sahf
fisubl
jo
test
in
movsb
ds
sub
mov
adc
jae
addl
add
xchg
push
mov
mov
fmulp
and
repz
ret
rol
out
fcoms
add
mov
or
out
movsl
or
out
fsts
aaa
inc
call
xchg
js
iret
clc
test
mov
lcall
notl
in
into
jp
jno
stos
adc
ss
clc
pusha
and
adc
insb
scas
sub
sti
insb
enter
aad
cmp
or
sahf
mov
lahf
jecxz
add
roll
pop
mov
jle
fstpl
imul
popa
rep
and
clc
mov
ret
add
stos
sbb
daa
gs
test
mov
je
sub
cli
or
test
int
pop
and
dec
mov
lods
mov
orb
inc
sbb
sub
enter
fisubl
mov
dec
inc
or
shrb
lea
jg
jp
jns
xchg
incl
xchg
fcompl
es
and
jno
jns
mov
dec
ret
adc
add
dec
insb
sub
fiaddl
xchg
fnstsw
push
xchg
test
lcall
or
fwait
lahf
shll
ss
sarb
xchg
cmpps
ss
jg
dec
call
xor
out
push
pusha
mov
aaa
sub
repnz
das
js
mov
adc
mov
push
loopne
inc
out
add
dec
or
aaa
xor
dec
xchg
js
jo
sbb
mov
cmpsb
aaa
nop
into
data16
lock
adc
bound
into
pop
lods
jmp
mov
int
dec
push
xor
push
roll
push
pop
scas
sarl
push
test
sarb
es
jmp
dec
jbe
or
add
or
movsl
adc
fsts
aaa
arpl
hlt
push
pop
inc
jbe
mov
shr
bound
sarl
adc
cmpsb
jnp
dec
aas
and
sub
dec
stos
std
inc
sub
push
mov
inc
bound
add
jmp
movsl
insl
mov
sub
lds
in
ja
mov
test
cmpsb
xchg
mov
sub
lcall
push
call
or
sti
xchg
sub
push
mov
stc
xlat
ret
out
adc
inc
adc
lds
and
loop
gs
decb
insl
cmc
sub
mov
dec
nop
and
inc
push
or
push
xchg
mov
sub
xor
mov
dec
mov
aam
jae
pop
lea
int3
or
fidivl
sahf
add
inc
repz
lcall
neg
in
xchg
mov
insl
lcall
and
jecxz
cli
mov
mov
je
loope
scas
ja
adc
scas
cmp
and
idivl
sarl
out
mov
out
mov
jge
jmp
inc
fildl
push
mov
cltd
in
and
cwtl
lea
sub
loope
xchg
cmp
jno
dec
test
sahf
popf
pop
in
ds
dec
xor
pop
inc
xor
pop
xor
test
arpl
lods
call
inc
xchg
xchg
jg
test
push
aam
leave
jae
nop
sbb
lods
push
dec
aas
daa
add
jo
mov
dec
mov
aam
mov
pop
or
out
adc
movsl
jmp
int3
and
popa
jbe
inc
pop
out
mov
les
pop
pop
fwait
into
iret
push
xchg
cmc
inc
mov
mov
push
fidivrs
mov
push
or
lret
jge
mov
ret
lret
stos
sub
test
mov
push
or
jmp
push
mov
xchg
xchg
movsb
mov
add
jno
test
ja
mov
pop
imul
enter
les
dec
pop
addb
and
jp
mov
out
imul
sar
lret
mov
cs
mov
ds
inc
icebp
cmp
pushf
test
mov
push
and
xor
es
push
dec
mov
jae
mov
in
rcrb
xor
xor
or
lea
dec
loop
dec
fnstsw
movsb
rcrl
pop
jle
test
stos
int
xor
out
and
sbb
cmc
xchg
cs
mov
out
fcmovb
xlat
hlt
mov
sub
shl
ret
movsl
imul
shrb
add
je
push
sbb
adc
mov
mov
xchg
arpl
sbb
fidivrl
test
jb
aad
dec
adcb
lods
xor
daa
mov
mov
sbb
pop
fnstenv
fsubrl
push
add
mov
dec
aad
addr16
lock
cld
or
fdivs
add
in
jns
rcrb
pushf
dec
stos
adc
inc
inc
dec
fcom
mov
in
insl
pushf
jg
xchg
and
or
lea
pop
xchg
xchg
xchg
dec
pop
ffreep
and
cmp
jl
mov
sbb
mov
push
pop
xchg
pop
fistpl
fistps
ret
jo
adc
sarb
aad
add
mov
mov
ds
inc
or
mov
sbb
test
and
xor
dec
mov
adc
cmp
ss
les
leave
adc
in
andb
shlb
jp
js
sbb
pop
push
scas
lea
aad
in
rcll
adc
xor
adc
stc
lcall
aaa
aam
icebp
mov
notb
gs
sub
pushf
inc
cld
iret
add
jle
aas
call
and
sbbl
insl
shlb
rclb
push
sbb
pop
scas
subb
js
push
mov
dec
push
hlt
inc
jo
fldenv
push
cli
adc
add
shrb
mov
xchg
scas
xlat
es
and
pop
sbb
cmp
cli
leave
fbld
lods
orl
mov
jl
adc
push
xchg
mov
pusha
jmp
inc
push
inc
adc
cmp
cmp
pop
repnz
dec
jle
sub
pushf
shll
sub
leave
shlb
dec
sub
iret
loope
dec
hlt
movsl
and
fisttpl
jmp
add
ja
mov
adc
push
loope
mov
push
roll
xchg
in
mov
lock
xchg
ds
cs
xchg
out
adc
dec
mov
cmp
xor
or
rcrl
sbb
sub
sub
mov
lcall
mov
call
sub
jge
mov
cmp
inc
enter
test
ret
cmp
in
push
outsl
aam
pop
mov
setp
clc
in
je
aas
mov
aad
sbb
loopne
xchg
mov
xchg
int3
mov
add
test
push
ljmp
sub
adc
in
test
mov
mov
or
cltd
in
and
mov
sbb
jnp
pop
push
ljmp
sbb
clc
ret
shll
test
testb
push
aas
push
test
pop
adc
pop
sub
loope
clc
mov
mov
jge
insl
lret
pop
jae
lea
adc
call
or
fxch
in
iret
sub
push
in
or
addr16
in
and
dec
xor
fs
xor
cwtl
gs
lds
flds
arpl
pusha
dec
push
and
addr16
clc
cld
and
xor
test
mov
xchg
lods
push
mov
inc
daa
enter
mov
shll
and
cltd
outsb
push
sub
cld
icebp
subb
jae
cmp
jecxz
jns
push
cmp
push
fdivrs
scas
jns
mov
add
std
or
mov
ja
out
lods
leave
or
inc
rorb
test
sub
or
push
mov
push
popf
fdivrp
xorb
push
fidivs
lds
ljmp
xchg
jb
repnz
inc
inc
pushf
mov
and
imul
xchg
jmp
fldcw
jp
or
lcall
fcomps
dec
lea
jle
cmp
lea
aaa
loope
cmp
movsl
int3
or
jge
sbb
inc
fsts
xchg
push
in
push
add
push
test
or
clc
mov
hlt
inc
arpl
lods
pushf
jae
lret
arpl
jae
pop
imull
mov
out
push
or
pusha
ds
in
pop
gs
repz
adc
outsl
mov
js
aaa
sub
adc
jl
pop
push
scas
sub
les
enter
loopne
mov
mov
pop
mov
or
fmuls
push
pusha
sbb
mov
sbbl
int
nop
jl
inc
shrl
fadd
and
sub
lcall
fcoml
push
mov
dec
fildl
insl
shll
cs
pop
les
or
adc
insl
mov
addr16
pusha
clc
mov
ja
mov
mov
cmp
pop
jge
dec
popa
aad
imul
mov
mov
or
int3
pop
fadd
cmp
xlat
sahf
mov
repz
jnp
push
xchg
aaa
mov
mov
pop
xor
xchg
push
out
test
sub
fwait
shll
pop
cmp
add
imul
fsts
push
mov
outsb
into
push
mov
dec
adc
mov
lcall
or
mov
out
cld
xor
lods
mov
add
ret
jge
stos
enter
pop
xor
push
add
pop
repz
cmpl
or
leave
fsubl
mov
daa
xor
and
jmp
and
incl
lds
mov
or
insb
add
mov
in
cwtl
ss
jns
stos
out
pop
xchg
ds
inc
adc
leave
pushf
adc
idivl
lret
mov
pop
mov
mov
xchg
inc
adcb
test
inc
sahf
test
fldenv
add
dec
test
outsl
shll
sub
xchg
pop
in
mov
js
push
out
hlt
loopne
adc
jno
sbb
mov
fsubrl
cld
cmp
insb
js
lock
shlb
and
arpl
sbb
pop
ret
inc
cld
subl
popa
in
mov
aas
inc
xchg
pop
sbb
mov
movsb
fldcw
test
sahf
sbb
test
das
ret
sub
ja
test
or
dec
xor
test
lock
fcom
pop
jns
in
xor
mov
sub
and
dec
adc
hlt
cmpsl
in
cmp
add
repz
movsb
jg
cmp
or
es
mov
jno
sti
mov
rcr
roll
ljmp
pusha
rol
adc
rcrl
pop
push
push
ret
jge
stos
mov
dec
ffreep
push
js
add
xor
xchg
bound
inc
pop
and
ds
mov
mov
std
sbb
sbb
pop
fildl
movsb
dec
add
or
test
daa
hlt
shlb
push
xchg
cld
repz
leave
inc
mov
repz
mov
aaa
jbe
lret
mov
xchg
fs
xchg
or
lock
jne
jle
imulb
inc
xchg
pop
cltd
in
rcl
cmpsb
mov
call
and
pop
jmp
mov
push
xor
arpl
jmp
mov
push
sarb
adc
jnp
lret
adc
cmp
dec
loop
mov
mov
lods
aad
or
sub
jecxz
sub
test
ljmp
lret
push
ss
mov
sub
mov
loopne
cltd
mov
push
mov
in
insl
pop
push
outsl
or
in
jle
xor
shlb
push
mov
fucomip
div
sub
xor
mov
lret
add
and
fcomp
or
push
sti
test
mov
and
cmp
rcr
shlb
mov
fildl
int3
pop
add
out
jne
mov
sbb
dec
sub
outsl
xor
pop
in
jno
add
push
inc
loop
xor
ss
out
sbb
int
cltd
shrl
aas
jg
mov
mov
inc
mov
pop
sarb
loop
rclb
push
fdivl
xlat
sbb
sbb
dec
jmp
cmc
mov
sti
xor
inc
mov
jmp
sbb
adc
pop
mov
gs
fwait
mov
mov
mov
mov
mov
push
xchg
nop
loop
or
add
pop
mov
inc
fwait
cli
movsb
scas
mov
call
and
outsb
xor
mov
mov
sub
fnstsw
jl
mov
aas
xor
lcall
mov
pop
xlat
lods
xor
xlat
out
lods
jnp
or
popa
mov
add
out
fxch
js
adc
fidivs
pop
gs
jg
int
out
cmp
in
or
jl
fsubs
mov
adc
mov
mov
jnp
adc
outsl
leave
inc
fdivs
loope
rorl
add
scas
xor
stos
clc
stos
iret
repz
cmp
sbb
orl
int3
ret
outsb
mov
cmp
jne
fdivs
aam
xor
xor
or
dec
insb
test
stos
jae
xor
and
push
push
or
mov
add
add
out
xchg
iret
roll
lock
cmpsl
jp
scas
pop
bound
data16
stos
das
inc
stc
enter
mov
or
push
and
and
movsb
jmp
cmp
inc
and
pop
cmp
cmc
inc
pop
mov
sbb
adc
scas
dec
call
mov
ret
std
imul
negb
dec
push
dec
mov
jno
or
and
out
ljmp
sbb
imul
mov
fcoml
lods
sarb
xor
mov
rcrl
stos
ret
stos
jle
scas
push
cltd
add
mov
mov
xor
add
aam
arpl
inc
push
dec
mov
dec
mov
fucomip
aaa
ret
cmp
jno
add
cmp
cmpsb
insb
xchg
sub
scas
adc
cmp
cltd
imul
xor
in
addr16
cmp
adc
cmp
test
dec
pop
icebp
xor
lahf
xchg
in
out
sbb
pop
cwtl
adc
pop
aam
or
iret
insb
testb
lahf
push
ret
mov
mov
stc
out
xchg
cmp
daa
push
movsl
or
jo
mov
sub
aas
fidivrl
inc
enter
push
pop
inc
outsb
mov
push
add
in
sub
jnp
sahf
sub
jno
sti
sub
into
lahf
rcrl
adc
insl
iret
cli
or
mov
push
insb
out
push
loopne
fwait
subl
movsl
daa
xchg
movsl
add
rcrb
xchg
imul
popl
jae
aad
clc
pop
mov
arpl
aas
fcoml
imul
add
push
add
insl
int
push
push
jbe
mov
sub
orl
fstps
mov
sbb
mov
sub
sbb
hlt
stos
pusha
jmp
fsubrp
dec
lret
sub
data16
inc
shll
xor
sahf
and
mov
stos
mov
add
fidivl
sub
aas
xchg
and
sub
rolb
push
and
adc
pop
inc
pushf
push
push
sbb
dec
add
dec
sub
data16
dec
dec
mov
lods
add
pushf
xchg
pop
int
pop
cmp
shrl
das
je
loope
pop
les
mov
in
sar
or
adc
stos
dec
cli
lret
scas
jge
inc
dec
pop
mov
mov
cmpsb
adc
fadd
or
sub
out
inc
scas
mov
pop
fcomi
add
push
inc
mov
or
or
scas
rcrl
pusha
movb
cmp
out
inc
aas
lret
add
in
int3
add
cmpl
xor
stc
xor
insb
in
pusha
mov
rolb
xchg
push
aad
sbb
orl
out
inc
in
out
and
aad
mov
add
xchg
xchg
aas
mov
outsl
pop
xor
sub
stos
adc
xor
push
xor
shl
mov
test
cmc
aam
leave
loope
pop
mov
sbb
stos
aas
inc
add
pushf
cmp
ljmp
dec
pop
out
xchg
pop
pop
fwait
and
test
sub
out
incl
jbe
leave
xor
or
addr16
roll
pop
shrb
daa
xchg
lret
cld
mov
pop
jno
pop
aaa
mov
xchg
xchg
sub
int3
outsb
inc
test
and
add
in
movsb
or
and
mov
repnz
xchg
or
es
in
sbb
fisttpll
sahf
adc
fwait
or
iret
mov
repnz
cmp
sbb
sbb
dec
mov
mov
xchg
or
add
add
bound
mov
xor
cmp
cs
iret
mov
add
sbb
inc
add
cmc
xchg
inc
or
mov
jmp
and
lea
jnp
adc
lock
cmc
mov
xchg
cwtl
dec
and
adc
jge
outsb
out
lcall
sub
pop
gs
shll
rorb
mov
push
jle
stos
dec
repnz
jg
pop
repz
adc
sti
inc
fnstcw
add
in
or
cmpsb
cli
lods
jno
js
pop
sub
std
lock
sbb
ljmp
sti
pop
lcall
xchg
jno
daa
shlb
push
add
mov
dec
loope
pusha
ret
in
test
cmp
mov
xor
add
and
test
popf
mov
lea
sahf
fcmovnb
in
enter
jecxz
enter
insb
xchg
idivb
mov
stos
mov
sti
addr16
mov
bound
add
xlat
cli
fwait
fs
cs
jecxz
es
mov
or
shll
es
add
sbb
mov
shl
or
fiadds
xchg
sbb
mov
out
idivb
xchg
mov
pop
pop
xor
and
dec
and
std
mov
inc
mov
loope
repnz
cmp
mov
mov
ljmp
cmpsb
jne
jmp
mov
pop
mov
add
outsb
lods
mov
aaa
into
gs
push
addr16
popa
lcall
subl
push
fs
mov
ret
pushf
ret
enter
pop
insl
jmp
shlb
xor
xlat
mov
arpl
jbe
inc
insl
int3
push
mov
adc
mov
stos
cmp
lret
jns
or
cmp
mov
in
adc
insb
inc
aam
bound
gs
loopne
push
test
imul
ljmp
popf
xor
mov
xor
jecxz
popa
push
or
adc
jns
test
or
out
scas
push
pop
out
jecxz
pop
push
insb
or
xor
push
dec
dec
lock
pushf
movsl
pushf
inc
jne
jge
dec
loop
aad
fildl
ds
bound
into
pushf
in
and
in
or
mov
scas
insl
mov
adc
cwtl
mov
mov
xor
les
cmp
xchg
cmp
sub
call
jmp
push
enter
mov
cmp
lea
inc
adc
call
inc
in
fistpll
or
lock
flds
mov
out
ss
push
sbbw
out
cmc
scas
shrb
pop
or
adc
les
sub
scas
jnp
sub
imul
in
outsb
je
stc
ljmp
in
fisubrl
ja
jle
jb
xchg
ret
popa
fistl
cmpsw
xchg
jne
inc
sub
jnp
fmull
repz
in
push
cli
fwait
dec
lcall
aam
bound
push
icebp
xchg
cmp
push
inc
sub
mov
negb
cmp
test
scas
dec
fsubrl
xor
mov
jmp
in
sub
jle
pop
pushf
inc
popa
push
push
xchg
xor
jp
lret
mov
movb
pop
decb
push
aad
and
mov
xor
dec
bnd
in
cltd
or
and
xor
pop
sbb
fs
les
jl
hlt
push
out
leave
outsb
call
lods
cmc
mov
imul
aaa
adc
cmpsb
mov
sub
sahf
mov
rcr
inc
rcrl
adc
frstor
pop
in
gs
dec
test
or
bound
int3
add
sub
andb
bound
rcl
xchg
fidivl
jns
fucomp
pop
mov
out
stos
call
inc
mov
loop
xor
pop
jmp
repnz
leave
jmp
mov
cs
leave
dec
jbe
in
popf
add
mov
xor
xchg
pushl
push
pop
xchg
dec
lods
shrb
insb
mov
imulb
inc
inc
loopne
aaa
xchg
divl
lea
push
inc
jno
cmp
pop
mov
sbb
xor
add
mov
pop
jmp
add
xor
add
fidivs
addr16
jb
ljmp
sub
js
subl
xor
lods
arpl
lahf
sub
xchg
xorb
xchg
divl
lahf
call
mov
pop
mov
xchg
movl
ret
add
sub
xchg
ds
mov
ret
jle
rep
inc
pop
daa
aam
push
pop
loopne
popf
sub
mov
test
xlat
lret
fs
jno
xor
ljmp
add
lret
scas
add
push
sti
loope
dec
adc
das
and
push
jno
fstpt
js
bound
sub
jecxz
in
leave
out
test
dec
dec
std
sub
sub
dec
cwtl
sbb
xchg
sub
cli
lcall
mov
movsb
xchg
rcl
xchg
inc
sub
ss
call
loope
mov
jle
inc
mov
loope
movsl
inc
mov
ss
inc
fistl
scas
sbbb
dec
imul
pop
int3
mov
int3
pop
add
or
orl
mov
arpl
sbb
xor
inc
iret
mov
inc
mov
sbb
insb
adc
pop
loop
mov
add
cltd
stos
cmpsl
aas
or
mov
sbb
xchg
or
inc
xchg
push
ja
outsl
mov
cmp
mov
jno
repz
dec
bound
cli
add
fistl
icebp
and
in
pusha
sub
pop
dec
das
push
push
lret
dec
mov
movsb
in
mov
insb
setns
pop
subl
cmp
pop
dec
cmpsl
shrl
fidivrl
push
sub
aaa
pop
hlt
push
out
nop
into
rorb
mov
adc
addr16
xchg
mov
mov
scas
push
or
cmpb
out
daa
shlb
das
arpl
test
cmp
mov
pop
push
int
sbbb
jmp
arpl
push
jb
enter
and
push
cmpsl
xchg
add
aas
shll
push
jo
push
jmp
call
loopne
stos
jge
sbb
dec
lds
xchg
test
jg
or
adc
cmpsl
mov
adc
push
aas
jb
pop
lds
mov
notb
mov
in
cwtl
push
jge
lds
mov
shl
imul
outsb
jne
pop
cwtl
inc
inc
mov
incl
and
mov
lea
fnstenv
mov
sbb
out
adc
scas
inc
popf
xchg
lahf
push
jae
stos
jo
lock
fnstsw
push
es
pop
sti
cmc
in
sbb
stos
rol
hlt
test
inc
shlb
xor
inc
mov
inc
iret
cmp
or
mov
out
jmp
jmp
sbb
neg
in
and
out
nop
or
push
pop
insl
jmp
aad
mov
gs
dec
into
xchg
iret
mov
lldt
mov
or
jmp
loop
inc
inc
or
scas
rcrb
dec
fcoml
inc
push
daa
and
shrb
imul
lahf
mov
sbb
and
in
out
fcmovnu
mov
test
aaa
xchg
xor
packuswb
sbb
and
push
data16
xchg
sbb
adc
dec
movl
adc
mov
rolb
xor
cld
out
enter
mov
jns
shll
sbbl
loop
push
push
mov
jmp
ja
lret
sbb
lcall
sarb
adc
cmp
mov
mov
jecxz
pop
xchg
mov
ret
mov
out
insl
shrl
sbbb
stos
fsubs
std
rolb
stos
fdivs
fmul
in
sub
xchg
test
rclb
fsubl
pop
adc
sub
nop
pop
mov
ljmp
das
data16
mov
aad
inc
mov
dec
push
fmul
xchg
sarb
lds
pop
mov
cmp
mov
mov
vpmacsww
xchg
dec
xlat
in
fisubl
adc
mov
add
push
or
shrb
xchg
mov
cmp
and
nop
sarb
mov
and
or
addr16
leave
or
cltd
rol
mov
mov
movsl
jl
jb
repz
dec
dec
lods
or
out
add
xchg
cmc
repz
in
push
leave
jge
or
outsb
ret
dec
or
loopne
mov
das
push
rorb
aas
repnz
stc
out
test
add
cmp
inc
mov
push
cmp
outsl
dec
into
stc
repz
aaa
push
sub
sub
dec
adc
push
daa
jbe
hlt
push
data16
inc
xchg
lahf
jmp
pop
cld
fiadds
push
push
je
push
ss
testl
lret
jmp
cmp
cli
adc
cmp
jne
clc
dec
mov
push
aaa
int
int3
test
mov
mov
inc
cmp
hlt
push
xor
mov
mov
int3
sub
popa
xor
mov
mov
rol
aas
pop
sub
cmp
and
cmp
cmpsb
inc
lcall
cmp
mov
repnz
sbb
daa
xchg
repnz
fisubs
out
cmp
dec
adc
cmp
mov
shlb
dec
push
in
inc
mov
ficomps
leave
enter
sub
aad
jns
push
mov
mov
cmpsl
xchg
inc
roll
dec
add
inc
push
leave
sti
or
dec
pop
outsl
rcr
mov
test
mov
xchg
movsl
cltd
push
insb
ds
and
xchg
fmuls
xor
fiadds
out
enter
pushf
shll
jl
fwait
mov
push
adc
les
aaa
adc
jbe
mov
je
daa
movsl
je
in
sub
mov
sbbl
cmp
adc
sti
inc
popf
mov
inc
xor
mov
xorl
sub
pop
sahf
cwtl
sub
in
or
inc
adc
fcoml
mov
pop
or
mov
mov
sbb
out
stc
fmull
pop
mov
inc
cwtl
xor
cs
jb
outsl
fbld
dec
loop
leave
sbb
js
pop
xchg
add
roll
lahf
enter
pop
sti
mov
push
jmp
in
push
bound
cmc
aam
cmc
dec
push
mov
dec
dec
jle
addr16
data16
jb
mov
push
lods
pop
mov
bound
push
sbb
xor
into
dec
imul
ss
mov
out
inc
and
into
shll
dec
test
jg
jnp
sub
fstl
mov
mov
hlt
xchg
test
shrl
jns
mov
pop
icebp
dec
jns
and
stos
xchg
add
enter
inc
dec
loopne
xchg
and
aam
out
icebp
add
add
dec
inc
inc
and
test
add
int3
pop
jp
mov
mov
mov
mov
sub
inc
imul
mov
mov
xor
aam
sbb
int
push
in
sti
lds
lahf
fwait
jmp
mov
mov
sub
adc
lds
jb
aad
xchg
push
out
add
sbb
add
gs
ss
xchg
mov
pusha
lods
ret
stos
adc
out
lods
dec
jp
fists
sbb
outsl
ret
ja
jno
fwait
pop
inc
call
jl
into
mov
or
fnstsw
sbb
stos
lret
repnz
and
and
xchg
sub
pop
sbb
push
mov
cld
xchg
xchg
xchg
lret
out
mov
mov
ljmp
inc
mov
popf
dec
mov
jecxz
hlt
or
clc
iret
scas
out
sarl
ja
insb
mov
jbe
pop
in
popa
inc
rep
bound
js
xchg
ret
lret
push
xor
pop
ret
mov
cmpb
aas
scas
dec
in
xchg
cmp
aaa
push
loop
sbb
or
imul
bound
aam
lods
fwait
add
sbb
fildl
out
lahf
mov
inc
cmp
pusha
lds
push
mov
fnsave
and
js
outsl
pop
pop
aam
sub
sbb
inc
inc
call
ljmp
add
outsb
sbb
imul
out
stc
inc
fadd
rcrb
pop
lods
jno
cmp
outsb
jmp
roll
mov
ljmp
das
add
push
cmpl
ss
inc
int
cmc
and
xchg
fwait
mov
rorl
dec
xor
rorb
movsl
xchg
popa
cmp
fistl
lret
aad
xchg
add
and
outsl
cmp
mov
sub
movsl
push
xlat
inc
mov
push
xchg
in
insb
xchg
add
stos
scas
xchg
mov
inc
jo
dec
pushf
ljmp
cmp
jmp
int3
fisubl
inc
sub
pop
jg
and
lahf
and
je
test
dec
movsb
or
mov
ljmp
cmp
daa
adc
fcmove
xor
mov
pop
and
and
sahf
add
mov
cwtl
pop
movsl
sub
jne
mov
mov
std
enter
jns
pop
jmp
cmp
mov
push
xor
mov
adc
popf
xor
fwait
push
xchg
loope
dec
pop
sti
mov
mov
imul
dec
insb
jge
mov
iret
in
cs
push
div
mov
insb
mov
fidivl
imul
sbb
jp
sbb
shll
repnz
sbb
jmp
xchg
mov
jmp
dec
out
xchg
sub
sub
insb
xor
xor
sub
in
push
hlt
jno
shlb
mov
into
pop
mov
cmpsb
pop
add
fadd
xchg
jge
mov
imul
iret
les
icebp
lea
stc
jno
pop
mov
jecxz
mov
sbbb
cltd
pop
leave
lds
cltd
fsubs
roll
leave
loop
mov
xor
jmp
push
addr16
push
insl
loopne
int3
mov
mov
loope,pn
jo
movsb
jne
inc
dec
pop
sti
enter
dec
xlat
inc
mov
adc
push
push
sbbl
mov
add
dec
sub
sbb
jle
inc
mov
fistpl
adc
cmpsb
cmp
andb
push
xchg
inc
jle
pop
pop
pop
std
adc
sbb
or
pop
and
mov
xchg
or
stc
in
adc
rcll
adc
push
cmp
icebp
pushf
aam
fwait
or
pop
pusha
xlat
jg
jnp
lret
add
mov
push
out
inc
cmp
mov
gs
ljmp
ss
ret
sahf
pop
loopne
pusha
mov
xor
lcall
mov
and
lods
and
pop
xor
aad
pop
incb
or
cmp
xorl
or
sbb
or
pop
fisubrs
shl
pop
and
stos
clc
push
mov
dec
popf
push
mov
mov
push
push
cltd
pop
jnp
fwait
test
cltd
sbb
push
in
mov
mov
cmp
xor
xchg
cs
popf
mov
mov
pop
xchg
in
loope
pop
sbb
push
xor
rorl
sti
dec
pop
movsl
nop
cmp
jmp
fdivp
xchg
dec
punpckhdq
pop
leave
jo,pn
movsl
adc
or
lods
push
jnp
add
out
mov
and
xchg
aam
ss
sub
ret
arpl
mov
imul
xchg
xchg
mov
lds
pop
sbb
icebp
std
cmp
push
and
nop
fs
pop
cmp
movsb
xchg
or
mov
mov
cmpsb
mov
xchg
in
sbbb
and
pop
or
lret
dec
sbb
ds
inc
arpl
cld
push
decl
aad
cld
cli
lahf
xchg
xor
mov
loop
sbb
push
es
sbb
xor
jo
hlt
add
add
xrelease
mov
sbb
mov
jmp
and
fs
adc
testb
adc
xchg
sbb
ficomps
jg
in
lret
sbb
and
jne
mov
cmp
inc
cmp
jecxz
mov
xchg
das
inc
mov
cmp
imul
daa
lods
jo
mov
inc
lcall
jle
xchg
jp
sub
push
sti
lods
sub
ja
sub
and
out
fcmove
add
or
in
xchg
call
lret
das
lret
mov
insb
cmp
mov
dec
xor
outsb
cs
stos
cmpsb
push
cmp
dec
popf
pop
or
out
shll
xor
lods
test
jno
dec
bnd
xchg
sbb
lods
mov
and
lds
in
jecxz
les
dec
push
add
jg
mov
dec
push
xchg
lds
fisubl
xor
xor
push
mov
add
out
daa
aam
dec
pop
mov
lcall
add
aaa
fsubrl
lods
or
aam
icebp
push
sti
rolb
sbb
mov
sbb
jnp
sti
jecxz
mov
lret
and
cmp
ret
sti
fwait
add
dec
pop
mov
cmpsb
or
and
js
int3
std
or
dec
stos
outsl
test
movsb
ret
adc
xchg
loop
push
andl
cs
clc
mov
or
mov
sbb
imul
loope
jmp
fnsave
cmpb
aam
repnz
subl
in
xor
add
adc
jbe
cs
fxch
addr16
push
inc
add
mov
xchg
aas
jmp
or
call
in
cli
mov
lret
lods
cmp
outsl
sbb
aas
add
or
cmpsl
stos
into
lret
fs
vunpcklpd
cs
sub
xor
mov
add
mov
inc
jae
pop
pop
aad
cmp
mov
cmpsb
mov
lahf
fsubrp
rorl
insl
dec
loope
lahf
mov
mov
inc
and
sbb
cmp
jbe
pushf
xor
push
push
xor
xchg
and
sub
ja
jle
inc
jecxz
mov
into
and
loopne
and
xor
xor
push
mov
cmp
inc
stos
test
test
movsl
loop
repz
mov
push
ss
and
mov
inc
sub
test
jae
imul
in
ds
xchg
and
add
cmp
cwtl
jbe
popf
add
pop
test
cli
dec
shlb
adc
mov
cli
mov
inc
or
pop
notb
aaa
sbb
test
mov
mov
push
jbe
or
sar
imul
mov
mov
add
out
int
mov
sub
lcall
sbb
dec
inc
out
addr16
and
lods
fisubrs
out
ret
orb
call
inc
or
push
xchg
add
lods
sbb
adc
inc
inc
test
lret
mov
ss
aam
mov
ss
out
push
cmp
leave
jle
add
dec
push
gs
adc
ret
outsb
lahf
xlat
inc
cmp
icebp
pusha
rolb
xchg
sti
pop
inc
inc
test
add
mov
jmp
iret
push
loop
push
mov
out
int
out
mov
mov
lcall
adc
in
cld
mov
jl
insl
stos
fs
jnp
aad
cmpsb
or
or
and
ret
jle
push
imul
dec
mov
gs
test
xor
jl
fstpl
insl
mov
es
ret
mov
mov
add
pop
push
stc
int3
cli
enter
test
ret
xor
imul
and
xchg
call
mov
xchg
fmul
repz
xchg
mov
fstpt
adc
cltd
pop
mov
push
xor
xchg
jbe
dec
mov
jmp
cmp
out
pop
sbb
pusha
cli
je
push
xchg
imul
hlt
clc
aaa
sub
inc
mov
les
outsb
gs
add
inc
sub
jecxz
or
mov
jecxz
adc
xlat
sbb
push
push
push
fdivrs
lods
rorb
push
or
cmpsl
outsb
test
lods
sahf
mov
loope
imul
adc
in
imul
cmp
mov
pop
mov
fimuls
inc
out
push
and
icebp
mov
imul
xlat
popa
iret
pop
and
call
pop
adc
jge
mov
pop
fistl
loopne
aad
ret
mov
cmp
inc
jo
lods
movsb
test
pop
fisubs
in
cmp
cmp
iret
pminub
cmp
mov
and
roll
in
mov
dec
sahf
ljmp
movsl
inc
push
rcrb
scas
inc
scas
push
sbb
xchg
or
xabort
outsl
xchg
or
pushf
or
lods
push
in
inc
xor
ss
lea
roll
jo
test
in
or
out
stc
ds
jno
outsl
idivl
out
push
mov
in
popf
pop
pushf
lods
dec
add
mov
push
sbb
shlb
jb
pop
mov
dec
jl
jmp
outsb
data16
inc
lods
mov
dec
outsl
lock
cmp
bound
popf
mov
and
and
add
pop
dec
xor
jge
mov
ds
cmpsl
mov
sub
stc
dec
sbb
notb
fsubs
add
inc
push
jl
rorb
in
scas
notb
jbe
int
addb
movsb
jns
pop
jbe
push
sub
push
lret
or
leave
pushf
or
ret
mov
pop
inc
gs
push
jne
jnp
pop
xchg
and
ror
dec
jmp
mov
call
cmp
add
fstl
cld
ja
xchg
cmp
outsl
inc
mov
ret
mov
pop
push
xchg
fs
or
sti
xchg
xor
loopne
pusha
lcall
sahf
sub
sub
and
js
adc
xor
cs
aaa
xor
and
out
outsb
jmp
xor
cmp
pop
push
dec
mov
push
mov
scas
stos
stos
mov
inc
and
cmp
adc
imul
stos
fcompl
data16
adc
pop
shll
ret
mov
lahf
mov
add
cmpsl
les
pop
sbb
int
mov
out
xor
cltd
out
outsl
pusha
push
adc
mov
les
cmpsb
popl
xchg
add
fcompl
dec
dec
or
imul
push
adc
shlb
mov
fdivp
sbb
pop
adc
stos
movl
in
movsb
rcrb
cmpsb
shlb
testl
aaa
divb
clc
ret
out
add
push
add
mov
das
iret
sarb
iret
shl
imull
out
lods
pop
push
les
cs
xchg
andl
aad
repz
arpl
jbe
mov
adc
hlt
xchg
mov
pop
or
loopne
ja
cmp
push
mov
mov
outsb
outsl
ret
add
mov
and
add
cmpsb
mov
cwtl
cmp
mov
mov
push
or
mov
enter
inc
cmp
sub
leave
ret
fucomi
mov
mov
mov
les
mov
dec
into
mov
jo
jns
or
aam
into
es
sub
xor
into
out
xchg
jo
mov
mov
repnz
in
adc
fisubrl
adc
fwait
jmp
add
inc
int
lcall
push
fwait
and
adc
push
filds
xchg
cmp
add
aam
data16
ret
pop
loopne
aas
out
outsl
popa
icebp
loope
dec
sti
mov
mov
sti
push
loope
in
cld
les
xchg
and
adc
lods
fidivrl
inc
xor
dec
fildll
jbe
pop
int
jne
lock
inc
int3
push
and
and
jecxz
frstor
loope
mov
loop
ss
lods
and
mov
sarb
mov
scas
div
cmc
out
mov
mov
sahf
ret
mov
xchg
fildl
inc
xchg
jmp
aas
rolb
arpl
mov
mov
mov
dec
lea
push
jno
pop
xchg
int
add
cmp
shlb
jb
jmp
add
scas
dec
sub
push
push
daa
aaa
out
mov
push
mov
xor
pusha
adc
inc
sub
push
jae
push
adc
push
decl
cmp
test
cmpsb
push
js
lods
shrb
mov
cwtl
mov
dec
mov
mov
add
xchg
idivl
sbb
bound
std
ret
mov
sbb
dec
push
jg
adc
dec
out
inc
mov
aaa
loop
insl
jne
pop
jle
adc
mov
out
pop
and
cmp
push
pop
cmpsl
pop
sbb
mov
icebp
and
mov
cmpsl
push
repz
xor
or
cmpsl
das
popf
sbb
ss
cltd
ss
aam
xor
lea
pop
push
adc
mov
jo
adc
rolb
int3
add
mov
mov
xor
inc
cmp
jae
xchg
clc
or
das
mov
or
adc
or
xchg
jp
lahf
add
xor
in
add
jecxz
or
mov
rorb
int
lcall
clc
pop
inc
xchg
or
jo
imul
mulb
lea
mov
test
addr16
mov
fdivs
jp
xor
mov
daa
scas
je
cmc
jl
jle
cli
xchg
pushf
pop
lret
lock
dec
pusha
loope
sub
cmp
or
or
jno
mov
mov
fwait
lods
push
mov
sbb
sbb
out
dec
lret
gs
clc
jns
loop
ds
sbb
xchg
inc
mov
jb
xor
jae
movsl
dec
xchg
inc
xchg
je
mov
mov
pop
sbb
sbb
insb
jmp
dec
dec
cmp
pop
aas
push
and
add
out
insb
mov
movsb
mov
lahf
lcall
jg
inc
xchg
or
inc
outsb
dec
cmpsb
neg
mov
data16
push
fwait
repnz
stos
push
jo
jns
adc
insl
mov
and
xor
push
sar
pop
mov
popa
lds
mov
mov
pop
arpl
and
test
in
fcomps
sbb
scas
xor
movsl
mov
xor
push
push
fwait
test
fwait
sarl
call
fcompl
stc
mov
pop
aaa
lret
iret
adc
mov
cmp
xor
mov
lods
pop
js
sysexit
inc
jecxz
stos
outsb
daa
add
mov
xor
or
add
aaa
cmpsb
ljmp
cmp
gs
test
mov
pop
push
loopne
push
lods
std
adc
mov
dec
icebp
xchg
mov
adc
outsb
aad
jmp
cmp
xchg
jp
jbe
add
int
pop
push
rclb
or
mov
in
jo
cmp
lsl
lret
inc
out
mov
out
xor
mov
mov
lods
mov
lods
xor
daa
mov
push
push
push
xchg
mov
add
vmovss
cld
sbb
and
icebp
sti
call
sbb
scas
addr16
cmp
lods
sub
pop
jg
sub
dec
insl
mov
sub
in
sub
jns
insb
aam
mov
mov
insl
cltd
jb
and
dec
cmp
sbb
push
outsl
insl
xlat
jno
sbb
cmp
mov
out
jnp
xor
mov
mov
xchg
daa
jno
fldl
jb
call
lcall
sbb
and
and
inc
push
adc
sarb
ds
adc
mull
add
out
push
inc
xor
iret
cmp
mov
xchg
mov
sbb
sbb
push
dec
out
dec
mov
sub
int
notl
sub
data16
or
inc
sahf
pop
push
xchg
jb,pt
sbbl
pop
pop
inc
test
mov
cmp
lods
pop
out
ja
ja
out
sub
hlt
dec
negb
add
nop
pop
mov
xor
mov
jb
pop
pop
test
push
mov
popf
pop
sub
inc
scas
or
ficompl
out
xchg
xchg
mov
stos
test
sub
jl
in
jmp
adc
outsl
sbbb
mov
mov
mov
push
bnd
mov
pop
push
dec
sbbb
call
mov
pop
cmp
pusha
push
add
inc
mov
decl
inc
inc
mov
and
jno
pop
sbb
outsb
shrl
mov
test
out
dec
xchg
add
ljmp
or
xor
add
outsb
fcoml
xor
jle
loop
push
jnp
mov
pop
mov
sub
nop
or
and
scas
sbb
out
cmp
loop
xchg
cmp
fstpt
dec
jb
mov
jne
lea
xchg
adcl
mov
pushf
sahf
add
add
or
sub
int
dec
in
arpl
sahf
repnz
out
push
aad
jmp
cmp
push
lahf
pop
mov
push
mov
pop
push
mov
stos
pop
fs
and
jmp
mov
repnz
xchg
aam
adc
push
frstor
sbb
js
push
sub
mov
fcmovu
leave
xor
test
or
aad
mov
or
cmp
fidivl
adc
negl
dec
xor
cmp
mov
push
ficompl
cwtl
call
rol
fldenv
sub
mov
jno
dec
mov
cmp
inc
xchg
xchg
sub
insl
insb
lret
ljmp
pop
das
imul
fisttpl
lahf
cwtl
and
and
mov
pop
mov
stos
mov
push
mov
sbb
popw
aam
fdivs
imul
xor
in
pop
lret
lods
loopne
jbe
lahf
fstpl
aas
inc
mov
pop
icebp
or
pop
hlt
fwait
sub
andl
push
xchg
les
gs
cmp
dec
andb
pop
jns
add
psubq
or
arpl
jne
or
shrb
fidivrl
mov
test
lret
jno
xchg
iret
shr
cltd
lods
mov
or
adc
fsubs
jecxz
dec
pushf
mov
scas
sbb
and
push
js
mov
xchg
add
xchg
cld
xchg
or
sub
and
in
mov
sub
push
leave
xchg
inc
and
nop
push
add
roll
pop
cli
ljmp
jge
xor
inc
dec
jno
xchg
mov
ret
es
lcall
insl
pop
jecxz
insb
dec
mov
pop
leave
je
es
rorl
int
pop
loope
aam
adc
imul
insb
lret
call
cmp
adc
lods
ret
lret
cmpsl
out
xor
cli
mov
imul
outsb
lods
nop
push
dec
fnsave
out
aas
test
es
scas
jecxz
repz
push
inc
xchg
in
jg
imul
loopne
jae
add
stc
insb
test
push
loope
lret
popf
out
in
test
neg
mov
fsts
ljmp
jl
xor
sub
ss
shrl
push
cs
mov
push
call
into
add
mov
pop
add
push
dec
enter
or
lds
xor
out
mov
bound
mov
xchg
add
shl
jns
out
cltd
dec
faddp
inc
rorb
insl
jl
stos
clc
pop
cmp
or
inc
aaa
sarb
popf
and
add
aas
pusha
xor
inc
mov
stc
adc
or
push
pop
sub
movsb
fildll
int
adc
lock
mov
and
test
ljmp
lret
sbb
lods
xchg
hlt
push
jp
xor
fs
data16
pop
mov
sbb
cli
jle
imul
jne
dec
out
popa
arpl
mov
mov
cmp
mov
mov
xchg
jg
repnz
mul
adc
sbb
mov
xor
mov
jl
int
sbb
or
aam
cmp
rclb
pusha
jecxz
cltd
adc
jbe
daa
rcl
arpl
jl
call
jl
repz
mov
xchg
aas
pop
cmpsl
ret
rclb
sub
fisubs
push
in
xchg
ljmp
and
rorl
orl
cld
dec
jae
xchg
xor
hlt
push
pop
inc
fimull
loope
adc
shrb
enter
jae
mov
rolb
cmp
dec
cmp
loop
xor
sbb
pusha
jb
add
jp
xlat
ret
adc
sbb
icebp
iret
movsb
or
pop
popa
pop
dec
cmp
pop
mov
rcl
je
inc
insb
adc
inc
mov
aam
lahf
pop
sti
pop
or
inc
cmp
push
adc
mov
gs
push
test
mov
subb
pop
out
pop
and
and
mov
clc
mov
mov
mov
inc
jae
mov
mov
inc
mov
lock
cmpsb
cmpsl
fcoms
dec
sub
xor
ljmp
loop
push
jne
mov
xchg
inc
lret
clc
shrl
mov
shl
pusha
in
dec
cld
adc
mov
mov
and
nop
sahf
sub
popl
mov
imul
outsl
adc
pop
rcll
mov
stc
dec
fbstp
clc
popl
insl
out
inc
mov
cmpsb
mov
mov
adc
inc
inc
loopne
sbb
lods
fs
shl
mov
lahf
mov
push
sbb
inc
sub
jg
subb
nop
filds
push
mov
push
sub
push
ja
lret
sbb
ret
mov
mov
outsl
or
das
adc
in
xchg
shl
pop
mov
subl
xor
mov
sub
inc
into
sbb
stos
jmp
adc
stos
mov
dec
aas
fldl
cmpb
jl
add
std
or
and
mov
fisubrs
jne
adc
rorl
xor
add
mov
imul
xchg
stos
pop
and
repz
fldl
lret
mov
mov
xchg
cmp
sbb
sub
mov
sahf
sti
stc
out
push
jg
inc
cmpsb
add
sub
push
je
dec
dec
sub
ret
cs
or
aam
dec
hlt
imul
xchg
xor
mov
arpl
ds
mov
cmpsb
jmp
fsubl
inc
movsl
int3
rolb
sub
sbb
adc
xlat
jno
pop
inc
pop
jb
cmp
cwtl
jns
xchg
push
movsb
flds
cwtl
cmp
pop
dec
xor
je
inc
call
xor
cmpsl
enter
js
sub
daa
mov
jbe
sub
dec
es
inc
xchg
xchg
xchg
push
loopne
adc
jmp
push
sbb
fld
aam
sub
into
jmp
roll
popa
rep
xor
fdivrl
push
aad
shll
lods
in
in
push
mov
outsb
pop
mov
jge
sbb
xchg
mov
adc
test
pop
mov
and
pop
jno
test
loope
xchg
jno
dec
adc
mov
xlat
and
or
push
mov
push
inc
jne
push
dec
ja
sbb
sub
les
pop
xor
cwtl
stos
adc
addr16
push
int3
out
and
jecxz
js
xchg
cli
leave
sub
sub
mov
rolb
mov
mov
or
or
push
mov
repz
mov
iret
fimull
mov
xchg
or
nop
mov
mov
dec
inc
je
or
std
jo
imul
pop
pop
pop
sub
into
and
jmp
push
enter
cmp
xchg
subl
mov
xlat
int
cmp
xlat
je
pop
pop
jbe
mov
dec
mov
inc
xchg
cmp
xchg
push
subb
adc
xchg
push
lods
insl
imul
pop
cs
aam
sarl
popa
inc
aaa
bound
gs
addr16
inc
inc
scas
in
jle
test
or
xchg
fmul
sbb
dec
inc
mov
mov
pop
call
out
sbb
add
inc
or
scas
addl
cmp
mov
mov
mov
lds
or
addr16
pop
inc
or
jl
lea
pop
repz
xor
aad
xor
xchg
lock
iret
adc
divb
iret
clc
popa
or
pop
xchg
bound
mull
dec
iret
sub
shll
pop
lcall
int
aad
rorl
push
jmp
jb
or
adc
add
and
je
ss
push
icebp
outsl
or
mov
mov
rcr
out
push
push
push
pusha
fdivs
pushf
dec
stc
sahf
stc
inc
jae
and
rcll
inc
xchg
pop
cmp
insb
adc
lret
mov
fsubrs
test
test
xchg
jl
xor
cwtl
mov
mov
sti
xor
icebp
mov
jbe
subb
jae
inc
fwait
jo
jo
push
push
push
xlat
sbb
and
adc
inc
call
shlb
xchg
xor
push
mov
sub
je
mov
loope
pop
mov
pop
jnp
lcall
mov
xlat
inc
add
cmpsl
mov
pop
mov
xchg
dec
mov
cmpsl
mov
lea
test
pop
gs
jbe
iret
imul
pop
cli
or
sbb
xor
inc
xchg
mov
xchg
out
xchg
inc
sub
and
lret
and
loopne
mov
sbb
flds
pop
cmp
push
nop
or
rcrl
push
call
push
out
jp
cmp
loopne
mov
dec
or
jecxz
adc
imulb
or
cmp
mov
in
rol
sbb
addr16
xchg
sbb
in
pop
push
dec
cwtl
arpl
lret
test
lret
xchg
add
inc
dec
dec
lea
test
bound
lcall
jecxz
cmp
pop
adc
movsl
ret
les
test
arpl
out
sub
sbb
in
fcomps
mov
sbb
std
sbb
stc
mov
int
xchg
lret
daa
push
hlt
shlb
sahf
push
jbe
lret
sub
mov
je
sub
fistl
pusha
mov
gs
imul
jecxz
xor
mov
push
cs
mov
xor
and
jge
sar
shrl
mov
jne
rorb
cmp
out
adc
sbb
adc
pop
pop
ljmp
int
sub
add
push
add
outsl
ret
and
push
fwait
dec
mov
dec
dec
push
push
cmp
outsb
add
mov
das
add
mov
imul
push
xchg
enter
icebp
fwait
cmp
sti
fsubr
pusha
ror
lock
xor
inc
mov
cld
in
aad
adc
jb
fnstcw
mov
and
mov
push
cmp
ret
lcall
pop
dec
mov
loop
lds
stos
ret
sbb
data16
xchg
lcall
sti
mov
jnp
call
mov
xchg
or
jle
std
je
insb
pushf
jmp
enter
inc
cmovo
or
push
outsl
lods
push
lods
mov
push
scas
pop
in
mov
fcmovu
loopne
inc
adc
out
test
add
dec
mov
add
dec
sbb
pop
jo,pt
pop
add
iret
mov
shrb
cli
inc
aaa
aaa
scas
aad
xor
fs
sub
sbb
jno
adc
icebp
in
in
imul
int3
mov
adc
mov
leave
mov
pop
jle
pop
fucom
bound
mov
xor
test
pop
jg
int3
aad
mov
push
jmp
repz
jns
inc
pop
add
dec
mov
mov
pushf
xor
int
ss
ljmp
push
or
jg
adc
mov
jo
sub
push
ret
lahf
mov
cmpsl
mov
sbb
out
inc
repnz
and
mov
adc
jnp
jmp
hlt
push
fs
add
or
repnz
cmp
test
push
test
leave
addb
dec
lock
sub
inc
popf
jp
xor
test
xchg
mov
xchg
mov
adc
lahf
dec
jge
bound
ds
adc
lret
dec
mov
enter
sbb
adc
and
cmp
in
ljmp
js
dec
jne
mov
imul
mov
push
jb
out
adc
mov
and
arpl
sub
call
lods
cwtl
out
jne
popa
in
rol
fisttpl
js
out
popa
out
roll
idivl
jp
pop
cmp
push
mov
aad
xor
out
sarl
imulb
jns
jle
add
mulb
lods
fdivrl
adc
xchg
push
cmc
mov
xor
stc
jb
out
arpl
jb
add
enter
inc
lods
mov
cmp
not
pop
imul
jl
push
jns
xchg
xor
cwtl
xlat
xor
dec
xchg
cmp
sti
shrb
sub
data16
push
divb
xchg
xor
jae
jns
out
sti
rol
call
aad
stos
enter
xchg
pop
sub
insb
adc
fdiv
cltd
gs
addr16
lods
xorb
jns
adc
shrb
cld
or
sbb
push
es
mov
jo
adc
mov
pop
mov
mov
adc
mov
pop
leavew
in
xorl
cmc
lods
mov
movsb
ffreep
cli
in
nop
jo
inc
cmp
or
outsb
push
cmp
mov
mov
roll
outsb
adc
push
mov
cltd
or
arpl
arpl
push
push
push
cmp
xchg
push
mov
mov
sub
pop
aam
icebp
cmp
repz
addl
mov
lcall
sub
cmp
movsl
jbe,pt
pushl
pop
mov
cs
or
push
movsb
movb
movsl
inc
jb
inc
loop
push
lret
and
cmpsl
push
lods
mov
pop
cwtl
das
mov
add
mov
pop
xor
fiadds
mov
je
cmp
inc
inc
dec
andl
and
sbb
stos
add
arpl
or
mov
and
cmpsb
dec
jno
add
and
cltd
out
lahf
mov
mov
jmp
addr16
sbb
ljmp
sbb
dec
mov
mov
call
add
scas
lods
cwtl
mov
sub
fs
subb
jns
jge
push
std
jmp
lcall
xchg
inc
pushf
xor
icebp
adc
imul
movsl
enter
pop
popf
xchg
sub
das
inc
negb
cmpsl
call
or
and
je
in
imul
pop
and
jl
mov
dec
pop
sbb
scas
stos
xchg
test
ljmp
je
lea
ds
mov
ja
insb
push
add
sbb
cli
lahf
dec
arpl
and
adc
adc
inc
or
jo
sub
mov
loop
pmulhuw
int
je
mov
jne
adc
cmovae
out
add
hlt
xchg
xor
addb
sbb
dec
jmp
xchg
push
add
or
push
sahf
fistpll
outsl
adc
nop
adc
mov
mov
sub
lds
mov
jo
dec
pop
mov
mov
xchg
add
fcoml
neg
sub
test
ss
sbb
xchg
imul
mov
leave
fwait
hlt
sbb
push
inc
cmp
or
dec
pop
xor
lret
les
xor
dec
hlt
xor
xchg
sti
out
call
loopne
xchg
arpl
imul
push
ficoms
adc
sub
mov
std
repz
mov
shlb
xchg
les
jns
dec
sbb
sub
addr16
rclb
and
xchg
pop
filds
out
and
inc
shl
punpckhwd
addr16
lods
es
mov
mov
push
jp
and
mov
popl
lea
cmpb
cmpsb
or
push
xchg
test
pop
jno
aas
lcall
mov
mov
icebp
mov
jecxz
push
addr16
sub
ja
icebp
and
sub
mul
popl
push
dec
mov
inc
insl
cld
faddl
ljmp
mov
sub
adc
push
sbb
pushf
test
ds
popf
mov
imull
xor
mov
xchg
das
repz
stc
dec
sarl
fcomps
add
lods
pop
xor
push
jmp
repnz
popf
mov
dec
or
or
dec
scas
int3
arpl
mov
outsb
and
in
jbe
ret
scas
mov
subb
mov
mov
leave
cmpsb
rclb
mov
popa
pop
inc
inc
dec
fiadds
mov
push
imul
sbbl
mov
bound
imul
loop
or
mov
xlat
ret
or
addl
or
insb
push
mov
cmc
jns
ret
jmp
insb
mov
xor
aaa
push
dec
xchg
push
add
dec
xor
and
sbb
push
sub
mov
insb
and
aad
jge
sub
and
sarb
std
ja
fnstcw
aad
test
out
xchg
or
mov
push
push
xchg
adc
lock
adc
push
jg
and
xchg
mov
int
and
pop
scas
cmp
fsubs
jb
mov
mov
push
fists
pop
divb
ret
jnp
loop
push
cltd
cmp
imul
cmp
bound
xchg
dec
and
rorl
sub
cmp
sub
aam
lds
push
popf
cmp
dec
test
ljmp
imul
mov
fcomi
sbb
loop
shl
in
jmp
je
xor
shlb
popa
cld
scas
imul
push
cmc
popa
jmp
or
addr16
ficomps
and
jg
jne
push
mov
sahf
idivl
enter
nop
lods
sbb
stos
push
cli
clc
popf
push
lcall
push
mov
loope
hlt
dec
mov
jge
push
call
adc
and
cmp
outsl
es
mov
jp
mov
jg
sbb
jne
ret
mov
mov
sbb
inc
add
pop
mov
cmp
ds
mov
push
enter
jecxz
xchg
out
adc
stos
das
fs
cmp
push
mov
imul
cltd
and
mov
adc
and
xlat
dec
dec
clc
inc
xor
jbe
pop
dec
stc
test
jae
insl
add
lahf
jge
not
lahf
cmpsb
outsb
ljmp
jno
scas
mov
mov
lds
cmp
cmpsb
xchg
mov
push
or
aaa
test
inc
imul
arpl
cltd
mov
fisubrl
lea
push
push
push
addr16
call
mov
rcr
popf
pop
cmpsb
addl
xchg
repz
outsl
and
loope
addr16
mov
cmpsl
add
jp
xchg
push
jnp
rorb
shl
mov
es
int
jne
xlat
xchg
jne
in
jge
cmpsb
push
repz
and
mov
sarb
mov
in
sub
and
aas
inc
out
push
adc
fstps
push
out
xchg
rorb
testb
push
xor
jmp
cwtl
stc
test
jmp
add
cmp
jecxz
das
mov
xchg
adc
adc
jae
fwait
test
sti
push
scas
stos
and
sub
jne
rorb
repnz
insb
shll
cmp
data16
mov
gs
sbb
aad
and
jns
fcompl
mov
mov
xor
mov
std
in
add
xor
cli
scas
filds
mov
sub
je
jmp
call
xchg
lahf
aaa
cld
cmp
sti
and
fcompl
jg
imul
call
adc
mov
sbb
leave
aad
or
out
push
fdivl
aaa
mov
xor
xor
out
jl
jno
mov
jmp
out
add
pop
std
cli
push
cmp
jb
dec
adc
cmc
insl
add
push
sub
stc
push
js
mov
bndstx
cmp
inc
fstps
nop
push
nop
icebp
xchg
pcmpeqw
push
sarb
pushl
addb
jo
xor
xchg
fsubrs
jmp
insl
test
scas
adc
adc
xchg
jl
cmp
pop
in
cmp
sti
and
xor
rcll
call
sbb
pop
inc
xchg
lahf
add
pop
insl
scas
lcall
mov
aam
loopne
add
jne
ret
fwait
test
xor
mov
add
decl
or
xchg
jne
xchg
add
pop
push
daa
or
mov
lahf
push
fists
pop
mov
push
adc
push
ror
add
addb
enter
xchg
jno
testb
inc
xlat
mov
push
mov
ret
jmp
sbb
inc
mov
fwait
jle
daa
popl
mov
sti
mov
and
jl
push
fcmovnu
pop
xchg
je
xchg
lcall
out
add
cmc
in
xchg
cli
inc
adc
pop
and
inc
dec
xor
pop
or
lock
cmp
leave
sub
pop
inc
xchg
gs
stos
dec
adc
mov
mov
xchg
test
add
inc
add
push
and
inc
fldenv
add
sub
mov
es
push
pop
loope
test
shr
mov
add
mov
xor
mov
inc
adc
fcompp
push
lret
push
fsubs
inc
add
sub
adc
pop
movsl
scas
ret
jg
addr16
aas
cmpsl
lds
inc
push
adc
and
addr16
dec
add
push
hlt
inc
lea
and
pop
push
je
adc
pushf
test
cmp
jb
repz
lods
rorl
adc
push
fsubp
das
jge
sahf
cmp
jno
pusha
imul
lea
sub
insb
push
out
lods
fsubr
into
add
push
pop
adc
imulb
dec
mov
push
enter
push
pop
fwait
mov
add
xchg
cmp
scas
in
inc
iret
mov
dec
push
sbb
test
inc
jbe
push
cli
mov
rcll
les
dec
and
pop
or
fidivl
dec
icebp
lods
inc
cld
push
testl
xacquire
add
es
and
push
or
jo
std
mov
aas
and
push
sbb
mov
lahf
add
mov
divb
repz
ret
dec
or
int3
outsb
adc
cld
xor
and
mov
lcall
adc
loope
jecxz
sbb
xchg
aad
cmp
fistpll
sbb
or
pop
sub
inc
insb
mov
icebp
mov
dec
pop
push
or
pop
and
inc
into
mov
mov
mov
mov
scas
sahf
icebp
mov
fcmovu
mov
add
nopl
mov
cmp
fsubs
xor
ds
mov
jp
or
sahf
outsl
mov
mov
test
insl
or
mov
mov
arpl
daa
loopne
pop
push
pop
xchg
arpl
push
pusha
mov
pop
mov
popl
push
add
js
sub
addl
cmp
repnz
sbbl
aam
xchg
into
jb
and
push
ret
fldcw
idiv
lea
movsl
cwtl
pop
out
cmp
mov
push
ret
stc
xchg
je
in
add
inc
cld
sub
add
pop
hlt
bound
pop
scas
les
push
bound
arpl
sub
into
cmp
push
sbb
ds
pop
dec
push
iret
inc
mov
xchg
mov
scas
or
gs
fisttpl
mov
out
add
jle
mov
xchg
add
dec
ljmp
mov
or
xor
popa
pop
jbe
es
lcall
cmp
sub
mov
pop
in
jns
jns
adc
add
out
aaa
repnz
jno
xor
sub
out
sbb
ret
adc
xchg
cli
fsts
add
push
pop
lahf
popf
outsl
and
popf
inc
icebp
mov
and
hlt
adc
push
mov
add
jmp
sbb
addr16
loop
adc
repnz
cmp
jns
addl
iret
pop
aas
fcompl
popf
mov
lret
sub
pop
adc
cmp
loope
dec
fnstenv
cmpsl
jbe
push
dec
mov
pop
xorb
and
mov
js
stos
push
and
fistps
mov
loopne
push
push
pop
in
cli
test
out
arpl
lret
andb
sub
pop
test
fcmovu
sub
xchg
add
dec
sahf
dec
incl
sbbb
stos
or
jno
fs
hlt
xor
cld
divl
in
sbb
aad
xchg
pop
adc
cld
ret
add
add
insl
or
xchg
cmp
xor
data16
addr16
lock
cmpsl
mov
xchg
jo
loop
adc
adc
xor
dec
mov
sbbl
cwtl
or
test
add
mov
cld
xchg
or
mov
fisttpl
test
push
loope
rclb
fidivrl
cmc
mov
sbb
shrl
xchg
inc
ror
inc
negl
adcb
inc
mov
sahf
cmp
xchg
adc
sbb
in
inc
mov
mov
sti
adc
sub
push
stos
xchg
and
add
jno
add
mov
sbb
imul
dec
fistpll
test
out
push
xchg
adc
aad
fisttps
jmp
daa
inc
andl
jmp
ret
sub
xor
fwait
pop
lods
ljmp
cmp
push
mov
inc
in
jl
mov
inc
adc
push
ja
pop
sarb
or
cmpsb
lret
scas
jmp
push
into
jecxz
jno
dec
inc
insl
test
movb
sub
scas
mov
scas
addb
mov
addr16
mov
jg
jb
test
repz
mov
mov
sbb
ds
clc
add
and
je
or
bound
and
and
add
mov
shrb
test
jmp
lea
jge
lret
pop
sub
pop
sub
pop
lret
pop
lock
sahf
mov
inc
push
test
les
shr
addr16
shr
shlb
xchg
out
pop
and
testb
inc
xchg
fdivl
ja
ljmp
insb
jecxz
out
xchg
sub
mov
sub
and
mov
call
std
and
mov
mov
lret
popa
lea
ret
cs
xor
sub
ljmp
mov
jl
or
call
jns
cmp
mov
add
add
out
mov
cmp
adc
adc
arpl
sahf
push
or
ja
mov
mov
cltd
jbe
arpl
sbb
popf
cmpb
mov
addr16
sub
das
cmpsb
and
inc
mov
shlb
mov
mov
lds
jae
imul
inc
rcrl
cwtl
cmp
enter
xchg
lods
pop
aam
jne
push
xchg
mov
push
repnz
addb
out
imull
mov
inc
fimull
lea
adc
inc
inc
add
xchg
xchg
shl
repz
rcrl
popf
out
test
xchg
sub
or
xlat
inc
rol
push
int3
les
mov
dec
stc
add
fdivrl
add
jnp
jmp
lock
sub
fidivrs
xor
cmpsl
jns
inc
xor
mov
addb
cli
ds
test
adc
pop
leave
inc
dec
leave
movsb
jle
in
imul
cmp
mov
fcomps
lds
daa
xchg
push
pop
insl
cmpl
cmpl
or
idiv
cmpsl
cs
arpl
repz
add
push
mov
xchg
out
data16
mov
pusha
jecxz
jmp
sbb
lock
xchg
jnp
mov
fstpt
and
xor
pop
add
or
xchg
xor
hlt
rclb
sbb
stc
loope
or
or
push
fistps
dec
and
or
ljmp
sarl
cmp
sbb
sbb
roll
add
xchg
pop
cs
pushf
cmpsb
jae
subb
mov
mov
daa
adc
xchg
or
pop
js
dec
aaa
les
cli
sub
mov
add
xchg
jecxz
ss
imul
cmp
xor
xor
add
ds
sub
cmp
mov
add
cmc
push
fbld
sahf
jb
inc
mov
test
jns
lcall
and
mov
push
arpl
enter
sbb
cmpsl
sub
js
rcr
xchg
scas
out
push
stc
sbb
jg
sbbl
xchg
ficoml
sbb
insl
into
pop
std
xchg
ljmp
add
mov
pusha
sub
rorb
test
push
fmuls
xchg
mov
movsb
add
filds
fcomps
inc
ja
ljmp
bound
push
sub
inc
mov
test
mov
inc
pop
mov
divl
enter
insl
in
out
inc
test
loopne
and
add
lret
inc
addr16
and
repnz
lods
enter
inc
dec
in
pop
jns
loope
ds
xchg
mov
or
jg
cmp
cmp
inc
repnz
xor
sub
push
or
xchg
cmpb
mov
ja
imul
pop
fs
daa
push
clc
ret
lretw
mov
shrl
jp
leave
jmp
out
adc
add
lcall
dec
jecxz
ja
inc
jecxz
lock
stos
or
jbe
daa
mov
xchg
or
gs
fisttpl
arpl
xor
std
adc
test
dec
in
inc
mov
jmp
dec
rolb
inc
mov
mov
sahf
dec
cmc
push
fdivrl
out
xor
inc
test
cmp
pop
pop
inc
jnp
or
outsb
data16
xor
cld
and
data16
arpl
push
push
test
and
xor
loop
sbb
mov
imul
mov
subb
xchg
gs
lock
stos
lcall
dec
into
jg
inc
push
mov
enter
daa
jne
jge
mov
push
and
test
ja
lahf
jl
cld
inc
roll
lret
or
imul
sbb
insb
xor
enter
andl
fwait
xchg
mov
and
call
jne
and
cltd
ljmp
in
sub
scas
mov
shlb
movsl
push
mov
mov
lret
xor
std
dec
popa
lods
pop
pop
xchg
pop
popa
mov
roll
jmp
orb
pop
rorl
lret
mov
test
push
aam
ja
fnsave
rcl
jmp
jb
mov
aas
jo
ret
lds
in
inc
test
xchg
dec
xor
out
sbb
mov
dec
push
js
mov
push
ljmp
das
or
sbb
cmp
movsl
jmp
jns
fildll
and
adc
leave
aam
sbb
sarl
push
add
jb
xchg
cld
out
mov
inc
ljmp
lahf
mov
out
pop
xor
test
mov
dec
clc
in
cmp
out
ds
sbb
push
mov
bound
aam
repz
imul
scas
sub
and
dec
inc
push
notb
loop
arpl
mov
lcall
sbb
mov
xchg
aad
shr
stc
or
jge
cmp
cmp
jl
fstp
leave
stos
sbb
inc
jae
dec
add
mov
cwtl
mov
lret
adc
ficoml
aaa
add
into
mov
mov
lds
pop
dec
pushf
dec
jp
mov
in
outsl
shll
add
sbb
jge
out
mov
daa
sbb
mov
cmpsb
add
mov
popf
in
fwait
jecxz
lock
lea
cmp
int3
xchg
rol
lcall
lock
xchg
push
stos
cltd
das
pop
xor
xchg
test
mov
sub
rorl
pop
or
adc
shrl
ret
or
les
adc
mov
out
sahf
cmp
mull
mov
cmp
adc
repz
jmp
fwait
mov
adc
pop
test
cs
cmp
xchg
pop
lods
adc
push
clc
xchg
js
nop
push
and
adc
test
xchg
inc
bound
ljmp
or
mov
push
out
jle
push
lret
mov
lea
shrb
inc
pop
subl
jge
cmp
into
jno
shrl
adc
pop
pop
lea
push
add
sbb
pop
pusha
mov
fcmove
jp
sub
pop
pop
das
jp
ja
pop
xchg
ret
les
leave
jp
mov
adc
sub
idivl
dec
mov
cmpsb
inc
and
adc
push
adc
outsb
flds
addr16
sbb
adc
fisttpll
aam
or
into
leave
push
cmp
daa
mov
jmp
shlb
dec
lods
shrl
repz
cmpb
mov
mov
testb
mov
pop
outsb
movsl
lea
add
rclb
ret
in
loop
or
call
popl
jl
pop
push
cmp
sub
pushf
mov
and
shll
xchg
jns
sub
cmc
lock
test
inc
mov
push
mov
xor
mov
test
mov
xor
loop
lret
mov
inc
leave
and
js
add
outsb
adc
test
test
sbb
sbb
mov
pop
xchg
sub
adc
mov
adc
imul
jmp
lea
mov
jb
pop
nop
mov
push
clc
test
ds
add
mov
pop
sarl
jno
stos
xchg
xchg
outsb
jbe
dec
pusha
loopne
cli
cmc
sbb
stos
and
imul
jno
pop
dec
mov
stc
push
fisubs
mov
outsl
mov
lods
dec
out
pop
popf
orb
negl
and
sarl
mov
dec
aaa
pop
cltd
and
sub
repnz
mov
push
jp
sahf
mov
push
pop
movsl
push
xchg
xchg
and
in
mov
or
test
or
pop
movsl
sub
data16
cmpb
ret
outsb
sahf
mov
pushf
bound
out
inc
jae
cmp
pushf
fwait
data16
inc
adc
pop
jge
scas
and
xchg
pop
ss
xor
dec
adc
outsl
and
in
stos
loope
xchg
movsl
xor
sbb
rol
aas
out
xchg
movsb
in
sbb
jmp
das
mov
push
ds
cmp
add
into
pusha
mov
inc
dec
xchg
std
mov
test
lret
hlt
cmpsl
loop
sbb
lock
notb
sbb
lahf
hlt
add
cmpsb
imul
or
mov
call
xor
sub
aad
inc
xchg
inc
sbb
pop
in
sbb
in
jno
adc
fistpll
repnz
loope
mov
cltd
gs
sti
cmp
shll
out
sbb
xchg
fstpl
aas
push
xchg
fldl
adc
push
push
sbb
in
push
mov
test
adc
test
or
int
lea
jle
mov
rorl
daa
xchg
cmpsl
jl
cli
lock
pop
adcb
cmc
cmp
push
movsl
inc
ds
pop
dec
push
aas
int3
cmpsl
ret
int3
shll
ss
mov
rolb
sbb
notb
inc
test
and
fcomps
jmp
icebp
out
push
mov
sub
inc
jnp
mov
jno
jns
dec
cmp
mov
xchg
in
xor
xchg
int
ds
ficompl
sbb
inc
mov
fldenv
into
rclb
into
dec
cs
insb
iret
rolb
je
and
dec
lahf
inc
jnp
xor
arpl
and
mov
loopne
jecxz
cmp
mov
push
xorb
lret
push
sub
inc
jae
jo
out
sbb
fidivrs
ficomps
es
pop
stos
in
mov
xchg
inc
nop
xor
ret
and
inc
lret
dec
pop
or
ret
gs
cmpsl
mov
and
and
enter
push
pop
rorb
sbb
repnz
cmpsl
fildll
sub
push
push
loopne
repz
lcall
shl
roll
jge
std
push
mov
dec
das
sub
mov
xchg
vandnps
pop
mov
mov
out
sbb
xor
mov
call
ljmp
rclb
pop
xchg
rcrb
das
movsl
test
jb
scas
push
pop
lods
into
jnp
dec
cltd
sub
cld
sub
ljmp
jge
xor
cmp
xchg
cmpsl
mov
stos
lcall
jbe
dec
mov
loopne
iret
xor
sbbl
push
jmp
mov
adc
fidivrl
sbb
and
hlt
mov
jg
das
mov
xor
les
scas
popw
fcoml
cmp
lods
inc
rolb
mov
xor
mov
push
lods
gs
mov
push
push
xchg
inc
lahf
icebp
push
pop
out
and
add
xchg
cmp
push
leave
data16
lcall
out
adc
and
push
lret
mov
rorl
cmp
sub
and
sub
cmp
scas
cmpsb
leave
push
mov
lret
sub
mov
xor
xchg
aas
in
stos
jns
pop
sti
xchg
adc
call
push
adc
push
add
scas
je
add
dec
inc
sbb
cmp
sub
jmp
inc
leave
add
loopne
add
test
inc
xchg
jno
pop
push
push
es
inc
adc
mov
jecxz
jnp
push
inc
adc
sub
sbb
lock
pop
fcomip
mov
fisubrl
push
lods
cmp
dec
pusha
ja
dec
fstpl
pusha
xchg
adc
pop
adc
or
rcll
cltd
xor
pop
lods
outsl
xchg
data16
popa
rorb
cli
and
inc
cmpsl
mov
fsubrs
popa
rcr
fstps
adc
scas
pop
or
frstor
adc
mov
pushf
mov
fwait
mov
mov
xchg
inc
stos
sbb
lcall
xchg
xchg
ss
sub
aaa
loope
push
hlt
xlat
shlb
test
les
cmp
rolb
pop
leave
adc
mov
scas
in
dec
int3
adc
daa
fsubl
outsb
into
add
add
lods
loopne
cmp
cld
xlat
test
mov
pop
or
push
sbb
jae
sub
jnp
iret
mov
cmp
out
jb
mov
js
xlat
dec
call
and
in
push
ja
inc
xor
jne
pop
sbb
insb
nop
mov
test
jl
mov
inc
mov
rcr
push
idiv
js
mov
ds
add
xor
and
jg
mov
icebp
mov
ret
imul
pusha
insl
dec
xchg
xor
mov
in
mov
enter
push
push
cmp
cmp
fs
in
add
and
mov
ja
and
mov
hlt
sub
imul
cld
pop
int
xchg
ja
mov
mov
imul
ja
pop
shlb
mov
adc
or
jnp
pop
out
test
aaa
arpl
fdivs
push
ficompl
cmp
insb
pop
notl
pop
sub
xor
scas
out
outsb
lock
rcrb
and
lods
dec
mov
mov
sbb
mov
mov
lods
jbe
xchg
adc
xchg
or
lahf
les
cmp
aad
pushf
fcmovnu
loop
lret
xchg
lods
sbb
dec
out
aas
push
cmp
pushf
xchg
js
mov
cwtd
mov
in
icebp
negb
sbb
es
or
mov
bound
les
data16
pand
mull
jmp
and
outsb
iret
xchg
mov
sub
test
mov
out
jge
in
xchg
lcall
outsl
pop
xor
clc
cmp
insb
dec
jb
push
cli
daa
adc
sub
js
daa
cmpsl
and
mov
pop
out
mov
dec
pop
mov
ficoms
inc
pop
adc
icebp
iret
cmp
subl
pop
pop
jne
ja
mov
dec
and
fcompl
loop
scas
or
or
insl
shrb
xor
rol
shl
jle
push
int
or
in
inc
jne
cmp
popf
mov
cli
aaa
xchg
pusha
fidivs
daa
pop
and
addr16
in
push
aas
stos
inc
int3
sbb
xchg
push
ret
pop
cld
push
mulb
push
jle
pop
pop
shl
inc
pop
popa
xor
out
fldl
out
jne,pt
je
mov
cmp
fcomps
shll
rcll
mov
int
mov
inc
sbb
aas
jb
out
imul
xchg
in
dec
mov
mov
cltd
xchg
clc
fnstsw
mov
push
movl
pop
mov
add
or
imul
jno
loopne
lods
cmpsl
mov
jl
xchg
sbb
movsb
sub
das
cmp
lahf
inc
and
clc
push
and
andl
lret
mov
popa
push
cli
fisubrs
cmpl
cmp
adc
jge
sbb
sbb
sub
sub
push
fsubrl
clc
stos
lcall
neg
push
mov
scas
sbb
aad
dec
pop
lret
push
dec
aas
jno
mov
lea
arpl
aas
sub
push
mov
jmp
hlt
imul
jmp
mov
lahf
or
add
test
fildll
iret
xchg
jge
gs
scas
mov
loopne
daa
pop
aaa
sahf
ret
movsl
out
push
add
mov
mov
and
mov
adcl
push
jp
outsl
inc
mov
jo
insb
dec
or
mov
lcall
sbb
dec
adc
jecxz
add
lcall
inc
aaa
cmc
mov
arpl
adc
leave
ljmp
repnz
mov
push
aaa
ds
add
xor
adc
ret
jnp
mov
test
mov
sub
mov
arpl
mov
sbb
push
sbb
clc
mov
mov
rorb
out
repz
and
call
dec
sub
inc
sbb
pop
mov
sti
sub
sub
out
std
stos
xor
jmp
loop
jle
aam
pop
jne
lock
loope
dec
arpl
mov
pusha
ljmp
loope
xor
pop
rorl
jecxz
pop
ljmp
mov
loop
movsl
shlb
cmc
jb
inc
and
int3
iret
jmp
pop
xchg
dec
xchg
jnp
test
iret
mov
lock
sub
pop
lods
jns
mov
outsb
pop
add
xchg
call
repz
gs
jp
add
sbb
or
das
test
push
rclb
and
fs
adc
fcoml
dec
xor
pop
lods
push
cld
hlt
and
sbb
jns
out
repnz
add
loopne
pop
fstl
shlb
or
repz
fildll
cli
jg
fwait
sti
mov
and
jg
test
lods
cld
addr16
jne
sbb
incb
mov
push
cmc
inc
outsb
mov
jmp
imul
sub
push
pop
mov
fsubs
es
dec
outsb
aam
movsl
iret
xlat
idivb
jmp
in
movswl
mov
mov
mov
push
jmp
jae
mov
dec
xor
pop
popf
icebp
cwtl
mov
fwait
int
shrb
push
mov
sbb
or
movsl
out
adcb
js
inc
cmp
shld
rolb
adc
xchg
popf
sbb
rorl
adc
xchg
sub
adc
cmp
scas
jle
jno
fcos
jmp
mov
leave
sahf
ljmp
xchg
mov
adc
adc
xchg
mov
xor
sbb
add
mov
dec
test
cmp
or
sub
mov
aas
cmp
add
sub
test
sub
out
cmp
push
and
sbb
leave
es
push
data16
mov
jle
insb
mov
add
pop
test
mov
mov
jmp
enter
je
add
cmpsl
xchg
lahf
inc
push
imul
cltd
jge
sarl
push
test
sbb
cmc
or
out
lods
xor
sub
jecxz
or
push
mov
mov
dec
mov
cmpsl
jns
inc
movsl
xchg
mov
jne
xchg
sbb
into
jp
clc
int
mov
adc
lods
out
scas
pushf
pop
push
dec
xor
iret
mov
inc
jae
mov
sub
daa
pop
cltd
stc
pop
jo
das
jl
inc
dec
or
pop
sub
pop
jmp
lods
pop
jle
imul
lcall
pushf
dec
jmp
jo
mov
dec
pop
xor
xor
sahf
xchg
push
push
lea
in
and
and
sub
sbb
cmp
mov
jecxz
les
ja
fwait
mov
popf
or
sbb
push
dec
mov
fnstcw
mov
js
dec
fldl
mov
subl
jecxz
dec
xor
jg
jle
push
pushf
stos
xchg
cmp
stc
push
inc
aas
in
into
js
outsb
add
dec
std
and
pop
pop
out
lcall
mov
insb
fidivrl
push
cwtl
into
cld
icebp
push
data16
sub
adc
jl
xor
push
add
loop
lea
or
mov
push
lahf
mov
andl
mov
and
out
xor
add
pop
inc
insl
std
stc
outsb
pop
push
in
jle
xchg
icebp
insl
or
and
dec
in
fsubrs
jge
lahf
mov
inc
call
or
cmp
push
jp
scas
fldl
aam
sahf
popf
pusha
ljmp
sub
or
aaa
lds
stc
fcomip
push
imul
pusha
dec
jbe
xor
dec
fs
loop
mov
es
je
sub
in
pop
or
jle
test
hlt
jmp
imul
aad
pop
pusha
fbstp
jbe
insb
imul
fidivl
pop
add
iret
fldlg2
cmp
mov
cltd
mov
dec
je
out
aad
jnp
jg
add
fnstcw
lods
mov
int3
js
pop
adc
adc
scas
pop
ss
mov
push
test
std
js
inc
repnz
inc
cltd
inc
les
out
pop
clc
push
add
popf
icebp
inc
xor
mov
je
adc
fsubl
pop
push
popa
js
mulb
xchg
and
arpl
jp
repz
mov
mov
mov
xlat
movsb
inc
sbb
push
pushf
mov
xchg
leave
and
sahf
sbb
push
adc
mov
mov
pop
push
seto
mov
repz
adc
dec
jb
pop
mov
out
sysenter
xor
subl
imul
bound
fdivl
rcl
jnp
in
jb
jge
xchg
dec
inc
xchg
gs
inc
mov
sarb
adc
jge
int3
sub
dec
les
shlb
icebp
cmpsb
cmc
jg
imul
dec
sbb
jp
add
mov
shr
loopne
shlb
cmp
jge
mov
or
xlat
adc
in
daa
inc
xlat
fisubrl
cli
xchg
jecxz
int3
lcall
es
stos
sub
mov
or
push
dec
pop
pop
lock
scas
mov
lret
ficoml
fdivs
addl
cmp
mov
lret
pusha
ret
sahf
and
enter
gs
fisubl
aaa
mov
add
in
fldenv
mov
mov
cmc
fld
adc
mov
sub
jne
xchg
and
and
lds
xor
cmc
inc
jmp
jns
lret
lcall
inc
cmp
jp
cmpsb
adc
adc
dec
iret
push
push
bound
jae
fnstenv
mov
jp
insl
fmuls
pop
cmpb
rorb
xchg
and
or
cmp
or
jnp
ret
test
jge
xlat
test
pusha
icebp
adc
xchg
cmp
cmc
mov
jae
mov
sbbb
jb
pop
mov
out
and
rcll
mov
fs
shrl
rcll
mov
leave
push
andb
mov
mov
fsubl
mov
mov
cmp
dec
fisubl
or
push
aad
push
or
sub
jnp
mov
or
inc
out
jbe
sub
jbe
jg
ret
stc
nop
movsb
out
aaa
dec
aas
pop
fisubrs
push
imul
cltd
and
jae
jp
out
shll
xchg
push
fiadds
lret
jno
jecxz
inc
push
pusha
cmpb
cmp
mov
lea
cmpsl
mov
jg
sbb
hlt
sub
shll
std
test
jns
pop
mov
pop
sbb
cs
in
xchg
jp
fwait
cmp
pop
scas
mov
push
push
adc
cmpsb
addr16
xchg
adc
inc
mov
mov
jmp
or
jl
inc
xchg
mov
mov
jno
int3
icebp
inc
jl
pop
jbe
sub
inc
loopne
sti
xorl
adc
inc
adc
in
movsl
dec
insl
and
or
mov
jnp
sbb
enter
inc
xchg
push
arpl
cmp
scas
and
insb
les
mov
jge
xchg
pushf
leave
cli
add
shlb
nop
sbb
mov
mov
xor
dec
enter
or
int
ljmp
xor
inc
dec
cmpsb
sti
pop
xor
mov
rcr
test
out
mov
ja
div
dec
push
daa
add
xchg
outsl
xchg
add
xchg
shrb
test
sub
adc
mov
dec
sub
inc
js
and
inc
add
mov
lret
cli
jnp
xorb
pop
jge
loopne
das
fwait
shrl
fisubs
cmpsb
repz
rcl
mov
push
test
iret
fwait
pushf
les
leave
mov
jmp
lretw
sahf
lock
fwait
add
and
iret
lcall
data16
and
jo
sub
notl
dec
add
mov
push
push
xor
mov
adc
cmp
inc
dec
cmp
xchg
sub
inc
sub
imul
lods
add
xor
mov
and
push
push
inc
clc
ljmp
mov
jno
or
or
test
rcl
div
inc
mov
mov
lahf
cmp
jl
mov
test
inc
mov
add
sbb
fdivrp
sub
jo,pn
inc
pop
dec
stos
or
add
and
sub
fldt
jmp
adc
rcrb
out
and
jge
xor
dec
xchg
jp
sbb
pop
cli
out
push
adc
int
popaw
ret
mov
es
pop
cmc
enter
cwtl
cmp
imul
std
push
push
mov
sti
add
sbb
push
in
jl
mov
repnz
ja
loope
cmp
and
dec
std
mov
repnz
lcall
aad
mov
in
dec
dec
out
ret
movb
jbe
scas
inc
js
out
rorl
or
dec
xchg
or
fwait
dec
ret
bound
int
inc
or
cltd
outsl
mov
jb
mov
scas
push
es
scas
out
and
sbb
lahf
adc
inc
and
imul
lahf
or
push
pop
mov
push
add
int
arpl
lahf
out
xchg
scas
movsl
pop
pop
and
hlt
loope
mov
dec
cwtl
es
xchg
xlat
shlb
loopne
pop
stos
push
pop
pop
or
push
ss
mov
int
sti
shlb
jae
std
in
sub
js
mov
xchg
aas
or
jae
jb
push
mov
mov
out
jnp
mov
inc
mov
mov
leave
xor
jmp
gs
repnz
pop
xor
xorb
ss
mov
sbb
sti
aad
mov
inc
mov
negl
and
stos
arpl
fldt
cmp
mov
ds
jge
std
outsl
arpl
lret
push
fmull
loopne
xor
push
push
outsb
imul
push
clc
inc
data16
sarb
mov
add
xchg
shrl
and
mov
shrl
jns
sub
icebp
nop
cltd
call
loopne,pt
inc
cmp
loop,pt
jge
add
mov
test
into
out
dec
xor
outsb
aam
lret
jbe
inc
call
cltd
xchg
adc
lret
cwtl
stos
fistpl
pusha
push
mov
cs
xor
adcl
sarb
jmp
and
dec
jge
mov
sub
jle
push
scas
out
fdivs
cmp
fld
xor
and
adc
aaa
gs
xchg
sbb
outsl
or
push
shll
mov
jnp
inc
and
add
and
cmp
lahf
adc
std
fidivl
rol
xchg
js
int
push
and
jl
adc
loop
dec
bnd
jmp
lret
test
pop
and
push
dec
repz
test
ror
je
pop
repnz
xchg
xchg
aaa
dec
jnp
pop
and
test
out
test
adc
mov
jno
xchg
push
cmp
lock
imul
sub
xor
pop
xchg
addr16
sub
jecxz
leave
scas
jnp
mov
push
fabs
jo
cmpl
pushf
in
pushf
sub
loopne
nop
xor
or
sbb
mov
inc
xor
imul
ds
lea
repz
or
scas
push
fmull
add
dec
test
jnp
sbb
dec
or
test
fldenv
xor
jbe
xchg
dec
jp
sub
fsubs
mov
xchg
push
insl
sbb
fstpl
insl
adc
add
xchg
aam
mov
xor
fisttpl
test
add
mov
cmp
mov
js
loope
leave
scas
insb
test
bound
ljmp
adc
xorl
adc
mov
mov
je
fsub
ret
cmp
movsb
out
pop
dec
popf
stos
add
shrb
inc
outsl
sbb
dec
stc
fnstenv
push
mov
fdiv
or
lcall
xor
adc
mov
out
sbb
jae
iret
adc
lea
idivl
arpl
insl
adc
lds
mov
mov
cltd
dec
xor
xlat
sbb
pusha
imull
push
mov
cs
dec
incl
mov
mov
cld
adc
and
cmp
cmp
lret
cmp
in
stos
fiadds
mov
pop
test
jl
movsb
jb
cmpsb
add
ss
pusha
rol
repz
jae
insl
decb
popf
xor
push
popf
jle
ret
mov
lock
hlt
pop
add
in
rolb
xchg
sub
and
cmpsb
sahf
sub
aas
push
jns
xchg
bound
mov
mov
push
mov
pop
fildl
gs
and
lock
sub
in
incb
jg
cwtl
sub
out
subl
mov
add
pop
cld
pusha
mov
filds
mov
sub
cmpsb
jne
mov
fisttpll
movsl
das
pushf
mov
mov
imul
jecxz
jne
hlt
inc
repz
dec
xor
mov
cli
xchg
enter
and
push
mov
test
sub
mov
mov
cld
or
cmpsl
clc
dec
lea
or
outsl
dec
mov
daa
lret
or
sub
push
imul
xchg
or
push
repz
arpl
mov
mov
cltd
in
sahf
jp
inc
xchg
icebp
jge
dec
ljmp
dec
lea
pop
dec
pop
outsb
or
test
scas
pop
sbb
dec
arpl
cmp
or
hlt
lock
or
adc
dec
pop
add
in
xor
idivl
js
add
pop
mov
cli
dec
jecxz
mulb
lcall
shll
sbb
push
mov
cmpb
and
mov
leave
adc
sbb
fisttpll
in
jo
into
dec
dec
hlt
push
adc
xchg
pop
jnp
inc
ja
xor
loopne
push
push
insl
push
sbb
psubusw
push
mov
js
and
je
jge
sub
outsl
adc
xor
ret
out
js
outsb
jp
adc
sar
sub
cmp
xchg
push
pop
sub
xor
adcl
clc
lods
outsl
int3
cmp
push
insb
popa
cmp
lods
push
adc
jbe
mov
into
fcomp
lcall
frstor
cmc
aaa
mov
pop
push
shll
fcomps
fisttps
push
lock
jb
xchg
xor
pusha
inc
stos
loope
divb
mov
add
daa
fildll
add
cmp
jo
inc
jmp
insl
testb
pushf
mov
test
ljmp
gs
fmul
dec
inc
inc
push
loopne
sbb
cmp
idivl
jmp
dec
xor
bound
cmpb
xor
outsl
cs
mov
mov
or
add
sbb
dec
jno
jns
jl
dec
add
jbe
jae
dec
cs
int3
sti
and
fildll
mov
xchg
lahf
mov
sti
add
mov
dec
lea
cmp
repz
inc
loope
shl
flds
das
incl
loop
lret
jmp
cmc
mov
jb
imul
mov
aam
lret
pop
les
call
ret
mov
or
ret
daa
jo
mov
addr16
xor
add
rcll
mov
jnp
mov
mov
rcr
outsb
dec
dec
cli
iret
cltd
cmp
sub
lahf
out
push
fmull
jb
les
xchg
sbb
movsb
pop
nop
aad
jo
fdivs
shrb
mov
loop
int
shrb
inc
ret
test
maxps
push
sbb
fwait
sbb
add
adcb
decb
dec
aaa
fsubl
loop
out
mov
jne
in
daa
icebp
sub
inc
mov
mov
sub
pop
js
xor
inc
outsl
testw
push
sub
loopne
shl
sbb
mov
jg
mov
add
or
sub
xchg
out
xchg
enter
or
sti
jae
push
sbb
divl
mov
out
outsb
pop
ret
stos
or
mov
fisubrl
std
xor
mov
int
push
or
pushf
jb
shrb
addr16
scas
icebp
or
pop
sahf
add
adc
mov
jmp
pop
dec
xor
mov
fldenv
lcall
fsubrl
sbb
icebp
es
fmull
mov
mov
push
fucom
subb
jmp
sub
repnz
xor
mov
push
mov
mov
dec
mov
push
mov
jb
jp
and
cli
xlat
adc
adc
sahf
mov
sbb
sbb
adc
jmp
je
mov
cmpsb
mov
or
dec
and
test
mov
pop
hlt
push
pop
pop
mov
jg
adc
pop
test
cs
cmp
sub
insl
xchg
mov
mov
xchg
push
and
into
loope
call
fildll
aam
mov
xchg
push
cmpb
dec
leave
mov
jno
xchg
arpl
mov
ret
js
das
adc
pop
push
imul
xchg
pusha
mov
std
push
sbb
cmp
pop
inc
jle
in
aam
push
mov
notb
or
in
shr
xchg
push
ret
in
push
je
sbb
pop
inc
sub
test
pop
xchg
popf
jecxz
sbb
sbb
push
subl
mov
les
sarb
scas
lods
aaa
push
arpl
jle
inc
pop
es
and
lds
adc
cltd
push
ds
sub
and
add
or
rolb
loope
test
mov
test
dec
jle
sub
shll
filds
adc
or
pop
cld
adc
xor
cwtl
jno
movsb
sbb
lea
cmpsl
sbb
out
cmp
pop
lds
testl
pop
movsb
mov
mov
es
mov
cmpsl
mov
jecxz
sbb
mov
sbb
sbb
mov
xor
vpshab
movsb
lods
push
clc
inc
push
ret
ret
xor
pop
lods
add
frstor
jecxz
enter
ret
test
bound
out
iret
pop
adc
jg
pusha
xchg
xchg
pop
ds
sbb
imul
dec
xchg
jnp
adc
hlt
push
pusha
mov
and
pushf
sub
outsb
ss
out
aad
dec
test
int
enter
es
push
test
js
nop
ja
cmp
fisubl
iret
js
cmp
cmpsl
dec
mov
dec
lea
out
test
ja
icebp
std
cld
dec
inc
and
sub
add
inc
ret
add
out
cmp
hlt
dec
int3
inc
xchg
pusha
or
mov
aas
and
cmp
div
jmp
out
insl
stos
nop/reserved
dec
mov
mov
jae
imul
xchg
push
sub
mov
lret
sti
fcoml
rclb
into
in
xor
inc
mov
lahf
mov
cwtl
mov
and
ss
push
adc
xchg
mov
aam
mov
dec
aad
addl
fcomps
xchg
in
pop
cmpsb
and
adc
leave
lods
xor
xor
dec
leave
xor
adc
hlt
fidivl
cmp
sbb
pushf
je
push
popf
es
mov
xchg
ret
test
mov
add
out
mov
mov
lds
and
lock
jp
pop
fidivrl
orl
and
add
adc
jge
repz
repz
mov
push
mov
daa
pop
in
jbe
lods
ja
adc
ss
ja
loop
mov
jae
ret
les
cltd
in
repnz
insl
int3
lds
into
mov
sbb
jge
clc
sub
test
dec
push
aam
repz
arpl
pop
shlb
outsl
test
inc
popa
or
sti
fiaddl
pop
xor
cmpsb
lret
repnz
xchg
out
mov
sahf
std
mov
jno
ds
jp
jno
pop
mov
or
cmp
iret
test
bound
dec
xlat
pop
mov
add
sub
dec
jbe
mov
into
stos
js
adc
adc
icebp
xorb
repnz
js
loope
sarb
mov
mov
into
push
pop
dec
jo
dec
sub
pushf
adc
outsb
mov
cmp
push
mov
mov
aam
dec
lcall
push
fimull
dec
stos
sub
fistpll
std
pop
outsb
mov
push
mov
inc
test
and
ret
mov
aam
outsl
add
dec
rcrl
in
lods
ja
or
mov
fcmovu
dec
stos
sbb
in
ljmp
dec
xor
add
jmp
sbb
fimull
lret
cmpsl
pop
loopne
mov
jl
mov
icebp
cld
pop
imul
push
dec
dec
mov
push
push
cwtl
push
out
mov
mov
dec
xchg
idivb
pushf
mov
cmp
pop
adc
sbb
inc
mov
dec
inc
mov
mov
adc
push
adc
fdivl
leave
jne
xor
mov
out
pop
mov
out
push
inc
addr16
dec
mov
push
je
push
insl
das
jge
ds
xor
xor
push
and
cmp
cld
mov
testb
lods
arpl
cwtl
cmpsb
jns
ja
xorl
push
ss
xchg
mov
loop
push
xchg
xorl
sub
ss
shll
push
rol
enter
out
xchg
mov
sbb
outsl
cmp
out
cmpsl
xor
hlt
stos
orl
pop
add
leave
loope
jne
nop
push
shlb
jmp
mov
std
xchg
xor
cmpl
mov
lods
icebp
lcall
or
shrb
mov
movsb
dec
cmp
mov
or
nop
pop
test
mov
test
mov
mov
cmpsb
cmpb
mov
fstpl
movsb
scas
xchg
sbb
cmpsl
iret
or
cmp
and
or
xor
push
sti
sbb
adc
xor
stos
sub
cltd
adc
popa
ljmp
jae
xor
jnp
push
xor
push
sub
mov
aam
cmc
out
pop
mov
xor
add
rcrb
xlat
stc
je
hlt
mov
loope
cltd
inc
test
mov
out
ds
fcmovu
shrl
ss
xor
mov
out
loopne
imul
push
jo
repnz
std
lcall
adc
aaa
adc
cld
mov
push
adcb
adc
addb
and
dec
lret
cmc
es
cmc
and
incl
movsb
cli
int
loop
clc
push
pop
repnz
ljmp
pop
scas
lds
aam
clc
ljmp
insl
clc
icebp
mov
repz
in
jmp
jl
jmp
or
clc
cmp
fldenv
rcl
dec
adc
cltd
orb
mov
inc
lahf
add
out
mov
mov
xor
and
xchg
or
push
or
and
mov
andb
scas
xchg
das
fidivs
inc
lods
outsb
push
cmp
jmp
shrl
mov
es
mov
push
cmp
notl
scas
mov
mov
mov
jo
pop
jg
outsl
push
sbb
pop
call
mov
iret
mov
hlt
or
movsl
call
stc
or
cmp
sarl
mov
in
push
testl
jno
js
lcall
mov
out
pop
ret
and
inc
mov
popf
dec
jno
dec
mov
out
or
inc
les
push
loop
xor
sub
loop
or
xlat
repnz
dec
pop
fucom
loope
mov
adc
jmp
sub
ds
std
xchg
mov
aad
adc
push
sbb
mov
in
daa
jo
movsl
xchg
dec
out
es
pop
mov
lods
jne
fcomip
es
mov
lds
mov
xor
mov
lret
xchg
cld
or
push
lock
pop
cs
sbb
mov
js
push
negl
adc
add
dec
inc
int3
push
in
cmpsl
pop
cmp
dec
cli
push
out
xchg
int
mov
add
pop
sbb
loope
xor
add
xor
out
jb
int
pushf
or
push
push
jge
int
dec
mov
aam
sbb
es
xor
cmp
mov
xorl
dec
and
pop
push
cli
pop
daa
movsl
call
je
mov
stos
sub
popa
jl
sbb
sbb
xor
pop
popf
pop
push
lods
orl
lcall
adc
call
or
sub
pop
sbb
aaa
rol
std
mov
fld
fmull
and
mov
pop
jp
push
xor
mov
sub
jmp
xchg
inc
adc
jge
fs
mov
test
outsl
jl
jmp
roll
fldenv
mov
lret
movb
mov
cwtl
mov
adc
out
aaa
nop
mov
xor
pop
xchg
sbb
push
sbb
stos
mov
xor
inc
dec
pop
ljmp
cmp
std
pushf
or
out
fs
lods
xor
pop
sbb
ss
rorl
pop
test
les
or
fldenv
push
jns
dec
and
sub
inc
mov
sbb
aam
lock
stos
mov
aaa
repnz
jb
enter
jmp
add
mov
bound
fs
addr16
inc
pushf
adc
xor
enter
jne
cmp
mov
imul
sub
add
mov
pop
rol
lods
stos
lock
in
leave
fstl
sub
arpl
js
mov
and
adc
add
or
pop
lock
xchg
shlb
jns
dec
or
mov
push
xchg
movsb
dec
or
les
pop
adc
lock
jo
cmp
das
xchg
cmpsb
idivb
sbb
inc
or
sbb
daa
jns
or
adcl
xchg
pop
aaa
ss
xchg
mov
cmp
adc
pop
das
imul
cmpsb
mov
icebp
push
or
leave
dec
test
cmp
add
cmc
lods
pop
loope
xor
mov
inc
jge
mov
test
lods
or
mov
imul
cs
loop
xor
and
in
cwtl
imulb
je
out
pop
push
lods
mov
pop
jb
hlt
mov
dec
inc
gs
mov
mov
xchg
ljmp
cmp
inc
mov
pop
or
cmp
jle
popa
test
mov
ljmp
mov
scas
int3
mov
or
test
push
dec
pop
or
sarl
in
jl
pusha
sti
es
inc
in
dec
testl
cs
and
outsb
xor
sbb
sbb
ja
jp
push
test
push
xchg
movsb
lahf
insl
sub
mov
loopne
out
mov
test
inc
mov
xchg
ficoml
dec
dec
add
push
xor
rolb
sub
dec
mov
mov
jg
mov
push
jbe
movsl
fidivl
shll
subl
ds
mov
pop
sbb
stc
test
dec
adc
or
inc
and
scas
xor
outsl
sbb
pop
jl
bound
lret
ret
pop
mov
shrl
call
repz
jle
pop
xlat
inc
xor
movsb
insb
jo
ljmp
lods
xchg
or
test
pop
sbb
sbb
loopne
cmp
sahf
mov
and
jne
push
xchg
test
add
adc
loop
out
or
cmp
pop
mov
mov
lea
mov
push
pop
popa
shrb
pop
imul
test
sub
jnp
and
pushf
sarl
test
cmpsb
insl
call
mov
cmc
inc
int
sbb
mov
frstor
jo
xchg
adc
cmpsb
sbb
xchg
mov
daa
xchg
cmp
out
data16
insb
push
daa
inc
leave
pop
mov
sub
pop
out
fdivs
pop
fcoms
lret
in
ret
pop
or
div
pusha
or
add
push
stc
xchg
xor
loopne
push
xchg
xchg
xchg
adc
dec
jbe
mov
addr16
sbb
fnstenv
cwtl
jge
std
nop
les
jne
lods
scas
mov
or
dec
jnp
into
sbb
out
dec
pop
clc
mov
push
mov
int3
ljmp
mov
cmpl
nop
mov
movsl
dec
fsubl
xchg
addr16
and
lea
add
push
ljmp
ljmp
outsb
fadd
in
cmp
cmpsb
cmc
add
scas
jo
test
out
pop
ljmp
pop
sbb
cmp
mov
leave
xchg
sub
adc
pop
push
rcrb
xchg
adc
adc
aam
ja
pop
scas
dec
cmp
sbb
push
or
push
cmp
lret
xchg
in
sbbl
mov
insl
scas
adc
in
js
xchg
out
or
jmp
pop
jo
nop
xchg
insl
jae
dec
dec
jno
xchg
movsl
call
mov
cs
mov
dec
adc
pop
es
xchg
dec
and
lds
jo
pop
insb
adc
xor
pop
jb
jle
lcall
adc
clc
out
je
push
inc
lcall
inc
mov
mov
clc
pushf
push
ds
cwtl
int3
jge
sub
sbb
push
xchg
dec
xor
in
shl
lods
or
insl
loop
lds
push
hlt
add
xor
sbb
mov
cmp
jmp
xchg
xor
push
lods
pusha
pop
jecxz
fdivl
popa
addb
dec
adc
outsl
adc
mov
js
fs
inc
mov
xchg
jb
xor
bound
cmp
xchg
jns
sbb
cld
loopne
sbb
adc
pop
outsl
add
xchg
lds
mov
loope
sub
fsub
sbb
xchg
int
mov
int
imul
int3
xor
movsb
popa
push
jp
ds
mov
jp
push
mov
test
icebp
add
stos
shl
cmc
mov
loope
xchg
filds
loop
imul
push
adc
and
or
stos
es
scas
int
fcomi
in
jge
mov
pushf
out
inc
clc
push
push
call
xor
cmp
add
xchg
add
pusha
xchg
les
lret
ret
loopne
sbb
movsl
mov
xor
push
sahf
dec
sbb
dec
fst
jge
or
fst
aam
add
xor
xor
lea
jae
jmp
mov
ss
clc
add
mov
and
adc
movsl
loope
or
pop
push
push
push
int3
ret
fstpt
jb
mov
mov
push
sub
decl
xor
mov
push
lret
sub
adc
add
movsb
into
popa
add
sahf
ret
test
xchg
jnp
mov
pop
push
int
jg
sahf
repnz
std
out
in
or
inc
mov
cmp
adc
stc
notb
dec
or
in
imul
mov
bswap
scas
addr16
ficomps
pop
mov
mov
daa
repz
lahf
jae
in
cli
fmul
mov
aad
and
jbe
orl
popa
outsl
and
into
cld
and
adc
mov
sub
pop
test
and
pop
hlt
add
dec
sbb
pop
outsb
movsl
stc
adc
test
adc
cmpb
or
mov
jecxz
scas
push
sbb
roll
test
jg
pop
push
lahf
cmp
daa
es
and
push
test
sub
aam
xchg
into
xchg
and
cmp
or
aas
call
cmp
cli
stc
adc
push
in
in
jg
test
mov
das
push
adc
add
jp
popa
mov
jmp
lret
xor
mov
std
ds
in
and
xlat
mov
and
mov
jecxz
jb
lret
in
sbb
int
or
int3
int3
lds
popf
xor
leave
push
sbb
in
clc
pop
movsb
push
xchg
int
push
jb
xchg
popf
loop
pusha
mov
jnp
mov
cmpsb
adc
xchg
xor
and
sti
loop
inc
mov
shll
jnp
pop
fcmovne
mov
idiv
cs
sbb
xor
shr
lahf
loopne
jmp
cmpsl
mov
outsl
les
cwtl
adc
jge
mov
imul
imul
stos
dec
in
adc
ret
xchg
stos
bound
push
cmp
fisubl
jnp
out
popf
dec
adc
lret
xor
xor
es
mov
in
lock
nop
inc
imul
enter
sub
out
ret
and
pushl
jns
dec
xchg
ljmp
movb
shlb
sahf
arpl
mov
cmpsl
ss
lahf
popf
js
mov
test
jecxz
push
int3
clc
outsl
ja
cmp
cmp
cld
popa
cmp
inc
addr16
xchg
jns
mov
push
cmp
icebp
push
sub
lcall
loope
loope
mov
xchg
mov
repnz
mov
outsl
add
add
clc
add
popa
add
xor
xor
test
sbb
cwtl
lock
fstpl
lds
sti
fwait
mov
xor
gs
jb
or
inc
test
pushf
cmp
inc
loop
pop
int
xor
cmpsb
call
jo
push
and
insl
in
dec
mov
cld
les
adcl
cmpsb
jecxz
jno
push
lock
cwtl
ja
notl
test
adc
pop
fidivrl
mov
lcall
rcr
add
nop
loope
pop
push
dec
push
inc
daa
lds
shr
ret
fwait
xchg
lea
popaw
add
enter
or
or
enter
dec
sbb
decl
mov
lds
and
scas
dec
mov
pop
clc
stos
sbb
popa
data16
call
sub
lret
nop
mov
push
rol
mov
jmp
jno
add
stos
mov
mov
sub
inc
scas
ss
fdivrs
insl
testb
pop
adc
aam
mov
push
in
cld
inc
mov
gs
jno
rclb
dec
sahf
fcomps
and
xor
ja
xor
pop
sbb
add
cmpsb
jmp
in
dec
or
xchg
mov
jmp
adc
and
popa
push
cs
cld
and
repz
xchg
and
fmuls
push
ret
testl
in
xchg
int
mov
and
xor
addr16
jb
cmp
test
dec
sub
inc
cmp
sub
test
jno
mov
leave
icebp
sub
and
and
out
ret
cwtl
mov
je
jb
lret
mov
repnz
ljmp
sarb
adc
jno
arpl
mov
aad
filds
dec
inc
iret
xchg
jl
cmp
sub
push
stos
imul
data16
or
iret
adc
jge
xchg
mov
cmc
sarb
gs
movsb
cmp
dec
sub
push
stc
adc
stc
aad
dec
xchg
adc
or
pop
cmp
pop
lods
stos
aas
fiadds
pop
inc
nop
push
dec
xchg
jne
sbb
cmp
push
hlt
jg
pop
int3
inc
insl
add
andb
pop
xor
xchg
stos
jo
mov
jmp
mov
xor
shll
or
jo
ficoms
sub
test
in
scas
ljmp
sbb
test
mov
icebp
xlat
xlat
test
cmp
rolb
or
xchg
dec
in
adcl
daa
insb
mov
movsl
insb
ror
pop
mov
dec
lret
adc
xchg
imul
sbb
push
mov
testb
js
mov
lret
mov
cmp
mov
push
push
jbe
shlb
daa
mov
insb
jb
sbb
notl
movb
inc
sbb
mov
lret
dec
mov
imul
aas
in
add
cwtl
out
cmpsb
dec
icebp
xchg
jecxz
xchg
stos
xor
or
dec
or
shll
mov
or
and
sbb
call
and
in
dec
les
and
adc
outsb
xchg
jae
pop
rep
shlb
bound
mov
call
pusha
jle
lret
cmc
mov
and
or
fisubrl
sbb
and
pop
fisubs
inc
jb
mov
shlb
adc
push
negl
rcrb
push
das
xlat
lods
stc
pop
xchg
ja
adc
push
mov
add
stos
push
pop
sub
mov
into
xchg
pop
pop
jb
out
mov
add
es
sbb
in
movsl
fiaddl
add
push
mull
jmp
mov
jno
xchg
lock
jmp
mov
sub
lahf
bound
and
push
xchg
and
mov
jl
inc
cmp
ret
das
mov
mov
clc
xlat
adc
pop
add
jecxz
adc
jne
int3
imul
int
sarl
das
ret
add
and
xor
test
jmp
xor
scas
stos
leave
imul
scas
push
sti
add
in
cltd
mov
test
mov
dec
jp
or
es
fucomip
pop
add
sub
jno
and
sbb
je
stos
push
aad
stc
cmpsb
outsb
aaa
addl
xor
xchg
xchg
clc
push
sahf
inc
push
jno
dec
sub
pop
arpl
das
in
imul
imul
test
sub
sub
jo
es
adc
into
jb
push
inc
fcompl
in
cmpsb
xlat
sbb
push
pop
or
bound
mov
and
out
mov
fldcw
mov
or
or
xlat
je
inc
std
push
mov
and
sti
outsb
int
into
sub
lcall
mov
jbe
cld
pusha
cs
sbb
adc
adc
jb
jecxz
mov
adc
dec
enter
inc
or
inc
cmp
loope
sti
test
sub
jge
push
das
pop
repz
cld
stos
and
xchg
std
mov
mov
add
testb
mov
inc
push
and
jle
jnp
mov
sub
sbb
xor
pop
sbb
das
mov
xor
inc
ja
jbe
push
mov
xchg
adc
ljmp
movsl
inc
lods
mov
push
test
insb
repnz
imul
rolb
sub
inc
dec
push
xchg
cmc
sub
hlt
into
lods
idiv
mov
addl
test
xchg
jae
xor
das
mov
pop
lods
mov
jnp
shl
lcall
and
ror
cmp
xor
xchg
mov
adc
int
mov
mov
aam
push
lds
pop
inc
mov
aaa
inc
int3
xor
adc
jns
cmp
lcall
imull
mov
sub
dec
fmuls
test
sub
iret
adc
pop
loopne
sub
xor
nop
mov
cwtl
sahf
sti
mov
aaa
or
mov
mov
jnp
jae
sbb
lods
inc
inc
inc
mov
jns
sbb
fnstcw
add
pop
mov
out
int3
xlat
mov
into
jg
cltd
push
pop
lret
mov
and
push
loope
mov
mov
cmpl
scas
out
mov
outsb
loopne
out
shrl
mov
push
icebp
scas
sub
js
push
lea
xchg
add
ret
inc
imul
repnz
cmpsl
inc
int
push
mov
push
out
push
jle
call
mov
push
jnp
jg
icebp
bound
test
popf
stc
enter
adc
sub
jno
pop
rclb
cld
inc
inc
popf
dec
lods
aas
in
les
and
xchg
push
mov
sub
in
push
mov
scas
out
jp
xor
xchg
cmc
pop
pop
rclb
push
adc
test
cmc
cmc
in
iret
jbe
xchg
add
frstor
cli
ffreep
push
std
cmovno
jno
ja
and
jno
mov
testb
repz
addb
pop
mov
sbb
mov
dec
jns
loop
dec
xchg
insb
rorl
loop
or
mov
xchg
push
sbb
mov
andb
xchg
test
push
test
xor
mov
inc
mov
imul
cmp
jle
lock
lds
sarb
push
mov
mov
mov
loopne
mov
cmp
xor
int3
xchg
add
cmp
or
jnp
add
adc
sbb
adc
scas
xor
jae
lods
out
mov
push
add
mov
or
repnz
mov
dec
iret
sbb
shrb
jb
or
lahf
sub
inc
pop
rcr
xor
dec
std
stc
pop
mov
aas
jno
cmc
mov
push
enter
mov
call
sub
or
data16
jge
sub
dec
les
xor
repz
enter
repz
lods
test
enter
nop
mov
lcall
cli
cmc
lcall
jp
pushf
cltd
adcl
push
adc
les
shrb
xchg
dec
cmp
sbb
int
ds
rol
push
sub
aam
leave
adc
sbb
or
push
outsb
or
dec
jle
jne
imul
pop
stos
mov
jl
mov
inc
fwait
rol
mov
lods
cmp
into
mov
cmp
and
dec
inc
sub
imul
lods
push
or
je
out
or
fidivrl
movsl
dec
lock
fmull
and
imul
adc
ret
cmp
xor
leave
fwait
xor
addr16
mov
les
xchg
or
ljmp
stos
and
test
dec
inc
mov
ret
cmp
popl
add
pop
dec
ds
xchg
jmp
mov
push
rolb
mov
mov
es
ret
cmp
mov
shlb
lret
jl
scas
or
setp
insb
scas
push
stos
dec
mov
jno
data16
lods
jmp
or
dec
push
test
adc
bound
and
frstor
or
ljmp
jae
jle,pt
lock
sti
scas
orb
dec
jno
jbe
adc
jae
aam
or
mov
push
je
or
pusha
in
popl
bound
adc
sti
stos
fiaddl
test
mov
push
cmp
pushf
xchg
push
adc
sbb
mov
cmpsl
les
out
outsb
and
repnz
test
cmc
mov
cld
xor
ficoml
mov
push
outsb
movlps
xchg
scas
pusha
and
sub
and
addr16
shll
daa
cs
incl
loope
sahf
xor
hlt
inc
pop
pop
test
pop
push
ret
or
fs
lret
sar
mov
or
lods
add
cmpsl
ret
or
inc
icebp
stc
insb
push
mov
dec
shll
rorb
and
sub
xor
loope
xchg
hlt
aaa
fnstenv
and
or
aaa
mov
in
push
push
lods
fnstsw
jmp
pop
iret
neg
shlb
out
fnsave
sbb
cli
inc
xchg
pop
fcoml
xchg
xor
in
pop
cmp
and
std
sub
cmp
movsl
inc
mov
stos
in
or
das
jge
sti
pop
cmpsb
jnp
stc
jne
pushf
pusha
int
std
outsb
mov
mulb
in
lret
stos
fisubs
mov
test
testb
xor
mov
mov
xchg
mov
sbb
add
lods
fmul
sbb
xorb
mov
pop
dec
andl
rol
stc
and
ss
cmp
mov
les
mov
and
inc
int3
test
lahf
cmpsb
cmp
sub
filds
test
repnz
shrb
gs
cmp
mov
xor
xchg
inc
push
mov
push
mov
out
and
pop
int
jle
lret
fstps
jno
loopne
js
inc
dec
cmp
mov
jl
addr16
mov
scas
outsl
rcl
ljmp
sti
std
js
stos
popa
xchg
cmp
adc
or
scas
das
mov
jg
aaa
hlt
cmp
lock
imul
out
lods
test
lds
mov
nop
fstpl
daa
arpl
mov
adc
subl
push
inc
popf
cltd
xchg
lcall
add
in
aas
cs
test
or
xchg
mov
jo
hlt
mov
gs
push
lea
mov
inc
jnp
adc
mov
cs
popa
mov
mov
mov
arpl
fstpt
repz
or
sub
sahf
aam
jge
in
xchg
scas
add
jns
or
push
fnsetpm(287
fwait
sub
mov
xchg
sbb
sbb
dec
in
jecxz
jb
dec
mov
out
ljmp
fwait
sbb
pop
and
insl
or
in
int
sbb
pushaw
and
popf
push
push
lahf
or
addr16
enter
jmp
daa
lods
lea
les
xchg
xchg
pop
mov
mov
arpl
cmp
sub
fdivl
pop
and
sbb
stc
ret
sbb
sub
mov
sahf
sbb
nop
pop
cld
xchg
pmullw
jl
sub
dec
test
iret
dec
pop
or
out
rolb
mov
scas
mov
xor
mov
push
mov
into
sub
jmp
add
test
or
xchg
pop
shr
mov
stos
scas
ljmp
es
jecxz
dec
sub
cmc
pop
lds
inc
jge
daa
xor
mov
mov
andl
sbb
popf
lret
daa
cwtl
mov
shrl
stos
xchg
cwtl
jmp
sbb
stos
jge
add
pop
pop
fwait
jle
or
jns
das
push
mov
xor
jno
jae
hlt
insb
jg
xchg
sahf
jecxz
lds
mov
cmp
pop
push
enter
and
sub
lcall
lea
xor
mov
imul
pusha
dec
call
pop
mov
jo
or
out
bound
pushf
shrl
in
rorl
push
jecxz
fld
out
xchg
push
add
jnp
inc
adc
xor
jp
or
das
ss
out
add
adc
pop
addb
std
jo
mov
inc
sbb
leave
push
push
push
popa
loopne
and
dec
aaa
out
jmp
mov
in
xchg
ljmp
xor
cmp
xlat
lds
mov
rcll
ja
scas
and
fucom
and
pop
pushf
sbb
rcrl
mov
stc
add
push
push
pusha
cmp
sbb
in
inc
gs
xor
repz
mov
push
rorl
shl
sub
mov
gs
cs
ret
fadds
cmpsb
fadds
dec
inc
inc
and
out
stos
pop
insl
hlt
push
jl
sub
hlt
push
loop
imul
lods
push
inc
push
rcrl
les
jb
movups
notl
sbb
andl
and
add
lods
push
adc
or
sbb
fsubs
imull
jp
jle
stos
enter
pop
xor
das
fstl
decl
mov
inc
aas
out
loope
mov
dec
add
sbb
testb
mov
aas
xchg
mov
testl
aam
lret
inc
movsb
jne
fcmovnbe
xchg
ret
cmpb
mov
scas
movsb
in
jno
sbb
pop
xchg
lcall
mov
mov
fidivl
cmp
pop
jno
cmp
imul
ds
jmp
mov
inc
cmp
mov
scas
test
adc
push
adc
mov
jno
pop
sahf
push
out
mov
inc
in
pop
xor
sub
mov
scas
pop
push
outsl
nop
and
pop
and
cmp
popf
dec
idiv
sahf
xorl
mov
push
or
movsl
fidivl
xchg
es
stos
and
mov
dec
test
movsb
cmp
dec
add
test
les
es
cmp
cmp
and
fidivl
movsb
cmp
mov
test
insb
mov
test
mov
fcompp
clc
popa
fbstp
sbb
xchg
jge
push
push
pop
push
xchg
mov
cmpsb
cwtl
mov
mov
mov
fiadds
dec
push
push
xor
das
push
jmp
out
jle
sahf
imul
xor
pusha
dec
int3
jecxz
imul
push
js
dec
fnstcw
sub
mov
gs
pop
inc
mov
ret
loop
cmp
fnstcw
jno
inc
in
out
iret
loop
sub
jae
pop
cs
daa
jle
xor
push
sbb
push
enter
mov
xchg
jne
dec
in
push
jecxz
ljmp
mov
and
sbb
mov
and
and
fscale
inc
xlat
dec
imul
xlat
cmp
xor
pop
mov
jmp
dec
aam
add
ficoml
push
insl
dec
aaa
scas
push
ret
daa
test
or
xor
ljmp
ret
jge
sbb
mov
mov
aam
adc
clc
inc
xchg
out
push
lret
repnz
pop
pop
push
sbb
stc
les
jmp
ret
mov
outsb
arpl
add
idivb
push
cmp
inc
enter
aas
loop
xor
cmpsl
out
pop
popa
movsb
push
sub
pop
pop
in
pop
push
lcall
push
ficoms
icebp
frstor
mov
fs
pop
cmp
fistps
mov
pop
enter
and
xor
and
outsb
or
sub
mov
mov
je
dec
or
xchg
aad
cmp
pop
hlt
push
inc
daa
push
stc
sub
xchg
push
pop
icebp
inc
fildl
cli
xor
xor
jo
dec
adcl
call
mov
xlat
sub
mov
cmpsb
div
sbbl
mov
test
jecxz
sbb
dec
fs
inc
sub
xchg
call
orl
cwtl
rolb
xchg
push
mov
ljmp
mov
dec
fwait
shlb
xchg
out
std
into
aam
das
or
int
dec
in
pop
std
jmp
outsb
add
pop
xor
adc
sub
mov
inc
inc
out
pop
jge
loop
sbb
movsl
sbb
jae
repnz
push
pop
shll
les
into
add
mov
jg
inc
sbb
bswap
out
jbe
dec
adc
xchg
loop
push
clc
jb
mov
xor
sbbl
mov
negb
push
adc
mov
rcl
sbb
js
inc
lock
ret
jmp
repnz
outsb
dec
cld
cmp
inc
inc
bound
pop
add
dec
pop
pop
gs
or
aas
mov
test
xorb
cmp
cmpl
cmp
hlt
shlb
xor
ret
popa
push
inc
dec
inc
lods
in
shlb
dec
mov
adc
pop
push
and
jne
add
inc
push
rol
sbb
repz
loopne
cmp
lcall
hlt
dec
sbb
mov
sub
orb
dec
and
dec
adc
jae
mov
mov
out
jl
cs
jg
mov
lock
mov
call
pop
das
stos
pop
rol
stc
inc
out
and
cmp
mov
sub
aam
std
into
cmp
push
mov
pusha
adc
and
push
fcmovnu
sti
or
aas
cmp
add
xorb
clc
mov
xchg
loopne
out
sbb
jns
mov
push
cmp
fdiv
mov
or
enter
mov
bound
and
dec
dec
pop
outsl
sub
sub
fcmovnu
pop
adc
xor
aas
insb
sbbb
or
jmp
mov
and
repz
test
xchg
ljmp
inc
data16
pop
or
pop
in
mov
test
mov
ret
sar
mov
hlt
shll
push
jnp
stos
lahf
mov
insl
lock
sbb
pop
add
pop
daa
jmp
mov
mov
into
cmp
ss
mov
jno
popf
ret
andl
test
sbb
mov
mov
jge
jl
lods
das
leave
test
daa
mov
lock
stos
dec
adc
mov
sub
or
mov
inc
mov
imul
jge
mov
mov
les
in
push
repnz
or
mov
outsl
insb
lock
mov
test
pop
out
out
nop
je
das
imul
mov
ret
popl
into
inc
lds
push
sarl
xchg
popf
movsl
mov
inc
push
scas
pop
aaa
sub
or
mov
fcomps
mov
inc
arpl
jecxz
pop
fwait
lods
or
cmp
or
push
bound
test
jecxz
jge
aam
insb
rclb
int3
les
in
fwait
cmpl
push
orl
cmp
jl
sbb
cwtl
push
add
rorl
inc
and
loopne
popf
mov
aad
fs
lock
ret
insl
adc
xchg
mov
arpl
into
shrb
jnp
and
out
out
jnp
xchg
push
aaa
mov
fidivrs
cld
imul
dec
add
lods
mov
mov
stc
xchg
mov
lret
add
pop
je
pop
xor
loope
push
test
mov
or
lcall
ss
sub
push
xor
mov
jecxz
int
push
jg
cmp
cmp
xor
xorl
push
inc
xor
cmp
cmp
xor
arpl
cwtl
jp
sbb
aad
lods
mov
insb
cld
repz
out
mov
adc
mov
icebp
and
sbb
into
adc
pop
rclb
adc
push
or
fdivs
out
mov
or
sub
ss
xchg
out
andb
loop
outsb
sbb
push
inc
dec
pushf
std
pop
sbb
push
out
fsubrs
sbb
add
ja
jecxz
lcall
neg
out
mov
imul
jns
ficoml
inc
fwait
inc
mov
lock
add
sbb
aaa
fsubrl
js
loopne
fnstenv
sti
cmp
mov
aam
jge
out
insl
pop
pop
test
out
mov
out
jno
xor
ljmp
push
lods
xor
inc
lock
adcl
addr16
jmp
sbb
inc
and
loopne
cmc
arpl
pusha
cmp
add
lock
inc
cmpsb
mov
mov
cmpsl
dec
enter
mov
pop
in
mov
cmp
data16
faddp
repnz
cmp
les
fisubrl
adc
adc
incl
ja
xchg
and
cs
stos
jp
jno
pusha
aaa
sub
psadbw
imul
cs
jnp
xlat
daa
add
adc
popa
mov
test
sbb
out
scas
cmpsb
in
mov
std
mov
cmp
test
dec
fisubl
mov
adc
and
mov
jnp
in
int3
loope
push
push
sarl
fildll
test
sbb
xor
push
mov
cmp
js
test
jge
push
call
in
xor
cmp
mov
jmp
push
mov
roll
into
mov
test
fnstenv
mov
xor
inc
sahf
jns
or
xchg
popa
into
jge
scas
mov
dec
xor
xchg
jecxz
lock
enter
lods
mov
cs
decw
aad
push
rorl
adc
js
into
lret
xlat
test
adc
insb
mov
lea
push
pusha
or
repnz
inc
xlat
add
xchg
xor
pushf
and
push
mov
dec
int3
pop
jne
jmp
int
mov
mov
ljmp
aas
sub
loop
and
inc
sub
lret
inc
jle
outsl
out
cmp
fwait
and
push
push
cmp
iret
cmpsb
scas
arpl
cltd
inc
out
mov
les
pop
cmc
fcmovbe
mov
mov
add
outsl
jns
pop
in
push
pop
push
rcll
int3
lea
inc
ljmp
mov
push
rolb
mov
jle
pop
mov
inc
leave
and
insb
lock
sub
mov
out
mov
loope
dec
sbb
sbb
cltd
cmp
sbb
inc
jno
jo
cmc
xor
add
fdivp
loope
and
and
jae
outsl
fmuls
push
jbe
push
cmc
and
cmp
loope
aaa
aad
xor
inc
adcb
fnstsw
nop
pop
push
cld
add
leave
fstpl
fs
adc
jbe
and
enter
xchg
aam
mov
sahf
xor
loop
fildl
jnp
bound
jnp
insl
push
popf
call
adc
jl
adc
rcr
push
aad
inc
inc
mov
sbb
cmp
addr16
fxch
xchg
in
mov
xchg
jecxz
dec
push
mov
mov
test
repz
or
jne
and
adc
mov
repz
pop
scas
dec
jns
mov
jl
mov
int3
orl
mov
pushf
push
test
pop
xor
xchg
das
scas
jge
fstpt
and
addb
pop
insl
lret
je
cmp
or
dec
outsl
mov
stos
dec
pop
pop
pop
ds
outsl
scas
add
es
in
out
loope
lcall
sub
js
repz
aad
mov
adc
add
aas
jo
xor
pop
aaa
mov
repz
adcl
mov
xlat
cmc
outsb
mov
icebp
jae
call
pop
popf
xor
mov
cli
out
and
xchg
or
xor
or
dec
cmp
ficomps
sbb
loop
mov
inc
fdivr
xchg
push
or
jmp
sbb
into
push
fsubp
mov
add
sbb
ljmp
sahf
mov
cmp
cltd
adc
mov
test
sub
mov
lcall
in
clc
mov
pop
xor
and
push
push
and
cmp
mov
int
aad
jae
lods
push
dec
movsl
lret
js
mov
fcoml
and
ljmp
fidivrs
mov
add
cmp
aaa
sti
pop
or
mov
cmp
pop
mov
mov
xchg
rol
in
dec
cmp
jp
and
or
pop
sub
ja
mov
psubsw
shl
dec
repz
adc
or
adcb
mov
jnp
aad
mov
jg
mov
je
out
mov
adc
iret
cmp
jbe
ret
sub
pop
bound
xor
imul
sbb
add
pop
stc
jnp
insl
in
dec
push
adc
xor
ljmp
xchg
ja
movsl
add
dec
sub
push
mov
imul
jle
pop
sub
ljmp
sbb
mov
int
mov
adc
int
xchg
adc
adc
call
dec
pusha
testb
mov
mov
pop
lods
add
pop
and
sub
inc
mov
xchg
inc
ljmp
fidivrs
xchg
dec
jne
adc
mov
mov
popa
divb
aam
shl
pop
fdivl
xchg
sahf
cwtl
scas
xchg
or
mov
fdivr
add
sbbl
pop
fwait
add
les
adcb
mov
mov
adc
ficomps
pop
andb
out
jnp
mov
in
xchg
or
push
in
lods
inc
stos
sub
fdivl
pop
xor
pop
jbe
adc
imul
push
nop
dec
in
jle
dec
out
inc
cmp
dec
dec
jb
test
pop
and
fwait
scas
cmp
push
mov
mov
xor
enter
jno
stos
pushf
or
push
outsl
rcll
mov
jp
cltd
outsl
cmp
sbb
nop
adc
cmpl
hlt
mov
cmpsb
sbb
imul
loopne
cmpsb
sbb
sbb
test
or
sub
and
pmaddwd
adc
or
mov
mov
xchg
ret
pushl
jp
pop
mov
out
push
pushw
outsl
mov
dec
xor
movsl
in
sub
or
lods
mov
lods
std
pop
mov
sub
ljmp
cltd
fdivrs
pop
clc
add
push
xchg
jne
shrl
scas
mov
ficompl
push
or
clc
repz
xchg
or
pop
or
mov
mov
pusha
jmp
movsb
fmuls
add
sahf
sbb
or
xchg
push
xchg
mov
xor
pop
fnstsw
in
adc
and
or
and
ficoms
dec
out
fisubl
xchg
movsl
imul
xor
push
cltd
jbe
mov
fidivrl
jno
xchg
or
test
das
rcll
cmp
cmpsl
int3
imul
out
int
mov
notl
outsb
leave
push
mov
sbb
outsl
inc
xor
sbb
sarl
nop
mov
mov
mov
inc
mov
rolb
sub
push
or
push
rcl
movsb
test
xlat
and
stc
add
lods
mov
outsl
pop
cmp
lret
out
cmpsb
lahf
or
fcomps
mov
mov
hlt
outsl
jb
dec
loope
imul
mov
js
adc
sbb
add
stos
adc
adcl
and
cmp
push
jnp
push
add
add
mov
xchg
add
adc
stos
ret
adc
std
dec
lahf
mov
sub
inc
inc
or
add
jno
cltd
out
cmp
jp,pn
hlt
xor
clc
push
pushf
pop
in
inc
cmp
stc
mov
inc
sub
gs
xor
push
sbb
mov
mov
daa
mov
imul
ljmp
fwait
lock
inc
xchg
adc
sub
movsb
xchg
cmp
and
inc
push
push
in
daa
mov
dec
fiadds
pop
xor
mov
xchg
das
aam
adcb
add
mov
repz
arpl
pop
aas
aaa
andl
jmp
dec
je
scas
add
push
adcl
in
push
xor
nop
lahf
nop
iret
cmp
test
jmp
mov
push
jmp
mov
mov
cmpsl
xchg
add
lcall
adc
mov
std
push
inc
pop
jmp
push
sub
imul
mov
outsb
subb
call
jle
mov
je
lds
xor
jmp
xchg
inc
repz
fwait
or
in
cmp
fcoms
lock
sti
push
adc
incl
mov
sub
pop
sub
mov
loop
cmp
insb
jecxz
jb
frstor
and
lds
mov
stos
in
mov
push
mov
outsl
iret
ret
les
xor
frstor
insl
or
pusha
and
dec
inc
xchg
jmp
inc
sub
jle
shlb
jmp
repz
aam
sbb
push
pushf
idivl
or
lahf
or
jb
testb
and
mov
orb
xchg
cmp
sbb
xchg
ds
mov
lods
or
mov
dec
rcr
xor
dec
int
cmc
ffree
and
fcompl
mov
movsb
fs
shll
lahf
dec
in
cmc
pop
sub
dec
les
or
jl
push
adc
add
aam
mov
sti
mov
xor
pop
jecxz
je
imul
lock
cmp
hlt
lahf
rol
lods
jg
inc
out
out
clc
adc
into
lds
push
xlat
push
and
jo
adc
jge
jmp
jbe
andl
jecxz
data16
stc
inc
fiadds
mov
std
pop
and
xor
stos
sub
packssdw
aad
pop
out
cmpsl
adc
jbe
jmp
jo
jmp
ds
ljmp
push
adc
pop
lahf
sbb
lock
inc
inc
shrb
mov
mov
push
sbb
iret
cwtl
shll
stc
xchg
movsl
adc
inc
imul
sub
mov
sub
out
pushf
xchg
xor
aad
lods
mov
std
cmp
out
stc
cmpl
xchg
push
cmc
push
rolb
out
psubq
push
sbb
push
jbe
sahf
mov
jae
imull
and
jo
aam
pop
sub
jns
push
lcall
xchg
inc
into
pop
fisttpl
jmp
fsts
loopne
stos
cmpsl
bound
dec
push
in
mov
pop
xor
loope
or
test
jmp
push
mov
mov
add
stc
mov
les
stos
sbb
ret
loopne
mov
fisttpl
add
stos
push
inc
adc
xlat
sar
add
rcrl
popa
push
adc
lea
xchg
mov
pop
add
mov
sahf
dec
mov
je
sbb
sbb
sbb
insb
xor
stos
pop
stc
outsb
xor
cmp
clc
sbb
lds
xchg
stc
xchg
dec
gs
or
add
in
cs
fdivs
xchg
mov
aam
xor
inc
test
or
jmp
sub
hlt
out
stos
xchg
adc
cmpsl
and
fcomi
inc
mov
jne
ficoms
out
sahf
or
testl
test
jb
cmp
mulb
jle
jne
add
push
mov
das
or
mov
and
dec
adc
cs
xchg
imul
jmp
xchg
pop
les
data16
jbe
leave
clc
xchg
arpl
lods
cmpsb
add
jge
push
cmp
mov
in
xor
mov
pop
mov
fistl
dec
push
sub
and
inc
pusha
xlat
inc
sahf
push
mov
mov
cs
inc
lods
arpl
jg
dec
shrl
mov
int
ret
or
jb
cmc
and
mov
rep
pop
xor
or
cmp
icebp
jnp
out
test
sbb
sarl
mov
adc
pop
enter
mov
xor
mov
or
ret
xor
nop
xchg
je
sbb
push
int3
cld
gs
jecxz
mov
fsubr
dec
sub
bound
xchg
mov
int3
cmpsb
data16
loopne
fstl
push
daa
mov
xchg
bswap
xlat
add
add
fisttps
mov
lods
jbe
xchg
mov
in
adc
adc
movsl
mov
mov
inc
addr16
stos
out
in
lods
inc
xchg
in
cli
aaa
loop
jp
adc
rcr
mov
adc
adc
pop
mov
or
xchg
jmp
fists
mov
lcall
pop
mov
cmpsb
js
in
scas
or
dec
push
out
pop
out
cmc
rol
mov
stc
dec
insl
push
and
push
stos
js
lahf
scas
ds
stc
lods
stc
adc
push
lock
pushf
roll
inc
enter
xlat
fxch
cmpxchg
arpl
push
mov
out
add
push
jo
cmp
int
dec
addr16
mov
repz
cmp
jo
sbb
cwtl
sbb
pop
int3
pop
pop
mov
inc
ss
mov
ds
and
mov
add
ret
xchg
mov
inc
push
xchg
xor
cmp
xchg
adc
aaa
jg
lods
xor
scas
sbbb
leave
in
shl
gs
lret
add
sbb
rorb
xchg
adc
shl
aam
inc
out
out
mov
fcomps
out
sbb
call
xor
idiv
sbb
adc
sub
push
add
js
outsl
mov
adcl
inc
ds
iret
dec
xor
repz
push
aam
push
popf
xchg
aaa
das
mov
xchg
cli
pop
cmp
mov
mov
sub
cmp
sub
cmp
lds
jle
cmc
push
out
inc
ljmp
out
inc
cmp
push
jno
jmp
lcall
jp
xchg
dec
pop
add
xchg
inc
ret
in
in
cmp
dec
fists
inc
pop
pop
pop
jecxz
sub
mov
inc
sub
shrb
call
xor
loop
sbb
xchg
push
test
push
inc
inc
sahf
cli
fnsave
jmp
mov
dec
xchg
pop
shl
pop
pop
or
outsb
rorb
mov
mov
dec
loopne
add
pop
mov
and
adc
mov
sysexit
imul
aas
mov
leave
in
inc
test
int
lds
lds
cmp
mov
popa
leave
or
mov
push
stos
popf
repz
push
pop
cmc
inc
xchg
cmp
sahf
mov
inc
cmpsb
mov
lret
stc
xor
jl
sub
mov
add
daa
adc
insb
imul
test
mov
into
imul
sbb
sbb
iret
xor
scas
js
or
adc
dec
and
jmp
fwait
adc
jle
xor
enter
xchg
sbb
mov
xchg
fwait
adc
push
shll
jnp
subb
cmp
in
andl
dec
jns
sbb
jg
jb
sti
loope
es
sub
mov
es
dec
sbb
lahf
call
cmp
aaa
adc
test
loop
and
dec
cmp
pop
int
icebp
sbb
pop
ficoml
pop
fmul
scas
inc
stos
fadds
jle
sub
lea
jle
daa
ret
iret
push
mov
enter
lea
adc
xchg
cmpsb
arpl
fcomps
std
inc
and
add
jg
mov
and
jmp
sarb
cs
sbb
cmp
mov
aas
mov
repnz
push
dec
stc
push
add
test
jle
js
cwtl
cmpsb
lock
mov
call
ljmp
mulb
lcall
mov
sbb
ret
loopne
int3
repnz
jmp
push
mov
or
icebp
out
sub
loope
rcrb
xorb
fwait
xor
xchg
jnp
rcll
xchg
sbb
inc
jne
notl
push
push
sbb
or
push
or
cmp
pminsw
jb
lods
and
loope
fxch
inc
imul
scas
mov
dec
aaa
aam
je
jbe
push
or
cmp
sub
out
insl
mov
or
ljmp
mov
je
push
aam
or
push
and
jnp
lods
adc
fcmove
popf
pushf
cmp
push
test
inc
outsl
repnz
jle
xor
mov
jo
shr
pop
arpl
cltd
and
test
fidivl
aas
push
test
test
sub
push
adc
mov
inc
iret
pop
dec
int3
bound
push
les
test
stos
or
xor
mov
mov
arpl
int3
inc
adcl
aas
in
inc
or
adc
push
adc
invd
sbb
outsb
jne
add
sbb
jmp
push
mov
mov
jl
adc
and
mov
orl
insl
rcr
and
in
ret
cmc
push
mov
and
addb
daa
pf2id
je
fs
out
sbb
or
jp
lds
daa
inc
enter
cs
xchg
jae
push
mov
call
sub
cmp
scas
pop
sbb
xchg
adc
xorb
nop
add
xor
in
and
pop
jecxz
xor
test
dec
dec
loopne
pop
or
add
dec
sbb
cltd
cmp
rclb
or
and
fildl
sbb
mov
lahf
sub
ljmp
mov
push
and
scas
stos
outsb
pop
addr16
xor
dec
sbb
inc
xor
and
mov
imul
rolb
out
push
mov
pop
loope
push
pop
dec
out
div
inc
lahf
jno
in
in
push
pop
sbbl
cmpb
sub
or
mov
pop
and
inc
or
leave
decl
je
jno
lds
xchg
lea
mov
mov
inc
lret
je
test
add
mov
inc
loop
xor
fmuls
cltd
jp
mov
mov
stos
insl
loopne
mov
dec
cld
jno
sub
movsb
xchg
mov
push
and
inc
leave
es
cli
test
clc
inc
or
mov
insb
shlb
and
lods
das
xchg
jmp
fadds
test
push
cli
pop
cmp
inc
push
pop
leave
movsb
imull
leave
fimull
jne
hlt
fdivrs
and
cmp
push
out
push
aam
pop
add
dec
mov
mov
sbb
add
inc
push
mov
mov
adc
pop
pop
xchg
add
rclb
cmp
in
data16
mov
subl
dec
sbb
es
movsl
lahf
sahf
xlat
dec
mov
push
xor
xchg
pop
or
daa
daa
fs
or
dec
cmp
pop
loop
fldenv
pop
cmp
icebp
xor
test
fisubl
inc
push
mov
inc
sbb
lcall
add
into
dec
mov
push
aam
outsb
fcompl
cmpsb
mov
mov
cmp
mov
lods
fdivr
sub
lods
pop
xor
pop
roll
mov
jne
pop
imul
pop
mov
mov
test
divl
xchg
mov
out
sub
lret
lcall
cmp
outsl
lea
sbb
lods
dec
popa
pop
sbb
pop
adc
out
xor
lock
sub
xchg
xchg
clc
lock
push
mov
sbb
mov
cmpl
pop
int3
or
nop
mov
cmc
addr16
push
pop
std
decl
popf
fstps
cmp
test
cmp
xchg
sub
and
ret
enter
lock
cmp
and
imul
pop
sub
in
adc
shrl
ljmp
cmp
lods
enter
or
fildl
fwait
insb
mov
fidivrl
cmp
fnstsw
mov
xchg
inc
out
arpl
inc
ret
pop
push
aad
loopne
notl
pusha
push
pusha
jae
les
rorb
add
push
rclb
lret
out
in
pop
xor
push
push
inc
movb
dec
addr16
push
mov
adc
cltd
or
lods
lahf
arpl
es
sbb
jae
pushf
imul
int3
das
cwtl
or
add
testl
or
cwtl
and
or
mov
lahf
arpl
out
jecxz
mov
movsl
sti
cli
mov
mov
cmpsb
inc
sbb
mov
cwtl
dec
pop
dec
movsl
and
cmp
xchg
lret
icebp
xchg
test
jo
push
out
mov
daa
push
xor
lods
in
aaa
xchg
pop
pop
mov
jno
scas
sub
sub
subb
out
xlat
mov
scas
imul
ret
dec
cwtl
jno
loopne
subl
repz
adc
add
mov
sbb
outsb
pop
movsl
scas
dec
leave
xchg
xchg
xchg
or
dec
push
sbbl
add
jmp
mov
clc
out
sbb
lcall
in
sbb
mov
test
shl
iret
mov
loop
daa
insl
lret
cmp
pop
call
stc
scas
mov
push
enter
mov
mov
movl
mov
repnz
stc
jl
cli
fisttpll
xchg
push
notl
addr16
jne
mov
dec
clc
shrd
inc
inc
xlat
and
pop
in
ljmp
dec
cmp
imul
mov
cmp
sbb
mov
fisubs
mov
insl
xchg
push
rcll
fmul
pop
decb
cmp
jne
pop
push
dec
mov
push
ss
inc
cmp
pop
aam
jl
in
sarl
rorl
ja
loope
mov
mov
and
lcall
movsb
aaa
leave
mov
stos
fisubrl
mov
outsb
or
cmc
xor
push
adc
lahf
pop
cmpsl
inc
lods
xchg
jle
push
ficomps
scas
insb
mov
rclb
and
scas
or
push
js
pop
lret
ljmp
jecxz
mov
add
jnp
push
xor
cli
nop
pop
pushf
push
mov
call
jmp
out
hlt
mov
and
xchg
mov
mov
jae
mov
or
inc
lock
sub
pop
push
xchg
fstpt
mov
pop
xchg
xchg
jo
ljmp
mov
cmpsb
cltd
dec
leave
fists
adc
mov
sub
sub
sub
addr16
push
scas
and
aas
mov
mov
lds
mov
fmul
inc
add
mov
repz
xor
sbb
insb
arpl
mov
lahf
jnp
push
sbb
testb
add
push
scas
rcll
xor
fstl
xchg
inc
adc
add
stos
jne
xchg
and
data16
dec
repz
repnz
mov
mov
ljmp
mov
cmp
repz
push
xchg
xchg
jae
push
aam
adc
jbe
jne
into
out
mov
inc
or
sbb
sbb
rolb
test
xchg
insl
xchg
push
dec
outsl
dec
xor
push
pop
lods
out
or
xlat
jo
int3
pop
push
fwait
pop
add
sbb
push
popa
add
sub
out
int
mov
lcall
mov
push
fs
jmp
scas
cmpl
mov
arpl
enter
cmp
lds
mov
std
dec
or
sbb
mov
std
fisubs
cltd
sub
js
inc
push
subb
sub
sub
ss
icebp
pop
lock
aam
adc
loopne
sbb
mov
inc
cli
pop
sub
int3
mov
out
jnp
stos
decb
ljmp
jb
sbb
insb
call
mov
xor
hlt
push
sub
inc
inc
pop
psubd
jb
jne
imul
test
fsubl
clc
pusha
fs
ret
cmp
adc
jg
movsb
or
call
mov
lret
call
in
xchg
lods
out
cmp
push
mov
test
cli
jl
imul
fstl
stos
adc
jl
mov
cmp
cmp
sbb
aas
fisubrl
mov
push
sbb
xchg
dec
insl
test
xchg
popf
or
insb
xchg
iret
xor
dec
insl
sarb
jg
sbb
bnd
cmp
fstl
das
jecxz
cwtl
mov
iret
in
ja
scas
lods
lcall
fcmovnu
pop
or
pop
mov
jnp
cmp
dec
cli
push
sarl
mov
push
idivb
sub
and
popf
loopne
addl
adc
lret
stc
mov
cmp
mov
enter
adc
test
jb
or
jecxz
jne
lods
sbbl
adcb
aad
xor
push
je
mov
jae
xor
push
jl
cmp
sbb
xchg
jbe
sub
dec
xor
jp
xor
push
clc
jge
inc
mov
mov
shl
push
hlt
in
cmp
cs
mov
jnp
jecxz
jo
inc
sti
das
mov
sbb
clc
mov
mov
aam
fcmovnb
sub
add
mov
xor
sbb
cmp
incl
mov
repnz
inc
and
xor
xchg
inc
aas
leave
scas
or
pop
int
insl
lods
xorb
mov
xor
in
sub
push
bound
cmp
push
fs
dec
lock
dec
and
mov
xchg
dec
cmc
mov
and
fmull
sbb
sbb
inc
aaa
sahf
negl
and
pop
in
xchg
stc
mov
inc
mov
mov
imul
cmp
cmp
and
add
outsw
inc
cmc
lds
cmp
int3
xor
or
mov
loopne
mov
cmp
add
sub
loope
inc
addr16
lahf
aaa
clc
hlt
jnp
jae
movb
mov
data16
xor
stos
mov
add
adc
aad
adc
xorb
or
repz
jno
push
xchg
sbb
xchg
mov
mov
jmp
rcrb
js
xchg
push
jbe
out
push
lods
test
mov
xchg
shll
mov
aad
clc
inc
aad
inc
andb
je
call
in
test
iret
cmp
mov
jge
push
push
xchg
adc
lods
insl
pushf
push
aas
in
outsb
aad
cmp
cltd
movsb
movsl
xchg
jp
xchg
jb
ljmp
or
popa
in
sub
mov
clc
adc
dec
icebp
mov
lea
aaa
cmp
or
xchg
cmpl
pop
std
xor
dec
das
or
inc
dec
adc
loope
xchg
pop
test
sub
cmp
scas
movsb
adc
cmpsb
jae
xchg
push
daa
outsb
sub
and
sbb
mov
mov
pusha
cmp
sub
ss
add
cli
xlat
and
mov
add
stos
test
fsubl
sbbb
pop
sti
push
test
dec
lret
adc
xchg
and
inc
pusha
mov
dec
push
popf
adc
stos
mov
adc
pop
loopne
mov
push
pop
jne
arpl
cwtl
sarl
jo
mov
ljmp
pusha
test
lods
pop
add
xchg
or
or
dec
test
jmp
xor
and
arpl
aad
dec
jp,pt
mov
je
loope
ss
mov
mov
jle
xchg
jecxz
mov
mov
cmpsb
outsl
jno
in
adc
and
cmpsb
xor
jns
jecxz
or
lods
and
push
loopne
xor
lds
orb
rclb
gs
sbb
inc
xchg
inc
mov
cmp
jo
push
cld
mov
aad
add
outsb
bndldx
test
gs
sub
mov
movsb
sbb
nop
rcrl
jne
adc
in
adc
xchg
xchg
dec
push
in
subl
xchg
inc
cli
imul
cld
sub
mov
pop
call
js
xchg
int3
push
pop
jns
sbb
aaa
fisubrs
mov
or
dec
adc
lea
jmp
mov
push
push
push
mov
push
xor
jne
jmp
loop
push
popf
insl
fucomi
sbb
test
add
mov
push
sbb
aaa
sti
push
xorb
adc
stos
add
cld
cmc
mov
xor
cmp
sub
aad
mov
in
comiss
std
std
ljmp
cwtl
out
popa
dec
int3
repnz
fistps
xchg
jmp
test
test
dec
and
mov
inc
and
xchg
jbe
inc
notl
es
inc
cltd
leave
cmp
jmp
push
xchg
pop
movsl
adcl
arpl
inc
pop
sub
test
xchg
xchg
jle
call
mov
mov
push
sahf
jle
inc
push
mov
xchg
cmc
adc
add
outsl
xor
jne
cmp
xchg
pusha
push
jne
sub
jb
popa
fists
add
mov
push
mov
std
push
fimull
imull
test
out
std
fcoms
adc
xor
adc
sti
nop
jnp
js
mov
mov
sahf
scas
mov
fcoml
mov
xor
les
cmp
push
sbb
or
daa
out
cmp
loop
pushf
lret
jmp
inc
iret
or
ja
and
or
cmpl
pop
xorb
add
pushf
pop
scas
xchg
mov
inc
outsb
xchg
xor
pop
pop
je
jge
pop
cmp
out
sbb
push
mov
push
lahf
push
pop
in
push
add
call
shll
lea
aad
inc
xorl
sub
leave
sub
int
mov
cmpsl
fndisi(8087
cmpsl
and
or
mov
dec
into
mov
rorl
jae
mov
inc
mov
fdivr
or
add
mov
insb
idiv
movsl
clc
push
jnp
mov
dec
imul
add
scas
stos
dec
xchg
mov
push
xchg
sbb
fs
push
shll
sub
or
jmp
fisubl
fs
movsl
nop
or
into
imull
adc
xchg
ljmp
stc
sbb
xor
sarl
pop
std
xor
mov
dec
mov
lds
cmp
rorl
cmc
push
mov
shrl
lret
pop
shlb
mov
push
int
mov
inc
aaa
cmp
rorb
idivb
inc
jne
and
jb
pop
xlat
xchg
ja
inc
push
xchg
stos
sbb
jae
js
ds
in
mov
outsl
sub
jg
les
or
fnsave
add
add
sbb
pop
pop
movsl
scas
hlt
js
test
push
inc
call
xchg
inc
add
xlat
out
sahf
sahf
fimuls
or
movsb
ret
sarl
jbe
test
pop
jns
cmp
stc
jns
je
inc
mov
cmp
cmpsl
jl
pusha
fcmovne
mov
adc
sbb
aam
pusha
out
aad
or
xor
pop
movsl
scas
in
pop
scas
inc
imul
lods
aas
xchg
xchg
clc
loope
inc
and
jp
and
jg
popf
dec
inc
out
cld
fldl
fndisi(8087
inc
fisubs
nop
cmp
mov
es
pop
orl
sub
jmp
pop
add
mov
nop
les
aaa
cltd
add
hlt
sbb
inc
push
fimull
dec
inc
push
cmpsl
sub
push
insb
jmp
mov
bound
adc
gs
jle
fs
test
and
call
sbb
adc
pushf
xchg
jle
ret
pop
pop
sub
jb
push
xchg
fsubl
frstor
sub
mov
aaa
pusha
scas
into
dec
in
dec
pushf
cwtl
mov
xor
add
ret
jne
push
push
dec
les
add
into
mov
sarl
lahf
pop
pop
cltd
mov
pop
into
push
ror
jle
aas
sub
push
mov
cwtl
xor
icebp
mov
dec
push
sub
enter
push
pushf
push
repnz
and
and
xchg
in
aas
xchg
jb
iret
jnp
scas
push
movsb
or
scas
test
jl
in
sub
dec
inc
xlat
sbb
mov
jg
pop
fstps
aaa
push
test
sbb
scas
sub
aam
out
add
rcrl
lahf
mov
arpl
jmp
pop
xlat
lods
mov
sub
push
add
imul
leave
mov
mov
sub
pop
rcll
pop
sbb
stc
hlt
mov
mov
pop
dec
jbe
fsubl
pop
or
mov
rcrl
mov
add
scas
fdivrp
repz
mov
mov
cmp
mov
add
sahf
and
or
cmpb
and
mov
jae
scas
jecxz
iret
stc
pop
std
jns
mov
xor
icebp
and
clc
mov
js
ret
jmp
scas
icebp
pushf
outsl
or
rorl
sti
mov
push
xorb
and
je
fs
push
test
test
push
jae
push
daa
negl
cli
jmp
add
in
push
flds
lret
cld
cld
adc
popl
mov
cmp
pop
cmpsb
mov
xchg
pop
mov
fcomi
pop
dec
rol
and
mov
jnp
aas
sub
fwait
pop
xchg
popa
testb
mov
xchg
and
sub
ret
adc
lds
loop
data16
loopne
inc
xor
or
or
push
push
mov
pusha
pop
dec
clc
in
mov
dec
enter
jnp
sub
dec
inc
outsl
test
pop
in
mov
sbb
cmp
ret
cmc
in
subl
int3
or
mov
or
inc
cmp
push
pop
add
fwait
icebp
shlb
jne
fimuls
sti
push
insb
fwait
mov
div
int
test
mov
jg
mov
xlat
stc
pusha
outsb
cli
sub
nop
mov
sbb
pop
or
mov
mov
loopne
adc
mov
mov
lea
sbb
fbstp
je
pop
loope
add
xor
repz
nop
ss
mov
push
and
xor
in
decl
xchg
sbb
push
pushf
xor
mov
loop
mov
inc
adc
pop
mov
mov
lahf
push
sbb
movsl
inc
xchg
mov
dec
jle
data16
fdiv
mov
pop
outsb
lcall
loop
incb
jnp
jl
ret
sub
jbe
push
sbbl
bound
xchg
cmp
dec
imul
cld
push
je
cmovnp
insb
cmp
dec
cmpsl
sahf
jp
ds
outsl
pop
sbb
mov
pop
insb
fnstcw
mov
ficompl
adc
xor
movsl
xchg
dec
test
outsl
jns
rclb
or
into
pop
rclb
cltd
popa
inc
lahf
or
rol
aaa
mov
test
dec
mov
or
aam
sar
lds
cmc
sbb
mov
sbbl
repz
je
xchg
insl
mov
xchg
xor
push
push
pop
test
ljmp
add
out
mov
and
out
push
push
mov
stc
lds
mov
mov
daa
inc
or
mov
jno
fst
movsl
xor
xor
xchg
in
mov
data16
pop
int3
mov
clc
pop
cmp
sub
fdiv
push
dec
scas
inc
mov
dec
lods
outsb
sti
jo
je
pop
xchg
adc
cwtl
xor
in
into
add
lods
pushf
jb
or
incb
push
call
pop
lods
je
or
shlb
cmpsl
sbb
xchg
mov
ljmp
clc
jmp
sbb
mov
sbb
jl
sbb
mov
int3
imul
sti
std
pusha
sub
and
clc
sti
gs
subb
sub
push
cmc
inc
xchg
dec
pusha
inc
lcall
adc
ja
stc
cmpsl
call
adc
pusha
popf
and
ret
rcr
pop
dec
xorb
pop
testb
inc
cmp
shlb
in
insl
sbb
in
lret
sub
or
testb
repz
mov
or
fisubrl
push
mov
jmp
popf
mov
jmp
ljmp
mov
aam
ret
pop
xor
cmpsl
jno
in
push
mov
pop
inc
pop
int3
nop
push
mov
and
movsl
scas
rorl
sbb
inc
popf
mov
cmp
lret
aaa
push
jecxz
faddp
idivl
test
dec
or
mov
lods
out
imul
jge
adc
mov
in
in
pop
movsl
jnp
mov
ret
xchg
dec
xchg
lahf
jmp
or
and
mov
mov
sahf
test
jno
lret
enter
mov
pop
cli
pop
sbb
mov
fs
push
rcl
dec
mov
outsb
lret
push
sbb
ret
sub
daa
xchg
outsb
cmp
cmpsl
jmp
dec
loop
ljmp
jecxz
mov
mov
xchg
shr
flds
xchg
dec
mov
ljmp
pop
iret
add
addr16
xor
sbb
dec
sub
repz
cmpsl
mov
out
leave
daa
inc
jbe
and
push
fcmovu
clc
icebp
xor
cmc
jle
or
lods
and
pop
fcomi
iret
and
call
out
and
imul
stc
xchg
pusha
or
dec
xor
cld
push
insl
ja
test
ret
fisttps
outsl
clc
mull
add
jle
sarl
jno
cs
jae
ss
adc
into
shll
sub
std
scas
inc
mov
jle
jp
sbb
adc
data16
pmaxub
mov
ffreep
inc
push
incl
jbe
or
loope
ljmp
xchg
mov
sbb
test
repz
and
mov
xchg
mov
push
sarb
dec
ljmp
adc
jecxz
push
xor
out
leave
enter
xchg
and
rcll
js
stos
aas
dec
loope
sub
lret
and
pop
cmp
setge
jae
icebp
push
or
add
mov
stc
popl
popl
out
ljmp
xchg
ret
cmc
jle
stos
inc
pop
mov
mov
mov
dec
or
pusha
mov
mov
stos
inc
xor
mov
xor
xorb
mov
push
js
scas
sbb
push
cmp
sbb
jo
xor
lds
fisubrl
mov
dec
add
lahf
int3
fcmovne
cld
mov
mov
setnp
sub
nop
and
adc
repnz
sbb
orl
addr16
imul
mov
ret
push
push
push
jecxz
pop
in
add
push
jae
in
nop
pop
jbe
mov
mov
cmp
mov
into
js
inc
dec
outsb
inc
xchg
dec
xor
inc
mov
xchg
punpckhbw
pusha
popf
aam
xor
fdiv
cmp
jne
test
cmp
sub
ror
jecxz
fcom
push
int3
and
insl
push
xchg
fisubrl
sub
aam
push
rclb
mov
jnp
xchg
cmp
mov
sub
push
pop
fbstp
push
jecxz
dec
sub
mov
repz
mov
ret
cmovns
aam
mov
lea
int3
cwtl
cmp
pop
loopne
cld
jns
fstpt
xor
mov
push
cs
je
clc
xchg
push
cwtl
push
in
cli
jmp
xor
or
ds
jp
xor
add
mov
pop
mov
cmc
les
inc
dec
cli
push
adc
rcrb
jbe
jns
jne
sub
mov
cld
mov
int3
es
test
mov
icebp
dec
std
fmulp
lea
loopne
cmp
pusha
shrb
mov
rcrb
jne
and
lcall
sbb
push
jg
das
push
ds
xchg
fs
lcall
in
xchg
in
mov
ljmp
imul
cmp
into
lret
pop
dec
xchg
xor
sbb
cs
sub
xchg
iret
fmul
inc
bound
std
xor
jmp
cwtl
lret
jb
shrl
mov
or
pop
jg
mov
imul
scas
addr16
lahf
mov
jmp
mov
test
insl
loope
xchg
pop
mov
into
xorb
fnsave
mov
stos
mov
in
cmp
jg
fisttps
push
sub
enter
test
mov
mov
mov
movsl
iret
mov
outsl
call
movsb
int
idivb
into
dec
call
mov
rolb
aam
jecxz
push
inc
test
lock
es
push
cmpsb
lods
pop
out
jmp
cli
test
in
imul
dec
cli
sbb
mov
iret
add
jns
and
jmp
rol
les
jno
jo
aad
push
repnz
rolb
pop
pop
sub
push
mov
xchg
xchg
pushf
pop
aaa
inc
test
jbe
dec
jns
js
icebp
inc
sbb
dec
dec
sub
sub
xor
mov
mov
mov
xchg
iret
xchg
jg
ljmp
int3
or
call
fisttps
sbb
lds
jnp
arpl
and
mov
shlb
cltd
stc
xor
mov
pop
ja
and
ret
mov
cltd
jge
loope
push
inc
dec
sbb
sub
jbe
mov
neg
and
arpl
inc
daa
jg
fimuls
add
or
sbb
mov
imul
in
inc
dec
stc
jg
fstl
push
and
adc
mov
mov
add
inc
sbb
sub
mov
mov
pop
fcomi
inc
mov
mov
dec
lock
jmp
fcomp
mov
scas
clc
push
stos
mov
fwait
mov
gs
lock
jns
bound
sub
add
push
out
adc
pop
pop
mov
xor
sahf
adc
jae
or
dec
lcall
xchg
push
adc
es
lea
fisttpll
adc
in
sub
idivl
loopne
rcr
push
aad
loopne
mov
sub
cwtl
or
jg
sbb
add
enter
mov
test
jge
sbb
xor
imul
lods
jg
xchg
les
add
lods
or
cmp
pop
rcl
push
pushl
fs
push
jp
dec
sti
xchg
and
push
dec
rorl
pop
jns
dec
test
mov
cmp
jb
ljmp
in
jle
lcall
lea
xchg
dec
rcl
test
push
in
and
decl
adc
mov
pop
jl
jae
stc
loope
nop
sub
mov
cmpsb
loop
outsb
push
adcb
lods
pop
jle
mov
dec
mov
lods
popa
std
outsl
pop
mov
adc
cltd
js
movsl
addr16
arpl
push
adc
leave
stc
mov
jp
xchg
sub
or
adc
push
ret
xor
leave
imul
loope
mov
inc
add
pop
adc
mov
je
and
and
jmp
xor
movsb
mov
fsub
pop
lea
scas
dec
dec
lret
mov
sbb
dec
insb
jnp
mov
push
je
call
fs
in
push
inc
nop
xchg
pushf
pop
call
in
sahf
mov
xchg
fcoml
mov
sbb
sahf
mov
out
mov
test
pop
aaa
push
ljmp
mov
scas
and
cmp
mov
cltd
pop
mov
movsl
mov
push
cmpsl
into
ja
or
testb
xchg
mov
mov
rcrl
arpl
cmp
jns
push
hlt
pop
pop
aaa
push
dec
movsl
fwait
xor
or
or
daa
cs
lods
lahf
rcrl
nop
cmc
jge
inc
sub
xor
pop
hlt
xor
add
mov
cmp
inc
stos
jecxz
stc
xor
test
add
dec
rorl
mov
dec
cli
inc
mov
cld
fs
jmp
in
hlt
test
xchg
fs
add
dec
out
pusha
dec
xor
jmp
push
mov
push
loope
mov
inc
call
push
lea
push
push
xorb
shrl
insl
jmp
mov
mulb
pop
sub
popf
and
xchg
push
nop
mov
les
scas
xor
es
scas
push
jnp
and
cs
dec
push
lods
lods
je
lea
jp
jno
jg
mov
cld
dec
add
lds
inc
sahf
mov
mov
scas
mov
jl
insl
and
sbbl
push
push
sarb
lock
or
pop
adc
aam
movsb
les
add
lods
ja
jmp
rolb
pop
imul
repz
mov
mov
loope
test
imulb
sub
shl
sub
adc
outsb
int
lahf
fs
push
hlt
xchg
loop
inc
nop
dec
sti
push
dec
push
js
jne
ret
xchg
xor
pop
movsl
mov
add
jp
xchg
xchg
clc
and
cwtl
fdivs
loopne
xchg
outsl
fbstp
push
and
hlt
mov
xchg
cmp
sbb
mov
out
or
aas
fcoms
mov
or
cmc
xor
lds
repz
mov
jge
mov
jb
dec
sbb
xchg
jne
cmc
mov
test
mov
movsl
pop
out
dec
xor
push
cmp
sub
lods
ds
cli
loope
lods
mov
lods
inc
sub
cmp
les
add
cwtl
inc
insl
xchg
sub
jns
lcall
insb
in
or
and
filds
pop
push
and
loopne
mov
xor
shlb
rcr
call
or
push
popa
dec
sub
popf
jle
xchg
xchg
add
xlat
and
je
out
push
jecxz
sub
cld
mov
insb
sbb
xor
mov
cvtdq2ps
mov
sub
leave
fistpll
lods
leave
movsl
leave
and
cs
pusha
adc
and
scas
roll
push
xchg
mov
negl
and
stos
add
sbb
sub
fcompl
push
ret
and
cmp
add
mov
inc
mov
adc
clc
jmp
daa
sbb
inc
pushf
flds
xchg
add
push
clc
ret
leave
popf
cld
notl
lds
adc
addl
add
pop
pop
fsubrs
xor
mov
fistps
fcompl
cmp
mov
and
mov
jp
cli
add
lahf
sub
ja
and
fucomi
aas
sahf
ret
cli
enter
scas
int3
test
sbb
loop
cltd
or
imul
pusha
and
mov
not
cmp
outsl
scas
or
add
sbb
mov
and
out
dec
call
sub
and
mov
das
bound
jb
jg
xchg
test
jb
inc
data16
icebp
fs
adc
cmp
sarl
dec
aad
xchg
incb
dec
pushf
mov
mov
fs
cmp
aad
stc
sahf
leave
test
xchg
ss
lahf
out
push
inc
ja
push
rorl
xchg
mov
sbb
popf
mov
aas
mov
sub
add
inc
dec
out
xchg
add
cltd
add
ret
sbb
cs
int
das
xor
das
mov
mov
cld
adc
or
mov
test
mov
inc
in
mov
cli
popw
gs
dec
xchg
loopne
mov
jb
pop
add
or
push
add
add
lea
lea
push
scas
scas
jne
mov
shll
jp
inc
pop
into
sub
xchg
subb
fimull
inc
insb
or
gs
movsl
mov
mov
movsb
leave
push
or
into
je
loopne
xchg
in
jno
pop
enter
mov
stc
sahf
lcall
dec
pop
sarl
add
jl
test
and
push
loopne
stos
pop
jle
out
mov
cmc
rorl
sub
adc
dec
sub
outsb
scas
xor
add
xlat
ds
mov
imul
xorl
ds
and
push
mov
xor
or
push
enter
lret
daa
ret
out
cmpl
cs
xor
push
adc
clc
lea
shrl
mov
js
ds
xchg
cld
or
mov
xor
lahf
rcrb
mov
dec
mov
push
xlat
cmpsb
iret
add
add
lret
xchg
les
clc
stc
or
sub
in
loope
jecxz
add
and
pop
movsl
push
std
leave
repnz
cmp
cltd
inc
adc
adc
rcrb
or
fisubrs
xor
sbb
inc
pop
mov
sub
nop
outsb
mov
pop
repz
xchg
jns
push
std
incl
jecxz
test
call
jg
aaa
aad
ss
sbb
push
cltd
ret
shr
ljmp
xchg
insb
sub
sub
xchg
sar
pop
mov
pop
inc
mov
stos
enter
jmp
jg
push
push
jge
push
mov
imul
imul
sub
pop
xchg
xor
mov
push
popf
add
std
leave
xchg
scas
mov
xor
mov
fs
fimull
inc
lret
jl
ss
outsb
mov
test
int
jno
icebp
jne
cmp
daa
aaa
sub
mov
and
rorb
mov
mov
add
cmp
lock
dec
xchg
jp
js
insl
mov
push
cmc
jp
xchg
lock
sbb
or
mov
mov
jg
and
xchg
mov
lcall
push
or
push
jnp
test
out
ss
pop
xlat
mov
or
fcomps
fldl
jnp
movsl
or
fimuls
lods
test
dec
xchg
pop
movsl
sbb
pop
lret
add
sub
cmp
sbb
rorl
test
xor
sbb
add
jg
cmp
js
pop
adc
inc
push
sbb
add
jl
sub
fnstcw
and
out
pop
pop
daa
ret
mov
cmp
lods
leave
add
in
push
mov
push
dec
jmp
fstl
outsb
call
fiaddl
mov
mov
adc
fbld
sti
ret
pop
sti
out
sbb
in
test
mov
cmp
cld
adcl
and
pop
fwait
das
stos
jbe
hlt
ret
fistl
and
sbb
adcl
xchg
mov
inc
call
fisubrl
sbb
hlt
lahf
cld
mov
xor
int3
stc
imul
push
mov
divb
hlt
push
es
out
and
aaa
push
cmp
push
cli
pop
cmpsl
xchg
in
fimuls
mov
jo
test
push
inc
pop
dec
cmc
repnz
ret
xchg
sub
sub
mov
ss
movsl
jae
push
sub
xchg
shl
aam
pop
fiadds
sub
dec
dec
out
out
push
sub
jbe
dec
test
sbbl
mov
mov
jl
cmp
arpl
stos
jnp
fwait
mov
pop
mov
das
das
mov
xchg
dec
call
lret
ds
inc
adc
cli
jnp
fidivrs
cmp
push
bound
sbb
xlat
jmp
into
insl
xchg
push
mov
xor
lahf
dec
ds
inc
push
mov
pop
sarb
jp
stos
mov
enter
push
lea
jmp
outsl
and
sub
das
cmc
inc
push
adc
out
mov
add
jnp
out
dec
cmc
fcoms
xchg
pop
test
cmp
ss
enter
push
dec
fcos
stos
pusha
and
pop
lods
xchg
fiaddl
sub
cltd
dec
aaa
mov
pushf
fstpt
mov
aaa
and
push
xchg
dec
out
push
movsb
cmp
loopne
aam
daa
dec
jnp
mov
lock
js
dec
jmp
cs
jmp
add
imul
jmp
push
pusha
fsubr
sbb
jle
loopne
or
dec
inc
xchg
and
repz
jmp
push
mov
int3
je
data16
mov
sub
mov
dec
fs
lcall
mov
inc
stos
jne
jbe
mov
loopne
cmc
pop
fldl
dec
cld
xor
xchg
ret
jg
movsl
sub
jbe
cld
mov
or
repnz
or
popa
aaa
dec
mov
jecxz
das
je
jbe
mov
punpckhbw
cmp
int
daa
cmp
lahf
push
test
lcall
shrl
mov
inc
mov
mov
lods
xchg
insb
sarb
sbb
jbe
mov
sbb
push
sbb
pop
xor
pop
add
dec
mov
sub
xchg
xor
jns
xorl
add
setne
clc
jmp
inc
adc
pusha
jecxz
mov
inc
inc
jg
pop
push
push
jne
xlat
pop
negb
rolb
shrl
push
pop
sarl
fdivrs
sbb
or
dec
sub
out
jnp
lds
fmul
ret
push
scas
xor
pop
push
rcr
lcall
sahf
push
daa
stos
adcl
jno
push
pusha
shlb
fldl2t
outsl
xor
xchg
push
iret
lds
lock
mov
lret
jnp
ret
xchg
dec
push
mov
stc
lods
dec
insb
push
mov
ss
add
orl
push
imull
push
scas
pusha
nop
sub
pop
fisttpl
cmp
movsb
xor
mov
aam
repnz
sub
dec
pextrw
mov
divb
mov
pop
cmpsb
push
ret
jb
inc
jl
imul
push
push
int3
js
jl
int
cmp
test
into
xorl
icebp
dec
pop
add
movsl
ret
cltd
gs
sbb
mov
mov
push
mov
loop
test
call
mov
xchg
jmp
outsb
jg
dec
xchg
cmp
inc
cmc
pop
pusha
cmp
adc
rorl
lahf
fldl
cmp
jl
sub
gs
mov
fimuls
pop
sbb
inc
jb
adc
ss
pusha
in
les
shll
add
aaa
fldt
jnp
xor
xchg
add
popa
cmp
xchg
push
inc
loope
lret
aad
push
call
es
pop
pop
scas
adc
test
scas
cmp
pop
aam
mov
insl
push
les
mov
out
adcb
addb
mov
int
adc
loop
push
daa
jo
rcll
xor
jecxz
imul
or
and
mov
out
cwtl
mov
inc
lds
pop
push
adc
scas
adcb
mov
psignw
ljmp
add
mov
sub
push
loop
mov
ret
imul
fwait
push
lret
movsb
pusha
sahf
call
adc
outsb
add
pop
pop
icebp
pop
movsb
imul
jge
sbb
loop
test
and
les
shr
sbb
sub
int3
dec
inc
lcall
push
mov
xchg
lock
je
loopne
sbb
data16
jg
test
lret
cmc
xchg
mov
or
push
xor
xchg
dec
cmp
add
jmp
imul
push
inc
data16
sbb
repz
mov
cmp
mov
mov
push
and
enter
js
push
or
cmp
and
push
cwtl
xchg
inc
idivl
or
daa
mov
out
push
sbb
andb
push
and
loopne
xor
mov
shlb
jge
pusha
push
mov
scas
adc
mov
cs
scas
fiadds
pushf
shr
push
in
popf
add
push
in
xchg
bound
or
sahf
imul
shrb
cltd
leave
imul
cmc
jp
fs
out
push
test
jge
ja
cmpsl
out
mov
daa
sub
test
push
xchg
enter
sbb
packsswb
sub
data16
mov
lods
dec
sbb
rorb
and
mov
ja
and
in
lods
push
mov
test
dec
nop
cld
add
mov
das
and
ds
xchg
clc
xchg
xchg
adc
pushf
ret
jns
or
cwtl
push
xchg
mov
adc
sub
xchg
stc
ljmp
inc
xor
add
jbe
loopne
out
or
push
xor
push
or
cld
repnz
pop
jp
inc
mov
mov
scas
loope
mov
loope
mov
inc
lahf
push
cltd
daa
sbb
jmp
mov
les
dec
cmpsb
cwtl
cmp
or
sub
movsl
loopne
cmp
addb
mov
push
pop
sub
popf
stc
out
cltd
movsl
mov
add
fstpl
push
cwtl
mov
jle
sub
call
fadds
dec
mov
and
lock
repz
repnz
mov
and
out
addb
cli
cmpsl
mov
bound
int3
pop
js
and
or
mov
test
ret
outsb
lods
mov
clc
rcrl
and
adc
mov
xor
pop
dec
lock
add
scas
xchg
jb
mov
xchg
xchg
decl
shrl
pop
xor
les
mov
sbbl
pop
and
fsubrp
jp
out
jmp
adc
cmpsb
jne
sub
lcall
cli
dec
mull
clc
sti
daa
jp
fcompl
out
xor
test
or
test
sub
mov
fucomip
mov
cmp
pop
addr16
cltd
mov
push
in
stos
loop
mov
mov
out
mov
shrl
jge
and
adc
stos
push
mov
mov
iret
das
pop
ret
rcrb
push
adc
scas
arpl
ja
and
jecxz
cmpsb
xchg
popa
pop
std
ret
mov
cli
iret
pushf
cmp
mov
fsubrl
push
jne
out
dec
fs
xchg
adc
sub
add
cmp
xchg
sub
and
pop
loopne
jg
sub
vmwrite
or
xchg
xor
ret
xorl
cmp
inc
stos
in
sub
cld
mov
imul
dec
xor
inc
repnz
mov
xchg
dec
xor
inc
scas
add
insb
mov
in
mov
repz
jmp
and
push
add
push
inc
stos
jo
lds
lods
xchg
mov
pop
xor
cmpsb
sub
mov
adc
sbb
xor
sub
es
sarb
xor
scas
fisttpl
mov
lahf
mov
out
addl
cld
mov
mov
or
cwtl
cmp
call
fisubs
jne
lods
xor
jle
lea
push
lret
ret
aaa
mov
mov
shll
mov
lods
aad
addl
lods
mov
mov
xchg
mov
cmp
xlat
fidivrl
jns
call
cmp
cmc
xor
icebp
stc
daa
pushf
insb
sbb
cwtl
cld
cld
dec
fimuls
sarb
aas
sub
sbb
mov
lcall
mov
stc
stc
mov
cli
xor
push
pop
arpl
jl
or
jmp
pop
cmp
push
jl
mov
pop
aas
inc
sbb
sbb
sub
roll
shrl
into
xchg
jle
dec
shr
inc
dec
popf
cltd
lret
movsb
data16
xor
mov
or
push
loopne
pop
mov
pusha
es
and
in
in
push
pop
dec
jne
sbb
lods
and
rep
pop
cltd
jl
lds
std
arpl
sub
lods
cmp
push
aam
jg
pushf
push
imul
mov
out
insb
mov
sahf
mov
int3
mov
push
aaa
pop
adc
mull
jp
cld
adc
pop
insb
sbb
orb
pop
and
cmc
mov
inc
sarl
gs
push
sysexit
xor
scas
test
xchg
dec
rcll
cld
sbb
icebp
daa
cmp
xchg
jns
jbe
test
xor
push
les
mov
jmp
sbb
or
pop
subl
fadd
push
mov
cmpsb
fwait
cltd
lret
fisttps
enter
lds
scas
mov
and
dec
pop
daa
call
ficoms
mov
pop
out
push
out
jl
adc
or
jo
mov
sub
mov
loop
into
dec
mov
mov
rorb
sbb
push
dec
add
or
dec
out
jg
popa
lock
inc
mov
pop
test
or
mov
jmp
test
test
gs
dec
ss
mov
jmp
gs
mov
shrl
cld
cmp
sahf
pop
jge
push
outsb
hlt
std
js
xchg
js
bnd
mov
pusha
cmpsb
cmp
xor
shlb
int3
jb
mov
dec
sub
sub
imul
or
icebp
mov
add
sub
shr
xchg
jle
hlt
jmp
scas
rorl
ffree
add
or
or
and
arpl
int
je
pop
and
mov
cmp
mov
jmp
and
ja
fcmovne
gs
pop
rolb
jge
cmp
or
test
and
add
mov
in
lcall
jno
in
stos
int3
jge
inc
add
mov
mov
dec
pop
movl
rorb
aas
adc
cmc
xor
pop
gs
fadd
aaa
orl
mov
pop
mov
iret
jb
popa
add
dec
repnz
adc
mov
mov
mov
fcmovnu
mov
or
jo
cmp
lahf
cmp
outsl
rorb
shlb
or
jo
push
xchg
or
stc
int3
lret
lret
es
outsl
dec
filds
or
lea
ret
dec
mov
mov
int3
mov
mov
adc
es
int3
add
mov
jae
mov
push
bound
inc
popf
nop
xchg
push
mov
sbb
mov
bound
xor
mov
mov
outsb
ficoms
in
je
dec
and
jno
jg
jp
fstl
mov
aam
fdivr
jne
cmp
leave
sbb
xor
repz
stos
cmp
push
mov
xlat
or
aas
testb
mov
inc
test
enter
movsl
add
add
inc
sbb
cmp
aaa
fadds
scas
sbb
in
fmull
fcmovbe
nop
lods
outsb
iret
out
sub
fsubl
imull
incb
shl
jl
cmp
addr16
lods
inc
push
imul
js
push
xor
mov
sub
cltd
je
bound
fistpl
sbb
jae
shrl
test
sub
or
jle
cmp
or
out
mov
enter
adc
test
cmp
cmp
push
xor
sub
sub
mov
xchg
inc
dec
fstpt
pop
pop
jo
das
ret
pop
cmp
jl
sub
test
mov
loopne
lods
adc
rcll
shrw
and
imul
xchg
xchg
add
scas
sbb
jg
jnp
imul
mov
pushf
mov
sub
inc
pop
cmpsb
mov
push
xor
xor
pop
into
pusha
mov
adc
pop
adc
jmp
enter
or
push
div
adc
daa
push
insl
inc
mov
jne
jmp
cwtl
out
pop
pushf
dec
scas
es
xchg
cld
xor
or
aas
fcmovbe
out
pop
jecxz
inc
pop
pop
xchg
imul
cmp
popf
xchg
aas
jmp
mov
push
mov
inc
pop
movsl
xchg
int3
stos
dec
mov
stos
adc
je
jmp
or
and
or
fistpl
ss
pop
lods
nop
mov
je
jp
mov
jecxz
and
test
push
outsl
cmpsb
scas
lret
jno
add
mov
xchg
rcll
sbb
mov
loop
arpl
sbb
push
lcall
clc
popa
cs
jp
cltd
in
mov
mov
fnstsw
mov
scas
test
push
jmp
sub
dec
lahf
insb
fidivs
loop
hlt
outsl
mov
ljmp
dec
insb
jb
pop
fidivrs
mov
pushf
mov
sarb
lea
sub
add
lods
adc
shrb
or
clc
jp
cmp
mov
shl
mov
test
and
inc
or
push
mov
fistpll
loop
sbb
lea
push
call
test
cmp
xchg
add
pushf
insb
pusha
push
movsl
enter
mov
fistps
xchg
addb
test
es
lods
out
pop
ret
xchg
adc
pop
cltd
cmc
shr
xor
xlat
lods
push
enter
outsb
clc
cmc
add
enter
daa
ljmp
push
mov
mov
cmpb
xor
lret
adc
mov
ret
leave
xor
inc
outsl
mov
adc
cli
aam
jg
scas
in
pushf
add
movsb
sbb
sbb
daa
stos
loopne
xchg
sbb
out
fwait
push
rcl
push
sub
mov
les
adc
sub
cs
or
nop
je
sub
push
out
adc
sbb
jb
gs
jno
xchg
and
ret
outsl
sbb
hlt
into
inc
dec
cmp
in
adc
mov
dec
int3
imul
mov
aaa
out
gs
jl
out
mov
or
and
jnp
or
xor
loope
sub
and
push
shlb
pop
loopne
mov
insb
sub
lock
iret
shl
mov
in
mov
push
inc
pop
pop
mov
jbe
lcall
lock
sub
cmp
and
ror
mov
dec
xor
aaa
dec
adc
ja
fs
sbb
add
fcmovne
mov
push
pop
mov
and
jae
aad
xchg
or
push
jno
rorb
adc
fidivs
repz
out
inc
arpl
push
mov
jbe
pop
pop
divb
jl
in
or
push
lock
popf
pop
push
xor
faddp
outsl
popa
sti
pop
decb
cltd
enter
adc
int
inc
dec
mov
cmpsl
mov
jae
or
cmp
ja
cmpsb
and
imul
cmp
pushf
or
ret
mov
jle
adc
mov
push
std
cmp
mov
xlat
jns
mov
ret
sbb
insl
sub
ret
push
lods
mov
push
push
pushf
pop
pop
and
shll
pushf
js
loopne
mov
xchg
test
ja
mov
mov
call
mov
jbe
xchg
loope
dec
pop
push
inc
mov
popf
mov
stos
and
push
mov
out
jp
ja
add
int3
push
jg
movsb
test
out
insl
lcall
mov
jmp
mov
pop
xchg
adc
shlb
lret
inc
dec
and
les
pop
orl
outsb
inc
sbb
pusha
aas
pop
sbb
and
in
bound
pop
adc
sub
mov
jnp
dec
or
ret
mov
cmp
mov
cmp
xchg
subb
es
subb
add
mov
incb
popf
ret
es
mov
dec
insl
mov
dec
insb
jl
cwtl
fcmovnb
daa
and
push
stos
test
popf
pop
movsl
xor
add
test
ljmp
lock
jnp
jne
inc
push
mov
ljmp
lock
pop
adc
sub
sub
xchg
andb
mov
and
je
dec
xor
pop
add
or
jl
jo
jnp
and
sub
stos
int
loope
push
sub
dec
dec
mov
adc
cmp
xchg
fnstcw
test
scas
pop
pop
xor
and
mov
mov
mov
dec
sbb
test
inc
fcmovnbe
aaa
sbb
sub
imul
xor
stc
mov
test
data16
sti
shl
into
cmp
in
leave
jecxz
xchg
rcrb
xchg
fcompl
std
stos
pop
push
mov
jo
repz
out
addr16
mov
gs
inc
mov
js
and
int3
nop
sti
adc
movsb
inc
mov
and
and
push
push
mov
jno
ja
test
jl
ja
stos
nop
pop
push
xlat
dec
and
imul
adc
es
arpl
fscale
mov
jnp
rclb
jo
push
cmp
xchg
push
dec
int3
sub
and
adc
jnp
or
insl
pusha
stos
adc
mov
int
jg
out
or
inc
mov
inc
mov
clc
ss
pop
ja
xor
stc
jo
cmp
shlb
cmp
repz
push
sub
xchg
mov
in
rorl
jbe
xor
push
mov
mov
push
mov
or
aad
lds
aam
mov
lahf
loop
mov
add
sbb
ss
or
dec
aad
fiadds
cmp
movsl
popf
mov
and
or
or
and
int3
testb
repz
adc
dec
ljmp
cwtl
cmp
les
sti
cltd
or
call
pop
inc
mov
ficoms
push
cltd
or
cmp
jns
cmc
adcb
push
push
sbb
jnp
mov
cmpb
sbb
cmpsb
loop
cmp
push
incb
sbb
xor
sub
mov
push
xchg
icebp
mov
arpl
shll
fists
sbb
xor
adc
jl
out
lcall
xor
lock
jno
inc
sarl
lahf
movsb
mov
cwtl
shl
xchg
mov
subl
inc
push
sti
leave
inc
lds
xchg
pushf
pop
mov
sub
or
and
cmp
jmp
adcl
or
fnsave
stos
sahf
hlt
ss
mov
jmp
cmpsb
xor
idiv
data16
fwait
inc
js
int
or
test
idivl
andb
hlt
sbb
pop
inc
push
push
sbb
imul
xchg
pop
cs
mov
mov
lcall
push
ljmp
fwait
lahf
mov
dec
xorl
inc
pushf
in
xor
pop
test
or
mov
imul
dec
js
jle
add
insb
repz
loope
jg
inc
lods
jbe
out
in
inc
dec
pop
test
mov
jl
call
adc
push
push
icebp
mov
adcl
lock
daa
push
rcll
and
aad
mov
negl
jge
in
stc
dec
in
ljmp
xor
or
push
rcll
xor
rcrb
pop
lock
icebp
sub
and
sbb
into
pop
mov
or
or
inc
aaa
sbb
sbb
inc
cld
pushf
adc
mov
jo
inc
icebp
cwtl
ss
xor
xor
cmp
inc
or
cmp
in
add
cmp
shrl
into
mov
or
dec
fcmovnbe
jbe
sub
push
pop
mov
cmc
or
xor
dec
mov
push
sub
aas
xor
xchg
sbb
xor
add
add
arpl
lea
scas
or
jecxz
repnz
popa
pusha
loopne
jp
mov
cmp
cld
sub
add
out
fsubr
cwtl
mov
cmp
test
ja
mov
scas
stos
adc
sbb
outsl
jle
ja
aad
sub
lds
and
adc
inc
xchg
out
daa
repz
push
mov
mov
adc
cmp
cmpsb
out
fwait
adc
push
mov
push
sbbl
cld
add
leave
push
pop
ret
or
pop
xchg
xor
loopne
cmp
dec
xor
or
nop
push
jg
ja
dec
sbb
push
sub
cltd
cmp
aam
adcl
add
or
xchg
std
mov
mov
pop
push
add
out
add
xchg
sub
mov
or
int
push
addr16
sbb
js
fcmovnbe
stc
jmp
inc
es
idiv
into
jmp
mov
inc
push
jo
inc
jnp
cmp
adc
shrl
loope
mov
push
mov
cwtl
lahf
pop
sarl
sti
icebp
mov
repz
jl
mov
lds
push
outsl
andb
sbb
push
push
stos
mov
dec
xchg
negb
mov
xchg
xor
mov
call
cli
fisttpll
mov
movsl
xor
incb
psubd
out
xchg
dec
mov
dec
mov
mov
idivl
inc
ljmp
inc
sub
xchg
xchg
ja
cmpb
adc
sub
inc
mov
xchg
jbe
fmull
dec
mov
mov
inc
enter
or
sahf
cld
bound
clc
gs
push
xchg
mov
sbb
xchg
es
loope
sbb
jmp
pop
and
xchg
fldl
and
gs
and
pushf
lods
mov
leave
aam
jb
pop
cli
lock
mov
dec
in
and
xchg
jns
cmp
sbb
insl
daa
pushl
rcll
sahf
push
dec
in
xchg
inc
pop
sbb
dec
jns
lock
leave
clc
loope
pop
cli
and
jnp
fimuls
ret
and
inc
rclb
mov
cmp
mov
inc
jns
int
fsts
push
sti
bound
cmp
mov
mov
push
or
iret
pop
aam
ljmp
add
cmp
dec
jae
pop
ror
cmove
ret
xor
jle
or
xor
ret
add
imul
jns
sub
aad
mov
inc
xchg
dec
shlb
push
test
or
scas
xchg
nop
and
repz
xchg
negb
lock
sub
ljmp
and
lahf
inc
js
xor
bound
bound
push
roll
fcmovbe
fadds
je
rcll
popa
inc
das
fistl
imul
cmp
iret
and
mov
decl
adc
push
xor
mov
out
loope
sbb
stc
int3
cld
xchg
dec
sbb
out
dec
push
push
jge
jae
jle
inc
testl
aas
sbb
shl
push
jno
cmpb
mov
add
sbb
xor
xor
push
lret
arpl
mov
imul
movsb
or
dec
dec
adc
out
repnz
addr16
sub
fwait
sbb
mov
js
popf
xor
pop
jle
push
jle
mov
insl
or
inc
cmpsb
popf
push
push
lahf
sub
pop
or
add
daa
cmc
push
sbb
test
and
nop
mov
repz
adc
iret
xchg
test
push
pop
push
sbb
cld
outsl
movsl
mov
fdivs
xorb
jmp
imul
in
stos
sarb
stos
movsl
inc
xor
add
out
jmp
jb
ret
int
pushf
out
jecxz
arpl
inc
enter
cld
cmp
pop
push
and
fwait
movsl
or
sbb
xchg
stc
xchg
mov
imul
lock
std
or
lea
cli
cmpsb
fmull
mov
test
push
hlt
mov
arpl
jge
push
pop
xor
cmp
ss
mov
lea
xor
fadd
mov
rep
mov
dec
or
push
xchg
outsl
push
jmp
mov
imul
insb
mov
mov
lods
jo
or
xor
or
call
ret
mov
cld
pop
mov
iret
scas
adc
mov
jbe
xchg
cmpsl
ja
mov
pop
rcr
in
pop
popa
icebp
int
pop
cmp
push
test
movsb
sub
repz
out
pop
or
inc
mov
cmp
aaa
or
fimull
xor
mov
jle
je
sbb
iret
shr
aaa
jb
mov
fadd
rcrb
add
cmp
dec
ss
movsb
pop
subl
cmp
idiv
jmp
rcr
out
into
mov
dec
iret
leave
push
jae
mov
out
cli
jp
cmp
adc
aam
icebp
insb
lcall
sbb
sub
je
fidivrl
es
mov
aad
mov
call
push
out
push
mov
loope
lahf
out
dec
ret
fcomi
pop
mov
mov
aam
gs
in
test
ss
mov
mov
test
cmpb
or
scas
addr16
cmp
stos
aas
scas
xor
and
dec
ret
adc
mov
or
mov
ljmp
fcomi
or
jae
xchg
pop
mov
mov
mov
cmp
dec
in
push
inc
icebp
mov
int3
xchg
ljmp
shlb
pop
mov
push
and
aad
xor
push
test
xor
pop
enter
inc
dec
shll
insb
shrb
pop
scas
popa
and
out
xchg
and
pop
in
jmp
aas
aad
mov
push
jecxz
xchg
loope
sbb
pop
or
stc
jecxz
jmp
xchg
das
xor
call
cmp
push
popf
insl
lret
dec
pop
test
mov
loope
mov
sub
adc
test
aam
loop
pop
inc
pop
ds
in
xchg
sbb
jo
sar
mov
int3
sub
js
add
sub
xlat
dec
cs
lret
mov
sahf
out
cwtl
push
push
push
rcl
rcr
mov
mov
imulb
cltd
lock
xor
pop
xchg
js
stc
mov
jl
ret
cs
in
xor
xor
and
push
push
xor
push
fisttpl
mov
dec
add
mov
pop
je
ret
cmc
xor
mov
lret
cmp
push
lods
ljmp
dec
add
cmp
test
pop
nop
out
sbb
adc
in
mov
cwtl
movsbl
dec
aas
sbb
in
mov
or
pop
inc
out
hlt
mov
dec
aas
andl
stos
cltd
mov
fs
data16
leave
xchg
sub
cmpsb
imul
loope
jne
jbe
sub
out
scas
icebp
ret
mov
mov
jne
hlt
inc
sbb
shlb
imul
imul
xchg
loope
push
hlt
cli
fcompl
fisubrs
and
pop
repnz
pop
xor
je
mov
test
mov
jbe
or
jo
lea
aaa
adc
mov
fld
dec
xor
cmc
push
daa
xor
loopne
pop
daa
sub
cld
or
clc
sahf
insl
subb
push
xchg
adc
mov
and
rcll
jbe
xchg
shrb
lahf
jp
sbb
popa
out
xchg
or
rcrb
pop
cmpsb
repnz
movsl
cli
out
test
jg
push
xchg
xchg
pop
mov
xlat
pop
test
adc
xchg
aad
adc
data16
cltd
sahf
pusha
inc
dec
gs
sahf
cmp
cmp
lret
jo
xchg
fdivs
and
and
arpl
dec
push
adc
les
push
mov
and
mov
pop
push
ljmp
faddl
and
mov
pop
repnz
pop
adc
jg
adc
dec
loop
imul
stc
sarb
jge
dec
outsb
adc
dec
mov
popa
sti
dec
andb
roll
icebp
repz
aaa
adc
aaa
jb
pop
test
jo
lock
ja
or
stc
and
cmp
and
cmpsb
icebp
mov
jb
jmp
and
rclb
decl
jne
jbe
in
orl
cmp
sub
hlt
inc
daa
mov
hlt
and
test
push
pusha
stc
add
push
xlat
xchg
add
ds
iret
aad
jge
inc
pop
mov
pop
out
scas
outsl
fs
push
cli
jae
cs
pop
mov
xor
pop
mov
shll
add
dec
lahf
dec
int
repnz
in
iret
push
dec
fdiv
pop
stc
mulb
xlat
or
dec
mov
or
xor
inc
push
push
add
cltd
dec
repz
push
movsl
jmp
movhps
int
in
mov
enter
mov
fildl
movsb
rcl
inc
outsb
push
aad
mov
inc
das
std
mov
lods
adc
or
popa
sub
dec
rorb
es
push
cmp
leave
outsl
incl
rcr
ds
adc
sti
xor
andb
dec
ja
mul
movsb
pop
inc
fisubl
xor
add
pop
out
sbb
lds
je
xor
mov
cmc
push
dec
jl
xor
push
addb
lcall
movsb
and
stos
sbb
inc
xor
sub
sbb
add
inc
xor
in
pop
sbb
gs
inc
out
mov
sahf
das
stc
xchg
sub
pop
test
es
imul
add
push
xchg
leave
pop
pop
cld
ror
mov
cmp
mov
pop
repz
inc
rorl
xor
mov
xor
outsl
xchg
xor
inc
sahf
mov
lods
cmp
or
inc
cmpb
xor
daa
cli
popa
inc
jge
pop
mov
sub
imul
lret
ret
dec
jbe
mov
sbb
fcoms
push
dec
clc
cli
xor
mov
fsubs
xchg
jl
mov
aaa
loop
adc
jno
cmc
add
jmp
ret
adc
gs
pop
add
inc
and
inc
jnp
test
in
out
dec
js
inc
adc
shr
je
lahf
sub
int
or
xchg
mov
dec
movsl
stc
cmc
jmp
cmp
jg
pop
xchg
lea
mov
cwtl
pusha
dec
xor
add
out
out
mov
movsl
sbb
lcall
repz
add
nop
push
mov
pop
pop
cwtl
jmp
mov
insl
stc
inc
jp
and
dec
push
xor
jge
fstl
cs
imul
lret
arpl
inc
jne
les
jmp
pop
pop
pop
enter
enter
shlb
mul
insb
test
push
jmp
cltd
mov
je
and
stc
lds
push
inc
out
insl
js
mov
mov
cmp
addb
pop
test
lea
movsb
sarb
popf
jno
mov
hlt
repnz
lds
sbb
and
adc
movsb
mov
test
mov
mov
imul
sarb
add
xchg
push
mov
cwtl
sub
mov
jno
scas
xchg
or
cmc
and
out
adc
pop
lock
mov
push
decb
sbb
add
cmp
adc
and
test
and
xchg
test
adc
lcall
xor
mov
dec
scas
js
adc
mov
dec
loopne
mov
jns
mov
inc
push
fildl
das
or
jae
mov
int3
pop
out
mov
pop
dec
cmp
cli
sarl
clc
out
fdivrs
xor
lahf
jl
lock
jmp
jae
in
adc
xor
sub
mov
inc
dec
xchg
mov
iret
mov
dec
adc
insb
aas
jmp
jbe
mov
sbb
inc
dec
xor
popa
xor
fiadds
stc
push
lods
jno
mov
mov
divl
shrb
repz
mov
and
pop
mov
cmp
loop
scas
sub
inc
ja
cmpsl
mov
jns
mov
dec
repz
and
adc
mov
pop
xor
xchg
pop
xor
insl
scas
movsb
insb
fistpll
fucomp
mov
loope
mov
cmp
cmp
fcomi
jecxz
xlat
ficoml
pop
pop
stc
aaa
lahf
xchg
test
in
enter
repz
daa
into
mov
out
xchg
sbb
and
daa
stc
and
mov
mov
pop
push
push
dec
movl
sarl
lods
aaa
stos
jg
lock
xor
movsl
test
sbb
pop
jne
data16
sti
jne
ds
mov
mov
xor
data16
mov
cld
aam
sbb
shr
or
mov
ljmp
jo
jmp
or
ljmp
outsl
add
pop
out
test
insb
call
dec
ljmp
jmp
cmp
jnp
xchg
mov
push
ret
ret
fiaddl
mov
hlt
shlb
inc
loopne
add
insl
mov
or
mov
cmp
push
ss
shlb
jl
fbstp
mov
pop
xor
jb
push
adc
shlb
scas
scas
cmpsb
cld
xorb
sbb
insl
scas
pop
dec
jl
sbb
xor
fsubrs
out
push
dec
fbstp
xchg
adc
cltd
sub
sahf
and
xor
and
pop
jnp
xchg
stos
test
xchg
pop
stos
out
shl
and
xor
pop
loop
dec
and
ret
mov
or
mov
out
pop
xor
jne
or
mov
repnz
mov
hlt
out
vpaddusb
cltd
int3
data16
stc
pop
call
call
das
or
pop
jno
dec
sbb
cmp
and
test
cmp
mov
inc
sub
shll
mov
lcall
aas
sbb
and
sub
xchg
stos
xchg
jno
sarl
pushf
or
inc
mov
cltd
mov
loope
push
ja
stc
rcrb
imul
inc
xor
or
out
push
and
xchg
push
mov
mov
xchg
ljmp
notl
ljmp
pop
popa
mulb
pminub
pushf
shrl
jl
and
sub
inc
mov
and
lret
add
ret
insl
xor
sub
test
fistl
mov
std
and
ficomps
jbe
cmp
rol
push
clc
xlat
inc
fistpl
add
adc
mov
pop
imul
dec
sahf
lcall
jge
jno
aad
or
adc
fcomi
push
ficoml
or
mov
sti
in
das
or
pop
fnstsw
mov
xchg
cmpsb
call
jl
xchg
add
ja
movsb
xchg
sti
sti
aas
loope
aad
aas
fisttpl
cmp
lods
scas
mov
mov
cmp
mov
dec
ret
clc
sti
inc
and
and
jne
adc
push
fdivr
xchg
sbb
es
add
and
jg
or
add
test
mov
inc
sbb
mov
jge
push
sbb
sarl
lgs
push
fistps
dec
stc
scas
roll
sub
jnp
mov
pushf
jp
mov
rolb
jbe
jb
or
cmp
out
mov
xchg
cmp
das
icebp
popa
int
lea
repz
mov
mov
iret
cmc
cmp
inc
fimuls
lea
pop
and
pushf
dec
xlat
pop
cmp
push
out
push
pop
je
scas
sub
std
adc
xchg
adcl
subb
xor
inc
push
insb
mov
incb
inc
xchg
fidivrs
or
clc
dec
adc
mov
sbb
out
or
inc
and
dec
sbb
jge
cwtl
pushf
imull
adc
aad
inc
push
jg
int
addr16
sbb
lea
adc
dec
dec
sbb
dec
jne
pushf
hlt
or
sbb
jnp
aad
movsb
add
divb
mov
inc
jmp
jecxz
icebp
ja
dec
ret
adc
push
daa
jbe
lods
stc
dec
or
dec
push
adc
insb
push
data16
cmp
xlat
fisubs
mov
mov
jge
pop
xchg
in
in
movsb
sarb
aad
sub
xchg
in
cmp
dec
roll
in
loope
rcrb
popa
sar
repnz
lret
jb
push
jmp
movsb
lret
leave
repnz
push
pusha
sbb
sbb
push
push
mov
into
jo
fdiv
jecxz
xchg
out
mov
xchg
cmc
pop
push
inc
pop
jle
mov
mov
fadd
jno
jp
hlt
or
sarl
test
loopne
xchg
arpl
dec
pop
cmp
aaa
aas
lods
pop
icebp
repnz
shr
mov
cwtl
out
and
or
call
movsl
add
push
mov
xchg
xchg
or
test
scas
arpl
bound
call
in
adc
lock
sub
xchg
or
add
pop
pop
xor
push
lds
sbb
outsb
shr
xchg
dec
into
subl
pop
push
sbb
sahf
out
adc
int
loopne
inc
stc
sti
lret
rdtsc
adc
loopne
and
xchg
icebp
daa
ja
pop
int3
mov
mov
leave
mov
cmp
lock
adc
inc
xchg
inc
sub
movsl
dec
bound
cmpsl
dec
cmp
movsl
pop
adc
push
pusha
je
aam
mov
sub
les
mov
xor
sbb
dec
adc
aaa
cld
cmp
xor
gs
jmp
jmp
cs
xchg
and
or
xlat
pushf
mov
cltd
jno
test
inc
es
mov
fdivrs
cltd
stos
sub
cs
pop
mov
sub
mov
jnp
jl
sbb
test
out
in
dec
mov
lcall
gs
dec
stos
fmuls
mov
and
orb
iret
loopne
xchg
sbb
cltd
scas
mov
imul
pop
imul
jg
popa
xchg
or
and
mov
inc
gs
mov
push
sub
jns
sahf
push
imul
xchg
pop
sub
cmp
jne
sub
pop
pop
xchg
adc
xchg
inc
ret
xorl
in
rclb
int
mov
xchg
movsb
aaa
push
or
popf
xor
enter
int3
sahf
rorb
or
repz
adc
sarb
pop
cmpsl
cmc
cmp
pop
xor
movsl
aas
pop
faddl
je
mov
cmpsl
add
or
and
in
repnz
gs
or
mov
lcall
xor
dec
pop
pushf
sbb
iret
rcl
lahf
stos
xchg
lahf
xor
cmp
xorl
fwait
push
fisubrl
test
in
jg
scas
push
push
lret
imul
inc
or
icebp
cmp
cmp
xchg
les
jnp
pop
fs
and
sarl
push
sub
cmp
mov
xor
mov
xor
call
fwait
pop
mov
jno
js
cli
mov
pushf
dec
cltd
mov
push
pushw
cmc
mov
orb
nop
pop
imul
popf
out
mov
mov
jmp
gs
aas
sarl
shr
sbb
sub
je
fwait
mov
scas
aaa
mov
cmp
and
and
lods
cs
daa
adc
and
jge
inc
or
js
fwait
sbb
inc
adcl
inc
dec
inc
ljmp
mov
inc
sub
ja
dec
sbb
jl
and
les
xor
adc
int
insb
mov
in
and
jecxz
sub
sbb
aas
mov
mov
xchg
or
gs
sbb
fadds
sub
xchg
fimuls
sbb
sbb
shl
xor
mov
sub
xchg
cmp
sub
nop
push
nop
add
push
nop
popf
es
jmp
push
inc
add
and
movsb
push
mov
mov
outsb
jge
psubd
xchg
and
cmp
testb
or
adc
divb
xor
mov
movups
andb
mov
fistps
loopne
mov
lcall
mov
and
into
mov
push
addr16
and
cwtl
mov
dec
sub
loope
sub
sarl
lds
aam
mov
lods
mov
dec
call
fdivs
cs
das
sti
cmpsl
loope
dec
sub
es
ljmp
dec
and
jnp
test
cmpsl
test
out
mov
or
or
sbb
push
notb
rol
sub
daa
xor
cs
int3
lods
dec
xchg
add
jno
push
mov
jnp
jo
rorb
lahf
aad
push
rorl
xor
stos
jne
les
movsb
pop
pop
bound
push
pushf
or
aaa
mov
call
rclb
je
fwait
mov
and
loope
adc
out
adc
jge
iret
mov
xor
std
sbb
sti
pop
and
pop
lcall
mov
and
mov
xor
or
mov
nop
inc
cmp
and
ja
dec
mov
in
or
or
push
dec
int
loope
mov
xor
xchg
xlat
fisubrl
push
adcb
imul
enter
jmp
jp
push
shr
in
mov
into
mov
jbe
outsl
sbb
imul
pop
jge
mov
loop
pushf
movsb
push
cwtl
fildll
arpl
call
xchg
dec
insb
mov
loopne
mov
sbb
jbe
push
pop
in
dec
loop
or
jle
arpl
outsl
les
mov
testl
sub
aas
popl
popa
pop
inc
lods
clc
mov
pop
icebp
add
inc
push
jle
jo
insl
pop
or
mov
pop
data16
sarl
xlat
pop
out
fidivl
insb
jle
inc
mov
dec
notb
pop
outsb
out
loopne
jo
scas
xchg
fwait
loope
cmp
jb
jb
sub
push
cmp
jl
inc
or
mov
push
or
mov
fidivrs
inc
xchg
das
mov
xor
lret
andl
mov
mov
push
fcoms
outsl
and
sub
jecxz
cmc
aas
dec
cmp
mov
mov
outsl
lods
loopne
insb
fildll
push
dec
and
iret
jl
push
xchg
cli
stc
cmp
mov
stos
lcall
sub
cli
dec
pop
add
fstpl
push
aaa
enter
adcb
jmp
or
popa
ficoml
cld
push
pushl
test
lea
incl
mov
cmp
adc
cmc
mov
jno
jnp
lods
testl
sti
pushf
stc
push
pop
out
aam
xor
mov
inc
dec
fimuls
or
mov
pop
mov
fsubs
inc
add
jecxz
ficomps
std
pop
cmpsb
mov
xor
ds
jle
xchg
and
scas
pop
or
pop
fistl
scas
and
mov
in
pusha
or
jge
cmpl
push
mov
mov
inc
adc
dec
xor
lds
xor
sbbl
xorb
sar
pop
xchg
mov
xor
add
jle
imul
adc
or
or
cli
sbb
div
xor
cmc
jmp
lahf
outsb
jle
sub
movsl
cltd
mov
mov
xor
test
in
es
sub
pop
push
mov
daa
xchg
pushf
cld
sbb
lret
movsl
mov
das
fnstenv
fdivrl
push
rcll
jnp
cmpb
pusha
mov
push
leave
pop
je
mov
bound
bound
mov
add
xchg
push
cmp
loopne
fadd
cmp
xchg
fdivrs
ret
inc
cmpsl
pop
cmp
in
mov
xchg
imul
cmc
push
sbbl
cld
fmull
jbe
sbb
xchg
mov
movsb
sahf
call
sub
push
cmc
mov
or
xchg
aas
adcl
int3
dec
lods
js
mov
push
inc
mov
sbb
sbb
sub
repnz
sbb
mov
or
leave
push
je
dec
les
das
orb
repz
mov
xchg
jge
sub
jge
jno
push
test
inc
adcb
loopne
or
push
sarb
arpl
fdivrs
adc
ss
incl
lods
insl
mov
repz
or
cmp
lods
js
ret
mov
push
pop
inc
dec
test
adc
lret
cli
sarb
ja
inc
fbstp
jge
sbb
jae
hlt
sub
sub
lock
fcmovu
adc
jb
push
mov
and
inc
xor
aad
xchg
lret
enter
mov
cmc
fimuls
sbb
jno
jle
push
pop
popa
insb
mov
sarl
in
mov
pop
jno
lcall
mov
call
sti
xchg
jecxz
push
mov
inc
mov
pusha
loop
mov
nop
mov
aas
loop
out
scas
imul
sbb
add
repnz
xchg
shlb
rolb
mov
jge
int
mov
or
mov
or
mov
mov
sub
cmc
inc
fdivp
lods
aas
pop
cmpsb
jnp
pop
mov
and
cs
push
xchg
or
xor
movntq
and
mov
movsl
nop
jbe
dec
jge
mov
sbb
repz
test
test
jne
out
ja
loope
loope
add
imul
fdivs
push
pushf
cli
aaa
sbb
and
ja
int3
je
push
or
pop
mov
xor
hlt
mov
pop
in
mov
sub
enter
lea
adcb
testl
xchg
cmp
add
movsl
cmp
ljmp
sbb
dec
lea
hlt
inc
push
aam
cmp
decb
jb
lcall
mov
mov
lods
mov
push
inc
push
push
adc
mov
cmpsl
jge
mov
adc
call
inc
subb
lock
rcll
jnp
or
out
mov
adc
mov
outsl
dec
xchg
push
cmp
js
push
pusha
popa
and
cmc
xchg
fistpll
push
mov
mov
xchg
sti
mov
pop
inc
push
fisttpl
jge
ret
imulb
adc
or
xchg
sbb
fmull
push
mov
cld
out
push
int3
je
out
mov
mov
es
pop
mov
xchg
nop
mov
outsb
or
cmp
test
fdivr
jp
rclb
push
fwait
lret
add
das
inc
jmp
mov
movsb
mov
pusha
lret
mov
xchg
adc
xor
imul
sub
xchg
or
cltd
jl
or
or
rorl
rclb
outsl
xchg
arpl
insb
xchg
mov
movsl
adcl
fdivs
pop
stos
jge
dec
and
pop
push
stos
mov
in
add
adc
mov
pop
add
mov
sbb
std
das
add
mov
in
repz
pusha
das
xchg
sbb
dec
or
cmp
pop
or
aas
fwait
pop
mov
xor
aas
xor
cli
mov
or
loope
int
pop
nop
test
or
sbb
jl
lea
addl
mov
sub
sub
jp
out
aas
cmp
push
test
in
sub
nop
mov
mov
addl
cmp
sahf
enter
or
sub
fdivrs
mov
mov
das
push
pushf
rcrl
add
dec
jge
push
sub
stos
ljmp
mov
cmc
xchg
jno
fstpt
jl
stos
popf
leave
stc
lcall
das
or
sub
out
pop
pushf
ret
das
lcall
jnp
push
push
adc
cmp
cmpsl
mov
cmpsl
or
pop
cld
bound
push
int
hlt
stos
lea
jbe
loope
xor
or
mov
imul
push
shrl
sbb
outsb
iret
leave
adc
jnp
inc
and
ret
dec
stc
jl
pop
cmp
push
fdivs
push
jne
mov
sti
xor
push
out
mov
cmp
dec
icebp
jnp
jg
aas
ljmp
pop
fdivr
xor
mov
rclb
stc
popa
insl
mov
push
mov
sbb
jp
ss
pusha
clc
cmp
push
sbb
addr16
lret
popa
add
push
dec
mov
sub
mov
repz
fdivrl
xchg
mov
inc
outsb
popf
outsl
push
fsubrs
xor
dec
xor
sti
decb
movsb
inc
adcb
nop
sub
cmp
insb
jg
sti
push
sub
jns
sub
lds
shl
pop
mov
jne
popf
push
fldt
mov
sbb
mov
mov
mov
sahf
ret
test
in
xor
stos
mov
icebp
add
outsl
inc
shll
mov
and
lea
fstps
loop
into
lcall
stos
mov
shlb
cmpsb
leave
int
jo
push
insb
fcomps
mov
in
das
scas
jecxz
out
stc
inc
movsb
mov
cld
push
loopne
stos
fwait
pop
clc
arpl
outsb
mov
imul
xchg
leave
call
or
xchg
adc
fldl
sub
nop
adc
mov
test
dec
repz
or
sub
and
daa
stos
inc
xchg
sbb
movsb
cwtl
ret
jo
sti
out
int
imul
outsl
lods
mov
and
mov
cli
or
div
std
adcb
insb
xor
or
xor
fidivrs
pop
jmp
xchg
xor
inc
mov
js
cli
fildll
mov
jl
push
push
dec
mov
inc
inc
mov
dec
je
gs
xchg
xchg
or
dec
jae
pusha
out
add
inc
aam
loop
mov
and
sub
imul
adc
decl
push
pop
dec
and
sub
fwait
sahf
in
je
shl
sub
push
fldl
in
jl
insl
cmp
jle
loopne
das
in
sub
or
repz
mov
cmpl
inc
jp
repnz
push
xchg
mov
xchg
push
js
loop
or
mov
addr16
aas
sub
nop
into
or
push
cmp
mov
movsb
stos
jns
inc
inc
fmulp
scas
xchg
xchg
cltd
fisttps
shlb
stc
push
add
es
xor
out
enter
add
sub
adc
push
inc
push
ja
xchg
sbb
outsb
adc
repz
or
pop
jo
inc
inc
outsl
fs
ds
mov
sub
sub
jecxz
xchg
ret
rorb
loop
fnsave
adc
mov
inc
adc
dec
mov
cmpsl
shll
inc
imul
jns
add
xor
lret
imul
pusha
insl
daa
aad
cmp
pushf
movsb
jl
data16
mov
sub
test
aaa
int
push
stc
int3
testl
ja
and
daa
pop
jp
cmpsb
cmp
insb
pushf
icebp
clc
int
cmp
sub
lds
cld
jl
mov
stos
or
sbb
jne
test
sub
dec
scas
jge
scas
aas
xchg
sub
outsl
xchg
aam
mov
fadd
aad
pop
xchg
push
and
fwait
mov
ljmp
push
out
mov
xor
pop
shlb
aad
inc
push
cld
mov
pop
add
mov
loope
mov
lret
xchg
jle
es
cmp
mov
lcall
cwtl
es
lret
xchg
loopne
enter
lea
mov
fsubrs
pop
lahf
int
jge
push
js
sbb
mov
add
dec
mov
mov
cmc
frstor
or
mov
sub
xor
lahf
ret
jp
imul
jns
or
cmp
cli
outsl
dec
fisubrs
push
repnz
sbb
bound
adc
xchg
and
pop
xchg
inc
out
mov
dec
shrb
pop
enter
hlt
iret
lcall
notb
enter
fildll
push
jp
pop
ds
mov
fwait
pusha
xchg
push
jo
adc
push
ret
adc
lahf
adc
int3
or
push
add
lret
adc
mov
sti
std
xchg
mov
jnp
or
in
push
cmp
mul
enter
xchg
dec
pop
ljmp
and
pop
loope
mov
call
jno
xor
push
or
mov
stc
pop
pop
add
outsl
call
sti
jl
mov
testl
mov
ret
jnp
pop
push
in
jge
or
int3
pop
fstpl
clc
enter
daa
push
movsl
mov
sarb
sbb
rolb
int
paddsb
int3
in
and
std
and
mov
movsb
xchg
mov
nop
test
adc
loope
fisubs
sbb
arpl
loope
xorb
scas
mov
mov
cmp
fwait
and
cmpsb
int
jno
cmp
xchg
out
xchg
test
sbb
addb
dec
pop
in
add
mov
cmc
xor
bound
pop
outsl
dec
adc
jecxz
or
imul
sbb
push
push
sub
fs
pop
and
pop
je,pt
pop
dec
shll
and
mov
out
push
pushf
test
or
cld
mov
in
xor
dec
ja
mov
jb
jo
sub
fisubrl
pop
stos
jbe
fimull
inc
xor
jl
test
sbb
mov
adc
aas
push
adc
mov
jno
dec
daa
sub
fbstp
xchg
insb
pop
pushf
mov
cmp
xchg
stos
fnclex
in
addr16
mov
in
popa
jle
mov
cmp
shrb
xor
in
jecxz
push
insl
mov
psubusb
pop
dec
or
mov
and
cmp
mov
dec
in
iret
and
mov
hlt
fs
ds
xor
and
dec
es
jae
jns
frstor
or
imul
push
ret
outsl
or
xchg
or
fwait
and
xchg
out
movsl
mov
push
adc
adc
scas
or
ds
cltd
mov
push
inc
xor
cmpb
sub
and
mov
mov
jl
mov
push
inc
scas
repnz
and
add
call
mov
jmp
shlb
daa
jle
pop
adc
decb
aas
mov
sub
ret
lods
lods
mov
aas
jne
sub
inc
jle
lret
popf
aam
test
cmc
out
sub
mov
adc
ja
aad
cs
jns
mov
adc
movsb
daa
jnp
jbe
xchg
enter
sbb
test
add
mov
push
aaa
or
jb
sbb
je
into
push
mov
mov
dec
inc
xchg
loop
adc
dec
pop
idivb
pop
js
cmpsb
xchg
inc
fidivs
outsl
jno
cld
repnz
test
xchg
shll
sub
mov
rcrl
push
xor
hlt
mov
into
out
clc
xchg
sbb
call
ret
adc
cmp
cmp
add
push
push
xlat
and
popf
pop
mov
cltd
call
sbb
insb
inc
mov
data16
adc
shr
xor
fisttpl
adc
cmp
cs
or
gs
cmpsl
in
pop
cs
pop
cld
xchg
arpl
lcall
pop
cmpsl
mov
dec
out
les
es
sbb
outsl
xchg
repz
push
imul
out
gs
mov
fidivs
mov
cmc
mov
xchg
negl
out
aam
pop
ljmp
test
jg
add
jecxz
lret
and
inc
lea
mov
pop
pop
cmp
in
lret
les
sbb
repz
push
call
pop
mov
inc
call
pop
mov
nop
xchg
push
fstp
jg
xor
pop
sbbb
jmp
adc
iret
mov
icebp
xchg
pop
pop
jle
ja
aam
and
into
ljmp
into
subl
ja
call
std
imul
pop
xchg
inc
jne
push
mov
mov
rol
aad
das
and
dec
or
popa
mov
pop
dec
cwtl
jmp
mov
pop
jo
popa
jno
add
sub
dec
popa
adc
mov
add
sbb
cld
pop
push
add
adc
inc
in
sub
cmp
aaa
mov
stos
mov
and
push
xchg
mov
imul
pop
xchg
and
int3
jmp
outsb
push
in
or
andl
add
jmp
push
pop
xchg
mov
out
in
xchg
xor
lock
jne
dec
out
fcompl
push
inc
xor
stos
ljmp
jns
aaa
cmp
add
lret
mov
push
push
pop
sub
ja
cmp
rcl
std
xchg
bound
ret
or
fsub
gs
stos
or
xchg
lret
in
xchg
lret
jbe
mov
addr16
in
subl
sbb
loopne
iret
lcall
fcompl
in
movups
aad
pusha
jle
sarb
inc
xor
ss
mov
adc
jne
stos
xchg
cwtl
icebp
std
dec
xlat
sub
sti
emms
jo
push
and
pushf
in
outsb
inc
fstpt
into
jmp
fcompl
adcb
and
sbb
add
inc
jg
cmp
out
xor
stos
mov
lds
mov
adc
arpl
dec
clc
out
cmp
imul
cld
jmp
mov
xor
xor
inc
in
lret
cli
fistps
ror
mov
gs
shrb
cmpsb
je
push
mov
stos
pop
cmp
adc
lock
push
test
mov
pop
daa
adc
out
lcall
imul
pop
adc
mov
jo
sub
pop
shl
out
jl
mov
xchg
sbb
push
imul
jnp
mov
push
test
stos
xor
lcall
ret
lea
jle
int
sub
imul
and
cmp
xchg
hlt
xlat
adc
aas
and
dec
movb
rol
or
cmovnp
push
jecxz
inc
pop
rcll
insl
imul
divb
out
in
push
jne
clc
clc
fidivrs
push
pop
adc
or
jne
push
cmpsl
mov
sahf
mov
mov
out
adc
add
pop
xchg
das
sbb
sub
dec
in
mov
jo
inc
push
add
or
pop
inc
xchg
lret
scas
and
push
xor
cmp
into
rcl
mov
mov
mov
movl
bound
pop
jmp
pop
lock
aad
jnp
add
mov
inc
not
xchg
popa
mov
insl
add
mov
mov
fmull
daa
outsl
popa
mov
movsb
int
ror
cmp
movsb
cmp
xor
jnp
faddl
movsb
inc
xchg
sarl
bound
push
sbb
cmp
das
mov
mov
inc
jmp
mov
jns
test
cwtl
pop
roll
imul
cs
ss
nop
mov
pop
cmc
jns
jmp
loopne
xchg
dec
int
aad
ss
ret
xlat
cmp
int3
or
lds
xchg
xchg
ds
ja
dec
jns
out
popa
outsb
pop
aam
push
std
or
sbbb
add
pop
test
popf
cmpsl
ret
out
push
ret
mov
aas
lods
das
imul
subb
sahf
shrl
stos
rcrl
popa
add
pop
add
jae
dec
pop
sub
cld
dec
pop
cmp
fld
vpcmpgtb
int3
addr16
cmp
mov
lods
repz
data16
movsb
insl
and
sbbl
lods
out
sbb
inc
jl
inc
push
pop
push
loope
int
mov
and
movsb
out
mov
lea
dec
inc
gs
push
orl
add
cmp
jmp
cmp
push
jmp
cmc
mov
cmc
sub
mov
test
xor
int
lods
mov
aas
mov
popf
and
mov
lcall
push
xchg
mov
pop
cmp
in
and
mov
mulb
and
cli
scas
stc
adc
jg
push
and
fstpl
cmc
ja
mov
orl
hlt
or
jnp
fs
lds
iret
mov
sbb
lea
xor
sub
add
out
data16
je
fidivs
test
inc
mov
fcompl
repnz
insl
push
fistpll
and
mov
fcmovnb
in
mov
gs
xor
pop
shll
dec
incb
xchg
scas
mov
add
and
push
or
mov
xlat
cmpsl
xor
xor
inc
push
aam
dec
pop
test
shll
outsl
mov
call
jne
insb
iret
outsl
mov
sub
loopne
pusha
add
arpl
mov
aas
sub
or
stos
push
xor
addr16
movsl
decl
sub
and
mov
pop
adcb
push
mov
fmuls
xorl
je
in
test
js
xor
jle
lock
cmpl
xchg
aad
mov
andb
push
add
xchg
jmp
xor
mulw
cld
cli
jae
xor
lds
mov
jp
popf
int3
and
sub
mov
scas
fsubl
in
sbb
xchg
push
fisttpl
cmpsb
test
jg
subl
nop
jecxz
add
call
ss
test
sbb
popl
sub
clc
xchg
dec
hlt
inc
inc
test
pop
mov
ret
xchg
nop
mov
fisttpl
jmp
stos
out
hlt
mov
pop
popa
shll
jno
pop
rorb
xor
jo
xchg
or
sub
cmpsb
movsl
movsb
xchg
adc
xchg
jb
pop
in
mov
fsub
stos
add
push
inc
jno
sbb
in
jno
sbb
int3
jne
gs
mov
mov
and
int3
cmp
sub
es
imul
mov
push
xchg
frstor
dec
lds
jnp
and
push
xchg
data16
cwtl
mov
xchg
in
xor
push
xchg
dec
pop
movsl
cmpsb
insb
and
aad
push
mov
xor
fs
loopne
mov
cmpb
adc
cmpsb
lods
xchg
fs
jns
or
sub
sbb
inc
xor
pop
xchg
mov
jne
jbe
out
and
mov
divb
imul
pop
sti
iret
mov
xor
dec
pop
aaa
dec
enter
std
dec
cmp
pop
enter
push
pop
jg
cli
nop
rclb
icebp
adc
in
jl
outsl
jl
inc
out
loope
in
mov
xor
stos
jg
dec
in
jg
fiadds
mov
push
push
out
mov
dec
xchg
out
icebp
xor
mov
outsl
dec
loop
add
jecxz
xor
sub
mov
loope
lret
shlb
loopne
adc
addl
call
rcll
sahf
sbb
dec
mov
push
pop
sbb
ja
in
jnp
push
mov
lods
add
jae
call
jbe
in
loope
xchg
cmp
mov
xchg
push
ret
xor
mov
fidivs
leave
mov
add
repz
aas
cmp
cmpsb
jp
in
iret
jp
cmp
fiaddl
xchg
rclb
cltd
out
in
insb
cmp
mov
inc
rcrl
push
push
sub
lahf
pusha
jns
mov
dec
mov
ljmp
fisubs
subl
fiadds
cld
add
sbb
add
and
add
jns
jp
gs
out
fidivl
ret
xchg
push
pushf
xchg
mov
bnd
fsubl
lahf
pop
sahf
or
out
loope
dec
sbb
mov
push
test
or
sub
add
hlt
jae
ficoms
pop
gs
and
mov
out
mov
mov
jmp
xchg
stos
repz
out
mov
push
mov
lods
or
ss
bound
sub
and
mov
ret
push
popa
fisttps
ret
pop
mov
sub
fstpl
push
movsl
inc
fdivr
call
pop
ret
xchg
push
jns
lret
mov
cmp
sbb
cmp
cmp
loopne
in
push
insb
shrl
jae
scas
sub
jecxz
iret
sbb
pop
lret
xchg
dec
xchg
addr16
mov
les
mov
jbe
daa
mov
inc
sub
push
movsb
push
insl
jno
das
pusha
stc
sahf
leave
inc
mov
insl
pushf
xchg
cmpsl
inc
aam
push
test
test
xor
std
inc
inc
adc
cmpsl
gs
push
mov
cmc
cmp
testb
adc
jbe
xor
jne
pop
cmp
out
jmp
pop
sub
fnstenv
mov
jp
jnp
push
jbe
pop
dec
loopne
and
aas
push
mov
cmp
add
or
xchg
ror
cltd
les
dec
jle
mov
or
test
pushf
cmp
add
pop
jns
std
scas
adc
jno
mov
mov
mov
mov
xor
addb
pushf
pusha
jmp
push
nop
ljmp
scas
adc
xchg
add
loopne
xlat
mov
call
loope
mov
test
and
mov
icebp
sub
fwait
int3
inc
cmp
cmp
pushf
add
mov
sahf
out
fcoml
pop
pushf
es
or
rclb
dec
xor
jns
in
test
fcompl
rolb
and
pop
leave
push
jns
bound
scas
inc
mov
arpl
scas
jmp
inc
xor
aas
fstps
pop
jecxz
cmp
mov
jmp
fwait
inc
and
ret
test
cmp
fstl
sub
adc
sbb
cld
pop
cmp
inc
aaa
test
fdivr
xor
cmp
mov
leave
test
or
lods
mov
lock
xchg
push
mov
loop
lods
cmp
mov
adc
into
lcall
jmp
add
popf
ds
sub
shld
ja
fldt
movsb
clc
push
add
cmp
scas
push
rorl
out
cmpsb
cmpsl
insl
jne
movsl
int
cltd
repnz
mov
xchg
test
nop
cmp
pop
inc
clc
inc
cmp
push
pop
dec
sbb
cmpsl
push
dec
shrb
mov
fists
lods
negl
sub
mov
loope
push
popa
int3
test
jl
jle
cmc
sbb
jmp
dec
shll
cltd
out
dec
fs
incl
xchg
ds
and
js
xor
test
fisubrs
add
rcrb
dec
int3
cmpsl
fdivl
add
nop
adc
je
mov
in
cmpl
repz
jp
sub
loopne
ljmp
mov
jo
pop
mov
sbb
int
push
aad
lods
shrb
jg
cltd
jle
jno
push
sub
mov
xchg
sbb
daa
push
sbb
lcall
mov
aas
lods
rorl
test
pop
jnp
insb
shlb
or
xlat
mov
push
cld
adc
xchg
loopne
push
dec
cmpsl
mov
in
int
pop
cmp
push
fwait
mov
cld
dec
or
xor
out
popa
jp
or
shrl
mov
mov
cmp
sahf
sbb
cmp
inc
dec
inc
dec
test
pop
push
bound
pushl
lods
cmp
push
push
iret
dec
jge
lret
or
mov
adc
insb
dec
xchg
aad
mov
mov
and
pop
inc
mov
inc
lcall
stos
repz
arpl
test
aas
pop
xchg
je
stos
dec
in
jge
or
nop
jb
push
jge
mov
lds
ret
lds
std
lock
jb
insl
ds
daa
data16
xchg
lcall
and
inc
pop
int
pop
popf
xchg
inc
jo
sahf
inc
loop
out
cmc
test
pop
and
push
imulb
push
ret
xchg
ds
movsl
into
sti
xchg
or
je
push
into
outsb
es
cmpb
and
and
insb
sbb
out
inc
adcl
lods
sbb
out
pop
scas
sbb
hlt
or
int
xchg
popa
call
xor
xlat
lds
stos
stc
cmp
mov
mov
add
lods
and
stc
mov
ret
add
push
inc
adc
cmp
pop
xchg
jg
mov
cmpsl
int
in
xchg
and
mov
shrb
mov
pop
iret
sti
mov
sub
mov
mov
pop
dec
lahf
push
sub
cmp
cmc
pop
icebp
rcll
icebp
xlat
adc
fbld
adc
loope
pop
jns
sub
int3
andl
fsubrs
jl
or
pop
loope
out
in
dec
xor
je
int
fcoml
shlb
push
and
pop
push
sahf
adc
sbb
insb
dec
aas
repz
jae
mov
lret
mov
icebp
xchg
jb
inc
pushl
xchg
or
mov
jmp
add
xor
inc
mov
std
repz
aas
push
dec
mov
sub
rcll
mov
and
push
jl
test
call
pop
jmp
dec
imul
xor
push
cwtl
scas
jno
mov
psllw
lret
addr16
addl
or
aaa
and
push
sbb
pushf
out
dec
and
cli
adc
fisttps
loope
xor
fidivrl
push
insl
fld
push
jbe
mov
xchg
cmpsb
in
int3
sub
sub
fdivrl
je
stc
push
xchg
out
xlat
add
xchg
push
dec
lea
addb
fwait
loop
mov
popf
xor
das
fcoml
aas
int
loopne
vpmacsdqh
xchg
mov
sub
mov
adc
adc
out
xchg
pop
or
xchg
addr16
xchg
xor
jmp
adc
pop
daa
pusha
imul
xchg
or
iret
cmp
xchg
popa
into
call
enter
sahf
das
pop
lock
mov
add
xor
pop
imul
lds
push
sbb
fldenv
fwait
call
mov
adc
sub
test
test
and
clc
push
mov
add
mov
xor
cld
push
jno
mov
ds
sub
movsb
mov
pop
cmp
xchg
cs
in
ja
sub
mov
fnstsw
daa
or
sbb
stos
mov
cmp
cmp
fs
out
sbb
pop
pop
pusha
pop
data16
xchg
faddl
fistl
mov
xchg
std
data16
and
pop
arpl
sbb
pop
mov
jbe
ds
lcall
sbb
adc
mov
xchg
jg
mov
loopne
loope
jp
movsb
leave
popf
pop
fisubrl
or
mov
loope
cmpsb
in
hlt
add
cmc
rcr
dec
shrl
out
sub
std
inc
das
std
idivl
iret
pop
pop
jno
xor
pop
lahf
lea
aam
rclw
push
rorl
in
xchg
test
imul
xchg
pusha
cmp
fisubrs
jns
fisubl
mov
jns
dec
inc
mov
fwait
and
cmp
xchg
sahf
fwait
sub
addr16
out
lcall
lahf
loopne
mov
inc
add
cwtl
fwait
sti
jmp
mov
inc
les
pop
adcl
gs
cmp
sub
repz
mov
dec
loop
jge
je
sbb
inc
fcoms
test
test
mov
push
jo
imul
int3
pop
and
jbe
loope
inc
mov
icebp
decb
cltd
sub
aaa
mov
dec
xchg
add
adc
or
ret
outsb
dec
aam
xor
imul
aas
xor
push
xor
push
jne
iret
sbb
lock
jno
inc
movsb
imul
lcall
or
lods
rclb
xchg
mulb
fstpt
out
cld
adc
ret
lcall
push
pop
or
movsl
scas
mov
lcall
push
lods
pop
addb
inc
cmovnp
add
icebp
jbe
xor
add
mov
add
pusha
jae
inc
jo
inc
push
loope
and
dec
sbb
js
jae
sahf
inc
fidivrl
scas
into
push
stc
mov
sbb
das
mov
rcl
sbb
adc
xchg
inc
jge
ficoml
inc
or
xchg
jne
in
das
push
mov
lcall
add
push
in
out
loopne
cmp
mov
add
fcoml
int
cmp
dec
push
adc
add
adc
aas
sbb
adc
cmp
dec
mov
sahf
std
pop
loop
out
or
mov
mov
out
adc
sar
push
xchg
sbb
fisubrs
fistpl
add
in
sbb
mov
rcrb
add
pop
cmpsb
dec
xor
repnz
icebp
xlat
sub
test
push
and
addr16
xchg
push
xchg
into
push
test
xorb
std
test
test
push
pop
aam
lret
fcompl
sub
aam
mov
inc
lcall
cmp
mov
xor
fsubr
push
arpl
sar
ror
cmpb
jg
inc
lods
adc
repnz
cmp
add
test
xchg
xor
ret
xchg
mov
mov
cmpsl
add
add
dec
inc
mov
imul
sbb
xchg
es
fadds
rol
pop
inc
sub
addb
insb
push
test
add
push
stos
xchg
xor
les
aaa
cmc
adcb
mov
out
sub
mov
mov
sbb
into
push
cmp
dec
pop
lods
insb
cwtl
xor
out
or
push
ss
push
lock
aad
int
push
les
sub
lea
mov
orl
inc
testb
clc
xor
xchg
out
in
dec
nop
and
adc
call
mov
mov
or
scas
push
sub
or
insb
jg
xchg
lock
pop
sub
aam
sub
cmpsb
xor
push
nop
adc
xchg
dec
xchg
mov
xchg
int
xor
adc
mov
aam
test
xchg
popa
stc
les
adc
mov
dec
add
mov
jmp
push
loopne
aam
or
xor
ss
out
test
repnz
and
inc
daa
flds
and
jle
shll
dec
push
js
jge
and
inc
rclb
or
adc
mov
and
loop
add
das
int3
dec
test
mov
jns
clc
xor
and
push
push
push
xchg
mov
inc
add
mov
dec
test
mov
and
rorb
fnstcw
int
imul
pushf
mov
mov
adc
fildll
mov
cmpsl
fldt
icebp
mov
test
mov
into
and
insl
std
pop
iret
int3
in
sub
or
xor
sub
fwait
lret
or
mov
rcr
in
outsl
dec
fldcw
xchg
xlat
push
adcl
pop
cs
sbb
cltd
jae
xor
lock
cmpsl
lret
cmp
clc
sbb
and
mov
outsb
mov
inc
stos
jae
xor
in
cli
loopne
inc
mov
aad
bnd
jnp
in
fildl
ss
xor
dec
push
mov
jmp
mov
mov
mov
pusha
mov
repz
sbb
add
pop
mov
add
test
pop
pop
lea
add
jl
cld
repnz
decl
sbb
sub
fdivrl
pop
xor
cmc
inc
xchg
mov
movsl
inc
jnp
addr16
scas
addr16
ds
sbb
sti
sub
sarl
xor
rcll
or
jmp
mov
add
lds
or
cwtl
push
mulb
dec
push
fisttpll
adcl
das
sbb
lahf
dec
js
icebp
in
sbb
mov
mov
lock
outsl
xchg
or
daa
sbb
lds
sub
mov
sbb
sub
neg
pushf
in
shlb
pop
dec
movsl
scas
jge
lock
xchg
push
lock
out
lods
push
fwait
adc
inc
adc
es
sub
mov
fwait
adc
xor
das
out
out
arpl
push
cmp
add
test
pop
push
or
aam
mov
xchg
fisubrl
adc
stos
std
fwait
xchg
add
into
les
test
je
push
xchg
fisubrs
xchg
push
in
pop
xchg
mov
pop
cmp
cli
pop
add
addb
push
sbb
mov
flds
cmp
pop
dec
divb
push
icebp
mov
push
sub
and
leave
mul
sub
pop
push
sub
int3
cmp
fadds
ja
pop
clc
mov
xchg
popf
dec
push
enter
fimull
daa
and
cs
jmp
insl
add
or
jnp
test
dec
sahf
add
in
push
push
mov
xchg
lea
cmp
pushf
xchg
mov
sbb
adcl
push
hlt
cmp
xor
popf
inc
nop
sub
je
jp
in
cmpsb
loope
imul
or
mov
mull
stos
inc
jp
pop
std
dec
int3
xchg
pop
test
inc
xlat
mov
insl
loope
cmp
xor
pushf
mov
setge
jmp
sub
frstor
push
mov
jl
test
inc
shll
xchg
sub
xchg
arpl
mov
jns
cltd
mov
clc
lock
xchg
sbb
in
into
cmc
or
mov
adc
jmp
sbb
inc
out
push
outsb
pop
inc
cmpsb
xchg
push
xchg
inc
mov
stc
sub
pop
or
imul
push
xchg
sub
adc
fwait
adc
fwait
je
jg
imul
lock
mov
jl
out
leave
jle
or
sbb
jnp
or
lcall
clc
movsb
cmc
roll
ja
inc
dec
adc
in
sahf
cmpsb
add
in
xor
js
mov
outsb
movb
repz
pusha
push
mov
lahf
sub
cli
fdivrs
outsb
pop
rcrb
xor
out
and
pushf
dec
mov
dec
sub
push
rclb
jmp
xchg
push
or
cmpsl
xor
pop
iret
ds
lcall
push
stos
popf
pop
sub
push
adc
push
add
fsubs
pop
pop
popa
sub
lahf
mov
mov
pop
rcll
ret
mov
fadds
aam
dec
fcom
push
test
lods
jns
mov
inc
mov
push
repz
hlt
mov
orl
gs
leave
fisttpl
mov
add
movsl
repnz
fwait
cs
rclb
push
mov
push
es
int
mov
subb
scas
int
mov
enter
fiadds
cld
out
xchg
adc
or
in
fisubrs
cmpsl
sbb
pushf
pop
adc
lret
js
stc
cmp
push
sbb
fnsave
push
hlt
mov
sbb
pop
ljmp
test
and
enter
xor
js
xchg
xchg
mov
jecxz
ljmp
les
cli
fdivrs
cmp
enter
pop
push
mov
popf
dec
dec
jbe
jae
arpl
and
pop
jle
test
pop
add
push
clc
or
out
xlat
in
push
push
inc
int
lock
enter
sahf
dec
cld
lahf
js
pop
or
mov
or
out
push
xor
int
inc
cmp
add
xor
addr16
int
cmpsb
jns
pop
and
or
sub
and
cmp
fldt
xchg
sub
movsl
clc
xchg
scas
ret
xor
bound
je
pop
loope
push
arpl
mov
cwtl
ja
arpl
movsl
inc
adc
jb
leave
pop
mov
dec
push
mov
sub
iret
dec
sbb
test
pop
inc
ja
sub
movsb
and
or
xchg
fcomps
or
lgs
out
fs
into
pushl
into
fcoms
ss
inc
imul
cltd
stc
and
mov
xchg
lods
jo
out
lahf
sbb
imul
mov
dec
nop
pop
sbb
adc
lock
push
loope
int3
jl
mov
mov
sub
jae
mov
int
mov
shll
xchg
outsb
dec
xlat
test
push
jae
js
adc
incl
shlb
cmpsb
icebp
jno
push
sbb
push
xor
lret
jmp
or
out
int3
dec
push
mov
aas
je
fildl
or
jbe
sub
push
pop
mov
jb
push
stos
inc
outsb
mov
mov
adc
sti
outsb
inc
sub
add
add
mov
jns
xlat
jg
int3
std
add
pushf
jne
dec
lahf
out
lds
sbb
cmp
leave
xchg
or
js
daa
cmp
es
repz
xlat
dec
mov
ret
int3
shrb
mov
push
cltd
aaa
xor
mov
and
xchg
call
add
ficompl
xchg
scas
mov
mov
fucomi
daa
adc
sbb
lcall
cmp
insl
out
call
jns
inc
dec
push
dec
adc
mov
cld
ficoms
icebp
clc
fistl
xor
cltd
lret
xor
dec
mov
dec
repz
or
cmp
dec
and
es
out
pop
repz
lds
bound
pop
shlb
inc
ds
pushf
dec
inc
jle
daa
iret
lret
xlat
inc
adc
out
jl
pop
inc
and
and
jae
push
add
fcoms
cmpsb
pushf
push
gs
jo
mov
push
xchg
pop
test
testl
scas
pop
je
dec
push
xchg
and
push
in
sbb
bound
aam
addr16
xchg
or
lret
es
ja
aaa
adc
pop
fiaddl
jmp
sub
bound
scas
mov
xchg
in
mov
fcmovb
jmp
rcll
repz
inc
xlat
inc
loop
and
mov
push
lret
push
adcl
adc
mov
decb
add
inc
sub
lret
push
ljmp
fimull
ficomps
jnp
shlb
in
and
fbstp
pusha
add
in
adc
push
adc
insl
mov
pop
cmc
sti
addl
xlat
cs
fists
mov
adc
inc
insl
jp
xor
repz
push
aas
dec
xchg
notb
push
insl
pop
pop
push
pusha
and
ficoml
mov
mov
xchg
popf
adc
lret
sub
stos
push
xchg
bound
mov
cltd
cmpsb
in
repnz
cmp
push
into
clc
mov
out
and
push
xchg
lods
adcb
push
xchg
shr
mov
mov
sub
test
mov
test
imul
loop
clc
sti
mov
ja
mov
pop
mov
scas
les
in
mov
lods
adc
push
xchg
add
mov
mov
dec
add
mov
shl
or
inc
es
xchg
pushf
scas
test
pop
jg
fists
pop
and
cmp
dec
loop
inc
mov
jp
cmp
jno
std
js
push
loope
or
out
or
and
ret
push
dec
jl
negb
nop
add
hlt
arpl
adcl
dec
xchg
cmp
fcoms
mov
and
xchg
mov
in
sub
pop
jb
xlat
jo
pop
outsl
imul
lcall
add
mov
roll
test
sbb
lret
sbb
mov
flds
lods
sbb
fwait
inc
xor
inc
jbe
pusha
cmpsl
pop
lret
arpl
lret
push
sbb
cmp
cs
insb
push
jb
push
test
mov
ret
out
mov
xchg
sub
and
sti
incb
sub
cmp
or
jmp
popa
adc
add
negl
repz
and
jo
or
repz
pop
sbb
mov
push
sbb
sti
sub
fmuls
outsl
shrl
dec
adcl
loope
scas
gs
iret
mov
inc
sbb
sub
aas
mov
sub
movsb
xor
push
pop
out
xor
mov
and
push
cmp
nop
mov
cmp
jp
mov
push
xchg
fucom
enter
jle
push
divl
mov
or
dec
xchg
call
mov
jg
rcrl
loope
and
fisubs
mull
cmpsb
xor
out
jno
pop
mov
pop
es
call
sub
add
mov
or
sub
mov
or
pop
push
or
mov
sbb
fsub
or
aad
cmp
inc
aaa
push
loop
push
lds
dec
mov
xchg
xchg
in
jne
aad
hlt
jecxz
js
pop
lods
lods
adc
push
shll
ljmp
sahf
pop
cwtl
andb
adc
inc
adc
daa
leave
call
or
jae
cwtl
aam
mov
cwtl
lods
ret
mov
sbb
ljmp
gs
mov
jle
rclb
jmp
jbe
jns
jae
xchg
popf
rcll
inc
in
insb
and
adc
jp
push
test
fldcw
test
insl
mov
icebp
jno
mov
lea
imul
fdivrs
dec
insb
cmp
movd
jmp
aad
push
cmp
shll
sbb
subb
or
mov
inc
dec
jmp
lock
pusha
mov
fnstsw
pop
test
adc
or
pop
cmp
repz
aaa
pop
push
xchg
jne
sahf
popa
scas
or
fdivl
xor
js
sbb
mov
bound
mov
sarb
inc
sar
push
jno
mov
mov
dec
mov
out
push
idivb
mov
popa
daa
cmpsb
addb
les
ss
sub
inc
dec
out
insb
insl
enter
xchg
test
test
ja
in
in
adc
adc
loop
lods
loop
sub
lcall
cld
inc
xor
fsubl
loope
sbb
hlt
jb
imul
push
mov
push
out
es
loope
movlps
call
add
ds
mov
cmp
cmp
inc
fwait
cmp
fistpl
sub
pop
pop
into
loop
jae
gs
addb
lock
jbe
push
fs
jp
into
mov
lcall
scas
lea
push
out
nop
push
fstl
in
xchg
push
leave
js
in
movsl
push
sbb
cmpb
stos
cltd
push
pop
sub
xor
add
mov
inc
pop
mov
cmc
add
add
dec
jmp
mov
insb
push
inc
mov
add
int
imul
cwtl
pop
or
pcmpeqb
cs
xorl
or
aam
dec
sub
flds
aaa
sbbb
mov
push
or
inc
addr16
add
adc
jle
mov
mov
das
lods
sub
xor
push
mov
outsl
mov
test
pop
pushf
repnz
pop
fwait
jmp
add
sahf
cmp
scas
addr16
mov
xchg
lahf
dec
xchg
xchg
push
pop
into
mov
lret
pop
push
cmp
lods
fsubrp
push
sahf
jb
movsl
pushf
sbbb
pop
shll
sub
fsub
call
add
roll
out
jg
push
push
mull
mov
lods
and
in
jnp
testb
mov
fcmovbe
pop
iret
dec
adc
sub
and
and
lods
jb
outsl
cmp
sub
pop
sbb
xor
into
mov
add
popa
pop
jns
xor
mov
sbb
mov
hlt
lahf
cmp
leave
mov
test
hlt
cmp
addr16
cmpsb
xchg
cmp
jmp
lret
adc
pop
adc
rol
js
nop
mov
push
mov
and
or
clc
mov
xchg
push
xchg
pusha
imul
xchg
pop
xchg
pop
pop
fcos
int3
jb
dec
leave
int
adc
sub
jle
mov
sub
sti
mov
mov
daa
push
out
add
ds
fistps
iret
popf
pop
popa
and
imul
add
jns
insb
pop
aas
ss
fiadds
jg
outsb
jne
mov
adc
xchg
out
rcrl
sbb
jmp
test
arpl
dec
stc
fildll
int3
sub
jmp
or
int3
add
lcall
add
je
popa
adc
jmp
rorl
mov
orl
cmp
fdiv
ds
icebp
repz
movsb
jnp
or
cld
icebp
jo
das
or
mov
pop
cmpl
pop
push
pop
pop
lds
sbb
pop
arpl
ljmp
loope
int
mov
inc
sbb
pop
jmp
cmpsb
mov
stos
xor
xchg
and
push
fnstsw
ss
fimuls
scas
cmp
or
lret
mov
repnz
out
aad
je
cmpsl
adc
clc
inc
adc
jmp
imul
mov
jns
jmp
inc
adc
xchg
enter
dec
ljmp
sbb
ds
xchg
mov
cmp
cmpsb
mov
int
cli
out
loopne
mov
xor
sbb
xorl
ficomps
popl
sbb
xorb
addr16
addr16
in
add
movsl
xchg
add
jo
insl
push
mov
cmc
sbb
movsl
sbb
push
mov
inc
aaa
dec
jno
movsb
pop
inc
cmpsl
xchg
in
xor
hlt
out
stos
add
xor
xchg
or
push
dec
adc
push
leave
fidivs
xor
push
mov
inc
xor
mov
mov
je
xor
xchg
xor
or
xor
lods
push
iret
xor
fimuls
sub
aaa
or
loope
aad
mov
sbb
pop
sbb
outsl
lret
loopne
dec
mov
and
repnz
mov
inc
mov
push
stos
ret
cmp
ror
adc
jl
add
pop
lods
in
or
hlt
or
int
ds
mov
scas
je
or
push
fiaddl
dec
repz
mov
xchg
test
xor
pop
jmp
adc
fwait
jmp
mov
jg
jmp
test
or
push
jo
fisttps
push
sbb
mov
sbb
js
lock
arpl
or
inc
outsb
stos
push
mov
aaa
stos
jmp
push
xchg
in
cli
cmp
dec
xchg
sbb
jl
les
in
xor
ds
fwait
adc
in
icebp
push
lahf
add
mov
inc
notl
rol
dec
or
inc
push
in
sbb
add
pop
adc
outsl
jno
cmp
or
xchg
pop
test
inc
cmp
xor
ss
mov
jmp
shrb
bound
sbbb
xchg
or
xchg
xchg
cmpsb
int
pop
insb
insl
lcall
or
js
in
or
mov
call
sahf
pslld
dec
xchg
and
lods
leave
push
cs
or
pop
or
xor
test
lds
pop
iret
loope
push
cwtl
fmull
gs
fucomp
adc
mov
cmpsl
xchg
or
dec
jmp
aad
inc
cmpsb
sbb
stos
aaa
jb
and
sbb
mov
ss
sub
lods
jnp
mov
xor
xchg
adc
xchg
xchg
sbb
cmp
imul
out
mov
nop
adc
xorl
mov
jle
cwtl
inc
popf
mov
jl
sti
sahf
push
lcall
or
dec
lods
rorb
cmp
aam
call
mov
into
jb
push
sub
mov
sbb
daa
fstpl
push
adc
and
mov
ds
pop
jbe
cmpb
movsb
sbb
popf
imul
out
mov
gs
dec
int
dec
adc
lock
mov
mull
arpl
sbb
lods
mov
jp
pop
xchg
sub
mov
push
sar
in
adc
lcall
gs
mov
adc
in
arpl
mov
or
aam
ljmp
ret
nop
xor
arpl
xor
jecxz
andl
cltd
dec
fidivrs
shrb
and
cli
xchg
inc
sbbb
out
ret
dec
push
imul
loope
call
lea
inc
xchg
lea
mov
mov
scas
nop
sbb
addr16
and
dec
xchg
mov
mov
cmp
xchg
in
in
cmp
cwtl
xor
inc
std
push
add
xor
ss
dec
cld
rcl
leave
outsb
pop
mov
inc
mov
dec
aaa
sti
stos
movsb
mov
push
bound
outsb
out
mov
xor
shlb
fcmovb
bound
je
xor
lds
cli
jae
push
lcall
repnz
add
mov
dec
imul
mov
es
fwait
sbb
add
add
push
and
add
xor
dec
pop
cwtl
in
xchg
dec
xor
inc
in
pop
je
sub
cltd
xor
imul
pop
insl
add
mov
cmpsl
jle
pop
push
jne
pop
cwtl
movswl
dec
outsb
add
scas
dec
xor
stos
insb
mov
lret
scas
mov
mov
dec
jmp
sub
add
clc
dec
mov
mov
scas
xchg
ljmp
fistl
mov
pop
sub
test
sub
out
mov
in
jle
pop
sahf
cmc
push
shrb
push
add
mov
mov
or
jo
pop
pop
xor
insl
movsl
int3
mov
rep
xor
negl
xor
lock
mov
repz
push
mov
inc
or
add
incb
mov
xchg
add
push
sbb
in
rclb
or
jnp
js
iret
pop
and
push
fisubs
fsubrl
sahf
push
and
jns
jmp
sbb
mov
dec
fstps
mov
cld
add
xor
sti
shl
sub
inc
cmp
movsb
loop
fisubl
pop
adc
cmp
cmc
jmp
dec
push
rcl
test
ja
das
xor
push
shrl
add
jnp
in
push
push
mov
sub
insl
scas
out
or
ljmp
dec
call
xor
imul
inc
into
mov
sbb
es
leave
mov
repnz
int3
test
popa
pop
xchg
sti
push
in
inc
mov
movsl
pop
into
ficoml
nop
push
pop
lods
into
orl
std
jl
push
int3
pusha
lret
jle
cmp
aas
jle
adc
dec
mov
push
cli
imul
lds
dec
xchg
outsb
xchg
imul
add
test
and
pop
mov
xor
xchg
mov
outsb
mov
adc
xchg
stc
cli
dec
and
pop
arpl
pop
push
mov
cmp
sbb
sub
lcall
mov
jne
xchg
jbe
xchg
ret
add
imul
addb
xchg
dec
jl
pop
mov
mul
or
movsl
and
or
std
mov
cmp
xor
and
adc
cmc
mov
pop
jo
add
incl
mov
cltd
mov
inc
push
add
xor
cmpl
fisubrs
ror
dec
mov
repnz
and
jnp
xchg
fwait
jp
inc
xchg
pop
testl
cwtl
in
outsb
fstpt
sti
jecxz
loop
xor
add
cld
repz
mov
std
cmpsl
shlb
jns
mov
adc
je
xchg
cmp
out
cmp
jno
pushf
mov
and
jge
outsl
xchg
lods
adc
cmpsb
ja
pavgw
pushf
jae
imul
or
outsl
add
inc
enter
push
std
xor
cmp
test
cs
pop
mov
stos
sub
es
jbe
mov
insl
pushf
scas
mov
ljmp
mov
das
sahf
lds
xor
shll
push
lea
jbe
jae
xchg
imul
mov
stos
xor
mov
jo
testl
in
shrb
push
push
fstl
dec
cmpsb
jecxz
movl
out
adc
ljmp
aas
push
ret
ljmp
test
mov
sub
dec
lds
in
test
sti
roll
inc
loopne
test
jns
xchg
push
mov
xchg
dec
fldcw
adc
jbe
jbe
mov
cmpb
imul
xor
adc
loop
and
mov
mov
sub
push
insl
lret
mov
sub
sbb
mov
fsubp
lcall
mov
xchg
stc
or
and
jb
stos
rcrb
fwait
sbb
pop
lock
mov
stos
mov
cmpb
mov
sbb
xchg
dec
mov
out
mulb
fisubrl
add
add
cli
mov
push
cmp
push
pop
pop
ja
out
adc
jecxz
ret
mov
xor
out
aad
ljmp
xchg
jne
jno
xchg
out
aam
cmp
scas
xchg
sbb
sbb
cld
mov
int3
movsb
sub
cmp
or
push
pop
mov
je
addb
xor
cli
cmp
les
popf
int
outsb
cmp
lods
scas
decl
jno
pushf
jmp
add
push
xor
mov
fidivl
movl
out
mov
lods
cmc
in
fucom
and
xchg
or
hlt
xchg
adc
sbb
pop
insb
loopne
add
jmp
and
jno
sub
imul
sub
inc
sbb
pop
mov
fstps
jg
cmp
clc
mov
jle
inc
repz
iret
ret
add
dec
lods
mov
lods
mov
ret
movsl
cmc
call
xchg
arpl
out
mov
test
shl
fsubp
ret
les
sbb
out
cmp
js
mov
add
mov
sbbb
scas
sbb
pop
out
sub
bound
dec
push
inc
lcall
pop
pop
stos
xchg
arpl
mov
mov
dec
pop
xor
mov
and
fimuls
cmp
aaa
aad
adc
dec
gs
data16
pop
mov
cli
imul
adc
dec
pop
inc
pop
cmpsl
out
mov
push
pop
lret
ja
mov
iret
mov
add
loop
xor
xor
push
cmpsl
inc
xchg
mov
shrl
xchg
mov
mov
mov
cmpsb
jno
add
mov
test
fadds
je
cmp
add
xor
int
push
and
setg
lahf
jmp
jae
pop
mov
repnz
enter
lcall
lds
stos
mov
push
gs
dec
mov
xchg
enter
cltd
add
fdiv
pop
fcmovu
push
negl
arpl
dec
push
arpl
dec
pop
lea
add
fnstenv
imul
es
fistpll
jge
imul
test
mov
stos
addr16
aad
in
lea
arpl
stc
outsb
rorl
jb
add
and
or
inc
xor
inc
sbb
ret
sub
push
idiv
mov
cwtl
fs
mov
push
icebp
or
fsts
mov
out
jbe
cmp
pop
xor
adc
je
test
jg
int3
jno
adcb
mov
ret
cltd
sub
test
sub
cmp
mov
je
mov
in
xchg
addr16
pop
fcoml
daa
ffree
xchg
mov
mov
and
out
fidivrs
bound
or
mov
sbb
shlb
hlt
add
andl
and
into
imul
pop
push
les
ljmp
inc
pop
xchg
stc
xchg
xor
mov
cmpsb
popf
pop
jne
lods
loopne
cli
leave
adc
sub
scas
xchg
inc
jne
dec
bound
jg
popa
fcompl
loop
stc
scas
data16
mov
mov
stos
sub
pop
push
push
xchg
sub
push
cmc
mov
sbb
sarb
mov
aad
sbbl
pop
out
jae
in
rcr
rcpps
mov
cmp
stc
dec
mov
sub
xlat
mov
lahf
xchg
andb
mov
and
pop
dec
push
cwtl
std
stc
and
jle
hlt
sbb
test
lods
scas
pushf
divl
mov
ss
jl
jb
dec
cs
mov
inc
in
xchg
jge
cli
pusha
imul
lds
sahf
push
es
add
jle
inc
std
adc
sti
shrb
add
inc
test
into
pop
addr16
adc
jo
xchg
jne
stos
jp
std
pop
popf
cmp
arpl
je
xor
imul
add
into
ja
or
jae
lea
add
or
mov
adcb
jnp
lret
jge
fwait
push
rorl
cli
cmp
loopne
test
jnp
test
clc
lret
imul
pop
lock
leave
pop
movsb
addl
sbb
sub
add
idivl
xor
ret
add
les
jecxz
jmp
mov
pushf
scas
scas
adc
jg
insl
push
push
dec
loope
push
sti
dec
inc
daa
inc
mov
push
sbb
xchg
in
jns
loopne
std
out
shll
xchg
jp
mov
leave
loopne
and
inc
mov
push
jp
insb
hlt
scas
addr16
or
mov
stc
jo
push
inc
fmull
popf
adc
mov
cltd
mov
insl
xor
fiadds
call
cmp
aam
test
inc
mov
movsb
into
ss
sahf
orb
sub
imul
jb
nop
jo
mov
fidivrl
scas
adc
std
jge
jne
cmp
daa
sti
mov
inc
or
out
push
mov
popf
inc
xchg
int3
dec
ss
push
sbb
rcl
aad
jae
pop
jmp
ror
aaa
jno
jno
inc
rcrl
leave
stc
xchg
pop
lds
jl
xor
lea
push
xchg
mov
xchg
add
pop
xchg
dec
fisttpl
es
ds
and
dec
cld
dec
gs
lcall
popw
dec
adc
lods
sar
std
and
mov
fidivs
sub
fldcw
jp
cmp
xor
mov
dec
mov
aaa
outsb
adc
pop
sbb
xchg
mov
adc
dec
std
clc
lea
sbb
push
ja
lret
lock
add
rcr
stos
popa
lret
daa
loope
aaa
cmp
movsl
test
popf
mov
leave
int3
lahf
cmpl
jecxz
jo
ds
or
arpl
sub
sahf
movsl
mov
data16
xchg
jae
mov
push
or
popf
sbb
jle
dec
mov
insl
pop
movb
sbb
pop
cli
and
frstor
xchg
xchg
sub
rcll
push
popf
inc
or
rcl
xor
lea
or
add
test
lods
dec
insb
mov
insl
adc
xchg
lret
adc
push
xchg
outsl
jne
sahf
imul
dec
bound
xor
push
add
popa
in
in
xor
push
and
or
scas
pop
fmull
add
mov
push
aam
xchg
cmpb
mov
mov
std
addr16
daa
mov
inc
jle
mov
xchg
lods
fcompl
stos
adc
adc
rcr
jne
pop
stos
in
cwtl
ljmp
sahf
mov
mov
jno
cmp
test
sub
inc
movsl
lock
jo
fwait
lcall
and
xchg
or
cltd
or
mov
lds
xorl
out
push
sbb
mov
adcb
mov
and
repz
lret
push
dec
or
bound
je
push
popf
in
lret
repz
jne
jbe
and
les
add
xor
cmp
cmpsl
jb
out
pop
pop
sbb
loopne
xor
mov
xor
pop
xchg
push
push
cmp
mov
mov
add
or
mov
sub
or
xchg
adcb
cld
mov
pop
arpl
mov
enter
cli
xchg
outsl
mov
push
jl
lds
pop
mov
sbb
mov
out
fs
sub
ja
inc
sbb
push
pop
inc
xchg
dec
mov
shrl
js
and
adc
das
cmp
push
jl
dec
cmp
and
pop
inc
imul
popa
cmpsb
mov
or
insb
pusha
call
fdivs
ret
add
mov
fldenv
imull
cmpsl
in
mov
roll
syscall
inc
scas
pop
je
lods
jle
ljmp
scas
xor
mov
inc
push
xor
xor
pop
shll
pop
and
in
or
mov
adc
add
insl
cmpsb
dec
xchg
int3
in
jmp
jae
fidivl
loopne
sub
sbb
inc
xchg
mov
roll
js
mov
fists
std
test
mov
iret
xchg
sub
or
loop
cld
imul
imul
inc
lret
pusha
sub
movsl
icebp
add
fiadds
mov
out
and
std
lods
pop
mov
loope
sub
or
je
mov
and
arpl
xchg
sub
or
dec
outsl
rorl
in
int
loopne
or
mov
cmp
lahf
inc
jle
xchg
fdivl
ljmp
jns
dec
add
imul
int3
push
push
xchg
stos
mov
cmc
sub
lcall
pop
add
pop
jecxz
lods
repnz
nop
and
cmp
sub
hlt
jno
mov
mov
jb
cwtl
xor
jmp
and
stc
mov
lods
xchg
or
loopne
in
ret
add
cmp
mov
lods
je
or
push
sarl
mov
fistl
pop
dec
sub
nop
aas
sbb
repnz
pop
idivb
mov
loop
push
out
clc
push
ljmp
stos
mov
xchg
call
ljmp
push
jl
dec
cs
out
push
fmuls
or
pushf
lret
adc
mov
inc
xorb
cmc
ljmp
into
mov
ror
adc
les
mov
cmp
lods
lds
pop
frstor
cwtl
sub
mov
lea
inc
push
jno
push
push
push
xchg
mov
mov
inc
imul
cmp
cld
ss
mov
mov
pop
pop
mov
ss
xchg
mov
lret
in
aad
inc
mulb
or
mov
push
cmp
js
xchg
test
lea
push
jp
into
outsl
xor
cmp
call
pop
cmp
jns
and
shrl
fildl
fsubrl
ljmp
cmpl
mov
xor
leave
pop
lods
pop
dec
adc
mov
fnstcw
xor
outsl
out
mov
cmc
push
enter
js
mov
jo
dec
xchg
add
test
out
or
jbe
jl
or
mov
xchg
jnp
mov
xchg
add
pop
test
sub
mov
sub
sbb
movsl
test
sub
mov
test
xor
in
in
sahf
bound
lea
adc
out
sbb
or
daa
jo
clc
pop
clc
insb
adc
int
mov
in
jae
cmpsb
movsb
icebp
jns
popa
xchg
xchg
cmp
mov
lods
pusha
mov
gs
mov
jb
cld
hlt
sarl
fdivl
mov
mov
adc
mov
insl
jge
mov
in
jnp
ja
pop
enter
push
ret
inc
rclb
xor
shr
rolb
das
add
rcr
push
inc
push
push
mov
lret
bnd
test
inc
pop
inc
in
cltd
jno
jmp
insb
xchg
es
jnp
dec
addb
sbb
xchg
fwait
call
pop
or
push
mov
adc
stos
pop
mov
imul
and
mov
xchg
adc
add
mov
add
sti
jb
je
pop
ss
jnp
fildll
push
testl
je
out
les
inc
inc
repz
iret
pop
cmp
adc
fcoml
lret
jle
in
std
negb
les
rcl
insb
enter
jl
packssdw
xchg
mov
sbb
scas
sbb
es
mov
adc
push
fnsave
gs
das
call
nop
in
and
sub
cmp
es
test
test
pop
sub
add
in
mov
mov
mov
out
push
es
popf
shlb
lods
out
loope
cltd
test
int
mov
jns
loope
mov
cmp
or
aad
movsb
and
insb
pop
mov
stos
outsl
clc
cmp
sbb
pop
sti
scas
dec
lds
or
dec
sub
aam
mov
mov
aas
jne
dec
adc
enter
xor
pop
stc
fidivl
lods
jne
orb
addr16
loopne
adc
cwtl
xchg
push
inc
loope
mov
inc
xor
mov
into
rcll
add
mov
sbb
rcl
pop
lret
aaa
xchg
loopne
add
or
pop
mov
xor
jbe
add
inc
lcall
aas
ret
and
cwtl
in
add
ljmp
fcmovnbe
rorb
or
leave
test
test
in
push
xor
jg
mov
jnp
mov
shll
add
int
jno
shl
adc
xor
or
lds
push
or
pop
hlt
mov
push
jno
addr16
into
push
cmp
mov
sbb
sub
push
and
pop
add
mov
xor
inc
lahf
sahf
clc
xchg
sub
roll
pop
rcrb
pop
pusha
pop
mov
jns
xchg
jo
mov
add
xchg
arpl
jge
ss
pop
mov
inc
jmp
sub
jae
fistpll
movsb
jmp
clc
out
int
cwtl
aam
push
inc
jmp
and
mov
leave
aad
jnp
dec
mov
adc
mov
mov
pop
and
xor
cmp
movsb
stos
icebp
dec
sbb
push
das
icebp
sbb
mov
sbb
orb
adc
mov
mov
add
jne
jb
mov
mov
dec
push
mov
inc
loope
pop
sbb
out
add
sub
ss
dec
xchg
in
das
cltd
dec
int3
mov
bound
into
in
mov
out
mov
xor
mov
inc
lahf
xor
lods
cmpsb
mov
or
and
into
icebp
xlat
je
jbe
scas
inc
dec
ljmp
dec
or
ja
mov
aad
xchg
leave
jb
test
mov
jmp
adcb
rorl
loop
ds
rclb
add
add
push
popf
jns
or
add
inc
dec
mov
ret
loope
mov
sub
xchg
pop
leave
mov
loop
sbb
pop
inc
fsub
adc
ret
rcl
in
cld
fcoms
xchg
repz
movsb
divl
scas
leave
mov
mov
ret
sbbl
push
push
push
xlat
jle
jnp
enterw
mov
xchg
xor
add
leave
jle
adc
jns,pt
and
sub
pushf
lahf
shl
mov
cs
adcl
xchg
js
mov
push
insl
and
pop
jg
inc
inc
jecxz
push
loop
jecxz
ja
out
mov
lods
mov
or
dec
mov
test
cmp
add
je
cmp
es
adc
ja
push
jl
loopne
cli
and
jns
mov
dec
outsb
xlat
dec
and
sbb
cmp
rol
mov
das
sbb
jp
rcr
repnz
inc
sub
nop
mov
cmp
pop
out
and
test
and
push
scas
aas
mov
inc
mov
andl
dec
sbb
xor
inc
dec
fsubrl
adc
mov
or
xchg
lock
sub
scas
mulb
fwait
mov
mulb
icebp
icebp
mov
fsubrs
xlat
and
or
sbb
adc
and
mov
and
popf
inc
jbe
out
insl
mov
xor
xor
mov
and
fiaddl
pop
repz
mov
test
mov
int
iret
jle
inc
mov
pop
add
push
in
sbb
cmp
arpl
movsb
jnp
sub
pusha
pop
or
jmp
xchg
repnz
push
das
insl
jl
push
movsb
inc
test
jns
jno
or
or
loopne
push
ficomps
addr16
movsb
jns
leave
mov
mov
cmp
in
sti
lds
mov
push
mov
mov
xchg
data16
in
rorl
lahf
scas
add
add
sbb
xchg
mov
jg
sbb
push
add
or
mov
cmp
mov
popf
dec
add
mov
imulb
mov
cmp
dec
std
loope
jl
lock
outsl
inc
jp
inc
mov
mov
negl
xor
into
dec
das
mov
xacquire
call
enter
cli
cmpl
outsb
pop
lret
jp
loope
cli
dec
fsubp
scas
cmp
lds
sbb
sbb
lds
push
in
mov
ljmp
popa
aaa
add
mov
cli
aam
into
je
xor
fst
sti
arpl
push
add
addr16
dec
ficompl
nop
xor
add
es
insb
mov
int
mov
xchg
cld
push
mov
jae
xchg
xchg
das
loopne
sbb
xchg
mov
adc
js
sbb
lahf
std
pop
or
cmpsb
pop
or
outsb
popa
add
xlat
fdivrl
push
mov
inc
ret
in
adc
cli
fbstp
push
inc
mov
mov
or
inc
stc
ffree
iret
add
add
and
pusha
shll
mov
jecxz
mov
aam
pop
mov
dec
int
cmp
pop
push
inc
rol
int3
in
int
shlb
bound
push
mov
cmp
divl
cmp
xchg
mov
bound
mov
es
mov
jno
jbe
inc
clc
pop
mov
pop
in
pop
sub
out
mov
scas
mov
bound
fnstcw
out
into
pop
fstp
mov
dec
test
and
das
fbstp
sub
pop
mov
xchg
adc
mov
or
xchg
ss
push
int3
repz
mov
hlt
inc
mov
cld
gs
pop
test
lds
icebp
shr
or
jge
test
sbb
loop
mov
outsb
xchg
std
jg
xchg
ss
loope
hlt
xchg
jmp
xadd
std
dec
sub
out
subb
push
xor
sarb
cmc
sub
inc
test
dec
in
ret
inc
rorb
pop
mov
ljmp
lret
cmp
or
ljmp
xor
arpl
pop
mov
sbb
adc
popf
jae
cmpsb
adc
mov
lock
test
testb
rclb
mov
pop
add
jnp
jge
rol
pop
idivb
cmpsb
movb
sub
rclb
xchg
stos
or
lret
fldt
cmp
std
push
inc
jnp
push
bound
add
cmp
jmp
and
dec
adc
mov
xor
rclb
jg
and
fildll
test
mov
scas
stos
scas
adc
lock
mov
or
inc
data16
ljmp
les
ret
pop
movsb
push
ficoms
gs
int3
or
mov
nop
push
pop
popa
loop
mov
movsl
loopne
pop
int3
cmp
and
xchg
and
mov
lret
jp
mov
bound
mov
jle
scas
lods
and
lods
addr16
arpl
push
shl
and
flds
push
mov
lahf
xor
cwtl
mov
mov
xchg
xchg
sar
les
nop
sub
dec
daa
enter
aam
stos
push
dec
or
push
popa
jmp
shrl
xchg
andb
mov
adc
insb
dec
push
or
and
stos
out
jbe
mov
bound
out
inc
stos
orb
icebp
and
mov
sbb
cmp
jb
dec
leave
dec
add
into
cs
mov
lock
subl
push
push
loope
cmpsb
cs
cwtl
xor
ja
call
lcall
or
test
and
sub
xchg
xchg
testl
pop
iret
loopne
jnp
push
pop
shll
xchg
mov
clc
fiaddl
push
shll
mulb
int3
sbb
cltd
jmp
xchg
cmp
test
aaa
sarb
inc
pop
loope
xchg
loopne
bound
adc
cmpsb
jge
bound
jne
push
imul
daa
jnp
mov
mov
xchg
and
sbb
js
out
pop
cs
inc
push
add
movsb
inc
aas
test
pusha
mov
sbb
popf
xor
dec
notl
sbb
mov
mov
or
pushf
add
jnp
movsl
jl
pusha
cmc
inc
or
addr16
ret
and
push
dec
fucomp
stos
jb
and
inc
fs
out
inc
sub
inc
fdivrl
dec
lahf
push
ja
cmp
mov
or
jecxz
ds
in
adc
test
shl
dec
mov
lods
cli
shrl
aaa
push
fwait
loop
dec
pop
out
sbb
inc
in
or
push
sbb
ret
mov
pop
stos
stc
out
and
jns
lcall
xor
add
aad
jb
sub
sahf
adc
and
and
mov
popa
cld
fcomps
test
jecxz
mov
xor
hlt
inc
rcll
pop
pxor
pop
jl
inc
jp
jnp
nop
loope
pop
and
sti
jle
call
bnd
and
jns
sbb
push
imul
jle
add
sub
test
sbbb
jb
and
movsl
cld
mov
lds
and
lcall
sub
inc
movsb
mov
ror
movsb
lahf
flds
in
out
ret
xlat
std
aas
dec
out
test
movl
test
negl
sahf
repz
inc
pop
movl
jbe
sub
ficomps
fcmovu
fcmovnu
add
inc
sub
cmpsb
aam
out
out
push
mov
jmp
bnd
in
pop
sbb
xor
and
test
repnz
fldenv
fisttpll
cmp
jl
mov
push
cld
pop
sub
push
xchg
clc
mov
sub
ja
xchg
mov
ss
pushf
pop
rclb
repz
cmpsb
imul
xor
xor
pop
aas
and
test
movsb
sahf
push
pop
out
mov
out
jb
inc
jecxz
mov
out
cwtl
inc
enter
mov
xchg
repnz
ja
fcoml
into
cltd
mov
and
mov
lret
ja
call
jg
or
pop
iret
mov
mov
cmp
sbb
xchg
mov
jbe
cmp
addb
das
in
adc
sbb
das
adc
jle
movsl
dec
xor
dec
push
sbb
imul
dec
daa
rclb
xor
add
nop
fwait
xchg
sbb
addr16
test
adc
out
cmpsl
jne
out
outsb
fmull
mov
jbe
fnstsw
add
ret
xor
int
ficompl
jae
cs
push
sub
filds
cld
adc
xchg
push
cmp
dec
jnp
outsl
xorl
xor
cmp
test
and
cmp
in
iret
clc
movb
out
push
int3
push
out
jne
inc
hlt
pop
push
pop
aaa
push
xlat
push
mov
lods
insl
movsb
push
xor
jle
mov
fcoml
js
mov
je
jb
cmp
ljmp
jecxz
lods
in
lret
lahf
int
mov
test
lret
push
je
aam
mov
sbb
rcl
scas
xchg
inc
clc
or
push
add
loop
adc
ds
loope
addr16
inc
adc
xor
cli
pop
push
and
aas
adcb
fisttps
int
jmp
es
cwtl
loope
sbb
call
inc
inc
adc
pop
mov
fisttpl
fnstenv
xlat
cmc
and
add
das
sbb
cmp
sbb
pop
pop
in
jne
ret
sbb
cmpsb
repnz
rcrl
and
ja
or
sbb
shrl
mov
mov
loope
adc
mov
or
lret
fimull
push
mov
dec
or
dec
xchg
outsb
mov
adcl
pop
pop
adc
xchg
out
dec
dec
fnstcw
and
push
push
mov
into
and
hlt
mov
popa
das
xor
and
push
and
mov
outsl
enter
ds
gs
push
xor
xor
cmp
pushf
jns
add
mov
add
pop
popa
adc
negl
inc
dec
inc
ja
lahf
push
xchg
repnz
or
pop
shlb
pop
mov
cmp
outsl
call
jmp
pop
inc
orb
mov
add
mov
dec
daa
mov
and
xor
dec
add
cs
hlt
cmp
mov
es
mov
mov
cs
enter
xorb
and
imul
mov
out
pop
mov
sub
stos
cld
pusha
outsl
shl
cmp
inc
pushf
pop
in
push
mov
or
sub
fisttpl
vpaddw
adc
cmp
shll
jne
std
stc
imul
mov
dec
mov
es
cs
adc
movsb
lea
repnz
sahf
lods
jl
mov
movsb
inc
jae
and
shll
or
mov
out
mov
sbb
xorl
sbb
and
xor
ret
out
push
std
fidivrs
or
scas
pushf
popa
cmp
push
sbb
xchg
push
mov
lods
les
pusha
outsl
push
push
mov
xchg
fildll
sub
ficompl
xchg
gs
fidivrs
cltd
inc
sub
rcrb
jnp
outsb
jl
and
pop
sbb
mov
insb
nop
dec
sbb
test
jmp
cld
sbb
mov
testl
push
fwait
and
adc
pop
push
pop
lock
outsl
imul
jb
inc
sub
mov
out
pushf
jge
pop
push
or
jne
jl
inc
ret
cltd
movsl
lret
es
xchg
js
and
push
jge
adc
aad
nopl
stos
adc
xchg
sub
mov
insl
fs
jecxz
mov
jb
jmp
push
pushl
and
lds
std
loope
push
setbe
pop
sbb
and
cs
sub
sbb
lahf
int
inc
dec
popf
pushf
outsl
xor
mov
xchg
icebp
push
shrl
stos
cli
aad
mov
ljmp
aam
lds
jae
jl
lret
into
push
jecxz
mov
aaa
call
mov
loope
dec
imul
in
mov
sbb
lcall
test
in
lea
fs
std
fs
push
fadds
outsb
sub
push
shl
xchg
add
clc
leave
sahf
dec
add
mov
es
mov
mov
mov
mov
scas
xor
cmp
dec
inc
out
stos
sbb
js
mov
pop
jge
jge
mov
push
cwtl
fwait
rcrl
xor
pop
dec
hlt
mov
add
cltd
jl
loope
inc
mov
cmp
mov
cmp
dec
sahf
pop
ret
jge
jbe
or
inc
ss
jne
out
mov
pop
pop
outsb
mov
pop
push
bound
pushf
shll
push
outsb
inc
scas
mov
or
mov
adc
mov
lods
loope
enter
sbb
movsl
jno
dec
dec
lret
clc
ja
imul
jl
add
push
lods
popa
movsl
mov
into
inc
insl
daa
xchg
mov
ret
mov
ja
mov
lea
ficomps
hlt
or
mov
jl
addr16
cmp
ret
je
jmp
aas
ret
sub
dec
dec
in
mov
sti
jo
std
outsl
inc
pop
xchg
scas
lar
ret
mov
inc
iret
push
mov
and
into
das
jl
into
mov
and
xchg
inc
xor
out
dec
xor
popf
dec
xor
fnstenv
xchg
rcl
cs
xchg
jnp
jnp
lds
adc
test
xor
aam
and
mov
test
mov
mov
sub
cld
mov
fmull
or
dec
aaa
cmpb
dec
mov
push
xchg
js
adc
push
pop
stos
and
pop
imul
fldl
int
cmpsb
inc
fsubrs
aad
sbb
imul
pusha
adc
inc
negl
adc
loopne
or
aas
dec
xchg
mov
test
popa
xchg
fisttpl
push
incb
mov
test
sbb
jge
jne
fcmove
xchg
in
and
cwtl
or
lods
mov
jns
lock
into
cltd
lods
lods
push
pop
imul
adc
mov
imul
add
dec
xchg
popf
pop
ss
mov
leave
mov
fisubrl
xchg
mov
mov
decb
push
mov
xchg
rcll
xchg
and
insb
arpl
xor
iret
xchg
sbb
xchg
push
cld
out
pop
ret
sbb
mov
lret
mov
les
push
frstor
fucomi
xor
cltd
fsubrs
lds
pop
and
or
ljmp
pop
sbb
cmp
and
xor
scas
enter
in
mov
cld
fcoms
xchg
mov
int3
or
scas
fmull
loopne
fucom
inc
and
out
out
dec
iret
dec
int
vmwrite
add
fistpll
lcall
push
cld
xchg
scas
push
or
ds
inc
add
shrb
dec
pop
mov
mov
pop
jne
mov
mov
pop
mov
mov
pop
mov
dec
cmpsl
stos
jle
repz
mov
test
ret
inc
mov
sub
or
adc
push
sub
arpl
lods
cwtl
jns
pop
cmpsl
std
aam
pop
and
sahf
out
outsl
mov
cmp
cmp
dec
cwtl
and
jle
test
test
mov
or
arpl
and
fstpl
lcall
nop
jae
les
lahf
mov
push
bound
adc
dec
insl
clc
inc
sbb
jnp
sarb
cmp
int3
stc
dec
pusha
xor
sahf
fldt
rep
rcl
loope
mov
pushf
or
sub
push
sbb
inc
ss
adc
adc
sub
sub
bound
movsb
lea
inc
adc
ss
mov
mov
mov
xor
iret
cmp
xchg
mov
lahf
int3
and
out
stos
push
add
mov
lret
jns
mov
or
mov
push
sbb
popa
mov
cs
into
js
stos
pop
and
and
ret
inc
add
jle
in
sbb
bound
out
es
out
fildll
sub
xchg
jmp
insl
jb
jp
jle
icebp
push
sub
aam
sar
pop
lea
push
loopne
fcompl
mov
das
push
or
and
cld
or
mov
and
faddl
mov
xor
add
pop
xchg
mov
aam
cmp
fwait
test
mov
ffreep
ljmp
xchg
mov
push
xchg
jb
adc
js
jne
mov
call
imul
shr
inc
loop
xor
cltd
mov
ficoms
cmp
fcomps
push
nop
sbb
add
mov
repz
jle
sub
inc
pop
movsb
sub
lret
add
add
push
test
pop
lret
push
cmp
mov
add
jo
inc
fmull
sbb
mov
adc
or
out
add
and
into
sbb
mov
dec
movsb
sub
arpl
lahf
call
mov
inc
aaa
dec
sti
jne
decb
and
dec
or
aas
mov
lock
jl
xor
icebp
stos
data16
lahf
and
out
cs
xchg
or
lret
jge
paddusb
jle
pushf
ret
icebp
inc
add
inc
inc
mov
xor
mov
inc
in
jl
inc
fldcw
fldcw
fwait
adc
mov
ret
das
fbstp
ficoml
add
out
stos
sub
test
fldl
jbe
mov
flds
inc
adc
mov
push
push
mov
and
push
mov
leave
daa
scas
or
mov
inc
lea
ja
mov
and
call
push
ds
xor
leave
in
andb
jb
ds
xlat
push
xchg
decl
mov
les
mov
in
push
mov
jnp
sbb
loopne
mov
sub
fmull
nop
test
push
ds
lahf
sub
adc
or
mov
or
lea
test
fsubs
nop
jmp
xchg
aaa
sub
jle
push
inc
and
ss
ret
ror
outsl
xor
ficoms
fs
add
in
or
call
mov
rclb
jg
sub
xor
into
and
fsubr
xor
jg
rcll
inc
sarb
shrb
out
mov
mov
sub
xchg
fwait
inc
dec
jge
leave
sar
mov
jno
or
pop
inc
pop
jns
jge
sub
pushf
pop
addl
orb
inc
push
test
ret
push
aaa
mov
mov
dec
jne
pop
xchg
jp
cmp
mov
sub
sti
jae
jno
xor
sbb
sub
add
scas
les
in
shrb
mov
xchg
add
or
push
mov
shll
test
icebp
pop
das
outsl
xchg
fistpll
mov
push
pop
int
inc
pop
fcom
sbb
mov
shll
pop
jo
rclb
dec
pop
int
das
frstor
dec
mov
lahf
mov
roll
push
mov
gs
clc
test
dec
movsl
mov
sub
jbe
and
fistl
jge
into
mov
push
std
xchg
ltr
sarb
sbb
xchg
lods
out
lds
push
bound
in
in
dec
filds
push
pop
jl
add
push
jl
push
xor
lret
sbb
arpl
cwtl
loop
shlb
pop
cmpsb
lock
in
push
test
xchg
xchg
mov
push
cmp
shll
loop
aad
aas
jecxz
leave
ljmp
mov
adcl
inc
and
mov
xor
xor
xor
jnp
adc
adc
in
sbb
sbb
test
popf
pop
adc
pusha
mov
add
mov
xchg
add
sub
mov
cmp
sub
shrl
shlb
testl
aad
push
push
sbb
aam
decb
in
enter
lea
jae
hlt
mov
cmp
sbb
cwtl
mov
pop
xor
sub
mov
ja
fcmovnbe
ja
mov
repnz
test
repz
jno
xor
mov
sarb
inc
outsl
pop
add
cwtl
nopl
mov
jae
pop
xor
inc
dec
adc
rcrb
mov
inc
cmc
in
adc
addr16
scas
sti
fldt
pusha
fstpt
int
or
orb
rolb
xor
daa
jns
lcall
ja
xchg
cmpb
pop
lock
fnsave
out
test
dec
test
clc
push
xchg
insb
pop
inc
cmp
loopne
adc
mov
push
lcall
add
psrld
cmpsl
stos
int
push
fs
or
ret
sbb
lock
ljmp
sbb
push
adc
sbb
sub
les
imul
pop
mov
sahf
mov
outsb
subl
mov
adc
clc
loope
ds
ficomps
out
loop
cmpsl
dec
xchg
mov
add
sub
daa
mov
sub
rorl
iret
cltd
adc
mov
sbb
pop
enter
or
idiv
pop
mov
add
cmp
imul
jg
xchg
aas
cmc
push
insl
hlt
xor
lds
stos
fiadds
pop
push
xchg
das
imul
leave
jnp
mov
sbb
out
das
jmp
fidivs
mov
sbb
in
into
clc
in
in
pusha
stos
adc
and
arpl
leave
mov
xchg
inc
loop
test
push
adc
or
int
js
frstor
movsb
sbb
push
shll
adc
jmp
frstor
lret
jns
adc
call
jle
push
repz
xchg
adc
xchg
or
adc
test
test
mov
inc
jb
and
xchg
jecxz
jno
and
mov
inc
add
adc
fs
sub
js
loop
push
es
xor
mov
add
adc
jns
fwait
lods
push
fnsave
mov
dec
mov
mov
ss
push
sbb
js
std
aad
test
sahf
ds
out
shr
xor
stos
jno
push
jge
mov
push
subl
pop
inc
add
inc
mov
mov
inc
dec
jae
xor
pop
mov
js
mov
movsb
jl
bnd
xchg
xor
sub
mov
imul
bound
stos
dec
cmp
sub
mov
mov
xor
push
mov
sub
loopne
in
mov
out
sbb
notb
ficomps
sahf
cmp
inc
inc
mov
push
test
cmp
xor
pop
cmpb
icebp
push
and
stc
mov
jno
mov
rcr
jmp
fcomp
leave
dec
mov
loope
inc
adc
mov
andb
mov
lea
inc
jecxz
insb
daa
push
repnz
jno
xchg
insb
mov
pop
test
xchg
mov
mov
lret
sbb
xor
adc
fwait
adcb
pop
cmp
pop
jnp
das
cmp
popf
adc
inc
jo
inc
mov
or
ret
cmp
mov
sub
mov
xor
cli
xchg
inc
gs
mov
fs
test
xchg
xchg
fwait
out
jge
push
push
and
add
pop
ja
mov
push
cmp
xchg
loop
pop
jb
leave
cbtw
jne
inc
xor
mov
or
mov
in
mov
mov
push
push
xor
pop
xorl
push
add
arpl
lcall
aas
rcrl
or
xchg
leave
and
or
mov
jecxz
mov
icebp
insb
scas
cmp
cs
cmp
lods
inc
cmp
loopne
xchg
cmp
stos
lds
lock
call
xchg
mov
dec
daa
stc
enter
xchg
xor
inc
jmp
rolb
add
jbe
xchg
sub
push
daa
addb
ja
arpl
sub
inc
mov
cli
lods
add
imul
add
out
ret
lret
mov
popf
cmpsb
xchg
mov
mov
es
std
xor
mov
or
iret
cmp
cmp
jbe
arpl
xlat
add
dec
bound
push
iret
push
test
mov
adc
sub
sbb
imul
dec
out
sbb
iret
or
xchg
mov
push
dec
mov
pop
lcall
outsl
jg
dec
mov
jb
mulps
fcmovne
sbb
cld
xchg
scas
sti
push
cmp
add
inc
inc
rcrb
orb
mov
ja
test
xchg
jno
lret
pop
or
sbb
inc
fstpl
clc
adc
push
sub
idivb
sub
adc
fistps
inc
adcb
out
cmp
xchg
xchg
push
cltd
sub
inc
aas
jns
fwait
stc
xor
inc
sbb
pop
jle
mov
jge
adc
pop
ds
push
loope
nop
arpl
push
sbb
es
adc
ret
scas
inc
mov
fisttps
inc
ret
notb
into
dec
xorl
insb
lahf
sub
sbb
cltd
inc
movsb
xchg
movsl
out
fildl
stos
mov
les
in
popf
cmpl
and
stos
mov
das
lds
lcall
jmp
and
sbb
dec
fnstenv
cmp
xlat
xor
mov
adc
sbbb
gs
xor
sbb
test
lea
out
test
and
jae
jns
lods
cmp
arpl
add
ja
cmp
xor
push
adc
sub
or
sbb
cmc
push
in
les
iret
inc
xor
test
or
andb
add
inc
movsb
cmp
and
sub
scas
cwtl
add
mov
lcall
or
push
cmpsb
jb
adc
mov
or
fldt
rep
repz
jecxz
cld
cli
aaa
mov
push
add
popa
add
jbe
scas
and
sbb
mov
ret
sub
or
pop
push
clc
sbb
xor
mov
pop
ljmp
inc
jne
mov
push
jp
inc
cmp
loop
sub
or
sar
dec
ficoms
mov
rep
jns
inc
imull
sub
test
subl
out
pop
adc
test
pop
push
ret
mov
jecxz
and
jo
add
cmp
push
test
xchg
lds
enter
and
clc
sbb
cmpb
icebp
inc
lds
popa
pop
xchg
iret
xchg
ljmp
cmp
xchg
leave
push
dec
sbb
jbe
aad
sbb
call
jg
popa
mov
cmp
jne
jno
push
roll
iret
test
xchg
inc
fisttpl
mov
loopne
mov
mov
cmp
popf
adc
add
xchg
push
aam
aam
aaa
xor
rcr
push
es
push
push
xorl
and
dec
aas
fnstsw
pcmpgtw
pop
mov
xor
cmp
scas
adc
in
outsb
mov
push
lock
aaa
test
icebp
mov
xchg
push
pop
xor
lds
or
clc
mov
mov
mov
push
jge
add
adc
mov
mov
xor
inc
sub
rorb
loope
aad
inc
inc
incb
sbb
ret
clc
leave
test
dec
xor
cmp
xlat
rcrb
je
dec
add
js
jge
add
sbb
lock
ja
xchg
into
add
add
lods
iret
fiaddl
xor
push
cmpsb
mov
mov
mov
mov
stos
mov
stos
jl
add
push
daa
inc
push
cmp
testb
sub
adc
test
or
test
je
rcll
jmp
into
fdivrl
and
enter
call
flds
xor
stos
mov
jb
push
sbb
or
inc
inc
xor
leave
sbb
scas
inc
aam
push
mov
pop
mov
lret
mov
insl
pop
in
pop
ret
mov
mov
inc
scas
dec
lods
add
out
sub
outsl
call
push
jp
fldl
mov
add
ljmp
add
cltd
ljmp
and
push
sti
call
pop
sub
mov
nop
outsl
sbbb
jle
pop
push
or
sub
fstl
cmp
push
jb
pop
mov
cmp
mov
inc
clc
inc
frstor
cld
aaa
int3
or
lret
push
das
add
repz
fldl
sub
leave
repz
mov
dec
jb
inc
or
inc
aas
lret
xor
or
push
xchg
sub
loop
adc
pop
mov
or
call
pop
mov
out
ret
push
xchg
sub
cmp
pop
or
adc
dec
popf
mov
push
in
les
scas
or
test
jae
mov
inc
lock
fiaddl
cmp
pop
les
xor
xor
or
inc
mov
in
xchg
dec
jmp
mov
pop
cltd
add
lock
dec
addr16
jo
push
xchg
cmp
xchg
inc
insl
push
or
or
pop
push
mov
push
insl
insb
pop
push
push
shll
jae
pop
cmpsb
push
gs
add
mov
test
aad
testl
mov
loope
inc
lock
aad
xor
retw
popf
jnp
pop
lods
inc
inc
js
mov
push
cs
fidivs
mov
push
shlb
cmp
aam
popf
stos
or
or
push
mov
call
dec
xchg
lcall
push
dec
and
insb
mov
movsl
xchg
out
sbb
push
outsl
and
add
inc
lcall
dec
test
shlb
pop
into
dec
pop
in
push
fldt
mov
and
push
xchg
pop
pop
xor
adc
jbe
xor
bound
jno
jns
cmp
jmp
lods
jns
adc
sub
stos
loope
pushf
pop
and
dec
xor
push
mov
jecxz
push
leave
popa
xor
or
fwait
pop
add
shlb
mov
jo
mov
xchg
iret
pop
xor
or
pop
or
in
mov
jae
xor
sub
xchg
call
xor
movsb
push
dec
jo
test
mov
mov
movsb
enter
jno
ljmp
hlt
add
out
jl
jne
jbe
add
movsb
outsl
xor
inc
mov
xor
dec
stos
push
push
jecxz
in
cmpsl
imull
lret
mov
mov
movsl
push
mov
loope
mov
popl
rclb
mov
inc
leave
push
mov
mov
dec
out
cmpsb
mov
popf
fistpl
lock
and
sub
hlt
fistpl
add
inc
xlat
cld
inc
arpl
subl
or
cmp
add
negl
add
hlt
loop
shlb
pushf
aad
and
shrb
call
popa
push
xor
out
popw
xchg
fs
jnp
loopne
dec
push
lcall
mulb
sar
out
jns
ja
mov
pop
push
hlt
jmp
pop
adc
and
jge
push
cmp
adc
rol
nop
lcall
mov
and
inc
out
add
mov
call
int3
xor
pushf
les
mov
mov
ss
mov
fcoml
or
les
jle
jbe
pop
aas
jno
xlat
push
and
push
or
mov
pop
bnd
mov
nop
sub
repz
call
pusha
push
stc
push
pop
rolb
test
push
out
pop
lea
jns
push
inc
in
jns
and
sti
xor
fnsave
sbb
cwtl
loopne
daa
clc
cmp
push
adc
icebp
jp
mov
mov
orb
dec
xor
pop
popa
loopne
cmp
in
push
fnsave
and
fbstp
outsl
lret
and
test
pop
adc
inc
xchg
adc
lock
push
or
fisttps
pop
jle
sub
icebp
mov
jne
arpl
dec
and
not
arpl
push
xchg
push
hlt
orb
out
adc
orl
add
cmp
and
push
rcr
sub
xchg
int3
push
fcmovb
nop
mov
pop
gs
mov
repz
sub
outsl
test
cld
clc
jne
mov
inc
xor
rclb
lret
cld
add
sub
jae
jns
add
movsb
dec
insb
adc
rcl
dec
push
in
push
mov
popa
icebp
sbb
loope
add
cvttps2pi
xorl
sub
push
and
add
cmp
lahf
push
push
mov
aam
je
test
pop
js
dec
out
pushf
mov
stos
xor
je
cltd
test
test
lahf
insl
hlt
pop
xor
push
adc
mov
adcl
and
push
call
fnsave
loope
xor
ja
jecxz
pop
jecxz
adc
sarl
cmc
into
call
dec
lods
and
pop
mov
test
jbe
xchg
mov
or
mov
xor
dec
xchg
inc
pop
and
test
cmp
jg
fsubl
lret
fcmovb
repnz
and
jb
fsubs
mov
inc
xchg
sbb
fwait
in
xor
cs
test
movsb
repz
xor
mov
in
in
jb
fucom
push
cmc
mov
jmp
divl
fnstenv
xlat
jnp,pt
add
cwtl
jecxz
jp
aas
lahf
cltd
in
fs
cmpsl
or
into
push
mov
lods
push
dec
push
mov
shl
insb
repz
pop
and
mov
xchg
push
mov
mov
stc
loope
pop
fs
in
dec
rcrb
lock
adc
cmc
loope
push
aad
jne
push
cmp
int3
js
test
adc
mov
mov
loop
mov
gs
cmp
arpl
lods
pop
pop
mov
or
stos
imul
inc
mov
mov
dec
sbb
lock
sbb
test
pop
int3
push
pop
loope
inc
repnz
je
leave
adc
adc
mov
mov
scas
bound
aad
fsqrt
in
xor
pop
inc
adc
jne
imul
divl
xchg
int
fisubs
add
movsb
jnp
or
hlt
imul
xor
mov
fsubrl
dec
scas
xor
or
mov
mulb
mov
enter
xor
mov
mov
outsl
clc
xchg
push
aaa
add
stos
inc
sbb
std
ret
mov
aad
cltd
das
jb
add
xchg
add
mov
adc
outsb
out
xchg
jae
inc
fstl
lock
popf
xor
out
push
sahf
mov
mov
xor
fisttpll
mov
xchg
or
pop
sbb
push
or
push
cmp
jnp
jo
inc
dec
shrb
call
lock
clc
xchg
or
push
sub
dec
sbb
int3
loopne
jge
mov
daa
or
jnp
adc
rcl
adcb
xchg
lcall
mov
jne
gs
dec
xchg
mov
out
imul
cwtl
in
jno
aaa
mov
in
sbb
movl
hlt
ficoml
xor
dec
push
inc
adc
test
mov
pop
adc
mov
int
xchg
mov
imul
out
push
dec
mov
pop
outsl
xchg
out
cmpsb
in
sbb
xchg
out
ret
xor
xor
cmc
fsubrl
jmp
mov
fidivs
jae
xchg
mov
push
jg
icebp
lahf
or
aad
and
jg
and
pop
pop
xchg
xchg
push
sbb
jne
push
jp
sub
dec
and
xor
pop
mov
mov
out
sub
aaa
out
push
scas
xlat
adc
cmp
pop
xlat
ret
xor
je
push
jl
insl
push
mov
icebp
push
fcmovne
movsl
enter
mov
movl
scas
mov
stos
sbb
fldcw
mov
and
push
inc
call
aam
inc
insl
arpl
push
push
test
sub
pop
je
pushf
sbb
xor
imul
out
sbb
mov
iret
je
xchg
pop
xchg
stos
outsl
lea
in
pop
adc
adc
in
ja
lock
push
xchg
and
cmp
sub
mov
and
mov
icebp
mov
ja
fisttpll
pop
mov
std
cwtl
mov
insb
ja
dec
inc
add
mov
or
movsb
dec
ret
das
data16
js
pushf
ss
fisttpll
and
push
dec
fstl
mov
adc
xchg
add
xchg
stc
out
jae
pop
js
loope
xchg
imul
lret
cmp
mov
add
sbb
lret
loope
xor
js
call
fwait
add
fstpt
cmp
les
xor
pusha
arpl
dec
inc
in
or
pop
lcall
outsl
dec
mov
add
mov
add
popa
in
inc
mov
inc
andb
pop
mov
pop
pop
push
jb
stc
pop
pop
sti
or
cwtl
inc
dec
jne
lods
jno
lds
arpl
dec
call
ret
mov
xchg
jecxz
aaa
push
inc
adc
ret
or
in
jp
jbe
fldl
jecxz
mov
or
popa
mov
insl
loope
dec
in
inc
dec
jl
push
mov
iret
xor
pop
push
fbld
outsb
sub
test
loope
sbb
pushf
and
lea
inc
cs
rolb
add
sti
leave
jb
out
adc
and
pop
sub
sbb
adc
hlt
roll
sub
sbb
out
movsl
inc
push
add
sbb
negl
fbstp
mov
jl
dec
fstpl
cmp
adc
pop
adc
mov
xchg
clc
cmp
cmpl
loop
lahf
pop
out
sub
test
adc
and
inc
mov
add
inc
mov
xor
mov
push
cmp
popf
pop
outsb
and
fwait
push
add
data16
or
jp
pop
inc
lea
mov
sbb
xchg
sbb
sub
into
mov
push
int
and
mov
xchg
outsl
pushf
outsl
fildll
clc
pop
fstl
mov
cmp
cwtl
icebp
cmp
test
adc
inc
popa
imul
xchg
bound
lock
ja
fadd
mov
jmp
nop
push
sub
fs
push
lret
mov
xor
fdivl
xor
push
mov
dec
mov
loope
push
sub
push
loopne
pop
stos
pop
mov
sbb
lahf
jbe
cmc
cmp
push
push
test
stos
ss
sarl
jecxz
data16
inc
sub
sub
inc
mov
fsubr
mov
scas
mov
arpl
mov
fmul
xor
pop
pop
fnstenv
lock
or
xchg
pop
jp
xchg
lret
mov
mov
stos
xchg
ja
push
pop
popa
mov
mov
or
jae
and
js
mov
and
cmp
inc
pop
push
test
movsb
faddl
pop
xchg
cmpsl
xor
cwtl
lcall
in
or
adc
jo
cltd
addr16
mov
lea
fmuls
inc
push
inc
sarb
jb
jnp
sub
inc
outsb
push
lds
scas
mov
dec
popa
sti
cli
ret
sbb
xor
mov
push
adc
ret
mov
cmpsl
inc
out
test
mov
mov
adc
inc
aas
push
and
aaa
aad
loopne
in
sub
bound
or
or
pop
xchg
aam
orb
sub
imull
nop
jp
xor
pusha
lret
stos
in
popf
mov
cmp
jne
pop
dec
pop
mov
leave
les
scas
push
xor
clc
xor
pushf
enter
mov
sbb
sub
push
cwtl
pushf
cli
adc
fucomip
ljmp
clc
add
inc
rcrl
add
insl
jae
iret
mov
inc
scas
popf
xchg
lret
mov
shlb
add
cltd
in
dec
fwait
mov
out
lret
xchg
adc
int3
xor
lret
testb
mov
sbb
out
xor
cmp
pop
je
arpl
mov
push
inc
into
push
adc
add
xor
aam
sbb
clc
add
js
push
xlat
cmpsb
xor
cli
or
movsl
xlat
sarl
mov
or
test
flds
pcmpgtb
mov
xchg
lahf
or
icebp
add
sub
or
mov
cs
shlb
pop
pop
test
insb
and
mov
test
in
scas
push
dec
test
sbb
mov
or
sbbl
mov
and
dec
out
cmp
das
stos
popa
mov
cmp
add
jecxz
and
in
clc
lea
sahf
push
pusha
jnp
add
out
insl
or
sub
outsl
subb
sti
sub
xchg
iret
loop
leave
scas
lock
popa
daa
mov
dec
repnz
adc
jbe
jmp
push
push
cwtl
hlt
into
sbb
push
adc
jecxz
repnz
dec
mov
sbb
pusha
fimull
or
jbe
cmc
stc
mov
pop
mov
fmuls
out
clc
shrl
or
mov
mov
jae
pop
mov
in
cld
jns
xchg
incb
pop
jmp
add
mov
mov
out
inc
ljmp
cmc
jno
and
pop
mov
adcl
add
addr16
mov
push
pop
sbb
imul
or
inc
cld
adc
push
push
adc
cmp
dec
out
hlt
xor
pop
xor
xor
sub
out
mov
jns
shll
lea
addr16
pop
xor
cmp
imul
pop
test
into
lahf
inc
jmp
cs
pop
mov
sbb
jmp
mov
arpl
push
dec
mov
push
add
xchg
inc
loope
test
decl
jb
mov
or
jbe
mov
insb
shr
je
adcl
mov
or
xchg
adc
fwait
adc
and
jmp
pop
sbb
adc
hlt
xchg
scas
cmp
mov
sbb
and
dec
jecxz
and
or
adc
pop
xchg
push
pavgw
pop
pop
jne
xchg
cs
rorl
push
sbb
fbld
mov
nop
push
xor
inc
sub
out
jno
movsl
into
nop
sub
out
in
cwtl
lahf
or
clc
cs
jl
mov
push
and
adc
icebp
push
dec
imul
outsb
fs
fisttpll
or
outsb
xchg
dec
pop
lret
push
int
and
pop
in
fs
jae
leave
sub
outsb
lret
popf
das
and
dec
mov
adc
pop
mov
mov
mov
mov
jmp
adc
add
dec
imul
js
mov
inc
sub
push
xchg
cmp
mov
sar
adc
pusha
cmpl
xchg
jo
push
push
jp
adc
add
or
pop
fsubs
mov
mov
jnp
gs
scas
stos
mov
xor
mov
inc
dec
jno
and
fs
cmpsb
andl
and
rcr
and
mov
push
in
repz
mov
xchg
or
fisubrl
scas
js
cmp
in
dec
imul
jl,pt
add
js
lods
int
push
jae
data16
inc
and
push
or
stos
lea
cmp
imul
mov
aad
xchg
adc
repz
aam
ja
sahf
in
pop
push
stc
popa
dec
enter
lock
addr16
xchg
mov
push
imul
adcl
pop
adc
mov
mov
icebp
jb
xor
mov
lret
loop
dec
in
push
or
jg
inc
mov
mov
xchg
sub
scas
ss
gs
and
lret
sub
dec
sub
into
iret
ficompl
cmp
pusha
pop
hlt
mov
rorb
popa
ja
jae
dec
push
notb
dec
cmp
jl
and
shl
cwtl
mov
pop
cmp
std
aas
pop
mov
out
mov
arpl
pop
dec
pushf
enter
adc
inc
lret
ljmp
clc
mov
inc
insl
stos
fists
bound
test
jo
fcomip
push
add
aam
mov
mov
adc
inc
ret
lcall
mov
mov
xchg
sarb
icebp
or
jbe
nop
and
sub
push
jmp
jnp
aam
lret
lcall
movsb
movsl
pop
xor
push
pop
addr16
adc
mov
dec
scas
xchg
sub
sti
lds
addl
and
nop
fs
mov
loopne
push
aas
or
leave
sub
in
andb
sti
imul
or
ret
sub
sbb
arpl
in
xchg
cmp
les
or
je
mov
in
adc
jg,pt
mov
cmpsb
cmpsl
xchg
stc
mov
jle
hlt
mov
adc
push
imulb
dec
mov
scas
jle
mov
xor
and
int3
sub
int3
and
jp
insb
sub
fildll
std
inc
adc
in
loop
push
mov
test
xchg
lds
cmpsl
or
mov
in
ficomps
and
aam
mov
or
ret
push
xor
xor
xchg
rcl
leave
cwtl
mov
or
ret
call
pop
mov
aam
stos
bnd
call
cmp
outsb
mov
bound
mov
out
sarb
inc
nop
mov
fwait
test
adcb
cmp
out
sub
xchg
stos
sub
fiadds
push
dec
xchg
mov
je
mov
sbb
ret
cmp
gs
xor
dec
cltd
scas
roll
sti
cmp
add
les
fwait
in
pop
xchg
and
mov
xchg
jmp
fcmovbe
mov
xchg
loop
pop
fs
jnp
js
cs
add
pop
loope
ret
pop
dec
xor
sub
and
idivl
sub
rcrl
mov
pop
out
mov
loope
rol
pop
pop
repz
cmp
arpl
xchg
jp
cs
mov
fiaddl
cwtl
fstp
sahf
int
outsb
popf
les
loope
push
push
adc
test
fistpl
jae
loope
popa
add
and
popa
popa
dec
loope
sbb
xor
jp
js
push
xor
xor
xchg
sbb
xchg
push
jbe
in
pop
cmp
cmp
popa
cmp
imul
push
lret
or
mov
or
sub
sub
mov
xlat
in
testb
js
call
pop
or
mov
mov
cmp
les
inc
leave
pop
pop
pop
push
mov
out
sub
mov
iret
or
sbb
lds
fisttpl
xchg
loop
leave
imull
jle
fwait
jge
shrl
pop
sbb
mov
xchg
je
push
cmp
jl
xchg
mov
sti
add
testl
push
jecxz
add
sbb
cmp
sbbl
xor
pop
adc
xor
cmp
es
xor
imul
cmp
pushf
in
int3
sbb
mov
sub
sub
scas
scas
mov
sub
mov
scas
push
sub
adc
jns
pop
mov
cmp
aad
stos
idivl
hlt
lea
movsb
jo
int
leave
orl
scas
push
jae
mov
dec
ret
xor
add
sbb
xchg
rcl
mov
lods
adc
sub
sub
pop
sarb
pushf
aam
ret
jge
inc
divb
dec
inc
popf
rolb
jg
xor
fcmovne
loope
mov
sbb
mov
dec
ret
pop
pop
sbb
xchg
xchg
in
int3
dec
decl
js
lret
push
fistl
mov
xchg
mov
fs
push
or
push
inc
lcall
lea
nop
shlb
cmp
or
push
fwait
movsl
adc
xor
mov
inc
leave
in
xchg
cmc
push
sub
pop
or
jecxz
xchg
push
sbb
das
popa
aaa
xor
adc
decl
adc
faddl
lds
push
fidivs
sub
arpl
cmpsl
mov
adc
xchg
cmp
in
pusha
mov
adc
mov
hlt
stc
lret
cmc
sbb
pop
cmp
mov
adc
push
out
lock
dec
outsb
addr16
sub
pushf
mov
in
cmc
push
bound
maxps
mov
mov
add
and
dec
sub
cs
xor
sbb
pop
pop
inc
test
into
push
aam
rorb
push
ret
leave
arpl
mov
cli
ja
ficoml
pushf
cmpsb
cmp
hlt
sbb
add
adc
les
or
test
dec
and
jnp
mov
mov
sbbl
stc
pop
jge
repnz
sti
and
inc
cld
repz
xor
mov
pop
cmp
pop
inc
xchg
adc
je
shl
dec
sbb
dec
mov
or
call
mov
jmp
mov
jge
loopne
inc
jnp
dec
js
sub
pop
sub
enter
and
and
mov
lods
sbb
and
jns
aas
and
das
mov
sub
adc
cmpsl
aaa
jbe
jl
sub
jnp
pop
loope
jae
in
rcrl
mov
pop
fs
test
outsl
and
inc
add
loopne
int3
roll
jle
rcr
sbb
lea
out
mov
push
dec
xchg
and
lret
push
bound
shrl
dec
scas
ret
test
pop
test
loop
and
lods
repnz
lret
lock
arpl
push
push
xchg
push
test
or
pop
es
mov
inc
push
jbe
sbb
jb
imull
lods
ffree
jp
pop
fstpt
aam
fs
rorb
sarb
rcll
ds
add
stos
out
xor
insb
fisttpll
or
int
cmpsb
xor
dec
fst
jae
push
out
jecxz
pop
js
jge
inc
mov
test
lock
js
pop
je
ljmp
inc
filds
lea
mov
cmc
call
les
add
shrb
mov
cmp
insb
adc
or
inc
outsb
push
or
adc
repnz
sub
imul
outsb
je
push
jl
push
cwtl
int3
sub
xchg
sbb
xchg
icebp
inc
add
insl
shll
sub
or
mov
dec
push
lret
fldenv
sqrtps
mov
or
push
push
insb
nop
and
jmp
repnz
mov
imul
push
jno
sbbl
sarw
std
or
cmpsl
popa
inc
and
and
cmp
jp
rorl
lcall
in
mov
fs
loopne
sub
cmp
std
cmpsl
push
fs
dec
and
jle
lods
popf
push
push
lods
stos
loop
mov
push
gs
add
loop
push
xlat
pop
pop
sub
sbb
mov
popa
mov
jo
enter
int3
mov
scas
int3
test
inc
aad
or
aad
dec
popf
mov
int
mov
push
je
mov
dec
mov
sub
mov
fwait
lods
sarl
add
sbb
and
push
in
mov
and
lods
push
pushf
mov
lock
inc
sbb
iret
adc
outsl
js
sbb
in
sti
xor
ds
jo
pushf
sbb
push
repnz
int
lcall
loope
gs
xchg
aam
js
fstl
cmpsl
push
ret
outsl
xor
lods
sahf
jmp
lods
cwtl
scas
push
push
lea
jnp
pop
je
in
je
imul
add
addr16
inc
xchg
jp
mov
hlt
mov
and
jns
mov
frstor
fnsave
cmp
sub
test
fistpll
adcl
mov
popf
idivb
xchg
xchg
push
subb
aad
cli
fldt
pop
shr
mov
or
idivb
mov
pop
push
or
out
or
fistps
dec
jne
mov
data16
mov
sti
pop
pop
outsl
push
test
and
jbe
test
movsb
scas
inc
inc
or
test
mov
clc
xchg
stc
mov
dec
pop
leave
dec
or
call
inc
add
gs
sub
cmc
mov
js
leave
ss
ret
inc
lock
pop
or
mov
and
les
stos
in
icebp
cmp
mov
add
jns
leave
daa
stos
inc
cs
ficomps
or
jmp
inc
mov
add
sub
sub
scas
rol
sub
cmp
pop
rorl
sub
ret
lret
dec
testl
mov
cmp
fdivr
pop
andl
xchg
lahf
push
pop
push
xchg
es
add
inc
lret
stc
dec
ret
xchg
xlat
sahf
push
mov
pusha
js
fdivr
jg
pop
cmp
cmp
or
push
clc
enter
lret
pop
repnz
sbb
jle
test
mov
iret
inc
and
sbb
iret
loop
gs
hlt
jle
call
call
jne
cmp
leave
pop
and
stos
xlat
sub
push
mov
jge
enter
sti
cmp
jmp
js
lds
cmp
jecxz
sub
push
xchg
bound
mov
push
addr16
mov
icebp
mov
or
dec
stos
and
repnz
sti
add
cli
das
adc
mov
jbe
and
fcomps
mov
fs
mov
faddl
test
dec
mov
das
cmp
sarl
inc
arpl
cmp
xor
mov
push
jmp
push
xor
loopne
add
jg
mov
add
loop
repnz
fcompl
insb
inc
outsb
ret
testb
mov
pop
scas
dec
mov
rorb
jb
inc
inc
or
pmuludq
xchg
mov
push
shlb
and
mov
jno
addr16
jge
aad
sbb
pop
push
popf
stc
arpl
fwait
push
in
xor
push
icebp
pop
adc
pushf
ljmp
ret
int3
cmpsl
inc
cld
ljmp
mov
fst
inc
dec
inc
mov
sbb
out
rorb
add
xor
xchg
add
mov
leave
out
xchg
daa
mov
and
add
adc
push
push
shr
jl
or
xor
out
jne
sbb
inc
aam
jb
stos
test
xchg
es
xor
nop
xchg
mov
in
push
test
fs
xchg
and
enter
rcrl
shrb
je
sbb
cmc
push
dec
mov
aad
fwait
or
mov
dec
imul
scas
mov
xor
xchg
sahf
sti
icebp
jno
dec
loopne
or
into
lret
add
lahf
mov
jg
xor
mov
mov
xor
fwait
cmc
ret
jae
and
test
negl
mov
aad
adc
lret
or
dec
stos
movsl
fdivs
test
ds
lock
subb
fwait
negb
mov
inc
stos
aam
aaa
mov
roll
lret
nop
repnz
fcomip
mov
icebp
mov
xchg
xor
xchg
xchg
pushf
sub
daa
mov
in
ret
push
mov
xor
pop
mov
push
dec
rcl
xchg
insb
inc
adc
sub
pusha
inc
inc
mov
xchg
fstl
pop
sbb
stos
notl
push
or
aam
psubq
shrl
mov
stos
aad
mov
fadds
aam
sbb
ret
cmpsl
leave
fidivrl
mov
jl
sub
mov
cmp
mov
jbe
xchg
inc
mov
lret
lret
dec
mov
dec
sbb
xchg
sub
test
lock
fsub
push
stos
lods
push
lods
cmp
shll
jecxz
cmp
shll
sbb
out
sub
mov
add
xchg
pop
jbe
push
out
dec
jmp
xor
inc
pop
add
gs
sti
andl
in
adc
xor
sub
and
ja
stc
jp
mov
dec
pop
mull
arpl
cltd
out
mov
mov
sub
add
mov
pop
jecxz
pop
ja
lret
mov
sbb
sbb
fisttpl
xor
or
xchg
cld
jno
sub
jl
pushf
pop
cwtl
int
xchg
lcall
mov
pop
inc
push
add
mov
movsl
test
or
insl
out
jecxz
sub
cmp
out
roll
cltd
ljmp
xchg
dec
xchg
insl
push
shrl
push
pop
jg
mov
nop
clc
cmp
pushf
lcall
mov
cli
push
mov
push
out
dec
push
scas
lea
iret
incl
fdivr
cmpsb
mov
push
ja
jge
add
mov
sub
adc
ss
std
inc
sub
js,pt
add
push
scas
and
push
pop
inc
jp
les
cmp
or
dec
test
pop
xchg
push
outsb
adc
cmpsb
adc
movsl
repz
push
lock
lret
shlb
push
je
cmc
push
push
mov
aas
inc
jnp
movsb
popa
sub
add
lcall
pop
dec
mov
xchg
aas
in
cli
cli
jp
push
or
pop
out
lea
filds
add
inc
addr16
outsb
push
sbb
xchg
mov
push
mov
mov
jae
test
test
fdivrl
sahf
jp
repz
sbb
jno
xchg
adc
xchg
jp
sbb
fisttps
loopne
les
sahf
insb
movsb
jmp
subl
bound
adc
je
jge
and
dec
push
aaa
and
xor
ds
rcr
ret
mov
stos
ficoml
hlt
outsb
mov
mov
std
sbb
cmc
fwait
ljmpw
lds
ds
xor
dec
pop
push
lahf
aam
fnstsw
call
sahf
sbb
sti
es
imul
mov
in
inc
mov
dec
subl
dec
adc
pop
jno
pusha
jl
jecxz
mov
xchg
xor
and
neg
outsb
jle
inc
nop
cmp
inc
ljmp
cld
mov
les
stos
fidivrl
std
dec
out
xchg
cli
adc
xor
rolb
pop
sbb
sub
adc
leave
mov
pop
xchg
sub
and
jnp
xchg
jecxz
adc
cmpsb
js
adc
cmp
mov
aad
add
inc
sti
shll
xor
or
push
add
sbb
lds
pop
push
xor
xor
xlat
mov
mov
jnp
pop
mov
je
shll
rorl
insl
add
sbb
aad
jmp
inc
pop
push
hlt
ss
mov
les
jno
xor
mov
movsb
mov
inc
jo
rcrb
cmp
push
push
add
mov
data16
lock
xchg
into
shl
push
xchg
test
xor
jge
out
lds
inc
jg
test
ret
pop
incb
xor
xchg
mov
mov
jecxz
jno
mov
adc
and
bound
mov
mov
or
aas
mov
mov
sub
dec
repnz
jae
stc
xor
pop
mov
lods
scas
inc
and
jge
aam
dec
movsl
sbbb
fdivl
xor
imul
inc
int3
xchg
mov
shrb
mov
insl
mov
stos
into
cwtl
inc
arpl
lock
ss
mov
icebp
bswap
lret
xlat
scas
lret
push
into
and
cwtl
cmp
test
mov
das
and
add
or
mov
mov
mov
xchg
jns
push
test
dec
pop
pop
movsb
fldt
movsb
xor
push
repz
inc
fimull
arpl
adc
push
test
jle
cs
jno
mov
outsl
jno
orb
fnsave
repz
sub
push
or
xor
ljmp
xor
push
loop
nop
fwait
jp
jp
ss
cmc
xchg
pop
js
fadds
stc
or
xchg
test
fsubrs
inc
aas
inc
cmp
pop
mov
cmp
movsb
adc
lcall
pushf
loopne
push
fs
pop
pop
mov
mov
pushf
push
dec
sub
test
add
subl
or
cmp
jne
mov
mov
mov
es
jbe
and
test
pusha
or
jp
data16
sti
and
rep
repz
cmp
or
and
jno
mov
inc
mov
leave
xchg
pushf
dec
in
fcompl
in
lret
mov
rcrb
mov
mov
push
mov
pop
inc
mov
arpl
je
fs
mov
aad
push
adc
lds
jl
insl
std
adc
mov
scas
fistps
fst
pushf
loop
subl
jbe
push
rolb
loopne
xchg
and
aas
sbb
or
les
pop
push
cmc
testl
adcb
pop
push
push
cwtl
fs
push
push
dec
xchg
hlt
leave
jecxz
jb
movb
lea
push
and
and
mov
xor
loop
or
repnz
fimull
or
cmpsl
clc
adc
and
movsl
mov
enter
popa
or
mov
insl
shr
lock
ss
fstl
or
pop
mov
xorl
add
out
and
cwtl
mov
jge
push
lahf
jecxz
jle
jle
popa
or
add
adc
jo
sbb
push
dec
and
lret
subl
popf
pop
xchg
fnstsw
sbb
jb
es
adc
xchg
mov
subps
fld
mov
add
push
sub
and
fistps
inc
movsl
movsl
and
dec
inc
aaa
jmp
loope
mov
push
mov
xlat
iret
shrl
insb
adc
inc
inc
str
push
int
jbe
or
or
call
lret
push
loop
mov
fwait
jnp
aam
mov
out
jl
pop
xchg
mov
jecxz
mov
pop
or
insb
inc
mov
mov
in
andl
push
adc
inc
mov
pop
mov
lret
out
mov
arpl
inc
cmc
cld
push
cmp
pop
fldl
nop
adc
inc
lods
ja
sub
cmp
lea
iret
je
lods
fdivrs
mov
inc
mov
test
enter
mov
push
das
movsl
sbb
pusha
imul
xchg
cmp
xor
stos
rol
aaa
leave
pop
int
je
mov
lea
adc
repz
movsb
fs
inc
jp
add
call
jle
jl
pop
fiadds
mov
add
sub
xor
jg
sub
or
leave
div
sub
dec
lods
out
int
das
mov
icebp
dec
sbb
push
addr16
mov
nop
jg
mov
and
sub
mov
ret
xchg
fwait
fs
dec
jmp
orl
mov
mov
divl
xorl
cmp
bound
or
outsl
mov
outsl
popf
shl
xchg
sub
jb
lcall
push
data16
fbld
ret
mov
jns
inc
mov
xchg
shrl
enter
mov
adc
pop
add
dec
enter
in
in
push
and
inc
mov
sbb
cs
jno
adc
in
lea
inc
or
scas
ds
aas
xor
retw
ret
insb
jne
jo
outsb
add
xlat
and
scas
push
and
testl
imul
cmpsb
pop
loopne
jne
sbb
loope
jae
xor
in
jecxz
pop
and
inc
fs
jmp
inc
cld
cmpsb
arpl
ret
inc
ret
or
xchg
and
ja
scas
dec
fbld
loopne
adc
mov
sbb
ljmp
or
cmc
add
rcll
sbb
xchg
xor
stos
loope
fwait
mov
out
dec
pop
out
xchg
subl
adc
push
popf
adc
dec
stos
jge
dec
cmp
xorb
jge
inc
and
cmp
jno
pop
movsl
scas
push
cwtl
inc
mov
les
test
popl
test
push
xor
mov
sub
jle
inc
imul
cmp
gs
inc
fcmovne
js
aas
clc
and
or
mov
mov
xchg
jnp
das
cs
sahf
add
push
jb
jnp
or
test
ja
push
inc
sarl
push
xor
hlt
ds
into
hlt
std
lahf
iret
add
jno
popf
cs
in
jmp
idiv
push
lahf
pop
push
les
mov
mov
ret
and
cmp
and
inc
fistps
dec
cmp
frstor
out
fsubs
test
imul
and
pop
mov
pop
btrl
inc
cltd
jecxz
out
ds
scas
mov
aaa
sarb
aas
sub
ss
scas
inc
ret
cmpsb
cmp
ljmp
js
popf
cwtl
push
add
jb
inc
mov
push
jno
inc
bound
mov
or
adc
outsb
cmp
xchg
ficoms
xchg
daa
lods
inc
ror
movsb
inc
int3
push
adc
dec
xor
xlat
addr16
adc
adc
in
loop
enter
sbb
imul
pushf
test
ja
or
ja
loop
fldl
movsb
push
fldt
mov
jg
mov
notl
leave
repz
mov
push
jbe
mov
mov
xchg
sbb
cmp
loop
in
adc
push
test
jo
mov
jecxz
adc
in
xor
push
je
ficompl
push
nop
sbb
ja
fstpt
aad
pop
cmp
dec
or
shll
inc
into
out
and
lcall
adc
push
test
xchg
mov
imull
pushf
add
aaa
inc
loope
mov
gs
jns
xchg
jmp
mov
mov
inc
fstl
mov
shlb
or
and
xchg
js
sub
push
dec
ret
add
push
aam
mov
adc
fcoms
movsb
jmp
jle
outsb
jp
loop
or
fwait
sbb
nop
or
in
fstps
sbbb
inc
addr16
loop
jp
lds
test
add
pop
jecxz
test
inc
xor
mov
loopne
pop
jecxz
cmp
xchg
mov
xor
mov
int3
pop
insl
pop
mov
push
pop
pop
dec
idiv
outsb
lahf
fdivrp
popf
cltd
mov
testb
adc
cld
adc
insl
mov
fdivrs
xchg
outsb
mov
fstl
fimull
mov
jg
outsl
call
aas
pop
pop
lahf
jno
sub
cld
push
sarb
sub
push
jg
stos
add
jbe
xchg
jb
dec
cmp
mov
pop
cli
int
adc
push
mov
push
sbb
and
mov
inc
sub
sbb
in
addr16
mov
xlat
cwtl
fadds
cltd
sbb
stos
xor
adc
test
imul
xlat
sahf
sti
movb
fwait
repnz
push
addb
push
cs
push
or
pop
sub
add
test
scas
out
outsb
inc
daa
stos
xchg
pop
sbb
xchg
pop
out
add
dec
enter
mov
push
jbe
arpl
jbe
and
scas
lret
and
fldcw
push
cmp
aam
lds
sbb
cmp
aam
and
push
ljmp
outsl
add
xchg
int
mov
mov
repnz
shrl
mov
aam
dec
movsl
jp
sarl
push
mov
repz
out
dec
and
adc
push
insl
sbb
clc
mov
pop
mov
rclb
dec
ret
mov
stc
insb
jle
dec
imul
mov
arpl
cli
xor
leave
jbe
loopne
sbb
xchg
fbstp
shll
jbe
popf
js
fnsave
xchg
xchg
and
cmp
cmc
mov
adc
out
ds
or
jae
stos
pop
int
mov
sbb
js
dec
ret
fcmovu
out
mov
rolb
mov
repnz
jmp
xchg
repnz
mov
pop
sets
inc
stc
adc
jge
mov
push
cli
outsl
rol
lods
sub
add
sbb
jp
push
add
shll
ret
dec
mov
jl
push
push
mov
add
aas
xchg
nop
dec
shl
mov
ror
pop
mov
aam
adc
in
xor
int3
pop
in
hlt
std
jecxz
lods
dec
lahf
lret
in
sbb
xor
dec
adc
cltd
push
test
testl
xor
inc
shl
sbb
dec
sub
bound
adc
cltd
aaa
orb
cld
fs
pop
jle
lahf
fwait
pop
cmp
xor
sub
pop
cmp
xor
fwait
dec
pop
mov
push
cwtl
push
pop
jnp
scas
push
in
das
cwtl
nop
neg
and
or
stos
mov
into
out
loopne
bound
addr16
lods
push
fisubl
cmpsl
jl
sub
and
test
xor
test
adc
sarb
jne
push
and
popf
pop
mov
sbb
fdivr
mov
std
aad
daa
add
mov
sub
xchg
push
test
push
jne
xchg
adc
imul
push
xor
inc
adc
xchg
and
data16
pop
imul
ja
or
mov
mov
pop
add
sbb
jecxz
add
divl
add
popf
cmpsb
and
mov
lds
int3
sbb
xchg
insl
pushf
xchg
outsb
mov
cltd
mov
dec
add
xchg
ss
out
mov
outsl
dec
out
mov
dec
lock
or
mov
lea
xor
dec
stos
test
mov
sub
rcll
jae
inc
mov
add
mov
movsb
sti
and
sarl
stos
push
add
sbb
and
cmpsl
cmp
ret
add
sti
dec
add
sbb
xor
mov
cmpsb
lcall
lods
cmc
mov
push
movsl
xchg
lea
add
cltd
es
test
lcall
nop
loopne
out
cmpsb
shr
mov
xlat
pusha
and
bound
cmc
adc
imul
jne
fsub
add
and
cwtl
enter
andl
push
pop
mov
arpl
mov
nop
xor
les
push
mov
lock
mov
sbb
inc
fwait
rorb
dec
dec
nop
mov
repnz
push
shl
sbb
jne
out
cltd
sub
cmp
sub
rolb
daa
push
mov
icebp
push
aas
sti
jbe
leave
jne
and
lea
mov
loop
inc
mov
jo
xor
xchg
stos
mov
int
sub
shll
push
jg
inc
rcrl
test
push
leave
movsb
shlb
lods
cwtl
xchg
mov
xchg
push
xchg
rcrb
dec
testb
shlb
push
stc
imul
mov
and
lds
sbb
pushf
icebp
stos
int
mov
push
jl
and
xchg
and
sub
inc
lahf
mov
mov
out
xchg
rol
inc
mov
int
scas
leave
lahf
clc
mov
inc
push
jae
int3
test
cmp
mov
shrl
cmp
in
jno
add
adc
jp
dec
in
push
jle
loope
pop
add
push
scas
jb
mov
add
and
mov
pop
cmp
xor
push
int3
in
cmpsl
cwtl
sbb
and
sahf
scas
dec
pop
mov
outsl
lods
sbb
daa
mulb
cmp
sbb
xlat
fbstp
js
stc
cmpsl
sub
negl
cmpsb
into
sub
cmp
xchg
mov
shl
addb
lahf
mov
mov
pop
je
mov
inc
xor
xlat
test
lret
stos
movsl
test
imul
stos
pop
cmp
jmp
pop
jg
xchg
push
push
cmp
sbb
sbb
test
jo
push
xor
push
xchg
aas
cld
loop
dec
mov
aad
das
stos
mov
pop
jne
cmp
mov
inc
pop
lret
jle
outsb
push
jbe
bound
jp
cmpsb
test
xor
mov
inc
lret
js
or
dec
cwtl
nop
int3
mov
outsb
rcrb
inc
aad
repz
cmp
cmp
lock
repnz
fwait
je
cmc
decl
nop
pop
fistpl
adc
scas
and
loop
jo
in
sti
cmpsl
sub
insl
ret
and
sub
aam
xor
into
dec
mov
pop
lcall
jb
inc
outsl
fcmovnbe
jbe
outsb
pop
outsb
xlat
pop
dec
mov
movsb
lods
cs
std
mov
pop
out
dec
mov
push
inc
dec
fisubs
addr16
gs
mull
lcall
sbb
lea
sub
sarl
mov
sarl
mov
xchg
jb
xor
es
test
xchg
and
inc
mov
sarl
insl
dec
pop
outsb
fsubs
mov
mov
push
decb
xor
sub
jne
mov
outsb
loope
je
hlt
lcall
flds
push
adc
orb
rolb
aam
cld
sbb
popa
in
and
out
sub
sbb
out
lahf
rclb
pop
cmp
out
sub
popf
mov
leave
sub
inc
cld
sub
adc
jbe
inc
call
or
and
aas
test
inc
push
stc
repnz
rcr
daa
cmp
subb
insb
test
ja
mov
mov
leave
sbb
popf
lahf
xchg
rorb
fwait
stos
add
or
cld
ficomps
mov
add
cld
jle
mov
mov
mov
mov
jnp
sub
lock
aaa
stc
lea
pop
popa
inc
enter
faddp
push
in
hlt
call
mov
push
rol
lock
mov
push
movsb
dec
int3
hlt
pop
movsl
imul
push
sbb
shlb
cs
lcall
bnd
cmp
iret
and
stc
inc
cmp
fiaddl
jp
jp
sub
mov
dec
and
lods
xchg
leave
cwtl
pop
push
jns
push
or
cmc
push
dec
jp
dec
and
xor
add
and
lea
std
mov
ficomps
repz
xor
shll
and
dec
mov
call
inc
push
and
push
jbe
push
imul
xor
and
dec
out
iret
cltd
pop
fldl
pop
lods
mov
les
xchg
xlat
lcall
rcll
out
addr16
test
adc
mov
jbe
jbe
ret
test
or
mov
xorl
push
xchg
repz
xchg
test
into
xor
jnp
sbb
sbb
imul
inc
test
test
ret
in
pop
lock
mov
testl
push
mov
mov
inc
pop
fiaddl
out
mov
out
mov
pop
and
or
stos
jne
movsl
push
jle
repz
dec
cmp
out
mov
insl
xchg
mov
mov
xchg
ret
pop
hlt
xchg
orb
in
test
leave
xchg
jmp
es
cld
cmp
out
mov
and
fimuls
add
pusha
cmp
std
add
outsl
mov
push
mov
scas
inc
xchg
adc
orl
push
cmpsl
fs
ds
inc
push
rorb
stos
fmuls
push
test
sub
adcb
popa
cmpsl
xchg
mov
hlt
xchg
mov
fisttps
insb
cmp
mov
dec
rcll
pop
dec
in
xor
test
push
mov
inc
addr16
divb
decb
stc
lahf
insb
sarb
mov
aas
test
xchg
mov
popa
imul
jg
sub
sub
adc
loope
stc
pop
aam
mov
cld
inc
jge
cmp
sarl
add
in
lods
js
sub
fs
cmp
negb
std
jg
enter
lcall
sbb
mov
jecxz
add
aas
sub
das
xchg
les
loop
cmp
stc
in
cmp
lea
in
outsb
pop
dec
negl
daa
and
pop
ret
movsl
xchg
add
cmp
pop
pop
pop
cwtl
pop
out
pop
cmp
das
push
popa
int3
cmp
inc
shll
popf
xchg
sbb
ror
inc
xor
jg
jmp
pop
ret
in
roll
push
adc
sub
lds
jns
gs
int
sub
out
jnp
mov
decb
xor
inc
xor
es
movsb
jge
mov
orl
ss
scas
cmpsl
fnsave
inc
shrl
outsl
push
out
leave
dec
iret
mov
cs
insb
xor
lret
shl
sub
xchg
xor
dec
xchg
scas
xor
test
out
gs
aas
mov
in
jmp
pusha
inc
and
test
pushl
sbb
xor
jnp
into
push
aam
es
xchg
mov
push
cmp
mov
mov
mov
mov
pop
or
fadds
add
iret
xchg
and
jo
aam
xor
push
cmpb
mov
lods
addr16
cmp
or
shlb
mov
inc
dec
pop
imul
cmp
inc
adc
lret
imul
cmp
sbb
fsubs
jmp
ficompl
jns
movsb
and
aad
sub
mov
loop
jg
pop
mov
leave
in
out
xchg
mov
xchg
cmc
xchg
jmp
push
lea
fdivl
lock
xor
testl
and
xor
xchg
inc
jbe
pushf
pop
lock
inc
sbb
pop
lahf
jl
and
pop
cmp
jecxz
sbbb
xor
iret
sub
pop
inc
fucomip
lods
lahf
and
test
sbb
mov
in
mov
pop
or
loope
push
out
pusha
sub
insl
sub
or
push
rcrb
xchg
jle
pop
aad
jns
addl
push
out
into
cmp
jle
cmpsl
popf
mov
mov
mov
mov
lock
aam
pop
sub
mov
push
pushf
in
sbb
mov
mov
mov
sbb
movsb
loope
or
test
push
dec
or
cmc
and
int
shrl
sub
mov
push
test
lock
shll
pop
rcrb
sub
adc
mov
jae
sub
xor
pop
add
fistl
adc
inc
or
cmp
sbb
clc
loop
ret
in
jae
pop
xchg
repz
insl
lret
adc
cmpsb
sbb
xchg
xorb
add
pusha
mov
push
movsb
xchg
nop
mov
mov
pop
mov
xchg
xlat
cwtl
jnp
jge
xchg
add
cld
cld
sbb
or
rclb
jecxz
pop
add
aad
xor
mov
jmp
inc
bound
mov
mov
adc
pop
pop
data16
cmpsl
push
pop
gs
rcl
xchg
idivl
sub
jnp
stos
cs
sbb
sub
xor
lahf
test
sarb
jp
and
scas
in
imul
fwait
jmp
xchg
jno
jns
or
pop
rolb
sti
mov
fisubl
shll
fcmovu
and
push
lret
jecxz
loopne
ja
mov
ret
push
xor
loopne
dec
dec
pop
nop
jl
movsb
sbb
pop
iret
inc
xchg
icebp
add
dec
mov
mov
addr16
pushf
inc
scas
ret
hlt
xor
inc
cwtl
gs
jg
or
lock
and
or
xor
sbbl
insb
mov
push
shll
fsub
mov
and
mov
xchg
dec
outsl
scas
pop
out
dec
pop
roll
and
dec
arpl
jo
or
push
aas
hlt
mov
jae
dec
sub
ss
nop
pop
xchg
les
pop
and
rclb
mov
dec
inc
sub
and
mov
lock
stos
aaa
mov
xchg
inc
xor
gs
push
mov
dec
dec
stos
inc
jge
mov
mov
or
jl
repnz
hlt
ljmp
lret
xchg
jp
mov
pop
cmp
jae
push
lret
pop
pop
push
push
mov
xchg
xchg
pop
scas
mov
sbb
pop
pop
inc
mov
clc
xchg
fistl
outsb
orb
jo
test
les
inc
push
dec
imul
popf
andl
out
fidivrl
lret
pop
mov
mov
ja
jbe
mov
scas
or
nop
jmp
cmp
add
sbb
pop
push
popf
jbe
int3
dec
xor
dec
ljmp
stos
mov
add
push
cmp
pop
imul
mov
popf
mov
adc
lods
pop
push
push
or
cli
sti
test
or
inc
push
es
mov
adc
popa
sahf
mov
stc
insb
and
and
jp
arpl
insb
rcr
aas
pop
xchg
push
or
lret
push
sub
xchg
test
pop
pop
mov
mov
insb
add
xor
pop
push
xorl
pop
xchg
add
lods
shll
cmp
test
out
mov
jg
push
mov
jae
or
push
cmpsb
hlt
jnp
imul
lds
add
cmpsl
lcall
and
icebp
icebp
pop
stos
push
cmp
and
stos
dec
inc
pop
dec
lds
loop
push
inc
leave
and
inc
push
sbb
divl
cmp
repz
and
cwtl
xchg
fisubrl
ret
and
ja
inc
ficomps
push
scas
das
xchg
cmp
sub
fnstenv
sbbl
dec
cmp
cli
into
popa
stos
lds
jb
xchg
in
rol
dec
pop
data16
cmp
es
mov
inc
int3
dec
lcall
stos
das
mov
inc
and
repz
adc
and
test
jp
inc
outsl
jge
insl
pop
mov
or
sbb
popa
aaa
scas
push
dec
inc
pop
subl
ss
mov
inc
adc
add
add
pop
outsb
xchg
cmp
xchg
je
mov
sbb
loop
leave
test
repz
inc
in
sarb
lods
dec
adc
lods
vpunpckhwd
repnz
cmp
dec
repz
movsb
xor
cmp
inc
sbb
jp
sub
mov
or
push
sti
aad
aas
adc
movsl
stos
xchg
aas
sbb
push
clc
cmp
or
rcrb
push
popf
xor
jbe
test
mov
in
dec
lock
lods
cmpsl
xchg
rolb
outsl
mov
outsl
mov
pop
push
int3
push
mov
bound
add
fwait
adc
xor
pop
xor
sahf
and
pop
cmp
cmpsb
call
or
dec
xchg
lods
mov
fwait
mov
xchg
stos
movsl
bound
fwait
dec
iret
sub
sbb
mov
adc
and
mov
cs
scas
adc
inc
enter
mov
sbb
cmp
sahf
ss
dec
or
data16
and
xchg
mov
incb
jne
pop
jg
mov
repnz
mov
sti
cmc
mov
or
xchg
out
push
xor
add
push
cmp
loopne
leave
mov
pop
inc
fwait
shl
int3
push
cmc
mov
sbb
jl
adc
cmpsb
shll
sub
add
cld
daa
add
mov
out
add
xchg
or
fwait
jno
neg
repz
orl
xor
xor
push
mov
in
add
lret
xor
xchg
xchg
popf
test
inc
mov
imul
fs
fsubl
fdivp
ljmp
jp
or
pop
jne
adc
leave
push
lahf
xchg
add
mov
dec
or
fmull
cmp
add
bound
insl
pop
ror
inc
mov
ja
arpl
mov
out
jge
jnp
sub
xlat
das
xor
in
insl
cltd
push
fsubrl
push
mov
popf
cmp
adc
arpl
addr16
push
outsl
xchg
loop
aad
xchg
cmp
or
xchg
aas
outsl
mov
fwait
push
or
mov
sbbl
sbb
jae
xchg
ss
je
sub
adc
into
fcoml
mov
inc
fistpll
xchg
icebp
mov
dec
xchg
inc
mov
and
das
jae
loopne
jecxz
pop
imul
mov
repz
es
inc
adc
out
stos
cmp
jl
das
fwait
lock
push
pop
adc
mov
pop
or
lods
int3
cli
cli
data16
frstor
aam
dec
push
mov
and
loop
lret
shrl
mov
dec
enter
mov
mov
cmc
adc
pop
jns
into
sub
mov
orl
adc
pushl
cmp
xchg
pop
jecxz
ja
mov
mov
jnp
lds
js
xor
test
cmpsl
shll
dec
xor
cmp
pop
pop
in
lret
push
lock
clc
insl
adc
mov
push
imul
shlb
scas
das
and
sub
out
and
flds
mov
aad
sti
push
stos
iret
or
fstpl
loope
xor
push
loopne
dec
or
dec
inc
outsl
in
into
push
mov
fwait
jl
nop
test
lcall
pop
cmp
cs
out
jecxz
mov
push
pop
aaa
cmpsl
test
or
or
loop
xor
insb
popa
dec
pop
or
dec
jns
js
cmp
xor
sub
jl
lcall
push
adc
scas
repz
xorb
lahf
ds
xchg
push
stc
testl
jecxz
jno
sub
imul
rcrl
dec
mov
xchg
je
and
mov
imul
fs
shrl
fcompl
out
cmp
or
push
cmc
mov
mov
not
dec
dec
out
and
mov
add
insb
jae
dec
fidivl
rolb
leave
negb
out
cmp
pop
mov
bts
data16
pop
outsl
jecxz
daa
popf
sbb
xor
sub
ja
push
leave
movl
sahf
fxam
push
movsb
lods
sti
das
dec
imul
cmp
jo
in
mov
stos
pop
into
cli
xor
dec
xchg
mov
and
aas
fs
push
pop
roll
jmp
frstor
lcall
add
addr16
cmp
mov
add
loope
mov
jbe
mov
data16
das
jne
fwait
cmp
xchg
popa
jb
or
test
or
jle
lea
ss
lods
sahf
lods
sbb
fnsave
in
sbb
aam
adc
and
pop
push
in
pop
outsb
sub
push
cmpsl
pushw
add
cmp
ds
ret
daa
je
mov
pop
xor
cwtl
mov
les
stos
sti
and
adc
out
inc
sub
dec
pop
dec
rclb
js
mov
xor
mov
add
ret
cmp
in
sti
imul
inc
sbb
cmp
pop
xchg
dec
cli
sub
xor
pop
dec
dec
xchg
jmp
subb
fisubl
imul
push
xor
and
cwtl
cmpsb
jne
jbe
mov
aam
lahf
jbe
leave
add
mov
insl
push
sbbl
fdiv
jae
test
sub
and
inc
xchg
into
push
inc
pop
int3
jmp
out
into
shl
lock
dec
jge
sahf
scas
dec
jle
rol
inc
sarl
sub
mov
es
shrb
pusha
ds
roll
cmpsb
pushf
adc
adc
jg
jnp
mov
cmpsl
and
in
adc
inc
pop
lea
cmp
jmp
jg
cmpsl
out
in
rorl
push
imul
and
aam
jo
or
jns
mov
jmp
inc
cltd
add
adc
adc
jg
adc
sbb
fs
stc
repz
xor
ret
dec
stc
pop
xchg
aam
movsl
in
pop
cmp
and
clc
inc
cmpsb
jns
sbb
mov
mov
notb
push
lret
mov
cmc
inc
xor
pop
xchg
mov
mov
das
adc
jne
or
arpl
lahf
ljmp
in
pop
ss
and
mov
xchg
mov
mov
outsb
orl
shll
ljmp
sahf
push
xchg
pop
shrl
push
push
fidivl
cwtl
jno
fwait
lods
sbb
pop
fldcw
ss
cltd
sub
std
icebp
repnz
dec
sub
das
push
mov
insb
push
cmp
lods
xorl
data16
jg
leave
dec
xor
cli
add
stos
xor
lock
gs
mov
call
adc
push
std
es
mov
push
insb
cmp
loopne
add
jmp
mov
ret
jbe
cs
cld
or
lahf
mov
in
sub
adc
xchg
ss
cwtl
lcall
pop
xchg
bound
roll
orl
cmp
xlat
test
push
cmpsb
add
pop
into
test
sahf
pop
xorb
pusha
movl
dec
jecxz
inc
and
pop
les
xor
push
pop
aad
outsl
mov
jbe
inc
aad
adc
inc
mov
sbb
mov
sub
xchg
push
dec
nop
sbb
jo
jns
daa
imul
xlat
xchg
adc
mov
mov
rcl
loopne
int3
or
xor
and
imul
lea
adc
mov
cmp
repz
out
sub
sbb
cli
and
cmpsb
jae
mov
in
movsb
or
pop
xchg
icebp
cli
cs
in
inc
xchg
aaa
mov
inc
mov
scas
test
push
sub
fcomps
push
mov
xchg
lcall
js
pop
xchg
je
jnp
sub
dec
out
imul
movb
stc
pop
push
and
add
xor
cli
xchg
imul
jmp
lret
mov
loope
cs
dec
pop
dec
mov
fsubs
or
mov
add
test
lock
xchg
lcall
jae
call
mov
fcompl
lcall
jecxz
call
sub
dec
xchg
cli
shl
shl
rcrl
push
add
icebp
je
or
flds
sbb
jno
cmpb
cmp
jbe
sarb
push
sbb
inc
lea
mov
insb
iret
out
or
mov
xchg
push
shrb
psubd
mov
and
xchg
and
mov
fisttps
push
mov
fidivrl
or
sub
test
call
xchg
test
lcall
mov
xor
jecxz
int
mov
repz
in
jecxz
xchg
adc
por
add
and
or
ja
fdivrs
enter
aas
mov
push
sbb
movsl
add
fmuls
psrlq
jmp
mov
sbb
and
sahf
mov
mov
pop
pusha
in
inc
subb
shl
ficomps
xor
or
and
jge
jmp
iret
push
in
xor
mov
adc
outsl
mov
psrlq
xlat
mov
jecxz
add
pop
mov
insb
xchg
fistpll
dec
jae
sarl
cmp
imul
xor
mov
cli
push
ret
sti
jle
and
lahf
or
arpl
addl
lcall
repz
popa
adc
out
inc
jmp
test
lcall
std
add
sahf
pop
xchg
add
pop
cmp
je
rorl
pop
cwtl
pop
fisubrs
push
lea
lret
mov
incl
outsb
pop
mov
mov
and
pusha
lret
dec
dec
jo
rcll
jle
xlat
cltd
cs
or
push
mov
mov
dec
jo
or
xchg
into
loopne
pop
orl
mov
fildl
call
movsb
jmp
rorl
fwait
mov
dec
xor
cmp
add
cmp
add
push
cmp
pop
jl
dec
push
lods
jl
fdiv
es
inc
mov
sub
push
out
xchg
icebp
cmp
cmp
jg
cld
mov
cmp
pusha
imul
and
js
fnstenv
or
sub
sahf
xchg
dec
pop
and
push
std
sti
loopne
ljmp
adc
push
imul
pushf
xchg
adc
adc
sahf
repz
push
push
jo
aas
mov
movsl
sub
fistl
push
divl
cmp
and
ljmp
xchg
xchg
mov
and
sahf
pop
push
or
mov
pop
add
aaa
mov
cld
inc
fnsave
cmp
or
mov
mov
clc
dec
leave
cmp
adc
aaa
sub
cwtl
das
out
pop
add
stos
das
fbld
pop
push
pop
aam
shr
fs
add
sub
in
push
and
push
int3
fisubrs
lds
popf
push
cmp
popa
sbb
lret
outsl
fs
add
sbb
jmp
dec
mov
and
cmp
fisubl
sahf
sarl
mov
sbb
jb
inc
cs
inc
in
insl
pusha
sub
lds
test
in
push
mov
mov
les
shlb
mulb
ficomps
ror
mov
outsl
inc
inc
mov
fisttpll
fisubrs
imul
ljmp
mov
mov
aas
sarb
cli
movsb
ss
or
cmp
adc
lock
scas
lahf
andb
gs
aad
or
xor
sti
out
inc
test
in
icebp
aaa
push
sub
sub
arpl
inc
movsb
mov
xor
add
add
sub
ret
pop
sbb
aas
cld
add
aaa
push
ja
add
ds
lock
pop
xor
sahf
or
xchg
xchg
pop
mov
fsubl
add
subl
ret
pusha
jecxz
imul
hlt
pop
jle
fs
iret
mov
aaa
ja
rcl
test
push
adc
inc
ja
in
sub
shrb
pop
rolb
popf
or
jmp
mov
jecxz
out
inc
xor
and
cmc
pop
inc
imul
lods
in
scas
lret
add
jmp
pop
je
mov
shll
gs
int3
dec
into
sub
lcall
jns
sub
sbb
cmpb
push
xchg
test
dec
push
outsb
sbb
fwait
insl
sbb
sarb
jno
xor
cmp
xchg
cld
movsl
nop
pop
sbb
insl
ja
leave
cmp
jmp
test
ljmp
xchg
or
and
push
mov
loop
adc
mov
mov
aas
jg
rcrb
filds
xchg
mov
dec
dec
push
push
testl
xchg
cltd
ljmp
ficomps
pop
fwait
xchg
xchg
or
push
rcll
pop
dec
cmpsl
and
dec
stc
pop
add
jp
stc
cmp
lds
push
push
fidivrs
jns
lea
cmpb
int
push
rorl
adc
js
and
and
pushf
mov
incl
jbe
mov
inc
mov
sub
cmc
sub
repnz
loopne
jns
fmull
dec
mov
mov
cmp
mov
or
xchg
js
pop
jg
clc
dec
mov
and
cmpb
dec
dec
fidivrl
hlt
popa
push
enter
aas
test
mov
lds
fcomi
popfw
xor
and
aaa
push
lahf
lock
pushl
icebp
icebp
cmp
sub
inc
pop
aam
loope
in
fistps
sbb
clc
pop
lods
dec
insl
call
and
xchg
les
cltd
push
imul
cmovne
stc
mov
and
pop
fldl
leave
cld
popw
jb
in
fs
ja
mov
mov
call
mov
lahf
mov
dec
adc
iret
adc
cmp
je
mov
inc
cmp
sub
lret
stc
std
push
call
pop
test
and
imul
rcrl
inc
shrl
pop
in
xor
popa
outsl
ss
bound
inc
or
lds
aad
lods
pop
ds
mov
jne
das
imul
or
mov
dec
icebp
lods
dec
push
xlat
icebp
pop
push
fdivs
and
in
sbb
movsb
push
or
adc
leave
stc
mov
add
dec
cmpsb
aam
in
pop
shr
sub
xor
pop
cmpl
in
dec
andl
arpl
xchg
mov
mov
cwtl
jne
loop
movl
repnz
push
sbb
dec
arpl
lcall
cltd
push
mov
ss
data16
jne
lcall
out
and
in
ret
xor
hlt
cltd
mov
xchg
ffreep
sbb
mov
add
in
mov
add
add
xchg
xchg
pop
pop
test
lea
dec
orb
xor
push
and
cmp
paddq
sub
push
sbb
std
xchg
xchg
outsb
mov
sbb
dec
fstp
test
movb
adc
dec
jmp
jbe
mov
push
add
stos
fcomps
pop
test
inc
pushf
in
shrb
arpl
mov
out
and
jne
test
push
inc
sub
ss
cs
add
pop
fs
sub
shl
cmpsl
pop
pop
xchg
enter
add
xchg
sub
xchg
jg
jne
sub
in
mov
add
outsb
push
xchg
inc
mov
push
lret
in
mov
jns
pushf
dec
insl
aas
into
mov
or
lahf
pop
push
pop
fcomps
push
pop
xchg
jge
aaa
lret
sub
imul
jae
push
pop
xor
test
mov
dec
in
mov
in
ss
ds
push
rcrl
daa
addb
stos
sbb
dec
adc
fstl
xor
pop
int3
jmp
mov
arpl
mov
and
das
call
les
insb
xor
sbb
sub
and
cmp
repz
dec
lret
js
scas
icebp
cmp
lret
push
adc
sub
hlt
fwait
mov
sub
lods
mov
loopne
cmp
stc
jno
bound
xlat
pop
ret
jge
cs
dec
push
mov
inc
popf
xor
pop
rol
dec
jmp
inc
jb
sti
das
xchg
mov
pushf
cltd
xchg
out
sbb
xor
jns
aas
stos
and
fs
loop
test
push
mov
inc
movsl
xchg
out
jle
andb
sub
cld
jo
fiaddl
js
scas
bound
dec
imul
subl
push
je
xchg
xor
scas
movsb
mov
sbb
filds
ljmp
fists
das
xor
cs
mov
xchg
arpl
js
cmp
daa
movsb
push
in
jmp
or
add
sbb
les
jo
ja
jg
pusha
addb
mov
jb
shll
fxch
adc
sub
stos
inc
jb
xor
ljmp
sbb
push
jecxz
stos
ja
inc
clc
scas
mov
fisttps
mov
inc
movb
dec
aas
scas
jge
or
dec
pop
sbb
adc
fdivs
je
mov
jl
xchg
testb
cmpsb
add
repz
push
cmp
int3
rcll
or
xor
and
xorl
ss
fdivs
cmp
jns
pop
sub
test
les
mov
sti
es
loop
mov
jle
aaa
das
dec
ret
lcall
inc
cwtl
insl
dec
add
push
mov
sbbb
cld
cmc
sahf
sbb
or
repz
jno
out
lods
mov
mov
adc
jne
imul
sbb
add
xor
pop
pop
sbb
dec
cmpsl
je
cmp
xchg
dec
test
movsb
cmp
inc
outsw
cld
sahf
dec
testb
hlt
sbb
xor
push
sub
dec
xor
mov
xor
push
ret
or
cltd
and
insb
xor
fsub
cmp
mov
inc
and
add
xchg
leave
fnsave
xor
std
jbe
mov
and
cmc
cmpl
cmp
shll
gs
ds
out
cmp
mov
mov
jnp
push
mov
and
aad
add
cwtl
stc
add
pop
mov
idiv
mov
sbb
sbb
xchg
imull
adc
test
in
int3
inc
adc
dec
popf
sbb
in
xorl
cmp
pop
inc
sub
hlt
ss
out
inc
mov
mov
scas
jecxz
movl
cmp
dec
cmpsb
or
add
xchg
mov
bound
sub
dec
and
test
xchg
inc
out
add
jp
mov
int3
hlt
mov
push
dec
sub
les
push
mov
pop
imul
pop
fdivr
cltd
cmpb
out
xchg
out
xor
jnp
pushf
jmp
ds
mov
sahf
adc
mov
jmp
in
xchg
and
lahf
and
das
sbb
clc
adc
push
popf
xchg
push
lcall
ror
mov
lret
mov
add
cmp
add
pop
in
dec
push
sarl
cltd
mov
stos
shl
mov
imul
call
iret
aam
and
andl
gs
sbb
out
push
in
mov
lock
mov
add
aaa
jne
int
fmuls
cmp
arpl
loop
out
cmp
gs
mov
sub
test
pop
ffreep
push
jo
mov
add
xchg
cmp
imul
fadds
xor
dec
lock
mov
add
push
dec
dec
je
sub
jb
cmpsl
rcrb
std
in
dec
shrl
int3
sub
imul
or
adc
out
jg
dec
adc
push
or
rcrb
pop
js
adc
loopne
add
es
loopne
xorb
fcomip
popa
add
daa
sahf
mov
outsb
pop
inc
insb
push
mov
into
addr16
aaa
push
dec
jae
aad
out
pop
lcall
add
and
in
test
aad
imul
scas
rcr
xor
pop
jecxz
jno
lods
push
xlat
lret
and
int
test
pop
ret
adc
add
ljmp
push
xchg
inc
mov
mov
fcomps
lock
add
ljmp
inc
sbb
cmpsb
jbe
nop
sbb
xlat
sti
jle
clc
or
pop
rolb
add
xor
fisttpll
cmp
mov
lds
cmp
sub
insb
or
hlt
inc
fldenv
pop
fucomi
fwait
mov
fstpt
jp
dec
lods
xchg
push
pop
or
lds
dec
jno
mov
jbe
stos
aad
mov
adc
popa
mov
sbb
xor
mov
push
adc
daa
cmp
xor
stc
xor
fs
mov
push
ljmp
xor
movsl
lock
adc
out
and
jo
loopne
or
sub
int
insb
cs
std
dec
and
add
xor
pslld
adc
push
pop
je
sub
inc
mov
call
inc
int
mov
mov
out
add
jne
mov
movsb
int3
dec
xchg
and
mov
cmpsl
jecxz
push
push
jne
leave
fs
rcrb
rol
mov
adc
xchg
pop
movsl
std
fcoml
jo
lret
xchg
dec
sbb
add
arpl
mov
iret
xchg
jge
jle
mov
cmp
dec
jns
jecxz
pusha
movsl
jne
shr
xchg
pop
mov
aaa
rep
push
and
mov
cmpsl
jnp
mov
adc
arpl
jecxz
jb
push
xchg
add
push
inc
lock
adc
jb
push
inc
cmpsb
stc
std
aas
aam
inc
fisttpll
add
mov
sub
in
cli
ficompl
xchg
cltd
push
out
aad
stos
repnz
jl
cmp
fadd
es
outsl
mov
sub
cld
jecxz
in
scas
pop
fisubrl
push
incb
sbb
mov
xor
cltd
fwait
dec
popa
inc
outsl
imul
and
inc
popa
or
gs
lds
clc
lock
out
inc
pop
mov
pop
add
inc
mov
push
inc
out
pop
adc
out
xlat
in
gs
pusha
xchg
pusha
push
push
cwtl
push
lahf
cs
ljmp
pushf
movsb
sti
sub
imul
leave
jmp
mov
or
cmp
or
or
lret
mov
mov
pop
cmp
popl
jp
xchg
adc
in
push
push
fsts
popa
and
mov
inc
loop
sub
test
call
jg
std
xchg
mov
lods
lods
insb
stos
add
das
call
mov
jno
fidivl
mov
mov
fsubl
mov
inc
inc
xchg
int
hlt
ret
pop
add
scas
jnp
mov
bound
cltd
aad
pop
sbb
inc
mov
push
repnz
pause
ds
pop
ss
lret
adc
jne
adc
add
iret
jg
xchg
sbb
popa
and
mov
stc
sub
int
add
push
adc
mov
xchg
push
stos
jb
out
mov
std
cmpsb
movsb
pop
fisttps
mov
jecxz
mov
or
lock
cmc
imul
test
mov
mov
imul
pop
insb
outsl
xchg
xchg
lds
call
popf
inc
inc
add
cmp
movsb
inc
sub
mov
addr16
test
out
dec
movsb
mov
push
popa
jae
mov
lret
cmp
popa
and
mov
cmp
lret
inc
xor
jo
xlat
fwait
mov
sbb
and
mov
out
cmpl
fiaddl
xchg
int3
and
adc
imul
or
push
test
mov
sti
mov
fnstsw
push
jae
jle
xor
ret
je
test
mov
mov
pusha
ror
push
mov
inc
call
into
mov
mov
es
and
lock
xchg
add
add
adc
pusha
pop
rcll
mov
cltd
fwait
add
mov
adc
cltd
cmc
mov
jae
stos
daa
mov
mov
gs
pop
fcomip
pop
dec
push
pop
in
fmull
jno
fistps
subl
pushf
shll
cmp
cmpsl
dec
dec
cltd
mov
inc
imul
cmc
inc
mov
pop
shlb
cmp
in
inc
or
push
int3
sarl
loop
cmc
or
inc
int
in
adc
push
mov
sbb
ss
xlat
xor
dec
data16
and
jbe
mov
xorb
addr16
ja
mov
setnp
enter
lods
dec
outsl
pop
mov
jne
or
sub
mov
test
aam
sarb
add
mov
add
out
sub
push
push
ret
cli
loope
pop
push
mov
xor
test
ja
in
adc
scas
sbb
push
hlt
out
dec
mov
mov
nop
sub
repnz
es
cltd
pop
imul
lret
mov
daa
inc
dec
cld
fisubl
jge
test
outsl
add
jecxz
mov
mov
push
mov
xchg
ffreep
nopl
mov
inc
mov
daa
fisubrs
mov
push
jecxz
xchg
cmc
jmp
cmp
cli
rcrl
and
mov
scas
or
pop
pushl
pop
jp
out
jns
lret
std
hlt
jmp
hlt
pop
cwtl
dec
pop
push
mov
mov
out
test
repz
ret
cs
inc
ret
jecxz
xor
ljmp
jl
popa
idiv
inc
dec
insl
test
jno
jmp
gs
or
ffree
popa
jl
dec
or
push
mov
aad
mov
out
sbb
lods
add
insl
js
imul
cld
and
in
repnz
mov
pop
test
js
lahf
pop
push
popa
scas
das
push
sub
xchg
or
mov
negb
call
into
lock
push
sbb
add
loope
adc
ss
push
sub
les
cltd
push
sub
aas
push
inc
fdivs
sbb
sub
enter
stos
loope
orb
scas
mov
pop
pop
in
bound
adcb
lods
sbb
push
jae
popa
inc
pop
and
or
adc
fs
dec
test
push
mov
xlat
in
imul
sbb
mov
scas
fbstp
clc
bound
mov
jnp
in
fbld
imul
js
jge
mov
mov
out
mov
xchg
jle
xor
xchg
out
adc
cmpsl
mov
test
dec
jb
in
ds
in
or
pop
or
push
pop
jae
pop
in
shl
fiadds
outsb
mov
filds
add
nop
icebp
mov
push
andl
data16
stc
add
call
jno
mov
and
sub
adc
jb
mov
sbb
mov
pop
ja
in
xchg
lds
mov
push
repz
or
aas
lock
pop
add
test
repnz
mov
cmpsb
xchg
shll
ret
pop
lock
xchg
fimull
test
inc
in
mov
and
mov
fmull
push
mov
xchg
sub
dec
ja
cmp
orb
pushf
sub
int3
cli
xchg
inc
add
inc
mov
sub
in
cmp
ds
popa
addr16
jns
mov
fidivl
xchg
int3
cmp
scas
mov
or
js
dec
sbb
push
stos
adc
adc
pop
sbb
mov
inc
lret
inc
fwait
jmp
int3
mov
adc
mov
xor
mov
adc
push
test
sbbl
pusha
jl
movsb
push
mov
add
xchg
nop
inc
dec
jno
cmpsl
in
imul
inc
push
add
sub
call
pop
mov
mov
lds
mov
shlb
in
jb
xchg
pushf
xor
mov
mov
dec
and
cmpsb
insl
add
jne
pop
push
mov
lds
xchg
xchg
push
pop
sub
pop
call
jno
cmpl
ljmp
lahf
cmp
aam
addr16
pop
ljmp
fwait
inc
fisubrs
aas
push
and
sbb
fwait
loope
jo
inc
cmpsl
in
xchg
and
inc
cli
push
lods
out
jmp
mov
fcoms
fdivrp
mov
nop
xchg
fsubrs
xchg
lea
mov
lcall
or
push
cs
pop
inc
lds
rorl
out
repnz
cltd
fwait
enter
xchg
push
mov
ret
inc
sbb
std
mov
rolb
xchg
sti
mov
aam
std
jns
pushf
xlat
xor
xchg
cmp
xchg
imul
xchg
les
xchg
lods
mov
jbe
out
pop
jp
shrl
mov
pop
shlb
adc
adc
mov
mov
pop
jmp
sub
scas
add
or
imul
aad
jp
daa
inc
adc
add
inc
rol
daa
and
lahf
cwtl
sbb
mov
popw
xor
cmc
mov
push
and
push
sbb
ja
pop
add
in
hlt
shlb
rol
and
or
or
pushf
xchg
mov
notl
into
inc
movsl
cmp
fnstenv
mov
rorb
sbb
or
jnp
mov
adc
outsl
xlat
cs
sti
inc
shlb
sbb
ret
and
orb
outsl
jge
mov
stc
ss
call
out
shll
dec
shrb
cmp
and
bound
push
add
xor
movsl
xchg
jo
mov
mov
test
fisubrl
out
jge
addr16
rep
push
daa
dec
rcll
lds
aaa
push
lods
add
mov
jmp
notl
addr16
hlt
je
sub
ret
sbb
mov
jo
outsl
cmp
sarl
xchg
and
mov
arpl
mov
imulb
fs
dec
mov
xchg
pop
sbb
pop
rorb
push
test
sbb
repnz
push
insl
dec
jecxz
jb
sbb
adc
inc
xor
xor
ret
push
cmp
ja
push
cld
inc
icebp
addb
loop
fcompl
xchg
sub
lods
push
lods
mov
push
les
cmpsl
cli
call
stc
dec
push
xlat
jb
orl
pop
mov
or
cmc
sbb
inc
pop
xlat
push
inc
xchg
fidivl
mov
hlt
jnp
cmp
mov
lahf
inc
faddp
add
xchg
xchg
in
test
icebp
nop
xchg
int
lcall
push
xchg
outsb
mov
sub
pop
movsl
arpl
inc
lods
fcomps
jb
cmp
xchg
movsb
stos
nop
mov
imul
pop
pop
fiadds
jae
mov
sahf
xchg
xor
push
inc
jns
std
mov
int
add
or
lret
jb
mov
lock
bt
xchg
aas
or
add
loop
shlb
inc
movsl
sti
adcb
out
sub
insb
rol
jno
xor
call
xor
loopne
lahf
jg
dec
sub
out
in
fiaddl
out
lahf
cld
push
add
mov
inc
cmp
cltd
daa
cmp
stos
fcoms
pop
fcomip
and
xchg
mov
and
test
js
pushf
jge
dec
inc
daa
push
inc
adc
pop
sbb
xor
dec
mov
pop
iret
sahf
push
mov
in
stc
stos
fmuls
pop
mov
mov
xchg
arpl
hlt
jns
cmp
stos
or
fistpl
ret
cs
in
add
mov
xchg
mov
mov
mov
movsb
dec
pushf
pop
leave
pusha
dec
roll
fsts
xor
int
push
pop
test
add
push
mov
mov
push
in
adc
and
inc
es
rcrb
cli
repz
push
push
test
movsb
xchg
push
test
xchg
sub
daa
sub
lret
je
and
push
jo
xor
rcrl
pop
inc
push
mov
cmp
pop
or
push
in
mov
push
outsl
fs
lea
jae
dec
pusha
andb
test
or
iret
jns
mov
inc
mov
inc
rorl
jns
shlb
jg
lahf
dec
test
inc
mov
lcall
adc
mov
cmp
xor
xor
clc
push
data16
lea
mov
movsl
mov
xor
and
mov
stc
mov
cmp
mov
popl
cmp
lahf
jl
xchg
dec
push
setno
ret
jnp
push
mov
mov
jns
jo
pop
outsb
mov
nop
loope
fldcw
xchg
sbb
adc
mov
sub
adc
mov
in
sahf
mov
sub
addr16
arpl
xor
cmp
xchg
cmp
or
lods
push
xchg
arpl
in
push
and
jge
xlat
fs
xchg
adc
cmc
ret
xor
adc
inc
sub
and
xchg
jecxz
jbe
outsl
call
adc
int3
hlt
lahf
je
push
cmp
loopne
gs
jnp
mov
testl
push
or
in
loope
insb
cmp
add
lods
xchg
and
fisttpl
sub
sbb
ret
loope
jmp
out
cmp
aaa
in
pop
adc
jmp
mov
in
mov
popf
pusha
mov
cmpsl
dec
mov
mov
pop
xlat
xor
dec
outsb
push
pop
mov
loop
push
popa
lds
xchg
jo
xchg
faddl
cmp
mov
sahf
mov
das
pushf
ljmp
gs
repnz
aas
xchg
dec
or
mov
sti
inc
dec
sahf
push
pop
inc
dec
mov
push
mov
jbe
sub
and
imul
push
xor
mov
push
and
ret
je
mov
lcall
mov
pop
adc
inc
je
jbe
enter
les
mov
push
sub
sbb
mov
pop
repnz
xchg
or
push
arpl
pop
or
rorl
aam
jl
cltd
repz
lods
mov
sub
rcrl
mov
add
or
pop
scas
aad
imul
clc
sub
call
enter
stc
sbb
and
loop
rcrb
add
pushf
push
fwait
xchg
cltd
lea
out
xchg
add
je
das
stos
fwait
into
das
lret
jle
xchg
and
nop
mov
mov
daa
imul
inc
push
mov
mov
mov
jmp
or
sub
dec
std
mov
mov
insb
and
cmc
jbe
pushf
stos
cmpsl
call
xchg
sbbl
shrl
leave
xor
jecxz
and
pop
pop
cltd
pusha
xchg
daa
in
imulb
jl
sarl
je
sub
cs
adc
xchg
cmpsb
rcrl
loopne
imul
ret
test
add
popa
scas
xlat
in
bound
sbb
ffreep
hlt
inc
lock
mov
jp
xor
cmpsl
add
lds
sbb
pop
test
jl
and
jecxz
cwtl
insl
push
out
and
inc
bnd
cmp
cmp
push
lock
hlt
popa
daa
inc
icebp
mov
mov
loop
mov
cmp
pop
addr16
imul
mov
sbb
ljmp
cmp
inc
pop
sarl
test
or
xchg
adc
dec
inc
inc
xchg
mov
cs
in
adc
adc
test
icebp
popf
out
push
fwait
dec
in
add
xor
pop
pop
repnz
and
cmc
sbb
in
mov
xor
lea
hlt
inc
in
call
xor
call
adc
xlat
movsb
dec
xor
mov
adcb
pop
imul
mov
cmp
pop
in
dec
in
dec
scas
jl
adc
lahf
scas
mov
imul
cli
insl
rcrl
push
push
push
xchg
dec
fisubrs
xor
xchg
inc
and
sub
imul
pop
inc
cmp
insl
jno
push
icebp
fnstenv
pop
mov
pusha
insl
push
and
mov
into
mov
adc
push
sub
outsl
fldcw
xor
xchg
icebp
mov
popa
gs
push
add
fs
mov
sub
cmp
test
sbb
pop
call
xchg
sub
fwait
sub
xchg
or
movsl
stc
mov
ficoml
xor
popa
pop
gs
sti
jmp
daa
int3
push
leave
arpl
in
mov
dec
and
dec
jnp
imul
cmp
pop
int
mov
inc
and
stos
into
xor
push
mov
inc
push
adc
xor
es
stc
jbe
add
mov
fiadds
sbb
subb
sbb
adc
or
or
mov
mov
cmp
dec
int3
lret
jle
call
out
jge
push
loopne
mov
aaa
sub
add
jo
sub
mov
sarb
outsb
fwait
xchg
xchg
pusha
daa
stc
leave
cld
inc
mov
lret
xlat
jns
push
adc
add
fstp
adc
jbe
mov
out
jl
jl
xchg
adc
mov
add
jmp
fisubrl
cmpsl
push
or
jmp
fldl
pushf
pop
fdivr
je
sbb
stos
imul
push
lret
jns
fwait
in
or
adc
pop
jge
xchg
leave
push
cmp
rclb
mov
pushf
fdivr
xchg
adc
popa
popaw
push
jl
out
scas
push
punpckhbw
jae
fnsave
and
and
cmp
inc
cmp
movsl
sub
adc
aad
dec
mov
cmpsb
dec
pusha
lock
pop
das
jb
mov
xchg
pop
testb
test
dec
and
jge
xchg
fists
pop
jge
pop
mov
cli
xor
cmp
jl
xsavec
or
arpl
andl
lret
test
sahf
je
xchg
and
in
outsl
fwait
push
stos
lret
sti
jb
in
mov
mov
in
adc
sbb
push
mov
push
scas
int3
int
jge
push
xchg
cmp
jb
dec
loop
bound
jno
cmpsb
sbb
xor
data16
mov
filds
sahf
pop
bound
push
mov
push
mov
push
movsl
xor
pop
jmp
test
jo
std
shlb
outsb
adc
ljmp
mov
cmpsl
mov
xor
insb
xlat
lea
pop
inc
dec
das
inc
add
sub
loop
lret
cmp
sub
mov
jne
lret
inc
in
sub
and
xor
enter
adc
ds
imull
pop
add
mov
je
pop
dec
pusha
mov
mov
add
ret
fs
testl
push
in
ret
jbe
out
or
jp
aas
add
xlat
cmp
sub
neg
ja
push
cmpsb
in
dec
lahf
test
mov
mov
lods
in
push
xor
mov
push
int3
adc
subl
adc
jb
xchg
loop
mov
or
pop
pop
std
insb
sbb
popf
je
lahf
pop
cli
cmpl
dec
test
xchg
pop
cwtl
and
cmp
jecxz
pop
test
popf
fisubrl
loop
mov
repnz
sbb
out
shll
dec
mov
fldcw
in
jne
mov
push
outsb
pop
insb
js
mov
jbe
ret
xor
stos
out
xor
iret
dec
ret
push
fldcw
mov
inc
mov
dec
mov
adc
inc
push
nop
xor
lock
mov
push
mov
add
out
hlt
adc
xor
and
jb
mov
mov
outsl
push
inc
stos
lcall
adc
sahf
and
sub
inc
pop
xchg
incl
xchg
jbe
inc
repnz
rcrb
mov
loopne
xchg
into
jle
cmp
dec
and
insl
inc
mov
pmaxub
or
fidivrl
or
hlt
sub
and
lea
mov
dec
add
insb
inc
lcall
xchg
xor
pop
cmp
call
cmc
sub
out
xchg
and
xchg
adc
dec
jge
aam
insl
xor
cmpsb
leave
mov
cmpsb
or
cs
fldcw
je
dec
out
loope
test
sub
addr16
leave
push
clc
insb
add
testb
sub
lret
daa
xor
insb
fisubl
icebp
addr16
push
push
popa
or
roll
in
jns
mov
mov
xchg
lea
jb
xor
cmp
jne
rolb
xchg
inc
xor
pop
cmp
das
adc
fs
dec
lcall
push
pop
jge
sahf
xor
outsw
dec
cmc
in
movsb
mov
stc
and
in
notl
push
mov
rcrl
ficomps
femms
adc
adc
mov
adc
push
mov
lds
and
scas
pushf
mov
mov
cmp
push
add
push
clc
inc
add
lock
push
shrl
push
dec
jne
popa
loop
push
inc
outsl
push
or
imul
in
push
dec
xor
aas
xchg
hlt
mov
std
out
cmpsl
and
ucomiss
or
jg
and
mov
push
sbbb
aad
or
mov
jns
add
xor
dec
inc
shrl
es
xor
pop
push
mov
stos
mov
mov
ficompl
stc
int3
cli
addr16
daa
dec
and
sub
hlt
push
push
inc
cmpb
cmp
testl
lds
or
stos
dec
jg
sbb
cmp
inc
xor
aaa
fistpll
icebp
mov
mov
mov
dec
test
cld
adc
pop
inc
lds
xor
sbb
cltd
popf
pushf
loope
add
adc
stc
es
mov
in
movsb
push
jl
loopne
movsb
movsl
scas
cltd
fstpl
fwait
mov
cmp
call
mov
pop
daa
push
xor
sub
mov
mov
imul
jbe
mov
lds
jmp
out
lcall
pop
insb
cli
and
mov
sbb
mov
enter
out
mov
xor
repz
decl
sub
dec
into
pop
sbb
pop
adc
xchg
dec
adc
dec
pop
lock
mov
arpl
and
fucom
mov
xchg
mov
loop
pop
repz
jns
jne
push
xchg
xchg
loope
or
icebp
and
mov
loopne
lret
mov
jle
push
idivl
repz
mov
dec
scas
sbb
or
lret
add
mov
adc
movsb
sub
mov
repnz
mov
mov
testl
lahf
or
mov
adcl
outsl
cmp
es
aam
sahf
fs
fs
in
stos
sti
cmp
fwait
push
push
sub
in
out
mov
jno
add
sub
movsl
mov
jno
int3
dec
dec
lcall
int3
lret
sub
mov
movb
inc
or
aam
stos
sub
sbbl
mov
cmp
ds
add
clc
mov
xchg
sub
mov
or
int3
and
adc
test
div
cmc
xor
out
inc
add
js
enter
imul
out
leave
mov
mov
out
cmp
jne
in
js
sub
dec
and
in
mov
inc
cwtl
fiadds
lea
cmpsb
in
cld
dec
lods
test
mov
or
scas
popa
push
cmp
xlat
out
mov
or
xchg
hlt
adc
daa
mov
sub
test
or
push
mov
fadds
add
cmpl
fldl
fwait
sub
scas
push
mov
sub
lcall
rolb
mov
lret
pop
popf
lahf
gs
pop
cmpsl
lcall
xchg
or
dec
mov
sahf
mov
adc
jg
jbe
lret
fadds
pop
push
cmc
or
sub
rcr
incl
jecxz
clc
cmp
addl
ja
sub
sbb
stos
sub
xor
push
rol
adc
inc
pushf
cmc
sbb
add
ss
xchg
and
clc
mov
sub
std
addr16
sub
jbe
jecxz
dec
pusha
mov
repnz
ljmp
dec
aaa
jg
cld
pop
xor
cmp
inc
mov
mov
cmpsb
dec
ss
idivl
fcoms
push
scas
sbb
jle
stos
jae
out
daa
mov
mov
mov
xchg
dec
jmp
inc
sbb
sahf
icebp
mov
or
test
gs
pop
aas
xchg
sbb
sbb
xor
xchg
test
out
mov
or
add
xor
mov
arpl
aam
mov
dec
cmp
or
push
mov
adc
pop
cltd
mov
mov
psubq
ret
in
loopne
das
ret
sbb
adc
in
popf
mov
mov
imul
lock
flds
sub
cmp
and
imul
mov
lods
xchg
mov
aam
mov
aam
hlt
jne
push
pop
mov
mov
xor
inc
js
mov
cli
push
xchg
sbb
push
jl
cmpsl
das
inc
sub
pushf
pushf
insb
mov
push
pop
sahf
push
negb
mov
gs
cmpsb
js
jne
aam
mov
call
test
push
mov
xlat
jecxz
jle
push
pop
xor
leave
daa
push
fists
clc
scas
lea
push
shl
jecxz
xor
add
push
negb
mov
or
cmp
out
int3
add
je
aas
rcr
ret
add
data16
arpl
push
and
and
insl
mov
inc
bound
adc
pop
and
lods
test
das
lods
adc
cmp
add
mov
leave
js
fwait
imul
stos
xchg
imull
ss
mov
add
cmpsb
outsl
inc
add
out
dec
repnz
sub
data16
jl
jo
sub
sbb
mov
cwtl
icebp
mov
idivl
xor
call
lock
test
rolb
out
xor
dec
xor
or
mov
into
mov
stos
aas
stos
and
lret
ret
lcall
imul
jecxz
gs
xchg
icebp
jb
jb
sbb
test
cmp
aaa
mov
cmpb
push
outsb
push
xchg
and
jnp
or
push
test
jl
xchg
sub
fidivrs
mov
pop
add
inc
aaa
lret
sbb
repnz
push
out
xchg
mov
int3
sahf
adc
fcmovne
mov
out
xchg
cmp
add
lods
xchg
gs
pop
jg
icebp
push
ss
dec
enter
std
cmc
in
cli
add
cmp
xchg
clc
add
fs
clc
xor
enter
push
mov
ret
dec
mov
add
cmp
add
sub
pushf
mov
imul
dec
xchg
and
mov
pusha
or
gs
push
je
jo
movsl
lcall
je
into
mov
and
or
push
scas
cs
cmp
loopne
push
movsb
jle
cmp
cmp
jp
cmp
cwtl
inc
mov
cltd
dec
inc
repz
mov
lods
adcl
pop
in
subl
fstl
mov
xor
inc
jmp
add
int3
ret
or
or
adc
or
pop
ret
pushf
mov
sub
lret
pop
je
in
xchg
fstl
jns
sub
fldt
push
hlt
pop
jge
xor
pop
push
pusha
inc
inc
mov
and
add
enter
mov
out
lds
pop
sub
repz
rolb
mov
scas
push
cltd
xor
jl
aas
fmuls
fwait
outsb
or
in
sbb
out
lret
push
inc
lret
rolb
sbb
push
push
mov
jns
mov
adc
pushf
repnz
adc
push
les
cmp
cmpsb
scas
cld
lea
mov
mov
xor
or
pusha
stos
mov
lahf
out
test
lods
scas
mov
mov
mov
scas
aaa
fwait
push
sub
scas
in
rclb
xchg
cmp
sub
outsb
add
adc
test
repz
mov
sbb
dec
push
jns,pn
lret
sub
mov
dec
push
xor
imul
adcb
fsub
sbb
jbe
fxch
mov
sbb
repz
call
sub
and
sbb
xchg
pop
arpl
adc
cld
out
sbb
scas
mulb
mov
loopne
outsl
stos
shl
movsl
fimuls
lret
mov
call
out
sub
cmp
sbb
jp
jmp
mov
data16
mov
push
cmc
hlt
cwtl
fistps
loopne
mov
fimull
mov
fisubrs
and
sahf
pop
mov
jne
mov
mov
andl
and
leave
stos
xchg
int
mov
repz
lds
in
lahf
push
out
pop
pop
inc
dec
xchg
insb
mov
mov
in
out
sub
dec
dec
xor
mov
ss
lahf
je
cltd
pop
dec
lret
and
repz
loop
mov
mov
icebp
movsl
mov
and
stc
lea
test
sarb
out
iret
movsl
jbe
mov
pop
lea
sub
iret
call
sbb
mov
or
lods
cmp
cld
or
or
mov
jb
mov
leave
pushf
int
jecxz
mov
fbld
push
sub
subl
in
xor
bound
push
mov
mov
push
push
divl
pop
loopne
in
or
push
dec
mov
aas
mov
mov
adc
adc
adc
jg
lahf
add
or
mov
loope
mov
sub
sahf
pusha
adc
adc
jg
dec
xchg
xchg
and
sbb
add
flds
pusha
jp
and
cli
fscale
push
js
enter
or
adc
jmp
sbb
mov
jb
in
jns,pt
ss
shlb
mov
pushf
add
jge
lods
pop
shr
dec
das
mov
pop
fimull
cmpsb
jecxz
lahf
cmp
lahf
sbb
or
xor
lods
test
cmp
loopne
divl
insl
pusha
or
mov
jle
addr16
hlt
push
sbb
data16
pop
xchg
cld
ficompl
mov
rorb
sbb
scas
and
incb
cmp
shll
addl
arpl
lods
in
gs
pop
addr16
lcall
data16
mov
lahf
call
and
dec
mov
ret
out
sbb
add
pop
and
int
fldenv
add
scas
xchg
dec
cwtl
add
inc
fdivrl
adc
aas
or
dec
sar
mov
aaa
and
imul
shrl
inc
pop
popf
push
or
js
lock
jnp
pop
cltd
mov
dec
adc
les
sub
and
divl
and
adc
mov
mov
mov
lahf
test
jp
sbb
mov
or
xchg
jmp
inc
les
sub
insl
push
xlat
push
scas
sbb
add
dec
mov
xor
sub
and
imul
xor
pop
jo
cmovbe
mov
cmp
les
enter
dec
call
adc
sbb
push
faddl
push
mov
dec
clc
repz
xchg
cmp
adc
and
pop
fsub
mov
cltd
cmp
lret
loope
test
cltd
cmp
cmp
add
mov
fstps
out
lods
mov
out
fsubs
fcos
sbb
push
mov
aaa
push
cmp
add
fwait
cmp
inc
adc
push
aaa
pop
mov
or
pushf
push
push
out
push
test
xor
loopne
cmpsl
call
loopne
iret
or
mov
test
jnp
push
fdivs
lret
mov
repz
mov
popa
xchg
xor
pushf
xchg
xor
shll
mov
rol
insl
adc
ret
bound
dec
mov
ret
sub
adc
jl
mov
ret
xor
push
out
sbb
in
ffree
out
cmp
push
aad
or
jmp
ja
hlt
ja
dec
mov
aam
push
and
sarb
fists
mov
xchg
mov
pop
pop
fimull
push
clc
scas
bound
test
movb
out
mov
xchg
lret
enter
cmp
daa
xor
mov
mov
fwait
cmc
jp
fsubl
pop
enter
jmp
xor
lret
lcall
rcrb
adc
adc
pop
cmp
lods
test
xchg
push
xchg
mov
sbbl
adc
leave
shrl
sbb
ret
cwtl
imul
or
sub
sub
rorb
sarb
push
aas
mov
dec
lods
bnd
mov
adc
cmp
std
mov
fstpt
daa
lds
insl
out
imulb
in
les
inc
inc
mov
inc
xor
in
cltd
and
dec
cltd
decb
shlb
mov
dec
inc
lcall
gs
shll
xchg
lea
cli
xlat
adc
scas
jle
sbb
lock
fisubs
addr16
xor
xor
xchg
ss
sahf
jmp
sub
mov
mov
pop
pop
jnp
outsb
push
sub
sbb
add
testl
int
arpl
in
dec
sbbb
movsl
fidivrl
shll
out
pop
nop
or
cmp
xchg
bound
mov
push
ret
pop
mov
cmpsb
dec
or
repz
and
inc
push
or
negb
push
push
xchg
or
out
push
test
insl
cmpsl
mov
and
inc
cmp
imul
lret
stos
xchg
out
aad
and
push
in
sub
pusha
sbbl
fadd
sbb
mov
mov
mov
jno
pop
loop
or
pushf
sub
gs
jns
or
in
cmp
push
mov
cmpsb
inc
mov
push
mov
add
fsubs
xchg
or
mov
test
dec
and
pop
jbe
fstl
pushf
daa
sahf
loope
adc
mov
dec
cwtl
loope
and
popa
scas
jbe
ret
js
das
cmpsl
jno
mov
xchg
xchg
mov
lahf
sti
hlt
cmpsl
sub
fimuls
cmpsl
stc
in
cltd
je
push
shll
sbb
adc
xchg
xchg
cmp
call
sbb
roll
rcl
jno
or
enter
push
das
pop
and
icebp
lods
and
dec
xor
aam
xor
and
pop
mov
jmp
dec
test
jnp
int
add
fstps
cs
jnp
mov
or
rorb
in
insl
pop
jns
sub
sbb
aaa
sbb
fdivrs
push
rcll
cmp
cmp
dec
xor
outsb
stos
push
fcomp
jnp
out
jns
fidivrs
and
mov
xchg
into
popa
xor
adc
cs
nop
jp
orl
repnz
adcb
mov
cs
pop
xor
add
sti
mov
dec
add
xor
fwait
mov
mov
test
std
mov
leave
pop
rcr
add
and
push
push
decl
mov
lods
repz
jnp
stos
jecxz
test
mov
insl
lods
addr16
aaa
mov
mov
insb
jo
mov
mov
push
xlat
je
jae
xchg
xchg
sub
cmp
shll
jp
leave
mov
std
xchg
mov
dec
add
enter
shlb
cmp
cmp
mov
das
push
push
push
leave
int3
jne
out
in
test
aas
jnp,pn
and
out
pop
jo
stos
fcmovu
cs
adc
dec
cs
arpl
notb
add
hlt
insl
sub
ljmp
push
push
pop
movb
lock
inc
push
or
xchg
ds
jmp
sahf
mov
loopne
pop
es
js
xchg
stos
insb
mov
dec
sub
and
das
shl
out
pop
in
jno
sub
jg
mov
shll
js
ret
jmp
sub
movsb
cltd
jmp
aad
aad
lcall
or
lret
iret
cmp
mov
test
and
sbb
mov
pop
cmp
cwtl
daa
dec
punpckhbw
xor
out
xchg
jl
mov
mov
mov
test
faddl
stos
adc
es
add
cltd
xor
aad
or
imul
dec
lcall
jnp
mov
mov
push
fucomip
orl
dec
ja
sbb
mov
inc
mov
orb
in
std
mov
out
and
mov
jecxz
daa
sbbl
jnp
imul
imul
andb
andl
loop
nop
fwait
lods
popf
popa
add
add
xchg
lret
in
pop
mov
adc
inc
jbe
push
cltd
fcom
add
scas
jmp
ja
out
mov
mov
xor
shrl
pop
test
cltd
aas
and
sbb
pushf
sub
mov
mov
pop
lcall
and
push
ljmp
sub
or
or
jg
dec
mov
sbb
and
daa
xor
push
pop
jno
mov
fs
mov
aad
test
rcll
xor
mov
pop
xchg
sbbb
clc
test
gs
lods
jne
out
jno
out
add
in
dec
aad
movsl
dec
mov
insb
mov
xor
cld
jle
push
xchg
out
inc
call
cmp
or
lea
cmpsl
dec
lock
sub
or
mov
dec
js
cwtl
dec
push
inc
imul
dec
mov
cli
lods
dec
xor
xchg
add
lahf
insl
mov
cmpsl
and
in
fucomip
add
jns
dec
faddl
es
lcall
pop
or
in
push
test
dec
inc
inc
mov
or
daa
cmpsl
sub
fs
sbb
fstpl
ja
data16
jb
dec
shl
push
push
adc
mov
pop
and
cwtl
cmp
in
ja
testl
xchg
repnz
aaa
sar
insl
stos
pop
cltd
push
in
xlat
or
pop
mov
mov
xchg
repz
dec
lea
inc
inc
mov
aaa
fwait
loop
std
cmpsl
roll
rorb
adc
sub
call
sub
xor
lods
scas
mov
jns
sub
jne
stc
mov
repnz
aas
in
push
outsl
out
aad
mov
sets
ficomps
dec
inc
rorb
dec
jmp
mov
jae
mov
sub
jmp
pushf
movsl
inc
sub
popl
xorl
cltd
loope
pop
push
lods
ljmp
sbb
cmp
sub
inc
cmp
lahf
jns
test
lahf
psubd
push
jmp
jns
pop
test
dec
inc
pop
movsl
pop
cmp
fnsave
aad
popl
int
out
jno
pop
dec
sub
pop
aaa
inc
stc
or
cmp
incl
out
call
sub
inc
sub
pop
mov
pop
pop
inc
push
xlat
mov
int
pop
xchg
xchg
and
movb
nop
adc
jp
je
test
scas
jecxz
repz
mov
mov
repz
ja
jmp
push
lock
je
in
sub
and
inc
fwait
inc
and
sub
clc
sahf
mov
dec
jmp
xor
addb
fnstenv
mov
pop
pusha
push
movsl
sahf
jae
lret
and
mov
push
pop
sub
stos
adc
lcall
stc
lea
nop
lret
sbb
je
jle
pop
lret
and
rcll
pop
clc
insl
cs
js
std
push
test
inc
ljmp
stos
inc
cli
addb
fdivr
addb
jp
push
leave
cli
pop
adc
add
xchg
arpl
in
xor
data16
pop
add
sub
out
mov
xchg
sti
outsl
mull
adc
lahf
xor
repnz
push
or
sti
push
adc
inc
and
loopne
fmul
xlat
adc
out
mov
mov
and
repnz
mov
cmp
icebp
inc
adc
loope
push
pop
mov
sbb
sbb
pop
push
mov
imul
pop
iret
push
push
ret
dec
lds
loop,pn
addr16
fdivrp
movsb
bound
mov
sub
fisubl
cwtl
add
pop
repz
mov
and
xor
jo
xchg
test
dec
jge
pusha
push
and
xor
mov
adc
rorl
adc
sbb
hlt
in
sub
pushf
xchg
enter
add
ljmp
mov
xor
xchg
push
jnp
sahf
push
pop
nop
dec
or
inc
jbe
lds
divb
push
sub
add
sub
lds
repz
in
xchg
incb
iret
pop
mov
inc
dec
add
pop
mull
aam
xchg
cmp
adc
xchg
shl
das
dec
cmp
lods
lret
mov
jp
lds
pop
xchg
stc
fmull
ret
and
push
in
loop
cmpsl
stc
xor
mov
or
push
mov
insl
jns
xchg
and
dec
mov
pop
push
js
dec
imul
pushf
in
jnp
cmp
dec
loop
enter
lahf
sub
mov
stos
sub
lret
cmp
mov
lcall
inc
xchg
aam
ljmp
sbbb
xchg
dec
mov
decb
pusha
jl
outsb
mov
stc
mov
lret
or
or
aas
adc
ja
add
test
int
lock
xor
ss
lcall
sub
cli
adc
fsin
push
or
subl
push
movsl
in
mov
jbe
xor
iret
jl
and
inc
sbb
popf
mov
or
mov
fwait
sahf
jmp
jo
loop
call
jb
jl
push
sti
test
leave
xchg
dec
jl
daa
mov
pushf
pop
push
pop
les
imul
xor
adc
call
fdivs
lahf
popf
cmp
mov
xor
lock
leave
int
std
push
lock
adcb
pop
or
and
nop
sub
xor
sub
mov
dec
adc
mov
add
hlt
pushl
lret
fwait
outsb
test
ret
scas
scas
adc
xor
jb
fs
push
dec
mov
jmp
or
aaa
adc
lods
cli
mov
cltd
xchg
inc
stos
add
jnp
out
xor
lds
pusha
adc
mov
sub
mov
xchg
dec
inc
xor
js
pop
jbe
jl
xor
jo
shrb
jb
iret
inc
jle
cmp
sahf
cmpsb
sbb
mov
fsubrs
in
out
xchg
not
mov
xchg
cmp
xor
and
jge
or
inc
or
mov
daa
lahf
lret
pop
ret
add
js
jmp
pop
and
inc
push
in
push
sbb
mov
sub
popf
pop
add
pop
stos
cld
xor
insb
push
divb
in
daa
out
ja
jno
mov
aaa
lahf
dec
aam
push
push
xlat
mov
movsb
sahf
stos
mov
jns
mov
shll
cmp
ds
jg
popf
pop
sbb
mov
jae
test
pop
adc
jne
scas
xorl
inc
jb
push
push
mov
push
sub
into
in
inc
jne
push
xchg
dec
push
push
aas
jne
ffreep
mov
sub
mov
lret
jne
jae
dec
pop
jne
inc
aaa
imul
cmc
mov
push
jle
lock
xchg
ja
inc
jmp
adc
hlt
lods
mov
xor
or
add
aaa
out
and
movsl
test
add
nop
sub
push
out
jb
sti
or
gs
pop
fucomp
ss
mov
and
add
xcrypt-cbc
cmpsl
shlb
stos
ror
cmpsb
fiadds
aaa
icebp
aad
std
sbb
repnz
mov
pop
xor
jbe
jns
and
test
gs
scas
and
out
leave
test
inc
mov
jb
jbe
xchg
sbb
sahf
sub
mov
mov
mulw
mov
sub
rcrl
addr16
add
out
jb
cli
lods
cmpsb
cmp
push
cli
push
push
bound
sub
mov
or
or
rorl
mov
jb
enter
test
lret
outsl
movsl
mov
cmp
push
cwtl
aad
mov
pop
lods
and
mov
pop
cmp
jbe
jb
pop
stos
mov
insb
jl
add
out
xor
dec
mov
jo
aas
dec
inc
push
ja
push
inc
jo
ds
push
test
test
mov
sbb
dec
mov
mov
lahf
mov
jne
pop
mov
fdiv
push
sub
nop
int
pop
and
bound
es
inc
xchg
cmp
or
or
adc
jl
xor
push
xor
and
test
gs
stos
xchg
pop
mov
test
nop
jb
jno
mov
mov
or
loope
enter
inc
icebp
inc
icebp
cmc
and
jmp
sbb
push
fnsave
aas
push
xorl
aam
push
dec
loopne
cltd
sbb
cmp
insb
cli
mov
sbb
inc
pushf
mov
push
pop
aam
xlat
add
sub
daa
mov
ret
inc
decl
mov
stos
scas
insl
lcall
jo
cmp
repz
inc
fidivrl
pop
pop
dec
xchg
jl
mov
jns
outsl
lahf
or
rcl
sub
push
loope
insb
push
aam
repnz
xlat
loopne
xlat
mov
mov
dec
push
outsl
and
xor
fnclex
rol
pusha
out
stc
popa
push
in
gs
ljmp
mov
inc
pop
rcll
push
lds
pop
dec
adcb
jns
test
out
sub
or
sbb
xor
and
mov
movsl
sbb
xchg
push
lahf
jae
push
adc
sub
lea
out
adcb
sub
xor
sub
ficoms
mov
add
adc
xchg
sbb
dec
addr16
xchg
loopne
in
mov
jns
cmp
fsts
sbb
ror
bound
xor
lcall
mov
mov
and
add
mov
sbb
ds
gs
add
idivl
dec
pop
addl
pop
xchg
outsl
bound
and
pushf
vpaddusw
mov
fdivl
add
es
loopne
xchg
sahf
lcall
push
add
dec
jg
mov
push
xor
dec
mov
out
lcall
ficompl
xchg
mov
fdiv
cmp
les
xor
and
cmp
imul
mov
outsl
inc
dec
jmp
xchg
nop
sub
int3
sub
mov
inc
imul
lcall
fisttps
push
adc
shlb
lret
mov
cmp
dec
fwait
shrl
xor
and
xor
lret
cld
xchg
or
mov
mov
mov
and
scas
rcrl
rcll
fstpl
rcrb
adc
xlat
daa
iret
outsl
lock
push
icebp
sbb
or
data16
push
sbb
fs
aas
aam
mov
cmp
jp
mov
loop
stos
add
cs
cwtl
je
sbb
and
es
mov
push
test
mov
jbe
rorl
cmpl
dec
fisubs
std
std
push
xchg
xchg
pop
add
push
out
add
fnstenv
jecxz
cmp
testl
aaa
xor
hlt
or
mov
shr
dec
sub
sbb
jl
mov
or
xor
jge
enter
test
xchg
icebp
iret
inc
mov
loop
push
outsb
fmull
mov
rclb
cltd
mov
movsl
ret
add
dec
iret
fmuls
and
out
cmp
dec
ds
popf
ja
aaa
jne
imul
cs
out
mov
dec
push
mov
scas
in
xchg
mov
xor
scas
xchg
shrl
inc
loopne
int3
jmp
sub
jo
mov
mov
test
inc
inc
lds
and
pop
in
xlat
in
lret
mov
sub
mov
subb
fistpll
mov
push
imul
and
and
mov
adc
andl
xor
dec
ret
test
sahf
jb
mov
dec
cltd
mov
or
sub
call
xchg
mov
jb
scas
jmp
push
leave
mov
cmc
pop
es
sarl
ret
xchg
sti
inc
add
and
pop
inc
sti
arpl
fwait
orb
jle
shr
hlt
add
fwait
pushf
push
aaa
hlt
jmp
stc
or
es
enter
faddl
xchg
push
aam
stc
js
in
push
mov
addr16
fsub
daa
xor
aaa
arpl
push
jge
pushf
push
add
xor
xlat
sbb
pop
ds
arpl
sti
scas
pop
pop
inc
sahf
pop
mov
jmp
nop
pop
inc
xorl
push
jecxz
inc
cli
loopne
push
ret
mov
push
mov
lret
sti
or
cwtl
jnp
dec
pop
pop
xchg
enter
movsb
cmp
push
pop
std
call
mov
cmp
and
lods
push
mov
jle
aas
inc
out
or
dec
inc
inc
cmp
dec
cmp
or
cmpsl
mov
popf
lds
cmp
xlat
pop
cmp
cmpsb
adcl
pop
iret
out
jno
xchg
push
push
pop
jne
push
sub
adc
and
xchg
pop
add
jge
sbb
mov
sarb
or
stos
add
push
out
ds
inc
fidivs
or
jno
cli
or
shll
mov
jns
test
dec
int3
mov
sub
ds
jno
in
and
push
or
adc
lds
bound
mov
mov
inc
pop
pop
jnp
jge
adc
mov
mov
in
adc
jno
test
mov
jns
lahf
sbb
daa
pusha
add
sub
xchg
dec
push
mov
sbb
in
mov
add
cmpsl
jp
scas
hlt
pusha
mov
or
dec
insb
cmp
jo
js
test
adcb
mov
xlat
data16
jp
pop
or
dec
mov
adc
shrl
and
jecxz
sbb
loopne
add
mov
imulb
dec
loopne
lret
sbb
lret
sbb
fmulp
adc
mov
push
mov
inc
sub
sarb
push
pushf
cmc
sub
xor
xor
jno
cmpsl
test
adc
lods
or
aas
outsl
out
testl
pop
iret
call
cmp
fnstcw
xor
mov
shlb
pop
movl
push
leave
repz
icebp
mov
sub
add
sub
iret
push
mov
test
insl
out
bnd
jno
push
lods
push
cmpsl
loopne
sbb
dec
movsb
lock
and
loope
xor
sbb
loopne
lret
cmp
push
dec
push
push
scas
repnz
mov
rcrl
mov
pop
xor
inc
mov
inc
add
aas
or
xchg
adc
or
fs
fdivr
ds
xchg
and
sbbl
jg
outsb
add
xor
mov
add
sub
mov
and
addr16
inc
imul
pusha
aas
inc
pop
test
sub
sbb
mov
sti
jno
popl
add
or
and
pop
add
and
outsl
subl
inc
push
dec
and
ficomps
push
push
xor
lret
shll
mov
inc
inc
mov
pop
js
cwtl
lds
inc
in
pop
lea
mov
aam
aaa
cs
xlat
ret
repz
jle
pop
sbb
or
pop
xchg
push
mov
push
outsl
cmp
adc
jp
sbb
or
ja
sbb
xchg
fxam
mov
and
sbb
sbb
fldt
cltd
mov
movsl
add
mov
inc
xor
jo
xchg
ret
push
mov
mov
xor
jbe
outsb
xchg
pop
mov
xor
xchg
imul
jl
cld
lods
or
cltd
fs
out
outsb
sbb
mov
shll
adc
cltd
hlt
ret
jb
shl
or
jno
inc
shl
jns
fnstcw
sbb
push
ss
ret
xchg
popa
mov
inc
das
out
das
xor
outsb
dec
jg,pt
je
jbe
aam
mul
cmp
pop
sub
enter
dec
mov
out
fmuls
loopne
xor
xchg
icebp
aaa
xchg
in
lret
mov
lret
movsb
pop
mov
shlb
addr16
inc
mov
out
sub
leave
xor
fbld
std
push
sahf
xchg
movsb
stc
cmp
pop
sbb
popa
mov
mov
pushl
scas
add
js
or
lcall
sbb
mov
adc
test
subl
dec
push
inc
test
jge
pop
push
mov
dec
push
sub
inc
sub
jne
nop
inc
imul
jb
sub
pop
lods
addr16
cmp
add
pop
test
mov
out
mov
lock
out
dec
inc
push
int3
jbe
add
shlb
xlat
or
cmp
fsubrs
or
bound
dec
add
out
into
loopne
or
adc
inc
nop
in
hlt
mov
jbe
mov
dec
jae
shl
fwait
inc
sbb
mov
xor
pusha
adc
push
cli
cli
pop
and
push
loop
imul
outsl
ret
addb
stos
mov
outsb
pop
dec
sahf
add
lock
lahf
xchg
cmp
inc
pop
insb
push
mov
xor
leave
pop
push
or
daa
push
xor
lods
cmp
mov
sbb
push
cmp
ss
sbbl
or
imul
mov
ljmp
adc
fcoml
or
loop
mov
mov
pop
mov
and
icebp
call
leave
sar
pusha
movsb
fadds
test
xor
ret
fldcw
xchg
rclb
push
cmp
mov
push
lea
or
jae
fidivrs
enter
xchg
lock
insl
add
adc
rcr
sbb
cmc
out
jnp
or
push
imul
jns
pop
dec
leave
dec
nop
pop
dec
loopne
adcb
cmpsl
inc
pop
cmp
stc
cmc
in
roll
xchg
mov
jns
in
add
mov
jnp
mov
out
or
lcall
lods
pop
pusha
loopne
mov
or
imul
jecxz
mov
sub
add
xor
pop
or
movsb
push
add
push
lock
inc
jge
pop
add
nop
dec
pop
fwait
aas
or
stos
fsubp
jge
pop
mov
icebp
aam
cli
push
cli
subl
cmp
dec
jmp
fwait
ljmp
and
xchg
sbb
hlt
call
jle
pop
ret
test
jns
jno
and
jge
inc
hlt
pop
fstpl
jnp
stc
fidivs
dec
iret
iret
push
inc
mov
outsl
stos
rcr
xlat
pop
cs
loop
xchg
lret
in
cmp
xor
xor
dec
push
leave
pop
mov
sbb
jmp
mov
fisubrl
fbstp
xor
imull
mov
mov
fwait
enter
imul
or
shl
mov
sbb
and
shll
pop
pop
fldl
ljmp
sbb
or
leave
ljmp
mov
dec
sbb
dec
sub
push
lret
pop
mov
rorb
xchg
lds
test
cmp
cmpsl
xor
ret
push
stos
jmp
xchg
repz
call
test
or
mov
leave
sarb
xchg
addr16
push
or
pop
pop
addr16
aas
jo
movsb
sub
pusha
cld
pop
push
mov
pop
xchg
fwait
test
int
jg
mov
fwait
nop
fnstcw
mov
aaa
inc
subl
mov
mov
daa
and
mov
pop
daa
inc
mov
pop
mov
movsb
test
mov
xlat
mov
div
adc
negl
inc
addr16
dec
lods
inc
or
or
sbb
sbbl
ljmp
cld
sub
push
fs
pop
or
sti
test
push
bound
in
and
in
leave
in
xor
and
sub
test
ret
js
mov
adc
dec
inc
pop
xorb
jno
cmp
stos
scas
test
pop
aad
pop
sub
jecxz
xchg
xchg
mov
outsl
int3
lock
aad
es
js
sub
dec
inc
pop
lret
and
xchg
jle
mov
xchg
cmpsb
adc
stc
or
pop
sbb
cmp
sub
lea
movsl
pop
call
add
std
push
scas
jb
mov
push
jge
push
sub
add
xchg
xor
jo
xchg
mov
mov
sub
mov
insl
jl
insb
ret
cmp
cmpsl
mov
repz
jg
cs
into
push
sbb
or
push
cmp
sbb
jmp
mov
xor
js
inc
jbe
incl
mov
jg
push
sbb
xchg
ds
test
mov
and
inc
push
jns
and
inc
mov
and
mov
jnp
pop
testl
cmpsb
push
sbb
lcall
mov
push
mov
dec
sbb
push
mov
xchg
loopne
lods
xor
fcmovu
lds
sbb
sbb
mov
aam
xchg
mov
pop
mov
add
pop
jne
sub
mov
bnd
inc
jmp
sti
test
mov
xchg
in
jae
dec
pop
add
adc
sbb
ds
jns
leave
aaa
lock
cli
divl
inc
mov
push
push
xchg
dec
gs
mov
inc
lcall
sub
mov
jecxz
mov
ret
lcall
mov
sbb
mov
inc
lcall
repnz
jo
out
nop
rcll
sbb
andb
push
lahf
mov
bound
fildl
cmp
dec
insb
imul
xchg
test
jbe
lret
or
inc
ja
rol
pop
cld
imul
mov
test
jns
jecxz
mov
js
out
imul
push
and
pop
fstpt
jns
or
ret
cmp
outsb
pop
jmp
or
sbb
leave
fwait
movb
aas
and
mov
stos
xchg
and
cltd
or
mov
xchg
loopne
sub
ja
push
std
pop
mov
mov
leave
push
add
scas
lds
jl
dec
ret
or
fisttpl
or
test
decl
mov
roll
arpl
dec
cmp
repz
gs
xchg
sti
mov
push
xchg
xor
sub
and
sub
xchg
dec
xor
dec
pop
imul
fwait
cld
mov
rol
ja
jns
lret
xchg
dec
shl
adc
inc
jno
pop
mov
out
call
and
and
pavgw
sbb
dec
and
jb
out
mov
fistl
pop
push
test
loop
pcmpeqd
fstl
insb
add
dec
mov
and
mov
aaa
lock
add
inc
lods
inc
lods
pop
mov
std
enter
dec
adc
xchg
or
mov
std
mov
cmpsl
pop
shrl
pop
outsl
sub
mov
pop
jle
inc
mov
jle
out
fnsave
pop
sbb
cmp
imul
or
fnstsw
loope
pop
push
lea
cmp
daa
enter
xlat
ss
push
in
test
lcall
cmc
cli
sbb
add
inc
pop
or
push
pop
push
sub
jne
pushl
push
cmp
add
test
mov
fdivs
mov
mov
push
lret
shll
fisttpll
or
and
mov
repnz
stos
and
sbb
mov
pop
imul
faddl
jne
mov
ret
addr16
cmpsl
in
pop
mov
mov
lock
mov
sub
mov
andb
bound
jo
mov
test
or
and
outsl
cmpsb
xor
lods
dec
sbb
lods
and
rcr
adc
jecxz
jg
jg
repnz
xchg
dec
adcl
jle
mov
or
xchg
gs
pop
lea
adc
sti
jl
dec
lods
popa
and
xor
sbb
ss
or
adc
fmuls
xor
mov
cwtl
push
fwait
jnp
mov
cmpb
imulb
xor
pushf
imul
outsb
ret
fs
rorb
lcall
push
adc
push
xchg
leave
push
xor
pop
inc
pushf
push
xchg
and
je
shrb
out
enter
or
leave
stos
push
and
fildl
inc
and
arpl
pop
pop
addr16
in
popa
movsl
xchg
adc
addl
rolb
xor
push
pop
outsb
and
jg
imull
mov
dec
test
mov
xchg
sub
movb
adc
mov
lods
adc
push
fs
mov
sbb
outsl
repz
or
ret
xchg
cld
test
aad
xor
inc
gs
inc
loope
jbe
loope
iret
push
inc
ficoms
data16
fs
and
mov
push
aad
jge
jae
and
ljmp
insl
xor
mov
sbb
jecxz
shrb
push
xor
push
inc
or
cmpsb
mov
arpl
mov
xchg
mov
test
out
pop
jnp
fcoml
sbb
out
data16
inc
js
repnz
mov
and
je
cmp
sti
mov
stc
cmpsb
push
pushf
ljmp
cmp
lret
mov
push
loopne
jnp
sub
cmpb
stc
lret
aam
or
scas
ja
outsb
scas
test
test
add
add
or
std
bound
popf
lods
test
mov
in
sahf
inc
or
bts
sbb
jnp
out
xlat
out
daa
sub
add
dec
cmpb
push
mov
and
sbbb
mov
ror
mov
and
add
cmp
movsl
in
pop
loop
add
fdivrl
cwtl
xchg
inc
add
insl
fisttps
adc
pushf
popa
test
movsl
js
test
bound
push
cli
add
pop
inc
inc
movsb
mov
imul
lret
jae
mov
cmp
in
jl
lds
adc
inc
and
cmp
cmp
xchg
add
ljmp
and
mov
lock
inc
xchg
clc
cmp
sub
mov
test
mov
arpl
cmp
xchg
jne
out
inc
es
insl
pop
dec
mov
sub
ficomps
cmp
push
shl
push
cli
popf
sti
xor
dec
sub
xchg
cmp
push
lods
mov
je
cmp
fdivrl
sbb
xchg
gs
and
inc
push
inc
and
js
and
sbb
lret
out
xchg
lock
dec
lcall
jle
dec
daa
pop
jo
repz
movsl
stc
mov
mov
push
out
leave
clc
aad
inc
cmp
sahf
mov
xchg
movsb
stos
xchg
and
lea
hlt
sbb
xor
nop
fdivs
pop
js
xchg
pop
int
mov
arpl
cmc
fsubp
add
in
insl
sub
jge
fstpl
xchg
push
sub
pop
sub
inc
popa
lcall
jnp
leave
rclb
nop
imul
mov
mov
dec
mov
and
subb
in
xor
pop
jnp
jns
arpl
pop
xchg
cmc
cltd
fcmovb
mov
and
mov
orl
test
cmp
pop
fwait
add
cltd
jo
adc
jno
sub
adc
aas
cmpsl
in
test
push
push
pop
clc
cmpsb
push
sbb
or
inc
mov
inc
mov
lcall
adc
out
adc
mov
mov
sahf
sbb
sbb
insl
into
jns
add
lods
mov
mov
sbb
jb
sub
insb
push
pop
mov
in
mov
inc
mov
xchg
mov
loopne
gs
and
mov
or
xor
addr16
push
inc
adc
sub
pop
fnstsw
repnz
cwtl
inc
out
test
jnp
xor
das
jge
jnp
lea
sbb
aaa
lods
push
inc
mov
enter
aas
mov
es
cli
mov
inc
xchg
mov
sarl
xor
or
pop
cmc
xor
ja
jae
ret
add
pop
sub
loop
cmpsb
sbb
pop
cmp
sbb
ss
push
lea
aam
mov
arpl
cwtl
adcb
sub
out
push
pop
into
les
fidivs
jbe
mov
dec
mov
xchg
fidivl
lret
pusha
sub
les
and
sub
int
popf
aaa
mov
test
or
lret
jg
and
xchg
stc
inc
or
je
adc
stos
mov
dec
call
sahf
mov
pusha
lahf
dec
fsubr
mov
ljmp
xchg
mov
mov
jle
or
ret
daa
mov
add
cmp
mov
lahf
add
clc
test
mov
dec
or
pop
mov
and
fdivrl
in
push
add
imul
xor
dec
xlat
into
in
jno
stc
sbb
scas
mov
rcll
mov
ret
fxrstor
int3
mov
inc
xchg
cmp
pop
je
jno
sbbl
cmp
or
test
adc
leave
xchg
popa
aas
sub
or
aad
imul
inc
jb
sub
popf
lcall
mov
popf
inc
mull
lock
push
xchg
mov
jb
mov
xor
inc
jge
pushf
cmp
out
lret
pop
mov
mov
jo
and
dec
imul
imull
inc
in
push
into
mov
repz
mov
scas
mov
lret
into
push
das
xor
test
gs
arpl
lods
mov
shl
xor
and
ret
shll
aas
push
jp
jne
mov
push
lods
xor
pop
sub
and
pusha
pop
repnz
fwait
int3
add
aas
cmp
lea
sub
jmp
add
sbb
test
jno
gs
mov
adc
sub
scas
dec
xor
push
mov
xchg
ja
dec
lret
loopne
mov
adc
sub
roll
push
repnz
mov
jae
and
push
fsts
adc
and
and
pushl
and
rol
xor
lcall
std
shll
icebp
add
and
add
mov
mov
call
int
push
leave
test
xchg
roll
jge
xchg
or
inc
pop
jmp
test
mov
repnz
cmp
in
add
test
jnp
cmp
adc
jnp
dec
outsl
sbb
or
cmp
cmp
or
mov
cmpsb
das
adc
sbb
and
xchg
popa
add
clc
or
das
std
mov
scas
ss
pushf
xor
pop
scas
call
sahf
rcrb
js
pop
and
sti
test
or
fnstenv
call
adc
hlt
jo
sub
jns
add
mov
data16
shl
mov
aaa
adcl
sub
xor
push
in
cld
orb
fwait
lret
jle
and
aam
jge
fwait
das
fdivrl
xlat
movsl
lods
xchg
dec
push
mov
pop
sbb
add
daa
out
arpl
jge
jo
orl
add
push
clc
into
ror
push
xchg
out
sub
mov
push
inc
xor
mov
jg
pop
addr16
cmova
xchg
mov
mov
ljmp
jns
out
negb
sbb
pusha
and
dec
je
test
mov
pop
test
mov
mov
mov
scas
shrb
push
push
fsts
jl
das
dec
int
jge
std
dec
std
ljmp
mov
mov
dec
mov
fisttpl
imul
in
and
test
test
in
repnz
mov
cld
add
jg
mov
pop
mov
add
mov
add
aas
xchg
push
xchg
jg
jmp
sbb
push
push
mov
bound
sub
imul
ret
mov
pop
ror
mov
add
insl
mov
movsb
or
imul
mov
ds
xor
mov
sbbb
ds
mov
out
adc
adc
insl
dec
mulb
pushf
inc
push
add
sub
cwtl
adc
lds
ds
sbb
mov
test
xchg
jecxz
xchg
pop
rcr
inc
into
sbb
xor
push
in
mov
cltd
sahf
push
test
fwait
jnp
mov
push
push
negl
xchg
xor
pop
sub
mov
jl
sub
loope
dec
in
add
cmp
test
sti
cmp
inc
fmul
mov
shll
inc
icebp
int3
mov
lret
push
dec
push
xorb
orb
xor
pop
pop
fistl
sub
dec
xchg
jmp
mov
stos
shrb
lods
nop
sbb
sbb
cmp
jbe
sbb
push
sbb
cmpsb
dec
push
or
xchg
xor
ja
dec
push
std
lock
dec
shl
sub
sub
or
xchg
data16
sub
lea
pop
outsl
ret
dec
push
jae
or
mov
lock
popf
ljmp
cmp
test
cwtl
push
lods
ret
jl
les
test
cmpsl
sub
aaa
cmpsb
div
lret
inc
push
lret
outsb
push
inc
mov
imul
fstp
and
repnz
add
pop
push
fdivr
cmp
xchg
sbb
arpl
xor
sbb
sbb
loop
testl
mov
lea
sbb
pop
jne
xchg
out
push
aad
or
ficomps
ficomps
repnz
in
dec
fwait
icebp
out
push
bound
dec
adc
pop
aas
fdivrl
mov
imul
sbb
mov
or
or
mov
fdivl
addr16
push
sbb
outsl
cwtl
jbe
aad
inc
es
leave
pop
jne
inc
or
dec
sbb
pop
xchg
fucomp
xor
or
pop
das
out
sti
es
movsb
cli
jl
in
ds
pop
push
mov
jae
adc
pusha
insb
adc
mov
xchg
sahf
addr16
mov
and
xchg
out
cmp
loop
dec
add
and
addl
sbb
push
mov
push
sbb
pop
repnz
rcrl
loope
sbb
or
inc
jb
mov
enter
rcl
imul
dec
xor
xorb
fdivl
jbe
daa
int
jmp
hlt
nop
pop
or
clc
push
cmp
cmpsl
jb
pop
test
cs
push
inc
push
das
mov
add
and
jno
mov
or
cmp
push
xchg
add
or
inc
sahf
fwait
push
mov
lock
loope
das
out
test
jecxz
loop
cmp
xchg
add
jae
outsl
jmp
pop
jmp
xchg
imul
xor
xor
insb
adcl
cli
or
sbb
dec
fcmove
push
sti
xlat
clc
cmp
fwait
cmp
addb
jg
std
sbb
mov
xchg
arpl
movsl
imul
xor
xchg
rcll
sub
mov
jo
enter
adc
push
or
add
pop
lahf
fs
in
cmp
mov
xchg
inc
sbb
mov
and
pop
sub
and
ljmp
and
fcomi
addr16
ja
pop
imul
stos
mov
xchg
xchg
inc
outsl
xadd
jb
fwait
repz
test
mov
aad
ljmp
dec
jecxz
sbb
movsb
cld
mov
jl
loopne
cld
das
in
add
mov
daa
and
push
inc
push
xor
mov
imul
jnp
xlat
ret
ss
or
repnz
inc
inc
rclb
lods
push
add
in
push
popf
arpl
iret
sbb
mov
sbb
testb
lock
dec
insb
out
in
test
outsl
mov
lods
stc
jb
cmc
and
adc
pop
xchg
sub
frstor
mov
orl
jno
loop
test
mov
pop
fsubl
and
cmpsl
push
mov
cmpl
outsl
sbb
iret
pop
mov
jmp
adc
mov
aaa
jg
adc
movsl
add
insl
out
mov
mov
xchg
push
sbb
pop
xchg
fdivrp
pushf
xchg
dec
ljmp
add
imul
push
nop
bound
clc
enter
push
imul
rcll
rcrb
pop
cmp
add
test
sbb
mov
rorb
inc
or
inc
lea
inc
das
jl
sbb
mov
mov
gs
inc
add
les
xchg
or
cmp
int3
sub
fldt
cmp
adc
pop
pushl
popa
outsl
js
icebp
adc
push
jmp
jg
sub
loopne
int
imul
xor
cmp
sbb
inc
jle
xchg
out
fmul
pop
repnz
icebp
mov
stos
jo
jo
lret
outsb
stos
pop
adc
or
sbb
hlt
ss
insb
pop
popl
inc
pop
push
sbb
gs
jo
mov
lock
adc
and
out
inc
jno
pop
jg
das
sub
inc
sub
out
sbbl
insl
add
dec
stos
pushf
mov
adc
cmp
push
pop
and
mov
xlat
lea
repnz
fdivrs
push
cwtl
push
aad
mov
mov
mov
adc
pop
xchg
inc
lods
ds
adc
mulb
shrb
std
sub
and
jno
scas
bound
mov
sbb
jno
jmp
add
pop
xchg
inc
sbb
sub
insb
imul
scas
inc
je
or
ret
mov
sub
ret
sbb
aad
push
adc
fdivrl
dec
and
hlt
pop
mov
stos
cli
mov
ds
cmp
lret
data16
popf
push
cmp
adc
sarb
cmp
mov
xor
ja
push
dec
cmp
inc
pushf
cmpsb
cltd
decl
mov
mov
pushf
adc
mov
repnz
arpl
outsb
lods
or
adc
les
pusha
dec
cmp
lock
adc
dec
mov
add
add
mov
xchg
loopne
xor
mov
push
aas
dec
and
pop
scas
push
push
imul
ljmp
cwtl
jo
jmp
ret
or
xor
cmpsl
jb
mov
icebp
adc
dec
aas
push
dec
mov
push
sub
xchg
jbe
int3
or
int
inc
adc
jl
mov
add
in
movsl
mov
or
cmpsl
fmull
dec
in
cli
jbe
sub
cmp
adc
jbe
addr16
lcall
les
movsb
mov
pushf
pushl
xchg
mov
lcall
add
aaa
in
inc
push
mov
insl
test
or
nop
iret
popf
adc
xor
and
fbld
sbb
mov
mov
fcoml
aad
or
fsts
inc
jle
lcall
repz
push
cmp
int
mov
fs
mov
int3
into
into
xchg
add
lret
out
int3
in
sub
mov
push
mov
adcb
push
loopne
nop
call
sub
rclb
pop
inc
cmp
mov
pop
dec
scas
fsubl
and
dec
lea
inc
add
lods
xchg
jne
aaa
fwait
mov
out
enter
xchg
sbb
aaa
inc
xchg
inc
pusha
loope
movsb
repz
push
pop
dec
fisttpl
fs
xchg
lret
lods
test
in
xchg
cmp
push
aaa
loopne
fldt
inc
pop
aas
addr16
insl
cmpl
push
xchg
mov
lret
gs
push
add
and
add
adc
call
roll
xchg
add
pusha
loopne
leave
aad
test
xadd
mov
pop
mov
adc
mov
adc
daa
xor
lock
push
add
dec
aaa
lahf
push
in
xchg
mov
pop
iret
jbe
outsb
ja
pop
int3
cmp
daa
mov
push
mov
jl
xor
stc
and
xchg
loop
iret
dec
je
data16
cmpsl
mov
pushf
and
and
sarl
mov
int3
lcall
inc
lods
leave
aam
imul
cmc
cltd
inc
out
jp
jae
adc
icebp
stos
ror
sub
cli
cmp
xor
pop
dec
gs
inc
sub
movsl
stc
cmpsl
and
xorb
cmp
and
lods
sub
daa
imul
std
cli
inc
int3
xor
jb
adc
bound
jne
sbb
sarb
jmp
out
and
lret
xlat
cltd
dec
rcrl
xchg
rcrb
sarl
add
fmuls
daa
xchg
rcl
movsl
in
inc
jbe
fdivrl
adc
push
push
jmp
pop
stc
cmpsl
icebp
outsl
xchg
cmpl
xor
xchg
add
sbb
cmp
sbb
or
cltd
jb
adc
jge
lcall
repnz
mov
mov
mov
mov
fisttpll
jne
clc
add
call
or
sbb
test
hlt
xor
icebp
out
mov
inc
call
fsubrp
push
les
pop
and
ds
jge
xor
cltd
xchg
outsb
ds
add
imul
roll
mov
lock
stc
sub
sti
inc
mov
out
test
cmp
enter
mov
jp
loope
adc
jns
fdivr
push
insl
xchg
cmp
pop
andl
ds
push
jae
idivl
sbb
mov
cmp
xor
aaa
out
gs
pop
outsl
into
sahf
loop
ret
mov
addr16
inc
and
sub
aaa
popa
fistpl
imul
imul
cmpsb
cmp
addr16
cmp
fdivs
mov
add
std
pop
xchg
inc
mov
pop
call
xor
ds
pop
ds
and
mov
outsl
dec
out
or
int
ja
mov
rol
sub
in
dec
push
fdiv
faddl
cld
sub
mov
pop
or
and
test
adc
les
mov
iret
andl
xor
xchg
and
sarb
push
jne
lods
mov
or
scas
pop
push
and
dec
lret
pushf
lock
outsl
pop
outsl
xchg
and
sbb
and
loopne
and
fwait
lods
pop
cmp
into
pop
pop
dec
or
mov
shrl
and
fadd
mov
mov
decb
adc
das
cmp
mov
adc
and
fcoml
in
loop
pop
or
lock
icebp
add
popa
test
add
imul
jno
inc
cmp
pop
insb
jnp
int3
push
push
sbb
cmp
stos
xor
mov
leave
mov
inc
in
add
out
adcl
adc
pusha
mov
shrl
push
jp
mov
pop
punpcklwd
dec
and
mov
lds
mov
std
mov
lods
popf
lret
add
syscall
stos
enter
xor
inc
sub
jl
push
int
adc
adc
jle
nop
imul
nop
les
pushw
inc
mov
jbe
xchg
or
inc
adc
sbb
pop
sub
je
inc
pop
xor
test
pop
bound
xor
ret
call
mov
adc
or
shll
mov
out
pop
mov
mov
cli
sbb
push
ret
sahf
mov
mov
enter
addr16
jns
pop
outsb
repz
icebp
cmp
push
sub
push
inc
scas
dec
enter
mov
jns
push
xchg
adc
add
cli
push
dec
sub
roll
addr16
cmp
rcr
dec
inc
sub
imul
and
pop
outsb
test
mov
adc
bound
jecxz
xchg
arpl
mov
ss
push
popa
cld
cmp
clc
mov
jae
shr
lahf
mov
dec
xor
adc
mov
cmpsl
push
icebp
inc
push
inc
js
addl
repz
mov
dec
int3
adc
pop
xor
mov
daa
inc
add
aaa
add
enter
mov
into
or
insb
sbb
out
adc
int3
push
imul
in
pop
push
popf
aas
adc
repz
jle
mov
mov
add
or
call
out
push
push
and
cmc
mov
jp
jae
mov
jg
je
push
repz
cs
imul
push
jo
addr16
jl
jg
arpl
pop
hlt
mov
fdivrl
inc
mov
cmp
sub
cmovo
ds
loope
push
aas
repnz
mov
mov
add
imul
xchg
fildl
cld
sbbl
mov
xchg
xchg
jae
xchg
pop
ret
jno
fimull
sub
in
popa
popf
xor
xchg
inc
xchg
pop
dec
clc
inc
mov
fiadds
push
mov
imul
mov
sub
std
or
iret
jle
mov
fbld
fldenv
jge
hlt
dec
mov
test
xchg
les
jl
and
adc
inc
adc
out
xchg
outsb
pusha
sub
add
movsb
test
add
lock
and
xchg
insb
xchg
add
xchg
inc
mov
jecxz
lds
aam
add
mov
mov
aad
imul
jmp
mov
sub
xor
pop
insl
imul
mov
pop
mov
imul
inc
stos
lret
stc
sbb
sbb
cmpsl
or
push
or
ss
xchg
pop
mov
pop
or
xor
sbb
fsub
and
jecxz
das
out
jge
popf
jb
xchg
and
mov
add
cmpsl
mov
loopne
call
pop
in
mov
jecxz
in
mov
notl
jne
add
dec
pop
pusha
mov
mov
jno
fst
hlt
mov
sbb
rcl
sbb
xor
inc
daa
loope
fadd
push
jo
cmp
cs
push
imul
fidivrl
rcrl
leavew
adc
dec
in
bound
jne
iret
inc
or
cmpsl
imul
int
lods
xchg
pop
lods
in
pop
xor
scas
xchg
add
lods
mov
mov
cmpb
out
mov
int
int3
pop
lds
lea
pusha
jge
idivl
sub
pushf
adcb
sub
call
mov
mov
cmc
add
cli
or
adc
xchg
jecxz
out
mov
cld
xchg
das
adc
xor
jbe
xchg
and
clc
fisttps
pop
scas
mov
jae
ret
cmp
jecxz
mov
jno
dec
xchg
push
mov
adc
aas
xchg
sub
cmpl
xor
addr16
jle
mov
pushf
cmpsb
lahf
add
shll
adc
xchg
cwtl
adc
outsb
in
fucomp
cmp
inc
cmp
fucomi
test
mov
incb
inc
stos
test
jns
jb
aad
bound
popa
push
inc
je
jmp
mov
aad
lcall
mov
mov
mov
int
adc
adcb
or
lea
pushaw
mov
push
lret
and
pop
outsl
movsl
pop
out
inc
int3
dec
icebp
mov
and
inc
shl
jp
mov
push
fisttps
add
rclb
notl
xor
pop
sahf
lahf
pop
jmp
jo
xchg
xchg
push
std
mov
jg
sbb
lds
sbb
jne
xlat
pushf
pop
cmp
push
xchg
aad
push
dec
mov
xchg
inc
sbb
cmpsl
and
sti
cmp
je
sbb
out
xchg
call
xor
adc
hlt
sub
jl
jns
cmp
rcl
scas
pop
out
jo
out
push
inc
xchg
lock
pop
or
sub
aad
cld
push
mov
sub
pusha
cmc
push
movd
dec
xchg
mov
out
lods
sub
fsubrp
dec
test
mov
loopne
loop
outsl
push
out
ss
outsl
imul
lret
sbb
aad
pusha
add
loope
xchg
fstps
jmp
or
inc
lods
hlt
xchg
mov
xchg
jo
lret
cld
lret
lahf
repz
test
cmpsl
mov
pop
mov
xor
mov
pop
jg
and
mov
sbb
fldcw
jb
testb
iret
bound
test
sahf
iret
inc
cmp
and
sub
cli
jmp
mov
push
leave
loope
test
loope
insb
mov
inc
or
mov
aaa
test
jmp
push
push
insl
push
mov
add
jg
push
cmpsl
out
dec
sbb
adc
mov
and
xchg
in
popa
test
test
and
repz
sbb
or
pop
and
xor
dec
lahf
data16
cmp
dec
roll
daa
ja
fldenv
push
sub
cwtl
sbb
in
add
popa
ss
aas
fcoms
das
test
fiadds
cwtl
btr
int3
js
fistps
loop
xor
jl
in
add
movsb
add
arpl
or
and
cmpsl
jmp
imul
xchg
push
je
fs
les
xchg
mov
xchg
mov
pop
insl
push
out
aad
gs
out
jmp
orb
pop
mov
pop
lods
sbb
sar
adc
shll
mov
scas
dec
xor
in
sahf
pushf
and
data16
arpl
mov
stos
jp
mov
cltd
mov
ljmp
adc
movsl
loopne
movsb
xchg
stos
adc
push
dec
cmpsb
lret
jmp
rcrl
pop
dec
idivl
into
mov
aad
stos
pusha
mov
cmpsl
and
mov
pop
jg
xchg
and
pop
scas
lret
adcb
inc
mov
mov
idiv
fcmovnbe
push
dec
jbe
jb
dec
pop
imul
aam
xlat
rorl
aas
insb
mov
addb
paddq
and
sub
aam
xchg
or
or
ljmp
subb
add
and
fisttpl
pop
adc
test
and
out
xor
jb
lahf
notb
in
mov
iret
mov
mov
pop
cmc
ja
je
in
mov
icebp
ds
cmp
xchg
mov
js
and
cmpsl
and
sbb
std
mov
test
add
adc
out
in
or
cli
dec
cmpsb
loope
ja
push
shll
push
cmc
ss
lock
std
cmpsb
into
pop
jo
cli
adcl
sbb
cmp
mov
int
aaa
fistpll
loopne
xchg
leave
sti
cmpsb
push
xchg
xchg
imul
in
cmp
mov
out
in
push
in
mov
mov
ja
dec
xchg
fimull
mov
adc
push
negl
fmull
push
dec
xchg
aaa
dec
push
outsb
fidivrs
xor
pop
add
cmpsl
dec
xchg
call
je
ja
call
clc
xchg
and
bnd
popf
dec
ficomps
std
rorl
jnp
push
pop
mov
xchg
cmpsb
mov
or
and
push
xchg
aas
sar
xorb
ds
fwait
call
and
dec
mov
pop
jge
inc
adc
adc
jo
and
sbb
xor
xchg
repz
mov
movaps
mov
push
imul
dec
mov
cmp
jl
les
cmc
xor
aad
push
paddusb
cmp
lret
push
cmpsb
cmp
add
bound
push
dec
dec
jo
ret
adc
mov
aad
in
sarl
sahf
mov
popa
or
fisttpll
fwait
mov
jmp
pop
xor
or
xor
and
popf
mov
jle
mov
xor
arpl
cmp
mov
xor
xlat
jle
daa
mov
testl
sbb
test
lock
mov
movsl
data16
inc
inc
pop
sub
repz
aaa
push
fidivrs
cltd
lahf
cmc
into
subl
les
std
inc
ljmp
ret
or
mov
test
lahf
decb
cwtl
xor
stos
cli
xchg
pop
out
stc
aas
mov
cs
dec
es
orb
int3
xchg
xchg
dec
pop
lahf
daa
test
inc
sbb
pop
add
or
sub
fists
ret
cmp
cmp
movsb
out
cltd
mov
fisubl
cmp
push
dec
cmp
mov
sbb
pushf
xor
mov
cmpl
rcr
lds
xor
filds
xor
and
mov
jbe
sub
push
inc
shrl
popf
jp
int3
mov
cld
add
pop
mov
andb
xor
pop
cmp
rol
inc
cmpsl
inc
cmpsl
enter
pop
inc
lret
or
lock
sbb
cmpsl
jo
cmp
jnp
inc
xchg
cwtl
int3
insl
jb
jns
test
shrl
adc
mov
pop
xor
xor
sub
ja
mov
dec
jle
mov
cmp
mov
loope
sub
ret
cmp
lret
outsl
push
aas
in
sbb
movsb
cltd
or
cmp
fdivrs
xchg
jnp
lcall
and
sub
lods
jno
adc
xchg
stos
push
bound
xchg
jmp
dec
imull
pop
mov
or
icebp
hlt
sub
jmp
insl
xor
ss
sti
or
stos
jae
imul
xor
sbb
inc
fdivrl
movsb
test
enter
jge
and
push
adc
gs
insb
inc
cmp
icebp
shll
lock
cmpsb
mov
pop
pop
scas
lds
rorl
lret
sti
push
pop
out
insl
js
aad
jno
das
jne
das
and
mov
sbb
mov
insb
mov
scas
fisttpl
xlat
adc
mov
movl
cmp
push
fdivl
fnstcw
ficomps
jbe
sbb
or
ficompl
stos
ljmp
xor
or
jmp
outsl
rcr
movl
mov
ret
jno
sarl
sbb
repnz
mov
test
mov
mov
lcall
mov
pop
push
mov
in
pushf
clc
xor
mov
cmp
lret
cmpb
cli
mov
repnz
pop
adc
xlat
es
jb
adc
inc
mov
adc
mov
fidivrs
mov
push
repz
sub
lahf
sub
add
imul
nop
clc
mov
add
aad
dec
xor
fs
adc
mov
insb
mov
scas
or
mov
inc
mov
lock
movsb
pop
icebp
pop
sub
cmp
or
cmpl
arpl
push
out
test
jmp
fdivr
pop
imul
sbb
in
rol
push
inc
cmp
popa
je
cmp
sub
sbb
in
xchg
pop
mov
divb
out
into
iret
jmp
negl
xchg
or
cmpsl
in
lods
or
andb
jecxz
fldenv
inc
xchg
aaa
mov
fadds
pushf
dec
sub
bound
sub
pop
mov
shrb
aas
xchg
or
mov
mov
ja
push
popa
repnz
xchg
int
or
cs
rcrb
imul
push
pop
or
cmp
mov
lea
fstl
dec
aad
xorb
inc
jg
hlt
adc
push
pusha
push
aam
nop
dec
sti
aaa
cmpsl
xchg
lods
dec
pop
cwtl
jg
into
mov
aam
add
cli
dec
mov
iret
jae
sti
je
in
push
sbb
mov
ljmp
popa
adc
sub
popa
cs
insl
popa
add
mov
cmp
insl
test
fsts
mov
mov
or
ss
pop
imul
outsl
jns
call
sbb
jmp
and
out
popf
and
test
out
and
loop
adc
cmp
clc
xchg
lret
sub
call
adc
ja
xorb
xchg
mov
cmp
iret
adc
push
in
jb
loopne
cmpl
inc
lds
xor
stc
or
pop
mov
and
test
xchg
add
pop
mov
adc
aam
pop
lods
ss
dec
mov
xchg
loope
or
pushf
jp
jecxz
cmp
imul
xchg
data16
loope
dec
adc
xchg
sub
jl
mov
sti
outsb
xchg
inc
aad
add
pop
in
lret
push
sahf
add
scas
jnp
repz
aad
cltd
or
mov
outsb
out
fst
jnp
mov
cmpsb
shl
pop
push
pusha
test
push
jae
dec
push
mov
shrl
insb
mov
mov
jbe
pop
dec
inc
xchg
mov
jns
jb
lods
loope
cmc
add
lret
jae
sbb
mov
jbe
mov
jl
mov
mov
bound
mov
fwait
dec
js
mov
ljmp
jmp
sub
lock
sub
rorb
cmpb
jns
mov
sbb
into
mov
cmp
or
push
cmpsl
mov
adc
cmp
and
rol
jl
adc
and
movsb
in
testb
imul
imul
push
lahf
stos
hlt
lret
sbb
addr16
lods
and
cmp
jb
popf
inc
mov
adc
pop
lods
aas
xor
and
jecxz
movsl
cs
and
lahf
fwait
adc
icebp
or
adc
pop
ja
push
add
ja
nop
adc
iret
mov
cmp
sub
lods
dec
mov
out
push
pop
push
and
dec
rcrl
cmp
push
adc
insl
cmp
std
mov
sub
mov
popf
repnz
push
lods
in
inc
cmp
xor
pushf
cmp
into
rorb
stos
mov
or
in
xchg
mov
jae
inc
cmpb
push
or
dec
mov
inc
mov
cltd
mov
sbb
aam
out
push
xor
push
jbe
push
gs
mov
aaa
fsubrl
fmull
xchg
into
mov
dec
loopne
movsl
stos
add
and
test
xchg
mov
and
mov
fidivrl
shl
mov
insb
das
ret
outsb
into
ja
data16
mov
inc
push
mov
fs
push
jl
inc
adc
adc
ss
lahf
mov
cmc
dec
out
lea
inc
push
add
push
ret
xchg
cmp
pop
jb
sahf
stos
jno
aad
imul
fsubrs
and
mov
std
push
adc
mov
or
stc
leave
inc
dec
jmp
sub
dec
aas
in
aas
imul
xchg
push
mov
adc
jge
cld
sub
xchg
pushf
aam
iret
decb
faddl
arpl
repnz
sbb
add
adc
stc
mov
dec
xlat
xchg
call
aam
stos
test
inc
call
pusha
xchg
fbstp
into
scas
loop
jne
mov
rcl
push
lret
ja
sub
inc
cmp
int3
mov
mov
add
xchg
fnstenv
fwait
subb
push
mov
pushf
pusha
hlt
xor
pop
jecxz
add
jae
jmp
bnd
in
adc
mov
mov
push
and
mov
mov
push
sub
ret
adc
add
push
outsb
xor
push
add
test
adc
mov
dec
roll
xchg
lds
enter
dec
mov
xor
das
rcll
mov
push
sub
jb
jns
aas
aad
or
or
push
hlt
popf
mov
jecxz
aam
xor
or
mov
aam
je
pop
push
cmp
cld
repz
enter
jmp
adc
int
enter
jp
dec
adc
inc
popf
dec
fwait
push
xchg
adc
jb
in
cmc
jge
push
jmp
sbb
sbb
fisubl
sarl
mov
cmc
cmp
cmp
mov
jge
or
jecxz
xchg
mov
movsb
jp
adc
sbb
mov
push
rorb
lahf
dec
sahf
js
fs
aad
out
lret
orb
or
iret
insl
mov
push
sbb
xchg
data16
jns
fstpt
call
ss
jb
xorl
out
and
sub
push
lds
cmp
in
and
fnstsw
push
and
ret
out
cli
sahf
call
push
mov
movsl
push
fnstenv
xor
fsts
fbld
aaa
push
push
dec
loopne
xorb
stc
xchg
xor
je
jb
out
push
mov
repz
mov
les
lods
mov
cmp
adc
fidivl
lock
mov
inc
adc
movsl
fidivl
mov
ds
cltd
sbb
aam
xor
sbb
shll
mov
push
mov
mov
leave
cmp
dec
cltd
or
fstpl
cmp
add
imul
sbbb
pop
dec
and
xor
dec
ljmp
jge
adc
push
std
xor
mov
or
imul
push
pop
xchg
jl
lahf
es
pop
adc
mov
pop
push
push
imul
pop
clc
loopne
add
lods
xor
push
cld
mov
pop
inc
ret
mov
xchg
pop
mov
mov
fdivrl
jge
pop
test
das
mov
jle
fists
sub
leave
dec
and
mov
jbe
fxch
or
mov
add
add
push
sbb
loopne
xchg
sub
lods
and
xchg
mov
in
sub
mov
fidivrl
mov
jno
cmp
add
jl
sbb
in
bound
aam
shll
frstor
adc
mov
mov
jno
ror
sub
outsb
femms
jg
sbb
aam
mov
fstl
testl
add
push
pop
fists
cmp
sahf
mov
push
mov
aaa
scas
repz
sbb
or
pushf
cli
push
cmc
and
sub
out
or
push
daa
int
pop
out
pop
test
shr
in
mov
std
cmp
loope
mov
jne
push
jo
subl
xor
enter
mov
jge
stc
pop
out
or
sti
mov
cmp
sub
pop
cmp
pop
pop
or
mov
xor
xor
or
dec
lea
les
pop
imul
jl
lods
fbld
push
bound
stc
jmp
xor
sub
outsl
mov
sbb
repnz
push
outsb
addr16
xor
mov
inc
out
xor
mov
sub
in
push
int3
dec
shr
and
pop
sahf
add
arpl
sub
stc
and
mov
mov
shl
jmp
xchg
sar
dec
dec
push
lret
pop
out
mov
je
add
nop
loopne
jg
sub
push
sbb
or
lcall
xchg
jg
sub
or
jnp
lea
fadd
cmpsb
sub
sub
push
xor
and
addr16
add
add
into
add
mov
lcall
or
cli
jg
jo
in
addr16
clc
add
daa
out
xchg
bound
push
sbb
mov
cmp
int3
or
jp
inc
mov
add
jecxz
je
push
scas
aad
sbbl
mov
aaa
sbb
add
arpl
push
call
and
cmpsl
mov
cmpsb
inc
cltd
loop
fs
icebp
lods
cmp
push
ret
sub
adc
xchg
ficoms
inc
push
xchg
jle
mov
mov
or
jge
or
lds
movl
movsb
push
dec
notb
icebp
addl
adc
sub
mov
inc
mov
call
bound
popa
cmpsl
call
or
mov
cmc
popf
xlat
int3
call
sbb
inc
sbb
inc
jge
in
repz
inc
cwtl
add
jl
lea
cli
xchg
cmp
jo
add
les
in
mov
mov
mov
subb
cmp
cmp
add
movsb
pop
adc
lds
mov
xchg
mov
pop
and
xor
das
sti
mov
push
imul
mov
mov
dec
jno
leave
push
iret
and
es
sbb
aas
addr16
xchg
in
sub
add
push
cmp
adcl
jo
add
adc
arpl
movsb
dec
and
dec
dec
inc
add
xor
mov
loopne
fwait
in
add
cmpsl
sub
sub
xor
mov
imul
xor
in
ja
lods
sbb
jns
xor
cwtl
cmpsl
push
mov
add
leave
jb
enter
add
cmpsb
jae
sub
and
inc
fstl
pop
mov
inc
std
pushf
nop
xchg
adc
jae
nop
adc
leave
lcall
iret
pop
and
mov
int
push
mov
mov
lock
shl
mov
pop
add
inc
and
jne
cli
jno
cld
sub
xor
cmc
test
add
mov
and
lods
cmc
aam
stos
sbb
cli
nop
pushf
pop
imul
stc
sub
test
or
bound
out
test
jno
inc
and
out
add
push
push
and
xchg
movsl
push
and
or
lret
add
push
stos
gs
aad
and
jne
mov
sbb
adc
mov
lcall
mov
jo
movsl
pushf
sti
sub
xor
push
cld
mov
loope
dec
add
in
das
loopne
mov
pop
rcll
icebp
scas
push
rorb
pusha
in
xchg
insl
loop
inc
push
xor
movsl
xchg
or
xchg
arpl
cmp
xor
lahf
sti
mov
int
lods
in
call
jl
incb
sub
icebp
mov
sbb
mov
test
ss
jp
jl
or
cmc
mov
lds
mov
sub
dec
loop
mov
mov
int3
arpl
jmp
xlat
aaa
lret
mov
push
bnd
je
xor
cmp
sbb
mov
mov
add
pop
sarb
mov
in
cld
lock
ljmp
ss
inc
push
cwtl
xchg
rcll
negb
mov
sub
test
jnp
call
out
shlb
fcomps
jo
jo
cwtl
rorb
add
pop
outsl
aaa
cmp
jo
lret
dec
in
cmc
add
jb
ret
mov
sbb
gs
dec
xor
mov
jae
in
mov
dec
pop
or
sub
mov
inc
xlat
adc
addr16
pop
mov
mov
lock
out
sbb
jmp
mov
ljmp
push
fs
sbb
jmp
out
jno
les
adc
sti
mov
popa
mov
inc
cmc
bound
push
test
mov
and
push
je
dec
lret
mov
adc
outsl
popf
into
or
mov
aaa
fidivs
mov
mov
lret
sbb
into
sbb
mov
rorb
aaa
push
andl
sbb
nop
ss
push
and
sbb
adc
sbb
std
jne
mov
imul
ffreep
adc
sub
lock
push
mov
loope
fwait
mov
jmp
pop
xchg
addr16
xorb
push
mov
cmp
jmp
mov
pop
mov
stos
push
jae
clc
out
mov
mov
movsl
mul
sbb
jb
sbb
sti
inc
scas
scas
stc
xor
xor
scas
or
cltd
imul
icebp
fstps
mov
mov
xlat
dec
mov
insb
sub
push
loopne
fs
sub
fcmovnbe
xchg
jg
inc
test
out
inc
nop
xchg
imul
jl
mov
sbbb
mov
stc
jb
shll
in
stos
and
call
mov
pop
cwtl
xchg
sbb
mov
inc
inc
xchg
test
outsb
imul
xchg
lret
sbb
jecxz
leave
popf
cs
jbe
fs
in
push
sbb
xchg
mov
or
mov
out
xor
inc
fxch
addl
mov
or
data16
sbbb
or
insl
mov
popf
xchg
mov
outsb
insl
jp
add
pushf
das
or
push
fists
cmp
pusha
xor
sbb
pop
fiaddl
jle
push
push
add
loopne
sbb
outsl
clc
and
push
mov
pop
jecxz
cmp
loope
xor
jle,pt
fnstcw
icebp
cmp
and
aas
stc
bound
cmpl
test
js
cmc
dec
inc
test
sub
push
cld
and
pop
add
sbb
testb
es
insb
imul
mov
nop
mov
cmc
xlat
pop
repnz
and
sub
jno
mov
xor
xchg
stos
daa
mov
sub
mov
xor
or
movsl
jnp
inc
pop
mov
negl
sub
push
xchg
lds
les
sub
daa
mov
or
int
stc
jno
shlb
repz
cli
stos
fstpl
roll
subl
test
subb
aas
xchg
js
add
pop
dec
pop
pop
out
push
inc
cmp
push
stos
es
jne
stos
pop
pop
sbb
cwtl
pop
add
adc
sbb
cltd
inc
mov
repz
cli
mov
pusha
xor
loopne
mov
push
push
ret
mov
cltd
ljmp
movsl
rclb
out
pusha
add
jp
xchg
pusha
daa
jle
lock
mov
aaa
nop
out
outsb
lcall
pop
inc
aas
ret
hlt
xor
xchg
ja
and
jle
fldcw
add
rorl
out
add
jmp
fnstcw
scas
pop
sbb
sub
fcmovnu
shr
add
rcll
clc
mov
xlat
into
jge
cmp
add
cmp
pop
fsubl
pushf
pop
rclb
mov
pusha
outsb
lret
jle
js
ret
push
testl
push
imul
out
push
loop
adc
inc
dec
and
ja
int3
sbb
add
pop
dec
mov
or
cmp
cld
jno
into
int3
inc
cmp
bound
cwtl
mov
popa
add
push
arpl
jns
dec
xchg
aas
cmp
sbb
or
jmp
mov
push
inc
icebp
je
sti
pop
out
les
into
sub
out
testb
sub
dec
pop
imul
movq
aad
add
scas
xchg
subb
imul
cmpsb
loope
sarb
in
pop
xchg
loopne
je
mov
inc
and
xor
fidivl
leave
hlt
push
add
sbb
push
pusha
mov
mov
test
cmc
test
aam
sti
inc
sub
pop
cmp
lods
sbb
not
jb
iret
cmpsb
inc
cmp
inc
subb
pop
daa
clc
sub
cmpb
mov
in
sbb
fbstp
xor
in
push
addr16
xor
dec
lds
push
jmp
push
mov
xchg
add
push
aas
or
add
stos
clc
orb
nop
xchg
test
pop
repz
push
jl
shlb
arpl
sub
loope
insl
push
mov
cmp
xchg
test
adc
addr16
dec
pop
jge
gs
sub
mov
dec
mov
sbb
icebp
jbe
addr16
push
jae
loopne
mov
add
repnz
ljmp
xlat
aaa
and
ja
jg
std
xor
ss
cmp
mov
or
push
mov
leave
leave
loop
fwait
adcb
xchg
mov
lods
stos
mov
xor
pop
or
out
and
in
jns
fcompl
divb
xchg
push
mov
or
xor
test
je
fbld
xchg
and
xor
lock
mov
mov
roll
leave
cli
mov
adc
and
xchg
arpl
lahf
int
ljmp
repz
movsb
les
icebp
xor
in
hlt
xchg
imull
mov
sbb
addr16
or
xchg
add
dec
aaa
sub
xlat
fisubl
push
daa
xor
mov
cmp
xchg
hlt
fsubs
xchg
lods
push
outsl
loopne
mov
cs
push
dec
idivl
mov
adc
lds
mov
sbb
push
movsl
dec
dec
sbb
xchg
scas
subb
push
jge
lods
jle
iret
ret
mov
arpl
push
aad
cmpl
xor
and
lea
mov
cmp
mov
stos
mov
add
jae
movsl
repz
mov
loope
bound
mov
fdivl
xor
and
enter
fildll
sbb
or
cs
jno
insl
jae
aad
nop
dec
push
into
push
sti
xor
push
lahf
mov
pop
out
adc
call
aam
cmp
cmp
cmp
mov
xchg
test
icebp
add
inc
addr16
sub
mov
cli
jo
aam
inc
sbb
inc
cmp
sbb
outsl
pop
dec
add
xor
leave
push
jg
aas
and
outsl
in
pop
dec
add
pop
or
imul
cmpsl
sbb
ds
cltd
fiadds
sahf
push
xlat
and
mov
xchg
movl
dec
in
jge
inc
xchg
dec
orl
cwtl
fwait
fs
lock
shll
orl
subl
ja
dec
xchg
fcmovne
sbb
add
pushf
xchg
xchg
cmc
sub
stos
adc
xchg
icebp
movsb
into
jmp
sbb
into
mov
je
cmp
adc
mov
dec
mov
or
pop
fldenv
mov
mov
inc
dec
jl
mov
pop
scas
sahf
nop
jns
inc
dec
out
dec
mov
mov
adc
dec
cmpsb
icebp
repnz
pop
movsb
rcll
es
das
iret
test
pop
and
mov
jmp
scas
xchg
cs
add
mov
insb
sub
xchg
add
lret
movsl
clc
div
pop
adc
popl
sbb
lea
in
xor
sti
nop
pop
ret
lret
or
bound
outsl
mov
cmp
mov
push
loop
test
out
xchg
je
jb
repz
rcr
add
cwtl
xchg
cmp
nop
popf
lea
icebp
movsl
mov
mov
ja
outsb
nop
das
leave
repz
xorb
inc
lods
cmc
mov
push
fsubrs
int
lock
jecxz
sbb
sarb
cmpl
mov
ljmp
mov
aaa
and
or
ret
push
arpl
jle
pop
push
ficoms
into
hlt
sti
mov
hlt
jo
cli
repz
push
push
sbb
xorl
aad
sub
imulb
enter
push
pop
add
fs
xchg
dec
sbb
pop
add
xchg
pop
sbb
jne
inc
push
dec
sub
pusha
adcb
repz
nop
scas
or
fadd
test
jbe
insl
adc
or
repnz
les
push
fwait
stc
adc
pop
cmp
ficompl
jmp
mov
and
popf
pop
popf
rol
dec
imul
mov
sub
lcall
out
stos
adc
filds
xchg
pop
stos
addb
xchg
mov
ficompl
jp
mov
test
fidivrl
adcb
push
lret
shlb
sbbl
sub
sub
out
xor
pop
xor
mov
std
cmp
mov
mov
add
push
hlt
cmpsb
pop
rcl
decl
mov
cwtl
mov
repnz
icebp
xor
mov
inc
fbstp
sbb
cmpsl
sub
dec
xchg
adcl
mov
scas
fcoml
cmp
loop
cmpsl
cld
xchg
mov
shlb
insl
sahf
pop
inc
xchg
mov
mull
stos
int3
lock
xchg
inc
push
or
movsb
cld
dec
or
push
in
push
hlt
jmp
inc
or
cmc
or
imul
outsl
push
sub
out
jmp
dec
aaa
dec
cmpsb
xor
call
das
pushf
pop
fistps
scas
mov
shlb
jge
jo
test
pop
pop
jae
fidivrl
cmp
jb
fisttps
pop
call
cmp
imul
movsb
icebp
inc
pop
lret
sarl
jg
outsl
cli
fisttpl
jns
mov
fs
movsl
lds
aad
pop
dec
cmp
mov
loop
sbb
insb
xor
add
pop
decl
xchg
in
xchg
xor
loopne
xor
pushf
ds
xchg
add
push
or
push
sbb
outsb
mulb
xchg
repz
adc
mov
add
icebp
pop
xor
je
and
push
and
scas
scas
jo
xor
jle
cs
add
daa
mov
pop
dec
fwait
dec
push
push
xchg
popf
mov
push
inc
push
xor
lret
cli
mov
xor
jecxz
mov
jmp
jle
xchg
mov
inc
cmp
sbb
popl
mov
scas
and
cmp
xor
fisubl
push
ljmp
mov
sbb
cmpsb
inc
mov
into
jle
add
mov
shll
jae
mov
mov
push
fucomi
mov
in
sub
js
lds
or
or
lods
jnp
leave
out
push
icebp
sbb
cmp
push
cmpsl
aas
clc
sar
adc
lock
scas
sbb
sub
imul
in
or
and
pop
std
sub
out
out
jb
sarb
sahf
fldenv
fcompl
aam
iret
jne
imul
inc
insb
push
addb
outsl
mov
in
xorb
push
icebp
xchg
out
adc
inc
fcomp
stos
movzwl
jg
pushf
decl
fldl
cs
and
adc
jno
aaa
lods
in
adc
popl
jne
lods
mov
mov
cltd
fnstcw
pop
test
mov
in
and
call
inc
icebp
mov
popf
jmp
cmp
push
pop
push
jl
stc
adc
jno
dec
int3
pop
stos
das
test
xor
aas
sub
pop
cmp
je
jmp
je
mov
in
push
xchg
sbb
adc
or
inc
data16
cld
jnp
aam
xchg
dec
adc
xchg
jno
jno
and
pusha
pop
gs
lock
faddp
adc
shrl
push
popa
lcall
mov
mov
leave
js
stc
push
jg
mov
pop
pop
filds
inc
or
add
mov
push
iret
imul
jb
mov
js
sub
mov
pop
xor
mov
pop
cwtl
xor
int
xchg
jns
inc
lret
arpl
fmuls
movsb
subb
add
mov
decl
xor
test
sbb
pop
out
inc
or
rcll
insl
dec
ja
clc
xlat
out
pop
push
jmp
pop
aad
das
in
and
and
in
xchg
inc
insl
adc
jae
dec
ret
js
push
add
outsb
or
sbb
es
mov
sub
ja
les
icebp
cwtl
daa
inc
loop
roll
aaa
jne
mov
jp
cmp
rcr
sbb
mov
mov
fists
movsl
shlb
sbb
mov
adc
xlat
sub
cmp
jl
loopne
pusha
dec
call
cmpb
call
and
lods
mov
push
pop
jge
jl
sahf
std
ja
out
out
cmp
mov
jnp
je
jae
mov
orl
dec
push
hlt
xor
shrl
pop
cmp
cmpsl
cmp
adc
mov
lret
inc
pop
test
inc
sub
pop
dec
pusha
fildl
popf
add
inc
and
jns
jg
push
dec
test
dec
stc
ja
vshufps
push
cmp
mov
and
jbe
fsubrl
cmp
jb
ljmp
lods
out
pop
imul
loop
movsl
or
fists
pop
sub
jle
and
out
sub
adcl
clc
mov
scas
arpl
cmpsl
xchg
test
daa
cmp
mov
mov
filds
call
push
pop
mov
pop
cmp
xor
shr
and
sbbb
and
outsb
xchg
test
popa
jae
pop
je
data16
aam
push
push
and
enter
fucomip
repz
push
into
push
xorb
stos
mov
bound
popf
ds
mov
aam
andb
in
mov
cltd
shr
test
scas
lahf
mov
mov
xor
jle
ret
dec
add
fisttpl
mov
adc
insl
aaa
inc
icebp
push
es
popf
mov
pushf
add
xor
jo
andb
or
sbb
xchg
mov
push
dec
fdivrs
lods
fwait
je
jno
sub
fmul
mov
popf
cmp
or
lcall
je
mov
mov
mov
mov
and
push
push
mov
lcall
pop
scas
pop
mov
dec
xchg
pop
test
aaa
mov
pop
repz
xor
inc
scas
into
jmp
mov
insb
jns
ljmp
fdivrl
ljmp
adc
in
xchg
add
push
xor
push
mov
fbld
sub
and
or
pushf
mov
mov
push
fildl
cwtl
test
in
fcoms
ss
sti
loope
xor
push
es
cmp
mov
ss
icebp
pushl
pop
scas
add
sbb
add
mov
cld
out
ja
or
push
push
xchg
push
push
rcr
adc
divl
xlat
or
jg
or
jecxz
es
inc
aam
xchg
mov
push
bswap
jae
in
lcall
jmp
je
xor
cltd
dec
dec
mov
dec
xchg
hlt
mov
sub
mov
push
mov
lahf
outsb
adc
jns
stos
sti
sbb
pop
push
mov
icebp
test
jp
imulb
xor
mov
and
mov
aaa
aam
fcompl
jmp
mov
cmp
xchg
mov
sahf
ficoml
outsb
jmp
test
das
pop
mov
jge
ja
xchg
insl
iret
pop
sarl
aaa
xor
jecxz
mov
push
mov
xor
xor
xchg
mov
inc
push
out
js
scas
imull
cmp
cs
cmpsb
pop
in
or
dec
dec
mov
movsl
jge
push
or
push
push
arpl
inc
call
lahf
mov
cmpsb
adc
inc
test
es
jb
dec
ret
jne
shrw
mov
add
mov
jno
jno
cltd
test
mov
add
mov
cmp
rolb
pop
loop
jb
insl
push
test
outsl
push
xchg
pushf
es
xor
lock
call
mov
mov
sbb
mov
dec
andl
mov
aaa
sti
dec
cmpsb
mov
out
sbb
sarb
mov
pop
popf
bound
aas
sahf
mov
mov
fwait
add
repnz
xlat
out
inc
jge
sbb
cmc
fidivs
fildl
movsb
and
mov
pushf
int3
sbb
jo
test
jne
mov
fstpt
enter
inc
adc
xlat
push
es
movsl
imul
lods
mov
js
xchg
jo
xchg
loopne
push
shll
ja
data16
mov
jae
push
push
pop
cld
rol
stc
xorb
sub
xchg
mov
mov
pop
fcompl
xor
leave
sub
mov
sub
sbb
dec
mov
cmp
sub
arpl
jno
cmp
lahf
pop
add
outsl
loope,pn
push
outsb
lea
aad
std
sub
out
cmp
push
test
inc
stos
mov
mov
jecxz
iret
lahf
sti
push
fmull
scas
mov
in
nop
test
dec
in
jge
push
push
adc
adc
in
mov
and
push
pop
clc
xchg
loop
mov
repnz
imul
fmuls
push
mov
mov
inc
dec
leave
and
ljmp
call
pop
jb
inc
mov
pop
fs
inc
aad
ljmp
jns
ret
test
push
and
out
sub
cmp
test
cld
ret
inc
ret
mov
and
mov
out
cmp
lods
lds
xchg
arpl
pop
arpl
jno
movsl
fnsave
fstl
repnz
push
or
xor
sub
sti
cmpsl
cmp
xor
inc
mov
push
sub
mov
lods
loop
cmp
subb
fcmovnb
sub
or
andb
dec
pop
xchg
xlat
jle
xor
push
push
jae
outsl
mov
mov
jne
imull
push
push
and
add
inc
jp
call
adc
aad
xchg
add
mov
dec
mov
dec
cmc
ffree
cli
enter
test
xor
and
or
pop
push
xor
xor
lret
ja
jmp
pop
jp
rcll
aas
cmpl
subb
inc
xchg
enter
mov
add
fstpl
cmpsl
repnz
out
out
cli
mov
in
xor
adc
mov
aam
movsb
dec
int3
icebp
clc
movsb
in
or
mov
daa
call
jno
mov
adc
inc
jns
mov
roll
push
jmp
test
test
gs
jp
popa
out
adc
fistpl
aaa
bound
add
mov
add
mov
es
movsl
ja
rolb
pop
cmp
jge
aad
scas
add
dec
ljmp
imul
cmc
in
mov
inc
mov
int3
ljmp
mov
adc
lock
enter
int
out
push
lea
pop
bound
icebp
sti
out
xchg
sub
pop
fcom
add
xor
or
mov
leave
mov
xlat
sub
cmp
in
stos
xchg
pop
fcmovb
add
xor
mov
mov
iret
inc
pop
lock
loope
mov
in
repnz
jno
sahf
adc
rcrl
or
xchg
mov
cmpb
in
sub
mov
xor
xchg
adc
cli
mov
scas
mov
adc
adc
cmpb
lock
fdivl
out
adc
or
cmp
out
insb
cltd
xorl
fcmovnu
in
or
scas
xchg
mov
in
mov
mov
xchg
jbe
mov
lea
test
test
lea
lcall
ret
fsubs
fwait
test
adc
push
jge
add
pop
xchg
cwtl
cltd
pop
divb
scas
dec
das
or
rcll
mov
jbe
inc
arpl
mov
jns
mov
and
add
jl
cmc
push
stc
xchg
jno
jbe
pop
sbb
push
fists
jge
push
insb
jae
and
ret
xchg
icebp
sub
cli
test
adc
js
inc
jno
cmpl
lret
mov
or
out
adc
outsl
cmpsl
xlat
das
arpl
and
cmp
mov
push
push
cwtl
xor
cltd
mov
push
push
push
test
lahf
sbb
aam
sbb
xchg
xchg
fistps
cmp
das
jl
mov
ret
sub
ret
xchg
subb
insb
enter
and
cs
aam
and
mov
outsl
out
lea
lds
das
or
hlt
lret
jae
mov
repnz
pop
scas
nop
cmp
iret
pop
mov
out
arpl
outsl
push
imul
mov
leave
out
mov
test
xor
push
cmp
xchg
sub
xor
xchg
and
shll
nop
and
or
and
inc
movsb
xorl
leave
cmp
sbb
push
pop
pop
lods
scas
arpl
inc
lea
mov
adc
addr16
mov
dec
lods
cs
js
xchg
dec
add
lock
cwtd
into
add
adc
add
xlat
rcrl
mov
inc
pop
idivb
pop
inc
adc
mov
push
addr16
clc
mov
push
xchg
mov
int3
xor
sbb
sti
cmp
call
ret
or
jmp
rorb
aas
sbb
mov
and
xor
gs
jg
xor
movsl
or
add
clc
jae
sbb
in
jns
xchg
ljmp
dec
int
mov
test
sbbl
jo
sbb
mov
cmpsl
xorb
mov
sub
sub
sahf
insl
imul
sbb
cmp
jne
ret
out
xor
fdivrp
pop
or
paddb
adcl
sahf
cmp
movsl
inc
or
pusha
cmp
cmp
pop
cli
lds
pop
leave
jo
sbb
push
fs
std
test
mov
daa
jae
sub
sub
cltd
fimull
jno
aaa
cmp
movb
sahf
mov
movsl
jb
dec
test
add
push
cmp
icebp
lds
call
out
dec
aam
fisubrl
adc
cmp
stos
das
xchg
loop
aaa
jns
dec
into
xor
fistpl
mov
push
fisubrl
cld
test
adc
sub
mov
and
arpl
je
clc
cmp
mov
pop
xchg
outsl
outsb
xchg
jl
jmp
jne
in
push
je
push
xchg
fwait
dec
mov
sahf
stos
xor
add
test
repnz
mov
imul
mov
cld
aas
call
gs
add
jo
ds
fsubl
popf
inc
imul
xchg
lcall
jno
ret
xor
pop
out
insl
mov
ret
stos
xor
adc
and
cmovbe
and
adcb
cmpsb
sub
sbb
popf
jmp
shr
add
sbb
out
xchg
orb
ret
aas
pop
xor
lods
inc
xchg
mov
dec
popf
mov
sahf
cmp
sbb
cmp
adc
fs
mov
or
xor
mov
fs
fwait
cmp
daa
std
push
ret
dec
mov
xor
mov
dec
dec
dec
cmp
repz
push
cmpsl
or
clts
dec
cld
in
lahf
push
mov
sub
inc
mov
xchg
bound
add
adc
fistps
sti
pusha
and
addr16
xor
nop
xlat
push
dec
sub
mov
xlat
cltd
push
sarl
inc
pop
repnz
ret
xorb
mov
iret
xor
fstl
mov
imul
jg
jbe
pop
add
mov
push
dec
sbb
lds
push
jb
or
hlt
stc
xor
mov
mov
pushf
shrb
xor
inc
sbbb
aam
push
out
inc
fstpl
gs
loop
sbb
jno
xor
cmp
jle
push
cmp
inc
movsb
pop
inc
push
xor
xor
sbb
mov
or
rclb
cwtl
stos
cmc
jmp
push
xchg
pop
sbb
das
movsl
mov
ljmp
mov
add
xor
inc
push
mov
jo
js
sbb
scas
jo
cmp
pop
push
leave
or
and
and
push
jl
adc
or
push
xor
or
movsb
adc
inc
sbb
nopl
push
mov
inc
jno,pn
xor
pop
xchg
ficoms
and
xchg
dec
scas
fcompp
jmp
dec
dec
cs
test
jg
sub
cmpsl
adc
ljmp
jecxz
lock
outsl
loopne
fstps
ja
inc
dec
jg
stos
aaa
mov
sbb
shl
jge
jle
mov
test
add
dec
jae
cld
add
pop
ss
pop
or
push
xor
pop
or
imul
test
sub
int3
pop
add
lods
dec
fsubrs
pop
ljmp
pushf
jnp
arpl
push
mov
sti
pop
jne
jbe
xor
cmpsb
adc
nop
fisttps
jae
and
sbb
mov
push
xlat
je
fldl
adc
out
scas
orl
movsb
adcb
cwtl
xchg
sub
jl
sub
ret
lds
call
lret
xchg
push
hlt
mov
ljmp
xchg
sar
dec
mov
adc
xchg
mov
stos
lea
inc
call
inc
xchg
jmp
enter
adc
in
in
gs
sbbl
jno
sbb
sbb
loopne
out
and
push
add
sbb
sub
jns
insb
sub
in
cmp
xchg
call
cmp
pop
jbe
pop
cmp
add
insl
clc
adc
mov
cli
lahf
xchg
xchg
ja
shrb
jmp
ja
hlt
push
mov
popa
aaa
mov
jg
mov
jl
out
and
xor
lret
std
mov
or
out
lock
outsl
and
scas
jbe
inc
push
push
adc
mov
fistpll
je
jno
add
stos
ljmp
lods
jp
inc
adc
and
fcoml
or
push
xlat
ret
jle
sarl
mov
xchg
mov
dec
adc
fildll
je
dec
iret
stos
andl
fisttpll
in
outsb
dec
pop
mov
dec
push
push
lock
cli
jge
pop
mov
into
sbb
jb
xor
mov
ficoms
dec
ret
adc
xor
and
jno
jbe
out
xchg
jne
out
mov
cltd
adc
rcrl
loop
and
add
adc
pop
pushf
and
xchg
xorl
jb
sub
ljmp
or
ret
jge
push
adc
mov
jne
test
in
in
call
push
notl
scas
aas
std
inc
fnstsw
leave
jl
mov
xchg
test
aad
insl
mov
push
jnp
mov
mov
loopne
push
push
or
std
xor
cmp
xchg
dec
out
cmp
fimuls
or
cmpsb
mov
in
test
fadd
pop
imul
mov
xor
mov
arpl
cltd
mov
mov
fisttpll
pop
lret
dec
sarb
mov
les
test
popa
adc
lahf
fwait
loop
dec
add
out
aas
ljmp
sbb
mov
add
hlt
push
and
jno
sbb
sbb
pop
dec
iret
adc
stos
mov
icebp
push
jno
mov
xchg
sti
xchg
pusha
inc
les
cld
mov
pop
sub
inc
xchg
insb
in
add
aaa
lods
and
jne
fcomps
pop
push
sub
outsb
mov
add
inc
jb
daa
stos
ljmp
daa
cli
xlat
cmpsb
xchg
pop
adc
lret
lds
add
into
pop
aaa
pop
mov
pop
mov
xchg
out
inc
inc
mov
pop
fsubs
ja
and
int
inc
ret
in
ss
add
mov
mov
scas
jp
gs
pushf
jle
pop
popa
fsubrs
stc
pusha
loope
test
out
mov
out
inc
ror
cld
cmpsb
mov
scas
data16
subb
mov
pop
dec
mov
adc
mov
adc
pop
and
add
daa
mov
test
xchg
add
mov
jp
icebp
fbstp
push
xchg
fcom
adc
xchg
push
mov
inc
outsl
cmp
dec
dec
push
cli
jne
cmpsb
outsl
call
scas
xor
xor
std
xor
cmc
sbbl
adc
sub
cmp
jnp
stos
sub
outsb
or
mov
push
lcall
adc
adc
mov
fucomp
insb
loope
ljmp
flds
ja
imul
add
in
mov
es
ss
movl
inc
pop
mov
dec
xchg
jns
mov
dec
hlt
jns
inc
pop
std
xchg
aas
push
push
test
repnz
ss
int3
loop
xlat
jl
sub
jle
fldl
xchg
cmp
clc
iret
xlat
imul
jp
or
pop
dec
aam
pop
pop
push
jnp
bound
jbe
cltd
or
jns
mov
lods
adc
dec
push
je
or
lahf
push
repz
xchg
pop
xor
addl
adc
lret
arpl
out
ret
nop
shrb
fsubr
ret
mov
pop
pusha
cltd
cwtl
dec
push
addr16
xchg
loop
in
mov
dec
pusha
lcall
mov
mov
inc
imul
fnsave
aam
inc
je
mov
adc
rcrl
mov
cmpsb
call
js
dec
push
incl
mov
inc
fadds
xchg
insb
outsl
push
in
mov
adc
lret
inc
sbb
aaa
dec
add
xchg
mov
jmp
jbe
xchg
xchg
idivb
cmp
mov
into
ljmp
in
xchg
dec
daa
insb
in
insl
decl
dec
cld
cmpsb
xchg
or
or
fs
popa
or
jbe
stos
hlt
in
dec
out
lcall
add
sbb
aas
mov
mov
sbb
jge
or
mov
pop
jns
jnp
out
in
jns
pop
jbe
xor
mov
sub
mov
lret
xchg
jb
sub
inc
jae
push
sbb
xor
ret
movsb
sbb
notb
xor
lods
xor
dec
cwtl
popa
and
repnz
sub
pop
lahf
xchg
jmp
mov
add
xchg
lahf
or
jge
adc
lret
cmp
into
xchg
mov
lods
pop
cld
pop
fwait
sub
call
dec
pop
stc
ss
inc
fcomi
push
inc
lds
xor
into
cmp
daa
cmp
in
inc
jb
sbb
dec
add
lret
dec
dec
pop
dec
pop
or
mov
sahf
test
xchg
mov
and
xchg
fisubrl
into
ret
dec
mov
pop
movl
ja
jnp
sbbb
js
jecxz
sub
pop
dec
jle
pop
or
mov
cwtl
mov
pushl
mov
sti
cmp
push
mov
jmp
rorl
arpl
scas
mov
sub
push
xlat
icebp
pop
rolb
mov
cmp
jl
push
jbe
jno
fldpi
sub
mov
popa
pop
leave
jge
or
pop
fidivrs
scas
ds
jb
fstpt
push
outsl
dec
push
mov
cmpsl
sub
jno
mov
out
imul
add
inc
nop
dec
insb
jae
stos
fptan
push
pop
inc
and
cli
dec
lret
sub
or
lds
jbe
and
push
enter
xor
jb
xor
sub
lahf
xor
leave
aad
shll
cmp
scas
fiaddl
jb
add
cwtl
xchg
stos
or
nop
aas
cmp
fdivrp
push
lret
pop
lret
fbstp
lock
sub
je
sbb
leave
and
jno
push
mov
mov
push
fs
xchg
rcr
pusha
inc
xchg
adc
mov
pop
inc
xor
xchg
inc
cs
add
sbb
movzwl
ja
inc
mov
aas
aas
addb
sahf
mov
outsb
pop
sbb
mov
dec
inc
test
iret
mov
ja
mov
adc
addr16
push
dec
xchg
stos
sub
pop
fucomip
xchg
xor
outsb
xor
and
pushf
push
pop
loopne
xor
adc
cmp
pushf
xchg
dec
sbb
mov
adc
stos
ret
vmovapd
shrb
bound
ds
mov
xor
movsl
aam
pop
sbb
es
aas
add
dec
jg
jp
sbb
mov
es
in
cli
mov
inc
mov
gs
jmp
out
int3
push
jbe
insb
and
pop
add
sub
jg
adc
jnp
arpl
push
xchg
dec
jae
xchg
dec
jnp
imul
pop
cld
outsb
pop
jns
scas
add
scas
repz
inc
xchg
xor
imul
std
shll
cld
inc
mov
mov
outsl
repnz
pop
dec
push
test
mov
xor
adc
sti
or
sti
jno
sahf
dec
loopne
and
push
inc
sub
mov
int
cltd
xor
mov
jo
in
pop
jnp
mov
xor
push
or
aas
movsb
ja
and
sbb
add
test
or
push
sbb
xchg
lods
fildll
and
mov
or
shl
xchg
arpl
add
scas
in
popa
mov
inc
es
xor
gs
mov
push
mov
cmp
cli
cs
mov
xchg
jmp
lods
push
mov
mov
cmc
xor
add
xchg
jno
loopne
cltd
cmpsl
popf
sbb
sub
mov
mov
mov
push
push
mov
or
mov
mov
cs
arpl
mov
adc
fildll
cs
mov
test
mull
push
sub
push
sahf
aam
jmp
fbstp
or
idivb
dec
stos
inc
call
mov
jle
push
mov
push
stc
daa
cmp
cld
jp
dec
das
jecxz
mov
mov
add
mov
je
jae
push
sbb
jae
mov
mov
outsl
xchg
jno
adc
cmc
lcall
es
loopne
inc
imull
push
mov
test
dec
lahf
call
dec
test
jnp
sbb
mov
ss
adc
push
push
inc
repnz
lods
sub
out
std
cmpsl
mov
in
sub
aas
daa
aam
push
loope
mov
adc
xor
in
push
and
cmp
ss
stc
fwait
jno
jle
dec
dec
fwait
pop
cmp
and
sahf
movsl
xchg
mov
jno
cmpl
or
push
mov
xchg
sbb
icebp
enter
push
mov
out
ljmp
mov
scas
mov
inc
xor
test
jecxz
fwait
add
pop
push
jmp
pusha
add
daa
mov
dec
je
insl
mov
mov
push
loope
leave
mov
or
cmp
sbb
fstl
add
iret
testb
movsl
into
xchg
aam
sbb
lcall
test
addb
fwait
cmpsb
add
pop
je
and
mov
adc
cmpsb
xor
cld
jg
imull
mov
cmpl
ftst
cmp
cmpsb
jmp
cld
orl
jp
mov
clc
imul
je
cwtl
outsb
call
and
mov
cli
push
daa
sub
mov
xchg
lcall
inc
pop
aad
ret
pop
jb
fnstcw
xchg
test
lcall
mov
dec
xchg
add
mov
out
or
insl
shl
ds
lods
push
mov
push
adc
repnz
add
lods
and
pop
jmp
pop
shrb
add
cmc
adc
xchg
bound
stc
rol
imul
dec
and
cs
push
mov
adc
scas
pop
loop
addr16
or
jb
subl
scas
push
inc
add
adc
or
addl
mov
shl
mov
pop
gs
movsl
sbb
inc
mulb
aaa
out
cmp
xchg
jecxz
inc
lds
sub
inc
mov
jle
dec
addb
out
aaa
xchg
cmp
sub
test
xor
lods
arpl
loopne
std
int3
add
in
push
lcall
pop
bound
jne
ficoms
and
lret
loope
and
inc
ret
push
pop
inc
sbb
inc
ds
push
outsl
lret
cmpsl
inc
mov
mov
inc
mov
push
xor
in
out
mov
lods
jno
iret
mov
jmp
cmp
xchg
arpl
andb
mov
inc
mov
or
xor
lock
sbb
gs
rclb
jbe
arpl
cmp
lds
jae
popf
lcall
mov
movb
xor
or
int
shll
push
fdivrs
ja
sbb
adc
dec
cmc
push
jg
fidivl
inc
push
cmp
xchg
mov
loopne
inc
mov
and
push
add
insl
jo
ficoms
jne
push
je
shll
cltd
lock
sti
loopne
mov
pop
xchg
mov
mov
or
and
xchg
fiaddl
sub
gs
xchg
pop
fnstenv
data16
or
push
insb
mov
xchg
cmp
mov
inc
test
add
ret
xchg
decl
aas
mov
stos
out
cs
lahf
repz
dec
fs
int
pop
jmp
daa
push
sahf
or
push
add
xor
inc
or
andb
repnz
xchg
insb
fstps
out
das
mov
sbb
dec
mov
adc
out
pushf
pop
mov
jne
arpl
daa
fsubl
gs
in
mov
inc
cmp
daa
lret
sub
mov
inc
sbb
mov
jl
mov
shlb
mov
pop
or
sbb
dec
bound
push
xor
andl
sub
fs
call
sub
sbb
xchg
dec
pop
aad
push
jo
shl
fidivl
loope
dec
xchg
popa
hlt
das
jl
mov
or
cwtl
push
repz
xchg
xchg
fincstp
std
pop
mov
scas
lds
outsl
and
inc
jle
ret
sahf
pop
mov
xor
or
mov
lods
or
in
and
nop
pushf
sarl
and
aaa
lcall
sarl
xchg
imul
xor
in
es
loop
aam
mov
out
xor
xchg
das
and
sbb
pop
jae
mov
push
and
movsl
pop
inc
push
sbb
js
pop
mov
outsb
jle
mov
lret
push
sub
mov
rclb
or
mov
stos
lea
movhlps
sbb
cmpl
call
cmp
dec
lea
inc
and
jb
or
mov
cmpsb
mov
lret
xor
adc
in
lods
pushf
push
jmp
lcall
fmuls
and
dec
mov
mov
xor
scas
cld
jmp
xor
arpl
pop
pop
jmp
mov
sbb
lret
int3
push
sub
mov
add
jnp
cli
popl
inc
mov
lods
outsl
movsl
mov
sbb
mov
add
mov
stc
add
cmpsl
sahf
add
stos
inc
dec
mov
mov
es
sub
das
into
shrl
sub
and
lahf
rcl
dec
scas
sub
lea
js
inc
icebp
xor
jbe
sbb
xor
test
repz
or
mov
and
add
mov
sub
inc
push
cmpb
ljmp
and
stos
jmp
movsb
dec
mov
scas
inc
js
outsl
push
adc
pop
out
mov
inc
cld
aas
lds
popf
mov
sub
or
xchg
data16
andl
cmp
pop
jbe
test
sti
cmp
pop
sbb
lods
repz
mov
mov
daa
sbbb
dec
lahf
fdivrl
pushf
xlat
fisubs
xchg
out
pop
pushl
pop
dec
mov
stc
mov
pop
popf
add
loop
movsb
imul
bound
lahf
div
jp
xorb
aas
sbbl
fistps
std
addr16
movsl
nop
and
shl
out
mov
test
sbb
dec
sub
cmc
and
dec
jbe
pop
in
jl
popa
loop
fildll
rclb
sub
ljmp
pop
stos
mov
movsl
inc
pushf
outsb
xchg
sub
dec
and
int
jo
adc
lock
test
mov
mov
divl
rcrb
mov
or
xchg
addl
iret
pop
dec
sub
cwtl
xor
jae
adc
xor
pop
jbe
lock
clc
pop
push
mov
test
mov
mov
lds
je
jbe
cmpsl
xchg
test
mov
add
ret
mov
adc
jl
mov
imul
sbb
in
imul
add
mov
and
movsb
fcoml
rcrb
cmpsb
jo
mov
dec
sbb
or
outsb
xor
xchg
jge
repnz
test
in
xchg
sbb
fldcw
ret
in
inc
in
push
outsl
or
mov
iret
xchg
iret
mov
pop
shr
xchg
aas
add
pop
pop
stos
das
pusha
push
daa
pop
jo
mov
mov
loop
xchg
out
hlt
das
xchg
clc
mov
in
mov
jmp
out
bound
xlat
test
mov
sbb
cltd
and
out
inc
mov
jge
mov
clc
lea
repz
das
sub
lock
xchg
mov
pop
mov
push
xor
pop
or
in
mov
bound
std
arpl
in
fs
jnp
xlat
imul
adc
ljmp
and
mov
loop
inc
mov
bound
adc
xor
dec
insb
adc
leave
arpl
les
add
shll
xchg
dec
adcb
add
pop
push
stos
lahf
mov
mov
push
xchg
call
out
inc
mov
or
fisttpll
arpl
loope
xlat
and
sti
and
push
fstp
ds
loope
adc
or
ljmp
adc
mov
lock
xchg
mov
pop
mov
and
je
push
insb
mov
mov
cmpl
mov
xchg
xor
aas
into
frstor
test
mov
adc
jg
adc
fidivrs
pop
dec
lcall
jle
sbb
insb
les
jmp
mov
mov
leave
mov
sbb
iret
insl
adc
fists
adc
leave
icebp
bound
pop
movsb
cmpsb
pop
sarl
xor
movsb
or
into
push
flds
add
pop
ret
add
rcrl
cwtl
pop
xchg
data16
xchg
dec
add
mov
cwtl
aam
sahf
mov
and
cwtl
push
int
out
mov
inc
mov
mov
out
add
shl
leave
fnstcw
in
lds
jmp
repz
mov
mov
jno
popf
lea
int
dec
out
das
dec
bound
xor
jbe
xor
jl
jge
dec
cmp
xor
in
cmp
and
mov
xlat
test
xor
add
xchg
testb
sub
xor
loopne
mov
inc
add
cmp
fsubs
push
and
leave
mov
pop
out
call
idivb
aam
adc
sub
adc
dec
nop
les
sub
push
addr16
adc
addb
jle
push
dec
cld
je
enter
movsb
leave
mov
mov
jp
sub
mov
dec
imull
je
clc
mov
inc
sti
repz
push
sbb
jne
push
xchg
movb
rcr
lds
inc
movsb
mov
jns
cwtl
jg
testl
ss
out
add
and
test
dec
imul
lods
cmpsb
fidivs
aaa
mov
test
inc
mov
sti
sahf
xchg
sub
outsb
sbb
outsl
adc
jnp
repz
test
jb
mov
adcl
mov
fdiv
add
test
in
out
lahf
lock
rcrl
int
pop
fwait
and
push
dec
in
dec
in
icebp
es
sarb
movsl
jne
ja
scas
cwtl
orb
pop
pop
cld
mov
outsl
cli
movsl
sbb
andl
out
pop
jecxz
sub
jns
xor
pop
das
push
repz
lea
mov
mov
mov
ja
sarb
or
jp
filds
xor
in
push
mov
iret
or
or
mov
fwait
pop
push
aaa
in
jecxz
inc
inc
pusha
int
cmp
xor
ds
inc
daa
mov
inc
fnstenv
or
shrb
addr16
out
addr16
add
pushf
andb
mov
pop
fsubs
push
testl
push
sub
stos
jle
loopne
bound
xchg
cmp
rcrb
push
imul
sbb
out
dec
addr16
test
mov
sbb
pop
add
sbb
stos
fisttpll
inc
lcall
xor
mov
imul
dec
fmul
iret
std
es
sub
xor
loopne
add
imul
outsl
lds
repz
icebp
mov
sbb
jmp
insb
mov
adc
out
rcrb
jmp
mov
daa
jnp
mov
pop
lret
icebp
pop
mov
xchg
into
int
test
add
and
notb
cmp
test
dec
sbb
sub
out
lods
out
pop
out
push
insb
sub
pop
ret
inc
vpaddsw
je
js
inc
arpl
inc
add
xor
xor
ljmp
lds
mov
cmp
pop
and
xor
jp
pop
sbb
mov
mov
add
jbe
call
cmp
test
sbb
xor
cwtl
orl
lret
xchg
fs
pop
pop
add
popa
repnz
dec
adc
mov
adc
fmull
call
sti
es
call
cmpsb
shl
cmp
int
sahf
push
or
jg
insl
mov
das
pop
in
sub
int
lcall
iret
inc
or
cmp
clc
sub
cmp
rolb
icebp
int
aad
push
cmpsl
mov
inc
test
scas
ficoms
aad
jmp
icebp
jp
mov
sub
and
loope
mov
cli
and
lods
mov
mov
test
insb
hlt
sbb
cli
adc
xor
ja
inc
popf
int3
and
pusha
add
inc
xchg
out
fistps
mov
sub
test
push
fdivl
fstpt
in
mov
push
fs
xor
stc
mov
cmpsl
add
stos
add
pushf
jle
mov
pop
lret
les
rcrl
cmp
sbb
cli
xchg
pop
or
cs
mov
orl
inc
imul
dec
or
rcll
rol
cmpsb
hlt
stos
mov
movsl
dec
inc
or
cmpsl
data16
push
adc
mov
stc
imul
adc
arpl
bound
jns
ret
adc
push
popl
sub
popf
xchg
xchg
popf
jbe
sbb
int3
mov
push
inc
cmpsl
mov
sub
cwtl
ret
fs
movl
adc
lret
cs
es
xor
jb
xchg
shlb
les
cmc
and
fcmovne
fisubrs
jle
sub
add
loop
xor
shlb
loope
xchg
aam
mov
repnz
mov
xor
lcall
pop
pop
jl
sbb
cmpl
lahf
pop
lods
mov
outsl
sbb
and
fcmovnbe
mov
pop
adc
enter
mov
test
and
mov
inc
mov
cmp
add
outsb
movsb
mov
cld
mov
pop
ja
aad
test
inc
and
adc
adc
mov
and
cmp
xlat
cld
test
jae
or
adc
testb
jno
xchg
adc
loop
xor
push
stos
jl
or
rol
call
adc
pushf
push
pushf
aam
cmp
jae
out
cmp
xchg
mov
enter
mov
and
repnz
push
loopne
add
ja
adc
jmp
mov
mov
cmp
adc
rcrl
jg
fcmovne
jl
pop
mov
dec
fistl
sub
lock
stos
lods
mov
aas
or
shll
imull
loop
adc
inc
loop
imull
push
add
ret
ret
add
dec
and
ljmp
sub
testb
jecxz
jp
test
push
rclb
arpl
cmp
mov
daa
mov
sbb
jmp
mov
call
add
es
xchg
repz
and
movsb
movb
cmp
leave
xor
sbb
pop
lret
cmp
adc
xor
aaa
int
xor
jbe
setle
mov
jae
stc
pop
or
push
out
aad
or
lea
cld
pop
shrb
pop
stos
xor
mov
adc
xor
mov
int
movsl
xchg
sahf
hlt
or
js
inc
push
test
bound
pusha
xchg
dec
mov
clc
and
fcomps
xor
push
lock
xor
movsl
mov
test
pop
mov
push
sbb
xor
push
sbb
sbb
shll
daa
add
pop
in
jb
cltd
pop
inc
xchg
adc
xchg
xor
pop
mov
inc
pop
jmp
dec
mov
push
push
pop
gs
insl
insb
popf
add
xor
xor
mov
ja
negl
jmp
xchg
cmpsb
cs
ret
fisttpl
mov
js
enter
or
clc
js
mov
pop
pop
sti
lret
inc
movq
lcall
ret
pop
insl
test
sbb
or
rcrb
sub
adc
or
rorl
push
pop
icebp
jne
syscall
mov
inc
clc
andl
in
dec
icebp
xor
das
std
cmp
lea
call
xchg
mov
jo
fcmovb
dec
test
add
add
scas
mov
lret
fstl
mov
jmp
test
inc
pop
and
inc
js
es
mov
cmp
ret
pop
mov
ror
cli
insl
inc
sarb
mov
addb
mov
fwait
in
xor
xor
lret
in
fwait
jo
sbb
sbb
inc
inc
jnp
and
pop
ja
imul
stos
push
movb
icebp
or
cltd
mov
xor
add
inc
dec
xor
scas
popf
dec
sub
mov
aam
js
jns
popa
stc
xlat
sahf
cwtl
cmp
xchg
ja
xchg
stos
add
push
fstp
nop
sub
add
cmp
jb
push
mov
jb
shrb
push
push
out
push
push
dec
out
push
adc
nop
sub
into
aas
lock
aad
xchg
aam
cmp
rcll
cmp
ja
fistps
sbbb
test
cwtl
lock
ds
and
lea
icebp
sub
stos
xchg
xor
out
adc
mov
mov
out
pop
push
mov
jne
push
inc
xchg
pop
stos
pop
callw
push
xchg
ja
sub
rcrb
loop
jmp
lahf
jle
popf
fistpll
int
out
test
ja
cmp
ds
push
dec
sub
lret
and
inc
xor
into
or
mov
cld
pop
push
mov
jno
vcvtdq2ps
jae
fisttpll
rcrb
or
push
daa
lea
pop
aaa
xchg
mov
loopne
nop
push
inc
shll
leave
outsl
lods
idivb
cli
xor
out
lahf
pop
in
sbb
pop
nop
pop
fisubrl
fisubrs
frstor
es
ljmp
fimull
and
js
shrb
push
call
fmull
ds
mov
ret
pop
add
mov
push
dec
fcoml
outsl
mov
ficomps
mov
pop
lret
jl
pop
pop
rolb
mov
sub
mov
and
bound
ss
and
dec
inc
xor
sub
xchg
ja
imulb
lods
and
loopne
fsubrl
sub
push
divl
sub
cltd
lods
ljmp
sbb
inc
mov
jg
sub
cmp
mov
add
mov
adc
sbb
jbe
out
xor
ret
data16
outsl
mov
fisubl
xchg
cs
xor
push
sub
sti
pushf
inc
repnz
jle
cmp
pop
cmp
fdiv
jb
insl
xorb
stc
adc
jmp
pop
test
ret
mov
mov
sub
cmp
frstor
and
mov
out
fisubrs
gs
jns
xchg
sub
repz
adc
mov
sbb
pop
jmp
mov
popa
outsb
push
mov
push
test
inc
lahf
ds
test
and
rcrl
xchg
nop
mov
cmp
gs
xchg
mov
sti
adc
sahf
pop
out
mov
sub
jle
icebp
jmp
jmp
lcall
addl
ljmp
mov
mov
outsl
insl
mov
sub
jmp
leave
out
mov
aas
adc
lods
lahf
or
push
cmp
push
pop
insb
add
jne
xor
mov
adc
jle
gs
jmp
sbb
insb
adc
fnstsw
ds
int
or
popf
int
push
insl
jo
inc
sbb
push
push
mov
out
mov
ret
out
xor
fbstp
test
cmc
in
adc
jae
xchg
loope
fs
lret
cmc
mov
lds
pop
push
repz
mov
arpl
cmp
adc
in
aas
idivb
add
xchg
jae
xlat
lret
aas
fnstcw
rcrb
not
mov
fildll
dec
dec
mov
lcall
adc
into
push
push
push
dec
data16
add
mov
ja
movl
mov
sbb
or
jg
xchg
testl
sti
adc
push
out
je
sbb
mov
je
cs
jle
lret
jge
jecxz
scas
ss
scas
loop
rclb
repnz
push
cmc
or
dec
out
inc
fisttps
mov
inc
mov
sub
insb
ds
adc
mov
das
push
cmpsl
das
pop
out
bound
in
fcmovb
sahf
fwait
mov
bnd
cltd
mov
frstor
mov
or
mov
jle
ficoml
xchg
pop
arpl
inc
bound
mov
ret
aad
and
out
inc
sbb
outsl
dec
sub
or
inc
dec
add
stc
arpl
mov
pop
mov
lret
ja
arpl
mov
int
mov
int
mov
in
pop
or
mov
jne
or
insb
pop
mov
shll
insl
sbb
or
movsb
outsl
push
fs
dec
clc
mov
xchg
ljmp
lcall
aam
xchg
and
pop
in
aam
rcl
fcoml
xchg
imul
shl
jge
add
jmp
xchg
pop
sbb
dec
lds
jg
int3
cmp
mov
sahf
nop
pop
insl
in
fisttpll
or
sahf
daa
sub
in
clc
xchg
gs
cmpsl
adc
in
cmpsl
xlat
loopne
call
cmp
add
jle
ss
not
sub
xor
add
lock
cmp
testb
mov
xor
icebp
jecxz
cwtl
xchg
test
jbe
xchg
pop
pop
push
cltd
mov
mov
shlb
int3
inc
jmp
fwait
adc
jb
stc
mov
nop
mov
and
ret
lea
jne
frstor
pop
les
scas
mov
scas
add
push
imul
inc
push
stos
loop
jp
rorl
push
add
sbb
xchg
inc
or
mov
daa
sub
out
arpl
outsb
xor
push
mov
imul
xchg
lret
pop
aam
rcrb
nop
pop
sbb
push
mov
lods
loopne
js
sub
sbb
fidivrs
mov
push
aam
mov
in
pop
ret
int
bsf
aam
test
or
test
pop
das
ret
loope
js
in
pop
sbb
lahf
jp
fidivrl
addr16
dec
sub
rcr
xor
repz
jnp
dec
xchg
jl
jle
xchg
jbe
stos
es
mov
xchg
and
cltd
xor
sbb
mul
cmp
pop
dec
mulb
pop
rcll
jno
pop
and
mov
fcoml
rol
dec
loop
pop
dec
idiv
sbb
pop
xor
push
nop
adc
sbb
pop
fildl
mov
insl
mov
popa
pop
mov
in
cmp
push
and
pushf
js
lret
pop
adc
imul
insl
aad
inc
ficomps
ficoms
mov
jecxz
pop
gs
mov
test
nop
test
pop
fwait
popf
lods
add
push
mov
pop
test
cmc
push
mov
jl
mov
jp
decb
cmpsb
or
fdivl
ljmp
push
push
push
or
sbb
shrb
xor
jnp
mov
out
ret
aaa
out
pop
decl
fbstp
adcl
mov
and
jno
ljmp
push
jne
pusha
adc
sub
inc
loope
cmp
loopne
test
test
popf
mulb
add
push
in
pop
popa
and
jno
fisubrs
mov
test
xchg
pusha
pop
insb
pop
ds
cmp
xchg
rep
cmp
and
jnp
rcl
adc
in
gs
sub
mov
pop
scas
add
add
cmpsl
fsubl
or
inc
negl
jne
call
jg
sti
sub
les
loopne
jbe
inc
lds
jo
and
and
inc
ret
arpl
jae
stos
mulb
dec
orb
add
cmpl
cld
jl
loopne
inc
and
mov
in
and
cmpsb
arpl
lret
and
std
mov
imul
xor
ljmp
dec
fiadds
in
testl
dec
and
jo
test
xor
les
out
mov
mov
dec
subb
xlat
xlat
pop
jnp
push
testl
int
mov
mov
in
pop
pop
sahf
add
or
jae
jcxz
push
push
mov
dec
out
pop
cmp
push
stos
xchg
das
cld
sarb
and
aam
xor
cmp
lods
cld
insb
aas
mov
mov
push
imul
sbb
mov
andl
jecxz
xchg
cmpsl
add
in
aaa
es
out
mov
pop
shrb
out
inc
mov
push
mov
mov
movsb
add
sbb
mov
les
jmp
add
std
stos
call
mov
mov
mov
mov
xor
out
lcall
push
mov
cmc
mov
pop
dec
sbb
xchg
mov
mov
jns
cs
repnz
test
mov
push
pop
xchg
sbb
scas
sbb
sub
loop
mov
fisttpl
cmp
in
pop
inc
sub
sahf
je
inc
pop
mov
mov
int3
lds
fldl
adc
imul
aad
push
icebp
dec
or
push
dec
addl
mov
xchg
sbb
lds
xchg
data16
sbb
jo
and
push
xchg
call
sbb
mov
test
pop
sbb
push
fsubrl
int
outsl
aaa
lret
lcall
inc
add
push
adc
xor
xor
ret
pop
xor
pop
ss
sti
loope
jecxz
repnz
cmp
push
loopne
cs
lcall
mov
not
ret
mov
mov
and
insb
adc
push
pop
mov
cmp
cmp
push
xchg
xor
loope
test
or
sub
nop
and
ror
mov
adc
fisttpl
cmp
or
and
mov
mov
pop
jmp
adc
and
pop
mov
adc
jp
ffreep
add
pop
aam
fists
cmp
les
add
fldt
xor
jmp
rcll
cmp
mov
xchg
sub
mov
jne
pop
dec
mov
test
inc
aaa
lret
frstor
mov
pop
nop
push
flds
sti
daa
fnstenv
cld
in
inc
stos
das
out
cmp
out
mov
lcall
scas
mov
xor
sub
sahf
xchg
lock
inc
int
mov
fwait
push
cmp
mov
xor
ds
repnz
mov
push
popf
and
or
push
stc
jle
enter
mov
out
inc
div
aas
mov
inc
dec
pop
sahf
clc
sub
repz
push
jns
sub
rcr
in
loop
adc
dec
movsb
pop
fnstenv
or
mov
pop
jmp
call
mov
call
cld
js
or
jns
dec
cmpsl
mov
jo
adcl
clc
gs
pop
out
xor
pop
lret
sub
jno
and
cltd
dec
push
test
jmp
aas
lcall
push
ret
jge
inc
inc
test
push
xchg
ds
xchg
hlt
mov
outsl
cmp
xchg
mov
mov
mov
push
jo
and
jmp
out
out
mov
ror
mov
cs
decl
xchg
std
sahf
or
aad
lods
xchg
fistps
xor
sti
sub
mov
dec
fdivrs
xchg
and
mov
mov
popf
xchg
sbb
pop
fs
dec
pop
push
xchg
stos
sbb
inc
sbb
sub
mov
mov
aas
sub
call
mov
adc
mov
aam
inc
push
adc
jo
cltd
or
push
xchg
jb
out
xor
inc
push
xchg
pop
sub
inc
int3
add
dec
inc
xchg
push
dec
fbld
add
and
fcomps
int
add
jns
xor
fnstsw
push
push
jp
or
dec
stos
jae
sub
pop
jo
cs
dec
les
pop
jbe
test
imull
outsb
into
dec
lcall
lds
sti
xor
add
cwtl
or
popa
loopne
lret
pop
movsb
aam
dec
pop
lret
ror
cmp
jecxz
jl
sbb
jnp
mov
mov
pop
mov
mov
dec
ret
jecxz
ljmp
xchg
cs
push
adc
or
cmp
lods
mov
pop
lret
aam
std
sbbb
pop
lods
lret
push
jge
push
repnz
cmp
or
aad
mov
xchg
push
xor
xchg
into
loop
jge
insb
fdivl
call
xor
sbb
inc
jge
inc
xor
mov
lds
inc
mov
ud0
mov
sbb
daa
in
movsl
sub
les
xchg
sub
inc
out
mov
loopne
je
leave
xor
nop
pop
jno
dec
mov
loopne
sbb
jmp
ds
fadds
jge
stc
adc
loope
inc
inc
dec
pushf
mov
dec
sub
inc
stos
adc
fsubs
sbb
rorl
or
mov
lds
xchg
jno
ret
mov
mov
inc
add
pop
imul
insb
in
cmp
push
or
and
std
stos
dec
out
dec
cmpsb
sbb
pop
pop
out
sbb
sbb
xor
mov
testl
pop
fcmovbe
outsl
cmc
cltd
ljmp
out
inc
adc
push
inc
add
lea
sub
pop
cmc
jmp
dec
pop
xor
or
mov
cmp
jecxz
outsb
mov
nop
xlat
das
sub
mov
xor
xor
pop
shl
lods
ss
mov
shrb
sbb
mov
cmp
push
jecxz
das
pop
iret
test
pop
inc
shr
xor
push
aaa
inc
mov
sti
loope
jae
adc
scas
aas
std
lock
mov
sub
pop
fnstenv
mov
test
mov
imul
sbb
or
aam
outsl
fnstenv
hlt
aas
fdivrs
ljmp
mov
mov
jmp
pushf
in
lcall
cmpsb
ds
pop
aam
inc
jae
gs
mov
cld
fdivl
int
lods
inc
ljmp
pop
and
icebp
stc
jb
xlat
inc
aam
sbbl
pop
adc
out
repnz
jno
subb
mov
jl
mov
jmp
insl
outsl
sub
or
xchg
movsl
adc
push
cmpsb
fucomip
pop
or
fsubrs
test
sub
xchg
enter
out
in
mov
out
movsl
and
ss
adc
jl
cs
insl
cmp
lds
cwtl
je
aaa
out
fldl
inc
hlt
xlat
orl
je
fcom
arpl
daa
cmpl
mov
push
leave
xchg
stos
arpl
test
rclb
jle
les
or
icebp
push
out
sarl
dec
push
mov
pop
lret
out
jne
ffree
xchg
loop
iret
mov
xchg
arpl
xchg
sbb
rcrl
jg
dec
dec
ja
clc
fadd
hlt
inc
hlt
call
into
cmp
lea
shll
mov
mov
mov
das
jg
jl
mov
mull
push
loopne
pop
aaa
imulb
pop
dec
sarb
outsl
test
jo
cmp
push
pop
int
xor
mov
das
daa
push
jbe
fisubrs
adc
stos
xor
adc
adc
jl
mov
xor
mov
mov
add
push
jnp
ret
int
cvtpi2ps
jp
les
add
in
push
xor
hlt
imul
adc
lcall
sbb
mov
aas
pop
cmc
xor
je
or
mov
lahf
xor
sbb
mov
arpl
xchg
shlb
adc
mov
push
outsb
mov
lods
js
insl
fisubs
pop
mov
xchg
cmp
scas
add
clc
xlat
lea
and
jmp
push
fs
push
or
clc
pop
and
out
push
mov
mov
xchg
inc
mov
je
out
frstor
in
cmp
push
xchg
hlt
sarl
dec
ja
add
nop
in
outsl
xchg
adc
pop
xor
std
push
pop
mov
adc
xchg
sub
jns
add
add
dec
rcrb
xchg
dec
arpl
shlb
out
mov
aad
cmp
fiaddl
xor
push
lea
adc
pop
aam
arpl
xchg
push
insb
and
stos
mov
mov
stos
sub
repz
call
out
sbb
aaa
xor
daa
or
push
shll
and
imul
dec
or
repz
add
or
ret
add
in
add
mov
mov
loopne
clc
loop
or
jne
cmpsb
sahf
cmp
test
stc
rcr
xchg
shlb
cmp
fsts
loope
sub
icebp
scas
pushf
test
jl
mov
ror
repz
pop
cmp
fwait
mov
mov
dec
inc
dec
sbb
test
clc
push
push
xchg
sbb
pop
cli
ja
jle
mov
dec
ret
movsb
jb
lahf
and
sub
and
mov
nop
testl
and
or
pusha
xor
or
sbb
mov
daa
iret
xchg
jb
pop
mov
or
cmova
xor
push
push
pop
lds
aas
xchg
fidivs
out
pop
mov
fdivl
mov
jne
scas
push
add
out
xor
inc
add
fwait
lock
pushf
test
ret
std
lea
push
xchg
sti
fists
fsubs
mov
arpl
lcall
mov
mov
lret
scas
mov
inc
bound
and
jnp
repz
mov
rcll
pop
je
sub
mov
lds
mov
test
hlt
ret
std
push
add
movsb
filds
mul
imul
inc
movsl
ja
scas
sub
into
mov
pop
orl
inc
sub
lods
add
jo
push
cmp
dec
call
addl
icebp
ljmp
rorl
outsl
test
pop
ja
pop
pop
and
call
fwait
lret
sbb
aad
jae
push
add
push
xchg
pop
pop
mov
stos
inc
outsl
pusha
add
push
icebp
aaa
push
xchg
mov
in
xorb
negl
fs
enter
lcall
jno,pn
mov
cmpsb
xor
add
add
into
dec
sbb
lea
gs
mov
loope
out
jo
pop
sub
cld
ror
fwait
aad
outsb
mov
inc
push
insl
mov
je
inc
dec
pop
mov
int
stos
lret
test
repz
push
push
pop
xchg
mov
lret
lods
lret
insb
push
aam
xor
aad
into
fistpl
push
mov
js
jg
jo
movsl
sbb
or
sbb
sahf
push
ror
mov
mov
fistpll
and
mov
xor
or
test
add
pop
cmp
hlt
mov
sbb
std
test
cmpsb
add
xor
scas
std
divl
xchg
test
in
ret
add
imul
out
lea
mov
sarb
test
insb
sub
fbld
lods
add
inc
push
movsl
sub
or
int
aaa
das
xchg
ret
push
ret
or
out
sarb
pop
lods
adc
mov
pop
cmp
fcomi
adc
mov
frstor
loope
cmpsb
shlb
mov
out
dec
sarb
aad
subl
sahf
imul
jbe
leave
loopne
push
mov
test
pusha
and
call
daa
out
jp
mov
mov
ds
pop
in
icebp
push
push
sti
jl
es
pusha
lret
pop
movsl
add
roll
loop
lods
dec
cmp
sbb
pop
dec
dec
push
daa
push
pop
pop
loop
lret
enter
sub
or
mov
shll
add
cmc
enter
es
jp
aam
sbb
push
push
fimull
mov
cmp
xor
fwait
aad
xor
adc
mov
xchg
test
and
dec
aas
out
jmp
cli
and
and
int
xchg
insl
je
enter
cmp
adc
cmpsl
pop
cmp
mov
pushf
lods
hlt
popa
test
outsb
imul
std
push
pop
mov
dec
jl
xor
jl
adc
sbb
sarl
lock
inc
test
sbb
mov
mov
imul
inc
sbb
repnz
mov
fwait
insl
out
or
call
aam
add
int3
js
lahf
and
cmp
dec
push
repnz
fcomps
sbb
pushf
gs
hlt
les
mov
frndint
cmp
popf
stos
cwtl
jo
adc
jp
push
xchg
xchg
pop
popa
popf
inc
outsl
addb
add
test
icebp
inc
das
xor
xchg
and
jp
xchg
jb
aas
into
sbb
testl
scas
xchg
ljmp
mov
lret
andb
or
cmpsb
adc
and
fistps
shrb
out
jnp
roll
lods
jb
xchg
repz
outsb
lahf
jmp
cmp
pop
cmp
orb
sub
add
inc
jg
cmp
dec
mov
into
add
dec
stos
repz
adc
push
or
xlat
inc
cmc
add
pop
jl
or
fsubrp
jle
fistpl
push
xlat
mov
sbb
sub
subl
in
mov
outsl
mov
add
stc
lods
sbb
jb
xchg
insb
lea
mov
mov
ds
std
mov
aas
push
pop
push
push
dec
add
negb
lods
mov
loop
pop
mov
lods
push
orl
inc
push
popa
mov
aad
jbe
xchg
push
stc
aam
popf
out
cmp
sub
add
jo
inc
sbb
dec
xchg
xchg
xchg
mov
in
adc
test
pop
sub
sar
fstsw
shlb
ret
adc
stos
rep
mov
aas
and
or
nop
icebp
sbb
push
dec
test
xchg
jb
inc
outsl
fadd
dec
icebp
dec
push
shlb
mov
imul
xor
and
or
repz
outsb
jae
sahf
add
and
lds
add
hlt
ret
stos
nop
orl
add
pop
xor
ret
movsb
data16
push
sbb
mov
aas
outsb
arpl
sahf
or
fcmovne
xchg
pop
ds
cs
inc
sbb
adc
jmp
xor
insl
movsb
xchg
test
pop
cld
push
mov
cmp
jmp
or
cld
rep
sbb
push
xor
xchg
jae
jne
rcr
imul
jnp
shr
mov
jmp
mov
adc
sub
dec
pop
pop
ja
leave
cli
and
jge
ds
into
add
cmp
shlb
loop
jo
movsb
xchg
push
pop
xchg
jmp
daa
hlt
mov
inc
jg
cmpsl
aam
xchg
out
inc
jae
pop
into
adc
enter
je
loopne
test
jae
lret
int
imul
nop
imulb
mov
outsb
in
xor
xor
pop
adc
stos
gs
jge
and
push
push
jbe
in
pusha
jecxz
sub
push
xor
out
movsl
aaa
je
js
and
sub
mov
dec
iret
imul
xchg
bnd
inc
dec
loopne
les
cmpsl
push
xchg
mov
xor
sbb
mov
bound
mov
adc
inc
and
adc
rorl
fcomi
push
mov
insl
push
push
add
leave
out
loopne
mov
icebp
and
sbb
dec
pop
dec
inc
int3
out
lret
and
push
and
stos
xor
jae
xchg
push
pop
loop
int3
in
jg
jbe
out
mov
les
cmpsl
xchg
xchg
int
jecxz
or
scas
sub
sbbb
std
or
mov
addr16
movl
call
movsb
fstps
mov
cwtl
xchg
insl
or
sarl
roll
pop
xchg
inc
out
sub
outsl
int3
sub
push
xchg
mov
dec
cmp
mov
test
mov
push
nop
mov
adc
mov
sbb
movsl
cmp
xchg
imul
pop
pop
ss
and
scas
bound
aam
mov
outsl
popf
pusha
cmpb
loope
je
fimuls
jl
or
jno
andb
sub
iret
push
addr16
cmc
cltd
imul
inc
add
testb
mov
sub
jne
mov
push
mov
cmp
ljmp
sti
mov
test
pusha
push
pop
scas
xchg
cmpsb
jnp
cld
mov
lods
loope
test
jg
pminub
cmp
fsubp
xchg
mov
dec
inc
or
add
mov
inc
pushf
and
or
or
and
repnz
inc
scas
pop
mov
loop
into
loope
aas
adc
lret
sti
fmull
pop
loop
lds
push
lds
cmp
lahf
and
inc
xchg
test
jne
pop
int
insl
pop
outsb
sub
repnz
or
std
jge
lea
jno
rorl
inc
add
dec
mov
xor
adc
and
nop
xchg
jp,pt
mov
or
mov
pop
ds
rorl
mov
pop
aam
outsb
sarl
sub
jmp
cld
mov
fwait
add
adc
add
loopne
cltd
or
lods
lret
sti
add
adc
inc
sub
dec
fldt
adc
or
mov
mov
lret
mov
test
inc
or
mov
or
test
mov
xor
pop
lcall
loop
out
ret
cld
nop
xchg
out
outsl
clc
cmpsl
or
push
fcmovbe
push
insl
cmpsb
cwtl
ljmp
rolb
roll
aas
arpl
test
mov
repz
imul
hlt
inc
jnp
les
mov
bound
pop
daa
push
mov
xchg
inc
and
fsubrs
daa
inc
xor
jecxz
sub
pop
out
jge
fsqrt
fdivrl
mov
mov
dec
das
sti
mov
mov
fs
pop
out
xchg
test
push
inc
pop
popf
nop
out
mov
inc
sbb
mul
pop
out
outsb
cmpsb
mov
jno
aam
js
lcall
inc
mov
cmp
xor
test
pusha
ds
sbbb
ja
jg
xor
cmp
mov
insb
shlb
pop
sbb
jl
and
sub
std
mov
movsb
mov
inc
mov
loop
cli
hlt
mov
cmp
jg
addr16
stos
aaa
pop
js
sub
xorb
jns
mov
sub
inc
jp
fdivl
xchg
vfnmadd231ps
scas
mov
and
or
movl
das
and
out
cmpsl
ret
push
arpl
pop
pop
sub
stc
mov
ljmp
iret
push
int3
sub
movsl
or
jp
jl
pop
add
into
add
cmpsb
mov
movsl
mov
xchg
and
in
xor
push
mov
cs
or
test
inc
mov
fidivrl
sbb
push
ja
mov
xor
cwtl
push
or
sub
insb
repnz
loop
xchg
push
wbinvd
shrl
lret
and
inc
int
mov
mov
xchg
mov
shrb
call
add
insl
push
push
dec
ljmp
pushf
outsl
shrl
mov
mov
cmp
jb
adcb
inc
ss
insl
je
jmp
pop
shlb
sti
aam
add
jne
addr16
fs
xchg
or
test
aaa
sti
xor
fiaddl
mov
jno
xchg
sub
jb
mov
jne
push
mov
push
aaa
inc
adc
mov
mov
mov
cmp
int
popa
push
jns
push
cmp
mov
push
mov
xor
pop
add
lods
push
incb
mov
fcomip
ret
jno
push
or
xor
decl
data16
jg
mov
daa
call
or
dec
cmp
push
cmc
xchg
xor
clc
cltd
test
lahf
sbb
pop
dec
xchg
add
movsl
xlat
iret
sbb
cwtl
imul
mov
shrb
cmp
outsb
addr16
lret
popa
add
loope
std
pop
cmp
xchg
js
bound
inc
fcom
inc
pop
loop
subb
pop
push
lcall
adc
fidivrl
dec
and
test
dec
mov
cmp
lds
inc
std
add
in
mov
nop
fstps
outsl
aad
sbb
rcrb
addr16
pop
rorl
cmp
xlat
nop
cwtl
xor
push
jl
lea
ret
and
in
or
cld
cmp
dec
movl
mov
fcomp
hlt
push
mov
xlat
insb
repnz
or
push
and
cmp
pusha
movsl
jge
test
mov
inc
dec
fildl
xor
cld
pop
or
ret
lret
lods
fdivr
mov
iret
cmc
pop
sub
dec
jb
lret
mov
notl
rcr
or
pop
add
mov
ret
push
jne
sbb
pop
dec
push
out
enter
mov
call
sti
fstl
jle
sahf
sub
cmp
mov
pop
mov
push
sbb
sub
ja
xor
test
daa
pop
xor
xlat
adc
adc
out
mov
or
mov
nop
les
push
lods
pop
aad
addr16
mov
inc
push
or
stc
das
push
dec
aad
adc
loopne
aam
mov
pusha
fstpt
psrlq
xchg
decb
je
add
fdivrl
mov
pop
mov
jl
jns
add
and
fs
das
hlt
loope
mov
mov
out
loop
pop
pop
iret
nop
dec
mov
inc
out
cmp
mov
push
insl
mov
push
cmp
mov
push
popf
jbe
inc
mov
xchg
pop
mov
cmp
lahf
popf
icebp
std
jae
cmp
pop
aad
mov
or
push
or
mov
shll
pop
out
shl
adc
cmp
cmp
nop
mov
mov
jmp
adc
adc
add
in
mov
xor
in
stc
jl
lea
jp
sub
mov
xor
xchg
mov
test
xchg
cltd
xchg
pop
imul
jp
cli
stos
cwtl
stos
test
je
scas
aad
dec
inc
icebp
mov
nop
mov
mov
fs
cmp
pop
jb
jnp
fidivs
js
cli
mov
mov
clc
pop
adc
dec
in
shl
sbb
movsb
dec
test
xor
call
fwait
and
sbbl
pop
push
pop
push
insl
insb
pop
out
aam
scas
mov
sub
and
push
pop
mov
mov
inc
jge
mov
popa
test
push
out
mov
lods
mov
movsb
push
test
repnz
add
fisubl
inc
cmp
sub
jb
inc
mov
adc
fiaddl
ret
jl
lods
rdtsc
adc
jle
dec
adc
pop
repnz
pop
add
pop
mov
ror
dec
mov
in
sahf
orb
sub
addr16
mov
popf
inc
xlat
adc
xchg
mov
cmp
mov
mov
daa
or
mov
push
and
dec
inc
inc
or
sub
shrb
mov
sbb
mov
pcmpeqd
adc
pop
jno
mov
or
inc
out
stos
cltd
iret
out
push
imulb
repnz
adcl
push
jg
outsb
sbb
mov
fwait
cmp
int
int
inc
xchg
push
fdivrs
mov
xchg
aaa
lea
push
xchg
adc
lcall
std
push
push
mov
les
fcmovb
rorl
cmp
scas
out
rorl
mov
sub
jp
pusha
xor
xorb
dec
inc
cmpsb
mov
adc
cld
sarb
das
fucomp
mov
lret
mov
sbb
jns
add
inc
adc
add
sub
sub
test
add
fs
dec
adc
mov
mov
mov
cltd
jo
and
int
add
push
pop
or
add
iret
outsb
jecxz
js
add
mov
jmp
adc
cmpsl
shll
jae
clc
sbb
das
popa
fs
push
lahf
fbstp
cs
xchg
in
mov
cwtl
pop
js
clc
sbb
out
xor
mov
inc
pop
pop
mov
cmp
arpl
rorl
mov
sub
add
pop
daa
xchg
out
inc
fwait
cld
mov
jae
add
push
iret
jno
add
pop
jmp
sbb
and
mov
dec
mov
sbb
mov
sub
push
aam
jb
jo
pop
mov
adc
rorl
xchg
fidivs
pop
sub
jmp
loope
sub
mov
lea
push
xor
inc
sti
push
mov
repz
add
jns
pop
inc
gs
jg
rclb
fs
mov
loopne
pop
xor
jo
and
mov
roll
roll
mov
popa
mov
je
xor
sub
push
mov
pusha
test
icebp
mov
dec
into
mov
repz
mov
add
and
adc
adc
mov
jno
ss
lea
adc
dec
mov
push
and
mov
adc
mov
inc
outsl
std
test
pushf
cmp
jbe
test
cmp
sbb
in
mov
push
cs
enter
in
xor
jbe
xor
shr
loopne
bound
daa
sbb
jl
adc
sti
andb
clc
jmp
add
ja
aam
in
mov
pop
lds
aas
pop
push
sub
adc
mov
jnp
int
jne
js
cmp
sbb
pop
xchg
mov
mov
xor
push
ss
inc
jge
mov
mov
inc
mov
popa
adc
ret
and
popa
imul
cli
mov
cmpsb
lret
xor
jle
adc
fs
cli
cmpb
mov
in
or
out
cmp
and
jg
outsl
jp
and
mov
lods
aam
adc
push
push
fimull
nop
dec
jg
call
dec
cmp
ret
inc
stc
sub
dec
sub
aam
xchg
fsubs
call
push
add
shrb
mov
movsl
mov
fildl
lds
fs
mov
jne
dec
mov
mov
sub
loope
mov
add
push
xadd
xchg
jle
or
cld
pop
in
push
or
movsl
cmp
jnp
cmpsl
in
mov
addr16
sub
dec
int
ljmp
push
push
cli
scas
sub
and
dec
sbb
lods
leave
push
sub
mull
dec
xchg
cli
cmp
pop
pop
not
mov
mov
mov
call
jnp
add
scas
adc
jge
das
cmp
fimuls
lods
pop
cmpsb
mov
adc
adc
mov
jnp
stos
and
fs
into
cmc
push
jl
mov
jp
fdiv
xor
jne
adc
aaa
lret
inc
les
ret
lods
cmp
pushf
cld
pop
mov
sti
lahf
cmpsl
sbb
sahf
std
movsl
js
rcrl
dec
lcall
insb
add
sbb
or
jg
push
mov
push
or
xchg
rcr
and
jl
cmovno
rep
cltd
insl
in
xlat
xchg
inc
jmp
mov
xor
mov
arpl
lret
jb
push
pop
scas
sbb
mov
dec
xor
pop
xor
xchg
xchg
call
fcoml
and
or
ret
cmp
and
loope
mov
xchg
pop
lods
push
or
xchg
fnstsw
mov
push
shlb
inc
xor
sarl
mov
push
add
into
scas
outsb
aam
pop
sbb
test
add
push
sub
adc
xchg
pop
cmp
mov
movsb
push
cmpsl
mov
stos
cmc
jle
sub
dec
das
sub
sbb
cmpsl
sub
lods
or
in
aas
aas
ljmp
dec
scas
inc
mov
sub
sbb
faddl
sarb
repnz
out
gs
in
pushf
in
test
stos
cmp
es
imul
sar
dec
in
es
sub
in
fcmovu
adc
and
or
push
or
mov
into
insl
jbe
fdivp
rdpmc
sahf
sti
daa
aas
pushf
lds
mov
mov
mov
imul
and
push
rorb
push
je
pop
cs
andl
stc
sbb
inc
mov
sub
lea
inc
dec
dec
adc
into
lret
scas
outsb
test
add
jae
dec
sbb
aas
cmp
adcb
dec
dec
push
pop
xor
lods
add
pop
push
lcall
faddl
sub
jp
int3
adc
aaa
add
fbld
lds
and
ljmp
mov
int
jl
and
loopne
cmp
jne
or
imul
out
jbe
pop
add
cmp
mov
jg
ret
inc
popf
pop
push
aaa
aas
pushf
xchg
mov
sar
sarb
sub
sbb
mov
imul
fcoms
addr16
mov
push
clc
xchg
insb
lods
fucom
push
cmpl
ja
aaa
cmc
aas
sub
in
divb
push
mov
pop
or
mov
aad
xor
mov
icebp
outsb
int3
push
mov
inc
push
test
test
xor
loopne
pop
pop
adc
mov
lds
pop
mov
jecxz
dec
movl
cmp
xchg
mov
sub
mov
and
push
mov
popf
and
pop
sbb
fst
js
fldl
mov
aas
mov
in
inc
call
inc
lea
pushf
fcompl
jmp
cwtl
mov
push
cmpsb
mov
cmc
mov
mov
pop
cli
xor
xchg
xor
sti
sbb
iret
ss
mov
out
lock
outsb
dec
dec
pusha
fucomp
cltd
mov
stc
loop
inc
inc
dec
push
in
and
and
iret
cwtl
push
aas
test
js
js
jb
sub
les
stc
cmc
shl
fdivp
inc
xor
scas
pop
out
mov
inc
sub
nop
xchg
add
fwait
loope
jp
lea
repz
push
sbb
cmp
mov
jg
sbb
add
daa
test
ret
xor
cmp
add
pop
xchg
mov
dec
insl
push
test
idiv
sbb
dec
sti
mov
lock
cmp
fcompl
ja
dec
mov
pop
mov
lods
push
lret
dec
icebp
jmp
lock
ljmp
dec
xchg
push
daa
mov
mov
in
cs
lahf
movb
push
or
fs
cwtl
pusha
mov
and
mov
insl
idivb
idivl
adc
lret
cmp
adc
in
cmpsb
pop
fnsave
aaa
mov
pusha
add
pop
push
mov
push
pop
jns
repz
push
pop
mov
dec
lcall
fimuls
fisttps
push
sub
xlat
add
sub
aam
xor
arpl
in
and
outsb
insb
lahf
jae
addl
cmpsl
sbb
dec
stc
mov
xchg
aaa
pusha
das
mov
sar
or
addr16
mov
in
enter
push
ret
mov
rorl
stc
jle
pushf
inc
jmp
pop
repz
imul
icebp
leave
jae
fs
mov
mov
mov
push
jnp
jle
xchg
xchg
jne
push
adc
ret
in
in
pop
xor
popf
rolb
push
lods
shl
xchg
inc
and
notl
ljmp
sub
inc
xor
repnz
insb
sub
test
dec
push
or
lods
xchg
jne,pt
out
adc
adc
inc
pop
push
sbb
pop
pop
lret
or
dec
mov
cmp
mov
and
cmc
in
call
daa
add
xchg
hlt
out
pop
push
es
inc
nop
inc
fs
cltd
adc
movsb
test
aad
xchg
fnstsw
sub
and
scas
push
jg
mov
pop
inc
mov
jmp
xor
mov
dec
not
lahf
sbb
or
mov
das
pop
xlat
push
cmp
or
dec
inc
sub
cmc
xchg
xor
pop
adc
movsb
repz
cld
adc
std
ds
out
push
fcomps
daa
adc
mov
sub
aaa
xchg
adcl
aaa
cmp
gs
adcl
popa
movsl
shrl
pusha
mov
sub
sub
inc
ficomps
movsl
jl
mov
add
bound
push
shll
and
sub
decb
cli
loop
imul
jb
aad
popf
sbb
jge
mov
adc
dec
loop
push
dec
pop
lahf
sti
push
ja
sub
ret
sub
fwait
in
xor
fiadds
lods
imul
mov
inc
add
repnz
cmp
movsb
pop
jnp
aad
mov
in
out
dec
jno
push
push
stos
or
clc
dec
mov
dec
loopne,pn
ss
dec
sbbb
sbb
lods
and
mov
xchg
clc
lds
pop
jl
xchg
jae
cs
dec
inc
jae
mov
xchg
popa
mov
fldenv
and
and
fimull
scas
das
rolb
mull
mul
stc
jg
cld
aaa
or
ss
push
aas
lcall
add
cmp
les
xor
sub
add
inc
insl
dec
push
cli
add
adc
cmp
aas
test
inc
fcomps
mov
sbb
dec
test
out
push
sub
jbe
jo
sbb
pop
icebp
jmp
scas
std
xchg
sbb
adc
ret
adc
hlt
mov
or
popf
sbb
ss
rcll
adc
loopne
xor
jle
fs
sbb
out
add
dec
push
push
mov
pop
stc
stos
add
mov
jae
adc
lods
cmp
xor
push
xchg
jp
dec
test
jg
repz
push
inc
jecxz
mov
pop
push
cmp
popf
sbb
sub
lods
arpl
es
mov
movsb
push
fbstp
jne
add
es
fstpl
movsb
subl
pop
lcall
dec
cwtl
sub
lods
sbb
lods
dec
xchg
fstl
adc
cwtl
fsubp
mov
fdivr
pushf
lods
lret
mov
cmp
jp
or
outsl
pushf
popa
cmp
xchg
xchg
sti
pop
idivb
addr16
fs
movsl
ja
push
or
lea
cmc
jbe
dec
insl
push
ljmp
cmpl
lea
pop
loopne
mov
jo
nop
push
jno
lcall
mov
inc
out
int3
adc
cltd
movsb
arpl
mov
pop
add
popa
ret
pop
add
add
dec
les
sub
pop
push
jne
push
int
mov
test
cmp
xlat
stos
inc
not
adc
mov
out
xor
mov
cmp
sub
outsb
jmp
hlt
imul
cmp
sbb
pop
add
xchg
aas
inc
imul
fistpl
ss
pop
jmp
jp
or
fistps
jle
ret
push
dec
mov
cld
cmp
inc
mov
je
shr
xchg
adc
stos
or
cmp
insb
sub
push
sub
pop
mov
popa
dec
repz
mov
insl
loop
sbb
mov
sbb
push
out
or
add
cltd
sub
rcr
push
xchg
ret
or
cmpxchg
inc
loop
jae
inc
sbb
sub
and
mov
push
out
clc
jmp
je
enter
mov
movsl
inc
inc
lcall
dec
xor
sbb
push
addr16
fwait
pusha
out
push
sbb
movsl
lds
in
jb
pop
mov
and
ja
pop
pop
add
push
repz
and
mov
scas
mov
clc
out
in
call
adc
hlt
jno
sbb
pop
test
add
push
loope
mov
sbb
mov
inc
push
out
jge
push
adc
jnp
xor
aad
sub
jl
mov
mov
mov
push
es
adc
stc
xor
inc
dec
sub
outsl
jo
stos
aad
mov
add
sub
negb
inc
jb
push
jo
popl
in
enter
cmp
mov
inc
jnp
dec
jnp
xlat
sub
mov
add
add
std
addr16
and
jbe
push
dec
lret
pop
or
mov
imul
mov
inc
or
cld
inc
dec
pop
int
out
icebp
push
pop
adc
jl
xchg
pop
leave
insb
add
loope
movsl
testl
mov
in
fdivrl
push
and
dec
dec
mov
ljmp
outsl
cmpsb
notl
mov
pop
and
adc
add
sbb
nop
mov
scas
rorb
out
fnstcw
mov
adc
shll
lods
mov
jecxz
test
inc
and
sbb
data16
cmp
dec
jo
jbe
and
out
aam
or
pop
popf
mov
ficompl
jl
mov
movsb
pop
xchg
pop
push
loope
iret
inc
jmp
lods
clc
lret
mov
cs
add
and
cld
push
or
or
repz
jge
inc
or
mov
ss
fisttps
fnstcw
pop
xor
imul
shl
mov
out
inc
or
or
jl
sti
mov
sahf
cmp
sub
lahf
call
popa
xor
fs
pop
repz
out
stc
in
rclb
out
jnp
movsl
or
add
das
mov
rclb
dec
pop
dec
jmp
xor
notl
mov
jo
ret
add
xlat
out
pusha
int
icebp
out
pop
cld
into
jmp
sub
inc
pop
xorl
sbb
das
sbb
js
iret
and
shl
add
jne
dec
pcmpeqd
add
out
mov
xlat
mov
pop
fldl
mov
inc
ficomps
repnz
cltd
in
bound
jae
mov
iret
mov
enter
mov
and
pop
leave
add
ret
add
pop
pop
loop
add
or
mov
push
bound
movsl
push
pop
psrad
jge
mov
out
sub
lods
and
pop
add
jecxz
call
mov
subb
rep
dec
popl
adc
jo
mov
pminub
data16
das
aam
xchg
xchg
shll
fsubrs
ret
movsb
jmp
inc
push
add
and
push
test
mov
fsubrl
push
add
sbb
pop
cld
movsb
inc
pop
data16
add
mov
sbb
ror
mov
sbb
pop
dec
pop
loope
and
xchg
nop
rsm
xchg
repz
insl
bound
aas
cmp
rcrb
mov
mov
mov
into
cmp
dec
and
arpl
shrb
testb
xor
subb
lock
lret
sbb
sbb
into
mov
mov
icebp
hlt
sbb
jae
ret
or
test
mov
jb
shrl
or
mov
mov
test
leave
mov
dec
stos
repnz
out
stos
adc
inc
imul
dec
jnp
icebp
or
scas
movsl
cltd
xlat
std
bswap
cmp
scas
ret
movsb
fcompl
mov
sbb
clc
jbe
stc
xor
dec
popa
push
pop
shlb
pop
test
pop
daa
loop
dec
push
movsl
dec
adc
jns
jbe
or
or
dec
ror
les
movsl
and
mov
push
mov
adc
mov
cmpl
pop
push
test
push
hlt
jnp
mov
cmp
inc
daa
jecxz
in
jo
test
stc
outsl
lcall
call
adc
pop
xor
pop
test
sbb
lahf
in
xchg
and
jmp
add
shll
add
xor
cmp
icebp
jno
pop
scas
or
or
jg
loop
mov
inc
pop
test
in
out
popf
inc
sub
pusha
test
or
scas
mov
pushf
mov
cmp
mov
pop
lds
test
or
out
call
daa
dec
aaa
out
int
cwtl
adc
cmp
ss
mov
mov
ja
inc
xchg
jbe
int
jge
xchg
test
dec
ss
aas
out
orl
pop
mov
and
out
dec
mov
mov
inc
push
fsubrl
je
pop
lods
js
and
xchg
adc
mov
fcmove
mov
inc
dec
cmp
or
mov
inc
call
pop
or
loopne
rclb
ffreep
in
jg
inc
jp
push
in
mov
int3
clc
dec
call
leave
mov
insl
hlt
mulb
cmp
int
dec
sti
call
fwait
and
jle
mov
out
and
mov
and
out
loop
clc
cmpsl
xchg
xor
push
push
mov
and
insb
cltd
js
cmp
in
call
mov
mov
push
fmull
sbb
arpl
lahf
dec
sbb
stos
inc
push
inc
or
data16
xchg
and
fcomip
pop
adc
pop
jmp
ljmp
mov
xchg
mov
xor
nop
mov
fdivrl
inc
ret
jno
mov
sarb
repz
xor
sbb
mov
push
cwtl
add
lea
mov
gs
adc
int3
in
shl
sub
cmp
add
aam
cmp
out
jnp
add
movsb
xlat
je
iret
cmpsb
fwait
cmpsb
ds
std
jo
xchg
clc
sti
stos
cmpsb
cwtl
jp
out
into
add
push
push
loop
xor
insl
jno
js
ficompl
push
lret
scas
fnstcw
and
and
inc
xchg
fsubl
sahf
inc
pop
fwait
push
pop
js
pop
arpl
mov
cmp
pop
pop
add
fs
lods
xor
cld
or
popf
and
loope
jnp
lahf
jo
push
jg
cmp
js
std
xchg
add
movsb
aas
adc
or
rclb
xor
xor
xlat
add
incl
and
mov
mov
sbb
dec
push
or
imul
cmp
pop
cmpl
push
sti
fimull
sub
icebp
pop
pop
cltd
fistpl
gs
xlat
int3
fisubl
add
sub
hlt
mov
mov
jecxz
mov
add
mov
ds
sbb
inc
mov
fmulp
loope
mov
es
rcr
clc
pop
jae
inc
sub
pop
lea
cmp
jnp
cmp
je,pt
mov
push
in
jb
stc
inc
sbb
mov
hlt
mov
xchg
mov
jo
fcomps
pop
out
jno
inc
pop
xchg
orl
pop
in
xchg
xchg
inc
jne
mov
cli
out
jg
fisubrl
sbb
xchg
xchg
sub
fwait
aaa
cmpsl
push
or
lret
ds
stc
mov
lret
add
push
cmp
iret
push
cltd
mov
jge
pop
shlb
xor
arpl
cld
jg
push
pusha
ss
es
lods
jg
xchg
movsb
or
lret
enter
and
into
adc
pusha
jle
pop
lea
sahf
shll
in
adcl
pop
test
fistpl
jecxz
xor
push
repnz
popa
div
xchg
jne
lcall
mov
jbe
jmp
lret
call
or
push
inc
add
inc
nop
sub
jo
lahf
pop
and
cmc
cmp
push
test
mov
xchg
push
add
lcall
jge
es
dec
insb
stos
push
xchg
inc
rorl
pusha
jg
and
pop
mov
sarb
pop
sti
lea
dec
lea
push
adc
inc
pop
xchg
outsb
fistl
sbb
xor
mov
in
mov
push
sarb
aam
fwait
or
andb
jne
xchg
sbb
cmp
xorl
mov
lock
sub
xchg
pop
repnz
std
inc
jg
mov
mov
je
dec
and
add
cmp
add
or
sub
je
enter
or
jmp
lods
pop
push
rolb
or
cmp
add
xchg
popa
movsb
adc
cmpsb
lcall
into
fisubl
fisttps
cmc
std
ljmp
or
ud0
cmp
pop
mov
push
dec
ret
and
xchg
rorb
push
shl
dec
je
cmp
sub
and
sbbl
pop
xor
lock
fwait
push
cs
pop
in
into
xchg
stos
mov
cmp
bound
fsts
push
xchg
adc
in
ret
repnz
jno
shl
sbb
addr16
dec
loop
dec
jbe
popa
push
mov
call
int
jns
jb
cmpsl
adc
mov
leave
int
call
iret
into
xchg
inc
jl
xchg
push
or
cmp
scas
aas
xor
xor
adc
lock
xor
sub
sti
mov
mov
stos
in
mov
or
jecxz
pusha
push
aaa
ficoml
shlb
pop
pop
in
push
mov
lock
mov
imul
loopne
adc
cmp
or
mov
test
mov
and
pop
outsb
and
bound
imull
adc
or
sbb
xchg
scas
int
call
mov
jbe
xchg
lret
pop
hlt
mov
add
mov
or
pop
das
ret
jb,pn
bound
repnz
aad
jo
mov
push
dec
lahf
rolb
ficoms
clc
push
lods
daa
mov
mov
jle
jns
push
push
enter
and
mov
xchg
lods
adc
xlat
mov
fcmovnb
mov
mov
lcall
jns
scas
flds
loopne
jb
fs
fidivrs
shll
or
lret
push
iret
sbb
std
add
adc
add
adc
bound
popf
pushf
mov
sbbb
scas
mov
mov
sub
mov
xchg
and
in
ljmp
and
aam
ljmp
xor
adc
push
jo
lods
mov
and
mov
shll
cld
xchg
lret
pop
pop
xchg
je
idivb
popf
inc
insl
push
cmpsl
test
testl
pop
in
mov
pop
mov
xor
rcrb
xchg
and
and
out
sbbb
fsubl
pop
mov
call
sbbl
fcmovne
cmp
push
mov
iret
mov
fwait
cmc
sarl
dec
mov
fmull
xchg
xchg
and
mov
mov
fisttps
pop
lcall
jbe
mov
mov
data16
mov
jmp
inc
pop
xchg
and
jno
insb
das
lods
or
out
mov
loopne
mov
cli
test
add
push
cmp
insb
addl
loope
stc
and
aas
mov
push
std
stos
mov
push
mov
mov
cltd
lret
and
mov
loopne
sbb
lods
push
mov
outsl
inc
push
aaa
lret
ss
test
shr
in
sub
sbb
pop
pop
add
or
loope
sub
lret
addb
repz
mov
xor
jae
sub
cld
sbb
mov
es
sbb
stos
scas
and
in
sahf
stos
cs
mov
push
jno
sub
imul
lret
adc
sbb
xor
aad
jmp
cwtl
repnz
addr16
sbb
xlat
ret
push
shll
dec
jo
adc
xchg
sbb
dec
ss
daa
xchg
push
xchg
add
pop
dec
mov
pusha
add
adc
and
test
add
sub
in
adc
mov
lret
inc
loope
subb
lods
pop
dec
mov
aaa
negb
pop
push
out
nop
cmp
mov
xor
out
and
subb
jp
clc
fbld
push
inc
movsl
arpl
das
jp
add
xlat
push
adc
mov
push
adc
mov
jb
mov
and
stos
sub
or
xchg
jmp
icebp
in
xchg
outsl
icebp
xchg
push
test
inc
idivb
into
mov
cwtl
push
sbb
pop
repz
adc
cwtl
jp
es
inc
or
sub
cli
jnp
cmpsl
ds
xor
dec
jp
outsl
or
lods
ret
int3
cmp
pop
and
mov
xor
shrb
je
lock
out
jl
clc
sub
xor
and
loop
sbb
mov
and
cltd
popf
push
std
sub
ja
inc
inc
imul
xor
and
push
inc
ja
xlat
fs
pop
pop
mov
mov
add
std
je
mov
add
push
add
jnp
sbb
daa
lret
xor
movsl
xor
jl
rcrb
test
aas
pop
out
push
into
mulb
dec
push
movsb
mov
imul
and
pop
rcrb
or
dec
mov
cmpsl
popa
scas
aas
scas
sbb
lea
sbb
sub
inc
and
shll
lods
adc
fbstp
jge
data16
push
xlat
fwait
or
pushf
test
pop
jl
insl
mov
and
cld
movb
mov
pop
and
xchg
rol
inc
dec
and
push
and
push
loopne
outsb
in
xor
ja
shl
and
xor
test
sbb
xchg
jmp
pop
ja
leave
lods
and
xchg
enter
mov
sub
int3
js
out
outsl
sbb
enter
daa
clc
cmpsb
cli
pop
xchg
mov
add
out
dec
xor
jle
fs
push
in
fs
iret
inc
pop
daa
or
aam
cmp
pop
aam
add
jno
das
sub
inc
ljmp
mov
pop
push
inc
pop
sbb
fimull
pop
push
into
mov
xchg
mov
rcl
ss
cmp
cwtl
adc
jo
sti
imul
enter
dec
dec
push
pop
xchg
das
or
addr16
outsl
inc
mov
xchg
arpl
sbb
pop
jmp
aaa
push
mov
adc
test
adc
gs
cmp
aad
mov
cld
stos
and
rorb
lds
jae
mov
jbe
mov
lods
out
negl
inc
and
pop
xchg
loope
pop
inc
push
sbb
mov
out
insb
scas
mov
push
xor
xorl
mov
add
jo
movsl
fwait
lock
pop
mov
inc
fldcw
xor
fdivp
sbb
sahf
test
push
xchg
add
repz
xchg
add
hlt
popf
rcl
imul
aam
scas
xchg
rorl
scas
adc
outsb
in
or
jns
sbb
repz
pop
daa
sarl
sbbb
push
repz
mov
in
ret
mov
mov
nopl
std
push
repnz
shll
and
aad
dec
cmp
or
inc
fdivs
dec
jbe
push
cmp
mov
in
pextrw
clc
sbb
mov
out
pop
jmp
xor
cmpsb
cmp
out
sub
rolb
repnz
aad
dec
mov
fs
fists
pop
sahf
mov
add
jb
mov
jp
xchg
in
adc
add
jge
mov
mov
mov
add
pop
iret
cmp
mov
inc
xchg
jbe
popa
int
or
mov
sbb
push
add
and
jmp
pusha
jle
sahf
cld
mov
jmp
subl
cwtl
xchg
pop
push
cmp
push
inc
inc
dec
xchg
mov
aaa
in
xchg
mov
mov
jbe
out
sub
mov
outsb
mov
loopne
xchg
leave
repz
dec
or
add
push
out
mov
inc
mov
sti
cmp
shrb
xchg
sbbl
fwait
popa
pop
mov
and
inc
test
jp
add
sbb
test
dec
dec
shlb
stos
lods
mov
gs
mov
mov
mov
sub
shrb
jle
lea
mov
repnz
add
jmp
add
cmp
in
xchg
push
jp
dec
repnz
sti
movsb
inc
or
and
repz
scas
aas
cmpsb
andb
mov
ret
mov
and
xchg
fldcw
xchg
add
add
jp
int
mov
mov
jno
enter
dec
mov
sbb
cltd
pop
sbb
and
notb
insl
sbb
or
movsb
push
mov
stos
jge
fisubl
push
sbb
mov
mov
mov
adc
cli
imul
fistps
xor
jno
adcb
cmp
jecxz
aas
mov
stos
mov
shlb
push
in
or
add
repz
mov
out
adc
out
imulb
jecxz
pop
xchg
insb
cmpl
pop
add
andb
add
scas
mov
inc
es
movsl
jl
add
loop
shrl
mov
sbb
jnp
mov
mov
pop
outsb
outsb
aad
cmp
bound
mov
insb
mov
xor
ds
xor
hlt
push
loop
xchg
add
cmp
adc
dec
push
adc
in
add
and
ja
mov
adc
pop
jle
pop
xchg
cmpxchg
stos
cltd
sbb
sbb
sub
fistpll
ja
ret
iret
into
xchg
dec
xchg
cmp
and
icebp
fstps
lahf
cmc
pop
add
lods
out
movsb
sahf
mov
inc
fidivs
and
in
cli
mov
or
add
imull
xor
stos
sub
adc
lret
adc
jg
sbbb
sub
insb
mov
stc
or
inc
pop
addr16
dec
sbb
sbb
or
push
and
stos
inc
cmp
mov
icebp
mov
or
rorl
inc
repnz
arpl
cwtl
jbe
sbb
xchg
in
sub
push
into
and
stos
pop
mov
ja
lret
call
ljmp
stc
cld
lock
dec
push
aaa
jecxz
inc
and
es
mov
je
test
adc
repnz
test
mov
lcall
stos
adc
inc
jmp
negb
xchg
popa
mov
dec
sub
roll
sbb
dec
dec
mov
fdivl
jge
mov
aas
aam
insl
rcrb
sahf
negb
inc
mov
je
mov
xchg
pop
mov
jo
mov
jb,pn
mov
jecxz
cwtl
lds
psubsb
and
jle
in
mov
or
dec
and
xchg
dec
fcoml
or
je
and
pop
and
lods
lcall
fimuls
jo
aad
sub
jbe
push
adc
mov
and
stos
test
call
xchg
mov
mov
pop
jbe
and
fbstp
and
sub
lock
cmp
xor
nop
mov
mov
cmp
xor
dec
movsl
inc
sbb
clc
insl
dec
cwtl
repnz
inc
xchg
cld
nop
je
test
sbb
loope
add
call
xchg
lcall
pop
fs
repz
jns
testb
mov
inc
ljmp
mov
jnp
inc
fimuls
mov
mov
cmc
roll
pop
mov
mov
ss
inc
std
cmp
inc
out
inc
sahf
add
mov
add
pop
int
or
lock
xor
push
enter
sbb
hlt
jle
jp
inc
jnp
int
ss
xchg
jp
mov
mov
pop
test
fiadds
mov
aas
and
dec
pop
mov
cmp
addr16
shll
cmpsl
mov
pop
lcall
inc
or
shlb
cmpsl
push
lcall
dec
bound
int3
jb
mov
sbb
adc
sub
inc
negb
mov
stos
or
clc
imul
and
movsb
pop
jne
mov
xchg
xchg
daa
call
shl
scas
adc
cmpsb
scas
jge
negb
les
adc
inc
jo
out
mov
jle
pop
ja
mov
aad
pop
lods
pop
and
cmc
cmc
xchg
jb
push
shl
sbb
out
or
insb
push
or
out
js
and
vorps
mov
push
call
sbb
sbb
and
mov
xor
pop
and
int3
or
or
adc
dec
push
enter
in
icebp
jge
lock
stos
mov
int3
jo
lahf
scas
scas
lea
call
outsl
jge
ffree
dec
xchg
sbb
push
pop
mov
call
sbb
loope
js
lods
pusha
pop
fistl
adc
mov
inc
pushf
je
ds
in
in
xor
push
jns
cli
xchg
pop
ret
pusha
jmp
push
jmp
mov
pop
loop
jmp
cmp
out
and
mov
outsb
inc
addr16
pop
sub
mov
add
sub
mov
dec
adc
icebp
inc
std
pop
nop
jns
cmp
xlat
das
incl
mov
xor
ss
mov
or
push
or
jp
pop
push
pushf
sub
cmp
push
mov
xor
cmp
sti
jmp
insl
out
and
sbb
arpl
pop
aaa
adc
fidivrs
in
ljmp
and
xchg
sub
jle
into
mov
mov
imul
ret
sti
mov
std
ljmp
fimuls
cmp
adc
push
pop
imul
jae
mov
xchg
insb
xchg
xchg
or
inc
lea
xchg
iret
pop
std
ret
or
sti
out
iret
add
sub
sbb
sbbl
mov
jp
push
repnz
or
sub
test
mov
push
xor
xchg
sub
shll
sub
ljmp
ja
or
fbstp
imul
xchg
mov
gs
mov
xor
mov
or
inc
xchg
sub
fcoml
or
jmp
dec
pop
fwait
xchg
aas
jp
imul
xchg
sbb
rorl
movl
mov
clc
mov
imul
icebp
cli
insb
jns
inc
cmpsb
push
add
mov
ljmp
mov
pusha
cmpsl
lcall
xchg
mov
shll
sub
les
mov
add
or
sbb
lea
pop
jns
jmp
lahf
and
jg
lahf
test
popa
jns
aaa
mov
add
pop
xchg
aas
notb
cmp
push
xor
dec
ljmp
mov
add
push
mov
adc
sbb
icebp
pop
in
std
out
lcall
loope,pn
bound
dec
mov
out
adc
insb
leave
mov
xor
cmp
cli
cmp
jne
adc
pop
xor
mov
sarb
ja
lret
mov
fucom
dec
and
mov
aaa
movsl
jno
mov
cmpsb
inc
dec
xor
stc
or
mov
jnp
test
stos
lods
inc
dec
jge
and
inc
and
out
sti
or
std
lret
inc
fmull
js
inc
fs
mov
xor
mov
fnstcw
aad
add
roll
push
insl
or
dec
enter
mov
sub
push
in
sub
leave
dec
es
lods
loop
dec
push
add
push
cmp
inc
bound
push
scas
and
mov
inc
cmp
pop
test
jl
and
jg
xor
in
cld
inc
pop
or
push
xor
pop
cld
sbb
stos
outsb
mov
imul
cmp
shrl
mov
mov
pushf
mov
jmp
cwtl
jge
jecxz
mov
cltd
fcomps
xor
test
scas
out
test
rclb
push
out
repz
dec
cmpsb
dec
call
lahf
dec
or
fwait
lods
sbb
mov
fisubrs
cmp
pop
or
out
sbb
cltd
add
lds
adc
adc
jmp
mov
sub
mov
mov
dec
mov
sarb
cld
clc
rol
jle
mov
sahf
push
mov
cmc
clc
add
inc
imul
stos
ja
fsubs
jg
cmp
pushf
cmc
das
fstpt
mov
arpl
pop
sub
or
inc
cli
add
popf
jecxz
stc
pop
push
std
arpl
xchg
test
call
xchg
mov
inc
sti
cs
outsl
jl
mov
clc
add
jno
data16
inc
fistpl
fwait
jmp
ljmp
push
xlat
adcb
pop
jbe
repz
pop
pop
std
lret
pop
cld
inc
loope
pop
jae
repnz
jl
mov
andl
pop
outsb
negl
xchg
mov
fwait
leave
adc
mov
inc
mov
or
hlt
pop
mov
dec
mov
xchg
and
pop
dec
insb
xchg
sub
aas
sarb
sbb
ja
jle
mov
loope
mov
xlat
dec
int
in
and
clc
dec
roll
ret
shrl
mov
jl
dec
fwait
gs
sub
outsl
push
sar
div
mov
mov
push
cmp
sub
jecxz
js
cmp
mov
mov
lock
lret
mov
in
fsubrs
sbb
jno
lds
lods
mov
pop
test
dec
xchg
push
pop
fsubl
inc
push
pop
xlat
xchg
insb
gs
and
scas
sahf
jb
xchg
idiv
xchg
fstps
scas
sbbl
sub
movsl
mov
ds
adc
or
lea
stc
ja
xlat
ret
jno
loope
mov
mov
mov
in
sub
scas
mov
shl
cmp
es
jns
cmp
sub
dec
jge
test
mov
cltd
inc
movntps
push
xlat
es
inc
test
dec
pop
rolb
adc
daa
sbb
jo
gs
mov
mov
out
addr16
fildll
push
fisttpll
stos
js
mov
fcoml
add
nop
movsb
std
aas
fisubl
inc
testb
cmp
in
push
xchg
sbb
or
adc
lcall
cmpsb
xor
clc
inc
lcall
cmp
add
jns
rep
cmp
ror
fs
popa
iretw
arpl
and
and
sbb
sub
mov
fldl
jo
scas
lcall
pop
pop
jp
or
test
adc
ja
sarl
sub
outsl
push
in
addr16
cmp
pop
movsb
test
or
ret
inc
ss
out
sbb
or
xchg
jno
test
jmp
pop
lret
inc
xor
mov
pop
xchg
mov
dec
adc
jle
dec
stos
jns
das
pushf
rorb
iret
ljmp
shl
leave
cli
jmp
inc
cli
stos
ret
les
int3
xchg
jbe
idivl
mov
sub
ja
dec
loop
pop
jle
and
xchg
sub
adcb
or
lds
adc
xchg
mov
mov
enter
adcl
subl
rcrl
push
nop
jmp
imul
sbb
pushf
inc
dec
dec
sahf
loope
movsl
dec
mov
push
cmpsl
negb
fwait
lret
jne
je
dec
pop
lret
jne
or
mov
lret
jo
jb
insl
xor
imul
jp
fs
mov
in
mov
adc
pop
dec
mov
pusha
or
sub
cmp
push
movsb
cmp
sbb
and
push
add
push
sbb
fbstp
fimuls
mov
popa
add
fmuls
mov
testb
jno
and
mov
xchg
and
divb
adc
mov
cmpb
cmp
or
mov
lock
lret
mov
mov
inc
aas
iret
jbe
sub
cmc
call
cmpsb
out
ss
insl
rcrl
popf
mov
mov
jge
in
xor
dec
push
xlat
std
nop
pop
dec
in
call
mov
and
or
mov
push
dec
aaa
movb
aas
dec
mov
pop
dec
add
fbstp
stos
jno
nop
flds
inc
mov
add
adc
shl
das
insb
mov
std
push
adc
cmp
adc
test
enter
das
lret
push
call
push
dec
aad
lods
lea
add
add
push
jbe
push
daa
mov
or
in
mov
pop
hlt
subb
cmp
addr16
pop
das
cmp
es
hlt
sbb
add
out
mov
push
mov
mov
cmp
and
jno
jge
sti
or
push
pop
xorl
fimull
push
pop
sbb
clc
subl
mov
push
jle
mov
ja
sub
inc
setae
neg
sbb
jb
xor
mov
dec
daa
xchg
lret
cmp
sbb
in
leave
call
scas
insb
jne
mov
push
jge
jle
push
int
push
rcrl
mov
ss
fs
movsb
xor
pop
andb
jb
mov
in
jbe
out
nop
orb
xchg
push
fsubr
fildll
movsl
out
mov
jmp
cmpsl
lret
rorb
inc
aaa
dec
cli
rorb
jb
stc
aad
adc
fsubs
mov
xor
adc
sbb
inc
mov
aad
out
repnz
mov
fmull
gs
outsb
cmpsl
imul
mov
int3
sub
outsl
cmp
loop
scas
pop
xchg
fisubrs
icebp
dec
test
or
insb
push
and
mov
lock
xchg
movsl
popf
mov
cwtl
add
ja
xchg
aas
shrl
ds
mov
test
xchg
ficoml
in
out
mov
mov
rcll
les
fsub
out
in
fmull
nop
cmp
pop
push
out
xchg
scas
sub
jno
int
fcmovu
int
push
xchg
popa
movsb
imul
inc
sbb
xor
and
loope
lods
sub
das
inc
lods
fucomip
add
paddw
in
adc
sbb
test
or
jae
lahf
jno
rclb
mov
adc
xchg
push
mov
negl
lods
mov
push
addr16
test
movsl
sbb
fists
inc
stos
loopew
adc
es
in
in
adc
movsl
or
sub
test
inc
jb
sub
jl
mov
sti
gs
push
add
mov
lret
inc
dec
into
mov
adc
adc
push
addr16
xor
subl
mov
xor
subl
fdivrs
scas
push
les
xor
push
daa
xchg
scas
or
dec
out
sti
loop
xlat
lods
push
testb
and
cwtl
jmp
rorl
mov
movsb
and
insl
sbb
xchg
rcrb
fldt
lcall
test
xchg
jg
pop
pmuludq
mov
je
ja
dec
sub
and
pop
sbb
hlt
jnp
cmpsl
fwait
pop
pop
imul
stos
inc
lds
mov
popf
loopne
test
push
cmp
repz
ss
or
rcrb
andb
das
xchg
adc
movsb
cmp
cmpsb
addr16
push
cmp
dec
idivl
aad
push
pop
outsl
push
jne
push
jle
adc
int
fwait
push
jg
pop
mov
mov
push
loop
fldl
jp
std
scas
mov
mov
push
fdivl
sar
adc
fstpt
cmp
or
mov
pop
push
or
sbb
scas
or
jecxz
movsb
add
hlt
pop
add
outsb
xchg
in
and
sbb
xchg
xchg
mov
nop
cmp
fidivl
jns
arpl
test
mov
mov
xchg
mov
sarl
lret
bound
adc
mov
aaa
xorl
sti
jno
adc
mov
test
jne
dec
xchg
pop
outsb
stos
or
imul
aas
mov
pop
sub
pop
lcall
lahf
jp
nop
cmpsl
jnp
xor
mov
lret
mov
test
cs
loope
mov
rorl
push
sahf
sub
fnstcw
xor
xor
out
fwait
jb
out
dec
cmp
ljmp
jne
jnp
jmp
sub
dec
xlat
xor
call
nop
popa
sub
mov
jge
sbb
mov
jns
stc
outsb
inc
sbb
call
ja
cmpsb
xchg
mov
jp
mov
enter
jno
mov
jb
jge
jns
lret
enter
jecxz
xchg
enter
xchg
stc
sbb
fdivrs
adc
mov
sub
xchg
push
dec
push
hlt
mov
out
mov
fsubrl
cmp
jne
jmp
lock
or
jbe
xor
mov
in
add
adc
es
test
push
stc
pushf
icebp
fmull
lods
pushf
call
ret
into
imul
dec
out
cmp
jg
inc
fs
sbb
mov
pop
add
and
lods
jle
or
xchg
dec
jae
les
int
inc
and
fsubl
test
imul
and
xchg
and
popa
push
mov
out
fcmovnu
in
lods
sub
cmp
mov
popa
pop
push
roll
jo
js
cmp
orl
fs
pusha
cwtl
ja
jae
icebp
int3
xchg
adc
jmp
in
testl
xchg
dec
mov
pop
pusha
xchg
mov
mov
mov
add
pop
pop
imul
mov
lahf
scas
adc
in
movsb
push
in
push
adc
add
sbb
lock
ret
jecxz
shrb
popa
int3
and
cli
insb
add
or
sahf
lahf
rol
push
sahf
mov
fucomp
mov
outsl
inc
and
xor
mov
enter
aam
pop
flds
sahf
sub
sub
push
lahf
shrl
insl
dec
and
sub
push
nop
ret
mov
push
fisttpl
mov
ss
dec
pop
cmpl
inc
jmp
out
ljmp
lock
ds
pop
sti
inc
cwtl
int
or
inc
sub
test
mov
ficomps
sub
xchg
xchg
daa
pop
testl
mov
lods
xor
mov
mov
xlat
sbb
call
fbstp
and
adc
adc
lret
xchg
lcall
enter
fsubl
lods
scas
xchg
or
dec
jno
adc
call
loope
arpl
fucomp
into
call
cmpsl
cmp
clc
outsb
and
xchg
nop
mov
add
loop
insb
xchg
loope
and
out
push
decl
imul
cwtl
addb
sbb
push
xor
movl
loopne
and
adc
outsb
pop
stos
push
mov
popf
out
jnp
in
lock
xchg
call
sti
or
sti
xor
insl
faddp
inc
push
adc
hlt
movsb
add
enter
fimuls
fs
nop
js
nop
mov
pop
mov
scas
or
pop
clc
dec
imul
stc
and
and
xchg
rorl
nop
xchg
push
pop
in
sbb
test
push
jnp
mov
hlt
xor
mov
lret
adc
lahf
imul
movsl
jmp
mov
mov
mov
fwait
inc
inc
aam
pop
push
mov
iret
jmp
pushf
sahf
or
pop
inc
sub
out
mov
fsubrp
cs
movsl
push
jecxz
scas
imul
cmp
mov
in
pusha
out
scas
arpl
add
insl
repz
aam
loop
sbb
jecxz
stc
xchg
cs
and
lods
cli
or
fs
sarb
jmp
cld
cmp
sub
xor
stos
jg
push
ror
out
xchg
adc
stos
test
ret
lods
repz
aam
pusha
mov
cltd
insl
mov
sbb
dec
jecxz
mov
xor
jne
lcall
sti
pop
out
cmc
cmc
sbb
and
mov
mov
push
mov
pop
sbb
pop
jmp
sbb
pushf
jb
ret
cltd
stos
push
ret
popf
test
mov
pop
faddl
or
popa
and
xor
xor
fnstcw
aas
or
jg
sub
pop
in
adc
ficomps
push
cli
shrl
inc
push
js
pop
vcvtss2sd
stos
scas
sub
pop
xlat
rolb
push
mov
and
faddl
sub
add
inc
fbld
and
outsl
iret
sti
mov
or
push
lds
out
dec
pop
dec
inc
fdivl
xchg
sarb
fnstenv
aad
fs
sbb
and
in
test
rclb
xchg
sub
adc
fldenv
push
out
repnz
je
pop
lds
in
data16
adc
orb
call
xchg
lock
sti
xor
xor
int
cltd
dec
inc
lcall
fidivs
loop
xchg
in
out
push
fwait
adc
ret
dec
push
data16
loopne
mov
into
mov
pushl
in
dec
sbb
test
and
gs
xor
xor
push
testb
push
pop
dec
mov
mov
jmp
test
jmp
in
outsb
xchg
inc
inc
mov
jne
dec
xchg
push
leave
mov
fsub
dec
dec
xchg
and
add
jmp
push
pop
out
jge
out
jne
jb
imul
mov
setno
jns
mov
jo
int3
idiv
sbb
ret
hlt
adc
hlt
aaa
fsubl
xchg
aam
sahf
pushf
lods
into
repnz
and
rorl
addl
cltd
push
das
mov
sub
lea
fdivrp
jmp
fstpl
sub
ja
mov
mov
cmp
rorl
mov
test
push
pusha
test
out
cmpsb
adc
lods
test
mov
popf
das
fld
mov
ffreep
mov
aaa
inc
sub
sub
pushf
enter
cmpsb
jmp
aam
push
fldenv
inc
jo
movsb
jp
mov
xlat
ret
lret
int
or
push
cmp
push
mov
sbb
inc
dec
cmp
mov
mov
jge
inc
leave
or
cmp
fldcw
pop
sti
xchg
outsl
push
mov
pop
xor
ss
cmpsl
ror
fistpll
shr
mov
out
jp
jg
sub
inc
out
push
outsb
xor
cmpsb
mov
out
in
mov
cmp
outsb
dec
pop
add
int
mov
fwait
rorl
jns
out
cwtl
sbb
sbb
pop
ja
mov
mov
jns
jns
push
adc
inc
push
mov
adc
sbb
or
and
and
add
arpl
push
andl
cmp
hlt
repz
jge
mov
shll
out
aas
xchg
push
pop
ret
and
mov
clc
mov
dec
clc
ret
push
stos
mov
dec
sbb
loop
adc
mov
sbbb
jnp
push
jge
adc
sbb
scas
push
jno
dec
xchg
and
addr16
adc
pop
mov
mov
icebp
pop
pop
pusha
inc
sbb
subb
out
xchg
shl
jo
xor
adc
enter
iret
jl
cltd
inc
jbe
mov
push
mov
or
cwtl
push
arpl
inc
aad
add
or
pop
dec
ret
fisubrs
ja
add
fnstcw
in
std
or
repz
push
push
and
mov
mov
ret
fldenv
outsb
hlt
hlt
dec
outsl
into
stc
aam
popf
sub
repnz
shlb
push
sub
mov
jns
pop
les
cmc
inc
mov
pop
dec
int3
xlat
int3
sbb
jl
movsb
mov
repz
fistpll
mov
out
test
movsb
test
jb
js
cmp
cmp
repz
cmp
mov
jmp
pop
aad
and
lods
push
xchg
mov
sbb
outsb
fidivl
jne
int
gs
xchg
ret
adc
mov
wbinvd
adc
into
adc
mov
mov
out
leave
and
dec
pop
sar
sbb
arpl
mov
add
test
fistps
add
adc
xor
mov
test
popf
adc
mov
or
add
lret
cmp
gs
fldt
repnz
test
adc
in
pop
loope
nop
in
adc
in
cs
sub
cltd
push
mov
jecxz
fildll
push
sahf
fldl
xor
loopne
add
mov
pop
push
mov
mov
inc
cmpsl
sbb
mov
or
insl
adc
movsb
mov
jge
scas
gs
xchg
loop
jae
lahf
xor
ret
clc
outsb
or
mov
enter
ljmp
and
lea
je
add
nop
sbb
out
sbb
mov
cmp
jae
aam
mov
lret
dec
ljmp
pushf
jns
sub
pop
stos
inc
xchg
adc
cmp
into
jb
rol
mov
pop
es
add
ret
jge
push
push
pop
cmpsb
add
imulb
mov
push
pop
inc
clc
shl
shlb
out
jno
imul
mov
mov
stos
das
inc
push
pop
popf
pop
or
sbb
stos
push
scas
loope
out
rcll
mov
sti
sub
imul
sbb
pop
xor
xchg
je
jle
icebp
cmpsb
stos
ds
pusha
inc
call
movsl
hlt
repz
pop
cld
imul
clc
jge
pop
sbb
add
dec
cld
aaa
xchg
jecxz
pop
mov
pushf
out
dec
pushf
fwait
or
sbb
mov
mov
jmp
test
or
or
or
and
ja
and
int3
mov
and
mov
push
mulb
cmp
pop
adcb
stos
ffree
insl
push
push
scas
arpl
sub
mov
scas
inc
out
adc
out
add
jb
inc
popa
or
outsl
imul
bound
dec
sbb
stc
xchg
or
test
lds
repnz
mov
in
jmp
sbb
jmp
scas
xor
mov
inc
rorb
pop
shll
push
aad
cmp
imul
aas
and
aad
mov
cmpsl
lods
cmp
cld
lock
jecxz
in
cmp
pop
jg
iret
xor
push
sti
pop
cmp
stos
jb
sub
jo
or
mov
mov
and
idivl
or
dec
mov
push
sbb
cmp
sbb
xor
mov
ret
or
mov
or
inc
jbe
andl
pop
pop
ret
mov
insl
pop
clc
addr16
mov
and
in
xchg
mov
cmp
sahf
ss
xor
rep
rorb
stc
int
or
xchg
xor
dec
mov
std
cmp
dec
dec
in
idiv
addl
jl
out
xor
icebp
xchg
movsl
popf
xor
sub
lods
out
icebp
cmp
in
loope
push
sbb
pop
movsl
sub
inc
cltd
push
jno
movsl
xchg
dec
xor
jmp
xchg
sub
lea
stos
leave
mov
jg
stos
xor
movsb
jmp
fdivr
xor
pop
push
mov
fcomp
out
mov
sbb
bound
dec
cmpsb
sub
rcll
out
rcr
jno
xor
mov
mov
std
in
stc
pop
push
outsb
cmp
aam
jl
mov
int
call
sub
cmp
push
mov
gs
in
lods
inc
cmp
jne
es
pop
or
addb
and
xchg
or
inc
sbb
xor
dec
rorl
jecxz
adc
enter
xor
mov
dec
ds
and
rorb
imul
push
adc
xchg
sub
mov
cltd
mov
aad
xor
popl
and
popf
ds
sbb
test
int
add
push
hlt
dec
popa
enter
or
lods
sbb
adc
nop
or
mov
add
cmp
popa
shll
mov
test
xlat
js
insb
fs
dec
dec
fsubs
adc
mov
lods
adc
stc
sbb
dec
negb
push
flds
std
adc
mov
lock
ss
enter
mov
fadds
jp
adc
jp
xchg
add
movsb
mov
lcall
jmp
jmp
or
addr16
movl
enter
pushf
xchg
fidivl
mov
out
jl
sbb
outsb
rdtsc
jg
out
dec
cltd
add
sub
leave
or
dec
mov
cmp
adc
fistpll
fsub
and
mov
out
orl
js
adc
adc
dec
test
xor
mov
bound
pop
and
mov
es
inc
pop
dec
or
aas
jl
or
je
dec
imul
enter
ljmp
push
pop
rclb
pusha
xchg
jmp
sub
pop
scas
inc
xchg
bound
xor
mov
inc
dec
sub
cmpsl
and
dec
lods
fidivrl
fadds
inc
sbb
adc
movups
xor
mov
or
sahf
push
mov
shlb
outsl
cmpl
out
or
pop
enter
cmpsl
sbb
shl
addl
and
cli
pop
jge
imul
insb
or
mov
add
out
mov
fldt
iret
stc
push
mov
xchg
pop
int
sti
pop
xor
clc
shr
fcmovne
xor
int3
aas
xorl
push
pop
dec
push
mov
sti
adc
inc
dec
data16
clc
repz
dec
cmpsl
mov
jl
xchg
loope
mov
orb
xchg
hlt
fs
daa
jmp
mov
cmc
push
pusha
lods
mov
add
aas
test
das
shrl
aad
mov
sarl
inc
inc
push
punpckldq
in
push
enter
repnz
popa
ret
add
sub
clc
mov
scas
lret
js
push
ror
leave
lods
inc
mov
pop
and
sti
mov
mov
mov
adc
dec
enter
shrb
loopne
outsb
add
xlat
fs
mov
fistpl
add
mov
popf
inc
jo
pop
fimuls
int
sbb
sti
or
ss
cli
cmp
xor
je
cmpsb
jo
ljmp
cmpsl
fisubs
sub
push
in
enter
or
mov
out
ja
insl
push
dec
insl
fisubl
push
adc
sti
xchg
pop
or
repz
outsl
testl
shrl
lret
sbb
cmp
xchg
dec
xchg
pop
and
mov
xor
popf
jbe
movsbl
or
or
insb
lret
ja
or
or
fistpl
inc
stos
dec
dec
fdivrs
mov
push
mov
dec
ret
sub
sub
and
jno
imul
js
fdivrs
and
and
lock
test
shll
jge
xchg
mov
rorb
push
mov
call
subb
xchg
out
push
js
sbb
hlt
mov
ret
bound
xor
dec
jp
loopne
jle
out
shlb
pop
popa
aaa
outsl
les
mov
push
sub
sahf
jbe
pop
cmp
and
into
out
ja
pushf
jns
pop
adc
xchg
pop
loopne
rcrb
xchg
lock
gs
xchg
lea
jno
imul
in
shrb
pop
jbe
idivl
mov
sbb
jl
dec
imul
pop
dec
and
jmp
mov
pop
int3
or
pop
xchg
inc
outsb
jg,pn
outsb
push
lret
jb
cmpsl
mov
push
push
sbbl
div
sbb
and
shlb
jl
and
cmc
int
aad
jb
dec
mov
xor
or
mov
mov
scas
mov
jnp
mov
pop
insl
mov
pop
push
mov
xchg
mov
popf
ljmp
mov
in
mov
lret
sub
sub
cmp
gs
mov
sub
mov
mov
jne
mov
stc
movq
inc
aad
insl
dec
enter
xchg
or
mov
je
jg
sbb
cmc
add
outsl
mov
jno
fistps
mov
jb
push
push
pop
mull
addr16
or
dec
shll
sub
mov
jo
daa
scas
fwait
sub
mov
push
lahf
js
int
ds
mov
push
es
and
popf
movaps
mov
aam
orl
jno
clc
arpl
and
xor
popa
jmp
frstor
rorb
aad
mov
gs
cli
push
inc
xchg
aaa
jl
lods
or
in
fwait
mov
mov
popf
js
xor
inc
test
jmp
fucomp
ficoml
imul
pop
insl
popf
fadds
fistpl
xchg
loopne
ss
sbb
das
mov
adc
pop
jbe
lret
test
ja
ja
xor
int3
mov
call
in
push
js
and
daa
ljmp
cli
sub
jmp
and
pop
or
pop
cmp
inc
and
or
sbb
insb
stos
push
or
push
sbb
mov
push
pop
loope
shll
sbb
xchg
insl
cmpsb
out
sub
loop,pt
shlb
push
sbb
test
dec
mov
out
lret
xchg
stos
mov
pop
mov
or
pop
repnz
lods
stos
ljmp
in
les
cld
push
inc
push
add
sbb
mov
rclb
mov
mov
int3
inc
pop
lret
push
dec
cmp
pop
shrl
push
mov
cmpsb
cmpsb
adc
mov
or
cld
xor
sub
xorl
jno
push
lods
popf
hlt
cmp
test
mov
pop
pop
popa
sub
arpl
push
and
xor
clc
loope
jp
or
cmpsb
fs
fisubrs
pop
mov
ds
jno
fwait
lret
addr16
pop
jae,pt
push
aad
cli
pop
add
lret
and
cltd
cmp
sub
sahf
or
xchg
and
mov
imul
stc
push
mov
mov
add
mov
testb
cmpsb
jns
and
add
and
or
mov
lds
lret
lret
insl
ds
jb
ss
out
scas
leave
sbb
mov
loop
fcom
aas
mov
jmp
rorl
jmp
jg
or
cmp
and
mov
inc
cs
sbb
adc
sub
jmp
lods
jge
inc
subb
sahf
rclb
xchg
cltd
icebp
leave
push
jnp
leave
push
mov
call
ja
daa
pop
insb
xlat
fdivs
xchg
dec
nop
inc
push
repz
mov
insb
cltd
test
mov
inc
sub
lds
add
and
mov
call
mov
loopne
push
shlb
push
sub
lock
add
sbb
int
jp
hlt
adc
enter
sbb
sub
and
popf
cmp
punpcklwd
cmp
shll
insl
xchg
mov
mov
xlat
test
js
fucomi
pop
adc
lds
aad
les
xor
outsl
sbb
xchg
lods
jle
mov
aad
les
adc
pop
mov
push
xchg
cwtl
dec
ja
mov
cmp
pop
arpl
pusha
inc
push
jp
mov
sbb
dec
inc
dec
dec
and
push
sbb
stos
fdivl
dec
dec
xchg
ja
add
insl
xor
push
push
sbb
lods
dec
jo
xchg
pop
mov
jnp
inc
jl
sub
cmp
xchg
jbe
jp
dec
lods
adc
push
je
sahf
push
fsubr
mov
clc
je
stc
add
push
mov
mov
rorl
cmp
sub
pop
test
ja
lods
or
jae
into
dec
add
sti
imul
mov
mov
push
sti
popf
cmp
or
xor
decb
es
push
outsb
shl
stos
jecxz
sub
sub
xor
fs
insl
and
daa
mov
jecxz
sbb
std
ret
push
std
push
mov
icebp
subl
das
jl
les
cmp
cmovp
jae
scas
daa
in
push
sarl
stos
inc
idivb
adc
push
imul
mov
inc
dec
push
push
ljmp
out
sbb
jno
xchg
add
mov
cmp
in
cmp
xchg
mov
and
std
jge
push
mov
sub
dec
test
sub
jb
stc
sbb
iret
sbb
push
insb
mov
ds
dec
lock
xchg
outsl
push
push
push
adc
dec
fstpt
fs
gs
adc
test
cs
jmp
out
fisubs
cmpb
filds
je
xor
ret
mov
mov
xchg
loop,pn
cmp
adc
lret
pop
cld
flds
and
gs
add
fadd
and
in
into
bound
leave
fwait
in
decb
cwtl
jae
and
pop
test
fsubrs
xchg
lock
cld
nop
lods
jmp
or
int3
pop
test
shlb
mov
daa
std
cmp
mov
stos
hlt
xchg
adc
mov
jg
add
mov
fs
cmc
test
lods
xor
hlt
and
outsb
pop
push
add
inc
insb
clc
ss
pop
enter
cmp
sub
xchg
cmp
aam
jp
repnz
ds
lahf
hlt
xor
jmp
dec
add
scas
roll
mov
push
inc
addr16
add
inc
adc
pop
add
jbe
cmp
cmc
out
fwait
loopne
xchg
ficoml
data16
in
inc
push
cld
inc
lea
pop
pop
sub
rcll
pushf
jge
sbb
and
insb
jmp
inc
jae
mov
sub
daa
or
xor
data16
scas
mov
adc
rcrl
aas
ljmp
sbb
insl
push
lds
jle
popf
cmp
dec
mov
jo
loopne
and
sbb
cmp
les
fs
shll
lock
in
test
popf
int
xlat
dec
and
xorb
sar
mov
popa
dec
lret
popa
dec
pop
inc
int
or
mov
dec
mov
les
sub
mov
mov
push
mov
fiadds
xor
xor
ret
in
std
mov
bnd
dec
icebp
and
mov
or
leave
jle
or
jnp
sub
push
xchg
jp
or
loop
cwtl
or
inc
mov
xchg
fs
shrl
arpl
adc
jbe
xor
dec
fsubs
fs
mov
lds
push
adc
xchg
mov
mov
fwait
stos
sub
cltd
sbb
push
jle
adc
xor
pop
out
movsb
jbe
cmp
data16
jp
cwtl
jne
popf
in
insb
data16
aam
xchg
lods
out
push
cmpsb
addb
gs
mov
push
inc
sbb
pop
jl
fs
mov
stos
xchg
rcrb
loop
push
ds
ss
jb
adc
lahf
movsl
insb
mov
cmpsl
cwtl
ficompl
mov
fldenv
call
mov
jbe,pn
inc
jo
jp
call
out
aaa
shrl
pop
rcrb
cmp
xor
icebp
mov
cltd
pop
sbb
mov
fisttps
pop
enter
sti
dec
fcmovbe
shlb
push
fstpl
cmp
push
aam
out
out
pop
jl
sub
test
iret
xchg
jae
sarb
loope
aam
std
jnp
dec
sahf
mov
and
push
mov
mov
dec
lret
test
ss
call
mov
iret
mov
push
xchg
shll
or
test
jno
lret
jae
xchg
dec
xor
mov
jbe
xchg
adc
xchg
test
jl
adc
push
cwtl
add
in
mov
sbb
movsb
in
js
inc
popa
and
mov
mov
cmp
in
xchg
jae
cmp
or
enter
cs
repnz
lds
xchg
xchg
add
sub
fs
xchg
adc
pop
data16
in
jnp
mov
das
inc
jl
insb
dec
lret
pop
xor
or
gs
stc
std
xor
jbe
or
divps
cmpsb
iret
into
rorb
mov
push
stos
enter
addr16
push
jns
enter
jmp
imul
pop
mov
inc
jl
das
push
push
sbb
xor
jns
pop
mov
and
jg
nop
mov
pusha
fdivrs
inc
scas
jecxz
or
push
push
mov
dec
pop
mov
jns
sub
les
enter
cmpsb
lcall
jl
int3
add
cs
rclb
add
push
jecxz
cmpsb
dec
mov
dec
push
hlt
loop
push
dec
xchg
inc
cmpsl
fs
adc
enter
or
push
xchg
aad
pop
gs
jne
cmp
mov
stos
jle
bound
mov
pop
mov
test
add
mov
xlat
push
stos
cmc
sbb
sbb
mov
movsb
sub
sbb
inc
pushf
mov
aaa
fistpll
mov
add
add
aad
popa
insl
aad
xor
cld
mov
pop
gs
xor
jno
cmp
repnz
aad
sbb
les
lcall
adc
jl
push
cmp
lods
mov
out
adc
not
mov
aam
nop
sbb
cmp
push
cmc
ja
jp
cmpsb
shrb
cwtl
scas
push
inc
inc
ret
mov
jnp
cmp
add
pop
lods
jno
pop
jg
cmp
nop
mov
daa
lea
jecxz
jnp
mov
sub
sbb
xor
jp
jge
out
je
or
std
in
mov
int3
and
mov
rclb
movsl
daa
push
and
in
in
sub
push
mov
lcall
push
pop
or
xor
add
mov
int
stos
jb
mov
test
mov
rorl
stc
push
loop
add
sti
inc
mov
icebp
push
out
test
mov
and
out
push
adc
icebp
movsb
fisubl
out
data16
into
mov
sbb
fwait
mov
movsb
popf
push
popf
ljmp
mov
ja
adc
xchg
xor
addl
fstp
adc
push
test
mov
cwtl
aam
jge
mov
js
cmp
dec
jle
mov
aam
mov
dec
das
cs
adc
shrb
in
rcr
insb
dec
push
sti
mov
addr16
jae
ret
add
repz
js
ret
arpl
lret
fbld
pop
loopne
lahf
test
divb
and
in
mov
stc
data16
test
arpl
sub
hlt
or
xor
mov
jb
imul
insb
jecxz
inc
sbb
add
cltd
in
pop
sbb
roll
lcall
hlt
or
pusha
cltd
das
lods
or
jg
jecxz
ret
sub
cs
stos
sti
xor
and
jp
shlb
pop
push
pop
xchg
test
fwait
and
jg
push
sahf
shl
xchg
outsb
movsl
sbb
js
cmpsb
push
xchg
lret
jae
js
lret
jns
sub
jmp
xlat
fmull
fsts
pushf
sbb
adc
int
mov
js
push
lcall
mov
clc
repz
mov
dec
leave
mov
mov
dec
sbb
movsb
cmc
mov
adc
mov
test
mov
and
sub
lret
decl
push
lods
jmp
sub
jp
jl
and
idivl
mov
js
push
into
and
inc
pop
sbb
sub
scas
in
loop
mov
dec
push
in
mov
mov
fidivrs
sbb
test
aaa
push
sti
mov
stos
movsb
xorb
push
add
adc
cmp
xchg
leave
mov
dec
push
lret
clc
or
mov
clc
xor
insl
sbb
into
gs
mov
sbb
dec
or
insb
add
and
cs
inc
es
fcoms
stos
fidivs
test
imulb
test
in
gs
lahf
rol
call
out
fldl
jge
lea
shlb
fistl
ljmp
pop
orb
stos
fdivp
mov
jns
outsl
inc
push
jge
arpl
dec
fistl
jnp
sbbb
jbe
scas
mov
mov
sub
lea
out
call
fbld
and
cmp
mov
mov
xor
outsl
jp
inc
sub
aaa
add
test
pushf
mov
mov
and
mov
xchg
test
dec
xchg
pop
xchg
push
jmp
cmp
or
mov
scas
call
stos
sbb
xor
dec
cmp
ja
movsl
sbb
fildll
ljmp
jnp
or
xlat
adc
imul
loopne
test
cmp
lds
and
cmpb
movl
sbb
push
xchg
into
cmp
lods
movsl
loope
xor
ss
lretw
cmc
mov
cli
pushf
and
jnp
xchg
fldlg2
ds
dec
cltd
stos
rclb
cmp
inc
mov
test
popa
lret
ss
xor
cwtl
and
mov
pop
sti
mov
fstl
inc
imul
shr
outsb
push
test
ret
xor
add
fldenv
dec
fidivrs
push
and
repz
insl
mov
mov
jle
mov
js
mov
hlt
sbb
inc
lock
cmc
jle
fcompl
lds
movsb
int
cli
inc
mov
stos
loopne
mov
js
push
sub
test
mov
adc
les
or
scas
out
sbb
push
iret
xor
shlb
xchg
out
clc
mov
into
add
cli
insl
sbb
cmp
outsb
rcrl
sbb
out
xchg
cli
sbb
inc
jge
jmp
aam
sahf
xchg
fsts
fildl
daa
es
jns
push
xor
or
fs
lods
pop
lods
data16
push
lahf
jmp
cmpsb
or
ds
sbb
jnp
test
mov
loopne
mov
js
sbb
dec
add
in
jbe
fsts
out
outsb
push
or
decb
mov
pop
and
psrlq
sti
fsubs
out
or
pusha
lret
clc
dec
jno
mov
imul
mov
aam
cmp
fiadds
xlat
fldcw
push
cld
sbb
imul
sbb
adc
fcmovb
push
xchg
mov
adc
nop
xacquire
pop
cmpb
inc
pop
stos
cmc
fbld
out
movsl
ja
jbe
pop
adc
aas
mulb
mov
scas
xor
lret
inc
repnz
negb
js
aas
lods
imul
push
bound
mov
call
mov
clc
or
cs
cmp
xchg
enter
cmp
dec
ret
loop
lret
test
xchg
mov
cs
int3
inc
pop
add
inc
mov
sbb
adc
leave
orb
movsl
sbb
cld
jmp
idivl
xchg
pop
scas
imul
mov
nop
mov
sbb
lods
push
push
xchg
ja
push
xchg
enter
xchg
xchg
in
and
mov
arpl
add
ja
push
in
jnp
and
xor
and
testl
arpl
or
popa
es
popa
data16
or
push
cmp
cmp
outsl
pop
adc
ljmp
sub
mov
lret
push
data16
into
mov
push
xchg
push
mov
jae
push
and
mov
cmpsb
iret
xorb
dec
shrl
pop
jmp
in
or
sbb
xchg
cwtl
popa
xchg
or
nop
jmp
loopne
inc
mov
xchg
push
outsl
lahf
push
lret
and
nop
push
push
jg
mov
xchg
sahf
sub
ljmp
push
movsl
mov
jge
or
lods
adc
fsubrl
fwait
push
repnz
cmp
daa
out
into
cs
mov
jb
lds
or
mov
leave
jbe
push
mov
scas
inc
mov
std
xchg
dec
jae
and
imul
mov
mov
inc
mov
cmp
mov
mov
inc
sub
mov
cld
sub
mov
bound
and
mov
dec
addr16
outsb
xchg
dec
lret
jmp
mov
push
and
pop
mov
mov
dec
or
and
lcall
sbb
pop
jle
pusha
lcall
xchg
hlt
pop
xorb
lds
movsl
inc
pop
pop
int
jle
enter
leave
sub
orb
jne
or
cmc
call
mov
divb
lret
dec
popa
into
mov
cwtl
stos
inc
cli
out
xchg
push
scas
lods
rorl
clc
push
inc
in
adcb
inc
mov
nop
xorb
jnp
and
daa
push
add
inc
loope
adc
pop
orl
cmpsl
clc
faddl
inc
rolb
sti
sbb
sbb
push
mov
jg
xlat
and
xchg
shlb
mov
imul
jne
or
fiaddl
jo
cmpb
sti
aam
mov
jle
aaa
fistpl
dec
insl
call
aad
lcall
enter
sub
pop
sub
add
es
repnz
leave
jp
adcl
aas
js
xchg
adc
insb
aam
nop
dec
mov
arpl
scas
outsl
mov
xor
mov
filds
mov
xchg
and
adc
jns
inc
add
inc
gs
mov
int3
cmc
add
aad
fidivs
xchg
mov
fstl
mov
dec
adc
mov
imul
and
or
or
arpl
mov
cld
cmp
mov
sbb
mov
mov
in
ret
stc
push
inc
sbb
test
loopne
mov
fnstcw
inc
repnz
xchg
xchg
icebp
lds
cld
and
sub
or
jecxz
loop
shll
mov
imul
push
jbe
aad
xor
jmp
mov
or
dec
pop
xchg
xchg
fwait
jbe
jle
add
outsl
sbb
push
jne
pop
lcall
mov
fdivrs
icebp
mov
or
imul
add
cmp
pop
mov
sbb
jnp
stc
mov
jecxz
hlt
pop
bound
xor
ret
in
inc
cmp
jg
mov
add
orb
outsl
lea
and
bound
add
sub
push
xlat
and
xchg
out
repnz
test
loopne
xchg
iret
dec
insb
mov
leave
stos
mov
dec
pop
sti
pop
aas
mov
mov
pop
sub
or
pushf
xlat
push
push
and
insl
mov
jle
pop
sub
arpl
push
mov
mov
cli
mov
gs
adc
outsl
or
fwait
and
out
xchg
push
sub
mov
sub
xchg
mov
stos
jle
and
xchg
cmc
cld
movntq
outsb
incb
dec
jnp
push
xor
shlb
inc
mov
arpl
jmp
mov
je
imul
xlat
or
hlt
push
dec
jbe
mov
shl
lea
clc
mov
add
adc
and
sub
aam
xchg
cmpsl
xchg
dec
cmp
sub
aas
hlt
mov
fistl
outsl
aaa
arpl
faddl
cmp
sub
test
fs
shlb
xor
movsb
scas
nop
inc
pop
rcrl
push
sub
cs
and
data16
dec
hlt
in
ds
insl
ret
or
jge
test
test
lea
dec
push
jnp
push
dec
inc
cmp
mov
popf
sbb
push
les
outsl
flds
mov
lret
push
sub
and
mov
testb
sbbl
les
inc
pop
push
jnp
loop
xor
mov
inc
pop
addr16
cwtl
mov
add
inc
daa
movl
rorl
cmp
out
pop
mov
jns
pushf
in
add
es
or
mov
mov
xchg
lock
das
sbb
mov
fistps
bnd
cmp
std
into
insl
fcomi
lds
pop
rorl
addr16
xchg
pop
lods
mov
fdivs
aaa
fistpl
xor
or
mov
jmp
into
cmp
xor
loope
test
or
dec
jo
add
pop
push
adc
adc
sub
adc
ljmp
fiaddl
pusha
jmp
cmp
inc
inc
pop
ror
mov
dec
mov
data16
push
xchg
test
and
fstl
das
ss
lgs
pop
ljmp
sbb
incl
stos
mov
outsb
dec
scas
addr16
aam
ljmp
ja
push
push
lods
mov
and
test
cmp
es
mov
xchg
or
xor
cmp
and
adc
inc
leave
lock
and
jmp
cmp
sub
mov
lret
shll
jmp
out
mov
shlb
mov
mov
pop
bnd
add
lods
sbb
ja
jae
cmp
inc
jo
mov
stc
push
repnz
aaa
stos
xchg
sub
push
mov
sub
in
cmp
mov
test
pop
out
mov
mov
or
lcall
mov
call
loope
jmp
bnd
leave
ss
dec
and
das
mov
mov
std
shlb
jnp
or
movsb
addr16
enter
cmp
sub
add
insl
xor
jl
or
or
aad
popa
jb
je
pop
push
popf
andl
xchg
stc
insl
lahf
pop
test
je
out
sbb
cmc
dec
push
or
out
shrb
out
sarl
sahf
icebp
aam
mov
cmp
lods
pop
sbb
fidivl
mov
jo
mov
dec
out
add
jae
out
sahf
sub
xor
filds
jmp
pushf
pop
lahf
sbb
aaa
pop
stos
ljmp
fcomi
inc
ret
push
mov
test
popa
mov
sbb
aas
leave
and
jb
xor
and
xor
adc
sbb
fildll
xor
imul
inc
shl
out
scas
dec
mov
inc
shlb
xor
mov
je
lea
clc
fs
pop
xor
xlat
out
dec
jl
mov
xchg
xor
or
jne
nop
sbb
into
movsb
test
ret
ret
sub
cld
add
xor
push
xor
add
pop
loopne
cmp
jge
fidivrl
das
cmp
inc
sti
mov
xchg
jae
pusha
inc
sub
jns
nop
stos
jno
xor
adc
movsb
mov
xchg
shll
pushf
push
cmp
imul
lds
jg
push
leave
lcall
adc
into
daa
mov
js
mov
mov
xchg
fwait
sub
jecxz
jbe
into
mov
mov
mov
mov
repz
sub
fnstenv
push
mov
push
dec
dec
loopne
clc
dec
fistpll
les
jb
addl
shll
movsb
lcall
jl
sbb
out
mov
or
xchg
push
lret
adc
test
mov
push
inc
adc
stos
mov
mov
cmpsb
add
inc
cmp
inc
lret
out
inc
xchg
sub
jno
imul
and
out
jns
sub
mov
jg
scas
xchg
ficomps
jb
dec
ficoml
ja
cli
pop
or
push
aam
sub
push
les
gs
inc
lret
lods
insl
loop
cli
or
int3
mov
jbe
jno
mov
mov
dec
insb
fdivrs
insl
dec
cmp
hlt
jo
mov
popa
add
inc
hlt
and
xchg
test
cmp
xchg
andl
and
mov
xor
xchg
test
mov
adc
add
xchg
pop
aad
push
dec
cmp
and
jno
add
sbb
adc
sbb
gs
in
push
pop
lahf
adcl
xchg
push
shll
dec
in
movsb
cmp
mov
test
xchg
lcall
lret
mov
les
in
sub
dec
fidivs
data16
dec
sbb
add
push
leave
ljmp
insl
daa
out
mov
xchg
into
jge
mov
fcompl
aas
sbb
out
sbb
mov
and
into
pop
sub
int
cmp
push
cs
adc
nop
mov
xorb
xchg
sub
shlb
add
jns
ja
cmp
xchg
or
std
clc
stc
aas
jmp
lods
js
cmp
mov
and
call
loope
gs
inc
mov
push
sub
jnp
movsl
popa
ret
push
mov
lahf
sti
outsl
cwtl
add
loop
jns
in
mov
add
daa
mov
or
cmp
pop
pop
faddp
jo
xor
sbbb
push
scas
pop
add
pop
stos
mov
sub
cmpsl
sbb
rclb
push
or
mov
jnp
shlb
out
arpl
or
or
pop
pop
cmp
pop
shll
jmp
ljmp
sbb
ret
std
cmp
push
add
inc
std
cmp
mov
in
pop
imul
pop
jg
div
cmp
test
or
shll
mov
decl
les
cmp
xchg
fsubs
pop
aas
mov
dec
and
sub
push
das
sbb
xchg
outsl
adc
add
pop
bts
adc
lds
into
mov
outsl
mov
outsb
inc
sti
das
xor
push
xor
enter
into
jae
mov
xchg
cmp
sbb
les
sarl
mov
xor
inc
movsl
out
repnz
out
in
inc
push
xor
cltd
dec
arpl
outsl
inc
push
mov
xor
lods
push
pop
data16
flds
push
inc
mov
jecxz
xchg
or
ljmp
mov
dec
scas
add
inc
cmp
movsb
inc
push
push
or
pop
insl
pop
adc
repz
push
mov
add
lods
out
fcomi
dec
stos
loop
cmp
daa
lret
or
lea
aas
add
jecxz
mov
pop
mov
clc
shrl
mov
sbb
cwtl
dec
cmp
or
std
jmp
mov
insb
xor
lods
sti
inc
enter
fs
sub
sbb
jb
lock
jmp
mov
shll
fisttpl
popa
movsb
dec
sub
arpl
repnz
mov
test
enter
mov
das
adc
mov
push
cmpsl
jge
jecxz
inc
movsb
in
les
mov
notl
xor
pop
mov
orb
scas
pusha
lret
ja
imul
sub
jg
push
loope
clc
ljmp
sbb
out
insl
jbe
mov
roll
shl
cs
arpl
insl
cmp
jbe
adcb
pop
pop
inc
dec
jl
push
add
mov
loope
mov
jb
ret
cli
push
cmp
jo
jg
add
movsl
je
inc
lods
sub
clc
cs
in
dec
js
iret
cld
push
xchg
outsl
int3
lods
sahf
jo
sbb
dec
call
ss
rcll
js
mov
sub
jbe
pop
int3
jecxz
stc
cli
jmp
cmp
imul
pop
mov
push
mov
sti
sub
cmp
scas
orb
or
mov
in
and
xlat
lds
ret
ja
out
stc
inc
dec
mov
dec
das
ja
xchg
and
add
fimuls
lret
push
pop
js
in
out
leave
push
imul
leave
xchg
sub
push
dec
or
push
faddp
adc
or
lcall
jmp
mov
out
mov
std
sti
jae
dec
or
lock
add
sub
and
pushf
dec
xor
lret
pop
dec
mov
mov
repnz
cmp
jae
dec
stc
pop
xchg
jmp
imul
mov
fmull
fwait
inc
movsl
push
lods
jno
dec
js
or
inc
xor
mov
test
lcall
pop
mov
notb
xchg
mov
mov
push
out
xor
adc
movl
test
mov
mov
insb
push
imull
fs
cwtl
pop
arpl
adc
cmp
stos
mov
mov
pop
test
push
inc
imul
lods
inc
js
cmp
test
adc
jns
xchg
in
movsl
jecxz
or
arpl
lcall
repz
inc
scas
push
push
pusha
jp
sub
mov
cmp
push
mov
pop
movsb
jo
cmc
xchg
ret
negb
bnd
jmp
out
ret
jns
push
mov
push
out
cmpsl
xchg
data16
roll
add
push
sub
movsl
mov
dec
cmp
bound
movaps
pop
xchg
push
fistpl
mov
or
mov
add
adc
sbb
push
lds
mov
push
push
pop
fidivrs
mov
cmp
mov
ret
cwtl
cmp
lea
mov
pop
ficoms
jge
test
mov
inc
js
sub
es
movsb
incb
test
xchg
and
xchg
mov
leave
aad
and
mov
cmpsl
pop
sbb
mov
sub
lods
and
or
dec
clc
lahf
jmp
mov
or
adc
mov
mov
fistpl
add
dec
cmp
inc
mov
xchg
add
sbb
lea
sub
es
mov
add
dec
add
sub
sbb
sub
pop
sub
adcb
std
daa
sub
mov
fnsave
inc
imul
xchg
xchg
cmp
movsl
into
loope
or
movsl
pusha
xchg
xchg
or
jno
insb
inc
jecxz
mov
cmp
add
mov
push
iret
sbb
popa
cmp
loope
cmp
enter
xlat
inc
sub
push
add
mov
inc
lds
xor
sbb
push
les
push
cmp
pop
ret
xor
bound
lock
aas
movsl
dec
sahf
mov
jle
test
and
jb
mov
lcall
sbb
xchg
mov
movsb
bound
cmp
lods
loop
pop
push
adc
add
mov
seta
push
mov
mov
xchg
lods
fs
inc
cwtl
jp
fisttpll
hlt
push
mov
inc
lret
and
sahf
aas
jae
and
sbb
out
sub
dec
pop
jne
adc
cli
ficoml
movsl
add
inc
test
xchg
mov
pop
ret
cmp
pop
cs
sar
push
cmp
sbb
cmp
lahf
push
mov
sar
aad
rclb
bound
mov
ficomps
inc
mov
dec
daa
cwtl
jb
mov
xchg
roll
push
ds
push
dec
cmpsl
inc
shrl
lods
adc
mov
in
dec
mov
pop
ljmp
pop
movaps
or
daa
lods
adc
lods
jo
dec
pop
pop
fsts
lds
repnz
pop
imul
aaa
xchg
jecxz
loope
cmp
adc
imul
pop
aam
cmp
inc
pop
sub
or
push
fbstp
push
add
hlt
or
repnz
inc
add
cmpb
inc
adc
cli
cltd
jp
jne
fbld
sbb
mov
call
lahf
mov
adc
repz
push
mov
cli
test
push
cmpsb
and
mov
sbbl
jbe
dec
mov
fwait
adcb
dec
dec
shl
push
pop
repz
mov
sub
pop
xchg
xchg
bound
xor
and
gs
mov
mov
push
fwait
inc
xchg
inc
daa
es
cmp
push
stos
popf
outsb
insl
ss
mov
sub
les
bound
mov
out
add
clc
inc
dec
mov
mov
mov
mov
setno
sbb
cmp
lret
add
push
ror
sbb
dec
and
sti
mov
pop
cmp
popf
xor
push
mov
cmp
cmp
adc
loopne
lock
cli
mov
es
jae
sub
call
int3
sub
push
lods
push
jmp
jbe
inc
arpl
push
jbe
mov
pop
cmp
jmp
inc
lods
imul
jbe
cmp
inc
xor
sub
mull
leave
lea
and
pop
mov
jg
mov
mov
notb
sbbl
cmpsb
arpl
cli
aaa
lock
sbb
aad
hlt
add
loope
dec
cmpsl
outsb
push
aam
call
dec
push
pop
mov
pop
jp
add
push
xor
add
sub
pop
addr16
cmp
jl
adcb
and
imul
push
push
jl
orb
lret
xlat
mov
xlat
mov
mov
sub
nop
sub
fistl
jns
paddsw
das
jmp
pop
xor
cs
les
push
mov
rcrb
out
mov
ret
mov
mov
mov
sarb
sub
stc
mov
popa
jae
testb
mov
push
inc
cld
jge
loop
and
or
add
jbe
lds
dec
scas
jns
adc
xchg
imul
jl
push
sub
fiadds
lcall
in
fcomp
or
xor
std
fs
ret
in
movsb
add
enter
pop
mov
test
mov
mov
xor
insl
sti
aad
out
clc
jno
mov
dec
mov
add
jns
jns
cltd
mov
movsl
cwtl
and
add
mov
push
test
bound
push
loop
add
into
pop
dec
aaa
sub
jb
fisubrs
pop
cltd
xor
pop
push
sbb
lods
inc
cld
pop
ficoml
cmp
push
sub
or
in
repnz
aas
pop
test
test
push
sbb
inc
sti
push
call
loope
and
adc
js
fs
loope
aas
dec
mov
or
mov
aaa
rorl
andl
push
pop
and
popa
rcll
mov
decb
clc
jnp
sbb
xor
push
fwait
loopne
jg
push
sbb
cmp
les
mov
sbb
adc
lods
mov
rcrb
lods
xor
popa
dec
movsb
mov
repnz
jge
shlb
in
mov
pop
add
fcoml
jmp
stos
add
adc
cmp
mov
fcoml
mov
jp
mov
mov
lcall
sbb
lds
push
ror
adc
idiv
mov
pop
inc
xchg
push
gs
enter
lods
jmp
sbb
xchg
dec
jns
pop
cmp
lret
dec
fistpl
mov
xor
nop
pop
mov
popf
pop
sub
adc
in
les
ror
mov
dec
sub
mov
fsubrl
push
xor
fldl
jmp
cmpsb
and
sahf
idiv
sbb
notl
sbb
fisttpll
fnsave
iret
scas
push
xor
fsubs
lret
loopne
or
dec
fimuls
and
aad
mov
and
aas
mov
jge
cs
stos
jmp
xchg
pop
pop
outsb
push
rolb
sbb
incl
sub
xchg
push
out
and
mov
mov
ja
push
add
push
mov
nop
mov
mov
out
xchg
cs
loopne
fadd
xchg
adc
int
fucom
lret
mov
cli
movsl
int
add
mov
testl
sbb
cli
add
add
lods
fadds
add
or
lds
sbb
adc
cmp
push
not
inc
cmp
xchg
lods
sti
mov
es
sub
clc
push
call
adc
aas
daa
and
pop
jle
lods
jmp
andb
data16
mov
mov
xorb
inc
loop
push
mov
cs
lahf
mov
and
sub
xor
sbb
mov
push
bound
inc
inc
insl
pushf
call
inc
orl
sbb
cmpsl
lds
lret
nop
dec
lock
outsb
arpl
and
xor
and
jl
gs
cmp
jle,pn
sahf
mov
js
popa
mov
xor
pop
scas
lea
sub
out
add
jae
sbb
out
adc
mov
cwtl
adc
insl
jl
pop
std
nop
pop
jne
xor
mov
cmc
sbbl
cmp
and
ljmp
pop
scas
jno
fnsave
pop
lods
popa
mov
ds
mov
xorb
popa
jle
jl
int
mov
adcl
xchg
pushf
jge
cmp
pop
hlt
xchg
xor
cmpsl
pop
leave
xor
aas
scas
loopne
lods
dec
cmp
or
out
stos
push
lcall
mov
ss
sub
jmp
outsl
mov
shll
push
xor
cmp
test
cwtl
push
dec
xor
outsl
cmc
std
sarb
and
cmpl
mov
mov
lcall
xor
divb
add
andl
nop
js
adc
inc
ljmp
push
and
xor
aad
mov
aas
jle
scas
inc
fisubrs
jmp
cmp
je
xor
pusha
push
outsb
mov
ret
sub
cmp
inc
cmpsb
xchg
and
pusha
faddl
pusha
insl
push
scas
out
sub
cmp
cmpsb
fists
xchg
push
lock
cs
cmp
dec
call
sbb
mov
cwtl
dec
leave
mov
xchg
fisubs
nop
xchg
das
dec
hlt
or
dec
sbb
cli
mov
test
jb
dec
push
icebp
push
repnz
and
out
adc
aam
mov
inc
mov
inc
in
in
and
push
mov
out
mov
sbbb
xchg
push
pop
inc
push
stos
or
rcrb
add
dec
lods
popf
frstor
and
or
push
pop
movsb
sarb
xchg
ds
aas
dec
iret
incl
pop
in
jae
jae
pushf
and
jp
sub
cmp
das
repz
inc
test
mov
and
dec
mov
push
pop
pop
fimull
pop
out
jns
faddp
stos
lret
xchg
roll
sbb
idivb
rcrb
adc
repz
inc
cmp
pusha
push
in
dec
cs
repz
test
mov
inc
in
inc
mov
xchg
das
es
je
pop
mov
in
mov
cmp
cmp
and
push
jp
sbb
repz
rorb
pop
inc
shl
push
sub
out
aas
inc
shr
xchg
sbb
pop
addr16
fsubrp
pop
xchg
mov
lret
jmp
stos
dec
into
lcall
add
fldl
cwtl
cmp
dec
jo
not
xor
adc
icebp
pop
add
popa
fisubrs
adc
and
pop
fistl
pop
out
test
add
sbb
jp
sub
push
mov
inc
pop
pop
shrl
sub
cmp
popa
or
pusha
adc
jecxz
scas
jmp
shll
sub
jo
mov
xor
pop
fisttpl
das
pop
leave
cld
jae
jle
xchg
lods
clc
mov
aad
and
jae
cli
aam
js
push
imul
pop
aad
xor
cmpsl
es
rorb
inc
outsl
repz
mov
lea
xchg
ficoms
int3
adc
add
cld
nop
mov
stos
and
fldl
mov
mov
gs
jp
dec
enter
test
pop
mov
call
pushf
cmp
mov
out
mov
cli
call
ficomps
frstpm(287
stos
mov
stos
testb
pop
inc
cltd
jecxz
cmp
nop
cli
sbb
push
mov
enter
xchg
mov
cmpb
jne
cmp
fisubl
sahf
cmp
cmp
mov
not
push
pop
rcll
movsb
fdivr
adc
jnp
xchg
sarl
adc
in
cmp
fildl
test
sbb
cmp
xor
scas
mov
insl
xor
lea
lahf
enter
adc
mov
mov
cmp
out
addl
fadd
push
scas
push
inc
lcall
and
mov
jne
mov
sbb
inc
test
adc
push
ror
push
push
fs
xor
jno
adc
imul
subb
xor
test
inc
or
cmc
jns
rcl
sbb
jl
push
and
popa
mov
aaa
ss
outsb
ficompl
into
repz
stos
in
arpl
outsb
stos
inc
mov
dec
adc
dec
lods
dec
sti
sub
jge
jge
mov
pop
adc
gs
mulb
leave
clc
push
inc
push
movsb
ret
and
cli
mov
lods
leave
in
sub
dec
jns
dec
sub
fmull
jnp
out
and
adc
jl
insb
cmc
in
sar
loope
out
ljmp
int3
dec
sbb
pop
les
daa
add
ss
xor
stos
rclb
imul
pop
cmpsb
cmp
aad
push
jne
push
add
es
fidivrs
nop
and
pop
pop
cmc
jne
sub
mov
mov
cmp
mov
loop
xchg
mov
leave
enter
aas
out
mov
mov
sbb
xchg
lret
or
or
ret
lahf
inc
pop
xor
push
xchg
jo
insl
inc
push
mov
lret
pop
push
mov
cmpb
sub
adc
cld
xlat
pop
out
xor
int
mov
push
gs
outsl
mov
xorb
and
sbb
hlt
out
int3
adc
jbe
jg
mov
les
adc
daa
or
push
jne
cli
mov
fs
shrb
sbb
popa
loopne
sub
mov
inc
xchg
add
jp
push
dec
ja
notl
iret
ljmp
cmpsb
xor
sbb
mov
push
cltd
into
xor
sub
scas
inc
cmp
jg
outsb
dec
scas
cmc
xor
movl
negl
stc
pushf
es
mov
mov
cli
mov
imul
cmp
insb
ret
cli
jo
in
rcll
push
jnp
lret
nop
dec
iret
push
jecxz
and
jbe
in
dec
inc
mov
repz
mov
push
inc
rcrl
loope
ljmp
dec
pop
stc
stc
sub
push
jns
int3
mov
out
fldt
fnsave
lahf
sti
cmpsb
in
addr16
and
dec
mov
mov
and
xchg
icebp
fcmovnb
sub
daa
sbb
repnz
push
or
pop
adc
lret
pop
dec
cld
int
pop
mov
neg
inc
pop
icebp
fwait
hlt
aaa
dec
xorb
and
test
mov
add
adc
jg
push
addr16
jne
cmp
gs
mov
lods
push
pop
dec
cltd
addr16
push
call
mov
mov
repnz
jecxz
inc
dec
ret
add
mov
xor
pop
or
out
cs
fadds
and
aam
sub
je
and
push
mov
mov
out
cld
push
ds
ljmp
pop
jg
xchg
inc
ljmp
xor
dec
idivl
in
int3
pusha
adc
call
jle
mov
jo
lret
cmp
jbe
jbe
and
imulb
test
add
push
inc
mov
jnp
jb
scas
and
fsubr
cmp
stc
fcomp
inc
orl
int3
hlt
sub
mov
fldenv
pop
testb
xchg
cltd
and
addr16
mov
jne
fcmove
test
or
loope
add
sbb
test
inc
ja
pushf
cmp
fisubrs
push
test
cmp
pushf
jne
fs
fidivs
lret
jecxz
popa
loop
xchg
int
mov
xlat
xor
pop
xor
mov
xchg
aas
ret
mov
mov
mov
loope
push
dec
cmc
and
dec
inc
rclb
stos
dec
ds
add
cmp
lds
mov
dec
ds
cmp
or
or
stos
daa
jb
xchg
lcall
outsb
xor
or
push
xchg
pop
jne
mov
xchg
or
xchg
cmpsl
rclb
xchg
iret
cwtl
inc
pop
push
std
packuswb
cmpsb
push
mov
fsubs
xchg
and
jge
xor
roll
in
sbb
mov
sbb
and
dec
jnp
sahf
or
cs
xor
lods
mov
push
mov
jb
mov
inc
dec
in
cmp
and
jnp
in
arpl
sub
add
insb
mov
int3
inc
out
in
push
stos
mov
stos
dec
fs
push
push
in
add
std
ds
xchg
mov
fcoms
mov
sub
nop
mov
xlat
xchg
jl
inc
cmp
lds
jecxz
sub
aaa
xchg
inc
or
sar
daa
movsl
cwtl
les
aas
mov
jb
pop
pop
hlt
push
and
lret
sub
cmpsl
xor
bswap
jg
imul
add
cld
test
mov
jge
dec
scas
jg
sub
adc
imul
jne
mov
popa
in
js
stos
shlb
test
jns
cwtl
xchg
mov
lahf
notl
arpl
int3
icebp
ret
in
xor
clc
mov
jne
data16
push
outsl
xchg
mov
adc
mov
cmp
pop
xor
ret
sahf
cmc
mov
xchg
iret
xchg
sbb
pusha
hlt
int3
sbb
adcb
pop
dec
test
inc
and
andl
xor
mov
outsl
lods
lods
mov
push
jb
cmp
fnstsw
inc
icebp
pop
in
stc
add
int
dec
aad
mov
xor
sbb
sahf
xchg
xor
es
lock
add
jmp
jp
sub
les
cmpsb
cmp
sub
dec
xchg
in
inc
push
add
jbe
hlt
pop
lea
fcomi
xor
rclb
test
fmulp
pop
fistl
imul
mov
cmpsl
adc
scas
out
xor
pushf
incb
cmp
mov
pop
cmp
mov
gs
stos
push
sub
xchg
hlt
mov
adc
jecxz
inc
push
test
sbb
out
jecxz
cmpsl
inc
cltd
stos
jne
push
call
jl
cli
lcall
lcall
xor
inc
outsb
repz
push
sub
pop
mov
adc
addr16
mov
mov
cmp
int3
cmp
push
loop
mov
xchg
lcallw
jg
lret
cli
out
add
inc
in
mov
mov
mov
test
push
jp
sbb
dec
jnp
test
push
outsb
jo
repnz
fcom
clc
inc
out
jae
sub
fists
mov
pop
movsl
lcall
mov
push
out
outsl
add
lahf
push
jb
aaa
cli
cmpl
jge
int
popa
psubsb
push
and
les
mov
hlt
ds
nop
inc
test
iret
xlat
pop
das
xchg
jae
nop
fs
enter
or
loope
xor
es
aas
inc
push
add
lods
scas
and
imul
popf
stos
and
adc
cmpsl
push
adc
cmp
xchg
gs
fcoml
punpcklbw
sbb
sbb
ret
stc
xor
addr16
adc
nop
mov
mov
push
pop
pop
sbb
gs
xlat
mov
pop
cwtl
cmpsb
stos
cltd
mov
inc
dec
cmc
pop
out
lock
adc
dec
mov
fisttps
mov
and
aam
and
fmull
or
int
gs
cmp
sahf
mov
lret
sti
and
dec
xchg
sub
and
or
cltd
insl
mov
add
test
cmp
xchg
adc
clc
stc
lds
xchg
adc
ljmp
push
jp
inc
adc
adc
cmp
repnz
in
sbb
call
or
outsb
mov
enter
dec
popf
fidivrl
mov
xchg
cwtl
mov
into
mov
pop
jnp
ss
lods
test
flds
dec
push
adc
outsb
dec
mov
jb
fildll
xchg
or
sbb
push
sbb
les
pop
mov
imul
out
pop
or
mov
inc
push
pop
xor
stos
mov
dec
mov
push
sti
shlb
cwtl
xchg
mov
cmp
cmp
adc
stc
pop
jns
cs
shll
imul
mov
sub
push
inc
mov
gs
pop
sbb
mov
push
dec
adc
sbb
sbb
jecxz
jno
aaa
mov
mov
out
in
ror
cmp
mov
cli
adc
sti
stc
decl
insl
cmpsl
je
pushf
adc
mov
jo
mov
jne
fmuls
aad
jb
xchg
mov
pop
out
imul
cmp
lods
add
movsl
out
jle
call
xor
loopne
and
test
imul
shll
pop
test
add
imul
add
mov
loopne
shrl
fdivrl
inc
repnz
push
sbbl
lret
adc
add
movb
cmpl
loope
lret
out
cmp
out
xlat
or
mov
xor
sbb
pop
loopne
mov
roll
sahf
xchg
cmp
ja
insb
mov
into
xor
mov
mov
or
pop
insb
and
mov
fnsave
loope
into
jl
mov
xchg
add
xorb
jns
rcrl
test
repnz
fbstp
lret
lahf
fbstp
adc
sub
inc
sbb
mov
cli
ret
lret
iret
insl
stos
bound
int
xor
xor
dec
mov
jo
jl
xorl
stos
std
mov
out
push
xor
lods
repnz
push
push
inc
dec
movsl
data16
into
pop
fisttps
sbb
cltd
adc
mov
es
jmp
mov
out
mov
sti
addb
div
mov
mov
lock
add
mov
jbe
mov
jo
call
pushf
js
cmp
or
cmp
pop
and
jno
or
movsl
arpl
outsb
mov
out
jecxz
mov
in
push
mov
out
rorb
mov
jge
xchg
add
add
mov
jae
or
inc
fiaddl
mov
arpl
pop
fsubrs
pusha
dec
cmc
sbb
bound
add
cmp
mov
xchg
mov
data16
sbb
adc
cmpsl
inc
data16
addr16
dec
out
sbb
pop
mov
sub
mov
int3
xchg
dec
sbb
dec
add
sub
xchg
mov
and
call
shll
dec
mov
xchg
mov
lods
mov
add
mov
dec
popa
push
in
out
inc
inc
cmpsb
outsl
inc
sub
out
stos
in
lock
xorl
mov
mov
sub
mov
inc
pushf
mov
dec
daa
jne
push
out
lret
xchg
test
mov
test
mov
xchg
test
cmp
sbb
clc
stos
jae
test
pushf
cmp
inc
xor
push
lods
sahf
jge
cli
cld
push
fidivrs
in
add
jmp
inc
in
ficoml
in
movsl
xchg
xchg
icebp
test
pop
imul
test
fildl
mov
mov
sbbl
mov
or
cmp
sahf
popa
scas
mov
jno
into
mov
clc
pop
popa
inc
sub
push
fadds
mov
inc
xlat
scas
loop
jp
push
cmp
into
sbb
lds
fsubs
jecxz
cmc
in
cmp
mov
orb
add
add
loop
xor
dec
mov
jge
xchg
lret
ljmp
sub
jnp
pusha
cli
js
insb
ret
js
xchg
out
sahf
xor
xchg
push
cli
mov
push
faddp
cwtl
sub
mov
cmp
sarl
sbb
data16
ret
inc
xlat
inc
sbb
loop
popa
jb
jge
lods
ds
push
rcll
add
in
fcomps
out
jbe
mov
jns
dec
popf
pop
loop
xor
ret
insb
aaa
gs
pop
jbe
lcall
test
add
jp
fwait
lcall
mov
in
adc
xchg
xchg
pop
jbe
mov
pop
es
sbb
rcr
insb
inc
mov
mov
lcall
inc
ja
out
sti
subl
loope
aad
in
into
hlt
popf
adc
int3
ret
add
in
pop
dec
test
roll
outsl
push
clc
push
clc
cmp
sub
xchg
cli
call
in
dec
hlt
lock
cli
pusha
push
xchg
jo
fbstp
mov
shrl
in
repz
mov
insb
aas
out
add
fidivs
outsb
and
adc
fcmovu
je
sbb
adc
ds
fstp
mov
icebp
jle
adc
je
outsl
shlb
inc
pop
and
fsubrs
inc
test
xchg
mov
cmp
cmp
scas
sub
inc
xchg
fisubrs
mov
inc
shrb
sub
pop
cwtl
lods
fists
xchg
sbb
pop
lahf
pop
sbb
popf
lret
fcmovbe
mov
js
mov
ret
std
inc
fistps
popf
cmpsb
push
add
loop
dec
lcall
pop
scas
dec
cmpsl
repz
cwtl
push
ret
jg
sbb
movsb
pop
sti
lcall
outsl
into
stc
push
mov
stos
test
icebp
mov
icebp
jnp
mov
adc
inc
sbb
inc
jne
fstpt
xor
cs
insb
clc
add
mov
stos
popf
test
cmp
and
sub
decl
pop
test
mov
pop
pop
mov
test
mov
js
cwtl
pop
pop
push
inc
icebp
sbb
in
add
sub
lods
add
xor
data16
aam
adc
add
jbe
sbb
or
jmp
lock
push
push
ret
sbb
loope
mov
test
xchg
push
pop
mov
or
dec
dec
out
mov
cmpsl
stos
out
jns
mov
xchg
int3
in
jo
jne
cmp
fidivrl
dec
or
mov
scas
pop
pop
lock
lods
inc
nop
cmp
mov
xchg
cmp
std
mov
sub
bnd
js
mov
jbe
lods
scas
aad
pop
push
cmp
add
call
dec
paddsw
inc
mov
cmp
dec
pusha
jno
rcrl
xchg
mov
mull
cmp
sub
adc
nop
add
rol
pop
xchg
add
ret
mov
and
hlt
cmc
stc
repnz
lods
jmp
xchg
lret
aam
adc
mov
inc
out
scas
jnp
and
cli
xchg
pop
sbb
and
mov
movsl
je
mov
xor
sbb
pushf
xchg
xorl
dec
out
movsb
xlat
sbb
cmpl
jecxz
jp
sbb
aas
push
sbb
xchg
les
dec
adc
ds
dec
loop
and
loope
inc
enter
xor
test
fisubl
rcll
lods
xchg
mov
push
xchg
test
and
push
shll
or
movsl
push
ret
insb
cmpsb
push
in
adc
cmp
outsl
cmp
mov
xchg
push
xchg
add
mov
jns
arpl
out
push
rcll
cwtl
stc
loope
insl
insb
outsl
jecxz
push
stc
sub
mov
lea
andb
shll
mov
popf
mov
adc
insl
mov
rorb
scas
xor
add
mov
jl
dec
and
pusha
and
imul
test
mov
outsb
xchg
inc
dec
mov
cmp
arpl
cmp
jns
ret
push
into
cmp
cmpsb
into
xor
or
aaa
and
scas
cmp
mov
aas
lret
mov
arpl
xchg
xor
mov
fwait
test
jecxz
or
movsb
clc
daa
loop
in
mov
cmp
mov
notl
rcrb
stc
test
stos
sub
ret
dec
cmp
outsb
dec
pop
adc
add
clc
mov
dec
or
roll
bound
adc
pop
xchg
push
push
out
or
mov
ss
xor
dec
mov
inc
sbb
inc
mov
and
pop
hlt
mov
pop
clc
cmc
dec
push
sbb
outsb
test
jnp
or
inc
inc
inc
cmp
mov
lea
jno
push
ds
and
xchg
inc
xchg
add
insb
gs
mov
sbb
cli
add
mov
sbb
xor
cmpsb
int3
xchg
ja
data16
or
push
mov
sub
cmp
loope
cmpsl
and
xchg
js
xlat
dec
loope
pop
hlt
cld
xchg
repz
scas
adc
inc
mov
rorl
into
outsb
push
pop
push
mov
repnz
xchg
push
jno
sub
dec
mov
lret
push
pop
push
mov
mov
adc
cmpsl
stos
xchg
mov
or
or
or
push
jmp
std
or
inc
fwait
lds
lds
dec
push
stc
lahf
popa
adc
dec
test
and
inc
pop
testb
cli
push
mov
jp
cwtl
mov
cmp
bound
ret
sbb
lret
gs
mov
ljmp
lea
dec
enter
out
push
aad
adc
push
les
inc
fiadds
push
stos
fnstcw
sub
fsubrs
push
cltd
push
add
hlt
sbb
gs
xchg
jecxz
mov
or
out
ret
test
mov
add
mov
sahf
aaa
push
add
int
mov
pop
mov
clc
pop
aaa
lret
mov
ss
cmp
movsb
inc
pop
in
xor
aas
fyl2x
dec
jg
fmuls
or
in
popa
fsubrl
cli
fisubs
xlat
jbe,pn
add
lea
scas
inc
mov
mov
stos
cmpsb
jne
xor
add
dec
jnp
sub
and
lcall
jp
pop
test
bound
fucomp
frstor
lret
mov
cltd
ds
cmp
inc
dec
pushf
iret
jge
jle
or
pop
gs
scas
dec
outsb
fdivs
ljmp
incl
cmp
sbb
bound
outsb
inc
push
sahf
sub
test
cmpl
mov
and
ljmp
aad
aad
sub
and
sbb
xor
mov
in
mov
lea
add
loopne
loop
loope
insb
mov
imul
cld
xor
mov
inc
mov
in
inc
sti
callw
in
adc
repz
hlt
js
pop
or
in
inc
or
lcall
idiv
test
in
std
fiadds
in
out
push
and
push
push
daa
cwtl
mov
mov
sub
dec
int
mov
mov
push
insl
xor
adc
sub
not
adc
add
or
aam
mov
jecxz
cmc
cmpsl
mov
mov
aaa
inc
jl
or
or
cmp
push
movsb
cmp
and
pushf
or
sbb
and
xor
gs
je
inc
or
ds
cmpsl
es
mov
push
mov
pop
lcall
push
or
sbb
pop
call
sub
ja
cmp
ficomps
les
int
sub
fmul
out
xchg
cmpsl
jo
stc
imul
dec
dec
fbstp
adc
push
loop
jg
mov
rolb
cmp
push
mov
xor
ljmp
xor
aad
filds
mov
lret
leave
push
mov
xor
pusha
pop
push
jl
in
rcll
cmp
cmp
testl
dec
ss
sub
mov
aaa
jnp
push
rcrl
and
dec
lds
mov
shl
inc
pushf
push
aam
or
mov
mov
sub
out
aam
sub
insl
or
sbb
jo
nop
and
js
sbb
decb
sbb
sbb
push
inc
inc
jge
cmp
into
cmp
addl
mov
int3
jp
aaa
inc
vmovaps
mov
mov
cmp
xor
sahf
popa
jp
rcll
mov
adc
sbb
push
loope
shl
or
pop
data16
jp
dec
idiv
mov
lods
jmp
hlt
pop
xor
add
dec
mov
xlat
aaa
mov
cld
popf
sti
push
push
pop
xchg
sbb
addr16
scas
lods
shlb
mov
xchg
xchg
lret
fstl
mov
gs
mov
rorl
mov
xchg
jmp
lods
dec
negl
push
cld
mov
fmuls
and
adc
int
sub
test
js
push
cltd
call
nop
fwait
push
js
adc
repnz
in
shlb
xchg
push
jl
dec
dec
sub
idivb
push
sub
jg
iret
xor
int3
std
pushf
rcrl
dec
dec
pop
mov
adc
outsb
pop
movsl
sub
inc
lret
jecxz
sub
rolb
push
mov
inc
je
or
das
fstl
data16
adc
test
pop
cmp
xchg
inc
sbb
dec
sbb
popa
test
into
outsl
adc
mov
lea
mov
gs
inc
call
mov
fdiv
xchg
or
mov
and
xchg
test
jnp
pop
repz
lock
mov
sbb
shll
cmp
jl
popa
sub
and
add
sbb
mov
adc
aam
data16
std
inc
sub
mov
nop
cld
fsubl
mov
xchg
push
cli
cmp
xor
pop
shrb
call
insb
xor
mov
xchg
xchg
icebp
lret
jnp
test
in
adc
push
push
loopne
fs
out
xor
adc
mov
push
movsl
es
xchg
push
jbe
fwait
pop
ret
dec
pop
xrelease
mov
or
adc
push
pop
in
cmp
dec
sub
pushf
mov
push
je
xor
adc
push
pop
mov
and
out
xlat
pop
fldenv
loope
mov
ja
rol
in
dec
xchg
adc
nop
mov
rol
inc
inc
or
lret
and
or
push
xchg
int
mov
andl
mov
insl
xchg
popf
ja
xchg
jno
jns
inc
scas
sub
cltd
daa
and
or
pop
mov
jge
scas
lcall
xlat
arpl
adc
aaa
pop
inc
mov
test
sbb
inc
scas
xchg
and
arpl
pop
das
out
cmp
jg
pop
cmp
pusha
ret
pushf
ja
push
inc
in
ret
lods
xor
into
jo
lods
dec
mov
mov
push
rcr
aam
daa
or
inc
daa
incb
inc
push
stos
daa
test
icebp
loope
xchg
stc
mov
mov
cmp
push
mov
mulb
je
xorb
inc
add
or
and
js
lods
out
add
sub
jnp
out
mov
pop
mov
je
push
xchg
pusha
cs
xchg
xchg
mov
sbb
icebp
dec
jb
add
test
pop
outsb
js
daa
lods
test
or
xor
outsb
jge
popa
push
bnd
das
in
mov
jl
pop
ss
mov
subl
dec
cmp
mov
push
repnz
mov
cld
mov
loop
dec
test
xor
sub
dec
mov
sarl
mov
insl
cmp
jno
fbld
arpl
push
lea
lret
outsb
inc
xchg
mov
xchg
push
pop
ror
jo
out
push
stos
push
ss
mov
adc
xchg
and
test
movsl
xor
jo
mov
or
mov
js
shlb
add
lahf
out
insb
loope
cmc
add
loop
push
movsb
dec
pop
scas
jg
roll
pop
push
jne
inc
mov
fnsave
pop
int3
add
xor
pop
pop
out
adc
lret
dec
and
test
imulb
adc
cs
or
fcmovbe
push
adc
push
sub
dec
cmpsl
ficoml
pop
lods
xor
mov
sub
jns
mov
pop
add
jns
xchg
adc
out
pop
daa
inc
call
arpl
fiadds
push
mov
and
in
std
inc
cmc
mov
jnp
mov
ljmp
fildl
or
outsb
adc
out
sub
in
movsl
test
mov
push
or
mov
aaa
fdivl
loope
inc
ja
add
jne
adc
mov
and
sbb
and
inc
mov
mov
add
xchg
jecxz
pop
dec
dec
xchg
arpl
data16
mov
push
dec
dec
insb
adc
adc
mov
pop
jne
cs
scas
fdivrs
bound
imul
in
cld
push
xchg
aaa
shrl
repnz
adc
pop
jl
add
pop
jge
mov
ds
test
lret
jmp
push
add
lea
lret
jns
sbbb
mov
int3
mov
imul
sub
xor
push
lods
lret
loope
leave
jp
aas
push
mov
ljmp
xor
dec
inc
dec
fdivrp
inc
cltd
stos
ret
jne
mov
xchg
sub
into
jmp
add
and
dec
notl
xchg
subb
loop
mov
adc
ljmp
dec
push
fnstsw
insl
iret
in
xchg
iret
sub
jo
dec
shrb
xchg
push
or
or
add
add
xchg
mov
stc
fsubp
mov
cwtl
loopne
push
xchg
sbb
mov
lds
mov
cmp
pop
xchg
pop
push
inc
mov
lods
rep
out
lock
inc
jp
call
or
ficompl
lcall
movsb
cli
lahf
push
mov
aam
pop
mov
mov
or
stos
push
fwait
data16
ret
fldl
cld
cmpsl
pop
subl
in
mov
test
popa
inc
andl
cltd
data16
movsl
cmc
cmp
sahf
dec
push
imul
inc
xchg
inc
cld
xchg
dec
or
sbb
jecxz
and
push
bound
jg
xor
iret
scas
sete
jae
xchg
and
in
stos
insl
xor
xlat
hlt
dec
mov
test
mov
adc
cmp
xchg
rcl
push
out
inc
sbb
jg
lret
push
inc
out
add
aad
sti
cmp
orl
not
cli
dec
add
popa
xor
sbb
les
xchg
push
jl
arpl
lret
je
push
inc
push
ljmp
jp
and
shl
mov
inc
aaa
pop
dec
push
mov
fisubrl
out
push
js
jo
adc
movsl
jmp
adc
lahf
inc
and
cmp
pop
push
push
enter
dec
movsb
sub
jmp
jmp
cwtl
mov
xchg
push
pop
popl
adc
push
pop
scas
ss
push
or
dec
xor
mov
sarl
dec
out
imulb
add
pop
sbb
outsb
pop
jb
adc
pop
cs
inc
lods
repz
test
pop
mov
loopne
add
insb
enter
hlt
and
mov
push
mov
jg
cltd
cmp
lods
lcall
jge
or
in
sbb
lcall
xchg
outsl
cs
sbb
cld
mov
xchg
out
xor
daa
xchg
test
hlt
xchg
mov
lret
fldenv
pop
jecxz
xor
mov
pop
pop
sub
das
fwait
add
xchg
enter
outsl
mov
int3
jbe
mov
dec
adc
mov
repnz
ja
test
push
ret
mov
lcall
sbb
cmp
cld
lock
sarl
adc
cmp
pop
insl
sub
add
xchg
stc
pop
add
mov
or
sub
push
ja
inc
sub
popa
cs
iret
cmpsl
aad
xor
idivl
cli
orl
insl
mov
pop
pop
pop
dec
cld
fstl
outsl
adcl
dec
arpl
int3
mov
mov
in
enter
mov
mov
add
jbe
pop
push
or
sub
jle
cmp
sbb
mov
sbbl
pop
adc
inc
xchg
jl
jmp
je
jno
or
jnp
ret
xchg
stos
icebp
insl
adc
or
clc
flds
insb
and
popf
insb
scas
dec
je
scas
jno
xchg
rcll
mov
in
stc
subl
out
mov
xchg
push
loope
jb
push
popa
jecxz
mov
adc
int
mov
sbb
sbb
fistps
jb
push
mov
sub
or
dec
mov
and
inc
inc
dec
push
int
shlb
xor
mov
sub
fadds
sub
push
loopne
cmp
rep
ffreep
ss
roll
push
mov
or
mov
mov
mov
pop
pop
dec
or
test
push
pop
xor
adc
and
jnp
xchg
adc
data16
inc
xchg
popa
pop
arpl
gs
ds
sbb
out
jge
orl
sbb
push
cmc
fstpl
sub
mov
ja
sbb
xlat
sbb
pop
xchg
imul
mov
shlb
push
loope
mov
cmovno
int
dec
lods
xchg
stos
lahf
dec
in
icebp
enter
fmul
rcr
jecxz
scas
inc
cmc
mov
mov
mov
xorb
push
sub
adc
sub
cmp
xor
xchg
test
cltd
xor
cmp
testl
adcl
sbb
and
pushf
or
shl
int
sti
jnp
shll
mov
nop
aaa
jp
inc
outsl
std
cmc
fidivl
sbb
pop
int
push
mov
xchg
jl
std
push
mov
and
inc
popa
sbb
xchg
scas
lods
iret
xchg
mov
dec
xchg
insb
adc
test
cmpsb
aam
add
mov
cmovs
xor
jl
loope
loope
mov
mov
das
cmc
and
shl
sub
jecxz
mov
imul
popf
cmpsl
out
les
repz
cs
xlat
mov
cmp
mov
fcomi
push
cs
and
das
inc
or
dec
mov
gs
dec
icebp
mov
fucomi
enter
int
pop
mov
out
xchg
pop
out
mov
outsb
xchg
and
mov
add
inc
pop
shll
lahf
sbb
les
mov
mov
dec
sbb
enter
fsubs
mov
dec
jl
movsb
xchg
jle
scas
cmp
push
jbe
sbb
or
dec
enter
sub
repz
jo
pop
sub
sarb
xor
out
mov
stc
push
cltd
sub
clc
insb
jecxz
imul
mov
pop
aas
dec
mov
mov
ret
dec
pop
aaa
mov
xor
push
es
mov
xchg
push
jle
mov
jns
hlt
cmp
repnz
iret
int
clc
xchg
mov
aaa
mov
das
rorl
or
add
xchg
add
push
aaa
xor
stos
stc
xchg
cli
push
xchg
outsb
xlat
testl
sub
notl
aas
aaa
mov
add
mov
xchg
stos
out
insb
imul
sub
inc
hlt
rcrb
pop
rcll
dec
inc
out
lea
mov
in
adc
sub
xor
cmc
add
ljmp
in
jb
leave
and
pop
add
out
mov
cli
xchg
out
loopne
mov
adc
mov
push
pop
push
inc
mov
and
mov
or
insl
inc
xchg
pop
sub
in
push
outsl
and
mov
adcl
jmp
mov
inc
jbe
or
fwait
ret
mov
subb
call
fadds
movsl
int3
in
cmp
fstps
or
pop
pop
inc
in
sbb
jns
adc
mov
and
jmp
and
aaa
jg
sbb
cld
pusha
cmp
fwait
jmp
lods
sbb
sub
xor
fmul
lods
mov
test
outsl
cmp
rcl
ret
movsb
imul
std
sarl
scas
clc
mov
inc
inc
in
jle
xor
sbb
stos
jb
in
mov
jbe
mov
mov
xchg
shll
pop
sub
sub
sub
pop
test
test
adc
push
test
sbb
sub
ss
mov
jg
shll
andl
mov
push
push
fdivl
push
add
testl
sub
stos
mov
add
or
jg
inc
cmp
jl
adc
lret
mov
and
es
lcall
ja
jnp
dec
xor
out
dec
mov
and
clc
xor
mov
les
mov
nop
mov
pop
mov
lods
or
imul
insl
pop
sbb
inc
cmp
jg
fbstp
add
adc
and
and
or
adc
sbbb
inc
inc
pop
scas
int
mov
inc
pop
pop
push
push
or
and
xchg
push
sahf
jae
ljmp
jp
pusha
pop
out
push
fisttpll
call
fs
cld
lcall
jge
in
fs
int3
addr16
js
ds
adcl
pop
in
iret
jo
mov
cmp
xor
adc
shlb
inc
out
sub
or
sub
lods
xchg
loope
gs
xor
in
ljmp
dec
mov
sub
push
das
loope
or
icebp
out
sbb
xchg
sbb
adc
arpl
xor
pop
xor
enter
fwait
inc
aam
pop
dec
push
mov
cmp
sub
add
out
mov
mov
mov
adc
test
mov
es
sbb
int3
mov
adc
enter
js
xlat
adc
cmpl
push
inc
pop
loop
in
push
call
call
test
xor
jecxz
andl
mov
scas
sbb
fwait
push
shl
and
jae
push
dec
mov
das
dec
repnz
ljmp
fs
test
push
dec
xchg
cmp
aam
jo
add
sbb
pop
sti
das
in
in
stos
xchg
aaa
movsl
and
popf
lock
push
sub
xor
push
push
inc
pop
cmp
loop
filds
sbb
shll
lods
inc
imul
addb
adcb
fmull
push
lods
js
jge
lods
shlb
lcall
nop
xchg
add
jne
and
xor
sub
fidivl
lcall
or
movsb
fisubrl
jmp
scas
shrb
mov
mov
inc
pusha
imul
fstpl
add
test
xchg
in
and
sub
and
lret
shrl
and
sub
es
ret
pop
add
cli
mov
stos
cld
push
sbb
dec
popa
dec
mov
xor
shlb
loopne
push
dec
stc
loopne
jp
das
lahf
mov
sbb
dec
sub
repz
inc
shll
cmpsb
or
xchg
das
repz
lea
repz
stos
adc
ss
call
test
xchg
arpl
fsts
mov
jg
fimuls
insl
negb
imul
push
insb
stos
dec
mov
jno
xchg
cld
xchg
xchg
adc
xor
inc
daa
push
jle
mov
jb
cld
inc
adc
jecxz
sarl
cltd
xorl
mov
in
ficoms
xlat
adc
fisubrl
arpl
stc
adc
sbb
lock
or
out
nop
pop
and
mov
jge
pop
jnp
add
xchg
jmp
gs
cli
sbb
mov
dec
sub
pop
cmc
dec
ss
xchg
int
fwait
jae
jl
stos
in
lock
push
jecxz
repz
out
jle
push
xor
mov
push
xor
push
xor
jmp
or
out
jbe
hlt
mov
mov
cmp
repz
jne
pop
mov
lods
sbb
andb
data16
cmp
inc
clc
into
sbb
xchg
insb
pop
and
mov
sbb
jmp
jl
les
sti
xor
in
mov
outsb
push
stos
xchg
jbe
aad
mov
pop
and
jne
sub
fbstp
pusha
push
and
pop
jae
push
dec
aas
mov
fldenv
jne
adc
jne
pop
insb
mov
aam
fdivr
aaa
jb
push
lods
pop
outsb
fld
out
inc
shll
call
jno
loope
and
sti
popf
loop,pt
stc
out
ret
andb
xor
mov
in
fwait
ja
sub
xchg
inc
jg
pop
rorl
jne
cli
xor
mov
inc
jmp
mov
adc
cmc
mov
test
push
sub
rolb
lret
mov
ret
ret
inc
push
fistps
std
pop
nop
xchg
mov
pcmpgtd
imul
jnp
mov
test
push
lahf
pop
sahf
sbb
je
fcmovb
mov
fildll
sbb
stos
inc
adcl
pop
stos
push
stc
adc
das
lods
sub
enter
mov
sbb
mov
mov
jp
cmp
mov
pop
std
jle
repnz
or
xchg
lea
repz
ja
cld
push
lods
mov
xchg
sbb
das
dec
dec
add
pop
mov
push
and
pop
xchg
mov
push
iret
scas
push
push
out
arpl
scas
fstps
lods
xchg
jecxz
scas
xor
mov
popf
sub
mov
fldl
or
test
lods
push
scas
repnz
jns
pop
insl
les
xchg
jnp
jg
std
cmp
xor
outsl
cli
push
cltd
outsb
sub
pop
sbb
scas
mov
movsb
cwtl
bound
out
pop
and
mov
test
in
push
aaa
and
aas
iret
sub
sbb
or
icebp
xlat
scas
and
jge
pop
xchg
add
fsubl
ss
insb
sbb
mov
iret
add
dec
xchg
mov
mov
sbb
clc
mov
mov
xor
imul
jns
xor
in
fwait
pop
pop
fadds
popf
mov
inc
ds
rclb
aam
daa
pushf
or
arpl
pushf
cmp
pop
je
xchg
bound
outsb
ficomps
pop
inc
cmpsb
and
fsubrs
mov
fldpi
in
int
mov
mov
repz
cmpl
in
pop
or
fstl
lock
adc
hlt
mov
lret
in
jns
jne
xchg
mov
ja
xchg
shrl
xor
or
push
push
cltd
mov
movb
test
inc
test
dec
loopne
or
test
ljmp
dec
les
or
sbb
xor
and
xchg
cmp
pop
pusha
push
mov
lcall
add
push
sub
xor
mov
mov
hlt
sub
pop
lds
xchg
in
scas
jge
jnp
mov
cmpsl
rcrb
shl
inc
push
mov
js
xchg
fstpl
or
pop
push
inc
lock
mov
mov
call
out
jno
nop
adc
std
pop
sbb
pop
aas
push
inc
add
lods
out
dec
dec
outsl
repnz
dec
pop
out
shr
lock
mov
imul
stos
push
dec
jae
lods
out
js
pusha
or
dec
mov
adc
push
lret
xor
mov
lock
sar
add
sahf
pop
adc
xchg
sub
mov
test
xor
jle
xor
pop
arpl
lods
sarl
xchg
ret
mov
ja
imul
loop
cmp
jnp
andl
stos
and
add
cld
adc
inc
movsl
cmp
in
out
mov
popf
mov
xor
lods
pushf
mov
push
xor
push
fadd
lret
cmp
cmp
in
push
lods
mov
imul
js
cltd
in
xchg
or
mov
xchg
idivl
or
jle
jb
call
imul
dec
push
adc
mov
push
cwtl
imul
mov
push
movsb
jle
push
pop
int3
or
fwait
pop
sub
xchg
into
adc
clc
sbb
xor
mov
or
push
mov
sbb
test
xchg
inc
test
fisubrl
adc
lret
pop
hlt
push
push
es
jno
mov
cltd
pop
pop
and
xchg
lock
fisttps
lea
jmp
stos
add
mov
and
jmp
pop
sti
add
imul
pop
repz
add
inc
dec
mov
into
inc
ret
xor
mov
jno
loope
and
jns
sbb
dec
xor
cmp
inc
mov
sbb
inc
addr16
jmp
xchg
ret
es
jns
enter
jae
int
or
jl
xor
scas
ljmp
out
push
jg
fxch
nop
imul
adc
lods
test
xchg
pop
addr16
sahf
shl
jg
xor
fwait
xlat
hlt
xchg
dec
lret
jb
sub
adc
jno
pop
lret
push
pop
sti
pop
cmpsb
add
loop
movsl
jno
mul
mov
imul
adcl
imull
data16
mov
and
icebp
and
cmp
mov
les
xchg
xlat
stos
ret
pop
xor
sahf
push
lret
inc
pushf
or
mov
imul
mov
cmp
dec
data16
push
cmp
push
inc
cmp
es
sbb
adc
mov
and
lahf
dec
jg
jge
rcr
mov
sub
jnp
cltd
xchg
jle
outsb
fists
call
fmuls
lock
fildl
insb
or
jge
std
dec
cmp
mov
popa
jns
or
movsl
pop
xlat
subb
mov
push
ficoml
decl
and
sar
dec
rorb
flds
cmpb
mov
dec
sub
lahf
repnz
lea
das
ds
pop
push
mov
nop
add
pop
ror
cld
or
push
stos
std
fsubl
lock
mov
mov
cwtl
pushf
add
push
fwait
dec
add
mov
fbstp
sub
scas
and
or
lret
pop
lods
pop
jno
aaa
in
mov
pop
jae
les
repz
dec
mov
sbb
lret
and
sub
in
xchg
sub
xchg
mov
xor
and
out
xlat
jp
push
jbe
mov
push
fsubrl
loop
adc
sbb
lcall
rolb
pop
jecxz
imul
insl
fs
test
repz
pop
lahf
scas
insl
jmp
mov
pop
inc
xor
add
imulb
mov
sub
xor
dec
fstpt
inc
adc
jne
sbb
sub
mov
xchg
push
ror
pop
out
fwait
out
fiadds
add
xor
and
sbb
sub
out
fnstsw
loopne
push
daa
in
call
sarb
or
sbb
inc
loop
pop
cltd
shll
mov
rcl
cmp
jl
incl
mov
push
xor
push
int3
pop
cli
jns
ss
mov
jae
push
data16
hlt
fwait
cld
mov
imul
add
pop
cwtl
ror
div
cmpl
imul
lods
fwait
repnz
push
jb
pop
pop
push
jp
mov
sub
sbb
fptan
test
mov
inc
jbe
aam
bound
iret
es
jo
mov
test
lods
push
es
nop
les
divl
mov
lods
bound
jno
fimull
insl
mov
ret
add
dec
sbb
mov
sarl
mov
fidivrl
xchg
pop
pusha
decb
mov
dec
push
push
out
stos
sti
cmp
rorb
daa
imul
mov
lock
mov
dec
jge
sbb
notb
insb
inc
sub
mov
ret
outsb
loopne
repnz
popa
add
stos
loop
push
aam
or
inc
push
fidivrs
jo
test
jne
icebp
push
dec
fucomip
mov
loopne
cwtl
int3
ja
push
ljmp
mov
insb
bound
lods
stos
jb
inc
and
fstl
cwtl
pop
lea
jbe
inc
mov
mov
movsb
outsb
push
lea
in
xchg
add
or
push
aaa
cmp
lods
ljmp
dec
andb
sahf
test
iret
adc
neg
add
inc
mov
jnp
test
pop
xchg
insb
sub
lret
aad
lahf
les
fistpl
push
adc
jl
add
dec
xor
jg
lret
repz
push
aad
jbe
jp
pop
xchg
add
xor
xchg
jae
push
xor
inc
bound
arpl
mov
cmpsl
or
xchg
mov
test
cmp
mov
mov
jne
cmp
sahf
lea
inc
pop
mov
mov
xchg
xor
mul
or
xor
fildll
scas
push
iret
in
int
stos
push
inc
sbb
scas
in
dec
sti
stos
mov
insl
add
dec
or
jns
inc
call
pop
push
add
addb
fists
inc
rcr
push
sub
aad
inc
mov
lds
jl
sbb
jge
push
lds
shll
iret
test
inc
call
icebp
pop
nop
out
push
jg
lds
sbb
sbbb
mov
xchg
sbb
lds
std
les
out
ds
adc
adc
adc
fimuls
adc
mov
mov
rolb
in
jnp
xlat
xor
mov
insb
sub
sub
push
hlt
pop
mov
popa
dec
pusha
mov
in
insl
js
out
lock
stos
jb
sti
mov
jae
jmp
xorl
or
add
fwait
dec
aaa
xor
mov
dec
rorl
cld
xor
mov
or
test
addr16
jo
jae
and
mov
je
jno
adc
jecxz
mov
xchg
push
add
cli
pop
incb
mov
jmp
ds
testb
leave
pop
jae
sbb
mov
leave
ds
ss
mov
mov
je
aas
negb
xor
cli
mov
push
mov
cltd
jecxz
push
xchg
mov
loop
test
lret
dec
int
jge
sti
xor
ljmp
xchg
mov
sbb
divb
nop
or
mov
pop
xchg
inc
adc
nop
test
gs
test
imul
test
add
fxch
ret
je
push
xorl
dec
xchg
cmp
jl
push
addl
lods
addl
xor
xchg
call
cmp
xor
jae
lcall
mov
repnz
repnz
sbb
sub
inc
arpl
add
std
xchg
movsb
jne
nop
add
ret
mov
sbb
inc
adc
push
sbb
fsubl
dec
cs
ja
mov
pushf
mov
jbe
aam
ret
enter
push
inc
inc
mov
xchg
and
cmpsl
shlb
xor
jno
push
and
jo
pop
xchg
push
stos
sysenter
mov
aad
mov
fmulp
adc
aas
mov
mov
pushf
out
call
lahf
inc
movsb
jae
cmp
outsl
cmpsb
push
pop
mov
jbe
ret
nop
loop
mull
imul
insl
add
push
and
push
sbb
inc
or
dec
in
test
push
jecxz
mov
xor
jecxz
mov
jecxz
adc
and
arpl
push
and
inc
cmpsb
shrb
add
xor
adc
adc
dec
sub
clc
adc
mov
in
sub
push
jno
cmp
push
out
mov
cmc
arpl
sahf
mov
sarb
mov
xchg
cltd
jns
lods
xor
in
sub
xchg
test
adc
push
ds
icebp
adc
fdivl
cmp
lock
add
cmp
mov
iret
fcompl
mov
xlat
cld
mov
out
or
xchg
mov
pop
outsb
inc
xchg
loope
mov
aas
stc
inc
hlt
jnp
pop
push
mov
stc
mov
mov
xor
stos
dec
shlb
sbb
jns
movsb
insb
xor
push
nop
push
insb
xchg
pop
scas
dec
sbb
outsl
push
insl
int3
and
int
rol
mov
imul
aas
cmp
pop
mov
xor
adc
push
jl
xchg
mov
cmc
pop
push
aad
xlat
jg
or
imul
pop
ljmp
inc
rcrl
sbb
push
mov
andb
cmpsb
imul
insb
xor
jecxz
pop
fcoms
lock
jecxz
dec
fwait
ret
or
jns
mov
dec
roll
mov
testl
mov
cltd
jnp
inc
mov
mov
fwait
cmpsl
mov
sub
pop
insb
push
dec
not
inc
imul
orl
sub
push
loope
inc
xchg
stos
test
and
xlat
cld
icebp
jecxz
je
pop
out
ljmp
mov
jg
xor
xchg
mov
jno
in
stc
cmp
sbb
dec
aas
jp
js
push
rcll
hlt
jb
mov
sub
out
orl
push
es
mov
movsb
sbb
cltd
adcb
loope
rorb
sti
fwait
add
mull
xor
pop
pop
orb
push
xlat
mov
sub
out
push
jge
stc
test
adc
jne
sub
notb
ja
sub
jmp
xchg
call
jmp
andl
mov
xchg
cmp
dec
push
inc
mov
cltd
loope
jno
out
fnstcw
lods
sbb
adcl
sbb
jno
in
mov
jmp
shrb
loope
mov
and
nop
mov
xor
mov
std
inc
cs
inc
leave
adc
hlt
mov
lret
xor
cmpsl
sbb
push
fdivs
out
test
xchg
lret
pusha
pop
jmp
out
jle
sub
psubusb
or
les
adc
xchg
lret
ljmp
cmc
push
pop
rcll
mull
cmp
mov
rol
imul
clc
mov
pop
mov
push
mov
sahf
aam
push
stos
mov
dec
push
adc
cmpsb
cs
and
pop
in
inc
leave
and
lcall
das
pop
push
xchg
inc
xor
pop
scas
and
fs
les
jecxz
xchg
sub
cmp
push
pop
add
cs
pop
repz
jno
jo
cmp
jnp
pop
jno
pushf
ret
pop
fidivs
cltd
jns,pt
sbb
mov
jp
lcall
cmp
xchg
nop
stc
leave
clc
jle
xchg
mov
push
imul
fcoms
adc
cwtl
enter
shlb
mov
stos
mov
lds
mov
pop
cmc
lds
ret
sub
movsb
sbb
mov
pop
stos
jae
mov
je
in
push
mov
cmp
cwtl
pop
fdivp
inc
das
je
into
sub
cld
sub
pop
ss
cwtl
inc
mov
ljmp
jno
xor
xor
out
iret
je
mov
lea
int3
cmp
out
repnz
fstps
loope
xor
imul
outsl
xor
mov
xchg
jmp
cli
mov
push
jns
cmp
mov
out
inc
aad
cs
jns
pop
dec
mov
loop
jg
enter
push
and
fisttps
xor
mov
pop
leave
lea
add
mov
iret
cltd
icebp
xchg
or
aad
jno
ss
loope
mov
mov
shrb
jb
test
inc
std
repnz
and
inc
xchg
movsb
pop
mov
sbbl
xor
paddusb
jmp
rcll
jnp
mov
xchg
adc
jecxz
mov
push
mov
pop
adc
push
push
or
xchg
cmp
xlat
cwtl
popa
enter
fld1
add
je
test
xor
jle
jp
and
test
hlt
inc
cmp
xchg
hlt
out
pop
lahf
jno
sbb
mov
sbb
stos
addr16
mov
cmpsl
dec
inc
xchg
roll
or
fidivl
mov
fwait
loopne
ds
inc
sahf
enter
xchg
cmc
xchg
test
mov
push
cmp
addr16
pop
je
and
jae
mov
sti
in
xchg
shlw
mov
pop
aas
xor
ret
jno
pop
out
xor
xlat
mov
pop
outsl
add
mov
pslld
movsl
movsl
addl
iret
cmpsl
hlt
or
call
mov
jp
out
dec
filds
push
xchg
je
inc
mov
inc
pop
cs
adc
imul
sbbb
in
ffree
dec
aaa
nopl
push
add
clc
add
xchg
cld
dec
call
sarl
lahf
add
cs
mov
xor
mov
sbb
fstl
adc
loop
jecxz
outsl
push
pushf
adc
sbb
lock
lock
ret
in
insb
sbb
sub
movsl
mov
push
xchg
mov
sbb
xchg
sti
fists
pusha
lahf
sbb
adc
inc
mov
jno
adc
dec
mov
pushf
fadd
sub
notl
loope
in
pop
push
mov
mov
push
jbe
adc
testl
addr16
test
dec
mulb
fimull
push
out
adc
sbb
add
out
int3
cld
cmp
add
push
mov
pop
push
cmpsl
sbb
xor
pop
jle
mov
mov
in
sbb
ja
in
jne
lcall
cmp
inc
sarb
rcrl
jnp
lret
push
fs
add
mov
xorl
sub
imul
leave
add
js
ret
lahf
push
sub
dec
push
insl
dec
adc
and
cmp
sbb
ljmp
sbb
pop
pop
xorb
and
out
insb
mov
dec
das
mov
pop
dec
cltd
inc
adc
out
push
es
out
ret
jbe
cld
outsb
lods
sub
sarl
mov
jne
std
cmp
pop
mov
fucomi
ret
sarl
jno
dec
push
icebp
lcall
in
test
popf
roll
imul
mov
xchg
and
adc
sbb
pop
jge
pusha
pop
jb
sbb
rcrl
and
jl
dec
cld
icebp
xchg
or
popl
xchg
movsb
imul
pop
adc
hlt
test
push
addb
mov
movd
sbb
dec
push
jae
or
jnp
jmp
adc
xor
fwait
lock
insl
mov
cmpsb
dec
leave
or
xor
popa
hlt
adc
bound
xchg
fsubrl
jns
pop
rcll
imul
out
movsl
je
xchg
aas
adc
mov
hlt
pop
push
push
mov
xchg
mov
inc
and
in
in
xlat
inc
dec
scas
pop
rcr
loope
pusha
xchg
xor
adcb
mov
xchg
bound
cld
lods
and
mov
testl
jno
xchg
int
jg
lahf
int3
push
ljmp
dec
mov
xlat
loop
ret
mov
in
lods
test
xor
popa
movsb
xchg
loope
idivb
mov
mov
sbb
cmc
in
sub
cmp
xorl
test
adc
lds
shrl
push
rol
pop
mov
rclb
out
ja
roll
popa
pop
ljmp
lock
pop
cmp
or
add
push
nop
push
push
mov
repnz
xchg
cmc
dec
dec
les
inc
sub
js
out
pop
xchg
push
stos
rcrl
mov
gs
inc
sbb
push
orl
rcr
pop
cmpxchg
pop
xchg
test
daa
jno
or
dec
lret
mov
mov
out
mov
pop
in
pop
inc
in
not
mov
push
dec
sub
xchg
fists
or
vmaskmovdqu
mov
push
mov
add
incl
lds
mov
int3
pusha
or
call
inc
jns
adc
pushf
faddl
pushf
lds
add
aaa
aad
adc
xchg
mov
int
mov
or
cltd
je
es
fwait
pop
data16
pop
das
das
push
jno
mov
mov
adc
xchg
pop
dec
bound
jl
dec
xor
inc
or
dec
jbe
jno
mov
clc
sub
fwait
outsb
mov
mov
mov
mov
repz
andl
dec
xor
subl
js
sbb
addr16
imul
xor
outsb
aas
xor
ljmp
mov
movsl
mov
lahf
stos
jno
insb
cwtl
jge
shll
loop
adc
jns
fldt
cmp
mov
jge
call
pop
push
test
add
adcl
sub
dec
add
jecxz
ja
lcall
in
mov
or
test
call
imul
rcl
ss
jno
scas
and
pop
inc
pusha
add
pushf
shr
add
inc
cmp
pop
xlat
fwait
mov
xchg
jnp
rorb
xchg
test
std
jl
sub
jne
add
leave
ljmp
sub
stos
xor
lea
push
xchg
lcall
aam
js
sbb
hlt
mov
mov
adc
rcl
cmp
fsub
sub
fwait
leave
push
mov
xchg
add
ficoml
dec
xchg
repz
sbb
int
imul
out
xor
fisubs
xor
das
rcrl
jae
fistpl
push
lds
add
jns
mov
dec
mov
adc
fmull
sbb
sub
aad
adc
daa
pop
stc
pop
mov
push
pop
insb
mov
aas
dec
imul
outsl
loope,pn
or
insl
fcmovbe
push
and
adc
gs
aam
and
pop
mov
bound
xor
or
and
mov
pop
xor
mov
lods
lcall
test
scas
xchg
xor
dec
aam
es
xchg
mov
mov
push
ret
ffree
add
mov
mov
test
pop
pop
out
flds
push
pop
pop
movsl
xchg
inc
rclb
aaa
ret
mov
sbb
int3
cmc
xchg
clc
fwait
mov
adc
adc
mov
sti
sahf
mov
call
jnp
in
push
and
or
mov
inc
xlat
ljmp
imul
aaa
pop
jmp
sbb
xor
orl
rolb
test
test
jne
pop
and
dec
ficomps
pop
mov
mov
mov
enter
or
cmp
cmp
loopne
cmc
or
stos
test
push
mov
cmpsl
add
adc
mov
push
mov
cmp
daa
out
xor
adc
sub
mov
lret
pop
test
jne
fxch
dec
pop
or
mov
cmp
mov
dec
out
jmp
mov
dec
sbbb
roll
dec
and
je
movsb
ljmp
xchg
pop
imull
mov
pop
std
cmp
inc
imul
ss
dec
pop
pop
xchg
or
dec
lods
xor
adc
and
adc
jp
pusha
dec
mov
jmp
pop
pop
mov
add
rcr
insl
lret
inc
movsl
adc
dec
sbb
mov
adc
xchg
adc
ret
dec
lret
xor
pusha
test
movsl
inc
and
pop
xor
sub
add
xchg
mov
pop
mov
or
add
xor
test
mov
sub
mov
mov
outsb
mov
test
in
sbb
mov
xor
jecxz
test
sbb
mov
sbb
mov
push
xchg
aas
adc
ss
sti
mov
loop
shrb
test
mov
inc
jmp
aam
push
mov
in
aas
cwtl
out
je
sub
in
mov
push
mov
mov
dec
push
scas
cmc
repnz
ljmp
enter
testl
mov
xlat
mov
xchg
or
jecxz
test
push
aas
xor
mov
xor
stos
ret
sub
cmpsb
mov
add
sbb
lahf
cli
jle
mov
sub
fdivrs
cmc
and
pop
fs
iret
int
mov
dec
gs
sub
jmp
xor
jmp
stos
fstpt
movsb
leave
daa
xchg
xorb
sbb
push
xor
repnz
lods
inc
test
fidivrs
pushf
mov
jp
pushf
ljmp
push
icebp
jbe
jbe
inc
adc
out
adc
pop
pop
sub
mov
lods
scas
pop
sbb
cmp
imul
jge
xchg
inc
mov
mov
shrl
cmp
mov
out
addr16
jg
enter
pop
cld
jbe
bound
xor
ficoms
or
add
hlt
sahf
xor
adc
pop
dec
ja
inc
xchg
call
les
dec
sti
or
aad
call
test
push
cmp
daa
xchg
lds
pop
adcb
push
jbe
inc
sbb
add
add
fiadds
into
rdtsc
mov
aam
mov
pusha
sub
bound
dec
push
movsl
mov
adc
arpl
fidivs
punpckhdq
call
mov
sub
ds
std
std
jecxz
enter
in
cwtl
lret
lock
sub
mov
bswap
str
jg
aad
fisttps
cmp
addb
adc
mov
rorl
mov
les
fwait
lds
fwait
pop
cmpsb
ja
test
adc
mov
lds
mov
push
inc
jle
aaa
pop
loopne
fstpt
push
sahf
dec
lds
cmp
push
stos
xor
lds
ret
fwait
std
push
push
jp
or
std
out
adc
cmp
das
lret
sbb
mov
adc
not
push
dec
inc
test
out
cmpsb
pop
ret
sub
pop
icebp
sbb
sub
adc
aas
or
inc
sbb
insl
movsl
mov
sub
les
cmpb
fistpll
lcall
push
fucomip
adc
lds
add
xor
hlt
add
jns
arpl
cli
sbb
or
sub
aam
push
test
out
add
push
jge
mov
stc
nop
mov
std
hlt
es
mov
inc
xor
inc
subb
or
fwait
inc
mov
popa
jbe
lahf
shll
mov
push
addb
sbb
jle
cli
in
rclb
mov
inc
rorl
xor
dec
leave
addb
int
add
xchg
jp
sti
ja
stos
hlt
fcomp
pop
mov
lahf
sub
pushl
pop
cli
inc
adc
rcrw
sub
push
in
lret
sbb
push
jle
ss
mov
xor
inc
add
lcall
fwait
xchg
fbld
push
and
mov
push
sub
movsb
loopne
dec
fdivrl
push
mov
arpl
sti
cmp
pop
imul
shl
rorl
jge
adcb
mov
sahf
xchg
roll
dec
cmpsb
lods
not
mov
movsb
lea
in
mov
cmpsb
jecxz
xor
aaa
inc
xchg
mov
mov
mov
sbb
cmp
mov
icebp
inc
hlt
pop
dec
jmp
and
incb
or
jae
or
mov
scas
xchg
cs
push
cmp
stc
push
and
fs
cmp
test
int3
add
xchg
outsb
jge
inc
insb
xchg
xor
sahf
pop
addr16
jb
clc
xor
inc
jno
js
imul
push
dec
or
in
ss
jge
lds
sub
int3
mov
mov
push
popf
lret
in
movsl
push
push
push
dec
dec
and
push
inc
xchg
dec
mov
arpl
mov
xchg
adc
inc
loope
jecxz
and
pop
and
gs
xor
dec
js
cs
loopne
adc
ret
in
mov
push
inc
jno
sbb
stos
sub
and
inc
nop
sbb
or
jns
in
push
xlat
hlt
imul
mov
pop
mov
fdivl
ljmp
dec
gs
pop
clc
gs
mov
jp
or
jns
fnsave
sti
in
lea
mov
test
rclb
push
lcall
jg
inc
lods
mov
sub
jge
scas
and
insl
xor
jge
stos
cmpsl
adc
push
out
leave
in
mov
jnp
loopne
fwait
insl
and
mov
inc
jno
mov
fdivrs
push
mov
cmp
pop
jl
into
sti
mov
in
adc
cmp
or
push
scas
inc
lea
push
and
popa
cwtl
insl
push
into
mov
jp
sub
mov
jno
inc
fistpll
jae
jnp
in
leave
addl
or
push
sahf
xchg
xchg
int3
mov
data16
xor
enter
mov
int
jns
loop
mov
push
outsl
mov
inc
push
push
xchg
xchg
xlat
xchg
ja
out
es
popa
ljmp
arpl
inc
and
icebp
stc
aas
mov
pop
ficoms
mov
pop
mov
add
repz
mov
into
gs
xor
aad
or
in
pop
sbb
adcb
pop
cmpl
add
js
cmpsl
mov
inc
mov
insb
jg
push
xchg
or
xchg
mov
jmp
sbb
outsl
lock
jp
push
int3
repnz
bound
repnz
cmp
ljmp
or
pusha
pop
push
outsl
ret
jg
std
mov
data16
jl
dec
leave
das
fsub
inc
dec
pop
test
dec
fisubrl
fdivp
cmp
push
xchg
pop
xor
cmpsl
sub
in
loope
popf
rep
jns
jl
cs
loopne
aad
pop
push
push
and
jp
in
ss
cs
xchg
stos
jno
xchg
in
add
bound
scas
fildl
lcall
pop
add
std
jb
cwtl
dec
and
xorb
and
or
pushl
ret
mov
mov
shlb
cmpsl
push
das
pop
shlb
push
add
jnp
sub
cwtl
push
in
aam
test
or
lds
into
ja
rolb
add
add
mov
jg
stos
add
rol
jp
add
and
jl
or
dec
pusha
or
jbe
jbe
mov
incb
inc
idiv
xchg
pop
xor
stos
push
mov
jns
test
jecxz
mov
ja
cmpsb
or
rcrb
out
js
mov
xchg
leave
sbb
and
cltd
cmp
and
jle
movsb
dec
cltd
rcrl
rorb
cmp
imul
xchg
icebp
std
mov
mov
mov
mov
popf
dec
pop
xor
xchg
cmpsl
cmc
jno,pt
pop
fwait
ss
xchg
movsl
push
imul
fwait
xchg
mov
inc
adc
fwait
movsl
out
rorl
sub
push
iret
mov
nop
push
pop
inc
push
mov
xchg
movsb
daa
and
cmp
movsb
fidivl
mov
movb
and
xor
or
out
flds
scas
sub
fdivrl
mov
xor
aam
gs
lret
mov
dec
and
cmp
add
sub
jge
adc
repz
enter
or
jecxz
dec
push
movsb
lret
push
mov
mov
xor
push
test
inc
push
jb
aam
in
inc
xor
mov
push
mov
loopne
xlat
cmp
dec
sbb
mov
cmp
adc
xor
xchg
loopne
and
and
and
push
pop
icebp
and
pxor
fstpl
in
std
pushl
loope
sbb
add
neg
cs
jp
push
jno
ds
lods
jnp
jo
mov
jb
ljmp
push
xchg
sbb
enter
push
movsb
inc
out
imul
sbb
mov
out
movsb
adc
add
fdivp
sbbl
jns
popf
je
mov
int3
decb
sub
movsl
fmul
iret
in
out
mov
xor
inc
pop
imul
jecxz
pop
push
cwtl
hlt
ss
xchg
pop
popa
gs
inc
jecxz
js
pop
fnsave
inc
adc
test
fadd
dec
test
xor
loope
xor
pop
adc
xchg
push
inc
xchg
jge
int
test
aas
inc
xchg
adc
add
pop
mov
push
stos
inc
mov
ljmp
jno
lret
jle
cmp
add
test
mov
xchg
and
filds
mov
xor
aam
push
and
add
mov
popf
fsub
stc
inc
dec
imul
adc
adc
icebp
orl
mov
rolb
fbstp
sbb
mov
mov
cli
in
pop
iret
lahf
movsl
cs
ds
jnp
xchg
and
jo
mov
pushl
movsl
push
bound
and
cld
stc
mov
mov
dec
push
mov
fcomps
xchg
cmc
int3
pop
ljmp
jge
push
mov
popa
sub
mov
or
and
push
repz
dec
jbe
jns
les
out
inc
out
pop
ret
mov
and
stos
push
dec
les
in
pop
push
mov
push
mov
dec
jmp
movsb
cltd
add
sbb
fists
jne
imul
daa
add
cwtl
pop
cmpsl
jo
sub
and
inc
jb
adc
jg
addr16
add
push
inc
popa
outsb
xchg
mov
loop
xchg
test
add
sub
adc
cmp
inc
addr16
inc
inc
loop
inc
pop
into
mov
jge
cld
cld
xor
pop
aas
stos
xchg
outsb
imul
ret
dec
cs
shl
xchg
ja
int3
pop
stos
out
icebp
lods
cmpsl
sbb
lahf
and
dec
sub
into
ss
pop
orb
mov
push
push
pop
mov
mov
mov
adc
add
pop
repz
mov
xor
shl
xchg
dec
fildl
ss
add
pop
xchg
mov
call
add
sbb
scas
mov
movsl
popa
jg
shlb
gs
mov
push
loope
add
in
dec
xchg
push
mov
cmpsl
mov
in
ret
stc
add
xchg
mov
out
leave
shr
jnp
lret
xchg
mov
mov
mov
pop
rcrl
xor
push
jb
inc
fcompl
cmp
out
lods
mov
sub
xchg
mov
jmp
stc
mov
cmc
insb
das
xchg
testl
jmp
frstor
cmp
shlb
xchg
adc
pop
rcll
mov
or
xor
js
and
test
or
sahf
xchg
sub
movsl
xor
or
push
mov
int3
push
fwait
mov
sbb
and
pop
lret
inc
xor
pop
into
loop
xchg
aam
test
sub
arpl
xchg
push
ret
rcrb
cmp
dec
mov
mov
test
fimull
scas
enter
add
leave
fildl
mov
cmp
adc
mov
in
repz
pop
lcall
jp
or
mov
mov
aad
popa
mov
int3
push
sbbl
dec
sahf
pop
and
insl
cmp
fildl
sbb
int
aad
in
sbb
ds
scas
ret
inc
icebp
adc
add
shll
sbb
or
cld
ja
rcl
les
ret
pop
dec
into
mov
cli
inc
jecxz
cltd
xchg
cmp
push
int
add
cmpsb
inc
fs
cwtl
ss
or
emms
bound
xchg
sti
lds
orl
add
add
sub
data16
pop
mov
cmp
inc
adcl
pop
ljmp
pop
in
push
shl
imulb
mov
push
cltd
jb
in
adc
jae
and
jecxz
dec
pop
mov
push
xor
fwait
xchg
cmp
push
add
ret
sti
dec
mov
inc
inc
pushf
or
std
sbb
mov
push
jg
loope
mov
cli
fistpl
shrl
sbb
and
inc
test
and
dec
shlb
mov
shrb
test
lods
inc
popl
lret
xor
xchg
inc
les
and
inc
inc
xor
cmp
mov
les
bound
sub
jae
scas
lcall
cmp
sbb
mov
jmp
adc
stc
outsb
ror
repnz
adc
or
mov
ret
push
icebp
inc
pop
les
inc
mov
sbb
sbb
xor
mov
jecxz
ficompl
gs
or
ret
mov
in
and
or
pop
test
push
pop
mov
out
xor
pusha
push
and
dec
xchg
in
in
ds
inc
xchg
adc
sbb
mov
xor
mov
cmp
imul
or
cmp
fdivrl
addr16
sbb
add
inc
test
mov
enter
sbb
call
mov
jne
jbe
nop
cmp
fisubrs
ret
xchg
loop
insb
mov
iret
mov
lret
xchg
lea
imul
orb
jns
pop
mov
push
jge
js
or
jmp
cmova
fcoms
jmp
mov
rcll
mov
push
cli
xchg
popa
fnstsw
adc
test
ret
push
and
sub
jge
push
xor
push
rol
aaa
dec
xor
mov
inc
bound
shlb
xor
cs
push
or
je
out
out
out
outsl
mov
out
scas
sub
cmpsb
clc
cmp
mov
push
shlb
jno
mov
lahf
mov
mov
fwait
mov
inc
aaa
adc
jo
ja
xor
shrl
sbb
mov
mov
mov
xor
aas
mov
cmc
ficomps
jmp
jnp
xor
rorl
imul
dec
mov
into
outsl
popf
push
mov
and
add
sub
loopne
push
pop
push
popf
cmpsl
cli
and
notl
sahf
sbb
push
sub
and
sbb
adc
neg
adc
sahf
aas
insb
cmp
pop
shl
imul
xlat
out
dec
sbb
loopne
icebp
mov
push
cmp
dec
fstpt
lods
in
daa
cmpsl
outsl
jb
cwtl
addl
cli
push
js
test
pop
pop
or
lods
rorb
outsb
or
mov
pop
inc
nop
xchg
xchg
pop
dec
lods
pminub
pop
push
imul
pop
jno
adc
iret
mov
jbe
fadds
cmc
add
mov
cwtl
mov
push
sbb
adc
shl
sbb
lds
xor
push
clc
xor
shll
xor
pop
jae
add
fst
pop
movb
ss
adcl
into
jae
mov
cmpsl
push
fisttps
rcrl
cld
aam
push
call
and
xchg
push
ss
sbb
sahf
xchg
loopne,pt
imul
por
push
pop
mov
adc
sbb
daa
scas
cmpsb
inc
or
cwtl
and
xorl
add
mov
hlt
xchg
aaa
leave
repnz
bound
outsl
xor
imul
pop
mov
fdivrp
xchg
sub
add
mov
cmp
push
dec
sbb
out
inc
repz
push
enter
or
fisttpl
add
cltd
fnstsw
fadds
cltd
sbb
jecxz
push
xchg
push
or
cmpsl
sub
pushf
push
lds
mov
stc
push
arpl
sbb
dec
add
testl
or
clc
frstor
int3
arpl
aad
out
jne
mov
sbb
scas
mov
hlt
ret
or
inc
rcll
sub
in
jmp
outsb
push
push
or
std
jae
push
mov
cmc
arpl
pushf
sbb
jae
sub
sbb
pop
jmp
dec
test
cmpsl
out
lea
fcomip
jge
fldcw
inc
dec
idivb
loope
pop
or
pop
in
ficoml
out
sub
push
xor
push
push
leave
mov
fpatan
jmp
cmpsb
sbbb
sbb
fcomps
jb
jmp
dec
jbe
icebp
das
scas
or
ss
xor
lret
lods
mov
xor
inc
das
push
xor
and
icebp
adc
push
rol
shrb
sti
xchg
mov
pop
xchg
out
jae
pop
flds
push
mov
popf
push
inc
sahf
lcall
jl
push
int
jne
xor
jb
loop
rcrb
dec
jl
xchg
bound
jmpw
test
dec
fnstsw
imul
jno
stc
out
xor
add
ret
lock
cli
push
sub
xor
std
cmc
test
shrd
inc
push
je
sub
shrl
jmp
pop
inc
imul
mov
push
insb
pop
sti
jae
jecxz
outsl
jnp
es
dec
mov
cmpsb
and
jne
cmp
or
popa
add
push
or
add
repnz
push
stos
xchg
lret
scas
sub
dec
mov
adc
pop
cmp
jae
ljmp
and
xchg
cmpsb
dec
fiadds
pop
mov
sbb
mov
xor
scas
aas
cld
cmp
sbb
es
and
sub
dec
add
jp
inc
sub
orl
pop
in
enter
and
mov
dec
ret
gs
int3
inc
xchg
xchg
mov
pop
mov
sbb
jl
into
inc
stos
mov
sti
xchg
shr
inc
lret
sahf
xlat
mov
dec
fisubl
add
int
and
dec
mov
pop
fsubl
rolb
popf
cmpl
pop
adc
out
sub
jle
jae
jbe
pop
ret
clc
fimull
mov
imul
popf
pop
jbe
jecxz
xchg
insl
add
or
fwait
sti
in
mov
dec
loopne
outsl
je
pop
adc
adc
je
negb
stos
sub
leave
lods
pop
and
or
or
fs
scas
mov
imul
insb
inc
inc
loopne
xor
mov
rol
pop
leave
popa
xor
test
pushf
les
pcmpeqd
xor
mov
and
repnz
fbld
adc
pop
rcr
aaa
xor
add
xchg
or
add
jge
pop
mov
mov
cld
inc
mov
mov
lret
fdivrp
es
add
dec
adc
jge
fnstsw
in
sbb
mov
and
xchg
mov
or
push
xchg
cld
stos
xchg
cld
dec
lods
jbe
imul
gs
push
das
dec
dec
aam
add
mov
mov
insb
test
sub
stc
cmp
and
pop
push
mov
lret
and
mov
xor
mov
js
or
fnstsw
inc
dec
and
jge
mov
rcrl
sbbb
add
aas
popa
mov
jo
jns
cmp
xchg
fldl
mov
push
jb
ds
cmc
cmp
xor
sahf
dec
test
cmpsl
shlb
insl
es
pop
push
out
push
hlt
push
xchg
sti
into
and
xchg
fstl
pop
push
rolb
out
inc
push
arpl
pop
sbb
sub
dec
adc
mov
data16
sub
mov
test
dec
test
ljmp
push
dec
mov
shr
cmpsl
and
test
jle
inc
sti
jmp
cwtl
mov
sti
fcom
mov
lret
jno
xchg
and
xchg
cmc
push
mov
imul
xchg
and
sub
mov
fcomps
xor
cmp
dec
inc
loope
pushw
fcompl
stos
int3
stos
or
mov
jno
std
in
sbb
fsts
call
std
loopne
push
or
xchg
push
inc
sbb
out
mov
aaa
jg
sbb
mov
cld
es
std
dec
xor
lock
lds
iret
enter
js
lds
and
int
sub
nop
xchg
lret
mov
int
push
hlt
add
out
or
sub
or
jge
addr16
mov
mov
push
xchg
or
mov
movl
cmp
cmp
cmp
mov
insb
inc
xlat
out
ds
js
or
and
pop
cmp
mov
lock
add
js
dec
shrb
push
mulb
pop
mov
callw
sub
das
mov
fidivrs
and
mov
pusha
repz
jnp
mov
incl
nop
mov
pop
and
cmc
js
and
ficomps
push
sub
pop
mov
xor
add
xchg
fisubrs
mov
loope
jp
and
lret
jecxz
jb
hlt
jle
dec
push
lret
jae
hlt
ja
jb
push
scas
add
je
inc
in
dec
loopne
mov
mov
stc
es
test
lcall
pop
call
shrl
outsb
ds
shll
aaa
push
pushf
mov
push
pop
pmaxsw
xchg
push
and
out
fs
hlt
push
jl
xchg
or
imul
mov
out
sub
pop
fidivrl
test
aas
pop
insb
je
pop
cld
fisubl
mov
les
popa
jae
sbb
and
sub
idivb
xor
mov
nop
push
lahf
pop
xchg
divl
mov
shrl
xchg
test
ds
icebp
fdivl
mov
int
pop
sti
adc
or
test
test
imul
sub
mov
jno
xchg
pusha
fisubrl
xlat
popa
pushl
inc
loope
outsl
icebp
popf
loopne
dec
mov
push
push
xor
arpl
aas
xlat
fwait
jns
sbb
fmull
adc
pop
iret
in
pop
ljmp
out
outsb
ljmp
mov
in
ss
mov
or
enter
adc
jp
jnp
xor
xchg
push
xorl
stos
push
jmp
cmp
dec
sbb
rol
es
or
lds
cmp
popa
cmp
mov
pop
push
add
test
jge
mov
aaa
or
dec
imul
or
sbb
in
fstpt
subb
mov
mov
pop
xor
sub
stos
push
push
in
xor
mov
ja
or
out
add
mov
xchg
int3
and
loop
subb
into
divl
and
dec
out
xor
cmp
mov
sbb
jge
or
aam
lea
fsts
int3
push
stos
mov
xchg
cmp
rolb
in
pushf
outsl
negl
lret
sbb
loop
or
pop
pop
sbb
sub
out
out
mov
aad
xchg
sarl
sbb
sarb
test
lahf
push
push
pop
cmp
stos
xor
imul
movsb
or
jbe
pop
mov
outsl
daa
hlt
xlat
imul
and
xchg
cmc
dec
mov
inc
mov
outsb
popf
leave
test
or
sub
aam
xchg
mov
test
and
call
out
fs
repnz
lods
lahf
pop
movsb
cmp
xchg
ss
fwait
push
addl
dec
jle
pop
dec
pop
out
jle
into
adc
dec
mov
sti
rcll
dec
mov
into
sub
nop
pop
cmp
and
fistpll
xchg
mov
dec
dec
icebp
lds
loop
push
pushf
jb
jae
push
inc
vpmaxub
lahf
sbb
jp
es
addb
ja
jp
mov
pushf
aam
push
out
inc
loopne
adc
dec
inc
lret
lcall
mov
cmc
mov
mov
sahf
xor
mov
add
xchg
insl
mov
xchg
pop
sahf
gs
arpl
sub
xchg
xorb
les
and
test
and
xor
fimull
jle
mov
jge
ljmp
lahf
cwtl
push
xchg
cmp
jmp
aam
ss
clc
xor
cmp
cmp
pop
sbb
adc
shll
neg
pop
adc
sbb
hlt
cmp
jge
or
mov
pop
xchg
shll
loope
outsb
movsl
test
cld
cmp
stos
les
cmp
daa
add
icebp
mov
dec
bswap
sub
and
loop
adc
das
jle
mov
lods
cltd
push
jecxz
cs
in
xchg
mov
pop
xchg
cmp
and
fcoml
push
mov
enter
and
mov
jbe
mov
dec
lret
ror
flds
dec
out
dec
mov
sti
sbbb
dec
jns
in
pop
call
inc
loopne
pop
test
stc
and
inc
xorl
fs
gs
xorb
push
dec
ss
cmp
loop
or
fisttpl
jo
mov
outsl
xor
dec
jg
mov
adc
mov
mov
sbb
fsubrl
add
hlt
xor
cwtl
jno
std
inc
mov
in
jg
inc
aam
hlt
stos
es
in
cli
adc
ja
scas
inc
popf
adc
mov
dec
imul
mov
xor
fbstp
jne
pusha
add
pop
test
xchg
lret
or
xor
lcall
xchg
push
inc
in
popa
int3
add
fcmovnbe
jbe
sub
out
jmp
push
nop
mov
rorl
adc
mov
das
add
lods
dec
push
mov
jmp
pop
test
std
fcmovnu
sti
insb
adc
imul
adc
dec
dec
push
pop
in
cmp
inc
outsl
test
mov
inc
aaa
push
jp
inc
jnp
cs
jmp
adc
pop
fnstcw
pop
das
lock
xor
gs
arpl
shl
push
xor
jecxz
shlb
das
gs
outsl
push
mov
mov
xor
add
mov
adc
pop
dec
jae
insl
and
das
inc
pop
xor
or
sub
sub
inc
or
jecxz
cmp
lcall
pop
mov
xchg
fstl
mov
mov
push
pop
xor
jl
cli
adc
lret
fwait
or
loop
push
out
in
pop
in
iret
xchg
pop
insl
cmp
ljmp
popa
push
out
adc
aad
out
push
insl
dec
xchg
icebp
jge
pop
jge
cmc
repz
in
out
and
inc
pop
fldln2
lcall
cmp
mov
cmpb
in
push
dec
cwtl
roll
repz
mov
mov
ss
decb
mov
aad
fstps
dec
xchg
out
mov
sbb
cwtl
jp
mov
in
and
adc
loop
xor
ss
pop
jne,pn
ret
out
sti
mov
push
lods
int
in
enter
fsubrs
lock
andb
in
ljmp
addr16
shl
ljmp
xor
xchg
push
mov
xor
xchg
dec
int3
into
or
addr16
dec
or
stos
push
jno
cltd
dec
xchg
cmpsb
push
ret
mov
movsl
add
movl
xor
ss
pop
loop
shll
clc
cltd
out
and
lock
aaa
or
mov
sub
popa
pop
mov
out
mov
scas
and
ds
les
xchg
loope
gs
dec
adc
pop
and
and
pop
cmc
pop
cmp
lret
push
sub
fbstp
xor
jl
sbb
mov
mov
hlt
jns
es
push
std
ds
push
pop
jp
js
imul
push
push
xchg
lret
cmp
pushf
dec
divb
xor
ja
xchg
sbb
jmp
mov
loopne
jo
lods
fs
not
add
jge
mov
and
testb
das
xchg
mov
dec
mov
addr16
mov
jge
push
jbe
es
in
and
int3
add
and
les
icebp
and
inc
cmc
cmc
mov
xchg
sbb
ficoml
pop
xor
xor
push
dec
mov
xor
cltd
inc
adc
loope
mov
mov
adc
lahf
add
mov
popa
scas
sar
cmp
addr16
cmp
push
or
loop
stos
in
push
adcb
pop
mov
aaa
dec
add
mov
sub
adc
add
inc
xor
push
loopne
mov
jmp
lds
into
inc
loope
and
pushf
push
popa
out
or
rorb
leave
mov
xchg
leave
cmp
push
loop
pop
neg
in
push
out
push
push
inc
leave
push
orb
sahf
jo
xchg
push
inc
mov
cmpsl
dec
stos
pop
add
out
repz
xchg
push
xchg
sub
int
iret
popf
es
iret
pop
dec
jo
fldln2
xchg
dec
fmuls
jb
leave
pop
ss
add
addr16
xchg
movzbl
pop
push
xchg
stos
push
in
or
scas
inc
xchg
mov
mov
sbb
push
call
dec
xchg
iret
jmp
sbb
cmp
outsb
inc
mov
je
pop
inc
jb
lock
repnz
adc
repz
jns
repz
fisubrl
mov
test
popf
or
sub
lods
inc
lret
xlat
jne
jb
adc
cmp
test
and
ret
pop
jmp
mov
int3
or
sbb
fidivs
inc
test
outsb
lea
cmpsb
leave
xor
inc
add
and
outsl
mov
shl
xor
idiv
in
pop
cmp
mov
cmovl
cmp
leave
xchg
aam
hlt
stos
mov
push
adc
in
adc
mov
loopne
jo
fucomi
jno
sbb
mov
xchg
or
sarb
out
sbb
xor
lea
add
outsb
aam
ljmp
cmpsl
adc
adc
test
faddl
or
clc
push
lahf
push
cld
push
or
outsb
test
out
test
repz
mov
frndint
xor
je
test
decb
push
mov
mov
dec
fmuls
add
dec
dec
pop
int3
test
ret
sbb
pop
mov
outsl
sub
mov
or
cmp
jp
sub
imul
sbb
dec
xchg
je
movsl
es
mov
xor
outsb
mov
adc
int3
pop
mov
push
imul
push
repnz
fdivrs
sbb
push
xchg
xchg
adc
popa
es
ret
repnz
fidivs
inc
mov
sarb
jb
addr16
or
xor
lds
shll
jmp
int3
ljmp
jae
aam
imul
push
aaa
fidivl
incb
jmp
push
xchg
stos
mov
outsl
insl
dec
cmp
xor
mov
jb
stos
sub
out
or
stc
stos
aas
repnz
imul
stos
inc
jns
add
mov
call
cs
int3
mov
sahf
scas
gs
pop
out
lods
xchg
pop
xchg
sbb
cmp
adc
out
push
mov
and
mov
ljmp
or
movb
rcrb
mov
mov
xchg
mov
xor
pusha
pop
mov
pushf
jp
add
dec
pop
outsl
out
shrb
cmp
inc
or
ljmp
jne
data16
jno
mov
mov
fisttpll
lds
out
adc
fisubs
cltd
clc
mov
and
cs
scas
push
mov
push
aad
add
mov
jecxz
mov
mov
cli
repnz
bound
stos
pop
mov
test
dec
push
in
xor
mov
xor
sub
fsts
push
push
push
xor
repz
dec
or
frstor
pop
adc
popa
add
in
xchg
pop
xor
dec
adc
scas
repnz
mov
or
xor
fs
mov
fistl
lahf
out
and
jnp
add
test
sbb
call
push
cmp
and
jg
cmp
in
sbb
lock
rcrl
pop
out
adc
dec
sbb
fbld
mov
cltd
lret
mov
xor
scas
inc
rolb
in
in
call
pop
xchg
mov
out
loop
ss
fdivrp
jno
mov
cmpsb
inc
inc
cmc
xchg
lea
sbb
dec
and
pop
jnp
xchg
xchg
xchg
test
out
rsqrtps
sar
mov
add
aaa
add
fucom
mov
inc
sub
int3
inc
fadd
xor
sbb
cmpb
int3
and
and
pop
mov
or
xor
pushf
ret
in
dec
aaa
cmpsb
into
push
jge
jns
or
xchg
les
lods
mov
pop
sub
insb
or
jecxz
scas
shll
or
js
push
repz
pop
testl
push
fstl
sub
add
lods
je
inc
fwait
movsl
cmpl
pop
adc
test
mov
mov
sbb
cmpsl
movsb
mov
mov
or
mov
in
xor
scas
jp
out
xchg
pop
mov
mov
fbstp
addl
mov
dec
mov
xor
mov
insl
lahf
test
mov
sbb
jns
push
inc
inc
cmpsl
pusha
mov
clc
adc
dec
outsl
mov
add
flds
jecxz
add
inc
dec
sahf
jns
arpl
arpl
pop
inc
aam
cmc
out
mov
sbb
shl
cmc
cs
sub
scas
cmp
enter
push
daa
dec
jle
dec
fidivrs
and
pop
andl
push
pop
jne
pusha
pop
mov
test
cmp
jb
and
loopne
jbe
dec
in
xchg
ds
pop
cmp
scas
data16
jp
andl
jecxz
outsb
stc
icebp
add
jmp
mov
adc
sbb
push
mov
cmpsb
and
fcompl
ds
scas
das
or
pushf
mov
sti
fiaddl
call
pop
enter
push
stos
mov
mov
lods
push
mov
sbb
sub
sub
xchg
decl
mov
fisubs
mov
ficompl
insb
fmuls
repnz
cmp
sub
xchg
jo
dec
daa
test
mov
shlb
ds
push
int3
push
jo
cmp
loop
lock
mov
jmp
shl
ret
push
sub
outsb
mov
add
out
sbbb
ss
cwtl
sub
fsubl
inc
jl
mov
ret
push
fsubs
cli
or
mov
sbb
inc
aad
sbb
xchg
fimuls
fwait
int3
mov
movsl
ljmp
pop
mov
or
test
scas
int3
mov
aad
movsb
pop
cwtl
fldl
in
cmp
mov
rcll
lods
fiadds
xor
dec
sub
adc
add
sbb
xor
xchg
mov
lock
xchg
cwtl
shrl
jnp
cs
cmpsb
insl
adc
bound
lock
mov
xchg
jne,pn
neg
rcr
xlat
jl
rolb
xchg
mov
ret
push
outsl
cmpsb
dec
sarl
loopne
mov
inc
hlt
mov
pop
iret
or
mov
lcall
pop
enter
icebp
int
adcl
add
std
ret
xor
sub
push
enter
out
loop
jecxz
outsl
sub
adc
loope
push
or
scas
fwait
push
mov
or
adc
pushf
sbb
cmpsb
mov
loopne
movsb
shlb
jns
enter
popa
iret
clc
inc
or
sti
xor
shrl
push
lahf
add
push
jmp
push
lret
sti
sub
loope
arpl
fsubp
xor
push
rcrb
jno
or
add
jo
ljmp
rclb
adc
sbb
daa
test
loopne
aas
add
pop
clc
std
data16
mov
cmp
call
aad
jae
call
inc
fdivr
prefetch
insb
punpckhbw
repz
in
fistps
mov
ret
mov
movsb
inc
push
jl
inc
jb
insw
mov
mov
lds
int3
rorl
cltd
lods
in
and
lods
mov
out
arpl
xor
mov
sarb
pop
sbb
hlt
jmp
sub
lock
ret
shlb
xchg
daa
mov
pop
call
xor
jl
pop
cmc
push
movswl
les
call
bound
ficoms
mov
dec
scas
mov
mov
mov
and
nop
inc
enter
divb
mov
loopne
push
jo
das
or
pop
or
ljmp
stos
and
jmp
in
sti
cmp
js
mov
inc
repz
dec
dec
icebp
pop
add
movsl
inc
push
hlt
jl
enter
movswl
sub
push
aad
dec
in
cmp
inc
jns
adc
enter
xorl
dec
add
cmp
add
push
and
mov
jmp
lea
add
and
stc
push
xchg
movsb
adc
mov
inc
push
pushf
pop
xchg
hlt
xchg
loop
or
mov
in
xchg
inc
mov
enter
dec
addr16
mov
aam
arpl
fistpll
xchg
dec
test
mov
enter
iret
push
cmp
shl
push
ja
mov
inc
stos
arpl
xor
or
mov
xchg
fsubrl
test
pop
aad
push
lods
stos
loop
shr
mov
add
leave
mov
mov
and
mov
xor
push
inc
add
jmp
aaa
fdivl
mov
jg
es
xor
testb
mov
sub
inc
and
shrb
mov
jmp
sub
outsl
clc
and
xchg
jns
jo
xchg
test
lret
inc
and
jle
jl
cmp
ljmp
and
imul
sbb
pop
lahf
jle
xor
lods
paddb
and
jmp
aas
ljmp
push
outsb
out
ss
jne
mov
mov
subb
xchg
or
adc
imul
arpl
jg
xchg
inc
dec
inc
jb
stos
xchg
or
adc
shll
jl
out
adc
mov
pop
pop
imul
jns
ret
jecxz
jo
xchg
outsl
pop
add
mov
mov
out
shl
out
pop
inc
insl
push
cwtl
sub
insb
out
pop
mov
jae
loop
push
aas
inc
dec
cld
mov
sub
xor
in
sub
fimull
mov
xchg
mov
mov
pop
nop
addr16
icebp
rorb
call
mov
icebp
push
jno
mov
lods
rcl
lahf
cmp
push
jmp
sti
addr16
leave
and
and
xchg
fisttpl
out
dec
iret
daa
subl
lds
jmp
cmpsb
cmp
pop
imul
xchg
ss
repnz
xor
dec
pop
cmp
aaa
inc
mov
push
hlt
dec
lods
lods
sarl
xchg
mov
ret
gs
cmp
outsl
cs
mov
aam
in
push
inc
lahf
dec
mov
inc
cmp
push
adc
and
mov
pop
dec
push
jae
mov
lcall
cli
pop
xlat
test
push
cmp
inc
xor
xchg
andl
xchg
inc
mov
std
shrb
stos
pop
push
xchg
out
repnz
xchg
in
jmp
add
xor
in
inc
rcrb
sahf
xchg
or
mov
mov
outsl
cmpb
cmpsl
imul
aam
pop
cs
aad
call
push
or
sub
ljmp
lahf
test
jbe
icebp
cmp
das
mov
sub
mov
adc
or
lea
aas
cld
push
jmp
fs
pop
push
loope
add
mov
call
and
jns
gs
pop
sar
sahf
cltd
xor
mov
ficomps
insb
jbe
std
mov
pusha
fcompl
pop
pusha
dec
xor
xor
xchg
lret
bound
jbe
sbb
lock
cltd
lret
add
mov
sarl
lods
testl
mov
rorl
push
add
xchg
dec
data16
jno
aad
push
enter
fdivl
and
das
je
sti
jmp
dec
sub
inc
out
mov
fcmove
in
sub
test
pop
inc
cmp
fcmovb
movsb
xchg
rcrb
out
mov
enter
pop
call
lcall
mov
cmp
push
js
inc
jmp
lock
dec
lods
out
es
bound
loop
xchg
dec
and
mov
fs
jmp
and
sub
add
cwtl
sbb
jne
mov
rorb
insl
test
inc
daa
sub
out
fcmovne
push
int3
jns
imul
lcall
addr16
jge
enter
int3
xchg
into
lcall
lret
or
mov
adc
adc
mov
or
enter
in
cmp
mov
cmpsb
xchg
xchg
rorb
aam
xor
leave
shrb
es
test
mov
inc
aaa
xor
sbb
mov
xor
xor
mov
add
imul
inc
or
push
pop
jg
daa
or
ljmp
call
fdivr
daa
add
cld
imul
roll
outsb
push
mov
pop
lds
sbb
xchg
xor
and
or
outsl
rclb
sbb
in
jl
lods
sbb
popa
mov
xor
test
addr16
sbb
lahf
je
sbb
or
push
clc
push
aam
imul
mov
adc
aad
push
dec
sbb
cmp
adc
lahf
cmpsb
mov
dec
mov
lods
mov
mov
popf
in
sub
mov
dec
lods
pop
fcmovnu
pop
rcrb
xchg
jp
scas
add
popf
and
push
shlb
pusha
lea
mov
add
xchg
sub
add
lods
cmp
and
fwait
push
jmp
inc
fxch
addr16
mov
call
loope
je
imulb
scas
loop
movsb
jmp
mov
pop
xchg
aam
imul
pop
out
and
cmc
mov
and
xor
push
popa
pop
out
bound
mov
daa
in
lods
aaa
or
xchg
jge
mov
cmp
sbb
rolb
dec
xor
decl
sub
lret
std
cwtl
movsl
xor
rcrb
xchg
cwtl
smsw
push
add
je
loop
ficoml
imul
push
xchg
scas
xor
push
in
mov
adc
pop
mov
lahf
int
dec
mov
stos
call
pop
cli
fstpl
adc
sub
pop
adc
arpl
mov
dec
pop
cmp
fisubs
adc
mov
loopne
jns
xchg
clc
into
inc
sbb
fidivl
cwtl
mov
dec
push
movaps
add
xchg
push
jnp
ret
mov
ljmp
xor
sbb
std
ss
gs
push
call
xor
lret
jecxz
out
jge
fcoms
push
dec
leave
dec
sbb
int3
call
mov
stos
adc
inc
sbb
mov
mov
nop
mov
fistpl
pop
out
addr16
popa
inc
out
rcrb
pop
dec
lahf
sbb
je
ds
pop
and
enter
mov
or
test
mov
repz
enter
clc
mov
xor
fimuls
daa
es
mov
in
outsl
jmp
xor
jge
fldenv
push
sbb
xor
cwtl
xchg
cltd
xchg
sbb
subl
sbb
out
pop
push
out
push
or
lret
xlat
and
mov
sbb
leave
jae
mull
movsb
add
ret
jg
ficoml
mov
cmp
adc
push
popa
test
into
addr16
dec
push
gs
mov
inc
js
je
mov
inc
ljmp
adc
popl
lcall
out
sub
popa
xlat
or
pusha
inc
mov
je
xchg
jne
dec
aas
and
bound
and
pop
insl
repnz
es
jle
cs
and
pop
lods
mov
or
jne
sbb
inc
gs
xchg
inc
sbb
xchg
dec
popf
ljmp
iret
lock
lea
mov
dec
arpl
xor
cs
mov
add
xor
push
sub
out
stc
xchg
inc
cwtl
in
add
shr
rcrl
lahf
add
jmp
lret
cld
lock
loope
adc
fs
inc
add
dec
sub
pop
aaa
addr16
sub
push
adc
dec
insl
filds
js
testb
adc
shrl
xchg
in
jp
movsl
repz
add
fdivrl
int3
into
push
cmpsl
ljmp
xor
in
mov
push
shlb
add
or
mov
jns
xchg
lret
into
test
hlt
out
into
and
jecxz
cmovb
aaa
mov
scas
or
popa
sub
xchg
pop
fldcw
js
iret
les
es
mov
or
not
loope
loop
sub
std
cmp
mov
sub
jnp
mov
lea
mov
add
jge
jnp
fisubrl
xchg
adc
xor
adc
movsb
sbb
push
enter
test
and
ljmp
jecxz
lahf
push
ljmp
adc
mov
testb
xchg
insl
inc
shrb
ja
cmpsb
out
cwtl
mov
and
dec
in
or
rcrb
jo
shl
jge
mov
das
lods
cli
mov
nop
mov
push
inc
out
mov
jno
or
dec
sahf
adc
es
enter
pushf
adc
enter
fcompl
mov
in
mov
or
pop
loopne
int3
cmpsb
ret
cmc
cmp
lods
and
pop
jmp
adc
jle
stos
xchg
push
push
push
fwait
jle
ljmp
mov
rcrb
and
fwait
push
cs
dec
in
jbe
mov
or
push
in
fcmovnu
shl
insb
add
mov
std
mov
dec
fsubr
pop
xchg
mov
adc
xchg
popf
gs
cwtl
repnz
and
mov
pusha
or
add
sub
sbb
xor
inc
inc
mov
comiss
fwait
pop
push
mov
dec
push
dec
stc
mov
sbb
pop
rcrl
xor
rol
sbb
inc
loopne
hlt
sbb
lock
jo
sub
inc
jae
fld
inc
pushl
outsl
loop
pop
adc
shll
loope
jo
loope
or
fxtract
lds
cltd
ja
sbb
jnp
roll
sub
add
lcall
ret
lea
test
sbb
adc
push
sbb
jnp
imul
in
faddl
xor
bound
iret
test
shll
or
sahf
adc
shlb
clc
fs
dec
les
negl
jb
int
push
sub
cld
xchg
jecxz
stc
mov
rcl
sahf
js
pop
jno
xor
push
jne
in
xor
jbe
scas
cwtl
lock
pop
shl
mov
movsb
rorb
aam
xor
ret
jo
push
mov
dec
sbb
xchg
xchg
outsl
mov
gs
and
daa
xchg
sub
sub
mov
jno
ja
in
mov
jb
mov
add
pop
adc
stos
dec
sub
popa
ss
push
or
in
push
adc
lcall
fwait
stos
pop
out
mov
jbe
jae
pop
pop
and
mov
int
movsb
pop
inc
xchg
pushf
mov
bound
lret
fidivl
jmp
in
aam
and
sub
pop
lock
and
popf
int
adc
pop
mov
ret
mov
adc
push
insl
mov
or
xchg
jle
popf
mov
icebp
lods
sar
or
pop
es
sbb
xor
mov
mov
les
inc
and
push
pop
or
add
push
std
adc
cmpb
push
dec
xor
xchg
adc
adc
loop
icebp
lea
out
cmc
das
sarb
loop
aam
push
lret
clc
sbb
or
dec
movsl
sub
pop
dec
or
pop
cmp
adc
lret
pop
je
sub
push
mov
jecxz
pop
jne
aam
push
mov
sbb
int3
mov
idiv
inc
lret
shl
pop
mov
push
insl
sahf
cmp
pop
mov
into
xor
pop
addr16
mov
jne
dec
inc
sub
ret
out
jge
mov
xchg
xor
xor
push
fwait
icebp
inc
stos
and
stos
shl
shlb
sbb
mov
or
aas
mov
test
dec
and
and
mov
cltd
loop
cltd
add
pop
sub
sub
and
push
movsl
mov
push
cmpsb
adc
push
pop
jbe
mov
pop
pop
and
pop
clc
xchg
xor
aas
pop
dec
add
in
ret
popl
test
sub
adc
ljmp
icebp
push
cmpsl
into
xlat
test
inc
xor
cli
hlt
out
leave
mov
sub
jl
pushf
cmp
cmp
popf
leave
jle
pop
add
stos
adc
sarb
cmp
mov
leave
jns
cltd
cmpsb
push
cli
and
out
cld
fsubrl
dec
iret
testl
insl
std
imul
push
js
jecxz
dec
mov
jo
sub
fstp
dec
jge
jge
imul
mov
sahf
sub
test
call
stc
sub
pop
adc
or
push
jp
fnstenv
lret
push
out
sub
inc
add
cmp
adcl
xchg
push
popf
sti
repnz
cmp
cmp
insb
fs
out
xchg
sahf
mov
push
shl
xchg
jg
xlat
jnp
leave
pop
adc
sbb
je
xlat
mov
mov
sub
out
imul
stos
add
jb
lods
cmp
popl
daa
icebp
or
repnz
xchg
int3
dec
out
adc
mov
push
std
xchg
dec
mov
out
sbb
enter
shlb
rorb
or
mov
inc
sub
insb
out
xchg
sar
push
jle
xchg
cld
fs
nop
adc
popf
loopne
or
adc
pop
ljmp
lock
pusha
push
adc
ret
in
stos
cmp
and
xchg
aad
bound
sub
leave
cmc
ljmp
inc
add
xchg
enter
sbb
out
lds
jae
je
lock
jle
jmp
sbb
xor
addr16
push
stos
imul
cs
lcall
xchg
nop
cmp
mov
add
aas
mov
xchg
add
adc
ret
dec
push
repnz
fnsave
sub
lea
mov
fstpt
push
into
aad
push
les
adc
inc
xchg
xchg
enter
xor
sti
sti
xorb
mov
std
je
addr16
pop
enter
add
test
adc
mov
leave
adc
sub
mov
mov
je
test
std
and
xor
push
push
mov
xchg
sbb
mov
sub
mov
or
fnstsw
xor
jle
fildl
xchg
jo
sub
mov
cmp
loope
xchg
inc
cwtl
std
test
jle
inc
loopne
push
gs
push
pop
dec
mov
mov
add
and
sub
xor
cmpsl
mov
call
ret
sbb
icebp
push
inc
or
add
mov
mov
cmc
rcrl
pop
push
xchg
adc
mov
cmp
add
jnp
repz
cld
movsb
jmp
rol
xchg
sub
xchg
mov
insl
inc
sbb
fisubrl
mov
addl
sbb
xor
jge
lcall
jle
cld
jns
cmp
imul
push
xor
xchg
mov
adc
mov
movsl
hlt
cmp
push
push
call
cmp
movl
pop
test
cmp
pop
add
jo
mov
cmp
andb
xchg
loopne
sub
xchg
mov
rcrl
mov
mov
jg
inc
fidivrl
cmp
lcall
push
adc
mov
and
leave
in
sub
loopne
cmpb
and
sti
je
mov
lea
mov
loope
scas
dec
cmp
pop
mov
call
mov
ds
int3
adc
xor
jbe
test
ror
cmp
pop
gs
sub
stos
sub
xor
adc
pop
sar
pushf
fiadds
push
notb
and
iret
jl
xchg
in
loope
lods
xchg
lods
movsb
int
fcoml
pop
stos
sub
sbb
inc
imulb
pop
mov
cs
cmp
jmp
into
lcall
jae
cwtl
xor
hlt
lds
push
outsl
stos
leave
les
sub
and
pop
arpl
push
sub
inc
ja
stos
out
xchg
in
stos
cmp
mulb
std
popa
xchg
jno
shrl
inc
outsb
int
out
sbb
cmp
sub
jecxz
faddl
in
xor
mov
xchg
stos
jnp
fsubrl
ja
push
xchg
jmp
push
popf
das
rcrl
test
fdivs
pop
push
sahf
mov
mov
ss
or
divps
test
push
pop
idivb
or
add
test
iret
inc
inc
shrl
cwtl
mov
lret
divl
push
outsb
mov
sbb
ret
jne
dec
cmp
out
movsb
dec
lcall
icebp
pop
pop
shlb
or
push
pop
sbb
sbb
jmp
loop
loope
out
addb
add
cmp
jno
and
sbb
mov
outsb
fisttpl
sub
xchg
dec
call
mov
inc
test
dec
fdivl
int
pop
push
out
mov
adc
bound
and
push
and
mov
lahf
mov
les
adc
push
fst
popa
cmp
jmp
jge
inc
jp
cmp
loope
xor
adc
cmp
cmc
rorl
mov
shrb
jb
xor
mov
mov
xor
xor
loopne
adc
sub
xchg
rcrb
xchg
mov
sahf
out
mov
add
mov
fildll
sub
xor
dec
rorb
testl
pop
inc
out
cmp
sub
adc
shl
ljmp
in
inc
xor
lock
sub
or
divb
mov
push
inc
push
gs
xlat
xor
add
sbb
fucomi
lods
dec
or
mov
push
insb
xor
addl
repz
out
inc
push
cmp
shrl
add
push
leave
cmp
mov
loop
dec
hlt
sbb
and
inc
inc
hlt
mov
sbb
repz
lcall
push
lret
in
cmp
sbb
sub
jbe
inc
negb
insl
inc
cmp
push
ja
cmp
test
pop
jb
nop
mov
enter
repz
lds
outsl
ja
or
pop
xor
cmp
mov
popl
lret
sub
fistps
add
mov
mov
ret
fdivp
cmp
inc
and
iret
push
pop
rcll
sub
mov
xchg
out
lods
mov
cli
cmp
add
scas
cld
fs
xorb
sbb
push
pop
imul
movsl
or
faddl
sbb
mov
cmp
cmp
and
mov
leave
lods
leave
cmpb
push
test
mov
sarb
jmp
mov
pusha
int3
cltd
js
xor
fistps
jg
add
fs
mov
mov
inc
in
std
pushf
inc
negb
ss
xchg
xchg
mull
xchg
ljmp
inc
rolb
repz
lock
cwtl
mov
icebp
adc
out
cli
arpl
flds
mov
add
jo
test
stc
jae
mov
sub
test
jecxz
inc
mov
xchg
leave
out
add
sbb
inc
shll
jb
testb
cmp
cmp
mov
arpl
inc
js
lods
jo
sbb
nop
cwtl
push
and
cwtl
stos
xor
and
cmpb
mov
loop
inc
mov
aam
imul
xor
movsb
ficoms
leave
ja
nop
adc
xchg
mov
mov
scas
shll
cmp
testb
lock
inc
or
fldt
mov
pop
sbb
ror
addr16
cwtl
cmp
jp
icebp
les
mov
cmp
arpl
mov
jne
arpl
bound
addr16
pop
jns
sub
mov
insb
pop
ss
ret
inc
mov
movsl
clc
movsl
dec
mov
inc
xor
icebp
es
fstpl
mov
mov
add
xchg
das
loop
xchg
mov
sub
xchg
in
mov
xlat
mov
and
jl
dec
rol
aaa
mov
dec
pushf
loope
sub
stos
and
loope
aas
sbb
xlat
shll
in
orl
sbb
or
sbb
xchg
jae
or
xchg
std
push
je
arpl
cld
loop
test
out
dec
call
mov
and
repz
in
ret
aad
and
push
and
inc
fildll
and
or
xchg
fwait
mov
pushf
out
add
insl
js
mov
xorl
push
psubsb
adc
xchg
pop
push
mov
into
out
mov
cmp
push
int3
mov
sbb
fwait
les
scas
pop
je
das
frstor
test
jno
cmp
and
int
cmp
ret
push
xchg
push
xor
dec
pushf
ljmp
xchg
call
notb
imulb
andl
add
sahf
dec
and
sahf
jo
sbb
dec
mov
sbb
sbb
mov
rorb
xchg
inc
xor
push
leave
add
ds
and
dec
and
daa
sbb
inc
mov
adc
mov
aad
xor
pop
mov
mov
shrl
xchg
pushf
inc
push
push
pop
xchg
cli
nop
push
sahf
add
lods
jecxz
jp
or
xor
fistpll
mov
mov
roll
xor
fisttpl
xchg
xor
test
cmc
aam
push
or
or
stos
in
or
insl
int3
xchg
icebp
cmp
into
push
push
pop
mov
push
mulb
in
cmp
scas
jnp
adc
enter
dec
adc
cmpsb
movsl
sbb
imul
mov
jnp
cmp
cwtl
leave
iret
pushf
dec
mov
or
test
jb
test
mov
in
pop
bound
imul
fisubl
pusha
push
dec
test
push
lock
shrd
test
into
scas
pop
mov
bound
in
pop
adc
adc
sahf
into
fcomip
repz
dec
xchg
fcomp
sub
sti
cli
dec
in
aad
cli
loop
pop
hlt
movsl
addr16
push
ds
popf
pop
adc
nop
das
jbe
jo
mov
jbe
loopne
jo
cli
lret
cwtl
jmp
js
add
mov
test
jg
and
js
push
rcrl
sbb
into
xchg
popf
cli
xlat
inc
and
in
sbb
out
ds
fwait
and
mov
cmc
mov
pop
mov
nop
cmpsb
imul
cld
leave
jg
subb
jg
stos
lea
add
jo
cmp
mov
dec
fnsave
cmpsb
sub
push
sub
fcmovnu
sub
repnz
mov
mov
pop
inc
adc
dec
lods
sahf
dec
das
cmp
xor
pop
or
dec
xor
cmp
push
mov
jb
mov
ficoml
sarb
sahf
les
pop
adc
mov
scas
inc
adc
inc
xchg
sbb
js
push
jmp
outsl
ja
pop
xor
pop
pop
stos
mov
or
dec
dec
outsb
pusha
mov
xor
dec
test
dec
test
add
subl
xchg
out
ret
aam
scas
pop
sbb
xchg
int
add
xchg
int
movsb
sahf
mull
cld
les
and
or
xor
out
popf
mov
and
mov
and
test
sub
mov
sbb
adc
and
popa
sbb
hlt
cwtl
adc
iret
inc
cmpsl
enter
mov
rclb
xchg
push
loop
push
cmp
arpl
lods
or
jmp
testb
xchg
das
lcall
les
and
cs
mov
insb
mov
xchg
js
inc
das
fldcw
xchg
std
jne
jle
dec
test
mov
test
sub
xor
cwtl
push
pop
dec
pop
cmc
adc
in
inc
lea
aam
pop
pop
jmp
sbb
out
fildll
hlt
cli
xchg
push
jbe
fisttpl
push
push
scas
test
js
pop
cli
mov
pop
idivl
int3
sub
mov
nop
sbb
xchg
adcb
mov
push
push
aad
or
and
dec
cmp
aaa
scas
dec
pop
xchg
dec
cli
sbb
and
mov
mov
addr16
jno
pop
call
or
mov
data16
mov
aaa
jmp
out
jo
icebp
ret
rdmsr
pop
gs
and
adc
andb
ret
xchg
imul
xlat
cltd
mov
pusha
sti
mov
mov
shrl
int3
mov
cmp
out
fcoml
nop
and
mov
lods
add
and
sbb
add
push
jge
and
out
aam
xchg
cmp
fsubp
jle
frstor
scas
add
inc
movsb
adc
mov
and
fwait
cwtl
inc
je
cli
aaa
enter
in
lahf
pop
mov
shl
shll
xchg
fs
rcrb
imul
dec
fwait
inc
fcmovu
stc
pop
and
xchg
mov
je
inc
dec
adc
out
movsl
cmp
mov
add
shll
mov
xor
xchg
clc
dec
pop
cld
push
lcall
movsl
dec
sbbb
push
mov
insl
inc
lret
jl
pop
cmpsb
sbb
cmp
push
je
js
pop
or
cmpb
aaa
xor
adc
push
imul
es
xor
mov
imul
cltd
jecxz
cmpsl
pushf
in
pop
into
aad
popa
push
sub
dec
lret
mov
cmp
mov
test
xlat
roll
mov
lds
adc
sub
aas
aad
ljmp
xchg
jl
stc
roll
sbb
adc
inc
jo
sbb
pop
movsl
sbb
xchg
and
repz
mov
psllq
out
adc
aas
loope
pop
mov
sbb
mov
push
dec
dec
push
push
sbb
in
ss
sarb
jecxz
inc
stos
add
cmp
sub
aas
ss
push
xorl
jb
imul
addl
inc
jle
dec
jp
mov
mov
ljmp
jp
push
lods
xor
fimuls
mov
ret
push
adc
add
inc
cmc
cli
divl
and
sahf
sarl
aad
inc
fwait
icebp
mov
out
adc
jle
jge
shrl
and
push
out
ja
mov
shrl
test
mov
sbb
rorb
rcrl
ret
lret
sahf
out
into
sbb
sbb
push
mov
je
cmc
push
xlat
divl
or
fcmovnu
cmc
loope
and
out
mov
pop
jmp
repz
lret
ret
lret
call
dec
das
les
lods
rolb
pop
mov
jl
sbb
push
stos
jmp
mov
outsb
push
add
xlat
xchg
dec
sub
ret
adc
mov
xchg
lea
jg
popf
push
mov
imul
jmp
and
in
pop
jmp
fisttps
lea
xchg
pop
jmp
stc
subb
test
repnz
add
sub
jae
inc
xor
pop
sarb
lock
iretw
out
cld
xorl
out
test
adc
mov
icebp
push
rolb
and
push
shll
xchg
fwait
imull
popf
popa
xlat
cmp
aas
sub
test
jae
sahf
jo
cmpsl
shrb
add
mov
insl
iret
loop
lret
es
or
mov
imul
add
pop
movsl
jle
and
mov
sub
add
push
dec
lahf
or
sbb
mov
sahf
pusha
repnz
imul
aad
nop
add
mov
sub
pop
xor
push
inc
xor
push
ret
fwait
test
divb
push
xor
pop
testb
and
fsub
jge
les
lahf
loope
rclb
mov
mov
and
inc
and
fld
mov
sub
fistpl
imul
ss
repnz
leave
mov
in
mov
xchg
sbb
jge
sti
inc
jle
not
js
mov
mov
fs
rorl
and
cmpsl
jnp
cmp
rcll
jnp
cs
push
jle
hlt
pop
hlt
testl
jb
inc
shlb
cmp
sub
mov
push
cmc
inc
mov
outsl
xor
fmuls
imul
in
jns
into
sti
es
sub
jno
cmp
dec
mov
push
lea
jge
daa
pop
test
sub
jge
popf
xchg
jns
ds
push
sbb
mov
cmpsl
cmpb
stos
sub
add
scas
xchg
pushf
or
push
mov
int3
int
xchg
lods
sahf
xor
add
push
xchg
jle
mov
jp
lea
sub
mov
jp
mov
jnp
sbb
pop
sub
add
inc
loope
aas
xchg
push
inc
or
aaa
jle
pop
andw
pop
pop
fisubs
jl
outsl
push
adc
cld
xchg
push
daa
xchg
xchg
adc
jmp
aad
cmp
and
test
addr16
add
aad
dec
dec
leave
shll
lret
xchg
fsubp
arpl
pop
mov
add
iret
add
cmpsb
xchg
dec
mov
mov
sub
push
loop
movsb
in
mov
xor
push
js
insb
cli
pop
sti
adc
sbb
hlt
es
ret
imul
inc
test
or
test
sub
cmp
daa
in
sbb
adc
out
push
jmp
inc
pop
mov
loopne
mov
mov
sbb
push
jno
and
data16
insl
subl
push
add
cmp
testl
in
movsb
adc
mov
dec
dec
pop
cwtd
arpl
inc
data16
imul
jae
mov
xorl
or
or
cld
pop
pop
adc
dec
adcb
ss
jle
dec
movq
pop
loop
add
movsl
in
jno
xchg
and
push
aad
into
cmpsb
and
sbb
aas
mov
daa
add
jb
fdivrl
sbb
iret
sbb
mov
in
cmpsl
and
call
jle
lock
adc
adc
out
mov
loope
aaa
dec
mov
and
pushf
sbb
mov
inc
stos
daa
aad
sub
jge
aaa
sarb
push
pop
insb
adc
test
lret
add
inc
stc
scas
jae
mov
mov
xchg
subb
mov
aaa
aas
mov
daa
sbb
mov
sub
push
cmp
mov
add
cmp
cltd
add
push
xchg
ret
pop
adc
addr16
mov
lea
divb
sbb
push
loop
dec
sbb
and
test
push
push
push
jns
inc
inc
xchg
cmp
fsubr
mov
jo
inc
imul
xchg
js
bound
mov
jle
int
jmp
adc
int3
mov
mov
cmpsb
fstp
fldcw
sub
and
into
es
in
ret
adc
mov
idivl
jle
dec
out
push
in
add
push
pop
sbb
push
and
std
or
jle
add
xchg
add
outsb
inc
test
add
cmp
inc
mov
stc
sbb
cmpsl
push
addr16
test
inc
call
mov
cmp
enter
adc
in
fldl
iret
pop
ds
movsl
or
out
dec
shll
lods
push
inc
imull
arpl
mov
add
imul
insl
ljmp
lock
pop
cmp
push
insl
and
movsl
ja
inc
stos
arpl
jb
push
imul
fwait
lds
pop
mov
jle
sub
mov
jmp
das
aad
stos
pop
pop
sbb
xchg
pop
xchg
aaa
sti
dec
std
adc
jo
mov
punpcklwd
mov
sbb
pop
jbe
push
or
lock
cld
scas
push
fildll
add
ss
push
xor
xchg
ret
movsb
inc
or
cmpsb
sarb
dec
or
movsb
sahf
inc
stos
sbb
lds
push
inc
gs
and
and
outsl
sbb
sbb
cmp
cwtl
cmp
mov
mov
outsl
sub
dec
in
jb
repnz
mov
enter
xchg
pop
les
and
in
mov
mov
mov
movsl
popa
loop
leave
add
or
lods
adc
cmp
not
mov
mov
cmc
fwait
push
xchg
jp
xor
fs
xor
lcall
jmp
in
jmp
mov
adc
cs
xchg
jmp
movsl
sti
mov
es
scas
std
pop
pop
cmp
rclb
insl
and
or
out
jmp
dec
or
mov
mov
mov
stos
fstpt
js
adc
lcall
cld
loopne
mov
aam
lea
ja
pushl
sbb
pop
pop
mov
daa
imul
sub
sub
into
lods
push
stc
xchg
inc
jb
inc
jl
jg
into
dec
pop
or
shr
shrb
mov
js
imul
mov
stos
jmp
sub
fists
and
ja
repnz
sub
cmp
fnsave
adc
or
popa
repz
test
adc
push
cmpl
fimull
or
xor
das
cmp
mov
jecxz
clc
cmp
mov
sar
lcall
scas
lcall
add
hlt
scas
popa
add
add
mov
jge
insl
ret
mov
jmp
push
push
push
inc
or
stos
and
pushf
xor
fsubr
push
jecxz
mov
mov
dec
jb
inc
sub
cltd
and
popa
xchg
fs
loopew
fisubrs
jno
cmp
xchg
cmp
inc
pusha
cmp
sbb
sub
push
inc
push
inc
jbe
outsl
push
or
std
jb
loope
nop
negl
jg
data16
in
jge
scas
pop
mov
outsb
fwait
rclb
jp
mov
and
xor
push
cmc
inc
mov
jecxz
lods
mov
mov
enter
scas
lret
xor
push
sar
dec
imul
pop
cmp
jae
jmp
movnti
mov
mov
mov
outsl
mov
loop
add
bound
inc
testb
out
aaa
xorb
or
aaa
push
adc
aad
repz
lock
cmp
sub
mov
add
mov
test
mov
sub
jb
sbb
cwtl
shr
loope
movsb
mov
aas
add
popa
insb
xchg
fnsave
mov
inc
xor
or
jecxz
std
xchg
add
and
mov
test
add
jmp
repz
xor
push
or
data16
pop
je
adc
loope
outsl
sbb
out
inc
loopne
or
out
in
lods
pop
out
jecxz
inc
arpl
or
jmp
sub
aam
sub
or
imul
cmc
push
pushf
stos
lcall
sub
push
scas
add
pop
adc
pop
mov
test
je
push
push
mov
pop
sub
mov
nop
pop
repnz
arpl
cld
jns
movsb
fmuls
aam
std
repnz
mov
lds
push
pushf
stc
testb
jmp
rolb
movsl
adc
and
xchg
xor
jmp
xchg
mov
call
imul
add
out
dec
jns
cmp
or
inc
hlt
lods
adcl
fmul
pushf
xor
cmp
shlb
lret
aad
dec
fnstcw
adc
repnz
mov
add
leave
inc
xchg
jb
shl
add
pushf
dec
movsl
mov
jns
pop
out
jp
xchg
popa
sahf
sbbl
jo
push
daa
hlt
push
mov
push
xchg
mov
stos
mov
loop
stos
data16
mov
mov
lods
fadds
ljmp
xchg
filds
push
cwtl
cmpsb
sbb
jno
test
cmpl
rol
adc
fisubrl
clc
jmp
int
pop
mov
shll
ss
or
push
cmpsb
adc
repnz
mov
xor
push
cs
sbb
sahf
subl
mov
cmp
shll
mov
push
mov
aam
in
pushf
mov
xchg
roll
inc
enter
test
int3
incl
xor
movsl
or
ja
mov
mov
sub
adc
sbb
addb
popa
test
mov
pop
and
testl
mov
mov
mov
mov
movsb
inc
pop
inc
xchg
cmp
insl
jmp
mov
sti
inc
mov
ljmp
out
cmpsb
xchg
insb
push
mov
xchg
mov
mov
iret
mov
mov
mov
sti
xchg
inc
gs
test
outsl
adcb
sub
or
mov
dec
xchg
in
push
pop
enter
pusha
insb
push
sub
xchg
mov
ljmp
lods
loope
cmp
popa
xchg
mov
fmull
mov
fisttps
dec
cld
xchg
mov
push
das
sahf
lock
xchg
jns
dec
cmpsl
dec
out
out
mov
repnz
mov
dec
nop
stc
pop
xchg
pop
xor
xchg
xchg
and
sbb
jge
imul
cmp
movsb
and
jmp
in
add
movsl
inc
mov
jbe
std
ret
aam
adc
in
jecxz
fcoms
gs
aaa
push
loopne
fs
iret
mov
repz
mov
push
negb
or
jae
int
jb
jmp
jmp
mov
out
xor
aaa
dec
subl
in
pop
popl
sbb
imul
jmp
idivw
hlt
pop
shlb
fstpt
sub
movsb
rcr
dec
inc
adc
xor
pushf
gs
scas
mov
aam
repz
push
stos
xchg
or
mov
popa
movsl
mov
jge
cmp
leave
dec
repz
aad
push
or
fisttpll
pop
xor
rep
push
pop
pop
incl
push
fucom
mul
add
jno
adc
ljmp
je
aas
bound
pop
pop
adc
add
dec
ss
sub
sar
loop
popf
arpl
mov
mov
out
jg
cwtl
dec
sbb
adc
lods
ds
pop
mov
mov
and
pop
xchg
mov
or
je
sub
fdivs
cli
cmp
mov
and
stc
bound
or
cltd
das
sti
cmpsb
add
and
add
xchg
popf
insb
mov
cli
ds
pushf
sub
enter
adc
insl
loope
cmp
adcb
push
adc
jb
insb
xor
ss
js
fistpl
sbb
jg
and
and
mov
mov
or
jns
xchg
lcall
lahf
sbb
aam
jp
iret
inc
out
add
sbb
lods
or
jns
or
push
inc
fldenv
scas
cmpsb
mov
or
push
jnp
popa
push
xchg
je
enter
andb
jb
imul
loope
sbb
dec
sarl
leave
loopnew
xor
pop
outsb
clc
inc
jns
lret
mov
ss
out
pushf
in
test
std
and
xorl
add
test
mov
fistpll
imul
jnp
sahf
pop
ss
mov
shlb
sbb
xor
test
inc
cld
imul
pop
call
stos
in
lcall
js
pop
xchg
xor
mov
in
push
xchg
xor
jno
pop
jge
mov
mov
push
jecxz
xchg
mov
mull
into
stos
fnstcw
mov
jmp
popa
xor
ja
dec
outsl
cli
ret
inc
dec
cmpsb
sub
inc
mov
jne
xchg
push
push
mov
mov
dec
bswap
mov
pop
pop
pop
idivb
daa
sarb
fs
insb
mov
adc
test
and
sub
sti
jbe
jns
jne
mov
inc
lcall
pop
cmp
add
test
ficoml
sarb
ficomps
ja
aad
mov
clc
dec
rclb
jecxz
xorb
nop
mov
aaa
outsl
jmp
or
repnz
loope
inc
repnz
mov
fisubrl
jecxz
bound
and
rcl
adc
jnp
pop
orl
sbb
outsb
push
push
jmp
xchg
fs
sub
dec
movsl
ja
push
test
ret
js
addr16
xchg
or
bound
addl
aas
leave
pop
inc
lds
adc
push
inc
out
mov
adc
ret
sbb
test
scas
inc
outsb
fcompl
adc
sbb
inc
sbb
mov
add
pop
int3
jg
jae
inc
test
ljmp
pop
xor
push
xor
sbb
cmp
or
sbb
stc
bound
insb
mov
add
mov
xor
pop
jge
test
push
loopne
pusha
sahf
mov
add
rcrl
cli
add
jb
addr16
stos
scas
in
xchg
imulb
jmp
lahf
sub
jp
xchg
sub
cmp
cmp
js
shrb
fwait
dec
dec
fistpl
and
and
sub
cmp
stc
or
mov
jns
repz
pop
int
sub
add
int3
mov
and
icebp
and
jbe
fstl
lea
and
sbb
push
jne
xor
mov
fists
pop
jmp
xchg
mov
xchg
mov
sub
scas
lods
fs
inc
xor
mov
dec
or
imulb
mov
arpl
ljmp
arpl
xor
imul
nop
jo
dec
and
rcll
mov
sub
pop
rorl
loopne
pushf
popa
xchg
aaa
fst
das
ss
cltd
cmp
mov
xchg
mov
xlat
pop
std
or
shlb
add
gs
int3
das
dec
or
pop
pop
cwtl
add
inc
mov
fs
xor
sbb
and
int
movsl
pop
xchg
mov
pop
fidivl
inc
mov
cmpsl
das
imul
je
add
jo
insl
mull
hlt
push
in
inc
aad
or
nop
das
repz
pushf
jae
dec
aam
add
push
addl
inc
iret
lock
lahf
lods
insl
fistpl
and
and
ljmp
and
push
adc
pushf
xor
rorb
mov
insb
xor
pop
cmp
mov
xchg
mov
pop
and
push
pop
popw
call
pop
notl
pop
adc
jne
scas
cmc
or
outsb
xchg
js
pop
repnz
enter
call
cmp
push
out
push
inc
xchg
loopne
movsl
hlt
dec
popa
hlt
and
mov
sbb
lcall
mov
fildl
rcr
into
in
aad
jnp
dec
mov
jnp
lret
mov
xor
out
out
pop
mov
pop
jnp
fsubs
jp
sbb
test
and
adc
pop
xchg
repnz
cwtl
stc
add
repz
xchg
jmp
mov
sub
outsb
adc
push
cmp
imul
jg
stos
push
daa
cmp
cs
ja
dec
xlat
in
lea
das
mov
into
lahf
inc
dec
xor
cmp
rcrl
in
aaa
cmc
mov
and
ret
cmp
mov
push
or
sub
cmp
in
inc
call
mov
xor
jl
aas
test
jno
sbb
pop
inc
push
into
sub
lcall
rol
mov
mulps
ror
nop
cmpsl
and
test
orl
fmull
test
xchg
cmpsl
add
pop
js
test
test
adc
out
into
jecxz
adc
sbb
cs
inc
test
mov
lock
lcall
pop
pusha
les
cmp
mov
lock
addr16
xorl
aaa
rcrb
xor
sub
cmp
into
mov
mov
dec
in
inc
xchg
std
lcall
sbb
idivl
and
jmp
lods
pop
push
xor
in
cld
xor
xchg
fsubr
push
mov
into
jb,pt
das
ss
insl
test
pop
test
outsb
sub
cmp
mov
xor
or
subl
mov
pop
mov
push
movsb
adc
push
mov
clc
lea
int
pop
xor
fimuls
js
mov
adc
dec
lret
adc
inc
push
xor
jle
sub
test
cmpsl
mov
push
jbe
fstl
mov
cld
es
push
jne
pusha
cs
push
pop
jle
mov
orb
das
mov
mov
cmp
push
gs
mov
mov
xchg
push
push
sbb
lock
nop
cmpsl
xchg
insl
sbb
push
push
push
mov
xor
xchg
xor
cltd
in
in
pop
lods
sbb
jle
adcb
inc
cmp
add
mov
mov
movsl
jl
insb
mov
fcom
jbe
inc
or
xchg
sub
cmp
sarl
into
cltd
xchg
clc
in
dec
ss
mov
negb
mov
loop
mov
int
decb
xchg
out
push
adcl
mov
add
aad
fs
test
xor
add
pop
inc
arpl
jno
fldt
shll
cltd
rcrl
loopne
lds
pusha
addr16
cmp
int3
in
testb
mov
cwtl
sbb
and
das
in
push
ljmp
add
dec
stos
fdivs
mov
dec
jno
mov
jmp
jo
jecxz
cli
imul
and
jne
loope
push
lret
inc
mov
int3
ljmp
lcall
dec
sub
outsb
mov
cld
xchg
hlt
call
into
in
call
mov
fisttps
inc
cmp
aas
fisubs
out
and
popa
add
or
push
mov
mov
xchg
xchg
out
mov
push
jo
arpl
pcmpgtd
push
test
push
stos
call
xlat
icebp
cld
or
inc
mov
add
repnz
push
jno,pn
sub
mov
jns
shll
mov
add
xchg
sbb
outsb
jne
repz
call
in
jne
or
add
outsl
xor
fbstp
lock
jb
fbstp
xchg
out
xor
push
cld
es
pop
push
mov
sbb
inc
ret
dec
mov
cld
ljmp
out
outsl
out
fisttps
pop
dec
xchg
insb
dec
mov
cmp
stos
rol
mov
xchg
mov
xchg
imul
inc
mov
imul
sbb
in
pop
or
sub
mov
jae
fistl
push
push
dec
loop
pop
jecxz
in
jnp
in
jb
jl
and
dec
adc
pushf
push
pop
stc
lret
xchg
scas
daa
jbe
lahf
imul
sbb
js
std
out
cwtl
jl
jno
push
outsl
sub
lods
lea
iret
add
add
mov
dec
mov
arpl
div
xor
int3
xor
xor
mov
xor
iret
push
icebp
xchg
pop
xchg
cmp
add
pop
xchg
fwait
js
xchg
cmp
pop
cltd
mov
aam
in
adc
and
hlt
in
push
sub
movsl
je
sbb
sub
pop
ss
movsl
addr16
hlt
ja
movsl
int3
stos
push
cli
inc
xchg
mov
movsb
notb
xchg
push
ljmp
lods
icebp
popf
cmp
lock
lahf
int
loop
icebp
add
mov
test
in
cmp
notb
mov
and
mov
test
sbb
and
sarl
lods
jmp
lret
push
jecxz
xchg
xchg
pushf
in
inc
jnp
jo
pop
in
es
cmp
pop
int
jo
jle
lods
jae
xor
mov
add
push
rcr
xlat
adc
loopne
cmp
pop
xchg
jnp
shl
xchg
cmp
mov
ret
cmp
push
dec
adc
add
inc
mov
mov
pusha
push
jb
aaa
je
pop
xchg
push
cmc
cmp
gs
pop
sbb
shll
xchg
mov
fbld
and
xchg
xor
sub
cmp
and
jae
add
jp
in
ja
test
push
xor
fstpt
iret
hlt
cwtl
xor
mov
mov
repz
lods
ds
mov
push
mov
mov
jmp
iret
sahf
rcrl
out
push
mov
jmp
pop
push
icebp
cmp
inc
lods
mov
and
pop
sarl
xchg
rcrl
or
ss
mov
ret
adc
cli
mov
sahf
and
out
mov
xlat
hlt
or
xchg
stos
fsts
jnp
dec
push
int3
and
mov
jno
dec
mov
ja
shlb
ja
dec
jge,pn
xor
dec
xor
stos
dec
cltd
push
pop
mov
cmp
in
dec
cli
addb
clc
or
jp
jae
mov
cmpsb
into
int
cmp
cmp
andl
pushf
mov
int
jo
ds
movb
adcl
ljmp
sub
inc
into
test
scas
fstps
fists
movsl
movb
xchg
pop
and
mov
popa
dec
or
fwait
lea
sub
pop
loope
fwait
popf
cwtl
inc
sbb
mov
and
mov
push
outsl
and
pop
pop
lret
shlb
jp
in
fistps
bound
ljmp
scas
mov
xchg
cmp
fwait
mov
data16
stc
sub
mov
add
push
mov
mov
stc
inc
out
mov
fbstp
shlb
xchg
or
loop
adc
hlt
cs
mov
jge
push
xlat
sarb
enter
push
add
cmpsl
sub
mov
xchg
sbb
mov
clc
push
and
mov
rorl
add
bound
inc
jecxz
aaa
mov
movsb
mov
inc
ret
adc
lret
adc
dec
js
nop
jbe,pn
and
shrl
outsl
aam
shl
push
aam
mov
dec
jne
pop
in
fcomp
insl
push
js
pop
out
imul
inc
inc
les
test
scas
or
sub
call
cmpsl
inc
pop
lret
das
and
push
and
in
pop
in
aad
std
inc
add
xor
sub
xor
aad
mov
mov
shrl
and
jp
mov
leave
test
out
mov
outsb
movsb
sbb
mov
pop
cmp
arpl
mov
mov
fldz
cmp
cmp
mov
add
lea
pop
mov
jne
dec
inc
fstps
xchg
mov
test
push
add
push
ja
mov
jno
pusha
add
sub
push
jl
popa
ds
lcall
repz
xchg
insl
sub
scas
mov
scas
add
daa
inc
and
inc
jl
xor
jmp
lcall
fdivl
popa
or
cld
and
cmp
fldcw
inc
cmp
push
cltd
push
outsl
aad
insl
jmp
sbb
sub
shr
pushf
adc
movl
outsl
fcomps
rcrb
adc
fisubs
cmp
sahf
sti
push
pop
push
adc
out
jnp
sub
xor
push
cmp
shlb
and
push
and
pop
pmulhw
aas
loope
aas
div
jae
repnz
mov
inc
mov
testl
out
test
in
cmp
fwait
jne
and
imul
repnz
test
dec
ds
mov
push
cmp
xor
aas
vmovlpd
or
repnz
mov
cmpsb
xchg
inc
out
sbb
lahf
mov
insl
push
daa
clc
icebp
sti
adc
sahf
pop
jno
fists
add
adc
adc
xor
jp
iret
cmp
dec
test
add
xchg
pop
sbbl
ja
test
xlat
push
js
dec
jne
cmc
sbb
xlat
mov
sti
cmp
lahf
rcrl
pop
or
cmc
sbb
shr
sbb
jl
adc
mov
cltd
xor
adc
mov
popfw
mov
mov
imul
jl
cmpsb
dec
inc
cli
push
cld
mov
push
call
pop
repz
jmp
cmpsb
loop
mov
lods
jle
outsb
scas
dec
pusha
fsubrp
cmp
dec
lahf
mov
xchg
mov
pop
mov
data16
jae
test
mov
cmpsl
arpl
clc
out
movsb
iret
adcb
inc
cmc
sub
lcall
aaa
das
or
icebp
test
jo
cmc
pop
sarb
cmp
and
fdivr
mov
mov
iret
lret
loopne
movsl
sti
sub
mov
lods
popf
scas
xor
xchg
sub
sbb
sahf
jge
or
mov
cmp
push
mov
js
jae
shlb
gs
cmp
insl
cld
in
push
mov
xor
mov
xchg
and
fcompl
dec
jno
aam
scas
bound
inc
push
sbb
sbb
rcl
adcl
lcall
sub
inc
nop
mov
jmp
sbb
jno
insb
push
lods
push
push
sub
mov
cwtl
dec
lock
test
aas
mov
push
and
sahf
pop
mov
icebp
jae
enter
mov
mov
jle
dec
cmp
xor
ret
xor
mov
and
enter
jmp
add
xchg
sbb
lods
jmp
lock
popa
dec
lahf
cmp
lcall
mov
sub
std
or
sbb
and
stc
out
ja
push
stc
and
iret
fsubp
sbb
call
add
and
sbb
rcl
add
lods
stos
out
xchg
jmp
mov
test
and
vmovntpd
scas
ret
scas
ss
punpcklbw
lret
xchg
repnz
pop
stos
mov
shlb
push
and
xor
lret
test
sti
or
inc
in
and
inc
adc
and
repz
lret
in
mov
cs
aaa
jae
or
and
out
mov
push
jb
mov
fwait
aas
pop
shll
and
imul
xchg
cmp
jbe
js
pop
jns
cwtl
xchg
testl
fbstp
jg
mov
dec
sub
out
push
outsb
fidivrl
dec
pop
clc
lods
mov
pop
pop
mov
push
xor
lea
xor
cmp
mov
test
imul
sti
out
cltd
mov
test
cmp
sub
push
dec
mov
lock
movsl
xchg
push
sub
hlt
jmp
insb
ja
jns
xor
imul
out
xor
into
inc
mov
es
out
mov
clc
out
sub
int
in
shl
push
inc
adc
mov
out
push
dec
push
sub
hlt
fildl
shrl
insb
jnp
stos
sbb
gs
sub
cmpb
out
shll
jmp
adc
sbb
xor
pop
pop
push
and
push
or
xchg
ret
push
or
mov
lods
xlat
add
xchg
cwtl
pop
fwait
pop
in
call
adc
sbb
adc
fdivrl
les
adc
ret
outsb
mov
dec
push
push
push
mov
push
mov
lods
out
cltd
inc
push
out
mov
pop
loope
jp,pt
mov
push
cwtl
jmp
mov
ss
int
mov
fcoms
in
mov
je
aad
adc
outsl
int3
inc
mov
cmp
adc
xor
add
xchg
adc
fldl
outsl
jns
int3
push
sbb
movsb
icebp
dec
popf
dec
xor
es
aaa
mov
sti
enter
in
jnp
cmp
dec
scas
cwtl
test
aas
iret
mov
imul
shlb
add
mov
test
mov
movsb
cmp
jnp
loope
mov
mov
and
inc
jg
fnstenv
fmuls
adc
dec
xchg
fnstcw
jg
dec
test
lret
fsubrl
cmp
jbe
mov
jns
in
repnz
addr16
push
scas
adc
stos
aas
ljmp
sbb
aad
or
sbb
sub
jmp
cmc
outsl
test
push
outsb
faddp
sbb
enter
icebp
leave
sub
scas
lret
mov
inc
shrl
inc
ret
push
cld
dec
jp
out
sar
lods
loope
aam
inc
and
xor
mov
inc
mov
lcall
std
cli
sub
adc
lret
pop
mov
and
ljmp
jge
or
outsl
ss
and
and
fstpt
je
jbe
push
jecxz
inc
jne
repz
ds
call
push
dec
jb
fstpl
mov
jg
mov
jae
lcall
sti
jle
xor
imul
cmp
push
pop
add
jecxz
inc
xor
pop
adc
jae
imul
out
push
mov
add
xor
mov
push
into
mov
mov
js
movsb
xor
xlat
add
pop
cwtl
lret
lods
mov
dec
xor
hlt
pop
or
lret
mov
stc
push
add
in
lock
dec
fwait
and
inc
aad
inc
mov
or
test
xor
pop
ss
jmp
scas
push
xchg
sbb
fld
in
jo
inc
pop
imul
inc
pop
jg
andb
lahf
sbb
xorb
cmp
push
in
js
in
jl
jbe
push
int3
loope
inc
sbb
xchg
loop
add
mov
andb
xor
push
sbbl
sub
cli
pusha
xor
adc
push
mov
push
ljmp
mov
add
or
imul
das
inc
lcall
sub
sbb
ds
les
sbb
sub
into
iret
mov
add
test
jbe
cmpsb
inc
xchg
mov
call
or
dec
loopne
mov
pop
sub
adcb
push
mov
mov
sti
fidivl
mov
xchg
xchg
les
dec
out
sub
fnstcw
cwtl
pop
adc
movsb
xchg
dec
and
sbb
lcall
outsl
cmp
push
jnp
adc
xchg
bound
aas
lcall
pop
push
add
jmp
cmpl
cmp
dec
aaa
xor
mov
cmp
add
push
adc
fisttpl
repz
or
ud2
inc
inc
int
mov
cmp
fnstsw
out
add
daa
xchg
aas
js
mov
stc
scas
sub
add
add
ror
popf
and
stc
hlt
daa
jo
arpl
cmp
fildl
or
dec
cmp
fnstcw
xchg
mov
dec
mov
mov
cs
mov
pop
iret
les
data16
hlt
xchg
sub
mov
push
adc
or
mov
in
das
repnz
mov
push
pop
adc
and
repz
shlb
xor
pop
shl
push
cmpsb
arpl
imul
lock
cltd
je
loopne
rolb
mov
popa
enter
pop
cld
xchg
sub
mov
push
imul
fsts
xlat
fsubl
xchg
js
jmp
push
adc
jp
add
jl
xchg
repnz
shrb
dec
mov
ljmp
icebp
cmp
or
pslld
inc
jne
xchg
addr16
and
stos
sarb
sbb
sbb
jb
xchg
loop
nop
es
jb
dec
out
es
mov
flds
mov
mov
lretw
cld
mov
in
nop
negl
or
sti
add
mov
or
outsb
stos
gs
fiadds
sbb
push
xchg
push
int3
aas
lret
add
or
lea
jae
js
jecxz
lock
add
aaa
aaa
in
push
bound
cmp
or
xor
push
pusha
cmp
sti
push
or
lea
in
sub
mov
out
movsb
mov
xchg
sbb
lahf
pop
inc
nop
inc
sub
sbb
enter
jnp
jl
inc
std
out
out
ljmp
xor
aam
xor
xor
add
ret
in
push
cli
sbb
adc
pop
stos
adc
xor
dec
in
insb
xor
test
jge
dec
in
loopne
mov
cmc
mov
cmpsb
imulb
jmp
and
adc
shrl
lock
lcall
in
les
stos
mulb
push
sub
fimull
scas
fcmovne
mov
mov
lret
pop
cld
dec
loope
in
adc
push
mov
cmp
sbb
cmpsb
jb
je
clc
out
aad
pop
outsb
ja
pop
rep
stos
sub
and
jne
cmpsb
xor
inc
imul
je
jno
or
pop
mov
mov
jmp
fwait
or
das
jg
movsb
inc
sbb
rcrb
mov
sbbl
xchg
adc
shlb
and
pop
fcomi
int3
and
jp
adc
outsb
and
test
xchg
xchg
jae
leave
stc
mov
fstpl
call
cmp
or
or
sbb
cmp
fstps
add
dec
adc
lds
or
mov
jge
inc
ficoms
movsl
repz
lahf
dec
hlt
fwait
adc
fiaddl
add
xor
cmpsb
pusha
out
push
hlt
xor
data16
push
dec
mov
ret
fmull
pushf
add
fdivl
mov
push
jno
push
leave
aaa
jo
lods
xchg
lods
jl
out
arpl
mov
inc
sub
jg
xchg
and
pusha
cmp
add
aas
cmpl
lods
cmpl
popf
mov
jae
cmp
fst
arpl
dec
pop
je
fbstp
adc
stc
adc
adc
pusha
mov
mov
cli
jnp
jae
insl
outsl
inc
mov
std
icebp
movsl
loope
pop
mov
and
jg
dec
int3
xchg
movsl
fsubrl
aam
push
pop
jnp
xchg
xor
jno
lcall
sub
pop
loop
jbe
push
sahf
pop
out
les
stos
sbb
cli
andl
add
jmp
bound
fisubrs
dec
xor
ret
lea
insl
dec
inc
in
xor
and
xor
adc
pop
mov
rorl
add
iret
push
out
mov
dec
lret
xor
mov
sbb
mov
inc
gs
push
mov
cli
stos
fbstp
jp
inc
fprem
cli
repnz
mov
add
nop
dec
push
adc
or
subb
push
imul
jp
jne
js
jae
in
repz
xlat
js
cmc
lahf
mov
dec
adc
hlt
insb
aam
pop
je
cltd
pop
and
xchg
stc
shl
mov
add
cli
lock
in
imul
imul
das
add
sbb
dec
sbb
lcall
out
out
psrlw
push
xchg
cmpl
jp
fistl
out
push
push
loopne
adc
push
divb
dec
cwtl
push
mov
add
inc
sbb
pop
std
cmp
adc
push
lods
insl
dec
movsb
cmpsl
jl
out
push
bound
sub
mov
sub
and
cmp
loopne
inc
orb
xchg
pop
xor
cmpsl
outsl
pop
clc
xor
shlb
lret
lahf
mov
mov
jge
js
pop
ss
pop
pop
pop
cmp
dec
popf
mov
imul
fcomi
inc
push
nop
stos
adcb
jae
mov
lret
push
lods
lock
push
adc
sub
and
mov
mov
es
add
adc
aas
ret
xchg
xor
stos
inc
mov
lahf
insl
mov
inc
arpl
shll
add
ss
lret
xorl
filds
jle
ds
jle
pushf
lret
sahf
and
cmpsl
cwtl
scas
pushf
or
subb
pop
and
int3
aam
mov
loope
std
inc
pushl
pop
mov
and
popl
mov
mov
popa
rcrl
and
rep
mov
pop
and
xchg
inc
divb
repnz
jae
out
add
and
jb
add
and
flds
nop
sbb
or
rclb
mov
mov
insl
stc
rol
jnp
jmp
ss
out
jecxz
lds
xor
add
xchg
cmp
ret
cmc
addb
call
dec
pop
and
dec
mov
outsb
jae
jo
pop
fstl
adc
stos
sub
loopne
in
jbe
pop
mov
fildll
or
pop
leave
cmp
jecxz
cli
scas
and
pop
mov
insl
mov
mov
pop
add
loop
insl
pop
stos
in
or
cmp
ret
test
pop
jne
mov
rolb
es
les
inc
add
subb
or
lcall
es
js
pop
adc
mov
cmp
pusha
js
scas
mov
jg
mov
fimuls
dec
pop
sahf
push
cmpsb
mov
mov
loop
jnp
imul
lea
mov
mov
cmp
jmp
ret
rorl
daa
mov
cmp
shrb
mov
fcoms
push
ja
mov
roll
adc
in
imul
cmp
test
mov
test
imul
push
jnp
adc
in
push
rcrl
jno
sarb
cmp
jmp
push
fcompl
pop
iret
fwait
or
jo
and
inc
mov
jno
rorl
push
in
inc
lret
ret
fiaddl
jecxz
add
xlat
fildll
icebp
pop
cmpsb
aam
movsb
subl
adc
inc
aad
and
or
cltd
fldl2t
adc
insl
xor
pop
leave
cwtl
push
lret
hlt
in
cmp
in
rorl
fildl
sub
mov
push
lret
mulb
sbb
mov
test
push
outsb
and
fdivr
lock
aaa
iret
mov
sbb
cmpb
sub
mov
pop
push
notb
mov
insb
xchg
stos
pop
jle
adc
pop
lret
popf
pusha
sahf
dec
push
ljmp
outsl
outsl
mov
movsl
push
jecxz
std
sbb
sub
xchg
mov
push
icebp
cmp
imul
pop
rcrl
movsl
pushf
call
mov
push
enter
inc
xor
ja
sti
jo
enter
adc
mov
icebp
xchg
push
or
lcall
pop
jnp
pop
daa
enter
cmpsl
loop
pop
push
xchg
xor
sub
xchg
test
cld
mov
sbb
push
cs
inc
jmp
sbb
add
sub
mov
push
roll
jg
cmp
andb
ds
in
mov
jle
xor
push
pusha
or
pop
orb
add
outsl
xor
stc
hlt
sbb
imull
add
xchg
repz
push
cmp
dec
push
lea
out
loopne
dec
lret
shlb
jmp
push
movsl
outsb
rcrb
int3
adc
sub
testl
stos
cmp
push
add
das
hlt
sbb
aaa
dec
inc
loopne
repz
addr16
cmp
xor
mov
test
dec
push
sbb
aaa
out
sub
call
das
jae
push
repnz
add
inc
out
nop
fmuls
stc
and
mov
dec
cmp
mov
stos
fmuls
jp
fistl
jg
out
out
daa
xorl
imull
repz
hlt
mov
fdivrl
lcall
jnp
cmp
je
popl
imul
xor
lock
and
gs
aam
sbb
lods
adc
xor
pop
stos
mov
sbb
cmp
or
repz
lcall
mov
xlat
in
pop
inc
or
mov
leave
int
jp
sbb
sub
push
push
or
mov
scas
lock
adc
ja
pop
xchg
and
cmp
jae
mulb
mov
fs
test
orb
jo
sub
adc
fwait
repnz
imul
mov
sti
xchg
cmp
je
jno
pop
std
pop
pusha
pop
xor
movsb
test
sahf
jnp
sub
jns
loop
sub
pop
iret
adc
lods
ret
sub
adc
xlat
fsubl
push
shll
aam
mov
mov
xchg
pop
push
clc
xor
jmp
rcll
test
aas
ss
inc
xchg
or
mov
loopne
push
mov
mov
jmp
mov
cmpsl
and
mov
lret
sbb
imul
mov
and
cmp
pop
out
or
and
mov
pop
jmp
jle
iret
cbtw
and
xchg
das
xchg
int3
push
sbb
cmp
add
jge
dec
inc
jb
loope
mov
add
adc
mov
dec
jecxz
dec
sbb
mov
mov
and
mov
mov
stos
jns
or
stos
xchg
sbb
pop
in
mov
mov
scas
jmp
dec
and
adc
jecxz
lds
loop
jns
ret
inc
push
jns
mov
mov
dec
lahf
and
stos
xchg
testb
pop
aaa
orb
mov
pop
inc
or
in
add
movsb
fldl
mov
mov
mov
push
jb
xor
outsb
es
and
ljmp
pop
mov
mov
mov
rclb
xlat
dec
mov
test
ds
jo
jp
mov
xor
inc
test
mov
shll
add
fmul
das
mov
push
pop
out
rorl
jp
and
jecxz
insl
rcrb
clc
pop
cli
jl
ret
imul
repnz
adc
repz
loop
push
outsb
push
je
scas
mov
push
xor
push
ror
nop
mov
mov
adc
sub
pop
mov
mov
cmpsl
jbe
add
shll
call
in
sbb
pop
pop
sahf
lret
mov
fbld
mov
adc
sub
shrl
mov
cltd
clc
and
adc
cmp
cli
pop
or
mov
sahf
daa
sub
outsl
ljmp
nop
fsubl
rorl
sbb
pop
dec
jbe
or
inc
mov
xor
and
cltd
imul
xor
inc
stos
incl
mov
jb
sbb
enter
bound
or
clc
jo
repz
outsl
mov
ja
ljmp
cmp
add
repnz
ds
scas
in
aaa
scas
iret
jg
les
sbb
rcrb
cmpsl
push
add
jno
dec
fisubl
scas
push
imul
sti
dec
insb
mov
inc
sti
or
xlat
loope
and
insb
xor
adc
jno
in
push
sub
stos
sti
cmp
repz
pop
inc
aad
das
dec
rcrl
pop
adc
faddl
loope
pop
lcall
cmp
push
pop
mov
xchg
std
pop
inc
push
cwtl
jb
mov
sub
sub
or
or
fsts
sbb
mov
out
clc
out
scas
pop
mov
xor
bnd
mov
xor
lcall
shll
mov
xchg
push
mov
xchg
lods
xchg
pop
jg
cmp
add
mov
loopne
pop
cmp
sbb
xchg
call
pop
ljmp
fdivrs
test
dec
ret
in
mov
or
cld
mov
jb
pop
jne
es
jmp
sub
push
or
cwtl
into
push
mov
add
jbe
cltd
xor
sub
cmpsl
inc
mov
in
aam
dec
jno
jl
addr16
adc
aaa
jne
icebp
popf
inc
mov
jmp
sahf
in
adc
add
cmpl
iret
lret
pop
push
jle
fisttpl
dec
pop
dec
push
leave
jnp
dec
mov
mov
adc
push
sub
repz
andl
add
mov
xor
or
test
loope
aam
add
nop
cmpsb
mov
loop
ja
negl
in
adc
lds
test
push
pushf
xchg
sarb
cmc
cwtl
mov
xor
dec
jb
or
js
sbb
mov
pop
scas
sub
jg
inc
push
in
out
jae
dec
scas
je
sbb
sbb
sbb
jmp
sbb
enter
pop
cmpsb
add
cld
xchg
cmp
insl
les
pop
add
push
cs
aam
sub
loope
pop
or
vsubss
ret
dec
add
es
push
cmp
lods
inc
inc
inc
adc
or
add
cmc
adcl
jnp
movb
jp
data16
icebp
push
fstps
vpmacswd
call
jecxz
jmp
jl
lahf
mov
leave
fsubrp
xchg
mov
pop
rcr
and
enter
xchg
mov
mov
aam
cmpl
inc
iret
cwtl
mov
inc
std
outsl
push
orb
dec
push
and
or
push
in
cmpsb
inc
ficomps
cwtl
inc
orb
jp
mov
dec
add
inc
dec
jmp
xor
daa
int3
movsb
es
adc
inc
pop
cli
dec
cli
shr
dec
fcmovbe
into
outsl
imul
in
xor
gs
call
incl
and
cmc
jb
add
sarb
into
rorl
jne
in
rcrb
scas
adc
adc
dec
push
or
lcall
int
shrb
imul
and
out
mov
mov
mov
stos
push
mov
je
dec
enter
test
cmp
sub
into
cltd
sbb
lds
inc
aad
sarb
inc
and
les
jns
js
jo
mov
mov
arpl
cmpsb
inc
mov
xorl
fnsave
aas
sti
aam
push
test
int3
in
or
pop
xor
jae
sub
rolb
sarb
fdivrs
mov
in
addl
xchg
incl
stc
fidivrs
push
mov
mov
dec
fimull
adc
ds
leave
bound
fistps
ud0
pop
pushf
cltd
adc
fists
ret
lods
les
push
cli
xor
nop
rorb
sar
jmp
jecxz
adc
dec
aad
xchg
call
dec
pusha
lret
push
shlb
sti
enter
insl
inc
cmpsl
std
mov
sbb
mov
stc
mov
mov
xor
push
jp
add
mov
pop
push
cmp
lea
sbb
xlat
jle
shl
testl
cltd
or
inc
sub
mov
mov
cmp
inc
dec
repz
sbb
and
clc
data16
pop
cmp
or
jae
std
mov
int3
sbb
sbb
popa
pusha
aam
mov
lret
jns
je
or
inc
xchg
jmp
dec
mov
xor
dec
test
dec
mov
add
lret
push
repnz
dec
bound
mov
cld
loope
addl
inc
addl
lods
push
pop
nop
mov
inc
leave
clc
jecxz
jp
xchg
loope
inc
fwait
insl
cwtl
shl
mov
xchg
cmp
testb
lahf
aad
or
dec
jg
aam
push
test
or
addr16
fimull
cs
dec
daa
roll
push
out
daa
or
repz
leave
mov
loop
dec
push
add
stos
push
or
mov
outsl
lahf
mov
insl
jne
inc
addl
sbb
pop
insl
add
insb
pop
int
jbe
cmp
or
filds
scas
mov
sub
loop
xlat
outsl
or
inc
mov
outsl
jno
outsl
jns
das
or
jp
mov
addr16
dec
dec
jle
push
out
push
cld
not
repz
aad
mov
fstl
xlat
test
dec
xchg
repnz
pop
push
enter
ja
int
mov
mov
pop
pop
or
jl
inc
jae
es
and
pop
loop
inc
dec
add
mov
xchg
pop
mov
mov
add
add
or
mov
cs
out
in
cltd
sub
stos
imul
jg
xor
sbb
adc
inc
jns
mov
cs
fnstcw
or
into
mov
je
push
push
ljmp
mov
sbb
bnd
addr16
push
pop
sub
fnstenv
xor
sti
pop
mov
rcl
add
ss
daa
adc
ret
lods
xchg
and
pop
hlt
pop
pop
fwait
repnz
les
xchg
cli
out
or
es
sub
push
adc
sub
sub
dec
jp
adc
mov
pop
inc
dec
push
subl
xchg
scas
ret
mov
das
inc
loop
cmp
cmp
je
aas
xchg
or
xor
mov
js
imul
push
mov
mov
pop
mov
sbb
mov
mov
cmp
inc
nop
mov
adc
jecxz
sbb
sub
ljmp
mov
lock
loope
jmp
clc
xor
out
bnd
xchg
insl
sbb
mov
fs
js
cs
loopne
push
push
push
mov
mov
dec
mov
les
mov
aas
pop
loope
xor
dec
xchg
adc
mov
loopne
in
fdivrl
and
mov
cwtl
stos
dec
shl
sti
dec
mov
das
rcl
leave
lcall
cmc
pop
popf
lahf
int3
sbb
lds
mov
dec
rorl
shlb
jb
pop
iret
fidivrs
pop
cmpsl
fdivrl
fs
aaa
mov
pop
xor
mov
mov
jecxz
in
daa
mov
adc
repz
lods
mov
adc
inc
movsb
int
fldl
fstps
mov
stc
pop
cmc
jg
shll
cmp
mov
dec
cld
ss
ja
je
lret
sahf
xchg
or
and
inc
rol
xchg
dec
fisubl
dec
xor
icebp
arpl
in
dec
dec
sarb
adcl
pop
outsb
sub
adc
adc
nop
mov
adc
inc
fistpll
scas
jle
stos
push
imul
mov
cmp
add
pusha
ret
out
pop
addr16
dec
pusha
stos
imul
popa
mov
repz
push
mov
ret
and
xchg
push
test
call
js
fstps
jmp
and
ja
cmp
orl
xchg
je
aas
dec
pop
jno
add
and
push
clc
cmc
lds
sbb
xchg
les
cs
xor
rol
push
addl
inc
out
mov
pop
jp
jecxz
sub
mov
mov
or
repz
pop
lds
push
in
push
cwtl
mov
mov
testl
or
insl
mov
mov
mov
data16
xor
push
sahf
jno
cmpsb
addr16
mov
jo
xlat
or
or
adc
mov
shr
inc
add
into
nop
jp
loope
mov
jl
andb
inc
out
ja
outsb
negl
jecxz
fwait
lcall
outsl
stos
jg
je
out
lock
jb
loope
mov
mov
cmc
or
loop
aad
mov
xor
andb
cmp
xorl
sbb
jb
sbb
pop
es
jns
out
fnstsw
cmp
sbb
and
inc
adc
mov
jb
das
movsl
mov
add
pop
pushf
iret
in
sub
scas
lods
les
or
lahf
ror
nop
mov
fisubrl
int3
lds
loope
repz
scas
mov
sbb
sahf
jne
cmp
xor
dec
sub
jge
popf
dec
dec
sarl
repnz
pop
pop
mov
inc
mov
push
xlat
pop
sbb
cmp
push
ds
jg
adc
or
popf
sbb
pop
ss
ss
sbb
test
cs
add
dec
and
inc
sub
mov
xlat
mov
push
and
push
dec
aaa
or
outsb
mov
nop
jbe
movsb
sarl
das
push
inc
repnz
add
aad
inc
sbb
imul
mov
ljmp
inc
dec
daa
into
movsb
cmc
jge
movsb
cld
xor
jle
jns,pt
push
sub
adc
xchg
jae
xorb
addl
cs
cmp
fbld
sbb
xor
test
pop
je
pop
dec
mov
notb
adc
add
and
test
push
xor
addr16
xchg
xlat
das
lods
sbb
loope
pop
inc
js
in
stos
xchg
in
addr16
test
imul
and
lds
or
enter
popf
pop
mov
jl
dec
cmp
stc
and
es
and
cld
lods
jo
cmp
xor
sarl
jmp
arpl
fsubrl
loope
mov
dec
aas
aas
add
out
dec
xchg
sbb
mov
mov
cwtl
mov
dec
fcmovnbe
repz
lret
dec
push
fcomi
in
add
dec
in
out
mov
xchg
cltd
xchg
mov
push
ds
nop
out
adc
iret
scas
repz
or
les
adc
push
inc
adc
push
scas
stc
addr16
and
out
xor
insb
adc
out
das
and
aad
aam
push
adc
xchg
dec
mov
ljmp
gs
adc
fnsave
mov
out
sbb
xor
das
xchg
sub
sti
out
adc
cmpl
mov
fmull
icebp
fisubl
push
repnz
adc
mov
xor
lret
enter
mov
loop
in
fwait
lds
ljmp
clc
push
and
fs
and
imul
mov
jnp
adc
lret
mov
pushf
int3
dec
cld
stos
jecxz
shll
and
filds
pop
or
dec
jg
jl
xchg
mov
mov
pop
lods
or
cmp
push
ljmp
lret
fmuls
ret
shll
shrl
inc
rorl
push
mov
movsb
lret
pop
push
aad
pop
sub
mov
push
dec
inc
push
pusha
xchg
sub
aam
fsubs
das
adc
enter
in
mov
icebp
jne
push
loope
mov
loop
mov
sarb
movsl
ja
clc
cmpsb
fdivs
mov
bound
xchg
imul
mov
pop
loopne
mov
cmp
flds
jae
push
test
dec
les
in
sbb
mov
or
mov
out
fldenv
push
in
arpl
pop
cmp
sbb
stc
jo
adc
in
jns
sarb
fbld
adc
push
call
jecxz
inc
js
inc
mov
pusha
xchg
dec
sbb
pop
pop
adc
xor
adc
mov
inc
popa
mov
call
cmpsb
aad
repnz
jae
jne
dec
dec
add
push
jo
push
push
jb
push
push
into
jle
sbb
xor
push
pop
aad
sbb
sets
test
dec
imul
push
lahf
pop
into
and
cmp
das
sub
neg
xchg
jl
cmpsb
cmp
scas
and
out
cmp
decb
iret
shr
and
cltd
add
adc
rclb
adc
fldenv
jle
scas
ret
divb
decl
jb
push
sub
pop
int
push
mov
sub
cmp
clc
jge
adc
stc
icebp
cmc
and
out
mov
jmp
cmp
mov
cmc
rorl
sub
sub
fcomps
loop
add
mov
lret
push
jb
dec
inc
mov
movsl
pop
cmp
dec
xor
shlb
fxam
pusha
pop
sub
shlb
xchg
sbb
leave
stos
repz
mov
xchg
dec
das
sti
fisubl
fisttpll
inc
inc
out
jne
add
loope
or
jp
hlt
jne
fisubs
clc
popf
pop
fldcw
dec
sub
push
pop
addr16
add
mov
mov
in
icebp
push
push
jmp
and
push
add
and
lds
dec
jnp
jg
fsubrs
loopne
mov
jg
cmp
mov
and
xor
lret
inc
or
or
jmp
push
es
loop
mov
pandn
lea
leave
loope
popa
scas
xor
inc
insl
mov
inc
mov
or
es
sbb
shrb
fmuls
ja
lds
and
shrl
push
mov
inc
cmp
in
sbb
pop
cmpsl
mov
mov
jle
arpl
scas
pop
outsl
gs
cmp
mov
mov
push
es
outsl
leave
aad
cli
shl
mov
adc
pop
push
pop
lods
adc
cwtl
daa
cmp
subl
cmp
loop
cmp
adc
xchg
fisubl
sbb
xor
nop
push
pop
and
xlat
mov
and
ja
sub
push
mov
movsl
or
dec
ds
cmpsl
sbb
xchg
add
sub
push
xor
push
inc
pop
int3
test
push
dec
cmpsb
imul
adc
outsb
xchg
push
adc
dec
mov
pusha
jno
jecxz
and
or
lds
jo
adc
mov
xor
es
bound
mov
rcr
mov
adc
loope
cmpsl
xchg
pushf
jp
mov
sub
cltd
jo
and
leave
mov
out
cmp
dec
fmul
mov
xchg
xchg
mov
xor
cltd
add
mov
mov
test
dec
or
sbb
push
sub
xchg
stos
jns
pop
push
cmpsl
loope
sbb
shl
aas
das
dec
pop
outsl
fildll
xchg
jnp
inc
xor
jg
sub
pop
outsl
mov
dec
add
stos
sbb
mov
sub
in
out
cmc
rorb
js
rcrl
push
or
adc
les
adc
roll
mov
sbb
icebp
and
cs
dec
cli
adc
movsb
adc
mov
xchg
outsl
into
jl
xchg
dec
fwait
lea
dec
scas
pop
adcl
or
mov
push
push
inc
dec
lods
xchg
or
aad
sub
sub
in
and
dec
mov
lret
in
pop
push
repnz
push
stos
clc
push
push
pop
cmpsl
loop
lods
arpl
popa
in
jae
ficompl
test
dec
sub
stos
add
sbb
pop
jmp
es
lret
inc
into
pop
or
xchg
jnp
push
cli
dec
fidivrl
movsl
xor
movsl
adc
loope
pop
adc
sub
xchg
and
or
add
pop
pop
stc
adc
adc
in
sbbb
leave
in
test
iret
push
mov
push
addr16
addr16
test
mov
bound
icebp
pop
adc
add
xlat
push
fdivr
lds
xchg
insl
je
cmp
push
stc
lret
inc
mov
pop
or
imul
xor
push
daa
jb
test
cmp
adc
add
fmull
aad
push
add
nop
jle,pn
jns
push
int
jae
shlb
das
das
jnp
inc
mov
push
add
add
fwait
test
iret
fldcw
test
push
mov
pop
ret
bound
mov
sbb
ficompl
aas
mov
mov
addr16
inc
cli
xor
out
push
pop
dec
ja
sbb
mov
push
jns
je
out
inc
or
add
inc
jae
loop
cmp
stos
add
ret
nop
iret
div
cmc
or
cld
or
inc
sbb
out
lcall
test
lret
xor
push
lcall
movsb
out
inc
fsubrs
cmp
dec
mov
xor
and
mov
xlat
pop
jp
rcr
dec
push
and
dec
sbb
cs
icebp
fwait
jnp
scas
jnp
pop
sub
xor
or
mov
inc
xchg
jb
and
iret
xchg
jmp
pop
ret
mov
or
cli
mov
mov
dec
outsl
sbb
adc
sbb
notb
push
pop
xchg
daa
mov
lcall
test
mov
sbb
hlt
mov
lahf
push
dec
jae
sub
dec
fwait
inc
or
jne
and
andb
arpl
popa
shrl
scas
xchg
mov
and
adc
mov
je
cs
xlat
lahf
add
das
sti
scas
nopl
fwait
insl
addl
or
xchg
std
insb
pop
cmp
inc
sbb
push
in
loope
fnsave
mov
ljmp
xor
mov
push
push
cmp
in
in
lcall
sti
push
mov
scas
sahf
pusha
aaa
sub
xor
iret
pop
std
pop
inc
movsb
pop
ja
cmp
push
or
test
out
imul
or
popf
sahf
jl
iret
mov
pop
xor
scas
mov
lahf
loopne
mov
sahf
add
jb
push
inc
dec
xlat
fsubrs
mov
arpl
icebp
or
sbb
movsb
test
out
inc
enter
fistl
aaa
bound
dec
stos
jge
dec
fildll
subb
sti
bound
addr16
pop
lcall
push
shlb
cmp
ljmp
fs
adc
mov
das
add
sbb
cmp
add
inc
mov
insb
jns
ret
jns
and
test
xor
inc
mov
add
iret
push
popa
insl
jns
aam
push
aaa
repz
jb
and
pop
sbb
or
pop
xchg
enter
in
stos
mov
nop
pop
outsl
inc
pop
push
popl
sbb
inc
pop
in
mov
jae
aam
insb
or
js
jg
cli
mov
lds
ja
sub
push
scas
hlt
sub
xchg
push
test
push
lods
ret
xchg
or
pop
xchg
dec
popf
xchg
int
stos
and
jecxz
clc
cld
hlt
out
mov
pop
add
and
pop
lcall
pop
lahf
ds
push
hlt
dec
pop
xchg
sbb
xrelease
in
out
shlb
sub
pop
lcall
adc
push
lods
mov
sbb
testb
fadd
or
push
les
outsb
mov
mov
push
pop
xor
aam
or
pop
jle
loop
dec
sbb
cmp
inc
xchg
inc
lock
incb
rcll
aaa
cmpb
and
xor
shl
in
xor
cli
add
negl
bound
mov
in
dec
xchg
sbb
fwait
inc
cltd
inc
sbb
lods
sbb
jno
mov
inc
push
add
sub
or
ret
mov
out
pop
cmp
insb
jbe
addb
inc
sub
add
lds
push
dec
or
popf
jg
mov
xor
cmp
add
mov
dec
scas
test
cmp
pop
add
xchg
xchg
sub
nop
xor
nop
adc
int3
pop
inc
push
cmc
frstor
cltd
jmp
or
or
ljmp
scas
lahf
push
scas
in
int
arpl
jbe
into
xor
mov
push
pop
int3
inc
out
add
fcmovb
inc
or
or
jge
mov
pop
std
imul
mov
loope
sbb
sub
mov
cmp
cmp
movsb
or
gs
mov
pusha
push
bound
cld
jno
ret
and
das
dec
addr16
add
cmpsl
mov
pop
andb
das
push
pop
mov
cmp
mov
push
jns
cmp
dec
xchg
insb
mov
cs
sub
adc
jb
out
inc
cmpsb
inc
sub
pop
popf
test
dec
jae
js
jl
popf
or
xchg
mov
idivb
push
adc
xor
lds
das
push
xchg
stos
scas
jge
call
cli
ljmp
stc
cmp
stos
push
inc
popa
and
xchg
add
xchg
inc
jmp
in
gs
scas
jbe
in
adc
and
arpl
stos
stc
lods
cmpl
pusha
pop
xor
lods
outsb
adc
enter
ret
adcb
sahf
jb
and
punpckhwd
faddl
loop
dec
or
ret
mov
jg
mov
and
and
outsl
mov
adc
test
and
lret
mov
rcrb
test
mov
jle
and
subl
dec
mov
cld
add
add
adc
push
es
lock
dec
mov
daa
callw
jecxz
fdivs
ljmp
push
cmp
insb
lahf
loop
out
test
and
cwtl
mov
shrl
jl
test
lret
cmpsl
sbb
enter
mov
mov
sahf
hlt
jmp
adc
add
push
adc
dec
ret
dec
mov
and
pusha
fdivl
mov
in
or
fmul
mov
ds
push
xchg
inc
cmpsb
idiv
jbe
sbb
gs
inc
lahf
push
pop
mov
std
clc
push
cmpl
inc
fistl
mov
icebp
jb
gs
pop
scas
cmp
shl
adc
xorl
sbb
dec
sbb
aam
lahf
mov
xor
push
xlat
jne
jle
daa
inc
lret
mulb
mov
shr
jno
outsl
shrb
pop
in
lret
mov
push
sub
and
pop
adc
fisttpl
out
cwtl
test
test
outsb
cmp
pop
stos
mov
mov
nop
cmc
ja
mov
mov
mov
addb
mov
scas
sbb
push
pop
ret
mov
push
mov
add
int
mov
mov
mul
sahf
sub
cmp
outsb
and
jge
cld
pop
sahf
mov
and
adc
sub
pop
aam
int3
sti
inc
mov
pop
or
or
xchg
mov
les
ds
mov
xor
in
push
lds
sub
or
cmc
push
imul
aam
cmp
xchg
add
xchg
dec
mov
inc
insl
shrl
fldcw
cmpsl
fisubrs
mov
push
mov
scas
aam
push
cmpsl
inc
pop
add
pop
shlb
jmp
push
pop
sbb
aas
test
outsl
jg
inc
adc
and
dec
cmp
popf
les
pop
push
jb
adc
mov
or
aam
in
fs
andb
clc
aad
dec
jle
lock
movntps
das
into
ret
push
jp
push
jns
jecxz
rolb
cmp
pop
xchg
scas
roll
std
pop
shll
int
ror
repz
sub
cs
sti
rclb
sbb
sbb
cmpsb
sbb
jg
sbb
stc
add
xlat
mov
pop
add
sub
xor
jmp
incb
pop
mov
fcoml
sbb
ds
sbb
int3
out
rcrb
xor
hlt
dec
sbbb
scas
leave
add
lds
dec
xor
cmp
stos
push
adc
mov
das
rolb
rsm
jmp
and
inc
and
xor
clc
aas
enter
jns
xor
inc
push
testb
push
lahf
add
add
xor
lret
dec
inc
js
jmp
xor
or
in
pushf
loope
xchg
mov
sbb
je
inc
xor
xor
dec
cmp
js
call
mov
mov
int3
rolb
dec
jno
add
loopne
in
bound
dec
push
fsubs
pop
outsb
ljmp
xchg
rcrl
xchg
pmaxsw
push
dec
and
fwait
jl
test
lret
fsts
in
inc
cltd
inc
add
adc
push
hlt
cmp
mov
fs
push
clc
mov
stc
jmp
sub
mov
es
mov
sbb
sahf
popf
lcall
mov
adc
xorb
xchg
mov
stc
lods
cs
xchg
and
popa
pop
push
cmpsb
cmpsb
jg
or
pusha
push
pop
ficoml
cmp
sub
popa
inc
push
loop
ret
addr16
adc
mov
mov
das
and
push
cmp
inc
cmp
lock
push
xlat
stos
out
push
jb
mov
push
push
je
push
shlb
xchg
lea
inc
and
xchg
pop
mov
sbb
inc
addr16
sbb
mov
ret
mov
push
cltd
dec
test
or
jae,pt
outsl
inc
int
int3
cmpl
pop
jns
jl
out
movsl
xchg
sbb
jne
or
subb
pop
and
jb
call
or
fsubs
repnz
push
aas
in
sbb
out
jb
or
xchg
addb
in
or
inc
sbb
ja
add
adc
xorb
sub
mov
test
add
mov
xchg
xor
or
xchg
add
into
int3
ret
sub
push
adc
push
push
xorb
push
imul
jecxz
push
sbb
iret
or
fs
pushf
js
mov
xor
imul
scas
jl
pop
imull
push
cs
mov
mov
cli
scas
adc
pop
popf
repnz
mov
or
adc
ss
pop
imul
sub
lock
outsb
fwait
push
jp
sahf
and
movsl
jae
icebp
inc
mov
movsb
faddl
cmp
push
loop
push
mov
inc
iret
mov
inc
xchg
movb
cmc
pop
dec
push
nop
jg
mov
dec
shr
dec
sarb
pop
pop
add
loope
sarl
loop
lods
jle
psllq
fsubl
pop
xchg
sbb
xchg
movsb
je
insl
inc
lods
xchg
xor
or
jbe
je
stos
aam
or
pop
pusha
div
mov
mov
or
lods
je
movsb
push
and
xchg
mov
std
inc
pop
cltd
fimuls
out
hlt
cli
in
test
sbb
into
daa
and
pop
aam
lahf
jmp
bound
shrl
sbb
sub
lahf
xchg
jns
lock
pop
arpl
sti
inc
repz
jne
cmp
or
lods
pop
pop
mov
mov
icebp
aam
sub
cmp
push
andb
mov
adc
jp
or
mov
mov
mov
dec
into
fstpt
push
les
xchg
aam
cmpb
xor
fldl2t
jmp
cmp
rcll
imul
cld
fnsave
cltd
and
movsb
scas
or
cwtl
lods
add
je
mov
lods
test
adc
test
mov
sti
hlt
dec
pop
cmpsb
scas
jnp
pop
jb
inc
pop
iret
xchg
scas
mov
lods
mov
sub
sbb
fisubrl
dec
enter
repz
addr16
jbe
inc
iretw
insl
stos
pop
iret
mov
adc
ss
sbb
pop
ficoml
fldcw
shrl
jae
arpl
cltd
in
add
or
insb
cli
and
lock
clc
nop
mov
mov
xchg
inc
xchg
popa
stc
inc
outsl
stc
iret
lret
inc
or
dec
mov
mov
xchg
jp
or
dec
push
js
mov
bound
mov
or
xlat
outsl
sbb
lret
popa
pop
and
lret
pop
loopne
mov
cwtl
and
mov
mov
outsb
call
mov
inc
inc
leave
call
mov
xchg
das
arpl
jp
push
daa
popf
movsl
scas
insl
push
xor
lcall
mov
inc
adc
out
mov
adc
cld
gs
push
pop
push
lret
dec
mov
daa
shrl
xchg
std
jmp
test
sbb
aas
cmp
insl
sbb
sub
mov
push
lea
sub
ret
add
and
push
out
xor
in
pop
std
dec
decl
mov
jl
into
mov
sbb
iret
jne
or
xor
pop
enter
into
push
mov
inc
idivb
inc
imul
pop
into
sarb
xlat
loope
sub
mov
out
fiaddl
js
stos
sbb
aas
mov
lret
mov
adc
in
je
mov
pop
mov
dec
xchg
or
outsl
jnp
inc
inc
sub
adcb
inc
out
add
int
popaw
das
stc
filds
fildl
popl
shrl
or
std
lods
sbb
out
pop
sub
adc
adc
cmp
std
mov
pop
inc
sub
mov
xchg
push
and
scas
roll
scas
jl
xor
mov
xor
das
scas
loop
outsb
popa
ret
add
xchg
xchg
and
cmp
in
jg
cmpl
int3
popl
mov
xlat
sub
cli
fsub
int3
jl
adc
xor
cmp
pop
loopne
outsb
inc
and
add
loopne
lods
test
xchg
fists
mov
jg
or
add
cmp
jmp
aam
rcrb
loope
xchg
pop
movsl
test
adc
or
popa
dec
popa
mov
clc
lods
pop
stc
testl
lret
clc
repz
lret
and
aaa
popf
test
addl
or
push
bound
sahf
fstpt
fidivs
lcall
xchg
sbbb
push
push
push
sbb
out
or
mov
cmc
pop
icebp
inc
push
popa
stc
xor
xchg
shll
cmp
movsl
adc
loope
adc
rcrb
cli
sarl
or
pop
sti
inc
filds
arpl
xor
push
mov
inc
jle
pop
stos
push
xchg
sti
js
push
mov
cmp
lret
add
inc
push
repz
xor
addr16
xor
dec
dec
xor
push
jle
xchg
test
push
aad
cmc
sub
push
mov
cmp
jmp
inc
cmp
inc
pop
test
sbb
mov
mov
pop
mov
and
popf
jne
cwtl
mov
or
sbb
orl
mov
loope
sub
mov
aam
jo
jle
ljmp
shrb
test
and
jg
xchg
pop
jmp
mov
stc
push
or
aaa
pop
mov
sub
ret
and
push
outsb
inc
bound
cmpsl
gs
adcb
xchg
jnp
sbb
dec
insb
mov
shrb
sub
mov
dec
inc
push
add
cmpsl
and
les
imul
push
push
int
sbb
jmp
popf
hlt
mov
sbb
jl
xchg
mov
add
adc
nop
or
push
dec
or
adc
sub
push
mov
mov
sti
pop
stos
fstps
cmpsb
or
decb
ds
lea
cmovnp
ss
pop
sub
mov
cld
fisttpll
movsb
inc
popf
lahf
jnp
push
aad
out
int
mov
stc
das
xchg
cmp
inc
daa
sub
adc
add
add
mov
and
sub
xor
cmp
push
cmpsb
cwtl
jmp
inc
mov
xchg
cmp
scas
pop
rcrb
fldt
jae
xchg
mov
aas
cwtl
xchg
cmpsl
mov
jno
and
mov
sbb
jecxz
xor
cmp
orb
cli
bound
cmpsb
adc
pop
xor
add
push
fldt
fnstcw
ds
es
fwait
xchg
pop
add
adc
jg
xchg
inc
mov
fs
negb
push
into
add
adc
aaa
test
jl
cld
movb
lcall
data16
es
adc
jg
data16
repz
mov
jno
imul
cmpsl
jecxz
bound
cmpsb
jne
and
cli
incl
add
pop
push
inc
sarl
dec
mov
lret
push
stos
je
push
cld
dec
scas
xor
ret
arpl
dec
xlat
cmp
sbb
popa
pop
xchg
in
inc
ja
push
add
call
fcmovb
decl
cmp
mov
test
or
adc
sbb
adcl
aam
xor
ret
pop
outsb
jmp
push
cmp
push
sbb
add
pop
push
jmp
scas
inc
xor
in
ficoms
test
adc
movsb
je
dec
popa
mov
pusha
push
or
ss
xchg
jno
or
test
stos
ja
inc
sbb
add
adc
cmp
sbb
jle
int
xchg
icebp
adc
or
jmp
nop
cwtl
xchg
xor
push
or
jbe
data16
dec
jno
add
dec
jbe
or
je
mov
test
sub
adc
fstpt
mov
in
jbe
cli
mov
jg
sbb
out
idivl
mov
jb
jmp
js
dec
mov
sub
pusha
call
pop
repnz
out
sub
adc
loopne
pop
sarb
movsb
out
out
imul
jno
sub
add
ret
mov
jnp
scas
mov
cmp
mov
icebp
inc
dec
sbb
cld
sub
or
mov
jns
je
fisubs
pop
mov
pusha
push
xchg
inc
jb
les
jne
iret
dec
out
dec
adc
or
insl
repnz
push
xor
mov
sti
scas
mov
adc
push
jb
mov
xchg
inc
xor
push
jp
pop
mov
fcomip
aas
adc
lret
and
fwait
nop
mov
dec
cmp
jo
push
mov
cs
sbb
aam
out
mov
xchg
add
mov
xlat
je
push
cmp
mov
negl
testl
hlt
and
cmpsl
push
push
and
and
push
cs
fucom
ficoms
std
cwtl
jecxz
jl
pusha
and
leave
cmovae
outsl
rcr
lcall
cmc
jmp
faddl
dec
rorl
movsb
dec
jecxz
xchg
push
jo
js
icebp
test
es
xor
xchg
das
sbb
add
add
xchg
and
push
add
repz
cmc
xchg
mov
addr16
sub
int3
sub
cmp
xchg
sub
mov
es
sahf
add
push
add
bound
in
popf
add
stos
add
cs
mov
xor
je
inc
push
outsb
jnp
data16
push
les
test
jns
dec
loopne
movsb
xchg
push
js
cmpsl
mov
ja
pop
mov
dec
loope
mov
out
mov
push
nop
push
cmp
xor
icebp
imul
mov
inc
adc
push
xchg
cmp
or
in
jne
add
ret
jge
nop
pusha
and
push
shll
les
das
mov
dec
outsl
repz
xchg
adc
jbe
mov
mov
sbb
push
lret
ret
aad
je
sahf
mov
andb
ds
push
jp
and
iret
cs
cmp
enter
mov
cli
out
loop
jle
pushl
adc
mov
cmp
or
test
mov
test
inc
popa
add
adc
scas
inc
cltd
stos
ds
pop
and
inc
push
sar
pusha
mov
xlat
fwait
xchg
and
imul
js
gs
dec
mov
xor
cmp
loop
push
inc
xor
out
or
jge
daa
xchg
add
mov
fcmovb
call
sub
out
or
inc
jne
mov
add
shrl
out
sbb
jnp
mov
mov
mov
ficoml
lods
addr16
pushf
pop
push
lea
adc
or
push
cli
sbb
push
dec
add
push
addb
mov
mov
push
and
mov
les
jle
testl
sub
clc
imul
push
pop
loopne
dec
aam
mov
out
adc
aaa
pop
inc
adc
call
xchg
lods
cld
mov
xor
push
xlat
or
int3
dec
inc
iret
loop
xor
lock
sbb
push
push
lcall
cmpsb
push
nop
sub
add
pop
das
pop
jb
lds
insl
adc
test
jo
test
in
sahf
xorb
jns
loope
jne
icebp
push
push
inc
jge
or
enter
add
aad
push
cmp
call
pop
push
pop
cmp
sub
popf
jbe
and
in
dec
cmc
sbb
cli
divl
popa
in
aad
jl
repnz
cmp
jns
xlat
lahf
mov
sbb
and
pop
push
int
xor
fsubrs
push
scas
pop
adc
inc
or
jo
js
ljmp
in
jno
fdiv
push
bound
jecxz
sbbl
cmc
sub
stc
mov
ljmp
aaa
mov
xor
cli
icebp
lods
mov
and
ds
sti
push
push
rcl
xchg
push
lcall
jg
mov
xchg
enter
push
fadd
pop
cli
addr16
repz
push
sub
xor
addr16
or
loopne
leave
or
pop
sahf
es
mov
adc
movsb
add
pop
ret
test
js
imul
imul
ret
sarl
notb
push
std
out
push
jae
mov
add
imul
add
adc
leave
nop
jb
dec
mov
cmp
sbb
lcall
push
sbb
add
add
dec
hlt
aaa
ljmp
cmp
pop
lock
inc
nop
pop
mov
sub
dec
xor
and
dec
xchg
dec
push
push
lcall
addr16
cltd
lret
push
pop
and
pop
pop
push
movsb
cs
scas
jns
test
stos
push
xorl
inc
cmp
xchg
sub
jne
pop
sbb
xchg
cmp
push
or
repz
fildl
lds
jns
or
lret
movl
sbb
pop
jle
fbld
mov
cmp
cmp
les
inc
in
stc
fstps
ret
dec
icebp
xor
loope
nop
pop
dec
mov
into
syscall
mov
bound
gs
jbe
cmpsl
lahf
adc
cmp
push
pop
mov
sub
mov
out
adc
cli
xor
rorb
lods
dec
enter
xchg
std
inc
sbb
push
dec
je
ficompl
xor
ud2
sti
jo
test
shr
or
mov
mov
adcb
insb
and
pop
stc
mov
pop
loope
cmp
fldl
mov
rorl
clc
pop
push
in
fucomi
mov
rclb
push
jnp
cmp
and
cmp
mov
jo
icebp
mov
ret
clc
out
fsubs
fidivrl
ja
fwait
pop
jmp
cmp
xchg
lret
jg
mov
add
or
jne
xchg
push
jae
xchg
pop
cmp
inc
rcr
push
or
and
out
xchg
sbb
xor
push
jno
popf
shl
nop
jge
jo
push
xchg
lret
jno
fisubrs
cmp
out
xlat
cmpsw
jbe
and
cmpsb
addr16
mov
mov
sub
int3
push
lret
hlt
push
and
js
xchg
jo
xchg
aaa
mov
idivl
ss
incl
add
add
ficoms
cmp
mov
scas
push
fcoms
mov
adc
fiaddl
shrl
ficoms
fsubs
test
leave
ret
jb
movl
inc
inc
mov
scas
inc
lret
cmp
jg
push
imul
cmp
sbb
gs
mov
data16
push
mov
jecxz
jecxz
cltd
jno
mov
xor
sbb
outsb
dec
add
stos
mov
arpl
outsb
push
repz
and
rclb
jb
decl
adc
and
dec
xor
push
in
cltd
sub
js
repnz
pop
hlt
lods
hlt
inc
mov
movsl
adc
insb
inc
imul
inc
mov
dec
xor
lret
or
jecxz
xor
fsubrl
arpl
call
ret
hlt
mov
out
push
lret
fisubs
mov
stos
jne
inc
sub
jp
jp
jne
cmp
clc
pop
jp
les
push
inc
xlat
popa
push
daa
jb
push
jb
xor
lahf
jo
jl
or
push
mov
out
mov
test
fcmove
subl
roll
out
mov
idivl
test
dec
fistpll
sub
mov
ss
push
xchg
ss
push
jl
test
fadds
sub
out
std
ret
ljmp
sub
enter
imul
push
push
jp
stos
insl
int
mov
call
outsl
or
cmp
in
or
mov
sbb
cli
mov
xchg
cli
into
add
jne
xor
jge
ljmp
jmp
shrl
test
dec
ficoml
add
ss
dec
and
pop
movsb
sahf
testb
sbb
lret
icebp
arpl
js
or
sub
and
adcb
lods
add
mov
cld
adcl
inc
jp
xchg
arpl
js
adc
sti
mov
les
push
cs
push
out
aam
sbb
test
dec
push
repz
int
movsl
lcall
arpl
sub
scas
xchg
jb
loop
jecxz
sbb
sahf
nop
sub
in
aad
test
ds
jl
enter
dec
mov
daa
scas
in
mov
jo
add
push
mov
ss
dec
leave
sub
mov
sub
dec
dec
hlt
aas
cmc
dec
enter
push
hlt
movl
pop
ja
lock
adc
scas
xchg
and
xchg
push
mov
pop
pushl
add
cmp
push
inc
or
sub
mov
iret
lds
fisubl
lds
pop
push
loop
fnstsw
xor
cli
xchg
sub
dec
adc
lods
out
mov
cmp
mov
jmp
sub
pop
pop
neg
or
xor
add
aas
jbe
outsb
sbb
mov
cli
sub
fcmovb
pop
rcr
mov
push
divl
mov
xchg
imul
and
and
test
pop
stos
lcall
es
movsb
adc
loopne
push
test
cmp
mov
jge
mov
add
push
and
scas
pop
inc
sbb
test
aam
push
ds
loope
aam
mov
imul
mov
inc
in
decb
aaa
jecxz
std
shrb
aad
enter
lahf
inc
xchg
dec
fnstsw
sub
out
xchg
cmc
pop
xorb
sub
mov
ret
dec
shr
push
jmp
mov
mov
push
jmp
cmp
fadds
mov
sub
mov
fsubr
mov
sarb
push
bound
enter
fsubrl
and
push
dec
out
out
cmp
mov
lret
out
xor
jne
dec
test
in
mov
or
adc
in
pop
sbb
add
mov
scas
loopne
lods
adc
shlb
xor
iret
and
cli
xlat
sbb
loop
pusha
cs
imul
cmpsl
cmpsb
rcrb
cmp
fs
fidivs
dec
sub
pushl
inc
sbb
sbb
xchg
inc
pop
in
inc
push
adc
das
popf
inc
xchg
dec
pop
dec
ss
push
or
lret
stos
out
xchg
xor
mov
pusha
xchg
into
mov
lock
out
popf
add
ljmp
stos
fildl
pop
fisttpll
in
pcmpeqb
scas
outsl
decl
mov
mov
and
sub
incb
movsb
push
xlat
or
ss
sub
in
test
dec
xorl
es
mov
push
repz
icebp
ss
jno
scas
fidivrl
rorl
sub
jo
outsb
jno
into
mov
lahf
or
xor
dec
xchg
add
into
xchg
outsb
mov
shrb
pop
pop
mov
cli
shrb
mov
inc
out
jbe
pop
sbb
push
xchg
bnd
pushf
cmp
xor
cmpsb
jno
ss
int3
test
lahf
cli
push
dec
pop
pop
inc
sub
jo
lods
test
notb
fbstp
test
outsl
shll
sti
fnstcw
cltd
mov
stc
sar
testl
ja
jnp
mov
xchg
adc
xchg
lcall
pop
sarl
in
and
mov
sub
out
dec
fs
cltd
cmpsb
leave
out
adc
shl
dec
dec
mov
mov
mov
xor
jno
fcoms
xchg
in
or
pop
inc
add
pop
sbb
adc
data16
outsl
dec
sbb
ljmp
jp
adc
pop
sub
insb
or
cmpsb
dec
sti
lahf
mov
push
lret
std
mov
sub
arpl
out
adc
pop
mov
jne
pop
fnstsw
inc
call
push
gs
enter
test
popa
arpl
mov
push
xlat
hlt
ficoml
lcall
cli
and
jmp
rol
cmc
jp
mov
dec
adcl
imul
xorl
mov
aam
in
jo
popa
sarb
cltd
dec
jg
mov
into
xor
lret
sub
aad
add
and
push
mov
jmp
dec
xchg
add
or
lods
int
negb
mov
inc
cmpl
jge
push
add
jmp
lods
mov
mov
js
sbb
dec
out
mov
cmovnp
add
cmpl
icebp
inc
aaa
adcl
sbb
jle
mov
push
cmc
test
mov
leave
imul
pop
js
inc
lahf
or
dec
inc
or
cmp
xchg
shlb
out
rorl
lahf
xchg
cmc
dec
aad
fistps
mov
cmp
addr16
repz
jl
mov
roll
mov
fiadds
or
fwait
add
xor
cmpb
cli
push
fcoml
dec
rcll
jne
cmpsb
xlat
xor
mov
stc
outsl
sub
xor
int
jno
int
popa
xchg
out
movsl
testb
adc
mov
pop
xchg
jmp
push
pop
lcall
repz
call
or
lds
pop
lea
cmc
dec
aad
dec
xor
dec
cmp
andb
cmpsb
mov
das
rorl
mov
fs
pop
jle
mov
in
xlat
mov
in
shlb
loope
cld
outsl
loop
cwtl
pop
in
pop
sub
shll
jno
xchg
jne
dec
mov
fbstp
in
jo
je
cwtl
hlt
dec
movsl
into
adc
xor
je
pop
and
int
push
aas
or
sbb
push
cmpsb
adc
or
mov
enter
pop
mov
iret
sbb
pop
pop
sub
push
rcl
js
enter
pusha
add
fidivrs
imul
pop
cmp
in
into
out
mov
int3
scas
add
rolb
mov
test
test
mov
lods
dec
pusha
sahf
inc
sub
stos
add
dec
push
daa
adc
cmpsl
fidivs
pushf
je
mov
ret
mov
jno
outsl
in
scas
sbb
push
daa
mov
push
insl
shrb
pop
aaa
in
add
push
adc
pop
ljmp
sub
mov
cld
lea
ret
aaa
mov
je
aaa
cmp
jg
jb
movsl
cmpsb
add
xchg
cmp
gs
add
add
adc
cmc
in
push
xchg
adc
stos
mov
dec
in
jecxz
ret
pop
adc
ret
push
leave
rep
data16
imul
push
mov
push
push
xor
cmp
xlat
mov
stc
out
idivb
das
fcomps
out
test
mov
mov
popa
pop
sahf
cmp
xor
cmp
out
stos
fwait
testb
stos
sbb
in
fucomip
les
adc
xor
mov
and
adc
ror
test
jb
jle
mov
sbb
jecxz
inc
test
adc
xchg
xchg
sbb
lock
push
int
shll
out
xor
std
scas
inc
jmp
adc
xchg
sti
js
js
repnz
popf
or
inc
jmp
cmp
int
add
test
jle
imul
cmp
sbb
scas
xor
int3
shld
xchg
sub
stc
cmpsl
lret
push
sbb
loope
fs
sbb
pop
out
movsl
xchg
jo
mov
arpl
cmp
and
movsl
daa
mov
pop
pusha
repnz
xor
mov
lock
sti
jge
sbb
std
pop
mov
cmp
aaa
push
loope
jbe
aam
in
movsb
icebp
jg
test
dec
loop
jg
fstps
cs
xchg
shr
jne
sub
mov
xchg
sar
xchg
add
bound
add
add
push
or
or
jns
std
in
sbb
mov
rclb
mov
loop
out
and
add
pop
push
jecxz
sbb
adc
pop
xor
mull
pop
stos
loope
popf
sbb
cltd
inc
shrb
mov
cli
cmp
pop
mov
jne
xchg
cld
inc
mov
in
cmp
pop
outsb
dec
repnz
push
cmp
sbb
loop
loop
inc
push
inc
adcl
out
pop
xchg
adc
cmp
stos
inc
mov
mov
sub
jp
repz
shl
cmp
aaa
jge
xchg
lcall
test
jl
mov
daa
dec
stos
fnstcw
mov
cli
or
test
inc
cmp
fistpll
daa
adc
mov
fimuls
pop
pop
cmp
ljmp
aam
add
cmp
cmpsl
fildl
mov
loope
ljmp
pop
lods
xchg
jbe
push
mov
push
and
dec
scas
test
std
sub
adc
lahf
and
mov
lods
data16
in
ss
lcall
jae
stos
xor
lret
sbb
lock
sti
dec
xchg
lahf
pop
sbb
push
mov
rorb
push
mov
mov
call
adc
jp
ja
cmp
xchg
jmp
mov
arpl
out
and
out
and
and
test
mov
rclb
jae
ja
loop
cmpsb
sub
pop
test
stc
cmp
sbb
or
jge
stc
or
push
cwtl
aad
mov
sarl
arpl
sbb
mov
sti
in
push
pop
add
xchg
push
int
mov
jmp
pop
data16
and
dec
inc
push
hlt
cmp
mov
pop
add
in
adc
or
es
sub
out
div
mov
and
cmpsl
cli
add
test
pop
je
xchg
lods
dec
xor
xlat
inc
adc
in
sub
push
pushf
mov
and
and
adc
adc
bnd
je
lret
in
cmpl
xorb
orb
popf
stc
sub
subl
dec
lret
insl
cwtl
jne
mov
ret
popa
sbb
sub
push
jmp
int
inc
jns
mov
jle
and
in
xchg
mov
sahf
aas
ds
je
mov
mov
test
loop
ss
ret
inc
rclb
jecxz
xorl
mov
cmp
cmpsl
inc
lods
aad
data16
std
or
push
iret
outsb
je
push
jbe
jl
push
adc
jo
or
aam
in
push
pushf
mov
flds
add
cwtl
pop
mov
fldt
mov
fldcw
push
cli
jmp
push
or
inc
and
js
cmp
push
repnz
cmp
mov
stc
lods
and
pop
add
sbbb
in
and
push
sbb
cld
fdivs
add
mov
repnz
iret
xchg
mov
mov
gs
in
jno
stos
mov
arpl
pop
pop
xchg
xchg
mov
in
les
fildl
fdiv
and
addb
dec
inc
repz
sub
sub
or
in
fs
fwait
shl
nop
ljmp
cmp
dec
cld
sbb
xor
sbb
cmp
jge
cli
cld
cli
adc
mov
cld
pop
push
xchg
mov
les
sbb
notb
popa
xchg
xchg
jb
push
jmp
aam
sahf
sbb
push
or
clc
push
xlat
jae
cmp
imul
xchg
cmp
sti
int
sub
hlt
stc
mov
and
aam
jbe
adc
adc
push
data16
leave
leave
loope
test
mov
adc
mov
xchg
adc
iret
mov
jb
call
adc
push
pop
insb
add
cs
inc
fs
mov
pop
push
jnp
pop
xor
inc
shlb
mov
or
out
lock
sarl
imul
mov
adc
nop
insb
aaa
scas
and
mov
jbe
inc
xchg
inc
cld
cmc
push
add
stos
arpl
gs
adc
mov
sbbb
pop
hlt
pushf
pusha
inc
jge,pt
jg
pop
jb
imul
or
clc
push
cmp
mov
je
xchg
test
inc
mov
gs
jmp
or
inc
pop
push
shll
test
adcb
pop
call
jnp
lea
or
test
and
jns
inc
sbb
cmp
fcompl
sahf
cwtl
divl
xchg
mov
wrmsr
and
lea
nop
lret
push
xchg
xor
sub
insl
fidivl
incl
xchg
pop
insl
sbb
pop
jmp
mov
mov
insl
jp
push
out
jl
xor
scas
pop
pop
pop
lods
shr
pop
or
rol
insl
sub
mov
jo
scas
cmp
arpl
mov
out
jmp
sbbl
pop
cmp
pop
xchg
add
pop
jns
mov
mov
in
fs
stos
sub
lods
pop
mov
mov
ja
pop
pop
aad
xchg
scas
lret
dec
and
push
dec
jae
scas
rorl
mov
jg
xchg
test
stos
fbstp
movsb
leave
sub
pop
cmpsb
punpckldq
adcl
hlt
mov
push
pop
shlb
and
mov
mov
or
jae
cltd
or
into
leave
xchg
jl
jnp
sub
cmpsl
sub
stc
loop,pt
push
add
push
xor
mov
mov
pop
fwait
lahf
dec
call
xchg
je
dec
mov
lock
loopne
iret
int
daa
bound
imul
shl
mov
in
jne
hlt
rcll
dec
add
aad
je
dec
movsb
adc
je
mov
mov
faddl
or
scas
scas
or
inc
jbe
xchg
lea
subb
pop
ss
orb
orl
pop
xor
push
pop
out
insb
inc
push
or
sbb
xchg
rcrl
test
lods
mov
out
push
push
push
jne
iret
pop
ret
or
scas
cmp
ss
test
ss
sub
jne
scas
icebp
sub
xor
sbb
repnz
sub
xor
mov
movsl
mov
jb
fiaddl
push
mov
es
ss
cmp
stos
icebp
jge
daa
mov
shlb
loope
or
popf
sub
cli
mov
pop
int
inc
or
shl
sub
and
cmc
js
push
xor
in
push
imul
add
repz
mov
sarb
pop
xchg
xchg
mov
aad
and
push
ret
pop
fstl
imul
jb
ss
push
mov
cld
jecxz
pop
push
mov
adc
faddl
lahf
out
push
cwtl
gs
sbb
dec
movsl
jl
add
push
das
pushf
lods
add
sahf
or
loope
push
aaa
adc
xor
mov
lahf
push
movsl
ret
push
mov
or
mov
mov
xchg
mov
jbe
add
jg
loope
dec
cmp
lahf
lret
sahf
iret
imul
mov
xchg
push
push
sub
sahf
test
xor
fs
cmp
outsb
addr16
xchg
scas
xor
add
popa
inc
jmp
js
jns
ficoms
movsl
push
xor
pop
in
imulb
or
pop
sub
arpl
inc
iret
repnz
xor
jne
popa
jle
jle
icebp
cmp
bound
adc
cmp
xchg
inc
mov
push
xchg
mov
mov
add
fdivl
cmpsl
aad
cmpsl
jo
lcall
sub
and
sbb
lcall
psrld
cmpsb
mov
fwait
dec
push
pop
test
inc
lret
push
jecxz
pop
lods
pop
xor
rcrb
ljmp
das
je
fisttpll
mov
stc
aam
mov
cmp
scas
cmpsb
movsl
fsubl
sub
loopne
test
jb
lret
xlat
cmp
ret
xchg
mov
inc
ljmp
in
or
out
popl
test
dec
stos
inc
loope
mov
popa
pop
popf
mov
pop
gs
gs
lcall
fcoml
cld
cmp
push
fidivs
adc
pop
mov
stos
into
fadd
repz
push
jb
push
iret
push
add
sub
ds
or
mov
ficomps
pop
jge
or
stos
movb
in
push
leave
lret
ret
out
jl
out
jl
repnz
add
or
cmpsb
dec
dec
cmc
dec
pushl
sub
cmc
insl
ret
data16
cmpl
pop
cmp
fnstsw
pop
inc
icebp
aad
cmpsb
mov
sarl
adc
shlb
lcall
cmp
push
cmp
jno
add
mov
push
pop
adc
in
incb
dec
adc
iret
cmp
rorl
jo
daa
xor
push
xor
ret
mov
adc
or
repz
push
cwtl
and
aam
addl
lock
into
sbb
repnz
xchg
sub
jmp
cld
sub
adc
mov
pop
fists
add
inc
lods
pop
ss
and
pop
inc
adc
inc
push
mov
adc
das
jb
lcall
pop
inc
loop
dec
jl
loope
and
gs
dec
in
jae
sub
mov
xor
xchg
push
sahf
mov
mov
sub
lock
mov
repz
mov
hlt
test
push
xorb
or
cmp
loope
cmpsb
mov
and
ret
push
mov
or
xor
dec
arpl
mov
push
sbb
push
xor
scas
pop
sahf
rorl
xchg
insb
push
lods
push
mov
fldl
shrd
pop
jae
subb
inc
pop
jp
lcall
das
clc
push
sarl
ja
push
mov
jb
cmp
cld
cmovp
xor
cmpl
ret
addl
imulb
cld
jp
iret
ljmp
jmp
stc
jge
andl
jmp
push
mov
fildl
lret
scas
sub
aad
or
pop
ficompl
lret
push
cmpl
mov
xor
dec
or
push
hlt
dec
xlat
leave
mov
inc
outsl
fimull
jl
lock
movsb
adc
dec
divb
test
js
icebp
pop
daa
aaa
inc
sarl
pop
xchg
mov
sbb
addr16
jmp
or
daa
pushf
xlat
sbb
testl
lcall
shlb
mov
cmp
scas
sbb
idivl
test
add
xchg
mov
lock
mov
es
lahf
sahf
cmp
jo
mov
rcrl
cmp
aas
cwtl
xchg
stos
je
dec
lods
clc
out
sti
inc
xchg
and
jge
lcall
push
mov
enter
ffree
and
mov
arpl
pop
movsl
or
mov
lock
and
rcrb
mov
xor
movsl
jg
js
inc
fistpll
stc
push
imul
ret
out
mov
sbb
pop
test
mov
inc
test
mov
mov
xchg
mov
in
dec
iret
mov
iret
stos
ret
int
scas
fadd
sbb
add
std
outsl
hlt
xchg
lock
ja
hlt
or
mov
adc
mov
pop
inc
into
lret
xchg
iret
nop
into
scas
sub
xchg
das
fistps
bound
jbe
xor
dec
popf
sahf
outsb
add
mov
mov
mov
pop
outsb
adc
lods
mov
cltd
or
cli
push
js
cmp
mov
insb
jno
adc
pop
lock
push
push
and
mov
mov
cwtl
xor
dec
push
push
test
xor
repz
mov
stos
jle
and
lea
insl
jbe
push
lock
int
pop
mov
pushf
aam
mov
mov
xor
mov
push
insl
sub
mov
sbb
out
add
loopne
into
push
lock
jne
push
xchg
lea
mov
push
rcr
pop
sahf
mov
sbb
dec
cmp
dec
sub
lds
add
loope
es
sbb
xchg
add
mov
jl
mov
add
mov
add
push
dec
popf
xchg
jns
add
in
or
mov
mov
iret
sub
mov
pop
faddl
movsb
cmp
xchg
sub
ja
mov
xor
scas
sub
xor
mov
into
das
push
mov
pop
inc
int3
jb
mov
jl
mov
fcmovnu
jge
cmpsl
pop
outsb
adc
add
into
xchg
arpl
es
fs
fisttpl
push
sbb
rcl
jmp
testl
inc
ret
mov
sahf
fsubrs
inc
jb
cmc
fcoml
out
cltd
bound
xchg
push
push
xor
pop
dec
sbb
movsb
clc
xor
and
xor
pop
jbe
mov
inc
pshufw
lea
xchg
insb
je
cwtl
push
inc
jnp
lcall
arpl
in
iret
cmpsb
rolb
adcl
imul
outsb
jns
xorl
adc
adc
and
mov
sahf
jo
push
testb
and
test
jmp
xor
cmpsb
xchg
inc
lea
out
or
pop
mov
cmp
inc
pop
lea
xchg
es
ss
pushf
xchg
popl
adc
fnstcw
inc
popf
cmc
add
mov
leave
movsl
sub
push
je
sbb
adc
adc
sub
mov
add
out
aad
cmp
jle
mov
push
aas
mov
out
fisubrl
mov
xchg
jnp
je
test
cld
cmpsl
xchg
push
xchg
lds
lcall
push
pop
ds
or
pop
lods
xchg
ret
cmpsl
jl
inc
add
push
insl
imul
ljmp
insl
pop
cmove
lds
jmp
jno
mov
jmp
sbb
xor
mov
ja
pop
lods
or
dec
int3
js
dec
cmp
js
call
fildll
sub
jo
and
mov
jmp
mov
subl
popa
adc
mov
fdivr
mov
lods
loopne
or
xchg
sub
and
fstpl
aad
repz
push
pop
cmp
sbb
ljmp
outsb
dec
or
mov
inc
adc
pusha
outsb
push
sub
or
mov
mov
fiaddl
int
sti
and
xor
jmp
out
mov
push
pop
cmp
ja
inc
jle
pop
scas
and
lret
or
xchg
fwait
add
popf
adc
sarb
pop
dec
into
jno
cltd
hlt
jo
arpl
add
cld
fsts
mov
movsl
cmc
pop
mov
jp
faddl
jne
mov
loop
out
sti
aad
scas
mov
imul
rorl
inc
push
cmp
jne
data16
fstps
push
sarb
sbb
add
push
insl
popf
fnsetpm(287
sub
cs
jno
dec
add
neg
aam
jnp
clc
adc
mov
mov
sub
add
nop
sahf
add
mov
int
pop
jg
mov
xor
outsl
sub
mov
add
mov
insb
ss
jne
jnp
or
and
fisubl
repz
mov
pop
push
aas
push
lds
cmp
into
rolb
lock
mov
in
add
rol
ret
adc
adc
scas
pop
cs
test
addb
fs
mov
cmp
xor
lcall
xchg
sub
adc
cmp
xor
lods
rcll
aaa
jae
push
push
xor
sbb
push
mov
dec
into
xlat
sbb
or
roll
add
subl
or
mov
ret
sub
push
test
jge
cmpsl
or
pop
pop
fcmove
imul
ljmp
pop
ja
adc
imul
mov
ret
add
xor
jmp
ret
xlat
and
repnz
sub
xor
ss
mov
fimull
pop
pop
aas
ja
fimuls
dec
sub
bound
xlat
imul
fmulp
mov
aas
enter
dec
pop
lock
push
sti
movsl
imul
scas
push
aam
add
fnsetpm(287
xchg
cs
jmp
test
in
sahf
ss
movsl
lret
lock
idiv
scas
ret
cmc
sahf
adcl
or
ret
stos
jnp
daa
int3
jle
insl
mov
das
mov
cmp
xor
xor
outsl
sub
dec
mov
sbbb
addr16
jnp
add
sar
xchg
mov
test
shrl
fwait
rorb
insb
test
cmpsb
insl
and
pushf
inc
in
mov
mov
cltd
mov
add
lahf
std
sbb
and
cwtl
pop
pushf
mov
pop
xchg
inc
adc
into
lahf
bound
inc
sti
mov
test
cmp
mov
xchg
adc
lock
mov
fstpl
sub
xchg
ss
and
dec
mov
sbb
jmp
ds
fisttpll
mov
lock
nop
xchg
test
jp
adc
dec
xchg
mov
xchg
and
shlb
pushf
test
in
cmpsl
lcall
lds
mov
stc
sbb
ret
rclb
loope
movsb
ss
adc
adcl
jmp
cmpsb
scas
ds
pop
add
iret
and
lcall
adc
dec
cmpb
fdivl
inc
into
outsl
inc
push
jno
in
cmp
shll
cmp
or
test
lret
outsb
xchg
into
nop
jne
mov
or
pop
outsb
or
daa
sbb
push
jnp
cmc
loope
lret
popf
cld
jle
sub
js
int3
jno
inc
test
mov
rorb
sbb
jnp
pop
inc
push
aaa
pop
data16
cmpsl
stos
jecxz
lods
in
pop
pop
arpl
stc
movsl
dec
add
xchg
push
mov
cmpsb
xor
push
ds
rep
and
out
sbb
in
xchg
mov
add
scas
mov
mov
or
lds
push
jae
cmpl
dec
mov
mov
pop
cmpsl
aad
cmove
cmp
movsl
xor
stos
add
enter
add
add
lcall
in
sbb
movsl
adc
dec
push
imul
pop
popa
imul
xor
mov
mov
int3
sub
xor
loop
ret
mov
aas
push
lods
sbb
and
inc
gs
bound
jmp
fs
mov
xchg
pop
sbb
add
scas
ss
inc
mov
dec
pop
push
fcompl
ljmp
loope
iret
dec
sar
xor
icebp
jne
inc
movsl
sbb
xor
cmp
adc
sti
cli
adc
lods
pop
aaa
fistps
shlb
inc
push
push
jb
sub
aad
mov
jb
orb
sbb
mov
dec
bound
mov
jns
cmp
stos
popf
and
push
mov
in
lcall
movsb
mov
xor
aad
push
fwait
pop
mov
mov
cmp
jle
sbbl
loopne
inc
lds
popa
sahf
sbb
stos
std
fisttps
fsubrs
shr
cs
jg
loop
adc
imul
xor
sbb
cmc
or
xor
pushf
mov
lods
cmp
icebp
dec
dec
mov
cmpsb
or
ficoml
test
jae
or
mov
inc
jmp
int
add
bnd
jecxz
mov
mov
lahf
adc
lret
jmp
adc
lock
add
jnp
push
cmp
out
mov
bound
es
jmp
and
adc
dec
dec
inc
jmp
out
test
mov
xchg
iret
inc
fcomip
or
movswl
jbe
xchg
in
adc
movsl
pushf
lret
add
jb
xchg
into
dec
dec
mov
push
push
aam
pop
cltd
addr16
cwtl
xchg
inc
les
insb
mov
xor
clc
xchg
loope
ds
pcmpgtd
mov
bnd
mov
in
mov
adc
and
popf
mov
xor
outsb
mov
lret
adc
jl
mov
and
and
in
insb
daa
ss
imul
xchg
loope
mov
sub
je
pop
sub
jbe
scas
and
cmp
sub
nop
cld
xchg
inc
push
loop
sub
push
lds
mov
xor
imul
nop
sbb
inc
adcl
xorl
and
incl
cmp
ds
mov
jns
inc
or
xchg
pop
jle
dec
and
fldcw
xchg
sbb
bound
adc
dec
push
pop
out
test
pop
or
push
xchg
es
jb
inc
sahf
inc
dec
repz
push
lahf
xchg
push
adc
popa
in
scas
jbe
data16
xor
or
jecxz
mov
nopl
dec
jb
insl
inc
jg
fistps
cmpsl
jge
xor
std
hlt
out
sub
push
jno
gs
into
mov
and
push
push
pop
adc
xchg
mov
jne
test
aam
push
mov
test
das
in
pop
repnz
ljmp
aam
add
mov
inc
and
nop
adc
push
aas
xor
lahf
movsl
cld
subb
sbb
in
adc
fstps
stc
add
icebp
das
xchg
icebp
aad
or
xchg
lret
and
loope
push
out
xchg
dec
add
xchg
loop
rolb
push
insb
test
or
popa
in
rcrb
rcrl
lods
adc
push
lods
pop
lret
loop
mov
ljmp
outsl
arpl
in
mov
add
mov
in
xchg
fnstcw
sahf
cmp
stos
pop
outsl
vpermi2w
pop
icebp
adc
call
mul
rcll
testl
lock
insl
mov
or
pop
jae
imul
push
mov
and
in
stos
ljmp
outsl
scas
out
lcall
adc
out
or
js
jno
shlb
scas
mov
mov
xor
jo
inc
dec
inc
push
pop
xor
hlt
shrl
pushf
xchg
xchg
out
fadds
lcall
mov
out
bound
adc
addr16
pop
jae
shrl
es
jns
ret
xchg
sub
dec
in
mov
cs
sahf
lock
jnp
adc
mov
test
dec
dec
fnstcw
xchg
add
cmove
fstps
sub
add
mov
fmull
jo
cltd
pop
fiadds
jg
insb
call
lods
mov
shlb
xchg
jge
loope
inc
clc
repz
xchg
data16
pop
popa
pop
mov
xor
cmpb
mov
mov
cwtl
cmpsb
push
outsb
jg
mov
adc
addr16
fs
mov
push
add
dec
push
roll
fdivrs
jmp
daa
mov
mov
adc
mov
push
arpl
je
bound
rorl
cli
std
lea
ffreep
pop
popf
rorl
stos
and
notl
or
hlt
lock
xor
sub
mov
pop
sbbl
dec
and
mov
adc
add
mov
add
pop
imul
push
jne
imul
daa
aad
adc
or
test
mov
out
into
pop
jo
popa
adc
pusha
fsub
lock
jge
repz
pop
push
shrl
mov
cld
adc
xchg
inc
cmp
or
mov
cmp
add
mov
sbb
js
and
int
mov
cmc
add
daa
icebp
push
mov
sahf
sub
add
and
std
jnp
cltd
fbld
shl
pushf
or
dec
mov
or
mov
or
mov
and
dec
repz
fmuls
sbbb
int3
push
ret
mov
sahf
sub
arpl
mov
loopne
push
int3
lods
mov
and
out
enter
cli
popf
mov
xchg
jae
sbb
dec
pop
outsb
nop
inc
int3
icebp
xchg
stos
ja
cltd
jle
in
inc
adc
leave
fcoml
les
cmpsl
imul
movl
in
imul
xor
xchg
movsb
std
stc
int
stos
mov
pop
sub
dec
outsl
lcall
push
aam
pop
stc
push
add
mov
inc
mov
stos
lahf
test
in
and
jne
xor
and
mov
cmp
mov
mov
in
mov
into
mov
pop
loopne
stc
iret
pop
scas
stos
shlb
shrl
inc
xor
adc
outsb
push
iret
mov
pop
int
imul
dec
int3
adc
stos
arpl
leave
out
sbb
sbb
mov
adc
cmp
mov
inc
js
imul
ds
xchg
mov
mov
adc
out
push
jno
pop
sub
mov
sbb
mov
mov
clc
nop
lea
test
or
mov
xor
test
pop
stc
lock
ret
pop
in
mov
imul
and
clc
push
pop
sbb
jmp
mov
push
mov
dec
sti
jns
mov
or
mov
popf
jo
mov
dec
xor
loopne
shll
jo
push
push
aas
jne
dec
pop
popf
sbb
adc
mov
mov
aaa
pop
in
add
sbb
mov
rclb
add
icebp
inc
sub
or
push
xchg
push
mov
scas
test
adc
imul
push
dec
insb
jg
fstpl
mov
loope
jns
cmp
xchg
es
test
test
mov
mov
je
into
xchg
arpl
int3
stos
lahf
adc
fisttpl
adc
mov
stos
fildl
mov
lods
subl
push
sbb
xchg
pop
xor
addr16
fs
and
dec
mov
mov
aam
pushf
cmpb
mov
jbe
mov
addr16
adc
insb
push
push
test
pop
ret
repnz
jge
mov
xchg
inc
mov
sub
test
inc
cmc
xor
pop
icebp
popa
fcmovb
sub
push
fbld
fidivl
ret
insl
in
dec
aas
push
push
adc
lahf
sbb
test
lret
cmp
dec
and
mov
cwtl
inc
imul
jno
jnp
nop
jbe
sbb
gs
ljmp
dec
and
push
mov
mov
shl
outsb
push
dec
loopne
rclb
mov
push
cld
pop
stos
jge
sub
addr16
push
hlt
mov
outsb
repnz
ror
push
push
fimull
and
xorl
subb
loop
jmp
adc
xchg
cld
xor
test
mov
int
stc
imul
daa
add
mov
fbld
xor
lahf
sub
decb
push
aas
rol
cltd
jg
outsl
cld
inc
mov
mov
ljmp
xor
sti
add
or
jae
lods
out
dec
lret
sub
sti
mov
test
inc
loop
lds
mov
pop
cmp
minps
pop
mov
jns
inc
cmp
mov
int3
notl
fwait
ret
adc
ds
call
and
adc
std
xor
scas
push
jecxz
out
aaa
scas
add
sarb
pop
les
cmpsl
pusha
shll
and
cmpsb
add
fbstp
or
mov
inc
sbb
inc
bound
push
neg
pop
movsl
test
pusha
dec
enter
xor
jle
inc
movsb
pop
int
dec
pop
fidivs
mov
xchg
and
call
imul
sbb
and
sbb
nop
xchg
pushf
mov
push
int
scas
aad
icebp
arpl
dec
xchg
dec
jmp
stos
adc
fimuls
sub
repnz
sub
std
gs
adc
jp
outsl
fiaddl
lds
or
inc
mov
orb
push
pushf
cmp
mov
push
sub
inc
iret
push
test
roll
int
fisubl
xor
cmp
inc
in
inc
sahf
push
mov
mov
push
test
or
out
dec
sbb
dec
adc
test
in
xor
dec
mov
inc
stos
sahf
mov
lret
je
out
fucomip
lods
jns
loop
adc
cli
int
mov
jmp
dec
enter
cmp
mov
fdivl
vunpcklpd
sub
dec
shr
lods
ja
movsl
adc
push
push
sub
movsl
push
lods
jmp
out
lock
clc
shrb
cmp
push
popa
rcrl
sub
int
rclb
mov
fwait
mov
xor
cmp
cmpsb
inc
jb
outsb
adc
push
arpl
dec
mov
sub
ja
rcrb
int3
mov
enter
ja
cwtl
jno
push
adc
inc
dec
dec
inc
add
add
test
hlt
je
xchg
out
mov
and
fdiv
sarl
mov
sub
out
jecxz
lret
mov
inc
push
xchg
push
add
in
andb
jp
leave
loopne
jmp
data16
and
mov
loope
add
loope
test
adc
js
xchg
cwtl
adc
ss
in
adc
sub
cmc
cli
xor
mov
and
xor
mov
push
xchg
pusha
inc
out
test
pop
mov
aaa
cmp
adc
xchg
imul
test
mov
cmc
push
fs
incb
mov
dec
lret
fwait
mov
das
js
lods
mov
cmpsb
push
rol
jl
and
out
jno
lods
call
xchg
ret
pop
mov
popa
push
or
lahf
mov
sti
lods
cld
lods
loope
or
jge
lea
sbb
mov
add
xor
dec
dec
jns
dec
loope
mov
mov
push
push
lock
sbb
mov
in
loop
push
scas
xchg
jno
in
mov
mov
aas
aas
xchg
cld
xor
pop
xlat
sub
mov
ja
sbb
mov
out
imull
mov
fstl
pop
enter
adc
jmp
rorb
loop
pop
fs
mov
push
sbb
push
jge
dec
out
push
mov
in
inc
xchg
popa
sub
ja
jge
mov
ret
andb
sbb
mov
inc
adc
jnp
es
js
xchg
dec
inc
jle
movsl
and
ljmp
mov
in
push
xor
inc
sbb
test
cmc
xchg
cmp
push
adc
imul
inc
ljmp
add
call
shlb
movsb
jbe
rclb
adc
hlt
push
popa
out
addr16
dec
pushf
ljmp
add
and
sub
push
push
xor
and
lret
push
stc
ss
ja
fdivs
cld
stc
js
cltd
daa
dec
outsl
scas
or
sub
sub
inc
rolb
out
bound
xor
scas
lret
leave
mov
inc
adc
xchg
lds
add
cwtl
pop
aad
filds
fisttpll
cmpsl
add
outsb
mov
adc
fimuls
push
in
out
stos
inc
cmp
xchg
dec
adc
sbbl
mov
stos
sbb
outsl
dec
or
jl
lret
mov
jne
mov
shl
sub
xchg
mov
dec
cmp
pop
test
sti
cmp
add
mov
inc
xor
rcll
sub
fwait
add
les
xchg
aas
insl
ljmp
aad
and
mul
dec
dec
push
sub
mov
xchg
popf
push
push
clc
cmp
adc
or
movsl
aam
xchg
ss
inc
movsl
inc
adc
mov
mov
mov
orb
inc
int
jo
inc
xor
aaa
cld
inc
imul
insl
or
movsl
mul
sti
push
ljmp
cmp
xor
outsl
pop
stc
loop
inc
shr
add
ds
int
enter
fwait
and
and
cli
add
xor
fcoml
es
sarl
jnp
cwtl
data16
into
arpl
cld
movsb
cmp
stos
leave
stc
insl
or
loop
dec
sbb
sbb
push
sub
hlt
repnz
adc
jl
sbb
xor
xor
pop
and
test
cmp
jl
inc
repz
inc
pop
mov
xor
push
repz
dec
jo
je
loop
jmp
xor
sarb
cmp
sahf
sbb
shrb
test
adc
xchg
mov
imul
sbb
pop
mov
iret
and
inc
ja
xor
xor
daa
movsl
test
mov
mov
dec
and
add
mov
enter
push
mov
sub
out
push
adc
aam
xchg
fdivs
test
sub
test
dec
pop
add
repnz
decb
dec
insl
fsubl
adc
lods
xchg
sub
jb
or
or
aam
stc
jmp
sbb
dec
mov
dec
mov
sbb
test
in
push
or
lahf
xlat
je
nop
push
test
outsl
in
fs
icebp
and
popa
inc
mov
pop
xor
jmp
or
repnz
push
lock
sbb
ja
mov
data16
or
fwait
cmp
mov
mov
sub
sbb
sub
adc
jbe
lea
sub
jmp
je
jle
xorl
fwait
loopne
adc
xchg
lret
jle
jg
clc
into
or
jae
jno
lahf
cmp
ds
jne
jbe
addr16
jmp
int
icebp
aam
cmpxchg
pop
push
xor
xor
call
fwait
scas
dec
mov
xchg
arpl
add
add
mov
xor
ss
inc
push
inc
fildll
cmp
push
cmp
aas
popf
push
mov
gs
xchg
or
fstpl
or
lods
xorl
add
jecxz
sbb
ja
iret
insl
fiaddl
dec
jbe
test
lret
xor
adcb
push
dec
cwtl
dec
shll
xor
mov
jmp
sbb
daa
lods
popf
ret
add
clc
ljmp
mov
mov
cltd
pop
push
inc
stos
add
sub
ficoml
xor
shl
xchg
insb
push
sbb
or
out
push
icebp
insl
std
sub
jbe
push
movsb
mov
ja
out
xor
cmpl
out
pushl
test
mov
mov
cmp
add
sub
ffree
dec
sub
icebp
push
xor
imul
push
sbb
mov
nop
ss
call
clc
adc
popa
sbb
in
dec
clc
ja,pn
insl
or
adc
ret
arpl
test
std
push
or
fldl
xchg
adc
fcmovbe
int3
addr16
sbb
sbb
jl
cmp
repz
mov
mov
jp
std
jge
mov
push
fdivrs
int
cmp
push
and
lods
jb
push
sbb
inc
sub
sarl
push
nop
movsb
lods
mov
into
insb
jg
addr16
stc
cmpsl
pop
xor
pop
cwtl
xchg
out
lods
shlb
aam
mov
jle
mov
test
shlb
int3
push
dec
pop
xor
stos
getsec
imul
mov
and
inc
popf
sbb
fidivrl
sub
jae
out
inc
les
dec
and
mov
fcomip
xchg
shll
mov
or
sbb
push
lods
mov
leave
jp
lock
sbb
xor
adc
dec
adcl
stos
cmp
sbb
adc
mov
dec
add
divl
dec
or
mov
loop
or
mov
movsl
ficoms
pop
jbe
fldl
out
mov
aas
and
in
xchg
in
sub
ret
mov
mov
jmp
fiaddl
sarb
mov
hlt
out
add
cltd
cmp
stos
cli
push
dec
cmp
lock
sbb
pusha
xor
cmpsl
sbb
sbb
aaa
xchg
loope
mov
xlat
rcrl
and
repnz
scas
out
mov
xchg
xlat
pushl
lds
in
jns
xchg
sbb
outsl
or
inc
hlt
add
push
mov
mov
out
add
pop
scas
cmpsb
lods
fsubrl
outsb
ret
inc
mov
clc
fwait
lods
adc
pop
xchg
pop
in
or
test
sbb
add
fs
pop
sarl
mov
ret
clc
jne
jnp
int3
mov
lds
jns
mov
sub
clc
xchg
test
jns
inc
mov
aas
add
and
rcll
pushf
mov
sbb
fdiv
iret
dec
fisubl
popa
movsl
in
mov
nop
pushf
pop
iret
pop
ficomps
and
add
inc
pop
add
cmp
xchg
xor
xchg
jmp
jmp
push
pushf
icebp
mov
or
mov
lret
cmc
add
xor
xor
sbb
std
pop
pop
rcll
pop
sub
iret
cmp
dec
lock
xchg
int3
xchg
inc
mov
and
push
js
out
pop
lods
jl
xchg
data16
sbb
xchg
adc
adc
add
ljmp
popa
xchg
or
mov
jecxz
jg
cmp
pop
cli
adc
shll
das
jle
shll
aas
mov
or
pop
dec
lcall
fisubl
mov
cmpsl
push
mov
cld
or
inc
int
cmp
test
sbb
mov
bsr
pop
ret
pushf
adc
popf
dec
inc
lds
into
aas
pop
dec
ret
daa
mov
jnp
es
jmp
mov
in
adc
test
jl
repz
lods
push
dec
adcb
adc
mov
movsb
dec
pop
push
out
jl
mov
fnstenv
mov
push
add
test
and
cmp
push
in
movsb
addr16
push
sub
nop
sub
test
aaa
cmp
pop
repz
jae
xor
pop
push
nop
loope
mull
loop
mov
push
stc
xchg
push
lods
sti
sbb
lret
mov
xor
xchg
popa
mov
push
push
inc
jmp
and
pop
and
jae
mov
cwtl
addr16
mov
sub
rorb
push
xchg
je
xor
xlat
jno
mov
fwait
dec
imul
or
push
fdivs
rcl
dec
mov
data16
orb
rdpmc
pop
pop
add
adc
fiaddl
inc
data16
ficoml
addr16
xchg
pop
xor
iret
xor
test
sbb
push
add
sbb
test
mov
jnp
sbb
push
adc
fdivr
pop
push
dec
add
outsb
mov
sub
xchg
xchg
inc
jle
mul
cmc
jl
xchg
mov
subb
mov
cmc
push
test
cmp
pop
test
fbld
push
jb
dec
rcrb
daa
aad
push
xchg
xor
sbb
adc
mov
and
out
inc
add
push
lods
xlat
lret
sub
xlat
mov
shr
arpl
xchg
or
push
sbb
inc
sbb
mov
int
sub
mov
push
fs
dec
sbb
mov
adc
aam
fmull
xchg
adc
cmp
jbe
push
push
enter
lds
push
sbb
mov
shrb
add
cmp
mov
das
push
add
scas
adc
mov
sarl
in
cmpsl
ss
xor
sahf
cld
mull
push
data16
imul
add
pop
and
scas
push
sbb
sbb
dec
outsb
jge
mov
sbbb
pop
mov
mov
test
inc
cmc
fstps
lret
ja
sbb
sub
gs
popf
call
jle
bound
cmp
cmpsb
lods
or
mov
xor
cmp
into
push
mov
in
xchg
adc
push
push
fcmovbe
push
orl
mov
inc
xchg
cmpb
jle
rolb
aam
xchg
mov
jp
test
jne
fsubrs
sub
xchg
and
imul
imulb
iret
dec
jnp
add
xchg
dec
dec
add
and
clc
ljmp
jmp
mov
call
xchg
mov
inc
sub
data16
dec
mov
outsb
jmp
xor
cmpsb
out
fildl
adcb
sub
mov
sub
lret
mov
sbb
jb
cli
push
les
xchg
xchg
dec
and
dec
xchg
adc
mov
shrl
pop
dec
xchg
and
and
test
xchg
mov
dec
add
xchg
and
jmp
mov
mov
and
call
ja
add
out
fisttpl
pop
outsl
xchg
sarb
repz
lds
lods
adc
cmpsb
pop
fisubrs
ds
out
push
mov
or
cld
mov
lret
out
inc
int
arpl
add
add
adc
and
or
mov
and
push
sbb
fidivrl
adc
stos
or
cmpsl
fcomip
testb
out
adc
mov
cmp
cwtl
mov
dec
in
inc
test
out
sarb
sahf
cmc
and
adc
jae
mov
outsb
xorb
scas
popf
shr
scas
or
dec
pop
fnstcw
mov
stos
push
mov
jb
add
inc
jns
xchg
filds
xchg
xchg
inc
daa
nop
push
testl
ja
jle
jecxz
inc
in
cltd
pop
pop
ds
jnp
and
push
je
out
loopne
sti
mov
mov
and
mov
pop
shlb
lcall
adc
mov
mov
xchg
pop
lods
inc
stc
inc
jge
inc
mov
insl
sub
mov
aam
out
loop
xor
add
dec
std
pop
std
fsubp
cmc
or
outsl
cmp
mov
jecxz
leave
and
sbb
push
cmp
pop
xchg
or
sbb
out
dec
pop
loopne
cwtl
cmp
jbe
enter
dec
or
fs
cltd
mov
fisttpll
insb
adc
xor
adc
push
rol
sbb
icebp
in
cmpsl
mov
sbb
int3
aam
mov
push
out
dec
mov
lods
sub
rcrl
pop
aad
bswap
lock
cmp
dec
cwtl
xchg
mov
mov
or
add
in
cmovae
add
xchg
ds
das
dec
lret
push
mov
hlt
lcall
jns
popa
cli
mov
inc
jb
push
test
loope
sub
jne
pop
mov
test
adc
loop
cmp
add
push
inc
mov
mov
ljmp
lret
push
popf
fwait
sbb
mov
fsubrs
test
dec
das
jne
fstl
iret
inc
push
das
xchg
mov
test
dec
push
cmc
into
jo
or
leave
ror
pop
adc
dec
adc
in
leave
inc
adcb
or
mov
in
stos
stc
mov
jp
cld
addl
nop
pop
dec
addr16
cmc
shlb
xor
aam
jmp
mov
enter
out
xchg
stos
rclb
cld
in
mov
pop
mov
push
mov
in
insb
inc
fisttps
cwtl
sbb
jne
int3
bound
cld
out
jl
inc
mov
sub
repz
push
outsl
stc
fwait
push
leave
outsl
out
out
loope
jno
in
pusha
push
mov
pop
int3
shrb
cwtl
cmp
xor
in
fstpt
aam
sbb
js
mov
and
push
adcl
pop
lock
mov
insb
daa
out
loope
aaa
jg
popf
call
cli
and
fwait
dec
mov
add
in
scas
xor
jae
jg
ret
popl
movsb
mov
sbb
or
fldcw
out
sbb
mov
push
xlat
sarb
mov
mov
push
push
xchg
aad
test
sub
xor
mov
xchg
rorl
movswl
mov
mov
testb
pop
push
cli
leave
ret
fs
and
sarl
mov
out
and
push
or
or
xchg
aam
pop
cmp
rol
hlt
sbb
imul
jb
fidivrl
cwtl
outsl
add
mov
mov
adc
mov
xchg
add
cmp
inc
loopne
imul
fistl
jp
mulb
and
ret
mov
cmp
ret
push
in
movsb
mov
cmc
xchg
lds
sub
movsl
xchg
push
jbe
push
pop
push
movsb
popa
adc
sti
popl
daa
pop
sbb
adc
lret
cmpsl
mov
jbe
push
ss
jle
call
pop
dec
inc
push
jge
mov
jp
cs
mov
test
stc
rcrb
xorl
stc
push
xchg
rol
and
and
cmp
jp
cmc
lods
imulb
gs
pushf
fs
adc
pop
shll
repnz
adc
jle
and
adc
dec
fidivrl
lods
jp
sub
xadd
cmpsb
sub
stos
cltd
mov
movsl
cmc
mov
mov
outsl
xor
rcrl
cmpsl
test
sbb
adc
pop
jns
loopne
test
sub
clc
stos
das
jnp
lds
sub
ret
sti
sbbb
mov
xchg
lret
aas
out
pop
pop
dec
insl
push
inc
fcomip
add
adc
test
jne
lcall
in
das
outsl
cmc
flds
in
repnz
mov
stos
or
xchg
jle,pn
sbb
out
ret
xchg
and
ret
cli
out
pop
and
fwait
lods
sub
enter
std
cmp
sub
nop
into
test
nop
mov
out
arpl
sarb
sub
aad
mov
out
jg
test
dec
cli
fildl
stos
jno
sub
mov
testb
inc
xlat
mov
mov
adc
mov
pushl
imul
adc
int3
xchg
mov
cli
mov
cmc
sub
push
or
jg
pop
in
sub
movsl
cs
ret
cmp
sub
repz
fstpl
int3
repz
stos
in
dec
xchg
nop
mov
lcall
xor
inc
dec
xor
xor
inc
insb
std
pop
fs
dec
pop
or
cld
push
pop
push
pusha
xlat
lcall
nop
push
cmp
fistpl
outsl
pop
pop
imul
mov
cmp
leave
fsubr
mov
mov
xor
pop
cs
add
mov
mov
mov
xchg
and
or
lret
mov
add
sahf
xor
xchg
setnp
push
ficoms
push
cld
add
push
ror
icebp
stos
mov
inc
cmpsl
mov
rorl
in
lods
pop
mov
imul
pop
xchg
mov
mov
aaa
rorl
push
sbb
in
jecxz
pop
cwtl
jp
mov
aad
popf
sbb
cmpsb
jge
adc
into
mov
aad
out
fidivl
push
lahf
and
js
test
mov
xor
cmp
cltd
mov
sbb
nop
push
add
push
adc
ret
stc
shlb
insl
lcall
xor
xchg
mov
push
mov
mov
xor
test
dec
adc
lret
sub
je
lock
faddl
pop
or
mov
lret
xor
xor
dec
push
fnsave
jmp
xor
stos
arpl
in
inc
stc
pop
leave
shrb
std
inc
inc
pop
sub
mov
in
jo
mov
in
pop
and
inc
mov
or
inc
mov
pop
jb
inc
fs
int3
xchg
lahf
xchg
xchg
inc
or
sbb
test
mov
arpl
ret
dec
pop
cmp
fldt
mov
and
stos
imul
stos
ljmp
lret
cwtl
jo
loope
hlt
lret
es
stos
in
hlt
push
lds
mov
je
inc
sbb
jg
mov
clc
aaa
shlb
cmp
shlb
jp
hlt
or
push
xchg
daa
popf
dec
pop
sarb
dec
pop
loope
sbb
cmpl
mov
sub
or
imul
lock
mov
xchg
mov
jmp
lods
add
cmp
pop
in
ja
pop
push
aam
jle
and
pusha
das
dec
insb
pop
gs
js
dec
mov
aad
leave
frstor
pop
outsb
insl
xchg
cmp
in
mov
int3
ljmp
mov
cmc
jns
cmp
std
jl,pn
inc
xorl
add
or
in
xchg
push
cld
or
shl
mov
test
out
and
in
inc
push
insb
aaa
enter
int
mov
push
push
push
sbb
loope
pop
jecxz
mov
cmc
insl
das
xlat
xor
jnp
jp
push
dec
mov
xorl
mov
dec
sahf
int
cltd
mov
int
test
mov
dec
popa
int
jg
mov
pop
add
ss
xchg
movsl
rorb
fmull
in
add
mov
iret
cmp
movsb
movsb
jnp
add
lods
repz
js
popa
push
clc
test
cs
dec
inc
in
lods
arpl
and
fcmovnb
or
ja
sbb
int
out
stc
xchg
movsl
cmp
push
xchg
mov
outsb
add
int
jb
sub
fmull
dec
stos
jmp
cwtl
pop
push
insb
aad
popl
cmp
aad
adc
push
test
out
jl
xor
inc
cmpl
mov
mov
std
or
in
cmp
dec
testb
rorb
mov
sbb
or
sbb
popf
dec
cwtl
jge
cmp
inc
popf
jg
mov
rcrl
pop
lcall
cmp
call
mov
daa
mov
cli
ja
jo
cmp
cli
inc
inc
data16
jb
add
jg
jle
sub
pop
fcomip
push
inc
outsl
into
sub
mov
movsl
inc
xchg
cmc
ret
es
or
pushl
sub
xchg
xor
test
mov
movsl
jge
out
fnstenv
sbb
inc
mov
xchg
imul
xor
in
nop
xor
mov
ljmp
sub
mov
jl
dec
inc
dec
test
inc
mov
inc
or
push
add
in
lret
lods
mov
jae
add
idivb
rcrb
adc
imul
sahf
lds
xchg
xchg
jp
mov
lods
jns
dec
stc
cmp
lods
push
adc
push
xor
dec
xor
push
lds
repnz
icebp
pop
daa
in
mov
test
xor
je
push
loope
adc
aam
iret
add
data16
xor
and
fistpll
and
push
shll
lock
or
jg
xchg
mov
cmpsb
mov
std
sbb
insl
jmp
mov
orl
popf
mov
call
popa
outsl
jp
mov
adc
xor
lods
cli
sub
cmpsl
fnstenv
int3
lock
adc
andb
fwait
adc
cmpl
jns
pop
cmp
or
jp
frstor
xchg
pop
arpl
aaa
clc
insb
mov
imul
mov
int3
jb
mov
xor
enter
fs
jb
popf
sub
or
add
in
add
dec
movsl
pusha
arpl
cwtl
push
into
and
add
and
ja
and
dec
inc
cmc
jmp
jnp
push
mov
cwtl
shrb
je
sub
pop
arpl
push
fwait
sbb
inc
mov
xor
xchg
aam
push
sahf
mov
test
popf
repnz
aaa
adc
jo
push
es
mov
jno
insb
mov
mov
sub
jb
push
bound
fmuls
test
jnp
mov
xchg
js
popf
mov
mov
sti
arpl
loop
loope
repnz
fsts
xor
and
into
arpl
xchg
dec
cmp
push
outsl
pop
fdivrs
dec
pop
ja
or
sbb
leave
xor
add
test
jne
pusha
dec
shrb
mov
add
xor
dec
dec
xchg
pushf
xchg
jne
cmp
test
mov
cltd
mov
jmp
sti
rcl
xchg
aas
cmp
push
in
fstpt
pop
jmp
and
sahf
fld1
in
cmp
lds
lea
shlb
cld
jg
push
cs
call
xor
mov
jne
repnz
xchg
jl
dec
cmpsb
pop
push
std
push
sti
clc
inc
add
gs
das
push
push
xchg
dec
sub
push
jno
push
add
inc
xchg
xchg
add
enter
xlat
in
mov
stc
mov
or
or
or
call
addl
mov
fsubrl
fsubr
pop
cmp
cmpsb
cld
jl
rorl
adc
mov
loopne
out
cmp
push
fstpt
inc
adc
lret
rcll
imul
xchg
jne
jecxz
jmp
das
das
or
add
xchg
sbb
inc
sub
mov
div
js
push
fisubs
sub
push
jecxz
movsl
lahf
xor
insb
jge
pop
mov
inc
sahf
in
push
sub
dec
pop
sub
push
jmp
cmp
popf
xor
cmc
shlb
fbstp
lods
fidivrs
aaa
repz
dec
and
add
xor
cltd
or
and
adc
dec
jo
pop
out
xlat
out
inc
xor
in
call
lret
mov
test
hlt
inc
mov
xor
imul
test
ret
sub
lahf
mov
inc
jne
rclb
insb
cmp
mov
sbb
mov
test
fwait
cmc
aam
mov
stos
inc
adc
loope
xchg
mov
push
push
mov
add
das
stos
repnz
pop
stos
adc
dec
inc
add
movsl
pop
lret
aaa
xchg
jns
imul
xchg
sub
fnstenv
roll
out
add
or
in
in
push
or
sbb
xchg
and
xor
push
push
cmpsb
or
sbb
inc
aaa
insl
adc
sub
std
lahf
xchg
pushf
loop
or
in
push
aam
pop
jp
jnp
pop
movsl
outsb
loopne
icebp
xchg
subb
call
pop
inc
movsl
scas
mov
xor
mov
imul
subb
inc
jno
jl
xchg
lahf
mov
lods
mov
ljmp
imul
and
inc
pop
stos
xor
out
add
adcl
inc
sti
sub
test
push
call
stos
out
dec
xchg
jb
sub
adc
stc
or
mov
mov
negl
pop
nop
lahf
pushf
mov
cltd
cs
cmp
jnp
repz
ret
mov
sbb
int
pusha
mov
or
repz
adc
inc
mov
bound
and
inc
mov
popf
push
push
pushf
mov
mov
sbb
enter
xchg
mov
das
pop
inc
pop
outsb
enter
int
test
cli
add
push
pop
inc
inc
mov
mov
in
test
arpl
call
cmpsb
xchg
and
incl
adc
push
or
mov
ss
sbb
ret
insl
insb
out
mov
push
out
sub
imul
in
pusha
das
scas
fs
adcb
mov
mov
fs
xchg
fnstcw
in
or
sub
shll
mov
mov
fsubs
out
outsl
rclb
pop
lret
imul
push
cli
sbb
mov
jae
sub
popa
adc
in
shr
inc
and
insb
jmp
push
leave
push
nop
xchg
pop
dec
sbb
or
aam
jg
enter
ret
into
int3
add
dec
sbb
jnp
xchg
rclb
insl
jecxz,pn
fwait
pop
jg
pop
sub
push
daa
pop
push
pop
stc
cltd
imul
cmp
fistpll
leave
cmp
and
cwtl
mov
or
insb
xlat
sub
clc
out
addr16
fistpl
rcrb
les
adc
push
mov
jnp
sub
mov
or
pop
push
mov
sub
shl
ret
cmp
shl
jp
arpl
out
mov
inc
popf
cmc
sarl
notl
bound
loopne
pop
sub
push
cmp
pop
jbe
popf
aas
mov
lret
fisubl
cli
fstl
fs
inc
add
divl
xor
jns,pn
cmp
clc
xchg
out
adc
arpl
cmp
sbb
popa
xchg
push
sbbb
faddl
inc
inc
dec
test
pop
das
out
inc
jl
cmp
mov
sub
mov
fstpt
movb
push
lods
jmp
add
out
scas
xchg
rcl
fstps
jne
shll
pop
mov
sbb
scas
add
loop
lcall
aaa
inc
or
cmc
jle
pop
inc
or
call
js
xchg
jno
xor
pop
sub
je
jno
sbb
enter
mov
sub
cmp
xlat
inc
in
ja
adc
add
aam
xchg
pop
adc
cmp
test
test
pusha
mov
test
andb
lods
adc
jg
subl
scas
mov
lock
jge
xor
pushf
xor
nopl
adc
stos
lahf
cli
iret
sti
movsl
aad
insb
mov
addr16
fdiv
call
add
xchg
adcl
shll
leave
stos
sub
lods
cmp
sbb
mov
xchg
outsl
dec
mov
pusha
jns
rol
roll
adc
or
rorl
push
mov
adc
mov
or
add
and
fisubrs
jg,pt
xor
mov
pop
mov
mov
les
test
fisubrs
rcrb
inc
push
adc
xchg
rcr
push
add
push
repnz
push
pop
pop
js
push
andb
xchg
out
fnstsw
inc
testl
inc
inc
sti
push
jl
orl
gs
mov
stos
xchg
dec
mov
std
push
xlat
lods
fstpt
dec
push
imul
or
outsb
mov
xchg
fldenv
or
pop
jbe
or
xor
xor
lods
or
gs
rep
pop
ret
push
loop
cld
mov
inc
loope
mov
aam
int
mov
mov
iret
adc
je
test
mov
jbe
insl
out
fcoms
scas
aaa
pop
jmp
cmpsb
mov
sub
popf
sub
xor
lahf
mov
lods
adc
push
jmp
push
lret
pop
std
mov
shll
outsb
inc
shr
mov
idivl
pushf
pop
adc
sub
dec
jno
int
movsb
sti
xlat
jg
jmp
push
adc
ljmp
xchg
mov
cmc
xor
add
mov
cmc
test
jp
mov
pop
add
xchg
fnstenv
test
push
mov
push
xor
and
rorb
ds
int
push
xchg
jo
sbb
scas
rolb
dec
xchg
nop
dec
clc
fldl2t
aas
lea
xor
iret
imul
aam
pop
add
or
repz
out
adc
pusha
adc
dec
test
out
mov
mov
pop
xchg
pop
stos
mull
xor
aam
cmp
jb
and
aas
sub
pop
lods
mov
and
add
and
test
das
adc
js
daa
pop
jne
popa
ficomps
cmp
inc
pop
js
pop
inc
stc
in
pop
inc
inc
cmp
lds
lret
pop
lods
adc
push
mov
xchg
shl
pop
mov
cmp
popf
outsl
imul
out
and
add
sub
xor
lods
int
add
or
inc
and
in
std
push
mul
testl
pop
repnz
sbb
push
cmp
sub
mov
xor
pop
mov
mov
jno
rorb
cmpsl
or
sub
push
repnz
push
insl
stos
sbb
ss
aad
xchg
cwtl
test
loop
sub
out
ret
pop
mov
gs
repz
pop
cmpsl
shlb
push
cmpsl
mov
xchg
call
leave
cmp
jb
roll
xchg
sbbl
test
test
jo
popf
pop
decl
out
sbb
cmp
rorb
cmp
nop
xchg
in
fs
shl
jnp
xor
cmp
int
test
push
sbb
call
push
xor
nop
adc
or
push
xchg
int3
test
mov
dec
rcll
adc
jb
movsl
push
pop
push
add
adc
adc
addr16
sbb
adc
sub
cld
xchg
xchg
int
jbe
jl
jmp
cmpsl
es
and
aam
sub
flds
push
nop
and
lahf
push
pop
je
push
push
sub
daa
div
aaa
into
mov
pop
bound
jmp
ljmp
movsb
xor
inc
xor
mov
enter
jp
bound
outsl
xor
adc
inc
or
inc
cs
cli
leave
movsl
pop
xchg
jbe
stos
mov
xor
cmp
ds
sbb
dec
add
out
sub
dec
inc
add
aaa
xchg
pop
or
insl
lcall
and
jmp
inc
mov
mov
ds
pushf
push
addb
lods
sar
jns
xlat
cmp
scas
cmc
dec
dec
in
imul
jns
mov
and
mov
aas
mov
loope
shlb
lret
sbb
out
dec
fisttpll
push
jns,pn
scas
jp
lret
mov
lahf
mov
inc
sar
jecxz
mull
lock
sub
jo
and
iret
jp
mov
pop
xchg
fnstcw
inc
or
repz
fsubs
inc
mulb
or
jle
stos
push
pop
mov
add
xor
adcb
adc
add
or
sbb
mov
dec
jg
ss
push
enter
fwait
shr
aas
call
in
loop
hlt
mov
inc
rclb
pop
xchg
mov
divl
shlb
sub
mov
test
inc
mov
and
cmp
out
add
add
inc
add
and
repz
mov
sbb
inc
pop
lock
cltd
cltd
std
mov
inc
cmp
sub
add
out
lods
fdivrl
aad
test
movsl
inc
insl
dec
out
jns
mov
sub
int3
push
lea
in
xor
dec
adc
cmp
dec
or
subl
sarl
flds
repnz
and
pushf
aad
lds
and
stos
insl
lret
adc
add
sahf
pop
mov
pop
inc
sbb
jmp
push
shl
icebp
sti
fisubl
or
mov
dec
test
sub
sbb
and
rcrl
inc
mov
lods
dec
adc
nop
clc
add
out
mov
rcl
out
mov
shrl
ds
fstpt
pop
adc
out
test
or
lret
cmp
ficomps
andb
ret
pop
nop
test
jnp
repnz
clc
out
pop
out
jecxz
mov
mov
cmc
mov
jmp
repz
enter
addr16
cmp
pop
push
pop
scas
leave
rclb
repz
fidivs
mov
dec
lcall
inc
scas
xlat
adc
loop
iret
and
jle
pusha
fcompl
or
std
xchg
pop
lret
cli
xchg
ss
ds
ljmp
mov
xor
lret
sbb
push
daa
jecxz
out
lret
fisttpl
iret
xchg
js
imul
cwtl
push
scas
adc
sbb
ret
xchg
dec
lds
in
mov
outsl
or
jae
jg
test
mov
dec
push
dec
lret
call
sbb
fs
cmp
cmp
gs
push
lcall
lods
mov
mov
arpl
mov
mov
push
or
pushf
push
jno
nop
pop
jl
push
ds
push
push
mov
les
negb
andl
cmp
xor
adc
pusha
xor
lcall
sub
ss
sbb
movsl
andb
cmp
pop
mov
repz
pop
popl
gs
sbb
sbb
mov
xchg
insl
cli
sbb
loop
jno
push
clc
in
push
das
xchg
pop
mov
mov
or
fiadds
and
xchg
pop
loop
inc
inc
arpl
aaa
icebp
sahf
cmp
xchg
sub
and
lret
iret
mov
cmp
mov
getsec
leave
push
mov
fisubs
in
xchg
lret
pushf
or
or
inc
add
imul
dec
or
movsb
mov
out
dec
je
ret
xor
inc
int
jne
repnz
sub
inc
dec
cmpsb
jbe
out
xchg
jno
xor
pop
leave
inc
andb
outsl
sbb
mov
dec
ret
xchg
push
arpl
xlat
and
jecxz
idivb
mov
adc
sub
jge
movsb
mov
jo
gs
pop
enter
and
add
int
push
jle
xchg
mov
dec
out
imul
jns
add
fists
repnz
sub
shrl
aad
mov
dec
add
outsb
mov
fcomps
jae
add
mov
mov
add
sbb
mov
push
lcall
test
repz
xchg
jne
pop
jle
shrl
push
push
stos
hlt
push
test
push
mov
and
loope
ds
out
scas
xor
dec
js
pop
dec
xor
cld
rep
clc
push
loopne
test
sub
jne
push
or
xor
test
or
fisttps
orl
cmp
mov
xlat
mov
ljmp
js
or
cltd
sbb
dec
add
leave
int
scas
add
scas
xchg
ja
jo
jnp
jns
out
fmull
sarl
sub
in
cmp
jb
inc
sbb
and
xor
sbb
test
loopne
mov
vmovdqu
sub
pop
fadds
sti
jae
aad
dec
mov
sub
mulb
mov
ss
sub
rcr
pop
pop
inc
lcall
aas
rclb
sbb
call
cs
or
clc
pop
sahf
inc
adc
push
loopne
dec
pop
call
stc
pop
sahf
popa
cmp
int
dec
cld
pushf
and
fwait
xchg
jp
data16
sbb
dec
insb
lcall
xchg
pop
sbb
hlt
loopne
mov
mov
xchg
jp
cmpsl
in
xor
mov
pop
test
pop
push
negl
jae
xor
adc
sahf
imulb
and
jne
jg
xchg
push
add
decl
repz
ss
mov
addr16
or
or
mov
cltd
jmp
and
sub
mov
xor
sbb
test
xlat
lods
hlt
lods
xor
adc
jp
clc
sbb
inc
int
inc
jo
stc
insb
mov
adcb
and
jge
or
adc
enter
pop
int
fisubrl
or
imul
or
or
xlat
stos
mov
dec
sub
jp
fmull
pop
inc
mov
inc
js
mov
movsl
push
mov
jle
push
jmp
ds
sub
je
aaa
ja
dec
add
paddd
hlt
mov
mov
icebp
jne
cmp
scas
sub
sub
repz
push
loope
mov
test
cmp
cwtl
push
cmp
jne
ljmp
ja
int3
push
and
lods
pop
dec
mov
sub
dec
je
test
in
rorl
lret
loope
mov
sbb
dec
lods
cmp
std
stc
mov
fsubrp
movsb
stc
dec
lret
mov
int3
pusha
mov
jl
cmp
xlat
sub
movsb
sub
fmull
jl
dec
in
lock
out
fs
add
mov
ret
xchg
insb
mov
sub
jecxz
lds
push
in
jge
jp
xchg
fnstsw
sbb
jle
movsb
pop
xchg
cmpsl
mov
lret
cmp
xchg
icebp
jle
std
mov
aam
imul
xor
adc
aaa
stos
rcl
add
and
pop
popf
adc
add
cwtl
mov
out
ss
repz
shrl
fcmovu
mov
xor
sbb
mov
mov
ljmp
aaa
stos
sbbb
ds
aam
mov
dec
stos
mov
xchg
jb
jg
mov
mov
xor
jmp
sbb
arpl
xor
repz
mov
inc
lret
and
or
ret
mov
xlat
das
and
sbb
lods
testl
xchg
push
fmuls
lea
ret
pop
xchg
ret
adc
dec
inc
jno
mov
xor
movsl
add
cltd
cmp
out
fnsave
mov
popa
cli
mov
incb
xor
ss
mov
aas
dec
adc
imul
jo
mov
pop
movsb
aam
call
jecxz
call
iret
mov
dec
aaa
add
rorl
iret
sbb
jle
push
call
stc
pop
pop
pop
clc
xor
ja
mov
add
out
ficompl
fwait
mov
mov
ret
bound
test
push
xchg
cmp
mov
push
sti
ss
push
inc
fbstp
sbb
adc
pop
cli
xor
and
int3
ljmp
mov
jmp
bound
inc
mov
out
js
inc
sbb
ss
movsl
fistl
cmpsb
rolb
mulb
stos
ljmp
push
nop
xchg
sub
sbb
pop
test
sub
inc
jle
xchg
mov
jg
xor
jno
inc
mov
adcl
xchg
ja
aad
enter
stc
aas
pop
repz
call
jl
add
push
sar
cwtl
xor
add
push
inc
adc
mov
xor
and
xchg
mov
stc
push
mov
mov
cs
add
mov
mov
xor
mov
xchg
mov
ss
fldcw
adc
cmp
jmp
mov
jg
fdivs
in
insb
fdiv
test
inc
loop
insl
mov
push
xchg
dec
scas
jb
jp
jno
lds
mov
daa
ror
sbb
xchg
pop
mov
lret
inc
mov
jge
pusha
cmpsb
push
insb
sub
xchg
jl
xchg
lds
lods
push
push
adc
xchg
push
and
or
cmc
jp
xlat
int
aaa
or
pop
sti
pop
test
pop
stc
jg
pop
int
je
lcall
mov
outsb
lods
jg
sub
or
insb
call
lret
xor
push
aam
lret
arpl
lods
inc
or
mov
sub
lret
stos
jmp
push
cmp
lret
scas
pop
ret
push
jl
push
add
int
lahf
mov
movsb
sub
int3
pop
push
cmp
xchg
mov
add
in
mov
inc
lods
mov
inc
lods
nop
push
mov
scas
jmp
and
adc
test
sub
jo
fisttpll
inc
popa
sbb
iret
insb
aaa
push
pop
pop
aaa
mov
shlb
ficoms
cld
insl
dec
sbb
movsb
ja
mov
pop
aam
xchg
inc
pop
jno
test
in
mov
and
mov
mov
adc
into
arpl
fnsave
mov
inc
fisubrs
jg
std
adc
and
stc
rcl
fldl2t
jnp
adcl
cld
add
ds
mov
cmp
mov
stc
and
adc
sbbb
mov
loop
mov
inc
inc
cs
outsl
lods
adc
stc
push
scas
inc
jnp
addr16
popl
dec
cmpsb
inc
sub
imul
sti
jle
daa
sub
out
jae
pushf
inc
push
xchg
or
adc
out
push
andb
inc
cwtl
gs
cmpsb
jnp
cmp
ret
sub
scas
fsts
pop
lods
cmp
pusha
and
jge
and
insb
js
lcall
jecxz
stos
rorl
or
jns
jg
xor
xchg
cs
bswap
sbb
fsubl
fisubs
cmp
div
fiaddl
aas
jb
repz
repnz
js
dec
test
int
sbb
xor
xchg
iret
xor
sti
sub
je
fs
movq
add
fdivrs
sub
add
stc
xor
mov
aad
sub
outsb
jmp
inc
fcmovne
jae
add
lahf
adcl
lret
es
jle
inc
cltd
xor
ja
mov
les
jmp
out
xlat
out
test
stos
lret
mov
sti
xor
inc
inc
insl
sbb
add
xchg
mov
std
sbb
incl
outsl
adc
insb
inc
sub
int
jmp
fcmovnu
jae
push
ljmp
mov
mov
push
aaa
orb
or
shll
push
in
inc
into
mov
push
mov
out
and
sbbb
or
adc
sbbl
stos
pop
inc
leave
mov
add
jg
loopne
insb
stc
packuswb
dec
into
adc
pushf
push
mov
push
jbe
pop
roll
imull
rcll
inc
cmp
enter
out
iret
sub
or
scas
or
sub
push
nop
jecxz
rcrl
jne
imul
xchg
in
mov
fadd
mov
or
cmpl
les
pop
add
je
jmp
jl
scas
cmc
lahf
stc
test
inc
mov
mov
shll
push
push
cmp
adcl
pushf
stos
or
mov
mov
inc
lods
dec
inc
fldenv
movsl
xlat
inc
clc
ss
aam
stos
sahf
ljmp
repnz
shll
and
add
adc
push
push
lea
adc
and
xor
mov
fisubrs
push
lds
mov
mov
push
fxtract
xor
mov
cld
jl
cs
mov
push
lods
out
addr16
std
and
imul
mov
xor
cmp
mov
ds
push
fidivs
mov
lret
pushf
test
mov
push
fxch
repnz
mov
aad
push
jnp
popa
and
mov
cltd
mov
lret
nop
movsl
int3
in
fidivrs
fldl
adc
sub
rcr
inc
int
jmp
insb
mov
loop
repz
or
lret
out
arpl
aam
jns
lcall
xchg
int
in
mov
fisttps
add
xor
fcmovnu
mov
adc
or
aad
mov
cmpsb
sbb
pop
sub
pusha
lock
xor
pop
mov
faddp
jno
sbb
fst
and
loopne
out
ret
xor
shll
jp
aad
jp
daa
pop
ret
mov
sarb
ja
bound
jle
notb
inc
pop
dec
sbb
clc
xor
push
pop
sub
stc
mov
repz
pop
inc
lods
push
and
xchg
shr
or
adc
jnp
push
mov
push
mov
repz
sar
das
ret
mov
loopne
and
jno
lods
mov
test
adc
testb
icebp
inc
sub
inc
jg
mov
sti
andb
popa
adc
or
sub
in
jnp
adc
je
adc
inc
les
stos
js
in
sub
pop
lcall
jnp
arpl
test
adc
int3
add
repnz
leave
or
std
cmp
sub
push
aaa
insl
mov
pop
push
push
setle
insl
cmpsl
xchg
or
lahf
mov
jmp
push
dec
roll
std
xor
xchg
inc
inc
fucomp
xchg
push
cwtl
cmp
push
push
push
adc
and
push
cmp
cmpl
push
ss
fld1
clc
jecxz
daa
movsl
add
rorl
sti
pop
aas
or
inc
and
xchg
ret
dec
loopne
xchg
xchg
les
popa
in
rol
std
sbb
mov
mov
rclb
inc
and
jne
bound
or
pop
sti
pop
iret
or
jg
mov
cli
fucomp
testb
jl
sub
xor
sub
push
test
jns
inc
xor
pop
mov
ffree
mov
addb
sbb
adc
xchg
xor
jno
xchg
imul
jne
sub
fisubrs
push
jg
and
nop
das
pushf
jno
jle
daa
jle
shl
push
mov
je
icebp
push
mov
mov
scas
aad
cmpsl
dec
lcall
mov
movl
xlat
jne
fxch
inc
cmp
sub
loope
nop
ret
sub
lods
in
fdiv
push
mov
push
scas
or
mov
xor
pop
and
xchg
pop
push
and
ds
inc
xchg
int
mov
sbb
out
iret
call
std
js
inc
inc
dec
addb
gs
ja
mov
scas
lcall
scas
adc
dec
pop
mov
xchg
mov
add
pop
mov
sub
push
pop
push
lods
cmp
sub
leave
xchg
fldcw
pop
dec
jl
pop
pop
cmp
lret
pushf
jle
xor
jl
xor
dec
push
test
and
aad
cmp
jne
push
mull
cmpb
inc
add
or
adc
and
out
mov
mov
movsb
add
pop
lahf
repz
aas
cld
cld
cmp
mov
aaa
iret
rcrl
stc
and
popa
call
add
and
cmp
loop
xor
pop
cmp
ret
and
and
sub
inc
bound
lahf
outsb
add
jp
add
std
pop
or
aas
or
stos
push
fsubrp
dec
xchg
pop
cmc
inc
jnp
repz
je
add
dec
mov
adc
repz
ss
fcmovne
std
filds
and
hlt
rorl
pop
lock
dec
add
outsl
lret
dec
jl
ss
cmpl
mov
js
data16
fdivrs
movsb
dec
ds
gs
lret
das
fdivrp
push
jae
insb
and
mov
arpl
in
add
mov
jmp
aam
xchg
cmp
shr
xor
mov
imul
fs
jno
xlat
cmp
cld
movl
test
jnp
sbb
fs
pop
pop
jb
popf
mov
dec
and
mov
cmp
in
loopne
sbb
jg
nop
pusha
popf
dec
scas
js
jmp
shlb
sub
jb
lret
sub
je
aaa
cmp
arpl
fdivs
jmp
pop
cltd
jnp
fwait
inc
mov
push
mov
mov
js
sub
pop
pop
pop
rcl
loopnew
and
scas
mov
inc
dec
pop
cltd
or
mov
add
aas
adc
push
cs
pop
mov
test
pop
shl
bound
leave
mov
sub
cwtl
or
xor
push
xor
adc
iret
mov
scas
int3
mov
js
push
andl
sbbl
push
jo
push
popf
nop
inc
xchg
sub
sbb
mov
push
addb
rolb
mov
cmp
movsb
lahf
das
mov
dec
pop
cltd
aaa
test
pop
or
out
jbe
cltd
movsb
mov
sub
out
xor
inc
add
sbb
lcall
add
insb
lahf
pop
shll
xor
pop
rolb
int3
cmp
fbld
mov
cmpsl
ret
arpl
xchg
sarl
pop
dec
mov
inc
mov
or
xor
add
mov
mov
adc
jb
sub
ljmp
or
dec
xchg
lock
add
pop
jmp
loop
xchg
outsl
js
sbb
and
xor
ja
dec
push
jbe
std
xchg
dec
mov
lcall
xchg
insl
pusha
mov
dec
adc
jge
ss
xchg
cmpsl
mov
stc
sbb
mov
mov
jb
mov
dec
shll
add
jo
push
ja
mov
jg
cmp
aaa
pusha
in
repnz
add
mov
xchg
lret
inc
xor
lahf
fs
mov
xchg
into
add
shrb
ss
mov
push
xor
movsl
xor
insl
outsb
or
loop
add
pop
mov
ds
jo
mov
repz
popf
cmpl
push
xchg
mov
sbb
pop
in
cmp
out
setp
add
or
out
xor
stos
hlt
incb
jns
rclb
daa
mov
ja
sbb
dec
push
jmp
mov
or
jg
dec
push
in
faddp
push
in
movsb
dec
xchg
cld
or
add
mov
call
and
sbb
cs
movsl
into
pop
sti
pop
mov
icebp
data16
xchg
push
mov
and
jbe
and
addr16
lret
loop
sub
xchg
mov
and
pop
mov
cmpsb
adc
xor
mov
add
dec
int3
pop
lret
or
rol
cmp
popa
aad
mov
frstor
outsb
xorl
mov
cmp
and
and
pop
mov
adc
decl
mov
pop
lcall
cld
push
push
inc
andl
les
rorb
test
fdivl
mov
sti
int
mov
mov
nop
sbb
orl
shll
outsl
add
dec
xor
fprem1
hlt
fcompl
shlb
xchg
adc
xchg
pop
aaa
sbb
fadd
cmpsb
ds
aad
data16
mov
sti
dec
ds
mov
or
test
jne
xchg
pop
movsl
les
xchg
shlb
cwtd
in
xorb
mov
ret
sahf
mov
fidivl
movsw
outsb
inc
mov
subl
ret
xor
je
sub
sahf
ljmp
xchg
sbb
daa
testb
adc
sub
cmpsb
mov
add
cmpsl
jbe
fwait
into
popa
xor
jns
mov
push
sub
cmpsb
dec
pop
je
or
cmp
jge
mov
adc
imul
insl
push
xchg
test
adcb
lods
cmp
sub
je
stc
xor
push
xor
inc
in
adc
shr
fisttpll
dec
inc
push
push
lcall
stos
dec
mov
out
outsb
leave
arpl
fiadds
lret
push
popa
jg
xchg
ret
lods
xor
sbb
xchg
les
or
pop
or
pop
jl
nop
out
sub
adc
jecxz
dec
arpl
cmpl
dec
das
lock
out
adc
push
xchg
bnd
repnz
push
jne
pop
test
les
int3
mov
mov
pop
sub
popl
popf
das
cmp
or
jmp
sub
ja
leave
mov
adc
add
cmp
aaa
ret
icebp
jle
sbb
dec
mov
pop
mov
jo
xchg
scas
out
pop
sbb
add
inc
shll
jnp
cld
int
sub
scas
mov
aas
loopne
out
rcrb
fisttpl
xchg
pop
into
pop
mov
bound
out
cltd
xor
jl
hlt
loope
lock
push
fmull
popf
sbb
fistl
andl
int3
stc
imul
cmp
mov
adc
popa
addr16
cmp
in
jg
fnstsw
cmpsl
jp
push
add
lret
pusha
inc
add
mov
mov
sbb
les
add
sub
xchg
or
push
xor
cmp
cmp
in
loop
adc
push
cmp
daa
pop
and
pop
bound
cli
test
push
shl
pop
rorb
std
je
aaa
jl
lcall
aad
clc
pop
and
fbld
mov
push
test
nop
sti
mov
jo
push
sbb
orb
or
xchg
rcll
ret
leave
adc
pop
and
int3
pushl
jo
dec
pop
mov
shl
and
sub
mov
xor
xorb
enter
pop
iret
cmp
jnp
daa
mov
adc
inc
enter
mov
pop
out
cmp
mov
dec
mov
and
push
test
sbb
sub
js
or
subb
dec
or
loopne
es
cwtl
cmp
jg
push
sbb
jne
out
xchg
popl
push
inc
pop
pop
leave
je
fcoml
cmp
xor
fidivrs
push
iret
inc
lock
int3
pusha
pop
push
mov
sub
xchg
push
cld
push
adc
lea
adc
pop
mov
insl
pop
push
out
add
add
pop
repnz
aam
fiaddl
daa
gs
jo
cmpsb
fidivrl
scas
inc
in
xchg
call
xlat
push
push
psrad
add
mov
push
add
pop
inc
jns
ret
lahf
pop
push
add
addr16
nop
aam
push
xor
int3
or
ljmp
das
xchg
inc
stos
daa
jbe
cmc
jecxz
push
ret
xor
inc
clc
sub
xchg
xor
in
stos
fistpll
and
mov
sti
dec
dec
test
dec
mov
and
push
jno
cmp
xlat
lods
mov
test
cmp
push
mov
xchg
pop
inc
pop
mov
pop
clc
fdivr
pop
std
pop
loopne
push
insb
sahf
hlt
mov
fnsave
imul
outsb
xor
cmp
test
sarl
hlt
lcall
ss
fdivl
xchg
lret
pop
ja
cs
cmp
sub
xlat
into
sub
xor
mov
test
push
xor
jnp
pop
jae
xor
inc
mov
xor
in
sti
pushf
mov
imul
jecxz
sub
sub
push
insb
shlb
xor
fwait
jg
adc
lods
clc
ror
out
imull
cs
movsb
xchg
lret
imul
mov
sbb
loop
adc
xchg
cmp
xor
mov
call
int3
mov
push
dec
cwtl
or
mov
sahf
mov
sub
or
mov
add
mov
popa
cwtl
dec
xor
ds
xchg
repnz
sahf
add
cs
aad
aad
ficomps
push
fs
lret
and
pop
stc
pop
sti
in
xchg
cmp
pop
push
pop
loop
dec
adc
mov
push
and
push
das
insl
insl
jo
clc
wbinvd
add
pusha
aam
test
cmp
fisubs
hlt
mov
imul
pop
aad
push
lcall
pop
mov
add
shrb
sbb
push
mov
sub
xlat
adc
jb
mov
lcall
movsb
in
sbb
jae
jns
mov
mov
xor
pop
inc
and
mov
mov
addr16
xchg
lret
outsb
repnz
xor
aad
sahf
jl
ja
pop
push
xchg
and
pop
sub
sbb
push
inc
add
shrl
clc
xor
ljmp
sub
mov
pop
cmp
sub
arpl
cmp
test
mov
dec
jnp
push
pusha
out
push
cs
popf
cld
and
mov
movl
jl
sbb
dec
rcrl
lea
inc
add
mov
pushf
pop
out
sbb
stc
sub
bound
cmpsb
loop
stos
out
fisubrs
data16
jl
repz
mov
popf
xor
adc
push
stos
sub
rcr
push
xchg
sbb
sub
inc
dec
pop
hlt
adc
jecxz
repz
call
jno
push
sbb
mov
sbb
aam
adc
xor
pop
mov
jmp
fadds
fidivl
push
xor
sub
lret
mov
dec
cwtl
add
ret
frstor
push
fisubrl
inc
push
je
mov
mov
pusha
cmp
in
dec
cmpsb
bound
gs
adc
jb
jno
push
lods
cs
cmp
and
push
sub
icebp
add
add
test
jmp
xchg
push
fdivp
rorl
xor
loope
call
sbb
inc
in
cltd
subb
mov
adc
aad
mov
cmpsl
jb
jecxz
rcl
cwtl
les
push
aad
jns
ss
adc
xor
and
insl
bound
aam
dec
iret
xor
push
mov
clc
push
fidivl
add
adc
mov
cmp
and
adc
and
outsb
push
pop
push
data16
jnp
nop
or
sti
push
cwtl
pop
in
jbe
mov
inc
loope
movsb
subb
pop
xor
out
pop
outsl
std
ficomps
push
lock
pop
pop
jp
loopne
xchg
push
out
push
dec
push
out
inc
push
lock
push
out
push
inc
int3
push
cmp
and
movsb
mov
sbb
pusha
or
mov
aas
mov
stos
jo
mov
or
xchg
mov
je
and
cmp
add
jno
rorb
cmp
lock
in
sub
cmp
ljmp
in
add
or
xor
in
inc
inc
adc
pop
lds
mov
negl
into
lcall
inc
data16
fdivrs
jecxz
push
lock
jle
stc
cltd
leave
xchg
subl
outsl
adc
lods
cmpb
cs
jb
push
ret
mov
loope,pt
push
rorl
push
and
add
dec
ds
aam
and
movsl
xor
or
and
pop
icebp
mov
pushl
mov
xor
adc
shrb
insl
into
and
imul
outsl
fimull
stc
insb
xchg
ret
jae
xchg
xlat
jbe
call
xchg
repnz
dec
or
mov
inc
cmp
repnz
mov
push
outsb
pop
push
inc
mov
sahf
fildll
inc
lret
push
mov
decl
pusha
imul
cmc
fwait
mov
nop
lret
xor
out
je
push
or
fldenv
add
pop
ret
push
fstpl
xchg
lods
or
fs
inc
cld
out
add
dec
push
addr16
pusha
movsl
jecxz
push
mov
mov
imul
push
mov
pop
and
dec
ja
push
test
cmc
mov
cli
insl
ret
dec
outsb
xchg
mov
or
sbb
rcll
push
push
inc
push
jle
repnz
mov
mov
setno
push
xlat
cmp
pop
ret
or
insb
aaa
cltd
fdivl
sbb
outsb
rorb
push
add
shlb
jno
fs
fiaddl
inc
dec
in
xor
in
jb
test
jg
repz
push
push
sub
cs
mov
jae
push
nop
inc
sti
movsb
loope
pop
pop
sbb
pop
lock
cld
adc
adc
adc
sbb
sbb
das
leave
mov
imul
aaa
inc
mov
pop
dec
rcrl
pop
imul
repz
stos
into
mov
mov
out
subl
stc
outsl
testl
in
mov
cwtl
shll
loop
out
pop
mov
adc
sti
add
xchg
scas
pop
jno
dec
ss
push
out
sub
jno
bound
movsb
outsl
pop
ds
jle
loope
pop
sub
sub
insl
rorl
mov
pop
push
mov
push
ljmp
xor
outsb
stc
sti
xchg
and
mov
sub
and
dec
nop
enter
sbb
es
mov
sbb
or
xor
xchg
aaa
shll
out
pop
jno
negl
cmp
lods
adc
cli
sarb
imul
or
dec
cmp
jb
dec
add
je
andl
orl
push
fmuls
pop
sbb
inc
or
cmp
mov
sub
sub
sar
fimuls
dec
mov
jge
mov
je
sti
cmpsl
pop
adc
outsb
add
mov
cli
jnp
jmp
xchg
pop
int
mov
in
cmp
jnp
xchg
aaa
xchg
jmp
sub
dec
pop
les
push
xor
mov
mov
ss
jnp
xlat
and
fwait
loope
sub
sub
sbb
aam
sbb
pop
aam
sub
repnz
sbb
in
in
cmc
pop
xor
add
aas
xchg
jbe
sbb
xchg
mov
clc
lds
bsr
xchg
push
or
in
pcmpeqw
cmp
push
popf
out
bound
addr16
sub
xor
outsb
cmp
imul
outsl
in
push
stos
jg
or
xorb
inc
or
ja
outsb
push
xchg
lods
or
fsubrl
js
mov
cmp
cmc
push
sub
cli
mov
sub
xlat
mov
mov
mov
outsl
aad
xchg
inc
ss
movsl
xchg
aad
aad
addr16
push
faddl
add
xchg
daa
ja
push
pushf
fldcw
add
les
pop
lret
xor
inc
cmpsb
loopne
pop
cmp
dec
out
xchg
xor
pop
lods
add
jg
jns
data16
or
jmp
pusha
add
lock
insb
mull
inc
mov
cmp
xor
xchg
sbb
insl
xlat
out
jo
mov
jmp
std
popa
adc
lock
ror
and
push
cmpsb
into
bound
push
sub
inc
adc
sti
pop
xchg
int3
mov
sub
sbb
cwtl
xor
jno
daa
sub
imul
mov
enter
adc
xor
lods
test
test
jl
jecxz
cli
jb
lcall
adc
stos
sarl
or
mov
imul
sahf
faddl
shlb
leave
add
cmp
adc
inc
in
fisubl
pop
mov
jp
mov
imul
and
mov
jo
insl
movsl
dec
mov
add
mov
mov
pop
or
and
cmpsl
icebp
fisttpl
xchg
sub
rcll
pop
lret
xorl
scas
out
mov
fnstsw
popf
scas
push
mov
ds
mov
xchg
lea
subl
lret
scas
inc
or
fbld
int3
mov
push
sbb
jo
dec
dec
fisttpl
or
mov
insb
and
lret
arpl
hlt
sub
pop
mov
sbb
inc
adc
jg
pop
ja
test
jae
popa
mov
ja
int3
mov
sub
js
ret
cltd
in
bound
lock
cmp
jbe
dec
dec
jp
push
xor
mov
xor
mov
stos
imul
mov
into
inc
fs
mov
enter
rorl
jns
xor
stc
push
jne
outsl
fdivs
jmp
mov
jnp
adc
xchg
inc
and
imul
xor
les
sbb
pushf
js
jne
jg
cmpsl
test
shrl
fisttpl
cmpsl
cltd
imul
push
arpl
push
pushl
sti
mov
jbe
dec
adc
pop
pop
mov
sub
mov
xor
fstps
shll
add
subl
cwtl
cltd
popa
adc
nop
mov
mov
je
add
cmpsl
dec
pop
mov
xchg
ja
lea
cwtl
mov
mov
inc
and
sbb
adc
leave
pop
sar
mov
sti
bound
test
sbb
dec
inc
jge
pushf
xlat
ljmp
jge
dec
popf
dec
frstor
rcrl
mov
movsl
popf
js
xchg
addr16
sub
pop
or
daa
pop
xorb
sbb
cs
mov
pop
cmp
daa
fdiv
fidivs
pop
mov
pushf
loop
mov
sub
sub
stc
mov
gs
or
jnp
add
xchg
jno
sti
dec
in
fwait
stos
aad
mov
and
inc
arpl
pop
mov
push
mov
aaa
lcall
sbb
or
fcomps
cmp
cmp
scas
sub
mov
push
mov
rcl
outsb
sbb
push
out
push
jmp
fisttpll
enter
push
push
icebp
mov
xchg
add
inc
lcall
mov
arpl
add
push
bound
insl
ja
jp
divl
inc
lea
inc
mov
repnz
pop
ljmp
xchg
daa
or
dec
cli
cwtl
popa
adc
je
adc
push
adc
in
push
mov
adc
andb
rolb
je
outsl
cwtl
test
inc
loope
stos
sti
inc
imulb
cmc
lock
push
les
mov
mov
loopne
fnstenv
iret
cmp
ds
push
es
iret
cmp
push
out
addr16
or
shrl
inc
inc
stos
test
mov
inc
popf
ret
in
jo
repnz
mov
push
dec
cmc
data16
inc
push
lds
cs
mov
mov
bound
stos
mul
jns
iret
pushl
push
sub
push
mov
fstpt
fucomi
cmp
inc
add
xor
push
push
or
pop
xor
roll
mov
jns
shlb
ficomps
sub
addb
sbb
push
xor
fisubs
pop
inc
or
idiv
push
pop
out
lock
pop
jns
out
pop
add
clc
mov
xor
cmp
mov
mov
or
in
loope
fmull
jno
fsts
in
inc
sbb
sar
insb
shrb
pop
mov
jno
sub
popf
sbb
gs
push
lret
enter
mov
mov
call
int3
xor
movsb
add
stos
ret
xor
pop
sbb
cmpsl
clc
push
in
les
jne,pt
dec
mov
and
cmc
xchg
hlt
mov
mov
and
lret
enter
add
xchg
sub
lret
mov
xchg
es
outsb
adc
xchg
jmp
sahf
xor
jns
mov
ljmp
hlt
pop
inc
xor
stos
sbb
testl
xor
push
out
sar
or
xor
rcl
call
jno
adc
xor
sti
pop
and
mov
rcl
dec
mov
cmp
cli
out
mov
mov
jle
addr16
cltd
fcomps
mov
and
mov
and
ret
insl
mov
insb
push
ljmp
movsl
inc
inc
sub
mov
add
ja
scas
xor
popa
lock
adc
and
arpl
sbb
enter
aam
aam
sub
insl
adc
inc
mov
dec
push
lods
scas
add
xor
rolb
leave
mov
inc
push
adc
xorb
mov
es
mov
pop
adcl
jp
xchg
lods
sbb
xchg
arpl
cltd
push
pop
lods
mov
bound
stos
inc
inc
les
icebp
in
mov
shrl
push
add
cli
xlat
shlb
call
lea
jb
sbb
mov
movsb
mov
scas
in
inc
or
js
out
cmp
push
call
repz
andb
xchg
and
add
xchg
inc
sub
cmovs
inc
fists
mov
nop
cltd
dec
ds
sbb
jae
pushf
cli
xor
add
cmp
sub
js
sbb
mov
and
inc
loope
dec
je
test
andb
lahf
test
ss
inc
addr16
mov
adc
pop
in
jl
cmp
loope
or
cwtl
addr16
lret
scas
jg
sub
in
movups
lods
int
call
addl
popa
lret
dec
xor
stc
ljmp
rol
fstpl
movsb
data16
aas
mov
push
cmp
jo
push
jle
and
pop
add
dec
and
sub
push
shlb
pop
and
call
sbb
adc
in
stc
jb
in
cwtl
xor
cld
mov
sub
scas
xor
int3
jb
xchg
and
rcrb
jo
pop
sbb
js
sub
aas
mov
inc
and
sub
ret
cmp
fwait
push
or
push
test
in
push
clc
adc
fwait
push
push
stos
inc
or
lock
scas
mov
and
lock
push
addr16
scas
dec
xchg
hlt
int
xchg
inc
inc
test
xlat
mov
add
mov
in
push
push
je
jle
jmp
ret
jnp
mov
push
mov
fadd
fs
lds
pop
cmpsb
adc
outsb
lret
push
scas
xorb
call
iret
mov
xchg
repnz
jge
lds
xor
mov
pop
jbe
icebp
lret
stos
hlt
les
xchg
mov
push
icebp
iret
cmpsb
lcall
js
mov
nop
lret
outsl
loopne
add
dec
jnp
push
gs
sbb
jge
repz
jmp
jo
dec
xchg
ret
or
ja
jnp
hlt
loope
sbb
fwait
push
add
pop
aam
shlb
xchg
adc
movsl
mov
xchg
fstl
push
stc
sbb
push
pop
xchg
lret
inc
cmp
je
push
adc
pop
mov
dec
sub
cmp
xchg
jbe
nop
push
nop
filds
mov
test
rcrb
mov
pop
lea
sub
and
push
aad
imul
xchg
push
push
dec
imul
xor
inc
mov
xchg
pop
mov
les
int
adc
pop
mov
test
mov
rorl
mov
mov
mov
dec
add
jg
js
add
shl
mov
les
push
scas
cltd
imul
mov
xor
daa
lcall
xchg
fsubrl
insl
push
outsl
sub
ret
popa
jno
out
mov
mov
les
lcall
push
out
mov
push
adc
imul
mov
fsubl
cs
adc
enter
sbb
fsubrl
gs
jge
cmp
cmp
pushf
call
jns
push
jmp
rcrb
sbb
pop
pushf
js
inc
fs
out
mov
sbb
rcl
ljmp
gs
sbb
cli
dec
lret
dec
pop
test
sti
mov
xor
jmp
lods
cwtl
rcrb
mov
lahf
loop
pop
push
fwait
and
and
push
jb
mov
lds
ret
cmp
fdivp
cmc
mov
xor
mov
dec
xchg
int3
cmpsb
shrl
jmp
inc
dec
cmc
jno
sub
jns
or
in
mov
sub
sahf
pop
dec
jmp
jle
mov
iret
mov
mov
bound
loope
movsb
into
mov
unpcklps
rorb
test
out
clc
bound
xor
jnp
xchg
les
psrlq
aad
cmp
jo
sbb
inc
mov
mov
shrb
pusha
or
lret
repnz
mov
movsl
push
ret
cmp
xor
and
inc
jge
sub
sti
in
int
jmp
sub
bound
inc
out
add
mov
fwait
mov
dec
mov
adc
push
shll
dec
cmpsb
xchg
push
pusha
fdivrp
and
cmpsl
inc
repz
jb
fwait
in
add
inc
xchg
adc
les
divb
pop
ret
std
dec
add
fnstenv
hlt
insl
rolb
movsb
jne
cmp
and
xchg
movsb
lahf
das
out
in
stos
add
push
daa
mov
pop
aaa
fcompl
in
or
cmp
xor
xchg
imul
pop
pusha
inc
aad
or
std
cmp
mov
jo
movsl
mov
mov
cwtl
orb
jle
push
jno
push
adc
repz
dec
rcrb
mov
ret
and
repz
call
dec
mov
dec
es
jecxz
cmc
adc
in
insl
mov
hlt
pop
test
pop
decb
out
mov
inc
xchg
insl
imul
xor
mov
or
lods
in
mov
pop
adc
or
outsb
jbe
mul
mov
js
stos
std
jcxz
addb
mov
pop
loopne
sbb
ljmp
pop
dec
fsts
loopne
inc
jb
or
adc
mov
std
subl
mov
mov
test
and
cmp
popa
dec
insb
xlat
lds
arpl
pop
adc
xchg
pushf
fwait
or
adc
cmp
fsubrs
pop
mov
call
int3
pop
add
aaa
movsl
scas
and
sti
or
dec
ficoms
ret
and
mov
gs
into
jnp
enter
lock
gs
dec
xor
push
mov
lret
movsl
mov
dec
mov
in
push
lcall
flds
sub
xchg
jge
icebp
cmp
pop
insb
mov
push
push
rcl
pop
and
xor
fs
rclb
dec
into
fs
jmp
aas
jne
adc
std
mov
cmp
rorb
cltd
xchg
cmp
pop
mov
inc
fisubl
xchg
ret
jnp
daa
add
stos
adc
insb
push
notl
lock
scas
and
dec
mull
test
push
lods
pop
mov
aaa
pop
std
pusha
mov
popa
push
xor
jp
jae
sub
pop
xchg
pop
xchg
xchg
jecxz
test
mov
and
ret
cmp
divl
jbe
cmp
in
pop
stos
push
bound
lahf
push
insl
mov
lds
xlat
adcl
pushf
push
inc
mov
jl
scas
mov
aam
or
sahf
or
pop
push
adc
pop
je
or
mov
mov
mov
mov
scas
adc
pusha
cli
mov
mov
adc
xchg
pop
or
xor
cli
mov
sub
push
notl
stc
fistl
fstpl
mov
mov
push
scas
aam
mov
popf
out
mov
repnz
pop
and
mov
mov
push
or
inc
xchg
cmp
and
fisubs
cs
cmp
insl
ss
scas
nop
dec
mov
shl
and
out
push
fidivrs
cmp
ljmp
pop
mov
loope
movsl
hlt
sahf
mov
in
ss
sub
aad
lret
mov
mov
sti
stos
jecxz
inc
jne
jno
hlt
mov
iret
cmp
mov
pushf
cmp
cld
cmp
push
repz
push
mov
push
ja
sub
dec
gs
or
cmp
fildl
pop
sub
mov
push
add
mov
scas
stc
int
sub
jno
cmp
inc
adcl
subb
jbe
test
cmp
add
jmp
or
inc
int
sub
inc
mov
cltd
cmc
fbld
test
dec
or
add
jno
cmpsl
xchg
bound
inc
add
std
sbb
add
mov
sbb
mov
out
lret
dec
and
insl
std
mov
sub
popa
xlat
loop
shlb
sub
push
jne
out
roll
push
shl
ffree
into
inc
sub
bound
addl
lds
es
hlt
adc
cmp
fmull
mov
adc
push
inc
pushf
push
test
cmp
mov
push
aam
andb
push
test
add
cld
push
lds
cmpsl
pop
rolb
cmpsl
movsb
out
addr16
or
jge
andps
and
and
dec
push
imul
pop
dec
cli
call
movnti
popf
jbe
or
nop
xlat
mov
xchg
inc
inc
mov
xchg
pushf
push
add
pop
cmc
rcl
inc
pop
jno
and
or
mov
mov
sti
jns
mov
fisttpl
inc
jecxz
cmpl
xchg
dec
push
mov
lods
adc
mov
mov
xor
hlt
loop
sbb
test
lcall
sti
or
xchg
les
dec
loope
and
icebp
jmp
sbb
cmp
sub
mov
repnz
int3
repnz
psubb
adc
adc
jne
and
cwtl
pop
sbb
jae
and
jl
mov
cmpsl
das
or
movsb
adc
add
or
inc
or
rcrl
jecxz
mov
jmp
mulb
in
mov
call
push
ds
test
das
movsl
mov
fildl
bound
cmp
test
sub
xchg
xor
jmp
pop
lods
test
push
xchg
cmp
repnz
pop
jo
mov
jb
in
jecxz
popf
cmp
add
int3
out
push
ss
enter
fbld
or
imulb
push
scas
out
stos
or
out
cmc
mov
pop
jge
lret
pop
inc
mov
test
aam
jmp
xlat
xchg
pusha
popf
int
push
enter
sbb
mov
cmp
inc
adc
push
pushf
add
imull
jnp
fdivrs
shlb
xchg
xchg
fadds
and
mov
sbb
sub
sbb
pop
pop
sbb
xor
inc
std
xlat
out
aad
xchg
leave
cs
and
add
sub
inc
mov
mov
outsl
pusha
mov
notl
sbb
dec
xchg
std
pop
fidivrl
or
outsl
mov
das
inc
inc
pop
cmp
shll
lcall
jmp
ja
or
lds
xor
dec
pop
ss
jbe
aam
test
lds
mov
pop
cmp
jns
test
and
fdivrs
loop
inc
sti
test
sbb
cmc
icebp
test
outsl
outsb
jmp
sarl
imul
sbb
movsb
xor
inc
clc
adc
fbstp
icebp
dec
add
xchg
lea
push
and
dec
inc
xchg
and
jbe
fsubl
lds
sbb
jp
in
cwtl
out
inc
mov
nopl
pusha
jae
jnp
cmp
lret
inc
xchg
mov
pusha
cmpsb
pop
pop
jnp
dec
mov
mov
stc
dec
push
add
scas
rcr
subb
in
mov
cwtl
mov
inc
sub
jecxz
addr16
sub
pop
jae
das
jnp
leave
iret
in
xchg
cld
adc
adc
push
ret
and
push
hlt
out
cmp
movsb
push
lcall
dec
ficompl
aas
in
mov
add
insl
lcall
fimull
mov
or
hlt
sub
cltd
or
jne
ret
into
xor
test
and
dec
lahf
ret
adc
test
xchg
out
mov
cltd
je
push
stos
mov
xchg
fsts
mov
sub
gs
flds
lods
jmp
add
and
aaa
sbb
fcmovne
mov
dec
lret
inc
dec
mov
je
dec
lahf
add
aaa
mov
cmp
mov
jne
xor
pop
mov
xchg
je
sar
lret
mov
movsb
or
into
imul
mov
mov
xchg
test
push
jns
sbb
pop
sub
add
stos
ret
shll
sarb
test
sar
leave
loop
movsb
pop
sbb
shrb
in
xchg
jo,pn
mov
pushf
xchg
mov
hlt
in
push
cli
mov
add
adc
out
dec
sub
cwtl
xlat
pop
ds
cmp
loope
into
cmpsb
cld
out
pop
mov
inc
and
push
mov
mov
aaa
mov
ss
pop
xchg
and
rcll
or
stos
stos
mov
es
test
cli
pop
cltd
inc
and
sahf
sub
jmp
mov
mov
fisubl
rolb
or
push
inc
mov
inc
sbb
mov
cmpb
lahf
cltd
push
ret
add
jnp
sbb
mov
push
dec
mov
jecxz,pt
pop
loop
out
lcall
imul
cs
sub
fsts
fwait
std
imul
pop
in
dec
arpl
loope
pop
dec
inc
xchg
incb
daa
xlat
inc
fninit
int
iret
lods
out
sub
mov
es
ljmp
in
fmull
rep
shll
sbb
cmp
mov
xchg
test
gs
mov
call
fisubl
jae
jns
mov
xlat
pop
push
or
dec
divb
push
xor
mov
leave
cmp
xchg
in
inc
stc
lock
xor
mov
and
aam
arpl
aad
fiadds
xchg
arpl
adc
fldenv
ss
fstpt
enter
push
dec
push
ljmp
imul
insl
adcl
jl
pushf
sbb
adc
fisubrl
add
pop
addr16
aam
bound
lahf
mov
dec
imul
push
mov
mov
lret
or
in
mov
jne
repz
inc
xchg
lcall
lock
and
push
or
stos
push
fldt
leave
xor
cmpsb
ja
push
fs
push
fucomi
xchg
or
xchg
loopne
xchg
popa
fs
cs
mov
aas
stos
stos
aad
sbb
push
cltd
add
rclb
and
or
leave
cs
pushf
adc
pop
not
incl
sarb
adc
push
js
test
xchg
pushf
aas
in
mov
aaa
sub
mov
das
fs
cmp
pop
push
push
mov
pop
and
mov
iret
inc
les
scas
lahf
mov
inc
push
cmpsb
adc
movb
sbb
pmaddwd
push
into
stos
bound
fstpl
sub
sbb
lock
ret
cmp
xor
imul
or
fs
or
pop
pop
add
enter
push
in
test
cs
es
mov
inc
sbb
cmp
loop
ja
sub
gs
inc
and
mov
jle
pop
fnstsw
ret
xor
adc
je
iret
jno
mov
mov
or
and
jb
das
mov
in
imul
xchg
into
shrb
les
pop
pop
aad
out
lods
and
rcr
in
inc
test
dec
pop
pusha
jg
andl
movsb
shrb
frstor
loope
xchg
loopne
pop
ja
sub
popa
sbb
jl
adc
sub
js
push
pusha
jnp
fcomip
adc
jb
xchg
sub
lea
mov
loop
fsubl
inc
sbb
push
push
cwtl
ret
add
popf
pop
inc
push
xchg
loope
xchg
adc
aad
sub
push
insl
imul
adc
mov
jge
decl
jge
jmp
std
jge
mov
faddl
push
jns
ss
and
inc
lcall
xor
cmp
stc
xor
mov
dec
iret
idivb
cmp
hlt
xor
lahf
cmp
mov
leave
cmp
cmp
aas
dec
lds
sub
jae
fcmovu
dec
pop
cs
and
mov
int
lods
mov
mov
cmpsl
mov
jmp
pop
xor
sub
mov
cmp
addr16
and
scas
mov
inc
adc
push
repz
lods
pushf
popa
les
pushf
pop
mov
push
jne
dec
sbb
out
cmp
sbb
or
fwait
ss
imul
sub
fisttps
ret
ljmp
or
or
xor
stos
in
jle
cmp
mov
mov
pop
mov
roll
lret
out
or
xchg
insb
cmp
cmp
test
shr
cmc
int3
push
pushf
sbb
cld
ljmp
ljmp
mov
sti
loop
add
lcall
xchg
sti
rcrb
fldl
xor
pop
lock
jmp
gs
jne
push
sub
sbb
jno
mov
pop
incb
xchg
clc
sti
cmp
mov
and
nop
aad
dec
mov
dec
out
xor
imul
jbe
scas
incb
sub
rcrb
cmpsb
inc
push
movsb
packsswb
in
call
dec
je
test
iret
mov
std
int
mov
pop
rcrb
andb
loop
add
mov
mov
dec
xor
mov
and
or
push
in
jp
call
xor
stos
and
xor
mov
mov
nop
mov
popa
scas
cltd
and
test
xchg
or
sahf
icebp
jns
and
sub
nop
jle
dec
stc
call
aas
mov
repnz
jb
jmp
sbb
dec
ljmp
jle
inc
notl
add
cmpsl
xchg
ss
sar
jbe
pop
dec
jae
jb
push
dec
es
out
mov
rcrb
int
xor
and
mov
andb
je
and
xor
insw
lcall
addr16
jno
jnp
push
sub
and
stc
mov
cltd
adc
jnp
dec
fwait
into
mov
sub
jle
add
pushf
push
adc
fwait
lods
sahf
subb
dec
jl
int3
xor
dec
cmpsl
out
push
stos
fistps
sbb
add
out
push
xchg
or
std
rcrl
push
stos
divl
xchg
cmp
ds
movsb
out
mov
test
cs
mov
pop
shrb
lret
movsl
mov
cmp
xchg
mov
hlt
push
sub
mov
inc
adc
das
lds
hlt
mov
jp
mov
in
push
adc
xor
cs
les
and
push
scas
pop
xchg
repnz
sbb
mov
call
aam
repnz
arpl
popa
sti
pop
pop
cmp
je
mov
xchg
imul
rcr
sti
mov
stos
dec
mov
dec
loop
push
pop
lret
test
repz
test
pop
into
lods
xor
mov
and
ljmp
inc
sub
mov
iret
push
orl
call
mov
lods
lods
jbe
push
sub
sbb
mov
aas
dec
sbb
imul
pop
mov
adc
push
and
cli
jne
das
cmpsb
int3
jb
mov
inc
inc
lds
jb
lcall
cmp
stc
mov
inc
mov
roll
mov
aad
test
les
dec
repz
mov
jnp
dec
idivl
mov
add
movsb
insb
gs
mov
sub
scas
mov
loope
inc
mov
mov
add
sbb
stos
and
mov
dec
mov
jo
ret
inc
sbb
mov
mov
popf
cltd
xorl
outsb
add
jns
sahf
or
jecxz
outsb
stos
std
xchg
insl
clc
mov
mov
enter
mov
mov
mov
mov
xchg
dec
pop
ds
and
pop
or
inc
add
adc
xor
sbbl
push
push
adc
adc
mov
add
add
popa
aas
mov
imul
xor
add
mov
shl
xchg
pop
cmpsb
push
dec
out
cmp
push
pop
xor
mov
cwtl
notb
lcall
push
pop
xchg
adc
and
scas
dec
jnp
negl
sbb
inc
pushf
cmp
inc
adc
aad
mov
jnp
add
sti
jnp
push
arpl
add
lods
mov
mov
fdivrl
scas
push
lret
mov
fwait
aas
test
test
out
inc
scas
mul
cmp
test
jo
inc
mov
into
jb
lret
push
out
mov
outsb
cmp
fiaddl
dec
shld
clc
jle
mov
xor
mov
out
ds
mov
mov
xor
cs
ret
adc
repnz
cs
xchg
jecxz
test
rorl
xor
pusha
jnp
test
adc
pop
fdivl
mov
pop
push
popf
xor
lret
loope
jecxz
mov
jmp
inc
out
mov
mov
cltd
jmp
or
les
adc
clc
scas
push
bound
or
test
mov
lcall
int3
push
and
adc
pusha
lcall
pop
sbb
mov
hlt
ja
cld
pushf
push
push
inc
int3
pop
add
iret
mov
sub
in
jne
xchg
icebp
lods
dec
push
insl
sub
pop
lods
push
ljmp
adc
out
xor
add
fisttpll
mov
imul
adc
insl
jbe
push
loop
mov
xchg
pop
ficomps
ljmp
mov
adc
xchg
mov
scas
aam
xchg
jne
sub
and
js
iret
es
movsl
sbb
cmc
xor
mov
inc
fidivrl
and
pop
pop
ljmp
jg
or
sbb
pop
data16
jnp
mov
adc
mov
iret
xor
mov
or
or
inc
das
inc
repnz
cli
jo
sbb
stos
test
mov
aaa
imul
sbb
push
mov
push
addr16
xchg
repnz
mov
inc
mov
sub
xor
outsl
and
mov
sbbb
je
lcall
and
push
cli
jl
arpl
cmp
roll
or
rcll
lcall
pusha
outsl
andb
hlt
mov
je
aam
test
or
sbb
jno
xchg
pop
iret
jb
dec
xchg
cmpl
sti
pop
out
repz
jno
push
fwait
cmp
inc
aad
jg
repz
jge
loopne
out
mov
cmpsb
cltd
adc
jecxz
fnstcw
cmp
movsl
es
lock
xchg
std
test
test
orb
xor
push
loope
dec
js
adc
inc
inc
lds
fprem
pushf
ja
dec
mov
add
push
nop
sub
repz
fsubr
dec
xlat
shlb
xchg
add
xor
in
xchg
sbb
loopne
cpuid
scas
add
pop
arpl
inc
in
hlt
ja
add
sub
or
dec
mov
and
jp
sub
fidivs
or
dec
push
pop
ss
jle
mul
mov
cmp
mov
ret
mov
or
cmp
cmp
push
mov
or
pop
xchg
loope
test
cmp
repnz
inc
xchg
lock
stos
ret
cltd
sarl
notl
dec
push
inc
out
gs
int
hlt
cmpsl
inc
mov
insl
movsb
bnd
test
push
mov
inc
insb
adc
int
sbbl
push
fbstp
mov
push
or
xorl
js
cmp
pop
pop
mov
cld
iret
pop
test
in
fisttpl
push
push
arpl
test
jb
test
call
push
or
xor
leave
mov
sti
ret
mov
cmp
lea
popf
mov
mov
jecxz
jmp
adc
dec
pop
out
popf
outsb
add
in
xchg
das
jle
cmc
out
sbb
aam
fwait
insb
jge
bound
pop
pop
cwtl
in
data16
dec
dec
mov
mov
cld
xchg
sbb
hlt
xor
push
ret
jns
ljmp
outsl
es
sub
or
xor
es
sbb
addr16
mov
cmc
stc
jne
insl
sbb
pop
sub
cmpb
push
popf
mov
lods
aam
sub
push
jo
dec
int3
hlt
loop
repz
arpl
jns
js
jmp
sub
leave
push
clc
je
sub
imul
mov
add
fcompl
push
dec
adc
jmp
sbb
andl
les
push
mov
push
aad
lds
int
test
gs
cmp
arpl
lcall
mov
or
test
add
sbb
sahf
adc
ss
jb
and
mov
xchg
dec
sub
std
mov
or
inc
sub
aam
fcomp
ds
fsts
lea
shll
sahf
out
dec
or
cmpsb
fwait
test
andb
xchg
mov
lods
push
rcrl
xor
cmp
fstl
fnstsw
pop
loopne
pop
pusha
cmp
into
es
std
dec
push
iret
xor
xor
pop
lahf
inc
adc
dec
lods
out
push
mov
lds
add
loopne
push
push
ret
pusha
outsb
xor
xchg
mov
mov
jmp
fs
test
jb,pn
cs
jae
in
movsb
xchg
fs
mov
mov
push
push
add
or
loopne
out
je
daa
and
cmp
and
jb
xchg
xchg
mov
int
sub
shl
fwait
es
inc
push
mov
mov
hlt
loopne
sub
xchg
fcmovnu
hlt
sbb
xor
sub
aaa
xor
adc
mov
push
aad
xorb
jns
mov
fidivrs
sub
pop
mov
mov
shrb
orb
sbb
shrb
dec
cmp
cmp
cli
sub
sbb
dec
arpl
in
js
stos
sarl
mov
add
inc
or
sbb
add
sbb
imul
outsb
mov
mov
hlt
pushf
xor
in
repz
sahf
xor
inc
test
jp
mov
out
addb
jns
aad
mov
xor
sub
mov
loopne
push
sub
or
arpl
mov
inc
adc
add
jl
jmp
jmp
jmp
out
dec
stc
stc
mov
sbb
xorb
cmp
ss
v4fnmaddss
repnz
stos
mov
push
mov
xchg
repnz
jb
in
adcl
mov
push
mov
pop
fs
or
lcall
leave
pop
xchg
out
dec
addr16
imul
in
mov
test
push
sar
push
subb
addl
cmp
push
pop
and
dec
clc
cmpsb
std
mov
aaa
pop
push
rolb
and
out
pop
inc
pop
jmp
mov
ja
jg
jmp
xor
subb
mov
dec
ret
jle
andl
out
lods
into
pshufw
push
cmp
pop
imul
mov
xchg
mov
pushaw
sarb
inc
push
inc
cmc
mov
test
push
and
decl
dec
loop
ss
fs
pop
inc
iret
int3
clc
shlb
ret
dec
insl
into
pop
dec
and
out
roll
adc
jo
and
icebp
adc
lds
movsb
or
loopne
repnz
or
pop
add
jae
pushf
stc
shrl
xchg
mov
pop
fdivrs
inc
ljmp
in
or
jno
push
inc
arpl
stos
mov
nop
scas
lods
dec
out
sti
loopne
push
or
push
fcmovb
loopne
aaa
mov
pop
pushf
sahf
loope
sahf
inc
inc
andb
js
in
ss
bound
push
lock
xor
dec
hlt
jo
push
pop
shl
xchg
fstl
sub
shr
jb
in
pop
hlt
cli
mov
mov
mov
mov
fidivl
fildll
mov
fwait
clc
pop
cmp
jno
adc
jns
push
test
lret
fcmovnu
push
push
icebp
pop
cmp
adcl
outsl
popf
push
in
and
out
gs
xor
insl
repz
push
sbb
out
ret
dec
fidivl
inc
xor
in
inc
jae
mov
aas
pop
es
push
dec
cmovo
mov
sub
cmp
lds
aam
nop
adc
ss
adc
mov
fildl
xchg
rclb
pop
decl
cmp
out
xchg
sbb
std
jp
push
push
dec
gs
sub
cs
xchg
gs
pop
dec
popf
cmp
mov
cmp
pop
mov
sbb
cmp
data16
fmuls
cltd
add
nop
and
xor
imul
dec
repz
std
test
movsl
in
inc
push
fisttpll
cmp
push
and
movl
cmc
imul
push
adc
mov
fcomps
pushf
sbb
inc
pop
in
adc
pusha
jmp
cltd
inc
mov
xchg
mov
leave
dec
add
inc
and
push
filds
xor
add
sbb
xor
push
sbb
shl
add
and
cmp
jp
push
xor
std
popf
pop
fnstenv
xchg
xchg
and
ret
leave
adc
sub
push
mov
mov
mov
icebp
sbb
pop
add
mov
add
adc
int
mov
ret
cmp
add
xchg
xchg
inc
xchg
lcall
int
mov
add
add
daa
push
fisubrl
out
cltd
test
out
fidivs
mov
push
dec
mov
lock
or
xor
shll
hlt
inc
inc
mov
push
add
lahf
push
ror
mov
push
push
mov
lods
cltd
inc
add
rolb
aad
insb
vhaddps
test
int3
adc
rorb
cmc
inc
jns
pop
pop
clc
pushf
leave
mov
sbb
sbb
loope
and
push
fmulp
fcompl
loopne
mov
in
out
faddl
push
or
sub
dec
or
into
rcll
push
or
shrb
pop
jg
pushf
push
pop
jno
ljmp
mov
aaa
xor
sbb
push
xchg
out
mov
addl
dec
adc
mov
int
mov
inc
hlt
lcall
inc
mov
mov
cltd
xor
movsb
bound
xchg
cmpsb
faddl
rcrb
fs
daa
adc
fs
test
into
fldenv
popf
les
push
cmc
add
lret
mov
iret
ret
dec
repz
js
xlat
push
lret
adc
dec
or
ds
repz
cwtl
mov
leave
lret
mov
sub
fiadds
sub
or
movsb
les
shll
enter
sub
je
ja
mov
je
or
mov
sti
push
mov
pop
shlb
rcr
stos
out
xor
or
shr
xchg
inc
mov
cltd
pop
xlat
jbe
je
jp
xor
and
jl
push
xorb
sti
test
mov
and
pop
jo
mov
pop
sbbb
rcrl
pop
push
adc
or
enter
or
push
subb
mov
sbb
pop
dec
repnz
mov
les
dec
xchg
fnstsw
test
fld
pop
sbb
pop
fsubs
mov
cmp
xor
fcoms
push
mov
adc
xlat
xlat
movsb
xor
negb
popa
shl
lahf
dec
sub
push
dec
sti
cmp
ss
adc
test
ds
lret
aas
insb
pop
adc
xor
fmul
mov
xor
pop
adc
dec
inc
push
subb
sbb
sti
or
xlat
sub
cmp
inc
clc
arpl
adc
push
in
int
xchg
std
sbb
push
aam
xlat
inc
pop
leave
sub
jb
cs
out
repz
clc
ja
int
aad
call
pusha
pop
or
jecxz
sub
xchg
push
pop
cs
sarb
mov
jmp
aas
mov
push
gs
int
dec
jne
sub
cmp
mov
jg
movsb
cli
or
inc
or
inc
incb
outsb
cs
inc
pop
jge
jb
mov
sub
cmp
insl
adc
xor
inc
outsl
xor
sub
rolb
mov
dec
pop
dec
dec
inc
sbb
or
mov
cmp
xchg
test
in
or
ret
sti
inc
sub
xor
mov
mov
xor
mov
inc
sub
sub
pop
or
cmp
push
scas
fmul
insl
sub
sub
mov
das
sub
loopne
lea
pop
inc
dec
jg
mov
enter
clc
int
lea
ror
aad
rorl
shlb
std
fwait
add
inc
sbb
mov
mov
cs
outsl
xor
mov
rolw
sbb
ret
das
adc
fsubrs
arpl
jns
inc
pop
inc
jbe
mov
cmpsb
adc
loope
inc
jbe
mov
pop
add
mov
leave
mov
fwait
das
stc
data16
test
jle
std
out
lea
push
push
loop
push
and
dec
or
pop
mov
pop
mov
movsb
adc
cli
dec
imul
dec
lods
das
mov
push
sub
push
out
mov
add
test
int
stos
orb
xchg
addr16
fildll
xchg
ds
movsb
js
xlat
xchg
jb
pop
add
and
pop
xlat
or
out
ror
xor
iret
aad
xchg
dec
out
adc
sbb
pop
xchg
pop
fdivrs
lahf
jne
dec
in
es
mov
mov
sbb
stos
add
inc
jne
jmp
dec
jp
ret
ret
fidivrl
aas
mov
cmp
and
arpl
xchg
jno
mov
add
mov
pop
jp
mov
stos
std
cmc
lods
push
lea
popa
sbb
sbbb
aas
imul
stc
inc
and
jnp
jmp
shll
insl
scas
cmpsl
and
lahf
or
test
or
cmp
add
inc
dec
cmp
inc
sbb
dec
popl
pop
and
fimuls
sub
sbb
dec
mov
sub
jns
adc
lcall
push
bound
xchg
push
aad
or
pop
jbe
pop
xchg
mov
lret
cltd
pop
or
jbe
xorl
in
pop
pop
mov
repz
pop
dec
ret
ret
gs
push
jb
push
nop
inc
mov
scas
mov
or
out
pop
cmpsl
in
mov
mov
js
add
or
jge
jl
adc
in
inc
dec
dec
push
inc
fsubr
xor
ret
ss
mov
in
test
push
andl
cwtl
adc
adc
rolb
flds
inc
xchg
lds
popa
in
push
sti
sub
inc
das
sbb
sbb
sbb
sub
lcall
jb
and
repnz
outsl
and
fsubrs
xor
je
and
out
cmp
ljmp
test
gs
jae
enter
sbb
iret
test
lock
and
mov
sbbb
outsb
ljmp
cmp
cmp
or
js
arpl
sbb
mov
jbe
pop
clc
mov
sti
xchg
jae
pushf
add
dec
or
push
or
push
call
mov
aam
xorb
inc
jo
les
test
and
dec
popf
mov
popa
pop
lods
rol
inc
movb
pop
imul
mov
aaa
mov
mov
cmpsb
mov
pop
fwait
es
out
imul
mov
push
ret
neg
int3
lods
jle
test
lcall
cmp
mov
dec
xchg
testl
sbb
test
push
adc
adc
cld
cmp
cwtl
mov
dec
js
mov
push
aaa
push
aas
sti
pop
adc
pop
pop
pop
jns
xor
xor
mov
add
out
jb
push
mov
out
je
mov
dec
sar
dec
lret
jmp
cli
aad
pop
add
push
cmpsb
xchg
inc
mov
dec
outsl
xchg
js
push
fists
adc
sti
fs
mov
hlt
jns
cmp
out
js
cmp
loop
inc
mov
push
pushf
pop
mov
enter
mov
xchg
mov
jmp
and
adc
out
mov
push
ret
pop
les
dec
dec
nop
or
inc
xlat
xchg
ret
add
data16
cmpl
mov
ret
jge
push
jo
inc
aaa
dec
pop
lds
outsb
jg
mov
mov
or
pop
push
lahf
push
addl
inc
imul
xor
pop
jbe
jp
ss
jns
add
adc
jp
add
mov
ds
aaa
sub
fwait
mov
insb
and
push
xor
or
jecxz
out
push
jge
imul
cmp
xor
inc
rcl
jl
cmp
jecxz
and
stos
xor
cmp
and
ljmp
fcoms
aam
dec
test
xchg
xchg
jle
pop
pop
fwait
cmp
xor
sbb
or
or
jle
ret
sbb
sub
adc
jo
popa
mov
movsb
or
hlt
jmp
movb
jae
into
cmp
int
or
sarb
mov
shll
fiadds
add
jp
add
or
mov
inc
jl
movsl
cmp
mov
std
movsb
dec
push
pop
out
ss
les
mov
inc
mov
mov
test
jne
mov
xchg
ja
pop
xchg
loope
bound
lret
or
mov
fstl
vpunpcklbw
loope
xor
sbb
fmull
dec
sbbb
mov
enter
rcrl
cs
fstpt
dec
cmp
inc
pop
mov
imull
bound
ret
ja
add
cmp
aas
shrl
dec
rcrl
mov
int3
and
popf
sub
push
shll
rolb
cmpsb
lea
mov
fwait
repnz
test
add
mov
cmp
inc
mov
fwait
adc
out
cmp
test
pop
in
hlt
push
pop
shlb
push
cmpl
or
call
aam
push
inc
jmp
lcall
mov
ds
jns
adc
into
or
rep
pop
scas
fwait
pop
pop
out
stc
mov
pop
xchg
filds
adc
mov
cmpsl
les
xchg
fmull
push
arpl
adc
int3
jnp
xchg
andl
adc
or
cwtl
je
mov
les
inc
cmp
inc
mov
dec
fptan
add
pop
mov
mov
push
ljmp
jae
movsl
shll
mov
shll
cmp
sbb
jae
sub
xchg
cmp
jae
push
popa
adc
add
ret
inc
mov
jl
xchg
xchg
mov
dec
fistpll
mov
sbb
roll
add
imul
pop
push
mov
cmp
push
mov
xchg
das
not
cmpsl
adcl
pusha
cs
std
mov
cmp
inc
or
adc
sub
lea
hlt
aaa
xor
cmpsb
lret
mov
add
xor
pmaxsw
nopl
in
enter
add
test
leave
out
mov
mov
fdivs
mov
les
dec
add
or
out
cmp
fs
and
imul
mov
sbb
fsubrl
mov
xlat
dec
lods
decl
mov
or
subl
cmp
mov
insl
mov
mov
add
rorl
lock
mov
stos
pop
jmp
out
cmp
daa
mull
xor
mov
jmp
pop
pop
add
and
cli
mov
cmp
imul
xor
insb
jmp
adc
inc
test
xchg
push
pop
add
fdivs
mov
adc
into
aam
jns
call
out
subl
ds
test
aam
lods
dec
xchg
iret
cmp
xor
jg
in
fistps
nop
dec
mov
cli
fs
push
dec
pop
mov
fbstp
ret
loopne
stc
test
iret
icebp
xor
mov
rol
pusha
adc
loop
cmpb
jno
dec
outsb
aad
jbe
xchg
das
push
ja
nop
adc
into
ret
jae
je
push
outsb
lcall
xchg
mov
inc
dec
stc
mov
mov
sbb
lret
cltd
jb
mov
loopne
push
repz
xor
mov
fs
add
mov
hlt
push
dec
test
test
mov
je
bswap
jno
lahf
dec
sbb
xchg
cwtl
pusha
sbb
lock
rorb
test
fnsave
push
sahf
les
loopne
mov
mov
cwtl
or
cmpb
sub
mov
mov
cld
sbb
mov
fs
nop
xchg
jl
cmpsl
add
aam
mov
fists
mov
inc
scas
jns
daa
inc
jbe
push
inc
and
inc
adc
or
inc
pop
cs
and
push
nop
mov
or
fsubrs
mov
stos
pop
clc
in
aam
xor
xchg
mov
sbb
pop
ss
jnp
icebp
std
adc
jns
mov
mov
jecxz
jb
test
ret
dec
mov
cmp
jmp
jno
or
in
std
add
movsl
roll
mov
sub
mov
into
gs
xor
in
and
dec
add
xor
push
rcrb
mov
popf
mov
aad
add
xchg
fsubrl
xlat
stos
dec
lret
stc
jp
xor
adc
jne
add
imul
imul
mov
mov
movsl
out
lods
stos
movsl
cmp
dec
aad
push
arpl
repnz
gs
push
push
out
sub
xchg
repnz
lods
push
push
sarl
test
dec
dec
hlt
or
aas
xor
stos
ja
idivl
adc
jb
ds
or
lds
mov
movsl
js
out
ja
shrl
ss
pop
outsl
or
shrl
sub
push
cmp
adc
xor
adc
jno
sbb
dec
add
dec
mov
mov
jae
jge
push
cmpb
mov
mov
roll
jnp
xor
pop
adc
jns
dec
inc
aas
adc
mov
cwtl
sahf
adc
mov
fisttpl
test
inc
mov
orb
xor
lea
add
stc
jecxz
fcomps
jns
test
push
sbb
cmc
sbb
aam
mov
test
out
or
mov
mov
out
call
aad
int3
sub
loope
mov
xchg
cmp
ret
ficompl
sub
insl
adc
out
mov
pushf
fidivrl
xchg
repz
repz
dec
mov
mov
mov
movsb
push
lods
xor
jne
aam
rorb
xor
sahf
and
lods
jle
xchg
mov
dec
mov
lea
lds
iret
fsub
xor
fucomi
or
inc
mov
mov
pop
outsb
shlb
pop
imul
lea
push
jp
cld
into
jp
stos
lahf
and
lahf
adc
dec
lock
mov
fwait
jp
insl
pop
push
or
jne
sub
mov
pop
mov
xchg
scas
imul
jmp
fwait
jecxz
cmp
mov
ljmp
push
popf
lods
sub
cld
repz
jecxz
dec
jns
imul
mov
outsb
andl
stos
inc
push
repnz
das
cmp
lea
push
adc
fwait
jmp
pop
shll
jns
push
dec
leave
popf
pop
push
xchg
mov
mov
data16
adc
outsl
in
cltd
fstp
mov
out
dec
or
mov
pop
xor
adc
pop
adc
fisubrl
inc
cmp
test
mov
mov
cmp
adc
out
inc
mov
out
push
call
jge
nop
sahf
pop
or
adc
movb
mov
adc
xor
outsb
cmp
sub
mov
out
push
mov
pop
pop
enter
xlat
das
pop
cmp
xlat
push
adc
insb
leave
xchg
xchg
fldcw
cmp
loopne
ret
push
or
ss
icebp
or
in
enter
jae
bound
jg
fmul
loop
jp
dec
or
test
pop
cli
inc
push
and
jle
add
iret
leave
mov
je
addr16
inc
pop
xor
movsb
repnz
ds
rcll
cmp
jg
add
xchg
cmp
and
in
aam
cmp
or
cmpl
or
adc
mov
test
test
rclb
cmpsb
int
fistpll
lcall
mov
or
mov
and
lret
fcoms
mov
push
popf
inc
adc
bound
jne
out
add
shr
sbb
adc
jecxz
and
int
scas
icebp
stos
xchg
mov
popl
lods
pop
jmp
sub
dec
jno
orl
fidivrs
lea
ret
push
xchg
jno
push
and
xor
jae
push
xlat
je
pop
cmpsb
xlat
mov
or
pop
sub
pop
cwtl
fdivs
push
out
int
adc
mov
pop
or
das
add
mov
jle
push
mov
mov
xchg
xrstor
push
ljmp
fiaddl
add
xchg
lret
pop
add
icebp
js
call
mov
jne
pushf
sbb
enter
mov
jle
mov
jnp
mov
addr16
enter
sbb
push
or
pop
cmp
ret
testl
fsubrs
imul
cmp
clc
neg
xchg
inc
scas
js
incl
add
xchg
dec
push
popf
xchg
jg
addr16
sub
add
pop
lods
jecxz
push
sub
shll
xchg
out
push
leave
sub
push
mov
xorb
movsb
in
pop
outsb
in
xchg
in
pop
push
mov
rorb
jl
test
jl
mov
lea
stos
arpl
shll
push
mov
and
jle
cmp
leave
mov
in
and
mov
jg
inc
scas
cmp
cmpsl
sti
xor
mov
idivl
in
xlat
lock
xorl
pop
xor
adcb
cmp
test
mov
cld
jge
mov
mov
xlat
outsl
xor
lea
testb
mov
and
icebp
cmp
ret
into
pushf
sbb
gs
out
daa
and
push
arpl
cmpsl
jbe
mull
inc
mov
add
je
dec
and
lock
repnz
les
or
adc
mov
dec
sub
sbb
push
test
sbb
cmc
mov
xor
dec
adc
lahf
sub
test
in
mov
jg
adc
jns
stc
loopne
das
int
loope
mov
in
int3
and
jns
adc
icebp
addr16
jge
enter
call
ds
mov
adc
daa
aas
xchg
jns
out
jl
icebp
sub
out
cmp
mov
ror
fldcw
add
test
jbe
sbb
mulb
xlat
sbb
pop
addb
lret
aam
or
add
cs
pop
dec
in
xor
push
xchg
mov
test
mov
adc
pop
imul
jne
repnz
mov
or
push
xor
pop
adc
pop
shll
xor
ds
imul
idiv
scas
xor
flds
lcall
cmpb
popf
pop
pop
mov
xor
jmp
movsl
and
imul
mov
and
mov
mov
mov
sbb
hlt
mov
mov
pusha
pop
adc
sbb
pop
cld
lods
aaa
cmpsb
cltd
and
cmp
pop
xchg
mov
mov
mov
jbe
add
rclb
pop
pop
lea
mov
pop
bnd
mov
ds
mov
add
pusha
cmpsl
sub
shll
xchg
mov
lahf
cmpsb
jmp
scas
sbb
or
cmp
scas
lahf
mov
adc
out
int
push
outsl
mov
push
sbb
mov
mov
push
test
stos
sbb
int
leave
lret
adc
sbb
lahf
popf
pop
out
push
stos
lret
test
xchg
shufps
dec
mov
cmpb
inc
or
xchg
mov
sbb
gs
pop
pop
mov
shrl
jp
and
dec
icebp
out
das
sbb
mov
fnstenv
inc
mov
adc
inc
inc
lahf
mov
aad
sub
xchg
in
xor
xchg
in
int
cld
cmp
cmp
fs
and
pop
lret
call
xchg
loope
movsl
into
out
scas
sub
sub
insb
cmc
xorb
fistps
mov
dec
mov
js
sar
sbb
push
jns
arpl
ficoms
xor
cmp
les
leave
mov
and
gs
ljmp
lock
cli
popa
or
or
pop
ror
or
dec
call
daa
jp
out
and
pushf
jnp
xorl
pminsw
inc
jl
rol
mov
ds
jo
or
xor
in
fimull
ret
jle
pop
and
sahf
xor
push
inc
cmpsl
jbe
fidivrl
jmp
jp
imul
jbe
mulb
popa
jg
mov
sub
xchg
cmpsl
ss
rolb
movsl
or
cmpsb
shrl
xor
xorb
or
mov
cmpps
stc
push
lea
inc
orl
lds
dec
movsl
mov
and
dec
inc
sahf
pushf
stc
inc
or
xchg
jae
mov
pusha
std
jge
sub
jmp
bound
sub
loope
jle
dec
lret
testb
xor
sub
xchg
jge
dec
sbb
out
fsubrl
inc
fs
into
mov
gs
cmp
push
mov
cmpsb
ds
shrb
push
roll
push
lock
push
mov
out
stos
ds
bound
inc
push
ror
nop
or
fnsave
xor
les
sti
push
mov
ljmp
bound
mov
cld
mov
cmp
jo
stos
dec
xlat
cmp
lods
ret
dec
dec
stos
pop
xchg
popa
mov
sbb
and
or
dec
icebp
scas
push
push
push
xchg
push
mov
fmull
outsb
out
xchg
int
aaa
subl
inc
or
or
jl
jmp
jmp
es
scas
lret
xor
std
cs
hlt
inc
mov
xchg
mov
adc
lds
or
sub
mov
je
fimull
outsl
mov
mov
loope
mov
aam
int
das
sbb
rcll
mov
movsl
test
pop
mov
jne
sahf
and
test
push
and
mov
dec
or
rcrb
fmul
sti
rcll
outsl
cmpsb
and
jmp
imul
test
push
loopne
js
mov
lahf
divb
lods
movsl
push
insl
in
push
sbb
test
xchg
repnz
jge
dec
imul
mov
into
mov
lcall
fcom
mov
ja
cmp
lret
fistl
icebp
mov
in
test
imulb
mov
sbb
lret
and
rcll
ljmp
stos
pop
sub
cmp
mov
adc
addr16
in
mov
orb
int3
ljmp
mov
stos
loop
push
pop
sahf
cmp
inc
mov
sub
aam
fwait
cmpsb
ja
pop
cmp
push
xchg
cwtl
pop
mov
jns
lock
mov
or
pop
bound
pushf
incl
lcall
mov
stc
mov
mov
aas
fnstsw
xchg
fwait
ljmp
dec
pop
cmp
out
xor
mov
cmp
out
xchg
stos
xor
loop
mov
sahf
fistl
xchg
xlat
test
std
xchg
out
std
push
pusha
ja
sbb
jmp
add
dec
sahf
jb
leave
cltd
cmp
loopne
enter
pushf
mov
hlt
arpl
adc
mov
xchg
negl
sub
shlb
movsb
scas
jmp
sub
insb
or
fiaddl
dec
mov
dec
sub
fstl
or
push
loopne
cwtl
and
mov
adc
xor
into
dec
ljmp
ds
add
pop
test
std
adc
cmp
jae
cmpsb
jg
bound
mov
insl
je
sbb
sub
sbbb
cmc
xchg
xchg
sarb
mov
test
push
pushf
ss
cli
cmpsb
xor
mov
mov
nop
popa
and
push
ljmp
fimull
clc
xchg
push
or
pop
dec
aam
movsl
shlb
adc
in
int3
leave
negb
loop
and
adc
push
movsl
and
fcmovne
adc
pop
or
cwtl
cltd
push
hlt
es
hlt
fs
stc
fsubl
cmp
sbb
out
jp
add
adc
cli
mov
xor
int
movsl
cmc
hlt
cmp
insb
test
xchg
stos
inc
sub
or
pop
loope
gs
divb
push
movsb
push
pop
mov
movl
iret
cltd
add
xchg
push
jns,pn
sub
sbb
loop
dec
jecxz
xchg
mov
xchg
fnstenv
iret
fimull
ficoml
andl
js
xor
mov
adcb
lcall
frstor
testb
or
scas
push
push
jp
mov
jecxz
sbbl
pop
adc
insb
inc
imul
jmp
inc
jo
sub
movsl
mov
out
cmp
das
test
in
push
xchg
cli
out
cmp
pop
or
cld
cmp
shll
test
test
or
ret
adc
lahf
test
mov
jmp
rclb
sub
mov
dec
sub
mov
pop
orl
push
addr16
xchg
push
mov
out
xor
outsb
incl
je
inc
dec
scas
js
and
add
cmp
insb
jg
repz
aad
insb
test
jle
popf
es
lahf
pop
mov
das
pop
test
pop
xor
lods
insb
or
jp
mov
or
or
adc
ficomps
dec
pushl
loop
inc
in
mov
xchg
or
aam
f2xm1
scas
xchg
rcll
and
out
std
push
mov
xchg
mov
in
lret
and
jecxz
xchg
jae
or
cmp
mov
aad
in
adc
xor
insl
and
cmc
add
std
outsl
add
fisttpll
test
cmp
roll
push
xor
aas
push
movsl
jno
daa
sbb
repz
into
cmp
push
cwtl
fdivrp
cmc
ss
or
xor
jge
jl
mov
jb
xor
sub
stc
test
inc
or
add
sub
mov
cmc
movsl
lods
ficoms
repz
cld
jp
leave
mov
aas
adc
cli
and
enter
aas
sub
int3
lods
pop
imul
imul
enter
sbb
mov
insl
outsl
pop
ljmp
insl
ds
mov
imul
scas
addr16
leave
test
loope
adc
sbb
jle
notl
push
test
dec
sub
mov
jecxz
pop
in
icebp
repz
fdivrp
fisttps
pop
xor
cmp
inc
jmp
xchg
in
sbb
movsb
std
mov
pushf
cli
mov
mov
dec
xchg
in
mov
int
in
sbb
in
add
insb
and
iret
enter
cmpl
repnz
call
xor
sbb
mov
mull
mov
sub
lea
xor
sub
ljmp
cs
mov
dec
dec
rcll
xor
inc
fildll
cmc
bound
daa
push
popf
jg
test
mov
gs
push
and
adc
outsl
aad
in
or
fistps
adc
jg
lods
add
mov
mov
loop
pop
jecxz
xor
gs
mov
mov
sbb
adc
adc
mov
repnz
movsb
imul
inc
dec
cltd
push
xlat
cmp
mov
mov
dec
rcrb
adcb
insl
pop
push
adc
fdivrs
push
inc
insl
inc
mov
xchg
je
pop
or
dec
xchg
mov
adcl
lods
xchg
push
call
push
add
sub
inc
pop
out
push
xchg
out
lods
lahf
shlb
and
loop
jae
movsl
fs
sub
sub
inc
mov
loope
out
ret
mov
and
cmp
into
or
pop
xchg
cli
mov
aam
or
sbb
cmp
jbe
mov
cmp
stos
jno
mov
idivl
aaa
add
jecxz
enter
push
mov
add
jbe
sti
xlat
mov
cmp
std
adc
lock
jge
push
push
pop
add
loop
push
and
stos
mov
xchg
test
dec
pop
arpl
ss
out
leave
push
cmp
iret
mov
jmp
and
cld
int3
add
xor
xor
jns
cwtl
lock
fidivrs
mov
pop
lcall
push
mov
pop
arpl
rcr
lea
in
std
add
or
enter
add
jnp
sbb
cmp
push
push
mov
stc
data16
xor
mov
cmp
mov
std
insl
ja
add
lcall
cmpsb
es
lcall
mov
pop
mov
and
out
push
push
sub
push
pop
inc
cwtl
jbe
es
jbe
pop
pop
in
pop
sbb
out
ja
lret
out
xchg
lea
in
sbb
inc
push
fidivrl
ds
inc
lcall
cmp
sbb
mov
lcall
and
cvtdq2ps
pop
inc
ja
out
xchg
enter
jb
push
push
loope
int
jmp
add
add
ret
not
ficomps
adc
pop
out
fwait
jg
lret
inc
stc
mov
cmpl
add
js
mov
adc
cmp
adcl
mov
cmpsb
fisubl
xchg
in
adc
enter
xchg
cmp
sbb
ss
push
mov
add
ja
or
or
jne
or
adc
mov
adc
insl
scas
sub
adc
stc
loope
pop
pop
pop
cmc
stos
jecxz
jae
push
and
pop
scas
dec
in
jle
mov
shlb
mov
lods
cmp
inc
stc
repnz
pop
jecxz
fidivl
xchg
add
sbb
mov
cltd
in
cmpsb
pop
aas
sbb
sub
jne
cmp
xchg
incl
sbbb
decl
push
push
push
jg
dec
loope,pn
fwait
out
movsl
and
in
rorl
mov
ss
dec
test
aam
mov
repnz
push
pop
pop
stc
push
lahf
or
push
sub
xchg
adc
notb
jecxz
xchg
mov
jae
pop
aam
divb
insb
xor
and
push
test
cmp
aam
pop
out
mov
daa
fists
pop
scas
stos
add
outsb
addr16
fwait
mov
orb
cmp
or
or
jmp
fsts
pusha
ss
mov
in
xor
sub
scas
adc
test
mov
stc
das
sub
popa
lods
out
xchg
jbe
cmp
pop
sub
push
stc
push
xchg
jmp
inc
test
mov
idivl
and
pop
xchg
sub
jbe
and
ss
jo
adcl
mov
out
sbb
sahf
xchg
pop
test
adc
push
and
cld
mov
add
lds
mov
orb
movsb
andnps
movsb
push
je
mov
jl
xor
push
mov
lret
jne
or
xor
or
dec
dec
outsb
adc
sub
mov
hlt
cmc
mov
mov
cmp
pop
inc
test
lock
mov
imull
add
shlb
cmc
push
xor
mov
ror
mov
pop
sbb
jnp
loopne
mov
adc
adc
jae
jle
pop
mov
rcll
xchg
loopne
pusha
test
test
lods
jns
fildl
xchg
fstpl
cmpsb
sbb
xor
lret
cmp
pop
fnsave
stc
out
frstor
mov
fwait
icebp
es
jmp
dec
jo
sarl
inc
in
pop
add
aaa
pop
ret
sub
push
popa
mov
xor
jmp
dec
movsl
data16
sbb
add
out
add
in
movsl
aad
icebp
ret
daa
ljmp
xor
out
sti
pop
push
out
adc
rcrl
jecxz
xor
lret
and
in
sub
imul
mov
repz
add
jns
test
add
pop
mov
jae
test
inc
cmpsb
repnz
jp
int3
loop
pop
popf
add
call
xchg
fsts
adc
jne
fs
push
sahf
and
dec
in
sub
add
jnp
roll
and
ljmp
cmp
inc
arpl
out
pop
lock
adc
xor
xor
pop
scas
sbb
insb
cmp
add
sbb
push
loope
stos
mov
lods
in
fistps
fldcw
push
xor
lock
andb
andb
jge
aam
movsb
add
outsb
mov
test
fwait
adc
or
mov
adc
xchg
aaa
lret
shl
into
jns
or
rcrl
xchg
sbb
or
fcoml
rclb
repnz
and
popf
ljmp
xor
ljmp
push
cltd
and
mov
insl
rcrb
mov
add
aad
adc
xchg
push
aaa
stc
imul
test
idiv
jb
dec
enter
inc
rolb
and
and
arpl
dec
scas
aad
lds
scas
jb
xchg
icebp
into
xor
hlt
fisttpl
bswap
sti
repz
and
test
sub
repz
out
lods
lahf
divl
std
in
mov
mov
in
sarl
pop
ficomps
aas
aaa
pop
shrl
jb
femms
pusha
mov
addr16
dec
pop
mov
push
loopne
pop
xor
pop
push
sbb
in
lcall
or
lock
psraw
leave
popf
add
mov
out
mov
mov
mov
dec
stc
jns
jle
fistl
pop
test
push
adc
sbb
jg
out
and
lret
mov
movsb
sub
inc
jns
scas
inc
xor
mov
lds
xchg
xchg
out
and
push
test
cmpsb
lods
xor
sahf
or
or
xor
xchg
fistpl
sbb
rcrb
dec
mull
lods
xchg
inc
andl
jbe
rcl
inc
cmp
adcl
adcl
jg
cmp
dec
and
dec
jo
mov
ret
or
add
sbb
push
lea
je,pn
lret
pop
inc
movsl
cli
xchg
rcrb
popf
test
xchg
in
pushf
xor
lds
arpl
andb
aad
cmp
pushf
enter
sub
leave
mov
stos
popa
push
mov
imul
adc
xchg
popl
xor
call
sub
inc
pop
fwait
sbb
mov
in
jnp
pushf
movsb
mov
faddp
pop
xlat
xor
add
mov
pop
es
adc
push
insb
les
ja
pop
movsl
setnp
mov
sbb
xchg
fprem
inc
lea
out
clc
pop
push
lcall
sub
xchg
inc
imul
xor
sahf
xor
lea
movsb
aas
xchg
jb
inc
and
xor
aam
popa
jne
add
adc
out
mov
mov
into
ret
fisubrs
lahf
xor
push
sub
fcomps
loopne
call
cwtl
enter
jnp
jno
in
push
aas
fstpl
addr16
out
xlat
orl
lea
adc
xchg
or
push
test
or
or
mov
push
mov
std
cltd
pop
jnp
cmp
xor
push
repz
jo
testb
jg
adc
xchg
adc
lock
jbe
call
ds
mov
jne
mov
inc
mov
vpunpcklbw
jbe
xor
cli
incb
mov
mov
sbb
sbb
jo
je
aas
cli
dec
lret
das
insl
rcrl
out
mov
cmp
sbb
mov
xchg
mov
es
xchg
movl
out
iret
mull
xlat
cmp
jb
jge
sub
jg
dec
setns
mov
loop
mov
mov
scas
mov
in
push
lahf
pop
xor
jg
pop
pop
mov
icebp
pop
push
ret
loop
vpunpcklbw
cmpsl
xor
es
cltd
xor
xchg
or
mov
andb
pop
xor
outsb
icebp
shl
ljmp
fwait
dec
jecxz
mov
int3
je
jbe
sahf
xchg
push
mov
data16
movsl
sub
into
ret
test
add
addr16
cmpsl
push
icebp
xchg
jecxz
pop
xor
cmc
iret
push
sub
setp
dec
xchg
jp
fildl
clc
add
mov
mov
pusha
inc
add
pop
mov
jl
sub
mov
jo
cmp
loopne
ret
loop
ss
mov
pop
lahf
popf
add
shr
mov
cltd
pop
cmpsl
mov
mov
cltd
lods
sub
mov
xor
shl
dec
xchg
int3
push
or
sbb
cmp
xchg
or
mov
sbb
pop
adc
xchg
mull
shll
mov
enter
mov
mov
test
or
into
fsubrl
fsubl
mulb
into
adc
icebp
js
sub
xor
pop
push
clc
adc
jecxz
push
lods
in
call
mov
popf
pop
ret
data16
sbb
enter
cmp
mov
sub
xor
inc
mov
mov
push
cmp
mov
jnp
in
adc
sbb
icebp
jns
ljmp
push
mov
or
imul
pushf
aad
out
andl
outsb
or
mov
hlt
mov
xchg
loopne
sbb
and
sbb
gs
mov
out
sar
fldl
js
mov
dec
mov
mov
add
cs
mov
mov
xchg
xchg
and
mov
aad
add
add
out
cmpb
cmp
inc
jne
jbe
cwtl
add
pop
jne
lock
cmpsl
xchg
xchg
pop
jnp
cmp
xchg
xchg
iret
nop
cmp
mov
lods
jo
cmp
fldl
jno
jl
test
mov
shll
and
mov
sub
xchg
jae
loope
sub
test
add
cld
clc
sub
mov
fcmovu
rol
xchg
push
cs
pop
insb
std
std
cmpsl
sub
pop
add
bound
adc
xchg
xor
or
jge
jae
scas
pop
cmp
pop
out
mov
lods
pop
std
loope
test
stos
sub
iret
out
test
mov
stos
cmpsl
ret
xchg
sbb
lahf
jo
sbbl
shrl
ljmp
addr16
mov
loop
adc
mov
xchg
push
xchg
outsb
jp
sbb
into
xlat
jge
movsl
xchg
adc
into
loopne
inc
iret
mov
mov
sarl
or
test
nop
xchg
jecxz
test
mov
jbe
mov
in
cltd
push
sub
jecxz
in
lds
or
inc
cmp
or
jbe
loopne
test
cmp
jle
shll
adc
or
pop
sbb
mov
xchg
cmp
in
jns
ret
test
inc
leave
ret
dec
pop
or
sti
mov
adc
xchg
push
dec
jnp
pop
sbbl
and
mov
cmc
adc
sbb
mov
notb
icebp
aad
andb
mov
xor
clc
ljmp
cmp
jo
mov
sarl
dec
test
sbb
xor
cmp
stos
stos
sub
cld
lcall
cli
fs
loop
insb
fcomip
pop
sbb
lcall
fwait
add
inc
inc
adcb
scas
inc
cld
in
xor
adc
xlat
xchg
ret
push
pop
cmp
in
and
sub
jge
aas
mov
test
jbe
push
xor
cwtl
jne
jmp
loop
in
jmp
jns
xor
mov
imul
sub
mov
mov
ficoml
daa
mulb
repz
inc
in
add
or
cmp
adc
lret
out
dec
lock
std
lret
pop
arpl
lds
push
in
sti
xor
dec
shll
imul
cmp
cmp
or
and
xor
imul
repz
aas
xlat
dec
call
sub
sbb
xchg
imul
lret
dec
inc
loopne
cmpsl
in
cld
in
test
stc
add
sub
daa
push
xchg
mov
rcrl
out
xor
test
pop
mov
cltd
xlat
xchg
pop
mov
push
fstps
and
adc
lret
dec
mov
jle
shr
or
call
xchg
jb
xor
adc
jb
pop
mov
inc
pushf
and
mov
movsb
gs
add
mov
sub
cmp
mov
add
stos
movsl
jmp
je
and
test
daa
sbb
mov
xchg
sbb
jae
jle
sub
sub
mov
cmp
enter
pop
xchg
ds
test
and
sub
sbb
adc
adc
sbb
into
jne
add
or
push
adc
xchg
xlat
jb
inc
pop
das
cwtl
stos
es
addr16
enter
insl
popa
push
mov
sbb
mov
in
shrl
jnp
movsb
add
push
xchg
jecxz
mov
push
inc
dec
dec
insb
js
test
fists
push
push
fs
sub
add
insl
or
sbb
inc
jmp
lret
xchg
js
scas
pop
xor
add
mov
dec
cmp
fnstcw
adc
cwtl
jl
scas
cmp
mov
shll
xchg
pop
push
movsl
outsl
dec
movsl
into
dec
sahf
mov
mov
jo
dec
mov
push
add
add
ret
sarl
cwtl
mov
inc
lret
jo
push
mov
inc
push
jp
js
popa
int3
dec
jmp
outsb
cmp
aad
xor
jae
mov
in
ljmp
icebp
fidivs
mov
inc
and
jle
lods
fnstcw
mov
out
sub
cli
mov
ret
test
add
push
addr16
loop
fwait
push
js
lret
je
subb
adc
inc
xor
mov
orl
ret
adc
jnp
fadd
es
ficoms
dec
stc
push
xor
push
cmpsl
aam
lods
and
std
mov
xor
xor
push
adc
in
movsl
rcll
or
out
adc
loopne
push
test
insl
dec
push
and
inc
sbb
cwtl
shl
pop
popa
mov
jg
inc
fnsave
arpl
fmull
mov
push
add
xchg
in
mov
enter
popa
cmp
rorl
ljmp
stos
stc
movsl
and
fistps
mov
add
loop
les
lds
mov
push
roll
adc
or
ljmp
jecxz
push
movsb
nop
pushf
fstl
mov
push
sbb
daa
sarl
dec
xor
cmp
in
shlb
cmp
test
cmp
nop
and
adc
addr16
mov
addr16
xor
add
push
xchg
fwait
push
sbb
mov
nop
aad
testb
cwtl
xlat
fcompl
ljmp
jb
scas
push
scas
rcrb
pusha
mov
rolb
or
and
jge
dec
imul
sahf
jo
pop
inc
mov
cmpsl
mov
out
cmp
or
cmpsl
cli
inc
lret
cwtd
sub
and
cmpsl
adc
inc
xor
push
je
xchg
pop
xlat
out
jbe
sbb
shl
test
mov
lahf
arpl
inc
std
test
xor
cmp
cmpsb
or
mov
dec
out
lcall
push
mov
idivl
popa
add
inc
movsl
xor
lods
mov
and
ficoml
movsl
xchg
add
pushf
cmp
mov
inc
mov
repz
cmp
xchg
cli
and
rcll
addr16
lods
adc
sbb
cmp
lds
mov
arpl
imul
mov
push
sbbb
fs
mov
popf
pop
fnsave
test
mov
add
push
stos
jle
adc
xchg
ja
or
jle
and
mov
cmpsl
push
mov
out
or
pop
inc
push
add
xor
cmp
mov
xor
dec
or
imul
cmpsb
dec
inc
lea
call
add
pushf
dec
dec
sti
dec
add
mov
push
mov
daa
lahf
dec
xchg
popa
cwtl
shlb
sti
and
inc
clc
adc
mov
add
popa
in
sbb
pushf
jno
jp
push
push
dec
test
mov
add
cmp
xor
fsubrl
cwtl
pop
sarl
fdiv
subl
mov
add
inc
dec
inc
mov
icebp
sbb
xchg
aam
neg
or
in
cmp
push
pop
adc
xchg
push
rol
xchg
mov
dec
mov
lods
xor
test
xchg
cwtl
bound
lock
std
pop
mov
jbe
sbb
test
mov
lock
or
call
xlat
les
adc
fdivs
and
mov
pop
dec
push
push
pop
dec
xor
sbb
popf
icebp
push
mov
and
sub
fdivl
sbb
cmp
out
gs
mov
or
lcall
icebp
or
sbb
pop
mov
gs
adc
mov
mov
cmpsl
ret
sbb
push
pop
lea
idivl
mov
ja
adc
mov
xchg
mov
sub
inc
testb
pushf
lret
dec
lea
imull
cmp
pop
mov
or
mov
mov
hlt
xor
loopne
mov
or
aad
sti
push
ss
incl
aad
repz
sub
xor
push
push
jns
mov
fwait
jae
sti
mov
push
lds
jl
jmp
pop
dec
pop
jecxz
add
movl
or
out
sbb
mov
ljmp
bound
ja
cli
fldz
sub
push
pop
push
fildl
or
sub
inc
psubsw
or
adc
pop
cmp
scas
inc
dec
cld
out
cmc
pusha
jb
mov
sub
mov
sub
jo
jo
shl
lock
lods
push
lret
cmp
pop
jge
sbb
pop
icebp
mov
sub
cwtl
fst
into
imul
xchg
inc
data16
mov
adc
in
sub
das
mov
lock
mov
xchg
fcompl
jmp
outsl
pop
pop
pop
inc
pop
in
test
lock
jp
dec
inc
loop
jno
enter
imul
loopne
repnz
popa
bound
lret
aad
cld
inc
jp
dec
sahf
outsl
lods
dec
inc
idivl
jle
xchg
stos
adc
jns
or
pushf
cltd
xchg
gs
mov
and
mov
add
xorb
rorl
punpckhbw
push
stos
mov
lahf
gs
popa
aam
pop
stc
jnp
rcrb
sahf
mov
mov
out
mov
pop
pop
mov
std
mov
psrad
mov
push
into
xor
cmp
call
pusha
leave
sbb
mov
sbb
and
clc
jbe
or
xor
pop
mov
jns
lret
xchg
gs
adc
cmpsl
addr16
loop
xlat
push
pop
andl
mov
mov
call
jp
cmp
jns
imul
push
pop
ss
loope
arpl
pushf
dec
sub
jecxz
mov
dec
jp
sbb
push
movsb
pop
inc
xchg
mov
or
add
dec
pop
pusha
in
out
pop
cmp
mov
adc
mov
xor
fs
pop
clc
mov
fcmovu
jo
adc
clc
lcall
fs
cmp
cmp
lret
adc
mov
jo
sarb
imul
inc
fsubr
push
inc
mov
mov
push
dec
push
dec
xchg
jae
rcll
add
jnp
mov
std
pop
lods
cld
and
jnp
in
loop
xor
imul
mov
test
xor
cwtl
sarb
inc
sub
fnstsw
dec
loop
dec
std
xchg
cmp
dec
mov
mov
push
ja
sti
leave
insb
or
sbb
daa
inc
callw
push
in
ja
or
repnz
sbb
push
insb
mov
arpl
dec
int3
aad
popa
adc
sub
mov
pop
out
push
jb
dec
ljmp
aas
fistps
mov
gs
sbb
xchg
adc
sub
cmp
rorl
add
fwait
push
gs
enter
push
bound
mov
stos
or
daa
enter
inc
scas
arpl
leave
mov
out
inc
repnz
aas
adc
jle
dec
mov
mov
fnsave
add
mov
sub
xchg
jb
push
dec
ss
pop
imul
xchg
fstpt
sbb
cmpsb
pop
into
pop
pop
inc
cld
insl
lock
out
repz
cmp
out
cmp
adc
dec
out
lods
dec
addr16
sub
sbb
in
xor
push
cltd
jae
dec
cmp
add
xor
or
aad
ja
int
mov
xchg
mov
shlb
xchg
adc
dec
data16
mov
cmp
out
push
adc
insb
hlt
std
aam
test
in
enter
cmp
test
inc
mov
xchg
scas
push
sbb
lcall
orl
cmc
cmpsb
push
cs
jae
sbb
notl
hlt
or
lea
cmpsb
addr16
pop
ret
insb
inc
shll
sbb
push
pop
add
dec
in
dec
in
sub
cltd
push
or
push
xchg
rolb
jecxz
cmpb
pop
sub
stos
cwtl
cmp
call
fwait
sbb
mov
inc
or
fmull
fbld
dec
cmc
inc
adc
jg
jns
es
and
ja
testl
xor
dec
hlt
or
cwtl
mov
stos
inc
int
lods
rclb
cmp
cmc
mov
dec
test
push
daa
outsb
sub
dec
jmp
add
insl
mov
ret
test
inc
scas
cmpl
push
adcl
arpl
pop
push
ficoms
cli
pop
pop
dec
stos
outsl
push
xchg
xchg
roll
and
lret
popa
cmp
xlat
xchg
xchg
stc
inc
mov
mov
fmull
pop
inc
and
scas
push
mov
jne
pop
mov
mov
add
add
pop
popa
pop
inc
mov
push
dec
outsl
fistpll
add
mov
in
sarl
sbb
mov
mov
repz
xchg
sbb
mov
lock
clts
mov
pop
xor
pushf
ret
pop
xchg
push
scas
adc
jo
imul
push
dec
mov
es
test
out
lahf
sbb
sti
pop
rcrb
jne
push
mov
addr16
loope
bound
sti
cmc
adc
rcrl
push
jns
stos
adc
faddl
clc
popf
xchg
push
add
or
jno
xchg
icebp
dec
insl
test
loope
hlt
mov
push
sub
adc
cmp
pop
repz
pop
mov
lahf
mov
and
fdivr
dec
je
clc
add
mov
es
adc
add
add
insl
jl
shr
mov
cmp
mov
mov
ja
cmp
int3
jge
cmp
cli
std
mov
out
sub
jmp
inc
push
xchg
mov
shrb
cmc
movsl
jp
jmp
imul
test
xchg
xchg
mov
and
mov
xor
jae
xchg
call
pop
test
lods
movl
lea
popf
test
cmp
lahf
pushf
dec
lock
pop
lcall
loop
loope
and
or
nop
mov
lea
push
xor
inc
scas
int3
es
pop
flds
lods
mov
lods
iret
movsl
imul
les
jne
jnp
cltd
shlb
cmp
mov
cld
test
sbb
jecxz
jo
es
outsl
jmp
sti
outsl
inc
mov
lahf
jmp
sub
nop
or
lcall
aam
stos
xchg
das
pop
stos
xchg
lods
test
pushf
mov
dec
push
push
jae
sti
fwait
fwait
push
or
mov
inc
pushf
scas
inc
mov
or
or
das
int
fwait
or
xor
dec
mov
mov
xchg
in
fwait
sbb
push
xorb
es
arpl
test
push
iret
lods
jmp
loope
mov
dec
fsubl
push
scas
add
popf
xor
mov
inc
cltd
push
jle
add
icebp
test
xchg
ja
rorl
fcom
lcall
in
xor
adc
mov
push
jge
sbb
in
and
int
adc
add
int
in
rclb
int3
xchg
or
cmpsb
in
mov
adc
fs
test
fwait
sbb
lret
xchg
js
add
mov
push
pop
loope
mov
cmp
mov
add
dec
cli
jb
cmp
filds
mov
mov
movsb
notl
sbb
inc
ss
pop
inc
pop
movsl
imul
mov
cmpsl
mov
mov
fsts
push
aad
lods
cmp
cmpsb
into
mov
fnstsw
mov
mov
xchg
inc
xor
push
imul
pop
or
js
xor
push
ljmp
adc
mov
cmp
push
in
push
test
cmp
ljmp
sbb
or
dec
int3
push
jo
in
aam
icebp
xlat
sub
inc
rcrl
in
or
cmp
cmpsl
ss
inc
mov
movl
insl
xchg
je
mov
mov
call
sub
enter
push
mov
fistpl
adc
div
push
mull
inc
jecxz
pop
add
adc
lahf
divl
mov
lret
loopne
loop
jge
inc
cld
add
and
pop
fxch
into
mov
cltd
mov
sub
push
mov
les
xchg
push
cs
movaps
in
jmp
xchg
lret
lahf
xchg
sbb
mov
or
or
lcall
cltd
mov
sub
cmpsb
adc
push
pop
lea
fistpl
mov
outsb
inc
cmpsb
xor
imul
insb
adc
push
lock
dec
xchg
ljmp
rcrb
bound
rcll
xor
das
mov
das
or
ret
lret
lret
jmp
outsl
inc
push
sbb
mov
jecxz
fimull
mov
cmp
outsb
jne
int
cli
mov
pop
imul
push
sub
mov
or
push
mov
and
ljmp
inc
jle
sub
movsl
cltd
out
aam
dec
ljmp
lods
cmc
and
adc
ret
pop
fs
clc
dec
mov
mov
or
jno
ret
enter
push
add
xchg
or
push
les
sbb
out
mov
daa
int
inc
xchg
pop
and
dec
xchg
pop
les
pop
mov
mov
sbb
and
ss
cmpsl
dec
fcomps
sub
inc
nop
dec
testl
xchg
xor
fstpl
inc
loopne
rcll
sbb
fcmovnb
outsl
scas
iret
fdivs
cmpsb
mov
shlb
daa
cmp
in
inc
pop
xor
shlb
test
out
shl
inc
stos
insl
push
orb
rcrl
xlat
adc
cmpsl
push
mov
xor
dec
loope
mov
pop
xchg
dec
mov
arpl
lea
mov
lock
dec
cmp
enter
or
mov
add
stc
js
mov
xlat
lret
cmp
popa
push
xchg
lods
test
es
mov
push
add
and
sarb
and
test
sbb
xchg
out
adc
mov
pushf
pop
pop
clc
add
sbb
sub
push
inc
adc
inc
adc
mov
mov
decb
pop
rorb
dec
inc
outsb
cld
mov
inc
sbb
notb
nop
in
fcomi
adc
fimuls
lods
or
ret
cmp
inc
dec
cmp
adc
push
adc
mov
and
dec
cmp
stc
sub
xchg
xchg
fs
adc
or
vmwrite
out
xor
dec
loopne
ja
cmp
xchg
data16
pop
push
push
mov
or
pop
jl
into
idivl
pop
mov
dec
das
popf
in
lahf
cmp
les
fbstp
xchg
mov
add
xlat
xor
insb
into
xor
scas
or
imul
pusha
jno
popf
mov
lods
sbb
jbe
ficompl
and
icebp
imul
mov
inc
push
dec
int3
mov
and
insb
dec
sub
aas
jp
stc
xor
stc
cmp
ljmp
cmp
js
xchg
mov
popa
mov
in
daa
out
mov
lret
mov
je
jmp
out
cmp
inc
arpl
or
insl
cwtl
outsb
adcb
add
jnp
cmp
mov
push
cli
mov
mov
mov
pop
jl
lret
push
scas
in
shl
mov
addl
cmp
dec
mov
sbb
scas
imul
mov
data16
pop
rolb
adc
mov
inc
fcomps
out
mov
lods
hlt
ja
movsb
cs
jb
pop
lcall
cld
lret
inc
int3
dec
pop
insb
ret
incb
sub
fdivl
ret
movsb
nop
test
pop
inc
mov
push
fistpl
decl
mov
fwait
sbb
aad
pop
roll
pusha
pop
dec
rol
push
adc
cmpb
adc
call
fimuls
fstps
test
or
clc
push
adc
adc
clc
and
cwtl
pop
pop
xchg
outsl
add
mov
sbb
jnp
pushf
jmp
lcall
lods
jns
cli
cmp
ljmp
or
cmp
out
sub
fs
push
fildl
outsb
mov
fwait
lahf
lcall
imul
aam
and
jg
mov
dec
mov
fsubrs
lret
cmp
stos
mov
in
mov
rorb
push
pop
lret
xlat
je
fwait
dec
pop
fsubl
je
imul
sub
inc
ss
add
adc
xchg
mov
jmp
das
add
cmp
inc
cmp
xchg
fiaddl
pop
stos
inc
int3
push
sbb
add
mov
push
int
push
inc
stos
mov
lods
sub
xor
mov
ja
push
push
xchg
sub
cs
mov
mov
out
adc
lea
jmp
or
rcll
into
sbb
pusha
and
mov
gs
rcrl
int3
roll
xor
mov
loopne
add
push
and
call
xor
xor
or
outsb
pop
cmp
xchg
popl
jno
bound
imul
adc
call
imul
push
movsl
ds
testb
jbe
aam
mov
mov
data16
loopne
test
mov
mov
xorb
out
mov
sbbl
xor
inc
add
loopne
pushf
adc
out
sahf
and
mov
pop
notb
adc
sub
mov
ds
xchg
pop
dec
inc
fists
or
or
mov
sub
stos
pop
fildl
cmp
adc
pop
mov
aad
xor
test
call
mov
xor
mov
fwait
clc
ds
sub
je
push
cmp
call
dec
push
and
mov
fcmovu
push
fwait
pop
arpl
movsl
mov
jmp
repnz
andl
xchg
pop
loop
rclb
cmpsb
and
jae
push
ss
pop
adc
and
push
pop
jns
icebp
gs
call
push
sarl
push
stos
ja
mov
repz
add
je
test
lock
mov
xchg
ds
fdivrp
xlat
cld
das
and
std
lods
xchg
aas
adc
in
push
dec
push
test
daa
add
cwtl
scas
mov
mov
rorb
push
inc
pop
dec
ret
das
mov
pop
jae
dec
xchg
cmp
adc
xchg
inc
enter
ret
mov
mov
dec
lret
cli
adc
xchg
rorl
notl
xor
test
mov
push
cmpsl
add
and
pop
loope
ficompl
jge
sti
sbb
into
xchg
subl
les
imul
xlat
daa
rcl
mov
push
sub
into
loope
pop
fdivrs
mov
or
dec
or
mov
insb
lahf
adc
loope
fsubl
mov
rolb
mov
xchg
jo
mov
das
notl
shl
movsl
outsb
mov
stos
int
xchg
push
ret
jge
mov
jge
cmp
pop
enter
mov
fistpll
lods
loop
rorw
stc
rol
ja
cs
mov
mov
fildl
push
dec
and
add
cmovg
push
and
sub
pusha
lods
or
lds
inc
pop
xchg
stos
pop
sub
inc
int3
dec
ret
andb
dec
dec
test
mov
sub
shlb
and
gs
add
in
cmp
popa
je
int3
pop
dec
mov
mov
jns
cmp
or
push
lret
dec
jmp
frstor
pushf
mov
es
enter
sahf
jns
and
push
cmpsb
add
or
or
jp
mov
adc
loopne
cli
divl
pop
xchg
pop
test
pusha
dec
add
mov
adc
lcall
cmpl
xchg
das
movsl
mov
pop
mov
cltd
shlb
adc
call
inc
jno
mov
pop
add
dec
add
jge
pop
mov
mov
lcall
test
jne
push
stos
mov
or
inc
dec
test
pop
and
sbb
xchg
lcall
shlb
push
ret
pop
setnp
dec
mov
sbb
lcall
repnz
adc
loopne
and
orl
mov
add
in
xchg
push
stc
jb
in
jo
pop
push
outsb
sub
test
add
int3
xchg
xor
les
cmp
aam
lcall
inc
cmc
cmp
and
jge
test
cmp
lret
ja
outsb
in
das
push
repnz
into
mov
adc
xlat
push
cmc
cmp
push
or
testb
fstl
push
xlat
lahf
sbb
push
lret
mov
jle
je
jnp
fucomp
jb
mov
pop
in
arpl
out
mov
aad
dec
lahf
jmp
dec
pop
test
pop
mov
push
aaa
mov
ficoms
pop
std
scas
frstor
aas
pop
mov
and
jecxz
add
lcall
out
xor
js
inc
mov
leave
aas
call
adc
jb
sub
sbb
lahf
mov
jae
ret
jnp
inc
or
jo
cmp
jb
out
mov
or
lcall
dec
sub
or
inc
mov
xchg
xor
lcall
sbb
in
arpl
push
call
sub
pop
jmp
dec
cmp
dec
das
push
lret
out
subl
mov
imull
lock
jg
popa
movsl
cmc
mov
dec
jnp
aam
pop
mov
mov
hlt
int3
jp
pop
sub
fidivs
sbbl
or
lods
aas
mov
clc
out
dec
sar
mov
mov
mov
scas
int
mov
xor
dec
mov
aas
xchg
dec
in
jp
xor
std
movsb
cwtl
or
xchg
ret
and
jno
sbb
mov
imul
clc
jmp
jb
and
inc
pop
pop
pop
push
lds
cmc
and
push
outsb
inc
fcomps
cld
push
add
rorb
mov
mov
or
sbbb
into
ret
clc
dec
cli
inc
fmul
cli
popf
lcall
adc
shl
fs
std
pop
inc
loop
cmp
ljmp
imul
clc
in
jmp
xchg
push
imul
test
cmp
sbb
in
lret
pop
and
sub
cs
imul
scas
imul
hlt
int3
sbb
ret
ljmp
jns
adc
xchg
cmpsb
mov
jle
inc
daa
popf
jae
imul
cmp
and
jb
cld
pop
mov
xchg
inc
or
cmc
jne
xchg
sbb
xchg
dec
es
repnz
aaa
cld
fabs
out
adc
pop
fistl
cli
push
and
sbb
lods
fadds
jecxz
ljmp
mov
push
xchg
push
xchg
or
push
pop
push
push
rolb
int
add
fists
mov
sbb
jmp
xor
fcoml
test
outsb
push
cmpsb
aad
lret
or
inc
push
or
les
pop
mov
jnp
aam
pop
inc
rcrb
jge
sbb
fstl
inc
test
dec
adc
pushf
mov
fldcw
loope
adc
push
cwtl
sub
adc
cmpsb
sbb
mov
test
ja
push
lods
xchg
mov
xor
xchg
andb
mov
xchg
mov
mull
cld
cli
adc
mov
cli
test
aam
mov
into
and
movsl
test
push
pop
es
test
push
ja
aas
outsl
cmp
adcb
pop
cltd
jge
pusha
int3
dec
push
int3
fldenv
inc
lods
fldenv
dec
shll
mov
bound
push
mov
stc
cmp
es
rcll
leave
testl
xor
fisttpll
push
loopne
mov
add
addb
rcrb
jbe
xor
jne
adc
test
jl
xchg
mov
mov
adc
pushf
or
lcall
cltd
sar
pop
jmp
and
mov
bound
cmp
icebp
sub
in
bound
xchg
fcoml
cmpsl
cmpsb
mov
movb
and
cwtl
jbe
push
mov
cs
push
sbb
jb
jb
jl
ret
sub
cli
push
mov
add
jae
leave
je
mov
or
daa
in
cwtl
mov
dec
sbb
xor
decl
dec
stos
jnp
test
xchg
divb
fdivs
jmp
inc
jne
jmp
jecxz
punpckhdq
ja
stc
sbb
pop
imul
add
test
lret
cli
sbb
call
or
mov
xor
jae
inc
mov
jmp
jge
cmp
jnp
xchg
push
jl
dec
movsb
loopne
rolb
jbe
hlt
pop
rorl
sahf
les
testb
mov
scas
pushf
es
mov
mov
cli
pusha
in
push
xchg
mov
jns
dec
sub
aad
arpl
fldl
popa
pop
icebp
dec
jp
shrl
or
mov
push
stos
loop
mov
mov
mov
shlb
and
shll
xlat
add
lahf
cwtl
ror
xchg
cmc
rcrl
mov
mov
imul
ficoml
or
ret
xorb
inc
ss
cmp
xchg
sbb
fsubr
ret
inc
fldl
enter
xchg
mov
jg
add
fsubl
mov
jb
mov
pop
mov
cmpsl
mov
cmp
mov
sub
sahf
pop
cmpsl
or
inc
sub
daa
data16
pop
fwait
add
inc
fcoms
mov
sarb
hlt
ljmp
mov
lock
push
inc
fiaddl
adc
pop
scas
push
imull
mov
jmp
popf
mov
pop
cmp
das
out
push
pop
jle
push
xchg
hlt
in
and
jge
or
sbb
shrb
adc
add
aad
pushf
movsl
jno
mov
insl
sarb
pop
pusha
rolb
repnz
fdivp
ds
dec
adcb
mov
movsb
scas
mov
stos
pop
test
dec
dec
sub
rolb
push
adc
arpl
sbb
jg
sbb
stos
sub
inc
and
sub
lret
sbb
push
jbe
loop
jb
lcall
push
jecxz
xchg
mov
mov
mov
sub
ret
jmp
push
add
xchg
push
lret
mov
inc
iret
leave
cwtl
out
fwait
cmp
bound
xchg
sub
lods
push
ret
xchg
test
fldt
fstpt
pop
cmp
cwtl
sbb
cwtl
pop
hlt
prefetchw
or
push
gs
push
dec
sbb
jmp
jnp
sbb
add
js
adc
es
js
push
jnp
repnz
xchg
jge
inc
mov
pop
adc
dec
jne,pn
cmp
in
iret
inc
sbb
sbb
stos
xor
pop
adc
stc
out
in
or
mov
push
adc
test
int
dec
les
cmpsl
pop
cmp
ret
daa
cmpl
nop
arpl
or
add
sbb
dec
jno
sbb
cli
les
mov
cmp
mov
imul
leave
dec
test
mov
jns
fisubl
imul
jmp
std
sub
imul
dec
movsb
inc
cmpsb
and
sbb
inc
mov
outsb
cmpsl
js
mov
addb
xor
add
imul
pop
and
and
mov
mov
iret
aad
adc
or
xor
and
loope
ret
mov
sub
ljmp
loope
mov
cmc
scas
movsb
neg
and
and
sub
in
mov
insb
aam
add
orl
sub
jnp
leave
xor
mov
dec
das
in
add
dec
fldt
cmpsb
pop
cmp
lea
adc
sbb
dec
push
jmp
cltd
aam
lcall
or
mov
sahf
mov
mov
pop
pop
pushf
hlt
out
push
rorl
push
mov
or
jmp
cli
out
in
mov
push
sub
pop
mov
inc
cli
in
ljmp
aad
data16
ret
xchg
mov
dec
add
lret
pop
or
dec
xchg
hlt
insb
mov
test
lcall
cltd
ret
hlt
jne
sbb
in
sbbb
jle
mov
pop
cmp
xor
cwtl
scas
leave
mov
jmp
push
or
repnz
pushf
cwtl
push
sub
mov
sbb
gs
ss
pop
outsl
or
cmp
push
dec
in
subl
ja
push
fwait
lds
mov
mov
sub
mov
push
jecxz
push
fisttpll
jl
pop
arpl
cmpsl
cmp
adcb
subb
xchg
sub
xor
fisubs
jns
push
fwait
loop
jns
int3
lret
clc
test
arpl
dec
cmp
adc
jo
inc
xor
sti
inc
stos
lret
xchg
sub
imul
sbb
dec
das
push
inc
push
out
mov
xchg
dec
mov
push
jge
and
push
or
and
lods
inc
rcll
sub
loope
aaa
mov
sbb
in
lea
xchg
xchg
clc
cmc
sbb
push
jnp
cmp
scas
push
repnz
xor
mov
lret
test
repnz
inc
in
dec
pop
out
push
mov
lea
ss
into
add
cmpsl
adc
fldenv
lock
out
int
popf
fdivs
ja
cmp
jmp
xchg
push
aam
jnp
pusha
add
fildll
xchg
dec
mov
adc
fisubl
mov
xlat
sti
int3
fstpt
pop
xchg
mov
xchg
cs
nop
les
scas
in
mov
push
aad
add
add
popa
push
mov
aad
inc
mov
les
inc
lds
inc
or
sarl
or
or
in
jns
jle
xchg
xchg
mov
aaa
cmp
and
lret
fldcw
add
aas
pushf
in
insb
movsl
mov
arpl
or
cwtl
insb
stos
cmp
pop
in
push
add
sbb
mov
mov
mov
mov
mov
adc
and
mov
push
pop
fxch
push
std
rolb
pop
jb
mov
inc
jle
inc
clc
jno
push
lret
in
rcll
xor
rclb
sti
mov
mov
xor
sub
outsl
mov
mov
aad
out
pop
pand
test
sbb
pop
mul
popf
jg
dec
popa
mull
push
std
xchg
jge
scas
jge
hlt
popf
int3
movsl
pop
pop
xchg
jo
aas
lea
enter
lods
jl
repnz
xchg
lock
dec
test
pop
or
stos
jno
push
mov
push
push
dec
sub
pop
and
stos
clc
mov
fnstenv
push
jecxz
add
push
pop
les
int
inc
in
push
push
dec
jne
es
mov
popf
lcall
lret
pop
cmpsb
push
sar
mov
pop
pushf
sbb
outsl
xor
sahf
loopne
loop
and
jne
jnp
daa
mov
pop
fisubs
cmpsl
add
orb
jge
mov
aas
dec
xor
jge
mov
dec
xchg
sahf
outsl
xchg
and
jo
pusha
daa
cmp
xchg
in
gs
cmp
pop
cmp
gs
sbb
gs
or
pop
add
pop
pop
into
and
mov
mov
mov
dec
and
out
shlb
sub
pop
add
mov
add
push
test
call
sbb
mov
movsl
mov
mov
lods
inc
mull
push
insb
jl
icebp
xchg
add
into
pop
add
mov
cmpsb
jp
repz
in
rcrl
adc
negb
xchg
push
mov
cltd
cltd
pushf
inc
std
push
fucomp
xchg
addl
fdivr
mov
and
sbb
sarl
cltd
mov
jecxz
mov
cmp
sbb
or
jns
inc
jnp
outsl
scas
mov
pop
fnstsw
and
inc
xchg
jne
lods
xchg
mov
sub
jno
notl
fdivrs
pop
es
ja
sbb
xchg
mov
and
or
pop
xchg
cli
xchg
outsb
push
sbb
cmp
les
push
inc
fwait
cmp
jno
inc
cmp
insl
push
outsb
or
insb
pop
repnz
mov
les
xchg
leave
sub
pop
mov
cmp
bound
cwtl
out
pop
pop
roll
push
mov
mov
and
das
ljmp
dec
mov
inc
mov
and
aaa
aas
jnp
dec
dec
jo
lcall
adc
imul
fadd
fs
inc
mov
adc
insl
insb
out
ja
push
xor
clc
jp
adc
jnp
sarl
cmpsb
jmp
or
scas
push
dec
xor
aam
xchg
cmpsb
add
in
dec
test
or
jle
jbe
lahf
dec
or
pop
mov
sbb
pop
pop
pop
xchg
rclb
aas
ret
dec
mov
and
int3
add
adc
and
jp
push
jmp
loope
or
clc
cld
bound
and
cmp
arpl
lds
ljmp
gs
mov
jbe
mov
cmpsb
sub
jae
stos
aad
adc
in
mov
les
jle
xor
test
cmp
std
pop
jo
pop
jecxz
pushf
mov
or
adc
mov
dec
shr
jae
aas
mov
sbb
fbstp
mov
xor
and
adc
lds
rol
mov
fs
movsb
mov
dec
inc
jge
mov
lahf
test
mov
or
das
stos
aad
fstpl
inc
lret
jns
repz
jns
popf
and
mov
out
push
subb
daa
and
insb
pop
insl
sub
pop
ficompl
add
pop
popa
mov
lds
add
push
ret
push
ficomps
push
loop
andb
push
xchg
or
leave
mov
xchg
dec
cmpb
cmp
mov
pop
loop
push
lcall
pop
fbld
cmp
fcmove
gs
fistps
dec
stos
mov
xor
dec
jle
mov
cltd
std
aam
xchg
jb
int3
test
and
mov
push
fmulp
paddsb
pop
int3
shlb
rorl
xchg
xchg
push
push
dec
repnz
or
pop
dec
sbb
addr16
mov
rcll
mov
rclb
sti
cmc
loop
aas
dec
cmp
fmull
jp
fs
pop
mov
scas
sbb
or
jecxz
lods
pop
add
loope
inc
pop
mov
and
mov
cwtl
jns
and
hlt
fistpll
js
jns
dec
mov
pop
jne
xchg
xlat
loopne
pop
mov
mov
frstor
xchg
add
xor
mov
adc
roll
scas
and
dec
mov
jbe
push
scas
dec
and
and
ret
repnz
mov
add
popa
xor
test
push
mov
xor
push
pop
gs
push
inc
jbe
das
insl
rcl
out
push
xchg
sbb
inc
ja
sub
pop
xchg
gs
or
add
addl
shrl
mov
inc
jl
out
rcl
nop
inc
dec
xor
or
pushf
shll
in
test
and
and
roll
or
sbb
clc
fbld
jmp
outsb
or
inc
mov
insl
mov
rclb
ss
je
adc
mov
pop
xchg
roll
jb
adc
ds
js
mov
sbb
jg
xor
shlb
fisubrl
push
mov
or
movl
rorl
add
sub
mov
outsl
aam
cmp
jb
dec
xor
sarb
sub
cltd
mov
pushf
pop
sub
sbb
cld
and
push
push
cltd
ss
stc
outsb
and
xchg
sbb
test
ret
in
inc
and
test
mov
jg
sahf
pop
fstl
inc
mov
adc
shl
insl
and
adc
xlat
loopne
shl
sub
fildll
xchg
xor
sub
std
fisttpl
jae
rcrl
push
outsl
pushf
inc
mov
enter
mov
shrb
lods
or
cmp
mov
lock
test
js
fwait
cli
mov
dec
push
test
loopne
inc
adc
pop
rcrl
inc
lret
sbb
in
xchg
out
mov
pop
dec
fsubrl
sub
cwtl
sub
mov
pop
dec
jp
dec
mov
add
sub
mov
cmp
stc
movsl
xor
arpl
dec
xchg
pop
sbb
daa
jmp
xor
cmp
jnp
int
inc
adc
jg
adc
inc
lcall
ljmp
add
and
xor
xchg
mov
std
imul
lret
stc
sbb
sbb
stos
out
xor
inc
test
in
leave
loopne
pop
mov
sub
cmp
ss
adc
or
test
pop
push
add
outsb
push
jge
rcl
push
fisubrl
inc
pop
fadd
lds
mov
hlt
cltd
into
mov
sub
cmpsb
sbb
mov
mov
mov
ljmp
cld
cwtl
cmpsb
pop
adcl
or
xor
ret
inc
xchg
mov
xor
push
mov
ljmp
movsb
jne
mov
mov
nop
pushf
add
ljmp
rcrb
inc
dec
add
hlt
outsl
push
call
pusha
insl
pop
pop
rorb
dec
jne
xor
les
lret
addr16
insl
add
cmp
mov
and
cmc
mov
push
out
movsl
fiaddl
gs
iret
rorb
clc
and
mov
pop
movq
or
iret
pop
pop
cmp
and
or
push
sbb
in
in
and
imul
mov
mov
iret
dec
xor
push
loop
stos
imul
bound
movb
gs
sahf
and
fwait
sbb
push
pusha
out
lock
adc
sarl
loopne
pop
jnp
and
andb
jns
mov
and
imul
arpl
repz
mov
rorb
mov
aam
dec
and
add
add
repnz
test
cwtl
arpl
dec
in
shlb
cmp
or
mov
inc
adc
int
jle
inc
std
gs
xchg
or
mov
jne
fisubrs
fcoml
call
pop
mov
sbb
sub
loopne
out
or
pop
test
sub
lock
popa
cmpsb
add
jp
mov
notb
xchg
sti
jg
or
scas
and
lcall
pop
stos
je
and
testl
in
inc
loope
dec
icebp
nop
jo
mov
or
leave
sbb
push
pop
lret
test
cltd
ds
insb
call
shlb
mov
sbb
fildll
xchg
arpl
bound
jne
xchg
xchg
xchg
stos
test
push
in
pop
mov
pop
xchg
stos
mov
shrl
cmp
mov
inc
cmp
mov
nop
lea
je
movsl
add
mov
cmp
inc
sbb
ret
push
pop
aas
lahf
mov
dec
jle
fdivrp
pushf
inc
rolb
jb
xor
adc
je
push
imul
int3
rcrb
pop
test
fsub
push
pop
lock
mov
jle
movsl
mov
jnp
rcr
push
out
popa
xor
pushf
push
mov
and
mov
and
or
adc
adc
mov
rcll
lcall
das
mov
mov
stc
lea
sbb
dec
test
movsb
sbb
push
cmp
clc
mov
lcall
popa
das
pop
sbb
inc
mov
push
rclb
jmp
testl
jl
and
fs
cs
dec
fsts
push
cmp
scas
mov
dec
lods
cs
mov
xor
mov
dec
inc
jge
xchg
cmp
adc
cmp
fbstp
push
pusha
mov
repz
jl
mov
lds
jns
inc
or
ret
mov
repnz
adc
mov
cmpsl
xlat
fnstsw
jl
jle
outsl
mov
cld
mov
push
dec
xor
xchg
sub
inc
jecxz
dec
outsb
jo
pop
lods
shll
into
scas
xchg
shl
cmp
dec
call
mov
sub
lods
out
xor
in
mov
xchg
push
lods
stos
test
fmull
iret
hlt
sbb
inc
call
lea
clc
loopne
stc
jb
lcall
mov
mov
in
pop
cmp
mov
jge
dec
sub
sarl
outsb
cmp
rcll
in
jb
mov
mov
xor
jge
sarl
int
into
test
sbb
stos
jmp
out
or
cmpsb
jecxz,pn
push
pop
cwtl
fimuls
add
out
movsb
inc
out
nop
jg
mov
test
in
divb
and
xor
xchg
ja
xchg
mov
mov
xor
mov
mov
sbb
add
sbb
daa
cmp
xchg
jp
fsubrp
mov
dec
ffree
xchg
leave
xor
adc
xlat
test
div
outsl
xchg
lea
mov
mov
fistpll
jle
xchg
xor
adc
repz
shlb
lahf
mov
rcl
pop
movsb
aad
pop
mov
sub
adc
xor
and
cmp
push
repnz
mov
test
add
lods
sbb
push
push
sti
jle
in
sbb
xchg
adc
pop
addl
fld1
mov
js
mov
pop
mov
stos
xchg
jge
lea
mov
hlt
ljmp
jns
jg
jmp
lock
lret
sub
adc
les
movsb
and
fwait
xchg
cmpsb
inc
inc
adc
in
push
mov
aad
sti
test
mov
mull
addr16
cmpsb
xor
adc
cmp
push
or
or
or
cs
in
xchg
mov
lcall
das
mov
mov
mov
jl
movsb
jns
mov
rclb
ds
stc
xor
fs
lea
pop
rcrb
insl
fmuls
out
or
filds
faddl
js
mov
je
dec
imul
andb
out
mov
mov
add
mov
mov
push
call
movsl
mov
jp
popf
jbe
mov
mov
stos
in
pop
pop
lds
sub
fucomip
inc
ljmp
mov
pop
insl
adc
jo
call
xor
gs
lcall
sarb
or
jns
jno
sbb
pushf
mov
lds
dec
and
das
sub
xchg
test
loope
mov
pop
and
add
lret
inc
imul
adc
cmp
std
pusha
iret
mov
test
jnp
mov
mov
pusha
bound
add
sub
xor
jns
push
dec
fcoml
inc
jmp
fcmovne
mov
sub
loop
iret
pop
inc
mov
xor
and
xchg
ljmp
sub
lods
dec
fcomps
loop
mov
mov
inc
hlt
push
cwtl
add
mov
jb
test
les
test
cmp
fdivrl
adc
vcvtsi2sdl
adc
loop
dec
adc
xchg
add
in
jnp,pn
sub
sub
adc
and
ja
push
dec
les
aam
addl
enter
rcll
leave
and
mov
add
sub
sbb
stos
rcll
cmpsb
imul
idivl
mov
jl
arpl
in
int
dec
xchg
dec
pop
sarl
and
jno
jmp
fmull
inc
pushl
sbb
cmp
jo
clc
push
sub
scas
mov
fcmove
jge
fwait
addr16
pop
xchg
stc
adcb
xor
mov
sub
mov
icebp
jbe
fs
les
jae
jl
or
cmc
mov
lahf
arpl
fbstp
cmp
popa
stos
aaa
lea
inc
inc
rorb
jno
push
jb
adc
push
or
lds
sub
and
push
outsb
inc
je
aas
shl
inc
push
adc
cld
repnz
add
cwtl
out
in
mov
fmulp
xor
xor
pop
fbstp
out
test
lock
jecxz
xor
push
ror
std
pushf
jge
dec
fiaddl
pop
pop
mov
cwtl
int3
mov
jle
pop
subl
sbb
lret
add
push
jns
jge
sub
test
and
jecxz
test
movsb
dec
iret
mov
jmp
sbb
fwait
leave
cmp
test
and
imul
dec
jnp
mull
testl
popa
sbb
xchg
push
cmp
dec
mov
es
xchg
fcomps
movsb
shll
fimuls
adc
jmp
xchg
mov
dec
sub
xchg
mov
lahf
fstps
pop
je
lods
or
mov
adc
cmc
pcmpgtd
mov
div
dec
rorl
shll
jb
sbb
xchg
stc
jmp
jae
inc
aad
sbb
push
pusha
mov
cmp
inc
jne
pop
scas
push
mov
push
inc
push
addr16
cmp
xlat
cmp
cmp
out
ds
es
and
mov
add
mov
sub
lods
daa
mov
add
sub
loope
loopne
xchg
fcoml
inc
sub
test
adc
jg
pushf
xchg
add
nop
in
fwait
or
movsb
lret
aam
iret
inc
mov
outsb
cli
fsts
push
fiadds
pop
jae
in
pusha
xor
or
ret
push
cmpsl
mov
lret
fnstsw
outsb
imul
and
int3
in
adc
std
push
fdivs
mov
mov
cmp
testb
lret
cs
leave
mov
rclb
nop
add
pop
push
xchg
push
xchg
aaa
fsubs
add
in
outsl
jb
scas
push
adc
and
sub
hlt
inc
cmpsl
mov
xchg
int
ljmp
add
sahf
cmc
jnp
sbb
mov
shlb
sti
cmpsl
lea
sub
fdivrp
sub
mov
rolb
mov
mov
out
mov
add
ret
cwtl
mov
mov
add
jp
repz
outsb
in
movsl
adc
inc
fdivrl
jne
iret
xorb
sti
sbb
test
push
int
inc
repnz
loopne
add
cmc
in
mov
lahf
movsb
movl
repz
dec
jmp
add
ja
adc
daa
dec
or
add
dec
ja
add
addr16
lret
loope
outsl
mov
cmp
adc
shll
mov
xor
loope
lds
dec
shl
jne
mov
inc
adc
mov
or
push
daa
aad
mov
es
adc
xchg
in
movsb
enter
xchg
push
bound
xor
sbb
loop
rorb
inc
movsl
xchg
fwait
jb
lock
jo
push
mov
les
out
pop
and
nop
xchg
pop
xor
cmp
mov
mov
add
movb
xor
xchg
cmp
data16
test
pop
aas
sbb
testl
into
adc
pop
mov
cmp
adc
pop
sbb
xchg
popa
sub
mov
cltd
or
inc
mov
adc
repz
fcoms
or
xchg
fnstsw
and
mov
adc
and
movsl
adc
idiv
xchg
mov
cmp
imul
or
cmc
jae
mov
ja
cltd
add
xlat
mov
mov
faddl
mov
fs
cs
imul
into
fsubs
ljmp
adcb
das
push
mov
dec
jne
xor
iret
mov
pop
adc
mov
imul
shll
sub
inc
cmp
lock
mov
addr16
arpl
int3
mov
mov
ja
xchg
lret
outsl
shrb
mov
test
mov
push
xor
iret
jbe
xchg
mov
adc
push
pop
sbbb
pop
pop
ss
sub
fisttpll
lret
and
add
cld
lcall
jne
imul
sbb
lcall
imul
popa
and
data16
in
or
dec
and
mov
jae
inc
mov
int
mov
leave
mov
lret
adc
lret
out
ret
sbb
sub
imul
adc
fsts
sub
outsl
mov
cs
push
retw
div
cltd
or
xchg
loope
inc
dec
stc
es
cmp
jne
iret
push
repz
adc
sarb
push
fwait
sti
mov
loop
movsl
push
ljmp
sbb
inc
inc
cld
mov
ja
sar
xchg
sbb
sarb
gs
outsb
lock
incl
adc
sbb
fisubrl
cmpsl
jne
std
leave
add
loopne
rcrl
xor
fsubl
dec
cmp
daa
enter
mov
loopne
cmp
int
or
std
aam
fcoml
sub
pushf
pop
je
fistps
adc
add
inc
shlb
mov
in
cmp
pop
xor
cltd
ret
mov
mov
cmp
and
ret
cmc
cmpb
lcall
mov
cmpl
lods
or
xor
or
mov
mov
scas
pop
movsl
ficoml
push
xor
rolb
adc
out
cmpsl
pop
mov
mov
fdivrp
ret
adc
inc
fwait
sub
sub
call
outsb
sbb
and
sbb
mov
insb
push
fisubs
pop
mov
add
dec
fsubrp
jne
sub
fcoms
jge
mov
dec
mov
sub
lock
gs
lds
mov
xor
fldenv
xor
bound
lret
jle
push
and
xchg
sbb
lods
data16
call
stos
push
test
fwait
pushf
mull
add
mov
sbb
mov
ret
hlt
cltd
loopne
popf
jg
sbb
mov
fdivr
or
mov
lds
test
jae
push
add
dec
jecxz
mov
rolb
outsl
pop
mov
loopne
xor
mov
mov
mov
cmpsl
cs
mov
inc
jo
adc
xchg
mov
mov
jp
movsl
out
movsl
xor
push
pop
sarl
dec
xchg
lret
pxor
es
dec
out
cmp
xchg
test
loopne
cltd
in
jnp
add
jg
sub
xor
xlat
mov
xlat
mov
scas
scas
xchg
insb
mov
pop
inc
lds
mov
cwtl
in
jae
add
cmpsl
lods
xchg
test
and
push
ds
push
push
pop
icebp
pop
sub
scas
dec
aam
sub
xor
sahf
push
add
daa
xchg
push
mov
xchg
ja
cmp
sub
dec
insb
aam
mov
in
adc
rcrb
fwait
divl
push
or
mov
sbbb
pop
loope
push
fcmovnu
iret
or
cmp
jecxz
sahf
loope
faddl
inc
sbb
xchg
loop
dec
mov
jp
sbb
adc
jae
mov
xchg
mov
xor
ret
sub
xor
adc
aaa
out
cld
icebp
jl
and
push
test
enter
sbb
aad
mov
jl
mov
aaa
mov
scas
cs
in
pop
sub
xchg
jne
rorb
lock
or
jnp
shll
dec
js
dec
insl
cld
or
jns
sub
loopne
xchg
cld
inc
scas
mov
mov
insl
mov
aam
lea
jle
inc
movsl
ja
or
adc
iret
adcl
cmc
fsub
clc
sub
enter
std
or
insb
je
notl
rorb
sahf
jae
stc
lcall
js
iret
fdivrl
mov
inc
scas
pop
fwait
arpl
inc
fbstp
sbb
mov
je
out
or
sub
dec
data16
pop
and
add
es
repz
aam
sahf
pusha
cmp
mov
cltd
stos
xchg
aas
inc
out
lds
arpl
in
inc
push
aas
adc
fisubrs
xor
fisttps
call
shl
adc
jae
sbb
xor
push
pop
dec
es
xor
std
cmp
lock
dec
jno
or
in
or
inc
pusha
pushf
and
sub
pop
add
push
fisttpll
jle
and
mov
cmpb
dec
and
rolb
dec
daa
fistps
out
push
pop
add
xchg
and
mov
cwtl
cmc
mov
sbb
pop
jns
fsubs
push
repz
adc
xor
sbb
pop
or
and
sub
jae
push
inc
icebp
and
es
out
push
out
mov
rorl
adc
xchg
adc
aas
jae
xor
ljmp
sub
idiv
xor
sbb
pop
out
pop
add
mov
int
inc
add
or
xor
or
or
dec
xor
xor
push
and
into
lahf
xchg
arpl
mov
mov
andb
mov
push
test
jbe
mov
js
add
mov
pop
ret
lret
iret
outsb
in
cld
dec
icebp
pop
jp
lret
jo
leave
aaa
sbb
mov
dec
cltd
pusha
out
popf
mov
or
fbstp
mov
out
out
test
outsl
add
loopne
jmp
mov
sub
push
scas
pop
addr16
cwtl
pop
push
shll
outsl
sbb
sub
lahf
lods
push
push
and
jno
aas
xor
xorl
mov
or
push
mov
mov
js
sbb
adc
xor
mov
adc
or
push
mov
in
out
and
lds
imul
icebp
cld
adc
adc
hlt
gs
fs
ss
insb
dec
inc
xor
and
sub
or
outsb
pushf
add
stos
stc
jle
jmp
sti
inc
pusha
jg
es
dec
mov
out
mov
into
xchg
cmp
int
jp
leave
lds
icebp
mov
pop
mov
ds
aam
das
xlat
mov
cli
push
jge
xchg
ljmp
popf
stos
bnd
rclb
adc
mov
and
pop
xchg
pop
push
sbbb
scas
push
inc
out
outsb
lcall
xor
inc
sti
popa
mov
xor
dec
jmp
lods
fwait
cli
jae
adc
mov
dec
push
mov
jns
dec
ds
jae
or
loop
push
pop
inc
sbb
ret
cld
iret
mov
xchg
fcoml
mov
imul
sub
cmp
cmpsb
pusha
add
outsb
js
aas
xchg
inc
out
pop
cmpsb
push
shrb
sbb
repz
pusha
sbb
xchg
shl
fisubs
sub
inc
js
ja
bswap
inc
push
and
fs
xlat
jbe
push
mov
subb
dec
lods
popw
addr16
push
ficompl
mov
jl
cwtl
sub
mov
mov
inc
daa
adc
and
fildll
rcrl
cs
pop
or
ljmp
test
add
sbb
sub
icebp
imul
jnp
data16
lfs
inc
cmp
insb
fbld
mov
shrb
inc
roll
out
iret
in
sub
dec
addr16
or
pop
mov
adc
add
push
xchg
loope
out
sar
fdivs
mov
out
pop
jns
int3
rcll
xor
sbb
ja
jmp
mov
xor
sub
dec
sbb
fnsave
insl
out
or
push
xchg
incl
cs
pop
movswl
pop
in
inc
daa
inc
and
fidivs
out
clc
sbb
sub
or
lock
xchg
ljmp
push
cmp
test
inc
jp
mov
xor
bswap
lcall
dec
rclb
jb
xchg
xor
sub
add
xchg
push
xchg
mov
in
leave
aas
pusha
call
shll
dec
dec
mov
ds
adc
cli
sbb
mov
in
adc
push
mov
incb
test
repnz
adc
adc
push
notb
ja
shlb
adc
cmpsl
mov
into
sub
sbb
xchg
jns
frstor
adc
lods
scas
and
sti
int
negl
loopne
cmp
pop
out
sbb
in
scas
adc
mov
xchg
lds
adc
adc
out
mov
dec
kunpckwd
aas
stc
movsl
push
or
cs
enter
push
sbb
mov
xor
pusha
inc
push
fs
mov
sbb
icebp
sub
outsl
mov
push
sbb
pop
popa
inc
dec
mov
xor
addr16
add
push
andb
pmullw
sbb
enter
jle
stos
jb
int
arpl
loopne
cmpl
push
add
mov
call
dec
pop
bound
lock
std
dec
lret
mov
pop
pop
dec
push
out
xchg
sub
dec
inc
sub
sub
mov
xlat
inc
cmpsb
fwait
add
dec
loope
mov
or
daa
add
pop
lcall
inc
xchg
cwtl
xchg
mov
jo
xor
or
sub
ja
inc
cmp
out
jecxz
stos
fisubl
ja
and
mov
xlat
sahf
cmpsb
mov
mov
mov
out
scas
pop
jp
js
aam
mov
mov
adc
cmp
cmp
and
mov
xchg
imul
cmp
dec
pop
lods
hlt
xor
rol
ss
mov
enter
dec
hlt
js
jnp
aaa
pop
inc
jno
add
and
arpl
mov
das
cwtl
sbb
cmp
add
dec
icebp
lret
lret
popf
adc
lock
iret
aam
jae
sbb
inc
out
imul
mov
cltd
ja
das
cmp
sub
bound
cmpsl
xchg
out
lds
arpl
jns
pop
mov
add
in
and
imul
mov
jo
lret
sbb
and
adc
xor
cmp
sub
xchg
hlt
cmp
ja
ja
adc
mov
pusha
sti
jnp
cmp
in
xor
mov
xchg
mov
outsb
jnp
aas
inc
add
insl
and
mov
inc
pop
pop
jne
sahf
and
or
lcall
jne
mov
mov
pop
pop
call
and
fistps
fnstcw
sub
shlb
movb
fisttps
mov
sbbb
add
scas
ja,pt
mov
and
add
fwait
shrl
flds
push
rcrl
lret
or
add
sub
cmpsl
jmp
scas
ret
ret
xchg
pop
mov
mov
paddq
repz
jae
scas
inc
dec
mov
sub
and
aaa
aam
pop
and
push
xor
xchg
pushf
cmp
jl
and
mov
ret
dec
jno
inc
lods
aam
rcr
push
pusha
inc
cld
jge
jge
jns
cmp
jo
andl
xchg
inc
cpuid
sbb
into
pushf
push
negl
add
dec
clc
pop
jns
cmp
cmp
xchg
leave
pop
test
mov
pop
mov
sahf
xchg
inc
inc
and
cli
and
adc
sub
int3
cmp
add
xchg
sbb
mov
mov
out
in
push
inc
cli
mov
sbb
xor
mov
scas
mov
cmpsl
inc
in
popf
sub
pusha
sub
sahf
in
sub
or
imul
fld
jecxz
stos
cmp
lret
or
int
cmp
add
sub
jmp
mov
loopne
lds
in
cmp
dec
aam
shl
outsl
xchg
xchg
fdivs
cmp
pushf
xchg
pop
pop
pop
xchg
into
fwait
lcall
lcall
add
xor
jl
test
and
gs
sbb
fs
lcall
mov
xor
shlb
mov
imul
loop
icebp
xor
cmp
inc
imul
mov
adc
dec
in
out
and
vpsrld
mov
push
fs
ljmp
pop
xor
jl
shlb
adc
ret
cmp
outsb
ljmp
popf
fcmovnbe
jmp
sub
icebp
outsb
mov
sbb
ja
je
js
das
std
aad
insb
add
inc
aam
popa
decl
dec
push
xchg
imul
lods
mov
sbb
cmpsl
gs
mov
mov
dec
imul
int3
sti
xor
sub
es
sub
fistps
arpl
xchg
addr16
pop
lahf
xchg
dec
inc
mov
jns
fildl
call
push
inc
inc
lds
pop
stos
cmc
and
cmp
shlb
push
mov
sbb
int
sub
xchg
mov
jbe
sub
dec
divl
sbb
aad
inc
mov
cs
stos
orl
push
push
xchg
jl
sbb
sub
les
stos
jecxz
or
jecxz
and
xchg
xor
cmp
loop
pop
lret
mov
movsb
jno
out
and
jle
sub
aad
add
ds
ljmp
out
xlat
or
repnz
cmp
cld
sub
xchg
xchg
roll
cmp
ret
mov
sbb
sahf
sub
mov
sbb
aad
int3
ret
xlat
std
xchg
ret
enter
mov
or
pop
stc
pop
js
jb
push
into
add
mov
sub
lret
lcall
inc
loope
mov
icebp
outsl
push
loop
and
xchg
add
and
stc
dec
mov
ret
or
in
mov
lods
jge
mov
mov
ja
xchg
mov
pop
xlat
push
sub
mov
int3
xlat
loope
inc
pop
xchg
add
mov
cltd
repz
xchg
fidivl
jo
cltd
mov
ret
out
int3
daa
mov
dec
pop
stc
push
leave
inc
jecxz
cmc
or
sub
nop
mov
xchg
adc
imul
sub
loope
pop
fisttpl
sub
add
gs
enter
loop
jb
leave
pop
into
xor
mov
sub
ret
enter
jl
push
cli
icebp
and
divl
mov
loopne
aaa
pop
dec
xchg
lea
pop
sub
lods
mov
aam
aaa
fwait
mov
stos
arpl
cmpsl
hlt
dec
adc
push
stc
ljmp
pushf
fimull
mov
mov
jnp
lcall
into
mov
test
cmpsb
pop
mov
jne
sbb
cmp
imul
sahf
test
popa
push
mov
mov
notl
jae
fists
pop
sti
jb
icebp
cli
mov
movsb
mov
mov
je
pop
imul
cmpsl
leave
xor
xor
lret
lods
mov
lock
outsb
leave
fbstp
loop
push
or
mov
jmp
pop
cmpsb
mov
jno
loopne
test
sub
fsubl
std
test
ficomps
inc
inc
add
push
ss
xor
pop
movsl
jmp
add
pop
movsb
xor
push
sbb
adcb
lret
loop
xor
cmp
mov
xchg
dec
jp
sar
iret
push
mov
fidivrs
ret
pushf
pop
inc
cmp
fistpl
mov
scas
test
xchg
cltd
sbb
pusha
enter
into
pop
pop
xchg
push
ret
out
mov
lret
push
subl
movsl
pop
push
mov
mov
loopne
test
mov
add
bsr
out
int
popa
pusha
adc
je
andl
pop
cmp
lods
pop
dec
adc
mov
jge
pop
dec
in
adc
out
jge
daa
sbb
ret
test
jge
xchg
mov
stos
sub
sub
xchg
mov
inc
icebp
push
bound
sbbb
insb
scas
mov
pop
push
pop
lahf
pop
jecxz
repnz
lret
add
dec
adc
fcoms
cli
mulb
iret
scas
popf
repz
nop
pop
pop
push
xchg
sahf
push
and
push
pop
or
aad
jp
mov
push
jns
popa
cmp
outsl
outsb
jno
loopne
jp
jbe
repz
sub
push
inc
cmc
out
and
mov
inc
fsubl
sbb
and
inc
sbb
leave
out
push
mov
faddp
jo
and
jge
add
sbb
push
xor
int
pop
int
mov
test
aas
shlb
add
pusha
cmpb
lahf
mov
mov
xchg
hlt
inc
mov
orb
push
out
mov
dec
rorl
mov
push
cmp
js
mov
in
xor
repz
cwtl
repnz
sub
jmp
and
jp
mov
mov
ret
cs
sahf
inc
ret
icebp
push
or
ficoml
fst
dec
pop
test
les
hlt
nop
movsb
jns
push
ret
push
adc
inc
jae
xlat
aaa
shr
addl
cmpsl
pop
sub
push
les
mov
cld
and
pusha
clc
pop
imul
and
cmp
repz
dec
inc
movsb
sbb
aam
pop
or
sub
dec
sahf
test
ret
jb
mov
inc
jno
jl
or
sbb
adc
jae
dec
dec
add
inc
cmp
in
movsl
cmp
sub
loopne
pop
out
jg
lret
mov
xor
and
testb
ret
push
dec
call
add
xor
push
stc
daa
mov
cmp
jg
inc
cmpsl
mov
mov
mov
sbb
leave
pusha
shlb
mov
es
cwtl
jg
dec
pop
loopne
inc
jmp
jnp
cmp
xchg
push
push
fbstp
popf
pop
into
or
and
add
repnz
fistpll
jb
jns
icebp
lock
xor
shrl
sti
in
lds
clc
cld
roll
in
repnz
ljmp
scas
loopne
lds
lret
shlb
jmp
xchg
mov
inc
adc
enter
aas
pop
aam
aad
fbld
add
enter
not
sbb
mov
bound
dec
mov
dec
xlat
insb
mov
mov
fbld
pop
arpl
jne
out
xor
clc
clc
fildl
outsb
leave
mov
test
repnz
outsb
push
cmc
mov
push
push
xlat
loopnew
ds
stos
sbb
fmull
mov
fwait
xchg
dec
inc
xlat
cmpsb
pusha
aas
push
mov
ss
push
jmp
mov
in
xor
mov
push
and
mov
and
xlat
pop
adcb
popa
cmp
out
mov
test
mov
in
fcomps
xor
pop
or
je
les
sbb
sbb
jnp
lret
lret
andl
mov
int
mov
sahf
cmpl
pushf
xchg
out
scas
pop
or
in
dec
xor
adc
lds
mov
gs
or
mov
iret
xlat
stos
dec
inc
nop
inc
in
les
outsl
fnstenv
mov
jle
inc
or
test
enter
pop
out
out
pop
dec
inc
lds
adc
pushf
scas
lods
push
and
or
cmp
mov
out
xchg
lcall
sub
mov
xlat
out
sub
aaa
and
in
fdivrp
sub
mov
and
inc
jne
pop
push
pop
int3
das
jle
jo
sbb
and
mov
cld
ret
lods
jge
leave
orl
jbe
adc
jg
pop
jb
mov
add
inc
sub
jp
insb
xor
insb
loopne
pop
mov
sar
repz
xlat
iret
repnz
enter
aas
inc
arpl
add
jmp
xchg
mov
cmp
push
jbe
mov
cmc
push
xchg
stc
loop
clc
sub
addb
xchg
or
adc
cmp
ljmp
leave
jbe
jmp
xor
stos
and
xchg
pop
and
lods
xchg
adc
fimuls
aaa
lods
mov
in
into
and
test
sbb
std
cmpsl
pop
pop
lods
aam
sti
xor
xchg
fdivrs
imul
push
into
push
pop
fwait
and
push
cmp
cli
mov
sub
xor
jp
sbb
pop
xchg
lods
pop
sub
insb
lea
xchg
mov
clc
in
or
enter
xchg
frstor
int3
jecxz
call
jmp
ret
mov
out
insl
das
fidivs
call
repz
icebp
lret
lret
lret
rorb
aas
in
out
sub
std
inc
sbb
or
or
pop
or
nop
inc
cmp
push
arpl
and
sbb
das
jne
faddl
ror
xchg
or
pop
dec
imul
xchg
push
arpl
js
xor
add
dec
fwait
sub
gs
inc
push
inc
cld
sub
mov
inc
adc
mov
fisubrs
xchg
xchg
sbb
ljmp
inc
insb
xchg
test
mov
mov
test
mov
mov
add
and
jnp
test
test
xchg
aad
and
xor
sub
out
jge
mov
nop
dec
sub
sahf
sub
xlat
inc
sbbb
sahf
xchg
dec
popa
fadds
mov
push
adc
bound
sahf
adc
inc
aas
cmp
push
gs
int
mov
int
and
fildll
pop
adc
ret
xchg
flds
faddl
sbb
push
ret
mov
int
repnz
mov
out
inc
mov
or
aad
push
push
ljmp
mov
lods
ror
cmpsl
sbb
xorl
test
xor
mov
sbb
xor
pop
push
popa
pop
adc
insb
js
pop
xchg
dec
cmp
popf
sub
icebp
je
pop
sub
scas
push
mov
jnp
fs
in
inc
mov
jl
fcoml
lods
jp
mov
mov
test
addr16
xor
ljmp
xor
cmp
sahf
push
ss
andb
mov
dec
mov
pop
mov
shlb
push
lock
loope
cmp
fwait
xchg
popa
jae
loope
repz
sahf
sbb
decl
sbb
inc
mov
fisttpl
fxch
movsb
in
bound
pusha
sarb
leave
arpl
jecxz
push
repnz
push
movsb
sub
jmp
fbld
test
and
or
repz
push
ret
iret
push
in
pop
add
jne
test
dec
mov
leave
sbb
fs
fdivrp
lcall
and
cmc
sti
jbe
jl
test
repnz
pop
in
imul
addl
add
lret
adc
cmp
cli
sbb
dec
push
cmpsl
sub
cmp
fisttpl
nop
jp
in
fsubrl
cmp
popa
pop
and
and
data16
rcrb
mov
icebp
in
mov
and
dec
aas
hlt
sub
pusha
push
outsb
rcll
xchg
ret
int
sub
jnp
or
cmp
dec
gs
or
sub
cmpsb
xor
jmp
adc
xchg
mov
mov
test
in
aaa
ds
inc
movsl
aas
leave
dec
sub
subl
outsl
lods
pop
outsl
stos
or
stc
ss
add
or
lahf
xlat
addb
jp
xor
xchg
xchg
inc
jbe
mov
div
mov
xor
fnstcw
pop
lods
cld
and
xor
push
or
repnz
aad
xor
xchg
push
sbb
lret
lods
bound
in
adc
xchg
mov
xor
cmp
pop
int
sbb
xchg
popa
inc
xchg
cmp
stc
bound
push
fmuls
cmpsl
jns
adc
mov
out
push
or
sbb
rorb
mov
jns
fwait
cmc
call
push
cmpsb
nop
adc
and
out
jo
inc
fwait
mov
jo
sbb
xchg
mov
sbbb
dec
shl
jb
dec
cmpsl
mov
add
pop
add
mov
gs
loope
jnp
iret
add
push
push
sub
aad
fmul
or
xor
mov
xchg
add
int3
xor
sbb
add
inc
cmp
ret
mov
sbb
sub
sub
xchg
pop
xor
addl
into
in
sahf
movsl
movsb
cltd
xor
mov
mov
push
adc
xchg
icebp
mov
movsb
or
jne
pop
leave
jae
iret
xlat
hlt
and
std
push
fisubrs
fsubrl
dec
push
mov
ja
dec
aad
dec
mov
ljmp
jecxz
frstor
shll
popa
push
and
clc
std
popa
sub
cwtl
inc
out
xchg
jle
mov
shll
adc
cmpsl
push
jp
mov
gs
popa
fildl
inc
cli
fnsave
xlat
out
xchg
and
repz
push
movsb
fs
test
xor
jecxz
mov
ror
movl
and
cwtl
cmp
push
mov
or
out
outsb
shlb
cmpsl
dec
daa
sbb
adc
sbb
inc
ja
sub
mov
push
xchg
mov
adc
xchg
xchg
imul
pushf
sti
add
or
jns
pusha
xchg
ja
std
sub
outsl
and
inc
inc
scas
incb
dec
or
push
out
cmp
lock
insl
shr
mov
jae
sub
xor
test
push
cli
mov
fcoms
rorb
dec
jle
ror
mov
or
imul
jbe
out
hlt
adc
mull
mov
push
ds
das
out
xchg
lods
and
cltd
data16
mov
push
sbb
cli
adc
lea
fsubr
pop
popa
popa
negl
js
dec
xor
ret
jb
das
xchg
in
lods
in
mov
fstps
xchg
pop
jecxz
and
push
mov
jl
lods
test
mov
adc
jne
push
lret
sub
xchg
cmp
dec
sti
jl
mov
lcall
sbb
push
pop
mov
dec
xor
mov
push
push
test
xchg
push
das
lcall
jne
xchg
popa
repz
xchg
pop
sbb
dec
add
negl
gs
cltd
sbb
jg
mov
xor
mov
nop
shl
mov
mov
mov
adcb
mov
mov
xchg
adc
gs
mov
or
in
shl
dec
mov
jecxz
andl
shll
lcall
js,pn
mov
inc
dec
or
mov
in
je
aas
stos
inc
cmc
bound
ss
xlat
lahf
iret
mov
mov
lcall
fstps
and
pop
int3
incl
xchg
add
pop
mov
inc
movswl
sub
add
or
mov
xchg
cltd
push
cmc
jns
cmc
dec
nop
scas
ljmp
or
cmp
jb
pop
out
lods
out
adc
mov
fisttpll
push
cli
push
pop
imul
jb
imul
stos
mov
out
pop
mov
lock
in
ds
outsl
pop
adc
nop
into
fs
je
aad
pop
sub
pop
mov
leave
pop
cmc
lret
scas
arpl
cwtl
pusha
and
pushf
push
mov
cmp
test
add
hlt
or
mov
bound
popf
lock
cmovl
jb
fucomp
outsl
outsl
mov
out
add
and
popa
sbb
push
push
ss
pushf
push
inc
repz
pop
sub
ljmp
aas
aaa
mov
mov
pop
aaa
cmp
xor
jbe
mov
xor
fwait
pop
test
out
fs
fidivrs
mov
mov
fstl
cmpsl
testb
mov
into
sub
sarb
mov
out
inc
aam
mov
out
mov
dec
xlat
and
mov
inc
mov
pop
jmp
cwtl
add
jmp
mov
loopne
xor
cmpsl
mov
hlt
pop
int
xor
inc
xchg
ret
ss
insb
push
cmpsl
stos
ret
stc
ds
mov
inc
ret
scas
mov
test
int3
cmp
lods
or
adc
mov
jmp
sub
insl
mov
jecxz
or
add
nop
js
fisttpll
inc
sub
mov
pop
and
in
mov
dec
jge
cmp
es
push
inc
loope
orb
out
outsl
sbb
mov
add
push
mov
cmpsb
sbb
push
lret
mov
enter
sub
aad
pop
jnp
scas
sbb
rol
into
bound
and
jmp
mov
testl
sbb
cmp
out
in
fbstp
adc
sub
and
insb
jmp
adc
orl
xchg
inc
js
call
aad
push
xlat
jne
jbe
repnz
pop
ret
mov
repz
sub
cmp
lea
cmp
or
push
sbb
lods
xor
push
in
and
inc
mov
aaa
cmp
mov
pop
inc
pushf
pop
pop
pop
das
jnp
cld
cwtl
jmp
aam
repnz
mov
add
mov
lock
lret
cmp
sahf
insb
mov
inc
dec
push
jno
push
sub
movsb
icebp
fsubl
inc
arpl
jb
or
addl
enter
sub
xor
fldl
jge
sbb
push
lcall
xchg
jno
call
fadds
xlat
push
arpl
loopne
das
sub
jns
fsubs
xchg
add
mov
lods
fisubrl
xchg
dec
and
inc
das
popa
test
sub
or
pushf
pop
andl
jle
test
movsl
xchg
push
fimuls
out
imul
xchg
pop
aaa
into
out
sub
repnz
call
sbb
aaa
jbe
iret
hlt
jge
mov
dec
jns
outsl
add
shrl
or
xor
mov
mov
addb
in
mov
pushf
bound
lret
lods
and
dec
cltd
mov
mov
loop
pushf
sbb
cmp
mov
add
adc
sub
pusha
ss
add
xor
inc
sbb
pusha
mov
adc
mov
inc
push
xchg
jp
or
or
pop
jb
xlat
sbb
out
dec
ja
jmp
aam
aad
adc
sub
jmp
pusha
sti
push
cwtl
movnti
sub
test
pusha
pop
push
pop
mov
enter
xorl
lahf
std
add
imul
push
fistl
push
rcll
xchg
inc
cmp
lahf
mov
je
adc
jns
ficomps
imul
push
inc
jnp
cmpsb
cmpsl
jle
jno
xor
sahf
test
cs
xchg
and
mov
ret
repnz
fwait
outsl
push
insb
and
jbe
mov
test
push
dec
mov
push
cmp
fwait
in
nop
inc
pop
ret
leave
cld
push
nop
xor
xchg
inc
sbb
inc
push
cmp
xor
inc
push
outsb
mov
gs
stos
mov
lret
addl
movsb
mov
or
pop
icebp
enter
scas
push
mov
pop
cwtl
and
xorl
or
dec
xchg
cltd
jp
dec
lahf
lock
sahf
outsb
ds
push
test
mov
out
sbb
in
movsb
es
int3
bound
cmp
adc
popw
and
test
inc
mov
adc
cmp
adc
loop
stos
test
mov
daa
cmpsl
inc
ret
fwait
and
push
jns
sahf
aad
inc
sbb
scas
push
jno
outsl
ja
in
mov
loope
lret
popa
fistl
repnz
push
stc
and
jbe
or
xchg
idivb
cmc
pushl
xchg
fsubs
jecxz
cld
repnz
xchg
ljmp
imul
push
dec
sub
pop
and
fldenv
outsl
repnz
push
adc
inc
dec
pop
test
jmp
cs
mov
daa
fucompp
push
dec
push
inc
mov
je
loopne
adc
mov
js
loopne
sub
hlt
dec
xor
and
xor
jg
dec
mov
cltd
sbbl
dec
dec
or
int
xchg
repnz
leave
mov
loopne
mov
add
iret
or
arpl
scas
fcompl
ret
int3
lret
push
aad
add
jo
jle
adc
xchg
ss
dec
push
mov
aaa
push
divb
or
inc
sti
pushl
adc
sbb
nop
push
xchg
daa
jb
adc
jl
daa
push
loopne
outsb
outsl
addl
gs
shl
mov
jnp
push
repnz
xchg
mov
add
mov
jae
mov
lret
iret
or
pop
jae
mov
lea
cmp
or
pop
cmp
int
rcll
jle
sub
push
in
push
xchg
mov
daa
add
lock
insb
sbb
mov
cmpb
stos
sub
xchg
adc
mov
jne
inc
pop
nop
lock
rorb
cmp
sbb
push
jo
adcl
xor
push
jbe
out
loope
jbe
cmp
aam
pop
psrlq
mov
sbb
push
xchg
fisttpll
jmp
loope
cmpsl
mov
mov
xchg
repnz
fidivrs
fnsave
mov
sub
adc
xchg
lahf
jp
test
cmc
jle
push
jge
mov
inc
mov
mov
jns
jecxz
ret
dec
cmp
int3
stos
hlt
xor
dec
sbb
add
pop
sub
dec
dec
sub
and
xchg
cmp
jg
bound
sub
jns
xchg
fnstsw
ja
enter
pop
pop
aad
pop
loop
in
cmp
pop
pop
lret
add
lock
push
jnp
jl
mov
dec
fstp
push
cwtl
fmulp
addr16
outsb
sbb
xchg
int
and
addl
movsl
imul
inc
pop
inc
das
int
mov
lcall
rcrl
imul
or
mov
pop
es
and
push
add
cltd
and
sub
jg
nop
stc
adc
and
jb
xchg
adc
xchg
inc
pop
push
and
bound
push
test
test
mov
insb
mov
test
mov
cwtl
or
aas
outsb
push
push
stc
call
sbb
lods
mov
popa
or
std
outsb
mov
stos
jmp
sti
and
fidivrs
xor
insb
push
fdivr
and
dec
ffree
std
jo
scas
flds
mov
sub
aam
jp
inc
jne
mov
stos
ret
int
fimull
push
aam
push
cmp
shlb
or
fdivl
rdpmc
xor
push
and
das
std
inc
jns
dec
cmp
into
adc
push
mov
dec
add
xchg
sub
cltd
outsb
xchg
stos
imul
loopne
out
sbb
bswap
mov
mov
sub
nop
push
sub
shlb
push
xor
enter
push
adc
mov
sti
push
mov
pushf
lds
das
push
adc
inc
xor
movsb
jg
ror
loop
mov
lea
ja
push
pop
insb
add
aam
inc
jb
mov
sub
fsubrp
sub
ficoms
pop
xchg
lock
bound
stos
dec
popf
xor
mov
mov
outsl
or
in
loopne
andb
add
movlps
je
loopne
jae
lahf
leave
stos
mov
sub
mov
pop
rol
xchg
sbb
lods
int
push
bound
adcl
int3
lret
jno
sbb
xor
pop
jl
mov
out
adcb
jg
sbb
or
push
sub
test
or
xchg
xchg
pop
jbe
idivb
fmull
in
adc
dec
out
push
sbb
cmp
fcompl
fidivrl
push
add
inc
jno
lret
pusha
mov
enter
sbb
push
and
ret
inc
push
jae
testl
add
fldcw
push
imul
lcall
clc
test
pop
pusha
movl
std
je
xlat
and
mov
or
dec
mov
pop
rcrb
fimull
dec
adc
xchg
xchg
dec
scas
rorl
xchg
jbe
push
mov
push
cld
faddl
rclb
scas
movsl
add
imul
pop
mov
rcll
inc
sub
mov
hlt
jge
je
test
notb
daa
push
cltd
loope
inc
sub
subb
test
movsb
in
jns
dec
mov
xchg
inc
rclb
adc
mov
xor
lret
ss
cmpsl
inc
pop
dec
sahf
cmp
mov
icebp
in
push
sub
fdivs
pusha
test
adc
push
je
inc
lcall
xor
testb
mov
repz
repnz
clc
mov
testb
ret
arpl
mov
mov
mov
ret
js
xor
sub
pushf
or
shrb
jns
and
mov
xor
nop
mov
sub
sbb
cmpsl
sbbb
dec
cmp
xchg
out
cmpsl
pop
push
inc
sub
cs
inc
mov
in
cmpsb
jo
dec
pop
ja
lcall
lret
pop
xor
enter
cmp
and
cmc
jg
or
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
add
orl
cmpsb
out
add
insb
dec
inc
pop
sarl
int3
movsl
and
shrl
mov
popf
sub
inc
jg
gs
shll
aad
aaa
dec
cmp
aaa
inc
pushf
inc
xchg
loop
divb
mov
add
sub
test
mov
push
mov
sub
cwtl
and
push
sub
or
popa
xor
push
mov
ret
add
cmc
inc
loopne
inc
jecxz
mov
or
pushf
js
rcrb
cs
or
mov
int3
out
shl
push
data16
pop
je
and
test
fwait
jle
int3
mov
dec
movsb
cld
nop
inc
mov
sbbl
add
sub
xchg
or
xchg
xor
cltd
add
jge
stos
outsb
mov
pop
jmp
push
push
pop
stos
mov
mov
ficoms
bound
inc
mov
pop
lds
xor
das
in
mov
mov
iret
lret
push
movsb
xor
hlt
inc
stos
mov
sub
mov
scas
pop
sbb
xlat
sarb
jno
inc
inc
or
imul
mov
loope
popf
jb
dec
in
push
jle
out
sub
pop
fisttps
test
lods
fmul
inc
inc
cmp
outsb
sub
jnp
daa
sti
mov
xor
cli
out
mov
shrl
sahf
sbb
mull
cmp
lods
sbb
sub
mov
xchg
shl
popa
xchg
xchg
mov
les
mov
adc
sub
mov
jle
xchg
inc
cmp
dec
mul
add
cmp
pop
cmc
pop
mov
jle
scas
bound
push
in
lahf
mov
xchg
outsb
sub
dec
mov
outsb
rcll
out
jnp
add
repz
out
ja
into
adc
rol
enter
jl
xor
leave
ret
pop
cmpb
iret
roll
xchg
clc
orb
addr16
aam
fsts
js
or
daa
jge
push
stc
shlb
mov
sub
mov
sub
fwait
scas
or
sbb
mov
cmp
movsl
sub
mov
fimull
rep
push
fsubs
mov
pop
jne
addr16
jo
mov
test
push
pop
mov
mov
add
adc
inc
cmp
aas
add
neg
into
mov
addr16
push
xchg
mov
adc
addl
adc
movsb
fs
je
jae
mov
in
sbbb
fnstenv
add
lock
xchg
add
xorb
fmulp
std
mov
mov
aad
inc
and
dec
mov
stos
cmp
or
sbb
movsb
xlat
aam
sbb
sub
jno
lret
scas
xchg
jae
sbbb
add
ds
das
neg
adc
pop
das
aaa
shr
loope
popf
cmp
jb
xor
fucomp
lock
mov
mov
out
outsb
sbb
iret
sbb
imul
jl
in
mov
and
orb
rcrb
insb
cmp
rcl
pop
movsl
stos
mov
stos
add
adc
enter
das
pop
aam
push
add
ret
mov
movb
ret
shrb
or
lea
xchg
dec
test
jmp
inc
clc
push
daa
mov
jmp
test
stc
jne
mov
das
scas
mov
xor
adc
pushf
xlat
jno
pop
mov
pop
and
aad
popf
mov
sub
cmp
mov
popf
adc
mov
mov
into
mov
dec
cmp
sbb
jne
mov
in
ja
gs
rorl
rcr
mov
xor
cmpl
sub
cli
arpl
sub
iret
fistpl
in
pop
lock
pop
jns
jl
hlt
adc
xor
rorb
jp
bound
mov
inc
dec
xchg
addr16
sahf
jl
jl
or
cmp
ret
mov
mov
pop
addb
ret
cmp
jnp
or
xor
jmp
sub
inc
int3
or
xchg
stos
out
testl
sub
fwait
mov
inc
int
lahf
stos
mov
jg
push
iret
adc
popa
jo
cmp
notb
lret
call
hlt
cmp
movsl
sub
fsubr
push
repnz
dec
bndldx
mov
lret
movsb
mov
xorb
push
mov
enter
pop
stos
fwait
adc
push
dec
pop
jmp
lahf
adc
cmc
clc
scas
fs
jl
in
popf
or
clc
mov
xlat
sub
xor
and
jo
xor
adc
in
sti
or
mov
sbb
aam
sbb
add
daa
test
dec
mov
inc
add
movsb
incb
dec
sbb
lods
dec
call
pop
or
int
or
stos
js
addr16
movsl
sbb
mov
and
mov
sahf
cltd
cmc
jp
leave
es
or
cli
sub
in
push
mov
dec
cmp
xchg
out
stos
aad
xchg
xchg
fsts
adc
xor
adc
test
mov
fstp
mov
or
outsb
les
and
inc
cmp
adc
ljmp
and
fldenv
cltd
xchg
mov
outsl
cmp
orb
icebp
push
in
daa
sub
push
aas
mov
lods
xor
inc
insb
mov
loopne
xor
fs
push
orb
pop
lahf
xchg
adc
xchg
jl
lcall
mov
pusha
adcl
add
xchg
xchg
aad
emms
sbb
out
and
and
sbb
addb
shlb
adc
dec
push
insl
out
stc
adc
and
push
or
pop
add
jbe
push
popf
mov
xchg
jns
mov
xor
fldl
jae
sub
mov
mov
sti
mov
add
or
mov
outsb
mov
data16
pusha
pusha
lret
aaa
or
ret
push
jge
cltd
jb
dec
popa
pop
and
inc
aad
jecxz
cltd
pop
jns
mov
rcl
add
aaa
pop
push
lret
pop
inc
dec
xorl
insb
je
aad
lock
pusha
jecxz
ja
ljmp
mov
jne
add
push
push
or
mov
orl
daa
mov
and
adc
mov
lods
lock
mov
insl
mov
xorb
pop
inc
sahf
ja
mov
mov
movsb
insl
adc
aas
scas
or
jp
or
jp
scas
push
ret
and
sub
sub
out
push
sbb
cmp
adc
sahf
repnz
in
or
adc
shll
add
lcall
mov
xchg
add
iret
cmp
call
dec
icebp
dec
push
fbstp
and
repz
insl
dec
nop
mov
mov
mov
sbb
mov
push
adc
cs
std
and
icebp
sub
imul
imul
dec
fists
popa
and
aaa
mov
cmc
or
lea
stos
jne
out
loopne
gs
mov
mov
adc
push
xor
je
pop
pop
pop
mov
stc
xchg
sbb
test
xchg
mov
out
xchg
enter
cs
inc
xchg
push
jmp
fwait
jnp
pop
mov
add
sti
movsb
push
clc
popf
and
test
insb
mov
jecxz
mov
cmp
pop
je
mov
cmp
rorb
cld
out
inc
aam
and
lahf
lret
ret
out
add
mov
std
dec
pop
sbb
mov
mov
sbb
jg
inc
mov
cs
pop
lock
xchg
shll
das
cmp
sbb
insl
insb
adc
ss
dec
aad
adc
jle
aam
pop
in
pop
inc
sarl
jmp
lods
imul
cli
loop
jnp
adc
cmpsl
pop
xlat
and
jne
adc
jo
adcb
cltd
mov
adc
ja
xchg
push
jnp
lcall
les
js
jne
clc
lods
fwait
dec
ret
push
mov
dec
adc
dec
mov
ljmp
adc
pusha
pushf
loope
dec
dec
aaa
aaa
pop
pmulhw
sub
loope
in
mov
add
lret
jl
sub
xchg
add
icebp
int3
adc
mov
popf
ja
shl
or
sarb
mov
adc
mov
icebp
mov
or
dec
jecxz
pcmpeqd
ret
enter
adc
push
sbb
sbb
fsubrs
cmc
sbb
push
fxch
aaa
fadd
push
mov
mov
lods
enter
lods
fnstsw
ljmp
testb
push
mov
dec
cmc
jl
arpl
mov
lea
push
jae
jecxz
push
and
fsubrp
mov
mov
lret
push
push
clc
test
test
lods
je
dec
xchg
pop
icebp
mov
push
dec
or
push
pop
and
adc
imul
loopne
adc
sub
push
pop
push
ss
jecxz
data16
push
add
adc
add
sub
xchg
es
xchg
sbbb
jnp
cmp
in
adc
daa
call
or
adc
push
pop
xchg
aaa
xor
or
lods
mov
inc
push
pop
mov
scas
les
xor
jp
gs
clc
fstpt
ficoml
dec
inc
jl
sub
and
push
mov
les
push
bound
cmp
pop
jl
and
sbb
and
inc
cltd
sub
push
mov
call
jbe
jle
adc
insb
dec
rcrl
cmp
inc
stos
lds
rcr
idiv
arpl
jnp
es
fucom
cmc
mov
arpl
es
inc
fbstp
test
fmuls
dec
adc
mov
xchg
dec
sbb
inc
mov
enter
imul
mov
pop
daa
imul
lcall
test
mov
rorl
icebp
repz
insl
cmp
ret
cmp
and
adc
or
lret
jb
test
dec
outsb
outsb
mov
nop
adc
xchg
lea
aad
adc
adc
scas
andl
mov
and
test
data16
outsl
add
dec
mov
test
sbb
fildll
in
in
or
roll
icebp
imul
pop
adc
cmpsb
and
mov
hlt
mov
arpl
mov
int3
fists
sbb
stos
lock
xor
jno
adc
cmp
bound
ss
enter
loopne
insl
movsl
or
adc
add
fucom
xchg
push
jl
xor
icebp
push
jns
or
ret
pop
mov
add
out
clc
mov
test
test
jle
aad
cld
js
push
xchg
mov
daa
pop
inc
aam
sub
nop
pop
mov
stos
stos
ljmp
adc
push
icebp
ja
iret
mov
arpl
cld
stos
cmp
fsubl
test
inc
arpl
and
cwtl
jb
mov
pop
mov
mov
jmp
fstl
jne
lea
and
movsb
aad
jmp
insl
lret
popa
push
sbb
insb
mov
rcr
pop
divl
xchg
add
std
fwait
mov
sub
jg
xchg
dec
jl
adcl
or
mov
mov
out
repnz
xchg
xchg
mov
cmc
sub
inc
cmc
inc
mov
sub
push
adc
test
or
pop
popf
push
lret
pushf
pop
and
cli
inc
mov
daa
inc
dec
lret
or
dec
shl
or
pushf
leave
inc
pandn
test
icebp
scas
adc
xlat
test
dec
adc
sub
mov
xchg
maskmovq
testl
push
pop
je
ficompl
pop
sbb
push
mov
pop
into
mov
pusha
mov
mov
mov
daa
je
dec
sub
subb
sbb
inc
push
loop
jge
pop
bnd
andl
imul
and
pop
out
iret
xchg
dec
sbb
clc
movsl
mov
repz
enter
sahf
lcall
inc
jo
xor
insl
xchg
dec
aam
mov
jb
mov
clc
adc
and
aad
mov
adc
fwait
dec
jecxz
and
lcall
jp
push
xchg
mov
mov
mov
cmpsl
mov
mov
ds
out
xchg
gs
fisttpll
insl
cmp
inc
fmuls
cmp
cmp
cmp
and
movsb
and
sbb
mov
jo
push
icebp
add
repnz
aad
lcall
cld
fsubrl
leave
jnp
aad
mov
pushf
insl
mov
sahf
adc
and
push
mov
xor
xlat
iret
ret
jmp
and
adc
cmpb
mov
scas
sub
inc
test
and
out
hlt
jns
lock
cld
cmpl
pop
dec
pop
sbb
jle
mov
pop
fldcw
xor
decb
aad
dec
push
adc
jae
fcoms
cs
sbb
test
ja,pt
sahf
mov
or
stos
xchg
jnp
pop
jmp
add
insl
cmp
jne
fisubs
dec
inc
adc
mov
push
loop
cmp
inc
xor
bound
jnp
sub
mov
xchg
jp
leave
adc
inc
testl
subb
mov
lds
pop
addr16
ja
loopne
xchg
in
shrl
add
mov
pop
dec
dec
std
dec
dec
mov
jno
imul
std
bound
fsub
das
xchg
sbb
test
lods
mov
or
lahf
imul
cmp
test
aas
inc
incl
mov
adc
push
ljmp
xchg
addr16
movb
rcll
mov
mov
aam
xor
arpl
mov
mov
pushf
pop
sbb
iret
and
cmc
pop
imul
mov
push
stos
xchg
pop
jbe,pt
jp
loop
mov
inc
int
orb
lret
addb
mov
push
mov
aam
pop
or
ret
dec
fwait
pop
cltd
cmp
pop
fsubl
xor
inc
inc
es
stos
mov
and
ss
pop
cltd
fistl
js
push
xchg
outsb
pop
jle
push
sbb
mov
mov
fs
or
cli
les
jmp
test
pop
mov
pop
sub
fisttpll
xor
lret
mov
adc
pusha
ret
sti
repnz
movsb
outsl
out
popa
stos
xchg
dec
in
or
dec
and
cwtl
test
adc
ljmp
pop
mov
clc
aaa
mov
out
rorl
sbb
push
dec
loop
cs
stos
xor
xchg
xor
subb
xchg
mov
subl
test
dec
pop
inc
mov
or
cli
das
or
xchg
mov
sbb
xor
dec
stc
stc
popf
in
iret
sub
ljmp
shl
sbb
repz
fsubrs
pop
gs
push
xor
popa
jle
test
push
mov
xlat
and
dec
lods
sbb
pushf
push
inc
mov
fildl
cmp
push
sub
push
sub
and
add
push
nop
mov
test
pop
adcl
insb
inc
into
repz
les
and
ljmp
push
test
and
lock
out
xor
jp
mov
lret
xor
xchg
cmp
pop
test
push
sub
pop
xchg
or
cld
int
sub
nop
aas
pop
jo
out
sbb
shll
mov
fs
jno
daa
cmp
ret
push
lcall
xchg
jno
mov
xchg
or
mov
iret
mov
mov
sub
push
int
mov
mov
mov
es
dec
inc
inc
popa
cmp
xchg
jge
cwtl
aam
scas
lret
cmc
push
or
and
and
push
and
mov
imul
inc
scas
das
mov
cmp
inc
xor
dec
ja
adc
mov
push
and
jbe
ja
mov
cmp
push
lods
sub
sub
and
pop
js
xor
and
in
inc
inc
je
sub
dec
call
outsl
fcom
into
out
inc
pop
out
mov
call
jecxz
dec
jmp
bound
in
orb
call
jae
push
sub
aad
daa
xchg
aad
adc
leave
je
dec
sub
dec
sahf
dec
sti
xchg
and
sub
test
sub
adc
jl
xchg
sub
in
insl
and
jnp
xor
test
lods
shll
and
lcall
pop
jno
pop
push
lea
inc
insb
pop
adc
fistps
test
dec
add
xor
testb
sarb
rcrl
sub
gs
sarb
or
stc
scas
cwtl
repnz
shl
mov
lea
cwtl
cmc
mov
push
mov
lea
sub
pop
push
mov
std
sbb
dec
jae
aam
clc
lahf
leave
push
js
dec
insb
xlat
dec
or
lea
rorl
sub
stc
pushf
xchg
js
inc
int3
dec
paddb
cmpsl
adc
sbb
mov
int3
mov
ljmp
jns
xor
testb
mov
sub
xchg
sbb
and
or
or
mov
ss
jp
ja
mov
arpl
negb
cmp
dec
popa
mov
jmp
cmp
adc
rcll
pusha
sub
int3
ret
adc
jge
or
in
lcall
lret
adc
and
mov
jl
scas
adc
cwtl
movsl
sbb
jne
ja
adc
test
aam
jmp
mov
pop
cltd
insl
imul
xchg
sub
jo
fldcw
int
mov
jae
mov
xchg
add
mov
lods
inc
mov
test
out
pushf
aas
cwtl
into
xor
or
dec
mov
mov
mov
sbb
test
push
mov
and
popa
iret
sub
ficoml
sbbb
ja
jl
fisubl
aad
lock
pop
and
aaa
xchg
cltd
popf
mov
lods
in
sub
ja
or
inc
jecxz
btr
push
xor
dec
dec
sbb
mov
jae
cmp
jecxz
into
mov
in
pop
pushf
test
hlt
mov
mov
pop
ss
stos
test
lahf
pop
ret
or
mov
lret
in
imul
iret
push
cli
jae
pop
lcall
stos
pop
jno
les
fcompl
in
mov
rorl
xchg
imul
test
test
lods
out
adc
pop
sti
addr16
push
mov
jecxz
cmpsl
std
jae
imul
and
lock
xchg
sbb
ret
fisubrl
lock
iret
adcb
ja
sub
jmp
inc
cmc
out
les
sub
iret
std
mov
stos
test
push
cs
xor
cmp
mov
xchg
je
popa
lock
cltd
mov
das
clc
stos
pop
adc
push
push
pop
aaa
fbld
xor
iret
ljmp
cs
sub
mov
ror
xor
scas
sahf
vpunpckhwd
gs
aad
repnz
mov
or
xchg
fcompl
insb
adc
dec
adc
fmuls
popf
pop
mov
std
fcmovnu
popf
or
sub
push
add
push
mov
nop
inc
xor
fistps
ja
mov
sub
rcrl
and
repz
jecxz
lds
fdivrs
movsl
jp
loope
call
or
pushf
rcr
sub
xchg
cld
lods
int3
and
xor
imul
adc
ja
scas
ja
icebp
pop
enter
jge
xchg
aas
dec
jecxz
mov
and
mov
pop
pop
imul
mov
dec
in
mov
inc
mov
lahf
push
sub
fisubl
cmc
ror
mov
sub
push
fiadds
in
push
aad
pop
outsl
movsb
sbb
lds
stc
push
gs
das
jg
sbb
shlb
out
rcll
pop
fs
mov
jmp
xlat
mov
orl
sbb
adc
out
pop
ss
loope
push
jl
jge
push
scas
mov
ss
jbe
mov
cmp
push
mov
icebp
add
lret
repnz
test
mov
adc
test
lods
insl
jmp
mov
inc
inc
jg
add
lret
jle
loopne
loop
outsb
adc
sub
pushf
sub
mov
xor
lea
fistpll
xchg
pushl
mov
sti
add
xchg
pop
add
sbb
rcrb
jnp
mov
xchg
fcoms
jmp
sahf
sub
sbb
push
mov
and
fwait
xchg
jmp
cmpsb
and
mov
fsubrp
ret
incl
xlat
outsb
sbbb
in
insb
push
add
addb
ds
xchg
pop
xchg
xchg
push
cwtl
outsl
lods
xor
mov
push
push
pop
sbb
and
dec
inc
ret
cmp
xor
clc
jb
mov
ljmp
invd
or
iret
mov
in
insb
inc
imul
jne
insl
adc
pop
fs
push
int
inc
jg
jb
mov
mov
ficomps
jnp
je
dec
das
mov
fdivrl
in
xlat
roll
push
jnp
shll
out
mov
shl
mov
xor
pop
pop
enter
int3
lahf
pusha
jb
loope
aam
movd
pop
in
std
sbbl
sub
fs
shll
mov
in
jbe
sbb
loopne
ret
fwait
mov
cmc
outsl
lret
xor
push
sub
or
out
xchg
push
adc
aaa
mov
les
jmp
jmp
sbb
test
jle
aaa
dec
push
mov
sub
jno
dec
in
dec
int3
negb
rcrl
fisttps
frstor
mov
mov
dec
pop
xchg
adc
adc
pop
in
mov
ljmp
cmp
idivb
out
movsb
ds
lret
mov
sub
stc
in
cmp
imul
mov
fnstcw
adc
imul
xor
int
aam
testl
aas
push
je
stos
dec
push
sub
inc
pop
js
mov
iret
sub
ret
mov
push
pusha
ss
out
std
popa
mov
popa
pushf
rorb
scas
adc
pop
fcoms
mov
faddp
add
ds
jo
or
fisttps
push
call
shlb
mov
xchg
icebp
bound
mov
mov
add
push
out
xchg
and
outsb
xchg
and
in
loopne
ja
inc
adc
mov
and
lcall
mov
das
sti
sbb
out
fidivs
inc
mov
cmp
dec
and
mov
jbe
xchg
cmp
mov
cmc
xor
sub
popf
or
sbb
aam
addr16
movsl
hlt
xorb
in
mov
cltd
arpl
pop
jnp
es
test
sub
cmpsb
and
fxtract
lea
scas
dec
sub
std
and
and
add
cmpl
sbb
lahf
fisubrs
cmp
cmc
jne
sbb
mov
jo
testl
pushf
jmp
daa
xor
or
std
add
scas
divb
push
arpl
test
push
or
mov
int3
ljmp
and
out
sub
and
aad
xchg
pop
xchg
rolb
or
adc
xlat
lods
inc
cmc
push
andl
xor
lea
cmp
in
sbb
mov
popa
mov
sub
cmpb
inc
jl
sub
xchg
mov
sub
shl
scas
fcompl
xor
sub
xchg
add
ret
mov
xchg
std
pop
subl
pop
insl
mov
subl
daa
jb
push
push
aas
push
xchg
pushf
pop
pop
mov
int
dec
scas
cmpsb
std
xchg
out
into
xchg
test
or
mov
xlat
xchg
inc
clc
int
addr16
or
fildll
ret
notb
addr16
jns
in
xchg
push
lret
cmc
push
xchg
xchg
inc
lods
sbb
rolb
addr16
arpl
sub
cwtl
mov
test
scas
sub
jne
orl
jle
hlt
jp
lcall
sahf
jns
add
or
pop
popf
cmp
pusha
je
ja
pop
mov
mov
out
jno
fldenv
pushf
jle
cmp
jmp
mov
ret
push
mov
nop
push
and
jge
or
dec
vaddss
dec
ret
sbb
pop
inc
mov
stos
push
in
clc
popf
xchg
inc
and
and
pop
andl
sub
sub
push
xor
jg
mov
jge
lds
xor
push
lcall
insb
lods
xchg
insl
daa
lods
xlat
pop
insl
fstl
das
mov
cli
adc
adc
mov
xchg
out
jnp
adc
imul
test
out
pop
dec
repnz
mov
mov
cmp
xlat
push
cmpb
fnstcw
mov
jns
add
mov
adc
lods
pop
cmp
mov
cmc
push
mov
cmp
mov
cmp
sbb
repz
std
in
cwtl
rcr
mov
imul
loopne
xchg
fcomi
mov
mov
loope
xor
push
jecxz
aaa
add
jne
push
ja
pop
add
add
mov
add
cli
sub
sbb
fdivrl
mov
leave
scas
xor
xchg
push
icebp
jp
inc
pop
stos
or
cmp
cmpsl
test
jg
xor
add
hlt
out
sub
popa
xor
pop
call
sbb
scas
xchg
xchg
add
mov
cmp
inc
cmp
fwait
sbb
and
xor
out
push
and
dec
int
ficompl
sub
and
xchg
aas
pop
negb
inc
test
cmp
jl
ljmp
xor
and
adc
mov
mov
jp
cmp
sbb
push
into
lods
loopne
add
repz
mov
scas
pop
aas
push
movl
movsb
jl
mov
popa
out
jmp
stos
inc
aad
pop
jb
fisttpll
mov
sbb
push
add
sbb
jno
imul
or
insb
add
push
lods
hlt
mov
inc
or
movsl
mov
mov
subl
rcll
mov
mov
xor
imul
jno
sti
dec
push
add
cltd
je
mov
dec
lret
mov
dec
or
aaa
lock
popl
or
jle
xchg
mov
rol
dec
push
and
adc
les
ds
cmpsl
mov
sbbb
and
xor
xorl
sti
pop
fdivl
xor
icebp
std
int3
lcall
mov
cmp
mov
pop
insl
outsl
lahf
cmp
jmp
pushf
scas
je
sbb
push
into
adc
jo
jle
pop
adc
xchg
adc
jmp
insb
xor
dec
adc
jg
pushf
jo
sbbl
xor
mov
inc
jge
jno
mov
nop
mov
cmp
push
das
sbb
pop
sbb
xor
fists
mov
dec
int3
mov
push
sub
add
into
xchg
dec
into
mov
cld
mov
dec
cmpl
pop
mov
or
add
rcll
mov
std
jl
aas
ret
les
lcall
sub
push
pop
mov
sub
mov
popf
inc
fldl
or
ret
and
les
pop
scas
push
popl
inc
add
push
jb
and
sub
es
sub
divb
pop
sti
add
enter
pop
or
enter
mov
mov
cmp
pop
xchg
cmpsb
inc
xor
mov
pop
cmp
fnsave
xchg
out
pop
jo
and
cmp
ljmp
push
cld
xor
movsb
cwtl
push
fldt
rcrl
or
ja
inc
je
adc
loopne
lods
add
cmp
insl
jmp
jmp
dec
inc
iret
scas
dec
loope
add
jno
aaa
jl
popa
lods
inc
insl
loope
imul
popf
mov
pop
ja
cld
insl
cmc
sahf
stc
movsl
cmc
sub
out
xchg
test
leave
loop
repnz
mov
push
mov
scas
stos
sub
decl
test
or
mov
cmp
pop
mov
arpl
or
mov
js
inc
ja
sti
mov
cwtl
out
pop
mov
and
sub
lret
ret
bound
ret
insl
mov
add
movl
ja
xlat
cli
loopne
sbb
fwait
mov
gs
in
ja
out
adc
adc
aam
or
stc
leave
mov
sub
aaa
jmp
mov
jecxz
cmp
mov
jmp
shl
jo
jno
xchg
das
pop
push
sti
jnp
cmp
cmp
pop
fadds
scas
inc
mov
shll
cmpsl
cmp
xchg
lahf
adcb
in
jmp
add
xor
or
and
and
arpl
add
imul
sbb
scas
push
outsb
mov
dec
or
jge
and
pushf
stos
push
rcll
popa
adc
data16
add
xor
mov
cmp
nop
je
stc
cli
mov
or
cltd
push
jl
sub
adc
cmpsb
push
dec
or
bound
jmp
aaa
loope
in
mov
jmp
push
rolb
xchg
adc
jp
jl
mov
and
push
jo
js
in
jmp
outsb
pushf
lret
sarl
jae
cwtl
cld
bound
popa
rorb
into
cmpsl
repnz
and
xchg
mov
pop
mov
push
xchg
inc
push
call
inc
xchg
repnz
sbb
imul
dec
or
mov
xorb
sbb
sub
in
xor
ss
xor
add
xchg
inc
cld
jp
mov
or
adc
dec
mov
dec
mov
and
insb
inc
fwait
add
push
daa
pushf
gs
jmp
fiaddl
fidivs
testl
inc
cli
pop
cmp
adc
in
inc
xchg
cmp
leave
ds
ljmp
jp
jbe
aad
out
lock
inc
stc
dec
mov
and
cmpsl
in
sub
push
stc
enter
outsl
sub
imul
mov
lcall
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pushf
lock
add
