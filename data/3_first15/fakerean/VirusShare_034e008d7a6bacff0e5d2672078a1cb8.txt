sbb
add
andb
jae
icebp
fcomps
daa
push
out
insb
xchg
pop
stos
or
push
dec
std
sbb
inc
insl
xchg
stos
xlat
push
fiaddl
fidivl
pop
clc
inc
or
jmp
sbb
mov
bound
sbb
push
in
push
cmpsb
cli
scas
fstpt
jae
add
cmp
inc
jp
out
pushf
int
or
je
jl,pn
mov
out
add
sub
pop
leave
mov
jb
ljmp
dec
pop
cmpsl
push
or
fsubr
insb
and
xor
xchg
inc
inc
arpl
pop
popf
lea
mov
mov
mov
out
js
lret
pop
lret
stos
pop
je
fmul
mov
stos
in
or
mov
inc
arpl
gs
inc
enter
dec
scas
adc
push
test
imul
test
nop
push
and
inc
xor
shrb
xchg
inc
push
cmp
imul
dec
pop
pop
das
shlb
add
inc
testl
inc
rcl
imul
or
popa
adc
push
sarl
xlat
orb
repz
mov
pop
sbb
pop
mov
fstps
popf
fisttps
mov
push
mov
mov
add
xchg
lods
inc
pop
enter
pop
sub
jno
gs
mov
xchg
les
lret
push
lods
cmp
cmc
call
adc
sub
outsb
ret
pushf
test
int
shlb
pop
arpl
arpl
dec
cmpsb
mov
mov
mov
testl
lret
inc
sbb
push
mov
subl
cmpsl
dec
cmc
pop
in
push
rcrl
add
test
lea
cmp
mov
pop
nop
inc
shll
cmp
adcb
push
sub
lds
bound
add
nop
adc
fstl
mov
dec
mov
push
mov
mov
mov
cmp
out
in
mov
cmpb
loopne
cwtl
loopne
push
int
movsb
sub
inc
and
and
dec
out
lret
mov
mov
lret
sub
add
pop
mov
lret
mov
mov
dec
ficoms
jmp
outsb
inc
orl
cmpsb
xchg
jns
lret
xchg
add
xor
bound
dec
mov
or
jno
pop
mov
mov
rcrb
mov
mov
cmpsb
xor
test
adc
and
add
insb
arpl
cld
test
icebp
cltd
sbb
xchg
add
sarb
and
int3
jns
adc
sbb
sbb
mov
push
out
mov
mov
fistpl
movsb
fimull
les
jp
das
add
in
sub
jne
fildll
or
mov
push
stos
adc
dec
jmp
mov
inc
xor
xchg
in
sbb
cmpsl
aaa
xchg
iret
stc
cmc
push
scas
stos
enter
dec
int
push
mov
pop
or
fwait
mov
icebp
sub
stc
rcr
mov
pop
inc
mov
les
in
bswap
cmp
rcr
xor
scas
jno
sub
push
mov
or
mov
pop
dec
push
mov
fdivr
ret
xor
jae
mov
dec
xor
insb
shlb
mov
daa
sub
aaa
ljmp
fisubl
inc
pushf
pop
scas
xchg
xchg
fwait
jg
sbb
sbb
push
mov
push
lods
sbb
outsl
sub
mov
sub
iret
adc
add
jmp
cmp
in
stos
and
jno
filds
out
je
stc
sbb
push
scas
xor
inc
jns
dec
mov
std
mov
in
sub
dec
mov
insb
mov
jp
ret
sbbb
add
or
fldt
sbb
push
scas
adc
ja
add
daa
inc
add
iret
cltd
xor
ds
pop
push
outsl
divb
jmp
call
lret
push
inc
adc
adc
ja
fists
test
daa
repz
cld
or
lock
dec
outsl
lcall
hlt
lret
outsl
loopne
or
cmp
mov
les
iret
add
cmp
jns
or
and
inc
bswap
xor
test
das
mov
push
xchg
cmp
mov
scas
cmp
push
adc
mov
xchg
pop
sub
clc
scas
mov
mov
std
cwtl
cld
out
cmp
or
subl
ret
out
pop
idivb
ds
push
out
fs
scas
scas
mov
jne
push
push
clc
aaa
inc
pop
sbb
push
and
ficoml
push
ffreep
testl
andl
sbb
xlat
daa
mov
enter
cmp
imull
dec
or
mov
rcrb
jg
mov
xchg
jle
xchg
mov
and
es
std
mov
mov
fisubs
fimull
lret
ds
jl
es
pop
int
mov
insb
aad
pop
leave
cmp
jle
aad
js
sub
insb
and
push
loop
xor
push
push
pop
ficoml
mov
cwtl
pop
dec
pop
mov
clc
scas
fisubrl
or
xor
mov
in
jb
nop
outsb
stc
dec
ficomps
stos
ret
in
loope
xchg
loopne
mov
out
cmpl
sbb
adc
in
mov
xorb
in
mov
push
sub
andl
xchg
pop
insb
outsb
add
pop
call
adc
mov
ret
subb
cwtl
sbb
cmp
psraw
cmp
mov
movaps
lea
add
dec
ret
out
lea
or
add
std
fisttps
repnz
inc
pop
dec
out
jno
divl
ret
push
push
insb
sub
mov
fstps
mov
push
xchg
add
pop
test
xlat
dec
mov
adcl
sbb
repnz
push
push
mov
add
and
sbb
inc
xlat
inc
sahf
mov
jnp
mov
push
mov
cmp
sbb
mov
add
out
pop
xor
add
or
pop
shlb
lret
arpl
inc
push
mov
movsb
and
cmp
pop
and
jbe
xor
inc
push
push
es
mov
shlb
je
stc
pop
xchg
push
ret
repnz
fldl
daa
dec
inc
test
cwtl
push
sub
cmp
add
sub
ljmp
adc
adc
or
movsb
mov
dec
cmpb
xchg
push
jge
push
data16
fcoms
fwait
sub
adc
fcomi
xchg
fidivl
inc
push
add
add
dec
xor
or
mov
lcall
sbb
addb
add
bound
add
into
dec
add
xor
push
dec
xchg
xchg
ror
add
cmp
into
pushf
int
xor
push
test
movsl
je
fdivl
leave
dec
bound
mov
out
add
pusha
mov
sbb
sub
out
fs
test
add
sbb
dec
test
adc
roll
cmp
cld
jo
shrl
lods
fdivrl
xor
addr16
xchg
gs
mov
std
arpl
je
dec
push
mov
adc
insl
jle
inc
fcompl
sub
hlt
ret
jl
rorb
fistps
imul
fwait
mov
inc
mov
dec
out
arpl
pusha
pop
cmp
cmp
lock
fistps
stc
in
and
adc
mov
cmp
fildll
dec
mov
jg
push
mov
mov
negl
xchg
add
cmpsb
mov
fs
push
pop
xchg
xchg
push
mov
xchg
std
xor
sub
sub
sahf
call
add
or
outsb
stos
inc
cltd
fdivrl
cmp
push
out
dec
sahf
and
std
pop
jp
push
and
add
push
bound
jns
cmc
imul
ds
hlt
out
cs
popa
xchg
nop
sub
imul
mov
push
int3
xchg
sbb
mov
in
dec
mov
sub
jne
sub
test
test
mov
aaa
insl
daa
inc
xchg
push
nop
andl
pop
leave
pop
mov
mov
push
and
stos
fmull
sub
dec
cwtl
mov
adcb
and
jp
leave
sbb
add
das
mov
dec
push
xor
lods
in
mov
mov
imul
in
mov
lds
cmpsl
scas
mov
or
je
insl
fs
je
loope
xchg
mov
push
push
or
aad
and
inc
fnstsw
sarb
jbe
add
adc
jle
int
sbb
ss
adc
in
test
xchg
and
sub
cmp
mov
clc
sahf
xchg
out
mov
dec
add
or
or
and
sub
mov
mov
push
lods
xlat
mov
mov
popf
dec
pop
cmovg
mov
jp
insb
ja
push
xchg
frstor
mov
cmpsw
mov
jp
pop
mov
movsb
jge
gs
jmp
aaa
adc
inc
test
push
rclb
cld
or
pop
xor
xor
incb
mov
pop
mov
aas
hlt
mov
sub
mov
shl
sbb
mov
repnz
xchg
pop
mov
pop
dec
lret
dec
out
xchg
xor
inc
mov
out
xchg
inc
ret
lcall
or
aaa
roll
repz
push
jecxz
inc
dec
sbb
inc
push
xchg
mov
xchg
ss
and
arpl
pop
sysexit
loopne
sub
pop
mov
out
xchg
jl
sub
add
loope
stc
add
lcall
xor
add
adc
and
push
das
loopne
cwtl
mov
push
outsb
cmp
xchg
jne
dec
pop
add
pop
inc
jo
lret
mov
fsubr
int
jmp
ret
jne
push
aaa
test
xor
stc
xchg
xorb
add
push
dec
out
lcall
js
cmp
inc
xorl
lret
jg
cmpsb
int3
mov
or
fildl
mov
mov
aas
movsb
pop
push
mov
xlat
sbb
aad
xchg
and
add
lods
aaa
add
mov
push
outsl
out
sahf
jl
pop
cmp
jbe
imul
loope
mov
fistpll
stos
or
sbb
je
aaa
stc
add
lods
push
adc
mov
repnz
push
adc
jbe
cs
insl
insb
ja
orb
loopne
rcr
imul
inc
jnp
jge
mov
pop
sbb
adc
push
or
aad
pushf
mov
xchg
inc
and
pshufw
test
scas
bswap
jge
loop
push
or
adc
stos
mov
in
jae
fsubrl
fsts
xor
cs
mov
lret
cmp
adc
push
lock
mov
adc
and
fcoml
loopne
insl
cmp
cwtl
pop
mov
cli
cltd
push
xorl
mov
arpl
jnp
icebp
inc
mov
data16
sub
in
aam
pop
xor
jecxz
mov
fs
sbb
jp
push
ret
xchg
dec
rclb
cwtl
cmp
mov
push
and
fdivs
or
xchg
repz
inc
or
add
sub
sbb
xor
and
push
fistpl
sub
rcrb
lahf
sbb
jl
sarl
mov
cmp
mov
jl
push
jnp
and
inc
add
sbb
and
sub
fstpl
scas
movsl
add
sbb
mov
cmp
das
add
scas
insb
test
cmc
jmp
leave
or
inc
xchg
aam
push
xchg
pusha
add
xchg
sti
ds
cmp
lret
int3
push
jg
stos
fsub
jg
lcall
fidivrl
mov
mov
aas
mov
mov
mov
dec
fistpll
jbe
and
stc
pop
and
pop
sbb
xor
scas
stc
add
mov
shlb
aaa
mov
sti
mov
scas
and
and
stc
mov
scas
gs
iret
imul
cmpsb
pop
inc
xchg
out
lahf
cmc
push
mov
cli
cmp
cli
in
ret
sub
scas
inc
ds
arpl
push
pop
ror
fwait
test
mov
cmp
int3
cmp
mov
out
jmp
pop
fcmovbe
lods
xor
shlb
pop
xchg
aas
or
add
scas
stos
mov
mov
and
xchg
xor
mov
add
or
imul
pushf
stos
rcrl
mov
mov
push
iret
mov
add
lods
into
pusha
add
popa
inc
sti
popa
ljmp
inc
in
cmpsl
ret
mov
push
iret
das
mov
in
gs
int
and
inc
push
cli
arpl
sub
adc
loop
enter
cmpsb
test
aaa
mov
push
add
nop
and
subl
sbb
lahf
xor
jbe
add
idivl
pop
in
dec
popl
ret
ret
iret
daa
repz
dec
dec
ss
push
and
cltd
enter
mov
and
sbb
push
jne
adc
or
xlat
loope,pt
push
ljmp
sahf
cmpsb
test
fnstsw
jns
sbb
out
jo
insb
mov
fst
cmp
cs
outsl
mov
and
sbb
push
add
sub
inc
push
xor
xor
inc
rcl
add
push
neg
sbb
adc
mov
and
cli
lock
xchg
push
mov
jmp
xchg
cmp
popa
fwait
lret
xchg
add
sub
popf
or
and
in
scas
stc
rorl
cmp
mov
mov
scas
xchg
add
sahf
or
inc
fs
vmread
fucomip
mov
xchg
negb
rcrb
adc
imul
shl
ds
mov
insb
pop
cmp
xchg
sbb
scas
dec
sti
and
and
inc
pushf
int3
jl
pop
sbb
out
iret
fcoml
inc
lods
movsb
pop
mov
cmp
popa
push
outsl
push
stos
cmp
push
adc
sub
cmpsb
add
js
jle
mov
mov
sub
sahf
es
sbb
add
cmp
push
mov
mov
out
sub
cld
scas
add
das
xor
jns
arpl
push
add
fwait
xor
xor
push
adc
cwtl
xor
negl
and
and
repz
es
roll
or
add
lock
xor
push
or
movsl
sub
ss
outsl
imul
in
xchg
jmp
jbe
or
inc
nop
jns
imul
sti
xor
movsb
ret
leave
flds
cwtl
in
dec
mov
pop
inc
mov
test
jno
ljmp
dec
push
pop
adc
cmp
fbstp
mov
in
jmp
ret
and
scas
je
dec
adc
jge
cs
pop
testb
mov
leave
fwait
repz
xlat
ficomps
aam
jge
ret
or
sbb
mov
pop
sbbl
push
push
inc
in
mov
fidivs
addl
pop
push
push
inc
ja
cli
subl
arpl
jecxz
cmp
mov
sahf
test
lret
popa
xor
sbb
mov
xchg
jo
sbb
add
dec
jne
bound
leave
mov
aaa
nop
test
sbb
enter
adc
add
mov
jno
add
and
pop
addr16
jecxz
ja
cmp
iret
adc
roll
cmp
dec
sbb
dec
inc
dec
ljmp
xchg
xchg
mov
sahf
pop
inc
incl
ja
sbb
test
jnp
xchg
and
mov
add
and
jecxz
pop
lcall
pop
mov
aas
inc
push
fnstenv
les
xchg
insb
dec
jns
push
popf
sub
push
jge
cld
test
add
stos
jl
pop
xchg
fisttpl
pop
shlb
mov
jnp
cwtl
aad
jns
add
mov
push
push
add
lods
imul
roll
hlt
and
shrl
mov
mov
insb
dec
and
movsb
xchg
xor
or
iret
xor
jnp
dec
out
sbb
imul
and
xchg
sub
popf
mov
in
les
fcoml
mov
je
or
pop
sti
sub
add
sub
imul
mov
and
jns
pop
lea
push
pop
mov
push
pop
or
pop
pop
jmp
inc
cmp
jne
subl
or
push
push
inc
adc
fisubl
int3
js
ficoms
out
xchg
call
enter
lea
arpl
mov
lods
out
jae
sbb
lods
stos
jne
clc
in
sub
subl
addb
pop
jns
movsb
jmp
push
adc
sbb
shlb
mov
mov
sbb
xchg
cmp
push
test
fsubl
out
xchg
xchg
sub
or
lods
cmp
add
xchg
subb
push
ds
sbb
xor
mov
mov
lret
lret
sti
cmc
dec
inc
or
xor
in
les
cmpl
pop
std
mov
std
or
add
sub
cmp
out
cmpl
cmpsl
mov
test
add
pop
mov
stc
jg
mov
mov
scas
xchg
loopne
addr16
dec
sar
mov
out
adc
je
stos
xchg
stos
pop
iret
fldl
fmulp
in
test
lods
pop
and
pop
fwait
in
mov
andb
lock
inc
mov
dec
fxam
mov
or
sti
out
call
cwtl
adc
out
fildl
test
mov
push
jnp
adc
int3
mov
lahf
mov
mov
xchg
sbb
sub
pop
repz
pop
lret
mov
call
add
cmp
sti
rcll
stos
mov
test
out
mov
xor
in
test
int
pop
out
mov
or
push
js
fwait
bswap
and
insb
imul
and
movsb
mov
xchg
in
mov
into
pushf
mov
sub
movsl
inc
adc
mov
fwait
mov
and
xchg
dec
idivb
sarl
xchg
insb
stos
cmp
xor
add
xchg
lds
in
fimull
inc
aam
mov
xor
fisttpll
push
cmpsb
arpl
pop
cmp
cmp
mov
ds
imul
movsl
mov
mov
movl
mov
and
push
xor
mov
ret
jle
inc
iret
out
lret
sbb
jo
push
lds
xor
in
pop
mov
lock
lods
imul
lahf
daa
pop
sub
push
mov
jns,pn
push
stos
dec
leave
repnz
js
sub
imul
dec
fsubs
rclb
aaa
xchg
or
sbb
adc
sub
xchg
fisttpll
lret
aad
stos
mov
lcall
mov
stos
mov
jae
dec
test
cmp
mov
mov
data16
data16
fstl
xor
xchg
push
jecxz
outsl
and
cmp
xchg
popa
xchg
int3
or
xor
out
or
push
aas
test
pop
push
insb
or
and
or
adc
insb
out
pop
mov
jp
push
mov
xor
sahf
fs
ret
pusha
clc
pop
std
mov
mov
jno
push
jno
fs
mov
inc
test
add
shlb
xor
xchg
scas
or
out
cmovp
and
pushf
lock
xchg
sub
fcoms
jb
jp
pop
xchg
push
das
pop
cmp
jnp
jmp
pop
dec
mov
mov
add
push
lahf
xor
jl
jecxz
js
jae
fldcw
movsl
pop
js
inc
inc
nop
sbb
push
jae
sarb
fsubl
mov
fstpt
inc
scas
sub
movsb
int
pusha
in
mov
mov
clc
in
sub
rolb
ja
insb
stc
jo
xchg
push
hlt
loop
out
xor
test
sub
push
mov
cltd
jbe
fisttpl
push
and
test
push
jb
fcomp
jo
sbb
decb
lods
add
cmp
in
in
mov
inc
mov
or
loopne
data16
or
aad
lahf
mov
cmp
in
mov
pop
push
xor
insl
add
pop
push
and
mov
pop
data16
mov
fsubl
add
call
cmp
test
adc
insl
in
push
insb
xchg
dec
add
pop
mov
sub
mov
adc
daa
xchg
call
pop
lea
sub
pushf
and
gs
inc
enter
mov
dec
sub
in
loopne
or
and
mov
pop
loopne
pusha
shr
inc
mov
xchg
ret
xor
cmp
jnp
loopne
movsl
adc
enter
inc
test
shrl
dec
mov
xchg
cmp
or
leave
mov
int
cmp
pop
enter
or
js
dec
mov
lret
fmuls
xor
repz
icebp
mull
adc
out
dec
xorb
cld
ss
jb
hlt
pop
aas
jge
aad
xor
lds
lret
and
push
hlt
cs
lods
or
inc
ja
sub
adc
mov
dec
cmc
sarl
add
ss
pop
and
xchg
adc
mov
in
testl
sbb
inc
push
pop
mov
out
scas
cld
ret
sbb
add
mov
pop
xor
push
or
and
outsb
or
adc
pop
mov
movsl
mov
aaa
lds
inc
fnsave
adc
test
hlt
or
jbe
outsb
xor
addr16
cwtl
daa
inc
mov
dec
clc
xor
shrb
add
jo
sti
push
mov
adc
insl
adc
outsl
shl
jp
dec
mov
nop
dec
cmpsl
test
test
lahf
jl
lea
cmp
xor
inc
adc
jns
in
loope
mov
push
jg
test
cmovs
xor
mov
push
pop
or
fsubrl
in
jae
orb
inc
mov
aas
push
or
or
sti
inc
jle
lea
mov
inc
pop
cmc
cmpsb
pop
jo
add
pop
xor
mov
cli
into
lods
dec
dec
orl
adc
push
adc
outsl
push
daa
add
leave
cld
push
out
xor
xor
xchg
mov
jns
inc
out
xor
shll
push
add
sbb
mov
xor
leave
mov
fisubl
or
cs
lock
mov
push
std
mov
stos
fidivs
imul
outsb
das
rclb
add
add
or
ds
xchg
sbb
or
sub
js
imul
cmc
jno
adc
repnz
xor
mov
mov
dec
mov
mov
aam
stc
ds
imul
leave
mov
add
in
cmp
testl
mov
jbe
add
sub
mov
pusha
test
mov
fst
dec
mov
jl
test
dec
adc
push
sbb
ljmp
out
mov
adc
idiv
cmpsb
adc
sub
mov
pop
fwait
mov
nop
out
sbb
lcall
xchg
push
shll
out
xchg
xorl
aam
leavew
mov
cmpsl
mov
lret
and
push
popa
push
mov
cli
xchg
gs
ud1
adcb
xchg
push
and
lahf
inc
cmp
mov
push
or
add
mov
lock
xchg
jle
cmp
mov
loopne
repz
int3
adcb
or
xor
es
outsb
push
stos
pop
dec
imul
sti
and
push
subb
pushf
sbb
cmpsb
stc
mov
rorl
or
mov
fildll
pop
dec
cli
icebp
xor
fmull
sbb
jns
mov
dec
sub
and
sub
pop
sub
xchg
mov
pop
call
jns
cmpsb
popf
pop
adc
mov
sbb
out
sbb
or
cld
out
add
and
ds
in
sbbl
sub
je
adc
fsubrp
arpl
jl
xchg
lods
cmp
sbb
jbe
mov
mov
pop
neg
clc
fcompl
shll
aad
dec
imul
jb
jns
mov
sbb
push
fisttpll
pop
fwait
repz
inc
sbb
out
aaa
and
dec
fcmovnu
mov
xchg
hlt
and
push
add
outsb
lods
dec
testb
pusha
imul
out
les
les
rcrl
ret
fdivl
ljmp
sub
subb
cmpsb
movsl
pop
andb
sub
inc
lock
mov
sbb
push
lds
neg
mov
jp
xchg
jne
shll
lock
fsubrp
notl
cli
leave
lods
cmp
pushf
add
add
jge
xor
outsl
shlb
adc
or
out
imul
subl
je
xlat
adc
je
aad
loope
call
jo
in
xchg
or
dec
arpl
out
pop
fnstcw
mov
fwait
cmp
and
xlat
dec
add
rcl
mov
sbb
ret
push
push
adc
adc
fdivl
xchg
xchg
and
dec
cld
mov
nop
mov
mov
test
jbe
imul
mov
mov
outsl
in
push
rcrb
imul
inc
je
cmpsl
enter
fsubrp
pushf
xchg
cli
cltd
dec
int
lahf
cmpsl
daa
inc
jbe
mov
and
addr16
dec
adc
jns
test
push
xchg
xchg
pop
cltd
adc
xlat
ficoms
out
arpl
sbbb
ja
imul
in
subb
sbb
mov
xchg
jae
inc
pusha
jge
xchg
pusha
test
ja,pt
aas
cld
adc
cpuid
lea
xlat
xchg
add
sub
xchg
cmpl
rcrb
and
jg
and
sti
std
insb
adc
mov
leave
xlat
push
dec
mov
stos
mov
jge
jle
mov
mov
mov
mov
push
xlat
and
sbb
ficomps
lahf
add
insl
std
sbb
iret
fdivrs
dec
mov
jne
inc
jp
push
hlt
test
out
ds
sbb
pop
in
sbb
xor
fidivrl
lods
add
and
into
cld
dec
mov
and
sub
jl
adc
push
leave
sub
and
mov
or
xchg
je
jae
jp
dec
jbe
pop
ds
or
push
and
sahf
push
mov
jmp
xor
push
adc
rcrl
sub
xor
std
pop
mov
xorl
pop
outsb
pushl
or
fistpll
and
ja
outsl
or
and
fimull
sub
dec
imul
and
sub
sub
test
fs
fld
ljmp
sub
das
mov
movsl
lret
lock
cmp
xor
inc
inc
cltd
in
mov
ds
rorl
nop
mov
fadd
or
pop
negl
test
mov
int3
arpl
xlat
inc
popf
sub
movsb
icebp
add
push
inc
lret
mov
sbb
adc
mov
mov
xchg
mov
loope
icebp
enter
psllq
jmp
pop
sub
dec
push
popa
outsl
ss
cwtl
ds
push
mov
lea
imul
call
jbe
xchg
jo
adc
in
fs
sbb
inc
adc
add
xchg
or
scas
pop
insl
and
pop
lock
loopne
decb
mov
pop
cld
scas
mov
xchg
cmpb
sub
jo
mov
test
and
aaa
mov
lock
ja
cmp
popa
sub
iret
push
xchg
jae
cs
xchg
xchg
sub
mov
push
xor
cld
fisttpl
ljmp
aaa
adc
mov
inc
popa
aad
push
movsb
pop
xchg
add
fwait
out
arpl
cmc
fcmove
adc
in
and
mov
aam
inc
lea
mov
mov
cwtl
xchg
in
mov
xlat
mov
mov
or
pop
andl
jne
sbb
pop
ds
aas
lret
std
pop
ss
loope
out
jbe
mov
addr16
or
scas
pop
push
mov
inc
push
add
mov
js
jns
addl
push
in
xchg
nop
scas
inc
leave
movsl
cmpb
ljmp
add
push
mov
adc
test
bound
sub
stos
call
into
enter
mov
pcmpgtw
push
and
xchg
push
fnstcw
jb
sbb
fisubrl
jg
pop
jns
and
mov
mov
fs
adc
adc
hlt
xor
jb
jmp
mov
jg
pop
addr16
cmp
cli
sub
cmc
inc
icebp
sbb
clc
test
xchg
and
lret
mov
loope
test
xchg
sub
lea
hlt
insl
scas
cltd
cmpsb
mov
inc
stc
sbb
push
lret
dec
or
push
cmpsl
fsubs
jae
xor
out
jns
jo
cmp
xchg
test
imul
adc
pop
mov
mov
jae
je
dec
jp
sub
hlt
lea
mov
cmp
mov
les
sbb
negl
fildll
pop
shlb
xchg
sbb
popa
pusha
movsb
cmpsb
loope
xor
sbb
jge
jns
sub
or
jb
mov
pop
xor
and
in
inc
mov
lock
add
lds
stos
fistl
mov
repz
fldcw
mov
ds
frstor
ss
rolb
shrb
xlat
jo
jl
cmp
and
stc
push
mov
pop
scas
push
push
push
test
push
push
iret
mov
push
jo
sbb
xlat
sahf
sahf
stos
mov
add
adcb
pop
pop
push
les
adc
dec
mov
sub
xchg
fucomp
adc
add
jge
sbb
cli
sub
in
leave
pop
and
loop
pop
les
bound
xor
and
rcll
imul
xchg
clc
imul
rorl
int
mov
enter
inc
loopne
xor
gs
jmp
push
icebp
cmp
aad
fmul
ljmp
xchg
test
mov
jnp
popf
xchg
mov
mov
dec
ret
out
mov
fidivl
mov
aaa
and
or
cwtl
jnp
xchg
sub
testb
jnp
mov
pop
outsb
test
sbb
loopne
sbb
imul
sarl
stc
sub
dec
outsl
aaa
lret
xor
dec
cs
aaa
icebp
mov
add
fstpl
jb
add
push
jns
aas
jmp
mov
inc
push
sub
out
pop
fmuls
popf
jbe
sbb
xchg
test
popa
ds
jno
inc
sub
and
addr16
std
inc
cli
mov
cld
fwait
cwtl
cmp
sub
push
add
imul
aad
xor
sti
mov
add
push
pop
es
adc
cmp
adcb
jns
stos
adc
cld
push
shl
dec
xor
mov
jns
scas
cmp
ret
ljmp
test
pop
adc
mov
and
mov
mov
cmp
push
lods
pusha
into
mov
add
cmpsb
es
in
dec
data16
sbb
push
arpl
sub
outsl
pop
aas
sbb
sti
sub
lret
idivb
cmp
data16
hlt
lds
cmp
mov
sub
movsb
loopne
cs
xor
adc
mov
mov
test
stos
pop
es
cmp
fdivl
clc
mov
xchg
push
mov
daa
scas
pop
xor
pop
cmc
lcall
push
pop
cld
jmp
insb
add
mov
rcr
ret
dec
push
jbe
dec
les
stos
cmp
das
xchg
ss
push
test
dec
push
dec
adc
repz
fiaddl
pop
out
lcall
faddp
jl
mov
or
mov
jae
ljmp
dec
cmp
xor
adc
or
lahf
dec
in
push
in
sbb
adc
jnp
lea
xor
filds
push
xchg
push
mov
mov
shlb
out
adc
fcoml
jg
sarl
or
push
xor
daa
icebp
xor
cmpsb
shlb
mov
insl
sbb
in
hlt
jg
sbb
popf
xchg
or
xchg
inc
add
jno
test
iret
loopne
add
loope
xchg
jecxz
andb
ficoml
sbb
in
sti
lret
testl
repnz
xchg
jo
stos
hlt
jae
pop
popl
fucomi
push
mov
lahf
adcb
scas
sar
ret
jnp
inc
imul
dec
in
push
lods
aaa
divb
fisttpll
js
add
jle
push
cmp
lahf
or
adc
ret
dec
sbb
mov
xchg
mov
cmp
xchg
add
lret
pop
cmp
mov
jg
icebp
mov
les
push
mov
mov
jns
cmp
mov
pop
test
lahf
in
xchg
mov
stc
jl
subl
push
jl
pusha
push
push
sub
inc
sub
ds
jno
int
pop
push
in
pop
sarl
lret
push
je
sub
jbe
ljmp
cs
or
push
or
xchg
fst
push
sbb
add
insb
mov
add
insb
in
mov
stos
pop
or
jmp
add
cmpsl
mov
scas
push
out
hlt
dec
xor
jae
faddl
out
inc
popa
cltd
adcl
ljmp
sub
cmpl
in
in
aaa
mov
mov
push
loope
dec
roll
add
jecxz
dec
mov
push
std
add
adc
jne
adc
pop
outsb
and
dec
adc
inc
shrl
cmp
lret
inc
out
mov
fistpll
lcall
neg
jno
mov
int3
inc
and
mov
into
pop
adc
aaa
fcmovnu
push
ret
mov
pop
aaa
mov
xchg
jmp
fdivl
dec
fwait
inc
in
rorl
cli
adc
push
add
into
pop
mov
sub
paddsw
xor
mov
adc
clc
movsl
cmp
or
pop
sub
mov
test
pusha
cmc
sbb
pop
fs
xor
sub
sub
xchg
popf
xchg
pop
mov
push
sub
sub
push
fcomps
cmpsb
dec
add
xchg
shr
dec
stos
add
mov
jecxz
incl
lods
cmp
mov
mov
mov
dec
stc
aas
jnp
sbb
rcll
cs
push
pop
adc
popa
dec
sub
fsubl
scas
aaa
jns
and
mov
lret
xlat
ss
out
mov
push
xchg
in
inc
and
js
push
mov
cmp
sub
mov
jns
divps
aad
imulb
arpl
jle
popa
push
hlt
jmp
lret
sbb
sub
mov
mov
cmp
cli
mov
adc
ret
mov
push
iret
aam
cmp
add
inc
mov
repz
pop
sbbl
insl
enter
test
int3
mov
in
xchg
les
cld
cltd
adc
push
push
pop
fdivr
pop
movd
sub
mov
pop
xchg
add
ss
dec
jae
adc
dec
pusha
int3
test
dec
cmp
cmp
xchg
test
enter
repz
insl
clc
inc
or
test
jle
pop
cmpsl
idivb
dec
jp
fwait
scas
addr16
lgs
in
xor
dec
test
test
xchg
pop
adc
jbe
aad
ficompl
sbb
sub
push
imul
push
xchg
int3
jp
pop
sub
std
cli
fcoms
push
stos
imul
sarl
mov
add
add
int
and
adc
testl
pop
or
push
pop
and
or
test
nop
fistps
in
movsl
xchg
sahf
ret
int
dec
bound
inc
cmp
pop
pushf
sbb
mov
mov
adc
and
mov
mov
test
xchg
rorl
push
push
jmp
mov
loopne
out
sbb
cmp
cwtl
stos
xchg
scas
icebp
hlt
pop
add
jmp
sub
push
dec
in
xchg
jle
arpl
inc
data16
jp
ja
stc
pop
inc
sub
xor
inc
mov
stos
adc
inc
or
iret
xor
leave
test
in
lds
or
addb
shll
add
adc
lret
repz
cmc
stos
cmc
sub
aaa
ret
pop
jecxz
leave
pop
loope
pop
and
cmp
mov
and
push
mov
test
test
sbb
lods
pop
mov
sti
sub
and
rcrl
xor
mov
pop
scas
and
dec
push
push
out
js
jp
xor
pop
xchg
jecxz
loope
jno
jbe
or
xchg
sahf
movsb
lods
cmp
loope
mov
and
or
jne
push
in
fistps
aad
inc
fsubrs
ja
insb
into
fs
xchg
in
add
imul
push
jno
dec
icebp
adc
mov
insl
cmpsl
pop
test
notl
cmpsb
push
mov
in
fisttpll
jno
mov
std
nop
adc
xlat
mov
clc
mov
std
add
pop
lret
sbb
sub
adc
test
je
fnstsw
inc
add
std
lock
mov
push
xor
sbb
and
out
cld
pop
dec
bound
sti
push
data16
and
dec
syscall
jo
jg
xor
sbb
dec
mov
testb
push
cmc
fs
popa
mov
rolb
mov
shrb
mov
idivb
inc
mov
testl
sub
sbb
lock
mov
hlt
adc
pop
test
idivb
sbb
cmp
in
and
mov
pop
lahf
or
enter
or
mov
pop
inc
pop
loop
out
xchg
jg
adc
repz
push
enter
stc
mov
or
dec
fdivp
rol
test
mov
adc
incl
in
lds
push
mov
cmpsb
stc
mov
clc
movsb
in
push
and
stc
outsl
inc
xor
sahf
stc
mov
pop
aam
fisttpll
adc
repz
or
mov
jg
mov
mov
cld
rcl
std
lahf
mov
or
insb
and
push
jecxz
mov
das
mov
pop
pop
xor
scas
jmp
dec
adc
in
push
inc
es
mov
push
jbe
stos
jg
nop
repz
mov
daa
data16
xchg
cmc
stos
pop
notb
jns
push
mov
pop
add
loope
inc
mov
cmpsb
loop
and
pusha
cmp
push
add
pop
adc
aas
xchg
aas
stos
and
outsb
fldcw
nop
dec
repnz
aaa
dec
lret
add
pop
sub
dec
cmc
gs
mov
sub
arpl
cmp
jp
pop
nop
xor
hlt
divl
lahf
sahf
into
adc
aas
sbb
sbb
jmp
xlat
xor
sbb
jnp
jno
dec
dec
add
loope
jle
push
mov
sbb
mov
mov
and
xchg
daa
repz
je
inc
cmc
dec
cld
jnp
sbb
pop
lea
jp
or
xor
xor
jp
push
pop
cmp
and
mov
push
xchg
xor
sub
cmp
int3
bound
js
mov
shll
ss
scas
ljmp
mov
mov
nop
out
and
push
sbb
pop
dec
ja
mov
and
adc
mov
rol
fs
xchg
mov
mov
ds
push
jne
pop
jb
mov
adc
dec
scas
inc
int
add
scas
stos
push
or
sti
std
lahf
cmp
mov
imul
arpl
fsubrl
jge
and
push
push
or
sub
xor
pop
fcomps
add
lret
push
push
sti
shl
xchg
xchg
push
mov
cmc
mov
lock
and
and
dec
fcom
aas
dec
ffreep
mov
mov
pushf
and
dec
lahf
adc
pop
fldt
imul
xchg
loopne
scas
lods
adc
shr
int3
cmpsl
xlat
in
push
jge
aas
mov
aad
mov
add
int
stc
or
inc
pop
adc
repz
and
outsb
push
sub
adc
xchg
cmp
adc
mov
sbb
mov
je
aaa
inc
aaa
movsb
pop
xor
int
sbbl
stc
lret
repnz
mov
sub
mov
movsl
fwait
repz
inc
sahf
push
mov
out
and
adc
dec
daa
cld
rolb
imul
mov
push
aad
imul
mov
sub
daa
cmpsl
roll
dec
in
aaa
push
xlat
decb
inc
cmpsl
cmp
sbbb
and
jns
lahf
testl
call
mov
into
clc
mov
push
add
in
pop
ds
cltd
add
outsl
adc
pop
lds
adc
fisubrl
mov
imul
add
mov
push
cli
cs
aam
adc
cmpsl
sub
pop
dec
xor
shrl
adc
mov
mov
stos
test
mov
popf
mov
subb
jo
das
and
and
or
fdivr
lea
mov
fwait
ret
ds
xchg
loopne
mov
xor
cmp
ret
lcall
sub
add
sbb
imul
mov
xor
out
pop
repz
pop
stos
dec
cmp
iret
dec
fcmovu
dec
in
dec
dec
std
inc
add
adc
rorb
scas
cmp
lods
push
dec
sub
mov
inc
cmpsb
scas
adc
jno
sub
mov
call
mov
sub
mov
outsl
test
jp
mov
inc
xchg
dec
push
push
push
lods
lods
fsubrl
or
lcall
cmp
inc
into
mov
and
fmull
jne
out
pop
ja
imul
les
fildll
sbb
sub
push
nop
lea
dec
mov
or
push
divb
or
bound
dec
cmp
jg
int
mov
xlat
gs
scas
adc
stos
mov
in
xchg
scas
lcall
sbb
push
adc
inc
jle
nop
adc
ja
lods
adc
scas
push
pushf
lcall
inc
popa
fnsave
cmp
push
jp
jle
sub
add
sub
test
pop
and
icebp
imul
adc
mov
jp
jecxz
shl
jmp
test
in
lods
mov
inc
add
push
arpl
movsl
add
movsl
rorl
inc
dec
inc
pop
cmpsb
fdivl
jbe
fwait
in
sbb
scas
lahf
out
data16
jo
mov
lock
into
jno
sahf
pusha
mov
mov
xor
jnp
dec
push
loop
or
sti
or
pmuludq
mov
aam
add
stos
mov
pop
sbb
pop
adc
fistps
pop
out
push
daa
or
push
fyl2xp1
xor
fiadds
shl
imul
cmpsl
cmp
lcall
cmp
loope
cmpsl
popf
insl
insl
cld
out
sarl
movsb
jbe
shll
push
in
dec
fcmovb
out
xor
dec
xor
jecxz
mov
insl
mov
push
adc
mov
push
rolb
pop
push
pushf
xchg
and
or
pop
sarb
popf
and
das
jge
xchg
out
xchg
cmpsl
daa
mov
and
rcrl
mov
int3
leave
les
pop
adc
pop
pop
and
test
movsl
add
xor
bound
loop
popa
cli
lods
jl
mov
mov
mov
les
mov
mov
std
enter
pop
pop
cli
push
nop
bound
out
push
sub
repnz
mov
xchg
sub
pop
push
pop
adc
xchg
push
fidivrl
dec
movsb
add
test
sub
or
push
hlt
hlt
cmp
mov
addb
mov
xor
cmp
outsl
mov
lcall
dec
push
cwtl
adc
xchg
arpl
ss
outsb
stos
cwtl
sbb
sub
mov
push
rcrl
pop
imul
dec
or
add
stos
jecxz
clc
mov
pop
adc
insb
jp
pop
push
pushf
sahf
dec
int3
sbb
insb
leave
jno
test
xchg
ficomps
scas
lods
mov
decb
out
inc
push
in
xor
idivb
and
scas
sub
or
movsl
jge
dec
or
jno
add
push
es
cwtl
mov
cmove
ret
jno
je
es
mov
inc
sub
sub
in
dec
xchg
mov
lret
and
insl
jne
stos
fcomi
and
cmp
cmp
push
daa
adc
shrl
lods
mov
pop
add
testl
pusha
push
mov
dec
push
mov
sbb
push
dec
pop
push
mov
js
push
pushf
cmpsl
push
jns
adc
pop
adc
jp
mov
arpl
mov
neg
push
xor
mov
ljmp
jns
stos
pop
pop
cmp
mov
mov
lock
sub
adc
lcall
dec
outsl
or
dec
loopne
pop
scas
cmp
out
jl
xchg
cmp
cltd
sahf
loop
loop
loop
jns
fdivs
out
adc
in
mov
inc
push
subl
mov
jns
fisubs
or
dec
cmpsl
aas
dec
xlat
addr16
pop
in
sti
jmp
push
adc
xchg
stos
fs
pop
cmpsb
test
movsl
cmpsb
sti
movsb
jl
pop
add
pop
xor
lcall
pop
rorl
adc
movl
jbe
xor
leave
cmpsl
lahf
sti
cwtl
pop
roll
aaa
shrl
jbe
push
rorl
lock
push
mov
call
mov
lret
sbb
es
stos
mov
xor
xor
repz
xchg
push
out
cmp
mov
mov
cmp
mov
cmc
movsl
sbb
sti
inc
or
out
scas
aad
xchg
test
jno
xchg
jecxz
xchg
js
sub
loop
je
imul
mov
mov
dec
lret
push
xchg
xchg
jmp
mov
add
pusha
nop
push
lcall
pop
jns
cmp
pop
in
enter
lea
fadds
fs
xchg
jecxz
jns
add
ljmp
sbbb
cmp
or
mov
sub
inc
imul
sub
nop
cwtl
int3
rolb
add
xchg
cmp
pop
adc
jp
cmpl
fstps
sarb
mov
and
and
mov
out
or
test
push
mov
pop
pop
mov
mov
pop
ret
cmpsb
mov
pop
lret
jmp
sub
stos
or
insb
leave
add
and
add
rclb
xchg
push
add
popf
mov
lds
and
cmpl
xchg
loopne
inc
xchg
lock
jmp
hlt
or
xlat
popa
sub
xchg
mov
inc
dec
std
or
fstpl
mulps
add
mov
lahf
lds
icebp
stos
pop
pop
stc
jle
mov
xor
push
sub
and
add
lds
mov
fisubrl
mov
mov
and
mov
cwtl
mov
pop
pop
sbb
xor
mov
adcb
cmp
push
push
sub
ja,pn
xor
fbld
mov
and
and
in
add
rorl
int
aam
adc
test
mov
xor
popa
sub
push
cmp
mov
cmpsb
loop
mov
fdivrl
fwait
xchg
jne
sbbb
stc
push
adc
push
sub
xchg
adc
test
xchg
push
mov
dec
jle
pop
mov
rolb
xchg
sbb
sbb
xchg
lods
sbb
jne
add
out
je
mov
lock
cmpsl
pop
aad
mov
test
test
xlat
mov
cmpl
cwtl
jns
aad
xchg
jne
lret
test
and
mov
jae,pt
int
ret
and
mov
sub
mov
inc
push
xorl
add
incl
dec
sub
cmp
insb
fstps
mov
xor
push
stc
inc
arpl
fnstsw
push
in
mov
mov
arpl
orl
stos
daa
jo
sub
loopne
mov
in
sti
push
aas
in
pusha
jge
xchg
test
and
or
mov
bound
out
mov
arpl
cmp
or
push
xor
rorl
lods
in
inc
scas
movsb
xor
sbb
pop
out
xchg
leave
rol
inc
mov
sbb
mov
mov
shl
cmp
mov
xor
icebp
js
inc
leave
inc
idiv
pusha
mov
or
pop
in
fstl
add
xchg
lods
in
aas
sbb
inc
xchg
sub
mov
aaa
lods
stc
cmc
jb
inc
lret
sbb
push
push
inc
mov
repnz
lea
sti
fisubs
jnp
jo
mov
xchg
test
add
push
adc
movsb
fimuls
jbe
jne
rsm
scas
fisttps
sub
sbb
inc
jbe
and
add
xor
clc
dec
cmp
gs
outsl
mov
out
dec
jle
and
cmp
sbb
push
pop
xchg
pop
int3
stc
hlt
jl
mov
loope
pop
sti
fnsetpm(287
mov
test
fs
xor
aaa
lods
pusha
jmp
push
cwtl
enter
inc
arpl
jle
movsb
shll
lret
leave
xor
jnp
xchg
adc
aam
cmc
inc
xchg
push
and
clc
pop
inc
pop
xchg
lods
cmp
rcl
jmp
mov
sub
subl
loope
inc
popf
sti
scas
lret
clc
sbb
in
sub
cmp
sbb
jne
sbb
push
adc
xchg
push
fmull
mov
pop
xor
ds
mov
add
cmp
fcoms
and
cld
sbb
push
mov
in
ljmp
clc
aad
mov
sub
jnp
out
or
out
inc
xor
insl
adc
jg
adc
push
icebp
dec
mov
scas
stc
ficoms
loopne
icebp
push
arpl
movsl
add
mov
ret
inc
cmp
cmpsb
popl
out
jecxz
movsb
lods
sbb
stos
fimuls
stos
xor
mov
popa
pop
cmpsb
pop
loop
add
lods
fsubrs
lret
lret
lret
ljmp
pusha
inc
cmp
or
dec
andl
xor
xor
test
mov
pop
aaa
inc
cltd
fnstsw
push
aam
mov
mov
out
and
sub
push
mov
cmp
push
cmp
sbb
mov
xchg
movsb
movsl
mov
push
jo
repnz
add
pop
dec
shll
nop
sub
stc
or
cli
cmc
mov
das
inc
pop
inc
popf
in
dec
aam
inc
xchg
decl
scas
or
lcall
add
jge
icebp
movsl
int
sub
pop
out
mov
mov
and
adc
sbb
fstpl
popa
mov
dec
mov
xor
mov
sub
pop
ret
inc
mov
and
add
out
xchg
lcall
jl
test
or
xchg
out
xchg
jne
add
nop
adc
les
scas
cmpsb
push
or
or
jns
mov
jge
popa
popl
fsubs
push
in
push
aaa
sahf
xor
jne
test
adc
cs
and
out
call
fisubs
arpl
fwait
inc
dec
cmp
dec
add
mov
add
js
mov
add
jmp
mov
cli
mov
shlb
mov
dec
pop
mov
pushf
jp
sti
push
mov
inc
push
sahf
mov
fidivrl
push
jecxz,pn
inc
mov
push
pcmpeqd
call
xchg
cwtl
daa
pop
dec
push
popa
imul
mov
add
mov
sub
shll
mov
and
adc
sub
mov
daa
fisttpll
mov
insl
ss
jne
fldl
dec
insl
call
repz
mov
int
xchg
pop
jae
push
push
xor
pop
cmpsl
xor
jl
pop
jno
loopne
push
arpl
adc
mov
mov
dec
cmp
inc
shr
outsb
sti
cli
add
sub
jp
popf
inc
xchg
jmp
shl
inc
imul
sub
dec
popf
aas
icebp
xor
loopne
popa
and
jecxz
sub
ljmp
adc
cmpsl
cmpsl
icebp
xchg
ljmp
push
loop
mov
clc
jnp
lock
loop
shll
lock
dec
inc
lret
shrb
push
sub
lcall
iret
dec
sbb
scas
jae
ret
in
aaa
dec
leave
push
sub
push
push
icebp
rcrl
mov
jb
and
adc
adc
sbb
fisubrl
and
ljmp
nop
out
inc
fildll
dec
xor
sub
cmp
cmp
sti
mov
in
int3
pop
insb
out
mov
xor
aaa
shll
enter
dec
push
stos
and
sub
repz
lcall
jae
push
dec
or
mov
lahf
out
lahf
jle
mov
sub
mov
movsl
popa
test
sub
dec
push
add
add
fimuls
sbb
bts
insl
sub
ja
shll
inc
push
sub
imul
jp
inc
adc
icebp
xchg
or
stc
dec
xor
shlb
cmp
push
lock
dec
dec
out
push
or
rcll
dec
mov
pop
test
xor
push
nop
pusha
rclb
movb
push
fwait
dec
or
mov
cmpsb
mov
or
cmp
test
or
aas
mov
jo
mov
out
mov
imul
xor
jmp
lahf
cmp
push
mov
xchg
push
stc
pop
imulb
loope
jo
adc
das
cmp
jle
inc
jns
jl
mov
mov
cli
int
lahf
stc
iret
adc
xchg
dec
mov
sub
sbb
fs
mov
sbb
mov
mov
call
jmp
inc
loopne
jns
es
push
mov
sbb
outsb
jbe
xchg
popa
ficompl
mov
ja
adc
rolb
sub
pop
sbbl
sbb
fisubs
xchg
or
fistps
gs
cmp
mov
xlat
pop
cmp
dec
daa
js
xchg
mov
jne
sbb
pop
xchg
xor
and
mov
daa
out
add
pop
inc
push
add
inc
inc
ja
jb
or
rolb
inc
aam
cmc
inc
nop
imul
lret
fs
jmp
jns
or
mov
pushf
out
xchg
ljmp
in
int
lods
fstpt
ja
push
sub
inc
fldl
mov
inc
dec
xor
dec
outsl
stos
cmp
or
out
aaa
xchg
jae
out
jl
adc
xor
inc
test
popl
xchg
xchg
inc
inc
jne
inc
mov
pushf
or
mov
mov
mov
cmp
xchg
and
pop
mov
pusha
jnp
dec
popa
and
fisubl
mov
sbbl
mov
inc
dec
xchg
sbb
or
push
mov
add
mov
push
jne
stc
popf
inc
adc
leave
stos
fmul
js
inc
sbb
pop
xor
call
mov
mov
mov
mov
ljmp
jnp
cmc
sub
aam
cmp
mov
lock
xlat
scas
mov
pop
nop
inc
ds
imul
test
dec
incl
xor
int3
adc
fsubl
inc
cmp
out
fwait
or
movsl
sbb
dec
loopne
dec
inc
rol
xchg
lret
popa
test
dec
mov
sti
mov
in
push
test
fidivrs
cmpsb
repz
sti
enter
sub
in
sub
cmc
mov
mov
jge
jg
push
adc
in
fldt
inc
int
addb
jmp
sub
jne
test
insb
jae
dec
dec
sub
fcomi
mov
push
sub
adc
out
clc
ret
push
add
clc
push
scas
data16
lret
sbb
sbb
xor
mov
xchg
jecxz
push
cmp
lds
out
and
sysenter
sbb
sbb
push
fs
movsl
mov
bound
stos
lea
mov
adc
and
stc
inc
mov
test
ds
sub
sub
sbb
std
lock
sub
jp
push
loopne
dec
movsb
movsb
inc
jnp
imul
lea
xor
test
nop
mov
mov
mov
mov
mov
in
in
sahf
lret
dec
out
mov
mov
pusha
stos
ljmp
shl
jne
aad
mov
cmpsl
push
xor
cmp
jnp
sbb
dec
inc
and
cld
lea
test
pushf
arpl
popf
out
hlt
stos
aas
jp
xor
fildll
push
mov
add
mov
in
aad
subl
test
test
in
xchg
notl
ret
lock
test
pop
scas
xchg
out
mov
push
inc
push
in
stos
cltd
mov
popa
cld
inc
mov
lret
jmp
cwtl
loopne
and
test
scas
or
imul
add
scas
loopne
mov
adc
pushf
mov
sar
outsb
jbe
mov
adc
dec
bound
enter
sub
clc
ficompl
lea
push
add
int
ja
dec
push
push
xchg
mov
push
out
gs
int
cmpsb
xchg
dec
jge
out
daa
dec
sbb
push
mov
mov
sbb
icebp
mov
ret
fdivs
movsl
dec
pop
scas
mov
mov
sub
push
cmpsl
jno
pop
mov
pushf
dec
xlat
dec
insb
mov
iret
fsubrs
inc
repz
jle
lret
movsl
fnsave
jae
cli
add
mov
lea
cs
sahf
fidivs
stos
lret
cmp
aam
adc
insb
xor
lret
add
mov
mov
imul
adc
aad
rol
xor
cltd
inc
cmp
lret
adc
dec
and
cmp
dec
loopne
cs
dec
sbb
dec
push
push
dec
or
dec
std
imul
cs
and
and
ret
scas
lods
incl
adc
les
jge
js
pop
aas
cli
jbe
nop
sub
iret
adc
stos
push
inc
outsl
push
mov
xchg
inc
lods
stos
popa
das
cmp
notl
cmp
adc
cmp
insb
fidivrs
jbe
cmc
int
ror
loope
cmpsb
scas
ja
lea
sub
aas
push
inc
push
je
jl
and
dec
mov
mov
xchg
dec
lret
loopne
mov
fwait
ret
jbe
mov
sbb
pusha
rcrl
dec
cwtl
jle
es
xor
ficoml
stc
out
iret
adc
out
sub
jo
loope
pop
call
xlat
mov
xor
push
das
and
xchg
std
jg
mov
scas
cmp
aas
in
pushf
pushf
xlat
popa
pop
cmp
push
gs
imul
mov
ret
xchg
add
sub
push
ds
lea
xor
dec
pop
pushf
adc
lds
xchg
fld1
sub
fsubl
dec
pushf
sbb
mov
fwait
cmpsl
pop
dec
les
inc
aam
or
mov
jl
aam
xor
pop
into
mov
mov
lea
sbb
ss
jbe
shll
bound
and
rcl
lods
movsl
into
imul
adc
cmpl
sarb
negl
imul
mov
je
pop
int3
enter
mov
repnz
frstor
push
mov
rclb
xor
sub
pop
shll
mov
xchg
iret
hlt
push
hlt
mov
inc
or
fildl
int
daa
movsb
aas
mov
popf
xlat
dec
mov
daa
jo
lret
jp
mov
in
out
pusha
movsl
scas
mov
std
sub
out
and
test
movsb
test
mov
or
and
movb
lret
inc
loopne
dec
pop
repnz
rcll
or
mov
cwtl
rcrb
add
je
pusha
xor
je
scas
mov
adc
nop
jns,pn
repnz
out
lods
ss
loopne
push
or
jmp
mov
adc
sbb
xchg
xchg
mov
iret
mov
lds
ss
sbb
out
lds
idivb
jp
sub
cmp
sti
cmp
cmp
decl
mov
xchg
scas
popa
out
mov
and
adc
cmp
pop
es
sbb
xor
or
jbe
xchg
or
jno
mov
cmp
inc
stos
push
push
gs
aam
add
fs
jmp
in
insb
cmp
addr16
loope
pop
xchg
test
repz
sbb
aam
jne
fsubl
dec
add
mov
les
cld
lea
daa
pop
mov
in
push
xchg
mov
sub
cmp
int3
pop
pop
lahf
jge
fistps
addl
std
enter
jo
out
fcompl
cwtl
scas
std
push
add
gs
comiss
or
cltd
je
repnz
dec
xlat
cmp
hlt
int
fdivp
inc
aaa
sbb
leave
roll
cld
in
ljmp
adc
fbstp
dec
mov
out
inc
and
or
in
and
add
les
xchg
arpl
movsb
clc
dec
dec
xor
sbb
xchg
orb
int
addr16
lods
lcall
xor
pushf
repnz
aam
and
jmp
push
jg
xchg
pop
inc
add
out
or
xchg
das
loope
aaa
test
gs
inc
jne
fwait
idiv
subl
mov
sub
test
dec
dec
insb
mov
adc
xorl
fcomps
mov
stos
xor
cmp
divb
test
repnz
out
out
lret
pop
ret
mov
cmp
mov
mov
pop
and
inc
cmp
addr16
idivl
fcmovbe
test
jp
pop
adc
std
stos
aaa
hlt
pop
arpl
sbb
adc
sub
mov
popa
xlat
xchg
adc
lahf
mov
stos
cmp
pop
jmp
lret
ret
imul
andl
adc
test
stos
das
or
and
in
mov
popf
sbb
sub
xchg
fidivrl
jbe
sub
pop
xchg
rol
aas
data16
or
add
shr
nop
and
xchg
fimuls
mov
sub
mov
push
mov
bound
pop
jb
bound
mov
call
pop
and
stos
jl
out
mov
dec
jle
inc
cltd
je
or
push
pop
sbb
insb
addr16
mov
push
pop
mov
andl
add
lea
sti
xlat
mov
cmp
add
int
ret
insb
push
je
xchg
cmp
stos
icebp
sbb
jne
out
xor
push
inc
jno
in
das
popa
push
jbe
or
mov
mov
insb
aam
fisttpll
insb
hlt
xchg
sbb
mov
mov
stos
ss
repnz
es
imul
scas
cmp
mov
les
ror
arpl
add
rorl
and
dec
mov
popa
dec
pop
mov
pusha
lcall
xchg
sbb
scas
or
es
or
daa
sub
shlb
test
mov
loop
enter
push
and
pop
cltd
push
enter
jle
mov
scas
cmp
inc
cld
add
sbb
jns
mov
add
cmpb
pop
xor
jbe
cmp
inc
cmp
outsb
iret
sub
jecxz
or
adc
mov
mov
repnz
cmpsb
lock
and
ret
loopne
aaa
lods
sarl
lcall
mov
pusha
xor
stc
jl
mov
inc
pushf
movsl
in
in
mov
xchg
imul
punpckhdq
mov
fcomip
push
push
lcall
push
xor
pop
out
les
xchg
adc
inc
push
imul
push
and
shrb
out
das
sar
push
xchg
imul
pop
negl
fdiv
rcr
clc
xor
pop
js
dec
cmp
cmc
lcall
call
call
pop
or
ds
mov
or
sub
int
ret
and
push
les
pop
mov
mov
mov
sub
xchg
pop
add
and
iret
jno
add
xchg
push
xchg
pop
push
scas
mov
jno
dec
pshufw
es
sarb
bound
xchg
xor
pop
sub
daa
xor
insl
jns
push
das
inc
insb
out
dec
ret
lock
or
out
mov
mov
or
sbb
jbe
cmpsl
xor
inc
fcmovnu
stos
es
and
fs
aad
inc
cmp
fisttpll
mov
cmp
push
ss
sub
xchg
loop
inc
das
xor
mov
inc
jns
cmp
ljmp
pop
call
or
dec
das
cmp
cmp
mov
xchg
clc
pop
jb
xchg
or
cmp
out
dec
sti
mov
adc
mov
sysexit
jp
js
cmp
push
inc
cmp
gs
mov
jecxz
call
xorl
jno
pop
xchg
js
es
mov
aas
mov
inc
stc
ja
pop
insl
lahf
jo
push
ret
cmp
mov
xchg
mov
jmp
aam
jecxz
fcmovnb
push
cmpb
mov
sub
jns
iret
mov
cmp
or
subb
repz
dec
xlat
xlat
jle
out
outsb
and
cmpsb
xchg
mov
inc
mov
mov
xchg
push
lahf
jns
push
addr16
and
cmp
xor
xor
mov
pop
mov
ja
mov
aas
mov
mov
testb
add
mov
scas
sbb
push
sbb
add
cld
and
pop
cmc
mov
repz
test
pop
mov
xor
test
shlb
into
aad
adc
test
fdiv
sbbb
xor
xchg
sub
lahf
sbb
popf
sbb
popa
xchg
shlb
pop
xor
ret
jne
cli
movsl
neg
cmp
sub
jbe
cmp
add
lahf
or
jecxz
push
adc
call
jae
outsb
inc
movsb
test
lock
sub
pop
push
mov
movsb
xchg
shlb
inc
ss
out
mov
rcrb
xor
add
push
fistpl
adc
je
xor
cmp
cwtl
sbb
lods
xchg
lods
es
leave
push
push
jb
mov
divl
fcmovnbe
repnz
pop
ljmp
into
scas
cmp
inc
jne
gs
cmc
mov
or
loop
add
dec
push
pop
jmp
lock
test
out
jl
jne
lahf
jl
fidivrs
pop
je
inc
sbb
insb
cmp
dec
rorl
jge
dec
inc
jnp
xor
lret
arpl
push
pop
mov
icebp
push
mov
js
xor
or
mov
or
inc
es
scas
shl
mov
xor
frstor
repz
fs
xchg
shll
adcb
push
inc
sub
jl
cs
push
cmp
fwait
push
cmp
icebp
out
pop
cmp
mov
push
jo,pt
mov
scas
jge
push
xchg
into
shll
shlb
jl
xchg
cmp
inc
jge
jge
xchg
mov
and
sbb
xchg
fucomip
stc
cmpl
sti
lods
bound
or
adc
sbb
inc
or
xor
sub
xlat
mov
lea
push
dec
fidivs
std
cld
aaa
jl
inc
dec
sbb
subb
sti
jb
mov
cmc
jns
sbb
cltd
test
std
dec
in
xchg
ret
push
mov
repnz
lea
enter
popa
mov
mov
push
loop
sbb
lret
aas
pop
mov
outsl
jp
xchg
and
movsl
jo
mov
popf
jle
jb
sub
pop
je
repnz
icebp
or
pop
jbe
sub
or
ljmp
mov
cld
lds
push
jno
pop
jecxz
fmul
add
add
lds
adc
jbe
and
sub
test
adc
add
out
push
jb
sbb
ret
sbb
ljmp
xor
jb
lods
inc
rclb
dec
rcrb
jp
pop
loopne
je
jnp
push
arpl
loopne
aad
and
jb
mov
mov
or
xchg
push
fildl
in
test
scas
or
inc
push
push
les
outsb
xor
and
sar
mov
gs
out
test
dec
mov
cmp
jle
imul
idivb
cmp
int3
imul
scas
gs
roll
cmpsl
pop
loope
je
test
in
or
scas
pop
loope
in
xchg
out
xchg
popa
andps
pop
fdivrs
xor
cmp
and
popa
inc
or
inc
lcall
sbbl
nop
int3
inc
sbb
push
aam
inc
mov
dec
in
aas
cmpsl
push
and
mov
sub
in
pop
mov
mov
inc
mov
jge,pn
push
push
addr16
lcall
stc
rorl
push
jle
jecxz
pop
jl
cmp
add
sbb
imul
lods
inc
test
ja
dec
out
sub
mov
mov
fisubl
lds
jno
js
jns
scas
sbbl
mov
or
jecxz
dec
nop
or
int3
bound
pop
out
aam
decl
pop
mov
imul
jmp
adc
pop
pop
and
and
pushf
adc
stos
pop
xchg
jg
int3
fcompl
fimull
out
xchg
jnp
mov
push
adc
fistpl
add
shr
addl
sbb
xchg
andl
dec
mov
into
out
je
lahf
inc
lock
imul
mov
dec
pop
mov
enter
or
in
xchg
xor
repnz
push
inc
xchg
jne
pop
out
mov
scas
xor
adc
lret
test
pop
test
scas
loop
dec
mov
jae
nop
fwait
mov
fwait
mov
lret
sti
adc
aad
xchg
pop
lea
sub
jecxz
jecxz
xor
mov
mov
push
or
ffree
mov
aas
mov
push
push
or
cmpsl
lods
out
xor
mov
xchg
xor
and
cmp
mov
pop
sbb
push
mov
adc
out
pop
cmc
aad
stos
mov
or
ds
andb
out
loopne
mov
mov
mov
xchg
aad
ret
or
ja
jb
aas
js
in
sbb
adc
inc
leave
mov
dec
shl
lods
in
jnp
std
stc
and
aad
lret
fsubr
mov
inc
xlat
sahf
insb
cmp
cs
jl
jae
add
or
sbbl
notb
pop
cmp
mov
adc
and
mov
popf
jbe
loope
xchg
mov
jae
shrl
pop
xor
sbb
test
sbb
outsb
push
ret
adc
dec
lds
xchg
pop
and
clc
sub
cmp
adc
lock
push
iret
jo
jmp
shll
es
inc
fucomp
data16
and
dec
push
popf
popa
imul
insb
xchg
push
or
mov
jle
rcrb
jne
jl
sbb
movsl
dec
movsl
xorl
ds
jecxz
xchg
xorl
or
ljmp
lods
popf
and
xor
sarb
loope
inc
xchg
cmp
ja
loop
jne
or
and
mov
and
xorb
test
push
sub
dec
test
pushf
adc
adc
test
cmp
hlt
sar
sbb
pop
inc
mov
movsb
sbb
repz
push
mov
mov
mov
outsb
clc
or
cmpb
in
loope
xor
jecxz
or
ret
mov
jne
fmul
mov
setp
aam
add
sub
xor
jnp
push
clc
scas
dec
push
and
xchg
sub
pop
and
push
push
faddl
sbb
popa
add
mov
call
mov
ret
mov
or
xorl
ret
push
imul
shlb
out
add
arpl
sub
shl
dec
dec
or
and
je
cmp
mov
jp
xchg
xor
xchg
mov
roll
mov
notl
push
in
sbb
loope
pop
sbb
and
add
insb
push
hlt
mov
and
in
jg
dec
dec
inc
into
popa
cmp
jge
cmp
jl
xchg
cld
and
mov
pop
pop
jle
mov
mov
test
cmp
push
dec
cltd
pop
in
sub
adc
lock
ds
imul
repz
jl
mov
sti
imul
and
jp
mov
adc
out
mov
pop
stos
jns
fucomp
rcll
dec
addr16
mov
movsb
shll
das
outsb
push
xchg
adc
xchg
sahf
fstl
das
fistpll
xchg
push
movsb
fistpl
jge
inc
mov
lahf
stc
fdivs
mov
shrl
bnd
jg
lock
inc
sub
sub
mov
cmpb
mov
inc
inc
fstps
dec
idiv
shrl
sub
fsubrl
addr16
js
fwait
mov
sub
jl
xchg
outsl
pop
sbb
cmp
and
xor
mov
cmpsb
loopne
ja
dec
cltd
in
pushf
cmp
aaa
pop
xchg
in
leave
das
movlhps
xor
jp
dec
inc
and
xlat
scas
ret
stc
ljmp
cmp
jnp
in
adc
inc
jg
inc
icebp
mov
out
lods
adc
fstl
jbe
mov
mov
mov
subb
mov
mov
add
pop
cwtl
jmp
xor
push
dec
pop
push
in
mov
jb
lret
aaa
inc
sbb
rcrb
mov
pop
ja
inc
xchg
inc
insb
pusha
pop
ja
sub
dec
cmp
jae
imul
nop
rolb
dec
ficoms
cmp
mov
clc
cmp
std
aad
jns
add
fs
dec
mov
pop
push
fdiv
pop
clc
ret
xor
jo
push
stos
cmp
stos
add
gs
jg
decl
push
cwtl
xchg
xchg
mov
sbb
inc
jge
jne
inc
nop
test
inc
jl
int3
sbb
pop
mov
xorl
jl
mov
jno
pop
hlt
cli
cmp
jns
jbe
stc
pop
jecxz
pmulhw
out
and
mov
push
jp
xchg
push
jecxz
shlb
pop
lcall
and
inc
and
xor
stos
insl
push
and
rorl
test
cmp
stc
lods
and
pop
mov
hlt
out
dec
pop
bound
lods
cs
ret
mov
cmpsb
add
pop
pop
lods
push
or
cmpb
and
inc
pop
mov
int
jnp
jmp
mov
xor
lcall
test
jnp
xchg
in
mov
xor
mov
int
pop
enter
dec
js
mov
push
je
mov
add
and
fidivs
cwtl
aam
movsb
rorb
cld
mov
ja
icebp
push
xor
fcomip
and
dec
dec
cmp
push
mov
adc
cmp
out
rorb
mov
inc
push
clc
xchg
cs
add
shrb
jle
out
mov
rcr
movsl
pop
push
pop
repnz
add
inc
test
pushf
sbb
mov
mov
add
adc
jb
cmpsb
shll
jp
dec
jle
jecxz
adc
mov
adc
inc
cmp
pop
dec
in
xor
xchg
xchg
sbb
mov
icebp
mov
mov
sub
sub
push
add
add
stos
fwait
mov
sub
mov
movsl
cmp
mov
cs
sbb
pop
jo
inc
mov
cmpsl
xchg
ljmp
mov
je
mov
data16
movsb
jecxz
cmpsb
xchg
popf
push
lcall
ret
ds
mov
stc
sub
xor
data16
or
mov
and
scas
pop
out
mov
and
mov
adc
cld
lcall
arpl
sti
jle
jns
aad
lret
and
sub
push
outsb
mov
mov
or
inc
xor
call
mov
inc
pop
in
imul
dec
inc
xchg
mov
sti
dec
sar
sbb
dec
ss
inc
test
push
pop
rorl
js
in
rcrb
xchg
pcmpgtd
cmp
std
adc
inc
mov
popa
cmc
test
adc
call
iret
int3
cs
adc
subb
out
jo
mov
lea
mov
sbb
data16
pop
aaa
lods
cltd
fwait
jmp
xchg
sbb
mov
popa
cld
xor
inc
mov
insb
inc
call
stc
lock
add
addr16
insb
pop
cmpl
push
cmp
nop
push
nop
sbb
xchg
xchg
in
inc
jl
push
enter
sahf
xchg
xor
shrb
test
out
adc
jnp
adc
dec
mov
adc
or
repnz
jbe
inc
mov
fwait
cmp
push
shlb
popf
adc
hlt
adc
jo
mov
in
mov
mov
stos
mov
jmp
pushf
cwtl
sbb
cmpsb
repz
addr16
subl
sbb
push
data16
cmp
cmp
dec
sub
mov
jae
fbstp
imul
scas
or
jecxz
fisubs
mov
cli
lods
xchg
sbb
pop
rcrb
mov
dec
orl
inc
add
jo
xchg
test
fadds
mov
jo
call
das
clc
mov
cmp
sub
fwait
pop
aas
fs
cmpsb
imul
std
jno
ljmp
push
xlat
fldt
xchg
cmp
icebp
hlt
cmp
sahf
push
ss
cwtl
daa
push
or
mov
mov
nop
rolb
and
dec
fs
inc
imul
movsb
dec
mov
jl
bound
loope
mov
dec
lahf
lock
dec
xor
dec
fidivs
xor
in
inc
dec
jbe
sbb
jbe
inc
mov
xchg
mov
mov
add
cwtl
jb
lock
mov
jp
sub
mov
jno
testb
mov
imul
inc
push
in
or
in
push
out
dec
imul
ret
lret
push
nop
es
in
mov
andnps
jae
leave
mov
inc
mov
cmp
xor
aam
pop
stos
mov
pop
mov
sbb
adc
lods
lret
insl
fnstsw
pop
mov
xorb
cltd
push
jmp
mov
pop
pop
into
in
cmp
cmp
or
sub
call
and
mov
sbb
test
add
addl
sub
shl
orb
loopne
mov
cmpsb
mov
stos
popf
mov
imul
enter
outsl
std
jge
mov
ret
ret
jnp
das
movsb
std
lock
or
and
out
xor
mov
sarl
pop
cmp
or
xchg
xchg
push
and
and
fildll
gs
aaa
mov
iret
rcrl
pushf
inc
xchg
daa
dec
ret
lret
jns
je
cmpb
inc
add
mov
or
sbb
inc
outsb
loope
test
and
sub
pop
adc
int3
and
les
pop
add
dec
add
and
jo
xchg
in
int3
mov
rorl
sub
jne
pushf
outsb
jge
es
ror
pusha
int3
in
movq
cmp
xchg
jne
cltd
call
and
clc
pushf
dec
and
arpl
pushf
int3
push
sbb
and
cli
popa
lock
shr
fs
dec
sub
dec
fchs
sbb
push
fbld
push
xor
mov
xchg
adc
loope
aam
les
pop
jg
and
js
bound
mov
repnz
adc
sbb
jns
addl
flds
out
mov
push
insb
jno
add
or
into
cmpsb
testb
lods
pop
popa
sub
aas
test
push
outsb
inc
pop
xchg
jns
mov
pop
lea
dec
push
jmp
imul
lea
js
xor
push
jge
inc
push
jp
aas
mov
push
push
ss
push
jne
or
fstpt
push
int
dec
sub
orb
pop
out
inc
pop
bndldx
pusha
and
jae
pop
shl
pop
js
jmp
sti
sbb
jns
dec
es
lock
jl
cltd
sbb
add
out
pop
xchg
mov
jp
or
mov
fcmove
or
and
dec
xor
orl
mov
rcl
cmp
jbe
cld
xchg
push
fadd
jnp
mov
and
lds
inc
xor
aaa
shr
mov
sbb
fiadds
cmp
add
and
sbb
and
cmp
testl
daa
iret
dec
not
xor
mov
jecxz
add
mov
adc
mov
in
cmp
jmp
sbb
ficompl
jb
jno
sbb
cltd
jbe
das
inc
jno
xor
ds
cmp
pop
sbb
and
sbb
arpl
das
pop
lds
push
adc
inc
fwait
popa
lret
leave
bound
pop
and
rolb
test
rorl
jns
lock
adc
pop
inc
jbe
sti
sbb
sbb
scas
mov
xor
xchg
fs
and
test
mov
in
dec
pop
leave
push
rcr
loope
push
xchg
lcall
scas
stos
jnp
inc
gs
lods
stc
in
mov
xor
xchg
inc
fwait
cmp
rcrl
add
les
mov
fwait
es
push
insl
xchg
ljmp
decb
bound
xor
inc
or
cltd
dec
cmpsb
repnz
out
bound
ljmp
push
dec
push
mov
loope
mov
in
xchg
fdivrp
pop
test
adc
es
push
inc
mov
and
add
test
loopne
fwait
ds
or
out
mov
mov
xchg
orl
leave
addr16
mov
push
push
int3
vmovups
loope
xor
pusha
add
or
cmp
jge
cmp
and
or
or
mov
lods
xchg
addl
dec
fsubrl
jno
inc
and
adc
jnp
lret
fcmovbe
outsl
ljmp
and
frstor
sbbl
pop
test
pushfw
pop
int
lahf
xchg
rorl
sar
jne
cwtl
mov
adc
aaa
inc
mov
fcom
rcr
out
pop
fcompl
xor
cmp
add
xchg
divb
std
dec
sub
out
popf
xchg
cmp
popf
sti
fadds
popa
shrb
adc
sub
or
scas
int
adc
popf
mov
inc
xchg
jo
adc
loop
mov
gs
rcrb
jecxz
arpl
dec
ljmp
enter
aas
jecxz
fsubrp
ss
cmp
push
pop
loopw
movsb
ret
adc
mov
xchg
pop
ds
and
int3
cwtl
inc
mov
ror
sbb
arpl
jecxz
xchg
adc
sub
cmc
aas
lret
aas
pop
popf
ret
std
dec
cmp
sub
xor
data16
xor
sbb
out
inc
insl
lret
mov
push
lods
cmp
sbb
push
inc
push
mov
jns
adc
stc
loopne,pn
pusha
or
fcomi
lods
dec
mov
jp
jmp
mov
fwait
popf
xchg
mov
add
and
pop
int3
adc
imul
add
lcall
pop
in
fidivrl
mov
test
mov
movb
and
sub
add
lea
sbb
ljmp
jge
es
outsb
lods
shl
ljmp
cmp
dec
jno
mov
mov
mov
daa
sar
jae
jno
sbb
dec
mov
ljmp
cld
ret
in
mov
mov
repz
lds
sbbb
test
fldcw
jecxz
mov
inc
mov
or
add
fidivl
mov
push
cmp
and
fldenv
and
mov
repz
nop
aaa
pop
adc
mov
arpl
and
inc
icebp
xchg
mov
mov
mov
fiadds
dec
fstps
pop
cmp
sub
out
lahf
xchg
aad
pop
or
aad
adc
jns
outsb
or
xlat
ss
xor
rcrl
cmp
hlt
sti
adc
mov
push
mov
xor
xchg
pop
daa
daa
xlat
dec
iret
mov
pop
sbb
cmp
xchg
and
jge
xor
pop
test
test
mov
pop
loope
push
push
xlat
pop
mov
pop
ss
ja
leave
jb
sti
mov
pusha
iret
nop
or
popa
das
jno
aas
adc
pop
pop
sub
ja
loopne
shlb
pop
xchg
and
rcrb
cmp
fmuls
nop
out
lods
push
jecxz
pushf
inc
mov
mov
inc
push
sbb
and
bound
mov
js
repnz
xor
sarl
add
xchg
push
jno
sbb
and
int
or
ds
test
mov
xchg
mov
rclb
mov
dec
int3
xchg
jl
call
or
shlb
repz
ficoml
xchg
roll
push
push
push
mov
sub
hlt
rcl
test
inc
mov
jo
jge
fstps
cld
jp
jmp
sbb
cpuid
and
shll
add
jmp
fistpll
jo
xchg
stc
mov
cmp
fsubs
xor
sub
inc
or
cld
add
adc
call
cmp
inc
mov
xor
outsb
cmpb
js
call
lods
sub
cmpsb
lock
cmpsb
and
out
arpl
in
push
inc
jg
fstpl
adc
sub
sbb
or
xlat
loope
pop
repnz
xchg
sub
sub
mov
sbb
cld
mov
loop
jmp
cmp
dec
lock
loop
icebp
cmp
mov
mov
or
roll
sbb
push
add
call
jg
ds
xor
adc
xorb
jle
scas
push
popa
stos
jno
xchg
scas
arpl
mov
in
mov
pop
xchg
loop
mov
out
add
sarl
lahf
repz
sbb
inc
mov
pop
orb
mov
lods
mov
jbe
outsl
sub
and
cmp
mov
push
call
lds
in
fwait
mov
les
std
dec
lahf
loop
mov
and
in
inc
lahf
orb
lret
pusha
outsl
decl
stc
pop
sbb
cmp
stos
sti
cli
dec
adc
dec
loopne
dec
inc
ret
cmpsb
mov
enter
dec
imul
mov
jno
pop
push
ret
ja
jb
call
push
push
xor
mov
cmp
ja
dec
mov
pop
inc
mov
inc
pop
adc
sahf
lods
mov
push
out
cltd
sbb
inc
push
mov
xchg
jg
inc
fstpt
or
mov
xchg
hlt
xor
jmp
fisubrl
hlt
cmc
sub
int3
add
scas
xchg
cmpsl
cmp
add
push
inc
mov
dec
pop
cmp
xchg
lods
out
loop
outsl
xchg
and
or
sub
shlb
adc
or
jg
push
cmp
repz
ljmp
xor
xor
xchg
in
loop
js
cmp
stc
mov
lea
loop
inc
xor
test
jnp
sub
mov
xor
cwtl
and
mov
push
lea
repz
fcoml
xor
ret
out
iret
sub
cmp
pop
fcomps
mov
xorl
insl
push
repz
pop
fucom
enter
mov
movb
dec
xor
flds
orb
sbb
out
pushf
inc
adc
ljmp
and
mov
movsl
inc
pop
sub
jl
add
call
xchg
outsl
int
or
xchg
cmpsl
in
pushf
in
icebp
xchg
gs
and
pop
mov
push
xchg
clc
lods
mov
stc
sub
sub
mov
mov
pop
fcoml
sarl
sub
out
cmc
and
xchg
lods
fcmovbe
xor
push
out
daa
xchg
loope
push
fs
mov
fldcw
mov
inc
pop
mov
sbb
cwtl
jno
les
sbb
repz
lcall
jns
or
mov
xchg
mov
push
test
dec
xor
ds
push
rcrb
ss
cmpsb
mov
gs
and
insb
cmp
shll
pop
nop
or
pop
into
fdivl
ret
stos
push
xor
jmp
scas
pop
pop
stos
stos
fimuls
cmp
xlat
in
inc
push
in
push
mov
or
inc
sbb
imul
mov
jge
add
add
hlt
cmc
dec
aad
icebp
pop
xchg
xchg
sbb
or
outsl
gs
int
mov
xchg
adc
cs
ret
xor
aam
sub
out
test
mov
movsb
shrl
movsl
int3
jmp
hlt
lea
and
dec
xchg
dec
inc
sti
mov
pusha
mov
out
add
js
sbb
daa
xlat
dec
mov
inc
jb
rcrl
scas
inc
stc
cwtl
scas
enter
dec
jle
and
popa
sub
pop
test
pusha
loopne
sub
imul
shl
leave
sbb
mov
fwait
repnz
jp
push
add
dec
sub
push
push
adc
loope
ja
pop
inc
fs
jl
iret
cwtl
jge
mov
sbb
cltd
idivb
setp
repnz
mov
xchg
xor
fbstp
ljmp
mov
mov
arpl
js
dec
xor
mov
lret
aam
lcall
ret
jge
int3
mov
mov
stos
sbb
xor
mov
aad
movsb
and
jecxz
les
imul
ljmp
add
pushf
sub
inc
mov
or
mov
jbe
xchg
in
ss
dec
and
scas
fbstp
xorl
mov
dec
xchg
push
fwait
xchg
outsl
and
lret
inc
ss
push
fcmove
mov
dec
add
mov
add
nop
stos
lock
cmp
cmpsb
scas
adc
mov
pop
push
in
xchg
and
addr16
mov
xchg
into
imul
lret
mov
test
fdivr
fwait
push
sbb
aas
pop
mov
jmp
les
popf
mov
or
cmp
insb
xchg
sbb
dec
pushf
mov
sahf
or
outsl
fsubrp
cmp
out
incb
pop
out
push
ret
lahf
cwtl
jle,pn
sarl
xor
push
popf
xchg
pop
sti
add
mov
jnp
cwtl
inc
cmovge
push
and
xor
pop
xchg
sub
je
and
mov
fsubrl
les
outsb
jge
in
jmp
or
sub
and
add
pop
adcb
mov
clc
aaa
adc
pop
test
les
pop
push
and
out
jno
es
fistpll
cmpsl
enter
daa
ss
and
mov
pop
mov
mov
loopne
adc
out
and
push
inc
sbb
and
into
test
xlat
imul
loopne
dec
push
sub
inc
xchg
xorb
dec
jmp
inc
cmp
pop
mov
insb
mov
pop
pusha
inc
mov
into
mov
xorl
pusha
sub
or
sahf
xor
push
jmp
sarl
pop
sbb
inc
stos
pop
push
int
enter
xchg
icebp
mov
or
leave
testb
cmp
out
lock
stos
and
in
add
cmp
pushf
in
push
mov
cmp
adc
pop
jo
fldcw
dec
addr16
cmpsl
decb
cwtl
xor
push
aam
pop
pop
cld
jo
les
inc
jg
ds
or
or
leave
mov
sub
push
addr16
bnd
sbb
lock
xlat
cwtl
jbe
jmp
filds
stos
out
mov
cmpsl
sbb
cmp
ss
sar
addr16
aaa
imul
inc
inc
mov
das
add
mov
push
addr16
cmc
jns
sub
lahf
xchg
dec
cmp
sahf
jp
mov
push
sub
xchg
push
ret
jae
jmp
lea
dec
lret
adc
sbb
imul
loope
jns
or
js
aam
popf
cmp
cmpsl
mov
nop
call
mov
jbe
push
lret
rcr
out
mov
sub
shl
mov
leave
scas
movsb
inc
iret
leave
sbb
dec
cmp
cmp
lahf
and
fs
pop
out
loopne
test
sbb
in
addr16
add
xchg
scas
sar
sbb
mov
or
inc
aaa
cltd
lock
and
gs
pop
mov
dec
add
sbb
rclb
xchg
in
pop
fisubs
fisubrs
jg
add
cli
mov
jbe
push
sub
jo
jo
jl
mov
xchg
faddp
dec
idivl
adc
add
scas
pop
out
ljmp
pop
jle
mov
mov
pop
fistpl
inc
sahf
or
incl
lods
xchg
faddp
mov
out
fbld
addr16
jmp
es
xchg
aam
lret
xor
test
push
sub
outsb
jl
int3
fsubrs
cmp
push
add
or
jle
mov
int3
xchg
shll
ds
mov
out
aas
cmpsl
jmp
out
dec
and
jbe
jle
inc
xchg
push
mov
mov
shl
int3
xor
fadds
das
mov
or
adc
mov
xchg
xor
cltd
mov
xchg
xor
jo
gs
aad
xor
mov
scas
push
sbb
bound
dec
rol
mov
cmpsb
sub
into
pop
inc
out
push
test
adcl
mulb
outsl
xor
mov
push
negb
push
adc
hlt
addb
sub
push
push
dec
lds
cmp
scas
sub
mov
or
push
and
sbb
cmp
and
or
jmp
in
xor
jb
jmp
lret
shlb
minps
adc
sahf
pop
or
push
lds
in
mov
push
iret
das
int3
pop
lds
add
xor
adc
out
stc
inc
adc
cltd
xchg
dec
shrl
sub
cli
inc
jl
and
movzbl
shlb
add
sub
in
inc
das
and
cld
dec
les
pop
test
stos
mov
ficomps
out
cli
call
dec
xrelease
in
fstpl
pop
add
inc
xchg
scas
add
sahf
pusha
mov
inc
pop
push
pop
xchg
sbb
mov
mov
popa
inc
lcall
xor
add
push
lret
pop
sub
xchg
or
pop
into
push
cwtl
jl
popf
pop
push
or
inc
sub
xchg
cwtl
cli
add
dec
xor
addr16
iret
inc
nop
mov
shrl
sahf
in
stc
stos
mov
fisubrs
inc
sub
shlb
call
into
fmul
lock
dec
xorl
faddl
orl
or
cld
sbb
test
enter
lds
push
cld
mov
mov
scas
or
or
imul
scas
pop
pop
cli
push
sbb
xchg
loop
movsl
pop
mov
mov
rorb
repz
imul
push
or
pop
sbb
add
pusha
popa
mov
cltd
cmp
dec
push
xchg
and
mov
in
jo
aas
shrb
pusha
stos
popa
adc
push
cwtl
or
sbb
sub
and
xchg
inc
aam
or
xor
jle
pusha
sub
test
roll
es
es
dec
pop
sarl
xchg
and
dec
addl
adc
jge
lret
cmpsb
lods
jg
lahf
push
add
scas
dec
push
mov
lods
jae
mov
or
xor
xchg
xchg
xchg
lock
xchg
or
pop
pushf
lea
push
clc
inc
adc
ljmp
imul
xor
push
int3
popa
loopne
and
loope
xchg
or
fwait
add
lea
ljmp
pop
data16
outsl
inc
mov
mov
incl
mov
nop
out
jge
jne
arpl
imul
xor
jo
cltd
jg
orl
jnp
repnz
jno
mov
lret
inc
cmp
mov
inc
adc
cld
jo
leave
mov
iret
adc
or
syscall
sub
gs
int
xor
mov
rcll
pop
popf
jmp
loopne
sub
incb
xchg
imul
xlat
das
sbb
mov
lahf
jb
adc
dec
fstpl
jle
in
imul
jecxz
pusha
cmp
lahf
scas
leave
cwtl
inc
xchg
cmp
das
mov
lcall
in
hlt
cli
xor
out
mov
xor
cmpsb
jno
dec
cmp
fstpl
je
movsl
xor
enter
addr16
test
shll
gs
stos
add
add
int
sbb
or
mov
movsb
gs
mov
lahf
rolb
adc
in
cmp
fwait
daa
data16
inc
movsb
xor
pop
in
int
fnstenv
push
sbb
mov
mov
add
es
out
lea
adc
sub
stc
je
pop
add
xchg
inc
and
jnp
xchg
out
in
popf
mov
fwait
rcl
xor
mov
push
js
or
data16
sarl
scas
mov
emms
clc
xor
icebp
aas
push
cmpsb
sub
cmp
cmc
fcmovnbe
hlt
mov
xchg
lock
out
and
shrl
cltd
idivb
clc
dec
in
or
loope
xchg
cwtl
or
fsubrs
adc
in
jle
int3
test
aad
pushf
outsb
mov
movsl
and
mov
pop
push
push
adc
enter
pusha
fisubs
adc
or
jg
in
xor
in
mov
mov
xor
sub
mov
sub
repz
icebp
add
dec
ljmp
out
or
mov
insl
aam
call
inc
push
lods
dec
mov
jp
pop
xlat
xchg
daa
xchg
cli
adc
fcoms
dec
dec
jp
lds
xor
call
in
lock
out
mov
aaa
jp
test
iret
xor
sbb
adc
aad
pop
push
dec
xor
inc
fdivr
mov
sahf
sub
fnstcw
push
cmp
push
jns
imul
add
rdmsr
sti
fld1
sub
and
or
cmc
bnd
into
mov
sub
aaa
push
or
jle
aad
xchg
loopne
jle
add
mov
sbb
nop
lock
repz
les
test
cmp
cmp
into
imul
aad
mov
nop
adc
out
je
jns
cltd
lahf
mov
loop
mov
shr
mov
pop
clc
js
sub
mov
cmpsb
sarl
les
ret
jns
ror
sub
push
cmp
daa
cmpsl
and
adc
fidivl
mov
jns
jp
adc
mov
icebp
arpl
add
mov
stos
rorl
in
add
push
push
mov
jae
inc
subb
sbb
xchg
repz
cmpsl
cmp
xchg
dec
lret
dec
mov
bound
jl
adc
push
and
std
insb
dec
mov
sbb
in
xchg
inc
roll
bnd
push
lods
or
xor
insl
mov
das
scas
int3
insb
push
push
fwait
cmpsl
cmp
loope
mov
test
iret
xor
and
sahf
mov
add
and
lcall
sbb
xchg
jbe
and
cmpsl
dec
mov
test
int3
ljmp
push
mov
pop
push
pop
push
mov
push
mov
inc
jmp
mov
cmpsb
mov
jg
les
sub
inc
hlt
push
sub
cltd
iret
rsqrtps
out
mov
lea
imul
bound
movsl
adc
pop
addr16
inc
fisttps
pop
aam
mov
adc
sahf
fsts
xchg
das
or
xchg
aaa
cld
ret
cmpl
insl
orb
xor
jp
ss
lret
mov
fdivl
lods
inc
ja
sbb
cmp
or
jmp
outsb
jne
push
push
in
stc
and
out
push
ljmp
aam
repz
jecxz
mov
sti
ds
fistpl
pop
pop
arpl
or
jmp
cmpsl
decl
pop
aam
movsb
mov
and
mov
gs
mov
dec
cmp
fcom
add
mov
dec
leave
push
jno
mov
ret
mov
rcrl
bound
lods
adc
scas
cmp
repz
push
out
sbb
rorb
xchg
aam
adcl
or
mov
cs
sarl
sahf
dec
xor
ret
adc
inc
lds
pop
fildll
rcrl
jle
mov
ret
xor
or
jmp
icebp
mov
xchg
mov
ret
daa
add
sbb
cmpsb
loope
leave
in
mov
push
add
outsb
je
xor
push
in
xor
push
pop
cli
jns
nop
lock
loop
xchg
daa
mov
hlt
mov
jb
sub
cmp
fdivrl
mov
cmp
lcall
jecxz
movsl
imul
fs
or
sbb
cwtl
je
cli
cmp
add
xchg
repnz
jnp
mov
add
imul
mov
movsb
outsb
cmpsb
add
js
ret
hlt
sbb
repnz
movsb
jno
sahf
mov
hlt
imul
hlt
xchg
enter
arpl
loopne
int
iret
sarl
add
outsb
sbb
daa
call
movsl
pop
imul
sti
dec
cmp
outsb
ret
imull
pop
dec
xchg
imul
test
ss
cmp
mov
push
cmpl
jp
cmp
push
push
out
dec
outsb
fimuls
sti
test
test
and
sti
mov
test
dec
lods
adc
je
inc
fcoms
inc
in
mov
outsb
int
stos
jge
enter
icebp
jno
dec
addl
mov
gs
mov
fcoml
pop
xchg
test
or
pop
popa
mov
or
xor
dec
mov
mov
pop
clc
cmpsb
lret
arpl
or
inc
xchg
test
and
inc
push
push
sbb
mov
rorb
lods
xor
dec
mov
insl
fdivs
adc
test
ret
add
ficompl
mov
jbe
mov
movsl
sti
mov
jno,pn
jp
adc
inc
aas
lds
clc
loop
mov
ret
add
jb
enter
mov
ret
mov
fadds
ret
lret
pusha
sub
xchg
push
aas
ss
mov
or
pop
pop
ljmp
and
mov
mov
lea
mov
sub
orl
mov
mov
ljmp
lock
shll
sbb
pushf
xchg
inc
imul
mov
pop
mov
cmp
push
dec
add
and
adc
shll
loopne
shlb
gs
call
cmp
xchg
icebp
inc
or
xor
inc
and
xor
cmp
arpl
mov
adc
cmc
mov
cmp
cmc
ja
stos
cmc
cmp
pop
ljmp
hlt
mov
je
sbb
sbb
in
jmp
jb
movsl
in
cltd
inc
cwtl
mov
xchg
movsl
mov
and
or
ror
xchg
imul
push
fimuls
push
leave
jnp
lret
outsb
mov
mov
ret
outsl
das
push
xor
int3
lret
loopne
ja
jae
fnstenv
adc
icebp
lahf
js
and
popa
cmp
int3
adc
fstpl
push
aam
inc
push
sar
add
roll
cli
xor
lods
out
or
adc
or
arpl
inc
mov
arpl
nop
jl
sub
cmp
add
test
cmc
sbb
mov
or
test
jb
retw
stos
pop
cs
push
sub
dec
add
ljmp
cmpsl
pop
dec
adc
ret
out
fwait
cld
cltd
xlat
fcoml
and
sub
mov
popf
loop
call
cltd
or
push
imul
or
push
mov
dec
adc
cmp
jg
lcall
cmp
pop
das
jp
jb
rcrl
ljmp
lock
xchg
dec
xchg
adc
lds
push
sbb
sbb
jmp
jecxz
push
insb
push
inc
decb
ljmp
cmp
and
push
jmp
xchg
pushl
lea
mov
mov
mov
je
jle
jno
mov
inc
xchg
insl
pop
mov
les
add
nop
mov
shr
loop
je
and
push
mov
sub
cwtl
jp
cmp
shll
mov
pop
adc
pop
inc
fildl
cmc
outsb
decb
dec
ds
orb
dec
mov
mov
ds
popf
xor
mov
fcmove
and
push
std
push
xchg
add
cmpl
xchg
nop
lcall
movsb
mov
sub
mov
lods
mov
and
xchg
push
inc
xchg
add
xchg
or
lds
mov
mov
jb
scas
or
ds
test
mov
aam
out
iret
xor
call
dec
mov
lods
insb
pop
or
scas
addr16
inc
and
pop
push
mov
sbb
testb
cmpl
clc
mov
xor
mov
out
ljmp
into
fdivl
inc
sub
adc
inc
jb
or
mov
jae
and
push
sti
shll
mov
push
pop
aam
loope
cmp
std
out
cmp
xchg
xchg
adc
mov
loop
incb
fiaddl
mov
jns
jmp
jnp
frstor
dec
inc
add
mov
sbb
scas
stc
mov
pop
push
mov
mov
sahf
ja
orl
subb
js
cwtl
icebp
mov
movsb
sbb
dec
xchg
xor
sbb
xchg
xchg
cmp
ffreep
mov
sbb
dec
ljmp
aad
sub
outsb
jge
and
adc
cmpsl
jno
and
jecxz
outsl
loopne
fwait
dec
rcrb
cmpb
sub
hlt
and
scas
or
pop
test
inc
push
jmp
jo
cltd
xlat
sub
xchg
or
or
pop
xchg
ret
ja
cmpsw
bound
adc
dec
push
lret
stos
mov
sbb
shlb
and
pop
lret
enter
in
enter
movsl
pop
and
cmpsl
out
pusha
pusha
or
icebp
push
shlb
mov
popa
xchg
les
cmp
pop
sahf
xchg
dec
popa
pop
add
cmp
repz
mov
cmp
or
add
mov
rorl
iret
push
mov
push
int
cmc
lock
es
xor
shlb
sti
ret
mov
sub
xor
stos
jp
jp
inc
ret
pop
jbe
cmpb
push
add
or
sbb
add
inc
dec
in
pusha
je
insb
fldenv
pop
cmp
jno
jno
mov
in
mov
imul
xor
push
hlt
xlat
ds
pop
andl
xor
mov
mov
aad
jl
jecxz
jp
push
daa
mov
gs
stos
xor
cwtl
add
jge
testb
movsb
and
aam
jp
xor
stos
add
fsub
frstor
pop
sbb
call
sbb
mov
mov
adc
and
mov
adc
mov
inc
loop
addb
mov
lcall
imul
test
out
mov
sbb
mov
push
pop
or
pusha
pop
sbbb
xor
and
adc
sti
push
jecxz
xchg
inc
mov
or
ja
mov
mov
or
jl
cmp
sahf
nop
sub
loopne
inc
test
push
push
dec
sub
fstpt
fiadds
dec
and
cmpsl
mov
arpl
dec
daa
dec
test
xchg
das
jns
icebp
insb
sbb
xchg
dec
fnstenv
into
fstl
and
sub
enter
jle
dec
or
mov
les
loope
ds
mov
iret
or
mov
cwtl
jnp
shrl
popf
push
pop
enter
mov
pushf
adc
push
mov
ljmp
add
out
dec
xchg
mov
or
loopne
ror
jle
add
out
jg
lcall
ds
out
mov
sub
addr16
jg
dec
lods
stos
and
outsb
lock
mov
sub
cltd
imul
fmuls
orb
int3
outsl
add
mov
in
test
sti
mov
mov
ljmp
inc
xchg
lret
popf
jnp
add
lock
lods
xor
jne
lcall
xor
sub
cli
enter
sub
xchg
push
or
ja
outsb
cmpsb
pop
xchg
sbb
pusha
dec
pop
stc
sbb
cmp
dec
xchg
imul
mov
lods
jbe
test
mov
pop
xchg
mov
ljmp
sbb
popf
sbb
lock
inc
push
popa
pusha
sub
jmp
mov
cs
pusha
int
stc
dec
pop
mov
call
mov
js
xchg
add
insb
adc
sub
fisubl
rorl
xor
mov
inc
adc
sahf
or
mov
stos
movsl
fsts
jecxz,pt
test
jg
cld
ret
pop
mov
jle
add
fisubs
add
jbe
movsb
nop
clc
dec
sbb
stc
dec
leave
mov
sub
push
dec
dec
fs
sub
sub
outsb
mov
inc
lock
xor
mov
mov
jge
mov
jecxz
in
jnp
and
testb
jo
test
push
cwtl
lea
out
pop
jns
add
push
pop
in
jmp
jne
rolb
push
stos
push
pop
dec
test
shl
mov
push
movsb
clc
adc
inc
dec
mov
sbb
jbe
push
clc
inc
mov
sub
push
ret
dec
xchg
lcall
lea
ss
inc
pop
xchg
div
xchg
mov
mov
cmp
lcall
cmp
lret
out
popa
dec
xor
je
lds
mov
js
ljmp
add
sbb
adc
mov
ss
push
hlt
rorl
xor
cs
gs
push
or
gs
add
lcall
dec
inc
popa
push
or
mov
sahf
dec
scas
add
repz
out
aas
fidivl
jg
punpckhwd
mov
cmp
mov
xchg
bound
cmpb
leave
repnz
push
loope
lock
sti
inc
mov
xchg
xchg
jmp
or
mov
pop
mov
mov
gs
out
xor
fadds
and
pop
xor
add
cmp
add
pop
dec
test
cmp
loope
cli
dec
push
sbb
mov
inc
cs
xchg
pop
jp
shll
hlt
pop
xchg
xorl
cmp
lret
jb
insb
ljmp
cmp
pop
push
sbb
aaa
lods
mov
xlat
jp
adc
bnd
xchg
int3
out
pop
sub
fisubrs
mov
xor
adc
mov
xchg
sbb
xchg
incb
lcall
ds
mov
jno
or
mov
pop
mov
js
jns
xchg
cli
mov
pop
mov
cmp
vzeroall
jp
mov
outsb
pop
in
sbb
imul
xchg
dec
pop
lret
into
inc
add
jo
addb
or
test
test
mov
mov
cmp
fisttps
cmpsb
in
pusha
inc
int
xor
lods
divb
mov
pop
stos
add
sbb
inc
lods
or
int
shll
shll
not
mov
dec
dec
jge
adc
ljmp
dec
add
inc
call
repnz
fisttps
xor
jmp
lock
daa
jp
iret
cmc
stc
fsubrs
cmc
ds
and
lock
pop
lods
sbb
xorl
cmp
and
or
xchg
fisubrl
out
rorl
lods
push
push
sbb
scas
sbb
jb
inc
jmp
push
lds
bnd
mov
jmp
aaa
mov
sbb
or
mov
ret
mov
lcall
add
aas
aam
jbe
neg
fwait
jle
data16
jns
xor
sub
xor
adc
into
adc
insb
add
sub
mov
dec
ret
mov
in
and
xor
inc
dec
sub
cmpsl
xor
fisubrl
pop
imul
sbbb
inc
out
sbb
adc
push
in
lcall
leave
mov
add
ljmp
mov
add
cmpsl
out
sbb
lret
dec
sbb
negb
cltd
subb
rorl
adc
mov
aas
fistpll
sbb
cmp
xchg
sub
inc
call
mov
sbb
ret
pop
xchg
cmpsb
loope
scas
stos
daa
or
jae
xchg
inc
push
fwait
lods
mov
jge
jg
addr16
icebp
shll
or
dec
adc
sub
push
adc
jmp
sahf
pop
inc
sbb
adc
xor
push
mov
pushf
std
stos
loopne
stos
pop
sub
cltd
mov
cs
fcompl
insb
dec
hlt
addl
add
and
lods
stc
aaa
ret
mov
fsubrl
in
les
in
cltd
mov
pop
sti
ja
mov
or
cld
ss
fwait
icebp
ja
mov
fldcw
sbb
stos
mov
bound
inc
iret
fsubl
imul
mov
mov
in
jno
scas
subb
inc
pop
mov
mov
scas
out
sbb
pop
pop
cmc
or
fnstcw
rclb
fsubr
inc
inc
fisubrl
ret
sub
xlat
lods
mov
out
add
push
cmpb
enter
je
inc
jne
pushf
lea
jbe
xchg
pop
ret
fs
sbb
pop
jle
shrb
insb
fwait
add
inc
push
jmp
or
pushf
jo
gs
fildll
adc
push
lock
adc
ss
fdivs
fsubl
aas
pop
int
jb
aam
sbb
jae
and
mov
xlat
call
ja
sub
cmc
daa
sarl
fldcw
enter
int3
sbb
pusha
pop
sbb
decl
outsl
inc
lods
dec
adc
push
sti
je
xchg
in
or
cli
cmpsl
pop
jne
jnp
cmp
push
mov
nop
out
mov
push
adc
jnp
adc
icebp
les
mov
addb
lods
fdiv
xchg
movsb
pop
dec
xchg
and
outsl
loop
fcmovnb
sub
push
das
mov
mov
dec
sbb
push
nop
fstpt
pusha
aas
mov
inc
dec
movsb
xchg
or
sarl
test
roll
pop
sub
cmp
xor
pop
nop
fisubrl
dec
in
add
push
mov
add
jb
add
lods
cmp
jl
mov
aas
lret
fldcw
icebp
xchg
mov
mulb
rcll
jnp
lahf
jmp
mov
lea
cs
mov
fs
cmp
imul
mov
and
sar
std
inc
sarl
mov
push
cmp
je
pushl
aad
mov
mov
inc
clc
inc
dec
lea
xchg
jns
daa
enter
and
ds
jo
pop
push
in
mov
in
mov
push
pop
adc
pop
sbb
adc
mov
mov
movl
adc
push
adc
ljmp
fwait
imul
add
in
jp
inc
xor
pop
out
push
and
sbb
add
les
cld
add
mov
test
mov
fs
popa
lods
das
je
mov
mov
mov
callw
jo
pop
cmp
cmc
arpl
leave
push
mov
lods
in
lret
je
inc
loopne
lock
loope
adc
mov
mov
jbe
out
push
jns
daa
aam
inc
les
or
imul
mov
das
push
mov
and
sbb
add
and
cmc
jbe
inc
addr16
mov
ja
sbb
pop
lea
pop
jno
push
cwtl
xlat
mov
jl
lock
testb
lods
sbb
shrb
cld
jnp
sbb
xor
ljmp
movsb
lret
fdivp
mov
mov
pushf
movsl
lods
js
frstor
add
inc
in
jb
movsl
dec
arpl
adc
adc
shrl
mov
mov
daa
xchg
and
add
inc
stos
mov
fwait
les
scas
fwait
ss
gs
jno
in
jb
inc
cs
int3
inc
cmc
lea
insl
lods
inc
dec
loop
ret
cmp
dec
xor
stc
lcall
pop
lcall
mov
sub
std
shll
pop
mov
cmp
sub
add
inc
rcrl
std
push
fmull
outsb
mov
mov
xchg
sub
shr
les
out
repnz
and
jns
fxam
sbb
mov
xchg
int
les
jge
dec
subb
add
data16
xlat
xchg
adcb
scas
mov
or
loope
add
cld
fs
repz
sub
sbb
stc
lret
pop
fstpt
dec
rol
outsl
addr16
push
pop
fdivs
mov
lret
shlb
adc
jp
mov
sbb
xchg
add
loopne
dec
sub
inc
pop
and
lods
out
data16
aas
std
stos
inc
aaa
mov
add
jnp
ss
fs
mov
pop
sbb
jb
paddq
xchg
lods
insl
add
lds
cld
movsb
cltd
sbb
adc
rorb
push
repz
adc
call
shll
loope
pop
sahf
in
lcall
inc
dec
push
das
push
in
hlt
xchg
rolb
push
push
cwtl
cmp
xchg
fsubr
and
mov
dec
mov
xchg
mov
and
orl
ja,pn
aad
push
int3
pushf
stc
mov
cs
mov
xor
gs
mov
cmp
insb
jge
dec
lcall
out
fbld
fildll
adc
mov
ficomps
mov
roll
sub
dec
dec
rcrl
mov
dec
jle
subl
dec
mov
xor
inc
aam
ss
lock
inc
notl
inc
sbb
scas
sbb
mov
mov
rdtsc
mov
cmp
push
mov
fdivrp
stos
mov
shr
sbb
out
cmpb
mov
jno
insb
inc
stos
mov
iret
loop
rcl
cmp
cmpsl
inc
pop
adc
add
push
adc
movsb
dec
hlt
jnp
lret
adc
lret
shlb
lret
xor
sub
mov
pop
or
rorb
pop
push
xchg
mov
push
fs
data16
popf
jne
sbb
jmp
or
xor
xor
imul
jg
mov
pop
xlat
sub
xor
dec
xor
les
in
mov
and
fcmovnbe
out
adc
mov
mov
pop
jecxz
jg
es
dec
add
xor
jns
cmp
inc
cmp
aam
cmp
inc
into
adc
or
cmp
or
jecxz
je
mov
test
jmp
pop
imul
flds
cmp
arpl
fsubrs
stc
out
dec
mov
adc
mov
and
mov
mov
pushf
sub
dec
jl
sbbl
dec
sbb
add
xor
pop
insl
adc
idivl
jmp
call
enter
jne
mov
stc
xchg
xlat
push
pop
call
pop
test
or
shll
fs
shll
mov
hlt
lods
cmp
mov
adcl
and
dec
jge
imul
sbbl
sbb
cmp
sbb
scas
mov
sar
outsl
sub
outsb
cmpsb
pop
repnz
sbb
in
sub
je
inc
out
rcll
aaa
lea
xor
fwait
add
les
in
cs
sarl
sti
testb
adc
pop
int3
sahf
inc
mov
mov
loope
call
in
test
inc
push
loop
sub
sbb
call
cltd
cwtl
inc
cwtl
mov
mov
cmc
cmp
add
xchg
mov
mov
ljmp
push
int
lods
jo
test
int
test
pop
test
xchg
push
jne
xor
jmp
cmc
xchg
mov
fistps
push
nop
adc
pop
insl
lret
sub
pushf
outsb
je
xor
loop
mov
xor
sub
aaa
sarl
pop
or
or
push
scas
lock
mov
enter
or
xor
mov
mov
sub
aam
cmpsb
ret
aaa
jns
icebp
ficoml
in
dec
dec
xor
or
repz
repz
and
lods
xor
jae
pop
mov
in
mov
int3
shlb
cwtl
or
jl
jo
sub
push
in
push
dec
mov
imul
lahf
out
lcall
xchg
jp
js
sti
xor
enter
dec
aam
lods
jb
sbb
stos
xor
pop
or
cmpsb
cmp
inc
mov
data16
test
addr16
cmc
cwtl
stc
lods
mov
jg
sbb
sarb
xor
in
xchg
and
inc
iret
mov
loop
mov
pushf
test
fbld
push
push
pop
xchg
pop
dec
jno
cmc
adc
xchg
add
aam
or
rorl
ja
pusha
and
sub
int
adc
push
iret
mov
movsl
adc
xchg
xor
icebp
push
lcall
sub
lcall
popa
dec
lret
jns
js
xorl
shlb
mov
jne
xchg
repz
xor
iret
dec
or
repz
cmp
repnz
imul
inc
pop
mov
jns
fwait
stc
cmp
lods
pop
push
dec
and
loope
clc
cld
mov
xor
xchg
bound
mul
mov
add
jo
xor
xchg
lock
push
pop
jns
cltd
enter
add
sahf
mov
fdivs
sub
clc
and
jb
dec
mov
mov
ljmp
inc
push
divb
js
enter
sub
sbb
mov
ret
push
out
push
xchg
push
mov
pop
sbb
nop
jno
adc
jecxz
notb
xchg
mov
xor
push
sub
or
leave
jp
adc
mov
pop
dec
bound
dec
xor
or
subl
outsl
cmpl
imul
xchg
das
mov
fnstcw
scas
and
pop
shrl
int
out
ficomps
xor
dec
dec
je
xchg
xchg
aam
into
or
sbb
xlat
movsb
idivl
mov
dec
fwait
add
leave
repz
jnp
mov
dec
mov
insl
cmp
lds
subl
fbstp
decl
xor
sbb
push
daa
or
inc
sub
into
sarb
or
insb
lea
pop
lahf
jbe
popf
mov
jne
xchg
mov
mov
and
in
js
movsl
mov
mov
xor
loop
pop
and
jbe
faddl
mov
xor
testb
lret
mov
sbb
outsb
dec
xchg
and
push
add
dec
jp
enter
push
sub
stc
sti
jo
test
mov
scas
xor
insb
jae
xchg
sbb
sub
in
adc
push
inc
add
inc
lds
cmp
je
movsb
fsts
cs
out
pop
out
popa
pop
fimull
inc
popf
fmul
data16
pop
hlt
or
lahf
mov
add
addr16
adc
jae
sub
dec
in
add
dec
hlt
aaa
test
lock
icebp
adc
dec
cmp
and
add
push
pop
hlt
stos
ja
or
xchg
add
aam
jns
sbb
bound
jae
add
fsubrl
add
sahf
arpl
mov
xchg
push
test
pop
ja
and
fimull
das
ret
xchg
lcall
les
imul
cmp
inc
xor
outsl
mov
test
jge
jmp
inc
sub
lahf
rcll
je
jb
iret
mov
lds
pop
add
xor
js
inc
fdivs
sbb
inc
mov
fwait
test
push
push
lahf
dec
outsl
adc
push
inc
pop
scas
and
inc
sbb
cltd
xchg
push
fcoml
cmp
jp
jnp
xchg
scas
dec
loope
into
xchg
in
addr16
xchg
cmp
loopne
xchg
cmp
mov
sbb
js
lret
pop
jecxz
and
pop
fwait
arpl
or
data16
xchg
inc
cltd
push
jle
addb
push
fnstcw
mov
stos
fidivs
pop
js
cmp
xor
xor
pushf
push
inc
xchg
in
push
add
lret
into
mov
jae
mov
sub
push
lock
pop
inc
pop
int3
cs
cs
dec
ret
cmp
and
adc
add
and
jb
push
mov
inc
inc
dec
and
fs
sarb
adc
sbb
out
jecxz
ljmp
je
mov
and
pop
imul
test
lock
pop
or
fsub
shll
xor
rcrl
push
out
mov
repnz
mov
in
stc
fsubs
mov
pop
mov
and
push
mov
mov
adc
flds
lea
jae
imul
clc
pop
xchg
ret
jg
push
xchg
jbe
das
xor
fnsave
fidivl
and
pop
push
xor
mov
aaa
mov
or
xor
test
test
loopne
shl
rcrb
int
lods
and
pop
xchg
dec
lahf
adc
stos
add
int3
or
jbe
cltd
loop
xor
mov
push
fadds
mov
mov
or
iret
in
sub
add
and
mov
mov
mov
or
mov
sbb
sti
cmp
or
out
xor
jns
mov
movsl
repz
mov
je
jb
rorl
aaa
push
pop
test
add
out
sub
stos
and
pop
sub
push
xor
xchg
mov
fwait
scas
jne
cmc
and
push
push
pop
call
xor
cmc
ret
test
les
ljmp
andb
adc
pop
out
stos
dec
jge
pop
sub
push
xchg
sbb
imull
lahf
iret
inc
lods
scas
aam
daa
add
cwtl
mov
xchg
movsb
and
inc
cmp
lock
dec
cmpsb
movsl
jnp,pn
xchg
cli
pop
or
ret
stos
cmp
into
jno
in
shll
aam
fldl
mov
add
fwait
or
mov
rcl
push
push
adc
lods
adc
hlt
inc
jp
dec
test
inc
jb
jno
mov
stc
insb
push
dec
sub
xchg
inc
dec
sti
popa
mov
mov
int3
fisubrs
push
test
sub
fiadds
sub
in
popf
mov
dec
mov
test
add
cwtl
pop
ficompl
mov
mov
imul
jnp
pop
mov
and
mov
in
push
xchg
fisttps
sub
push
lret
insl
and
cwtl
and
adc
mov
in
pop
andb
push
in
mov
jmp
mov
xor
or
ficoml
fnstsw
dec
das
ljmp
lods
sbb
mov
cld
push
adc
sub
clc
xadd
push
in
lods
lcall
sub
out
test
imul
cmp
mov
xchg
popf
inc
inc
enter
mov
jo
push
lret
xchg
sti
leave
mov
dec
push
scas
aas
mov
push
ss
or
push
xchg
inc
test
pop
push
jne
pushf
jge
stc
aas
mov
sbb
js
xor
cwtl
or
push
ljmp
dec
leave
sbb
scas
std
push
aas
pusha
push
mov
jo
testb
nop
je
out
push
lret
out
jl
jg
sbb
popf
jle
dec
test
dec
dec
sbb
rorl
fnstenv
add
adc
and
imul
push
push
cmp
pop
scas
mov
mov
mov
mov
jo
cld
mov
call
test
shrl
and
aaa
sub
jnp
sub
bound
sti
insb
dec
mov
dec
dec
jo
pop
inc
pop
push
cmp
and
mov
or
cltd
fldcw
bound
sti
popf
shld
nop
jbe
out
dec
push
add
xor
iret
mov
dec
pop
aas
and
pop
imul
pop
push
fnstcw
leave
les
divl
mov
pop
jg,pt
cmpsb
fs
aas
jae
daa
dec
fs
pusha
fbstp
adc
scas
adc
sub
sub
leave
hlt
ret
mov
loopne
or
cli
movsb
sar
notb
das
pop
sub
push
push
aaa
pop
add
mull
push
btc
lods
clc
jge
cmp
cltd
int
shl
scas
das
pop
inc
mov
mov
loope
mulb
mov
cwtl
push
push
popf
jecxz
add
pop
xor
mov
mov
fmull
test
sub
xchg
in
cmpsl
jecxz
in
fnstsw
outsl
les
pushf
into
pop
ret
mov
call
outsl
adc
mov
cld
out
int
xchg
lods
or
jl
imul
jge
pop
data16
sbb
ljmp
lret
push
lods
cmp
push
mov
fcmovu
add
add
xor
cs
enter
jle
int
mov
jecxz
repnz
mov
mov
pushf
shld
cld
in
ss
add
es
push
mov
mov
sub
jp
stos
push
loop
xchg
xor
sahf
icebp
addr16
push
mov
push
pushf
daa
xchg
and
out
clc
mov
sbb
repnz
jno
jno
pushf
ss
adc
cmp
inc
mov
mov
outsb
push
les
das
pop
jbe
inc
inc
fsubs
and
sub
cli
neg
or
aad
adc
cmp
sub
jge
lcall
cmpl
loop
lret
test
jnp
mov
inc
sbb
xor
in
call
dec
mov
lahf
add
in
inc
insb
data16
leave
bound
outsl
mov
push
fcmovne
push
xchg
sbb
fadd
fistpl
pusha
insb
loopne
roll
lea
sbb
mov
sahf
aaa
and
mov
es
or
aas
or
addr16
xlat
or
mov
in
lret
out
push
popa
adc
adc
sarl
icebp
or
inc
cmp
dec
jecxz
xchg
adc
or
push
cmp
notl
adc
test
inc
jp
stc
daa
popa
jo
and
pop
pop
mov
movsb
or
or
mov
in
aas
ja
lods
mov
inc
in
mov
stos
insb
lcall
dec
pop
xchg
or
jb
pop
pop
jg
jg
or
cld
or
pushl
mov
fs
adc
decb
jnp
sub
pop
jg
xlat
jno
jno
inc
dec
adc
adc
notl
aam
lods
adc
xor
lea
push
cmp
sbb
dec
lcall
push
iret
mov
stos
mov
pop
mul
in
outsb
cmp
mov
call
neg
xor
jb
inc
sbb
pop
push
repz
lds
jae
in
add
inc
lcall
out
dec
adc
sbb
mov
mov
sub
jl
dec
push
mov
mov
xchg
mov
cmpsb
cmp
push
cmpl
jno
xchg
dec
shll
test
pop
adc
fldpi
mov
mov
pop
shr
inc
sbb
xchg
das
fwait
sahf
jns
outsb
stos
or
out
xchg
xchg
stc
subb
xchg
adc
in
inc
sahf
mulb
push
mov
and
add
push
mov
sbb
dec
nop
jmp
out
jg
sarl
xchg
xchg
lds
enter
push
cs
mov
cmc
mov
pop
push
pop
notb
fdivrl
sbb
notb
dec
aam
mov
stos
push
xchg
add
push
mov
xor
loopne
popf
test
dec
test
ja
cld
add
push
dec
xor
out
fsubs
ljmp
std
mov
cs
mov
lahf
add
in
push
mov
jae
xor
aas
sub
fidivrs
sbb
popa
or
rclb
scas
cmp
movaps
ret
mov
jne
into
jnp
int
add
shll
call
rorl
iret
cmp
jb
incl
js
mov
mov
mov
push
sbb
add
divb
pop
dec
mov
stos
sbb
jge
inc
das
mov
jg
sbb
bound
xchg
mov
int
dec
and
jecxz
mov
insb
subl
add
or
scas
jbe
push
in
xchg
mov
cmp
xorb
fsubs
fs
mov
mov
dec
jno
xor
ds
imul
mov
add
call
fldcw
scas
subb
stos
call
mov
cmp
mov
add
mov
sbbl
or
fnstcw
pop
lahf
sbb
and
pop
aas
mov
xor
mov
jb
lea
pop
mov
loopne
mov
cmp
lock
outsb
cwtl
push
push
xchg
sbb
out
push
rorl
rclb
shll
mov
popf
mov
add
push
rolb
test
lahf
pop
lea
out
xchg
sub
lds
push
fcomp
sub
fwait
mov
enter
cmp
xchg
xchg
mov
icebp
mov
inc
pop
fwait
lods
divl
clc
insl
push
dec
sar
mov
call
sub
inc
lock
mov
inc
cli
mov
iret
mov
xor
and
fldl
jae
xor
or
das
test
imul
je
mov
pop
int
mov
jle
and
insb
repnz
and
push
cmpsb
add
xchg
lods
push
mov
mov
hlt
sbb
inc
jbe
ret
push
xchg
loope
inc
mov
xor
and
stos
mov
lahf
dec
pop
or
dec
dec
mov
xchg
inc
jb
out
dec
sub
mov
jbe
sbb
add
push
loopne
cld
push
mov
inc
rolb
push
aad
shl
and
cmp
sub
cmp
inc
jle
adc
mov
addb
movsl
loope
sbb
loopne
sbb
stos
mov
inc
xchg
fisttps
dec
add
and
dec
outsl
popa
inc
lcall
fisubs
outsl
clc
mov
push
adc
in
mov
adc
bound
addb
imul
sbb
cmc
and
in
xor
xchg
add
or
movsb
sbb
jp
lods
sbb
adc
out
cmpsl
xor
mov
out
leave
repnz
jns
xchg
push
je
pushf
inc
pop
sbb
int
push
ljmp
andl
push
popf
flds
test
or
lcall
cs
ja
mov
and
pop
xorl
out
sub
out
xchg
dec
cmpsl
push
popf
mov
icebp
cwtl
xchg
movsb
test
jp
add
inc
or
fisubrs
scas
fisubrs
mov
jmp
xor
xor
adc
cwtl
pop
pop
xchg
and
lret
loopne
xorb
dec
mov
repz
ss
cmp
add
rorl
in
xorb
and
std
gs
push
ret
cmp
mov
stos
jle
and
fwait
cmp
fcompl
and
scas
mov
xor
or
icebp
adc
rclb
or
outsl
mov
lcall
lret
mov
iret
cs
inc
in
xchg
fldcw
scas
inc
xor
inc
push
adc
dec
xor
mov
jne
call
xchg
sbb
sbb
jb
jecxz
mov
in
mov
push
mov
push
testl
pusha
xchg
jge
xchg
push
push
xor
push
fcoms
popa
cld
gs
mov
fnstenv
clc
in
imul
xchg
mov
sbb
push
xor
fadds
mov
popa
mov
xor
sbb
negb
xchg
cli
xchg
adc
xchg
clc
pop
movl
sbb
pop
hlt
cmp
cld
mov
test
aad
add
ret
lret
imul
lcall
xchg
aam
push
pop
sub
jmp
jecxz
dec
mov
add
mov
xchg
aas
cmp
daa
mov
mov
bound
xor
test
mov
mov
das
addl
lods
hlt
leave
xor
and
addl
cmpsb
popf
adcl
mov
jae
fs
jmp
mov
fs
jo
pop
and
lods
xchg
or
addb
inc
fisubrs
and
test
stos
adc
and
sub
inc
and
in
popf
mov
test
aas
clc
sub
mov
or
push
or
test
cmc
icebp
lcall
pop
sbb
in
cld
sub
push
pop
push
or
repz
pop
mov
mov
in
mov
test
push
mov
mov
dec
testl
push
push
in
das
mov
sbb
enter
movsb
inc
orl
mov
xor
dec
cwtl
pop
stc
or
pop
dec
push
add
sbb
inc
xlat
mov
push
shl
sub
and
xchg
fcmovnbe
lods
in
cmp
mov
jge
stos
inc
cwtl
jmp
cmp
xchg
ret
test
iret
jl
xchg
out
jns
movsb
pop
rep
mov
adc
aaa
das
aaa
cmpl
add
aas
nop
mov
insl
loop
sub
pop
je
push
sub
pusha
sbb
paddb
push
xchg
jne
adc
jg
addr16
in
mov
pop
xchg
mov
ljmp
jecxz
cmp
fisubl
jmp
test
sub
test
iret
xor
or
sub
orl
fadds
pop
jge
lds
lret
out
repz
test
push
out
lods
push
scas
mov
mov
jnp
aad
in
bound
jb
stos
scas
insl
outsl
pop
dec
fwait
inc
aam
aad
mov
hlt
call
sub
xor
sbb
sbb
pop
aam
mov
cli
xchg
and
loopne
add
cmpsl
jle
xchg
dec
sti
xor
loopne
movsl
jne
aaa
push
outsl
adc
pop
sahf
jo
test
sti
arpl
rcll
or
movsb
push
inc
dec
pop
scas
xchg
mov
mov
cmpl
sub
inc
imul
push
ret
aaa
sub
iret
jge
ret
inc
aad
andl
push
hlt
pop
adc
into
add
stos
mov
cmp
imul
pop
sbb
cmp
and
addr16
pop
xor
pop
out
stc
into
je
daa
add
outsl
out
mov
dec
lods
xor
lock
int
out
cmp
sbb
popf
inc
pop
xchg
inc
dec
data16
add
xchg
and
jecxz
imull
lods
xchg
xchg
cli
out
lock
dec
inc
sub
sbb
sub
jle
mov
pop
out
jbe
popf
clc
aas
fdivl
xor
jmp
fsubrl
mov
mov
and
jmp
inc
mov
fdivrl
ljmp
mov
cld
call
mov
add
mov
or
repz
ficoms
xchg
and
stos
lret
fcmovbe
ret
jns
lods
les
mov
push
out
pop
dec
imul
jge
sbb
and
test
lahf
xlat
push
inc
sub
pusha
push
xor
or
pop
mov
and
insl
sahf
es
inc
dec
je
push
xchg
pop
xchg
jbe
jb
lea
cli
jne
lret
test
and
cmc
xchg
shrl
mov
adc
movsb
daa
inc
fsubrl
ljmp
cmp
inc
jns
divl
adc
mov
add
inc
mov
sub
push
inc
sarl
flds
jb
ljmp
dec
int3
ret
sbb
sub
bound
lods
icebp
cmpsb
mov
cmp
stos
push
scas
and
stos
fstl
test
xor
lock
pop
dec
dec
into
cli
fs
imulb
out
xor
add
mov
jg
mov
jmp
sahf
add
loopne
sbb
insl
inc
imul
sub
sub
mov
fwait
aas
enter
mov
inc
cmp
sarl
ret
and
arpl
outsl
mov
adc
imul
mov
pop
shll
leave
sti
xchg
pop
inc
shlb
mov
pop
loope
jp
jb
clc
loopne
ljmp
push
pop
sbb
psubsb
gs
dec
push
pop
push
inc
sbb
mov
push
loopne
and
adc
addl
test
int
xor
ds
gs
mov
aad
lcall
into
cmp
addb
and
and
ret
fisubl
cmp
in
repz
stos
ljmp
inc
jecxz
sub
sub
mov
fs
push
dec
cmpsb
je
xorl
dec
es
int3
in
cmp
push
dec
fldt
iret
das
mov
dec
or
rol
sahf
lcall
push
aam
mov
sahf
and
movsb
int
mov
repnz
and
mov
insl
dec
sub
adc
push
inc
xchg
int
dec
pop
nop
cmp
push
cld
dec
pop
sbb
inc
in
cli
jo
pop
xor
scas
add
sub
out
out
jae
ret
dec
xchg
jg
adc
std
fbld
mov
and
pop
outsl
shl
jae
or
or
imul
pop
outsb
lock
fidivl
mov
cwtl
jecxz
imul
cltd
pop
imul
lea
push
fsubl
sub
cmp
push
out
dec
sbb
adc
inc
fldenv
mov
addr16
push
push
lret
aad
mov
int
out
push
outsl
shl
push
mov
push
cmp
sarb
fnstenv
push
outsb
sbb
pushf
mov
mov
cmp
jl
add
icebp
dec
and
not
or
and
xchg
jl
jo
mov
push
mov
adc
outsb
inc
out
pop
mov
jg
mov
dec
and
pop
mov
mov
stc
icebp
mov
inc
xchg
aad
jg
adc
add
int
fsubl
inc
test
add
arpl
mov
lods
js
jo
shll
push
xor
repnz
dec
mov
ret
mov
or
mov
aam
mov
popa
enter
or
jbe
test
xor
or
lea
cmp
out
mov
adc
xchg
out
or
pop
xchg
cmp
sbb
dec
jno
bound
and
bound
mov
loope
ds
sbb
and
cmp
xchg
cli
insb
push
adc
or
pop
shrl
push
aad
sahf
fdivs
push
call
xor
or
popf
jne
iret
fmul
dec
inc
insb
xchg
push
cmp
daa
dec
xlat
jp
pop
ret
mov
cli
iret
insl
mov
or
push
xchg
push
jg
or
or
fistl
inc
fisttpll
mov
xlat
cmpsb
push
shl
popa
sahf
cmpsb
cmpsb
and
popf
sbb
das
pop
dec
mov
insb
pop
into
sbb
outsb
mov
xchg
call
popf
xor
add
sarb
daa
xchg
ficomps
mov
inc
scas
fsts
jg
or
xor
enter
dec
hlt
inc
adc
shrb
mov
into
dec
jbe
fbstp
test
and
fstpl
mov
and
jge
cmp
xor
and
sub
mov
add
add
add
ficompl
cwtl
push
lret
jmp
sub
loop
outsl
lods
fcoms
testb
jno
cmp
pop
imul
add
cwtl
push
xlat
xchg
sub
dec
jle
enter
xchg
stos
add
sbb
push
out
pop
lods
pop
push
rorl
enter
out
enter
mov
jae
rcl
fldl
arpl
xlat
stos
sbb
jae
mov
cwtl
sbb
outsb
sbb
mov
adc
cmp
lods
jp
scas
mov
pop
adc
mov
cwtl
pop
fisubl
test
dec
dec
jmp
pop
add
mov
mov
pop
out
inc
xchg
xor
and
push
add
fwait
icebp
fwait
pushl
adc
cmp
repz
dec
arpl
aaa
xchg
aaa
pop
or
mov
testl
mov
fwait
inc
cmp
arpl
adc
dec
mov
dec
data16
xchg
push
hlt
sahf
rclb
shlb
push
in
clc
incl
test
movsl
or
mov
cmpsb
into
xchg
sbb
cli
stos
adc
mov
or
push
mov
or
mov
lahf
fisubl
push
repnz
pop
or
cmc
cmpl
mov
sub
dec
and
sub
mov
add
ljmp
jb
cltd
jbe
imul
cmp
push
es
dec
bound
icebp
and
push
pop
jmp
clc
gs
cs
nop
stc
shll
mov
dec
arpl
and
cmpsl
bound
or
stc
rorb
sarb
xchg
add
out
call
mov
dec
push
lea
cmp
repz
cmpsl
shrl
pop
sub
dec
in
jge
es
stc
lret
inc
jne
cmp
cmp
dec
mov
push
sub
pop
push
cmp
divb
cmpsb
repz
das
in
xchg
mov
jae
cmp
cmpsl
push
iret
lret
inc
test
ss
rolb
push
test
push
pop
jecxz
mov
or
outsb
into
test
push
cmpsl
sbb
jmp
aaa
inc
push
mov
insb
mov
in
je
push
repnz
into
test
sbbl
pop
push
inc
in
rcrb
pop
xor
arpl
pop
sub
jg
inc
jmp
jmp
mov
aad
iret
jge
xchg
ret
inc
inc
cwtl
sbb
cmpsl
or
pop
lock
pop
push
xor
sbb
mov
cmp
stos
cmp
aad
in
add
ret
cwtl
das
sbb
push
enter
popa
ljmp
arpl
aaa
dec
lea
mov
out
sbb
into
push
aas
pusha
push
ficompl
mov
mov
mov
ds
sbb
lcall
faddl
xchg
aad
adc
adc
dec
sub
jl
sti
mov
ljmp
fistl
pop
stc
jg
rorb
xchg
scas
push
xchg
pop
in
mov
test
adc
mov
sbb
push
push
ret
mov
loopne
jae
rclb
dec
pop
or
ret
cli
dec
push
mov
add
incb
cmp
pop
or
in
scas
pop
gs
adc
out
push
inc
jmp
int
icebp
mov
aaa
push
loope
out
fnsetpm(287
shll
jp
imul
movsl
fistpl
xchg
sti
inc
hlt
ficompl
outsb
insb
sub
bound
in
push
jg
imulb
inc
jecxz
cmc
xor
pop
xchg
test
nop
jmp
xlat
pop
daa
push
pop
add
dec
call
mov
jp
adc
jbe
scas
mov
add
mov
dec
jno
push
in
je
movsb
mov
dec
mov
ds
outsl
mov
insb
dec
cmp
mov
mov
lahf
jge
adc
xchg
pop
push
gs
dec
xor
adc
push
cli
mov
popf
mov
int3
or
ljmp
outsb
xchg
leave
fwait
and
jns
push
mov
push
pop
pop
lods
mov
iret
xchg
and
shl
push
in
and
sub
out
and
jno
mov
sub
aas
and
pop
pop
cwtl
sbb
cli
ret
addl
repz
js
ds
pop
inc
std
mov
test
shrb
inc
sub
inc
mov
bound
or
mov
cli
insl
mov
es
cmp
ja
fcompl
fsubl
loop
imul
sub
mov
sbb
lods
int3
jns
xchg
lret
lret
push
mov
or
movsl
test
imul
sbb
pop
and
fldt
dec
sbb
jno
xorl
jb
clc
stos
loop
add
push
jge
adc
int
cli
mov
cmp
and
scas
add
inc
mov
dec
test
out
icebp
mov
add
push
xchg
inc
inc
xchg
lret
jnp
xchg
push
add
fsubp
movsl
push
dec
lret
and
xchg
popa
jne
ss
mov
inc
add
out
add
mov
mov
mov
or
fimuls
ret
xor
add
jmp
ljmp
fiadds
cld
inc
cltd
sbb
push
push
into
lods
mov
dec
jmp
cltd
xor
dec
push
sti
loopne
adc
adc
fsubl
in
insl
inc
fidivs
pop
popl
ljmp
push
push
mov
pop
ljmp
push
je
stos
into
popa
sub
pop
stc
test
lds
pop
pop
pop
notb
cmp
daa
sub
jl
xchg
ret
xor
pusha
fmull
pop
leave
push
mov
lods
adc
shl
dec
rcr
shll
inc
xchg
push
pop
push
push
out
and
pop
dec
sarb
out
ljmp
into
inc
dec
lcall
push
pop
inc
cli
movl
xor
mov
nop
jp
sub
mov
repz
popa
or
popa
xchg
dec
or
fsts
outsb
sbbb
inc
sar
jge
and
arpl
hlt
rol
sbb
aaa
fiadds
dec
xchg
sbb
fs
xor
mov
jnp
pop
adc
sbb
add
addr16
sub
jno
cmp
sbb
fcmovnu
push
add
shlb
es
sbb
or
xlat
movsl
outsb
call
dec
and
mov
adc
cmp
or
in
insb
jecxz
pop
add
xor
mov
inc
aas
xor
adc
fwait
and
stc
rcl
and
scas
or
pop
hlt
or
cltd
mov
mov
cmp
insb
shr
pop
mov
inc
leave
cmpsl
xor
and
jb
mov
and
fisubl
shlb
sub
scas
pusha
mov
mov
add
pop
dec
in
cmp
bswap
push
pop
loop
pop
jecxz
mov
and
ss
in
mov
push
xchg
ss
shrl
sub
mov
out
movsl
xor
jl
mov
sbb
sub
jae
ret
push
loop
mov
cmp
enter
push
jnp
sbb
pop
jb
scas
mov
lea
inc
fcoms
lret
cmp
mulb
popaw
push
movsb
scas
out
dec
in
xor
sub
aam
pop
cmpsl
sbb
push
test
dec
sub
push
iret
in
inc
sarb
enter
imul
mov
lcall
cmp
sub
xchg
mov
cmpsb
ret
lods
sub
and
dec
xchg
jno
imul
cmp
adc
dec
xchg
mov
adc
adc
sahf
or
fwait
mov
stos
loop
pop
dec
jno
repnz
out
xchg
pop
push
adc
mov
mov
aam
jp
outsl
and
adc
inc
sbb
and
mov
out
fistps
adc
inc
fidivrl
sub
sbb
loop
push
push
push
sbb
and
pop
movsl
push
decb
arpl
or
pop
into
push
mov
addl
push
push
call
push
push
xchg
xchg
adc
les
loope
adc
push
mov
in
out
loope
push
movb
outsl
add
std
out
push
add
je
xor
mov
mov
inc
jmp
les
ret
loop
xchg
adc
jg
rcll
sbb
mov
arpl
aam
xlat
cmp
pop
sahf
mov
loope
nop
and
sbb
xor
in
ljmp
fsts
sbb
std
ja
push
fnstenv
jecxz
sbb
out
adc
push
fildll
xchg
stos
xchg
cs
fisubl
adc
dec
aaa
dec
add
mov
and
subb
in
inc
int
gs
inc
lods
or
dec
jecxz
add
dec
mov
int
mov
int3
clc
inc
bound
xchg
inc
add
inc
lods
jge
or
and
push
imul
pop
jb
imul
inc
aad
popa
inc
inc
into
mov
or
loopne
aam
cmpsl
fwait
pop
lock
adc
xor
adc
cmp
jb
in
dec
mov
jecxz
addr16
and
call
cmc
jle
lahf
jbe
test
movsl
in
rorl
xlat
jmp
outsb
xchg
addr16
push
sti
les
or
push
cs
jno
movsb
sbb
cmp
sub
jnp
pop
lret
loop
cltd
rcll
xchg
loope
jge
movsb
shrb
fcmovnb
imul
pop
push
jbe
or
xor
hlt
ret
negb
out
shll
xor
pop
dec
inc
inc
xchg
mov
cmp
lods
mov
in
lret
pop
dec
mov
pushf
orl
xchg
mov
pusha
and
mov
rclb
js
sub
mov
lds
sub
mov
push
test
ret
loop
xor
outsb
inc
out
sbb
mov
stos
add
dec
sbb
in
lahf
inc
lds
xor
push
pop
mov
fcmovnbe
xchg
test
dec
fsub
mov
inc
push
addr16
xor
mov
fnsave
cld
mov
movsl
xor
jmp
stos
sbb
int
repnz
inc
call
cmp
rcrb
mov
mov
movsb
ds
push
out
out
add
dec
insb
and
lcall
pop
inc
js
sahf
xchg
pop
mov
adc
fistpll
pop
sbb
jmp
ret
adc
in
and
fcompl
pop
add
sti
imul
fdivrs
les
out
jmp
into
lods
inc
mov
and
ret
jnp
ret
push
sbb
imul
sbb
mov
or
push
movsl
into
loop
sub
and
jecxz
movsb
scas
adc
aaa
add
xchg
mov
jo
aam
in
mov
pop
xchg
jb
movsb
negb
sbb
cltd
pop
and
and
ja
jecxz
cld
dec
pop
cmp
sahf
adc
pop
rcll
mov
movsb
sbb
push
sbb
mov
ljmp
fcoml
aaa
adc
add
adc
rorb
push
clc
inc
cmp
ret
add
lret
mov
les
lds
es
fists
xchg
xchg
dec
jge
jmp
sbb
or
dec
or
bnd
in
arpl
xchg
push
cmpl
cld
jns
dec
loop
sub
idiv
jmp
add
adc
and
jge
call
xor
popw
sbbb
mov
rcrl
inc
addr16
cmpsb
popa
stos
push
rcll
mov
jbe
cmpsl
mov
call
jge
xchg
jo
jl
pop
in
dec
mov
or
xor
aad
fsubrl
or
lea
lahf
jmp
or
add
dec
mov
cmp
sbb
int
xlat
push
xchg
stos
dec
stos
outsl
mov
test
xchg
xchg
pop
pop
xor
lcall
push
divl
sbb
and
fisubrs
sbbl
and
int
xor
dec
pop
lock
mov
std
mov
movsl
mov
outsl
jmp
sbb
jp
fwait
leave
popf
aad
iret
add
xor
pushf
jmp
jno
mov
inc
ss
insl
cmp
and
or
or
mov
pop
cmp
xchg
xchg
or
das
mov
dec
lock
scas
or
iret
xor
movsl
push
ret
mov
in
xor
popf
dec
xchg
cmp
xchg
push
popa
sub
pop
or
jns
sub
add
aas
xor
or
inc
jo
fucomip
in
imul
fstpt
sub
hlt
xor
fwait
insl
fldenv
cwtl
iret
mov
sbb
mov
sbb
push
and
inc
scas
std
mov
fists
mov
mov
cmpsb
xor
stos
fisubrs
pop
leave
add
ljmp
inc
fsub
push
ljmp
daa
faddp
scas
fcomp
int3
test
sysenter
jo
iret
sub
mov
dec
mov
sbbb
stos
ret
lcall
rorl
bnd
xlat
sarb
std
addr16
fdivrs
mov
and
adc
lret
jnp
add
popf
or
clc
jns
bound
mov
mov
inc
gs
pop
out
into
inc
inc
pop
outsb
jg
cmpsl
mov
addb
fistl
xchg
ljmp
sbbl
push
adc
sub
add
fistps
iret
cmc
stc
sbbb
sub
fstp
inc
mov
pop
testl
sbb
mov
repz
mov
loopne
mov
sbb
jecxz
sub
js
xchg
sub
outsb
jo
pusha
in
fsubrl
je
enter
popa
add
stos
sub
inc
cmp
push
aam
cmp
daa
or
mov
fdivs
dec
mov
bound
arpl
sub
arpl
push
cmp
icebp
or
out
and
sub
popf
sub
jmp
add
fdiv
jo
cmp
xor
or
js
je
xor
clc
add
push
and
mov
xor
imul
sbb
add
or
dec
push
cmp
test
mov
movsl
scas
das
test
addr16
aas
jb
es
jg
hlt
rcr
and
add
or
cmp
ror
stos
or
mov
aaa
mov
add
cmc
shlb
pop
sub
rcrl
aaa
data16
hlt
dec
in
add
rcll
fstpt
rorb
pop
lahf
mov
pop
lods
or
xor
jnp
mov
outsl
sub
xchg
call
push
pop
jmp
xorb
jmp
xor
aas
lahf
sbb
push
or
sbb
adc
xchg
inc
and
lret
mov
dec
lcall
add
dec
mov
xchg
in
outsl
scas
andl
shll
mov
xchg
pushf
mov
push
pushf
sub
push
int
dec
in
adc
cld
or
and
rol
inc
mov
lret
arpl
stos
add
insb
mov
sub
cmp
mov
pop
gs
push
fmull
int
jo
daa
repz
shlb
push
das
fmuls
repnz
pop
sahf
jecxz
inc
sub
scas
and
mov
cmpsb
data16
repz
xchg
fstl
cmp
in
movsb
add
jns
jmp
cmp
sti
mov
js
ret
sbb
ss
xor
inc
sbb
outsl
or
mov
sbb
dec
mov
pop
cmp
push
jp
fs
mov
enter
push
dec
mov
divl
mov
xchg
jo
adc
imul
add
mov
pop
inc
adc
sbb
mov
jae
aas
push
jg
repnz
in
shlb
dec
or
sub
jo
or
daa
sbb
pop
adc
addr16
cli
loop
test
js
sub
mov
faddp
mov
sarb
lahf
push
push
call
or
adc
lahf
out
jg
xchg
das
xchg
mulb
fsubr
call
push
int
push
xchg
dec
mov
jge
enter
ss
in
pop
jnp
int
cmp
rol
inc
xchg
addr16
adc
mov
aaa
pushf
add
mov
cmp
fdivrl
pop
jno
or
jecxz
or
ror
scas
cs
sub
andl
subb
push
cltd
imul
pop
es
adcb
fstps
push
fadd
loope
push
and
mov
ret
inc
push
test
test
sahf
mov
mov
xor
imul
lea
icebp
in
lods
mov
loopne
add
sub
jmp
or
mov
fnstsw
insb
adc
mov
jne
sbb
cmp
in
sbb
movsb
or
mov
das
push
movsl
add
loop
inc
mov
in
lods
jl
inc
jl
jmp
stos
pop
pushf
popa
inc
outsl
add
inc
fs
pop
pop
pop
xchg
sbb
dec
and
fisttpll
sub
and
pop
mov
roll
pop
fnstenv
loop
out
cmpsb
mov
cmpsb
sbb
je
add
fstpl
or
in
sub
jnp
adc
stos
and
mov
das
jae
lods
sbb
push
mov
scas
or
jns
and
push
iret
int
shrl
sbb
pop
test
insl
outsl
mov
movsb
cld
shrb
adc
jle
leave
mov
aad
in
dec
cvttps2pi
insb
jp
sbb
adc
test
out
adc
inc
aas
mov
or
xchg
xchg
ficompl
lea
or
pop
lret
mov
arpl
push
jne
or
test
xor
add
mov
out
arpl
sub
test
or
jmp
call
push
in
aaa
mov
jo
cmpsb
inc
leave
sarl
jb
jb
cmpsl
insl
out
adc
xor
mov
xor
mov
incb
jns
and
sub
in
enter
sub
cwtl
dec
mov
int
test
stos
dec
xor
test
jnp
pop
sbb
insl
inc
sbb
or
adc
fadds
insb
pusha
jbe
sub
cwtl
push
wbinvd
mov
mov
push
loop
jne
inc
pop
orb
addr16
inc
sub
in
call
inc
lds
jo
movsb
cwtl
push
lock
add
sti
icebp
push
ja
negl
sbb
aam
popf
mov
loopne
mov
mov
fstps
enter
xchg
cmpsb
test
mov
iret
outsb
push
adc
jmp
jp
xchg
push
pop
insb
push
xchg
fsubs
mov
ja
pop
mov
and
pop
movsb
xchg
xlat
stc
mov
dec
sub
fiaddl
cmp
xor
lcall
mov
imul
faddl
les
enter
out
out
pop
mov
lret
aaa
lretw
jns
push
clc
adcl
add
cmp
push
or
add
int3
push
xchg
inc
add
push
pop
mov
mov
fmull
inc
ss
roll
sti
fs
insb
lcall
addl
rcl
mov
sbb
daa
jecxz
inc
ja
push
mov
pop
inc
jmp
sti
std
xchg
rol
adc
enter
insl
aad
push
dec
sbb
sub
fcmovbe
mov
pushf
jg
dec
pop
or
xchg
mov
push
mov
idivb
inc
movsb
cmp
popf
ss
and
jae
push
or
cwtl
jl
repnz
imul
imul
jle
sbb
pop
jns
lcall
or
fcompl
lods
jmp
outsb
pop
in
sbb
add
icebp
mov
lahf
cmpsb
jl
xchg
add
out
dec
pop
dec
scas
fwait
std
dec
mov
popf
pop
loope
aas
inc
jo
and
cld
ds
push
arpl
xor
in
jle
jno
shl
fwait
test
in
shll
sub
push
dec
xchg
stos
push
test
dec
push
xor
cmpsl
mov
adc
xor
fistpl
mov
in
stos
pushf
shll
sub
test
cmpsl
jbe
sbb
iret
sbb
out
xchg
mov
jge
xchg
mov
stos
mov
adc
pop
and
sub
inc
add
aad
sub
fwait
les
pop
cmp
dec
stos
mov
mov
mov
stos
dec
and
fdivrl
cmp
pop
jg
inc
subb
fimull
pop
addr16
xchg
and
ss
fbstp
stc
cmpb
bound
addr16
mov
inc
mov
pusha
pushf
add
rcll
xchg
pushf
push
movsl
xchg
lahf
dec
rcr
js
lods
xor
fsubs
mov
test
out
nop
test
test
sub
pop
test
fucomp
or
sahf
lret
cmp
pop
push
std
pop
jae
icebp
jne
fsubs
sarl
inc
mov
push
jl
jge
ja
daa
pop
stc
push
pop
dec
outsb
pusha
and
mov
xor
cltd
cwtl
cmp
shlb
mov
xor
or
popa
pop
scas
imul
in
mov
adc
xorb
inc
outsb
arpl
or
mov
in
gs
js
mov
es
xchg
adc
sub
std
jb
inc
mov
and
pop
add
fcoml
loopne
cli
out
fs
nop
rol
imul
jecxz
dec
inc
into
dec
or
stos
pop
shrb
ret
std
out
and
insl
dec
lds
xor
imul
xchg
cmp
fdivrs
push
cmpsb
int
mov
mov
in
lods
jb
dec
xor
mov
dec
lods
sub
add
push
cmp
pop
push
mulb
dec
adc
pop
loopne
mov
jl
loop
or
add
aaa
fldcw
pop
cltd
pop
jle
mov
sub
pusha
test
and
push
lods
ds
adc
fnstsw
jb
fdivrl
cmp
dec
jnp
adc
stos
icebp
outsl
jmp
dec
jbe
loope
sub
xchg
fidivl
cli
rclb
adc
sbb
test
stc
xor
mov
mov
lret
and
xor
movsb
mov
mov
fisttps
adc
push
sub
aaa
movsb
repz
xor
loopne
pop
cltd
lods
mov
js
jne
or
mov
add
sub
decl
test
dec
jns
jo
mov
mov
fcmove
xchg
mov
push
pusha
mov
jb
push
mov
sub
push
dec
lods
int3
push
jo
xlat
arpl
fidivl
dec
mov
mov
xor
js
ret
fldt
jb
int
adc
pop
sahf
lret
fimull
fisubrl
iret
in
sub
cmp
jnp
mov
incb
loopne
popa
cmc
xchg
push
add
cmpsb
inc
mov
adc
mov
movsb
repz
repnz
dec
push
loope
imul
rcrb
js
sbb
cmp
movl
mov
adc
addb
mov
outsb
sbb
arpl
sbb
je
inc
sub
out
or
push
mov
mov
jecxz
scas
add
sbb
gs
stos
sbb
je
mov
or
das
fwait
adcb
nop
fnstenv
mov
and
iret
push
into
pusha
hlt
lods
mov
mov
xor
loop
fcoms
leave
lret
pushf
mov
xor
testb
mov
push
addb
scas
aad
sub
hlt
pop
mov
fisubrs
cmp
int3
lcall
sub
adc
push
push
fcmovb
jmp
push
cltd
pop
sbb
cmp
dec
out
je
and
mov
stos
xor
stc
or
icebp
xor
insb
push
clc
mov
xchg
ss
inc
imul
mov
and
cmpsb
cmp
aaa
test
mov
xor
shlb
push
and
inc
jae
dec
movsb
jg
or
push
and
xor
mov
push
cmpsb
lret
adc
and
adc
cmp
imul
jge
push
jle
dec
cmpsl
in
rorl
xor
xorb
cmp
jb
mov
pop
mov
add
ss
mov
imul
dec
ljmp
imul
xor
inc
repz
xor
adc
xor
cmc
adc
fcoms
jb
adcb
nop
outsb
xor
call
xor
pop
mov
push
xchg
int
mov
mov
dec
mov
das
inc
dec
mov
inc
outsl
cld
jge
add
push
bound
js
stc
movsb
scas
cmp
push
cwtl
dec
inc
dec
pop
adc
int3
filds
je
sub
xor
mov
hlt
and
movsb
addr16
cmp
incl
call
pop
in
sbb
sahf
fldenv
pop
aad
idivl
lahf
into
movsl
push
dec
pop
add
pop
rorl
in
push
lods
mov
xor
sarl
xor
cwtl
sub
xchg
es
or
jl
jmp
loop
imul
scas
jg
pushf
rorb
and
out
mov
push
mov
in
adc
cs
div
add
cmpsl
mov
mov
pop
rcrl
or
xchg
push
xchg
cmp
ret
add
mov
shr
cmpsl
shll
cmpsl
or
jle
push
aaa
push
cmp
loop
adc
mov
cmc
xorb
enter
movsb
xlat
xor
shrb
cmpsb
and
fldl
or
jns
nop
cs
mov
cmc
insl
and
rcr
outsb
jmp
xchg
icebp
icebp
hlt
sbb
pop
jns
aaa
push
mov
fnstsw
addr16
adc
and
notl
xchg
mov
in
dec
mov
push
mov
dec
xchg
inc
fldt
pop
xchg
mov
into
push
pop
ud1
mov
loope
jge
cli
fs
xor
icebp
ret
ret
notb
sub
mov
leave
xor
jno
dec
inc
xlat
loopne
and
dec
inc
xor
cltd
outsb
movsb
adc
imul
dec
lods
stc
es
xchg
test
loopne
mov
xchg
inc
lock
xchg
jns
pop
or
sub
stos
push
insb
cwtl
fwait
shrb
sbb
sahf
rclb
push
arpl
add
aas
sub
mov
movsl
loopne
mov
cmp
cltd
arpl
sub
mov
pop
mov
sbb
dec
ja
mov
jge
imul
mov
inc
push
aas
or
dec
inc
adc
jae
test
pop
and
push
add
pop
test
std
jnp
push
xor
adc
loope
jecxz
stc
or
popf
leave
pop
sub
outsb
xor
repnz
cld
or
push
in
ss
pop
push
test
ret
sub
nop
dec
inc
lods
cmpsl
shr
add
add
jo
and
gs
xor
andb
jp
dec
stc
daa
xchg
inc
cltd
jmp
sahf
pop
imul
roll
pop
adc
pop
or
out
addr16
fisttps
jnp
rcll
push
je
dec
xchg
mov
mov
call
outsb
fstps
lcall
inc
inc
cmp
inc
js
lcall
std
cmpsb
push
add
sub
mov
dec
in
cs
jns
int3
in
mov
addb
fiaddl
mov
mov
lods
sahf
cltd
and
icebp
inc
cli
pop
shl
or
jg
pop
call
sbb
sub
pop
pop
xchg
xor
xchg
fxch
gs
lahf
jne
aam
fadds
adc
test
mov
mov
aam
sarb
add
ljmp
jecxz
add
xchg
mov
mov
fisubl
cmp
test
and
push
ljmp
xchg
cwtl
dec
cmp
mov
and
aaa
in
mov
sarb
cmp
xor
shrl
ds
ret
push
adc
pusha
aad
repnz
mov
sub
mov
push
lahf
lcall
dec
fdivl
ss
sarl
in
es
jmp
outsl
push
mov
dec
mov
aad
xor
test
stos
mov
lret
dec
ja
mov
loope
cmpsb
js
rcrl
inc
fcomps
stc
sti
in
inc
insl
xchg
dec
pop
ret
cltd
xor
xor
xor
mov
add
cs
aad
push
sbb
dec
and
xchg
incb
and
cmp
repz
popa
ljmp
adc
aaa
imul
dec
pop
int
mov
pop
dec
lods
inc
dec
inc
cld
dec
push
lret
sbb
cmp
sbb
sbb
neg
mov
repnz
push
pop
jmp
aas
jns
in
shl
pushl
cmp
xchg
sbb
call
xlat
mov
xorw
sahf
add
das
idivb
lahf
or
and
and
mov
or
aaa
push
lods
shrb
mov
scas
mov
add
mov
ljmp
and
sti
ficoms
cmp
popa
jb
popf
insb
pop
test
pop
outsl
gs
push
mov
inc
aaa
adc
test
dec
push
ljmp
xchg
ret
push
mov
and
nop
sbb
mov
popa
push
inc
sub
cmpsb
jne
movsl
outsl
clc
aas
xor
incl
cltd
out
dec
push
mov
bound
add
stos
test
or
xorb
dec
jle
loop
xor
outsb
jl
scas
fidivs
ja
ds
lds
sbb
daa
and
addb
jnp
loope
jl
shll
jb
andb
mov
add
add
dec
push
mov
int
and
sahf
test
fisubrs
incb
pop
into
mov
cmpsb
xlat
and
cmp
push
cmp
adc
insl
cmp
pop
jbe
mov
push
pop
js
rcrb
pushf
push
xchg
sbb
push
shlb
xchg
pushl
pop
xchg
xor
popf
ss
andb
push
push
xchg
fists
inc
repz
data16
xchg
sub
nop
lds
inc
add
xor
rorb
notl
in
sub
fmuls
push
test
or
pop
jge
and
test
enter
push
sub
sub
adc
inc
dec
out
cmp
mov
cltd
cmp
pop
out
pop
dec
fadds
and
pop
push
jl
mov
cli
lds
or
xchg
shlb
fstpt
divb
jo
ret
stc
rol
xor
add
adc
and
nop
ljmp
adc
mov
add
mov
inc
cwtl
lds
xor
inc
stc
adc
pop
and
ja
mov
inc
or
jo
push
decl
test
mov
mov
aam
or
dec
outsb
jbe
mov
and
js
cmpsl
jecxz
divb
adc
nop
ja
mov
dec
sahf
mov
pop
das
dec
inc
jae
dec
mov
adc
sbb
push
push
mov
lcall
repz
mov
das
cli
inc
push
xor
shlb
inc
jle
xor
pop
bound
lock
test
cltd
push
pop
xchg
ss
in
inc
jns
insb
fisttpl
lods
mov
loopne
push
out
dec
bound
sbb
sbb
mov
xor
sub
test
je
pop
data16
push
cli
rclb
cltd
add
imul
or
aas
pop
mov
pop
add
stos
mov
lcall
xchg
rol
popf
loop
xchg
dec
in
mov
xchg
out
lret
js
sti
adc
sbb
loop
fcompl
mov
inc
rclb
enter
xlat
loopne
int
cmpsb
adc
push
arpl
aad
cmpsl
add
fsubr
jecxz
in
fstpl
jnp
jmp
ret
and
ljmp
xchg
iret
adcl
lcall
cmp
sarb
sub
cltd
and
cltd
fisttpll
mov
fcmovnu
jbe
pushf
sub
cmpsl
xor
mov
nop
aam
je
dec
out
jnp
xchg
les
sub
call
and
movsb
lret
subl
jne
aas
jno
inc
mov
dec
js
arpl
sbb
jae
jmp
jns
xchg
lea
mov
cld
sbb
test
or
push
fsubrp
lods
dec
imulb
ss
cmp
jl
mov
mov
in
cmp
inc
subl
popf
aaa
mov
add
ljmp
add
xchg
mov
shll
insl
or
mov
sahf
lds
mov
dec
cmp
or
mov
int
dec
jo
cli
jne
hlt
cmpsb
leave
mov
lock
cmp
mov
into
xchg
inc
jns
adc
stos
mov
mov
cmp
test
xor
cmpsb
sti
jne
sahf
loope
insb
sub
push
adc
sbbl
scas
push
inc
leave
jmp
sub
mov
test
dec
lahf
int3
dec
jmp
sti
jecxz
cltd
lcall
dec
dec
push
adc
aam
sbb
movl
lock
mov
lock
add
daa
incl
popf
adc
cmp
imul
clc
sbb
shr
cmp
cmpsb
push
jns
notl
test
xchg
sbb
mov
push
pop
push
cld
jp
rorl
pop
mov
xchg
mov
insl
push
daa
cmp
lods
sti
add
sahf
mov
adc
mov
test
and
push
lock
sbb
pop
ljmp
lods
inc
mov
sbb
out
add
cld
mov
sub
dec
in
fxch
xchg
xchg
sub
xchg
and
popf
mov
es
push
mov
pop
ljmp
scas
je
add
imul
mov
test
push
jb
cmpsb
es
aas
ret
adc
les
pusha
and
aad
push
jp
es
cs
les
addr16
insl
pop
cli
jle
fcmovbe
scas
xor
lods
or
mov
cltd
mov
lcall
out
orb
lock
pop
dec
jle
dec
imul
jmp
rclb
stos
jae
fcmovnu
movsb
push
push
mov
repnz
mov
mov
cli
jo
mov
sub
lret
mov
ds
je
ficompl
xchg
or
push
inc
jb
jmp
out
cmp
aas
fdivl
les
pop
xchg
and
xor
and
cmc
fistpll
adc
mov
xlat
stos
pop
xor
movsb
xlat
cmc
lahf
mov
aad
addb
out
pop
mov
add
add
int
movsl
andl
mov
jecxz
rcll
jae
push
and
xchg
fwait
jecxz
xchg
jno
cmp
insl
pop
fidivrs
adc
and
xchg
test
push
xor
xor
mov
jmp
bound
adc
sbb
sub
mov
dec
popw
je
stos
jb
sarl
pusha
push
clc
mov
in
je
scas
adc
lods
sbb
add
sbb
rorl
adc
xchg
xor
jp
stos
ss
lret
mov
rol
sahf
call
sub
scas
pusha
inc
dec
cmpsb
dec
cmp
pop
xchg
adc
mov
jle
add
add
cmp
pusha
pushf
and
xor
cmp
shll
sub
dec
cmp
jmp
push
pop
fxch
cmp
movsl
mov
fsubr
jbe
dec
push
mov
cmp
mov
enter
lods
popf
xor
add
cmp
pusha
in
push
das
cmp
jmp
fisttps
popa
insl
lds
jmp
pop
int3
cmc
in
fsubrl
add
insl
sbb
sbb
pop
cwtl
push
adc
xor
push
cli
inc
and
imul
or
cltd
and
iret
test
mov
adc
push
xchg
inc
mov
dec
aas
and
dec
mov
xor
dec
or
movsl
aaa
dec
add
mov
push
out
or
shld
shll
adc
dec
mov
jo
test
fisubrs
stc
push
frstor
add
outsb
cmp
cmp
pushf
fimuls
insb
enter
lods
push
sbb
pop
orl
shll
jge
fcmovu
mov
faddl
add
test
xchg
jnp
imul
pop
mov
dec
subb
and
stc
lcall
stc
popf
sub
popl
jecxz
out
mov
mov
push
inc
xchg
inc
inc
jl
arpl
les
fistps
jae
dec
ss
rorl
iret
xor
or
inc
repnz
aam
fcomi
outsb
pop
pop
or
stc
in
roll
movsl
stc
notl
shr
cmpb
add
jg
sahf
into
mov
add
mov
sbb
add
sti
std
fidivs
and
test
push
mov
out
scas
pop
aas
enter
daa
or
mov
sbb
push
outsb
out
add
or
push
cld
mov
cmp
push
push
add
inc
jnp
call
pop
adc
push
cmp
pop
mov
push
cmpl
xlat
out
mov
leave
cmp
test
pop
stos
pop
jb
leave
inc
push
mov
mov
push
stc
push
out
pusha
xchg
sahf
xor
mov
out
push
cmp
push
mov
or
test
push
adc
ret
ffree
jmp
cmp
jmp
adc
mov
ret
scas
fnstenv
mov
add
push
arpl
dec
mov
mov
mov
inc
or
mov
jnp
mov
dec
cmc
in
das
push
ljmp
scas
adc
jle
push
int3
sbb
das
out
inc
inc
cmp
pop
out
ds
adc
lahf
rcll
arpl
jo
sbb
cwtl
aad
popl
mov
ficompl
mov
enter
aas
popf
gs
push
mov
repz
ds
or
in
scas
dec
imul
orl
int
loopne
mov
push
divps
repz
mov
push
xchg
adc
outsl
out
decb
inc
add
sub
mov
push
mov
roll
sbbl
mov
add
xchg
mov
lods
sub
aaa
loope
fiadds
jns
sbb
xchg
mov
shll
pop
xlat
mov
in
test
push
push
pusha
mov
addr16
and
mov
icebp
out
sub
jo
pop
jbe
mov
ja
and
sbb
xorl
out
sub
or
aad
mov
cmpsb
xchg
out
cld
push
xlat
mov
mov
add
mov
dec
jge
cmpsl
xor
fisttpll
gs
mov
jle
repnz
push
inc
add
loope
and
jg
ffreep
outsl
or
cmp
sub
dec
repz
iret
xor
test
lock
xor
inc
adc
cs
pop
xchg
fcoms
sbb
mov
out
fucomi
test
lods
jo
data16
sub
cs
push
adc
dec
cmp
mov
shl
arpl
insb
mov
lret
pop
inc
inc
mov
jnp
fs
xor
lret
pop
leave
mul
push
test
jecxz
lock
pop
xchg
lret
sub
es
jmp
pushf
jmp
pushl
stc
xchg
pop
jb
xor
lahf
mov
push
push
scas
movsl
jae
ja
mov
jg
xchg
push
dec
in
popa
arpl
lea
xchg
adc
rcrb
shrl
and
adc
mov
push
loope
in
aam
add
cmp
fs
inc
cmc
aas
sbb
jo
cmpb
mov
jae
pop
pop
mov
and
aas
lods
insl
pop
jmp
shll
sbb
sar
sbbl
mov
push
rdtsc
add
lret
xchg
cwtl
push
lret
cmp
mov
frstor
std
mov
out
std
arpl
push
sbb
add
mov
inc
mov
mov
jg
xor
sbb
in
mov
cmp
and
inc
out
adc
andb
outsb
cmp
les
xor
add
js
cld
jmp
push
sbb
cs
fwait
ljmp
xchg
icebp
sub
mov
lret
roll
jle
mov
xchg
into
xchg
or
jns
shll
icebp
jne
lahf
dec
mov
dec
int
inc
aaa
jecxz
cmp
inc
or
xchg
movsb
inc
lods
xchg
in
pushf
xchg
cmpsl
push
call
pop
jl
pop
ret
movsl
or
dec
add
popa
pop
fistpll
mov
xlat
xchg
ja
scas
stos
push
fsts
sbb
sbb
lcall
add
sbb
jns
roll
negb
cltd
sub
pop
cmp
jp
cmc
adc
in
mov
test
fldl
js
sbb
popf
out
pop
adc
out
and
outsl
jg
or
push
les
hlt
out
rcrl
sahf
cmpsb
out
into
jl
adc
bound
add
inc
dec
dec
cmp
mov
adc
inc
hlt
mov
or
shll
push
scas
imulb
mov
in
repz
jb
sbb
cmpsl
sbb
es
xchg
dec
pushf
pop
cmovg
push
sbb
pop
int
scas
mov
in
test
sbbb
pop
and
add
jmp
pop
fcoml
bound
inc
mov
xor
sub
addl
adc
aam
inc
icebp
nop
xchg
lret
or
sub
xor
jmp
lock
and
aaa
pop
aad
push
mov
sarb
fistpll
push
jnp
mov
scas
testb
inc
arpl
popa
jecxz
jnp
jbe
fsubrl
jg
fcoms
insl
inc
mov
clc
fcmovnu
sbb
mov
sbb
jge
push
test
js
add
int
cwtl
jne
or
fwait
into
mov
dec
pushf
jl
inc
push
ja
jae,pt
adc
bound
lahf
sti
nop
xchg
dec
pusha
add
fildll
pop
mov
fsubl
xor
nop
xchg
push
xchg
cs
lods
cld
sub
sub
sub
mov
test
pop
mov
and
hlt
jecxz
pop
adc
fisubl
xor
std
or
and
loopne
sbb
push
adc
pop
out
push
stc
sub
add
popa
or
adc
dec
pop
gs
push
fnstenv
mov
dec
mov
pop
fxam
cmp
pop
push
dec
push
mov
adc
sub
jecxz
int
pop
mov
xor
inc
xor
xor
and
mov
test
pop
sbb
sub
sub
mov
es
rcrb
inc
lret
cmp
dec
imul
sub
mov
shll
fst
mov
pop
and
or
icebp
sti
pop
inc
adc
xor
push
push
and
mov
mul
lret
or
ja
inc
stos
and
aam
daa
fsubl
sub
sub
imul
leave
jp
pop
leave
or
enter
cmp
dec
adc
mov
aaa
data16
dec
int3
ljmp
test
fldl
push
jp
cmp
fidivl
mov
cld
inc
add
add
adc
xchg
ret
into
jne
test
xchg
mov
xor
mov
mov
inc
fdivr
rcrl
jb
jo
pop
mov
sbb
jo
sbb
xor
xchg
outsl
in
ja
jmp
ja
or
inc
movsb
dec
mov
push
xlat
xchg
xor
and
adc
inc
xchg
lods
xor
aas
in
adc
mov
sbb
mov
lock
or
daa
sbb
enter
mov
or
pmulhuw
and
cmp
popa
sub
int3
jb,pn
mov
pop
shrb
rolb
pop
dec
test
mov
inc
jecxz
jp
fcomip
imul
pop
mov
sbb
push
xchg
cmp
mov
or
jae
rcrb
out
fdivrs
cwtl
xchg
mov
pop
pop
pop
dec
mov
in
cmpl
sub
imul
push
push
lods
mov
pop
pop
scas
jl
lret
fisubrs
adc
jnp
or
subb
lods
push
js
je
mov
aam
push
dec
leave
fadd
mov
cmp
xchg
xor
jne
cmp
sbb
cs
pop
es
imul
xlat
and
xor
push
ficomps
addr16
popf
cltd
or
mov
adc
movsb
movaps
popa
shr
arpl
dec
int
xchg
rorb
es
icebp
and
sarb
or
sahf
adc
or
daa
xor
xchg
mov
adc
fwait
lock
or
test
inc
inc
pop
xchg
xchg
add
jbe
andl
rclb
shll
pop
pop
js
pop
push
lods
ficomps
xchg
add
and
jecxz
xchg
es
sub
mov
sub
outsb
pop
lret
sub
dec
movsb
pop
enter
pop
sti
pop
lds
push
ficoms
lods
shr
cvtpi2ps
cmp
notrack
lods
add
sti
gs
or
jg
daa
lahf
out
mov
mov
adc
aad
adc
imul
push
rclb
add
add
mov
mov
or
loop
cmc
lea
push
lahf
subl
cwtl
in
test
arpl
mov
push
and
fmull
sub
daa
pcmpgtw
mov
cmp
xlat
mov
jno
movsb
mov
ds
cltd
add
mov
shlb
dec
jno
dec
xchg
jo
loope
call
mov
ss
pop
jne
sbb
mov
mov
stos
and
jns
sbb
ret
pop
jnp
sahf
and
sub
in
jo
test
push
mov
lods
mov
bound
insl
pop
popa
xchg
and
hlt
and
sub
sbb
aad
mov
mov
xchg
adc
xlat
lret
jle
outsl
enter
jg
adc
jp
adc
icebp
int
sbb
repnz
hlt
push
inc
jecxz
notl
jnp
ret
aad
fs
push
xlat
aam
jno
fisttpl
das
jmp
and
and
loopne
rcrb
ljmp
sbbb
add
adc
sub
test
pop
add
adc
cmpsl
jno
int
enter
inc
jns
scas
decl
fisubl
stc
test
sbb
aam
and
push
jmp
cltd
ss
decb
mov
mov
in
aad
mov
mov
or
nop
mov
imul
dec
mov
ror
movsl
push
or
fbld
jbe
fisttpll
jmp
pop
bound
out
movsl
test
stos
xorl
xchg
adc
mov
sub
ss
sub
cld
mov
lret
push
jge
inc
std
ljmp
in
loopne
sbbl
popa
fcmovnu
sbb
pop
and
pop
lock
adc
and
inc
test
jne
popf
mov
xor
ret
mov
push
js
scas
lods
sub
sbb
sti
push
movsl
or
lcall
roll
jecxz
repnz
mov
xchg
ficompl
sbb
aad
dec
daa
nop
jp
imul
loope
inc
jge
pusha
divb
xor
mov
push
mov
jnp
cmp
daa
jmp
dec
out
fdivrl
add
into
ss
fcmovnb
add
test
pop
les
decb
sub
xchg
cmc
aas
lods
in
in
xchg
mov
mov
adc
in
xchg
rep
ror
test
adc
jne
or
movsb
or
popf
sbb
adc
xor
jno
ret
fs
subl
mov
jecxz
or
test
mov
arpl
xchg
in
mov
fbld
xor
bnd
gs
xor
imul
icebp
int
out
scas
repz
mov
shlb
push
fs
push
or
repz
enter
movsb
xor
mov
icebp
ds
xchg
gs
adc
sti
mov
mov
in
insl
addr16
ljmp
pop
test
mov
jns
cmp
sbb
mov
inc
or
mov
rolb
xor
jl
inc
cmpsb
lret
jmp
cltd
clc
sbb
mov
pop
or
or
xchg
es
sbb
gs
fs
dec
ror
iret
insl
and
xchg
mov
inc
insb
mov
pop
dec
movsl
fnsave
icebp
aaa
movsl
inc
mov
jno
push
xor
jbe
pop
adc
cmp
stc
cmpb
pop
xor
mov
out
mov
jl
in
sti
dec
fcoml
jl
and
push
push
pop
add
pop
adc
cmp
inc
hlt
xchg
pop
out
stos
ret
push
sti
push
mov
mov
push
push
popf
pop
or
add
fcmovnu
movsl
movsb
pop
mov
mov
lret
imul
scas
call
pusha
nop
mov
jae
mov
cmp
arpl
pop
addr16
es
jg
loopne
sahf
and
fs
in
ret
xor
inc
icebp
jns
jmp
xorl
imul
imul
and
dec
fnstenv
int3
xchg
ss
cmp
int3
sti
xchg
aas
subl
bound
loopne
jno
cmpxchg
xor
sbb
xchg
icebp
out
and
add
xchg
dec
popa
bound
das
jnp
stos
xchg
or
out
das
movsl
aad
mov
mov
cmp
movlhps
xor
inc
popf
out
sti
stos
in
in
lahf
lahf
inc
push
stos
fmul
dec
adcb
xchg
movsb
mov
add
jns
ja
xor
loopne
pop
add
xor
mov
cmp
sbb
push
lock
cmp
mov
seta
loop
inc
mov
in
aaa
out
out
jge
nop
lahf
sub
push
xor
xor
ret
pop
fwait
mov
icebp
hlt
or
add
and
pop
int3
pushf
cmp
jns
aas
jg
xor
mov
sub
adc
test
add
dec
mov
leave
xor
sahf
out
mov
cmpsl
icebp
push
mov
mov
mov
fdivr
xor
jle
mov
mov
movsl
cmp
ret
jb
mov
repz
test
add
pop
push
inc
jecxz
in
out
movsb
sub
inc
lahf
in
sahf
enter
call
fidivrs
stc
ljmp
ljmp
mov
pop
push
add
mov
stos
outsb
mov
add
sbb
loop
adcl
js
mov
les
js
data16
or
pop
sarl
mov
sub
xchg
mov
pushl
call
cmpsl
fidivrl
fs
test
adcb
jge
test
xor
mov
clc
dec
mov
in
loope
test
adc
loope
mov
dec
push
inc
pop
push
dec
std
movsb
sahf
and
inc
push
repz
xchg
push
jae
loop
std
pusha
cmp
popf
mov
jno
int3
push
mov
sbb
inc
push
hlt
rcll
pop
jg
sbb
ljmp
pop
dec
jae
out
aaa
outsb
outsl
popf
lret
or
paddb
in
mov
mov
cld
call
in
jbe
fisttpl
stc
ljmpw
xchg
test
or
ucomiss
adc
mov
popa
push
insb
fildl
sub
dec
or
push
sbbl
push
mov
pop
mov
lds
aad
mov
sub
in
cmp
aad
aam
insb
mov
and
out
and
mov
ficoml
sub
std
hlt
dec
jle
push
push
cmp
inc
jmp
aad
rolb
in
mov
pop
sahf
cmpsl
outsl
cld
in
outsb
and
leave
sub
test
das
ret
idivb
xchg
sub
fmull
xchg
push
jnp
dec
cs
lcall
mov
insb
shlb
push
adcb
aam
xor
sarb
sbb
rorl
dec
push
cmp
inc
cmp
movsl
in
pop
jge
imul
stos
or
jmp
or
sub
jae
ret
inc
mov
pushf
sub
repz
jecxz
add
int
mov
and
cmp
movsb
add
mov
dec
mov
shlb
push
cmp
cltd
cs
mov
push
adc
or
inc
leave
lock
imul
mov
or
das
aas
fdivrs
pop
push
pop
mov
popa
sub
jne
lahf
jb
dec
test
sub
mov
push
and
nopl
and
push
in
pop
imul
mov
cwtl
test
ret
sub
imul
push
push
xor
push
dec
or
or
loope
iret
int3
mov
and
pop
cmc
into
lret
mov
bound
test
dec
or
inc
xor
mov
out
sub
mov
sbb
dec
aam
into
mov
enter
ljmp
add
dec
dec
xchg
push
push
rcl
movsb
mov
sub
and
bound
sahf
inc
push
cmp
int3
jmp
mov
pop
dec
repnz
jg
mov
sbb
push
pop
stc
sbb
mov
jo
lods
xor
mov
mov
fnsave
mov
jecxz
outsl
dec
std
rol
cwtl
xor
push
add
inc
ret
jb
test
addr16
mov
sahf
cmpsl
out
test
subb
outsb
repz
int3
xlat
push
cli
mov
arpl
clc
sarb
scas
aad
ja
jb
push
xchg
aad
dec
pusha
pop
pop
scas
add
aas
loopne
hlt
adc
mov
mov
cmpsb
mov
mov
cmp
xchg
mov
adc
pop
jle
inc
lock
in
sub
daa
mov
xor
stos
inc
dec
das
scas
add
test
dec
ret
jno
xor
jb
cmp
mov
jp
scas
mov
inc
outsb
mov
lock
mov
das
push
ffreep
ret
stc
push
xchg
movsl
jno
popf
pop
aad
push
adc
inc
fdivrl
sbb
sbb
popa
push
xor
in
push
cs
repz
aam
jae
out
adc
hlt
jnp
pop
xchg
dec
fs
in
jne
ljmp
sbb
push
xchg
mov
cmp
push
test
jge
shrb
xor
mov
xchg
repnz
fwait
leave
insl
inc
jecxz
xchg
leave
out
or
pop
add
iret
addr16
cld
jecxz
mov
mov
push
insb
sbb
cmpsb
fisubl
dec
sbb
and
jp
push
push
sbbb
push
sub
lcall
aaa
js
call
enter
push
bound
push
int
mov
pop
bnd
sahf
repnz
xchg
rclb
push
push
xchg
out
add
jg
int
dec
jl
iret
dec
outsb
lret
push
test
stos
jnp
push
jb
adc
roll
mov
jne
fnstenv
std
sbb
cmpsl
mov
repz
sub
jbe
aad
dec
pop
push
or
test
aad
xchg
push
xchg
xchg
iret
stos
cmp
aam
lea
adc
jns
or
mov
push
xchg
cld
lcall
xchg
sub
call
es
dec
xchg
mov
je
fcomi
idivb
cs
and
mov
pop
adcb
dec
mov
mov
push
cmp
xlat
push
je
xor
test
in
enter
lahf
sub
mov
pop
mov
scas
add
pop
jle
pop
ret
inc
les
inc
into
lods
cmp
push
int
push
xor
jno
adc
cli
movsb
into
pop
hlt
jmp
mov
xor
cwtl
mov
fcom
aaa
mull
rcl
cmp
sbb
jmp
jb
pop
aad
cli
icebp
into
mov
in
xchg
adc
insl
stos
xchg
cmp
or
lods
pop
or
xor
in
outsl
aam
sub
hlt
push
mov
decl
mov
dec
lods
pop
daa
sbb
sbb
fidivl
inc
stos
test
add
ss
adc
lds
push
es
push
js
mov
add
cmpl
stos
pop
loope
pop
mov
lds
adc
lret
into
add
cmc
scas
mov
jecxz
cmp
es
dec
xchg
sub
je
and
xchg
xor
xor
sti
cmpsl
mov
xchg
inc
xchg
sbb
sub
add
and
xchg
xchg
mov
out
sub
in
jl
xor
mov
enter
loopne
inc
leave
rorb
roll
cmp
inc
js
gs
test
hlt
or
adc
in
test
sbb
inc
iret
mov
mov
sub
mov
cltd
xor
cli
add
cltd
inc
int3
out
push
xchg
ret
cmc
lock
mov
mov
xor
lcall
xchg
out
shlb
pop
fsubs
and
test
ret
cld
cli
xchg
lods
imul
dec
cmp
sbb
les
and
push
leave
fmul
in
add
xchg
arpl
sarl
in
rcll
xchg
push
mov
lret
push
pop
jl
lods
mov
das
imul
frstor
xchg
arpl
mov
and
inc
and
mov
movsb
mov
inc
jnp
popf
mov
jp
scas
in
movsl
movsl
pop
sbb
adc
in
jne
mov
test
repz
out
jmp
fwait
push
jp
fbld
fs
es
into
fldl
mov
out
xchg
adc
xlat
push
aas
fwait
xchg
inc
pushf
std
out
adc
or
mov
fisttps
inc
pop
fidivrs
sbbl
or
inc
insl
movsb
data16
mov
or
inc
mov
adc
push
fsubl
cmp
les
sub
jbe
fldenv
cmpsl
mov
add
mov
fsqrt
inc
jge
cwtl
sub
add
std
mov
cmpsb
jmp
imul
pop
stc
shr
pop
sti
mov
cmp
addb
xor
stos
imulb
or
push
jmp
loop
cli
adc
cmpl
repz
pop
add
mov
sub
push
nop
mov
int
fistpl
shrl
std
pop
sbb
jl
sbb
mov
adc
adc
test
movsb
mov
lea
xchg
testb
std
sbb
mov
dec
pop
add
fcmovbe
sbb
and
andl
mov
adc
inc
les
imul
movsb
sbb
fsubr
rolb
js
or
fdivrl
aam
int3
sti
sub
sarl
jl
adc
std
pop
btc
cmp
lahf
sub
stos
js
dec
sub
push
icebp
xchg
mov
and
mov
push
enter
lret
loopne
cmp
push
jg
lret
lods
stc
loopne
push
pop
cmc
clc
fmul
mov
push
sarl
pushf
ret
dec
sub
xchg
mov
push
push
ret
insl
xor
sub
fistps
jae
xor
cwtl
pop
mov
movsb
fmulp
roll
sub
sahf
daa
mov
cmp
pop
or
dec
xchg
enter
test
loope
dec
push
clc
dec
xor
shll
xor
jmp
mov
lock
or
adc
in
xor
ret
lahf
cli
imul
cmp
les
js
nop
mov
out
stc
add
jns
mov
mov
push
ja
push
xor
dec
ss
in
jo
addl
sub
mov
mov
sbb
pop
mov
fstps
es
out
loopne
and
pop
push
sbb
loopne
ror
fcomi
stos
loopne
cmpsl
scas
cmpsl
jne
mull
arpl
pop
lret
add
sbb
sub
imul
ljmp
nop
ja
pop
mov
adc
pop
and
xchg
repnz
loope
mov
cmpsl
lock
push
test
sub
fdivs
stos
dec
inc
sub
mov
mov
das
out
ret
cmpsl
jbe
push
jae
add
cmp
pop
pop
xchg
sbb
add
adc
push
sahf
pop
cmpsl
add
push
ja
in
push
push
sti
or
push
jnp
mov
push
add
mov
mov
mov
push
sub
movsl
shll
mov
or
ret
andl
push
fstpl
and
mov
sub
mov
aas
jo
inc
fisttpll
in
jecxz
lret
fstpl
cmp
test
mov
dec
movsl
mov
int3
jns
push
mov
push
or
lods
push
loope
out
xchg
inc
shl
or
fisttps
sti
xchg
push
push
insb
jecxz
das
ss
fidivl
scas
or
in
xchg
xor
fcmovnb
cmpsb
xchg
mov
or
into
cmp
in
dec
dec
data16
pop
jmp
pop
push
scas
push
inc
shll
jne
ficoml
sbb
addr16
mov
xor
mov
cld
sbb
shl
pmullw
jne
outsb
and
mov
stos
mov
and
test
adc
out
push
int
popf
mov
sub
sbb
stos
rclb
mov
mov
sbb
testl
aad
and
test
jp
shl
jns
push
cmpsl
pop
cwtl
adc
orl
andl
aam
lock
shll
shll
inc
inc
outsb
test
ja
and
or
push
notl
xor
aad
xor
jmp
aas
pop
lcall
push
lock
add
test
cltd
mov
loop
jae
roll
in
in
in
mov
mov
je
lods
push
stc
rol
cmp
shlb
lcall
loope
push
add
mov
mov
sub
dec
cmpsl
pop
vmwrite
xorl
je
xchg
dec
mov
sbb
push
dec
rorl
orl
insl
sbb
cld
fsts
ret
dec
ljmp
jno
cmpsb
mov
and
fmul
pop
xchg
out
lea
into
dec
das
dec
fistl
loop
xchg
push
movsb
xchg
int3
lea
dec
pop
push
out
sub
xchg
push
adc
aad
or
lods
push
pop
mov
pusha
rclb
add
call
call
not
sub
mov
fnstsw
inc
mov
mov
jl
fs
xor
popf
aas
push
xchg
out
fcmovb
fldl
jo
rcrl
pop
in
push
and
loope
lds
push
jo
test
cli
into
pop
xor
cltd
fsubrl
cmp
cmp
cmp
aaa
imul
pextrw
mov
in
ffreep
xor
push
pop
cmp
sbb
sahf
push
pop
mov
flds
xlat
mov
cmp
pushf
adc
std
es
sbb
das
push
mov
mov
sub
push
data16
jge
lcall
je
jmp
call
mov
jns
and
scas
sti
push
icebp
jg
dec
outsb
mov
jb
cmpsb
outsl
ljmp
push
test
push
cmp
ljmp
cs
pusha
mov
addr16
lods
or
popf
cmp
add
sbb
sbbl
xchg
sti
mov
mov
jmp
mov
sub
fmull
paddq
push
movl
cmc
leave
adc
ljmp
imul
in
inc
sti
int
adc
fisubrl
push
andl
inc
popa
je
leave
ss
push
es
ret
mov
push
scas
cmpsl
pop
jl
xor
and
adc
movsb
push
lcall
out
inc
daa
cmp
xor
jg
push
mov
ds
xchg
mov
mov
je
jb
add
dec
fst
ret
inc
xor
pop
insl
ja
nop
inc
shrl
mov
out
out
push
cmc
mov
xchg
fmull
sbb
push
js
dec
dec
sti
and
jle
les
xchg
add
cld
adc
arpl
aas
inc
xchg
xor
ss
call
sub
pop
daa
mov
cmp
and
cmp
mov
mov
fsubr
outsl
and
rclb
mov
cmp
or
outsb
aaa
shlb
jmp
lods
movsl
fisttpl
jne
and
fadds
aas
icebp
mov
cli
fdivs
data16
int
std
sub
xor
adc
cmpsb
mov
and
std
js
lods
ja
jge
push
enter
repz
notl
insb
xchg
stos
dec
cld
xchg
jb
push
cwtl
aas
test
sar
pop
sbb
rcll
jo
scas
fnsave
add
dec
mov
scas
dec
cmpsb
mov
adc
dec
lret
mov
mov
std
les
or
aad
and
mov
push
shlb
shrl
dec
push
cld
inc
jp
lods
pop
fcompl
rorl
jb
outsb
mov
repz
push
outsl
addr16
aaa
dec
jae
xor
sub
test
aad
repz
xchg
pushf
rorb
mov
mov
cmp
pusha
sub
repnz
adc
mov
push
imul
xor
lods
lea
mov
jnp
bound
sub
dec
dec
xchg
sub
jbe
add
aad
rorl
ret
add
adc
cmc
mov
or
push
rcll
sarl
pop
in
pop
lcall
clc
sbb
pushl
mov
imul
mov
inc
xchg
push
push
pop
xor
xchg
cmc
push
push
imul
movsl
and
ret
add
lcall
mov
insb
aaa
sbb
adc
ds
mov
adc
sub
mov
pop
push
push
push
cmp
lock
or
test
or
jb
in
jmp
cmp
lahf
cmp
cli
xorb
push
sub
fisubrs
xchg
dec
outsb
movb
push
dec
push
push
sbb
js
xor
dec
arpl
cltd
fsubl
jns
xor
dec
xchg
cld
addb
xchg
mov
xor
rorl
int
out
jb
nop
mov
out
adc
xchg
xchg
test
mov
stos
sbbl
mov
imul
fimuls
mov
in
dec
cmpsl
imul
push
out
push
stos
cmpsl
dec
jle
xchg
in
insb
outsb
loopne,pn
pop
push
jne
inc
sub
push
xchg
adc
and
iret
ret
stos
mov
mov
jb
test
fistpll
jnp
jnp
repnz
out
or
cwtl
push
popf
adc
int
fs
push
nop
loope
ja
add
stc
out
mov
mov
jp
das
outsl
xor
rcll
pop
and
aas
aaa
sub
daa
pop
adc
dec
lret
imul
sarl
cwtl
rcll
dec
inc
loop
add
scas
inc
push
cmp
enter
inc
xchg
push
inc
xor
add
push
mov
test
push
sub
sbb
dec
jl
push
mov
lock
test
fdivs
xchg
shr
dec
outsl
cmp
sub
lods
cmc
pop
pop
fistps
sbb
mov
push
hlt
xchg
das
mov
pop
xchg
mov
mov
pop
pop
inc
jecxz
daa
or
add
dec
rcrb
cmc
scas
sbb
push
add
cmc
add
ss
insl
inc
jmp
mov
xor
das
jge
insb
xor
ljmp
ret
test
lds
push
cmp
jge
stos
das
test
in
cmc
sub
jae
loopne
mov
mov
aaa
adc
and
dec
xchg
or
add
dec
adc
or
ret
pop
xor
ret
mov
xchg
leave
mov
lods
pushf
testl
push
jb
xlat
xchg
add
pop
inc
mov
add
xchg
frstor
xchg
hlt
dec
bound
adc
ret
aaa
clc
xchg
lcall
outsl
mov
fidivl
and
aaa
jecxz
push
mov
inc
cmpsb
mov
push
pop
cld
push
stos
inc
sbb
das
and
push
nop
outsl
push
mov
loopne
cmp
lock
or
cmp
shrb
int
push
mov
adc
xor
pusha
aad
aam
lods
push
dec
into
jnp
aaa
lock
adc
sbb
mov
add
sub
loope
cmp
rcl
pop
lds
pop
iret
aas
pop
push
mov
cmp
push
push
xor
push
xchg
popf
jl
mov
mov
xchg
aad
icebp
adc
rcrl
lock
rcrb
cmpsl
xor
lret
dec
insb
dec
fsub
sub
cltd
push
das
push
push
sub
mov
add
into
jecxz
pop
sbb
jno
pop
push
and
adc
insb
jmp
shlb
dec
or
call
mov
cmpsb
rolb
cmp
push
mov
xor
sbb
adc
lods
xor
push
hlt
mov
lea
xor
lock
mov
mov
sub
xlat
subl
or
mov
mov
int
dec
in
in
xchg
nop
push
jae
mov
push
pop
cwtl
scas
scas
test
xchg
cmp
jae
frstor
xchg
sahf
pop
pop
ljmp
ror
or
leave
mov
lret
push
sarl
jbe
cmp
adc
inc
xchg
and
movsb
arpl
nop
andb
ret
ret
mov
sbb
scas
fcoms
dec
mov
pop
push
mov
cltd
adcb
adc
xchg
fisubrs
adc
loopne
cmp
nop
mov
mov
xor
fidivrl
mov
testb
xchg
mov
jmp
int3
ret
or
pop
daa
jmp
push
mov
dec
test
cli
inc
push
lods
divb
fdivl
mov
rorb
in
cmp
push
xchg
and
insl
xor
sub
das
sbb
mov
add
pop
call
jle
popa
jno
add
dec
push
add
lret
and
cmp
arpl
movsb
shr
cwtl
mov
sbb
xchg
fs
xor
and
xchg
mov
shlb
loopne
test
imul
and
sub
mov
jge
ret
stos
adc
sbb
stos
pop
popf
inc
stos
adc
mov
data16
lods
rcll
stos
sbb
jl
gs
subb
lea
sti
cwtl
dec
test
fnstenv
jne
and
cld
dec
pushl
notb
gs
cmp
fldt
popa
and
dec
int3
push
or
cwtl
push
add
mov
in
addb
mov
test
jp
mov
push
push
imul
sbb
lcall
cmpsl
sbb
xor
cmp
jns
lcall
and
repnz
ffree
xchg
add
mov
shr
xchg
push
repnz
push
or
push
cmpsl
pusha
sbb
xchg
in
lds
add
sbb
in
das
add
inc
cmpsl
mov
jl
sub
in
push
lahf
andb
lock
les
cld
arpl
pop
fildll
pop
movsb
sub
jno
outsb
cmp
aad
and
pop
nop
cs
and
insl
leave
xchg
movb
sub
and
push
push
pop
insl
push
pop
fiadds
fmul
cmpsl
adc
lea
pusha
fsubl
mov
push
dec
test
lret
imul
lret
inc
pop
imul
leave
push
enter
sub
adc
xorl
add
lcall
movsb
push
stc
mov
mov
inc
andb
into
or
fnstcw
push
dec
shrl
sub
popf
test
fists
mov
mov
pop
push
pcmpeqb
adc
adc
or
push
popf
cmp
int3
in
subb
sub
push
dec
push
inc
pop
dec
je
popf
adc
or
lcall
jecxz
cld
inc
adc
dec
jb
sbb
sarb
dec
xchg
inc
xor
dec
pop
daa
jecxz
bound
je
inc
insb
push
mov
imul
jmp
cwtl
call
jl
push
xlat
scas
push
das
push
or
andl
or
js
xchg
mov
pop
testl
mov
lret
push
je
hlt
movsb
inc
cmp
fcmovnbe
fsubr
cmp
push
into
mov
add
inc
mov
mov
popa
stos
and
adc
and
push
fisttps
imul
shlb
dec
cwtl
lock
fmul
inc
enter
cs
and
push
ret
xor
inc
push
repnz
cld
loope
popf
outsb
leave
les
lds
inc
push
adc
xchg
lds
in
mov
fisubs
adc
out
cmp
push
rcrb
lds
mov
jecxz
rclb
aaa
mov
adc
gs
mov
cmovl
in
jecxz
jmp
adc
jecxz
aam
movsl
daa
sbb
ret
push
pop
adc
mov
ss
push
and
sbb
sub
sub
xor
lock
test
pop
pop
fiadds
inc
jno
xchg
sbb
clc
cmp
pop
xchg
jns
pop
pop
dec
sub
pop
adc
lea
cmpsb
js
daa
push
rcll
je
mov
fistpll
jg
out
add
sbb
adc
adc
orl
shrl
lcall
int3
jmp
inc
add
jecxz
sbb
pop
cmp
imul
jnp
mov
lea
push
xlat
push
xor
into
movb
sub
mov
test
adc
cmp
popa
pop
mov
flds
push
mov
fisubl
push
cs
clc
pop
test
stc
push
daa
imul
hlt
out
push
int3
stc
or
popl
inc
pop
mov
xor
data16
jmp
pop
in
add
and
ljmp
push
adc
xor
lds
cmpsl
jmp
enter
shlb
fwait
lret
lea
cmc
nop
mov
pop
fistl
xchg
gs
cmp
and
dec
dec
dec
mov
js
adc
dec
arpl
dec
imul
fmuls
es
sarl
pop
in
xor
cmp
mov
sahf
mov
add
fwait
push
pop
mov
inc
inc
sub
rol
and
lahf
jle
and
mov
xor
out
push
scas
mov
enter
movsb
out
leave
int
lcall
movsb
sub
aad
aam
add
sbb
fadds
jecxz
inc
ljmp
xor
jb
cs
rcrl
adc
push
cmc
inc
negl
inc
mov
jecxz
cmp
out
test
sbb
pop
cli
add
adc
xor
mov
mov
adcb
leave
cmp
mov
sbb
lcall
cmp
mov
mov
or
inc
test
movsb
dec
pmaddwd
jge
clc
mov
ret
mov
cmpsb
lds
cltd
sub
cmp
in
cmp
push
lret
pushf
or
movsl
sarb
cmp
xor
jecxz
fdiv
mov
scas
add
jb
nop
mov
cwtl
xor
lahf
rorl
hlt
mov
inc
mov
ja
bound
sub
mov
adc
insl
cmp
int3
stos
jb
mov
ret
out
adc
adc
and
mov
add
adc
inc
repnz
lods
sbb
mov
arpl
mov
jns
jns
orb
test
shll
shl
xchg
aam
inc
mov
icebp
xchg
shll
ret
daa
push
xor
fcom
data16
xor
push
push
adc
push
dec
cmpsb
int
fstl
int
xchg
fldl
mov
jns
int3
scas
add
pop
stos
jns
add
sbb
lods
popa
stos
mov
add
pushf
cmp
push
shl
outsl
xor
jo
hlt
idiv
iret
mov
dec
sub
dec
bound
pop
xor
push
movsl
inc
push
out
imul
ror
jg
mov
mov
popa
cltd
push
dec
xchg
mov
imul
movsl
cltd
push
mov
test
pushf
push
orl
mov
rclb
dec
inc
add
test
lds
clc
movsl
movsl
sub
or
mov
sbb
scas
adc
rorl
test
pop
test
or
lahf
jb
inc
in
aad
std
pop
dec
jb
push
adc
pop
sarl
sub
seta
add
imul
fbld
cmp
jle
popa
fsts
sub
add
inc
and
push
lcall
mov
icebp
and
outsl
test
cmp
nop
ret
out
cwtl
les
imul
ficompl
popa
push
or
sti
push
insb
dec
call
pop
cs
sbb
jne
sahf
and
in
dec
mov
mov
in
mov
adc
cmc
add
enter
mov
aad
pop
cs
aam
mov
and
dec
cli
jle
push
sbb
push
rorb
out
out
xor
loope
pop
jo
testb
out
lds
shr
out
and
out
push
add
push
and
out
lods
push
mov
int3
or
jmp
push
cmp
push
adc
ljmp
enter
lock
arpl
dec
inc
cwtl
std
jno
aaa
jl
push
lods
lahf
out
pushf
cmp
stos
test
push
outsb
mov
jmp
or
and
mov
movsl
jg
push
cmp
mov
mov
stos
mov
bound
xor
pop
jmp
xor
and
ds
clc
inc
mov
sbb
repz
mov
lds
icebp
sub
sub
inc
movsl
and
xor
es
adc
inc
ja
mov
mov
mov
fldcw
mov
inc
in
fcompl
lods
dec
jb
in
ss
ret
mov
xorb
lret
xchg
mov
das
daa
jo
addr16
insb
jae
out
rcrb
sti
leave
add
movsl
xchg
or
repnz
mov
mov
out
mov
hlt
add
or
cmpsl
inc
pusha
outsl
pop
inc
outsb
int
cltd
ss
xchg
sbb
test
out
pop
sub
mov
xchg
jg
xlat
add
xor
pop
loope
dec
sub
jmp
sub
sub
push
iret
fbld
aas
rcrb
mov
hlt
inc
adc
dec
or
test
mov
inc
mov
pop
sti
outsl
ja
iret
int3
pop
dec
jp
mov
into
mov
loope
jle
arpl
jo
xchg
mov
movhps
add
sar
call
add
xor
push
aas
pop
test
in
cmp
js
jnp
inc
test
popa
inc
lret
shl
cli
jg
add
cs
mov
push
sbb
out
pop
fptan
mov
fildl
movsb
sbb
inc
mov
fistl
xchg
jge
push
xchg
jmp
mov
add
pop
pop
imul
lcall
mov
xor
push
add
lcall
nop
rorb
stos
cltd
cli
push
pusha
outsb
jmp
add
lahf
mov
fisttpl
jo
aam
out
jge
movhps
sahf
jp,pt
cmp
shl
push
push
dec
ds
pop
adcl
add
mov
adc
pusha
fistpl
mov
or
popf
div
pop
pop
cmp
xor
cli
aam
lods
push
ret
das
mov
icebp
shrl
cld
sub
xchg
jp
jno
jne
cmp
mov
cmp
movsb
ja
sub
mov
mov
jg
dec
sub
inc
jne
sahf
fisubl
hlt
pop
icebp
dec
xchg
and
aam
pop
jbe
push
fldenv
int3
outsb
ds
cmp
sub
in
insb
cs
in
add
or
outsl
dec
inc
pop
inc
dec
push
ljmp
jno
arpl
ds
mov
mov
bnd
xor
adc
pop
out
xor
fcmove
add
xchg
adc
jnp
mov
ljmp
inc
xor
outsb
fs
push
dec
mov
dec
shlb
inc
lcall
jne
adc
das
fcompl
test
jg
nop
int3
insb
mov
mov
test
clc
pop
cmp
pop
pop
or
aad
jmp
push
lret
ljmp
es
cmp
xor
lock
outsb
fmull
ret
and
pop
jnp
fwait
lock
cld
lahf
and
mov
aaa
inc
lock
mov
or
and
jle
aad
sti
mov
sbb
xor
rcrl
push
gs
xchg
mov
xchg
mov
leave
addl
popa
pushl
test
xchg
adc
outsl
lods
aam
pop
mov
mov
clc
dec
les
lods
sbb
aam
clc
mov
ret
pop
sti
sarl
es
out
lret
inc
hlt
mov
lods
idivl
push
dec
sbb
test
into
inc
insb
frstor
int3
sub
push
mov
shr
jmp
test
cmpsl
fists
fcomip
adcb
jno
add
push
fldcw
std
dec
add
test
cld
inc
lods
out
shl
lods
pop
es
fsubrs
jns
push
adc
call
insl
jg
push
xchg
inc
push
mov
and
iret
push
out
std
jb
mov
adc
aas
inc
neg
xor
jg
fildl
cltd
mov
inc
xchg
inc
insl
adc
pop
pop
fcmovu
mov
push
jmp
inc
mov
loopne
inc
frstor
jp
or
add
enter
mov
xlat
mov
sti
dec
xor
cli
and
sub
adc
pop
mov
mov
jo
xchg
repnz
sub
dec
push
add
or
ss
inc
das
pop
sbb
ja
xchg
fs
pop
fldl
and
lea
pop
fsubrl
push
push
jno
push
insl
sbb
nop
pop
pop
push
test
test
sbb
dec
pop
icebp
add
adc
add
dec
mov
xor
imul
adc
xor
cmc
fstpl
xor
xchg
adc
push
insl
int3
and
popa
orb
adc
aam
mov
adc
xchg
mov
lret
stos
sbb
insb
loop
cli
ret
imul
jo
and
js
fildll
sub
mov
mov
cmp
pop
xor
xor
push
jge
pop
test
enter
lods
cmp
lds
aaa
adc
rcrb
mov
into
xor
adc
sub
jb
sar
popa
inc
popf
inc
outsl
mov
cld
test
pop
sub
cli
das
rorl
shrl
mov
mov
insl
adcl
test
icebp
xor
inc
xchg
es
jg
adc
test
in
dec
lea
js
mov
sbb
sub
lret
sti
sub
lcall
jl
movsb
push
adc
leave
mov
cmpl
dec
rcrb
sahf
lods
sar
das
dec
lds
jmp
mov
sti
pop
jmp
mov
add
aad
in
adc
in
cmp
pop
mov
xor
inc
out
sub
add
jp
pop
sti
pop
fidivl
pusha
push
jno
xchg
cmp
shll
mov
or
and
xor
leave
sbb
mov
wrmsr
sbb
out
xor
incl
mov
lds
push
cs
test
pop
cmp
daa
in
dec
in
push
jge
stc
dec
or
mov
jno
jmp
es
into
frstor
repz
mov
dec
pusha
ret
pop
ror
out
gs
adc
sub
mov
clc
enter
in
add
jl
imul
mov
mov
dec
das
out
shlb
repz
data16
and
push
mov
inc
mov
cmp
arpl
in
pop
nop
loopne
add
or
outsl
and
rcrb
cmp
sbb
cwtl
jmp
leave
mov
loop
popa
add
nop
js
scas
lret
fdivrl
sbb
jb
or
jle
mov
sbb
mov
pop
mov
mov
sahf
mov
push
nop
rol
sbb
and
pop
pop
pop
int
and
inc
mov
mov
es
loop
mov
lds
add
pop
pop
repnz
and
mov
stc
aaa
sub
ss
inc
inc
mov
sub
imul
mov
sub
cld
mov
or
arpl
pop
pushf
scas
adc
das
push
dec
jge
or
ret
jbe
mov
pushf
aad
dec
movsl
sub
cli
mov
jg
orl
xor
push
mov
add
cmc
fdivr
fs
add
int
push
rolb
jo
inc
mov
jle
shll
inc
mov
or
jo
sub
fcompp
fistpl
fisubrs
adc
jle
and
imul
lock
xchg
jge
jg
lods
push
xchg
sbb
ret
cmpsl
inc
xchg
jne
iret
scas
sub
cli
jo
and
push
pusha
mov
or
sub
nop
mull
cmp
sti
rclb
mulb
pushf
add
enter
lcall
xchg
fmulp
push
xorb
sbb
push
mov
sbb
pop
dec
pop
nop
test
push
dec
xacquire
jle
les
pop
pushf
mov
fldt
out
cs
dec
imul
push
arpl
mov
cmp
and
ret
mov
cmc
es
xchg
push
lret
cmp
xchg
add
sub
push
xor
mov
inc
cwtl
es
push
mov
in
fiadds
pop
xor
pop
inc
inc
and
push
cmp
flds
push
test
cmp
aam
mov
imul
adc
add
pop
jae
mov
push
jno
mov
int
mov
mov
lahf
ret
adc
push
addb
int
out
mov
sbb
jmp
xlat
fmull
insb
adc
cmp
les
adc
je
add
scas
mov
scas
push
lods
stos
jb
dec
or
stos
inc
adc
js
cmpsb
mov
test
dec
ror
mov
sbb
inc
xchg
jo
xchg
aas
out
xchg
mov
xchg
adcb
rcrb
xor
loopne
dec
push
push
sub
fsubp
xchg
data16
mov
jmp
cmp
inc
orl
ljmp
or
cltd
fwait
int3
popf
outsb
pop
int
fdivrl
stos
xchg
mov
xor
addl
xchg
add
inc
sbb
arpl
sbb
in
push
and
dec
and
cltd
pushf
jle
cmp
lahf
or
inc
rcl
sub
push
jae
repz
mov
js
mov
out
add
cs
sbb
dec
loop
scas
bound
cld
mov
jbe
push
adc
adc
inc
add
lods
xchg
pop
cmp
cmp
inc
cwtl
pop
sub
jmp
mov
cli
dec
inc
mov
dec
jo
push
mov
pop
repnz
inc
add
inc
out
jns
mov
cmp
mov
lds
sbb
lods
in
jns
mov
sub
cs
dec
xorl
adc
jmp
cmpl
pop
sub
loop
imul
mov
testb
insl
outsl
or
xor
jns
aaa
aam
fwait
outsb
data16
ljmp
mov
dec
inc
inc
dec
and
or
sub
dec
dec
jg
cltd
add
xchg
mov
insl
scas
out
pop
push
xor
and
out
ror
push
add
jp
pop
pop
mov
jle
pop
pop
daa
pushf
mov
jns
push
inc
mov
cwtl
sahf
push
dec
daa
stos
ret
hlt
aas
loopne
cmpsl
mov
test
insl
js
mov
jns
mov
inc
aam
mov
sub
xor
ds
and
push
mov
cli
mov
iret
sarb
sbb
movsl
lret
mov
and
cmpb
jb
jae
mov
mov
lret
jmp
jb
in
or
ja
pusha
lods
cmp
push
mov
mov
sub
insb
xor
inc
mov
jle,pn
push
xor
enter
adc
popa
mov
inc
pop
cmpb
fbstp
aad
lea
addr16
testl
and
mov
cld
scas
xchg
ja
adc
divb
data16
and
orl
xchg
push
xor
sub
repnz
lcall
jmp
push
insl
cmp
iret
or
mov
in
fadds
cmp
stos
aad
adc
xor
gs
or
test
fdivs
rcrl
push
loop
mov
movsb
into
pop
inc
into
jmp
cwtl
adc
mov
lcall
xchg
loope
mov
fcoml
stos
or
in
push
roll
ss
push
nop
fstpt
mov
sbb
and
cwtl
pusha
fistps
test
adc
orb
shll
sbb
cmpsl
sbb
bound
xchg
jo
or
lock
mov
in
lods
fstpt
add
pop
fcoml
adc
jbe
pop
fwait
xor
and
inc
in
push
inc
mov
push
cmp
imul
pop
jb
mov
sbb
jo
mov
adc
push
in
mov
cmp
cmp
mov
inc
inc
xchg
decb
cwtl
xlat
cmp
aas
aas
lret
xchg
sarl
iret
or
push
inc
daa
cmp
push
xchg
lret
icebp
mov
inc
popf
outsl
mov
add
add
pop
jmp
push
push
jo
add
jp
out
loop
pop
pushf
mov
sub
addr16
ds
ficoml
xchg
pushf
and
jecxz
shl
sahf
in
xor
mov
cli
dec
lea
or
pusha
push
adc
adc
mov
mov
repnz
insb
dec
in
lds
mov
pusha
nop
dec
inc
dec
mov
jmp
aad
pop
es
sub
push
mov
repz
out
imul
cmp
xchg
jno
call
loope
push
cmc
pop
mov
lret
push
add
cwtl
les
int3
imull
sub
adc
or
ja
pop
xchg
out
andl
out
mov
xor
mov
pop
add
fnstsw
mov
mov
sub
add
xchg
pop
stos
xchg
adc
xlat
inc
xor
scas
dec
outsb
repz
ret
mov
cltd
xor
adc
push
mov
sbb
cmc
mov
subl
cld
add
dec
fisubs
xchg
mov
imul
fisttpll
icebp
inc
sub
scas
hlt
cmp
push
sub
in
fidivrl
out
sub
mov
xchg
sar
lret
lea
test
cmp
and
fistpl
sahf
add
out
jb
fcoml
mov
ja
fisubrs
mov
mov
jae
push
mov
xor
push
xchg
xchg
std
clc
clc
push
mov
test
sub
pop
mov
insb
sbb
test
fwait
mov
shll
push
pop
ret
sub
jo
jge
std
imul
mov
mov
and
ret
add
shl
xchg
xchg
mov
in
push
adc
pop
hlt
lret
fsubrl
aaa
addr16
stc
push
xchg
adc
pusha
cwtl
pusha
ljmp
xchg
imul
lahf
xor
paddd
inc
aas
out
sbb
mov
addl
fildl
lock
daa
mov
in
stos
inc
xchg
std
pushf
adc
mov
pop
mov
cmp
jmp
insb
push
jp
lcall
int3
sarl
pop
scas
pusha
leave
add
mov
bound
jmp
cli
dec
out
jbe
lret
pop
xor
pop
cmp
movsb
mov
je
repz
daa
xor
push
sbb
jg
pusha
pop
adc
ret
xchg
cmp
xchg
xlat
dec
pop
or
rcll
push
cmp
out
xchg
ffreep
inc
and
int
imul
or
push
fadds
out
ret
pusha
mov
jb
aas
xlat
mov
push
inc
rol
dec
dec
in
push
dec
xchg
mov
xor
mov
dec
adc
shll
sbb
pop
xchg
mov
jg
cmc
enter
and
pop
mov
cltd
testl
loopne
lods
into
cmc
xor
mov
or
imulb
cli
shrl
ja
cltd
pop
cmp
fistpll
pop
lods
mov
leave
dec
mov
adc
scas
jne
sub
out
out
push
sbb
sbb
aaa
clc
or
xchg
movsl
nop
dec
add
shr
lods
xlat
sub
enter
sbb
repnz
cltd
scas
cmpb
loopne
xchg
fnstsw
decb
ljmp
cmp
cs
dec
out
pop
sbb
inc
jb
jg
nop
pop
jle
push
pop
ljmp
pop
iret
or
mov
pop
xor
pop
push
mov
and
push
mov
add
adc
test
loop
mov
dec
roll
and
xor
mov
mov
stc
dec
out
out
sbb
fs
aaa
mov
fidivrs
lret
push
jl
add
mov
xchg
jb
hlt
lea
push
mov
pop
cltd
pop
cwtl
insl
mov
jno
sub
pop
sub
scas
loop
xlat
into
mov
sbb
adcb
cmpsb
dec
dec
lods
xlat
loopne
add
lcall
mov
loopne
mov
xlat
xor
adc
xchg
loopne
arpl
or
test
addr16
jmp
mov
xchg
add
ss
ja
dec
xchg
lret
in
sbb
xchg
push
or
or
mov
dec
popf
out
inc
enter
mov
ljmp
ret
adc
icebp
in
in
divw
ja
xor
sub
shrb
xchg
xchg
pop
arpl
and
pop
inc
sbb
xchg
jo
fbld
mov
arpl
pop
popf
in
int
lret
fdivr
jg
mov
jp
imul
cmc
add
ss
popf
fnstenv
imul
in
xor
mov
loop
jl
inc
repz
jnp
test
addb
hlt
negl
mov
outsl
inc
cli
cs
mov
push
xchg
dec
push
jp
stos
lods
in
mov
adc
xchg
jg
xlat
xchg
lret
sbb
pop
test
jg
cltd
out
or
mov
ss
jb
faddp
lods
out
popa
dec
and
or
mov
xlat
imul
mov
repz
xor
scas
adc
add
repnz
lret
lret
bound
sbb
cmpsl
add
push
xchg
popa
mov
push
dec
or
test
pop
xchg
sub
xor
int3
dec
cwtl
push
push
xor
adc
cmpsl
dec
lret
dec
out
xchg
mov
sub
insl
jbe
je
aam
xchg
notb
pop
xchg
adc
add
push
mov
sub
inc
popa
dec
push
inc
outsl
xor
inc
mov
dec
jmp
dec
cmpsl
aad
adc
mov
jge
insl
call
int3
fidivrl
mov
jnp
xchg
dec
aam
jl
out
negl
filds
mov
stc
or
iret
nop
test
or
clc
push
cmp
fsts
mov
push
mov
xchg
adc
test
xchg
ds
and
mov
mov
dec
ds
popa
sub
sbb
jne
mov
imul
mov
mov
xchg
xor
or
jg
rorl
inc
sbb
sbb
and
into
dec
jp
and
aad
sbb
es
lods
fcoml
sub
mov
sbb
lock
cmp
jl
push
mov
loop
test
fadd
fsubrl
bound
push
sbbl
or
repnz
vpunpckhqdq
adc
mov
pop
jo
inc
lret
push
xadd
sub
roll
iret
sahf
in
lea
shll
mov
enter
jne
loopne
jns
mov
insl
aaa
scas
mov
das
sub
jmp
sub
mov
jmp
jnp
cltd
jp
dec
and
pop
out
cmp
sar
add
xor
inc
fnstenv
jecxz
cmp
out
dec
in
pop
or
lock
dec
mov
sbb
shll
test
mov
dec
and
stos
ja,pn
cltd
mov
pop
stos
sbb
out
aad
mov
cmp
stos
aaa
sbb
xchg
mov
add
push
arpl
lds
xor
sub
push
movsb
stos
into
rcrl
jno
sbb
jp
mov
push
sbb
inc
jmp
movsl
xor
rorl
shl
scas
sbb
or
inc
inc
and
add
and
push
cmp
dec
das
xor
pop
outsl
or
jb
push
rorb
scas
dec
stc
sbb
pop
xchg
or
enter
jmp
in
adc
pop
xchg
pop
arpl
neg
or
cmc
push
sub
xchg
je
mov
xchg
cmp
pop
mov
ret
sysenter
scas
adc
ja
imul
cmpsl
xor
adcb
mov
ljmp
in
jno
xchg
mov
jl
sahf
xor
mov
mov
movsl
sub
rcrb
sbb
push
adc
pop
cmp
xor
push
clc
flds
es
fcomi
xchg
test
nop
test
push
and
les
add
xorb
orb
cmpsl
ret
mov
cmp
int
inc
shl
out
aad
mov
nop
test
lock
stc
fcmovbe
sti
int3
cmp
lret
lds
mov
push
mov
adc
hlt
lods
lcall
sahf
push
mov
ss
scas
cmp
decl
icebp
clc
aas
jl
sbb
or
shl
cmp
daa
in
mov
xor
jge
pop
pusha
jbe
cmp
es
rol
jne
clc
sahf
and
dec
sub
or
push
jne
lea
and
sar
jo
mov
push
sbb
jp
rolb
or
popa
sbb
add
sub
lret
mov
inc
outsb
xchg
xchg
ret
or
lods
dec
rcr
jge
lret
ror
daa
jns
mov
cs
pop
push
ss
jae
scas
or
aad
pusha
imul
test
push
adc
shrl
addr16
xchg
inc
push
dec
lods
int
xchg
push
sahf
push
and
and
xlat
push
push
and
push
pusha
push
xchg
add
pop
jmp
mov
inc
imul
adc
aam
fadds
cmpb
jnp
xor
sti
sub
add
insl
sbb
icebp
out
lods
sbb
inc
and
jns
in
adc
push
pop
ja
sahf
fdivrs
in
je
adc
adcb
loope
lea
or
cmp
lahf
or
or
xor
test
jmp
jge
shl
not
hlt
aam
adc
ja
or
xorl
push
sbb
sbb
xchg
repz
xchg
add
repnz
testb
aas
into
adcl
xchg
pop
inc
cmp
sbb
jle
or
sbb
les
jl
push
mov
inc
ds
jo
cmp
mov
pop
dec
xchg
in
imull
xor
in
mov
sbb
jnp
lods
and
lock
push
ret
test
adc
cmp
imul
jg
iret
into
pop
inc
mov
jmp
mov
movsl
xchg
pop
gs
mov
xchg
out
mov
mov
in
test
fimull
mov
aaa
sbb
in
and
sarl
add
ret
test
cld
inc
xchg
inc
aad
pop
mov
movsb
pop
pop
call
std
adc
fnsave
sbb
movl
sbb
imul
lret
fildll
lahf
add
xchg
adc
aaa
das
lea
or
add
inc
aad
lcall
fcoms
cltd
xor
xchg
xchg
and
addb
out
aad
cmpsb
xor
jae
xor
das
addr16
xor
inc
push
out
fmuls
xchg
cltd
stos
lahf
mov
aam
push
fcmovne
pop
test
push
dec
inc
enter
cmp
call
pusha
and
adc
shlb
mov
sub
ljmp
mov
test
and
arpl
out
cmp
fmuls
cwtl
sbb
ret
sub
fcompl
cmp
xchg
test
dec
daa
in
out
scas
test
push
push
jg
cli
ficompl
fstpl
push
xor
fs
scas
stos
dec
sub
outsl
adc
repz
or
xor
hlt
loopne
xchg
jbe
mov
aam
add
ret
out
test
out
push
push
ss
mov
mov
xchg
mov
and
movb
pop
ss
aad
repnz
pusha
cmp
fnstcw
test
mov
not
jb
jmp
adc
js
jmp
xchg
jae
inc
test
je
lods
jb
mov
pop
fnsave
cmp
jae
loopne
sub
test
sbb
fstps
xor
and
sbb
lret
fadds
push
pop
stos
jl
scas
and
fiaddl
and
cmpsb
push
or
lcall
enter
lods
lea
sub
xchg
xchg
xchg
dec
pop
pusha
inc
in
add
mov
ret
xor
les
mov
js
ret
rorb
or
fidivrl
push
sbb
test
nop
lock
push
es
xor
cs
push
pop
lret
jbe
xchg
cmp
rorb
ljmp
mov
imul
cli
mov
xchg
icebp
pop
pop
ficoms
jns
subb
adc
xor
in
mov
jbe
pop
repz
mov
insl
loopne
insb
sahf
add
push
jl
int3
mov
pop
out
movsb
out
sub
pushf
icebp
sub
xchg
inc
mov
sbb
fldl
pop
mov
xor
xchg
ret
jns
outsl
dec
mov
lea
mov
and
outsb
test
in
adc
cmc
inc
push
std
aad
dec
sub
inc
cmp
fstps
idivb
fs
mov
mov
rorb
jmp
dec
push
mov
lock
xchg
sub
add
iret
aas
lret
sbb
sub
ficoms
jecxz
imul
sbb
cmpsl
dec
fs
dec
fsubr
decl
push
inc
cmc
stos
cmpsl
mov
out
stos
loop
sarl
stos
sbb
sbb
int
out
mov
lds
leave
xchg
adc
mov
fisubrl
hlt
repz
out
push
fisubl
sti
inc
sbb
ljmp
sub
jne
inc
mov
xor
adc
ljmp
mov
std
fsts
xchg
call
pop
cs
xor
rorb
jge
stos
js
adc
mov
faddl
mov
clc
es
sub
fcoms
scas
and
mov
lods
jae
adc
clts
and
jecxz
jecxz
push
add
divb
fcom
and
cld
test
push
test
mov
pop
leave
sbb
pop
xchg
dec
dec
ds
in
rcrb
push
dec
cmp
aaa
bound
aaa
xor
lret
popa
xor
popa
popf
and
or
push
jne
and
xlat
xor
fsub
mov
mov
adc
sahf
pushf
imul
bnd
fmul
inc
sub
in
push
sub
test
js
mov
cld
cmpsb
adc
movsb
add
lock
push
sbb
in
andl
cmp
lahf
push
in
adc
jo
lcall
sbb
sbb
inc
les
xchg
movsb
xchg
and
test
mov
pop
loopne
pop
cmp
cmp
and
cmp
jle
js
and
mov
stc
test
ret
jmp
xchg
inc
test
sbb
inc
push
shrb
add
sub
ret
xor
mov
ja
or
lret
cmp
jecxz
fsubrl
pop
jne
std
mov
mov
or
pop
shlb
scas
jb
adc
rcrb
scas
ja
mov
jo
cmp
clc
xor
push
ss
ja
or
jbe
mov
into
outsl
mov
mov
xor
call
jl
mov
inc
ficoms
pop
pop
leave
nop
sub
js
enter
stos
fs
aad
movl
mov
addps
jge
inc
pop
mov
out
mov
adc
shl
adc
je
insl
pop
mov
div
and
push
pop
mov
push
sbb
arpl
cmp
popa
push
xor
and
jno
clc
pop
xchg
cmpsl
cltd
pop
mov
es
mov
mov
push
fwait
mov
cltd
mov
jecxz
test
pop
mov
push
lock
or
and
or
cmp
jb
xchg
add
loop
int
ds
push
int
aad
inc
mov
lret
xor
add
ret
cli
sub
mov
or
call
sub
mov
bound
popa
std
sahf
lock
icebp
das
mov
cwtl
gs
mov
leave
loopne
push
movsl
xlat
loop
in
sub
subl
stos
mov
ror
jb
in
mov
jp
pop
jecxz
out
es
std
repnz
lock
imul
test
xor
mov
mov
mov
sub
into
xchg
in
pop
sbb
movsb
push
es
insb
inc
inc
cmpsl
fldcw
flds
dec
cli
add
lods
cmpsl
xor
sub
fucom
shll
pop
push
sub
lret
data16
aam
push
mov
cmp
inc
xchg
sbb
xor
pusha
cmpl
sti
icebp
push
inc
jecxz
idivl
iret
pop
fs
mov
test
stc
push
mov
push
xor
xchg
call
pusha
xchg
fldl
into
and
addl
cmp
xchg
leave
pop
sbb
rclb
test
out
mov
enter
and
jecxz
repnz
ljmp
fistpll
push
aam
xchg
test
cmp
dec
in
lods
int3
jo
lea
mov
xchg
push
adc
out
clc
xchg
loopne
mov
mov
sti
das
jne
imul
xor
rorl
mov
xchg
mov
shrl
add
in
loopne
or
sub
xadd
xlat
sub
push
out
jb
daa
addr16
jbe
test
cmp
not
loope
sbb
xor
jne
movsl
push
adc
sbb
sub
or
and
movsl
rorl
jecxz
out
mov
dec
sub
mov
xchg
hlt
mov
dec
xchg
mov
mov
in
out
jbe
nop
pushl
idiv
js
jmp
int3
add
fiaddl
fiaddl
and
loop
inc
inc
xchg
outsl
dec
push
cwtl
lock
outsl
test
push
icebp
repnz
pop
and
das
fwait
enter
inc
mov
cmp
mov
rorl
inc
jl
call
test
sahf
in
xor
or
int3
or
insl
adc
loop
rclb
test
scas
fstps
jno
push
aam
mov
adc
mov
lods
in
sbb
in
sahf
cmpl
xchg
int
stos
inc
mov
mov
fsubrp
pop
push
dec
mov
test
sahf
jp
test
jo
xorb
hlt
fnstenv
xchg
mov
mov
mov
xchg
mov
cli
jno
scas
cmpsb
mov
testb
jo
in
sbb
jg
xor
test
daa
inc
and
addb
je
inc
popl
fs
pop
pop
mov
shll
jb
fcmovb
xchg
inc
adc
mov
jne
mov
pop
xchg
pop
cmpb
mov
or
es
int3
out
sub
es
clc
xor
push
jnp
ret
test
insl
outsb
ret
pop
sarl
dec
lea
ss
or
mov
mov
sti
enter
and
fnsave
lods
fsub
vunpcklps
ss
nop
mov
in
or
icebp
sbb
jns
and
loop
mov
sub
adc
cs
cld
mov
push
in
hlt
add
rcrb
xor
fistpll
fcoms
fcoms
test
ss
xor
mov
and
pop
push
stos
popf
mov
int3
mov
stc
inc
xor
pop
sub
cltd
fisttps
addl
loope
push
cli
test
in
lret
pushf
or
jnp
xchg
or
xchg
test
outsb
and
clc
ljmp
fld
movzwl
dec
in
dec
outsl
add
loop
loope
popa
ljmp
mov
or
shlb
daa
in
clc
mov
jnp
popl
cmp
xchg
and
add
cmovg
shll
dec
ds
or
xor
gs
test
ds
inc
adc
add
jge
stos
subl
pop
aad
mov
loop
adc
dec
les
jbe
icebp
sbb
xchg
adc
incl
mov
and
repnz
pop
aad
dec
loop
or
push
outsb
mov
mov
fsub
adc
and
les
push
jno
sub
sarl
and
xor
dec
addr16
cmpsl
and
stos
xor
push
out
adc
pop
ret
repnz
xchg
outsl
or
mov
dec
movsl
sbb
sub
mov
mov
sbb
cmpb
leave
add
cmc
sub
cs
addl
add
stos
push
pop
lret
push
mov
cmp
stc
or
inc
test
pop
cmpl
sub
jmp
jge
push
scas
jns
jle
mov
inc
cmp
int
icebp
xchg
loopne
inc
inc
dec
xchg
in
test
pusha
or
dec
in
test
or
push
aad
mov
jg
pop
xchg
imul
movsl
cs
pusha
xchg
jne
iret
sbb
cld
mov
sub
jmp
mov
mov
ja
adc
cld
add
jne
js
mov
ss
es
jnp
dec
lods
dec
push
subb
imul
insl
test
inc
cmp
aad
adc
test
adc
jp
rcrb
andb
aam
pop
xor
xchg
dec
push
pop
or
dec
in
xor
mov
int3
out
and
pop
sub
add
orb
sub
xchg
dec
jle
mov
pop
jbe
mov
pop
cltd
adc
pop
inc
aam
jmp
and
or
sbb
stc
out
push
pop
sbb
lds
in
stc
push
push
push
mov
pop
pop
out
sub
push
lahf
lret
pop
jb
decb
sbb
sub
call
mov
lahf
test
and
into
fs
loope
lcall
mov
or
xor
cwtl
out
sbbb
adcb
adc
pop
flds
dec
inc
ja
or
inc
sub
shlb
inc
xchg
insb
repz
xchg
jne
lret
popf
cwtl
inc
insb
popf
in
cli
xor
add
adc
add
and
mov
into
lock
ret
mov
mov
push
xor
dec
das
aad
pop
mov
gs
loop
dec
xor
cmpsb
lret
adc
sub
cmp
scas
push
xor
and
jns
stos
mov
pop
popf
loope
je
pop
scas
shl
dec
gs
cmpsl
dec
out
add
mov
mov
fildl
dec
js
inc
pusha
add
cld
mov
lods
sub
stc
adc
test
jge
pop
pop
push
orb
lods
adc
shl
es
inc
outsb
inc
adc
sbb
xor
pop
cmc
sbb
jecxz
xor
mov
fmuls
adc
fisttpll
test
dec
shrb
call
fsubrs
mov
lock
push
out
pop
xor
ja
jecxz
inc
xchg
and
sar
jl
xlat
jbe
aaa
rorb
enter
adc
rorb
or
mov
jge
sti
inc
ret
pop
cmp
jo
cmp
sti
mov
into
and
shlb
jecxz
xor
add
mov
decl
ret
push
test
adc
stc
lahf
inc
cmc
jns
int3
mov
movsb
fldcw
mov
stos
insb
mov
iret
mov
fdivrs
pop
orl
mov
loop
sbb
gs
xor
cmp
out
dec
jne
and
fsubrs
xor
mov
xor
ret
mov
test
jne
or
movsb
lcall
add
push
aad
inc
cmp
dec
loop
cmpsl
mov
sbb
xor
pop
aam
push
addr16
popa
pop
loope
stos
sbb
fisubl
popa
jp
xchg
pusha
jg
push
add
leave
mov
in
gs
hlt
dec
jbe
mov
mov
int3
jg
adc
fdiv
in
inc
cmpsb
mov
dec
or
cmp
inc
push
lock
xchg
mov
sub
adc
mov
sub
xchg
outsb
mov
lcall
mov
mov
xchg
icebp
addr16
sbbl
inc
pop
sbb
leave
das
lcall
aad
stc
mov
mov
shrb
pop
iret
psraw
mov
xchg
dec
sbb
rcll
stos
adc
sbb
or
mov
inc
push
testb
data16
mov
popf
lods
shrl
xor
add
xorl
ficoml
inc
sbb
in
test
cs
rcll
daa
mov
cmpsb
lahf
push
mov
outsl
push
cltd
sub
mov
popf
es
dec
jae
add
imul
pop
testl
bound
mov
fcoml
neg
lds
ss
cltd
js
mov
xor
arpl
pop
add
pop
add
xchg
stos
ret
push
rolb
js
mov
and
mov
notb
jns
or
arpl
mov
je
pop
xor
cmp
ss
mov
ja
cmp
daa
imul
dec
sbb
fwait
scas
and
popa
pop
out
test
sub
xchg
add
xchg
mov
or
xchg
or
daa
and
outsl
ret
xchg
bound
daa
rol
lret
lret
pushf
js
mov
enter
mov
adc
mov
icebp
and
daa
jae
rclb
cmc
stc
push
inc
fcmovne
add
and
cld
enter
lock
loope
aaa
in
jae
outsb
pop
call
loop
iret
cmc
mov
mov
mov
imul
and
into
fs
mov
sahf
ret
sbb
pop
jne
into
jge
and
cmpsb
loope
loop
sbb
mov
movsb
cwtl
sbb
nop
mov
in
fwait
push
mov
stos
or
lds
repz
sti
jae
mov
into
ja
shll
xchg
mov
xchg
addr16
push
mov
enter
pop
repz
sub
sub
test
loope
dec
fcoms
xor
inc
push
pop
test
jb,pt
lcall
test
ljmp
das
push
xchg
lahf
mov
jb
mov
popf
dec
push
rcll
xchg
dec
les
sti
outsb
in
outsb
sbb
movsb
in
loope
xchg
clc
push
pop
sbb
movsb
dec
inc
xchg
cmp
into
aas
mov
cmp
lret
out
mov
ficoml
ret
xlat
adc
inc
iret
stos
jmp
mov
add
outsl
outsl
dec
pop
push
sbb
pusha
cwtd
dec
and
scas
xor
cmpl
shrl
xorl
mov
fsts
pop
inc
inc
mov
or
outsl
call
iret
mov
in
shl
sub
push
push
movl
int3
jecxz
jb
adc
out
dec
jg
mov
adc
pop
mov
leave
inc
int3
popf
pushf
scas
sbb
in
push
add
roll
cltd
pop
xchg
out
daa
test
mov
cmp
push
jnp
push
xorb
sbb
scas
inc
out
pop
xchg
or
decb
sbb
call
lea
sub
jno
outsl
inc
cmpsl
add
dec
xchg
lcall
test
mov
xor
jbe
fcompl
sahf
inc
xchg
push
jmp
xchg
pop
adc
ja
sub
jne
nop
neg
adc
lahf
jl
mov
and
leave
pop
bound
or
dec
int3
and
mov
lock
add
mov
loop
lea
or
cmp
jecxz
sub
jns
pop
std
xor
add
jbe
sti
adc
sbb
xor
call
divl
cmp
dec
test
cmp
sbb
xchg
pop
sbb
adc
cmp
inc
sarb
jle
jne
aad
test
cs
inc
inc
sub
ja
lods
int3
fldenv
push
popf
jb
inc
push
sti
lods
cmp
sbb
lds
pop
orl
enter
inc
in
mov
adc
movsb
stos
es
shrb
fldt
out
stc
add
or
out
hlt
jle
xchg
cwtl
ljmp
test
test
xlat
cmpl
leave
out
clc
bound
js
call
adc
mov
scas
cmp
roll
mov
jns
cwtl
jbe
lods
ret
addr16
and
jmp
pushw
dec
clc
subb
pop
sbb
push
adc
mov
aam
out
cmp
popa
lret
mov
xor
stos
push
mov
xchg
stos
mov
into
out
insl
jp
daa
sbb
mov
lods
cwtl
adc
xorb
fidivrs
mov
out
pop
hlt
lods
sbb
adc
adc
insb
sub
nop
push
inc
arpl
mov
pop
mov
out
lret
stos
inc
inc
cmp
idivl
jmp
popf
adc
int3
pop
jge
mov
mov
sub
pop
xor
pushf
movsl
pop
xchg
enter
jecxz
xchg
mov
test
lods
jge
xor
push
mov
mov
inc
mov
push
lods
sub
stos
aas
sahf
mov
sbb
or
popa
sub
push
lahf
filds
loop
mov
xor
push
decb
lods
push
int3
ror
adc
inc
or
push
xor
int3
pusha
push
jle
imul
repnz
cmp
mov
dec
mov
out
cmp
pop
mov
sarl
sub
out
in
xchg
mov
inc
hlt
sbb
popa
push
fdivs
pop
icebp
xchg
nop
shrl
or
dec
sahf
xlat
data16
je
out
pop
sbb
or
xchg
es
xchg
mov
push
dec
xchg
loop
or
or
jae
rcrb
stos
fisubrl
mov
jl
xchg
test
lods
dec
pop
gs
in
subb
cmc
jge
lahf
int
scas
cmp
lcall
xor
js
fcmove
xchg
xor
mov
jmp
in
xchg
mov
sub
in
mov
scas
and
add
cmpsl
fstl
xor
and
xchg
into
xor
fldenv
call
pop
pop
outsl
aas
insl
insb
cmc
xor
pusha
push
sub
fdivs
clc
mov
movsl
insl
rcll
aad
mov
mov
mov
pop
into
ret
ss
xchg
xchg
jle
cmp
xor
jl
repnz
mov
pop
stos
dec
mov
sub
xor
jns
mov
divb
jno
imul
rolb
inc
sahf
mov
cmp
jne
insb
imul
push
sbb
and
icebp
lahf
sbb
mov
jecxz
mov
or
mov
sahf
jo
sbb
xchg
daa
xor
sti
sub
xchg
lahf
pop
jecxz
loopne
test
adc
das
pushf
nop
cwtl
add
and
and
mov
add
sbb
outsl
and
aas
lea
mov
out
std
cli
lret
sbb
sub
push
jl
inc
mov
adc
jne
stos
fdivl
and
adc
sbb
dec
xchg
scas
dec
xor
xchg
xor
rorb
push
scas
sbb
cmc
xor
call
arpl
repz
jb
cmp
and
jae
packsswb
mov
cli
fs
in
adc
in
bound
clc
inc
stc
in
add
cmpsl
aas
inc
dec
repnz
loop
xchg
dec
or
jl
push
push
addb
jmp
mov
inc
popw
pop
mov
call
xor
incl
sub
dec
out
gs
cmpsl
arpl
push
aam
cmp
fstl
cmp
adc
daa
sub
stc
pop
mov
cmp
fistl
fwait
jl
adc
hlt
jmp
xor
lahf
imul
push
or
rorb
cmp
lret
xor
pop
fimuls
and
lahf
int3
sub
xor
arpl
xor
ret
mov
jg
loope
bound
ljmp
aad
fdivrl
dec
sbb
int
or
lcall
mov
pop
jno
xchg
ret
dec
or
jne
dec
dec
sti
test
hlt
sub
mov
jp
out
mov
and
jecxz
iret
or
mov
test
adc
mov
add
and
pop
out
dec
imul
sub
xor
pop
add
jecxz
xor
fwait
sub
xchg
scas
xor
pop
test
mov
xchg
jbe
or
cmp
dec
mov
rcll
lods
fstl
dec
mov
xor
rcl
add
xchg
mov
jge
sbb
or
sub
addl
call
xor
in
sub
roll
xchg
cmpsb
cmp
js
adc
lahf
lds
pop
cltd
sarb
sahf
xlat
cs
inc
add
addl
add
xlat
cmp
ss
mov
call
pop
pop
loopne
test
lock
stc
xchg
dec
mov
cmc
bound
lret
jnp
xlat
ffree
push
mov
repz
pcmpgtb
xor
xchg
fsubrs
mov
jg
stos
pop
cld
mov
push
dec
mov
ss
or
repnz
gs
mov
repnz
insb
dec
push
in
xchg
aas
test
jmp
out
jae
push
inc
ror
lds
pop
int3
inc
or
popa
lahf
psrlw
push
pop
jg
push
sbb
xor
test
cmpsl
mov
out
fmuls
popf
mov
dec
mov
lcall
pop
out
repz
xchg
lret
mov
into
jle
mov
jb
inc
scas
pop
adc
cmp
callw
jle
addb
hlt
or
or
shl
push
fs
enter
add
out
jnp
enter
pop
js
fcoml
push
mov
loopne,pn
out
and
fisubs
xchg
es
imul
in
scas
mov
sub
shr
dec
mov
cmpsl
pop
scas
jmp
pop
mov
rclb
enter
mov
rclb
xor
add
push
or
or
fnstcw
mov
dec
sbb
jbe
sub
mov
jg
push
aas
outsl
cmpsl
pop
push
xor
mov
mov
pop
aad
and
push
bound
inc
sti
leave
inc
ljmp
lahf
fcoml
fnstsw
leave
icebp
mov
pop
sbb
ret
push
mov
jmp
push
out
or
push
sbb
out
xchg
pop
sti
dec
xor
jno
jp
iret
sub
pop
shrb
cmpsb
loope
in
cmpsl
emms
insl
addr16
sbb
sarl
push
leave
outsb
enter
out
addl
loop
outsb
pop
iret
stos
add
repnz
push
fidivrl
dec
cmp
mov
out
int3
call
jns
iret
jle
fldt
dec
pop
adc
sbb
xchg
mov
xlat
inc
lds
leave
sti
lcallw
push
lea
repz
fldl
adc
faddl
out
cmp
push
dec
test
xchg
sub
subl
testb
xlat
shll
outsl
pop
push
push
mov
aas
mov
fs
mov
insl
rcll
cmp
cmpsb
repz
mov
fidivrl
outsb
fildll
addr16
pmullw
int3
lds
dec
mov
xor
mov
dec
mov
pop
sti
or
add
push
clc
add
mov
lock
scas
inc
cwtl
push
add
and
sub
mov
lods
popa
xor
repnz
addr16
jl
mov
sbb
das
and
cmpsb
es
sub
lds
sarb
in
adc
dec
xchg
xchg
loopne
cli
jmp
pop
icebp
xor
mov
jecxz
mov
into
mov
sbb
es
es
sub
or
js
mov
rcr
sub
ss
mov
fiadds
push
mov
les
mov
subb
and
mov
jb
mov
jno
dec
scas
pop
xorb
jge
cli
cld
or
lods
loop
mov
dec
mov
inc
pop
ds
repz
and
xlat
inc
xor
loop
cltd
into
mov
xor
jne
ror
icebp
lds
jbe
mov
push
stc
int3
outsl
sub
or
sub
jne
test
add
fcoms
mov
xchg
xor
xchg
repnz
push
scas
iret
push
push
addr16
pop
mov
das
ret
fs
or
push
inc
mov
mov
mov
data16
andl
inc
push
add
cmp
mov
jl
mov
push
jmp
push
and
aas
inc
jmp
imul
mov
inc
scas
je
xor
insb
fistps
fisttpl
and
add
rorb
in
sbb
xchg
pop
movsl
pop
scas
mov
stos
lock
movl
popa
pop
push
jns
sbb
jecxz
adc
sub
andl
outsl
std
fwait
xor
mov
movsl
lahf
stos
arpl
cmp
dec
ret
pop
push
pop
mov
movsb
loop
inc
and
cmp
dec
jmp
add
je
jle
data16
inc
mov
xor
cld
js
cmpsb
xchg
xchg
rcrl
fidivs
mov
ret
inc
data16
imul
jmp
jmp
dec
jae
pop
mov
test
dec
nop
test
aaa
out
insl
or
jbe
fildl
arpl
outsb
cmpsb
mov
jae
adcb
xor
arpl
pop
in
cmc
fnstenv
and
push
lock
xor
push
jge
add
jmp
adc
mov
fdiv
mov
and
inc
xchg
loop
xchg
pop
mov
jbe
outsb
inc
into
sub
jecxz
gs
inc
pop
or
ljmp
inc
sub
popa
and
inc
sbb
stos
inc
ror
push
mov
ja
int3
push
cld
fsubrl
movsl
in
repnz
loop
sbb
sti
push
xlat
fs
dec
add
mov
mov
or
fsub
adc
lds
icebp
sbb
xor
push
mov
loop
leave
dec
jbe
ss
mov
jns
aam
icebp
push
cmpsb
sbb
into
outsl
cmp
xchg
push
and
push
shl
push
mov
and
aaa
xchg
mov
std
orl
dec
xor
jmp
xor
test
sbb
lods
int
arpl
cmpsb
push
lea
lret
out
iret
sub
add
push
xchg
fdiv
aad
xchg
push
out
sub
lock
push
cmpsl
movsl
push
xchg
xor
xchg
rolb
inc
sahf
insb
fidivl
push
push
scas
mov
stos
in
xchg
jp
jge
notl
push
or
pop
adc
cmp
arpl
fldl
ret
inc
mov
out
mov
push
divb
xor
clc
push
sar
xor
es
push
cmp
in
insl
fisubrl
jle
adc
gs
cli
ljmp
fistps
rcl
jno
jae
or
jns
adc
pop
movsb
jl
mov
sbb
mov
iret
sbb
test
aad
sub
insb
sub
and
jle
pusha
lock
movsb
or
scas
push
popa
dec
repz
and
outsl
cmp
iret
ljmp
push
mov
into
call
test
pop
cmp
aad
inc
ret
xor
adc
adc
xchg
xchg
test
xor
jp
add
push
pop
fnstcw
push
aaa
xor
es
adc
push
and
arpl
jle
pop
jecxz
in
test
or
popf
xor
sub
int
stos
aad
jmp
xchg
push
std
xchg
cmp
sbb
pop
popf
int3
outsb
mov
jnp
and
cs
xchg
addl
hlt
cmpsl
push
out
inc
leave
aam
or
out
cli
and
add
mov
lahf
stos
mov
dec
sbb
sti
xor
xlat
mov
add
popf
xor
xchg
push
lock
ljmp
or
icebp
lods
cmpsl
jae
pop
xchg
test
mov
sbb
imul
cltd
popa
daa
int3
out
jge
push
adc
ljmp
adc
in
lret
cmpb
mov
jge
xor
xchg
bound
dec
out
dec
pop
xchg
fstpl
aam
and
pop
dec
idivl
sub
js
shrb
psllq
lret
xor
push
out
lea
jmp
cmp
push
pop
inc
jle
jne
xchg
fpatan
lods
inc
sbb
mov
sub
xchg
inc
adc
push
mov
int
icebp
fldt
jg
push
jbe
repz
leave
jns
sub
insb
lods
xchg
neg
cmp
sub
or
mov
ret
pop
cmp
fidivrl
xchg
movsl
cltd
mov
pop
inc
xchg
test
add
fimuls
xchg
std
pusha
movsl
add
xor
or
push
jne
in
mov
pop
push
cmp
mov
ror
sbb
stos
jb
out
or
outsb
or
call
and
shr
dec
stos
dec
xor
nop
mov
insl
mov
idivl
push
xchg
cli
cmp
mov
push
rol
fs
das
xchg
rorb
stos
inc
push
imul
jnp
push
les
push
xchg
inc
nop
sbb
mov
iret
pushl
add
sbb
pushf
rcrl
jp
mov
dec
mov
shll
push
xchg
sbb
dec
pusha
das
mov
pop
insl
fidivrl
mov
push
imul
int
fmull
xchg
mov
iret
pop
push
popa
pusha
ss
loop
cmp
cltd
mov
shlb
mov
cmpsb
push
out
pushf
sbb
out
inc
push
xor
sarl
loopne
stc
shll
outsb
out
jecxz
inc
xchg
dec
stos
sub
push
jmp
aas
cmp
dec
sub
loopne
cmp
dec
push
sub
mull
pushf
cmpl
lret
dec
cmc
or
mov
dec
inc
out
cmpb
xchg
out
cmp
insb
bound
add
add
rolb
in
call
faddl
add
sbb
pop
push
mov
ret
push
out
bnd
jbe
enter
shlb
xchg
call
xor
adc
xchg
xchg
jns
mov
or
addr16
test
push
addb
bound
mov
mov
nop
jmp
sbb
adc
int3
fs
scas
dec
push
arpl
mov
push
adcl
data16
xor
mov
adc
sbb
dec
cmp
mov
xor
jmp
push
bound
cmp
scas
or
fisubl
dec
jp
enter
xor
shrl
inc
rcl
adc
roll
adc
push
inc
and
insl
mov
add
push
pop
in
lret
pop
gs
mov
aam
ret
ljmp
or
mov
cmc
bound
adc
adc
icebp
xor
sahf
lret
stos
or
or
jge
pop
enter
jo
hlt
in
lea
jb
xor
jmp
dec
push
inc
je
loop
mov
lret
cld
or
ss
stos
cwtl
mov
jg
pop
push
mov
dec
mov
std
movsb
data16
outsb
les
dec
aad
jns
add
cmc
dec
xlat
push
sbb
mov
pusha
add
mov
xor
pop
sub
jne
pusha
lods
jne
cmpl
push
mov
mov
mov
mov
adc
gs
repnz
xor
and
loopne
subl
pop
adc
xchg
insb
aaa
mov
push
mov
pop
aas
enter
jp
sarl
sub
mov
cmp
pop
jae
fmuls
inc
insb
sbbl
arpl
rolb
xchg
dec
and
inc
xchg
sub
mov
test
repnz
jl
push
lahf
xor
stos
ljmp
mov
dec
jno
jb
xchg
xchg
leave
mov
jne
movsl
arpl
testb
jle
xchg
mov
cmpsl
out
mov
stos
mov
sub
push
jns
call
aas
subb
add
insl
add
je
xchg
andl
mov
xor
jae
es
dec
out
add
aaa
rorl
cmp
adc
add
mov
pop
cwtl
int3
ljmp
in
mov
jp
push
shlb
icebp
inc
mov
mov
mov
mov
lods
test
call
push
aas
lock
sbb
push
fdivrs
ds
aaa
pop
cmpsl
jae
lods
roll
stos
aaa
add
sbb
ret
push
fucom
xor
arpl
sbb
addr16
mov
out
negl
pop
ret
or
cmp
push
and
mov
xchg
not
jb
pop
jge
data16
adc
jbe
lret
fwait
mov
mov
test
scas
mov
fs
test
jle
jg
and
cmp
push
pusha
push
in
popa
mov
mov
sbb
jae
inc
or
and
movsb
std
sti
fisttps
lret
jmp
dec
mov
or
lods
or
scas
inc
push
mov
stc
xchg
shrb
movsl
std
lret
mov
loope
imul
xor
in
pop
subl
adc
cmpsb
pop
sahf
mov
outsl
inc
mov
sti
push
stos
mov
and
jae
cwtl
lahf
and
mov
dec
movb
aam
add
mov
daa
cs
out
js
sbb
mov
push
cltd
xchg
xchg
sbb
jbe
push
jp
icebp
stc
ljmp
inc
out
repz
nop
pop
and
bound
push
sbb
daa
mov
mov
rorb
movsb
lods
cmp
out
and
pusha
lods
and
in
push
inc
mov
lods
outsb
daa
or
fidivrs
mov
stos
mov
mov
fwait
or
sbb
jecxz
jmp
push
adc
rcll
stos
adc
and
pop
sbb
sbb
sbb
mov
dec
add
mov
mov
cmp
sbbb
fstpl
or
or
lret
push
mov
int3
mov
insl
cmp
jb
rcrl
dec
in
mov
xchg
in
dec
imul
mov
pop
and
lock
shll
loop
call
fwait
daa
fistps
push
mov
int3
or
std
pop
push
call
gs
lahf
jp
scas
inc
mov
in
pushf
xor
inc
jns
lods
rolb
fcoml
sub
xor
fcom
mov
sar
inc
fcompl
inc
mov
lds
dec
je
adc
cmc
or
sub
repz
jnp
es
iret
stc
cmovp
xor
mov
xor
adc
inc
xchg
sbb
xchg
xchg
jo
pop
ljmp
adc
xchg
test
xchg
xor
mov
xchg
xor
dec
mov
xchg
shrb
mov
mov
xchg
inc
mov
bound
data16
push
sbb
xchg
cmp
pop
fdivrs
inc
cmp
flds
fcmovnu
mov
xor
scas
das
leave
inc
pop
enter
outsl
imul
pop
xchg
and
and
pop
push
loopne,pt
int3
dec
inc
cld
add
out
scas
fucomi
sbb
ja
mov
xor
sbb
das
sbb
sarb
mov
loop
inc
mov
pop
mov
mov
jbe
mov
js
hlt
sub
movsl
test
loope
ja
xor
outsl
push
push
xchg
popf
mov
add
sub
and
mov
js
je
xor
mov
lods
je
add
mov
imul
cmc
cmp
jns
or
ljmp
lahf
mov
or
jbe
fdivrs
sub
insb
xor
cmp
sub
gs
cmpsl
shll
lock
sbb
jp
inc
loopne
mov
loop
fwait
jb
cmp
out
jle
push
pop
scas
dec
dec
pop
cli
stos
sub
cmpsb
fimuls
mov
in
push
stc
mov
data16
std
sbb
pop
and
daa
fildl
pop
fisttps
add
into
fnsave
add
enter
pop
jmp
loope
iret
std
fs
lcall
pop
test
push
cmpsl
mov
repz
sub
sarb
jae
jge
lods
out
pop
out
pop
add
in
mov
sbb
call
inc
adc
xor
and
mov
jns
adc
dec
xchg
xchg
and
repz
cli
ret
jnp
pusha
insb
or
push
add
out
repnz
mov
loop
jbe
aam
sbb
test
lahf
mov
sub
stos
jecxz
in
sbb
fcom
repnz
push
test
idivl
or
xlat
jp
mov
mov
jmp
push
mov
and
shl
mov
pop
jno
into
push
es
jecxz
push
lods
hlt
or
data16
xor
pop
mov
dec
xorl
ret
mov
lret
neg
lods
into
cmpl
dec
mov
or
int
jae
mov
cli
xchg
inc
add
rorb
or
jecxz
fadds
leave
dec
dec
xor
cli
xor
loop
test
stos
jge
fbld
clc
test
fisubrl
mov
enter
aas
mov
xlat
sub
sbb
push
int
je
int3
mov
add
icebp
mov
or
ljmp
cli
ss
sub
cmp
mov
pop
add
in
push
sub
adc
in
jns
dec
cmp
nop
repz
mov
loop
into
lret
orb
inc
inc
lahf
sbbb
mov
addl
test
aam
inc
addr16
mov
cmp
jecxz
lea
jp
add
jmp
mov
push
pop
fs
cmp
mov
mov
inc
jp
cwtl
cmp
sub
repz
inc
sti
pop
sub
stos
sub
mov
mov
scas
inc
stos
insl
scas
addr16
inc
arpl
test
lahf
mov
adcb
cs
imul
push
lea
in
push
popa
mov
lods
sub
bound
mov
sti
stos
jne
daa
mov
push
pop
test
xor
xor
mov
sarl
fucom
sbbb
push
fbstp
lds
xchg
jae
or
dec
push
ja
mov
push
pusha
clc
aad
and
aas
sub
in
xchg
cmp
test
fs
sub
bound
sub
leave
sub
inc
dec
cld
xor
adc
jl
pusha
pusha
aaa
mov
xor
sbb
dec
popa
hlt
repz
and
or
xor
loope
pop
dec
pushf
stos
add
ja
mov
popa
fwait
nop
adc
cmp
cli
imul
clc
sub
stc
les
mov
mov
jl
inc
mov
out
cmp
pop
inc
stos
or
bound
mov
pushf
cltd
mov
and
mov
add
in
shrl
mov
in
movsb
add
lcall
cmc
adc
add
cmc
inc
cmp
ret
mov
mov
jge
xchg
cmp
inc
mov
in
cs
jmp
sub
out
adc
push
popa
push
fisttps
cmp
mov
mov
add
or
test
or
pop
lods
mov
add
mov
insl
xchg
adc
cli
enter
cmpl
mov
push
popa
adc
int3
mov
adc
adc
insl
insl
ret
inc
mov
repnz
mov
loope
insb
xchg
xor
add
loope,pt
in
fsubp
sbb
adc
jmp
xchg
fwait
ds
mov
fdivrs
push
fcomip
jns
movsb
or
mov
push
jp
lods
and
aas
loop
scas
outsl
scas
push
ret
cmpsb
mov
sbb
mov
push
imul
jp
add
cwtl
stos
rcll
jecxz
lahf
sti
ret
lret
test
in
pop
cld
xor
and
addr16
adc
xchg
mov
xor
cmp
push
ret
pop
lods
je
sub
es
mov
jo
sbbb
push
idivb
stos
cmp
jo
mov
xchg
and
sub
test
lret
shll
inc
cmp
mov
mov
xchg
loope
push
jb
shl
mov
cwtl
sti
dec
fldcw
mov
xor
lea
enter
xor
jmp
and
fcmovbe
test
jnp
xchg
icebp
cwtl
pop
mov
cmc
aam
hlt
mov
pop
lock
das
mov
out
mov
xchg
jp
push
inc
dec
adc
sub
icebp
sub
das
test
fadds
adc
jmp
pop
les
mov
loopne
push
dec
jg
mov
mov
push
into
lods
ficoms
mov
nop
stc
sets
xchg
mov
mov
std
int
cmpsb
xchg
test
rorl
hlt
not
jg
xchg
mov
jne
ljmp
jl
jl
xor
lahf
pop
shrl
mov
or
movsb
sarb
or
push
aam
xor
and
iret
mov
test
imul
iret
mov
cli
jbe
mov
aad
jno
cs
outsb
sub
outsb
dec
stc
mov
insb
or
in
rcr
push
inc
adc
mov
mov
sub
fdivrs
xchg
xor
filds
dec
loopne
and
and
or
pop
mov
jb
inc
orl
pop
pop
call
adc
daa
mov
sub
xor
dec
mov
sbb
sub
lcall
sahf
xor
sub
jne
jne
fwait
ds
out
mov
dec
push
dec
outsb
jmp
insb
ds
xor
movsl
cmp
xchg
mov
hlt
and
in
mov
lea
icebp
cmp
sahf
mov
sbb
aam
movsb
fcoms
outsl
jg
outsl
mov
daa
and
imul
lock
das
test
scas
adc
fs
add
jecxz,pn
mov
idivb
ficoms
xor
mov
mov
and
dec
or
enter
add
in
jmp
and
dec
lock
gs
std
ret
pushf
call
scas
push
in
mov
inc
retw
push
test
mov
in
aam
push
dec
xchg
cld
sub
aaa
add
fsts
sti
push
dec
cwtl
out
icebp
pop
pop
cmp
fs
inc
push
and
mov
adc
test
aad
mov
pop
aas
fstpt
out
fwait
xchg
aaa
addr16
mov
dec
mov
out
mov
push
addr16
imul
adc
fimuls
lahf
lods
jo
ja
rcrb
jl
inc
pop
mov
imulb
and
popf
jb
xchg
popa
push
adc
lods
and
into
cmp
mov
push
mov
scas
outsl
shrd
stos
ret
jl
and
xor
mov
and
sub
and
in
push
daa
pop
ljmp
cli
rcrb
mov
and
mov
int
xor
imul
and
repnz
xorl
std
pslld
dec
fdivr
push
mov
cmp
ror
cmp
lods
and
ficompl
push
or
popf
pop
je
adc
cltd
ficoms
cmova
ja
mov
jg
mov
mov
jg
inc
mov
adc
insb
pop
sub
mov
leave
mov
sub
cmc
sub
les
stos
cmp
faddl
scas
pop
dec
fwait
adc
xchg
ljmp
xrelease
push
mov
lock
mov
int3
shrb
inc
ret
sahf
cmp
sub
popf
dec
and
dec
mov
popf
push
add
jmp
daa
mov
shrl
dec
inc
push
adc
sub
rcrb
insl
push
popf
inc
jae
hlt
xchg
daa
jmp
inc
fcomps
call
inc
arpl
and
fnstenv
mov
sub
jno
hlt
scas
ja
arpl
xchg
fbld
bound
js
mov
test
adc
lret
adc
bnd
adcl
fwait
adc
data16
mov
fucomp
push
xor
jnp
daa
dec
arpl
repnz
mov
inc
sbb
xchg
mov
dec
xlat
imul
mov
test
jbe
adc
shll
xchg
cwtl
into
mov
jl
push
jl
stos
dec
sbb
rcrb
rolb
aas
loopne
push
xchg
xchg
aam
mov
lock
das
in
mov
fucomi
xchg
xchg
add
cltd
inc
sahf
jg
cmpsl
out
adc
addr16
pop
jmp
add
sti
add
repnz
ja
sub
fcoms
lea
std
push
shlb
sbb
pop
xor
testl
mov
dec
ds
lahf
pushf
fsubrs
imul
jne
push
push
lret
std
or
xchg
mov
ret
fsubl
nop
daa
mov
jae
inc
pop
js
cmova
mov
dec
adc
dec
mov
lcall
dec
mov
sub
xchg
test
mov
outsl
jg
out
lret
mov
mov
jg
out
stos
or
aad
aaa
pusha
out
mov
push
jae
pop
inc
push
sub
and
js
lds
or
inc
mov
and
test
in
xor
push
push
add
mov
out
and
aam
shrb
ret
stos
pop
mov
pushf
int
mov
popf
sbb
test
or
mov
in
loope
ret
xchg
into
inc
mov
mov
xchg
repz
sahf
xor
inc
lret
mov
pop
pop
enter
pop
xchg
mov
ds
sbb
xchg
or
push
jge
inc
test
sbb
cli
jno
or
pop
push
shll
in
sbb
bound
movsb
ret
adc
cli
and
push
mov
add
mov
push
lea
es
fcomi
mov
icebp
xchg
inc
cmp
mov
jnp
push
cmp
push
sbb
and
in
xchg
pop
adc
inc
jb
cmpsb
int3
inc
push
push
test
adc
xchg
adc
add
shrb
or
xor
dec
loop
jns
or
icebp
xor
xor
mov
and
xor
cmp
jle
sub
mov
mov
sub
push
movsl
sub
push
shll
cmp
stc
sbb
cmp
jg
fsubs
leave
scas
lock
aam
mov
cmc
jne
decb
inc
pop
sbbl
inc
inc
mov
jno
stos
jmp
mov
push
out
sbb
ficomps
xor
ret
xor
sarb
mov
fisttpll
insb
jbe
xchg
add
mov
jb
dec
arpl
and
ror
push
xchg
or
and
addb
mov
scas
repz
outsb
lock
jp
sbb
pushw
insb
sub
icebp
xlat
dec
inc
inc
mov
mov
mov
dec
sbb
add
mov
outsl
ljmp
sub
shrb
or
movsl
mov
mov
cltd
enter
fisttpl
sub
cmp
jle
pushf
and
in
adcb
fistl
fisubrl
push
pop
test
mov
mov
pop
fisubrs
mov
inc
and
mov
and
shll
sub
insl
add
dec
mov
mov
and
mov
out
dec
sbbl
xchg
pop
les
loop
xor
xchg
mov
xchg
cmp
cmpsl
xor
mov
or
dec
aas
mov
icebp
in
sub
std
add
sbb
lahf
cli
nop
xor
mov
mull
pop
dec
adc
mov
cmpsl
icebp
imul
or
sub
lret
push
jne
mov
cmp
out
cmp
dec
mov
sbb
pop
jnp
pop
and
dec
xchg
in
pop
push
jp
mov
mov
cld
sti
pop
loop
icebp
loop
lcall
inc
dec
dec
mov
xlat
std
pop
mov
pop
cwtl
mov
xchg
dec
addr16
clc
orb
inc
std
push
jle
xchg
mov
clc
sub
and
jmp
inc
lea
sub
sub
or
std
lods
loope
xchg
add
scas
into
fadd
orb
enter
xchg
and
sub
dec
out
push
mov
mov
mov
jae
movsl
jp
lods
daa
mov
repz
push
andb
sbb
mov
rolb
push
call
bound
push
icebp
outsl
es
fstps
mov
arpl
imul
and
sub
sbb
test
loop
cmp
ja
or
inc
and
les
mov
sub
test
cmpsb
inc
dec
or
inc
push
rolb
repnz
dec
mov
sbb
test
das
pop
iret
jae
iret
popa
sbbl
push
jno
pop
popa
pop
sbb
and
shll
shr
imul
scas
xchg
xor
push
jl
adc
pop
outsb
and
inc
negl
sbb
inc
jbe
adc
shrl
imul
xor
xor
sbb
lock
loop
xchg
filds
and
std
jno
cld
inc
cmp
rorl
mov
lds
lret
call
pop
std
add
dec
adcb
jl
fildl
mov
pop
cld
es
ljmp
xchg
adc
and
add
mov
pop
dec
pop
in
ljmp
push
lods
pop
inc
mov
ljmp
xor
aam
ret
xor
int3
cltd
xor
xchg
mov
nop
push
add
pop
or
lods
std
movsb
xlat
js
out
push
fists
push
in
roll
loop
clc
inc
fidivrs
add
sub
fs
test
sbb
adc
push
sar
ss
out
sub
cld
xchg
inc
push
lcall
add
enter
mov
mov
fidivrs
fs
ljmp
fnstenv
and
lds
dec
jge
outsb
shlb
cwtl
pop
idivl
cmp
pop
jp
subb
mov
push
scas
sbb
daa
dec
andl
mov
jecxz
mov
lret
test
lahf
lock
mov
pop
repnz
out
pushf
dec
adc
aad
lea
adc
rcl
inc
push
ret
popf
leave
xchg
inc
mov
pop
and
mov
and
std
es
or
cmp
lock
insl
in
sbb
mov
cwtl
xor
inc
cwtl
ret
cld
bnd
push
stc
cmp
xchg
stc
addr16
sub
daa
jmp
aas
out
pushf
lods
push
sahf
outsl
cmp
sub
mov
mov
mov
cmp
jo
dec
mov
aaa
jmp
inc
das
mov
loope
or
jb
mov
cmpb
pop
ret
je
cmp
popa
out
dec
movsb
das
shll
imul
jne
sub
paddsb
inc
lea
xor
cld
test
mov
jns
loopne
cmp
adc
pop
mov
es
jb
and
ljmp
xchg
fmuls
or
adc
xor
sub
leave
cli
mov
sbb
cmp
and
pop
xor
lods
ljmp
pusha
les
add
jo
int
jg
cmp
ficompl
xchg
inc
mov
enter
ficomps
add
test
xor
push
lcall
fs
test
out
loop
mov
sub
xchg
xor
add
xor
mov
mov
lods
mov
out
push
mov
push
sbb
int
incl
lea
mov
test
cmp
out
cmpb
mov
xchg
sbb
pushf
or
cmp
push
sub
in
sub
push
push
mov
xchg
mov
xor
adc
enter
xchg
xor
dec
test
sbb
sahf
cmp
mov
jmp
test
aam
cmpsb
dec
adc
jnp
stos
push
pop
jae
rorl
ds
xchg
sbb
and
jne
xchg
std
insl
push
and
es
imul
in
xchg
data16
mov
movsb
pop
bound
jecxz
dec
inc
cmp
sbbb
orl
ret
inc
xchg
xchg
sub
add
push
push
lock
push
add
mov
dec
pop
aad
das
inc
cmc
add
lahf
push
orb
outsl
xchg
pop
in
xor
and
je
jecxz
push
cmp
cmp
cmp
and
adc
int3
test
jne
outsl
call
push
sti
inc
lock
bound
fnstsw
jbe
dec
sub
aas
sub
cli
das
into
push
cmp
jle
fwait
add
pop
insl
ret
dec
stos
add
leave
push
mov
mov
shl
int3
scas
dec
orl
xchg
mov
movsl
stos
clc
ljmp
popa
out
mov
or
je
in
mov
mov
movsb
mov
int3
addr16
xor
stos
lock
push
sub
xor
mov
xor
and
das
mov
outsl
mov
aam
mov
movsb
mov
adc
pop
lcall
jo
pop
xchg
pop
add
into
sub
jb
sub
or
pop
sub
lret
inc
clc
pop
cmp
insb
dec
sub
and
loop
pop
add
dec
mov
inc
cmp
jb
bound
mov
enter
dec
adc
andps
mov
mov
jg
sub
and
add
insb
sub
in
pushf
icebp
cmp
sub
sub
fidivrs
ljmp
mov
popf
lret
popa
std
shll
aaa
jmp
mov
into
pop
sbb
mov
scas
sbb
popf
out
mov
je
nop
cwtl
pusha
dec
lock
jge
or
insl
aam
imul
lahf
fwait
push
cmp
xchg
inc
mov
jle
andl
xchg
sahf
popf
xor
push
pop
sbb
rcl
adc
jge
mov
int
cmp
push
and
jge
jae
dec
push
adc
std
stos
movsl
int3
mov
xor
xchg
mov
das
and
sahf
cmp
cmp
cwtl
ja
sub
inc
addb
out
sarb
adc
incl
or
adcl
fucomi
sub
xchg
out
test
imul
into
in
fs
add
pxor
jbe
dec
or
jbe
mov
push
jecxz
popf
dec
and
repnz
andps
xchg
iret
ret
xorb
inc
xlat
inc
shll
pop
pop
mov
pop
pop
roll
add
or
inc
pusha
repz
adc
adc
aam
add
gs
push
repnz
inc
xlat
pop
rcl
dec
sbb
stos
jle
test
jb
mov
mov
out
sbb
add
xor
in
mov
mov
fisubrs
pop
stos
push
and
adc
popf
ja
shll
clc
mov
push
jl
stos
rorl
pop
cmp
jle
gs
add
sahf
sub
stc
lcall
mov
adc
orl
sub
rcrb
xchg
fwait
mov
std
mov
lock
xor
push
notl
pop
fisttpl
mov
aas
fisubl
testl
data16
in
rolb
sub
lret
mov
dec
lock
inc
in
add
cmp
hlt
push
test
es
imul
loop
enter
mov
ja
push
or
in
lods
mov
push
out
jl
das
rclb
xor
popf
mov
add
ljmp
fcompl
in
push
or
xchg
mov
or
inc
xor
leave
rcrb
jb
jp
cmp
push
stos
push
xchg
jl
fwait
int3
push
outsb
int
imul
pop
pop
sti
sub
jns
js
mov
mov
and
jle
imul
inc
cmp
adc
sbb
add
clc
enter
xor
into
adc
scas
cmc
stos
cmp
rcr
hlt
fidivrs
outsb
sub
mov
cmp
sbb
iret
lret
incl
mov
and
rolb
popf
pop
fcomps
sbb
inc
jne
test
rep
ret
cmp
jns
mov
push
mov
andb
push
and
popf
mov
lcall
pushf
dec
mov
inc
dec
xchg
jecxz
inc
jns
mov
sbbl
dec
andb
mov
jae
add
pop
pop
sbb
jnp
clc
fwait
sub
idiv
inc
pusha
mov
or
popf
aam
sub
adc
cmpsl
hlt
divl
mov
fidivrs
cmp
and
fiaddl
adc
aas
sub
pop
push
add
aas
scas
arpl
pop
je
mov
mov
push
jg
pop
mov
mov
push
fidivs
jmp
andl
jae
adc
out
fsubrl
div
imul
cmp
adc
adc
jae
loop
sbb
ret
pop
loopne
in
dec
mov
outsb
pop
cmp
sbb
sbb
push
add
cs
imul
mov
xchg
imul
sbb
sbb
cmp
cmc
nop
jge
cmp
push
les
mov
jno
and
mov
cmp
mov
push
test
inc
mov
pusha
push
test
ret
shl
adcb
movsb
sbb
dec
aad
xlat
lds
pop
sbb
fwait
in
xor
rcrl
add
sub
xchg
fdivrs
xor
xlat
imull
lcall
xchg
in
ss
imul
push
jl
cltd
lcall
sub
sub
mov
clc
adc
mov
pop
das
add
jg
popa
xor
push
loopne
into
out
faddl
and
aad
pop
mov
sbb
jle
push
or
pop
fistps
sbb
repnz
adc
shlb
stos
cmc
mov
fbld
popa
mov
addb
pop
mov
lock
imul
xor
les
das
jmp
sub
outsl
imul
xchg
mov
jbe
arpl
lahf
in
and
out
push
push
sbbl
inc
dec
daa
jnp
insb
add
icebp
stc
dec
rep
nop
cmp
or
push
out
sahf
xor
add
push
lods
or
in
sub
movaps
test
xor
xchg
jo
xchg
xchg
sti
pop
sti
repnz
adc
cmpsb
aaa
xorb
push
pop
les
dec
add
or
shrl
inc
in
xor
rorl
popf
mov
jmp
push
inc
mov
push
stos
inc
mov
inc
inc
cmp
fbld
inc
aad
jg
mov
fimull
loop
lret
clc
push
pop
mov
out
adc
lahf
sbb
dec
adc
lcall
fs
inc
pop
push
sub
out
imul
mov
inc
ds
xor
data16
and
jnp
sub
or
jns
ss
lock
stc
adc
jo
jmp
stos
jecxz
movsb
xchg
aam
mov
mov
xor
mov
test
jmp
call
push
pop
adc
pushf
sbb
cmp
dec
add
sub
inc
int3
sbb
icebp
aas
ljmp
mov
ds
cmpsl
jno
mov
fwait
out
sub
sbb
cmpsb
adc
jge
roll
mov
sub
push
cmpsb
adc
pop
aas
dec
mov
fwait
jbe
int
push
push
dec
rorl
or
and
cltd
test
sub
adc
sub
inc
sahf
mov
inc
add
pop
push
sub
sbb
addr16
mov
xor
ss
cmp
lea
add
popa
mov
dec
sub
jecxz
xchg
out
sarl
cmovg
and
das
dec
xor
pop
push
lods
and
inc
bound
mov
lret
mov
push
rcrb
rcr
scas
sbb
loop
pop
leave
icebp
mov
xor
add
push
fisubrs
lret
xlat
cli
in
adc
sub
hlt
mov
sub
movb
cmp
and
andb
out
in
rcrb
data16
sbbl
cli
xchg
cmp
call
popf
enter
xor
incb
push
frstor
fimuls
cmp
cmp
sub
test
push
ret
xchg
mov
xchg
cmp
cmp
in
cmp
inc
xlat
jbe
mov
fistps
dec
movsl
outsl
scas
rcrb
dec
sub
out
stc
cmp
dec
jp
iret
dec
das
imul
pop
aas
aas
pop
push
jbe
cmp
jns
mov
lods
call
xor
lods
aam
jg
cld
sahf
ds
xchg
cmp
pop
sub
push
xchg
sub
and
cli
dec
mov
jae
in
push
mov
clts
sbb
fbstp
pop
xchg
loop
add
ret
sbbl
inc
sahf
pusha
inc
mov
in
jecxz
push
popa
cmp
adc
add
pop
scas
and
movsl
jb
in
cs
jbe
pop
cmpsb
adc
cmpl
iret
icebp
lret
fcomp
jne
stc
imul
aad
rolb
pop
cli
es
cmp
pop
nop
ret
je
jmp
or
loopne
dec
mov
add
mov
jp
cmp
outsb
dec
sbb
jg
aaa
sub
das
mov
or
jne
es
cmp
push
sbb
fsubs
or
adc
mov
ja
mov
pop
push
es
sub
mov
shrb
dec
mov
ret
mov
stc
mov
or
adc
dec
sub
dec
aad
dec
and
mov
mov
rcll
mov
ds
inc
dec
add
lock
add
jb
sarl
xor
fnstcw
aam
movb
mov
jg
ret
mov
cs
test
fstl
movsl
or
arpl
ret
push
mov
pop
jno
es
cli
add
jl
pusha
fwait
cmp
add
int3
lea
adc
ss
cmp
xlat
add
pop
rcr
int3
inc
jp
xchg
divb
sub
mov
nop
test
test
xlat
cld
inc
lods
mov
mov
xchg
and
push
adc
mov
mov
adcb
push
cli
jecxz
mov
inc
inc
ret
popf
push
xor
mov
fs
loope
outsb
push
jno
adc
sti
xchg
js
je
jle
pop
in
push
add
push
xor
fucomip
push
xor
pop
mov
dec
inc
scas
cld
rorl
inc
mov
push
lods
jmp
int3
xchg
mov
fdivrs
inc
and
cmc
mov
mov
mov
arpl
xor
xor
mov
dec
add
cmp
and
xchg
jg
loope
outsl
adc
mov
pop
jae
mulb
push
xor
hlt
imul
roll
scas
adc
sub
lods
add
in
add
sti
add
loop
out
es
pop
mov
pushf
int3
scas
lcall
xchg
jg
insl
dec
out
sbb
jb
jne
pusha
mov
test
cld
jmp
ret
add
sub
cmp
sub
cltd
add
cld
scas
mov
and
pop
cli
jno
sub
inc
and
mov
jg
jecxz
mov
xor
cltd
out
sub
jne
adc
sub
insb
sbb
ds
adc
or
cmc
imull
cmpsl
iret
sar
pop
jle
sahf
into
test
scas
fbld
dec
mov
rorb
stos
mov
das
inc
xchg
sbb
nop
call
sub
adc
xchg
jle
or
xchg
jbe
enter
stc
add
in
push
popl
add
mov
mov
movsl
adc
jmp
cmpsb
jne
cmc
test
xchg
pop
xor
and
imul
adc
dec
and
xor
movsl
xchg
sub
lea
cmc
aas
xchg
mov
sub
pop
sti
pop
scas
lret
pop
inc
mov
xchg
cli
lret
inc
and
and
push
pop
cmp
cmpsl
jg
mov
and
sar
inc
dec
jo
jo
loope
sbb
ror
add
push
into
dec
fbstp
jl
jmp
inc
out
mov
or
leave
fists
xor
das
and
icebp
and
aas
mov
insl
in
inc
push
into
sbb
sbb
outsl
aaa
cmpsl
scas
stc
rolb
sbb
adc
mov
les
repz
loopne
jne
add
mov
imul
and
jp
inc
mov
test
dec
arpl
dec
push
and
mov
fs
sarb
dec
int
pusha
test
clc
push
jmp
xor
rcr
mov
add
loopne
je
adc
mov
das
push
mov
aas
out
insb
test
fidivl
ljmp
lods
sbb
out
clc
xchg
or
movsl
loopne
jmp
data16
push
sbb
pop
push
mov
sub
bound
jp
xlat
dec
in
adc
ja
jae
xchg
sub
and
inc
inc
cltd
xchg
jge
lods
xor
outsl
ret
push
or
push
daa
xchg
mov
into
sbb
mov
scas
mov
xor
imul
xchg
aad
invd
lahf
enter
dec
pop
cmpsl
cmpsl
pop
imul
fdivrl
fstpt
push
das
pop
sub
mov
dec
mov
fucom
sbb
enter
jno
cltd
hlt
push
mov
dec
test
fistl
mov
jp
xchg
fs
clc
add
push
insb
mov
xchg
std
adc
dec
shlb
mov
lret
sub
jb
aam
outsb
jmp
adc
popa
test
mov
imull
icebp
test
shll
dec
dec
mov
jno
push
push
ja
and
stos
cmp
inc
dec
divl
test
pop
imull
xchg
push
pop
aaa
mov
dec
xorl
push
loop
sbb
mov
sbb
leave
sahf
test
sbb
addr16
add
cmp
pop
push
stos
pop
clc
gs
lahf
inc
out
loopne
movsl
sub
mov
insl
xchg
cmp
cmpsl
pop
mov
lret
dec
adcb
adc
loope
cmpsb
in
data16
sarl
push
sub
orb
fimuls
pop
mov
fiaddl
push
push
fcompl
jb
leave
mov
dec
out
or
test
xchg
insl
stos
aaa
inc
mov
dec
and
cmp
pop
fstpt
call
lret
pushl
lahf
fcmove
insl
mov
pop
jbe
push
sbb
push
in
jge
sub
je
sar
out
scas
adc
repz
sti
mov
pop
aam
pop
aaa
test
mov
cmp
dec
sub
rcr
fwait
decb
add
rcr
adcb
arpl
xor
jns
mov
jle
cmc
mov
or
mov
mov
sub
pop
rclb
sub
jle
jle
sarl
leave
dec
sti
dec
nop
pop
fldl
jmp
pop
repz
mov
or
jo
cs
jno
mov
xchg
mov
sub
jns
sub
jg
jl
fmul
out
sub
repnz
jl
shrb
outsb
rorb
mov
and
inc
inc
mov
leave
mov
push
ror
int3
stos
out
jge
nop
ficoms
pop
xor
xchg
mov
jmp
repz
xor
sub
add
rorl
jmp
lret
dec
test
rcrb
mov
lds
leave
dec
inc
hlt
decb
es
push
out
sti
jl
cld
mov
and
and
cmpsb
popf
out
adc
xchg
and
in
add
in
loopne
filds
push
mov
pop
sub
push
pop
xor
inc
scas
push
cmp
cmp
lcall
xor
fdivr
popa
sbb
idivb
and
movhlps
push
icebp
mov
cmpsl
dec
stc
add
xor
lods
sbb
das
sbb
add
ljmp
mov
adc
xor
in
scas
mov
jno
xor
sub
mov
inc
scas
adc
fists
out
shl
sub
loope
pusha
sti
movsb
push
sbb
aas
add
rcrl
prefetch
or
loopne
int3
in
cwtl
popl
fcomp
jbe
imul
cmp
call
mov
dec
call
xchg
andb
cmpsw
cltd
pop
out
loop
mov
or
fildl
xor
out
mov
pop
iret
mov
into
das
sub
jmp
push
andl
jbe,pn
movsb
pop
or
sub
aam
icebp
pusha
add
mov
lahf
jl
nop
cmp
dec
mov
xor
or
inc
lret
ljmp
loope
in
jl
daa
mov
frstpm(287
call
lret
int3
pop
repz
inc
pop
jno
sti
mov
sbb
pop
xchg
fists
stos
inc
jmp
shll
inc
stc
jp
xor
popa
hlt
push
inc
dec
add
clc
dec
mov
lahf
sbb
jb
mov
jno
fadds
loop
mov
cli
xor
das
and
lret
sub
pop
add
pop
dec
lods
mov
lret
dec
xchg
pop
idivb
rorb
out
mov
xor
insl
fidivrs
cwtl
in
out
sub
inc
clc
dec
loopne
push
mov
jae
xor
pushf
ret
inc
sbb
push
xor
ficoml
sub
cmc
stc
sub
inc
jno
insl
arpl
leave
fildl
sub
add
jl
mov
daa
sub
outsb
pop
lock
mov
dec
mov
xor
call
mov
test
sbb
mov
jle
aas
inc
rcrl
repnz
lods
out
jns
add
jecxz
nop
icebp
test
rcl
lock
sub
scas
int3
iret
je
repnz
orb
push
leave
lret
movb
fs
add
movb
mov
add
iret
and
fmuls
ficompl
in
xchg
push
mov
push
push
in
jbe
cltd
cmp
movsb
inc
pusha
negl
adc
mov
xor
mov
cmp
hlt
popf
dec
mov
pop
pop
cmp
mov
add
mov
push
mov
and
pop
push
push
mov
sbb
ret
hlt
pop
cmp
ret
rorl
sub
jge
push
fimull
rol
cmpsb
aaa
out
stc
loop
sahf
pop
sbb
pop
sbb
mov
or
es
shl
xchg
movaps
sbb
mov
jno
mov
mov
mov
mov
cmpsb
cmp
lea
pop
std
cmpsl
aam
mov
hlt
jo
pop
mov
int
add
xchg
pop
dec
lret
adc
mov
in
push
xor
inc
out
mov
nop
cli
mov
sbb
aad
xchg
fstp
rorl
xor
xchg
push
and
test
xchg
jno
fidivs
call
outsl
sub
out
jns
push
and
test
xor
xlat
aam
mov
jl
popf
cmp
test
pop
xor
inc
je
fcmovnu
int3
gs
jmp
push
mov
shrl
adc
fs
xchg
lcall
cmpsb
cmp
insl
pusha
mov
xchg
cmpb
push
cwtl
mov
add
mov
and
sar
pop
inc
jmp
lods
stos
mov
cmp
insb
add
call
ror
mov
orl
cmp
push
pop
and
movsb
xchg
enter
sbb
or
and
lea
cmp
imul
xchg
inc
adc
aaa
insb
sbb
cmpsl
push
mov
fiaddl
rclb
and
cmpsl
in
and
shr
leave
push
pop
cltd
mov
ja
daa
dec
mov
in
je
push
mov
test
iret
or
dec
cltd
stc
pop
mov
mov
ds
adc
jg
jae
pop
mov
movsl
adc
out
jae
lods
pop
ljmp
pop
repnz
ret
fcomp
sahf
mov
fsubs
xor
cmc
pop
dec
jno
pop
inc
push
lock
nop
or
dec
daa
mov
lret
stos
dec
inc
jecxz
xchg
call
sbb
popl
adc
addr16
popa
push
pop
push
inc
mov
enter
sbb
fwait
hlt
push
dec
mov
push
shlb
int3
push
mov
sahf
mov
mov
repnz
movsl
jg
pop
in
out
add
mov
daa
push
mov
negb
mov
sub
cmp
aam
cmpsl
popa
adc
jmp
mov
fidivl
out
das
mov
stc
imul
push
sbb
ds
ja
pusha
and
inc
xor
xchg
push
sbb
aam
rcl
pop
cwtl
jae
loop
lahf
test
rolb
ljmp
in
cmp
fistpl
pop
add
mul
rcr
mov
push
or
fildll
adc
push
jnp
mov
lcall
and
int3
rclb
xor
fwait
daa
out
in
xor
sub
and
cmpsb
sub
mov
int3
mov
mov
and
sti
enter
repz
pop
call
mov
in
xor
xchg
addr16
mov
lcall
pusha
xor
jns
addb
lret
sub
daa
jo
ja
rclb
push
cmpsb
xor
call
vmulpd
adc
pop
ljmp
pushf
ror
sub
inc
cmp
lahf
mov
inc
je
inc
ds
jmp
andl
push
cmpsl
xlat
xor
ja
mov
ds
iret
pop
jmp
std
rcl
or
out
js
insb
xchg
mov
push
sub
scas
jns
mov
adc
add
daa
xor
stos
out
fsubrs
xor
int3
xchg
lods
sti
cmp
aam
ret
xchg
and
dec
push
add
mov
les
jl
cld
clc
xor
cmpl
adc
cmpsl
mull
inc
rcl
and
mov
cmc
mov
in
fldenv
jns
adc
call
push
fidivs
xchg
ss
xor
mov
sti
pop
lods
and
or
mov
cmpb
gs
lods
cld
cmp
and
cmp
adc
adc
data16
mov
gs
mov
test
pop
jg
rorl
insb
jne
fdivs
fld
fsubr
fldt
adc
insl
loop
stos
jl
ret
jge
dec
lods
mov
mov
outsl
insl
jge
clc
adcl
dec
mov
in
ret
or
fwait
leave
dec
push
xchg
out
fimull
sbb
sbb
xchg
jne
xchg
imul
xchg
orb
push
mov
in
dec
test
sti
fnsave
pop
mov
lods
xchg
ja
cmp
sbb
inc
mov
mov
test
mov
inc
fiadds
jp
stos
out
sub
xor
pop
or
push
jl
and
in
mov
mov
ja
enter
dec
movsl
sub
es
je
movsb
xor
push
cld
xchg
xchg
sub
add
and
fst
loop,pn
push
adc
into
addr16
xchg
mov
push
jecxz
lods
dec
sbb
pop
js
inc
mov
jg
addb
in
sub
sub
clc
mov
push
inc
inc
and
test
push
add
stos
xchg
cmpsl
pop
mov
mov
ret
cmpsl
out
stos
movsl
stos
push
sub
in
cld
lret
hlt
cwtl
adc
icebp
cmp
jns
popf
imul
or
negb
and
sbb
test
lcall
mov
mov
cltd
loopne
filds
das
pop
insl
inc
dec
leave
and
pop
xor
fisubs
sub
push
xchg
out
js
outsl
clc
nop
idivl
mov
and
cmp
dec
or
or
bound
jns
out
loopne
int3
sahf
xor
push
repnz
mov
sbb
fcomip
insb
xchg
aam
and
mov
jl
sbb
push
xchg
es
insl
push
push
cmp
loop
xlat
sahf
imul
test
mov
xchg
cwtl
fadd
clc
xchg
inc
rcll
pushf
jo
mov
xor
into
cmp
sbb
push
push
roll
jge
addr16
call
jns
pop
aas
jb
mov
subl
pusha
insb
repz
cwtl
idivl
pop
cmpsl
ret
std
pop
pop
ja
sti
fwait
loop
adc
mov
or
or
xchg
icebp
or
fisubl
insl
or
shl
pop
dec
ds
test
mov
leave
push
xor
insb
xchg
sub
push
cmp
mov
or
add
js
add
jmp
fdivs
das
fistpll
add
outsb
popa
adc
jl
sub
pop
mov
push
pusha
arpl
cmp
rorl
adc
inc
sbb
repnz
int3
add
push
mov
jbe
mov
lcall
popa
jl
stc
outsl
imul
mov
sub
insb
out
cmp
test
xor
popf
sarl
mov
adc
lcall
rclb
pop
addb
push
aaa
in
xchg
hlt
in
jne
pop
mov
into
mov
adc
xor
ret
dec
inc
cli
inc
test
mov
mov
xor
xor
data16
popf
pop
fimuls
loop
out
or
xor
cmp
jg
insl
push
ljmp
sbb
repnz
jb
loope
jg
push
in
into
loope
ret
pop
mov
mov
mov
sbb
jae
jno
sti
adc
fstl
sub
in
lods
mov
test
vprotb
fdivrl
mov
arpl
pop
jp
cmp
cmpsb
ja
fwait
mov
cli
inc
or
jecxz
movsl
pop
int3
jmp
aad
repz
mov
test
out
int3
pop
scas
icebp
mov
mov
repnz
mov
into
xor
and
imul
mov
mov
inc
clc
fwait
sbb
xchg
mov
mov
cmp
push
sahf
sahf
adc
out
data16
hlt
mov
jnp
lahf
or
rcll
mov
pop
cwtl
frstor
mov
and
sub
mov
dec
fdivs
popa
jno
xor
adc
and
ret
dec
std
fmuls
test
imulb
mov
ret
sbb
pop
enter
adc
mov
fld
mov
dec
scas
es
ret
mov
jecxz
dec
or
sbb
popf
flds
push
popa
push
xchg
jp
sub
out
and
imul
mov
insb
mov
sbb
jo
mov
lods
lds
mov
or
int
arpl
sbb
add
dec
xor
in
int3
xchg
xchg
pop
mov
int
cmp
push
addr16
push
lahf
inc
mov
sbb
gs
add
xchg
rcll
or
add
jbe
push
test
fdivrp
cmp
iret
aad
js
lods
enter
jl
or
into
mov
bound
pop
dec
mov
sbb
add
pop
sub
rclb
outsb
mov
or
push
push
dec
aas
mov
cmp
outsl
and
adc
xor
hlt
lea
xchg
pop
jecxz
out
repz
mov
movsb
sti
push
pop
out
cltd
push
mov
xchg
cmp
push
icebp
xchg
inc
cmpsl
inc
test
xchg
add
leave
test
push
gs
fsubs
imul
add
xchg
cmp
mov
xchg
push
sub
sbb
mov
loope
xchg
shlb
mov
out
push
in
add
sbb
inc
sub
pop
jl
rcrb
and
sbb
mov
out
sub
imul
or
sarb
aas
mov
sysret
mov
scas
stos
cs
dec
icebp
scas
mov
fcomi
das
sub
jo
ja
xor
mov
mov
lock
push
xor
mov
or
cwtl
pop
fisttps
les
pop
stos
fwait
movsb
cmp
dec
mov
push
mov
push
pop
dec
lret
ss
sbb
mov
xor
icebp
push
mov
ss
push
cwtl
outsb
pop
imul
mov
mov
xor
xor
mov
adc
imul
lods
out
fcomp
xor
add
out
movsl
xchg
lods
and
movb
mov
sbb
and
jb
shl
scas
mov
mov
jl
xor
clc
inc
pop
cld
jecxz,pn
sbb
in
mov
dec
and
aaa
leave
mov
inc
inc
or
insb
jmp
inc
inc
test
out
mov
cs
cwtl
xor
push
std
popf
add
adc
mov
in
push
add
aam
mov
ss
xor
sbb
pop
mov
mov
inc
sub
xor
frstor
test
or
fcmovbe
sbb
xor
cwtl
mov
push
arpl
lods
push
and
int3
mov
lock
rolb
pushw
jecxz
push
sahf
inc
ret
aas
cmpsb
icebp
push
pop
insl
in
outsb
imul
out
insb
mov
ret
jno
jp
cltd
or
add
sti
lcall
out
mov
add
std
icebp
jp
loopne
jb
mov
aam
in
push
cmc
aas
or
xchg
add
fs
dec
mov
pop
testb
lcall
push
or
add
outsb
fcom
dec
into
add
leave
mov
cltd
lahf
or
xchg
fsts
in
ret
mov
jle
fisttps
pop
enter
fadd
icebp
jge
and
addr16
subb
xor
iret
sbb
xchg
add
adc
jns
pop
loop
adc
and
je
xchg
adc
in
lahf
cmp
or
push
mov
lret
leave
adc
jns
mov
ficoml
andb
adc
mov
fisubs
in
imul
call
cmp
cltd
test
cld
sbb
jl
mov
pop
add
or
das
repnz
sub
out
jo
daa
in
jg
and
sti
lcall
xchg
mov
ss
xchg
and
arpl
loope
mov
add
mov
push
dec
pop
mov
mov
cmp
adc
and
jle
adc
inc
repz
ud0
test
cmpb
jmp
sub
popl
cli
pusha
fists
add
add
mov
push
xor
and
in
jnp
cmpsl
je
mull
mov
add
pop
out
aam
idiv
hlt
aam
je
push
je
and
idivb
push
jg
ss
cmp
and
sub
and
mov
mov
imul
aaa
jo
mov
sbb
lods
pop
addb
or
xchg
sub
lret
mov
mov
xchg
sub
neg
xor
in
xor
dec
xorb
pushl
xchg
push
mov
push
gs
fsubrs
mov
mov
es
mov
xchg
cmp
add
sti
fsub
nop
jno
loop
cmpsl
mov
xchg
cmpsb
mov
stos
in
fs
dec
das
adc
and
dec
cltd
sbb
sub
sub
leave
mov
enter
dec
dec
add
mov
sahf
and
sub
lods
loopne
sbb
decb
sbb
sbb
dec
xchg
lret
fwait
gs
iret
pop
ss
scas
ss
jne
int
xchg
pop
mov
das
hlt
lods
adc
nop
shlb
and
mov
jmp
jmp
xchg
push
jmp
mov
and
dec
leave
inc
or
xor
in
popa
or
aaa
adc
shll
jecxz
mov
not
in
pop
mov
clc
lods
into
in
add
popa
ljmp
pop
int
loope
jns
into
cld
aam
mov
in
stc
cli
loopne
inc
lock
mov
add
adc
jge
pusha
mov
and
push
int3
mov
sbb
sub
imul
enter
lcall
mov
and
jmp
aad
cmpsl
ficompl
stos
mov
and
mov
je
cmpsb
hlt
pop
testb
std
fildl
fs
std
js
lcall
ret
lock
scas
xchg
add
orb
pop
cltd
mov
loop
push
jns
mov
push
filds
mov
inc
adc
pop
mov
mov
std
sbb
adc
addr16
cmp
fcom
dec
iret
mov
dec
adc
ret
in
lahf
push
xor
es
icebp
icebp
sub
ficomps
iret
mov
arpl
or
sbb
test
nop
and
add
pusha
daa
pushf
fisubl
inc
sbb
js
call
arpl
ficoml
inc
lcall
inc
mov
shlb
int3
mov
xor
jno
mov
lahf
dec
in
mov
push
cli
push
push
inc
in
arpl
scas
cmp
adc
lahf
push
fsubl
adc
xchg
xor
pop
cmp
lahf
sti
pushf
pop
pop
and
ljmp
repnz
xchg
adc
insb
pop
lods
int3
dec
sub
mov
jecxz
dec
rcrl
jo
sub
sbb
xchg
add
cs
pop
outsb
adc
lds
dec
sbb
scas
sbb
add
mov
pop
lock
push
cwtl
shlb
pop
add
out
ret
fsubr
push
aad
mov
and
jae
dec
inc
sbb
push
mov
sarb
push
jns
aaa
xor
test
pop
sub
in
pop
std
repnz
rdpmc
mov
push
adc
movsl
xchg
pushf
mov
pop
jns
mov
mov
pop
xor
testl
rorl
sub
leave
iret
push
mov
jge
push
scas
cmp
mov
imul
xchg
cmpsb
fstpt
dec
push
imul
leave
lret
das
sbb
ficoml
sbb
cmp
or
sbb
lock
fiadds
icebp
testl
mov
dec
pop
dec
xchg
push
test
cmp
push
into
popa
pop
pop
loopne
lret
es
repnz
push
stos
pop
movl
dec
xchg
lcall
adc
and
divl
aam
cmc
inc
add
sbb
repz
rcll
ljmp
in
pop
xchg
xchg
mov
in
xchg
xchg
mov
cmc
pop
lds
xchg
mov
testl
aas
fsubs
inc
xchg
push
add
fildll
and
pop
mov
add
inc
xchg
xor
fnstsw
mov
imul
int3
movsb
icebp
xor
pop
mov
or
je
dec
mov
cmp
ja
adc
jl
das
ja
in
loop
cmpsb
fcoml
mov
sti
sub
pop
in
xor
jge
pop
add
dec
mov
lcall
rcll
clc
push
adc
rcll
xlat
or
sbbb
cmp
loope
ja
popf
pop
pop
in
cmc
mov
pop
negl
popf
out
push
lret
adc
push
pop
mov
test
xor
mov
cs
fistpl
lret
pop
hlt
and
jb
sbb
or
adc
roll
fidivs
je
lcall
pop
and
xor
jle
mov
ficompl
adc
xchg
nop
sbb
add
pushf
repnz
or
ret
insl
jae
dec
lret
xor
dec
or
pop
jbe
or
stc
inc
cmp
leave
add
test
jb
mov
dec
jae
test
out
mov
lcall
cltd
jecxz
mov
aaa
cmp
movsl
add
push
jno
mov
mov
adc
out
repnz
mov
cmp
cmp
jo
dec
xchg
imul
shrl
arpl
sbb
ret
mov
movsb
or
fstl
fdivs
inc
pop
lods
js
jno
pop
lcall
sub
mov
int3
xlat
ud1
pusha
psubsw
cmpsl
addl
sbb
fdivrl
in
aam
mov
idivb
repz
sbb
sbb
jns
clc
inc
cld
mov
outsb
cmc
pop
mov
in
jns
repnz
fs
and
cmp
in
out
push
out
lahf
mov
arpl
fbld
int
adc
push
cmp
sti
add
xchg
in
sbb
sbb
inc
into
and
in
imul
pusha
xor
nop
mov
cmpl
jns
xchg
add
mov
mov
dec
mov
shlb
pop
lods
dec
lods
and
ret
mov
adc
outsb
adc
imul
adc
mov
push
xchg
adcl
mov
aam
call
sbb
ljmp
and
ja
dec
imul
or
mov
test
adc
movsb
pop
cmpsb
cmp
and
fldt
cmp
pop
test
lret
lods
mov
mov
inc
sub
ret
and
lcall
popf
cltd
sbb
and
arpl
mov
push
fcmovnu
sub
cmp
test
sub
fsts
shlb
in
insb
pop
pop
xchg
push
sbb
lret
fistpll
out
add
inc
or
push
xor
fstp
insl
imul
mov
jmp
xchg
js
xchg
xchg
sbb
outsb
arpl
push
mov
sti
out
cli
mov
sub
aaa
sub
xorb
lcall
mov
push
push
nop
mov
mov
pop
lahf
cmpsl
mov
adc
repnz
movsb
in
cmp
sbb
and
lea
push
mov
out
jo
xchg
sub
mov
movsb
push
jmp
jae
shlb
int
rorl
jnp
test
cmpsl
dec
adc
scas
mov
pop
fildll
jge
xchg
out
mov
stos
push
mov
pop
pop
mov
mov
mov
adc
push
rorl
stos
lds
pop
sub
cmpsl
shlb
fidivs
clc
in
out
and
sti
test
scas
int3
mov
outsb
int3
jnp
and
mov
jle
push
jne
repz
push
push
out
clc
das
jmp
cmp
scas
add
movsl
mov
shr
ljmp
mov
and
push
pop
push
add
les
mov
std
cmp
cmpsb
xlat
ret
pop
cld
mov
adc
lock
sbb
lret
and
rcl
addr16
push
mov
arpl
std
orb
xor
push
ret
jno
pop
popf
orl
sbb
loopne
gs
movsl
jge
cmc
lret
lret
scas
sbb
adc
mov
sbb
jnp
cmp
gs
jne
xchg
fwait
ds
testl
test
mov
xor
sub
aas
sahf
or
stc
mov
jp
mov
cmp
test
mov
mov
lods
cltd
gs
pop
cli
fs
es
pushf
or
addr16
nop
or
lahf
dec
outsl
cmpsl
push
xchg
jae
add
or
push
jle
mov
out
add
mov
adc
mov
mov
mov
nop
data16
and
jg
nop
rcrb
mov
test
add
inc
mov
sub
or
loopne
imul
mov
push
mov
adc
jp
xor
addr16
mov
jae
add
mov
es
iret
sub
scas
lcall
xlat
mov
ficoms
push
jno
pop
or
dec
ja
sub
ret
dec
leave
rcrb
and
xchg
mov
js
and
lock
cmp
js
out
inc
xchg
cltd
jnp
or
and
pop
inc
jb
mov
push
cmp
bound
inc
mov
mov
add
inc
mov
jno
mov
cwtl
addl
jle
test
fistps
xlat
mov
inc
fxch
jmp
jg
jl
hlt
ss
push
testl
outsl
push
std
dec
pop
cli
not
aam
pop
scas
imul
insl
fldenv
pop
mov
scas
pop
jno
out
jbe
gs
int
outsb
and
movsb
push
orl
and
dec
sub
lods
or
imul
clc
in
inc
push
inc
xchg
mov
imulb
stc
mov
repnz
fcmovne
xchg
fidivrs
xchg
push
push
sarl
negb
in
cmpsb
pop
daa
rep
scas
ljmp
icebp
inc
out
add
imul
lea
insb
push
jp
lret
add
cs
cmp
jmp
cmp
pop
sub
test
aam
pop
cmpsb
fwait
sub
jns
mov
adc
cmp
add
or
or
cmp
sbb
xchg
into
push
xchg
ret
movsl
loopne
pop
call
enter
xlat
hlt
push
shll
mov
fildl
movl
sbb
jb
lcall
test
xlat
push
out
rcll
out
mov
cmp
imulb
jge,pn
mov
insb
push
adc
dec
push
dec
sub
sub
ss
jo
jp
xchg
and
inc
js
sub
push
adc
notb
pop
outsl
fsubl
in
xor
cwtl
cld
push
and
neg
pop
xchg
sbb
hlt
jns
iret
xchg
imul
cwtl
fiadds
xor
fimuls
rclb
outsl
arpl
jg
mov
dec
adc
out
scas
xor
iret
in
add
mov
ret
std
push
dec
pop
scas
dec
push
mov
call
mov
loop
ret
push
in
repnz
inc
add
sub
ss
rclb
pop
dec
out
lds
or
lods
jns
or
mov
ds
inc
inc
mov
jp
mov
loop
and
mov
push
int3
rorb
jb,pn
and
or
dec
and
popa
jmp
call
inc
rorb
imul
xor
dec
adc
mov
jg
fmull
and
cmp
arpl
inc
outsl
fldpi
and
mov
mov
lea
testl
lock
in
pop
xchg
cmpsb
cmp
int
cmp
lret
movsb
dec
lret
les
push
js
mov
fisttpl
and
repnz
mov
js
xchg
sub
scas
push
dec
arpl
jo
cld
and
xorb
loop
sbb
aam
shl
add
or
das
icebp
shrl
mov
lea
sbb
popa
leave
push
sbb
mov
push
add
jmp
mov
lock
lock
dec
sahf
jg
inc
scas
ds
dec
scas
pop
fsts
jno
mov
dec
std
testb
cmpsb
jmp
aam
add
loopne
ret
xchg
dec
rorb
mov
jne
ljmp
xchg
xor
mov
add
push
xchg
pushf
rcr
and
cmp
stc
jecxz
cmp
mov
aam
dec
push
arpl
xor
cmpsb
xor
aaa
xchg
and
push
fimull
in
add
scas
call
cwtl
or
pop
xor
inc
sub
jp
inc
push
mov
jmp
mov
sub
arpl
adc
cmp
ja
cmpsb
xchg
jg
fcompl
lods
enter
sarl
jecxz
jg
test
pop
xchg
mov
dec
cmp
push
lds
pop
dec
loope
jmp
test
insb
insl
xor
pop
and
int3
pusha
rorb
fsubl
js
cmp
adc
xchg
sub
cmp
mov
dec
xor
jae
je
and
jo
clc
mov
bound
inc
ret
test
inc
lret
fwait
lret
cmp
insl
subl
sub
test
ret
ret
push
fsts
inc
and
pop
inc
xor
scas
jns
clc
mov
loope
sbb
mov
pop
cltd
ret
pop
imul
xrelease
adc
ffree
out
mov
push
out
cmp
push
loopne
and
xorb
insl
push
mov
push
add
jmp
imull
repnz
jbe
lret
mov
sbb
gs
jle
outsl
sub
imul
push
push
xor
sti
lods
subl
sub
mov
inc
jecxz
enter
add
ljmp
in
fmuls
rcrl
imul
xchg
movsb
cmc
pop
hlt
imul
mov
aaa
push
in
dec
repz
ret
pop
jp
jae
pop
xor
mov
lock
aam
mov
pushf
movl
mov
test
add
ja
mov
fists
or
ret
pushf
dec
and
push
nop
and
out
enter
mov
mov
add
outsl
adc
addr16
lahf
mov
cwtl
dec
adc
icebp
fcmovu
leave
lcall
mov
test
adc
repz
push
cli
jnp
jo
and
cmp
pushf
push
push
jnp
mov
or
fwait
bound
enter
test
lret
cmc
ja
jg
jle
mov
outsb
jbe
jl
movl
mov
xchg
in
call
add
and
jae
movsb
cmc
dec
ljmp
fs
shlb
sub
push
push
dec
pop
lods
push
fisttps
push
xor
push
loop
pop
nop
insl
mov
jecxz
or
mov
outsb
lods
adc
stos
cmp
das
das
xor
push
icebp
add
sar
mov
ja
mul
dec
testl
out
xchg
out
gs
in
adc
stos
lods
add
jp
push
sbbb
xchg
pop
outsl
roll
pop
pop
xchg
dec
daa
adc
jl
xchg
shll
or
imul
or
adc
aas
push
das
pop
xchg
jmp
dec
or
xor
dec
nop
mov
orl
out
push
sbb
xchg
inc
into
mov
pop
pop
mov
jo
mov
add
pop
cmc
sbb
xchg
ret
jb
adc
mov
xorb
add
into
adc
cs
xor
popa
sbb
sbb
jp
inc
fs
jns
push
outsb
movsb
hlt
int3
pop
cld
push
sbb
fldl
int3
and
aad
mov
outsb
aaa
into
sbb
shlb
lds
outsl
fimull
test
jo
mov
lldt
outsb
sbb
mov
sbb
xchg
lret
js
lods
jmp
push
push
push
mov
jnp
cmp
mov
mov
jg
rcll
in
repnz
push
daa
into
call
fcmovu
ret
xchg
les
adc
and
jno
or
ss
bnd
mov
jo
insb
dec
cmpsl
fwait
das
dec
insl
push
mov
or
arpl
mov
scas
xchg
stos
xor
xchg
jne
leave
pusha
adc
fcoml
imul
pop
mov
sub
scas
mull
cmp
stos
in
notl
sahf
movsb
mov
fsubs
inc
jmp
dec
adc
mov
mov
vpshaq
push
outsb
xchg
xchg
je
cmp
dec
xchg
jle
mov
and
push
mov
sbb
ljmp
ds
loopne
cwtl
cmpsl
and
mov
data16
rolb
sub
lea
inc
data16
shll
xor
and
psubw
fs
mov
xlat
pop
add
ret
loope
shll
sub
psubsb
insl
xlat
jo
inc
mov
push
mov
mov
push
jb
jle
mov
loopne
sub
cwtl
mov
into
adc
pop
add
daa
rcrb
std
sti
mov
adc
loop
add
in
mov
popa
inc
ds
ss
xor
and
adc
pop
mov
lock
jp
adc
mov
cltd
dec
ds
ja
enter
lods
lea
pop
mov
jb
cmp
pop
icebp
outsb
gs
shrb
test
imul
inc
mov
mov
and
cli
cmp
into
inc
lcall
dec
mov
sbb
jns
jae
je
mov
and
jnp
inc
in
and
fstpl
lock
mov
push
or
mov
jns
rcr
stos
mov
shrl
scas
in
insl
mov
add
add
mov
jl
faddp
cwtl
push
mov
into
cmp
adc
fmuls
scas
xor
mov
shll
pop
adc
sub
testb
lret
lds
mov
sub
mov
jnp
loop
ret
idiv
adc
xor
subl
xchg
cli
repz
es
loopne
shl
xchg
imul
jne
add
loop
sti
inc
call
movsb
gs
addr16
push
daa
and
fcoms
in
inc
dec
push
pop
xchg
jbe
repnz
adc
mov
pop
mov
xchg
icebp
data16
aam
dec
in
in
adc
popf
je,pt
sbb
sbb
mov
pushf
daa
cli
inc
jb
dec
and
gs
nop
adc
out
pusha
inc
add
cs
push
ja
push
pop
mov
add
test
mov
aad
or
imul
or
test
jmp
mov
mov
cmpsb
xor
stos
cs
imul
xchg
scas
dec
jge
lods
xchg
cmc
xchg
imul
sub
popa
jge
push
and
and
cmpsb
popa
xor
pop
mov
mov
lret
fstpl
pop
pop
es
xor
push
pop
sub
xor
hlt
stos
mov
or
movsl
out
fwait
mov
ja
repz
jp
int3
cmp
ret
inc
dec
xor
imul
rcr
jmp
ret
xchg
push
jo
test
jmp
insl
or
xor
dec
call
dec
cli
imul
mov
mov
adc
stc
add
insl
outsl
or
and
shl
push
loope
ja
mul
sub
in
mov
inc
jns
mov
stc
push
add
inc
adc
xchg
ss
test
xor
dec
xor
sbb
xchg
add
fs
data16
pop
aaa
iret
push
stos
cmpsb
movsb
out
sbb
fidivrs
mov
inc
aam
sub
cmp
inc
dec
or
xlat
sub
arpl
mov
cwtl
enter
jecxz
negl
jp
cld
lcall
cld
aas
cwtl
mov
hlt
dec
ret
mov
pop
and
add
push
mov
push
cmp
jle
lds
mov
jmp
cs
lds
lret
or
in
and
mov
popf
inc
mov
lea
add
xchg
mov
or
shrb
dec
mov
int
stos
les
test
adc
xor
stos
xor
jns
xor
andnps
ss
jae
out
movsb
or
hlt
and
mov
add
xchg
negb
xor
js
aam
cmp
add
xor
xchg
mov
call
insl
mov
into
movsl
in
pop
or
scas
es
call
cmc
mov
fcompl
or
sbb
std
shr
es
ja
neg
std
and
pop
stos
dec
cmp
add
je
int
mov
dec
les
cmp
repz
sbb
mov
push
pop
lods
or
mov
aad
pushf
in
mov
and
imul
stos
mov
mov
mov
nop
std
rcrl
sbb
popf
in
xchg
shrb
pop
cmpsl
mulb
cmp
mov
dec
add
imul
mov
pop
adc
pop
repnz
dec
xor
enter
jmp
call
shrb
mov
sti
inc
das
jns
mov
adcl
push
jne
mov
jg
pop
jge
push
mov
jne
lret
rcll
add
dec
andps
jmp
mov
cmc
jle
popa
fs
xchg
test
xchg
push
mov
and
in
ss
jns
jmp
cmp
xchg
or
loopne
repz
stc
bound
mov
scas
lahf
and
jg
mov
cmp
mov
faddl
pop
push
or
popf
rclb
cmp
fcmove
fcomp
notb
in
cmpsb
mov
test
mov
jle
sahf
jecxz
mov
in
test
jne
xor
or
stos
fstps
scas
sbb
or
es
pusha
es
jp
cmp
mov
xchg
mov
adc
inc
jge
mov
jns
testb
push
and
mov
pop
bound
cltd
and
mov
sahf
mov
lds
lods
pop
in
das
add
movsl
out
imul
aam
mov
mov
aam
cmpl
jns
sbb
popa
mov
jae
test
jae
and
aas
shll
push
jno
push
cltd
sbb
dec
stos
sbb
dec
out
sbb
pop
jb
repnz
push
jbe
aad
mov
push
in
jmp
nop
inc
aas
cmp
movsb
fwait
dec
into
cmp
sub
gs
sti
jne
push
scas
and
mov
add
fisubl
stc
stos
cmpsl
jp
xlat
mov
pusha
mov
dec
out
aam
outsl
rclb
daa
notl
popa
pop
xchg
mov
fldl
push
test
movsl
push
and
dec
sbb
or
ss
xchg
mov
sarl
sub
movsl
je
movsl
jns
pop
jge
push
lahf
pop
lods
push
aaa
sbb
in
cmpb
repnz
and
mov
fcoms
movsl
mov
cli
pop
xchg
jbe
inc
cld
shlb
fidivl
inc
adc
sub
ret
push
test
out
lods
mov
dec
fwait
push
loope
xchg
inc
cld
stos
pop
xor
popa
inc
lds
lods
pop
sbb
cmp
ss
mov
jmp
or
out
sbb
mov
in
and
out
cmpsl
sti
inc
movsb
outsl
mov
cs
ja
rcrb
cli
sbb
lcall
subl
add
adc
popa
dec
jle
adc
ds
stos
fcompl
mov
push
movsb
fsub
inc
add
pop
fistpl
pop
icebp
jo
inc
xchg
addr16
lahf
mov
add
mov
jb
mov
shl
pop
lcall
mov
xor
enter
dec
mov
jno
cltd
outsb
icebp
push
sbb
je
push
or
iret
jp
lahf
and
and
fistpll
rorl
push
push
je
add
lcall
mov
out
jns
push
test
xor
pop
add
cmp
fwait
mov
inc
xor
push
test
add
fadds
sbb
adcl
inc
push
dec
sub
sbb
bound
jmp
aad
push
repz
add
push
add
dec
and
mov
stos
pop
into
dec
js
iret
je
mov
sbb
rorl
push
sbb
lahf
out
sbb
aad
pop
jo
jno
push
sub
clc
adc
sbb
outsb
stos
push
shrl
add
xor
lcall
push
es
push
jb
cmp
ret
call
or
mov
inc
jae
gs
enter
jbe
dec
or
loope
lock
aam
jge
enter
int3
cmp
or
sbb
mov
lahf
arpl
push
insl
mov
xor
addr16
out
sti
fwait
xchg
jno
push
rolb
pop
add
ja
movsl
inc
xor
push
shll
fwait
xlat
aas
imul
mov
cmp
stos
adc
adcl
jecxz
xor
nop
je
push
mov
lahf
inc
popf
movsl
lock
aaa
lods
cltd
sub
insl
fistl
scas
fldl
inc
or
movl
out
loope
cmp
pop
push
je
sbb
or
cmpb
sti
incb
mov
jbe
push
push
out
das
and
shr
cmp
cmpsl
adc
mov
lret
xor
test
scas
iret
orb
sbb
movsb
jg
jmp
adc
in
ret
jmp
bsr
sahf
or
hlt
jnp
xor
stc
mov
loop
dec
lods
add
jecxz
inc
shrb
jb
mov
inc
xor
push
push
mov
repz
ss
push
dec
js
mov
inc
enter
push
pop
sbb
cli
xor
std
mov
cltd
popl
jmp
leave
fmuls
inc
lahf
in
ljmp
push
xor
jno
sub
insl
cmp
mov
jns
xchg
andl
inc
pop
add
inc
rcll
sbb
sub
ret
and
adc
xor
inc
repnz
data16
jp
push
mov
add
int
fidivrs
insl
repz
sub
in
loope
dec
enter
mov
out
mov
cmpl
negl
add
adc
dec
inc
idivl
cmp
dec
lret
xchg
fdivrl
pop
aad
popa
pop
cli
mov
or
cmp
mov
ja
fsubrs
clc
sti
icebp
jnp
or
es
mov
js
dec
mov
enter
add
mov
nop
inc
fcmovnbe
pop
mov
push
into
sbb
rcr
popa
lds
imul
test
inc
push
vpcmpgtw
es
pop
xchg
sbb
arpl
sub
jge
mov
xorb
dec
mov
cmpsl
xor
fnstsw
push
pop
pop
loopne
mov
sbb
in
lcall
sub
jae
push
pop
jmp
or
sub
adc
sub
pop
mov
in
lret
cmp
sub
adc
out
cmpsl
push
jl
push
sub
xchg
sub
test
test
cwtl
loop
inc
cmp
int
push
or
mov
stc
sbb
push
pop
cltd
dec
pop
or
into
in
addr16
mov
xlat
inc
in
lahf
cmp
add
bswap
cmp
das
lea
or
in
dec
sub
xor
out
xor
mov
loopne
cmp
je
mov
loopne
add
bound
add
aas
inc
mov
adc
xlat
sbb
es
das
sub
sbb
sub
rorl
mov
jge
sbb
pushf
xlat
hlt
test
sub
push
lods
xchg
xor
push
clc
pop
jge
push
push
in
or
popf
mov
ret
test
int3
mov
pop
mov
sbb
sub
ss
es
inc
sub
push
rcll
je
fsts
sub
das
ret
push
sbb
adc
jne
fnstsw
rcrb
shlb
and
sti
add
das
inc
pop
sarb
in
rclb
or
fcom
sub
and
mov
lea
mov
xchg
inc
mov
cmp
push
hlt
jp
das
jg
sbbb
dec
sbb
xchg
mov
arpl
adc
sub
xor
insb
inc
mov
push
pop
cmp
push
int
cmp
addb
in
imul
jle
rclb
or
movsb
sahf
test
fnsave
dec
push
shll
jbe
and
xchg
and
jecxz
mov
rcl
ds
sub
rorb
int3
sti
sbb
jge
mov
and
std
clc
add
icebp
ja
shrl
sti
loope
aam
push
loopne
test
int3
mov
loop
mov
stc
lcall
scas
nop
pushf
hlt
cld
in
out
ret
xchg
in
pmaxub
sbb
dec
imul
jo
cmp
or
xchg
enter
out
add
in
or
divb
inc
dec
out
icebp
inc
mov
in
cwtl
mov
iret
ret
ss
mov
jg
xorl
cmpl
sub
mov
fwait
lcall
loopne
adc
mov
cltd
pusha
push
int
je
out
pop
out
jo
and
xchg
xchg
test
lock
adc
push
cwtl
aas
ret
mov
mov
inc
mov
ljmp
negb
mov
pop
mov
loopne
test
notl
cmp
add
xor
movb
ljmp
xchg
add
mov
cwtl
xchg
cmpsl
fucom
ss
ficomps
jge
jns
push
xchg
insb
push
or
stc
pushf
outsb
rcrb
push
decl
xchg
dec
ljmp
flds
test
cmp
xchg
push
xor
mov
lods
rcll
outsb
imul
jae
adc
arpl
sub
fwait
cmp
push
mov
js
adc
mov
and
loopne
dec
lahf
outsl
std
ja
lret
mov
jno
out
xchg
repnz
ljmp
xchg
mov
pushf
jns
insl
sbb
in
rorb
enter
lcall
inc
data16
sbb
mov
addr16
testl
mov
lea
mov
pusha
je
subl
dec
loop
icebp
pop
push
jg
pusha
das
lods
fbld
hlt
je
stos
cs
call
iret
push
jns
sub
cmp
jecxz
dec
xchg
xchg
cmpsl
idivl
xlat
or
xor
addr16
push
adc
and
or
inc
out
push
adc
repnz
aam
or
push
cmp
lea
push
push
addb
pop
mov
lods
mov
mov
js
les
sub
mov
jmp
in
movsl
imul
xchg
imul
add
or
std
shll
dec
jns
dec
xchg
xchg
or
into
and
dec
push
inc
in
out
add
repnz
push
daa
cltd
in
cmp
cwtl
sub
cli
or
mov
push
mov
or
stc
or
mov
or
push
pushf
pusha
jg
mov
jne
imul
cltd
je
adc
cli
and
jb
xchg
jo
pop
in
out
jo
cmp
popf
inc
loop
ret
orb
test
pop
inc
int3
into
lea
out
sub
stos
mov
push
cwtl
dec
fisubrs
test
or
push
and
add
cmp
inc
or
inc
rcrb
mov
xor
pop
icebp
cmc
push
xor
cmp
sbb
shrb
lret
in
mov
cmpsb
cmp
jns
fists
movsb
dec
js
or
out
jbe
imul
mov
outsb
jno
xor
xchg
outsb
inc
arpl
fs
inc
cmpsb
xor
xchg
xchg
cmp
pusha
jecxz
xor
or
ljmp
iret
dec
ss
lods
repnz
push
add
mov
inc
dec
pop
cmp
and
mov
std
pop
mov
ficoms
aad
rcll
dec
or
mov
divl
pop
mov
pop
xor
cmc
push
push
jp
iret
cmc
ret
rcl
insl
xchg
add
jmp
sub
cmp
shlb
mov
or
add
shlb
mov
sti
clc
pop
or
imul
adc
cld
dec
rcrl
stos
lret
cmc
add
jmp
or
imul
xor
xchg
scas
iret
mov
or
fnsave
mov
sub
dec
cmpsl
pop
idivb
xchg
repz
xor
or
fidivl
test
fld
xor
add
mov
or
pop
sbb
scas
jp
sub
in
cmc
or
mov
enter
push
inc
shll
jb
add
xchg
call
fstpl
mov
mov
dec
sub
lcall
jle
movsl
int
mov
out
adc
andl
push
cltd
dec
out
nop
shl
cmpsb
jmp
pop
shll
negl
aam
mov
jne
add
xchg
movb
mov
xabort
mov
cmpsb
aad
roll
call
sbb
movlps
imulb
test
and
lds
sbb
into
add
add
push
movsb
out
outsl
push
in
mov
or
adc
mov
inc
js
push
pusha
and
cmpsl
shlb
mov
jl
and
or
movsb
lock
dec
repz
push
nop
lea
mov
mov
xchg
lods
lret
cmp
dec
adc
sbb
fisubrs
push
not
xchg
jae
mov
push
and
loop
sbb
push
stos
xchg
notl
enter
das
adc
and
scas
loop
fadds
stos
mov
xchg
add
jl
xor
or
ret
leave
scas
sub
push
repz
mov
adc
icebp
pop
push
dec
mov
xchg
imul
out
lea
push
xor
jnp
daa
jae
ret
sbb
iret
test
jno
xor
lret
cwtl
dec
int3
stos
into
pushf
popa
icebp
clc
lcall
in
hlt
and
mov
fisubrs
lahf
dec
mov
testl
lahf
jb
xchg
pusha
sbb
push
out
and
ds
js
testl
loope
xchg
jns
xchg
or
pop
add
jecxz
jno
sbb
jecxz
xor
cmp
dec
clc
ljmp
jmp
mov
mov
push
xlat
push
inc
sub
iret
cld
rcrb
cmpsl
rep
iret
xor
pop
out
push
mov
xlat
fwait
cmp
jg
filds
sbb
sbb
cmpsl
mov
xor
lahf
adc
lods
in
adc
add
and
push
sbb
sbb
popa
fists
int
popw
cwtl
hlt
add
and
sub
out
and
mov
ds
lds
adc
mov
xchg
ds
test
aaa
add
jbe
sbb
xchg
into
xor
jo
shll
pop
lock
fwait
gs
jle
jno
lds
andl
sbb
sbb
sbb
dec
xor
dec
inc
insl
jp
xor
hlt
fs
xchg
sub
lds
or
jbe
sub
jecxz
inc
add
shl
push
lahf
test
dec
test
xor
pop
mov
sub
inc
sbb
jnp
adcb
adc
popa
dec
mov
sarl
jmp
adc
lahf
pop
xchg
das
iret
lcall
ror
mov
sub
mov
mov
je
test
cmpsb
jae
mov
cmp
imul
sarb
aas
fisubl
sbb
sarl
xchg
sgdtl
sbbb
clc
lds
insl
stc
sbb
and
and
lock
ret
arpl
in
jne
movsl
jp
sbb
inc
push
dec
or
scas
jno
in
mov
adc
dec
in
mov
mov
mov
je
xchg
xchg
jp
mov
xor
leave
lret
mov
daa
fs
shll
push
inc
das
fwait
cltd
inc
or
mov
ret
insl
push
or
cmp
cmp
shlb
cmp
mov
mov
ret
mov
dec
dec
int3
pop
loope
mov
std
and
xchg
in
jmp
lock
push
pop
mov
or
pop
repnz
je
pop
jno
push
movsl
sub
aad
in
les
scas
adc
add
xchg
cli
enter
arpl
push
loopne
sbb
mov
ret
pop
ss
mov
xchg
add
push
inc
movsl
xor
sbb
cmp
mov
jmp
lret
scas
inc
jbe
int3
bnd
shlb
nop
jbe
mov
jp
insb
add
sbb
xchg
mov
outsb
ljmp
vpunpckhqdq
imul
xchg
ret
and
sub
popf
mov
fisubs
cmpsl
cltd
pop
test
jp
lret
sub
jne
inc
xlat
fwait
sub
adc
sbb
ret
gs
xor
xor
hlt
jae
or
xchg
leave
jmp
dec
test
mov
jnp
mov
das
pop
add
pop
call
mov
jo
add
cmpsb
in
push
inc
push
inc
lds
movsb
xlat
gs
ss
and
cmp
mov
inc
ds
es
mov
dec
xor
arpl
es
inc
les
xor
jns
and
js
bound
nop
sarl
or
and
lock
lods
cld
pop
int
pop
dec
fidivl
xor
sbb
adc
fsts
xchg
stc
xchg
mov
bound
sub
and
xchg
sbb
psubq
cmpl
adc
jmp
sbb
inc
rorb
cltd
out
adc
fdivs
mov
mov
es
roll
mov
cltd
shll
lcall
add
xor
sti
cli
push
in
mov
xchg
cmp
popf
sti
in
outsb
stos
or
arpl
push
cmp
xor
dec
arpl
lret
ljmp
push
fnstsw
or
adc
sub
stc
mov
inc
out
sbb
mov
ds
sbb
dec
lret
and
mov
mov
hlt
movsb
jp
sahf
and
mov
jns
stos
aaa
push
push
mov
imul
xchg
lods
leave
xor
stc
test
icebp
insb
lcall
add
pop
fwait
mov
mov
push
dec
and
push
add
sub
push
cmp
fnsave
das
jae
adc
mov
repnz
sub
mov
add
negb
add
pop
mov
fstp
xchg
add
movsl
movsb
mov
aad
mov
jl
ljmp
cmp
jge
jb
inc
imul
std
jmp
xor
cwtl
add
jmp
mov
sub
out
loopne
lock
pop
lods
dec
fistps
out
mov
js
xchg
sarb
mov
cmp
loop
lcall
jmp
movsb
shl
jmp
push
lods
dec
addr16
sub
out
mov
pusha
cmp
mulb
pop
das
cwtl
out
mov
mov
imul
rcrb
addr16
pop
int
adc
xor
movsl
in
aas
mov
sbb
push
jg
push
xchg
in
dec
or
in
dec
jbe
or
movsl
int
cmc
push
mov
mov
aas
ret
pop
gs
cwtl
xchg
xchg
dec
push
mov
int3
mov
lcall
in
scas
inc
sub
and
or
sbb
push
loopne
push
aad
push
std
fidivrl
jno
mov
rolb
push
cmp
adc
inc
inc
pushf
cld
inc
cmc
jle
cmp
scas
roll
pop
outsb
inc
mov
jmp
outsl
gs
ja
adc
subb
rclb
cli
inc
push
aaa
jnp
lret
ret
pop
movsb
cmp
outsb
mov
push
repnz
mov
mov
fisubrl
stc
popa
adc
pop
jb
and
add
insl
lret
adc
dec
jnp
and
cwtl
jge
lods
lret
adc
mov
dec
or
ret
out
popa
jb
pop
lcall
dec
mov
insl
mov
dec
xorl
mov
jne
dec
mov
xchg
sbb
cltd
xor
clc
mov
stos
mov
push
xor
xor
pusha
out
lods
lds
and
out
cld
pop
lds
adc
ret
jns
shlb
inc
jmp
mov
cmp
mov
mov
add
fstpt
addb
push
sub
dec
push
leave
dec
sbbl
enter
xor
jmp
xchg
or
mov
sub
push
or
pop
mov
xorl
mov
pop
cs
rcr
xchg
inc
cld
xchg
adcb
xchg
out
stos
push
stos
xor
or
add
js
aad
lock
cmc
test
jb
cli
dec
xor
mov
or
stos
sahf
out
pop
or
and
cmc
jnp
cmp
lcall
lds
adc
mov
push
pop
les
stc
adc
or
pushf
aaa
mov
movb
pop
sbb
mov
xchg
and
cmp
add
daa
xor
jl
dec
mov
fisubs
inc
jnp
adc
cmpsl
mov
test
pop
push
notl
cmp
test
divps
cmpsb
jg
cltd
mov
xlat
fs
sahf
xchg
push
imul
sbb
js
dec
aaa
or
or
fisttps
or
ja
jl
cmp
jge
negb
fdivrs
fs
mov
push
mov
sbb
stc
jl
loopne
lds
scas
fcomi
loope
loope
or
lods
or
mov
imul
add
pop
adc
lock
pop
inc
jb
dec
push
mov
sbb
hlt
mov
scas
jl
icebp
in
outsl
mov
sub
ds
xchg
mov
dec
sub
adc
lahf
ret
adcl
jge
enter
push
cmp
push
fisubrl
int3
pop
cmpsl
movsl
fs
pmuludq
mov
push
push
and
sub
pushf
orb
lds
adc
or
insl
aaa
jae
add
xchg
lahf
sar
push
daa
sub
pop
out
fcmovbe
push
pop
xchg
cmc
xor
dec
iret
push
jo
pop
orl
mov
int
fwait
pop
jge
cwtl
outsb
dec
sbb
lea
cli
xor
ss
popa
subb
clc
jno
sbb
pop
fisttpl
stos
mov
mov
pop
into
push
imul
cmp
test
or
scas
cld
stos
inc
sarb
lcall
push
lea
jno
sub
push
xor
addr16
ror
in
lds
scas
jge
aad
fwait
mov
or
loopne
add
or
int3
fisubrl
mov
jmp
xor
clc
mov
mov
pop
push
arpl
xor
or
add
adc
test
pop
push
insb
fwait
fs
incb
inc
leave
mov
fidivrl
in
jg
les
dec
les
push
jo
xchg
mov
xchg
fcoml
xchg
in
inc
outsb
icebp
call
jp
andl
jmp
dec
mov
add
mov
ret
xor
shrl
js
jle
icebp
sbb
in
mov
fs
pushf
popa
lret
cmp
in
push
xchg
aas
sarb
dec
push
xchg
xchg
jo
pop
pop
or
add
sti
push
sarb
inc
xchg
mov
rorl
pop
jmp
xlat
and
cmovbe
dec
daa
aas
mov
xchg
ja
out
xchg
mov
mov
and
mov
pop
inc
lods
jl
cli
js
loop
xchg
lods
out
sbb
jo
mov
bound
pop
mov
fwait
mov
xchg
add
mov
enter
dec
push
dec
outsb
and
addl
adc
repnz
mov
loopne
sahf
orb
push
ss
ret
in
rol
jo
ds
ret
lret
loopne
data16
pop
pop
loop
loop
mov
jecxz
mov
aas
sbb
sub
pop
into
mov
mov
mov
sar
add
or
jmp
mov
test
stc
jbe
mov
xor
push
push
aam
ja
daa
lods
fldcw
lcall
insl
rcrl
repnz
adc
jbe
xor
xchg
ss
cld
pop
data16
enter
and
and
mov
aam
cwtl
imul
pop
cld
xor
jecxz
ds
adc
dec
inc
cwtl
pop
scas
int3
and
pop
out
mov
aas
cmpsl
leave
jno
jno
sub
sub
push
rcll
iret
shlb
ret
push
rclb
das
lock
test
test
add
mov
jecxz
mov
cmp
test
test
aas
push
pop
in
lret
sysexit
jne
mov
sub
sub
adc
or
cwtl
sub
in
xchg
pop
loope
dec
fcmovnu
test
leave
mov
int3
daa
sbb
iret
push
sub
sub
push
fnstcw
mov
in
pop
ss
ficomps
nop
mov
push
cmpsl
sbb
cmp
adc
jno
inc
cmp
inc
and
jbe
xor
sbb
pop
push
scas
pop
outsb
test
mov
cmp
imul
ljmp
sbb
shlb
fmull
or
and
sub
or
imul
faddl
and
addr16
in
and
into
fildll
lret
call
testb
mov
scas
cwtl
and
shrb
popf
inc
jmp
fisttps
jmp
lret
sub
jb
rorb
pop
aam
dec
cmp
lret
ret
jecxz
orb
mov
divl
lahf
dec
ja
loope
push
fcom
mov
aam
testl
sbb
jecxz
mov
xchg
jl
call
ljmp
pop
add
in
adc
imul
hlt
jp
xlat
je
xchg
adc
pop
clc
inc
add
mov
sbb
dec
fdivrs
bound
sub
xchg
push
push
jb
pop
popa
outsb
cmp
or
pop
sub
fldl
aad
rcrb
mov
aam
cli
cmp
mov
adc
xor
and
mov
sahf
icebp
sbb
push
fistpll
sahf
pop
cmc
stc
mov
std
mov
aas
out
dec
xchg
js
push
adc
sbb
push
mov
repz
addr16
jo
mov
sub
sbb
cmp
add
mov
cwtl
xor
cs
lock
dec
int
insl
insb
cld
pop
incb
popa
mulb
jb
out
inc
mov
shll
lock
fcoml
fildl
orb
add
and
sub
ret
xor
imul
enter
rolb
dec
bsr
sarl
dec
sbb
mov
roll
stc
push
das
cmp
inc
push
and
adc
jmp
mov
sarl
fsubs
dec
push
sub
pop
mov
push
pop
std
pop
jno
and
xor
sub
nopl
sbbb
xchg
outsb
dec
sub
cmpsb
enter
push
dec
and
pop
pop
stos
nop
imul
out
shl
int
mov
cmp
test
sub
or
push
scas
push
fimuls
dec
test
mov
push
lcall
dec
in
mov
and
push
jbe
mov
xor
or
adc
xor
push
daa
enter
or
adc
adc
jmp
adc
or
mov
shlb
add
test
cmc
out
jp
lea
jle
popl
sqrtps
jmp
mov
movl
jl
in
aaa
xor
ljmp
mov
mov
rol
jmp
dec
mov
jbe
and
pushf
and
sub
in
ja
jle
jg
push
ret
xchg
lods
xor
aad
sub
adc
in
sbb
cwtl
xlat
jg
je
das
insb
jae
push
cmp
sub
sbb
in
repz
push
pop
xlat
das
inc
pop
lret
lcall
cs
sub
std
adc
push
fmul
mov
add
dec
mov
loopne
sbb
adc
sahf
sub
andl
loope
jp
inc
adc
out
xor
sbb
sbb
xchg
jmp
dec
gs
movsl
sbb
sub
shll
shlb
mov
sub
in
dec
aad
and
test
mov
out
data16
shlb
int
sub
lahf
inc
cwtl
mov
sbb
popf
cmp
loope
lcall
test
xchg
pop
mov
daa
adc
or
pop
outsl
mov
rcrb
add
push
sbb
push
mov
cld
stos
mov
enter
hlt
ds
dec
leave
dec
adc
cs
cmp
daa
cmpsl
add
sub
aad
add
dec
call
lods
sha1msg1
pusha
lds
das
fsubrl
cmp
popa
add
or
mov
xchg
ds
cwtl
mov
stos
push
mov
lods
imul
sbb
dec
cmp
roll
pop
inc
inc
test
cmc
outsl
rcr
or
adc
pop
cli
jae
add
out
out
dec
negb
stc
mov
jbe
adc
or
in
frstor
sub
dec
out
mov
dec
fisubrs
adc
daa
sub
jb
lods
cmp
sub
fmulp
inc
inc
int
mov
dec
mov
xchg
cmc
nopl
dec
call
ljmp
scas
loopne
inc
adc
mov
or
dec
sub
jb
rclb
mov
mov
shlb
aas
jb
out
and
jg
jns
insl
pmaxub
shll
jp
adc
lret
or
xchg
lds
loop
imul
loope
inc
and
fdivrs
stos
divl
cmp
cmp
jle
mov
fs
add
sub
xor
cmp
add
rcrb
mov
ss
sbb
cmp
popf
dec
jb
les
dec
aam
lock
or
lock
jmp
push
ror
inc
aam
fcomp
imul
dec
xchg
jae
pop
cmp
in
stos
stc
test
xchg
xchg
push
nop
imul
xor
scas
cli
popa
jecxz
call
rclb
xchg
adc
mov
xchg
or
add
inc
scas
pop
jge
dec
cmp
pop
insl
fs
xor
or
xchg
and
mov
xchg
xchg
lock
repnz
push
je
sub
mov
mov
adc
add
adc
in
mov
shlb
push
daa
jmp
lods
mov
scas
xchg
loope
into
mov
mov
es
jl
push
add
push
add
in
sbb
mov
xchg
inc
mov
in
mov
or
or
sti
sbb
or
xor
cmpsb
das
adc
mov
add
sub
inc
mov
fs
in
idivb
test
in
das
mov
and
test
inc
lds
push
iret
daa
out
lea
mov
mov
xchg
push
mov
mov
sbb
mov
popf
xchg
popf
arpl
sti
inc
mov
mov
mov
arpl
and
out
push
data16
or
xor
sub
addr16
or
loopne
mov
xor
cmc
dec
xchg
test
xor
dec
fsubrs
push
gs
lahf
dec
loop
xor
std
cwtl
das
mov
or
inc
mov
lods
ds
test
sbbb
inc
mov
or
sub
test
dec
hlt
popa
xor
jmp
pushf
jns
orl
mov
push
test
clc
out
push
cs
ljmp
adc
adc
xchg
pop
cwtl
shll
inc
sahf
push
mov
dec
jne
data16
add
mov
dec
ljmp
mov
mov
mov
mov
lret
mov
mov
gs
bnd
or
ds
inc
test
sbb
in
insb
repnz
test
cmp
mov
mov
lods
enter
push
mov
loopne
leave
test
mov
cltd
arpl
test
out
out
adc
lock
movsl
sbb
insb
fistps
and
andl
jo
pop
xchg
xchg
lods
aas
loop
iret
or
dec
rol
mov
and
stos
cmp
je
xorl
push
push
mov
mov
fstpl
dec
adc
psrad
dec
inc
aam
roll
enter
cmpsl
fmull
mov
adc
add
int
cmp
in
inc
push
xchg
popa
int3
mov
adc
add
mov
sti
insl
push
aad
mov
bswap
js
or
cmpsl
and
pop
and
adc
push
shlb
addl
xor
or
scas
stos
and
sub
jnp
xor
adc
add
add
and
ret
ds
gs
and
xor
xor
jb
icebp
xchg
sub
jo
mov
imul
mov
jecxz
int
mov
test
clc
lahf
or
mov
insb
mov
sarl
xchg
pop
out
fldl
xchg
ja
ds
rcrb
dec
sbb
mov
xchg
flds
data16
scas
adc
xchg
call
jl
je
scas
sub
out
sbb
mov
and
xchg
add
cwtl
jle
scas
es
call
pop
cmp
into
inc
popa
add
mov
out
adc
sub
jp
test
inc
mov
mov
pushf
cmp
lea
inc
xchg
cld
mov
pop
inc
ret
pop
inc
pop
loop
test
cwtl
es
fidivl
mov
xor
movsb
sub
jecxz
push
inc
mov
pop
jb
jb
xchg
cmp
mov
sub
into
jnp
mov
mov
or
sarl
shlb
mov
dec
aam
out
add
gs
cmp
push
sub
pop
stos
xchg
std
xchg
jmp
sbb
cwtl
lcall
rclb
xchg
mulb
mulb
jp
push
inc
mov
shlb
cwtl
xor
test
mov
sbb
sbb
cmp
push
test
mov
or
lods
sbb
dec
dec
fisttps
aas
out
ds
pushw
fists
adc
dec
pushf
fmull
in
mov
sbb
repz
sub
sub
test
daa
jmp
lds
dec
bound
jg
adc
sbb
cmp
pop
cmp
xor
cld
sahf
mov
push
add
dec
lea
xorb
mov
or
scas
and
mov
xlat
in
cmovs
in
mov
mov
add
jmp
cltd
mov
cmp
jp
xchg
scas
stos
mov
fidivl
aad
rclb
insl
out
cli
jb
xor
cmp
in
add
xchg
push
sub
lock
adcl
mov
push
test
xchg
mov
int3
mov
push
inc
mov
test
push
hlt
add
fsubs
adc
sbb
lds
push
in
hlt
mov
dec
bound
cmp
push
mov
lds
test
mov
xor
mov
push
pop
or
jo
xor
lds
daa
adc
or
add
movsl
orb
xchg
in
clc
mov
adc
in
and
lea
popa
jnp
shl
or
fwait
jecxz
addr16
xor
xchg
and
dec
pop
sti
or
jmp
das
roll
mov
fcomps
in
pusha
adc
xchg
add
push
jae
insl
mov
pop
lods
jnp
jmp
cli
je
aas
aas
xchg
fidivl
stos
push
lahf
outsb
mov
sbb
push
xor
cmpsl
lea
int
loope
fbstp
inc
test
push
clc
lahf
cmc
and
adc
into
adc
clc
lahf
dec
and
aas
out
divb
dec
rcrb
nop
and
outsb
and
or
jg
xchg
add
adc
ds
adc
mov
mov
cmpsl
cltd
jb
sbb
xchg
jb
pop
cmp
inc
movsl
xchg
mov
inc
dec
dec
and
xchg
ljmp
sub
fs
lock
sbb
fldenv
jle
lahf
jmp
adc
push
cmc
testl
lods
xlat
adc
stos
in
mov
fs
sbb
or
pop
stos
push
jge
inc
add
loopne
popw
aad
ljmp
mov
mov
inc
fsubp
out
hlt
out
xchg
or
in
jl
push
mov
repz
sti
jle
jle
sub
int
addr16
out
fiaddl
sahf
mov
and
push
mov
lret
aas
ret
pop
lcall
mov
push
jb
mov
scas
das
jo
lret
cmpsb
or
cmp
sub
xor
inc
cmp
xor
add
movsb
and
inc
push
addr16
inc
and
hlt
xor
mov
outsb
repnz
xchg
ficomps
pop
in
jb
mov
cmc
push
jl
clc
lahf
xor
fcmovb
lahf
repnz
scas
enter
mov
in
repnz
scas
lahf
decl
sbb
jne
andb
out
jl
test
mov
lds
and
pusha
pop
inc
movsl
lods
jbe
es
jne
or
add
cli
mov
dec
lock
pop
and
aas
into
mov
pop
adc
pop
cmp
test
out
add
mov
fildl
xor
insl
repnz
lods
outsl
add
imul
adc
lds
cmpsb
shlb
leave
ficomps
inc
sub
mov
bound
xchg
rcr
movsl
test
popa
bound
into
popf
lds
xor
rolb
fbstp
mov
jbe
imul
push
sti
xor
int
jl
clc
aaa
int3
mov
add
sub
adc
dec
jg
daa
pop
sub
imulb
pusha
addr16
loop
incb
ds
pop
add
loop
push
scas
xchg
add
pop
les
dec
fidivrl
mov
sub
movb
cltd
outsl
push
sbb
mov
cmp
jne
xchg
sahf
cwtl
pop
cmp
insl
into
pop
scas
dec
xor
ficompl
dec
ljmp
mov
dec
sub
lds
jbe
jecxz
cmp
add
out
add
or
push
xlat
mov
push
inc
inc
jge
out
inc
pop
inc
mov
mov
lods
loope
mov
scas
or
dec
or
pop
lock
bound
stos
movl
dec
sub
outsl
sti
int
mov
push
jecxz
into
pop
in
jmp
repnz
mov
nop
or
cmpb
inc
mov
mov
ret
sbb
push
and
or
xchg
insl
into
gs
jle
xchg
out
shrl
cmp
lods
push
fstl
mov
arpl
adc
aam
mov
aad
aas
sbb
dec
call
mov
mov
enter
stos
fsubs
push
insl
push
imul
jge
xor
pop
mov
in
aam
lock
push
in
mov
sti
loop
cmp
out
dec
in
mov
shlb
enter
push
xchg
xor
sbbl
ficompl
movsb
std
mov
ljmp
inc
or
push
lock
clc
cmpsb
fistps
fidivrs
xor
or
pusha
or
inc
push
js
js
jl
int
xor
ja
lods
inc
jecxz
js
add
dec
into
lds
add
loopne
dec
test
mov
arpl
sbb
popf
add
movsl
xchg
mov
sub
jno
cmp
push
mov
jae
xor
mov
jp
shlb
adc
inc
aad
mov
sbbb
mov
inc
repnz
arpl
dec
mov
dec
sarb
in
dec
mov
rcl
xor
dec
mov
mov
fadds
enter
jno
cmp
jmp
jl
xchg
jno
ljmp
or
test
pop
iret
shr
mov
or
mov
sbb
inc
imul
lods
and
mov
lock
iret
gs
ja
loope
int3
pop
imul
jno
pop
xlat
push
cmp
dec
loop
xchg
jg
push
xchg
xor
or
pop
aas
push
or
push
xchg
jno
jmp
sbb
lcall
mov
pop
call
cltd
fadds
jno
test
bound
out
xor
sbb
mov
push
aas
repnz
je
into
cmpsb
mov
xchg
repz
cmpsl
cld
stos
shl
jg
xchg
dec
sub
pop
pavgb
lret
sub
dec
les
les
ds
faddl
inc
inc
jl
ret
push
scas
inc
fsubs
add
add
xchg
loop
and
add
sbb
bound
mov
flds
mov
xor
sub
popf
pop
insb
dec
bound
lods
insl
xchg
fimull
push
je
enter
mov
sub
ja
pop
int
out
jmp
pop
lds
insl
das
pushf
aam
dec
imul
cs
leave
cltd
loopne
jmp
mov
inc
mov
stc
imul
ljmp
mov
jge
stos
movsb
sbb
and
dec
imul
jo
add
loopne
mov
mov
in
sub
dec
add
and
xchg
into
movsb
addb
xor
sbb
add
jns
sbb
and
in
stc
cs
push
popf
fsubr
ja
add
mov
data16
mov
mov
ret
mov
cmp
mov
repz
pop
push
cmp
fcmove
je
cmpsl
testb
rcr
xor
movsb
sub
cmp
sahf
mov
jmp
cwtl
xor
stos
repz
rcrb
cld
jg
rorl
jg
movsb
lahf
pop
pop
js
mov
fcoml
clc
sub
pop
or
sbb
dec
mov
xchg
jg
cld
stos
pop
xor
mov
stos
fstps
push
fdivl
dec
std
jg
icebp
pop
test
xor
sbb
pop
pop
fistpll
iret
jl
jmp
sub
push
sub
mov
lods
shll
adc
clc
pop
dec
jne
arpl
and
faddl
pop
mov
jecxz
and
xchg
adc
or
movsb
xor
mov
out
rorb
sbb
loopne
cmpsb
mov
lcall
lds
lcall
mov
jno
dec
add
loop
xor
xchg
jae
and
sub
iret
cmpsl
adc
mov
or
les
or
leave
jns
int
mov
mov
icebp
aam
xchg
xor
push
push
mov
sub
aad
ja
and
and
mov
into
scas
adc
mov
loope
dec
cs
pop
addr16
scas
lcall
test
mov
enter
add
sbb
adc
xor
mov
xlat
sbb
xchg
pop
dec
fists
pop
mov
movsl
test
daa
js
cmpsl
lahf
in
sbb
pop
popf
scas
pop
es
rcll
sbb
aas
pop
jmp
cli
xor
sbb
or
aad
push
aaa
mov
addr16
lods
fdiv
add
or
int
dec
test
lret
add
rep
push
pop
int3
js
sbbb
push
inc
into
pop
jae
push
adc
jg,pt
lock
data16
xchg
xor
jno
dec
pop
cmp
dec
sub
nop
daa
clc
or
inc
pop
mov
int
or
pop
mov
mov
aas
das
imul
sbb
pop
jbe
push
pop
push
adc
outsl
jp
and
push
jno
repz
and
bound
mov
and
scas
pop
scas
pop
xor
test
aad
and
push
es
test
and
mov
jns
into
mov
pop
or
push
and
push
adc
pop
jl
sub
aas
cwtl
repz
pop
cli
sbb
or
xor
pop
mov
xchg
cmpsb
icebp
mov
pop
stos
xchg
jmp
repnz
mov
sbb
mov
mov
mov
je
loope
adc
int3
cwtl
push
push
or
sbb
subb
imul
cltd
push
mov
and
mov
test
adc
cmpsb
xor
cmp
jecxz
dec
or
enter
mov
xchg
inc
sbb
je
jg
pop
xchg
arpl
adc
mov
les
shrb
mov
lcall
gs
pusha
jp
int
shlb
shll
out
out
jne
inc
sbb
push
mov
add
ret
xchg
dec
mov
xchg
mov
jo
mov
jge
dec
or
clc
inc
scas
fildll
stc
inc
dec
mov
jle
mov
inc
xchg
ret
and
cmp
mov
xor
fisubrs
test
mov
mov
mov
pop
enter
mov
sahf
cmp
pop
cld
popa
clc
push
push
dec
call
outsl
mov
or
push
outsl
pushf
lret
jnp
rep
dec
bnd
mov
mov
jne
jg
push
xor
xchg
mov
xchg
mov
js
ja
and
mov
loop
push
cld
cmp
xchg
mov
test
loopne
fstps
adc
fld
in
push
data16
mov
mov
push
ret
out
roll
aad
mov
fchs
cmc
sbbb
push
ret
pop
xchg
jecxz
out
push
adc
mov
jmp
adc
adc
mov
jo
mov
push
adcl
lods
xor
cli
or
orl
aas
enter
jecxz
sbb
fistpl
fs
enter
cmp
mov
fbstp
into
ret
xchg
inc
inc
dec
lods
adc
or
xchg
mov
inc
aas
jle
jmp
push
loop
jl
and
mov
nop
sub
scas
dec
adc
push
cmpsl
int
fs
out
sar
rcll
cmp
or
push
xchg
insb
decb
nop
cmp
ret
jno
neg
xor
test
mov
xchg
fstpl
lock
or
popf
cmpsb
outsl
cwtl
adc
mov
xor
fs
jecxz
out
repnz
cmp
push
and
mov
push
jmp
rcr
lds
dec
add
lcall
push
mov
mov
rcrl
lret
scas
repz
scas
loop
idivb
fmull
jg
std
mov
push
outsb
xchg
sbb
or
cltd
sti
adc
cs
xchg
mov
inc
dec
in
jl
scas
insb
push
cmp
rcrb
cs
xor
add
fisubrs
fwait
outsb
aad
dec
clc
int
std
shl
pop
rcll
outsl
lea
in
pop
adc
cli
dec
test
cwtl
stos
inc
pop
inc
ljmp
mov
xchg
int3
test
adc
mov
repnz
clc
dec
jae
test
fildl
jne
push
or
cltd
sbb
and
xchg
or
popa
repz
aaa
push
cmp
push
xor
into
out
les
jnp
jb
cmp
mov
mov
or
roll
pop
addr16
les
adc
xchg
shrb
jecxz
test
and
jl
cli
cwtl
movsl
sti
in
scas
mov
push
xchg
add
inc
fucomip
fdivs
insb
punpckhwd
mov
xlat
xchg
mov
mov
mov
mov
jne,pn
xor
repz
push
xor
pop
push
or
pop
roll
xor
adc
sbb
add
push
ja
inc
cwtl
or
cltd
lods
pop
outsl
push
pop
mov
xchg
pushf
loop
je
or
mov
lcall
jge
sbb
lock
push
insl
jbe
adc
xchg
lret
jmp
mov
mov
sti
clc
lret
mov
and
sub
mov
cmc
scas
push
aad
out
cmpsl
sbb
cmpsb
adc
sbb
add
add
mov
aad
popa
lret
aas
addr16
jge
and
loopne
jo
inc
mov
pop
push
cmp
cmp
hlt
mov
mov
shl
js
test
mov
pop
insl
inc
push
jmp
dec
xchg
push
xchg
push
cwtl
adc
xchg
push
and
pop
jb
mul
sbb
popf
into
pop
inc
or
cmp
push
mov
test
xchg
popa
dec
mov
lcall
cld
ja
out
sahf
arpl
movb
pop
or
fs
xor
ds
cmp
sub
hlt
scas
arpl
xor
test
add
mov
sbb
and
or
mov
adc
insb
fisubrl
sahf
subl
push
fisttpll
pop
fimuls
out
pushf
push
sub
icebp
sbb
pop
iret
dec
dec
and
pop
xchg
cmpsb
popa
mov
imul
nop
fdivl
mov
cs
test
push
xchg
pushf
mov
gs
hlt
mov
lahf
cli
testl
leave
xlat
pop
cmp
add
and
jle
rclb
add
xchg
fimuls
mov
dec
daa
or
lds
mov
sub
fadds
jne
pop
ret
je
inc
sub
mov
adc
jl
push
inc
cmpsl
call
js
or
mov
sbbb
cli
lea
or
and
adc
fwait
arpl
stc
rcrb
sbb
mov
mov
sbb
out
movntq
adc
cmp
mov
int
pop
pop
xchg
sub
loope
jne
cmp
inc
test
sub
xchg
arpl
stos
mov
push
push
xor
jo
lcall
mov
outsl
dec
add
loopne
pop
pop
mov
pop
cs
jl
in
or
push
dec
lcall
xchg
cli
sub
mov
pop
pop
ret
loope
shrb
adc
fsubrs
fstpt
cmp
call
pop
flds
jle
aam
or
rcrl
testl
lret
xor
mov
mov
push
sub
gs
or
fxtract
xchg
and
fs
fldl
dec
js
iret
stos
xor
inc
shr
cmp
ret
repnz
adc
lock
sbb
xor
ja
sub
fwait
and
icebp
fisubl
loope
sub
stos
test
test
xchg
lods
hlt
sbb
in
popf
xor
out
incl
addl
pop
aam
sbb
pop
xor
stos
add
and
fcoml
mov
sbb
add
push
xlat
adc
or
hlt
jle
xor
mov
mov
or
mul
inc
jp
cmp
int3
mov
mov
cltd
cmp
enter
pop
jp
ljmp
loop
cmp
sub
adcl
xchg
jmp
rolb
pop
call
andl
pop
insl
cmpsl
jecxz
pop
push
test
iret
xor
xchg
insl
sub
testl
pop
js
or
lret
lods
cmpsl
in
sarl
add
dec
orl
dec
pop
and
jp
add
xchg
pop
gs
imul
lds
mov
fs
pop
outsb
and
scas
call
push
aaa
push
mov
out
rol
and
scas
int3
int
xor
mov
fbld
ret
daa
and
dec
sbb
pop
mov
std
sarb
data16
aad
or
sbb
lea
mov
or
mov
cs
outsl
dec
test
sub
test
sub
cmp
mov
leave
xor
dec
outsb
sbb
lcall
test
xchg
jo
iret
sub
lock
frstor
add
mov
inc
pusha
loope
fdivs
xchg
ret
xor
and
jmp
sub
mov
jle
data16
ret
jb
outsl
in
and
dec
xor
dec
test
sahf
xor
jmp
mov
xchg
mov
icebp
jg
dec
xor
xor
int
in
mov
sub
mov
jle
enter
push
out
enter
and
fnstcw
icebp
xorb
sbb
or
or
imul
notb
andl
or
mov
int3
outsl
jecxz
pop
cmp
loopne
push
js
sbb
mov
fiaddl
or
inc
cli
adc
add
hlt
mov
mov
imul
mov
lret
popl
ds
cmp
lret
inc
inc
sbb
or
jns
sub
dec
inc
push
add
pop
bound
jbe
jne
stc
adc
fdivs
add
inc
sbb
or
xchg
or
repnz
mov
fdiv
jecxz
lods
pop
or
and
mov
add
dec
push
add
push
aam
fucomp
in
aas
sarb
aad
daa
xchg
adcl
pop
mov
lcall
stos
jecxz
dec
imul
mov
mov
cli
out
sub
lods
ficomps
pushf
add
nop
or
insl
cmpb
ret
scas
or
jecxz
push
rcr
fcmovnbe
nop
loope
rcrb
cmp
loop
in
pop
fcomi
into
xor
pop
movsl
push
ljmp
inc
push
cmc
or
leave
lcall
xor
dec
test
jbe
sbb
adc
mov
jmp
dec
cmp
enter
fstpl
xchg
sbb
mov
fldt
mov
insl
jne
es
sbb
mov
xchg
sahf
adc
aas
jb
jge
inc
push
dec
push
pop
jg
sub
loopne
sub
jae
sbb
mov
jb
icebp
adc
mov
lea
mov
shlb
mov
hlt
shll
mov
and
jle
out
test
or
andl
push
sub
enter
clc
xor
xor
gs
imul
imul
ds
mov
mov
sti
adc
dec
cld
imul
mov
xchg
movsb
pop
scas
popf
dec
test
pop
nop
pop
xchg
sbb
add
mov
mov
pop
data16
cmp
sbb
pop
aad
aas
mov
fldt
inc
sbb
sbb
xlat
and
testl
mov
mov
jbe
mov
mov
bound
adc
push
lret
sub
sub
mov
jl
icebp
jo
or
mov
mov
jne
je
lahf
or
in
mov
pushf
popa
das
test
data16
cltd
mov
vucomisd
leave
popf
or
jecxz
adc
xchg
out
fsubrl
mov
jmp
das
or
mov
mov
dec
or
into
push
mov
adc
leave
mov
mov
pop
out
in
lea
jmp
sahf
or
jmp
out
stos
fucomip
fldz
jnp
dec
mov
push
ja
nop
out
push
jl
xchg
mov
cmpsb
gs
clc
mov
sarb
mov
mov
aam
sbb
jne
jns
rcrl
or
mov
loope
lock
push
imul
mov
mov
push
sarb
daa
inc
stc
enter
and
xchg
orb
mov
test
jge
cmp
lcall
jb
push
dec
mov
popa
push
xor
shll
ret
icebp
rcrb
insl
mov
lods
jg
mov
mov
popf
sbb
mov
push
push
xchg
popa
imul
enter
ljmp
lahf
mov
fstps
pop
leave
outsb
lret
dec
in
data16
pop
inc
aas
addr16
mov
and
xchg
cmpsb
shrl
jmp
ret
out
mov
dec
jl,pn
enter
adc
lea
push
stos
insb
pop
xor
loop
jae
je
and
dec
xlat
pop
call
fwait
xor
in
dec
insb
inc
jp
test
pop
in
xchg
cli
jo
jge
jmp
sub
shrl
lea
pop
movsl
out
jno
js
aad
mov
cltd
and
push
out
lock
movsl
insb
jmp
adc
xor
push
repz
or
sub
imul
cmp
pop
sub
and
xor
inc
cmp
jg
push
push
push
imulb
ja
addr16
gs
jb
xchg
pop
xchg
adcl
jg
in
pop
repnz
dec
insw
hlt
arpl
or
scas
and
sbbl
jbe
insl
imul
ret
cmpsl
insl
lea
cli
jle
add
xor
lcall
cmpsb
ret
xchg
mov
insb
pop
cmpsb
mov
push
mov
pop
xor
xchg
subl
adc
scas
or
xchg
mov
aad
sbb
pop
in
test
dec
iret
ret
data16
std
mov
popa
xchg
push
sub
adc
lcall
pop
imul
jmp
push
mov
cmp
jno
ds
insl
xor
pop
jmp
data16
xchg
aam
jle
add
dec
xchg
and
or
sub
sub
arpl
pop
mov
push
out
pop
fidivl
sbb
popa
insb
shrl
test
fistps
popf
jg
scas
xchg
aas
mov
mov
xor
jnp
in
mov
mov
testl
in
pushf
cltd
loope,pn
cmp
pop
inc
icebp
lods
jge
lea
stos
in
cmp
push
push
js
mov
jae
mov
and
mov
stos
add
dec
jno
loopne
sub
pushf
gs
movsl
lods
orl
sub
aaa
mov
inc
sbb
or
jmp
int
jl
ss
pop
pop
mov
rorl
push
dec
popf
push
mov
pop
fldt
or
cmpsb
setno
jo
popa
lock
mov
in
sub
xor
sub
cs
cmp
pop
imul
test
mov
mov
add
imul
mov
xorl
faddp
inc
mov
std
testb
cs
mov
stos
push
pop
jno
out
shll
xchg
std
mov
mov
pop
or
adc
js
aam
pop
sub
add
stos
aaa
or
ret
sub
mov
adc
inc
loopne
out
cmp
push
xchg
push
std
mov
leave
xor
je
fidivrl
jno
roll
es
mov
dec
push
aaa
ja
stos
outsb
sub
outsl
outsl
stos
arpl
int3
mov
je
and
sub
jg
sbb
fbstp
and
insb
add
lock
jne
mov
push
lock
nop
mov
das
icebp
icebp
jg
call
imul
inc
mov
addr16
fisttps
aas
or
sub
fbstp
lods
cmpsb
adcl
pop
jno
cmpsb
pushf
xor
xchg
ret
mov
nop
test
add
push
xlat
cmp
adc
addr16
add
cwtl
push
jge
stos
xchg
int3
push
sbb
inc
ljmp
pop
aam
stos
xchg
movsb
shrb
and
in
sbb
js
fdivp
sub
movsl
jmp
xor
pop
rorl
push
std
jg
ja
insl
xor
xor
data16
test
pop
dec
stc
mov
dec
sbb
subl
loop
sahf
lds
dec
orl
lods
and
in
lcall
inc
pop
and
std
dec
mov
fmull
lret
and
lret
xchg
aam
testl
imul
dec
cmc
push
lret
jge
sbb
mov
lret
xchg
jp
stos
xchg
xor
cwtl
test
xor
mov
lds
les
jp
inc
mov
xor
dec
cmpsb
and
sub
xchg
aaa
push
push
inc
cmpsl
xlat
add
mov
add
pop
and
das
mov
daa
push
mov
cltd
push
js
lea
xchg
fmul
mov
ret
fwait
out
jno
ja
fnstcw
mov
xlat
pop
cmpsl
xchg
insb
test
xor
and
fisubl
and
in
addb
in
imul
fiaddl
push
or
push
xor
sbbl
and
insl
add
add
lods
mov
and
inc
psrlw
ret
push
adc
shrb
ljmp
mov
popa
pop
movsb
push
out
sarb
movsl
ds
out
subb
inc
fmull
mov
dec
push
jp
or
xor
and
mov
fcoml
mov
es
mov
faddl
loope
ficompl
shrl
loope
pushf
rolb
scas
jnp
test
cmp
inc
mov
and
movsl
fs
cmpsl
test
jl
cmp
inc
ss
cltd
shll
or
and
lea
jae
scas
lds
aad
aam
jno
ret
sub
pushf
or
xchg
mov
test
pop
nop
adc
outsb
sbb
pushf
test
mov
xchg
xchg
adc
cs
push
jbe
fdivs
jmp
shr
jnp
out
mov
fst
mov
aaa
mov
ret
notb
pop
mov
push
ror
fwait
imul
in
loopne
mov
mov
pop
out
jp
sub
fiaddl
bound
sub
sbb
repnz
sbb
fs
adc
lds
xchg
bound
mov
fadds
sub
jno
sarl
xchg
add
pop
pusha
loop
rclb
ret
mov
fists
stc
push
cmp
lcall
jno
pop
or
sub
cmp
cmp
pop
pop
and
mov
nop
mov
or
or
cli
pop
push
gs
addr16
outsb
inc
cs
movl
popl
js
lds
inc
pusha
mov
xchg
xchg
and
mov
imul
aaa
xchg
push
and
lock
aaa
xorl
fnstsw
xor
lds
add
inc
incl
inc
lret
xlat
or
clc
cli
sub
xor
cmp
jmp
push
jp
jle
and
mov
js
sbb
jnp
dec
lahf
cld
lods
dec
insl
clc
lcall
xchg
shlb
lods
arpl
mov
pop
addb
shr
mov
icebp
sahf
sub
test
pop
ret
cmc
std
lea
xchg
cld
shl
mov
iret
xor
xor
mov
inc
inc
or
push
jge
mov
xchg
in
push
sub
fstpl
lock
and
mov
adc
cmp
xor
std
xlat
add
and
loopne,pn
scas
fisttps
mov
cmpsl
fnstenv
nop
xchg
jnp
xchg
push
out
and
repz
mov
and
or
sarl
sub
cmp
cli
cld
and
shl
sub
sahf
or
jmp
fdivr
sar
outsb
mov
les
pop
lds
jnp
lds
mov
movsb
fimuls
out
scas
sub
aaa
cmp
push
popa
lret
jg
or
mov
in
movsb
movsl
cmp
push
jp
in
lods
mov
sbb
mov
in
push
mov
xchg
and
xorl
movsl
orb
lcall
sti
xchg
es
add
fnstsw
mov
bound
or
arpl
jo
rcr
addr16
inc
imul
stos
xchg
sub
sub
mov
fwait
repnz
fucom
scas
mov
sbb
and
int
sbb
inc
iret
cmp
fcoml
ljmp
mov
cmp
aam
lods
es
jo
sbb
rorb
or
scas
xor
dec
mov
mov
inc
movsl
pushw
jp
mov
adc
and
mov
jae
adc
pop
mov
fnstsw
adc
sub
addr16
add
sub
jne
push
popa
dec
cwtl
mov
fimull
and
pop
movsl
or
movsl
and
faddl
adc
sbb
adc
dec
cmpsb
pop
sub
xchg
push
xchg
scas
push
scas
sub
pop
pop
push
outsl
shlb
fbld
cmpsl
pop
jle
mov
test
and
adc
mov
mov
inc
mov
and
sbb
add
fucom
mov
and
push
loopne
inc
andb
dec
negl
mov
xor
out
ds
sarb
cmpsl
cltd
xor
lea
and
jmp
sub
mov
repz
divl
add
cmp
adc
and
fstl
adc
push
or
inc
push
or
push
nop
mov
aaa
icebp
into
xor
std
iret
pop
sub
dec
movsl
xchg
jbe
inc
lods
je
lods
push
sbb
clc
cmp
mov
jo
and
dec
cmp
adc
cld
push
aad
cld
jg
in
adc
pusha
andl
inc
orb
dec
mov
xchg
pop
mov
push
mov
movsl
pop
and
sub
mov
icebp
sbb
dec
ret
jle
jns
movsl
add
jmp
pop
mov
jnp
cli
sbbl
xor
xor
push
jne
loopne
xchg
test
jae
out
push
mov
pop
adc
push
cli
es
in
adc
adc
aas
sbb
bnd
cs
ret
jb
adc
mov
inc
data16
inc
lods
push
inc
sub
or
mov
std
fcos
es
cmp
push
addr16
int3
int3
cmc
test
pop
in
mov
sub
mov
dec
xchg
dec
dec
or
xor
aam
frstor
xchg
lahf
movb
mov
add
pop
and
pushf
xchg
mov
bound
cmp
lds
orl
mov
cs
cmp
mov
push
cld
jno
push
jle
mov
dec
rcl
es
cltd
push
enter
cwtl
out
and
sahf
cmp
mov
ret
xor
cmp
sub
xor
adc
insl
jbe
ljmp
int3
mov
push
adc
sbb
enter
scas
xchg
loop
loopne
jmp
xchg
subb
push
dec
xchg
or
outsb
fnsave
in
loopne
hlt
loop
mov
xchg
jnp
push
clc
pop
jnp
pop
mov
jno
pop
dec
pop
dec
ja
mov
mov
dec
in
push
movsb
sbb
jle
push
add
xlat
sbb
roll
cmp
dec
leave
fwait
clc
faddp
xor
cli
mov
mov
hlt
mov
fistps
aaa
ss
dec
scas
dec
sbb
xadd
mov
push
xor
dec
iret
pop
outsb
jl
in
and
imul
ljmp
sahf
cld
or
push
lret
mov
dec
jl
test
dec
out
jae
pop
daa
mov
loope,pn
clc
mov
xlat
out
rcl
popa
jmp
in
imul
cmpb
test
es
js
and
mov
inc
jge
jnp
aaa
test
sbb
fcmovnu
lods
push
les
inc
push
fsubl
inc
bound
push
popa
sub
lods
adc
sbbl
jbe
lret
rcl
subl
jb
ss
mov
data16
push
mov
xor
cmp
sub
mull
add
iret
imul
enter
icebp
jns
stos
mov
pop
stos
pop
sub
inc
xcrypt-ecb
cmpsl
lea
dec
cmp
test
call
ret
push
jo
pop
inc
inc
xor
mov
xchg
imul
shll
loop
test
imul
ss
jns
cld
xchg
mov
lods
jbe
das
adc
mov
dec
sbb
fnstenv
mov
inc
mov
fnstenv
and
jge
fwait
xor
cmp
sub
sar
jbe
repz
push
mov
and
mov
cld
sub
and
push
std
cmc
sub
jge
sbb
cmp
ss
mov
aad
cld
enter
movsb
aaa
inc
push
dec
imul
imul
insb
loopne
arpl
and
fldcw
lret
test
sbb
adc
movsb
sbb
inc
es
push
cmp
xchg
mov
dec
sbb
jbe
mov
push
shlb
pop
inc
int
jbe
add
jb
xor
mov
test
das
cli
rclb
mov
outsb
call
xchg
clc
add
push
push
push
or
inc
mov
inc
pop
mov
fbld
pop
xor
add
les
xchg
adc
call
or
jb
push
sbb
cmp
mov
adc
stos
das
mov
dec
adcl
stc
loope
push
gs
sbb
ljmp
sbb
push
idivl
sbb
xchg
pop
jnp
pop
popf
mov
out
sub
cmp
pop
sub
jle
insb
out
shlb
insb
and
sti
imul
out
enter
mov
and
arpl
jbe
sub
dec
xorb
ja
cltd
lds
mov
out
data16
fldl
cmpsl
and
dec
cmp
hlt
pop
xor
push
push
add
daa
arpl
add
xor
sbb
add
outsl
mov
aad
in
jle
cli
inc
xchg
int3
or
ljmp
push
add
pop
dec
jo
mov
dec
in
sbb
fcoml
movsb
push
xchg
test
adcl
or
shr
push
mov
and
cmp
lds
adc
push
in
jnp
or
ss
jp
fmulp
xchg
and
lcall
add
ret
out
sub
pop
gs
gs
rcl
add
and
pop
adc
cltd
lret
fwait
test
repnz
mov
jbe
mov
rcrl
pop
popl
xchg
aas
pop
ljmp
inc
psubd
jg
or
push
mov
inc
jmp
jecxz
clc
add
add
out
mov
push
bound
ds
sub
push
les
xchg
rorb
pop
sarb
cmp
or
fwait
dec
mov
pop
nop
mov
xchg
gs
or
fnstsw
je
sahf
loopne
std
pop
mov
stos
push
add
jnp
ficoml
xchg
stc
xchg
or
aaa
jb
icebp
js
lcall
ffreep
loopne
inc
lods
popa
cmc
and
sub
mov
xchg
push
adc
pop
mov
xor
aaa
fwait
clc
pop
jle
imul
sub
sub
lret
pop
xchg
sarl
lahf
dec
jns
jo
xchg
aam
popa
mov
and
fldt
icebp
in
rcrl
inc
pop
mov
jle
jge
mov
push
sbb
daa
dec
mov
or
fimuls
or
or
xor
jbe
xor
and
repnz
test
xchg
cmc
push
cmp
lret
xor
lret
loope
xchg
or
xlat
jge
adc
or
nop
cmpsb
out
cmp
mov
add
xor
test
mov
jle
rcrl
popf
fiadds
mov
mov
enter
sahf
into
bound
outsb
std
dec
add
test
jbe
sbb
std
in
push
push
repz
and
adc
mov
fldenv
jnp
imul
pop
push
icebp
inc
fdivr
adc
xchg
fnstcw
cmp
push
nop
fmuls
or
push
pop
dec
hlt
cs
loopne
add
cmp
iret
jo
divb
jg
inc
fisttpll
adc
push
mov
add
aam
sbb
imul
xchg
jb
fsubrs
push
jge
loopne
inc
inc
inc
dec
out
push
fisttps
lret
movsl
mov
cmp
mov
cmp
mov
mov
cmpl
xor
shrl
out
arpl
iret
cmp
adc
mov
adc
daa
lods
sbb
imul
jle
sti
es
push
dec
xor
mov
push
or
fs
adc
test
das
add
and
jbe
adc
cmc
gs
mov
xor
ss
les
addr16
adc
xor
mov
mov
rcrl
movsb
push
jb
pop
mov
fnstcw
jmp
test
dec
fsub
loopne
push
cld
aad
ret
jae
adcl
push
std
pop
sahf
or
orb
and
pusha
psubsw
shl
mov
jae
mov
add
fiadds
clc
push
push
or
cltd
mov
mov
test
cmp
or
mov
mov
out
es
scas
fstpl
frstor
fwait
mov
bnd
cli
and
jle
xchg
dec
mov
jae
aaa
cmp
sub
add
mov
sbb
popa
aam
and
mov
adc
xor
aam
rorl
lea
pop
lods
xchg
dec
ret
cmc
ljmp
add
daa
cwtl
or
add
insl
cltd
xchg
push
pop
ljmp
mov
jp
repnz
jecxz
out
cmpsb
inc
push
inc
mulb
adc
lods
movsl
leave
cli
or
xchg
pop
mov
out
jo
sbb
pop
mov
lock
adc
fnsave
popf
int
push
sbb
jl
aad
pop
mov
xlat
or
bnd
dec
pushf
pop
cmp
scas
or
dec
pop
mov
push
dec
fwait
scas
push
cmpsl
jecxz
mov
push
adc
cmc
clc
dec
inc
jl
pusha
sarb
cmp
lret
inc
cltd
popf
jmp
shll
bound
push
clc
outsl
pushf
outsb
mov
lcall
je
xchg
mov
adc
aas
sbb
cli
ja
popl
dec
je
mov
inc
sub
test
mov
mov
icebp
or
loop
cmp
call
pop
lcall
inc
cmpsb
mov
ljmp
xchg
mov
mov
push
jecxz
mov
sub
xchg
sub
and
das
ds
dec
xor
loopne
jnp
pop
sub
test
imul
mov
xchg
scas
outsl
pop
cltd
fwait
stos
test
shrl
aam
cld
xor
sub
cwtl
pushf
xchg
incl
pop
pusha
xchg
mov
mov
out
int
shrb
xchg
xchg
add
jbe
lret
and
xchg
repz
iret
dec
jl
addr16
sub
jmp
mov
mov
test
cwtl
cmc
ja
add
xor
mov
in
xchg
jle
mov
cmp
push
fbld
cs
mov
jmp
outsb
test
ja
shlb
fcoms
fcoml
mov
jno
sarl
repnz
int3
call
push
test
sarb
dec
push
aas
sub
xchg
and
xor
sub
push
es
sub
cmc
rcll
fxch
xor
test
jnp
add
push
dec
jecxz
and
xchg
sub
add
lret
xchg
xorb
fcmovbe
xchg
bound
dec
ret
pop
or
jo
add
adc
test
inc
mov
fcoms
js
sbb
lahf
int3
test
add
jmp
mov
or
push
jge
add
cmpsl
imul
or
iret
xchg
sbb
mov
mov
push
sbb
sbb
aam
pop
and
aam
lahf
fstps
or
in
sti
and
movsb
in
or
repz
cmp
je
mov
test
gs
pop
aad
test
add
stc
in
shll
jae
lret
neg
pop
je
mov
mov
push
push
mov
and
into
pop
bnd
mov
je
cli
xchg
mov
je
inc
jb
dec
testb
lods
mov
mov
movsl
mov
push
or
aas
call
xor
sbbb
xor
mov
je
ds
inc
sub
out
andb
iret
cmp
iret
cmp
call
dec
mov
push
mov
ret
xchg
adc
mov
sahf
xlat
ficompl
jecxz
fildll
inc
push
sti
enter
cmp
imul
xor
mov
pop
lock
fsubrs
mov
sub
lods
fsincos
cmp
inc
ljmp
scas
cmp
jg
aam
scas
jmp
loop
pop
je
xor
push
sub
hlt
pop
dec
mov
cmc
mov
sbb
notb
das
icebp
or
and
in
outsl
cld
mov
xchg
int
mov
stos
lret
and
push
stos
ja
popf
sub
fcomi
pusha
fists
inc
cli
push
repz
inc
out
cs
ja
ss
inc
lock
mov
jle
cmp
int
shlb
sbb
lea
out
push
fisubs
push
or
xchg
sub
jne
aas
add
sub
jbe
mov
and
aas
ljmp
stc
sti
lret
ficomps
rcl
sub
xchg
aad
sti
int
jo
adc
and
mov
jb
insb
test
lahf
ret
cmp
stc
cltd
mov
xor
jle
mov
and
jbe
mov
and
dec
ljmp
fsts
popf
xchg
or
addr16
ror
iret
push
jae
and
shll
lcall
out
out
and
test
cmc
imul
outsl
dec
mov
movsl
icebp
leave
or
push
cmp
sbb
mov
dec
cmp
loope
push
sbb
xor
adc
xchg
and
cmpsb
mov
inc
outsl
sbb
jae
sar
push
mov
jmp
push
mov
pop
pop
fdivrl
cwtl
enter
adc
mov
jge
loope
in
cld
push
ret
sti
xchg
mov
hlt
sub
ss
mov
push
pop
test
xor
pop
inc
jo
mov
test
push
mov
fdivrs
sbb
leave
cltd
and
std
sub
mov
pop
movsb
mov
xor
and
ret
cwtl
mov
jmp
pop
imul
jmp
dec
jl
push
rclb
in
lret
cmc
call
fbld
fnstenv
scas
dec
outsb
insb
outsl
ret
adc
stos
fs
or
ja
bswap
ss
and
in
js
cli
dec
je
enter
mov
gs
jge
mov
inc
xchg
test
dec
push
out
xor
push
mov
std
stc
rcl
int3
sub
fisubrl
pop
jnp
cmpsb
addr16
add
mov
scas
pop
jno
push
inc
loop
and
dec
mov
out
cmc
inc
xchg
scas
push
sub
jbe
jno
or
adc
xor
in
repz
inc
fs
call
scas
xchg
add
adc
push
mov
xchg
push
test
push
cli
jecxz
fnstsw
fcmovbe
out
psrad
sbb
scas
cld
lahf
imul
pop
hlt
pop
lods
das
sarb
testb
jnp
xor
xchg
stos
movsb
cmp
ds
xchg
jmp
test
jle
je
cmp
xchg
loopne
into
and
not
subl
cmp
pop
push
into
lock
jae
xchg
jmp
cmc
pop
push
jl,pn
test
int3
fiadds
negl
fwait
test
lds
pop
sbb
enter
int3
mov
sbb
nop
mov
sti
xor
mov
push
jg
lock
rclb
lock
bound
mov
mov
pop
pop
mov
in
push
insl
jne
maxps
and
mov
cmp
lcall
ds
int3
addr16
out
jb
push
je
mov
cmc
add
test
pop
adc
fisttpll
adc
push
and
mov
cmpl
push
mov
lea
das
je
pop
test
add
lds
jae
push
cwtl
pop
xchg
cs
or
aam
mov
test
test
sub
outsl
addr16
int
idivb
sahf
fwait
sbbl
icebp
adc
cmp
bound
stc
leave
out
sub
fimull
or
loope
js
jae
inc
rorl
mov
cmc
push
jae
mov
rolb
add
lret
insb
mov
mov
addl
pop
pop
out
stc
test
mov
lock
xchg
sub
std
cmp
push
jecxz
jmp
mov
ret
pop
ret
out
pop
push
mov
pop
mov
xchg
fneni(8087
test
push
pop
push
push
cmp
mov
pusha
in
inc
xor
cmc
jmp
pop
or
jne
add
mov
mov
and
inc
lahf
sub
lea
testb
mov
adc
cmp
imul
pushf
push
cmc
and
jb
or
add
add
iret
ffreep
sub
mov
inc
loopne
or
add
test
cmp
je
lea
sub
lods
push
add
aas
cld
lods
int
cs
and
mov
mov
mov
cmpsb
sbb
rolb
scas
sub
stos
std
fdiv
imul
push
add
adc
xor
xor
jmp
cltd
push
push
mov
in
loopne
fwait
aaa
cmp
pop
mov
and
clc
js
addl
das
aad
mov
jl
sbb
in
cmpsb
cltd
lret
jle
mov
cmp
mov
dec
jecxz
test
fwait
pop
cmp
jbe
mov
sbb
sub
ss
jns
cmpsb
insb
rolb
mov
cmc
xchg
mov
aas
sbb
cmpsb
test
inc
add
mov
cmp
push
jge
repnz
cld
add
lahf
int
xchg
es
aas
cld
ffree
aaa
popa
jge
clc
push
and
push
stos
cmp
inc
xor
sub
cmp
bnd
pop
arpl
pop
push
xor
leave
inc
movsb
mov
jne
dec
dec
sub
cld
mov
push
stos
push
aas
mov
ret
stos
std
jmp
pmuludq
into
dec
shlb
dec
andl
je
push
xchg
dec
loop
sti
pop
inc
shr
add
cmp
rorl
jecxz
dec
xchg
xor
jbe
scas
adc
fisubs
mov
in
rcpps
mov
in
pop
shrl
in
popa
push
mov
in
xchg
jge
sbb
jg
sbb
push
test
out
inc
sub
pop
popf
cld
insl
inc
lea
out
jae
and
xorl
negb
scas
scas
mov
lret
xor
pop
stos
pop
lods
test
adc
mov
xor
in
sub
cmp
ds
test
push
push
and
or
push
jmp
rol
addr16
dec
jns
inc
fsubr
ja
jnp
loopne
mov
jg
and
xor
and
cmp
iret
sbb
pushf
test
mov
cwtl
cmp
add
pop
jno
xor
jne
jmp
or
sub
scas
mull
xchg
fcoml
cld
and
pop
sbb
jecxz
adc
pushf
das
je
xlat
cmc
shll
pop
arpl
mov
stos
pop
push
adc
shrb
incl
test
fmulp
fstpl
setb
mov
dec
pop
ret
stos
ret
xor
xor
and
pop
insb
fldenv
jns
shrb
jg
cs
sti
sti
mov
hlt
daa
jp
jp
leave
sub
or
out
jno
les
inc
movsl
dec
mov
jb
mov
sub
jg
or
movntps
adc
pop
bound
shll
fsubrs
cmp
lahf
ret
sti
notb
add
out
aas
sub
jmp
xchg
int3
mov
fildll
pop
insb
lds
insb
pusha
fisttpll
stos
mov
cmpsb
stos
rorl
mov
ja
xor
dec
stos
outsl
xor
ja
dec
bound
xor
rcrl
in
mov
xor
scas
mov
fisttps
mov
js
mov
outsb
jecxz
adc
mov
bound
and
std
repnz
adc
mov
outsl
push
adc
push
mov
sbb
dec
push
int3
jnp
adc
aam
scas
psubusb
lret
mov
fwait
je
cwtl
dec
push
mov
pop
arpl
enter
aam
in
mov
mov
pop
xchg
and
fiaddl
faddl
lock
fisttpll
xchg
call
stc
mov
in
in
xor
adc
addr16
popa
jge
xchg
ret
scas
cmp
dec
mov
jle
jb
dec
sar
inc
cmp
jmp
int3
das
xor
into
mov
jg
out
sbb
xchg
pop
adc
std
push
lods
pushf
jb
xor
imul
hlt
jbe
mov
xlat
mov
inc
adc
push
push
push
mov
in
add
dec
inc
mov
sahf
or
sbb
mov
pop
pushf
loope
leave
or
adc
cmp
pop
sahf
aam
dec
out
add
cmp
sbb
hlt
movsl
sub
or
xchg
add
out
enter
aad
add
push
cmc
push
sub
pop
xor
nop
cmp
enter
and
pop
sub
icebp
jo
repnz
int3
add
sub
je
ret
xor
cmc
sub
loopne
mov
pop
mov
repz
add
fisttpl
sub
ficompl
sbbl
mov
or
neg
icebp
xor
aaa
lods
pop
xor
shl
ds
push
xchg
jmp
jg
pop
in
xor
mov
cmp
daa
pop
std
stos
imul
push
fdivrp
fldl
shrb
or
jmp
shrb
pop
inc
fbstp
sbb
inc
jne
adc
fnop
rcr
adc
sbb
gs
outsb
cli
fcoms
loope
cvtps2pi
jne
push
mov
iret
xchg
xchg
xorb
mov
int3
cld
shrb
sub
dec
push
pusha
mov
pop
pop
adc
dec
rorl
ret
ret
xor
inc
xchg
lcall
repz
jp
and
sub
jg
jno
iret
jp
shr
xor
sti
or
mov
adc
jl
and
in
lea
mov
pusha
mov
fcmovnbe
sahf
lea
cmp
into
call
mov
and
cli
cltd
jecxz
pusha
jb
stc
fs
cmp
cmpb
js
push
dec
hlt
jg
add
mov
in
cli
out
mov
jnp
jmp
lods
das
inc
and
mov
jno
push
fcmovnbe
xchg
sub
jmp
adc
sti
int
sbb
stos
adc
addl
pop
xchg
mov
mov
outsb
fmull
dec
mov
xchg
mov
sub
call
xorb
and
push
push
movsl
test
jp
call
stos
ja
mov
call
jae
int3
xchg
cmp
or
and
test
cmp
and
push
xor
jmp
icebp
inc
jmp
adc
xor
mov
dec
cmp
fildll
xchg
push
push
mov
cmc
adcl
mov
inc
repnz
loop
cmc
adc
in
jno
addr16
push
pop
add
notl
movq
leave
xor
addb
mov
sbb
and
aam
push
push
push
or
movsb
scas
dec
adc
fnstsw
ja
test
insb
leave
pop
or
lcall
inc
mov
cmp
nop
jge
inc
xlat
fmul
shrb
lret
mov
dec
jbe
dec
mov
rcrl
inc
fidivrl
xor
movl
mov
sub
aaa
int3
mov
jge
rcr
mov
cld
inc
fsts
dec
cmc
jae
lahf
jb
and
xchg
mov
pop
imull
xor
fidivrl
movsl
xchg
pop
pop
push
or
cli
push
jae
mov
xor
lcall
and
mov
ljmp
xor
pop
mov
repnz
insl
pop
out
ja
dec
and
add
mov
aas
and
add
dec
jne
cmp
icebp
aad
and
data16
lcall
test
mov
mov
imul
out
jne
mov
mov
sbb
sub
in
mov
jbe
mov
into
aaa
popa
pop
pop
xchg
sbb
dec
and
xchg
stc
dec
lret
in
fs
int
fldcw
sub
or
xchg
es
rol
add
mov
xor
call
mov
leave
mov
jl
clc
jne
lods
movsb
lcall
mov
ja
ret
scas
pusha
call
inc
jle
add
out
dec
jo
jmp
mov
lcall
outsb
imul
jne
into
fnstenv
jae
push
dec
xchg
jp
sub
test
out
mov
jo
ja
sbbb
and
fwait
cmp
xchg
fs
test
mov
movsl
mov
cmpb
jl
xchg
dec
xor
cmp
push
xchg
sub
loop
and
sub
fprem
lret
mov
aad
cmp
sbb
mov
leave
lcall
lret
mov
test
add
out
bound
or
pop
loop
dec
aas
push
mov
sub
pushf
icebp
outsb
inc
and
dec
jle
or
cmpsb
test
out
and
jge
int3
nop
mov
xchg
xchg
outsb
push
mov
test
test
push
mov
adc
xor
mov
out
movl
sbb
daa
std
call
imul
mov
add
pop
xor
lahf
dec
or
mov
jge
aad
xor
sbb
rorl
incb
fldcw
out
dec
clc
push
and
adc
roll
faddl
or
xor
jmp
stos
dec
mov
sbb
mov
test
jns
and
mov
ret
test
mov
stos
ror
push
sub
mov
push
cmp
jno
test
in
das
mov
jl
cltd
xlat
xor
mov
xchg
cmp
test
xor
stos
and
jae
test
mov
shlb
fwait
add
mov
jmp
lret
jno
dec
jecxz
cld
adc
into
pushf
stos
push
sti
sub
rorb
jp
xchg
fcomps
dec
mov
movsl
fldenv
pop
xor
push
sub
loopne
or
in
mov
clc
jae
ficoml
dec
inc
pop
ds
jbe
mov
mov
call
test
lea
sub
cltd
inc
mov
dec
icebp
sub
das
push
stos
mov
xchg
pop
jbe
cs
loopne
xchg
sti
xchg
xor
push
jno
xchg
adc
mov
xor
scas
movsl
pop
mov
fisttpll
mov
in
rolb
shll
cmpsb
push
rcll
lods
cli
mov
sub
lock
clc
dec
popa
pop
xlat
test
xorl
scas
lds
test
mov
cmpsb
mov
pop
ja
cmp
fs
clc
or
fstps
dec
scas
rorb
pop
push
mov
sti
cs
leave
jle
cld
test
aad
movsb
in
add
xor
push
gs
inc
in
jne
push
in
popf
dec
test
insl
jmp
in
jl
out
jo
sbb
xchg
xor
sub
mov
movsl
mov
lret
nop
inc
cmpsb
icebp
mov
outsb
push
mov
lods
repz
insb
sbb
repnz
imul
dec
sarb
mov
push
fstpl
int3
sbb
or
pop
fisttpll
add
movsl
fidivrl
cmp
fimuls
andb
clc
dec
mov
push
aam
stc
pop
cmp
xchg
dec
popf
xor
sbb
sub
loop
lock
in
and
int3
js
or
dec
fnstenv
and
in
push
ss
andb
rorb
add
in
inc
mov
mov
inc
into
repnz
cmpsl
ficoms
pop
sahf
insl
add
adc
aam
stos
andl
in
outsl
lock
rorb
dec
cmp
sbb
ds
mov
loop
popa
popa
popf
imul
mov
dec
shll
xor
xor
xor
mov
pop
fsts
je
or
sub
lds
out
mov
jg
pop
add
pop
mov
imul
sbb
push
hlt
filds
pop
mov
gs
into
pop
inc
stc
scas
jecxz
cld
mov
mov
aaa
push
fdivl
or
xchg
xchg
imul
jbe
xlat
cld
add
shrl
cmpsl
push
push
iret
pop
les
fwait
scas
notb
sub
and
mov
xchg
pop
daa
sub
insb
rclb
sub
popf
int3
push
pop
add
rorb
fs
jmp
imul
mov
jecxz
jge
enter
mov
ljmp
add
sbb
insl
mov
arpl
int
imul
in
push
adc
mov
popf
xor
enter
sbb
xchg
push
jb
les
ja
aam
cmc
out
sub
rol
mov
jecxz
aad
cmpl
mov
cmp
cwtl
test
aaa
enter
pop
ljmp
je
lahf
cmp
hlt
enter
push
test
ror
cmp
mov
push
movd
adc
cmpsb
mov
sub
xor
xchg
mov
pusha
loop
sarb
pop
mov
and
pusha
pop
outsl
sti
fsubp
insl
repz
add
mov
xlat
in
and
push
popl
and
push
fsubrl
xlat
ds
pop
enter
and
cmpsb
sub
add
mov
gs
xchg
adc
pop
sbb
shll
lret
mov
inc
cmc
sub
jmp
das
in
mov
xor
xlat
lods
xor
adc
xor
int
mov
inc
ja
or
pop
pop
mov
leave
insb
loope
cs
xor
cltd
xchg
faddl
sbb
aam
mov
mov
out
push
sub
mov
mov
mov
mov
movsl
xor
ds
push
sub
sub
test
xchg
lret
cmp
sub
fstpl
aaa
jno
iret
lret
mov
sub
adc
add
es
push
movsl
cmp
test
jae
aam
push
lret
fistps
dec
pop
dec
js
stos
ljmp
loopne
dec
cmp
loope
mov
in
lahf
mov
pop
sti
leave
inc
mov
sti
sbb
mov
and
imul
and
dec
cs
imul
lods
rcr
cmp
lahf
or
sbb
shl
fnstcw
mov
sbb
push
mov
inc
mov
loopne
mov
sub
pop
outsb
push
push
mov
mov
pop
jl
mov
lds
fildl
cmc
enter
shrl
mov
and
push
out
pop
and
enter
pop
pop
and
xor
xchg
push
xor
sbb
mov
stc
lds
pop
mov
ficomps
or
mov
leave
mov
test
in
xor
jmp
enter
and
adc
mov
cli
fwait
pop
or
in
ss
outsl
cmp
fildll
sahf
fwait
jge
push
fimull
pop
sub
scas
or
cmc
add
push
inc
lret
int
shll
iret
mov
movsl
inc
jge
lds
aad
shll
fdiv
imul
orl
rcrl
pop
dec
jne
push
and
lods
sbb
inc
and
dec
aam
push
or
shl
cmc
add
call
out
test
pushf
mov
aas
icebp
insb
data16
sub
pop
xchg
xchg
jae
jae
in
xor
dec
sub
cmp
xor
mov
cmpl
ret
cmc
push
push
dec
mov
shl
adc
mov
or
and
mov
jle
lret
and
add
ljmp
push
jo
sahf
shrl
shrb
in
hlt
xchg
cwtl
into
cmp
arpl
xor
or
mov
sarb
into
test
out
jo
rep
mov
fcmovnb
push
add
mov
ret
xlat
clc
ret
ret
pop
rcll
repz
ret
imul
push
insb
xor
pop
std
push
adc
xor
xchg
ret
pop
jno
cmpsb
xchg
adc
pusha
jb
cld
fnstenv
popa
mov
sub
jnp
outsb
arpl
shrl
loop
and
mov
or
dec
xor
add
xor
push
icebp
movsb
ss
iret
out
mov
loopne
into
shl
mov
fsubr
pop
push
adc
dec
inc
add
xor
pop
movsl
nop
je
add
mov
jle
jl
mov
mov
movl
cmpsl
jae
push
shr
jp
bound
ja
xchg
pusha
cmp
iret
mov
test
in
fs
das
mov
nopl
sub
aaa
mov
nop
je
push
shll
in
cltd
int3
sbb
or
inc
dec
ret
or
insl
lret
outsl
mov
stc
scas
les
sahf
sbb
rorl
scas
and
stos
imul
add
idivl
in
xor
sbb
mov
jg
pop
push
pop
sahf
dec
push
mov
xorl
adc
mov
outsl
ret
push
das
idiv
mov
popf
and
jl
imul
ret
rcl
loop
lods
movsb
scas
je
dec
fisubl
xorb
xor
mov
cld
cmp
rolb
repz
shrl
and
cld
mov
decl
ret
test
jmp
loopne
mov
cmpl
mov
inc
and
ja
jmp
movsl
sbb
mov
or
cmp
adc
mov
movsl
sub
sti
xlat
jne
xchg
aaa
sbb
scas
mov
mov
out
and
xchg
test
popl
inc
xchg
stc
mov
ss
pop
test
rcll
scas
pusha
dec
pop
add
shl
jne
jns
imul
push
loope
mov
aas
pop
in
xchg
das
or
andb
lds
orl
aam
push
popa
dec
xor
sbb
testl
jno
test
xchg
mov
mov
cmp
sub
in
xchg
xor
inc
push
sbb
jl
and
push
xor
mov
jecxz
jo
out
dec
ja
cmp
lret
jmp
fistps
mov
xchg
pop
repz
rclb
data16
nop
lods
dec
fidivs
gs
xor
jo
ljmp
pushf
pop
push
jg
out
fisubl
add
nop
rolb
lcall
das
test
cld
xor
cwtl
push
addr16
push
xchg
jmp
jae
inc
cli
nop
ss
push
sarl
insb
jg
jne
mov
cmp
pop
je
je
popa
mov
test
lret
mov
test
cmp
mov
iret
gs
jo
adc
loope
outsb
or
cltd
out
shll
mov
mov
repz
jecxz
fwait
push
fmul
cs
clc
jl
or
stos
fs
dec
adcb
push
cmpsl
stc
and
pushf
sub
mov
xor
pop
mov
mov
inc
lds
sub
push
dec
pop
adc
jmp
jbe
push
mov
jbe
cs
test
mov
jns
in
push
xchg
sbb
pop
cwtl
into
mov
jbe
dec
xchg
hlt
jo
loop
lcall
jo
push
pop
cwtd
fmull
push
cli
dec
lock
or
push
xor
mov
fcomi
or
sbb
int
and
push
and
sub
pop
mov
por
mov
sahf
int
std
js
inc
jo
lods
js
xchg
cmp
push
stos
lret
lcall
je
jle
imul
push
sbb
mov
ret
scas
xchg
sub
pop
jp
add
mov
add
pusha
dec
inc
jecxz
outsl
inc
stc
inc
ss
mov
mov
scas
outsl
hlt
test
lods
inc
mov
xor
iret
sbb
mov
movsb
mov
xchg
mov
push
loope
sbb
fsubr
jle
mov
mov
xchg
jne
lods
mov
mov
out
aad
pop
fimull
or
jle
notrack
enter
cmp
ret
sub
fst
xchg
or
lds
sub
outsl
dec
subl
aam
imul
xchg
xchg
inc
pop
and
and
into
fst
test
repnz
mov
ja
jle
clc
xchg
repz
jg
ljmp
dec
arpl
shlb
popa
inc
shll
aas
out
add
xchg
pop
aaa
into
dec
cmpsb
add
nop
sub
mov
push
xchg
cmp
lahf
jo
sub
mov
fldt
push
orb
push
dec
fisttpl
ja
dec
lock
mov
shlb
fs
ret
xchg
jno
mov
mov
push
loope
xlat
pop
or
or
pop
push
lcall
ljmp
pop
test
mov
push
mov
loop
jle
xchg
push
mov
xor
ret
out
mov
cmp
jmp
cli
fbstp
imul
mov
push
and
lods
xor
cld
mov
and
pop
add
jnp
and
jnp
cmp
push
or
add
and
test
cmc
mov
andl
jmp
inc
inc
push
dec
idiv
mov
and
xor
sub
xchg
in
arpl
and
jns
cmp
pop
sbb
lcall
pop
inc
push
sub
and
dec
inc
sub
sub
nop
fstpl
xchg
adc
mov
lock
and
jmp
inc
daa
lret
xor
lahf
pop
cld
es
adcb
pop
mov
mov
mov
xchg
jge
out
or
dec
ja
cmp
mov
fadds
dec
or
pop
sub
pop
or
inc
and
insl
xchg
lahf
shlb
ret
pop
jbe
lahf
jno
push
xchg
lea
imul
dec
movsb
cmp
pop
push
pop
cld
ret
pop
gs
insl
add
jmp
sbb
pop
cmpsb
sbb
jge
cmp
out
shll
and
cmp
adcl
fstpt
mov
leave
pop
inc
clc
xchg
xor
bound
cmp
xor
inc
mov
stos
imul
mov
ljmp
inc
dec
cmp
imul
add
xchg
ret
insb
cmpsb
xchg
das
pop
or
push
cmp
es
sub
xchg
jo
push
shl
insb
outsl
shll
jmp
or
cmp
ds
mull
inc
cmp
das
lea
test
mull
mov
lock
fidivrl
fldl
cmp
sub
mov
outsl
xor
int
jl
xchg
decl
fs
insb
push
dec
cmp
fldt
imul
in
add
dec
ljmp
and
xchg
jmp
testb
sbb
inc
aaa
push
and
dec
mov
xor
mov
cmp
sub
xchg
cmpsb
popl
lock
insl
arpl
or
or
ja
sahf
out
or
pop
lret
adcl
lea
cmp
bound
inc
outsb
xchg
fbld
hlt
cld
fidivs
in
jnp
mov
lock
aam
test
add
pop
pop
and
pop
leave
ss
stos
and
mov
xor
inc
xchg
pop
mov
movsl
and
std
add
loopne
pop
out
shll
mov
movsb
stc
cmp
add
adc
arpl
cld
shlb
sbb
iret
leave
call
cmp
mov
sbb
lcall
push
aad
mov
push
mov
es
adc
xchg
jb
pop
dec
jb
out
push
jb
inc
mov
dec
outsl
call
mov
insb
push
nop
inc
sub
or
push
and
xchg
xchg
mov
or
ficoms
inc
into
in
std
outsb
in
test
jle
loopne
cmp
movsb
push
sbb
inc
nop
mov
xor
sub
imul
pop
xor
pop
aaa
cwtl
test
mov
sahf
pop
testb
add
loope
icebp
adc
in
jb
inc
dec
inc
xor
aam
data16
adc
aaa
xchg
icebp
pop
sbb
xor
jb
hlt
ljmp
dec
push
add
test
int3
pop
jp
pop
and
arpl
fidivrs
cs
dec
mov
jns
mov
jns
test
fmul
mov
mov
cld
stc
das
lret
out
lea
pop
jns
fsubr
notl
stc
arpl
mov
xor
rolb
pop
shll
jecxz
xor
out
lock
mov
fildl
lret
insl
fcmove
mov
push
mov
xchg
out
arpl
scas
imul
roll
shlb
mov
cmpsb
push
mov
shlb
jl
movb
mov
adc
sbb
ljmp
xchg
sub
jmp
dec
mov
xor
les
xchg
xchg
pop
xchg
fsts
adc
arpl
xor
subl
sbb
add
mov
pop
dec
cwtl
dec
xor
jl
and
lret
and
mov
inc
xchg
test
and
pushf
punpcklwd
insl
insl
call
js
outsb
in
popf
js
or
callw
in
mov
addb
call
std
mov
inc
mov
cmc
adc
cmc
scas
jle
aam
jl
inc
jb
adc
ds
xchg
cmp
sub
jb
out
pop
sub
jg
and
cli
and
shll
popf
jne
orb
out
or
sbbb
test
inc
idivb
pop
mov
outsl
pushf
fs
test
enter
mov
pop
pushf
in
push
xchg
xchg
push
pop
push
imul
repnz
enter
insb
inc
push
in
xchg
mov
scas
fisttpl
pop
xor
mov
jns
cwtl
repnz
dec
out
mov
dec
jmp
pop
pop
and
and
outsl
jge
lock
mov
dec
push
inc
mov
jo
fs
cld
out
je
xchg
int
imul
lcall
sti
lcall
adc
or
xchg
ret
adc
mov
inc
cmc
mov
cmp
adc
inc
divl
mov
jmp
ljmp
xchg
pop
mov
adc
cld
fldl
lret
jle
cmp
outsl
and
xlat
pop
jg
add
jb
xchg
cmp
cmpsl
jae
cmp
fwait
mov
in
add
js
pop
jno
jp
xchg
push
push
inc
scas
push
and
mov
cmpsl
mov
push
movsb
testb
cmpsl
out
jns
and
sbb
dec
mov
fwait
lock
fdivrs
cltd
xor
sbb
aad
out
mov
sub
push
dec
xlat
jmp
xlat
jns
dec
scas
shrl
add
cld
repz
lock
imul
arpl
pop
cwtl
cld
mov
stos
imul
sahf
fidivrl
mov
xlat
push
cmp
xor
push
das
inc
sahf
push
dec
cmc
ret
pushf
lret
dec
icebp
out
lcall
loope
aaa
popa
js
sbb
jo
test
fs
pop
cmpsl
ja
sbb
repz
fcomi
xchg
push
push
sbb
orl
dec
inc
pushf
inc
jg
shl
pop
pop
push
fbstp
or
cmovns
pop
cmp
jmp
pusha
sub
dec
test
or
sti
jns
xchg
sarb
pushf
js
sbb
jg
js
mov
push
mov
addr16
ret
mov
pop
fs
or
xchg
lods
pop
pusha
cmp
push
sbbb
xor
int
test
sub
sbb
mov
test
mov
add
xor
sub
jmp
stos
and
test
rclb
loope
in
pop
push
xor
xor
fwait
cmp
call
outsl
popa
xchg
push
xchg
cmp
inc
mov
pop
cs
mov
int3
sbb
call
aad
mov
xor
into
mov
in
mov
cmpsl
movsb
in
push
add
fsubs
sub
mov
mov
mov
lahf
int
lds
dec
gs
mov
mov
xchg
dec
xlat
jg
jmp
das
sarb
and
into
sub
aad
jne
data16
jne
cmp
adc
cwtl
sarb
inc
pop
push
mov
sub
mov
mov
cmc
loopne
mov
repz
sbb
jecxz
pushw
je
arpl
pop
cmp
fists
je
jno
insb
mov
push
jg
cmp
lock
adc
cwtl
mov
xor
pop
fistl
cmc
mov
jle
or
lds
es
pop
push
scas
xchg
outsb
push
repz
xor
sahf
xchg
jp
push
xchg
sti
iret
mov
ret
push
test
lea
cld
aad
rcrl
sub
ret
mov
add
mov
sub
push
out
adc
cs
lds
nop
int
push
sahf
xlat
xor
shll
mov
mov
push
pop
or
mov
sar
mov
dec
fmuls
xchg
rcrl
iret
jl
inc
push
lea
mov
sbbb
mov
clc
fildll
inc
rolb
and
sbb
call
enter
enter
incb
mov
imul
data16
mov
pop
imul
cli
and
daa
test
or
pop
outsb
rorl
mov
in
push
ret
mov
push
in
or
or
mov
or
fists
pop
lds
cmp
or
scas
fcompl
ss
or
testl
pusha
cwtl
leave
and
mov
cld
ljmp
insl
into
inc
jne
xchg
sbb
dec
leave
and
dec
es
or
jae
das
xchg
dec
mov
iret
shl
push
call
sahf
or
repnz
icebp
lods
sbb
int
xchg
repnz
cld
inc
cmpsl
mov
cmp
in
lock
dec
push
jecxz
jae
sub
mov
jb
imulb
fiadds
and
jmp
lret
lods
int3
fdivp
jbe
int3
push
or
sub
jb
mov
ss
dec
or
lods
lea
inc
jl
mov
sub
fs
xchg
mov
jmp
lret
xor
mov
push
enter
xor
mov
int3
mov
sbb
adc
daa
icebp
pop
daa
gs
push
jb
mov
xorl
sub
mov
add
loope
dec
mov
push
add
add
loop
jg
fbld
add
outsl
repz
stos
or
xchg
data16
sarl
pop
js
mov
lret
ss
je
or
cmp
adc
push
mov
rcrl
sub
xorl
nop
sahf
push
xorb
popf
jl
inc
push
sub
jbe
adc
push
sbb
dec
and
pushf
inc
push
jno
inc
jle
pop
and
sti
aaa
mov
dec
mov
mov
sti
mov
jns
shll
sti
lret
rclb
scas
enter
dec
xor
in
lock
mov
jle
cs
sub
mov
aas
lock
lret
mov
adc
xchg
xor
adc
loopne
jl
push
adc
pop
shlb
and
cs
cltd
repnz
stc
stc
sbb
add
xchg
cwtl
mov
lcall
jo
test
imulb
mov
mov
aas
addb
dec
dec
fdivr
rol
int3
jmp
fwait
mov
inc
xchg
insb
movsl
lds
lock
testl
xchg
mov
jnp
psrld
popa
adc
fwait
ss
jnp
push
and
add
adcl
inc
or
jmp
pop
inc
jle
cs
push
push
sbbb
cmc
jg
xchg
aad
add
cltd
or
mov
ret
xchg
addl
dec
add
mov
cmp
add
sahf
out
fwait
jb
int3
jnp
sahf
mov
jne
pop
mov
inc
jmp
sbb
fcoml
fstl
jno
xor
push
fcomps
inc
xchg
xor
and
cmpsl
stos
arpl
fwait
popa
and
jl
xchg
nop
lahf
dec
pop
xchg
mov
xor
ljmp
cwtl
gs
sbb
push
sub
add
mov
xor
mov
hlt
push
inc
movsb
xchg
jnp
or
lret
pop
ljmp
sub
xor
loope
inc
add
cmpsb
repnz
xchg
inc
mov
jae
shl
xchg
cmp
push
fcomps
or
inc
shlb
adc
add
iret
cmpsb
push
cmp
mov
test
pushl
orl
or
adc
out
cmp
pusha
and
popf
jae
jns
jbe
jl
pop
aam
xchg
bound
ficomps
das
xchg
daa
adc
iret
mov
rolb
and
pop
pop
sub
in
push
pop
mov
test
and
icebp
xchg
fstpt
push
fdivp
xchg
rcrl
adc
insb
std
sub
pop
fisttps
inc
je
dec
les
insl
cmpsb
and
add
jno
pop
mov
jg
daa
and
nop
add
call
inc
mov
push
adc
push
lods
add
mov
jp
loope
shlb
mov
cmp
inc
in
sub
mov
ret
scas
pop
sub
dec
xor
pushf
out
sahf
sbb
daa
push
xchg
icebp
dec
mov
and
mov
test
pop
cld
or
das
mov
jnp
and
fists
les
cmp
add
mov
cmp
inc
nop
push
ret
mov
lahf
cmp
adc
adc
imul
sbb
mov
data16
cmp
jbe
mov
loope
add
aaa
push
scas
fistpl
sub
inc
dec
jno
xchg
xchg
bnd
xchg
xchg
subb
fs
and
inc
sbb
stos
and
adc
sub
push
cmp
and
jmp
mov
scas
dec
imul
lahf
mov
mov
arpl
sub
jmp
jne
sbb
aam
test
sub
dec
std
or
imul
adc
xchg
cmpsb
mov
jb
les
inc
dec
jl
xchg
pop
addl
ss
lock
jle
lock
sub
mov
sbb
and
sbb
push
mov
sub
int3
adc
mov
nop
popf
inc
xor
mov
ss
xchg
outsb
rcll
mov
lea
xchg
adc
ret
in
bound
rcrb
xchg
and
mov
adc
fsubrs
xchg
test
arpl
dec
xchg
fwait
cmp
lds
rcll
addr16
fcoml
sar
and
roll
stos
pop
add
cwtl
xor
jecxz
or
mov
cs
out
pop
dec
pop
fwait
mov
add
xchg
dec
loop
pop
push
leave
or
fstp
fldt
xchg
push
push
dec
mov
scas
sub
lcall
mov
dec
int
pusha
cmp
inc
push
xor
mov
mov
test
test
add
push
out
cmp
mov
jg
and
mov
cwtd
dec
bound
popa
aad
stos
or
stos
test
cld
push
repnz
adc
mov
cmp
jl
mov
adcl
ljmp
adcl
pop
and
outsb
pop
std
pusha
mov
mov
notl
inc
mov
and
ja
subb
out
sti
push
js
cwtl
dec
cmpl
movsl
fmull
mov
dec
push
adc
popa
outsl
push
lret
sbb
pop
pop
and
sahf
inc
les
movmskps
loopne
ja
stos
cltd
dec
push
cmp
outsb
jns
and
cmp
jno
jno
inc
jle
test
xchg
pushf
in
in
cmpsl
xchg
mov
xchg
mov
lcall
test
nop
clc
dec
dec
leave
mov
xor
sahf
inc
dec
cmpl
insl
test
lods
jg
lds
iret
jne
ss
insb
jo
stc
es
push
lret
xchg
arpl
cwtl
fisubrl
xorb
add
jne
sbb
test
mov
sub
imul
out
iret
shlb
rorl
mov
int
outsl
inc
jnp
mov
test
xchg
or
or
test
je
lods
sbb
fisubrs
lods
repz
push
cmpsb
dec
ja
mov
mov
fucomip
cmovae
sub
ss
jp
pop
insb
jbe
mov
push
cmp
icebp
xchg
sbb
sbb
jmp
aad
jge
sbb
and
jmp
mov
test
aas
movsl
push
pop
mov
xor
hlt
lret
fsubr
mov
sub
out
test
daa
push
push
jo
js
jg
gs
cwtl
int
cmpsl
iret
sbb
xchg
or
xchg
stc
jecxz
push
icebp
mov
xor
push
dec
out
dec
xor
rcr
cli
jnp
ss
adc
aas
cltd
push
or
cli
mov
dec
pop
add
push
or
cmpsb
push
sub
scas
lcall
in
dec
movsl
xor
repnz
fdiv
or
xchg
shlb
idivb
ja
sub
lret
sub
xor
mov
jp
jns
xor
jg
rclb
hlt
sbb
insb
sbb
sbb
aad
std
jae
dec
jmp
dec
cmp
cmp
cli
in
cmp
push
push
out
decl
inc
imul
pop
js
inc
or
sub
adc
add
mov
jne
fwait
cmp
xor
pop
popf
jp
aam
pop
roll
jmp
dec
push
insl
mov
cmpsl
inc
mov
dec
sub
out
jle
sbb
jno
lret
shl
xor
insb
dec
pop
add
cltd
movsb
pop
mov
pop
push
rcll
mov
jno
sbb
je
data16
dec
cmp
or
popa
sub
outsb
dec
cmc
inc
sub
jge
dec
imul
add
ficoml
cmp
cmp
or
mov
inc
imul
in
mov
push
mov
fs
ficompl
pop
jno
addr16
mov
and
and
int3
aad
ljmp
fmul
ret
or
rorb
jge
aaa
movsl
jmp
lcall
dec
daa
jae
cmp
jne
dec
dec
sahf
dec
adc
loopne
jge
pop
pusha
push
jp
push
mov
rcrl
pop
add
jle
jle
adc
dec
popl
add
pop
xor
pop
dec
std
iret
loopne
or
cmp
pop
xchg
sbb
xchg
jp
push
pop
xor
sarb
dec
push
cmp
inc
mov
inc
inc
cmp
das
sub
add
mov
mov
out
add
pop
jno
adc
movzwl
fwait
jnp
pop
pushf
push
xor
jmp
xor
push
sub
call
mov
lret
cmp
dec
mov
pop
pop
test
adc
aad
push
repz
jo
hlt
mov
add
adc
test
shll
lcall
push
cmp
jmp
sub
inc
mov
inc
jo
in
mov
xchg
shrb
clc
clc
or
inc
sbb
or
or
popf
shrl
mov
xlat
sub
mov
in
int
or
pusha
lea
xor
xchg
addr16
and
pushf
jae
fisubrs
mov
inc
xlat
cmp
xorb
xor
mov
mov
mov
lds
mov
jecxz
int
cmp
out
adc
xlat
jmp
dec
sarl
fwait
adc
add
jle
cltd
dec
jnp
dec
xchg
mov
mov
push
iret
cld
jne
in
jp
mulb
lcall
sbb
pop
subl
xchg
xchg
mov
stc
cmp
loop
lds
mov
test
aaa
and
add
xlat
inc
jns
add
fidivrs
lahf
mov
adc
cmp
sub
insb
jbe
testl
cmp
push
jns
xlat
inc
in
jbe
adc
jge
adc
pushf
sarb
fisttpl
test
add
fdivrl
inc
dec
enter
dec
adc
clc
mov
push
fnstenv
xor
push
in
dec
int
dec
ret
inc
stos
cmp
mov
cltd
mov
cmp
negl
ds
stc
mov
pushf
push
loop
loope
and
or
sub
lds
mov
sbb
xchg
cld
dec
sbb
lods
inc
mov
out
fs
push
stos
outsl
aas
xor
fistpl
ret
push
jl
pop
stos
pop
movsl
test
lea
xchg
lcall
adc
mov
lea
mov
sub
insl
pop
hlt
push
stos
mov
push
sbb
mov
dec
cmpsl
aam
jno
mov
sub
cmp
imul
in
dec
fwait
inc
sbb
cli
pop
mov
enter
push
mov
jg
cwtl
cli
icebp
mov
and
mov
push
mov
das
mov
aad
mov
push
imul
imul
lea
mov
sub
or
fimuls
dec
cmpsb
and
sub
popf
pop
inc
mov
negb
out
jmp
cmp
dec
add
mov
ret
stos
push
repnz
xor
rol
adc
lods
or
lods
mov
ds
add
outsl
fstps
andb
test
repz
sub
mov
jnp
test
jmp
and
and
push
cmpsb
negl
inc
or
es
outsl
mov
in
sub
ss
repnz
rcll
fdivl
mov
movsb
outsl
fsubr
add
pop
hlt
cmp
sbb
push
pusha
xchg
or
xor
jl
jg
cli
dec
xchg
mov
jp
gs
repnz
fstpt
or
and
icebp
jl
xchg
pusha
and
adc
jp
mov
mov
outsb
imul
arpl
xchg
in
adc
jb
push
movsb
mov
dec
repz
lods
inc
add
dec
es
aad
mov
mov
or
data16
jg
fdivrp
out
scas
adc
mov
int
xor
xchg
sti
mov
pop
lods
inc
stos
js
idiv
daa
sub
jle
dec
popa
lds
cmp
add
sbb
outsl
push
or
xchg
popf
enter
inc
adc
dec
subl
sub
cmpsb
add
push
and
shrb
jne
call
cmpsb
inc
jmpw
mov
jns
lea
and
dec
jb
jmp
xor
jp
xchg
or
jle
pop
mov
inc
inc
push
cltd
and
ss
orb
data16
push
mov
cmovs
js
stc
aas
push
fisubs
lods
mov
or
ret
cmp
decl
mov
jae
cmp
mov
jae
aas
add
lcall
mov
xchg
push
xor
lret
pop
jno
pusha
js
xlat
push
js
je
mov
pop
fdivrl
xor
shll
sbb
out
cmp
push
cmp
lahf
mov
and
xor
xlat
or
int3
outsb
or
gs
enter
cwtl
adc
add
arpl
in
jp
sbb
test
push
mov
add
jle
dec
pop
inc
inc
adc
mov
imul
add
sti
addr16
out
pop
mov
repz
mov
popf
mov
scas
repz
push
xor
xor
aas
xchg
mov
mov
or
lea
filds
mov
hlt
and
bnd
push
into
jp
sti
and
sub
in
das
or
add
push
push
icebp
orl
pop
jmp
push
xor
out
out
std
sahf
push
adc
mov
xchg
or
idiv
mov
cmp
cmp
addb
inc
insl
jnp
push
mov
rcrb
mov
mov
icebp
mov
test
xor
add
out
outsl
fsub
in
inc
jae
rcrb
shlb
les
in
push
mov
out
sub
cli
in
stc
cltd
cmc
dec
pop
mov
cmp
sub
xchg
cmc
mov
and
pop
sub
mov
push
ficoml
mov
inc
dec
into
or
cmpsb
sbb
mov
aad
movsb
arpl
outsb
insl
and
jo
fistl
cld
or
stos
xchg
mov
arpl
xchg
cmp
xor
imull
cld
popa
xor
dec
cltd
inc
cmp
push
jb
cmp
jl
mov
mov
rolb
lret
mov
icebp
adc
cli
mov
outsb
adc
leave
lods
nop
cli
add
fstps
sbb
gs
mov
push
cmp
cmpsb
xlat
and
dec
or
imul
cmc
push
roll
in
daa
ljmp
cmp
arpl
popf
lret
sub
inc
bound
int3
pop
hlt
and
mov
lea
or
mov
xlat
sahf
adc
and
mov
cmp
push
in
xchg
mov
xor
loop
adc
mov
adc
hlt
stos
xor
incb
fnsave
and
insl
add
mov
sub
das
call
insb
or
sar
add
inc
sub
xor
orl
mov
push
dec
shll
dec
repz
inc
add
out
jg
fwait
dec
in
icebp
xchg
push
jb
push
push
push
adc
pusha
inc
push
adc
and
cmpsb
sub
data16
mov
aam
lock
dec
cld
xor
mov
sub
dec
test
loop
scas
push
push
lods
adc
mov
dec
pop
stos
mull
ret
in
adc
sub
fwait
mov
addl
in
call
ret
lds
adc
pop
mov
sbb
ret
xchg
jns
xchg
in
jmp
xchg
scas
mov
adc
test
shlb
push
jg
xchg
jb
fsubr
outsb
lret
push
fnstcw
cmp
pop
adc
fs
dec
sbb
out
adc
mov
repnz
jecxz
ss
mov
gs
add
pop
in
push
xor
jno
shlb
notl
cmp
sbbb
adc
jmp
aad
xor
fdivrs
scas
pop
lret
cmp
movb
rorb
jbe
cltd
fwait
pop
lea
push
adc
std
and
cmp
das
xor
or
movsl
cmp
mov
cli
adc
dec
jg
loope
ja
test
add
lcall
lea
add
mov
js
mov
ret
and
mov
in
xchg
jp
dec
nop
push
mov
cwtl
or
mov
jno
lret
movsl
repnz
xchg
imulb
rol
push
scas
and
repz
pop
jl
pop
sbb
xchg
std
mov
orl
lods
insb
fwait
cmpsb
arpl
jmp
jg
mov
xchg
movsl
push
inc
and
push
sub
mov
inc
xor
fbstp
mov
imul
jecxz
jl
daa
jne
sbb
sar
mov
iret
push
insb
shr
mov
inc
inc
test
cmc
push
xor
jo
sbb
cmp
arpl
fwait
pop
shll
push
data16
in
xlat
jl
mov
xor
out
int3
pop
xchg
dec
or
out
mov
popa
mov
cmpsl
ja
xchg
iret
dec
outsb
cmp
cmp
push
xchg
mov
les
sbb
cltd
shlb
mov
cs
sub
or
out
in
aas
imul
jecxz
dec
jno
mov
cmp
dec
mov
sbb
dec
out
out
stc
fildl
sub
sbb
cmp
and
test
aaa
add
scas
dec
pextrw
outsl
int
lock
sub
jge
push
sbb
lods
jae
mov
out
cmpsb
sub
test
pop
shl
or
shll
mov
popf
xchg
push
xor
sbb
add
cli
jl
sub
shrb
mov
inc
pop
pop
xchg
in
mov
add
incb
mov
mov
ljmp
dec
dec
xor
push
sub
rcrb
mov
ficomps
into
cmpsl
cld
jge
mov
pop
push
or
push
mov
cmpsb
mov
adc
push
inc
pop
mov
dec
cld
mov
sbb
mov
pop
jmp
push
lret
rclb
xchg
lods
adc
add
and
mov
inc
in
das
add
out
mov
in
loopne
js
out
out
and
push
dec
cmp
or
out
pop
mov
lcall
pop
outsb
int3
mov
das
or
movsb
in
iret
and
dec
or
jbe
mov
outsl
jb
pop
es
xor
cwtl
pop
int
mov
sub
lahf
sbb
fdivrs
cmp
stos
sbbl
mov
xchg
sub
inc
inc
and
xchg
cmp
cmp
repz
fwait
xor
ret
aad
xchg
jns
ret
sbb
pop
pop
jnp
mov
mov
jne
out
clc
aam
xor
mov
loopne
mov
inc
mov
mov
pop
xor
push
movsl
in
lret
mov
pop
aaa
pop
sarb
add
push
fnstenv
lret
scas
mov
lret
adc
mov
aaa
dec
sub
int
into
push
insb
mov
stos
ds
cmp
ds
sahf
aas
push
mov
or
aad
imul
test
ja
rcrb
sarb
push
mov
fistps
dec
scas
jecxz
xor
stos
movsl
mov
pop
ss
cli
push
fldln2
mov
xchg
xor
iret
push
and
repnz
push
jg
clc
iret
into
jne
xchg
iret
lods
enter
pop
push
xchg
push
jg
add
xchg
dec
inc
or
movsl
push
mov
sbb
mov
cmp
scas
mov
cltd
sub
out
mov
stc
lahf
sti
cmp
iret
and
popa
sbb
ja
cltd
xor
adcb
push
sbb
repnz
or
jns
fisubrl
sbb
or
push
or
popf
lods
sbb
xchg
inc
sti
ss
sub
mov
sbb
mov
add
fwait
sbb
out
mov
ret
test
inc
cwtl
push
add
test
das
sbb
xchg
inc
test
fidivrl
mov
add
in
inc
jbe
push
popf
outsb
test
cmp
dec
mov
out
cwtl
or
xchg
fcmovnu
data16
pushf
xchg
inc
xchg
mov
pop
push
add
pop
jb
out
enter
add
aad
jno
xchg
or
sti
mov
jl
dec
pusha
mov
mov
flds
sahf
jmp
pop
push
dec
xchg
xor
flds
pop
sub
popf
mov
cmpsl
ss
lock
mov
mov
nop
push
icebp
lods
ret
xchg
mov
jb
js
pop
push
aas
sar
xor
call
push
insb
inc
mov
cs
loope
fmulp
sarl
ds
stc
jb
xchg
es
out
mov
jge
push
clc
jno
pop
jbe
sbb
test
xchg
sub
push
pop
test
mov
testl
outsl
pop
push
loope
nop
mov
dec
inc
lods
jecxz
and
xchg
aad
jns
jge
mov
imul
adc
dec
push
js
jmp
push
pop
test
mov
mov
mov
fxam
add
and
stos
adc
xor
call
or
push
call
lret
sub
sbb
popa
sbb
aam
pop
imul
pushf
ds
cmp
push
xlat
in
stos
sbb
inc
pop
sbb
mov
lcall
mov
xlat
xor
lds
mov
imul
fs
add
cwtl
nop
lods
aad
pop
cli
out
mov
aad
mov
mov
jmp
notl
lahf
jbe
imul
sbb
xor
in
dec
fstpl
cmc
fisttpl
jl
pop
sti
in
adc
mov
popa
mov
pushf
pop
test
test
fiaddl
daa
idiv
jge
test
inc
dec
leave
dec
fsubl
call
inc
stc
aaa
lcall
sub
or
dec
inc
jmp
xchg
mov
sbb
out
loop
cld
adc
inc
ds
jo,pt
mov
in
add
push
push
xchg
leave
test
in
push
iret
jge
sbb
push
mov
in
push
jmp
int
cmp
mov
lods
fisubrs
pop
popf
gs
add
cmp
jmp
lret
insl
or
jge
push
pusha
out
mov
or
mov
sbb
pop
jns
push
arpl
out
icebp
mov
dec
pop
mov
es
popa
jle
jg
loopne
push
mov
add
fucom
lea
jecxz
jne
dec
push
arpl
out
sahf
in
int
mov
out
gs
xchg
iret
cmpsl
fcoms
push
fiadds
add
jb
andb
mov
xchg
cmpl
cmp
adc
bound
mov
es
cmp
jle
enter
push
test
mov
call
mov
dec
xchg
sub
pushf
xlat
dec
mov
ss
cmpsb
ljmpw
mov
xchg
cld
jge
cmp
mov
arpl
xchg
jo
inc
jne
xor
out
ret
mov
fiaddl
add
outsl
lods
mov
lahf
ret
jp
cmp
or
push
xor
jb
rorb
inc
mov
ss
mov
in
mov
roll
daa
loope
in
movl
loope
mov
jo
cmp
lret
idivl
pop
divl
xor
pop
in
xchg
pop
ja
fnstenv
pop
xchg
inc
divl
gs
sbb
notb
stos
subl
call
in
xchg
or
adc
pmaxub
mov
jno
or
pop
aaa
add
in
test
add
in
mov
push
sbb
test
dec
pop
sbb
out
add
push
test
cmp
inc
js
xchg
adc
icebp
inc
js
adc
roll
in
inc
dec
mov
bound
icebp
enter
mov
mov
jg
aad
outsl
das
imul
xchg
inc
fdivrl
mov
orl
or
adc
inc
bound
jle
adc
push
repz
mov
push
jae
mov
jmp
lds
hlt
scas
inc
lock
jb
push
in
inc
or
ljmp
std
shlb
xor
inc
out
int
movsb
iret
xor
insl
mov
fwait
incb
out
adc
gs
js
outsb
outsb
cmc
sub
lods
pop
test
movsl
ss
pop
int
pop
mov
push
in
mov
jl
pop
movsb
inc
pop
nop
in
or
repz
cmpsb
movsl
std
pop
jb
or
sub
scas
insb
fwait
addl
dec
mov
dec
inc
testb
dec
add
sbb
lods
lds
ss
in
cmpsb
imulb
fnstsw
and
inc
sbb
fists
pop
sbb
sbb
push
mov
cmp
ja
push
aas
and
and
dec
out
inc
in
mov
or
cmp
and
push
fldl
pop
sub
lock
cmp
cmp
fwait
or
jecxz
pop
dec
jb
xor
popf
xor
repz
bound
popa
int3
jp
xchg
dec
mov
inc
cmc
icebp
push
insl
mov
js
add
ss
inc
sub
cltd
cmp
mov
test
dec
sub
enter
mov
fwait
shlb
adc
dec
jle
sbb
bound
pop
sti
lcall
add
sbb
mov
xor
lret
fidivrs
bound
js
mov
into
add
mov
pop
enter
in
int
mov
test
bound
ret
fcoms
sub
and
mov
add
rcrl
mov
cmp
adc
jge
mov
sub
jecxz
movl
lret
or
repnz
fnstcw
jno
mov
pop
pusha
add
push
outsb
xor
jge
sub
add
sub
mov
jb
push
repz
out
imul
push
cmp
aas
mov
lea
sti
add
fidivs
dec
cwtl
and
roll
das
imul
pop
xchg
movsl
jmp
lea
ret
lahf
sar
imul
sahf
insw
insl
out
in
push
pusha
outsl
es
jno
cmp
scas
insb
lcall
test
xlat
jp
lcall
jns
iret
mov
or
jp
jbe
in
iret
inc
push
mov
pop
cmp
push
mov
rolb
in
divb
inc
divb
in
pop
sub
cmp
pop
pop
jbe
cmp
repz
pop
out
js
add
mov
and
out
inc
stos
pop
and
aas
cmp
dec
fwait
mov
dec
out
hlt
push
xor
fucomip
test
and
test
mov
mov
ja
add
gs
rolb
shlb
data16
sbb
xor
jmp
ret
fwait
jb
mov
push
cmp
mov
pop
int3
gs
xchg
or
pop
js
pop
leave
push
cmp
dec
jge
aas
mov
mov
sbb
mov
pop
jnp
cmp
ret
pop
sti
scas
push
testb
hlt
dec
leave
push
movl
pop
sbb
insl
fcmovnb
outsl
repz
xchg
cltd
mov
xor
sub
adc
mov
outsl
decb
and
mov
std
fidivrl
fsub
das
mov
aas
jnp
jp
ljmp
lahf
xchg
repnz
shl
fwait
imul
mov
pop
sbb
cli
lret
add
add
or
aas
sub
popf
shr
sbb
push
pop
fnstenv
push
repnz
js
mov
dec
mov
push
je
dec
mov
and
inc
push
xor
or
mov
hlt
arpl
push
aam
mov
mov
movsl
fcompl
pop
or
sub
sbb
push
mov
loop
jae
pop
lret
lcall
jle
mov
pop
gs
cmp
enter
rolb
add
jecxz
adcl
mov
mov
clc
out
or
xor
int
mov
adc
data16
stc
push
stos
mov
jle
dec
addl
fadds
xchg
add
ss
jo
call
mov
pop
cs
jl
repz
push
hlt
outsb
mov
inc
push
sbb
ds
mov
push
and
mov
sarl
cltd
dec
fldenv
arpl
repnz
enter
adc
pop
mov
or
mov
leave
push
mov
sub
repz
xor
adc
into
roll
sbb
push
loop
push
imul
add
movmskps
aam
lea
push
jo
out
ret
orb
pushf
enter
les
cmc
out
shrl
cld
cmp
jo
cmp
mov
icebp
lock
sarl
les
rorb
fstl
out
jbe
test
inc
pop
repz
inc
iret
sub
dec
out
push
std
xchg
insb
ds
inc
push
xchg
pop
push
push
fcmovnbe
inc
aam
rcrb
stc
lods
mov
cmpsb
insl
ret
ficompl
fsts
xor
mov
in
sbb
lahf
mov
js
dec
mov
lds
sbb
inc
popw
mov
mov
mov
jge
outsl
push
xor
call
cltd
pop
push
leave
cmp
jle
adc
jbe
dec
cmp
orl
sbb
mov
ljmp
add
xchg
inc
lahf
rcrl
xor
sub
int
mov
lahf
xlat
push
pop
dec
jle
xchg
sbb
mov
xor
mov
mov
push
in
call
sbbb
inc
test
movsl
aad
aad
xchg
add
lds
xor
repz
inc
je
mov
sub
cs
mov
addr16
xor
push
sbb
push
adc
mov
in
xor
push
mov
fidivrl
pop
loope
andb
xor
scas
mov
dec
push
cmp
xchg
call
jns
mov
popf
incb
xor
das
and
mov
xchg
mov
jo
jo
pop
cmp
outsl
cs
mov
je
jno
dec
and
xor
cwtl
xchg
xor
lds
xchg
xchg
ds
ja
dec
add
push
lret
fdivl
cli
xchg
mov
rcr
push
arpl
dec
adc
out
cmp
sbb
mov
push
lock
out
jp
into
cwtl
push
jmp
or
std
idiv
mov
pop
out
out
xor
loopne
sarl
pop
mov
pop
xchg
shlb
fbld
sti
cmp
xor
adc
mov
adc
shlb
add
inc
ljmp
jle
jmp
vmread
js
mov
adc
cmc
out
mov
mov
push
ds
cmc
shlb
sbb
int3
adc
sbb
inc
fldenv
leave
push
fistpl
xchg
xor
cld
cmpsb
cmpsl
xor
mov
icebp
xchg
cld
call
mov
loop
sbb
jmp
push
stos
pusha
mov
pop
movl
int3
and
idivl
push
mov
rclb
cmp
mov
inc
mov
stos
aaa
push
in
pop
jmp
push
add
mov
sub
in
movsb
xor
inc
cmpsl
fmull
or
sbb
cmpsb
ljmp
and
mul
or
or
mov
mov
pusha
pop
mov
pop
jmp
adc
stos
popl
cmpsl
and
inc
dec
sbb
or
pop
xlat
stos
adc
push
test
push
jo
cmc
inc
dec
push
jnp
sahf
pop
xor
pop
mov
in
popa
adc
inc
adc
or
sub
sbb
xor
cmp
xchg
lea
sbb
add
xor
jge
inc
bound
jmp
out
scas
sbb
or
inc
stos
inc
call
addl
mov
cs
fmul
add
pop
and
pusha
stc
xchg
addl
xchg
adc
pushf
popf
mov
push
mov
mov
adc
jl
xlat
sub
mull
pop
mov
and
hlt
mov
and
lret
jae
sbb
or
popf
push
test
cld
rolb
fildl
add
sub
lret
jne
loopne
lods
in
dec
ret
negb
pop
sbb
lret
mov
daa
pop
fstl
addr16
mov
int
cmp
mov
xor
inc
nop
rclb
jge
enter
shl
or
sub
push
cmc
pushf
jg
leave
movsb
les
repnz
pop
lcallw
neg
adcb
stos
jb
xor
sti
insl
rcrl
loope
fcoml
jp
sbb
xchg
sub
jp
jp
inc
push
sbb
movsb
xchg
pushf
sbb
jmp
test
or
mov
inc
dec
leave
in
push
cs
cltd
repz
push
outsl
and
dec
sub
pusha
mov
add
testl
adc
pop
out
movsb
sti
xchg
push
in
sahf
dec
push
mov
push
test
shrl
or
xchg
push
test
mov
inc
ret
push
xchg
arpl
mov
cmp
or
pop
add
cmp
jns
gs
popf
sbb
cltd
mov
xor
jg
add
inc
xlat
out
and
push
cmpsl
inc
jbe
sub
or
xor
dec
jne
pop
test
adc
pop
jb
mov
push
or
scas
jbe
fisubs
lods
jae
jp
and
lret
jne
out
sbb
lret
flds
mov
dec
lods
daa
andl
inc
arpl
mov
insl
rcrl
mov
out
mov
inc
in
sub
data16
xor
into
idivb
sarl
xlat
cmpsl
jns
jmp
ret
cmpsb
pop
mov
sbb
lea
xchg
sbb
sub
and
sahf
shlb
aam
loope
ss
movsb
fsubrs
push
jle
ficomps
pop
nop
bound
scas
mov
dec
in
rclb
pop
outsl
dec
inc
xor
mov
arpl
mov
mov
fucomp
mov
into
mull
cs
push
in
clc
imul
test
mov
adc
add
pop
lock
fcoms
pop
fbstp
outsl
hlt
lods
mov
out
xor
test
or
cli
int3
push
repz
xchg
xchg
bound
jg
lds
jg
mov
incl
enter
out
loope
sbb
ds
xchg
repz
mov
hlt
mov
sbb
es
jnp
push
add
lods
daa
outsl
adc
cmpsb
sub
mov
aaa
movsb
mov
pop
push
push
add
or
in
add
notl
fs
xor
in
xor
cmp
lods
test
sbb
adc
iret
or
lcall
xor
sub
mov
or
enter
and
sub
ljmp
sahf
ret
daa
xchg
sub
jle
sbb
xchg
stos
mov
out
cmp
inc
aam
adc
sbb
mov
jle
mov
mov
in
test
fld
gs
rcrl
adc
daa
addl
les
dec
stos
in
adc
mov
ss
dec
or
in
push
bound
dec
fs
int
and
xchg
cmc
push
inc
loop
subb
add
mov
and
test
shl
testb
xchg
sti
test
les
fsts
pop
sbb
leave
in
arpl
jg
jp
fcmovnb
pop
out
iret
jmp
iret
xchg
xchg
sarb
mov
ss
xor
int
daa
dec
loope
jo
sysret
mov
dec
outsl
lods
popa
fsub
inc
pop
dec
adc
hlt
loopne
jp
mov
mov
popf
shll
inc
xchg
mov
sahf
mov
jo
sbb
jo
cmc
push
loop
pop
inc
push
push
in
scas
xchg
movsb
mov
add
mov
pop
pushf
dec
push
fidivs
dec
insl
test
into
pop
repz
mov
adc
fcompl
push
xchg
xorl
sbb
push
dec
mov
cli
lahf
aaa
in
sbbl
fnstsw
dec
int
pop
pop
icebp
and
add
jo
mov
into
mov
jmp
adc
push
lahf
lret
pop
push
sbb
jno
ljmp
popf
fists
dec
xchg
jl
rclb
popa
pop
jge
cmpsl
cmp
fidivrl
push
jmp
sub
gs
imul
mov
mov
lods
xchg
xchg
jb
dec
jno
into
sbb
outsb
fldl
loopne
inc
add
cld
icebp
pop
adc
leave
rcr
jo
jg
ret
dec
lcall
insb
push
xlat
rcrb
add
lods
enter
outsb
dec
rorl
or
xor
jo
sub
out
jl
xchg
xchg
mov
pop
aad
lock
inc
arpl
cmp
cmpsl
adc
das
inc
test
add
jae
lea
notb
adc
test
fsubrs
clc
pop
push
arpl
lds
push
out
sbb
shl
scas
lret
sub
add
scas
dec
rcrl
sub
pop
add
in
xchg
push
rcl
mov
mov
ds
sahf
outsb
dec
mov
push
ret
sarb
fidivs
cmpsb
int3
fsubl
outsl
ss
sbb
add
int
gs
and
mov
jne
sub
sahf
or
daa
icebp
pushf
mov
loopne
pusha
test
mov
fisttpl
jge
mov
dec
les
add
outsb
xchg
notb
pusha
popa
ljmp
orl
outsb
and
cwtl
mov
lods
mov
dec
bound
shlb
push
adc
mov
sub
push
lock
adc
jb
in
push
rcrl
dec
addl
sbb
inc
add
push
xor
mov
sub
dec
fstpl
in
in
push
jb
inc
add
sub
or
sub
test
sti
push
mov
fcomps
or
mov
iret
mov
mov
js
in
sti
bts
cmp
jno
or
mov
shll
mov
jne
jecxz
insl
sub
adc
cmp
xchg
cmp
lcall
movsb
jl
inc
call
cwtl
sti
pop
pop
dec
and
jne
mov
imul
dec
addr16
push
mov
and
fcoms
mov
clc
inc
dec
sub
sub
mov
and
cmp
mov
ficompl
lahf
into
js
xchg
daa
pop
lahf
lock
cli
out
outsb
jne
jge
mov
in
fwait
mov
call
and
and
dec
popf
pop
mov
pop
push
insl
movsl
inc
dec
mov
pop
pop
out
sub
pop
fs
insl
decb
dec
dec
mov
pop
mov
pushf
imul
add
movsb
dec
jb
fidivs
add
sbb
filds
aas
push
test
out
mov
mov
xchg
fidivs
sbb
sbbb
sbb
push
outsl
pop
lods
in
xor
jg
in
dec
fcompl
fisubs
pop
pop
int
xchg
add
push
jge
cwtl
bound
imul
mov
xor
xor
or
ret
jnp
and
std
push
rorl
pop
mov
sbb
ret
add
sbb
mov
adc
movsb
and
mov
push
xchg
mov
pop
scas
ja
push
jle
addr16
es
add
and
pop
int
mov
lods
add
pushf
sub
stos
pop
jb
loop
aam
pop
in
nop
cmp
mov
mov
pop
fdivrl
pusha
dec
es
imul
lret
xlat
shlb
push
sbb
das
dec
and
xchg
xor
adc
add
jbe
mov
inc
jge
fstp
mov
xchg
pop
push
pop
stos
mov
jp
divl
push
mov
hlt
test
outsl
mov
imul
outsl
mov
pop
push
negb
pop
pop
cmpsb
sub
jnp
lret
imul
push
adc
lahf
adc
mov
cmp
insl
cmpsl
push
cld
fs
xor
mov
ja
dec
pop
inc
inc
lea
mov
sub
out
mov
loope
mov
mov
inc
stos
jne
loope
loope
sub
stc
push
daa
push
stos
inc
stc
pop
xchg
in
in
mov
ss
pop
iret
pop
jb
imul
xchg
jg
jb
pop
sbb
inc
adc
aad
xlat
sub
inc
push
cwtl
in
divl
loope
jmp
lcall
lods
mov
iret
gs
fmul
lret
mov
dec
mov
sbb
call
sub
jbe
fwait
mov
xor
jb
orb
cmp
inc
fwait
xlat
js
stos
pop
lods
push
stos
add
add
dec
ficoms
or
mov
push
mov
cltd
loopne
icebp
gs
popa
pop
fcoml
test
loopne
inc
leave
dec
mov
idivl
mov
adc
and
lret
adc
daa
push
mov
repnz
jbe
ja
and
jmp
xor
sub
add
jns
pop
mov
sub
jns
cmpb
and
cmpsl
inc
sbb
jge
inc
xchg
mov
pushf
mov
push
add
fimull
xor
add
outsb
xor
lea
sub
leave
popf
add
add
sar
out
cmp
xor
loop
xchg
icebp
dec
cmp
ja
faddp
lds
jb
lret
lods
bnd
jmp
stos
xchg
pop
dec
mov
jle
xchg
dec
add
imul
sbb
and
movsb
mov
fwait
mov
mov
mov
sti
xchg
dec
fsubrs
dec
push
mov
adc
outsb
or
je
mov
bound
mov
out
arpl
out
mov
jns
rolb
cmovnp
mov
xchg
mov
loopne
das
push
fucom
je,pn
dec
lret
jnp
inc
xor
stos
push
or
pop
test
sbb
add
dec
jo
mov
mov
repz
es
cmc
sub
adc
inc
inc
jp
sub
inc
out
mov
mov
in
mov
nop
jmp
aas
std
pop
jo
inc
sub
mov
and
pusha
mov
cmp
jnp
pop
push
and
dec
loopne
mov
jbe
push
nop
mov
sbb
pop
mov
pop
sahf
inc
mov
lcall
int
add
and
jb
dec
jne
dec
frstor
daa
xlat
mov
fists
inc
jbe
pusha
push
les
mov
add
sti
test
mov
in
jns
fists
stos
push
in
adc
cs
inc
push
and
push
jmp
jbe
and
arpl
mov
lahf
psubq
fdivrl
jno
out
mov
adc
xor
lods
out
mov
movsb
dec
cmp
nop
adc
bnd
and
cmc
inc
lret
xorb
fdivl
or
and
clc
je
imul
jbe
out
cmp
adc
mov
lods
mov
stc
xchg
add
sbbl
sub
push
or
popa
adc
scas
pop
jl
cmc
mov
inc
or
and
leave
pop
adc
hlt
pop
loope
into
enter
clc
data16
aam
repnz
fimull
push
aam
outsb
sub
scas
mov
cltd
dec
xor
fcompl
jb
jg
add
int
and
xchg
test
mov
mov
lock
mov
add
sub
add
mov
add
enter
and
sub
and
mov
mov
fwait
scas
ds
push
cmc
or
enter
push
icebp
push
aas
rclw
xchg
scas
pushf
sub
inc
mov
inc
fisttpll
fadds
int3
push
xchg
jno
stos
jo
cmp
inc
dec
andb
test
jl
testb
insb
mov
jge
sub
mov
pushf
les
add
xchg
sub
ret
cmpsl
cmp
jne
cmpsl
add
test
orl
cmpsl
push
cltd
xchg
bound
sarl
in
pop
or
push
mov
dec
pop
aas
xor
adc
aas
ret
in
add
addr16
cmp
outsl
push
negb
lcall
sahf
fcomps
jns
and
sub
ja
mov
cmp
sti
popf
push
pop
cmp
inc
add
in
cwtl
imul
fcompl
sbb
sub
gs
popa
add
jle
inc
scas
in
int3
lcall
push
orb
or
jns
test
out
cmp
lahf
fldcw
or
cld
cmp
push
mov
and
push
lret
jae
lds
mov
lret
or
stos
sub
xchg
cmp
xor
loop
pop
test
jg
adcb
shl
leave
icebp
and
and
add
jo
sahf
jne
mov
mov
fildll
dec
pop
aam
dec
and
out
jo
dec
jbe
leave
pop
cli
mov
cmp
cmpsl
insb
sub
nop
add
in
movsb
incb
jle
cld
jb
test
shlb
or
mov
clc
jo
add
mov
mov
inc
hlt
in
arpl
sti
jl
sbb
imul
sti
aad
stc
mov
cli
outsl
pop
push
leave
mov
mov
orl
js
jecxz
adc
popf
mov
divb
add
in
dec
and
aam
adc
ljmp
pushf
xchg
jo
or
xor
sti
scas
inc
pop
ret
mov
insl
xchg
pop
hlt
jnp
pop
movsl
pop
and
jo
pushf
movsb
lret
jge
in
inc
sbb
xchg
inc
cmpsb
and
out
imul
mov
andb
fs
sbb
pop
addr16
stos
enter
repnz
pop
rcl
loop
jns
xlat
dec
shlb
push
add
rclb
das
xchg
pop
sub
sahf
push
shll
push
arpl
sub
mov
iret
imul
inc
repnz
in
inc
pop
pop
lcall
pushf
inc
jl
cwtl
cmp
mov
mov
jl
fs
cmpsb
pcmpeqb
mov
pop
jl
fisttpl
mov
idivb
mov
xchg
xchg
xor
pop
cmpsl
xchg
andb
dec
lds
add
call
rcrl
sub
stos
mov
cmp
and
adc
add
lock
dec
fimull
xchg
and
or
add
jl
push
mov
inc
inc
jecxz
or
ret
adc
int3
jp
and
mov
mov
mov
xchg
xor
dec
or
jb
inc
fildll
cmp
divb
xor
fcmove
adc
adc
dec
std
nop
jns
adc
clc
insl
cmp
pushf
lea
js
int
fwait
es
cmp
mov
movsb
ficoml
cmp
cmp
fstpl
incb
mov
stos
or
mov
cmpsb
sub
stos
pusha
jb
stc
cmp
xor
ljmp
sub
mov
fwait
cmp
rorb
xor
popf
add
call
mov
negb
cld
lds
in
mov
sahf
inc
cltd
inc
cmp
ljmp
push
jno
sub
and
mov
pusha
push
jmp
cmp
enter
bnd
jo
push
push
adc
imul
jmp
mov
mov
cmp
adc
mov
pop
mov
push
jno
jae
xchg
xchg
or
jnp
imul
rcr
roll
push
testl
mov
cli
add
mov
imulb
enter
test
aaa
imulb
fisttpl
pushf
inc
inc
xchg
ljmp
sbb
aas
setge
fwait
inc
idivl
xchg
mov
in
jae
lock
cmp
fldcw
arpl
jecxz
inc
jle
ljmp
push
jecxz
fcoml
arpl
sbbb
lods
inc
sub
xchg
lods
mov
imul
pop
mov
mov
pop
cmp
pop
cmp
adc
fbld
jp
mov
mov
dec
pop
adc
mov
fmuls
bound
pop
bound
fadds
fidivrl
xor
in
sub
mov
jo
pop
dec
add
mov
into
sub
rcrb
push
fxch
cmp
sahf
movsl
inc
fsubs
and
aas
notl
jl
lock
and
sti
mov
hlt
push
fcmovnu
xchg
loopne
movsb
rorl
mov
xchg
lods
mov
insl
inc
faddp
sbb
ret
or
add
xchg
movsl
xor
xchg
mov
mov
int
xor
or
clc
mov
out
stos
jnp
rolb
es
mov
xchg
ret
mov
sub
shrb
ljmp
fs
scas
or
arpl
cli
insb
jns
stos
loopne
dec
shrb
imul
add
cwtl
adc
lods
add
xorb
aam
aaa
jae
stos
popf
xchg
andl
mov
sub
push
clc
ret
inc
loop
ds
das
decl
xor
fildl
in
jb
pop
mov
cltd
vmovapd
xor
push
insb
xor
mov
lcall
sub
adc
and
lret
xor
out
sub
rolb
xchg
ficompl
imul
xchg
ret
lods
and
test
enter
sbb
mov
xchg
mov
bound
sub
fstpl
lahf
lock
mov
subl
daa
xor
xor
mov
data16
mov
fnstsw
bound
or
push
fwait
and
arpl
stc
jge
adc
outsb
sbb
mov
or
jo
cld
cs
jle
cld
ror
aad
pop
orl
fimull
cmpsb
sbb
movsl
mov
shlb
jo
fsubrl
add
cmp
add
xchg
cmp
adc
or
repnz
int3
pop
jnp
mov
jae
mov
in
xor
adc
push
jmp
sbb
and
cmp
insl
aas
xlat
data16
pop
sarb
pushf
sbbl
stc
in
mov
adc
mov
xor
sbb
negl
movsl
arpl
out
ret
adc
mov
sbb
mov
aaa
loope
inc
scas
jmp
push
push
mov
out
into
imul
inc
cmp
or
dec
sub
les
lahf
adc
inc
jne
lods
mov
inc
bound
push
xchg
fmull
sub
aad
sub
mov
xor
sbb
bound
repz
push
jnp
sahf
arpl
test
push
mov
ret
lret
sub
aad
sub
pop
or
loope
imul
cmp
ss
sbb
cmpsl
xchg
dec
push
add
adc
and
jecxz
mov
les
aam
imul
pop
or
out
pop
pop
adcb
jmp
icebp
cwtl
je
daa
mov
out
cltd
fldl
scas
sbb
or
cmpsb
xor
leave
test
or
ficoml
fcmovne
ljmp
inc
cmpl
movsb
lds
icebp
out
or
xor
roll
push
icebp
jecxz
jg
stos
mov
testb
mov
decl
jl
add
shll
frstor
jle
nop
mov
punpckhwd
xchg
mov
out
icebp
cmovne
adc
int3
lret
sbb
hlt
jnp
sti
out
mov
mov
adc
sub
shl
leave
sti
roll
xor
addr16
cmpsl
es
std
add
pop
call
and
jecxz
xor
aam
sbb
jp
fnsave
push
ja
adc
jmp
loope
adc
pop
ja
lods
fwait
aam
sub
fwait
mov
jne
dec
or
and
mov
ss
sahf
jle
fisubl
fiadds
mov
loopne
add
xorb
fs
sub
pop
push
push
sub
jp
mov
sub
shrb
or
xchg
es
mov
jns
mov
adc
mov
pop
icebp
jle
aaa
pop
outsb
jbe
cmpsb
movsl
in
jle
xchg
int
adcb
arpl
xchg
negb
or
sbb
adcb
pop
jnp
dec
add
pop
ljmp
or
outsl
pop
mov
fiaddl
loope
pop
adc
lea
ja
clc
xor
and
jb
jg
xor
setb
xor
mov
xor
sbb
mov
jecxz
in
leave
xor
push
pop
and
push
repnz
fs
pusha
dec
mov
pushw
or
iret
jns
jle
or
je
pop
push
or
fcoml
je
clc
inc
pop
leave
je
xchg
les
mov
mov
mov
pop
inc
loope
nop
cwtl
cmp
mov
xchg
and
orl
inc
inc
xchg
test
in
sub
test
xchg
xchg
jg
and
and
mov
cmc
jl
negl
leave
mov
or
adc
pop
inc
mov
call
sub
mov
fs
filds
sub
or
or
sub
jmp
out
mov
lahf
aad
mov
inc
inc
jg
and
movsl
negl
cmpsl
pop
dec
inc
dec
inc
aam
xchg
stc
xchg
das
sub
cmp
dec
icebp
pop
sarb
mov
adcl
fisubrs
and
lahf
mov
shlb
mov
jle
icebp
mov
insb
sahf
sbbb
test
mov
mov
nop
pusha
out
test
imul
sub
rclb
pop
icebp
pop
lcall
or
in
adc
test
in
cmp
push
pop
fdiv
mov
jmp
popa
sbb
dec
cltd
mov
in
arpl
cmp
sbb
outsl
scas
repz
es
jmp
outsl
dec
pop
lds
pop
and
js
lods
leave
xchg
cltd
iret
mov
jnp
shl
xchg
cmp
lret
test
lret
xor
jbe
sbbl
pop
xchg
jbe
movsb
mov
sti
les
mov
jbe
int
cmp
jb
insb
sub
and
out
loope
xchg
push
add
mov
cmp
rclb
lods
aam
es
jbe
scas
popf
popl
arpl
pop
or
sub
dec
jp
jo
pop
sbb
pop
sahf
int
ret
adc
push
insl
xchg
jae
mov
outsl
and
inc
push
jp
testl
adc
cli
es
test
into
jbe,pt
pop
xchg
insl
mov
pop
cld
ss
jp
xorl
sbb
sbb
and
out
insl
adc
mov
xor
movsl
jmp
shlb
fnstsw
inc
notl
mov
rorb
add
dec
lock
popf
into
sub
xchg
dec
mov
mov
sbb
mov
leave
dec
imul
cwtl
ljmp
sbb
in
dec
cltd
aas
sub
cld
je
dec
xchg
stos
xchg
jo
ss
dec
jb
or
lods
movsb
dec
sbb
mov
test
ss
or
mov
test
sbb
mov
es
mov
sahf
jne
mov
insl
leave
pop
movsb
mov
pop
ret
stos
pop
lock
jo
xchg
cwtl
cld
std
mov
addr16
fnstenv
fcmovb
pusha
fcomp
adc
xchg
adc
add
cmp
or
sarb
cmpsl
mov
xor
pop
push
cld
pop
add
inc
data16
lcall
movl
test
mov
inc
lods
insb
xchg
dec
cmp
push
or
insl
fdivl
clc
lods
ja
lock
fbld
jb
cwtl
pop
xor
pop
mov
dec
mov
xor
lods
pop
movl
xchg
push
pop
cmpsb
out
fsubs
aas
and
imul
push
jno
jns
xchg
xchg
enter
mov
sbb
and
mov
leave
leave
xchg
mov
dec
jb
add
pop
mov
lret
jg
imul
push
inc
imul
add
or
shufps
mov
fisubl
cmpb
imul
xor
cmpb
pop
push
mov
fstps
in
sbb
push
out
mov
out
mov
mov
leave
adc
cs
inc
jmp
test
cmp
aam
push
mov
jle
jge
test
aad
cmp
dec
inc
cmc
imul
rcrb
jecxz
and
mov
bound
mov
out
sti
repz
mov
enter
insl
mov
mov
imul
mov
push
or
repnz
mov
loope
stos
sbb
sub
pop
js
filds
loop
cmp
mov
jge
out
outsb
inc
ret
push
xorl
gs
push
rcrb
lcall
lods
in
das
pop
inc
mov
sbb
push
push
dec
mov
addr16
xchg
mov
arpl
dec
cmp
int
mov
push
push
add
loop
sbb
sbb
jno
iret
jmp
sarl
lret
push
fistps
fisttps
jae
or
aas
fistps
testb
cli
or
or
inc
push
mov
dec
loop
fcmovbe
repnz
jl
xor
or
xor
pop
push
dec
xor
and
jp
outsl
scas
fisubrl
sbb
hlt
iret
enter
push
mov
imul
gs
loopne
mov
int3
shlb
xor
mov
clc
sti
push
cmp
push
js
icebp
sub
mov
xor
inc
push
add
xlat
mov
test
mov
addr16
and
out
hlt
cli
imul
add
xor
in
sub
mov
jbe
jo
dec
pop
lods
leave
pop
mov
cs
mov
fidivrs
mov
mov
clc
sbb
aam
ljmp
cltd
fadd
and
stos
mov
ja
and
push
lret
xor
push
xchg
mov
cmp
xor
popa
or
lock
shlb
out
sbb
and
ret
cs
lock
sbb
loopne
pushf
ljmp
pop
out
mov
push
mov
jmp
mov
jmp
or
orl
xor
loop
or
jmp
cmp
sahf
nop
dec
push
cmp
leave
jo
mov
addr16
jnp
rorl
into
lss
repnz
mov
xchg
cli
and
stos
insl
push
or
fistpll
icebp
fcompl
mov
testl
sub
or
divb
in
mov
pop
mov
dec
jb
dec
mov
sbb
ss
test
or
bound
adc
cmp
sbb
out
xchg
xchg
cmc
push
imul
jo
and
stc
jno
pop
mov
daa
out
cld
int3
lds
mov
stos
ret
lds
aad
les
jno
jecxz
loope
test
inc
repnz
mov
ljmp
lret
pop
inc
cmp
mov
pop
outsb
mov
scas
inc
jmp
mov
out
xor
iret
adc
inc
inc
add
push
push
jmp
lahf
lcall
pop
sbb
mov
into
fcmove
and
mov
cmpsb
fcomps
xor
or
fisubrl
dec
pop
jle
insl
inc
jae
inc
cmc
stos
jp
cs
pop
mov
shll
out
xchg
in
pop
movsl
jmp
mov
ret
sbb
fstpl
addb
in
push
pop
cmpl
stc
push
fists
sbbl
aad
pusha
idivl
xchg
mov
aaa
mov
sbb
cmc
push
adc
cli
ss
adc
or
and
int3
sti
lret
enter
daa
sahf
mov
test
in
dec
out
pusha
orl
mov
stc
repnz
int
cmp
lcall
cmp
sub
sbb
in
ret
adc
aad
das
xor
js
jg
add
mov
das
out
pop
mov
mulb
dec
sbb
xchg
ret
fiaddl
mov
mov
std
xorl
dec
mov
mov
mov
ds
jnp
dec
fimuls
out
pop
inc
pop
dec
sarb
out
test
sub
imul
sbb
adc
inc
lahf
adc
adc
pop
add
out
mov
dec
aas
mov
and
test
cmpl
inc
add
jle
loope
mov
push
call
mov
scas
fiadds
xchg
loopne
push
pop
dec
mov
insl
out
fcomi
loope
imul
cmovbe
xchg
inc
fildl
jg
jecxz
out
cmp
xchg
cmp
aas
mul
lea
cwtl
lret
add
sbb
sahf
dec
nop
insl
dec
cmp
jl
push
lds
xchg
lds
add
jecxz
xchg
xchg
nop
mov
rorl
les
inc
orl
dec
lds
mov
mov
sbb
xchg
push
push
xrelease
sti
inc
movsb
sub
jp
insb
xlat
jno
lcall
lods
inc
jno
adc
xchg
sub
aad
adc
inc
adc
pop
ds
xor
adc
mov
adcb
cmpsl
out
dec
cmpb
mov
or
jnp
jne
add
jmp
cmp
sbb
pop
lcall
sbb
out
addb
jl
cs
mov
inc
or
pop
pushf
addr16
dec
outsl
add
or
aas
add
stos
cltd
xchg
ja
int3
cmp
fsin
loop
xchg
test
pusha
sbb
insl
inc
sarb
pop
loop
ret
inc
add
cltd
mov
out
pop
xor
push
les
dec
cmp
add
sbb
pusha
mov
je
lret
insb
push
aam
addb
mov
clc
fisttpl
sub
sub
push
xchg
jb
xchg
adc
clc
daa
adc
popa
xchg
in
cltd
rcrl
movsl
rclb
cwtl
push
in
pop
in
push
pop
lds
pop
push
test
mov
pavgb
xlat
ja
shrl
dec
xchg
pop
out
cmc
xchg
imul
mov
push
xchg
dec
xchg
scas
xor
or
cmp
mov
xlat
cmp
sub
iret
or
insl
scas
xchg
fsub
in
dec
in
stos
xor
sbb
bound
aad
je
and
adc
pop
rcr
push
lea
pop
mov
loop
call
adc
pop
pop
pop
cmp
imul
mov
lret
cmpsl
sbb
add
mov
or
mov
cmp
nop
mov
popa
mov
shlb
xchg
adc
mov
push
in
aaa
hlt
jno
shl
lcall
mov
adc
repnz
shlb
sti
fwait
xchg
aas
test
cmp
add
pusha
add
sahf
lods
adc
jge
cmpsb
lret
outsl
in
mov
pushf
jns
js
xchg
divb
clc
sub
std
jns
out
pop
push
movsb
mov
adc
out
dec
ds
pop
clc
int3
test
push
inc
je
mov
scas
js
cmc
mov
insl
or
js
loopne
xchg
pop
ffree
push
fdiv
fs
test
mov
cmp
jg
adc
jbe
jns
jle
inc
lds
fnstenv
imul
cwtl
je
sub
sub
inc
decl
jg
mov
mov
in
scas
push
insl
mov
push
cwtl
add
pop
scas
pusha
jge
jecxz
icebp
popf
inc
ja
add
xchg
fdivs
mov
sbb
std
jo
imul
cmpsb
sbb
jge
and
xchg
fwait
cmp
in
mov
rol
cmp
jmp
and
push
inc
mov
dec
mov
mov
popa
adc
lock
xchg
adc
enter
push
xchg
mov
cmc
mov
cmp
xor
scas
stos
adc
push
in
add
or
cltd
xor
push
mov
pop
data16
aas
pop
out
inc
insl
cmp
push
sbb
int
outsl
nop
push
insb
inc
ret
xchg
loope
addr16
sub
mov
in
daa
mov
inc
out
ret
lcall
push
mov
out
fnstcw
cwtl
clc
sub
in
mov
adc
cltd
and
sbb
jecxz
out
rorb
cwtl
aas
or
dec
sub
ficomps
je
xchg
cmp
fcmovb
repz
mov
pop
outsb
xchg
mov
mov
push
test
xchg
movsl
mov
dec
loope
inc
push
adc
xchg
dec
and
xchg
mov
xchg
pop
into
adc
rol
jns
push
adc
aas
test
xlat
int3
inc
and
jb
aam
jno
fsubrs
jmp
movsb
mov
sbb
add
cmp
and
pushf
ret
stc
or
mov
arpl
jmp
add
js
scas
je
popa
lods
mov
add
dec
aam
xchg
pop
cld
and
ret
fst
lcall
int
out
adc
cs
push
xchg
add
mov
mov
xor
xchg
cwtl
xchg
sub
faddl
cmpb
stos
insb
mov
xlat
mov
mov
sub
rol
mov
push
push
in
jl
adc
mov
repz
rep
cmp
les
push
popa
mov
in
lods
dec
sbb
lcall
dec
in
pop
xchg
cmpsb
popf
leave
mov
mov
pop
js
mov
jne
mov
neg
add
mov
cmp
mov
outsl
pop
leave
sti
cmp
jbe
sti
lret
xor
xor
test
cli
jbe
stos
xor
into
pop
sti
mov
test
pop
sub
ret
mov
jge
sbb
stos
sub
adc
lock
sub
xchg
addr16
fcomps
add
test
jmp
jae
outsl
arpl
lret
sub
ss
sti
in
lret
jb
stc
outsb
lret
in
xchg
inc
and
in
outsl
xlat
cmpsl
xor
xchg
test
push
mov
fcomps
xor
or
mov
xor
fiadds
dec
pop
jge
xchg
xchg
loope
push
push
call
mov
sti
adc
mov
xor
xchg
adc
jnp
or
push
sub
or
call
cmpsl
daa
lock
repnz
sbb
cli
insl
jle
xchg
or
sbb
subl
sbbl
xchg
pop
push
or
xchg
nop
stc
testb
mov
sub
rorb
subl
pop
xor
ret
ret
xchg
test
push
fwait
scas
jae
sbb
loope
mov
push
notl
fnstsw
inc
inc
xor
jns
scas
ja
clc
lret
add
loopne
add
dec
lock
inc
pusha
pop
ret
sbb
xchg
aad
or
and
dec
push
and
lock
xchg
aas
lahf
mov
and
cmp
mov
std
lea
repnz
and
insl
ret
mov
jb
insb
push
cmpsl
dec
pop
fmul
jecxz
sub
test
mov
push
or
pop
push
repnz
int
xor
out
inc
xor
nop
mov
sbb
jae
popf
inc
inc
mov
inc
rcrl
add
xchg
mov
stc
mov
pop
mov
leave
mov
sub
cmpsb
call
cltd
out
pop
shll
mov
pop
add
push
add
mov
dec
int
and
pop
jmp
cmp
and
movb
lret
lahf
icebp
lea
mov
es
inc
imul
in
jle
jae
loopne
add
adc
nop
stos
imul
fists
movsb
test
data16
add
xor
jnp
jae
push
mov
lods
pop
and
cwtl
andl
sbb
jl
ret
ret
jle
mov
jnp
cmpsl
xchg
jecxz
inc
test
xchg
aaa
push
jnp
mov
xor
dec
andb
aaa
stc
push
stc
cld
jmp
xchg
jae
push
rcrb
and
add
sbb
cmpl
mov
mov
das
push
js
outsb
arpl
sub
adcl
ss
adc
cmpsb
out
pop
cmp
mov
inc
mov
roll
pusha
divl
pop
pop
push
cmc
sub
mov
dec
outsl
adc
scas
adc
mov
push
mov
push
testl
aam
ss
xchg
inc
mov
popf
addl
or
mov
adc
fstl
sub
fmul
push
fwait
mov
cli
xchg
and
inc
insb
scas
pop
bound
repnz
jmp
jl
cmp
out
mov
fmulp
jle
mov
add
test
aad
scas
inc
pop
mov
and
bound
adc
xor
dec
in
sbb
pushf
ret
dec
std
inc
out
sbb
les
pop
mov
xchg
pusha
nop
dec
and
jmp
mov
xor
sbb
mov
fs
je
repnz
cld
push
push
out
out
push
jmp
nop
adc
jns
and
xchg
movsl
int
xchg
push
popa
cmpsb
rclb
push
or
dec
xchg
sahf
iret
sub
rcrl
dec
mov
mov
aam
imul
outsb
jle
adc
push
scas
iret
xor
arpl
push
push
xchg
lods
sbb
add
sub
pop
pop
repz
out
jp
fst
and
fwait
lock
mov
sbb
jle
dec
push
xorl
repnz
les
cld
jmp
mov
mov
xchg
pop
jo
and
fisttpl
xchg
rcl
fstpt
imul
imul
ret
jno
addr16
lods
bound
lds
push
icebp
mov
sub
fnstenv
adc
mov
cmp
loopne
pop
jle
or
or
shrl
int
dec
mov
jns
jge
mov
pop
ret
or
mov
inc
hlt
dec
pop
and
or
jbe
mov
push
repnz
ljmp
jb
das
lods
test
mov
inc
and
lods
clc
sahf
xchg
daa
mov
xchg
mov
fcoms
test
arpl
in
inc
or
jno
xchg
insl
mov
cmp
adc
mov
sub
andl
mov
xchg
lods
mov
push
test
popa
sub
mov
add
jne
test
jmp
mov
mov
gs
mov
xlat
xor
mov
xor
js
cmp
and
push
les
mov
ret
fldcw
shrb
and
out
int
mov
and
loop
fldz
bound
sti
push
pop
add
inc
lcall
out
sub
or
sub
xor
mov
fwait
aad
adc
sbb
sbb
dec
cmp
subl
mov
xchg
xor
and
dec
ds
ja
inc
dec
dec
arpl
pop
in
inc
push
pop
repz
test
sub
adc
xlat
ret
jg
aaa
repnz
int
cwtl
js
or
ss
rorb
jnp
dec
dec
cld
je
outsb
in
rcrb
lahf
aam
pmullw
in
in
aaa
in
mov
dec
imul
repnz
inc
mov
orl
mov
pop
push
and
addr16
dec
pop
cmpsl
inc
data16
adc
pop
lret
sub
jmp
sub
cmpsb
je
inc
pop
neg
pop
xchg
mov
jecxz
inc
adc
fnstcw
hlt
imul
loopne
movsl
xor
sbb
add
ljmp
sub
sub
scas
jmp
xor
pop
aad
repnz
xor
push
mov
decb
mov
push
sarl
jno
mov
sub
popa
sti
xchg
inc
mov
pop
mov
cmp
imul
sbb
in
mov
inc
sub
ficoms
inc
psrlw
ret
movsl
pop
jmp
icebp
and
loope
inc
movsb
icebp
movl
out
mov
push
in
or
sti
push
mov
jmp
arpl
fbstp
mov
jne
sub
mov
push
pop
cmpl
jbe
test
add
in
push
adc
sub
adcl
nop
xchg
mov
je
xchg
push
pop
add
out
jmp
mov
shll
cld
pusha
mov
add
outsb
shl
mov
iret
dec
popa
outsl
aam
and
or
mov
xor
mov
aaa
shl
dec
lret
sub
jl
int3
pop
sbb
sub
std
ds
jb
call
jl
cltd
gs
iret
fs
xlat
sbb
out
mov
hlt
in
push
in
mov
cmpsl
sub
inc
mov
inc
int
xchg
lret
or
adc
mov
inc
pop
sti
aam
inc
mov
int
sbb
adc
mov
jb
inc
cwtl
out
sti
add
push
lods
mov
push
sub
jns
test
sub
inc
cmp
aas
outsl
xor
insb
adc
sub
pushf
cmp
cs
sbbb
xchg
xchg
filds
outsl
jg
push
push
stc
sahf
test
jg
mov
sbb
pop
in
rorl
ja
adc
repnz
jmp
stos
xchg
leave
repnz
sti
icebp
addb
cmpsb
rorb
lahf
xor
imul
add
in
movsb
jl
repnz
insl
ret
ds
xchg
and
movsb
das
iret
test
lret
jecxz
jp
jae
mov
in
mov
xor
push
jbe
push
xor
jnp
mov
mov
push
shll
push
xor
mov
ficompl
imul
repz
orl
out
sahf
loop
mov
out
fistpl
cmp
fldcw
xor
std
xor
dec
mov
dec
xchg
pop
xchg
sti
adc
out
add
ret
test
and
loope
sub
add
arpl
pop
test
fmuls
push
aaa
sarl
repz
push
ljmp
nop
mov
movsl
ljmp
mov
scas
cmp
pusha
xchg
xor
imul
push
sbbb
xchg
mov
and
sti
bound
pavgw
mov
inc
jg
js
or
push
xor
add
jp
hlt
inc
sub
xchg
mov
sbb
push
pop
test
imul
rolb
lcall
pop
sub
pop
xchg
inc
push
pop
mov
dec
enter
lods
aas
sub
pop
push
pop
lock
movsb
jge
add
mov
rcrl
jl
syscall
add
push
lock
sbb
add
insl
lods
pop
data16
in
mov
ljmp
inc
ret
pop
jmp
mov
fwait
push
and
dec
jo
inc
lret
scas
sub
js
lods
sbb
iret
dec
cmc
fcoml
mov
je
mov
ljmp
jge
repnz
sar
insl
outsb
push
gs
rorl
jge
cld
mov
outsl
mov
dec
mov
rcll
xlat
loopne
cmp
inc
jge
repz
mov
sahf
xor
xchg
arpl
stc
loop
std
adc
cmp
cld
jl
fwait
dec
shr
jmp
jbe
int3
ret
out
dec
mov
addl
nop
mov
pop
sarl
xchg
aaa
jb
pop
push
fidivl
sub
pop
sub
cwtl
sbb
jae
daa
xchg
rolb
cmp
sub
idivb
cmc
int
inc
fwait
in
xlat
and
enter
adcl
call
inc
shr
mov
mov
jae
aas
lods
xorb
mov
in
repz
adc
jns
add
ret
mov
aas
cli
aas
dec
mov
sbb
loope
jne
movsl
stc
mov
mov
cmp
cmp
out
mov
in
push
fisubl
pushf
mov
in
adc
or
pop
cmpsb
stc
mov
sbb
mov
lock
out
popf
push
out
cmc
mov
lock
push
in
cli
inc
jp
fst
or
cmp
mov
cmp
inc
jmp
cmp
in
jae
sub
adc
lcall
je
aam
cmp
mov
pop
or
push
orb
sbb
imull
xchg
xor
les
xchg
clc
push
xchg
cwtl
cli
mov
push
ljmp
pop
imul
jecxz
add
cli
and
jecxz
push
add
arpl
sbb
and
sub
aad
inc
lods
cmpsb
xorl
xchg
mov
jo
roll
in
test
sub
adc
push
jecxz
shrb
fcmovne
dec
jno
out
mov
jnp
repnz
out
xlat
mov
jno
into
inc
insb
out
xlat
sub
sub
xchg
xor
xchg
adc
scas
or
cltd
aad
and
pushf
jecxz
bound
and
outsb
add
cmc
pop
cmpsb
push
mov
stos
dec
lret
push
sbb
mov
pushf
and
addl
jae
xorl
jbe
and
and
mov
lods
push
roll
jmp
popa
adc
xlat
dec
out
fnstcw
jg
or
mull
pop
adc
les
scas
pop
xor
xor
enter
mov
sbb
daa
adc
sarl
mov
mov
jb
mov
js
scas
in
mov
pop
dec
lcall
sti
outsb
js
pop
and
cli
cmpsl
inc
or
and
test
or
mov
and
or
call
jae
jecxz
fnsave
add
inc
jecxz
icebp
fs
jnp
out
ss
xor
add
scas
push
sarl
andb
loop
fisttps
adc
std
setge
xlat
xchg
scas
adc
or
mov
aaa
ficoml
and
test
popa
adc
xor
pop
pop
jnp
or
test
scas
movsl
pusha
jecxz
mov
and
adc
pop
mov
and
test
cmp
in
xchg
test
cmp
int
clc
cltd
xchg
aaa
push
xchg
sahf
mov
mov
jecxz
test
stos
sub
cmp
mov
jle
cmpsl
sub
push
into
add
orl
pop
mov
imul
push
sbb
sbb
pop
pop
ljmp
in
adc
pop
dec
fs
mov
mov
cmp
pop
call
or
es
mov
lret
xchg
cmp
pop
test
popa
mov
jg
mov
add
cmp
call
sarl
pop
adc
jnp
and
shlb
or
out
push
mov
mov
inc
in
jb
push
mov
imul
pusha
aad
aas
jl
lcall
dec
sbb
cmp
or
insl
repnz
mov
int
jbe
pop
outsb
movsl
mov
xor
in
mul
sbb
test
nop
ja
inc
jne
rorl
push
outsb
aaa
stos
sub
inc
mov
loop
mov
or
push
mov
stos
out
xor
or
xchg
push
ret
cmp
xor
mov
xor
inc
cmpb
gs
mov
fwait
sub
lret
movsb
and
rcr
mov
lahf
lsl
loopne
aas
inc
lds
mov
sbb
cs
cmpl
jl
mov
pop
loope
sbb
pop
sub
adc
pop
les
pop
pop
stos
and
sub
lods
mov
idivl
push
mov
stc
ficoml
dec
ret
mov
sbb
sub
les
mov
xor
idiv
pop
gs
or
les
sbb
dec
ds
jb
push
out
pop
push
sti
xor
mov
movsl
les
adc
idivb
lcall
ret
inc
push
xchg
outsl
cmp
idiv
popf
flds
mov
scas
imul
in
jae
push
mov
clc
arpl
cmp
mov
and
vmread
push
jb
ljmp
mov
xchg
mov
sbb
adc
imull
or
pop
and
es
jo
gs
movsb
fs
cmpsb
mov
movsb
sbb
daa
mov
pop
push
jbe
mov
repnz
or
aad
shlb
stos
ds
mov
clc
or
push
int
shlb
adc
cld
sub
mov
std
mov
js
mov
roll
add
sbb
fiaddl
mov
in
aas
cmp
and
pop
mov
popa
pushf
jl
arpl
test
sub
xchg
incl
push
and
out
fwait
jg
aam
jecxz
xchg
or
fadds
add
xor
movl
lock
mov
aam
repnz
enter
inc
leave
movsl
push
xchg
cmp
inc
sbb
das
out
mov
push
icebp
mov
and
pop
adc
repz
dec
xor
mov
cmpsl
mov
and
test
in
or
sub
stos
stc
mov
pop
cs
mov
mov
js
xor
jbe
inc
xor
leave
shll
mov
mov
andb
rcr
rcll
lods
dec
mov
inc
clc
jge
repz
ss
aaa
insb
hlt
inc
js
inc
push
pop
imul
mov
adc
ja
aaa
dec
dec
loopne
in
ja
xlat
adc
cltd
xor
jns
mov
push
sahf
push
mov
adcl
test
inc
cmpl
xchg
adc
sub
pop
inc
push
push
push
push
xchg
push
mov
or
loopne
add
lea
sbb
imul
cmpsl
lret
int3
sub
push
out
mov
loope
add
jmp
int
pop
cmc
ja
jnp
pop
sbb
mov
loope
pushf
aas
push
loopne
out
add
adc
or
or
aaa
rol
xor
aad
jo
jecxz
scas
std
mov
mov
push
repz
push
jecxz
test
jl
decb
std
pop
sub
repnz
clc
lret
jl
jle
xor
mov
imul
add
movsb
rorl
int3
dec
push
cmc
mov
andb
jnp
sbb
adc
test
cwtl
fmulp
push
pop
lds
push
bound
mov
enter
popf
add
cmpsb
outsl
ja
in
sti
mov
shl
push
cs
cmpsl
push
js
sbb
mov
stc
cltd
dec
ret
add
jne
dec
xchg
pop
stos
push
lret
xchg
sub
popf
xchg
push
sbb
and
xor
stc
outsb
dec
and
sub
mov
daa
xchg
orl
mov
adcl
stos
rcrb
pop
lods
pushf
leave
ret
or
sub
outsb
and
or
pop
in
cltd
test
or
add
push
or
dec
mov
and
repz
dec
push
into
mov
hlt
enter
ljmp
dec
sub
aam
jbe
cli
in
pop
cmp
call
mov
nop
mov
xor
push
addr16
inc
xor
mov
hlt
mov
jle
add
sub
js,pt
and
scas
sahf
sbb
push
push
pop
add
cwtl
aaa
jmp
xchg
ds
test
jmp
shlb
push
imul
sti
daa
out
lds
mov
mov
pop
or
pop
aaa
test
repz
test
inc
or
dec
test
pop
mov
push
movsl
ds
imul
xchg
add
jo
jbe
scas
push
mov
lcall
add
test
decb
outsb
outsb
xchg
repz
adc
inc
in
cs
lods
xchg
dec
mov
lea
pusha
mov
sbb
inc
jnp
sub
or
mov
insb
push
aas
jecxz
jnp
out
adc
pop
jmp
montmul
cmpsb
roll
pop
loopne
sub
jae
sahf
sbb
pop
xchg
sub
and
mov
add
inc
frstor
aad
std
idiv
mov
adc
sarl
xor
dec
cmp
mov
adc
ds
push
data16
push
inc
dec
cmp
sbb
scas
adc
lock
xor
and
jbe
stos
leave
cltd
xor
test
dec
iret
subb
fmuls
pop
and
add
and
or
fidivrl
xor
inc
test
das
test
dec
popa
mov
clc
fmul
pop
pop
mov
lret
mov
insb
andb
mov
lock
mov
pop
es
dec
stos
inc
jnp
xchg
or
pusha
mov
xchg
js
push
mov
outsl
shlb
imul
sahf
add
ss
test
xlat
jmp
and
imul
aad
jb
mov
or
cltd
je
pop
test
movsl
pop
sub
hlt
pop
inc
pop
dec
mov
mov
or
and
jp
test
mov
lahf
sub
pusha
or
adc
jg
push
out
pop
cmp
enter
sub
cmp
ljmp
fdivl
push
mov
push
int
mov
mov
cmp
cmp
loopne
fs
jmp
ret
sarl
jae
jno
dec
in
mov
and
outsb
push
push
mov
es
ret
xchg
mov
jecxz
pop
in
lds
test
xor
lock
push
rol
js
inc
lods
es
adc
insb
push
lods
inc
or
push
data16
icebp
sti
jbe
lret
shll
ljmp
cmp
sub
ljmp
es
repnz
push
mov
add
mov
push
mov
xchg
sub
test
mov
pop
clc
clc
fsubs
sub
test
and
mov
sbb
jl
pop
data16
mov
xlat
push
aam
xchg
and
xchg
jg
sahf
xor
addl
fisttps
lcall
scas
lahf
pusha
inc
sbb
mov
xchg
lods
loop
adc
jp
ds
clc
bound
inc
scas
push
cmp
jge
sub
popl
fs
or
mov
jbe
hlt
daa
loop
pop
push
mov
pop
sub
into
out
or
ljmp
fbstp
outsb
lods
sub
push
cmp
jge
inc
jp
inc
sub
pop
inc
popf
inc
push
sub
cmc
cmp
xchg
and
jg
jnp
ja
test
icebp
dec
cltd
inc
je
sbb
mov
xchg
pop
adc
cmp
addl
ljmp
test
jge
jbe
mov
sbb
adc
out
xor
add
push
addr16
dec
mov
pop
cmc
sub
cmp
fisubrl
lock
not
cmc
add
fdivrs
xor
xor
je
ja
sub
adc
dec
je
pusha
jmp
aad
outsb
xchg
negb
pop
push
cs
icebp
lret
loop
arpl
sub
insb
push
adc
test
sbb
out
push
cmpsl
out
mov
subb
lds
mov
mov
call
sbb
pop
or
jno
aam
ror
push
sbb
jp
fsubrs
int3
fstpl
insl
insl
xor
int
cmp
mov
sbb
mov
sub
jb
jmp
jg
adc
test
scas
bound
cmp
mov
jp
mov
into
cmp
int3
lret
xor
jno
pushl
push
jle
loope
sub
fnstenv
or
fildll
jge
incl
cmpsb
jmp
in
mov
cmp
lea
dec
movsl
xchg
pop
and
or
push
lods
stos
inc
aad
ret
shrb
or
scas
popa
mov
mov
cwtl
popa
jb
aaa
std
dec
add
add
xor
xchg
mov
das
mov
stc
pop
xchg
in
in
inc
cmpsb
xor
in
cmc
adc
fwait
arpl
scas
repnz
les
repnz
out
shr
sbb
repz
insb
out
sbb
xlat
repnz
dec
addl
mov
push
loop
leavew
ror
in
jo
xchg
add
iret
pop
nop
arpl
inc
or
mov
bound
fsqrt
inc
add
push
lods
inc
mov
mov
je
arpl
movl
inc
add
add
fbld
std
popf
imul
and
add
jnp
insl
mov
dec
jge
jae
fsubp
enter
rcrb
xchg
mov
xor
cli
jge
aas
dec
pop
jbe
in
lock
adc
ret
add
pop
pop
cmp
int
push
popa
mov
lea
dec
fwait
pop
mov
fmull
or
mov
orl
lcall
push
lahf
adcb
roll
pop
push
jle
fadd
inc
xorl
xlat
repnz
sarb
out
out
adc
jecxz
mov
xchg
inc
call
lods
and
stc
dec
cld
sbb
fildll
test
cmp
js
xor
into
add
inc
xor
xchg
jmp
mov
dec
dec
sarl
mov
outsb
push
jns
inc
cmp
pop
and
inc
bound
dec
cmp
shlb
leave
or
pop
cmc
xchg
mov
cwtl
add
sub
movsl
adc
or
jns
and
mov
fs
mov
adc
lahf
rorb
out
dec
mov
idiv
or
mov
int3
push
and
and
les
bound
add
inc
stc
dec
fdivrl
faddl
mov
stc
inc
shll
jle
outsb
jbe
imul
movsl
jp
loop
add
xorb
xor
je
mov
cmpl
arpl
mov
or
xchg
pop
push
stc
inc
lret
enter
jne
mov
test
xor
cli
cmp
mov
push
xchg
fwait
jl
jnp
lahf
mov
testb
out
cld
fiaddl
arpl
jmp
mov
mov
dec
out
int
pop
cmp
lods
rorl
mov
data16
mov
xchg
mov
movsb
mov
out
mov
xor
jb
and
ret
outsl
mov
fs
jg
insw
cmpsl
jne
lds
add
pop
dec
aaa
scas
xor
fstps
vmread
xor
fs
dec
dec
add
dec
fs
push
or
mov
ss
dec
std
clc
mov
sub
jecxz
test
dec
push
inc
imul
decb
test
out
iret
lods
push
push
fs
push
sub
mov
sbb
jecxz
lods
or
xor
nop
inc
sub
insb
int
out
repz
xchg
sub
hlt
scas
cmpsb
ss
and
jg
xor
call
pop
lods
and
addl
sbb
or
sbbl
fidivrs
fidivl
jno
push
aam
pop
aaa
stos
out
lock
ja
add
movsl
ljmp
xchg
jb
hlt
outsb
mov
add
iret
and
sete
sbb
inc
jecxz
outsb
xchg
movsl
enter
nop
jmp
cmp
cmp
pop
fistps
mov
loope
push
lock
jne
hlt
sahf
pop
jbe
int3
pop
cmp
fwait
pop
pop
cmp
fdivrl
inc
jae
add
and
divb
adcb
pushf
rolb
pop
cmpsb
pushf
and
std
rol
ret
mov
ret
das
movsl
ja
cwtl
xchg
jmp
adc
mov
or
aad
adcb
call
pop
push
scas
into
pop
sbb
add
fdivl
pop
mov
sub
fwait
scas
fimull
scas
inc
push
es
out
and
xchg
add
xchg
jge
leave
icebp
sub
vpaddw
inc
jmp
and
xchg
icebp
mov
pop
cmpsl
xor
pop
inc
fucomip
sub
add
pop
pop
mov
and
stos
pop
pop
xchg
xchg
or
les
lret
jns
adc
addb
ja
mov
fiadds
mov
xorb
or
testb
fdivrs
jo
push
add
adc
in
adc
sub
lea
sbb
pop
pop
add
dec
fnstenv
iret
out
pop
test
shr
dec
call
sarb
add
xor
cmp
fbstp
cs
std
xchg
sub
les
mov
idivl
sbbb
adc
jae
ljmp
sarb
jge
adc
push
pop
sti
out
mov
cmp
xchg
insl
lods
lea
pop
add
popa
adcb
cli
and
push
ret
sti
or
ds
sub
mov
faddl
out
add
sbb
dec
dec
scas
mov
out
dec
popa
out
or
movsl
in
in
inc
jb
xor
ret
mov
fs
xor
dec
popf
ret
cmp
mov
cmpsl
push
adc
push
into
test
pop
movsb
and
imul
lods
mov
mov
and
mov
ret
rorb
loope
mov
pop
jmp
js
jmp
fsubrl
sub
push
and
mov
movlps
xlat
mov
xor
orb
mov
pop
xchg
fcomip
push
mov
and
test
cmp
push
dec
mov
or
mov
ja
cmc
inc
out
es
jbe
and
mov
cwtl
enter
or
into
mov
push
imul
xlat
je
fs
mov
in
les
sub
and
test
adc
lret
bound
and
icebp
std
popf
mov
loopne
out
mov
mov
cmp
fisttpl
test
pop
sub
pop
scas
lods
add
ss
out
sub
cwtl
mov
sarb
cmpsl
sub
pop
dec
mov
fnstcw
push
mov
mov
mov
and
movsb
xor
iret
pushf
cmp
mov
data16
dec
cli
bound
inc
jo
mov
jle
or
pop
aaa
adc
test
and
cmp
adc
idivb
adc
sbb
int3
xor
mov
stos
lods
les
into
aam
mov
sub
cmp
sub
mov
in
fldt
adc
addr16
mov
outsl
nop
ja
lods
leave
jl
shl
mov
lods
cmp
ficoml
mov
fiadds
cmp
clc
lcall
fstp
inc
dec
stos
fimuls
mov
scas
sub
inc
movsb
cmpsb
fstpl
dec
push
add
rcrb
xor
scas
loop
xchg
pusha
pop
jecxz
xor
dec
scas
decl
pop
lahf
fwait
popf
xchg
sub
or
test
mov
push
test
mov
mov
jae
andb
push
into
inc
scas
fnstcw
fbstp
inc
loop
sub
inc
dec
aad
xor
jg
bound
inc
je
lret
push
aam
pop
hlt
inc
ss
scas
ja
mov
movsl
or
or
clc
dec
scas
ret
push
je
pop
imul
sub
js
addr16
lcall
pop
sub
sub
sub
notb
jp
cltd
fimuls
mov
cltd
and
dec
hlt
cmc
and
xor
ds
dec
cmp
cmp
cmp
daa
pop
and
pop
popf
adc
lret
sub
rcll
push
test
cmp
push
adc
bound
cld
test
into
inc
dec
push
lea
mov
pop
in
in
push
fdivrl
and
rcl
xchg
mov
pop
test
adc
sub
adcl
mov
add
lds
dec
jb
xchg
dec
pop
and
push
test
mov
out
add
in
jg
sbb
xchg
add
add
jb
push
sub
lods
dec
or
fcoms
pushf
adc
inc
xor
sar
xchg
mov
pop
pop
repnz
int3
xchg
testb
lock
jp
jo
out
fstpl
lods
mov
divb
lahf
in
xor
aaa
xor
and
pusha
xor
mov
jno
and
push
and
sbb
jmp
lahf
jae
push
xchg
inc
scas
sbb
leave
in
lahf
push
dec
pop
push
and
pusha
les
stc
mov
jl
sub
xor
cmp
inc
xor
pop
es
cltd
adc
cmp
repnz
aam
push
in
ret
adc
fidivrs
iret
add
sbb
cld
clc
fistpl
leave
pushf
jno
dec
xchg
adc
push
insl
cld
inc
inc
or
out
sbb
cltd
sbb
mov
and
cltd
pop
mov
leave
test
in
mov
mov
mov
daa
and
lods
enter
iret
inc
repnz
xchg
aad
and
hlt
push
push
cmc
loope
push
lret
in
cmp
cld
push
adc
sbb
test
call
fistps
lods
nop
mov
popa
mov
sti
cmp
fcomip
iret
pop
mov
push
sub
add
lahf
xlat
xchg
cmp
add
arpl
cmc
ret
faddl
cmpsl
mov
jae
das
sahf
push
jge
mov
mov
dec
test
lods
mov
into
stc
popa
or
cmp
mov
repz
jge
cmpsl
fdivrs
dec
adc
sbb
inc
rcrl
psubsw
mov
xlat
je
cwtl
loopne
adc
push
dec
mov
outsl
cmpsl
push
cmc
lcall
mov
insb
lcall
mov
mov
push
jl
data16
popf
arpl
sbb
mov
aad
adc
ret
add
int
fcmovbe
sti
pop
jnp
les
orl
sbb
jl
add
inc
push
popa
fwait
jg
push
cmp
data16
ret
and
mov
xchg
lods
test
int
mov
test
jecxz
pop
je
inc
xchg
cmp
decl
dec
lods
out
jge
les
fiadds
pop
mov
ficoms
cmpsl
mov
test
popa
mov
repnz
es
or
cmpsb
xor
xor
jl
mov
jns
sbb
push
add
imul
fists
adc
out
push
mov
test
add
xchg
enter
xchg
push
cmp
mov
add
jb
fwait
orb
push
jo
mov
cs
outsb
push
subb
into
into
jbe
adc
outsb
fsts
mov
push
mov
call
adc
or
xchg
cmp
insl
in
sub
je
mov
mov
ljmp
push
jp
jb
outsl
fistps
push
iret
pusha
test
push
cmpsb
adc
in
sub
add
mov
mov
cmovb
pop
mov
and
mov
call
aaa
or
ss
mov
ja
xor
mov
popa
pop
xor
pop
mov
sub
sub
sub
pmaxsw
sbb
mov
out
dec
scas
shll
inc
cmpsl
fmul
xor
test
int
mov
cwtl
fisubl
jle
sbb
mov
and
push
mov
lds
add
ret
or
jge
push
or
lea
jb
dec
je
loop
dec
sbb
lods
leave
cmp
jns
push
mov
imul
mov
mov
sbb
pop
shr
enter
and
call
push
mov
andl
push
int
sahf
sbb
mov
cmc
mov
cmp
mov
or
lret
push
pop
stos
enter
adc
subl
loopne
push
shrb
jo
xchg
in
enter
mov
xchg
mov
ds
cmp
push
stos
cltd
jb
int3
cmp
push
or
inc
repnz
pop
inc
xor
mov
cmp
lock
sbb
je
lcall
testl
sbb
mov
sbb
cmpsb
pop
imul
push
add
sti
outsl
sbb
xchg
or
xlat
lret
sub
sub
dec
xchg
pop
mov
outsl
pop
arpl
xchg
xchg
outsl
xchg
ret
xchg
lcall
sbb
lret
sub
jno
subb
adc
mov
push
mov
fdivrp
or
ret
xchg
ds
cmp
xchg
in
push
das
mov
and
cmp
push
fnstenv
negb
inc
mov
loope
loopne
icebp
mov
data16
mov
mov
arpl
pop
repnz
xor
subb
mov
push
out
ss
cmp
push
pop
je
sub
push
sbb
repnz
jbe
jnp
rcll
sahf
jmp
aas
test
ljmp
or
mov
jno
sbb
add
add
adc
push
xchg
mov
les
sub
out
out
outsl
and
push
sub
negb
mov
ret
push
pop
mov
or
outsb
es
xchg
xor
push
fldenv
dec
push
sbb
add
and
and
sbb
jge
cld
and
std
imul
sbb
adc
aam
lret
out
xchg
push
cli
jb
jmp
gs
repnz
sub
push
sub
dec
add
call
pop
jne
mov
nop
aad
repz
fwait
inc
popa
cmp
xor
lock
aaa
or
xchg
js
mov
cld
in
arpl
popf
xchg
mov
test
push
push
stos
sub
dec
flds
out
jge
andb
movsb
push
popf
jmp
repz
or
or
xchg
cmpsl
and
push
adc
inc
aad
aas
jl
mov
cmp
movsb
in
push
cmpsb
imul
xchg
cmc
mov
cltd
mov
daa
pop
daa
xlat
push
mov
pop
jns
call
dec
inc
in
jb
dec
add
lods
add
insb
insb
xchg
lcall
lret
jns
xacquire
loop
sbb
dec
fs
pop
and
jb
push
xchg
inc
ret
xor
ds
jg
mov
in
cmp
repnz
mov
cmc
pop
inc
jg
cmpsl
sbb
adc
loopne
test
xchg
popf
sbb
cltd
or
xor
aam
in
popf
testb
lcall
fwait
mov
test
mov
mov
cltd
lds
je
cmp
xlat
pop
fucomp
inc
int
sub
jmp
push
clc
sbb
lods
add
add
das
mov
push
inc
out
jb
or
mov
and
mov
sub
sbb
pop
das
xor
in
mov
int
clts
lods
divl
and
negb
cli
stc
jle
xlat
pop
adc
pop
inc
divb
ds
pop
data16
jo
cmpsl
sbb
add
imul
add
mov
mov
adc
lahf
js
inc
mov
push
push
leave
adc
jne
sahf
mov
add
mov
or
dec
xchg
and
sbb
push
xchg
xlat
imull
popf
iret
mov
stos
xchg
in
ljmp
mov
mov
aas
add
daa
loopne
dec
enter
es
jnp
mov
or
arpl
ja
jae
mov
ss
jb
aam
inc
xchg
movsb
fstps
addr16
or
inc
xor
das
pop
cwtl
mov
pop
dec
cmc
lea
rclb
sbb
test
lds
sbb
std
int
pop
sub
stos
cmp
mov
fimull
pop
xorb
aas
fdivrs
aam
imulb
stc
dec
cmp
pop
xor
push
cld
mov
fwait
mov
js
pop
cmp
xchg
inc
sbbl
push
cmp
dec
or
dec
arpl
cmp
cltd
adc
in
dec
es
pop
insb
xchg
movsl
ja
push
pop
popa
mov
ds
repnz
dec
jge
sub
xchg
adc
sub
in
push
movsl
lea
lods
les
add
add
test
mov
je
inc
stos
gs
addr16
cwtl
insb
mov
adc
sbb
pop
jno
pop
jl
test
sbb
roll
repnz
push
dec
aas
fucomi
dec
xchg
out
icebp
mov
or
adc
push
add
sub
daa
popa
or
cmp
or
ficomps
outsl
dec
jmp
sbb
repz
cmp
pop
add
xchg
shlb
adc
and
mov
icebp
shll
jp
mov
pop
mov
push
andb
hlt
hlt
mov
in
mov
jl
out
shll
pop
push
xchg
mov
and
sbb
adc
lahf
iret
adc
imul
clc
xchg
ljmp
in
out
lret
lret
into
cmc
out
sub
sbb
cli
rcll
inc
aaa
popa
jns
lret
mov
mov
push
mov
std
pop
mov
movsb
xor
inc
cmp
cmpsl
loopne
inc
inc
sbb
push
into
cmpsb
inc
loopne
scas
push
out
loop
xchg
mov
push
mov
orb
mov
gs
sbb
aaa
nop
and
mov
cmpsb
icebp
fnstsw
or
aas
pushf
adc
aaa
call
bound
or
out
leave
rolb
and
gs
lahf
aas
adc
insl
and
cs
sub
ret
mov
dec
push
or
ss
mov
dec
cmpsb
ret
arpl
fsubrl
das
mov
mov
cmpsl
in
adc
sub
cld
dec
shl
test
inc
inc
pop
int
aaa
and
mov
xor
icebp
push
mov
lea
test
jae
pop
and
icebp
dec
mov
es
mov
jae
cmp
mov
mov
mov
imul
cmc
adc
push
lret
xor
jno
mov
adcl
es
leave
dec
fcoms
insb
int
mov
fisttpll
jmp
leave
aaa
add
jno
mov
stos
cmp
fstps
sbb
icebp
gs
sub
sbbb
xchg
dec
xorb
push
dec
popa
sbb
dec
and
dec
imul
call
inc
lock
xchg
mov
insb
fwait
or
jmp
push
cmp
or
sbb
lea
dec
fistps
cmp
das
nop
mov
mov
pop
popf
mov
push
push
cli
push
stos
mov
sbb
add
push
jge
mov
mov
shr
cli
mov
and
mov
sahf
mov
lds
adc
sbb
xor
adc
xchg
push
jb
adc
push
add
add
test
add
dec
pushf
out
mov
jmp
data16
mov
aas
call
mov
repz
aas
xchg
enter
mov
jb
arpl
out
mov
push
jg
push
movsl
cmc
or
cs
push
mov
ficomps
xor
or
bound
aam
fs
jecxz
sub
dec
mov
push
call
and
inc
and
push
js
lret
sahf
inc
cli
es
lods
mov
call
pop
adc
lcall
lods
xor
cmp
pop
push
jge
mov
xor
idivb
or
xor
mov
cld
push
adc
cld
mov
decl
lret
xor
push
mov
insb
sbb
ret
es
out
mov
mov
mov
jne
daa
add
xor
push
adc
push
jo
mov
popf
add
sub
dec
or
bound
sahf
dec
xchg
int3
stos
shlb
adc
cmp
or
je
xchg
clc
sahf
cmp
js
xchg
loope
pop
xchg
jge
xchg
add
popf
inc
inc
or
or
mov
addr16
lea
xor
adc
xor
and
mov
filds
lock
mov
cwtl
ja
push
das
insl
fnstsw
mov
jl
in
arpl
mov
xchg
fldenv
mov
sahf
add
scas
or
sub
out
nopl
dec
or
fwait
push
stc
insb
inc
dec
cmp
rolb
jmp
mov
loope
aaa
aaa
sahf
jl
stc
cmp
subb
in
or
and
jl
hlt
ja
inc
mov
lret
jmp
sbb
cld
mov
bound
aad
ss
push
mov
fsubrl
add
mov
icebp
inc
cwtl
ror
add
inc
out
jnp
adc
ljmp
mov
rcrl
dec
fdivl
mov
fs
lock
adc
push
jns
and
scas
or
sti
stos
xchg
pop
ds
test
or
push
sbb
leave
push
int
aas
mov
pop
mov
inc
inc
mov
and
dec
in
lret
mov
sbb
popa
out
scas
push
nop
xor
pop
clc
dec
std
roll
pop
and
dec
pop
rcrb
fstl
jge
sahf
test
adc
dec
pop
in
stos
sub
mov
adc
clc
mov
jne
pop
adc
push
in
jg
fmuls
scas
int
aam
pop
enter
fidivrs
repnz
mov
push
cltd
es
mov
sub
cmp
stos
cmp
push
gs
add
mov
jge
mov
and
shrl
icebp
xor
insl
lret
ror
mov
dec
orb
sbbl
sbb
lods
and
cli
mov
ljmp
jae
xchg
sub
hlt
add
mov
pop
ljmp
and
fldt
jne
cmp
pop
insb
lret
push
testb
js
add
jecxz
stos
test
dec
je
lds
outsl
cmp
repnz
inc
adc
sub
mov
lret
jb
inc
dec
imul
scas
pushf
outsl
iret
dec
out
cmp
add
jl
je
sub
xchg
daa
xchg
ficoms
xchg
hlt
or
pop
add
xchg
mov
adc
mov
and
das
push
xchg
icebp
dec
imul
mov
cltd
jne
lcall
insl
fbstp
jmp
shll
iret
mov
shlb
outsl
or
cmp
jg
cmp
pop
stc
std
lea
mov
ljmp
int3
dec
fwait
mov
push
or
pop
and
hlt
push
fildl
test
loopne
fnsave
aaa
sbb
out
pop
push
adc
and
cmp
pop
jo
dec
int
xchg
cmpb
daa
xor
xor
in
es
sbb
xor
push
sbb
jle
push
jnp
xorb
addl
xchg
mov
arpl
mov
test
leave
dec
sub
mov
int3
xor
pop
xchg
mov
xchg
inc
lret
ret
mov
or
es
mov
lret
xchg
xorl
push
repnz
sti
mov
adc
lock
iret
xchg
jle
adc
popa
iret
shl
sub
dec
mov
inc
mov
adc
sub
cmp
fs
rorb
mov
push
cmc
rcl
gs
cmp
pop
xchg
xchg
out
data16
fwait
mov
add
in
frstor
pop
scas
xor
xchg
in
stc
jb
mov
push
shll
add
jo
jb
jg
inc
mov
push
out
in
aaa
dec
dec
cmpl
xchg
popf
in
jmp
lret
mov
rorl
nop
push
lahf
aad
arpl
mov
orb
xchg
ret
mov
shll
insb
pop
into
stos
ss
push
add
nop
push
in
pop
out
lret
dec
insb
mov
mov
in
xor
sahf
sbb
lret
gs
jae
sti
inc
sbb
addb
mov
push
movsb
cmp
adc
cld
mov
das
ljmp
xchg
test
out
pusha
and
and
mov
flds
mov
xor
repnz
fs
push
mov
or
arpl
sbb
lods
mov
ss
inc
cs
fistps
loop
sbb
jne
adc
jne
sbb
pop
insb
scas
sti
bound
jle
dec
in
sub
xchg
inc
push
jmp
mov
into
xchg
aas
jp
adc
addr16
es
sbb
lock
data16
add
xchg
jbe
or
pop
fcomps
push
or
int3
enter
fcomps
lds
push
pop
cmp
test
jle
lret
stos
cmp
icebp
inc
in
clc
gs
fadd
pop
in
xlat
pop
aad
mov
sbb
add
dec
popf
adc
leave
mov
lcall
out
das
pop
ja
dec
or
xchg
and
rcrb
loope
mov
arpl
cs
mov
dec
lret
negb
dec
pop
adc
out
mov
cwtl
mov
add
subl
xorb
pop
dec
pop
and
jb
test
inc
lcall
ds
cmpsl
fwait
pop
iret
aas
sbb
in
out
jne
rcr
pop
addr16
popa
js
rolb
insb
and
std
fldenv
lods
push
out
xchg
xchg
fwait
dec
hlt
aas
in
xchg
cmc
rclb
and
xchg
mov
movsb
mov
lea
and
outsl
mov
adc
inc
mov
jnp
dec
lds
daa
psadbw
mov
xlat
dec
stos
cld
push
or
fwait
jne
xor
test
mov
or
fwait
cmp
or
jg
pop
iret
out
shl
push
popf
outsl
mov
mov
xchg
mov
cmp
pop
inc
sahf
xor
cwtl
add
and
lcall
add
aam
jg
sti
sbb
sub
cltd
insl
pop
sar
mov
dec
and
and
call
mov
sarb
adc
adc
jl
in
adc
loopne
push
out
add
addr16
lret
mov
test
or
mov
call
fdivrl
ret
ds
imul
sbb
mov
in
nop
xchg
pop
lods
xorl
movl
ds
jp
add
lret
add
shll
loope
cmpsb
jne
cmp
xchg
add
inc
lret
cmpsl
and
fstpt
push
rcrb
inc
imul
loop
out
aas
int
dec
jecxz,pn
shlb
xchg
clc
sbb
adc
insb
out
jne
cwtl
pop
fists
sbb
or
jbe
in
jno
pop
testb
add
cmp
pop
nop
push
mov
in
lea
popa
cs
ljmp
cltd
jne
inc
jnp
jbe
lret
int3
mov
cmp
mov
jb
icebp
xchg
bound
shrl
shl
inc
dec
movsl
ja
out
icebp
adc
cwtl
int3
mov
mov
imul
push
add
es
and
cmc
dec
mov
push
sub
fcoml
test
test
pop
mov
xlat
cmpsl
subb
and
outsl
sub
lock
adc
pcmpgtw
scas
mov
and
hlt
aad
and
pop
pusha
mov
test
pop
das
dec
pop
jg
pop
push
out
int3
movsl
xchg
inc
ds
or
je
pop
shl
imul
or
cmp
arpl
push
in
adc
mov
mov
nop
cld
mov
std
jne
roll
inc
dec
pop
pop
jae
push
pushf
pop
jb
mov
imul
xlat
push
sub
jae
pop
js
inc
mov
pop
into
pusha
and
adc
scas
mov
mov
sub
js
add
pop
cmpsl
mov
movsb
cmp
push
shll
lahf
push
ja
lret
fistpl
stc
pusha
sub
push
jbe
testb
adc
mov
pop
ss
daa
jbe
in
int3
push
int3
bnd
out
pusha
imul
jge
movsl
out
and
scas
pop
add
jb
mov
fisubl
jecxz
dec
rolb
xchg
les
hlt
enter
push
movsl
roll
call
xchg
mov
test
insl
int3
hlt
das
shlb
xor
sbb
push
out
sbb
xchg
test
pop
leave
stc
ds
push
fiadds
test
nop
hlt
adc
jns
cmp
ds
mov
cmp
stc
leave
addr16
iret
xor
inc
sbb
daa
mov
stc
fistps
cmpsb
pushf
daa
mov
popa
mov
and
inc
rclb
test
adc
js
mov
loopne
or
xchg
mov
adc
cmp
inc
in
add
add
imul
ss
pop
movsb
enter
int3
fstpl
dec
sbb
add
in
out
jl
or
mov
mov
out
adc
fbld
lcall
mov
jne
mov
sub
sbb
fsts
xchg
mov
mov
clc
add
pop
lcall
mov
push
fadd
or
mov
dec
or
test
loopne
mov
iret
push
sahf
push
push
or
dec
push
push
cmp
das
adc
iret
xlat
mov
push
jo
add
cld
or
add
movsl
orb
cmpsl
cmovnp
rcrb
fsubrl
pop
loope
faddl
or
xorl
sub
arpl
pop
aam
test
lods
mov
jb
pop
jne
pushf
jmp
stos
mov
mov
sub
jmp
ljmp
push
outsl
iret
pusha
mov
addr16
dec
push
loopne
nop
pop
jg
icebp
xor
mov
divl
int
movsb
call
sub
mov
ljmp
daa
mov
cmpsb
pop
mov
adc
dec
cwtl
add
adc
pop
jmp
or
mov
aam
cwtl
mov
xchg
xor
jb
test
adc
pop
out
out
clc
push
daa
xchg
mov
lahf
cmp
lret
mov
stos
adcb
jne
sbb
test
aad
sbb
fnstsw
dec
dec
mov
inc
dec
fistpl
pop
cwtd
mov
flds
push
stos
bound
in
jl
test
stos
mov
mov
ds
sbb
mov
jmp
mov
cmc
dec
cmc
mov
jge
xchg
push
mov
leave
jae
cli
jb
jg
test
jmp
cld
xchg
lock
mov
add
lret
cltd
lahf
ret
mov
cmp
add
int3
daa
mov
cmpsl
popf
sub
push
mov
popf
lock
in
push
sbb
sub
mov
xchg
stos
sar
ja
iret
xchg
add
mov
xchg
pop
je
pop
xchg
xor
or
lock
inc
lret
pop
fistpll
aam
mov
int
push
push
mov
inc
pop
inc
pop
es
push
imul
int3
movsl
ds
frstor
pop
cli
insl
pop
scas
push
mov
dec
sbb
enter
sbb
pusha
sbb
add
addr16
mov
pop
stos
pop
clc
jb
addb
jg
sbb
ds
imul
retw
and
push
into
stos
icebp
pop
imul
imul
inc
fwait
mov
mov
add
mov
lds
inc
mov
and
pop
mov
iret
push
dec
mov
and
sbb
mov
dec
dec
lahf
pop
js
adc
inc
gs
pop
cld
cmp
insl
ss
ljmp
imul
dec
stos
adc
or
sbb
rclb
aam
push
cld
jo
cmpsl
sub
sbb
mov
out
or
test
or
sbb
cmp
in
stos
lret
xchg
lock
mov
fwait
push
lcall
mov
insb
repz
mov
enter
jecxz
adc
daa
inc
jmp
mov
dec
add
divl
lcall
inc
aad
or
add
loopne
aad
fnstsw
dec
loope
jmp
or
sbb
inc
out
fistl
clc
hlt
adc
mov
cs
movsl
xchg
and
mov
pop
xor
outsl
sbb
int
xchg
jne
in
andb
hlt
push
add
jno
data16
inc
add
dec
popf
jnp
xor
fs
loop
pop
mov
out
cmp
jl
mov
fcompl
ss
loopne
dec
push
cltd
enter
int3
mov
loop
lea
xchg
pop
jge
popf
mov
icebp
hlt
in
pop
in
mov
sbb
pushf
popf
mov
out
xchg
daa
xchg
in
add
push
cli
iret
add
mov
jae
es
inc
mov
adc
jmp
push
or
lcall
pushf
ret
enter
push
jg
loopne
dec
push
push
vpacksswb
insl
xchg
jb,pn
cltd
mov
jmp
pop
push
or
lret
mov
jnp
mov
popf
insl
sahf
sti
movsl
lods
push
pop
inc
dec
or
add
roll
idivl
xchg
pop
or
loop
xor
mov
jo
iret
jnp
push
pop
pushf
aaa
inc
mov
outsb
mov
push
pop
or
fstpl
mov
dec
fucom
xlat
pop
add
adc
fisttpl
xor
nop
jbe
push
or
xor
imul
js
in
insl
mov
and
cwtl
stos
fld
jne
and
inc
cli
repz
fcmovnb
popa
std
dec
xchg
imul
jbe
cmpl
push
sub
lock
push
xor
testb
mov
add
mov
xchg
and
in
sahf
inc
mov
test
push
outsb
aaa
adc
or
mov
scas
xor
sub
jne
imul
imulb
jnp
das
or
aas
dec
xchg
scas
ficoms
je
push
sarl
push
fisubrs
and
mov
js
mov
xlat
cmc
shl
clc
test
fwait
je
xor
mov
push
sbb
cmpsl
pop
pop
cmp
adc
mov
cmpsb
xor
pop
push
cltd
jo
adc
mov
mov
cltd
in
dec
das
push
ret
inc
in
adc
jns
jb
rclb
int3
and
out
fsubrl
adc
add
cmc
fidivrs
dec
inc
test
dec
jl
lea
sbb
rorl
jnp
xor
aaa
shll
pop
fildl
rorl
dec
push
xor
lcall
cmp
jno
adc
cltd
cmc
sub
jbe
mov
push
jae
xchg
mull
or
jle
test
data16
or
sub
int3
mov
push
arpl
mov
sti
push
sti
lods
add
insl
scas
inc
xchg
mov
fmuls
shrl
and
cltd
jnp
mov
inc
pop
test
fnstenv
xchg
mov
inc
out
stc
mov
movsl
scas
mov
push
clc
sub
pop
mov
jne
out
xor
xor
mov
out
pop
and
xchg
cmpsb
xchg
xchg
in
je
js
mov
popa
fisttpll
mov
or
in
pop
cltd
movsl
xchg
push
imul
in
push
int
out
hlt
sbb
mov
pop
shrl
enter
mov
xor
or
add
push
push
fnstcw
imulb
mov
loope
fiaddl
or
mov
pop
pop
je
jno
pop
mov
push
mov
or
mov
addr16
aaa
insb
hlt
lahf
jg
ljmp
or
jbe
inc
xor
mov
inc
sbb
cmp
aas
push
xchg
xorb
orl
js
jle
dec
jp
cmp
inc
and
lcall
lea
out
and
cltd
pop
jae
adc
mov
sub
aaa
es
in
add
inc
lea
xchg
pushf
cwtl
ror
lret
pop
jmp
test
dec
lcall
in
test
lret
in
fsub
and
xor
bound
jnp
in
lahf
jnp
lods
jle
bound
shll
out
xor
pop
divb
sub
mov
push
xchg
dec
in
mov
aam
ljmp
movsl
cmp
push
test
pop
adc
movsb
adc
mov
inc
jge
mov
movb
push
orb
cmp
mov
mov
cli
andb
cmp
mov
mov
gs
cltd
push
orb
into
int
or
lea
cmp
xor
addr16
xor
xchg
in
and
mov
adc
mov
shl
adc
pop
dec
sub
mov
push
popa
repz
insl
cs
cmp
cmp
or
xor
cmpsl
into
mov
add
int
jmp
pop
aas
sub
stc
test
jecxz
in
mov
test
sti
xor
push
cs
addb
xchg
add
sub
fbstp
or
ja
mov
or
cmp
in
iret
xchg
scas
add
imulb
sub
add
aas
loope
and
rolb
mov
into
dec
xchg
mov
xchg
inc
sarl
sub
scas
jmp
in
inc
pop
shrl
shlb
add
cs
sbb
xchg
mov
adc
sub
mov
xchg
xchg
repz
adc
ss
mov
adc
test
stos
cmp
daa
cmc
and
fisubl
repnz
fadds
mov
in
or
es
hlt
inc
inc
jns
mov
pop
add
mov
sbb
xor
mov
insb
adc
xchg
add
dec
pushf
idivl
mov
fsubs
cmp
hlt
add
mov
icebp
daa
mov
dec
rcrl
movl
push
cwtl
and
sub
shl
out
cmp
out
jae
xor
insb
loopne
xor
lods
sub
xor
and
xchg
dec
pop
and
mov
call
sbb
jl
mov
std
and
or
or
outsb
out
into
pop
mov
inc
push
dec
int
iret
call
faddl
movsb
out
movsb
data16
movsb
add
mov
add
ss
or
mov
repnz
nop
cwtl
outsl
les
push
xchg
mov
subl
jecxz
popf
adc
popf
mov
psubb
sahf
mov
dec
add
push
pop
mov
push
xlat
js
in
push
xor
add
inc
fcmovnb
xchg
test
dec
sub
sbb
outsl
adc
outsb
adc
or
mov
mov
mov
in
push
lods
stc
xor
mov
inc
or
push
nop
lcall
mov
add
leave
mov
outsl
out
fisttpl
test
loope
dec
sub
mov
xchg
and
jge
lea
inc
add
rcl
fcompl
leave
adc
pop
pop
jl
scas
inc
pop
push
pop
shlb
stos
pop
or
out
movzwl
adc
jmp
imul
xchg
push
hlt
sub
push
push
push
test
add
in
push
mov
mov
inc
jb
lods
xor
cs
mov
stc
fisttpll
add
push
test
lret
dec
push
pop
push
pop
cmp
push
in
pop
leave
aas
sbb
int
pop
rclb
neg
fisttpl
test
mov
addb
outsl
out
negb
mov
imul
lods
inc
jbe
mov
sub
sub
cmp
sahf
fmulp
cmc
out
out
pop
ljmp
or
add
fdivrs
inc
out
jo
dec
out
fnstenv
inc
enter
pop
push
pusha
mov
jp
adc
sub
repnz
push
pop
cvttps2pi
ljmp
outsl
dec
lock
negb
and
pop
xchg
cld
xchg
mov
pushf
xor
inc
lahf
loopne
xchg
push
xor
aad
fidivrl
ret
push
ret
jnp
xor
cmc
jl
sub
push
push
or
xor
jo
int3
mov
in
fnstcw
out
xchg
inc
jae
xlat
outsb
fists
or
sti
push
mov
sbb
xor
add
mov
mov
jne
orl
mov
adc
rcrl
or
add
js
dec
stos
jne
mov
icebp
out
imul
lds
iret
mov
push
xor
pop
in
movsl
inc
outsb
adc
lods
cmp
cmp
bound
pop
lods
ret
mov
sbb
pop
adcl
jne
sub
ret
out
mov
imul
ficomps
aaa
sub
fcomps
sbb
mov
movsb
dec
popl
xchg
test
outsb
mov
js
js
scas
pop
iret
lcall
shll
scas
fnstcw
sub
out
mov
add
jge
int
shrl
movsl
sub
stos
std
popa
pop
mov
xor
das
lock
add
mov
and
jne
fwait
xorl
fistpl
out
iret
add
orb
sbb
jb
stos
lock
cmp
and
or
cmp
jl
movsl
xlat
jl
adc
in
sbb
rclb
je
mov
adc
mov
mov
adc
pop
xchg
mov
enter
mov
add
xor
adc
lret
ret
bound
ror
mov
sbb
cs
mov
fwait
dec
movsl
mov
xor
mov
cmp
bound
cmp
xchg
pop
xchg
out
ret
dec
lret
outsb
mov
add
add
lods
pop
cmp
fcoml
gs
mov
mov
push
and
outsl
sbb
jnp
cmp
and
iret
and
outsl
imul
jo
pop
and
loope
push
jbe
loopne
sbb
rorl
adc
xor
fistpl
sub
mov
data16
jle
push
adcl
xlat
iret
inc
hlt
push
dec
outsb
cmp
add
dec
repz
cmp
pop
lds
cld
jo
lret
std
sbb
add
add
push
xor
and
cmc
repz
test
pusha
mov
or
adc
push
daa
stc
pop
fists
outsb
sbb
sbb
cltd
jl
inc
ljmp
movsb
cltd
pop
ds
jo
bnd
out
daa
inc
and
aam
and
jne
cld
test
in
sub
or
pusha
pop
dec
sbb
push
lds
stos
leave
mov
sbb
insb
jns
pand
pop
mov
icebp
adc
out
mov
pop
xchg
dec
inc
dec
add
dec
shll
mov
std
testb
push
mov
and
xchg
jnp
daa
jne
inc
mov
out
xchg
push
test
cli
out
or
fbld
int3
pop
in
lret
adc
sbb
or
outsl
mov
push
push
stc
jns
push
fsubr
mov
lods
pop
inc
cmp
jle
sub
ds
mov
jbe
inc
push
lods
ret
mov
fs
addl
and
xchg
movsl
mov
aas
dec
pop
pop
jecxz
into
jb
mov
ljmp
addl
imul
sbb
jl
jecxz
fs
aam
xchg
pop
popf
cld
lods
negl
or
mov
fcmovu
sbb
in
xchg
repnz
cmp
sahf
sub
sbb
or
daa
dec
dec
cmc
pop
sbb
aad
popa
fwait
pop
mov
or
and
mov
mov
stos
lods
mov
aas
sub
mov
push
inc
out
test
std
lret
addr16
popf
cli
jmp
sub
loope
pop
ret
xchg
mov
scas
lea
loopne
add
insb
lea
xchg
out
imul
push
adc
ds
mov
xchg
push
arpl
sbb
scas
fidivrs
or
jl
test
mov
decb
ds
les
sbb
cmc
repnz
data16
jle
iret
cmc
iret
dec
add
inc
jmp
or
sub
imul
cmpsb
or
fsts
lret
bound
lahf
pop
int
je
and
dec
mov
dec
push
int
out
movsl
push
in
aas
push
sub
mov
xor
fistps
push
insb
push
out
pop
cmp
push
add
les
lea
pop
add
mov
fstpt
and
mov
jo
mov
sub
pop
orps
dec
mov
add
clc
mov
outsl
addl
mov
sbb
movb
push
dec
fcomi
stos
insl
inc
idiv
mov
in
xchg
adc
aam
inc
mov
mov
in
leave
add
mov
mov
stos
mov
orb
pop
xor
jecxz
outsl
sbb
in
cmp
lea
sbb
xor
jno
and
test
cmc
inc
gs
xor
cmp
scas
pop
and
xchg
test
push
jl
inc
sbb
jne
jle
jl
test
xor
sub
adc
aaa
cld
and
jecxz
cli
push
lds
cmp
insb
xor
lea
fldt
push
mov
out
push
or
mov
fmulp
sbb
lcall
sub
inc
in
xor
cmpsl
sub
mov
mov
dec
mov
cli
pop
adc
mov
jmp
icebp
sbb
mov
mov
push
int
pusha
mov
std
sbb
xchg
leave
pop
imulb
pop
mov
jp
xlat
jmp
adc
add
lahf
jp
jnp
adc
add
icebp
out
insb
test
adc
mov
aam
incb
push
adcl
cltd
pop
stos
lds
mov
mov
xchg
out
cltd
mov
cmc
sub
rcll
push
insb
mov
ljmp
push
fbld
mov
mov
out
test
mov
mov
dec
daa
xor
adc
sar
ljmp
xchg
arpl
push
xchg
jg
fimuls
xor
fstpl
arpl
xor
test
out
lcall
cmpsb
mov
fstpl
popw
fadds
inc
jmp
jge
lods
pop
cli
push
cmpsb
mov
cmp
test
jo
out
pop
or
in
cmp
in
rcr
mov
mov
or
lcall
xor
inc
fimull
adc
push
push
or
pop
jo
and
dec
cmp
dec
cmc
insl
idiv
mov
dec
cld
inc
mov
pop
into
mov
ds
mov
negl
jns
outsl
das
mov
rol
jnp
mov
out
jl
cmp
pop
loop
ret
cld
lcall
test
lods
sub
outsb
stos
mov
inc
movsb
push
dec
imul
inc
gs
mov
cmp
mov
inc
add
push
or
popf
adc
sub
sti
sub
pushf
and
mov
dec
dec
cmp
or
pop
ret
arpl
inc
inc
dec
test
pop
orb
pop
pop
lcall
mov
mov
incb
call
dec
xchg
xchg
outsl
xchg
sbbb
sub
cmp
or
fildl
cwtl
lock
inc
incl
cwtl
mov
testb
loop
clc
or
stos
add
pop
je
xchg
mov
aas
cmp
cmc
imul
push
xor
inc
and
sub
arpl
out
cmp
jne
sub
lcall
xchg
mov
push
xchg
adc
or
rcl
in
jnp
mov
cld
inc
fucomip
add
test
or
sbb
and
andb
xchg
in
sbb
pushf
aas
mov
bound
adc
movsb
and
out
sub
loopne
cmpl
add
lds
shll
notl
or
cmovg
out
leave
fwait
sub
test
fstpt
mov
cmp
lock
sbb
cwtl
in
pop
jg
lods
andb
dec
push
jns
or
fbld
int3
and
call
pusha
shll
jo
cmp
jnp
hlt
jmp
mov
or
adc
gs
cltd
insb
leave
ficompl
inc
int3
outsl
subl
es
fistpll
ja
and
xchg
pop
jp
mov
ret
xchg
jno
mov
inc
fildl
testb
mov
mov
xchg
mov
call
add
adc
data16
scas
lret
or
lods
xchg
in
mov
mov
cli
pusha
cltd
xchg
push
sub
jg
inc
aad
add
and
lahf
pop
fwait
inc
sarb
data16
pop
cmp
jbe
nop
mov
xchg
sbb
mov
add
hlt
mov
cmpsb
adc
movsl
rorb
and
cltd
push
add
inc
int
jge
adc
sbb
pop
sub
inc
lods
repnz
pop
into
pusha
stos
inc
repz
lock
jno
mov
mov
adc
test
fwait
movsl
ljmp
outsb
in
add
and
or
adc
xor
mov
pop
gs
cmpsb
dec
leave
into
inc
xor
xchg
je
test
aaa
inc
nop
insb
and
pop
xchg
jnp
hlt
test
or
flds
movsb
mov
pop
fstpl
pop
popa
outsl
clc
sub
fstpl
fnstsw
icebp
lds
mov
fnsave
daa
inc
movsl
iret
fs
mov
cmp
in
sub
icebp
inc
test
or
xchg
jl
pushf
add
js
adc
ss
scas
dec
call
int
jo
dec
push
push
inc
dec
rorl
lods
roll
aam
dec
and
pop
daa
dec
in
fidivrs
push
dec
push
lahf
mov
jmp
std
les
scas
sbb
frstor
ljmp
fs
outsb
pusha
lcall
sub
add
shl
loope
jle
popf
divl
sbb
outsl
adc
jmp
pop
loopne
das
mov
test
scas
xlat
decl
jge
jne
push
cli
and
cmp
ret
insl
subl
mov
inc
or
imul
das
dec
lods
addr16
daa
or
divl
dec
jge
jnp
popa
dec
xorb
int3
call
mov
and
mov
inc
cmp
sbbb
out
cmp
sarl
xor
jo
xor
jnp
sub
mov
dec
pop
cmp
mov
pop
sub
add
adcl
jno
sbb
das
rolb
jg
out
cmc
dec
mov
out
outsl
lcall
mov
into
jg
inc
push
sti
int3
push
mov
xchg
cwtl
scas
push
call
jg
pusha
pop
push
test
arpl
adc
xchg
test
adcl
sub
repz
adc
jl
outsb
addl
insb
mov
and
test
push
into
lock
test
push
and
mov
inc
pop
into
fisubl
sarb
or
lahf
pop
xchg
or
and
sbb
cwtl
std
dec
cli
fnstsw
insb
rcll
pushf
mov
xor
adc
arpl
sar
add
mul
and
and
sbb
fcoml
or
pop
or
mov
cmp
push
loop
es
xchg
sti
movsb
sar
mov
enter
rclb
fldenv
pop
sub
cmc
xchg
ret
loopne
neg
xchg
push
sbb
stos
jmp
pop
mov
xchg
call
rcl
pusha
fimull
jo
push
add
fildl
pop
loop
movsb
out
pop
jb
sbb
ret
sbb
jge
mov
mov
pop
cmp
adc
sbb
aam
loop
cltd
mov
xor
push
push
inc
push
scas
clc
sbb
pop
andl
loopne
jnp
shrl
sbb
add
ja
pop
mov
sahf
in
cmp
push
popf
icebp
cld
or
xor
inc
or
xchg
mov
mov
jmp
push
sub
fcoml
pop
sbb
xor
sbb
pop
sbb
daa
inc
iret
subl
or
rol
sti
stc
add
inc
add
push
popf
iret
fimuls
pop
sub
cmp
add
push
daa
fs
std
mov
in
and
enter
pop
data16
daa
push
ljmp
mov
and
popf
repz
add
add
jge
mov
jmp
in
in
add
int
fmul
out
in
gs
orl
arpl
negb
test
aaa
movb
ss
int
es
mov
lds
sub
jge
out
mov
rclb
incl
loope
sti
mov
loop
decb
mov
stos
sbb
and
loope
lcall
cld
je
mov
sub
mov
add
push
add
icebp
xor
scas
js
sub
lea
dec
dec
cmp
inc
add
loop
pop
inc
movsb
lock
jns
lods
push
mov
cwtl
adc
repz
ds
int3
xor
fldl
jns
jecxz
sar
negl
addr16
push
cltd
add
std
and
xor
fcomip
jp
adc
sub
pop
mov
mov
pusha
fst
shlb
jle
js
or
cmp
mov
dec
jno
xchg
adc
add
cmp
in
mov
or
call
xchg
test
pop
dec
inc
or
mov
pushf
adc
xchg
jno
xor
in
divb
leave
xchg
loop
and
dec
mov
push
bnd
ret
cld
sarb
cmpsl
inc
jl
stc
pop
aas
insl
push
add
popa
repnz
xchg
aas
dec
test
dec
das
push
adcl
sub
xor
enter
stos
mov
inc
xchg
mov
and
sbb
testl
scas
into
int3
mov
out
xchg
dec
add
dec
out
outsb
jb
popf
test
mov
adc
or
xor
out
push
and
loop
mov
push
fwait
aad
push
arpl
push
loop
mov
popf
jmp
push
out
jno
in
out
decl
les
dec
lods
lock
jl
xor
fisubs
in
divl
adc
int
push
sbb
and
into
dec
dec
add
inc
or
sbb
sbb
sti
popa
data16
cmc
push
aad
mov
fincstp
mov
or
lret
pop
movsb
je
iret
add
int
push
add
adc
inc
pusha
add
scas
jnp
jg
sub
inc
mov
mov
pop
and
fists
outsl
or
int
xor
rcll
cs
adc
push
outsb
shll
dec
outsb
add
cmp
nop
push
adc
dec
jp
fsub
loope
pop
jle
push
xchg
inc
repnz
cmpl
loopne
addr16
mov
and
enter
scas
and
dec
hlt
cmp
jno
or
xchg
pop
mov
push
popaw
stos
pop
inc
inc
push
scas
rorb
inc
cli
fiadds
pop
fldt
jmp
cwtl
push
in
xor
inc
pusha
mov
add
out
shr
divb
pop
aad
icebp
sbb
mov
dec
addl
and
jnp
fs
xor
sbb
sbb
in
xor
fldcw
test
jo
jno
and
and
pop
inc
stos
fs
enter
mov
stos
pop
out
dec
add
inc
cmp
int
icebp
lock
fldl
dec
sarl
clc
fwait
sub
out
rcl
cli
stos
and
and
sbb
es
mov
cmc
call
cwtl
negl
sub
loopne
xor
dec
fadds
inc
mov
mov
xchg
fs
insl
add
andb
jp
cmc
inc
out
jns
sbb
ja
sti
std
add
fcoms
je
aaa
outsl
cld
mov
outsb
testb
pop
pop
and
push
lods
mov
out
add
push
aas
adc
iret
lds
gs
dec
add
xchg
jl
adcb
or
sub
xor
cmp
push
xor
ljmp
sub
stc
pop
test
push
into
add
fimuls
fwait
in
xchg
jo
inc
scas
dec
cmpxchg
ja
xor
or
das
mov
mov
js
cmp
shld
adc
repz
pusha
lret
pop
enter
mov
add
dec
lcall
shrb
push
in
inc
dec
fcmovnb
mov
and
data16
jp
mull
xchg
lahf
es
xor
sbb
push
icebp
dec
imul
in
sbb
and
and
cmpsl
sbb
data16
dec
adc
push
fists
test
clc
pop
add
mov
or
push
mov
rorl
lods
incl
arpl
in
scas
jb
les
pop
lahf
imul
stos
cltd
arpl
cmpsb
aaa
push
shlb
lods
inc
int
ljmpw
mov
mov
pop
rorl
mov
and
dec
loope
add
mov
aas
mov
sbb
and
add
adc
cltd
scas
aam
adc
add
inc
pop
xor
mov
repnz
sbb
lods
mov
leave
push
imulb
inc
mov
out
test
mov
out
sbb
hlt
loope
notb
clc
inc
dec
icebp
and
test
loope
rcrl
push
cs
add
jns
xchg
movsl
push
dec
push
jb
dec
sarl
pop
movsb
and
or
dec
push
cmp
jo
jne
pushf
jmp
mov
pop
jle
pop
sub
xchg
shlb
or
sub
xchg
iret
pop
xorl
mov
jmp
testb
xchg
in
mov
fistps
cmc
outsb
mov
lock
insb
mov
mov
inc
rcr
lds
inc
jns
rol
out
cltd
cmpsl
pop
addb
addr16
xchg
push
shlb
xchg
xor
loope
jnp
sub
or
push
pop
lret
add
sti
iret
xchg
clc
add
dec
add
push
roll
or
adc
xchg
jne
inc
fs
sti
nop
jb
out
fs
mov
ret
mov
pop
shlb
fsts
mov
addr16
aaa
xchg
pop
xchg
popa
pop
xor
mov
add
push
mov
call
out
add
pop
add
mov
lea
cmp
sub
lock
adc
pop
dec
sub
cltd
or
mov
inc
sbb
mov
mov
aaa
mov
stos
daa
and
dec
je
xor
outsb
inc
rcrl
ficoml
or
sbb
mov
jae
aas
jp
sub
dec
xor
nop
cmp
jecxz
mov
andb
into
or
mov
xor
ss
iret
cmp
jb
jo
lea
iret
loop
lods
rcrl
mov
push
push
adc
mov
mov
or
pop
mov
mov
lods
jp
add
test
fidivrs
movsb
popf
adc
mov
stc
sbb
inc
dec
sahf
inc
negl
into
sti
aaa
mov
jbe
imul
inc
xor
mov
repz
push
or
sbb
push
subb
ljmp
int3
out
sbb
xor
inc
hlt
daa
es
sbb
sub
jae
add
fidivl
or
push
clc
sbb
adc
xchg
fcompl
loop
das
dec
int3
xchg
sub
jns
dec
dec
hlt
mov
mov
inc
repnz
shl
repz
addb
push
sbbl
in
push
ja
sub
xchg
add
out
mov
out
cmp
cltd
sbb
mov
call
div
mov
adc
mov
mov
fcoms
jo
icebp
call
and
idivb
das
ss
pop
pop
jno
mov
mov
stc
mov
lods
xchg
cwtl
les
and
fs
enter
lods
jae
mov
mov
dec
or
or
adc
jnp
or
xchg
push
ds
mov
loopne
cmp
rolb
stos
pop
les
jo
in
test
or
mov
xor
in
xlat
repz
ret
pusha
loop
xor
add
adc
add
dec
ja
jno,pt
loopne
repz
adc
add
cld
xchg
add
add
ja
mov
bound
mov
pop
in
shrb
shll
lock
xor
mov
mov
das
bound
mov
int
scas
xchg
jg
fildll
out
lods
dec
inc
push
xchg
mov
repz
push
ficompl
cmp
int
es
push
add
mov
mov
fcmovne
jbe
sbb
insl
outsl
in
lret
data16
mov
ja
dec
rcl
je
push
jecxz
in
push
fldl
inc
mov
in
jne
push
movsb
add
xorb
mov
rol
std
sbb
xor
mov
inc
callw
mov
mov
leave
dec
push
xor
pop
mov
je
imul
and
xor
out
mov
xlat
xchg
mov
lods
pop
lds
das
mov
inc
loop
aad
adc
sub
cli
pop
sbb
mov
inc
fists
mov
lahf
ja
mov
stc
lods
mov
orb
mov
xchg
xor
dec
popf
es
outsb
imul
jle
fwait
or
add
pushf
push
mov
jae
lret
cs
mov
into
cmpsl
ret
pop
and
scas
push
pop
add
pop
js
adc
mov
aaa
into
test
out
jecxz
xor
jbe
or
sub
lock
cwtl
push
shr
mov
les
jl
and
fstps
aam
out
jle
push
test
lods
pop
insb
nop
aas
movsl
dec
pop
push
pop
mov
out
fidivs
lahf
rolb
outsb
or
mov
jmp
pusha
lods
sbb
and
jle
mov
lods
stc
cli
push
mov
mov
mov
out
xchg
xlat
out
jbe
sbb
bound
out
cmpsb
inc
jnp
pop
repnz
fistl
xor
insb
add
cmp
ret
fildl
and
dec
int
push
adc
inc
mov
stc
or
xor
test
xor
clc
shlb
sbb
jl
data16
xor
sub
lds
pop
insl
mov
mov
nop
repnz
daa
sbb
xor
jns
push
adc
dec
pop
adc
sub
imul
addr16
and
xchg
icebp
fdivp
mov
inc
out
scas
pop
hlt
add
lods
cmp
aad
inc
lods
repnz
sbb
loopne
jb
vpaddb
xadd
repnz
ret
jnp
mov
pusha
sti
xchg
sbb
sbb
in
out
adc
out
push
add
push
dec
add
pop
push
jae
jmp
fadds
pop
mov
fdivrs
fcoms
sbb
push
pop
stc
cmp
call
icebp
movsl
repz
dec
pop
push
jge
cmp
xor
jl
mov
daa
xchg
in
dec
out
sbb
add
mov
mov
addr16
out
in
lock
jp
outsb
mov
pop
pushf
mov
stos
fcmovne
fwait
aaa
ljmp
dec
sub
mov
int3
neg
pop
mov
mov
and
scas
pop
mov
cmp
out
inc
or
cs
fldcw
or
push
mov
sbb
imul
fsub
push
shld
cli
push
daa
sub
lcall
xor
ret
ret
shll
jmp
lock
ljmp
arpl
sahf
je
push
add
mov
jecxz
movsb
mov
add
lods
mov
jae
scas
mov
mov
xor
scas
pop
or
std
lea
lret
mov
or
imul
adc
rcrl
mov
cmpsb
inc
lahf
pop
orb
mov
pusha
mov
fstpl
mov
push
push
xor
inc
push
cmp
push
mov
add
xchg
sahf
into
test
xchg
loop
roll
and
cmp
imul
cld
int
xor
mov
sub
mov
sbb
stos
aam
push
cltd
xchg
mov
xor
and
push
mov
faddl
push
add
cld
or
jl
jl
out
or
pushf
rolb
pop
mov
sbb
mov
rcll
jne
xorl
in
jbe
xorl
mov
push
xor
and
push
movsb
jp
adc
adc
and
pop
repnz
test
insb
sub
mov
and
push
leave
test
fstps
cmc
cmpsl
lock
or
out
andl
and
jmp
cmpsb
pop
jecxz
rcrl
and
push
lods
sbb
rcrl
mov
xchg
scas
rorl
xchg
add
xchg
xchg
cmc
sub
nop
xchg
leave
pop
mov
mov
adc
sbb
cmp
movsl
cmp
mov
xchg
and
cmc
pop
add
inc
cld
cli
pop
insb
xchg
insb
pop
push
jecxz
xchg
inc
lock
fs
fcompl
icebp
out
stc
rol
pop
jp
out
push
mov
aam
sti
jmp
iret
call
inc
xor
pop
xchg
add
sbb
lods
adcl
inc
push
daa
stos
add
cltd
call
rcrb
mov
pop
mov
mov
les
xchg
jnp
mov
jae
arpl
lods
adc
loop
cs
push
daa
mov
and
iret
xor
imul
xchg
push
cltd
fs
ja
push
mov
add
mov
xor
push
addl
pop
testb
cmpsb
or
rorb
enter
neg
cli
push
in
mov
xchg
fnstsw
addr16
mov
mov
sbb
mov
insl
and
pop
pop
iret
mov
pop
mov
nop
cmp
outsb
and
xchg
cltd
xor
mov
fwait
mov
aaa
outsb
cltd
ljmp
notl
push
or
add
push
cmpsl
push
xchg
and
sub
ss
idivb
ret
outsl
ljmp
pop
mov
push
mov
ljmp
push
pop
xor
cmp
xlat
push
adc
inc
jecxz
dec
cmp
movsl
mov
cmpsb
mov
cmp
outsl
lods
inc
push
add
pop
xchg
daa
cmp
or
lcall
hlt
or
arpl
pop
lock
out
aas
das
jge
dec
cmp
idivb
pop
or
sti
push
push
sub
xor
mov
add
jns
aam
aad
lock
fmul
call
mov
pop
lds
mov
add
mov
stos
sub
xor
fwait
sub
sub
cwtl
int3
inc
movsl
cmp
aaa
push
aaa
iret
stos
cmp
pushf
jne
jne
pushf
add
mov
and
pop
add
lret
inc
mov
jae
jne
fdivp
push
scas
xor
nop
decb
icebp
aas
sub
outsl
in
mov
sub
pop
scas
push
and
mulb
xorl
sub
nop
or
ja,pn
nop
fsubr
mov
dec
mov
scas
push
sbb
jbe
sub
frstor
outsl
aad
sub
jg
aam
xor
mov
jp
aam
sub
fidivrs
sub
shlb
jl
rep
sub
std
xor
sarb
scas
dec
inc
adc
or
notl
sarb
fwait
inc
or
sbb
cwtl
xchg
aas
xchg
cwtl
mov
scas
xchg
mov
stos
mov
ljmp
fstl
jmp
jecxz
sub
int3
test
dec
in
loope
movsb
fidivrl
xchg
sub
mov
and
jno
gs
imul
jbe
mov
lcall
iret
outsl
inc
xor
add
stc
loopne
adc
dec
mov
fisubl
jnp
xor
data16
jecxz
dec
xor
ja
pop
into
ret
out
xor
jl
mov
inc
cmp
gs
cmp
dec
fs
mov
pop
push
xor
jle
xor
das
scas
fwait
aad
adc
mov
xor
dec
or
cmpsb
mov
xchg
push
jns
lret
out
or
fnstenv
cmp
xor
popf
stc
out
lea
dec
or
repz
dec
lcall
movsl
out
mov
es
adcb
push
or
fs
xor
pop
push
shr
push
push
arpl
or
ja
pop
adc
insl
movsl
fucomp
imul
ds
insl
jno
daa
ret
push
xor
into
and
mov
les
xlat
sbb
sti
test
mov
out
jecxz
int3
xchg
cs
mov
cmc
sub
or
xchg
sbb
ljmp
insl
push
xor
int
lock
loopne
mov
loope
push
dec
mov
mov
mov
icebp
mov
xchg
or
mov
jne
xchg
push
sbb
ss
clc
and
push
cmc
sub
popf
test
mov
mov
and
dec
nop
je
iret
clc
cli
push
sbb
ret
cmp
idiv
lock
and
adc
sub
fs
lods
sbb
neg
fstpt
sbb
mov
adc
pop
scas
lret
push
mov
push
stos
mov
mov
pop
or
std
cmp
pop
sub
movsl
mov
or
test
pushw
je
arpl
inc
dec
jmp
inc
sub
sbb
aad
out
rolb
int3
lcall
cmc
inc
popa
jne
jle
jns
scas
outsb
mov
mov
add
mov
rorl
lock
sub
xchg
adc
push
pop
rcll
je
sbb
add
push
das
ljmp
or
sbb
ja
repz
push
adc
add
sub
xchg
xchg
neg
sub
adc
pop
xchg
pop
sbb
sub
sar
inc
sahf
inc
push
xor
xchg
xchg
in
xlat
loope
repz
shlb
popf
mov
das
sub
mov
sub
jo
pop
jge
dec
loope
dec
daa
mov
rorl
sbb
sub
push
push
jmp
clc
mov
les
shrb
into
xor
push
xor
shrb
inc
push
mov
push
adc
or
std
fistpll
and
push
or
repnz
mov
or
mov
push
and
test
rclb
insb
mov
repnz
xchg
pop
int3
sahf
xor
sbb
jg
dec
jge
mov
pop
sub
sarb
cs
mov
pusha
mov
lret
jbe
pop
inc
lea
subb
movsb
insb
js
stos
std
add
sarl
or
dec
sbb
ret
and
cmpsb
sub
inc
test
movsl
sbb
mov
and
insl
mov
pop
mov
stos
in
into
icebp
and
call
push
movsb
std
je
push
and
ljmp
lds
sub
lcall
movsl
int3
lcall
sahf
inc
jmp
iret
xchg
or
outsb
adc
test
add
sbb
jbe
ja
fiaddl
mov
mov
leave
xchg
inc
testb
cmp
pop
mov
inc
pop
insl
enter
in
sub
popa
or
stos
jg
or
cld
and
mov
imul
push
leave
mov
imul
pop
repz
adc
call
jmp
dec
sbb
pop
jb
roll
cmc
stc
push
cs
adc
cmp
scas
mov
jecxz
cltd
dec
xlat
add
sbb
and
xlat
sub
fdivs
icebp
cmp
outsl
pop
bnd
push
sahf
adc
or
aas
lds
jp
pop
stos
pop
pop
aas
test
add
mov
pop
inc
ret
mov
mov
adc
and
push
sbb
jmp
cltd
inc
xor
js
lods
popf
mov
or
xor
xor
lret
xchg
cld
outsl
pop
mov
mov
mov
xchg
aad
adc
shlb
scas
adc
adc
xchg
es
cmp
addr16
dec
pop
dec
push
push
daa
leave
adc
lcall
movsl
sub
push
loopne
ds
stc
xchg
and
mov
mov
mov
xor
mov
or
fs
jbe
test
je
adc
sbb
int
xchg
dec
jle
lret
adc
pcmpeqd
outsl
or
push
stos
mov
sub
es
dec
add
ror
inc
ret
imul
inc
cmpsb
mov
cwtl
jne
xchg
sbbb
lahf
mov
imull
mov
out
cli
hlt
adc
push
sub
push
adc
pop
movsb
decb
movsb
outsb
testb
enter
dec
mov
jno
push
push
cld
loopne
xor
jle
push
mov
xchg
pop
lret
sbb
lods
stos
dec
jne
inc
inc
sbb
dec
push
iret
jnp
stc
adc
cmp
outsb
out
adc
lret
pop
push
and
pop
mov
push
outsl
dec
pop
jnp
or
jg
repz
cmp
insl
loop
push
mov
outsb
jecxz
cmp
ljmp
jo
jg
lahf
pop
sbb
xchg
or
les
out
ss
xchg
les
jmp
xchg
push
or
popf
iret
fcoml
xchg
orl
arpl
rcrb
jo
mov
push
jb
sbb
out
sbb
insl
push
daa
mov
bswap
and
cmp
test
fisttps
test
xor
clc
mov
mov
mov
and
ja
hlt
push
or
add
in
sub
leave
adc
pop
lcall
mov
insl
cmp
jno
lcall
test
idivl
inc
into
fucom
jmp
mov
xchg
les
or
push
jg
dec
pop
pushl
test
call
push
jl
cs
push
lcall
push
loop
dec
xchg
mov
xchg
sarl
ret
sti
subb
lods
dec
andw
clc
sbb
aaa
out
xchg
sahf
jo
sub
fists
loopne
cmp
rolb
arpl
xchg
mov
in
iret
dec
shrb
mov
adc
loop
es
test
aam
and
sahf
clc
mov
or
sarl
insb
inc
clc
jg
stos
daa
mov
mov
cmp
iret
aad
fwait
cltd
js
incl
popl
adc
inc
lds
outsb
fldcw
cmp
dec
movsb
loope
stc
ds
daa
pop
arpl
jp
test
ljmp
notb
pop
jae
pop
xor
jae
dec
mov
ficompl
and
outsb
js
push
push
sbb
leave
jae
mov
dec
cmp
push
mov
sub
pop
fs
dec
xor
lcall
jg
and
mov
clc
pop
pushl
or
cmp
xchg
adc
push
mov
dec
xor
add
lea
test
inc
fs
adc
xchg
cmp
in
aam
and
push
inc
daa
mov
cmp
aam
or
jb
sub
mul
lods
fucom
adc
cmpsl
orl
xchg
jns
inc
daa
cwtl
mov
stos
in
adc
stos
lret
lahf
mov
out
add
inc
jle
lods
pop
mov
test
inc
mov
adc
fs
jl
jno
push
adc
sahf
lea
push
push
pop
xchg
mov
cli
inc
sbb
stos
aaa
mov
into
lea
lods
scas
cmp
or
sub
test
pop
cmp
leave
inc
or
cmp
lods
dec
mov
mov
daa
and
or
popf
lret
clc
daa
push
int
dec
add
xchg
push
int3
pop
movsl
scas
fwait
mov
lcall
adc
les
mov
loopne
xchg
mov
xchg
jbe
fs
adc
sub
cmp
xor
ret
popf
daa
jge
pop
mov
rcrl
lock
inc
fsubrs
shlb
iret
ja
pop
dec
into
js
sbb
xchg
fcmovnb
outsl
inc
mov
mov
or
int3
or
pop
mov
adc
lahf
add
lds
xchg
loope
mov
add
cmp
cli
jbe
pop
xchg
lret
imul
sub
pop
loopne
dec
dec
jecxz
lea
fidivs
scas
divb
scas
xor
test
imul
mov
es
mov
adcb
adc
fadd
xor
sbb
mov
adc
aaa
push
mov
cli
add
repnz
testb
jl
push
outsb
fsubp
out
inc
mov
push
aam
orb
push
or
xchg
fwait
adc
daa
inc
jae
pop
fldcw
aaa
fsubrl
xchg
loope
adc
loope
cmp
pop
jbe
pop
push
nop
sti
cmp
mov
add
mov
and
sub
xchg
xchg
std
pushf
aam
lret
sub
dec
in
cmpl
jbe
push
push
sti
lea
repz
push
in
lcall
xor
sbb
push
stc
imul
lret
outsl
mov
mov
shlb
mov
mov
adc
nop
mov
lret
xor
repz
push
mov
sub
ja
mov
jbe
ret
cmc
std
pop
adc
fbstp
mov
cmp
pop
mov
and
lods
inc
scas
fwait
repz
jne
jecxz
push
lods
movsb
aad
gs
mov
mov
push
mov
leave
xchg
test
xor
loop
shll
xor
and
pop
cltd
mov
cmp
fcomi
push
mov
insb
lods
jns
fsubrl
push
fucom
mov
sbb
mov
or
je
push
in
mov
mov
sub
or
mov
mov
movsl
scas
lods
sahf
js
push
jl
pop
in
mov
out
cmp
jg
jno
sbbl
lcall
lock
or
and
mov
std
iret
stos
cli
cmp
lds
stc
iret
ds
jmp
mov
jnp
or
and
dec
into
addr16
cmp
cmp
into
inc
rol
and
add
jae
hlt
cltd
mov
into
add
xor
iret
inc
adc
es
push
dec
fnstcw
inc
pop
in
jae
cmp
fwait
xchg
insl
cmp
ret
fistps
sub
dec
and
jne
sub
stos
clc
cld
xchg
mov
mul
repnz
pop
or
cmp
bswap
rcrb
outsb
nop
sbb
sub
hlt
xchg
imul
push
fcompl
pop
loopne
int
mov
mov
rorl
inc
push
mov
scas
xchg
mov
arpl
out
inc
and
xchg
repnz
push
stos
mov
mov
js
les
pop
gs
int3
out
fstpl
dec
pop
inc
pop
inc
ja
loope
hlt
push
stos
mov
cmp
insl
icebp
or
pushf
idivb
dec
lods
add
xchg
movsb
mov
sub
fcomps
push
movsl
and
jl
mov
sarl
stc
imul
cmp
es
fsubl
sub
mov
xchg
fldenv
or
and
bound
popa
outsb
repz
mov
or
add
dec
pmaxsw
das
cmp
xor
adc
test
out
pop
v4fmaddps
push
push
sti
pop
sbb
decb
jp
push
adcb
sub
jl
mov
xor
mov
sub
test
mov
jmp
stos
mov
mov
or
xlat
in
add
mov
addr16
jbe
ret
lret
push
push
inc
aaa
hlt
sub
in
jmp
mov
mov
pop
mov
mov
push
jecxz
sub
loope,pn
jle
jg
adc
push
cmp
sub
add
das
imul
inc
push
mov
cwtl
add
inc
xchg
inc
xor
pop
cli
ficoml
cwtl
sub
xor
andl
or
leave
stos
or
lcall
fildll
pusha
rolb
data16
pop
mov
js
xor
repnz
xchg
inc
shrb
sti
and
cmp
mov
cltd
cli
iret
aad
call
leave
arpl
fidivrs
mov
pop
js
movl
pop
or
adc
mov
out
fstpt
add
mov
xchg
fs
enter
cmp
dec
push
rcll
jb
jg
xchg
std
sbb
mov
cmpsl
std
lods
push
mov
stc
test
scas
mov
push
mov
jmp
add
inc
jg
mov
adc
xchg
dec
sti
popa
imul
das
out
mov
scas
add
mov
and
and
sbb
add
ret
sbb
xor
into
pop
addb
add
push
add
in
stos
and
push
fisubl
clc
sbb
mov
cmp
jecxz
inc
xchg
jmp
jo
lcall
pop
into
xor
cmc
xchg
mov
das
nop
lock
int3
es
insl
test
push
scas
push
push
push
jge
cmp
leave
pop
xchg
gs
adc
sti
push
sub
mov
xchg
pusha
and
jnp
in
mov
mov
pop
shufps
lds
outsb
lods
pop
out
cmc
sub
mov
lcall
stos
adc
icebp
fmuls
cmp
clc
fs
negl
xor
cmpsb
push
dec
pop
addr16
insl
lcall
out
mov
sub
test
mov
cmp
aas
fs
mov
cmpb
inc
je
mov
idivl
in
jo
insb
cmp
je
push
jbe
cs
shll
xchg
add
outsb
addr16
or
push
cmpsb
fistps
sub
fwait
mov
lods
push
daa
dec
lea
xchg
mov
fldt
test
test
cmpl
sub
icebp
ja
and
call
jp
xor
iret
push
arpl
loope
jb
aad
sbbb
xchg
push
popa
sbb
outsl
push
pop
inc
inc
rep
popa
insb
add
cmp
hlt
subl
out
sub
xchg
popf
es
jns
jecxz
or
inc
lret
andb
push
clc
aam
lods
mov
and
orl
inc
bound
push
stos
xchg
dec
mov
push
stc
mov
cltd
xor
imulb
icebp
or
sahf
out
loope
ds
test
or
in
jns
movsl
pop
pop
mov
outsb
ficoms
iret
outsl
in
bound
jo
jnp
lret
cmp
jns
or
popa
loopne
cltd
aad
and
xchg
in
sbb
dec
loopne
lret
mov
pop
lods
jnp
or
jmp
sarb
mov
shll
mov
and
es
add
mov
in
xor
push
mov
fsub
lods
pop
sti
cli
push
cmp
movsb
xor
je
inc
mov
cltd
ss
stc
fbld
pop
movsb
jp
leave
mov
cld
popf
test
aam
and
outsl
es
or
loopne
mov
stos
roll
xchg
fxch
pop
insb
push
sub
das
repz
mov
pop
push
and
negb
cmp
arpl
int3
rorb
mov
add
ds
xchg
or
icebp
bound
and
sbb
rcrb
pop
jge
sub
fmull
or
bnd
and
push
fcmovb
js
dec
sbb
push
pop
or
ss
or
lahf
adc
aas
push
mov
push
cltd
in
mov
int
pop
test
ret
cmpsl
mov
std
mov
fstl
or
mov
cmp
pop
or
lds
mov
nop
push
mov
pop
sub
nop
cmpl
xchg
aaa
add
roll
in
dec
les
leave
cmpsb
roll
sti
push
cmc
scas
mov
out
dec
jecxz
out
mov
mov
push
loop
insl
mov
leave
adc
sub
xchg
adc
out
inc
dec
jecxz
subb
cmc
xor
js
or
jbe
fmuls
push
lret
cmp
fnstcw
popf
repnz
xchg
and
sahf
adcl
nop
add
icebp
insb
mov
lock
cmp
loopne
out
lods
pop
mov
xor
mov
test
aas
xchg
test
scas
inc
lock
sub
mov
fsub
dec
repnz
in
lcall
inc
xor
mov
dec
mov
ja
fsubrp
nop
mov
pop
or
mov
push
mov
mov
scas
xor
push
mov
insl
inc
pop
or
repnz
nop
lea
sub
cmp
cli
mov
rcrb
loop
pop
cmc
dec
cs
cld
addr16
and
ret
loopnew
xor
rcrl
ljmp
cli
jg
icebp
pushf
pop
mov
xchg
test
mov
dec
test
push
add
dec
cs
daa
jecxz
popf
stos
jecxz
addr16
dec
adc
inc
testl
repnz
pop
jnp
push
push
inc
fsubp
jne
ficoms
rcll
push
mov
cmp
insl
xchg
shlb
and
push
imul
sub
js
push
jns
pop
jns
add
movsl
clc
pop
ret
out
outsl
cld
push
insl
rcrl
hlt
mov
or
les
fidivs
and
xchg
sub
xchg
or
cmp
sarl
adc
push
mov
pushf
popf
daa
add
sarl
mov
fwait
stos
int
xor
repnz
cmp
stos
stos
jne
repz
sbb
aas
mov
lahf
out
stc
lea
lret
xor
mov
mov
ds
mov
adc
push
mov
ss
mov
call
adc
out
xor
ret
adc
dec
stos
jne
or
sub
xchg
addl
outsb
xchg
dec
or
xchg
jmp
sub
dec
mov
pop
loopne
jl
outsl
xor
leave
xor
adc
inc
mov
das
clc
jge
cmp
inc
cmp
idiv
sub
shll
and
mov
mov
cmp
imul
add
pop
inc
push
fisubl
cmc
rcl
arpl
decb
push
lret
dec
push
mov
dec
push
cmp
pop
std
sub
lock
addr16
fisttpl
fnsave
cltd
aaa
xchg
xlat
add
jmp
popa
rolb
int3
bound
inc
push
mov
in
and
out
in
in
aas
mov
push
xor
lods
xchg
jl
addr16
cmp
add
and
and
out
decl
jns
mov
mov
jbe
das
jo
out
cmp
push
imul
insl
jne
in
sahf
sti
pop
jns
xor
repnz
stc
or
lret
icebp
insl
rorl
push
mov
pop
lcall
repz
arpl
push
out
fstl
in
dec
nop
enter
adc
mov
outsb
sub
add
test
daa
mov
cs
jge
push
movsb
mov
test
push
negb
mov
mov
in
push
mov
cwtl
jns
mov
or
pop
lahf
push
pop
jge
push
out
sub
outsb
mov
lcall
fistps
or
iret
adc
mov
inc
inc
mov
xchg
pop
mov
push
xchg
push
addr16
fwait
xlat
out
mov
pop
jnp
aas
add
in
jnp
jmp
lock
lcall
in
xlat
dec
xchg
pop
inc
daa
aad
pop
adc
push
in
or
out
jae
int3
ja
test
fbld
cmpsb
shl
mov
xor
fldcw
sbb
test
mov
mov
xchg
xchg
dec
xor
or
pop
stos
out
mov
imul
sub
shrb
push
in
xchg
add
or
inc
inc
jae
loop
scas
xchg
aad
das
test
arpl
outsl
outsl
push
cmp
cli
pop
mov
repz
xchg
fnsave
movsl
in
mov
aas
xor
loop
sti
bound
fistpl
xchg
nop
inc
arpl
cmp
and
ret
out
adc
pop
mov
pop
in
outsl
test
xchg
lods
push
shlb
jne
cmp
aaa
pop
pop
push
fwait
mov
lds
mov
dec
test
ret
jl
cmp
stos
pop
cmp
sbb
mov
repnz
in
push
adc
pop
fstps
cmp
xor
or
jge
bound
inc
stos
mov
out
pop
lret
rcrl
fists
scas
jle
mov
jnp
push
xor
or
ficompl
cmp
fstp
jns
inc
xchg
lret
loop
ljmp
jp
sbb
icebp
out
shrl
cmc
or
mov
bound
mov
fldl
mov
adc
dec
or
in
rol
inc
stc
sub
loop
loope
andl
xchg
and
cmp
decl
or
sub
jae
sub
mov
mov
cmp
sti
adc
sbb
cmp
push
mov
sub
into
or
mov
lock
imul
xchg
xor
xor
sub
fsts
jle
mov
mov
pop
scas
ret
in
mov
nop
les
push
push
nop
cmc
xchg
mov
int3
jns
outsb
adc
mov
test
scas
and
iret
lret
in
cld
inc
fnstsw
rcr
pushf
sti
loop
movsl
adc
sbb
sti
popa
stc
xchg
and
mov
dec
out
ja
xchg
add
jae
push
mov
and
movsl
fisttpll
push
fisubrl
mov
packuswb
int3
dec
jmp
ret
je
incb
mov
ud0
xchg
orb
cmp
in
ror
dec
test
sbb
stc
mov
inc
repnz
inc
movsl
pop
fnsave
add
orb
add
mov
insb
popa
sbb
lcall
push
leave
mov
xchg
iret
nop
loop
das
cmpsb
lahf
jns
inc
jo
js
in
test
ja
insl
pop
jbe
inc
lret
jecxz
imul
jmp
pop
add
sub
xor
xchg
jp
mov
stos
into
pop
dec
mov
push
scas
loopne
fstpl
icebp
push
xor
mov
jecxz
enter
adc
rol
pop
jbe
mov
adc
arpl
jo
sbb
mov
fildl
push
add
cmc
gs
fwait
subl
and
inc
roll
je
dec
push
xor
and
cwtl
push
sub
imul
call
imul
ljmp
insl
push
sub
sbb
out
inc
pusha
mov
jmp
lcall
pop
std
int3
sub
push
sub
in
jb
push
fidivrl
inc
lahf
push
out
addr16
cmpsb
push
and
popa
stos
enter
rolb
lret
mov
fldl
pop
icebp
or
push
cmp
cmp
hlt
loop
shrl
testb
mov
cmp
pop
jecxz
mov
jecxz
mov
and
push
movsb
pop
ror
lods
movsl
inc
jp
bound
add
repnz
not
jae
in
add
inc
int3
mov
mov
stc
test
mulb
fadd
or
adc
pop
pop
xor
in
push
inc
sbb
mov
inc
mov
dec
rcrl
rcrl
inc
jmp
push
xchg
mov
jne
mov
mov
out
fcmovnbe
aas
inc
int
xlat
push
fimull
jo
subl
cmp
cmc
jp
addr16
cmpsl
pop
fnstenv
fildl
xchg
xchg
js
mov
add
xchg
and
ret
and
dec
sbb
les
add
mov
jl
aam
ja
mov
mov
mov
xchg
xchg
ljmp
stos
push
outsb
faddl
loop
cld
add
lock
stc
push
and
loope
xchg
pusha
xchg
mov
xchg
or
popf
pop
or
sbb
loopne
into
jnp
cmp
sub
in
ret
mov
shl
in
std
mov
int3
cmp
inc
push
mov
pop
and
dec
xchg
and
sbb
cmpsb
xor
cmp
jo
adc
and
ss
repz
lret
mov
sbb
inc
xchg
mov
fidivrl
in
jl
lods
outsb
cld
dec
loopne
mov
fwait
jo
push
ja
xlat
int3
sub
pop
int
rol
xchg
add
test
sar
hlt
daa
pop
cmp
mov
xchg
xor
inc
fmull
or
push
shlb
cmp
cmp
cli
test
into
aam
stc
jge
or
push
stc
mov
sub
xor
stc
cmp
das
xor
mov
xchg
push
lcall
adc
or
mov
repz
arpl
aaa
lret
dec
push
out
xchg
icebp
add
scas
cmp
inc
mov
lea
sub
cmp
adc
jno
push
test
pop
sbb
pop
das
in
adc
cmpl
inc
adcl
movsb
js
data16
nop
lods
gs
stos
sbb
push
fiadds
xor
dec
test
mov
mov
or
inc
mov
fucomip
and
imul
aam
loop
mov
fldenv
mov
push
jmp
mov
ljmp
jmp
mov
or
push
push
push
int3
add
mov
fwait
adc
in
stos
leave
es
fldenv
ret
mov
pop
jg
fwait
aam
mov
jle
inc
mov
iret
test
repnz
out
inc
mov
xor
push
or
or
jne
dec
pop
lods
mov
std
mov
mov
and
jae
inc
jge
flds
push
lock
mov
inc
imul
mov
movsb
fwait
popa
mov
ljmp
sbb
lock
stos
fadds
lea
rcr
pop
test
int3
or
xchg
loop
mov
adc
loope
cli
push
rolb
ss
adc
cmpsb
aam
mov
adcb
or
jbe
adc
or
stos
jmp
sahf
jecxz
adc
bound
xchg
scas
jp
enter
arpl
dec
rcl
cltd
xor
push
das
jnp
lock
sub
rolb
imul
xor
out
xchg
je
ret
popf
loope
cmpsl
in
push
sarl
dec
fsubs
add
mov
not
out
call
dec
sbb
mov
int
or
incl
cmp
fimull
js
or
xor
ljmp
jbe
and
fwait
or
jecxz
pop
shrb
push
pop
movsb
scas
xor
out
pop
mov
add
or
mov
stos
mov
mov
mov
insl
fcompl
sbb
fdivrl
out
ljmp
inc
inc
or
ja
movl
fadds
mov
lcall
pop
aam
rol
mov
mov
pop
psadbw
ror
out
in
pop
sub
adc
aad
lahf
test
sub
lahf
dec
inc
lret
ss
imul
mov
xor
push
lds
mov
cmp
into
ljmp
adc
popa
bound
leave
aad
and
mov
shlb
ret
mov
mov
mov
sub
add
mov
in
shrl
sbb
movsl
inc
int3
aaa
in
xlat
sub
adc
mov
inc
pusha
add
xchg
jns
fcmovnu
pop
adc
cmp
dec
dec
push
out
sub
out
gs
xchg
jns
int
pop
outsb
mov
cltd
frstor
insl
rclb
sbb
and
movsl
fadds
addr16
xchg
inc
cmpsb
sbb
mov
cs
mov
vmaxps
cmp
jmp
out
dec
in
stc
pop
or
cld
push
popf
push
call
push
pop
xor
jg
pop
aas
or
test
push
jle
and
xchg
fnstenv
push
xchg
cmpsl
shrb
stos
ret
or
mov
movsl
inc
xchg
inc
in
xor
fdivrl
daa
cmpsl
lock
fisubrs
or
cld
shrl
add
aam
sub
jb
xchg
jnp
xchg
in
mov
loop
fwait
mov
aad
pop
je
aaa
lret
fidivl
popf
call
aaa
outsb
rcll
nop
sbb
jns
sbb
test
popf
clc
xlat
inc
jb
push
and
int3
out
outsl
loope
prefetcht2
sahf
fsubrs
jae
vdivss
es
lahf
sbb
jecxz
hlt
pushl
pushf
les
xchg
add
ja
xor
fadds
repz
mov
nop
movsl
pop
aas
cwtl
and
sbb
pop
pop
cli
push
addr16
movsb
mov
and
loopne
andb
dec
arpl
iret
mov
cmc
pop
movsl
and
sti
bound
out
jecxz
fnstsw
bound
das
mov
xchg
test
rcll
sub
xchg
pop
mov
sbb
and
push
jge
fmul
insl
loop
and
das
cwtl
ss
mov
daa
fwait
mov
daa
in
lds
fwait
mov
adc
out
inc
pop
xor
jb
repnz
push
sub
pushf
jb
scas
lahf
inc
je
repz
adc
insb
scas
cmc
clc
ja
mov
or
push
movsl
jmp
scas
sub
push
mov
mov
add
and
mov
mov
lea
cmp
push
jl
lahf
lahf
adc
popf
fistps
pop
mov
sahf
inc
push
std
xchg
gs
bound
icebp
dec
popa
mov
cltd
in
jl
pop
mov
inc
adc
inc
pop
scas
pop
cmpsl
inc
std
fisttpll
sti
dec
push
lds
mul
mov
mov
xchg
icebp
nop
out
sub
dec
adc
xchg
pop
cmp
jnp
rolb
ret
aam
add
mov
sub
inc
dec
ljmp
jae
xchg
lcall
adc
push
jno
pusha
or
sub
je
sub
jmp
or
jno
mov
sbb
je
cmp
jecxz
data16
popf
pop
out
sub
fsts
or
sahf
adc
mov
pop
lahf
aas
insl
ret
stos
jle
pop
scas
sub
js
pop
or
pop
mov
imul
loop
shl
pop
testl
cmp
ds
jae
push
lods
mov
loop
cmp
mov
push
pushf
in
jne
icebp
mov
test
xchg
or
or
add
enter
inc
inc
repz
out
sub
popl
and
call
adc
stos
fiaddl
and
and
mov
adc
add
scas
and
sbb
scas
and
ret
inc
aam
int3
jmp
pop
xchg
ret
inc
enter
pushw
sbb
adc
and
adc
lock
push
cmp
jg
cmp
sbbl
pop
fists
push
imul
xchg
cmc
jne
mov
pushf
push
dec
inc
hlt
add
loope
in
mov
sarl
lock
push
insb
stos
filds
fwait
hlt
in
xchg
call
push
xor
mov
pop
orb
ds
mov
mov
fistpl
mov
movsb
sub
out
push
xlat
xchg
cmp
bound
push
xchg
in
inc
iret
cmpsb
mov
pusha
lcall
jnp
ret
js
sub
imul
aad
jno
fmull
jmp
sub
mov
test
adc
out
add
inc
pop
repz
dec
movsb
jae
les
dec
xor
fsubrs
into
adc
push
jge
fsubl
or
mov
fwait
or
xor
mov
test
jo
mov
cwtl
rorb
add
cmpsb
es
xor
cmp
test
inc
stos
aam
mov
mov
scas
push
fistl
std
pushl
inc
int
jmp
iret
sahf
jle
mov
pop
ret
mov
in
scas
inc
jle
push
jo
ret
fimuls
pusha
and
test
xor
adc
jecxz
lock
int3
int3
not
ljmp
sbb
jnp
mov
out
and
cli
scas
inc
mov
dec
out
dec
pushf
popl
push
push
out
cmp
adc
inc
popa
push
jle
mov
dec
aaa
jo
push
scas
cmpsb
add
mov
sahf
cmp
lret
and
sbb
in
mov
mov
cmpsl
in
mov
push
insb
shrl
movsl
jg
subb
fsubs
push
ja
mov
cmc
pop
mov
inc
pop
js
mov
add
lret
cmp
jbe
xor
addl
scas
sub
adc
adc
hlt
int
pusha
push
fwait
xchg
repz
push
outsl
mov
adc
cmpsl
or
sub
int3
outsl
mov
lds
int3
dec
lret
out
dec
orl
jmp
push
test
lock
out
push
lds
pop
out
xlat
and
mov
jp
xor
mov
cmpsb
mov
jae
jl
mov
jp
fsts
add
or
mov
mov
push
inc
sbb
xchg
lds
mov
sti
addr16
mov
ja
push
test
fxch
xor
aaa
and
inc
sub
testb
mov
mov
push
mov
fdivrs
push
dec
in
leave
add
inc
sbb
xor
pop
fbstp
in
xorb
push
popf
push
mull
in
ficoms
sub
ret
inc
int3
dec
scas
ja
dec
mov
cmp
jae
or
cld
mov
cwtl
xor
aad
inc
inc
lods
or
lret
pop
fxch
pop
add
movsb
int3
arpl
mov
mov
loop
pop
cmp
outsl
das
test
out
cmp
stc
mov
jp
shr
ss
addb
and
popa
cmc
xchg
jp
sarb
out
inc
mov
xchg
fnstcw
push
pop
dec
test
inc
psubd
xor
mov
mov
adc
lcall
jmp
pop
xchg
in
scas
lahf
hlt
pop
mov
aaa
rcrb
gs
mov
int
das
dec
adc
ss
fstl
jns
inc
inc
xor
movsb
inc
sub
mov
roll
cmp
stc
pushf
outsb
sub
add
loope
jge
xchg
std
int
xor
test
pop
imul
push
daa
sbb
sbb
add
inc
loope
sbb
push
insl
cmp
mov
aam
inc
enter
and
jp
jecxz
shrl
sbb
xor
cmp
and
push
incb
fcoml
lret
push
push
or
cmpsb
inc
out
fwait
or
movsb
xor
mov
fstpt
xchg
movsl
jl
push
shlb
insb
fsubrl
xor
orl
jp
testb
fdivrs
mov
cmp
rorb
in
jne
insb
cs
out
cmc
out
pop
cmp
jo
testb
icebp
jecxz
adc
sbb
test
gs
mov
mov
jb
sbb
lods
jnp
add
icebp
jbe
sbb
stos
dec
enter
mov
mov
sbb
mov
dec
cmpsl
sbbl
outsb
pop
jns
push
jne
cmpsb
shr
sub
pop
push
xor
incb
mov
stos
mov
pop
lods
movsl
push
inc
cs
outsl
lods
and
cs
lret
sbb
lock
pop
adc
sub
into
cmp
outsb
sbb
push
jnp
and
outsb
loop
lret
cld
adcl
mov
lods
imul
mov
xlat
xchg
push
xor
jno
insl
inc
outsl
sub
sbb
fldt
cmp
popa
mov
sub
divb
out
iret
jns
push
mov
mov
inc
imul
jp
std
jnp
inc
mov
test
rcrl
push
not
xchg
xchg
lds
dec
add
mov
jge
sarl
in
fwait
ljmp
mul
xchg
sub
repnz
lock
mov
out
test
xchg
xchg
push
dec
ret
loope
es
out
xchg
or
dec
fmul
inc
fldenv
sub
dec
faddp
dec
pop
mov
xor
aas
popa
int3
push
lret
imul
js
aas
jbe
imul
and
movsb
movsl
das
adc
lds
mov
xchg
dec
xlat
cmpsb
mov
pop
sbb
aaa
movsb
faddl
cli
or
add
ficompl
mov
push
out
mov
inc
shr
cmpsl
dec
add
andb
ds
xor
inc
addb
aaa
mov
notl
sbb
inc
int
pusha
or
mov
jo
je
sti
inc
pop
jmp
inc
push
out
adc
leave
xchg
imul
cmp
xor
std
xchg
mov
jge
jl
mov
movsb
jmp
out
mov
cmpsb
adc
shrb
out
movsl
adc
jl
pop
xlat
pop
adc
movsb
adc
fisubrs
adc
cltd
mov
popa
popa
jl
lock
mov
sahf
and
and
add
mov
nop
cli
repnz
jp
fildl
pop
dec
sbb
in
add
push
jno
mov
lcall
and
xor
data16
pop
cmpsl
pop
sub
and
insb
imul
cltd
push
or
or
mov
add
mov
sbb
inc
das
repnz
jle
jns
mov
aam
jns
jae
emms
faddl
rcrl
dec
adc
fdivs
push
xchg
out
aas
std
and
in
pop
outsb
cmc
ljmp
add
repnz
aam
push
mov
add
dec
ljmp
mov
ja
cli
scas
inc
cmp
push
xchg
and
jne
cmpsl
mov
push
stos
jbe
imul
pop
mov
cwtl
or
push
leave
xchg
sbb
dec
pushf
pop
outsb
mov
call
gs
push
pop
in
sbb
adc
inc
mov
int3
inc
test
std
in
mulb
mov
testl
jbe
mov
pop
pop
xlat
imull
adc
test
sub
mov
push
in
pop
xor
jnp
out
cld
sarb
inc
ret
cld
lock
repz
lock
insb
add
ret
insb
pop
push
push
dec
stos
fbld
fsubp
add
ret
jmp
dec
or
xchg
sub
dec
test
mov
and
sub
cmp
pushf
sbb
test
movsl
pop
xchg
fsubl
mov
popf
jnp
lods
mov
sbb
popf
and
imul
push
or
cmp
ds
addl
jb
aaa
clc
sbb
rclb
hlt
out
fistpll
push
test
fdivs
fwait
ret
cmp
dec
mov
cmpsb
andb
jns
gs
push
sub
dec
in
sahf
sarb
mov
test
loope
and
or
and
leave
paddusb
inc
leave
add
in
mov
mov
divps
jno
pop
jae
cmp
xor
and
dec
and
hlt
shrl
gs
ljmp
pusha
jo
in
iret
cmp
sub
loope
loope
loopne
adc
out
push
addb
xor
int
xorb
ljmp
push
mov
clc
enter
sub
dec
popa
iret
jp
scas
push
xor
das
sub
add
jmp
test
rolb
mov
inc
imul
ficompl
add
or
cltd
sti
sahf
aaa
inc
inc
inc
bound
scas
and
mov
sub
mov
cltd
cmp
test
insb
or
stos
cmp
loop
cli
ds
fbstp
xchg
mov
ret
fwait
inc
xlat
push
cwtl
and
mov
es
or
jmp
pop
rcr
adc
aas
hlt
adc
and
pushf
push
pop
ja
jns
aam
fiadds
mov
repnz
mov
jg
fwait
dec
or
add
in
insb
lods
fstps
mov
std
xchg
out
mov
mov
arpl
addb
mov
push
fimull
fwait
dec
arpl
pop
sub
push
or
adc
arpl
repz
rorl
cmp
push
subl
xchg
dec
jbe
inc
adc
jmp
and
and
jnp
adc
lahf
std
add
cmp
scas
cmp
sub
bound
lret
lock
sbb
ss
xchg
test
jmp
sbbb
mov
mov
enter
popa
test
lret
sti
cmpsb
notb
sub
stc
adcb
adc
jg
cltd
or
xorl
loop
pop
jo
pop
mov
adc
popa
imul
push
rcr
enter
jns
jb
stos
test
pop
mov
jno
mov
sub
shr
aas
outsl
lea
rol
shll
into
pop
push
cmp
xor
pop
imul
pop
mov
fdivrl
xor
fistpl
mov
nop
outsl
xchg
je
scas
sbb
sbb
add
mov
xorb
mov
rolb
xchg
arpl
xchg
xchg
cmp
mov
sbb
dec
pop
mov
and
or
loopne
hlt
das
pop
xlat
or
push
fadds
sti
jecxz
test
in
gs
mov
jmp
inc
shrb
cwtl
push
push
xor
cmp
inc
lret
test
jmp
jmp
cmp
push
push
mov
add
mov
arpl
pop
shll
sti
cmp
popl
arpl
sub
mov
es
and
mov
in
mov
dec
std
js
mov
adc
pop
adc
js
cmc
xor
scas
xchg
sbb
out
frstor
outsl
adc
cmpsb
pop
ss
mov
xor
pop
mov
fs
je
mov
fildl
adc
ljmp
mov
cwtl
mov
jge,pn
jecxz
and
push
imul
sbb
daa
fdivr
sbb
stos
dec
outsb
fs
xorb
stc
pop
mov
xchg
or
je
mov
pop
imul
scas
repnz
ss
aam
dec
shr
and
and
mul
and
jmp
je
and
fstps
fcomp
xor
pushf
mov
jae
sub
jg
mov
nop
arpl
call
mulb
inc
in
jmp
cmp
inc
pusha
movsl
divl
cmpsl
popa
push
cmp
jmp
loopne
loop
mov
pop
push
pop
jecxz
and
shl
push
mov
orb
dec
rolb
push
xlat
jmp
sub
xor
popa
mov
push
mov
aad
and
leave
sub
xchg
or
stc
das
aam
test
sub
add
rcll
or
loop
xor
jg
leave
cmp
outsl
push
and
xor
mov
mov
mov
pop
cmp
lods
insl
clc
cmpsl
faddl
mov
fsubp
in
jecxz
enter
inc
sarl
cs
dec
sbb
test
imul
xor
imul
fcompl
add
int3
jmp
outsl
movsl
lea
stos
aas
shll
in
and
popa
lds
js
insl
hlt
je
hlt
and
repnz
test
jmp
pop
sbb
mov
mov
and
js
lret
das
aam
bound
cmp
ljmp
fldt
test
pop
adc
push
mov
stc
xor
jns
fadds
das
and
jecxz
pop
int
rcrl
ret
dec
mov
imul
or
aaa
incl
dec
or
je
add
inc
lret
rclb
pop
dec
das
inc
pop
loope
lods
sub
xchg
sahf
xchg
push
mov
lock
fimull
inc
jg
test
sbb
inc
push
push
cltd
jae
sub
icebp
dec
neg
repnz
pusha
xchg
jno
test
sbb
in
fisttpll
pop
xor
fs
push
mov
and
jne
mov
mov
or
insl
pop
jle
shlb
sub
out
mov
or
mov
ret
loope
adc
or
cmc
mov
ljmp
mov
jbe
inc
lret
fsubl
scas
sbb
orl
xor
mov
out
sahf
and
cltd
cmpsb
es
out
mov
cmp
imul
jp
les
push
mov
cmp
sbb
out
jle
sub
int3
aas
cmc
scas
xchg
clc
sub
cmpl
or
leave
repz
or
aad
test
xor
mov
push
std
cld
cwtl
inc
mov
in
mov
dec
xor
sbb
je
mov
ljmp
jbe
leave
leave
or
mov
ljmp
add
cmp
lea
fists
xorb
iret
push
je
sub
mov
inc
out
inc
or
cwtl
iret
leave
push
int
dec
jmp
mull
lods
xchg
jb
lods
mov
outsb
sub
and
mov
mov
inc
test
jbe
mov
int
rol
xorl
sbb
push
add
add
dec
mov
jo
stc
or
dec
lcall
cmp
pop
sarb
pop
jno
mov
jb
fs
pop
jne
jle
test
push
push
cli
jge
or
mov
mov
jnp
sub
mov
pop
andl
xor
mov
addb
lods
movb
dec
dec
adc
sahf
ljmp
inc
adc
ficoml
in
xorl
icebp
subb
xor
xor
inc
lret
push
xor
push
xlat
es
or
call
aam
mov
or
shlb
mov
inc
movsb
notl
fidivrl
or
jmp
xor
jle
sub
icebp
mov
aad
and
lret
pop
sub
sub
mov
jbe
das
into
fistpl
adc
mov
inc
in
mov
xlat
add
xchg
add
xchg
mov
adc
mov
xchg
pop
inc
mov
mov
mov
jo
outsb
cmpl
pop
mov
icebp
cltd
push
mov
call
or
xchg
in
or
xchg
push
mov
sahf
iret
les
sbb
test
push
test
dec
jmp
jmp
or
stos
xchg
xor
loope
cld
mov
xor
decb
outsb
mov
clc
insb
mov
jno
and
jle
xchg
fildl
out
test
cmp
mov
aad
sbb
cmpsl
lret
jne
aam
jb
sbb
ds
add
incl
cmpb
into
xchg
and
xor
out
arpl
sub
cli
push
cs
jns
and
imul
mov
mov
inc
sbb
dec
inc
xor
xor
ljmp
push
lret
mov
or
js
pop
jnp
std
or
aad
imul
lret
out
mov
idivl
insl
mov
out
out
iret
push
mov
addr16
mov
mov
xchg
jns
add
mov
fsts
iret
mov
mov
cwtl
rolb
orl
jmp
in
shlb
lret
int
ds
test
outsl
fistl
sub
rorl
push
ds
xchg
sbb
adc
fisubl
movsb
fsubr
jecxz
popa
and
cmp
mov
or
xor
xor
pop
test
pop
sbb
push
arpl
pop
xor
xchg
scas
sahf
jmp
cltd
rcl
or
lods
inc
add
push
movsb
test
inc
mov
test
popa
cmpb
sub
arpl
mov
xor
addb
test
lds
mov
std
bound
pop
mov
pop
xor
xchg
fildll
push
push
push
lods
scas
or
jns
xor
pop
and
dec
inc
shrb
das
in
cmpl
xor
jecxz
pop
sbb
push
rolb
mov
repnz
sub
mov
dec
push
cs
mov
jge
jo
loopne
in
add
cmp
scas
stos
pop
add
movsl
sub
aas
lahf
add
push
bound
push
in
jo
outsl
push
inc
dec
lock
cltd
inc
mov
imul
divl
lea
xchg
jo
and
and
or
insb
cmp
pushl
decl
xchg
jle
lret
inc
push
add
mov
in
loop
xor
jno
jge
ret
popl
or
or
pop
ljmp
jbe
cmp
lods
rclb
mov
out
cwtl
xchg
lock
sbb
mov
xor
data16
movsb
popf
imul
pop
and
cs
notl
jg
sbb
rclb
xor
js
lds
test
test
cs
lods
xchg
dec
rcrl
rol
pop
cmp
out
cmpl
cmpsb
xchg
mov
in
inc
out
repnz
js
jmp
ja
adc
pop
jnp
sub
push
mov
adcb
andb
adc
pop
popf
stc
add
xor
incb
add
xchg
loope
int
push
pop
jbe
outsb
cmp
enter
test
das
pop
mov
mov
or
scas
xchg
mov
rolb
lds
das
push
push
not
jnp
movsb
jbe
mov
mov
adc
dec
ljmp
jne
jmp
and
cmovo
cmpxchg
outsl
jmp
in
shrb
inc
int
adc
data16
push
ftst
adc
data16
cmc
dec
add
pop
xchg
push
arpl
bound
sub
xchg
sub
mov
push
leave
mov
pusha
scas
ja
mov
inc
add
push
sti
mov
cmpsb
jecxz
enter
ss
xor
and
xchg
stc
dec
ljmp
push
dec
xor
and
jcxz
mov
xchg
out
dec
mov
aaa
cmp
lcall
or
jb
das
xor
dec
jbe
jp
and
out
inc
xor
jbe
mov
inc
sub
pop
pop
cmp
int
dec
fistl
out
mov
aas
xor
std
mov
mov
neg
or
orb
sub
mov
mov
out
ljmp
jns
test
jge
ret
frndint
loope
mov
js,pn
stos
lret
jp
mov
inc
jge
sub
inc
ja
scas
lds
loope
ss
sti
mov
push
or
subl
mov
and
push
lea
leave
sub
jp
jl
lods
test
jmp
inc
cmpsb
xor
pop
fstps
xor
jno
das
daa
mov
or
loopne
or
adc
lcall
inc
daa
insb
dec
lret
test
jle
bound
or
sar
mov
mov
std
sbb
mov
sbb
movsl
jmp
mov
inc
outsl
lret
adc
dec
jo
inc
or
sbb
or
mov
push
test
sti
inc
loope
ret
mov
ds
cld
add
xchg
fistps
cmp
cmp
arpl
iret
fadd
out
jp
je
test
and
push
jge
inc
pushf
je
jne
prefetchw
or
adc
dec
lock
repnz
pop
aas
cld
loope
push
or
insl
popa
imul
lods
xchg
xchg
adc
lret
jo
jbe
loopne
cmp
pmaddwd
fs
clc
nop
scas
outsl
sahf
gs
jp
cwtl
pop
sub
out
aaa
cs
mov
loope
setae
cmpb
jns
sbb
pop
ljmp
inc
andl
adc
call
lock
fmulp
gs
aas
xor
ret
mov
imul
lods
dec
mov
jg
outsb
pop
cmp
mov
and
sub
cmp
xor
nop
aaa
stc
bound
cmp
cmp
pop
out
pop
mov
ror
movl
jg
adc
icebp
cmpsl
ds
inc
mov
icebp
aad
in
xor
divl
mov
add
out
aaa
or
jbe
sub
xor
sub
pop
fs
or
dec
gs
aad
into
jmp
sbb
adc
stos
push
ficoms
jmp
add
jmp
call
fistpl
jno
push
lea
or
icebp
stc
and
jp
mov
mov
mov
cmp
gs
push
xchg
jo
lods
inc
dec
in
mov
add
adc
xor
xchg
popf
cmp
sbb
stos
in
jne
and
and
dec
dec
jnp
dec
xchg
or
and
mov
jns
dec
jle
insb
js
fidivrl
sub
bound
js
scas
test
imull
int
aad
fs
mov
enter
push
cwtl
push
repz
mov
adc
scas
inc
add
push
push
movsb
xlat
inc
mov
dec
dec
repnz
jl
mov
in
mov
jge
cltd
ss
push
push
dec
dec
jmp
jne
mov
lds
aam
js
or
test
lds
lods
xor
lods
sti
push
sub
loop
and
pop
sbb
addr16
rcl
pop
xchg
nop
flds
mov
mov
mov
loopne
popf
adc
lret
push
repnz
jns
shrb
movsb
cmpsb
add
mov
fsubrl
cli
ret
dec
shll
repz
and
mov
jnp
mov
xchg
and
sarb
mov
dec
lcall
mov
dec
cmp
loopne
inc
sbb
fwait
mov
cltd
clc
mov
pop
fnstenv
mov
shll
mov
mov
std
movl
pop
xchg
movsb
pop
pop
rcrl
push
lret
insb
test
inc
aad
and
cmp
cmp
call
pop
or
or
dec
cli
aaa
nop
sub
repz
jge
clc
xor
cmpsb
lcall
mov
dec
ret
in
mov
and
enter
and
lahf
fimull
hlt
aad
adc
ja
ds
cmpsb
dec
das
inc
xchg
icebp
test
xchg
call
rcr
test
xchg
lret
jle
repnz
or
int
in
xor
pop
push
out
and
mov
sti
lret
pop
sti
icebp
push
xlat
aad
arpl
lret
iret
addl
jne
shlb
jae
dec
mov
xlat
test
sbb
mov
push
push
or
cmp
pop
xlat
or
gs
and
loop
jno
int3
mov
sahf
sahf
dec
cld
sbb
sbb
pop
sbb
andl
lods
daa
icebp
lcall
mov
jmp
shlb
aaa
adc
push
cwtl
addr16
loope
or
in
aad
jp
mov
loopne
scas
push
fsubl
out
test
cltd
sub
pop
mov
cs
out
lcall
fbld
inc
and
pcmpgtw
imul
add
inc
push
and
sarb
fdivl
add
mov
pop
mov
mov
dec
scas
repz
sti
fcomps
je
jo
push
into
test
sub
jmp
sbb
out
and
pop
fwait
mov
bound
mov
cmp
mov
insb
fsubrs
add
mov
repnz
add
sbb
inc
repz
outsl
sbb
insl
inc
or
cltd
lods
lret
pop
fucomi
pop
pop
dec
mov
sub
out
push
lret
imul
inc
ds
out
cli
push
fsubrs
xchg
rorb
daa
andb
repnz
pop
test
add
ficompl
sub
and
cmp
push
jb
cmp
pop
xor
mov
push
pop
adc
ficompl
xchg
mov
rcrb
or
cmp
xchg
sbb
inc
js
inc
inc
repnz
aas
and
std
cmp
jl
repz
adc
mov
les
ret
mov
xor
icebp
add
iret
jp
movsb
insl
add
jno
adc
cmp
and
or
lds
aam
dec
jb
sbb
adc
mov
pusha
push
mov
mov
repz
mov
jno
mov
pusha
subb
sti
arpl
fsubrs
mov
jecxz
sarb
sbb
adcb
stc
xchg
shlb
dec
test
mov
frstor
mov
insb
data16
bound
lods
cmp
lret
sarl
ds
mov
lcall
xorb
dec
test
pop
xlat
dec
scas
xor
nop
sub
popf
mov
or
in
sub
enter
sub
aaa
cmp
pop
fwait
in
add
fldl
aaa
pop
fldl
cmp
mov
mov
mov
imull
fsubrs
je
fdivr
push
shr
cwtl
je
sub
popa
adc
aam
ficompl
jmp
push
mov
sub
xchg
sbb
push
idivb
rcll
cmp
sbb
xchg
pushf
jb
cmp
pop
jecxz
ret
icebp
les
hlt
sbb
ja
inc
mov
outsl
jb
push
insl
inc
pop
pushf
mov
xchg
outsb
std
inc
adc
push
fwait
jbe
fwait
ret
jne
lcall
out
push
sbb
inc
arpl
stos
out
lds
es
and
push
and
imul
xchg
ljmp
call
enter
add
test
add
test
je
scas
ret
wbinvd
mov
sti
adc
repz
cld
inc
dec
sbb
test
adc
lea
xchg
aad
cs
lods
les
data16
push
cs
testb
test
imul
mov
push
in
adc
in
xchg
xchg
es
xchg
fs
cmp
sub
jnp
jg
pop
pop
aam
test
dec
cs
test
fldenv
out
sub
aad
lret
or
ds
mov
lret
ds
int
inc
inc
shrb
mov
sub
pop
shl
pop
pop
popf
cmc
loop
sub
cli
test
lret
subl
xchg
loope
fstl
and
mov
and
dec
add
ja
jns
mov
push
cmp
mov
mov
adc
and
jl
nop
cmpsl
daa
mov
dec
out
in
push
mov
test
cli
aad
cli
cmc
ret
sub
data16
cwtl
xor
testl
fimull
loopne
jmp
loopne
cmp
stc
inc
loop
jns
fsubs
into
dec
pop
outsb
xlat
jecxz
ret
cmp
je
cli
xchg
int
inc
in
fisttpl
je
mov
sub
out
pop
pop
dec
stos
xchg
cli
outsb
daa
adc
das
lret
shrb
popf
mov
inc
inc
setp
pop
xchg
jp
or
dec
sub
jmp
sbb
frstor
sub
idivl
fistpll
push
add
mov
push
arpl
cld
ret
cmp
mov
in
les
or
or
fs
out
cmc
inc
add
cltd
mov
sub
addb
insl
adc
push
cli
cld
push
dec
push
push
push
aad
ljmp
fldcw
scas
aas
or
pop
int
inc
lock
out
arpl
push
xor
rorb
or
loope
imull
sub
dec
adc
mov
dec
loopne
push
mov
inc
loopne,pn
pop
push
outsl
lar
inc
cwtl
imul
adc
cmp
mov
outsb
hlt
test
push
jo
push
outsl
add
jb
cmp
push
mov
pop
in
in
rclb
out
xlat
jns
lret
clc
xchg
inc
lret
mov
pop
jp
push
jns
leave
js
iret
sub
subb
xlat
loopne
flds
mov
js
jbe
in
repnz
bnd
xchg
lds
add
adc
xchg
sbb
jmp
adc
shll
out
mov
xor
rorb
movsb
push
cmp
dec
jne
test
dec
push
mov
in
mov
add
adc
pop
aas
ret
addr16
bndstx
dec
das
add
jmp
cltd
scas
xchg
pop
dec
test
xchg
mov
out
mov
jb
push
enter
mov
cmp
ret
arpl
aam
stos
int
ret
cmpsb
fmul
leave
out
xorb
gs
jmp
fldl
and
push
rcrl
xlat
xor
daa
add
ljmp
repnz
dec
cltd
in
pop
inc
mov
stos
icebp
xchg
out
push
cmp
clc
sti
enter
or
leave
sbb
testl
in
or
das
mov
inc
pushf
std
push
fldl
outsb
loop
dec
imul
insb
mov
xchg
imul
sbb
gs
daa
rcr
mov
pop
and
cmp
lahf
mov
mov
js
inc
imul
or
cmpsl
inc
lock
sti
mov
or
add
fdivs
andl
lods
pop
cld
jb
jnp
sar
outsb
cmp
xor
hlt
mov
and
push
jbe
mov
outsl
testl
fdivrs
hlt
test
xchg
pop
xor
hlt
inc
test
pusha
jl
inc
mov
pop
mov
daa
add
mov
insl
popl
lret
jnp
out
or
lea
je
mov
cmp
addr16
mov
mov
push
mov
lods
fnstenv
xor
add
jb
and
clc
push
hlt
push
movsl
jecxz
mov
cmpsb
sub
add
xor
in
mov
leave
mulb
push
test
jp
sub
mov
jg
mov
jl
jne
xor
pop
scas
jbe
cmp
jne
jmpw
push
jbe
sahf
or
mov
and
add
pop
push
xorl
icebp
addr16
into
push
xor
pushf
or
ds
shr
push
mov
push
adc
mov
adc
outsb
cmc
jb
pop
test
movsl
fldcw
clc
mov
pop
lds
pop
sarb
mov
push
mov
sub
dec
mov
outsl
aad
popa
jge
or
dec
xchg
scas
js
repnz
pop
enter
sbb
aaa
test
imul
fwait
cmp
add
xchg
lret
int3
cmpsb
xchg
or
xchg
add
push
mov
mov
mov
addr16
flds
sub
repz
mov
xor
cltd
mov
sbb
mov
and
call
jnp
add
and
movsb
mov
ljmp
mov
popf
andb
and
leave
mov
ffree
icebp
pop
push
cmp
inc
fmul
sbb
add
pop
das
cld
push
je,pt
fldl
orb
shlb
jmp
pop
lcall
xor
sti
mov
sbb
inc
popa
mov
sub
add
lds
dec
mov
das
or
icebp
push
out
mov
repz
fldcw
cmp
mov
stos
sbb
mov
jge
stos
mov
adc
mov
mov
cmp
sbb
repz
push
push
sahf
xchg
js
xchg
insl
add
xor
xor
sbb
addr16
adc
jns
mov
movsl
sarb
stos
sbb
dec
mov
add
jl
sti
in
addr16
dec
push
ss
or
jno
mov
pop
shll
xor
sbb
fnsave
push
inc
xchg
push
adc
fldcw
fimuls
dec
insb
and
fnstcw
in
xlat
outsl
add
cmpsb
xor
jno
sti
adc
out
outsl
aad
repz
roll
in
and
stc
pop
adc
in
or
bound
xchg
push
or
aaa
adc
cmp
scas
push
cmp
out
je
or
in
andb
jne
xchg
push
and
mov
mov
popf
out
push
and
jb
push
mov
sahf
leave
pop
out
and
cs
test
xor
insb
pushf
cmp
cmp
and
xor
mov
jp
sbb
enter
xchg
xlat
aad
jb
mov
adc
add
mov
mov
push
xor
mov
inc
sbb
lret
repnz
mov
sbb
mov
movsl
adc
xor
push
inc
add
std
fdivs
lcall
scas
in
sub
pusha
fsubrs
iret
frstor
push
mov
je
cs
add
out
fidivrs
mov
hlt
aam
pop
testb
je
stos
ja
add
std
ret
ja
aam
out
push
in
push
in
and
sbb
aam
mov
dec
insl
push
xchg
rcrl
movsb
jle
lock
jb
cmp
in
jae
jge
pop
and
xchg
and
movswl
sub
jo
fidivrs
arpl
cs
loop
stc
mov
mov
lret
fmuls
jo
sbb
xchg
xor
out
lcall
or
jbe
mov
jne
movsl
dec
or
loope
xchg
es
es
mov
mov
inc
xor
pop
push
and
adc
shr
mov
mov
hlt
adc
imul
movsb
pusha
xor
mov
pop
or
test
repnz
push
fwait
lods
push
cmpb
outsb
dec
lret
pop
in
lahf
outsl
jo
mov
mov
cmc
fwait
daa
sbb
jg,pt
dec
cld
dec
mov
dec
dec
out
pushf
adc
sub
add
inc
and
idiv
dec
jl
add
popl
xor
mov
jmp
fdivs
out
daa
jae
push
or
lea
loope
hlt
dec
push
add
mov
ss
mov
mov
dec
inc
mov
mov
hlt
ss
fldl
test
out
outsl
or
mov
aaa
xor
mov
in
sub
xor
aad
mov
inc
adc
pop
lret
jge
jp
cmp
push
addl
xor
jge
jg
or
aaa
in
bound
lods
jecxz
cmp
push
mov
jp
add
in
icebp
fwait
les
push
add
lahf
mov
pop
pop
sub
clc
test
jae
mov
insb
push
sbb
push
mov
mov
lock
das
mov
sbb
lods
cmovge
xor
in
decl
pop
push
sub
pop
shll
js
and
jns
jns
inc
or
shlb
mov
test
test
nop
insl
pushf
or
mov
in
ret
negl
lcall
lods
mov
or
xchg
andb
mov
jg
mov
pop
and
mov
insb
les
in
addb
outsb
mov
and
dec
jns
sbb
aaa
xlat
scas
int
ficoms
repz
lcall
lahf
and
cmp
and
imul
xor
loope
add
pushf
inc
test
mov
adc
aam
or
cmp
xchg
fs
pop
lcall
dec
jmp
divb
das
cwtl
xchg
int
xchg
mov
sti
dec
loopne
add
ja
add
sbb
dec
scas
jns
and
jecxz
pop
mov
push
push
push
push
inc
lods
test
lock
adc
sbb
adcb
and
sbbb
push
shlb
pop
aas
push
jmp
cmp
test
movaps
push
adc
out
push
xchg
jg
push
fdivrs
aad
mov
fidivrl
dec
sub
mov
xorl
out
cmp
pop
xorl
lea
call
mov
jmp
jb
aaa
inc
hlt
mov
cmpsl
enter
stos
dec
data16
jno
inc
push
sub
notb
xchg
shrl
ds
xchg
jmp
add
sub
cmp
sbb
imul
sbb
data16
shl
sbb
push
lea
and
ljmp
iret
sub
cwtl
out
pop
xchg
insl
les
sub
aam
paddq
insl
incl
cltd
fidivl
lcall
lret
add
stos
dec
inc
push
int
mov
movl
jae
fisubrl
xchg
pop
mov
ret
inc
out
cmpsb
je
in
sbb
sbb
push
in
or
je
lret
out
push
cld
int3
mov
in
daa
sbb
jb
or
fstpl
aaa
fidivs
leave
outsl
mov
out
inc
loope
and
in
aad
int3
push
fldl
jo
mov
pop
pop
dec
shrb
sub
mov
cmp
mov
jg
orl
push
mov
lds
loopne
mov
pop
dec
test
xchg
mov
mov
adc
movsb
rcr
add
cmpsl
dec
add
cmp
push
push
xor
xor
cmpsl
jne
ljmp
cmp
xchg
xchg
dec
xor
mov
sub
and
test
test
ret
add
mov
mov
sarl
or
pop
mov
outsb
inc
mov
or
lcall
add
hlt
or
lahf
push
push
push
sub
xchg
movsl
mov
scas
test
mov
lret
jmp
shrl
xchg
test
cmp
mov
push
sub
jle
les
jge
adc
out
iret
lret
pusha
pusha
dec
int3
jno
xchg
cmp
sbb
mov
mov
push
add
mov
std
ficoml
pop
sbb
lahf
or
dec
shr
mov
sbb
das
mov
sti
sbb
shlb
clc
dec
hlt
push
jo
inc
cmp
aas
scas
mov
or
jno
je
adc
cmp
jl
lea
adc
sub
sahf
sub
movsb
pushf
mov
int3
xor
movsb
cmpsl
sub
xor
inc
sub
sti
sub
addr16
test
cltd
cmp
or
cltd
mov
inc
sub
mov
xchg
xchg
movsl
dec
js
and
pusha
pop
ljmp
push
sub
and
jo
mov
push
pop
cmp
push
mov
xor
stc
sbb
idiv
jno
mov
mov
mov
adc
and
test
dec
fs
push
addb
mov
movsb
adc
sub
cmp
jno
mov
mov
jmp
outsb
adc
xor
lea
ds
push
test
xchg
repz
xchg
cmp
pop
push
sub
movsl
in
addr16
and
call
ret
in
dec
sbb
negl
jge
cmp
jae
or
mov
mov
decl
sahf
add
aas
mov
inc
scas
push
idiv
scas
xchg
xchg
dec
jl
fsts
dec
test
sub
aas
sarb
cltd
sub
cli
decl
imul
into
xchg
dec
xchg
jg
add
push
adc
push
movsb
mov
je
in
shlb
xor
jmp
pop
call
cmp
aad
int3
lock
xchg
xor
leave
nop
popa
mov
sbb
mov
mov
add
test
lcall
out
mov
je
cmp
mov
ficompl
mov
pushf
push
mov
push
mov
mov
mov
mov
cli
out
mov
stos
test
mov
scas
pop
push
fsts
into
mov
das
data16
jns
adcb
test
add
aas
aaa
lods
mov
adc
out
test
dec
loope
fs
and
mov
or
lods
das
adc
outsl
inc
js
fstpt
nop
xor
lcall
jno
jno
dec
mov
push
or
jnp
into
mov
jno
repnz
push
enter
mov
int
test
js
cmp
pop
in
movzwl
mov
lock
mov
xor
mov
iret
cmp
ret
pop
fcompl
into
add
jecxz
divl
mov
movsb
ljmp
pop
outsb
cmp
imul
insl
gs
xchg
push
mov
lods
ds
mov
or
in
sub
cld
aas
push
stos
mov
cmc
subl
fsubrl
icebp
in
dec
loop
mov
add
xchg
dec
lret
jo
testl
jmp
movsb
pusha
pop
jne
push
push
orb
mov
into
dec
mov
cwtl
sti
dec
mov
push
push
fs
stos
out
dec
xor
inc
clc
pop
xor
pop
push
xchg
insb
loop
testb
testl
sub
jg
xor
and
cmpsl
repz
bound
dec
sti
das
pushf
test
test
insb
push
mov
clc
mov
lret
nop
vmwrite
iret
lds
inc
xlat
outsb
inc
and
adc
sub
fidivrs
das
repz
adc
or
mov
cmp
jo
ds
xor
xor
mov
out
mov
cmp
xchg
ja
or
mov
je
or
jns
insb
test
addb
push
stos
lock
movsl
mov
jne
shll
or
pop
ja
rcrl
or
and
pusha
mov
hlt
repz
mov
out
xchg
fwait
shrb
cmp
testb
adc
inc
pop
or
pop
add
pop
push
aas
mov
mov
in
addb
mov
adc
add
mov
push
xchg
xor
sub
mov
ds
iret
std
scas
test
mov
inc
rep
and
cmp
call
iret
and
or
mov
xchg
pushf
pop
mov
ja
inc
call
push
sub
arpl
lahf
insb
sub
inc
mull
ja
ret
mov
dec
cmp
arpl
add
fdivs
mov
movl
fisubs
pop
mov
jnp
data16
mov
std
es
adc
sbb
xchg
jno
sub
xor
sbb
pop
or
test
sarb
or
mov
push
pop
mov
adc
les
inc
popa
aam
jl
push
adc
rorb
and
test
psubusw
lock
dec
in
sbb
and
or
jle
stos
test
adc
jno
out
cmp
and
xor
sahf
lret
mov
das
push
lods
mov
dec
push
clc
loope
adc
or
xor
sahf
adc
and
jp
insb
jle
cmpsl
jbe
sub
mov
pop
arpl
out
sbb
push
mov
mov
or
stc
int
mov
dec
mov
out
mov
repnz
adcb
cmc
into
cld
sub
push
xchg
nop
insl
rol
ds
sti
push
dec
pop
jne
jmp
fistpll
aam
sub
test
icebp
test
mov
xor
jmp
sbb
inc
imul
and
add
dec
xor
push
pop
mov
push
and
and
sti
outsl
rclb
mov
ss
mov
mov
lds
sbb
mov
cmp
adc
imul
xchg
or
imul
lds
pop
sub
sub
loop
and
xchg
and
adc
ds
mov
mov
xchg
test
dec
rcr
lahf
xchg
jo
mov
fimull
push
adc
das
sub
out
repz
lahf
dec
cmp
inc
lea
and
stc
sub
dec
push
imul
dec
xchg
std
mov
cwtl
cmpsb
push
jl
cmp
push
jbe
cmpsl
pop
xor
mov
stos
fnclex
cmp
jae
mov
jmp
jnp
mov
ljmp
jbe
shll
out
ret
inc
icebp
xor
jne
add
mov
cwtl
jmp
inc
aaa
xchg
sahf
popa
inc
mov
int3
aam
imul
jns
inc
sub
fisubrl
pop
fstpt
daa
and
add
cmp
sub
xchg
or
dec
dec
xchg
outsb
out
int
aas
push
test
cli
adc
xchg
lret
daa
pop
push
sbb
leave
loop
ja
int3
mov
push
aaa
ret
add
mov
add
lea
scas
jl
xor
movsl
aaa
push
add
xchg
mov
fsubrl
or
loope
inc
repz
les
push
ret
mov
mov
and
cmp
into
clc
add
js
mov
ja
or
sub
fcoml
cmp
aam
enter
push
push
jb
test
jle
jbe
mov
push
leave
and
or
mov
or
mov
sbb
cmp
xchg
hlt
imul
scas
sub
pop
inc
cmp
or
mov
jbe
mov
dec
cltd
lods
cmp
imul
test
inc
jnp
mov
sbb
dec
cmp
mov
stos
xchg
mov
pop
into
clc
enter
sbb
add
dec
cli
jns
cmp
pop
pusha
mov
data16
ss
pop
mov
test
inc
cvtdq2ps
sbb
in
scas
mov
orl
cmp
pusha
xchg
adc
adcb
ljmp
mov
cmpsb
loopne
out
and
and
push
cmc
adc
idivl
jns
pushf
dec
addr16
inc
push
in
mov
add
push
std
xchg
cmpsl
bound
pop
cmp
jecxz
add
arpl
pusha
out
xlat
jae
xchg
push
test
jae
cwtl
jo
xor
in
sub
cmpsl
add
fwait
xchg
inc
es
fwait
xor
out
jl
aam
xchg
add
sbb
add
dec
lods
push
sbb
mov
pop
jl
or
hlt
cmc
std
dec
lods
imul
dec
xchg
outsb
adc
push
jae
in
xchg
dec
jg
jae
adcb
loope
and
inc
in
lock
xor
out
cli
lock
rorl
push
ljmp
or
lahf
push
jns
shll
enter
imul
cmp
mov
mov
push
aaa
adc
cld
push
test
push
movsb
push
into
bound
or
stc
je
mov
mov
fwait
xor
xlat
cmp
push
push
push
test
int3
push
mov
and
inc
or
aad
and
inc
dec
icebp
imul
out
ja
or
sub
lods
iret
scas
mov
cmp
cmp
dec
fnstenv
mov
jmp
push
mov
push
mov
add
incl
rcrl
addl
movsl
dec
fidivrs
in
int3
nop
es
push
mov
xor
repz
decl
icebp
addr16
jecxz
sarb
in
sub
or
lds
cmp
or
mov
mov
jge
cmpb
popa
adc
test
fwait
jmp
clc
sarl
jnp
test
dec
out
imul
dec
cmpsl
cmc
mov
les
mov
push
lods
sbb
pop
pushl
stos
push
je
inc
cltd
sbb
int
testl
or
mov
dec
push
sbb
jmp
bound
pop
mov
jne
sub
sarl
adc
ja
cmpl
jns
push
out
int
mov
adc
fidivrl
mov
fiadds
lret
lret
jno
ja
rcll
rclb
popa
dec
or
lods
jmp
and
push
arpl
mov
jle
sarl
sbb
repnz
stos
cmp
sbb
inc
lods
aad
mov
mov
and
mov
mov
push
test
mov
pop
ds
xor
lods
push
jo
mov
sbb
dec
add
fildll
xchg
inc
shlb
das
mov
cmp
lods
jno
adc
sbb
xchg
adc
mov
inc
pop
pop
xor
in
cmpsb
xchg
sub
push
push
sub
call
xchg
test
lret
pop
mov
pushf
cmp
outsl
rolb
inc
and
and
insb
stos
dec
lea
ror
push
fstpl
inc
jbe
scas
mov
adc
imulb
xor
and
shll
pop
push
add
cld
xor
imul
cld
dec
jne
pop
or
or
dec
imull
sbb
add
je
hlt
out
pop
pusha
add
xchg
mov
js
inc
sub
outsl
inc
lods
mov
jne
int3
ss
into
jge
lods
cwtl
outsb
sbb
cs
jmp
pushf
out
push
nop
dec
pop
xlat
cmpsb
jae
sbbl
mov
test
out
cmp
clc
fcmovnu
jp
mov
inc
lret
cs
dec
dec
out
inc
stos
scas
test
and
repz
cs
cmp
push
dec
lcall
andl
sbb
jp
dec
adc
rolb
fstpt
mov
es
xchg
jle
ficompl
push
shl
push
sbb
cld
sbb
int3
add
lods
add
and
inc
xor
aam
daa
jp
adc
inc
and
das
adc
push
sbb
sbb
aaa
clc
jp
outsl
in
mov
dec
clc
inc
cwtl
pop
cmpl
scas
es
fisubl
xchg
leave
fsubs
loope
imul
daa
xchg
shl
or
mov
adc
lds
push
fsubrs
stc
xor
jge
mov
dec
daa
mov
mov
mov
fistpl
mov
mov
dec
push
rcrb
leave
jge
stos
cltd
fucom
lods
arpl
fwait
sbb
cmp
xor
add
jmp
push
push
and
test
add
jnp
push
setno
in
xor
jmp
and
shlb
movsl
aad
mov
push
add
popf
shll
jle
push
decl
xchg
in
xchg
and
pop
jo
mov
inc
xchg
orb
mul
add
xchg
sti
jae
xchg
jmp
dec
cmp
repz
xor
mul
mov
js
test
or
push
mov
andl
inc
jns
adc
out
and
push
xorl
test
popf
imul
inc
dec
mov
xchg
dec
mov
inc
sub
mov
jl
add
or
popa
hlt
adc
mov
nop
or
mov
jnp
movsb
jecxz
cmp
jmp
dec
ror
mov
jne
add
fisubrl
xchg
jecxz
sub
movsl
insl
stc
sbbl
push
outsl
xchg
insl
ljmp
jb
xor
push
jno
xchg
sar
imul
enter
and
loopne
or
adc
fidivrl
lcallw
repnz
ret
pushf
pop
mov
cltd
xor
xor
or
and
fsubs
mov
pop
aad
hlt
lock
sub
sbb
cmp
loop
dec
jl
nop
dec
cli
cld
not
aaa
int
daa
add
mov
cmpsl
jo
sbb
call
jge
mov
cmpsl
jns
pop
push
jns
cmp
cmp
push
ja
jbe
les
das
negb
cmpsl
inc
dec
rorl
mov
or
ror
mov
or
aam
out
push
mov
jno
int3
aad
sub
das
push
jns
mov
adc
sbb
sbbl
mov
add
stos
mulb
pushf
jl
push
or
jp
pop
bound
jno
test
mov
sub
push
jle
xchg
cmpsb
dec
sbb
lret
insl
xchg
mov
push
sub
into
adc
cmp
icebp
gs
cli
xor
jns
sub
ljmp
into
or
rclb
outsl
jae
add
jae
mov
in
data16
inc
sbb
mov
imul
mov
sub
sarl
jp
xchg
in
xchg
adc
inc
cmc
sbb
es
icebp
push
add
popf
in
mov
test
sbb
aas
jmp
fcmovnbe
js
aaa
dec
lock
mov
push
fwait
shl
push
lock
sti
xor
dec
aam
cmc
xchg
in
scas
push
push
lds
mov
shr
sub
jmp
pop
shlb
cmpsb
sub
enter
test
mov
mov
cwtl
sub
push
and
xor
adc
inc
xchg
cmp
inc
dec
scas
or
jne
cmp
lock
pop
jno
push
cmp
dec
xor
jns
cs
pop
and
dec
decl
sbb
popa
add
sbb
sub
pop
loope
sbbl
sub
cmp
mov
ja
jmp
lret
test
insl
mov
gs
jecxz
dec
pop
rcrl
mov
jo
ljmp
les
mov
dec
test
stos
push
test
mov
or
adc
fdivl
mov
gs
shl
je
xor
push
mov
or
add
icebp
xchg
out
lea
inc
pop
push
sub
inc
mov
sub
jmp
out
sbb
mov
push
mov
popf
ss
xchg
mov
add
test
cs
sbb
loopne
add
xor
xor
and
push
out
aaa
cmpsl
push
les
int
in
enter
pop
in
repz
lods
or
add
fs
call
out
lcall
or
add
clc
push
pop
dec
movsl
jp
subl
pop
in
pop
inc
cmpsl
fwait
add
and
enter
jno
fwait
xor
xchg
ficompl
mov
xchg
les
sub
and
jge
rep
or
aad
sub
sbb
sub
pushf
pop
sbb
xor
xor
in
mov
jmp
loopne
pop
arpl
ds
push
and
mov
cs
pop
insl
and
outsl
adc
ljmp
lea
sub
xchg
mov
adc
insb
fbstp
mov
add
jbe
sub
mov
shrl
test
inc
cli
sbb
dec
lods
jbe
inc
inc
push
dec
sti
mov
add
add
push
fidivrl
mov
in
add
xor
ret
mov
fisttpl
sub
test
cld
or
jle
icebp
push
add
shlb
arpl
sub
ret
cmp
cwtl
loopne
add
fisubl
add
imul
xchg
and
insl
mov
negb
xchg
jle
pushf
mov
daa
push
mov
clc
fisttps
xor
mov
enter
sbb
lds
pop
pop
jo
jmp
mov
mov
sbb
sub
icebp
shrb
sbb
push
push
push
daa
sub
rcrl
lea
mov
dec
pop
add
in
or
jle
fwait
cld
mov
insl
mov
or
xchg
insl
push
dec
bound
shll
dec
mov
mov
jecxz
adc
and
outsb
divl
pop
cmp
ret
jae
out
mov
out
jp
sub
fucom
jle
mov
fdivp
gs
inc
xor
adc
lahf
sahf
ffree
lcall
mov
test
lock
test
xor
ret
jb
mov
sub
out
mov
or
out
cmpb
int
mov
lret
pop
cmpsb
dec
test
scas
add
outsl
mov
shr
or
ret
lds
in
movsl
and
jnp
and
hlt
mov
sub
mov
xor
sahf
pop
mov
in
notl
xor
cmp
cmp
adc
cmp
mov
xchg
xchg
dec
fwait
inc
roll
in
js
mov
fstpl
push
inc
mov
jp
aas
movsl
cmp
and
in
sbb
mov
mov
leave
fsubrs
inc
pop
sbb
lret
push
pop
aad
and
add
loopne
inc
cli
icebp
out
add
mov
adc
mov
out
shrb
jno
aam
adc
adc
loopne
cmpsb
bound
dec
dec
inc
mov
std
shr
das
in
xchg
and
push
call
rolb
or
sbb
ja
ds
out
mov
aad
int
push
jno
inc
lods
mov
rcrl
sub
imull
movsl
push
xchg
es
clc
or
pop
mov
mov
and
js
cmp
xchg
addr16
mov
mov
cmpsb
fnclex
and
mov
sbb
mov
aam
pop
imul
int3
xchg
dec
outsb
mov
nop
cmp
daa
icebp
and
loope
push
xor
pop
or
adc
imul
push
ljmp
mov
ss
jae
cltd
cwtl
shrl
mov
push
daa
xor
lea
ficompl
jne
xchg
push
jmp
add
aas
mov
scas
mov
rorl
cwtl
sub
or
sub
adc
scas
and
sbb
daa
clc
inc
shl
in
cmp
xchg
lret
mov
jnp
nop
mov
rolb
pushf
and
jp
movsb
arpl
add
loop
mov
sbb
movsb
push
clc
pusha
push
mov
add
cmp
rorl
aas
pop
sbb
adc
hlt
cld
adc
ss
cmc
push
test
dec
out
fxam
mov
add
xchg
mov
mov
daa
mov
pushf
mov
out
outsb
popa
cmc
and
jle
push
pop
stos
jmp
inc
sub
les
imulb
mov
or
inc
jp
mov
jns
ja
aad
xchg
fsubrs
mov
scas
push
pop
je
outsl
imul
test
jne
add
popf
movsb
decl
rol
jns
dec
mov
jno
jl
sahf
test
repnz
nop
les
out
lret
sbb
lods
in
in
jl
adc
push
nop
lcall
adc
stos
mov
xchg
test
ja
mov
fwait
xor
mov
aaa
mov
adc
cmpsb
push
cmp
sbb
test
jno
test
loop
jp
dec
jnp
mov
add
popf
sbb
xchg
fdivl
push
push
jo
adc
xchg
pop
jg
ret
sub
add
push
cmc
jno
mov
scas
mov
push
pop
jl
jno
leave
mov
popa
fmull
pop
cld
sub
push
cmp
cmp
les
lock
outsl
mov
movsb
je
jge
scas
or
cmp
outsl
aad
jl
mov
cmp
in
jo
rcrb
and
xor
pop
mov
mov
test
lret
add
into
mov
adc
sti
stos
xchg
mov
mov
out
sub
repnz
pop
loop
push
xor
add
leave
mov
call
pop
or
or
js
mov
pop
pop
js
jnp
inc
into
iret
lods
test
sbb
fistpll
repnz
xchg
outsb
xchg
les
clc
push
outsb
cmp
hlt
dec
mov
xchg
stos
inc
inc
ja
dec
mov
or
stos
out
sbb
mov
jnp
sbb
shrd
push
xor
sbb
dec
mov
test
sarb
aaa
mov
sub
mov
dec
lea
lods
adc
rcrl
cmp
mov
mov
ret
jp
push
or
addr16
mov
adc
mov
and
iret
sub
inc
mov
mov
dec
movsl
mov
outsb
or
inc
mov
dec
fisttps
pushf
cmc
mov
xchg
dec
imul
xchg
xor
call
movsl
cli
mov
adc
inc
xor
push
or
jae
mov
sbb
call
pop
sbbb
sti
sbb
jnp
rcrl
add
cs
add
push
popa
les
shrb
push
dec
mov
cmc
pop
mov
lahf
and
mov
push
bound
scas
aas
nop
test
xchg
loop
loop
test
pop
cld
sbb
add
nop
leave
pop
cmpsb
shll
in
jle
push
and
leave
mov
jmp
es
mov
roll
arpl
lret
mov
mov
inc
push
or
jno
in
cltd
idivb
sub
test
insb
adc
pop
add
cwtl
sub
push
hlt
iret
xchg
mov
jo
mov
lret
dec
cmp
sbb
je
jbe
or
repnz
xchg
jbe
sbb
or
push
sub
sbb
iret
and
mov
push
sbb
sub
fistl
cmp
mov
cmp
inc
outsl
fcoml
xor
lods
jo
mov
aam
fucom
jmp
imul
hlt
test
mov
ja
lock
adc
arpl
fnstenv
cmp
pop
push
aam
dec
fwait
mov
iret
fs
or
and
sub
adc
and
js
stos
mov
xor
inc
mov
les
sub
inc
xchg
pop
rolb
sub
adc
push
fiadds
jl,pn
sbb
scas
lods
adc
push
adc
js
and
enterw
jno
sub
into
jbe
bound
rcrb
les
imul
pinsrw
push
inc
js
and
ffreep
mov
cmp
inc
cltd
int
and
cmp
jns
sahf
inc
cmp
lcall
xchg
aas
pop
pop
sbb
insl
mov
dec
xor
sub
mov
icebp
je
inc
dec
dec
xlat
das
jmp
insb
pop
sbb
ljmp
push
fsubl
insl
aaa
adc
loopne
sarb
push
push
ja
loop
dec
js
adcl
or
dec
sbb
shlb
movsl
or
sub
daa
mov
dec
adc
out
mov
lret
or
pop
xor
sbb
sbb
or
sbb
dec
fstpl
mov
arpl
testb
lret
pop
fcompl
push
div
dec
out
jnp
pop
int
push
cmp
addr16
mov
push
dec
into
xchg
icebp
push
fcoms
mov
test
pushf
mov
inc
add
sub
xchg
stos
jmp
jp
xchg
je
fwait
push
sbb
mov
push
mov
xchg
lret
cwtl
sbbl
and
pop
icebp
icebp
dec
jle
fwait
mov
lock
and
dec
iret
mov
jecxz
cmpsl
mov
push
push
jp
mov
adc
jmp
add
andl
pop
add
shl
test
mov
ljmp
cltd
sahf
aaa
dec
inc
fldcw
add
hlt
jns
xchg
clc
or
fcmovne
sahf
fdivrl
into
fsubp
rcr
jmp
roll
stos
cmp
out
mov
or
imul
test
std
popa
mov
cmp
push
lds
ror
test
jg
or
mov
fnsave
or
mov
faddl
or
movsb
data16
movsl
push
push
xchg
xor
je
push
gs
jl
jg
popl
pop
in
aam
loop
sub
shrl
push
sbb
sbb
and
cmpsb
xor
or
aam
add
shlb
and
pop
or
sti
jecxz
push
pusha
dec
std
push
scas
arpl
dec
xlat
pop
xchg
in
cmpsb
scas
or
pop
jo
mov
scas
mov
mov
pop
repz
cmp
lods
sbb
mov
test
dec
mov
mov
lds
mov
dec
push
aas
dec
fisttps
cwtl
scas
popf
ret
lea
les
adc
aaa
lret
xchg
cli
pop
std
sub
sub
mov
ret
xchg
jo
pop
insb
scas
popa
inc
outsl
gs
mov
sbb
ljmp
sbb
xlat
xlat
lds
xor
popf
hlt
pop
and
push
bound
lret
push
icebp
loope
dec
popf
lock
xchg
adc
mov
int
scas
fmuls
push
ret
popa
test
adc
mov
and
cld
std
notb
push
das
mov
and
mov
jno
push
xchg
or
push
test
sbb
cmp
sbb
dec
cmp
mov
dec
mov
pop
lea
adc
or
fisttpl
das
test
xchg
cmp
addr16
movsb
test
add
mov
inc
outsl
shlb
jp
aaa
inc
bound
repz
and
mov
mov
inc
cld
push
sub
pop
lret
movsb
stos
mov
faddl
ss
mov
ret
in
push
stos
lret
mov
pop
and
mov
dec
inc
sub
out
dec
into
sbb
outsl
aas
inc
pop
loope
jae
je
jle
or
clc
mov
xchg
mov
scas
inc
and
test
mov
adc
dec
insl
xchg
loope
add
lahf
pop
lahf
cmp
cmp
xor
rcr
mov
addl
out
mov
push
jecxz
mov
movsl
adc
cltd
pop
xchg
loope
dec
cmp
aas
and
inc
mull
pop
add
arpl
dec
adc
pop
ret
std
cmp
cltd
in
jb
xchg
decl
jmp
or
mov
stc
mull
mov
dec
push
iret
cli
mov
lcall
mov
mov
mov
out
cmpsb
ds
jno
mov
fs
xchg
push
inc
repz
xchg
fwait
adc
int3
push
insb
pop
popf
sub
das
jne
daa
mov
cmpsb
outsb
lahf
jmp
push
xchg
cmc
movsb
ljmp
mov
jb
pop
jg
mov
aas
gs
push
lds
adc
jmp
aas
cmc
adcl
jmp
mov
cmpsl
or
pop
and
insb
andb
testl
aaa
jecxz
cwtl
xchg
or
cmp
cmpsl
pop
pop
push
ja
in
sbb
sti
outsl
mov
xchg
js
dec
out
aam
int3
or
push
in
ret
or
arpl
movsb
sub
and
mov
fsubs
dec
imul
add
insb
fstpt
push
xchg
ror
imul
push
fdivl
mov
xor
mov
aad
mov
xchg
xchg
and
inc
rcrb
add
sbb
fwait
int3
mov
xor
das
xor
ds
xchg
xchg
xchg
xchg
dec
pushf
jmp
lret
dec
pusha
aad
icebp
out
sub
test
xlat
jge
pop
mov
lcall
lea
lods
bound
fbld
xchg
or
ja
out
sbbl
and
pushl
pop
jbe
pop
xchg
push
inc
inc
jb
jae
bound
subl
mov
ficompl
pop
scas
mov
cs
add
xor
aad
sbb
jge
push
testb
push
stos
push
cmp
test
xchg
ret
sub
std
cmpsl
jne
pop
mov
aam
jne
pop
lock
xor
xor
or
xchg
and
rclb
sbbb
cltd
xchg
mov
testl
or
je
mov
lods
or
cli
fsubrl
repz
sbb
mov
jmp
xor
ret
inc
xlat
and
stos
or
and
xchg
xor
daa
shlb
roll
aam
enter
jo
dec
xchg
mov
clc
mov
test
xor
orl
pop
loope
inc
xchg
and
leave
jl
icebp
dec
mov
adc
cmp
outsb
cmp
push
lock
std
inc
inc
lahf
and
js
push
int
sub
sub
ja
push
pop
mov
add
xor
incb
jl
fwait
stos
std
push
shrl
shrb
js
das
test
pop
dec
mov
hlt
test
push
xchg
xchg
je
shrb
sti
aas
mov
cmp
das
push
in
pushf
pop
push
push
sub
rol
push
mov
jge
adc
xorl
pushf
xor
popa
xchg
loopne
xchg
push
mov
inc
hlt
inc
roll
push
sbb
aam
addr16
cltd
mov
call
push
or
jle
decb
addr16
jle
out
mov
ss
mov
out
imul
out
int3
push
or
adc
fbld
outsb
xor
inc
or
push
shll
adc
adc
stos
and
repz
call
daa
aam
repnz
sahf
xor
mov
add
dec
popf
xchg
and
scas
sub
jecxz
shl
mov
mov
pop
xor
cmpb
aas
rcr
pop
sub
sbb
imul
les
cmp
add
aas
sub
mov
cs
stos
xlat
loopne
mov
lods
cmp
imul
add
test
mov
test
push
push
dec
inc
rcr
xchg
mov
push
pushf
mov
pop
inc
and
pushf
in
lret
pusha
cmp
pop
mov
adc
push
cli
sub
or
call
xchg
rorb
dec
cli
bound
add
adc
cmp
test
pushf
or
rorl
je
out
push
sbb
scas
adc
add
adc
jnp
int3
dec
fcoml
mov
inc
sub
mov
outsl
lret
or
insl
fldt
imul
and
pop
cmp
mov
ret
push
adc
pop
pop
jle
jae
sub
je
repnz
cmp
mov
lcall
cmp
out
pop
cmovno
and
jl
sub
rcl
shll
hlt
in
test
sub
mov
push
mov
je
mov
bound
inc
fwait
movsl
and
add
pusha
or
xor
sub
cld
fld
dec
push
and
dec
pusha
clc
gs
xchg
lret
jae
imul
dec
insl
sbb
pop
iret
cwtl
sub
jo
dec
add
dec
xor
cmpsl
in
xor
fstps
mov
test
mov
sbb
xchg
insb
jno
or
call
push
inc
aad
enter
mov
push
mov
adc
test
pop
les
or
push
not
mov
or
loop
lock
xor
jl
jno
pop
movsl
add
or
push
jne,pt
mov
mov
stos
mov
sbb
inc
dec
inc
test
and
add
jne
cmp
ficoml
and
pop
loop
lods
outsb
cs
fcmovb
pop
sub
pop
movsb
decl
xchg
adc
inc
jmp
adc
adc
jl
or
xor
lcall
jno
sbb
fidivrl
cs
push
sub
out
mov
ret
sbb
or
test
outsb
jg
sahf
mov
outsl
ret
movsl
pop
bound
dec
scas
and
mov
sarl
dec
and
sbb
aam
xor
loopne
add
adc
cmc
jae
insb
push
in
or
jnp
or
push
movsl
aad
fsubr
sahf
mov
or
nop
pop
or
or
pop
and
mov
pop
mov
pop
aaa
and
cmpl
cld
ja
lods
fbld
push
jns
imul
aam
shll
and
jl
jae
adc
cmp
mov
add
test
mov
sahf
mov
andl
sbb
push
lds
jg
adc
and
mov
lods
mov
mov
movd
ss
js
unpckhps
pop
and
aad
xchg
icebp
out
arpl
insb
lahf
xchg
lcall
sub
jbe
enter
mov
stos
fs
mov
lds
dec
xorl
inc
mov
mov
stos
loop
fmul
lock
sub
push
pop
shrl
mov
out
jecxz
jge
sti
adc
mov
sub
adc
cmpl
aam
out
cmpsb
mov
gs
out
pop
fmuls
jge
ljmp
pop
adc
xor
popa
sahf
cmp
rcll
test
aas
and
roll
aad
lods
in
adc
mov
jbe
popa
pop
ljmp
outsl
xor
cmp
in
stc
jo
mov
adc
hlt
lock
mov
jmp
inc
sub
scas
pop
bound
adc
adc
dec
fdiv
addr16
enter
pusha
mov
xor
pop
inc
push
push
fisttps
mov
mov
lods
sbb
je
popa
push
call
lock
test
adc
dec
push
mov
fmull
lds
pop
xor
les
int
cld
and
cmp
notb
xchg
pushf
xchg
mov
negl
push
push
out
mov
insb
adc
sub
xchg
les
mov
cmpsl
xchg
or
or
leave
mov
loopne
js
bound
mov
fsubs
fs
mov
repz
or
stc
loopne
jo
sub
loopne
idivl
clc
or
mov
or
inc
inc
push
inc
enter
shll
into
pop
leave
jbe
push
push
add
or
push
lcall
int
mov
loopne
imul
pop
rorb
int
or
sub
dec
mov
icebp
mov
cltd
addr16
mov
imul
mov
push
dec
movsl
or
and
lcall
stos
fildll
das
pop
xchg
popa
or
and
sbb
mov
cmpsl
xchg
sub
mov
fs
jnp
pop
inc
push
push
jno
jb
daa
sarl
outsb
or
adc
cmp
daa
mov
imul
test
movsl
stos
xor
aaa
mov
xchg
movsl
mov
push
test
xchg
cmpsl
pushf
push
jns
pop
jge
add
stc
repnz
mov
cmp
lahf
sub
pop
fidivrs
ret
les
sbb
mov
fsubrl
xchg
push
jno
xchg
cmp
nop
xchg
mov
adc
fs
adc
sub
pop
in
insl
pushf
sbb
subb
lret
mov
inc
cmp
lahf
mov
xchg
popl
add
push
sbb
jne
scas
inc
cli
push
xor
test
fisubl
pop
stos
sub
push
insl
dec
add
arpl
js
mov
mov
sub
orb
fadd
and
outsl
push
inc
mov
sbb
leave
aad
xchg
int3
adc
cmp
adc
bound
sub
and
aaa
imul
outsb
jl
and
lock
scas
loopne
mov
loope
insl
adc
jne
nop
mov
in
cmpsb
mov
into
xchg
sub
mov
xchg
xchg
stos
addl
mov
cmp
into
popf
fcomps
in
jmp
xor
xchg
scas
cmp
iret
mov
stos
jno
jo
aas
lods
enter
jns
mull
or
in
or
xchg
pop
fdivrs
addr16
ja
callw
pop
bound
loopne
adc
in
cmpsl
push
lcall
shlb
add
xor
sbb
sahf
stos
orb
lock
inc
dec
rol
insb
jg
xor
fisttpll
test
add
lahf
dec
sbb
push
add
and
andb
adc
mov
repz
xchg
mov
push
outsl
add
cmp
cmc
sbb
scas
in
xchg
push
cmp
gs
out
jecxz
data16
das
xor
mov
pop
clc
jae
ficomps
pop
sti
xchg
sbb
push
sbb
pop
aam
loopne
neg
jne
jmp
pop
popf
dec
lea
or
aas
das
mov
setnp
and
xchg
xchg
push
arpl
fnstcw
pop
imul
xor
adc
cld
and
insl
push
inc
fwait
insl
cs
and
jnp
aam
sbb
addb
lahf
cmpsl
lret
mov
mov
test
jb
je
inc
iret
jb
test
mov
or
add
scas
test
dec
aaa
xchg
fdivrp
jl
cmc
inc
xorb
dec
push
mov
mov
gs
mov
sub
or
ja
sahf
mov
scas
dec
xchg
test
cmp
inc
loop
inc
movsb
imul
mov
stc
cmc
int3
test
insb
lret
sub
jbe
inc
and
adc
xchg
div
lahf
and
sti
out
cs
sbb
push
pop
std
push
inc
cmpsl
mov
aad
roll
in
xchg
mov
xchg
outsb
adc
push
mov
ret
ficomps
inc
cltd
mov
shl
jns
cmpsl
mov
cmc
aam
jp
aam
xchg
mov
push
stos
mov
xchg
into
lea
movsb
in
xor
test
and
mov
je
cmpsl
aas
gs
test
sti
sti
jecxz
test
dec
inc
xor
add
shl
ret
pop
sbb
cmp
test
or
cli
push
add
lret
outsb
lock
fidivrs
pop
mov
or
xor
jecxz
sti
fcmovbe
inc
scas
sbbl
adc
fwait
jae
jno
enter
loopne
sub
lock
in
das
mov
pop
jno
or
fistl
data16
std
push
and
jne
push
out
xor
inc
popf
pop
push
cmp
cwtl
aas
cmp
addr16
sub
das
push
imul
aaa
add
cmp
push
push
cmpsb
test
mov
fwait
icebp
pop
or
sub
lahf
jl
xchg
pop
mov
test
mov
push
xchg
xchg
jmp
out
sbbl
jecxz
inc
scas
comiss
mov
dec
dec
stos
ret
push
mov
mov
mov
xlat
pop
inc
sub
xor
sub
clc
push
out
adc
aam
or
jnp
mov
dec
cmpb
mov
pusha
xlat
jnp
adc
out
in
lock
xchg
mov
movsl
mov
repz
mov
in
cmp
jo
int3
rcrl
cwtl
mov
or
aad
flds
in
adc
and
xor
iret
lock
sbb
movsl
mov
and
neg
in
outsl
pop
inc
sti
inc
adc
xor
sbb
inc
xchg
dec
out
xchg
aad
mov
add
sub
mov
mulb
cwtl
loop
or
jp
popa
sub
cmpsl
cwtl
xor
cmp
inc
imul
out
stc
cmc
mov
test
jmp
cs
cmp
add
xlat
dec
push
xchg
in
lods
dec
mov
xbegin
mov
jecxz
lods
cmp
shll
or
sbb
push
insl
or
je,pn
inc
test
rolb
stc
nop
test
jae
lcall
pop
imul
ja
dec
xorl
test
mov
mov
sbbl
jecxz
cmp
add
or
jp
or
addr16
cmp
mov
ror
leave
xchg
inc
out
stos
xchg
and
pusha
stos
shlb
test
repnz
loopne
test
inc
xlat
push
out
movsl
test
inc
and
and
jp
fadds
lods
jge
mov
fcom
and
fs
pusha
shufps
fistps
jmp
add
push
push
aam
jne
std
inc
scas
and
dec
sbb
aas
enter
lods
loop
sbb
loop
stos
mov
leave
cmp
sbb
dec
sbb
sbb
xor
mov
pop
pop
subl
cmpsl
rorb
sub
notl
pop
mov
adc
dec
inc
jle
push
std
popf
mov
and
sub
imul
outsl
not
adc
movntps
mov
mov
lea
jmp
mov
int
push
cmp
enter
cs
pusha
xor
in
lret
fisubl
add
cmc
mov
cmc
stos
fcom
aad
add
hlt
loop
pop
inc
mov
jge
cmp
sbb
aad
cs
and
push
hlt
leave
sbbl
inc
icebp
cmp
xchg
cmp
xor
sbb
xor
repz
testl
push
cmpsl
es
iret
int
mov
enter
shrb
inc
jae
adc
xor
dec
lds
into
scas
loopne
lods
pop
inc
jno
add
lock
xchg
and
mov
imul
iret
popf
cmp
sub
mov
or
mov
push
ror
ja
fcmove
aas
xorl
xchg
dec
xor
out
jb
sub
cmovl
sub
mov
mov
fdivl
loopne
adc
in
sbb
jl
lret
mov
push
test
pop
cmpsb
xchg
stos
inc
mov
inc
mov
cmpsb
rcrb
std
or
pushf
adc
hlt
fs
add
pop
icebp
or
dec
or
repnz
inc
sub
mov
sbb
adc
add
mov
outsl
imul
enter
repnz
fstpl
ret
lcall
aam
xchg
cmp
mov
sbb
lret
popa
push
pop
jne
xor
imul
sbb
mov
mov
dec
daa
mov
push
pusha
xchg
lret
mov
cltd
and
dec
jbe
jl
or
dec
pop
pop
aad
push
xor
pop
rorl
xchg
push
fldenv
daa
mov
ret
push
arpl
mov
aas
add
push
into
sbb
pop
int3
fwait
pop
sub
aas
imul
adc
push
xor
jp
mov
push
out
cmpsl
scas
inc
jmp
int3
or
or
sti
mov
lds
imulb
mov
jbe
xlat
pop
pop
mov
fldcw
xor
fnstcw
add
pop
stos
jae
inc
std
es
rorb
cmp
adc
daa
dec
in
mov
loopne
psrlq
gs
ss
push
lcall
add
xor
sbb
mov
loope
mov
mov
mov
mov
or
popa
nop
sub
insb
jecxz
cmp
mov
sub
mov
stc
lahf
adc
mov
out
mov
mov
pop
and
fwait
mov
jmp
push
pop
je
es
mov
and
and
mov
jne
inc
mov
bound
int
loop
mov
orl
sub
sbb
stos
in
js
popa
pop
lcall
test
iret
mov
mov
lcall
repnz
lcall
mov
dec
retw
jp
shrb
or
stos
std
add
xchg
ret
dec
andb
es
sub
in
mov
cmp
xor
mov
jnp
test
shl
xchg
push
subb
adcb
jecxz
xchg
js
lret
mov
loop
jno
inc
sarl
xchg
push
ljmp
cmp
fwait
jge
dec
es
push
enter
jnp
and
stc
xchg
data16
inc
test
cmc
call
fists
test
icebp
je
jbe
jmp
jnp
lret
test
pop
fwait
lods
pop
int3
imull
inc
push
and
sbb
lods
shl
mov
shrb
inc
mov
mov
pushf
or
pop
inc
sbb
jge
scas
enter
adc
sarl
add
shll
imul
push
ja
lods
aaa
ds
add
sub
push
and
mov
in
fwait
push
pusha
js
mov
xor
frstor
mov
das
pop
jb
pushf
jmp
xchg
aas
cmp
pop
cmp
adcb
pusha
xchg
sbb
repnz
mov
andb
lods
imul
fdivrp
or
rol
mov
jae
into
push
and
icebp
dec
int
xchg
jge
lret
add
lret
sub
cmpb
fs
out
lods
push
test
out
lods
aam
xchg
iret
mov
movsb
pop
mov
jnp
sbb
add
daa
nop
push
dec
dec
push
mov
lahf
mov
dec
xchg
adc
in
call
lret
std
adc
pop
movlps
mov
jp
pop
iret
ficoms
sub
or
pop
hlt
xchg
lret
imul
aaa
and
push
inc
sub
lds
fidivrl
xchg
mov
inc
in
and
push
jecxz
xchg
loope
inc
adc
pop
test
inc
lods
dec
leave
jne
iret
jne
push
mov
mov
in
ljmp
gs
mov
pop
pop
adc
ja
adc
jns
leave
aaa
mov
push
lock
add
dec
xchg
inc
aaa
or
sahf
ret
aam
cs
cmp
popa
fldcw
addr16
mov
xor
leave
icebp
or
sbb
in
mov
cmp
and
or
movsb
cli
jnp
adc
cmp
xchg
stc
pushl
ret
xor
inc
js
cmp
js
aaa
stc
pop
and
int
xor
add
pop
in
stos
lret
out
adc
inc
push
mov
pop
popf
cmc
mov
notl
cmp
in
mov
pushf
pop
push
stos
fildl
sub
cmp
sahf
mov
lock
or
mov
iret
inc
jecxz
outsb
pop
shll
push
pusha
shrb
add
mov
fs
mov
cmp
pop
push
icebp
fadd
enter
int3
push
pop
lret
popf
jns
or
mov
jno
fisttpll
pop
mov
mov
imul
gs
xlat
popa
cmpsb
inc
lods
push
add
test
mov
scas
or
out
les
cmpsb
mov
or
pop
pop
clc
in
stc
loopne
jns
inc
mov
pop
xchg
stos
mov
jb
sarb
xor
icebp
sub
es
in
repnz
das
lds
push
sbb
ret
mulb
cltd
nop
lret
aad
mov
shrl
xchg
imul
xchg
mov
test
lock
ficompl
sbb
mov
push
inc
inc
test
jg
fwait
push
sarl
icebp
sub
mov
mov
mov
xchg
leave
xlat
jbe
or
test
cltd
xchg
push
mov
lods
arpl
inc
xor
adc
lret
xor
mov
sarb
dec
push
mov
and
cmpsb
pop
mov
mov
pop
pop
inc
add
nop
mov
ret
out
fistl
pop
test
out
add
mov
mov
insl
enter
mov
sbb
inc
xor
addr16
repnz
cmp
leave
scas
pop
jno
jo
in
test
mov
mov
mov
decl
shll
lock
sub
ds
pop
sbb
or
or
mov
xchg
pop
fucom
jb
loopne
inc
inc
or
sbb
sahf
in
cs
cli
popa
inc
popf
test
insb
cmp
pop
mov
rcl
jecxz
jbe
out
mov
push
stos
imul
jl
pop
call
mov
add
or
pusha
sbb
xor
adc
fwait
stos
xor
and
daa
xor
ss
jmp
scas
push
jp
fadd
in
jb
loop
ss
out
mov
mov
dec
jbe
rorl
jmp
cwtl
notl
xorb
and
sar
cwtl
inc
push
stc
jae
add
xor
sbb
cmp
fstpt
rolb
xchg
nop
lock
mov
cld
pop
mov
shr
add
mov
loope
aam
fsubl
sub
shrb
inc
leave
jo
and
mov
xchg
or
popf
xchg
es
test
js
and
adc
repnz
mov
aad
cli
jle
mov
scas
push
add
jnp
lods
or
mov
inc
pop
test
push
dec
aaa
hlt
or
sub
pop
int3
fst
pusha
add
push
mulb
test
mov
cli
ss
adc
sub
pop
adc
sub
imul
add
ds
into
lods
scas
movsb
jg
repz
pop
mov
sub
inc
inc
and
jge
inc
push
mov
scas
mov
push
dec
mov
dec
ret
xchg
sbb
mov
push
movsl
pop
xlat
lds
lea
dec
movups
mov
gs
subl
adc
pop
jbe
ret
mov
sub
test
stc
test
lds
icebp
mov
dec
push
mov
out
jb
push
sbb
adc
add
imulb
xchg
sbb
sahf
lret
inc
ds
pop
or
inc
lahf
mov
mov
and
nop
pop
sub
insb
test
push
xchg
sbb
jp
adc
mov
lods
push
hlt
shll
int3
loop
scas
dec
xchg
sub
pop
loopne
cmp
mov
fcomps
int
adc
fisttpl
ljmp
sub
jns
icebp
addl
mov
push
hlt
stos
rcl
cs
inc
cmp
pop
scas
inc
lea
stos
out
call
scas
mov
xchg
dec
test
cmpsl
lock
stos
jle
leave
mov
in
and
mov
jno
mov
cmpsl
sbb
xchg
out
lahf
insl
adc
sti
jae
shr
jbe
movsl
sub
jl
mov
push
and
xchg
pop
push
les
cmp
pop
mov
call
fs
sub
loopne
gs
iret
shld
xchg
cmpsb
pop
testb
inc
inc
mov
push
outsl
cmp
xchg
jle
mov
fistl
fidivs
mov
adc
and
lret
test
shufps
pop
out
cli
mov
xchg
adc
lods
fsubs
std
jle
or
mov
pushf
cld
add
jns
lea
pop
daa
bound
adc
mov
add
and
shlb
push
inc
push
popf
stos
and
cmp
lret
mov
test
dec
mov
clc
and
pop
loope
mov
clc
dec
adc
mov
inc
lods
pusha
xchg
shll
and
orl
or
into
insb
clc
aaa
js
mov
jne
popl
dec
push
mov
mov
insb
adc
add
inc
or
cmc
cmp
loopne
arpl
cltd
xor
aad
in
mov
dec
aaa
jl
imul
push
jno
stos
ljmp
xchg
sbb
jg
jns
lahf
imul
jge
loope
mov
jno
sbb
sbb
mov
sbb
cmc
ret
lret
lahf
imul
push
inc
jp
mov
push
xor
test
fisubrl
adc
out
ret
mov
jg
out
add
jo
mov
mov
dec
mov
call
rorb
icebp
das
xchg
jo
ljmpw
pop
and
jp
into
push
leave
and
outsb
out
fwait
jmp
mov
or
jle
jmp
insb
inc
mov
mov
adc
int
pop
push
aad
test
sbb
cmp
add
add
aaa
sub
fcoml
mov
pop
stos
pushf
loop
xor
cmp
add
fsubs
in
sub
ficompl
aam
orps
xchg
sarb
divb
pop
shl
ds
jp
mov
xor
pop
mov
sub
popa
outsl
sbb
rcrl
push
xor
push
mov
pop
mov
sbb
xor
testb
aad
pop
jno
xchg
dec
mov
sub
aam
mov
dec
xor
pop
fidivrs
cltd
fisttps
jns
xchg
xchg
mov
xorb
pop
into
sub
jge
mov
xchg
jns
lods
push
mov
movsb
and
xchg
jae
cltd
xlat
pop
sub
dec
les
push
popf
inc
push
sbb
scas
movsb
cmpl
push
sbb
or
add
jns
das
popf
test
jns
ds
sti
dec
sbb
inc
add
sti
ret
sub
test
cmp
and
out
rolb
mov
push
push
fabs
jmp
pop
and
clc
cmp
aam
cmp
lds
xor
and
int3
in
mov
sarb
iret
add
in
lea
inc
push
mov
inc
rcl
mov
push
pop
bound
out
scas
push
jg
in
rcrb
push
inc
pop
cld
adc
or
mov
push
jbe,pn
test
dec
out
sbbl
mov
into
mull
movb
stos
jg
xchg
test
xchg
push
imul
push
lea
and
pop
les
mov
cwtl
pushf
jle
sahf
fiadds
mov
dec
cwtl
push
movsb
push
or
dec
mov
add
out
cmpb
jmp
into
orb
jle
add
mov
test
jbe
add
mov
jne
xor
clc
scas
adc
insl
xchg
aas
or
jecxz
dec
nop
mov
dec
mov
add
and
gs
mov
cmpsl
pop
jnp
sbb
cmp
mov
or
sbb
addr16
sub
cli
xor
xchg
call
fldl
sti
lahf
inc
mov
sarb
in
xchg
jns
cmp
jp
mov
sarl
imul
and
or
jg
push
or
pop
sbb
mov
fmulp
gs
cltd
fstps
mov
inc
loop
out
nop
std
cld
xchg
pmaddwd
in
outsl
xor
shlb
dec
leave
inc
mov
push
mov
add
add
dec
orl
hlt
fadds
stc
mov
out
xchg
stos
jmp
or
sub
aaa
mov
iret
mov
push
scas
mov
push
xchg
dec
xor
div
repz
ret
data16
mov
dec
pop
ljmp
mov
int3
dec
shr
mov
incl
in
and
mov
lret
pop
push
xor
push
jae
fisubl
aad
test
inc
test
stos
mov
popl
pushl
movsb
sub
mov
sbb
leave
mov
fidivs
bound
jno
outsl
pop
cmp
cmp
mov
outsl
inc
cli
xchg
adc
push
outsb
jl
out
jb
adc
shlb
sbb
loopne
pop
fcoms
ficompl
iret
outsl
xor
mov
or
and
lcall
lods
shrb
xlat
ja
clc
mov
mov
call
jo
xor
xchg
inc
adc
cmp
movsb
das
inc
cmp
inc
aad
sbb
dec
mov
adc
xchg
jle
cli
das
jmp
add
sub
cmp
cmc
aam
inc
cltd
test
add
fwait
jl
cmc
mov
rolb
rolb
jge
adc
icebp
subb
xchg
cmp
fcmovne
mov
xchg
inc
addr16
mov
imul
sbb
test
adc
jge
sub
jae
push
xor
shlb
into
mov
push
mov
jmp
hlt
cmpl
fwait
lcallw
lret
cmc
jo
push
fsts
jno
nop
sub
mov
sahf
pop
add
adc
int
arpl
jb
std
in
scas
sbb
bound
pop
aad
repz
xchg
sub
dec
push
repz
xchg
das
sbb
sahf
mov
dec
das
sbb
in
ret
inc
add
lahf
ffree
sub
out
mov
lret
adc
jg
dec
into
movsl
scas
mov
mov
or
sub
lock
xchg
xorl
into
dec
icebp
cli
ret
pop
push
sbb
and
adc
into
dec
pop
xor
int3
hlt
cmc
repnz
dec
sub
cmp
stos
or
adc
pop
add
sub
loope
test
and
mov
mov
cmp
fisttpll
lahf
clc
pop
js
jg
jbe
cmpb
xor
jge
dec
popf
push
mov
insl
in
test
into
imul
not
mov
stos
push
stos
push
cmp
pop
sub
add
ja
sysenter
push
or
jb
pop
push
mov
sbb
fs
pop
ss
adc
xchg
int
ret
push
mov
sub
mov
adc
sbb
loope
popa
js
lods
adc
inc
test
imul
shll
bound
call
or
insl
js
inc
dec
adc
fwait
in
test
adc
bnd
jp
xchg
cmp
lcall
lahf
push
movsl
int
pop
cmp
shll
mov
out
jne
ja
dec
test
pusha
adc
lods
jno
cwtl
out
fs
stos
ret
mov
ljmp
rclb
dec
sbb
mov
add
sbb
adc
xchg
adc
loop
dec
pop
fsubr
out
movl
mov
or
jmp
pusha
mov
loop
int3
xchg
imul
scas
cwtl
lods
inc
std
mov
pop
cmp
cmp
outsl
inc
cmp
dec
mov
data16
loope
pushf
inc
cwtl
test
in
inc
pop
outsl
xchg
lret
sub
push
add
out
pop
jmp
ss
out
xchg
shrl
push
sub
addl
push
insb
and
mov
clc
shl
daa
iret
pop
fcomps
in
pop
mov
push
sub
lods
flds
mov
stos
push
in
xchg
lds
add
iret
and
mov
pop
ret
fst
add
mov
cmpsl
mov
xchg
jno
adc
mov
sub
inc
push
lods
filds
jb
mov
and
mov
xlat
inc
push
jge
stos
fucomp
jl
lahf
scas
mov
dec
and
inc
shll
pop
or
rcr
out
ljmp
cmpsb
sub
out
enter
sub
imul
gs
cwtl
mov
stos
pop
aam
inc
jbe
sbb
mov
mov
pop
out
lret
pop
mov
jae
mov
shlb
sub
fidivrl
sbb
cmp
pop
push
ss
mov
inc
add
jno
jmp
cld
mov
fdivrl
imul
xchg
insl
dec
lret
jge
scas
mov
mov
insl
jmp
mov
mov
cmpsb
sbb
repz
cs
clc
lcall
pop
mov
dec
pop
subb
scas
inc
pop
push
rcrb
imulb
xor
iret
lds
cmp
mov
mov
movsl
fsts
mov
scas
jbe
mov
sbb
or
xchg
loope
xchg
sub
xchg
dec
gs
ret
mov
test
adc
fs
push
jns
aam
rcll
pop
and
jns
mov
sub
pushf
dec
aaa
mov
inc
inc
jg
jle
mov
in
cmp
fbld
mov
sahf
stos
or
in
and
inc
inc
adc
mov
rcrb
cmp
mov
cmpsb
ret
insl
bound
pop
ss
adc
pop
xchg
adc
mov
add
jbe
dec
std
push
mov
fs
mov
or
int3
dec
mov
loop
mull
fwait
dec
popa
cmp
cmp
mov
jp
loop
outsb
mov
mov
hlt
push
xchg
imul
mov
and
push
jo
cmp
push
dec
cmp
je
lahf
fcom
xchg
mov
into
dec
dec
scas
xor
cmp
cmp
xchg
pop
jl
stc
jmp
mov
shlb
add
mov
push
push
movsl
and
cld
rcr
pop
aam
lea
rcll
push
mov
jp
add
jne
movsl
xchg
adc
ficomps
jg
mov
sub
mov
popf
rorl
mov
repz
adc
je
pop
push
mov
je
shll
rcrb
orb
add
icebp
push
in
jns
inc
jns
mov
ret
icebp
cmpl
xor
cmp
jnp
fdivrs
pop
mov
lods
push
jno
cmp
and
xchg
cmpsb
mov
outsb
cmp
mov
int3
mov
cld
cmp
mov
shll
aas
cmp
sub
lret
inc
push
add
xchg
lods
pop
xor
loope
or
jp
or
rcl
hlt
xchg
dec
fwait
xchg
mov
dec
inc
xorl
je
fwait
js
fistps
xchg
xchg
fwait
xchg
movsl
mov
add
lods
xchg
cmp
or
mov
mov
stos
jae
pusha
mov
push
rcl
cli
xchg
lahf
fs
int
jp
inc
jns
mov
push
mov
dec
dec
repnz
add
pop
test
jp
cld
jecxz
inc
xor
pop
jp
mov
inc
jno
stos
mov
push
jbe
pop
cmpsl
and
ret
push
pmaxsw
jmp
xor
xchg
sbb
push
loope
jle
fists
popa
add
scas
sub
arpl
mov
iret
mov
sub
xor
into
adc
jo
sbb
cltd
jp
jmp
aad
push
jl
ds
sbb
scas
xchg
push
rep
std
dec
jle
dec
lea
xor
jmp
stc
push
js
xor
shl
or
call
push
das
cmp
jno
xchg
xlat
push
cwtl
and
cmp
out
or
arpl
stos
xchg
mov
int
addr16
in
fwait
jne
adc
popf
cmpl
lret
dec
outsl
inc
ret
mov
mov
mov
test
cltd
out
mov
scas
cltd
push
lahf
aaa
out
loope
mov
dec
enter
enter
adcb
cmp
push
inc
jl
in
sub
dec
cmpb
sahf
outsb
mov
sub
fsubr
les
adc
leave
cmp
cmp
mov
pushf
shl
push
adc
test
sbb
sub
pushf
jge
and
and
out
lods
mov
stos
stos
adc
sbb
fdivl
aaa
ret
jno
aaa
shlb
mull
xchg
jae
addr16
adcb
add
mov
adc
pusha
xor
push
xchg
nop
and
aad
mov
lret
xchg
push
insb
xor
xor
pop
pop
sbb
pop
push
inc
pop
xchg
aaa
or
dec
xor
mov
shlb
xlat
cld
fldt
lcall
push
scas
testb
stc
test
push
push
aaa
jne
cmpsb
pop
mov
pusha
sub
pop
mov
inc
push
pop
ljmp
clc
aam
mov
loop
out
pushf
mov
push
lret
rcrb
mov
adc
or
cltd
stos
dec
push
jp
dec
push
xor
pusha
push
mov
push
mov
jb
or
xor
cwtl
aas
dec
mov
or
xchg
fadd
repnz
push
jno
and
push
lods
xchg
repnz
mov
mov
add
pop
push
out
nop
loope
outsb
imul
inc
mov
add
xchg
xchg
nop
scas
movsb
inc
incb
mov
adc
inc
cmc
in
ljmp
cmpsb
mov
mov
hlt
int
adc
adc
jnp
xchg
cs
enter
xor
lahf
stc
cmp
gs
fwait
cmpsb
outsl
cld
fisttps
jmp
push
in
or
jne
popa
outsb
lock
test
mov
push
scas
mov
fsubrl
jmp
lcall
lret
and
sub
sub
arpl
mov
int
inc
and
in
addr16
jo
fldcw
movsb
imul
mov
pop
jae
adc
inc
xchg
fnstenv
imul
cwtl
stc
dec
mov
xor
dec
mov
mov
gs
add
jg
lcall
mov
xchg
popa
nop
sub
mov
and
mov
xlat
mull
sbb
jle
pop
pop
cli
int
insl
insb
daa
aas
pop
ja
and
fisttpl
bnd
mov
and
stos
rolb
or
out
dec
inc
and
repz
push
fdivr
or
sarl
mov
pop
xor
jmp
std
inc
cmpsb
xor
cli
xor
dec
fistpll
and
test
fwait
pushf
ljmp
ds
push
addr16
or
inc
xlat
and
gs
ljmp
inc
les
pop
cmp
and
out
push
mov
imul
pop
or
xor
lods
mov
sbb
sbb
addl
push
es
sub
scas
sar
cltd
data16
repz
dec
cmp
push
shrl
mov
adc
or
dec
cmp
sub
faddl
sbb
push
and
and
dec
mov
lds
jmp
inc
loop
jbe
or
mov
hlt
lods
jp
push
rorb
pop
inc
ljmp
mov
adc
push
pop
jb
xchg
xlat
out
notl
mov
or
xchg
int
push
mov
sub
or
pushf
sub
add
cwtl
adc
jns
out
jl
into
mov
adc
mov
push
mov
mov
push
or
cmp
push
daa
sub
lods
lcall
cwtl
jnp
out
mov
adc
adc
cmp
cs
add
cmp
push
xchg
sbb
fwait
cmpl
outsb
jecxz
call
inc
pop
xchg
mov
xor
cmpsb
sbb
inc
dec
out
lods
lods
leave
add
inc
enter
jae
imulb
aam
push
sbb
add
fmul
shll
aaa
inc
int
shrl
fiadds
pop
dec
ljmp
push
mov
cmp
push
jbe
loope
push
xor
out
add
jle
jbe
inc
call
xchg
addr16
push
gs
push
dec
mov
mov
mov
outsb
dec
into
in
mov
add
stos
or
out
pop
in
ret
test
xadd
aad
mov
pop
mov
pushf
outsb
push
lret
cmp
int
push
lock
aam
dec
push
je
jp
xor
push
mov
stc
and
mov
jbe
aam
test
in
dec
fmulp
jo
jge
mov
inc
jb
jge
inc
addr16
data16
jno
nop
das
out
xor
mov
and
lcall
shll
seta
push
jge
sbb
pop
add
xchg
loop
incb
push
add
inc
popa
hlt
or
pushf
aam
nop
sbb
jle
das
shr
push
cmpsl
call
mov
push
and
and
push
decl
sbb
xchg
dec
add
clc
gs
xchg
xor
fs
jg
mulps
xchg
loope
push
outsl
js
push
jne
cmc
iret
push
fisttpl
sbb
dec
clc
jno
sub
test
pop
stc
mov
adc
bound
pop
mov
jmp
nop
aaa
sub
sub
fcoml
mov
subb
mulb
adcb
stos
mov
outsb
rolb
mov
adc
sti
push
add
push
mov
mov
cltd
and
sub
out
cmpsl
into
dec
inc
mov
js
pop
and
inc
lea
pop
into
hlt
jb
arpl
push
or
notl
mov
cltd
loopne
stc
xor
mov
pop
push
push
loop
stc
fisubrs
mov
aad
sub
cmp
xchg
add
roll
inc
and
cmpsb
popa
sub
adc
repz
inc
lret
stos
fwait
mov
loopne
xchg
aas
ret
mov
bound
mov
dec
les
jecxz
mov
mov
cmp
lea
dec
leave
pop
movsb
xchg
frstor
arpl
xor
js
arpl
push
in
mov
outsb
inc
scas
mov
jb
ss
loopne
xchg
mov
je
shrb
cld
sbb
cmp
dec
dec
xor
mov
in
rclb
fstps
pop
popf
adc
inc
push
sub
loop
xchg
adc
mov
add
mov
jae
and
sub
sbbl
test
fs
dec
je
sbb
dec
xor
sbb
inc
pop
and
enter
ds
jne
cmpsl
ret
bound
pop
or
fwait
pop
xor
outsl
mov
movsb
fcoms
sub
shrl
xchg
mull
push
jae
cli
mov
aad
cwtl
inc
and
push
ljmp
mov
pop
jnp
jle
mov
lret
ljmp
pop
inc
pop
in
push
test
das
add
jne
mov
add
push
or
add
push
push
mov
lahf
xchg
stc
push
add
in
into
jns
sub
inc
pop
push
xchg
sub
mov
addb
mov
popl
leave
jne
ja
and
lcall
test
in
add
mov
ss
popf
pop
in
notb
push
imul
shrb
xorb
xor
sbb
rclb
nop
or
xchg
xlat
adc
pop
push
mov
ds
in
jecxz
enter
sbb
enter
je
push
or
sbb
sub
fldenv
fistps
adc
js
xor
mov
xor
cld
outsb
xchg
mov
mov
push
test
sbb
mov
or
adc
sub
mov
in
cwtl
loopne
mov
xor
xor
arpl
cmp
imul
add
fisttps
flds
jae
subb
outsl
loope
pushf
dec
cld
repz
mov
inc
mov
sub
inc
int3
lods
dec
in
loopne
icebp
mov
insb
jae
lret
and
shlb
jecxz
ja
sahf
mov
jb
xchg
clc
and
push
orl
dec
pop
lcall
das
jnp
xchg
scas
movsb
out
stc
lds
andb
or
arpl
mov
inc
sub
pop
mov
push
xchg
dec
nop
repz
jecxz
jne
dec
cwtl
push
jns
inc
mov
pop
inc
pop
push
pop
fcomi
or
inc
pushf
xchg
cmp
push
out
cmp
leave
dec
mov
fiaddl
dec
popf
xchg
shr
sbb
sarl
les
outsl
add
cmp
push
push
jle
jp
fs
shl
pop
cmp
adc
outsb
jo
mov
addb
mov
sub
inc
jns
inc
sub
loope
jge
mov
ds
movsb
enter
popf
test
arpl
stc
leave
outsb
les
fwait
push
jmp
ret
sbb
sarl
loope
scas
fists
leave
fldenv
push
ja
inc
jbe
or
jbe
loop
jo
add
mov
sarb
add
cmp
sarb
test
nop
into
mov
cmp
or
in
mov
or
bound
flds
xor
jne
out
xor
mov
inc
jae
rorb
imull
and
lret
mov
ss
mov
lock
andb
push
shrl
sbb
cmp
and
hlt
test
popf
xchg
adc
jp
nop
cltd
in
int
in
mov
add
or
lds
lea
push
inc
dec
loope
dec
pop
fcompl
mov
mov
adc
loop
mov
sti
fsub
xchg
sarb
push
lods
ds
inc
xlat
cmc
xchg
add
scas
divps
jo
xchg
add
fs
dec
test
lods
test
das
jmp
rorl
in
mov
inc
and
out
imul
insb
in
in
mov
test
lods
hlt
lock
xchg
and
sbb
mov
jne
imul
pushf
ret
or
lahf
in
lret
xor
inc
nop
sarl
shlb
test
loopne
sub
lods
sbb
sub
mov
inc
or
fsincos
xor
mov
fistl
jne
mov
mov
inc
jmp
sub
push
jmp
xchg
das
and
mov
pop
push
sub
cmc
sub
fildl
mov
pusha
xchg
std
jbe
aad
xchg
mov
mov
fisubs
aam
inc
fldt
mov
lcall
in
pusha
cwtl
and
mov
fsubs
jns
imul
xor
cmp
mov
ret
pusha
movsb
imul
pop
jbe
das
in
xchg
mov
xchg
inc
in
insl
test
stc
gs
dec
jns
cmp
xor
sbb
mov
ljmp
mov
cmc
lret
push
outsb
repz
mov
das
jmp
lods
lods
orl
cmp
jg
aam
icebp
inc
test
rolb
or
cmp
push
adc
jmp
sub
mov
cmp
adc
fwait
sbb
push
nop
inc
in
mov
lds
inc
push
mov
or
jecxz
rorl
inc
pop
jle
roll
sbb
mov
jnp
add
inc
sbb
or
cli
inc
movsl
sbb
cmp
jle
sbb
cmpsl
in
sbbb
dec
mov
iret
cwtl
pop
cltd
lahf
icebp
add
cmp
xchg
icebp
sbb
adc
in
shlb
lock
jo
fs
push
inc
inc
mov
jo
mov
pop
pop
mov
sahf
les
scas
adc
in
loopne
inc
inc
push
sbb
mov
cmp
xor
movsl
pop
cmp
jp
cmp
out
inc
out
xchg
jge
xor
icebp
xchg
data16
inc
xorl
das
xor
inc
cmc
nop
aaa
lahf
ret
or
js
dec
xlat
sub
mov
sti
stc
adcl
or
inc
mov
xor
mov
mov
or
mov
data16
fisubrl
add
notl
or
in
pushf
jmp
push
cmpsb
in
dec
lret
aad
and
mov
push
fmuls
addr16
stc
push
mov
mov
adc
ret
shlb
push
lcall
shl
jl
aas
das
scas
push
mov
mov
aaa
flds
inc
loopne
jno
xlat
in
xor
lahf
movsb
movsb
fistpl
or
scas
mov
inc
xor
pusha
inc
mov
inc
enter
ret
mov
out
inc
je
push
leave
xor
or
inc
dec
dec
push
mov
mov
imul
adc
sub
mov
jp
cmc
push
push
add
ljmp
push
ss
push
mov
pop
jp
insl
or
pop
sub
jmp
ja
mov
pushf
aas
jb
movsb
bound
out
stos
sub
out
sbb
xchg
jbe
inc
int
insl
les
push
mov
bound
loop
push
push
mov
in
mov
data16
mov
dec
out
imul
insl
stc
sub
addr16
pop
xor
mull
fisubrs
mov
mov
rcll
cmp
jp
orb
pop
sub
test
roll
jmp
iret
adc
ljmp
hlt
dec
xor
jbe
sbb
sbb
jae
in
xor
push
xlat
sub
pop
dec
cmp
out
pop
xor
cmc
decb
sbb
movsb
cmpsb
sub
pop
push
popl
mov
addr16
negb
dec
outsb
gs
xor
sbb
and
and
stc
popf
jge
inc
lret
outsb
cmpsb
cmp
clc
outsl
push
scas
shrl
stos
cli
jg
fildll
or
sbb
stos
test
pop
movsb
cwtl
inc
dec
pusha
movsb
cs
and
cmpsb
shrl
shll
sbb
push
xchg
add
mov
out
in
mov
out
mov
loopne
xchg
push
sbb
jae
or
insb
repz
or
addr16
jecxz
mov
mov
pop
lahf
jecxz
ljmp
xor
cmp
mov
icebp
cwtl
ljmp
sbb
fldt
cmp
js
xchg
lret
dec
movsl
add
repz
adc
adc
jmp
xchg
jns
rcrb
aas
iret
data16
add
mov
jl
ds
mov
mov
sarb
xchg
enter
insl
jp
mov
not
pop
mov
popa
ds
sbb
mov
dec
ljmp
loopne
and
mov
lock
or
loope
test
jbe
xor
imul
mov
insb
push
pop
pop
sbb
xchg
int3
cmc
scas
push
jnp
mov
jle
cmp
xchg
add
insl
clc
mov
lret
push
sbb
adc
jo
mov
in
sbb
or
jp
sbb
xstore-rng
cmpsl
test
decb
in
and
mov
or
add
xchg
sbb
or
xor
jnp
mov
lahf
out
repz
jl
mov
xchg
scas
in
jecxz
dec
stos
mul
dec
or
in
lods
xchg
pop
push
je
sahf
xlat
lahf
xor
adc
scas
aad
adcb
clc
adc
add
outsl
pushf
xchg
sbb
sbb
xchg
lret
adc
cmpsb
outsl
imulb
movsb
and
cmc
test
mov
cmp
loopne
mov
jb
stos
shll
dec
sbb
shrl
adc
rclb
cmp
sbb
cmpsl
pop
mov
mov
int
and
push
icebp
push
or
out
call
nop
filds
int3
sub
int3
cmp
or
insl
pop
cltd
movsb
bound
adc
lret
jno
mov
stc
das
pop
mov
aaa
leave
sbb
dec
test
or
fmul
push
test
inc
jg
adc
or
test
push
and
xchg
in
xchg
test
jge
xchg
xchg
mov
cs
lcall
adc
or
fstpl
es
iret
in
jg
repz
pusha
xchg
leave
jne
mov
or
pop
fmull
mov
pop
sub
jbe
ds
clc
mov
je
mov
inc
push
push
cs
pop
sbb
sub
nop
jmp
imul
repz
repz
movb
out
bound
mov
in
inc
mov
dec
call
cltd
mov
popf
mov
cmp
sar
movsb
popa
lock
fcoml
or
dec
mov
int3
in
jle
push
xchg
jmp
jmp
push
jne
mov
pop
sarl
popa
repz
add
xor
cmp
pop
adc
pop
std
jns
sub
xor
jmp
push
out
dec
fwait
pushf
pop
data16
push
incb
fs
jae
out
sti
cmp
ficompl
in
add
scas
cwtl
popa
pop
jae
xchg
movsb
xchg
into
cld
inc
lea
out
add
mov
iret
data16
nop
or
out
push
scas
leave
xor
arpl
cwtl
iretw
mov
xor
pushf
movsl
popw
cmpsb
ret
iret
xchg
xor
cmp
xor
cmpsb
icebp
or
push
leave
in
jns
jmp
cmp
jge
rcrb
in
out
xchg
xor
insb
add
orb
xlat
ffree
pop
lds
cli
addl
mov
cs
xchg
lret
je
dec
in
adc
das
cmpb
sub
sub
mov
mov
test
jne
ljmp
das
push
enter
add
and
push
ret
pop
sbb
mov
mov
in
ss
add
scas
scas
sti
and
dec
push
fbld
fsubrl
lcall
and
lret
in
test
cmpb
mov
and
nop
sbb
mov
or
insb
mov
repnz
fistps
jp
and
mov
jl
mov
fidivs
jp
popf
ror
add
add
loop
testl
ret
or
xor
dec
inc
aas
imul
dec
ljmp
mov
pop
loope
add
push
pushf
or
jl
xor
insb
sbb
mov
adc
or
xor
pop
mov
test
or
data16
sub
push
sbb
fisttpl
sub
bound
xchg
aad
sub
mov
inc
insb
push
ficoms
lods
xchg
mov
insb
inc
int
cmpsl
mov
jbe
shlb
sub
fisttpll
xor
dec
jecxz
pop
cli
push
and
outsl
ret
rclb
push
xchg
shlb
insl
jg
pop
rorb
movsl
in
or
ja
mov
cmpsl
sarl
stos
jnp
mov
or
lds
pop
cmp
push
adc
std
lret
or
es
inc
out
mov
fcom
hlt
jge
mov
jle
push
push
adc
ds
push
fmull
jecxz
sti
add
filds
clc
or
cmp
clc
stc
rcrb
rep
jl
rorl
test
outsb
scas
dec
clc
and
imul
fidivrl
cltd
jle
sub
cmpsb
dec
inc
inc
es
xor
jnp
movsb
gs
cmp
das
testl
fstps
cld
push
outsb
out
mov
int3
inc
and
push
jbe
fwait
sub
push
jbe
add
xchg
stos
jb
jae
push
sbb
jg
jle
and
mov
push
dec
add
xor
in
mov
ja
fimull
shlb
push
mov
push
ret
pop
movsb
jecxz
and
je
lds
sub
pop
mov
fwait
fwait
cs
nop
imul
xor
test
mov
sti
push
out
fs
and
stc
icebp
dec
sub
repnz
xchg
sahf
sub
cwtl
push
sub
adcb
jo
cmp
jge
ljmp
push
scas
repz
or
aas
ss
cmpsb
loope
xchg
imul
lret
adc
mov
or
xlat
adc
mov
pusha
sub
push
pop
push
ss
sub
nop
clc
jmp
stos
cmp
xlat
outsl
in
test
sub
jge
inc
cmpsb
dec
cmp
push
pop
mov
mov
fnstenv
xor
cmc
bound
add
fincstp
jmp
hlt
add
nop
shrb
rclb
test
bnd
pop
mov
and
jecxz
inc
push
imul
cmp
fcmovnu
mov
cmc
and
ljmp
xor
jns
cli
loope
imul
adc
mov
lcall
sbb
lds
mov
xor
jp
cmp
ret
dec
xchg
cmp
sbb
dec
xor
jae
mov
mov
push
loope
cmc
and
stos
ffreep
mov
jb
mov
push
lret
fcmovbe
shll
add
and
inc
and
lahf
sbb
std
dec
xchg
or
loopne
adcb
inc
pop
sub
test
loop
fsubrs
stos
xchg
imul
push
xor
mov
and
outsl
mov
sub
xlat
adc
and
lret
jbe
test
aam
mul
inc
clc
in
jns
fst
cltd
aas
lods
mov
adc
les
outsb
cli
xchg
ss
push
push
ret
inc
cs
inc
stos
push
iret
or
lret
scas
rorl
shrd
jmp
adcl
inc
xchg
jno
es
fdivrl
push
or
jb
popl
rorb
enter
cmp
add
sarl
xchg
add
shlb
int3
bound
sub
push
mov
out
repz
insl
cmpsl
pusha
xor
aam
cmp
adc
adc
aad
lret
pop
shrl
xchg
or
and
cmp
rcll
jge
jmp
outsb
inc
mov
insl
movsl
sahf
je
cmp
jno
jle
sub
es
js
test
movsl
repnz
mov
daa
push
jmp
jno
adc
dec
dec
add
sbb
cmp
and
dec
pop
int
pop
mov
dec
cmc
out
inc
cmpsb
test
call
fldz
aad
sub
mov
inc
insl
and
pop
std
sub
sahf
xchg
mov
popa
popa
loopne
dec
je
out
and
xor
cld
mov
sub
in
das
push
mov
loopne
push
xchg
push
hlt
nop
mov
adc
jl
das
add
pusha
out
push
sub
jns
lea
pop
insl
rcrb
rcl
xor
pop
dec
sbb
js
pop
push
fistpl
leave
andl
bound
or
adc
je
outsl
jno
jne
cmp
sar
mov
je
jl
out
mov
or
lret
test
dec
negb
pop
jae
adc
std
dec
and
push
inc
pop
imul
pop
adc
pop
xor
daa
pop
out
cmp
mov
push
push
in
nop
xor
pop
push
call
mov
mov
mov
lods
xor
fisubl
data16
pop
scas
sbbb
fiadds
inc
filds
sbb
dec
adc
aad
out
pop
inc
or
sti
xchg
das
rcll
test
aaa
push
push
test
push
inc
jo
and
cs
fisubrs
mov
or
into
adc
sbb
je
dec
ja
xchg
test
sub
movsb
das
sbb
fs
and
adc
mov
in
add
or
fs
jl
and
subl
ret
ja
pop
sti
les
imul
shrb
js
lods
cmp
pop
aas
push
test
adc
arpl
ds
ds
or
and
fwait
push
inc
neg
inc
cmc
std
jo
mov
mov
outsb
repnz
jl
push
pusha
in
pop
push
mov
leave
aas
mov
xchg
ja
jns
pop
mov
or
cmp
daa
loop
mov
or
out
shl
int
and
mov
sar
fists
xchg
loop
lods
xchg
in
loope
cli
loopne
mov
in
xorb
cmp
mov
or
or
push
xchg
xchg
enter
fsubrs
push
sub
int
insb
xor
mov
out
sti
arpl
repnz
pop
incl
lret
and
fnstcw
dec
int
push
mov
out
in
jnp
push
jns
xor
cmpsb
ficompl
push
cld
push
jbe
icebp
bswap
test
lods
clc
lcall
jbe
xor
mov
gs
scas
dec
aad
dec
fbstp
xor
cmp
lods
and
cwtl
loope
xchg
inc
iret
jle
adc
dec
imul
bound
mov
add
sbb
xlat
adcl
cltd
mov
or
pusha
aam
xchg
or
mov
fcomip
hlt
outsl
mov
jmp
mull
rol
push
adc
mov
jecxz
cmp
sahf
xchg
imul
add
lods
les
add
loope
aad
and
jge
mov
inc
or
fcoml
mov
cwtl
scas
adc
add
cs
lods
aam
mov
ja
shll
sbb
cmp
sbb
or
sub
or
ret
aaa
hlt
mov
int
icebp
cmp
imul
pop
mov
repz
fldcw
inc
push
push
nop
cmp
das
dec
cli
icebp
lods
fmuls
jg
or
jg
ss
cltd
data16
out
mov
sub
sub
loope
ret
pop
xor
xchg
std
fmul
fdivp
pop
std
jnp
sub
cmp
xor
mov
inc
push
cmp
sti
fisubrs
in
decb
sbb
xchg
adc
push
nop
pop
mov
test
popa
sbb
ror
adc
dec
into
insl
adc
je
repz
orl
pop
ja
lock
scas
jl
es
aad
test
jecxz
xchg
in
cmp
jae
lcall
ret
daa
inc
jp
sti
mov
int
insb
jo
pop
mov
dec
arpl
mov
sbb
ror
fidivl
rcll
clc
xorl
lcall
in
push
pop
ret
jp
cld
xchg
insb
js
lcall
rcll
lahf
adc
sbbb
bound
mov
inc
dec
push
cmpsl
lret
in
repnz
ret
shr
andb
nop
pop
push
xchg
mov
jmp
jo
mov
cwtl
pop
fdivs
icebp
or
xchg
in
adc
or
sub
cmpb
negl
jnp
mov
xchg
cld
mov
jae
das
incl
push
aad
push
xor
push
mov
sti
repnz
aas
pusha
int3
add
lea
push
mov
pop
shrl
pop
jb
sub
ss
xchg
aad
shr
push
lcall
popf
movsb
mov
sbbb
fld
and
mov
das
add
ja
aam
arpl
jo
mov
movsl
repz
or
pop
add
pushl
adc
cmc
frstor
test
inc
or
adc
inc
ljmp
pop
pop
dec
cmpsl
mov
out
add
das
lock
movsl
adc
nop
mov
ficoml
dec
cmp
inc
xor
mov
fst
mov
dec
push
jb
repnz
imul
inc
mov
rol
cmp
in
mov
xor
push
out
push
sub
cld
lahf
add
lcall
and
mov
aas
aad
nop
stc
int
int
xor
movsl
mov
data16
fwait
push
hlt
pop
iret
loope
push
imul
add
sub
aam
sub
xlat
popa
fwait
scas
mov
mov
inc
aad
negl
js
fs
es
je
push
dec
int3
inc
push
scas
cwtl
and
lret
cltd
pop
test
out
arpl
and
mov
push
repnz
insb
rcll
scas
mov
adc
imul
movsb
or
icebp
adc
ret
mov
sbb
mov
push
pop
xor
mov
mov
and
lret
stc
imul
jns
nop
clc
je
xchg
pop
nop
dec
or
bound
xchg
xchg
xchg
mov
gs
mov
popa
je
xor
out
inc
cmp
cmp
rol
aaa
out
in
cwtl
movsb
xor
xchg
fdivrs
lcall
dec
mov
inc
xor
or
pop
sti
sbb
sub
sbb
clc
clc
rolb
add
fsubrl
fadd
pusha
mov
std
call
nop
int
jne
lret
xchg
test
mov
mov
cmp
fnstenv
sbb
push
fstpl
inc
rorl
cmc
ret
mov
ja
sub
sbb
ds
push
and
jmp
ret
mov
addl
imul
cmp
scas
xor
mov
xchg
dec
out
fdivrs
adc
in
xchg
leave
jo
mov
fcmovnbe
roll
and
jb
jp
fdivr
mov
pop
loope
or
jb
out
sbb
mov
stos
cs
int3
jae
clc
lods
daa
lea
pop
xor
sub
or
mov
add
push
sbb
add
test
cmpsl
arpl
lods
js
iret
or
push
jecxz
mov
jne
movsl
gs
mov
push
xchg
xor
xchg
and
dec
xchg
in
jo
and
jnp
pop
mov
xchg
loope
and
dec
aaa
cltd
ds
push
push
sub
stos
pusha
mov
add
jbe
and
ja
xchg
mov
mov
inc
xor
pop
fdivs
dec
push
push
nop
in
fnstcw
mov
jne
sbb
sub
outsl
lcall
or
decb
repz
add
test
adc
push
jp
push
clc
mov
mov
fsts
fs
jg
push
out
adc
add
imul
or
inc
push
daa
push
lcall
fs
jecxz
pop
mov
push
repnz
or
in
cmp
mov
es
cmpsl
mov
mov
adc
inc
in
inc
or
jge
and
loop
push
test
add
sbb
fcoms
mov
inc
jo
sub
test
xchg
repz
or
inc
or
jl
out
xchg
lret
push
inc
sub
pop
test
popf
jecxz
clc
movsl
push
push
sub
scas
and
sbb
call
push
stc
das
pushf
mov
lods
dec
pop
mov
cmp
xchg
fsubrl
mov
iret
or
xor
ljmp
mov
xor
mov
push
mov
sub
dec
cmc
lcall
or
into
repz
sub
jne
mov
cmpsb
jl
aam
fdivrs
add
and
sub
stc
ficoms
fldcw
adc
dec
into
rorl
or
or
inc
mov
pop
ret
dec
jo
or
jecxz
pop
mov
iret
repnz
sub
test
aaa
adc
mov
out
inc
insb
mov
jge
enter
or
insb
add
pop
inc
idiv
xor
sbb
mov
pop
push
outsb
enter
cmp
fisubrl
push
pop
pop
loopne
outsb
mov
sti
mov
pop
rcrb
sub
and
repnz
repnz
adcl
add
int3
int
push
jno
cmp
add
cltd
cmpsl
lret
mov
rcr
mov
cmp
gs
mov
fisttpll
incl
jno
loope
or
rolb
dec
lcall
push
nop
imul
sbb
xor
lahf
xchg
ret
jae
std
sbb
add
test
aas
push
dec
fstps
dec
dec
insl
out
sarl
outsl
push
add
add
and
mov
stc
jno
mov
daa
mov
imul
stos
push
mov
int
mov
dec
adc
push
dec
jp
mov
or
pusha
lock
aaa
jae
or
mov
aaa
pop
push
pop
ds
xor
push
add
in
xorl
sub
xor
push
scas
cli
les
mov
lahf
inc
ljmp
stc
negl
cmp
xchg
dec
jo
fs
cmp
add
rorb
jne
js
adc
cmp
insl
sbbl
add
mov
mov
sbb
outsb
out
test
dec
jle
and
orl
mov
loopne
or
mov
jl
add
mov
in
pop
sti
fmull
movsl
mov
xor
inc
push
push
xchg
dec
je
dec
jbe
cltd
scas
fiadds
cs
push
xorl
mov
mov
enter
out
inc
popa
mov
scas
xor
ljmp
lods
in
dec
xchg
sbb
inc
in
std
pop
arpl
xor
or
pop
pop
mov
ret
icebp
out
and
mov
mov
mov
fs
pop
inc
data16
subl
ljmp
repz
mov
push
inc
iret
movzbl
add
scas
push
mov
fldt
ss
cmp
add
mov
or
sbb
es
fsubrs
pop
pop
or
pop
popa
lahf
cmpsb
out
or
push
cmc
inc
jne
gs
and
jecxz
rorb
call
imul
ja
pop
testb
mov
and
mov
ja
lods
into
adc
adcl
dec
sbb
sub
dec
shll
add
int
pop
dec
add
jg
push
add
fisubrs
and
or
adc
jle
push
and
adc
pushf
mov
jo
sub
cmc
push
shrb
jge
addr16
fisubl
icebp
roll
data16
xchg
inc
jle
ret
mov
popa
dec
push
test
sbb
jae
xor
popa
adc
out
aas
inc
xor
enter
fwait
adc
cwtl
gs
sbb
cmp
pop
in
rol
inc
insl
loope
xchg
pop
ja
out
cmp
xor
add
loop
add
ds
adc
push
xchg
out
fnstcw
and
enter
xlat
xor
inc
loope
inc
mov
and
cmc
mov
in
jge
movl
in
mov
into
mov
mov
add
sti
xchg
jmp
jle
and
jle
xor
out
push
sbb
xchg
push
pushf
scas
push
push
push
dec
dec
inc
cmp
sub
cld
enter
jae
pop
xor
popa
add
xor
div
inc
sub
and
mov
cmp
sbb
and
aas
adc
rorl
pop
push
stos
testl
mov
in
arpl
pusha
lahf
pop
mov
mov
push
mov
mov
mov
out
inc
or
adc
jae
xor
cmp
pop
out
cwtl
mov
pop
imul
mov
sbb
jns
dec
icebp
sbb
adc
pop
dec
mov
mov
pop
adc
shrb
es
in
add
scas
test
fs
add
mov
arpl
xchg
mov
cmp
pop
out
push
mov
mov
cmc
cmp
and
pop
xchg
clc
imul
aaa
in
add
xor
mov
popf
sarb
sbb
inc
shll
add
cwtl
popa
dec
mov
push
mov
nop
in
mov
fmuls
outsb
pop
xchg
and
sbb
mov
data16
in
xchg
mov
cmpsb
jmp
push
inc
insl
pusha
lret
push
xchg
or
push
push
dec
xchg
aam
xchg
mov
pop
lahf
mov
gs
mov
jmp
dec
out
daa
orb
js
andb
stos
stos
enter
xchg
jns
adc
jg
pop
pop
stos
insb
ja
iret
imul
jg
sub
loopne
mov
xchg
mov
or
fdivrl
out
stos
mov
in
mov
pop
cmpsl
push
fidivs
in
cmp
jl
jl
fisubs
and
dec
fwait
dec
push
xor
xchg
add
movsb
leave
arpl
mov
xchg
or
sub
test
dec
cmpsl
mov
and
pop
mov
lret
cmc
cwtl
ljmp
lret
sbb
cmp
jmp
pop
in
cmc
loopne
jno
les
bound
xor
aas
dec
xor
or
fidivl
mov
int
push
mov
inc
jne
inc
xchg
mov
inc
fucomp
pop
je
and
stos
lahf
sub
cli
sbb
rcl
cs
and
mov
jb
sbb
imul
inc
bound
adc
push
sub
std
inc
adc
test
testl
shr
fistps
push
int3
sbb
rorb
fnsave
loope
mov
and
xor
dec
cmp
fnstsw
popfw
jno
adc
or
divb
pop
sub
imul
mov
cld
subl
lahf
pusha
pop
subl
mov
das
mov
xor
sbb
imull
jnp
sub
pop
fsts
aaa
outsl
frstor
xchg
das
imulb
inc
stos
sub
loopne
pop
popf
idivb
jmp
out
jg
adc
cmp
orb
fcoml
mov
fimuls
sbb
repz
je
loopne
and
lret
push
inc
lock
es
jb
jnp
sbb
fyl2x
mov
pop
popf
inc
or
inc
out
insl
jno
sbb
je
decl
jg
leave
xchg
ret
push
ss
mov
cmpsl
push
cmpsb
mov
add
xchg
xlat
insb
and
jnp
cmpsl
cs
out
sub
adc
xchg
or
mov
add
xor
push
mov
xchg
inc
mov
mov
inc
mov
pop
das
test
lock
andl
xlat
push
aas
cwtl
mov
dec
jp
push
loope
cmp
shrb
filds
in
nop
xor
aam
lock
and
sahf
mov
mov
loopne
jp
add
jmp
cs
mov
inc
pop
je
sahf
sbb
cmp
mov
jns
mov
xor
in
ja
loope
jg
sbb
pop
fcomip
fdivrp
pop
xor
ds
test
fwait
jns
out
add
inc
sti
stos
rolb
push
pop
inc
jecxz
mov
sbb
loope
and
mov
jnp
cmp
add
pop
sub
ret
pop
jnp
pop
xorl
scas
add
shrl
xchg
dec
jl
pop
xchg
inc
cmp
xchg
test
inc
cmpsb
xchg
sti
mov
mov
add
jns
sub
dec
insb
push
cli
pop
and
xchg
pop
lahf
or
add
jae
mov
lret
int
aaa
mov
jp
loopne
mov
sub
jno
ss
adc
fcoms
jne
adc
push
and
xchg
lcall
xchg
push
lods
dec
fsubrl
pop
out
sub
mov
mov
orl
sbb
lods
mov
js
mov
jg
pop
or
xchg
mov
mov
or
enter
insl
std
ja
cmp
cmpsb
outsb
jmp
sub
xor
sbb
jmp
cmc
sahf
mov
pop
adc
aas
and
lds
and
cmp
sbb
lret
adc
inc
push
test
test
push
jae
mov
or
stos
push
sbbl
ret
or
shl
clc
mov
pop
add
or
push
mov
mov
incl
in
add
adc
sub
mov
pushf
pop
lds
insb
in
inc
sbb
adc
sub
ds
fbld
inc
xchg
ds
gs
mov
xor
sahf
dec
in
mov
lret
mov
and
fwait
mov
adc
test
rcrb
mov
xchg
fnsave
pop
sarl
and
push
daa
dec
int3
dec
stos
sbb
call
outsb
stc
sub
fisubl
and
push
sbb
les
pop
stos
mov
scas
jmp
popf
aas
enter
ds
inc
enter
pop
mov
pop
mov
sub
call
sbb
in
insb
arpl
mov
and
pushw
cmc
fcompl
jo
sub
cvtps2pd
ljmp
jo
and
mov
mov
cmp
mov
mov
xchg
and
or
mov
jecxz
add
jmp
xor
mov
dec
pop
cmc
mov
pop
cmpsb
dec
sbb
jmp
sub
lock
jae
mov
cltd
sbb
mov
xchg
mov
ljmp
bound
push
cs
out
es
inc
les
imul
imul
sbb
mov
sti
lock
bound
sub
push
fnstcw
popf
and
in
xchg
gs
frstor
mov
xor
repz
xchg
mov
loope
test
and
jae
repnz
push
repz
ljmp
add
mov
push
dec
pop
jae
in
clc
call
les
mov
xchg
scas
stos
fcoms
es
pop
fnstenv
repnz
push
or
pop
je
mov
sub
jl
xor
mov
sub
jmp
das
sbb
mov
aas
data16
jae
or
loop
mov
cs
xchg
jnp
adc
sbb
pop
testl
or
sub
cmpsb
add
and
push
cmp
sbbb
addr16
rolb
das
out
cmc
or
mov
int
mov
bnd
popf
jnp
mov
call
mov
fcompl
mov
sahf
fidivs
int
xor
xchg
mov
sub
pop
in
push
mov
push
xor
jne
shl
mov
sbb
bound
stc
or
jle
xchg
imul
mov
outsl
sbb
fwait
jns
xchg
int3
stos
adc
in
xor
loopne
rol
stos
sub
cmova
mov
into
jp
push
lods
mov
add
pop
ds
mov
in
int3
cli
imul
sbb
sub
or
adc
add
push
xchg
sbb
popa
xor
mov
xor
pop
pop
jbe
sub
int3
inc
es
xor
aam
jp
jg
stos
sarl
lods
inc
pop
mov
jb
xchg
mov
xor
xchg
ljmp
jl
add
lahf
inc
pop
add
loope
jb
aad
outsb
testl
clc
fstps
fiadds
insl
es
icebp
jbe
sub
aaa
loop
sbb
jbe
rcr
clc
sub
cmp
mov
push
add
push
and
mov
push
adc
push
mov
aam
or
in
insb
add
dec
add
push
push
sahf
adc
stos
xor
popf
jns
push
sbb
jne
push
mov
fs
lret
outsb
push
push
lea
loop
jbe
pop
add
pop
test
adc
dec
dec
stos
incb
or
addr16
xor
sbb
cmpsl
fs
out
and
dec
movsl
and
pop
push
mov
shlb
aas
out
jbe
pop
shll
xchg
imulb
xchg
sbbb
fdivrl
sbb
stc
stc
mov
clc
ret
mov
inc
fidivs
clc
orl
pop
int
data16
or
outsb
movsl
clc
add
aaa
int
adc
insl
mov
pop
xorb
idivl
add
inc
push
lret
jb
adc
in
mov
push
mov
mov
rcrl
orb
sbb
dec
arpl
loopne
and
xor
jb
xor
push
adc
outsl
adc
mov
xchg
pop
lret
mov
inc
cmpsb
mov
mov
ss
adc
sub
push
sub
adc
pop
jmp
sub
xlat
sbb
pop
enter
inc
gs
mov
ss
in
inc
adc
adc
fld
cmp
gs
xor
push
aaa
jo
xor
lahf
xor
mov
pop
addr16
and
inc
mov
xchg
mov
inc
xchg
aad
lods
cmp
out
xor
sarl
jmp
imul
xchg
sbbl
jmp
ret
pop
je
out
push
cmp
jp
pop
arpl
clc
or
call
jge
mov
sbb
adc
sub
mov
jno
cmp
test
bound
jb
pop
jmp
mov
pop
stc
movsb
push
xchg
sahf
out
call
pop
fisubs
mov
ret
lds
push
data16
bound
sbb
adc
nop
lahf
inc
xchg
xor
jae
leave
sbb
insb
bound
adc
mov
aaa
jno
out
mov
les
pop
mov
xor
sti
or
sub
loopne
adc
repz
test
test
sbb
push
lock
adc
and
mov
adc
or
aam
loope
lods
jp
inc
das
cli
stos
mov
mov
lret
out
dec
sbb
shlb
jae
and
xchg
inc
scas
mov
leave
into
pop
mov
fsubrs
xor
mov
sbb
out
addr16
or
jne
add
push
mov
shlb
jg
fistpl
mov
enter
xchg
inc
cmp
hlt
sub
inc
adc
push
jnp
mov
push
pop
bnd
lds
xor
push
sub
mov
xor
mov
push
sub
push
inc
das
outsb
xchg
adc
dec
cld
cld
inc
cld
outsl
test
mov
movsb
and
and
jb
push
pop
jnp
xchg
mov
jb
cwtl
stos
pop
cmp
cmp
mov
inc
cmpsl
jbe
ret
int
cwtl
mov
fiadds
inc
jg
hlt
mov
pop
lahf
xchg
pandn
mov
jno
push
lahf
cmovge
add
fsubrs
or
mov
outsb
popf
inc
cmp
and
add
int3
mov
mov
popa
jo
into
sbb
adc
xlat
ss
mov
lea
sarb
add
loop
sub
xor
sbb
addb
fsubr
bound
idivl
ficomps
fstpl
pushf
outsl
jmp
mov
mov
test
in
test
bnd
fsts
mov
mov
scas
cmc
push
xchg
loopne
jbe
ret
stos
repnz
cmpb
cmpsb
ret
xchg
dec
push
push
mov
test
cmp
jecxz
ja
jmp
cli
cmp
mov
inc
or
dec
out
push
push
jb
cmp
adc
out
pusha
pop
push
mov
dec
xchg
jecxz
aam
ret
clc
mov
dec
xchg
fsub
jb
sub
dec
add
sub
imul
inc
xchg
jmp
iret
popa
push
xor
iret
xor
jno
outsl
xor
push
jns
or
pop
dec
rcrb
push
test
cmp
adc
ja
test
test
sub
dec
mov
hlt
push
mov
mov
mov
pop
imul
jns
jmp
out
mov
mov
stos
int3
or
lds
jp
mov
sub
xor
sbb
mov
inc
push
push
popa
add
in
in
addr16
ss
mov
icebp
mov
jae
jmp
push
pop
xchg
fxch
xchg
je
and
cli
jecxz
shll
or
divb
shll
lcall
dec
or
push
fcmovnu
pop
pop
mov
pop
cmpsb
mov
sub
dec
aas
dec
mov
cli
and
icebp
icebp
push
inc
or
outsb
in
mov
dec
xchg
xor
daa
jmp
sub
sahf
jmp
inc
add
adcl
mov
arpl
inc
mov
imul
xchg
and
cmp
mov
fbld
ljmp
mov
negl
or
pop
mov
inc
push
fbstp
pop
push
jl
mov
scas
cs
cmp
add
or
orb
dec
xchg
in
push
aam
das
jae
lret
das
bound
dec
out
lahf
jno
popf
sub
or
push
insl
in
push
mov
pop
shll
dec
sti
mov
cmp
mov
clc
jb,pt
cmpl
movsb
push
adc
pushf
stc
adc
movsl
add
stos
stos
mov
jp
js
dec
xchg
pop
call
cmp
cmpsl
adcb
xchg
mov
adc
js
cmpsb
popf
adcb
insb
ret
mov
repnz
subl
inc
cmp
xchg
adc
mov
fnstsw
dec
xor
add
inc
xchg
mov
lds
pop
pop
mov
into
out
or
jns
into
jnp
nop
iret
adc
adc
aaa
aam
clc
jae
adc
imul
pushf
lcall
cmp
mov
dec
sahf
stc
shll
int
pop
orb
fldt
cwtl
jle
addl
mov
cmp
data16
jae
or
cltd
cld
sub
lahf
xchg
rcll
loope
xor
lret
mov
xchg
lret
inc
xor
cmp
mov
pop
lea
bound
mov
addr16
jg
and
mov
xorl
addr16
dec
into
sahf
inc
ss
push
jno
push
jnp
lea
test
push
mov
cmp
dec
push
outsb
stc
rclb
push
cwtl
mov
arpl
je
dec
loopne
lcall
paddd
mov
lods
arpl
add
ret
cwtl
adc
fsubs
sub
daa
addr16
sub
std
movsb
out
in
push
add
fwait
ja
fsubs
inc
imul
fisttpl
and
pop
test
mov
aaa
jle
adc
sbb
mov
sbb
aaa
jo
adc
mov
dec
mov
mov
cmp
push
mov
mov
scas
popa
sub
into
jno
nop
mov
xchg
ljmp
sub
fs
dec
ror
icebp
es
and
jns
mov
mov
push
xchg
daa
outsl
test
rorb
mov
or
movsb
push
and
xchg
push
in
pop
push
xlat
hlt
lahf
xchg
out
cmpsb
rolb
or
clc
inc
cwtl
sarl
fldcw
in
and
push
jge
aas
test
sub
arpl
pop
cltd
push
fwait
and
mov
dec
cmpsl
inc
mov
divl
jg
leave
push
jge
cwtl
rolb
push
xchg
xor
mov
jns
cmp
dec
push
cld
and
sbb
into
add
shl
xchg
ds
dec
xor
sub
add
test
add
aam
xchg
jo
mull
cld
ljmp
xchg
loope
mov
scas
jne
lods
fldt
sub
inc
add
or
addb
and
inc
int3
and
outsl
sbbl
pop
fcoms
adc
test
and
adc
ret
sahf
and
adc
sti
lea
xor
scas
cs
test
cs
push
clc
sbb
jno,pn
stos
jmp
fmul
das
mov
pusha
pop
xchg
dec
sbb
repnz
cmpsl
or
ret
sub
ficoms
pop
stc
xor
inc
cmp
dec
flds
xor
push
sub
enter
fcoms
out
ja
jmp
cmp
push
jmp
push
out
int3
lods
push
or
sbb
sub
insb
pop
imul
sub
mov
ret
xchg
out
shr
fcmovnb
and
int
jmp
or
mov
mov
rcrl
roll
pop
push
push
xor
xor
stos
xor
div
int3
sbbb
and
inc
push
mov
aaa
lods
imul
fimuls
pop
mov
sub
adc
xchg
lods
mov
dec
fnstsw
cmpsb
inc
jno
dec
dec
mov
movsb
and
dec
jnp
mov
std
dec
add
gs
xchg
scas
jl
xchg
xor
sub
mov
aas
or
pop
sti
sub
hlt
add
repz
aam
rolb
je
pop
cmc
mov
mov
aad
outsb
rclb
arpl
lret
mov
sbb
mov
popf
sbb
lret
cld
jmp
clc
xchg
jno
mov
leave
and
sub
adcl
mov
in
movsl
in
pop
out
inc
popf
loopne
sbb
mov
gs
mov
sbb
int
or
inc
repz
adc
mov
xchg
std
or
mov
add
das
ss
out
sub
sarl
push
out
inc
scas
pop
enter
bound
in
mov
je
je
xor
lret
arpl
mov
xorl
pop
call
push
in
mov
or
out
push
inc
mov
rorl
sarb
or
push
mov
movsb
xor
dec
cmp
cmp
inc
jp
push
rcrb
cmp
loope
push
mov
fldl
sub
mov
in
adc
dec
push
pop
sub
shl
cmpsl
lock
sahf
roll
lods
dec
cld
out
rclb
je
std
shl
in
and
dec
cmpsb
push
jo
pop
cwtl
pop
out
mov
push
cmp
fs
pop
jmp
pop
cmp
imul
icebp
mov
pushf
fwait
jp
rclb
and
sbb
add
out
inc
or
sub
scas
add
mov
cmp
outsb
clc
rorb
jg
push
sub
repnz
repz
in
pop
lret
pop
sub
dec
test
adc
popf
popf
pop
push
jo
pop
das
test
xlat
lods
popa
scas
ss
popa
andl
sub
sti
in
icebp
cmp
jb
push
in
rcl
lret
std
mov
adc
and
sahf
inc
mov
inc
aaa
sbb
lds
leave
cs
xchg
enter
mov
inc
or
push
insl
push
adc
sbb
hlt
or
mov
push
add
daa
push
aaa
repz
fimuls
js
mov
push
push
pop
cmc
adc
cmp
sub
push
dec
and
mull
xchg
mov
inc
movsl
rolb
aad
or
mov
stos
loope
adc
dec
inc
pop
or
sbb
and
imul
int
mov
cmp
mov
hlt
push
int3
sub
mov
mov
add
xchg
les
xchg
loop
mov
pop
xor
pusha
xor
pop
sahf
mov
mov
ds
call
cs
lea
cmp
push
mov
jbe
out
outsl
insl
sub
pop
insl
enter
mov
adc
sbb
push
mov
mov
mov
negl
cs
dec
lods
pop
andl
xchg
dec
cld
out
fisttpll
xchg
das
xlat
sbb
imul
dec
fimuls
push
push
ss
dec
out
xor
xor
sub
or
fnstenv
pop
repnz
inc
cmpsl
mov
ret
stc
in
mov
push
mov
xor
xor
xchg
mov
mov
inc
outsb
lods
cmp
sub
push
das
push
or
cli
jg
xchg
mov
xchg
dec
sbb
fldt
adc
mov
lods
lahf
mov
ret
xchg
fs
pushl
test
jnp
test
push
nop
inc
clc
pop
push
push
or
pop
das
lds
hlt
xlat
xchg
cmp
rolb
shrl
xchg
mov
or
xchg
jecxz
ja
and
test
sub
fnsave
push
lret
cs
les
lds
pop
mov
shrb
sub
pop
cmpsb
adc
notb
sub
test
xlat
jae
mov
jle
push
dec
xchg
aaa
jae
inc
ss
repz
stos
or
xchg
fucomp
fstl
lcall
adc
movsb
jns
gs
mov
pop
pop
addr16
insl
mov
insb
shrl
pop
inc
add
mov
adc
jmp
mov
cltd
and
fstpl
pop
push
inc
inc
sub
xor
loop
lods
add
mov
lds
push
orb
cmpsb
inc
mov
jle
sub
outsb
fsts
xchg
sub
jo
push
icebp
mov
loop
dec
and
jmp
xor
pop
push
xchg
sbb
mov
or
sbb
xchg
mov
mov
push
shld
scas
jb
mov
sarl
dec
in
nop
mov
scas
or
test
jbe
into
pop
add
cmpsl
or
xor
inc
outsl
scas
lods
xchg
mov
xchg
cmp
mov
sub
sub
push
adcl
push
clc
mov
mov
and
push
outsb
mov
mov
jl
mov
daa
and
loope
sbb
pop
addb
outsb
aas
push
subb
and
add
sub
or
or
in
fistpl
test
gs
pop
lds
les
cmpsl
popf
pushf
mov
pop
adc
lds
sarb
lret
adc
leave
push
fisubrs
outsb
mov
add
imul
add
rorb
roll
lods
xor
adc
mov
negl
sbb
out
adc
call
or
mov
mov
inc
int
push
and
lret
jmp
int3
in
xchg
mov
add
mov
adc
push
sti
fs
fnstsw
aam
push
sti
outsl
lea
and
adc
js
dec
jnp
jo,pt
gs
roll
pop
jb
outsb
imul
inc
divl
xchg
lods
das
cli
sub
sahf
cld
js
inc
imul
aas
push
pop
cmp
subb
mov
rcl
faddl
push
add
xchg
sub
adc
mov
mov
adc
addr16
xorl
push
xchg
cmp
jnp
or
xchg
mov
adc
int3
outsb
lds
bound
mov
mull
xlat
outsb
adc
jno
adc
xchg
push
push
pushf
fwait
mov
add
movsb
cmp
sub
sub
outsl
and
mov
scas
push
arpl
jns
pavgb
pop
popf
test
mov
add
inc
ja
sub
add
cs
addr16
pop
jnp
scas
out
xor
mov
loope
cmp
pop
popf
pop
or
adc
loop
or
in
out
imul
bound
jne
insb
dec
push
testl
mov
or
mov
adc
mov
push
jbe
xchg
mov
mov
fisttpll
cmp
dec
sub
jo
outsl
loopne
xchg
sbb
add
jle
es
jns
cmpsb
loope
lock
fstps
cmp
rol
loopne
jo
sarl
cmp
add
test
ss
add
ret
jae
shrl
test
imul
lret
mov
mov
xchg
jbe
or
and
pop
xor
mov
imulb
and
xlat
push
sub
ret
loopne
and
jg
lock
decb
mov
outsl
xchg
cmc
pop
ja
jae
xor
leave
xchg
loopne
je
lock
loopne
fisttpll
out
stos
jg
or
push
mov
sbb
xchg
leave
arpl
adc
inc
outsb
adc
jns
jl
add
mov
xorb
adc
push
fisttpl
fmulp
sbb
pop
lea
dec
and
mov
inc
or
cwtl
in
jle
inc
test
mov
jl
adc
cmpsl
gs
stos
mov
cmp
iret
rep
mov
sub
or
cmc
cli
out
aam
xchg
cmp
mov
and
sbbb
mov
outsl
sbb
dec
sbb
xor
packsswb
lret
ret
mov
aad
fcmovnbe
cmp
cmpsl
clc
rcrl
aam
dec
and
pop
xchg
jo
adc
xchg
mov
push
inc
adc
push
inc
leave
xor
rolb
push
cmp
inc
cmp
jmp
sub
stc
lock
pop
mov
xchg
jle
adcb
outsl
inc
mov
cs
inc
sahf
mov
in
cmp
mov
das
popa
xchg
repz
add
js
insl
mov
jb
or
outsb
call
and
cltd
cmp
pop
dec
push
inc
fbstp
mov
int
xor
cmpsl
pop
mov
ljmp
lahf
testb
pop
xchg
pusha
xchg
aam
push
rcl
adc
mov
hlt
adc
cmp
adc
scas
scas
cmp
subl
push
xor
mov
scas
dec
lret
leave
sbb
aas
inc
xor
jnp
adc
mov
fsts
jp
hlt
mov
jb
call
test
loope
int
mov
dec
ficoms
xlat
mov
roll
movb
push
lea
sbb
repz
mov
jmp
cmp
repz
adc
outsl
push
mov
jae
xchg
or
js
ret
xor
cltd
mov
dec
xor
mov
mov
push
movsl
xchg
mov
cmp
sub
push
add
imul
shl
cs
pusha
les
ljmp
mov
xor
movsb
call
movsl
callw
jmp
and
xor
dec
out
nop
mov
adc
xchg
fisubs
cmp
sbb
xchg
cmp
lret
stos
push
add
jle
mov
mov
add
mov
sub
out
pushf
mov
jb
popf
cmp
mov
mov
aas
or
fistpll
inc
mov
jbe
pop
or
adc
add
mov
sbb
addr16
xchg
out
lods
and
enter
movsb
mov
lret
pop
aaa
sub
push
incl
push
xchg
nop
out
imulb
mov
stos
dec
data16
test
sub
jo
mov
adc
cmp
je
clc
sub
leave
sbb
jle
sti
loopne
add
mov
jp
jecxz
mov
mov
push
jae
and
add
sbb
pop
jmp
stos
and
add
xchg
or
sub
lds
cltd
scas
stos
jns
xchg
imul
adc
arpl
ds
dec
or
pop
cmp
cmpsl
xor
inc
push
fwait
cmpsb
and
roll
in
loope
add
pop
pop
fcompl
sub
sbb
ret
dec
cld
jb
push
imul
jno
hlt
ds
xchg
bound
nop
js
in
and
inc
xor
jb
inc
cli
xor
jmp
loopne
popa
repz
mov
add
out
dec
sbb
inc
push
lods
sbb
lods
push
jnp
sbb
mov
adc
xor
repnz
cli
sbb
sub
mov
sbb
nop
stc
cmp
fcoml
sbb
ja
mov
imul
repnz
outsl
push
sub
push
shlb
dec
cmpl
cmp
inc
sti
xor
dec
fwait
popl
ds
xor
push
pop
push
jg
loopne
cmp
rcl
cld
sub
ljmp
gs
sbb
into
cltd
inc
xchg
inc
shll
and
rcrb
arpl
cs
push
int
sahf
lock
pop
std
mov
test
ret
mov
push
notb
and
adc
pop
adc
popa
jns
sti
ss
push
outsb
ja
aad
es
fdivl
inc
add
mov
aam
mov
mov
mov
xchg
inc
loope
xor
lds
jl
mov
mov
mov
fs
pop
adc
dec
minps
dec
push
mov
xor
sub
pop
loopne
adc
daa
popf
icebp
call
stos
pop
and
dec
sahf
or
mov
push
subb
je
repz
ljmp
stos
xor
or
sti
xlat
xchg
sbb
ljmp
loop
in
jg
lock
cmp
fistpll
jg
push
sahf
jg
stos
mov
mov
ret
loop
hlt
mov
pextrw
inc
add
stos
vminsd
and
cmp
out
sbb
das
adc
cmp
and
repnz
test
test
and
shlb
cmp
cmpsl
and
and
test
add
das
sub
inc
cltd
rcr
xchg
daa
out
or
mov
jbe
and
jo
scas
pushf
fs
push
iret
stos
add
push
fistps
xor
repnz
in
adc
pop
or
dec
cmp
test
add
xchg
js
idivb
mov
push
movsb
and
lea
adc
popf
adc
daa
mov
inc
pusha
pop
mov
mov
mov
ja
mov
adc
dec
pop
pop
or
inc
cmp
pop
add
fimuls
icebp
aam
lcall
daa
inc
mov
mov
xorb
mov
faddp
nop
mov
iret
std
mov
xchg
push
jp
xchg
mov
xor
mov
rcrl
and
pop
dec
and
outsb
outsb
pop
subb
sub
outsb
push
cmp
mov
repz
xchg
mov
dec
pop
insl
sbb
push
test
in
adc
lahf
insb
jl
outsb
int3
cmc
mov
jae
cmp
push
xchg
ficoms
mov
je
cwtl
stos
cmpsl
and
rorl
lea
xchg
enter
mov
inc
mov
add
mov
mov
or
push
jb
xor
pop
dec
mov
xchg
cmpsl
mov
cmp
lret
aaa
rol
cmpsl
arpl
ja
lods
leave
ljmp
cld
in
push
pusha
out
fldt
test
pop
in
add
pop
in
sub
jb
and
rcrb
adc
test
mov
ss
adc
xor
inc
mov
inc
sbb
and
les
fildll
mov
jmp
js
mov
or
loopne
mov
ss
xchg
mov
jns
push
aad
push
sub
jbe
lret
imul
jecxz
mov
inc
mov
adc
cmp
add
outsb
cmpsl
jo
or
ret
mov
lahf
xor
sub
adc
pop
mov
mov
xchg
and
sub
pop
loopne
sbb
dec
pop
pop
out
aaa
xor
sbb
js
and
ljmp
adc
add
xor
lret
enter
jo
mov
andb
fistpll
jne
shlb
comiss
aam
push
cld
loop
pop
les
sbb
or
inc
je
push
mov
mov
jmp
lods
add
enter
mov
std
das
test
dec
popf
lods
ret
fcoml
scas
push
lds
aad
push
cmp
jne
lret
inc
xor
inc
lds
push
gs
push
dec
mov
lds
inc
pop
push
out
stos
icebp
mov
mov
pop
scas
shlb
es
lock
push
subb
mov
movsb
icebp
mov
xchg
add
push
negb
cmp
and
mov
pushf
pop
popa
or
and
jo
mov
cltd
test
mov
repnz
sbb
rcll
sbb
outsb
repz
inc
jecxz
pop
push
out
cwtl
add
push
jmp
fidivrs
das
xlat
out
jns
push
sub
pop
pop
xchg
jo
call
sub
add
dec
pop
jp
cmpsb
pop
adc
fisttpll
jle
iret
jp
sbb
mov
and
pop
jns
cld
add
leave
outsb
movsb
mov
lock
cltd
lahf
mov
rcr
pop
into
push
mov
aaa
mov
inc
movsb
daa
inc
sub
add
sti
mov
push
lds
cmp
fucomp
test
cmpsb
fdivrs
dec
mov
jp
push
fists
xchg
mov
loop
dec
aam
sub
repnz
cltd
int3
pusha
loope
mov
jecxz
and
lods
fcmovne
dec
mov
dec
int
dec
fsubrs
ror
push
mov
data16
adc
xchg
leave
das
sbb
movb
cmp
jl
jno
cmpb
jmp
push
test
out
inc
and
das
and
jbe
push
xchg
or
cmpsl
cli
aaa
sub
lret
fnstsw
inc
daa
xor
mov
push
sbb
cmpsl
jg
test
daa
cmpsb
inc
mov
push
dec
sbb
xor
jnp
pop
mov
cmp
add
dec
ds
inc
addr16
mov
inc
mov
mov
cs
psubusb
out
int
les
cli
push
lahf
subb
mov
and
cmc
mov
fdiv
bound
out
fstl
in
push
loope
imul
neg
push
in
fnsave
mov
mov
inc
add
out
sbb
call
cs
adc
test
shrl
inc
inc
mov
lods
outsb
xchg
pop
call
aaa
mov
into
pop
or
add
push
inc
inc
movsl
and
es
popf
stos
mov
loope
imul
pop
push
dec
scas
test
inc
xchg
and
test
push
stc
sahf
movsl
dec
shlb
js,pn
mov
and
xchg
sbb
addr16
fdivrl
test
out
outsl
fidivrl
adc
and
pop
repz
or
fisubs
pop
outsb
je
mov
cmp
aaa
mov
xor
mov
pop
mov
or
xlat
and
pop
push
xchg
inc
dec
adc
pop
sti
outsb
insl
mov
sbb
mov
mov
ret
and
adc
idivl
cmpsl
dec
jb
and
fnstcw
aam
mov
mov
push
mov
pushl
call
mov
push
sahf
fimull
mov
or
scas
ret
lods
jmp
fucompp
pop
fwait
push
mov
cli
std
jno
sub
and
aaa
mov
cmp
fwait
fs
or
sahf
aad
bound
fcoms
lret
push
cmp
out
cmp
cmp
in
push
xchg
in
mov
mov
pop
inc
xchg
xor
int
jo
pop
adc
mov
add
clc
pop
fnstcw
add
jnp
jno
and
mov
or
cmpsb
pop
popl
sbb
cmp
or
push
and
movsb
pop
ljmp
je
shrb
or
pushf
xor
and
inc
push
in
jp
ret
dec
ljmp
jae
xchg
insl
outsl
ljmp
adc
mov
add
ficomps
inc
pop
inc
divl
lret
pop
adc
jae
mov
push
popf
divb
jmp
pop
mov
push
loopne
and
jp
icebp
inc
sbb
dec
movsb
adc
mov
xor
subb
std
sub
adc
pop
add
iret
clc
ljmp
mov
add
popa
inc
push
mov
shr
arpl
inc
push
inc
sub
imul
out
test
fnsave
and
mov
shr
push
ljmp
xadd
rcll
xchg
repz
jne
fistps
fucomip
and
rclb
adc
loop
cmp
push
into
mov
outsb
ss
arpl
ret
xchg
mov
das
pop
jp
fcompl
pusha
fldenv
jmp
ss
test
inc
or
sbb
and
mov
sub
lcall
cmpsb
in
cld
sti
adc
mov
pop
out
push
cmp
sbb
addr16
pop
mov
xchg
push
lea
pop
popa
sti
daa
xchg
xlat
cmpsb
insl
lret
aad
push
cmp
pop
xchg
repz
xchg
mov
mov
cmp
repz
push
inc
lock
jge
mov
adc
jb
xchg
dec
sbb
mov
inc
dec
sub
push
xlat
enter
and
aam
lods
lods
lar
cmp
mov
push
pop
shrb
fcoms
sub
mov
sub
ljmp
test
jecxz
icebp
icebp
jb
cmp
xchg
lret
clc
movsb
adc
pop
data16
aam
pop
add
call
sbb
jmp
lock
insb
rorb
data16
sahf
jo
imul
jmp
jb
push
mov
popf
pushw
outsl
or
movl
pop
aad
cld
xchg
jp
dec
xchg
aas
and
std
stos
inc
pop
add
fdivrs
xchg
adcl
jg
daa
add
mov
xchg
movsb
divb
jns
add
xor
ljmp
icebp
inc
rorl
iret
sbb
jo
divb
loopne
mov
cmp
push
sub
popa
aas
rolb
cmp
rolb
cmp
lahf
and
ljmp
aaa
loope
rcrb
or
bound
push
inc
pop
imul
dec
test
data16
int3
jb
iret
nop
mov
inc
xchg
xor
push
mov
and
loope
leave
andb
je
mov
sbb
stos
add
add
mov
incb
mov
pop
push
cmp
mov
sub
mov
out
or
les
jge
aas
mov
mov
add
cmp
mov
cli
pop
jmp
or
xchg
outsb
jmp
incl
sub
mov
cmpsl
roll
pop
sub
lds
jg
cmpsb
aas
push
sub
dec
push
outsl
cli
inc
sub
xor
mov
xchg
sti
jecxz
dec
in
push
enter
mov
push
inc
xchg
and
ds
pop
ds
sub
jb
inc
adc
push
es
nop
push
aad
add
or
jo
mov
pusha
mov
and
push
push
adc
insb
sub
leave
dec
das
shll
sbb
and
push
push
fwait
inc
js
loop
cmp
fwait
adc
in
push
jl
cmpsb
jmp
enter
cs
xchg
subl
rcrb
jg
out
mov
sbb
shl
mov
adc
sub
pop
sbbb
push
mov
cmp
call
shl
xchg
xchg
insb
xlat
mov
xchg
push
mov
push
rolb
arpl
xlat
sbb
inc
outsl
xchg
xchg
out
jns
bound
jne
mov
stc
pushl
mov
shll
dec
xor
or
pop
stos
jno
arpl
inc
cmpsb
jge
arpl
in
adc
int
xor
adc
subb
rcll
sbb
and
movl
scas
jecxz
in
out
dec
ficompl
insl
bnd
push
movsb
shrb
scas
xchg
xlat
popf
das
sbb
insl
outsl
mov
or
pop
xchg
fcoms
jae
jge
scas
stos
adc
sub
xor
pop
push
fwait
jg
pop
inc
mov
shll
mov
mov
aas
std
mov
cltd
sbb
xchg
icebp
or
testb
push
ds
outsb
scas
adc
jnp
ret
jmp
xor
jge
xchg
subl
mov
addr16
sarl
mov
pop
aad
mov
jle
enter
or
inc
jl
mov
mov
scas
dec
repz
add
int3
test
roll
xchg
das
pushf
sbb
loopne
or
mov
add
pop
sbb
clc
leave
pop
and
loope
adc
push
mov
scas
ja
sub
or
adc
cmpsb
mov
add
xchg
xchg
pop
inc
mov
jle
lods
jo
lret
cmp
push
out
aad
data16
outsl
mov
jns
stc
push
push
dec
jno
and
or
in
dec
loope
adc
mov
insl
mov
mov
xor
lods
dec
movsb
adc
nop
jbe
cmp
xchg
es
xchg
incl
mov
adc
xor
or
push
lea
lret
and
sbb
cmc
push
sbb
aaa
std
dec
lock
shlb
mov
inc
sub
adc
outsb
fstl
or
fildl
ret
xchg
iret
push
push
adcb
xor
xor
mov
div
push
mov
pop
push
jg
xchg
stc
std
jae
sbb
xchg
daa
dec
nop
mov
pushf
pushf
inc
inc
ret
xchg
mov
rclb
jl
or
enter
cmp
roll
sub
inc
or
xor
movsb
ffreep
and
fs
xchg
push
cmpsb
mov
movsb
xchg
or
inc
insl
dec
imul
and
jbe
test
cmpsb
cmp
xor
jo
scas
shr
ds
int
loope
mov
in
adc
inc
mov
adc
addr16
scas
inc
or
mov
pop
imul
xor
sbb
aad
jmp
rcl
sub
jge
cs
sbb
insb
out
ss
or
fsubs
push
imul
imul
lds
cs
adc
adc
div
es
sub
int
loopne
cltd
data16
pop
lea
jno
into
fs
daa
push
inc
aam
in
test
sbb
xor
mov
les
nop
gs
xor
xor
cmpl
add
and
cmpsl
cli
addb
adc
sysexit
sarb
pop
mov
push
xchg
mov
sub
aad
xor
mov
push
jns
jns
popf
aaa
pop
pushf
fwait
inc
add
in
into
sub
mov
sub
lret
add
xchg
or
fmul
mov
inc
mov
pop
mov
sbb
imul
cmc
ss
aad
cmp
lret
pusha
push
arpl
inc
sub
xor
mov
fidivrl
mov
into
mov
cwtl
pop
ja
pop
arpl
bound
cld
out
fsub
jmp
adc
mov
rorl
add
lcall
loopne
gs
sbb
mov
pop
jmp
js
push
jo
ret
adc
pop
pop
pop
sbb
lret
jge
cmp
mov
pushf
xchg
xor
push
inc
out
cwtl
inc
jae
cld
mov
mov
push
and
xchg
push
sub
mov
jge
fisttpll
mov
enter
xlat
in
dec
cmpsb
or
push
cld
xchg
loope
xchg
ret
mov
xchg
testb
inc
jae
xchg
popa
and
or
sub
fisttps
xlat
out
inc
and
inc
jle
repz
inc
test
inc
test
dec
dec
daa
insb
mov
sbb
pop
push
insl
icebp
data16
scas
clc
mov
push
or
or
rcrb
and
and
incl
test
frstor
insl
addr16
mov
dec
xor
out
fwait
adcb
das
outsl
inc
mov
xchg
das
clc
repnz
sub
in
push
add
mov
sti
in
inc
sbb
xchg
mov
aam
outsb
aad
jge
and
dec
or
movsl
ss
jmp
push
cmpsb
imul
pushf
aaa
adc
repnz
icebp
and
pop
nop
test
mov
fadd
push
stos
add
fs
std
fcmovb
fidivl
pop
jo
in
nop
sbb
hlt
push
nop
ds
into
mov
push
dec
fsubrl
mov
imul
add
aad
das
xchg
loop
lds
add
int3
mov
cmp
xor
sbb
cmp
iret
mov
cmp
testb
js
mov
lea
mov
ret
inc
loope
pop
test
sbb
daa
pop
mov
fistpl
sbb
jne
pop
jne
ror
ljmp
add
cmp
mov
jmp
add
jb
js
ja
xchg
outsl
adc
xor
or
dec
mov
adc
ljmp
pop
or
les
test
cli
push
imul
cmc
lcall
cs
fisttpll
jle
into
adc
divb
repz
das
jns
add
fsubl
cltd
mov
push
out
dec
inc
inc
xlat
push
push
push
shl
add
rcr
sahf
mov
sahf
lret
sub
cld
push
add
dec
outsl
and
xor
stos
cmp
leave
fsubl
xchg
scas
leave
fbld
adc
dec
or
dec
mov
pop
cmp
inc
adc
jo
cli
test
ljmp
inc
dec
ds
cli
pop
imul
aam
out
xchg
nop
iret
adc
lea
daa
push
and
jg
mov
mov
faddp
fcmovu
xor
xchg
sahf
sbb
pop
jl
mov
xchg
sti
rcl
and
lcall
into
dec
mov
clc
and
xchg
leave
sbb
sub
push
rcl
inc
mov
or
dec
repz
fdivrs
test
lods
sbbl
movsl
testl
out
shr
mov
pop
jns
jg
sub
or
pop
inc
sub
xor
add
mov
cli
aad
mov
mov
adc
pop
out
mov
push
jne
pop
loopne
sub
mov
cmp
imul
or
daa
mov
lock
stc
outsb
mov
fisttps
sbb
cmp
out
andl
insl
xchg
sbb
pop
fwait
jae
movsl
mov
dec
xchg
aas
inc
jl
imul
mov
adc
orb
imul
jnp
inc
mov
pop
xlat
pop
xor
push
cltd
rcrl
inc
fnstenv
dec
push
xchg
imul
test
cltd
movsl
cmp
sbb
rcll
orb
inc
ret
cmp
push
fwait
or
adc
movsl
addl
sub
mov
imul
lods
pop
or
fs
jg
pop
pop
push
push
mov
add
gs
mov
jae
xor
clc
xor
cmp
adc
sbb
scas
fld
adc
inc
xor
daa
ficomps
mov
dec
jb
cmpl
repnz
shlb
cmp
lret
aaa
dec
xchg
inc
xchg
aaa
adc
subb
mov
stos
pop
dec
stos
inc
icebp
pop
adc
sbb
stos
inc
aad
adc
cmp
mov
pop
inc
adc
clc
dec
cltd
pop
adc
lcall
pop
dec
aam
sbb
iret
ds
pusha
xor
pushf
inc
mov
or
shll
inc
dec
sti
jl
dec
daa
push
lods
sub
in
popf
mov
push
test
mov
mov
xor
sub
sti
jle
or
test
inc
sub
cs
insl
push
sbb
adc
jp
jne
add
movsl
lods
jmp
mov
push
pop
sahf
out
dec
pop
pop
rcrb
lea
scas
pop
xchg
jno
imulb
icebp
push
jae
lods
repz
mov
dec
aad
xchg
pop
sbb
aaa
test
push
mov
ljmp
push
sub
sub
andl
sub
sub
or
pop
push
js
add
push
iret
and
xchg
sub
push
in
daa
outsb
dec
inc
cmp
inc
movsl
sub
pop
inc
sarb
test
dec
call
push
repnz
adc
mov
mov
mov
pushf
add
and
mov
bound
push
sbb
movsl
xchg
fcomi
sbb
inc
lret
aam
push
or
mov
mov
pop
pop
mov
jl
popf
lea
pop
clc
outsl
bound
pop
mov
psubusb
mov
mov
and
xchg
jb
dec
mov
xchg
and
adc
xchg
push
ja
dec
and
loopne
cltd
mov
dec
or
jnp
adc
jl
mov
xor
jecxz
jne
add
push
sub
je
daa
loope
mov
mov
sti
sahf
ljmp
mov
inc
fsub
mov
test
pushf
push
push
mov
push
mov
popf
sub
daa
ljmp
jp
out
std
or
sbb
lahf
jo
pushl
mov
jmp
sub
ret
cmp
and
nop
or
cltd
mov
xchg
and
or
out
call
and
mov
arpl
fwait
fs
xchg
pop
pop
das
mov
adc
mov
rcl
cld
pop
adc
repnz
xor
cmp
lcall
jae
outsb
jne
cli
sub
ret
lret
cmpsb
stc
mov
mov
mov
std
mov
movsl
lods
notl
jmp
js
cmp
jno
sbb
mov
and
fwait
nop
imul
sbb
pop
ljmp
sarb
ljmp
test
rorl
xor
cmp
or
push
adc
subl
and
fisubrl
lret
in
les
mov
jle
inc
psubd
repz
insb
adc
setp
ds
add
lcall
or
jb
add
push
rcrb
daa
call
repz
adcl
mov
dec
imulb
lret
leave
sbb
jne
fnsave
pop
loope
imul
and
dec
stos
fimull
xorb
andb
push
mov
mov
jne
loope
std
test
jbe
mov
fmulp
pop
nop
adc
mov
jbe
mov
lret
aad
ret
dec
lock
movsl
dec
hlt
adc
fbld
lods
pop
push
xchg
push
dec
add
dec
icebp
lods
cmp
xor
or
push
add
mov
test
pop
mov
mov
sub
in
adc
dec
jb
outsl
mov
lods
das
cmp
sub
push
mov
jp
xlat
repz
xor
push
sahf
cmp
movsb
mov
in
jl
in
cmc
sti
adcl
push
mov
sub
cmpsl
scas
xor
imul
cmp
push
sbb
push
cmp
jne
dec
mov
inc
lret
push
mov
insb
pop
jae
jmp
xor
sub
dec
or
xchg
pop
loope
mov
jl
push
or
pop
xchg
into
mov
shrb
pop
xchg
movsb
mov
pop
sbb
orb
push
stos
pop
mov
fcomps
pop
lods
sbb
dec
mov
inc
jae
push
dec
mov
jne
cmp
cmp
adcl
aam
cmp
and
loopne
dec
cltd
mov
je
sub
faddl
and
mov
fldcw
add
outsb
insb
push
adc
cmp
rcll
xchg
mov
movsb
mov
mov
aaa
mov
adc
adc
or
jae
push
insb
pop
or
call
mov
inc
ja
dec
les
mov
jae
push
xchg
mov
cmp
dec
push
jns
out
inc
rolb
fstpt
xchg
movsl
mov
loope
xor
ja
in
lcall
xchg
xor
dec
lahf
lock
rclb
js
enter
pop
fnsave
loope
lret
cmp
push
add
stos
dec
jle
test
xor
jge
lods
lods
cli
xor
or
mov
loop
sub
mov
add
icebp
sbb
es
jne
jp
jbe
bound
jnp
push
leave
int
ds
and
repnz
pop
push
inc
cmc
addb
in
std
lret
push
dec
sarb
add
jmp
les
mov
mov
icebp
ss
jecxz
and
ss
add
add
or
mov
mov
mov
adc
mov
xchg
xchg
adcb
inc
cmpsb
repnz
xchg
cmpb
movsl
jnp
xchg
inc
and
jl
mov
inc
loopne
in
aaa
pop
pop
pop
mov
xor
sbb
pop
into
insb
pop
jne
and
pop
or
mov
push
divb
daa
das
enter
lahf
js
dec
push
pusha
mov
jl
mov
fs
jg
sub
sar
rorb
popa
mov
xor
mov
mov
and
xchg
dec
jle
pushf
pushf
mov
cmc
push
ret
mov
xlat
insl
iret
jnp
or
inc
inc
xor
jl
adc
xor
std
push
or
cmpsb
ficomps
idiv
cmp
jle
pop
cld
cmp
repnz
xchg
push
test
push
in
movsl
fs
push
lret
pop
fidivrl
mov
addr16
jb
mov
pop
outsb
adc
jae
jmp
jno
int3
xor
push
inc
popf
in
sbb
mov
or
cmp
into
mul
or
xchg
sarl
mov
or
addr16
mov
mov
mov
daa
out
test
cli
pop
test
xorb
pusha
xor
int
sbb
ljmp
outsb
test
arpl
mov
mov
sbb
movsl
dec
dec
fimuls
push
or
adc
adc
cmpsb
adc
push
xor
fcmove
mov
xor
jl
lea
mov
out
push
aam
xchg
mov
dec
push
je
xor
xor
jae
clc
lahf
add
idivl
sahf
or
out
std
pmuludq
mov
mov
xor
sbb
push
adc
push
mov
cmc
jbe
xchg
mov
cmp
aad
aas
jno
hlt
add
out
mov
stc
aad
push
jo
je
cmp
sahf
out
hlt
inc
pushf
mov
cmp
mov
mov
scas
xor
dec
imul
out
dec
in
mov
test
dec
mov
das
into
mov
lahf
inc
cmpsb
xor
mov
push
cmp
daa
sbb
pusha
pop
and
loop
mov
in
icebp
pop
mov
jns
or
cwtl
jle
pushf
jbe
xchg
dec
jl
mov
xchg
std
leave
sti
test
push
add
or
add
gs
gs
pop
out
fimull
push
jmp
dec
bound
lods
xchg
mov
inc
ljmp
sbb
insb
leave
xchg
xchg
xchg
fists
or
sarb
addr16
in
hlt
sbb
pop
sarl
hlt
in
cmp
inc
in
mov
ret
and
pushf
dec
ljmp
ljmp
and
aad
addl
pushl
loopne
out
scas
leave
and
dec
dec
cwtl
xor
cmp
inc
out
mov
mov
ljmp
sbb
mov
out
mov
daa
mov
mov
rclb
jecxz
lea
leave
push
test
pop
mov
cli
test
std
add
mov
int3
ds
mov
jae
scas
ss
push
or
mov
jp
test
xlat
je
dec
xchg
incl
fldt
sahf
insl
pop
push
sbb
cmpsb
pop
iret
inc
incb
ja
pop
js
and
loope
sub
push
stos
mov
mov
inc
pop
pop
inc
sahf
pushf
add
fldcw
xchg
xchg
xorl
fcoml
mov
nop
add
inc
call
xor
add
mov
lods
pop
test
xor
inc
xchg
xor
rolb
je
sub
xor
jg
mov
xchg
lcall
mov
mov
cmc
icebp
arpl
xor
sti
push
hlt
adc
fwait
dec
ficoml
aas
pop
cli
push
dec
adc
push
icebp
js
ja
or
xor
or
pop
stos
sub
cs
dec
repnz
mov
std
cmp
push
out
je
jae
dec
dec
shll
jge
mov
mov
bound
imul
mov
push
jne
xchg
loopne
dec
fstpt
fwait
rol
lds
mov
and
xor
stc
mov
call
cmpsb
inc
arpl
imul
mov
stos
arpl
add
jge
cmpsb
mov
jmp
and
pop
test
dec
cmp
aaa
test
jb
xchg
cmpb
stos
test
or
xor
addr16
sub
mov
and
cmp
inc
insl
mov
sbb
xchg
cmc
dec
push
inc
stc
push
sbb
maskmovq
mull
pop
adc
les
clc
mov
pop
adc
gs
add
jno
adc
fisttps
decl
adc
iret
movsl
idivl
add
movsb
mov
jle
cmp
call
pusha
lret
jecxz
push
js
xchg
pop
push
ss
pushf
daa
adc
cmp
sub
xchg
loopne
xchg
pop
insb
clc
push
or
jg
mov
test
loopne
fcomp
lret
adc
mov
in
pop
rclb
je
dec
out
aam
shlb
add
and
fcoml
icebp
aaa
pop
popf
lods
idiv
dec
xchg
jmp
clc
fcompl
sbb
push
ss
out
pop
mov
add
xchg
rol
mov
mov
out
xchg
xlat
pop
stos
cmp
shlb
adc
adc
das
lods
orl
int
and
cmp
shrb
mov
or
scas
mov
cwtl
in
push
or
clc
and
jmp
jae
mov
dec
test
pop
int3
mov
push
add
lea
add
lods
push
xor
leavew
sub
add
mov
xchg
aad
cmp
js
std
lret
sahf
adc
out
cmp
mov
clc
xor
or
and
repz
or
std
push
in
and
cmpb
imul
jnp
cmp
sti
xor
in
adc
push
in
test
push
scas
sbb
clc
out
jbe
jg
mov
iret
fucomip
xchg
xor
andl
mov
mov
aas
dec
jne
and
cmp
popf
xchg
mov
pop
divl
fnstenv
mov
ja
cwtl
je
xor
sbb
inc
mov
imulb
scas
push
arpl
add
loopne
test
fxam
int
in
adc
js
hlt
leave
mulb
mov
mov
jns
jbe,pt
scas
ljmp
scas
xchg
mov
xchg
orb
mov
xor
or
std
sbb
pop
shrb
pop
adc
test
rorb
mov
xor
popf
lahf
imul
int3
insb
jg
dec
cmp
stos
jmp
movsl
cmp
call
int3
or
push
jno
pop
pop
dec
push
lock
xchg
int3
xor
pop
xchg
sub
inc
push
inc
xchg
aaa
push
adc
or
arpl
icebp
inc
mov
mov
sti
sub
rol
mov
test
lret
mov
xchg
sub
outsb
xchg
inc
xorl
and
scas
or
dec
insl
adc
mov
push
push
test
imul
ja
in
or
jbe
retw
mov
xchg
xor
adc
cs
jns
ljmp
xor
inc
call
pop
add
das
push
jmp
jne
cmc
xor
lcall
xor
cmpb
test
out
adc
pop
lcall
or
pusha
das
cltd
fisttpl
mov
push
jae
cmp
addr16
sub
xor
and
push
ret
aad
inc
aaa
aas
jle
mov
xchg
mov
push
push
add
mov
mov
sbb
roll
or
dec
sub
push
push
mov
outsb
xor
insl
movsb
faddl
outsl
jo
inc
mov
or
ss
jno
das
test
add
and
cmp
cmpsb
in
xchg
xor
jmp
cli
sub
iret
or
inc
shl
dec
lcall
push
add
jp
xchg
sub
and
test
sub
add
arpl
sub
shll
sbb
imul
mov
mov
jne,pn
rcll
rcr
or
sub
sti
push
dec
jnp
sbb
xor
mov
psubsb
and
sbb
jmp
rorl
xchg
mov
push
out
sub
dec
movsl
adc
pushf
mov
sbb
hlt
adc
xor
ljmp
fdivl
hlt
xor
and
mov
adc
dec
pop
leave
mov
test
or
gs
xchg
or
not
leave
and
outsl
stc
jl
mov
loope
je
pop
ljmp
std
mov
scas
xchg
and
pop
mov
clc
mov
in
pop
aaa
mov
aad
inc
ret
xlat
in
push
xchg
inc
jbe
mov
aaa
lahf
cmp
xchg
dec
xor
mov
insl
test
xchg
jmp
push
insl
sbb
dec
dec
pop
cmp
dec
mov
jmp
test
jne
and
rcrb
repz
movsl
mov
out
iret
xchg
bound
and
dec
or
pop
lds
push
rolb
into
cwtl
push
push
es
ja
popa
pop
xor
xor
iret
leave
cmp
jnp
cmp
mul
adcb
out
mov
test
int
pop
inc
scas
clc
cltd
xchg
outsl
insl
enter
dec
jp
xchg
cmpsb
xor
leave
add
or
scas
pop
je
mov
xchg
or
push
lcall
jns
out
fmul
add
mov
shll
mov
movsb
sub
pop
inc
lock
std
sbb
in
repz
out
push
fisubrs
mov
mov
sarl
push
dec
out
mov
xor
in
in
push
mov
mov
xorl
std
ss
mov
cmc
popa
fs
rcrb
xchg
call
es
mov
xor
das
xor
push
int
jle
pushf
daa
cs
fbstp
cmp
cmp
sub
lds
fs
in
adc
movb
ljmp
adc
test
or
adc
xchg
cmp
mov
push
rolb
dec
popl
repnz
and
cld
sub
call
xor
xchg
dec
push
into
repz
fcoml
loope,pt
and
dec
and
add
std
in
pusha
add
inc
push
out
xor
daa
or
test
sub
cmp
pop
or
cs
xchg
and
xchg
cmpsb
inc
adc
cli
dec
shrl
mov
and
sahf
imul
jp
int
adc
cmp
dec
out
mov
jno
ja
movsb
xchg
out
pop
icebp
repz
popf
cwtl
shl
fxam
adc
incl
mov
jno
push
orb
repnz
mov
xchg
pushl
movsl
mov
push
cmpsl
sub
dec
aam
and
cmp
pusha
cmp
adc
jl
mov
push
call
jmp
xorl
rep
mov
push
into
scas
out
lahf
mov
mov
sbb
int3
repnz
into
pop
and
mov
stos
add
adc
fmulp
adc
dec
mov
inc
pop
push
aas
sub
pop
fdivl
shrl
rorl
pop
clc
sub
ficomps
push
xor
mov
push
add
jmp
cmp
pop
ficoms
sti
xchg
inc
xor
sub
sub
pop
lock
xor
pop
jae
adc
and
movsl
mov
jno
xchg
out
js
or
lds
add
int
ficoml
jnp
iret
icebp
je
and
imul
and
addr16
stc
in
out
sub
push
fwait
daa
pop
cmp
push
or
add
fsubrl
test
inc
cmpsl
mov
mov
pushf
sbb
aas
popf
jge
leave
inc
roll
insb
sub
out
repnz
fwait
rorl
mov
icebp
sub
jmp
scas
add
insl
lods
xchg
imul
lret
test
daa
cmpsl
pushf
int
push
mov
xor
test
cld
mov
dec
push
outsb
push
sti
push
inc
movsb
push
push
in
outsb
roll
xchg
out
mov
mov
popa
rolb
pinsrw
adc
add
pop
mov
clc
es
pop
repz
shlb
loope
push
mov
adc
pushf
xchg
xchg
push
das
cld
es
push
cltd
push
dec
jecxz,pn
iret
ficoml
rcll
dec
mov
inc
and
out
mov
adc
mov
add
add
in
dec
mov
les
and
repz
cmp
loope
add
sbb
pop
pop
test
mov
dec
push
xchg
scas
lret
rorb
add
or
out
mov
xor
ds
in
jl
dec
jecxz
adc
add
inc
call
and
pop
iret
cmc
bound
adcb
imul
pop
nop
lds
cmp
cmp
sbb
push
sub
and
inc
fsubrs
pop
jmp
loopne
cmpsl
adc
lcall
mov
dec
rclb
jns
jg
pushl
addr16
mov
std
shlb
jp
out
scas
enter
ret
mov
or
cmp
xchg
cmpsb
xchg
dec
inc
fildl
mov
scas
pop
ja
pop
pushf
cmp
das
jne
and
pop
xor
dec
sub
aas
mov
inc
dec
sbb
sub
jg
setge
and
mov
daa
jbe
cmpsl
outsl
mov
or
outsb
sbb
dec
es
sbb
jne
xchg
xchg
dec
into
mov
jbe
and
mov
push
lock
mov
xor
jo
jns
inc
stos
inc
add
cmp
pop
outsb
out
sub
test
fadds
mov
adc
daa
andl
cwtl
dec
ds
jnp
shlb
shrl
scas
icebp
outsb
pushf
push
push
and
negl
aaa
neg
push
inc
push
jmp
pop
icebp
jb
mov
imul
leave
mov
fldenv
and
pop
mov
push
xchg
cmpsl
lcall
sbb
outsl
push
movsl
rcrl
test
sub
mov
insl
sub
leave
outsl
gs
icebp
insl
addr16
scas
out
call
push
mov
or
jnp
pop
mov
test
jl
xchg
scas
and
stos
push
xor
arpl
xor
inc
inc
popf
ds
mov
sbbl
jmp
pop
dec
leave
jno
pop
cmp
mov
clc
repz
lahf
pop
xlat
add
add
pop
ja
cmp
jno
movsb
das
nop
inc
leave
lcall
lock
push
incb
arpl
cwtl
mov
outsl
cld
das
lods
out
mov
out
jno
or
lcall
enter
lds
sbb
jbe
movsb
mov
rorl
call
mov
sbb
push
pop
cli
insb
sti
xchg
lcall
mov
ret
cmp
pop
lcall
mov
cmc
clc
sbb
xor
jle
dec
dec
push
cmpsl
in
movsl
mov
sbb
jb
inc
mov
or
sub
sbb
fistl
xor
testb
or
daa
in
mov
add
jg
out
pop
insl
push
dec
int
filds
mov
jno
testb
cmp
cmp
mov
jmp
lods
lret
adc
js
out
cld
add
out
add
jmp
pop
add
mov
les
aas
fidivs
addb
push
mov
mov
xchg
xor
dec
cs
stos
dec
frstor
mov
mov
dec
les
lcall
xchg
xchg
lods
imul
sbb
jl
inc
dec
gs
out
mov
cli
aam
mov
and
dec
jmp
sbb
mov
sti
fldt
cld
mov
jno
dec
push
jge
mov
mov
jno
xchg
repnz
cld
jge
fs
cmc
dec
pushf
popl
inc
jns
lahf
and
mov
fsts
pop
dec
xlat
fstpt
aas
inc
add
add
mov
nop
xchg
fs
push
lock
into
leave
pop
mov
iret
rcrl
shr
sub
loopne
sub
and
xchg
mov
sbb
push
mov
outsb
cmpsb
lcall
outsl
ljmp
or
mov
int3
and
adc
dec
dec
fcoml
inc
loope
mov
sbb
je
sti
lods
adc
pushf
cmpsl
dec
jnp
and
mov
rolb
pop
test
outsb
xor
cmp
jle
mov
imul
ret
aad
jb
add
jg
stos
xor
stos
arpl
jge
xchg
xor
leave
pop
aaa
jg
aad
push
inc
lock
test
sbb
mov
push
add
fwait
mov
push
or
aad
fwait
ja
sub
mov
movsl
in
mov
mov
lock
pop
cmpsb
jmp
hlt
fwait
and
inc
sub
imul
ret
jge
stos
notb
outsb
fidivrl
in
mov
jg
xchg
je
lea
and
inc
jbe
sbb
jp
adc
and
leave
dec
out
xchg
into
sub
xchg
pop
xchg
mov
movsl
cli
aas
xlat
add
cmc
movsl
cmpsl
push
into
or
int3
mov
mov
dec
jbe
int3
add
cmpsl
cli
mov
xchg
mov
fdivrs
insl
cmpb
add
mov
lods
dec
stos
test
push
in
mov
adc
jnp
or
std
shlb
xor
shrb
xor
js
mov
adc
add
add
mov
push
lds
jge
sahf
push
sub
mov
lock
out
call
es
out
shlb
add
add
xchg
xchg
and
dec
add
mov
into
js
push
cwtl
adc
lds
jo
in
ret
jno
in
sbb
sub
lret
push
xchg
cmpsl
cli
cmpsb
mov
data16
aad
mov
adc
mov
pushf
mov
scas
xor
dec
dec
push
inc
sub
or
push
xchg
movsb
or
sbb
cmpsl
cltd
dec
enter
cmc
addl
loope
push
mov
cmc
stos
pop
push
mov
pop
sub
mov
adc
jmp
lock
mov
xor
cmp
xor
add
sbb
ds
cmp
add
sub
lods
arpl
push
mov
xchg
xchg
fcoml
dec
aas
int3
jae
movsb
and
mov
stos
scas
cli
cmpsb
jecxz
add
iret
and
inc
jmp
jge
mov
mov
push
jge
aas
and
inc
gs
adc
xchg
xor
cwtd
in
pop
or
add
fildl
js
scas
jae
cmpsb
push
ja
jp
xor
push
fmul
mov
cld
aam
mov
outsl
imul
add
mov
mov
push
ja
adc
lcall
push
jbe
ss
sub
jl
dec
addr16
cltd
nop
fcomps
leave
jle
ret
mov
fistps
mov
out
dec
out
inc
jecxz
pushf
mov
mov
movsl
push
aaa
movsb
lds
pushf
mov
popa
mov
cld
inc
repz
gs
in
jo
cmp
jle
push
inc
jl
fs
lahf
cmp
aas
les
pop
loop
ljmp
pop
cmp
jge
jle
or
mov
adc
jo
je
mov
loop
cli
into
out
sub
out
jnp
sub
cmp
inc
adc
pop
xchg
inc
xor
aaa
inc
sub
aas
test
popa
push
sub
dec
xor
mov
push
and
jg
mov
push
pop
mov
add
jg
inc
aas
inc
fs
hlt
movsb
or
and
dec
int
out
xchg
cli
xor
out
adc
cli
lahf
jae
scas
test
cwtl
push
in
mov
xchg
jne
cld
push
imul
push
sub
sbb
rorl
jl
pop
lea
test
xchg
xor
jl
test
sarl
lret
aad
pop
loop
xor
and
add
bound
or
icebp
push
daa
lret
sub
add
cmpsl
xor
clc
cld
pop
or
fstps
out
fadd
pop
out
adc
scas
fwait
ja
js
out
sbb
jg
bswap
jecxz
ljmp
and
push
push
cwtl
mov
test
bound
out
mov
sbb
icebp
jge
sbb
repz
pop
add
jecxz
icebp
clc
ds
fxch
and
lods
push
dec
aam
add
mov
xchg
in
js
test
movsb
mov
xor
and
cltd
inc
fidivs
push
jno
leave
adc
lock
push
js
pop
lahf
fimuls
push
push
mov
mov
hlt
dec
idivl
xorl
mov
mov
daa
mov
scas
jg
and
mov
das
mov
lods
sub
lds
sbb
cmp
fists
pop
insb
xor
mov
out
pop
sbb
test
ja
mov
dec
fisubrl
loop
lahf
into
imul
sbb
mov
jge
add
pop
mov
jns
add
push
test
lret
ret
cwtl
in
rolb
push
pop
jb
xor
xor
sahf
pop
pop
jnp
testl
sbb
xchg
stos
mov
mov
stos
ljmp
in
adc
inc
jmp
jl
push
inc
lods
iret
hlt
xchg
inc
pop
mov
in
and
push
cmp
imul
ss
inc
xor
es
sbb
ret
popa
mov
adc
fst
push
shl
mov
mov
aas
scas
push
inc
mov
loop
daa
xor
xchg
scas
loop
cwtl
fimull
cs
xchg
lds
negb
arpl
sbb
sbb
mov
sbb
inc
gs
pushf
cmp
cmp
lods
mov
cmp
ret
sub
arpl
xor
sub
inc
mov
aam
pop
dec
cmp
dec
int
leave
push
pop
mov
fiaddl
adc
and
idivb
xchg
xchg
inc
push
mov
cmp
sub
inc
enter
mov
mov
xor
ds
mov
inc
enter
push
bound
add
xchg
push
fisttps
pop
cmp
bound
xor
fisubs
les
movl
popf
mov
ror
sbb
cmpsb
cmp
xor
mulb
lods
dec
int
iret
mov
inc
mov
ret
xor
xchg
outsb
add
push
data16
or
nop
sbb
mov
push
mov
jnp
add
or
mov
pop
lods
mov
sbb
jae
movsl
or
nop
mov
jno
mov
fldenv
bound
addr16
mov
js
nop
aam
mov
sub
dec
sbb
in
sub
jbe
xor
mov
into
lock
test
mov
xchg
cmp
push
hlt
fwait
das
add
lea
mov
popa
je
or
sub
xor
ds
xlat
out
jb
aam
icebp
or
mov
ja
ljmp
popa
gs
stos
cli
pop
filds
dec
lock
sub
and
mov
sub
and
lcall
add
pop
in
and
pop
loope
cltd
imul
pop
call
or
inc
fs
push
and
lods
cli
pop
push
inc
pusha
pop
push
sti
fwait
test
cmp
insl
adc
faddl
into
lret
mov
xor
xorl
xchg
cmp
scas
jge
jno
cli
aam
xor
dec
fidivs
ds
jne
aad
mov
int3
jmp
mov
in
jg
call
dec
dec
inc
hlt
dec
icebp
jl
loop
mov
jns
mov
in
out
gs
dec
adc
cltd
dec
ss
movsb
cmp
rolb
jnp
jae
and
inc
or
inc
inc
pop
dec
loopne
dec
sbb
jb
push
movaps
mov
in
push
add
lret
add
cli
lahf
xchg
and
shrb
imulb
mov
sub
lea
jmp
cmp
sub
sti
test
sub
jnp
inc
stc
pop
cs
add
xchg
sbb
dec
cwtl
and
pop
testb
sbb
xchg
movd
push
xchg
and
jns
les
insl
ffreep
stc
pop
or
addr16
xchg
jle
outsb
pop
mov
mov
aam
mov
addb
cmp
push
in
adc
jp
and
in
lea
or
imul
icebp
pop
inc
inc
dec
ja
and
sub
push
or
enter
stos
cmc
sub
sub
sub
mov
es
jne
or
inc
ficoml
pop
lahf
cmpsl
add
testl
push
cmp
jae
mov
loope
jecxz
hlt
nopw
lcall
sbb
mov
out
popf
jbe
lcall
and
cli
sub
sub
xorl
sbb
adc
mov
sbb
mov
pop
sbb
inc
lds
mov
dec
mov
xchg
push
ja
sub
or
cs
mov
jb
pop
stc
jnp
xor
cltd
cmpsl
mov
cmp
fldcw
mov
insl
pop
and
pop
mov
jl
fldl
sbb
repz
cld
int3
add
sbb
mov
pusha
xchg
fsubl
mov
sub
call
out
and
ljmp
in
mov
xchg
clc
jp
repnz
or
shl
incb
icebp
je
outsl
jae
xor
shll
sub
lods
push
inc
test
out
cld
dec
cmpsb
dec
mov
pop
jl
pop
pop
add
adc
sbb
pop
pop
and
cmc
pop
sub
push
add
adc
cli
xor
cmp
xor
std
cmp
cmc
aaa
repnz
cmp
iret
mov
int
icebp
sbb
sbb
sub
cwtl
pop
or
outsb
mov
push
cmp
cmp
cmp
mov
enter
push
jne
js
pop
fcomi
rolb
inc
dec
test
orb
sbb
push
icebp
shrb
insb
test
mov
pop
add
jo
xor
sub
dec
mov
in
aaa
push
add
mov
mov
pop
ds
out
dec
movsl
pop
jae
enter
lcall
pusha
jmp
mov
je
outsl
sarb
mov
and
adc
movsl
xchg
lds
jmp
jge
inc
into
or
cmp
insl
dec
movsb
and
inc
cwtl
xor
adc
lods
mov
and
test
mov
push
and
rorl
mov
cmpsl
shr
arpl
adc
mov
push
fisttpll
mov
and
arpl
add
sub
sti
push
pusha
je
mov
mov
xor
stc
adc
add
lcall
jb
cmpsb
imul
mov
sbb
cmpsl
sub
xchg
sbb
cmpb
dec
stc
inc
or
pop
jge
je
jg
mov
jp
popf
in
jp
cltd
mov
jbe
test
loope
xor
dec
lods
sahf
pusha
jp
neg
pushl
mov
sub
xor
add
std
das
sbb
cmp
cmp
data16
sbb
sub
sbb
adc
inc
fildll
leave
mov
das
pop
push
mov
xchg
in
mov
mov
add
xchg
cmp
mov
xor
cwtl
loop
add
sub
push
and
negl
xor
in
mov
cmp
test
and
mov
jmp
push
push
sub
add
dec
fildll
jbe
mov
repnz
pop
enter
xchg
std
add
and
arpl
arpl
and
or
and
xchg
add
ror
je
aam
pop
mov
dec
sbb
pop
push
jecxz
and
or
loope
iret
pusha
and
out
rolb
xlat
mov
test
iret
dec
ja
xor
sbb
test
cmp
inc
inc
mov
mov
add
xchg
dec
jb
xor
test
insb
xchg
sub
ss
outsl
gs
das
mov
xchg
scas
sti
sub
inc
call
pop
jp
dec
popa
shrb
push
int3
gs
adc
sti
mov
fabs
fisttpl
add
pop
push
in
inc
sbb
mov
inc
dec
lret
add
jbe
add
inc
add
inc
pusha
xchg
call
cltd
and
ret
sarb
int
andl
mov
inc
dec
ljmp
lcall
outsb
push
cmp
fwait
outsl
pop
das
mov
mov
jp
insb
stc
mov
cmp
xlat
pop
fstps
lret
jp
in
xor
and
mov
gs
jnp
inc
mov
aam
mov
lock
jp
dec
stc
jne
mov
jmp
xchg
xor
push
or
mov
push
clc
and
push
cmp
out
xchg
jne
dec
or
mov
xchg
add
aad
xchg
sub
push
dec
jb
xchg
cmp
jnp
int
mov
xchg
jae
dec
mov
call
out
pop
stos
jb
fiadds
imul
lods
js
repnz
ret
imul
fnstsw
and
push
cs
fsts
lds
insl
adc
xor
or
cmp
xchg
xorb
std
jno
xor
outsl
rcr
adc
cmp
sub
jl
in
addr16
mov
std
fwait
loopne
out
lds
mov
mov
xlat
xor
mov
les
aam
repz
icebp
or
mov
sbb
scas
ja
stos
dec
jae
mov
push
adc
and
cmp
push
add
sbb
xchg
orb
clc
ljmp
call
push
lods
and
sbb
loopne
xchg
movsb
loope
test
imul
mov
scas
aaa
loop
xlat
cwtl
sbb
ret
lea
xor
sahf
mov
stos
in
dec
sub
popf
sub
fistl
dec
dec
bound
outsl
inc
mov
inc
fdivl
das
enter
fildl
fcmovbe
adc
pop
sub
es
sub
push
pop
pop
xchg
mov
xor
insl
popa
movsl
shll
xchg
add
outsl
sahf
add
pop
lret
scas
lcall
insl
out
cli
push
pushf
movsb
cwtl
or
dec
ljmp
add
xor
xchg
or
mov
aam
test
sbb
in
xor
add
jae
pop
pop
push
in
data16
movsl
arpl
push
adc
out
test
iret
div
mov
mov
bound
pop
add
xor
incb
lcall
subb
mov
das
xor
outsb
or
or
pop
stos
lods
sbb
adc
pop
ret
dec
pop
push
mov
mov
sbb
in
in
cmp
out
push
jbe
rorb
cmp
and
push
xchg
xor
loop
aam
mov
jle
pop
ss
pop
mov
fcoml
insl
sub
mov
pop
xor
cld
pushf
lahf
cmp
mov
test
test
mov
insl
adc
mov
lcall
outsl
movsl
lods
push
loop
xchg
jmp
dec
movsb
mov
scas
sarl
shrb
jmp
cwtl
or
adc
sub
pop
pop
add
cmp
pop
pop
in
outsl
xchg
push
xchg
jno
js
or
jno
into
sbb
cmp
in
fsubrl
arpl
mov
flds
sbb
int3
xchg
xchg
addr16
outsb
aad
orl
mov
pop
lret
inc
stos
test
mov
je
cmpsb
mov
popa
sub
stos
pop
into
cmp
inc
ja
lcall
lods
xchg
or
sub
nop
add
mov
dec
cmp
mov
push
add
xor
cmp
cli
shll
inc
outsb
mov
scas
movsb
or
add
xor
pop
add
lock
pop
ret
mov
cmp
jns
xchg
mov
add
pop
shlb
mov
ret
jle
sbb
mov
into
push
or
push
mov
hlt
mov
arpl
das
lret
imul
pop
or
and
mov
pop
iret
mov
pop
int
jmp
pop
adc
into
aas
cld
mov
cmp
xor
clc
push
out
cld
mov
lahf
mov
jb
in
push
cli
bound
js
js
cmp
push
int
pop
jp
orl
mov
scas
orb
adc
fidivs
cmp
in
pushf
sub
inc
jecxz
dec
inc
xor
in
sarl
cmp
or
pop
jae
mov
jae
leave
gs
shll
lds
lods
mov
mov
xchg
dec
xchg
sub
add
dec
imul
xchg
jle
shrl
call
sbb
adc
sub
arpl
cld
jnp
add
sar
inc
mov
arpl
nop
aaa
in
scas
pop
or
rclb
insb
mov
movl
gs
aam
mov
mov
mov
outsb
mov
aaa
or
jl
cmpl
fistpll
jb
add
andl
inc
sub
inc
lea
out
sub
add
fwait
cmpb
sub
cmpsb
jns
mov
inc
sti
cwtl
sbb
shlb
cwtl
subl
xchg
pop
xchg
movsl
hlt
test
xor
mov
mov
pop
cs
adc
push
mov
mov
push
add
imulb
push
xor
sub
ret
push
test
add
xstore-rng
cmpsl
orb
cmp
adc
mov
mov
mov
push
push
test
rcll
mov
and
das
inc
xchg
iret
cmp
test
dec
sbb
push
jmp
push
ret
out
outsb
popf
xchg
test
xchg
and
xchg
dec
push
jb
add
dec
flds
and
and
sbb
sub
in
repnz
fmuls
data16
pop
jp
and
dec
ja
pop
jno
sub
jg
pop
xchg
jae
jbe
mov
xchg
in
imul
cwtl
sub
push
in
jo
or
push
popf
lds
pop
aas
dec
orb
mov
cmp
lods
pop
inc
push
jge
mov
out
stos
mov
jecxz
mov
sbb
jo
and
cli
cmpsb
addl
cwtl
cli
test
xor
out
loope
xor
rcl
push
sbb
sbb
pop
pop
or
cmovno
and
push
std
adc
cltd
imul
test
pop
jp
xor
xor
stos
bswap
repnz
test
decl
test
repz
jl
fdivl
ret
sarb
pop
mov
data16
sti
pop
mov
in
pop
roll
dec
lcall
mov
je
test
int3
add
mov
adc
aad
addl
mov
jp
push
xlat
adc
jb
sbbl
lock
cmp
repnz
rep
mov
cmp
dec
dec
ss
or
outsl
push
in
dec
fildl
and
mov
dec
add
cli
aas
std
mull
sahf
test
ss
aad
mov
pop
fldl2e
bound
movsb
cs
push
rorl
insl
ljmp
pop
push
and
pop
and
nop
jge
mov
test
stc
daa
fwait
pop
jb
jb
iret
les
push
jo
jne
mov
pop
test
cmpsl
mov
cmpsb
adc
fadds
adc
mov
jmp
jmp
push
xchg
ds
xor
jl
clc
out
jle
cmp
dec
cmpsl
push
test
and
push
vmwrite
jno
int
cmp
pop
pop
adc
push
sub
sub
pminsw
in
dec
lds
pushf
dec
and
push
adc
lods
mov
sbb
cmpsb
std
je
mov
cmp
adc
aas
psadbw
pop
cld
lods
imul
sbb
into
pop
mov
dec
jmp
jo
add
push
and
insb
adc
lock
add
fwait
or
cltd
repz
add
fcompl
mov
fisttpl
mov
sahf
in
sbb
out
repnz
fdivr
sbb
addr16
daa
mov
fsubrl
sbb
push
xchg
xchg
xchg
ljmp
les
out
inc
popa
ss
aas
xbegin
adc
test
repz
mov
out
jne
out
lahf
mov
add
shrl
push
cmp
loopne
xchg
lods
add
xchg
push
mov
mov
in
add
mov
cmpsl
mov
xchg
push
adc
push
fmulp
jb
loope
mov
les
std
or
out
les
ss
in
push
test
jmp
aaa
sub
popa
dec
cmp
or
scas
ret
ret
xchg
xchg
jl
adc
mov
xchg
pop
mov
mov
mov
xlat
clc
xchg
push
scas
icebp
daa
daa
inc
add
imul
fs
icebp
mov
jnp
aam
dec
aad
mov
iret
mov
xor
inc
or
loop
movl
mov
mov
xlat
push
jnp
push
mov
or
inc
lcall
push
add
dec
xlat
mov
dec
mov
push
push
inc
mov
jl
pop
adc
lret
pop
std
add
pusha
clc
push
cmpsb
sbb
int3
loopne
lock
and
fnsave
jge
pop
insw
outsb
lcall
and
mov
push
xor
insl
cli
pop
out
or
bnd
mov
add
loop
dec
dec
aas
adc
dec
pop
lahf
xchg
dec
mov
push
rolb
rcrl
shr
dec
cwtl
xchg
repnz
sub
popl
addr16
insb
push
repnz
mov
mov
out
lods
pop
arpl
mov
cmpsl
inc
pop
jbe
mov
mov
and
fisttps
adc
sub
js
and
or
pushf
sub
scas
push
sub
je
aam
pop
adc
jmp
adc
andl
aas
jne
dec
sub
adc
iret
push
fwait
cmpsb
push
pop
dec
push
mov
daa
add
call
adc
enter
das
fwait
pop
cld
rorb
clc
daa
push
pop
stos
movsb
scas
xchg
lock
jae
pop
out
add
jb
mov
negl
fadd
mov
xor
cmp
int3
das
pop
inc
lret
add
rorl
sub
add
adc
add
and
popa
push
clc
and
nop
xor
bound
addr16
mov
pop
shrl
lret
dec
xor
out
rcll
mov
xor
mov
jbe
jae
sahf
mov
pop
lahf
fiaddl
push
pop
mov
imul
xor
andl
xchg
shrb
out
jmp
outsb
xor
xor
iret
lea
mov
mov
daa
and
mov
and
or
inc
mov
mov
ds
sti
jge
pop
clc
sub
jb
jb
inc
adcb
or
xor
sbb
or
jl
mov
fwait
adc
lods
inc
mov
cmp
icebp
rcrb
ret
pop
test
dec
xchg
xor
rcr
fwait
jno
pop
ret
jb
jge
movsl
and
jno
sahf
cli
je
lret
pop
xor
daa
or
popa
push
popa
cltd
pop
push
sbb
cmpb
xchg
pop
dec
imul
cmp
jne
add
shlb
mov
lcall
xor
enter
popa
mov
jb
pop
ss
lret
and
mov
imul
cwtl
js
add
scas
insl
shll
pop
xor
mov
jge
cmpsb
pop
inc
add
inc
mov
cmp
std
jno
fisubrs
lcall
xchg
out
xor
sbb
sub
push
sarb
mov
sub
xchg
push
ret
dec
rolb
pop
test
mov
mov
xor
sub
test
bound
stos
push
xlat
subb
push
ret
lods
and
push
jge
xor
push
iret
int
cltd
ljmp
in
inc
aaa
xor
jb
addr16
int
adc
out
inc
lea
repnz
ret
loopne
mov
loopne
jno
pop
and
je
out
aam
xchg
out
pushf
daa
sarb
mov
mov
xchg
sub
ret
xchg
or
sahf
pop
lret
inc
cmp
or
dec
ja
lcall
and
rcrb
jne
mov
cli
mov
std
and
mov
les
or
roll
icebp
leave
pop
mov
dec
xor
inc
lods
jae
arpl
dec
repz
les
cmp
idiv
push
iret
push
mov
jbe
das
jmp
lahf
fwait
cmovnp
push
push
jbe
adc
jle
fidivrs
into
loope
mov
loopne
add
in
cmpsb
lods
fisttpll
sbb
sub
mov
imulb
xor
fwait
dec
jae
mov
inc
ficoml
sub
xchg
pop
sub
fucomip
imul
int
in
pop
xchg
rolb
mov
inc
jns
fidivrs
das
fnstcw
push
and
pop
cmp
rcl
and
movsl
repnz
mov
jno
fdiv
jbe
clc
shrd
fidivl
sbb
pinsrw
xor
fstl
push
mov
outsb
xchg
adc
lods
mov
inc
mov
mov
push
mov
jecxz
in
push
imul
jl
push
inc
mov
std
in
out
hlt
pop
xor
aas
xchg
sub
shl
aaa
pusha
sbb
push
mov
notrack
jo
ljmp
xor
sub
jo
mov
scas
cli
subl
mov
cltd
sub
in
sub
in
jne
imul
jb
int
aaa
jle
add
call
leave
and
cmp
sar
shll
cmp
in
dec
inc
leave
xchg
stos
cmp
xchg
fdiv
jg
xchg
sub
ds
in
lret
mov
addb
je
push
dec
pop
scas
pop
loop
fisttpll
insl
adc
test
xor
push
xor
mov
inc
and
push
pop
insl
or
aad
aam
push
fdivrl
insl
fsts
xchg
ja
jne
fdivrl
popf
and
dec
mov
rclb
addb
sbb
out
aas
into
jp
enter
mov
fisubrs
pop
decl
aam
cmp
cld
into
scas
adc
jb
ljmp
ds
out
adc
mov
stc
sub
andb
xor
psrlw
shr
jne
sbb
inc
xchg
dec
or
enter
test
mov
sbb
daa
pop
dec
enter
fnstenv
cld
mov
mov
leave
aaa
push
pop
shll
or
mov
xchg
dec
and
lods
sbb
sbb
cli
loopne
call
cmp
pop
cmp
inc
add
roll
jmp
dec
movsb
add
jecxz
jns
sub
push
add
sti
scas
adc
add
mov
cmc
mov
dec
fisttps
or
push
ds
decl
cmp
jl
movsb
or
sub
xor
adc
movsl
mov
data16
addr16
mov
repnz
mov
test
test
fs
mov
mov
sbb
ficompl
xor
sti
stos
int3
sbb
out
mov
push
jb
and
mov
out
sbb
mov
sahf
fnstcw
icebp
imul
adc
and
cs
sub
and
andb
jbe
adc
add
inc
mov
xchg
dec
cmp
add
iret
clc
divb
add
test
mov
aas
push
inc
mov
jae
push
into
testl
pushf
jnp
xchg
loop
sti
nop
mov
add
shl
test
sbb
pushf
stos
push
inc
imul
icebp
pop
cltd
in
and
dec
gs
ror
pusha
das
in
ror
loop
jnp
insb
jmp
inc
mov
gs
in
repnz
push
mov
push
xchg
mov
inc
and
push
or
enter
rcrl
push
adc
lds
dec
jmp
cmp
nop
sub
fldcw
in
imul
imul
add
cmp
mov
mov
sbb
out
int
mov
jnp
lds
pop
and
lea
shll
and
stos
pushf
sub
cli
mov
cld
mov
xchg
aaa
mov
xchg
fnstenv
sub
and
ss
sbb
adc
or
divl
cmp
inc
jno
sbb
lahf
sub
fsubr
push
sub
cs
adc
mov
arpl
inc
ss
adc
xchg
dec
aad
int
inc
add
inc
lock
insb
push
nop
mov
leave
inc
dec
fdivl
mov
leave
test
mov
and
pop
pushf
lods
adc
cmp
test
and
outsb
push
cmp
shll
scas
shl
mov
stc
pop
mov
dec
in
push
or
xor
sub
insl
cmpb
mov
cwtl
in
add
leave
sub
filds
adc
ds
xor
sti
mov
push
fldt
push
ss
mov
ret
xor
xchg
ss
lcall
push
jb
sub
aad
gs
shlb
cmp
je
repz
mov
gs
adc
cmpb
fisttpll
ja
test
scas
or
inc
xor
jmp
cld
in
mov
xor
push
and
cmp
inc
scas
add
jns
in
jnp
jge
push
or
cmp
pop
mov
dec
dec
push
outsl
stc
xchg
pop
rcll
push
push
sarl
outsb
scas
xor
cli
xchg
dec
xor
fisttpl
adc
mov
es
por
lock
lods
arpl
test
xchg
mov
push
adc
xchg
inc
rcrl
pushf
and
mov
cmp
sub
push
push
icebp
adc
imul
xchg
add
ret
fs
push
xchg
sub
mov
test
jnp
xchg
xor
in
inc
dec
lock
fldl
scas
fildll
push
lea
push
mov
adc
les
push
cmpl
cld
dec
pop
sahf
push
test
inc
aad
gs
adc
in
inc
popa
cmp
pop
je
push
cmp
sbbl
push
test
adc
sbb
sbbb
jp
jne
in
mov
dec
fwait
inc
mov
jo
movsl
aad
sub
xchg
jne
inc
lret
call
push
ja
xor
xchg
into
cmp
jg
dec
xchg
enter
mov
mov
mov
mov
arpl
mov
pusha
pop
loopne
rorb
mov
mov
ja
jnp
enter
sbb
outsl
xchg
adc
repz
or
rcrb
mov
roll
or
push
shlb
sub
cli
or
xchg
not
movsl
ss
inc
jmp
popa
push
dec
leave
cltd
cltd
mov
andl
int3
cmp
stos
rclb
data16
push
mov
ficompl
xlat
mov
jns
pop
lock
jecxz
cld
fcmovbe
cmp
jge
cmp
xrelease
jo
sbb
rorl
scas
push
scas
out
mov
cmp
mov
sarl
scas
mov
jb
or
or
shl
xchg
jg
push
sub
inc
pop
js
adc
js,pn
cld
test
icebp
pop
addr16
mov
imul
loop
fidivl
test
or
fwait
and
inc
mov
sti
insb
add
push
adc
cli
push
mov
fistpl
popf
mov
loop
insl
dec
in
int3
out
mov
fidivs
cmp
jae
inc
adc
add
pop
pop
mov
dec
daa
cli
jns
xchg
cmp
movsl
imul
push
shll
jbe
popa
mov
loop
rcr
xchg
cmc
test
jnp
into
push
push
hlt
and
arpl
lcall
mov
sub
lcall
fnstenv
shl
subb
pop
cmpsl
out
push
jns
test
pop
int3
push
fildl
jo
pop
dec
out
aam
into
add
aad
out
cmp
or
mov
sub
pop
dec
sbb
cmp
scas
lock
rorb
pusha
push
pop
add
push
xchg
xor
movsb
mov
fcoms
ret
push
gs
pop
adc
dec
mov
ja
pop
cld
icebp
popa
rclb
or
lcall
xchg
and
push
ss
mov
and
lcall
int3
rclb
movsb
xor
sahf
jnp
insb
add
ret
jnp
gs
ljmp
aas
jle
adcb
xchg
pop
sti
jmp
inc
sti
lods
cmc
xchg
pushl
addb
ffreep
mov
pop
ljmp
std
mov
sbb
adc
push
test
je
mov
ljmp
cmc
mov
iret
test
ljmp
shll
xchg
or
add
shrl
jnp
inc
scas
add
and
dec
in
push
pop
js
adc
mov
rolb
push
fcmovu
inc
push
inc
sbb
clc
mov
inc
js
sub
adc
inc
push
push
push
dec
imul
scas
lcall
sbb
into
flds
jmp
and
xchg
test
pop
lcall
mov
sbb
cmp
adc
fwait
js
jae
ds
arpl
es
mov
dec
loopne
addb
out
mov
loopne
dec
cmpl
push
inc
lcall
inc
imul
test
pop
test
adc
sub
dec
cmc
int
lcall
sbb
lods
bound
aas
aad
sbbb
xor
cs
and
ja
divl
push
dec
mov
stos
jmp
dec
fldpi
lcall
xchg
rclb
mov
repnz
into
mov
cli
ds
mov
inc
inc
js
jge
jg
xchg
jl
add
mov
pop
and
imul
cld
dec
push
enter
lods
and
in
mov
and
fldcw
fdivrl
sbb
fsub
ret
or
mov
cmpsl
enter
mov
ss
dec
bnd
sbb
int
xchg
push
mov
add
dec
inc
adc
push
sub
dec
pop
pop
and
add
rorb
mov
out
lods
dec
fmull
insb
sbb
xor
add
hlt
insl
sub
ret
dec
cli
pop
push
das
sub
lods
or
xchg
lret
push
pop
lock
dec
insb
pop
mov
cmp
sbb
les
jns
mov
outsb
popf
ds
mov
fdivrs
popa
jo
lods
sub
dec
imul
add
mov
push
pop
out
push
cwtl
mov
pop
leave
movsb
dec
in
in
xchg
ljmp
inc
mov
test
imul
lds
jb
jns
mov
pop
mov
fbstp
add
insb
dec
mov
rcr
inc
aad
movsl
mov
clc
or
icebp
loope
push
sub
inc
mov
mov
rcll
jmp
sbb
sub
or
xchg
xor
test
sub
pop
cld
or
in
push
popa
hlt
roll
stos
inc
mov
adc
repz
jle
jg
and
mov
mov
jb
adcb
ret
mov
or
cmp
mov
sbb
jecxz
ss
ds
or
sub
lds
rolb
mov
inc
mov
sbb
in
jb
mov
outsl
cli
push
cmpsl
lret
dec
push
add
cli
adc
into
jge
jl
push
sbb
push
add
xchg
jecxz
icebp
lds
call
cmp
loop
pop
pxor
add
negl
sahf
mov
sub
xchg
mov
xor
xor
into
ret
or
add
in
cmp
jae
test
ffreep
data16
adc
sarb
jae
repz
dec
or
mov
mov
daa
pop
stos
scas
shrl
sbb
dec
sarb
fisubs
pushl
push
inc
or
negl
popa
shrl
test
fs
rcl
xor
mov
addr16
xchg
clc
sarl
out
orl
push
sub
xchg
pop
mov
xchg
pop
mov
call
inc
shll
xchg
lock
xchg
add
shr
mov
xor
idiv
jbe
test
popa
add
das
and
sub
dec
jns
hlt
jp
cmpsb
out
and
push
or
cld
xorl
sub
test
pop
in
subl
fsubrs
mov
clc
add
cld
mov
push
and
cmpsb
inc
pop
pop
lock
or
loope
movsb
fisttpl
fs
xor
pushf
imul
cld
jbe
mov
iret
mov
xchg
adc
cmp
hlt
xchg
mov
leave
adc
inc
or
lock
arpl
add
xor
jns
lods
xchg
arpl
cmp
stos
cmp
sbb
in
fsub
jp
pop
cli
inc
out
cmp
jle
pop
inc
push
xor
inc
leave
and
aaa
inc
sbb
repnz
lds
scas
push
add
jge
sub
repz
cmpsl
shlb
fiadds
mov
lret
cmc
jo
mov
dec
mov
iret
jae
popa
push
icebp
pop
sub
mov
arpl
xor
mov
les
sti
shlb
sbb
jns
sub
xor
sbb
scas
js
loope
and
xchg
addl
ds
push
jbe
xor
add
push
popa
inc
mov
into
mov
lods
loope
push
cmp
std
mov
out
pop
dec
jae
xor
testb
scas
ds
pop
or
pusha
lahf
movsb
push
iret
and
push
lock
cltd
in
xor
nop
jns
mov
jo
dec
les
test
or
sbb
and
pop
ja
pop
pop
das
ficomps
xorb
test
push
push
into
int3
add
adc
push
insb
int3
adc
cli
loope
xor
test
mov
enter
jno
lret
movsl
and
mov
mov
fldenv
clc
call
cmpb
fcomp
iret
clc
dec
sub
sub
mov
aad
rcrl
xchg
stos
mov
lds
test
mov
fistpll
push
jnp
ja
push
test
lods
and
push
es
and
cld
jae
dec
fstl
jo
sub
push
std
in
test
dec
cmp
pop
rorl
fnstsw
cmp
test
pop
les
dec
cs
test
inc
aad
push
mov
daa
sub
iret
hlt
xor
mov
and
cld
add
loope
mov
js
adc
popa
mov
enter
cmp
fisubl
cltd
das
call
mov
stos
inc
mov
aas
sbb
mov
mov
and
enter
push
xchg
inc
mov
fsubl
cmpsl
cmpsw
push
lock
mov
orl
shrb
punpckhdq
dec
fs
cmp
or
movsl
insl
cld
ret
xor
pop
ljmp
mov
mov
popf
movsb
inc
push
cs
stc
jmp
addb
fisubl
xor
lahf
inc
lock
xlat
mov
arpl
push
adc
mov
xor
int3
sub
frstor
repnz
push
xor
mov
dec
subb
and
cmpsl
enter
xlat
jl
iret
je
scas
jae
enter
and
lds
mov
mov
add
iret
mov
fisubrl
cmc
jne
in
repnz
push
rcll
sbb
mov
loop
fildll
dec
dec
outsl
fidivl
cmpsb
scas
xchg
inc
mov
mov
mov
data16
xchg
jl
cmpsl
add
xor
push
mov
aam
mov
inc
cs
into
aas
jp
fnstenv
add
ss
aas
ja
xchg
out
iret
adc
mov
xor
pop
dec
mov
lods
sub
ror
xchg
sub
sbb
outsb
mov
hlt
out
mov
cli
cmp
filds
repz
mov
mov
test
bound
inc
xchg
mov
ret
sbb
insl
pop
hlt
dec
mov
in
or
rolb
mov
inc
test
test
ds
dec
loopne
test
sbb
loop
pop
mov
cmp
test
mov
scas
inc
int3
dec
je
aam
pop
icebp
cmpsl
dec
and
push
inc
and
xor
mov
mov
push
jne
dec
push
cli
cmp
mov
mov
pop
neg
mov
vpsubd
mov
add
lods
ror
int3
aad
or
mov
mov
sub
gs
jbe
shll
mov
das
jns
push
pop
scas
bound
mov
mov
fadds
push
inc
add
aas
popf
es
and
arpl
push
inc
je
xchg
loopne
push
jnp
pop
bound
jno
sbb
jbe
pop
test
aad
incb
fwait
dec
xchg
pop
into
das
sub
jl
sub
pop
imul
loopne
pop
dec
sub
fld
push
or
adc
decl
pop
bound
sahf
orl
mov
mov
cmc
fwait
mov
in
cmp
and
scas
movsb
cmpsw
push
mov
cmpsl
jo
mov
int3
jne
stos
cmp
ja
stc
test
jns
lock
rol
or
data16
push
test
dec
mov
xchg
out
jns
mov
mov
dec
pop
cmc
add
xor
and
rcrl
std
outsl
pushf
scas
les
cmp
fs
imul
inc
ffreep
imul
dec
mov
add
xor
adc
add
pop
popl
cmpsl
dec
or
imul
fwait
ret
jecxz
ficompl
lret
jae
call
mov
mov
inc
sbb
cmp
add
push
push
mov
sbb
lahf
data16
or
popa
leave
mov
sub
xor
sub
push
addb
je
or
icebp
arpl
gs
jns
loop
stc
cmpsl
xchg
pop
arpl
movaps
sbb
push
ss
clc
cmp
frstor
pop
dec
pusha
nop
cmc
inc
sbb
js
mov
pushf
fbld
outsb
decl
enter
inc
jnp
inc
js
add
jle
int
or
lods
xlat
cmpsb
mov
jbe
mov
fs
ds
push
jae
dec
iret
dec
adc
lahf
xchg
pop
mov
sub
lret
mov
nopl
xchg
sbb
add
sbb
mov
scas
lods
jmp
dec
mov
shl
sbb
inc
iret
hlt
mov
dec
add
shll
js
in
jne
and
adc
xchg
lret
gs
mov
mov
mov
inc
xorl
inc
dec
or
mov
cli
jle
add
push
sub
cmp
nop
adc
push
mov
add
pop
pop
mov
call
aaa
std
pushf
mov
pop
mov
das
dec
clc
je
jp
loopne
jnp
dec
xor
mov
and
stos
inc
xor
pop
sbb
mov
aad
mov
fcomi
jmp
cmp
sbb
jmp
scas
cmpsb
aaa
les
adc
clc
add
fbstp
call
in
jb
push
addb
pop
pandn
std
movsl
sbb
jl
sub
sbb
mov
insl
leave
push
jle
movsb
outsb
mov
push
xor
fcompl
xchg
aam
arpl
ffree
sub
xchg
mov
rcll
lahf
fisubrl
xchg
or
in
movsl
clc
mov
leave
fs
aad
mov
push
enter
data16
sbb
fwait
xchg
adc
inc
jbe
lods
gs
scas
mov
mov
cmp
jne
cmpl
into
push
jecxz
ja
jg
aas
xor
pusha
push
jge
movsb
jns
sti
mov
call
loopne
xor
popf
add
jl
out
popf
cmpsl
mov
pop
jne
add
ds
xchg
cmp
sub
out
sbb
test
pextrw
or
cmp
xchg
and
inc
dec
push
inc
or
mov
cmc
iret
xor
inc
add
mov
jge
bnd
fwait
stc
jmp
test
mov
push
inc
sub
jmp
push
mov
xchg
jmp
mov
sbb
inc
pop
xor
mov
mov
pop
jg
xor
mov
or
repz
jecxz
in
loopne
stos
sti
jae
xchg
mov
mov
loop
xchg
and
and
stos
sarb
mov
adc
mov
add
sub
mov
adc
subb
jecxz
lock
shll
fcoml
in
in
push
pop
das
inc
mov
mov
nop
adc
xor
lds
fcmove
mov
addr16
popa
push
cmp
or
repz
mov
movsb
ja
or
jge
xchg
push
dec
lret
inc
shll
subb
inc
loope
jge
mov
pop
gs
outsb
aad
sub
lahf
pop
in
mov
aas
shrb
push
mov
ret
push
jle
aad
cmp
notl
mov
faddl
xchg
sbb
mov
mov
mov
clc
insb
ret
nop
jae
ret
repz
jno
mov
push
leave
or
inc
jne
push
add
mov
mov
lds
ds
incl
ret
xchg
jns
xchg
and
faddp
fnstenv
xchg
int
cmc
xor
add
xchg
mov
mov
adc
lods
mov
inc
icebp
pusha
cmc
in
add
popf
pop
rolb
gs
mov
mov
mov
and
xor
sbb
cmpsl
jns
sbb
idiv
daa
mov
sub
cmp
or
in
mov
cmp
gs
movsb
cwtl
pop
mov
rcr
cmp
fisubrs
cmpsb
sbb
pop
xchg
sbb
cmp
clc
xor
add
adc
and
sub
aas
mov
lea
orl
sbb
rcrb
xor
inc
lods
cs
pop
xchg
xchg
adc
mov
sbb
fisubrs
repz
in
jp
aam
xor
cmc
cmpsb
xchg
lock
add
mov
loopne
pushf
hlt
fwait
shrd
add
loop
adc
and
mov
lcall
in
jg
lahf
mov
ljmp
sub
adc
movsb
iret
scas
push
mov
loope
xchg
arpl
cld
cmp
mov
cmp
pop
push
movsl
int3
movsb
dec
test
inc
shll
push
inc
jb
adcb
sbb
sbb
sub
ret
mov
xor
pop
pop
inc
cmp
push
ror
lret
stc
sbb
pushl
push
icebp
loope
loop
out
mov
pop
pop
jno
or
mov
popf
pop
ret
mov
addr16
mov
movsl
pop
add
cs
sbb
repnz
jmp
fcoml
stos
xor
lods
jecxz
jo
je
pop
pop
mov
fstpl
mov
mov
mov
mov
pop
pop
add
adc
and
mov
xchg
ss
insl
inc
sti
dec
pop
out
jmp
lds
sbb
mov
pushf
ja
popa
and
out
fiaddl
scas
mov
jge
lret
sbb
push
and
or
in
sub
push
mov
add
inc
out
movsb
loopne
sbb
dec
inc
sub
fcoml
dec
imul
sub
jl
xor
testb
in
sbb
roll
inc
js
inc
push
adcl
push
test
sub
xchg
fsubl
mov
jno
adc
fiaddl
negl
sub
xchg
or
lcall
mov
repz
addr16
pusha
inc
push
icebp
imul
mov
inc
xor
sbb
or
cmp
add
inc
add
or
xchg
pop
push
lcall
push
sti
dec
xchg
push
shll
punpckhdq
mov
mov
push
push
adc
fs
hlt
pop
xchg
jmp
andl
into
out
xlat
outsb
pop
mov
sbb
movsb
ja
sbb
or
pause
push
leave
jne
loopne
jns
bound
stos
lcall
push
mov
sahf
xor
std
hlt
in
and
inc
cmp
ss
xchg
cmp
push
pop
setno
in
and
call
pop
xchg
mov
fcmovnb
addl
jl
mov
mov
ljmp
enter
xchg
sbb
or
push
bound
jg
mov
adc
fucom
pop
xlat
imul
push
push
adc
xchg
mov
loopne
lock
int
addr16
xchg
cmpsl
stos
sub
mov
lea
and
out
aad
pop
cmp
mov
arpl
xchg
dec
mov
les
lods
push
int
sbb
mov
mov
dec
mov
jmp
sbb
sub
push
cmp
inc
sbb
fsubrs
popf
sbb
or
flds
mov
mov
jecxz
fldl
adc
jno
and
adc
rcrl
push
mulb
push
mov
mov
mov
lcall
cmp
int3
std
pusha
mov
mov
bound
mov
imul
insl
jmp
lods
mulb
fbstp
lret
out
cmp
test
int3
xchg
xor
stos
fwait
xor
cmp
push
in
and
lock
call
inc
mov
jno
ret
push
stos
in
inc
mov
stos
repnz
pop
push
mov
pusha
pop
scas
sahf
mov
xchg
test
mov
or
fcoml
pop
call
dec
cmpsb
jne
and
es
jnp
pop
mov
daa
jmp
push
enter
lcall
jp
out
cli
push
and
add
repnz
shll
outsl
jno
int
pop
int
ss
cltd
push
decl
pusha
daa
adc
cvtps2pd
xor
lods
inc
mov
aas
bound
add
das
jne
out
pushf
mov
cli
push
shll
not
cmp
imul
pop
outsb
jmp
lock
xchg
xor
lret
dec
cli
xlat
mov
jmp
roll
pop
xchg
ss
rorl
sub
rorl
rorl
or
int
pop
push
sub
inc
push
scas
stc
les
repz
dec
dec
add
imul
mov
push
jecxz
dec
ret
push
data16
cld
cwtl
jg
arpl
jb
xchg
push
leave
inc
lahf
testb
jl
dec
scas
lods
xchg
jp
cmp
icebp
nop
lods
lea
or
mov
std
dec
out
xlat
or
out
or
jmp
mov
or
sbb
cmpsl
mov
mov
mov
and
jle
les
into
add
pusha
lock
jne
movsb
in
and
ret
aam
sub
test
cli
fcomps
dec
or
lcall
std
inc
mov
cmp
test
ds
mov
jo
xchg
lcall
jmp
or
psubd
aaa
inc
ds
push
xor
adc
mov
iret
pop
arpl
add
orb
adc
adc
dec
xchg
mov
and
cmp
mov
out
jb
xorb
add
and
out
pop
add
lods
pushf
cmp
cld
jb
mov
mov
sub
std
cmpsl
adc
testl
xchg
pop
mov
or
jecxz
dec
pop
cmp
mov
dec
ljmp
repz
xchg
std
pop
xor
pop
push
cmpsl
jae
gs
sbb
stc
jp
stos
bound
repz
into
cmc
jo
mov
addr16
lods
repnz
roll
rclb
pop
sub
pop
call
andl
mov
arpl
adc
lods
inc
add
call
push
sub
mov
call
add
jp
dec
jmp
push
cld
and
outsb
add
inc
mov
mov
pop
push
inc
sti
fnstenv
std
out
sahf
sbb
mov
add
imul
imul
cwtl
add
xchg
dec
idivl
jg
addb
pop
ret
mov
jns
loop
scas
dec
jmp
and
leave
icebp
loop
and
add
mov
mov
lods
jle
mov
mov
and
cmp
stc
jo
adc
aaa
inc
jge
xor
lods
in
inc
lret
mov
adc
xor
fwait
into
adc
mov
loop
fiadds
leave
rcrb
out
xor
add
test
push
pop
or
fiadds
aam
mov
stos
sub
sub
and
dec
sbbl
mov
or
pop
ds
and
pop
inc
mov
mov
lcall
jp
add
jp
insb
push
fldcw
mov
sub
scas
lea
cmp
pop
ss
sub
sbb
test
inc
test
popf
push
mov
fistl
jge
in
lahf
cli
cmp
repz
cmp
loope
mov
rcrb
and
jae
and
xchg
sbb
cmp
inc
sub
loopne
test
mov
popa
push
out
dec
fxch
jle
insb
push
add
inc
std
sub
imul
sub
pop
mov
insl
xor
cmpsb
pushf
outsb
dec
mov
mov
or
sub
aas
cmc
hlt
ret
or
outsl
xchg
js
mov
jns
jnp
cmc
adc
lods
xchg
push
fstpt
aad
testb
push
mov
fcomps
mov
and
mov
stos
imul
ret
inc
jg
sub
ss
mov
fsubs
movsb
cltd
loopne
mov
movsb
cmpsl
push
andb
push
xchg
inc
lret
jge
out
sub
orps
mov
int3
sbb
icebp
test
push
and
sahf
cmpsb
call
or
cmc
sub
in
ret
xor
in
and
cmc
inc
mov
bound
int3
mov
aas
enter
stos
mov
mov
repnz
outsl
mov
sahf
xor
mov
mov
cmp
cltd
daa
ds
popa
rorb
mov
xor
cwtl
scas
or
adc
cmp
int3
adc
sbb
pop
cmp
es
addl
xchg
pmaxsw
xchg
jne
jecxz
idiv
clc
outsb
push
xchg
cmp
adc
inc
jae
out
out
adc
mov
mulb
xlat
xchg
jbe
push
test
dec
in
adc
sbb
pop
cmp
stos
loopne
cmp
pop
pop
pop
adc
add
jae
fcoml
cmp
xor
jg
and
sub
sub
in
imul
adc
adcl
daa
xor
shr
ja
leave
mov
cmpsb
dec
sub
pop
insb
clc
mov
pop
xor
pop
dec
movsl
add
fstpt
pop
daa
out
jae
xchg
mov
cmp
fwait
loopne
cwtd
add
push
subl
push
daa
ss
loopne
es
shr
jg
push
call
mov
jg
shl
mov
lds
push
xlat
in
and
lds
mov
imul
frstor
dec
inc
std
stos
out
in
in
mov
xlat
push
loopne
in
pop
movsl
roll
adc
int
jo
inc
icebp
mov
pushf
pop
xchg
leave
dec
pusha
cld
lret
mov
pop
ret
sarl
cmc
add
adc
arpl
push
mov
mov
xchg
lea
pushf
inc
or
cs
or
je
jae
mov
scas
test
lret
cwtl
dec
xchg
lods
rcll
adc
cmpsb
loop
daa
ficompl
das
pop
and
aam
xor
arpl
jp
pushf
jge
in
popf
das
xchg
xchg
movsb
inc
lods
add
jo
js
mov
xor
test
lret
cmp
pop
adc
push
bound
shlb
inc
and
sbb
adc
add
and
jge
stc
sub
and
shll
cmc
jge
cmpl
push
int3
icebp
mov
xlat
mov
es
hlt
fstp
mov
mov
xor
mov
or
sub
adc
mov
leave
daa
mov
gs
inc
push
stc
adc
inc
cmpsb
xor
jno
add
mov
or
inc
add
xor
or
test
push
mov
sub
adc
arpl
lcall
loope
push
or
or
mov
sub
rorb
add
cld
out
cmc
lods
outsb
in
addr16
sub
push
sub
jns
arpl
xor
mov
add
hlt
xor
push
jecxz
mov
mov
sub
bound
mov
and
pusha
push
jmp
repz
scas
dec
fstl
imul
hlt
leave
sbb
cmp
xchg
ljmp
cmp
or
dec
dec
mov
xchg
pop
xor
bound
scas
or
add
xor
jmp
dec
xor
push
jmp
xor
les
mov
fst
clc
test
jb
hlt
aam
fs
push
aad
mov
gs
repnz
lds
daa
inc
inc
mov
inc
jge
cmpsl
out
out
mov
sub
dec
enter
dec
hlt
addr16
inc
dec
cmpsl
push
orl
ficoms
out
adc
jg
nop
sub
sub
ja
sahf
cmp
mov
xchg
mov
hlt
sub
add
mov
icebp
fisubl
mov
sub
std
xchg
mov
cli
sbb
mov
push
fcoml
or
idivl
cmp
adc
mov
lds
cmp
and
loope
lods
sti
ja
repz
stc
lahf
jb
jg
inc
jp
sbb
jl
gs
imul
jnp
sbb
sbb
adc
sarl
outsl
stos
test
sbb
iret
mov
lahf
bound
addl
xor
insl
xor
inc
jg
ja
pop
out
mov
mov
shll
rorl
repnz
cmpl
jecxz
gs
je
repnz
cmp
push
out
je
movl
test
add
mov
jmp
lods
pop
sub
ror
test
jne
scas
test
ret
sbbl
lahf
or
icebp
cwtl
mov
xchg
push
mov
add
hlt
es
in
cmc
xchg
stc
pop
or
daa
divb
xchg
or
push
lds
xchg
mov
xchg
xchg
pushf
xor
inc
and
sti
shlb
jb
sti
dec
in
mov
sub
loop
pop
in
xchg
push
xor
xor
jmp
xchg
or
ja
jp
jbe
jnp
pop
xor
imul
inc
incb
ret
ret
js
mov
xlat
or
frstor
adc
push
mov
dec
lods
outsl
insl
iret
mov
bound
cltd
mov
insl
mov
call
mov
mov
fcoml
or
clc
push
add
inc
add
mov
inc
mov
push
leave
out
xor
or
mov
jecxz
cmp
mov
push
movups
ficoml
dec
fistpl
cmp
enter
sub
lea
js
rorb
mov
pop
inc
das
sbb
imul
jb
cs
ret
mov
roll
sbb
shll
inc
out
sti
out
xor
jecxz
xchg
push
inc
outsb
rcrl
sbb
adc
adc
cmpsb
addb
mov
lcall
dec
fdivrp
mov
xchg
js
in
cmovbe
loope
pop
and
mov
imul
nop
mov
xor
imul
aaa
neg
in
out
mov
push
fiadds
les
mov
fists
daa
jb
stos
shlb
and
sti
sub
lock
inc
xor
outsl
pop
rorl
ja
xchg
or
mov
mov
xchg
mov
dec
mov
outsl
adcb
push
shll
pop
xor
cmp
pop
dec
arpl
or
xchg
or
mov
aad
pop
cmc
sti
imul
push
pop
pop
mov
fcompl
add
mov
inc
stos
cmp
ja
mov
xor
in
stos
addb
mov
hlt
iret
in
hlt
cld
jne
in
or
cmp
lcall
stos
adc
adc
add
add
pop
ljmp
mov
ds
ss
cmp
jecxz
std
lea
push
or
sbbb
ret
test
ja
xchg
daa
inc
imul
dec
gs
jg
fdivrl
sub
xorb
jp
lret
adc
les
cmp
mov
jb
cmp
sub
add
mov
sbb
cs
shl
cmp
shrb
cmpsl
adc
repnz
add
mov
fnstcw
xlat
lods
jle
mov
push
sub
test
mov
mov
jno
xchg
mov
mov
cli
and
sub
pop
outsb
sub
movsb
jge
push
addr16
mov
imul
and
mov
xor
mov
je
jb
sbb
jno
inc
scas
push
jg
dec
aad
int3
cltd
sub
mov
scas
inc
fldenv
repz
inc
aas
cwtl
sub
das
push
insb
lods
inc
enter
lret
dec
mov
fistpll
add
cld
cwtl
jbe
lcall
dec
push
sub
imull
popa
xor
inc
loopne
shll
out
pop
cmp
xchg
add
or
xchg
inc
sub
push
xchg
jne
push
dec
pop
arpl
test
ja
add
sub
addb
popa
dec
lea
jne
push
mov
daa
outsl
mov
jp
sbb
out
call
xchg
add
pop
and
test
sbb
mov
sbb
jns
inc
inc
jecxz
aad
movsb
pop
insb
inc
push
xlat
cli
js
in
or
dec
push
adc
jecxz
repz
xor
xor
pop
cmp
jecxz
shrb
mov
out
fucom
jbe
fdivrs
pop
incb
xchg
adc
push
icebp
xchg
stos
gs
push
add
push
push
inc
out
into
mov
ds
rcr
adc
mov
pop
mov
jecxz
shlb
cli
mov
sbb
jge
into
add
pop
jmp
outsb
jb
cltd
push
and
in
andb
pop
cmp
sub
jns
jecxz
cld
es
jns
xchg
nop
cmp
ljmp
or
outsb
outsb
mov
ds
xchg
xchg
dec
mov
xor
nop
and
push
pop
outsl
pop
sahf
addr16
mov
pop
fidivrl
fistps
and
data16
fnstsw
in
adc
and
xor
cmp
in
loope
adc
push
insl
in
ds
jnp
fisubl
xor
pop
fwait
into
and
sbb
pop
jb
pop
and
xlat
or
rorl
sub
call
fbld
movsb
cli
mov
mov
pushf
jne
cmpsl
pop
mov
xchg
rcrl
lret
and
mov
lds
adc
ja
or
adc
push
mov
pop
mov
mov
push
inc
sti
out
hlt
outsl
neg
sbb
inc
clc
add
cltd
mov
jnp
inc
push
loopne
loopne
xor
std
cltd
push
or
mov
loopne
fadds
inc
cmp
cld
pop
je
roll
dec
rclb
enter
clc
adc
loop
fadds
push
fbld
adc
sub
bound
adc
lds
sub
pusha
xor
push
lock
out
cmp
cmp
pusha
rorl
adc
imul
leave
jecxz
aad
jl
popl
in
xchg
push
je
dec
sub
dec
out
pop
cmp
sti
fcoml
scas
repnz
fs
lods
pop
pop
push
ret
arpl
loope
adc
adc
loope
aad
scas
push
loopne
mov
hlt
out
cmp
pop
jnp
cwtl
shll
fld
pop
mov
incl
jo
addr16
or
sub
sub
sbb
pop
add
mov
lahf
enter
or
addr16
mov
aaa
xchg
inc
jmp
addr16
or
sub
jo
mov
arpl
cld
mov
mov
js
pop
mov
fidivl
cmp
and
xor
ja
add
pop
dec
and
pop
sbb
cmp
nop
jp
or
or
loope
lods
and
stos
test
inc
xchg
mov
xor
sbb
test
pop
ret
xchg
aas
xor
filds
adc
in
fwait
scas
dec
jle
xor
mov
jne
insl
scas
cmp
fucompp
xchg
faddl
cltd
xlat
jne
push
cld
inc
stos
js
cmp
or
cmpsb
and
push
xlat
xor
out
xor
and
pusha
das
insl
cmp
rcrl
sbb
call
aam
popf
adc
lahf
aad
pop
cmp
xor
into
fisttpll
inc
push
push
push
test
xor
insb
or
rolb
lock
pop
ud1
push
xor
mov
cltd
lret
jo
pop
mov
scas
sbbl
inc
orl
jnp
push
jg
dec
mov
adc
dec
imul
mov
cmpsl
xor
fnstenv
orb
xor
push
add
nop
pusha
pop
sbb
xchg
mov
inc
out
xor
jnp
test
loop
lods
inc
dec
pop
xor
popa
ss
loope
dec
lret
and
xor
lock
xor
ljmp
jnp
in
sbb
mov
xor
enter
push
test
xchg
aam
mov
and
pop
arpl
fisubrl
movsl
rcrb
sahf
and
pop
add
fdivrl
and
andb
andb
in
dec
adc
rol
sbb
lods
fidivrl
fstps
call
dec
and
bound
fsubr
or
and
rorb
clc
out
int
daa
add
inc
pushf
jns
adc
pop
fisubrl
and
fcmovne
cmp
movsl
xor
and
mov
inc
mov
dec
push
insl
scas
dec
mov
lcall
pop
push
or
dec
out
dec
into
lahf
mov
test
dec
call
out
fcmovb
xchg
cmp
jns
add
testb
xchg
frstor
push
dec
sub
outsl
cmc
mov
fadds
xor
pop
xlat
push
jno
jo
mov
mov
cltd
scas
push
ret
inc
orl
jmp
test
data16
fildl
sbbl
xor
cld
push
les
sub
sbb
mov
adc
jg
sub
jmp
ret
lret
cli
das
sahf
and
loope
rcr
jecxz
outsb
popf
add
loope
sbb
mov
dec
jmp
cmp
popa
adc
rcrl
les
xlat
aas
pop
stos
aas
fs
popf
cmp
or
push
xchg
mov
daa
sub
xchg
aas
jns
pop
mov
dec
dec
inc
fdivl
and
sbb
test
movsb
cmp
jo
aam
andb
gs
dec
add
lods
cltd
add
jmp
sub
sub
add
mov
aam
pusha
inc
push
cmp
rcll
rcl
inc
xor
inc
mov
add
cmove
mov
out
jle
push
pop
ret
add
cmpsl
dec
int3
cmp
out
add
into
les
sub
adc
push
mov
add
dec
xor
mov
les
push
and
cmpsl
add
pop
adc
sbb
test
mov
movsb
test
cmpsl
xchg
imul
sub
pop
sti
loope
jmp
std
pushf
sbb
sar
test
add
xchg
mov
push
dec
lcall
and
sub
popa
xadd
xor
mov
mov
push
push
and
or
test
in
push
push
cmp
lods
pop
in
popa
popa
fimull
scas
orb
mov
push
xchg
add
mov
mov
dec
test
movsb
inc
rclb
push
out
subl
jo
jge
mov
shll
test
cmp
es
fisubs
jns,pn
ret
adcb
lock
or
mov
repnz
vprotd
bnd
pop
outsl
aaa
lret
xchg
mov
addr16
inc
mov
dec
push
in
push
sbb
inc
aaa
addr16
mov
mov
add
mov
ret
add
xor
mov
cwtl
dec
sub
ds
xor
cwtl
pop
push
inc
cld
outsb
ja
jge
xor
inc
les
mov
pop
enter
and
cmp
jne
mov
aaa
iret
call
out
xchg
inc
int3
jb
es
in
test
pop
sti
jno
rcl
jl
xchg
sti
dec
in
mov
daa
sub
in
jle
mov
popf
cmp
xor
adc
xchg
mov
dec
xor
pop
pusha
movsb
ja,pt
sub
xchg
sbb
jno
mov
sub
insb
inc
push
sbb
fs
iret
and
sbb
cmp
add
adc
leave
fldcw
jg
mov
mov
insl
repz
int
jb
outsb
mov
mov
bound
push
arpl
add
inc
and
mov
jbe
or
imul
xchg
imul
not
cmc
cmp
push
imul
icebp
jmp
cmp
nop
jo
mov
pusha
or
mov
movsl
test
push
adc
push
imul
add
sub
sub
aaa
cmp
adc
call
js
shl
cmp
movsl
sbb
sub
and
mov
out
popa
dec
xchg
ficoms
das
sbb
pop
push
fwait
loope
mov
ds
sbbl
insb
push
jg
jo
mov
adc
cmp
jle
inc
loop
sub
dec
lock
pop
loop
pop
mov
mov
sti
pop
xchg
shll
gs
test
testb
cmpsb
mov
loope
push
fstps
ret
sbbl
jge
inc
lcall
loopne
ljmp
jge
cmp
roll
xlat
and
mov
fsubrs
mov
cmp
add
mov
test
lods
jecxz
push
jg
gs
add
sarl
xor
loope
inc
xor
pop
in
dec
sbb
xchg
iret
mov
int3
xor
pop
divb
in
lcall
mov
mov
and
cmp
fdivl
test
sbb
loopne
add
mulb
mov
push
rolb
mov
pop
and
sbb
mov
in
les
jo
add
add
cmpsb
nop
lods
out
in
mov
mov
inc
es
push
sbb
push
pushf
push
jmp
andl
push
mov
addr16
or
sbb
fcoml
jl
pop
jecxz
mov
enter
popf
movsl
lahf
ret
lahf
gs
jb
hlt
shr
xchg
xor
xchg
pop
add
jnp
and
ds
sarb
in
xchg
xchg
jp
push
out
add
jno
cmp
ret
cmp
aas
ret
cmp
inc
test
cmp
hlt
xchg
and
rclb
inc
push
pop
xlat
or
sti
dec
mov
xchg
subl
shlb
xlat
push
xor
pop
in
hlt
add
adc
xchg
fisttpll
js
shrb
jl
push
movsb
or
pop
lcall
popf
jne
pop
jmp
pop
or
jns
xor
sub
jp
mov
lods
cmp
fmuls
sti
push
clc
mov
push
out
rcll
movsb
fnstcw
fnstsw
pushf
dec
sub
pop
dec
cmp
xor
mov
mov
pushf
pop
mov
imul
mov
adc
cmpsb
repz
push
enter
nop
jecxz
sub
pop
fs
bound
push
lret
cmp
popa
xor
int3
notb
shlb
xorb
xchg
mov
add
idiv
push
mov
xchg
dec
sti
jecxz
fwait
out
pop
scas
rcll
aam
jecxz
jl
in
movb
in
xor
call
xchg
pop
push
int
sub
adc
incb
push
scas
stc
mov
popa
inc
jmp
adc
repz
fists
iret
add
lock
or
clc
pop
adc
sbb
lahf
dec
hlt
leave
push
cmp
and
in
and
fsubrs
push
aaa
in
in
mov
mov
std
dec
scas
cmp
sub
add
aas
in
loope
pusha
xor
rcrl
push
mov
xchg
int
sbb
and
jnp
movsb
dec
push
leave
cmp
dec
aas
jns
ja
dec
jns
mov
inc
ja
adc
xchg
or
jmp
stos
inc
dec
mov
xchg
push
mov
ja
mov
or
ret
push
dec
lahf
dec
lock
jae
mov
addr16
or
int3
lea
repnz
cmp
dec
push
lock
push
mov
test
insb
cmovb
int3
fbld
not
popa
pushf
push
mov
sub
cmpsb
outsb
outsb
add
lret
adc
push
icebp
fwait
cwtl
lret
pop
stos
cmp
pop
sub
lock
scas
out
dec
fdivr
or
mov
addb
cwtl
test
jo
call
pushl
dec
cmpsl
hlt
out
xor
inc
loop
roll
loop
ret
pop
pop
xchg
inc
cmp
inc
or
aam
rorb
cltd
fiadds
adc
daa
sahf
jecxz
iret
rol
lcall
mov
adc
fwait
sbb
mov
inc
out
aas
jo
xor
xor
scas
sub
nop
cmp
outsb
rol
push
dec
jge
fimull
in
cmc
loopne
mov
push
lds
das
inc
jmp
scas
xchg
mov
push
aad
pop
fisubl
movsb
negl
jmp
pop
data16
stos
cmp
push
mov
jno
icebp
sub
xor
jo
and
ss
jp
push
jmp
cld
idivl
push
cmc
leave
adcb
and
xchg
ret
mov
loopne
xor
mov
flds
test
mov
pop
loopne
fwait
movsb
addr16
ds
adc
sub
addr16
inc
lret
mov
inc
push
outsl
mov
dec
inc
cmp
fwait
and
je
mov
adc
xor
pop
cmp
xchg
repz
mov
insb
xor
inc
sti
mov
int
xchg
shl
addr16
sbb
subl
jg
aam
xlat
cmpsl
ljmp
stos
popf
dec
popf
cmp
out
push
xchg
std
ja
scas
jo
rorb
popf
xchg
jbe
inc
dec
mov
cmpsl
mov
sbb
stos
repnz
jns
xor
sub
cmp
sub
pop
add
dec
jbe
mov
insl
dec
push
aas
xchg
xchg
mov
xor
lea
push
sub
clc
into
mov
inc
and
les
sub
mov
mov
stos
fstpt
jl
aad
imul
mov
mov
aas
adc
xchg
xorl
mov
mov
xor
mov
mov
ljmp
bound
repnz
enter
and
stos
or
ja
test
fisubrl
xchg
mov
and
icebp
xchg
out
add
add
scas
pop
mov
test
out
xor
clc
and
jne
xor
mov
and
aad
sbb
std
and
jo
test
and
xchg
dec
mov
dec
sub
jb
pop
stc
jns
cmp
mov
pop
int3
rcll
xchg
lods
nop
and
jae
int3
flds
dec
mov
out
imul
mov
cwtl
cmp
pop
xchg
cmp
xor
sahf
cli
fsubl
mov
insb
mov
xchg
scas
les
xchg
dec
or
ss
and
push
or
das
divb
icebp
les
push
push
jnp
mov
das
addl
movl
xchg
pop
or
jnp
cmp
iret
pop
rcrb
mov
adc
cmp
nop
jnp
cmp
and
sub
and
xor
jmp
test
std
pop
pop
push
mov
into
sub
movsl
addr16
bound
pop
pop
pop
jno
push
ret
push
shr
mov
in
inc
subl
jl
lods
ss
jge
inc
mov
icebp
pusha
cwtl
fdivs
call
cld
push
lcall
push
push
mov
in
outsl
and
inc
pop
mov
jp
push
jecxz
fmull
add
sub
enter
fdivrs
out
jg
mov
fcmovne
or
lock
gs
js
ret
push
ret
idiv
and
scas
dec
lock
and
lahf
es
pusha
fnstsw
ds
xor
addr16
jmp
stos
dec
cmpsb
mov
xchg
bound
dec
push
sbb
roll
sbb
pop
xchg
push
or
sub
mov
lods
dec
add
xor
stos
or
mov
insl
mov
inc
mov
dec
xchg
loopne
dec
push
xlat
test
aad
jbe
lds
cmpsl
or
movsw
cli
mov
mov
or
and
call
mov
loopne
xchg
cmp
arpl
scas
outsb
imul
mov
sub
inc
fimull
and
jmp
lods
inc
leave
xorb
stos
leave
je
enter
pop
sahf
jae
scas
inc
push
ret
std
int3
lret
and
dec
push
lret
loop
push
es
lock
cmp
andl
aaa
ret
xchg
lock
mov
mov
dec
mov
addr16
stos
out
push
dec
sub
iret
push
dec
popf
subl
jle
jle
fcom
inc
xchg
jle
popa
repnz
fldl
mov
xor
pop
arpl
leave
insl
inc
jge
cmp
cmp
push
mov
jp
adcl
imul
mov
filds
ret
xor
inc
cmpsb
in
aas
sub
inc
mov
stc
mov
stos
mov
test
or
call
in
les
aad
add
fiadds
lahf
add
or
sub
adc
xorl
movsb
fldl
xor
push
dec
pop
fildll
push
or
cmp
jb
pop
gs
inc
insl
mov
cwtl
mov
cmp
mov
test
lea
cmp
jo
outsl
mov
imul
mov
add
pusha
std
test
movb
inc
test
shl
in
xorb
sub
add
mov
fisttps
cwtl
dec
jae
add
push
decb
mov
repz
inc
cmp
imul
fs
in
imul
pop
cmp
test
out
inc
repnz
push
loopne
pop
cli
addr16
je
stos
pop
iret
pop
ds
inc
xchg
data16
add
pop
clc
jns
mov
loopne
pusha
int
pop
push
push
test
addl
out
push
frstor
sbb
mov
out
push
test
or
jle
ljmp
fldt
jae
mov
cmpl
push
repnz
jne
shl
pop
lods
notl
test
push
bound
lods
test
sub
dec
pushf
push
mov
cmpsb
push
sub
dec
jp
or
cltd
jno
stos
adc
fsubr
xchg
lea
sub
mov
in
andl
imulb
movsb
sbb
dec
cmpsl
loopne
in
pop
push
pop
and
std
push
enter
movsl
cld
or
andl
adc
jle
ja
mov
mov
mov
mov
imul
jo
movsl
idivb
dec
je
dec
ror
mov
push
int
or
mov
bnd
sbb
xchg
mov
mov
jne
pop
dec
mov
mov
adc
ret
inc
sbb
and
out
stc
mov
inc
jae
xor
xchg
xchg
add
out
fistl
jg
andb
mov
fsubs
mov
pop
jecxz
sub
test
add
cmp
xlat
cmc
adc
or
fnstsw
repz
pop
lret
xchg
sub
sbb
push
xlat
and
xchg
sub
mov
sub
mov
xor
cmp
mov
call
add
inc
stos
fstps
jg
cmp
lret
jg
shlb
xor
mov
pop
loop
jp
mov
loop
xchg
ret
dec
adc
iret
imul
add
shrb
or
repnz
mov
outsb
ret
dec
ja
bnd
mov
xor
adc
sahf
jg
testl
xchg
and
push
inc
iret
repz
fists
aam
fldl
add
test
jne
fisubl
pop
push
dec
or
hlt
xor
jb
xor
pusha
xchg
inc
les
adc
push
or
adc
fdivrl
movsl
in
aaa
inc
jp
add
test
mov
mov
jbe
notl
pop
jge
push
inc
and
test
shrb
mov
rcr
pusha
adc
xchg
repnz
sarl
roll
or
dec
inc
in
pop
popf
sbb
mov
push
xchg
sub
outsb
sbb
and
in
hlt
jle
push
out
jns
ret
push
pop
or
lahf
in
insl
pop
xor
test
mov
loop
add
stos
fsts
xor
sub
adc
bnd
mov
in
add
movsl
xor
mov
imul
jnp
push
dec
or
add
stc
jns
test
jecxz
adc
pop
clc
push
adc
sub
and
push
and
stc
jns
jp
inc
in
inc
xor
stos
cmc
cmp
lret
lods
or
sub
and
addr16
xor
lret
lds
sbb
fnsave
pusha
dec
mov
roll
push
xchg
mov
jp
mov
stc
xor
add
lds
or
sub
jle
xor
dec
out
cmpsb
notb
mov
mov
out
ficompl
mov
xchg
xor
imul
mov
adc
or
jae
adc
outsl
nop
mov
jnp
inc
and
jno
mov
hlt
xchg
xor
sbb
jbe
sbb
addr16
sbb
lock
cmc
sarl
in
jecxz
jge
adc
incl
jbe
jo
sbb
sbb
mov
test
out
std
dec
or
pop
rolb
scas
mov
fwait
add
inc
jbe
stos
test
inc
in
dec
cmp
imul
inc
mov
or
xchg
xor
hlt
push
inc
pop
add
push
dec
dec
xor
adc
jb
lahf
xlat
xchg
lcall
addr16
add
aas
call
shll
xor
sbb
movsb
test
and
ss
pop
add
cld
je
jbe
sar
clc
mov
jb
cmp
push
les
push
fwait
lret
in
push
xchg
sub
insl
mov
mov
imul
movl
dec
adc
push
and
inc
stc
push
sbb
mov
mov
dec
push
pop
add
mov
insl
push
movsl
jbe
stc
push
in
aaa
pusha
mov
je
std
sub
pushf
cltd
xlat
jmp
dec
outsb
add
repnz
por
sbbl
mov
or
je
push
pop
push
fdivrs
movsb
das
in
push
les
testb
xor
add
cld
cmpsb
lahf
ret
pop
out
sub
data16
popf
push
jnp
stos
pop
repz
dec
cwtl
sbb
js
xchg
stos
jno
rolb
das
repz
jnp
std
xor
popf
add
icebp
aas
dec
mov
jmp
leave
ds
cwtl
pop
std
pushf
pop
push
mov
jle
sbb
ss
jg
adc
mov
cmpsb
cwtl
pusha
cwtl
test
inc
inc
pop
or
aam
repz
sar
sti
or
les
movl
or
hlt
addr16
dec
or
in
scas
es
dec
push
ret
push
test
movsl
insl
into
aas
cmpsb
in
sar
mov
divl
daa
mov
stc
push
mov
pop
test
jnp
ss
mov
cmc
jne
cmpsb
ret
inc
pop
xlat
cmp
mov
mov
int3
enter
mov
rcll
push
mov
lret
add
mov
xor
add
inc
inc
xor
mov
scas
pop
push
jmp
out
adc
add
push
cmpsb
fiaddl
mov
popf
pop
jecxz
loopne
mov
scas
sub
divb
jns
ss
pop
mov
je
lds
insl
test
pop
fcoms
call
pop
dec
adc
mov
in
jno
out
int
outsl
sub
inc
jbe
nop
loope
pop
dec
add
mov
push
pop
or
movsb
mov
out
mov
lret
pushf
jno
js
test
sub
jp
push
cwtl
inc
mov
sbb
sbb
sti
jno
mov
jle
filds
add
xlat
mov
jle
xor
pop
incl
loop
sub
adc
add
int
push
shlb
adc
mov
pop
mov
fdivrs
int
and
sub
xchg
rcl
mov
pop
sti
xor
fstpt
dec
cmp
xchg
call
xor
bound
ja
jg
mov
inc
es
dec
jg
xlat
aas
loopne
push
sub
cmp
outsb
js
jb
add
push
lods
sarl
mov
fsubrs
lahf
ficompl
nop
pushfw
cmp
sarb
popa
sub
roll
loope
insb
xchg
mov
insl
mov
push
lds
add
xchg
das
insl
fsubl
inc
sti
aad
xor
cmpsl
sarb
mov
lods
fisubrl
ljmp
push
xchg
aas
addr16
xchg
negb
sub
mov
dec
push
pop
or
adc
hlt
int
into
adc
ds
xor
adc
or
mov
in
mov
flds
push
rcll
leave
cmp
or
xor
pop
cmp
xor
aaa
pop
inc
sub
lea
stos
adc
sub
lret
ja
pop
loop
lcall
and
movsl
add
out
fsubs
enter
or
fmul
add
sub
pushf
or
xorl
inc
dec
cmp
cltd
shl
subl
xchg
fs
adc
movsl
add
sahf
pop
and
scas
fdivr
lock
push
mov
outsb
mov
pusha
or
mov
push
je
movw
dec
sub
packssdw
mov
mov
mov
lret
xchg
aam
cmp
cmpsl
popa
pop
fs
mov
std
and
mov
jno
dec
lea
jb
mov
jns
add
dec
iret
hlt
fcmovnbe
cmp
in
mov
or
fbstp
bound
sub
test
and
out
add
jp
push
sub
xchg
or
cmp
sub
cmp
es
enter
inc
mov
lret
into
jno
cli
push
push
mov
sub
sub
mov
adc
cmc
fmull
adc
pop
sub
or
adc
jge
outsb
stos
mov
mov
push
scas
pop
ljmp
int3
iret
icebp
adc
or
sub
or
pushf
ds
xor
sub
lock
bsr
or
adc
lea
sbb
or
and
mov
dec
cs
faddl
mov
pop
fidivrs
xchg
push
testb
mov
mov
add
sbb
push
and
rol
xchg
mov
fisubs
jecxz
pushf
mulb
movsb
and
and
jne
and
lock
or
and
out
xchg
xor
xchg
cmp
out
push
mov
pop
cli
pop
lcall
and
dec
into
jo
fdivr
mov
es
xor
stc
pop
mov
mov
add
dec
xor
adc
jmp
pop
xor
mov
lret
loop
out
outsl
cmp
pop
mov
ret
aad
inc
jmp
cli
sub
jp
sbb
nop
mov
add
and
cmp
sbb
pop
mov
ja
mov
daa
out
out
xlat
xor
mov
lahf
test
sub
ja
inc
out
shrb
lret
cmp
cmp
or
int
push
mov
mov
mov
jl
sbb
mov
fs
ljmp
mov
lret
mov
inc
and
cs
daa
mov
sarl
xchg
adc
xor
jecxz
notb
push
jbe
divl
aaa
sbb
dec
pop
stos
sub
mov
stc
sbb
loop
push
mov
imul
je
aam
jo
aaa
add
cmp
mov
adc
bound
test
xchg
popf
ljmp
ret
fdivl
jnp
movntps
push
xlat
pop
loope
adc
and
pmovmskb
jo
jmp
add
sub
mov
and
ret
mov
fwait
push
leave
fsubl
call
call
jl
xchg
push
pop
imul
test
adc
imul
xlat
std
scas
pop
mov
or
push
or
insb
data16
fcompl
mov
add
pop
cmp
enter
push
xchg
stc
and
mov
jb
cmp
out
adc
push
sub
pop
call
or
je
jmp
push
fistpll
mov
mov
arpl
sti
incb
inc
jae
mov
ljmp
xchg
xchg
repnz
sub
mov
dec
lahf
xchg
shll
fwait
pop
movsl
mov
xchg
add
push
inc
call
sub
bound
xchg
xchg
mov
mov
xchg
lods
and
rorl
daa
pop
inc
jmp
popa
andb
imul
sbb
rorl
inc
and
std
adc
aam
pop
or
jle
cmpb
subb
sub
sbb
popa
cmp
out
mov
sub
and
andb
sti
fistpll
aaa
mov
cmc
fmuls
lcall
std
dec
int3
mov
mov
xchg
jne
jb
das
fs
cmpsb
adc
and
mov
xchg
cmpb
or
mov
and
mov
inc
mov
and
and
ret
mov
and
and
jnp
ja
enter
shl
fmuls
scas
cli
add
ss
rclb
movsl
jge
test
sbb
inc
sti
cmpb
fsubs
mov
shrb
push
mov
gs
sti
mov
incb
xor
push
push
cmpsb
cmpsb
sub
std
mov
sarl
les
mov
pop
idivl
push
and
popf
hlt
and
aaa
xchg
cmpsb
arpl
mov
xchg
pop
jo
bound
jle
ja
xor
call
pop
adc
lahf
and
ss
sub
mov
cmc
jno
rclb
cmp
push
pop
movsb
outsl
rcrl
leave
fs
pop
and
in
push
mov
test
addl
mov
jno
stos
outsl
mov
test
das
jg
sub
jge
and
jg
cld
mov
push
adc
xor
sub
mov
loopne
mov
out
cmp
jnp
nop
shll
iret
jne
xor
rclb
push
sbb
add
mov
fildll
xor
fxch
out
test
scas
aad
outsb
sarb
xor
rcl
lods
inc
je
scas
jg
jo
cmpsl
adc
hlt
lret
sub
cmp
lcall
mov
mov
je
enter
bound
mov
mov
mov
out
bound
add
in
push
push
fcmovbe
outsl
mov
movsl
inc
test
cld
fsubrs
pop
repnz
adc
and
sti
mov
repz
jle
insb
xchg
push
daa
sub
mov
repnz
test
push
in
xchg
scas
sbb
mov
out
in
lds
jge
xchg
popa
xchg
cwtl
add
fsubs
jmp
subb
in
jg
or
outsb
fbstp
mov
pop
je
leave
lods
dec
lret
out
cmpsb
push
roll
aam
xchg
push
jle
xchg
loop
xor
adc
xchg
jb
xchg
pop
cwtl
movsb
lods
sbb
sub
leave
add
jo
xrelease
scas
pop
pushf
jmp
jl
xchg
je
out
std
inc
sbb
add
jo
addl
xor
lret
lcall
movsb
xchg
xor
leave
lret
mov
sahf
cmpsb
stos
push
mov
lods
pop
mov
xchg
mov
test
push
jge
cmp
cmp
fadd
mov
arpl
and
cmp
jmp
xor
cmpsb
repz
test
sub
sub
sarb
jbe
or
mov
sub
subb
scas
and
mov
sub
xchg
mov
neg
mov
inc
push
shll
push
or
sub
pop
outsb
and
mov
cmp
mov
cld
jns
fcmove
pop
dec
add
fmul
jge
inc
in
into
push
xchg
xchg
mov
inc
fwait
xchg
lea
test
inc
daa
in
jbe
lahf
inc
adc
je
dec
inc
test
mov
dec
mov
out
lock
into
pop
xorps
and
jp
push
push
push
pop
jb
and
ficoms
fisttpl
mov
xlat
out
movsb
into
idivb
test
faddl
shr
adc
icebp
push
sub
aaa
lock
ljmp
xchg
repnz
push
pop
dec
push
adc
scas
jae
xchg
adcl
icebp
xor
popa
cmp
inc
sbb
sub
dec
mov
leave
fisubrl
mov
push
ss
loopne
popf
or
std
cmp
in
sbb
lret
adc
mov
addb
aad
fs
push
push
ss
mov
cmpsb
jbe
xor
adc
add
loop
movsl
gs
push
ja
xchg
adc
adc
fbstp
shrb
mov
jle
sbb
cltd
mov
fadds
ss
clc
les
jp
push
js
fisubl
jge
dec
pushf
xchg
iret
push
ss
pop
sbb
cld
adc
imul
out
xchg
mov
mov
push
outsl
mov
mov
testb
sub
cmp
js
dec
lahf
sub
mov
mov
mov
test
das
scas
shll
inc
sbb
sarl
cmpsl
and
lahf
mov
insb
negl
mov
arpl
or
dec
or
into
dec
mov
mov
and
inc
adc
cmc
mov
xor
fmull
pmuludq
clc
pushf
call
mov
cld
adc
xlat
xor
repz
orb
jmp
test
data16
mov
xor
js
adc
mov
xchg
push
fidivl
lods
cmp
add
scas
push
stos
in
iret
pop
jbe
stos
cltd
xchg
pop
push
pop
cwtl
mov
out
xlat
cmpsl
xor
push
ljmp
sarb
cmp
lock
mov
dec
lds
cmp
lods
pop
sub
and
xlat
int
pushf
xor
xchg
repnz
repnz
ja
xor
xor
sbb
sub
das
into
lods
sti
jl
sub
std
and
pop
push
jge
scas
inc
xor
and
pop
sub
jmp
add
lock
xor
push
idiv
mov
xchg
das
mov
js
pop
cltd
daa
mov
adc
icebp
pop
mov
mov
scas
or
jb
or
fisubl
fdivr
xor
xchg
pop
frstor
test
scas
mov
xchg
cltd
xor
pop
fsubrs
sbb
ds
push
movsl
mov
push
mov
fadds
outsb
xor
push
stos
mov
testl
shrl
mov
int3
rolb
sub
popf
jle
xor
ss
or
lcall
pop
nop
jae
lock
dec
js
icebp
jmp
jle
scas
add
in
adc
sbb
or
out
shrl
hlt
lds
fiadds
cmp
and
inc
cltd
pop
sbb
loopne
cmp
addr16
fwait
loop
inc
cmp
lea
pop
cmpsb
mov
ljmp
lds
xchg
or
mov
aaa
icebp
and
inc
push
sub
and
lods
push
jecxz
jg
sub
stos
pop
mov
add
mov
xor
xor
aad
jl
inc
inc
int
pushf
fsts
sub
add
xor
orl
sub
mov
and
pop
out
push
cmp
fldt
xchg
popf
into
fdivr
test
mov
in
sbb
sbb
mov
xlat
jns
aam
and
adcb
mov
test
mov
jmp
fisubrs
mov
movsl
out
xchg
test
in
dec
sbb
jmp
jno
cs
mov
clc
pop
stos
jge
lods
mov
cli
insb
inc
fyl2x
aad
in
jecxz
std
popf
mov
daa
jecxz
stc
xor
fwait
and
sub
in
add
xor
cld
fdivl
inc
sbbb
mov
push
dec
and
decb
mov
mov
push
pop
decl
iret
and
stos
ss
icebp
push
ss
mov
int3
xor
pop
pop
push
mov
cwtl
xor
aas
fwait
inc
sub
jecxz
push
mov
leave
popa
dec
adc
cwtl
cmp
mov
xchg
xchg
scas
adc
or
movsb
push
xor
leave
inc
push
mov
jl
inc
add
cli
sub
xchg
sbb
fs
jae
subb
and
in
bound
mov
sub
xchg
and
popf
movsl
loop
jb
loopne
cmp
lds
jge
dec
dec
sbb
xor
cmp
jns
dec
pushf
rcll
xchg
push
xchg
or
loope
arpl
nop
mov
shlb
loope
insl
pop
mov
shlb
mov
sahf
and
lods
cmp
rorl
jp
jb
ret
inc
mov
sbb
icebp
xchg
xchg
lods
dec
add
cmp
inc
mov
je
mov
aas
in
pop
adc
insl
cmp
mov
cli
inc
add
nop
mov
cmpsb
mov
xchg
je
pop
push
pusha
das
lret
mov
aas
mov
fistps
notb
arpl
xchg
and
pop
mov
push
mov
push
cmp
mov
ret
shll
jns
test
jns
jl
shrb
ret
sub
scas
dec
add
push
aas
xchg
ljmp
pop
outsl
push
push
or
mov
insl
jle
pop
mov
ss
ret
daa
fs
jns
mov
sti
cmp
mov
push
cmp
pop
sbb
mov
push
roll
push
sahf
inc
push
adcb
mov
imul
adc
dec
in
nop
lods
repz
add
inc
dec
test
ds
dec
dec
ret
mov
inc
cmp
pop
fstpt
shrb
sbb
cmp
lock
pusha
xchg
and
or
inc
test
inc
push
test
pop
mov
sti
push
std
test
cli
wbinvd
ljmp
push
mov
mov
mov
add
addr16
xchg
cmp
ret
mov
mov
push
adc
mov
daa
das
lods
das
and
pop
xchg
mov
bound
adc
add
mov
adc
dec
vdivpd
adc
mov
je
sub
inc
fs
sbbb
ret
fisubrs
es
cmp
sbb
pop
and
add
and
inc
fldenv
dec
add
and
cltd
sbb
pushf
popf
icebp
filds
inc
adc
sub
repz
add
inc
pusha
jp
sub
jmp
cli
dec
lods
cmpsb
icebp
xor
nop
inc
mov
push
mov
pop
pop
lock
adc
mov
mov
inc
xchg
icebp
out
sub
add
les
jmp
dec
jmp
dec
mov
mov
jae
add
mov
jl
sti
adcb
pushf
lahf
or
sub
sbb
dec
push
mov
lock
orb
jp
pop
dec
mov
sahf
sbb
add
mov
jle
shrb
jmp
mull
mov
xchg
xchg
inc
xchg
loopne
xchg
out
divb
xchg
push
je
pop
jg
cltd
repz
inc
mov
push
stc
aaa
clc
push
sbbl
push
loop
outsb
inc
ret
insb
cltd
adc
xchg
test
out
and
popa
in
insb
lods
pop
inc
repz
inc
shrb
movl
sti
pushf
dec
sarl
add
lods
jmp
outsb
or
adc
pop
sub
add
insb
push
ljmp
mov
jmp
dec
cmpsb
jo
fwait
out
lock
out
mov
outsb
mov
cmp
jae
pop
outsb
iret
cld
sub
arpl
and
sub
out
fcmovnbe
fisubrs
adc
adc
inc
cmp
cld
popf
mov
jo
push
andb
ja
push
insl
shll
cmp
mov
push
gs
enter
jl
xor
mov
aas
jge
int
loope
cmp
ljmp
cltd
jae
cli
jge
pop
incl
inc
shl
push
jl
xchg
pop
fiadds
xor
pop
fwait
sub
push
adcb
ret
jne
add
push
adc
mov
jnp
aad
and
mov
cwtl
add
inc
inc
dec
jl
test
dec
xorb
insb
pop
cs
and
push
push
ret
insl
inc
dec
push
or
sub
je
and
mov
popa
pop
pop
testb
mov
push
movsl
xchg
mov
popa
jns
imul
addr16
lods
sbb
out
mov
subb
stos
add
stos
stc
xor
pushf
sub
push
jns
ret
xchg
sub
mov
pushf
sbb
and
sbb
sbb
and
cmpsl
mov
dec
pushf
fnsave
pop
mov
or
or
push
pop
scas
fnstsw
into
sub
iret
icebp
pop
sbb
or
sub
cltd
inc
movl
imul
xchg
pop
stos
mov
push
adc
jge
inc
and
dec
les
pop
push
int
jns
sub
cmp
adc
sub
call
add
imul
ljmp
mov
mov
imul
ds
loope
xlat
and
sbb
push
lret
sub
inc
adc
cs
or
movsb
add
cmpsb
push
out
dec
adc
loopne
movsb
mov
push
mov
cwtl
icebp
lret
xchg
pop
loop
sahf
mov
jle
pusha
mov
repnz
test
or
pop
push
jle
or
pop
cs
test
xor
jae
mov
rcll
add
jnp
cmp
xchg
cmp
inc
mov
jg
outsl
push
nop
cmp
jge
sar
jecxz
lds
faddl
pop
movl
fnstcw
incl
ret
push
sahf
sbb
xor
fs
sub
xor
call
xchg
ret
xchg
repnz
lods
mov
or
loopne
mov
add
stc
scas
mov
out
sub
mov
push
adc
fisubs
mov
pop
jb
stc
jns
outsb
outsb
jns
push
jmp
mov
xchg
cld
orb
inc
adc
scas
fstl
sub
imul
mov
jbe
add
sbb
popa
ret
cmp
sarb
jp
in
adc
inc
shl
imul
lods
sub
push
mov
shl
push
lahf
mov
jne
bound
popa
cmp
sar
aaa
cmpsb
div
mov
mov
sbb
push
xchg
pusha
dec
std
int3
pop
fs
sub
or
mov
dec
test
daa
dec
jl
or
insl
jle
lods
pushl
shrl
lock
in
mov
cmp
mov
fidivl
push
jno
orl
stos
dec
stc
push
mov
mov
lahf
daa
aas
dec
push
daa
mov
cmpsl
jg
xchg
fst
xor
call
lods
cmp
sub
in
aaa
xlat
mov
mov
das
dec
push
xor
mov
push
mov
fadd
jg
popa
mov
and
jae
pushf
pop
pop
loope
out
stos
outsl
addl
jg
repz
mov
adc
xor
enter
lock
mov
pop
out
out
jg
adcl
jecxz
into
pop
ljmp
dec
int3
mov
push
inc
hlt
insl
jle
mov
jb
pop
or
xchg
push
xchg
icebp
mov
jnp
cwtl
sbb
mov
lock
cltd
mov
test
lods
je
fists
jbe
lret
sbb
jg
sbb
flds
dec
jmp
push
mov
movsl
fmul
dec
dec
xchg
adc
stc
cwtl
ret
fldl
ret
pop
sbb
cmp
fs
frstor
pop
stc
add
aam
arpl
dec
scas
mov
enter
imull
push
lds
in
push
or
mov
pop
mov
es
xchg
loopne
and
sub
xchg
sbb
sahf
pop
jge
popa
sbb
outsb
jne
jo
ljmp
aas
pop
in
sub
mov
pushf
adc
xor
mov
outsb
and
aaa
gs
mov
inc
jmp
ljmp
les
xchg
insb
adc
push
jmp
mov
cmc
loope
jl
imul
adc
or
mov
scas
jg
xorl
xor
sub
xchg
cmp
adc
cmpsb
xor
jb
repz
sbb
push
sub
adc
pop
scas
jl
jge
gs
lret
test
iret
lods
mov
inc
cmpsl
or
push
dec
je
fwait
incl
fimuls
fisttpll
scas
popf
repz
cmpsb
cld
xchg
push
iret
cmp
mov
pop
dec
inc
adc
int
push
add
sub
js
adc
dec
cmp
ss
subl
pop
cmp
mov
cmpsl
call
push
sbb
mov
test
push
jo
inc
jb
popf
sub
jae
jnp
minps
inc
or
and
pop
fs
push
jns
outsb
dec
sahf
hlt
js
or
neg
push
imul
xchg
and
or
daa
push
popf
sub
pushf
adcl
addl
stos
push
sbb
lahf
arpl
inc
repnz
mov
push
cmp
ljmp
pop
cvtps2pd
popa
xchg
mov
aam
adc
dec
imull
test
jecxz
fidivrl
enter
and
mov
addr16
ljmp
and
test
mov
sub
push
ret
jbe
imul
movb
inc
daa
mov
adc
roll
orb
lods
xchg
push
push
jne
ret
arpl
je
outsl
mov
fisubl
pop
ds
dec
inc
push
les
stc
bound
sub
jg
outsb
in
mov
xor
add
mov
lods
out
push
aaa
rolb
test
xchg
je
pop
add
mov
inc
push
movsb
loopne
push
pushf
cmp
ret
dec
mulb
lds
and
test
cmpb
jbe
mov
nop
mov
adc
mov
lahf
xor
out
push
jle
aam
aam
and
mov
xor
leave
fsubl
mov
enter
shl
jae
cmpsb
sahf
insb
lock
jno
jmp
push
fadd
movsl
in
jmp
lret
dec
push
test
lods
xchg
arpl
outsb
dec
es
adc
jo
push
sub
sbb
fisttps
jmp
xorb
iret
xor
fsub
fisubrl
sahf
fwait
inc
sbb
jge
ljmp
ja
ljmp
push
xchg
dec
mov
dec
pushf
js
mov
rolb
jl
or
enter
in
xor
arpl
xchg
clc
xor
pop
pop
fnstsw
push
cmpsl
push
hlt
xchg
loopne
nop
mov
pop
dec
repnz
data16
and
test
rorb
xchg
imul
pushf
inc
jmp
fildll
add
pop
sub
lret
push
xchg
add
jg
cmp
ds
jle
add
fdiv
sub
inc
pop
mov
pushf
test
sub
push
and
enter
lea
call
hlt
push
dec
rclb
add
aad
or
daa
inc
popf
or
jns
int
inc
pop
jo
xchg
outsb
xor
in
sbb
inc
jae
leave
mov
sbb
inc
adc
mov
xor
mov
in
inc
sub
fcompp
ds
pop
xlat
xor
inc
fists
pop
rcrb
dec
sbb
push
in
pop
sub
jl
andl
movsl
inc
push
adc
sahf
mov
mov
cwtl
inc
push
cmp
dec
pop
push
ret
cli
aad
push
cmp
jl
inc
or
jge
repnz
shl
stos
xchg
and
mov
lcall
rcll
mov
addb
pusha
push
mov
mov
scas
insb
mov
lret
add
frstor
stos
jl
mov
push
dec
push
xchg
fbstp
push
lahf
fists
jbe
aad
mov
aam
push
imul
stos
lods
push
sub
push
dec
jns
mov
xchg
out
push
scas
cmc
mov
daa
call
cli
cmp
jl
add
cltd
nop
das
inc
adc
aas
jecxz
cmc
dec
cmp
data16
jg
mov
jnp
push
scas
jg
jge
push
xchg
xchg
imul
bnd
ds
cmp
mov
xor
pop
addr16
outsl
sbb
inc
xchg
outsl
jge
movsb
xchg
loopne
mov
mov
lcall
add
gs
nop
sbb
cmpsb
mov
insl
mov
in
pop
jnp
iret
imul
dec
and
jecxz
and
and
dec
insl
cmc
cmp
pop
cmpsb
pop
ljmp
cmpb
sbb
nop
negb
push
out
scas
movsl
ljmp
xor
add
fs
dec
add
dec
fsubrs
push
into
scas
faddl
test
mov
sub
insl
jmp
and
nop
outsl
jmp
pushf
mov
repz
inc
push
mov
test
pop
pop
orl
jo
filds
jae
sbb
push
add
sbb
mov
dec
mov
mov
jg
pop
ret
sti
out
push
call
mov
sub
loopne
cmp
andb
push
sub
pop
xchg
mov
push
dec
cmpsb
cmp
sub
mov
jg
xchg
add
aas
push
loope
mov
aam
xchg
cmpsb
mov
test
mov
push
mov
and
inc
sbb
add
mov
insb
add
dec
and
int
adc
cld
mov
pop
jge
jg
call
add
mov
adc
and
arpl
xchg
aaa
cmp
aas
jnp
popf
shlb
jns
mov
adc
popf
jns
nop
dec
jl
cmpl
mov
jle
mov
loope
xchg
ds
lds
dec
mov
inc
cmp
xorb
data16
outsb
xor
andl
xchg
cmpl
and
mov
test
fsub
stc
mov
mov
fs
icebp
lcall
fstpt
call
mul
pop
adc
insl
imul
pop
sbb
movsb
xchg
jae
lea
push
stos
sbb
add
es
rorb
arpl
inc
out
xchg
outsl
mov
cmc
repz
incl
or
jmp
je
cmp
lret
in
popw
nop
pushf
leave
loop
pop
pop
pop
inc
sbb
push
js
rorb
and
aas
xor
es
push
jecxz
loopne
or
sub
outsl
sti
in
adc
push
insl
scas
lahf
cmp
repnz
insb
jno
cmpb
leave
adc
pop
pusha
mov
addb
outsb
pusha
xchg
push
and
jp
cwtl
loop
mov
int3
xchg
mov
jo
cmc
jbe
std
repnz
or
mov
and
pop
push
pop
sbb
cld
jge
inc
aaa
pop
out
add
clc
daa
jae
mov
loope
dec
jp
bound
lods
pushf
ds
subl
inc
pop
pop
in
fcmovnb
das
inc
mov
dec
rorb
out
xor
data16
inc
xchg
movsl
xor
jge
aaa
add
inc
push
push
sub
mov
mov
je
ds
popw
int3
iret
adc
lds
mov
mov
and
push
mov
outsb
adc
rcll
sbb
jp
je
mov
add
mov
cmp
arpl
lea
cmc
subl
lret
inc
mov
int3
outsl
jecxz
add
fidivl
addb
lea
movsb
aaa
adc
int3
cld
stos
xchg
xchg
jnp
rcr
mov
sub
les
shl
jbe
cmpsb
sub
nop
lock
jns
mov
es
mov
mov
cwtl
push
jl
xchg
test
and
add
out
imul
adc
fwait
mov
sahf
inc
inc
and
test
jne
fldcw
pop
or
ret
and
out
sti
xchg
or
pop
sbb
loopnew
aaa
dec
cmp
jmp
repz
loope
xlat
inc
mov
jae
push
push
sub
adc
movsl
pushf
repz
les
mov
sub
dec
lret
mov
add
inc
pop
and
in
cmpsb
cld
mov
jecxz
lahf
das
ljmp
jmp
in
dec
rcr
cltd
dec
js
rcr
insl
inc
in
jl,pn
subl
in
in
inc
add
cmp
fwait
test
jl
inc
fcoml
nop
or
xor
sbb
out
into
test
daa
mov
jmp
stos
inc
sbb
xor
out
loop
inc
gs
out
test
mov
xor
xor
call
clc
adc
jns
imul
je
stos
jo
mov
pop
into
add
adc
stc
sbb
popf
lds
or
sarl
xor
and
cli
out
add
inc
in
fwait
cmp
push
ret
or
xor
adc
ds
inc
sbb
nop
pop
pusha
je
insb
mov
pop
test
fists
shlb
or
out
repnz
inc
fldlg2
les
dec
mov
sub
adc
sti
mov
dec
sub
pop
fwait
sarb
add
pushl
leave
cmp
mov
pop
jge
jns
add
cmp
nop
cmc
in
leave
adcl
sbb
xchg
mov
pop
pop
pop
test
mov
sub
lods
xlat
adc
lods
addr16
adc
jp
iret
lods
fcoms
ss
push
js
dec
andl
sbb
sub
insb
xor
cli
addr16
mov
and
sahf
or
push
insb
sub
bound
lcall
lret
test
mov
sbb
dec
and
sti
push
jae
pop
fisttpl
js
push
jp
jae
sub
and
nop
repnz
pop
inc
add
jecxz
push
cmp
pop
sub
mov
mov
xchg
popf
or
cmpsb
jnp
insb
dec
iret
add
pop
cli
mov
sbb
mov
sbb
sub
jmp
popa
mov
sub
subb
jae
pop
sti
ljmp
adc
insb
adc
jns
out
cmp
dec
cld
int3
rolb
mov
push
aad
icebp
cmpsb
rorb
cmpsl
push
adc
shll
lock
pushf
cmpb
cs
push
jmp
fists
sub
rcll
rorb
mov
mov
ljmp
gs
imul
and
mov
add
mov
popa
push
and
lock
in
mov
inc
dec
repz
lahf
jo
adc
mov
lret
jnp
and
sti
or
dec
data16
lods
pop
jae
in
dec
imul
sahf
mov
jecxz
jp
xor
sub
out
jecxz
add
push
insl
rcr
adc
shrd
sub
sarb
xchg
dec
dec
icebp
cmpl
in
cmp
lock
inc
lea
adc
mov
outsl
sti
inc
les
cmpl
ljmp
lcall
mov
push
enter
popf
int
push
xchg
cmp
cmpsb
repz
jl
fwait
imul
add
jae
inc
mov
or
mov
pop
or
mov
mov
xlat
pop
jns
movsl
pop
cmp
sahf
pusha
dec
rorb
jge
jg
dec
pop
cmc
xchg
push
shrl
dec
add
fdivrs
mov
lret
jne
lcall
repnz
add
bound
push
and
lcall
cltd
jp
popa
or
jmp
sub
xor
mov
add
lcall
pop
pop
jp
fcomip
mov
jge
out
push
lea
pop
push
xor
sbb
and
pop
mov
insb
flds
shrb
mov
aam
imul
pop
cmpsb
and
or
jnp
aas
and
inc
test
xor
mov
lret
dec
xor
xor
mov
xor
and
in
scas
jae
inc
mov
jns
mov
mov
xchg
inc
lods
shlb
dec
cmpsl
mov
push
insl
or
push
les
mov
sub
repz
daa
fsts
mov
pusha
scas
sti
push
fnsave
ja
ror
stos
lds
repnz
inc
stos
cli
fwait
mov
mov
adc
push
jle
int
lea
ret
lods
enter
adc
xor
or
ss
pop
movb
inc
aas
push
add
cmc
add
sbb
in
pusha
or
scas
push
sbb
dec
flds
fldcw
out
jbe
cld
sbb
xor
inc
lahf
mov
cmp
xor
push
sar
cs
call
inc
sbb
and
idivl
dec
adc
ficompl
sub
icebp
lods
rorb
sub
int
addr16
ret
fcomps
push
and
push
or
and
push
dec
xorb
daa
movsl
pushf
push
lock
push
add
mov
subl
bound
sub
jecxz
pop
push
lods
or
fdivs
lahf
dec
pop
adc
add
inc
sub
sub
xor
xor
scas
inc
jae
sbb
adc
jmp
sub
cmp
hlt
fwait
test
popa
out
pusha
dec
ds
jle
push
in
cmp
pop
ud0
mov
mov
into
mov
dec
in
or
xchg
xor
pop
fisubl
mov
xor
mov
mov
xor
or
cld
rorb
jns
leave
xchg
fisttpll
lds
adc
lcall
lahf
fsubl
pop
cmp
push
xchg
sbb
scas
cmp
pop
cmp
es
add
cmpsb
sti
xchg
push
inc
pop
ss
das
lods
outsl
mov
xor
insb
lcall
inc
or
inc
scas
aaa
dec
sbb
repz
mov
negb
cmp
push
test
clc
int
push
pushl
jmp
hlt
xchg
lds
pop
cmp
fwait
rcrb
sub
xchg
sub
and
mov
jl
bound
sbb
dec
int3
and
pop
pusha
mov
test
fimull
inc
or
jmp
inc
out
aas
fmulp
mov
fnstsw
in
pop
testl
sbb
inc
repnz
pop
dec
in
mov
cmp
add
and
movb
fistpll
or
movsl
lods
sbb
push
jno
rol
jmp
and
in
push
ret
in
pop
lock
in
inc
cmpsb
addr16
aam
sbb
cmp
jecxz
mov
mov
outsl
cmp
rolb
test
inc
cmp
arpl
aam
and
test
enter
imul
rol
sbb
cld
mov
inc
or
scas
mov
mov
fistpll
xchg
sti
sub
cs
or
sti
fldt
cld
xor
mov
adc
push
fs
adc
adc
repz
nop
lods
mov
mov
push
insl
insl
pusha
mov
cmc
cmp
ret
or
iret
sub
mov
lea
sub
and
push
xor
in
ret
lret
inc
jl
ret
pop
push
jbe
dec
pop
xor
adc
sub
scas
sbb
push
popa
inc
sbb
mov
push
xor
lods
unpcklps
mov
pop
lods
adc
or
lods
sbb
inc
lcall
rep
or
jp
subl
cmc
mov
adc
mov
pop
xlat
or
shr
ja
sub
test
cmp
or
sbb
aad
mov
or
fcompl
mov
addl
cld
mov
js
cmp
notb
and
int3
shrl
inc
add
data16
or
sub
push
push
dec
sub
inc
xchg
add
dec
add
cli
mov
push
out
rcr
push
pop
test
test
xchg
xor
js
shrb
andb
pop
pop
xlat
jae
push
cmpsb
mov
addr16
mov
xlat
jns
jl
adc
mov
inc
mov
cs
cs
loopne
int
inc
push
cmpl
jle
mov
mov
xlat
xchg
insl
inc
mov
bound
loop
inc
mov
mov
jbe
pop
pop
mov
dec
test
pop
inc
mov
or
test
or
and
mull
hlt
push
cmpl
sarb
fcompl
out
js
test
lret
stc
jg
or
mov
out
jmp
lcall
notb
mov
mov
xchg
xchg
fwait
ljmp
orb
ficomps
ja
arpl
fmull
mov
push
xchg
cltd
fmuls
push
pushf
addr16
popa
filds
popa
jl
lret
out
fiaddl
push
out
cmpsl
rorb
mov
rol
push
ja
scas
test
jp
add
or
fsub
popa
in
pop
fisubrl
int3
in
lods
jbe
add
push
mov
pop
nop
mov
inc
mov
cltd
lods
in
aas
jb
daa
or
xchg
rorb
cmc
into
push
dec
imul
and
cmc
cld
dec
xlat
inc
scas
in
sbb
push
pushf
inc
push
loopne
mov
pop
push
imul
xchg
or
pop
lret
dec
and
test
dec
xor
insl
sbb
or
mov
dec
fdiv
mov
arpl
rclb
mov
jg
adc
repnz
cmpsb
mov
push
clc
movsl
jle
mov
cmp
push
shrb
add
lret
inc
fistpll
mov
pop
mov
int
sbb
mov
dec
rcr
mov
es
lods
call
adc
shrb
int3
cld
inc
std
adc
add
fs
subb
cmpsl
add
repz
push
and
lcall
popf
js
push
adc
push
jmp
or
or
cmpb
lcall
arpl
cmpsl
mov
mov
cmpsl
gs
mov
cmp
dec
lret
iret
ss
mov
mov
aad
xrelease
sub
jno
push
insb
test
into
pop
rorl
lcall
outsl
loope
stos
pop
lcall
mov
sub
sahf
adc
adc
nop
push
sbb
inc
and
adc
sti
mov
xchg
sbb
rorl
into
mov
pop
lret
dec
insl
in
fwait
call
in
and
xchg
out
cltd
or
xor
and
jge
decl
mov
repz
iret
je
inc
int3
sub
cmp
and
and
pop
repnz
notb
call
dec
stos
sub
lock
sub
xchg
adc
mov
and
inc
pop
stos
push
imul
test
mov
inc
movsl
inc
adc
fwait
and
ficompl
lcall
popa
outsb
inc
pop
add
sbb
mov
fstps
flds
pop
repnz
test
jge
decb
mov
sbb
dec
lcall
int
and
xor
xchg
mulb
adc
jne
add
das
inc
pop
rolb
int
jecxz
inc
lcall
or
movsb
mov
add
leave
scas
pop
cmp
cmp
xor
sub
adcl
and
gs
push
xor
bound
cmpsb
mov
pop
and
repz
fld
in
pop
pop
int3
xlat
testb
mov
leave
insl
test
ljmp
sub
mov
mov
add
jecxz
std
outsl
mov
lret
mov
fsubrs
mov
lret
mov
mov
je
outsl
mov
xchg
mov
xor
mov
int3
jbe
in
inc
sub
out
cmp
insb
testl
add
loop
cmpsb
js
dec
mov
cmp
imul
cmc
scas
inc
popf
cmp
xor
mov
cli
jae
enter
repz
pop
fstps
jns
call
pop
lock
pop
addr16
addr16
sub
push
imul
cmpsl
jmp
xchg
inc
lcall
loopne
mov
in
mov
sahf
dec
lock
add
cmp
inc
arpl
out
mov
sti
dec
addr16
push
adc
push
leave
mov
int
mov
pop
clc
scas
adc
add
dec
xor
xor
xor
jno
imulb
mov
xchg
popa
mov
cmp
mov
xlat
aaa
iret
out
std
and
add
cld
xchg
add
adcb
std
mov
lock
ret
aas
push
fildll
in
rorl
out
sub
jne
and
lock
mov
add
pop
dec
repz
jp
fstpt
push
bound
pop
add
repz
mov
ja
mov
rorl
daa
cmp
inc
test
imul
daa
inc
out
push
mov
lahf
mov
xchg
lods
test
push
and
negl
ds
scas
out
loopne
cld
sbb
ljmp
mov
std
popa
test
js
dec
xchg
sub
decb
repnz
ret
and
jbe
je
lock
mov
mov
jle
add
cmpsb
add
in
into
push
or
rorl
int3
mov
push
cmc
sbb
adc
ja
sbbb
push
mov
mov
test
add
cmp
fbld
inc
repz
sbb
dec
andl
jecxz
jmp
mov
or
xlat
push
imul
mov
lret
adc
popa
xor
pop
sbb
jg
mov
xchg
sub
push
es
repnz
adc
scas
inc
adc
fsubl
lds
jae
xchg
out
ja
xor
cvtps2pi
lea
cmpl
pushf
and
in
dec
pop
out
iret
mov
push
insl
xchg
lahf
jne
cmp
popa
xchg
std
or
icebp
dec
in
ret
and
cld
mov
mov
adc
das
in
push
pop
jmp
xchg
lds
repnz
jo
or
outsl
xlat
adc
and
fisubrs
loopne
pop
and
nop
mov
cmpsl
dec
es
pusha
inc
and
push
xchg
mov
xchg
sbb
arpl
addr16
popa
daa
mov
lods
inc
push
or
mov
sub
movsb
in
lret
push
sbb
jne
movsb
daa
sub
adc
xchg
sub
sbb
xor
mov
hlt
and
cmp
mov
das
dec
dec
fsts
mov
or
push
leave
mov
inc
push
ficomps
cmp
cmp
bound
mov
push
mov
push
sbb
dec
lds
fimuls
ja
xor
jo
insl
arpl
movsb
aaa
fwait
jmp
xor
int
cli
pop
add
adc
lods
imul
pushf
and
xchg
sti
mov
psllw
adc
or
mov
stos
jbe
mov
sbb
xlat
out
push
mull
fisubrs
jle
mov
push
aam
cmp
or
cmpsb
dec
adc
ja
mov
sti
cli
mov
cmp
xor
pop
lods
shl
fildll
push
out
mov
pop
orb
xchg
sub
into
and
pavgb
lea
ja
mov
pop
sbbb
stc
and
outsb
imul
lock
pusha
xor
push
lret
sub
fsubs
add
xor
cmp
movsb
add
sti
adc
pop
sahf
lods
icebp
notl
add
ljmp
rorb
hlt
lds
cmp
mov
inc
jecxz
outsb
mov
loop
push
dec
bound
cmp
jb
xchg
push
sahf
sbb
movsb
or
cmp
sbb
jae
imul
jae
fcmovnbe
js
sub
or
in
sbb
int3
sahf
hlt
jmp
call
outsb
lods
xor
bound
cmp
loope
and
inc
fsts
repnz
test
arpl
nop
test
clc
in
jl
std
test
push
stc
fdivr
add
xchg
js
call
pushf
loopne
cmpb
imulb
int
sbb
aaa
in
xor
into
jb
and
or
or
push
sub
mov
adcb
mov
subl
daa
mov
adc
sbb
adc
call
cmpsb
mov
test
loopne
in
adc
repnz
adc
clc
dec
aaa
es
outsl
cmpsb
mov
mov
ficoms
adc
and
jns
lcall
and
fildl
pop
popf
fldln2
inc
sbb
pop
mov
int
ljmp
rcl
scas
and
icebp
jl
xor
jns
lds
sbb
hlt
scas
rorl
into
pop
inc
adc
imul
dec
stos
sbb
pop
sbb
dec
pop
mov
pop
mov
outsl
jbe
xchg
inc
ljmp
lahf
xor
shr
push
loope
or
sub
mov
jg
lcall
cmp
movsb
leave
dec
mov
xchg
or
mov
or
les
sbb
mov
int3
arpl
dec
mov
rcll
psllw
mov
xchg
fmull
and
cmp
sbb
ds
sub
mov
fs
cltd
pop
jl
call
cltd
lcall
xchg
or
jmp
out
ret
fadd
lea
fisttpll
jecxz
or
aas
fimuls
dec
js
jnp
daa
loopne
das
ret
shrb
mov
mov
in
cs
xor
adc
mov
lea
div
dec
sub
xor
pop
fldl
or
hlt
xor
mov
mov
inc
call
push
shr
ja
loopne
jge
shll
jae
sub
xchg
xor
stos
jbe
in
pop
mov
int
xor
ds
outsl
nop
dec
dec
inc
or
ds
rcrb
xchg
pop
je
ffree
push
jg
inc
mov
dec
add
aas
inc
aam
fistps
adc
xor
dec
dec
push
scas
sarl
adc
in
movsb
mov
pop
cmp
mov
fidivrs
adc
cmp
insl
stc
mov
ss
sbb
cs
jb
loop
orl
lock
lcall
roll
fisubrl
xchg
dec
test
mov
rolb
fimull
repz
inc
fidivl
mov
xor
or
adc
ret
outsl
sub
and
push
push
into
pusha
cmp
jp
jg
mov
ret
mov
adc
leave
out
sti
insl
ficoml
cmp
loopne
xchg
cmpsl
in
aaa
xor
int
xorb
jge
outsb
fmull
xchg
out
and
push
rolb
out
jp
loope
mov
lret
imul
insl
shl
dec
and
add
jp
clc
push
xchg
inc
test
xchg
add
pop
cmpsl
mov
pusha
fstpl
cmp
imul
ror
sti
out
lahf
jp
in
add
aas
stos
andb
movsl
std
lret
mov
and
loop
xchg
orb
mov
fcoml
fs
mov
sarb
adc
fxch
or
dec
inc
pcmpeqb
jne
out
push
xlat
push
outsb
ljmp
popf
pushl
add
mov
test
or
int
adc
int3
push
jns
es
cld
sub
push
scas
xchg
mov
ljmp
addr16
loope
and
mov
add
push
or
bound
insb
mov
jle
jnp
cli
pop
ret
les
mov
inc
inc
roll
fsub
mov
fcmovu
test
xchg
icebp
cld
mov
mov
scas
cmc
lret
sbb
jbe
jns
or
shlb
lock
add
xor
call
aad
lahf
dec
xor
mov
mov
jge
xor
rcrb
mov
lret
push
mov
adc
cs
ret
or
cmpsb
test
pop
fs
movsl
jmp
orb
out
add
and
and
sbb
mov
xchg
jns
sbb
add
repz
out
adc
cmp
push
leave
xor
rcl
and
cmp
mov
loopne
shrb
nop
lods
aas
xchg
nop
fidivl
out
inc
mov
jns
jne
cmpsl
jnp
inc
aaa
pop
cmp
mov
popa
bound
push
outsb
or
hlt
mov
call
ds
out
gs
popf
jnp
dec
out
cld
cld
sub
jbe
jno
push
insb
bound
push
pusha
cli
inc
fnstsw
mov
cmp
sbb
test
mov
shll
jbe
mov
sbb
sub
adc
ds
test
cmp
loopne
aad
xchg
mov
mov
mov
adc
int
lret
push
jle
add
add
rcr
mov
int3
dec
fisubrs
addr16
mov
cld
les
rorl
sub
jns
mov
les
ss
cmp
lea
or
imul
jb
dec
pop
cwtl
mov
cli
fs
dec
pop
jnp
lea
push
jmp
movsl
movsl
xchg
mov
dec
rolb
xchg
mov
cs
loopne
shr
lcall
lds
mov
fidivrl
and
push
scas
ret
in
xchg
xor
sub
dec
ja
cmpsl
ret
inc
ret
adc
push
cltd
add
pop
pop
cmp
cmc
into
je
leave
or
mov
and
mov
popa
xor
in
dec
sbbl
pop
xor
pop
dec
out
push
repnz
std
push
mov
jae
cmp
mov
das
push
leave
clc
pop
cld
ret
fisubrl
mov
xchg
jns
mov
cwtl
mov
mov
repz
mov
xlat
pop
clts
movb
add
mov
jo
lahf
ds
ret
fisubs
ds
add
jecxz
or
lret
jbe
cmp
icebp
mov
xchg
sarl
pop
je
jno
lret
lret
aad
or
mov
push
movsb
xchg
cmc
xchg
mov
jbe
mov
inc
outsb
sbb
sub
in
out
xlat
mov
mov
or
rcrb
mov
movsl
sub
loope
cmpsl
xchg
xlat
cmp
push
push
inc
enter
rclb
ret
jbe
jne
hlt
mov
out
or
dec
pop
test
psubw
and
pop
movsb
mov
jo
jb
cmp
jge
add
mov
xor
sub
pop
cmpsb
mov
mov
lds
sbb
sub
sub
ja
or
mov
jb
mov
stos
iret
testb
mov
push
sbb
adc
pop
scas
mov
popf
pop
xchg
subl
adc
sbbl
or
inc
dec
lds
xor
icebp
inc
movsb
outsl
clc
sub
xor
test
jecxz
cmp
mov
mov
pushf
jae
adc
lret
and
xchg
daa
ja
stos
cmp
fidivs
sub
ret
sbb
out
loopne
mov
imul
and
jno
hlt
ret
cmpsl
jp
xor
fsts
sbb
jno
fisubl
arpl
aad
popa
cmp
jl
adc
nop
cwtl
and
call
out
pop
call
inc
stos
adc
inc
jae
hlt
mov
xor
scas
fwait
inc
fdivrs
hlt
inc
add
inc
dec
push
sub
loopne
mov
int3
mov
and
adc
xlat
movsb
popf
stos
add
xor
jns
xchg
or
mov
sub
mov
cld
dec
jp
xchg
xchg
cmp
sbb
es
je
mov
jo
imul
cmp
vmread
add
jecxz
fsubl
cwtl
push
pop
sbb
clc
pop
sub
cmp
cmp
repnz
adc
ljmp
inc
mov
xchg
pop
iret
adc
js
mov
add
mov
testb
inc
dec
push
cmpsb
xor
mov
cmp
pop
mov
sub
gs
jnp
outsl
rcrb
sub
test
mov
push
xchg
dec
std
pop
xchg
inc
jne
and
cmp
pop
xor
pop
or
sbb
dec
push
sbb
mov
or
push
push
push
fwait
or
faddl
cli
jb
gs
jp
in
mov
sub
push
cmpsl
out
out
test
hlt
repnz
repz
xlat
push
aam
lds
in
rolb
add
dec
dec
sub
cmp
xor
mov
gs
xchg
popf
fisttpl
test
adcb
mov
ja
sub
inc
xchg
mov
cld
push
cltd
nop
mov
adc
rclb
inc
push
adc
call
xchg
add
adc
sub
push
out
add
out
xchg
and
jbe
loope
add
jl
mov
push
movsl
mov
iret
enter
rcrl
inc
mov
fdivrs
in
hlt
push
lret
pop
mov
fnclex
cmp
mov
or
push
and
lahf
jmp
sahf
inc
jnp
fdivrl
inc
pop
xchg
stos
into
push
push
xor
in
in
mov
in
ret
gs
xchg
mov
icebp
jmp
sbb
shlb
stos
cs
pop
or
xorl
sub
sub
lcall
stc
cmp
pop
sub
popf
and
adc
data16
pop
adc
mov
cld
testl
lret
xchg
js
fwait
nop
mov
jbe
lock
push
mov
fcomp
fsts
dec
add
hlt
xchg
inc
out
cmp
or
sarl
mov
xchg
fs
stos
rcr
vpacksswb
mov
adc
lret
dec
ss
das
cmp
imul
and
sub
lods
mov
int
fists
test
or
rorb
mov
cli
dec
mov
loopne
and
clc
mov
mov
aam
ret
and
repz
dec
icebp
inc
pop
or
daa
movsl
sti
idivb
popf
pop
cmp
mov
jmp
dec
mov
addl
inc
add
scas
lcall
stc
push
adc
imul
push
xchg
and
add
sbbb
or
push
aam
outsl
out
adc
add
outsl
das
pop
mov
jno
push
push
adc
dec
push
adc
outsl
dec
pusha
in
rcr
lods
sub
cmp
jle
mov
xchg
insl
ja
out
orl
repz
stos
mov
lahf
pop
js
xchg
push
mov
repz
out
pushf
mov
mov
cmpsb
mov
cmp
xor
xor
aam
lea
test
lock
rorb
sbb
ja
pop
dec
add
test
fistl
mov
test
aaa
mov
dec
dec
xor
sbbb
insl
sub
jnp
adc
fldcw
dec
sub
xchg
jge
fstps
in
fwait
and
pop
mov
nop
stos
rol
lock
mov
jne
cli
dec
aas
fldt
clc
clc
mov
mov
and
pop
cmp
cwtl
iret
fnsave
mov
cmpsl
sbb
stos
imul
dec
xor
inc
pop
mov
lea
ljmp
lock
cmp
into
out
sbbl
out
pop
ljmp
mov
push
pop
in
pop
cli
xlat
mov
sti
frstor
jo
cmp
add
cli
ret
cmp
pop
nop
mov
add
out
sub
dec
inc
int3
jb
addl
cwtl
mov
pop
inc
movb
pop
movsb
aam
jns
inc
out
xchg
jp
jne
fwait
mov
jnp
icebp
xor
add
xor
loopne
sbb
jo
out
lcall
xor
pusha
fucomp
cwtl
leave
std
arpl
sbb
add
ret
mov
out
jae
dec
mov
xor
and
mull
and
adc
mov
xor
aad
or
daa
pushf
test
inc
mov
imul
fucomi
add
lahf
outsl
enter
call
movsl
das
leave
add
mov
cmp
xor
push
sbb
pop
xchg
call
jae
add
dec
bound
fmulp
shll
pop
data16
leave
cmpsl
dec
std
fucomip
fists
dec
push
jge
les
xchg
outsb
test
in
fisubs
adc
pop
mov
lret
xchg
cli
insb
cs
sub
pop
jne
jne
or
outsl
jmp
mov
test
jg
add
ja
sub
mov
mov
pop
dec
mov
mov
das
not
stos
jmp
sar
cmp
push
pop
adc
sbb
jl
mov
ret
aad
adc
mov
subb
jg
and
stc
outsl
cmc
pushf
mov
mov
xchg
fdivr
xchg
ds
movb
xor
add
sub
out
xchg
test
dec
inc
idivb
repnz
pop
pop
or
lret
push
jbe
jg
jne
inc
sbb
mov
lcall
jmp
or
pop
ljmp
js
fmull
pushf
mov
sub
imul
xchg
mov
sbb
jecxz
mov
mov
dec
fs
sar
xchg
inc
sbb
clc
pop
rcl
fcompl
loop
lock
sub
xchg
out
mov
inc
cli
pop
and
jg
jmp
and
insb
dec
daa
jp
in
and
jl
xlat
fdivrl
cwtl
or
sub
or
fcomi
xchg
std
add
aaa
stos
imul
adc
daa
fwait
stc
sbb
or
int3
push
jnp
jmp
mov
push
add
nop
addr16
or
cmpsl
push
add
cmpsb
ss
adc
icebp
cmp
pop
mov
mov
push
loope
xchg
mov
movsb
popa
sti
stos
pop
mov
sahf
jecxz
mov
sbb
loope
mov
ja
loop
call
out
xor
rorl
xor
leave
lds
sbb
repnz
mov
sbb
pop
js
test
dec
cmp
ret
dec
sub
or
cmpsl
push
pop
stos
xchg
xchg
sub
lahf
adc
dec
lahf
mov
add
xchg
push
xchg
ds
or
fwait
add
cld
or
adc
push
jg
sub
mov
xchg
pushf
add
mov
mov
test
cltd
push
add
mov
or
pop
push
stos
jg
pop
add
mov
ja
outsl
add
data16
push
xor
in
mov
repnz
arpl
cmp
and
sbb
stos
out
dec
je
pop
lods
push
mov
movsl
xor
xor
cmp
inc
rol
in
mov
or
cmpsb
leave
mov
sub
nop
data16
fnstcw
push
ret
xlat
xchg
fisubs
push
inc
data16
jbe
mov
mov
aaa
aas
aas
push
or
lods
test
fcoml
test
or
cltd
fldt
add
cltd
das
inc
lods
cli
and
cwtl
push
pop
jnp
pusha
in
and
mov
mov
sub
mov
lock
pop
add
in
pop
insb
cmp
push
jg
and
pop
push
sar
fnclex
push
inc
and
inc
stos
mov
loope
imul
jle
mov
icebp
jno
mov
or
pop
sbb
mov
inc
mov
pop
stc
shll
mov
push
lea
rorl
lahf
sarb
insl
sti
push
push
fistps
dec
loop
rorb
dec
stos
popf
jb
inc
add
push
dec
add
idivb
mov
fnstenv
mov
aas
popa
fsubl
std
or
xorl
int3
push
mov
push
inc
and
mov
loope
add
inc
icebp
dec
and
mov
pop
out
jmp
repz
mov
int3
pop
push
cmp
rep
cmp
test
dec
adc
mov
dec
add
repnz
mov
jns
mov
mov
repnz
inc
out
cmp
sbb
jb
mov
lahf
sub
in
push
cmp
jnp
add
lds
mov
add
out
test
sub
cmp
add
cwtl
adc
fwait
leave
in
stos
mov
fdiv
sbb
out
or
aas
hlt
xchg
jne
cld
bnd
gs
or
push
inc
and
test
shl
inc
lds
sbb
cmp
and
adc
into
inc
cwtl
jecxz
or
push
out
jge
jbe
loope
jno
addl
pop
jnp,pt
sbb
rorl
aaa
aaa
addr16
xor
es
lahf
dec
xchg
out
inc
or
ss
pop
nop
icebp
imul
gs
cmp
or
lret
call
je
and
fwait
adc
push
ja
inc
jmp
push
sbb
aad
push
push
leave
ss
lods
and
std
ds
mov
js
push
mov
loopne
mov
and
imul
dec
insl
sbb
punpckhbw
mov
dec
push
in
fidivrl
bound
imul
sti
or
mov
fisubrs
movsb
xchg
xchg
outsl
out
and
xchg
shll
insb
popw
xor
rcrb
nop
fisttps
add
inc
xor
jecxz
jle
jbe
mov
sbb
repnz
inc
jns
xchg
mov
out
add
mov
push
mov
mov
jg
fwait
sbb
scas
jge
or
fcoms
lret
decb
repnz
xadd
aas
out
push
dec
mov
pop
push
ret
mov
xor
fisubrs
inc
notl
or
pop
lods
jp
add
loop
insl
je
cwtl
mulb
sti
out
mov
push
pop
sbb
repz
push
fstl
jle
in
xor
clc
jle
xchg
mov
aad
pusha
js
repz
push
icebp
sbb
mov
add
out
int3
mov
add
int3
mov
jnp
pop
mov
in
xchg
cmpsl
xorb
fisttpll
mov
pop
test
xor
mov
mov
jb
stos
sarl
aad
jp
mov
xchg
push
adc
loope
dec
cmp
cmc
or
out
adc
ret
icebp
mov
inc
shll
jg
xor
mov
test
js
mov
repz
clc
jo
add
in
inc
dec
add
cltd
jno
sarb
outsl
lds
cmovle
lock
mov
mov
xchg
pop
cmc
xor
icebp
pop
fwait
dec
fdiv
pop
push
jno
lahf
sub
pop
popl
add
addl
mov
subb
stos
sub
xchg
adc
into
cmpsb
stc
mov
mov
sub
mov
lahf
mov
jp
call
push
or
andl
mov
je
es
sub
outsl
push
in
pop
jnp
lds
std
orl
push
xchg
xchg
add
jle
mov
sbb
ret
cmp
pop
inc
movsb
xor
fcoms
sub
mov
lahf
add
or
mov
mov
idiv
ja
imul
pop
cld
das
test
xor
mov
jbe
loopne
subl
les
in
adc
mov
sbb
hlt
iret
shll
cltd
cmp
push
movsb
pop
xchg
mov
pop
push
cmp
or
scas
cmpsl
imul
into
push
ljmp
sbb
xchg
syscall
xor
loop
loopne
test
cmpsl
inc
adc
lcall
cmp
incb
dec
push
shl
ds
jge
retw
jl
loope
adc
adc
dec
jmp
aad
iret
or
xor
fldt
movsb
dec
sub
xchg
push
mov
outsl
inc
push
subl
sub
sub
call
std
xor
movsb
pop
inc
jecxz
lret
jno
inc
outsl
jp
js
ss
js
mov
ficomps
add
jle
jecxz,pt
rclb
fildl
push
aam
frstor
and
pop
nop
je
scas
insb
clc
stos
fsub
or
mov
shr
ss
out
cmp
pop
stc
sub
in
rep
call
shr
cmc
mov
cmc
and
testb
lahf
push
insb
lds
inc
xchg
mov
pop
dec
rcrb
mov
shrb
pop
xchg
push
mov
out
adc
mov
pop
xchg
daa
jmp
sub
mov
std
and
stos
push
mov
or
stos
xchg
movsl
xchg
pop
ljmp
int3
add
arpl
lock
test
xchg
or
sahf
and
jne
xor
xchg
ljmp
aam
inc
into
xchg
lea
and
jg
dec
das
adc
leave
xchg
shlb
insl
and
idivb
incl
call
inc
xchg
leave
and
cltd
xor
into
jp
ret
push
jmp
outsl
jge
jns
jg
adc
sub
int3
sub
dec
pushf
movsl
mov
and
push
add
dec
test
pushf
mov
sub
inc
arpl
insl
cwtl
or
insl
pop
fmull
mov
mov
leave
aaa
sbb
shr
add
test
push
lret
loop
dec
jmp
jo
pop
jmp
dec
icebp
pop
sub
mov
mov
add
mov
lock
lea
imul
pop
pop
int3
cmp
jp
in
loop
sbb
sbb
inc
xchg
cmpsb
into
jns
pop
imul
loop
adc
push
arpl
iret
push
mov
sub
push
jge
int
loopne
cmp
daa
sbb
fdivs
cmpsb
xchg
jb
dec
mov
enter
push
dec
call
cmovne
jg
push
nop
into
mov
fs
sub
mov
mov
jecxz
out
or
popf
test
shld
cmp
sahf
ss
pop
aad
lods
daa
aas
xor
jae
les
push
gs
sub
and
add
out
cs
shrb
mov
inc
insl
jno
xchg
ret
test
std
testl
outsb
fwait
in
ds
mov
bound
lods
jno
pop
inc
aas
leave
mov
popa
jmp
gs
fsubrl
pop
lcall
and
push
or
jae
jo
imul
or
push
add
loop
ffree
aam
sti
pop
sub
xlat
adc
jecxz
and
rorl
xchg
mov
cmpsb
ss
dec
loop
dec
iret
dec
test
xchg
adc
jne
test
mov
inc
je
push
adc
jl
mov
dec
dec
stc
mov
insb
jo
jle
jecxz
ds
mov
xchg
fiaddl
xlat
mov
or
lods
jnp
ljmp
jmp
das
mov
mov
adc
into
sbb
jle
fxch
push
jne
insl
lods
scas
sub
bound
dec
mov
imul
cmp
int
push
lret
jl
mov
aam
push
inc
cmp
jecxz
dec
push
pop
stos
pusha
adc
and
repnz
xlat
lds
imul
ror
mov
fists
loop
mov
add
cmpsb
cmp
sti
shl
cmpsl
std
jl
or
mov
mov
adc
in
sub
lcall
and
insl
lahf
xchg
push
movsl
adc
mov
dec
leave
push
push
sbb
movsl
xchg
inc
repnz
leave
imul
cltd
out
lret
xorl
repnz
bound
jne
lea
add
rcl
mov
fistpll
add
sub
add
cltd
stos
mov
jo
jl
ret
js
cmp
decb
adc
test
loopne
into
fmulp
insl
push
inc
fsts
adc
stos
repz
test
dec
cmpsb
cmpsb
add
sub
bound
inc
rorl
lret
rolb
faddl
inc
cmp
push
jmp
outsb
or
mov
push
int3
mov
movsl
sbb
xchg
lahf
cwtl
cmp
outsl
inc
pop
mov
out
and
jns
movsl
fucomi
mov
lds
hlt
xor
aad
test
sbb
jb
dec
orl
sub
push
pushl
push
add
pop
popa
or
sbb
adc
sub
mov
sbb
sbb
lret
bnd
mov
and
mov
xlat
sub
xor
je
adc
jp
dec
pop
push
data16
cmp
push
dec
int
pop
ljmp
xchg
testb
pop
fucom
jmp
pusha
jmp
pop
js
xchg
jb
out
pop
int
jge
test
mov
shrl
je
xchg
pop
or
jmp
pop
test
pop
push
jo
mov
lea
negl
cmpsl
mov
jp
pop
int3
push
dec
mov
fucomi
mov
pop
jmp
sbb
dec
jmp
cmp
adc
mov
pop
pop
daa
add
xor
into
xchg
movsl
pop
mov
mov
sarl
mov
lcall
mov
cwtl
loope
adc
scas
je
and
cmp
add
cli
xchg
es
mov
ret
sub
and
in
jne
mov
jns
adc
jo
ret
movsb
jbe
inc
mov
pop
jns
sti
jg
cs
lahf
xor
inc
dec
mov
push
add
fisubrs
sbb
lahf
js
mov
xchg
mov
cltd
sti
lretw
or
xor
stos
xchg
repnz
jge
out
popa
dec
lock
xchg
sbb
hlt
testl
push
icebp
fdivp
pop
jno
lds
imul
ljmp
lods
enter
sub
or
jb
mov
push
push
nop
or
or
test
pop
ss
and
jg
xor
and
adc
lret
rcrb
repnz
sbb
mov
and
test
mov
cmpsl
loope
jns
lock
addr16
inc
gs
sarl
cmp
pop
push
pop
and
mov
sub
xchg
scas
cmpsl
xchg
rcll
or
movsb
sub
test
sahf
lcall
dec
bound
mov
loop
xchg
cmp
mov
jne
aaa
pop
pop
cmp
jmp
xor
cmp
jbe
push
dec
in
cwtl
outsb
push
mov
cmpb
mov
add
add
or
xchg
add
pushf
xchg
sarb
xchg
mov
push
sub
dec
cmp
inc
and
lcall
sbb
push
sarb
cmpl
dec
ds
pushf
jl
sub
mov
mov
pop
or
sbb
daa
sahf
pop
pop
xchg
jecxz
out
pop
outsb
repz
loopne
mov
popf
sbb
sbb
loop
mov
mov
cli
ficompl
dec
loopne
arpl
push
fcos
inc
mov
lahf
and
sub
and
aas
js
sbb
out
insb
rol
push
and
fmul
adc
aad
popf
std
mov
rcrl
sti
jmp
dec
nop
add
lret
or
mov
fnstsw
scas
jbe
mov
sub
lock
cli
lcall
addr16
jecxz
loope
mov
hlt
imul
je
sub
insl
adc
fildll
lds
sbb
sub
pop
loope
dec
dec
cli
mov
shrl
dec
xor
sbb
jecxz
push
cwtl
cmp
mov
test
mov
mov
inc
popa
sbb
or
mov
les
arpl
cmp
pusha
xchg
mov
push
popf
hlt
or
adc
cmp
xor
cmp
jmp
dec
popa
ljmp
fldl
adc
dec
jno,pn
adc
pusha
xlat
jl
iret
sub
mov
loop
popf
dec
cmp
sub
inc
lahf
dec
ror
sub
mov
std
mov
enter
jmp
and
xor
shll
and
lock
lahf
mov
ret
xchg
rorl
fdivs
or
mov
mov
xor
inc
or
mov
mov
mov
out
icebp
les
mov
into
push
jbe
dec
rorb
mov
and
and
inc
sti
pop
mov
imul
out
sbb
cmp
adcl
mov
fcomps
lock
loopne
movsl
cmp
lock
fnsave
dec
aam
cmp
dec
pop
mov
xor
les
sbb
xchg
rol
test
test
dec
mov
or
push
pop
clc
push
pop
outsl
xor
mov
mov
insb
mov
inc
ja
call
jnp
push
dec
int
adc
xchg
movsb
cmc
out
imul
loop
pushf
jg
push
ret
idivb
xchg
inc
hlt
test
mov
mov
mov
lret
loop
mov
insl
mov
push
dec
cmp
and
mov
or
nop
jecxz
lret
enter
inc
imul
jns
sbb
ljmp
insl
cmpsb
or
jo
jae
xchg
lds
adc
movsl
add
pushf
outsb
sbb
dec
hlt
rclb
adc
pop
inc
loopne
or
arpl
mov
adc
jnp
push
dec
cmp
sbbl
mov
xor
mov
loopne
jecxz
mov
adc
jge
cmpb
es
stos
and
inc
jg
jo
ret
add
push
repnz
int
or
xchg
lcall
subb
add
aam
cmpsb
out
clc
xchg
mov
shld
call
and
mov
jne
mov
sbb
xor
ret
adc
hlt
bound
bound
sti
sub
gs
sub
ja
pop
in
xor
mov
inc
jp
insl
test
xchg
nop
dec
add
bound
test
scas
rclb
jecxz
mov
sbb
push
or
and
lret
in
cltd
rorl
xchg
fldcw
pop
mov
push
push
std
add
data16
mov
andl
insb
stos
call
ljmp
dec
fidivl
cli
and
mov
movsl
mov
std
fs
add
mov
mov
dec
push
mov
jmp
aam
loopne
mov
mov
icebp
ficomps
inc
and
jmp
cmp
dec
enter
loop
sub
jns
fildl
cmp
jbe
rcr
pop
mov
xor
or
adc
fisubrl
int3
ljmp
pop
mov
mov
gs
outsb
cltd
clc
lods
lahf
add
sub
frstor
clc
arpl
test
popf
lahf
fidivrl
dec
cmp
cmp
in
and
jge
out
aam
enter
orl
jle
cltd
shr
call
test
repz
rclb
or
ja
out
xor
repnz
dec
cs
iret
and
scas
lea
mov
or
data16
insl
loopne
fcom
fimuls
xorl
xchg
and
ja
sti
push
fidivs
test
push
scas
ror
stos
mov
bound
aaa
mov
mov
sub
ret
fidivs
retw
gs
test
mov
ljmp
je
adc
push
adc
fsubl
or
xchg
les
mov
add
add
dec
pop
loop
icebp
test
and
pushf
sahf
mov
mov
cmpsl
or
sub
dec
add
dec
dec
adc
rclb
jg
jmp
ret
notrack
inc
mov
or
insb
jge
cmpb
sbb
scas
mov
shr
xchg
into
adc
sti
inc
loopne
orl
cmp
mov
xchg
fst
add
cmp
cmp
in
test
sbb
or
shll
cwtl
jae
jb
jl
fisttpll
loop
push
mov
xor
call
push
pop
aaa
mov
cmp
fidivrl
push
test
push
or
and
push
jns
mov
test
or
in
jle
pop
pop
in
lds
add
xchg
ds
xchg
fsub
mov
lret
push
and
sub
jns
or
aam
cmc
outsl
mov
sub
stos
jns
ja
jmp
xchg
lcall
mov
jne
test
rcrb
jge
adc
test
jmp
jnp
pop
ret
inc
in
inc
mov
cltd
pop
enter
xchg
popf
sti
out
pop
test
and
jle
pushw
int3
cmp
add
xor
std
adc
pop
fcoms
shl
add
shl
push
outsl
push
jae
into
mov
adc
sbb
scas
notl
imul
ret
sub
pop
ret
mov
cmpsl
sub
push
add
popl
bndldx
gs
andl
jl
cmp
ret
int
xlat
xchg
in
jmp
xchg
or
xor
insl
mov
into
pop
test
dec
xchg
sti
mov
mov
pop
aam
out
xor
aad
mov
adc
aad
jle
mov
icebp
mov
daa
xchg
int
cwtl
bound
mov
cmp
das
arpl
cltd
movsl
sahf
mov
adc
pusha
sub
stos
jmp
clc
jae
xor
cmp
fcmovnb
ror
std
lods
adc
sbbb
xchg
push
inc
mov
inc
cltd
jo
sbb
clc
inc
mov
jl
mov
push
scas
xchg
dec
jns
movsb
scas
dec
mov
dec
sti
inc
cmc
sbb
mov
pop
shr
lret
lret
filds
mov
adc
inc
iret
lods
insb
mov
enter
mov
lcall
aad
out
movsb
rorb
cs
cld
imull
or
mov
adc
outsl
in
sbb
and
fidivs
adc
xchg
adc
lods
out
mov
imul
lds
sub
dec
mov
std
mov
pop
in
fsubs
iret
add
add
and
and
xchg
mov
or
and
mov
cs
mov
ljmp
jge
pop
sub
std
adc
insb
add
sbb
xchg
and
xchg
push
arpl
cmpsl
lret
pop
call
adc
rcrl
fs
in
pop
popaw
stc
sub
sbbl
repz
addr16
mov
lea
or
pop
fwait
rcl
push
push
xor
push
mov
mov
push
cli
jp
push
icebp
sbb
js
adc
repz
lds
jno
pop
cld
cld
pop
mov
mov
sub
xchg
mov
iret
cmovg
call
jp
test
imull
mov
mov
orl
jb
xchg
stos
and
xor
scas
cwtl
pusha
pushf
add
test
sbb
mov
mov
data16
and
jne
adc
adcl
mov
fdivrs
adc
dec
outsb
das
js
fldt
inc
or
inc
lods
and
and
arpl
xchg
scas
lods
cmp
call
das
adc
pop
insl
shlb
fnstcw
mov
xor
pop
addr16
mov
inc
decl
cltd
xchg
add
jno
pop
ss
adc
mov
xchg
je
es
cs
outsl
pusha
adcb
lcall
xchg
jmp
mov
cli
insb
push
adcb
push
xor
and
fsubs
hlt
inc
adc
sub
ret
sbb
sti
push
lcall
xchg
pop
in
sub
hlt
orl
sbb
cmc
mov
rcll
insb
lds
inc
jnp
fisttpl
push
adc
or
mov
or
xlat
sbb
pop
xlat
jo
nop
les
jbe
mov
jo
dec
sbb
cltd
jnp
decl
fisubl
lret
in
mov
cli
mov
fwait
sti
jge
sbb
aad
movsb
sbb
out
add
cmp
push
mov
xlat
aas
shll
call
popa
cmp
fwait
daa
aad
sti
shr
mov
or
mov
repnz
int3
fcoml
clc
stc
loope
xor
and
adc
ret
dec
mov
ret
mov
inc
nop
adc
aad
xor
mov
aaa
dec
test
xlat
xchg
arpl
push
mov
push
and
push
adc
and
dec
pop
dec
pop
imul
addr16
call
xor
and
das
loopne
add
pop
pop
outsb
out
lods
dec
orb
out
mov
jbe
add
xor
cli
dec
mov
ljmp
arpl
pop
clc
mov
into
xor
stc
jo
shl
hlt
mov
rolb
pop
mov
outsl
in
sarl
stos
jnp
add
jp
sti
pop
xchg
xchg
add
xor
xor
addr16
xchg
push
cmp
add
sbb
mov
aam
or
lea
fs
lahf
fisubrs
inc
mov
scas
push
xor
daa
ljmp
inc
mov
inc
mov
pop
icebp
fadd
loopne
arpl
push
push
adc
nop
cmpsb
push
jbe
ret
cmpb
rdmsr
int
rcll
adc
push
or
fldt
popa
sbb
add
ljmp
jbe
fdivrl
mov
imul
js
into
jbe
add
pushf
outsl
xchg
or
push
inc
and
sub
xor
es
and
and
dec
mov
test
dec
rol
and
cmp
jo
mov
dec
push
leave
pop
push
adc
pop
mov
ret
je
movsl
and
dec
or
inc
push
sbb
dec
shll
cmovo
dec
hlt
and
adc
dec
cld
jge
add
insb
lock
js
xorb
dec
mov
leave
jns
js
aaa
test
mov
dec
lret
mov
adc
xchg
cmp
sbb
lds
cld
dec
xchg
xor
jo
add
jb
loope
pop
sti
jecxz
shll
aam
pop
xor
ljmp
fdivs
mov
pop
fwait
in
mov
insl
xor
mov
loope
sbb
xchg
adc
out
aas
xlat
push
mov
pop
adc
cli
cwtl
xchg
popf
mov
lods
xchg
pop
cmp
imul
dec
jbe
xchg
jne
outsb
int3
dec
xchg
jo
dec
dec
inc
inc
add
sbb
test
sbb
cmpsl
jmp
repz
mov
lcall
mov
gs
sbb
addr16
shl
push
in
or
xchg
pop
aad
arpl
mov
pop
inc
sbb
pop
pop
in
std
dec
xchg
xor
mov
ja
mov
pop
stc
xchg
dec
add
inc
or
shrb
in
add
mov
loope
lods
rolb
insl
jb
arpl
rcl
outsb
xor
xor
pop
cld
pop
stc
jnp,pt
pop
adc
pop
lcall
mov
or
out
mov
jge
pusha
mov
loopne
add
repnz
fldt
push
daa
or
movsl
inc
adc
or
sub
lret
cmp
pop
mov
int3
lahf
dec
inc
lret
cmpxchg
outsl
scas
cmp
stos
xchg
int3
incl
or
sbb
cltd
test
fdivl
push
scas
dec
push
into
push
mov
push
jno
and
loop
add
cmp
inc
cmp
mov
dec
inc
sbb
cltd
mov
testl
sbb
insb
dec
pop
cmpsb
stos
roll
insb
sub
rorl
or
test
scas
xor
adc
fsub
inc
dec
adc
cli
sbbl
imul
or
mov
arpl
outsl
mov
enter
dec
sbb
and
adc
and
push
insb
sti
cmpsl
mov
xchg
cmp
outsl
clc
nop
lds
and
cmpsb
adc
shrl
push
bnd
inc
jo
out
ljmp
or
dec
fstpl
sbb
xor
jns
mov
fidivs
ffree
outsl
lcall
xchg
fadds
int
out
xchg
shlb
inc
aad
xchg
js
mov
mov
dec
jge
jae
es
sub
clc
xor
movsb
clc
aam
lock
cwtl
sbb
cli
pop
mov
mov
fisubrl
add
aas
loopne
cmp
push
or
adc
lret
lods
outsl
mov
adc
fildl
mov
mov
out
sub
clc
in
jl
pop
mov
push
leave
xchg
roll
pop
je
sbb
iret
stc
inc
sub
ss
mov
nop
mov
movsb
ret
xchg
push
or
into
add
push
push
sbb
cmp
push
gs
xchg
das
and
jp
imul
or
or
mov
add
jp
dec
jb
test
mov
mov
sub
mov
lahf
popf
cmp
push
jne
xlat
or
repz
scas
xchg
fwait
cmpsl
stos
lcall
mov
movsb
cltd
mov
and
xchg
push
sub
andl
std
cmp
adc
es
lock
pusha
insb
mov
aad
mov
shl
cmp
shlb
or
movsl
cld
push
mov
cs
xchg
sub
lods
cltd
cmp
sub
inc
leave
xchg
ret
mov
jo
mov
in
inc
mov
and
dec
mov
sub
lds
adc
mov
fnsave
test
test
push
mov
mov
aam
idivl
loopne
sub
sub
paddq
xlat
insb
hlt
sbb
insb
or
jl
out
jne
mov
imul
out
jle
pop
out
pop
clc
enter
clc
push
scas
cmp
inc
nop
test
mov
adc
push
and
inc
adc
sub
loop
fcmovne
xchg
push
sbb
dec
inc
addr16
jnp
outsb
outsb
inc
inc
movsb
and
in
pop
inc
sub
out
das
imul
fadds
mov
inc
adcl
push
mov
or
addr16
cmp
sbb
xchg
adc
sub
sub
in
jnp
cmp
pop
cmp
sbb
mov
fmull
lock
push
mov
cmp
inc
clc
mov
push
rclb
lahf
pushw
xchg
and
cmpb
rcll
mov
cmp
fs
icebp
cmp
pop
cmpsl
and
mov
or
into
mov
inc
cmpsb
aad
cld
loopne
xor
xchg
push
stc
pop
mov
mov
adc
dec
sbb
add
or
stc
jg
sbb
les
mov
int3
or
jmp
testl
in
lods
pop
push
call
std
cmpsb
loope
andb
iret
call
mov
fwait
push
cmpsb
sbb
cwtl
dec
fs
jae
or
je
packuswb
dec
lret
jno
mov
mov
add
mov
sub
cmp
inc
gs
repz
stos
push
pop
mov
int
stos
mov
add
mov
cwtl
mov
jb
out
mov
scas
lret
mov
or
outsl
sub
cld
lcall
out
sub
xchg
pop
mov
fidivrs
adc
adcl
lret
inc
cmpsb
rolb
push
jecxz
push
ja
add
mov
js
pop
push
mov
add
outsl
stc
cltd
test
push
jo
push
popf
popa
fldenv
sub
mov
mov
push
and
repnz
fistps
sbb
movsl
pop
pop
pcmpgtw
jns
andl
cmp
push
mov
or
xchg
mov
sbb
inc
jge
aam
fsubp
lret
pop
inc
sahf
and
lods
mov
jb
cmp
jbe
cld
lods
pop
ror
fbld
ficomps
cmp
add
pop
dec
lds
xchg
and
divl
pop
mov
jbe
push
das
mov
cmp
and
hlt
push
loope
inc
and
mov
inc
sub
mov
ret
outsb
jae
inc
imul
cmpb
sbb
mov
push
pop
or
sbb
sub
fsubrs
xchg
bound
nop
push
or
pinsrw
cmp
adc
outsl
xchg
mov
adc
jns
inc
adc
test
aas
push
ret
je
mov
mov
sbb
xor
dec
sti
push
stos
push
sbb
test
xchg
daa
ljmp
faddl
jno
jecxz
cmp
mov
aas
bound
mov
ljmp
push
les
mov
push
arpl
test
dec
pop
lods
mov
call
lahf
jo
add
jl
sbb
mov
les
push
divb
fwait
mov
mov
dec
fnstsw
aaa
shr
pop
negb
lock
push
inc
inc
cmc
icebp
adcl
pop
sbb
mov
dec
mov
adcb
shrb
and
mov
mov
xchg
addr16
das
sbb
scas
sbb
mov
sub
rclb
ror
out
xchg
and
mov
add
xchg
adc
push
es
push
not
or
mov
ficompl
cli
cmp
es
mov
cmp
aaa
arpl
sbb
data16
in
das
pop
sbb
adc
and
out
shl
push
mov
int
push
inc
jae
std
pop
arpl
jecxz
pop
mov
scas
push
adc
cmpsb
imul
lcallw
cmp
xchg
rcrb
cs
xor
fmull
and
inc
lock
push
xchg
je
jbe
repz
cltd
xchg
fsubs
aas
pop
fwait
and
mov
clc
xchg
add
xorl
xchg
js
stc
sbb
test
aad
add
test
test
adc
ret
adc
shr
mov
jmp
jg
std
cwtl
pop
jno
cmp
pop
cwtl
cmc
cmpsb
out
das
push
in
sbb
or
pop
inc
loop
xchg
sbb
adc
sahf
push
sub
sbb
mov
pusha
cmp
add
xor
add
fwait
stos
popf
mov
pop
fistpl
insb
inc
jae
into
dec
ja
cwtl
lock
xchg
jle
push
clc
call
fwait
in
mov
aam
sub
fldl
add
adc
movswl
imul
aas
jp
js
add
and
or
imul
jae
in
and
cwtl
scas
mov
cmp
ljmp
add
jae
js
xchg
ja
xchg
aam
mov
aad
add
pop
jp
cmp
mov
push
sbb
repnz
inc
push
jecxz
mov
int
int
ja
daa
push
mov
test
and
clc
shrb
hlt
popa
push
mov
mov
sbb
adc
mov
aaa
xlat
sub
ret
adc
mov
or
inc
sar
push
sti
adc
jnp
leave
test
push
mov
sti
cmc
cmpsb
sbb
test
mov
daa
int3
mov
and
jns
mov
cmpsb
lret
add
jge
pop
shll
sbb
int
imul
js
into
cmp
in
stc
ss
hlt
push
cld
insb
xchg
cmp
sbb
rolb
push
pop
pusha
lea
push
cmp
add
ss
inc
inc
jg
scas
adc
repnz
push
mov
push
sub
jb
out
mov
sub
int3
movsl
xchg
mov
les
mov
bound
mov
fcmovu
loop
push
scas
sub
dec
fwait
mov
cltd
sub
mov
xchg
movsb
icebp
aam
mov
jns
mov
ds
push
inc
jl
mov
stos
idivb
movsl
xchg
insl
and
outsb
lret
jecxz
mov
rcrl
jmp
outsl
or
aas
xchg
add
pop
dec
add
xor
adc
push
les
sub
fsubrl
lods
fisubrl
push
or
inc
lcall
mov
or
xchg
pop
cmpsb
cmp
and
das
shrl
push
ds
fisttpll
push
in
mov
mov
aas
jge
js
or
in
neg
inc
mov
and
xchg
stos
pop
cmp
push
sarb
push
movsb
inc
ljmp
push
xchg
jge
and
mov
rep
outsl
cwtl
sub
inc
popa
cld
sbb
xchg
movups
aam
dec
leave
or
push
mov
and
inc
in
jecxz
mov
es
sub
mov
cmpsl
sbb
pop
stc
sub
pop
mov
push
push
cmpsl
mov
fiaddl
leave
popa
scas
push
enter
fwait
das
scas
dec
pop
dec
xor
mov
xor
inc
mov
negl
out
daa
jb
inc
int3
push
into
movsl
fimull
cmpsl
pop
mov
mov
in
pop
push
lock
xchg
cmp
inc
dec
adc
jns
sbb
pushf
imul
xchg
add
jmp
rorl
lods
jno
fdivrs
mov
inc
and
gs
leave
fidivrs
cmc
mov
cmc
test
shlb
shrl
and
add
mov
lret
shl
and
out
sti
dec
mov
cmpsb
js
dec
scas
mov
loop
aaa
into
xor
movsb
les
or
notb
repz
shlb
or
sbb
addr16
inc
dec
pop
pushf
repz
in
rol
inc
adcl
mov
out
lock
loopne
inc
jge
rcrl
add
adc
movl
adc
inc
xorb
mov
dec
mov
mov
add
out
push
jbe
jmp
mov
lock
xchg
icebp
aad
pop
pop
or
sbbl
lock
les
xchg
inc
xchg
fwait
inc
pop
call
mov
cmp
sbb
sub
mov
shll
push
icebp
mov
add
and
xor
ja
xchg
cld
and
out
outsl
iret
jecxz
xor
pusha
cmp
or
pop
mov
add
pop
push
out
inc
fwait
je
mov
outsb
addl
nop
sahf
xor
mov
pop
or
repz
mov
mov
int3
div
sub
adc
inc
sub
pop
mov
popa
loope
fimuls
ljmp
or
fwait
mov
mov
lods
push
jb
dec
sub
xchg
push
imul
push
dec
mov
cmp
cmp
xchg
es
jge
cwtl
shll
jge
sub
leave
sub
out
rcrl
or
add
xchg
cli
into
jg
cmc
fisttps
jns
mov
add
out
loopne
jnp
fimull
or
sub
das
ret
adc
dec
cmp
fwait
push
dec
call
out
in
lahf
inc
out
mov
aad
clc
int3
sub
int3
rcr
inc
rcll
mov
push
cmp
jecxz
mov
inc
jae
jg
mov
xchg
fcomps
xlat
jno
and
jg
out
mov
inc
cmp
pusha
xor
and
das
lds
out
fs
push
cmpsl
in
je
push
mov
out
aas
sub
mov
mov
add
popf
ret
hlt
popf
xor
cmp
sbbb
push
sbb
dec
popa
jo
in
xchg
fmuls
mov
vphadddq
push
imull
pop
pop
jne
inc
mov
inc
pandn
js
lods
xchg
lcall
mov
test
cli
scas
mov
pop
xchg
fbstp
outsl
xchg
xor
dec
pop
ja
inc
ret
jno
pop
cwtl
leave
jo
or
lock
xchg
pusha
movsl
ucomiss
cmpsl
jns
jnp
xchg
push
jmp
lock
mov
rcl
lahf
cli
mov
or
sbb
inc
mov
mov
test
cmc
xchg
push
dec
cmp
adc
jb
mov
rcl
loope
pop
cld
loopne
jnp
das
int3
ja
adcl
adc
inc
lds
in
mov
inc
mov
sub
scas
or
and
inc
sbb
loope
mov
jmp
jp
adc
notl
in
sbb
xor
add
nop
add
xor
inc
sbb
push
shll
jp
mov
jecxz
aam
out
dec
pop
fdivs
jns
and
fsubs
ror
jecxz
fcompl
xor
push
adc
fimuls
xor
mov
pop
mov
push
shlb
xchg
jb
sub
lahf
sbb
fiadds
ja
jnp
jb
push
dec
mov
inc
xchg
and
int3
jae
gs
movsb
out
dec
push
cmc
mov
jp
insb
mov
mov
call
lea
jmp
shl
jl
push
push
mov
adc
inc
and
push
mov
fstps
das
push
outsb
add
iret
add
jmp
adc
leave
or
push
mov
je
stos
push
cmc
scas
or
loope
jp
pop
lds
sub
lret
int
shr
xchg
jo
shlb
rolb
pop
mov
mov
stc
fs
aaa
cld
roll
shlb
js
jl
call
jecxz
pushf
push
out
mov
sub
inc
popa
lahf
adc
jne
cmc
jle
test
sub
test
add
sbb
rcrb
fs
xchg
aad
pop
dec
aam
mov
ret
insb
or
jbe
pop
sub
push
inc
insl
dec
mov
xchg
adc
subb
adc
cltd
scas
fninit
jge
mov
daa
pop
mov
in
push
test
lea
sbb
dec
cmp
jl
loope
mov
adc
ds
fistps
jg
in
ret
decb
loop
insb
lret
sub
in
ljmp
movsb
jecxz
jne
les
popf
mov
ret
sbb
and
dec
push
mov
add
push
jnp
dec
cmp
pop
mov
mov
ja
jb
test
lods
push
cmp
es
sub
push
addr16
push
shlb
inc
std
mov
add
xchg
test
push
repnz
mov
enter
dec
inc
pop
dec
enter
pop
mov
jno
push
daa
inc
sti
je
ss
adc
mov
inc
icebp
add
pop
aad
jbe
dec
repnz
bound
es
fwait
loopne
iret
xchg
dec
sbbb
dec
fcomip
jbe
inc
mov
imul
lret
testb
xlat
enter
mov
jge
push
flds
pop
xor
xchg
mov
lea
les
mov
mov
or
insl
int3
inc
mov
pop
in
pop
fsts
or
xchg
inc
out
cltd
cmp
nop
cmpsl
xchg
jb
orb
or
icebp
inc
mov
and
mov
out
jg
sub
mov
dec
faddl
cmp
jecxz
in
xchg
push
sbb
fsubrs
nop
xorl
lahf
test
xor
std
and
push
push
loop
lds
mov
lea
mov
pop
push
sbb
ss
shrl
test
jp
or
stos
mov
out
inc
outsl
rcrl
jbe
bound
mov
sbb
stos
or
in
incl
fstpt
dec
out
aaa
pop
in
pop
imul
push
clc
ret
bound
and
cmpb
lods
lods
jmp
leave
std
fwait
xchg
pusha
loop
cmp
and
or
addb
insl
sbb
and
aam
or
iret
sti
sub
movsl
and
loop
jle
pop
sub
pop
dec
nop
and
nop
pushl
jno
out
jge
sub
in
in
sbb
dec
adc
mov
pop
mov
shlb
push
and
sbb
dec
mov
mul
jns
leave
pop
sar
lea
lret
notl
hlt
es
shl
push
sti
push
lret
popa
bound
or
lahf
mov
adc
test
sbb
jg
movups
data16
xchg
and
sub
lods
pop
jbe
and
aaa
rcll
outsb
lock
dec
cs
xor
daa
push
out
sub
and
adc
mov
shlb
push
in
das
sub
dec
fsts
mov
pop
stc
rorb
sarb
or
sub
out
push
js
lcall
push
dec
fisubrl
add
into
dec
push
ss
lods
mov
xchg
rcr
repz
decl
xchg
pop
aaa
test
out
push
or
and
push
std
hlt
out
mov
rcrl
cmp
mov
xchg
ja
stc
arpl
push
push
cmc
sarl
aad
leave
movsb
cmp
mov
adc
inc
lea
in
cmp
xor
mov
std
inc
dec
inc
sti
enter
mov
push
jne
xor
dec
cmp
adc
int3
int3
cmp
cmp
fisubl
jbe
ret
or
mov
push
add
aas
pop
mov
or
fwait
stc
out
lods
mov
mov
xlat
sub
dec
mov
arpl
lret
push
jns
dec
pop
lods
shlb
jae
inc
push
test
xor
enter
xchg
jnp
andl
pop
xorb
add
inc
ret
aad
sub
das
popa
bound
out
sub
daa
stos
stos
sub
pop
jae
mov
aas
xchg
add
and
push
mov
loop
mov
mov
testl
adc
iret
icebp
mov
xchg
iret
insb
lret
mov
sub
in
cmp
rorl
insb
push
cld
add
mov
outsl
dec
push
xchg
in
lds
movb
out
dec
push
or
mov
pop
rcl
shrb
outsl
jae
fwait
mov
aaa
jne
jge
into
dec
sub
test
pop
jbe
or
and
aas
adc
pop
mov
lea
pop
pop
and
notl
inc
adc
insb
xor
xor
pop
in
mov
test
aam
movsl
aam
push
mulb
enter
adc
cmp
sub
mov
xorb
mov
mov
cli
mov
int3
mov
jge
faddl
lods
leave
cmp
inc
fwait
test
jmp
add
add
out
jge
mov
outsl
cli
das
mov
adc
aaa
cmp
cltd
lock
jb
enter
jno
stos
lret
int3
stos
dec
and
push
xor
pop
out
cld
aas
jo
jl
add
lods
xchg
jle
mov
into
shl
pop
push
mov
movb
adc
pop
mov
out
test
jecxz
xchg
cwtl
ret
lods
push
jl
and
xor
pushf
sahf
mov
xor
das
rol
xor
mov
jbe
addr16
dec
mov
inc
and
pop
and
pop
cmpsb
imul
xchg
stos
inc
inc
fs
and
jge
pop
cmp
test
xchg
push
adc
cmp
insl
mov
ljmp
notb
dec
jg
out
test
je
ja
popf
mov
jns
das
inc
jae
jge
imul
xchg
psubq
cld
popf
or
or
pop
es
and
xrelease
pop
data16
in
loope
adcb
jmp
fstpt
dec
jecxz
and
mov
mov
dec
and
cld
push
xchg
stos
push
cmp
out
pop
add
not
in
push
arpl
insb
mov
adc
arpl
mov
das
shrb
clc
idivl
imulb
lods
loopne
test
ljmp
fmuls
cmp
mov
or
xor
adc
outsl
test
loop
imulb
push
ljmp
adc
ds
cmp
pusha
xchg
pop
push
fcomp
xchg
pop
jl
mov
test
fstl
cwtl
pop
adc
arpl
add
inc
mov
stc
bound
aad
xor
mov
lcall
les
xchg
sub
push
push
push
xor
jo
orb
addb
sub
push
jo
mov
enter
and
nop
jae
std
push
push
outsl
ljmp
jns
repz
mull
fstl
sbb
jno
sub
es
jl
inc
mov
adc
add
dec
popf
jnp
insb
add
dec
in
repz
aad
rcr
mov
arpl
mov
mov
xchg
fcoms
int
loopne
dec
xor
and
jo
stc
je
or
lcall
inc
dec
loopne
mov
xchg
jns
mov
in
cmpsb
popl
pop
nop
xchg
pop
imul
out
jo
mov
inc
mull
mov
adc
pop
jb
mov
mov
ja
dec
rcll
xchg
jp
jmp
sub
jae
mov
push
aas
cmp
cwtl
in
fnsave
sbb
daa
cmpsl
sbb
add
sbb
cld
jle
sub
jle
xlat
faddp
inc
sbb
cmp
lock
cli
xlat
mov
cmp
or
sub
maxps
dec
adc
add
in
loopne
int
imul
fists
dec
push
ds
xor
adc
sbb
ljmp
jno
xchg
mov
sete
or
sbb
movsl
mov
cmpb
cld
mov
adc
icebp
fdiv
stos
cli
xchg
ja
inc
mov
adc
test
int3
mov
and
xchg
and
xchg
adc
leave
mov
data16
push
push
lds
je
lcall
ds
or
dec
scas
sub
adc
jae
sub
fdivr
aad
lock
scas
js
pusha
imul
dec
adc
mov
sub
out
roll
outsb
rcrb
jg
jecxz
xchg
sbb
shlb
nop
movsb
cli
adc
je
pop
out
jnp
mov
cwtl
in
popf
nop
data16
and
sbb
fisubrs
jns
mov
mov
aas
push
roll
js
mov
loop
gs
xor
xchg
jmp
adc
mov
lds
imul
jne
sub
ds
pop
or
jns
mov
scas
rcrb
xchg
mov
popa
and
dec
outsb
inc
lds
sysret
es
je
test
or
out
pop
scas
fsubr
insb
xor
lods
mov
dec
mov
cmp
xorb
or
jno
inc
sub
orb
adc
leave
pop
mov
xchg
cmp
xor
push
push
add
ficompl
pop
lcall
ret
inc
pop
push
mov
repnz
push
stc
repz
sbb
jle
jl
xchg
add
cmpsl
jmp
test
or
das
loopne
movsb
sbb
inc
lea
fwait
in
pop
mov
push
test
loope
scas
sub
dec
outsb
ror
sub
xor
fcomp
and
mov
jne
inc
dec
adc
pusha
sahf
jns
push
xor
cs
in
or
movsb
scas
add
push
pusha
add
mov
push
std
sub
add
add
aaa
xor
gs
cs
subb
ss
std
push
adc
divb
sub
or
adc
jg
cltd
mov
fiaddl
cmc
fcmovnu
aas
jge
push
div
push
xchg
js
pop
scas
lret
xchg
jl
stc
outsb
ljmp
jle
fldenv
cmpsb
imull
outsl
ljmp
iret
sub
cwtl
arpl
mov
mov
push
lret
mov
push
jae
stos
repnz
lods
cmp
xchg
movhps
dec
jae
stos
sahf
pop
push
movsl
stos
cmp
push
lahf
mov
sbb
mov
fwait
pop
imul
subl
mov
xchg
xchg
scas
pop
mov
movl
int3
fisttpl
mov
cmp
xchg
xor
rcll
lods
fstpl
aad
cli
or
shl
jge
sub
inc
pop
hlt
pop
cmpsb
inc
movsl
sar
cmp
test
fmull
xlat
bound
cmpsb
data16
xchg
lret
lods
ret
xor
inc
xchg
lahf
mov
mov
and
je
std
rcll
jnp
mov
jo
into
inc
add
daa
mov
in
mov
and
xor
xchg
shlb
cmp
cmp
adc
lods
lret
dec
adc
adc
or
xchg
jl
mov
out
pop
add
idiv
repz
xchg
or
imul
dec
aad
out
stos
add
xlat
out
mov
js
roll
xor
sbb
orl
in
mov
sub
in
inc
in
pop
mov
std
jle
stc
shl
lea
cmpsl
lret
xor
pop
arpl
lock
mov
loopne
mov
inc
dec
xor
jecxz
jge
xchg
les
daa
loope
push
cmp
lret
push
xlat
popa
fidivrl
jmp
hlt
jno
mov
dec
push
scas
in
addl
xchg
sub
iret
dec
shll
dec
mov
arpl
mov
adc
lods
and
jecxz
xchg
aad
xchg
pop
push
jle
dec
add
cmp
dec
jae
data16
sbb
xchg
add
sarb
xchg
and
add
dec
sub
test
pop
std
sub
into
pop
repnz
push
xor
js
adc
cmc
sbb
jnp
xchg
aad
data16
or
in
xchg
das
cmp
stos
and
ret
hlt
sti
push
enter
sbb
adc
mov
sub
or
fcompl
mov
rcrb
daa
xor
fcmovnb
dec
mov
iret
iret
adc
pushf
inc
jg
cli
stos
pop
pop
stc
xor
push
xchg
pushf
and
movsb
sbb
test
es
cmp
inc
fld
aam
mov
sar
mov
in
push
sub
and
pop
shlb
fmull
add
outsl
mov
dec
mov
aad
add
push
cmp
scas
adc
mov
sub
aam
ret
cltd
rcll
adc
jmp
xlat
adc
pop
inc
cmp
xchg
scas
outsl
ret
fistps
xor
push
xchg
out
fsubr
lret
fidivrs
dec
insl
into
xchg
mov
and
in
xor
sub
rorb
mov
pop
mov
leave
xor
cmc
cs
inc
jno
test
out
cmp
enter
cli
test
movsl
dec
mov
adc
jns
sbb
lret
mov
jae
js
roll
or
pop
rorl
fisttps
loopne
mov
int3
mov
ret
pop
bound
fmull
ficomps
jmp
fwait
mov
icebp
inc
lcall
cmp
ja
cvtps2pd
xor
xchg
push
mov
or
lret
ljmp
jnp
dec
pop
sarl
jno
testb
jle
fsts
pop
jmp
add
push
and
notl
fnstenv
movb
or
mov
adc
lods
sub
iret
lods
fldcw
movsl
cli
jle
dec
push
jmp
std
add
mov
cmp
adc
call
mov
xchg
pop
pop
mov
nop
pop
jno
dec
inc
arpl
xor
xor
push
in
dec
insb
mov
adc
jmp
mov
mov
xor
cmpsb
out
ds
sub
xchg
mov
dec
fadds
pop
ljmp
nop
rcl
jp
xchg
sbb
sarl
sub
roll
sub
fnstsw
int3
add
push
push
jbe
push
cmc
xchg
loope
je
bound
mov
and
xchg
fsubrl
sub
bound
cltd
adc
or
out
add
and
mov
lods
xor
cmpsb
add
push
lods
inc
lret
mov
scas
push
in
jmp
fildl
push
sub
inc
fisubl
cmp
inc
js
pop
push
adc
sahf
movsl
mov
hlt
aas
pop
insl
add
inc
cmp
negl
mov
pop
pop
cwtl
icebp
ficoms
jl
push
or
mov
out
in
cmpsb
jle
mov
inc
push
ss
jmp
lahf
or
lock
ss
test
fidivrl
jnp
addr16
lcall
test
and
in
jae
xchg
adc
daa
mov
scas
mov
bound
inc
into
mov
sti
jp
sub
mov
ja
adc
push
insl
sub
out
movsl
cs
or
adc
imul
jp
cmc
mov
sti
push
loopne
sbb
pop
int3
mov
add
xchg
sbbl
add
mov
ror
xchg
inc
in
or
cmpsl
insl
fs
xlat
dec
dec
in
cltd
call
push
dec
cmp
xchg
sbb
sbb
cmc
push
add
adc
adc
pop
scas
arpl
push
push
cmp
aas
cmp
cld
mov
cmc
xor
flds
mov
out
xchg
sub
test
xchg
xchg
dec
lock
int3
mov
push
mov
mov
cmc
dec
mov
jo
mov
fistl
mov
loope
jmp
movsb
cmp
xchg
sub
ffreep
push
fadd
add
mov
cltd
fldenv
das
shrl
int3
iret
shlb
mov
mov
js
sbb
xchg
push
stc
sub
jmp
mov
xchg
mov
outsl
sub
shr
push
adc
sub
or
push
mov
leave
pop
out
add
sub
rcrl
ror
aaa
lcall
loope
mov
cwtl
pop
es
xlat
pop
cmpl
out
adc
pop
in
adc
and
out
aad
mov
mov
outsl
lea
mov
cld
adc
imul
test
cmp
lret
pop
cmp
mov
or
add
xchg
lahf
jb
jb
xchg
leave
in
pop
add
mov
push
data16
out
and
shrl
inc
mov
ss
cmc
jo
outsl
xor
xchg
sub
sub
xchg
or
ret
hlt
es
cmp
dec
xor
pop
jb
aaa
add
popa
sti
jne
pop
mov
xchg
or
cmc
jl
push
or
mov
out
rclb
xor
popf
dec
mov
inc
dec
movsb
push
lods
and
sbb
out
rcll
int
xor
das
jmp
data16
scas
mov
int3
add
cmp
testb
dec
mov
cli
adc
pop
pop
inc
and
push
js
sub
mov
sbb
xor
pushf
insl
adc
test
loopne
cmp
xlat
sbb
lret
and
fnstcw
xchg
aad
addl
mov
pop
or
pop
add
xchg
dec
out
mov
lret
loop
jge
movsl
fdivp
lahf
xor
sub
jl
inc
int
daa
adc
filds
pop
lock
or
rcll
scas
push
pop
shlb
sarl
sub
dec
pop
mov
mov
xchg
push
in
mov
inc
add
and
rcl
dec
js
sti
xor
ljmp
ss
clc
pop
and
gs
rclb
movsb
add
sarl
adc
sub
int3
add
lsl
paddusb
xchg
jmp
int
cmc
mov
aaa
frstor
push
lock
sbb
adc
xchg
sbb
pop
mov
sar
push
inc
ja
es
pop
or
jo
insl
popa
inc
add
pop
cwtl
inc
push
xchg
test
sbb
idivb
mov
dec
les
or
sbb
pop
sti
mov
faddl
mov
rolb
sti
subb
sahf
rcl
mov
push
xchg
in
ds
mov
shrb
xchg
mov
add
add
add
xor
mov
inc
jne
adc
movsl
je
out
add
sub
jecxz
out
mov
mov
xchg
into
lods
daa
call
ds
xchg
jl
imul
pop
popa
pusha
cmpsb
xchg
mov
int3
int3
push
repnz
cs
dec
cmp
cmpsb
icebp
outsl
push
mov
das
adc
push
nop
xchg
inc
sbb
xchg
pop
sbb
push
cwtl
mov
xor
out
sbb
mov
aas
loope
add
push
mov
ss
jecxz
adc
fsubrp
sub
dec
sub
cmp
repz
sbb
rolb
repz
lcall
lock
mov
adc
lret
mov
enter
pop
pusha
jne
mov
or
les
jmp
cli
sub
std
in
ss
fwait
cld
pop
test
fcmovne
shll
stos
push
sar
sbb
jb
mov
mov
clts
out
decl
add
inc
inc
jp
pusha
adc
adc
test
sbbb
dec
or
inc
adc
add
arpl
pop
add
pop
lds
jge
cmp
sub
stos
jp
lahf
bound
jmp
mov
in
or
push
push
and
cmp
push
mov
fwait
loop
and
add
repz
cmc
mov
ds
mov
loop
notl
je
fistps
pop
hlt
arpl
dec
test
cmp
pop
aam
pop
and
inc
jb
outsl
fmul
jns
or
aam
adc
pop
movsb
std
imul
cmc
fsubrs
loopne
xor
std
sti
fidivl
push
cmc
out
pop
test
push
test
pop
arpl
roll
add
mov
push
push
les
sti
cmp
pop
push
fisttps
push
adc
xor
cli
push
pop
loope
jmp
cs
fstps
ljmp
mov
jle
dec
xor
fcompl
sbb
jnp
scas
push
push
imul
mov
ja
sbb
je
bound
dec
scas
out
int3
or
or
xchg
adc
jle
gs
pop
inc
cli
pushf
fsub
and
fwait
out
lret
int3
xor
scas
dec
jo
insb
xor
mov
lods
cmp
call
cmpsl
mov
cmc
arpl
lret
imul
aas
sarb
jae
or
inc
clc
out
das
stc
je
stos
dec
out
sbb
shrb
aaa
dec
aad
or
lcall
mov
ja
inc
push
scas
add
pushf
mov
jg
or
loopne
pop
jmp
xchg
test
ret
sbb
test
jne
test
cmp
lahf
mov
jg
loope
test
ret
pop
mov
pop
loopne
mov
aam
mov
sub
fwait
les
fmuls
cmp
push
negb
xchg
push
inc
lcall
int3
xchg
jmp
lcall
xlat
inc
cs
jecxz
sub
mov
ljmp
dec
shrl
cmp
push
jne
adc
xor
pop
dec
add
push
icebp
popl
sub
and
sub
test
dec
xlat
push
lcall
xlat
insl
pop
inc
popa
shr
insl
ljmp
pop
mov
xchg
roll
sbb
or
push
jmp
addr16
ja
clc
ret
add
jb
mov
fcmovnb
lods
addr16
add
dec
xchg
dec
sbb
add
inc
mov
mov
movl
lds
mov
stc
nop
lods
jae
popf
sub
fists
aam
in
cmovs
mov
xchg
sti
loope
out
xor
push
mov
lret
js
jge
fimull
dec
pop
xchg
jle
mov
mov
sub
lods
and
mov
negl
fldl
jge
mov
dec
mov
cwtl
mov
cmpsl
push
fwait
jecxz
ret
xor
or
in
xchg
stos
jo
and
pop
add
sub
and
inc
pop
fwait
daa
add
cmp
dec
loope
cltd
xor
scas
fidivrs
cmpsb
outsb
hlt
sbb
cmpsb
jns
cmp
adc
or
lds
cmpsb
jbe
shr
mov
cmp
in
iret
mov
fcoml
jge
iret
js
mov
jno
add
insb
lock
mov
adc
cmp
imul
inc
add
inc
popa
insb
add
push
sahf
fwait
cs
out
jl
dec
repz
or
inc
mov
outsl
lret
gs
pushl
dec
xchg
mov
jnp
std
ljmp
fbstp
and
inc
shr
sub
sti
inc
test
xchg
daa
daa
lea
fiaddl
ljmp
fisubl
fistpl
adc
jmp
sbb
scas
out
xor
and
inc
repz
push
push
inc
jle
std
sub
hlt
lea
es
add
push
push
pop
mov
hlt
xchg
pop
inc
icebp
outsb
cmpsl
ja
or
insb
lds
xor
xor
or
decl
cs
and
lret
xchg
adc
jae
ret
les
cmp
pop
ficompl
sbb
enter
fistpll
in
pop
out
mov
and
lahf
je
in
and
mov
inc
iret
outsl
add
loop
je
jp
scas
in
popa
push
data16
clc
sar
je,pt
or
in
enter
and
ret
andb
aad
mov
fimull
loope
push
lods
imul
ret
sbb
add
in
dec
repz
nop
ja
inc
cltd
mov
cld
popf
mov
sub
insl
cmp
mov
stos
aaa
neg
clc
pop
mov
testb
leave
adcl
sub
mov
inc
mov
sti
clc
add
mov
or
roll
repnz
js
or
sub
push
pop
pop
es
ret
lret
call
mov
push
sbb
rorb
inc
outsl
mov
scas
push
fsubs
dec
add
ja
js,pt
mov
cmpsl
dec
dec
jle
fimuls
push
enter
test
sub
pusha
in
dec
mov
dec
int
stc
mov
sbb
arpl
cmp
cmp
jo
popf
xchg
in
dec
jge
popa
push
add
dec
jle
fisubl
iret
adc
xor
add
adc
fdivl
sub
and
aad
push
sti
mov
mov
sub
out
or
jnp
repz
mov
imul
cs
popf
mov
pop
add
or
aas
xchg
dec
test
lods
lahf
test
mov
push
cmp
aam
add
inc
cltd
scas
jbe
or
inc
sub
das
idivb
scas
aam
sti
test
jmp
out
imul
lcall
cmpl
sahf
mov
mov
push
inc
xchg
ret
mov
xchg
inc
mov
xchg
lods
daa
mov
pop
scas
cmc
push
cmpsw
incl
pop
testl
pop
fistl
add
mov
sbb
jmp
popf
jo
mov
pop
subb
mov
xchg
cmp
jl
sub
push
jbe
enter
cwtl
mov
jno
andl
ljmp
stos
stos
bound
pop
loop
imul
and
and
dec
mov
inc
sbb
fcmove
idivl
cmp
popf
pop
lock
push
cmc
aas
cmp
or
or
clc
lret
jecxz
in
inc
je
push
and
mov
mov
xchg
inc
xchg
adc
inc
mov
and
cmp
cmp
push
mov
sbb
fimuls
push
hlt
mov
push
js
mov
cld
inc
add
lock
cltd
std
test
lods
add
in
push
into
pushf
stc
dec
movsl
xchg
jbe
shll
jo
jmp
mov
pop
rorl
fisubrs
stc
inc
mov
icebp
call
xchg
sub
and
int
shl
arpl
pop
sbb
icebp
cwtl
push
inc
test
jae
ss
mov
das
int
fdiv
sub
adc
jb
imul
imul
daa
push
fsubl
aas
imul
imul
int3
dec
xchg
shlb
pop
movsb
xchg
push
iret
xor
loop
int3
mov
xchg
xchg
dec
gs
inc
jl
or
pop
add
cld
ficoml
nop
out
adc
jp
in
mov
dec
or
aaa
cmp
adc
iret
mov
sbb
pop
gs
andb
negl
cld
add
inc
fcoml
mov
std
inc
mov
dec
fwait
dec
loopne
mov
iret
or
insl
xor
inc
test
test
and
mov
cmpsb
mov
sarl
cmc
pop
lods
stos
xchg
nop
sub
ja
orb
ds
mov
mov
xor
jp
dec
mov
rcll
add
jg
mov
mov
push
cmpb
test
fidivl
mov
rorb
xor
lahf
loop
fcmovbe
push
xchg
aas
aaa
inc
mulb
gs
arpl
inc
cmpb
xor
cli
sbb
xchg
fisubs
cmc
cmp
pop
add
cli
ljmp
push
divb
inc
pop
nop
mov
xadd
sub
rclb
out
cmp
mov
push
push
xchg
sbb
mov
int
push
mov
ss
push
mov
mov
pop
jne
fists
jl
dec
sbb
mov
shll
dec
or
es
pop
jae
cld
lahf
js
mov
fistpll
rcll
les
inc
lea
scas
test
pop
xor
cmp
cmpsl
out
incb
push
pop
cmpsl
pandn
xchg
jle
ficompl
xchg
inc
mov
mov
sarb
test
or
cltd
and
push
fs
and
dec
mov
cmp
mov
ret
clc
outsb
lods
add
in
fcmove
test
imul
sub
and
ret
bound
js
add
lods
decl
jp
sub
fistps
stos
or
iret
sub
lock
lcall
nop
sahf
mov
lahf
loop
push
fdivrl
sbb
push
inc
push
mov
xor
jo
mov
cmp
sbb
jmp
add
add
sbb
xor
icebp
adc
cmp
mov
jl
cmp
stc
je
insl
scas
xchg
insb
ja
es
sub
xchg
and
aam
or
mov
pushf
inc
stos
aad
pop
movsl
and
sbb
mov
test
pop
adc
sbb
scas
push
mov
adc
in
mull
popl
testl
adc
lahf
jb
sbb
mov
out
mov
xor
adc
test
sbb
mov
inc
jb
push
ret
sarb
inc
daa
out
inc
iret
subb
push
lods
sub
es
mov
sti
addr16
push
mov
inc
xchg
jae
add
cwtl
cmp
fdivl
and
xchg
and
jl
or
pushf
call
sub
in
add
dec
mov
lret
or
xchg
shr
aaa
mov
lods
imul
cmp
das
inc
and
mov
clc
popa
out
mov
xor
xor
cwtl
and
adc
xchg
mov
jge
scas
dec
std
xlat
jno
lahf
fstp
push
sub
leave
adc
push
cmpsb
xor
adc
push
sub
pushf
dec
sarb
cmp
aaa
stc
and
jb
xchg
out
xchg
mov
jge
sbb
jp
mov
enter
cli
loop
pop
lea
cmp
out
xor
test
fwait
loope
test
out
test
mov
lret
into
int3
or
iret
inc
pop
nop
lods
or
popa
cltd
js
and
push
adc
bound
push
out
mov
fldenv
notl
roll
pop
xorb
pop
sbb
mov
and
and
mov
aam
mov
aad
and
sub
aam
pop
inc
mov
push
dec
xor
sbb
movsl
push
xor
mov
jge
mov
xchg
jo
inc
pop
addr16
push
xchg
dec
mov
lret
fcom
rorl
or
cwtl
jle
xor
jg
push
and
pop
fisttpl
out
mov
sbb
loop
xor
imul
popa
and
lock
imul
repz
and
mov
js
push
aad
loope
ds
shlb
sbb
dec
cmp
add
jb
push
xchg
das
lcall
pop
adc
adc
push
jmp
in
mov
mov
leave
mov
popa
leave
int
sbb
inc
mov
mov
cltd
gs
es
je
shlb
cmp
stc
xchg
inc
push
jbe
out
or
ljmp
leave
or
icebp
push
mov
adc
pop
test
push
xchg
mov
mov
sub
test
sub
cmp
imul
sub
xor
shrb
cmpl
gs
outsl
fsubl
adc
aaa
mov
pop
lods
std
in
sbb
cmp
add
mov
leave
pushf
aas
and
int3
jecxz
out
stos
xor
xor
and
pop
pop
or
fidivl
jmp
orl
loopne
dec
or
pusha
dec
orl
and
arpl
rorb
js
test
xchg
addr16
xchg
popa
lds
jp
call
stos
mov
add
fidivrs
pop
cmp
iret
pop
ss
test
out
cs
jl
mov
jg
push
lods
pusha
pop
loope
inc
in
fiaddl
jle
xor
push
sahf
adc
out
sahf
push
or
nopl
push
arpl
push
andb
mov
mov
out
mov
xchg
pop
mov
arpl
dec
imul
jnp
cmp
push
fisttpl
lods
in
xor
aas
imul
lea
pop
inc
int
std
jmp
push
js
inc
in
jmp
push
test
test
out
sub
push
movsb
pop
aas
jnp
repz
xchg
fimuls
loop
mov
and
inc
add
cmp
and
leave
and
imul
sub
jnp
sub
xchg
add
leave
xor
and
mulb
nop
xor
jle
je
xchg
aad
out
in
es
fwait
cmp
sarb
sub
dec
hlt
jge
data16
mov
inc
out
inc
insl
adc
dec
mov
les
stc
hlt
mov
xchg
sub
decl
and
add
or
mov
mov
in
lods
jbe
repz
stos
jmp
in
pop
outsl
loope
scas
mov
into
inc
loop
xchg
stos
add
dec
sbb
and
les
inc
neg
cmp
scas
xchg
push
adc
jno
sbb
pop
mov
data16
cli
iret
jns
inc
jge
imul
adc
imul
xor
shll
imul
dec
push
cmp
push
popf
jmp
es
jns
cwtl
dec
mov
or
lea
adc
iret
pushf
xchg
xchg
mov
push
sbb
pushw
sahf
jns
dec
and
imulb
xchg
lahf
das
lcall
pop
ret
out
aam
imul
decb
ss
test
fcomi
sbb
mov
adc
jo
mov
xchg
fisubs
popf
fistpll
add
notl
imul
rolb
js
shrb
pop
inc
or
adc
xlat
sub
jne
xchg
or
cmp
and
fwait
jp
das
fstl
sbb
aam
in
mov
ja
inc
jecxz
imul
in
int3
pop
jb
cmp
fidivrs
xor
pusha
jg
test
dec
dec
je
clc
sub
inc
xor
jae
inc
rcrb
mov
hlt
xchg
addr16
imul
push
mov
mov
gs
adc
adc
cmp
and
sub
and
jl
push
in
clc
loopne
push
xchg
push
ljmp
adc
cmc
push
rcrl
fimull
loope
adc
sub
or
adc
push
insb
pop
inc
roll
sub
sarl
xchg
shl
jp
fidivl
inc
mov
data16
aad
cmp
xor
pop
nop
pop
and
cmp
dec
imulb
fcmovne
shrb
rep
lcall
rcll
in
arpl
push
inc
stc
scas
jmp
cld
cmc
mov
sub
nop
ja
or
rorb
jb
mov
fidivl
xchg
es
inc
into
jnp
mov
xlat
push
xlat
push
push
sbb
shl
icebp
fsubl
in
insl
or
loopne
andb
dec
and
inc
mov
mov
mov
lds
nop
jp
mov
aaa
mov
pop
pop
xor
les
loop
xchg
or
loope
xchg
fmull
mov
mov
dec
popa
pop
push
aam
stos
xor
cli
jns
in
test
jo
imul
push
into
or
cmpsl
jl
cmpsl
les
mov
dec
xchg
mov
inc
shll
and
sub
or
fdivr
mov
xor
mov
dec
lock
fisttpll
jg
xchg
mov
mov
dec
pop
decl
push
mov
fsubs
inc
xchg
push
pop
lahf
and
cmp
mov
adc
mov
ret
pop
hlt
adc
pop
cmp
xor
out
mov
jl
stos
lret
clc
pop
mov
fadd
rcll
cmpsl
ret
mov
divb
ds
in
mov
js
fwait
jl
cltd
cmpsb
mov
out
mov
mov
xchg
lods
divb
stos
jp
ja
enter
xchg
or
and
push
outsl
in
cmp
fwait
in
mov
adc
sahf
cli
loopne
xor
pop
aaa
or
push
ret
fldl
mov
mov
lock
mov
pop
hlt
scas
int3
iret
sarl
and
aam
mov
jl
push
push
inc
cmp
lods
xchg
sbb
jl
pop
dec
mov
add
mov
arpl
js
lock
and
movsb
shlb
and
stos
imulb
lds
pop
mov
push
xor
dec
push
push
dec
cs
test
or
repnz
ret
lahf
sub
cmp
sbb
fsubr
in
les
or
inc
sub
adc
and
sub
subb
imul
mov
imul
das
pusha
push
pusha
lods
dec
scas
sbb
orl
or
cmpb
mov
xchg
imul
jmp
mov
lds
test
call
loopne
call
sbb
add
sbb
sub
sub
fiadds
sbb
lea
sbb
push
or
stos
sahf
mov
mov
ret
les
or
cwtl
ficoml
inc
sub
cltd
mov
mov
mov
pop
cmc
xor
mov
push
inc
cmp
jge
xchg
mov
mov
xor
mov
lret
out
ss
jp
jg
jle
lret
push
jl
stos
enter
cmp
pop
xlat
int3
popf
mov
inc
cmp
cwtl
cwtl
daa
loop
jno
push
jb
mov
or
ret
dec
mov
repz
push
stc
dec
pop
sub
sub
dec
jne
or
xrelease
leave
das
xchg
push
dec
sahf
pop
enter
cmp
repz
xchg
cli
cmp
sbb
repnz
inc
les
movsl
out
aad
push
xlat
jmp
popf
inc
or
lahf
mov
sub
cmp
leave
mov
push
or
fcmovb
add
movsb
ret
test
sub
js
loop
jp
add
bnd
jge
int3
rcrl
ret
xlat
pushf
pop
bound
pushf
je
sbb
sbb
test
popa
js
dec
mov
fcompl
out
add
test
in
jle
adc
lea
stos
add
sbb
fisubl
cs
adc
mov
test
mov
imul
or
dec
rol
arpl
jmp
ffree
adc
xor
sub
popf
test
mov
adc
scas
js
stos
cmp
pop
fistpl
xchg
rcrl
jl
or
jae
fld
outsb
cmp
push
repnz
add
lods
sbb
int3
insl
ret
std
sbb
or
xlat
movups
pop
cmp
jecxz
mov
mov
pop
aam
sub
add
adc
outsl
cli
repz
es
inc
nop
mov
pop
mov
test
and
enter
aad
xor
insl
or
nop
jp
popa
add
pop
add
jg
jae
pop
stc
jae
adc
mov
test
sub
adc
adc
cmp
mov
js
outsb
out
fisttpll
scas
loope
pop
push
push
adc
dec
insl
int
pop
mov
dec
fdivrp
inc
lahf
jmp
sub
push
dec
pop
inc
inc
and
cltd
aad
sbb
cmp
cmpsb
insl
sub
stos
daa
dec
repz
cmp
pop
popf
movsb
dec
adcl
aaa
mov
call
pop
pop
bnd
cmovne
imul
cli
mov
lds
inc
pop
cltd
icebp
outsb
cmc
loop
movsb
ja
or
imul
cmpsb
rcl
mov
inc
cmpl
loopne
xchg
loop
rclb
mov
xchg
cltd
insb
pop
jb
push
xchg
pop
jge
pop
mov
or
jo
aas
hlt
adc
je
loop
sbb
jmp
popf
xor
sub
lahf
std
mov
scas
xchg
js
ret
adc
rorb
addr16
shrb
hlt
test
in
and
icebp
sbb
pop
imul
or
push
in
mov
mov
dec
mov
stc
out
out
dec
and
and
sbb
outsb
or
push
xor
adc
push
jb
loop
push
aam
push
sub
add
lods
pop
and
sub
cmp
xor
sub
pop
movsb
push
in
jl
mov
ss
leave
rcrb
xchg
cmp
or
pop
mov
and
mov
dec
idivl
lods
out
daa
sub
jnp
pop
lods
lret
mov
push
pusha
mov
dec
arpl
mov
dec
sub
loop
sbb
xchg
sbb
lcall
imull
mov
movl
push
inc
add
dec
dec
enter
fucomi
in
push
fsts
jmp
sar
mov
mov
mov
cld
and
rclb
mov
or
in
lods
push
sub
test
out
push
xor
movsl
scas
sub
mov
mov
push
pop
aad
mov
inc
popa
out
icebp
mov
jb
js
mul
xchg
jns
sub
adc
and
lods
mov
jmp
imul
and
add
add
fwait
dec
mov
out
rorl
pop
aam
sub
pushf
aad
or
lock
dec
lods
aam
fbld
pxor
pcmpgtw
or
in
pop
es
and
js
pop
xchg
xor
jmp
imul
fwait
dec
pop
frstor
push
mov
ret
cltd
mov
and
xchg
stc
loope
lahf
in
les
aam
rorb
jo
mov
sbb
loop
test
or
fcmovb
sahf
rcll
lds
pusha
adc
pop
lods
les
mov
js
jae
out
andl
xor
push
adc
mov
and
and
arpl
cwtl
insb
sbb
and
and
pop
cld
js
xchg
daa
into
mov
decl
jnp
bound
push
lds
inc
gs
mov
push
inc
sbbb
xor
imul
stc
mov
pop
xchg
mov
popa
idivl
adc
dec
mov
loope
ret
mov
cmp
or
ja
inc
test
imulb
cli
loopne
fiaddl
jno
out
sub
roll
je
std
push
mov
mov
inc
aam
pop
cli
clc
or
jg
test
xor
mov
ss
adc
or
mov
mov
push
shll
pop
test
cmpsb
xchg
data16
sub
stos
sub
pushf
repz
sub
int
leave
xchg
in
mov
mov
mov
xchg
clc
imul
lock
out
jno
je
sub
xchg
pop
xor
pop
pop
inc
mov
dec
jae
sbb
lods
mov
nop
adc
cmpsb
lds
and
jbe
fisubrs
out
pop
mov
sub
iret
es
sbb
xchg
test
fildl
imul
in
jb
pop
mov
xchg
cmp
and
xor
daa
xchg
inc
mov
dec
or
mov
es
lcall
call
xchg
push
xchg
add
cmp
fldenv
mov
sbb
insb
xor
xlat
shl
cmpsl
lock
bound
mov
or
mov
imul
stos
lock
sbb
dec
fistl
cmpsl
leave
push
lahf
out
out
push
clc
mov
adc
fcoms
inc
loope
inc
pop
jecxz
mov
lock
mov
lds
sub
je
inc
shrl
xchg
or
sbb
rcrb
lea
sub
adc
fstps
jne
sbb
fwait
jne
mov
into
inc
mov
sarl
imul
testl
out
decb
in
xor
push
or
ljmp
xchg
mov
adc
push
mov
mov
fnstenv
dec
roll
test
rcrl
jb
cmp
imul
pushf
into
loopne
fdivr
js
hlt
fsubl
and
jecxz
xor
mov
clc
cmp
cmc
js
test
mov
movsb
out
ss
in
jmp
out
sub
inc
ret
incl
scas
arpl
pop
roll
sbb
jge
fidivrl
jl
pop
mov
mov
fs
dec
mov
movsl
icebp
add
add
inc
rorb
add
mov
std
adc
add
ds
lahf
mov
add
imul
shll
or
out
xchg
add
aaa
and
dec
jmp
push
sbb
out
ror
fdivrl
int
cmp
lock
lds
sbbb
sub
stc
push
lods
jmp
pushf
jecxz
in
dec
repnz
jae
push
or
push
stos
lea
dec
xor
mov
mov
and
pop
negb
sub
sub
adc
mov
movsl
pop
or
or
or
jge
ret
push
xchg
ss
jne
lds
dec
cmp
cmpsb
pop
cmp
outsl
shll
adc
lods
into
adc
sbb
cmc
ds
jnp,pt
pop
aas
push
test
and
pop
mov
enter
rcrb
out
int3
cltd
inc
dec
dec
imul
jb
hlt
pop
mov
jbe
icebp
orb
jp
mov
call
xor
push
sbb
pop
mov
sahf
adcb
testl
testl
daa
je
repnz
pop
mov
movsl
ljmp
lahf
jnp
jp
or
dec
lods
add
push
imul
push
sub
and
dec
stos
ret
scas
insl
jle
fwait
loope
ret
lods
inc
aad
mul
sub
mov
inc
popa
push
data16
or
or
cmp
push
dec
jb
xor
ret
rolb
addr16
rcrb
dec
mov
and
lret
inc
fnsave
dec
lea
push
mov
leave
mov
jns
stos
xor
popf
sub
jbe
mov
insb
sub
loop
sub
mov
adc
jne
sub
ds
shrl
stc
mov
sahf
lods
dec
dec
imul
xor
mov
fsubrs
ljmp
in
incl
xchg
lods
sub
push
pop
ret
mov
push
mov
add
mov
xor
decl
lods
mov
test
dec
sbb
mov
jecxz
push
jns,pn
popa
test
jl
notb
mov
loope
mov
dec
out
mov
and
movb
test
xor
cmp
pushf
cmp
or
rolb
pop
xor
lock
pop
fnstcw
popf
mov
cmp
mov
cli
out
mov
adc
pop
mov
int3
cmp
or
ja
or
sbb
sbb
fwait
lahf
into
pop
mov
sub
jecxz
dec
test
push
hlt
hlt
sbbb
scas
pop
repz
shlb
sub
adc
loope
inc
cmpl
mov
lods
push
mov
addr16
sub
fbstp
shr
pop
or
shrb
push
rorl
dec
xchg
mov
or
cmpsl
in
les
jmp
test
and
cmp
jg
mov
outsb
lock
xchg
cmpsb
cmp
data16
cmpb
data16
adc
pop
push
mov
cmp
fimuls
enter
movsl
dec
cltd
cmpsb
push
std
jecxz
xchg
xor
mov
or
inc
rcrb
imul
xor
inc
pop
sbb
pop
adcl
imul
fcomps
and
enter
jl
xor
enter
scas
adc
mov
cli
stos
lods
cwtl
rcrb
rol
cwtl
cmp
stos
add
clc
pop
leave
adc
icebp
mov
in
mov
add
push
jne
mov
cmpsl
ret
mov
int
fcmovnbe
fldenv
xchg
mov
xchg
mov
aad
sahf
and
lcall
fdivr
sbb
in
jmp
dec
and
lds
out
xchg
fwait
mov
or
dec
lcall
jl
mov
popa
jbe
and
ds
in
stos
jno
inc
stos
inc
fistpl
and
mov
test
inc
pop
jno
fldenv
pop
mov
data16
hlt
jno
js
and
mov
xor
scas
cs
ret
push
jle
stos
in
cmpsb
pop
les
arpl
in
push
gs
lods
mov
mov
pop
das
lea
add
adc
insl
and
mov
xchg
inc
cmp
fisubrl
rclb
dec
adc
data16
add
jb
push
inc
xor
mov
xchg
movsl
aam
cmp
in
repnz
inc
icebp
xchg
jnp
cmp
adc
movl
mov
or
jmp
mov
movsb
mov
pop
dec
mov
daa
cmp
mov
adc
push
mov
xlat
inc
stc
pop
mull
pop
cmpsb
jne
jne
testl
xchg
ljmp
aam
inc
out
push
gs
dec
movsb
sbb
dec
xchg
lret
and
out
sub
test
or
pushf
fimuls
fndisi(8087
sub
shrb
mov
out
xchg
fwait
mov
add
fwait
jl
lret
mov
js
flds
lcall
movl
add
das
jge
inc
rol
xchg
repnz
repz
out
add
aas
popf
push
sub
push
pusha
pop
push
loope
lods
and
inc
repnz
sbb
mov
mov
ja
and
pop
adc
mov
inc
or
inc
push
xchg
xlat
inc
lods
test
mov
sar
push
mov
in
adc
xor
add
out
sbb
pop
inc
outsb
adc
insb
addr16
in
popaw
daa
pop
dec
xor
out
jmp
sbb
cld
xor
mov
pushf
shrl
pushf
pushf
add
mov
addr16
data16
imul
out
cmpsl
xchg
popa
adc
pop
shl
push
popa
dec
outsb
iret
sub
pop
inc
add
push
adc
mov
and
loope
mov
add
outsb
sahf
icebp
roll
fisttps
shll
or
push
adc
push
xchg
add
fcoms
add
addr16
add
fcomip
cli
je
cmpl
fldl
mov
fnstcw
inc
iret
out
cmp
push
aad
outsl
dec
aaa
push
int
movsb
les
adc
rcrl
xlat
arpl
lods
ud0
pushf
sub
fucom
popa
and
add
push
loop
inc
clc
add
add
push
jmp
ret
ret
pop
and
push
and
into
dec
fwait
sub
push
jbe
xlat
popf
outsb
out
jno
jecxz
ret
nop
xor
mov
call
lcall
jnp
test
sbb
xlat
ret
out
xchg
inc
inc
push
ss
mov
int
in
push
hlt
jo
testl
imul
mov
push
push
loop
out
dec
push
nop
dec
mov
cs
and
cmp
adc
xor
clc
cmp
pusha
fisubrs
jne
std
test
pop
jmp
sbb
lock
test
sub
cs
rcrb
lret
adc
imul
jne
test
out
icebp
cmovl
popa
mov
cmpsb
mov
and
dec
mov
xor
add
sub
jo
bound
in
imul
mov
imul
popf
mov
enter
imul
jecxz
inc
jno
push
dec
push
cmc
pushf
bound
into
xor
lock
sbb
mov
imul
icebp
xor
push
jle
lea
inc
xor
jp
add
xor
pusha
sar
xchg
cmp
mov
cmpb
mov
push
or
aaa
xor
dec
cmp
nop
adc
jg
jns
mov
xor
les
sti
mov
sbb
outsb
sbb
jno
fisubrs
push
cltd
mov
aam
inc
lock
hlt
add
iret
mov
and
test
sbb
sub
add
shr
sbb
movsb
mov
push
dec
inc
mov
push
mov
cli
sbb
xchg
cmpsb
movsb
out
cmp
push
push
mov
test
and
sbb
push
clc
mov
ud1
imul
and
rep
fsubp
push
pop
sub
outsb
push
jmp
out
cmpsb
jecxz
call
pop
negl
insb
sub
fwait
mov
mov
jl
mov
adc
push
hlt
xlat
push
or
jbe
mov
xor
add
clc
ja
inc
sbb
les
push
arpl
sbbl
jne
pop
xor
imul
jno
outsl
mov
sub
in
adc
push
fxtract
mov
out
fdivs
sub
ret
adcb
inc
lahf
lods
mov
in
lds
and
adc
ss
jo
mov
xchg
outsb
movb
xchg
mov
mov
cmovg
inc
popf
aad
lods
ja
test
pop
push
lds
repz
or
sahf
nop
and
dec
cld
mov
test
call
cmpsl
push
pop
mov
mov
pusha
fistl
jbe
addl
push
or
es
and
outsb
ljmp
mov
pop
xchg
test
dec
movsl
movsb
fldcw
xor
mov
ss
mov
mov
icebp
or
pop
scas
in
popa
and
int
dec
adc
and
test
pop
test
cltd
int
jge
dec
jmp
xor
out
inc
or
dec
aas
ljmp
dec
mov
xchg
mov
lock
aad
dec
jb
mov
js
and
cmp
dec
push
fs
sbb
std
int3
int3
mov
arpl
sub
dec
roll
jne
mov
jnp
cs
pushf
insb
arpl
adc
jecxz
sbb
xor
xchg
in
push
imulb
outsb
xorb
mov
push
mov
and
fwait
sub
std
push
mov
pop
sbb
jo
mov
push
or
and
stc
cmove
aam
push
jge
xor
and
mov
pop
lods
xchg
aam
int3
push
jbe
pop
dec
push
sub
and
jbe
hlt
repnz
int3
shr
sbb
inc
sub
mov
xchg
js
sub
inc
sarl
and
dec
fisttps
shll
imul
sbb
cmp
movsl
movsb
les
hlt
loope
add
movsb
out
std
push
lods
movsb
push
cmp
mov
aaa
add
xor
imull
std
cld
dec
hlt
sub
lahf
cmp
xor
repnz
int3
fistpl
mov
xchg
int
inc
lret
fimull
aad
mov
mov
addb
mov
mov
bound
nop
fldl2e
loop
fldcw
mov
lahf
xor
xor
pop
pusha
sub
xor
push
dec
int
pushf
mov
fidivs
and
lods
cwtl
mov
adc
add
loope
das
push
pop
lret
or
int
lods
xor
mulb
bound
xchg
mov
adc
dec
cli
xchg
jne
out
adc
dec
mov
cli
repnz
sarb
mov
lahf
and
fmull
std
popa
out
sahf
sahf
ret
jmp
pop
and
mov
in
sub
out
xor
fwait
xor
sbb
enter
adc
xchg
xchg
ljmp
xor
out
xchg
mov
adc
jp
movsl
mov
movsb
add
dec
daa
cmp
mov
jge
stos
popa
pop
fiaddl
ds
mov
inc
mov
xchg
lock
mov
sahf
mov
cs
dec
shrl
push
fs
js
or
popf
out
and
cmp
iret
jp
or
lahf
cmp
adc
adc
push
imul
inc
jp
mov
mov
repnz
sarb
loop
movsl
in
mov
add
mov
test
loop
jnp
movsl
jbe
or
ljmp
xor
or
cmp
add
xor
inc
xor
ja
inc
dec
sub
pop
addb
adc
push
xchg
rcr
stos
mov
pop
xchg
cmpsl
add
jge
sbb
lcall
leave
inc
or
mov
mov
clc
push
jp
inc
inc
mov
push
mov
mov
repz
addl
and
add
push
mov
adc
fnsave
jno
xchg
mov
jmp
fsubl
popf
lods
hlt
mov
das
cli
shl
adc
mov
jb
mov
inc
or
sub
xchg
xchg
das
xchg
shll
je
xor
cmp
inc
imul
mov
dec
xchg
jmp
mov
loope
jnp
jl
sub
add
mov
mov
sbb
inc
push
test
or
push
leave
mov
leave
out
sti
out
testb
dec
dec
bound
and
sub
adc
or
sub
mov
sbb
mov
arpl
shrl
sub
test
popf
jl
ret
outsl
outsb
xchg
or
and
ret
pop
inc
jge
adc
jl
xlat
shll
xchg
outsb
push
cmp
enter
sahf
lret
addr16
mov
jle
pop
repz
sub
pop
inc
mov
adc
add
sahf
fcomps
push
mov
cmp
rorb
dec
mov
std
push
cmpl
addr16
inc
cmc
jl
lea
fldenv
push
push
daa
push
xor
jp
inc
add
xchg
dec
icebp
hlt
push
pushf
mov
int3
mov
das
inc
icebp
aas
fisubrs
int3
jecxz
icebp
cwtl
sub
jno
cmp
test
xchg
push
mov
or
push
push
sbb
es
das
or
les
or
mov
sbb
clc
enter
fxch
inc
mov
cmp
cmp
push
or
aad
rolb
inc
pmulhw
test
pop
jge
cwtl
movsl
fldenv
pop
add
mov
lods
inc
sub
fnstcw
stos
mov
pop
aaa
lods
or
and
fsubp
leave
xchg
lahf
jecxz
test
or
jge
lods
mov
mov
negb
xorb
sbb
or
dec
test
inc
xchg
into
nop
pusha
movsl
rcrb
xor
cmpl
fstps
and
and
mov
lds
pop
repnz
test
jae
pop
mov
mov
in
hlt
pop
les
adc
mov
fwait
pop
and
in
test
jno
jg
lahf
mov
mov
xchg
cmp
bound
lock
enter
bound
sbb
cmpsl
mov
out
movsb
mov
xor
pop
cmp
mov
cmp
call
adc
jl
dec
andb
dec
mov
cs
int3
pop
mov
out
adc
mov
push
mov
icebp
daa
jns
into
lret
fistps
adc
push
inc
aaa
mov
xchg
ss
ds
cmpsl
fucom
bound
inc
stc
mov
stc
mov
insl
addr16
mov
or
fnstenv
xchg
mov
lds
outsl
jge
loopne
jb
sahf
rolb
dec
sti
push
mov
pop
notl
insl
aaa
jl
aaa
pop
adc
out
inc
rorb
sbb
sub
filds
push
movsl
loop
inc
inc
inc
adc
mov
loopne
insb
lock
pop
jle
lret
mov
cmp
mov
and
inc
push
jle
je
lret
fdivrs
xor
add
in
out
jno
nop
push
pusha
mov
pop
out
lds
dec
out
pop
es
pop
in
hlt
and
mov
jbe
cmpl
ljmp
add
pop
cld
dec
sbb
xchg
popf
decl
and
dec
xchg
adc
dec
mov
mov
xchg
xor
jmp
cmp
ljmp
dec
mov
insb
rcl
mov
out
lock
push
dec
pop
mov
aaa
pop
and
sbb
push
push
jns
mov
orl
insl
sub
xchg
aaa
outsl
xor
clc
jns
ja
in
sub
ret
mov
out
xor
dec
dec
inc
leave
xchg
ret
push
out
jbe
sbb
add
mov
jns
add
js
scas
inc
jne
sbb
push
bound
inc
push
es
mov
dec
push
daa
fimull
pop
int3
dec
lea
out
clc
fsubr
daa
fistl
push
popa
incl
push
fisttpl
je
mov
leave
and
fsubl
lods
jge
dec
outsb
in
movsb
daa
cli
roll
in
inc
inc
movsl
rcll
dec
mov
adc
ror
inc
adc
pushf
and
movsl
andl
cmp
fnstsw
je
mov
push
sub
jecxz
mov
aaa
push
cmpsb
add
inc
or
sbb
sti
cmp
jecxz
mov
mov
subb
xchg
sbb
push
incb
insl
cld
lds
sbb
shr
imul
fimull
minps
in
mov
mov
imul
push
or
mov
sub
sbb
call
lock
repnz
es
dec
add
jle
jg
push
pop
aas
ss
mov
xor
fstpt
adc
dec
pop
xor
xchg
mov
outsb
arpl
push
pop
testb
ret
call
jnp
push
xchg
repz
mov
xor
idivl
mov
mov
hlt
aas
jle
cmp
ds
repz
xor
js
movsb
xor
imulb
into
ds
rol
add
push
lcall
and
imul
pushf
jp
push
stc
pop
add
imul
cmp
cmp
adc
sahf
into
jae
mov
cli
lret
adc
pop
movsb
in
or
push
jl
dec
lock
inc
outsl
icebp
inc
frstor
mov
and
mov
loope
jl
dec
movsl
and
mov
addr16
pop
and
cs
fcoml
pop
movhps
pop
leave
mov
sub
jge
dec
call
jae
adc
inc
sub
je
addb
mov
das
gs
cmpsl
push
inc
fcmovnu
outsb
cmp
cld
fldt
pushf
adc
xor
xor
addb
push
cli
pop
cs
aas
in
jge
mov
lret
jne
nop
dec
jmp
cwtl
push
loop
add
xorl
add
jnp
dec
push
call
add
push
les
aam
insl
popa
in
sub
fwait
pop
sub
rorl
inc
popa
mov
or
xor
or
repnz
mov
ljmp
jmp
into
inc
ret
loopne
inc
rcr
sbb
mov
int
pop
rol
sbb
ficoml
push
enter
sbb
jb
subb
lea
cmp
mov
mov
xor
insb
push
xchg
std
out
scas
rolb
xchg
insl
arpl
mov
mov
jno
mov
push
imul
outsb
jp
das
lret
mov
ss
sti
xchg
pop
add
xchg
mov
sub
cmp
inc
loop
mov
mov
in
mov
pop
dec
and
mov
sbb
imulb
inc
stc
loopne
inc
and
je
pop
xor
xor
das
and
jmp
inc
xchg
and
mov
push
mov
sarl
add
fdivrp
mov
xor
out
jns
lds
ret
out
mov
in
push
and
pop
dec
ljmp
in
or
leave
rcl
insl
rcrl
xor
jns
repz
xor
mov
stos
mov
cltd
mov
xlat
fmull
jo
adc
xor
jle
dec
mov
sub
or
dec
out
outsl
leave
sbb
or
push
push
jns
fcmovu
inc
lods
jl
fistpll
mov
cmp
outsb
lock
inc
insl
xor
sbb
xor
sbb
mov
or
int
xchg
sub
and
stc
lahf
cli
out
inc
jo
push
popa
out
xchg
sub
add
cmc
test
rorb
adc
and
into
xor
mov
push
mov
imul
insb
mov
loope
lock
cmpsb
popa
enter
loopne
xor
cltd
outsl
pop
inc
xor
add
add
out
inc
das
pushf
push
dec
sub
mov
push
jbe
cmpsl
xchg
jbe
movsl
rclb
cltd
add
rcr
test
xor
mov
pop
push
pop
int3
lds
dec
xchg
arpl
leave
cmp
ja
dec
push
out
cmp
xchg
add
pop
sub
and
adc
dec
enter
push
adc
push
iret
jge
adc
jb
push
cmp
in
sti
jnp
sbb
shll
mov
push
xorl
add
adc
mov
push
ljmp
pop
sub
or
std
cmp
adc
cmp
pop
push
adc
push
loope
jp
cli
mov
mov
xorl
push
fidivs
sbb
rcll
and
std
mov
dec
mov
imull
das
sbb
cmp
cmp
sbb
addps
imul
mov
shrb
add
shll
cs
pop
aaa
js
cs
in
cmp
sbb
divl
jb
sub
push
sbb
dec
fldt
addb
jmp
into
xchg
push
clc
cmpl
idivl
loop
mov
adc
ljmp
mov
inc
jp
fdivrl
sbb
fimuls
enter
adc
es
out
das
jns
cmpsb
jg
nop
cld
or
add
mov
and
sbbl
pop
mov
mov
into
test
push
xor
stos
mov
inc
insb
repz
fbld
cmpsl
cmpsl
in
daa
push
ss
xor
test
mov
repnz
int
frstor
popf
jnp
nop
sbb
adc
add
out
sub
and
mov
sar
imul
out
xor
pop
fsts
dec
jb
outsb
push
int3
jb
push
sarb
test
mov
stos
dec
mull
out
out
pop
mov
enter
add
add
int
mov
aad
mov
xor
lea
mov
cmp
repnz
lcall
int
mov
cmp
mov
sub
outsb
dec
pop
jb
ss
cmp
mov
and
loopne
fsub
dec
test
adc
xlat
cs
inc
sbb
fldl
ret
jno
out
jns
aaa
xor
pushf
pop
pop
mov
xlat
fisttpll
sbb
enter
xor
jp
xor
gs
je
mov
out
inc
cli
or
and
mov
gs
lock
ficoml
cmpsl
movsl
dec
insl
je
or
and
mov
mov
jl
nop
dec
push
pop
pop
cmpsl
push
xchg
in
pmuludq
lods
loopne
xor
jmp
lods
add
mov
out
xlat
sti
mov
xor
pop
lret
ds
flds
jno
out
jp
jns
pushf
in
enter
fsubl
int3
popf
lret
dec
xchg
inc
icebp
xchg
cmpsl
jae
lods
arpl
ljmp
jl
out
xor
xor
cmp
subl
sahf
mov
test
dec
fistpl
iret
add
jae
push
pop
sbb
and
jbe
dec
jl
inc
sahf
and
jecxz
sbb
js
fdiv
xor
sti
jne
shll
xchg
hlt
popf
dec
jp
filds
call
loope
xor
bound
jmp
adc
pop
fsubs
mov
pushf
out
sahf
ud0
stc
sahf
outsb
jle
out
inc
enter
pusha
out
mov
lds
adc
lcall
pop
cmp
mov
lcall
pop
xlat
push
ljmp
lret
and
lret
mov
sbb
pop
pop
ret
sub
gs
lods
jl
inc
mov
int3
aam
or
jmp
jle
ffree
pop
je
out
add
sbb
arpl
jno
mov
add
pushf
add
adc
fsubrl
cmpsl
inc
pop
stc
jecxz
inc
lcall
fwait
adc
inc
out
sbb
insb
addl
jns
mov
shl
movsb
pusha
fistps
out
pop
mov
std
dec
sahf
repnz
jle
push
sbb
loope
cmp
add
jb
jns
test
xor
dec
pushf
repz
sahf
push
push
lea
jp
out
test
mov
mov
dec
cltd
stos
cli
je
push
pop
jecxz
mov
divl
add
in
sub
mov
add
adc
scas
mov
sub
mov
rcrl
pop
shll
iret
push
fisubl
ficompl
divl
repnz
xchg
in
iret
xlat
int3
and
xor
jl
leave
ss
ljmp
xchg
lret
ficomps
pop
addr16
shrl
lods
or
cmp
add
sbb
mov
in
mov
test
mov
scas
pusha
out
shrb
ja
sub
cmpsb
movsl
mov
pusha
inc
sub
repz
add
push
lcall
add
dec
sub
jge
jbe
pushf
dec
cmpsb
loope
test
cs
push
lret
jbe
shll
outsb
divl
jnp
pushf
jns
push
adc
xchg
test
mov
push
mov
mov
mov
sbb
add
lret
push
or
lcall
and
aad
xor
movsl
pop
sub
jg
sarl
mov
cwtl
pop
pop
xor
pusha
mov
pop
movsl
cmp
gs
movsl
sbb
in
sub
mov
clc
movsb
dec
nop
mov
repnz
lret
fidivs
mov
mov
cmp
dec
mov
fcomp
aas
xlat
test
and
dec
push
cmp
sbb
insb
push
fdivr
mov
pop
cltd
push
les
scas
push
and
mov
push
mov
shlb
shlb
shlb
mov
push
imul
test
mov
pushf
xchg
hlt
push
daa
jne
inc
ja
stos
cmp
and
sti
xchg
ret
jmp
cmpl
adc
call
or
inc
stc
and
insl
jg
add
jns
lahf
mov
mov
mov
gs
mov
and
insb
sahf
cmp
push
adcb
lret
sbb
xchg
pusha
icebp
dec
xchg
xchg
xchg
xor
in
das
push
mov
jo
sub
shll
subl
inc
and
lcall
cwtl
jle
dec
cmpsl
hlt
dec
push
cmp
xchg
pushf
roll
and
rcl
ljmp
xchg
xchg
aas
iret
fstpl
xor
out
add
stc
push
mov
and
xor
sarb
ret
popa
pop
out
or
mov
inc
push
xor
push
sub
cld
stc
inc
lea
hlt
pop
xor
jmp
push
jge
or
ret
imulb
mov
xlat
push
stc
add
lret
cmp
fsub
mul
inc
stc
addl
sub
test
mov
pop
test
inc
xchg
outsl
cmp
fs
adc
rorl
es
int3
push
arpl
ss
sbb
add
addr16
dec
jge
mov
test
pop
xor
sbb
data16
imul
in
xor
xchg
cmpsb
jp
ficoms
mov
xor
lahf
and
fistpl
subl
lahf
add
std
pushf
push
enter
push
out
sbb
jb
xchg
leave
mov
leave
insl
cmp
out
sbb
sbb
adc
jp
pop
ja
pop
pop
fsubr
in
arpl
jae
daa
mov
test
gs
lret
sub
cmp
sbb
mov
mov
push
pop
jecxz
mov
popf
xchg
scas
popa
addb
xor
mov
test
pop
popf
mov
mov
cltd
cs
lret
std
xchg
mov
mov
clc
adc
lock
inc
shl
rolb
pop
pushf
nop
stos
mov
xor
test
ja
sub
and
jmp
stos
ret
sub
mov
les
int
xchg
cmpsl
cmp
int
rorb
cli
xchg
fimuls
xchg
fisubrl
rorl
mov
inc
xchg
jg
imul
lock
movw
mov
sbb
lea
in
test
jb
push
cmp
mov
push
mov
daa
jo
leave
push
inc
es
fdivrl
dec
std
adc
sbb
mov
and
xor
inc
ja
repz
or
or
mov
mov
dec
jne
dec
in
push
xor
and
jb
xor
mov
xchg
out
cmp
jne
sub
inc
div
sbb
bound
fildll
and
scas
mov
das
mov
les
in
stos
and
xchg
mov
fistpl
movsb
leave
aas
ja
pop
sub
pop
mov
stos
out
and
aam
inc
dec
xchg
outsb
push
rorl
icebp
pop
lods
movsb
imul
xor
divb
mov
dec
push
addl
jae
push
loop
push
mov
mov
shl
es
sbb
push
jns
popa
push
fiadds
xchg
xchg
scas
mov
inc
and
sub
push
and
add
push
shrl
icebp
mov
dec
cmp
sar
cmp
sti
lret
lret
test
sbb
adc
adc
pop
lock
stc
pop
loop
jl
cltd
inc
jmp
mov
sbb
and
mov
stos
in
fucom
jg
push
and
sbb
cmp
jae
jnp
gs
sbb
in
sub
sbb
loopne
pop
adc
lcall
adc
inc
daa
movsl
jne
test
xchg
cmpsb
leave
ljmp
dec
stos
aad
sub
jne
sbb
xor
jae
adc
stos
mov
es
cmpsl
sarb
fnstsw
push
push
insl
mov
jmp
adc
mov
push
lea
mov
push
outsl
lds
cwtl
xchg
jp
jmp
rcrl
jg
add
pop
adc
mov
xchg
jg
or
push
xor
pushf
sub
rcl
ss
shrl
xchg
fmul
data16
cmp
push
add
inc
std
add
add
popf
test
out
std
stc
mov
sar
jns
ljmp
stos
int
xchg
daa
inc
cmp
adc
sub
jecxz
rorl
dec
sbb
mov
test
fnstsw
testl
aas
xor
sub
fwait
adc
mov
ljmp
rcrb
add
pop
inc
movsl
scas
adc
push
mov
test
scas
or
add
ret
sbb
sahf
fwait
push
and
ss
and
in
pop
push
arpl
add
hlt
push
sub
fwait
mov
add
cs
mov
mov
les
pop
add
loopne
inc
dec
pop
outsl
pop
ss
insl
mov
and
xchg
mov
pop
clc
sub
mov
sbb
or
scas
repz
dec
inc
push
ljmp
sbb
jbe
xchg
int3
jo
enter
ja
movsb
xchg
dec
sbb
fxch
insl
test
lcall
movsl
ficompl
jnp
dec
cld
sub
in
inc
sub
sbb
sbb
insb
pop
push
pop
mov
imul
lods
jnp
add
mov
mov
adcb
xchg
in
rorl
add
pop
sbb
xchg
sub
rcrl
movb
dec
lds
mov
ljmp
mov
push
sti
popf
out
daa
push
jnp
sub
mov
pop
mov
aaa
movsb
mov
sub
repz
jb
adc
add
cmp
ficoms
xor
and
jae
push
lods
and
loope
cmp
mulb
jecxz
jmp
adc
mov
mov
rcr
jo
cmp
addr16
adc
cmp
push
lock
cmp
sbb
inc
push
mov
adc
jmp
and
repnz
mov
xchg
ljmp
or
in
sub
inc
dec
inc
lock
jns
xchg
insb
hlt
dec
jo
fistps
mov
dec
cld
mov
jg
cmp
dec
pop
in
imul
inc
jge
sub
xchg
mov
nop
mov
cmp
or
xor
push
cli
jle
arpl
add
sbb
dec
inc
test
jae
int3
ljmp
sub
mov
push
mov
data16
icebp
lods
push
and
aad
out
subb
cld
repz
cmp
pop
pop
push
insb
jecxz
daa
mov
ss
je
fidivs
pushf
inc
aaa
int3
xchg
dec
loop
arpl
lods
cmpb
fwait
in
in
push
scas
inc
jnp
fucomp
out
or
daa
jo
arpl
and
mov
clc
pop
aaa
xchg
popa
loope
cmp
ljmp
out
mov
dec
inc
call
cwtl
push
jae
adc
mov
inc
and
lds
mov
inc
test
cmc
shlb
imul
mov
cmpsl
movsb
divl
mov
and
adc
inc
mov
sub
mov
or
adc
mov
pop
mov
mov
in
xlat
add
outsb
mov
xchg
pop
dec
pop
pop
fnstcw
sbb
es
lret
rclb
addr16
mov
ss
ret
pop
mov
cmpsb
pop
shrl
and
dec
dec
xor
xchg
cmpsl
dec
cmp
or
xor
mov
mov
pop
sarl
out
push
push
mov
fildll
push
rol
lret
imul
jae
cmp
call
jmp
cmp
mov
xor
sub
add
or
divb
sbb
test
sbb
push
cmp
cltd
es
push
movsb
enter
xchg
adc
nop
and
orb
jae
dec
stc
fs
jno
jae
push
jo
rcrb
fbstp
ja
mov
in
dec
outsb
add
mov
in
leave
test
call
inc
jnp
loop
xor
jg
mov
leave
inc
inc
mov
xor
dec
data16
push
adc
cmp
insl
or
jae
dec
js
dec
push
add
fsubl
adc
mov
int
adc
movsl
jne
xchg
imul
and
inc
mov
movsl
mov
push
mov
pop
or
push
repz
ds
cmpsl
xor
fs
mov
dec
ss
mov
arpl
pop
push
sahf
xor
mov
jns
cmp
or
xchg
stc
ja
in
sahf
jmp
loope
ret
movsl
pop
push
mov
bound
jbe
aas
pop
fidivs
push
in
loope
sbb
icebp
stc
cmp
pusha
xchg
jmp
popa
cmpsb
inc
dec
xorb
rcrb
sahf
add
cltd
es
fwait
movb
out
int
mov
xchg
push
push
push
inc
jno
pop
mov
daa
inc
stc
cmpl
xor
sbb
lahf
pop
adc
stc
lea
mov
push
push
fs
movsb
cmc
mov
imul
sub
push
andl
add
outsl
jp
repz
dec
adc
call
and
test
pop
fistpll
push
pop
out
cld
jnp
sti
sub
jp
mov
out
push
push
sub
jecxz
stos
inc
inc
inc
sub
imul
add
dec
test
add
jno
orb
stc
push
inc
repz
push
test
inc
test
addr16
adc
push
repz
or
insl
mov
dec
in
stos
and
cmp
and
mov
push
push
dec
sub
ja
push
xor
mov
xor
mov
mov
pop
mov
mov
adc
bound
push
xor
inc
pop
mov
add
jnp
pop
les
cld
xor
leave
je
jecxz
loop
xchg
inc
imull
in
fwait
stos
jp
insb
dec
xchg
pop
jl
add
jmp
imul
loopne
out
cmpb
sbb
clc
pop
pop
cmp
clc
adc
push
jo
xchg
sub
aas
pop
pop
sub
or
push
inc
lahf
cmpsl
gs
pop
notb
or
ljmp
js
xor
jle
mov
xchg
sti
push
lahf
xor
int3
push
idivb
daa
inc
xchg
out
and
push
aas
outsl
pop
rclb
jns
lods
pusha
in
mov
roll
pop
mov
xchg
pop
push
jne
push
and
repz
push
aad
xlat
cmp
aam
jne
fnstenv
cmpsb
mov
or
pop
les
jns
in
adc
adc
inc
in
mov
fmuls
sbb
mov
dec
push
rol
cmc
lcall
lret
mov
test
mov
stos
addr16
test
cltd
push
and
push
loopne
sbb
das
adc
arpl
jo
jecxz
pusha
insb
mov
cmp
je
jle
lret
test
cld
mov
pop
xchg
and
test
pop
sub
xor
or
cmp
loopne
ss
xlat
inc
bndstx
push
mov
push
sbb
mov
pop
xchg
stos
jne
add
repz
fnstenv
adc
push
scas
shlb
ds
fsubrl
and
data16
iret
rorl
andb
ja
clc
lahf
lcall
xorb
jno
or
jo
jle
out
push
out
popf
insb
cmp
cmc
adc
jno
push
cltd
inc
jne
push
imul
lock
inc
fildl
mov
sbb
jge
test
adc
movsb
lahf
or
sub
cmc
xrelease
inc
push
dec
dec
test
stos
adcl
and
jne
mov
cmpsl
int
lock
dec
aaa
pop
mov
lret
add
fadds
negl
pop
call
push
lock
pop
adc
scas
and
dec
dec
mov
add
cmc
int3
mov
aam
push
fnsave
inc
jo
pop
sbb
fdiv
xchg
stc
das
dec
mov
dec
xor
hlt
aaa
js
sub
inc
inc
mov
lea
and
lret
ret
lret
test
lock
mov
lods
xchg
sbb
xchg
popa
push
dec
fcmovnb
pop
inc
enter
dec
xor
enter
aad
cltd
fwait
jge
mov
aas
sbb
daa
or
movsb
jb
rcll
inc
gs
xchg
lods
pop
lret
sub
fsubrs
loop
adc
sub
inc
jb
call
mov
bound
add
fnstcw
out
test
adc
mov
daa
push
or
cmp
das
jg
and
jl
lods
push
ret
fmul
and
push
out
xor
in
sub
sub
mov
xchg
std
add
insl
shrl
fucomi
inc
jmp
mov
pop
cmpsb
in
dec
in
mov
sbb
es
call
mov
loope
mov
add
dec
lahf
jnp
mov
sub
std
cmp
lret
mov
sbb
jg
add
pop
push
out
stos
inc
ljmp
pop
and
cs
pop
loop
push
cmp
push
stos
adc
adc
fsubl
out
lret
push
cmpsl
lcall
adc
pushf
ja
sbb
popa
in
pop
mov
pop
adc
popa
ljmp
dec
popa
ret
push
cmp
xor
out
mov
lahf
mov
mov
fisubrs
adc
xchg
pop
sahf
pop
mov
clc
adc
movsl
movsb
mov
stos
mov
fisttpl
mov
lods
stos
or
jge
int3
je
fistl
pop
xchg
lds
jnp
sub
imul
ja
push
icebp
or
xchg
dec
xchg
cmp
cmpsl
cs
add
mov
adc
xchg
les
movsb
pop
andl
sub
mov
icebp
cltd
je
mov
lcall
gs
jle
lret
sub
int
adc
mov
popa
das
das
fwait
loop
in
loopne
pop
dec
xchg
inc
and
jg
psubb
int3
adc
scas
dec
sar
mov
mov
or
es
dec
cmp
shrb
pop
sbb
dec
fadd
or
js
nop
lcall
cmp
and
pop
jne
push
jl
outsb
mov
cli
or
popf
add
leave
pop
insb
jo
xorb
xor
stos
lea
push
inc
in
pop
inc
jbe
aaa
test
and
jge
ret
sbb
lock
dec
fildl
jnp
or
daa
cs
iret
or
aad
into
mov
loope
or
cmpsl
add
stos
fisttps
movsb
jno
sarl
xor
push
imul
push
adc
in
test
xor
stos
cs
popf
sub
xchg
aad
jns
adc
mov
dec
arpl
push
jecxz
xor
xor
xchg
dec
xchg
pop
and
pop
shlb
inc
pop
jb
push
cmp
xor
mov
dec
bound
jo
pop
popa
lret
fsubr
xor
jb
inc
loopne
movsb
dec
fnstsw
or
xor
mov
addr16
dec
push
xor
inc
movsl
clc
xchg
mov
fidivrl
lds
mov
arpl
xor
and
push
shrl
fs
pop
pop
adc
push
adc
and
xor
pop
xor
loopne
fistpl
test
gs
jg
out
dec
aas
jg
movb
repz
jp
negl
lahf
dec
mov
push
and
and
sbb
inc
cmp
cwtl
xchg
xor
scas
cltd
mov
subb
dec
std
pop
clc
insl
ljmp
xchg
add
cld
jmp
test
movsb
xchg
popf
cmpsl
inc
push
lcall
lret
sbb
push
or
or
aam
jp
push
sub
cmp
cmp
dec
daa
rorl
ret
roll
jle
jno
jno
out
pop
add
or
xor
shll
sbb
sub
imul
push
cmpsb
ficoml
mov
and
xchg
fsub
push
push
cwtl
mov
fdivrs
js
jb
xchg
fcomip
imul
cmp
sarl
mov
jle
jmp
push
sub
fadds
push
inc
pop
mov
js
bound
hlt
xor
out
je
mov
icebp
push
mov
mov
negl
jp
mov
cmpsl
out
adc
fdivl
cmp
sub
xor
mov
dec
push
stc
iret
xchg
jb
xchg
pop
sbb
aam
out
xchg
xchg
mov
dec
std
cmp
sub
pushf
mov
add
mov
pusha
jnp
mov
das
out
ss
mov
push
fcmovnu
rcrb
mov
mov
push
push
ret
or
lods
and
ret
sti
dec
add
mov
movl
inc
or
clc
out
fs
xor
es
int3
push
xchg
cmp
sub
sub
mov
subl
imul
scas
lret
pop
shl
jp
stos
js
cmc
dec
neg
lock
lahf
lds
outsl
adc
pop
es
xor
ss
loope
pop
cs
daa
mov
stc
adc
dec
notl
sbb
xchg
xor
stos
int3
iret
test
and
mov
cld
and
pop
push
inc
aaa
adc
movsl
les
sbb
mov
lods
popf
push
scas
sub
scas
pop
sahf
push
mov
fnsave
test
sbb
mov
repnz
mov
aam
sub
inc
mov
cmc
ss
push
shrl
lods
enter
mov
mov
ja
push
xlat
xchg
scas
hlt
sbb
test
push
hlt
cmp
scas
cmc
stos
das
or
cmc
add
mov
sbb
xchg
push
movsb
in
pop
mov
lods
sub
pop
adc
es
xchg
or
and
cli
xorl
and
lock
sahf
jp
or
mov
dec
or
jns
sub
es
negl
movsb
push
in
mov
mov
popa
push
jp
vpmacssdql
xor
pop
or
aas
lock
push
mov
mov
mov
js
repz
sbb
jnp
push
insl
out
ja
or
fadds
xor
loop
sub
pop
dec
add
and
fldt
bound
jge
jno
add
push
add
sahf
sub
or
sub
clc
xor
sub
xchg
fisttpll
repnz
push
mov
imul
decl
outsb
mov
or
fcoml
out
push
aad
and
repz
xor
lock
push
js
imul
pop
movl
xchg
sbb
xchg
add
adcl
push
nop
into
sahf
fisubrl
int3
push
subl
fldenv
xor
lret
cmp
in
lcall
xor
shrb
mov
mov
bound
add
jmp
pop
fstpl
jg
jb
lods
mov
or
cmp
sti
mov
sub
movsb
ficomps
rsqrtps
lea
mov
add
inc
in
popf
or
or
ss
mov
fsubs
mov
fs
insb
and
sub
jbe
jne
or
mov
mov
ljmp
push
and
popa
outsl
outsl
and
adc
roll
push
adc
fdivrs
jnp
shrl
cmpb
cmp
cmp
sub
mov
or
enter
mov
insl
pop
cmp
and
jns
mov
das
ss
push
xchg
lods
push
addr16
fdiv
sub
cltd
push
dec
jp
js
test
lgs
test
repnz
dec
xor
push
lea
call
lea
push
test
xor
leave
jge
xor
fwait
stos
and
pop
imul
jae
cmpsb
mov
dec
lahf
mov
mov
cmp
cmp
pop
sbb
sub
xor
push
das
dec
adc
test
stos
aad
aam
leave
xchg
jle
xor
xor
aam
xadd
lcall
out
sbb
pop
gs
pop
mov
inc
sbb
fcoml
xchg
aas
mov
jecxz
pop
xchg
aad
fs
add
mov
dec
cltd
sub
loop
mov
sbb
leave
lea
cld
xor
es
rcrl
pop
test
out
repz
out
push
test
rorl
xchg
pop
pop
xor
adc
stos
sti
mov
ret
addr16
inc
outsb
xor
jmp
in
in
fdiv
mov
mov
shrl
and
insb
cld
aaa
xor
out
dec
mov
out
rorl
mov
in
add
or
div
mov
xor
lgs
add
jge
icebp
ret
mov
out
push
push
and
stos
dec
cmp
pop
data16
or
rcrl
cwtl
outsl
fsubp
sub
ss
outsl
repnz
xor
rcll
jo
mov
or
dec
mov
lret
imul
jo
mov
jo
mov
cld
cmpsb
lcall
mov
or
scas
jnp
adc
push
mov
pusha
xor
add
mov
sub
sub
dec
cmp
push
cmpb
dec
scas
das
imull
mov
mov
sub
or
mov
imul
cmova
inc
add
push
sub
sub
or
das
xchg
dec
adc
push
aam
dec
dec
sub
and
neg
jnp
das
insl
fwait
mov
loop
test
in
jno
in
insb
stc
inc
arpl
add
mov
aas
pop
sbb
xchg
and
and
hlt
loope
push
mov
dec
mov
dec
fs
cmp
imul
sahf
mov
icebp
sub
jne
xchg
lds
and
sbb
cs
jae
dec
xchg
cmc
xor
mov
mov
xchg
sub
inc
xor
dec
cmp
xchg
into
testb
push
mov
jo
push
jno
cwtl
jg
shlb
pop
sbb
mov
es
mov
xor
fcoms
mov
mov
roll
pop
mov
xor
bound
cmp
push
xor
pause
fwait
jg
pop
mov
add
sub
outsb
or
sbb
cmp
popf
sub
mov
lods
inc
stc
clc
adc
gs
push
nop
mulb
fisttps
jle
js
cltd
jg
nop
fs
push
cs
push
jmp
pop
pop
inc
sub
mov
les
xor
test
aam
inc
pusha
push
push
gs
sub
mov
xchg
push
sarl
xor
and
insb
int
pop
repz
jb
mov
mov
adc
das
pop
sub
int
cmpsb
call
movsb
imul
fyl2xp1
inc
add
std
in
rclb
fidivl
inc
xor
adc
and
jns
jg
in
nop
inc
arpl
add
call
mov
cmpsl
add
mov
bound
sub
sub
sub
loop
or
lret
clc
xchg
mov
cmp
push
mov
jl
jl
and
mov
lock
mov
imul
lock
rorl
cmp
rorb
lret
pop
popf
add
sbbb
add
cltd
scas
data16
pop
ds
xchg
shl
mov
push
pop
ds
pusha
movsl
ja
xor
lea
ljmp
cmpsb
dec
cmc
mov
hlt
movsl
in
pop
loop
in
push
or
shlb
jmp
sbb
in
inc
cwtl
inc
aas
out
and
cmpsb
pop
mov
cwtl
pop
cmc
pop
xlat
lahf
in
adc
dec
and
cmovb
cmp
xchg
pop
xor
mov
cmc
inc
push
test
sarl
push
xchg
es
mov
mov
inc
and
pop
cmpsb
adc
push
xor
in
scas
lds
xchg
xor
mov
mov
jmp
sub
scas
jb
bound
or
push
mov
pop
mov
int3
sub
bound
adc
push
fisubrs
inc
shlb
outsb
mov
adcb
fwait
jecxz
xchg
fs
adc
add
jne
stc
xchg
add
dec
adc
sbb
ljmp
js
push
fistps
push
out
je
daa
ret
test
aaa
scas
or
lcall
rcrb
jmp
cmpsl
inc
fisubrs
test
jge
or
inc
repz
or
jnp
and
das
inc
push
shrl
mov
xorl
shlb
adc
rclb
or
rcrl
cmpsb
cmp
fdivr
call
testb
iret
xor
sbb
xor
cmp
dec
cld
shr
addr16
cld
push
adc
ffreep
cmpsl
in
cmp
iret
lret
cli
mov
fsubrp
cmpsb
pop
mul
mov
xor
jo
sub
push
cmp
lods
icebp
cmpl
jge
fstpl
pop
repz
and
pop
sub
dec
push
dec
mov
fcoml
jge
inc
ds
sbb
outsb
sbb
sbb
xlat
mov
sub
pop
cltd
adc
push
lahf
adc
fwait
push
push
hlt
add
mov
jmp
cwtl
mov
xchg
les
ds
test
insl
sbb
popa
out
push
and
mov
push
in
leave
iret
test
lahf
jle
insl
mov
rorl
aam
xor
mov
adc
xchg
dec
cs
mov
cmpsb
in
xor
jbe
sbb
ljmp
out
and
stos
jne
inc
mov
mov
push
push
shrb
mov
andb
aas
enter
pop
dec
xchg
jae
adc
in
mov
pushf
or
lea
mov
dec
sbb
fistpll
and
int
out
mov
push
repz
fs
pop
jg
sti
imul
arpl
ret
pop
bound
sub
std
jle
mov
divl
movsb
mov
mov
xchg
lock
daa
pushf
cmovge
xchg
ds
insb
add
xchg
dec
and
outsb
cmp
sub
loopne
imul
sbb
pushf
jmp
ret
lahf
cld
fsub
cmp
mov
add
cmp
clc
rorl
imul
mov
movsb
mov
sub
fsub
mulb
cmc
popf
sbb
int3
movsl
inc
out
into
dec
int3
xor
clc
movb
data16
lock
out
adcl
pop
mov
push
adc
mov
leave
jg
xchg
adcb
mov
test
mov
mov
stc
in
lcall
jge
jns
inc
inc
daa
test
mov
jo
scas
xchg
dec
push
push
jmp
pop
xlat
js
lea
push
dec
and
aas
cmp
orl
pop
and
sub
inc
mov
repz
dec
testl
jb
xchg
sub
mov
mov
fsincos
pop
fs
sbbl
stos
repnz
jo
mov
mov
inc
push
es
xchg
inc
cmp
test
xchg
outsl
adc
out
push
lcall
shl
test
inc
gs
mov
cwtl
lret
xchg
lock
mov
pusha
pop
and
push
cmpsl
lret
pop
movsb
aaa
push
jmp
pop
and
nop
nop
sbb
mov
mov
aam
aaa
jp
in
sub
pop
aaa
movsb
pop
add
pushf
lret
add
filds
pushf
cwtl
push
add
pop
cwtl
das
inc
in
pop
icebp
cmp
mov
cmp
lods
lahf
xchg
data16
test
xor
mov
call
cmp
ja
xchg
pop
mov
rcll
xchg
insb
pop
orb
dec
movsl
pop
and
xchg
loopne
xchg
sbb
ja
and
jg
and
jbe
mov
in
js
test
or
dec
xchg
ss
decl
subl
and
loopne
inc
iret
cltd
dec
xor
xlat
cmpsb
cwtl
xchg
ja
dec
inc
jg
xchg
stos
inc
jl
ja
leave
sbb
lods
shl
mov
push
loope
jl
loope
ljmp
mov
sub
movsl
mov
fldln2
and
lock
jg
out
fsts
negb
sbb
insl
adc
jmp
adc
xor
out
pop
arpl
pop
sub
into
rcll
mov
in
pop
add
fistpl
or
add
mov
outsl
popa
mov
movsl
fldt
jnp
popa
mov
mov
xchg
dec
imul
adc
xor
jne
out
fsubrl
mov
daa
inc
pop
in
pusha
into
ds
andl
xchg
mov
mov
sub
cmp
push
or
xor
push
inc
cmp
test
sahf
cli
pop
mov
jbe
push
push
pop
add
inc
jl
ucomiss
incb
lock
and
mov
or
mov
fidivs
ss
mov
cmpsb
dec
ret
cmp
xchg
iret
xchg
mov
das
add
add
pusha
andl
inc
ret
sahf
mov
dec
xor
sbb
or
dec
das
xor
je
cmp
repnz
sahf
sbb
fiaddl
and
mov
lods
jg
jno
stos
and
cmpsb
cmp
sub
cwtl
mov
mov
pop
out
lods
popl
enter
lds
and
inc
lea
mov
inc
loop
mov
jbe
rcr
xor
xor
adc
lods
idivl
aaa
ret
adc
fnstcw
xor
xchg
cli
xorl
ret
and
fwait
sub
pop
sbb
sbb
sub
out
add
sub
push
scas
out
iret
inc
mov
xchg
mov
cmp
cmp
mov
mov
fwait
pop
or
mov
pop
jle
cmpsl
repz
enter
xchg
icebp
outsb
aad
and
jp
cmp
in
xchg
subl
cmp
fmulp
pop
push
jl
add
cmp
lahf
mov
mov
xor
dec
xchg
fsts
mov
fiaddl
aam
and
jl
and
mov
xor
dec
push
or
aaa
bound
lahf
fs
jo
negl
inc
adc
xchg
jbe
or
jle
aas
xchg
icebp
jae
mov
sbb
lea
inc
ss
pop
pop
fcmovu
xchg
jg
sbb
jge
pop
jecxz
pop
loopne
dec
jecxz
push
shrb
sub
mov
push
jmp
xchg
js
test
iret
fildl
fmuls
adc
and
stos
jg
sbb
aas
pop
jg
sub
ljmp
push
jge
mov
ss
mov
inc
pop
xchg
int
test
lret
movsb
cmp
addr16
std
repnz
in
sbb
fcmove
pushf
dec
mov
ret
lock
cs
je
inc
stc
rorl
and
push
mov
inc
lret
pop
and
mov
add
cmp
mov
cs
mov
sub
jmp
orl
mov
aad
fsubl
push
ds
sbb
and
push
mov
mov
sbb
push
outsb
mov
dec
fwait
mov
xchg
xor
hlt
aam
or
lcall
in
enter
mov
test
sbb
cmpl
inc
mov
pop
sahf
mov
iret
je
bound
cmp
push
sbb
sub
pop
addr16
xor
push
bound
xchg
cltd
pop
repnz
addr16
xchg
popa
jbe
movsl
mov
sti
push
sbb
in
cmp
insb
jb
insl
ljmp
ss
adc
test
mov
outsl
inc
sarl
rcrb
and
push
lahf
or
sub
sbb
xor
scas
dec
sbb
imul
push
lea
push
test
mov
xchg
inc
mov
cli
pop
pop
xchg
loope
mov
shlb
fwait
iret
fmuls
push
or
pushl
bound
jle
in
int
jecxz
aad
bound
daa
xchg
bound
add
test
shrl
aaa
mov
fidivs
inc
cmp
push
stos
imul
dec
fdivrs
movsl
xor
cmpsl
push
and
and
adc
cmp
je
movsl
int3
mov
mov
pushf
call
mov
ret
test
je
sub
popa
push
ljmp
pop
bnd
mov
inc
jmp
mov
dec
adc
and
jae
dec
and
mov
popa
jne
push
dec
mov
dec
xor
stos
aas
jb
push
into
fisubrs
cmp
push
inc
mov
cmp
dec
pop
les
fldl
out
out
aaa
bound
cltd
lods
lods
out
leave
leave
cmp
push
sahf
dec
ficoms
adc
jle
sarl
cmp
stos
jnp
pusha
or
sbb
mov
call
cmpsl
arpl
xchg
divl
add
cwtl
fs
imul
test
pop
in
pop
arpl
cli
jmp
and
push
shll
je
cmp
add
sbb
movsl
iret
cmp
insb
in
sub
xchg
mov
push
or
int3
mov
movsl
xor
dec
aad
mov
mov
outsl
mov
decb
les
dec
xchg
sub
test
popf
pop
in
enter
movsb
adc
xchg
mov
mov
inc
jb
insl
dec
mov
mov
add
int
jbe
aam
lret
cmp
push
pop
bound
mov
insb
adc
sbb
inc
loop
ds
out
mov
sti
xchg
dec
gs
mov
or
pop
call
mov
adc
mov
in
cmp
rcl
shlb
pop
jns
shll
aaa
push
mov
cmp
dec
outsb
pop
mov
and
sbb
gs
imul
or
jl
adc
std
rcl
gs
fldcw
push
xlat
aam
mov
and
pushl
sbb
dec
insb
je
nop
clc
movsl
arpl
sub
mov
lods
es
xchg
xor
les
scas
xchg
xorl
ss
dec
and
cmp
clc
shr
xchg
sub
jno
jno
lea
call
add
inc
cmp
mov
testl
mov
js
dec
in
inc
icebp
sahf
inc
mov
sub
out
insb
inc
xorl
jb
add
jl
stos
fdivrl
pop
jns
xchg
add
ljmp
fwait
jbe
jle
sub
scas
mov
inc
fnstcw
mov
outsl
cmp
mov
mov
jbe
dec
fldcw
insl
or
lods
xchg
jecxz
dec
inc
loop
jle
daa
push
test
mov
loope
imull
xchg
add
push
js
mov
out
fs
stos
addb
cld
fiaddl
push
movsl
addb
sub
addr16
cmpsb
test
push
sbb
sbb
pop
cli
cmpl
jecxz
jo
mov
xchg
ret
inc
fwait
daa
int
imul
nop
fsubs
jmp
subl
aam
inc
enter
in
push
sarb
je
imul
pop
or
pop
inc
mov
in
mov
stos
cmpsb
outsl
mov
testb
imul
mov
add
mov
xor
pop
sub
repnz
cmp
int
jne
push
mov
xchg
rcll
mov
lea
push
pop
xchg
lret
inc
cmp
xchg
int3
mov
rol
fs
mov
int3
adc
jae
push
dec
lock
jns
lcall
mov
cltd
push
pop
xchg
dec
jnp
in
aad
faddl
sub
fistpl
sbb
inc
xchg
xor
ror
pop
fmuls
mov
jmp
xor
into
inc
add
inc
outsb
test
push
aam
aad
lock
movsb
je
out
dec
idivb
jecxz
rclb
shrb
xchg
sbb
sub
mov
dec
ror
pop
cmp
pusha
dec
iret
pop
enter
or
rcr
out
cmpl
cs
jns
jle
mov
push
sahf
mov
push
adc
mov
imul
or
add
sbb
mov
mov
sub
pop
jecxz
out
mov
jbe
pop
mov
ljmp
rcr
push
xrelease
mov
jecxz
mov
int
cmp
pop
fdivrp
out
cli
sub
push
adc
subb
shr
int
mov
out
add
pop
mov
out
popf
lods
stos
mov
adc
add
jecxz
jo
inc
imul
dec
adc
and
push
dec
scas
pmaxsw
push
imul
push
pop
aam
jnp
lea
inc
mov
push
fwait
sbb
push
ljmp
push
es
fcoml
sub
shlb
cmp
inc
scas
repnz
pop
jne
cmp
or
ljmp
negb
jmp
cmp
push
add
shll
mov
push
pop
cmc
testl
add
pop
sbb
or
movsb
lcall
aas
lret
dec
xchg
icebp
std
inc
pop
mov
xchg
outsl
pop
pop
sub
adc
inc
outsb
or
pop
dec
out
fildl
je
lods
mov
xor
mov
mov
call
clc
dec
dec
adc
repz
rcrb
adc
dec
rcrb
sbb
sub
xchg
daa
xor
mov
inc
out
pop
jne
lret
pop
xchg
les
adc
fwait
xchg
sub
sbb
pop
mov
lret
mov
adc
add
adc
pusha
push
sub
leave
jnp
leave
fcom
push
setb
push
mov
xchg
xor
std
add
adc
sbb
add
adc
ret
push
enter
lods
fxch
lock
xchg
mov
loopne
das
cld
sub
xchg
popa
fcompl
pop
jp
pop
stos
push
xchg
rcrl
push
js
xchg
call
push
outsb
mov
loopne
dec
and
inc
inc
or
ret
jmp
ds
xorb
mov
push
insl
jge
push
jge
push
pop
bound
aaa
jb
sbb
jp
mov
mov
lcall
mov
lods
pop
cwtl
mov
mov
loope
sub
pop
fdivs
inc
pop
repz
in
and
inc
decl
fs
adc
pushf
jno
test
scas
and
imul
imul
push
mov
rcrl
aam
pop
incl
sub
xchg
cmc
orb
push
lock
leave
test
dec
cwtl
das
out
push
mov
in
add
add
lret
dec
das
adc
fimuls
mov
mulb
mov
mov
loop
hlt
mov
ljmp
pop
push
adc
mov
mov
fsubr
cmp
jne
outsb
mov
mov
mov
push
hlt
mov
popf
add
mov
jne
push
mov
jge
jmp
sbb
std
out
mov
sub
out
push
xor
shl
inc
adc
inc
loop
add
shrb
int
and
das
mov
or
gs
xchg
mov
jg
adc
in
pop
cmp
imul
push
ja
pop
push
push
jecxz
dec
sub
or
pop
xor
mov
jbe
inc
aad
jns
enter
lret
hlt
aaa
es
cmp
or
and
outsl
push
xor
test
xor
in
loope
sbb
sbb
dec
fnstenv
mov
pop
cmp
and
mov
cmpl
or
jmp
cmpsl
xor
das
int3
shlb
rclb
addl
sbb
pop
call
cmp
mov
dec
sbbb
and
stos
dec
loope
movhps
loop
mov
cmp
ret
jnp
add
hlt
xor
jae
or
dec
jno
mov
enter
mov
loop
call
or
fistpll
dec
sti
mov
xor
dec
mov
ja
fdivl
aas
pusha
dec
mov
mov
and
jbe
lods
jp
ljmp
test
mov
cwtl
sbb
fisubs
fdivp
jno
insb
cmp
ss
hlt
cmp
jns
iret
outsb
rcr
xor
loopne
lods
rolb
lock
fwait
add
cmpb
enter
pusha
mov
add
les
dec
subl
pop
pop
dec
cltd
push
leave
adc
enter
loop
in
pop
or
nop
out
and
into
gs
in
mov
xchg
outsb
pop
ret
mov
inc
adc
lock
les
pop
jnp
dec
imull
mov
in
mov
iret
mov
push
scas
fbld
hlt
xor
cmp
inc
dec
push
inc
pop
jno
stos
jnp
xor
sbbb
incl
push
adc
lds
inc
mov
je
sbb
pop
pop
jns
and
lret
pop
pop
add
fsubrs
dec
mov
imul
test
fistpl
xor
ficoms
js
mov
xchg
xlat
daa
inc
or
int3
dec
pusha
xor
sahf
icebp
test
jmp
pop
inc
ret
fstps
sbb
mov
adc
and
out
and
into
in
or
push
sti
xor
iret
push
das
das
xor
int
mov
sub
or
stos
and
push
dec
push
insl
scas
sarl
es
mov
loop
scas
fsubs
sbb
sub
push
fdivrl
sub
scas
push
add
and
mov
std
jge
movsb
sub
scas
lsl
test
stc
xor
sbb
mov
test
jnp
inc
lods
aas
in
or
pop
in
and
xchg
jecxz
cltd
mov
push
inc
add
add
lret
ror
cmc
pop
inc
ret
js
pop
roll
clc
mov
pushf
pop
mov
fsubp
popa
sbbl
or
test
jmp
fdivr
enter
call
jge
cs
adc
or
or
xchg
fildll
xchg
jo
cmp
cmp
push
push
jns
stos
aas
sbb
adc
ljmp
add
pop
jge
shll
xorb
leave
fcoms
inc
mov
insb
fwait
xor
mov
sbb
mov
into
hlt
dec
cmpsl
pop
aas
lds
movsl
popf
adc
pop
aam
adc
rdmsr
dec
pop
sbb
scas
mov
sahf
inc
mov
test
loop
xor
mov
mov
cmpsl
xchg
inc
jge
push
dec
xor
pop
sti
xor
ret
pop
insb
jecxz
cs
mov
ljmp
sbb
lock
mov
mov
test
repz
ud2
lret
and
push
aad
mov
jns
cwtl
mov
aad
push
cld
pop
cmp
sbb
imulb
mov
cmpsb
idivb
lcall
dec
inc
xchg
js,pt
in
shrb
lds
divl
push
mov
out
aad
push
pop
aaa
and
dec
arpl
jne
stc
push
mov
and
jge
pushf
xorb
mov
xchg
sub
test
lcall
je
dec
sbb
mov
pop
mov
inc
rcll
and
xchg
dec
inc
into
loop
jne
mulb
adc
clc
xor
add
inc
sub
xchg
pushf
cmp
mov
test
pop
jnp
je
pop
test
fsub
push
mov
jnp
imull
mov
dec
outsl
mov
xor
cltd
mov
adc
push
sub
sahf
xchg
xchg
dec
call
daa
test
push
or
or
aaa
sahf
add
xor
dec
addl
xor
mov
or
std
outsl
mov
insb
sub
es
popf
push
pop
jbe
jmp
sbb
repnz
add
pop
dec
mov
xchg
inc
ficoms
ret
sub
data16
jg
lods
jle
lock
xor
rcl
lret
and
in
loopne
lret
pop
arpl
dec
push
push
loop
jmp
test
in
fsubs
stc
mov
es
shl
aam
out
or
adc
or
icebp
sub
inc
pop
push
outsb
jo
pop
mov
sub
aas
aad
dec
pop
and
repz
mov
loop
orb
shll
xor
das
adc
cmp
das
push
and
push
mov
into
pop
add
shll
enter
insb
sub
daa
mov
sbb
add
icebp
xor
clc
loope
cmp
aaa
addb
int
sahf
mov
adc
bound
inc
push
mov
xchg
or
push
xor
pop
push
fs
xorb
out
add
out
add
and
ret
and
mov
adc
fisubl
and
test
and
push
push
in
aas
ss
add
xchg
test
jl
push
insb
add
adc
cmp
or
jmp
mull
test
sbb
std
xchg
xchg
sbbl
adc
and
imul
cmp
adc
hlt
jp
insb
or
push
pop
mov
xor
ret
incl
pop
clc
cmc
in
bound
jg
lea
push
sbb
lds
push
add
shlb
cmpsl
jle
stos
pop
fmulp
jl
fcomps
xchg
dec
xchg
sbb
pusha
sbb
jns
jno
mov
xchg
sbb
ss
jecxz
adc
push
xor
adc
cwtl
sub
inc
push
push
mov
sbb
iret
inc
mov
push
fs
push
cmpsl
pusha
cmp
fcomi
inc
das
and
mov
arpl
aam
leave
inc
mov
inc
and
lret
dec
gs
push
xchg
mov
cmp
pushf
js
arpl
std
inc
mov
arpl
bound
sbb
push
rorb
and
sbb
add
cmp
lea
push
addl
cwtl
pop
xchg
mov
xchg
inc
sub
inc
push
add
scas
push
sub
jg
int
test
inc
pop
lea
or
lea
adc
jb
orl
orb
data16
in
mov
push
fimuls
lea
jne
lods
jmp
sub
dec
sahf
icebp
int
shll
push
add
into
cmp
adc
rolb
leave
mov
xchg
cmp
or
pop
push
xor
jo
lcall
mov
mov
sub
js
cmp
cmp
sbb
add
mov
or
sub
sub
fdivr
mov
cwtl
les
hlt
mov
and
xor
xor
or
dec
xor
push
in
or
iret
mov
enter
fimuls
lock
mov
or
lcall
xchg
cmpb
int3
in
scas
or
and
into
cmc
and
mov
insb
addr16
cmp
scas
xchg
dec
and
movsb
mov
loope
fs
cmp
out
aam
or
rolb
pop
cld
sub
pop
inc
pop
pop
sub
mov
shrb
repz
pextrw
gs
in
sub
int
or
into
das
pop
pop
fsubr
test
ljmp
je
xor
sbb
add
outsb
push
out
arpl
xlat
pop
call
sbb
rorl
loopw
mov
mov
cld
xor
into
pop
dec
hlt
pop
movsb
and
push
cwtl
push
fdivr
dec
loop
insl
xor
into
sub
and
cmp
and
rorb
jmp
xchg
jmp
mov
mov
cmp
test
or
imul
cmc
mov
aam
or
mov
jae
loop
icebp
ds
pop
movsb
loop
lret
push
add
int3
lahf
ret
mov
icebp
mov
outsb
push
shll
arpl
js
sub
push
mov
loope
sahf
add
xchg
and
mov
pop
sbb
rcrb
pop
cld
lock
fnstsw
push
and
cmpsb
jmp
push
sub
jae
stos
sub
icebp
and
fstl
sub
arpl
int3
stos
cmp
fpatan
pusha
scas
es
daa
mov
popl
adc
mov
lock
dec
out
mov
sbb
addr16
jle
scas
es
jge
or
add
push
pop
inc
xorl
cmp
inc
out
or
into
and
lock
pusha
fldcw
aam
dec
push
in
jae
rcll
push
mov
sbb
or
stc
dec
aas
sub
and
lods
jmp
sub
adc
or
push
dec
js
mov
fisubrl
mov
xor
jno
jle
icebp
mov
lock
cmpsl
ljmp
sub
scas
sahf
cwtl
popa
dec
cmc
jge
jle
shrb
out
xor
push
push
cmp
pop
mov
xor
iret
jo
fsubr
push
outsl
enter
sbb
sarb
xor
fistl
mov
in
loopne
pop
jo
movsl
xlat
inc
lods
insl
push
ja
aaa
subl
mov
add
mov
push
push
push
scas
pop
dec
cmc
xor
jl
iret
sarb
fists
sub
inc
pop
sbb
loopne
movsl
pop
cs
enter
xlat
es
or
jno
mov
or
mov
inc
cmpsl
in
insl
sahf
ret
pop
lret
jbe
jae
dec
or
adc
mov
and
movsl
mov
mov
inc
ficompl
mov
ret
fmull
lcall
popa
mov
bound
jns
mov
jle
imul
adc
adc
xchg
movsb
rolb
xchg
iret
jle
mov
repz
or
mov
jnp
pusha
inc
jne
xchg
aas
pop
rcr
mov
orl
popl
cmp
cmp
xchg
mov
mov
dec
adc
sbb
shll
sub
ds
popa
inc
scas
pop
mov
push
adc
mov
fnsave
fisttps
std
shl
outsb
mov
sbb
mov
mov
jb
nop
in
leave
cmpsl
repnz
ret
xabort
and
loop
popw
and
imul
outsb
fnstcw
mov
pop
sahf
test
jo
mov
sbb
pushf
sub
fdivrs
mov
add
cmpsb
or
insl
inc
jg,pn
xor
pop
push
adc
xchg
aaa
inc
iret
decl
or
cmpsl
test
jae
shl
mov
mov
pop
pop
xchg
mov
or
adc
add
insl
mov
jne
xchg
mov
mov
sub
add
ret
sbb
sahf
test
jns
xchg
les
jl
rorl
lods
icebp
daa
or
cmp
xor
rclb
pop
xchg
int
push
mov
or
sbb
rorl
cmpsb
movsl
es
add
jp
adc
mov
sbb
dec
outsl
cmp
movsb
test
cmpsb
and
and
sbb
jmp
lea
push
stos
xchg
jle
stos
and
mull
addr16
xchg
sub
pop
mov
ss
jb
xor
daa
test
popa
push
pushf
jmp
pushf
mov
push
pop
inc
xor
push
or
mov
stc
mov
or
or
mov
shlb
stos
es
into
push
xor
lea
dec
mov
fcoml
and
insb
leave
cmc
enter
jnp
pushf
mov
adc
ret
subb
shlb
lcall
aaa
data16
out
sti
push
popf
mov
xchg
mov
nop
adc
test
mov
mov
fcom
push
adc
leave
scas
lret
pop
or
adc
xor
dec
jo
ljmp
mov
mov
out
inc
sub
inc
xchg
sbb
push
faddp
mov
shll
pop
fs
or
cltd
test
inc
mov
and
in
dec
insb
popf
loope
orb
dec
rcl
popf
jp
or
dec
sub
xchg
mov
jge
rcl
dec
xchg
fisttpl
xor
jg
in
mov
xor
pop
pusha
mov
cmc
imul
scas
shr
mov
mov
pop
out
push
cmpsb
test
or
jle
in
hlt
cmp
pusha
add
sbb
mov
cmpsb
cmp
or
xchg
pop
decb
lea
and
push
cld
popa
cs
outsb
popl
push
mov
shld
pop
jnp
fsubrp
push
inc
in
inc
push
testl
mov
mov
mov
fwait
jns
leave
and
pop
scas
sbb
pop
lods
xchg
iret
sar
ror
inc
stc
negb
in
mov
aas
and
imul
adc
xorb
popf
add
lods
lock
inc
data16
inc
cmpsb
mov
cltd
pushf
dec
repz
lods
push
sub
jmp
cmc
stos
push
push
add
enter
in
mov
pop
loop
inc
fidivrl
fsubrl
les
push
insl
test
mov
xlat
jno
testl
vmread
mov
sbb
jb
fstl
push
xchg
dec
or
sub
ret
or
addr16
push
stos
test
fisttpll
inc
int
les
xor
sahf
dec
ja
stos
mov
repnz
in
divl
jecxz
jae
jecxz
pushf
lret
aad
mov
dec
popa
out
incl
aaa
dec
push
iret
iret
dec
add
or
pushw
push
cmp
and
and
xor
pushf
add
xchg
xchg
xor
push
movsl
or
mov
out
mov
dec
pop
add
in
inc
or
stos
negb
lods
stos
fnstcw
ficompl
pusha
shll
es
lahf
push
imul
jns
imul
adc
out
or
cli
adc
ret
or
lret
out
cld
call
and
jg
rorb
sbb
aaa
mov
push
inc
inc
or
in
pusha
loope
mov
mov
mov
fmull
adc
add
xchg
loopne
jb
cmp
insb
lret
negl
mov
jl
adc
fstpt
icebp
and
cmc
data16
bound
sahf
decl
mov
add
sbb
cmp
rcr
mov
gs
mov
movsl
mov
fcomip
stos
test
xor
shr
enter
inc
or
mov
leave
xchg
in
scas
in
lods
xor
sub
dec
mov
lcall
mov
sub
or
subb
aam
ja
aaa
inc
rcr
sbb
and
sub
cmp
ret
add
scas
cmp
or
mov
aas
push
clc
nop
lods
inc
div
ret
sahf
sahf
or
lret
ja
andnps
and
xchg
xor
lahf
xlat
and
fimuls
repz
lds
xor
mov
out
xchg
movsb
jb
gs
jmp
loopne
dec
out
xor
sbb
stc
jb
rcl
adc
sub
out
fcompl
dec
mov
movsl
lods
jb
jp
lods
data16
gs
fdivrl
int
add
repz
sub
enter
arpl
es
mov
inc
out
call
jns
stos
enter
and
pushl
jne
sbb
cmp
sbb
popf
mov
adc
add
xchg
mov
dec
pop
xor
cld
jno
cli
pop
push
and
in
cld
lock
imul
cs
adc
push
jmp
shlb
xor
ljmp
and
pop
fldenv
aaa
pop
or
aad
inc
rclb
outsl
cmpsb
sub
push
xchg
adc
sub
cwtl
or
xchg
cmpsb
adc
or
push
das
pushf
push
lcall
mov
or
ja
les
mov
out
mov
ret
call
xchg
adc
mov
pop
xlat
cli
sbb
xor
fdivrp
lret
and
inc
dec
mov
cmp
addb
dec
test
scas
dec
outsl
dec
stos
cmp
insb
mov
test
and
pop
stos
dec
mov
mov
ds
sub
sub
cmp
ss
stos
dec
and
fsubrl
jbe
sub
mov
nop
fbstp
xchg
mov
lods
pop
dec
scas
sbb
out
repz
add
outsl
dec
push
pop
pop
mov
aam
cmpsb
xor
ja
aaa
mov
lods
mov
mov
ficoms
leave
mov
add
cmp
fbld
cs
sub
aad
das
loopne
loopne
xchg
pop
and
adc
arpl
insl
inc
add
add
pop
adc
mov
or
cli
gs
aaa
sub
mulb
xor
loopne
sbb
xor
and
out
push
rorb
popa
sbb
push
adc
add
in
xchg
lahf
insl
dec
pushl
fmuls
shll
mov
sahf
ja
in
cmpsl
repnz
mov
fldenv
scas
ljmp
fwait
mov
xor
mov
rcr
ret
lahf
testl
xchg
ret
aam
cmc
mov
push
xorb
push
sbb
add
divl
inc
cmp
clc
pop
jg
test
mov
sbb
jnp
std
jl
adc
into
xchg
push
add
das
add
call
mov
jo
cli
test
dec
shrb
aad
sahf
inc
inc
cmp
pop
outsb
mov
negl
iret
mov
cmp
or
call
xor
and
add
fnstcw
mov
loope
xchg
aam
pop
mov
fstpl
inc
fnstsw
cmp
cltd
or
xchg
dec
lcall
sahf
mov
xor
addr16
movsb
inc
add
out
mov
mov
lds
test
mov
sub
mov
push
add
xchg
push
movsl
dec
fs
push
fwait
in
pop
xchg
mov
not
or
js
js
cmpsl
lcall
adc
inc
pop
ds
notb
pusha
inc
lea
xchg
xlat
mov
adc
iret
lahf
push
sbb
imul
jle
loopne
fsubs
push
pop
cmp
push
xchg
fsubrl
xor
mov
jecxz
psadbw
lret
add
out
faddl
dec
ret
test
add
arpl
sbb
push
stos
cmpl
mov
cmp
add
pop
test
leave
pop
test
and
out
cmp
fnop
popa
pusha
mov
mov
cmp
cltd
insb
sbb
push
xchg
test
das
out
push
cmp
out
xor
addr16
adc
dec
push
movsl
in
xchg
aas
clc
pop
shll
xchg
xchg
add
or
push
push
sbb
cmp
ficoms
add
xchg
dec
xchg
out
testl
fimuls
insb
dec
shl
xchg
lret
sbb
inc
xlat
and
in
daa
dec
out
lret
cmpsl
jbe
push
and
pop
cmc
inc
sarl
outsb
xchg
shl
adc
imul
adc
mov
cwtl
jnp
icebp
sbbb
lahf
faddp
sub
in
and
ret
add
fldcw
arpl
mov
pop
sub
mov
push
mov
jbe,pn
pop
sti
jle
bound
stos
mov
cs
adc
mov
loope
or
les
jo
dec
fcompl
in
inc
insb
push
outsb
dec
inc
inc
repnz
pushf
inc
loopne
inc
push
lds
std
fwait
inc
mov
int
or
outsb
aas
loop
mov
sbb
test
in
adc
pop
fnstenv
pop
scas
sbb
pop
sbb
test
mov
cli
in
mov
jg
cmpsb
andl
ficompl
dec
int
ds
repnz
imul
dec
das
mov
out
mov
xchg
pusha
push
mov
cmpsb
inc
jae
cs
setb
pop
xlat
and
lods
test
push
in
dec
and
or
cmp
jno
mov
xor
imul
push
fsubrp
cltd
daa
jge
mov
adc
decb
insl
loopne
ret
dec
or
cli
daa
sub
les
mov
aam
fsubl
xor
mov
add
sub
cmp
and
jmp
add
sbb
pushl
les
pop
jl
sbb
lods
dec
jne
mov
mov
mov
and
pop
out
hlt
jbe
sarb
mov
pop
out
ret
pop
cs
cmp
mov
mov
jb
pop
in
adc
shll
add
sub
xchg
insl
xchg
fisttpl
cmpsb
mov
mov
lods
fldt
aam
int3
test
imul
lret
push
sbb
sub
ds
add
dec
shl
xor
pop
mov
fidivrl
adc
jge
test
lret
sbbl
es
out
push
call
repz
repz
nop
xchg
jnp
mov
mov
mov
xor
rolb
lcall
and
or
movl
xor
sar
mov
cmp
fldenv
sbb
pop
fstpt
lock
fcompl
enter
xchg
je
insl
fmuls
push
je
and
shll
test
mov
mov
sahf
jb
xchg
cmpl
or
mov
mov
xrelease
scas
mov
je
loope
fnstsw
addr16
pop
lods
adc
rcll
xor
cmovbe
shrb
mov
out
aam
std
out
pop
cltd
lock
jecxz
pop
addr16
shll
sbb
cmpsb
adc
xchg
loopne
adc
sbb
xor
es
xor
xchg
call
testb
rol
fs
int3
les
xor
dec
pop
movsb
ret
ss
fisttps
cmc
xchg
out
or
bound
icebp
enter
jg
add
inc
or
in
xor
clc
bound
and
push
popa
sahf
jns
jne
lahf
lock
push
data16
int3
inc
movsb
and
cld
or
inc
and
jge
add
and
lock
and
dec
push
cwtl
test
cmp
jmp
mov
pop
mov
out
xchg
dec
xor
sti
mov
jecxz
adc
pop
jo
add
fldenv
outsl
jno
scas
addr16
movsl
jg
or
push
jle
mov
jmp
jae
mov
add
sub
sbb
jne,pt
cwtl
xor
rorb
mov
jmp
inc
in
or
mov
test
lods
out
ljmp
sti
stos
daa
jmp
inc
mov
or
es
dec
pop
jecxz
addr16
fdiv
xor
pop
add
ds
push
push
cmpsb
in
sbbl
in
fists
lds
jnp
jns
insb
mov
fmull
daa
lea
add
push
fnstsw
stc
push
pushf
aad
xchg
movsb
xchg
xor
mov
sub
imul
xor
xor
negb
cs
leave
addr16
das
xor
inc
cld
out
clc
pop
std
fcompl
xor
sub
inc
outsl
lcall
mov
push
std
add
xor
cs
fwait
mov
ffree
and
add
cmp
mov
gs
fnstsw
pop
imul
data16
ficoms
xor
or
adc
jecxz
xchg
negb
jno
les
push
mov
xchg
cmp
pop
lret
std
popa
fstpt
into
clc
jl
out
mov
fwait
jl
fidivrl
pop
in
je
aam
daa
pop
mov
daa
sbb
fadds
scas
fxch
daa
cmp
bound
mov
aad
outsl
pop
cmpsl
fcompl
test
je
jg
adc
je
push
jns
mov
push
mov
push
js
clc
and
ds
pop
in
sqrtps
pop
pop
cs
scas
push
sbb
repz
mov
push
aam
and
pop
add
call
fmul
dec
or
repz
stos
adc
movsl
and
mov
mov
lret
rcrb
scas
imul
cwtl
mov
das
cmc
inc
adc
outsb
insl
jne
test
adc
cmp
out
cld
pop
xchg
decb
test
outsl
push
jmp
test
push
mov
push
inc
jae
push
ja
icebp
std
xchg
jmp
mov
cmp
jne
xchg
mov
movsl
jp
es
adc
lds
dec
mov
lods
jge
ror
sbb
or
insb
and
cltd
test
adc
ds
leave
or
cmc
stos
and
fistpl
or
sbb
mov
pop
xchg
xor
mov
in
std
adc
mov
insl
fiaddl
aad
inc
mov
int
jo
js
data16
fisubrl
sub
mov
jb
xor
gs
int3
popa
lret
jl
sarl
decl
lahf
ljmp
inc
cs
push
xchg
fcmove
xor
xor
mov
pop
mov
xlat
fwait
push
sub
insl
and
iret
jle
aam
into
mov
fidivrl
mov
outsl
ret
jno
adc
cs
or
fstps
sahf
pop
adc
lods
lret
ds
int
push
jp
mov
or
fimull
addr16
sbb
dec
sub
cmp
adc
iret
loop
fsubs
xor
arpl
rcll
leave
sub
mov
insl
pop
mul
lret
call
jmp
int
lret
mov
adc
int
xor
cmpsb
lahf
outsl
add
fistps
jno
pop
flds
in
mov
sub
jo
hlt
imul
jl
or
xchg
in
movsb
mov
subb
lret
ss
andb
push
jle
dec
orb
jb
pop
lret
ja
dec
add
sub
sti
or
mov
sbb
mov
cmp
fdivr
loopne
cmp
movsb
loopne
xchg
fldl
cmp
xor
xor
fmull
ss
call
daa
outsb
rcrl
sub
pop
cltd
ret
xchg
ret
dec
lret
fsubs
and
call
dec
sbb
in
inc
mov
inc
mov
std
cld
mov
and
sbb
repnz
or
or
fldcw
popa
testl
and
hlt
xchg
fildl
cmpsb
loopne
inc
pop
pop
and
rolb
push
xchg
inc
mov
shl
das
ror
mov
add
xchg
sbb
roll
loope
out
aam
mov
sar
test
xchg
push
imul
or
inc
jg
xorb
addl
into
loope
or
add
fldenv
subl
lret
mov
push
adc
adc
sti
out
repnz
lahf
in
mov
jge
push
cmp
repnz
jb
pop
imul
scas
mov
pusha
mov
push
dec
sbb
rcll
punpcklqdq
or
data16
push
lods
cmpl
mov
mov
aam
mov
ljmp
movsb
je
test
inc
js
imul
data16
push
cmp
inc
fcom
fldl
int3
in
fiadds
mov
cmc
jg
test
and
sub
jne
popf
ljmp
dec
mov
cmpsl
daa
push
xor
mov
jle
ret
shlb
and
lcall
das
filds
push
imul
mov
inc
sub
mov
inc
sub
cmpsb
mov
xor
and
dec
jb
mov
enter
dec
inc
scas
test
add
rcrb
aam
pop
cmp
pop
adc
mov
sahf
sti
push
or
mov
jmp
in
sbb
hlt
sarb
idiv
into
lds
adc
mov
sbb
stc
xor
add
mov
lods
lahf
cmp
ss
loop
ss
test
xor
xor
fcmovnbe
add
jmp
enter
mov
add
and
pop
iret
mov
test
jecxz
xlat
xor
or
dec
xor
test
mov
lret
loopne
divl
mov
sbb
fsub
iret
inc
icebp
aam
mov
push
aaa
movsl
pop
jecxz
outsb
nop
add
xlat
popf
mov
sbb
mov
or
sahf
inc
test
test
adc
mov
and
xchg
jo
adc
lea
adc
mov
jne
std
lret
cltd
mov
out
add
or
pop
mov
xchg
mov
mov
pop
jp
mov
fwait
jne
int
cmp
jnp
std
inc
mov
gs
and
mov
pop
repz
in
push
inc
jno
jge
cmp
sbb
ja
pop
push
orl
mov
call
mov
sub
loop
roll
adc
test
adc
pop
push
ret
int
outsl
std
aas
jecxz
push
cmp
cmpsb
or
gs
shrl
into
in
dec
ret
cmp
sub
lret
les
xor
jnp
or
lock
sbb
outsb
xchg
add
loop
push
rcrl
hlt
xor
lret
inc
mov
bound
adc
jmp
ret
dec
jo
and
inc
cmc
sub
test
jae
mov
push
xchg
adc
and
jecxz
les
test
mov
cltd
or
sbb
jbe
shlb
aaa
add
mov
inc
out
sbb
testb
cmc
adcb
xor
mov
mov
int3
pusha
or
and
push
enter
and
xchg
xchg
fldcw
push
xor
adc
cmp
ret
xor
sub
add
jne
cli
sub
xchg
mov
push
and
xor
jns
inc
aam
test
ficompl
popf
insb
in
cli
movsb
call
xchg
dec
dec
xorl
negl
daa
rcll
dec
orl
mov
mov
popa
xchg
outsb
dec
sbb
jmp
sbb
mov
push
sub
sbb
adc
mov
nop
cwtl
imull
xor
mov
in
cmc
xor
push
mov
jecxz
add
mov
lods
repz
dec
mov
sbb
mov
stos
adc
pusha
push
mov
test
mov
fmuls
movsb
and
push
adc
insl
add
or
adc
aam
frstor
out
adc
jl
add
int3
in
sbb
fisubrs
fwait
clc
adc
frstor
mov
sub
in
outsb
aad
bound
mov
xchg
cs
dec
lods
mov
fistl
push
fs
push
dec
pop
jl
into
push
dec
and
leave
lea
das
sub
xchg
add
stos
or
push
addl
add
fstpl
pop
mov
test
mov
arpl
vdivsd
scas
push
lret
nop
adc
fdivrp
mov
mov
sub
pop
ficoms
dec
fucomp
aad
jne
inc
lods
fstpl
in
rol
xor
pop
jge
pushf
or
movsb
in
xchg
pop
sbb
test
mov
addl
push
out
push
and
cmpb
out
inc
jl
inc
jne
fcompl
cmp
sti
and
adc
xchg
or
sahf
out
lods
mov
adc
btc
jb
int
jne
or
dec
pop
jb
xchg
mov
outsb
decb
xor
add
outsl
push
sbb
loope
cld
push
jns
stos
stos
jnp
dec
fwait
inc
cwtl
in
xchg
dec
xchg
jne
mov
sub
addr16
cwtl
daa
push
cmp
mov
sub
adc
out
push
je
cmp
iret
xchg
push
aam
xchg
dec
push
daa
idivl
daa
or
and
cmpsl
imul
cmp
mov
into
xchg
pop
mov
jge
movsb
lods
cmp
mov
dec
paddsw
hlt
outsl
arpl
stos
inc
mov
sahf
rcrb
nop
dec
push
add
adc
leave
mov
sbb
inc
push
arpl
aad
pop
cltd
call
popf
xchg
lea
cmp
iret
inc
push
mov
or
hlt
inc
xor
inc
dec
cmp
sbbb
sti
inc
sbb
push
xor
jb
inc
arpl
push
add
mov
or
cmp
arpl
pusha
pop
lea
stos
xor
lahf
xchg
xchg
nop
cmpsb
imul
add
mov
push
shlb
dec
fiadds
sbb
lods
rcrb
repz
or
stos
lret
loopne
sti
fs
mov
jg
pop
cmp
dec
adc
in
es
jl
rolb
push
aam
or
mov
pop
add
in
loopne
jnp
std
stos
push
pop
scas
daa
jmp
enter
inc
jbe
sub
mov
and
pop
adcl
rorb
insb
mov
and
pop
aaa
mov
sbb
xchg
arpl
inc
mov
add
adc
idivl
jle
sahf
pop
xchg
stc
bound
ret
loope
dec
xchg
mov
push
or
loop
in
sub
or
mov
aas
and
push
pop
mov
push
pop
sub
inc
es
dec
ja
orb
adc
xchg
cmp
in
jge
imul
ror
mov
push
dec
popa
adc
aad
mov
loopne
sahf
add
push
outsb
test
clc
aam
aad
sti
out
mov
jnp
push
fstpl
adc
mov
fimull
popf
fs
mov
dec
or
inc
pop
xchg
loopne
pop
xchg
out
mov
cmp
fcoms
aas
pop
jbe
mov
sbb
int3
add
pop
loopne
mov
inc
pop
and
int3
jae
stos
icebp
aaa
enter
inc
mov
sti
push
fs
insl
or
lock
xchg
push
loop
into
fsubs
fdivl
push
test
adc
cmp
cmp
inc
sub
imul
push
fs
push
push
gs
pop
cs
bound
ret
xor
and
into
mov
and
jae
js
shrl
push
adc
lds
mov
in
push
dec
dec
aam
fbld
xchg
xor
scas
mov
lret
and
ficomps
adc
push
les
xchg
repz
mov
stc
xchg
cmp
in
jnp
and
xlat
jmp
xlat
in
in
mov
daa
pop
bound
mov
push
mov
dec
rorl
jl
mov
sahf
push
push
xor
mov
jae
das
adc
or
sub
bswap
mov
fmulp
cmp
cwtl
inc
cmp
push
je
cli
xor
aas
not
into
sbb
cmpsl
push
inc
jb
sbb
mov
or
mov
mov
push
sub
pop
dec
imul
std
ret
loopne
mov
pop
inc
cmpsb
dec
or
push
fdivr
xrelease
mov
xchg
adcl
fwait
pop
lea
std
es
mov
fbstp
add
in
daa
xlat
jge
adc
imull
popa
je
xor
jbe
inc
inc
pop
jbe
inc
aam
hlt
std
jo
dec
lods
and
xor
push
sbb
iret
xor
rdpmc
inc
movsl
push
xlat
sub
imul
mov
nop
xchg
mov
in
imul
insl
out
les
push
loopne
cmp
repz
mov
dec
xchg
xchg
outsl
lds
cli
mov
scas
movsl
shll
cmp
xor
icebp
out
cmpsl
decb
add
cmp
mov
iret
xor
lea
aas
xchg
push
mov
mov
push
xchg
pop
cmpsb
imul
jl
mov
adc
push
jns
lods
push
xchg
push
clc
or
push
push
jmp
xchg
mov
xorl
mov
out
and
xlat
imul
and
lcall
xor
ret
dec
xchg
mov
jmp
filds
popa
adc
add
or
adc
jle
cmp
hlt
dec
cld
dec
loopne
cli
stc
inc
fsubrp
inc
addl
pop
jecxz
push
test
add
cmp
dec
push
subb
mov
icebp
int3
daa
mov
stos
and
mov
insl
inc
mov
jae
sbb
outsb
cmpsb
ret
aad
xchg
add
sub
xchg
jae
cmp
jmp
xor
sub
xor
mov
lahf
cmc
jl
clc
add
aas
std
popf
fnstenv
lret
inc
lea
jecxz
cli
dec
ret
sub
lods
push
inc
out
mov
sub
cmp
lods
cmp
mov
lcall
loope
stos
push
push
dec
jb
or
cmp
lock
sbb
mov
add
or
mov
les
pop
int3
lock
in
aam
lock
stos
test
sub
and
into
ljmp
xor
je
out
cmpsb
xor
add
setne
mov
fld
mov
inc
out
sbb
inc
push
xchg
jl
jmp
mov
fiadds
mov
or
mull
jmp
or
xor
in
jl
outsl
fsubp
jecxz
bound
fsubp
lret
xchg
mov
pop
or
mov
std
aam
bound
jbe
fwait
inc
mov
jmp
mov
in
rcll
jl
cmc
movsb
out
xchg
aad
out
cld
insb
pop
xchg
cmp
mov
adc
pushf
inc
in
out
xchg
call
stos
int
push
fmulp
jl
sub
pop
push
jns
fwait
cs
or
jo
mov
stos
mov
out
adc
or
fcoml
scas
pop
xchg
push
jcxz,pn
repnz
nop
pop
aas
push
fcoms
not
movsl
fadd
push
inc
sub
lahf
int3
js
cwtl
insl
cmpsl
ret
sub
ja
fcomp
movsb
sub
fcoms
aad
stos
jae
cltd
add
inc
sbb
mov
fwait
into
dec
ljmp
out
sub
leave
dec
mov
fisubrl
cmc
cmpsb
xor
jb
cli
xor
fcomp
jle
out
lret
pop
aad
ss
adc
aam
xor
adc
or
sarl
or
popf
pop
lret
cmp
jnp
sbb
jnp
mov
enter
pop
fcomip
les
mov
clc
pop
insl
out
ljmp
icebp
neg
ret
jo
dec
nop
nop
xor
int
inc
sbbl
push
lret
pop
loop
mov
add
iret
jno
scas
in
shr
mov
std
jno
fisubrl
imul
xor
sub
hlt
or
mov
pop
cmp
inc
and
and
repz
adc
add
fidivrl
inc
xchg
mov
mov
xchg
cwtl
and
insl
ret
sbbl
imul
xchg
inc
mov
fsubl
push
ds
lret
cmp
pop
sbb
orb
mov
inc
and
fstl
push
mov
cmpl
in
or
or
cmpsl
pushf
sub
scas
sbb
dec
xlat
pop
bound
add
pop
test
inc
jecxz
mov
cmpsb
jmp
mov
int3
adc
dec
test
pop
push
lret
lock
and
add
data16
xor
fwait
sub
add
push
xchg
scas
mov
lret
sahf
xor
jge
flds
loope
xor
fs
ret
cmp
push
clc
xor
scas
sbb
iret
inc
ljmp
rorb
or
xchg
push
or
push
mov
mov
mov
lahf
scas
or
inc
cs
jmp
and
jp
aam
stc
mov
push
and
mov
pusha
pop
pop
ja
outsb
mov
adc
stos
iret
test
into
cmc
jmp
out
sbb
repnz
jmp
adc
and
dec
outsb
into
test
pop
iret
xchg
inc
mov
xor
in
std
adc
push
xor
adc
ret
push
xchg
xchg
push
testb
and
cmp
out
ds
pop
test
push
mov
cmp
cmp
cmpsl
cmp
imul
inc
xchg
les
imul
mov
jae
pop
push
push
aad
ss
push
xor
roll
je
out
and
ljmp
mov
adc
sub
or
dec
enter
lds
jae
dec
mov
mov
test
fidivrl
jp
mov
lods
and
adc
mov
sub
imul
movsb
inc
adc
mov
push
xchg
lret
jle
xor
fldcw
in
sbb
push
sbb
mov
sbb
call
mov
sahf
sub
add
mov
out
mov
cmp
adc
pop
test
xchg
mov
cmpb
adc
imul
mov
test
mov
leave
dec
leave
sub
stc
dec
fstps
mov
dec
sub
dec
lahf
mov
movsb
mov
cmp
and
test
mov
fsts
push
notl
sahf
cli
xchg
push
inc
iret
mov
push
adc
xchg
or
push
xchg
in
js
jns
icebp
cmp
jbe
pop
adc
fisttps
push
leave
rcrb
fs
fucom
jp
les
xchg
xchg
mov
jno
aaa
push
testb
and
daa
into
loopne
or
test
xchg
sub
cmpsl
mov
fwait
in
outsb
out
pop
jp
test
enter
pop
adc
mov
sub
xchg
lds
loope
xor
and
sbb
jg
imul
outsl
icebp
cmp
xchg
inc
mov
daa
sbb
mov
mov
add
pusha
dec
adc
mov
mov
inc
sbb
jo
popf
jp
aad
adc
sbb
or
inc
mov
mov
pop
test
push
lods
sti
scas
jns
jne
mov
pop
xor
ja
popf
scas
cmpsb
mov
jl
inc
mov
outsl
movsl
es
or
dec
test
es
ljmp
push
sti
in
int
add
xchg
mov
lahf
add
mov
cmp
in
out
bound
mov
mov
or
and
int
pop
xchg
cli
xchg
mov
and
mov
movsl
dec
dec
je
out
les
pop
or
add
movsl
dec
test
push
push
fidivrs
push
popa
shr
xor
ret
xor
or
aad
xorb
mov
mov
cmp
push
pop
dec
adc
divl
test
imul
bound
push
pop
lods
and
into
fs
insb
in
push
inc
xorl
test
dec
inc
lods
jne
dec
sbb
outsl
out
enter
pop
xor
dec
mov
xor
push
dec
mov
cmp
call
out
mov
mov
push
lahf
imul
in
setl
adc
mov
add
jmp
pop
cld
or
mov
outsl
jge
jecxz
call
call
xor
lock
mov
test
xor
xlat
mov
xor
test
test
lahf
jae
and
mov
mov
std
jns
lock
sarl
mov
dec
pop
icebp
incl
push
sbb
mov
inc
mov
cmp
inc
pop
and
xchg
xor
jle
adc
js
ret
int
nop
bound
std
xchg
mov
sub
arpl
repz
mov
bound
cmp
stos
mov
or
adc
ljmp
stc
sti
repz
mov
mov
cmc
sub
xchg
jecxz
xchg
dec
and
stos
test
xchg
xchg
idivl
push
fsubrp
mov
sub
jmp
xor
jnp
test
test
add
mov
dec
push
movsb
lahf
adc
repnz
xchg
rolb
icebp
jmp
dec
in
fadd
sub
xlat
or
mov
cld
cmp
fisttpll
leave
xchg
std
pop
mov
dec
movb
rolb
testl
jo
stos
insb
xor
hlt
inc
in
jns
adc
imul
int3
sbb
xor
jbe
inc
fwait
mov
mov
mov
movsl
xchg
jp
std
hlt
mov
rcrl
cmp
cmp
cmp
dec
in
lds
mov
dec
lahf
shll
leave
cli
sahf
and
repz
jge
or
fsubs
shl
hlt
mov
daa
and
fcoml
movsl
inc
dec
popa
cld
insb
dec
xor
stos
mov
dec
out
jo
xchg
xchg
aam
inc
mov
rclb
push
push
sub
cmpsl
sub
mov
xlat
and
sbb
loope
mov
andl
xchg
and
mov
mov
push
dec
xchg
imul
mov
jb
js
pop
aad
push
xchg
inc
repnz
xchg
add
adc
bound
lahf
dec
jge
xchg
adc
add
into
int
subb
scas
dec
call
je
add
push
sub
jmp
push
xor
jne
cmpsl
xchg
push
xor
add
xchg
inc
test
xchg
xchg
lret
fdivl
lods
test
dec
pop
jp
mov
je
fldcw
or
push
icebp
sub
sbb
lahf
loop
sbb
mov
and
shlb
ror
mov
pushf
mov
mov
push
jmp
jmp
adc
incl
sub
out
and
pop
and
add
outsl
dec
loop
mov
in
out
inc
das
push
add
mov
rcll
pop
in
push
pop
mov
fs
gs
push
in
scas
daa
shrb
add
les
lock
subl
xchg
stos
cltd
pop
ret
adc
dec
pop
aas
dec
xchg
sbb
mov
sub
jg
jmp
xor
ret
dec
mov
add
mov
add
jbe
add
push
xor
push
push
sub
mov
jge
mov
movsb
mov
sbb
jne
mov
push
aas
jle
cmp
frstor
in
add
movsb
leave
rcl
sbb
pop
test
ficompl
mull
std
add
fcoms
dec
sbb
push
push
imul
xchg
imul
cld
lahf
dec
mov
inc
jb
das
popf
xchg
push
into
iret
dec
cmpsl
dec
in
out
addr16
mov
inc
out
test
mov
aad
mov
or
jnp
and
pop
adc
mov
lds
fldl
je
test
xor
lret
xchg
fildll
xor
negb
xor
pop
leave
mov
fisubl
out
lcall
push
lods
outsb
cwtl
nop
sub
in
data16
jg
mov
xchg
mov
loopne
add
test
in
cmp
test
cmp
sti
cmp
push
xor
pop
push
in
sub
add
ret
pushf
cld
push
mov
test
and
push
sub
xor
and
pop
nop
add
mov
test
fwait
mov
inc
push
movsb
fsubl
push
mov
in
ficoms
dec
scas
shll
aad
mov
test
cs
mov
xor
mov
add
sbb
scas
imul
inc
loope
cmpsb
int3
mov
aas
ds
mov
xchg
mov
cmp
aad
mov
xchg
pop
jno
test
push
dec
sub
iret
idivb
subl
imul
and
out
dec
jne
dec
cmp
aaa
icebp
mov
dec
xchg
pop
shlb
sbb
jne
sbb
loop
fnsave
lds
cs
fwait
fwait
out
loope
imul
xchg
inc
add
rorl
push
dec
sbb
jae
adc
push
mov
mov
into
pop
or
mov
fs
cli
mov
outsb
and
pop
xchg
test
jmp
xor
icebp
mov
xchg
jmp
divb
dec
adc
xchg
xor
fnsave
es
adc
ss
cli
and
jp
stos
not
jmp
icebp
std
cmp
sub
gs
fwait
lea
ljmp
sbb
sub
notb
vandpd
dec
mov
out
ljmp
pop
jnp
xchg
sbb
mov
mov
stc
icebp
mov
sub
sbb
stos
ljmp
lret
push
push
cs
movsl
ret
scas
out
xor
out
out
add
ss
addr16
fstp
adc
shlb
pop
ss
arpl
rclb
and
xor
add
pop
idivl
pop
frstor
daa
insb
sbb
pop
xor
inc
daa
dec
ja
jg
adcb
ja
fs
ja
inc
add
pop
test
xchg
inc
repz
fnstsw
xchg
inc
jmp
xchg
lds
jno
lods
adc
dec
and
pop
and
push
jb
xlat
cld
and
adc
int
cmp
and
cli
mov
mov
in
mov
adc
sbb
sbb
add
lods
mov
loope
xchg
dec
inc
mov
lcall
aad
std
lahf
mov
ja
or
ja
fisubl
aam
inc
mov
xchg
xchg
cld
add
add
dec
pop
push
mov
mov
dec
add
or
mov
mov
cmpsb
ror
lahf
cmp
lret
ljmp
rcrl
outsb
hlt
sub
adc
jge
sbb
lods
in
jns,pn
out
sbb
loop
fsubs
ja
insl
mov
adc
lcall
cmp
in
out
adcl
or
sub
addr16
out
sub
and
cmp
or
popa
outsl
jo
lcall
ret
repnz
ret
pop
mov
dec
cmp
add
push
xor
sbb
jecxz
inc
ret
mov
mov
and
mov
pop
pop
rorb
lds
aaa
jle
xor
imul
test
mov
enter
repnz
ficoms
adc
jbe
das
dec
lahf
sti
add
popa
rcll
pop
xchg
sarl
cmp
pop
jecxz
cmc
shlb
out
xchg
pop
lock
jno
sbb
push
cmp
out
pushf
loopne
ret
cmp
es
notb
cld
mov
sti
jo
icebp
lcall
out
jge
pusha
sub
jecxz
sub
icebp
fimull
mov
mov
adc
into
sbb
arpl
jnp
pop
mov
es
aam
xchg
loopne
adc
sub
fsubr
jmp
rcrl
push
dec
cmpsb
fs
daa
xor
add
cmpsb
sti
jno
push
call
adc
xor
and
or
xor
xchg
mov
cmp
push
test
sub
pop
imul
xor
into
arpl
jmp
clc
pushf
test
dec
cmp
ret
sti
push
jbe
iret
dec
sbb
cmp
xchg
jge
into
movsl
nop
lock
test
mov
notb
sub
pop
pushf
push
in
push
sub
dec
mov
xor
mov
and
add
xchg
mov
push
gs
adc
sub
pop
mov
sub
dec
shrb
and
mov
int3
icebp
sub
imulb
aaa
ds
pop
into
into
lds
and
jmp
and
mov
popf
push
fisttpll
shlb
mov
lods
xchg
push
adc
imul
js
add
sub
scas
in
xchg
push
cmp
or
outsl
cmp
call
cli
xor
pusha
ret
cmpsl
scas
xchg
mov
repnz
or
iret
push
and
insl
fwait
lods
jmp
rorl
sbb
clc
sub
sbb
js
mov
inc
aad
and
cli
out
add
mov
lcall
mov
pop
xchg
xchg
cmp
adc
aad
push
push
stos
aas
add
add
jecxz
into
popf
pop
in
xchg
call
jne
xor
dec
mov
shrl
push
insl
mov
xchg
stos
inc
data16
or
mov
lret
push
les
xchg
xorl
sub
ja
insb
inc
mov
adc
gs
jecxz
into
fisubrl
cmp
pop
or
push
xchg
push
dec
insb
sahf
call
mov
test
movl
inc
popa
xchg
pop
adc
dec
mov
in
mov
sub
jns
push
xchg
xor
lcall
inc
and
addl
loop
lahf
add
test
insb
dec
push
pop
cmpl
mov
stos
mov
dec
aam
xchg
pop
mov
push
mov
mov
jg
dec
sahf
loop
lcall
sbb
pop
push
lds
push
scas
pop
and
and
sub
pop
into
xchg
loop
jle
push
jnp
stos
add
pop
sti
dec
mov
dec
jns
cmp
lret
std
mov
out
insb
mov
pusha
lods
fcmove
or
ja
inc
adc
mov
xchg
pop
ret
cmp
arpl
mov
add
adc
or
cmp
fistl
dec
xchg
or
inc
pushf
scas
sub
xor
sti
jmp
sarb
sub
mov
pop
stos
xor
jecxz
sub
fnstcw
jnp
js
xchg
jns
mov
loop
push
mov
sti
cmp
push
sbb
test
inc
jns
sbb
enter
into
xorb
pusha
pop
and
jno
adc
mov
xor
rcl
jne
pop
add
push
adc
jmp
mov
stc
push
pop
test
or
mov
js
mov
and
neg
sti
je
stos
popa
cmp
and
ficompl
jno
inc
jae
cmp
mov
fisttpll
lock
jbe
test
outsl
mov
dec
out
inc
jg
xchg
sbb
jae
pop
iret
push
inc
push
xchg
ss
aad
pop
pop
in
add
dec
push
push
push
fdivl
ds
int
dec
and
or
inc
dec
out
xchg
fnstsw
idivl
add
shl
jge
movsl
call
data16
sti
ss
cmp
data16
mov
sub
negb
fnsave
xorb
sahf
mov
movsb
inc
leave
pop
fldl
movsl
mov
jl
sbb
push
stc
xchg
adc
mov
in
addr16
fmuls
xor
cmc
pushf
push
sahf
lret
lods
sti
mov
icebp
daa
mov
fsubl
push
fsubrl
mov
mov
mov
pusha
cmpsl
arpl
pop
sub
sub
mov
mov
jbe
mov
mov
sbb
aam
sar
call
xlat
in
mov
in
adc
mov
test
ljmp
mov
lcall
popa
and
xor
inc
mov
lcall
pushf
and
pusha
ja
adc
pop
pop
daa
lds
jb
dec
jmp
cltd
test
je
inc
into
pop
sbb
shr
sub
adc
nop
sahf
popf
movsb
popa
movsl
jecxz
and
rcrb
or
adc
pop
push
sbb
xlat
mov
scas
jle
adc
sbbl
sbb
jge
push
insl
in
and
pop
dec
add
fs
inc
and
mov
pop
decb
sub
repz
es
and
sbb
insb
std
jno
fldt
inc
cld
inc
xchg
cs
mov
enter
jnp
or
xbegin
cmp
or
jne
or
and
or
dec
add
xchg
jmp
push
popf
popa
out
or
cmp
fldenv
shrb
fldcw
lcall
bound
adc
push
push
sub
mulb
popf
push
fidivrl
add
push
pop
mov
xchg
push
es
imul
gs
jg,pn
out
lock
adc
fwait
arpl
rorl
and
stos
cld
xor
popa
flds
sub
pop
stc
push
xchg
jne
cmp
stos
inc
push
jmp
roll
daa
sbb
out
jle
fucompp
cwtl
pop
ss
rcrl
enter
fldenv
xor
sub
pop
jnp
mov
mov
xchg
jecxz
sbb
pop
cmpsl
lods
adc
int
outsl
push
stos
and
or
data16
int3
icebp
push
pusha
mov
jle
repnz
jge
adc
inc
shrl
cmp
stos
gs
xchg
sarb
mov
mov
inc
push
jb
xchg
push
lods
test
sub
test
out
icebp
mov
lods
cwtl
popa
push
iret
arpl
cwtl
adc
mov
out
push
pop
test
in
mov
sub
nop
fildl
and
xchg
mov
mov
inc
fs
enter
add
je
fcmovnbe
fwait
inc
mov
fcom
jl
cmpl
imul
push
aad
inc
leave
adcb
xor
mov
jbe
cltd
stos
jb
cmp
rol
dec
iret
addr16
cmp
sub
pop
push
push
or
cmp
ss
cwtl
dec
ja
pushf
adc
leave
mov
inc
lret
push
mov
hlt
xchg
imul
or
mov
lods
sti
sub
test
mov
iret
inc
xor
aas
dec
inc
add
fsubl
add
out
lds
pop
fmull
call
mov
ret
sub
inc
jp
pop
adc
jecxz
cli
mov
pop
sar
sbb
mov
stos
hlt
mov
aam
je
ss
repz
cmp
inc
jne
mov
fwait
add
pop
adcb
test
jns
pop
shrl
cs
mov
sbb
ret
inc
sub
pop
adc
adc
fcomps
mov
aaa
int3
or
dec
lock
sbb
int3
sti
xchg
sbb
adc
add
cmp
mov
aam
jmp
push
mov
sbb
insb
pop
shll
mov
mov
mov
enter
ficoml
fwait
lahf
call
jnp
pop
pmaddwd
movsb
mov
cld
movsl
lret
loop
sbb
mov
in
insl
jno
or
add
dec
ja
stos
enter
out
insb
aas
or
adc
leave
aaa
jmp
and
jmp
sub
loop
fbstp
mov
lods
imull
mov
test
jno
in
push
fimull
cltd
aas
stos
cmp
and
or
add
pop
xor
jp
mov
aad
mov
pusha
inc
fists
bnd
scas
test
sub
pop
lock
sbb
jb
mov
pop
in
push
sub
mov
arpl
mov
mov
decb
xchg
out
cmpsl
pop
or
push
lret
fidivl
sub
dec
imul
pusha
lahf
sbb
or
mov
ds
cmp
mov
shll
adc
dec
and
and
xor
xchg
and
xor
add
lods
xor
mov
andb
cmp
test
lahf
sbb
sbb
bswap
pop
testl
dec
bound
pop
inc
imulb
nop
dec
ljmp
fldl
pushf
stc
xchg
jmp
popa
popa
mov
push
inc
cmc
xor
jmp
outsl
inc
push
and
mov
stc
push
enter
push
and
clc
jp
sub
stc
push
sbb
xchg
je
mov
inc
arpl
outsl
jnp
clc
push
jl
mov
outsb
and
push
movsl
xor
cmp
subb
enter
add
sbb
jno
popf
inc
lcall
arpl
sti
pop
adc
or
or
push
inc
jle
clc
popf
inc
mov
mov
shrb
or
sub
stos
lcall
sub
loop
add
test
push
icebp
add
lods
lahf
xor
scas
int
repz
pop
cmp
sbb
scas
and
cmp
fcoml
loopw
sub
push
jbe
xlat
pop
dec
push
adc
mov
test
sahf
daa
imul
sbb
mov
imull
fcomip
sbb
add
ret
inc
dec
push
dec
pop
adc
mov
sub
mov
mov
bound
cmp
dec
fucom
cmc
sbb
fs
mov
jno
fistpl
add
and
mull
js
jne
rcr
shlb
push
fsubrp
insl
imul
cmp
call
mov
pusha
jnp
jae
shlb
fcompl
or
scas
inc
jl
cmc
push
or
pop
sub
mov
xchg
jb
pop
xorb
adc
dec
push
jp
aas
ja
pop
fcmovnbe
sub
aas
fwait
sti
jge
jl
fdivr
les
sub
cmp
dec
or
inc
jle
push
ret
xorb
sar
mov
fwait
xchg
js
mov
test
mov
shll
or
popf
inc
mov
notl
mov
leave
xor
rorb
push
roll
mov
movsl
jb
stos
lds
mov
mov
pop
jb
shl
fbstp
push
out
jmp
add
sti
test
sarl
negl
dec
push
adc
aas
pop
nop
add
push
or
pop
sub
andb
xchg
das
mov
in
dec
push
sbb
push
rcrb
inc
adc
xor
push
mov
xchg
cmp
jecxz
mov
insl
mov
xlat
in
cmp
pop
push
addr16
cmc
stos
jmp
movsl
outsb
outsl
int3
sbb
add
rcll
stos
mov
add
in
mov
cltd
adc
subl
into
in
fst
leave
in
shlb
outsl
insl
std
mov
inc
orl
cld
mov
pop
aas
cwtl
dec
loope
cmp
push
xor
cmc
int
push
jge
insb
lret
push
loop
cmp
mov
add
push
stc
sbb
xchg
sbb
and
push
adc
inc
repz
outsb
mov
or
cmp
dec
icebp
xor
mov
lds
mov
mov
dec
ret
mov
mov
inc
dec
dec
cmpsl
into
mov
xor
sbb
add
mov
call
movsl
push
jge
sub
lcall
jne
cmp
insb
xchg
sti
inc
outsl
ds
and
xor
test
add
xlat
test
jne
mov
ficompl
repz
incl
inc
mov
loopne
aas
sbb
mov
push
push
cs
imul
in
mov
dec
stc
and
rolb
cs
mov
jg
outsb
jle
je
repnz
xchg
mov
cmp
inc
sub
jns
inc
push
or
mov
adc
ror
in
jbe
push
lret
mov
stc
out
xor
ss
outsb
xchg
scas
mov
sub
cmp
ror
push
or
imul
sub
dec
sub
adc
or
sub
sub
mov
daa
hlt
mov
and
hlt
push
ss
inc
lahf
imul
sti
xor
ljmp
out
jo
pop
movl
pop
inc
out
and
in
mov
inc
ds
xchg
jo
inc
push
add
fmull
in
rclb
stos
enter
orb
push
cmp
iret
push
xchg
or
fildll
inc
push
or
cmp
mov
and
dec
xor
jo
and
or
jbe
out
in
mov
mov
ja
mov
pop
add
xor
or
push
dec
mov
es
fldt
push
fstpl
xchg
pop
mov
jae
ja
aam
rcrb
nop
popa
shlb
mov
mov
movsb
cwtl
cmp
xlat
xchg
jl
mov
cltd
cwtl
cmp
or
movhps
mov
mov
icebp
mov
or
fiaddl
push
fdivl
insb
mov
mov
leave
push
addr16
mov
test
mov
stc
mov
push
xchg
jbe
jg
xor
adc
dec
push
loop
ds
insl
das
clc
je
movsb
sbb
test
mov
lods
movsl
mov
push
and
in
lock
xchg
imul
mov
mov
push
push
inc
push
insl
out
rclb
lea
dec
or
xchg
mov
lds
inc
in
mov
sub
dec
loope
fwait
adc
idivb
rep
inc
js
push
inc
in
mov
sub
inc
mov
rolb
outsb
insl
daa
les
shr
xor
and
pop
mov
jnp
lahf
shlb
inc
cmp
test
dec
fldcw
xor
fdivrp
pop
fs
jp
fstpl
movsb
xlat
out
int3
gs
mov
mov
jecxz
jae
pushf
loope
jle
add
call
mov
pop
cld
mov
cmc
ss
addr16
das
pusha
push
les
fdivrp
mov
fdivrp
xchg
push
inc
or
std
icebp
mov
sbb
adc
push
orl
inc
mov
mov
sti
sbb
hlt
aad
test
js
pop
dec
cmp
imul
nop
push
jnp
iret
add
loopne
out
push
adc
test
lret
jmp
sub
pop
aad
movsb
movsb
adc
in
sub
orl
mov
arpl
jbe
push
outsb
out
lea
jle
mov
jb
and
sub
sar
fwait
shl
xor
movsl
into
mov
push
xor
sbb
adc
cmp
mov
nop
xchg
mov
pushf
in
push
xor
jecxz
or
cmpsl
mov
dec
mov
pop
loope
std
icebp
imulb
clc
out
sti
inc
out
adcb
sbb
pop
mov
cmpsb
mov
xor
addr16
pop
ds
adc
cmp
fwait
imul
test
xchg
pusha
das
adc
pop
xchg
mov
rep
lock
repz
leave
rorb
rorb
push
out
out
or
mov
mov
inc
mov
and
jns
add
cmp
sub
int3
adc
ljmp
and
or
xchg
and
scas
les
pop
sub
pushf
xlat
js
insl
adc
loope
lods
dec
popf
cmp
shl
out
imul
adc
mov
arpl
or
sub
inc
inc
push
out
sahf
out
cmp
mov
dec
ljmp
xor
add
loop
adc
add
inc
and
outsb
lea
adc
subl
mov
pushf
lods
mov
lods
mov
push
mov
fadd
or
sbb
fsub
push
mov
xchg
dec
repnz
in
enter
add
pop
and
push
push
fcom
adc
lds
cld
test
sbb
cmpsl
fstpl
pop
fdiv
ds
and
dec
lods
push
sbb
lds
lahf
mov
xor
es
sahf
or
fimuls
adc
test
push
mov
xchg
repz
and
inc
out
jno
jb
push
lcall
push
and
mov
pop
rorl
rcr
cmpsl
inc
in
add
mov
stc
sbb
push
in
arpl
mov
xchg
add
lods
push
mov
xchg
sahf
notb
mov
xor
pushf
js
mov
mov
push
aad
xchg
dec
in
mov
stc
gs
addl
xor
std
leave
and
push
cld
xor
push
xchg
adc
or
in
sbb
mov
mov
mov
sbb
mov
xor
jp
inc
pop
or
push
jo
mov
js
pop
sti
mov
dec
cs
push
adc
mov
jle
and
push
xchg
imul
mov
sahf
push
add
js
cmp
pop
jb
xchg
or
outsb
daa
jp
mov
adc
faddl
pop
stos
shrb
rolb
scas
ljmp
or
les
jb
cmpb
mov
rorl
outsl
ds
jmp
adc
lods
cmp
into
dec
dec
mov
jnp
inc
fstps
mov
ja
xlat
dec
sub
xchg
xchg
adcl
cmp
lret
loopne
test
dec
into
xchg
xchg
cmpl
in
inc
ja
dec
aad
mov
push
int3
mov
mov
das
clc
in
faddl
ljmp
sti
imul
iret
fcomi
pop
rorb
es
jl
mov
mov
sbb
out
test
ljmp
lret
push
lods
mov
add
cmp
jmp
test
add
ror
push
mov
jbe
nop
into
scas
out
push
testl
mov
cmp
sbb
push
and
sbb
shlb
mov
insl
jne
cmpb
scas
aam
mov
addr16
shlb
add
inc
arpl
add
ret
lods
mov
lahf
jae
mov
iret
clc
sub
jg
repz
lods
cld
push
fistpll
jmp
adc
mov
sub
adc
xchg
fidivl
xchg
jns
sub
mov
jecxz
shrb
sub
popa
jl
sahf
xchg
adc
mov
push
dec
cmpsl
push
js
jb
adc
sbb
popf
jnp
lods
insl
dec
xor
lock
xchg
pop
insb
in
mov
int3
mov
sub
xchg
gs
subb
adc
nop
mov
jne
mov
pop
movsb
cmp
xor
hlt
orb
push
mov
dec
push
subb
add
xchg
mov
or
jns
dec
pop
mull
sub
ja
ret
nop
or
out
dec
mov
movsb
and
into
xlat
jnp
dec
pushf
mov
xchg
adc
loope
insl
xlat
loop
cli
mov
sahf
clc
sarb
pop
idivb
icebp
xlat
pop
add
out
mov
inc
lret
cli
adc
fsub
cmp
cli
cmc
mov
push
mov
loopne
xchg
pop
fwait
repz
pop
mov
sahf
mov
sub
cmpsl
or
aad
imul
hlt
ja
enter
or
imul
cmp
cmp
sub
xchg
aas
push
or
push
or
test
ljmp
push
outsl
cmp
xchg
mov
mov
mov
ljmp
nop
jle
push
mov
mov
ljmp
fnsave
loop
pop
sahf
repnz
xchg
xchg
stc
shlb
out
mov
inc
enter
xchg
dec
lods
adc
ret
sbb
mov
loop
xchg
pushf
adc
jge
fldcw
insb
xchg
in
cmp
lahf
imul
push
push
aam
aad
cwtl
iret
daa
cmpsb
adc
loop
in
jp
or
sub
mov
mov
ret
test
fdivrl
lods
xchg
lret
mov
xor
inc
jns
int3
outsl
fdivp
in
gs
adc
sub
mov
std
pushf
mov
inc
ret
cmp
xchg
inc
fistl
rorb
rclb
fists
iret
mov
xchg
push
sub
cmp
jp
pop
out
jbe
int
mov
and
cltd
ja
jbe
fwait
push
xchg
push
inc
pop
mov
lahf
inc
mov
testl
jg
movb
jno
push
inc
push
fwait
daa
out
je
test
outsl
icebp
int
addl
mov
jno
mov
inc
ds
or
call
cmp
lret
adc
and
cltd
push
push
mov
or
mov
and
cmpsb
and
lcall
js
pop
ret
out
cmp
fcomps
roll
pop
loope
iret
out
pop
pop
sub
sarl
dec
int3
mov
jmp
push
fcmovb
in
lcall
lret
cmpsb
negl
sub
outsl
aam
pushf
xchg
cmp
fs
stos
jg
xor
dec
fisubl
add
insl
pop
xchg
adc
sub
shrl
jno
dec
lret
sti
aaa
mov
mov
bound
pop
add
ret
daa
dec
lahf
adc
fisubl
and
ja
jne
sbb
daa
xchg
mov
jno
or
outsl
xchg
stos
out
mov
dec
dec
in
sub
or
dec
mov
mov
sbb
leave
mov
jl
scas
out
jecxz
xchg
mov
xchg
cs
mov
daa
mov
lcall
shl
adc
icebp
rolb
dec
jne
clc
test
xchg
xor
into
ror
test
aad
lods
adc
mov
pop
cltd
push
test
stos
xor
or
pusha
cmp
dec
imul
push
cmpl
movsb
push
aaa
fldt
pop
iret
sbb
pop
rclb
and
test
lods
shl
in
adc
xchg
push
and
mov
xchg
push
add
inc
add
mov
shrl
inc
mov
mov
rorl
ficomps
inc
pop
pop
arpl
aas
adc
mov
or
arpl
cwtl
adc
je
jbe
cs
es
fsubs
xor
jp
lcall
cmpsb
add
or
sub
mov
push
or
xor
into
ret
add
pop
test
mov
push
pop
clc
int3
jmp
xchg
jne
adc
pop
loop
mov
xor
andl
xchg
pop
mov
call
jecxz
in
lahf
add
mov
lods
out
mov
mov
sbb
push
outsl
jbe
cld
mov
or
loopne
push
mov
sbb
xchg
and
lret
jo
cmpsb
xchg
pop
push
in
sub
es
mov
cmc
mov
add
movsl
mov
add
lods
test
cmpsl
cmp
sti
and
mov
sub
sbb
sub
push
scas
mov
popa
jge
popl
push
push
add
push
mov
push
sbb
jp
or
mov
shrl
int
fistl
inc
fsub
loop
pop
hlt
aas
inc
aad
ss
nop
sub
inc
scas
sub
or
adc
aam
inc
fs
stc
insb
add
xchg
divl
sbb
hlt
add
sub
out
pop
ficoms
test
mov
push
es
mov
or
and
test
pop
fwait
or
rcl
sbb
jge
enter
icebp
push
loope
mov
iret
imul
and
push
sbb
mov
xchg
maxps
mov
mov
lods
test
pop
sub
lods
dec
xchg
jle
jge
aad
cmp
test
sahf
cltd
mov
aas
stos
add
pop
mov
xchg
fwait
pop
jbe
push
pop
dec
inc
fldcw
jmp
cmp
fcmovnu
lret
fwait
dec
movb
cmpsl
mov
xor
cmp
mov
pop
icebp
jg
addl
fs
movsl
push
xchg
sti
in
mov
cmp
test
push
dec
mov
push
sub
in
push
xlat
push
das
dec
shrb
xchg
jg
in
add
out
divb
shr
out
fistps
or
inc
notb
sbb
pop
cmp
movsb
iret
lods
xor
inc
out
repnz
push
dec
and
mov
push
xchg
cmp
xchg
popf
push
mov
or
dec
jo
popf
cltd
cmpsb
stc
jb
mov
jmp
pop
sti
push
dec
adc
fsubrs
shl
stos
ljmp
xchg
sub
mov
inc
adc
data16
icebp
addr16
dec
fbld
xlat
sub
lea
dec
adc
jns
mov
add
pusha
xor
nop
stc
mov
gs
or
fwait
mov
xchg
pop
rorb
int3
pop
cwtl
xchg
lcall
pop
pop
ret
mov
rolb
dec
sub
cwtl
xchg
xor
addr16
test
insb
cli
fiaddl
adc
mov
es
in
xorl
shr
data16
aaa
or
lock
sbb
stos
mov
movsl
stos
pusha
cli
xchg
adc
lret
test
stos
jmp
mulb
lock
in
loope
sub
in
mov
scas
imul
fcmovbe
lcall
adcl
pop
movsb
mov
mov
add
fsubrs
push
js
sbb
int3
lods
ds
bound
hlt
mov
jns
sahf
xchg
adc
fisubrl
pop
aad
jl
add
bound
push
xchg
push
test
popf
out
lods
test
jo
jl
arpl
cmpl
and
out
cmp
in
jecxz
into
rcl
fs
ret
loop
jns
dec
jne
adc
shrl
fs
aam
sbb
lahf
cwtl
mov
popf
aad
xor
int3
cmpsl
push
push
pop
aas
pop
in
hlt
add
lret
cmp
mov
push
int
xchg
push
faddp
or
rorb
in
rcll
out
xlat
sbb
add
lea
sarl
mov
test
fbstp
mov
ret
cmp
jnp
add
loope
int
int3
mov
arpl
push
loope
xchg
mov
add
inc
xchg
lahf
mov
dec
in
nop
shrb
or
inc
push
pop
rcrl
pop
insb
lock
out
mov
mov
jge
test
sub
scas
sbb
pusha
pop
jo
jne
xchg
inc
pop
mov
cmpsb
mov
js
fstpl
aas
cmpsb
xchg
and
iret
out
mov
les
test
data16
cmpl
cli
and
pop
pop
int
lahf
add
je
mov
xor
or
adc
addb
data16
jno
cltd
sbb
lcall
scas
adc
mov
mov
mov
jmp
add
jmp
or
jg
popa
mov
push
xorb
push
sub
mov
shrl
call
repz
cld
jg
lods
fwait
cwtl
inc
lods
xchg
push
adcl
xchg
push
jmp
push
mov
pusha
ss
lods
in
fbstp
lds
test
adc
call
in
mov
pushf
leave
mov
jmp
jae
jmp
test
scas
xor
cmc
pop
and
adc
test
sub
xor
and
fwait
jmp
scas
test
mov
or
and
out
cld
and
lods
and
pop
shr
push
jo
pop
aad
dec
in
repnz
ja
aad
lret
rcl
data16
ret
dec
cmp
and
jge
in
dec
shll
stc
pop
cmp
mov
inc
insl
cs
pushf
jge
stos
sbb
mov
and
aad
pop
fisttpl
out
cmp
in
add
xor
sub
jmp
cmp
xchg
ja
in
hlt
in
lods
push
in
mov
add
jp
sub
jns
mov
icebp
cmpsl
inc
pop
jge
push
and
xchg
cmpsb
mov
das
or
sahf
lods
cmp
test
mov
mulb
and
test
pop
lods
mov
jl
sbb
je,pn
mov
inc
fxtract
cmp
xchg
into
mov
icebp
push
cwtl
imul
jl
sub
mov
fcomip
push
or
lret
adc
pop
jne
popa
jae
out
sahf
push
jbe
pop
into
add
es
cmp
lea
mov
in
pop
inc
cmp
and
and
mov
jge
outsl
sub
aam
mov
add
inc
lods
pop
fldenv
dec
mov
std
icebp
in
stos
jns
mov
adc
jmp
mov
sub
sbb
gs
xchg
lret
mov
daa
mov
pusha
test
pop
fs
mov
pop
jb
jnp
sub
andb
push
scas
push
xor
push
pop
adc
roll
push
add
test
pop
repz
mov
clc
pop
mov
cmovns
jo
adc
in
repz
lcall
cmpsl
cmp
jecxz
ror
sub
test
add
lods
sti
rcll
aad
pop
outsb
stos
stos
inc
lods
jns
or
xchg
test
andb
cmp
sub
push
inc
hlt
or
movl
sub
mov
xchg
cmp
jmp
push
fcmovnbe
and
sub
lcall
pop
loop
mov
and
aam
jbe
gs
lock
or
dec
mov
add
aad
aam
mov
adc
movsl
mov
lcall
pop
jecxz
aad
stos
add
das
es
loope
mov
add
adcb
xlat
ret
jge
cltd
jns
xchg
sbb
pop
cmp
lods
lods
jg
mov
sub
jg
adc
incl
imul
cmpsb
bound
test
add
inc
or
into
adc
cli
jl
sti
into
or
pop
int3
xlat
ja
out
pushf
and
stc
mov
sbb
add
dec
paddd
loope
add
or
loope
pop
pop
in
mov
sbb
loop
mov
pop
dec
mov
pusha
loop
pop
popf
dec
cmp
mov
rolb
pop
rorl
call
cli
jne
cmp
outsb
cld
loope
pushf
dec
loopne
icebp
xor
in
inc
push
mov
bound
pop
mov
cld
inc
jle
jle
dec
mov
xchg
add
test
in
mov
rorl
test
and
push
xchg
push
xchg
xchg
add
lret
pushf
add
xchg
cmp
xor
mov
sub
repz
sbb
arpl
leave
dec
pop
push
or
jae
inc
clc
xchg
or
scas
repnz
movsl
rcrb
mov
in
pop
sbb
adc
mov
cmp
jnp
sub
mov
adc
aam
enter
rorl
or
mov
dec
out
test
bound
fwait
mov
fists
or
adc
rclb
inc
faddp
fistps
or
jle
push
sub
xor
pop
mov
dec
xor
lahf
inc
push
cmp
push
loope
lds
test
jmp
cltd
or
sbb
push
es
and
ret
fcomps
or
jb
insl
mov
fwait
shlb
data16
outsb
stos
mov
mov
lea
arpl
xor
jg
mov
dec
sti
fisubs
jb
mov
adc
iret
cmp
xor
repnz
mov
fidivrl
or
mov
fistpll
pop
insb
stc
arpl
dec
andb
or
inc
sbb
sub
mov
sbb
in
dec
xor
icebp
dec
loope
cmp
xor
xchg
enter
jae
in
jmp
stc
jns
pushf
lods
add
in
push
inc
cmpsb
insb
xchg
add
das
je
add
fwait
mov
add
xor
shlb
cmp
movsb
cmp
jecxz
jg
adc
shlb
fwait
push
insl
sti
aas
pop
dec
mov
add
je
sub
or
mov
add
sub
shrl
lret
dec
shl
mov
mov
adc
gs
movsb
leave
lret
popf
cmp
push
inc
iret
and
loop
xchg
jmp
and
fbstp
divl
push
jno
push
xor
pop
das
or
pop
test
push
clc
pusha
xor
pusha
mov
mov
mov
dec
push
jbe
test
aaa
test
imul
outsb
shlb
test
mov
lods
std
sar
mov
icebp
lldt
mov
test
xorb
mov
mov
jp
fisubrs
sub
jge
add
outsl
pop
out
scas
pop
xchg
dec
sbbb
mov
sub
xchg
out
mov
adc
rcll
insl
mov
cmpsl
imul
pop
mov
xor
xchg
ret
and
and
or
and
cmp
jge
ljmp
cmpsl
mov
sbb
mov
ljmp
lods
nop
push
add
sub
xchg
inc
pop
xchg
xchg
andb
das
cmc
iret
rcrb
dec
es
daa
sahf
pop
sbb
dec
int
inc
pop
pushf
ss
cmc
push
ss
jecxz
or
addr16
mov
xor
mov
mov
test
dec
push
and
sub
or
push
dec
cmp
pop
ds
dec
rcr
jo
pop
dec
test
or
mov
dec
ds
xchg
dec
jae
andb
mov
aas
sbb
adc
jne
cmc
fcoms
sbb
arpl
add
xor
pop
push
adc
and
xor
insl
jle
shrl
and
jl
out
test
popf
xor
push
mov
js
xchg
cmp
adc
outsl
pop
aas
in
insl
sbb
mov
mov
test
es
fistps
and
pop
add
shll
mov
movsl
subl
pop
movsl
mov
aad
lock
mov
xchg
int3
rol
sbb
pop
ljmp
push
sti
cmc
cld
push
scas
cwtl
sbb
dec
dec
sbb
stos
ficompl
sbb
or
pop
mov
mov
cli
loope
mov
imul
cltd
jne
mov
test
push
data16
out
shll
sbb
jbe
lea
jno
mov
addr16
sbb
stos
repnz
call
ret
shrl
movsb
icebp
mov
repz
mov
and
aas
xchg
push
outsl
jnp
mov
push
aaa
mov
lret
daa
push
xchg
push
incb
stos
push
mov
mov
out
aad
xor
into
push
pop
mov
aas
std
std
pushf
mov
and
jae
jbe
mov
push
mov
adc
or
xchg
add
pusha
clc
push
loope
xchg
stos
push
dec
fstpl
out
pop
cmp
xchg
pop
dec
in
in
lahf
das
sar
out
and
push
div
outsl
scas
or
les
repz
lods
mov
aaa
and
inc
lcall
pop
stos
xchg
jle
in
pop
sub
mov
pop
xlat
hlt
mov
cs
pushf
inc
xor
push
stos
and
push
mov
and
shl
cs
push
push
pop
pop
pushf
rcl
dec
pushf
lods
xor
add
push
jp
pop
jno
into
arpl
pop
das
pop
lret
jmp
add
in
mov
stos
pop
pop
pop
jmp
out
cld
mov
push
add
xchg
mov
dec
lea
int
mov
lret
bound
icebp
mov
les
out
loope
inc
xchg
cltd
and
and
xor
adc
imul
inc
push
in
dec
push
push
int3
mov
mov
int3
js
enter
push
call
lods
push
jmp
sub
cmp
inc
pop
dec
push
jo
push
loopne
insl
or
mov
clc
cld
into
mul
mov
clc
pop
dec
mov
cmp
xchg
sub
pop
sub
pop
dec
sbb
xchg
xchg
sub
in
pop
and
pushf
lahf
popf
dec
jle
jae,pn
cmpsb
cmp
icebp
jbe
push
pop
cmc
push
mov
sub
std
xorb
mov
pop
cwtl
orb
push
mov
js
arpl
xor
movzwl
pop
pop
or
and
js
inc
outsl
adc
jae
cmp
iret
out
mov
cmp
cmp
mov
xchg
insb
clc
sub
std
adc
lcall
pop
popf
aas
mov
sahf
mov
lcall
push
xchg
mov
hlt
and
in
hlt
inc
or
or
shrb
mov
mov
adc
xor
aad
xor
dec
fs
sub
hlt
xor
in
test
mov
dec
pop
jmp
call
enter
dec
fs
push
jmp
or
mov
mov
jo
pop
mov
fcomps
sbb
call
out
xchg
jne
push
jge
pop
mov
cli
inc
in
or
xchg
scas
cmp
dec
bound
sbb
mov
mov
lcall
sbb
mov
mov
cltd
push
bound
or
and
pop
push
jae
mov
mov
xchg
sbb
icebp
outsb
jp
loope
jmp
es
nop
leave
mov
push
mov
lods
dec
stc
lret
or
or
sbb
xor
add
ret
je
xor
outsb
imul
xchg
je
popa
or
xchg
iret
imul
or
mov
repz
outsb
pop
les
dec
mov
xor
jmp
loopne
ficoms
nop
sub
cwtl
and
int
sbb
xlat
mov
inc
pop
push
loopne
inc
lods
stos
push
or
cwtl
repz
cmp
inc
xchg
pop
mov
adc
jl
add
test
push
cmpsb
sbb
lds
rclb
sti
jmp
aas
xorb
loop
pusha
aaa
mov
fwait
pop
adc
rclb
or
jp
dec
inc
imul
xchg
cmpsb
test
sbb
cwtl
loope
ret
cmp
xchg
or
jne
mov
mov
mov
or
stos
out
jae
js
aad
sub
aas
sub
xchg
mov
test
fisubs
xchg
inc
xchg
hlt
maxps
popa
jl
hlt
sbb
cmp
out
jno
mov
pop
mov
aaa
jl
or
aas
mov
mov
cmc
dec
mov
out
xlat
scas
pop
es
xor
ss
xchg
popa
xor
add
scas
push
cmpb
mov
jae
dec
popa
sahf
add
push
stos
popa
xor
pop
in
sbb
shll
adc
push
int3
pop
mov
fldcw
dec
pop
jbe
add
jecxz
adc
adc
mov
jae
repz
mov
mov
insl
push
mov
push
dec
andb
dec
sahf
cmpsb
repz
pushl
mov
jnp
inc
and
aaa
fdivrl
sahf
jl
js
cmpsl
xor
lcall
add
inc
mov
xchg
mov
sub
push
call
sti
inc
popa
fldl
fidivrl
js
sarl
or
adc
and
jmp
enter
dec
das
xor
imul
outsb
or
push
data16
adc
mov
push
mov
fwait
jmp
inc
xor
mov
and
add
push
mov
push
jne
pop
addb
or
cs
mov
xor
scas
outsb
inc
xor
lcall
sub
js
rcrl
aad
jae
out
or
push
sub
xchg
test
outsl
lds
mov
inc
roll
dec
push
pop
inc
hlt
fidivl
inc
pop
adc
lahf
sbb
gs
mov
jae
es
xor
adc
andb
xchg
push
sbb
sub
nopl
pop
cmp
or
and
inc
hlt
mov
mov
rol
and
aam
outsl
mov
lret
ja
imul
ds
ja
out
dec
push
fs
jne
stos
and
mov
mov
mov
stos
mov
lret
dec
jne
pop
jnp
inc
jbe
and
jae
xlat
out
dec
rolb
lods
adc
loopne
and
xchg
stos
ljmp
add
aas
lret
cmp
or
xchg
out
stos
add
mov
cmp
divb
jecxz
ret
stos
dec
or
les
cmpsb
xchg
cld
xor
adc
ljmp
dec
jns
std
mov
in
jns
jo
sbb
int
fstps
jne
loope
cmp
icebp
movsb
cwtl
cmp
mov
stos
decb
movl
mov
and
mov
clc
adc
mov
push
xchg
in
rclb
mov
mov
add
jne
xor
mov
in
inc
add
sti
sub
lret
imul
jns
sub
sbb
in
sahf
xchg
repz
sub
loop
dec
mov
mov
fsubs
xchg
clc
mov
cmp
gs
adc
imul
xchg
lahf
and
pop
add
cmc
jmp
incl
dec
daa
in
into
xchg
adc
push
xor
mov
add
fisubs
fildl
sbb
mov
out
pop
add
xor
test
add
outsl
lods
imul
cwtl
ret
ljmp
mov
jne,pt
loop
testb
add
divb
inc
dec
push
les
into
jl
in
dec
mov
cld
jns
fnsave
adc
dec
prefetcht1
xchg
or
ret
lcall
mov
cmpsb
dec
push
push
sbb
inc
or
cmc
test
cltd
sbb
fistl
in
sub
sbb
loopne
inc
icebp
dec
adc
xchg
jge
test
outsb
jmp
paddq
or
std
mov
mov
shlb
sub
leave
ss
jl
cs
mov
mov
cmpsl
aad
out
scas
cli
xlat
testb
and
xlat
or
mov
fsub
push
mov
push
daa
aas
xchg
stc
and
xor
dec
push
mov
fists
xchg
subb
in
iret
shrb
mov
arpl
loope
out
and
insl
rep
push
xor
sbb
mov
js
or
mov
mov
arpl
out
int3
leave
cmp
roll
push
fsubs
push
lret
inc
push
push
sarb
adcb
sub
and
pusha
sahf
lods
mov
imul
jae
fiaddl
dec
jne
add
repnz
xorb
shlb
pop
gs
cs
or
sti
dec
xchg
adc
cmp
scas
add
jnp
cs
adc
leave
sbb
ja
ror
es
dec
pop
imul
test
inc
into
test
jecxz
mov
hlt
sbb
ja
push
add
cmp
and
inc
jae
mov
fildll
jne
cmp
sti
faddl
pop
xchg
dec
jnp
ljmp
gs
popa
or
pop
mov
add
mov
out
fwait
jnp
outsb
push
movsl
or
fbstp
add
sub
cmp
pusha
dec
stos
cmp
lods
add
mov
xorl
fwait
jecxz
fstpl
mov
cmp
push
mov
or
inc
mov
and
lock
sbb
aam
int3
xchg
jb
push
out
cwtl
fdivrs
cmpsb
int
repz
js
add
int
rcrl
cltd
imul
imul
sbb
jnp
cmp
sub
or
cltd
in
ret
pop
xor
jmp
sbb
push
shld
mov
adc
paddw
imul
aam
or
scas
imul
mov
mov
and
jecxz
in
out
adc
sub
notl
jb
int
dec
pop
aas
dec
jle
fcomps
or
cltd
jae
adc
loop
sar
pop
ret
test
movsb
push
push
sar
mov
sub
xchg
in
loop
push
xchg
sbb
fstl
daa
push
mov
lock
xchg
add
mov
push
ljmp
in
sbbb
sbb
mov
adc
dec
mov
popa
jno
std
push
push
decb
leave
mov
lods
test
insb
pop
pop
adc
cmc
cmpsb
aad
arpl
rcll
ljmp
adc
movsl
sbb
xchg
xlat
xchg
fidivs
sub
and
sub
inc
mov
mov
pop
pop
popf
popa
jg
ret
xor
repnz
mov
mov
push
cs
dec
push
push
add
pop
xor
cwtl
jecxz
daa
out
scas
rcrb
mov
xchg
clc
inc
loop
push
test
icebp
lcall
jnp
icebp
or
pusha
jle
aaa
rcrl
mov
cmpsl
add
add
jmp
sub
cmpsl
cld
jno
in
push
mov
sbb
ds
push
mov
mov
hlt
into
mov
mov
mov
add
adc
xchg
stc
xlat
bound
ss
mov
fs
dec
and
mov
out
fmulp
fcomps
xor
xlat
jge
push
std
add
cld
inc
and
stc
inc
dec
js
or
outsb
mov
inc
adc
bound
sub
popf
scas
or
inc
scas
mov
sti
jg
cmp
aaa
icebp
lods
jnp
add
loop
adcl
enter
lea
add
mov
add
repnz
ds
mov
pop
pop
cmp
cli
lahf
pop
jb
xlat
icebp
in
bound
ret
sahf
lods
mov
leave
push
mov
in
jbe
icebp
mov
imul
cmp
add
mov
insl
adc
dec
pop
pop
push
jno
jle
mov
fdivs
loopne
into
fwait
jle
and
enter
jle
aam
and
push
xchg
xor
popa
mov
stos
xor
call
out
mov
xchg
hlt
clc
and
lret
mov
xor
mov
mov
in
mov
imull
lods
jmp
jle
push
pop
icebp
mov
test
ret
cwtl
or
iret
cs
jg
cmp
sbb
jge
adc
push
cmp
scas
fisubrs
and
stos
jnp
insb
sbb
jns
mov
lcall
pop
mov
sub
pop
leave
mov
fnstenv
dec
lret
xchg
dec
mov
stc
or
pop
mov
push
je
mov
xchg
dec
jecxz
push
loop
xor
xchg
xchg
jge
inc
in
cmp
cmpl
movsb
xchg
and
iret
inc
jmp
dec
icebp
fsubl
dec
jle
loopne
mov
shll
xor
ss
push
cwtl
cmp
aam
lea
dec
xor
das
mov
mov
nop
sbb
mov
cs
pop
dec
sub
inc
jmp
cld
fnsave
mov
mov
aam
in
fistpl
cltd
fsubrl
pop
and
push
iret
fs
or
mov
pop
stos
movsl
in
gs
gs
add
sarl
mov
lock
xor
pop
mov
sbb
outsb
ds
mov
push
js
in
pop
xor
pop
iret
inc
mov
mov
fistpl
mov
adc
hlt
das
push
in
inc
sbb
outsb
push
jae
in
lds
sub
loopne
or
push
and
aam
sbb
movb
js
pop
and
and
add
into
sub
jge
mov
data16
call
clc
pop
cmc
cmpsl
mov
clc
out
and
xor
fmull
mov
push
mov
clc
jl
push
loopne
pop
in
pop
lret
or
das
cmp
or
xchg
dec
scas
cmp
push
sbb
jo
ret
movsb
into
jle
xchg
push
mov
ret
jmp
stos
push
inc
or
test
pop
cld
movsb
lods
aam
pusha
dec
or
mov
mov
jns
in
icebp
xchg
jbe
jo
dec
lahf
dec
push
mov
sahf
jbe
push
cltd
xchg
jmp
clc
data16
les
fsub
xor
push
repz
rolb
dec
mov
mov
mov
adc
in
lahf
xchg
lret
pop
pop
mov
push
out
xor
lock
movsl
push
rol
jb
scas
jo
inc
arpl
sbb
cmp
add
test
ror
fildll
lods
lock
rolb
xchg
inc
addl
adc
es
lret
mov
rcrb
cs
cmp
sti
and
jb
xchg
and
adc
test
mov
dec
mov
inc
sbb
cltd
sbbb
scas
jns
jmp
sub
jae
jp
call
mov
inc
aas
inc
insl
scas
out
mov
and
mov
test
jne
xor
icebp
sub
icebp
mov
fsubs
xor
mov
pop
imul
lock
cmpsb
mov
sti
cmp
popf
sbb
out
dec
and
push
test
jae
test
popa
adc
enter
enter
xchg
divl
jmp
lcall
xchg
adc
nop
in
rcll
mov
jecxz
scas
mov
ja
add
jne
mov
sub
ljmp
mov
cmpsl
push
lock
jbe
mov
mov
insl
fcmovnbe
pop
ss
verw
sub
inc
ds
add
jne
sti
daa
pushf
push
out
fstpt
pop
outsl
nop
or
push
jns
repnz
rolb
fwait
scas
stos
js
jbe
test
xor
or
mov
cltd
sbb
xor
dec
scas
fisubrl
mov
or
mov
mov
and
fadds
jae
fucompp
js
mov
subb
loope
imul
dec
das
mov
pop
mov
mov
xchg
in
decb
ficoms
test
loop
pop
stos
push
jne
pop
pushl
jne
jae
sar
into
pop
daa
or
and
xchg
lahf
nop
and
sub
adc
mov
daa
jle
pop
add
push
inc
je
inc
lea
pusha
and
addl
clc
rolb
clc
and
mov
iret
rcrl
mov
imul
pop
shrb
xchg
ret
push
hlt
insl
into
test
jne
nop
cwtl
xchg
sbb
std
cmp
add
cmp
test
jnp
sub
push
pop
fsubr
xor
xchg
cld
dec
mov
push
cmpsl
and
int3
std
sbb
sti
test
mov
jg
jnp
jg
adc
jbe
arpl
push
sub
push
std
sti
mov
or
adc
inc
mov
cmpsb
mov
lds
sub
lret
dec
fdivrs
js
xor
jo
push
jo
add
adc
inc
jnp
aad
subl
pop
sub
xchg
jne
sbb
rclb
inc
push
rcrb
iret
ljmp
and
cmp
mov
int3
cmp
or
outsb
ficoml
ret
dec
xchg
repz
mov
aaa
inc
mov
jbe
sahf
pushf
jb
scas
cmpsl
call
outsb
jno
insb
imul
fidivrl
adc
pop
enter
fsubl
ljmp
lcall
enter
adc
xor
jle
mov
bound
jecxz
andb
popf
adc
push
jmp
leave
test
arpl
insl
and
sbb
aad
and
div
xchg
je
adc
ja
sub
or
fstp
decl
rcll
dec
icebp
fwait
xchg
mov
in
leave
push
push
insl
fsubrl
jp
cs
push
mov
in
lock
or
mov
jno
fcmovnb
js
jbe
imul
jnp
or
mov
lret
cmpsl
dec
mov
dec
xor
dec
jnp
pop
pusha
push
sbb
xchg
test
inc
push
imul
mov
jg
rorb
push
mov
imul
aas
sub
loope
xchg
mov
jnp
call
pop
ljmp
mov
lret
or
xor
scas
sub
sbbb
outsl
mov
sub
gs
aam
shll
dec
negb
pop
movsl
sbb
mov
aam
cmp
xchg
jbe
sbb
push
outsl
cmp
int
xor
add
jle
int3
push
xchg
xor
in
cmp
lods
addb
fldl
repnz
repnz
test
test
mov
and
cmp
cwtl
lea
clc
js
jnp
xor
and
stos
and
rcrb
leave
xchg
pmaddwd
sahf
sbb
push
sub
lahf
mov
pop
ljmp
dec
mov
insb
sti
adc
mov
jl
pop
jns
cmpsb
rcrl
ja
in
mov
jle
xor
cs
out
cwtl
pop
sahf
fimull
mov
xor
fiadds
iret
leave
nop
pop
xor
adc
xchg
mov
sub
pop
mov
and
sahf
mov
mov
adc
push
fwait
mov
sbb
insb
push
lock
add
xchg
lods
sbb
inc
inc
pop
cmp
repnz
cmp
xadd
lds
or
repnz
pop
sbbl
out
pop
pushf
pusha
mov
mov
adc
cmp
xchg
and
xor
movsb
xchg
aas
pop
push
das
xor
scas
leave
jns
xchg
inc
es
cmp
xchg
negl
xchg
adc
jmp
nop
mov
outsb
or
sub
jmp
aas
pusha
mov
shlb
scas
cltd
sbb
cwtl
cld
notb
mov
jb
insl
pop
adc
push
in
push
cmpsl
pushf
mov
cmpsl
mov
test
push
inc
adc
dec
xchg
loop
sub
lahf
jp
repnz
mov
cs
rcll
sahf
gs
int3
pop
xchg
loope
imul
sahf
pop
in
fsubr
pop
add
outsb
lea
dec
ficoml
push
pop
xchg
dec
jge
ss
or
bound
mov
xor
mov
lods
xor
or
fwait
inc
push
rorl
xor
fstl
jb
repz
xchg
jecxz
jge
push
cmp
pop
sbb
fistpll
imul
push
fsubrl
mov
ret
mov
jl
les
push
or
hlt
sbbl
add
fdivrl
cmp
mov
jl
sarl
sbb
push
cmp
and
dec
dec
fucomp
mov
push
add
outsl
jecxz
adc
outsb
dec
nop
or
lret
cmc
rcrb
out
pop
push
mov
shr
test
inc
and
aad
mov
scas
into
lret
jecxz
fimuls
rcrb
popw
dec
fcmovbe
push
nop
pushf
xchg
or
xchg
add
orb
inc
jecxz
pop
pop
sarb
jnp
icebp
xor
push
ljmp
aad
push
mov
andb
xchg
add
inc
movb
lock
push
cld
in
pop
jp
in
sbb
sahf
mov
or
jp
lea
pop
jle
push
push
fiaddl
mov
aaa
lret
out
mov
add
sub
test
out
pop
lock
icebp
sub
int
xchg
adc
or
repz
cmp
es
femms
push
mov
scas
inc
or
and
in
mov
shl
jge,pt
mov
test
pop
cmp
mov
jno
xor
mov
popa
push
adc
lods
iret
lret
daa
mov
shr
adc
and
shrb
cmpsb
xor
or
jno
fdivrs
dec
push
lret
scas
jbe
pop
inc
xchg
mov
idivl
dec
stos
les
imul
call
adc
jg
int
mov
pushf
pop
adc
cmpsb
cmp
xchg
lds
cmpsb
xchg
das
push
lods
xor
ds
pop
or
int
pop
aad
or
and
cmp
sbb
pop
and
int
shll
nop
sahf
mov
call
arpl
pop
xchg
pop
inc
mov
xchg
fstps
lcall
je
add
and
jno
pop
xchg
arpl
addr16
lret
cld
loopne
cmp
mov
inc
and
sub
lcall
pop
fsubrl
cmp
xor
nop
inc
test
mov
inc
inc
mov
ss
lahf
lods
out
test
pop
scas
inc
and
shll
mov
xchg
pop
cmp
push
es
inc
outsb
data16
leave
sahf
cwtl
adc
stc
aam
mov
sub
sub
jp
nop
rcll
aaa
xchg
xlat
dec
outsl
les
pop
xchg
movsl
and
lret
inc
in
imul
dec
gs
int3
xchg
mul
jne
loopne
sub
fs
cmp
xor
mov
xor
jns
push
pop
test
movsl
sub
stos
jno
fmuls
sbbb
adcb
or
push
jae
push
iret
jo
mov
out
lods
inc
inc
sub
sbb
stos
or
or
jl
push
xchg
add
mov
cmp
daa
cwtl
or
sbb
jg
lret
sbb
mov
lcall
mov
mov
cli
testl
inc
mov
inc
ret
scas
add
cmp
mov
test
mov
call
shll
fbstp
xchg
mov
push
fidivrs
cmp
fiaddl
cli
pop
out
pop
fistpl
mov
sbb
int3
add
cld
mov
nop
inc
decb
aaa
in
shr
repz
and
mov
mov
mov
nop
ja
jne
mov
mov
jae
scas
dec
xchg
jbe
pop
sbbl
out
jp
je
inc
lahf
dec
lret
lods
jp
shlb
sub
sbb
mov
cmpl
dec
lahf
in
and
push
mov
leave
push
xor
sub
mov
call
or
cwtl
insb
mov
fsubl
push
jae
cltd
dec
neg
gs
fs
xchg
cmc
dec
jnp
int3
sub
fcmovne
dec
push
mov
cmpsl
xor
mov
dec
push
xor
or
sbb
dec
rolb
movsl
inc
pop
jg
add
loopne
xchg
mov
push
or
xchg
mov
cmpsl
cmc
xor
icebp
cmc
rorb
cmp
adc
pop
push
sbb
or
mov
push
pop
and
jae
sbb
jl
jg
adc
inc
cmpsl
in
jmp
and
adc
mov
xchg
xor
add
mov
sub
lods
aad
cmp
notl
test
inc
aas
xchg
pop
cmpsl
jno
stos
inc
dec
or
les
or
pop
push
loopne
negl
mov
pop
mov
cmp
fmuls
fildl
mov
in
mov
mov
in
leave
xchg
xchg
add
adc
fimull
ficomps
inc
fisttps
int3
mov
adc
cmp
dec
xchg
jns
js
or
dec
ret
popa
cmc
lds
inc
dec
insl
mov
aas
ror
movsb
aam
jae
sbb
dec
jg
sbb
mov
nop
adcl
mov
lds
jne
leave
xchg
and
dec
add
stos
addr16
add
inc
stos
mov
cmpsl
mov
outsb
or
add
imul
xorl
and
scas
cmp
cmp
mov
and
xor
cmpsb
mov
fwait
dec
push
call
and
add
sbb
mov
sbb
scas
ret
push
push
and
mov
bnd
in
jp
pop
jns
cmp
fsubs
xchg
lret
dec
hlt
cmp
xacquire
cmp
mov
iret
cmp
mov
xchg
pushf
mov
xchg
push
fs
in
jbe
xlat
mov
xor
pop
mov
dec
and
outsb
xchg
ja
xchg
rcrb
inc
out
push
mov
fstpl
scas
out
scas
fildl
jecxz
addb
push
stos
movsb
push
in
lcall
mov
insl
icebp
mov
sti
dec
mov
push
mov
jle
les
jnp
popa
test
jl
mov
popa
lock
mov
ljmp
in
add
adc
lret
push
hlt
xchg
xor
or
add
mov
mov
add
int
mov
jns
dec
or
aam
rcr
adc
jns
ja
push
dec
clc
into
lods
dec
jmp
mov
inc
mov
xlat
push
pop
sub
push
jp
daa
fwait
movsb
std
push
and
xlat
addb
lret
pop
inc
add
pop
dec
pop
xlat
push
das
test
sub
cmp
jnp
hlt
inc
leave
mov
or
jg
mov
shll
mov
out
adc
push
inc
std
jnp
iret
xor
sub
stos
cmp
mov
jns
pop
xchg
pop
stc
sbb
sbb
jle
jmp
inc
jnp
mov
mov
loope
push
add
aam
or
jge
test
mov
mov
sbb
sub
xor
push
outsl
loopne
push
jle
push
inc
es
jno
bound
hlt
adc
sbb
mov
xchg
lods
cmp
inc
repz
sbb
inc
pop
fdivs
jae
jmp
pop
jp
ljmp
movsb
insl
lods
and
add
jg
jb
push
pusha
mov
sti
jl
testb
dec
gs
cmpsb
or
cli
jnp
mov
in
mov
mov
mov
jp
pop
jecxz
cwtl
jp
xor
xor
pop
int
sahf
sbb
enter
fwait
gs
lods
xor
pop
add
ja
faddp
insl
sub
xchg
divb
testl
nop
or
insl
stos
push
movsl
mov
js
mov
xchg
mov
jmp
sub
movsl
jmp
add
lea
js
adc
data16
mov
xor
nop
arpl
enter
addl
mov
sub
fsubs
popf
stos
std
pop
mov
ljmp
jecxz
cmp
ficoml
pop
mov
xchg
ja
cmpsl
xchg
clc
ret
mov
in
fwait
sub
lods
and
or
ljmp
push
or
popf
adc
scas
movsw
popa
jno
lcall
adc
pop
jl
mov
and
xchg
mov
mov
dec
pop
adc
sub
lcall
imul
cmp
int
xchg
test
into
dec
jns
sub
jne
in
mov
push
pop
incl
inc
scas
pop
mov
mov
imull
test
stc
pushf
test
push
jg
movsb
stos
out
or
dec
sbb
xchg
faddl
enter
adc
xor
push
inc
icebp
add
lds
in
aaa
fsubr
out
bsr
inc
dec
pop
sarl
push
pop
scas
es
xlat
sub
adc
or
sub
stos
loop
imul
imul
dec
inc
movsb
jp
sbb
jmp
push
mov
testl
call
sarl
pop
jno
int3
add
dec
xor
adc
mov
pop
push
mov
movsl
cmp
cmp
adc
pop
pop
pop
repnz
pop
or
push
insb
stc
or
mull
push
jp
or
jb
lock
xor
call
add
out
xchg
int
push
push
adc
push
dec
adc
stos
clc
push
test
or
bound
popf
iret
int
shlb
push
mov
add
fsubrl
adc
sub
insl
ja
adc
adc
cld
scas
dec
xchg
xchg
mov
adc
mov
mov
loop
lcall
mov
fwait
idivl
push
push
cmpsl
loope
and
adc
outsb
push
hlt
pusha
jo
fnstsw
adc
or
push
inc
jae
xor
push
pop
jbe
pop
icebp
cmp
stc
adc
mov
enter
sub
popf
or
add
enter
std
dec
mov
or
lahf
or
aaa
dec
icebp
cld
cmp
popf
xor
gs
xor
xor
into
jne
divb
jo,pt
ja
mov
dec
mov
out
xchg
adc
dec
or
aam
fcomip
sbbl
rolb
lods
shr
adc
cmp
inc
pusha
xor
sub
popa
mov
inc
push
add
mov
cmpsl
inc
lcall
xchg
sbb
mov
mov
pop
movsl
add
adc
adc
rcr
jmp
ret
sbb
inc
push
pop
push
sub
fmull
xchg
out
jmp
sti
jo
sarb
dec
dec
or
sbb
mov
shrb
mov
test
sbb
cmpsl
sbbb
imul
movzbl
and
daa
inc
sbb
mov
inc
xor
ljmp
push
push
mov
iret
ret
es
std
daa
xchg
add
lahf
mov
fadds
popa
add
outsb
ljmp
lock
jp
gs
sbb
mov
or
or
sub
cli
and
in
jl
inc
jo
in
fs
cmp
cwtl
int
loop
sub
pop
test
stc
sub
mov
int
ljmp
sub
jmp
jge
jecxz
jb
push
pop
into
push
mov
addb
xchg
mov
inc
les
insl
aam
addl
aas
mov
dec
dec
cs
sub
jg
out
nop
push
xor
repz
jp
add
and
cmp
jae
sbb
xchg
dec
add
in
ss
cmp
mov
sti
daa
frstor
jbe
test
push
and
pop
outsl
lock
mov
xor
popa
or
pop
in
aaa
cmp
xchg
test
xor
cmp
shll
xor
xor
add
aas
dec
outsl
les
gs
sub
push
test
out
sub
mov
mov
dec
push
sub
mov
pop
and
jle
int3
mov
pop
daa
sbbl
ret
mov
clc
pop
xor
jno
push
jb
lock
sbb
sub
adc
mov
xchg
pop
push
lods
imul
mov
add
adc
lcall
ja
pop
and
fisubrs
iret
or
test
scas
les
pop
call
add
jno
ficompl
or
fbstp
inc
xor
loop
in
xchg
sbb
jecxz
xor
or
cltd
pop
pop
inc
mov
mov
es
insl
sub
adc
push
or
mov
xchg
and
xchg
mov
dec
cltd
or
cmp
je
cmp
ret
mov
mov
jne
cmp
mov
push
add
mull
mov
lods
sbb
xchg
xchg
shlb
lods
inc
mov
iret
push
les
push
sarl
out
test
imul
xlat
dec
push
loop
subl
aad
ds
and
aam
and
dec
aam
sub
and
or
test
jmp
inc
lock
lcall
mov
test
sub
pop
cmpsl
test
push
lret
pop
push
outsb
add
xchg
sbb
call
clc
pop
clc
xor
xor
jmp
sbb
push
ds
mov
xchg
xchg
sub
dec
fildll
adc
dec
nop
imul
add
sub
sti
push
pop
pop
fsubl
sbb
jmp
pop
push
inc
push
mov
pop
enter
jns
subb
pop
dec
adc
push
outsb
fistpl
stos
aad
test
jae
dec
fs
pop
jle
cs
jecxz
js
ljmp
push
mov
mov
or
xchg
shl
jo
mov
adc
mov
xor
outsb
mov
movsl
les
sub
aaa
inc
mov
push
xchg
jbe
mov
xchg
pop
and
xor
or
or
xor
dec
sarb
aaa
xchg
inc
push
or
cli
clc
push
and
push
cmp
lods
sub
push
sbb
cltd
push
dec
add
out
xchg
divb
inc
xchg
ret
sub
notb
mov
in
add
inc
pop
cmpb
gs
cltd
mov
cmp
in
rcll
sub
stos
mov
pusha
mov
sbb
std
xabort
orl
mov
adc
xor
sub
push
in
hlt
aas
aam
je
cmp
insl
mov
add
xlat
add
ss
popf
sti
or
cmp
sbb
pop
inc
jnp
and
stos
out
add
fiaddl
xchg
xor
mov
lock
int3
jle
std
or
sbb
jl
xor
stos
in
mov
out
sub
pusha
ja
mov
sub
arpl
push
pop
sub
mov
dec
clc
sub
je
mov
jmp
hlt
jp
add
sahf
pop
jle
repnz
divl
lret
dec
push
push
dec
push
iret
jge
movsl
les
ljmp
mov
test
rclb
xlat
scas
divl
gs
mov
push
rcl
mov
add
xor
mov
pop
fwait
stc
out
pop
cltd
mov
imul
pushf
mov
sbb
jns
xor
shlb
mov
mov
addr16
cld
jle
inc
jmp
loop
or
test
int3
push
je,pt
insl
xchg
mov
lods
repnz
rclb
add
cltd
xchg
adc
bound
jb
push
push
mov
pop
mov
rcl
and
fs
mulb
mov
jae
jl
cmp
cli
jle
jo
adc
js
inc
andl
out
pop
add
mov
jg
adc
xchg
aaa
dec
xchg
mov
cld
cmp
jns
orb
ss
ja
cmp
pop
aad
stos
popf
push
adc
adc
fs
stc
push
fists
or
iret
sub
fldcw
cmc
inc
divl
fisubl
movsb
sbb
xor
pop
rcll
mov
clc
test
iret
jl
push
jo
fldl
inc
aaa
lcall
cli
mov
add
movsl
pop
mov
pop
or
adc
andb
adc
imul
lods
jecxz
jae
and
je
dec
adc
lods
xor
cmp
and
and
sub
out
or
jns
mov
cmp
jecxz
mov
fadds
cltd
sbb
push
movsb
inc
mov
adc
jge
add
pop
push
xor
add
mov
stc
xor
into
outsl
xchg
mov
dec
data16
inc
xor
add
pop
gs
rcrl
fmull
sbb
inc
push
lods
pusha
mov
add
mov
cmp
ds
jae
cmp
adc
js
or
pop
repnz
push
add
daa
push
pop
inc
into
dec
imul
sub
inc
cli
inc
jne
push
mov
push
inc
mov
push
push
popa
iret
cmp
js
mov
push
pushf
test
inc
mov
pop
rorb
roll
iret
push
into
cmp
inc
popa
adc
mov
aas
loopne
call
add
sbb
jno
add
psrlq
pop
ljmp
arpl
mov
mov
or
xchg
dec
add
lds
ffreep
shll
add
push
sbb
mov
out
jnp
adc
in
pop
daa
fst
loope
cmpsl
dec
outsb
dec
ljmp
lahf
jecxz
jb
jb
sbb
mov
push
jb
cli
hlt
jl
shr
mov
popa
jle
push
and
lahf
xchg
sub
xchg
cs
dec
adc
loope
mov
mov
inc
hlt
in
shl
mov
fnsave
cmp
jns,pt
mov
xor
imul
mov
dec
cs
mov
dec
jmp
ss
loop
das
mov
test
imul
sbb
arpl
sarb
int3
dec
mov
imul
aas
scas
and
push
movsl
push
movsl
xchg
pusha
xor
insb
repz
in
jne
xor
mov
sbb
pop
push
repnz
bound
or
aaa
dec
and
std
arpl
in
xor
cli
fwait
loopne
lea
in
mov
data16
jns
push
push
imul
hlt
sbb
mov
mov
pop
sub
movsl
add
jecxz
jae
call
data16
push
sbb
ret
loopne
stc
imul
popf
cmp
out
ss
addr16
and
push
dec
aad
mov
push
and
dec
testb
add
mov
fildll
int
fisttpll
ret
mov
popa
jecxz
pop
fldl
adc
cmp
inc
pop
dec
mov
pop
mov
add
testl
roll
orb
in
or
xchg
mov
je
in
fsubr
sub
push
fldt
push
sbb
bound
push
pop
movl
jge
fdivr
subl
xor
nop
mov
adc
and
out
pop
inc
xchg
and
popf
mov
iret
jmp
push
stc
enter
ror
movsl
pop
outsb
stc
mov
aad
cmpsl
add
or
adc
cwtl
movsb
sub
dec
loope
and
subl
sub
and
mov
scas
push
lea
out
les
jmp
xor
pop
nop
pop
stos
dec
out
repnz
jae
jecxz
push
imul
push
push
leave
fbld
aaa
and
xchg
pop
cltd
add
test
in
pop
mov
pop
adc
insb
pop
pop
adc
xchg
sub
lods
fstp
mov
xor
movsb
inc
mov
xlat
inc
jmp
xor
lods
dec
ficomps
cmpsl
rcr
mov
movsl
ret
mov
pop
in
or
pop
xchg
js
jno
int3
sub
in
sahf
fdivs
mov
scas
adc
cmp
in
sub
insl
pop
pop
inc
and
rorl
sbb
cwtl
push
adc
inc
or
stos
jge
icebp
shrl
gs
and
push
data16
inc
adc
lret
and
xchg
fcoml
js
pushl
into
xor
pop
fstpl
cmp
xchg
xor
out
fndisi(8087
sub
fwait
xchg
and
mov
aad
push
dec
inc
icebp
jmp
cwtl
mov
mov
mov
fs
shl
jmp
dec
mov
scas
xor
pop
test
outsl
into
jge
add
add
xchg
adc
mov
and
cltd
sarb
inc
cmp
push
call
add
imul
sub
into
push
push
jecxz
fstps
push
or
jecxz
xchg
inc
cli
xlat
pushf
gs
mov
or
mov
jne
add
scas
das
and
jmp
imul
pusha
in
bound
lret
adcb
sbb
mov
adc
in
and
sbb
cmp
call
stos
dec
cwtl
lock
jne
sahf
cmp
xor
xor
xchg
cmp
sahf
int3
xlat
xchg
mov
jae
adc
jg
fucom
lds
mov
pop
popf
fs
stos
imul
cmpsb
inc
mov
xchg
mov
rorb
sub
xchg
xor
inc
push
orl
xor
sub
pushl
data16
outsl
mov
out
orl
in
movsb
push
fldcw
lahf
sub
pop
xchg
mov
pusha
jnp
shll
test
xor
sub
sti
fdivr
push
cld
jl
or
inc
mov
ja
ret
inc
lods
adc
clc
jecxz
sub
lods
mov
clc
in
fisttpll
jne
sub
sti
xlat
js
inc
lret
cli
cmc
sub
aaa
sub
out
sub
add
push
pusha
je
jne
jle
lock
loopne
jb
mov
int
sub
loope
cmp
mov
test
das
rcll
inc
pop
iret
mov
xchg
push
push
push
mov
mov
cltd
ret
fiaddl
mov
mov
ret
dec
test
mov
mov
cmc
int3
loope
or
and
cld
stos
adc
stos
je
arpl
sbb
fwait
jmp
or
mov
or
xchg
inc
add
jge
ficomps
stos
pop
jbe
scas
xor
pop
loop
cmpsb
dec
ficoms
jmp
push
mov
pop
push
push
sub
and
test
cld
negl
inc
xchg
xchg
bound
add
lcall
in
dec
in
and
xlat
pop
mov
cmp
ret
xchg
in
jl
mov
aas
daa
mov
scas
in
movsb
push
adc
fwait
mov
or
fists
arpl
and
scas
sub
inc
mov
repnz
mov
pushf
pusha
cmp
out
pop
or
xchg
test
or
xchg
sub
mov
fcomp
jg
push
push
int
sbb
divl
in
push
sbb
in
cmc
inc
or
movb
or
and
lahf
ja
mov
loopne
adc
pop
clc
xor
aas
pop
adcb
mov
mov
jl
movsl
xor
fldenv
std
iret
popa
push
sbb
sbb
rcrl
xor
cmpsl
mov
xor
in
mov
push
gs
cmp
adc
xor
dec
icebp
lods
pop
jo
icebp
inc
xchg
fbstp
mov
xchg
aas
ja
push
pop
sub
ds
and
adc
mov
outsb
pop
pushf
jo
in
fsqrt
jle
mov
mov
sub
xorl
xor
fs
jbe
dec
cmp
mov
sub
pushf
hlt
mov
push
mov
or
dec
jno
mov
test
aaa
les
adc
cld
int
jg
add
and
add
or
dec
imul
pop
push
test
dec
mov
push
scas
orl
enter
test
outsl
add
aaa
push
sub
xor
jo
pop
stc
jmp
push
xor
sub
testb
pushf
fadd
jae
fdivs
and
mov
cmpsl
xor
mov
mov
lret
pop
hlt
and
das
loopne
mov
lahf
in
jbe
insl
out
jae
push
cli
push
pop
lret
sti
pop
lcall
arpl
jae
rclb
cs
add
inc
mov
mov
jnp
insl
lcall
ficompl
cwtl
lcall
adc
jne
dec
or
in
std
stos
int
out
dec
stc
adc
les
push
ja
stos
lahf
jbe
imul
mov
out
xor
sub
js
dec
idivb
ljmp
imul
push
adc
push
int3
jnp
fisubl
insl
adc
mov
inc
lahf
or
jb
jne
pop
repnz
mov
add
lock
or
je
arpl
cltd
or
bound
mov
inc
jle
jnp
sub
pop
bound
cltd
adc
dec
dec
sti
push
test
mov
xor
lock
arpl
pushf
or
lret
mov
stos
jge
ss
sbb
sub
enter
mov
mov
outsb
les
inc
iret
pop
add
dec
shrb
cmp
mov
mov
cmp
jge
arpl
adc
rcll
ret
mov
add
or
jae
cmp
sub
mov
lret
push
push
adc
sbb
jae
dec
mov
jbe
cmp
mov
pop
jg
jb
enter
mov
rorl
mov
push
lods
pop
dec
dec
fsub
push
aad
fwait
mov
jae
push
arpl
add
jnp
mov
loope
loope
mov
mov
adc
test
sbb
mov
pop
lret
scas
pushf
repnz
adc
popf
callw
jns
clc
outsl
fdivp
push
push
push
in
cmp
mov
inc
repz
sub
sbb
mov
sbb
dec
pop
sbb
or
repnz
cmp
hlt
mov
out
pop
aad
mov
sub
push
adc
jno
lret
add
push
cmpsl
repnz
cltd
xchg
fs
jo
insb
jecxz
xor
adc
add
test
inc
mov
into
xor
loopne
xor
push
addb
faddp
push
xchg
sub
test
scas
lock
loopne
insl
es
mov
lock
sbb
iret
test
cmp
push
jl
push
inc
xchg
les
ss
lret
xchg
lcall
aad
sahf
and
imul
jnp
aam
mov
ljmp
bound
jb
xchg
xchg
xor
leave
or
in
stos
stos
jge
push
add
push
dec
dec
cwtl
lea
ss
or
mov
adc
jmp
icebp
ja
adc
fldenv
cli
lods
push
cmp
loope
mov
popf
jns
insl
jae
pop
push
popf
push
xor
or
add
dec
and
into
loop
jae
std
jmp
or
mov
jp
add
add
push
rclb
inc
psllw
pop
fsub
inc
sbb
or
fwait
push
aaa
cld
mov
hlt
mov
rclb
orl
adc
xchg
xor
fstpl
add
cmpb
cmp
pop
mov
int
lods
xchg
and
loope
test
or
pop
imulb
shrl
cmp
andl
leave
roll
data16
addr16
arpl
test
bound
mov
popl
mov
add
add
ja
mov
jns
in
and
je
rcrb
xchg
bound
dec
push
ss
data16
fcmovnbe
mov
mov
adc
cmp
mov
in
sub
lcall
jno
inc
inc
bound
pop
mov
jbe
cmpsb
negb
jg
fildll
imul
or
mov
sub
sbb
sbb
pop
mov
lret
fsub
mov
pop
mov
setb
sbb
xor
out
sub
xchg
jnp
repnz
mov
mov
add
shlb
xchg
int3
add
decb
ret
xor
lahf
sub
sub
push
stos
dec
movsb
icebp
movsl
inc
pop
inc
pop
add
or
ret
iret
enter
in
nop
adc
mov
push
std
in
xor
cmp
addr16
dec
fistps
test
sub
jle
addr16
int3
cwtl
jg
pop
sbb
loop
pop
xor
cmpsl
mov
push
repz
ficoml
sub
pop
enter
jno
mov
rolb
lret
jbe
dec
adc
out
push
xor
lret
inc
inc
add
inc
loop
sahf
mov
adc
xchg
ds
ss
xor
xchg
testb
jp
xchg
je
jge
scas
dec
cmc
fnsave
subl
add
sahf
mov
test
cs
outsb
lahf
jns
test
orb
add
xchg
fs
fnstcw
dec
mov
daa
call
mov
aaa
ficoml
cmp
cmc
jmp
test
pop
sti
mov
addr16
or
push
inc
or
fcompl
xor
mov
pop
mov
mov
bnd
arpl
sbb
mov
es
outsb
jl
call
sarb
outsl
cld
xchg
test
lds
mov
sub
jmp
insb
in
lahf
jnp
sub
cld
jecxz
gs
push
pop
mov
aam
adc
imul
xchg
push
mov
xor
sub
lods
jnp
stc
in
loopne
data16
leave
neg
fsubrl
iret
xchg
enter
mov
adc
fidivs
jns
sub
jge
adc
sub
inc
or
and
pop
hlt
inc
scas
or
jns
es
lods
mov
cmp
mov
adc
push
add
insb
xor
ljmp
adc
inc
mov
mov
xor
inc
adc
cmp
mov
dec
adcb
dec
das
outsb
cmp
test
jge
shlb
cmp
pop
pushf
or
sub
adc
push
roll
and
stc
fisubrs
push
out
xchg
xchg
jecxz
mov
push
aam
fstp
sahf
ljmp
fwait
movl
lock
inc
lahf
mov
pop
sbb
push
mov
sub
scas
ret
movsb
in
xor
xor
pushl
push
mov
mov
jg
fnstcw
ljmp
push
test
xor
cmp
aas
mov
pop
test
sbb
loopne
mov
lods
cwtl
data16
pusha
and
dec
or
fdivp
jae
sbb
dec
add
inc
mov
je
decb
in
jmp
repz
ficomps
dec
dec
pop
jecxz
xchg
jmp
and
sbb
sbbb
mov
mov
xor
int
fcomps
add
mov
mov
mov
in
mov
fmull
inc
cmp
rolb
dec
push
push
mov
pop
xor
cltd
xlat
ror
mov
add
setb
sub
mov
lea
mov
pop
mov
fwait
stos
jmp
xchg
cli
lcall
cwtl
adc
lret
rorl
push
push
inc
dec
xor
scas
aas
pop
lods
dec
hlt
shrb
push
mov
insb
js
rorl
ss
xchg
cmp
and
ret
push
popf
dec
mov
mov
adcl
ds
mov
mov
mov
lods
xchg
fdivs
xchg
adc
test
int
repnz
repz
mov
lcall
jns
pop
pop
mov
lods
mov
xchg
insl
in
inc
je
xor
sub
push
std
sbb
pop
xchg
add
arpl
jl
stos
adc
loope
repnz
push
jmp
pop
in
push
sbb
jae
push
sbb
mov
or
pop
xor
lcall
ja
ret
or
ds
inc
mov
xchg
mull
inc
cli
lret
mov
or
sar
aad
cs
scas
pusha
ret
mov
adc
popf
adc
mov
adc
ja
push
xchg
fcmovne
cmp
xchg
xchg
push
push
ret
mov
push
pop
cmp
dec
jmp
jnp
mov
sub
fldcw
repnz
jp
nop
loop
in
in
jb
fldenv
xor
xor
or
jbe
push
sub
mov
inc
bound
stc
in
push
jle
pop
cmc
jg
mov
sub
lods
call
inc
mov
adc
or
or
jns
insb
add
daa
gs
pop
icebp
repnz
mov
aas
call
popa
cwtl
mov
js
push
add
pop
xchg
jecxz
out
test
jns
es
mov
dec
in
inc
sbb
fs
aas
clc
sub
fisubl
es
rorl
cmpsb
cmpsb
push
cmpsb
pusha
dec
adc
lds
push
lcall
movsb
imul
dec
and
lds
fsubrs
or
ljmp
arpl
test
sub
je
imul
shlb
lock
out
mov
fldcw
and
pop
lea
sub
jae
arpl
fs
push
out
jg
push
fbstp
pop
jle
in
sahf
or
ds
inc
psrlq
or
data16
aad
lcall
add
mov
add
loope
popf
mov
fidivl
sub
outsl
pop
lret
and
dec
inc
pop
cmp
mov
pop
mov
xor
in
mov
xorl
mov
imul
xchg
clc
and
sbb
adc
in
fsts
fwait
lea
out
and
xor
pop
and
cmp
test
xchg
fimull
add
insb
lea
roll
lahf
cltd
push
gs
cmp
jnp
mov
mov
out
lret
push
xchg
fimuls
aad
pusha
aad
adc
sbb
jb
in
sub
sbb
repz
mov
mov
cmp
sti
pop
cmp
fidivs
loop
lcall
sub
pop
jl
mov
and
lret
pop
push
outsb
lds
out
cmpl
call
jne
mov
push
jmp
into
fmulp
repz
adc
push
aaa
shl
dec
lods
mov
rcl
pop
xchg
adc
ljmp
cmp
loopne
dec
es
sbb
adc
inc
pop
aad
jb
cmpsb
jle
popa
fs
inc
aad
addr16
inc
ja
push
push
std
das
ud1
fnstsw
xor
sbb
mov
bound
jnp
or
push
aam
mov
lret
or
mov
dec
inc
ljmp
xor
xor
cmpsb
xlat
negl
pushw
mov
push
stc
add
sub
xchg
mov
cmp
mov
sub
dec
mov
pop
mov
push
sub
imul
dec
lock
mov
jecxz
cmpsl
das
add
jp
xor
inc
push
insl
movsl
push
and
sub
fstl
pop
pop
cmc
mov
sub
or
jnp
cmp
cltd
xor
xchg
push
icebp
lcall
sbb
adc
jle
push
or
fs
inc
out
adc
add
xor
xchg
sub
xchg
inc
dec
shl
jg
aaa
adc
pop
std
add
or
inc
aam
or
pop
or
hlt
adc
sahf
push
and
negb
test
mov
sub
cli
pop
sub
inc
in
adc
hlt
loop
push
fstl
inc
inc
outsb
aaa
lret
stc
sbb
das
and
cld
addr16
imul
lods
push
mov
popa
iret
push
jnp
ljmp
repnz
sbb
gs
lods
push
fs
dec
push
out
jmp
mov
and
and
insl
movsl
mov
cmc
pop
mov
xor
jb
pushl
test
in
cmpsl
jns
mov
imul
sahf
or
stos
adc
call
nop
lds
repz
adc
test
adcb
add
mov
lds
pop
inc
pop
rcl
jmp
jae
fst
ret
addr16
inc
sub
jb
jnp
loop
mov
outsl
in
testb
or
das
sbb
and
pop
iret
sub
sahf
hlt
lock
push
sbb
das
pop
fisubl
dec
dec
push
sub
repz
outsl
add
cmp
lods
xor
push
mov
scas
stos
insb
pop
je
mov
jnp
xchg
adc
mov
or
int
sarl
pushf
add
loopne
popf
jmp
mov
insb
mov
sub
test
pop
jecxz
add
in
and
inc
int
lcall
pop
fwait
adc
lret
mov
and
fisubs
push
les
cmpsl
push
fadds
pop
movsl
sahf
pusha
push
sub
xchg
bound
ret
popf
je
add
shlb
cmp
inc
negl
add
cmp
shll
jne
dec
add
repnz
xor
loope
push
std
adc
jae
pushf
xor
ret
loopne
lret
icebp
fbstp
pop
rorb
fisttps
lahf
sbb
push
push
fisubrs
movb
test
out
xlat
xor
jb
ljmp
cmp
mov
ds
dec
push
aas
stc
xlat
decb
sub
lock
mov
test
fcmovnu
outsb
mov
mov
andb
jbe
jmp
test
fimuls
shld
lret
jmp
pop
or
pop
adcb
mov
cwtl
dec
jmp
dec
fs
xchg
lret
sbbl
in
cs
xchg
jmp
pushf
mov
mov
mov
test
outsb
in
dec
cltd
xor
ds
push
dec
les
jg
add
fimull
test
rcll
fwait
cmp
mov
pusha
sub
lea
xor
icebp
sub
lret
shl
outsl
inc
loopne
stos
loop
or
cmp
hlt
mov
stos
jp
ja
xchg
loopne
mov
cmp
int
addr16
fidivl
es
jbe
xchg
cmp
cmp
pop
mov
fcomip
sbb
push
nop
or
sar
sahf
or
add
push
or
and
lret
iret
pop
xor
cmp
push
addr16
fdivr
jae
pop
ja
push
inc
pop
mov
sub
jne
fsts
aad
xor
insl
stos
push
fidivrl
dec
cmp
jo
inc
sub
test
jne
mov
sahf
xchg
or
mov
push
repz
lock
orb
popa
stos
mov
mov
mov
in
daa
andl
cltd
out
push
mov
data16
in
shl
pop
movsb
aas
mov
lods
xchg
outsl
adc
lods
push
idivl
mov
dec
test
dec
cmp
jnp
mov
dec
pop
xchg
scas
loope
mov
std
ds
mov
sbb
scas
mov
xchg
xchg
mull
add
cmp
call
dec
insb
mov
sahf
shrb
xor
outsb
fimuls
out
sbb
sbb
ficompl
mov
out
test
es
or
mov
mov
dec
lods
test
jl
sbb
iret
mov
repnz
imul
xlat
out
sub
ja
sub
and
and
orb
daa
out
stos
imul
cld
and
clc
xchg
outsl
rcll
je
push
cs
sbb
lods
icebp
lods
jmp
xchg
dec
es
loop
push
cmpsl
xlat
rcrl
adc
dec
push
sbb
sub
mov
ret
inc
jno
mov
scas
mov
cmp
scas
ds
mov
test
inc
ficoms
dec
arpl
in
repnz
xchg
pop
imul
outsb
subb
mov
scas
cs
jae
dec
jb
xchg
jo
mov
jecxz
sbb
sub
in
and
mov
or
ffree
adc
dec
repz
push
imul
in
xchg
pop
cs
jno
xlat
jno
adc
push
xor
inc
jb
scas
shll
push
aam
das
add
out
aas
mov
orb
test
cmpb
int
jp
mov
xlat
jns
or
mov
repnz
dec
testl
shlb
xor
mov
and
push
scas
pop
subl
push
mov
cmpsb
adc
jne
xchg
adc
xchg
xor
rclb
ljmp
cmp
fsubs
pop
or
jmp
ljmp
mov
arpl
mov
jle
enter
pop
test
fidivrs
ss
jecxz
loop
pop
inc
xor
cmpsb
int3
push
std
scas
mov
push
push
add
sub
loope
dec
xchg
imul
pop
mov
mov
xor
outsb
call
mov
add
cld
push
jbe
arpl
cmpsl
test
in
inc
es
hlt
jo
stc
scas
fdivrl
inc
inc
or
push
xor
std
sub
jb
sub
xchg
mov
shll
push
int3
inc
out
pushf
call
orb
pop
xor
scas
jmp
push
sbb
push
jo
or
inc
cli
inc
test
dec
aam
dec
std
and
xchg
mov
cmp
dec
push
hlt
scas
je
nop
push
push
cmp
xchg
cli
push
sub
mov
or
or
mov
mul
mov
xor
push
jae,pn
dec
push
fadd
push
jns
testl
dec
mov
push
ljmp
sub
pop
dec
mov
sarl
xchg
test
xchg
jne
loop
loop
adc
jmp
loope
shr
in
xchg
xlat
out
jo
mov
pop
int
cmp
xchg
xchg
xchg
arpl
cmpsb
and
cmpsb
xchg
andl
test
push
mov
fnstsw
or
cmp
pop
movsl
push
jmp
fbld
negb
out
testb
jae
mov
repz
pop
pop
in
xor
call
scas
push
lahf
frstor
xchg
cmp
inc
cmp
jl
jmp
mov
jle
popf
mov
add
xor
adc
mov
inc
dec
in
leave
jns
scas
push
sbb
xchg
inc
add
jno
xor
xchg
bound
cli
movsl
sarl
sbb
push
xor
fidivl
bound
sub
in
shrl
nop
xor
xchg
xchg
pop
negl
lock
or
cli
sti
ljmp
rorl
es
rclb
mov
mov
mov
popa
cli
ja
lock
sub
add
lods
repnz
loop
jo
adc
std
int3
ja
mov
jo
xor
iret
repz
out
movsb
int3
outsl
cmpsl
jae
inc
push
xorb
insb
in
stc
lcall
test
ret
test
mov
fcompl
test
iret
insb
movsb
aas
dec
dec
ja
in
mov
add
pop
imul
pushf
roll
cmp
mov
cld
lcall
test
push
outsb
mov
and
rolb
fdivrl
cwtl
daa
jns
cld
loop
pusha
ret
mov
fiadds
in
jge
mov
pop
gs
data16
cmp
out
ret
push
jo
aaa
xchg
cmp
xchg
mov
nop
sbb
lea
push
or
dec
jl
xchg
dec
xor
enter
jo
out
xchg
adc
mov
rdmsr
adcb
mov
xchg
repz
pop
mov
dec
mov
inc
fimuls
lea
fnstenv
popa
inc
adc
loopne
add
mov
test
andb
mov
inc
mov
daa
outsb
cmpb
leave
in
fbld
lods
pushf
clc
divl
or
outsl
outsb
lods
mov
xor
mov
xchg
xor
cmp
subb
mov
ja
insb
mov
jle
aas
in
out
ret
mov
shrl
sbb
cld
cmpsb
inc
pop
arpl
lods
das
popa
lret
jnp
adc
or
cmp
pushf
pop
xchg
sbb
push
jb
movsl
cmp
hlt
scas
mov
test
cmp
pop
fdivrl
add
adc
jecxz
jno
sbb
push
gs
movsl
aas
xchg
popf
aaa
in
mov
push
xlat
mull
test
lock
xor
adc
sub
or
fisubs
shrb
adc
je
call
push
les
mov
or
add
out
loopne
out
enter
adc
notb
sbb
xor
sbb
sti
sub
loop
jge
test
xchg
outsb
xor
lock
jg
insb
mov
mov
jnp
cwtl
pop
mov
push
jb
std
push
jne
push
push
sbb
in
mov
nop
ljmp
mov
mov
mov
scas
mov
xor
ja
fldl
adc
leave
cmp
pop
push
mov
mov
mov
jne
cli
sbb
js
adc
out
push
jle
inc
orb
or
cmp
and
xchg
loope
xor
sbb
ja
movsb
loopne
inc
mov
pushf
rorb
aad
in
lahf
ss
jns
in
es
int
pop
sbb
movb
xchg
loop
in
adc
lds
mov
sbb
roll
jp
sbb
xchg
mov
rorl
jmp
cwtl
cli
mov
scas
pop
lcall
aas
imul
dec
push
aad
sahf
push
mov
nop
xchg
push
push
push
stos
lods
mov
adc
xor
std
mov
hlt
cmp
pop
hlt
mov
les
stc
rorl
mov
jg
dec
mov
add
mov
push
xchg
arpl
push
test
cmp
jnp
inc
stos
sub
punpckhbw
mov
or
xchg
xor
fildll
int3
adc
inc
idivb
jp
inc
aad
out
jnp
push
dec
in
in
or
add
xchg
sbb
push
pop
inc
push
mov
push
mov
dec
daa
jecxz
data16
les
stos
fsubrs
mov
je
sub
lods
push
popl
inc
mov
shrl
rep
bound
add
xchg
push
cmp
mov
adc
test
sub
push
mov
pop
fcoms
or
xor
dec
mov
adc
lcall
pop
pop
pop
inc
pop
sahf
cs
or
push
xor
or
imulb
push
and
in
jbe
xlat
sbb
adc
and
or
dec
test
jne
push
dec
fldcw
dec
xchg
cmp
insb
cli
dec
insb
lret
ftst
fldcw
push
lcall
xchg
mov
cmpsb
imul
movb
xchg
nop
loop
test
ss
mov
xor
sub
ss
sub
outsb
imull
mov
mov
cli
push
mov
cmp
cmpsb
mov
adc
lcall
fidivl
ret
cmp
int3
xchg
or
ljmp
inc
mov
icebp
insb
loopne
movsl
add
jecxz
sbb
in
fwait
push
mov
fcoms
popa
lret
adc
jnp
jmp
mov
adc
into
jnp
pop
pushf
jl
mov
mov
mov
shll
aad
dec
sbb
fldt
push
bound
out
inc
fmull
out
mov
lcall
push
data16
push
les
push
xchg
pop
mov
shll
lock
iret
mov
out
movsl
sbb
pop
push
cmp
test
dec
sub
or
loopne
notb
ds
and
icebp
push
int
data16
xchg
push
mov
sub
popa
mov
sub
aad
inc
popw
push
test
add
mov
popa
sbb
sub
pusha
sub
es
test
push
negl
sub
pop
frstor
xchg
mov
push
cli
pushf
lds
pop
ret
jle
pop
loopne
add
ljmp
movsl
xchg
rorb
lods
sbb
cli
adc
xchg
sub
shl
stos
ret
mov
xor
sub
testl
pop
loopne
js
ds
push
xchg
mov
out
xlat
push
mov
and
push
push
inc
or
movl
orl
jbe
jle
movsb
and
dec
pop
mov
addl
pushf
sub
dec
loop
xchg
jo
fimull
addr16
cmpsl
mov
xor
les
cmpsb
mov
inc
icebp
jl
pop
adc
cmpsl
xlat
cmp
dec
xorb
test
jecxz
fimull
scas
insb
in
in
cmpl
sarl
sub
iret
dec
sti
inc
sti
xchg
mov
mov
cmpl
xor
cwtl
data16
adc
cltd
and
arpl
stc
mov
xchg
jnp
or
imulb
inc
stos
adc
and
int3
sbb
jbe
or
adc
stos
pop
jge
inc
pop
mov
push
cli
leave
rol
aam
sub
cwtl
flds
testb
adc
push
stos
dec
in
es
dec
sbb
mov
sbb
pop
imul
gs
out
xor
pushf
inc
jno
and
loope
cmpsb
jmp
loope
jecxz
mov
lock
add
push
push
test
lret
add
inc
sub
les
faddl
xor
dec
dec
arpl
adc
pop
enter
arpl
or
dec
or
push
stos
mov
arpl
jnp
bound
xchg
sti
ds
jl
movsl
sbbb
out
pop
fdivp
lea
cmpsl
dec
adc
mov
push
jno
add
bound
mov
mov
inc
push
mov
jnp
arpl
out
and
xchg
dec
lods
push
andb
cmpsl
mov
xchg
and
fbld
jno
out
shll
push
scas
in
je
cmp
fnstenv
adc
inc
mov
mov
test
mov
mov
mov
movsl
push
push
and
mov
stc
inc
imul
daa
xor
pusha
and
xor
out
es
pop
or
int3
mov
mov
mov
mov
or
jecxz
xor
ret
ret
cmp
pop
enter
stos
mov
mov
xchg
inc
xlat
lret
leave
pop
adc
stos
aam
jnp
mov
sub
in
pop
mov
test
and
js
outsb
lcall
xchg
jecxz
loopne
dec
pusha
inc
mov
jl
mov
and
clc
add
pop
testb
das
push
enter
jg
popf
outsb
fdiv
std
movsl
xor
jg
jo
push
inc
fdivs
xor
div
ljmp
mov
shrb
and
out
pop
call
leave
or
dec
leave
cmp
push
or
outsb
inc
mov
mov
xor
arpl
pop
cmpsl
push
les
repnz
pusha
bound
sbbb
ret
testl
dec
cld
dec
push
dec
sub
sub
adc
movsl
movsb
push
fwait
lcall
int
fs
push
int
imul
stc
mov
pop
jnp
mov
cmp
or
bound
pop
pop
dec
push
xor
mov
sbb
ficoms
insl
jmp
arpl
add
jecxz
orl
stos
int3
sar
and
jo
mov
mov
or
sub
or
xchg
cmp
loopne
imul
mov
inc
scas
int
lods
xchg
fadds
mov
out
jae
divl
aam
test
lea
in
daa
clc
bound
mov
xor
jecxz
arpl
push
jae
mov
mov
test
xor
ret
mov
popf
aad
pop
push
iret
jmp
shlb
inc
int3
push
cld
pushl
inc
cmpsl
push
in
add
mov
cmp
ret
or
fistpll
push
sbb
ret
jo
mov
push
push
xor
rcrl
outsb
call
jmp
xor
mov
imul
inc
movb
pop
sbb
sub
xchg
pushf
das
ret
testl
pop
leave
test
push
nop
pop
xlat
jmp
pop
in
jae
adc
cmp
jns
popf
add
ret
pop
dec
test
mov
shll
in
movsb
dec
dec
sub
out
sbb
pop
lods
mov
pop
in
push
lret
mulb
mov
js
fs
mov
lret
in
insb
pop
aad
adc
lock
inc
inc
lret
idiv
sub
dec
cltd
stc
adc
xor
sbb
lcall
js
sbb
subl
pop
lret
xchg
bound
je
dec
insb
add
int3
int
out
imul
and
jmp
subl
shrb
cmpsb
mov
mov
inc
mov
mov
out
shll
adc
fs
stc
dec
stos
imul
mov
repnz
and
add
pop
fldenv
nop
sbb
test
cmpsl
popa
int
add
loope
ljmp
jp
inc
lea
in
nop
ja
mov
sahf
in
add
int3
adc
mov
sub
add
adcb
mov
mov
push
xchg
das
mov
lcall
dec
push
test
xchg
inc
mov
xor
movsb
inc
icebp
jo
add
jmp
inc
int
and
push
clc
test
ss
mov
adc
fstl
idivb
lcall
fbld
jmp
mov
push
xchg
mov
stos
jb
dec
dec
je
outsb
out
sarl
sar
add
in
xor
add
sbb
or
out
popf
in
dec
push
sti
adc
addl
stc
cmp
xchg
mov
int3
push
push
jl
mov
neg
or
scas
test
shrb
pop
mov
add
push
pop
mov
dec
test
fucomi
ja
xchg
lcall
out
ret
or
loope
out
inc
add
adc
lods
les
mov
inc
popa
leave
cmp
outsl
dec
add
or
aad
fwait
cmp
lock
int3
cmp
and
mov
in
into
mov
lea
inc
jne
imul
test
push
sub
mov
jmp
mov
call
push
add
imul
in
inc
mov
cmc
je
lods
aas
subl
int3
insb
rorb
enter
xor
or
adcl
pop
test
push
push
cmp
sub
mov
cmpsl
outsb
dec
into
flds
and
jg
sub
imul
or
xchg
dec
es
and
test
cs
xorl
scas
lahf
shll
das
rcrb
mov
inc
out
push
xor
call
int
sub
ret
cltd
lret
daa
push
cmp
adc
mov
pop
push
jg
imul
adcl
add
rcrl
mov
mov
push
ja
in
push
push
int3
fildll
mov
insb
xchg
xchg
aad
xlat
jecxz
rcrb
incl
fidivrs
into
sbb
rcr
dec
add
leave
loop
je
outsl
and
addr16
fldl
push
jp
les
xchg
or
xor
pop
lret
jge
jae
das
fiaddl
push
lret
adc
fidivrl
test
xchg
push
add
adc
cld
movsb
and
sbb
outsl
test
xchg
inc
push
lahf
or
mov
stos
or
mov
test
adc
es
filds
icebp
cmc
out
adc
push
je
popa
paddb
int3
test
out
sahf
inc
das
scas
dec
in
fcmove
loop
mov
jno
push
mov
ja
push
cmp
xchg
xchg
xchg
add
adc
test
cmpsl
or
sub
repz
ret
fs
fmuls
insl
mov
jle
insl
push
jb
mov
fwait
xchg
das
xchg
test
or
faddl
aaa
push
add
pop
add
or
mov
cmp
popf
stos
in
cld
xor
cld
fsubrl
pop
or
dec
stos
jmp
inc
sub
sbb
rclb
cmp
xchg
inc
sbb
fstl
inc
dec
push
leave
and
fnstenv
lret
fwait
jns
push
xchg
lcall
outsl
xchg
xchg
das
dec
outsb
lcall
or
sbbl
jg
loope
aad
jecxz
jbe
bound
mov
sub
aas
fistps
push
xchg
mov
lea
out
or
mov
stc
scas
sbb
pop
icebp
jge
sub
jnp
mov
dec
jmp
jne
in
pushf
sbb
pop
xor
jl
push
lods
enter
xor
pop
push
push
push
fstcw
pop
mov
and
inc
mov
add
sbb
jnp
sbb
mov
mov
aad
cmp
or
cmpsb
inc
mov
jae
shlb
adc
xor
lods
and
cmp
push
ret
pop
fdivr
repz
dec
add
insl
lds
mov
orb
mov
into
ret
cld
mov
repz
pop
aas
and
mov
cmp
cmp
sbb
adc
int3
pop
add
cmpsb
inc
scas
pop
int
nop
add
push
loop
shlb
lahf
pop
add
or
insb
ja
xchg
jns
cmpb
jp
nop
out
rorb
add
loope
arpl
mov
inc
ds
add
insb
aaa
jecxz
push
outsb
mov
out
add
jp
inc
inc
shrl
add
cmp
notl
pop
dec
pushf
fwait
dec
sbb
test
mov
dec
data16
or
mov
xchg
xor
xor
out
popa
das
loope
es
dec
pop
xchg
rcrb
test
stc
mov
push
lods
cwtl
xor
xchg
inc
sub
inc
ljmp
cs
sub
push
push
ljmp
sub
cmpsl
cmpsb
push
fiadds
xor
out
push
into
das
sbb
mov
xor
mov
xchg
sub
add
cmp
xchg
inc
xchg
out
mov
out
popf
adc
xchg
push
icebp
cmpsl
or
sarb
xchg
das
push
faddl
shr
loope
fimuls
pop
add
lahf
pop
mov
and
fiaddl
xor
fmull
popf
cs
popf
sub
inc
adc
inc
shlb
fcmovnu
adc
fimull
outsb
push
scas
and
mov
fcoml
scas
mov
xchg
addr16
pop
jmp
shl
sub
daa
dec
decl
lahf
sbb
mov
adc
cmp
fcmovnu
xchg
fists
dec
shrb
mov
imul
pop
add
rcr
mov
dec
dec
js
inc
bound
or
insl
fcmove
or
sub
js
ljmp
xchg
lock
inc
movsb
aaa
test
popf
dec
or
pause
pop
push
bound
fwait
or
xchg
test
rcll
shl
jecxz
pusha
enter
mov
mov
add
jecxz
add
inc
cmpsl
shrb
dec
cli
mov
dec
adc
iret
inc
xorb
xor
cmpl
pushf
movsb
mov
aaa
lods
call
out
pop
stc
ss
aaa
call
loopne
cmp
les
jno
test
gs
jmp
jecxz
cwtl
cmpsb
lods
inc
mov
imul
adc
add
push
shll
mov
jmp
xchg
sbb
ret
xchg
cld
ret
rcrl
cmpsb
icebp
jl
cmp
sub
xchg
xlat
ds
inc
std
ljmp
das
sti
dec
pop
adcl
test
fsts
aad
fcoml
lret
call
xchg
data16
xchg
push
mov
pop
popf
cmp
cmp
decb
sbb
mov
test
xchg
cmpsl
in
js
insl
mov
lahf
add
mov
shlb
sub
addb
ret
jns
lods
mov
jmp
cwtl
bound
stc
stc
jb
xor
mov
sub
outsl
lods
jae
pop
aad
cmp
adc
jo
add
dec
js
dec
mov
outsb
rorl
repz
lock
cmc
xchg
int
sub
incl
mov
lcall
les
lahf
adc
adc
clc
pop
push
movb
out
mov
pop
and
xchg
mov
add
cmp
mov
push
ss
sbb
popa
cwtl
jns
cli
sub
aam
shr
stos
jb
nop
dec
sub
cmpsb
push
sub
call
in
test
mov
ljmp
push
insl
or
cmpsl
mov
in
fs
or
movsb
fs
and
push
ret
adc
ja
mov
pop
pop
add
test
jge
push
lock
adcb
jecxz
push
mov
xchg
pop
push
lods
fwait
lods
addr16
ss
cli
mov
dec
rolb
in
test
loopne
cmp
jb
xor
mov
sub
xchg
mov
and
dec
cmp
imul
sbb
fadds
and
push
cmpsl
jae
idivl
loope
xlat
fistpl
mov
popa
sbb
push
and
jl
in
mov
and
pop
mov
jae
aas
in
nop
cwtl
fucomi
dec
test
jae
add
inc
xor
mov
ret
mov
mov
cmp
sbb
test
and
movsb
dec
and
in
fildl
and
mov
ss
jmp
sar
rolb
fucomip
push
lahf
or
adc
push
push
jns
out
shlb
insl
out
xchg
fildll
rcll
add
data16
clc
mov
sbb
sti
mov
rep
das
pop
repz
dec
repz
cmpsb
push
mov
add
leave
cwtl
in
jecxz
bound
adc
push
adc
idivb
inc
fnsave
push
cmp
mov
push
xchg
mov
cmpsl
movsl
hlt
ficompl
cli
fmuls
cmp
rcrl
es
ljmp
sub
push
stc
sbb
dec
xchg
jp
xor
xor
jo
mov
pop
out
test
mov
push
xchg
lods
subl
cld
mov
jo
adc
shl
sahf
in
inc
cmpsb
jbe
nop
or
iret
outsl
test
pop
xchg
pop
dec
mov
xor
cmp
add
pop
pop
mov
aad
xor
aad
loope
lods
sbb
paddusb
cli
fsts
pop
cmp
sub
mov
cmpsb
lods
lret
out
xlat
inc
testl
in
mov
inc
ret
xchg
mov
jnp
push
jo
mov
fidivrs
cmpsl
pop
lret
fwait
js
adc
cld
fstpt
inc
clc
lahf
or
dec
aam
popf
fiadds
outsl
lods
jbe
scas
push
push
arpl
dec
xchg
repnz
mov
xchg
pop
arpl
mov
hlt
insb
add
push
lods
push
mov
aas
inc
cld
fucompp
and
fnstcw
mov
dec
add
mov
dec
fcomp
sub
jns
lea
imul
insb
clc
xchg
sub
xchg
push
pop
fucomip
stos
ret
mov
mov
in
cmpb
pop
fldcw
lods
push
out
addr16
xchg
sbb
cld
pop
test
mov
cwtl
mov
cltd
orl
and
loop
and
sub
jmp
sbb
ds
adc
push
xor
pop
pop
iret
fsubrl
ds
testb
pusha
mov
movsb
fimull
push
mov
aaa
sbb
scas
mov
dec
cmp
sbb
xor
fs
arpl
dec
test
mov
aas
cs
xorl
lock
loope
ret
or
xor
cmpsl
push
out
je
in
ficomps
stos
jg
mov
clc
cmp
in
add
xlat
sub
mov
adc
inc
cltd
ljmp
mov
and
in
lds
jecxz
fcomip
pop
pop
add
fsubp
stos
inc
dec
daa
bound
mov
push
cmp
pop
movsb
push
sub
stos
mov
add
xor
ds
repz
lds
icebp
xchg
sbb
sarb
fstpl
inc
jle
jl
dec
jecxz
jg
rcrl
push
push
inc
jle
dec
xchg
sbb
cli
jmp
dec
outsl
nop
cld
stos
mov
mov
ret
pop
repz
push
scas
roll
sbbl
out
mov
jp
sbb
xchg
outsb
pop
pop
mov
sti
xor
stos
push
mov
stos
pop
jecxz
xorb
adc
lds
pop
out
dec
fcomi
lock
push
lret
sub
addl
popa
sub
or
mov
jg
imul
pop
jae
mov
mov
mov
inc
cmp
cmp
sbb
lret
xor
call
xor
cs
test
add
lock
xor
inc
pop
add
insl
inc
add
mov
cmp
test
mov
mov
fildll
aam
int
iret
or
pushf
inc
es
addr16
cmpsl
xor
scas
in
notb
scas
sbb
ficomps
shlb
mov
mov
js
mov
and
jg
sub
xchg
outsl
xor
mov
cli
push
cli
out
sub
xchg
mov
xchg
mov
scas
es
sbb
push
pop
adc
push
add
call
inc
or
bound
rcll
fdivrs
xchg
push
xor
add
add
leave
aam
dec
jmp
testl
and
outsb
cltd
rcll
add
inc
cmp
cwtl
adc
pop
xchg
in
sti
cmp
jecxz
add
pop
push
repnz
inc
inc
cmp
lods
lds
addr16
int3
rcrb
cmp
mov
mov
test
sub
aam
movsl
ret
insb
sbb
insl
and
movsb
push
aas
push
ja
xor
cld
and
out
in
cmc
xchg
gs
in
call
imul
lret
jp
cmp
mov
gs
test
xor
loop
inc
or
hlt
insl
mov
bound
movd
fisttps
ja
out
jno
dec
lret
movsl
inc
sub
push
inc
sti
stos
int3
dec
popf
pop
add
cmpsb
xor
rcr
push
out
fidivrs
jae
in
mov
movsb
ja
inc
jg
add
mov
mov
or
cmpsb
push
stos
adc
js
mov
push
fidivs
jge
out
sar
cmpsb
popa
adc
leave
pop
xchg
mov
in
mov
jns
sbb
lds
ss
dec
aaa
aaa
push
iret
pop
orl
add
pusha
imul
insb
in
fldcw
lret
sbb
int3
push
jns
add
js
mov
cs
adc
mov
test
pop
jnp
xor
push
sti
push
jle
sbb
xchg
adc
int3
pcmpeqb
js
inc
xor
fwait
jnp
and
inc
sarl
and
dec
xchg
or
add
clc
out
jl
lock
pop
das
cmp
inc
lock
sahf
pop
cmp
xor
push
mov
push
mov
and
ds
mov
push
and
in
mov
mov
mov
jae
adc
inc
sbb
inc
push
mov
sar
dec
mov
lret
aas
mov
lahf
push
sub
pop
pop
pop
xor
inc
inc
sub
sbb
enter
in
jl
add
outsl
pop
fwait
rol
stos
test
cmp
adc
out
jno
and
fsubrs
lock
popf
and
scas
mov
mov
cmp
aaa
xor
stc
mov
aaa
int
call
xchg
or
test
loope
pop
xchg
xchg
sbb
jb
inc
jg
pop
inc
mov
mov
mov
clc
cwtl
rcrb
xchg
adc
fs
rclb
pop
enter
leave
daa
loope
cmpb
mov
push
inc
push
mov
jmp
or
sub
jmp
adcl
add
test
xchg
mov
lret
lret
test
cmc
cltd
or
xor
cmc
ficoms
mov
push
pop
jg
cmp
push
or
dec
mov
cli
xor
fwait
pop
xchg
outsl
sub
hlt
pushf
mov
das
and
sbbl
adcb
cmc
lods
pop
in
jecxz
adc
dec
pop
sbb
in
jle
push
and
mov
cld
ret
add
jg
in
mov
xor
fs
push
pop
push
fnstsw
pop
fwait
inc
out
add
lods
xor
leave
sub
xchg
or
xchg
movsb
data16
int3
test
jecxz
dec
cvtps2pd
ljmp
sbb
loope
sub
cmpl
lret
xor
out
pop
jmp
xchg
outsb
jl
inc
inc
jmp
imul
jg
pop
push
outsb
cmc
nop
sbb
imul
ljmp
popf
inc
pushf
fidivs
mov
lods
jns
ret
bnd
popa
mov
pop
xchg
xchg
adc
mov
leave
fisubs
popf
addb
shl
ret
xchg
sahf
movsl
pop
outsb
mov
enter
scas
push
mov
outsb
cmpsb
add
notb
add
popa
jp
pop
add
daa
dec
jmp
test
fistps
inc
test
jno
inc
bound
inc
shrl
mov
repnz
mov
flds
fwait
mov
lods
fisubrl
xor
fisttpll
insb
test
call
sbb
ss
and
jb
int
cli
push
cmp
imul
int
lret
jl
mov
fldcw
jno
jge
xchg
mov
xor
subl
das
add
sub
xchg
jp
mov
push
fisubs
stos
sbb
adc
orl
mov
fcomp
pop
xor
sub
bound
sar
add
leave
rorb
push
pop
cmp
pop
pop
inc
js
or
scas
fwait
cmp
jbe
jle
ficomps
imul
mov
xlat
or
mov
mov
fcom
shll
cmp
gs
subb
mov
repz
call
xchg
lcall
mov
shl
out
sbb
lahf
mov
inc
pop
arpl
nop
js
hlt
loopne
addl
out
sbb
jno
ljmp
xchg
push
aad
sub
dec
movsl
xor
cmpsb
sbb
mov
adc
insl
icebp
mov
xor
cmp
imul
pusha
add
cmpsb
push
fsubs
push
out
daa
inc
iret
fnstcw
aam
pop
jno
lea
sbb
test
clc
test
shrb
jecxz
loope
loopne
cmp
mov
repz
sub
lods
and
stc
inc
fsubrl
pop
aaa
iret
bound
lcall
xchg
mov
sub
or
sub
jg
mov
es
lcall
mov
adc
int3
into
push
loop
pushf
mov
xor
stos
loop
or
std
cwtl
sub
insb
repz
out
movsl
mov
bound
cmc
add
cmpsl
adc
aaa
data16
pop
inc
mov
mov
jb
jp
fildll
mov
inc
xorb
adc
jne
addr16
lea
mov
inc
push
pushf
inc
loope
lods
cld
xchg
adc
in
pop
clc
sti
shrb
push
push
sub
ljmp
and
inc
es
push
and
shll
negb
push
mov
jae
in
aaa
xchg
scas
std
xchg
bound
scas
cli
cmp
loopne
shrb
mov
mov
adc
js
mov
xlat
test
cmpsb
and
gs
cmc
dec
or
jns
repz
ret
xor
mov
aas
enter
movsl
adc
imul
addb
loopne
or
sbbl
and
fdivl
jp
out
xchg
hlt
rorl
pop
mov
cltd
jns
xchg
sub
sub
add
cli
inc
xor
dec
xchg
aam
das
pop
mov
imull
rorl
dec
cmc
mov
jbe
sti
xchg
not
sbb
movsb
xchg
mov
addl
adc
push
lahf
int3
bound
pop
ret
dec
push
hlt
dec
push
mov
nop
mov
xor
push
adc
add
and
aaa
jb
dec
pushl
mov
pop
ficomps
pusha
xlat
inc
xchg
and
aam
xchg
fdivrl
lods
add
inc
das
orb
lock
bound
lea
and
cld
sub
in
add
lock
add
ficoml
jbe
cmpsl
push
cmp
add
jno
xor
or
jne
fwait
mov
fisubrl
or
sub
and
sub
mov
in
lea
mov
int3
insb
adc
lods
clc
mov
out
mov
sti
mov
or
adc
xchg
call
sbb
ljmp
mov
jnp
push
and
mov
jbe
aas
xlat
pop
iret
mull
jle
icebp
lods
inc
adc
aaa
test
mov
pop
or
mov
dec
arpl
xlat
add
cmpsl
aaa
sbb
ffreep
mov
push
xlat
clc
sub
push
mov
clc
inc
inc
mov
loop
xchg
les
xorb
mov
cs
adc
je
mov
mov
cmp
dec
std
sbbb
jb
mov
adc
outsl
inc
push
pop
cli
pop
fnstsw
shl
jmp
sbb
ss
pop
and
fcoms
adc
dec
sub
jge
je
jnp
fwait
lock
cmpsb
aaa
arpl
push
xchg
mov
andl
test
cmp
fldl
fisubrl
mov
mov
repz
or
jbe
lods
pop
jnp
jne
ljmp
add
lds
xchg
cmp
sub
push
sbb
cmp
inc
outsb
bound
cmp
insl
aas
neg
cltd
push
lods
int3
add
pop
stc
pop
mov
fisubrs
mov
pop
xchg
push
inc
mov
lahf
cwtl
repnz
jmp
movsb
xchg
in
ljmp
pop
sub
into
scas
and
mov
jle
aas
andl
sub
jnp
jle
mov
fmuls
mov
sbb
insl
ret
xchg
bound
mov
imul
out
stos
mov
adc
cmc
insb
adc
pop
int
jns
or
test
mov
jo
call
mov
jecxz
push
adc
cmp
pop
mov
shrl
mov
adc
cmc
imulb
in
shrl
dec
rorl
and
push
dec
cmc
sti
test
or
fstps
hlt
lret
mov
idiv
jae
lcall
frstor
push
fs
aaa
rorl
push
xor
pop
stc
mov
jbe
inc
out
fidivl
mov
rorb
std
cltd
xchg
sub
xlat
xchg
jne
daa
mov
xchg
jp
mov
pop
and
pop
out
scas
sbb
or
test
cmpsb
shll
cmp
jg
cwtl
push
fsubrl
sub
fmull
jle
cmp
mov
imull
pop
in
in
cs
push
add
shl
test
pop
jnp
repnz
fsubrs
pop
lods
orl
jnp
popa
add
jns
daa
rolb
sbb
fnsave
rolb
repnz
adc
negb
loop
or
clc
push
dec
xchg
push
cmp
pop
out
jl
lahf
sbb
xchg
lock
pop
enter
fs
cli
sub
sbb
into
sub
inc
push
sub
adc
cmp
ret
or
dec
mov
cmpsl
jne
push
fcoml
mov
scas
or
pop
ret
push
xchg
xchg
negl
int
mov
cmp
js
xor
popa
and
int3
jg
sub
mov
out
xchg
imul
in
xor
mov
fildll
movsb
fnsave
cli
daa
adc
movsl
ljmp
pop
dec
dec
jle
mov
mov
mov
cltd
cmc
rcl
enter
int3
loopne
mov
mov
push
aas
rclb
or
jmp
dec
mov
mov
push
xor
mov
mov
ljmp
and
in
leave
test
mov
add
rorb
fs
push
clc
and
and
adc
push
ja
sub
daa
je
sbb
inc
or
fmul
stos
and
loope
jo
pop
xchg
inc
ds
fs
adc
mov
sahf
xchg
in
out
cmp
xlat
adc
pop
push
cmp
pop
xchg
mov
roll
pop
xor
je
int3
pop
popf
mov
imul
data16
xor
decl
adc
sub
sbb
lea
jnp
leave
in
inc
test
jl
cmp
not
inc
popa
jbe
mov
rorl
jbe
pop
xor
leave
stc
push
xchg
pop
mov
jnp
aaa
cmp
or
mov
lods
dec
push
aas
movsb
dec
jne
out
xchg
iret
xadd
stos
scas
xlat
out
sarb
mov
ja
pop
out
jmp
mov
mov
inc
adc
roll
cmp
das
dec
pop
mov
dec
stos
jne
andb
std
icebp
jno
cs
cmp
jns
dec
sbb
mov
sti
insb
push
jnp
xchg
mov
out
mov
call
lods
addr16
bound
in
cmp
jge
mov
jo
sbbl
push
pop
pop
fchs
repnz
pushf
lods
les
mov
in
push
out
outsb
cmp
aam
cmp
outsl
ds
jg
inc
sbb
movsl
sub
std
bound
icebp
outsl
or
daa
xor
sub
and
adc
jmp
pop
push
ja
outsb
nop/reserved
das
imul
loopne
pop
push
jge
imul
loope
xchg
pop
scas
jecxz
cmpsb
test
cmpsb
sahf
and
xor
divb
fidivrl
stc
add
sub
cmc
push
xchg
xchg
notb
test
stos
mov
jmp
jge
lds
dec
cmp
adc
cld
mov
sbb
and
rolb
dec
sub
scas
jb
dec
leave
addr16
shlb
js
imul
xchg
mov
outsb
jo
sub
mov
or
add
mov
dec
popw
repnz
daa
shlb
pusha
repnz
bound
in
repz
xchg
rcr
sbb
js
add
push
mov
push
rcrl
mov
add
outsb
jmp
pop
js
in
in
mov
jae
cmp
pushf
int
ss
adc
xchg
push
inc
inc
push
push
jp
adc
sti
out
lea
dec
fwait
aam
mov
mov
dec
repz
neg
adc
cli
insl
push
xchg
cmp
xchg
inc
xchg
push
out
jp
call
dec
mov
and
dec
sbb
popf
sub
sub
leave
fwait
into
rorl
xchg
or
ret
nop
push
out
mov
mov
roll
popf
bound
and
in
inc
cwtl
es
scas
ret
es
mov
outsl
scas
inc
int3
sbb
aam
popf
ss
sbb
pop
jp
mov
add
fucomi
leave
imul
mov
and
ror
sub
xor
pop
inc
pop
xchg
mov
scas
and
cmp
dec
or
out
cld
jmp
pop
add
push
xor
jbe
sub
je
cmpsb
push
pushl
fiadds
xchg
lret
cmp
int3
push
test
icebp
inc
mov
adc
in
loopne
xchg
fistps
push
adc
mov
mov
in
sbb
mov
xor
ljmp
push
daa
cmp
add
xchg
fsubs
or
and
xor
inc
fisttpl
loope
xlat
loopew
mov
hlt
xchg
es
inc
rcr
outsl
mov
insl
mov
xor
dec
ficoms
stos
mov
in
add
dec
pop
and
gs
imul
push
out
mov
or
or
ss
adc
jno
cmp
sub
sbb
add
and
mov
out
fwait
loop
sti
mov
jmp
ljmp
ret
js
cmp
cmpsl
mov
mov
in
mov
xor
add
mov
imul
test
in
ret
into
mov
and
adc
mov
xchg
inc
adcb
or
ss
dec
outsb
ja
xchg
lods
sub
jo
mov
aam
not
lret
repz
stos
push
or
inc
fcomps
rorl
mov
pop
je
mov
sbb
xor
cld
adc
adc
loope
clc
out
mov
mov
xor
cwtl
dec
mov
fnstcw
lcall
inc
xchg
fwait
stc
mov
out
repnz
adc
dec
jg
dec
cmp
cmp
addr16
ljmp
push
cmovnp
dec
or
loopne
into
push
inc
stc
shl
sbb
inc
add
addr16
mov
mul
or
stos
sahf
push
fiaddl
inc
loope
in
ja
jns
jnp
jb
lea
repnz
insl
and
lret
push
jns
adc
mov
and
cmp
sarl
lahf
xchg
sbb
and
test
push
ja
scas
int
pushf
xor
dec
mov
mov
cmc
push
mov
aad
int
xchg
mov
add
xchg
sub
mov
and
sbb
test
in
je
repz
outsb
or
mov
cmp
add
push
bound
rorb
orl
outsb
stos
insl
xchg
push
int
push
shlb
xor
test
mov
add
and
xchg
mov
mov
push
sbb
mov
imul
add
aas
jne
into
dec
cmpsl
sbb
arpl
aas
daa
int
and
out
scas
or
adc
xor
icebp
in
dec
cmp
in
mov
push
bound
mov
clc
leave
sbb
sub
xchg
push
sub
lds
es
push
adc
inc
jecxz
push
xchg
ficomps
shll
mov
dec
and
mov
dec
addr16
inc
sbb
fs
cli
pop
pop
pop
sub
jae
pop
lahf
daa
cmpsl
xchg
push
jge
lods
sub
mov
add
mov
push
and
adc
mov
xchg
inc
cmp
hlt
popf
or
add
mov
mov
jge
subl
lret
lock
or
mov
lahf
inc
stos
std
addr16
mov
sub
pop
mov
fstps
sbb
add
popf
mov
in
subl
js
push
mov
adc
dec
pop
arpl
je
xchg
mov
mov
xor
add
sub
in
fmuls
jmp
iret
insl
add
add
inc
mov
es
dec
sbb
push
testb
xor
or
xlat
push
lahf
xor
kortestw
enter
movsl
fdivrl
lds
mov
dec
test
jo
bound
cmpl
jmp
mov
xchg
inc
xor
pusha
mov
mov
add
ljmp
mov
sub
popf
cmp
and
mov
fs
cmpsl
gs
mov
cmp
mov
lcall
and
dec
mov
movsb
repnz
dec
ret
and
in
sbb
rol
ficompl
fwait
jbe
inc
mov
popa
add
adc
cmpsb
shr
cmp
adc
popf
push
call
add
xchg
mov
ret
mov
lds
cmp
mov
lods
or
fwait
mov
mov
push
daa
ja
mov
pop
int
ljmp
je
faddl
rorb
xchg
inc
push
cmpsb
dec
xchg
push
std
stc
inc
popf
addr16
inc
nop
mov
test
pop
or
test
mov
cmp
gs
test
fildll
dec
into
xchg
shr
pusha
mov
mov
in
jae
outsl
ja
loopne
hlt
sbbb
cmp
sbb
jle
inc
rorb
icebp
into
or
lret
jns
imul
rcrb
data16
dec
pop
mov
jmp
xor
jo
xlat
jecxz
addr16
mov
pop
pop
push
scas
imul
mov
gs
mull
cmp
add
or
push
enter
popa
out
test
jbe
sarl
arpl
or
mov
sbbb
push
cmpsl
mov
adc
xor
xor
rolb
jno
jp
das
stc
sub
and
xor
mov
into
mov
ss
jnp
pop
es
mov
xchg
fmuls
out
jle
test
iret
gs
mov
jecxz
add
dec
out
add
shrl
insl
lret
shr
jbe
jae
sbb
inc
leave
fmull
sbb
jg
adcb
dec
es
hlt
or
scas
mov
inc
inc
cs
sti
clc
sbb
movsl
test
shlb
and
int3
inc
aam
mov
rclb
stc
into
mov
push
jnp
inc
and
daa
dec
mov
loop
fisttps
outsb
push
jns
in
mov
adc
icebp
lcall
cmp
push
test
cltd
and
adc
cs
or
je
rcrb
das
inc
pop
sbb
je
adcl
notl
mov
mov
out
add
idiv
mov
cmpsl
sbb
icebp
xorb
and
mov
add
fcomip
and
enter
je
imul
int
movsb
aad
ja
int
jbe
stos
add
mov
dec
inc
inc
push
dec
xchg
out
jecxz
insb
dec
dec
test
data16
push
mov
sub
sbbl
fwait
enter
xchg
scas
mov
sbb
add
in
cwtl
mov
data16
mov
push
xchg
sbbb
sub
inc
out
xorb
popa
inc
add
sub
cmp
pop
rorl
dec
subb
mov
jnp
aaa
mov
repnz
mov
dec
xchg
lds
push
xchg
dec
jecxz
xchg
loop
mov
mov
aam
cmp
movsl
stc
rorb
mov
clc
ficoml
xchg
std
hlt
xchg
out
decb
add
in
movsb
mov
je
adc
pop
pop
mov
cmp
je
out
pop
fs
fxch
push
pop
mov
sub
dec
or
pop
cmp
mov
sub
and
in
aaa
xchg
add
pop
lods
add
pop
mov
rcrl
jnp
fsubrs
arpl
insb
push
cmp
loopne
lret
mov
out
cltd
sbb
jns
xor
pop
add
dec
jne
negb
in
iret
jb
xchg
popa
stos
cmp
pop
and
jge
insl
push
cmp
or
pusha
push
xlat
iret
loopne
and
or
js
daa
hlt
inc
inc
cltd
lahf
xchg
xchg
outsb
xchg
cmp
sub
xor
pop
adc
add
adc
mov
cwtl
lods
and
jbe
cmpsb
in
dec
fst
rclb
ljmp
imul
and
sahf
or
clc
loop
mov
out
cmp
add
mov
dec
sbb
inc
negl
sti
and
stc
inc
cmp
push
cmp
dec
mov
mov
push
js
xor
jbe
insb
mov
daa
cmp
push
jg
ss
dec
pop
add
iret
xor
and
imul
fstpt
push
scas
pop
cltd
or
inc
inc
js
gs
addb
arpl
add
dec
cmp
inc
test
fnstenv
xor
test
xchg
ss
lock
or
movsl
inc
cmp
scas
jno
lahf
popa
loope
cmp
lret
adcb
popa
out
bound
sahf
push
lds
divl
shll
outsb
or
xchg
dec
pop
int3
mov
stos
xor
push
andb
xorb
mov
jle
xchg
or
fdivrp
and
lods
lods
frstor
mov
xor
dec
mov
popf
pop
nop
out
fnsave
mov
add
jmp
adc
mov
cltd
int3
imul
push
loope
test
mov
shll
lret
mov
sti
jo
rorl
cmp
sub
cmpb
leave
fs
or
xchg
jno
xor
int3
addr16
xchg
xchg
xchg
sbb
jae
add
xchg
ljmp
jnp
pop
xor
push
xchg
pop
clc
dec
sub
dec
scas
jae
sbb
add
movsl
loopne
or
inc
into
mov
adc
in
inc
ret
xor
scas
adc
scas
dec
push
mov
cmc
jmp
adc
outsl
movsl
cmovs
dec
push
xchg
inc
lahf
add
inc
clc
imul
or
push
daa
mov
xchg
sbb
mov
xchg
jmp
daa
pop
fdivrs
bound
pop
out
xor
in
sbb
jae
lds
outsl
jbe
cmp
dec
in
adc
jo
sub
mov
push
lret
sahf
stc
scas
lahf
test
pop
cmc
cs
mov
dec
aad
nop
jg
sbb
fisubrl
mov
movsl
cmp
jbe
je
xchg
inc
add
fdivrp
jne
rorl
ja
scas
push
imul
pop
pop
daa
pop
je
cwtl
fsubrl
rcrb
into
jle
push
ss
stos
stc
popf
stos
mov
mov
sub
xor
sbb
add
add
test
cmp
fidivs
xchg
or
xchg
xchg
jnp
inc
push
bound
scas
enter
xchg
insl
dec
scas
imul
jmp
movsl
mov
pop
xor
or
mov
fisttpl
inc
xor
xor
bound
pop
sub
dec
les
inc
out
sbb
inc
aas
dec
ss
or
inc
rclb
ss
mov
or
enter
scas
xacquire
out
ret
mov
movsb
pop
jo
mov
jbe
jmp
js
pop
push
pop
push
and
mov
dec
xchg
loope
push
repnz
sbb
xor
stos
fmull
inc
sbb
xchg
xchg
popf
mov
jg
jb
shrl
mov
xor
movsb
test
mov
mov
sbb
push
add
sub
sbb
sarb
dec
push
mov
scas
xor
insb
cmp
xchg
pop
ljmp
lock
ja
or
push
subl
mov
push
sub
mov
je
pop
lds
jmp
fiadds
add
push
sub
jp
pop
push
jg
jae
inc
inc
int
pop
cmp
out
adc
insb
pop
movsl
push
scas
add
mov
pop
fcoms
jg
xchg
sbb
xchg
sub
out
mov
add
in
jmp
shll
aaa
jg
shrl
push
lods
movsl
loope
lods
ss
rorb
test
cwtl
jg
les
lret
sbb
lret
flds
data16
bnd
dec
dec
test
andb
out
stos
stos
mov
mov
fs
out
mov
sub
inc
js,pn
push
mov
jae
andl
les
xchg
mov
push
push
rcrb
pushf
jne
loop
push
dec
jg
lcall
gs
or
push
mov
cltd
pop
fdivs
mov
loopne
jne
lea
pop
pop
sbb
sbb
fwait
sub
cmp
es
xchg
int3
fwait
cmp
add
mov
inc
and
dec
fistpll
fsubs
aam
jae
sub
pusha
clc
fisttpl
ret
xchg
xor
pop
adc
jns
xlat
lds
jno
movsb
and
push
mov
inc
sub
or
jo
andl
jmp
rcrl
adc
and
and
xor
loopne
movsl
add
gs
xchg
mov
pushf
icebp
jecxz
and
ret
arpl
or
fcoml
and
adc
fmul
cmpb
je
scas
cmp
sub
or
inc
imul
int
push
push
push
int
ret
testl
adc
add
test
sarb
and
mov
fisubs
clc
push
mov
inc
stc
loope
mov
sbb
dec
push
adc
adc
jae
int
mov
ljmp
jp
ret
mov
test
and
and
add
call
mov
dec
sbb
ja
sub
jo
xor
dec
and
into
das
sbb
jl
xchg
or
mov
and
out
js
fidivl
mov
clc
sub
lea
lret
ret
cs
xor
sub
lock
sbb
mov
adc
xchg
es
mov
mov
jae
xlat
push
sbb
je
mov
add
ljmp
outsb
das
adc
ret
insl
sub
adc
sti
inc
lret
mov
movsb
daa
add
fcomps
fistpl
cmp
int3
inc
sub
ret
or
push
movsb
arpl
dec
enter
loope
fcmovnbe
fwait
jle
jmp
or
fwait
cmp
jle
pop
push
or
mov
in
xchg
stos
orl
or
bnd
push
mov
pop
sbb
mov
loope
data16
leave
gs
adc
dec
pop
jmp
xchg
pop
cmp
xor
shll
sbb
test
sub
int
clc
pop
inc
leave
dec
sub
and
add
ret
lcall
push
or
fs
and
pushf
xchg
pop
mov
inc
out
sbb
add
cltd
stos
loop
xchg
insl
rcrb
push
mov
and
rcrl
roll
inc
pop
inc
dec
mov
test
mov
push
sbb
clc
faddl
or
iret
lret
nop
in
sbb
mulb
bound
fadd
sarb
inc
fdivrp
xchg
testl
jp
xchg
or
scas
in
xchg
dec
push
mov
push
pop
enter
push
outsb
inc
fs
rorb
sub
and
les
jl
inc
jmp
ficoml
scas
pop
add
fwait
mov
inc
inc
lea
hlt
popa
stos
pop
cmpsl
test
ds
cltd
add
fidivrl
icebp
xchg
mov
adc
push
cmp
repnz
movsb
stos
clc
popa
pop
fwait
sub
stos
sbb
mov
ja
pop
cwtl
mov
push
mov
mul
dec
inc
les
in
outsb
fmuls
add
xor
xchg
out
inc
xchg
mov
imull
xlat
mov
xchg
push
popa
test
adc
or
xchg
int
inc
and
jo
xchg
jns
add
cmp
adc
push
inc
shrw
pop
fwait
cs
mov
cmp
mov
pop
rep
aad
or
push
stc
mulb
xchg
inc
icebp
int3
movsl
fldt
lcall
out
jae
int
stos
clc
shll
out
mov
sub
pop
jmp
mov
pop
rcl
jnp
add
std
xchg
shll
stos
cmc
loop
xchg
or
mov
inc
shlb
jp
mov
mov
test
xorb
cmc
fisttpl
jmp
int
adc
jg
ficoml
push
mov
push
push
ss
std
test
inc
dec
in
lahf
fbld
roll
pop
adc
cmp
ds
js
mov
stos
and
fsub
sub
mov
jge
mov
mov
jno
lods
in
pop
push
mov
lret
adc
mov
cmp
mov
cmpl
pop
mov
cmp
jle
out
aaa
imul
push
sar
fnstenv
aad
fdiv
push
cld
jp
push
out
int
idivb
jge
mov
movsb
jmp
sub
outsb
out
pushf
xchg
jno
test
ret
dec
sub
and
or
sub
push
inc
aam
stos
push
xor
imul
adc
pushf
scas
xchg
xchg
and
pushw
sti
xor
adc
push
push
push
xor
fisubs
out
pop
hlt
cmp
sub
adc
push
icebp
xor
push
out
bound
addr16
fldl
xchg
stos
movsl
add
or
outsl
dec
imul
js
adc
hlt
shlb
imul
sbb
mov
push
cmp
sbb
daa
aaa
aas
shl
xor
xor
cmpsb
aad
cmpsl
fsubl
push
out
and
lret
cmp
test
stc
sbb
fwait
lret
xor
mov
addl
inc
adc
call
inc
lfs
psrlw
adc
sub
mov
pop
scas
add
cli
jl
xchg
mov
dec
bound
push
scas
sub
loope
scas
testb
ss
lods
cmpsb
sahf
pop
rcrb
sub
xchg
sub
jb
jle
adc
out
lock
push
in
add
aad
inc
lea
ja
dec
push
lcall
dec
xchg
orb
pop
xchg
pop
xchg
imul
push
or
shl
imul
imul
push
dec
inc
mov
out
lahf
xlat
cltd
enter
jl
aaa
sahf
dec
pop
xchg
stos
lds
lahf
jno
sbb
mov
sub
std
xchg
cmp
stos
fcmovbe
mov
add
loope
gs
std
lods
and
sbb
sbb
pop
fisttpl
lret
sahf
sbb
cltd
flds
idivl
mov
mov
cwtl
ret
int
sub
out
lock
pop
cs
pop
lahf
jno
data16
push
mov
pop
into
orl
fcompl
and
mov
sub
cmp
mov
insb
or
cltd
fildll
test
movsb
mov
and
dec
cmp
fldl2t
mov
xor
call
dec
adc
or
cmp
int
rcrb
mov
and
ret
mov
and
ret
repz
out
bound
jmp
jbe
and
cltd
adc
bound
sarl
xor
insb
mov
ficompl
test
xlat
out
movsb
lods
lcall
ss
test
insb
jle
dec
xlat
mov
mov
push
in
insl
add
or
sbb
ss
pop
xchg
add
cmp
aas
mov
mov
ja
adc
les
pop
fwait
pop
mov
shlb
imul
and
lods
mov
mov
std
aad
xlat
call
mull
pop
data16
mov
jg
add
push
adc
cmp
push
jl
xor
and
inc
int3
mov
sub
mov
lods
flds
sub
inc
mov
int3
pop
push
test
pop
sub
jae
inc
sbb
popf
lods
cmpsb
fisubl
rcrl
mov
pop
out
mov
mov
nop
imul
es
popa
aam
andl
push
jle
add
test
push
loope
jge
and
loop
stos
xor
dec
adc
jb
outsb
out
jge
or
and
cmpsb
clc
adc
sbb
cmp
mov
mov
sub
add
js
mov
lcall
xor
add
outsb
movsb
insb
push
cmp
xchg
xchg
nop
push
pop
or
js
cmp
pusha
sbb
ds
aaa
mov
outsl
jnp
iret
lcall
jge
xor
inc
push
mov
je
mov
jge
hlt
dec
jns
mov
in
cld
popf
pop
popa
push
pushf
test
sub
js
or
pop
shlb
ret
inc
inc
hlt
sbb
xor
mov
loope
filds
popa
lods
notb
rorl
fidivs
xor
fldenv
ss
rcrl
in
fdivp
jecxz
rorl
pop
lcall
lahf
push
pusha
cmpsb
or
int3
cmp
and
fnsave
clc
dec
xor
xchg
inc
inc
shrl
push
sub
cmp
and
in
test
test
std
inc
pop
cli
aad
xchg
cmp
inc
pop
nop
les
or
sub
xchg
fidivl
dec
mov
dec
jae
inc
cmpsb
roll
cs
ret
ss
fldz
popl
sub
aad
in
push
and
sti
out
popa
or
nop
mov
popf
popa
sub
rcrl
ljmp
test
clc
les
jle
cs
stc
mov
mov
push
fs
sbb
sub
fldl
mov
addl
xor
ret
push
in
sahf
je
mov
cmp
xchg
lea
shrl
cs
inc
dec
fsubr
addr16
out
xor
movsb
mov
jl
insl
push
ljmp
loopne
movsl
push
xor
loop
xchg
je
repnz
repz
cmp
push
leave
bnd
cld
xlat
push
push
je
add
jns
aad
out
xor
fstps
xchg
int3
push
xchg
iret
adc
mov
movsb
inc
scas
stos
jns
scas
loopne
and
jle,pt
sbb
push
mov
pop
aas
hlt
push
mov
push
xchg
fisttpll
xchg
add
pop
shr
mov
mov
out
dec
arpl
push
pop
roll
arpl
jno
mov
in
xchg
push
in
cmp
orb
dec
imul
aaa
add
data16
ss
lcall
cmp
jns
sbb
jns
aam
mov
rol
mov
cmp
popf
cwtl
sub
or
mov
xor
inc
sbb
es
push
test
movsb
testb
xor
jo
mov
or
sub
cmp
xchg
dec
fistps
ds
rolb
jne
pop
cmp
xor
lds
fsubl
or
mov
mov
push
mov
push
data16
mov
pop
outsb
jb
sbb
inc
adc
mov
sbb
popf
xchg
popf
loop
stos
test
lret
lock
mov
push
pushf
push
and
ljmp
xchg
push
add
fs
sbb
mov
ret
mov
pop
cmpsl
adc
adc
adcb
xchg
cmp
cmp
sub
scas
imul
in
jns
dec
rcll
arpl
push
jb
cld
dec
shr
rorl
les
out
push
cmc
ljmp
daa
lods
inc
pop
push
inc
pop
inc
inc
xchg
or
outsb
inc
aas
lea
add
hlt
xchg
pusha
inc
fidivs
push
shrb
movsb
in
enter
or
dec
stos
imul
lods
inc
xor
scas
jge
sbb
jecxz
repz
inc
jns
sub
lds
iret
stc
sbb
cs
subl
push
xor
ret
aas
call
in
add
shll
out
leave
nop
mov
ret
fneni(8087
jg
sub
push
iret
adc
pop
popf
push
subl
mov
ffreep
pushf
call
fidivrl
mov
fadds
cmp
xchg
cmp
pop
sbb
cltd
fadds
pusha
mov
mov
test
pop
int
inc
inc
ds
fbstp
jmp
lea
jae
pop
ret
mov
enter
scas
jl
int3
mov
xchg
fcomps
inc
dec
dec
and
lret
movsb
pop
push
sahf
cmpsl
inc
mov
out
clc
rcr
mov
loop
mov
mov
outsl
push
movsb
fimull
adc
lahf
cmpsb
fcomp
push
sarb
ja
mov
cmp
out
push
add
add
cmpl
lret
adc
fstps
aas
mov
in
scas
dec
repz
inc
inc
repz
push
fs
ficomps
subb
hlt
rol
or
xchg
cmp
ja
das
push
push
pop
jbe
adc
fwait
clc
cmp
dec
and
icebp
sub
ss
pop
pop
sahf
jg
mov
or
ret
push
repnz
cli
sbb
addr16
aaa
inc
test
mov
cmp
pusha
sub
push
pushf
and
in
mov
pop
loopne
rsqrtps
sbb
out
dec
push
test
ret
popa
lahf
and
cltd
xor
aad
sbb
scas
sbb
sbb
inc
cmp
push
loop
adc
std
pop
je
sbb
pop
xor
and
arpl
fsubs
es
cwtl
sub
push
xchg
mov
imul
dec
lods
movsb
idiv
push
inc
xchg
sbb
inc
cmc
fldl
mov
or
fnstenv
pop
int3
stos
xor
push
pop
adc
mov
imul
jo
enter
sub
rorl
aad
pop
adc
pop
pop
cs
divl
shlb
lcall
fs
push
push
sti
into
lret
sbb
aas
jg
enter
cmp
std
lret
aam
mov
ja
sbb
insb
add
and
pop
and
and
xchg
sahf
std
cmp
int
adc
das
mov
test
imul
es
cmc
cs
sub
pushf
cmpsl
mov
sub
push
cmpsl
sub
cmp
imul
lock
nop
iret
mov
dec
cmp
sub
inc
dec
xchg
pop
xor
rcrb
inc
and
inc
sub
sbb
ja
pop
and
int
loop
xchg
jnp
or
out
pop
mov
int3
leave
inc
dec
adc
call
and
adc
stos
lock
dec
xchg
adc
ja
inc
mov
pushf
jecxz
mov
inc
sti
sub
jnp
lcall
sti
lcall
arpl
pop
out
out
fsubl
jnp
xchg
inc
mov
jmp
aad
xchg
aas
adc
mov
sbb
movsl
pop
pop
outsl
cmp
in
inc
addr16
adc
jae
add
jp
add
pop
lods
xchg
pop
ja
fmul
loop
aam
fld
xlat
lret
aas
mov
jo
addr16
jle
push
clc
xchg
sub
mov
mov
cmp
pop
and
mov
push
mov
jo
lcall
mov
pusha
cmpsl
fsts
jo
int
mov
cmp
mov
mov
test
sbbl
sbb
js
jo
push
sbb
sbb
sbb
xor
nop
cmc
inc
push
repz
lcall
aam
imul
in
lea
jg
loope
dec
sbb
ror
movsl
lock
mov
pop
xor
in
aas
adc
sub
mov
mov
jge
das
jnp
push
in
add
dec
out
pop
pop
adc
dec
lret
outsl
push
shrl
lret
xor
scas
xorl
dec
call
sbbl
in
lods
add
inc
nop
mov
fmull
fildll
dec
and
ss
in
int
repz
out
shll
aam
fdivl
lahf
mov
dec
ret
mov
lahf
pushf
stc
ret
clc
sbb
mov
je
mov
push
cmpsl
mov
cs
adc
loope
jl
add
movsl
aas
pop
divl
in
xor
fwait
push
xchg
adc
fstps
or
xchg
dec
jmp
daa
addr16
and
lcall
jle
imull
repz
xchg
cmp
lea
jl
adc
sbb
jp
push
je
sti
inc
and
sbb
pusha
cmpl
hlt
hlt
dec
sbb
push
ret
lret
push
test
movsl
or
in
es
push
mov
mov
mov
stos
and
js
pop
bound
stos
loop
nop
arpl
mov
xor
cwtl
add
mov
push
cli
es
inc
mov
insb
test
fcmovnb
push
inc
jecxz
add
sbb
adc
cmp
mov
jmp
gs
aam
repz
cmc
sbb
mov
cmp
clc
and
sbb
roll
and
out
adc
add
test
jno
or
and
mov
int3
out
outsl
sub
adcb
pushf
xor
xchg
repnz
andb
xlat
mov
adcl
loope
mov
in
jmp
pop
fs
bound
inc
lret
push
mov
cmp
movsb
outsl
stc
ss
aaa
push
or
std
add
push
and
jbe
int3
and
mov
mov
mov
dec
fistl
jp
dec
add
and
jmp
test
fistl
cmpsb
mov
sbbb
arpl
sbb
lret
rcll
xchg
arpl
cmp
lahf
pop
popf
das
cs
and
repz
xchg
xor
stos
push
imul
xchg
jo
mov
aad
ror
daa
orb
in
in
cmpsl
mov
dec
lahf
jns
test
mov
int3
sti
bound
cmc
xchg
push
outsb
jl
pop
mov
lods
arpl
test
xlat
inc
addr16
mov
das
popa
adc
mov
aad
xchg
test
mov
pop
rcll
test
pop
sahf
in
dec
daa
subb
xor
je
mov
inc
pop
mov
data16
flds
jo
mov
mov
mov
cmp
sbb
out
ss
fndisi(8087
jns
and
sarb
jo
sub
cltd
lahf
xchg
aaa
daa
lahf
out
lods
aad
lods
jne
sbb
mov
push
push
mov
ss
xor
shll
inc
cmp
fisubrs
mov
xchg
addr16
in
mov
jecxz,pn
fld
sbb
push
shr
jg
inc
cli
repz
jge
lahf
add
call
add
mov
mov
xchg
or
out
xor
icebp
dec
cld
pop
xchg
push
pop
sahf
ret
js
mov
mov
lds
inc
pop
mov
pop
push
xor
andl
or
cmp
mov
xchg
pop
insl
mov
or
adc
test
push
dec
dec
outsb
push
xor
jecxz
xchg
mov
hlt
jl
mov
mov
outsb
or
inc
inc
sbb
cli
ret
or
push
cwtl
shl
push
outsb
es
aad
xlat
std
nop
inc
dec
repnz
das
roll
cmpsb
jno
repz
jmp
rep
xchg
jmp
jo
fistl
and
hlt
jl
xor
movsl
inc
out
push
mov
sub
inc
xchg
sub
or
frstor
mov
cmp
fildl
push
dec
fdivrl
js
cmp
std
dec
jns
sub
mov
mov
pop
dec
jg
dec
inc
xchg
les
repnz
and
arpl
or
fsubr
cmp
mov
lods
mov
ja
xor
xchg
add
cmpsl
rcrb
sbb
mov
xor
das
xor
or
xor
or
sahf
and
test
sbb
test
fisubrs
push
js
xchg
lds
ja
lahf
or
mov
xchg
and
dec
xchg
or
inc
xchg
xchg
xor
cmpsb
jle
xor
ja
push
fidivrl
lds
fnstsw
mov
mov
sahf
out
pop
cmp
out
je
ret
loope
and
push
sbb
enter
aas
xchg
ret
cmp
jge
jg
jno
jbe
and
mov
dec
bnd
add
addl
ja
jp
pop
cmp
cs
lret
shrl
arpl
inc
mov
fstpt
fldl2e
cmpsl
enter
xor
jg
outsl
xchg
mov
test
mov
jecxz
mov
ja
pop
dec
leave
xchg
mov
movsb
mov
cmp
das
pop
pop
lods
in
subb
fcomip
fwait
sub
test
cmp
mov
mov
std
xchg
sbb
dec
sub
pop
ror
xchg
sub
or
pop
pop
insl
xchg
sti
push
movsb
cmpsb
in
fimull
pop
movsl
ret
scas
and
fnstenv
imul
sbb
popf
repz
adc
popa
das
loopne
loopne
mov
jbe
jne
mov
dec
mov
outsb
mov
cmp
mov
incb
in
push
movsl
mov
mov
arpl
adc
cmp
fistpl
pop
test
sbb
pop
ja
in
xchg
enter
cmp
cwtl
pop
mov
fwait
cmp
aad
adc
sub
mov
mov
pop
mov
hlt
scas
aas
xchg
shlb
lret
addr16
xchg
mov
negb
fsts
push
xchg
sub
sbb
push
push
fsubp
xor
std
sbb
bnd
call
sti
inc
push
pop
pop
mov
jne
jbe
dec
movsl
ljmpw
or
push
pop
pop
roll
jmp
sbb
stos
hlt
dec
fstl
lods
in
mov
shlb
sub
and
lcall
sbb
iret
insb
dec
cwtl
push
call
jge
imul
fwait
icebp
rcl
cltd
mov
imul
push
xor
aad
pop
int3
imulb
mov
add
jle
ja
repz
mov
or
enter
jle
add
and
stc
jmp
mov
ja
sti
dec
int3
pusha
xor
mov
xor
xchg
int3
inc
or
or
push
mov
mov
xor
outsb
push
pop
mov
pop
outsb
testb
popf
ds
ret
mov
xor
jecxz
dec
sarl
jle
adc
xor
sbb
sub
stc
xlat
mov
inc
sub
test
xchg
outsb
push
sbb
mov
sbb
add
mov
addl
mov
inc
or
addr16
pop
imul
loop
inc
ret
pop
stos
mov
inc
jnp
xor
inc
mov
fstl
or
fldt
cli
bound
rorb
push
mov
cwtl
js
shll
es
gs
cmpsl
dec
je
mov
jmp
push
sub
mov
jns
out
fdiv
in
lods
xchg
scas
adc
fisttpl
pop
testl
mov
pop
inc
inc
dec
xchg
loop
push
repz
inc
aad
stos
jle
pop
std
or
jl
lret
jge
call
dec
pushf
in
sbb
push
outsl
stc
shll
outsb
ror
ljmp
dec
loope
jl
cld
movsb
add
lods
add
pop
jnp
sar
cmpl
jbe
mov
sub
fwait
mov
cmp
aam
pop
inc
repz
adc
push
icebp
pop
jo
int
and
adc
dec
jle
cmp
les
fidivs
add
call
xor
in
aaa
test
mov
das
xor
sbb
in
rclb
mov
std
push
into
loopne
rcl
shll
pop
or
leave
push
into
xchg
mov
pop
pop
sahf
push
and
push
ret
dec
jmp
dec
dec
fwait
pop
cwtl
fidivrl
cltd
fstpt
loop
and
inc
mov
out
jmp
xchg
adcb
inc
jo
in
shr
fs
or
mov
fidivl
jnp
ror
adc
add
add
or
mov
fwait
lds
int
cs
push
out
andb
lcall
mov
subl
fs
jmp
mov
or
pop
cmp
push
repz
sarb
sbb
sub
or
push
sbb
mov
and
inc
push
ja
xchg
mul
sti
sbb
jo
shl
cmp
out
lret
enter
mov
dec
sbb
cmpl
mov
inc
pop
shll
dec
arpl
out
mov
stc
xchg
mov
sbb
add
sub
cmp
pop
lcall
mov
jo
movb
dec
icebp
push
mov
imul
dec
loopne
jmp
mov
add
popf
sti
repz
cmp
cmp
cld
mov
rcrw
and
ss
mov
stos
incb
push
pop
dec
push
ud1
xorb
lea
mov
sbb
cmp
or
pop
cmp
mov
cld
xor
daa
bt
test
loop
inc
repz
xorl
test
lea
cmp
rcr
std
mov
jnp
add
add
mov
out
and
mov
cwtl
cli
cmp
mov
mov
inc
mov
lret
aas
xor
pop
push
xlat
mov
or
and
or
incb
insb
push
lods
fxch
lods
sbb
add
enter
leave
lds
bound
mov
push
mov
ret
sub
outsb
add
xchg
gs
nop
add
jae
imul
scas
aam
push
add
push
sahf
lcall
xchg
andl
mov
aam
pop
inc
inc
cmp
shr
xor
mov
decl
dec
cwtl
lcall
xchg
dec
push
sbb
imul
andb
dec
jae
jae
pop
jge
lods
data16
jnp
enter
int3
add
repz
lock
ds
out
cmc
out
lcall
movb
inc
sub
mov
je
es
cmpb
mov
xor
nop
adc
lock
mov
mov
xchg
out
test
dec
sub
push
maskmovq
testl
dec
insb
sub
fstps
jp
inc
cmp
pop
sub
dec
ss
lret
fs
ljmp
cmp
bsf
fists
in
lock
out
sahf
lock
pop
push
add
add
or
jbe
addl
stos
or
loop
aad
mov
out
icebp
arpl
mov
and
pop
fisubl
jns
xchg
enter
sub
pop
in
cld
and
loop
inc
clc
repnz
xchg
test
xor
arpl
and
push
cmp
fnstcw
dec
cmp
adc
cmp
push
pop
je
and
cmpl
and
es
inc
gs
mov
xchg
xchg
repnz
fsin
ja
out
jae
xchg
mov
addb
jo
idivb
cwtl
js
jle
inc
data16
out
sbb
mov
xchg
jns
mov
sti
data16
and
jecxz
or
imul
mov
jnp
shlb
in
xor
repnz
lea
pop
clc
pusha
mov
pop
imul
aad
cmpsl
enter
fcomps
mov
test
std
cs
and
loope
dec
mov
adc
hlt
loope
jo
fmuls
lods
jmp
xorl
push
fldt
xchg
je
and
fbld
adc
iret
iret
mov
jmp
xchg
sbb
stos
or
push
pushf
in
out
mov
fst
inc
fstpt
mov
pop
call
lret
scas
jae
xchg
andb
add
out
aad
xchg
mov
sub
loope
mov
sub
add
jp
mov
out
jae
inc
ret
test
ror
inc
or
imul
sbb
in
lahf
mov
sub
fs
cmp
loop
xchg
bound
mov
fisubs
lods
push
lcall
lcall
push
lods
jge
je
scas
hlt
push
leave
mov
fcmovb
stos
xlat
cmp
fistl
cltd
or
push
mov
push
faddp
mov
pushl
mov
sbbl
sbb
cmp
mov
lretw
dec
mov
idiv
cwtl
and
rorb
inc
mov
leave
loopne
addr16
sub
push
test
xlat
cmc
sub
dec
jb
hlt
xor
xor
ss
lock
aas
insl
cli
loopne
fwait
clc
pushf
mov
jecxz
inc
cmp
cmpsl
leave
data16
and
and
popl
jg
sub
xchg
addl
mov
mov
inc
push
sub
jl
or
add
das
sbb
in
mov
test
dec
jnp
pop
fwait
pushf
mov
pop
bnd
nop
arpl
jno
adc
lahf
popf
mov
xchg
rep
mov
call
pop
insl
xor
scas
iret
inc
jg
sbb
mov
jge
sub
mov
mov
xchg
mov
lcall
or
xor
jl
add
or
imul
adc
mov
cmp
lds
or
in
daa
lods
mov
mov
mov
fcmove
imul
jl
cld
cld
sbb
dec
sub
cmp
cmpsb
test
sahf
test
mov
adc
scas
lret
xlat
jns
or
sar
fiadds
es
subb
push
or
lcall
mov
js
cmp
mov
dec
dec
mov
or
popf
setp
mov
daa
sub
jge
shrb
dec
sub
or
push
push
dec
into
pop
jecxz
lock
stc
es
imul
mov
dec
shl
mov
mov
test
iret
js
mov
outsl
push
stos
mov
inc
dec
bound
mov
cmp
sub
dec
mov
jecxz
insl
insl
je
sub
shll
sti
out
gs
popf
clc
jle
outsb
fsubs
adcl
js
rcll
sub
adc
fadds
dec
jle
leave
pop
add
test
shl
push
push
mov
cmp
movsl
loop
mov
fstps
rcr
jmp
push
pop
cmpsl
or
and
icebp
je
ds
rcll
popa
xor
mov
incb
stos
inc
shl
lods
test
xlat
or
in
mov
das
imul
jl
aam
and
sti
arpl
pusha
sbbl
push
les
xor
aaa
add
gs
cmp
popa
sti
dec
inc
ret
sbb
popf
ljmp
inc
xchg
and
negb
out
ror
out
fisttpl
mov
mov
jmp
cmp
rclb
repz
sub
ss
pop
cmpsl
cmovae
adc
jecxz
and
insl
mov
xor
add
cmp
pop
cmpsb
or
lods
cmp
daa
inc
popa
rolb
or
fsubl
cli
mov
fstl
adc
fs
xchg
fcomps
icebp
add
cmpsl
cmp
mov
mov
push
jecxz
sbb
and
idivb
xchg
test
outsb
mov
sub
sub
add
lcall
out
cmc
rolb
js
repz
out
out
lods
cli
pop
addl
xorl
int
pop
fidivs
cld
ja
pop
and
stos
testl
push
and
test
pop
push
cwtl
popf
popa
popl
sub
orb
pop
les
jg
outsl
cmp
add
jle
pushf
mov
aas
bound
loopne
sbb
inc
test
fiadds
insl
test
sub
rorb
pop
xchg
outsl
adc
cmp
in
loope
repnz
lret
xchg
sub
push
outsb
lods
mov
sbb
or
mov
pop
add
out
enter
aam
arpl
ja
inc
inc
data16
cwtl
sbb
jecxz
xor
pop
ljmp
loop
stc
jmp
mul
pop
push
or
cmp
int3
mov
push
lods
mov
push
into
pop
dec
mov
dec
repz
inc
push
cwtl
icebp
mov
sbb
rolb
sbb
jno
lret
pop
cmp
mov
outsb
test
jno
faddl
in
sub
popf
dec
aam
ljmp
stos
xchg
dec
and
insl
push
mov
loopne
inc
jae
mov
int
dec
and
cmp
inc
and
adc
cmc
jecxz
test
fisubs
or
iret
push
testb
xor
jo
es
flds
pop
dec
xchg
add
mov
mov
lea
ss
jge
imul
cmpsb
fs
push
adc
push
ret
pop
inc
dec
enter
xor
fcomps
sub
into
sub
fdivl
insl
xor
xor
mov
lcall
push
xor
andb
les
cwtl
sub
or
sub
pshufw
fisttpl
mov
mov
adc
stos
and
pop
xor
lret
ja
or
lods
add
fs
mov
sub
dec
std
incl
movsb
decl
divl
mov
fcmovnb
std
test
dec
scas
mov
aas
jne
aad
hlt
sahf
add
jecxz
fisubs
push
dec
and
out
inc
mov
inc
loope
xchg
push
and
popa
test
in
jmp
sbb
cmp
dec
cli
push
dec
adc
xchg
xchg
xor
pop
movsl
in
cmp
aad
mov
jle
dec
adc
mov
cmpb
inc
test
or
cmp
insb
int3
lret
lods
and
add
push
sarb
xchg
cmp
lret
cmp
sti
out
sbb
test
ret
ret
mov
orl
jne
cmpsb
jae
dec
sub
sub
call
decl
pop
lods
xor
inc
mov
jno
jb
sbb
cli
dec
aaa
hlt
mov
inc
xor
inc
pop
cmp
adc
dec
fs
cmc
aas
movsl
push
xchg
jl
and
hlt
xchg
sti
xlat
pop
imul
cmpsb
mov
or
sarb
clc
repz
or
hlt
add
sbb
fcompl
lret
pop
mov
pushf
sbb
in
rcll
pusha
aad
rorl
push
jno
call
or
mov
sti
mov
inc
pop
dec
jbe
cmpl
push
cwtl
mov
cld
add
jle
lock
das
sti
shl
out
mov
ljmp
push
xor
test
xor
je
and
icebp
xor
int3
rorl
call
add
push
outsb
das
dec
or
aad
adc
dec
idivb
int
jle
andl
adc
nop
inc
je
cs
sub
sub
insb
inc
jae
mov
pop
inc
es
or
jb
adc
mov
pop
pop
lods
and
test
mov
clc
pop
test
pop
xchg
imul
inc
je
adc
cmp
dec
lods
or
sub
adc
pop
jne
scas
fcoms
mov
xchg
hlt
sub
fsubrs
xor
jl
mov
dec
xchg
test
out
ret
jp
mov
cwtl
mov
sub
imul
xor
add
sub
and
push
out
dec
push
pop
outsb
stc
push
mov
push
push
push
dec
loopne
adc
push
ret
mov
call
dec
sub
ds
jecxz
mov
fmull
cld
dec
ja
sbb
sbb
out
inc
cmp
xlat
push
data16
jle
dec
mov
inc
mov
pop
inc
sub
dec
dec
xchg
mov
jg
bound
stos
mov
lods
mov
mov
mov
push
xchg
xlat
out
movsb
sarl
test
pop
dec
pop
jmp
outsb
jae
and
es
jb
idivl
mov
ja
cmp
inc
testl
add
sbb
push
lret
mov
addr16
int3
push
inc
sbb
or
sbb
cld
add
fs
xchg
mov
ljmp
sub
shrl
xchg
mov
fdivr
fcomps
push
enter
pop
mov
jge
jae
out
mov
inc
mov
lock
mov
push
sar
push
inc
out
xor
adc
jecxz
cmc
adc
lcall
je
cmp
pop
inc
iret
stos
in
in
bound
xor
cmp
clc
shll
pop
sbb
js
mov
pop
sub
andb
cmp
and
cmp
out
imul
outsl
lods
lods
fdivs
clc
test
jecxz
inc
jp
js
ds
stos
fnsave
push
lcall
fidivrl
mov
dec
xchg
jecxz
test
sbb
xor
inc
and
add
xorb
adc
push
fstps
outsl
mov
inc
pop
arpl
or
stc
test
sti
dec
pop
gs
pop
adc
and
inc
mov
lods
imul
add
add
lods
push
mov
mov
stos
or
jle
lock
xor
xchg
aad
dec
dec
xchg
xchg
psubw
rorl
popf
and
movsb
loopne
and
test
adc
pop
or
pop
lods
cwtl
dec
and
flds
and
icebp
sub
xorb
push
outsl
cs
lea
test
loopne
xchg
pop
and
pop
lods
push
jg
fucomp
cmp
push
mov
shl
gs
mov
popf
arpl
les
in
or
sub
xchg
push
pop
mov
addl
pop
notl
sahf
aam
andl
fadds
adc
js
add
int3
push
ret
mov
fcmovnb
adc
and
insb
stos
and
inc
mov
dec
ljmp
jmp
jb
lret
xor
sbb
es
and
inc
leave
test
mov
sub
nop
testb
int3
pop
das
mov
pop
jns
ja
js
adc
or
sub
inc
inc
jmp
push
popa
insb
loop
mov
pop
sub
orl
insb
cld
movsb
mov
movsl
int3
testb
outsb
sti
xlat
pop
sarb
sbb
mov
pop
push
pop
lahf
das
imul
mov
sbb
call
cmp
movsb
scas
push
test
call
decl
insl
jp
sub
movl
sub
mov
ss
data16
testb
and
pop
dec
mov
cmpsb
fwait
into
xchg
roll
push
push
ds
lea
incl
andl
mov
mov
in
pop
scas
hlt
stos
or
dec
repnz
or
jl
sub
jb
cmp
push
jbe
push
orl
mov
out
stos
in
adc
popa
pushf
jae
outsb
adc
and
sbb
mov
enter
and
xchg
mov
int
pop
cmc
cli
push
mov
push
mov
xchg
repz
ljmp
into
je
push
push
out
mov
call
xlat
mov
cmp
xchg
imul
xor
fstps
movsl
mov
inc
xchg
jl
sarb
xor
xchg
jb
sbbb
adc
mov
and
mov
fistpl
mov
or
lea
je
loop
xor
mov
jnp
es
mov
pop
out
dec
mov
pop
adc
mov
hlt
adc
mov
les
aas
outsb
dec
mov
push
enter
test
cmp
fimull
clc
daa
pop
jp
cmp
add
push
inc
mov
adc
out
jns
sbb
arpl
mov
lds
add
mov
aad
in
pushf
pushf
jl
daa
inc
inc
xchg
addb
or
imul
jmp
data16
jmp
popa
push
jbe
inc
sbb
jmp
enter
or
jl
jno
push
fimull
rolb
xchg
mov
lcall
std
pop
cmp
pop
mov
sub
or
inc
popf
leave
adc
pop
shlb
sub
mov
pop
fs
mov
test
pop
pushf
sub
fldcw
hlt
aam
mov
sub
inc
clc
adc
fisttpl
test
cmp
xor
ja
jne
or
mull
mov
je
adcb
push
sub
cmp
lea
jg
push
das
mov
pop
loopne
cs
inc
cmpsl
mov
mov
sbb
lahf
cmp
ss
fbstp
loope
pop
or
cld
pusha
fsin
rcll
lahf
cld
arpl
pop
fisubrl
xchg
roll
push
jb
fldl
push
in
frstor
and
sbb
push
xchg
fiadds
hlt
into
ret
es
mov
stc
jle
popa
lea
add
adc
jl
pop
stos
push
cmc
mov
rorl
out
popa
out
vorpd
fmuls
pop
cmp
push
cmp
shrl
loope
fcmovnb
push
mov
stos
xchg
sub
in
jae
popf
ret
add
jnp
cmp
xchg
inc
cltd
dec
sbb
out
or
mov
test
idivl
popf
addr16
mov
fst
out
cli
push
fwait
or
sub
flds
sbb
cmp
push
in
push
in
jb
addr16
add
pop
mov
dec
jnp
mov
mov
sbb
addr16
and
movsl
ret
sub
rolb
xor
add
jo
out
or
dec
fsub
xchg
or
aas
and
and
js
cmp
stos
fsubrs
out
cmpsl
test
sbb
imul
dec
ja
aam
mov
jecxz
shrb
mov
pop
pop
arpl
pop
dec
xorb
sbb
add
adc
mov
mov
pusha
or
icebp
fwait
add
nop
enter
popa
cmp
shl
js
not
filds
push
sub
dec
xchg
sbb
or
xchg
popf
mov
int3
sub
xor
pop
inc
xorl
insb
mov
outsb
js
mul
add
icebp
repnz
inc
sub
xor
inc
cmpsb
xchg
mov
rclb
into
and
sbb
aad
int
cmc
add
pop
sbb
stc
mov
lret
push
push
arpl
xchg
xchg
std
pop
xor
adcl
inc
inc
sbb
outsl
int
add
sub
in
pop
jmp
and
andb
lods
sbb
pop
xor
icebp
scas
aad
lods
push
pop
int3
jl
adc
push
xor
inc
lahf
xlat
jl
add
pop
cmpsb
stos
in
add
shll
testb
ret
xor
xchg
adc
dec
push
sub
jbe
iret
mov
mov
hlt
lret
mov
pop
add
mov
stc
sub
sub
pop
xchg
fisttps
ja
loope
inc
jbe
lods
dec
ficomps
call
pop
mov
push
test
call
cmp
jecxz
mov
mov
mov
cmp
inc
cli
mov
cwtl
shrb
and
neg
aaa
cmc
mov
jnp
mov
cli
int3
icebp
fdivrl
jno,pn
dec
rcrl
jl
loopne
clc
or
ss
mov
xchg
sbb
filds
bound
push
push
dec
popf
fs
or
pop
push
jecxz
out
data16
or
leave
lret
scas
daa
in
pop
or
in
push
sub
sbbl
pop
dec
jl
jle
insl
jp
sbb
fcoms
mov
daa
jecxz
xlat
enter
mov
ljmp
push
cmp
dec
in
movsl
sub
xchg
mov
cmp
mov
sub
push
movsl
dec
aaa
mov
add
jle
scas
xchg
movsl
lds
ljmp
push
dec
scas
cltd
cld
inc
mov
push
mov
dec
and
dec
dec
lods
sti
xchg
jb
testb
xlat
or
xchg
cmp
lret
ret
push
lret
and
or
dec
les
dec
push
fcmovbe
test
mov
sub
movsb
insl
push
cmp
fst
gs
dec
cmpsb
loop,pn
int
mov
gs
sbb
loop
sti
mov
push
je
call
out
enter
lods
loop,pt
das
jmp
sub
sbb
icebp
jnp
adc
test
loop
mov
shll
not
imul
push
jbe
xor
mov
jecxz
mov
xchg
sahf
mov
scas
mov
mov
cmp
add
dec
dec
loop
fmull
jp
hlt
add
or
xchg
mov
dec
jmp
aad
add
hlt
popf
iret
in
push
mov
call
mov
jecxz
jns
mov
addr16
test
lcall
std
cmp
cmp
lods
push
xchg
dec
xchg
cltd
lods
and
fadd
mov
adc
mov
pop
dec
cwtl
ret
push
shrb
dec
loopne
or
sub
andl
into
pusha
dec
ficoml
divb
sub
mov
fmulp
dec
fistpll
iret
jmp
fdivl
and
ljmp
push
mov
mov
pop
pushl
daa
cs
test
out
div
in
ret
inc
div
leave
lds
pop
dec
cli
push
ss
mov
cmovns
push
inc
rclb
sbb
sub
sub
iret
stos
pop
nop
jns
fdivrl
test
shlb
stos
dec
scas
shll
movsw
stos
and
in
data16
in
cmp
jo
outsl
fiadds
mov
gs
add
mov
adc
stos
fcomps
pop
sar
dec
dec
fcmovbe
jnp
bound
popl
mov
push
or
dec
imul
jmp
lahf
loop
fsubl
ljmp
stos
aam
jb
mov
jp
rcr
push
adc
mov
pushf
cmp
ja
pop
popf
incl
inc
xchg
cmc
xchg
incl
cld
cmp
cli
push
lea
inc
dec
out
imul
std
xor
insl
pop
sub
stc
pop
jb
into
push
fistl
jns
and
sub
mov
insb
test
or
fs
dec
ds
fwait
cs
lret
lret
int
sahf
cmp
cmpb
addl
sti
pop
icebp
xlat
adc
loope
add
dec
nop
adc
push
push
mov
nop
xchg
jno
xchg
jns
push
jne
and
add
xor
jp
insl
or
add
jnp
mov
xor
jmp
test
push
push
xor
cmp
std
mov
xor
loopne
xorl
lods
mov
xchg
mov
test
sbb
dec
jnp
inc
rcrb
mov
fbstp
pop
addr16
and
shll
out
iret
cmpsb
mov
adc
out
mov
adc
xchg
je
dec
scas
xchg
aad
shll
pop
lods
cmc
test
adc
ret
sub
mov
xchg
mov
mov
imul
lret
int3
jle
xchg
add
test
cmpsb
xchg
adc
mov
pusha
std
push
dec
pop
pop
mov
pop
sahf
hlt
subl
or
fisubl
add
mov
adc
jg
xchg
add
int
sti
lea
daa
mov
ja
out
xchg
scas
xchg
adc
mov
jmp
jle
inc
mov
test
stos
jmp
pop
xor
psubq
in
cmp
cltd
cli
push
add
pop
fidivs
add
pop
mov
addl
inc
movsb
jnp
out
bswap
rorb
scas
cmc
xchg
inc
mov
xchg
ret
outsl
popa
mov
dec
lret
jge
test
call
lahf
lea
cmc
out
and
loopne
inc
push
stos
mov
jecxz
xor
repnz
arpl
xor
js
insl
push
lahf
push
fwait
pop
imul
sti
inc
and
stos
pop
add
enter
outsb
aaa
sub
mov
jae
jg
add
outsb
shrl
push
imul
les
clc
rcrl
add
sub
fwait
into
lods
jg
xor
les
mov
mov
scas
push
pushf
lcall
mov
pop
dec
and
std
shl
movsb
inc
adc
les
mov
and
js
xchg
pop
pusha
cs
inc
pop
and
fucomip
sbb
inc
or
add
jns
sub
xchg
insb
adc
fwait
sbb
or
mov
jle
mov
in
aaa
xlat
pop
loop
imul
sub
cmpb
pop
cmc
push
jne
jns
ret
cli
mov
xchg
outsb
ror
orb
adc
jge
xchg
pop
push
ret
les
fimull
mov
addr16
insb
cmpsb
sub
cmp
push
bound
pop
jmp
aad
andl
in
cmp
xchg
and
addr16
pusha
andb
jae
mov
mov
fwait
mov
nop
xchg
mov
notb
xor
lcall
or
pop
lahf
dec
inc
jmp
cmp
adcl
mov
shlb
stos
jge
ja
push
fcomp
jg
clc
mov
and
shrb
or
loopne
imul
stos
lods
aad
dec
mov
mov
jnp
pop
jb
jns
jp
lds
inc
imul
inc
lea
out
sub
jge
cmp
sub
xchg
mov
xor
adc
test
mov
dec
out
loop
push
cwtl
ja
sahf
adc
jecxz
mov
add
stos
ljmp
out
add
stos
nop
dec
jle
data16
enter
pop
movsl
jl
stc
sub
scas
in
mov
fcmovu
push
sti
je
movsb
rolb
add
imul
pop
aad
inc
outsb
imul
lret
pushf
xchg
sqrtps
addr16
clc
jae
lahf
mov
and
dec
fcoms
push
adcl
fidivl
call
push
xchg
js
cltd
lret
imul
cmp
lea
icebp
inc
ss
add
jae
bound
cld
add
mov
or
push
and
addr16
rcrb
xchg
xor
sti
int
push
int
pop
pop
call
dec
test
inc
jae
test
inc
mov
sti
and
enter
fdivr
cli
cmp
xchg
xor
pop
cmp
dec
pop
lcall
xchg
shr
mov
mov
mov
push
mov
movsb
nop
mov
add
and
add
lds
xor
sub
sub
js
xchg
push
or
pop
sub
mov
add
mov
cltd
adc
cltd
sarb
mov
add
mov
mov
jnp
lds
aad
popa
xlat
or
lock
cld
icebp
mov
mov
fdivrp
add
es
pop
add
or
mov
pop
les
dec
sbb
mov
aam
mov
jae
mov
ror
movsb
imul
lret
jno
cmpsl
mov
jbe
and
rolb
outsl
cmc
les
inc
xor
inc
sub
ss
mov
lahf
sbb
lea
cmp
into
lahf
loope
and
test
addr16
jg
cmp
cmp
int3
decl
out
adc
and
roll
sbb
fistl
mov
inc
inc
pop
mov
mov
pop
mov
xchg
ret
pop
icebp
jo
cli
out
mov
js
lods
mov
shll
push
cmp
jecxz
jg
sub
fsubrs
popa
out
xchg
dec
adc
je
pop
sub
xchg
insl
dec
lods
out
mov
cmpsb
je
add
dec
jno
xor
or
push
outsb
loop
test
out
fbstp
sub
das
cmp
jae
rclb
popf
sub
pop
or
in
add
push
and
rcr
sahf
fs
mov
aad
popa
push
pop
rcll
testb
push
gs
inc
or
shrb
add
subl
adc
mov
cltd
add
and
mov
or
adc
mov
mov
jg
in
xchg
mov
cmp
add
and
add
rcl
in
fcoml
sbb
xchg
loop
out
ds
xlat
sbb
xchg
xchg
std
dec
mov
lahf
shrl
push
loope
mov
and
les
sarl
push
pop
cs
pop
xchg
pop
sub
mov
adc
pop
mov
add
add
and
mov
in
or
xor
out
jecxz
and
mov
imul
gs
pop
mov
push
xor
aam
jnp
dec
and
lods
gs
mov
push
pop
lods
outsb
pushf
fwait
mov
imul
mov
scas
dec
jmp
adc
aad
ja
movsb
mov
clc
or
mov
imull
jp
xchg
lods
ss
inc
sub
adc
pop
shrb
and
adc
dec
cmp
ja
push
loop
jne
shlb
fs
xor
leave
jae
xchg
inc
sub
or
arpl
pop
mov
jmp
into
unpcklps
mov
test
cmp
and
or
inc
fldenv
mov
adc
mov
test
cmp
rcll
push
lods
test
aad
pop
es
dec
pop
int3
jge
push
mov
jo
dec
in
and
cmp
lahf
push
and
inc
fidivs
dec
xlat
sub
mov
mov
repnz
aaa
lods
mov
lods
pop
dec
cld
into
adc
mov
lahf
dec
imul
sti
ljmp
mov
popa
push
xlat
popf
dec
das
lods
pop
dec
jmp
fisubrl
cmc
fimull
sti
xchg
clc
scas
sbb
es
xor
mov
push
pop
xchg
push
dec
push
rcrb
inc
mov
adc
repz
lods
fnstsw
lret
mov
push
pop
xor
int
lret
and
sub
fcoml
xor
in
lret
inc
xor
aas
roll
mov
cmp
popf
bound
in
xor
not
or
add
jo
jle
cmpsb
cmpsl
mov
jmp
ret
mov
sarb
stos
hlt
mov
aas
jbe
inc
sub
pop
push
out
push
shrl
and
sbb
pop
into
sbb
sbb
adcl
mov
adc
stc
aaa
stc
inc
into
leave
bound
test
lods
or
and
aaa
sahf
sub
lods
call
cmpsl
ret
or
lret
pop
mov
xorb
pushf
aas
imul
jno
push
lcall
scas
cltd
and
or
fwait
xor
pop
pushf
mov
cmpsl
ljmp
jle
lcall
or
dec
dec
xlat
jp
cmpsl
sahf
nop
lock
pop
sub
mov
imul
das
sub
es
mov
push
dec
data16
adc
mov
push
add
and
xchg
fs
shll
lcall
push
jl
jbe
scas
jae
je
xor
ljmp
in
fisttps
push
xor
dec
push
movsl
jne
inc
lcall
or
jp
int
scas
fs
cmp
lea
cmp
pop
iret
das
ret
xchg
xor
jo
je
cmpsb
sub
inc
xchg
sbb
test
mov
xlat
jne
jne
fucomi
push
dec
xchg
mov
stos
lcall
xchg
aad
fidivs
stos
cli
or
clc
sub
outsl
dec
xlat
lret
pop
mov
ret
pop
mov
mov
mov
and
pusha
mov
mov
pop
mov
mov
mov
rorl
mov
dec
mov
fsubrl
fstps
inc
pop
sub
arpl
xchg
int3
mov
or
inc
sbb
push
fwait
sbb
out
js
pop
mov
jo
call
cmpsl
jl
les
push
xor
adc
stc
rolb
aam
lods
jno
mov
fldlg2
out
jmp
mov
cli
sbb
nop
pop
dec
loopne
stos
std
pop
cmp
fiadds
popa
jnp
aas
xchg
xor
mov
jo
pop
jbe
xor
adc
cmc
insl
xchg
fidivrs
popf
std
xor
xor
add
shll
adc
adc
sbb
shl
cld
in
ret
popa
lret
push
push
fstpt
mov
push
jmp
inc
jnp
das
mov
mov
into
sub
sub
mov
lods
mov
mov
sub
dec
in
mov
mov
and
cmp
pop
and
andb
jno
inc
mov
loopne
mov
int3
dec
fisubl
mov
shll
mov
dec
push
push
push
pushf
add
loopne
mov
and
pop
enter
sbb
xchg
pop
fisttps
xorl
arpl
mov
adc
sbb
out
lds
jmp
dec
mov
lret
out
and
sub
mov
hlt
lock
aas
incl
mov
cmp
call
mov
add
mov
add
pop
fwait
add
mov
lea
push
les
mov
sub
mov
dec
pop
fstl
or
ret
xor
or
jl
mov
push
lock
sti
and
pop
jecxz
cmp
sub
les
mov
popf
test
sbb
mov
adc
dec
cmc
or
pop
inc
or
popa
mov
mov
xchg
insl
and
pop
sub
and
in
adc
jecxz
jbe
sbb
loopne
mov
inc
cmc
mov
cmpsl
jge
push
pop
leave
frstor
mov
hlt
testl
cld
iret
stos
and
mov
mov
xor
dec
xor
outsb
mov
shrl
lock
dec
sbb
mov
pop
lret
sahf
dec
fs
and
fcmovnb
test
or
iret
mov
jl
mov
mov
pop
mov
xlat
dec
pop
sti
imul
xor
cltd
and
mov
out
sbbl
je
and
add
out
sub
mov
push
mov
addr16
inc
gs
je
fisubrl
add
add
flds
xchg
gs
cmp
jge
and
ret
stc
cltd
lock
mov
sbb
inc
pop
es
daa
adc
std
and
xor
out
cmpb
jle
cmp
je
push
gs
hlt
sti
and
xor
push
push
pop
xor
push
in
and
ljmp
loopne
xor
pop
inc
lock
pop
test
aas
jns
mov
xor
mov
mov
repz
push
sbb
or
cld
jmp
sbb
pop
test
fldz
ret
or
or
lret
dec
sbbl
icebp
inc
mov
and
call
dec
subl
fst
pop
push
cmp
jge
fisubs
imul
pop
out
xor
mov
and
dec
xor
popf
aas
aam
mov
rolb
aas
push
fiadds
dec
mov
inc
dec
je
jb
imul
pop
vaddss
popf
pop
cmc
lods
stos
mov
lea
add
out
jbe
out
push
loopne
aad
xor
cmp
xchg
push
out
mov
inc
sbb
popa
loop
out
clc
dec
and
inc
mov
cmp
adc
rcrb
xchg
mov
cmpsb
push
xchg
scas
mov
out
jno
cmc
xor
outsb
xchg
and
add
push
int
mov
push
xchg
cmpsl
sub
xor
jg
sub
or
into
mov
dec
iret
add
and
or
in
and
shrb
test
out
lret
fcmovb
jle
mov
jb
in
incb
fildl
daa
shll
cmpsl
pop
sub
cmp
iret
inc
add
in
or
adc
test
add
in
inc
mov
dec
ret
dec
cmp
mov
aam
insb
fsubr
leave
jle
insl
fimuls
xor
push
xchg
or
hlt
jne
fsub
lcall
sahf
sbb
sbb
sub
add
push
pop
daa
push
mov
fistpl
shr
mov
lahf
fs
jp
pop
fdivs
hlt
int3
cmc
pop
inc
jo
into
pop
mov
les
and
out
xor
cmp
pop
aaa
push
inc
xchg
lahf
mov
lds
lock
popf
jge
adc
cmpsb
test
in
stc
sbbl
arpl
adcb
les
sbb
inc
bound
stos
cs
out
inc
add
cltd
push
jno
es
inc
push
into
adcb
lods
jbe
das
xor
adc
hlt
ret
gs
jle
jbe
mov
ss
mov
push
push
mov
outsb
out
xchg
jno
pop
sbb
pop
shlb
mov
inc
mov
fimuls
scas
fdiv
cmp
mov
fsts
into
jp
sbb
xchg
aam
adc
cmpsl
gs
inc
pop
and
sub
xchg
mov
mov
or
lcall
ljmp
push
mov
sbb
cmp
mov
jns
adc
and
lods
mov
pop
inc
cmpsl
mov
sub
cmp
jns
mov
adc
and
lret
mov
pop
lods
clc
xchg
sbb
sbb
imul
xchg
clc
add
imul
int3
outsb
stc
push
add
mov
mov
mov
jle
iret
push
lods
shll
jg
hlt
xchg
roll
mov
repnz
lret
in
repnz
add
hlt
icebp
cld
push
outsl
iretw
enter
fmull
adc
lods
and
dec
xchg
scas
lret
push
add
xor
push
jmp
lret
dec
stos
pop
arpl
adc
popa
push
popa
pop
push
sti
ds
xor
lahf
icebp
mov
fcompl
scas
inc
xor
jg
push
out
lock
mov
cli
sbb
mov
xor
aam
add
push
push
aam
inc
call
test
stc
adc
jge
outsb
into
push
ljmp
jge
mov
jmp
xor
fldenv
adc
out
shll
jge
push
int
mov
jl
rcrl
or
movsb
push
mov
dec
int3
lahf
or
and
inc
sti
arpl
scas
inc
es
jmp
sbb
jge
in
fidivrl
cli
mov
xchg
inc
xor
aas
lret
mov
int3
out
pop
ss
xchg
mov
repz
inc
test
adc
out
jg
shll
push
push
cmpsb
xchg
adc
push
cmp
movsl
fsts
cwtl
inc
or
jmp
mov
push
xchg
flds
std
mov
fmull
outsl
adc
adc
adc
jbe
outsb
xchg
dec
or
popa
sbb
sbb
mov
aam
push
pop
gs
xchg
xchg
cmpl
sbb
rol
cmc
mov
xor
dec
mov
leave
mov
jg
xor
cmpsb
push
nop
sbb
cmpsb
push
insl
pop
push
pop
testb
adc
xor
adc
xchg
mov
cmpsl
fnstsw
pushf
pusha
fs
jne
cs
lret
xor
rcll
shll
jne
shlb
xor
or
jns
mov
mov
out
mov
or
scas
cld
cmpsb
cmp
cld
jne
fiaddl
xlat
xchg
pusha
aas
mov
xor
popl
mov
mov
xchg
jae
fisubrl
xor
into
jbe
lahf
xchg
sbb
jo
ror
push
pop
les
xor
mov
and
lret
ljmp
and
or
ss
lods
mov
je
shrb
in
jb
inc
add
daa
scas
subl
cld
jo
lods
dec
jl
jmp
pop
mov
sub
cmp
mov
mov
fmul
cmp
cli
out
or
stos
ljmp
hlt
and
jne
xchg
pop
inc
into
ja
cmp
cmp
shlb
lea
pushf
test
je
cmp
xor
xchg
aad
icebp
adc
and
in
cmp
icebp
push
jecxz
mov
sub
cmp
sbb
outsl
fistl
ljmp
sub
adc
arpl
lods
hlt
push
in
or
jecxz
es
cmp
push
dec
gs
pop
int3
shr
mov
outsb
pusha
or
push
dec
mov
mov
pop
lock
pop
jle
jnp
or
dec
pop
and
mov
ja
rol
add
cmp
push
jb
push
push
dec
ss
jo
lods
jecxz
pop
adc
nop
fnstenv
aaa
sub
rclb
imul
clc
stc
mov
add
inc
dec
std
xor
and
mov
sub
pop
cltd
fildl
push
sti
mov
insl
adc
in
sub
lret
mov
psubsw
or
into
divl
xchg
dec
sub
or
hlt
mov
or
lea
push
jmp
mov
inc
mov
sbbl
sbb
ret
lds
add
popf
popf
in
xchg
or
pop
xor
or
push
xor
push
shlb
hlt
test
mov
and
pop
mov
sbb
dec
sbb
jecxz
mov
jns
lock
adc
and
inc
jge
clc
sub
mov
xchg
adc
adc
or
sahf
dec
into
mov
lret
xchg
leave
repz
or
in
sbb
mov
jnp
cmpsl
jge
cmp
xchg
jle
mov
stos
aaa
mov
mov
es
das
pop
fadd
inc
sbb
mov
or
and
add
out
xchg
mov
adc
jnp
mov
jne
aas
in
movsl
pop
test
aam
xchg
jns
mov
push
xlat
and
mov
mov
inc
cmp
jp
and
or
push
add
push
lret
fldcw
inc
xchg
xor
clc
int
test
jae
lock
jnp
push
push
je
jae
or
sub
jle,pn
cmp
xor
movsl
mov
repz
and
mov
dec
aaa
cmp
mov
jo
add
sbb
mov
in
xchg
pop
lret
out
orl
adc
aaa
mov
dec
into
or
and
dec
fiaddl
sub
hlt
fbstp
push
out
pop
and
std
aam
shrb
insb
dec
or
jg
test
fwait
or
and
dec
scas
and
xor
popa
in
lahf
rcrl
mov
or
jns
ss
cli
jne
mov
adc
inc
out
fs
test
mov
sti
sbb
fsts
push
add
and
mov
cmp
mov
add
imulb
sbb
mov
clc
mov
test
push
mov
sar
movsl
push
sub
fmuls
scas
and
daa
out
or
in
das
inc
inc
mov
and
iret
dec
int
cwtl
outsl
pushf
stos
shlb
gs
xchg
movsb
bound
xor
push
movsb
and
loopne
mov
or
mov
cmc
int3
fstp
sarl
leave
jmp
addr16
mov
mov
repz
dec
scas
pop
sbb
xchg
int3
addr16
xchg
fdivrl
push
mov
xchg
daa
arpl
dec
lods
cltd
cmp
pop
ret
stos
repz
or
test
decb
cmpsb
lret
push
mov
cmp
adc
test
push
sahf
dec
pop
jmp
cwtl
in
mov
ud0
sbb
shll
ret
fildll
push
push
cmpb
mov
cmpsb
outsl
popf
inc
aas
es
test
mov
or
sbb
shr
enter
sti
movsl
cli
lea
or
dec
cmc
mov
insl
arpl
pop
es
push
push
mov
mov
jmp
mov
mov
cwtl
inc
out
jecxz
mov
lods
jbe
stc
pop
and
mov
in
int3
lret
stos
xchg
mov
pop
mov
aas
adc
shll
adc
inc
xchg
pop
stos
outsl
addr16
fwait
mov
push
xchg
pop
and
leavew
pop
mov
cmpsl
cld
andl
shlb
jno
jno
jnp
mov
rcrl
popf
mulb
mov
in
stc
in
sbb
xchg
xor
cmp
fsub
mov
in
xor
ret
lcall
mov
int
xor
leave
mov
xchg
dec
stos
je
scas
pop
sbb
dec
mov
roll
inc
cmc
dec
sti
push
arpl
bound
fmuls
pop
cli
push
loopne
into
sbb
dec
inc
push
adc
sbb
fidivl
cmpsl
ret
clc
sub
rcr
jo
sti
roll
dec
xchg
mov
and
gs
pop
pusha
jmp
sub
add
iret
ja
pop
push
xor
sbb
insb
lock
fwait
test
sbb
out
scas
jo
mov
cmpsb
lret
ljmp
outsl
dec
fisttpl
mov
pop
mov
call
mov
mov
mov
in
sbb
push
movd
sub
gs
popa
jmp
cmpsl
push
xor
add
iret
push
test
sbb
ret
inc
mov
and
dec
mov
push
xchg
popa
call
into
mov
fisubrl
out
pop
sbb
daa
add
inc
mov
xor
fmuls
lcall
rcrl
cmp
dec
mov
sub
add
pop
mov
and
and
mov
movsl
and
movsb
jo
stc
divb
mov
add
lods
xor
daa
mov
popa
jae
imul
mov
pop
shld
and
in
bound
jo
lock
loope
mov
rorb
sti
roll
repz
xchg
mov
outsb
push
out
inc
pusha
jle
jmp
popa
xlat
loope
jge
add
sub
stos
imul
add
dec
cmc
mov
sbb
adc
in
in
or
xchg
cwtl
bound
and
inc
cli
pop
es
jb
pop
gs
movzbl
jmp
int
lret
sbb
push
pop
ret
sbb
cmp
iret
mov
hlt
in
enter
mov
pop
xchg
pop
inc
mov
cmc
test
jmp
bound
jecxz
cli
les
inc
mov
mov
dec
push
lock
in
pop
jecxz
inc
ret
fstpt
scas
add
xor
lret
mov
xchg
sbb
push
sbb
lret
jmp
call
pop
test
or
clc
mov
shl
arpl
adc
dec
or
mov
jno
daa
inc
xchg
sub
mov
and
leave
stc
insb
and
push
mov
lock
cmc
sub
stos
sub
and
int3
mov
jae
out
ret
repz
mov
push
std
in
or
jp
and
or
fsts
or
adc
call
push
test
and
popf
inc
ror
lcall
int
inc
or
jecxz
cltd
pop
mov
pop
fwait
test
mov
dec
and
xchg
ja
je
pop
or
xor
sti
cmp
push
jno
mov
aas
mov
lods
fsubrs
je
mov
aam
lea
scas
sbb
lret
pop
dec
cwtl
pop
push
xchg
xor
ret
mov
or
aam
sub
addr16
dec
push
add
fstps
ret
cmc
adc
jno
xor
ljmp
xor
dec
and
insl
scas
jbe
mov
inc
xchg
push
cmp
iret
push
mov
btr
nop
lea
bound
mov
repnz
jnp
fidivl
and
sbb
mov
cmp
iret
push
sbb
clc
jno
aaa
xor
jg
scas
into
pop
lahf
and
and
in
iret
pusha
insb
mov
mov
in
popa
fcoml
mov
outsb
sbb
das
js
aam
push
adc
shlb
push
int3
call
lahf
inc
fsubs
daa
jecxz
iret
push
inc
push
jecxz
push
bswap
xor
aam
cmp
mov
push
das
jle
orb
ja
push
push
inc
stc
fisttpl
inc
fisubrl
jmp
dec
and
lock
xor
xor
mov
sbb
push
sub
dec
dec
adc
xlat
push
je
sub
int3
push
dec
lods
sub
push
push
rcrb
adc
pop
popa
mov
rorl
fidivrs
imul
xchg
daa
pop
or
pop
loope
stos
xchg
mov
push
fwait
mov
xchg
popa
mov
lea
jno
icebp
imul
mov
ds
scas
outsb
aas
hlt
push
and
fidivrs
ss
sbb
ficoml
popa
nop
lods
movsl
jge
ret
loop
ljmp
pop
aaa
nop
push
std
cli
fdivp
cmp
adc
mov
fistps
cltd
fadds
adc
movsl
xchg
cli
mov
shlb
xchg
adc
in
mov
lret
cmc
std
sti
insb
mov
inc
outsl
and
add
dec
cmp
dec
stos
sbb
mov
je
scas
or
shr
nop
mov
lock
out
push
xorl
lock
inc
lock
cmpl
ret
adc
pushf
ret
mov
xorb
jns
dec
xchg
push
std
lock
cmovge
inc
nop
lret
ja
dec
xlat
fisttpl
sbb
frstor
inc
sbb
lret
icebp
test
cmp
sahf
repnz
add
aas
add
iret
shrb
lahf
into
push
pop
push
stc
sub
push
xchg
ds
scas
cmp
iret
cltd
dec
pop
mov
mov
mov
movsb
add
sub
repnz
mov
mov
scas
dec
dec
cmp
sbb
call
and
je
std
pop
dec
comiss
in
push
sbb
mov
out
mov
repnz
pop
mov
mov
ret
xchg
mov
aaa
pop
sub
xchg
imul
sti
fdivrl
mov
cmp
or
in
push
sub
and
xor
js
insl
push
push
ja
xchg
inc
inc
mov
ja,pt
mov
add
mov
push
push
jnp
test
or
imul
dec
or
lcall
ds
fwait
ljmp
jmp
rcll
and
mov
add
decl
mov
sahf
insl
adc
andb
dec
shl
fs
or
cmp
fsubr
push
les
mov
mov
and
imul
xchg
mov
decb
push
sub
outsb
loopne
or
aaa
fsubl
les
cmp
jecxz
iret
out
cld
pop
jnp
cmp
fs
mov
jecxz
stos
sub
and
in
not
lret
mov
outsb
xor
movsb
imul
mov
sbb
dec
sub
jle
orl
add
push
inc
sub
mov
add
jge
fidivl
and
xor
std
into
and
hlt
xchg
mov
and
sbb
mov
les
fcompl
mov
test
or
sbb
daa
jne
mov
sbb
inc
inc
sub
mov
pop
sub
outsb
das
mov
cmpsl
cmp
pushf
pop
icebp
mov
scas
subps
addr16
xlat
jge
push
add
push
out
sti
xchg
pcmpeqw
push
imul
mov
jl
dec
add
inc
mov
mov
mov
dec
sbb
std
pop
ss
inc
cmpsl
sub
cld
dec
push
mov
sub
enter
dec
outsb
popf
iret
mov
jp
jp
shr
sbb
xor
and
sbb
add
add
mov
daa
add
jl
xchg
mov
jp
sub
xor
pop
orl
fisubrs
mov
aas
popf
jb
jmp
leave
in
pusha
sub
mov
into
fisttpl
mov
jecxz
jo
and
cmp
mov
mov
lods
loop
xor
or
mov
dec
scas
fdivrl
push
and
fs
xchg
cmpsl
aad
insb
insb
mov
fsts
jle
popf
repnz
add
call
jns
lea
idivb
lahf
jno
pusha
cmp
mov
ret
pop
clc
and
mov
xor
lcall
sbb
inc
lods
cmp
push
cli
fdiv
xchg
xchg
adc
dec
sub
pop
call
and
jp
sbb
hlt
jecxz
mov
mov
xchg
ja
xchg
ja
xchg
mov
movsb
push
ror
xor
dec
es
mov
pop
mov
mov
repnz
sbb
cwtl
lcall
adc
xchg
jns
fidivrs
arpl
push
inc
mov
mov
ret
jae
xchg
dec
bound
adc
subb
scas
and
sbb
cltd
icebp
rol
sbb
ljmp
sarl
mov
test
add
daa
outsl
push
das
out
jp
xor
mov
ds
js
sti
add
push
cmpsb
adc
into
mov
outsb
insb
popf
xchg
in
notb
loopne
jmp
addr16
mov
adc
pop
lods
enter
dec
pop
mov
dec
cmp
xor
addr16
adcb
in
dec
xchg
cmpsl
inc
sub
mov
gs
xchg
mov
pushf
jmp
xchg
adc
mov
adc
ljmp
or
repnz
jbe
cltd
xor
stc
andl
loopne
xor
outsb
std
int
test
je
mov
cltd
scas
add
idiv
pop
in
add
jae
pop
pop
hlt
jno
pop
in
sahf
ja
out
adc
push
ja
insl
sub
cmpsb
inc
dec
and
mov
iret
imul
pushf
mov
out
mov
mov
push
lcall
xor
and
sub
out
imul
cli
pop
outsb
dec
rcrl
fldenv
and
xchg
pusha
in
cmpsl
sub
push
out
push
mov
dec
xchg
mov
jo
mov
hlt
loope
cmp
add
mov
xlat
inc
inc
cld
sub
into
fistl
cmpxchg
popa
adc
leave
pop
and
sbbl
inc
xchg
mov
out
notl
push
mov
cld
fstpl
push
pop
jg
shll
sub
add
mov
cs
push
out
push
in
dec
sahf
orb
and
pop
jne
or
inc
dec
or
pop
xor
pop
sbb
xlat
mov
jmp
test
mov
xor
lods
push
aam
cmp
jge
movsl
scas
cmpl
mov
lret
rorl
push
loope
popf
les
in
sub
or
lods
filds
daa
or
mov
sbb
fidivrl
test
outsl
test
pop
stc
clc
subl
mov
jnp
push
or
cmpsl
cmpb
dec
in
pop
mov
mov
add
or
mov
add
ret
adc
idivb
faddl
mov
test
dec
rorb
push
and
out
fiadds
adc
and
popa
mov
cli
dec
mov
jle
lret
xor
jno
imul
imul
out
mov
loopw
imul
mov
sub
mov
insl
jne
xchg
dec
mov
into
mov
add
imul
xchg
scas
or
jecxz
fsts
mov
sbb
aaa
adc
mov
sti
aam
out
cmp
lds
adc
mov
mov
pop
pop
repnz
inc
xchg
aam
ret
scas
xorl
mov
inc
lret
cli
ret
inc
cmpsb
loope
add
inc
adc
cmc
push
sti
adc
data16
pop
push
sub
cmp
and
inc
loope
jae
add
push
push
movsl
lock
xchg
push
pop
lahf
fiaddl
daa
ljmp
adc
adc
pushf
in
push
ja
jae
cmc
cmpsl
push
sub
xchg
jl
mov
mov
mov
lcall
movsb
pop
inc
pop
inc
dec
les
testl
xor
test
push
add
mov
push
dec
mov
add
ja
mov
dec
daa
push
xchg
daa
repnz
cmp
les
and
call
or
xchg
mov
xlat
adc
mov
cmp
mov
out
jmp
or
xor
pop
add
cmc
and
mov
add
cli
mov
push
and
aad
jo
mov
outsb
inc
test
cmpsl
in
jb
dec
cmp
jo
mov
sub
in
xor
add
push
data16
inc
push
outsl
jle
scas
nop
addr16
mov
ret
xor
add
in
dec
movsl
fidivrs
lods
jle
icebp
xlat
pop
xor
insl
push
xchg
mov
out
in
sub
jg
xchg
and
xchg
cmc
cltd
sbb
sti
sahf
out
push
cmc
mov
dec
cwtl
pusha
inc
and
cmp
cli
outsb
fists
push
mov
xor
mov
ret
test
jb
inc
xchg
adc
loop
xlat
decl
ds
mov
xchg
add
sub
xchg
mov
jae
lods
or
dec
jg
in
mov
test
mov
mov
nop
jmp
fcomps
push
add
std
aam
outsl
and
sub
pop
jp
sbb
inc
adc
sbb
roll
push
or
or
jmp
es
inc
add
and
fninit
push
inc
push
mov
pushf
fmuls
ret
pmulhuw
cmc
jns
xchg
scas
lods
mov
and
add
mov
repz
adc
les
jb
pop
movsb
movsb
mov
popa
sbb
fs
sbb
out
mov
popf
cmpsl
sbb
call
imul
push
or
aad
call
fprem1
out
inc
sub
add
addb
rcrb
in
xchg
jmp
mov
dec
mov
mov
iret
sbb
cwtl
xor
pushf
movsl
push
xorb
mov
mov
int
mov
inc
popf
test
int
int3
xor
inc
into
cli
jmp
repnz
fmuls
inc
sbb
dec
ret
mov
adc
daa
mov
ds
mov
ljmp
jo
out
loopne
or
aaa
lods
testl
pop
sub
mov
adc
mov
stos
jne
or
clc
inc
push
lds
xchg
shll
mov
or
fcoms
sub
mov
sub
jnp
mov
jl
aad
sub
xor
sbb
in
pop
sbb
js
pop
faddl
and
dec
inc
mov
mov
xchg
test
mov
push
jo
sub
fsub
push
dec
jns
scas
sub
cltd
adc
xlat
mov
sub
mov
icebp
lret
test
pusha
loopne
inc
mov
pop
test
repnz
in
sbb
lret
fmuls
pop
inc
aad
int3
push
ja
cmp
ja
sbb
lea
mov
pusha
lock
push
mov
in
pop
cmp
neg
adc
loop
xchg
mov
pop
fwait
scas
fxch
inc
adc
jl
and
aas
fcmovnbe
mov
jle
pushf
mov
fldl
fldl
leave
and
popa
or
push
sub
daa
cmp
popl
test
xchg
hlt
mov
lock
push
dec
mov
shrl
sahf
push
inc
out
gs
inc
inc
cs
xchg
push
pop
imul
stc
imul
outsl
movsl
sbb
mov
rorb
popa
xor
lds
decl
xchg
shrl
sub
sub
mov
orb
lahf
scas
pop
popf
cltd
mov
adc
pop
inc
scas
mov
inc
sub
out
dec
jecxz
jge
clc
inc
add
xor
cmc
imul
loope
cmc
ja
shrb
cmp
xchg
repnz
fdivr
mov
sub
jp
xchg
sbb
andl
ljmp
pop
inc
lods
fimuls
xchg
testl
push
fs
lods
shlb
cmp
fcoms
stos
popf
cli
nop
loope
out
mov
adc
inc
lahf
prefetch
out
rclb
xchg
out
cmp
test
stos
dec
insl
mov
int
jb
roll
mov
test
xor
and
mov
lret
sub
mov
mov
mov
mov
mov
fwait
cmpsl
ret
ds
test
lds
push
aam
cmpsb
and
in
mov
xchg
stos
xchg
push
lcall
cmp
jl
lea
mov
pop
outsb
pop
sti
ja
push
mov
adc
call
loopne
dec
out
dec
cmp
xor
ret
pop
fdivrl
sbb
mov
sar
adc
push
ljmp
mov
xor
ret
add
push
adc
repz
adc
subb
pop
movsb
and
insl
and
lea
push
sub
out
push
je
scas
shll
int
xor
loope
lahf
mov
inc
leave
cltd
cwtl
fistps
xchg
sub
sub
mov
sub
and
jb
lahf
adc
mov
sub
mov
inc
xchg
cmp
add
out
lods
adc
lods
rclb
cmp
jmp
movsl
sarl
xlat
nop
icebp
push
fwait
pop
push
push
mov
dec
cmp
mov
cmp
and
out
sbb
xchg
cmpsb
cmp
std
inc
ljmp
lods
push
mov
arpl
xchg
es
sbb
mov
inc
inc
cltd
and
icebp
or
arpl
pop
fcmove
inc
je
lods
push
jmp
js
lock
sarb
push
and
add
pop
icebp
push
adc
divb
mov
lret
mov
or
popf
fadd
or
arpl
pop
test
jbe
push
cmc
ret
push
or
outsb
sub
in
sub
xchg
or
fdivrp
mov
mov
andb
mov
fs
outsb
xor
int
xor
lret
aas
mov
loope
cmp
cmp
xchg
and
push
sarl
sbb
mov
adc
js
pop
aad
mov
ret
scas
inc
sbb
xchg
mov
stc
dec
popa
or
or
mov
mov
push
mov
ss
data16
sti
mov
mov
or
mov
or
mov
stos
lahf
test
adc
mov
adc
aam
sbb
icebp
mov
mov
xlat
ret
push
bound
in
and
clc
jl
pop
movsb
inc
dec
inc
cmp
push
test
enter
smsw
pop
jb
test
jne
sub
clc
add
pop
jp
add
clc
add
sti
mov
lret
sub
cli
hlt
dec
sahf
pop
fwait
sbb
ss
clts
outsl
cmpsb
xor
mov
mov
add
stc
imul
sbb
mov
aas
aam
movsb
jnp
push
test
xchg
mov
cli
and
push
rolb
icebp
mov
imul
inc
xor
in
mov
mov
push
sub
push
inc
idivl
dec
cwtl
rcl
lcall
in
pop
in
xchg
jns
dec
int3
adc
or
sarb
loopne
jmp
sahf
lret
es
shlb
repz
mov
sbb
sub
lea
push
push
out
popf
pusha
cmp
dec
outsl
jb,pt
xor
pop
mov
jbe
das
mov
add
push
outsb
mov
clc
dec
adc
test
out
jg
fwait
sarl
dec
sub
imul
adc
es
pop
lret
mov
aaa
cld
loopne
sar
push
ret
jmp
fs
mov
mov
repz
jbe
fstpt
adc
lahf
adc
cmpl
in
jae
mov
vmread
call
xchg
nop
enter
fs
add
jns
imul
push
out
outsl
aam
xchg
push
dec
rorl
mov
inc
and
leave
inc
ljmp
jmp
cmp
sub
mov
or
xchg
outsb
mov
dec
sbb
mov
jne
ljmp
and
cld
mov
outsb
pusha
sub
lret
cmp
call
js
cmp
adc
sbb
pop
js
mov
subl
lods
cmpsl
rcrb
mov
jp
aas
sub
adc
xchg
aaa
add
jmp
ljmp
andps
in
fwait
iret
cmp
add
popa
sbb
cli
add
xchg
popa
out
mov
pop
or
dec
subl
jecxz
mov
cmc
jo
fldt
repz
add
fcomp
js
lods
inc
and
mov
jmp
cltd
mov
inc
je
mov
ret
adc
nop
pushf
cltd
mov
and
test
stos
imul
inc
push
psubb
lcall
jns
add
cli
mov
mov
cmc
sbb
in
lret
mov
add
adc
pop
jg
mov
pushf
push
or
push
adc
ja
dec
pop
out
pusha
insb
xor
insb
mov
push
sbb
or
xchg
sub
lea
pop
xor
rcrb
mov
test
push
inc
mov
out
test
inc
mov
add
adc
pop
pop
lcall
fwait
pop
add
mov
push
adc
push
es
adc
imul
inc
jno
fcomps
scas
jmp
sbb
stos
dec
cld
mov
testl
jg
jp
in
mov
jb
stos
jae
pop
ds
mov
pop
cwtl
popa
aaa
out
mov
xchg
out
dec
fcoms
or
xchg
leave
mov
push
jl,pn
loop
in
cmp
fdivrl
xchg
lods
iret
sti
mov
sbb
mull
or
xchg
pop
inc
add
add
popf
push
add
es
jl
bound
pop
inc
lret
xor
jo
and
pusha
lcall
call
fbstp
es
cwtl
jnp
add
mov
sarl
mov
ficoms
xchg
jp
pop
sub
xchg
incl
mov
mov
add
add
fcoms
and
out
clc
and
fwait
stos
lods
add
sbb
cmp
ljmp
pop
mov
lock
cwtl
inc
sub
push
cwtl
adc
fwait
pop
pushf
and
inc
jp
xor
test
outsb
mov
les
cli
enter
inc
jg
test
imul
fadd
mov
mov
cmp
aad
repnz
movsb
or
cs
inc
mov
shrl
and
cmp
cmp
adc
fcmovnbe
jg
insb
pop
cmp
inc
lea
jl
and
shl
lahf
subb
adc
pop
add
lahf
mov
jle
movsl
loopne
push
mov
push
and
cmp
hlt
iret
out
cmpsl
in
stos
sub
xor
cmp
and
xorb
in
lods
mov
xchg
cli
mov
cmp
fchs
scas
mov
loope
mov
shrb
jecxz
dec
or
jecxz
call
push
loop
lods
icebp
mov
fidivrs
jmp
cli
jb
xor
jecxz
dec
faddp
scas
jae
in
aad
xchg
add
sub
ret
icebp
std
pusha
pop
inc
int3
inc
lods
lock
xchg
add
mov
dec
xchg
fnstcw
iret
lods
add
fldcw
aad
out
xlat
testb
dec
fwait
xor
addr16
shll
xchg
jl
jo
mov
int
inc
mov
in
es
test
cltd
xor
xchg
scas
fs
push
enter
or
xchg
mov
das
pop
inc
addr16
sbb
mov
dec
mov
leave
xchg
lods
cld
or
std
pop
and
pusha
push
add
or
in
jecxz
rcll
mov
in
mov
pop
in
and
scas
push
sbb
adc
out
xorb
test
adc
lds
pop
scas
ret
or
shlb
inc
cmp
dec
xor
aam
cmpsb
mov
push
mov
xor
popf
or
push
aaa
sbb
in
in
lods
jno
pop
jne
mov
icebp
push
dec
xchg
mov
mov
mov
xor
mov
bound
cmp
inc
push
jns
scas
mov
mov
mov
inc
enter
or
dec
int
cltd
jl
clc
and
das
sbb
sbb
mov
gs
jno
iret
dec
push
xor
adc
loopne
addr16
inc
lods
js
fdivp
dec
jp
adc
xchg
pop
lahf
pop
fdivrs
or
pop
push
jle
insl
jae
adc
pop
unpckhps
adc
pop
pop
inc
cwtl
aas
or
daa
pushf
loop
dec
mov
test
push
imulb
jl
repnz
add
test
testb
xor
push
aaa
mov
add
enter
dec
pop
arpl
subl
scas
jge
push
mov
icebp
adc
andb
repz
je
xchg
or
mov
ss
pop
or
dec
push
cmpsl
cmp
xchg
mov
mov
mov
out
cmp
aas
jg
ds
sbb
push
sub
add
std
xchg
ss
sub
xor
mov
insl
or
ret
or
mov
dec
and
test
xchg
sbb
push
pop
sub
pop
sbbl
adc
pop
leave
arpl
les
out
and
fisubrl
push
and
es
test
cmp
cmp
pop
cmp
stc
xor
push
in
les
push
ret
dec
lods
sub
jge
jns
add
shrl
cmova
and
insl
pop
adcl
pop
cs
inc
jge
fildl
or
adc
je
xchg
cwtl
dec
stos
cs
mov
jmp
pop
bswap
push
mov
int
sbb
js
fistl
push
cmp
xchg
aad
cwtl
cmp
cli
adcl
jmp
shll
xchg
ret
sub
sub
mov
fwait
int3
push
inc
lcall
and
jns
fdivrs
inc
out
ljmp
movsl
in
in
pushf
pop
data16
jmp
mov
mov
ljmp
mov
ss
mov
xchg
popf
aam
popl
add
aad
lods
call
insb
and
mov
mov
xchg
cmp
or
mov
sub
jmp
pop
enter
jge
pop
and
adc
sbb
dec
inc
mov
push
inc
cmp
lea
ds
sbb
dec
inc
movsb
js
lds
xchg
cmc
arpl
les
aas
xchg
add
movsl
fwait
xchg
jecxz
cmpb
dec
push
in
dec
mov
stos
and
jno
imul
jl,pn
xchg
pop
fisubs
dec
dec
shr
lcall
popf
lods
std
ja
in
push
dec
cmp
fcomps
data16
adc
xchg
xlat
aaa
xchg
pop
mov
xor
jl
or
pop
cwtl
pop
mov
scas
ljmp
mov
push
lret
nop
push
into
in
xor
lods
dec
xor
lcall
cmp
mov
jecxz
dec
add
push
fisubl
jne
stos
mov
push
xor
fcmovnbe
cld
xchg
cmp
xchg
hlt
push
in
dec
dec
les
icebp
mov
jl
lods
mov
dec
mov
or
sbb
mov
out
mov
cmc
mov
inc
pop
inc
xchg
test
std
in
insb
popf
jns
push
xor
in
mov
adc
js
mov
jg
cmp
jge
pop
je
jg
ret
add
mov
loopne
sbb
adc
xor
mov
ds
sub
adc
aas
cmpsb
jmp
std
push
xchg
lahf
pushf
sbb
pop
sub
jge
lcall
test
and
lock
mov
and
lods
je
mov
jg
cmpsl
cmpsb
jge
shll
adc
fcomip
popa
out
pop
push
out
xor
fcmovb
jne
shl
xchg
dec
pinsrw
xchg
pop
jge
mov
test
aaa
sbb
shrl
subl
les
std
les
mov
cmpsb
cmp
test
daa
cwtl
mov
fisttpl
stc
cmpsb
or
bound
out
imul
push
sbb
stos
sarb
loopne
mov
leave
inc
ret
push
jge
icebp
push
out
cmp
dec
mov
sahf
pop
sub
add
loope
mov
sub
imul
lods
psubsb
hlt
pop
xchg
or
jns
insb
ja
inc
jle
jmp
inc
push
shrb
jle
into
leave
jb
aaa
inc
xor
jle
lock
out
jo
jecxz
ljmp
nop
jnp
mov
popf
ljmp
sbb
adc
stc
inc
sbb
movsl
fdivrp
faddp
add
or
pop
push
jb
xchg
bound
loop
and
pop
dec
xor
test
adc
insb
xor
inc
push
test
jmp
vmwrite
insb
mov
or
clc
test
jmp
icebp
push
pop
std
inc
popf
out
outsl
pop
adc
inc
sbb
aas
fwait
xor
adc
sbb
hlt
test
and
out
xchg
or
xor
mov
dec
pop
push
lcall
sbb
cld
jne
and
aaa
cmp
cwtl
xchg
or
adc
jb
stos
fdivrs
imul
out
mov
pop
dec
inc
push
inc
cwtl
mov
imul
ja
sub
or
test
loope
aaa
adc
mov
mov
cmpsb
xor
mov
imul
mov
pop
es
xchg
fisttps
mov
dec
repnz
fcomps
inc
sahf
mov
in
insl
fprem
sbb
in
out
loopne
cltd
cmp
or
add
dec
push
cmpsl
loope
into
jnp
adc
sub
mov
stos
cmpsl
fmul
sub
mov
test
orl
sbb
loop
mov
pop
imul
sub
ja
jle
pop
sbbl
mov
les
pushl
movsb
pop
subb
mov
xchg
ds
pop
dec
jp
pop
dec
mov
xchg
jo
call
adc
mov
xchg
cmp
leave
jecxz
xor
add
iret
mov
mov
jp
lahf
xor
lods
ljmp
push
dec
pushf
mov
sub
jmp
pop
in
loopne
outsb
cmpsl
dec
push
test
pop
jae
xchg
xchg
jbe
jno
aad
mov
inc
jl
xor
push
push
popa
lcall
sbbb
call
mov
jmp
nop
sahf
inc
add
xor
sbb
pop
shl
pop
xchg
cli
imul
or
jl
inc
mov
xchg
lret
daa
xchg
outsb
dec
mov
xchg
shrb
jne
hlt
shrl
sahf
push
ljmp
pop
xchg
pop
pusha
pushf
scas
add
pushf
push
stc
mov
cmp
sahf
rolb
in
in
loop
stc
dec
and
test
loopne
push
test
lcall
xor
inc
sub
lret
adc
inc
rcll
ret
dec
repz
fldcw
or
aam
or
pop
cmp
inc
je
mov
add
pop
dec
loopne
jmp
leave
pushf
call
aaa
sub
inc
call
fs
mov
mov
push
inc
and
or
pop
fucomp
out
das
cli
pop
jb
int3
test
in
mov
or
stos
lods
loop
les
movsb
scas
fwait
and
sahf
loopne
out
aas
mov
popa
add
lcall
cmp
lods
cmp
lahf
loope
insl
test
jo
xor
iret
in
popa
sub
imul
mov
xchg
jns
mov
sub
fdivl
inc
pop
jns
aam
stc
mov
or
orb
stos
arpl
movswl
xor
dec
cmpsb
sub
xor
cmp
pop
dec
xchg
mov
xlat
mov
mov
jge
out
xlat
and
insl
out
mov
xchg
xchg
in
loope
loopne
xchg
mov
fsubrs
dec
js
in
loope
in
dec
inc
jns
jmp
pushf
lret
mov
movsb
roll
insb
sbb
aaa
push
dec
cli
inc
mov
xor
or
jnp
and
sub
jle
loope
pop
jns
ss
ret
sub
int
lods
lcall
add
mov
popf
cld
mov
repz
iret
and
xor
adc
pop
pusha
xchg
sbb
ret
clc
mov
adc
push
mov
mov
push
xor
stos
adc
outsl
inc
xchg
aam
lret
pop
shrb
daa
repnz
int3
cs
ret
mov
ja
pop
cmp
aam
test
fst
in
inc
arpl
and
push
xor
scas
scas
cs
mov
dec
xor
icebp
out
jg
hlt
push
xor
push
sbb
jp
shll
test
xchg
mov
mov
dec
lods
fdivl
hlt
iret
inc
pop
int3
inc
xor
dec
pop
mov
test
in
jb
out
and
repnz
cmpb
std
cli
cmpsl
loope,pn
push
mov
jle
dec
mov
sub
sub
fildll
and
pop
clc
xchg
sbb
test
ja
push
mov
jnp
mov
les
hlt
adc
ds
lods
out
jmp
ja
and
das
mov
jno
fstpl
mov
adc
mov
scas
add
push
loope
lret
mov
xchg
dec
push
jecxz
in
testb
in
adc
bswap
fsubrs
xor
jnp
inc
adc
dec
inc
cld
jns
jl
std
pop
xor
push
shrb
xorb
stc
sbb
lcall
or
inc
mov
inc
mov
jg
jo
or
faddp
aas
test
xor
sub
push
nop
jb
pop
lock
and
cmp
stos
lods
mov
add
push
loop
xchg
mov
sbb
mov
cmp
push
pop
out
pop
cmp
add
mov
jle
xorl
nop
popa
adc
loop
and
jb
jns
rorl
andb
cs
xchg
adc
pop
cmp
ror
dec
xor
cltd
sub
sub
stc
imull
and
jne
jo
inc
lea
inc
decb
fisttpl
fstps
add
pop
ljmp
mov
mov
xchg
enter
mov
inc
scas
mull
outsl
add
mov
repz
cmp
or
or
pop
inc
push
pop
inc
adc
push
loop
repnz
addr16
popf
movsb
add
mov
in
rorb
sub
into
xor
fcmove
aas
add
movsl
shl
incb
xor
xchg
and
push
shlb
and
push
ret
jl
jl
xor
mov
test
popa
push
adc
xor
lock
jbe
ss
cwtl
je
push
xor
cmpb
sbb
sbb
dec
test
test
cmp
je
inc
add
mov
popf
jge
aad
sub
xchg
pop
pop
cmpsl
insb
das
and
popf
xor
pop
pushf
out
adc
jecxz
fwait
sahf
mov
mov
cmp
test
xchg
xchg
std
jmp
adc
and
repz
orl
mov
pusha
inc
dec
push
loopne
icebp
cmc
ljmp
jns
dec
mov
jnp
in
sub
xchg
pop
pop
mov
jae
xchg
lret
addr16
movsl
or
inc
xchg
sbb
fildl
jns
add
notl
push
jae
les
dec
into
mov
repnz
repnz
sar
and
popf
cmp
add
sub
or
inc
mov
mov
mov
cmpsl
test
jns
pop
push
divb
cmp
pop
andl
cmc
sbb
inc
mov
mov
cmp
fwait
imul
cmp
xor
pop
jge
jns
mov
inc
ret
mov
jae
xlat
popa
jbe
addr16
cmp
ficompl
in
pop
and
mov
js
jae
sub
push
sbb
mov
bound
insl
mov
das
aas
pop
rorl
lret
jp
scas
mov
lock
mov
arpl
xchg
mov
inc
push
sub
fwait
mov
push
lcall
hlt
push
bound
aaa
adc
add
inc
imul
popa
add
sti
cmc
pop
mov
ret
call
pop
inc
decl
lea
inc
inc
jp
adc
fs
fwait
notl
mov
aad
xchg
pop
pop
data16
aad
cmp
fidivrs
jp
add
test
push
mov
outsl
mov
incb
aad
mov
in
int
mov
icebp
pop
je
popa
and
mov
jbe
xchg
sbb
cltd
adc
les
je
pop
mov
out
imul
in
sbb
jbe
repnz
ja
out
pop
mov
imul
inc
dec
insl
adc
xchg
loope
frstor
sti
popf
jle
ret
sbb
addr16
mov
push
xchg
jmp
ja
jnp
testl
adc
mov
adc
les
movl
scas
dec
stos
sub
aad
cmp
sub
or
pop
sbb
scas
rorl
adc
test
push
popa
xchg
mov
sbb
insb
shl
rclb
adc
mov
fsubrl
aaa
dec
hlt
mov
or
xchg
and
mov
push
test
add
fdivs
cmc
cwtl
jo
les
imul
fsub
sti
scas
jecxz
and
xlat
test
js
iret
add
push
mov
push
sbb
mov
in
xchg
lret
clc
jmp
or
sbb
dec
in
push
cmpb
jno
aas
dec
add
imul
push
dec
ficoml
outsl
jmp
adc
repnz
xchg
jp
xchg
in
sbb
dec
mov
hlt
push
loopne
push
pop
mov
cmc
push
pop
and
push
test
int
jle
sbb
inc
add
test
adc
mov
or
addb
clc
adc
push
cmp
jecxz
repnz
les
mov
lock
cmpsl
aaa
pop
add
lret
in
iret
popa
add
out
push
sbb
fmuls
jb
es
dec
and
dec
sbb
xor
popa
mov
sub
mov
mov
push
cmp
outsb
incl
in
mov
sbb
jbe
jo
cmpsb
push
shll
rorl
nop
jns
inc
jg
xor
movl
call
adc
push
mov
stos
inc
inc
mov
mov
fs
insl
push
lods
mov
fs
inc
add
push
stos
xor
mov
pop
lds
sbb
daa
cmp
in
in
xorb
outsb
cmp
jle
pop
mov
inc
mov
into
adc
sub
push
in
sbb
dec
add
iret
rcr
mov
pop
sub
inc
les
pop
push
dec
ja
out
movsb
and
lods
cmpb
push
mov
sub
dec
cmp
frndint
mov
mov
sub
repz
lods
jne
jmp
mov
adc
in
mov
adc
push
lret
fstl
xor
test
push
in
pop
outsl
pusha
xchg
jle
or
faddl
lods
loop
rclb
jnp
xchg
or
dec
dec
bound
cld
std
inc
inc
fisttpl
and
fwait
mov
lcall
sbb
outsb
stos
cli
sbb
stos
loop
jno
sub
loop
test
scas
xlat
cld
enter
nop
cs
push
test
mov
mov
jae
push
push
hlt
dec
scas
mov
aaa
push
loopne
cmp
and
or
jns
lret
inc
pop
clc
sub
xchg
jecxz
dec
test
xlat
lret
repnz
cmp
inc
jb
sub
clc
mov
fwait
push
cld
scas
xchg
push
jmp
lods
pop
pop
mov
cmpl
or
stos
icebp
inc
sbb
ja
in
inc
outsl
aad
jecxz
mov
sub
test
mov
movsb
fisubs
cmp
test
dec
push
jns
jge
test
mov
lcall
dec
out
mov
cmp
leave
sub
je
dec
decb
stc
jae
out
cmp
sub
rolb
js
pop
cs
int
sarb
and
outsb
jb
aaa
lods
cmpl
xchg
push
rorb
loopne
xor
sbb
outsb
aam
xchg
je
dec
stos
outsl
jmp
and
cmpsb
mov
xchg
fdivrs
in
fwait
jge
adc
jns
shlb
cs
movsb
dec
popa
lea
xchg
dec
add
mov
je
jne
sbb
loop
les
lds
mov
push
push
testb
inc
lahf
inc
sbb
cmc
add
pop
jae
mov
mov
inc
mov
pop
cmp
adc
cmp
mov
int3
sbb
stos
jmp
fildll
int
out
jb
jp
and
mov
mov
jae
jl
mov
hlt
aaa
mov
jge
push
arpl
in
mov
outsb
stos
je
shl
dec
mov
mov
jb
test
clc
aaa
mov
add
dec
lock
lahf
pop
fdivl
adc
pop
mov
cmp
pushw
imul
pop
dec
out
xlat
lods
push
test
loopne
pop
pop
push
sbb
in
push
inc
out
fcompl
loop
mov
frstor
cmpl
mov
adc
mov
jo
cld
ljmp
paddusw
ffree
xor
sub
pushf
mov
cltd
push
xor
xchg
test
insl
loope
push
testl
xlat
pop
cwtl
push
sub
outsb
pop
or
lock
mov
cmp
int
add
sub
pop
sub
sub
jmp
and
and
mov
sub
xchg
jnp
or
push
mov
fadds
sub
xor
out
mov
and
pop
pop
mov
fcmovnb
push
lea
adc
cmp
pop
int
cmp
jo
mov
jne
sbb
xchg
jbe
sub
dec
sbb
cmc
mov
mov
add
aam
sarb
xlat
pop
lods
scas
out
mov
stc
pushf
jge
cmpsl
and
xlat
int3
lea
je
inc
mov
pusha
mov
push
cmp
xor
outsl
push
dec
and
xchg
xchg
dec
push
pop
mov
xor
sub
cld
add
mov
sub
fs
stos
push
xor
pop
dec
dec
scas
dec
pop
cltd
popf
mov
push
adc
mov
mov
addr16
and
xchg
hlt
push
fldl
mov
sbb
lret
adc
xlat
mov
arpl
orl
cmpsb
dec
pop
dec
das
das
test
mov
jecxz
lods
scas
mov
out
mov
and
xor
iret
sub
xchg
cmpsb
xor
aam
sub
mov
scas
aad
or
inc
inc
cmp
add
mov
stc
sar
jns
iret
stos
mov
and
fdiv
xchg
es
imulb
xchg
enter
jl
repz
sbb
repnz
popf
dec
push
lods
gs
pushf
mov
mov
cmp
jp
sub
rclb
into
mov
pop
push
or
into
inc
jmp
xchg
adc
jmp
in
imul
andb
js
mov
popf
fildll
and
lods
mov
data16
test
jb
push
lret
push
mov
dec
into
push
mov
pop
daa
cs
es
mov
lret
add
push
jle
incb
mov
dec
dec
jle
imul
sbb
leave
mov
add
hlt
addr16
jge
fwait
inc
shlb
sbb
enter
push
xor
movsl
add
or
inc
and
rcll
aas
mov
dec
ret
lcall
ja
bound
mov
pushf
mov
jp
ljmp
mov
scas
lcall
push
sub
mov
or
mov
fwait
pop
sub
loop
aad
test
int3
push
mov
ja
sub
jns
or
das
inc
xor
mov
mov
xor
mov
sbb
push
push
out
xor
jnp
movsl
dec
mov
inc
lea
lret
outsb
pop
shl
enter
iret
xor
ds
jno
xor
push
out
mov
push
xor
outsl
mov
ja
pop
push
fbld
pop
daa
aas
lods
inc
inc
cmp
das
lods
inc
cmp
stos
sbb
push
add
mov
popa
ds
lret
pop
mov
jo
or
ss
jae
jp
xor
fs
jg
mov
push
sub
imul
push
push
mov
scas
add
loopne
dec
mov
mov
rep
push
xor
xchg
xchg
dec
call
add
loop
sub
fnstenv
dec
movsb
xchg
or
sbb
lcall
in
xchg
pop
sti
and
push
xlat
sub
das
cmpsl
mov
lea
imul
and
adc
dec
enter
xor
clc
push
inc
out
push
sub
sub
push
lods
popa
inc
inc
lea
cltd
dec
iret
mov
sub
push
nop
mov
mov
adc
lcall
sahf
in
leave
mov
mov
sub
sbb
jb
cmpsl
sbb
add
dec
add
add
scas
jo
fs
mov
sbb
repnz
lcall
ja
xor
loopne
cmp
mov
adc
sub
hlt
push
pop
in
mov
mov
imul
enter
mov
repnz
in
mov
xor
mov
int3
stos
mov
insb
dec
aaa
outsl
in
and
inc
lret
or
shrb
pop
sub
push
out
ja
daa
sbb
aas
daa
and
jg
popa
dec
lea
push
adc
in
test
dec
mov
mov
or
test
jo
pop
imul
pop
add
sahf
sub
mov
ja
dec
inc
insl
push
das
xor
push
push
nop
pop
std
mov
sbb
push
inc
mov
ror
dec
nop
imul
ja
mov
repnz
fdecstp
inc
fldt
ss
out
cmp
out
sub
popf
cmpl
push
mov
cmpsb
rcrl
xor
cmpsb
push
inc
push
mov
popf
iret
adc
into
xlat
ret
ljmp
cmp
pop
jnp
or
in
and
add
xchg
roll
aam
adc
out
add
or
mov
mov
mov
or
stc
sbb
add
xchg
or
pop
lahf
inc
mov
push
mov
sub
outsl
arpl
mov
or
push
adc
addr16
sub
push
mov
and
outsb
lds
inc
xor
addl
push
pop
aad
loopne
std
int
push
mov
or
pusha
and
or
repz
xor
and
xchg
pop
pop
push
aam
in
pop
pop
inc
negb
or
xor
stc
jb
pop
xchg
int
imul
push
or
mov
mov
jecxz
fcomps
dec
sbb
jge
out
hlt
pop
inc
xor
shrb
or
pop
jnp
xor
fldt
mov
dec
leave
ret
in
rcr
out
pop
mov
inc
mov
lahf
add
icebp
repnz
xchg
cli
push
add
push
adc
xchg
sub
test
mov
sub
push
dec
mov
popf
add
pop
cld
sbb
or
shlb
in
lock
loope
lret
ss
ret
shl
lea
mov
gs
jae
pushf
push
fldt
cld
jnp
jae
loope
cmp
jb
xchg
cmp
mov
adc
mov
outsl
scas
pop
sti
das
repz
inc
repz
push
movsl
movsb
adc
xor
call
repnz
and
jmp
mov
or
mov
rorl
call
sbb
and
mov
and
in
and
cltd
repnz
cmp
test
xorl
test
lods
push
mov
adc
popa
push
ficoml
pxor
outsb
into
inc
jo
mov
pop
das
push
aas
or
push
pop
rol
xchg
cmp
jo
push
das
mov
jnp
push
mov
lods
aad
mov
or
jg
pop
cmc
add
pop
std
cmpsl
push
fcmovne
popf
cmp
mov
in
sub
inc
xchg
js
mov
pop
insb
outsb
pop
data16
testl
in
push
inc
in
fwait
pushl
jge
fs
dec
daa
movsb
mov
pop
out
push
jbe
push
jnp
loop
outsb
inc
pop
cs
mov
mov
pop
dec
cli
jmp
popf
imul
mov
mov
or
cmpl
push
shlb
lret
call
add
push
out
push
arpl
fnstsw
lcall
push
out
adc
faddp
dec
mov
adc
dec
push
push
inc
stos
mov
insb
jbe
sub
vdivss
pop
dec
mov
sbb
adc
mov
test
aaa
subb
std
cmp
push
out
lods
jns
lret
pop
cmc
jne
inc
push
lock
lret
push
rcrl
cmovae
test
arpl
rolb
xchg
xlat
push
insl
ja
mov
dec
push
inc
push
test
in
repnz
rolb
std
imul
lods
and
pop
lret
inc
sub
into
sahf
xor
outsl
imul
in
push
fildl
ss
push
sbb
lret
cmp
in
pop
adc
sbb
and
das
cmc
es
int3
jns
nop
icebp
daa
pushf
das
cmc
fsubl
mov
clc
sub
add
cmp
addl
inc
and
into
in
jno
mov
cs
jae
mov
cmp
jns
push
stos
rolb
jbe
int3
lods
xchg
add
mov
lret
pop
jae
pushf
and
aam
dec
outsb
jae
pop
or
or
mov
call
aaa
jno
push
pop
aas
dec
int3
xor
rcrb
jmp
pop
aam
in
push
xlat
loope
push
lret
aas
and
aam
nop
dec
les
ret
rorl
lds
add
pop
xchg
or
movsl
and
push
inc
sti
xor
test
mov
lcall
jmp
in
cmpsl
cmp
fcmovnu
mov
inc
mov
xchg
fdivrs
mov
xchg
cmp
adc
neg
repz
dec
inc
negb
sbb
adc
lock
lret
add
jae
repnz
dec
adc
rolb
xchg
mov
roll
xor
xor
jp
inc
dec
mov
je
mov
rep
out
test
inc
idivb
nop
jb
ret
push
jbe
xor
cmpsb
push
push
push
mov
pushf
mov
in
inc
sub
xchg
jne
and
imul
cli
loope
sahf
cltd
bound
movsl
enter
in
sub
cmc
or
xchg
add
adc
das
ja
push
hlt
mov
imul
fwait
loop
mov
imul
mov
jns
cmp
jecxz
or
aas
fsubrs
fdiv
gs
sub
mov
fnstenv
adc
js
gs
push
or
and
sub
insl
pop
hlt
or
std
dec
dec
cmp
xor
imul
ljmp
pop
add
addl
adc
xor
test
cmp
je
inc
dec
movsb
mov
jle
jge
adc
mov
mov
stos
push
out
adc
stc
popa
cmp
int3
outsb
int
in
xor
pop
movsb
loope
and
jb
std
xchg
shrb
sbb
test
mov
sbb
or
icebp
imul
in
stos
xchg
add
fwait
pop
cltd
xor
and
jge
out
cmc
push
xchg
dec
push
mov
enter
outsb
push
xchg
or
fs
mov
cmc
jl
push
or
rclb
inc
and
add
lods
fnstsw
and
pop
mov
and
dec
push
enter
inc
mov
hlt
sbb
bound
pop
dec
pop
cmpsl
push
sbb
pop
lahf
dec
and
xchg
aad
cmp
mov
mov
lret
insb
andb
mov
push
pop
sub
cltd
fsubs
inc
dec
or
mov
loop
bound
or
sbb
rolb
leave
enter
jns
sub
sbb
movsl
cmpsl
jecxz
shll
scas
adc
adc
xor
int
sbb
adc
clc
xor
fs
sub
cmpsl
mov
pusha
inc
xchg
pop
dec
xchg
jns
imul
mov
ret
mov
ficoms
and
les
int3
mov
mov
cmc
popf
mov
mov
loopne
cmp
mov
mov
stc
sub
cmpsl
ljmp
lods
and
es
xchg
or
mov
in
pop
jp
pop
jae
push
in
mov
les
ret
mov
mov
cmp
jnp
pop
mov
cli
aas
hlt
daa
pop
clc
xchg
test
or
test
repnz
lods
and
push
pusha
jecxz
or
add
jns
pop
or
test
mov
or
daa
mov
cld
arpl
sub
loop
push
mov
xchg
mov
adc
sarb
aaa
addr16
sbb
roll
or
rcr
lods
inc
rclb
pop
cwtl
mov
repz
popf
lods
sub
movsb
scas
or
xchg
bound
rcrb
adc
mov
loop
sarb
loope
and
pop
repnz
rolb
or
jae
cltd
dec
add
stc
inc
or
das
jecxz
cmp
xchg
jmp
lea
cmpsb
outsb
mov
nop
or
and
pop
cmpsl
insb
xlat
dec
xor
xor
xchg
pop
mov
push
xor
jnp
mov
psubusw
popf
mov
jl
mov
lock
inc
add
scas
xor
lds
sub
aaa
add
bound
mov
std
sbb
arpl
jp
push
xor
dec
lods
ret
daa
push
aad
mov
arpl
xchg
mov
fstp
and
dec
addl
sub
jbe
cmp
enter
cmp
sub
xchg
sbbl
push
jmp
mov
into
cli
nop
std
jnp
lret
adc
adc
mov
mov
xchg
imull
ret
lret
lock
in
mov
push
mov
adc
jbe
xchg
idiv
xchg
hlt
movsb
and
sarb
adc
fmul
cld
test
leave
ja
push
mov
loope
cli
rorl
test
cmp
out
arpl
mov
aaa
mov
cmp
out
in
mov
jge
mov
cli
cltd
das
test
ss
jl
mov
idiv
cmp
sub
jl
jp
cmp
les
xor
icebp
sbb
and
jg
mov
pushf
mov
insl
pop
vminpd
cmp
daa
std
jns
cmp
add
arpl
pop
inc
ds
mov
test
jno
lods
mov
mov
and
mov
test
mov
lods
inc
aas
jmp
or
das
jg
or
dec
aam
mov
fistl
add
roll
jp
xchg
pop
mov
push
cmp
gs
test
and
sbb
dec
mov
push
mov
mov
ret
cltd
int
sbb
mov
jmp
adc
adc
bnd
jb
mov
cmpsb
stc
inc
cmp
xchg
and
mov
mov
and
popa
cmp
lea
inc
add
xor
cmp
xacquire
in
cmp
ss
dec
dec
mov
mov
mov
roll
add
adc
leave
inc
fs
stos
nop
jb
popa
rorb
rorl
cmp
mov
insb
lret
push
or
or
imul
xchg
mov
sub
lods
iret
enter
pusha
xchg
push
or
jbe
out
gs
adc
cmp
pop
mov
cli
xor
or
dec
or
lret
jg
mov
mov
push
dec
pop
dec
inc
test
xchg
and
and
adc
xchg
fwait
push
adc
std
call
mov
mov
int
sub
mov
int
lods
push
sub
jbe
negb
sbb
test
dec
int3
mov
out
pop
insl
push
and
aas
cmp
ds
outsb
in
into
jmpw
ljmp
bound
es
fsubl
sbb
jge
ljmp
jno
sub
mov
xor
fs
in
das
inc
xor
adc
rcrl
inc
and
mov
sbb
and
test
add
inc
loopne
out
xor
movsl
fstpt
push
add
add
sbb
add
test
shll
mov
test
mov
cmp
jbe
loopne
xchg
mov
in
pop
and
hlt
aas
mov
adc
or
push
daa
sbb
test
mov
fsubs
lret
ja
sub
outsl
dec
cmp
and
std
cmpsb
xor
test
std
mov
iret
sbb
mov
mov
dec
js
mov
scas
and
and
push
jb
add
mov
mov
test
jmp
add
push
das
lret
push
loope
loopne
pop
jno
jne
scas
fs
fcmove
test
push
push
jg
jp
das
add
orb
cmp
cmpsb
iret
mov
xchg
or
adc
pop
in
repnz
xchg
bound
sbb
mov
into
pop
mov
and
shl
cmc
ljmp
aad
enter
fnsave
into
nop
jb
rolb
mov
xchg
lret
mov
sub
movsl
xchg
xlat
sbb
sbb
cmpsl
enter
dec
add
sbb
pop
aad
loop
dec
sub
pop
push
out
pusha
cltd
push
imul
and
loop
sbb
cmc
fdivs
mov
cmpsl
inc
cmp
imul
sahf
outsl
mov
std
fsubrs
xchg
imul
js
inc
shll
pop
pop
xchg
daa
gs
add
and
xor
out
add
ret
jno
loope
inc
or
jge
test
subb
xchg
or
xchg
xchg
loop
andb
xchg
insb
mov
push
mov
mov
or
add
push
adc
gs
push
fisttps
inc
mov
jno
jecxz
mov
sub
jnp
mov
xlat
adc
xor
mov
fcoms
ret
mov
lret
jmp
subl
mov
lcall
mov
xor
add
mov
or
jns
in
push
je
stc
xchg
pop
and
stc
push
sti
and
mov
mov
sbb
insl
add
sub
and
sbb
jl
jg
jecxz
xchg
dec
mov
stc
pop
fs
xor
fsubp
mov
sbb
mov
cmp
adcl
cmp
adc
addb
call
add
ds
test
inc
inc
sbb
xor
daa
je
jg
rorb
add
inc
loopne
inc
in
or
push
ja
nop
lcall
push
or
xchg
in
cs
int
xchg
clc
cmpsb
fsts
jo
lcall
testb
push
sub
and
pop
add
jmp
adc
call
icebp
push
sti
xchg
jge,pn
in
stc
lods
sub
arpl
inc
pop
push
lret
pop
dec
in
popf
dec
pop
mov
fsts
rclb
insb
and
sbb
cltd
leave
sti
in
mov
push
xchg
mov
lods
cmc
cli
mov
xor
jne
mov
jle
lods
mov
stos
test
inc
mov
jge
jb
jno
mov
xchg
in
in
lea
and
and
scas
insb
into
mov
add
pushf
fadds
sbb
push
xor
das
loop
push
out
lret
call
shlb
popa
or
enter
out
movsl
push
mov
jnp
inc
push
adc
mov
lahf
les
pop
pushf
scas
mov
test
cmp
sahf
jmp
les
mov
out
aad
mul
adc
call
and
mov
add
test
lret
lods
adc
iret
orb
leave
enter
mov
hlt
inc
jmp
call
cli
push
lds
inc
pop
pop
rclb
bound
xchg
dec
popa
inc
addl
xchg
cmp
cmpsb
xor
cltd
xchg
aaa
cli
cmp
push
cmp
aam
fcmovne
inc
jns
mov
push
jnp
fnstsw
xlat
popl
push
imul
stos
lds
lds
lcall
lcall
cld
and
mov
jl
daa
sub
fcoml
into
outsb
sub
aaa
sbb
shrb
mov
pop
xchg
cs
pop
cmpsl
ss
test
lret
xchg
je
add
aas
cmp
repnz
loopne
mov
fldl
addr16
ret
loopne
mov
xor
add
hlt
jno
push
xor
ds
and
xor
mov
xchg
mov
adc
fldcw
pop
cld
sbb
xor
popf
push
jns
xchg
sbb
adc
popa
push
loopne
insl
xorb
mov
and
js
and
iret
lret
xchg
pop
sbbl
lret
daa
pop
mov
push
adc
pop
in
xor
mov
aas
jne
test
xor
stc
mov
jmp
push
data16
cs
jge
xchg
pop
aas
mov
fimuls
rcr
clc
call
shr
stc
xor
mov
ljmp
mov
pop
fs
cmp
addr16
shlb
rcl
mov
cmp
mov
dec
out
xchg
subb
xchg
or
imulb
in
gs
push
out
sbb
aam
jns
insb
fstpl
inc
push
out
nop
adc
cmp
mov
lods
jae
xorb
dec
jbe
movsb
mov
pop
and
mov
lods
into
aam
shrl
test
pop
aam
xor
add
sbb
push
push
adc
xlat
mov
mov
ror
sub
xchg
push
add
fbld
adc
inc
lock
lahf
mov
js
out
add
int3
enter
clc
mov
cmp
xor
in
ljmp
inc
adcb
in
out
js
xchg
je
fwait
lods
outsl
mov
and
dec
mov
mov
adc
rcrb
xor
imul
lahf
lds
cmp
inc
daa
scas
out
adc
mov
sbb
mov
lods
cs
dec
icebp
jl
pop
flds
sub
mov
data16
mov
ret
adc
outsb
jbe,pn
cli
sbb
pusha
jns
vxorps
mov
mov
jecxz
mov
movsl
mov
stos
jno
add
mov
mov
inc
cmp
incb
mov
adc
imul
inc
dec
clc
shr
mov
pop
add
es
pushf
imul
or
enter
in
pop
sbb
lock
pusha
mov
arpl
jno
sti
dec
adc
pop
test
mov
loopne
mov
sbb
mov
cmpsl
pushf
inc
stc
sbb
enter
add
jp
aam
jecxz
add
pushf
cmp
rcrb
loop
mov
push
test
adc
dec
jns
push
sbb
sub
pop
mov
outsl
gs
sub
fst
subl
sub
out
ja
push
out
mov
push
in
cld
aaa
mov
push
mov
mov
mov
imul
lahf
stos
jp
aam
stos
paddq
icebp
jl
adc
les
in
jg
adc
rclb
add
xchg
imul
and
or
sbb
mov
ror
push
iret
dec
push
movsb
xchg
iret
lret
nop
sbbl
mov
xchg
mov
jl
mov
punpcklwd
outsl
cs
lahf
cli
fisttpll
repnz
cmp
push
call
popa
scas
lcall
xor
aad
and
pop
pop
loopne
fldenv
sbb
dec
sahf
je
dec
enter
pop
push
loop
mov
cmpsb
popf
lds
leave
pop
or
cmc
ja
rorl
test
lds
jecxz
or
and
shlb
xlat
sub
inc
adc
jnp
or
sbb
and
jns
push
scas
mov
sub
adc
mov
sarb
popl
mov
adc
jnp
fldenv
scas
dec
pop
scas
fs
addl
sbb
cmp
jmp
mov
jne
jno
jb
popf
loopne
les
mov
push
jb
in
cmpsl
shlb
dec
sbb
xchg
cmc
sub
push
xor
lea
mov
inc
fldl2t
aaa
inc
out
aam
xor
ja
or
sahf
mov
mov
cmp
icebp
in
scas
popa
sub
sub
xchg
insl
pop
in
push
xor
pop
cmp
hlt
add
into
fildll
mov
movsb
ret
loopne
ss
add
call
sub
test
dec
popa
jl
ljmp
iret
sub
mov
adc
xor
cwtl
pop
push
out
pop
adc
cmp
stc
dec
pop
aad
xlat
ja
xor
cli
lret
out
xchg
xchg
xor
jae
in
pop
jne
xor
inc
pop
dec
test
dec
pcmpgtw
sbbb
outsl
and
dec
jle
mov
lahf
inc
xor
push
or
xchg
xchg
mov
fsubl
jmp
or
std
pop
sub
dec
mov
fsts
xor
cltd
sbb
jmp
mov
inc
loop
fimull
mov
pop
xor
cltd
icebp
or
insb
jbe
cmp
mov
cmp
mov
adc
sbb
orl
pop
int
shl
cmp
mov
pusha
adc
cmp
push
dec
adc
xor
mov
or
add
incl
lock
xchg
cmp
pop
dec
jne
inc
sub
sub
jle
rcrb
pop
jmp
or
mov
adcl
adc
and
movsb
test
std
mov
lods
loop
push
aaa
es
sub
adc
call
fcmovnu
pop
ds
adc
subb
mov
out
xchg
xlat
pop
mov
daa
xchg
inc
dec
mov
xor
pusha
xchg
lea
mov
lds
cmpsb
sti
lods
in
adc
arpl
dec
inc
lds
xor
pop
negb
sbb
fwait
and
outsl
adc
in
ljmp
fists
andb
dec
repnz
ljmp
xchg
mov
mov
sbb
inc
dec
ljmp
mov
cmpl
mov
out
xchg
push
leave
daa
fists
pop
jbe
and
stc
mov
mov
sbb
dec
mov
sub
fdivrs
out
mov
movsb
sbb
fisubrs
pop
bound
andb
ljmp
ret
or
mov
outsb
shrb
sti
mov
pushf
mov
lret
lds
popa
jmp
and
pop
imulb
cmp
pop
jnp
lret
jle
and
imul
in
and
arpl
cld
lods
and
iret
mov
in
daa
ja
insb
jge
popa
mov
or
ljmp
or
data16
popf
adc
sbb
xchg
ret
cmp
mulb
fcompl
sbb
arpl
jmp
cmp
lahf
insl
cli
clc
cli
test
mov
jl
mov
xchg
push
add
inc
rcrl
mov
mov
rcrb
hlt
mov
xor
cmp
inc
jecxz
das
xchg
adc
push
std
mov
mov
rcrb
push
sbb
push
or
in
or
les
ljmp
fists
stc
aad
mov
ljmp
mov
xchg
stos
inc
xchg
xchg
fcomi
icebp
cmpsl
add
fildll
cmp
shrl
test
mov
adc
outsl
inc
inc
pop
inc
mov
fimull
loope
dec
cltd
push
push
mov
mov
imul
mov
push
movsb
jbe
jle
xor
arpl
and
push
add
daa
adc
jno
stos
pushf
inc
jb
and
mov
jns
inc
stos
ljmp
jns
or
or
push
filds
jmp
push
in
loop
mov
cli
or
xchg
mov
jne
inc
ret
scas
clc
push
cmp
pop
cmp
imul
adc
fcomp
xchg
gs
and
popf
cld
jno
mov
xchg
std
inc
pop
mov
inc
fisttps
jne
in
lds
imul
inc
inc
inc
dec
xor
dec
lea
and
adc
fldl
sub
sub
loopne
mov
and
filds
bound
lock
aam
test
divb
rcl
mov
pop
jmp
dec
lock
and
push
inc
test
aas
cmp
addr16
jl
jnp
cmp
lods
sahf
dec
dec
mov
fcoms
sub
or
push
hlt
xchg
jge
sti
std
or
push
push
stos
rclb
mov
sub
mov
fldt
insb
mov
mov
or
mov
cmc
ds
sbb
shl
jp
mov
lea
adcb
jl
loopne
push
xchg
out
jl
mov
inc
cmpsl
jmp
add
in
sbb
cld
pop
outsl
add
mov
and
shll
pop
inc
cmp
filds
int3
push
dec
xchg
popf
enter
lds
ret
sub
ror
and
push
imul
gs
pop
std
out
in
cmp
leave
mov
jmp
gs
jo
xchg
jmp
sub
dec
arpl
mov
shlb
mov
ljmp
adc
add
out
mov
out
loopne
cs
in
popa
adc
arpl
repnz
mov
push
jp
das
das
call
jbe
test
mov
add
pushf
mov
and
inc
out
mov
jle
pop
lods
add
xor
mov
cmp
fdivrs
imul
ficoms
xchg
mov
cmpsb
and
pop
xchg
jbe
or
xchg
stos
inc
mov
dec
inc
sbb
mov
push
push
lret
inc
pop
stos
mov
mov
mov
mov
inc
mov
and
roll
pushf
push
dec
push
std
mov
punpcklwd
pop
jb
lret
pop
mov
mov
xchg
cmp
arpl
clc
repnz
ret
bound
test
leave
aaa
incl
jle
jmp
pop
dec
mov
out
hlt
pop
das
dec
xchg
lods
lock
push
mov
les
push
out
aam
imulb
sahf
jns
ja
adcl
ret
insb
or
xchg
popf
sbb
stos
popa
xchg
mov
mov
push
mov
lods
mov
loope
movsb
lret
mov
dec
test
fucomip
cmpsl
setns
sbb
mov
sub
lods
jns
in
fcomip
push
xchg
and
cld
xor
lcall
das
aas
inc
inc
xchg
pop
cwtl
daa
jnp
jbe
mov
cmp
mov
mov
icebp
pop
dec
jge
pop
sbb
dec
add
xchg
push
jg
incl
imul
ret
mov
xchg
les
pop
fstps
gs
cmp
pop
das
sarl
inc
adc
in
cmp
cmp
jne
das
cli
mov
sub
sbb
inc
jmp
aaa
jp
mov
add
jge
cli
aaa
loop
mov
cmp
dec
aam
loop
sub
mov
lea
push
mov
sub
pop
jmp
adc
xchg
mov
ficoml
jb
mov
mov
cmp
in
shlb
imul
ret
cmp
and
cmpsl
clc
dec
mull
adc
lock
push
int
scas
inc
shr
xchg
or
xor
mov
jle
mov
sbb
add
mov
int3
mov
shll
sarb
fnstenv
push
aam
aas
lret
sub
adc
push
xor
and
bound
outsb
mov
xor
les
cmc
leave
or
imul
dec
mov
and
and
inc
shlb
xor
dec
jg
inc
test
insl
mov
jne
mov
xchg
mov
pop
mov
ret
loop
pop
push
movsl
mov
das
mov
aas
test
jecxz
popf
fstl
dec
xchg
mov
loop
xor
jge
sbb
and
mov
scas
insl
in
add
xchg
add
call
fstl
push
cmp
sarb
mov
fcomp
pop
adc
sub
mov
aad
sub
dec
movsl
jmp
jnp
and
imul
shl
loop
adc
std
or
shll
cwtl
adcb
xor
xchg
decl
mov
adcl
xor
mov
dec
jmp
sti
pop
cs
pop
add
jp
mov
adc
xlat
lahf
add
aam
push
rcll
bound
fwait
jne
jge
lods
jae
add
sbb
mov
mov
add
rcrb
int3
mov
lret
lea
mov
call
lods
ja
cmpl
shll
adc
mov
or
movsb
fisttpll
jns
outsb
xchg
xorl
jp
test
xchg
das
jbe
das
stc
xor
fldcw
mov
fs
int3
fcoml
mov
adc
cmp
mov
push
pushf
in
inc
cli
js
popf
xlat
call
and
sbb
xchg
pop
mov
gs
push
pop
sub
mov
and
sbb
das
inc
jno
mov
aaa
repz
popa
or
and
in
mov
push
dec
rcll
mov
dec
xchg
cmp
push
mov
or
in
dec
add
cwtl
sete
loopne
adc
and
pop
xorl
cwtl
in
mov
sbb
scas
fdiv
ds
lret
ds
cli
jb
xchg
aam
push
test
fimuls
fstpl
cmp
rcr
mov
adc
jno
xor
add
lods
fldenv
push
push
dec
lahf
push
enter
cmpsl
jae
xchg
test
aam
mov
mov
stc
aad
xchg
inc
add
popa
int3
jmp
arpl
dec
pop
dec
push
mov
out
pushf
popf
xlat
lret
mov
out
sbb
adc
jae
nop
int3
pop
test
lret
cmp
mov
das
ret
in
nop
or
les
lods
loope
sbb
and
add
xchg
outsl
dec
push
add
addl
and
push
popa
sbb
ficoms
test
sbbl
rol
outsb
jl
call
loope
push
mov
clc
xchg
lahf
cli
mov
stc
out
mov
sub
xorl
push
dec
inc
int
loopne
test
subl
movsl
negl
push
mov
dec
aad
imull
xchg
jmp
sub
xchg
not
pusha
sbb
nop
aam
sbb
push
sahf
lret
push
lea
cli
inc
xchg
sbb
xchg
in
jnp
mov
add
aaa
push
inc
mov
sbb
cli
mov
xchg
mov
jae
scas
es
test
int3
sti
adc
cmp
add
mov
into
inc
rcll
xor
adc
out
pop
mov
mov
rolb
stos
sbbb
sub
and
mov
js
push
lock
mov
mov
mov
loope
lds
push
xchg
push
fistl
cmc
dec
ret
fwait
dec
sub
adc
and
sub
leave
inc
std
repnz
pop
jp
cltd
fsubl
inc
bound
fildl
xor
jbe
ret
dec
adc
lret
jae
jnp
and
jl
bnd
fisttpll
mov
sbb
xchg
fcomp
loopne
xchg
mov
dec
or
push
xor
rorb
inc
xchg
add
scas
inc
and
adc
inc
pop
lret
adcb
xchg
pop
aam
mov
push
lret
hlt
mov
pop
jno
es
pop
dec
lcall
inc
inc
push
mov
rcrb
or
mov
adc
sub
lahf
mov
xor
push
lds
stos
es
rcrl
shll
lret
mov
ret
movsb
fs
mov
mov
movsl
rclb
cltd
xchg
jl
sub
mov
das
pop
test
leave
push
bnd
leave
mov
shr
mov
jo
jne
leave
push
dec
pop
mov
jns
les
mov
clc
sbb
repnz
sbb
push
add
xlat
adc
sub
cmp
xchg
mov
movsl
in
mov
xchg
xchg
mov
push
sub
pop
imul
or
cmc
pop
push
push
mov
mov
xorb
out
mov
fdivr
fstpl
pop
push
mov
loop
mov
dec
std
negl
adc
in
aam
or
ss
adc
orl
xor
repnz
fdivrs
rclb
negl
pop
inc
pushf
pop
mov
filds
pop
cmp
loopne
cld
dec
mov
daa
adc
std
push
dec
add
mov
repz
icebp
fiadds
xchg
lods
mov
xchg
leave
and
int
pop
ret
add
and
cmp
cs
inc
pop
xchg
ficoms
dec
fs
jbe
mov
xchg
mov
int3
or
mov
cmp
adc
or
adc
add
fs
cmc
cmp
jnp
hlt
dec
lock
ss
fsubrl
insl
test
ljmp
push
lods
ja
data16
adc
mov
dec
adc
std
ljmp
and
xchg
mov
mov
xchg
push
fisubrl
sub
fcmovnbe
ja
imul
negl
xor
mov
or
test
lock
sub
mov
push
mov
push
adc
mov
pop
ret
pop
adc
out
getsec
mov
sub
cmp
das
call
fidivs
add
xchg
and
fwait
adc
aad
loope
pop
lods
dec
nop
nop
xor
inc
je
ror
xchg
enter
adc
jns
adc
fninit
inc
idiv
loope
pop
test
lret
outsb
in
push
rclb
neg
std
iret
aam
leave
sar
inc
out
ret
movsb
into
ret
ret
mov
mov
jecxz
fstpt
jbe
std
fldenv
xor
inc
out
aaa
lods
js
mov
pop
push
cmp
adc
icebp
sbb
ljmp
lds
sub
sbb
and
repz
ja
test
pop
dec
pusha
fisubrl
push
adc
cwtl
mov
nop
fldl2e
int3
sbb
mov
add
movsb
sub
scas
mov
lods
aam
sti
movsb
mov
xor
push
add
movd
lret
jg
pop
jmp
mov
inc
jo
jp
sbbb
push
push
out
add
fs
sarl
push
aad
notl
out
mov
aam
pop
cmpsb
add
add
mov
cmp
arpl
enter
fcmove
test
add
and
cmp
jp
push
ss
dec
fwait
arpl
push
movsl
jbe
mov
addl
leave
stos
inc
pop
stc
fiaddl
dec
es
out
je
pusha
orl
mov
sarb
or
test
insb
push
addb
out
push
nop
fwait
sbb
mov
cmp
insl
xchg
cmc
cmp
leave
mov
mov
inc
mov
and
and
fbld
cmp
repz
shrb
cmc
clc
aaa
cli
ja
sbb
mov
sub
or
shll
mov
aad
shl
xchg
loopne
jae
loopne
hlt
cmp
ds
xor
sbb
adc
sub
stos
push
jl
into
push
je
xchg
sub
dec
xlat
in
insl
pop
mov
mov
daa
mov
cmc
fwait
cwtl
in
sbb
lret
mov
fstl
mov
jae
repz
inc
and
in
pushw
lods
fcoms
mov
pusha
push
push
cli
arpl
or
inc
daa
std
nop
pop
mov
dec
mov
in
and
ja
cmpl
jnp
jae
test
and
cmp
cwtl
jo
out
hlt
mov
sbb
sbb
mov
xchg
std
add
daa
cld
xorb
sub
push
mov
lret
insb
adc
jnp
dec
cmp
jp
sbb
insl
sub
aas
mov
lret
mov
cmp
repnz
fstpl
ret
leave
dec
cld
call
ja
and
jl
xor
loope
nop
jecxz
xchg
inc
stos
imul
mov
in
dec
lds
repnz
xchg
pop
cwtl
xor
mov
imulb
arpl
addb
dec
push
outsl
push
loopne
cmp
ds
sub
lds
imul
out
bound
xor
cmpsb
add
adcb
std
jno
jle
test
add
jnp
push
push
mov
dec
inc
inc
adc
int
or
or
idivb
xchg
add
pop
imul
js
popf
js
loope
lea
cmpsb
mov
fldcw
pop
adc
push
and
lahf
adcl
std
jp
push
pop
cmpsl
in
pusha
cmp
pop
shl
subb
nop
lahf
xor
daa
mov
pop
adc
add
adc
rclb
dec
sbb
mov
mov
rclb
pop
lock
pop
inc
ret
sub
je
push
inc
or
clc
push
xlat
dec
jns
dec
repz
fmul
pop
insl
cld
pop
xorl
bound
movsl
sub
je
into
test
fidivrl
or
and
sbb
mov
dec
ret
leave
rorb
lods
xchg
sub
sub
dec
pop
or
or
pop
outsb
insl
lahf
push
lret
cmp
ret
adc
sub
dec
mov
outsl
cmc
cmp
cli
or
fsubs
popf
das
inc
ss
mulb
adc
mov
lods
xchg
rcl
pop
fstl
pop
dec
add
popf
loope
sbb
jmp
mov
mov
sub
jg
push
dec
gs
cwtl
mov
cmp
sti
pop
stc
jle
and
mov
and
mov
sub
inc
dec
ljmp
xor
and
dec
mov
ret
pop
in
sbb
mull
orb
cmp
popa
std
lods
lods
cs
cmp
jne
push
je
outsb
lods
and
orl
pop
dec
outsl
cmpsl
cmp
mov
int3
imul
iret
sub
leave
lret
push
dec
pusha
pop
cmp
cmp
imull
imul
cmpsl
test
jle
jge
sub
stc
inc
push
popf
mov
mov
ret
stos
mov
inc
gs
outsl
std
mov
or
mov
sarb
inc
das
adc
mov
rorl
push
scas
lock
out
mov
sub
mov
pop
mov
inc
cwtl
ret
mov
xor
hlt
mov
add
sarb
nop
pop
jo
into
sub
or
nop
mov
shlb
fmuls
xchg
pop
hlt
mov
movsl
dec
insl
mov
fadds
loop
xchg
dec
ss
lods
jbe
pop
rorb
imul
aas
inc
out
inc
mov
out
cmp
test
bound
pop
adc
pop
lret
xchg
sbb
cmpb
in
testl
enter
int
lret
jns
cmpsl
lea
mov
dec
cmp
sbb
cld
fidivrs
outsb
mov
mov
cmpsl
rorl
cmp
test
dec
mov
repz
pop
add
rclb
popa
fnstsw
in
mov
shrl
push
add
sub
arpl
lods
xchg
xchg
icebp
imul
xor
imul
rcrl
fcmovb
insl
outsl
js
data16
shl
cmc
loop
mov
dec
rolb
sbb
in
inc
imul
push
in
in
lret
in
pop
aad
dec
push
inc
xorl
pop
shll
nop
push
aas
dec
rolb
mov
xchg
mov
hlt
adcb
int3
push
sti
or
test
std
sbb
out
cmpsb
ljmp
sti
cmp
mov
adc
call
std
lcall
sti
pushf
enter
adc
lcall
movl
shlb
jg,pn
inc
mov
icebp
bnd
xor
lods
adc
dec
fsubl
cmp
or
movsl
enter
in
ljmp
and
xor
fisubl
loope
movsb
jns
pop
add
and
call
xchg
push
addl
int
ss
cmpsl
adc
sub
cwtl
push
mull
sub
insb
sub
test
dec
mov
in
sub
jne
jo
mov
and
fsubr
inc
sub
testb
sarl
mov
out
pop
jb
mov
mov
adc
jmp
sbb
sbb
mov
sub
xchg
arpl
imul
es
push
dec
ja
push
and
and
test
jmp
jp
stos
jne
push
pop
jl
mov
adc
call
cmp
nop
mov
cmp
mov
in
push
imull
mov
mov
mov
imul
dec
cmp
mov
mov
or
inc
pop
lods
add
mov
push
aad
into
stos
fcomp
rcrb
lods
mov
sahf
xchg
fisubs
jns
and
mov
movsl
mov
jnp
repz
in
mov
outsb
xchg
fbld
mov
cmp
xor
aad
pop
cmpsl
push
push
sbb
jg
pop
and
call
and
sub
cltd
fsubrs
inc
movsl
fwait
push
pop
mov
cmp
xchg
mov
lds
xor
mov
stos
xchg
mov
or
pop
cmp
std
push
sub
in
xor
popa
imul
adc
or
or
pop
and
mov
test
sbbb
xchg
xor
pop
xor
jnp
out
jno
jl
xchg
cmpsl
inc
bound
popf
cld
xchg
adc
call
pop
xchg
push
popf
test
xor
mov
aam
popf
pop
test
mov
mov
dec
pushl
addl
test
stc
lea
je
loope
jnp
mov
rcl
pop
rclb
hlt
cmpsb
or
lea
push
mov
inc
inc
sub
ror
or
arpl
fstl
mov
movsb
sti
mov
mov
loop
repz
mov
mov
and
push
lods
and
fisttpll
push
inc
int
mov
or
cmc
mov
in
jg
pop
and
xchg
scas
aam
rcrb
scas
add
out
inc
jb
xchg
fsubs
outsl
fisubs
repnz
sbb
xor
roll
aaa
aas
scas
lock
or
shll
out
aam
or
xor
fs
imull
xor
adc
sbbb
and
and
lahf
sahf
dec
lret
sbb
mov
pop
andl
jp
cmc
lcall
inc
insb
out
cltd
jle
xor
fmuls
orb
nop
inc
mov
mov
scas
pop
out
sub
push
bswap
out
cmp
insl
jg
imul
or
std
cmc
or
stc
mov
adc
repnz
mov
lea
outsb
lret
xchg
popl
fadds
ljmp
dec
test
jbe
pop
jmp
xchg
scas
push
fiaddl
lods
faddp
mov
xchg
dec
je
mov
pop
lods
ret
lock
inc
pop
mov
jnp
sub
sub
sub
or
jge
in
mov
movsl
dec
xor
jge
movsb
push
jae
mov
jne
loope
mov
push
fxch
decb
aaa
jg
cmpsl
fidivrs
pop
sbb
int3
add
test
aas
bound
nop
lods
es
test
jp
pop
push
test
mov
int
loopne
mov
int
stos
sub
mov
out
fs
push
push
ds
sbb
pop
insb
dec
push
or
mov
adcl
icebp
sbb
xor
insb
bound
out
pop
insb
sbb
pushf
sbb
cmp
cld
xchg
jno
mov
jnp
nop
xchg
mov
jmp
pushf
or
push
sub
fcmovb
ja
lcall
push
add
push
pop
sub
pop
fistpll
adc
xchg
cmpl
ss
mov
sti
cmc
mov
jg
pop
mov
sti
std
push
fistpl
jne
add
xor
dec
sub
sub
xchg
add
testb
mov
push
in
rclb
pusha
adc
xor
and
jno
dec
ret
inc
jecxz
push
mov
cwtl
mov
das
scas
cli
rcr
sbb
mov
in
pop
std
cltd
cli
insb
adc
in
dec
jg
out
scas
cmp
fsub
cmp
sub
push
push
std
lock
das
jle
dec
hlt
nop
mov
fstps
loopne
and
repz
sahf
xchg
aad
in
and
fwait
dec
daa
test
push
dec
xchg
and
ds
mov
push
adc
insb
outsb
sbb
cmpsl
jae
cld
push
xchg
iret
lds
mov
xor
cmpsb
clc
xchg
mov
popf
xorl
pop
je
lods
cmp
popf
jnp
mov
and
cli
cld
pop
mov
stc
mov
or
scas
xchg
icebp
xor
cmp
insl
je
out
aad
insl
cmpl
jl
mov
rorl
lea
loop,pn
mov
mov
movsl
and
in
sbb
or
xor
xor
pop
inc
push
dec
jge
mov
xor
testb
sbb
imul
xor
aad
xor
and
fdivrl
xor
xchg
aam
clc
imul
das
cmp
or
push
in
or
lods
lods
push
inc
jp
rcrb
xchg
mov
int3
cmpsl
fmuls
push
aam
popa
mov
out
mov
sahf
push
jno
dec
pusha
ss
int
cmpsb
add
fdivl
cmpsb
sub
out
std
xchg
or
mov
sbb
lea
mov
leave
arpl
pop
xor
idiv
addr16
cmp
or
or
xor
add
out
mov
jmp
xor
mov
addr16
ljmp
pop
jb
cltd
xorb
lea
mov
jle,pt
lock
in
mov
test
inc
cmp
fs
pop
push
jp
les
or
je
adc
les
ret
scas
push
mov
mov
xchg
stc
mov
leave
into
into
xor
sub
pusha
aad
imul
sbbl
std
orb
dec
jmp
test
rcr
sahf
fistpll
mov
pop
adc
cmpsb
jns
xchg
mov
out
or
sub
addr16
rorb
adcb
out
xchg
out
mov
loope
pusha
imul
aaa
pop
loope
sub
in
fucomip
movl
mov
sub
lcall
sbb
or
push
mov
mov
add
and
mov
rorl
mov
scas
xor
in
mov
mov
test
notb
fcomi
sbb
xchg
out
jne
mov
lods
jo
in
xchg
or
jbe
mov
jnp
add
loopne
inc
pop
mov
xlat
cmp
outsb
sub
fimull
aas
and
pop
cmpsb
mov
mov
les
test
arpl
int
xchg
loop
push
jle
jle
pop
pop
ret
push
mov
add
mov
inc
and
jge
jmp
inc
das
mov
xor
iret
out
adc
inc
dec
push
adc
sbb
push
movsl
flds
repnz
adc
mov
aaa
and
imul
inc
push
adcb
mov
inc
negl
sub
cmp
cmp
pop
and
test
pop
je
clc
inc
es
sbb
pop
and
mov
test
adc
mov
fwait
push
sub
sbb
pop
and
xchg
mov
mov
jmp
mov
div
imul
inc
mov
cmpsb
inc
sub
negb
or
mov
in
cmp
mov
jbe
ja
mov
in
mov
sub
xchg
in
in
lods
dec
fwait
xorw
test
out
and
cmc
sahf
lods
fcompl
fstps
sub
fistpll
loopne
mov
cld
xchg
cmp
jp
xor
inc
pushl
mov
lahf
subl
addl
pushf
mov
xor
inc
cmp
and
mov
mov
adc
add
push
data16
push
scas
dec
shl
jns
out
imul
push
pop
sbb
sub
stos
outsl
push
add
sbb
aad
pop
dec
dec
arpl
int
movsl
js
test
std
sub
iret
jmp
mov
xor
pushf
and
and
loop
or
cmc
push
xchg
cmp
pop
dec
dec
int
rcll
shll
mov
inc
mov
push
ljmp
jb
cmc
shrl
pop
sahf
lock
outsb
sub
in
roll
push
das
or
stos
addr16
pop
dec
not
enter
sbb
pop
leave
and
adc
ljmp
shl
clc
fisttpll
fstpl
add
mov
lods
add
dec
jmp
xchg
cmp
call
mov
outsl
mov
in
xchg
dec
not
xchg
pusha
cmp
iret
xor
cmp
sub
mov
xchg
mov
in
push
mov
sbb
lods
cli
inc
cld
shlb
addl
mov
cmp
xchg
dec
insl
aam
aam
mov
test
and
in
ds
dec
pop
clc
inc
cld
aam
icebp
aam
les
mov
adc
nop
push
lock
inc
push
insb
or
jecxz
pop
pop
sbb
sub
in
aaa
ds
rcrb
adc
push
rorb
in
andb
mov
mov
scas
pop
scas
repnz
popa
or
xchg
mov
sub
loop
ds
push
xchg
cs
dec
push
push
adc
es
ss
fnsave
jle
mov
imul
xor
pop
xor
cmpsb
pop
lock
loope
popa
push
mov
jge
ljmp
addb
push
xlat
test
adc
xchg
add
lock
ja
mov
insb
insb
and
mov
xor
push
aad
mov
clc
fld
stc
dec
pushf
sarb
das
jl
xchg
cwtl
mov
fisttpll
notl
test
rolb
jno
push
iret
sub
lods
sarl
lds
daa
inc
cmpsl
adc
out
roll
adc
sti
pop
int3
arpl
fldt
mov
push
or
test
int
in
out
scas
fcomip
dec
cmp
loop
or
mov
sbbl
sbb
mov
push
popf
aaa
aaa
pushf
cmpsb
pop
cmpsl
pop
cmp
test
inc
popa
mov
addb
mov
inc
lds
mov
aas
mov
sub
push
std
sbb
mov
sub
in
shll
data16
lods
xchg
inc
jne
fdivs
mov
into
hlt
mov
popf
movsl
adc
xorl
js
mov
aam
outsl
and
clc
dec
es
fisubs
jae
add
ret
xchg
insl
ds
inc
mov
cmp
cmpxchg
hlt
outsl
stos
adc
push
adc
pop
dec
testb
push
adc
and
sub
mov
or
push
sbb
cld
push
cmp
mov
test
ret
mov
mov
push
rclb
jp
adcb
out
aad
je
sbb
iret
pop
stc
jg
and
adc
fs
pop
or
out
or
sbb
cmpsl
mov
dec
shr
xchg
sub
xlat
jne
push
adc
mov
xor
xchg
push
push
loopne
push
aad
fdivr
gs
mov
xor
loopne
push
leave
mov
test
dec
xchg
dec
dec
mov
xchg
inc
fsubrs
mov
xchg
lods
xor
shrl
js
pop
inc
mov
jb
xchg
test
sub
mov
jbe
fwait
xchg
jbe
ret
push
sub
pop
sahf
mov
in
push
push
inc
inc
movsb
int
or
fistps
mov
pop
cmp
jmp
ret
call
in
call
enter
xor
ud0
stos
and
adc
imul
leave
test
jno
sub
cmp
adc
cmp
or
adc
int3
inc
push
das
adc
sub
lret
adc
xchg
lds
pop
fiadds
adc
sbb
mov
fs
lock
xchg
adc
subb
fdivl
sbb
mov
mov
mov
cmpl
pop
xor
scas
sbb
mov
sub
mov
popa
mov
ds
sbb
outsb
mov
or
xchg
loop
fwait
xchg
cltd
adc
aaa
dec
push
pop
ja
pop
imulb
enter
in
push
mov
xor
ret
sub
je
xor
jmp
repz
xlat
ret
cmp
iret
sbb
mov
mov
push
cmpb
lret
push
xchg
pop
and
pop
push
cmpsb
jae
ret
stos
call
jnp
sub
or
loopne
cwtl
xor
cwtl
movsl
out
ror
jge
ds
pop
scas
fimull
je
fnstenv
push
out
repz
mov
mov
icebp
ljmp
out
in
add
pusha
outsb
in
mov
fidivs
repz
cmp
fisubl
mull
in
or
sbb
or
adc
jb
pop
cwtl
mov
pop
sub
hlt
movsl
test
adc
ret
ds
xchg
xor
in
pushf
repz
imul
sub
pop
cmp
idiv
test
cmp
or
mov
push
sahf
push
push
hlt
sub
cmpb
cmc
fmuls
cmpsb
mov
lods
aad
adc
mov
adc
push
cltd
mov
cli
jns
sub
icebp
and
mov
jb
dec
adc
or
test
rol
xchg
xor
jl
xchg
mov
je
mulb
sbb
sbb
jecxz
jns
enter
xchg
push
jae
lods
and
cmpsl
xchg
mov
inc
out
push
aad
lds
ret
cmpsb
jg
mov
sub
lcall
push
mov
lcall
and
xchg
mov
adc
scas
mov
mov
enter
jb
ret
aas
mov
imul
sub
and
sub
xchg
jle
add
pushf
push
outsb
imulb
jp
test
test
push
jmp
adc
lods
outsb
xchg
jnp
xchg
jno
test
cmp
sbb
and
sbb
jne
inc
icebp
sarb
dec
test
lret
lret
push
loope
dec
inc
mov
mov
repz
stos
xor
out
push
enter
outsb
sub
pop
xchg
lret
popa
arpl
mov
mov
jnp
or
adc
insl
nop
out
daa
and
pop
psubd
bound
add
adc
mov
cmc
pop
xchg
shll
mov
sbb
andb
ret
imul
cld
mov
push
adc
xchg
pop
ret
sbbl
jmp
jbe
repnz
iret
mov
les
xor
fwait
jmp
inc
leave
push
mov
insl
jno
popf
adc
xlat
or
jge
cmp
je
cmp
fnop
pop
or
mov
pop
dec
shll
out
imul
inc
mov
mov
popl
pop
es
and
les
cld
and
inc
popa
cmp
cwtl
dec
mov
movsb
mov
rolb
dec
dec
into
mov
icebp
jge
int3
loop
pop
push
aas
sub
push
call
xor
sbb
je
outsl
mov
popf
inc
lcall
lods
inc
loopne
cld
les
pop
ficoml
dec
and
adc
cld
sub
hlt
or
xor
imul
imul
leave
cmp
lods
and
int
adc
cmp
into
repz
jmp
lea
cs
pushf
jb
int
js
andb
pop
pop
das
xor
sub
cmp
add
out
sti
dec
loopne
pop
inc
ljmp
leave
int
jecxz
int
xcrypt-cfb
cmpsl
and
enter
cmpsb
dec
mov
adc
xchg
jge
mov
das
pop
je
nop
pusha
add
mov
jl
push
mov
je
xchg
jns
adc
out
enter
scas
bound
push
rcl
mov
inc
push
dec
int
insb
leave
scas
imul
jne
xchg
fistpl
push
mov
or
push
adc
mov
out
mov
sbb
sti
cmp
and
pop
sahf
outsb
stos
sub
imul
sbb
jg
in
cmc
jno
xlat
push
aas
mov
jae
dec
xor
pusha
ljmp
dec
mov
jnp
dec
jnp
xchg
mov
stos
push
pop
pop
mov
pop
lret
sbb
jne
mov
paddsw
and
sub
into
mov
jecxz
pop
jp
js
mov
or
fidivrl
in
sub
iret
gs
or
xchg
test
dec
cli
pop
insb
out
pop
popf
cmp
pop
add
push
sub
cmc
stos
mov
xor
stos
mov
push
movsl
pop
xor
test
bound
adc
stc
or
adc
lret
mov
rep
add
sti
int3
add
sub
dec
inc
sbb
mov
ljmp
ja
lahf
jbe
lds
mov
scas
push
cmp
inc
outsl
sbb
test
adc
sbb
mov
mov
aam
lcall
mov
clc
or
nopl
addl
push
xor
aam
and
xlat
push
mov
leave
mov
das
fnstsw
jnp
mov
fwait
mov
sbb
cmpsb
adc
int
cltd
jmp
push
mov
xchg
jle
lahf
fs
in
fstpl
xor
mov
jg
pop
cmp
xor
add
std
ret
insb
bound
mov
cmp
scas
rcll
test
pop
popf
repz
ret
fwait
mov
mov
into
push
xlat
mov
push
push
int3
sbb
sbb
lock
jnp
sub
cmpsb
fstp
push
punpckhdq
dec
dec
insl
xchg
xchg
xchg
loopne
jge
nop
cwtl
fildll
mov
mov
lret
mov
push
xchg
adc
pop
roll
sbb
fidivs
inc
outsl
sbb
shll
scas
out
fadds
outsb
xchg
bound
xor
pusha
mov
in
popl
fcmove
inc
scas
push
repz
in
sbb
je
scas
sbb
xlat
shl
je
mov
sarl
in
rorl
xor
xchg
jno
push
into
add
xchg
int
cld
es
adc
fnsetpm(287
loopne
pop
mov
jl
int3
xor
cmp
into
out
ror
adc
jge
or
lret
inc
xchg
push
sahf
leave
add
test
add
lods
and
or
aas
cmp
xor
cltd
aas
mov
xor
mov
fidivrl
daa
jge
imul
push
aas
cmp
mov
nop
dec
pop
mov
or
out
jle
mov
or
pextrw
out
and
jg
stc
bound
or
xchg
jl
dec
jnp
and
dec
adc
outsb
cmp
test
lahf
mov
arpl
fists
outsl
mov
loop
scas
int3
or
cmp
test
mov
ss
shl
jns
gs
xchg
jo
test
jo
fstpl
mov
fimuls
loop
mov
jne
jnp
cmp
mov
inc
cmp
cmp
push
jne
rcrl
nop
shll
mov
sub
jae
mov
mov
aas
mov
scas
sbb
test
int
out
test
int
xchg
jg
addl
out
add
imull
aad
les
mov
push
clc
push
push
add
cmpsb
inc
cmpb
sbb
js
dec
fs
pop
and
mov
or
icebp
subl
out
test
into
cmp
xlat
das
mov
mov
setl
push
jmp
popa
xchg
jno
mov
push
sbb
mov
mov
rcrb
ficompl
and
mov
lds
jecxz
cmpsl
divl
enter
shlb
nop
sub
jns
fcomps
pop
adc
fsubrs
loopne
testl
cwtl
xor
jbe
mov
xchg
ds
popw
sbb
mov
or
inc
dec
push
jbe
or
xchg
shrb
inc
imul
inc
div
xor
and
cmpsl
je
add
pop
dec
ret
les
in
xlat
inc
sti
loop
rcl
int
popf
or
sub
cmp
cmp
sbbl
clc
fnstcw
dec
and
std
jecxz
les
into
adc
mov
pop
arpl
popf
sub
mov
mov
in
pop
mov
leave
sub
add
xchg
or
mov
sbb
and
ficoms
push
inc
sbb
subb
in
xor
loopne
sub
mov
adc
out
stos
jmp
add
pop
in
or
int3
dec
cmp
adc
jbe
mov
lgs
repz
fldcw
test
pop
jb
push
push
movsb
sahf
mov
adc
cmpsl
les
sbb
mov
repnz
xor
dec
in
jmp
and
mov
stos
adc
jns
loope
or
shlb
jbe
shll
mov
es
mov
and
icebp
inc
cli
inc
push
nop
mov
mov
push
loopne
mov
addr16
stos
inc
rol
test
push
cmpsl
and
sbb
stos
sbb
jno
cmc
cmp
js,pn
dec
mov
xchg
iret
hlt
inc
mov
ret
iret
cmp
enter
sub
sbb
or
shl
scas
jmp
mov
je
adc
sarl
daa
adcl
push
xchg
sti
in
mov
cmpsl
sbb
xor
xlat
in
pop
jg
repz
sub
je
notb
cltd
mov
mov
push
dec
int
nop
adc
and
adc
xlat
fldl
in
xchg
and
stos
ror
and
ficoms
mov
lods
call
mov
sbb
sahf
mov
std
insb
xor
add
out
xchg
scas
cwtl
sub
pop
pop
mov
cmp
pop
loop
fldt
and
push
popa
lahf
test
hlt
or
dec
xor
out
sbb
and
test
aas
call
inc
adc
jl
add
mov
or
js
imul
icebp
test
xor
daa
mov
stos
insl
fstp
mov
pop
data16
ljmp
jmp
add
inc
jb
cld
popf
movl
adcb
inc
out
loopne
rcr
mov
jo
mov
rcrl
mov
into
enter
mov
pop
dec
decl
inc
out
aam
shrl
mov
and
cmp
xor
sub
sbb
dec
sbb
ljmp
cmp
and
fwait
and
in
aas
or
int
mov
dec
xor
dec
mov
dec
sub
pop
jae
ds
xchg
pushl
xor
out
mov
pop
mov
stc
inc
arpl
ja
sbb
ret
jp
xchg
fadd
pop
scas
add
pop
rcl
stos
xor
lods
push
in
add
pop
xchg
or
ss
int
stos
imull
cmp
push
xchg
lret
sub
cmp
pop
xor
sti
or
cmp
mov
or
out
sub
imull
xor
rorl
xchg
cmp
sub
insb
insl
lret
ds
out
sub
xchg
ja
shrl
cmc
test
fstl
mov
or
or
pusha
lock
ja
les
mov
nop
iret
cmp
movsl
add
bound
dec
aad
add
loop
adc
pop
incl
sbb
xchg
add
ja
sti
inc
es
insb
int
leave
jmp
mov
mulb
cmp
sbb
sbb
lret
jge
stos
mov
sahf
inc
sub
push
mov
cmpsb
add
fs
std
push
repnz
cld
addr16
cmc
lds
xchg
push
addr16
mov
sbb
dec
cmpb
out
mov
test
mov
push
mov
push
inc
std
sti
push
mov
push
into
roll
mov
clc
into
cmp
push
sbb
cli
push
mov
inc
das
lods
push
jmp
bnd
hlt
divb
add
adc
mov
aad
adc
mov
jmp
pop
movsb
mov
jne
or
fwait
cli
test
inc
rcll
jae
push
cmp
outsl
xchg
cmc
aam
out
sub
inc
les
dec
push
xchg
faddl
pop
mov
push
jb
lock
inc
idivb
iret
push
xor
fwait
push
loop
adc
pop
gs
jmp
pushw
pop
je
cmp
and
aad
sub
repz
in
sbb
ja
xor
mov
inc
jae
pop
xchg
cmp
jg
and
lret
push
pop
cmp
ret
cmpsl
xchg
ss
mov
call
insb
cmp
lcall
int3
jmp
push
fucomip
divb
inc
std
push
stos
xchg
imul
shll
test
cld
pop
xchg
scas
inc
sbb
dec
in
imull
lcall
dec
hlt
test
push
pop
mov
jbe
mov
testb
jns
mov
push
cld
call
mov
mov
add
mov
std
insb
jp
inc
add
cmpsb
mov
cmp
push
int3
mov
cmpsl
jb
xchg
cmp
aad
or
insb
lods
stc
js
dec
test
addr16
outsl
bnd
das
arpl
arpl
ficompl
pop
cltd
mov
mov
mov
pop
xchg
dec
cmp
xor
sbb
mov
rcll
int3
das
push
shr
daa
mov
push
inc
fwait
jle
mov
xchg
imul
sub
daa
fists
and
mov
loopne
add
cmc
dec
fistl
hlt
and
pop
sbbb
sbb
das
lret
enter
mov
mov
arpl
stc
ror
das
jns
mov
xchg
sti
xchg
fildll
push
dec
cmp
pop
das
adc
mov
dec
cmp
mov
xchg
cmp
leave
imul
test
ret
xor
cmpsl
pop
cmpsl
push
dec
addr16
fdivl
iret
push
out
outsb
sub
lds
in
sub
jae
mov
sbb
nop
fidivrs
fdivrl
sub
outsl
ds
adcb
pop
xchg
fwait
insb
in
jo
fwait
inc
cli
pop
mov
mov
xor
or
fs
add
mov
dec
test
lahf
loopne
repnz
lock
lea
insl
adc
cwtl
jnp
cmp
jno
or
cmp
adcl
sbb
lods
mov
lods
repz
aad
jp
mov
cmp
enter
cmp
js
ss
in
pop
jbe
sti
pusha
pop
cmpsl
or
cltd
sbb
or
mov
dec
mov
fildll
push
jns
mov
scas
inc
or
insl
add
rcll
test
cld
in
or
aad
inc
leave
in
jecxz
cmp
push
xor
cwtl
ljmp
sub
mov
sbb
pop
mov
pop
add
ret
xchg
pop
test
xorb
je
repz
dec
push
bound
stos
fidivrl
loope
cmp
iret
je
sarl
repnz
jae
and
mov
das
jbe
lods
and
repnz
mov
int
iret
push
clc
ljmp
sbb
fmuls
mov
iret
aas
shl
sbb
cmp
lock
popa
add
cmp
fwait
jbe
pop
mov
sbb
ficompl
dec
enter
imul
dec
fcmovnu
xchg
jnp
xor
fs
ret
xlat
movsl
fists
xchg
mov
aas
sbb
mov
dec
add
aad
jmp
lcall
mov
add
outsb
add
inc
mov
mov
cmp
clc
test
out
fwait
aaa
cmc
rcll
popf
sbb
push
mov
arpl
pop
jg
jb
add
icebp
popa
xor
xchg
insb
mov
mov
js
pop
clc
dec
stos
sbb
mov
lahf
and
sub
mov
push
pop
popf
jp
sbb
add
pop
jl
adc
icebp
inc
addr16
jb
sbb
inc
incl
repz
aam
mov
stc
test
cmc
mov
pop
popl
cmp
jg
mov
insb
sbb
jno
std
xchg
jne
push
ds
mov
xor
dec
je
sub
btc
nop
enter
lods
aaa
shrb
mov
sub
sub
sub
dec
sbb
jns
sbb
rcrb
popa
cmp
adc
jmp
inc
sbb
xchg
insl
xorb
cs
dec
sub
lret
movsb
and
cld
jecxz
addb
or
mov
ret
push
cli
fcomp
adc
lock
test
sub
and
shlb
xchg
mov
shlb
sbb
jae
mov
xlat
pop
call
enter
call
ljmp
clc
leave
ret
xchg
std
mov
shll
mov
add
sub
movsl
test
push
jmp
loope
in
loope
push
mov
add
cmp
mov
lods
mov
bound
sub
aad
or
rcl
adc
movsl
mov
lods
cmp
mov
and
adc
inc
lock
adc
lcall
pushf
jle
sarb
cmp
and
xor
xor
or
push
and
in
outsb
pushf
clc
pop
mov
ds
jnp
mov
in
ds
aas
lds
in
in
pop
mov
inc
fidivrs
pop
aad
mov
insb
inc
cvtps2pi
imul
pop
ret
cmp
mov
mov
neg
jmp
push
xor
inc
or
loope
rcll
cmp
dec
fnstenv
out
add
xchg
mov
push
arpl
or
mov
xlat
fisubl
cmc
jmp
cmp
test
into
mov
iret
xchg
fwait
pop
sub
sub
stos
xchg
or
daa
sbbb
adc
xlat
jle
lock
add
dec
mov
inc
pop
cwtl
enter
add
test
mov
xor
and
lds
jp
jmp
mov
rcrb
mov
fldcw
sbbb
xor
aam
cmp
xchg
push
sti
mov
jecxz
pop
lcall
jg
lods
dec
jb
push
add
mov
dec
xchg
aaa
js
xchg
mov
mov
mov
xor
jbe
daa
pop
and
ss
mov
add
push
xor
jne
jle
stc
mov
add
negl
mov
add
scas
sbb
inc
ds
dec
sub
adc
loope
sbb
adc
daa
jae
popa
sub
data16
out
xchg
xchg
jne
aad
add
pop
inc
cs
sbbl
call
ds
adc
loopne
xchg
mov
lahf
dec
push
pop
inc
ja
scas
jns
and
pushf
lret
pop
mov
mov
loop
mov
xchg
mov
sbb
push
call
ret
fdiv
add
xor
dec
repnz
sub
sub
mov
pop
mov
notb
stc
or
mov
fsubr
push
push
lcall
sbb
jp
cld
xchg
pop
mov
mov
add
dec
mov
js
aad
in
fwait
or
xchg
lahf
in
loop
mov
sbb
sub
jb
lock
imul
push
iret
push
leave
lcall
test
bound
loope
test
fwait
sbb
mov
xlat
jo
sub
xlat
ja
lods
adc
sub
lock
scas
xor
adc
pusha
les
adc
add
in
cmp
sbb
or
jno
ljmp
xchg
aam
lods
pop
aaa
subl
mov
fsubrs
jmp
jmp
test
xchg
xchg
fdivrp
cmp
jae
in
sub
scas
lret
jno
push
jbe
fsubrs
mov
in
inc
scas
xchg
repz
jno
cld
jns
mov
fsubr
dec
cmp
loop
out
inc
adc
jg
mov
jne
fidivl
int
je
imul
pop
outsl
jp
lea
dec
lea
fadds
push
fwait
ret
pop
jp
xlat
bound
sbb
addr16
mov
push
mov
mov
sbb
adc
sbb
in
repz
out
repnz
push
fidivrl
aaa
adc
push
fs
cmp
pop
adc
jb
out
out
mov
test
movnti
dec
mov
sti
outsb
xchg
int3
movsl
ret
test
mov
xchg
xor
rclb
aam
lahf
pop
sbb
loop
pop
adc
aam
arpl
mov
cmp
data16
mov
ffreep
popa
loope
loopw
aaa
iret
frndint
push
into
cld
adc
loopne
mov
loop
mov
jge
cwtl
pushf
pop
push
fs
sti
jge
pop
and
imulb
jno
ljmp
add
dec
sub
mov
jp
push
adc
xchg
lahf
dec
nop
rcrb
xchg
pop
xchg
jb
int3
and
enter
fs
or
das
call
cltd
mov
add
cs
sbb
dec
xchg
push
daa
push
dec
scas
xchg
rcrb
cld
xchg
sbb
es
shlb
popa
mov
ljmp
test
inc
lret
fisubl
and
jge
cmpsb
aam
jmp
movsb
cs
insb
popa
push
out
dec
xchg
daa
ret
in
cmp
pop
jnp
mov
addr16
sbb
jnp
inc
jno
mov
aam
xchg
outsb
mov
mov
pop
add
jne
add
xchg
test
out
cmpsl
mov
xlat
mov
fstps
mov
sub
mov
and
dec
scas
xchg
or
shll
xorl
nop
xor
sub
popa
push
xor
mov
lahf
mov
push
mov
jnp
cmc
std
dec
sbb
mov
sbb
cld
sub
xor
mov
shlb
sub
push
add
inc
insb
pop
pop
and
mov
insl
stos
mov
jae
mov
adc
or
jbe
fs
and
mov
leave
jecxz
or
or
adc
pop
mov
push
push
lahf
mov
je
xlat
das
adc
pop
dec
sti
cmp
mov
cmp
sarl
lds
popl
push
mov
mov
neg
aam
or
xor
pop
stos
push
pop
cmc
pop
loop
inc
mov
inc
or
out
add
or
call
in
lcall
and
xor
popa
inc
outsb
jmp
fcoms
lret
xor
lock
mov
test
xchg
stos
or
out
mov
or
jmp
movsb
shrl
aam
lock
mov
out
push
pop
dec
clc
sbb
mov
jne
add
cmp
ret
stos
jae
sarb
jmp
aas
xchg
je
shll
movsb
test
mov
pusha
mov
mov
push
popf
and
push
cltd
sub
icebp
aaa
mov
test
in
mov
xlat
dec
push
dec
bound
iret
or
jmp
lret
ret
sbb
mov
pop
dec
fldenv
adc
or
or
inc
push
pop
ljmp
ja
cmp
ljmp
out
ds
outsb
stc
rclb
xor
gs
movsl
dec
icebp
push
nop
loopne
or
mov
sarl
sbb
xchg
movsb
xor
nop
ss
jecxz
jg
dec
cmpl
bound
sub
cmpb
inc
clc
or
and
pop
adc
fs
push
lret
popa
mov
xorb
mov
loop
sahf
sub
aaa
stos
mov
shll
icebp
xchg
or
push
and
cmpsl
mov
in
leave
clc
movb
andl
pushf
lahf
mov
add
and
mov
imul
scas
jae
dec
das
inc
mov
inc
sub
cli
pushf
mov
pop
or
inc
mov
stos
pushf
pop
pop
adc
fldl
sub
shrb
pop
sbb
xor
fpatan
outsb
inc
ds
xor
imul
and
aam
bound
iret
fbstp
fmul
aaa
sub
and
lea
inc
jg,pn
ljmp
cmp
mov
mov
inc
stos
add
and
cli
cmpsb
jecxz
out
pushf
mov
or
jg
push
lcall
std
jge
mov
xchg
outsb
add
clc
add
es
ror
inc
test
pop
inc
mov
test
inc
mov
lret
cld
cmp
loope
dec
jno
pushf
cmp
dec
mov
jb
mov
roll
and
fadds
jmp
sub
inc
shl
jnp
ds
sub
ss
xchg
mov
add
loop
sub
and
int
lods
and
es
add
xor
lds
pop
jecxz
test
or
pop
adc
andl
pop
repnz
mov
cli
and
mov
inc
and
xchg
jno
addr16
shll
data16
add
jecxz
push
clc
scas
into
lds
add
inc
insb
pop
adc
sub
in
subl
in
ss
dec
jecxz
cld
add
pop
addb
add
xor
ds
mov
aaa
je
jnp
movsb
lahf
xor
pop
push
xchg
dec
das
and
ret
lret
clc
aas
inc
xchg
fwait
lahf
xor
ljmp
xchg
fisubs
test
and
ret
dec
jo
dec
mov
xchg
push
test
es
xchg
sbb
scas
jns
or
xchg
ret
jp
scas
mov
int
pusha
push
iret
lcall
mov
daa
out
dec
andb
mov
xor
pushf
mov
shr
mov
xchg
mov
dec
sbb
mov
ror
dec
aaa
cli
xchg
pop
sub
insb
jae
xlat
insb
addb
leave
lcall
insb
cli
lret
xor
loope
scas
xorb
repz
pop
insb
sbb
pop
and
xorl
sub
add
push
sub
orl
xor
or
mov
ret
pop
lahf
addl
stos
pop
into
mov
outsl
or
and
add
mov
mov
aam
icebp
jnp
outsl
ret
adc
ret
push
cmpxchg
sbb
les
adc
pushf
setp
out
out
sub
mov
sub
push
stos
lret
adcb
jnp
cmp
jecxz
fstpt
mov
inc
jns
ja
jecxz
popf
daa
push
adc
mov
push
add
gs
test
push
push
jge
push
or
sub
sbb
shl
pop
cmp
pushf
and
iret
mov
in
push
out
pop
pop
in
or
subb
inc
xlat
xor
inc
push
mov
in
mov
pushf
xlat
push
fists
mov
and
insl
fcmovbe
jo
imulb
cmp
cmp
sbb
xor
shrb
testl
imul
cmpsb
lcall
jae
sarl
jecxz
sarb
les
jb
pop
repz
inc
stos
adc
fs
push
arpl
pop
xchg
jne
cmp
mov
and
mov
scas
std
lock
and
add
cmp
adc
mov
hlt
lret
jge
leave
test
pop
xor
xchg
ret
adc
pop
adc
xor
pop
mov
sti
mov
movsb
mov
roll
inc
mov
mull
add
negl
xchg
cmovb
cmpsl
and
fidivrs
test
popf
cmp
cltd
insb
adc
mov
jcxz
pop
sbb
iret
out
daa
mov
fistps
movsl
xchg
and
movsb
push
call
scas
mov
jmp
mov
dec
push
cmpsl
xchg
outsl
dec
xor
aam
ficoms
out
jg
out
ret
cmp
push
cwtl
jae
mov
stc
frstor
movsb
clc
fldenv
push
lds
mov
jle
mov
adc
cwtl
adc
movsl
dec
popa
sub
negl
adc
mov
inc
shlb
test
sbb
push
call
mov
cmp
lahf
add
roll
in
pop
arpl
xchg
cmp
sbb
jp
pop
int
mov
cmp
push
mov
test
movsl
jp
and
stos
aas
mov
dec
arpl
loope
cmpsl
pop
mov
shr
push
loopne
out
arpl
nop
sub
push
sbb
das
popa
push
xor
add
adcl
push
mov
mov
jbe
fnstcw
inc
outsl
push
lahf
push
or
loope
lahf
jae
sub
cmpsb
incb
xchg
and
jns
movsl
inc
push
roll
inc
mov
inc
leave
sti
int
inc
adc
cmpb
stos
nop
or
mov
push
xchg
popf
xor
pushfw
pop
lods
stos
xchg
sbb
mov
std
jb
jnp
mov
ss
dec
or
adc
add
add
mov
aad
jg
stc
inc
push
xchg
push
adc
ret
sbb
mov
fsubl
push
out
xchg
movsb
mov
bound
arpl
shrl
adc
xchg
pop
int3
int
adc
fsts
inc
jb
add
xor
outsb
adc
push
cmpb
xchg
in
xchg
xor
clc
test
mov
and
negb
mov
je
cmc
adc
stos
stos
out
mov
popf
add
stc
ficoml
mov
repz
inc
xchg
or
dec
fsubl
pop
sbb
pop
fstps
test
dec
sub
jmp
in
dec
push
pop
out
or
push
adc
ljmp
fsts
je
xor
test
fucomi
jg
into
mov
mov
inc
sub
sti
sbb
inc
mov
cmp
je
test
pop
into
out
out
out
or
fisubrs
sbb
or
insb
out
pop
rcll
aam
out
or
ficoms
movsb
xchg
sub
and
lahf
in
in
fisttps
dec
fsubrl
add
dec
xchg
xor
cs
lds
hlt
dec
aaa
xor
hlt
pop
fwait
icebp
cmc
xor
push
or
les
scas
popw
xor
call
test
push
imul
lds
addr16
test
jbe
lock
dec
movsl
mov
or
lods
int3
and
pop
ret
mov
fistl
inc
outsb
xchg
inc
loop
or
fcoms
ror
test
test
cmp
fsub
shll
jg
jge
insl
pop
jg
jbe
cmp
mov
call
pop
adc
sahf
xchg
and
ret
xor
add
std
mov
inc
les
je
pop
test
pop
movsb
call
cmp
lahf
aaa
xchg
data16
xchg
fwait
je
push
sbb
pop
movsb
bound
jne
sbb
fmul
mov
xchg
repz
lahf
cmp
popa
or
shrl
jg
pop
pop
cmp
rcll
jbe
into
sub
sub
mov
xor
inc
mov
add
and
pop
daa
inc
xchg
cmp
scas
cmp
aas
xchg
xchg
inc
xchg
and
push
mov
push
sbb
sub
xor
jbe
xchg
push
mov
subb
cmp
add
ss
cmp
push
dec
mov
sbb
pop
fld
xor
std
xchg
sub
sarb
and
mov
inc
inc
cmova
filds
ss
aad
pop
add
insb
fwait
pop
rcrl
rcll
xchg
xor
movsl
and
cwtl
insb
gs
lret
popf
outsb
push
rorb
and
sbb
xor
test
push
push
testb
cwtl
sbb
xchg
cmp
scas
daa
scas
xchg
adc
andb
sahf
mov
movsl
xchg
scas
fwait
leave
lea
out
or
cmp
xchg
dec
inc
and
aaa
and
dec
pop
sub
inc
adc
adc
adc
add
gs
dec
sahf
sub
movsl
popf
arpl
cmpsb
push
mov
aam
leave
xchg
je
int3
mov
sti
sbb
sbb
ret
sbbb
adc
fs
pop
jno
popf
cmc
xchg
rolb
ret
mov
add
fisttpl
iret
inc
enter
aad
cmp
adc
jnp
fwait
sbbl
cmp
fs
sub
or
imul
test
inc
cmp
cmp
pusha
mov
loop
xchg
xchg
bound
sbb
jns
pop
sahf
adcb
jle
jl
lret
xor
lahf
pop
sbb
inc
inc
ja
lret
insl
or
ljmp
out
cs
sub
lret
inc
imul
inc
inc
ja
das
je
lods
nop
popf
in
sub
lock
push
cltd
push
cmp
pop
fcmovne
add
jns
cmpsb
sub
xchg
xor
mov
pop
addb
xchg
in
fwait
cmp
arpl
outsl
or
xchg
mov
lea
cmp
shll
jnp
pop
mov
call
ljmp
scas
insl
aas
imul
jmp
push
mov
inc
js
mov
and
mov
fldcw
jl
cmpsl
rol
push
lcall
mov
pusha
and
and
sbb
mov
mov
jmp
mov
hlt
mov
pop
jo
stos
fidivs
stc
cmp
mov
jo
pop
and
fnstenv
pop
mov
push
xchg
mov
frstor
cld
adc
inc
mov
out
cmp
inc
nop
cmpsb
sahf
push
pop
cmp
sbb
jg
cmp
jae
roll
xchg
cmp
in
scas
pushf
fs
lahf
stos
xlat
mov
jmp
or
and
sbb
jb
ret
into
cmp
std
mov
call
imul
jp,pn
inc
sbb
xchg
call
pop
out
loopne
mov
push
in
cwtl
push
inc
ss
into
les
fldcw
jecxz
test
shll
enter
adc
iret
push
das
adc
jo
adc
xor
xor
and
xlat
xorl
cld
test
cmc
add
repnz
enter
adc
xchg
adc
dec
lcall
push
pop
sub
mov
pop
shlb
stc
or
int
pop
mov
mov
lods
inc
fcmove
sub
dec
and
pop
xor
add
stos
outsb
scas
or
mov
dec
hlt
cwtl
shl
mov
mov
test
push
xchg
es
mov
sub
adc
pop
xchg
sub
jle
cmp
dec
movntq
rcrb
push
ss
fstps
arpl
and
inc
adc
pop
jmp
adc
push
lods
rcrb
ficoml
stos
jnp
arpl
mov
sbb
loope
inc
pop
mov
pop
or
add
mov
sbb
cmp
shrb
mov
xor
les
inc
movsb
inc
cmpb
pop
cmp
jo
jns
inc
shrb
andl
and
jns
mov
cmp
out
pop
cmp
stos
dec
daa
fsubl
sub
jae
push
cli
call
or
inc
ljmp
ljmp
xchg
ja
mov
mov
push
or
cmpb
icebp
ljmp
push
mov
xchg
stc
fisubrs
pop
mull
pop
scas
das
lcall
push
nop
insb
add
pop
jecxz,pt
jp
mov
sub
jns
aaa
and
add
inc
movsl
jg
sub
sbb
xchg
cmp
cmp
jge
mov
mov
xorb
adc
xchg
in
pop
addr16
shl
fisttps
rclb
jns
pop
gs
shrl
clc
and
test
dec
test
dec
in
scas
cmp
xchg
sub
mov
push
adc
pushf
mov
shr
inc
fs
pop
lcall
iret
ja
nop
mull
jb
loope
jle
jp
fst
or
cmp
sub
push
push
adc
aad
in
std
aam
xor
mov
mov
sti
jecxz
gs
or
dec
xchg
je
fwait
jmp
outsl
adc
xor
and
add
imul
lret
sahf
and
mov
or
xor
popl
cs
in
aas
jne
sahf
mov
xchg
xchg
mov
inc
or
adc
lcall
test
sub
and
xor
inc
lahf
inc
sbb
adc
ja
add
fwait
out
in
or
inc
pop
push
orl
je
sub
add
mov
dec
inc
mov
andps
adc
xchg
or
sub
jne
mov
out
std
cwtl
hlt
xor
jge
and
jae
jle
mov
pop
test
shrl
add
fnsetpm(287
jg
sbb
push
jne
or
mov
xor
pop
mov
dec
test
push
ds
pop
inc
mov
loope
arpl
stc
stos
xchg
dec
out
xchg
sub
mov
sub
ret
mul
pusha
enter
aad
cld
and
add
xchg
fsubrs
out
jb
lret
ds
dec
jo
in
jecxz
mov
and
fidivl
std
pop
mov
inc
movsb
pop
lret
adc
vcomiss
inc
mov
xor
cmc
pop
mov
jp
int
inc
sbb
in
xchg
xor
push
xchg
adc
out
push
or
fildl
add
lods
pushl
popa
dec
lret
loop
add
sub
sti
sub
jae
mov
cmp
jnp
pop
or
test
add
es
or
pop
pop
pop
cmp
ret
mov
in
sub
fidivrs
mov
push
pop
xor
leave
leave
mov
scas
lret
dec
lcall
jno
dec
cmp
and
in
sbb
std
into
cmp
aad
test
mov
pusha
xchg
mov
outsb
int
in
adc
sbb
add
mov
sbb
out
testb
or
iret
sub
adc
xor
js
sbb
cld
ljmp
sahf
push
stos
or
push
arpl
imul
sub
fdivp
cmpsl
lock
xor
lock
xchg
jnp
add
popa
movsl
cmpsl
push
lret
mov
xchg
insl
add
movsl
push
mov
test
or
testb
scas
addr16
pop
push
lea
jg
mov
enter
aaa
xchg
xor
mov
jb
aaa
push
dec
out
push
clc
jl
nop
sub
fists
mov
rorb
inc
mov
les
leave
cmpsb
xchg
adc
scas
mov
in
shll
xchg
cs
addr16
push
inc
push
data16
fadd
jl
fadds
jbe
scas
mov
or
outsl
jns
fcmovu
xor
lock
or
lods
sbbb
jl
sarl
enter
pop
xchg
cld
loopne
push
inc
pop
and
cmpsl
icebp
cmovbe
dec
push
dec
fcmovb
push
mov
stos
inc
and
pop
fcmovu
xchg
das
insl
push
aas
xor
ja
js
scas
xor
adc
ret
fdivrs
popa
ror
bound
pop
nop
lods
and
cmc
jnp
nop
leave
pop
pop
jmp
pop
std
mov
lock
cmpsb
push
push
mov
ja
adc
jp
sbb
cmp
cwtl
sub
mov
cmpsb
xor
mov
xchg
arpl
push
repz
mov
fldl
dec
cmpsb
es
lods
mov
push
lods
inc
xor
jae
pop
int
mov
and
cmp
bnd
in
inc
mov
inc
xchg
inc
pop
jns
std
lds
sub
mov
adc
int3
dec
xchg
xor
push
push
imul
or
xorl
scas
mov
popf
mov
out
adc
leave
xor
xchg
test
mov
jb
adcl
popf
sbb
mov
mov
rcrb
or
xchg
xchg
out
pop
sub
scas
push
pop
les
sbb
sbb
pop
jp
or
pop
jne
cmp
notl
lahf
add
push
and
sub
pop
xor
stc
push
push
adc
jo
jns
in
pop
out
loope
add
mov
inc
fcoml
jo
xchg
mov
adc
xchg
std
adc
call
add
je
faddl
dec
xchg
pop
std
xor
adc
xchg
mov
es
jle
adc
imul
into
push
leave
xchg
repnz
rcl
xor
mov
pusha
jmp
jns
mov
ds
sbbb
fsubrl
jb
or
in
sarb
push
pusha
sbb
loope
jl
jmp
pop
in
cmp
adcb
xchg
outsl
xor
add
mov
addr16
dec
int3
sub
or
mov
popf
mul
mov
add
das
rcr
out
outsb
lcall
inc
loopne
jb
and
ds
xchg
pop
in
xchg
push
call
adc
inc
and
inc
mov
xor
fnstsw
xchg
int3
mov
adc
xor
push
sbb
ror
loope
test
mov
popf
leave
jmp
in
or
pop
pusha
mov
inc
adc
or
les
mull
xchg
mov
in
xor
cmc
push
push
es
push
enter
sbb
pop
hlt
repnz
sub
push
fbld
arpl
pop
dec
pusha
rolb
das
ja
insb
test
push
sub
iret
mov
pop
or
insb
mov
mov
fists
push
clc
pop
cld
xor
int3
stos
fistpll
cli
clc
insl
mov
sub
stos
int3
mov
enter
rcrb
xchg
xchg
scas
push
je
push
rolb
push
jo
cs
ret
stos
jecxz
mov
mov
shrb
lcall
loop
lahf
sbb
int
je
pop
ret
dec
loop
cmp
loopne
leave
and
add
lods
ja
outsl
mov
imul
das
push
test
leave
sti
insl
push
imul
cs
repz
pop
push
ret
shll
jbe
add
cs
add
scas
sahf
mov
sbb
jl
mov
inc
pop
sbb
pop
xchg
xchg
insb
add
leave
mov
lods
adc
fildl
into
ret
lcall
inc
cmp
test
in
int3
jge
loop
test
pop
into
mov
scas
xchg
negb
add
push
mov
or
jl
fwait
xchg
adc
push
and
into
adc
sub
xchg
popf
out
ret
ss
imul
add
sub
mov
aaa
sbb
push
imul
xchg
xchg
jbe
dec
das
dec
pop
push
sub
xchg
push
lret
mov
loope
cltd
mov
movsl
pop
push
je
add
inc
adc
inc
hlt
icebp
push
mov
sub
mov
out
or
push
arpl
cmpl
push
out
outsb
idivb
cmp
popa
shlb
push
dec
sbb
cmp
dec
jle
mov
pusha
cltd
movsb
shlb
or
adc
mov
aas
xchg
push
and
scas
add
stos
adc
mov
inc
push
push
int3
lret
ret
ljmp
jge
mov
ja
lahf
xchg
ss
stos
sahf
loopne
cmpsb
bound
cmpl
sar
mov
sub
pop
fsts
call
xchg
daa
out
movb
imul
aaa
pop
ss
cmp
inc
ror
push
pop
dec
movsl
stos
or
mov
push
test
fwait
sbb
mov
jno
mov
ljmp
pop
in
dec
sti
or
cmp
xchg
sahf
mov
mov
mov
push
xor
push
pop
sbb
cld
lret
fcmovnbe
and
shrl
fdivl
cmp
inc
push
stos
in
mov
mov
push
mov
lret
cli
lahf
and
dec
lret
ss
loopne
fimull
dec
mov
outsb
xchg
in
daa
xchg
mov
xchg
fcoms
arpl
mov
test
inc
inc
mov
icebp
push
outsb
lret
pusha
sub
call
add
gs
test
daa
mov
sti
addr16
push
addr16
xchg
mov
fcomps
arpl
mov
pop
cmp
das
enterw
xchg
rcll
lods
sbb
inc
mov
call
in
fiadds
and
sbb
add
je
mov
mov
pop
aaa
bound
mov
test
and
mov
inc
jb
or
inc
mov
movsb
xor
scas
mov
mov
std
pop
fwait
jge
std
in
test
dec
push
sti
mov
shlb
mov
repnz
inc
aaa
adc
into
jecxz
adc
aad
test
xchg
lea
pop
test
lds
ljmp
or
push
insb
js
cmp
dec
dec
cmp
data16
cmp
fimuls
mov
data16
cld
fisubrl
mov
jae
add
ja
mov
add
mov
js
iret
xor
xor
mov
dec
sub
cmpsb
lods
jge
js
pop
adc
iret
imul
outsl
inc
shlb
cmp
js
sti
or
or
cmp
in
cwtl
jp
mov
adc
and
dec
stc
fnsave
xor
push
scas
rcrb
sbb
insb
icebp
lods
mov
outsb
hlt
adc
lahf
out
dec
scas
hlt
sub
adc
inc
dec
adc
push
mov
in
loop
test
and
add
inc
out
sahf
mov
mov
mov
iret
and
cmc
cmp
sbb
pmulhw
jl
ss
and
nop
adc
cwtl
inc
pop
shr
xchg
fnstenv
into
call
stos
dec
leave
loop
sti
insl
fsub
jo
xchg
xor
test
arpl
lret
inc
lods
popa
pop
push
inc
sub
jno
mov
test
xor
popf
imul
fstl
jp
jns
and
pop
iret
std
sbb
jo
push
mov
pop
popf
xor
int
hlt
mov
inc
mov
andl
daa
adc
sahf
test
mov
popf
or
outsl
scas
popf
sbb
cmp
mov
dec
mov
push
movaps
std
adc
mov
testb
hlt
or
push
mov
xlat
test
sbb
push
mov
clc
inc
cmp
mov
adc
ljmp
mov
sbb
xchg
xchg
push
ss
in
inc
sub
cltd
mov
cmpsl
clc
xchg
sub
pop
mov
stc
inc
aam
in
adc
and
jne
dec
push
push
gs
ss
imul
inc
mov
pushf
decl
testb
and
push
in
sahf
aas
sbb
in
out
sbb
mov
push
pop
stos
lock
nop
lds
xchg
fcmove
adc
mov
cltd
sbb
xchg
jmp
inc
sub
mov
pop
xchg
pop
stos
pop
add
or
outsl
iret
dec
cmp
ljmp
nop
adc
dec
push
stos
std
dec
pop
ret
lahf
loope
jg
and
xchg
and
pop
pop
es
stos
pop
mov
int
pop
fisubs
push
mov
pop
in
mov
movsb
pop
xchg
add
push
rcr
sub
mov
inc
stos
xchg
cmp
movsb
in
dec
push
adc
scas
insb
xor
jle
mov
decb
pusha
jg
inc
addr16
jmp
int3
int
dec
push
mov
push
loope
dec
adc
mov
or
test
cmc
adc
and
clc
pusha
push
adc
das
lret
int3
outsb
and
adc
mov
mov
push
lret
mov
sub
fstps
push
lret
js,pt
adc
push
xor
inc
inc
mov
dec
out
sti
and
cmp
in
sub
in
fs
inc
in
pop
lods
mov
jp
stos
push
ss
insb
das
popf
addr16
and
data16
into
subb
je
test
or
fwait
cmpsb
pop
cmpsb
sbb
int3
bound
pop
jmp
aam
addr16
rcr
push
inc
fildl
push
ss
pushf
add
lods
mov
test
mov
mov
sti
xchg
push
cmpsl
pusha
daa
xchg
daa
xor
push
sbb
jmp
adc
loope
xor
push
adc
mov
dec
test
push
add
cld
cltd
pushf
and
sub
daa
fists
add
pop
cmp
jbe
mov
pop
mov
stos
mov
or
and
push
adc
xor
mov
mov
mov
stos
or
jns
mov
inc
adc
lods
mov
clc
inc
push
call
adc
jg
adc
jae
daa
cmp
addr16
sahf
push
and
into
or
cmp
mov
outsl
or
mov
icebp
mov
sbb
mov
in
arpl
enter
lea
inc
or
add
adc
jp
inc
xor
out
idivl
out
shlb
popf
dec
mov
divb
sub
adc
or
cli
inc
or
rclb
push
push
cmp
push
mov
or
pop
enter
xor
cmc
jns
sub
mov
and
lcall
es
fistl
xchg
xchg
out
test
sbb
push
adc
xlat
mov
mov
loop
mov
sub
xor
and
loope
insb
js
push
imul
movsb
stc
add
pushl
idivb
lods
jecxz
pop
ret
cmp
mov
cmp
popf
push
pop
dec
lahf
jp
enter
sbb
pop
test
movsb
aaa
push
pop
jb
cli
outsb
scas
pop
movsb
pop
pushf
hlt
daa
fcoml
mov
mov
mov
mov
sahf
scas
arpl
movsl
pusha
std
cmp
cmp
and
fimull
lock
xor
sbbl
dec
sub
aam
cmpsb
lret
xchg
xchg
cld
xchg
jle
sahf
cwtl
shll
test
xchg
jle
aad
aad
and
push
mov
inc
ljmp
add
pop
std
xor
pop
xchg
inc
and
push
bound
addr16
or
mov
iret
out
cmp
stc
fwait
movsl
jb
jno
fdivp
popa
pop
xor
test
hlt
mov
jl
adc
fstps
mov
jmp
xor
insl
fildl
pop
movsb
push
jle
mov
iret
xchg
ljmp
xchg
jbe
subl
add
push
loope
or
adc
add
add
aaa
xchg
mov
loopne
sbb
sub
pop
iret
adc
fwait
push
inc
jp
in
lret
add
lcall
movsb
jg
dec
out
rcll
cld
cmpsb
movsl
jo
mov
push
loope
jbe
das
movsl
push
lret
push
sbb
sbbl
xor
dec
push
loop
pop
inc
std
push
or
ret
or
sub
dec
fs
adc
movsb
pop
inc
insb
push
in
lock
xchg
adc
adc
insl
cmp
xchg
mov
push
int3
pop
mov
enter
pop
test
xor
pusha
ds
add
mov
jge
insb
rcr
sarl
push
mov
xor
ds
test
sbb
mov
xchg
sbb
jno
cmpsl
mov
repnz
pop
and
imul
jno
mov
dec
mov
aad
ds
into
cmp
fmull
sbb
sbb
aas
popa
pop
and
jle
jo
xchg
inc
mov
mov
add
outsb
add
subl
dec
and
inc
mov
fcompl
call
test
xchg
inc
fdivr
mov
jae
jnp
lods
push
xor
push
mov
cwtl
or
jo
sub
test
mov
mov
jle
and
mov
pop
inc
movsb
jbe
xchg
xor
xor
push
push
stos
sub
mov
add
pop
jae
mov
cmp
cmp
imul
or
rcll
cwtl
pop
sbb
inc
repz
mov
mov
fs
in
xorl
test
jle
inc
arpl
or
add
hlt
stos
pop
dec
mov
js
aas
pop
mov
sbb
sub
jns
loope
daa
popa
imul
and
insb
je
test
nop
and
or
and
sbb
mov
int
jg
aad
negb
push
popf
adc
sti
mov
sub
mov
fwait
lahf
roll
mov
stos
xorb
mov
adc
or
int
in
sbb
add
push
dec
out
cltd
push
jb
lret
mov
sbb
mov
pop
cmp
mov
fwait
or
sahf
inc
daa
pop
into
lret
sbb
ret
cmpb
int
and
jp
or
out
add
pop
push
push
fstpt
inc
stc
andl
out
sub
in
sbb
stos
arpl
xor
jnp
add
aaa
dec
sub
bound
mov
sub
mov
dec
mov
inc
adc
xlat
popf
mov
mov
xlat
repnz
adcl
or
hlt
and
nop
sbb
adc
cmp
mov
pop
and
add
sbb
sub
sub
movsb
inc
sbb
lahf
inc
nop
idiv
lods
bound
divl
movsl
xchg
xchg
push
mov
daa
mov
mov
popa
jg
xor
int
mov
nop
lahf
xchg
out
lret
xor
add
sbb
sub
fistpll
scas
pop
pop
mov
rcl
mov
mov
mov
fimull
inc
lcall
in
cmpsl
jo
insb
pop
or
in
push
cwtl
mov
push
mov
jmp
ror
mov
adc
xchg
call
mov
xor
jo
mov
jae
ja
mov
insl
bound
or
pop
or
inc
mov
jecxz
nop
aas
popf
push
xchg
or
lock
icebp
add
imul
in
sbb
dec
les
sub
mov
in
out
mov
push
sbb
fstp
fmulp
sbb
movsb
pusha
or
shlb
push
leave
mov
inc
jo
adc
jb
rcrl
push
es
xchg
push
or
out
aam
cmp
inc
and
mov
mov
push
iret
inc
orl
sub
fwait
cmp
push
int3
orb
sub
ret
scas
loopne
sarb
push
push
leave
std
pop
lods
adc
add
push
repnz
cmp
add
adc
loope
inc
mov
es
aad
sbb
add
fistps
xchg
fbld
fdivr
xchg
sbb
subl
and
movsl
dec
icebp
add
jg
sbb
cmp
jne
cld
ror
cmp
cmpsb
pop
cmp
jp
push
cmp
repz
sub
mov
addb
loop
pusha
fldt
fdivrs
mov
push
fstl
dec
add
pop
repnz
mov
ret
fdivl
hlt
fmull
call
cmpsb
inc
jle
ja
mov
test
cmpsl
mov
inc
sub
aad
call
scas
fs
sti
leave
xor
in
and
in
je
incl
mov
rorb
lret
and
and
fwait
adc
push
lcall
insb
inc
mov
sub
bound
xor
lods
adc
cmpl
cld
nop
jge
pop
sarb
cmp
push
pop
jle
or
mov
add
shll
sti
out
jno
ljmp
adc
push
xor
decl
cli
jae
mov
cmpxchg
in
jecxz
push
sub
fs
xchg
dec
push
push
inc
cs
inc
shlb
xor
mov
movsl
dec
sti
fadds
dec
jmp
mov
or
dec
pop
sub
jno
mov
xor
mov
jae
movsb
adc
push
test
pop
xchg
inc
dec
divl
mov
pop
icebp
lods
inc
mov
pushf
aas
pcmpgtb
push
sub
stos
cmp
dec
sbb
sbb
mov
and
cmp
jmp
xor
idivl
and
mov
inc
cmp
fnsave
cmc
adc
mov
push
jg
ficompl
cmp
push
mov
lock
xor
jmp
xor
or
daa
loope
lods
das
jle
incl
out
push
xchg
fisubrl
fnsave
int
rcll
or
and
push
xchg
sub
into
add
jmp
push
pusha
in
lock
sarl
or
loope
out
adc
inc
iret
ret
cmpsb
sub
div
cmp
cmp
jno
enter
cltd
cs
outsl
ret
push
ljmp
bound
pop
and
lock
imul
push
daa
addr16
jno
nop
xchg
imul
and
sti
mov
mov
xchg
xchg
mov
leave
in
mov
xor
js
clc
clc
mulb
outsl
lods
loopne
xor
sub
xchg
int3
imul
push
xchg
in
xchg
sbb
add
subl
addr16
mov
lcall
xchg
lods
dec
add
sub
mov
out
push
pop
xlat
movmskps
cmp
out
out
mov
add
jae
loopne
mov
inc
jle
and
sub
data16
push
imul
test
rclb
or
dec
fwait
movsb
jmp
mov
fists
mov
sbb
sbb
jae
jecxz
bound
mov
inc
push
xlat
inc
insl
jo
lea
mov
rcll
mov
cmpsl
cltd
mov
imul
aaa
add
jnp
jge
mov
lods
adc
stos
mov
and
loopne
enter
clc
loop
push
daa
adc
out
and
leave
popa
out
xchg
sub
pop
gs
fucom
xchg
repnz
int
xchg
mov
sub
jle
mov
mov
cmpsl
icebp
scas
sbb
sub
pushf
cmpsl
cmp
pop
mov
mov
mov
scas
push
push
adc
and
dec
fdivl
in
jne
lcall
xchg
dec
scas
cmp
push
lds
js
push
mov
mov
scas
xchg
and
adc
push
dec
dec
sar
cmp
xchg
adc
add
xchg
inc
popa
push
sbb
and
inc
sbb
jp
ror
aad
cmp
sbb
sub
pop
cld
test
fsubrs
mov
xchg
add
faddl
jg
adc
rcrl
sub
daa
xchg
inc
mov
add
int3
fistpl
jne
addr16
stc
dec
aaa
dec
repz
push
xlat
fildl
jns
jae
cmc
jb
jg
test
push
and
xlat
sbb
or
cwtl
cmp
sub
inc
adc
xchg
ret
xchg
lret
nop
mov
lcall
nop
dec
lahf
ja
cmp
jne
rcrl
pop
jmp
pusha
shrb
xchg
xchg
fs
push
loope
mov
pop
mov
mov
adcb
push
mov
mov
inc
ja
divb
pop
jae
ds
jnp
sbb
push
mov
fst
stc
xor
adc
leave
dec
fsubr
int
xchg
xchg
insl
xchg
add
cmp
push
out
sar
leave
pop
jle
mov
test
loop
inc
push
shrb
addr16
clc
pop
lret
lcall
pop
icebp
mov
hlt
xor
mov
or
shlb
sbb
fldt
loope
stc
cmp
inc
aas
dec
addl
adc
push
sbb
out
shll
fsubl
subl
cmp
mov
test
popa
mov
popa
mov
adc
repz
xor
out
mov
or
loope
jge
cmc
xor
sbb
cmp
sti
leave
mov
lret
clc
hlt
xor
sbb
or
mov
dec
push
pop
xchg
adc
mov
lcall
clc
fwait
pop
and
rorl
inc
mov
lahf
dec
mov
outsl
pop
into
cmp
div
and
stos
xchg
in
js
int3
addl
stos
addl
add
rcl
or
ja
aas
mov
xchg
fwait
dec
test
fwait
lcall
pop
xlat
inc
xchg
xor
mov
adc
out
sub
xchg
inc
pop
std
arpl
fbstp
and
fsubrl
cmovle
xor
ret
loop
into
je
push
nop
add
repz
pop
popf
inc
sub
aaa
xchg
js
pop
adc
add
mov
jns
loopne
push
add
sarl
push
dec
add
aas
mov
cmp
cwtl
push
xor
sbb
test
lret
stos
inc
mov
push
adc
test
inc
shrb
sbb
ja
or
xchg
aam
inc
inc
repz
cli
andl
in
scas
lea
pop
sbb
mov
test
pop
je
loopne
mov
sub
clc
pop
xchg
fcomp
gs
add
call
add
push
cmpsb
fs
ss
and
and
cvtps2pd
into
into
cmp
ds
jle
mov
or
mov
movsb
enter
stos
sbb
push
cmp
sub
inc
data16
push
sti
mov
test
pop
outsb
es
jg
pushf
mov
scas
pop
sbb
icebp
add
sub
sbb
cmp
aaa
mov
sub
xchg
out
aaa
cltd
and
test
stos
lods
sbb
or
and
jmp
jl
nop
in
in
mov
cmpsb
mov
testb
jmp
jnp
sbb
cwtl
insb
xlat
sub
lds
stc
sub
jae
jmp
ds
jbe
and
fdivr
cmp
add
mov
dec
hlt
cmpsl
jp
xchg
leave
dec
mov
push
clc
push
sbbb
and
dec
or
frstor
jno
dec
add
inc
into
sahf
mov
loope
mov
xlat
xchg
xor
imul
popf
ffreep
push
xchg
mov
sbb
flds
aaa
xchg
or
jo
adc
inc
adc
sbb
movsb
lret
inc
cwtl
roll
lsl
jae
mov
sub
outsb
xchg
dec
mov
repnz
imul
pop
testl
rorb
hlt
fidivrl
nop
and
dec
sub
inc
lods
xchg
jae
test
dec
mov
jecxz
jns
and
std
mov
sarb
mov
subl
std
adc
xchg
add
mov
push
mov
sbb
pop
scas
push
mov
movb
in
xchg
dec
lret
lret
xchg
add
inc
jmp
mov
lock
movsl
out
xor
cltd
xor
fwait
mov
pop
pop
sbb
fidivrl
out
test
or
cs
push
ljmp
data16
dec
pop
xchg
rorb
mov
fwait
cwtl
pop
test
ljmp
int
or
cmp
sarl
mov
shrb
xor
aaa
js
sbb
imul
jmp
adcb
jae
xor
adc
pop
adc
outsl
and
mov
pand
sbb
in
push
or
fisubl
mov
orl
daa
enter
lea
mov
das
pop
loopne
jp
mov
and
xor
jle
cmp
adc
sub
imul
mov
ret
leave
adc
ss
test
pop
mov
lcall
mov
out
in
out
sub
test
out
sub
mov
inc
pop
scas
mov
and
enter
mov
scas
dec
or
pop
dec
test
pop
loopne
je
imul
mov
leave
cld
xchg
mov
call
push
imul
rcrb
mov
mov
aam
call
mov
int
ja
fs
imul
sbb
dec
cmpsl
aas
push
cltd
xchg
cmpsb
lods
shll
jo
mov
dec
dec
test
lcall
adc
inc
call
adc
loop
sbb
sbb
dec
xchg
enter
lcall
idivl
cmp
in
dec
nop
cltd
mov
call
xchg
add
inc
sub
loope
pop
sbb
cmpsb
xor
adc
mov
into
or
mov
jecxz
adc
push
cmpsl
inc
rcll
lods
mov
cmp
sarl
fildl
lock
stos
incl
add
aas
dec
and
rcrb
aas
jbe
push
sbb
mov
fstpl
cmp
cmp
loope
cld
adc
arpl
mov
xlat
pop
outsl
sbb
js
fcomip
inc
sbb
dec
es
andl
cmp
push
pusha
sub
jo
outsl
jecxz
sub
sbb
xor
out
jmp
fisubrs
flds
int
roll
jae
jb
or
cmp
adc
test
mov
jne
ss
dec
mov
mov
adc
addl
bound
ret
xchg
in
mov
add
and
push
or
add
xor
icebp
in
inc
and
std
jae
mov
push
fcomip
and
mov
movsl
dec
add
adc
inc
cmc
cmp
dec
outsb
gs
add
dec
or
mov
jmp
jbe
xor
cli
dec
mov
in
notb
mov
les
inc
mov
out
sub
mov
jbe
data16
sub
mov
push
adc
int3
out
sahf
hlt
mov
mov
cmp
inc
push
pop
cmpsb
je
fwait
out
mov
aam
push
mov
push
dec
push
daa
loope
sbb
outsl
or
sbb
dec
pop
xchg
or
mov
cltd
or
xor
xchg
out
rorb
sbb
mov
mov
push
stos
pop
pushf
xchg
push
mov
pop
jnp
lcall
andb
testl
dec
js
sbb
jmp
inc
movb
loope
test
push
pop
movsl
pop
pop
sti
ja
and
mov
in
daa
cmpsb
inc
aas
daa
jmp
ret
pop
adc
iret
mov
xchg
dec
jb
insl
out
jns
dec
mov
je
pop
mov
sbb
ret
mov
shrb
pusha
pop
dec
and
lods
inc
cmp
and
dec
sbbl
orl
pop
add
inc
dec
lcall
test
je
push
inc
mov
push
push
jp
cltd
push
lcall
mov
mov
fcmovne
or
pop
dec
mov
xchg
mov
fisubs
jb
out
mov
sbb
push
lea
cltd
mov
dec
inc
add
pusha
mov
iret
pop
out
inc
add
cmp
arpl
xchg
fidivrl
rcr
inc
xor
sub
imul
mov
push
xchg
push
xchg
or
sbb
lods
dec
cs
dec
bound
rcl
adc
subl
xor
mov
dec
sbb
sahf
adc
inc
in
mov
dec
dec
ja
arpl
dec
sub
popa
push
xchg
ret
jp
nop
decb
pop
jmp
push
adc
inc
dec
fisttps
pop
push
push
or
pushf
pop
push
jns
mov
sti
out
push
jp
xor
aad
xor
mov
out
fcoms
mov
pop
sarb
adcb
lret
inc
les
xor
ds
sbb
inc
pop
or
dec
xchg
jns
out
cltd
nop
aad
dec
sbb
jns
out
and
jmp
out
aad
mov
mov
leave
out
lret
xor
or
hlt
xor
cmpsl
push
mov
pop
lcall
sub
or
mov
cwtl
mov
sbb
cmp
jns
push
xor
daa
jo
or
dec
sbb
fs
cmp
rsqrtps
outsb
mov
hlt
pop
ljmp
add
adc
jg
inc
ljmp
push
dec
add
sbb
cs
cs
cmp
cwtl
mov
incl
xchg
sti
cltd
sub
mov
inc
and
jge
cltd
lret
js
ja
sub
mov
sbb
je
dec
cld
ljmp
adc
int
hlt
sub
fcmovbe
jnp
vmwrite
xchg
scas
adc
pop
movsl
dec
dec
xchg
pop
sahf
insb
adc
mov
adc
aas
ljmp
mov
sub
stc
adc
lret
fwait
cld
mov
push
fiadds
inc
jno
xor
pushf
cmc
clc
inc
jecxz
sarb
push
push
jg
xor
sub
in
ljmp
sbb
cmp
push
out
hlt
push
jg
push
test
dec
pop
jb
addr16
or
not
adcb
inc
push
push
out
dec
shl
sub
decl
in
les
add
icebp
mov
xchg
xchg
adc
dec
aam
mov
rcrl
pop
es
std
jbe
pop
pop
xor
in
gs
pop
aas
xchg
add
cltd
mov
dec
sbb
mov
ret
mov
cltd
int
adc
and
or
push
lods
cmp
mov
outsb
jle
mov
hlt
dec
xor
rorl
jns
cltd
cwtl
mov
sub
call
sub
ret
xchg
stc
clc
addr16
stos
divb
jle
cwtl
sub
pop
and
outsb
into
gs
mov
pop
cwtl
daa
push
mov
test
mov
fisttps
loopne
lds
mov
fldl
add
jns
xchg
pop
pop
xchg
lock
jg
shll
fstl
dec
cmp
divw
sbbb
pop
and
in
ljmp
push
dec
mov
lret
shrl
shrb
mov
lahf
mov
mov
imul
imul
sub
jae
pop
xor
mov
mov
xchg
scas
push
movsl
jmp
jae
inc
inc
addb
push
fldl
int3
lods
shll
popf
in
ret
push
ja
push
inc
les
cmp
es
sbb
mov
inc
mov
movsb
xor
inc
stc
ret
dec
dec
loopne
or
dec
pop
dec
popa
sbb
nop
fwait
xchg
push
in
add
icebp
js
and
dec
das
rcl
aam
and
push
mov
pop
scas
fadd
xchg
mov
xor
cmp
sub
push
out
loopne
icebp
jl
movsl
sbb
cmp
scas
rorb
subb
ljmp
daa
inc
jmp
push
fimuls
arpl
fadds
xchg
rcll
rep
ret
out
fsubr
xlat
mov
enter
lcall
aam
test
je
sahf
mov
cld
sarb
push
faddl
pop
int
scas
pushf
daa
lods
imul
xor
orl
adc
je
push
pushf
cmp
jne
or
push
lea
cmp
or
jnp
add
dec
ret
or
shlb
sbb
test
mov
lods
clc
sbbl
pop
pop
inc
mov
push
sar
or
push
mov
push
and
and
lods
add
cwtl
sub
jnp
dec
pop
repnz
fwait
incb
xor
cmp
jnp
cmp
lret
and
jmp
stos
outsl
push
dec
enter
rcrl
push
or
sub
pop
call
sti
inc
mov
arpl
and
arpl
jmp
push
add
or
xchg
fldl
mov
div
push
hlt
mov
xchg
or
not
xchg
pop
dec
icebp
push
xor
testb
cmp
pop
inc
aam
xor
ret
je
xchg
inc
test
and
or
sbb
sub
cmp
adc
clc
jecxz
pushf
push
push
and
out
jno
xor
jmp
sbb
sbb
fsubrl
loop
fscale
adc
add
xor
scas
mov
sub
out
adc
xchg
xor
fdivl
dec
or
xlat
das
fsts
inc
mov
loopne
jle
dec
lcall
jb
push
pop
out
xchg
jns
inc
jle
out
adc
stc
pop
pusha
mov
ja
sti
repnz
and
ffreep
inc
inc
adc
xor
dec
jecxz
xchg
sti
mov
mov
xor
out
and
mov
jo
xchg
outsl
ss
sti
and
mov
sbb
adc
out
sub
mov
xor
or
cmpsb
or
test
cmc
jecxz
or
jae
cld
add
fwait
aad
imul
ss
hlt
mov
cld
push
cmp
push
sbb
imul
gs
cmc
dec
out
dec
dec
cmp
mov
sahf
js
negb
or
jae
andb
mov
addl
sub
mov
and
xchg
int
pop
and
inc
pusha
sub
bound
bound
jge
and
add
jns
inc
add
adc
ror
out
push
xor
mov
mov
fs
cs
in
or
out
in
pop
out
sbb
jno
xchg
xor
jb
test
test
jno
sahf
arpl
scas
mov
cmp
jge
mov
stos
mov
lahf
add
outsl
movsl
jne
loop
call
pmulhw
cmp
mov
pop
cld
mov
xor
add
out
sbb
mov
dec
lds
dec
fdivr
adc
fwait
mov
hlt
bnd
fdivl
cmp
scas
inc
into
je
popa
repnz
fdivl
jne
sbbl
inc
js
out
movsb
movsl
imul
out
stc
ror
add
adc
fisttpl
enter
push
ja
cmp
vpmadcswd
popa
jle
push
insb
enter
mov
xlat
and
inc
aas
rcll
sbb
lock
lret
xor
mov
push
push
stos
fcoml
call
outsl
adc
mov
out
cli
fistpll
push
sub
insl
repz
lock
sbb
jmp
xchg
rcl
pop
les
sbb
adc
pop
mov
outsb
movsb
xchg
fisubl
aam
shrb
into
ja
mov
addr16
ljmp
or
fwait
test
sbb
outsl
fldl
inc
xor
pop
dec
or
xchg
or
mov
and
mov
test
outsl
fistpl
pop
leave
repnz
mov
inc
lods
out
mov
lret
pop
ret
popf
add
out
lods
lds
test
mov
scas
cmpsl
lods
pop
out
inc
rorl
lock
rcrl
int
outsb
xchg
push
jo
idivl
cmc
mov
jbe
push
sbb
fcomip
outsl
and
push
mov
mov
stc
mov
mov
or
je
jl
test
fnstcw
mov
push
inc
lea
add
mov
mov
sub
cmp
dec
cmp
icebp
pop
movsb
and
dec
mov
out
push
jbe
jp
rclb
test
dec
data16
fcomps
inc
lods
mov
insl
and
mov
mov
sti
cli
outsl
fisubrl
add
mov
insl
pop
jp
xor
sbb
lods
aam
dec
dec
pop
not
or
je
ficompl
jp
clc
jmp
cmp
aaa
inc
in
pop
rcll
cmp
fmul
rclb
fcmovnu
out
cmp
sarb
inc
mov
adc
inc
inc
jne
push
and
data16
repnz
fs
cli
mov
movzwl
stos
out
in
mov
and
pop
outsb
ret
jge
arpl
push
ret
push
inc
jge
fisubs
cmp
enter
adc
cmp
iret
mov
pushw
mov
enter
repnz
or
mov
fsubrl
lock
arpl
loop
addr16
mov
jae
jae
sub
mov
in
iret
out
test
test
inc
leave
push
jecxz
cmp
push
rcrb
rcrl
jmp
sbb
push
xchg
push
xchg
xchg
push
popf
jns
dec
adc
push
xchg
mov
lret
push
or
adc
or
aaa
pushf
movsb
jg
cmp
and
mov
pop
push
xor
shl
arpl
fisubl
jge
sbb
mov
outsl
nop
popa
or
sub
add
push
lret
adc
dec
and
mov
push
xor
cli
js
pop
popf
adc
lahf
push
in
scas
dec
dec
xor
cmp
int
mov
push
fisttpl
sbb
clc
mov
lods
adc
aas
cmp
mov
xchg
test
jecxz
dec
stos
adc
iret
jbe
stc
and
or
mov
lods
test
gs
rcll
icebp
and
in
mov
mov
ss
stos
ljmp
out
dec
fs
push
jmp
add
jbe
cmp
in
sub
pop
xorl
xor
push
pop
out
jnp
cwtl
xor
movsb
loopne
cmp
stos
dec
test
shl
out
scas
add
rcll
inc
jmp
inc
jmp
scas
adc
loope
cmpsb
pushf
jmp
imul
sbb
mov
mov
rcll
dec
mov
xchg
movsl
cmp
loope
inc
jne
sbb
lret
divb
lretw
jge
mov
imul
pop
mov
insl
xor
mov
pop
push
inc
inc
xorb
out
or
mov
daa
dec
outsb
mov
imul
leave
inc
pop
loop
lock
push
and
push
es
cmp
fstpt
xorb
rclb
shlb
decb
and
adc
insb
sub
xchg
sbb
shl
int
hlt
and
xchg
xchg
jo
jl
sbb
pop
pop
lods
mov
adc
mov
rclb
push
dec
cmp
cltd
xchg
inc
pop
mov
or
inc
test
sbb
movsl
movsl
fs
cmp
xor
mov
jbe
stc
sahf
pusha
jne
hlt
outsb
out
fidivrl
adc
or
mov
xchg
push
mov
sbb
add
sub
shlb
andl
inc
xorl
in
jg
cmp
xlat
adc
mov
subb
sub
xchg
insb
mov
pop
or
jl
pop
fdivr
fdivrs
out
loopne
add
add
adc
jecxz
gs
xchg
in
shll
ret
insl
jp
aam
dec
aaa
inc
das
dec
add
rcr
popa
in
sbbl
jp
push
mov
adc
mov
sbb
lret
call
jae
fidivs
push
pop
enter
mov
mov
pop
adc
test
fdivs
lcall
aas
sti
adc
mov
loope
push
call
or
cs
stc
add
pushf
movsl
jae
xor
lds
lcall
jge
mov
mov
addr16
pop
cltd
inc
fwait
rcrb
cltd
add
stc
xchg
xchg
push
xor
lret
mov
or
pop
lcall
std
jns
pop
leave
push
cli
stos
aas
mov
pushf
test
cmp
fnsave
movsl
incb
mov
inc
clc
mov
leave
hlt
inc
or
add
sbb
outsl
aam
pop
aaa
push
ret
mov
aad
xor
push
imul
sbb
mov
std
and
lods
mov
lcall
adc
jle
je
bound
ja
jae
leave
cs
jbe
xchg
and
arpl
inc
in
cmpsl
int
mov
outsl
test
cmpsl
test
lea
test
pushf
movl
push
mov
rorb
fmull
or
pop
dec
pop
jp
mov
xor
std
cmp
fisttpll
pop
xchg
lret
jns
adc
outsl
sub
mov
divb
xor
xchg
je
pop
sbb
mov
and
addb
repz
mov
icebp
jge
mov
and
les
push
jmp
cmpsb
sub
ret
xchg
aam
je
mov
bound
dec
fildl
fadds
jge
add
xchg
call
roll
push
add
cmp
mov
mov
inc
arpl
mov
sahf
xchg
rorl
mov
ret
pop
into
or
pop
into
push
mov
pop
stos
aaa
sbb
pop
mov
fcompl
enter
sbb
push
test
push
icebp
and
xchg
ret
xorl
lea
rorl
sub
popa
fisubl
nop
mov
inc
and
or
push
outsb
ret
xlat
inc
mov
jg
mov
sbb
pop
push
push
inc
adcb
aaa
pop
call
mov
clc
push
call
push
mov
aad
in
mov
imul
insl
inc
pushf
add
lahf
fdivl
or
xor
rcrl
and
enter
sbb
add
xlat
lret
cltd
les
push
pusha
mov
xor
movsl
aad
cli
or
cmp
std
stc
cmp
xor
dec
mov
mov
dec
addr16
inc
mov
add
testl
push
mov
adc
xchg
xchg
and
addr16
push
mov
out
jecxz
inc
loope
mov
sub
pop
or
sub
add
test
mov
cltd
rcrb
add
out
xchg
dec
movsb
dec
shrb
shl
or
cwtl
cmp
and
push
jne
dec
jecxz
pusha
not
stc
xchg
aam
add
push
cmp
daa
jmp
pusha
mov
fnstsw
fidivrs
adcb
xor
add
mov
fnstsw
mov
adc
inc
xchg
or
scas
ficomps
in
push
lock
test
pusha
pusha
insb
andb
lret
lcall
sbb
ret
rcll
in
push
pop
sbb
loop
cs
push
cli
mov
xchg
sti
in
mov
fnstenv
sbb
outsb
pop
adcb
popf
imul
inc
cli
cmp
loopne
shlb
stos
add
mov
test
xor
xor
movsb
xor
xchg
fwait
xlat
adc
or
loopne
sarl
bound
lock
movsl
pop
dec
sub
addr16
cmp
scas
jecxz
bound
leave
mov
push
jl
sub
stos
cmp
sub
add
imul
fistpl
inc
dec
sub
shrl
jbe
sub
lret
lcall
sub
push
and
xchg
cltd
ds
lahf
stos
push
es
jbe
push
inc
popa
stos
push
insb
dec
loop
and
jne
fcoms
dec
or
mov
cli
insl
mov
lahf
fisubs
jb
jge
xchg
in
fwait
lahf
hlt
xor
movsb
popf
test
lret
xlat
lods
pop
stos
or
dec
dec
aad
sarb
test
sub
mov
and
xchg
adcb
stos
pop
cmpb
mov
aam
ret
inc
and
push
mov
fdivrl
cs
bound
sub
loop
movsl
mov
lds
in
mov
mov
pop
cmp
mov
jne
data16
rolb
cltd
add
push
cli
repz
lods
xchg
jge
mov
lods
inc
push
and
xor
adc
xor
mov
push
pusha
test
int
rorb
mov
dec
loop
testb
jp
mov
inc
cmc
test
int
mov
adc
out
loope
fdivr
jge
aam
inc
popa
pop
aam
lods
fs
insb
and
cs
push
and
cmc
sahf
cmp
cmp
mov
and
aaa
xchg
hlt
mov
inc
dec
int3
or
mov
out
jg
jne
dec
mov
mov
test
cmpsl
inc
add
mov
mov
sbb
xchg
orl
gs
mov
jp
jmp
xorb
sub
adc
push
pop
push
push
imul
test
pop
push
sbb
mov
stos
mov
ljmp
inc
cmpsb
adc
fldt
inc
sbb
ja
in
movsb
movsl
int
into
int
sbb
lcall
push
and
out
outsb
bnd
jae
data16
call
mov
mov
jp
insb
out
ret
data16
xchg
cmp
rcrb
xchg
mov
popl
std
and
rclb
insl
test
das
jmp
cmp
cmpl
and
push
roll
std
sbb
pop
enter
mov
ficompl
addl
xchg
mov
inc
dec
idiv
cmp
pop
aas
movsb
mov
stc
mov
aaa
jo
out
push
jg
sub
sub
fwait
cmc
mov
mov
xor
jbe
aaa
pusha
enter
adc
mov
xchg
push
loopne
mov
pop
aaa
sub
xchg
or
jecxz
shl
pushf
xor
jo
and
jge
js
shll
scas
in
arpl
dec
sbb
addr16
add
inc
cmp
mov
movl
add
mov
jns
push
mov
movsl
in
dec
jb
testl
hlt
popa
mov
add
cmp
sub
mov
adc
jno
mov
mov
rcrb
dec
std
loop
dec
stos
push
mov
dec
mov
jbe
jbe
adc
addr16
adc
push
cmove
loop
or
testb
push
pop
fxch
in
shrb
mov
mov
int
gs
or
pusha
ljmp
push
rorl
sbb
add
sbb
insb
stc
jo
and
andl
inc
enter
arpl
cwtl
xor
inc
xor
mov
or
es
push
das
xchg
push
lock
pop
ljmp
hlt
int
adc
data16
xor
leave
adc
repnz
sbb
push
or
insl
icebp
dec
add
in
dec
and
mov
incl
std
dec
clc
and
pop
push
dec
lret
repz
push
xchg
jge
xor
jp
insb
sub
in
int
push
bound
outsl
jp
and
out
dec
testl
lods
mov
and
test
sbb
jmp
out
xor
lahf
pop
inc
mov
inc
mov
xchg
fdivrl
fcom
mov
xchg
ljmp
scas
mov
inc
clc
mov
mov
jno
out
rcrl
pop
push
push
js
and
mov
insb
lock
les
dec
push
or
outsb
mov
arpl
jne
inc
int
and
push
pop
lock
dec
test
push
mov
fdivrs
sbb
shlb
fdivrp
dec
sbb
xorb
scas
mov
mov
imul
in
mov
or
xor
xchg
sti
inc
inc
and
jae
stos
lret
loope
dec
dec
add
push
shrl
or
sahf
inc
sub
pop
in
mov
out
mov
mov
adc
xchg
sbb
out
xor
divl
mov
sbb
inc
dec
jl
fisubrs
mov
cmp
mov
int
loope
jno
into
jae
adcl
sub
outsl
jmp
adc
push
aam
xor
leave
outsb
rcrb
cltd
mov
mov
or
sbb
cmp
adc
popa
shrb
xchg
mov
sbb
adc
movsl
stos
gs
jnp
sbb
fsubrs
dec
cmp
cwtl
xor
add
pop
nop
es
add
cmp
orl
out
cmc
out
in
mov
nop
in
pop
mov
or
ds
xor
das
pop
cmpsb
xchg
push
lret
or
lret
xor
or
clc
arpl
in
ret
jl
test
mov
cmpsl
in
shrl
xchg
jl
mov
rcr
push
cmpsl
jl
stc
dec
xor
mov
fnstsw
js
add
inc
mov
scas
cmpsl
jb
lcall
inc
in
ficompl
fstpl
icebp
pushf
sub
mov
ret
jle
int
xor
movsl
mov
in
xchg
jbe
push
es
iret
iret
mov
pop
hlt
and
in
mov
mov
lret
ror
in
jbe
jge
add
daa
pop
stc
sti
ret
mov
xor
mov
outsl
and
adc
cs
pop
mov
pop
out
test
or
sbb
loopne
sub
fsubl
ret
sub
sub
sbb
movsb
and
loopne
pop
rcl
stc
xchg
pushf
push
jns
push
iret
push
push
mov
pusha
cmp
nop
aam
cmp
and
scas
and
in
xchg
xchg
flds
cmp
sbb
ficomps
push
mov
pop
mov
bound
fs
sub
ljmp
stc
ja
fidivs
jg
lea
sub
push
push
lods
outsb
popf
or
je
sub
mov
in
rcrb
push
imul
and
cmp
jns
sbb
dec
cld
mov
nop
dec
imul
push
movsbl
inc
push
jo
add
pop
sahf
shlb
rorb
iret
cmp
pop
or
repnz
cli
push
lods
cmp
movsb
adc
addb
lahf
push
push
nop
clc
cmp
test
int
daa
mov
jp
sub
inc
sbb
xor
sar
leave
xchg
sub
dec
push
mov
jno
sub
popa
fsub
fcmovne
imul
pop
imul
ljmp
imul
movsb
adc
cmpl
and
icebp
js
sub
sub
test
dec
fwait
mov
lock
sbb
cltd
lea
fisubrl
mov
push
jo
fidivrl
sub
xchg
lds
jnp
xor
dec
mov
xchg
movsl
sub
cmpsb
push
jo
fimuls
add
pop
subb
and
scas
lret
push
ss
adc
xor
stc
aad
cmp
gs
mov
repnz
repnz
add
sub
repz
js
and
mov
sub
jbe
and
add
inc
and
xor
int3
mov
adc
inc
mov
loopne
insl
jb
scas
xchg
dec
mov
xlat
or
sbb
lods
je
out
mov
cmpb
or
rorl
sbb
adc
cmpsl
in
bound
adc
dec
shlb
pop
lret
push
cmc
aad
loope
pop
adc
pop
xor
stos
and
enter
loop
xor
test
xchg
ss
jno
push
cwtl
in
xchg
lcall
sbb
shl
xchg
cmp
dec
incl
xor
sbb
and
sti
mov
push
dec
in
pop
xlat
mov
pop
cmp
cld
lea
scas
imul
mov
adc
imul
mov
ss
cmpsb
jae
inc
xor
scas
pop
mov
scas
sbb
sbb
push
inc
pop
lods
ficoml
xchg
mov
inc
cwtl
sbb
pusha
inc
test
cmp
push
scas
sub
mov
xchg
dec
call
or
imul
ja
sbb
sbb
pop
or
test
mov
popa
sub
int3
push
iret
push
add
sti
js
pop
inc
dec
add
cmp
and
sub
repz
add
and
adc
xor
add
or
and
fs
mov
jp
pop
cmp
insl
je
xor
cs
mov
insb
inc
scas
push
clc
xor
pushf
ret
or
sahf
or
fxch
mov
shll
mov
adc
loopne
loop
stc
push
mov
adc
loope
inc
leave
popw
dec
subl
sysexit
in
dec
add
int3
dec
and
cmp
push
dec
jecxz
sub
xchg
and
mov
push
mov
stos
dec
cmc
add
sbb
mov
in
fwait
dec
jns
daa
fistpll
in
andb
int3
mov
cmpsl
loop
and
jnp
and
jp
cwtl
adc
aaa
mov
lds
call
lea
out
jne
fwait
scas
mov
lods
leave
popf
adc
fldcw
in
inc
mov
inc
jne
out
adc
jno
in
sbb
or
leave
mov
push
inc
imulb
or
jbe
and
ret
push
popa
mov
push
adc
pop
js
mov
jo
aas
int3
push
inc
call
inc
inc
push
imul
and
adc
fnstenv
dec
pop
add
lret
inc
jbe
cwtl
imul
ds
xchg
arpl
pop
int
jle
and
pop
xor
gs
js
pop
fwait
pushf
test
push
ds
xchg
xor
daa
pop
push
sub
add
scas
imul
jg
out
and
fwait
cmp
jecxz
test
xor
jb
mov
faddl
fstpt
cmp
call
paddq
xchg
aas
xor
js
xor
adc
das
mov
sti
test
pmaxsw
mulb
pop
nop
xor
mov
push
xor
scas
fnstsw
sub
sub
imulb
mov
xorb
cltd
pusha
cmp
jo
in
inc
add
add
std
dec
jno
xor
aam
idivb
xor
add
sahf
incb
aaa
ja
fldl
sub
push
inc
ljmp
in
and
dec
insb
inc
sbb
xor
add
rcll
cmp
xor
xchg
xor
pop
subl
inc
push
imul
mov
fisubrl
adcl
stc
repz
jge
mov
dec
mov
sbb
cmpsb
std
sbb
loopne
fimuls
movsl
add
jmp
sti
sbb
mov
inc
icebp
lods
cld
dec
mov
in
cmp
xor
mov
jae
xor
gs
and
pop
jbe
pusha
mov
cmp
inc
fldenv
mov
sub
sub
test
movntps
ds
hlt
xor
aaa
sub
popf
adc
adc
sub
and
inc
xchg
daa
pop
jne
test
movsb
mov
lcall
mov
mov
lock
insl
xor
jecxz
jns
scas
push
in
or
and
mov
jno
loope
andb
sar
fcomps
nop
nop
mulb
add
dec
pop
data16
xor
jp
and
mov
xchg
add
fistpl
sbb
inc
movsb
popf
push
xchg
or
repz
dec
sbb
dec
jmp
xor
xchg
jp
add
jmpw
je
adc
arpl
jmp
lds
js
mov
xchg
clc
mov
and
cli
mov
jg
xchg
mov
push
jo
add
fisubrs
push
mov
sub
add
inc
enter
sarl
sbb
or
mov
scas
icebp
dec
mov
cmp
loope
into
clc
lock
out
and
xchg
add
std
mov
dec
adc
jp
or
and
cs
scas
mov
sbb
cmp
mov
mov
sbb
movsb
and
into
push
sub
repz
stos
ss
outsb
data16
jno
call
ds
stos
sbb
or
add
adc
push
pop
out
cmp
frstor
or
or
pop
daa
loopne
adcl
iret
jns
adc
dec
js
addb
cmc
add
jp
mov
fists
js
lcall
movsl
pop
xor
jmp
jb
test
mov
pop
sub
mov
push
adc
aad
shl
dec
in
cmp
jb
rolb
add
push
sbb
or
pop
sub
out
mov
sarb
push
add
cmp
or
cmp
rcr
adc
ret
mov
div
popf
xchg
jmp
lds
xor
jl
cmp
repz
inc
pop
mov
adc
dec
cli
cmc
jns
xor
arpl
cmp
dec
push
cmc
xor
adc
cltd
jne
daa
mov
xchg
loope
test
fcoms
adc
push
addr16
inc
es
out
and
xchg
pop
sub
adc
sub
dec
add
js
or
inc
add
jmp
xchg
es
pop
mov
std
sub
pop
lcall
ja
sbb
mov
scas
repnz
mov
mov
inc
xchg
neg
pop
lret
xor
fcmovnb
cmp
ret
rcrb
cld
rorb
in
ret
in
shll
xor
in
and
mov
test
jae
push
mov
filds
cwtl
mulb
lret
pop
repz
mov
in
outsb
stos
lcall
inc
jg
movsb
dec
mov
adc
orb
push
stos
clc
ja
cmpsl
push
push
jmp
das
push
adc
icebp
das
fdiv
das
mov
jmp
push
xor
push
push
in
or
les
jp
xchg
aaa
sbb
add
in
shlb
mov
leave
push
ret
cwtl
call
dec
popf
inc
add
mov
inc
sbb
cltd
xlat
xor
push
cmp
repz
cmp
mov
xor
adc
cwtl
fbstp
movsl
andl
sub
loop
mov
and
out
xor
arpl
xor
hlt
cmp
sbb
cli
push
xor
xor
mov
jne
mov
mov
leave
shl
pushl
dec
hlt
push
or
xor
inc
sbb
and
iret
movsl
imul
and
push
add
lahf
dec
call
loopne
pop
fnsave
dec
sbb
in
mov
push
mov
inc
std
orb
pop
dec
jno
xor
out
cmp
inc
loopne
add
or
pop
dec
pop
inc
aas
aam
inc
lahf
add
fcmovb
push
jge
scas
mov
fsts
add
into
mov
push
into
push
test
cmpsl
ret
ljmp
loope
aam
test
jmp
leave
adc
inc
scas
andl
fbld
xchg
xchg
jge
bound
rorb
xchg
and
jne
adc
mov
scas
adc
gs
aam
add
out
int3
popa
dec
aam
mov
mov
sbb
data16
out
lods
icebp
mov
ljmp
bound
cwtl
jno,pn
sub
setl
inc
lahf
or
loop
push
inc
mov
xor
jno
idivb
mov
into
insl
outsl
adc
mov
xchg
push
les
push
lcall
jmp
ss
pop
adc
xchg
cld
cwtl
sub
sahf
cmpb
fs
fwait
xlat
and
xchg
imul
xchg
ret
dec
nop
xor
popf
stos
stos
in
lahf
jl
dec
xor
dec
scas
out
push
xorb
jle
jae
xchg
in
std
scas
sbb
pop
or
lret
add
pushf
movsl
imul
les
pop
imul
cmpsl
cmp
negl
loop
pop
leave
sbb
iret
popl
cmc
xchg
sbb
mov
xchg
ds
fs
xor
stc
sbb
adc
add
mov
cmc
mov
pop
testb
orl
and
ds
sahf
out
push
rcll
daa
nop
cmp
fwait
xchg
jmp
xor
andb
jne
pop
jo
int3
fwait
jge
jg
bound
fwait
pop
sub
jp
mov
cld
sbb
xor
and
out
idivb
cltd
cmpsl
into
jmp
and
or
aad
xor
jo,pt
and
popf
xor
imul
sbb
pop
cmpsb
lea
mov
dec
push
jl
dec
inc
ds
inc
in
mov
sahf
fdivrp
mov
test
push
pop
sbb
imul
jne
sbb
lods
js
call
popa
pop
sbb
add
pop
stos
push
mov
pop
and
frstor
xchg
scas
and
sahf
loope
push
lret
or
pop
ror
sti
call
loopne
inc
sub
pusha
push
cltd
push
xlat
xlat
in
cltd
outsb
test
push
pop
or
je
outsb
jle
sub
pop
repz
imul
adc
adc
into
and
fldl
ds
and
lods
push
dec
adc
clc
fwait
sub
clc
xchg
data16
jnp
push
fstpt
jnp
add
mov
sahf
les
push
movsb
arpl
push
data16
xor
into
jmp
mov
jge
or
inc
and
fwait
repz
fimuls
sbb
mov
lock
and
push
jo
jno
std
rcll
inc
sbb
or
mov
addl
sub
std
shrl
push
fcomps
adcb
in
js
mov
sub
push
mov
loopne
push
sub
mov
jnp
out
out
dec
dec
sub
loopne
push
push
mov
pop
fcomps
in
lcall
scas
adcb
imul
aam
inc
add
mov
jl
inc
and
lds
adc
notl
mov
imul
cli
cmpsl
repz
movsb
push
lods
scas
outsl
xor
ret
cmp
push
jle
mov
mov
dec
mul
adc
xor
or
and
fdivrl
push
pop
mov
jne
or
lcall
xor
cli
ss
jno
jecxz
dec
dec
sti
jno
leave
sbb
jne
sub
cmp
ds
adc
inc
cmp
adc
mov
sti
aam
cmp
sti
imul
mov
mov
lods
push
enter
xor
push
les
push
mov
jns
push
mov
out
mov
gs
jle
repnz
shl
stos
cwtl
nop
push
or
aas
lcall
sub
jmp
cld
pop
cmc
popf
ja
das
int
xchg
cmpsl
pop
into
rorb
aaa
push
sub
xchg
mov
inc
repz
outsb
or
jle
xchg
lcall
call
pop
js
nop
mov
andl
push
fcoml
rorl
cli
sub
jb
xchg
out
test
or
xchg
test
fcomps
in
xchg
insb
in
repz
adc
add
in
ret
jb
sbb
test
xor
jmp
ljmp
push
mov
es
in
pop
adc
addl
sahf
lret
outsb
imul
repnz
mov
push
lret
rolb
scas
pop
lods
dec
pop
insb
rcrl
dec
sub
or
jmp
or
outsl
icebp
xchg
sub
dec
clc
pavgw
sbb
insb
stos
stos
push
ljmp
ja
pop
mov
inc
cmp
jl
xchg
xchg
in
fs
push
loop
mov
jmp
aas
dec
xorl
mov
mov
aaa
lret
sub
sbb
ficomps
sbb
jecxz
cwtl
pushf
ret
dec
mov
aas
add
nop
add
adc
inc
movsl
outsl
cwtl
push
ds
lret
div
and
xchg
sbb
movsb
mov
into
pop
hlt
nop
and
sub
inc
xchg
decb
fs
aam
lret
test
lds
adc
cmc
data16
pop
stos
xchg
shlb
xor
or
xchg
jne
addr16
fcoms
rcll
shrl
add
in
or
xor
and
out
cmp
xor
cli
or
lahf
cmp
insl
cmpsl
clc
sub
scas
out
out
xrelease
lret
das
mov
dec
cmp
dec
and
out
or
xchg
inc
mov
lret
dec
frstor
mov
xchg
ja
or
push
mov
popf
mov
push
add
xor
xor
rcrl
outsb
or
sbb
fwait
loopne
push
pop
adc
insl
nop
mov
mov
adc
mov
push
cmp
xor
sub
xor
jo
mov
mov
sbb
pop
mov
insb
mov
dec
shl
shrl
in
dec
mov
std
cmp
and
cmp
mov
mov
fwait
xchg
lret
inc
sbb
cmp
out
inc
or
jae
jl
jl
pop
mov
adc
testl
divl
aad
imul
cltd
or
xchg
dec
hlt
or
ret
jle
push
mov
lcall
jnp
dec
aam
fldcw
mov
and
push
xchg
leave
nop
sbb
test
subb
push
xchg
leave
mov
inc
xor
in
xchg
push
dec
add
fimuls
xor
sbb
jo
mov
lret
cmpsl
dec
lods
aad
and
mov
xor
mov
push
lret
popa
cld
ljmp
mov
rorl
mov
add
sub
push
lahf
cltd
rcrl
hlt
fsts
aam
jg
lret
fwait
pop
cmp
sub
les
mov
sub
pop
scas
js
pop
out
mov
mov
or
and
or
ljmp
bound
aas
jae
push
aam
mov
arpl
or
inc
icebp
int3
jl
insl
in
gs
or
addr16
and
aam
mov
int
fistps
out
adc
dec
cmc
int
scas
mov
fldenv
imul
jmp
pop
leave
adc
jns
out
clc
insb
pop
and
loop
xchg
adc
loope
inc
rcr
push
xor
push
xchg
mov
adc
dec
and
mov
add
cmp
mov
out
mov
sahf
ror
fwait
mov
jle
and
loop
push
sub
jge
pop
nop
daa
xorb
addr16
cmpl
neg
push
js
jmp
adc
std
lds
iret
adc
jmp
cmp
xchg
fdivr
lret
les
in
jnp
jl
lock
inc
push
out
std
push
addr16
mov
jl
add
sbb
push
mov
bound
call
cli
adc
outsl
and
jg
and
sub
cs
test
imul
xor
popa
adc
paddusb
jns
cwtl
cmp
std
fnstcw
movsl
jno
stos
mov
mov
push
sbb
loop
pop
fisttps
adc
mov
jne
sbb
test
std
xchg
jp
dec
clc
jns
push
push
test
inc
add
roll
call
jb
jg
mov
outsl
mov
mov
subb
xchg
in
add
gs
icebp
addl
or
xor
lods
ja
rcrb
cwtl
xor
lock
cwtl
sub
negb
movsl
mov
push
bound
adc
mov
jbe
les
in
insl
jecxz
flds
popa
sbb
test
xor
mov
outsb
scas
arpl
cmp
lock
mov
sbb
jns
push
call
inc
outsl
in
sub
and
mov
rcr
adc
das
inc
mov
lea
adcb
cmp
inc
mov
gs
mov
cs
inc
test
xchg
jae
sbb
lock
cltd
adc
push
sti
xor
xor
scas
dec
pushf
mov
jl
fwait
stos
add
lods
adc
ds
jecxz
divb
cs
jp
xchg
cmpsl
add
push
das
out
adc
mov
call
gs
movsl
push
xchg
mov
daa
pop
ss
cld
add
mov
inc
add
dec
sbb
or
mov
std
mov
rcrb
arpl
addr16
sub
xorl
pusha
cmp
sub
imull
push
test
push
shr
dec
push
add
xor
pop
lret
jge
and
push
shlb
movsl
cli
xchg
inc
xor
fidivrs
das
push
clc
push
cmc
pop
mov
mov
aam
stos
imul
rolb
dec
cmp
sub
pop
mov
and
sbb
mov
mov
jmp
pop
fisttps
in
and
pop
in
inc
inc
adc
push
bound
lret
adc
leave
mov
dec
push
and
mov
inc
xchg
or
mov
sbb
pop
adc
aam
lea
push
cmpsl
negb
mov
shl
and
imul
jb
stos
fsubs
sub
iret
push
test
jbe
jecxz
jmp
pop
insb
out
mov
nop
inc
pop
loope
sbb
cmp
stos
mov
aam
aam
sbb
sub
pop
xchg
xchg
pop
test
enter
into
xchg
iret
fbld
xchg
push
sahf
hlt
flds
push
pop
xchg
xlat
push
inc
lahf
cmpsl
xorl
pop
xchg
jg
out
das
jle
xchg
nop
mov
pop
cli
fxtract
jae
les
fstp
sub
jecxz
sub
or
inc
xchg
adc
sahf
jo
xchg
lock
cmp
call
cmp
int
xchg
jg
dec
js
mov
clc
pusha
int3
mov
add
dec
add
repz
bound
jne
pop
rep
loope
hlt
cmpsb
jnp
mov
adc
rcll
mov
cmp
fmulp
mov
jle
std
fldt
mov
cwtl
ss
aad
cli
lock
sarl
aam
dec
mov
jmp
inc
stos
clc
and
mov
push
test
xchg
das
pop
add
cmp
pop
pop
int
ret
or
and
pop
popf
cmc
mov
xor
pop
daa
push
inc
inc
leave
mov
mov
inc
aas
inc
adc
sbb
out
sub
and
push
or
mov
pusha
cs
jmp
js
pop
fbld
cli
cmp
push
addr16
ds
inc
xchg
cmpsb
pop
loopne
jo
sbb
jns
xor
cmpsb
dec
push
test
mov
dec
stc
es
pusha
mov
pop
sub
add
repnz
or
cmpsl
pushl
xor
data16
and
adc
iret
leave
loope
xchg
mov
lds
aam
cmp
insb
addr16
add
pop
mov
cmpsb
sarl
icebp
xchg
mov
xchg
ret
xchg
leave
popa
cmp
bound
outsl
add
pusha
popf
lods
les
push
add
and
ret
and
push
insb
addl
sbb
test
jae
cmp
lcall
push
pop
lret
or
jmp
cmp
repnz
cs
pop
xor
mov
outsl
cs
dec
andb
pop
inc
mov
clc
sbb
and
test
testb
mov
push
cmpsb
and
lods
mov
inc
pop
push
sub
mov
push
orl
dec
fwait
cld
arpl
adcb
xchg
ss
rclb
push
xor
repz
jg
jae
aad
jb
mov
loop
adc
js
in
jne
ret
loopne
mov
sbb
sbb
xchg
test
sahf
mov
cmp
outsb
repz
jge
push
mov
jb
add
push
push
fidivrs
cmp
sub
jl
mov
inc
add
inc
hlt
cli
aaa
push
mov
ds
pop
adc
push
xor
push
mov
inc
loopne
jle
repnz
jbe
xor
adc
in
pop
jbe
sbb
xchg
test
and
pusha
mov
inc
and
push
cmp
xchg
jne
es
and
int
jl
movsb
sub
enter
pop
push
xor
insb
sbb
dec
leave
fiaddl
movl
shrl
fwait
push
mov
into
add
popa
and
cld
dec
mov
pop
jno
jo
jbe
out
sbb
js
sub
test
icebp
cmpsl
shll
cli
xchg
jmp
mov
or
outsl
stc
push
cld
lcall
pop
pop
add
inc
inc
jg
adc
stc
loope
imul
sub
adc
mov
cs
roll
xchg
cmp
les
xor
xchg
out
mov
lcall
iret
xor
jno
popf
ficomps
push
out
jecxz
add
std
mov
dec
ss
xor
test
cwtl
xchg
fisubs
or
je
stos
loop
rcrl
insb
sub
nop
int3
aam
mov
push
push
jg
inc
clc
cli
inc
fidivrs
cmc
push
pusha
jne
faddl
sub
mov
cmpsb
dec
rcrb
jg
pop
jbe
das
mov
stos
movsl
xor
sbb
cld
ss
fdivs
pop
sbb
lods
mov
out
cmp
sub
pop
sub
lahf
add
shr
popf
shll
daa
popf
jp
xchg
mov
xchg
inc
push
je
aad
daa
xchg
xor
dec
imul
sub
shll
mov
sub
or
and
leave
sub
test
mov
aad
push
sub
les
and
iret
clc
mov
mov
sbbl
rorb
test
mov
mov
inc
adc
aas
loopne
iret
aad
xchg
push
movsb
cmpsl
sub
cwtl
jo
adc
or
sbb
xchg
xor
ret
xchg
xchg
jmp
or
adc
enter
mov
dec
or
inc
and
idiv
jbe
xor
sahf
lret
sti
dec
fcomps
lods
xlat
sahf
icebp
int3
xchg
mov
loop
push
dec
rcll
xchg
pop
das
cli
call
add
mov
xor
pop
sub
mov
lahf
jb
imul
cltd
jg
aaa
and
fists
mov
cmpsb
outsb
jle
ret
pop
lcall
or
pusha
cmp
inc
div
icebp
test
pop
mov
loopne
rcrl
pop
pop
shlb
jns
divl
xor
loop
or
out
cmpsb
mov
and
mov
jmp
lods
dec
mov
inc
push
push
xor
push
leave
lock
cmpsb
sarb
rcrb
sub
push
pop
test
sti
scas
repz
mov
popl
pop
int
into
adc
addr16
bound
sti
xchg
mov
mov
outsb
xchg
in
add
mov
mov
xchg
stos
aaa
leave
aam
inc
int3
or
out
push
jne
stc
and
pop
and
sub
mov
add
pop
mov
and
add
test
xor
cwtl
pop
fadd
jle
cmpsl
cltd
pushf
jmp
ds
fisttpl
lret
nop
sub
test
int
mov
cmc
inc
outsl
imul
sub
adc
mov
sub
dec
js
mov
shlb
sbb
punpcklwd
mov
cld
test
loopne
cmp
lods
cvtpi2ps
popf
jp
aad
das
xchg
mov
popf
std
std
icebp
sbb
fisubs
push
and
mov
push
lret
sub
cmp
and
xor
push
loopne
icebp
xchg
inc
imul
dec
push
imul
mov
outsb
out
adc
jmp
fnstcw
or
pop
add
je
add
and
sahf
out
inc
in
push
ds
je
roll
mov
or
xchg
jo
pop
sbb
popf
clc
outsl
lahf
iret
dec
dec
xlat
stc
es
mov
cmpsb
loopne
mov
int3
dec
mov
sbb
sbb
out
stos
mov
scas
jae
sbb
xor
jp
jno
stos
cmpsl
push
sbb
lret
shll
lcall
sub
pop
and
mov
mov
idiv
fcoms
mov
in
mov
lcall
and
out
mov
aaa
fstl
loopne
insb
xor
jns
mov
pop
js
xchg
repnz
cs
mov
xor
cs
xor
ret
xor
shlb
sub
das
mov
mov
popf
adc
cmp
sub
jl
fadds
lea
cmpsb
fs
shr
mov
or
cwtl
cs
cmp
jb
push
adc
jmp
push
icebp
add
divl
jbe
cwtl
push
mov
rcrl
inc
movsl
mov
or
jmp
test
test
inc
push
lds
pop
inc
cmp
ret
xchg
lds
jl
dec
push
push
addr16
and
xchg
cmp
test
and
push
stos
cmpsl
xor
xchg
repnz
jno
out
enter
lock
cmpsl
cmp
xchg
and
add
fdivp
sti
test
rcrb
ja
push
les
repnz
les
pop
cmp
lock
mov
add
mov
xchg
inc
lret
mov
ja
mov
stc
mov
pusha
jbe
lods
xorb
cmp
aam
incb
add
or
enter
fnstenv
daa
ljmp
cmpsb
lret
ljmp
out
sub
xchg
push
adc
mov
push
sbb
inc
das
inc
mov
ret
das
fstpl
jp
test
enter
mov
cmc
cmpsb
into
add
and
mov
fmuls
rorl
jge
sub
jle
int3
add
jno
fwait
aad
xchg
hlt
pop
mov
cmp
lcall
mulb
mov
out
sub
shlb
sbb
pop
add
mov
fnsave
sbbl
and
bts
test
clc
in
xor
or
aaa
add
mov
mov
dec
cmp
loopne
mov
add
in
pop
ret
cmpsl
pop
pop
rcr
jnp
sahf
fstps
xchg
imull
cmpsl
adc
jle
daa
iret
out
mov
xor
rcr
pop
pop
andb
aam
fiaddl
repz
and
push
inc
lret
outsb
xchg
mov
xor
sub
sbb
jmp
xor
rclb
mov
repnz
scas
dec
inc
jb
xor
jecxz
adc
inc
mov
mov
push
lret
ss
enter
inc
nop
xor
mov
xchg
mov
inc
sub
insb
add
idivl
lret
mov
xlat
out
jl
dec
cltd
loope
bound
scas
ret
inc
loope
dec
ja
xchg
xchg
fistpl
jo
inc
mov
mov
loop
mov
pop
cmpsl
jl
lret
bound
pop
fs
pop
daa
inc
jo
inc
scas
pop
mov
xchg
popa
enter
stos
add
inc
xor
pop
les
daa
je
jp
or
sub
out
ss
cmpsb
shl
xor
fwait
jecxz
mov
cmp
sahf
inc
mov
xchg
lds
or
pushf
iret
xchg
fs
into
jae
hlt
arpl
inc
imul
lahf
dec
push
outsb
cmpsb
pop
lret
adcl
jge
sbb
cmp
fldl
mov
mov
ret
inc
mov
in
sub
shl
lcall
into
mov
aaa
imul
pusha
int
push
lret
xlat
mov
mov
or
lods
insl
leave
fimull
inc
jae
cmp
cli
sub
pop
pushf
and
gs
mov
pop
jb
xor
subb
xchg
ljmp
mov
lock
inc
fildl
jmp
sbb
push
dec
stos
dec
mov
dec
mov
ja
enter
ret
push
btl
pop
cmp
insb
adc
and
jno
mov
je
inc
pushf
pop
cltd
shl
push
test
push
dec
adc
mov
sub
jne
aam
pop
sbb
add
in
fistps
test
add
ja
test
pop
push
push
rcr
nop
dec
mov
dec
adc
aas
in
stos
out
push
test
gs
push
sti
jmp
xor
jns
scas
sbb
inc
hlt
cld
mov
adc
mov
push
arpl
mov
lds
pushf
imul
push
xchg
jp
cld
inc
lahf
mov
jge
jmp
push
cld
lock
dec
jle
sub
dec
sbb
sub
pop
mov
sahf
shrb
lcall
xchg
insl
dec
push
or
adc
cmpsl
sahf
sbb
cs
sub
pop
jbe
xlat
jne
nop
xlat
loope
push
out
lahf
add
adc
mov
aaa
cmc
and
cmp
xlat
mov
lea
inc
sbb
out
jne
sbb
dec
mov
mov
stos
mov
mov
in
lahf
xchg
xchg
jle
cld
aad
lods
ljmp
rcrl
push
sahf
pop
dec
xor
enter
jae
fidivs
xchg
test
pop
filds
jno
mov
push
push
xchg
mov
les
sub
sbb
imul
push
cs
mov
leave
or
add
in
sub
add
lret
das
shll
add
cwtl
nop
pushf
scas
jne
nop
stos
pop
xchg
movsb
insl
jb
in
jbe
inc
mov
jo
fiadds
movsl
ret
lea
push
jmp
sahf
mov
in
push
mov
xchg
daa
fs
push
jbe
add
adc
outsb
cmpsb
test
dec
dec
xchg
jno
sub
loopne
sub
sub
andb
dec
mov
and
lods
into
mov
ret
loop
jo
decb
mov
dec
enter
cmpsb
inc
sti
jae
xlat
cld
insl
negb
jnp
out
lock
mov
ret
insb
add
pop
cs
loope
inc
dec
adc
jp
xchg
hlt
out
mov
nop
inc
pop
xchg
test
insb
cmp
leave
add
mov
jl
pop
inc
fbld
adc
xor
push
cmp
or
sub
add
ljmp
mov
push
inc
push
out
cmp
lock
pop
jo
mov
pop
cld
sbb
lock
movsb
sub
cld
icebp
or
jnp
loop
pusha
orl
aam
pop
and
bound
dec
mov
sbb
jl
xchg
push
test
repnz
inc
out
call
pop
cwtl
mov
ja
imul
cld
inc
xor
sub
insl
cmc
fsubs
pop
cmpsl
sbb
mov
add
rol
mov
xchg
and
pusha
ds
pushl
sbb
jnp
mov
dec
xchg
mov
lods
std
pop
lret
out
pusha
arpl
insl
or
int
sti
inc
jns
imul
pextrw
ss
lcall
fistps
push
mov
int
mov
xchg
pusha
and
out
push
lahf
loope
clc
or
and
mov
adcb
mov
popa
aad
subb
adc
std
test
jb
bnd
xor
dec
sbb
pop
jp
sub
icebp
iret
pop
adcl
or
add
mov
inc
dec
jae
das
sub
mov
mov
sbb
or
jl
inc
cltd
mov
les
pop
sub
adc
ljmp
sbb
enter
inc
jg
sub
popf
xor
or
fcmovbe
and
adc
sub
cs
mov
aaa
xor
ret
jmp
outsb
popl
out
mov
push
cs
cmp
xchg
xchg
adc
outsb
xor
int3
test
add
and
sub
push
add
mov
mov
loop
jno
xor
mov
inc
add
cmpsl
faddl
lret
testb
xchg
xor
neg
daa
mov
dec
push
sbb
outsb
xchg
jle
mov
mov
scas
xlat
xor
pop
and
xchg
shrl
stc
dec
jns
pop
dec
mov
adc
sbb
push
sti
clc
mov
mov
mov
and
mov
mov
fisubs
xchg
fwait
iret
stos
xchg
push
sub
push
adc
in
aas
jnp
jnp
push
daa
fcmovb
lods
push
jb
fs
es
inc
jne
leave
jecxz
sbb
pop
imul
imul
add
movl
pop
inc
stos
pop
mov
mov
cmpsb
push
jno
add
es
sbb
adc
xor
popf
in
testb
leave
fs
gs
cld
je
repz
cmp
lret
enter
push
xor
and
cmp
lock
addl
or
mov
ljmp
loopne
or
in
xchg
mov
imul
add
clc
add
shll
divl
insb
pop
jg
xor
xor
and
jg
add
adc
lods
mov
ret
mov
dec
mov
scas
adc
fsubrp
movl
or
rcll
ljmp
lret
mov
mov
sub
dec
out
popa
cmp
or
add
adcb
enter
roll
push
out
test
inc
outsl
bound
inc
int
rol
das
mov
jle
mov
es
push
sbb
les
push
sbb
inc
adc
lea
inc
add
push
ja
push
xlat
es
inc
addr16
mov
lahf
ljmp
inc
mov
xor
sbb
sub
cltd
cld
mov
pop
sbb
js
cmpsl
add
ret
aaa
xor
push
mov
push
icebp
dec
jns
idivl
cmp
enter
rcrb
jno
repnz
push
xor
sub
adc
das
fistps
xor
mov
call
pop
data16
dec
into
lea
fimull
pushf
pop
das
pop
jo
mov
jo
jne
add
rcll
inc
sub
or
sbb
loope
adc
pop
cmp
pop
xchg
pop
xchg
es
lds
arpl
lea
sub
ss
dec
inc
sub
lock
xor
jnp
mov
xor
sbb
shr
scas
pop
subb
pop
test
pop
xcrypt-ctr
cmpsl
ficoml
outsl
jno
stos
aad
jmp
xor
push
out
pop
xorl
jo
and
jmp
negl
jnp
orl
hlt
ljmp
fcomip
pop
pop
pop
and
mov
inc
mov
pop
push
lcall
mov
push
lahf
push
clc
sub
xchg
dec
sub
jne
or
mov
xchg
das
mov
adc
pop
xchg
jle
int3
movsl
adc
fnstenv
addr16
lods
ret
cli
pop
icebp
shll
inc
pop
outsb
mov
fbld
cmp
push
add
mov
ja
dec
jbe
adcl
or
aas
fwait
shrb
jecxz
or
dec
enter
xchg
sub
pusha
and
xor
decl
in
sub
cmc
rorl
pop
push
sub
imul
lods
mov
unpcklps
xor
hlt
mov
add
inc
xor
cmp
insb
add
sub
dec
mov
pop
dec
jns
test
movsl
mov
mov
cli
int
push
decb
stc
mov
and
std
xchg
xor
inc
mov
push
sub
sub
insl
pop
mov
pop
xor
hlt
sub
adc
sbb
sub
xchg
ds
loop
mov
les
cmp
sbb
add
ret
or
imull
sbb
rolb
pop
and
arpl
shlb
jno
int3
and
pop
movsl
jae
sti
out
adc
ja
inc
jle
dec
ret
movsb
pop
mov
sahf
loop
lret
lods
pusha
pop
pop
mov
xchg
lods
jo
push
cmp
mov
mov
pop
mov
inc
sbb
push
dec
push
mov
jecxz
xchg
popa
out
jae
mov
add
inc
cmp
dec
mov
lds
sub
lret
mov
jb
dec
out
je
popa
sbb
inc
mov
or
sub
push
clc
push
stos
or
rcll
shlb
mov
lahf
dec
ret
xchg
ja
jge
adc
pop
jecxz
imul
inc
mov
fwait
scas
pop
mov
fcmovbe
pop
sbb
and
cwtl
xchg
mov
aas
dec
sub
add
sbb
adc
jmp
popa
add
cmp
pop
es
test
les
pop
test
push
nop
adc
rcrb
aam
or
aaa
adc
shlb
mov
push
inc
je
cli
cld
movsb
sbb
cmp
sub
fdivrl
inc
or
testb
mov
std
dec
mov
outsl
cmp
lcall
jns
sub
shl
dec
cmp
icebp
jb
xor
xor
xchg
test
jp
ret
xor
push
dec
xlat
mov
dec
add
daa
cmp
insl
sbb
sti
xchg
push
fidivrl
mov
mov
rcll
inc
subb
lahf
lock
jg
scas
sbb
popf
fistl
mov
or
or
sbbl
adc
jno,pt
mov
movsb
dec
mov
bound
mov
pop
iret
xor
mov
mov
subl
push
xor
pushf
cmp
xchg
pop
xor
adc
iret
dec
cwtl
cmc
dec
sub
cmp
jbe
push
test
sarl
aas
jo
mov
scas
push
pop
pushf
jnp
rcll
inc
pop
pop
std
es
in
sub
stc
cmp
xor
push
cmp
cmc
pop
inc
xlat
rolb
movsb
or
sbb
sub
adc
stos
fwait
mov
fstl
neg
jno
aam
pop
dec
jle
mov
movsb
or
movsb
out
in
mov
xchg
cmp
jg
xor
int3
sub
pushf
clc
jmp
mov
mov
cmp
fstpt
or
mov
or
xor
mov
call
lds
mov
in
mov
jnp
ret
mov
cmp
push
jno
inc
xor
test
push
and
fnstcw
cmp
int3
fsubrl
hlt
sbb
sub
faddl
jle
test
aas
ja
scas
jns
repz
dec
hlt
dec
arpl
sarl
cmp
pop
add
sub
lds
mov
cmp
push
aas
std
dec
mov
cmp
rcrl
and
adc
test
and
insb
adc
push
jnp
cmp
sarl
dec
jle
pop
lret
ret
sbb
or
es
mov
mov
jecxz
xor
outsl
leave
push
lea
cltd
data16
dec
xchg
ss
outsl
stos
ret
xlat
std
arpl
xchg
out
adc
orl
in
adc
popa
jae
repz
cmpsl
pop
adc
movsb
aaa
push
lea
pusha
add
mov
jno
inc
sbb
daa
xchg
movsl
xor
out
jb
mov
pop
and
leave
icebp
and
mov
daa
adc
push
lods
xor
mov
jbe
shlb
ret
in
xchg
lea
sbb
and
mov
push
ret
test
icebp
gs
in
xor
xchg
cld
and
or
dec
mov
decl
pusha
adcl
fists
and
lcall
mov
xlat
scas
or
jl
inc
and
in
in
xchg
pop
inc
push
dec
or
pop
xor
xchg
push
xchg
stos
or
or
pop
aaa
pop
pop
sbb
dec
inc
sbb
lock
and
dec
andb
cmpsl
pop
adc
cmp
jl
inc
fcomip
mov
scas
hlt
and
subb
sbb
xchg
pop
xor
ret
xchg
in
fcoml
sbb
and
mov
add
xor
jnp
jg
cmp
popf
sub
scas
jge
test
pop
add
shl
sub
or
pop
fisubl
jecxz
fs
mov
popw
mov
mov
lret
inc
add
dec
in
lods
dec
ds
fimuls
popa
sbb
pop
mov
lods
dec
sbb
push
scas
push
pop
mov
fadds
sub
pusha
jne
inc
cmp
fnsave
test
mov
pushl
aam
sub
jle
push
or
into
and
cmp
mov
sbb
sub
cwtl
loopne
sti
in
mov
andb
jno
mov
xor
popa
mov
pushf
sbb
sub
call
arpl
sbb
icebp
xchg
jbe
stos
es
xor
lods
jo
iret
cmp
pop
loop
ret
and
push
jbe
lret
jnp
mov
push
cmpsb
mov
lahf
test
push
inc
jo
push
repnz
fidivl
jecxz
mov
push
test
and
jge
add
dec
cmp
mov
pop
test
inc
inc
or
aam
jp
sub
divl
adc
js
sub
push
mov
add
fists
push
lahf
sti
and
xchg
out
icebp
test
aam
adc
aaa
mov
int
in
jbe
xchg
mov
dec
jg
cmp
dec
xor
jns
xor
daa
mov
enter
daa
lea
jb
mov
std
dec
xor
pop
dec
out
sbb
mov
hlt
mov
adc
addr16
mov
mov
push
nop
xacquire
mov
xchg
pop
xorl
mov
in
int3
hlt
push
ja
shlb
dec
in
data16
in
fscale
xor
das
mov
mov
scas
push
jg
jmp
outsl
sbb
scas
js
sbb
xchg
mov
insl
push
or
gs
stc
in
xchg
into
hlt
inc
adc
frstor
test
or
jl
sbb
sub
push
ja
adc
sub
das
mov
sub
ljmp
mov
push
pop
adc
mov
rorb
out
das
mov
mov
pop
clc
add
fildl
mov
loop
cmp
sbb
add
es
nop
fisubrs
dec
push
jge
pushf
les
cmp
mov
jb
cld
mov
and
dec
imul
add
jb
and
sbb
rorl
insb
push
jg
mov
loope
cmp
decl
shrl
mov
data16
inc
das
pop
mov
shlb
fidivs
inc
int
mov
mov
mov
aam
hlt
and
pop
xchg
js
dec
push
out
sti
mov
aam
arpl
cmp
int3
jo
fmuls
cmp
subb
dec
roll
js
fldcw
jbe
loopne
fstpt
out
in
ss
leave
inc
sbb
and
jle
mov
push
int3
cmpsl
or
jns
int3
inc
hlt
mov
arpl
cmpl
jae
mov
inc
xor
mov
push
frstor
sub
lret
mov
movsl
jge
inc
inc
xor
das
fldenv
cltd
add
and
ror
push
add
cmpsl
mov
jo
pop
sahf
je
pop
xor
lea
popa
mov
mov
jg
shrl
cltd
out
jae
cwtl
test
push
movsb
in
mov
pop
or
test
jae
inc
ja
jae
dec
dec
inc
sbb
out
movsb
imul
mov
inc
xorb
or
add
adc
jle
jo
push
rclb
jae
add
inc
stos
or
mov
xchg
xor
ss
insl
mov
add
and
xor
negl
aas
pop
negb
xor
pop
xchg
adc
pushf
adc
nop
rcrl
mov
cmpsl
rcrb
sahf
cmp
pop
xchg
jb
jge
and
shr
cmpb
sub
subb
out
ljmp
add
es
jae
pop
and
nop
and
in
mov
rcrb
jne
lahf
cwtl
mov
sub
into
jle
lods
inc
cwtl
scas
inc
fs
and
orl
stc
lret
cmpsb
sub
cltd
sbb
ljmp
pushl
push
frstor
rolb
jae
subb
cmpsb
test
mov
adc
jecxz
in
mov
insl
cs
mov
fdivrl
js
imul
loopne
and
jbe
and
mov
outsl
mov
fdivrs
cmp
movsb
adc
sub
mov
mov
mov
ror
pop
pop
clc
loop
cmp
push
lods
in
xchg
mov
cld
int3
dec
push
stos
mov
icebp
cmpsb
jnp
mov
add
mov
mov
jge
scas
or
pop
jecxz
out
dec
sbb
pop
scas
enter
jns
mov
in
stc
xchg
ljmp
xorb
xlat
sbb
cmp
jl
xchg
and
xor
xchg
inc
or
xchg
subb
adc
jns
movsl
mov
add
pushl
leave
jecxz
mov
outsl
sbb
pop
sbb
jmp
int
cmpsb
cmp
js
push
jg
mov
out
enter
sti
or
jnp
mov
and
movsl
dec
pusha
leave
inc
jno
adc
cmp
lret
shll
pushf
repz
mov
cs
test
out
lahf
ret
mov
pop
add
test
fnsave
jecxz
pop
jno
pop
sbb
nop
sahf
hlt
push
insb
sahf
add
insb
push
and
cli
sub
and
fisubs
movsl
movsb
cmp
je
gs
jne
cltd
aas
xor
pushf
inc
adc
dec
fsubp
jb
dec
xchg
pop
pop
outsl
push
cmp
lds
imul
mov
in
rcll
and
iret
pop
jle
xor
fcoml
hlt
cmp
repnz
inc
mov
or
push
or
cmp
sub
dec
es
xor
in
rcr
push
push
mov
icebp
sbb
pop
sub
sub
sbb
mov
cvttps2pi
pop
lret
out
xor
in
inc
stos
jge
idivl
pop
popa
fsubrl
call
add
fsubrl
xor
push
aas
pusha
push
xor
mov
fldl
popa
cmp
push
pop
mov
pop
pop
jle
jecxz
sbb
xchg
xchg
inc
clc
inc
aaa
mov
js
gs
jbe
jmp
or
imul
or
call
cmp
sub
push
js
push
jae
lret
add
add
mulb
and
stc
pop
ja
pop
xchg
mov
mov
push
dec
and
jecxz
lret
mov
dec
scas
js
movsb
mov
ja
mov
dec
add
mov
jns
jbe
arpl
cld
sbbb
mov
inc
fdivr
out
inc
movsb
jo
dec
and
hlt
or
xchg
xchg
les
lods
ja
nop
ds
ror
jge,pn
aad
cld
fsubrs
mov
mov
lock
xor
rorb
jnp
lcall
or
xor
outsl
arpl
inc
inc
pop
mov
adc
shlb
xor
xchg
std
push
lret
mov
fldenv
hlt
test
dec
inc
push
scas
jmp
lcall
sub
push
and
mov
repnz
pusha
stos
lock
in
dec
push
arpl
sub
push
nop
xor
inc
jle
adc
addl
shl
cltd
jo
mov
addr16
in
add
into
insb
and
jle
js
imul
push
fnsave
test
call
std
jnp
out
mov
add
sbb
roll
loope
int
add
leave
hlt
push
push
popa
mov
sub
cmp
push
leave
xchg
lea
aad
and
push
pop
mov
mov
jb
sub
rcpps
push
mov
stos
inc
and
sbb
mov
sbb
adc
enter
in
sbb
movsb
sbb
cmp
leave
mov
dec
je
push
xor
mov
js
adc
mov
push
inc
mov
sti
dec
mov
push
fs
sub
das
or
pop
add
out
mov
pop
cwtl
or
jl
push
jl
jnp
or
add
lahf
frstor
push
jecxz
fnsave
jno
sbb
sub
push
adc
cmp
cmpsb
shll
scas
outsb
js
nop
popf
jns
sbbl
push
call
unpckhps
iret
jno
inc
push
mov
xor
cmp
mov
repz
je
test
je
loope
clc
stc
jl
mov
mov
andl
mov
xchg
pop
mov
out
orl
test
movb
repnz
mov
push
out
vpmaxub
fmuls
cwtl
outsl
addl
outsl
sub
je
push
mov
out
out
cmp
arpl
mov
fisubs
pop
out
xor
aaa
add
jmp
or
pusha
popf
repnz
nop
out
dec
sub
scas
ljmp
dec
lods
mov
pop
xchg
cmc
clc
xor
testl
cmpsb
push
movsl
out
sbbl
jae
fsubs
jmp
mov
cmpsb
iret
or
jle
inc
das
jno
cmp
mov
pop
dec
lret
mov
sub
dec
xchg
sbb
lahf
inc
or
push
adc
lret
daa
adc
jnp
scas
movsl
aaa
mov
icebp
jno
ljmp
bound
add
pop
mov
jae
xor
push
xor
adc
cmpsl
inc
dec
push
leave
aaa
insb
loop
jg
outsb
mov
jne
mov
add
mov
and
sbb
lods
mov
pop
repz
xlat
add
xlat
and
test
aam
nop
pop
stc
sbb
enter
mov
inc
push
mov
adc
nop
ljmp
cmp
mov
xchg
or
add
mov
mov
mov
test
jnp
mov
lahf
dec
pop
xor
jns
add
hlt
out
nop
jnp
dec
jmp
stos
je
out
or
pushl
dec
mov
jno
test
mov
nop
cmpsb
or
dec
or
inc
xchg
jge
dec
stos
daa
lds
aad
out
lret
cltd
mov
pop
mov
ja
icebp
repz
xor
icebp
and
jb
inc
cli
lcall
mov
mov
daa
cmp
mov
in
jle,pn
mov
popf
cmpsl
jl
dec
pop
mov
out
jns
xlat
inc
retw
jp
out
cmp
lods
jle
cmp
dec
inc
loop
popf
inc
int
dec
mov
ret
xchg
push
dec
cs
add
pop
mov
loope
pop
loop
popa
insl
pop
ja
cmp
adc
sbbb
imul
jns
push
mov
aad
lods
insb
sbb
sub
cmpsl
fcmovnb
data16
ljmp
cmp
test
mov
jmp
mov
mulb
inc
shr
jg
and
mov
push
mov
xchg
xchg
mov
mov
push
xchg
xlat
icebp
cltd
push
outsl
divb
xchg
loope
cmpsl
pop
test
dec
mov
xchg
jge
ds
mov
pushf
fwait
xchg
xchg
mov
xchg
sub
mov
and
mov
mov
xchg
add
in
cmp
out
test
je
lahf
ss
lock
outsl
xchg
notb
out
mov
or
push
push
subb
decl
and
aam
mov
xlat
mov
rcrb
int
xor
repnz
daa
fsts
pop
lods
hlt
add
fdivp
pop
loopne
insb
rcll
jne
push
jl
nop
outsl
dec
mov
jg
sahf
mov
loopne
jno
jnp
pop
jmp
jno
out
test
std
mov
cwtl
sbb
ficomps
mov
test
cwtl
scas
enter
fimuls
sbb
mov
in
movsb
mul
int
mov
sbb
insb
mov
bound
ss
xchg
das
mov
aaa
out
daa
mov
jmp
sbb
outsb
dec
or
push
xchg
mov
jecxz
sub
add
jle
aad
call
sti
mov
mov
and
nop
cmp
dec
push
mov
shlb
dec
test
movsb
fmull
jle
fldl
ficoml
cli
cltd
mov
jmp
push
iret
dec
nop
pop
mov
out
mov
idiv
out
jno
out
xlat
scas
aaa
icebp
push
out
loop
clc
xchg
movsb
mov
push
push
testl
cmc
or
stos
jb
nop
jge
clc
sbb
pop
in
and
sub
call
fiaddl
or
jp
add
into
fdivrs
cmpsl
ret
lret
mov
stos
jne
in
push
push
xchg
pop
scas
aaa
in
rcrl
xchg
mov
push
lds
push
pushf
cld
ficomps
pop
jmp
push
fwait
cmp
push
add
or
movsl
data16
popl
or
push
cmp
xchg
mov
sub
call
lods
mov
jmp
push
mov
mov
in
xchg
les
xor
rolb
cmp
sbbl
dec
fcoml
shlb
cmp
jnp
push
jp
js
push
call
and
mov
fs
jmp
mov
ret
inc
rorb
cmp
cmp
jnp
or
pop
repnz
cmc
out
fiadds
fsubrs
cmp
xlat
adc
pop
cli
jo
pop
inc
fisubrs
xor
movsl
mov
add
shll
enter
in
jp
jo
fwait
adcl
xchg
enter
or
sub
mov
rolb
dec
xchg
dec
pop
adc
pop
push
xchg
cld
xchg
cwtl
test
sbb
ret
xor
lcall
cli
cmc
ret
rcrb
jecxz
jne
jp
cltd
mov
and
mov
mov
negb
pop
jb
fists
pop
add
jne
xor
mov
mov
lock
fistps
stc
rcl
sbb
cmpsb
cmp
cmp
pop
cmc
arpl
addr16
xor
sub
xor
xchg
out
fcomp
add
mov
adc
mov
sbb
add
mov
std
mov
stos
lds
cmp
nop
testb
cmp
addr16
mov
jbe
loop
push
inc
and
jns
fsub
mov
pop
push
mov
das
sbb
negb
bound
fbld
add
inc
movsb
popf
inc
jbe
adc
sti
jmp
mov
pop
push
out
add
pushf
and
jg
cmp
add
mov
mov
add
mov
sbb
pop
cli
imul
jne
inc
fcmovu
popf
scas
or
je
adc
int
hlt
lds
cmp
adc
xor
sbb
imul
cmp
dec
loop
mov
adc
popl
mov
xchg
mov
dec
in
ljmp
push
notl
jne
out
adc
fs
jg
mov
stos
jmp
fcoms
xchg
pop
mov
xchg
lret
push
push
inc
bound
mov
shrb
dec
test
dec
push
mov
ljmp
mov
fldcw
mov
lret
pop
in
push
or
mov
in
movsb
clflush
jge
adc
leave
mov
popa
sub
sub
inc
mov
mov
jae
and
insl
clc
push
out
rorb
mov
insl
dec
pop
insb
inc
imul
stos
fldpi
add
pop
add
dec
push
nop
or
push
mov
in
mov
insl
pop
mov
cld
pusha
in
xchg
imul
xor
xor
cwtl
mov
xor
enter
test
mov
addl
popf
ss
pop
cmp
pusha
xor
push
aad
and
pop
inc
or
fs
popf
push
leave
mov
inc
jge
sbb
aas
or
pop
cmp
jg
sbb
jp
cld
or
mov
jmp
dec
jp
mov
sub
sub
xchg
mov
cmpsb
nop
test
outsb
les
in
cwtl
fsubrs
inc
nop
pop
xchg
sub
cmp
movsl
mov
iret
add
or
movsb
or
imul
fwait
dec
les
push
in
das
je
sar
out
pop
in
push
cmp
dec
sbb
xchg
and
out
vucomiss
movsl
mov
cmp
push
aas
jno
xchg
inc
or
mov
inc
adc
lods
int3
mov
ja
aam
lcall
xchg
pop
mov
xchg
movsb
push
cmp
pop
jb
shll
mov
push
push
mov
fs
or
dec
rcll
sbb
dec
lret
sbb
dec
pop
ret
add
push
push
add
mov
fisubs
cwtl
cld
adc
cld
dec
into
fidivrs
popa
jmp
and
into
mov
test
lods
mov
int3
xchg
jge
xor
cmp
scas
mov
xchg
stos
inc
dec
sbb
int
iret
jp
fsubrp
inc
out
je
or
jle
xchg
mov
mov
mov
jge
enter
push
addr16
push
push
inc
bound
pop
mov
scas
or
in
cmpsl
and
mov
jle
div
sbb
mov
shl
or
sahf
lods
and
add
test
les
dec
lcall
dec
xchg
sbb
xchg
inc
cmpsb
sub
cmp
jno
mov
mov
xchg
mov
sti
sbb
insl
push
jns
inc
jne
jecxz
or
in
icebp
imul
mov
mov
push
inc
jbe
and
xchg
cmp
xor
cmc
das
cmp
add
dec
in
mov
push
out
aaa
in
test
cmp
push
dec
sbbl
dec
sbb
xor
loope
or
mov
jno
xchg
idiv
xor
mov
imul
es
pop
ss
mov
sub
push
rcll
int3
roll
add
stc
pop
mov
negb
sub
dec
loop
adc
stos
incl
jle
mov
test
mov
ljmp
jecxz
outsb
inc
xchg
inc
sbb
lahf
mov
arpl
mov
clc
ret
sub
cmp
cmp
rorl
jne
push
and
mov
inc
add
outsb
icebp
stc
stos
mov
int3
and
xchg
fiadds
adc
sarb
cmpsb
enter
jp
sub
hlt
sub
out
aam
sub
arpl
das
xor
enter
insb
dec
adc
int
jmp
xchg
lcall
xor
adc
push
xchg
pop
fxch
cmp
loope
adc
bound
jo
xor
test
jg
push
mov
loopne
jo
je
repnz
jl
pop
pop
fwait
xor
iret
mov
fs
dec
push
enter
lods
push
push
inc
hlt
mov
fs
cmp
and
loopne
or
gs
and
mov
sarb
add
push
enter
xchg
sbbb
ds
pop
adc
popf
xchg
mov
add
adc
sbb
mov
rep
shll
imulb
enter
cmp
repnz
pushfw
addr16
sub
fnstenv
in
adc
sbb
call
sbb
repnz
sbb
adc
adc
imul
push
or
sbb
in
testl
and
jb
sahf
xchg
push
scas
ret
adc
xchg
pop
xor
cmpsb
lods
ficoms
int3
lahf
pop
xor
jecxz
jae
adc
sbb
mov
adc
fcom
imul
push
jmp
cmp
jno
or
pop
lret
call
mov
stos
jp
xor
cmp
jl
inc
push
and
mov
dec
out
pop
jbe
jb
xchg
sar
das
xchg
mov
iret
or
lret
mov
icebp
mov
mov
xchg
fyl2x
push
les
push
gs
dec
cmp
xor
fidivs
shl
adc
fwait
cltd
or
arpl
mov
pop
aad
aad
idivb
into
gs
in
inc
in
push
cmp
nop
pop
xchg
xchg
inc
add
adc
sub
sahf
inc
jns
sub
mov
dec
adc
pop
mov
jle
push
cmp
fisttps
fdiv
inc
dec
adc
iret
je
das
xchg
imul
pop
lret
cs
movsl
shll
adc
std
mov
add
mov
xor
inc
mov
mov
mov
outsl
adc
ret
push
pop
adc
mov
jg
sub
leave
cmp
clc
sbb
inc
push
popa
dec
ljmp
xchg
ficoml
add
cld
jge
mov
xor
mov
clc
mov
inc
lods
mov
bswap
mov
sbb
fists
mov
out
pushf
dec
dec
ret
sti
dec
mov
loopne
xor
inc
mov
mov
sbb
mov
aaa
fs
leave
mov
pushf
loop
xchg
decl
mov
mov
mov
and
fisttps
scas
mov
popa
movl
sti
push
lods
xchg
pop
dec
mov
je
dec
dec
fcoml
jnp
pop
sbb
pop
movsb
adc
push
sub
icebp
dec
ljmp
lret
loope
xor
movsb
dec
xor
out
jmp
cmc
xor
popw
js
mov
shrl
xchg
out
mov
daa
adc
aad
push
inc
sbb
call
push
cmp
inc
xchg
xchg
add
data16
dec
sarl
jne
jbe
jle
sub
lods
sub
ds
mov
sub
imul
push
ret
repz
insb
xor
scas
mov
int
pop
xchg
shlb
cmpsb
push
decl
pop
orb
xor
push
fnstenv
repnz
std
les
inc
xchg
in
les
mov
mov
cmp
pusha
cmp
lahf
sbb
sbb
cmp
sbb
jmp
adc
jg
sti
insb
out
add
jl
or
bound
insb
in
mov
pop
sub
cmpsl
mov
fnsave
out
adc
pop
mov
shlb
pop
and
pop
iret
push
dec
ljmp
push
mov
sub
pop
dec
xchg
faddl
push
sbb
test
aaa
loope
cmpsb
cmpsb
xor
or
ss
or
iret
fidivs
lods
scas
std
popf
dec
sub
out
fxam
sbb
push
inc
arpl
xor
jae
test
adc
subl
pop
and
cmpsb
pop
jo
rolb
adc
push
cmp
gs
addr16
mov
cs
jae
sub
repnz
inc
out
lods
adc
movsl
push
rcrl
pushf
lock
sub
push
test
cmpsb
sahf
or
jne
in
pop
xorb
add
cmc
xor
cli
loopne
adc
inc
dec
jmp
and
in
arpl
xor
xchg
adc
xchg
xchg
jns
movsl
sbb
enter
push
mov
dec
roll
cwtl
add
loopne
and
push
out
add
dec
dec
adcl
sub
mov
lcall
adc
xor
call
ja
sbb
inc
xchg
lret
and
cmp
mov
lret
mov
out
jae
xor
jge
push
je
scas
and
std
mov
jg
cmp
adc
inc
adc
jbe
flds
pop
mov
inc
std
aaa
push
mov
cmp
add
test
in
push
rolb
stos
mov
jnp
movsl
add
or
cmp
jb
mulb
inc
dec
aam
js
dec
pop
pop
ret
or
mov
mov
add
cmc
call
mov
inc
mov
and
sub
and
insb
jo
adc
add
sbb
enter
nop
inc
imul
xor
push
xlat
dec
and
pop
xor
and
pop
popa
adc
push
out
cmp
fisubl
and
jp
xchg
or
iret
pop
lahf
adc
pop
mov
data16
rol
cmp
add
aas
inc
jb
lock
add
pop
cltd
mov
popl
or
xor
push
fidivrl
ja
out
sbbb
stc
push
cmp
mov
repz
std
sub
fstpl
sub
bound
pusha
fistl
push
cmp
mov
pop
and
sti
ds
push
xchg
fs
jnp
jbe
sub
ret
mov
inc
jl
ja
push
in
sub
jmp
inc
mov
adc
pop
pop
leave
adc
fcmovu
addr16
sbb
sub
iret
mov
xor
filds
rep
test
in
in
mov
imul
xchg
pop
xchg
sub
imul
aam
adc
cmpsl
rorl
ret
push
cli
push
stos
xor
dec
mov
andnps
mov
push
mov
and
lret
les
sub
nop
mov
pop
jbe
nop
lea
insl
sub
test
popf
enter
test
push
pop
and
dec
les
imul
call
push
adc
cmp
xor
fs
and
rorb
xchg
je
out
into
xchg
dec
push
cs
mov
sub
repnz
push
mov
sbb
andb
test
mov
rorl
dec
fbstp
shl
and
dec
pop
cmpsl
stos
adc
andb
lahf
dec
mov
fiaddl
rclb
adc
movswl
jg
push
enter
adc
dec
sub
sbb
add
dec
movsl
mov
sbbl
movsb
scas
arpl
decl
je
int
sub
mov
sarb
inc
and
mov
ja
push
mov
rorb
mov
mov
outsb
mov
lods
sbb
xor
or
dec
pop
jo
jne
dec
dec
and
and
pushf
push
mov
imul
pop
cmp
aam
jo
nop
sbb
dec
pop
sub
xchg
les
in
cmp
jae
adc
test
push
mov
jno
test
xchg
xor
dec
xchg
jmp
int3
push
mov
adc
je
test
out
mov
fstl
enter
and
inc
dec
adc
out
mov
mov
push
lret
mov
sub
sub
mov
jp
sbb
andl
xor
pop
xchg
fsubl
jecxz
repnz
ljmp
pop
xchg
aam
mov
sahf
jp
jmp
push
inc
cwtl
adc
mov
add
fwait
sbb
movsb
addr16
scas
push
or
repz
test
out
inc
mov
testl
movl
jo
cld
sbb
fwait
aaa
cmp
cmp
mov
or
fs
add
add
jecxz
inc
sbb
lcall
mov
pop
dec
ret
or
fcompl
lahf
aaa
adc
ret
jo
and
subl
out
add
sub
push
or
or
xor
mov
sbb
sbb
mov
sbb
fdiv
shrl
ss
inc
sub
xchg
jp
mov
lret
lretw
dec
pop
dec
sub
sub
fidivl
scas
test
push
jne
mov
icebp
hlt
inc
pop
add
mov
inc
sbb
jne
jns
jle
cmpsb
inc
mov
insl
nop
and
cld
rolb
jecxz
mov
lds
inc
cwtl
mov
mov
and
je
mov
fdiv
std
bound
shrb
or
sbb
pushf
xor
pop
add
cmp
dec
ret
cmp
dec
sub
adc
sub
jno
movsb
js
es
jle
rol
mov
jge
into
pusha
and
lock
xor
popf
adc
mov
sub
add
cmp
push
mov
mul
xor
movsb
ja
cmpsb
jle
in
and
fcomip
jns
mov
mov
sub
in
fsubrs
sub
repnz
mov
mov
mov
je
push
adc
mov
add
or
stos
dec
es
adcb
lods
xchg
iret
pop
mov
fdivp
cmpsl
mov
popa
aaa
cmp
and
out
mov
mov
cwtl
subl
lea
sub
aaa
insl
rclb
mov
jbe
mov
mov
divb
add
add
mov
pop
repz
aam
icebp
in
dec
test
ret
ret
or
lods
adc
mov
jne
or
adc
aam
cmpsl
push
sbb
shll
lods
cmp
sbb
dec
imul
mov
mov
aad
sti
aas
sub
xchg
scas
jecxz
mov
mov
dec
ja
ljmp
mov
or
rclb
xchg
jbe
fidivs
inc
imulb
es
mov
push
cmp
and
and
push
aaa
and
pop
mov
mov
push
int3
mov
ja
sbb
bound
shlb
push
sub
popf
push
fwait
cwtl
int3
test
jb
lock
popa
adc
mov
imul
pushf
nop
int3
pop
lock
mov
push
scas
jl
jle
xchg
dec
xchg
imul
push
inc
scas
test
cli
push
inc
int
popa
scas
dec
sar
stos
mov
sub
dec
inc
adc
cmc
leave
mov
mov
push
daa
adc
aas
inc
fidivrl
push
test
int
cmp
and
mov
adc
pop
add
lock
mov
xlat
in
xor
pusha
xchg
push
lds
call
push
in
xchg
mov
into
and
lock
and
push
xor
mov
sbb
test
mov
mov
sarb
adc
and
shll
add
mov
cmp
loopne
and
push
test
std
mov
ret
cmpsb
popa
pusha
xor
mov
xchg
repnz
lcall
ds
repz
pop
clc
repz
add
call
aam
stos
popf
je
cmpb
add
mov
sub
push
jno
xlat
and
repnz
lods
xor
ja
dec
or
dec
adc
lds
adc
jne
pop
inc
mov
lock
repnz
imul
jecxz
push
mov
mov
mov
rorl
or
cmp
fwait
lret
sub
push
sub
fdivr
cmovnp
or
push
push
clc
sub
mov
cmp
adc
xlat
adc
push
clc
sbb
insl
fsubs
fsubrl
pop
mov
sbb
cmpsl
js
fists
aas
ret
mov
leave
nop
or
mov
ret
and
cltd
fbld
dec
jg
mov
add
popa
cmc
mov
in
and
pop
lods
mov
xor
in
dec
imul
inc
jle
ss
dec
xor
pop
scas
stos
punpcklwd
insb
pop
push
add
sarb
loop
das
mov
sbb
repnz
imul
in
repnz
push
push
dec
sub
lds
ljmp
jbe
int3
in
lock
jecxz
cmp
pcmpeqw
ljmp
stos
jge
xchg
cmp
ds
or
mov
jp
andb
fsubl
xor
xor
mov
sub
loope
imul
in
inc
cmpsb
mov
and
fs
cmp
sarl
test
ret
int
mov
idivl
or
gs
iret
lods
in
cld
ja
inc
xor
sbb
sub
sbb
cld
jp
push
mov
mov
mov
mov
shlb
pop
push
cmp
in
jecxz
lea
int3
dec
stc
mov
lods
jmp
cmp
mov
pop
jne
push
in
pop
call
push
xchg
iret
inc
jl
pop
mov
stc
lret
enter
cwtl
cmp
arpl
out
pop
int3
ret
sbb
fimull
push
es
jae
aaa
mov
jns
dec
hlt
pop
addr16
adc
aad
into
dec
aaa
pop
getsec
jno
pop
cvtpi2ps
loope
adc
les
and
push
imul
cmp
jg
dec
test
push
ja
cmp
add
add
scas
inc
xor
mov
out
sbb
cmp
and
pop
mov
push
adcb
mov
icebp
cmp
xor
lock
or
sti
out
mov
loopne
xchg
fisubrs
ror
je
xchg
mov
jae
mov
lcall
pusha
out
push
cmp
scas
sbb
sub
sbb
xor
hlt
cmc
push
jp
adcb
push
loop
mov
int
out
aas
addr16
pop
mov
and
cmp
mov
fnsave
insb
dec
icebp
cmpsb
repnz
and
faddp
lret
cmp
enter
sub
inc
loope
scas
dec
in
jns
push
adc
dec
cmp
pop
aas
and
sub
mov
repz
fisttpl
dec
dec
jmp
outsl
dec
mov
jp
hlt
fs
push
js
push
xchg
jne
mov
jns
jg
push
jp
pop
test
sub
push
fldenv
addr16
inc
leave
add
sbb
push
xchg
hlt
in
push
imul
xor
jnp
movsl
das
lods
add
sbb
sahf
pop
test
movsb
frstor
insl
adc
nop
in
push
adc
faddl
loop
arpl
or
bound
fsubrl
iret
push
sbb
dec
pop
or
inc
and
mov
clc
and
es
cmp
and
adc
inc
stos
in
sub
and
arpl
jo
clc
sub
jno
arpl
ss
sub
cmp
xor
jp
push
pushf
into
enter
jns
out
adc
adc
lea
scas
sub
jecxz
fld
sbb
and
cld
repz
outsl
push
into
sub
dec
subl
pusha
in
pushf
in
mov
out
arpl
mov
mov
sub
cmpsb
add
dec
or
cld
inc
adc
int3
mov
cmp
popa
xchg
mov
arpl
in
xor
rclb
and
mov
adc
popf
rol
mov
aas
mov
xchg
jno
in
cmpsl
lcall
imul
shrl
enter
daa
jge
mov
jmp
mov
pushf
inc
test
dec
push
stc
jbe
ror
jg
mov
adc
mov
jl
push
cmp
pop
repnz
dec
dec
out
sahf
sbb
cmp
mov
xchg
outsb
in
xchg
leave
or
adc
dec
fdivs
cmpsb
push
cwtl
fnstenv
std
imull
xchg
cwtl
mov
out
daa
push
shll
lea
mov
push
xchg
lock
cltd
shll
inc
movsl
rorb
sti
push
or
lret
data16
in
in
imul
stc
mov
dec
sbb
xor
int
xor
jge
dec
stos
adc
xor
sbb
dec
adc
test
pop
ret
in
jnp
xchg
addb
dec
xchg
out
xchg
dec
inc
xor
lods
add
xor
ret
mov
xchg
int
add
jno
ret
inc
loopne
sub
stc
xlat
or
fwait
sahf
data16
fs
jnp
jnp
add
in
daa
fwait
mov
mov
cmpsl
xor
sub
in
mov
inc
inc
mov
xor
in
sbbb
cltd
dec
cmpsl
out
sahf
push
stc
pop
cmp
sbb
popa
daa
pop
out
popa
jmp
gs
xchg
inc
int
fdivs
pop
popl
and
pop
subb
mov
pop
inc
icebp
loope
push
test
push
push
adc
or
xchg
arpl
andl
adc
aad
cmp
rorl
sti
dec
in
adc
loop
xor
add
mov
fadd
add
sti
pop
in
ret
jne
loope
int
xor
rorl
inc
or
jo
mov
aaa
mov
jbe
imull
mov
movsl
mov
cmp
adc
rcr
inc
mov
enter
stos
xchg
pop
sti
inc
mov
shll
mov
mov
sub
mov
dec
dec
sub
jmp
xor
xchg
test
idiv
lcall
sahf
sbb
jmp
sbbl
pusha
subl
push
sbb
mov
push
stos
inc
cwtl
sub
xchg
jp
cltd
loope
cmp
mov
repz
jae
in
pushf
xor
push
push
andl
sub
nop
orb
stos
lret
adc
lods
jl
cmp
jno
outsl
push
mov
loopne
pop
adc
insb
std
js
jae
pop
inc
xchg
pusha
or
xchg
push
lcall
push
pop
aam
sqrtps
and
lods
jne
test
in
jmp
sub
jl
frstor
sub
mov
stc
movsb
icebp
faddp
mov
loope
sub
and
cmp
sbb
imul
lock
repnz
or
pop
inc
cwtl
adc
aas
xor
outsl
sbb
sbb
mov
fdivrs
in
js
lds
lds
fisttpl
sbb
pop
or
dec
ret
push
je
aaa
mov
mov
sub
xchg
mov
pop
xor
int
rcrb
in
cmpsl
push
fstl
aam
cmp
sbbb
add
xchg
push
cmp
and
jbe
lods
and
mov
mov
roll
scas
fcmovne
pop
add
xorb
jns
cmp
push
into
push
sarb
int
add
stc
pop
mov
clc
or
hlt
jmp
setl
enter
add
js
push
jg
xchg
dec
jmp
pop
scas
rol
xchg
leave
push
sarb
mov
lock
lcall
fwait
push
inc
pop
pusha
mov
xchg
daa
popa
mov
f2xm1
orl
das
rclb
movsl
es
out
popf
cwtl
adc
mov
fistpl
and
mov
out
and
fdivrs
call
cs
adc
mov
ret
test
arpl
pop
mov
jno
fstl
repnz
jo
and
out
add
jnp
insl
jg
xor
mov
or
das
lahf
jle
sbb
inc
pop
insl
xlat
xchg
dec
pop
jp
aad
je
insl
xchg
sbb
ja
std
test
cmpsl
repz
lods
sub
jecxz
je
stc
push
xchg
push
enter
sub
dec
aas
push
lret
insl
jge
dec
sub
cs
push
jmp
cmp
fsubl
insb
aas
xchg
repnz
in
xor
jb
in
inc
inc
push
hlt
xchg
mov
sub
sbb
mov
sbb
es
mov
and
mov
gs
pop
push
inc
jns
mov
gs
push
mov
pop
or
mov
sub
ljmp
mov
add
xor
lret
lds
sub
mov
stc
xchg
fcom
dec
repz
lds
lret
dec
jmp
push
xchg
repnz
pop
xchg
shll
enter
sbb
ret
cmpsl
or
sbb
xchg
pusha
int3
xchg
fwait
adc
jle
in
cmp
sti
cmp
cmp
leave
sub
pushf
and
iret
jp
leave
cmp
pop
loop
movsb
movsl
shl
movsl
pop
in
int3
inc
movsb
cmp
mov
mov
add
movsb
mov
jg
mov
cmc
es
mov
mov
and
mov
mov
inc
cwtl
pop
fsub
std
testl
test
imul
xchg
inc
jp
or
addr16
jmp
rcll
shll
xor
mov
cmp
add
push
aam
push
dec
mov
iret
scas
push
mov
pop
cltd
hlt
fmuls
jb
and
repnz
stos
sbb
mov
inc
gs
xchg
ret
popf
inc
pop
rcll
insl
xor
cmp
inc
push
mov
dec
lods
popa
fidivs
imul
push
jle
fisubrs
jns
lret
mov
imulb
scas
repz
or
loopnew
lret
popa
lea
fmuls
mov
lret
into
ljmp
mov
sub
test
pusha
push
fistpl
jno
imul
imul
xor
ret
mov
lods
sbbb
xlat
mov
add
lret
or
mov
in
mov
cmp
lahf
dec
clc
sbb
jae
jae
push
notb
out
mov
ja
pop
add
mov
dec
test
scas
je
decl
add
lret
shll
mov
scas
stos
das
cmp
jp
das
ret
inc
jp
iret
lds
dec
jnp
adc
push
lods
mov
push
ret
std
mov
push
fnstsw
mov
cmp
mov
popa
push
add
jmp
xor
insb
adc
inc
push
enter
mov
xchg
test
add
sahf
les
in
cmpsl
and
jns
outsl
iret
popf
testl
test
pop
aaa
outsl
insl
adc
in
jb
stos
adc
imul
jge
ja
rcrl
push
je
dec
adc
jp
pop
inc
jbe
add
or
out
in
cli
inc
loop
in
mov
cs
push
gs
fdivp
cmpl
add
lods
push
test
lahf
inc
sbb
lret
movl
adc
dec
xchg
call
jge
fldcw
aad
adc
outsb
das
bound
inc
sbb
jb
cwtl
test
test
mov
stos
mov
push
aas
in
out
adcl
dec
or
ljmp
mov
in
gs
dec
push
cwtl
idivl
cli
jg
push
xchg
imul
or
mov
mov
mov
push
xchg
or
mov
push
sahf
les
xchg
inc
lret
sbb
loopne
sbb
stc
dec
loope
push
jb
and
psubw
xchg
aam
dec
adc
cs
aad
popa
cs
cwtl
xor
leave
sub
xchg
jne,pt
or
adc
push
push
fwait
push
sub
std
push
push
sub
dec
roll
inc
jmp
roll
mov
ud2
mov
jle
xchg
add
and
popa
aam
test
mov
xchg
xor
inc
adcb
jns
xchg
add
sbb
push
in
jle
outsb
ret
adc
aam
fiadds
jg
lret
mov
sbb
xchg
scas
mov
jmp
cmp
ret
jbe
adc
inc
mov
cmc
jnp
push
pop
test
cmp
xorl
insl
fildl
mov
mov
stc
iret
daa
fwait
xchg
or
and
sbb
movsb
adc
cmp
lret
jmp
pop
out
pop
xor
int3
popa
aad
push
movsb
pusha
mov
lcall
inc
andb
ret
ss
and
popa
sbb
mov
cmp
push
cmp
je
repnz
aam
sahf
adc
xor
mov
decl
inc
pop
fadds
pop
rcl
xor
xchg
sbb
pop
pop
sbb
push
push
pop
dec
sbb
push
sbb
dec
pusha
pop
mov
mov
push
std
mov
push
dec
int3
mov
rclb
cld
jecxz
pop
stos
push
rolb
or
stc
mov
incl
jo
xchg
sub
imul
and
arpl
cltd
int3
popa
fs
in
and
fisttps
pop
incb
pusha
orb
sub
lods
add
test
icebp
addl
mov
sbb
jne
scas
mov
imul
push
fcomp
push
mov
fcoms
ret
push
jne
aam
cli
rolb
jbe
out
jle
sbb
cmp
cli
dec
pop
push
xchg
stos
in
or
hlt
adc
xor
repnz
es
pop
jo
or
loop
and
adc
push
mov
in
push
mov
mov
add
xlat
push
insb
xor
ret
pop
sbb
jg
cltd
arpl
stc
mov
xor
mov
addb
and
ss
xchg
gs
ds
cltd
nop
xrelease
mov
inc
xchg
xchg
rcll
xor
inc
call
repz
adc
mov
ss
outsl
dec
jns
movsb
inc
in
ds
push
lret
shll
mov
out
lock
jno
or
jl
sbb
push
push
into
sbb
daa
xor
sbbl
push
daa
adc
cmp
sti
xchg
pop
mov
fdivrl
mov
push
in
inc
aad
je
mov
testb
cmp
mov
mov
in
jo
pop
lods
push
inc
push
add
pop
xchg
fstpt
je
cmpsb
pop
mov
dec
inc
xchg
push
lods
cmpsl
rcl
test
mov
push
test
pop
jbe
loop
add
push
xchg
xchg
mov
ret
daa
pop
pop
pop
and
lock
pop
call
pop
rcrb
inc
pop
cmp
jns
cs
add
int
add
xchg
pop
xchg
les
or
imul
push
lahf
dec
int3
outsl
dec
imul
push
fisttps
adc
push
aas
fs
sbb
jbe
loopne
xor
mov
loopne
lahf
in
mov
fdivrl
ss
js
inc
mov
call
xor
mov
mov
xor
mov
repnz
rorl
out
mov
inc
jl
push
adc
lret
xlat
sub
mov
mov
stc
lea
mov
fwait
adc
mov
cli
sub
divl
arpl
ret
sbb
out
ja
pop
sbb
leave
jno
inc
dec
call
inc
loopne
out
push
lea
leave
aaa
cltd
loope
sub
outsl
mov
mov
sarb
jmp
or
stc
push
mov
pop
shll
fisubrl
sub
pop
call
dec
xor
cmp
jnp
mov
add
aam
shll
sub
mov
clc
les
xchg
aaa
stc
sarb
rorb
xchg
sti
mov
lods
outsl
and
pusha
ret
mov
aas
mov
sbb
test
into
adc
jb
fimull
packsswb
lods
jb
jne
mov
inc
inc
popl
lahf
test
xchg
int
das
ret
or
fmull
jns
inc
and
ret
sahf
inc
inc
ja
dec
cmp
pop
sbb
ret
rcll
mov
push
cmc
mov
mov
sahf
repnz
mov
arpl
movsl
test
aas
pusha
or
and
sti
inc
inc
dec
mov
aas
jb
lret
cmp
jl
lods
rcll
in
pop
mov
dec
cltd
xchg
shl
or
scas
xor
out
push
dec
sbb
jl
int3
int3
inc
movsb
xchg
mov
adc
test
pop
or
lret
loopne
adc
xchg
push
addb
mov
jmp
mov
in
fwait
lahf
mov
xchg
xchg
mov
movsb
jp
and
jp
fstps
stc
idiv
aam
cmp
push
xchg
stos
sbb
mov
call
in
arpl
dec
push
inc
int3
mov
test
aad
cmp
popa
insl
popf
in
inc
out
push
push
dec
xchg
loope
pop
rcrb
cltd
mov
imul
out
test
dec
push
cmp
and
in
cmp
sti
out
out
pop
dec
inc
or
inc
xchg
sub
sbb
sub
scas
dec
mov
or
outsb
xlat
push
and
fsub
jle
in
mov
mov
mov
scas
xor
push
mov
sub
ljmp
xchg
lret
xor
mov
or
pop
jle
sub
or
imul
mov
and
jne
lea
mov
lods
mov
pop
out
fs
stos
jmp
xchg
adc
mov
loopne
cmpsl
loopne
rorb
out
out
out
flds
push
inc
xor
test
add
xorl
sbb
lret
push
fs
xchg
fsubl
and
and
mov
testb
adc
jae
cli
adc
clc
enter
inc
xchg
out
popf
shll
and
pop
lcall
sbb
fs
sbb
xor
pushw
push
sar
xor
gs
adc
mov
or
shlb
fdivrl
sahf
sbb
aam
inc
sub
inc
jae
pop
and
and
push
fcomps
sbb
pop
pusha
mov
lret
sbb
fcoms
outsb
std
dec
outsb
inc
mov
push
arpl
pop
mov
fdivrs
shlb
pop
dec
jnp
mov
clc
pop
adc
sbb
jbe
sub
gs
mov
flds
or
or
mov
fldcw
movsb
adc
mov
sbb
andl
lcall
mov
adc
xor
push
cld
cmp
popf
or
inc
xor
and
push
cli
mov
fwait
push
cmp
xchg
test
fdivl
stos
inc
cmp
mov
mov
mov
cltd
pop
push
popl
shrl
xlat
push
les
outsb
push
pop
jns
adc
sahf
pop
stos
push
fnsave
enter
in
pop
and
jle
shl
test
lods
test
cld
pop
ret
jge
mov
push
pop
mov
sbb
pop
data16
lds
gs
push
fidivrs
lods
cltd
cmc
fnstcw
add
push
jmp
out
popa
dec
sbbb
jmp
mov
arpl
adc
iret
addr16
daa
xchg
popf
dec
and
ljmp
cwtl
sub
jo
cmp
mov
adc
fisubl
or
nop
xchg
sub
xchg
xchg
lret
xor
popa
ja
push
lods
cmp
xor
fcomps
stos
stos
aaa
call
aam
or
dec
add
sub
scas
push
in
cltd
adc
push
adc
xchg
push
mov
mov
lret
das
mov
fcmovnb
mov
shrb
imul
adc
in
mov
add
mov
pop
mov
scas
xchg
pop
sub
mov
inc
push
cld
imul
pop
sub
push
loop
ljmp
or
js
ljmp
push
test
push
pop
fsubrl
iret
pop
pushf
pop
ret
mov
scas
das
test
add
and
mov
push
or
sar
js
jne
out
fistpll
jbe
stc
xchg
mov
dec
pop
out
push
adc
lock
in
mov
xchg
out
fdiv
inc
pop
test
mov
jne
repnz
iret
sub
jnp
lahf
cs
sub
mov
leave
mov
sbb
dec
in
outsb
js
pusha
pusha
xchg
ljmp
pop
xchg
jnp
push
scas
mov
lret
sahf
mull
and
movsl
pop
adc
push
push
movsl
mov
popa
lret
sbb
pop
mov
mov
shrb
pop
fwait
out
lahf
iret
mov
lahf
xor
push
shl
fistps
mov
cmc
stc
sbbb
sbb
insl
sbb
cmpsl
ds
xor
cmpsb
mov
push
pop
outsb
hlt
mov
mov
dec
lret
in
or
stc
bound
in
ficompl
test
data16
inc
cmpsb
push
clc
fldcw
or
test
leave
cltd
inc
ja
jae
jecxz
dec
lret
into
xor
jbe
xchg
cmp
stc
jmp
mov
dec
xor
fmulp
aas
bound
es
mov
stc
jns
ds
movsb
ror
test
adcl
stos
popf
lret
mov
xor
adc
pop
sub
sahf
hlt
shlb
icebp
xlat
xor
pusha
sub
icebp
fwait
cmpsl
mov
out
out
cs
es
xchg
push
cwtl
jnp
bound
push
dec
xchg
xor
push
hlt
push
adc
or
xor
jmp
mov
adc
mov
shrl
and
add
cltd
ja
js
xchg
int3
inc
add
adc
in
mov
je
inc
jae
stos
mov
out
test
jne
xor
lods
xor
mov
dec
adc
scas
jmp
idivl
out
roll
mov
cltd
push
sub
sbb
cmp
push
push
or
and
sbb
int
dec
popf
adc
movsl
test
icebp
cwtl
xor
lret
sahf
xchg
pop
addb
push
push
sub
jge
add
sbbb
ret
roll
sub
clc
push
stc
sub
stc
shll
fistpll
cmp
cmpsb
jmp
daa
pop
pop
xor
lds
mov
inc
scas
xchg
movsl
pop
pusha
mov
cmpsl
andl
mov
add
or
sub
lods
mov
pusha
push
push
cmpsb
int
repz
fmull
clc
jno
hlt
cmp
xchg
inc
jecxz
sahf
shlb
cmp
int
pop
in
push
test
inc
cwtl
jmp
jmp
movsl
insb
xor
lea
cli
repnz
fldl
xor
push
xor
or
insb
sub
mov
in
aam
in
mov
repnz
shll
lock
push
enter
mov
into
sub
nop
ljmp
das
jns,pt
xor
jo
inc
push
fwait
test
in
cmpsl
push
dec
rorl
fs
mov
xchg
dec
adc
mov
mov
into
jp
in
cltd
pop
mov
lock
xor
lcall
xchg
mov
xor
mov
cs
imul
xor
inc
add
fistpll
cmpsl
pop
dec
sub
ret
pushf
and
mov
sub
cmp
xchg
aaa
scas
fwait
xor
mov
outsb
sub
jg
cmpsb
in
inc
icebp
adc
sbb
lods
push
popf
mov
lret
add
shll
or
outsl
adc
add
sbb
test
insl
or
pop
shrl
lret
pop
cmc
icebp
pop
mov
mov
iret
loop
pop
subl
ret
cmp
mov
fcoml
push
bound
mov
clc
pop
outsb
sahf
lret
out
jl
jno
data16
push
push
cs
inc
cmpsb
sub
adc
sbb
leave
fsubp
aas
push
mov
adc
out
push
or
jne
loop
insb
jno
push
movsb
fisttpll
push
jmp
out
pop
leave
arpl
scas
adc
pop
imul
mov
or
push
push
mov
lods
or
jbe
mov
or
lcall
mov
in
push
sar
xor
xchg
xor
call
aad
ss
dec
test
iret
ffree
das
aaa
lret
dec
out
mov
push
std
divl
xlat
jnp
push
push
outsl
dec
xchg
mov
sbb
inc
inc
comiss
aam
sahf
repnz
shrl
popa
out
sub
movsl
out
adc
xor
fwait
pop
dec
aad
cmc
aam
and
insb
ds
fcoml
mov
pop
and
dec
add
adc
stos
mov
mov
add
dec
mov
or
fstpt
adc
ds
rcll
fildll
push
std
jle
ret
jl
outsb
jge
or
or
stc
outsl
ljmp
adc
out
push
ret
jo
cli
pop
sub
push
sub
mov
xchg
notb
jnp
jb
mov
sti
cmp
fists
or
sub
xchg
outsb
scas
xor
test
mov
xor
test
adcl
or
inc
cmpsb
xchg
insb
pop
call
push
cmpsb
dec
push
dec
data16
cmpsl
inc
cmp
xchg
jl
adc
jb
push
add
mov
mov
cli
es
adc
inc
inc
push
repnz
js
mov
or
sub
fcoms
and
icebp
dec
out
xor
lods
fwait
xor
rcrl
in
mov
inc
push
ljmp
ret
xor
and
sbb
aaa
cltd
jne
xor
ds
push
movsb
sub
dec
test
bnd
and
inc
mov
jmp
adc
ds
add
xchg
es
sub
push
icebp
cmpb
xor
mov
popl
pop
in
inc
aam
mov
lods
scas
inc
inc
push
outsl
push
xchg
out
xchg
arpl
rolb
push
insb
sbb
in
insl
insl
and
mov
inc
test
aaa
lcall
cld
ljmp
div
insl
cli
mov
aad
gs
dec
xchg
jbe
mov
das
sti
pop
popa
and
dec
and
negb
sub
cmp
loop
sub
or
sbb
cmpsl
jge
lret
ljmpw
xor
mov
pop
out
movsb
pop
sarb
sbb
mov
push
fiaddl
imul
and
stos
nop
push
dec
and
jb
and
fldl
popa
and
lret
dec
ret
jae
pop
jecxz
leave
and
add
cmp
in
in
mov
repz
cmp
jl
stos
xor
cmp
pop
jecxz
xlat
in
xchg
lods
rol
addl
movsl
fwait
icebp
popf
lods
pop
idivb
repz
inc
xchg
add
xor
cmp
push
mov
push
loop
fld
jge
push
inc
sub
inc
in
sub
pop
mov
subb
out
aam
sarl
pop
push
orl
pusha
sub
sbb
xor
or
inc
loop
in
lds
dec
fldcw
subb
jg
adc
jge
aad
add
xchg
sbb
dec
xchg
pushaw
adc
add
add
je
mov
scas
push
arpl
fwait
mov
xchg
addr16
cmp
inc
mov
shlb
mov
push
loope
inc
pop
and
sbb
sahf
sub
jae
dec
push
fldt
xchg
dec
inc
jmp
dec
cmp
cltd
test
divb
pop
dec
cmpsb
jp
mov
addb
loop
imul
lods
movsb
adc
and
cs
test
or
movsl
sarb
mov
dec
imul
cmc
out
repnz
dec
mov
fistpl
pop
ljmp
filds
adc
or
xchg
add
ss
xor
test
stos
mov
icebp
mov
pop
mov
lret
xor
jge
shlb
add
or
adc
inc
push
and
xchg
xor
cwtl
xor
dec
mov
lea
mov
mov
xor
les
xchg
pop
sub
xchg
out
dec
aad
loop
test
cmp
adc
scas
sub
gs
and
loop
in
mov
push
mov
mov
sub
and
or
in
push
sbb
xchg
mov
push
hlt
clc
or
mov
mov
inc
inc
inc
loope
dec
lds
rcl
leave
and
inc
sahf
call
jge
and
into
xchg
pop
push
clc
popa
add
xchg
push
mov
shl
mov
jno
fs
xchg
iret
mov
push
sub
push
dec
dec
scas
add
xchg
das
sbb
xchg
sub
outsb
dec
add
adc
lock
repnz
icebp
in
sub
fwait
pushf
fwait
jmp
aaa
stc
pusha
pop
dec
loop
push
mov
movsl
bnd
cmp
cmp
enter
jmp
addr16
sti
scas
xor
mov
push
inc
arpl
xlat
push
fwait
jge
stc
repz
and
orb
mov
mov
rcrb
and
push
ja
pop
pop
icebp
arpl
xor
xlat
stos
test
neg
xchg
jle
xchg
js
mov
push
jmp
into
sbb
mov
stc
xchg
scas
jae
and
adc
mov
xchg
mov
mov
lods
outsb
leave
cmpsl
mov
sbb
fidivs
addl
xchg
mov
fwait
test
pop
lods
rcrb
adc
aam
jnp
leave
arpl
lret
pop
jb
push
sbb
iret
dec
out
sub
insb
push
jle
mov
bound
pop
movsl
jo
mov
jns
or
sbb
test
sahf
testb
or
mov
int
adc
inc
push
jne
mov
outsl
andl
jg
les
pop
add
cli
popa
xchg
and
mov
sub
sbb
fyl2x
mov
mov
cmpsl
xor
lds
inc
inc
rclb
popa
and
arpl
rcrb
dec
sub
jg
aad
fdivs
mov
or
cmpsl
mov
cltd
xchg
adc
mov
mov
dec
notl
mov
add
sbb
ret
ljmp
mov
jg
jb
mov
fcoms
push
call
mov
and
inc
hlt
aaa
push
adc
aad
insl
cmc
pop
pushf
into
jmp
sbb
lret
scas
mov
imul
mov
fucomi
cmc
pop
fstpl
or
push
aaa
aad
popa
cmp
in
dec
mov
xor
inc
pushf
int3
hlt
mov
sti
in
sub
jl
mov
and
dec
inc
and
sbb
aad
scas
orb
pop
into
leave
cmp
es
arpl
dec
ret
jecxz
pushf
lds
cmp
lret
loope
sub
dec
xor
lret
pushf
pop
subl
loopne
cmp
outsl
mov
dec
lods
jmp
pop
call
mov
mov
dec
xor
lock
movb
jae
xlat
call
dec
push
aas
test
jns
dec
lret
push
cmpb
lods
les
sub
daa
xor
xor
add
mov
in
sub
xchg
lcall
mov
notl
sub
mov
xor
adc
adc
les
in
andb
stc
push
xchg
xchg
jnp
push
icebp
shrl
jg
jg
aam
daa
inc
sti
rorl
mov
scas
jo
ds
xor
cmpsl
repz
es
stos
add
adc
or
test
jno
aad
fcomps
or
cwtl
or
pop
je
inc
out
jnp
add
xlat
idivl
pop
sbb
test
mov
rclb
out
shll
pop
pop
movsb
enter
xchg
sbb
imulb
mov
adc
cmp
adc
pop
and
pop
cli
frstor
jge
lods
jne
xor
icebp
mov
lds
cmp
pop
sub
cli
mov
add
push
or
in
sbb
or
add
inc
mov
scas
xchg
scas
loope
repnz
repnz
addr16
je
mov
stc
iret
jle
imul
ja
add
push
inc
jae
adc
mov
xchg
xor
pop
sbb
cmp
inc
popf
rorl
pop
scas
int
test
cmp
idiv
sbb
loope
add
push
andl
es
cltd
icebp
jmp
mov
sahf
cmp
xchg
repnz
push
cmp
lret
push
lahf
or
lahf
add
pusha
adc
dec
ficomps
jnp
xor
lea
xlat
fildll
outsl
cmpl
jle
or
ja
push
adc
out
mov
arpl
cs
inc
nop
mov
ds
inc
adc
fdivrs
outsl
outsl
hlt
daa
xchg
push
xchg
stos
xchg
mov
sarb
dec
daa
inc
stos
push
adc
cwtl
orb
mov
pop
adc
in
rorb
xor
fwait
or
add
testl
mov
push
jne
mov
push
andps
lahf
dec
addr16
arpl
mov
bound
enter
xchg
inc
test
add
fsubr
cmpb
xchg
pusha
push
sbbl
mov
xchg
push
jge
sbb
in
xchg
pop
mov
cmp
sbb
imul
and
enter
jp,pt
add
mov
out
xchg
aad
iret
sub
sbb
or
push
lds
ret
mov
push
cmp
dec
sub
leave
fstps
push
xor
repnz
or
jbe
sahf
sbb
mov
pop
mov
mov
xchg
jl
ja
aam
xchg
xchg
stos
adc
mov
adc
es
call
mov
xchg
mov
dec
pop
scas
fwait
cwtl
cmp
ss
lods
mov
int3
shl
mov
les
insl
jno
sub
mov
arpl
lret
into
pop
jecxz
fdivs
jbe
xchg
outsb
push
outsl
mov
call
das
sbb
fstpl
stc
addb
dec
lret
popf
sahf
imul
je
inc
test
jge
inc
jno
stos
xchg
test
dec
aaa
cmc
rclb
bnd
xlat
jae
mov
repnz
push
and
gs
mov
jno
add
je,pt
les
hlt
lods
dec
pop
in
mov
push
sbb
adc
outsl
lret
mov
test
imul
clc
sub
enter
xchg
in
js
lret
imul
jmp
inc
and
ja
loopne
push
int
sub
insl
lcall
scas
pop
or
sarb
into
pop
jbe
cmp
inc
fsub
in
add
push
shrl
xchg
lret
pop
xchg
daa
pop
adc
loopne
notb
mov
popf
movsb
cmp
pop
adc
fdiv
testl
pop
aad
sbb
mov
outsl
lds
dec
enter
xor
push
mov
dec
dec
mov
jb,pn
stos
repnz
push
mov
adc
jle
andb
lahf
push
xchg
test
rcr
adc
out
out
xchg
jno
xchg
push
nop
mov
pop
jne
dec
xor
jno
fisttpll
js
and
add
xchg
lret
mov
repnz
and
mov
pop
add
cmp
ss
mov
jp
add
pop
mov
mov
clc
xchg
sub
mov
push
lock
repnz
or
xchg
xchg
or
xchg
fs
pop
sahf
dec
or
loope
test
stos
ja
adc
jae
call
fdivrs
jge
incl
push
or
repz
mov
les
jge
lock
or
jmp
clc
andb
rcl
imul
es
scas
divb
xchg
in
inc
mov
pusha
mov
popf
jge
sub
cwtl
xchg
out
popa
jae
fisttpll
mov
cwtl
fisubs
push
push
sub
jp
rcrb
pop
sti
or
push
jnp
jge
addl
aaa
push
mov
and
test
not
add
cmpsb
mov
pusha
notl
pop
js
jge
cmp
pop
bound
ret
cmp
mov
and
jmp
lret
and
lds
lods
es
icebp
mov
in
arpl
mov
xchg
scas
dec
mov
inc
sub
lahf
add
and
jae
pop
lret
movsl
cmp
xchg
adc
orl
jae
pop
and
pop
push
loope
imul
xor
push
cmp
lds
stc
mov
xor
sbb
fsub
pushf
aaa
cmp
sti
jp
shl
sbb
pop
sarl
lret
incl
mov
mov
push
add
mov
shl
inc
cmc
cli
pop
inc
es
dec
sbb
stos
dec
add
jns
push
and
jo
aam
dec
dec
jg
arpl
pop
fmuls
out
call
cmpsb
add
sub
lret
js
insb
push
jmp
mov
std
add
gs
sahf
sbb
or
fsubrs
fldt
xor
xchg
je
mov
sbb
fsubrl
les
push
pop
dec
pushf
jl
mov
push
dec
pop
test
sbb
imul
mov
pop
lods
push
xchg
cmp
icebp
clc
popa
jae
sub
mov
xchg
icebp
fisttpl
stc
fcoml
ret
addl
rcll
repnz
pop
aad
sbb
sbb
sbb
fs
inc
pop
xlat
int3
xor
outsb
dec
push
rol
sahf
pop
pop
dec
xchg
sahf
lds
mov
push
pop
outsw
divb
aam
xchg
outsb
out
aad
mov
lret
out
call
inc
fs
sarb
push
call
sub
arpl
inc
cld
pop
jae
inc
or
add
mov
add
cmp
mov
and
test
jne
xchg
inc
js
push
jnp
loope
fsts
xchg
in
inc
int3
sar
ja
pop
push
lock
cli
jle
andl
push
dec
cmp
loope
push
cwtl
iret
xor
sbb
pop
stos
mov
rcll
inc
dec
stos
xchg
pop
mov
repnz
push
dec
inc
push
cltd
imul
dec
xchg
and
pop
mov
adc
cmpsb
jg
out
sbbl
stc
int3
lods
imul
data16
xchg
adc
fadds
and
inc
jle
scas
xchg
fmull
scas
xchg
push
das
sbb
or
jns
cld
fnstcw
pop
pop
fidivrl
jns
clc
lods
mov
sub
dec
negb
gs
cli
cld
pop
lds
push
adc
fwait
push
hlt
cs
int3
push
inc
addr16
roll
jl
sbb
mov
xchg
sbb
and
cmp
popf
pop
scas
sbb
movsb
add
or
mov
notl
test
mov
jb
or
stc
aad
push
push
xchg
hlt
mov
pop
test
sahf
loopne
scas
lods
xor
or
cmp
test
pop
arpl
add
push
popf
hlt
ret
cmp
jno
dec
popf
jb
iret
push
in
in
les
je
fistpl
lock
nopl
or
ds
mov
adc
clc
mov
out
pop
ljmp
or
dec
subl
popa
mov
xchg
dec
jnp
lock
bound
push
mov
mov
pop
test
in
and
fnstenv
sti
sbb
dec
inc
xor
cmp
rolb
clc
xor
mov
mov
mov
push
adc
mov
and
into
push
in
aaa
push
jecxz
sub
pop
rcrb
ds
xchg
dec
es
pop
mov
fdivs
les
aas
lret
adc
pushw
aad
bound
lods
cmpsl
ja
out
imul
dec
movsl
and
mov
call
fisubs
fdiv
sbb
out
push
and
and
mov
xchg
sbb
inc
mov
xchg
mov
dec
popf
adc
xchg
xchg
jnp
xor
lret
mov
sub
lock
pop
test
xchg
pusha
mov
mov
ss
xchg
dec
fbld
lods
cmpsl
or
sub
push
lret
jecxz
popf
fsubs
cmpsb
lret
mov
and
mov
nop
sub
pop
repz
xchg
xchg
or
in
cmp
inc
pop
add
mov
mov
jnp
and
inc
jno
cmp
push
cmpsl
mov
in
mov
jno
aas
fsubrl
sub
mov
jmp
clc
push
shlb
scas
cmpsl
dec
mov
cmp
sub
add
jns
popf
jp
add
std
pusha
add
mov
push
pop
cs
pop
xor
inc
xchg
bound
mov
pop
decb
pop
daa
loop
jns
movsb
pop
mov
or
out
scas
xor
pusha
repnz
pop
sub
shl
popf
test
cmp
sub
add
lret
mov
jo
lret
loop
minps
inc
popa
jl
daa
shrb
pop
jecxz
cmp
outsl
pop
or
xchg
jnp
dec
mov
mov
stos
mov
dec
pop
cwtl
pop
and
cmpsl
mov
es
and
cltd
fcoml
mov
sbb
and
popa
and
ds
dec
ror
cli
mov
popf
inc
fidivrl
rcr
bound
rorl
jnp
pop
jne
xchg
push
pop
dec
add
mov
movsb
into
xchg
fiadds
aad
shrb
jmp
iret
xchg
push
lcall
pop
and
cmp
scas
mov
lods
shl
data16
in
or
movsb
fwait
pop
js
cmp
mov
outsl
aaa
jne
pop
test
push
sbb
sbb
ja
mov
gs
mov
push
jnp
in
mov
xchg
shrl
jno
sbb
sbb
xlat
push
bound
push
dec
orl
aad
in
inc
and
cwtl
fs
jne
cmp
or
loopne
les
stc
enter
and
rolb
andl
or
xchg
outsb
push
mov
icebp
xlat
jnp
pop
in
ja
aad
adc
xor
add
sub
pop
movsb
loope
and
aam
dec
sbb
mov
mov
dec
sub
addl
movsl
add
insb
add
sbbb
loope
mov
in
jg
mov
dec
sbb
mov
inc
push
stos
lock
cli
int
push
or
sahf
mov
lret
outsl
xor
cmp
mov
shrl
jge
lock
shlb
cmp
mov
cmpsb
dec
loopne
imul
cmpsb
adc
insb
sbb
stos
cmpsb
gs
sbb
push
push
outsl
mov
outsb
push
testb
cmp
scas
push
xchg
push
push
jg
gs
or
mov
stos
dec
inc
sbb
add
clc
insl
or
or
popa
mov
push
loope
insl
test
lret
pop
adc
cmp
mov
cli
add
stos
stos
dec
dec
xor
mov
cmc
out
popa
ret
and
outsb
imull
daa
in
pushf
xchg
sbb
dec
jno
add
jae
adc
pop
out
or
dec
leave
mov
xchg
cs
mov
sub
xchg
pop
iret
add
push
inc
jb
mov
add
pop
sbb
adc
xchg
xchg
in
cmp
or
int
cmp
dec
jge
and
dec
sub
popl
or
ds
jle
gs
ret
mov
xchg
stos
fcmove
cmpsb
mov
dec
add
lret
loope
test
int3
ja
loopne
fisubl
or
cmp
leave
add
mov
gs
sbb
lcall
aam
test
lret
sbb
lcall
adc
scas
xor
inc
es
cltd
imul
mov
std
loope
xchg
fdivl
add
stos
cmp
fnstcw
cmp
sbb
sbb
loope
and
fmul
std
sub
sbb
sbb
or
or
cli
or
push
xchg
cmp
or
inc
test
cmp
pop
xchg
imul
jle
sbb
pop
nop
das
sub
out
xchg
cs
and
addr16
pop
sub
sbb
cmp
cmpsl
fisttpll
in
stos
mov
mov
inc
push
mov
aad
and
icebp
ret
lahf
push
pushf
ss
subl
loopne
popa
or
mov
mov
hlt
notb
imul
sti
aas
std
into
inc
test
mov
pop
pop
cmpsl
lods
mov
xorl
jp
pushw
dec
pop
push
mov
sbb
cmpsb
ret
and
loop
nop
cmc
daa
mov
addr16
inc
ror
outsl
mov
mov
test
mov
pop
stos
int3
sbb
push
fisttpll
data16
xor
aam
adc
xchg
jp
jae
mov
lods
or
int
push
pop
sahf
or
xchg
movsb
pop
push
sub
orb
cmpsb
test
enter
test
out
loopne
mov
cmc
scas
sbb
outsl
cld
or
xor
ljmp
bound
sub
mov
inc
pop
aad
in
push
aam
enter
mov
hlt
stos
mov
jnp
sbb
out
lds
push
jb
das
jge
push
cwtl
dec
xor
add
pushf
sbb
inc
mov
imul
test
add
xor
fwait
lret
mov
and
in
test
push
daa
jno
popa
movsb
icebp
inc
ds
cmpsl
dec
sub
fstpt
push
lds
xchg
mov
inc
int
xchg
enter
in
cmp
gs
inc
xchg
push
inc
dec
push
fbstp
stc
call
adc
mov
arpl
push
ljmp
je
pushf
xchg
jb
jg
cmp
sbb
sbb
or
mov
mov
mov
lods
inc
pushf
fsubrp
lods
lret
fisubs
in
xor
push
add
or
add
movsl
js
lock
mov
mov
pop
jl
out
icebp
jae
outsb
and
add
sbb
add
jbe
ret
lret
adc
shll
mov
sub
clc
push
jns
cld
fisubrs
mov
stos
add
mov
cltd
adc
inc
sti
push
inc
fldt
shll
icebp
movups
mov
push
test
outsb
shl
push
stos
push
loope
iret
gs
popa
clc
lods
daa
fcmove
cmpsb
sbb
cwtl
int
push
rcl
cmp
push
mov
ret
and
mov
adc
push
mov
sbb
mov
icebp
cli
addr16
je
jge
movsl
and
or
pop
cwtl
push
clc
xchg
push
scas
push
adc
je
clc
fldenv
add
and
add
mov
pop
fstl
inc
xchg
mov
gs
jns
mov
iret
jp
cmp
mov
ds
sbb
mov
sarl
sub
mov
pop
outsb
lret
fs
shll
cli
sbb
cmpsb
icebp
xor
imul
out
movsb
sub
jae
or
push
xlat
pop
ret
ret
push
aaa
push
dec
out
mov
aad
mov
aad
call
insl
test
bound
aaa
lock
ud1
sarl
mov
ds
insb
ret
dec
test
jae
adc
popa
pop
dec
enter
dec
inc
movsb
lcall
dec
push
clc
enter
mov
mov
add
xchg
fdivrl
pop
adc
xorl
dec
in
mov
dec
daa
xchg
jns
subb
inc
mov
outsl
mov
outsl
ja
xor
pop
xchg
mov
xor
xor
mov
mull
sbb
xor
sub
push
mov
inc
push
push
jnp
push
mov
js
insb
lret
mov
inc
mov
xlat
push
pop
xchg
push
push
sbb
sbb
mov
xchg
lea
xchg
mov
or
sti
loopne
cld
ss
jmp
xchg
ret
int
test
cli
xchg
notl
add
push
popa
hlt
lcall
lret
pushf
fwait
out
mov
mov
cmp
inc
int
mov
es
dec
cmc
xchg
test
push
dec
test
fsubl
ret
inc
push
jnp
cmp
add
pusha
mov
stos
push
sbb
fwait
or
mov
jb
or
inc
cmc
or
mov
mov
icebp
div
outsl
adc
sub
lods
ja
aam
sbb
test
pop
or
aam
jns
rcl
xadd
jg,pn
inc
pop
int3
pop
and
cmp
std
insl
mov
dec
sahf
mov
lea
mov
outsl
repnz
das
mov
in
mov
xchg
fstl
xor
fs
mov
mov
and
cwtl
or
test
loope
int
or
call
subb
testl
mov
sub
pop
test
fmull
xchg
in
out
or
xor
cmpb
jns
sti
adc
andl
sahf
and
mov
fs
inc
xor
jp
or
or
leave
or
pop
adc
enter
hlt
push
loop
sbb
and
push
cltd
ret
daa
push
mov
adc
jno
or
jne
sar
sub
imul
stc
popw
adc
pop
push
adc
iret
pushf
into
sbb
fwait
arpl
in
dec
js
testb
data16
inc
mov
push
mov
insl
lds
rorl
int
and
push
cld
cmpb
jno
sbb
mov
mov
mov
inc
mov
loop
add
xor
push
int
xor
lcall
call
movsb
push
prefetch
mov
fwait
leave
xlat
mov
mov
jb
testb
lods
ja
sbb
mov
shrl
xchg
jb
xor
push
out
sub
imul
test
jo
idivb
shlb
dec
sub
in
inc
mov
sbb
cltd
xchg
sub
daa
cmpb
mov
pop
sbb
movsl
jl
mov
and
jbe
shlb
sub
fwait
mov
fcomps
stos
mov
das
filds
inc
in
sub
cmpsl
mov
or
jp
pop
add
cmp
repnz
pop
lods
mov
cmp
sbb
stos
add
lahf
sbb
neg
rol
push
or
adc
insb
mov
es
pushf
xor
or
imul
ror
out
data16
nop
add
cmc
pop
rol
add
arpl
or
arpl
call
jae
rclb
shll
mov
lods
sub
enter
lds
or
and
or
cmpsl
addb
out
stc
pusha
xor
cmp
adc
adcl
mov
ret
and
rorb
sbb
lret
cmp
das
cmp
inc
xor
push
and
loopne
jge
idiv
jo
mov
xor
push
cmpl
fisubrl
nop
push
fcmovb
sbb
pop
test
adc
adc
jg
jp
int3
fisttps
xchg
or
mov
add
sub
inc
aas
int
out
adc
jl
pushl
stos
dec
cmc
adc
inc
insb
mov
inc
testb
inc
cli
fnstsw
repnz
scas
in
xlat
fsubrs
roll
outsl
test
xchg
mov
test
sti
jne
sub
jge
xchg
inc
xchg
std
mov
pushf
pminub
clc
std
fwait
mov
ficoml
cltd
xlat
sarl
rorl
test
cmpsl
clc
in
mov
ja
cs
or
pushf
inc
pop
fisttps
repz
loopne
mov
sub
and
mov
jle
mov
aam
inc
jecxz
pop
test
hlt
cmp
mov
adc
dec
or
xchg
jmp
and
stc
cmp
jg
notl
sub
mov
hlt
dec
and
pop
jecxz
pop
loopne
sahf
lcall
lahf
ret
mov
scas
idivl
ja
loop
add
shr
mov
jns
dec
in
cmp
out
pop
or
cmp
xchg
cmp
sbb
xor
in
jns
mov
add
sub
mov
gs
shrl
xchg
stos
out
rcll
xchg
aam
adc
repnz
xlat
push
xchg
jp
ds
rclb
add
xchg
std
mov
sub
hlt
xchg
mov
sbb
jg
popf
mov
push
mov
pop
js
aas
dec
sub
adc
mov
xchg
pop
mov
pushf
insl
mov
ljmp
bound
mov
push
popf
sub
roll
mov
leave
aad
mov
mov
inc
inc
scas
out
and
adc
dec
std
xlat
scas
mov
xchg
or
mov
xchg
sbb
out
adc
orl
mov
inc
sti
jo
inc
inc
jns
movsl
jne
xor
mov
inc
add
jns
dec
ret
dec
es
ljmp
andb
and
or
inc
rcrl
lahf
xor
and
xchg
cltd
adc
cmp
cmpsb
mov
stc
ss
jl
lret
sbbb
int3
and
add
push
push
clc
sub
jmp
pop
sahf
cmpb
cwtl
dec
ret
mov
aas
mov
shrl
pop
mov
das
sub
adc
js
call
xor
enter
cs
pushf
lcall
wrmsr
adc
mov
mov
pushf
test
ret
in
stos
roll
shl
push
imul
mov
mov
scas
dec
mov
inc
je
cmp
inc
xchg
sbb
in
int
frstor
mov
xadd
push
mov
cmp
mov
or
pop
lret
add
push
or
cmc
sub
decb
pause
or
dec
mov
cmp
xchg
lods
sbb
push
mov
mov
push
inc
and
popf
sub
icebp
lret
js
dec
mov
xor
adc
movsl
jb
aaa
sub
mov
lret
push
rcl
loop,pn
adc
sbb
movsb
scas
cmp
leave
ljmp
xchg
pop
popf
push
aam
xor
fisttpll
dec
push
ret
dec
imul
repz
fiaddl
and
sub
icebp
dec
mov
xor
pop
repnz
pop
lock
inc
sbb
dec
mov
mov
dec
cmp
or
mov
clc
add
xchg
into
popf
dec
adc
popl
jo
sar
jmp
push
in
or
and
pop
adc
stc
inc
mov
xchg
fs
addr16
lret
outsl
ficompl
stos
xchg
out
xor
ret
dec
sbbl
sbb
push
inc
jp
iret
aas
stc
stos
xchg
inc
mov
es
xchg
insl
imul
add
push
pop
xlat
push
ret
pop
pop
and
sti
rorl
bound
cmp
cld
fiadds
and
mov
call
pop
or
loop
mov
test
mov
ja
fsubl
std
mov
fcompl
mov
test
dec
push
cs
imulb
and
mov
xor
push
call
lea
into
mov
ljmp
ljmp
push
add
jmp
test
hlt
pop
rcll
movsl
inc
mov
inc
or
push
or
test
pop
mov
and
mov
push
or
cmpsl
and
fwait
adc
outsl
int3
in
and
add
mov
int
in
jns
mov
lcall
and
jmp
out
repnz
bound
iret
inc
xor
cmpsb
or
push
lea
icebp
in
loop
in
lods
add
loopne
andps
pushf
mov
outsb
jp
push
bound
mov
test
push
pop
fnstcw
push
xor
pushf
call
data16
xor
std
ljmp
ret
popf
out
push
adc
clc
ret
aaa
sbb
in
call
fstpt
lock
bound
mov
xlat
lcall
pop
mov
lret
and
aad
movsl
gs
scas
dec
test
icebp
fisubrl
and
jge
andl
or
pop
fldl2t
sbb
and
lahf
or
xchg
pop
imul
scas
adc
fidivrl
and
cmp
loope
int
popa
shll
push
fbstp
aad
sarb
mov
hlt
adc
arpl
mov
testb
fstps
inc
push
ja
insb
inc
fadds
adc
call
sbb
stc
sub
cmc
out
lahf
insl
cwtl
in
dec
xchg
nop
push
ds
into
xchg
push
lods
sub
jp
xor
in
ljmp
xchg
sahf
pop
insl
mul
mov
lds
cwtl
jle
lahf
inc
sar
pusha
out
mov
pop
sete
push
cld
adc
cli
call
leave
out
mov
dec
mov
mov
cmp
dec
rolb
mov
ljmp
sbb
sub
addr16
ud0
adc
sub
xchg
mov
fistpll
push
in
xchg
cld
mov
sub
adc
arpl
or
add
clc
jmp
out
or
divl
pop
pop
stos
xchg
add
push
mov
dec
repnz
or
leave
popa
iret
rorl
test
out
mov
je
jmp
mov
sub
sub
dec
fsubrs
sbb
pop
cs
icebp
pop
filds
loope
lahf
add
xchg
or
outsb
push
inc
adc
out
sub
sbb
jl
lcall
and
jl
cmp
std
inc
jl
xchg
movsb
lock
aas
out
sahf
xchg
dec
pop
or
mov
xchg
mov
std
jmp
push
clc
movsb
mov
xchg
mov
scas
inc
mov
lods
movd
int
das
mov
faddl
lret
test
cli
fs
sub
push
xorl
and
scas
aaa
mov
xlat
call
insb
cmp
dec
xchg
sbb
xorl
push
leave
adc
mov
or
mov
popf
adc
cs
cmpsb
mov
sbb
mov
inc
dec
xchg
and
inc
icebp
sbb
pop
dec
in
add
cmp
testb
fwait
lock
jns
iret
enter
inc
cld
jnp
sub
dec
out
cmpsb
fmull
xchg
movsl
xor
ffree
jle
stc
insb
pushf
sbbb
repz
xchg
lods
arpl
mov
int
repnz
movsb
roll
out
adc
cmpsl
push
adc
mov
iret
add
pop
xor
xlat
pop
mov
jb
js
mov
dec
dec
pop
enter
cmp
int3
xlat
out
and
in
insl
jnp
sahf
rorb
adc
xlat
jg
xor
inc
lods
pop
or
outsb
fiaddl
jb
ror
cmp
inc
subb
pop
mov
loope
mov
jmp
cmc
jle
icebp
and
mov
subl
inc
repz
dec
fcom
jbe
out
es
pushf
ds
jecxz
testl
xor
icebp
dec
lret
in
or
fmuls
jge
or
in
imul
lds
into
and
imul
iret
cltd
icebp
xchg
push
fiadds
fisubs
jl
es
fimuls
pop
neg
pushf
jp
xchg
ljmp
xchg
jp
shlb
mov
iret
jle
mov
sbb
inc
ja
mov
shl
inc
mov
xchg
and
mov
sbb
pop
cltd
mov
dec
adc
push
outsb
xchg
mov
iret
add
jae
movsb
or
inc
icebp
lcall
jg
mov
pop
cmp
inc
sub
fdivrl
mov
inc
inc
in
jne
dec
mov
out
test
or
into
sbb
out
pop
adc
int
mov
popf
aas
test
cltd
leave
mov
test
mov
stos
jmp
popa
cmpsl
dec
cmp
clc
adc
movsb
xor
push
les
mov
icebp
mov
sbb
out
pusha
in
aad
adc
or
sub
cmp
push
shlb
xorb
cmp
js
repnz
push
pusha
jne
cmpsl
and
jb
test
repz
ljmp
sub
cmc
cld
mov
jmp
mov
xorl
push
add
adc
repz
aad
imul
jle
push
jnp
add
aad
dec
arpl
sbb
rorb
clc
cmp
push
add
cmp
sti
xor
inc
andl
mov
mov
call
call
cmp
jbe
inc
adc
inc
jecxz
jo
les
cwtl
or
pop
loopne
add
leave
imulb
jl
iret
jbe
xlat
shlb
mov
movsb
cmp
cmp
inc
adc
stc
aaa
and
popa
nop
push
repnz
sbb
mov
lret
adc
jbe
jmp
sbb
shl
dec
das
xchg
and
inc
cwtl
dec
test
inc
in
dec
sti
xlat
mov
bound
cli
or
add
mov
lods
mov
cwtl
push
lahf
rcll
sbb
out
mov
lret
mov
ljmp
and
jb
lcall
jbe
cmp
sti
jnp
es
lret
push
hlt
adc
sub
leave
stos
iret
or
mov
xchg
xor
stos
int
cmp
enter
mov
outsl
and
clc
movsb
jge
out
cs
in
ja
lcall
rolb
dec
mov
cmp
or
mov
cmp
mov
adc
xchg
test
aam
push
cmpl
cmp
inc
pop
pushf
fisttps
pop
mov
mov
cmp
sbb
insl
adc
je
jnp
outsl
xchg
sti
insl
shrl
jb
or
xchg
stc
add
aad
push
mov
out
adc
mov
int
fnstenv
mov
xor
jo
jno
dec
aas
mov
push
jno
pop
cmpb
mov
xor
mov
inc
jle
push
adc
test
adc
fstpl
scas
iret
jbe
dec
mov
fwait
inc
xlat
or
sbb
adc
push
rcrl
test
pop
ja
and
insl
sub
insb
out
aam
in
adc
stc
push
and
divl
jg
or
push
lret
xchg
shll
fstl
xor
pop
test
dec
mov
inc
jmp
mov
mov
movsb
sub
add
aaa
xchg
mov
lret
xchg
dec
nop
in
mov
lret
add
call
jecxz
mov
jmp
out
icebp
pop
dec
push
push
mov
repnz
add
xchg
out
xor
les
pop
cmp
int3
int
ret
xor
out
cltd
inc
mov
xlat
sub
addl
nop
aad
bound
inc
mov
lds
orb
repz
adc
mov
sbb
sub
inc
jecxz
cmp
jae
add
test
int
adc
xchg
test
lret
popa
mov
xlat
std
mov
daa
dec
cmp
in
push
cli
lret
sub
movsb
cmc
aaa
sti
jno
testb
in
mov
imul
gs
clc
adc
inc
inc
int
jmp
xor
push
jb
sti
pop
lret
stc
out
cmp
je
fcoml
pushf
pop
mov
dec
mov
movsb
scas
ret
pop
mov
lret
mov
adc
push
fsubrs
xlat
jae
adc
popa
or
sbb
pusha
jp
xor
mov
pop
push
mov
pusha
mov
hlt
cmp
repz
outsb
mov
loop
xor
jb
sar
mov
mov
push
lods
and
icebp
mov
add
inc
jno
les
outsb
int3
xor
fmull
popf
daa
xchg
popaw
inc
out
mov
ja
stos
imul
dec
lea
xchg
dec
movsl
mov
or
pop
xor
cmp
sub
mov
xchg
xor
aam
or
jecxz
pop
mov
lods
ret
das
cmp
mov
stc
sub
repnz
out
cmp
pushf
and
out
add
lods
movsb
jge
add
out
xchg
fistpl
insl
xchg
cmp
aad
xchg
ret
xor
push
adc
repz
pop
imul
or
or
xchg
aas
push
dec
bound
shr
testb
mov
adc
dec
lret
pop
ja
mov
pop
dec
inc
push
push
mov
fiadds
inc
push
and
adc
mov
and
mull
jb
dec
test
jb
push
test
xchg
push
jge
push
rcrb
lahf
inc
jle
jbe
sub
add
push
mov
pop
mov
cmp
xchg
mov
jne
fisttps
daa
and
fdivl
mov
imul
jge
mov
jns
out
or
push
xchg
mov
push
xor
mov
xor
and
iret
frstor
aad
pop
imul
repnz
pusha
jg
lahf
loopne
sub
xor
jle
lret
shr
and
hlt
fidivl
pusha
std
lods
imul
cmp
lahf
push
inc
imul
sar
test
and
daa
aas
mov
and
add
stos
xor
and
insb
xchg
xchg
jl
dec
daa
lea
addr16
fistl
xchg
sahf
or
mov
loopne
ja
bndldx
stc
mov
leave
push
aad
in
int3
push
inc
dec
mov
adc
loope
or
fcomp
jno
or
dec
call
nop
out
out
adcb
inc
mov
imulb
dec
xchg
repz
and
or
dec
mov
stc
pop
mov
xor
xor
insl
mov
mov
inc
ljmp
add
jo
push
add
lods
xor
jle
inc
pop
dec
test
aad
ret
or
pop
rolb
aad
pushf
jmp
ficomps
das
push
aas
push
inc
xchg
cmp
cmp
sub
lret
xor
inc
rorl
je
mov
xchg
insb
pop
jne
popa
mov
adc
pop
outsb
sbb
xchg
xor
add
in
mov
pop
push
push
es
adc
hlt
dec
stc
inc
rcll
mov
jnp
sub
add
daa
loop
xor
leave
cmp
sub
adc
stos
call
adc
lret
push
mov
insl
xlat
fnstcw
clc
stos
mov
jge
jne
dec
ret
arpl
xor
add
cld
inc
xchg
inc
test
mov
push
mov
jmp
adc
sub
pop
or
rorb
test
hlt
sbb
push
das
dec
rcll
dec
mov
enter
lret
adc
dec
xchg
icebp
movsb
divl
popf
push
lods
movsb
jo
sub
test
push
lea
scas
mov
push
sti
inc
adc
push
mov
pop
sub
call
sarl
insl
mov
xor
lret
push
scas
xchg
mov
mov
and
pop
aaa
push
mov
aaa
jnp
loopne
push
jne
popf
lret
pop
iret
jg
andb
add
mov
dec
or
jns
popa
adcl
jle
and
mov
mov
cmpsl
cmp
mov
test
aam
or
push
lods
adc
xor
xchg
xor
daa
sub
imul
ret
out
cwtl
out
pop
mov
mov
shl
sbb
and
pop
mov
shlb
xchg
cmp
inc
and
ss
add
or
xchg
xlat
loopne
xchg
push
pusha
es
aas
cmp
subl
xchg
das
or
push
call
mov
jle
push
cmp
mov
enter
mov
sarl
movsb
loope
inc
fisubrs
pop
sbb
sbb
dec
out
addr16
stos
loopne
ss
stos
dec
jno
sbb
xor
popf
scas
daa
xchg
ja
sub
bound
push
xor
jne
mov
cmp
jge
xchg
or
dec
fidivl
das
clc
jmp
xchg
mov
cld
fisttps
std
push
clc
orb
sbb
mov
inc
and
mov
mov
push
insl
adc
or
sub
test
fbstp
iret
inc
jne
adc
push
xor
mov
or
in
test
inc
lea
es
mov
or
mov
movsb
push
mov
in
xchg
movl
fldl
pop
cltd
inc
mov
xor
scas
aam
xlat
flds
outsl
jbe
fsubrs
dec
fsubl
mov
fcompl
lock
clc
iret
mov
das
sarb
xchg
sub
cltd
push
xchg
or
and
or
iret
inc
pop
dec
pushf
dec
outsb
pop
pinsrw
mov
lods
cltd
cmpsl
test
aas
fiadds
test
fisttps
std
loope
nop
mov
dec
add
push
pop
dec
inc
dec
or
xchg
push
lret
xchg
add
inc
sahf
cmp
adc
aam
push
mov
sbb
and
mov
clc
sbb
cmp
add
xor
das
sub
mov
jno
flds
sti
stc
xchg
dec
inc
loopne
jns
je
stc
enter
jb
lret
cmpb
ret
int3
mov
stos
fistl
add
aas
push
inc
xchg
nop
arpl
fdivl
xor
push
xchg
inc
pop
daa
push
push
lods
rcll
test
aam
or
pushf
pushl
outsl
add
xchg
cmp
imul
dec
into
iret
pop
sbb
inc
repnz
aaa
fucomi
mov
cmp
cmp
rcr
std
mov
dec
mov
fistpl
pop
sub
adc
aam
dec
mov
mov
std
inc
int3
and
mov
js
and
jge
rcr
cmp
outsl
push
xchg
mov
es
ss
movsb
ret
xchg
lret
std
cmp
test
loope
push
xchg
pop
pop
sahf
movsl
mov
mov
xchg
mov
xchg
jl
jecxz
add
jbe
jg
aam
cli
movsl
ja
mov
fstpt
pop
pop
in
pusha
xchg
sub
rcrb
sbb
jle
out
push
push
adc
cld
das
mov
xchg
nop
mov
adc
jle
push
push
or
xchg
or
in
insl
out
push
mov
mov
cmpsb
popa
adc
sub
add
scas
loopne
push
outsl
push
loop
xor
mull
mov
dec
dec
out
push
jne
add
or
push
das
ds
fmull
idiv
lret
push
fstl
lods
xorl
in
xor
adc
add
stc
dec
int3
pop
movsb
rolb
cmp
sub
mov
test
mov
lret
xchg
rcrb
pop
popf
btc
pop
rorl
push
sub
fildl
adc
fdivrs
lea
in
idiv
ret
xchg
and
push
xchg
mov
aaa
mov
sub
mov
movl
cmp
xchg
loop
stc
xor
sbb
fimuls
nop
xor
int3
insl
xchg
rcr
pop
xor
mov
sbb
cmp
stc
outsb
dec
dec
and
xchg
dec
and
adc
lds
lods
push
shlb
mov
mov
adc
xor
rclb
pusha
and
sub
mov
push
and
out
sub
sub
fldt
addl
aam
jmp
scas
pop
xor
inc
out
cs
cld
mov
xor
add
scas
rcrb
sub
das
pop
jle
mov
ss
rorl
jae
mov
test
sahf
testb
fwait
mov
jge
cmp
inc
sbb
xchg
pop
xor
lret
dec
je
cwtl
xchg
push
pop
les
lods
ljmp
cmpb
cmp
and
aaa
or
loop
mov
xchg
stos
add
test
ret
dec
leave
in
aaa
lret
push
add
pop
fadd
jp
aad
into
mov
ret
add
imul
ret
pop
cmpsl
pop
subb
push
outsl
mov
adc
ficompl
pop
sti
out
notb
and
dec
clc
add
mov
insl
xorl
pop
sarl
aad
orb
ret
dec
jle
xchg
dec
xchg
xlat
cmp
inc
lret
jmp
inc
cmpsl
xchg
fstp
or
push
dec
jne
or
or
call
adc
shll
jo
out
push
ss
and
scas
push
sub
sub
mov
dec
pop
cmp
adc
push
cmc
mov
cmpsb
scas
inc
jmp
imul
add
adc
pushf
lock
sub
ror
mov
xor
movsb
repz
scas
and
mov
fidivs
popf
cld
or
pop
push
lods
push
aam
pop
lcall
and
push
mov
inc
sbb
pop
and
and
inc
push
push
lret
pop
sti
clc
push
out
pop
in
mov
ja
jmp
xchg
call
mov
cmp
pop
andb
xchg
or
sbb
adc
jp
lret
push
mov
xchg
sti
sub
nop
mov
push
mov
mov
mov
hlt
mov
jae
ljmp
dec
sahf
jae
cwtl
imul
hlt
cmpb
adc
dec
xchg
cmp
sbb
ror
pushf
xchg
cmp
adc
popf
dec
xchg
push
out
mov
cmp
lret
loopne
aaa
inc
scas
sbb
mov
push
xchg
popa
les
and
loope
lea
lret
sub
nop
sub
dec
out
insl
and
adc
cmpsl
aas
sahf
push
jb
sahf
cli
push
fidivl
push
jnp
xorb
sub
adc
pushf
ds
lock
out
mov
ret
out
xchg
or
ret
imul
cmp
sub
push
aaa
xchg
inc
dec
cmc
aaa
imul
or
mov
add
loop
lea
enter
dec
cmp
sub
es
popf
sub
fdivrl
cwtl
adc
in
dec
outsl
mov
imul
in
and
xchg
sbb
adc
cmpsl
mov
and
das
cltd
std
jb
inc
inc
push
aad
cmp
fsubl
jnp
addr16
arpl
push
mov
lret
xchg
or
cli
insb
xor
out
push
test
inc
mov
mov
iret
in
xchg
jo
lods
aaa
gs
jle
and
jb
testb
fistps
outsl
jle
mov
cmp
add
and
push
push
lcall
stos
fidivl
jo
pop
fmull
jle
test
cs
test
inc
mov
hlt
push
cmc
push
xor
frstor
dec
sbb
or
das
dec
push
inc
push
out
mov
scas
or
or
lret
into
in
outsl
lods
addl
lods
orb
and
jb
pop
cmp
out
outsl
icebp
xchg
push
lods
push
aaa
fstpl
imul
cwtl
test
mov
loope
jl
jle
xchg
or
sti
call
cmpsl
lods
mov
xor
out
pop
insl
xchg
xchg
in
rorb
dec
test
pusha
orb
addr16
sbb
jbe
or
push
pop
jbe
xchg
je
jns
pop
gs
test
ja
jnp
int
mov
push
inc
push
mov
popa
mov
xchg
stos
cmpsl
sub
rol
push
sub
dec
sbbb
dec
jecxz
data16
lahf
data16
lret
and
subl
nop
iret
adc
dec
xchg
lcall
loop
pop
cmpsb
into
cmp
in
jo
mov
arpl
stc
lock
xchg
jbe
das
imul
iret
rorl
lods
inc
lods
add
add
addb
jnp
inc
xchg
iret
mov
dec
sbb
adcb
add
stc
test
inc
mov
push
mov
sub
push
pop
inc
loopne
out
cmpsb
sbb
sub
sub
inc
jp
lcall
inc
mov
or
push
inc
sub
sub
fwait
mov
imul
ds
or
adc
inc
rol
push
xchg
and
divb
in
cmp
pop
movsb
mov
out
jmp
dec
mov
in
dec
fisubs
pop
das
xor
or
jle
ja
lcall
enter
xor
sbb
and
lock
mov
push
in
aad
lods
fidivs
arpl
shl
cmp
aas
inc
shrb
ja
stc
sbb
iret
cmp
rcll
rcll
es
mov
je
push
mov
sbb
dec
add
mov
dec
dec
sbb
xchg
mov
sbb
mov
dec
xchg
lock
or
stos
lahf
cmpsl
je
ret
arpl
or
sub
pusha
jns
ljmp
cmpsb
lahf
push
or
push
jb
push
ds
dec
popa
push
cmp
push
jns
mov
aam
xor
subb
add
aaa
cs
lods
xor
loopne
push
jp
mov
jle
adc
push
or
repnz
cmp
mov
dec
push
popa
push
push
mov
ret
xchg
dec
mov
mov
pop
add
ficomps
dec
mov
pop
push
rclb
fs
addr16
pusha
jl
push
inc
movsl
out
and
or
imull
int
push
add
cmc
loope
daa
rcll
test
jno
test
mov
mov
xor
push
pop
adc
in
jno
addb
mov
mov
dec
pop
mov
cmp
sbb
xor
sahf
jns
cs
outsl
ret
cmpsb
ja
dec
gs
mov
jno
or
xor
pop
jnp
push
ror
lcall
rorb
cmpsb
dec
sbb
lret
lock
dec
inc
and
hlt
shr
push
xor
jl
pushf
jle
cmp
or
into
xor
mov
int3
dec
push
test
flds
movsb
sti
cmpsl
push
mov
cmp
sub
fdivrs
sar
pop
ror
add
stc
cmp
mov
push
xchg
inc
out
iret
repnz
arpl
inc
xor
es
mov
sub
aas
into
mov
cmp
je
mov
ja
cmp
cs
outsb
ret
jo
shll
pop
jp
loop
push
mov
mov
ds
mov
xor
add
lods
or
pop
mov
mov
inc
out
mov
xchg
je
fiaddl
loope
mulb
imul
or
inc
popf
into
mov
inc
push
push
out
ja
push
ja
pop
test
movsb
xchg
fwait
movsl
sbb
inc
insl
inc
add
sbb
adc
cld
xor
lea
js
les
cmp
or
xor
popf
ja
and
cmpsl
and
inc
repz
aam
dec
test
cmp
pushf
es
andl
pusha
push
loopne
sbbb
mov
jge
cmp
push
push
shrl
cltd
and
sub
rcrl
mov
mov
push
xchg
outsb
scas
add
inc
les
je
mov
hlt
iret
stos
int3
enter
cmp
push
in
sub
mov
js
pop
pop
and
dec
fbld
pop
in
inc
lods
dec
cmpl
push
cltd
aam
mov
xchg
and
pop
push
pop
mov
aam
inc
lock
jns
xor
test
mov
xchg
jbe
iret
data16
jne
or
ds
mov
fimuls
lock
xchg
jg
adc
rcrb
dec
sub
mov
jp
mov
cmp
add
cli
jle
out
jecxz
cmp
xchg
fwait
and
arpl
jmp
jnp
sarl
adc
loopne
xchg
cltd
fcmovnb
cli
dec
push
frndint
xor
dec
popa
cmc
pushf
dec
les
stc
lret
xchg
addr16
cld
xchg
pop
sub
insb
cmp
sbb
sub
test
and
cmpsb
das
sbb
pushf
sub
icebp
pop
loope
ror
outsb
add
pop
std
jmp
jno
clc
aam
mov
ss
push
push
push
mov
sbb
dec
fdivrl
lcall
stos
sahf
out
mov
inc
mov
sbb
inc
jo
and
out
xchg
jp
sbb
push
push
das
jmp
add
push
add
rclb
mov
stos
sbb
or
xchg
pop
out
clc
mov
iret
shrl
jmp
jl
xchg
shl
sti
and
mov
mov
dec
es
fcomps
add
lea
ds
xchg
out
ja
push
int3
inc
xchg
jecxz
mov
pop
add
int3
ffree
pop
enter
repnz
pusha
mov
pop
dec
jecxz
pop
xor
aaa
ret
mov
mov
dec
icebp
mov
push
lcall
mov
jecxz
mov
lock
mov
test
stc
stos
and
sub
test
lds
fdecstp
dec
xchg
push
loope
jecxz
sub
push
or
dec
and
pop
lret
and
sbb
pushl
rcl
or
cwtl
push
out
icebp
mov
cmp
popa
xor
rorb
push
leave
pop
mov
jno
addr16
cld
lret
and
mov
shrl
out
adc
jb
enter
push
int3
jp
jns
mov
jae
adc
test
pushf
sub
mov
shlb
xor
mov
dec
je
sar
dec
and
mov
add
push
popa
mov
shlb
insb
sahf
sub
incb
xchg
mov
cld
cmp
inc
ljmp
mov
psraw
sbb
jb
mov
push
lcall
addr16
xor
in
icebp
pusha
ss
cmp
jno
in
push
dec
mov
jno
xchg
jno
loop
popa
gs
fldt
lret
and
mov
lret
addb
fsubl
push
push
mov
fdiv
lock
mov
popf
imul
and
push
jge
push
loope
stc
jbe
cmp
or
fadds
ja
inc
cld
jno
pop
repnz
into
sbb
xchg
dec
je
sti
sbb
push
sbb
jp
jg
addr16
and
sbb
and
push
cmp
xor
mov
inc
shrb
add
movsb
pop
fadds
es
xchg
filds
fistl
jp
lods
shll
fbld
push
mov
pop
mov
dec
out
xor
cmp
pop
jbe
push
sub
pusha
push
sbb
repnz
divl
ss
and
pusha
data16
mov
dec
dec
je
mov
ljmp
outsb
xlat
pop
imul
sbb
jno
jmp
dec
mov
xchg
cmp
test
mov
int3
jmp
push
dec
or
lcall
fisttpll
imul
or
lret
xor
push
into
das
or
imul
and
or
mov
dec
lds
jp
jo
inc
fldt
add
xchg
int3
sub
sahf
iret
xchg
popa
cli
jl
dec
leave
ret
imul
aam
lock
in
jl
loopne
add
ror
pop
sbb
in
push
inc
push
add
xchg
sbb
lret
adc
mov
dec
jae
fdivrs
push
cmp
das
loope
aad
pushl
inc
shr
and
aad
out
push
in
mov
xorl
mov
std
sar
jne
sub
enter
sbb
das
inc
push
jge
mov
rorb
cmp
mov
mov
aad
pop
shlb
bsr
adc
add
xchg
adc
mov
jmp
stos
xor
sub
loop
fisttps
int
cmp
les
cmp
cli
stc
int3
std
divl
call
je
outsl
lret
xor
outsb
push
js
jae
out
xchg
pop
inc
idivl
es
pushf
push
cmp
dec
push
pushf
orl
fwait
xlat
dec
ja
imul
scas
cli
in
fcomp
mov
add
mov
clc
lahf
mov
adc
pop
pop
dec
mov
and
in
dec
inc
mov
sbb
xor
out
xlat
enter
add
sbb
fcomip
cmp
in
nop
fs
lea
aam
or
xchg
outsl
push
mov
push
pop
inc
mov
pop
fcmovb
xchg
sub
shlb
or
lcall
lock
sub
xchg
les
inc
sbb
or
push
daa
shrl
mov
xor
push
shll
fsubl
sbb
lahf
imul
jmp
mov
add
mov
pushf
xchg
xor
ficompl
mov
jne
lret
cmp
xor
jae
dec
arpl
out
mov
xor
lahf
repnz
add
clc
add
test
cld
outsb
mov
test
lods
jg
in
mov
add
add
out
ljmp
mov
je
push
dec
adc
out
pop
cwtl
jecxz
mov
inc
xchg
fcomps
jae
inc
lods
jmp
mov
out
daa
arpl
xor
out
xchg
call
add
sbb
out
mov
loop
stos
jbe
add
fs
xchg
repnz
xor
pop
mov
idivl
cmpsb
loope
rcll
mov
lcall
in
sbb
xchg
sbb
lods
sub
xchg
shl
mov
pop
mov
sub
jae
rorl
popa
pop
jl
data16
cmp
lods
jp
pop
cld
or
or
cmp
xor
pop
jno
push
fimull
les
pop
dec
mov
clc
xor
mov
out
idivl
stos
or
mov
cmp
inc
in
pop
out
push
fdivl
push
sub
mov
xchg
mov
pop
xchg
aam
ja
ljmp
fists
xor
pop
loopne
lods
mov
mov
test
fldt
xor
enter
mov
pushf
mov
sbb
jg
mov
popa
inc
sub
gs
inc
enter
pushf
add
js
jmp
in
or
shr
arpl
ljmp
cmp
mov
rcr
xchg
push
pop
dec
xorb
ljmp
lds
mov
adc
fsubrp
imul
sbb
adc
dec
pop
or
mov
std
push
outsb
pop
sub
stos
andl
fstpt
adc
in
jnp
arpl
xor
out
push
jo
pop
mov
mov
push
call
test
ds
adc
pop
pushf
adc
in
repnz
xchg
ss
mov
in
push
xor
push
push
cmc
or
mov
cwtl
xor
push
push
cwtl
cmp
sub
jecxz
jge
mov
fsubrl
add
daa
push
lds
pop
push
jns
jne
adc
sbb
rcl
andb
push
call
jecxz
ficoml
xchg
sub
inc
jae
ja
mov
in
inc
imul
jge
mov
mov
xlat
loopne
dec
mov
sbb
mov
sbb
out
stos
outsb
hlt
out
sbb
cmp
out
into
lret
bound
sbb
dec
in
pushf
movsl
adcb
cs
les
lea
loopne
fwait
stos
jae
sbb
mov
jno
adc
insb
pop
inc
sub
xor
pop
pop
fisttpll
loope
push
push
adc
repz
jp
sub
mov
jo
mov
sar
sbb
mov
mov
push
adc
sbb
inc
push
lahf
xchg
ja
lcall
add
addr16
enter
jns
jns
aad
in
arpl
mov
std
lods
repnz
mov
xor
sbb
mov
outsl
int
jo
inc
popf
pusha
mov
sub
sub
mul
xor
push
ja
vminps
mov
mov
or
mov
in
dec
push
add
and
pop
in
adc
and
sub
fwait
nop
mov
fsubrl
je
stos
adc
sbb
mov
sbb
iret
arpl
push
jcxz
stos
mov
jnp
mov
cmp
hlt
inc
stc
xchg
hlt
loopne
dec
sbb
int
dec
frstor
sbb
call
lods
arpl
xchg
sub
pop
or
or
pop
fldlg2
xchg
inc
mov
in
xor
popf
icebp
insl
fmuls
out
call
push
jle
jp
dec
cmp
cmpsl
sub
stc
or
and
nop
and
insl
vcvttss2si
and
and
rcrb
dec
shrb
loop
pop
clc
hlt
out
icebp
imul
mov
das
out
pop
xchg
lret
ljmp
arpl
mov
clc
mov
adc
aam
pushl
fwait
loop
sbb
push
les
and
and
in
sub
adc
push
loop
jo
xchg
fcomps
or
outsb
lea
pop
sbb
lds
test
pop
add
or
lret
shlb
mov
loopne
test
push
ret
je
dec
sub
test
mov
adc
xor
add
mov
mov
lods
cmp
xor
mov
jle
lret
sbb
dec
xchg
mov
jecxz
mov
sub
xor
or
mov
dec
mov
insl
mov
fists
mov
mov
adc
fdivrl
push
movsl
adc
sub
daa
mov
ss
xchg
jo
mul
es
dec
pop
cmpsb
cmc
out
insb
push
jb,pt
jg
mov
inc
xchg
ret
dec
and
das
dec
mov
rcrb
test
scas
or
push
sahf
mov
scas
push
js
lea
cltd
and
sti
push
inc
pop
fdivs
fs
in
test
jecxz
cmp
and
xor
shl
out
fwait
xor
sub
stos
inc
sub
or
jbe
scas
mov
jl
loop
pop
xchg
xchg
ja
imul
adc
pop
es
loopne
mov
mov
int3
add
sbb
mov
jmp
push
cmp
mov
pop
aad
mov
cmp
mov
in
add
pop
movsb
inc
xor
jmp
xchg
xchg
adc
iret
jno
fiadds
out
xchg
xchg
sbb
pop
pusha
aaa
mov
lret
push
out
pop
mov
outsl
in
sbb
mov
xlat
insb
lods
faddl
movl
pop
xchg
xchg
and
xchg
subb
icebp
jmp
push
fsubs
ffreep
loopne
cmp
imul
out
push
mull
sub
inc
xchg
outsb
jecxz
jo
aam
add
fiadds
and
lcall
and
mov
loope
loope
push
aam
sub
dec
outsl
pop
and
gs
lcall
mov
mov
mov
mov
and
sub
cmp
mov
popa
push
in
mov
dec
aas
popa
xor
cltd
and
shrb
daa
push
jne
mov
dec
xchg
inc
repz
add
pop
xor
sub
jle
pop
negl
movsl
aam
push
inc
icebp
jbe
push
pop
js
es
call
adc
lods
loope
inc
pop
call
jmp
xchg
out
mov
lret
fnstsw
xchg
iret
mov
insl
loopne
loopne
inc
add
call
movsb
jge
add
sbb
call
pop
and
enter
lea
mov
test
push
and
sub
ficomps
sbb
push
rcrl
push
sarb
jge
stc
cwtl
jl
test
icebp
jne
loope
mov
mov
fdivs
shl
test
sub
or
or
rorb
rep
mov
aam
adcl
jmp
hlt
popa
testl
jge
mov
dec
inc
push
push
mov
rcrb
test
js
add
push
or
cmp
jge
pop
and
mov
jg
lret
mov
divb
ljmp
sub
test
test
in
pop
rcll
mov
inc
idivb
test
test
subl
push
push
sti
in
out
dec
jmp
imul
push
pop
mov
adc
aam
pop
inc
int
int3
xor
mov
jae
and
cli
jbe
sti
inc
mov
jp
and
lea
dec
sbbb
lock
cmpsl
pushf
jb
in
mov
pop
iret
mov
in
scas
add
mov
or
mov
inc
or
or
fsubl
dec
inc
popf
mov
das
dec
arpl
sub
cmp
notl
pop
lods
push
add
pusha
fwait
or
xchg
push
xchg
adc
xlat
imul
xchg
mov
movsb
mov
jae
outsl
outsl
xchg
inc
xchg
push
fimuls
cmpsl
push
jge
cmp
lods
push
loopne
xchg
sub
inc
test
iret
int
add
ret
cmp
ljmp
iret
aad
jmp
mov
stos
mov
push
cmp
in
fdivrs
das
mov
mov
rclb
push
loop
addl
push
mov
int
or
pop
mov
mov
scas
add
xchg
shlb
fs
flds
adc
xchg
push
and
clc
pop
rolb
sub
or
pop
xlat
sub
out
das
cwtl
mov
insl
and
adc
inc
fidivrl
add
xlat
add
dec
nop
js
sbb
jns
imul
pop
push
insl
mov
in
push
inc
andb
pop
jne
cmp
fsubrs
movb
mov
xor
orl
sarb
lock
fldt
dec
sub
jecxz
push
or
add
fxch
mov
pop
jno
aaa
int3
sti
jbe
shlw
movsb
adc
call
es
popf
jp
jbe
gs
dec
push
cmp
and
pushf
xchg
sub
mov
or
jp
lret
sarl
or
mov
cli
arpl
lret
aam
inc
add
pop
loopne
fwait
dec
in
packssdw
outsl
popf
push
fisubrl
lcall
jmp
ss
shlb
out
push
dec
popa
mov
xchg
jg
adc
mov
sub
or
loop
push
xorl
loopne
push
adc
push
dec
in
scas
adc
lods
ret
in
xor
loope
ja
rcll
addb
stos
loop
lret
inc
sbb
in
add
jb
cli
inc
leave
push
xchg
imul
inc
out
adc
mov
add
lea
lahf
rcl
adc
and
jb
test
dec
inc
xor
jp
out
adc
rcrb
pop
arpl
addr16
push
push
cmp
fdivrl
cmp
ljmp
ds
ret
mov
cmp
jecxz
sbb
out
adc
cld
mov
faddp
add
push
pushf
in
xor
fcoml
popa
and
mov
dec
xor
fisubrs
insb
or
rol
int3
or
in
and
xchg
jle
push
rcl
in
cmpl
sub
test
imul
mov
push
pusha
icebp
push
xchg
dec
inc
nop
enter
fs
ret
and
in
cmp
outsb
jp
xchg
dec
mov
and
ljmp
sub
push
inc
mov
inc
xchg
nop
outsb
pop
je
cmpsl
int3
push
test
mov
sbb
cmp
adc
sahf
inc
push
sub
xchg
das
shrl
pop
mov
imul
pop
nop
add
fisttps
outsl
daa
fbld
and
cs
cli
cmp
sbb
or
dec
mov
in
sbb
data16
adc
test
lds
jbe
cwtl
sti
cmp
sub
mov
jnp
adc
lret
mov
cmp
pop
mov
inc
xchg
xor
mov
jp
cmp
cmp
gs
stos
cmp
fsubr
mov
mov
outsl
sbb
jmp
add
pop
jne
jb
adc
mov
lcall
or
es
movsl
stos
pop
mov
mov
jnp
adc
test
popf
mov
out
or
sahf
push
xor
nop
fwait
xor
cltd
pop
mov
sbb
and
divb
stos
loopne
shll
imul
mov
adc
add
and
sbb
rol
mov
inc
or
xlat
leave
dec
fld
sub
cmp
outsl
pop
es
addr16
xor
xchg
pusha
add
ss
add
sbb
pushf
jns
push
jns
js
mov
leave
in
imul
test
mov
xor
insl
aam
adc
sbb
std
push
cmp
sbbl
mov
out
pushf
shl
popa
dec
dec
decl
mov
js
sbb
cmp
cmpsl
stos
sbb
sub
dec
mov
lea
movl
insl
jnp
popf
ret
dec
or
aas
push
sbb
mov
cs
mov
shrl
lea
push
adc
insl
daa
stc
sbb
test
iret
add
adc
shl
pop
repnz
push
lahf
lods
adc
ret
gs
out
or
push
addr16
ret
and
sub
popf
add
cmc
ret
xor
sbbl
inc
out
mov
gs
mov
push
jecxz
or
push
push
in
jecxz
mov
ljmp
cmpsl
clc
test
jbe
push
pop
lods
fwait
inc
sahf
rcll
mov
test
sbb
mov
sahf
in
lcall
fwait
lea
mov
cmpb
repz
push
inc
into
stos
cmp
pop
stc
lds
les
out
addr16
sub
enter
push
mov
ja
pop
sub
push
and
bound
sub
mov
shl
arpl
rol
out
out
pop
add
or
jno
movb
test
in
and
outsb
cmp
push
pushf
push
and
loope
add
xchg
idivb
int3
lods
push
inc
stc
dec
movsb
mov
inc
arpl
test
push
addr16
stos
mov
lds
jno
jl
xchg
add
xchg
pop
cmp
sbb
insl
rcl
mov
out
pop
sbb
out
jb
bound
jb
dec
xlat
popa
fcomps
inc
inc
push
or
stos
imul
pop
aas
jmp
inc
xor
and
imul
mov
repnz
lret
inc
xchg
cmp
push
dec
test
inc
dec
or
mov
lock
jnp
mov
lcall
mov
andb
push
mov
xor
pusha
cli
jg
insb
pop
sti
push
aaa
pop
divb
div
mov
inc
in
pop
fcompl
imul
xor
popa
popa
xchg
bound
cmp
xchg
lea
popa
ss
jmp
adc
jnp
push
push
and
adc
negb
clc
pop
test
daa
scas
inc
sbb
sbb
arpl
jl
add
pop
stos
sbb
add
dec
inc
and
xchg
aad
push
lcall
pushf
nop
in
aad
flds
add
push
or
dec
stc
mov
push
in
lods
mov
outsb
popf
fwait
fs
cmp
popf
je
cmp
lcall
push
ja
loope
data16
adc
cmp
inc
xchg
rorb
lods
mov
shll
mov
sti
push
ret
mov
or
xchg
mov
into
aam
sbb
insb
rcrl
imul
mov
pop
cltd
das
cmc
or
movb
add
ss
pop
out
addl
mov
clc
push
mov
mov
out
adc
jno
push
push
aad
mov
fiadds
push
or
aas
mov
and
mov
out
sub
test
pushf
sbb
jns
outsb
nop
fiadds
push
and
dec
push
ret
sar
mov
es
adc
scas
xchg
mov
sub
jne
push
mov
imul
sbb
nop
jbe
push
ss
jns
sti
hlt
jno
mov
cwtl
sbb
es
outsl
iret
inc
pushf
aas
mov
aad
cwtl
outsb
push
adc
sbbl
jecxz,pt
test
xor
loop
test
push
rclb
out
sbb
andb
icebp
pop
add
pop
cmp
xchg
lahf
sub
xchg
incl
adc
pop
push
sub
fwait
xchg
sti
mov
test
das
fnstcw
sbb
pop
dec
in
stos
cmp
popf
add
test
icebp
icebp
push
leave
xor
add
and
aas
mov
mov
jle
adc
aas
add
out
stc
or
incb
cmp
jne
mov
sbb
scas
pusha
inc
out
pop
and
cmpsl
pop
repz
xchg
in
imul
sbb
and
jge
test
scas
enter
js
mov
push
mov
fadds
push
popa
or
aad
adc
pushf
push
ja
dec
push
int
dec
ja
shll
mov
das
jae
or
orb
xor
dec
mov
mov
leave
add
adc
out
adc
xchg
loopne
mov
push
ss
push
dec
sahf
ret
pop
ds
mov
jg
sub
cltd
and
jge
mov
mov
adc
push
dec
pop
call
mov
sbb
mov
or
add
inc
movsl
ss
push
jno
mov
insl
loop
out
and
in
out
add
cmp
in
and
out
mov
popf
imull
xchg
pop
inc
pop
or
pop
stos
and
mov
fwait
cld
and
push
mov
xor
mov
int3
data16
pop
outsl
imul
sub
jle
fmulp
xchg
push
fcmovnbe
test
jp
inc
and
lods
push
mov
dec
loop
mov
push
adc
cli
mov
fistps
sub
aad
sarb
push
add
ret
jnp
pop
xchg
std
mov
iret
notb
into
test
sbb
push
adc
push
adc
cltd
sahf
popf
movsb
shll
fwait
inc
dec
imul
sub
mov
rcrb
sti
repnz
aam
cwtl
lock
gs
dec
fsts
pop
stos
sub
dec
rcll
push
fcompl
jae
test
push
arpl
xchg
cmpsb
mov
int
pop
and
or
les
fimull
mov
mov
enter
out
int3
dec
insb
leave
xor
stc
imul
std
push
push
mov
dec
mov
xlat
xor
and
dec
sbb
cmp
dec
repnz
es
lret
incb
sbb
call
pop
or
lock
inc
push
add
mov
ss
repz
arpl
out
dec
fsubr
fistps
lahf
push
loope
or
cmp
mov
mov
test
xchg
mov
mov
xchg
dec
dec
add
or
arpl
push
inc
rcll
fisubl
inc
cmp
loopne
cmpsl
inc
mov
xchg
data16
cmp
adc
sub
mov
mov
stos
pop
dec
lods
add
hlt
pushf
notb
push
testb
mov
cmp
lcall
mov
push
jno
xchg
pushf
push
bound
adc
pop
sbb
pop
push
cmp
pop
push
or
in
test
add
mov
sub
push
icebp
and
pusha
aaa
out
add
mov
mov
aas
add
call
xor
xchg
fucomip
hlt
and
fistpll
imul
xchg
scas
jbe
roll
into
sarb
pop
pop
jl
xlat
rol
fisubl
xor
adc
sbb
insl
sbb
cld
mov
dec
adc
jno
xor
out
test
aaa
lea
andb
pop
addr16
cwtl
out
imul
jbe
mov
pushf
dec
inc
sub
aam
or
pop
fldt
jle
rclb
push
mov
jno
inc
lock
mov
jmp
jne
xchg
rorl
mov
nop
sbb
movsl
push
cltd
xor
xchg
xor
ret
pop
pop
in
inc
inc
fimuls
call
xchg
daa
insl
enter
or
add
jge
add
test
stos
pop
jbe
mov
dec
mov
stos
jg
pop
cmc
test
addr16
jmp
adc
mov
inc
mov
mov
ljmp
je
jb
xchg
cmp
inc
int3
sbb
mov
cmp
xor
daa
shlb
les
cmp
jecxz
ja
xor
scas
or
fisubrs
xor
cmp
sub
jle
fisubrs
adc
cmp
mov
test
or
gs
repz
mov
inc
lcall
ds
adc
clc
rclb
inc
push
aam
orb
fwait
imul
dec
push
sub
jp
sbb
sbb
flds
jl
mov
mov
mov
adcb
push
in
in
test
jns
nop
vpmuludq
pop
lret
stc
and
adcl
pop
mov
dec
test
loopne
dec
and
mov
pop
rorb
sub
call
scas
add
mov
outsl
sbb
hlt
inc
jmp
fstpl
mov
inc
neg
sbb
movb
fcoms
cmp
mov
in
fidivs
fwait
imul
adcb
clc
inc
mov
es
shl
mov
sub
pop
xchg
mov
or
jne
mov
shll
aad
cmpl
add
in
flds
mov
xchg
jo
sahf
xlat
fnstenv
fdivs
sahf
dec
imul
mov
into
mov
sbb
add
lock
sahf
cmp
xor
mov
roll
sets
push
fcomps
mov
addr16
push
cltd
xchg
test
cmp
pop
mov
dec
dec
ljmp
fstp
mov
pop
pop
out
xor
dec
hlt
out
add
dec
scas
pop
xchg
lea
rcll
lcall
jmp
cmpsl
test
jb
out
fidivrs
xlat
mov
or
lods
push
out
adc
dec
das
pop
push
insl
nop
push
sarb
pop
lods
sub
fdivl
jp
push
and
inc
adc
xor
add
add
js
movsb
lods
or
adc
dec
dec
lods
jno
mov
cmp
mov
mov
inc
inc
addr16
adc
repz
pop
lea
or
sub
xor
dec
int3
sbb
std
daa
loope
les
push
repnz
stos
fwait
xlat
jae
add
jl
pop
jl
fcomi
mov
scas
test
movsb
outsl
push
inc
fwait
icebp
jae
xchg
pushf
fbstp
mov
lret
mov
in
in
pop
mov
loopne
mov
jg
gs
ljmp
xor
lret
jo
insb
pop
popa
sahf
out
aad
dec
fwait
mov
fs
icebp
dec
lahf
ret
in
out
dec
cs
ss
rclb
pop
fwait
std
lret
cld
repz
and
cmp
xchg
jb
testl
jb
inc
ret
dec
inc
ret
shlb
add
or
gs
std
jo
mov
lret
ret
sub
sbb
jno
sub
fmul
push
outsl
and
loopne
sbb
pop
xchg
push
sub
jns
mov
mov
iret
in
pop
or
js
mov
and
lds
fimull
arpl
xchg
inc
push
and
push
pop
les
add
push
rol
mov
incl
jno
insl
imul
test
xchg
and
mov
xchg
loope
adc
js,pn
mov
jmp
lcall
push
out
sbb
test
push
push
or
rcl
test
clc
in
inc
mov
jns
shlb
push
mov
sbb
orb
mov
or
repnz
rcl
cmp
sub
lret
sub
adc
fstl
sti
mov
push
test
ret
or
mov
loop
xchg
xchg
test
and
push
pop
aas
imul
mov
fiadds
movsb
loopne
orb
imul
cmpsl
hlt
dec
loope
and
push
lods
push
mov
and
cltd
add
sbb
nop
dec
insb
lcall
mov
fsubs
daa
cs
cwtl
icebp
sbbb
or
and
add
mov
fsubrs
imul
aas
das
lret
insl
movsl
aaa
pop
aam
pop
fwait
mov
mov
jmp
cmpsb
test
fldt
xor
sbb
sub
inc
sub
pop
loop
xchg
int3
lcall
fistl
xchg
and
int
insb
pop
das
loop
rorl
jbe
cmpsl
daa
cmp
mov
and
sar
cs
xor
arpl
pop
jbe
daa
stc
lcall
mov
pop
bnd
mov
push
sbb
sbb
push
xchg
jg
pop
into
int
sbb
dec
in
sub
pop
mov
cmp
push
mov
mov
sub
sbb
inc
xor
les
subb
fwait
mov
mov
inc
sub
jge
shrb
pushaw
mov
or
popa
dec
cld
cld
lea
mov
in
je
mov
pop
sbb
sub
addl
or
pop
std
mov
pop
cltd
shlb
inc
mov
in
and
xor
hlt
aas
jmp
sbb
push
out
repz
enter
mov
xchg
adc
fs
fnstcw
fbstp
mov
lret
outsl
cmpb
xchg
lret
mov
mov
pop
sahf
or
xor
adc
fidivl
inc
jmp
mov
pop
jae
sub
int3
scas
fwait
add
sar
sbb
xchg
jmp
push
leave
movsl
movsl
call
sub
pushf
jo
jbe
shr
mov
stos
out
js
jl
cmp
test
dec
jae
push
outsl
mov
in
repz
sbb
test
mov
iret
jne
dec
inc
repnz
out
in
icebp
call
stos
pop
jg
mov
mov
ljmp
sbb
inc
pop
int3
cld
push
and
pop
je
cld
pop
movsl
inc
sbb
psraw
in
aad
xor
pop
xor
mov
xor
aad
push
movl
cs
adc
outsl
and
fdivs
out
in
and
int3
mov
jnp
mov
xor
mov
sbb
outsb
pop
and
and
sub
pop
push
fidivl
mov
jmp
add
jg
xchg
clc
lds
inc
mov
repnz
es
ja
mov
push
mov
cmp
jno
shll
in
aam
dec
mov
fnstenv
inc
in
in
mov
in
jne
call
shll
xchg
or
inc
lcall
orb
test
cmp
inc
gs
cmp
lret
push
jp
pop
pop
push
push
jle
adc
fs
mov
dec
data16
dec
push
xor
dec
in
sub
inc
aas
movsl
jge
lret
mov
sbbl
adc
or
pushf
xchg
out
and
xor
ret
push
daa
nop
shl
sub
jg
mov
xchg
cvtps2pd
imul
shrl
nop
sbb
sbb
orb
or
pop
repnz
imul
pop
or
sub
mov
cmp
sbb
push
mov
mov
std
cltd
movsl
dec
bound
and
cmp
pop
popf
pop
outsl
push
xchg
dec
sarb
mov
jmp
rcrl
add
mov
pop
pop
loopne
stc
fisubrl
loop
pop
sbb
xlat
mov
cmpsl
or
decb
xchg
hlt
mov
cmp
jecxz
sub
pop
or
stos
data16
mov
fcoml
inc
xor
xchg
movsb
and
fwait
pusha
dec
inc
fisubs
mov
jbe
in
xor
in
sbb
bound
fdivl
or
divl
lods
adc
popa
jnp
cmpsb
out
push
pop
sbb
and
aad
lcall
sahf
dec
sbb
push
and
cmc
cmp
cmp
fimuls
loope
jnp
pop
addr16
sub
sub
or
jne
fmul
nop
repnz
cltd
in
and
icebp
push
jnp
adc
mov
cmpsb
pop
pop
je
test
repnz
gs
shrb
pop
je
jg
lcall
pop
push
pop
mov
add
sub
pop
test
outsb
or
and
and
dec
and
push
mov
stos
xorb
xor
jno
mul
pop
lahf
or
dec
xrelease
repz
jno
xor
test
ja
ljmp
inc
cld
xchg
daa
adc
cmp
idivl
adc
leave
add
xor
xor
shlb
mov
out
sbb
fadd
pusha
cmpsb
rcrb
sbb
jbe
xlat
xorl
inc
xchg
andb
lds
rcll
adcb
add
dec
push
mov
std
inc
mov
lea
lods
imul
sar
daa
aaa
lret
js,pt
mov
das
lret
loope
insl
sti
jno
bound
in
mov
lea
push
and
inc
lods
mov
pop
pop
push
inc
adc
fnstsw
inc
adc
jecxz
and
or
mov
pop
lods
into
adc
les
mov
dec
cs
loope
fcom
adc
bswap
ja
dec
add
daa
or
xor
sbb
fcmovu
push
mov
mov
cmp
cltd
ret
cs
adc
cli
cs
cmp
inc
fisttps
sahf
std
and
ss
fnsave
and
push
je
sub
mov
repnz
pop
pusha
bound
mov
repz
xchg
sub
ljmp
inc
imul
dec
pop
push
inc
out
jmp
fadds
jno
orb
subl
icebp
pop
ljmp
add
mov
sti
add
lods
sub
lods
dec
enter
pop
loop
pop
fidivrl
ljmp
test
pop
mulb
push
jnp
pop
rclb
int3
inc
and
xchg
mov
aad
jecxz
int
stos
mov
das
insb
dec
jp
enter
pop
mov
push
push
std
sbb
stc
push
dec
jecxz
int3
outsl
push
pop
roll
sar
icebp
popf
sub
mov
out
inc
xchg
pop
test
mov
mov
inc
mov
cmpsb
out
addl
lahf
xchg
xor
add
ljmp
pop
add
gs
pop
sub
mov
lods
or
adc
ljmp
adc
jbe
lods
daa
mov
stc
push
fisubrs
fidivrs
jmp
inc
xor
inc
lods
jns
popa
sbb
mov
and
cmpsb
sbb
imul
sbb
in
stos
movsb
and
xor
insb
xor
xchg
cmp
mov
hlt
gs
adc
enter
ljmp
fildll
test
push
in
xchg
sbb
rcl
jl
imulb
imul
push
jcxz
popa
mov
xlat
rclb
mov
add
hlt
std
lods
dec
push
sbb
and
add
fisubrs
xor
xor
or
nop
xchg
add
mov
test
pop
std
xchg
loop
dec
pop
and
daa
sbb
gs
dec
lret
outsb
dec
pop
mov
xchg
mov
mov
jecxz
sarl
pop
jecxz
xor
inc
adc
or
clc
sub
std
dec
push
fstl
cmc
popf
mov
cmpsl
sarb
mov
into
sub
rol
not
das
push
lret
jns
mov
or
icebp
jp
jl
mov
filds
mov
inc
rcll
ret
ljmp
fstpl
in
cld
stos
or
das
mov
mov
mov
pusha
repnz
mov
push
pop
dec
push
xor
pop
insl
mov
mov
jmp
add
push
push
lret
movsb
cmp
addr16
popa
adc
jnp
push
clc
inc
pushf
icebp
mov
lcall
mov
ljmp
xor
push
das
cld
rolb
aas
lea
movsb
arpl
mov
and
nop
subb
mov
pop
ja
xor
fdivs
popa
pop
daa
orl
sub
andb
xchg
sbb
mov
adc
mov
in
inc
lret
enter
sbb
lret
repnz
cmp
shl
jmp
ja
mov
sbb
ret
stc
dec
fcomps
repnz
add
xchg
push
jl
pop
pop
sub
inc
ljmp
jecxz
sub
insl
jnp
hlt
xchg
fstpl
jbe
pop
sub
enter
push
mov
mov
dec
jmp
sub
jmp
xchg
cwtl
fs
lahf
mov
inc
aas
cmp
nop
icebp
outsl
jnp
int
or
inc
aas
movsl
aaa
xlat
pushf
mov
cmp
jge
and
or
lea
jmp
xchg
xor
sbb
sar
std
inc
jmp
sub
mov
mov
or
pop
aaa
rcrb
cltd
push
insl
and
cs
cltd
lret
cmc
out
repz
iret
mov
dec
jp
add
pop
and
adc
fldcw
xchg
pop
mov
mov
mov
aad
shrb
push
xchg
xchg
xor
xorl
repz
pop
sub
xor
sbb
inc
push
jno
insb
sahf
test
jl
ja
mov
lahf
lds
push
mov
out
cli
int
aaa
dec
dec
inc
dec
rcl
mov
push
inc
add
scas
arpl
imul
sub
sub
arpl
jo
mov
xor
pop
in
mov
jbe
mov
fnstsw
mov
jne
pop
and
test
cmpsl
es
fists
fidivl
sub
jmp
rcl
cmp
adc
ret
nop
mov
or
das
out
mov
xchg
jecxz
daa
cltd
jp
out
push
jbe
sbbb
mov
aad
ret
add
or
jge
mov
push
and
fists
or
incb
lds
mov
jae
dec
mov
lods
push
mov
adc
subb
subl
les
mov
xor
punpcklbw
sbb
leave
dec
cmpsl
inc
or
push
sar
lret
test
loope
cmpsb
mov
and
aaa
push
mov
xchg
mov
in
ds
mov
std
test
adc
add
jbe
test
aaa
pop
sahf
sbbl
push
mov
or
mov
xchg
mov
aaa
insb
in
aaa
clc
flds
cmp
addb
xchg
adc
ja
add
ret
pop
gs
adc
fsts
xchg
xchg
enter
dec
mov
fisubl
in
add
ss
fucomp
mov
mov
cmpsb
sbb
nop
push
xchg
aas
mov
lahf
gs
mov
or
fdivrs
dec
idiv
lret
cmp
addb
pop
cwtl
into
cmc
daa
mov
xchg
shl
sub
xchg
dec
xor
mov
subb
out
test
scas
in
movsb
sbb
cmp
cmpsb
cmp
xor
std
jmp
scas
insb
nop
notb
dec
mov
push
push
aas
dec
repz
loop
cs
cmp
aas
dec
mov
lahf
insl
add
add
dec
out
lret
cmc
mov
popa
push
mov
fildl
popf
mov
fnstenv
pop
mov
fstl
xchg
jge
cmp
lret
pop
gs
dec
aam
mov
mov
or
dec
sbb
xchg
mov
mov
cmp
mov
xor
lock
mov
or
mov
sub
shrl
ja
cli
mov
xor
push
cld
imul
loop
jl
int
or
into
xorb
lea
add
sbb
repz
dec
out
jp
dec
shlb
fs
add
push
jbe
aad
loope
sbb
mov
repnz
cmp
repz
sub
lret
loope
push
repnz
jle
cmpsl
mov
sbb
xchg
cmp
xchg
cmp
lds
sub
mov
mov
cmovne
jp
add
pop
and
jb
aaa
sbb
mov
negl
fucomi
rcll
shr
sub
test
cld
pop
push
mov
and
mov
mov
pop
add
xchg
test
add
sub
imul
pusha
adc
repz
push
push
pop
popa
sti
mov
test
outsl
mov
les
sbbb
sub
adc
fistps
pop
mov
lret
adc
fimull
out
pushw
aaa
pop
je
jmp
mov
lods
cmp
mov
gs
or
inc
in
scas
fiaddl
xchg
pop
std
pop
movsl
arpl
fistpll
std
lret
push
jb
inc
mov
sub
dec
imul
mov
pop
pop
lret
insb
mov
push
pop
mov
imul
sbb
push
pop
jg
push
jecxz
cmp
fildll
push
sahf
call
popa
out
cmpsl
cli
ret
popa
inc
add
dec
xchg
es
nop
out
push
mov
cwtl
sub
sub
pop
pop
fwait
or
mov
fwait
mov
dec
jae
icebp
and
test
lcall
test
fnop
scas
mov
jae
in
inc
inc
lret
xor
mov
dec
mov
xchg
add
or
ds
ficoms
roll
and
cmpsb
jecxz
or
sub
adc
leave
ficompl
mov
pop
sbb
xchg
or
fnsave
fsts
xor
push
test
arpl
pop
sub
sbb
dec
mov
movsb
out
push
cs
sti
pop
jo
out
mov
xor
jb
mov
cmp
and
mov
mov
pop
lea
add
popf
push
scas
in
inc
fs
les
mov
lea
repz
jo
in
sub
sub
push
je
add
pop
mov
cmpsb
jp
fldcw
data16
add
sbb
aaa
sbb
nop
ljmp
loopne
lcall
js
xor
inc
aas
movsl
xor
xchg
push
mov
fcoms
lock
cmp
lret
int
mov
imulb
hlt
add
dec
jnp
in
shl
aaa
push
and
mov
dec
fdivrl
in
xchg
fwait
ja
push
jg
sarl
std
mov
mov
mov
sub
mov
adc
or
fs
mov
ficoml
jne
in
call
mov
jae
cmp
mov
fwait
push
subl
pop
cmp
mov
lret
dec
inc
mov
aad
sbb
daa
or
mov
xchg
cmp
add
jns
adc
les
cmpsb
cmpsb
jp
mov
repz
push
loope
hlt
cmp
arpl
adc
jge
cmc
push
xchg
bound
cmp
or
xchg
push
dec
jp
js
popa
pusha
fwait
orl
repz
mov
mov
cs
mov
sahf
fmul
xchg
mov
aam
scas
sbb
pusha
xor
jo
adc
gs
push
and
add
leave
jb
add
arpl
in
cmp
push
and
dec
gs
ja
js
popf
push
pop
xchg
mov
movsl
xchg
xchg
xorb
sahf
in
xchg
lahf
push
cmp
popa
movsb
jne
push
int3
jg
gs
clc
in
insb
pop
int
push
je
pop
jl
stos
in
stos
or
in
hlt
and
xchg
shlb
enter
push
push
adc
insl
sub
adc
iret
hlt
mov
ss
sbb
imul
sub
pushf
dec
sbb
pop
adc
bswap
jo
dec
in
inc
pop
xorl
dec
xor
adc
inc
or
sbb
out
movsb
mov
lret
mov
mov
cmc
imulb
imul
or
mov
shr
pop
xchg
inc
inc
mov
push
leave
adc
sahf
imul
mov
cmp
inc
shlb
aas
or
test
lahf
jp
mov
lea
dec
and
sbb
cmc
fwait
pop
hlt
das
sbb
cmp
xchg
lea
cmp
ja
cwtl
add
jbe
mov
fs
rcll
sahf
insl
push
xchg
cmp
out
push
xchg
inc
jno
mov
idivb
addl
mov
jmp
add
jae
xor
xchg
add
jle
fwait
adc
jo
mov
mov
addb
or
adc
iret
or
or
jl
cltd
cli
lods
adc
arpl
jle
imul
fiaddl
testl
mov
test
test
daa
call
pop
ja
loope
test
nop
mov
lds
inc
stos
push
into
out
inc
cs
or
cmp
out
popa
mov
add
mull
pop
and
lret
nop
cs
jns
pop
adc
cmpsl
dec
mov
scas
int
stos
scas
xor
pop
out
inc
insb
data16
loopne
inc
jp
pop
sar
dec
and
sbb
jmp
jg
cmpl
sti
push
cli
div
xchg
push
inc
filds
lock
inc
and
adc
inc
xchg
aam
xchg
movd
and
jns
cltd
mov
pop
sarb
mov
sti
das
xor
xchg
jmp
aam
shll
mov
mov
lret
call
adc
addr16
repz
and
add
inc
shlb
jmp
inc
xlat
add
divl
test
dec
xchg
jnp
xchg
xlat
icebp
das
or
je
int3
dec
fimull
inc
or
inc
sti
call
or
fists
out
dec
xchg
clc
stos
push
shl
push
dec
pop
outsb
mov
ljmp
ret
jns
addr16
in
fists
popf
notl
roll
jl
into
push
pusha
xchg
sbb
mov
add
mov
subl
jae
ja
push
cs
dec
idivl
dec
stos
mov
int3
pop
fpatan
mov
push
xorb
mov
xchg
das
jp
aaa
into
and
imul
daa
pop
pop
mov
int
js
lret
and
les
pop
adc
fbstp
xor
stos
lds
adcb
out
xchg
xor
daa
add
or
dec
js
ja
in
xchg
or
pop
adc
rcll
cmp
out
out
scas
xor
lea
gs
int
push
and
xchg
sbb
cmc
add
push
je
aam
mov
popf
pop
je
lret
mov
and
and
mov
jno
enter
push
mov
xchg
cs
push
stos
sbb
pop
pop
and
test
mov
clc
lcall
mov
or
das
mov
mov
pusha
adc
push
rolb
add
add
fists
loopne
rorb
xchg
cmpsb
ja
popf
cmpsl
push
arpl
sub
lock
call
cltd
xchg
popf
sbbb
push
gs
int
pushf
cltd
or
sbb
lahf
lds
and
ds
sub
sbb
jae
das
cmp
push
push
xchg
or
push
movsb
dec
aaa
pop
push
nop
mov
inc
int3
lcall
and
rolb
adc
mov
cs
pop
dec
cmp
push
sahf
mov
dec
pop
fdivl
sbb
xor
mov
sub
inc
jg
lds
bound
in
adc
jmp
add
xchg
xchg
sbb
sub
pop
dec
popf
xchg
movsl
pushf
lahf
cmp
xor
in
or
rorb
dec
mov
push
mov
inc
mov
mov
mov
daa
xchg
add
out
loop
cmovae
sub
mov
adc
mov
push
andb
inc
lods
inc
dec
add
sub
dec
lea
push
in
sbb
mov
test
sub
mov
stos
inc
imull
xchg
mov
out
add
sbb
push
lods
push
ret
mov
jae
inc
pop
lock
cld
adc
pop
in
mov
out
jns
xchg
movsb
pusha
mov
int
lods
out
stos
iret
ja
dec
lcall
lcall
sub
hlt
shlb
lret
add
and
adc
daa
jg
stc
call
jne
lods
arpl
sbb
test
repnz
or
mov
mov
push
and
shrb
mov
lret
out
sub
mov
dec
into
fadd
iret
lea
sub
filds
mov
js
fucom
call
mov
mov
jmp
out
in
jne
nop
lcall
scas
fsts
daa
scas
push
or
fadds
add
sahf
cmpsb
push
xchg
fidivl
fistl
insb
mov
scas
shll
push
pop
cld
pop
in
cld
loop
sub
lds
sub
leave
subl
add
call
add
testb
loop
addr16
aas
int3
or
call
insb
xadd
inc
adc
fmuls
adc
ss
ss
adc
or
orl
mov
sbb
dec
push
cli
mov
and
enter
xchg
push
and
cwtl
push
ficoml
xlat
cmp
mov
pop
pop
push
add
mov
pop
sbb
push
mov
testb
and
outsl
shrl
jg
std
inc
jnp
rcr
push
cmp
xor
cs
adc
mov
sbb
pop
push
fmuls
adc
cld
xchg
inc
out
scas
mov
cmp
lcall
jge
lds
loope
popa
xlat
dec
xchg
int3
push
in
call
mov
sub
adc
lds
inc
dec
scas
dec
push
lret
xchg
movsb
movsl
lods
iret
push
dec
out
xor
fst
getsec
add
movsb
bound
mov
out
inc
cmc
push
bound
pop
xchg
shlb
pusha
push
cld
push
dec
arpl
stos
push
xor
mov
jp
add
dec
dec
int3
mov
xlat
push
sbb
movsb
xchg
pop
dec
je
inc
fildl
push
and
mov
adcb
out
add
loopne
into
ja
add
push
jno
mov
dec
movsb
inc
fistl
sahf
mov
pop
movsl
add
cs
ja
pop
mov
int3
shrl
mov
push
cmc
add
mov
inc
add
sbb
movb
lock
xor
add
and
cmp
inc
pop
cmp
mov
or
mov
dec
cmpsl
or
enter
pushf
lahf
push
mov
inc
ret
jno
popf
je
jp
pop
cmp
js
rolb
adc
fwait
jmp
sti
cwtl
jg
int
mulb
popf
jne
fmul
sub
inc
dec
mov
loop
lock
adc
ds
lahf
dec
in
into
push
jl
ja
bound
inc
sub
addb
sahf
jg
xchg
inc
push
test
call
push
adc
cmp
sbb
sarb
sub
sbb
mov
enter
pop
das
push
mov
lods
pusha
jns
pushf
ja
jnp
and
fmuls
scas
sbb
dec
push
add
bound
xor
xorl
lods
xchg
into
ret
mov
or
sbb
mov
sbb
cmp
sbb
fstl
cmc
mov
addb
cltd
push
mov
scas
dec
call
add
in
test
js
mov
rcrl
add
lcall
leave
sub
mov
imul
lcall
jne
clc
pop
lret
dec
call
loope
test
adc
cmpsb
xor
jno
dec
out
test
dec
sti
xlat
in
daa
bound
mov
fs
xor
mov
push
mov
rcrl
lret
mov
adc
aam
pop
and
or
pop
daa
aam
add
xor
lret
js
or
mov
inc
push
movsl
hlt
in
or
out
testl
sahf
lea
inc
mov
repz
sbb
or
push
mov
dec
pushf
je
jae
enter
bswap
jle
cmpsl
jne
push
adc
insb
je
or
sarb
push
popa
or
call
pusha
lds
and
cmp
andb
jbe
lods
add
push
hlt
shll
push
add
dec
pop
sub
dec
into
dec
lock
cltd
nop
pop
xchg
jmp
cld
add
push
shlb
inc
in
xchg
xchg
loopne
imul
aas
test
jecxz
mov
dec
sub
shll
mov
mov
iret
push
cltd
jne
cmc
and
mull
lock
loope
push
or
shrb
dec
lret
test
test
cmp
sbb
addr16
int
jmp
out
or
adc
xchg
cmp
repz
sbb
dec
imul
movsl
inc
cld
sarb
sbb
add
dec
jle
aas
inc
add
in
jle
xchg
mov
cmp
stos
cmpsl
ljmp
adc
std
mov
pop
pop
jnp
stos
sub
scas
out
in
das
aaa
jae
xlat
xor
call
jge
clc
mov
or
inc
popf
daa
pop
jge
loop
cli
stos
enter
jg
push
fnstcw
mov
jo
xchg
xchg
jmp
add
pop
imul
and
xchg
insl
test
xchg
mov
outsb
and
cmpl
xor
fwait
scas
iret
pop
test
push
mov
movsl
shr
push
jle
or
popa
dec
xchg
xorb
sbb
fbld
out
and
jl
lahf
mov
js
xor
pop
cli
lods
iret
addr16
dec
shlb
mov
loop
mov
mov
and
ret
std
imul
aad
scas
loopne
pop
jnp
and
mov
pop
mov
xchg
lods
and
or
sbb
and
xchg
mov
rcll
in
shlb
mov
and
divl
jns
loopne
int3
xor
sti
push
mov
test
mov
cmp
jmp
lret
inc
mov
adc
mov
sub
cld
xor
call
or
notl
movsb
add
jnp
xor
jmp
mov
adcl
mov
ror
les
jle
adc
or
mov
arpl
mov
dec
int
popa
shl
mov
dec
xlat
sti
xor
nop
sbb
ret
mov
clc
sahf
add
subl
arpl
movsl
je
or
add
das
and
fcoms
jecxz
cwtl
das
cmp
cmp
mov
hlt
shr
mov
adc
aas
push
dec
imul
jle
popa
adc
js
add
add
daa
cmp
mov
movsl
je
push
imul
cmp
sub
mov
xor
jmp
push
jecxz
sbb
aad
push
pop
sar
ds
lcall
add
stos
shrl
add
cmp
leave
mov
int
push
ja
mov
movsl
push
insl
sti
xor
jmp
jecxz
mov
xchg
fiaddl
push
jl
test
xor
das
mov
xchg
add
mov
sahf
cmp
sub
jl
jl
daa
add
test
sub
mov
ljmp
test
pusha
flds
fisubl
mov
adc
scas
jl
iret
nop
inc
aad
cmp
pop
ljmp
leave
push
cmp
jmp
out
repnz
stc
sahf
mov
test
idiv
lahf
add
aaa
aas
nop
add
mov
dec
loop
pop
xchg
mov
pop
ja
stos
sub
nop
hlt
ds
xor
pop
ret
pop
mov
mov
push
mov
inc
dec
movsb
int3
repnz
mov
sbb
sti
out
add
aas
insl
lods
or
notl
call
mov
push
icebp
xor
test
jge
dec
and
ret
iret
fimuls
iret
cmp
ja
rcr
pop
sbb
mov
xchg
jo
arpl
push
push
or
clc
hlt
lods
flds
xchg
loop
vmread
js
jae
cmp
inc
cli
scas
dec
imul
mov
dec
jl
inc
lret
stos
add
imul
mov
addr16
jle
fiaddl
mov
add
test
add
mov
push
push
jle
into
shr
out
test
rcrb
cmpl
cwtl
mov
icebp
aad
push
mov
cltd
call
jmp
mov
add
xor
fadd
push
mov
into
sbb
push
mov
mov
stc
sbb
shl
mov
test
sahf
addr16
in
pop
imul
repnz
sti
pusha
jg
out
push
jge
rcll
loopew
push
shlb
aas
push
pcmpgtw
je
add
addl
xchg
adc
pop
out
sub
daa
pop
fs
pop
aas
cs
mov
inc
nop
sub
mov
int
cmp
mov
fnsave
aaa
popf
dec
pop
add
mov
add
sub
jns
in
jne
jp
inc
and
sub
inc
das
aas
jg
inc
mov
sub
dec
xchg
push
jae
aad
jae
pop
lret
cmp
sub
int3
rcrl
and
dec
and
test
les
shll
cs
and
pusha
mov
popa
xchg
sub
sub
push
sti
out
leave
jle
jp
jns
movsb
sub
adcl
outsb
fildll
mov
fprem1
bound
jo
int3
sub
enter
dec
inc
and
sbb
xor
sbb
lcall
sbb
outsb
fisubl
dec
or
xchg
push
frstor
dec
int
in
mov
pop
leave
pop
sbb
fdivs
cmc
inc
lcall
push
or
mov
mov
inc
std
inc
mov
insl
jle
mov
and
subb
into
inc
pop
xchg
mov
or
pop
notb
gs
scas
cmpsl
jno
push
or
sub
mov
lea
inc
addr16
fwait
or
addb
repnz
aaa
sbb
lea
cld
or
xchg
outsb
test
push
mov
fcoms
pop
pop
pop
scas
cwtl
lret
add
pop
inc
je
arpl
sbb
dec
sub
loopne
rcll
enter
mov
stos
insl
aam
addr16
and
in
push
jne
ds
repnz
cmp
push
nop
dec
out
mov
andl
adc
xor
mov
add
insb
push
push
sbb
out
mov
stc
jb
push
out
jge
xchg
jp
mov
fdivr
rclb
xlat
xlat
cli
clc
xor
sbb
jecxz
or
jae
lahf
movsb
pop
fistps
inc
push
adc
jl
cmp
xchg
fwait
rorb
add
iret
fldl
ret
mov
js
dec
dec
int
fists
or
and
mov
add
add
xchg
jecxz
loop
adc
dec
cld
dec
adc
adcl
or
xchg
pop
lock
pop
inc
dec
cmc
dec
lret
repz
push
jns
lock
in
add
repnz
jno
sbb
addr16
mov
rcrl
dec
jp
ja
fnsave
test
mov
cmp
dec
pop
xor
les
pusha
jle
test
push
cmp
xchg
sbb
out
in
adc
clc
and
or
fstps
and
mov
fcompl
rcrl
xor
notl
pushf
stos
add
sub
push
pop
push
mov
adc
cwtl
jl
outsl
inc
sti
push
mov
leave
std
mov
sub
adc
push
push
daa
push
mov
push
aaa
out
mov
sbb
pop
cmpb
or
jne
ds
push
add
or
xchg
jno
fisubrl
push
test
fsubr
lds
das
test
adc
push
lret
dec
scas
sbb
loopne
lahf
ds
test
fs
dec
cmp
cmp
popa
in
jb
daa
addl
js
pushf
hlt
or
jp
aad
orb
add
into
mov
andb
addb
sbb
sti
nop
and
cmp
pop
dec
mov
pushf
movsb
cmp
mov
xor
mov
imul
gs
subl
mov
bound
cmp
lahf
and
sbb
dec
ret
lods
bound
inc
lea
das
jo
repz
test
push
lds
aad
mov
xchg
jbe
cmpsl
outsl
add
andb
adc
loop
and
push
imul
push
fmuls
nop
imul
xor
jge
aad
cmpsl
les
loopne
and
dec
mov
insl
mov
test
aad
les
push
mov
mov
inc
add
ljmp
sarl
sub
mov
testl
mov
mov
inc
call
repnz
dec
int3
daa
sub
outsb
sbb
xchg
mov
cmc
mov
jle
js
das
les
xor
mov
adc
jno
movsb
or
pop
push
ret
out
pop
push
mov
ljmp
loop
sbb
sub
xchg
push
fidivrl
push
pop
jbe
icebp
jne
add
test
and
ss
cmp
loop
mov
push
gs
add
stos
sub
pop
jl
into
xchg
aas
ret
mov
adc
pop
and
fs
mov
pop
js
rcrl
pop
xchg
inc
repz
sub
fsubrs
mov
add
gs
and
mov
sub
lods
mov
lea
out
mov
xor
add
cld
pop
movsl
mov
aas
inc
cmpsl
arpl
cld
das
pop
fisubrs
pop
test
push
xchg
and
xchg
cltd
sbb
neg
inc
scas
test
push
addb
cmp
daa
sbbl
mov
test
dec
xchg
mov
push
jge
sub
jne
mov
add
ret
test
aad
or
mov
push
jo
arpl
dec
inc
lea
stos
fnstcw
fldt
pop
cmp
cli
aad
inc
fwait
cmpsb
addr16
pop
xchg
leave
push
cmp
das
test
jae
adc
mov
jge
mull
outsb
cli
lods
push
loope
xchg
sti
mov
inc
xor
dec
sub
mov
xchg
sub
sbb
icebp
aas
add
fs
in
ljmp
xor
cmc
scas
inc
lahf
repnz
jmp
fdivrs
jge
aas
cmp
insl
fs
fdivs
pop
mov
dec
sti
mov
or
repnz
or
xor
out
dec
sbb
in
sub
cld
mov
dec
mov
push
add
mov
mov
push
xor
ja
call
inc
jle
add
test
pop
mov
mov
fsubrp
mov
movsb
pop
bound
repnz
lret
pop
cs
test
push
inc
jmp
adc
mov
enter
test
xchg
testb
imul
adcb
ss
lret
js
cmp
mov
sub
adc
adc
jmp
push
sub
fptan
inc
inc
cmp
repnz
and
pop
inc
push
pop
pop
aad
pushf
lock
dec
int
xor
cwtl
and
mov
mov
dec
mov
sbb
inc
ss
pop
mov
js
mov
sti
sahf
pop
enter
aad
hlt
sbb
mov
out
xchg
sub
ds
adc
out
inc
jo
pop
and
adc
cmp
jne
jmp
jp
xor
or
mov
in
fcoml
lods
stos
inc
sbb
add
hlt
imul
mov
int
pop
adc
jge
out
and
inc
popa
pop
mov
mov
sbb
ss
test
ds
pop
or
xchg
lret
mov
xor
movsb
popa
lret
or
stc
cmpsl
jbe
movsb
inc
leave
ret
mov
pop
or
push
jge
xchg
push
mov
inc
sahf
cmc
loopne,pn
out
push
movb
cmp
sub
lcall
jne
or
repz
pop
lret
inc
cmp
jb
mov
int
xchg
mov
ja
outsl
push
sub
outsl
xor
outsl
js
addr16
xor
rcr
arpl
or
movsb
adc
mov
nop
xchg
rorl
xor
int
mov
inc
lcall
inc
jbe
mov
testb
pop
dec
ja
sbb
push
adc
push
dec
xchg
orl
sbb
add
dec
xchg
push
adc
stc
jmp
fcoms
or
inc
pushf
dec
shlb
or
push
xor
sub
add
or
lea
xor
lock
push
xchg
cwtl
cmc
add
lods
inc
push
int
outsb
in
call
and
or
vpsubsw
xchg
and
dec
inc
dec
jae
jnp
aad
jo
lock
dec
dec
idivb
xchg
mov
pop
lcall
cmp
xchg
xlat
inc
cltd
pusha
in
jmp
and
mov
fmuls
cmp
and
dec
sbb
jp
pop
cmpsl
pushf
mov
fsts
pop
cmp
jecxz
aaa
cmp
insb
outsb
movaps
jge
xchg
in
cmp
fnstcw
std
dec
les
bnd
xor
lahf
fs
dec
xchg
cli
inc
inc
flds
and
xor
sub
in
mov
nop
std
je
add
mov
lcall
or
mov
mov
data16
push
mov
xchg
adc
mov
vpsubw
cmp
adc
or
ret
sti
sbb
sbb
cmpsl
adc
scas
stos
outsl
mov
rcr
pop
aam
roll
mov
or
push
stos
aam
mov
pushf
or
pop
out
rcl
testl
inc
hlt
cli
add
jg
fs
pop
paddusw
jne
scas
adc
in
test
cmpsb
sbb
aam
js
push
outsb
cltd
pop
mov
mov
or
out
mov
negl
push
mov
inc
cmp
aam
adc
pop
ja
cmpsl
insb
mov
mov
sub
mov
iret
xor
or
int3
mov
scas
add
jb
mov
loopne
popf
inc
lcall
ja
lods
xor
pusha
repnz
cmp
xlat
fdivs
jecxz
pop
call
scas
xchg
fsub
add
push
push
lret
push
adc
stc
aaa
movsb
mov
sbb
xchg
sub
fisubl
sub
into
push
out
xorb
idivl
int
pop
adc
aam
jne
push
aad
mov
adc
enter
aam
leave
imul
in
loope
xor
mov
inc
int
cmpsb
push
mov
test
dec
sub
or
and
daa
add
insl
mov
ss
cmpsb
adc
adcb
inc
addr16
dec
pop
push
ds
pop
push
faddp
rcrl
jecxz
ret
stos
inc
hlt
sub
loop
and
inc
shll
mov
cmp
and
dec
out
out
jnp
test
hlt
inc
dec
scas
call
push
lds
hlt
std
jecxz
iret
and
adc
pop
loope
ret
or
or
lods
popa
stos
cmp
lea
lods
rolb
add
add
dec
add
fisttps
jns
int
loope
cld
jp
jnp
aas
in
dec
in
mov
aam
cli
aam
sub
mov
and
inc
test
cld
mov
pusha
jb
xor
daa
push
sbb
xor
inc
aam
mov
cld
dec
lret
push
jb
adc
sahf
fdivrl
jbe
lods
fdivp
rorl
adc
mov
ret
jl
cs
xor
dec
sbb
fmull
pop
hlt
dec
xor
sbb
int3
adc
mov
test
inc
xor
daa
jno
inc
mov
add
xchg
imul
fwait
loop
incb
cltd
cmp
and
sub
lahf
popf
out
mov
movsb
ja
mov
xor
push
adc
mov
in
les
dec
add
push
xchg
stos
xchg
ljmp
cmp
inc
je
test
adc
inc
shlb
cltd
cs
sbb
in
xchg
cwtl
sub
jne
cwtl
add
stos
inc
add
push
rorl
int
inc
je
mov
and
xchg
adc
dec
mov
mov
push
pop
sbb
xchg
aam
and
iret
sbb
mov
cmp
lcall
scas
push
fisubrl
xchg
iret
popa
inc
adc
and
scas
idivb
mov
lds
cmc
popa
xor
mov
jle
mov
clc
pop
das
shr
push
dec
pushf
rcl
mov
push
fisubrl
and
dec
inc
dec
ja
jl
sub
and
ficoms
add
dec
in
cmc
inc
jecxz
sbb
mov
dec
lods
lret
add
lret
out
push
pop
dec
or
ffree
hlt
add
ret
inc
or
loope
xor
out
lahf
or
loope
aaa
mov
mov
rcl
inc
xor
and
insb
stos
mov
mov
cwtl
pop
xor
aad
mov
mov
sbb
jecxz
fsubl
fsub
adc
test
inc
add
or
cli
cmp
sub
sbb
push
xchg
mov
pop
push
incl
cld
test
push
pop
insb
cmp
insb
mov
rcr
sbb
xchg
jle
jge,pt
cmp
mov
lret
in
arpl
cmp
pushf
iret
sbb
sbb
adc
shrl
push
mov
imul
nop
movsb
test
mov
int3
sahf
inc
push
call
pop
aam
jp
add
loopne
jmp
cmpsb
dec
or
jbe
sahf
shlb
cmp
mov
xchg
mov
int
dec
mov
out
xchg
sub
mov
sbb
pop
jbe
flds
ret
mov
fdivr
cmc
pushf
push
daa
clc
sbb
andb
mov
and
aad
pop
sub
fbstp
repz
mov
imul
cmc
push
adc
sub
mov
ss
cmpsl
xor
into
push
dec
push
mov
mov
test
out
mov
cli
lret
insb
addr16
std
dec
inc
cmp
lock
sbb
nop
push
jmp
or
gs
xor
lret
cmp
cbtw
jle
repnz
outsl
jmp
mov
or
fdivrl
pop
lods
pop
fscale
lds
adc
dec
shll
xchg
lret
and
sbb
out
mov
jmp
push
or
scas
add
pusha
mov
inc
outsl
and
icebp
push
icebp
cmp
les
jmp
call
sti
inc
adc
mov
xor
movsl
xor
aad
mov
cwtl
dec
xchg
or
stc
jge
loop
setne
and
das
xor
ret
mov
lcall
sbb
jnp
pushf
jae
ret
dec
movsb
mov
call
xchg
dec
or
sbb
push
arpl
sub
jns
xchg
cwtl
mov
xchg
mov
push
addr16
ss
mov
out
mov
pop
leave
xchg
repz
xchg
xchg
jp
inc
lea
mov
cld
aas
hlt
nop
fcompl
lods
cltd
jne
shrb
imul
fucom
fs
or
push
ret
dec
enter
xor
fistpll
call
ficoml
xchg
fnstcw
push
je
adc
push
pushf
test
popf
lahf
std
testb
or
cli
loope
fmull
bound
scas
xlat
xchg
xchg
push
inc
aaa
aam
fwait
daa
push
jmp
aas
push
xchg
shrb
inc
sbb
pop
inc
jne
xchg
cwtl
push
out
mov
xchg
inc
cltd
hlt
add
js
lcall
jae
cmp
push
sub
pop
frstor
imul
mov
repz
push
addr16
cmp
or
js
add
inc
mov
xchg
rolb
dec
sbb
jmp
insb
fisttpll
inc
cmp
jge
push
arpl
xchg
dec
data16
popa
adc
pushf
call
fisttpl
jbe
lahf
ljmp
mov
jl
mov
dec
test
fdivr
push
dec
jbe
std
call
hlt
xchg
mov
loope
data16
sub
adc
pop
cmp
jb
adc
in
lock
jno
cmpsl
jge
xchg
adc
outsb
push
sahf
ss
fidivl
jnp
push
in
push
add
sbb
add
mov
adc
ljmp
imul
dec
nop
add
fimull
cltd
adc
scas
andb
xchg
cwtl
lret
inc
adc
adc
dec
fadd
rcrl
incb
pushf
jmp
jno
jg
test
cmp
dec
cmpl
push
add
loope
imul
negb
cmovae
xor
jnp
push
mov
ljmp
nop
jno
mov
sbb
add
jae
push
push
mov
stc
mov
andb
xor
outsl
outsl
iret
daa
out
xchg
and
pop
jp
test
sbb
xchg
lcall
mov
fwait
and
adc
xchg
adc
cmpsb
mov
fldcw
adc
jbe
imul
xchg
rcll
push
adc
sbb
xchg
jbe
sahf
cmp
ret
jge
lahf
sub
in
mov
lahf
pop
popa
adc
out
loope
jp
dec
inc
mov
cli
sbb
sub
and
inc
mov
out
ljmp
mov
jmp
mov
stos
loopne
movsb
test
adc
lcall
imul
lret
sti
fildll
in
xchg
and
dec
idivb
push
lcall
add
test
mov
pusha
mov
mov
lods
sbb
inc
pushf
insb
rol
sbbl
jbe
adc
dec
push
in
mov
inc
sub
clc
repnz
mov
mov
dec
mov
cmpsl
cwtl
shl
mov
roll
outsl
cli
adc
adc
mov
stc
cmpsb
dec
lds
add
sahf
pop
stos
dec
dec
pop
push
cmp
jno
cmp
cmp
jmp
pop
pop
aaa
lret
gs
aad
sarb
sub
xor
fwait
fwait
jbe
shl
lds
jmp
inc
test
cmp
fucomi
add
dec
fbld
shll
sub
mov
xlat
push
out
sub
jecxz
lock
xor
cmpxchg
lds
jae
cmpb
ss
jb
incb
pop
pop
or
ljmp
pop
push
in
inc
mov
into
ja
mov
adc
mov
xchg
cmp
dec
xchg
rol
into
cmp
push
pop
lret
test
jge
shrb
inc
call
data16
or
pop
dec
stos
sar
sbb
aaa
jmp
and
sbb
dec
inc
adc
inc
or
fdivrs
mov
outsb
scas
mov
in
inc
stos
and
arpl
out
inc
mov
es
ss
jno
lds
das
mov
insl
jle
stos
fucomip
mov
xor
jmp
jecxz
test
movb
push
cmp
xchg
mov
push
test
mov
arpl
mov
in
or
sbb
mov
sti
dec
inc
lret
fstl
mov
movsl
xor
jbe
pop
in
into
sub
dec
in
jnp
xchg
add
js
ja
mov
cmpsl
bound
push
ret
test
add
sbb
arpl
mov
xchg
subl
adc
push
mov
sub
xchg
sub
fiadds
mov
cmpsb
mov
fisttps
andl
jl
jo
cmc
push
mov
and
cli
push
jp
inc
cmpsb
mov
ss
and
lret
mov
cmpsb
jl
outsb
xchg
pop
gs
stos
jp
enter
roll
pop
add
cmpl
fs
mov
mov
xchg
add
jl
xor
sahf
add
push
in
enter
loop
xor
lcall
stc
subl
pop
push
xchg
mov
fdivr
ret
and
mov
in
mov
mov
int3
or
lcall
addb
or
xorb
sub
xchg
jge
mov
push
cld
jno
in
lock
xor
push
jbe
cltd
dec
jl
xchg
ss
jl
pop
add
js
jo
imul
movsb
jae
scas
mov
add
xchg
or
out
mov
cli
ret
scas
lea
sbb
addr16
and
inc
jno
lret
out
lds
mov
std
out
jmp
fs
call
sbb
loope
lret
pop
in
out
ret
test
repz
arpl
ret
into
push
outsb
andb
stos
ja
aam
cs
cmpsl
sahf
push
xor
jo
outsl
loop
jne
fs
std
jmp
pop
mov
test
lahf
mov
popf
xor
cmp
jb
lcall
push
lahf
push
in
jb
sbb
hlt
call
adc
jle
addr16
ja
add
mov
dec
and
in
xchg
jmp
sbb
xor
fxch
mov
mov
imul
test
cmp
nop
mov
inc
js
sub
lds
out
and
mov
mov
pop
insb
push
bound
fldenv
push
add
fs
inc
jae
loopne
cltd
dec
jnp
mov
lea
pop
mov
fcmovu
bound
ret
lret
xor
dec
fldt
bt
in
push
xchg
js
or
bsr
dec
in
mov
pop
mov
sub
outsb
fldenv
nop
push
push
js
or
cwtl
lods
cwtl
or
ljmp
sub
and
fwait
mov
mov
ret
imul
jecxz
in
xchg
ja
or
mov
inc
push
xorl
cmp
scas
push
ss
inc
jp
push
in
mov
and
cmp
movsl
or
and
popa
in
call
sbb
pushl
daa
push
out
adc
xchg
repnz
popf
jae
sub
xorl
bound
das
repz
and
push
or
pop
inc
jmp
and
ret
jl
stos
push
repnz
pop
lahf
mov
push
rorl
sub
sarb
cmpsl
mov
outsl
leave
enter
xor
jp
scas
ret
jo
mov
ret
outsb
lea
push
mov
xchg
xchg
sub
add
sbb
imulb
sbb
sub
jb
je
jbe
cmp
xor
fcmovbe
sub
dec
dec
rolb
sbb
test
imul
xchg
out
mov
sub
lock
sbb
adc
loope
xchg
push
cmpsb
mov
inc
sbb
cmp
xor
ja
das
ja
xor
punpckhbw
xor
adc
cmpsb
aas
sub
xchg
mov
iret
arpl
inc
shlb
pop
adcb
adc
out
scas
in
xchg
xlat
movsb
mov
inc
mov
sub
and
out
pop
dec
push
repnz
fwait
mov
in
scas
xchg
pop
adcb
or
push
ss
in
outsl
add
stc
jbe
rcrb
mov
inc
cmp
push
bound
ds
add
pop
add
lds
lret
fdivs
adc
mov
incb
sub
inc
mov
imul
subb
out
popf
and
scas
insb
or
loopne
gs
and
push
arpl
cmp
mov
mov
lods
arpl
mov
cmc
xor
pop
int3
push
test
flds
out
dec
inc
clc
hlt
sbb
aaa
dec
adc
cmp
mov
in
sub
xchg
inc
mov
popf
push
roll
in
cmp
aad
xor
in
mov
pop
aam
mov
inc
sarb
bound
xchg
inc
jl
imul
fwait
scas
mov
cs
es
push
mov
std
inc
pop
cmpsb
inc
insb
pop
test
and
int
ret
mov
int
add
mov
xor
aaa
loopne
test
dec
jp
inc
jno
mov
and
ss
sbb
push
les
mov
or
movsl
daa
out
fs
lret
mov
and
add
push
cltd
cmpsl
hlt
stos
cwtl
hlt
pop
dec
fcmovu
addb
loopne
xchg
fldcw
test
fucom
in
mov
adc
or
test
adc
mov
push
xor
ljmp
pop
leave
mov
dec
lret
push
in
jmp
in
dec
call
scas
out
outsl
sbb
mov
in
imul
inc
lods
or
push
xlat
cmp
addr16
sub
add
lea
ljmp
pusha
int
out
fmul
or
sbb
or
inc
push
jecxz
lcall
fstpl
loop
dec
cmp
sbb
xchg
jle
push
xchg
jns
mov
adc
jae
out
cmp
dec
stos
mov
inc
fcoml
sub
je
jb
cmp
jp
add
pop
xchg
xchg
fstpt
push
data16
mov
xchg
mov
or
jle
gs
mov
mov
in
rolb
pop
into
sub
inc
lahf
out
outsb
adc
inc
xchg
mov
out
ret
testl
dec
in
int
cltd
imul
push
ja
jb
les
cld
jnp
xchg
mov
jl
sbb
imul
lock
loope
jae
xor
push
icebp
test
xchg
fs
testl
xor
lret
mov
dec
push
push
lods
ljmp
and
pop
pop
adc
push
mov
adc
dec
add
rcr
mov
lcall
mov
jl
inc
inc
sbb
push
sbb
mov
stos
js
pusha
fwait
jp
pop
clc
std
jge
xchg
jae
mov
adc
adc
fstps
push
mov
test
and
jbe
sub
sbb
dec
cli
jle
js
stos
enter
pop
arpl
mov
arpl
stos
in
mov
mov
les
cmc
pushf
ss
clc
fldt
test
or
add
and
sbb
nop
fadds
jo
cmp
push
sbb
mov
jno
aas
loop
int
lret
mov
cld
or
add
movsl
lea
leave
mov
xor
mov
fucom
ficompl
or
loopne
imul
push
pop
pusha
cld
int
lds
adc
in
sbb
popf
dec
arpl
pop
ljmp
push
pop
mov
jmp
mov
pop
or
loope
int
jl
dec
xchg
sbb
push
lahf
inc
inc
insl
cwtl
rorb
xchg
repnz
xchg
test
arpl
movsb
js
test
lea
mov
les
js
inc
xor
das
push
mov
aas
push
xor
scas
pop
movsb
test
leave
cs
sub
xorl
movsb
inc
out
movsb
cltd
es
mov
scas
push
loopne
push
test
std
aad
cmp
cltd
inc
inc
pop
sarl
aaa
pop
dec
xor
or
lea
pop
sti
fsubrs
push
push
mov
jns
dec
scas
loop
ja
xchg
pop
in
insl
pop
aaa
sarb
pusha
push
cmp
or
dec
push
and
out
daa
mov
fwait
js
xor
xor
or
sbb
cmp
jns
lea
fcmovu
dec
cwtl
movsb
lock
add
lea
push
loopne
out
ret
in
loopne
mov
sarb
pop
pop
adc
adc
inc
test
out
in
adc
fxch
inc
lods
xchg
inc
fsubl
adc
mov
xchg
sbbb
je
arpl
fstp
push
movl
pop
xchg
xor
scas
inc
out
std
push
jge
call
pop
scas
add
das
ljmp
push
xchg
out
popf
push
mov
shlb
pop
imul
mov
call
push
fs
aam
cwtl
sub
push
scas
add
loop
xor
lods
pop
pop
jmp
outsb
ficomps
xchg
mov
add
rcr
or
xor
inc
pop
lods
lret
mov
xchg
lcall
xor
jae
clc
stos
in
int3
out
dec
push
sbb
add
testl
lods
jb
push
call
sub
cmpsb
stc
insb
mov
inc
dec
test
pop
out
sbb
cmp
iret
mov
test
jns
push
push
dec
adc
mov
sbb
sub
jl
mov
iret
adc
jl
jns
cmp
cwtl
mov
loop
stos
mov
xor
aad
jbe
insb
sahf
mov
clc
sub
cmpsb
add
add
or
cwtl
ret
push
icebp
mov
mov
loope
inc
add
scas
jle
jae
or
fs
push
scas
sub
push
push
mov
aad
scas
aas
jae
inc
into
decl
cmp
xor
xchg
in
inc
fnstsw
cs
xchg
cmpsl
fwait
xlat
out
push
test
or
imul
das
les
movsb
loop
bound
leave
inc
arpl
bound
insb
jmp
mov
jp
cmp
jbe
mulb
dec
inc
ja
cltd
push
hlt
jno
cld
jbe
out
mov
push
inc
aam
sbb
mov
dec
sbb
mov
fwait
stc
jle
xor
mov
popf
pop
arpl
popf
xchg
fxch
sub
cmp
in
cmp
cmp
pop
js
inc
xchg
pop
imul
mov
cli
fwait
mov
and
call
mov
add
bound
pop
add
enter
pop
sub
sub
stc
pusha
lds
push
lock
test
push
push
pop
xorl
loope
shlb
lcall
push
sub
stc
mov
mov
add
fldcw
mov
mov
jmp
loop
xor
lods
add
das
sbb
pop
andl
ljmp
jecxz
dec
sbb
xor
jp
call
out
fcom
inc
push
xor
sub
jmp
add
sub
cmp
mov
jecxz
dec
sarl
and
adc
dec
bound
lds
loop
sbbl
lds
jnp
into
sar
lret
add
enter
inc
push
hlt
push
pop
inc
sbb
sbb
add
inc
pop
jo
mov
pop
xor
xchg
pushf
test
aaa
inc
sbb
loopne
mov
push
andb
loop
mov
jb
icebp
jge
shlb
scas
jo
lea
cld
addb
mov
int3
add
lahf
das
scas
xor
push
lcall
cltd
xchg
mov
mov
loop
in
outsl
dec
roll
dec
lea
cmp
fwait
jmp
add
push
jae
jo
jmp
ljmp
loope
iret
iret
add
xchg
cmc
or
test
or
ret
icebp
and
push
sub
shr
xor
lods
shl
xchg
mov
int
scas
addr16
add
mov
stc
imull
or
mov
pop
movsl
xlat
sbb
xchg
inc
xor
jge
dec
xor
fsts
ret
mov
rcr
mov
ja
fiadds
fstp
leave
icebp
or
and
dec
inc
sbb
imul
scas
mov
pop
ret
lods
add
fdivl
test
icebp
pusha
mov
jo
nop
sub
mov
or
mov
outsb
adc
rcr
xor
and
pop
repz
lock
hlt
pop
push
mov
jb
adc
mov
sub
mov
inc
aaa
leave
jle
adc
or
mov
addr16
call
stc
dec
shrb
rorb
cmc
je
das
mov
arpl
testb
and
jb
jnp
bound
or
test
movsb
push
pop
imul
mov
pop
jno
fnstsw
lods
dec
or
ljmp
cli
shrl
ror
repz
test
push
pop
mov
outsl
fsub
adc
pusha
pop
push
out
mov
mov
mulb
je
adc
sub
sti
lds
ret
ja
or
pop
jb
es
or
cmova
dec
lret
test
sub
stos
nop
sbb
dec
cld
mov
mov
aas
or
lret
or
ljmp
mov
in
pop
push
cmpsl
int
and
mov
jae
cltd
js
inc
in
sbb
in
fcomi
stos
fsubr
test
call
mov
mov
inc
adc
test
jb
test
in
push
pop
mov
mov
push
enter
mov
movsl
mov
push
mov
xchg
and
js
inc
jae
iret
shrb
dec
fsubrl
push
fdivr
jge
dec
faddl
mov
ror
cmpsb
popf
cli
mov
sub
js
lock
or
dec
mov
dec
mov
stc
sbb
jne
mov
pop
sub
outsl
jns
mov
mov
xchg
int3
js
mov
scas
or
mov
cli
ss
add
xor
sbb
stos
xchg
fwait
and
xor
scas
ja
shr
mov
mov
sbb
pusha
dec
xchg
sbb
imul
cmc
xor
sbb
out
test
dec
add
in
and
mov
jp
jo
test
clc
mov
leave
je
inc
jecxz
and
sbb
mov
cld
and
mov
sub
lahf
aaa
test
std
add
jle
mov
adc
cmp
ret
sbb
mov
arpl
cmp
inc
mov
bound
pop
nop
fwait
mov
mov
pop
lods
sti
jo
cmpsb
inc
sbb
pop
add
aaa
push
push
and
addl
clc
and
in
ret
mov
fsubrl
cmpsl
mov
mov
push
mov
pop
inc
inc
mov
scas
test
sub
jnp
movsl
xchg
setne
lcall
inc
jno
fisubl
mov
push
xchg
movsl
inc
jo
loope
stc
inc
push
rclb
aaa
lret
int
in
push
fsubrl
sarb
mov
fucomp
adcl
pusha
mov
xchg
xor
cmpb
in
jne
and
sar
aas
call
shrl
pop
and
mov
mov
xor
xchg
mov
cld
cmp
fbld
xlat
into
mov
shlb
test
sub
or
jecxz
jb
or
pusha
call
sarb
les
jno
lea
xor
dec
mov
clc
es
or
stc
dec
insl
pop
xor
std
dec
ret
mov
inc
enter
lea
loopne
add
cwtl
pop
lcall
xchg
pop
popf
popa
out
jbe
out
inc
ret
icebp
add
in
int
lret
data16
movsb
in
int3
mov
mov
push
pop
inc
push
icebp
mov
jb
ret
mov
xor
xor
push
fs
jns
mov
stc
stos
mov
push
pop
pop
movsb
std
shrb
push
fiadds
xchg
stos
test
lods
xor
das
adc
mov
aas
xchg
xor
adc
ja
push
cli
jl
xor
in
jae
add
rorl
stos
pop
cld
out
les
popa
xchg
dec
mov
pop
cmp
lea
ljmp
mov
lods
scas
lds
loopne
icebp
pop
into
lods
dec
mov
in
in
pop
inc
ror
push
insl
jmp
in
sbb
lods
int3
pop
cmpsl
mov
mov
enter
dec
psubw
enter
push
cmpsl
or
loope
jp
out
data16
xchg
sbb
xchg
cwtl
in
lds
jle
add
push
int
fcmovnu
and
inc
mov
pop
int3
in
push
mov
push
pop
push
das
mov
js
jo
and
lods
insl
sub
ljmp
and
cmp
cli
mov
mov
pop
movsl
into
iret
lds
adc
shlb
test
pop
lods
mov
incl
fcompl
nop
cld
push
rcll
in
mov
enter
ret
icebp
loope
out
jbe
sbbl
test
cmp
xchg
std
pusha
dec
jbe
daa
cmp
ror
push
lods
or
mov
xor
mov
leave
or
sarb
test
js
pop
mov
inc
iret
xchg
out
loope
xchg
fst
loope
push
mov
dec
jo
or
and
insb
or
mov
out
mov
lea
mov
sub
xor
push
call
and
push
push
mov
adc
pop
pop
dec
sar
jp
int3
imul
leave
inc
push
orb
cmp
adc
mov
sbb
cmpsb
rcll
lret
jno
xchg
adc
or
pop
push
xor
add
xchg
bound
push
mov
je
inc
adc
mov
sub
repz
dec
cmp
dec
insl
call
scas
pop
std
cld
fdivrl
mov
mov
lret
inc
daa
stc
or
adc
dec
adc
out
xchg
jne
inc
mov
cmp
out
into
das
ja
cld
cmp
jns
stos
mov
adc
jl
ret
sub
or
pop
pop
adc
test
xchg
xor
andl
insl
mov
xchg
inc
lock
aad
pop
fwait
mov
push
mov
or
sub
and
or
mov
cltd
xor
dec
into
call
aaa
dec
stos
mov
pop
mov
in
imul
mov
xchg
out
pusha
cltd
inc
mov
imul
sti
jmp
repnz
jae
das
and
fnsave
mov
aaa
nop
sbbb
test
cmpb
imulb
xor
lods
enter
add
jb
jbe
loope
adc
mov
mov
mov
dec
ljmp
faddl
sub
and
add
aas
out
sub
popf
data16
pop
pop
out
cmc
dec
sub
insb
jg
jge
inc
dec
test
mov
les
mov
fcompl
jb
jmp
xor
in
cmpsl
nop
push
jge
cmpsl
daa
iret
stos
mov
mov
and
loopne
pushl
push
movsl
cmp
int3
and
and
test
jp
lcall
mov
sahf
out
aaa
cs
into
sub
pop
cs
movsl
sbb
jns
iret
cmp
xchg
clc
cli
cmpb
lahf
mov
je
sub
add
xchg
stc
nop
cmp
imul
nop
push
shll
nop
ficompl
mov
dec
dec
test
stc
scas
lahf
bound
sbb
lahf
insb
jle
js
test
sub
out
pop
outsb
sbb
adcl
mov
jns
jne
dec
dec
pop
mov
fwait
subl
scas
into
add
mov
stos
xchg
jnp
add
mov
pushf
mov
pop
dec
mov
or
lods
push
int3
test
mov
push
repnz
in
lds
cmpsl
mov
mov
push
lock
mov
fists
arpl
mov
mov
push
mov
cwtl
mov
cmp
mov
ds
int
mov
test
add
sub
sub
nop
jae
mov
lea
add
sbbl
outsl
pop
jno
fistl
das
jnp
xchg
aaa
jo
icebp
in
dec
xorb
pop
add
pop
sbb
test
mov
pop
xchg
in
mov
or
movsb
dec
mov
pop
push
stc
fsubrl
aas
push
call
leave
cs
movsl
stc
notl
jmp
or
out
mov
and
aaa
cwtl
cli
rorl
lcall
aad
addr16
or
in
inc
xchg
les
sub
mov
cmpsl
xchg
mov
dec
mov
or
xor
mov
aas
pop
mov
and
fidivrs
mov
sub
cmp
xchg
scas
push
stc
adc
sub
out
js
xchg
and
inc
cmp
ror
lahf
pushf
outsl
mov
out
push
ret
inc
mov
fsubrp
jns
loopne
mov
stos
or
xchg
mov
dec
getsec
push
xor
xor
sub
enter
in
and
iret
ret
fisubrl
add
inc
cli
loope
jae
and
leave
push
mov
lds
std
jmp
pop
pop
ljmp
xorl
push
push
test
int
shr
stos
dec
orb
negl
arpl
repz
inc
push
iret
jbe
pop
scas
cmp
push
lahf
adc
in
lret
fidivrl
pop
push
incb
iret
out
enter
lahf
gs
cwtl
jns
push
inc
sub
in
insb
daa
pop
push
jo
ds
insl
add
sub
lcall
les
outsl
fisubrs
dec
mov
cmpb
loop
aam
mov
pop
sti
pop
or
sbb
iret
sbb
scas
push
dec
adc
adc
xor
jae
daa
or
pop
push
sbb
pop
cmp
jae
outsl
stos
lret
mov
mov
dec
mov
sbb
mov
out
sub
int3
jo
mov
or
push
mov
mov
push
js
xor
mov
sub
lds
orb
and
pusha
pushf
jg
push
jae
sub
pop
adc
in
out
in
jns
pop
js
imul
lods
repnz
sbb
pushf
stc
inc
xlat
lahf
inc
jg
repnz
mov
or
movsb
aas
mov
cmp
or
mov
xor
cmpsl
xchg
cmp
dec
imul
mov
sub
ret
jae,pn
cmc
stos
cmp
lds
xorb
out
mov
sub
push
inc
mov
xchg
sub
pop
imul
rcrl
lock
jbe
sub
daa
mov
or
jnp
jecxz
dec
push
dec
call
mov
cmpsb
and
push
stc
movsb
push
mov
inc
add
test
mov
leave
xlat
popf
and
pop
imul
push
nop
fs
cmpsb
xchg
in
jne
aad
cwtl
inc
jmp
mov
sub
xchg
add
cmp
nop
divb
sbb
mov
leave
iret
inc
push
adc
push
xchg
sub
adc
adc
mov
in
ret
pop
cmp
mov
adc
mov
pop
jmp
incb
xor
ret
cmp
andnps
push
xor
adc
or
mov
and
orl
dec
or
adc
pop
xor
sbb
mov
into
xor
stc
cmp
daa
dec
add
out
int3
push
xor
or
mov
in
push
ret
pop
jno
in
jecxz
adc
cld
add
aas
mov
push
jnp
dec
xor
stos
dec
xor
xchg
or
dec
xor
fwait
jge
inc
sub
mov
jns
fiadds
cli
push
and
push
pop
testl
add
jg
stc
xor
pop
push
lds
nop
adc
and
mov
sar
xchg
xor
push
and
gs
jle
sub
movsl
and
add
imul
std
repnz
xor
lods
enter
out
adcl
inc
int3
mov
mov
mov
jmp
add
test
push
mov
inc
inc
and
xchg
and
aad
mov
cli
pop
and
add
mov
inc
jae
pushl
int3
add
into
pop
imul
jp
hlt
leave
sub
popf
push
scas
xor
dec
sub
xor
rorl
cmc
inc
outsb
stos
in
push
incb
mov
aam
popa
add
scas
add
ds
lahf
push
mov
lahf
sub
cmp
push
mov
lds
jbe
sub
jmp
stc
je
pop
loop
inc
sbb
mov
add
rcrl
sarb
inc
push
push
push
data16
fadd
inc
fldcw
hlt
jmp
ds
mov
mov
aaa
dec
and
icebp
stos
pushf
inc
mov
xchg
nop
in
popf
sahf
push
subb
sub
push
loope
cs
daa
sub
insl
mov
mov
jne
pop
and
pop
hlt
lock
out
jp
xor
loop
inc
scas
cmpsb
mov
pop
sub
add
je
jp
scas
int3
lret
inc
mov
mov
das
repnz
xor
decb
in
enter
lret
pushf
xor
xor
pop
push
jne
inc
pop
sbb
jno
cmp
pusha
mull
push
dec
rcll
dec
sub
cmp
xor
leave
in
xchg
add
aaa
sbb
imul
add
or
xor
sarl
mov
gs
shl
inc
addb
lret
loopne
stos
lret
or
jae,pt
sarb
shll
es
adc
mov
lret
xlat
and
pusha
mov
mov
insb
inc
jb
lock
scas
leave
aad
jne
testl
fldenv
sub
mov
aam
inc
inc
es
outsl
in
test
fstps
adc
enter
fistpl
jb
imul
xchg
inc
icebp
mov
push
js
push
mov
hlt
push
add
test
mov
cwtl
and
dec
push
jmp
out
enter
mov
mov
cmc
or
outsb
cmp
fistps
xor
pusha
pop
stos
mov
dec
sbbb
repz
xor
push
es
subl
aas
aad
sti
push
and
jnp
aam
movb
inc
insb
fsts
loope
movsl
subl
leave
mov
and
ret
push
jbe
inc
pop
push
mov
adc
fsubl
mov
sub
and
add
adc
jle
lock
aas
mov
fwait
fwait
mov
and
mov
dec
jne
jmp
hlt
fistpll
shrb
sbb
jbe
xor
les
jmp
pop
rolb
jl
cld
orb
add
cmp
hlt
jmp
jg
pop
insb
push
cmp
fldenv
dec
add
xor
call
or
inc
mov
sbb
fcoms
mov
rcll
pop
or
shrl
lods
xchg
jl
roll
stc
cli
test
mov
cltd
sub
ljmp
into
imulb
ret
jp
push
pusha
inc
push
imul
push
push
jmp
cwtl
icebp
pop
add
push
sbb
sub
push
add
sahf
js
mov
fists
in
sbb
or
pusha
inc
mov
sbb
mov
or
mov
xchg
add
cmp
je
testb
push
in
lcall
mov
fnsave
cmp
outsb
ja
ja
stos
imul
mov
std
test
push
jg
or
xor
xor
lods
push
mov
jbe
sbb
cmp
ss
mov
mov
dec
or
out
daa
in
jb
jns
std
std
jle
cmp
push
push
rorl
xlat
mov
repnz
hlt
adc
cmp
and
mov
pop
dec
xchg
cmp
sub
adc
in
lods
cmpb
outsl
add
cmp
and
mov
cmp
clc
mov
lea
sub
pop
imul
lods
fidivrl
xor
adc
cmp
je
lret
push
sti
mov
outsb
movsb
mov
mov
ret
dec
aas
bound
pop
out
pop
push
inc
pop
adcl
mov
in
mov
jnp
cmpsl
ret
push
insb
out
call
out
xor
and
mov
mov
jne
mov
sub
sub
addl
addr16
mov
aam
jo
lea
js
cmp
in
lock
cmp
imul
lcall
subl
pop
cmp
lea
xchg
ds
cwtl
adc
sbb
bound
cmpsb
cmp
xchg
mov
jp
imul
fdivp
pop
jecxz
adc
jmp
out
and
cmp
jg
test
shr
in
mov
lods
inc
aam
lods
or
xor
xchg
lahf
sbb
iret
hlt
rcrl
shr
mov
dec
in
test
adc
or
adc
pop
or
mov
les
or
cli
or
mov
int3
pusha
clc
lret
in
ja
mov
stc
nop
sbb
mov
push
mov
xor
jecxz
push
jne
ss
lahf
sub
sub
mov
scas
sbb
js
cld
loop
ljmp
xchg
lock
mov
adc
adc
jae
sub
adc
xor
fs
mov
push
mov
subl
popa
insb
ret
push
xor
clc
push
in
rolb
mov
push
aam
sarl
mov
test
rcll
push
pop
xchg
sbb
test
int
mov
push
jbe
repnz
xchg
xor
xchg
bound
sub
push
mov
call
or
mov
inc
dec
adc
lcall
or
cmp
adc
jns
bound
sbb
dec
fnstcw
jae
jo
mov
pop
xchg
mov
movb
fcos
test
rcll
and
movsl
xor
jnp
mov
jne
push
mov
push
sbb
std
aad
cmc
stc
in
mulb
inc
dec
fstl
pop
loopne
inc
mov
outsb
adc
or
mov
daa
adc
jp
out
mov
xor
cli
shll
ja
xorb
sub
test
pop
dec
out
out
test
mov
scas
or
adc
loopne
pop
clc
ljmp
bound
and
arpl
sahf
shlb
push
mov
mov
xor
aam
pop
out
insl
sarb
push
sub
and
shll
cmp
push
ficomps
or
ret
fnstenv
fidivrl
push
cltd
pop
dec
loope
fidivl
xchg
sub
lods
in
mov
adc
push
and
xor
ljmp
hlt
mov
xchg
fstps
xor
cmpsl
push
mov
jnp
add
ljmp
add
push
jne
jae
adc
mov
sub
xor
jecxz
and
call
mov
jg
stc
movsl
dec
xlat
inc
insl
test
jp
fwait
inc
jp
mov
jbe
je
or
mov
mov
es
popa
pop
lahf
imul
pop
push
jne
or
xor
ljmp
loopne
mov
sub
add
in
mov
data16
inc
mov
xlat
shll
pop
movsb
sub
add
inc
rorl
sbb
std
imul
outsb
inc
out
aad
cmp
pushl
fwait
mov
je,pt
sbb
fs
lods
adcb
data16
adc
in
add
lea
pop
subl
xchg
mov
test
or
mov
outsl
or
arpl
orb
pop
out
stc
xchg
cld
sbb
testb
adc
sbb
jnp
and
fistps
and
push
in
jae
dec
enter
pop
jle
arpl
sbb
and
popa
mov
mov
iret
insb
stos
mov
mov
test
pop
rclb
jb
or
adc
test
push
sbb
push
xchg
int
aam
arpl
xchg
pop
es
out
out
lods
repz
jae
minps
mov
fs
xor
popf
mov
pop
fdivl
aaa
jns
fsubp
stos
fbld
sub
data16
xchg
pop
mov
lcall
xchg
push
adc
mov
clc
lcall
push
daa
cli
leave
mov
mov
pop
rolb
sarb
jae
push
dec
ret
inc
xor
popl
inc
inc
jge
pop
jl
fwait
xchg
je
push
inc
and
out
cmpsl
ja
leave
jecxz
out
cli
jne
push
jp
fiaddl
jnp
stc
faddp
daa
pop
data16
push
or
stos
adc
adc
mov
in
ss
pop
outsl
add
add
push
push
mov
sub
rclb
push
mov
pop
sti
and
adc
retw
sbb
ljmp
subb
aaa
add
dec
xor
pushf
inc
test
pop
or
fdivrl
push
xchg
sbb
adc
outsl
mov
stos
add
pop
insb
or
xchg
aas
sub
xorb
enter
aaa
mov
push
loop
inc
stos
fidivrl
mov
mov
xor
or
jne
orl
jo
mov
cmp
ret
aad
xlat
and
and
shll
in
cmp
ret
mov
xor
and
push
fcompl
inc
sub
lret
mov
insl
adc
xchg
call
jg
mov
cmpsl
fists
ret
into
mov
pop
cmpsb
adc
outsb
xchg
pop
mov
mov
shlb
addr16
test
or
or
mov
xchg
hlt
imul
aas
mov
arpl
xchg
icebp
enter
in
aad
push
mov
push
outsl
mov
or
inc
push
cmp
xor
xor
add
inc
bound
or
mull
add
push
iret
bnd
xchg
aas
cli
and
xor
insb
ljmp
push
pop
pusha
jge
sbb
pop
dec
out
inc
pop
push
sbb
fsubl
out
leave
push
xlat
ss
sub
fsubr
lock
in
fsubl
fildll
push
mov
add
dec
movb
mov
push
mov
test
or
pop
pop
mov
dec
insb
cmp
sti
jnp
sbb
dec
fwait
dec
and
lds
inc
sbb
sahf
jo
jbe
and
adc
lcall
shlb
or
test
sub
daa
lds
cwtl
jno
inc
push
add
dec
xor
xchg
push
aad
sbb
xchg
jle
cmp
icebp
ffreep
jns
fstpt
ror
xor
push
int
std
lcall
out
push
sbb
cli
mov
out
lods
mov
adc
mov
test
mov
scas
sub
and
dec
in
adc
iret
test
stos
movd
cld
inc
enter
inc
mov
test
in
sbb
insb
or
int3
and
cmp
jecxz
stos
xchg
loop
sbb
lods
imul
xchg
mov
mov
xchg
dec
pop
or
or
mov
mov
insb
jl
cltd
cmp
pop
and
in
mov
jp
dec
sti
mov
loopne
ljmp
add
dec
movsl
loope
jns
lock
mov
and
cmp
lea
dec
mov
dec
imul
sbb
and
xchg
in
push
test
mov
aam
mov
jmp
dec
enter
fldt
cmc
pop
rcl
das
adc
das
push
mov
das
mov
sbb
das
xor
xchg
push
mov
sbb
pop
aad
mov
fistps
cmpsb
jno
push
lret
push
and
sbb
mov
cld
add
adc
mov
loopne
aad
pop
fxch
out
aaa
loope
fsubl
mov
push
mov
out
sub
cmp
hlt
out
std
pop
mov
orb
into
push
inc
and
push
add
loope
inc
sub
sbb
out
mov
xchg
pushf
jae
ss
mov
dec
cmp
popf
push
ret
dec
pop
popa
mov
cmp
sbb
inc
in
bound
or
iret
cmp
mov
xchg
push
sub
pusha
inc
pop
jb
adc
inc
inc
cvtpi2ps
lret
nop
inc
pop
push
xchg
inc
sbb
sbb
and
shlb
xchg
ss
xor
sahf
mov
repz
xchg
add
inc
push
cmp
pop
in
out
mov
dec
sbb
xchg
adc
mov
pop
cmp
add
pushf
int
xchg
sbb
sarb
mov
bound
cmp
bound
adc
push
cwtl
fcoms
or
sarb
dec
cld
push
pcmpeqw
hlt
imulb
fbstp
adc
rcrb
aam
adc
mov
ret
scas
dec
mov
mull
or
jb
andl
sbb
and
sub
adc
cld
xor
sub
mov
jecxz
push
out
daa
mov
mov
repz
xchg
mov
cmpsb
es
cmp
mov
stc
insl
loopne
push
xchg
dec
push
add
push
dec
sbb
and
adc
pop
sbb
stos
push
xchg
je
loope
jne
sub
xor
jnp
mov
add
pop
jnp
pop
dec
cli
add
in
arpl
sbb
cs
mov
cmp
or
pop
rcrl
out
jae
jae
ja
dec
lods
addl
sbb
mov
push
aaa
loopne
cmp
jg
addr16
pop
out
jl
and
inc
ss
cmpsl
add
push
jge
in
jl
out
in
test
shrl
xor
mov
pop
and
mov
iret
adc
icebp
sub
in
rorb
push
test
imull
or
xor
dec
cmp
sbb
pop
cmp
or
scas
fistps
xor
inc
in
inc
dec
lahf
ret
cmp
pop
sti
repz
mov
xchg
push
mov
std
call
in
sub
js
or
ret
push
inc
cld
hlt
dec
xchg
jbe
mov
daa
lods
sub
stc
push
pop
adc
push
ret
mov
lods
xchg
xor
mov
inc
push
out
and
push
xor
or
push
sbbb
insb
push
lcall
xchg
xor
enter
push
cli
fcmovnb
cs
pop
sbb
push
gs
dec
jnp
jl
mov
faddl
xchg
xchg
clc
push
add
fs
loope
jecxz
gs
scas
repz
out
push
test
rcr
dec
jae
lret
idivl
push
sub
sbb
push
jl
dec
ja
test
cmp
mov
and
fsts
nop
mov
test
cbtw
faddl
dec
mov
stc
adcl
ror
add
addb
xor
inc
push
incl
sbb
or
out
lcall
xchg
cltd
or
and
push
xchg
or
xchg
pushl
adc
out
arpl
cli
in
jnp
enter
ds
mov
ljmp
fwait
into
inc
add
pop
xchg
mov
push
int
lds
or
push
and
std
adc
adc
shr
cmp
mov
out
mov
xchg
in
icebp
pusha
sub
sbb
push
push
dec
jbe
jl
aas
sbb
sub
sub
mov
adc
add
cs
adc
lds
je
mov
push
inc
cwtl
stc
and
jo
ds
imul
mov
imul
ffree
lahf
popa
add
mov
pop
aaa
mov
jns
insb
sub
add
ficoml
int
sub
sub
cli
add
mov
out
ljmp
xor
adc
or
xor
popa
cmp
ds
lods
sub
mov
cmpb
xchg
lods
aad
pop
fcomp
andl
xchg
sbb
movsl
push
push
or
cmp
out
imul
pop
movsl
daa
shrl
popa
push
inc
mov
mov
jge
add
fdiv
or
and
or
fsts
ss
loopne
test
sub
cmpsb
fidivs
test
stos
mov
lods
sub
std
bswap
std
mov
jbe
jecxz
stc
imul
mov
lahf
mov
cltd
adc
aas
negb
mov
pop
je
push
cmpsl
xchg
xor
add
mov
dec
xchg
xor
aas
sbb
sub
lahf
xchg
ret
pop
imul
adc
or
mov
stos
adcl
and
sbb
dec
loop
iret
dec
roll
scas
jle
aaa
insb
xchg
mov
iret
push
mov
inc
cmp
inc
adc
mov
sbb
dec
xor
pop
or
or
or
js
fadds
clc
repnz
or
cmpsb
xchg
cmp
sub
xlat
mov
fs
xor
ljmp
cmpsl
sub
dec
xchg
xchg
add
and
sbb
ret
jecxz
xchg
leave
ficomps
push
or
jo
dec
add
out
out
mov
xor
push
out
adc
pop
and
pop
fimull
int
fistl
xor
xor
mov
xchg
sbb
cmp
jp
cmp
jns
cli
cwtl
aad
add
xor
xchg
jno
ss
jg
cmp
push
push
cmp
jg
pop
orl
adc
scas
shl
add
clc
enter
loope
lea
push
mov
sub
pushf
dec
and
scas
sti
test
jg
dec
loope
mov
icebp
pusha
in
or
test
int3
sbb
ret
xchg
rolb
sub
jae
fs
jge
xchg
sbb
pop
lock
pop
or
sub
iret
inc
jge
jns
lods
jle
mov
inc
push
push
and
mov
nop
or
sub
ret
pop
imul
dec
sbb
loop
mov
out
inc
loop
jnp
adc
nop
jo
nop
lret
inc
jno
std
stc
imul
sub
xchg
cmc
cmp
inc
cmp
outsl
aad
mov
popf
or
push
mov
inc
nop
scas
faddl
bound
cmp
scas
jns
ja
push
lods
dec
mov
mov
adc
cmp
cmp
dec
into
in
aas
xchg
out
pop
sbb
mov
rorb
addr16
xchg
pop
pop
add
xchg
aas
test
in
lea
inc
ret
sahf
insl
loope
mov
add
xor
mov
adc
xor
push
mov
leave
mov
roll
and
push
stos
std
es
rorb
ljmp
xchg
jecxz
mov
les
adc
jne
cs
xchg
mov
mov
aam
xchg
mov
rcrl
jae
xor
xor
inc
pop
add
ljmp
and
cmp
stos
icebp
aas
pop
in
and
add
test
imul
and
cmpsl
int3
shrb
dec
adcl
adc
sub
lea
enter
stc
dec
lret
in
sbb
setp
dec
xor
sbbl
jnp
xchg
test
jle
or
leave
bound
iret
in
xor
jle
mov
std
mov
mov
adc
out
mov
sarl
xchg
mov
sub
adc
dec
inc
mov
es
mov
dec
inc
cld
shll
mov
lds
push
inc
lret
inc
div
data16
pop
dec
inc
push
xchg
and
mov
repz
xor
es
dec
es
iret
pop
repnz
cmpl
adc
les
enter
and
bsf
or
mov
sub
adc
inc
cltd
add
fyl2xp1
sub
jne
mov
add
add
decl
push
clc
pop
out
pop
pop
pop
addr16
nop
out
cmpsb
mov
ja
aas
gs
add
out
jno
jecxz
pop
cmp
insb
out
dec
int3
xor
shll
sar
ss
pop
ja
sbbl
adc
mov
les
sbb
rcr
insl
popa
stos
in
mov
dec
in
mov
aaa
pusha
js
pop
in
gs
or
push
and
pop
cs
clc
popf
inc
pop
gs
addl
mov
inc
inc
add
mov
add
dec
sarb
fs
xchg
mov
mov
adc
push
scas
movsl
lds
pop
push
sbb
cmpsb
loope
or
cmp
pop
push
adc
fdiv
inc
xor
jo
cltd
and
cmp
addr16
out
xchg
pop
xor
aaa
mov
mov
mov
pop
cli
icebp
ljmp
sub
jae
lahf
sub
testl
sub
jb
repz
enter
adc
repnz
ret
nop
push
add
lock
jne
imul
pop
or
mov
lds
mov
les
cmc
rcr
or
cmp
iret
dec
shlb
and
fwait
and
idiv
ret
pop
adc
in
ret
loop
mov
fwait
xor
jo
aad
mov
aam
dec
loope
test
orl
jle
iret
incl
pop
mov
push
bound
jg
ficompl
fdivs
mov
dec
out
iret
cld
or
push
insb
mov
mov
xor
incl
test
jg
mov
xor
repnz
aad
mov
sbbb
test
loop
lds
jle
repz
movsb
push
arpl
in
mov
xchg
outsl
loope
ljmp
inc
out
mov
sbbl
mov
ds
shll
out
enter
xchg
or
fs
dec
int3
notb
or
bnd
mov
jb
repz
sbb
pop
push
or
rcr
adc
push
cmp
adcb
jb
mov
jmp
stos
and
pop
ds
dec
xor
fs
int3
lds
es
les
mov
xchg
das
mov
inc
push
iret
lods
leave
cltd
addr16
or
jb
adc
mov
jmp
and
jns
cli
testl
xchg
sbb
push
gs
fistps
out
je
out
mov
rclb
leave
cld
sub
and
and
jbe
adc
imul
mov
jecxz
xor
rcll
jnp
pop
add
push
xchg
jns
add
loopne
aam
loopne
inc
inc
ljmp
adc
mov
scas
nop
adc
cs
aam
cmp
imul
repnz
fnsave
pushf
xor
xchg
sub
ja
push
jge
add
cmp
int
add
cwtl
sub
mov
push
sub
sub
sub
pop
jecxz
pop
lret
faddl
push
adc
psrad
mov
push
sti
add
sahf
add
pop
add
fisubl
iret
shrl
incb
mov
pop
ja
loop
lods
int3
pop
fimuls
daa
lahf
and
adc
xor
adc
push
add
icebp
xor
mov
mov
sub
fwait
daa
fldt
inc
mov
iret
inc
push
shlb
imul
lds
inc
jl
jecxz
cltd
lock
nop
add
sub
fiadds
jg
fs
popf
repz
jg
sub
jle
mov
out
add
sub
adc
sub
in
pusha
xor
jno
jnp
lods
scas
adc
push
pop
lods
cmp
pop
jae
sbb
inc
in
dec
or
testl
negb
in
int
mov
mov
and
xor
mov
cld
pop
cld
push
push
orl
ret
inc
sub
pop
nop
mov
dec
out
fsubrp
dec
mov
mov
movsb
jmp
mov
roll
pop
nop
sti
inc
movsb
movsb
flds
sbb
ret
mov
xchg
sbb
test
push
mov
insl
xchg
pop
insb
stos
inc
inc
mov
shl
sbb
jae
mov
es
xor
sbb
ja
into
jmp
cli
aas
test
jle
push
mov
sbb
push
aaa
mov
inc
mov
mov
add
pop
into
das
out
fwait
ja
mov
rolb
cmp
test
pop
movsl
sub
inc
push
repz
mov
dec
xchg
mov
sub
and
out
in
cmp
push
and
loope
mov
test
pop
lock
xchg
repnz
popa
cltd
rolb
lahf
adc
mov
mov
adc
das
xchg
clc
test
or
and
mov
mov
adc
and
mov
jg
xchg
mov
ret
fstp
pushf
xor
iret
or
cmpsl
xor
fcmove
mov
mov
adc
into
popf
xchg
push
and
decl
enter
fs
test
mov
jo
mov
add
pusha
cmovl
ljmp
xor
call
mov
lahf
and
cmp
ja
ret
sub
fwait
ret
mov
push
les
jno
mov
push
sbb
jne
lds
pusha
mov
lret
xchg
xchg
test
mov
fisttps
inc
shrl
not
sbb
xchg
inc
inc
frstor
cwtl
add
adc
mov
and
pop
rorb
xor
aam
lcall
push
lret
dec
sbb
add
mov
mov
rcrl
jl
push
iret
jge
jbe
mov
mov
pop
dec
rcrb
cmpsb
jp
and
adc
dec
push
sub
xchg
cwtl
nop
pop
icebp
push
dec
pop
test
js
cmpsb
xor
sbbl
rcll
cltd
aas
jecxz
fisubl
inc
mov
push
test
mov
pop
ficoms
cmc
dec
int
jmp
out
push
jae
lcall
mov
fsubrs
addr16
cmp
es
int3
mov
jecxz
je
insl
pand
lcall
mov
add
fwait
mov
mov
jecxz
cs
adc
adc
add
into
cmpsl
add
jmp
cmpsb
imul
fnstenv
flds
add
test
inc
dec
movsl
jae
fmull
pushf
mov
jno
mov
xor
idivb
gs
je
fisubrl
pusha
imul
xchg
in
or
add
cmp
inc
imul
mov
sbb
sbbb
lods
pop
mov
sbb
mov
or
in
cmp
mov
jmp
sub
xor
mov
mov
loopne
pop
push
scas
sbb
push
div
or
push
insb
inc
in
enter
adc
xchg
jb
rcrl
or
adc
sbb
mov
cld
fmuls
cmp
mov
mov
cwtl
psllq
iret
jo
cs
out
cmp
pop
xor
outsb
outsl
xchg
sub
sar
mov
subb
and
xchg
mov
add
add
mov
cs
dec
xchg
mov
push
fbstp
lods
xchg
mov
pop
dec
mov
rcrl
sti
pop
jmp
test
icebp
mov
dec
hlt
push
mov
lods
fidivrl
jnp
fisubl
push
cli
mov
ja
test
jne
mov
ficompl
jmp
sub
lods
mov
dec
mov
rorl
sub
arpl
xchg
xchg
adc
add
add
push
std
stos
xor
out
mov
mov
out
cmp
ret
lods
cmpsl
insl
lods
push
mov
addl
mov
mov
lcall
lds
jb
jb
test
sbb
pusha
inc
lret
adc
je
divb
repz
pop
insb
ljmp
das
jg
int
aam
sub
jne
shlb
sub
in
fisttpl
popa
insb
ljmp
and
cld
jae
mov
and
adc
lcall
sti
mov
xor
jnp
cmpsl
lret
push
es
stos
pushf
lret
out
sub
xchg
cld
out
cmp
sub
lods
xchg
dec
cmc
mov
mov
inc
arpl
mov
cmpsl
lea
add
dec
cmp
and
mov
lret
xor
sbb
jle
jge
mov
pop
repz
push
mov
push
inc
mov
lret
mov
inc
fwait
and
or
xor
stos
mov
imul
fucomip
gs
xchg
pop
iret
test
and
clc
mov
imul
dec
sub
das
cmp
inc
clc
jl
jl
in
ljmp
mov
pop
push
add
fnsave
and
push
inc
and
sbb
fwait
dec
stos
adc
cmp
sarb
shll
push
push
and
and
sbb
dec
out
push
mov
jecxz
data16
mov
es
ja
loop
xor
fnsave
pusha
push
sub
push
mov
js
push
jno
adc
and
pusha
test
in
sub
insb
jne
and
aad
lahf
in
pop
sbb
gs
pop
mov
cmpsb
pushf
mov
mov
movsb
pop
mov
insl
iret
dec
add
xlat
imul
pop
jge
decb
cltd
insb
add
jmp
mov
push
icebp
mov
adc
xor
xchg
lods
sub
mov
sub
lret
movsl
outsb
xor
imulb
adc
clc
popa
fnsave
xor
ss
popa
popf
sbb
hlt
or
and
int3
mov
out
mov
xchg
jmp
outsb
mov
in
adc
mov
sti
mov
xchg
fisubrs
mov
mov
cmp
mov
sub
and
push
sbb
hlt
fsubl
out
sub
inc
div
shrl
pushf
je
cltd
data16
shll
or
push
push
and
or
lock
rclb
lcall
inc
mov
loop
jp
push
lock
cmp
jo
pop
push
data16
adc
push
xor
inc
pop
ds
dec
out
push
scas
mov
negl
insl
pop
push
sub
outsl
jmp
mov
xor
pop
push
cmpsl
nop
lret
jmp
mov
nop
js
cli
dec
les
push
lods
cmpb
pushf
push
es
outsl
dec
or
mov
add
and
rolb
xor
test
addr16
pop
cld
mov
jl
and
pop
sbb
scas
mov
or
push
cli
daa
push
dec
pop
pop
aam
and
xorl
mov
inc
push
add
xchg
add
and
imul
push
xchg
dec
dec
adc
icebp
cmp
and
add
mov
loope
imul
iret
daa
cmp
mov
pop
pushf
in
and
sbb
in
or
jle
insl
push
cmp
xchg
das
mov
std
mov
push
lret
arpl
subb
lret
aam
adc
add
ja
or
int3
jg
sub
lret
inc
pop
std
pushf
cwtl
aad
pushf
jno
push
fisubrs
xchg
leave
mov
mov
lds
imul
or
push
jns
lcall
push
aaa
into
jns
imul
dec
dec
subl
cld
lret
pop
outsl
leave
xor
sub
push
xchg
jp
dec
push
add
fdivl
pop
cmp
test
pushf
mov
mov
adc
cmp
imul
sti
in
int3
std
fcompl
and
jnp
xor
push
cmp
xor
xchg
cmp
dec
push
les
lods
xor
add
push
jnp
pop
jle
add
pop
pop
sub
mov
ficomps
push
icebp
sub
inc
jp
push
jg
inc
xor
mov
int
cmc
cld
xchg
enter
mov
and
mov
out
adc
inc
push
filds
mov
add
inc
sbb
mov
sbb
inc
push
dec
jo
jle
je
dec
sbb
mov
cmp
aaa
scas
lcall
sub
popf
and
sub
dec
and
cmpsb
add
jbe
cmp
inc
stos
cmovp
out
push
mov
jb
push
dec
cld
outsb
mov
scas
xchg
mov
popf
leave
sub
cmp
pop
fs
sti
pop
out
push
stc
cmp
push
mov
ss
mov
push
es
fnstcw
mov
jno
aad
xchg
shll
push
inc
jb
inc
jmp
sbbb
incl
mov
xor
xchg
push
test
ljmp
sarb
cmp
gs
pushf
sbb
pop
into
fwait
test
gs
call
xor
sahf
inc
xchg
loopne
sbb
out
lret
xchg
movsl
cmc
mov
sub
xchg
sub
mov
sbb
push
in
push
pop
jl
jno
push
dec
stos
andl
and
outsl
sbb
cmp
popa
ficomps
pushf
or
aad
outsl
push
jno
in
popf
dec
xor
out
sub
fistpl
mov
lahf
shrb
fcompl
dec
sbb
fwait
xchg
sub
filds
push
faddl
insb
sub
fmul
adc
aas
adc
inc
call
xor
or
xor
cmpsl
or
daa
ud0
mov
mov
cld
push
sbb
push
xor
adc
push
pushf
adc
fwait
add
outsb
add
xchg
out
sub
insb
xlat
aad
push
xchg
stc
jo
and
xorb
jmp
jns
in
popa
dec
fwait
imul
roll
pop
mov
ds
ja
sub
sub
aam
imul
mov
out
repnz
aaa
cmp
sbb
pop
enter
mov
pop
test
add
dec
int
dec
insb
dec
dec
push
mov
ret
jmp
cld
pop
sub
adc
data16
cmp
fstl
or
lods
pop
sahf
fcomps
negb
repz
imul
jae
xchg
icebp
fwait
sbb
sub
mov
add
pop
add
inc
invd
call
shrl
jle
push
sahf
cli
or
test
popf
push
fs
and
ret
xchg
in
jmp
inc
mov
fistpll
xor
sahf
int
xchg
fsubl
inc
jnp
push
mov
pop
sbbl
mov
inc
mov
xor
jns,pn
inc
xor
nop
inc
jno
aaa
movsl
add
shrb
lretw
mov
std
bound
loope
stos
jmp
and
stc
cmp
jo
int3
jecxz
test
mov
fwait
add
arpl
inc
or
sub
xchg
ficoml
in
fidivrs
ss
add
iret
xchg
je
rcll
popf
fimull
std
or
and
or
out
mov
fimuls
jp
cmpl
jnp
lcall
or
mov
stos
out
cmpsb
push
enter
xchg
cmp
mov
fwait
and
and
pop
aad
mov
cmp
jp
mov
sub
int
lods
lret
dec
or
cmp
call
or
xor
cmp
loope
adc
and
xor
mov
adc
stc
sub
xchg
adc
cmpsl
jecxz
jno
xchg
lods
mov
movntps
and
xchg
dec
test
fists
in
incl
nop
dec
cmp
sub
aad
imul
and
stos
or
andb
sub
cmc
and
lods
in
or
cmp
sbb
pop
daa
mov
push
adc
adc
mov
mov
and
lods
sar
andb
cmpsb
add
xor
or
test
jle
daa
lret
dec
dec
clc
xchg
jb
dec
popf
mov
mov
cmp
pop
sbb
test
addb
xlat
dec
insb
jnp
stos
inc
mov
ds
movsb
fsts
mov
jp
pop
xor
divb
pop
or
dec
xor
lcall
lret
xchg
ljmp
sub
and
jno
adc
nop
add
pop
or
fcmovnu
test
push
test
addr16
add
adc
mov
xchg
sub
int3
fld
push
xchg
cmp
add
fdivp
pop
add
outsb
lods
mov
add
pop
popf
lods
mov
rorb
push
xchg
jge
enter
ja
or
adc
ret
inc
xor
push
pushf
add
dec
mov
jnp
mov
inc
push
inc
xor
roll
mov
mov
int
movsb
sub
mov
mov
cld
mov
loope
mov
je
ss
in
pop
xchg
loopne
rcl
cmc
loopne
jo
sti
ret
lret
and
bound
pop
mov
adc
fwait
jge
mov
xor
mov
xorl
mov
sub
mov
scas
xchg
cmp
or
ss
jae
pop
jne
js
pop
mov
shrl
inc
cmpsl
out
outsl
push
cld
dec
das
popf
lret
cmp
fisttpl
sub
divl
out
push
rcl
add
and
in
jge
inc
add
stc
jne
pop
scas
mov
addl
loopne
mov
xchg
mov
lret
jecxz
sbb
and
add
mov
sbb
subb
mov
mov
loope
stos
push
notb
clc
dec
stos
xor
mov
repnz
mov
rcll
pop
sub
dec
adc
cmp
xchg
shll
jecxz
in
xchg
and
mov
pop
sbb
adc
insb
and
subb
xchg
repnz
mov
filds
jl
mov
test
je
movsl
into
insl
jecxz
mov
sub
and
jb
out
pop
mov
push
cmp
lret
sbb
push
or
jne
and
xchg
fs
push
xor
push
pop
mov
lcall
xlat
push
adc
sbb
ljmp
jge
lods
ljmp
sbb
jnp
pop
mov
dec
ret
dec
pusha
cmpsl
movsb
es
pop
mov
repnz
orb
jns
jge
sub
dec
push
data16
enter
xlat
cmp
inc
gs
pusha
jg
popfw
jae
mov
add
fmuls
cmp
adc
arpl
outsl
cmp
ljmp
xor
add
mov
mov
jecxz
fstl
xchg
mov
mov
or
fmul
fucomip
sub
stos
std
cs
ds
and
jb
jns
jp
mov
pop
xchg
mov
mov
xor
orl
pop
jb
add
xor
fwait
icebp
mov
daa
and
fwait
or
push
cmp
bound
add
lea
incb
and
jnp
sbb
es
in
or
mov
imul
push
iret
lcall
cld
xchg
aas
sbb
cltd
cmp
mov
hlt
push
xchg
iret
or
mov
xchg
mov
addl
inc
dec
jnp
arpl
adcb
xacquire
push
mov
divl
push
iret
mov
xor
mov
xchg
pop
mov
mov
pop
sub
xchg
jb
je
std
into
cmp
add
sbb
jmp
inc
repnz
shll
addr16
js
insb
std
ss
cmpsb
cltd
loop
adc
xor
push
and
xor
push
xor
scas
mov
mov
clc
sbb
cmp
fcomip
or
fs
sbb
inc
cmp
out
cltd
icebp
out
ja
sub
xchg
icebp
push
pop
mov
insl
inc
dec
jle
add
push
test
jbe
outsl
inc
pop
and
jl
add
mov
rcrl
dec
mov
mov
daa
insb
mov
es
stc
inc
push
inc
pop
cs
pop
cmp
push
jae
and
cli
lea
into
mov
in
cmp
cwtl
iret
in
add
data16
test
pop
xchg
insl
jge
add
and
add
test
push
iret
sarb
pop
movsl
fwait
pop
sub
aaa
mov
sbb
dec
cmp
and
pop
hlt
adc
xchg
push
jle
xchg
fildll
jb
xchg
in
stos
mov
out
pop
cs
fdiv
pop
or
cmp
jle
ss
and
add
jl
sbb
or
mov
mov
mov
sarl
push
das
iret
cld
add
repnz
test
or
ja
mov
je
sar
add
inc
hlt
fidivs
jae
sub
sbb
clc
rcll
mov
mov
ljmp
mov
fstpt
ja
sub
rcll
xchg
inc
stos
sub
repnz
xchg
jo
aas
sti
push
mov
and
jp
subl
jno
lds
sarb
adc
dec
pop
movsl
loopne
data16
mov
inc
in
fucom
push
cwtl
mov
mov
lret
loop
push
dec
bnd
add
in
aas
jp
jge
adc
xchg
pushf
leave
ss
pop
repz
scas
add
arpl
pop
clc
cmp
clc
aaa
ss
dec
mov
shrb
and
dec
inc
dec
pushf
pushf
cmp
mov
pop
or
push
jl
aam
cmp
popf
pusha
imul
cmpb
jo
and
jmp
fs
adc
xchg
aam
add
sub
scas
inc
sub
call
fbld
fistl
push
jecxz
shlb
sbb
sbb
push
cmp
clc
jns
fadds
lea
ljmp
es
mov
pop
sahf
clc
int
jae
addl
dec
jle
dec
sbb
cmp
xchg
jnp
and
push
int
lods
out
and
pop
lret
sub
loop
dec
mov
or
std
mov
js
and
repnz
pushf
lahf
jns
icebp
addr16
lahf
stos
mov
icebp
pop
mov
dec
andb
in
in
mov
push
dec
cli
push
mov
and
psllq
movsl
int3
mov
and
adc
push
sbb
jbe
dec
insb
jnp
popa
iret
mov
xchg
xchg
fstp
xor
mov
stos
sub
popf
lahf
mov
pop
arpl
push
sahf
test
test
stos
xor
dec
pushf
xchg
and
mov
out
push
and
jb
cmc
jbe
cwtl
test
sti
jne
cmp
jmp
fisttpl
mov
xorw
orl
and
and
cmc
dec
jmp
jle
xor
aas
hlt
and
out
ret
mov
or
or
or
inc
arpl
mov
xorl
in
mov
push
add
pop
sub
das
arpl
xor
cmp
dec
shl
stos
lds
pop
andb
push
ss
mov
or
add
aas
fwait
movsl
in
aam
ljmp
nop
fnstsw
mov
sbb
inc
cmp
inc
sbb
push
dec
dec
fwait
or
inc
loop
cli
ret
and
jb
shrl
or
movsl
dec
out
mov
add
and
pop
fstpl
pusha
pmaxsw
pushf
rcrb
sarl
outsb
mov
inc
rorb
nop
jnp
dec
pop
call
sbb
daa
in
xor
pop
mov
out
mov
mov
sti
or
jb
adc
xchg
ret
xor
jmp
sti
jl
ret
scas
and
fwait
mov
call
dec
inc
imul
lahf
in
jmp
jb
sbb
xchg
pushf
push
imul
adc
push
mov
pop
dec
out
add
ret
mov
cmc
dec
repnz
mov
xor
sbb
sub
fldcw
loop
into
leave
iret
cld
mov
adc
stos
inc
mov
mov
xchg
jnp
mov
and
xchg
xchg
stos
xor
or
sub
lods
xchg
pusha
mov
fcmovnu
fidivrs
jns
outsb
cmpsb
mov
or
icebp
rorb
mov
and
ljmp
jmp
xor
and
aam
push
insb
fcmovnu
pop
int3
sbb
insl
push
push
test
mov
add
dec
cld
push
xchg
xchg
cmp
xchg
adc
push
xchg
test
mov
scas
clc
xchg
mov
sub
lods
push
mov
inc
addl
aaa
lds
or
aad
xor
rclb
jge
mov
pop
or
xor
in
xor
outsb
repnz
pop
jle
cmp
jne
jmp
add
shll
pop
push
shll
dec
je
or
mov
and
sbb
je
inc
fisttps
mov
mov
lret
sub
dec
push
int
mull
fstpt
push
dec
lea
mov
mov
mov
pop
cmp
and
scas
fwait
xchg
loope
mov
mov
shl
shlb
aas
aam
dec
or
ficoml
xor
dec
cmp
mov
in
imul
xor
add
ret
dec
push
sbb
inc
push
lret
jecxz
popa
sub
movsb
subb
cmp
sub
les
xor
aaa
lds
sbb
xlat
mov
fwait
lea
push
xchg
mov
ret
ljmp
scas
arpl
repz
fldl
jl
sub
prefetchwt1
add
jmp
sub
stc
push
push
call
iret
leave
sbb
dec
mov
das
and
out
sarl
lods
and
mov
lock
push
cmp
dec
decb
push
addr16
pop
fs
xor
aad
pop
stc
repnz
adc
mov
repz
fldenv
sub
or
ror
test
cmpsb
adc
lcall
adc
clc
imul
push
int3
jmp
push
clc
loope
lock
outsb
aaa
lods
es
faddp
insb
scas
aad
adc
xor
bound
mov
mov
push
inc
sub
test
add
xor
mov
mov
fcom
mov
sarl
cmp
lds
ljmp
mov
mov
inc
loope
nop
or
jl
push
inc
popa
lea
orl
jle
cli
out
mov
xchg
adc
aaa
daa
sahf
stos
mov
dec
pop
mov
je
ja
inc
cltd
std
int3
pop
rorb
mov
fwait
push
loopne
push
nop
mov
lds
mov
fwait
pop
jge
push
xlat
inc
adc
inc
mov
stos
arpl
or
push
push
inc
das
cmp
outsb
sbb
inc
fcoml
push
push
test
inc
pop
test
xchg
jae
xor
sub
icebp
pop
or
push
and
push
and
sub
fstl
movsl
fs
sbb
push
js
icebp
pop
out
nop
mov
scas
mov
push
iret
push
lahf
mov
jbe
and
dec
mov
into
pop
push
scas
mov
lods
sbb
jecxz
jle
pop
fistps
sbb
enter
pop
add
test
nop
xor
or
mov
and
push
xchg
jecxz
cld
out
mov
mov
imul
inc
cld
js
mov
jns
hlt
popa
pop
inc
push
sbb
xchg
and
test
fcmovb
dec
mov
adc
push
iret
enter
es
dec
gs
adc
lcall
xor
mov
sub
stos
aaa
stc
push
insb
fmull
mov
mov
xchg
cmp
jecxz
and
lods
mov
or
mov
in
jecxz
pop
pusha
std
dec
mov
sub
pop
or
sub
imul
push
icebp
push
jecxz
jbe
or
inc
and
fstpl
cmp
popf
fadd
popf
incl
jmp
into
add
jae
cli
ret
shll
jl
sbb
mov
push
or
int
sahf
cmp
out
ss
pop
jecxz
mov
ljmp
add
xor
mov
lahf
into
jg
xor
jp
and
sub
cmpsb
push
shrb
cmp
inc
scas
xor
arpl
dec
dec
sbb
in
call
push
bound
jg
sti
or
pusha
push
mov
jns
cmpsl
pop
mov
aam
cmp
pop
pushl
xchg
push
popa
dec
jne
dec
adc
push
cld
mov
add
cmp
in
rcrb
sahf
dec
dec
or
inc
push
loope
and
add
fnstcw
cld
adc
outsb
xchg
cmp
pop
lcall
subb
lea
outsl
dec
cltd
jp
inc
pop
sbb
pop
sbbb
stc
push
insb
in
add
adc
jo
fiadds
lea
gs
adc
sub
pop
sbb
push
jns
aam
and
in
iret
inc
mov
inc
cwtl
cmpsl
outsb
sub
fidivrs
insb
add
insl
push
lods
xor
ds
add
adc
outsb
and
mov
sub
movsb
jnp
jae
add
in
inc
dec
dec
cmp
mov
inc
xlat
mov
fdivs
adc
jecxz
xor
scas
cmpsb
addb
popa
lods
mov
dec
icebp
daa
fs
loopne
dec
push
xchg
pop
push
outsl
les
pop
xchg
pop
xor
dec
nop
jmp
scas
inc
mov
mov
pop
outsl
or
add
cmp
lahf
pop
inc
inc
mov
outsl
bound
pop
mov
repnz
jmp
add
loop
int3
pop
inc
aaa
xchg
mov
nop
or
pop
sub
mov
icebp
jo
idivl
fwait
addr16
lods
sbb
cmp
mov
jg
fcmove
inc
hlt
lods
in
call
mov
fs
jne
jno
frstor
fwait
mov
lds
sarb
pop
mov
insl
xchg
lock
int
ja
push
mov
outsb
push
lahf
dec
lds
movsl
inc
mov
test
jbe
dec
jmp
pusha
outsl
lret
fsubrs
mov
add
in
lods
rcpps
stos
cld
xchg
sub
rorl
mov
aaa
loop
sahf
jne
and
inc
rcl
jne
xchg
lret
cli
cmp
sbb
cmc
dec
insb
jno
push
pop
or
fbstp
adc
sub
and
jns
jge
mov
sti
lods
insb
jnp
mov
mov
add
cmp
cmp
je
lods
adcl
or
out
stos
jns
push
pop
movsl
sbb
enter
push
mov
in
cmp
das
popf
loope
xchg
xor
mov
fadds
pop
repnz
mov
icebp
out
sub
pop
xor
rcrl
out
aam
andl
dec
inc
in
ss
and
xor
push
ds
out
pop
mov
cmpsl
mov
icebp
icebp
orb
dec
pop
pop
mov
nop
sbb
and
sub
inc
push
cwtl
pop
inc
sar
sbb
stos
addr16
cmp
shrl
cltd
rdpmc
mov
lds
mov
outsb
popa
stos
pushf
addr16
aad
and
rcr
lahf
push
inc
inc
or
xbegin
pop
cltd
fsts
mov
xor
sub
sub
xor
stos
xor
bound
mov
sbb
leave
insl
repz
push
or
mov
dec
mov
pop
pushfw
dec
out
dec
pop
mov
fs
sub
das
ljmp
test
xchg
sbb
loopne
shrb
sub
jno
scas
out
pop
pusha
pop
pop
repnz
outsb
sbb
ret
lcall
or
xor
fsubl
inc
or
ds
dec
xchg
in
inc
inc
adc
push
call
test
repnz
and
nop
dec
jle
push
pop
testl
data16
cmpsl
mov
cmp
hlt
sarl
xor
push
arpl
popf
ljmp
adc
ror
fisubrl
push
xor
adc
push
stos
out
loope
in
daa
ret
cltd
push
stos
test
outsl
push
test
cmp
loopne
nop
sbb
mov
mov
sbb
add
mov
test
test
mov
into
test
mov
bound
cmp
sub
aas
mov
mov
push
insb
mov
leave
cli
out
dec
inc
mov
jns
xor
pop
jbe
negb
push
cwtl
inc
add
loop
lds
pop
jbe
adc
in
cld
pop
mov
mov
cli
push
scas
mov
xor
mov
mov
mov
out
imul
adc
sbb
sub
mov
add
ficoms
xchg
push
mov
stc
sub
pop
repnz
ds
xchg
jb
test
shlb
fs
push
mov
arpl
inc
cli
jae
sti
pop
inc
push
mov
adc
loop
and
nopl
or
or
jo
jg
and
mov
loop
negb
xchg
in
popa
lahf
out
shlb
push
or
mov
test
sbb
add
push
mov
mov
cmpl
jnp
aad
scas
mov
cwtl
in
jmp
dec
aam
sbb
cld
int
push
mov
inc
mov
push
push
jbe
xor
dec
mov
inc
mov
dec
cmpsb
cmp
jecxz
lea
sub
mov
sub
ror
mov
mov
mov
fwait
mov
lods
mov
xor
int3
mov
mov
iret
push
jmp
dec
lods
xchg
ret
xlat
iret
jo
adc
sub
scas
dec
mov
ljmp
or
xchg
aam
push
insl
and
mov
lahf
push
negl
jbe
jbe
add
xor
into
mov
cwtl
mov
mov
mov
sub
mov
or
or
mov
pop
mov
mov
shr
hlt
dec
adc
mov
hlt
xor
push
mov
stc
sub
ds
adc
push
in
loope
insb
test
cmp
out
push
xor
ljmp
add
out
mov
pop
fisubl
adc
jg
pop
scas
push
jbe
int
mov
pop
aam
cwtl
xchg
filds
push
ret
mov
mov
fistl
dec
ret
movsb
adc
popf
mov
cmp
xor
pop
xchg
pushf
xchg
push
sub
dec
jmp
mov
xchg
cmp
cli
xor
mov
mov
int
cmp
cmpb
jne
pop
in
add
jb
subl
arpl
push
mov
adc
push
xchg
leave
popf
xorb
push
pause
cwtl
pcmpgtw
mov
sahf
popf
add
bound
adc
mov
les
fstp
adc
adc
add
pusha
ja
frstor
fwait
add
xor
addr16
dec
bound
adc
xorl
inc
sub
lcall
gs
lahf
roll
cltd
lods
sbb
dec
jnp
sub
popf
loop
inc
fcomp
flds
jge
jl
adc
repz
scas
jp
je
inc
incl
in
iret
dec
outsl
adc
shll
aam
jp
sbb
or
aaa
mov
cmp
stc
pop
push
addr16
pop
cli
pop
andl
pop
jmp
push
inc
xchg
pop
repz
inc
mov
sub
pop
push
jp
std
push
pop
lods
jl
add
mov
push
lods
pop
adc
xor
add
adc
aaa
mov
out
sarb
pop
rorb
out
adcb
inc
inc
adc
push
pop
push
iret
xchg
mov
ds
jo
and
xor
fiaddl
lret
xor
loope
sbb
sub
add
int3
sub
and
js
cmp
pop
adc
xchg
mov
shlb
xchg
dec
inc
jbe
xor
faddl
jb
push
into
inc
adc
xor
add
out
fistps
jp
outsl
cli
jge
push
gs
ret
add
out
lock
cmpsl
xlat
inc
and
jecxz
jmp
adc
jecxz
jmp
adc
fcoml
pop
jmp
cmc
ror
sahf
sbb
adc
stc
enter
push
cmp
mov
daa
imul
ja
mov
cmp
pop
adc
mov
xchg
es
pop
xchg
stc
inc
mov
loop
insl
imul
dec
mov
mov
cli
pop
mov
push
sub
roll
shrl
dec
xchg
sahf
inc
or
xchg
fyl2x
ficoml
scas
out
pop
jno
cmc
test
dec
cmpl
add
jo
into
push
sbb
xlat
in
pop
push
ds
add
inc
test
in
sbb
pushf
jb
xor
fwait
xor
push
and
mov
movb
jg
test
out
jae
dec
mov
jecxz
test
push
mov
pop
mov
push
jecxz
ja
and
or
lds
sub
loope
or
imul
in
push
mov
les
sti
test
nop
nop
iret
inc
jl
in
inc
pop
jl
sub
fildll
jg
popl
xchg
movsb
cmc
jmp
leave
xorb
jne
mov
dec
sub
mov
cmpsb
inc
jl
cld
lds
xchg
xor
lret
add
and
lahf
cmpsb
out
rorl
arpl
fdivrs
cmpsb
push
jl
out
mov
add
sahf
repz
enter
call
inc
aam
loopne
lcall
rcr
loopne
rcrl
sbb
sub
std
jp
adc
push
cmp
inc
jl
fdivrs
into
add
loopne
add
lds
mov
loopne
xor
fstpt
add
add
add
mov
xor
cli
fistpll
je
in
dec
add
and
mov
jmp
shl
cmp
pop
pop
pop
mov
xchg
cwtl
mov
xor
add
imul
sahf
outsl
adc
or
call
out
arpl
ror
test
stos
sarl
aaa
jns
pop
mov
call
or
sub
pop
xchg
lods
sbb
pop
mov
cmp
sub
inc
fbstp
mov
gs
int3
mov
and
jae
pop
pop
add
outsl
dec
lods
imul
cwtl
dec
cmp
fcoml
jbe
fcmovnu
arpl
aad
cmp
incb
rorl
out
scas
dec
and
mov
cmp
and
loopne
cmpsl
mov
in
jp
mov
mov
nop
popa
lods
cld
je
dec
pop
jno
pop
cmp
jnp
je
xor
int
bound
dec
adc
add
jle
xchg
cli
out
jbe
js
cmp
out
and
cmp
mov
in
mov
mov
dec
push
jecxz,pn
pop
push
test
xchg
mov
or
sbb
mov
js
cld
mov
std
or
ret
jno
or
int3
inc
scas
xchg
mov
test
and
adc
cld
ret
jne
call
negb
ja
pop
ljmp
cmp
roll
in
call
and
movsl
aaa
push
cwtl
xchg
cmpsl
addl
sub
decb
cmp
clc
pushf
cs
subb
mov
and
inc
xor
sbb
adc
xor
jle
mov
push
popl
das
int
xchg
mov
fistl
add
cmp
fwait
inc
pop
inc
xchg
outsb
or
pop
mov
pcmpgtd
outsb
popa
pop
fildll
lds
scas
and
ds
pop
int
xchg
xlat
insl
andb
shl
xor
jnp
hlt
push
jge
outsb
cmp
arpl
sbb
in
add
adc
lods
sbb
jl
cmp
mov
gs
loope
jb
dec
shl
pop
lret
push
push
movsl
pop
cmpsb
cli
xor
pop
fldcw
cmp
test
mov
cmpb
dec
fsubrs
std
out
in
push
jle
inc
outsl
leave
push
inc
mov
clc
repnz
push
repz
add
pop
inc
jno
cwtl
pop
jmp
daa
imul
into
sbb
xor
scas
out
adc
rolb
xchg
push
add
or
and
outsb
xchg
sub
mov
xchg
mov
xor
or
loopne
push
mov
dec
pop
insl
mov
in
les
jae
cs
add
sbbb
imul
cmp
fldcw
cld
popa
pop
sub
mov
cmpsb
cmpsl
in
lret
cmp
mov
sub
stos
xor
lods
sbb
xchg
sub
cld
call
pop
xor
je
lcall
insb
outsb
imul
mov
fmuls
add
bound
cmc
test
imul
ds
inc
sbb
orb
xor
out
jle
ja
sub
in
sub
jg
nop
sbb
xor
aas
negb
mov
inc
into
repz
xchg
xor
push
and
dec
adc
js
outsl
out
mov
xchg
jmp
push
cmpsb
mov
nop
scas
outsb
sub
dec
inc
aam
sarl
dec
jmp
sub
mov
inc
in
cmp
insb
aaa
das
in
ret
scas
push
icebp
xor
je
fbstp
pop
repnz
jecxz
sub
cmp
int3
mov
mov
mov
hlt
filds
or
jne
xchg
dec
or
scas
scas
scas
and
push
lea
loopne
sbb
repnz
push
or
lods
notb
pop
leave
in
push
inc
enter
push
lods
xor
shlb
inc
adc
loopne
xchg
push
scas
sbb
push
mov
adc
and
sbb
pusha
sarl
push
lods
pusha
stos
push
imull
mov
fmull
fstps
sbb
jmp
movzbl
scas
popa
pop
push
idivb
sbb
fcomps
into
mov
add
cmpb
sarb
gs
cmp
mov
xchg
ss
lret
cmp
mov
cmp
pinsrw
inc
cld
stos
mov
jg
ss
out
push
jae
pop
and
dec
pop
movsb
andb
jns
adcb
xchg
xlat
mov
popf
rolb
add
icebp
and
jbe
fs
pop
add
scas
mov
mov
pop
stc
cmp
adc
inc
cwtl
jle
pushf
jmp
mov
mov
dec
add
hlt
or
mov
cmpsl
stos
inc
push
mov
mov
adc
pusha
mov
mov
cwtl
lock
pushf
das
popf
and
ret
test
into
xchg
mov
andl
cwtl
outsl
xchg
mov
cs
shrb
xchg
sub
mov
ret
in
xorb
add
js
sti
test
or
cld
pop
int3
jge
sbb
cmp
adc
ljmp
fsubrl
adc
mov
cmpsl
jge
mov
jae
cli
jnp
xchg
aam
mov
les
cmp
adc
jne
mov
mov
clc
addr16
cli
movsl
popa
xchg
mov
mov
outsl
sbb
mov
out
push
daa
jl
inc
into
mov
aad
jno
in
push
mov
or
mov
int3
push
push
ror
in
mov
into
dec
mov
mov
shrl
and
xchg
fdivl
aam
testb
inc
and
cmp
push
or
cmpsl
mov
add
nop
call
sub
push
stos
js
adc
das
in
cmp
push
call
or
aad
and
pop
ret
mov
in
xor
cmp
pushf
pusha
pusha
sar
sbb
mov
clc
sbb
xchg
icebp
lret
sub
pop
aad
scas
jmp
or
lods
inc
push
sbb
push
jbe
pop
divb
loopne
nop
jnp
imull
loop
shlb
mov
cmp
mov
xlat
imulb
mov
dec
push
les
xchg
stos
adc
lds
je
pop
cmpb
cmp
in
adc
or
adc
negl
std
sbb
sbb
push
iret
jg
mov
pop
mov
jle
xchg
push
pop
push
shlb
adc
fsubl
pop
mov
in
mov
leave
out
loopne
pop
dec
sbb
push
jae
inc
es
mov
xchg
sbb
dec
mov
and
or
sub
mov
mov
arpl
je
negb
shlb
in
xchg
xchg
test
fmul
ret
in
icebp
mov
addb
mov
xor
fs
fs
cmp
aaa
movsb
pop
push
popf
popa
lret
jbe
fwait
mov
lock
shll
sahf
popf
dec
sbb
sbb
mov
daa
sbb
push
pop
xlat
add
push
sbb
imul
icebp
call
xorb
mov
idivb
push
pop
mov
sti
dec
push
sbb
xchg
scas
pop
add
adc
jo
xchg
or
sbb
inc
sarb
in
sub
and
icebp
mov
cmp
adc
adc
mov
js
inc
test
ljmp
pop
push
mov
popa
lret
mov
push
mov
rcll
jbe
cmc
xchg
mov
push
or
pop
ja
sti
mov
cmpsb
dec
mov
out
pop
mov
into
fs
cli
rcrb
sub
je
in
out
cs
push
add
cltd
in
and
push
scas
add
addr16
jbe
call
xlat
dec
es
les
xor
lock
prefetch
fs
push
inc
mov
repz
pop
or
sub
daa
iret
adc
popa
mov
sahf
out
shr
dec
movsb
ljmp
cmp
into
scas
mov
sbb
cmp
pop
mov
mov
pop
mov
add
mov
pop
cltd
pop
mov
xchg
aam
mov
add
xchg
icebp
sub
mov
pop
add
daa
lods
gs
in
or
jg
fxam
add
jge
je
fs
sub
das
pop
and
pop
cmp
insl
shll
aam
add
mov
negl
xlat
dec
adcb
mov
movsb
and
pop
fsubs
and
pop
das
ljmp
xchg
pop
pop
push
jne
mov
pop
sbb
adc
dec
and
pop
mov
scas
lods
mov
dec
mov
lahf
xor
jnp
xchg
in
jbe
loopne
shll
out
lock
rcrl
outsl
cmp
or
fsubrp
sbb
pushf
mov
aaa
push
sub
jge
int3
stos
cmpl
addr16
xchg
rorl
imul
or
push
cli
jmp
int3
jl
inc
fdivl
test
sbb
ja
lds
daa
mov
sub
push
pop
or
xchg
mov
xchg
inc
decl
scas
das
shr
push
cmc
sub
retw
fisubrs
cmp
jbe
shrb
jle
cmp
pop
fildll
stos
pop
mov
sbb
jp
sar
mov
repz
dec
sub
dec
dec
adc
loope
mov
pop
gs
sbb
sarb
xlat
fldcw
int3
pop
or
fidivrl
js
push
mov
imul
lcall
lock
cs
pop
lret
add
xor
mov
sub
shll
xor
imull
mov
test
dec
add
stc
jno
imul
xor
cmc
cwtl
aas
pop
jecxz
mov
sbb
push
jp
xor
xor
pause
mov
sbb
sbb
sbb
xor
adcl
add
addl
and
push
shll
das
mov
or
fldenv
xchg
inc
movsl
cld
dec
outsb
pop
push
xchg
sbb
call
cmp
jg
dec
jmp
and
inc
int
in
sbb
sbb
inc
inc
fcoms
xor
and
es
in
daa
scas
mov
insb
in
add
jno
mov
std
jmp
cmp
sub
dec
cmp
rorl
jno
ja
std
adc
inc
and
iret
inc
imul
loopne
andb
rcrb
pop
mov
cli
arpl
sarl
mov
jbe
outsl
daa
adc
xchg
rolb
adc
fistps
sub
popa
dec
ja
aad
jle
cmp
add
dec
lock
popa
lcall
insb
dec
imul
stos
adc
push
js
popl
leave
or
out
lret
enter
adc
int3
loope
insb
or
or
in
jno
jae
inc
jmp
sahf
mov
add
mov
cwtl
outsl
and
int3
js
std
lock
add
imul
and
aad
rolb
push
pop
push
dec
xor
jno
sub
inc
out
jle
jnp
enter
fsubrs
pop
sub
fiaddl
subl
call
push
cmp
es
loop
jo
ret
adc
leave
and
test
xchg
ret
jl
xlat
loop
inc
ds
push
sub
xchg
push
adc
test
shrb
xchg
aam
xor
mov
loop
test
xchg
notl
fst
loop
loop
xor
daa
pop
cmp
aad
popa
iret
dec
loope
js
cmc
jns
jmp
fs
in
into
push
xchg
sub
add
outsb
push
lahf
or
add
xchg
js
in
adc
or
jnp
stos
scas
add
xchg
repz
jb
xchg
imul
mov
mov
jae
andb
push
outsb
adc
fistl
ror
out
adc
aaa
and
pop
adc
int
jecxz
repnz
jne
sbbl
sub
pushl
push
mov
fcmovnbe
shlb
mov
in
mov
scas
js
dec
xchg
mov
adc
test
lcall
das
aaa
leave
js
mov
dec
mov
xchg
jne
sbb
mov
sbb
aas
fwait
std
lods
arpl
stos
push
popa
adc
das
rcrl
pusha
push
fldl
outsb
loope
add
jns
push
mov
fsubs
pop
jns
in
mov
dec
scas
or
mov
aaa
fbstp
adc
cmp
mov
lds
ljmp
cwtl
sarb
pop
btc
inc
xor
stos
jp
cmp
repnz
call
jbe
mov
mov
mov
leave
pop
ss
movsl
cmp
pop
imul
or
pop
mov
or
inc
out
fldl
lds
out
test
cmp
loope
inc
mov
rcrb
and
sti
pop
sbb
mov
in
pushl
clc
pop
jle
aam
adc
xchg
rcl
xchg
cmp
jne
nop
sbb
out
or
sub
insl
and
je
aad
data16
adc
push
test
xchg
scas
jno
test
xchg
xor
jge
repz
mov
jle
js
fdivp
mov
xchg
adc
leave
cmp
ficoml
push
mov
popa
adcl
and
adc
dec
jbe
add
inc
jl
in
sub
add
and
mov
pop
sub
in
inc
ror
fwait
pop
mov
dec
in
insl
imul
xchg
pop
lcall
inc
pushf
jmp
in
inc
xor
xor
jp
pop
pop
popw
adc
fadd
cld
mov
fisttpl
cli
popfw
xor
pop
and
sub
add
fiadds
mov
lret
fiaddl
jmp
xchg
repz
shlb
cmp
dec
cmp
jmp
adc
or
mov
test
mov
enter
lea
pop
sbbl
xor
aad
pop
scas
test
and
adc
push
das
adc
or
cwtl
push
test
lcall
rcrl
push
add
mov
inc
imul
or
or
mov
pop
adc
xorb
adc
leave
or
mov
and
popa
adc
pop
sbb
imul
into
fimull
and
insb
dec
stos
xchg
imul
in
xchg
hlt
aaa
and
iret
push
lret
mov
xchg
shlb
adc
dec
jno
jecxz
in
jns
fwait
mov
into
mov
jecxz
scas
loop
lods
add
cmpsl
call
push
push
and
repz
in
cli
insb
mov
and
mov
shlb
fistpll
push
insb
shlb
jno
pop
add
lods
out
loop
cmc
cmp
enter
sbb
sbb
pop
fisttpl
inc
or
insl
pop
dec
or
xchg
data16
rorb
mov
lea
cmpsb
adc
sub
and
add
or
sub
pop
sbb
aad
addr16
andb
dec
sbb
cltd
aam
jb
cmp
pop
loope
mov
arpl
dec
jnp
aad
adc
adc
xor
repnz
mov
mov
mov
or
mov
jno
outsb
xchg
xor
jecxz
loopne
mov
ds
cmp
dec
lea
scas
loop
pop
in
xor
xchg
out
ljmp
les
pop
push
sti
mov
test
repnz
cmp
test
jl
in
adc
jp
jnp
xor
mov
mov
jg
lret
or
daa
outsb
mov
mov
or
lcall
ret
add
and
loopne
mov
leave
fwait
mov
bound
jp
cli
movsb
and
inc
push
jnp
push
shrl
loop
popa
push
jb
mov
inc
add
loope
mov
cs
or
and
xchg
xor
sub
addb
loope
in
inc
hlt
cmp
and
insb
cmp
ljmp
in
xor
sub
or
je
push
pop
rcll
xor
sahf
sbb
mov
dec
inc
les
and
xchg
popf
rolb
repz
mulb
jp
add
dec
cmpsb
sbb
mulb
pop
push
push
adc
dec
aaa
imul
xor
push
xchg
mov
test
gs
xorl
pop
js
sub
out
outsl
fisubs
sti
testb
mov
and
fwait
push
pushf
and
or
out
movb
or
insb
fucomp
mov
jb
out
out
fdivl
pusha
pop
jb
in
loop
lods
mov
inc
inc
sbb
add
fdivl
inc
arpl
xor
mov
lods
loopne
mov
xchg
icebp
leave
repz
pop
dec
fs
xor
and
cmp
push
repnz
xchg
das
sbb
jae
mov
int
dec
push
movsl
fdivp
sbb
sub
pop
xchg
xor
jnp
stos
and
lock
fwait
stos
and
sarl
mov
test
fdivr
sbbb
imul
jp
cmp
orl
pop
adc
fstp
inc
xchg
mov
shlb
xchg
push
xchg
sub
xchg
add
or
popa
pusha
dec
aaa
mov
inc
and
or
jge
scas
sub
stos
lock
ret
add
fwait
adc
lea
sub
ljmp
sub
loope
mov
js
dec
insb
repz
test
movhps
in
shlb
inc
out
dec
dec
mov
adcb
mov
loop
dec
cmp
mov
frstor
and
xchg
mov
mov
sbb
mov
clc
sub
adc
mov
ret
or
jp
adc
test
in
fistl
xor
and
in
mov
ljmp
mov
movsb
mov
add
jecxz,pn
pop
and
in
or
mov
xchg
xchg
adc
xchg
outsl
mov
add
sarl
inc
push
mov
pop
es
pop
repnz
or
xchg
sub
shrl
pop
pop
mov
adc
xor
iret
push
push
int3
mov
jne
mov
xchg
or
into
lods
sub
enter
mov
ret
jnp
xor
subb
cli
cmpb
and
or
push
xchg
sbb
pop
push
xor
pop
jp
push
aaa
lds
mov
shrl
sub
insb
jmp
mov
pop
cmp
mov
dec
sahf
out
xor
ds
cmc
out
int3
inc
mov
xor
sub
push
xchg
int3
aas
fcomps
cs
jg
rep
aas
dec
fstp
xor
jb
int
out
sbb
or
xor
inc
ss
and
fwait
je
sub
out
mov
aaa
xor
inc
mov
inc
pusha
xchg
cmp
pop
nop
das
mov
mov
fstl
out
jne
adcl
daa
test
cmp
adc
lcall
fisttpll
mov
jp
popf
add
insl
xor
rcll
shlb
scas
jecxz
aaa
insb
lods
jbe
sub
jle
mov
lods
xchg
in
mov
dec
pop
dec
sub
push
mov
ljmp
mov
int
xchg
or
push
scas
les
repnz
push
or
jp
add
fistps
xchg
jecxz
pop
cmp
cmp
enter
pop
pop
jmp
xchg
jno
pop
mov
stos
je
xchg
sbb
add
in
sbb
mov
or
lahf
cli
mov
adc
leave
or
in
cli
imul
pop
cmp
scas
xchg
sub
and
pop
pop
js
mov
imul
dec
out
stos
leave
in
das
imul
test
jecxz
pop
inc
or
movsl
push
nop
xchg
in
mov
pavgb
push
pop
insb
jmp
js
bound
in
pop
push
sub
dec
jmp
dec
call
cmp
mov
pop
jb
jecxz
fmull
out
mov
jae
mov
lods
stos
loop
dec
pop
pop
push
lea
pop
mov
push
stc
ret
fdivrp
adc
call
mov
xor
out
xchg
adc
inc
lret
cmpb
bound
je
sub
cmp
test
test
and
lret
scas
jp
cli
hlt
leave
mov
fiaddl
cmc
fwait
rol
push
push
bound
xor
push
xor
push
pop
fwait
xor
in
jp
in
xor
sbb
imul
int
inc
jns
jne
jle
pop
add
sub
in
es
js
xlat
repnz
xchg
lcall
decb
test
push
xor
out
repz
cmp
into
mull
outsl
imul
mov
bound
sub
xchg
test
or
sub
aaa
jo
leave
cmp
push
xchg
pop
xchg
addb
cwtl
ja
cmp
adc
mov
mov
movsb
mov
xchg
mov
mov
xchg
sbb
pop
and
jecxz
addr16
mov
shl
out
jge
xor
jns
je
enter
xlat
xchg
adc
insb
cmp
es
fcomps
add
mov
int
add
ss
outsb
jle
sub
sahf
pop
js
pop
mov
mov
and
xor
jae
outsl
loope
imul
outsb
pusha
sub
in
cmp
call
scas
cld
mov
frstor
sbbl
in
test
pop
xchg
jecxz
daa
gs
out
inc
lock
std
loope
inc
and
ret
cmpsb
scas
add
fiaddl
inc
mov
adc
mov
add
mov
jmp
add
push
cli
sbb
push
std
loope
iret
hlt
pop
dec
cmp
xchg
std
mov
repz
mov
inc
movsl
push
cmpsl
inc
out
mov
sbb
lods
insb
scas
out
inc
inc
adc
jns
sbb
adc
push
push
mov
or
in
imul
repz
dec
in
mov
dec
es
jbe
sbbb
shll
push
mov
test
test
push
cmp
lods
fdivrl
je,pn
out
lock
sub
sub
shll
test
out
mov
cmpxchg
mov
bnd
dec
in
pushf
fs
pop
arpl
sub
loope
xchg
jo
roll
jp
addl
pusha
xchg
sti
lret
shlb
push
ja
enter
out
rol
dec
xor
fwait
dec
fdivrp
and
out
and
imul
outsb
cmpsb
sub
pop
lret
in
inc
mov
decl
fwait
inc
lahf
mov
repnz
jno
or
mov
adcb
adc
in
mov
pusha
mov
jnp
mov
stos
outsl
sarl
inc
mov
mov
sub
stc
mov
outsl
push
push
cmpsl
fucomi
dec
jae
imul
xchg
sbb
pushf
in
adc
aam
lods
inc
popf
inc
arpl
sbb
xor
mov
push
js
jns
call
adc
movsl
and
mov
add
xor
stc
test
xor
call
jae
push
outsl
ja
gs
mov
and
icebp
dec
or
decl
mov
mov
push
adc
fistpll
sub
xchg
xor
xorb
jmp
add
in
je
mov
cltd
ljmp
adc
inc
pop
test
jge
push
pop
push
pushf
dec
xchg
cmp
fnstenv
mov
and
push
out
xor
add
mov
jg
adc
dec
inc
cmpsb
sub
mov
push
dec
inc
int
dec
mov
mov
pop
cmp
add
pop
and
decb
outsl
xor
cltd
mov
lret
cmp
jo
jg
mov
push
cmp
mov
cmp
out
roll
ljmp
inc
lods
mov
jmp
mov
pop
inc
sbb
mov
mov
push
inc
sbb
xchg
sub
fnstenv
addr16
repnz
mov
mov
mov
adc
mov
jne
int3
and
mov
fisubrl
cld
and
cltd
out
and
cmp
lds
mov
scas
sti
jl
jle
mov
daa
shll
push
mov
test
sub
pop
lcall
xchg
fidivrs
int3
mov
stos
outsb
mov
pop
mov
mov
jecxz
nop
sti
xchg
push
adc
cmp
in
mov
jo
cmovle
push
xchg
scas
inc
fdivl
mov
inc
iret
or
int
xchg
dec
mov
jge
notb
jecxz
xchg
lcall
mov
iret
fs
fdivrs
gs
push
dec
xchg
push
adc
xchg
dec
sub
popf
cmp
scas
shlb
push
fcompl
cld
aad
stos
and
mov
mov
push
sbb
into
shlb
adc
xchg
test
lea
dec
rorl
inc
cmpsb
pop
cmp
mov
cmp
cmp
pusha
xlat
js
add
inc
fstpt
into
and
enter
pop
es
int
scas
jnp
outsb
subb
gs
add
push
fbld
cs
lods
inc
add
jns
stos
imul
mov
pop
xchg
daa
push
and
and
das
ret
aad
shl
out
lods
adc
and
enter
cmpsb
pop
add
add
sbb
mov
insb
jb
rcrl
push
adc
mov
push
fcmove
enter
mov
jns
sub
movsl
mov
ret
scas
test
sub
rcl
ret
sbbl
jo
scas
repz
ret
cmp
shl
lret
mov
mov
out
outsl
inc
or
movsl
push
iret
push
xor
push
js
out
daa
push
jb
cmova
jle
xchg
inc
sbb
pop
inc
mov
movsl
ds
mov
ljmp
sbb
push
gs
xchg
sbb
pushl
xor
loopne
repz
fbstp
fistpl
add
push
test
and
inc
inc
lret
lea
jns
decl
lods
mov
pop
incb
xchg
mov
shll
ja
arpl
dec
sbb
add
fcoml
fwait
lods
mov
test
lret
lcall
cmp
les
xor
pop
pop
cmpsb
jg
push
xchg
mov
add
mov
repnz
add
pushf
and
inc
pop
push
mov
imul
or
inc
push
or
jbe
call
dec
scas
lret
repnz
push
sub
xchg
dec
jmp
cmpsl
adc
xor
shll
rep
push
cmc
adc
aam
je
inc
movsb
add
out
cmp
ljmp
icebp
enter
out
sub
imul
out
jno
push
icebp
xchg
fucom
jnp
mov
psubd
cmp
xor
shlb
xor
mov
scas
xchg
xlat
mov
sub
fucom
sbb
add
push
dec
nop
call
and
xor
cmpsl
js
inc
iret
cmp
push
addr16
push
lds
mov
roll
fcoms
xor
pop
mov
cmp
inc
sub
pop
mov
push
adc
pop
jmp
jns
lock
mov
ja
ja
imul
sub
or
mov
mov
shlb
xor
mov
sub
or
jmp
sarl
sbb
lahf
into
mov
cwtl
xchg
pop
out
loopne
mov
fs
jo
movsl
fucomi
pop
cmp
adc
mov
lods
pop
push
ret
mov
cmp
cwtl
imul
nop
cs
push
enter
sarl
adc
sub
adc
pop
lods
jnp
sbb
sub
adc
aad
push
je
push
cltd
je
pop
mov
iret
es
lds
popf
dec
sbb
push
scas
mov
adc
rcll
adc
int3
xchg
mov
mov
in
cmp
test
scas
pop
out
cs
ja
inc
push
mov
inc
pop
aaa
imul
jmp
daa
mov
out
cmp
cmp
aaa
test
xchg
jge
inc
add
cmpsb
push
rclb
adc
bound
xchg
push
sbb
xchg
test
imul
ret
xor
jge
lcall
iret
add
js
pop
mov
stos
sti
mov
iret
jl
xlat
enter
dec
mov
out
push
or
arpl
dec
mov
push
cwtl
push
or
mov
pusha
les
orl
fstpt
pusha
arpl
mov
or
mov
outsl
jmp
stc
cmp
aas
cmp
stc
cmp
mov
aaa
adc
pop
push
xchg
adc
nop
jnp
adc
ret
sub
data16
sti
cmp
add
xorb
sub
adc
mov
mov
or
pop
cmc
ljmp
sub
xchg
jo
mov
dec
cld
pushf
fs
fisubl
xchg
cmp
cmpsb
ljmp
mov
nop
fnstsw
ret
mov
push
aaa
add
pop
loopne
and
lods
repnz
paddusb
add
xor
lods
cmp
clc
jle
mov
inc
or
je
insl
inc
pushf
xor
cmp
jmp
push
inc
xorb
ds
mov
jmp
movsl
mov
icebp
ficoms
mov
sub
movsb
adc
repnz
jbe
aad
out
jb
cmpsl
push
mov
nop
cmpsb
lds
cmp
xor
or
xlat
ljmp
fwait
daa
mov
loope
repz
mov
and
mov
icebp
fs
leave
repz
arpl
fisubrs
ja
mov
orl
cmp
into
or
inc
mov
mov
mov
cmc
pop
pop
shrl
adc
mov
xlat
test
out
xor
push
daa
inc
adc
in
xchg
jns
push
pushf
push
xlat
cwtl
in
push
inc
jo
pop
iret
pop
fistpl
xchg
pop
sbb
add
pop
leave
hlt
mov
pop
rol
cmc
pcmpgtd
sbb
push
repnz
pop
lahf
jmp
int3
call
scas
mov
or
add
stos
mov
roll
cmpsb
insl
mov
inc
add
imul
or
push
imul
xchg
lea
mov
mov
adc
inc
cwtl
xchg
pop
aaa
je
and
cmp
sbb
push
cwtl
scas
mov
xchg
mov
pop
jno
leave
and
ja
and
mov
xor
stos
rolw
sahf
mov
sbb
loope
cmpb
cmp
add
inc
xchg
dec
mov
mov
and
fs
fadd
sbbl
out
pusha
jmp
add
xchg
cmp
mov
mov
mov
in
loop
adc
sub
pop
out
in
repnz
mov
adc
inc
fistpll
fstl
xchg
stos
fmull
in
out
push
pop
mov
dec
movsb
es
bound
add
popa
out
dec
les
adc
cmp
stc
or
jge
pop
xor
push
jmp
add
popf
xor
divb
lods
jbe
jl
out
fmuls
jmp
mov
arpl
out
cmp
ja
mov
insb
inc
cmc
or
in
push
sti
aad
mov
ret
out
lret
int
ss
sbb
clc
push
ja
fistpl
sub
inc
mov
test
incb
mov
fnstsw
fucomip
rorb
ljmp
add
in
fs
nop
ss
add
pop
or
sbb
xchg
mov
outsl
or
mov
adc
pop
in
fisttps
lahf
hlt
sub
scas
icebp
mov
cld
dec
mov
imul
jae
or
sub
leave
push
mov
sbb
xor
push
lock
dec
push
data16
xchg
adc
dec
mov
shlb
daa
bound
jae
adc
pop
pushf
inc
repnz
mov
mov
aam
mov
lods
aam
jo
mov
lcall
and
inc
in
xchg
add
movsb
jbe
pop
jmp
or
pop
push
es
xor
sub
stc
fnstcw
adc
shl
test
and
mov
and
adc
sub
fidivl
pop
adc
movsl
pop
lods
push
hlt
das
inc
out
cmpb
mov
jne
mov
xchg
ficoml
mov
int3
xor
jmp
arpl
add
leave
sub
xchg
jae
shl
dec
mov
mov
push
imul
popa
pop
xor
xchg
loop
rcrb
scas
dec
sub
jno
pop
neg
dec
fisubrl
cli
pushf
push
out
movlps
mov
pop
or
jle
inc
loope
sub
enter
xchg
adc
jnp
cmp
mov
cwtl
mov
add
fcompl
inc
in
push
cmpsl
and
cmp
int3
jns
mov
aas
jmp
hlt
ja
out
aam
mov
iret
int
stos
lcall
mov
adc
call
out
pop
hlt
jmp
outsb
add
add
inc
mov
std
stos
fnstenv
xchg
jg
push
xor
mov
and
push
sub
xchg
fadds
and
fdivl
push
nop
mov
add
repnz
insl
mov
sbbl
je
or
cmp
cmp
es
shr
pop
mov
rcr
pop
mov
cmc
stos
dec
cmp
mov
shr
out
icebp
jo
pop
jb
imul
pop
cmpl
pushl
nop
sub
outsb
dec
sbb
stos
orl
and
stos
mov
mov
imulb
sti
insl
push
jnp
or
cli
pop
test
pop
das
pop
cli
add
xchg
pop
cltd
lret
mov
aaa
and
leave
aaa
mov
mov
lcall
outsl
cwtl
loop
ss
jmp
pop
lods
mov
negb
es
in
mov
sbb
cltd
dec
push
rorb
in
push
dec
dec
and
arpl
cmp
lcall
cltd
jmp
insl
outsl
es
jmp
in
cmp
lcall
push
dec
mov
daa
cmp
jo
mov
iret
hlt
jne
test
stos
xchg
inc
or
mov
dec
loopne
pop
xchg
sbb
mov
shlb
or
jo
daa
xchg
add
pop
jmp
into
fidivrl
jae
mov
cltd
sub
push
adc
fldcw
jne
addb
fdivp
outsb
sub
push
lock
push
lock
cmpsb
xchg
rcl
pop
jo,pt
push
pop
xchg
fstpl
push
aad
test
int
mov
push
adc
jnp
pop
popa
iret
pop
sub
pop
les
mov
add
arpl
xchg
test
xor
sub
mov
fadd
lahf
cltd
lea
push
mov
cmpsb
add
lcall
scas
das
mov
xchg
daa
sbb
sbb
cli
fstl
mov
and
roll
in
sbb
push
enter
dec
and
or
iret
test
outsl
cld
or
push
sbb
mov
imul
aam
or
fwait
lret
addr16
aam
je
ret
bound
test
adc
or
inc
push
xchg
mov
into
sub
jmp
jge
mov
fwait
add
add
shrb
fsts
push
push
loope
add
popf
int3
pop
dec
cmp
lods
sbb
bound
rcl
jmp
imul
outsl
icebp
ds
insb
mov
xor
xor
mov
outsl
push
push
push
adcb
cmp
sub
nop
cmp
xlat
cltd
leave
dec
jge
pop
xchg
sti
aas
xor
fidivrl
sbb
fnstsw
int3
pop
sub
sub
test
inc
imul
or
or
xchg
pop
das
hlt
and
and
jge
cli
mov
clc
mov
adc
add
shll
in
cmp
xchg
or
cmp
xor
adc
pop
aam
cmp
pop
nop
xchg
xor
fildl
test
and
aas
adc
jno
push
bound
inc
lock
cli
adc
out
aas
insl
ficompl
jg
das
out
adc
mov
mov
cli
test
cmp
push
addl
fxch
and
xor
imul
outsb
sbb
push
jb
in
mov
into
adc
lods
leave
inc
inc
out
outsl
jno
push
shrl
and
clc
jge
jno
dec
addr16
shrl
xchg
pop
add
adc
in
fnstcw
mov
push
inc
insl
add
popa
ret
out
inc
xor
mov
lods
mov
mov
xor
ret
inc
repz
pushf
das
mov
int
pushf
xchg
pop
mov
xchg
sahf
outsb
aas
arpl
movsl
cli
sahf
dec
fwait
jno
xor
in
or
jl
scas
stc
mov
cwtl
xor
cld
sahf
loop
jmp
mov
mov
jg
pop
mov
loope
push
jns
loopne
push
gs
jbe
mov
pop
push
xchg
xlat
adc
inc
adc
mov
lods
xchg
jmp
cltd
movb
mov
xchg
adc
and
dec
inc
adc
out
pop
mov
sti
cwtl
dec
sbb
or
mov
sahf
or
pop
jmp
sub
scas
test
out
sbb
cmp
xchg
outsl
push
int
push
or
jge
cs
sbb
sub
test
mov
js
mov
shll
sbb
inc
imul
mov
scas
push
or
mov
cmp
xchg
leave
sbb
mov
add
push
lcall
mov
sbb
loop
into
dec
mov
xchg
push
pop
in
mov
sub
fnsave
andb
arpl
in
scas
cmpb
or
add
pop
lahf
into
add
sub
jl
adc
ljmp
test
lahf
pusha
sti
imul
fstl
mov
add
test
loopne
lahf
mov
jge
mov
sbb
mov
flds
xchg
stc
sbb
and
cltd
mov
mov
or
js
lds
enter
dec
xchg
das
sbbb
sbb
xor
push
divb
es
dec
or
repz
cmp
sub
dec
mov
mov
inc
insl
xchg
dec
xor
pop
sbb
push
into
lahf
les
sub
cmpsl
sub
lret
ja
pop
adcl
pop
sub
xor
bound
push
mov
ret
add
push
mov
push
rclb
cmpsl
loop
mov
push
call
ret
filds
loopne
dec
pop
int
push
mov
cmp
je
jle
xor
mov
inc
mov
test
push
enter
cli
mov
push
roll
aas
push
mov
push
mov
mov
jae
imul
xchg
loopne
push
std
xchg
sysret
loop
lods
mov
adc
ret
sub
cmp
das
insl
js
xchg
int3
pop
mov
cs
in
pop
sbb
lds
jo
mov
fsubl
popa
or
int
pop
ss
aas
cmp
push
das
subl
call
mov
mov
push
test
pop
jmp
cmpsl
neg
andb
add
sahf
aaa
dec
out
adc
inc
and
inc
or
mov
cs
jmp
xchg
fsubrl
js
addb
rcr
stos
or
in
cmpsl
lods
cmp
mov
insb
jl
and
jo
push
orl
mov
dec
mov
cwtl
int
mov
xlat
push
lret
testb
insl
ja
idivb
iret
and
inc
mov
movsl
pop
push
sti
mov
nop
mov
jnp
les
fisttpl
dec
xor
and
fcompl
jnp
ret
pop
and
hlt
push
or
adc
stos
in
cmpl
icebp
push
les
and
mov
jg
push
jp
imul
mov
mov
sahf
inc
fnstsw
dec
or
dec
loop
int
dec
inc
push
cld
shll
inc
in
xchg
sub
or
add
mov
clc
lret
test
or
inc
addl
inc
push
gs
jg
mov
outsb
push
insb
int
sbb
fisttpll
mov
fisttpl
bound
btc
fadds
or
jne
mov
mov
imul
insl
xor
mov
jle
or
test
cli
jecxz
mov
test
mov
xchg
lods
jbe
rorl
push
jb
div
or
inc
test
adc
push
inc
lds
mov
mov
in
es
imul
shrb
jecxz
and
mov
in
mov
insl
pusha
fsubrl
cmc
jo
and
fsubr
in
aas
bound
mov
movsb
xchg
stos
aam
out
mov
xchg
loope
imul
add
ljmp
stc
jp
pop
xchg
popf
push
leave
dec
mov
mov
sarl
movsb
lcall
out
or
lret
cmp
cmp
incl
and
popa
pop
pop
xchg
sbb
dec
jno
pop
and
aas
sub
movsb
or
xchg
mov
ss
mov
adc
lcall
rcll
shll
movsb
loopne
push
mov
mov
arpl
sub
xchg
xchg
pop
mov
aaa
sbb
mov
xadd
std
outsl
pop
je
xchg
neg
pop
scas
call
xchg
shlb
test
je
lock
rcll
daa
imul
mov
adc
sub
lcall
bound
loopne
mov
fiaddl
scas
xchg
xchg
fidivs
into
nop
addr16
pop
pop
xchg
lods
ljmp
mov
cmpsb
cmpsl
jecxz
mov
push
and
xor
jbe
insb
mov
jle
push
jmp
dec
mov
fldt
jge
xchg
push
ljmp
pop
sub
shlb
push
repnz
mov
jb
roll
lock
cmc
push
push
inc
push
sbb
mov
xor
adc
dec
das
push
fwait
cmpb
enter
mov
test
mov
xor
push
xor
cli
ljmp
jmp
xchg
inc
push
sbb
enter
jnp
pop
xor
dec
xor
ja
push
lods
inc
dec
jbe
stos
mov
jmp
cmc
shl
fnstenv
dec
fsts
out
rorl
insb
out
adc
or
movsb
jecxz
adc
shll
xchg
dec
push
daa
add
push
aad
pop
xor
call
mov
mov
in
push
pop
mov
push
jge
ror
fnstenv
ljmp
aaa
pusha
inc
out
sbb
mov
inc
lods
cmpb
push
popf
add
mov
add
inc
ss
in
std
int3
rcrb
mov
cmc
add
fwait
cmp
pop
in
mov
add
add
shl
dec
shlb
outsb
jo
sub
push
pop
movsl
out
ljmp
or
mov
sbb
xor
pop
xchg
cmp
lock
and
insl
cmp
push
mov
and
adc
fwait
test
sub
mov
jle
sub
jmp
cmp
jb
insl
shl
sbb
lock
leave
mov
mov
mov
sbb
aaa
mov
adc
cltd
filds
out
add
movsl
popf
in
mov
pop
fsubrl
insl
mov
sub
adc
in
dec
mov
cmp
nop
int
fcoml
ds
vpaddq
mov
add
jo
mov
add
lock
sbb
push
data16
cmp
stc
inc
xor
cltd
sbbb
cmc
enter
test
pop
std
out
sbb
lret
stos
xchg
or
jnp
daa
inc
push
movsl
adc
mov
cmpsb
lahf
or
cmpsl
bound
push
mov
aaa
cli
sub
nop
mov
pop
mov
inc
into
xchg
and
outsl
add
pop
sbb
call
jb
sbb
push
xor
cmp
push
adc
gs
pop
fadds
or
ja
stos
mov
into
push
mov
jp
and
mov
sub
leave
push
lcall
outsb
mov
int
arpl
stc
xchg
sub
lea
pop
scas
mov
cmp
pop
jno
mov
not
aas
lds
add
xchg
in
cmp
test
popf
jnp
sarb
sbb
inc
jns
lods
pop
out
pop
mov
mov
pop
repz
dec
jo,pt
cmp
cltd
aaa
andb
fidivrs
cld
inc
cmc
orb
fdivrl
add
fidivrl
stc
cli
jl
pop
add
jle
inc
or
loop
jns
ret
test
fwait
inc
jbe
inc
je
jb
mov
mov
cwtl
enter
mov
loope
mov
mov
movsl
push
jae
ja
push
cwtl
xor
add
hlt
cwtl
lcall
adc
lods
mov
xchg
mov
mov
fildll
in
jns
test
incl
imul
mov
and
shrl
cmpsb
pop
movl
xchg
mov
cmpsb
mov
fsubrs
sbb
addr16
add
sub
lret
in
add
int
xchg
sub
dec
dec
pushf
pop
sbb
and
fdivl
adc
sbb
cmp
shlb
cmp
jg
aam
xor
mov
repz
pop
inc
pusha
push
mov
pop
pop
cmp
jp
ja
arpl
sub
mov
ret
or
aaa
popa
adc
std
lock
or
movsl
std
add
sub
adc
enter
rolb
fbld
movsl
int
push
pop
mov
xchg
roll
adc
mov
rcrb
pop
or
pop
xchg
sti
push
lods
lods
add
xchg
das
add
aam
lods
loope
insb
popf
in
int3
mov
ret
std
push
scas
or
xorl
dec
cwtl
jmp
movsl
sub
mov
outsb
add
cmp
cmp
rorl
lret
pop
lds
sbb
rcrl
cltd
sbb
push
ss
es
jp
ret
cmp
stc
adc
mov
cmc
inc
pop
fdivrs
repnz
or
test
sub
pop
rolb
jmp
add
inc
js
inc
stos
and
test
jle
adcb
fisttpl
rcl
iret
aam
ljmp
dec
sti
fsts
adc
push
xchg
into
mov
out
fucom
lods
rcl
add
lcall
iret
repnz
test
xchg
sti
imul
push
pop
daa
lcall
xor
icebp
fildl
pop
out
cltd
aas
test
ljmp
mov
dec
aas
int3
cli
je
ret
mov
clc
xchg
mov
jae
or
gs
fs
cld
sub
stos
sub
stc
sub
ljmp
mov
jbe
ljmp
test
mov
xchg
sub
add
sbb
int
pushf
je
add
stc
mov
test
enter
push
les
ss
cmp
ds
xchg
mov
inc
mov
jl
hlt
jp
and
pop
sbb
repnz
ss
cltd
lea
hlt
xor
pop
jp
testl
jmp
mov
xor
or
test
add
mov
arpl
outsb
xchg
pop
xchg
addr16
enter
mov
mov
lds
pop
jns
cwtl
fbstp
adc
aaa
jns
pop
cli
and
mov
push
mov
fnsave
iret
movsb
xchg
insb
jge
dec
jbe
jo
cmp
jno
inc
in
and
jmp
xor
les
jne
icebp
push
lods
push
mov
lock
inc
cmp
jmp
or
cmp
sub
lods
fsubrs
and
cmpsb
ret
imul
fimull
xchg
mov
sbb
and
or
or
xchg
add
movsb
lret
repnz
xchg
cmovne
data16
subps
test
cmp
lock
aad
rclb
pop
arpl
cmpsl
cmpsb
ja
mov
mov
cwtl
push
mov
ss
repz
cld
cmp
and
push
pop
add
lds
js
jecxz
leave
int3
sbbb
sbb
scas
sub
sub
in
push
push
mov
xlat
mov
sub
push
push
int
and
push
loop
jl
fisubl
ljmp
push
test
jnp
jns
clc
pop
mov
dec
sti
cs
push
jp
lea
mov
dec
and
cmpsb
movsl
sahf
lds
sub
add
in
cld
es
jno
mov
out
fwait
outsb
inc
jl
sbb
jle
xlat
or
cmp
cmpsb
push
sbb
cmp
fldl
add
pop
loopne
cli
sub
mov
push
xchg
lahf
sub
fstps
leave
pushf
push
dec
or
sub
jl
icebp
test
mov
add
mov
and
adc
dec
test
and
or
addr16
out
and
cmpsb
pushf
pop
mov
dec
adc
inc
lock
sbb
mov
push
xor
ljmp
add
xchg
pusha
ret
pop
enter
xorb
scas
sub
cwtl
cmp
dec
dec
adc
aad
sbb
aad
mov
pop
mov
or
mov
mov
mov
gs
push
mov
dec
mov
sub
jae
cmp
repz
test
jmp
cli
rorb
stc
adc
daa
clc
gs
mov
adc
pop
or
cmp
sbb
vphadduwq
imul
inc
pusha
or
cmp
sbb
jae
and
inc
fwait
test
cltd
insb
dec
pop
jno
mov
add
out
pop
outsl
cmp
testl
sub
cmp
add
aaa
add
inc
in
hlt
icebp
sub
fwait
idivb
icebp
loope
loope
inc
mov
scas
mov
inc
xchg
mov
aad
sub
sbb
xlat
outsl
in
jp
aaa
add
fisubl
mov
mov
mov
mov
fucomp
mov
push
lea
or
push
pop
jle
cs
rcr
dec
push
ret
and
inc
xchg
xchg
xchg
xchg
mov
sub
mov
mov
dec
adc
shrb
mov
pop
lods
push
in
or
mov
xor
fildl
popf
test
dec
mov
xlat
mov
push
mov
stc
mov
int3
cmp
push
mov
lahf
stos
push
gs
jl
mov
outsb
pop
shll
adc
paddb
dec
out
in
add
ret
movsl
bound
test
loope
dec
mov
daa
push
dec
mov
scas
lcall
jno
jg
pop
dec
sti
push
push
jb
fadds
cmpsb
sahf
pop
hlt
jg
fcmovnu
xor
sbb
in
lods
in
and
mov
inc
pop
fxch
push
mov
sub
jge
xor
ja
sarb
fdivs
test
lods
or
mov
pop
iret
cld
clc
testl
cld
rclb
push
pushf
add
sbb
inc
mov
pop
movb
orl
add
sub
je
ret
mov
fs
incl
test
icebp
inc
hlt
inc
push
arpl
ja
jno
add
cli
data16
les
push
mov
lret
jg
ljmp
in
pushf
popa
jnp
js
arpl
cmp
sahf
adc
or
out
sub
jno
in
sub
mov
cmp
or
movsb
sbb
sbb
and
push
jno
push
call
or
aaa
loop
insb
jp
inc
push
clc
lahf
dec
dec
fcom
xchg
adc
mov
pop
mov
aam
mov
fsubr
dec
inc
inc
lea
clc
add
push
inc
and
push
mov
in
mov
adcl
xchg
jno
popf
fisttpll
jb
outsb
scas
xor
int
shll
ret
and
xor
jnp
pop
dec
inc
inc
ljmp
pusha
lret
imul
jmp
outsl
cmc
add
and
jg
scas
out
in
xchg
push
xchg
jae
test
adc
fwait
adc
pop
mov
adc
add
rorl
mov
in
inc
lret
mov
in
inc
popf
xchg
adc
fadd
into
ds
cmp
jae
pusha
cli
mov
or
fisttpll
fldt
and
je
hlt
add
mov
int
jg
and
mov
mov
jb
adc
sub
mov
fidivl
movsb
xor
inc
shl
fcomps
repnz
popf
dec
jecxz
mov
and
out
testb
inc
fadds
insb
ficomps
mov
out
gs
xchg
hlt
sbb
add
xchg
or
mov
into
mov
es
arpl
mov
lock
loopne
mov
rorb
mov
push
mov
push
dec
push
push
push
lods
cmp
jae
xor
mov
add
int
jo
jnp
decl
sbb
inc
add
mov
stos
jno
mov
ret
int
shlb
fwait
mov
mov
repnz
jns
rcll
add
xchg
ret
mov
lea
fcmovbe
or
shll
adc
fwait
repz
fstpt
or
popa
fdivr
mov
cmp
idiv
cmc
and
stos
or
pop
stos
mov
arpl
and
cmpsl
stos
scas
pushl
shll
push
inc
hlt
sti
adc
or
pop
sbb
mov
sub
fmull
push
mov
xor
sub
jl
idivb
clc
sbb
test
cwtl
je
sub
xchg
cli
pop
hlt
pop
hlt
ret
mov
cmp
jb
push
cwtl
out
xchg
lods
ret
cmp
divb
dec
xor
sahf
cltd
push
aad
daa
leave
add
cs
jle
cwtl
push
adc
rcrl
mov
lea
sbbl
std
sub
push
fcoms
xor
jg
enter
or
sahf
xor
call
imul
loope
dec
cs
or
inc
repz
cmc
xor
out
js
in
fimull
add
add
lock
out
insb
nop
nop
mov
mov
nop
ret
push
mov
xchg
fistps
pusha
scas
mov
mov
sub
loop
out
xor
fnstsw
outsb
xorb
mov
add
scas
int3
sub
dec
inc
loop
push
sub
adcl
jb
fmul
inc
and
jp
out
xchg
mov
inc
sets
mov
jmp
rol
outsl
adc
lods
mov
cmp
cmpsb
sahf
mov
cs
aas
cmp
scas
and
jl
xchg
test
bound
out
xor
pop
fldenv
cwtl
int3
out
dec
out
stos
xchg
mov
add
xchg
shlb
es
je
arpl
dec
and
imul
repz
mov
shl
dec
push
push
data16
push
inc
sub
mov
jle
xchg
sub
outsb
inc
inc
jnp
loope
loope
decl
and
das
add
or
jo
divl
inc
cmp
mov
mov
or
mov
insb
dec
and
xor
fsts
xor
cmp
add
imul
imul
es
popa
mov
sbb
pop
mov
sub
pusha
aas
lea
aad
movsl
fs
mov
sub
addb
xchg
mov
pop
je
adc
clc
int
dec
cmpsb
mov
rol
mov
add
xchg
in
xchg
push
and
jmp
les
and
pop
stc
jnp
cltd
adc
ficoml
xor
test
roll
lcall
mov
ret
mov
sahf
sub
sbb
nop
sub
or
push
mov
mov
insb
popa
pop
les
lods
jmp
es
orb
jl
popw
or
insb
xchg
pop
xchg
call
popf
sbb
xchg
das
cmp
lret
push
ficomps
pusha
in
cld
sarl
test
inc
add
popf
mov
int
cmp
outsb
add
mov
push
push
popf
jg
mov
add
dec
test
hlt
push
xor
xchg
sub
mov
xchg
pop
je
mov
push
shlb
mov
out
and
mov
addr16
test
int
aaa
push
sbb
vfrczss
test
jg
loopne
xor
mov
test
push
cmp
xor
xchg
mov
or
cltd
cmp
jb
leave
or
iret
call
or
sbb
lcall
jne
gs
je
stos
cld
mov
mov
cwtl
xor
inc
imul
pop
ljmp
sub
enter
xor
mov
je
bnd
pop
insl
outsb
mov
movsb
inc
push
mov
mov
and
jp
fs
dec
jl
sahf
mov
andb
xchg
xchg
fdivs
iret
clc
or
rcl
lock
les
adc
stos
clc
sbb
adc
fldz
cmc
jle
outsb
insl
ja
ds
out
jno
dec
cmp
cmc
xchg
hlt
pop
popa
push
les
jo
testl
and
xor
mov
jnp
dec
adc
jmp
dec
aam
xchg
movsb
mov
inc
xchg
push
cli
rcrb
mov
test
push
rorl
je
xchg
mov
jno
lods
dec
xor
push
mov
icebp
cmpsl
fistps
movsl
xchg
fs
adc
xchg
cmp
in
test
add
sbb
pushf
inc
mov
cmp
pop
stos
idiv
loop
add
pop
pop
rcrb
incb
adc
cmp
or
mov
fwait
push
nop
push
cld
outsl
add
add
cld
movsl
scas
bound
subl
ja
mov
fstps
jne
mov
je
mov
cli
fwait
xor
cmp
insl
fdivl
mov
jmp
fcoms
dec
data16
jmp
inc
pop
adc
pusha
stos
loopne
or
adc
popf
ret
sbb
sahf
test
lahf
xlat
xor
sbb
xor
xor
sub
sbb
lahf
rclb
inc
jmp
rolb
pop
add
fldt
lcall
or
fdivrl
or
shl
mov
mov
or
decl
jae
out
xchg
add
fwait
pop
sub
sbb
adc
mov
xchg
cmp
xadd
mov
mov
mov
add
rcll
into
xchg
fidivs
dec
bound
sub
outsb
imul
insl
pushf
aam
push
iret
cmp
cmp
sbb
or
cmc
mov
mulb
mov
jo
add
adc
jns
movsl
mov
xchg
jmp
ficompl
add
jno
mov
and
and
jmp
lcall
clc
in
cmc
jae
in
loop
mov
push
into
mov
fcos
daa
ja
mov
dec
xchg
ljmp
bound
sbb
cld
test
jl
sti
push
pushf
mov
cwtl
mov
int3
sub
push
add
scas
imul
lds
push
loopne
inc
out
mov
jecxz
pop
stos
jbe
repnz
mov
mov
sub
adc
fldt
inc
jae
mov
mov
dec
add
xchg
and
jns
out
movsl
xchg
push
xor
in
insb
outsl
rol
scas
add
push
sbb
jmp
xchg
adc
les
jl
jecxz
fdivs
nop
imul
loope
mov
dec
mov
imul
sbb
cmc
daa
xchg
lods
scas
cli
cmp
and
orl
push
inc
adc
push
jle
loope
mov
fcmovb
mov
pushl
scas
test
cmp
mov
cmp
cmp
imul
jns
mov
outsb
xor
mov
lock
lock
addb
icebp
xchg
add
xchg
popf
xor
pusha
xlat
adc
jge
mov
ret
mov
cs
push
xor
test
pop
popf
loop
loope
data16
cmpps
ficomps
ret
xchg
xchg
hlt
sahf
dec
loopne
xorb
cmp
or
xchg
xor
or
add
sub
cwtl
mov
in
insl
adc
inc
mov
adc
into
push
and
dec
arpl
pop
rorl
sbb
sbb
xor
jo
sub
popf
cmp
jno
push
cmp
out
cmp
mov
push
sbb
fnstcw
sub
cltd
mov
push
xchg
loope
or
cld
nop
mov
inc
stc
mov
sub
mov
aam
inc
or
mov
in
push
sbb
lods
xchg
lea
ds
test
jbe
lock
jno
sbb
sbb
test
aam
sbb
shll
jnp
dec
or
inc
adc
stc
mov
ljmp
icebp
jno
arpl
mov
aas
pusha
mov
vminss
inc
xlat
out
or
adc
insl
add
cs
imul
in
add
sbb
mov
pop
add
loope
loopne
add
mov
jge
out
dec
cmp
out
lahf
movsb
jle
inc
adcl
push
lahf
mov
in
scas
gs
fwait
ret
mov
pushf
dec
shr
and
dec
push
test
jo
negb
cmp
rcr
push
xor
cmp
push
mov
inc
divb
mov
fdivp
sbb
pop
enter
and
fldl
xchg
iret
mov
push
jns
hlt
sbb
jle
loope
stc
daa
jp
xchg
jb
ljmp
loope
out
mov
lock
das
dec
test
or
mov
aam
sbb
cmpsb
mov
ljmp
rol
lea
cltd
mov
push
idivl
sarl
insl
les
leave
sbb
pop
or
mov
cld
aam
sbb
mov
scas
or
mov
jae
fidivrs
outsb
push
filds
xor
push
mov
xor
icebp
std
pushf
push
ljmp
and
xchg
scas
xchg
push
and
mov
dec
cmp
sub
fcmovnu
jge
lods
pop
imul
push
cmp
adc
insb
movsb
mov
mov
sarl
push
rcrb
int
notl
sbb
movsl
lahf
push
loop
dec
fistps
sbb
test
jg
js
or
lods
or
out
jl
dec
sbb
test
ds
sbb
jg
mov
inc
push
mov
sub
mov
or
mov
push
repnz
push
lods
xchg
jnp
inc
fsubs
fcoms
les
mov
movsb
mov
cmp
insl
lret
push
out
lods
mov
ret
gs
ficompl
das
adc
inc
cmpl
leave
mov
cwtl
xchg
sub
xchg
jae
jae
scas
pop
xor
mov
fiaddl
xchg
dec
mov
in
push
lea
jo
popa
scas
jb
lods
gs
adc
sti
mov
push
or
nop
and
dec
ds
es
int
dec
aad
jmp
out
adcl
or
sbb
push
lods
xchg
mov
mov
xor
adc
push
lahf
imul
mov
pushf
mov
repnz
jmp
ja
mov
mov
add
ja
in
and
jge
shl
jno
dec
dec
push
or
int
and
les
inc
mov
decl
pop
push
call
enter
mov
sub
mov
push
xchg
fisttpll
sbbl
jge
cmp
outsb
sub
mov
fs
mov
loopne
dec
pusha
adc
out
cmp
and
pop
popf
dec
jle
cmc
push
inc
stos
xchg
in
dec
iret
popf
sub
inc
or
or
inc
xor
insl
or
scas
mov
and
xchg
cltd
sub
mov
pop
xchg
stos
mov
mov
xor
les
loope
aad
das
xlat
xor
lods
mov
pop
xor
pop
jae
popa
sub
jb
daa
stos
add
add
inc
sub
stos
jmp
push
pop
adc
xor
and
pop
mov
xor
jb
in
andl
xor
ror
jmp
sahf
pusha
cvtps2pi
pop
movsl
stc
push
mov
fistps
fildl
sbb
rolb
ds
xchg
push
fidivrl
mov
push
popf
adc
jns
stos
cmpw
xchg
ret
fs
jg
xor
cwtl
mov
push
mov
sbb
cltd
iret
fldenv
and
rclb
pop
xchg
push
stos
inc
jge
jmp
das
lcall
mov
test
out
int
dec
mov
pop
cmp
iret
mov
xchg
jp
mov
ja
push
fsubr
xor
aas
push
popf
xorl
scas
mov
daa
mov
inc
mov
mov
dec
hlt
lods
xchg
cmp
fidivrs
imul
test
loop
sub
idiv
jp
dec
je
jl
lock
adc
mov
fs
push
dec
std
sbb
push
inc
fcomp
stos
xor
jae
cwtl
sahf
scas
inc
cmp
into
and
and
pop
test
out
jne
lret
lret
adc
jae
repz
jmp
fimull
fs
pop
nop
lcall
nop
jns
pop
lea
lock
cltd
push
xchg
mov
jg
mov
sahf
ljmp
jb
les
sbb
ljmp
pop
shrl
mov
jmp
jmp
or
mov
inc
stos
jne
divb
fdivrl
std
shrl
popf
mov
out
lods
stos
cvtpi2ps
xor
cmpb
out
cmp
pop
imul
add
lret
shrd
loope
sahf
enter
cmpb
imul
mov
jne
push
xor
les
pop
fnstcw
loope
jns
cmc
add
pushfw
test
sbb
or
sub
in
dec
clc
jbe
mov
sti
mov
out
test
movsb
dec
loope
and
out
add
dec
ret
xchg
std
sbb
or
or
cmp
mov
movsl
jbe
pop
cmpl
mov
sub
shr
jg
hlt
bound
cld
mov
cli
into
push
mov
lea
iret
dec
xor
inc
vmwrite
stc
stc
dec
aas
lods
cmp
sti
es
and
inc
jecxz
inc
dec
test
add
mov
jmp
fiadds
stc
add
mov
cmc
popf
hlt
sub
pop
dec
loop
xchg
mov
xchg
sbb
xchg
mov
mov
lods
xlat
jae
pusha
ret
movsl
pusha
into
lods
outsl
mov
lds
daa
cmp
rol
notl
pop
pop
test
pop
mov
lods
mov
xchg
xchg
imulb
test
push
add
clc
cmpsl
xchg
shrl
rolb
jg
sbb
pusha
mov
jnp
pushf
dec
or
leave
or
aas
dec
enter
pop
ljmp
inc
int3
out
insl
mov
movsl
dec
mov
push
inc
mov
mov
mov
in
arpl
pop
in
mov
dec
movsb
push
daa
vpcmpgtb
cwtl
pop
mov
and
dec
ljmp
out
lea
sbb
adc
leave
fisttpll
jle
mov
mov
jecxz
sbb
cmp
sub
test
ss
sub
sahf
pop
pop
js
mov
movl
push
adc
pop
mov
mov
in
cli
xchg
xchg
lods
lret
jbe
or
jmp
mov
dec
cmpsb
cwtl
inc
test
pop
cltd
orl
bound
push
xchg
mov
popf
cmp
sub
rorb
in
arpl
loopne
or
xchg
aaa
mov
mov
inc
jns
adc
xor
jno
push
inc
lea
sub
out
ret
mov
sbb
shll
xchg
icebp
xor
fidivrl
iret
mov
xchg
push
and
push
jo
fwait
cmp
in
out
adc
jmp
lcall
scas
idiv
sti
neg
xchg
sbb
out
jp
mov
push
xchg
adc
inc
mov
in
paddd
xchg
push
dec
add
and
sarb
jmp
loope
pushf
or
or
out
fdivrl
mov
lcall
dec
rcrl
pop
call
dec
pop
xchg
xchg
dec
pop
xchg
int3
out
fisubl
lods
xor
xor
sbb
aad
mov
mov
ret
inc
sub
shlb
dec
das
mov
fucomip
xchg
pop
imul
test
adc
xor
icebp
fs
mov
xor
sub
jmp
sbb
call
ljmp
lcall
adc
cmpsl
mov
mov
sbb
ret
mov
and
jbe
lea
xchg
jecxz
xchg
mov
in
enter
pop
lock
jno
test
inc
out
pop
or
inc
rol
push
xor
xor
pop
loope
fistps
xchg
push
xchg
xchg
adc
aad
lcall
aad
pop
fcmovnb
lret
pop
cwtl
sub
jl
adc
jno
pop
mov
jb
add
add
sbb
adc
add
sti
sbb
pop
jl
xor
adc
or
shr
xchg
stos
out
sub
sbb
sahf
mov
aad
out
hlt
xor
pop
out
mov
sub
mov
add
jg
insb
rorl
or
jb
lods
mov
xor
into
push
xchg
xor
push
pop
inc
mov
iret
aad
inc
mov
stos
fwait
pop
inc
movsb
xchg
push
jmp
mov
mov
imul
sub
push
mov
test
push
jb
pop
dec
pop
adc
scas
mov
jmp
cmp
mov
shr
pop
sub
sbb
jmp
add
sub
decl
int3
adc
xchg
push
and
add
jmp
or
fdivrl
sar
push
aad
fs
add
jnp
sbb
cmpsb
movsl
test
test
testl
icebp
and
hlt
xor
adc
jbe
sbb
sbb
dec
xchg
pop
pop
or
pushf
stos
add
mov
shlb
mov
dec
jnp
jno
repz
lret
pop
sbb
smsw
enter
add
mov
dec
ja
fnsave
ret
and
out
loopne
and
test
jmp
pop
fisubrl
jle
jl
xor
jns
mov
jae
out
movsl
push
jle
mov
fbstp
dec
gs
popa
xchg
push
stc
hlt
mov
jno
sub
aad
mov
mov
in
sbb
jecxz
sbb
cs
stc
sub
test
pop
push
stc
popf
dec
icebp
push
fldenv
mov
outsl
je
movsl
push
sbb
or
cmc
scas
or
es
sub
scas
pop
aam
cmp
insb
xor
dec
cmp
popl
nop
push
inc
push
lahf
ret
sarl
mov
xchg
cmp
int
addb
or
aam
pushf
cltd
and
movsb
push
rcrb
mov
rorb
add
mov
packssdw
and
outsb
fwait
xchg
xor
jns
dec
movl
add
mov
je
pop
mov
fsubs
xor
lcall
jno
jmp
nop
repz
sub
jecxz
push
rcr
push
out
loope
shlb
jns
daa
cs
xchg
jecxz
mov
ficoml
mov
cmp
xchg
push
xchg
adc
aas
es
pushf
ret
adc
sub
push
cld
push
rorl
jp
pop
stc
mov
cmpsl
xor
lods
add
fsubrl
hlt
bound
and
pusha
vmread
push
jns
ret
cmpsl
rolb
fsubrp
add
int3
push
int
or
push
outsb
loope
ja
idivb
test
loope
stos
mov
in
and
popf
jg
adc
xchg
in
jmp
xchg
lods
and
cmp
addr16
jge
lret
fidivrl
lret
pop
fisubs
cmp
xchg
sub
inc
repnz
aas
or
in
int
test
ss
dec
enter
stos
sub
or
out
pop
mov
dec
pop
mov
add
push
mov
lods
push
popa
mov
mov
push
test
adc
fmulp
xor
test
jg
xor
es
in
mov
and
fwait
mov
xlat
jnp
sub
lods
loopne
in
sarl
out
push
call
fdivrl
cmp
leave
fisttps
stc
sbb
in
or
push
stc
mov
mov
sbb
mov
mov
lahf
out
cmpsb
fbstp
cs
loop
cmp
and
jge
rorl
inc
hlt
dec
and
mov
dec
and
cs
cmp
mov
icebp
div
dec
iret
xor
sub
inc
lcall
gs
repnz
cs
jae
nop
add
mov
ss
pop
pop
and
inc
fidivrl
lock
mov
add
mov
mov
fdivrp
pop
inc
push
lahf
push
mov
lcall
xchg
pop
and
cmp
movsl
mov
outsb
fisubl
imul
or
push
lds
cmpl
jge
iret
dec
cmp
insb
dec
push
jmp
into
insl
fdivl
loop
pop
add
dec
stos
aam
pop
std
imulb
pop
rcrl
xlat
clc
pop
fisttpll
mov
cs
imul
or
out
pop
imul
cmp
add
sti
rcll
addr16
shl
mov
test
insb
jge
hlt
sarb
jg
add
sub
pop
div
stc
cmc
add
adc
jnp
popa
stos
aaa
mov
gs
sub
sarl
jg
addr16
mov
test
icebp
mov
std
jmp
sub
jg
sti
iret
clc
mov
and
ret
adc
sbb
mov
mov
and
mov
test
push
xchg
int3
push
js
mov
dec
xchg
jo,pt
test
popf
fidivl
rorl
pop
or
sar
int
lcall
inc
cmp
jmp
push
or
ret
add
dec
cmp
cmc
or
mov
loope
and
cmp
or
and
sub
mov
pop
loop
aad
movsl
cmp
fsubrl
push
pop
repz
bound
enter
test
and
add
out
loope
scas
cmp
push
push
mov
cmp
loop
jnp
out
lock
fwait
pop
arpl
xor
enter
cmp
fsubrs
pop
lcall
push
sub
jno,pt
imul
dec
or
mov
lahf
mov
movsl
or
pop
jmp
insb
addr16
push
out
pop
add
add
idivl
int3
fisubrs
das
fisubs
rcl
pushf
loope
movsl
imul
shrb
pop
int3
inc
lret
xchg
push
sti
repnz
mov
mov
cltd
xchg
push
fsubrl
imull
xor
dec
in
cmp
call
adc
cwtl
out
xlat
fiadds
es
sub
add
add
jge
inc
ret
stos
jmp
sti
ficoms
adc
or
pusha
inc
outsl
stos
ret
cmp
xchg
and
xor
ja
loop
adc
mov
scas
in
xor
xchg
aam
fstpt
lahf
data16
inc
addl
lret
cmp
mov
lahf
add
pop
or
fistl
scas
jbe
and
push
ss
mov
sub
jnp
mov
mov
xorl
repnz
mov
xchg
cmc
cld
push
sbb
outsb
insb
jl
inc
cli
and
ds
adc
xor
and
pushf
scas
push
andl
movsb
bound
jg
or
loope
aaa
call
push
lods
jnp
cmp
mov
aad
inc
lods
push
imul
sub
push
jbe
stos
loop
ljmp
inc
jae
sbb
inc
outsb
enter
cwtl
cmpsl
mov
mov
push
lret
xchg
inc
ljmp
enter
and
dec
mov
data16
or
test
pop
js
das
aas
das
jo
sub
out
jne
or
aaa
cmp
outsb
test
sbb
in
icebp
iret
test
stc
loopne
or
in
or
xchg
push
inc
mov
mov
nop
lds
lcall
adc
in
xor
pop
lea
cmp
lock
push
mov
or
insl
push
aad
addr16
cmp
dec
push
push
xchg
cmpsb
push
add
out
incl
cmp
inc
rcrb
jnp
loopne
dec
pop
test
jno
xchg
testl
adc
mov
popa
into
scas
push
jmp
scas
mov
jns
call
jecxz
fs
jecxz
push
pop
jns
jo
inc
into
clc
gs
inc
mov
aaa
leave
daa
addb
andl
pop
xor
in
mov
mov
mov
js
inc
movsb
adc
lds
cld
xor
add
leave
lods
sub
xor
es
cmp
idivb
inc
int3
dec
mov
xor
cltd
pop
push
jae
cmp
xlat
lret
daa
jne
jmp
or
dec
inc
iret
nop
lahf
aam
je
je
lods
data16
in
les
xchg
add
xchg
je
push
mov
test
jmp
sbb
xor
adc
add
adc
adc
inc
sbb
ds
lret
add
add
sub
jb
rolb
insb
ljmp
xorl
lcall
push
adc
into
jp
inc
mov
popa
fidivrl
sti
dec
dec
mov
push
or
dec
inc
sub
das
xchg
xor
arpl
loop
mov
mov
mov
push
jne
iret
das
sbb
ret
mov
movsb
adc
mov
add
dec
push
inc
cmp
mov
jge
movsl
sbbb
imul
imul
cltd
jno
jno
insb
or
mov
mov
and
xor
out
clc
adc
lds
popf
adc
test
insb
cmp
into
mov
pop
xchg
push
lcall
jp
insb
cmp
pop
xor
sbb
sub
push
push
into
xorb
jae
les
jno
fcoms
push
mov
out
repz
std
pop
aad
push
pop
cwtl
push
adc
sub
sub
loop
das
xchg
lret
sbb
dec
popa
mov
add
ja
popa
dec
nop
mov
pop
ds
cmp
sbb
push
xchg
cmp
gs
add
adc
in
adc
mov
das
adc
cmpsb
aaa
sbb
fstps
out
dec
sbb
pop
xchg
call
mov
lock
fs
shll
scas
xor
test
xchg
adc
hlt
cmp
adc
mov
adc
scas
outsl
add
lret
test
in
push
mov
int3
jle
adc
fisttpl
cmp
loopne
addr16
and
lods
lods
test
pop
dec
push
mov
inc
pop
ds
adcb
adc
pop
mov
pop
xchg
scas
stos
iret
lods
dec
aam
les
notb
mov
jne
pop
out
imul
in
jecxz
adc
jbe
push
cmc
cs
fwait
jnp
jle
or
adc
and
jmp
mov
mov
jae
sbb
mov
test
jae
cld
sub
cwtl
pop
enter
mov
and
or
adc
pop
xor
mov
xchg
xor
jb
int
out
int3
or
fcomi
mov
inc
gs
pop
inc
xchg
mov
leave
mov
dec
xorl
cld
ljmp
adc
sti
and
mov
mov
xchg
mov
jb
lods
fdivrl
out
mov
xor
fistps
outsb
jo
cli
data16
imul
aad
cld
into
std
andl
adc
xor
push
cli
and
xor
sbb
aad
cltd
sahf
inc
roll
rcll
inc
clc
adc
scas
or
dec
loope
sub
jnp
or
aam
lds
add
stc
int
iret
pop
xlat
push
adc
pushf
test
mov
or
aaa
mov
pop
into
mov
cltd
sbb
cmp
mov
sub
shr
xor
repz
imul
xchg
jp
out
jg
sbb
pop
xchg
mov
add
and
or
xchg
pop
call
xchg
pop
mov
rcrl
imul
push
or
push
js
popa
add
jl
xor
fst
pop
hlt
stc
iret
mov
mov
jecxz
xor
test
sub
mov
push
dec
inc
mov
mov
ud0
notl
insl
mov
lds
pop
add
add
xchg
jae
dec
orb
sbb
push
fs
pop
jmp
ret
add
xchg
cs
push
lods
or
rclb
cmp
dec
dec
and
fs
pop
push
aam
std
xchg
mov
stos
jae
dec
lahf
pop
adc
push
xor
pop
pop
pop
mov
shlb
xchg
das
jne
mov
cltd
popf
in
xchg
xchg
pop
xlat
in
xchg
cmpsb
sahf
data16
xchg
mov
sub
sub
leave
sbb
mov
inc
cmp
hlt
adc
push
mov
mov
mov
idivl
sbb
mov
pushf
adc
sub
mov
xchg
imul
adcl
push
lds
cmp
cmc
and
rcl
xchg
in
mov
inc
cs
insb
data16
divb
cmp
mov
dec
mov
mov
mov
pop
hlt
in
jbe
jb
push
mov
lods
mov
or
pop
inc
jo
popl
pushf
mov
mov
shrl
test
sub
loop
and
pop
xchg
sub
add
mov
femms
aas
data16
shl
add
inc
fldcw
or
pop
sub
subl
stc
ja
cwtl
fs
in
pop
subl
js
push
xor
jecxz
cmp
dec
mov
xor
ss
cmpsb
sbb
sbb
sub
inc
jno
test
mov
mov
or
add
aas
les
lretw
rorl
push
push
jl
sti
jp
out
fldcw
pushf
in
cmc
in
add
or
and
iret
fwait
mov
fdivl
xchg
fnstcw
into
insb
imul
pusha
dec
cmp
or
std
repnz
cltd
cmp
jno
add
shlb
out
int
push
mov
push
into
cwtl
mov
lret
dec
incb
fiadds
hlt
push
pop
es
push
xor
dec
xchg
jnp
lret
lret
lcall
out
les
enter
es
jae
push
jge
and
daa
clc
xor
sti
mov
pmulhw
push
jbe
mov
fdivr
mov
push
mov
and
dec
xchg
into
into
dec
scas
pop
xorl
popf
sti
mov
shll
mov
xor
aaa
into
or
cmp
adc
popa
sbb
pop
bound
cmpsl
cwtl
iret
cmpsb
jmp
dec
std
jo
add
call
orb
mov
pusha
stos
fwait
addr16
ss
mov
hlt
mov
clc
ret
jnp
mov
gs
push
mov
ficoml
out
inc
repnz
pop
pop
xchg
sbb
cmc
mov
addl
nop
addl
mov
mov
add
jmp
cld
mov
cmpsb
sub
sarb
loopne
call
xchg
test
add
lock
pop
push
and
adc
lods
add
cwtl
mov
movsb
shrb
clc
mov
test
lock
aaa
int3
in
pop
or
mov
mov
sub
mov
test
and
outsl
sub
or
and
insl
sti
ja
into
out
hlt
dec
fstpl
sahf
jb
pop
les
sti
stos
aaa
sbb
push
inc
sub
dec
aas
andl
je
sub
xchg
mov
sub
sbbb
imull
mov
jmp
and
ds
nop
bound
ret
movsl
inc
fmull
mov
clc
push
jae
and
movb
scas
scas
adc
fisubs
xchg
aam
push
gs
and
pop
cmpsb
xchg
jnp
lds
cmpsb
jg
nop
je
cmc
js
rcr
test
jecxz
cwtl
dec
ret
jl
sti
imul
pop
pushf
idiv
add
mov
rclb
into
dec
int3
out
and
mov
and
inc
out
pusha
or
cli
mov
imul
push
lods
dec
push
shll
pop
dec
jmp
scas
inc
push
fsubl
inc
push
mov
sub
push
scas
cmp
jge
sti
aad
mov
imul
ret
enter
das
lock
sbb
mov
cmpsw
jmp
jnp
push
and
pop
sarl
and
subl
bound
imul
shrl
gs
pop
leave
das
sbb
and
push
jo
pop
inc
inc
mov
and
add
sub
adc
jge
sahf
ljmp
mov
pmuludq
sbb
xor
xchg
adc
pop
stc
gs
mov
and
and
adcl
shl
pop
ds
push
mov
sub
int
mov
lret
popl
enter
push
push
cmpsl
cmp
daa
push
add
sub
lock
pop
sub
mov
into
xor
sarl
jp
mov
xor
jns
shlb
mov
jecxz
leave
cmp
je
pop
push
inc
popa
mov
rolb
xchg
and
dec
mov
out
push
push
scas
popf
outsb
aad
mov
das
pop
addb
stc
xchg
mov
xor
aad
adc
mov
fistpl
sbb
fbstp
xchg
cmp
lahf
lds
fcoml
ljmp
lock
xchg
sti
sbb
xor
pushf
subb
stos
lds
push
out
push
fisttpl
movsb
add
pop
in
shll
mov
push
mov
pushf
add
xchg
xorb
cmpsl
lcall
jns
pop
lret
adc
jmp
shlb
adcl
and
jae
sete
scas
cmp
insb
loop
in
hlt
pusha
sub
cli
dec
out
or
dec
mov
jbe
pop
add
mov
pop
xchg
pop
pop
das
xor
pop
lret
cmp
out
cmp
jbe
push
inc
mov
and
popf
mov
jle
mov
push
in
ja
daa
sub
push
sbb
icebp
repnz
fildll
daa
leave
lret
lock
jno
dec
jnp
daa
add
xchg
xchg
pushf
lods
inc
xor
jb
aaa
xchg
or
mov
pop
mov
xchg
movsb
mov
mov
xor
outsl
and
xchg
in
xor
lods
scas
cld
jle
cmp
dec
enter
push
rcrb
insb
jl
dec
xor
sbb
jno
ret
cmp
adc
jmp
jae
lret
decb
jnp
sbb
flds
dec
aas
ds
rcr
ret
jnp
lcall
ss
fdivrl
fildll
call
pushf
sbb
movsb
inc
inc
sahf
and
test
pop
cwtl
iret
xchg
xchg
pop
scas
arpl
out
orb
pop
daa
xchg
sbb
cmc
lcall
data16
test
pop
push
insb
in
add
xor
cli
mov
filds
jnp
push
jbe
mov
je
sbb
pusha
lea
xchg
sar
mov
xor
lea
hlt
xchg
in
test
pop
xor
jbe
addr16
mov
or
xlat
pop
or
or
and
imul
push
fists
je
jecxz
pop
pop
loop
dec
mov
dec
cmpl
in
bound
ret
add
fcmovbe
bnd
and
dec
aad
cwtl
pop
addr16
fadds
shrb
inc
xor
mov
inc
ficoml
int3
in
cmp
in
shrb
cwtl
loop
sbb
mov
jb
and
jb
scas
out
mov
or
jb
repnz
and
cmpsb
fldt
cld
inc
cs
sub
cmp
cmpsb
pop
fdivrs
sub
xchg
push
mov
push
insb
cmp
out
push
mov
or
test
sbb
out
cmp
testb
scas
mov
pop
pop
add
pop
cmpsb
fwait
ljmp
sbb
jbe
mov
sub
mov
mul
dec
pop
dec
pop
cli
jnp
test
cmpsl
outsb
adc
cmp
inc
xchg
outsl
push
push
cmp
xor
mov
xor
jns
imul
cmp
lahf
in
sbb
test
cld
push
push
dec
jle
repz
pushf
adc
mov
enter
mov
into
mov
sub
push
mov
mov
cmc
call
dec
data16
fldcw
cmc
push
icebp
iret
lret
pop
scas
sub
pop
ljmp
clc
popf
std
enter
mov
aad
sub
jae
out
push
mov
bound
sbb
sti
std
hlt
sahf
outsb
sahf
push
jae
test
orb
jl
fdivl
mov
enter
fisubs
push
fildl
add
sbb
xchg
popa
test
sbb
xor
cmc
out
push
das
xchg
lret
and
and
sahf
add
sub
cmp
jbe
nop
mov
dec
in
cmp
aad
in
xor
adc
mov
push
imul
je
sbb
cli
nop
insb
xchg
dec
stos
push
cmp
mov
js
lea
push
outsb
mov
xchg
arpl
pop
sub
and
in
jp
push
sti
cmp
push
stos
repnz
mov
fs
cmp
int3
cs
and
xchg
push
pop
stos
mulb
add
jno
lahf
jg
cli
popf
cmp
inc
testl
mov
addb
dec
lods
add
jecxz
mov
subb
test
sahf
xchg
dec
movsb
pushl
adc
inc
xchg
leave
dec
xor
repnz
dec
daa
fbld
in
lcall
test
xchg
roll
sub
movsb
add
mov
lods
aam
sbb
mov
repnz
mov
iret
xorl
cwtl
adc
aas
movsb
pop
inc
inc
ror
cmovs
xchg
xor
cvtpi2ps
cmpsb
cmpsl
sbb
inc
insl
jmp
jl
sbbb
inc
loopne
aam
xor
sub
xor
mov
mov
cltd
jl
inc
lahf
fwait
not
test
xchg
lret
mov
fstpt
or
lret
ljmpw
popf
or
popf
inc
sub
lret
inc
fistpl
pop
pop
sbb
and
pusha
gs
js
test
pop
clc
cmp
inc
neg
sub
jg
jo
inc
jmp
inc
inc
aaa
sbb
sti
daa
mov
in
outsb
push
or
js
adc
pop
xchg
xchg
pushf
cmpsb
mov
std
mov
in
cwtl
xchg
ljmp
stc
xor
dec
hlt
pop
add
dec
sbb
xor
mov
mov
frstor
xchg
mov
push
popa
rcr
aaa
stos
or
addr16
pop
jge
daa
inc
test
mov
cmpb
pop
inc
sub
cmp
adc
call
in
aad
xchg
mov
mov
xchg
jo
push
cmc
out
jae
scas
dec
es
inc
inc
clc
adc
aam
aas
outsl
sbbl
fwait
cmp
mov
cmpps
cltd
scas
inc
xor
lret
or
xor
stc
rcrb
xchg
xchg
xlat
sahf
shrl
push
std
pop
out
cwtl
mov
sti
sbb
lcall
adc
cld
sti
movsb
jae
cld
into
lea
pushf
divl
jge
adc
jnp
loopne
dec
pop
sbb
xchg
inc
data16
imul
or
mov
or
add
jmp
jp
sub
xchg
lds
push
or
inc
int3
pop
jge
jae
jb
sbb
fstpt
enter
cmpsb
lahf
scas
popa
cmp
mov
je
gs
outsl
adc
mov
shlb
pop
xor
clc
xchg
jecxz
xchg
fldl
outsb
lahf
movb
cld
insl
loopne
pop
xchg
xor
xchg
mov
cltd
jg
repz
cs
lcall
jnp
mov
movsb
sub
ds
leave
xchg
cmc
xor
out
push
add
lods
pop
daa
dec
add
mov
lret
or
mov
pop
les
sbb
jmp
mov
xchg
cld
and
pop
push
dec
clc
mov
insl
xor
pop
loop
sub
and
inc
lret
shll
or
out
adc
xchg
scas
testb
lret
loop
xchg
cltd
push
cmpsb
repnz
xor
lock
and
mov
jae
jl
jmp
bound
inc
or
sub
inc
int3
inc
std
fldz
jbe
pop
cs
ds
xchg
inc
leave
push
stos
repnz
push
out
adc
mov
or
gs
inc
fnsave
inc
sub
inc
ljmp
and
jno
imul
enter
ret
push
adc
inc
mov
repnz
sbb
arpl
std
fdivr
mov
pop
jb
lret
aam
les
cmpsl
test
cs
cld
mov
int3
add
outsb
xorb
out
sub
xchg
mov
mov
js
jnp
inc
scas
jo
push
outsb
cmp
mov
and
outsb
pop
leave
test
xchg
mov
pop
inc
dec
outsl
dec
add
mov
bound
dec
mov
dec
add
xor
repnz
scas
in
mov
jns
daa
js
inc
mov
mov
or
or
mov
mov
add
inc
jno
cmp
fidivs
fstpl
lcall
int
cwtl
out
insb
jnp
icebp
xchg
mov
sbb
mov
inc
sbb
lock
pop
push
testl
aam
pop
js
inc
cpuid
pop
pusha
cwtl
sbb
clc
test
movsb
mov
xlat
lahf
cmp
mov
int
xchg
es
push
and
inc
mov
lock
sub
js
mov
bound
and
dec
mov
mov
mov
mov
jmp
xorb
pop
and
dec
sarl
mov
stos
pop
orb
cmpsb
in
popf
in
mov
lds
insb
mov
cmc
repnz
or
repz
mov
lcall
ljmp
int
popf
std
or
pop
hlt
bound
push
xor
xchg
cmc
ljmp
cmp
clc
xrstor
jno
inc
add
icebp
dec
cld
out
push
inc
jg
jmp
xchg
ds
mov
xor
mov
sub
aas
cli
aam
out
push
xchg
stos
cmp
loope
mov
jecxz
mov
xchg
bound
mov
orl
scas
scas
adc
add
pusha
lahf
js
clc
ja
lds
ss
sbb
icebp
mov
scas
inc
sub
push
ret
icebp
sbb
arpl
mov
filds
cmp
xorl
out
cmp
sbb
into
sub
dec
cmp
sub
sub
cld
das
push
dec
test
mov
lds
loopne
push
ja
icebp
mov
insb
aaa
dec
mov
sub
xor
sub
ret
insl
dec
cmp
adc
adc
sti
ret
cmpsl
mov
jbe
insl
imul
sbb
inc
mov
xorl
nop
add
imul
add
xor
and
mov
or
outsl
aaa
push
stos
xchg
mov
jns
push
xchg
or
dec
mov
sbb
and
pushf
test
and
das
in
ljmp
lret
pop
pop
inc
stos
or
setle
jno
outsb
sbb
les
push
dec
dec
jg
test
cli
sbb
xchg
lret
cwtl
cmp
fcomps
xlat
stos
icebp
jmp
cmp
pop
imul
mov
scas
dec
push
push
ss
and
js
mov
and
xor
xor
xchg
cmp
cmp
mov
pop
cmp
idivl
fs
jg
inc
or
outsb
jno
aaa
mov
repz
inc
add
test
stos
adc
xchg
sbb
sub
mov
sbb
push
dec
lock
mov
jge
cmp
sbb
dec
into
outsl
push
lret
call
adc
or
push
bound
mov
lret
push
shll
mov
mov
cmpsl
dec
and
add
push
mov
insl
insl
in
and
popa
sub
xor
es
add
jle
in
xor
or
roll
daa
jb
scas
push
mov
jb
fldt
push
inc
aaa
xchg
mulb
sub
add
mov
pop
lods
arpl
imul
xchg
addr16
push
nop
test
jne
sbb
fisubrs
addr16
pop
cmp
and
sahf
dec
xchg
mov
daa
lock
inc
out
jo
pop
ss
push
push
cmp
cmp
jno
xchg
fistl
into
div
push
ret
popa
rcl
fistps
dec
nop
lcall
sbb
je
mov
jbe
sub
mov
ffree
rcr
lcall
inc
adcl
pop
push
es
or
mov
inc
hlt
fucom
lods
mov
sarl
inc
dec
dec
cmp
dec
sbb
cmp
add
repnz
ja
push
mov
pushf
sarb
rolb
cmpsl
xchg
xchg
icebp
ljmp
int3
push
mov
mov
add
mov
mov
xor
jmp
mov
pop
adc
test
das
and
mov
enter
dec
daa
iret
and
repnz
inc
int
out
int3
test
in
inc
xchg
repnz
insl
pop
push
xor
xor
imul
ds
hlt
push
sbb
and
mov
in
inc
dec
lods
rorb
je
xlat
inc
mov
testb
mov
lea
inc
ljmp
iret
mov
dec
das
repnz
outsb
add
dec
stc
xorb
lahf
cld
lret
sti
lds
xor
inc
sub
pop
xchg
ljmp
pop
jns
test
rcrl
fsub
out
dec
mov
xor
ja
aam
flds
inc
in
xchg
das
pop
test
pusha
pop
xchg
sub
es
sbb
sub
push
pop
dec
adc
jne
inc
in
pop
add
mov
testl
mov
fwait
pop
jno
fidivs
movsl
or
push
into
or
out
sbb
inc
cmpsl
mov
inc
outsl
mov
sbb
mov
mov
rclb
mov
or
inc
fwait
inc
sub
add
test
mov
push
iret
je
xor
sub
mov
out
sti
mov
mov
repnz
insl
mov
dec
mov
cmp
divb
lds
cmp
sub
das
mov
push
xchg
test
icebp
cmc
sub
and
cmp
aas
cli
dec
mov
stos
in
pop
push
jno
lock
in
jnp
arpl
fwait
mov
loopne
jle
add
mov
xchg
decb
xlat
jg
mov
inc
fldl
adc
sub
mov
mov
cmc
gs
xor
jle
cmp
fdivrs
xorb
fs
xor
jo
in
inc
repnz
out
xor
mov
sub
stos
push
jns
jge
xor
daa
ss
mov
sub
mov
out
fidivl
loopne
js
cmp
rcrb
lods
lods
push
iret
jnp
in
mov
xchg
daa
inc
stc
mov
and
mov
jg
les
jno
adc
call
mov
insb
cmc
xlat
rorb
xor
pop
fcoml
in
shlb
mov
repnz
mov
adc
cltd
xor
dec
je
sbb
out
xlat
movb
jl
sar
lock
jne
imul
sub
insl
popf
sbb
call
xchg
pop
jae
mov
lods
dec
or
lock
adc
xchg
int3
in
mov
sbb
jne
ds
xchg
pop
push
shlb
lods
adc
sub
lock
cmp
ret
dec
sbb
cmpsl
sarl
push
xor
and
movsl
stos
mov
xlat
insb
aas
sbb
repnz
inc
rcrb
cltd
mov
xorl
xchg
ror
shll
mov
out
aaa
push
sbb
mov
inc
sub
mov
xchg
ret
xchg
dec
and
push
pop
pop
mov
add
lret
sti
clc
mov
inc
and
insl
test
xor
jb
sti
mov
rcrl
push
sub
jmp
add
popl
shlb
scas
cmp
les
gs
ljmp
push
dec
sbb
inc
adc
lahf
pop
int3
xor
fnstsw
adc
das
ds
aad
xor
das
outsl
pusha
push
mov
adc
minps
cmp
push
xchg
lret
lcall
lea
mov
sub
lods
mov
jmp
xchg
icebp
sbb
arpl
in
inc
loope
adc
js
iret
mov
add
int3
popa
mov
rcll
cmp
addr16
arpl
hlt
add
xchg
cmp
cmp
pop
arpl
dec
addr16
clc
xor
js
push
mov
push
xlat
pop
push
jbe
in
push
insb
pop
cs
flds
data16
stos
mov
mov
xor
add
cmp
dec
inc
fisubl
push
pop
inc
enter
push
sub
push
pop
inc
sti
mov
or
pop
stos
push
fimull
int3
sahf
or
jo
sarb
mov
out
mov
into
jbe
popf
jno
xchg
lret
out
movq
mov
insl
sub
inc
addr16
jnp
jg
xchg
mov
add
cmp
inc
or
movsb
fcmove
inc
mov
inc
push
lock
rorb
hlt
sub
fs
cmpl
adc
jge
and
jne
sbb
jge
test
addl
lea
push
shlb
stc
idivb
dec
cmpsl
aaa
ret
sub
js
push
push
xchg
sbb
adc
ljmp
nop
sbb
shrb
dec
adc
mov
imul
pop
popf
testl
cmp
in
xlat
imul
dec
cli
shrb
flds
mov
lea
out
push
lds
jmp
xor
mov
inc
xor
gs
push
mov
outsb
cmp
push
push
shl
push
subl
push
lods
addl
push
pop
push
inc
xor
std
rolb
push
pop
out
sbb
or
into
push
stc
adc
lcall
push
popf
jnp
mov
mov
lds
or
shrb
and
dec
sbbb
fstpt
ja
dec
push
repz
add
sub
xchg
fwait
stos
inc
xorl
add
jg
popf
mov
fstps
dec
nop
adc
enter
scas
int
mov
sub
loopne
pop
rcrl
mov
rorb
loop
fcoms
fstpt
jno
jb
test
mov
xchg
xchg
pop
in
push
aad
mov
cltd
dec
mov
pop
cwtl
movsl
xchg
pop
fadds
shll
idivl
aad
adcl
jns
sub
sbb
out
sub
pop
fists
outsb
dec
sbb
enter
scas
push
add
ss
ret
arpl
lock
and
sbb
andl
ja
pop
sub
hlt
xchg
adc
imul
mov
or
insb
dec
sti
xchg
jl
mov
xchg
pop
inc
mov
and
mov
rcrb
sub
add
adc
insl
addr16
jns
xchg
test
push
fldenv
add
jae
sbb
cmp
test
mov
sbb
jb
jecxz
dec
mov
iret
je
enter
cmp
shl
push
mov
das
je
imul
add
xor
cmp
out
fsubp
cmpb
pusha
jl
cltd
inc
pop
stos
rorb
clc
aaa
icebp
loopne
and
test
or
mov
mov
cltd
jnp
dec
sahf
xchg
mov
dec
fisubl
sub
jb
sarl
repz
repz
inc
aaa
sub
je
add
add
mov
aam
scas
or
mov
xchg
jbe
inc
fsub
mov
adc
call
insl
cmpsb
cmp
xor
fdivp
push
nop
popf
push
pop
mov
jle
fidivl
push
pop
push
ss
gs
outsl
int
jg
sub
dec
lahf
jmp
fcompl
movsb
js
and
mov
popf
jbe
pop
sub
jbe
or
lcall
icebp
or
rclb
jne
lods
ret
push
cli
xchg
inc
sbb
jmp
mov
stos
lock
shll
xlat
clc
mov
sbb
mov
sub
mov
cld
jae
popa
mov
mov
dec
loop
jecxz
outsb
sub
jne
loopne
pop
adc
sub
mov
jl
xor
xor
pop
rorb
sarb
inc
and
mov
ldmxcsr
orl
adc
out
mov
inc
out
push
lods
repnz
mov
lahf
xchg
mov
sahf
fcompl
or
sahf
clc
std
pop
jp
fmull
loope
ss
jge
xor
lods
mov
mov
test
lock
loopne
sti
or
dec
or
lret
sub
dec
test
xchg
lods
add
ja
test
mov
mov
mov
lahf
js
into
test
mov
mov
jbe
jg
test
mov
ljmp
xor
dec
add
jnp
xchg
fdivs
pop
insb
cmc
in
sahf
int3
das
dec
sarb
mov
cmp
stos
and
insl
dec
xchg
bound
xchg
repz
enter
ds
lahf
xor
repnz
sub
dec
das
jno
mov
pop
mov
repz
out
or
fldenv
xchg
bound
inc
dec
add
cmp
and
jae
xchg
int3
push
stos
insb
setg
xchg
mov
mov
stos
bnd
jae
mov
mov
sub
push
cwtl
adc
int
sbb
xlat
ljmp
and
xor
es
dec
loopne
test
testb
mov
jo
adc
cs
mov
xchg
mov
pusha
scas
push
jns
in
push
mov
std
movsl
out
cmc
leave
cmp
mov
mov
add
cwtl
push
test
pop
cmp
xor
nop
or
gs
sub
inc
dec
in
and
mov
jnp
adc
fwait
cmpsl
xchg
or
std
mov
sahf
jns
movsb
mov
adc
insl
lock
leave
adc
dec
jnp
cmp
out
mov
cwtl
mov
mov
push
icebp
mov
lods
fwait
popf
add
shlb
aaa
add
loop
mov
adc
cs
sbb
neg
ret
adc
das
dec
xchg
mov
push
mov
push
rolb
pop
imul
lods
test
gs
add
or
pushf
hlt
push
rcl
aas
mov
ljmp
imul
aam
lret
int3
or
mov
divb
or
test
je
mov
sarb
lds
xor
in
inc
adc
aam
inc
aaa
adc
repnz
movsb
jo
fstpl
dec
mul
test
or
pop
rclb
rcrl
pop
stos
push
jle
mov
lea
cmp
xchg
mov
pop
scas
mov
ljmp
push
gs
dec
je
add
xor
mov
mov
inc
dec
jg
addr16
enter
pop
push
cmp
adc
mov
aaa
pop
lods
jno
adc
mov
test
xorl
data16
xchg
call
loopne
inc
in
in
cmp
push
add
adc
shlb
arpl
cs
mov
pop
int3
or
or
das
adc
sahf
push
pop
mov
xor
xchg
sti
ja
push
jge
in
xor
dec
int
mov
lods
stos
inc
sub
pop
in
int
movsb
pop
cmp
xchg
jae
js
mov
popa
mov
stos
lock
push
push
xorl
repnz
cmp
fidivrs
test
int
setl
or
dec
or
xchg
lock
pop
ljmp
inc
jecxz
fcompl
jge
gs
iret
sub
jmp
jbe
cmp
lods
icebp
ja
addr16
inc
inc
gs
rorb
mov
mov
xorl
pushl
dec
ds
cmpsb
popf
pop
or
mov
sahf
iret
jmp
cld
fistpll
aaa
lods
inc
mov
int
enter
mov
mov
idivl
in
call
mov
mov
sbb
in
cltd
xchg
gs
push
mov
mov
sbb
fucomi
push
xor
das
pop
xchg
ret
pop
ja
out
inc
pop
lret
and
or
push
inc
fs
or
cwtl
stos
and
adc
out
add
push
or
dec
in
icebp
addb
mov
outsl
les
fadds
or
mov
jns
js
inc
into
mov
push
jo
sbb
jp
push
add
inc
in
lds
inc
popa
push
push
nop
jge
mov
sub
fists
sahf
sahf
pop
inc
jmp
daa
fcmovnb
dec
test
outsl
or
rorl
pop
and
or
add
leave
jnp
inc
loopne
pop
push
sbb
xor
repz
fs
pop
popf
lret
pop
cwtl
movsl
lea
ror
xchg
add
rolb
lds
imul
sub
sub
mov
pop
cld
testb
jno
pop
or
rcl
iret
sarb
cmpsl
sbb
dec
xor
push
jae
jl
push
clc
xchg
jno
cld
mov
cs
sahf
fistl
cmp
lock
lea
test
es
andl
or
and
push
out
loop
notb
sub
mov
add
aam
xor
cmc
int
shrb
pop
movsb
add
xor
mov
pop
fsubrp
cli
mov
mov
inc
add
mov
or
xchg
dec
dec
popa
pop
mov
xchg
ficompl
push
in
icebp
clc
loope
mov
hlt
aaa
mov
sbb
lods
push
xlat
push
stos
push
push
test
fisttps
sub
inc
cs
xchg
inc
and
rcrl
and
or
mov
or
cmp
cmpsb
rolb
frstor
or
mov
dec
fdivs
aam
nop
outsl
or
inc
cmpsl
mov
jp
pop
ffree
cmpsl
clc
loop
mov
insl
pop
xchg
fbld
ror
jl
sub
testl
pop
ss
int
scas
stos
gs
mov
pop
dec
cmp
mov
sub
lea
andl
cld
movsb
mov
popa
mov
flds
popa
push
enter
iret
enter
dec
cmpsb
test
es
dec
leave
cmpsb
mov
jmp
or
and
cmc
jmp
ds
xor
call
mov
out
mov
stos
call
sbb
pop
push
je
cltd
cld
pop
ss
js
push
in
stos
xorb
adc
shr
dec
out
jb
push
adc
sub
xor
dec
xlat
mov
or
or
int
push
cmc
stos
xorl
mov
lods
fwait
mov
push
xorb
fimuls
mov
ret
xchg
movsl
imul
xchg
add
jne
fwait
jge
adc
adc
shrl
lods
test
push
je
push
popf
ficoml
ljmp
lret
mov
rcrb
aam
iret
bound
or
imul
test
cli
nop
inc
dec
dec
pop
leave
lret
gs
jmp
mov
movzwl
mov
loopne
adc
xor
push
jl
cmp
lds
int3
test
int
aaa
push
icebp
je
push
fs
and
mov
ja
mov
loop
mov
mov
push
mov
or
lret
loopne
jbe
sahf
jmp
rep
outsb
xchg
lds
fimuls
in
arpl
sub
cmp
xchg
hlt
dec
pop
xchg
fldt
sub
mov
int3
test
jmp
scas
cld
and
aam
xor
add
popf
cltd
fcoml
cmc
push
ds
mov
jl
insb
jnp
push
pop
push
sub
lret
and
movsl
mov
test
push
pushf
adc
xchg
jmp
xchg
jmp
subb
jg
stc
xchg
push
sub
je
push
pop
in
ret
shll
mov
std
cltd
pusha
xor
test
xor
pop
out
or
dec
mov
jbe
loopne
aam
cwtl
adc
mov
lret
mov
sub
sti
jbe
ljmp
jns
sub
or
imul
inc
mov
push
jbe
adc
clc
outsl
lcall
jbe
cmp
jne
push
cld
add
fstpl
xor
lcall
xchg
js
enter
push
adc
and
out
dec
sub
xchg
mov
dec
jae
xor
sub
inc
jae
pop
fwait
pop
fisubrs
push
dec
mov
sbb
aam
or
movswl
mov
data16
or
das
add
movsl
mov
inc
into
jno
add
ficoml
outsb
cmp
pop
sub
dec
es
jecxz
xchg
inc
sub
push
das
leave
aas
test
fwait
test
cmp
push
xorl
pop
pushf
movsb
xchg
cld
mov
pop
sbb
sub
and
in
aaa
addb
call
push
das
lret
pop
ret
pop
pop
shrb
adc
shrb
out
mov
push
sahf
push
lea
adc
cs
pusha
popl
jle
subl
jno
fs
mov
and
js
scas
stos
mov
dec
mov
cli
pop
insl
xchg
daa
mov
into
push
arpl
sbb
fwait
neg
rcrl
ljmp
scas
dec
mov
stc
lods
scas
xor
xor
push
sarb
push
addl
dec
jns
in
and
popa
enter
jl
mov
stos
adc
shll
insl
test
pop
and
mov
ret
xor
test
movsb
into
mov
pop
mov
rcrb
das
addb
xor
jmp
cmpsb
sbbb
mov
xor
jp
push
imul
add
pop
adc
in
xor
or
bound
in
adc
sub
mov
daa
movsl
ss
icebp
mov
adc
test
mov
ss
int
movsl
fisubrl
mov
cli
lret
popf
lds
add
loope
jbe
xor
jg
out
cmp
jb
adc
cwtl
mov
popf
lcall
pop
xor
imul
clc
nop
push
out
sub
dec
test
sub
sbbb
mov
xchg
lcall
ret
ret
sub
jno
mov
test
xor
xchg
pop
inc
jne
mov
dec
repz
adc
ljmp
test
pusha
push
js
add
stos
scas
cs
aad
flds
stc
and
inc
bound
dec
pop
addb
adcb
jge
cmpl
scas
cmp
mov
js
je
popa
iret
mov
lds
test
pop
movsb
test
mov
mov
sub
and
in
cmc
sbb
ret
ljmp
imul
or
aam
idiv
sbb
fdivl
sbb
fidivrs
leave
mov
add
mov
out
adc
and
pop
xlat
xchg
inc
xor
xchg
lahf
insl
jg
mov
call
loopne
pop
jp
xor
arpl
sub
shrb
out
xor
sub
inc
out
ds
fiadds
push
push
and
push
or
jl
jns
dec
int
loope
sahf
lcall
xchg
scas
inc
jmp
int3
test
ret
add
or
dec
pop
shll
rorb
lahf
orb
scas
jmp
jmp
sub
into
xchg
jb
adc
subb
xor
cs
jb
ret
mov
mov
mov
xor
pop
fistps
pushf
int
mov
das
stos
into
or
out
outsl
aad
fstpt
inc
vpshad
ss
or
dec
mov
add
lcall
pop
mov
and
xor
xlat
jno
popa
dec
jnp
add
push
cmp
dec
pop
sub
sahf
pop
arpl
adc
jae
cmp
clc
fsubrs
push
ds
xchg
rol
add
and
sbb
jb
cmovg
mov
mov
xchg
pop
or
inc
imul
insb
repz
and
test
jg
in
mov
jmp
cmp
test
push
cmp
and
bound
sti
xor
ficoms
nop
cmp
fisubrl
xor
mov
lods
lods
pop
popa
scas
insl
cld
jmp
lret
outsl
push
mov
lds
jo
pop
ss
out
add
sub
xchg
and
add
clc
repz
ss
iret
and
call
and
or
dec
mov
xor
stc
jbe
pushf
fisttpl
xchg
lods
jbe
mov
movsb
mov
iret
test
icebp
pop
or
cmpsl
movsb
arpl
ds
sbb
inc
sbb
std
or
nop
cmp
add
mov
scas
or
xchg
neg
jg
fiadds
stos
subb
sub
mov
mov
mov
repnz
out
std
mov
scas
cmp
cmpsl
or
or
js
jnp
mov
cmp
loopne
lcall
sbb
xor
cwtl
mov
cmp
repz
scas
test
loope
push
loope
xor
popf
popa
xor
bound
daa
popf
xor
or
inc
jge
and
push
icebp
cmp
test
add
and
negl
sub
test
xor
xchg
pop
and
jb
jae
dec
adc
xchg
push
and
mov
leave
mov
inc
inc
inc
out
xor
push
cmp
clc
sbb
cs
jl
or
lret
mov
sub
jl
hlt
adc
mov
iret
sub
cwtl
in
xchg
adc
jae
jl
ja
add
add
cmp
mov
fmuls
pushf
loop
push
and
sub
andl
xchg
adc
dec
ret
cmpb
sub
xchg
mov
shlb
add
jp
push
dec
xor
dec
xor
std
cmpb
xor
pop
inc
mov
dec
cld
das
dec
mov
pop
inc
movsl
push
popf
cmpsl
dec
pushf
mov
add
arpl
cmp
xchg
andb
aad
dec
fst
xchg
xchg
fnstcw
into
xchg
jl
and
in
mov
xor
aaa
dec
sbb
cmpsb
mov
mov
sbb
outsb
cmp
jecxz
adc
fwait
mov
jbe
jbe
imul
addr16
mov
jl
enter
fistl
mov
mov
add
jmp
mov
or
cmp
ljmp
popf
jb
mov
mov
rorl
daa
clc
xchg
inc
test
add
dec
insl
jbe
push
out
inc
notl
rorb
dec
addl
inc
in
xchg
lds
cwtl
arpl
or
xlat
cmp
and
push
jbe
test
xor
pop
ljmp
add
jne
jp
pusha
adc
cmp
data16
jecxz
xchg
call
rcr
out
mov
hlt
and
stos
jno
or
or
daa
sub
mov
out
push
int
cltd
out
lods
pop
test
xchg
inc
lds
xchg
push
cmp
test
dec
cmp
mov
in
sub
xchg
stc
mov
dec
or
sahf
adc
pop
arpl
add
outsl
or
imul
and
daa
rorb
pop
cmp
push
iret
mov
xor
xor
outsl
xor
ror
xor
and
pop
fnsave
xchg
inc
and
push
dec
popf
iret
insb
lret
jl
push
in
inc
jae
mov
mov
pop
cmpsl
in
xor
cmp
fmull
out
mov
orl
push
aad
jg
fstpt
ss
loop
test
xlat
addr16
jp
inc
jno
sbb
jmp
pop
xor
imul
mov
sti
adc
insl
sub
mov
into
test
ljmp
scas
mov
aaa
mov
inc
cmp
repz
iret
xor
test
xor
cmc
in
out
lods
or
leave
adc
daa
aad
pop
int
xor
dec
and
test
aad
lds
scas
insb
adc
and
cmp
sti
dec
jns
add
loopne
cmp
jns
ret
jne
in
add
add
outsb
inc
push
push
test
gs
cmpsl
gs
ds
into
xor
movsl
xor
pop
stos
cs
adc
pop
lods
and
mov
sbb
insb
and
jae
fstpt
movsb
shrb
adc
andb
cld
int3
push
inc
nop
push
and
pusha
sbb
or
push
cmpl
cmp
ds
cmp
xor
in
mov
in
jb
adc
pop
nop
xor
mov
push
sub
dec
adc
xor
mov
ret
ljmp
orl
jnp
mov
iret
adc
in
loopne
adc
iret
leave
icebp
popf
sbb
mov
daa
in
pop
inc
jno
xchg
push
fwait
push
enter
test
xchg
xchg
push
xor
inc
push
add
idivl
inc
jge
repnz
outsl
jbe
jge
daa
filds
fistpll
mov
sbb
xchg
push
mov
ret
repnz
jns
out
mov
pop
fwait
roll
jg
dec
mov
cmp
sbb
aas
cmpsl
shlb
pop
jno
rcrb
xor
mov
mov
rorl
fisttpl
xlat
fstpl
lods
js
adc
test
popa
sub
int
mov
adc
ret
test
or
pop
jae
fisttps
mov
xchg
jg
pushf
lea
push
xchg
dec
sbb
mov
pop
addps
dec
ss
mov
adc
lret
add
test
insb
fcomp
push
rorl
jo
cmc
jno
sub
pusha
pop
sahf
sub
adc
icebp
jns
movsl
sub
sahf
xor
adc
inc
push
xorb
setl
aad
jb
xchg
jecxz
movsl
fcoml
rorl
add
pop
mov
cli
fdivrl
xchg
rolb
jp
idivl
cmp
mov
mov
cmp
les
sub
push
mov
adc
xchg
test
lock
movsl
stos
and
cwtl
shll
mov
repz
gs
cli
movsl
lock
pop
cmp
movsb
xchg
xchg
mov
and
sbb
cmp
addr16
insl
mov
sbb
imul
loop
lock
xor
repnz
and
mov
push
jl
inc
push
or
shr
inc
jecxz
mov
sar
sub
cmp
aad
mov
stos
jecxz
and
xor
lea
xor
inc
aad
ja
jb
andl
out
bound
jmp
jno
rorl
dec
cmp
icebp
ja
dec
add
xchg
sbb
xlat
je
jnp
fiadds
push
stc
test
insl
jae
bound
push
int3
xchg
lea
add
clc
mov
dec
sahf
adc
cmpb
pop
out
out
aad
add
scas
push
xchg
jne
arpl
push
lds
lods
add
push
out
cmp
xor
repz
push
sub
push
imul
andb
test
dec
in
and
push
pop
sbb
adc
xchg
mov
ja
lods
push
jbe
mov
fwait
push
std
in
cmp
pop
cwtl
cmp
je
jmp
inc
lret
les
rorb
int3
or
dec
cmp
mov
in
jge
inc
jl
out
lods
ret
dec
jmp
rorb
outsl
pushf
cltd
popf
arpl
adc
xor
mov
push
xor
push
pushl
dec
cmc
dec
mov
imul
in
or
mov
mov
in
mov
xchg
out
cmp
sbb
fwait
imul
mov
movsl
sti
mov
jb
lods
sub
mov
add
je
insl
dec
mov
and
sbbb
shr
imul
fdivrp
or
sub
jmp
cld
xchg
or
out
or
dec
stos
sub
std
jg
mov
into
push
inc
sbb
lods
xor
js
cmp
jp
leave
mov
sub
das
inc
and
and
pop
je
mov
fwait
push
stc
ret
pop
push
mov
push
js
stos
jecxz
orb
jns
inc
xchg
out
shll
je
fs
fildl
aas
xchg
dec
das
xchg
imul
or
or
mov
xchg
xor
sbb
and
inc
daa
add
ss
sbb
adc
xchg
sar
or
aam
aas
dec
mov
fcomp
sub
fcoms
xchg
cmp
in
jns
les
xchg
dec
mov
add
mov
push
call
xchg
fsubrl
iret
nop
inc
notl
sub
jecxz
pop
out
jns
insb
mov
push
and
sub
or
sub
icebp
adc
mov
imulb
adc
sub
xchg
push
fisubs
stos
mov
out
mov
movl
and
and
sub
or
mov
adc
scas
mov
fcomps
sub
lods
icebp
lret
push
bnd
sti
fldcw
imulb
fisttpl
popf
lods
adc
cld
push
mov
sti
test
mov
push
in
jae
jns
testl
sbb
inc
push
dec
pmuludq
loop
inc
cmpsl
loop
lods
inc
mov
mov
cmp
aam
jae
mov
pop
inc
fmull
jnp
pop
jb
xchg
sub
fs
mov
jp
outsl
scas
in
into
xchg
call
xor
lret
test
rcrb
xchg
test
outsl
jbe
pop
shrl
testb
jns
fidivrl
push
lahf
mov
jbe
adc
fwait
jbe
pop
out
and
jo
or
mov
adc
mov
mov
xchg
cmpsb
es
xchg
scas
out
sbb
test
sbb
out
movsl
jno
aas
inc
movsl
bnd
jmp
mov
mov
cmpsb
in
xor
sbb
xchg
lock
mov
push
ds
inc
or
iret
cmpsl
xchg
mov
scas
jb
mov
std
shll
outsl
shlb
lock
adc
add
push
sbb
ret
xor
pop
sti
rcll
pushf
pop
arpl
aaa
push
bound
clc
mov
mov
stos
movsb
jg
add
mov
movsb
jno
adc
and
mov
ds
fmul
pop
loope
adc
or
int
adc
add
fimuls
inc
and
xchg
or
pop
cmp
add
ret
std
lods
mov
jg
pop
jg
lods
aaa
cli
fisubl
lods
fcompl
mov
pop
dec
fimull
lcall
je
pop
push
sahf
stos
in
mov
in
insb
cwtl
sbb
stos
jns
mov
adc
pop
inc
inc
mov
fidivs
dec
xchg
or
sbb
sarb
rclb
hlt
sbb
mov
ss
mov
pop
sub
xor
orl
test
jns
ss
enter
aam
imul
xchg
jns
popa
xchg
pop
xor
jb
xchg
push
icebp
stos
adc
push
inc
jmp
movsl
das
cmp
dec
pop
sbb
mov
inc
cmpsb
xor
dec
mov
addl
mov
xchg
and
jecxz
jbe
clc
rcl
stc
pop
sbbb
call
int3
mov
sbb
cmc
rcl
cmc
add
into
mov
pushl
lret
test
in
push
dec
push
popa
movsb
push
dec
fnstsw
or
cmp
xor
je
insl
mov
out
jecxz
push
mov
mov
maskmovq
imull
out
addr16
or
ret
rcrl
pop
test
ss
push
into
mull
jnp
push
adc
cmp
filds
jbe
cmp
mov
test
fmull
jmp
sub
cmp
fcompl
lcall
enter
and
jne
call
mov
stc
pop
mov
lds
jbe
hlt
mov
cmp
cmc
ljmp
out
push
lret
repz
xchg
ret
pushf
icebp
inc
mov
mov
push
sbb
cli
push
inc
mov
cmp
inc
test
cwtl
xor
pextrw
subl
push
mov
das
cmp
sbb
pop
push
and
push
shll
mov
xchg
ljmp
and
sub
push
fwait
cmp
sbb
jle
addr16
fmull
lock
sub
add
mov
adc
cs
out
popf
fidivs
lock
cld
int3
push
icebp
vhaddpd
cmpsl
mov
mov
xor
jge
addr16
push
push
cmp
jne
inc
hlt
xchg
icebp
push
lret
ret
cmpsl
push
jg
pop
or
fdiv
cmpsb
lcall
push
push
cmp
int3
scas
bound
cli
in
pop
ret
pop
sbb
add
fnstenv
push
adc
or
mov
mov
push
mov
int
neg
push
stc
pop
addr16
dec
inc
mov
cmp
mov
push
int3
ja
sti
in
mov
push
test
fcompl
inc
les
out
insb
jge
les
sub
jecxz
xorl
mov
jl
ret
popa
dec
mov
add
aam
pushf
mov
jnp
pop
mov
mov
nop
shlb
xor
movsl
jecxz
push
filds
js
cli
fcompl
cmp
and
cmc
aas
fdivrl
mov
mov
ret
in
scas
cmp
jnp
pusha
aaa
push
pop
push
jl
fcomps
out
das
xchg
mov
in
sub
insb
cmc
fprem1
dec
push
fs
or
pop
imul
mov
js
or
dec
pop
clc
repz
jb
jo
movsb
pop
jo
es
in
aam
gs
and
in
push
push
jmp
pusha
sub
and
xchg
ret
mov
jl
sahf
cmp
stos
sub
cmp
and
addr16
ret
repz
cmpsl
sahf
and
lret
rcr
jecxz
out
fldln2
and
adc
cmp
test
adc
mov
xor
ret
cmp
and
push
jmp
into
daa
push
inc
aaa
or
fidivs
test
jge
add
xlat
inc
ds
push
repnz
cmpsb
mov
jnp
mov
dec
dec
sahf
test
xchg
mov
and
sub
jnp
mov
js
xlat
mov
call
data16
cli
stc
mov
aas
outsl
test
subb
movsb
jo
rorb
or
push
pop
imul
jne
mov
push
repnz
push
adc
fmull
xchg
aas
push
rclb
mov
mov
rcr
pop
mov
inc
mov
lret
test
cmp
adc
mov
subb
sahf
mov
call
mov
cwtl
aas
out
sbb
inc
rcll
dec
pop
cmpsb
xchg
sbb
scas
mov
xor
ljmp
or
or
movsl
and
in
add
pushf
add
enter
mov
mov
imulb
mov
cwtl
mov
push
sbb
leave
inc
add
outsl
lock
sub
or
mov
movsb
push
xorl
push
and
pop
sbb
scas
xor
test
sahf
sub
rorb
xlat
fbld
dec
fistps
and
pop
pop
orb
xchg
loop
inc
adc
cmp
push
inc
pop
xchg
cmpsb
ja
cld
shl
cmpsb
cmp
xor
repz
xorb
loopne
adc
sbb
addr16
mov
mov
pop
mov
hlt
test
jnp
lods
xor
lock
arpl
add
cmc
mov
mov
sub
pop
bound
xor
lea
cmp
inc
xchg
xlat
in
test
aas
cmp
mov
jo
js
cmp
push
icebp
jno
jl
pusha
push
mov
add
push
fs
jnp
arpl
repnz
lods
inc
call
call
push
shl
jmp
stos
inc
cmc
fadd
adc
sbb
je
inc
pop
shrb
cli
mov
mov
inc
out
std
push
out
jl
sub
ljmp
or
mov
xchg
shrb
push
aas
sub
xchg
and
push
push
jle
pop
rolb
mov
inc
dec
dec
loopne
and
fcmovnu
cmpsb
arpl
pop
cmp
fimuls
rclb
sub
jae
in
sub
std
adc
mov
sub
ret
aam
test
xor
adc
js
mov
xchg
and
mov
push
shll
or
jge
or
flds
jp
arpl
xchg
std
jo
jg
cmpsb
into
inc
adc
xlat
cmp
inc
cwtl
leave
repz
hlt
or
loop
mov
pop
adcb
lcall
ss
lahf
lods
fidivrl
xchg
test
or
jno
jl
mov
pop
fists
dec
scas
sti
push
or
dec
outsl
add
loopne
mov
dec
std
icebp
inc
xchg
call
inc
mov
jo
pop
icebp
addr16
in
jo
popf
or
shll
into
dec
daa
lods
enter
addr16
into
push
ftst
pop
jno
sbb
jle
dec
inc
jo
out
inc
adc
sarl
jo
dec
aaa
dec
pop
xlat
outsb
xchg
inc
sbb
cwtl
mov
stc
jnp
je
mov
addr16
push
shrl
add
testb
mov
and
or
dec
repz
dec
xchg
xor
rclb
insl
mov
mov
sbb
data16
xchg
pop
add
mov
sub
xchg
pop
gs
test
inc
mov
cld
data16
adc
mov
xchg
pop
stos
rcr
mov
mov
add
repz
pop
mov
sbb
inc
push
mov
ljmp
jnp
and
fcomps
aaa
ljmp
sub
loope
dec
adc
xor
insb
test
adc
xor
out
test
repnz
popf
enter
out
sbb
daa
xor
xchg
sub
stos
mov
push
inc
and
je
imul
xlat
sahf
hlt
dec
out
dec
aaa
arpl
stc
je
hlt
xchg
xchg
fldt
test
adc
call
sbb
pop
xchg
repnz
pop
ds
aas
roll
pop
mov
enter
or
push
and
out
or
rcrb
mov
jns
mov
mov
sub
sub
jle
mov
lods
dec
add
lods
repz
es
add
and
call
dec
inc
pop
pop
mov
add
in
loopne
lea
jae
lods
cmc
ret
jne
aas
int
fldt
fsubl
push
gs
adc
xchg
cmp
inc
xchg
daa
mov
pop
push
inc
dec
mov
add
push
mov
scas
jecxz
push
fcomi
xor
mov
cmp
dec
lcall
int
rorb
mulb
pop
mov
inc
xlat
sbb
and
mov
gs
rcl
mov
out
xor
ja
adc
test
pop
mov
aas
sbb
movsb
add
fimull
push
into
lret
mov
test
dec
scas
in
stc
into
sbb
std
test
push
addr16
add
mov
addr16
mov
or
mov
rolb
insb
pop
add
ds
ja
mov
adc
push
pop
js
jne
inc
repz
inc
es
adc
pop
sub
push
cmpsl
data16
jns
rcrl
fucomi
pop
in
stos
push
repnz
jecxz
test
push
dec
test
jecxz
out
repz
sbb
stc
or
test
sub
sbbb
xor
and
inc
fdivr
push
push
addr16
sti
push
jl
jne
loopne
stos
mov
push
jbe
clc
mov
mov
push
repnz
in
clc
jo
xchg
mov
adc
ret
mov
mov
lret
jl
lods
adc
daa
test
and
adc
outsb
mov
add
mov
and
jns
fstpt
cli
adc
decb
sub
jnp
sub
xchg
push
in
mov
subb
leave
enter
mov
ret
pop
xchg
xor
jle
lret
fwait
scas
mov
lcall
leave
into
jecxz
pop
xchg
lock
sbb
and
fiaddl
inc
dec
cmpsb
loopne
xchg
push
inc
call
cmp
xchg
push
ljmp
mov
js
fmulp
pop
jl
out
sahf
pop
movsb
outsl
push
lret
cmp
pushf
push
mov
in
push
xchg
lcall
test
mov
dec
dec
out
out
inc
divb
and
jg
cmp
adcb
mov
dec
mov
scas
dec
push
dec
or
es
mov
das
fs
fmull
xchg
pop
mov
out
out
xor
nop
dec
and
pop
sub
jge
push
lea
push
jo
push
enter
arpl
fcoms
out
pusha
pop
addr16
add
push
aaa
xor
inc
push
outsl
mov
mov
mov
insb
hlt
pop
jne
inc
or
fwait
popf
imul
ljmp
pop
xchg
pop
aas
and
repnz
push
lret
jns
push
lcall
std
jmp
cli
icebp
xlat
std
mov
nop
stos
mov
das
mov
test
les
fidivl
hlt
sbb
mov
xchg
inc
and
mov
ret
enter
adc
fucomi
bound
dec
fsubs
cmpsb
sahf
es
sub
das
add
xchg
repnz
out
or
inc
push
mov
aaa
mov
push
jno
pop
cmc
daa
pop
xchg
mov
xchg
pop
mov
fistpl
andl
pusha
out
adc
xchg
pop
add
lods
leave
cmp
push
scas
pop
andl
fldl
xchg
orb
test
pop
adcl
fs
in
int
or
movsb
imul
out
lea
mov
mov
lods
sbb
ja
dec
cli
inc
icebp
pop
mov
ss
dec
mov
adc
in
push
inc
add
or
pop
scas
push
mov
stos
lods
pop
pop
inc
insb
out
add
sbb
mov
out
dec
dec
inc
add
aad
out
stos
adc
lock
stc
mov
mov
stos
mov
push
add
hlt
scas
xlat
es
pop
mov
insl
out
jns
mov
sbb
insl
sbb
insl
test
lret
or
popf
fisubl
and
sub
pmaxsw
popa
jge
push
das
inc
cmpsl
popf
mov
and
cmp
mov
stc
cmp
lahf
ficoml
push
jmp
notb
in
mov
jnp
add
rclb
shlb
adc
fistl
mov
insl
adc
push
inc
adcl
into
push
or
jg
ret
testb
cwtl
inc
in
loope
mov
add
out
push
mov
insl
jl
aad
push
mov
inc
or
push
daa
xchg
fimull
adc
inc
repnz
hlt
arpl
inc
pop
inc
lret
pusha
scas
fwait
cli
std
mov
add
lock
rcrb
enter
into
repnz
and
pop
popa
insb
fsub
rcrl
push
insl
pop
cs
arpl
in
push
rorb
xor
aam
popa
fldl
in
mov
pop
pop
and
movlps
mov
xor
movsl
scas
addb
test
pop
jl
int3
and
dec
adc
and
sbb
lds
mov
add
notl
mov
fwait
out
cmp
mov
xor
pop
out
cmpsl
pop
sub
pop
mov
inc
push
xorl
add
test
and
dec
lods
shll
and
fistps
jae
imul
mov
lcall
je
decl
imul
mov
lahf
aas
sub
push
insl
mov
out
or
es
or
and
mov
jnp
fnstsw
adc
and
xchg
jae
or
jne
ds
das
js
and
sbb
test
andnps
cld
mov
imul
lds
adc
jns
out
repz
mov
jl
pop
jp
mov
sub
sti
add
push
clc
push
mov
xor
lods
pop
lods
inc
inc
and
mov
cltd
stc
mov
mov
lcall
adc
inc
test
clc
stos
mov
mov
and
ror
ja
out
sub
lcall
cmp
mov
icebp
out
movzbl
or
mov
cmc
inc
ja
add
in
add
mov
dec
sti
inc
fsubs
dec
std
pop
push
ret
data16
loopne
pop
stos
movl
cltd
add
xchg
loop
add
pop
cmpb
ss
cmp
xchg
xchg
repnz
mov
or
gs
or
cmp
push
xchg
test
jnp
or
jbe
stos
jns
data16
roll
outsb
mov
mov
mov
in
repz
test
aaa
or
loop
jle
push
aam
mov
push
ljmp
imul
jne
movb
or
test
inc
insl
flds
sbbl
inc
int
cmp
jo
push
loop
mov
xchg
sub
test
sti
sar
int
lods
in
ds
pop
mov
gs
outsb
mov
vandnpd
and
lret
int3
sti
sub
xor
movaps
sbbl
cmc
or
push
lret
xchg
add
mov
int3
nop
mov
mov
sbb
inc
sbb
popf
inc
test
jo
push
repz
pop
xchg
lret
mov
flds
sbb
xchg
fdivl
cmpsb
or
ret
inc
cmp
loope
add
inc
sub
add
ss
mov
loopne
hlt
scas
fs
xchg
and
fisubrs
mov
dec
sbb
cmp
out
jns
sub
jo
gs
inc
pavgw
test
fsub
adc
cwtl
ret
mov
jnp
xor
jno
jo
adc
lods
adc
pop
imul
aas
pop
test
adc
xchg
cmp
in
shl
addr16
adc
xchg
lea
sbb
arpl
sub
mov
dec
dec
mov
and
add
lret
cwtl
lds
out
mov
hlt
cmp
and
jb
jl
in
les
roll
clc
mov
imul
fnstenv
ljmp
jle
sbb
div
xchg
cmp
xor
sbb
adc
les
jo
mov
and
push
jge
mov
sub
sub
aam
gs
cli
mov
mov
inc
xchg
dec
add
clc
movsb
mov
or
ret
jle
mov
fsubl
addb
cmpsl
and
aas
mov
lret
ss
cmp
mov
xchg
mov
or
arpl
es
mov
pop
jecxz
arpl
pusha
cltd
mov
test
dec
push
insb
lds
inc
xchg
push
imul
je
or
adc
imul
test
xchg
mov
cli
shlb
sbb
xchg
dec
shrb
insb
sub
adc
in
sbb
jge
jmp
clc
pop
rcl
test
sti
fcoml
push
cli
je
cmpsb
inc
mov
popa
movsb
shll
testb
add
stos
adc
ss
cmp
movsl
cmpsl
mov
filds
jl
or
repz
incl
xor
or
add
fcoml
cmp
sbb
jl
pop
rcrb
sub
shlb
and
loopew
adc
push
mov
jo
xchg
cmp
popa
shlb
xchg
aam
adc
bound
xchg
pop
loopne
outsb
rcrl
js
jle
push
dec
loope
inc
lret
mov
mov
sbb
xchg
dec
add
or
mov
cmpsl
lea
xchg
sti
stc
cs
outsl
popf
mov
data16
mov
sub
sbb
mov
xor
sbb
pusha
mov
sub
pushf
sbb
scas
mov
mov
mov
jge
push
mov
cmpb
dec
data16
pcmpgtd
push
mov
sbbl
test
jb
sbb
das
push
test
ss
push
and
dec
pop
inc
stos
jle
mul
xchg
push
sub
dec
into
push
sub
cmp
gs
int3
rclb
fiaddl
pusha
push
xchg
in
imull
mov
shlb
jo
lock
push
ljmp
cmp
sub
gs
fistps
int3
test
sbb
ja
mov
in
xlat
mov
dec
and
push
lods
lahf
inc
jmp
jb
dec
nop
ss
lcall
out
or
pushf
loop
push
pusha
in
ljmp
in
add
in
das
jno
std
jg
repz
or
in
lret
mov
cs
inc
mov
fcmovnbe
out
jb
out
fildll
adc
sbb
imul
stos
jp
pop
aam
punpckhwd
pop
mov
pushl
pop
adc
test
cmpsl
std
xchg
xor
add
and
dec
push
inc
adc
push
rcll
sub
enter
lds
push
cmp
adc
ss
shrb
fnstsw
repz
add
int
jmp
push
xchg
mov
lock
mov
cmp
or
sbb
push
jge
js
sbb
and
mov
adc
test
cltd
cmp
ret
xorl
test
adcb
xchg
cli
inc
imul
mov
cld
or
mov
rorb
mov
outsb
cmp
addb
push
ret
add
out
add
sarb
pop
js
dec
push
jge
in
and
xor
jmp
push
cmpsl
in
xchg
sbb
sbb
into
and
fcmovne
mov
mov
mov
roll
cmp
nop
repnz
lret
and
aas
fwait
xchg
jle
fdivrs
cmp
sub
inc
mov
cmp
mov
cltd
mov
sbb
icebp
or
jp
lock
jbe
inc
int
test
or
mov
mov
pop
push
push
xlat
das
xchg
adc
sbb
shll
out
xchg
es
xchg
cmp
mov
arpl
or
jle
jae
rcr
push
pop
add
mov
add
into
dec
addl
loop
fstps
out
pop
clc
xchg
mov
jbe
icebp
js
insb
test
add
sbb
xor
mov
adc
jne
xchg
cmpsl
divb
and
in
dec
push
adc
inc
les
lock
lods
push
adc
xor
xor
jecxz
and
outsl
xchg
mov
add
sub
sbb
out
add
addr16
pop
outsl
mov
lods
cmpsl
cmp
xchg
scas
add
adc
js
dec
out
hlt
call
dec
insb
sub
and
mov
ljmp
mov
mov
stos
icebp
pop
lret
mov
sub
test
shrb
test
cwtl
test
jmp
fs
jecxz
add
push
cmp
xlat
dec
loop
push
je
cmp
and
loop
sti
push
pop
jae
add
mov
clc
out
or
mov
inc
pop
lods
out
xor
das
popf
adc
jmp
pop
aas
mov
cwtl
rcrl
addr16
pop
or
divb
xchg
movsb
mov
test
pop
add
xchg
add
pop
not
inc
andb
shlb
out
aam
push
jb
test
lock
lods
sub
push
fcomps
cmp
into
cld
or
add
enter
cmc
push
or
scas
jnp
loope
movsl
gs
hlt
push
cmp
lret
and
pop
mov
mov
lock
inc
sti
nop
lods
add
cli
fstps
add
std
in
daa
pop
add
pop
adc
nop
repz
sbb
jno
ljmp
pop
clc
stos
icebp
and
into
mov
add
mov
cmc
push
lea
sbb
les
cld
enter
mov
pusha
out
xchg
sub
mov
xor
in
and
fdivl
dec
in
ja
push
sbb
or
shrb
movsb
fidivrs
mov
in
fisttpl
imul
cmpsl
mov
jbe
mov
sbb
dec
mov
inc
or
aam
push
lods
call
ret
scas
and
fnstcw
jns
or
pushl
or
cltd
add
cmpsl
mov
shrl
scas
bound
xchg
and
adc
outsw
add
test
or
ror
out
inc
pop
and
or
je
push
jne
jl
inc
mov
xchg
pop
dec
sbb
cmp
popa
jg
inc
pusha
jecxz
jb
sbb
incb
fs
mov
jle
dec
in
addr16
jecxz
in
mov
mov
leave
std
fisubs
aas
xchg
pop
arpl
out
sbb
cs
in
pop
push
add
adc
es
inc
and
repnz
mov
test
xchg
push
out
popa
dec
sbb
movsl
xor
ret
pop
dec
imulb
cld
loope
mov
inc
stos
nop
repz
ja
adcl
dec
mov
dec
aaa
mov
sbb
int
in
jbe
pop
mov
pop
rol
adc
out
mov
dec
es
out
call
sub
jne
stc
stos
loope
push
pusha
push
movsb
cli
adc
shr
push
fiadds
jae
cmpsl
rol
sbb
out
pop
in
shrb
xor
lret
push
push
inc
mull
inc
lods
mov
stc
cld
dec
fisttpl
enter
mov
int3
sub
dec
insb
pop
push
daa
or
icebp
cmp
xchg
jo
jo
push
sbb
jmp
pop
jae
xchg
es
jge
andb
std
adc
icebp
test
cwtl
jle
push
pop
mov
ss
jge
jge
add
insb
lcall
bound
xchg
sarl
push
cmc
mov
xor
cwtl
test
or
mov
lds
cmp
inc
push
int
mov
jb
cmpsb
jle
dec
dec
leave
mov
jge
jecxz
iret
pop
fisttps
jae
push
sbb
aam
sub
inc
inc
or
sub
pop
out
pop
daa
inc
das
iret
sub
adc
and
out
jae
repz
out
outsl
out
pop
lcall
add
adc
xor
jo
or
jecxz
mov
jg
iret
mov
in
lret
andb
pop
clc
ret
lods
cld
scas
push
dec
js
jb
ds
pop
lret
aad
fcoml
mov
sbb
inc
iret
sti
push
iret
push
push
xlat
mov
jb
cmp
push
clc
imul
jmp
xor
sub
fstps
jmpw
out
mov
and
pop
xchg
addr16
cmp
xor
cmp
inc
push
xor
dec
inc
mov
jns
xor
push
out
out
xor
or
cltd
adc
je
movsl
idiv
mov
sub
pop
dec
je
fadds
divl
push
dec
outsl
stc
pop
shl
sbbl
insb
dec
or
or
adc
fsubl
jbe
fs
push
add
out
mov
in
cmpsb
inc
inc
or
sbb
xchg
imul
movsb
pop
fcompl
imul
in
incl
hlt
fdivrp
jg
data16
cmpsl
lahf
inc
dec
lock
cli
lret
dec
cmc
lret
mov
mov
cmpsb
mov
push
cmp
lock
or
xchg
cmp
push
add
gs
es
or
popf
xor
inc
call
ret
mov
imulb
out
push
adc
fs
mov
xchg
loopne
hlt
gs
test
fiaddl
lahf
into
repnz
std
dec
dec
mov
test
xor
fstl
adcb
cmc
ret
and
mov
sarb
addl
cs
xchg
mov
pop
not
cli
shl
mov
jg
clc
xor
fisttps
icebp
add
js
leave
dec
imull
stc
mov
pop
aas
test
nop
xchg
mov
in
lahf
mov
adc
mov
sbb
sbb
mov
push
push
sub
bound
add
push
cmp
cmpsl
ret
mov
lahf
dec
test
lods
andl
inc
mov
push
mov
adc
mov
loope
ja
in
sbb
lods
lret
out
gs
adc
sbb
mov
inc
xchg
orl
notl
orl
jl
test
fmuls
pop
jnp
pop
pop
sbb
ret
ss
sub
lock
pop
jl
std
inc
xchg
stc
or
in
jmp
sub
mov
add
mov
and
ret
stos
jbe
movsl
ljmp
scas
sbb
sbb
sbb
pop
add
pop
dec
icebp
ret
mov
sarl
cmp
es
sub
sahf
mov
shlb
aad
in
ljmp
mov
sub
add
mov
pushf
fwait
les
adc
pop
clc
nop
fdivs
or
cli
jnp
and
ficoml
data16
jmp
loope
push
ljmp
xchg
jbe
xchg
cmp
in
xor
cmp
push
push
leave
xchg
xchg
or
ret
icebp
mov
ss
and
inc
push
pop
sbb
fcoms
jns
dec
xlat
inc
jnp
mov
jmp
outsb
dec
sub
hlt
das
scas
addr16
xchg
fimull
mov
pop
lods
test
mov
sahf
mov
push
add
mov
pusha
aad
dec
pop
stos
movsb
sub
jbe
lock
push
ret
sub
pop
rclb
stos
out
mov
push
ds
mov
outsb
inc
aaa
jl
pop
mov
pop
out
adc
mov
dec
ret
mov
sbb
lea
xchg
out
or
inc
cmp
push
cld
imul
sbb
and
cmp
mov
lret
dec
repnz
in
push
sbb
adc
xchg
repnz
pushl
cmp
sub
popa
nop
jnp
ljmp
dec
mov
xchg
cmpl
rcr
sub
jg
or
mov
lcall
stc
iret
lret
out
cwtl
stos
and
scas
dec
imul
jl
dec
js
stos
cmc
cld
xchg
pushf
orl
stos
jns
cmp
aas
dec
xchg
clc
repz
sbb
push
inc
cltd
ja
out
jl
add
jle
out
jno
dec
push
mov
push
loop
inc
pop
dec
inc
mov
add
fdivs
mov
sub
aam
xor
stc
jne
pop
roll
lcall
mov
xchg
cmc
mov
flds
aas
and
or
mov
mov
jbe
or
mov
test
es
cmc
ret
pop
aad
inc
lret
loop
das
test
jno
jne
out
scas
push
testl
in
push
jg
scas
clc
std
and
test
mov
inc
pop
cwtl
insl
inc
fnstenv
xchg
cs
stc
mov
nopl
pop
bound
lahf
xor
fiadds
ds
addl
sub
movsb
xor
in
sub
and
cmpl
xchg
lock
inc
aam
mov
lds
cld
leave
cmp
dec
jae
lock
bound
add
mov
test
iret
aad
aam
push
or
sub
rcrl
mov
ficomps
lods
sti
dec
sub
cld
imulb
lock
mov
jp
xlat
jp
stc
mov
std
inc
scas
maxps
call
mov
outsb
ja
fisttpl
and
dec
sbb
outsb
dec
xchg
sbb
fwait
popa
lcall
insl
push
jp
jb
cs
xor
push
adc
cmpsb
jmp
out
ret
pop
in
lahf
iret
fdivl
stos
int3
add
cmp
xor
add
and
adc
aaa
mov
ds
jae
pop
adc
rorb
test
cmpsb
negb
dec
add
dec
mov
imul
mov
cwtl
lock
mov
or
and
cmpsl
pushf
mov
dec
xchg
std
xchg
push
fs
lock
add
int
scas
rolb
dec
shll
mov
mov
push
xchg
push
pop
xchg
sub
fs
out
sbb
lahf
pop
lds
and
mov
dec
out
xchg
out
push
loopne
test
sbb
and
imul
mov
or
pusha
xor
fsub
fdivp
or
lahf
xor
movsl
enter
orl
adc
pop
aaa
test
pop
xor
mov
cmpsb
mov
fistpll
mov
sub
vpunpckhdq
or
bound
and
mov
push
imul
fwait
rolb
xor
insl
cld
cmpsb
hlt
hlt
cmp
fbstp
dec
data16
push
push
insb
nop
lds
add
arpl
sub
mov
add
pop
jp
insb
cltd
aas
addr16
and
loopne
es
stc
mov
mov
add
ud1
fs
clc
enter
lods
aas
adc
jl
js
leave
nop
mov
cmp
add
or
and
mov
lds
jae
inc
add
cmp
pop
mov
sarl
sub
pop
clc
roll
bound
pop
mov
stc
fwait
pop
xorb
sbb
stc
jnp
and
xchg
dec
lods
lods
sbb
xchg
gs
sbb
sub
scas
sbb
pop
adc
pop
out
inc
pusha
jl
inc
pop
add
or
or
and
lods
fisubs
xchg
pop
inc
rolb
xchg
cltd
mov
mov
xchg
out
stos
orb
sub
dec
pop
outsl
adc
repnz
dec
pop
out
pop
in
and
cmpsb
mov
test
pop
xor
pop
pop
into
test
scas
scas
xchg
cltd
test
lret
es
cmc
testb
lods
add
mov
filds
or
or
repz
mov
jl
stos
jns
stos
add
outsb
das
rcr
cs
jmp
ljmp
sub
lock
jb
lret
test
test
jg
xor
scas
adc
jge
dec
mov
or
cmc
xor
mov
push
cmp
js
lret
mov
in
xor
mov
and
aas
in
jl
cmp
xchg
jns
xchg
cmc
mov
xchg
fistpl
add
pop
inc
fdivl
lock
sti
add
push
imul
pusha
addr16
cs
or
and
decb
or
lock
add
ds
pop
in
sub
dec
dec
fs
pop
xchg
pop
pop
gs
cmp
cli
lret
xlat
or
lods
xchg
dec
fimuls
inc
adc
lock
mov
push
dec
shll
xchg
mov
in
add
inc
scas
and
scas
ja
inc
cwtl
mov
sub
xlat
push
leavew
xlat
icebp
loopne
pop
dec
pop
stos
dec
mov
std
add
cmc
lcall
add
and
mov
rorl
stos
ljmp
jb
push
dec
cmp
adc
xor
ja
lods
arpl
mov
lret
repz
adc
and
cmp
daa
fstps
dec
adc
ds
jb
cwtl
std
push
add
inc
jle
das
loop
roll
aad
push
pop
mov
xchg
rclb
scas
sbb
es
xchg
sub
enter
sahf
xchg
stos
adc
out
cmpsb
dec
rcrb
sub
ss
rorl
add
inc
mov
dec
add
scas
mov
and
lcall
arpl
dec
aam
outsb
out
in
pop
xchg
pop
cmpsb
pop
jbe
lahf
lret
aad
scas
lret
lods
or
inc
mov
fists
mov
aas
cmp
jmp
adc
mov
or
jne
js
mov
dec
cmp
imul
lcall
mov
or
mov
pop
dec
pusha
in
pop
xchg
es
cli
pop
sub
lods
push
adc
test
xor
in
pop
sbb
mov
dec
sub
pop
sbb
xchg
mov
xor
sti
pop
in
mov
pop
nop
int
fildl
sub
out
lret
or
mov
std
in
jg
cmp
in
or
imul
ret
arpl
mov
cmp
stc
inc
out
dec
aaa
in
movq
mov
call
fcmovnb
mov
fistps
jne
jns
adcl
scas
sub
and
pop
lods
shlb
pop
jns
repz
movsl
mov
cwtl
icebp
cmpsl
mov
mov
mov
cmp
or
pop
enter
jae
testl
rorb
push
dec
adc
xchg
and
les
push
sub
setge
test
mov
xlat
out
sub
sbb
pop
push
lods
bound
loope
or
dec
data16
and
dec
pop
adc
mov
xor
sub
insb
dec
outsl
mov
enter
cmp
push
test
mov
aas
out
mov
imul
mov
jecxz
push
les
cld
adc
sbb
xorl
std
xor
xchg
pop
mov
mov
mov
mov
and
pop
dec
mov
insl
and
cmpsb
hlt
inc
shlb
shlb
shll
sahf
mov
xchg
push
int3
push
push
mov
pop
xchg
sub
daa
rcll
inc
ja
mov
aad
mov
rorl
xchg
jmp
mov
or
xchg
das
push
lods
mov
sbb
fildll
dec
cmpsb
sahf
fcomp
cmp
insb
in
fs
dec
aad
outsl
jno
pushl
xor
stos
cmp
loope
cmp
inc
pop
test
push
pop
jbe
dec
or
outsl
fwait
shll
aas
add
out
dec
lret
jne
sarl
sarb
push
fldl
outsl
sub
test
push
or
addr16
jle
xchg
inc
loopne
jp
cmp
mov
push
push
jno
call
out
or
push
mov
fnstcw
ret
xchg
inc
inc
adc
imul
out
push
cmp
xchg
inc
sub
pop
jmp
sub
mov
mov
rcll
in
sahf
jno
jnp
mov
subb
sub
aas
dec
fistps
cmp
movsl
movsb
cmp
jns
outsb
mov
ss
test
cwtl
push
push
push
adc
iret
int3
add
add
shrl
bound
push
xchg
push
mov
lods
mov
adc
sub
ljmp
mov
int3
and
dec
mov
xchg
sub
lcall
jnp
mov
jmp
test
adc
dec
jle
scas
pop
repz
add
frstor
xor
mov
mov
cmpsb
cmpsl
pop
daa
pop
pop
pop
int
xchg
and
std
call
test
hlt
cmp
xor
test
ljmp
jbe
xor
mov
and
mov
cmp
mov
in
nop
ret
or
outsb
das
subb
pop
xchg
pop
sub
or
dec
and
sbb
jnp
mov
sahf
mov
dec
and
lods
stos
dec
lea
jl
dec
jb
and
add
fisttpl
test
and
xchg
sbb
mov
add
ficomps
je,pn
out
mov
push
int3
or
insb
in
mov
fistpll
bound
push
pusha
sbb
add
fsts
adc
fisubrl
mov
cmp
std
bnd
pop
cwtl
popa
add
fisubrl
xchg
jmp
inc
xchg
cmpsl
scas
inc
mov
inc
push
cmpsb
mov
push
test
mov
xchg
ljmp
add
stos
dec
insb
shl
mov
cmp
inc
and
push
loope
xchg
lds
call
decl
shrb
and
xchg
inc
jecxz
in
dec
or
push
out
mov
mov
adc
rcrl
repnz
xchg
xchg
jp
cmc
loop
mov
mov
mov
push
inc
cmp
inc
insb
add
mov
sub
xor
loop
cmpsb
mov
shr
repnz
imul
pusha
cmpsb
mulb
sub
loopne
dec
or
mov
les
dec
mov
fdivs
dec
inc
xchg
loop
inc
adc
pop
bound
push
aad
out
xor
imul
xor
ja
sbb
cs
in
xorl
push
in
in
jnp
fstps
repnz
test
adc
inc
cmc
lret
mov
jae
jmp
xchg
in
cmp
pop
repz
insl
aaa
pop
inc
mov
or
rcll
dec
lcall
and
add
popa
jmp
push
sbb
sub
sbb
bound
xchg
cmp
push
inc
xchg
xchg
gs
push
mov
mov
stos
imul
ret
inc
fwait
inc
jmp
push
mov
xlat
dec
rorb
push
inc
loopne
or
lret
xchg
fs
sar
jg
fimuls
gs
push
sub
jmp
fsubs
dec
in
xor
or
clc
xor
ss
pop
cltd
mov
dec
xor
mov
les
loop
inc
roll
jae
xchg
into
imul
pop
js
pushf
and
mov
fs
rolb
sub
scas
inc
into
icebp
out
scas
mov
inc
add
out
xchg
loope
pop
das
fs
stc
push
popa
das
pop
das
repz
xchg
cld
sarb
fcmovnb
out
cwtl
mov
and
iret
enter
mov
sbb
cs
faddp
pop
mov
repz
cmp
dec
lret
decb
and
inc
cmp
aas
xor
bound
std
cwtl
pop
push
sub
mov
inc
bound
lods
add
or
sub
and
int3
adc
xor
dec
jns
jns
insl
ja
dec
outsb
jecxz
scas
negb
push
sub
cmpsb
clc
adc
lcall
aaa
xchg
inc
mov
push
out
inc
pop
sub
xlat
sbb
xchg
sub
sub
dec
cwtl
aad
mov
stc
xor
cmp
push
iret
lds
imul
ljmp
pop
or
mov
stos
sbb
dec
mov
inc
sub
jbe
sbb
es
cmpsl
imul
lcall
sbb
outsb
rcll
push
int
jecxz
dec
jp
dec
ret
inc
mov
icebp
mov
test
fidivl
cmpsl
ds
not
dec
fists
dec
adcb
jg
insb
hlt
xchg
mov
jg
sbb
in
mov
and
shlb
adc
sub
add
fld1
xlat
cmp
rorl
icebp
ffreep
pop
inc
cld
lcall
fsubs
and
lds
add
mov
dec
cmp
sub
pop
and
and
outsb
push
repz
call
ds
mov
xor
outsl
xchg
fmuls
xchg
mov
das
push
push
jb
test
adcb
and
inc
je
sub
sub
and
inc
shrl
insl
xchg
repnz
cld
out
jmp
or
pop
mov
mov
fwait
loope
out
jmp
adc
rclb
xor
fiadds
aas
cwtl
dec
cwtl
add
mov
mov
mov
shll
push
roll
push
mov
xor
push
outsl
xchg
stos
mov
aaa
jbe
dec
lcall
adc
or
test
icebp
adc
loope
mov
sub
dec
incl
jg
mov
adc
lcall
mov
jb
cmp
xchg
inc
cmp
lcall
inc
pusha
xchg
popa
inc
fwait
push
test
lods
fdivr
ret
test
cld
les
imul
test
out
out
hlt
xor
frstor
push
mov
aas
mov
lahf
fstl
out
adc
mov
fnstsw
push
or
mov
mov
loop
mov
push
jb
idiv
fimuls
sbb
sbb
dec
push
loope
or
fmuls
out
ffreep
sbb
das
jbe
xorb
scas
test
shl
daa
inc
push
iret
mov
outsl
fstpt
out
ret
das
mov
rolb
test
popa
in
cmp
sti
xor
jbe
inc
xchg
lret
arpl
adc
out
xor
push
out
pop
aad
enter
dec
dec
fwait
lret
or
mov
lea
push
into
mov
fcoms
fbld
pushf
dec
cwtl
orb
and
sbb
xchg
xchg
dec
mov
data16
xchg
imul
or
out
in
loope
cltd
cld
outsl
movb
ss
imul
xchg
pop
lea
jno
js
imul
mov
loop
leave
dec
cltd
jo
xlat
ficomps
nop
xchg
and
xchg
jl
ljmp
xchg
sti
inc
lahf
clc
jg
add
or
fists
mov
mov
add
sub
loope
mov
out
pop
insb
sub
dec
and
pop
jg
xchg
rorl
es
pop
push
cld
xchg
test
cltd
xchg
mov
popf
outsb
jp
inc
outsb
pop
add
inc
aas
bound
insl
adc
mov
inc
pop
mov
cli
push
jns
push
insl
cmpsb
cmpsb
push
call
pop
add
push
daa
loope
stos
xchg
push
lret
mov
or
and
push
push
pop
sub
cmc
mov
pop
xor
xchg
mov
cmpsb
or
push
mov
push
jbe
adc
out
fldenv
frstor
lahf
inc
jecxz
lahf
pop
jne
pop
ja
xchg
ljmp
cmp
cmpl
dec
mov
into
lea
xlat
add
push
test
mov
and
mov
jmp
movsb
sti
nop
scas
sub
inc
inc
adc
inc
fs
push
les
push
xchg
push
andl
shrb
cwtl
mov
into
sahf
pusha
xor
cmpsb
imul
sti
cld
mov
sbb
icebp
xorl
or
rcr
je
sub
fidivl
test
mov
or
lds
adc
xor
les
xchg
jo
pushf
out
or
mov
sub
lea
in
loope
xor
mov
mov
and
add
lret
lock
test
and
pop
xchg
test
sbb
sbb
outsb
movsb
into
mov
jno
cmpb
shl
in
dec
mov
arpl
inc
mov
xchg
fsubl
jmp
cltd
and
out
stos
mov
int
or
mov
out
lods
hlt
test
cmp
mov
ljmp
xlat
int3
mov
scas
mov
and
ljmp
and
pop
lahf
jg
aas
add
jne
sub
nop
test
bound
out
jbe
fmull
mov
mul
stc
xor
push
dec
stos
mov
sub
stos
add
pop
xchg
ret
add
jecxz
test
ficoml
xchg
arpl
sbb
add
xchg
cltd
inc
cltd
clc
mov
jno
cmp
stos
inc
push
enter
loope
push
sbb
and
outsl
mov
jae
mov
sbb
movsl
inc
jbe
push
xchg
jg
pop
pop
jbe
out
lahf
insb
in
in
jne
inc
rcr
mov
push
dec
jmp
test
push
dec
int
lods
cmpsl
mov
jnp
outsl
pop
nop
cmpsb
xlat
mov
in
lock
lods
cmpsl
pop
inc
lea
jne
into
outsl
push
mov
pop
sarl
mov
in
cltd
leave
xor
xchg
adc
sbb
in
adc
mov
test
push
and
or
test
push
xor
sub
push
push
xchg
xor
adcl
cwtl
stos
clc
inc
shrb
xchg
mov
fistl
mov
mov
mov
jb
aam
enter
adc
push
nop
lcall
pop
xor
ret
jmp
cmp
out
push
pop
dec
pop
jno
mov
andb
xchg
push
fs
fldcw
and
cmpsl
xchg
in
orl
daa
adc
sbb
testl
das
xchg
lret
nop
sub
repz
fcmovnb
or
pop
shlb
jecxz
dec
adc
lret
aad
xor
push
insb
xchg
mov
std
cwtl
movsl
aaa
aam
xchg
cmp
mov
stos
into
cld
fsubrs
pop
out
sub
dec
pop
inc
jl
adc
js
sub
in
add
push
jl
rorl
pop
cmpb
or
dec
out
and
jne
push
cmpl
stos
test
in
mov
ret
rcl
aaa
in
cld
arpl
pusha
or
out
jle
andl
xor
push
lods
add
pop
stc
xchg
jp
adc
push
mov
dec
faddl
dec
push
icebp
dec
and
pop
xchg
mov
data16
subb
notb
and
xlat
popf
jbe,pn
jns
jbe
and
mov
ficoml
dec
xchg
lods
inc
lcall
pop
dec
mov
push
arpl
xor
xor
push
test
xchg
jle
movsb
sbbb
xor
int3
fstl
popf
cmp
shll
dec
push
or
sbb
stc
enter
push
ss
popl
sub
add
cwtl
pop
jae
sti
rorb
sub
loop
movsb
inc
cmp
cmp
fldenv
pusha
je
add
hlt
push
add
sbb
leave
pop
test
mov
outsl
lock
cld
test
test
jg
ljmp
ja
add
fimuls
fdivr
enter
repz
add
dec
and
ret
add
inc
cwtl
dec
jg
push
cmpsb
jl
in
jno
jb
mov
sbb
hlt
movsb
mov
dec
lret
sub
or
mov
xchg
or
lock
or
dec
pcmpgtd
clc
cmp
xor
out
aad
pop
arpl
dec
sti
push
jae
sahf
push
and
mov
add
mov
and
mov
xor
cwtl
xchg
stc
je
xchg
cmp
cmc
mov
sbb
add
rorb
or
mov
mov
mov
int3
xor
mov
movsl
push
add
push
jle
or
inc
sbb
xor
cmp
outsl
sub
mov
fwait
mov
hlt
push
cltd
loopne
mov
mov
push
aam
test
pop
sub
xchg
pushf
push
mov
inc
icebp
stos
nop
aad
rcl
std
rol
enter
cmc
ret
xor
inc
roll
bound
stos
jecxz
pop
or
mov
sbb
mov
loop
xchg
or
mov
cld
call
sti
jmp
xchg
sbbl
mov
mov
ljmp
mov
add
dec
cmpb
mov
mov
ficoms
stos
andb
lret
sub
cmp
pop
jo
aad
xchg
dec
pop
push
mov
push
lahf
push
dec
and
fisttpl
aas
jno
mov
hlt
imul
pop
or
dec
iret
pop
rcl
pushl
xchg
cmpsb
xor
lods
rorl
insl
lcall
stos
fimuls
daa
lods
pusha
aaa
repz
andl
xchg
jnp
out
cmc
leave
subb
outsl
mov
bnd
loop
stc
pushf
ss
mov
cs
mov
pusha
and
clc
add
ret
pop
sti
dec
cmp
or
ret
add
jmp
cmp
std
mov
add
aas
cmp
push
xor
push
cmc
dec
mov
inc
mov
dec
jmp
mov
lret
in
int3
adc
jecxz
int
push
and
fisttpl
call
mov
xor
enter
negl
push
pushf
into
repnz
xor
ljmp
or
dec
xor
cmp
faddl
scas
dec
jbe
xor
andb
inc
dec
negl
loop
jmp
sub
cld
mov
insl
push
fstps
popa
mov
or
clc
mov
push
dec
mov
jno
adc
push
sbb
mov
inc
rcrb
ret
inc
fistpl
cmp
sbb
fwait
add
movsl
push
jo
lods
pop
cld
xchg
into
add
das
repnz
not
xor
into
fwait
jp
gs
xor
add
xor
or
repnz
rcrl
mov
jl
sub
xchg
test
es
mov
in
push
pop
divl
idivl
inc
outsb
cmp
clc
add
and
lret
lret
mov
out
dec
aad
sub
jmp
adc
jle
mov
cmp
shrl
stos
cmc
stos
xchg
js
popa
pop
fsubrs
fwait
mov
in
testl
xor
scas
pusha
add
stc
jne
sub
dec
push
sbb
sbb
iret
xchg
xchg
ret
iret
cwtl
push
scas
loopne
shl
shlb
ja
mov
aaa
cmpsl
ret
sbbl
cmc
sbb
pop
push
jb
lret
mov
mov
push
fldt
push
hlt
addb
lcall
xchg
rorl
loopne
xor
int
mov
ror
pop
repz
mov
sbb
push
sub
les
cltd
cmpsb
xor
fnsave
addr16
inc
add
pop
sti
jmp
aam
mov
ljmp
shl
xor
mov
shrl
lahf
leave
or
scas
test
xor
mov
mov
sub
ja
xor
mov
loope
ss
test
cltd
dec
clc
cmp
mov
xor
aad
xchg
jbe
movl
mov
test
mov
iret
ficomps
cmp
push
add
bound
call
lods
push
push
mov
cli
repz
jb
dec
xorl
dec
int
addr16
add
mov
mov
jge
inc
sub
mov
imul
aas
or
sahf
dec
fistps
mov
sub
sub
out
push
jmp
jecxz
or
int
dec
sbb
jb
mov
jno
sub
dec
xchg
sub
std
xor
aad
shlb
or
and
jg
mov
cltd
lret
mov
push
add
adc
shl
mov
mov
cmpsb
mov
outsb
sbb
xchg
aas
rol
loope
or
stc
push
pop
pop
lret
jl
and
dec
sub
mov
lods
cmpsl
into
adc
hlt
push
pop
lret
mov
shrl
sbb
aam
loopne
out
adc
rol
push
mov
clc
call
mov
scas
test
ror
xorb
sub
addr16
into
outsl
add
enter
push
inc
je
mov
mov
push
pop
and
cmp
clc
dec
ror
push
fisttpl
or
test
jns
push
les
test
xor
sub
in
xchg
popa
shlb
xchg
mov
out
dec
fbld
inc
lahf
push
jbe
pusha
xlat
pop
push
out
sub
enter
jbe
cmpsl
adc
dec
push
clc
dec
push
jge
insl
pop
setno
push
repz
sbb
adc
into
mov
or
mov
adc
cmp
dec
inc
sbbl
push
inc
inc
lcall
in
loop
mov
sub
mov
adc
jmp
or
jge
mov
jo
push
int3
mov
sbb
adc
mov
aas
xor
mov
leave
push
lods
pop
cli
sub
pop
int
dec
ss
mov
add
leave
jns
cmp
lret
shlb
loop
mov
jb
adc
xchg
inc
mov
push
out
repz
add
fdiv
cmpl
dec
xor
shlb
data16
xchg
loope
ret
mov
fiaddl
lods
loop
arpl
cs
xchg
xchg
int3
cmp
pop
mov
leave
inc
shl
das
cs
pop
push
or
loop
mov
clc
clc
inc
enter
xchg
xchg
jp
mov
das
mov
xchg
xchg
inc
popw
out
mov
ds
push
pop
or
cld
push
xchg
loope
mov
jecxz
test
das
or
xor
jns
faddl
mov
in
mov
rcrl
lods
call
fs
or
stos
mov
and
jo
fdivrp
imul
out
aas
mov
das
dec
aad
movsl
xchg
les
mov
inc
lret
in
fs
and
pusha
lcall
seta
das
xchg
cmp
dec
rorb
lret
pop
sub
pusha
in
in
jnp
pusha
cs
cmp
jge
data16
call
mov
addl
stos
mov
imull
cmp
in
daa
loope
mov
cmp
ljmp
adc
mov
movsl
ds
adc
out
xor
inc
fsts
sbbl
addb
cmp
mov
mov
jmp
xchg
in
mov
call
cmpsb
push
pop
xor
jnp
les
jnp
inc
mov
lods
aaa
mov
loop
lahf
sub
jnp
test
and
sub
push
push
and
inc
pop
insb
inc
jnp
aam
fbstp
or
fwait
jecxz
xchg
imul
and
lods
sahf
sub
movsb
jns
mov
imul
rorl
or
pop
in
and
mov
sbb
push
orb
aaa
stos
out
and
shll
das
sbb
push
mov
lret
sar
add
jb
fcoml
push
loope
mov
sbb
shr
sub
push
out
ret
inc
cmp
out
loop
mov
addr16
adc
adc
xor
cmc
pop
das
fbstp
mov
in
rcpps
and
cld
push
sahf
sub
jnp
xchg
xor
test
sbbb
testb
or
dec
xorb
cmp
or
mov
pop
subb
popf
loop
es
xor
sbb
sub
sbb
mov
dec
shl
mov
adc
sbb
dec
cmp
or
xchg
fs
divl
loopne
cmp
inc
fisttpll
push
cmp
mov
or
sbb
xchg
enter
jp
dec
dec
stos
js
cmpsl
loop
mov
mov
cld
pop
push
rcl
test
or
daa
dec
stos
daa
xchg
jmp
jnp
addr16
in
cs
adc
repnz
popl
push
sbb
mov
pop
outsl
inc
jmp
int3
fwait
sahf
dec
repz
dec
or
xor
in
das
imul
cmp
push
push
test
xchg
fistps
push
sti
mov
addl
or
adc
stos
push
fwait
pop
dec
fcoml
xchg
inc
in
sbb
mov
clc
fisubl
insl
enter
fs
outsl
pop
cmc
shrb
int3
push
jb
mov
lock
lock
xor
pop
call
and
fbld
fsts
mov
scas
rcll
xor
adc
cmp
jo
arpl
and
outsl
int
and
test
mov
jns
pop
xchg
insl
pop
sbb
or
data16
mov
pushf
dec
cmp
sub
pop
cli
mov
cmc
sahf
push
sbb
sub
mov
push
arpl
lcall
loop
inc
les
dec
fisubrl
adc
addr16
loopne
out
fdivrl
in
loopne
enter
aas
add
rorb
outsl
cmp
outsb
and
sbbl
xchg
mov
pop
pusha
and
ret
lahf
jnp
sbb
inc
adc
imul
fucomip
mov
xchg
mov
ss
and
lods
adcb
adc
popf
mov
lret
ret
popa
clc
jp
and
lods
pop
xor
or
jno
mov
lahf
popa
std
mov
out
call
add
xchg
xlat
inc
jmp
jg
filds
dec
lods
push
xchg
mov
and
int3
aam
adc
jno
fwait
mov
push
cmc
push
test
inc
fsubr
call
sub
mov
inc
push
mov
scas
and
leave
jmp
das
jp
mov
clc
mov
sub
dec
adc
lret
xchg
cmp
sbb
lds
jp
mov
push
xchg
lahf
dec
push
test
ret
gs
sti
cmp
imul
lahf
push
push
jne
jl
adc
mov
mov
inc
pop
int3
ja
sbb
pop
sub
jmp
loopne
pushf
pminub
push
jl
loopne
lret
xor
shlb
inc
call
sbb
pushf
adc
addr16
pop
xchg
sbb
das
xor
dec
jl
push
pop
loopne
xlat
or
push
loopne
cwtl
pop
test
fcmovnbe
push
xor
cli
xchg
push
add
jge
adc
imul
mov
and
or
shll
icebp
stc
cmp
std
fstpl
add
leave
and
dec
push
dec
xor
mov
adc
xchg
push
jle
mov
mov
test
int3
fs
mov
jp
dec
fdivrs
mov
out
adc
popa
xchg
pop
lret
dec
gs
push
je
dec
outsb
push
mov
or
loopne
adc
out
push
repnz
xchg
scas
pop
aas
xor
fnstenv
test
nop
inc
push
addl
daa
push
or
or
rcrl
ret
xor
push
mov
fmuls
insb
pop
mov
and
jno
xorb
inc
pop
popf
sbb
mov
jg
gs
inc
mov
mov
icebp
lea
loopne
enter
lds
mov
sbb
stos
pop
jp
xor
addr16
jge
xor
arpl
jae
fstp
mov
fbstp
xchg
xchg
xchg
add
push
lret
jb
pop
push
cmpsl
bound
lret
enter
enter
push
cwtl
sub
lahf
jno
imul
push
mov
inc
sub
rol
rcl
insb
add
test
cwtl
in
push
mov
test
xor
cld
pop
dec
mov
fdivrl
roll
mov
pop
jo
std
lret
or
inc
mov
sti
mov
push
mov
dec
stos
xor
dec
sub
jne
out
sbb
das
out
sbb
mov
fistps
in
sbb
push
into
int
leave
popl
jbe
sub
or
push
ret
fildll
xor
or
cmp
into
cmc
stc
sub
mov
jecxz
add
test
or
les
mov
fldlg2
mov
stc
cmp
lea
and
dec
push
push
mov
mov
out
mov
shrl
or
dec
nop
arpl
add
js
leave
bound
cmc
into
sbb
and
ret
loop
xchg
jecxz
push
cwtl
xor
jmp
xor
add
test
xchg
adc
imul
shrl
rorl
mov
aaa
ljmp
sbb
push
jo
fsubs
cmp
pushf
hlt
push
inc
ret
dec
or
out
cmp
decb
sub
push
mov
sahf
push
outsl
je
sub
flds
jno
into
fists
inc
push
sub
es
fdivs
jne
mov
pop
shll
xchg
pop
aam
aam
les
rorl
sarb
arpl
loop
pop
cwtl
push
add
jl
lock
dec
inc
cmpsl
insl
shl
arpl
into
cltd
movsl
lea
mov
shlb
orb
push
inc
enter
dec
ficoml
addr16
ds
dec
inc
jne
aaa
push
leave
stos
popa
push
sbb
aad
clc
jg
pop
arpl
test
nop
cmp
push
mov
inc
adc
inc
outsl
mov
adc
mov
push
push
lods
out
lea
push
idiv
test
ret
movsb
pop
xor
sbb
cmc
push
push
mov
mov
dec
ds
or
addr16
in
loop
rcll
and
cwtl
xor
negb
mov
test
je
pop
xchg
out
mov
pop
and
testl
mov
xchg
stos
add
lret
aam
xchg
data16
in
and
sahf
imul
mov
cmc
clc
pop
sub
push
xchg
adc
push
lahf
jg
es
pop
jecxz
jnp
je
loope
jle
mov
enter
js
data16
fistpl
sbb
in
jb
jae
lea
xlat
jp,pn
popa
movb
pushf
or
loop
and
sbbl
and
or
cmpsb
cmpsb
inc
out
push
mov
test
rolb
push
jns
mov
movsl
popf
in
mov
cmpsb
fimuls
and
fists
cmp
add
sarb
push
sub
pop
repnz
inc
arpl
lods
adc
jge
lock
xlat
mov
inc
call
push
fimull
repnz
inc
add
out
push
adc
popa
fmuls
xchg
cmc
dec
or
xlat
daa
cmp
mov
imul
ror
fmuls
std
mov
stos
sub
aas
pop
pop
or
push
pop
push
and
cwtl
cmpsb
pushf
mov
iret
pop
jb
adc
das
insb
and
fadds
call
stos
push
fimuls
hlt
test
je
sbb
ds
jl
data16
aam
nop
cmpsl
fxtract
out
xchg
cmp
in
fs
mov
je
adc
ja
fisubrl
shlb
dec
mov
inc
dec
testl
int
popl
pop
cmc
adcb
sbb
in
test
clc
daa
push
sbb
dec
xchg
loope
or
mov
out
dec
xor
sub
mov
xor
and
and
jnp
sbb
mov
sbb
icebp
add
dec
rol
adc
lock
addl
mov
iret
jge
sahf
fsts
push
sar
in
push
mov
xor
and
ret
pop
mov
sbbl
leave
test
or
mov
jl
adc
movsl
or
in
pop
mov
imul
aad
popf
push
push
cmp
pop
adc
inc
pushf
mov
ljmp
cs
pop
and
jb
test
dec
js
jl
popa
and
sbb
jecxz
mov
cmp
sbb
push
insb
leave
movsl
adc
inc
gs
xchg
jle
xchg
sbb
jmp
das
popa
sub
add
outsb
stos
movsb
scas
scas
out
mov
not
popa
sahf
and
pop
pop
pop
jae
xchg
mov
jecxz
pop
jno
fnsave
fistps
daa
fimuls
inc
pop
pop
mov
inc
lea
fldl
xlat
jno
popa
bound
mov
mov
pop
mov
negb
lahf
hlt
loopne
mov
roll
in
pusha
sub
push
dec
and
test
mov
pop
test
mov
dec
stos
adc
into
push
cmp
xor
mov
push
inc
dec
jno
mov
sbb
push
loope
xor
insb
mov
xlat
adc
push
mov
popa
mov
rclb
mov
cli
xchg
outsl
push
lcall
fs
push
fs
arpl
sarb
push
fwait
and
fmuls
pop
imul
inc
push
pop
xor
jnp
xchg
push
mov
int3
outsl
push
insb
push
or
nop
mov
scas
dec
mov
cmp
mov
inc
dec
addl
xchg
add
mov
push
ret
cmp
xchg
enter
aad
and
mov
cmp
mov
call
fcmovnb
pop
ret
xor
fsts
and
jnp
mov
fnstenv
out
movsl
mov
xor
nop
dec
shl
test
cmpsb
or
mov
add
inc
inc
test
lahf
pop
xor
adc
movsb
mov
scas
mov
push
xchg
jecxz
xchg
lret
popf
inc
adc
aam
push
mov
lcall
mov
xchg
out
lds
mov
scas
andb
xchg
xor
mov
inc
lods
mov
sarb
outsb
dec
add
jle
test
test
inc
in
pop
or
dec
cmp
jo
stos
call
aas
mov
and
jmp
sub
rolb
jmp
xor
repz
mov
test
and
add
loope
jns
mov
repnz
pushf
sub
push
add
leave
pusha
ret
into
sbb
mov
movsl
mov
iret
adc
ljmp
sub
jb
int
jmp
ds
mov
pop
imul
dec
fisubs
out
filds
dec
andb
sbb
inc
xor
inc
inc
cs
sbb
js
psllq
ret
pushf
mov
shrb
jg
push
arpl
pop
push
push
popa
inc
rcr
ffreep
stos
dec
shll
cmp
xchg
es
jno
out
push
mov
and
mov
xorl
pop
lock
test
imul
fnstsw
fsubrs
and
jbe
in
bound
bound
in
pop
push
xor
adc
cmpsl
pop
lahf
into
pop
xlat
les
mov
jp
xchg
out
je
sti
fisttpl
cmp
in
test
xchg
loope
pop
pop
loop
repz
out
outsl
or
sbb
and
movsl
out
ss
cltd
ss
mov
fwait
or
or
pop
jno
insb
std
repz
stc
addb
sub
mov
dec
push
daa
repz
mov
notl
sbb
sbb
dec
xor
lret
lds
enter
test
mov
outsl
aaa
adc
cmpsl
jg
inc
stos
mov
or
push
fstpl
and
jg
xchg
jae
pop
jp
jo
push
mov
cmovo
sti
sub
dec
xchg
push
fcmovb
enter
outsb
jmp
decl
xor
sbb
pop
pop
and
mov
push
dec
pusha
mov
push
ja
dec
xchg
pushf
mov
jp
popa
sarb
push
dec
sbbl
pop
repz
movsl
fwait
ret
pop
sbb
add
ljmp
pop
cwtl
in
test
dec
loope
jbe
xchg
rorb
xlat
mov
dec
dec
pop
mov
or
sub
sbb
sahf
lods
bound
sbb
int3
das
loopne
shll
scas
lret
in
pminub
jl
cmp
popa
cmp
loop
into
jecxz
xchg
sbb
cmp
mov
cmpsb
lcall
cli
dec
insb
jne
int
sbbl
push
inc
or
stos
and
pop
xlat
xchg
cli
jl
jle
mov
jae
mov
dec
int
add
push
out
push
sbb
outsb
mov
cli
arpl
xor
int3
out
pop
sbbl
mov
add
dec
jns
lods
push
les
stos
and
aam
pop
xor
inc
enter
xlat
inc
stos
aam
shrl
scas
hlt
mov
and
rcr
fnstcw
pop
xor
rclb
mov
pop
dec
lahf
sub
jb
gs
xchg
ss
jmp
dec
aas
or
sahf
fwait
mov
stos
cmpsb
jge
xchg
pop
test
mov
push
sub
jnp
nop
mov
push
pop
dec
cmpsl
fcompl
or
aaa
and
scas
mov
xchg
push
cmpl
inc
jp
xchg
in
push
push
add
or
aas
xchg
xor
cmp
adc
leave
insb
sahf
aad
cmp
push
out
mov
daa
imul
jl
xchg
cld
cmc
mov
insb
and
ljmp
mov
jmp
jns
out
xchg
jb
imul
xchg
sbb
popa
mov
sub
fs
subb
mov
sbb
inc
inc
or
sub
shl
pop
sbb
jl
leave
pop
outsl
test
mov
or
popa
dec
orl
mov
mov
lret
cs
aaa
mov
loopne
cmp
idivl
and
inc
jne
in
and
mov
mov
xchg
dec
test
cmp
mov
dec
cmpsl
jge
push
orl
mov
es
and
clc
cmc
stos
ficomps
xchg
jl
mov
mov
sub
test
jge
sbb
mov
popf
inc
sbb
loope
cmpsb
or
xor
pop
sub
shll
mov
inc
pushf
jmp
push
jo
pop
aas
sti
ss
mov
mov
mov
movsb
pop
and
dec
jae
push
cltd
xchg
cmpsb
int3
sbb
fisubrs
fisttpll
pop
jae
jl
es
dec
mov
push
arpl
xchg
shrb
pop
add
test
jge
xlat
sarl
pop
pandn
pop
jnp
sbb
or
scas
loope
das
aas
mov
gs
in
js
push
into
jg
icebp
into
daa
repz
inc
pop
push
orb
xchg
rcll
jle
and
or
or
mov
or
jbe
aam
stos
adc
jne
xchg
mov
repz
outsl
pop
lret
cmpsl
adc
mov
aas
je
push
sbb
mov
into
mov
nop
inc
and
int
cli
sub
ss
movsb
push
dec
out
nop
jg
jo
dec
or
ret
jns
mov
stos
mov
adc
xchg
mov
mov
lds
jns
xor
repnz
and
int3
pop
inc
rclb
test
inc
cld
addr16
cmp
out
sub
test
inc
das
adc
sub
lds
mov
sub
cmpsl
xorb
jns
inc
adc
jmp
fst
daa
popf
push
insl
jbe
add
add
mov
cmp
push
mov
jno
adc
lret
pop
pop
pop
rcl
mov
or
outsb
pop
hlt
or
xchg
or
decb
mov
testb
dec
push
and
jae
scas
dec
push
ret
xor
mov
jae
fildll
jg
pop
pushf
addl
sbb
jmp
push
subb
cmp
rorl
dec
push
stos
jnp
mov
sub
ds
and
adc
sub
sbb
sbb
jmp
push
pop
fnstenv
add
jbe
adc
adc
lea
nop
sub
outsl
lock
enter
mov
rclb
pop
cs
outsb
fs
mov
mov
mov
loope
lret
lods
mov
pop
mov
call
test
inc
jae
enter
and
sub
loop
into
out
push
adcl
mov
cmc
jecxz
pushf
dec
add
mov
lock
add
jno
sbbl
ss
cli
pop
add
outsb
inc
adc
insl
rorb
add
out
push
ror
sub
repnz
pusha
rolb
dec
flds
inc
mov
jo
leave
mov
int
aaa
clc
mov
sbb
pop
push
fidivs
enter
jl
fnsave
sub
ficoms
mov
or
rclb
sub
or
xor
popa
lods
int
out
inc
mov
fsubr
mov
mov
int3
nop
clc
jg
out
imul
insl
loope
pop
test
xor
dec
add
cmp
adc
mov
mov
dec
and
push
imul
mov
adc
rorb
and
mov
lock
cmc
dec
ljmp
mov
xlat
or
lahf
jmp
ffreep
data16
xorb
popf
push
popa
insb
mov
sar
dec
and
rolb
rcll
add
and
dec
pop
gs
add
cmp
imul
pop
das
push
cmc
sub
mov
xchg
cmp
add
pusha
leave
sub
sbb
negb
cmp
adc
aas
or
dec
cs
push
jge
mov
inc
dec
push
lock
inc
mov
fdivrs
mov
repnz
xchg
pop
in
jae
push
mov
lcall
sti
daa
test
in
mov
push
xlat
fisubl
ljmp
fidivl
cmp
gs
test
fidivl
mov
cmp
fwait
sub
out
adc
inc
pusha
lds
mov
jmp
fcmovu
popa
daa
jbe
jnp
add
mov
adc
mov
enter
adc
mov
or
sbb
movb
cmpsl
push
nop
outsb
jmp
xchg
mov
ss
dec
icebp
push
dec
or
jle
fidivs
movsl
jmp
nop
xchg
lods
pop
aad
aas
lret
insl
lahf
sbb
add
cmpsl
fwait
or
xor
push
fisubrl
mov
jo
xchg
pop
dec
pop
ds
data16
ljmp
jne
fwait
cltd
push
fs
mov
fimuls
jno
sbb
mov
and
mov
repnz
movsb
add
punpckldq
mov
shrb
xchg
mov
xchg
cli
pop
add
mov
add
leave
and
xchg
arpl
gs
dec
into
inc
loope
pop
jmp
jbe
enter
je
jl
int
pop
lcall
mov
or
xchg
mov
aaa
fadds
jno
xlat
cltd
xchg
xchg
fwait
adc
jg
sarb
mov
xor
pop
in
mov
in
stos
or
in
xchg
pop
xchg
dec
dec
mov
sbb
and
clc
jmp
lret
into
adc
xchg
lar
mov
push
adc
out
mov
add
pop
jge
sti
mov
or
mov
lcall
fwait
jnp
mov
fs
mov
jo
fldt
sbb
out
lcall
scas
pop
rcl
xchg
pushf
movsl
xor
xor
lahf
cld
xor
dec
loope
lds
pop
mov
add
jle
jg
sub
jae
sar
stos
scas
jge
xchg
xchg
stos
arpl
ljmp
out
gs
mov
sbb
ret
call
dec
add
insl
inc
push
daa
xchg
popa
out
es
sub
inc
cmp
xor
bound
pop
pop
pop
cmp
and
xchg
ss
push
cmpsl
cmp
push
mov
cld
repnz
push
cmp
pusha
mov
pop
adc
shr
imul
lret
xchg
cmp
scas
jl
shrl
xor
mov
fdivl
mov
stos
jnp
adc
out
scas
cltd
mov
jne
inc
push
lds
daa
mov
lret
out
in
xchg
mov
push
outsl
xor
cmp
call
pop
cltd
push
xchg
sbb
cmpsb
ja
xor
into
add
add
rcl
mov
cmc
adc
les
enter
or
sbb
in
mov
in
xlat
push
cltd
mov
xchg
cmp
pop
inc
push
mov
ret
add
pop
or
mov
push
shrb
shlb
out
fldt
sub
pop
fsts
hlt
ds
mov
stc
ss
and
shlb
fldcw
out
test
fidivrl
jno
enter
or
mov
jo
enter
sbb
mov
mov
adc
idivl
push
sub
mov
ja
push
xor
xchg
inc
icebp
int
pop
sbb
ret
mov
xor
mov
jle
ja
popa
es
add
scas
jns
testl
cs
pusha
leave
push
adc
mov
cs
mov
loope
fdivrl
jb
jne
add
or
out
dec
and
insl
outsb
jmp
adc
inc
js
sbb
sub
xlat
sub
xlat
bound
adc
icebp
or
jns
cmp
aam
arpl
sub
inc
sarl
sbb
mov
mov
mov
jne
or
inc
jg
incl
xchg
inc
adc
ret
test
in
jge
or
sti
imul
or
jno
pushf
fcoms
jge,pn
mov
and
push
ds
data16
adc
shll
leave
xor
pop
mov
or
dec
xor
mov
mov
mov
xor
pop
rcrb
out
pop
mov
jge
fistpll
in
sub
aas
push
push
pop
ficomps
xchg
cmpsl
js
adc
js
jae
cld
cli
fmuls
lret
sub
dec
rcll
jle
cld
mov
imul
test
push
inc
push
mov
mov
ljmp
loope
rorb
jns
or
and
in
add
aad
jb
dec
xchg
mov
call
add
mov
cmp
aas
negl
ficoml
lds
dec
out
jnp
mov
or
pop
sti
lock
push
mov
cwtl
mov
ljmp
or
clc
mov
scas
pop
or
inc
clc
movsl
inc
or
mov
jmp
xor
cmp
les
daa
pop
enter
pop
mov
fs
mov
jp,pn
nop
mov
push
cmp
stos
mov
pusha
out
push
lcall
mov
fmuls
inc
adc
test
cmp
imull
gs
xlat
fdivrl
fcmovnu
sub
insb
div
xor
adc
adc
into
mov
xchg
xchg
inc
hlt
lret
ret
cld
in
clc
pop
or
icebp
and
int3
sbb
mov
jmp
xor
mov
add
dec
xchg
lret
mov
jno
mov
in
in
ret
rorb
sub
cld
jnp
jp
mov
aad
stc
sbb
cmp
loope
pop
addr16
mov
push
sti
or
jns
hlt
mov
push
xchg
dec
mov
pop
insl
mov
nop
int3
mov
and
mov
add
js
jmp
repnz
mov
ret
mov
mov
fstps
dec
add
lcall
mov
fwait
icebp
pop
call
jmp
loop
cmp
or
dec
push
icebp
ss
into
inc
adc
adc
sbb
roll
mov
popf
push
lods
mov
rorl
pop
popf
cli
add
or
xchg
fsubl
pop
fidivs
jg
xchg
pop
and
nop
mov
fimull
jmp
popa
sub
cmpsb
push
imull
movsl
aam
clc
aas
sahf
jo
mov
pop
mov
cmpsb
inc
cmp
add
mov
push
adc
stos
shrl
sbb
sub
std
andb
push
inc
xor
fisttpl
fimull
mull
fnstenv
out
into
test
and
pushf
jp
lcall
inc
fbstp
and
fs
aad
sub
jp
pop
out
sbb
or
mov
dec
or
xchg
arpl
pop
jbe
pop
jae
lea
push
loopne
frstor
daa
cli
add
mov
xchg
popf
push
pop
data16
pop
lea
dec
mov
pop
jmp
les
pop
dec
adc
and
and
jp
sbb
fidivrs
or
add
repz
mov
add
std
fwait
loopne
adc
ret
add
out
sub
popa
push
xor
scas
in
sub
pushf
in
lret
and
cmc
xor
jnp
push
mov
jb
pop
cli
xchg
and
shlb
std
fsubr
nop
js
jge
shl
cmp
mov
out
subb
subb
xor
imul
popa
repz
int3
xchg
arpl
andb
sub
imulb
sub
dec
rsm
mov
and
ds
mov
mov
insb
repz
mov
shlb
mov
mov
das
lahf
xorb
cli
cmp
rcrb
add
mov
rolb
aam
push
fwait
dec
or
push
leave
pop
pop
xor
adc
jmp
fisttpll
push
mov
dec
sbb
add
cmp
pop
in
or
loopne
int3
repnz
lods
frstpm(287
sbb
lock
sub
addr16
xchg
mov
popa
inc
ret
dec
or
daa
pop
rclb
dec
cmpsl
push
insl
cmp
xchg
xor
pop
loopne
inc
pop
sub
pop
ds
test
enter
arpl
insl
cmp
fabs
mov
pushf
add
rclb
push
lret
cmp
aaa
inc
or
sbb
pusha
cltd
inc
xchg
cld
or
lret
jne
or
push
mov
pop
movsl
adc
xchg
mov
dec
cmp
out
outsl
dec
dec
dec
outsl
pop
sbb
outsb
mov
inc
adc
push
pop
jb
int3
xor
mov
jae
ja
into
fs
js
sub
add
aam
sahf
adc
icebp
inc
cld
and
outsb
icebp
pop
popf
data16
sub
adc
jo
and
stos
test
cmpsb
jnp
lods
in
jae
lret
add
dec
mov
ret
test
inc
dec
fmull
pop
push
sub
mov
in
das
inc
movsl
adc
dec
or
mov
inc
pop
in
xchg
adc
sub
or
inc
inc
call
mov
and
jecxz
adc
sub
nop
xchg
jecxz
pop
sarb
xchg
mov
jae
test
nop
xchg
xchg
mov
sub
ja
scas
loopnew
dec
push
shl
imul
xor
xchg
das
call
ss
dec
add
inc
lods
les
out
and
xchg
mov
mov
jge
stos
push
lahf
repnz
adc
sahf
cmp
imul
sbb
sarb
mov
inc
lock
loope
mov
sbbl
aam
ret
call
dec
addl
scas
repnz
cmpl
mov
inc
jmp
cmpb
push
dec
in
sub
jle
cmp
mov
jne
fld
mov
xor
nopl
inc
xchg
dec
test
lcall
mov
dec
cmpsl
xchg
or
mov
loop
xchg
mov
das
lods
mov
add
out
and
arpl
push
aam
dec
pop
push
fs
jo
fists
mov
cld
mov
push
jb
insb
add
jecxz
mov
in
cmp
xchg
jno
iret
xchg
sbbl
repz
test
sbb
jl
ds
cmpsl
cld
dec
mov
shrb
adc
lea
out
cmc
cmpsl
iret
lods
in
mov
push
mov
mov
xchg
or
mov
inc
data16
jbe
out
repz
out
add
mov
loop
or
jbe
cmpsl
mov
imul
pop
icebp
int3
or
inc
jecxz
xor
lods
xchg
add
xchg
lret
xchg
nop
jmp
mov
xchg
or
cmp
xor
lret
mov
mov
std
loope
pop
or
call
ss
shrb
sahf
loope
jnp
popf
jns
inc
mov
xchg
leave
push
int3
jbe
mov
adc
cltd
inc
mov
in
rcrb
call
aam
in
and
clc
mov
adc
sbb
cmp
adc
in
xchg
mov
pop
add
loop
fnstsw
inc
ljmp
fimull
aad
movsl
fstp
xorl
add
xor
aas
scas
dec
or
jg
add
in
lds
push
add
dec
push
rorl
mov
xor
leave
in
test
ret
cwtl
pop
mov
ljmp
sbb
xor
je
or
cmp
outsl
gs
aad
iret
ds
push
test
mov
push
cmpsb
cltd
mov
lret
ror
into
stos
div
jge
addr16
mov
icebp
and
dec
sub
lahf
jecxz
ja
arpl
jecxz
xor
int3
sub
add
hlt
je
out
jmp
pushf
aas
les
add
cwtl
int
stos
cs
sahf
xchg
nop
dec
push
outsb
jecxz
inc
out
pop
cmp
xor
sub
cmpsl
mov
sbb
scas
push
adc
and
lods
out
push
mov
dec
fstpl
sbb
push
jo
sti
mov
pop
cmp
adc
loopne
cld
push
cltd
mov
rclb
movsb
cmp
fldln2
iret
lret
pop
jbe
inc
pop
call
fcoms
add
pop
gs
pusha
sub
pop
stos
adc
xor
adc
rcll
pop
call
or
cmp
int
js
outsb
cmc
xchg
or
les
test
testb
or
out
push
std
cs
pop
mov
mov
pop
scas
or
rorb
push
jge
sti
sub
ja
xchg
std
lods
adc
dec
xchg
das
add
popf
and
in
push
lahf
sub
jl
inc
std
lock
mov
mov
ljmp
pop
xchg
lret
sub
adc
jbe
clc
dec
loopne
fldenv
ja
sbb
cld
frstor
pop
sarb
and
add
shl
xchg
pop
push
mov
cmc
clc
stc
test
and
lds
scas
xchg
sub
mov
cmp
sub
add
add
xor
enter
add
lods
mov
test
mov
cmp
imul
mov
paddusb
pop
jns
mov
mov
rcrl
out
out
dec
jecxz
daa
sub
jp
xchg
sbb
lods
rclb
rorl
xchg
dec
sbb
cmpb
addr16
adc
loopne
pushf
mov
ret
sti
inc
xchg
jmp
pop
mov
and
out
inc
gs
pop
fstpt
xchg
push
xchg
int
sub
sahf
jnp
leave
sub
out
imulb
int3
cmp
dec
fisubrs
xor
testl
sarb
jmp
xlat
loope
test
push
mov
xor
mov
and
xchg
lcall
idivl
js
sbb
test
inc
sbb
mov
ficoms
push
ja
dec
jecxz
cmp
dec
dec
loopne
nop
mov
popf
add
stos
mov
dec
push
pushf
dec
or
pop
xchg
pop
push
lods
out
push
jbe
mov
jb
dec
push
inc
daa
adc
clc
cltd
nop
les
das
scas
aad
cmp
xchg
cmp
mov
and
lods
xchg
sbb
arpl
inc
and
scas
call
dec
mov
out
lods
test
cltd
jl
cmp
mov
xor
and
fcoms
sbb
stc
jbe
push
mov
ret
cmpsl
push
subl
ljmp
dec
sub
mov
mulb
nop
push
xchg
cltd
loope
and
jo
jbe
mov
adc
icebp
repnz
cmp
ficomps
decb
mov
imul
daa
dec
out
or
std
cli
repnz
sbb
outsb
leave
data16
push
iret
cltd
pop
jge
enter
subb
cmpsl
lcall
das
adc
adc
ljmp
push
test
nop
sahf
lahf
outsl
and
rorl
mov
jo
mov
xor
es
fsubr
daa
dec
hlt
mov
mov
and
mov
fs
push
ret
mov
lea
addl
mov
ret
outsb
shrl
xchg
rorl
call
aad
scas
mov
xchg
xor
insb
andb
xor
das
movsb
xchg
shll
addl
ljmp
xchg
lahf
push
movsl
out
imul
pop
pop
ljmp
dec
or
js
jns
xorb
pop
ret
fwait
push
pop
leave
and
lods
iret
loop
push
popa
hlt
pop
mov
dec
jbe
fstpt
bound
das
xor
enter
dec
les
fisubl
sub
jne
dec
imulb
pop
sub
jae
mov
inc
or
ss
not
cs
lcall
pop
adc
jo
clc
scas
mov
adc
inc
or
lret
in
popa
stc
and
test
in
out
in
hlt
data16
imul
pop
ficoml
pop
shr
scas
jns
out
lcall
negl
xchg
cmpsl
adc
scas
and
into
pop
sub
scas
lahf
test
ljmp
addr16
dec
je
xchg
gs
ret
pop
sub
jmp
add
mov
sub
dec
jne
sbb
mov
mov
cmc
jb
cmp
out
shll
jle
js
dec
pop
mov
jle
push
pop
inc
rep
inc
push
jge
testb
cmp
mov
xchg
ret
add
xchg
jmp
aaa
sub
cli
adc
mov
xchg
out
repz
psrlq
xor
bound
adc
cmp
out
in
call
nop
fbld
jbe
int
xlat
inc
cli
mov
div
adc
jbe
add
outsb
add
dec
shll
push
pop
mov
jle
mov
and
ror
fsubrs
mov
negb
xor
mov
enter
fwait
lds
and
pop
cmpsb
and
test
shl
cli
aas
dec
adc
xor
lods
add
cmp
and
xor
filds
enter
lcall
jne
xor
dec
fwait
lods
fadds
inc
pop
xchg
sub
inc
cld
cmpb
in
ret
push
cs
mov
idivb
outsb
sbb
push
pusha
mov
pop
jecxz
repz
sbb
inc
fcom
repz
dec
jae
sub
test
or
or
addl
sti
adc
sbb
xchg
mov
jne
cltd
sub
jmp
push
inc
add
shlb
add
sbb
loop
mov
and
inc
xor
fimuls
outsb
or
hlt
test
mov
push
push
jle
jnp
addr16
adc
adc
mov
test
hlt
push
sub
dec
add
scas
pop
mov
adc
clc
push
push
pop
movb
mov
mov
pop
int
pop
addl
aam
sbb
jecxz
movsl
add
out
mov
add
push
and
lret
fidivrs
or
popf
xchg
add
lret
mov
and
xor
jae
fld
out
add
rcll
fcmovb
pop
cmp
xchg
outsl
mov
mov
ljmp
add
loope
push
aam
cmp
mov
movsl
sbb
mov
mov
repz
lock
jge
popl
dec
lods
push
xor
cmpsl
pop
lea
inc
or
pop
pop
dec
add
sub
aaa
cwtl
xchg
rcr
pmulhuw
mov
xchg
sti
cltd
sub
cmp
fdecstp
out
das
das
mov
dec
pop
xlat
incb
stc
out
mov
jl
roll
inc
lret
and
mov
sbb
jns
shrl
mov
push
gs
pop
jnp
sahf
sub
lcallw
mov
lea
adc
int3
add
push
pop
inc
mov
out
jae
outsb
test
gs
xchg
js
xor
xchg
jl
sbb
mov
sbb
mov
sbb
mov
out
xor
mov
addr16
rorl
imul
int3
in
les
enter
push
jb
xor
jp
sbb
sbb
jmp
dec
xorl
sbb
pushf
add
push
mov
mov
movsb
cwtl
jge
sbb
loopne
daa
lea
mov
cmp
lcall
mov
add
mov
rorb
in
sbb
hlt
lods
push
rcll
jmp
gs
mov
movl
or
dec
pop
repnz
mov
add
pop
inc
mov
mov
ds
pop
adc
or
and
iret
xchg
pop
xchg
and
lea
fnstenv
sub
outsl
das
pop
mov
cmp
daa
or
xchg
mov
dec
add
add
icebp
mov
stos
inc
cs
mov
inc
lret
pop
push
outsb
outsb
sub
jle
mov
adc
jb
mov
mov
jbe
gs
aaa
fists
into
push
mov
or
pop
sbb
push
mov
mov
fsqrt
mov
movsb
cs
adc
mov
cmp
xchg
ficoms
xchg
pop
xchg
xchg
movsb
or
dec
adc
insl
lock
cs
iret
les
or
out
mov
jbe
xor
adc
fimuls
bound
ljmp
ljmp
mov
leave
pop
mov
mov
aad
mov
int
add
aaa
mov
mov
data16
inc
test
addr16
out
adc
mov
inc
push
dec
dec
cmp
and
ljmp
ud2
data16
jle
jmp
nop
adc
cltd
jle
ret
int
jae
std
inc
cli
mov
push
or
mov
dec
add
sub
int
daa
mov
mov
andb
fcomps
rorb
nop
pushf
fwait
pop
enter
jge
or
popf
dec
mov
lock
pop
stc
test
xchg
js
stos
in
sbb
imul
push
xchg
sub
test
outsl
cmp
sub
imul
insb
xchg
insl
dec
sub
sbb
imul
and
pusha
bnd
cwtl
add
repnz
test
push
add
push
mov
scas
outsl
fidivrs
mov
dec
xor
imul
mov
sti
aaa
iret
and
lcall
jecxz
clc
push
icebp
orb
jecxz
sarl
jb
push
or
fs
cli
pop
fnsave
and
stc
sahf
push
arpl
sbb
mov
iretw
call
mov
stc
mov
addr16
aad
fidivl
mov
adc
xor
imul
int3
cmp
bound
int3
jnp
jp
outsb
pop
mov
sbb
lds
cltd
fildl
sbb
insl
or
insl
mov
movsb
daa
push
fs
jno
jbe
stc
fsub
add
inc
fdiv
jmp
aaa
sar
outsb
mov
or
and
lock
mov
imul
push
push
dec
mov
insb
push
mov
sbb
mov
or
xor
es
in
enter
mov
insb
std
les
lahf
inc
in
shlb
pop
loopne
inc
call
fs
mov
cmpsl
int
sahf
andl
int3
insb
icebp
mov
test
and
enter
jbe
pop
push
mov
lahf
add
inc
sbb
popf
or
or
inc
outsb
popf
push
push
movsl
ljmp
rclb
in
dec
arpl
out
push
scas
jbe
aad
or
pop
dec
inc
xchg
ds
cmp
orl
jge
cwtl
xchg
cmp
rorl
lcall
je
ss
repnz
pop
pop
loope
and
jno
push
shll
je
ja
inc
pop
add
sub
mov
pop
testl
jmp
hlt
adc
xchg
clc
sbb
cs
aaa
lret
sub
xchg
imul
push
sar
je
jae
or
xchg
and
mov
cmp
cld
fcomps
adc
sbb
cmpsl
push
lret
pop
stos
idivl
fucomp
xor
inc
andb
dec
enter
sub
loop
popf
mov
leave
aam
mov
es
rep
sbb
mov
out
lcall
call
xchg
es
inc
mov
cmp
shlb
jmp
xor
mov
mov
popl
stos
add
sub
insb
and
mov
movsl
or
xor
pop
lret
inc
pop
jne
inc
inc
push
mov
movl
in
xchg
orb
mov
data16
mov
adc
mov
dec
inc
in
and
fdivrl
xlat
fsubl
je
ljmp
out
fcoml
cwtl
shrl
sub
cmpsl
push
and
mov
loopne
xchg
inc
add
fisubrs
jl
xchg
pop
and
cmp
xor
lret
lret
dec
xchg
push
loopne
sub
fucom
jns
popa
movsl
lods
popf
push
les
or
cltd
jl
mov
jl
aad
stc
push
add
das
jge
in
push
fistl
mov
inc
movsl
ret
sahf
and
adc
in
xor
sub
nop
mov
push
inc
fisubs
out
jb
mov
xchg
push
pop
ret
mov
jo
inc
jg
xor
shlb
jno
sub
adc
mov
das
cmp
cmp
add
sub
testb
mov
pusha
aas
mov
stc
cmpsl
stc
xchg
test
mov
out
nop
cmpb
or
xor
roll
pop
jae
and
hlt
in
jl
loopne
lds
and
pop
mov
rolb
mov
cmp
mov
xor
or
in
dec
xorb
cmp
cmpsb
inc
ficompl
scas
sbb
sbb
lret
cmp
xchg
addb
push
cld
push
ret
js
and
jmp
adc
jle
add
cs
es
cs
push
out
aam
outsl
dec
lea
shrb
inc
test
cmp
int3
loop
movsb
dec
mov
and
push
aad
mov
or
mov
cmp
mov
je
add
roll
les
loope
xchg
mulb
in
les
mov
and
pop
adc
cmpsb
aas
js
mov
jl
ret
cmpsb
pop
nop
lods
ret
xchg
jno
pop
std
in
lea
pushl
leave
repz
repnz
stos
decl
dec
xchg
shll
jle
dec
cmpsb
aad
movsb
mov
stos
adc
jae
pop
loopne
sbb
fdivr
adc
push
mov
mov
hlt
mov
push
cmp
or
fstp
cmp
inc
scas
xchg
pop
jbe
pop
jl
mul
mov
lahf
ror
ja
outsl
jno
push
negl
shll
push
sub
nop
dec
push
insb
or
rcrb
push
mov
int3
and
mov
lea
lods
scas
cmc
xchg
fimull
xchg
ds
lods
pop
fcmovnbe
dec
sub
in
push
fisubs
lea
and
das
or
xchg
jb
dec
aad
push
xor
lods
xor
xor
stc
int
or
adc
or
shll
sub
or
inc
ret
xor
loope
mov
call
xor
scas
mov
xchg
mov
jno,pn
xlat
and
pop
fimull
or
gs
jl
rcr
pop
sub
repnz
mov
add
cmp
clc
ret
lahf
daa
outsl
aad
inc
cmp
push
or
add
add
xor
and
xorl
push
inc
mov
pop
lods
lahf
stos
out
fisttps
aaa
dec
push
aam
test
push
pop
cmp
filds
sub
push
arpl
mov
cmpsb
cmp
call
ret
pop
loope
psrld
sub
das
les
mov
mov
clc
push
mov
xchg
jbe
ret
xchg
jns
cld
imul
dec
int
xchg
ja
or
inc
mov
xchg
ret
or
mov
or
das
jmp
dec
rorl
and
sub
add
mov
jb
sahf
mov
pop
dec
fs
dec
inc
loop
mov
adc
xchg
pushf
cmp
sarb
inc
pop
fidivl
sub
rcrl
and
test
or
lods
nop
fldenv
jbe
or
sub
faddp
xor
ret
xchg
psllq
sub
mov
jl
jp
mov
cmp
pop
pop
or
and
popa
mov
jno
ljmp
xchg
dec
add
fwait
sbb
les
rcll
shr
xchg
mov
pop
int
into
lret
inc
dec
xchg
call
popa
inc
push
sahf
mov
andb
popf
push
add
loopne
adc
mov
dec
fmul
cltd
adc
outsb
sub
pop
jbe
mov
sbb
jo
imul
into
sbb
add
or
movsb
cmp
dec
outsb
je
jae
adcb
and
adc
jecxz
clc
sub
mov
xchg
jge
jmp
xchg
mov
mov
imul
push
outsb
jg
dec
call
arpl
fadd
xchg
mov
xchg
arpl
test
inc
lods
mov
pusha
test
in
sub
ret
pop
and
rorl
ss
inc
es
mov
adc
pop
cmp
sub
pop
cmpsl
or
mov
cmc
enter
lods
dec
xchg
scas
pop
pushf
push
sub
popf
xor
test
mov
or
xor
inc
int3
aad
das
js
sub
xchg
into
popa
cmpsb
push
incl
and
push
shrl
sbb
add
repnz
jg
push
ss
mov
dec
insl
and
stos
jns
push
lods
andb
fidivs
cmc
pop
adc
mov
sbb
push
paddq
dec
adc
xor
rep
mov
mov
je
xchg
push
ja
fidivl
or
out
pushf
cltd
cs
fst
inc
mov
jmp
loopne
sahf
sbb
add
sbb
add
and
push
mov
dec
imul
or
stos
repz
fstpt
movl
fwait
arpl
jl
pslld
push
dec
xorb
loope
xchg
xor
les
aaa
in
std
mov
imul
and
adc
outsl
push
inc
cld
and
lock
fmuls
pop
lahf
mov
stos
xlat
ficompl
repnz
pushf
and
int3
or
jecxz
xchg
cltd
stos
les
mov
mov
xor
push
ds
xchg
mov
stos
pop
or
sbb
cltd
inc
dec
push
add
cmp
dec
pushf
mov
in
sbbl
outsl
mov
jb
dec
stos
jne
mov
daa
lods
fstpl
or
xor
dec
adc
in
dec
cmpsb
cs
sbb
cmp
stos
imul
imul
mov
xor
dec
stos
mov
jne
xlat
pop
mov
jno
sbb
jae
int3
sbb
cli
imul
stos
xor
iret
adc
xchg
movsb
mov
xchg
fwait
xor
and
and
inc
mov
add
dec
scas
jmp
mov
iret
cltd
mov
lds
dec
nop
push
arpl
sub
outsl
mov
shrl
cli
xor
je
or
fisttps
mov
jne
cwtl
push
xlat
fwait
subb
dec
push
idivl
es
lahf
add
dec
shrl
jmp
nop
inc
data16
jnp
decb
insl
dec
add
je
cmp
and
cmp
jns
jmp
pop
addl
or
js
mov
jg
fildl
jbe
call
lea
cltd
dec
out
and
lea
sub
out
and
mov
aas
pop
cmp
sahf
jns
jmp
fisubl
cmpsl
roll
andb
xlat
outsb
adc
push
icebp
loop
or
or
rcl
or
insl
ljmp
out
sbb
lods
and
fsubs
adc
inc
inc
out
call
hlt
and
adc
xchg
jo
cmp
dec
or
popf
loop
cli
sub
lods
icebp
adc
ss
int
stos
sub
xchg
cld
cmc
jae
call
mov
push
outsl
addr16
or
mov
mov
arpl
insb
jl
adc
lods
xchg
xchg
test
aaa
lock
lcall
mov
xchg
movsl
repnz
lahf
hlt
jo
fldcw
push
jge
pop
aam
add
outsl
and
or
sarl
imul
fisubl
out
aad
gs
add
push
aas
add
neg
out
mov
xchg
mov
js
sbb
mov
or
arpl
sti
movsb
ficoms
bound
ficoms
out
negb
cmpsb
pop
ss
ret
push
inc
loop
push
cmp
jle
push
cs
xor
mov
sbbb
jg
fistps
dec
out
dec
lods
sbb
das
cmp
or
push
insl
push
pop
push
cli
orb
pushf
push
test
mov
std
push
and
and
adc
aas
popf
adc
sbb
ret
xor
mov
mov
in
lods
iret
je
adcb
es
mov
add
cld
mov
bound
cld
scas
push
or
test
xchg
scas
jle
imul
xchg
adc
repz
jnp
xchg
repnz
dec
xchg
pusha
fcomip
jno
mov
jmp
pushf
cmpsl
inc
cmc
out
test
daa
int
mov
push
or
testb
mov
popa
int3
mov
dec
scas
cwtl
adc
scas
in
pop
int
pop
fdiv
jns
push
notl
das
lret
or
mov
dec
into
fists
jge
and
xlat
test
fucomp
notb
sbb
fwait
cltd
ret
repz
sub
dec
dec
dec
or
leave
nop
cmp
push
and
int
push
pxor
xchg
fistpll
push
repz
pop
push
mov
cltd
jmp
inc
push
clc
and
mov
je
mov
adc
xchg
hlt
ljmp
rclb
inc
sub
mov
shrb
daa
and
xchg
aad
test
cwtl
mov
sbb
shlb
je
loopne
xlat
pop
push
mov
inc
xchg
sub
repz
push
sub
inc
popa
scas
push
stc
sbb
ret
or
mov
outsb
mov
xor
xor
mov
aas
xchg
dec
dec
aad
sub
add
pop
sbb
popa
ja
inc
push
mov
adc
push
push
mov
xchg
stos
nop
lods
call
and
push
mov
loop
repnz
jbe
cli
dec
push
clc
push
push
xor
push
popf
sbb
mov
int3
enter
mov
dec
shr
xchg
cwtl
pusha
je
adc
push
outsb
cmc
adc
aam
adc
fnstsw
sbb
iret
repz
push
cmp
in
mov
cmpb
dec
and
cwtl
jns
sbb
dec
int
pop
mov
xchg
std
pop
int3
mov
dec
jmp
mov
mov
scas
aaa
fsubrs
sub
test
fbld
push
scas
outsl
pop
fcmovnbe
jbe
loope
movsb
adc
push
in
je
ds
cmp
mov
add
jecxz
popf
divb
mov
inc
cmc
inc
xor
movsl
push
ja
push
mov
xor
stos
scas
test
inc
insb
cmc
and
or
sbb
inc
gs
jl
hlt
nop
in
inc
aad
lock
and
pop
sub
adcl
ss
mov
lea
popf
jnp
leave
jp
xchg
push
test
stc
mov
inc
fpatan
shlb
jae
dec
sti
stos
fcompl
mov
stc
xchg
and
cli
not
pop
notl
sarb
mov
xchg
mov
test
or
cmc
cli
jle
cmp
pushf
sbb
aaa
data16
stc
popl
mov
mov
es
negl
jge
add
dec
daa
lock
sbb
push
lahf
pop
inc
xor
loopne
sub
lahf
test
cmp
in
ljmp
int
sub
bnd
jge
fbstp
test
pushf
imul
xlat
vsqrtps
pop
data16
in
jg
or
nop
fstl
bound
inc
mov
pushf
stos
popf
aas
mov
cmp
in
lods
xor
fnstsw
addr16
adc
outsl
in
icebp
xor
xchg
cmp
xor
and
dec
mov
inc
add
pop
test
int
mov
fisubs
mov
xchg
mov
fdivs
dec
push
push
imul
shlb
mov
cwtl
imul
jb
movsb
xchg
jo
sarl
adc
inc
xchg
mov
push
loop
int
adc
insl
pop
jl
insl
sub
sbb
cmp
push
pop
lret
mov
bound
inc
or
fisubl
pop
and
jns
xchg
dec
sbbb
scas
dec
ret
mov
cltd
es
enter
push
fisubrl
sub
and
adc
in
popa
arpl
sbb
daa
ja
mov
leave
or
dec
pop
aad
out
adc
inc
mov
jle
je
dec
dec
push
in
jne
jo
pop
push
rorl
imul
xchg
shll
fsub
sti
int3
nop
xchg
aaa
fdivs
ja
jl
mov
out
jge
popf
or
jbe
subl
fisubs
dec
ss
xchg
sarl
or
movsl
adc
push
cld
xor
jne
enter
inc
fcompl
mov
sti
adc
add
mov
or
stos
mov
test
dec
daa
or
insb
add
daa
popf
shll
cltd
les
rcrb
andb
imul
imul
cmp
test
add
xchg
repz
sarb
in
xor
push
xor
xchg
or
insl
insb
sbb
jb
lahf
inc
ret
rcr
jns
sub
adc
jmp
loopne
cmp
data16
push
in
and
push
jmp
test
inc
int3
adc
mov
pusha
mov
scas
aas
cmp
dec
pop
add
aad
dec
cld
shlb
dec
sbb
and
add
pop
pop
mov
push
mov
push
jae
jmp
push
test
mov
negb
dec
cmpsb
movb
test
fisttpl
popf
arpl
icebp
mov
mov
stos
jle
xchg
outsl
cli
leave
mov
add
fistps
scas
loope
loope
lds
fidivrl
and
movsb
outsl
es
mov
enter
idivl
pop
pop
aam
dec
lret
pop
shrl
fsubrl
out
hlt
cmp
jne
nop
mov
cmc
lea
lcall
inc
adc
outsl
and
mov
out
inc
daa
xchg
push
and
nop
inc
test
sarl
push
push
lret
lds
imul
mov
ljmp
xchg
icebp
fwait
xchg
pop
addl
int3
stc
rdmsr
jmp
cmc
outsl
outsb
gs
xchg
mov
loopne
cld
pop
push
in
push
out
ds
insl
dec
aaa
subl
push
jmp
push
mov
cmc
xchg
pushf
pop
mov
mov
jnp
pop
xchg
lods
test
sbb
imul
ds
mov
ret
push
lret
ret
cmp
inc
lret
sbb
iret
inc
scas
xchg
aas
push
in
pop
mov
aas
in
fs
test
outsl
xchg
and
xchg
jmp
jl
push
push
ljmp
push
inc
lods
dec
pop
test
or
mov
pop
leave
insl
pushf
dec
or
rcrb
fisubs
jne
xchg
push
pop
js
std
test
push
das
xchg
lret
xlat
fsubrl
aad
adc
in
mov
add
and
subl
cmpsl
call
into
sub
mov
cmp
fsubr
sub
mulb
inc
jg
inc
push
pop
push
pop
or
mov
and
std
arpl
jmp
xchg
hlt
mov
repnz
adc
cmpsb
repnz
scas
pop
xchg
mov
add
insb
sub
mov
loop
pushf
sarl
js
pop
int
dec
cli
aam
lods
nop
movsb
mov
repnz
imul
push
movsl
sub
mov
lcall
fwait
lret
xor
aaa
sbb
xor
loopne
test
cmp
mov
jo
mov
xor
outsb
adc
out
mov
repz
icebp
cmp
ret
jg
cld
ljmp
mov
movsl
jecxz
push
push
filds
ret
jl
xlat
sub
data16
cli
xor
ss
jge
jns
jmp
push
mov
cmpl
jae
add
sbb
xchg
ret
cmpsl
stos
and
xor
adc
int3
jl
cwtl
dec
xchg
loopne
iret
out
inc
in
ror
sbb
mov
push
xor
mov
lret
les
push
inc
add
das
aaa
leave
push
fld
push
std
xchg
insl
fsubrl
arpl
xor
jae
pop
cmpsb
push
loop
clc
movsl
push
sbb
popf
cltd
in
and
in
push
cmp
stc
cmpsb
pop
push
jno
add
sub
sahf
testb
sub
xlat
data16
mov
xchg
out
dec
aas
cli
xchg
add
sbb
aas
or
xchg
and
inc
and
xchg
and
das
jbe
popa
stc
sub
nop
xchg
out
bound
aad
add
push
mov
aaa
mov
fstl
mov
je
mov
iret
push
or
cld
test
ds
stc
fdivrl
fidivrs
adc
pop
lds
or
mov
out
mov
int3
cmp
add
xlat
inc
xor
mov
jnp
mov
mov
mov
ja
xor
sbb
addr16
jg
stos
adcl
mov
mov
push
jno
pop
sahf
pop
and
push
sbb
ljmp
xchg
add
mov
cmp
not
aad
mov
inc
sub
pushf
inc
int
cmp
dec
fwait
xlat
inc
jbe
inc
or
lcall
leave
int
je
sub
push
jnp
jnp
xchg
inc
inc
adc
pop
dec
xchg
jb
jo
jns
cmpsl
daa
hlt
inc
xchg
pop
out
shlb
adc
cld
and
xor
xor
mov
and
push
mov
data16
sub
mov
sbb
aas
sub
aas
and
loope
push
xor
and
xchg
lock
outsl
lret
mov
fwait
mov
rcrl
pusha
pop
cld
ret
jns
and
fmul
in
loop
mov
inc
xor
or
outsb
cmp
push
add
fnstenv
imul
nop
fwait
inc
insb
mov
cmp
inc
dec
xchg
in
dec
sbb
push
push
jmp
sbb
insl
in
rcl
dec
xchg
sub
jo
cmp
cmpsb
and
mov
ror
cmc
jl
mov
jp
shrl
ds
jb
dec
add
pop
pop
aaa
cmp
dec
inc
into
aas
out
jne
les
push
jg
xchg
xor
dec
cmpl
inc
das
mov
or
jmp
outsb
or
xchg
mov
cltd
idivb
stos
push
std
and
rcrl
aad
mov
inc
lret
push
and
sub
mov
test
addr16
mul
cmp
cmpsl
inc
jmp
inc
fisttpl
xor
aas
sub
or
sbb
sub
mov
push
std
popa
fistpll
or
sarb
js
cmp
leave
pop
std
and
cmp
inc
and
in
jg
nop
pop
movsb
adc
mov
adcb
dec
mov
cmp
ficompl
add
loop
or
jl
adc
mov
rcl
std
add
movsl
in
inc
pop
lods
aad
cmpsb
dec
push
aad
push
out
pop
pop
add
jecxz
adc
mov
add
aaa
sahf
and
popa
add
pop
sti
sbbb
inc
inc
fisubs
adc
push
push
inc
push
insb
js
jo
bound
in
adc
mov
xor
fpatan
sub
dec
mov
addr16
sub
mov
inc
aad
push
lcall
rcrb
nop
ret
pop
push
arpl
in
mov
iret
lock
mov
push
imul
into
push
inc
inc
xor
fadd
jge
std
dec
pop
and
add
or
stc
pop
push
jne
mov
dec
shll
sub
pop
push
inc
pushl
xchg
fstpl
je
aas
popf
pusha
inc
adc
and
mov
pop
lcall
mov
lock
mov
xchg
out
out
jg
push
xor
xchg
lea
rolb
movsb
pop
pop
xchg
je
or
in
lcall
jnp
das
dec
mov
lahf
icebp
cltd
push
shrl
xchg
aaa
push
jl
adc
js
out
jnp
decb
insb
pop
xchg
pop
lods
mov
cmpsl
jp
faddl
insw
movsb
enter
fwait
sbb
lcall
aad
jo
andl
dec
mov
dec
jl
and
cli
stc
pop
jb
inc
add
push
daa
js
test
mov
stos
pop
xchg
test
jle
fmuls
sbb
sti
fidivrl
inc
cltd
xchg
aas
push
pop
push
cmp
movsb
aam
mov
aad
cmp
inc
data16
les
ret
shll
sub
ficompl
jb
jne
adc
dec
hlt
lcall
mov
sub
icebp
in
fsubrs
xor
shll
lret
sbb
pushf
mov
pop
in
iret
xor
xchg
shr
pop
test
insb
sub
inc
fldenv
mov
xchg
ret
mov
push
pushf
aaa
in
ret
add
cmp
mov
jge
dec
out
xchg
mov
xor
xor
lock
jg
xlat
addl
les
adc
xchg
dec
mov
and
pusha
and
test
jmp
dec
sub
sar
cs
div
pop
lret
jge
imul
xor
test
aad
and
dec
adc
jecxz
loop
js
inc
movsl
inc
loopne
nop
jbe
xor
mov
jecxz
jae
out
add
imul
xor
lock
xchg
lahf
orb
add
adc
pusha
aas
push
lods
in
inc
sti
into
xchg
pop
les
in
aas
inc
std
and
daa
adc
mov
push
cmp
lds
aas
stos
pop
cmp
icebp
mov
inc
adc
push
adc
pop
repz
cmpsb
lret
les
sbbl
dec
add
jne
clc
mov
aad
mov
hlt
xchg
jle
test
rcl
xchg
decb
xor
jmp
stc
and
adc
lcall
movsb
xor
adc
clc
mov
das
pop
push
cmp
add
push
jl
lods
add
push
js
lea
dec
std
mov
loope
fs
jp
pushf
lret
jecxz
incl
cmp
aam
sahf
mov
mov
aam
xor
inc
ss
das
mov
pop
jnp
push
out
sub
addr16
cmp
testb
pop
arpl
mov
xchg
lret
jge
lcall
push
sahf
xchg
sbb
es
insl
xchg
lahf
stc
adc
daa
xor
push
cmp
jge
fldcw
mov
cmp
sub
inc
mov
xchg
in
cli
aaa
xor
negl
scas
ss
jle
lock
stos
mov
das
push
xchg
stos
add
cmp
push
cltd
inc
jecxz
loopne
movsb
movsb
or
or
dec
adc
jp
dec
xchg
xchg
cltd
mov
repnz
cmp
adc
test
adc
push
pop
imul
cld
push
gs
jbe
in
mov
stos
dec
fdivrl
xor
push
and
or
bswap
mov
cmp
pop
and
out
cmpsb
aam
pop
popf
push
adc
fisubl
lahf
push
mov
jecxz
repnz
xor
jb
mov
cmpl
data16
fiaddl
jbe
mov
dec
cmp
or
xor
rcrl
dec
and
hlt
sub
mov
ror
and
cld
aam
sbb
jb
inc
fiadds
fdivrl
sbb
dec
jg
or
ja
add
daa
push
mov
mov
jge
imul
xchg
roll
in
aas
cmp
rorb
fwait
push
xchg
sbb
add
mov
xchg
call
in
cltd
sub
rcrb
xchg
test
mov
mov
adc
inc
orl
xchg
jg
xchg
mov
push
or
cmpsb
pop
mov
mov
cmp
jnp
push
out
sbb
xchg
cli
arpl
push
inc
fdivl
mov
sar
add
popf
call
das
cmp
pop
clc
inc
fcompp
or
mov
mov
xchg
mov
divb
insl
int
inc
pop
add
and
nop
cmc
repz
shrl
push
push
imul
push
fdivrs
fistpll
sahf
cmp
mov
loope
in
jbe
ficomps
push
punpckldq
pushf
mov
sbb
or
push
fidivl
pop
add
mov
push
sti
leave
call
repnz
addr16
jns
pop
loope
out
jns
fwait
imul
inc
mov
cmc
into
cld
cwtl
out
mov
pop
cs
sub
cli
je
popa
mov
addb
push
inc
out
ret
xchg
out
xchg
add
dec
pusha
cli
push
sub
cmp
ror
enter
repz
dec
add
test
loopne
xchg
mov
xchg
xchg
add
push
mov
loope
dec
cmp
push
pop
lret
aaa
xchg
mov
and
and
push
fcomip
lods
dec
sub
dec
cmc
xor
mov
addr16
out
stos
test
and
cltd
dec
data16
daa
or
mov
mov
fs
lds
and
jae
lret
jle
lds
arpl
mov
andl
pop
rcrl
cmpsb
xchg
bound
je
sbb
cld
mov
sub
cmp
cmc
add
int3
fidivs
mov
push
and
cltd
xchg
mov
stos
cli
push
adc
repz
push
xor
adc
mov
sbb
sbb
pop
xchg
sub
mov
test
call
mov
test
mov
push
adc
xlat
out
pop
mov
sub
filds
loop
mov
sbb
and
leave
or
adc
lcall
imul
stc
popf
lods
out
pop
rcll
incl
cmp
add
stc
or
outsb
sti
lods
pushf
pop
js
mov
psadbw
ljmp
push
int
outsl
hlt
mov
les
push
pusha
mov
jg
mov
pusha
popa
inc
xchg
mov
jne
mov
push
leave
data16
call
nop
mov
or
pusha
sti
ss
adc
ds
emms
cmp
xchg
add
jno
cmovbe
test
aad
sti
mov
xchg
iret
loope
jg
test
xor
shr
je
and
mov
xchg
sbb
cmp
test
pusha
dec
push
pop
dec
adc
dec
lods
jae
adc
jge
cmp
mov
test
jo
stc
and
inc
mov
push
ja
fidivrs
push
or
ret
lds
flds
movsl
mov
adcl
mov
xor
mov
lock
jno,pt
mov
or
iret
pop
push
dec
das
cmp
lahf
cmp
or
dec
jecxz
test
pop
pop
scas
int
fld
pusha
and
out
pop
ficoms
xor
lret
mov
dec
imul
cmp
xchg
sub
jne
lret
test
add
popf
sub
pop
js
int
pop
pop
cld
sbb
imul
sub
sub
stc
clc
dec
aas
adcl
cli
dec
ds
mov
push
imulb
call
cmp
mov
xchg
mov
icebp
jl
mov
mov
pop
xor
nop
movl
out
into
mov
adc
lock
les
cmp
xchg
repz
pop
cltd
mov
xchg
loopne
test
push
push
sbb
arpl
insb
mov
xchg
lret
add
add
mov
and
nop
loop
push
cmc
dec
std
inc
sbb
cmp
dec
mov
not
mov
add
aas
push
push
lahf
adc
mov
fistpll
jmp
pop
scas
in
lcall
cmp
ss
mov
sti
int
cmp
out
cmp
cwtl
lret
push
hlt
cs
inc
pop
xlat
lret
mov
xchg
jbe
sub
pop
fcomip
dec
xor
imul
xchg
es
daa
rolb
xchg
mov
push
loopne
or
int
es
fbld
popf
push
mov
test
adc
in
sbb
iret
insl
xor
nop
insb
and
mov
pushf
cs
jp
push
out
shlb
sub
push
push
pop
outsl
insl
add
mov
popa
push
mulb
inc
repnz
cmp
or
incl
call
gs
xor
sub
jg
mov
sub
lret
pop
imul
push
xchg
pop
call
icebp
or
sbb
lods
fistpl
inc
dec
sti
dec
mov
mov
stos
xor
aaa
mov
mov
movsl
push
xchg
sahf
mov
pop
fnstsw
repz
and
mov
in
out
push
lahf
int
sub
stos
stc
movsl
and
aam
lahf
push
enter
arpl
dec
xchg
js
lds
jno
sbb
jge
jl
jne
ljmp
and
xchg
or
mov
sahf
mov
orb
adc
sub
pushf
or
test
mov
test
cwtl
xor
scas
pop
popa
add
ret
add
ret
leave
sahf
repz
jbe
cmp
jae
dec
sbb
lods
fimull
testl
xchg
adc
mov
aas
jmp
shrb
shl
lods
xchg
and
dec
imul
fbstp
lods
xchg
sbb
clc
mov
orb
scas
add
test
pop
pop
movsb
push
call
mov
and
scas
daa
icebp
push
sub
in
stos
arpl
adc
cmc
inc
push
jl
inc
lea
xchg
and
loope
hlt
cli
adc
inc
sub
lcall
xchg
and
xor
aas
jge
int
xchg
arpl
lret
int3
scas
rcrb
clc
stos
sub
dec
mov
sbb
cmp
sbb
push
dec
loopnew
inc
fwait
test
pop
lahf
push
lahf
mov
xchg
out
scas
dec
push
and
dec
adc
mov
lods
and
jne
dec
push
outsl
push
add
int
outsb
dec
mov
xor
cmp
outsb
adc
lea
push
jmp
ds
movsb
ss
aad
movsl
imul
mov
dec
add
loop
and
adc
mov
mov
mov
add
push
addr16
dec
cli
repz
jae,pt
sub
sbb
jo
sbb
mov
inc
imul
out
fucomip
sbb
or
roll
movsb
mov
sbb
dec
dec
mov
fisttps
or
xchg
mov
jne,pn
sub
stos
sahf
loop
rcl
and
push
pop
in
xor
mov
fcoms
ss
popf
push
push
pop
mov
sbb
jno
aad
cmp
cmc
lock
pop
push
outsl
jle
mov
jle
iret
sub
xor
cli
adc
mov
or
sti
stos
sub
pop
lret
push
jl
xorl
enter
icebp
ljmp
adc
loop
cwtl
mov
out
mov
sahf
dec
cs
adc
out
push
stc
popf
xlat
mov
inc
test
repz
xchg
push
ja
test
xlat
jp
mov
arpl
cmp
mov
shrb
jo
sbb
xchg
ljmp
clc
add
fwait
cmpsb
andl
cmp
jb
movsb
outsl
xor
dec
repnz
pop
mov
jecxz
lods
fstp
call
mov
inc
outsb
lock
xchg
sahf
inc
jge
vpsubb
sbb
lods
jmp
js
mov
iret
xor
and
cmp
cmp
arpl
dec
out
jg
jae
add
xor
push
enter
jae
sbb
sub
imul
test
pop
pop
ret
or
xchg
rcrl
hlt
sahf
cmp
mov
lret
rclb
dec
cmp
add
test
pop
jbe
adc
jae
jge
xchg
xchg
mov
xchg
out
pop
sbb
popf
sub
push
rorb
mov
add
push
mov
jp
insl
sbb
stos
xchg
sti
jnp
push
mov
imul
mov
jg
push
fldt
mov
mov
dec
mov
and
rcl
fildll
push
scas
xchg
lea
sub
sub
cmp
push
pop
add
shrb
test
rol
call
insl
fwait
jmp
arpl
jbe
push
push
imul
fidivl
or
fs
outsl
dec
sbb
mov
popa
mov
repnz
imul
xor
and
inc
add
and
push
sbb
loope
or
and
mov
dec
ljmp
stc
push
inc
or
mov
adcl
rol
and
lret
push
ret
xchg
jbe
rclb
jne
sbb
adc
sub
cwtl
sbb
sbb
ja
dec
dec
ljmp
jge
push
dec
int
iret
cmpsl
mov
add
in
sti
mov
fisubrs
in
xor
sti
xor
ffreep
xchg
jbe
or
in
loope
movsl
outsl
mov
mov
inc
inc
es
stos
nop
xor
pop
pop
push
cld
rolb
icebp
movsb
mov
outsb
sbb
push
mov
and
outsl
jno
jae
cmp
mov
mov
cli
pop
mov
mov
outsl
mov
fucomp
in
xchg
jge
popf
pop
add
mov
jle
jl
rcr
xor
call
int3
mov
dec
pop
sbb
inc
sbb
jp
add
push
fs
outsb
ret
pop
push
insl
pushf
jge
xchg
dec
sarl
cmp
xor
mov
mov
aas
sub
or
inc
call
sbb
jmp
loopne
mov
insl
sbb
jge
movsl
aas
lods
cli
out
push
imul
ja
fiaddl
xchg
fs
fmul
imul
inc
decl
lock
dec
cmpsb
xchg
rol
sbb
sub
out
push
add
je
stc
cmpsl
or
push
loope
jmp
stc
cmpl
sti
loop
das
pushf
outsl
mov
int
sub
cmp
sti
mov
sub
push
aad
clc
mov
or
jae
sub
push
xor
mov
aaa
mov
xorl
push
mov
je
lahf
inc
adc
cltd
push
jecxz
aaa
mov
pop
shll
repz
or
cmp
popf
cmp
mov
int
and
dec
popa
mull
out
aad
loope
pop
adc
mov
inc
iret
fdivs
imul
out
sbbb
push
sub
clc
sub
scas
mov
or
aad
test
ljmp
pushf
xor
pop
pop
pandn
cmp
inc
xor
mov
mov
loope
out
mov
in
mov
sbb
ljmp
mov
rolb
out
and
dec
or
js
pop
je
ss
or
sub
fidivl
push
lock
xchg
andl
mov
ss
inc
enter
ret
out
cld
mov
notl
cmc
mov
mov
mov
ret
xlat
sub
fstpl
mov
jo
jge
cli
inc
xchg
pop
in
std
xchg
inc
xchg
jg
in
pop
xchg
lods
adc
mov
lret
adc
fldt
inc
clc
cmp
add
mov
cmpb
mov
xor
in
popa
or
pop
ljmp
cmpsl
mov
mov
push
adc
adc
stos
push
aaa
lret
inc
cmp
pusha
pop
adc
mov
cmp
fldenv
loope
sbb
add
cmp
push
sub
cmp
push
mov
xchg
fwait
adc
cwtl
scas
add
inc
fadds
call
sub
adc
enter
mov
inc
movsb
incb
mov
mov
sbb
mov
fnstcw
stos
push
dec
daa
outsl
sbb
xchg
dec
or
jns
movsb
test
mov
cmp
jp
ret
aam
xor
movsl
gs
clc
or
mov
and
std
in
cmp
pop
or
aaa
ret
sbb
rcll
ret
adc
test
push
or
jnp
cmp
xor
mov
xlat
adc
mov
sub
loope
cwtl
fsts
test
pop
add
shlb
iret
aam
add
adc
orl
pop
rorb
mov
in
into
mov
inc
push
cmpl
jle
stos
into
sub
filds
jg
push
imul
jmp
mov
adc
ja
mov
lcall
xor
or
in
mov
pushf
add
adc
outsb
lods
mov
aas
mov
adc
push
add
jmp
lgdtl
stos
push
sbb
jg
pop
pop
mov
mov
cmp
jae
adc
cmp
inc
pushf
sahf
inc
pop
or
jne
mov
scas
xchg
dec
xchg
add
stc
jo
pop
dec
xor
mov
gs
iret
sub
je
dec
push
or
pusha
sti
orb
mov
sub
dec
xor
iret
sub
lret
into
fdivs
mov
stc
sahf
subb
dec
mov
inc
sbb
in
mov
inc
inc
and
mov
or
push
sti
and
push
mov
outsl
fiaddl
out
mov
out
in
scas
xlat
dec
repnz
and
xchg
orb
mov
mov
push
call
jb
sbb
or
cmp
lret
sahf
cmpsb
push
cmp
lahf
or
popa
das
dec
div
icebp
add
mov
orl
jl
pusha
mov
ja
pop
arpl
subb
out
add
mov
dec
or
adc
or
insl
loope
jno
mov
or
mov
fs
xchg
and
shr
fdivrl
notl
test
gs
lods
pop
mov
inc
add
pop
into
insb
aas
not
insl
aaa
push
push
xlat
pop
loope
pushf
aad
outsl
jle
push
adc
adc
int3
pop
xor
scas
mov
dec
push
xchg
mov
cli
mov
addb
sub
mov
xchg
pop
cmp
xchg
int3
xor
mov
xchg
movsl
adc
xor
push
out
negl
adcl
dec
aaa
pop
sub
outsb
popf
shll
mov
fldl
mov
xchg
cwtl
fwait
lods
and
ret
repz
sbb
jo
lds
or
lock
jecxz
jbe
sti
mov
jne
cmp
nop
pop
jbe
push
and
aaa
fucomp
ljmp
sbb
sbb
sti
adc
add
clc
movsl
stc
cmp
mov
in
je
sbb
dec
xchg
xchg
jp
jp
divl
loopne
or
rclb
aaa
adc
mov
mov
xchg
movsb
xchg
in
jp
inc
nop
clc
cmpl
dec
pop
xchg
aad
sub
dec
lret
mov
outsb
fwait
ss
enter
xor
xchg
inc
addr16
rcll
xor
hlt
int
mov
mov
jp
mov
add
add
mov
sub
xchg
push
or
xor
xchg
pextrw
push
fisubl
cld
xchg
addr16
popa
sbb
aaa
stc
dec
movsl
in
or
cmc
iret
mov
or
je
xchg
jo
xor
dec
out
ret
adc
xchg
movsl
popa
dec
test
mov
push
cmp
dec
add
and
test
popf
pop
out
testb
sti
and
insl
cmc
xlat
cmp
popa
mov
sub
pop
cmpb
stos
dec
and
or
fiaddl
push
jo
mov
xor
sub
jmp
or
dec
fmuls
mov
xor
pop
ljmp
je
insb
shlb
or
rclb
daa
fneni(8087
cwtl
outsb
ja
xchg
movb
mov
bound
pop
stc
inc
mov
dec
push
mov
push
add
loope
dec
or
lods
adc
insb
xor
jge
cli
daa
pop
pop
test
sbb
fisubl
pushf
and
xlat
call
inc
jnp
sbb
lods
xor
jp
sarl
lds
and
push
or
cmp
mov
cld
in
pop
push
call
adc
pop
cmpsb
test
push
sub
nop
sbb
test
mov
adc
pop
pop
movsb
mov
dec
jmp
mov
dec
scas
cmpb
xor
arpl
wrmsr
dec
stc
cmp
icebp
or
mov
pusha
sbb
and
stos
cmp
fsubl
insl
push
pushf
xor
test
aam
sub
push
mov
sti
das
imul
inc
fisubs
push
loope
add
push
negl
adc
inc
aad
mov
xchg
mov
inc
sbb
sbb
je
sub
cmp
fcoml
xchg
cmpsb
adc
shrb
push
lret
mov
sahf
xchg
push
icebp
add
dec
sbbl
ds
aad
xor
cli
call
movsb
repnz
xor
xchg
mov
hlt
stos
scas
inc
push
bnd
stc
mov
loope
shll
cmc
jl
cld
mov
sbb
stos
clc
jb
dec
inc
jbe
popa
cmpsl
fcoms
iret
jl
xchg
or
and
mov
or
ljmp
sub
in
inc
and
mov
ret
mov
inc
xchg
adc
iret
inc
add
mov
stos
ja
pop
movsl
mov
loopne
push
test
mov
hlt
add
sbb
sbbl
ljmp
stc
pop
jmp
xlat
pop
enter
push
cs
sti
ss
mov
push
cmc
push
test
and
aaa
loop
es
insl
and
mov
dec
lods
sub
adc
dec
icebp
insl
pop
add
adc
jo
cmc
xchg
and
fildll
jge
cld
fs
xchg
mov
xchg
popf
and
xorl
addl
lds
xchg
jg
pop
xchg
push
jae
pop
push
ds
ret
loope
mov
pop
sbb
std
int3
mov
dec
mov
out
fmull
iret
aam
test
mov
or
cli
leave
inc
shrl
fcomp
scas
mov
inc
out
inc
lret
or
inc
insb
inc
mov
xlat
test
dec
inc
repz
mov
mov
lods
sbbb
xorb
or
adc
mov
or
dec
push
or
adc
xchg
sbb
jno
shll
pop
pushf
lret
dec
pop
ss
movsb
adc
adc
pop
je
or
cli
repnz
pop
inc
sbb
push
int
test
xor
cmp
xchg
out
jb
add
outsl
call
ficomps
call
cltd
add
sub
aaa
jmp
enter
ja
dec
sub
mov
loopne
and
rcrb
mov
ja
inc
insb
movsl
std
sub
push
push
in
das
xlat
mov
insl
jge
and
enter
es
add
addr16
ret
dec
les
lods
push
and
data16
lock
mov
in
dec
or
mov
adc
ror
xchg
fldenv
mov
outsb
ss
es
loop
arpl
pop
add
push
not
add
repz
dec
mov
iret
lret
ja
mov
cmp
pop
sbb
inc
aad
adc
in
xchg
ficoms
adc
cli
fsubrs
add
ret
repz
repnz
add
insl
loop
sbb
aaa
lret
mov
stc
in
mov
add
lock
lods
pop
inc
repnz
sbb
mov
add
fsubl
in
dec
push
ficoml
and
pop
jo
or
sub
xchg
aaa
out
in
mov
inc
jno
push
movsb
pop
call
cmp
mov
cs
pop
push
dec
popf
or
ret
mov
pop
xor
inc
fmuls
lea
fsubrp
adc
adc
or
add
mov
push
cmp
dec
mov
jmp
ret
and
jae
cmp
mov
xchg
pusha
mov
aad
pop
inc
sbb
gs
sub
sub
or
ret
inc
jo
push
loop
or
scas
xchg
lcall
xor
out
insl
xchg
cli
jno
mov
leave
or
sub
push
mov
cmp
in
les
adc
mul
jmp
mov
push
movsb
mov
adc
ds
sbb
add
jle
repnz
sahf
lods
dec
cmp
pop
int
jecxz
pop
pop
mov
xor
stos
mov
xlat
loope
mov
sahf
sti
mov
xchg
testl
pop
add
mov
dec
shll
xchg
push
pop
fwait
pop
ret
mov
push
sbb
pop
push
push
rep
int
js
stc
inc
jl
leave
fiaddl
adc
mov
xchg
cmpsl
sbb
shl
lock
xchg
inc
xchg
int
mov
ret
inc
inc
adc
xchg
mov
rcrb
inc
xlat
stos
das
and
rcrb
lea
fildll
or
add
ss
nop
loope
mov
mov
in
xor
adc
add
jno
ds
rdmsr
sub
das
inc
addb
addb
xchg
fsubl
sub
inc
mov
or
int
ljmp
mov
fwait
sbb
adc
shl
aaa
out
fsubrs
jle
sbb
dec
pop
lock
nop
das
test
int
push
cmc
fistl
pusha
push
mov
punpckldq
xor
and
roll
les
lret
iret
xchg
pushf
scas
in
flds
sub
std
clc
shlb
repz
out
mov
aaa
std
cli
push
push
data16
bound
stos
stos
inc
es
pop
dec
push
cmp
or
and
pop
adc
out
jle
clc
jg
cmp
jmp
movsb
pop
movsb
insb
shrb
jmp
sub
cmc
repnz
pop
sub
mov
sbbb
ffree
adc
cli
xchg
xchg
xchg
sbb
or
push
hlt
mov
sub
mov
inc
jne
mov
jbe
pop
bound
jp
repnz
mov
xchg
mov
mov
adc
inc
or
outsl
xor
aad
jmp
testl
add
icebp
aaa
push
xchg
fstpt
sub
mov
xchg
mov
aad
popa
cmpsl
and
dec
ds
daa
fistl
roll
jge
mov
jns
sub
clc
dec
loopne
sbb
fldt
pusha
push
sub
cmp
bndldx
fldt
pop
jnp
cmpsl
or
dec
sbb
stos
pop
loopne
fyl2x
int3
data16
push
scas
stos
daa
mov
xchg
imul
lret
adc
arpl
je
mov
pop
repz
sbb
fmull
and
call
ret
add
sarl
fwait
mov
movsb
pusha
or
push
movsb
je
popf
in
xchg
lea
shlb
dec
sahf
lods
dec
inc
cltd
mov
cwtl
add
push
dec
xor
outsl
imul
js
insb
xchg
rol
std
sub
inc
jo
and
inc
arpl
leave
mov
es
adc
push
test
inc
cli
fadds
repz
adc
in
jo
or
fistpl
movsl
cltd
jle
xchg
mov
cli
orb
cli
cld
pop
jle
ds
mov
shll
adc
imul
pop
ja
aad
jbe
data16
leave
mov
sbb
sbb
stos
shl
in
adc
adc
pop
sub
jp
xor
out
sbb
out
push
repnz
scas
and
out
ret
push
out
xchg
out
inc
cmp
lods
mov
push
in
ret
xchg
and
ret
imul
subb
fisubrs
adc
rep
push
bound
adc
cmp
scas
xor
adc
mov
sub
loop
ds
xor
push
mov
push
rorl
xor
ret
rorb
ds
xor
and
inc
sub
ficompl
sahf
mov
adc
sub
sub
xor
mov
into
mov
ret
xchg
mov
and
mov
repz
and
push
xchg
adc
into
test
iret
or
mov
jne
bound
xor
cmc
xchg
pop
add
pop
movsl
test
cli
cwtl
lods
cmpsb
testb
testb
icebp
in
mov
cmp
daa
sbb
test
and
arpl
add
add
mov
fldt
lock
xor
decb
sbb
lcall
sbb
mov
mov
inc
js
ret
or
scas
push
outsl
mov
push
mov
lahf
adc
ret
setge
fcompl
repz
stc
out
ret
mov
in
and
sbb
pop
data16
sbb
mov
lods
xchg
jge
icebp
or
dec
xor
fwait
xchg
mov
enter
cmp
add
cmp
jg
jae
xchg
jg
hlt
cmp
into
scas
push
aam
sub
dec
inc
mov
jge
les
dec
pop
push
mov
sub
xchg
cli
xlat
dec
push
movsl
mov
insb
scas
xchg
enter
pop
add
mov
fs
in
mov
pop
inc
arpl
fwait
xchg
push
or
adc
je
pop
mov
mov
pop
es
pushf
in
push
and
aaa
jle
cmpsb
push
dec
pop
mov
lcall
es
jp
jbe
inc
mov
adc
aam
jb
test
fmul
sbb
ret
mov
fsubrl
leave
jnp
lock
jnp
jecxz
mov
inc
mov
test
int
pop
mov
push
add
xor
mov
jne
xchg
sbb
push
mov
mov
mov
je
jmp
popf
add
dec
movsl
aam
jp
or
jae
jne
inc
loop
decl
jmp
sbb
test
das
ret
hlt
lret
andb
sub
sbb
mov
ljmp
mov
lds
add
inc
insl
leave
testl
lahf
test
pushf
es
movsl
push
pop
clc
xor
les
push
dec
dec
cmp
negl
repnz
xchg
xchg
dec
add
mov
push
xchg
and
pop
inc
add
pop
lods
jmp
mov
dec
loop
jne
add
popf
popa
loop
push
push
xor
push
push
mov
or
or
test
add
shll
repnz
dec
dec
outsb
jecxz
js
mov
cltd
cmpsb
jmp
xchg
sahf
ds
shll
dec
mov
cmc
mov
mov
cmp
push
pop
imul
into
and
push
xor
decl
sub
xor
push
es
jmp
inc
stc
fdivrl
sub
stos
pusha
mov
cli
sub
ret
mov
and
or
fisubs
dec
mov
or
xchg
nop
xchg
or
shlb
ljmp
sbb
notb
jmp
push
test
fldl
mov
cmp
mov
daa
addr16
cltd
mov
dec
adc
dec
shrl
mov
adc
lahf
sub
fwait
inc
sub
push
mov
xor
or
outsl
pop
imul
push
jl
jns
fldcw
mov
add
inc
push
or
mov
add
push
shlb
add
mov
adc
das
push
jp
inc
mov
ljmp
out
hlt
pop
stc
mov
loopne
push
mov
mov
and
daa
xor
popa
fsubs
sbb
xor
stos
lods
mov
push
pop
mov
push
cmpsb
xchg
mov
sub
jno
into
mov
sbb
dec
in
loopne
inc
sub
lods
cltd
jbe
nop
push
mov
sub
movsb
shl
faddl
cld
adc
dec
xor
pop
pop
mov
push
push
pop
in
cmpsb
popf
sarb
inc
xchg
fidivrs
push
sub
icebp
iret
ffree
mov
jg
and
pop
popa
es
filds
dec
subb
push
jbe
sub
daa
sarl
leave
shlb
stc
push
pop
adc
dec
jl
mov
push
xchg
xor
adc
dec
call
cmp
dec
loope
dec
xchg
xor
jmp
sbb
inc
cmp
test
int
xor
lods
imul
fcoms
xor
mov
das
movsb
mov
jb
sbb
je
mov
loopne
repz
push
push
bound
fmul
sbb
adc
mov
lods
xor
hlt
mov
xchg
aad
imul
cmc
shrb
mov
inc
xchg
xchg
xchg
jle
adc
jmp
xor
inc
pop
and
push
sub
imul
bound
fwait
inc
scas
leave
addl
push
mov
pop
mov
inc
sub
iret
imul
cmp
ret
in
xor
xor
adc
clc
push
test
lock
or
mov
test
mov
inc
dec
adc
pop
pop
dec
dec
xor
mov
mov
mov
sub
icebp
cmp
push
ret
push
jb,pt
stos
pop
mov
loope
mov
xor
jo
nop
add
sti
adc
push
inc
mov
cmp
xchg
lock
rcr
stos
aaa
push
dec
sti
mov
ss
loope
loope
insb
xchg
cld
jle
es
push
rcrl
or
iret
xor
frstor
stos
adc
insl
xor
mov
aad
arpl
js
sub
aam
lods
inc
push
jg
push
std
mov
loop
enter
mov
testl
ss
and
jmp
cmpsl
fdivrl
mov
jg
adc
sub
test
xchg
jb
cld
in
and
push
fstpt
mov
fsubr
into
pmuludq
outsw
dec
sti
outsl
jge
pushl
xchg
push
sub
scas
repnz
pop
shll
push
and
jbe
pushf
mov
shr
rorl
add
xchg
jle
jg
dec
pop
mov
adc
mov
sub
mov
mov
mov
push
mov
cmp
fistl
jg
rcr
stos
sahf
subl
adc
mov
push
sti
sbbb
rcrl
pop
loopne
filds
jl
rcl
xchg
cmp
jae
mov
or
add
mov
mov
mulb
xor
scas
ds
sahf
int3
hlt
push
cmp
pop
mov
das
sub
mov
rcll
stos
or
mov
inc
jl
xchg
sbb
aad
pop
adc
mov
test
xlat
sub
leave
out
imulb
std
cmpsb
push
add
jp
movsl
xchg
xchg
movb
jb
sub
add
loope
or
mov
xor
iret
pop
dec
fists
scas
add
mov
fnsave
pop
mov
pop
idivb
ds
sub
lret
mov
mov
mov
into
lods
cltd
cmpsb
data16
ret
fildl
test
push
outsb
daa
and
lods
xor
adc
mov
or
ret
call
xor
fisubl
jecxz
push
daa
negl
push
scas
jno
mov
aaa
lock
dec
dec
jmp
movsb
in
inc
sub
mov
sbb
cmp
sarl
sub
daa
dec
jmp
xor
lock
sbb
sbb
dec
cs
sbb
xchg
mov
inc
pop
adc
lock
stc
scas
cltd
popf
jne
lock
jnp
mov
cs
ds
mov
xlat
int3
jmp
mov
add
hlt
sub
clc
inc
dec
push
mov
jmp
ja
dec
incl
repnz
ja
pushf
xor
push
xchg
mov
out
sahf
jecxz
in
jno
fimull
movsl
xor
xchg
xchg
aas
pop
mov
popa
cltd
jl
sub
loop
mov
int
sub
add
incb
addl
dec
pop
xor
sahf
mov
mov
mov
push
shr
or
xor
or
nop
or
shrl
push
inc
insb
inc
fs
push
push
push
pushf
out
xor
push
outsb
rclb
pop
inc
push
in
sub
in
sbb
sahf
scas
aam
dec
xchg
mov
adcl
repz
test
pop
xor
test
inc
xor
cmp
and
mov
pop
ss
adc
bound
enter
cmp
push
and
sbb
lock
push
sub
sbb
stc
xlat
sbb
cmp
das
push
mov
adc
and
lcall
inc
ret
int3
sar
les
mov
push
mov
adc
adc
loopne
add
cld
jo
jnp
jp
lret
xchg
ret
add
push
lret
cmp
mov
inc
pop
push
popa
mov
negl
sbb
mov
pop
mov
and
jecxz
sub
and
push
jmp
imul
sub
jo
lods
push
shl
push
dec
ja
aam
in
lea
sub
pop
dec
push
pop
xchg
cmpsb
fidivrl
mov
jmp
adc
ficomps
dec
int
pop
and
dec
and
pop
push
mov
pushf
sub
sub
sbb
paddw
push
fisttpll
inc
and
out
sbb
mov
dec
std
sub
lret
rol
push
jp
add
in
mov
out
and
xchg
inc
cli
push
fbld
es
fwait
xchg
sub
cli
add
jp
in
test
test
subb
dec
fdivs
jns
mov
sbbb
jb
test
arpl
icebp
sahf
rolb
mov
xor
fldcw
push
out
sbb
test
call
das
loope
dec
je
cltd
add
imull
sub
sub
or
mov
mov
into
sahf
and
inc
test
inc
add
dec
call
jecxz
shlb
leave
lahf
or
lahf
das
rcrb
jnp
sti
xchg
mov
sbb
rcrl
sub
sub
jl
fs
sti
clc
dec
and
or
lcall
xchg
int3
jbe
mov
or
or
sahf
mov
push
add
mov
testl
sub
bound
add
cmc
mov
mov
dec
jle
movsb
jmp
mov
ljmp
mov
cmp
filds
cmpsb
mov
ja
call
and
ja
inc
jle
pushl
adc
gs
sub
pop
loop
lret
push
aad
out
pop
rclb
cli
inc
inc
sti
add
das
push
test
mov
ror
inc
jnp
inc
sti
cmp
daa
fldenv
sub
add
dec
adc
fsubrl
push
xor
jnp
ficompl
faddp
xor
or
mov
out
jp
in
fisubl
cmpsl
inc
notl
push
push
push
push
ja
and
jmp
in
rcl
sub
arpl
xor
xor
mov
fucomp
push
adc
mov
jnp
ja
jp
xchg
push
jo
mov
test
mov
outsb
das
ret
inc
mov
lea
test
cmpsb
fnstenv
inc
test
inc
adc
aam
mov
xor
repnz
or
call
and
xchg
int3
ds
cli
mov
call
sub
xchg
add
ljmp
popa
fwait
cli
imul
jb
int
pop
fbstp
xor
xchg
lret
inc
and
cltd
das
pop
mov
dec
or
fcmovu
fbld
jl
testb
add
mov
lret
pop
aaa
str
ljmp
push
xchg
enter
xchg
adc
ret
jne
fsts
cmp
sbbb
cs
js
mov
lret
mov
or
cmpsl
sub
iret
addb
lods
notb
xchg
mov
int3
sti
out
fs
loope
ja
mov
dec
sahf
das
rcrl
not
rorl
lret
aam
movsl
inc
out
cmp
lcall
loope
inc
mov
mov
pop
jb
fmul
popa
lret
pop
jne
pusha
jl
sbb
or
aas
xor
inc
push
jecxz
lds
das
mov
mov
and
repnz
nop
clc
shl
es
jmp
movsl
cmp
inc
sub
jge
adc
push
enter
add
sahf
mov
pusha
dec
fiaddl
and
iret
sub
fwait
jo
adc
rorb
leave
push
insb
adc
in
cmp
loopne
fcmove
jmp
adc
ss
mov
ja
pop
repz
clc
lcall
out
jno
addr16
xchg
ds
je
fwait
enter
scas
aad
inc
dec
xor
call
enter
adc
std
xchg
mov
mov
mov
sbb
jne
rorb
adc
or
push
sub
push
ficompl
loopne
sbb
or
in
icebp
gs
call
push
or
jbe
or
nop
adc
aad
inc
into
out
push
idivl
mov
dec
xchg
sbb
inc
adc
pop
mov
int3
cmp
adc
aam
arpl
or
jns
gs
sbb
dec
sbb
cs
fistpl
aaa
sbb
mov
adc
mov
xchg
fnsave
and
xchg
cmpsb
ljmp
loop
push
rorb
mov
ja
adc
hlt
fidivl
es
and
push
jge
xor
or
movsl
mov
out
sbb
iret
xchg
mov
add
mov
ret
mov
ficoms
mov
aas
or
subl
arpl
mov
inc
ljmp
jae
lds
dec
jl
sbbb
pop
xchg
adc
rol
add
push
ljmp
mov
neg
mov
mov
inc
pop
and
subb
imul
push
jbe
int3
mov
dec
adc
mov
movsb
sub
je
cld
rcrb
and
push
loope
jg
fsub
hlt
jge
ret
out
add
std
dec
pop
xchg
dec
cmp
cli
leave
inc
adc
inc
mov
adcb
xor
dec
adc
sarl
shrl
and
dec
adc
add
inc
hlt
or
cld
xor
xor
inc
push
sub
ret
aaa
sahf
and
jmp
push
fadds
sbb
add
fiaddl
outsb
sub
loopne
push
cmp
cmp
sbb
imul
je
mov
sbb
dec
push
mov
cmp
leave
add
popf
sti
pop
in
mov
jno
mov
dec
pop
cmpsl
push
mov
out
inc
pop
mov
out
stos
xor
push
lea
negb
adc
fwait
sub
loope
mov
out
nop
movsb
repz
or
push
dec
pop
cmpsb
jecxz
mov
cpuid
rorb
pusha
gs
mov
lahf
pop
sarl
push
cmp
dec
in
mov
das
rcl
call
dec
out
xchg
cli
sbb
mov
or
flds
das
inc
iret
es
idiv
addb
testb
lock
mov
sbb
mov
sbb
aad
in
mov
repnz
cmc
stos
pop
dec
js
std
shrb
adc
je
cmp
mov
fiadds
jae
enter
loope
cli
mov
ljmp
jmp
aas
mov
clc
add
ss
inc
addr16
pop
sub
mov
test
jns
popf
inc
push
cmpsb
pop
jns
movsb
adc
fwait
pop
cli
fs
inc
mov
jnp
mov
mov
or
xor
xor
pop
mov
bound
jae
cmp
xchg
lahf
das
ret
ret
xchg
shlb
pop
dec
lds
loopne
mov
decl
xor
or
iret
mov
pop
inc
push
nop
movl
dec
ds
imul
and
push
popa
inc
or
adc
jns
mov
push
jmp
cld
das
popf
jecxz
rcl
in
es
ljmp
add
shr
das
cmpsb
mov
subb
sbb
mov
cmpsl
out
movsb
aad
lahf
and
ret
mov
sub
xchg
pop
and
sub
jno
pusha
popf
sub
pusha
cwtl
dec
int
xchg
adcl
cs
ljmp
stos
dec
sbb
insl
or
ds
mov
flds
arpl
icebp
pop
adc
rol
and
cmp
ja
outsb
jbe
add
insb
aad
sti
icebp
das
xchg
inc
jns
sti
mov
and
adc
test
fldt
aas
and
ret
pop
xrelease
pop
mov
xchg
xor
dec
mov
xchg
mov
idivb
leave
push
adc
imul
push
ret
push
nop
mov
ds
ror
jbe
xor
std
or
out
test
or
test
cmpsb
mov
sub
cmp
xchg
ds
inc
aaa
push
push
and
jg
cltd
sti
mov
xchg
cs
xor
mov
jecxz
nop
add
cld
lcall
mov
ds
les
and
and
and
movsl
lret
push
into
and
xchg
dec
jne
pop
sti
push
adc
or
mov
fs
push
out
std
and
in
push
movsb
push
jl
cmc
sahf
in
ljmp
lret
imul
rorl
inc
ss
push
mov
sbb
sbbb
jmp
dec
xchg
jnp
adc
out
adc
test
lods
mov
je
xorl
ret
call
fbld
in
adc
mov
ljmp
icebp
jbe
jecxz
pop
mov
shll
adc
mov
jno,pt
mov
pop
lahf
xor
pushf
ret
and
jno
mov
insl
cmp
inc
jl
sub
sub
in
pushf
pop
add
add
imul
movsl
loope
rcrl
mov
jge
insl
jmp
cmp
inc
mov
std
gs
repnz
cmp
cltd
cli
addr16
mov
xchg
sysret
shr
lock
xor
push
and
test
shrl
and
cmpl
dec
xchg
das
mov
xchg
jno
sub
frstor
cmovl
in
inc
pop
mov
xor
lock
xchg
mov
sub
inc
lret
loop
push
pop
outsl
sbb
pop
jo
in
test
lds
dec
lock
or
mov
and
popa
dec
jl
xchg
pop
fisubrs
inc
scas
mov
loopne
sbb
incb
push
push
mov
ds
add
imul
nop
and
pop
fistpl
jg
leave
rorb
cmc
dec
ret
and
sbb
push
test
mov
popa
pop
mov
pop
cld
dec
repnz
pop
mov
shlb
dec
stc
inc
jbe
lret
mov
add
xchg
sahf
dec
xor
ja
mov
std
and
or
jo
add
les
mov
add
stc
dec
push
mov
pop
fmull
stc
nop
mov
lret
cltd
dec
ret
push
imul
dec
lret
outsl
fwait
and
pop
int
clc
xor
test
push
and
test
lret
sbb
popa
mov
fisttpl
adc
mov
adc
jb
movsl
mov
xor
es
test
push
aaa
pop
xor
jnp
jg
fcompl
cmp
jbe
cwtl
xor
out
xchg
xchg
out
mov
int3
testb
pop
repz
test
es
ffreep
imul
arpl
push
xchg
push
lcall
in
out
or
in
push
push
inc
mov
sub
sbb
imul
js
shrb
push
orl
into
mov
lea
sarb
adc
daa
repz
mov
aas
adc
sbb
mov
add
cmpsb
imulb
sbb
lret
popa
aam
ljmp
and
jnp
shll
jg
rolb
test
bound
rcrb
pop
fwait
adc
mov
mov
test
xor
push
shl
pop
decl
dec
pop
bound
fisubrs
lea
fbld
aad
movsl
addr16
and
cmpsb
sub
shl
mov
lods
movb
clc
inc
cs
aad
and
orl
push
sahf
push
jns
push
cmpsl
adc
sub
xor
push
int
cmp
test
mov
sbb
or
gs
in
cmp
je
xor
lods
xor
mov
push
cli
sbb
and
outsl
lcall
inc
aas
xchg
add
lods
xor
lods
push
lock
push
and
sbb
aam
popa
out
xchg
outsb
lret
push
call
leave
push
pop
jnp
cmp
popa
push
cmp
aas
ret
push
inc
mov
and
pop
test
pop
outsl
xor
jp
mov
mov
sub
sub
push
mov
scas
dec
imul
imul
adc
mov
in
orb
dec
or
lcall
and
or
and
out
jecxz
into
test
mov
mov
or
push
mov
sub
outsl
dec
fiaddl
inc
fmull
sbb
mov
lret
or
lods
add
es
roll
cltd
das
lahf
adc
inc
int
mov
nop
lds
pop
imul
pop
je
push
mov
cltd
sbb
loop
pop
lock
not
mov
mov
mov
dec
and
cltd
mov
push
loopne
dec
xchg
pusha
jb
stos
cmpsb
jle
adc
push
addr16
pop
add
xchg
orb
shll
xchg
ret
inc
les
xchg
out
clc
repnz
add
xor
ja
hlt
out
xchg
fildl
xchg
lcall
mov
xlat
sub
imul
loop
lods
push
repnz
ss
mov
ja
or
stos
test
pushf
mov
pop
mov
xchg
out
adc
test
int3
pop
decl
xor
sbb
mov
or
mov
adc
sbb
clc
loop
in
in
sarb
adc
sub
mov
mov
test
fld
or
clc
mov
lcall
int
lret
outsb
adcb
fistpl
lods
mov
out
fadds
jp
lcall
mov
sub
mov
add
pop
adc
xchg
sbb
mov
fwait
adc
aas
mov
pop
jbe
jb
pusha
jb
inc
js
sbb
arpl
icebp
cmp
push
es
adc
pop
jb
cli
stos
mov
and
pop
pusha
adc
mov
mov
adc
pop
xor
cli
dec
fldcw
popa
sbb
icebp
in
in
lahf
jmp
cmp
mov
lcall
xchg
mov
cmp
cs
ret
xor
mov
mov
pop
fcomps
cmpsb
mov
xlat
mov
stos
mov
fldenv
enter
mov
imul
add
or
das
mov
les
dec
pop
mov
pop
out
ret
lret
and
popa
jo
inc
pushf
pushf
push
cmp
jb
scas
andb
aad
mov
lock
pop
cmpsb
add
mov
xchg
mov
cltd
push
js
loopne
sarl
jbe
popf
mov
pop
sahf
loop
mov
sti
xchg
mov
mov
into
xlat
sbb
add
mov
inc
adc
xchg
jo
adc
add
add
cmc
lret
test
mov
fs
jle
mov
mov
mul
cli
outsb
push
outsb
shrb
adc
fistl
popf
jge
int
or
xor
es
adc
jns
lea
mov
dec
push
mov
loopne
das
arpl
pop
in
adc
inc
out
xchg
cmp
lock
and
jp
out
lret
sahf
xor
jge
xchg
xchg
shr
xchg
es
jbe
and
ret
mov
inc
popf
addr16
jns
cmp
out
xchg
push
mov
rcrb
mov
mov
int
add
sub
in
sbb
out
cwtl
and
push
clc
pop
xor
arpl
shlb
jl
pop
cs
and
lcall
fs
pop
arpl
stos
pop
cmpsl
cld
addr16
fs
mov
mov
in
fidivrl
pop
adc
xor
sub
mov
or
sbb
jbe
insl
sbb
and
cld
lcall
icebp
pop
hlt
enter
dec
push
ljmp
loope
sbb
cmc
lock
and
mov
cmp
nop
ljmp
xor
into
cmp
push
lods
je
jg
pushf
aas
movsb
cmpsl
arpl
xor
dec
sub
mov
and
pop
jmp
cmp
and
divb
pusha
sti
sbb
xlat
aad
sarb
cmpsb
arpl
push
or
pop
jp
ds
dec
xor
xor
fldcw
sahf
push
pushl
jbe
mov
notl
inc
inc
jmp
loopne
negl
pop
sbb
divb
in
push
into
push
lret
xor
dec
orb
filds
inc
out
xor
pusha
shrb
in
jmp
lock
push
rcl
jge
xchg
je
push
pop
jge
arpl
mov
jecxz
mov
cmp
cmp
xor
cmpb
pop
jbe
lods
or
pop
jl
loope
add
xchg
cmp
in
aaa
sarl
cmp
jge
sahf
pop
pusha
scas
inc
mov
mov
iret
pop
arpl
cmp
aas
imulb
xor
xchg
mov
jae
jnp
pop
sub
add
sqrtps
add
in
cmpsl
and
xor
xchg
lret
into
jns
ljmp
push
adc
sub
aam
js
lcall
mov
jmp
xor
push
jecxz
inc
jno
popa
xor
dec
and
rcrb
add
ja
repnz
cmp
jl
push
out
mov
mov
test
xchg
insl
push
xor
in
inc
or
xor
mov
scas
or
ds
sbb
int3
add
sbb
pop
enter
lret
mov
or
xchg
enter
mov
mov
xorl
inc
and
rcrb
mov
xchg
push
out
adc
pop
divl
arpl
push
xchg
xor
inc
lods
stos
dec
or
rcll
test
lahf
xchg
mov
xchg
fwait
subb
mov
cltd
subl
into
lds
mov
and
adc
cmp
mov
frstor
mov
ds
or
loope
ret
js
and
imul
rorl
in
insb
bnd
fsubr
cmp
fs
cmp
loope
pushf
shrl
in
cmpl
jge
fidivrl
sub
pushf
mov
hlt
dec
jns
mov
or
xchg
adc
ss
outsb
add
and
in
add
pop
jae
pop
push
cli
jg
inc
add
pop
fs
mov
dec
into
int3
adc
fadds
dec
or
dec
jecxz
sub
repnz
xlat
imul
xor
and
lods
insb
inc
out
adc
mov
jne
std
stos
ret
mov
xor
adc
lock
daa
outsb
mov
mov
rclb
lahf
cmpsl
inc
cmp
sbb
xlat
rep
cmp
inc
adc
xchg
out
xchg
int
and
lcall
mov
dec
int3
outsl
jnp
push
adc
xor
xchg
rcrb
sahf
nop
dec
or
jno
lahf
add
enter
mov
dec
inc
int3
arpl
xchg
dec
outsb
or
imul
arpl
sub
xchg
movsb
inc
lds
je
lret
cmp
aam
pop
imul
and
pop
sbb
repnz
sbb
dec
cmp
fucom
push
rorb
ret
lea
pushf
pop
inc
out
in
inc
lahf
push
inc
cmpsb
das
jae
imul
pop
gs
int3
test
push
aas
ja
leave
psubq
jo
fildll
sbb
sub
cmc
leave
lods
fistl
movsb
xor
xchg
aaa
push
and
sbb
lcall
mov
movsb
dec
inc
sbb
mov
mov
jno
pop
lret
cmp
jp
cmpsb
push
jns
add
aaa
clc
and
or
imul
adc
sahf
xor
pushf
cs
scas
jae
outsl
hlt
jno
push
xchg
mov
lahf
or
bound
sahf
push
lret
jo
dec
dec
xchg
fwait
movl
jno
fadds
out
mov
xchg
mov
or
repnz
inc
mov
push
ljmp
pop
xor
xchg
mov
out
out
lahf
into
sub
xchg
adc
xchg
aam
adc
adc
test
outsl
push
sub
xor
inc
inc
dec
dec
sbb
cli
mov
jecxz
lock
test
mov
icebp
ja
imul
js
sti
int
fldt
and
inc
sti
es
fistpll
inc
icebp
in
push
dec
mov
bound
or
punpckldq
shrl
repz
add
xchg
push
stc
jb
daa
inc
mov
sbb
test
fldl
push
out
iret
or
in
inc
jp
sub
les
pop
mov
dec
xlat
xor
or
lret
xor
push
add
or
mov
jne
and
jecxz
out
xor
mov
mov
xlat
mov
lock
push
push
cwtl
in
mov
pop
add
fsubp
xchg
addr16
add
in
lods
call
xor
movsl
jg
sti
sbb
hlt
cmp
adc
push
push
icebp
pop
clc
and
fmulp
sub
inc
sub
dec
mov
mov
sbbb
push
mov
scas
add
cmp
ss
inc
mov
jne
out
mov
lret
hlt
xlat
add
xchg
mov
inc
inc
xchg
mov
xchg
sbb
and
imul
push
ss
jo
mov
ret
in
out
std
ljmp
sbb
dec
cs
xor
sub
push
outsb
leave
test
or
je
icebp
sbb
inc
js
mov
fcomi
add
cmp
push
or
dec
push
nop
sbb
sahf
imul
jge
nop
cmp
mov
mov
mov
dec
outsl
scas
testb
loop
add
push
stos
cmpsl
sub
or
into
sahf
sub
jmp
inc
cmp
sub
push
divl
jge
outsl
data16
into
popf
jmp
xchg
mov
in
xchg
popf
outsb
aas
mov
xchg
pop
inc
fnstsw
cli
mov
dec
inc
mulb
frstor
pop
xchg
add
or
fdiv
rolb
stos
cmpl
push
call
or
les
jp
cli
sub
sbb
jg
jae
add
loopne
ljmp
lcall
loopne
mov
inc
fisttps
xchg
sbb
inc
dec
mov
ljmp
push
sti
in
icebp
mov
jp
pop
dec
test
mov
subl
mov
push
cmpsl
adc
mov
sbb
mov
test
or
mov
cmp
adc
sub
pop
xor
iret
aad
nop
shlw
push
lret
xor
fnstenv
je
xchg
scas
f2xm1
call
inc
stc
cmpsl
lret
insb
cmp
mov
xchg
dec
je
dec
adcl
jle
fs
pushf
pop
addr16
popf
aam
orb
mov
fwait
ds
inc
add
pop
test
adc
mov
sbb
cmp
push
dec
lret
and
pop
push
jl
add
mov
fdivrs
sub
pusha
ret
mov
or
add
push
pop
jecxz
ja
adc
push
xchg
adc
xor
push
inc
cmp
mov
call
nop
fnsave
cmpsb
out
sahf
stos
aam
inc
shl
xchg
insb
test
shr
and
jnp
push
mov
imul
fistps
fstpl
mov
aaa
mov
dec
and
push
fwait
jl
out
add
sbb
fwait
lock
loope
push
mov
add
and
les
lret
xor
inc
clc
mov
mov
ret
cmc
cmp
or
daa
xchg
ds
lcall
mov
or
popa
pop
push
call
adc
ja
int3
jmp
jbe
or
pop
xor
andb
std
fcoml
xchg
addb
bound
xchg
movsl
or
sahf
cmpsl
mull
adc
aaa
js
xchg
call
in
xchg
lret
mov
cmp
or
movsl
clc
cmp
pop
loope
imul
popa
inc
loopne
test
mov
jnp
inc
cmpsb
int
push
sub
jg
cmp
out
test
jno
push
inc
testb
add
pop
sbb
outsb
fadd
fisttpll
mov
mov
jp
push
mov
sbb
sbbl
and
aam
add
mov
jecxz
ror
sub
fdivrl
fwait
jno
mov
sbb
jbe
mov
mov
and
lcall
xor
shlb
sbb
imul
and
es
pop
aaa
scas
fsubrs
into
jnp
mov
loope
mov
test
xor
sti
and
jno
cmc
insb
fisubrl
es
or
gs
fmull
shlb
adc
outsl
cwtl
test
jl
push
mov
cmc
mov
divl
mov
adc
repnz
sbb
es
cmp
nop
cmp
ja,pt
mov
push
in
enter
cmc
clc
add
mov
adc
jns
inc
xlat
sti
dec
jmp
sbb
and
enter
xchg
jb
jl
xor
push
aam
fwait
xchg
mov
and
movl
xlat
push
int3
addl
gs
faddl
lret
mov
mov
jae
adc
mov
imul
mov
aam
outsb
mov
pop
dec
lds
push
inc
xchg
out
scas
cwtl
pop
add
fwait
xchg
inc
das
xchg
call
sub
outsl
es
enter
ljmp
jmp
sub
or
pop
cmc
popa
mov
adc
jb
or
imul
jl
xchg
and
pop
int
bound
aaa
fwait
jmp
xor
clc
pop
sub
repnz
mov
fucomi
or
stos
test
cmp
cltd
pop
mov
push
adc
nop
loop
fwait
xchg
pop
dec
mov
or
fists
or
cmp
sub
imul
adc
sahf
xchg
push
mov
xor
loop
in
leave
jns
push
cmpsb
adc
nop
incb
stos
pop
pop
cmp
fidivrs
loopne
push
jo
cmp
rorl
or
test
inc
movsl
pop
jns
andb
sub
in
push
add
lods
and
cmpsb
inc
pop
dec
scas
call
jp
nop
cmpsl
jmp
mov
shll
jge
js
mov
and
add
scas
mov
sbb
jl
mov
testl
test
or
push
outsl
loop
adc
ja
insl
mov
mov
cmp
cmpsl
sub
call
jb
push
mov
pop
lods
sti
adcb
fisttps
stc
sbb
int
push
sbb
or
fmul
mov
shrl
push
cmp
nop
mov
jg
xchg
mov
mov
inc
cld
les
shll
enter
insl
cmp
xlat
inc
push
xchg
sbb
push
xchg
fimull
sbbl
aas
imul
rorb
push
lahf
mov
dec
pmaxsw
push
and
push
sbb
push
rcll
jl
jmp
cltd
pushf
int3
add
mov
mov
movsl
pop
add
push
inc
mov
insl
test
fisttpll
inc
mov
xor
add
mov
xor
or
push
jmp
inc
dec
mov
lahf
xchg
aas
lcall
nop
mov
clc
fmuls
sbb
movsb
mov
mov
jge
ret
or
add
mov
jecxz
arpl
push
ja
movsb
push
addr16
mov
lods
sub
mov
xor
out
pop
pop
jge
out
lret
and
fdivrl
xchg
outsl
jb
les
inc
jo
pusha
xchg
enter
xlat
jbe
pop
lahf
dec
push
push
fwait
jnp
ret
push
fld
cmp
xor
fwait
sbb
push
lahf
in
fstl
hlt
lea
xor
inc
lods
shlb
test
mov
pop
es
jecxz
loopne
pusha
gs
rol
sbb
movsb
sbb
pushf
mov
mov
dec
jge
or
pop
and
jl
fistps
jae
fisubrs
sbb
cmp
sub
sbb
sub
or
les
mov
lcall
call
lret
adc
add
fstl
push
es
push
repnz
cmpsl
leave
jle
xor
push
inc
iret
push
and
mov
inc
test
fbstp
sbb
push
xchg
adc
nop
mov
sub
or
iret
daa
loope
xor
push
mov
inc
out
lea
lea
ss
call
cmp
mov
lods
push
cmp
test
mov
rclb
push
loop
call
push
lret
scas
jl
or
pop
and
xor
pop
lret
ret
and
push
popl
push
aam
scas
cmp
stc
movsb
aaa
xchg
dec
add
or
out
mov
jne
in
jae
jecxz
cmp
in
fbld
les
adc
xor
addl
or
push
dec
rcl
inc
and
jo
adc
jecxz
loope
data16
insb
out
adc
jo
jmp
and
dec
xor
cld
jo
scas
sbb
adc
psubd
loope
xor
fmull
inc
xlat
sahf
in
adc
jnp
mov
shl
jnp
cmp
or
inc
loopne
popf
push
inc
mov
pusha
jmp
clc
jl
adcb
cmc
and
lea
leave
xchg
add
inc
jb
adc
sub
jp
mov
sub
js
pop
push
sti
lods
rolb
sub
or
push
daa
mov
imul
or
xchg
scas
outsb
cwtl
mov
jns
jle
pop
popf
sti
lods
and
dec
popf
movsb
add
mov
xor
pop
mov
adc
mov
cmc
lret
imulb
inc
lods
in
mov
mov
xchg
repnz
xorl
adc
sub
jg
mov
mov
add
mov
jno
popa
dec
mov
lret
bt
cmp
pop
call
dec
decb
mov
xchg
add
movhps
loopne
mov
push
std
loopne
push
xorb
dec
and
ds
fs
or
mov
enter
lds
out
push
inc
xor
jmp
cltd
lods
pushf
add
out
or
fisttpll
mov
mov
lds
fcmove
adc
lcall
ret
jbe
xor
ret
mov
sbb
push
inc
mov
or
push
or
xor
sbb
push
xorl
jo
arpl
push
jns
pop
sub
ret
out
lret
mov
test
push
std
insb
clc
lret
push
add
sbb
out
xchg
imul
cwtl
test
cmp
dec
adc
push
xor
xchg
or
or
fdivrp
sbb
dec
sbb
hlt
icebp
mov
cmc
pop
xor
sti
xchg
js
sub
cmc
dec
dec
ljmp
sbb
cld
sbbl
cmpsb
xor
int3
scas
in
out
mov
sbb
outsb
jmp
loope
jo
mov
dec
ja
out
movsb
aam
das
dec
lods
mov
cmp
mov
inc
dec
dec
mov
pop
add
xor
imul
cmpxchg8b
fsubl
push
jmp
sbb
sub
xchg
cltd
pop
pushf
scas
mov
mov
fs
lea
adc
mov
mov
xchg
fmuls
fidivrl
jne
jp
mov
addr16
imul
jo
xor
and
mov
divb
xchg
fistps
or
pop
icebp
cmp
jg
add
clc
lock
ss
lods
dec
jle
test
xlat
js
inc
jb
sub
mov
pop
dec
add
pop
mov
and
jle,pt
mov
mov
or
lahf
pop
xor
jmp
loope
movsl
lret
pop
fldcw
out
xchg
mov
push
jb
jmp
jno
and
push
or
fwait
packssdw
fisttps
das
mov
andl
xchg
imul
cmp
sbb
test
fiaddl
enter
aas
mov
inc
sbb
xchg
sar
dec
fnstcw
fs
cli
mov
sbb
lret
xchg
out
sub
inc
fcompl
std
inc
cmp
fmull
into
movsl
xchg
pop
loopne
out
xlat
fdivr
push
mov
push
sbb
or
mov
rol
loope
lods
cld
xor
es
mov
scas
fisubl
lret
jge,pn
dec
fwait
into
and
mov
lret
lret
mov
inc
jp
xor
iret
rolb
mov
mov
or
ficomps
outsb
pop
cli
icebp
xchg
add
or
fstl
xchg
sti
dec
and
add
dec
fsub
and
xor
pop
push
call
in
jge
out
sub
add
push
lahf
movsb
or
imul
loop
dec
cmc
add
xor
push
mov
push
sub
ficoml
fsubrs
push
imul
outsb
and
pushf
jp
and
add
xor
ss
mov
fcomip
lret
push
out
pop
stos
pop
bnd
out
xchg
xchg
adc
cld
xchg
mov
jecxz
scas
into
movsb
hlt
sub
pop
push
subl
inc
leave
dec
jno
dec
les
cltd
inc
ja
loopne
xchg
test
xchg
adc
mov
hlt
mov
imul
fldt
add
mov
out
or
ja
xchg
movsl
adc
mov
jae
pop
fistpl
mov
sub
addr16
cmp
inc
xchg
cmp
orl
ficompl
cmc
arpl
lret
bound
lret
jg
test
jecxz
mov
mov
mov
je
shr
cmpsb
lea
lahf
xor
arpl
lret
mov
sub
cltd
mov
jnp
mov
es
pop
sbb
aam
push
cld
push
bswap
fwait
mov
or
mov
cmp
mov
adc
mov
test
pop
sbb
inc
lret
popf
jo
adc
pop
lods
outsb
test
int
dec
sbb
sbb
mov
sbb
call
out
loopne
push
jle
dec
add
les
rolb
outsl
out
inc
loope
cmp
fidivl
fidivl
enter
fdivrl
filds
and
jae
mov
mov
sbb
addl
push
icebp
aaa
in
jae
cmp
sub
roll
ret
push
mov
scas
dec
out
scas
pop
mov
rcrb
mov
and
shrl
mov
mov
fistps
dec
mov
and
rol
mov
xchg
jmp
pop
and
outsl
fisubs
push
push
cmpsl
cltd
xchg
cmc
xor
jne
add
test
fildl
outsb
push
xchg
push
cli
movsl
jmp
dec
scas
mov
jp
sbb
pop
push
mov
fisubs
popa
jnp
mov
sahf
fs
pop
es
push
cmp
push
or
call
int3
cmp
shll
addr16
movsb
shlb
test
bound
sbb
ret
fstpt
addr16
cmp
jl
xchg
popa
inc
cmc
dec
repz
les
inc
sbb
rcrl
dec
sbb
or
xor
mov
sub
stos
rolb
rcrb
push
outsl
cltd
lods
jmp
jge
dec
hlt
addr16
or
cs
cmp
mov
mulb
sbb
dec
jae
sahf
out
hlt
cwtl
or
fdivs
jnp
xor
cltd
popa
bound
inc
repnz
cmp
inc
into
lea
es
jae
syscall
mov
inc
fisttpl
lea
pop
inc
mov
imull
fcompl
incb
repz
shr
std
or
in
pop
xchg
cmp
push
pop
shlb
sub
inc
loopne
and
push
leave
jns
xchg
mov
xlat
jo
aad
aas
popa
add
and
sub
gs
lret
fldenv
dec
jmp
pop
aas
and
ds
fdivl
fsubrp
inc
push
ja
nop
in
cltd
mov
and
imul
mov
bound
jno
fwait
jg
ja
adc
out
sbb
push
aad
outsb
jmp
dec
cmp
push
int
xchg
in
sti
and
insb
jo
jl
neg
insb
pusha
data16
imul
cli
xor
fistpll
push
xor
cmpsb
jecxz
in
fidivrl
or
rcll
pop
add
pop
notb
iret
add
lret
cwtl
int3
cmp
dec
fsubs
ljmp
inc
in
aam
ds
dec
cmp
dec
rolb
insl
outsb
movsl
mov
or
mov
mov
fwait
and
lret
leave
push
push
pop
loopne
mov
lret
enter
mov
cwtl
sti
xchg
das
pop
mov
popa
cld
sbb
pop
cmp
fwait
push
pop
mov
fsubrl
inc
imul
imul
xlat
test
ja
push
ja
cmp
insl
divl
cli
cmpsb
pop
xchg
inc
add
out
lods
int
lods
dec
or
push
pop
sub
jo
mov
mov
push
add
rcrl
ss
bound
mov
rorl
push
push
jbe
pop
xchg
dec
xchg
adc
cmp
mov
or
ss
dec
out
inc
scas
mov
das
mov
mov
outsl
ja
in
xor
cmp
and
dec
or
into
xchg
lcall
jnp
repz
popa
pusha
mov
test
in
xor
out
inc
lds
fnsave
push
and
fnstenv
outsl
je
mov
pop
push
call
hlt
loop
lea
jnp
jno
lods
push
adc
mov
aad
sub
jnp
dec
inc
scas
lock
into
adc
int
mov
in
mov
repz
imul
fisttpll
sub
notl
jae
mov
mov
or
pop
xlat
icebp
xchg
rorb
inc
sahf
jnp
xor
push
mov
mov
sbb
mov
mov
jg
outsl
inc
sub
cmpsl
mov
sbb
cld
mov
ret
dec
shlb
mov
lods
sub
int3
rorl
je
out
fcomps
mov
dec
addr16
mov
cltd
xchg
sub
rcr
sbb
in
or
cmp
out
inc
loop
in
inc
aas
sub
mov
in
test
pop
test
or
xor
push
adc
inc
add
mov
xor
into
enter
jbe
hlt
or
mov
icebp
ja
imul
les
lea
jnp
lret
sub
addr16
lcall
xchg
mov
mov
xchg
fwait
clc
xor
push
jmp
jp
adc
mov
int3
push
sub
icebp
shlb
mov
scas
leave
mov
lret
and
pop
rol
arpl
push
in
sbb
lods
add
mov
sbb
cmp
movsb
and
cwtl
dec
xchg
pop
adc
cli
xor
sub
test
sti
popa
outsl
xchg
adc
cli
hlt
pop
repz
add
sub
ja
test
push
cmp
xor
mov
xor
lock
add
adc
sbb
lods
mov
aaa
aam
pop
sub
inc
ja
sub
pusha
sub
sti
aas
dec
mov
sbb
ljmp
jb
mov
push
or
sub
ljmp
jg
ret
adc
cs
daa
push
sbb
frstor
fcompl
movsb
popa
mov
aam
test
sub
mov
rcll
mov
js
or
add
aam
or
ljmp
and
mov
mov
ds
lret
pop
testl
mov
nop
adc
mov
rcrl
jbe
xchg
std
mov
sbb
mov
dec
pop
push
jno
inc
test
jnp
pop
cmp
add
inc
mov
jb
sub
push
testl
pusha
cmp
jg
adc
pop
add
ljmp
imul
or
mov
call
dec
std
les
fwait
outsb
add
int
sbb
es
rorl
sbb
cmp
mov
stc
ss
cmpsb
jmp
out
pop
push
test
xchg
xchg
lods
lea
dec
and
pop
or
sub
mov
jne
cmp
inc
fildll
jle
dec
sti
nop
mov
pop
push
xchg
sub
push
in
test
jge
adc
sahf
in
int
pop
adc
aam
adc
cs
sbb
fistpl
scas
sub
or
mov
ffree
andl
push
sbb
mov
push
je
and
iret
dec
lods
setle
add
notl
or
and
adc
push
sub
jo
enter
hlt
pop
xor
and
fnstsw
jl
ljmp
aam
lds
loope
sub
fisubrl
and
and
int3
test
sub
and
daa
popf
mov
int3
repz
dec
xchg
push
lods
lcall
mov
call
stc
shrb
test
mov
inc
sbb
es
jnp
sbb
iret
gs
mov
insl
add
cwtl
cmp
xchg
imul
idivb
cmpsb
es
cwtl
xor
sub
adc
mov
lcall
jge
cmp
scas
inc
mov
mov
or
xor
cmp
into
ja
in
test
das
xchg
leave
dec
mov
hlt
push
or
sbb
mov
cwtl
scas
mov
xor
mov
ficoms
adc
or
mov
aad
icebp
outsl
andb
adc
ret
cmp
test
fcomip
xchg
and
jmp
jg
or
sub
leave
cmpsb
inc
pop
xchg
xchg
icebp
mov
outsb
lahf
shlb
bound
jmp
aaa
mov
or
repz
push
js
fsts
cltd
push
push
bound
add
jle
cltd
or
aad
mov
cli
or
mov
andl
xchg
mov
sbb
dec
mov
gs
test
test
mov
aad
xlat
xchg
leave
outsl
sbb
icebp
lret
adc
jne
out
add
outsl
jge
ds
cmp
sti
test
scas
inc
inc
push
gs
in
aam
add
jmp
lock
mov
test
push
xchg
lock
pushf
in
scas
or
pop
push
ficompl
mov
sbb
lret
movsb
and
pop
inc
or
or
mov
ja
stc
pop
in
xchg
or
fcompl
repz
int
test
std
push
push
push
test
in
xchg
fs
sbb
lcall
and
gs
jecxz
scas
pop
mov
push
cwtl
xchg
xor
xorl
push
out
je
dec
in
enter
lcall
sahf
aad
mov
out
pop
jae
mov
lcall
ja
adc
pop
les
pop
xor
sub
push
mov
adc
mov
or
das
xor
dec
xchg
pop
ret
add
cmovl
sub
in
frstpm(287
push
dec
xor
sbb
in
sti
imul
insb
cmp
es
mov
jg
pop
stos
ret
or
cmc
add
jge
rclb
cs
sbb
xor
or
inc
mov
notl
xchg
mov
push
push
inc
and
pushf
mov
xor
cltd
wbinvd
enter
jmp
into
adc
fnstenv
jns
mov
jp
stc
dec
test
lret
in
add
test
aaa
sbb
mov
xchg
icebp
and
jnp
iret
dec
repz
push
in
jmp
scas
lcall
push
aaa
adcb
sti
inc
push
std
fwait
add
adc
mov
inc
aad
xchg
scas
imul
daa
popl
daa
inc
test
inc
enter
adc
dec
add
repz
in
mov
xchg
pusha
lahf
xchg
addr16
test
mov
sub
cmc
pusha
dec
pop
fst
lods
dec
mul
add
rcr
push
mov
dec
add
dec
and
xchg
rolb
xchg
cltd
inc
fiadds
sahf
call
pop
jmp
cli
sub
dec
or
mov
mov
inc
mov
mov
mov
out
pop
and
icebp
mov
sub
xchg
movsb
jp
jnp
push
jae
insb
xchg
in
ret
or
std
xchg
test
xor
mov
in
inc
addr16
in
or
cmp
fbstp
mov
nop
mov
mov
pop
jae
out
mov
rolb
imul
notl
icebp
inc
and
or
or
popl
pop
movsb
sbb
rclb
jg
xchg
mov
mov
push
outsb
cs
jo
iret
cltd
xchg
sub
xor
insl
push
popf
das
mov
push
inc
push
enter
push
iret
push
sub
xor
xchg
fs
hlt
popa
mov
mov
dec
mov
mov
and
test
xor
or
cmp
mov
popa
inc
xchg
movsl
icebp
loope
adc
sti
cmpsb
lods
jecxz
stos
cld
pushf
mov
xchg
xor
sbb
push
dec
pop
fdivrs
xchg
inc
push
lcall
xlat
fs
cwtl
sub
jae
in
adc
iret
jns
hlt
mov
cmp
popf
fcompl
adc
xor
push
repz
ds
adc
pop
mov
xchg
cmp
into
inc
es
mov
add
sub
sub
add
push
sahf
stc
shrl
jb,pt
jbe
xor
shlb
addr16
fwait
subb
pushf
jmp
ja
xchg
pop
and
or
cld
sarl
sub
push
xchg
xchg
jnp
test
add
ljmp
jle
bound
movsl
rcrl
movl
cmc
jne
and
inc
inc
pop
pusha
dec
dec
loop
sub
dec
pop
addb
cmpsl
insl
xchg
and
dec
mov
cmpsb
and
jmp
push
push
adc
pop
gs
movsb
mov
mov
ficomps
xor
or
arpl
push
xchg
enter
pop
test
xchg
mov
xchg
pop
stc
in
xor
jmp
test
ljmp
and
jg
push
fwait
repz
les
divb
cmp
jo
lods
lret
test
mov
cli
mov
cwtl
test
mov
or
test
sahf
enter
call
mov
cltd
push
jle
xor
jge
cmp
int3
push
inc
jb
pusha
andl
insl
and
xchg
inc
push
jbe
dec
inc
rcl
fstpt
out
pop
jnp
loop
outsl
jnp
pop
mov
mov
testl
icebp
sbb
adc
mov
push
mov
and
popa
adc
jae
pop
outsb
inc
out
xor
pop
sbb
arpl
xor
jl
xor
cmpsl
jbe
mov
aad
adc
pop
add
sub
js
std
test
repz
and
inc
sahf
fmuls
inc
adc
mov
mov
jae
mov
das
dec
push
cmpsb
cwtl
inc
mov
jmp
mov
je
jp
insb
xchg
cmp
push
jecxz
gs
mov
les
add
in
push
dec
ljmp
push
mov
jbe
cs
sub
mov
cmp
sbb
imul
xchg
mov
jne
dec
aad
jg
pushl
clc
sbbb
push
xchg
xchg
fwait
push
jb
ja
add
loopne
les
mov
mull
insb
ljmp
aaa
movsb
mov
push
aaa
fstpt
xorl
xor
mov
hlt
rcll
push
mov
je
ljmp
dec
stos
push
stc
xchg
or
and
sti
mov
xor
pop
pop
cmpsb
dec
mov
lcall
mov
lret
adc
jp
add
movsl
out
cld
imul
pusha
and
adc
mov
insl
jl
add
xchg
lock
xlat
cmp
adc
pop
ret
add
enter
xchg
testl
mov
jbe,pn
dec
push
in
xorb
and
adc
jo
js
or
jl
jmp
sub
mov
dec
imul
mov
xchg
lds
sub
jbe
mov
sub
in
pop
lcall
mov
inc
pop
fnstenv
cwtl
cs
sub
sub
push
popf
xchg
xor
roll
outsb
pop
fwait
push
adc
cwtl
xchg
les
or
cmp
popl
xchg
cmp
mov
pop
testl
ret
and
in
mov
js
sahf
imul
or
std
xchg
arpl
std
hlt
xor
xor
addl
pop
add
in
sbb
xchg
jecxz
push
or
stos
aaa
cmp
int3
push
mov
push
and
jmp
loopne
pop
dec
stos
loopne
lock
jmp
pop
lcall
jg
out
jp
rolb
shr
sbb
xor
dec
dec
mov
incb
cmp
es
mov
ja
xchg
es
fadds
testl
and
movsl
push
push
ja
pushf
pop
xor
lcall
adc
repnz
push
insl
xchg
mov
test
loop
in
xchg
cmpsb
ret
es
xor
test
jne
xor
xchg
in
clc
popf
adc
fisubrs
rcrb
push
mov
inc
leave
aad
inc
int
pop
inc
imul
xchg
dec
mov
xchg
popa
or
ljmp
sub
jmp
sub
jp
and
push
mov
mov
mov
es
mov
or
inc
inc
sub
insl
add
jns
jnp
dec
cltd
inc
iret
jbe
pop
jbe
lea
in
cmp
int
dec
jl
inc
std
mov
lock
sbb
dec
flds
daa
push
mov
clc
jecxz
cwtl
ss
out
jns,pt
xchg
arpl
call
jge
mov
xchg
aas
mov
sbbl
and
or
adc
pushl
adc
ficoml
ret
add
cs
xchg
lret
or
add
testb
pop
insb
push
scas
mov
cmp
cltd
xchg
push
rolb
ret
jne
adcl
mov
push
mov
sbb
jb
ja
sub
sub
inc
jnp
outsb
push
jb
pusha
call
shlb
mov
sbb
push
in
es
push
or
stos
mov
mov
xchg
loop
jb
idivl
push
or
hlt
jge
and
or
mov
inc
mov
or
jp
inc
daa
adc
mov
xchg
xor
or
xchg
pop
cmp
sub
addl
push
add
or
fcmovnu
std
aad
push
cmp
inc
inc
mov
cmp
sbb
jb
pop
mov
ja
mov
out
jp
inc
rcr
cs
idiv
push
sub
cs
notl
test
xor
int3
insl
out
cmc
out
loop
fisubrl
pop
mov
bound
pop
xor
adc
inc
xor
mov
pop
push
pop
pop
mov
aas
mov
lcall
sbb
dec
push
fwait
out
adc
mov
and
or
test
repz
mov
fwait
das
scas
jmp
xor
faddl
gs
andl
test
test
inc
in
sub
dec
fisubrs
dec
in
mov
out
add
pop
testl
cs
or
into
fildll
add
xchg
lret
fnstenv
popa
imul
lds
shr
icebp
das
mov
mov
push
fdivs
pop
ja
xchg
and
pushl
aas
jne
sub
pop
cmc
pop
jno
pop
lahf
dec
fists
lock
sub
mov
psllw
movsb
sub
pushf
mov
pop
movsb
sbb
xor
dec
jp
outsb
aam
mov
stos
sahf
or
jp
rorb
sbb
add
in
jbe
or
sub
pop
ljmp
das
cmpsl
ficoml
sub
int3
pop
das
stos
scas
xchg
push
repz
inc
push
push
mov
xchg
fidivl
and
push
jb
sbb
sub
cwtl
outsl
or
call
sub
test
pop
jecxz
jmp
jnp
movsl
and
insb
shl
xchg
xchg
pop
xchg
and
popf
or
pop
push
lock
jl
push
test
or
cwtl
adc
xchg
out
scas
pusha
xor
mov
ret
and
fwait
and
sbb
sahf
push
test
dec
inc
test
pop
dec
lahf
lret
je
adc
fbld
mov
test
divl
stos
aaa
or
pop
sarl
inc
push
outsl
or
xchg
jbe
cmp
lret
mov
loope
hlt
ret
popf
fnsave
leave
xchg
jl
lret
jb
dec
das
arpl
add
mov
jae
test
inc
shll
pop
outsb
in
divl
out
imul
addr16
dec
bnd
mov
jmp
dec
fistpl
pop
jae
ja
pop
mov
jg
push
xchg
ja
xlat
add
dec
xor
lock
inc
scas
mov
jbe
fsubrl
xchg
cli
mov
xchg
inc
adc
out
test
cmp
imul
inc
push
mov
dec
out
xchg
or
xlat
inc
mull
lock
push
cmp
or
call
mov
pop
nop
repz
inc
xor
jmp
jp
shrb
inc
jns
dec
ja
popf
mov
dec
sbb
into
sbb
dec
pusha
mov
xor
or
sarl
cwtl
xor
mov
paddsw
adc
push
js
loope
xchg
call
sahf
lret
subl
ret
movb
sub
mov
fldenv
lahf
adc
adc
loop
sbb
rcr
and
in
xchg
add
jp
adc
cmp
data16
dec
int
stc
in
addr16
pushf
hlt
adcb
dec
adc
mov
jle
push
rcll
adc
xor
xor
repnz
das
sbbb
cmpl
mov
jl
fs
dec
insl
int
int3
or
sbb
mov
cli
leave
out
xor
cwtl
es
add
mov
enter
imul
mov
and
insb
lea
ljmp
les
push
push
out
mov
lea
out
test
xchg
mov
in
aam
mov
cmp
mov
inc
in
repnz
and
mov
mov
fisubs
cmp
adcb
outsb
loopne
lock
cmpsb
hlt
xchg
add
cmp
push
mov
add
pop
mov
cs
inc
pusha
sub
les
shrb
inc
popf
push
ja
adc
dec
or
cmp
mov
movsb
fs
lods
lods
mov
aaa
cli
and
test
ret
mov
mov
and
subb
shlb
insl
cmp
inc
xlat
xchg
adc
jae
inc
or
mov
sbb
push
xchg
out
adc
sbb
in
push
jb
imul
popf
pop
mov
hlt
lret
inc
push
sbb
jle
ss
in
flds
outsl
pop
push
adc
xor
es
test
lea
gs
movsl
and
out
mov
push
mov
and
daa
shrb
sarb
jmp
fiaddl
adc
xchg
mov
mov
call
aaa
mov
jle
add
scas
repz
pop
adc
jg
popf
lock
fcoms
push
jo
pop
cltd
fstps
cmp
push
in
mov
fstpl
inc
add
dec
push
int
sbb
pop
push
cmp
repz
arpl
xor
xor
mov
lret
rcll
test
jnp
loopne
leave
addr16
orl
cmp
sub
xor
arpl
push
ret
jne
jecxz
outsl
inc
movsb
stc
add
jo
mov
clc
andb
sub
cmpsl
test
add
add
add
mov
idivb
mov
fsubs
mov
je
lcall
les
mov
idivb
out
cltd
aad
loop
push
pop
in
mov
fsub
and
and
sbb
push
sti
and
fisubs
lods
xchg
andb
dec
jae
and
das
icebp
push
nop
mov
add
pop
inc
stc
imul
mov
inc
ficoml
ss
push
lcall
faddl
sub
sub
cmp
test
imul
lock
sub
dec
fistpl
mov
out
mulb
push
gs
inc
je
dec
out
in
in
sub
fs
xchg
mov
cli
cs
rcr
adc
push
dec
fcomps
in
and
sbb
mov
pop
fisttps
cmp
inc
pop
push
jge
pop
or
hlt
xchg
jno
xchg
or
push
push
fstenv
inc
rcrl
into
jae
sbb
lahf
lods
mov
add
xor
xor
aam
ficomps
sub
xchg
les
pop
push
pop
inc
enter
lea
sbb
push
adc
into
js
pop
push
mov
xchg
mov
popf
je
loop
ja
xchg
jno
ror
pop
mov
jns
int
cmc
sbbl
xchg
das
in
push
cmp
sub
xlat
jae
scas
mov
push
jae
nop
xor
adc
xor
cmpb
loop,pt
cmp
rorl
cli
push
lods
jbe
dec
scas
jae
xor
fwait
cmpsl
mov
movsl
mov
mov
and
push
int
cmpsl
adc
scas
ljmp
cmp
mov
jnp
adcl
xchg
jbe
jle
popa
mov
in
inc
ret
lods
mov
out
outsl
pop
dec
mov
daa
pop
mov
in
mov
push
xor
jno
dec
icebp
mov
pusha
jp
jle
cmp
sub
mov
pop
inc
pop
mov
pop
sub
fnsave
icebp
int
mov
sti
jne
adc
cmp
scas
add
dec
imul
or
or
xchg
xor
mov
sub
or
or
inc
lcall
or
iret
rclb
xor
arpl
mov
ret
sbb
insl
adc
cmc
jb
mov
cli
outsl
lods
icebp
movsl
outsl
mov
rolb
lret
mov
loopne
pop
xor
add
xchg
or
fucomi
push
jecxz
cmp
mov
dec
or
push
stos
adc
push
dec
lods
test
inc
gs
gs
mov
fiadds
pop
ret
ljmp
test
and
mov
aam
leave
xor
fistl
cmc
and
and
xor
fistl
out
in
pop
loop
addr16
inc
outsb
gs
xchg
repnz
fnsetpm(287
imul
xlat
lret
out
xchg
rcl
call
repnz
int3
std
sbb
shll
push
and
movsl
add
iret
mov
and
dec
icebp
dec
pop
cmp
jg
xor
mov
test
aaa
fistpl
jne
push
sarl
jmp
push
pop
xchg
data16
dec
jl
xchg
movsl
adc
lahf
xor
jmp
cmp
in
push
pop
jnp
xlat
xchg
cmp
orb
ljmp
dec
arpl
aas
dec
loop
pop
mov
fldlg2
cmp
xchg
repz
sbb
sub
and
sub
add
add
insl
inc
xor
push
ret
or
xchg
testl
xchg
std
or
dec
add
fsubr
xor
xor
or
aam
mov
cmp
movsb
mov
fdiv
push
lock
jns
jg
fsubs
insb
popa
addr16
int3
nop
pop
adc
jns
dec
mov
push
scas
rclb
stos
lret
xor
and
addr16
repnz
mov
mov
nop
rclb
push
into
sbb
lods
out
into
push
imul
lcall
cs
jmp
jge
iret
push
jl
jge
pop
add
dec
push
imul
pop
xchg
jmp
into
inc
mov
arpl
addr16
outsl
addr16
cltd
or
jecxz
inc
cmp
sahf
sbb
fnsave
cli
in
ss
jae
stc
inc
mov
mov
pop
fs
mov
sub
out
negb
lahf
xor
lret
gs
xchg
jno
and
ficomps
xchg
pop
mov
push
and
lahf
cli
dec
aaa
mov
cwtl
or
insl
pusha
sbb
push
jp
jns
aam
xchg
fdivrs
mov
sbb
add
xchg
cmp
rcrl
inc
mov
fmull
xchg
test
xor
out
mov
sub
cmp
dec
sub
lahf
inc
and
mov
push
sbb
mov
mov
sti
cld
dec
push
int3
sti
shrl
sub
sbb
jp
enter
pop
sti
sbb
inc
out
xchg
fisubs
in
inc
jmp
int
mov
and
and
push
mov
push
das
cmp
in
pop
arpl
rol
stos
adc
mov
jg
inc
jecxz
cld
cmp
push
push
cmp
into
xchg
out
sbb
and
mov
out
mov
orb
clc
pop
xor
ss
sub
jns
dec
sub
mov
xchg
dec
add
ret
sbb
jmp
je,pt
gs
je
aaa
add
adc
iret
sbb
sub
push
xchg
dec
mov
scas
jecxz
sti
push
sbb
and
jge
push
ljmp
push
jno
xlat
push
aaa
push
sbb
xchg
pop
pop
fwait
mov
pop
cmpsb
in
pop
sbb
jle
cmp
loop
test
xchg
in
mov
dec
cmpsb
std
pop
enter
jl
xchg
cmp
and
in
stos
gs
mov
dec
imul
in
pop
aad
aad
movsl
xor
and
aas
shrd
jno
insb
addr16
stos
push
ret
jp
int3
in
fildl
xorl
repnz
or
cmp
out
rcl
cmpsl
outsl
xchg
mov
push
in
sub
js
mov
and
inc
cmp
mov
fidivl
mov
rolb
push
adcl
sahf
inc
dec
add
mov
jl
movl
ljmp
scas
push
outsb
out
loop
loope
rclb
rcl
inc
xor
sub
scas
mov
movsb
and
in
mov
loop
inc
out
dec
sahf
or
or
shll
mov
call
shll
push
mov
add
fcoms
pop
in
pop
lcall
ficoml
or
data16
push
test
add
adc
icebp
mov
sbb
test
test
loop
mov
push
pusha
leave
inc
or
leave
imul
dec
ds
aas
test
sbb
cmp
test
and
mov
aas
or
xchg
mov
and
or
divl
cmp
es
out
and
fisttpl
push
push
push
sub
mov
add
add
pop
in
sbb
popf
mov
incl
shrb
mov
aaa
test
iret
fldt
arpl
mov
adc
pop
gs
rcrb
clc
fs
addb
xlat
and
xor
cmp
mov
pusha
mov
cmp
xor
imul
cmp
mov
js
nop
mov
jno
and
cmc
xchg
ret
leave
cld
fisubl
jecxz
in
repz
aaa
push
fwait
jmp
cmp
mov
lods
jmp
out
add
jnp
subl
stos
pop
sbb
jns
out
mov
loop
divl
arpl
jg
pushf
ffree
push
std
mov
mov
lods
icebp
outsl
sbb
add
mov
repnz
into
inc
mov
out
mov
fistl
adc
repnz
mov
adc
cmpsb
neg
addr16
rcrl
jnp
and
lahf
adc
aaa
jl
ljmp
popa
outsl
jo,pt
outsb
icebp
mov
and
sub
mov
mov
cwtl
xchg
out
cmp
mov
stos
data16
mov
inc
cmp
adc
sbb
into
cmp
test
mov
inc
aas
jo
movb
add
in
sub
popl
jne
fs
bound
mov
gs
dec
loop
mov
mov
pop
pusha
xor
and
cltd
insb
icebp
sub
or
jns
shrb
dec
pop
outsl
movups
add
test
dec
xchg
cmpsl
sti
dec
inc
cmp
iret
cmpb
in
leave
push
stos
push
pop
aad
mov
xchg
and
fadds
xchg
sbb
pop
push
daa
pop
ds
fdivrs
imulb
xchg
test
sahf
mov
adc
ja
mov
push
xor
inc
out
loopne
push
into
or
xchg
xor
imul
push
xorl
testb
xor
push
arpl
or
dec
mov
add
arpl
lahf
mov
mov
mov
dec
repz
push
add
add
outsl
dec
lods
imul
xchg
or
xor
scas
xor
scas
xchg
lock
mov
cmpsl
dec
out
dec
push
xor
jnp
inc
dec
sbb
mov
and
outsl
jmp
cwtl
mov
lds
les
xchg
sub
sbb
lea
and
or
dec
push
inc
iret
jnp
xor
ret
or
cmp
ds
pop
or
mov
xchg
mov
push
jl
fstl
std
mov
push
ss
cltd
mov
mov
pop
lock
sub
hlt
and
les
vmovsldup
lcall
stos
sub
add
push
in
lcall
or
lea
lret
xor
sbb
mov
add
push
call
ljmp
sti
mov
sahf
mov
pop
shll
in
lcall
cmpsb
imul
pop
sbb
movsl
xor
aaa
pop
leave
lahf
clc
add
cwtl
mov
imul
imul
mov
lret
mov
and
inc
int
inc
push
dec
pop
mov
insb
rclb
imul
sarb
mov
nop
mov
cmp
jo
les
mov
pusha
inc
xchg
mov
push
loope
es
push
sbb
sbb
fcmove
xchg
into
mov
dec
mov
loop
or
or
outsl
addr16
fwait
insl
test
fwait
adc
fstpt
pushf
xor
jae
or
inc
outsb
rolb
in
jb
adc
pop
push
out
aam
imul
cmp
test
call
adc
fisttpll
sub
adc
mov
sti
ds
dec
dec
incb
out
fdecstp
mov
iret
pop
stos
pop
sahf
int
js
sbb
xor
pop
mov
leave
icebp
cmp
pop
dec
stc
jnp
sub
mov
ss
and
xchg
out
mov
outsl
fistps
cs
fistpl
sbb
sbb
je
jno
shr
pop
inc
sbbb
popa
insl
fadds
in
add
jecxz
xor
xor
daa
call
xchg
or
test
frstor
jnp
jno
dec
test
jecxz
xor
xchg
mov
lret
mov
and
fdivrs
pop
pop
pop
stos
in
fistpll
jmp
lods
mov
imull
in
outsl
dec
lahf
xchg
popa
subb
mov
xchg
mov
or
cli
aas
nop
cmc
push
sbb
pop
data16
jnp
adc
stos
outsb
iret
jecxz
cs
outsl
xchg
and
or
adc
adc
mov
nop
mov
mov
test
cmpsl
test
in
mov
aad
clc
shrb
lods
dec
notl
xchg
ret
mov
xlat
lret
or
roll
inc
dec
xor
ja
ficoml
mov
and
inc
in
loop
xchg
xchg
add
pusha
jecxz
push
push
push
test
xor
xchg
out
pop
inc
cltd
icebp
aad
mov
push
imul
inc
mov
rolb
jne
push
loop
lahf
xchg
adc
js
cmpl
rclb
inc
repnz
or
fcomps
dec
push
pop
xchg
inc
aam
jecxz
cs
dec
test
bnd
iret
aad
jge
and
jmp
test
xchg
inc
pop
or
fildll
dec
adc
xchg
mov
xor
jge
add
cmpsl
sub
dec
adc
mov
pop
adc
les
fstl
sub
nop
pop
jnp
stc
xor
push
mov
test
add
cld
testb
sub
divb
imul
or
mov
nop
cmpb
fstl
mov
mov
mov
cld
mov
cmp
jo
sbb
arpl
sub
mov
xchg
orb
dec
jp
xchg
movsl
popa
sub
xchg
xor
jp
popa
inc
fadds
loopne
testl
cmp
push
push
adc
sbb
cltd
adc
xchg
subb
pop
in
andb
cmc
sbb
sub
xchg
adc
inc
dec
lds
dec
sub
in
jp
jb
lahf
jl
out
mov
loop
andb
push
aam
mov
rcrb
sub
push
inc
mov
addl
xchg
test
fadds
mov
pop
sbb
cmpsb
and
call
dec
push
jne
repnz
nop
and
or
mov
in
sub
push
sbb
cmp
mov
fidivrs
adc
lcall
dec
sbb
fstl
add
pop
inc
add
push
in
stc
jb
shlb
cmp
ret
pop
arpl
ret
xchg
loopne
adc
adc
icebp
and
jbe
dec
xor
mov
cli
add
jnp
notb
jge
rcll
movsb
xchg
mov
mov
xor
stos
mov
lods
sti
dec
daa
sub
pop
daa
adc
and
pop
xchg
push
leave
ja
sub
fstpt
stc
sub
push
lret
data16
mov
add
sti
mov
mov
push
jb
inc
repnz
add
leave
lods
push
mov
adcl
jmp
mov
stos
call
movsb
cwtl
push
inc
or
add
mov
inc
push
stos
jle
xor
push
scas
sbbb
jne
pop
jns
xchg
aad
out
sbb
incb
xlat
loopne
sbb
pop
fwait
pop
movsl
adc
fistl
scas
inc
cmp
add
mov
out
push
movsl
scas
dec
subb
cmp
pop
shlb
lret
clc
std
adc
inc
mov
or
outsl
mov
push
inc
jae
das
xchg
push
or
jl
add
loope
incb
and
nop
scas
lods
cmpsl
lret
nop
sbb
fistpl
mov
nop
mov
cmc
cmp
xchg
jl
and
cli
adc
test
mov
call
pop
mov
testl
fsubrl
jo
jnp
add
in
add
adc
cltd
icebp
mov
inc
flds
in
jmp
inc
test
bound
xchg
push
cmc
mov
or
adc
cmc
fdivrs
sbb
jnp
jge
dec
add
ja
lret
push
lcall
mov
push
fs
sub
mov
xor
jne
inc
cld
add
jl
clc
fwait
shr
xchg
imul
jbe
dec
nop
pop
sti
push
fucomp
popa
pushf
or
mov
icebp
mov
popa
jae
add
sub
popa
stos
inc
movsb
xor
lcall
sub
aaa
mov
fnstcw
lea
ret
rol
push
mov
or
add
push
cwtl
mov
aam
and
pop
push
out
mov
test
vprotb
add
sahf
mov
and
repnz
mov
in
push
add
mov
or
movb
push
push
cmpsb
fisttpll
fs
mov
mov
sbb
lods
jae
cmp
pop
pop
addb
or
in
xor
in
inc
inc
mov
xor
fwait
xor
and
add
in
inc
or
xchg
cmc
in
out
jo
aas
sbb
cmp
cmpsb
cmp
jmp
mov
aam
dec
imul
pop
mov
xor
addr16
lds
mov
sti
cmp
jno
loop
jge
aaa
ljmp
ja
pusha
repnz
pop
pop
or
push
jecxz
mov
adc
test
cmp
push
out
sahf
push
notl
inc
shr
adc
lods
repnz
inc
daa
jge
dec
sub
lret
scas
xchg
insb
movsb
pushf
push
xchg
sarl
mov
xor
xchg
pop
aam
cwtl
fistl
hlt
or
and
jo
aam
push
adc
mov
fisttpll
add
mov
and
int
push
add
dec
adc
bound
jle
imul
jg
mov
sub
add
in
dec
out
in
int3
dec
cmpsl
mov
sbb
addb
sbb
xor
cmpsl
mov
test
icebp
pusha
pop
cmp
in
xor
pusha
popa
xchg
jns
mov
nop
jl
push
and
movsl
cltd
jnp
fldt
popf
imul
mov
out
clc
les
rcll
mov
outsb
fdivrs
adc
xchg
mov
jg
popf
js
lcall
out
fmuls
fwait
adc
imul
push
ret
fucomip
stos
add
aas
into
fwait
lods
pop
xchg
nop
in
outsl
stc
xchg
mov
arpl
cmp
push
push
pop
int3
or
jbe
rorb
outsb
lret
push
loop
loopne
push
pushf
xchg
xchg
scas
sahf
cli
cmp
dec
cmp
or
movsb
stc
mov
sahf
in
cltd
out
fstl
pop
jmp
or
or
pusha
lods
pop
pop
push
neg
jecxz
mov
jo
pop
cmp
xchg
scas
cmp
adc
lsl
insb
fstp
fucom
xchg
fnstenv
pop
cs
mov
add
test
xchg
inc
fs
ds
and
mov
fidivs
xchg
cmp
mov
xchg
mov
jp
mov
clc
or
aam
fnstsw
and
stc
push
pop
adc
jp
fwait
sub
dec
aas
add
pop
push
adc
xchg
loopne,pt
mov
outsl
dec
cmp
sbb
push
fistpl
mov
and
mov
lds
sub
add
xlat
lds
mov
dec
dec
xchg
jle
cmp
mov
test
push
sarb
test
xor
xor
ror
subl
or
ret
hlt
in
jmp
cmp
cmp
in
inc
add
sbb
cmp
push
loope
sub
mov
aad
cvtps2pd
dec
dec
sbb
mov
fdecstp
adc
aam
push
inc
push
bound
inc
cmp
mov
insl
nop
jg
cltd
jmp
xchg
imul
push
sub
fnstenvs
sbb
fiadds
mov
in
fnstenv
mov
mov
pop
subb
push
dec
stos
fldcw
sahf
sub
or
out
js
sbb
push
cld
mov
inc
mov
jns
test
stc
fs
les
sub
sub
pushf
rcll
fbstp
inc
dec
insb
fbld
ret
and
push
bound
adc
push
push
pop
jge
outsl
jmp
out
into
popf
repnz
jo
pop
fdiv
ror
inc
inc
or
js
push
cwtl
test
dec
sub
ret
pushf
dec
xor
aad
test
dec
aam
dec
push
push
test
xchg
shrl
cmp
es
xorl
mov
adc
pop
cld
mov
xchg
aaa
loope
jbe
jno
out
jp
dec
lret
inc
cwtl
cmp
inc
mov
xlat
lods
or
adc
sbb
std
repnz
cmc
je
jecxz
mov
sub
jne
rcl
aam
pusha
fildll
mov
loop
aam
jbe
inc
cli
mov
js
xor
or
push
in
xchg
dec
andb
cld
mov
jbe
mov
cmc
rclb
mov
out
push
mulb
and
and
fs
lods
mov
mov
ret
and
sub
and
ret
push
adc
inc
mov
xlat
mov
out
adc
sub
addr16
hlt
cmp
xchg
aam
push
sbb
fcoms
sub
xor
xchg
dec
sub
jmp
or
aad
bound
sarb
nop
leave
insb
jno
adc
pop
pop
and
ja
sti
or
test
xor
imul
adc
fldt
testb
notb
and
adc
inc
mov
sbb
inc
xor
mov
mov
xor
lock
fsubr
jo
pop
xor
and
and
push
sbb
inc
es
jb
mov
xchg
sub
pop
inc
out
mov
ljmp
mov
pushf
mov
pop
jmp
jmp
icebp
inc
xor
mov
rorl
push
or
mov
shlb
scas
mull
jbe
xchg
out
rcll
sub
pop
push
jns
std
insb
and
mov
hlt
or
add
push
jns
das
scas
dec
sub
adc
imul
cmp
test
and
cmp
loope
pop
cmp
pop
ss
pushf
in
sbb
cmc
fsts
fsubrl
jbe
js
enter
jne
stos
or
and
xchg
lret
cmpsb
inc
mov
mov
movsl
dec
dec
jecxz
lods
jns
popf
xchg
jle
fwait
mov
mov
sub
dec
fisttpll
mov
sub
xorb
dec
fistl
gs
nop
inc
or
notb
in
lods
lods
icebp
pop
sub
push
jb
sub
dec
push
xor
sbb
dec
js
sbb
cmpsb
push
adc
ljmp
push
jle
orl
rorl
sub
out
mov
adc
xchg
jnp
in
cmp
add
ljmp
xlat
pop
fnstcw
xchg
les
ja
jmp
mov
mov
add
mov
std
es
mov
pop
int
sub
cli
out
push
andb
pop
xchg
leave
adc
xchg
mov
mov
int3
iret
enter
adc
mov
dec
daa
adcl
std
dec
jp
pop
fisttpl
mov
rcrb
jp
or
sti
iret
lret
pop
lcall
leave
jnp
mov
pop
cmpl
fdivrs
sub
arpl
xchg
xor
shll
sub
push
dec
sub
sbb
or
push
push
xor
adcl
pop
mov
ja
std
mov
mov
test
hlt
sarb
adc
adc
dec
jmp
movsb
repz
xchg
fstpt
stos
or
cmp
push
mov
and
add
xchg
in
aad
jge
enter
adc
aaa
sti
mov
jl
jno
push
add
repz
xchg
cmc
xchg
mov
out
inc
arpl
lea
sbb
cmp
rclb
jae
jo
pop
sub
rcll
scas
into
and
cmp
mov
xor
and
div
in
loope
pop
std
xchg
aas
popf
mov
gs
test
xchg
sahf
push
add
das
add
rcll
sbb
aam
loopne
dec
cmc
decb
add
int
jb
mov
ret
in
push
inc
xor
xchg
jmp
xor
sub
pusha
ret
cltd
loope
jmp
bound
aam
inc
jo
sbb
lret
rolb
ss
aaa
movsl
vpmadcsswd
mov
jmp
xlat
lret
xor
jns
sahf
mov
shll
loope
bound
fs
push
dec
and
hlt
sbb
frndint
xchg
lds
pop
ret
pop
cmc
stos
cmpsb
jl
sbb
cmp
cmp
pop
cmp
je
jb
xchg
sub
rep
jecxz
xchg
aas
arpl
mov
mov
fildl
in
loope
adc
ljmp
or
rorb
add
lods
call
fmuls
sbb
dec
jmp
dec
mov
andl
mov
pop
ss
out
sbb
mov
jle
leave
fwait
addl
lods
xor
hlt
nop
jo
je
xorb
pop
int
sti
jmp
xchg
pop
movsb
mov
add
aam
scas
pushf
outsl
fldln2
mov
push
mov
adc
nop
pop
stos
pushf
dec
push
sbb
sbb
mov
sahf
hlt
iret
pop
fs
iret
mov
jbe
insb
add
call
test
test
cli
mov
ljmp
bound
dec
dec
xor
dec
cltd
cmp
leave
movsl
cmp
cmp
adc
xor
adc
lods
add
xchg
les
pusha
loopne
orb
sbb
mov
jo
lret
jmp
mov
sub
test
pop
int
xor
dec
xor
xchg
int
mov
ret
pop
loope
xlat
mov
add
xor
mov
stos
sti
shl
inc
adc
sti
pop
ret
jbe
rclb
int
sub
sbb
sar
es
jb
sbbl
push
pop
shrl
mov
inc
imul
mov
pop
add
int
inc
xor
movsl
mov
gs
add
rclb
dec
mov
fdivl
inc
cmp
cld
push
adc
pusha
stos
bound
aam
mov
xor
jecxz
jbe
aas
push
cmove
add
lea
stos
repnz
mov
jp
mov
inc
lea
mov
popf
ret
daa
mov
movsb
and
rolb
shrb
adc
std
fisttpll
imul
idiv
jno
push
sbb
ss
pop
sbb
jo
adc
hlt
push
popf
mov
add
pop
mov
gs
mov
jbe
jle
imul
cld
stos
ss
cmp
into
jae
inc
gs
push
daa
sub
mov
xchg
je
aad
mov
call
jne
mov
and
out
push
adc
movl
adc
pop
stos
int
das
fdivrl
icebp
sbb
aad
aaa
jns
fsts
sbb
sub
and
mov
mov
ret
stc
ljmp
sbb
jnp
fstl
push
mov
outsb
and
dec
jmp
jno
test
mov
daa
pop
mov
scas
leave
sbb
je
fiadds
cli
fidivs
pop
mull
mov
ss
xchg
pop
fs
jne
les
pop
xlat
sbb
sub
imul
mov
add
push
fiaddl
repnz
fldenv
mov
push
inc
pop
cmc
adc
idivl
in
out
mov
mov
sti
add
mov
scas
sub
adc
arpl
mov
insb
into
rorl
int3
pop
stc
lahf
cmp
jmp
movsl
inc
ror
cld
sbb
test
repnz
mov
es
cltd
nop
in
arpl
hlt
in
mov
jns
cmp
daa
push
sbb
mov
mov
and
mov
aam
lret
inc
das
push
idivb
push
iret
mov
pop
mov
mov
mov
jl
xchg
loopne
aad
push
mov
adc
or
sbb
sbbl
add
aaa
mov
jo
mov
mov
jge
lods
dec
js
mov
adc
nop
roll
ret
fistpl
xlat
and
loope
aaa
dec
test
mov
test
neg
adc
leave
iret
test
fnstsw
mov
int3
add
mov
inc
outsb
enter
aam
arpl
push
cltd
ss
scas
jae
into
jb
pop
fisubrs
sbb
sbbl
pop
mov
sub
push
sbb
cmp
minps
in
dec
lods
xor
das
ret
or
ja
pop
push
xor
data16
inc
repnz
rcr
adc
jg
sbb
aaa
scas
nop
pop
es
icebp
mov
mov
pop
fdivrl
mov
xchg
inc
sbb
mov
mov
movsb
pop
hlt
cld
pop
sbb
push
daa
insl
cwtl
fldcw
mov
fwait
jmp
push
lret
lds
inc
dec
jge
fldl
scas
mov
jns
jp
bound
rclb
add
sti
hlt
mov
nopl
sbb
mov
cmc
fdivr
or
mov
sub
fdivs
ss
sbb
movsl
push
cmp
push
pop
call
xchg
ja
pop
add
lods
mov
out
or
or
jne
jno
fwait
in
sub
xor
or
push
push
and
movsl
cs
jg
push
cmpsl
sarl
cmpsl
mov
jb
dec
add
out
dec
cmp
mov
and
xlat
ja
add
mov
mov
stos
xchg
cld
jne
sbb
loopne
sub
int3
out
es
sahf
stos
enter
cli
mov
stos
loop
js
xchg
sarb
push
sbb
lds
fsubl
clc
sub
sahf
mov
mov
jbe
mov
adc
cwtl
adc
outsl
cmpsb
push
cmp
xchg
faddl
stc
call
pusha
add
or
jbe
call
sub
inc
mov
cmpl
jo
fisubrs
notl
clc
incl
pusha
movb
and
mov
in
ret
mov
jle
xchg
add
rorb
int
lods
sbb
ljmp
sbb
shlb
and
movsl
cmp
jae
xor
negb
mov
add
cmc
notb
mov
bound
mov
sarb
mov
aad
xchg
adc
rcr
ret
js
inc
lahf
das
fisttps
sbb
jb
mov
pop
stc
in
jnp
testl
pop
dec
aam
mov
mov
xchg
jl
mov
std
jmp
sti
mov
inc
pop
mov
dec
test
cmp
lock
gs
cmc
lods
sbb
sub
cmp
test
mov
sti
es
es
test
mov
dec
dec
cmp
xchg
xor
push
in
add
add
add
into
mov
inc
icebp
sbb
aad
inc
inc
push
push
pop
cmp
cltd
outsl
out
movsl
adc
cwtl
pop
jnp
dec
pop
inc
inc
xlat
shll
les
xchg
nop
mov
mov
push
and
icebp
and
cmpsl
jmp
sub
mov
fnstsw
dec
lods
scas
imul
pushf
fsubrp
and
inc
push
mov
jecxz
cmp
loop
sarl
ja
and
cltd
shrl
mov
out
popa
loopne
push
adc
mov
call
arpl
sbb
dec
sar
das
int
addr16
js
xor
mov
stos
inc
pop
aaa
jb
cltd
inc
idiv
or
dec
push
divl
mov
xchg
pusha
inc
gs
dec
xrelease
mov
int
test
xchg
add
xor
imul
xchg
test
add
fwait
inc
inc
or
push
cmp
mov
lahf
pop
mov
fisubrs
dec
pushf
test
mov
mov
icebp
inc
inc
dec
mov
jb
jle
mov
mov
aaa
cmp
xchg
adc
pop
fs
pop
popf
sbb
cmp
cmc
in
mov
xchg
lret
adc
or
lea
sahf
pop
mov
or
in
addr16
cmp
sbb
jg
pop
loopne
cmp
int
jp
add
adc
mov
fwait
mov
orl
popf
pop
xor
mov
arpl
sti
cli
mov
enter
adc
mov
hlt
mov
aam
sub
sbb
lods
mov
jb
iret
outsl
stc
adc
add
mov
mov
add
out
orl
call
xchg
test
adc
sbb
jecxz
das
cli
mov
mov
mov
das
lds
sbb
cmpsl
jb
sub
pop
xor
xchg
push
dec
jp,pn
std
push
mov
jp
jne
mov
pop
pop
mov
das
cmp
push
jne
xchg
mov
test
jmp
or
pop
xchg
cmc
aaa
es
inc
in
add
into
sub
push
int
jo
movsb
mov
pop
fdivr
dec
js
inc
pop
mov
outsl
sub
jp
jne
movsb
push
pushf
dec
inc
sub
jne
mov
movsb
and
push
pop
pop
push
test
movsl
and
lock
mov
jge
sbb
decb
push
and
inc
fucomip
test
insl
or
mov
xor
lods
xchg
js
scas
mov
cmc
xchg
push
lea
xor
loope
mov
add
jnp
dec
in
dec
dec
push
xor
pop
mov
and
out
fnsave
push
pushf
outsb
lods
mov
and
subb
out
insb
push
imul
cltd
xor
in
push
mov
mov
addr16
jle
jg
mov
pusha
sbb
add
data16
or
aam
push
mov
or
cwtl
jmp
dec
cmp
mov
addr16
jne
fs
sbb
or
dec
bnd
ja
les
sahf
jge
push
lcall
in
cmp
mov
sbb
repz
inc
jp
mov
jns
sub
invd
or
mov
mov
es
icebp
sub
jle
mov
lahf
cmc
xchg
lods
sar
jecxz
fsubrs
jb
mov
shll
insl
adc
subb
sub
xchg
or
imul
shrb
adc
sub
lock
fdivr
aaa
xor
iret
sub
pop
clc
xor
into
pop
sbb
cmc
loop
addb
inc
pop
test
xor
icebp
fistl
xor
iret
push
adc
mov
xchg
outsl
lahf
push
adc
lods
or
add
leave
mov
clc
jae
push
fbld
cmp
int3
add
iret
mov
push
bound
sti
insb
int
loopne
inc
jp
js
mov
cltd
or
cmpb
jns
lret
leave
mov
aas
push
adc
xchg
mov
sub
data16
orb
es
or
pop
mov
test
jge
sub
outsb
push
cmp
lock
aad
fwait
loope
lea
inc
inc
pushf
inc
addr16
mov
push
mov
mov
xor
mov
fbstp
sbb
insl
pop
lahf
jle
repz
inc
push
jbe
or
loopne
inc
popa
dec
or
lds
out
add
mov
pusha
fsubl
lret
fwait
cmp
outsl
popa
push
test
pusha
mov
cmp
jge
ret
pusha
les
cmp
sbb
fbld
push
out
shll
jae
lcall
pop
ret
mov
loop
stos
mov
repnz
mov
cmp
mov
inc
adc
js
loopne
mov
adc
cwtl
iret
int3
in
repnz
mov
jecxz
pop
out
in
xchg
fildl
cs
sbb
outsl
xchg
mov
or
add
dec
push
pusha
lret
stc
xchg
pop
cmp
pop
pop
mov
push
mov
repnz
insb
or
icebp
jle
ficoms
lods
rclb
int
ret
sbb
cmp
inc
movsb
and
sbb
mov
dec
pop
jg
shl
and
lea
leave
xor
cli
add
push
test
push
xchg
enter
mov
cmp
inc
push
fistps
and
loop
ret
mov
std
in
fnstcw
rorb
mov
lahf
dec
push
push
cmpsl
inc
test
jns
and
iret
push
rolb
in
and
mov
scas
das
mov
cmp
dec
pop
jg
push
jecxz
pop
push
inc
inc
popf
pop
clc
call
call
sub
dec
movsl
mov
sub
fisubrl
push
ss
cmp
das
cmpsl
imul
mov
enter
out
test
xchg
int
jge
std
adc
imul
popa
pop
pusha
cmp
outsl
jl
hlt
repnz
mov
fimuls
push
push
fisttps
xor
in
add
push
push
lahf
leave
jecxz
fdivrs
pop
add
pop
cmp
push
ja
sbb
jg
fnstenv
test
pop
lods
pop
xor
loope
shl
dec
es
fsubrs
mov
push
or
test
vpmullw
in
daa
add
mov
push
mov
jge
mov
dec
mov
or
lods
ss
xchg
xor
mov
ja
lahf
cmp
cld
loop
sbb
mov
jp
negb
and
cmp
data16
sbb
icebp
daa
push
xchg
inc
add
mov
add
lock
jecxz
inc
pop
jnp
add
lret
xor
int
loopnew,pn
test
shrl
push
jmp
jno
call
icebp
insb
mov
xchg
sahf
inc
repz
sti
shlb
cmc
dec
lods
cmp
add
jge
es
iret
jge
sub
push
scas
sahf
imul
jl
sahf
repz
xorb
jae
lahf
sbb
cmp
sbb
lods
iret
dec
mov
pop
cmpsl
mov
sbb
arpl
cmp
loope
xchg
dec
mov
push
fxch
or
out
lock
les
movsl
sub
and
jbe
decl
ds
fmuls
int3
mov
scas
sbb
mov
push
imull
dec
cmp
pop
xchg
out
jle
insb
in
out
fisubrs
jae
lock
cmp
mov
mov
ret
mov
adc
cmpsl
fimull
mov
cmc
pop
xchg
sbb
loop
test
sub
testb
mov
jo
push
hlt
xchg
or
iret
stc
rclb
or
and
mov
or
test
fadds
add
sbb
cmp
dec
and
jbe
adc
and
outsb
mov
dec
pop
mov
and
scas
cmp
test
inc
jnp
push
mov
test
cmp
adc
dec
arpl
iret
mov
notl
imul
jmp
movsl
outsb
xor
lds
jp
xlat
xor
jne
jg
xor
ss
cmp
inc
jno
mov
inc
lods
pop
pop
lret
loop
fs
es
pop
icebp
dec
mov
xor
test
inc
sub
lcall
inc
test
cmc
mov
test
mov
push
xchg
mov
ret
aaa
das
jmp
inc
pusha
dec
xor
fmuls
push
jecxz
loope
xchg
mov
pop
xchg
xchg
leave
cmp
or
clc
addr16
notb
subb
je
adc
stos
xchg
push
xchg
cmp
pop
mov
call
push
push
imul
inc
push
enter
xchg
pop
cmpsb
ror
cmp
jg
roll
out
pop
addr16
imul
mov
xlat
adc
ljmpw
aad
mov
lods
cmp
or
jnp
inc
ss
cmpsl
inc
mov
cs
stos
dec
and
outsl
loop
jbe
scas
ret
test
cli
insl
es
stos
sub
and
jns
adc
push
cmpsb
mov
xchg
pushf
inc
xchg
inc
inc
insl
loopne
sub
lret
lcall
jp
add
cmp
or
and
pop
sbb
jne
xchg
test
aas
rolb
clc
inc
mov
lret
inc
xor
call
mov
lcall
mov
out
jno
mov
cmpsb
div
cltd
test
into
mov
push
shrb
scas
mov
cmp
rolb
push
sub
adc
hlt
adc
lea
sbb
mov
sti
int3
stc
repz
mov
mov
cmpsb
cmp
inc
scas
push
adc
pop
and
clc
popa
jl
push
aad
jmp
sub
jbe
mov
mov
pop
xor
sub
lret
add
pop
dec
adcl
lods
cmpsb
and
negl
mov
stc
ljmp
push
dec
fxch
xchg
addb
test
and
lahf
xor
push
ss
and
jne
mov
xor
sti
xchg
popa
xchg
inc
push
int3
cmp
ss
xlat
jb
xchg
xchg
notl
xor
push
dec
es
push
xchg
shrl
push
inc
std
push
out
pop
loopne
data16
in
push
sbb
ss
pop
or
ret
jmp
lahf
sub
sub
xchg
sbb
mov
gs
xor
mov
mov
repz
cmp
dec
fnstsw
addr16
xchg
dec
dec
pop
stc
andb
jecxz
scas
orl
sbb
inc
or
mov
iret
mov
aad
das
jge
mov
lahf
imul
lahf
test
insb
jle
js
dec
movsl
movsb
add
scas
aaa
inc
movsb
push
out
in
rol
gs
movsl
sub
aad
iret
rorb
scas
rorl
cmp
adc
sub
ljmp
add
test
bound
or
loop
dec
sahf
neg
clc
mov
imul
xor
pop
inc
sub
mov
xor
xchg
xchg
or
mov
mov
jnp
or
mov
sub
mov
imul
in
add
sbb
cld
inc
push
sbb
faddl
stc
stc
dec
fld
je
push
jo
pusha
xchg
jl
cwtl
les
repnz
lahf
push
inc
cmpsb
push
in
xor
xchg
push
dec
or
nop
sbb
pop
loope
xor
xlat
mov
dec
in
mov
or
jbe
mov
sub
test
fnstenv
icebp
subl
mov
and
jp
and
pop
pop
neg
mov
sbb
addb
scas
inc
inc
dec
imul
and
fmull
inc
mulb
jle
mov
add
rclb
jae
mov
sub
cmpsl
hlt
ja
test
call
into
lret
out
inc
les
cmp
dec
mov
incb
int
je
sahf
cmp
inc
loope
inc
shlb
loope
dec
ja
dec
add
ficompl
in
and
xor
pop
shrd
dec
into
jecxz
scas
dec
push
lock
inc
cmp
or
int
int
xor
int
jle
xchg
into
sbb
mov
syscall
mov
bound
fs
aaa
shll
pop
jp
rcrb
mov
adc
or
jle
cmc
ret
lea
jmp
xor
cmc
aaa
mov
xchg
call
dec
xchg
cltd
sti
aad
arpl
scas
cs
out
loopne
setge
mov
push
dec
mov
lea
fidivrs
push
sub
imul
ja
jo
in
jno
imul
dec
lods
loope
cmp
push
and
xchg
imul
out
or
fcoml
insl
adc
lds
in
sbb
push
adc
movsb
shl
lea
sub
push
lea
cltd
and
and
add
sbb
neg
and
xchg
dec
outsl
mov
cs
xor
xchg
push
push
inc
cmpsw
push
dec
shr
arpl
pop
hlt
popa
jmp
lss
mov
and
adc
aam
mov
call
pop
mov
cmp
in
sbb
out
add
mov
fnstcw
fstpl
xchg
out
stos
js
outsl
test
inc
fsubrs
mov
das
int
fcoms
xor
call
sub
out
jbe
mov
inc
das
xchg
lcall
lods
fcmovnb
mov
dec
lret
out
movsl
xchg
mov
outsl
xor
lock
push
adc
hlt
fstps
lret
outsl
aas
jl
adc
inc
mov
mov
aad
pop
xchg
jb
enter
pop
lahf
adc
sub
movsb
outsl
sbb
out
dec
pop
data16
jnp
cmpsb
arpl
jb
movl
inc
fisubrl
mov
mov
jbe
dec
shll
andl
stos
pop
xor
pop
push
mov
jne
jo
ret
addr16
stos
cld
addl
mov
cs
popa
sub
clc
mov
jo
mov
add
jl
or
test
cmp
nop
popa
gs
daa
into
sahf
mov
cmc
adc
arpl
sub
cltd
and
ds
sub
scas
inc
mov
xchg
adc
pcmpgtb
jnp
icebp
adc
xor
xchg
mov
popa
push
es
pop
out
inc
adc
loop
roll
dec
repnz
dec
cmp
push
rclb
sub
cli
push
out
sub
sbb
fsubrs
mov
dec
cmp
xchg
inc
mov
inc
cld
fimull
jle
ret
xor
pusha
lret
das
lock
je
aas
push
ds
loope
pop
adc
push
fnstenv
jge
mov
popa
and
xchg
sub
pop
lret
and
cmp
inc
js
fs
mov
movsl
push
pop
xchg
adc
je
inc
pushf
jmp
inc
clc
pop
sub
fcmovb
push
mov
push
mov
adc
out
mov
adc
mov
pop
ja
imul
cmp
sbb
dec
pop
mov
adc
aam
shrl
jmp
lahf
sub
aam
push
jnp
jb
pop
inc
scas
sahf
xor
clc
jbe
add
pop
mov
jl
inc
loop
bnd
cwtl
mov
adc
dec
aad
hlt
xorb
test
push
inc
popw
mov
xchg
into
and
mov
pushf
push
inc
pop
sar
jmp
xchg
jp
imul
fbstp
pop
pop
test
cmp
cmp
push
lods
mov
aam
push
arpl
loopne
jns
push
lret
mov
xchg
lret
mov
pushf
mov
addr16
mov
sub
add
orb
aam
dec
out
xchg
das
in
bound
mov
mov
mov
push
inc
out
stc
inc
sbb
jo
jg,pt
dec
jne
pop
orb
ljmp
rol
in
sub
add
mov
sub
adc
in
test
lock
cwtl
mov
inc
push
cmp
cld
pop
in
popf
and
in
cld
in
mov
outsb
pop
loopne
mov
hlt
mov
jnp
cmpsl
ret
pop
imul
xor
push
xchg
lods
fwait
jns
ja
das
xor
stc
adc
rol
mov
mov
xchg
xlat
pusha
aam
in
call
add
loop
push
stos
xor
pop
xchg
inc
push
mov
jnp
pop
stc
mov
pop
mov
insb
cmp
jo
les
xor
vmread
daa
mov
mov
jge
sub
ss
or
xchg
cltd
test
dec
cld
cmpsb
cmc
sub
push
sbb
fidivrs
pop
xchg
jns
sar
dec
lret
lock
lock
inc
mov
push
cmpl
mov
in
xchg
cwtl
fs
push
adc
cmc
add
inc
push
nop
sbb
push
mov
push
daa
outsl
daa
xorl
pop
rcrb
jl
ljmp
xchg
sub
inc
fimuls
mov
aam
arpl
sub
adc
or
cmp
push
adc
push
mov
inc
cs
lahf
insl
fiadds
sbb
lret
xlat
mov
xchg
jle
pop
mov
add
nop
fidivrs
sub
dec
pusha
sbb
push
insl
mov
pop
arpl
xor
inc
hlt
insb
mov
out
mov
es
popf
pop
arpl
dec
pop
mov
aas
test
sar
mov
mov
sbb
push
inc
stc
aam
cmp
loope
cmp
push
out
or
mov
test
outsb
mov
jo
movsb
stos
ficoms
iret
mov
and
js
push
mov
mov
inc
pop
ja
pop
push
fbstp
jmp
jne
or
pop
fiaddl
lea
push
pop
sbb
inc
mov
daa
lock
adc
sub
xchg
jo
out
mov
test
jmp
jmp
icebp
push
mov
pop
pop
xor
leave
fmuls
or
cltd
scas
iret
rcrl
lods
jns
clc
shr
sbb
xchg
lock
mov
test
mov
mov
sahf
pop
dec
repnz
fildll
adc
xchg
mov
inc
jl
movsl
cmpsb
sub
pop
call
xlat
sub
ljmp
jns
mov
or
jno
xlat
pop
lahf
sti
pop
es
or
xor
sahf
and
icebp
pusha
sbb
mov
out
adcb
push
jmp
push
aaa
mov
inc
sbb
cmp
xor
psubusb
lods
icebp
lods
cmpsb
xor
xchg
sub
adc
cmpsl
insl
adc
adc
jecxz
clc
in
int
pop
stos
jmp
jmp
mov
stos
dec
ficoms
ss
jbe
lods
add
xchg
mov
setnp
and
outsb
push
mov
lahf
or
and
insb
and
sbbb
test
roll
fildll
pop
jnp
fsts
sub
jecxz
sbbb
fcomps
push
data16
loope
push
cmp
xchg
push
clc
and
jo
out
lret
push
enter
cld
das
cmc
sub
mov
repz
mov
or
mov
test
jg,pn
in
jecxz
cmc
test
es
out
lds
jne
xlat
xchg
push
adc
add
and
dec
fnstcw
cltd
popf
popa
cmp
cmp
xor
ss
sbbb
mov
std
das
xchg
xchg
test
add
push
negl
ja
daa
jo
mov
shll
xchg
mov
in
fs
jnp
cmp
sub
movsb
push
or
gs
shl
test
test
ja
cmpsb
lods
out
xor
fdivs
mov
inc
adc
cmp
push
dec
xchg
jl
xchg
call
iret
enter
mov
loopne
sbb
mov
mov
in
xchg
inc
ret
sbb
mov
inc
mov
cmp
out
jbe
xor
mov
jnp
ja
jle
mov
lret
popf
jle
cmc
sahf
mov
mov
das
cmpsl
fldt
xchg
mov
pop
and
rclb
sbb
lret
std
or
sbb
dec
inc
inc
jp
test
test
ljmp
pop
ret
call
xchg
jns
mov
adc
daa
inc
inc
inc
jge
ja
cmpsb
mov
adc
adc
add
les
add
hlt
pop
push
aaa
dec
dec
adc
xchg
xchg
jge
and
xor
cmp
xlat
in
test
ds
jbe
mov
and
fldenv
loop
sti
gs
scas
loopne
lcall
out
mov
lret
aas
imul
and
adc
mov
push
test
dec
insb
mov
fadd
jnp
sub
xchg
mov
loopne
cmp
xchg
jo
xchg
data16
push
or
je
push
add
jae
mov
das
imul
xor
push
jmp
adc
cmpsl
pusha
jg
outsl
ret
lahf
pop
jbe
ret
sbb
push
mov
add
xor
mov
insb
and
subb
mov
pop
push
enter
inc
test
fwait
movsl
inc
jae
outsb
xchg
pop
dec
ljmp
push
inc
jbe
mov
mov
scas
test
adc
out
aaa
ficoml
inc
push
push
push
jne
pop
jp
inc
mov
sub
mov
aam
dec
add
push
movsb
push
cmp
cwtl
mov
mov
popf
xor
rclb
inc
hlt
ret
sbb
jb
xchg
inc
jmp
pop
pop
test
push
in
pop
fwait
cmpsl
mov
mov
icebp
mov
iret
cld
mov
scas
xor
sub
cmpsl
push
das
popf
sbb
adc
sbb
inc
das
insl
ret
or
ljmp
scas
jmp
mov
sub
dec
lahf
test
add
nop
sub
xor
out
popw
test
lret
repz
or
sbb
jmp
aad
or
test
test
jne
inc
mov
mov
cmc
push
pop
out
or
int3
jle
ficoms
insl
jecxz
mov
jecxz
pop
push
movb
popa
jbe
inc
loop
daa
imul
popf
mov
es
shlb
clc
bnd
sbb
pop
xchg
popf
mov
shlb
test
in
xchg
jb
ret
mov
imul
and
pop
mov
dec
dec
stos
and
sub
pop
push
adc
xor
les
mov
daa
inc
jp
hlt
mov
ja
and
fisttpll
scas
push
xchg
sti
lea
aaa
repz
icebp
ja
jp
data16
jmp
mov
mov
es
inc
pop
shlb
mov
sbb
add
add
in
add
jecxz
je
and
fisubrl
push
loopne
add
hlt
out
add
ret
rorb
xlat
mov
adc
sbb
sti
jecxz
cld
imul
ja
leave
adc
pop
mov
pop
cmc
lcall
mov
sub
push
je
aaa
xchg
notb
mov
push
les
mov
cmp
cmc
jle
test
add
and
lahf
push
mov
rolb
pop
inc
xchg
idiv
push
scas
inc
xchg
mov
testb
hlt
outsl
push
mov
call
sub
cmp
aas
mov
pop
ret
and
add
das
push
pop
rol
test
test
mov
mov
and
out
push
and
scas
out
int3
popa
and
sbb
sub
daa
jnp
cmc
xchg
ds
outsb
aaa
mov
aaa
notl
mov
int
aaa
push
push
in
ss
movsb
cli
mov
nop
add
mov
push
test
xor
xor
mov
mov
or
out
lods
pop
xlat
jp
pusha
inc
shr
sub
pop
divb
or
sub
sub
jg
test
jb
cwtl
and
inc
pop
adc
imull
repnz
or
mov
sbb
stc
mov
ret
test
aaa
dec
gs
fwait
or
push
sbb
iret
add
in
into
sti
xor
cmp
push
iret
loop
push
mov
test
int3
xlat
imul
dec
ss
cmp
fiadds
shlb
nop
cmp
pop
sbb
data16
mov
rol
xchg
ret
stos
aaa
push
lret
and
das
push
cli
adc
push
frstor
pop
inc
mov
inc
ja
fdiv
xlat
or
mov
scas
push
sti
enter
sbb
out
insb
mov
jl
imul
push
pop
out
addr16
xlat
jne
jo
xchg
mov
mov
pop
and
hlt
mov
pop
cmp
stos
jg
jmp
cwtl
adc
and
imul
xchg
jp
and
xchg
fnstenv
mov
pop
int
rcrb
adc
lock
push
ljmp
mov
push
sahf
sti
in
fsts
mov
cs
das
nop
jle
fdiv
pop
movsl
jbe
mov
mov
mov
mov
xor
xor
mov
mov
daa
mov
int
outsb
pop
fdivrl
xor
mov
sbb
fucompp
pusha
sbb
mov
imul
sub
adc
inc
pop
and
inc
stos
add
addr16
sahf
xchg
jl
jmp
push
or
cmp
stc
ret
aas
sbb
jecxz
xchg
cmp
insl
xchg
or
xor
jnp
inc
push
or
cld
mov
cwtl
fwait
fwait
fwait
mov
rcrb
mov
sarl
notb
jg
popf
cmp
aad
sub
scas
lret
sub
or
lds
ds
inc
adc
in
add
sbb
imul
cs
pop
pop
sbb
and
es
cmp
outsb
xchg
or
push
mov
gs
mov
push
jae
push
pushf
movsb
and
add
aad
mov
into
leave
xchg
insb
or
jns
pusha
and
rorb
ja
adc
adc
adc
inc
stos
sti
sub
lcall
mov
iret
mov
leave
mov
cli
imul
popf
mov
cwtl
stc
aam
lahf
cmpsb
mov
cmpsl
jge
add
push
sbb
xchg
jno
dec
dec
leave
mov
jns
cli
push
xlat
cmpsb
adc
or
std
cmp
add
mov
xchg
cwtl
jmp
icebp
jns
mov
test
mov
mov
pop
vmread
int
push
push
inc
inc
out
and
dec
pop
aaa
mov
cmpsb
push
int3
cmp
mov
les
out
into
in
es
xchg
fsts
call
sub
push
dec
jnp
mov
pusha
ljmp
in
test
cmp
add
cld
xlat
cmpsl
cs
mov
sub
idiv
out
mov
pop
adc
call
pushf
mov
aam
cmp
or
jae
push
divl
rorb
iret
dec
inc
jg
out
jb
mov
ja
mov
push
add
out
aaa
pushf
push
xchg
sbb
jbe
mov
int3
sub
sub
mov
mov
popf
push
ds
mov
movsl
icebp
xchg
inc
mov
xor
jge
mov
sti
test
sbb
fdivrs
pop
and
imul
out
xor
xor
jecxz
insl
cltd
mov
pop
mov
or
call
insl
fnstcw
dec
aad
out
ret
cwtl
xor
icebp
xchg
je
sbb
mov
repnz
in
imul
outsb
dec
test
orl
shrb
repz
in
jge
popf
mov
push
or
cli
cmp
xor
sahf
js
jnp
je
sti
movsb
addb
adc
bound
ljmp
xchg
mov
jecxz
fwait
mov
insl
jno
mov
add
out
test
shll
and
xor
jns
js
jp
testl
jg
adc
jns
jns
jle
fwait
bound
shl
inc
mov
rol
lahf
lahf
xlat
stc
push
fcmovu
filds
pop
mov
mov
insl
or
aam
dec
mov
shlb
insb
mov
jge
or
xchg
bswap
xchg
into
roll
xor
jl
pushf
fnstenv
push
outsb
insl
xchg
std
mov
add
sarl
sbb
pop
mov
adcl
or
mov
jo
and
sbb
adc
stos
mov
pushl
pop
insb
jmp
or
sbb
pop
mov
sbb
inc
sbb
sbb
stc
inc
push
popf
mov
enter
and
sbb
js
pop
mov
pop
or
pop
jns
adc
addr16
dec
nop
sbb
ja
jecxz
xlat
xchg
out
dec
mov
into
inc
push
ljmp
xor
xchg
sbb
sub
cmpsb
mov
loop
jns
dec
fsub
sub
int
loopne
sbb
fsubrp
inc
pop
mov
xchg
and
sti
sub
xor
mov
lahf
pop
mov
xchg
jo
xor
cltd
pop
movsb
outsl
scas
iret
jge
mov
or
adc
jge
test
and
adc
cmp
leave
lcall
cmp
cmp
js
dec
or
inc
add
lcall
jg
add
pop
mov
shlb
dec
fstl
mov
mulb
dec
insl
mov
xchg
es
jp
in
jnp
rcrl
mov
sub
leave
xchg
dec
pop
or
add
stc
push
int
icebp
inc
rclb
nop
arpl
jg
push
jno
push
push
inc
jns
push
pop
pusha
in
dec
mov
sbb
dec
fs
adc
test
push
mov
repnz
and
push
xlat
rcl
bound
test
mov
add
cmp
xor
adc
repnz
fs
cmpsb
imul
xchg
push
sti
xorl
jo
aaa
ds
sti
cwtl
or
jno
mov
imulb
cli
push
dec
ljmp
lcall
cmp
out
push
pop
fistl
jo
cli
cli
sub
sub
and
push
inc
jl
pop
testb
cmp
clc
vorps
test
std
sbb
or
mov
mov
dec
mov
cmp
cmp
fdivl
add
aam
and
arpl
pop
add
js
outsb
in
jl
add
out
lds
pop
push
xchg
lea
xor
push
pop
je
addb
mov
and
std
repz
call
icebp
sub
fdivp
and
xor
mov
and
sti
into
jmp
sbb
mov
and
jno
lret
or
cwtl
adc
xorb
daa
push
int3
divl
pop
lock
shlb
add
or
push
rorb
xchg
or
jo
lcall
cli
mov
and
test
enter
test
lock
cltd
fwait
les
addl
dec
add
out
in
and
aad
inc
adc
push
leave
jb
or
xchg
sbb
push
mov
xchg
idiv
or
dec
or
in
xor
aaa
clc
stos
test
jns
push
dec
clc
sbb
lret
sahf
and
test
es
pop
ss
push
push
push
scas
sbbl
jg
cmp
in
rorl
fdivrl
jnp
icebp
pop
rclb
aam
sar
roll
clc
jnp
cwtl
les
jp
mov
mov
push
clc
les
hlt
mov
adc
rcrl
fnop
mov
push
ja
jae
push
dec
and
add
iret
loop
cmp
ret
adc
mov
mov
add
mov
adc
int
or
jbe
add
cmpsl
out
mov
lahf
jae
in
fucom
scas
adc
sbb
pusha
incb
xchg
jne
leave
imul
xchg
and
popf
movsb
ret
jge
inc
mov
pop
dec
xor
adc
popf
das
pusha
aam
fwait
mulb
ret
rcl
aaa
pusha
or
cmp
cli
pop
jno
int
out
out
stos
fldenv
mov
cmp
jbe
lods
fdivl
add
dec
mov
jnp
cli
add
sub
jbe
cmc
outsl
pushf
loope
sbb
xor
cmpsl
and
ljmp
pop
jg
hlt
fistps
add
inc
sbb
into
jne
in
aaa
push
jl
js
or
mov
dec
cmp
cmp
or
sub
enter
pop
repnz
cwtl
cwtl
fadd
pushf
les
dec
orl
and
aad
pop
mov
xchg
add
xchg
mov
xor
fwait
sar
pop
mov
das
add
or
xlat
mov
mov
or
ret
cmc
xchg
push
pop
repnz
loope
pop
decl
push
push
inc
out
and
cmpsb
in
inc
je
iret
sub
pop
or
sti
jecxz
push
sti
xor
es
scas
in
out
shlb
in
sbb
test
fbstp
xorb
dec
adc
xchg
call
xchg
lods
shr
loope
or
cmpsb
dec
test
pop
mov
or
bound
lea
scas
cmpsb
scas
or
jne
pushf
push
icebp
lods
mov
out
sahf
gs
sub
cmp
sahf
sbb
in
mov
repz
in
pop
xchg
shll
pop
jno
xchg
notb
xor
or
stc
push
jp
fs
ss
sbb
imul
insl
mov
xchg
xor
dec
mov
mov
dec
pop
cmpsl
xchg
mov
fstps
inc
fmull
jmp
push
loopne
mov
mov
cmc
or
jmp
mov
mov
mov
out
outsb
cltd
mov
dec
in
jle
ficoms
cmpsb
and
loopne
xchg
inc
das
dec
js
fisttpl
push
movsl
mov
sub
xor
add
sub
and
mov
sbb
add
shrb
faddl
pop
dec
dec
mov
xor
jecxz
cmc
in
stos
repz
cli
mov
popa
test
gs
daa
and
push
jnp
jbe
ficoml
push
xor
fnstcw
lahf
jo
mov
cwtl
jecxz
mov
mov
fwait
test
stos
enter
imul
popf
mov
xor
mov
mov
and
sbb
bnd
pop
or
mov
mov
adc
jle
mov
xchg
cmp
jmp
subb
cld
fmuls
cmpb
mov
push
push
cmp
loopne
rcr
dec
ret
cmp
cld
mov
add
sbb
mov
int3
lahf
push
cmp
xorb
xor
nop
pop
mov
mov
inc
dec
imul
test
jge
scas
movsl
imul
adcb
fidivl
xor
dec
or
mov
adc
jo
xor
call
mov
lea
push
stos
or
mov
in
pop
std
push
fiaddl
push
add
jne
mov
jno
lret
popa
addr16
call
mov
mov
xchg
dec
inc
xor
pop
movsb
movsb
scas
addr16
fidivrs
shl
dec
stos
pop
mov
dec
cmp
fst
sbb
insl
sti
pop
push
pusha
cmpsb
mov
sbb
pop
popa
jl
xor
cli
cmp
add
cmpsl
mov
fistpll
lods
dec
mov
cli
mov
xorb
rcrb
or
mov
popf
xchg
sub
add
or
push
mov
mov
mov
movsl
mov
ljmp
enter
or
bound
pusha
enter
loope
push
mov
pop
mov
rorb
test
dec
push
negb
or
nop
push
sub
push
aad
add
dec
adc
mov
fs
insl
xor
cmp
and
in
into
repz
sbb
xlat
add
inc
aad
ds
mov
sti
hlt
mov
int3
xchg
fs
mov
jecxz
and
xchg
popf
outsl
pop
add
shl
and
inc
pushf
mov
rcr
push
cwtl
xchg
push
mov
inc
in
cld
xor
lock
lcall
mov
xchg
or
ljmp
mov
fisubl
std
xchg
jge
out
decl
add
imull
loope
and
xor
lret
push
xorb
inc
in
push
fwait
mov
data16
mov
xchg
xchg
ss
mov
mov
fildl
insl
mov
fdivrl
dec
sub
xchg
sbb
sahf
or
inc
mov
mov
fstl
push
cmpsb
pop
adc
pop
roll
subl
mov
cmc
mov
adc
push
mov
in
in
test
lcall
mov
mov
nop
roll
enter
cmp
push
or
sub
mov
mov
adc
inc
fcomps
mov
out
pop
mov
or
popa
xor
mov
inc
mov
js
adc
cmpsb
mov
repnz
aam
mov
mov
jp
nopl
sub
push
inc
pushf
mov
insl
or
repnz
jae
mov
and
xchg
or
test
sub
pop
aas
push
fwait
pop
pushw
xor
mov
pop
orl
aam
jecxz
mov
xor
aam
jge
push
out
clc
insl
popa
mov
fisubl
fnstenv
mov
mov
popf
loopne
scas
xor
out
push
jo
mov
mov
mov
pop
lods
sbb
mov
mov
and
insl
mov
push
in
ja
nop
sub
or
fs
mov
ss
pop
mov
inc
roll
push
cmpsb
arpl
cli
js
loopne
sarb
mov
push
psubw
dec
loopne
ljmp
xor
iret
cltd
xor
jp
jle
adc
iret
out
ret
mov
pop
dec
idivb
cwtl
push
ds
cmp
add
inc
stc
push
add
sub
mov
dec
aad
xor
in
xchg
rcr
sbb
cmp
into
mov
dec
sub
xchg
popa
jno
xchg
lcall
dec
pushf
xor
in
push
call
xor
outsb
imul
adc
pop
sbb
mov
push
lds
add
mov
call
stc
adcl
xor
jle
inc
les
adc
cmp
push
hlt
and
lahf
add
jo
popa
shlb
dec
push
bound
mov
and
imulb
xor
sbb
jge
lret
xor
fcmovnbe
ret
mov
stos
cmpsl
mov
divl
ljmp
cmp
pop
sbb
daa
pushf
adc
popa
lcall
mov
adc
mov
mov
push
or
jns
jecxz
inc
fs
push
add
jl
adc
fs
clts
in
push
sti
mov
xor
hlt
in
lods
nop
into
add
or
cmpsl
mov
add
or
mov
fldcw
pop
cmpsb
push
int3
jbe
mov
pop
mov
insb
dec
jnp
scas
test
loopne
sub
push
jmp
jae
les
lods
fcomps
mov
adc
cmc
jo
push
test
ja
cli
imul
push
mov
xchg
fs
sub
pop
pop
jge
jg
popa
mov
pop
jmp
cmpsb
test
mov
mov
daa
pop
cwtl
add
dec
add
inc
pop
aas
mov
and
dec
mov
or
dec
mov
outsb
popa
mov
push
jp
sub
mulb
ss
jbe
call
std
imul
fs
stos
lods
mov
pushw
fstl
roll
ficoms
mov
gs
idivl
xor
mov
lods
sub
lcall
cmpsb
popa
orb
cmp
shr
in
adc
movsb
cmpsb
mov
test
sahf
xchg
hlt
pop
mov
xchg
shlb
lcall
and
push
jecxz
scas
xor
push
arpl
rcl
push
popf
jge
outsl
lea
jl
mov
xor
mov
cli
call
in
repnz
lret
fwait
push
lods
xchg
pop
mov
and
adc
cli
fistpl
or
push
pop
push
mov
inc
push
fsubrs
repnz
push
fs
adcb
mov
and
int3
pop
xor
add
sbb
dec
pop
xorb
cwtl
shrb
pop
sub
sbb
in
mov
arpl
dec
sbb
imul
xchg
jmp
inc
leave
xor
dec
inc
xlat
dec
jge
xchg
fistpl
fwait
sub
scas
subb
scas
out
xchg
hlt
jmp
inc
adc
fs
movsl
add
and
jecxz
sti
nop
fsubp
xchg
movl
jne
imul
adc
mov
scas
scas
inc
xchg
mov
inc
je
cwtl
jmp
fsubrs
in
mov
shl
sbb
in
and
push
mov
cltd
iret
or
lahf
inc
and
hlt
jg
jne
imul
dec
cmp
xchg
movsl
fwait
out
das
dec
scas
and
jle
rorb
fisttpl
dec
xchg
jb,pt
pop
mov
dec
outsl
flds
mov
or
pop
pop
mov
add
fwait
stc
sti
inc
outsl
sbb
push
sub
aad
push
mov
mov
sub
jne
push
pop
movsb
cltd
cmp
jo
mov
inc
mov
out
cltd
hlt
les
cs
and
cs
sahf
lret
and
jb
xchg
into
jae
loope
loopne
lcall
lret
xchg
popf
lcall
js
dec
xor
add
movsb
je
orl
adc
mov
mov
in
addl
movsl
pop
es
in
out
dec
loopne
in
mov
cmc
mov
lods
popf
scas
sub
lcall
test
ljmp
sbb
insl
xchg
enter
xchg
and
xor
fs
xor
cmp
dec
data16
leave
sbb
and
lcall
icebp
imul
jae
and
lods
push
int3
fldenv
enter
pop
arpl
xchg
dec
in
aaa
fnstsw
cmp
int
sub
ljmp
push
popa
mov
into
xchg
push
xchg
push
xchg
call
mov
pop
pop
adc
loope
inc
cltd
outsl
sahf
andl
sbb
dec
test
mov
dec
mov
cs
mov
rorb
jmp
test
inc
and
inc
add
ja
push
aad
pop
xchg
sbb
add
sbb
or
pusha
dec
cli
fdivr
lea
shlb
push
sub
popa
xor
adc
nop
pop
dec
cltd
pop
test
fcompl
mov
loopne
and
les
xchg
adc
xchg
mov
jne
jp
adc
test
push
lods
gs
insl
arpl
mov
fidivl
mov
sbb
cs
es
xor
mov
inc
xor
cld
jl
pop
call
or
lret
xchg
stc
out
scas
or
hlt
adc
pop
icebp
dec
lods
aaa
mov
jnp
sbb
outsl
cmpsb
lods
xor
mov
add
add
push
shl
lret
rorl
out
push
nop
repnz
pop
push
divb
jmp
mov
imul
out
cli
mov
jg
inc
inc
mov
mov
jo
or
lret
xlat
pop
loopne
out
jge
mov
ss
stos
ss
adc
popa
fcmovb
leave
and
std
sbb
and
inc
stos
mov
xor
clc
inc
lock
push
loope
ss
mov
fimull
fs
push
aas
mov
lods
jle
jb
in
sub
mov
jo
rolb
sub
imul
sub
xor
or
jnp
jbe
inc
inc
inc
fwait
or
mov
adc
jmp
cmp
mov
mov
shll
inc
push
mov
arpl
add
cli
mov
outsb
dec
sarb
jl
adc
add
iret
clc
cmpsl
and
fwait
sub
or
insl
mov
test
cmpsb
and
and
adc
popa
mov
rclb
dec
mov
lret
xor
cs
mov
add
push
jge
shrb
cmp
pop
mov
add
das
sti
adc
or
sarl
pop
stc
loopne
push
fmull
add
mov
xchg
cmp
sbb
negl
test
hlt
adc
push
push
cltd
mov
jle
cld
sti
nop
adc
xor
ja
das
sbb
fsubs
jmp
cmp
jecxz
shrl
std
das
test
adc
out
push
stc
enter
pop
nop
xchg
cmp
nop
movsb
fisubs
mov
jo
lcall
aas
fwait
sub
lcall
pop
and
dec
xor
xchg
lock
in
cmp
imul
scas
mov
push
and
popf
scas
and
lea
lods
in
icebp
js
out
je
in
sbb
iret
ss
cmp
inc
mov
cmc
cli
mov
popa
cmpb
test
lock
divl
in
sub
mov
xor
push
dec
cld
insb
adc
jae
mov
mov
popa
push
xor
outsl
and
int
cld
loopne
sbb
jl
out
aad
gs
mov
divb
add
aad
and
jns
je
xlat
jae
adc
enter
std
cmp
mov
mov
xlat
pop
repnz
sbb
jmp
das
pop
xor
scas
test
int3
scas
xor
js
push
pop
mov
adcb
or
xchg
inc
fiaddl
ss
xchg
pop
sahf
push
out
add
inc
inc
and
mov
dec
push
lcall
test
adc
cwtl
mov
add
inc
pop
into
orl
xchg
mov
mulb
mov
mov
ret
cmp
test
adc
pop
pop
xchg
push
call
xchg
rcll
icebp
daa
outsl
test
arpl
mov
stos
jge
inc
and
sbb
sub
xchg
jmp
cmp
push
fadds
pop
dec
sbb
repnz
insb
ljmp
mov
dec
clc
nop
shrl
or
out
or
addr16
mov
psubq
mov
ret
push
and
fwait
scas
or
jbe
subl
sbb
mov
mov
dec
lock
push
mov
ja
push
fldl
aam
inc
jae
test
add
sub
mov
push
out
fst
push
adc
int3
cmp
loop
repnz
stos
lds
adc
sbb
push
xchg
ds
dec
mov
jno
sbb
and
sbb
xor
das
lcall
in
outsl
jae
ss
dec
jmp
rep
sarl
xchg
ss
xlat
cmp
mov
push
fidivs
int
and
xor
mov
xor
mov
sub
mov
mov
cs
sub
dec
leave
jmp
outsl
or
fildl
mov
fstpl
xor
ss
inc
xchg
lcall
sub
cli
sbb
add
in
push
add
push
xor
outsb
aas
xor
mov
repz
out
lcall
bound
insb
xchg
add
ja
rclb
ljmp
xor
sub
shrl
loope
adc
jmp
cmovle
clc
mov
inc
or
fstp
bound
je
das
movsb
jge
movsb
rorl
pop
jb
pop
fstpl
sub
and
daa
test
test
push
outsl
cld
aad
test
dec
xorb
pop
cmpl
imul
xor
lahf
push
aam
cld
xor
test
lods
jns
icebp
push
aad
aas
jge
or
inc
cmc
jp
shrb
fwait
and
mov
lods
push
cmp
xor
xchg
jne
push
push
cld
das
lahf
std
or
adc
rcrb
xchg
lea
into
jecxz
inc
push
xorl
mov
push
mov
out
inc
idiv
lods
test
lds
shlb
dec
inc
dec
or
imul
mov
fs
in
pop
daa
dec
inc
arpl
sub
lret
push
sub
insl
lret
lcall
cmp
inc
cmp
stc
jmp
in
dec
jo
test
fstl
out
and
sub
xor
lock
or
aaa
cwtl
aad
js
insl
cli
mov
shll
or
and
mov
je
cmc
fnstsw
add
lcall
sti
mov
xor
fmull
int
repnz
subl
out
fiadds
mov
sub
lea
cli
inc
out
jge
int
ret
push
mov
inc
inc
lahf
cmp
pusha
xor
inc
inc
lcall
insb
movsl
icebp
xorb
inc
xchg
dec
push
dec
xchg
adc
sbb
push
push
jae
pusha
ret
adc
test
inc
in
scas
fs
mov
sbb
int
fadds
xchg
je
push
jae
stos
cli
aad
aaa
jp
xor
test
add
add
hlt
add
or
jl
adc
mov
inc
data16
pop
cs
lret
lret
loopne
aaa
aaa
mov
decl
aad
xor
jo
sub
outsl
sbb
pop
jg
sub
add
adc
outsb
daa
ss
push
inc
int
pop
pushf
push
cmp
bound
pusha
jmp
pop
fnstsw
push
idivb
mov
mov
ds
insb
lods
or
stos
jae
xchg
into
nop
or
movsl
dec
aad
xchg
jbe
pop
stos
out
add
adc
xchg
scas
jl
jb
lret
daa
das
mov
mov
lea
and
cmpsb
dec
xor
sbb
and
hlt
movsl
or
int3
sbb
addr16
push
andl
outsb
dec
jge
cmp
or
mov
repz
movb
push
idivb
fstps
xchg
daa
inc
xorb
fsubrl
mov
loop
ljmp
mov
dec
sbb
xchg
test
sti
ficomps
mov
push
jae
test
jns
push
ljmp
or
pop
dec
out
imul
rcrl
adc
ss
cmp
icebp
adc
push
imul
mov
pushf
je
pop
mov
push
jmp
push
cmp
push
add
cmp
or
jne
inc
loop
fsubr
mov
jmp
push
sub
cs
movsb
arpl
add
sahf
dec
in
push
adc
sti
and
xchg
movsl
das
pop
fs
pop
xchg
sub
jne
ljmp
lret
idivl
shlb
sbb
adc
fmul
cmp
lret
push
stos
jae
sbb
xchg
push
cld
outsl
imul
dec
stc
pop
or
sub
add
cmp
mov
lods
pop
inc
adc
sub
sub
mov
cmp
pop
pop
push
xlat
mov
jmp
fwait
ss
push
stc
into
jl
sub
add
or
movsb
minps
and
pop
imul
dec
add
push
pushf
mov
arpl
mov
rcll
xor
or
jg
int3
imul
lds
mov
push
sub
inc
pop
and
in
ds
cli
lock
les
jg
or
mov
xchg
or
icebp
push
test
or
lretw
in
popa
icebp
mov
shl
iret
test
bound
lea
stos
dec
sahf
nop
insb
adc
jmp
xchg
fistps
inc
lods
dec
xlat
adc
aad
xor
mov
ja
inc
fincstp
xchg
ds
sbb
cmp
xor
push
xchg
sbb
lahf
addb
adc
sub
inc
mov
gs
sbb
sub
pop
add
xchg
and
lahf
pop
pop
jmp
subl
add
lods
rorl
fcoms
cmp
imul
or
mov
pop
subl
icebp
mov
aas
aad
push
lods
fdivrs
push
out
nop
enter
dec
xor
test
inc
sbb
in
pop
sub
sbb
pop
dec
pop
or
mov
cmp
push
lea
vcomiss
and
lods
push
rclb
push
add
dec
loop
rclb
xor
clc
scas
mov
add
movsl
push
es
lods
rol
int
and
push
mov
xchg
clc
fimuls
push
or
push
xchg
jbe
sbb
mov
push
push
sub
sbb
lea
je
gs
push
andb
in
repz
orl
dec
push
jp
sbb
mov
jne
xchg
xor
je
push
mov
mov
ds
add
pop
out
inc
out
das
jb
sbb
mov
mov
or
daa
data16
or
cmp
cwtl
xchg
cmpsb
inc
push
mov
adcb
mov
adc
aaa
subb
or
int
lahf
icebp
push
scas
stos
nop
adc
loope
sbb
mov
sbb
repz
jmp
mov
push
jno
pop
addl
inc
imulb
cmpsb
jg
xchg
fs
cltd
xor
mov
mov
int
je
and
or
mov
in
pop
fwait
imul
pop
and
pop
xchg
mov
cltd
push
movsl
scas
psubsb
cmpsb
adc
es
je
or
mov
adc
sbb
in
or
fwait
inc
mov
pop
jo
out
outsl
pop
mov
push
ss
inc
push
or
inc
enter
test
xor
shrd
add
cwtl
cs
jb
inc
or
imul
mov
insl
lds
das
fwait
dec
mov
mov
fcoms
subb
jmp
fsubrl
mov
mov
and
adc
cmc
cmp
jb
adc
add
outsl
push
cmp
cld
shll
push
sub
ror
mov
out
xor
and
push
jae
fcomp
cmp
pop
imul
dec
xchg
scas
jb
cli
cli
lods
dec
in
pushf
and
cmpsl
add
pop
xorb
int
fs
cwtl
fsubrs
pop
mov
out
cld
in
dec
mov
jg
out
pop
xchg
aaa
aas
mov
add
sbb
fistpl
lds
adc
and
ss
in
push
dec
push
icebp
mov
rorl
mov
xor
outsb
cmp
jns
add
cli
jae
sub
into
dec
adc
roll
xchg
add
fnstcw
cmp
mov
cmp
cmp
mov
stos
sbb
movsl
inc
in
ret
test
je
sub
imul
add
in
sbb
dec
dec
dec
cmp
fdivl
dec
fcomps
int
negb
sub
mov
or
add
and
xor
pop
cwtl
cltd
xor
ljmp
mov
rolb
mov
loop
push
cmp
bound
fcompl
jno
or
inc
dec
cmpsl
test
or
bound
inc
xlat
pushf
out
adc
mov
cli
pop
fldl
inc
and
sbb
inc
cmpsl
fldenv
adc
ja
jns
mov
xchg
jge
cli
mov
inc
cmp
into
sub
dec
test
aas
fistpl
jnp
int3
push
xchg
lds
sbb
fstp
jnp
sub
pop
jne
out
pop
mov
inc
sub
stos
int
dec
fdivs
cltd
out
or
sub
int3
daa
ret
jb
add
div
cmp
push
cld
sti
in
gs
dec
xchg
xor
int
cmpsl
aad
push
xorl
and
mov
xor
negb
loope
fmulp
cmpb
pop
out
outsb
mov
lahf
aad
pop
push
xor
test
mov
cs
or
ja
adc
xor
sbb
mov
iret
in
cwtl
std
jae
movsl
clc
cmp
dec
jmp
pop
int3
lods
push
aas
lcall
xor
xorl
mov
fcmovbe
adcl
out
ret
in
cmpsl
mov
fucomip
int3
cltd
cltd
mov
mov
push
mov
mov
sbb
pop
scas
push
cmp
add
sti
jo
popa
movq
mov
imul
inc
xor
adc
mov
jno
dec
add
fisttps
cltd
ficompl
ficomps
mov
lods
dec
in
mov
jmp
mov
dec
loop
add
orb
sub
xlat
fildl
push
add
aam
outsb
jae
sub
and
mov
xchg
fisubl
hlt
lret
sbb
scas
aad
jecxz
xchg
fcmovnu
aas
push
andl
sbb
out
inc
xchg
pop
pop
orb
mov
inc
pop
mov
aaa
cmpsl
loop
mov
cwtl
jne
aad
mov
xor
movsb
in
stc
cmp
or
dec
notb
jmp
mov
mov
loopne
push
outsb
mov
mov
xchg
and
les
insl
xor
insl
inc
pushf
sti
loopne
inc
in
sub
adcb
xchg
test
cmp
add
jb
movb
scas
fisubl
pop
test
pop
jle
push
inc
pop
pop
push
popa
push
pop
and
add
bound
sub
pop
or
mov
mov
inc
pop
addr16
cmp
popf
mov
int3
ret
rorl
inc
repz
shll
shl
or
push
dec
cmp
stc
mov
insl
mov
stos
ret
test
pop
push
fwait
das
das
or
jle
insb
insb
jecxz
inc
lock
jmp
repnz
mov
xchg
loope
test
insl
pop
jmp
pop
or
dec
daa
stos
dec
mov
pop
fsub
jecxz
dec
adc
push
pop
popa
fwait
mov
std
add
cmpl
loopne
enter
loopne
ror
aas
mov
jns
push
inc
loope
in
mov
jns
cmpsl
daa
shlb
or
pop
cmp
or
bound
sbb
sbb
cs
dec
cmp
ja
cs
loopne
add
adc
jno
adc
xchg
mov
loope
and
pop
xchg
mov
adc
mov
xchg
data16
call
test
cs
cmp
test
sub
leave
fnsave
jns
test
add
cld
scas
out
push
hlt
ret
jb
aad
mov
xchg
mov
fs
or
imul
lcall
jmp
fistps
outsb
adc
out
nopl
out
scas
jns
fldcw
sbb
sbb
jb
mov
lods
push
jl
add
std
aam
ss
jp
or
mov
andb
xor
sub
icebp
stc
pop
popf
dec
xchg
pop
adc
in
aaa
inc
imul
es
ret
mov
insb
dec
outsb
pop
outsb
loopne
add
mov
and
cmp
jecxz
scas
aaa
mov
outsb
jnp
dec
or
ja
lret
ss
stos
imul
inc
imul
adc
jae
and
and
dec
inc
in
pop
out
push
outsl
iret
rol
dec
mov
stc
pop
lcall
cmp
pop
outsl
pop
test
mov
inc
pop
xchg
xchg
loopne
inc
mov
mov
and
out
call
hlt
and
aaa
cmp
push
shl
mov
sbb
addb
xorl
les
mov
mov
cld
sbb
in
insb
and
js
cmp
inc
push
out
mov
stos
cmpb
mov
inc
call
or
lcall
adc
xor
or
xchg
es
imul
inc
dec
test
int3
dec
test
arpl
inc
pop
mov
scas
cwtl
ss
lcall
lcall
sahf
pop
mov
shlb
inc
and
xchg
xchg
lea
dec
adc
mov
jo
or
outsb
insb
and
sub
int
dec
int3
cmp
sbb
data16
dec
inc
in
jmp
cmpsb
pop
jns
les
loope
jns
push
push
mov
fs
jle
xor
inc
push
lahf
iret
dec
out
sub
push
mov
js
pop
cmp
dec
push
and
cs
sub
lods
push
dec
repnz
cld
std
sub
std
sub
clc
and
orb
xchg
jle
pushf
aad
adc
xchg
lret
pop
jge
and
sarl
fstp
lret
jle
xchg
push
cmc
popf
call
roll
cmp
jo
out
cmp
xor
add
inc
stc
in
mov
dec
into
add
inc
cwtl
jecxz
outsl
insb
dec
xor
push
imul
push
adc
dec
fisttpl
inc
inc
mov
mov
aaa
in
loope
xchg
xor
fdivs
iret
lea
lret
pushf
pop
mov
stos
mov
sub
out
out
fldl
jbe
lods
or
or
sti
stos
cltd
ret
in
mov
sub
cmpsb
pop
fs
sub
pop
sub
jg
int
and
es
in
add
ret
jae
js
mov
shrb
stos
iret
mov
ds
dec
gs
test
xchg
add
fistpll
imul
dec
and
mov
pop
shlb
ja
push
test
icebp
jg
addb
flds
ficoms
test
jmp
test
cmp
cltd
add
ja
in
stc
or
mov
and
inc
clc
repnz
push
int3
fldl
rcl
jmp
xchg
jl
shlb
or
popaw
and
pop
dec
out
subl
stos
aad
in
stos
mov
in
inc
push
repz
push
lock
orl
push
lods
mov
sbb
lods
lcall
xchg
push
and
test
mov
mov
mov
pop
cltd
stos
addl
je
add
test
xchg
and
mov
push
dec
clc
push
ss
push
push
lahf
les
dec
das
in
jp
addl
adc
cmc
pop
add
inc
mov
add
sbbb
pusha
jo
cwtl
rolb
jg,pt
shll
ret
push
cmc
aaa
jecxz
cld
sub
sub
outsb
and
adc
dec
cmp
cmp
inc
nop
mov
mov
jbe
mov
jno
pop
movl
mov
push
add
sbb
sbb
sub
pop
icebp
stc
aam
jns
stos
data16
jno
inc
mov
out
dec
mov
pop
xchg
and
jnp
sub
inc
mov
test
fcompl
xor
or
and
insb
add
mov
mov
ja
dec
push
cmc
cmp
aad
imul
adc
dec
cli
hlt
int
cltd
add
jge
sub
outsl
jns
jns
test
mov
jmp
insb
loop
popa
dec
mov
mov
xor
loopne
adc
pop
test
mov
pop
in
jnp
call
jecxz
cmp
cmp
sti
add
or
sbb
or
adc
ret
imul
leave
jbe
fs
inc
dec
iret
push
ja
inc
shrl
push
jo
inc
sbb
loope
mov
adc
xchg
lea
xor
push
sub
add
or
leave
add
jb
inc
movb
xor
and
das
add
fwait
mov
leave
add
decl
loope
inc
insl
push
sbb
cmp
inc
xchg
sub
in
jmp
mov
dec
jecxz
mov
cmpsb
pop
popa
inc
dec
mov
xorb
loopne,pn
dec
mov
sub
popa
cmp
or
stos
iret
jns
xchg
add
add
xchg
popf
inc
pop
push
jp
test
jns
jl
mov
ja
arpl
mov
adc
xchg
inc
cmpsb
cmpps
divb
outsl
test
push
insb
mov
pusha
sub
pop
xchg
mov
cltd
push
iret
mov
clc
mov
jp
push
cmp
push
data16
mov
xchg
adc
or
das
mov
int3
lret
int3
rorl
popf
fidivrs
and
cli
dec
mov
sbb
es
push
lods
ds
test
in
adc
test
das
ffree
adc
mov
cwtl
mov
jp
mov
xchg
push
sub
jno
mov
pushl
jne
insl
in
sub
xchg
in
popf
sbb
aad
xchg
cmp
xlat
repnz
pop
dec
mov
in
and
or
pop
arpl
inc
mov
ss
test
cmp
or
jbe
add
ret
lods
mov
cmpsl
pop
shl
mov
push
jl
cmp
mov
loopne
xor
pop
std
cs
sub
mov
aam
pop
dec
mov
jo
cmp
mov
clc
adc
xchg
add
adc
jo
cmpsb
xor
aas
test
js
ret
into
jbe
repz
ret
les
pop
xor
pop
nop
push
xchg
sbb
dec
sti
lods
mov
ljmp
enter
mov
int
lods
push
stc
push
insb
repnz
pop
cmp
jbe
or
imul
inc
xchg
lds
das
je
cs
jno
dec
sub
div
jbe
adc
add
call
in
imul
or
lea
cmpsb
incl
cmp
rclb
dec
and
dec
xchg
les
fadds
test
inc
mov
sub
sbb
mov
imul
push
lcall
mov
add
ret
cmp
or
gs
fimull
fiaddl
test
xchg
sbb
push
cmp
sub
ret
push
int
sub
out
gs
mov
jecxz
pop
aad
outsw
jmp
mov
out
sub
inc
push
adc
pop
pop
aad
aad
enter
xchg
imul
inc
dec
mov
inc
inc
cmp
movsb
les
sbb
pop
xchg
fs
mov
test
cmp
pop
push
rorb
cmpl
add
ret
mov
push
add
jbe
rorl
jnp
inc
lret
roll
lods
sbb
inc
arpl
jns
icebp
mov
fninit
cld
dec
pop
clc
xor
out
push
xor
fwait
out
jnp
dec
xchg
stos
sbb
xor
push
mov
ret
lahf
cmp
sahf
pop
fildl
std
sahf
movsl
pop
fs
cltd
movsb
es
and
adc
adc
add
adc
pushf
adc
jp
push
dec
mov
or
hlt
fstpl
xchg
inc
jg
pop
and
jae
jb
into
xchg
push
cmp
sarb
push
and
or
fistps
xlat
sbb
call
outsl
sub
movsl
mov
mov
jmp
push
out
mov
jl
pop
jp
pop
in
inc
je
aad
jge
push
and
ret
inc
in
je
pop
in
cmpsl
sub
jg
sbb
jmp
push
mov
and
sbb
mov
mov
inc
popl
sar
sbb
in
hlt
xchg
ret
test
hlt
jns
inc
mov
sub
es
adc
sub
lea
and
mov
inc
mov
iret
inc
xor
jne
pusha
mov
dec
push
hlt
sub
xor
call
iret
sub
dec
lret
movsb
iret
cs
aas
out
aam
jmp
sbb
mov
imul
sub
jmp
fsts
lock
das
cmp
lods
jnp
hlt
jns
and
pushf
jns
inc
add
into
imul
aad
mov
jecxz
inc
cs
inc
pop
adc
mov
cmp
push
cmp
push
mul
sbb
mov
daa
pushf
dec
mov
and
rorb
push
dec
pop
lds
push
push
fcmovb
sub
rorl
push
loopne
cmp
imul
sub
jb
into
mull
sub
mov
add
test
fistpll
loope
mov
addr16
dec
push
mov
fnsave
xchg
ja
mov
add
test
pop
es
jno
outsl
pushf
xchg
ret
mov
insl
push
add
adc
adc
jmp
fwait
ret
adc
js
xchg
ficompl
sub
mov
cmpsw
popf
lods
xchg
dec
mov
lret
dec
scas
sbb
in
jle
sub
or
loopne
jae
and
dec
in
pop
inc
ret
test
jnp
std
icebp
gs
aad
xchg
addr16
jo
jmp
in
sarl
cmp
or
dec
mov
mov
out
pop
dec
sub
out
pop
and
jg
xchg
std
movsl
cmpsl
dec
mov
and
sub
lods
insb
inc
shlb
faddl
push
jae
and
push
and
cmp
loop
and
add
aas
mov
mov
sbb
loope
mov
jbe
dec
addr16
mov
or
and
data16
add
loopne
cmpsb
jns
stos
xor
lret
jmp
test
push
mov
inc
and
sbb
aam
adc
js,pt
lods
std
xchg
add
add
fcom
xchg
push
cmp
dec
mov
loop
lods
jnp
iret
push
inc
insb
mov
xor
and
test
or
jp
fucom
cli
or
movsb
insb
mov
or
xchg
mov
mov
jne
cltd
ret
imul
jne
push
push
test
jl
or
sub
bound
mov
ljmp
adc
inc
jnp
mov
out
cld
jecxz
xor
jg
or
aam
popf
push
es
scas
mov
ds
je
cmpsl
test
pop
sbb
ret
testb
inc
add
mov
test
subb
loopne
out
jne
adc
test
pop
xlat
andb
dec
pop
mov
movsl
xchg
shll
xchg
adc
in
pop
divl
mov
int3
push
jbe
push
popf
fimuls
insb
out
xor
popf
push
push
mov
out
xchg
mov
stos
or
negb
adc
add
or
out
push
xchg
scas
inc
fsubs
test
sbb
mov
clc
xlat
or
dec
push
test
cmpsl
mov
add
ja
add
mov
push
int
stc
push
sbb
lods
mov
dec
je
out
xchg
sbb
push
in
scas
mov
addr16
addb
push
je
aam
jl
leave
jl
pushf
lahf
movsl
pushl
data16
jne
sbb
ja
or
adc
sub
sar
test
imul
mov
adc
int3
daa
xor
ss
jp
jg
jp
xchg
inc
mov
les
pop
push
outsb
ds
imul
push
add
xchg
sbb
je
sbb
sbb
jl
mov
mov
stos
imul
es
daa
xor
sub
jl
les
in
adc
cld
pushl
lds
scas
mov
pop
testb
dec
cmpsb
cli
jg
jmp
inc
rolb
imul
sbb
sub
insb
ret
sbb
xchg
rep
xor
je
outsl
mov
sub
mov
push
xor
in
stos
movsl
inc
sbbb
cmp
pop
or
sbbb
pop
and
sahf
push
cmp
inc
sbb
insl
psubd
stos
jb
mov
mov
sti
inc
cmp
cmp
in
shll
ficoms
xor
inc
push
repnz
xchg
decl
sbb
or
cmp
adc
dec
xor
fisttpll
add
std
dec
leave
mov
or
jb
lahf
scas
sbb
push
cmpb
imul
mov
pop
jns
pop
fwait
out
jmp
les
call
cmp
mov
stc
xchg
out
sahf
push
and
push
shrl
leave
jno
mov
jecxz
incb
ja
sbb
xchg
fcomp
lahf
mov
mov
aam
rcrb
decb
loop
sbb
or
jbe
cmp
add
in
jle
cmp
rclb
mov
xchg
xor
int
sub
shll
out
mov
cwtl
insl
mov
cmp
fiadds
xchg
jbe
sbb
mov
cwtl
and
sti
sbb
mov
vorps
ja
loope
fisttpll
jnp
hlt
mov
mov
push
pusha
rcrb
int3
push
daa
or
gs
lods
nop
out
cmp
xchg
outsl
int
out
mov
jecxz
xchg
cmp
ficomps
stos
loop
xlat
lds
ret
dec
dec
cltd
xchg
dec
mov
lods
and
notb
jl
push
in
test
fwait
popa
mov
lock
xor
jp
or
dec
or
jmp
scas
xchg
pop
pop
and
sub
insl
xchg
mov
jp
inc
daa
cmp
loop
mov
fcmovne
jnp
jle
xchg
lods
and
xor
cli
movzbl
movsb
dec
sub
imul
test
xor
stc
inc
xchg
lods
xlat
fstl
mov
mov
pop
iret
rcl
push
xorl
lock
and
subl
bnd
imul
jnp
lret
mov
aad
mov
mov
xchg
mov
cmc
enter
jge
pop
jge
ror
inc
and
xchg
or
sti
out
cmpsl
push
inc
lahf
cmp
loope
stos
sub
cmpsl
sbb
sbb
jbe
enter
jle
cltd
loopne
in
adc
cmc
sbb
mov
andb
mov
mov
mov
xor
shlb
shrb
and
push
out
add
das
xlat
mov
mov
rcll
xor
adc
jmp
adc
movsb
mov
or
mov
les
sub
hlt
shl
xchg
fstpt
out
mov
xor
push
rorl
cli
cs
je
int
iret
idivl
sbb
mov
gs
pop
push
or
jg
enter
xor
mov
bound
cmp
jg
les
sub
shlb
dec
xor
add
in
cwtl
jle
les
inc
add
jbe
cmpb
xor
push
jae
mov
in
dec
popa
adc
ret
dec
cmp
mov
inc
shl
adc
sti
sbb
or
dec
jg
jecxz
fnstcw
sbb
faddp
or
rclb
sti
sub
cwtl
jle
loope
add
les
mov
pop
and
xchg
movsl
imul
xchg
mov
arpl
xor
lahf
mov
adc
pop
aad
sub
sub
mov
int
xlat
and
sbbl
mov
in
xchg
inc
test
pop
scas
imul
jle
pop
jno
add
out
leave
stc
mov
add
clc
push
loop
xchg
adc
add
fdivrs
adc
repnz
jle
mov
mov
xor
in
add
xor
mov
xchg
inc
imul
das
pop
ss
stos
das
jg
mov
xor
loop
nop
dec
adc
lret
int
nop
pusha
insl
xchg
fdivs
mov
xchg
pop
mov
imul
shl
orb
pushf
jae
or
test
cli
in
inc
stos
mov
std
iret
cmp
shl
jge
rolb
outsb
shrl
jg
mov
cld
jl
int3
jno
xchg
cmp
dec
aas
test
in
xor
and
mov
mov
mov
lret
movsl
lods
mov
fwait
call
cli
mov
int
das
pop
dec
ds
out
adc
pop
insl
xchg
mov
icebp
imul
xlat
bound
stc
bound
mov
mov
sarb
or
nop
adc
out
lret
sbb
and
push
jge
insl
cmp
sub
out
cmp
xor
lret
in
repnz
xor
xor
test
jo
mov
pop
mov
push
repnz
test
push
pop
xor
out
jp
cmp
xchg
stos
and
mov
or
ret
mov
sbb
or
pop
aam
lcall
ret
shlb
sldt
mov
mov
scas
call
inc
cltd
mov
stos
sub
inc
mov
mov
jbe
dec
lret
aaa
jmp
dec
mov
nop
dec
icebp
dec
mov
lret
fidivl
cmpsl
and
testb
xorl
cmp
or
inc
xchg
mov
shrb
into
shlb
add
das
test
aam
cli
push
sti
movsl
into
sbb
inc
xlat
dec
fsubrs
cld
nop
lret
std
in
push
and
pop
sbb
sub
add
icebp
mov
rorb
stos
adc
lahf
dec
les
pop
call
lret
icebp
mov
movsb
xchg
lcall
jne
fcoms
movsl
gs
xor
in
jle
push
popf
sbb
xorl
arpl
adc
cld
sbb
stos
jl
lret
cld
enter
xor
insl
gs
sarl
sbb
mov
add
push
pop
sbb
adc
daa
add
aas
das
enter
cmp
sub
lock
repnz
jns
add
xor
sub
loop
stos
jl
jb
xor
xchg
sbb
pop
mov
loop
js
fdivrs
sbb
mov
pop
fildl
inc
pusha
adcl
jbe
mov
sub
pop
add
repz
idivb
fs
sbb
add
fs
dec
pop
cmc
adc
fistpll
test
cli
mov
mov
fnstsw
movsl
aaa
ret
ret
cwtl
scas
imul
or
out
in
jns
sbb
movsb
cmp
movl
sbb
popf
and
dec
mov
int
lret
imul
xchg
jbe
repnz
loope
mov
lret
jnp
stc
cld
clc
inc
pop
or
xor
lret
sti
or
and
inc
mov
lcall
je
out
bound
cmp
addr16
shrb
outsb
mov
jecxz
int3
sbb
pop
incb
je
xchg
mov
xchg
add
jb
lea
movq
arpl
dec
add
jbe
add
or
push
mov
out
je
mov
sbb
sarb
pop
jmp
ljmp
scas
mov
mov
xor
and
dec
hlt
sbb
fs
xchg
popa
adc
cs
cli
scas
pusha
fs
sub
les
sub
mov
push
test
into
mov
ja
pusha
cwtl
sub
or
sbb
insl
push
mov
xor
fs
in
cmp
subl
lret
mov
jbe
cwtl
push
ja
fdivr
lret
movsb
mov
mov
pop
jbe
shl
aaa
jbe
fs
push
or
mov
or
inc
int
and
stc
adc
xor
sub
inc
jl
add
sub
push
fdecstp
pop
cli
popa
add
adc
push
or
lock
jg
rcrl
imul
or
loopne
ret
mov
es
sbb
inc
add
cmpsb
sti
inc
lahf
fists
into
pushf
outsl
pushf
and
shlb
lock
in
lcall
mov
push
jecxz
outsb
mov
xlat
sub
sti
lea
or
pop
lret
addr16
test
in
rorb
or
jb
or
push
and
jecxz
test
fwait
cmc
insb
jne
inc
push
mov
lods
sub
test
pop
xor
xchg
repnz
pushf
xlat
sbb
dec
sbb
aam
mov
cltd
or
fwait
cltd
jmp
push
sub
lret
or
xorl
outsb
add
div
ficompl
dec
sbb
sahf
cltd
out
or
ret
cmp
mov
and
test
clc
jne
lcall
imul
add
jecxz
jne
in
rcll
filds
dec
adc
cmpsb
jmp
and
xlat
scas
dec
cmp
lret
xlat
int3
add
mov
leave
cmpsl
loopne
inc
ds
in
xorb
dec
inc
mov
cs
xchg
cli
fs
out
fildl
movzbl
mov
repz
inc
ja
out
pop
jbe
scas
stos
xchg
out
imul
cli
inc
jo
and
xlat
or
jg
lods
xchg
add
ror
aam
cltd
jns
sahf
pop
and
cs
adc
into
dec
xchg
rorb
sbb
dec
xchg
pushf
mov
mov
cs
jno
mov
push
cmpsb
pop
shr
jmp
xchg
xchg
jg
pop
mov
mov
add
jo
and
mov
add
and
sub
push
sbb
pushf
cmc
je
jae
sub
pop
shll
push
inc
fldenv
roll
xlat
mov
test
add
icebp
sub
adc
mov
sbb
xchg
mov
mov
sub
jae
fs
inc
and
dec
inc
into
lahf
out
test
pop
cmp
xlat
jmp
cld
idivb
sbb
testb
sarl
cmp
jl
fcomp
stos
and
ja
mov
bound
imulb
out
push
xchg
xlat
popf
aad
lea
push
push
sbb
sub
jnp
popa
nop
adc
push
not
lret
and
jnp
xor
fiaddl
dec
mov
es
in
and
adc
jcxz
mov
movsl
xor
das
or
push
xchg
mov
mov
push
arpl
adc
adc
idivl
push
je
pop
fcmovbe
xor
pusha
jecxz
inc
stos
aas
sbb
aam
bound
inc
ret
jns
xlat
gs
rcr
loopne
push
inc
andl
xor
push
adc
ret
loop
pop
mov
sti
adc
movsb
and
pop
xchg
mov
gs
jnp
cltd
add
xchg
lods
mov
mov
dec
stc
mov
sahf
scas
pop
lock
movhps
repz
fwait
int
mov
mov
arpl
adc
sarl
sbb
inc
test
das
inc
stos
add
jo
pop
jo
repz
loope
mov
or
xor
dec
xchg
nop
dec
sub
ror
cmp
xadd
insl
mov
xchg
xor
sbb
rcrb
dec
repnz
cmp
div
jp
add
pop
shll
cmp
push
inc
movsb
lock
lret
mov
inc
mov
xorl
cmp
and
pop
fs
and
push
roll
ljmp
orl
dec
pop
xchg
sub
jle
imul
insl
mov
push
dec
inc
xor
in
mov
inc
and
cmpsb
out
lea
sbb
les
movsb
ds
in
pop
and
sti
ja
xchg
leave
xbegin
test
rorl
xlat
jl
clc
push
push
pop
dec
out
sbb
xor
test
push
push
push
in
stos
jne
jecxz
aam
clc
addr16
jmp
sub
jmp
xor
adc
ret
xor
add
jb
push
xchg
cmp
sub
fsubs
in
es
add
add
pop
testl
hlt
sub
sbbb
pop
pop
mov
fwait
int3
outsl
wbinvd
mov
filds
or
cmc
inc
sub
lock
push
ficomps
das
ja
jmp
adc
xchg
xor
movsl
push
sub
sub
add
das
xor
rorl
adc
fs
mov
pop
cmp
jmp
adc
insl
dec
sbb
add
xchg
jmp
loopne
xorb
mov
jmp
aam
xor
xchg
and
icebp
pop
sbb
inc
xor
adcl
sbb
push
pop
add
xlat
push
push
int3
mov
mov
cld
in
mov
test
adcl
mov
mov
adc
cmp
add
stos
dec
lret
mov
fsts
popf
or
jl
pop
ffree
int3
lcall
cs
testl
sbbl
lods
mov
call
repnz
test
pop
pop
mov
loop
adc
xor
cwtl
pushaw
imul
adc
rorl
into
cmp
jg
pop
adcb
cmc
lahf
lock
mov
daa
adc
inc
push
in
sti
rcll
adc
sbb
mov
out
fcoms
jae
sbb
in
sbb
add
cmp
pop
jecxz
xor
jmp
sub
hlt
adc
sub
push
repnz
dec
dec
stos
cmpsl
fdivl
in
inc
cmpsl
jno
xchg
clc
stc
xor
dec
cmp
jo
fcomp
mov
push
add
jle
shr
repnz
or
mov
xor
push
mov
imul
push
and
cld
bound
mov
xchg
cmpb
imulb
dec
sahf
in
test
pop
in
fidivl
outsb
fmuls
xorl
push
xor
movsl
in
xor
or
and
or
or
stc
lahf
sub
psubd
outsl
stos
xor
dec
data16
out
mov
xor
std
retw
ss
xlat
insb
push
jmp
orl
inc
lea
jge
mov
push
push
xchg
aaa
push
inc
imul
call
dec
inc
pop
jb
or
pusha
dec
mov
test
inc
into
insb
rcr
mov
addr16
xor
adc
nop
cmp
les
pusha
scas
dec
in
inc
je
das
xchg
movl
arpl
mov
xlat
jg
loop
lods
test
push
sub
nop
fdivrp
idivb
icebp
xchg
sbb
shll
cmp
out
sbb
push
fstpl
mov
mov
lods
sbb
add
cmp
mov
addr16
repz
rcrb
ljmp
mov
mov
lods
ror
fs
adc
sbb
fisttpl
push
jns
add
sahf
lret
repnz
jb
inc
dec
out
and
dec
out
mov
pop
aam
jno
ja
ss
lret
mov
jo
jne
push
gs
inc
push
ret
aam
loope
call
in
add
xlat
push
push
mov
adc
cltd
mov
ds
adc
ret
xchg
ret
icebp
popf
sbb
cmpsb
lcall
inc
fimuls
push
pop
inc
mov
adc
jl
sti
movb
jg
and
pop
jb
mov
fistpll
scas
mov
sbb
pop
rcrb
dec
and
fxch
movsb
xchg
inc
pop
xor
mov
push
mov
mov
outsb
and
stos
test
xor
add
cld
add
insl
mov
dec
scas
lahf
mov
loopne
jno
sbb
lea
bound
repz
push
andb
jge
sbbb
pop
insb
js
xchg
push
pop
push
lcall
cld
test
cmp
xchg
pop
dec
cs
jmp
jl
mov
pop
push
push
in
mov
std
fsubrl
cmp
xor
jmp
int
ret
pop
insl
stos
sbb
jbe
or
daa
aaa
testl
xchg
dec
call
jp
push
loope
int
lea
xor
jb
mov
xchg
cmc
mov
fwait
sub
sahf
push
cmp
push
cmp
fucomi
into
fdivs
inc
cmp
into
xchg
cli
and
sbb
adc
or
jae
rolb
inc
cmp
inc
inc
outsl
push
pushf
movsl
sbb
lock
mov
mov
fsts
mov
loopne
push
popf
mov
xor
jmp
mov
adcl
fstpl
cli
data16
shrb
clc
fcmovnbe
fwait
lds
repz
leave
adc
ljmp
mov
mov
cmpsb
or
insl
ficoms
lods
js,pt
outsl
push
adc
push
sbb
mov
jp
fimuls
jnp
nop
push
shrb
loope
xchg
inc
jp
and
add
push
out
iret
adc
in
into
push
mov
test
lock
stos
jle
data16
jmp
dec
aad
cmp
cmp
lahf
sub
xchg
mov
mov
xor
divb
in
fadd
es
mov
loopne
mov
push
leave
cmp
arpl
mov
jle
inc
fs
in
lock
pop
test
xorb
mov
ja
lods
lret
scas
mov
lods
insb
cmp
dec
mov
icebp
mov
insb
sub
add
push
mov
cmp
adc
inc
push
pushf
lds
popf
imul
ret
fmulp
sub
push
jb
sbb
in
xchg
lods
inc
in
push
test
inc
mov
lock
rcll
les
mov
jecxz
or
fistl
shl
dec
jmp
leave
mov
mov
xor
push
jae
jle
mov
xchg
push
and
xor
cmpsb
aam
aaa
pop
mov
lods
insl
dec
mov
pop
mov
push
adc
pop
or
and
ret
es
aam
adc
inc
cmp
dec
repnz
ljmp
and
idiv
sbb
rcll
icebp
push
dec
adc
sub
and
jmp
hlt
pop
mov
je
sub
inc
sti
testl
jle
bound
lds
les
or
and
scas
pop
loop
inc
xor
sahf
in
int
add
sub
arpl
mov
or
enter
mov
hlt
jb
push
add
mov
sub
pushf
inc
fucomip
dec
inc
sbb
pop
pop
movsb
mov
or
arpl
imul
push
push
jle
cmpsl
cmpsb
aas
ret
jns
ficoms
mov
faddl
adc
and
movsl
aaa
inc
sub
mov
mov
dec
jnp
adc
pop
stos
mov
push
cmp
jns
frstor
js
out
and
jno
mov
push
and
jmp
aam
hlt
sbb
push
and
jle
iret
mov
mov
mov
andb
aad
mov
pop
cmc
rcrb
dec
fstl
les
inc
fcmovne
xorl
std
es
scas
mov
mov
adc
xor
pop
mov
mov
stc
add
push
mov
je
sahf
cmc
dec
push
mov
out
inc
mov
faddl
rclb
fcoms
jp
inc
pop
and
dec
jne
clc
ja
int3
mov
cmc
jb
push
stos
je
inc
push
and
add
jmp
jo
adc
adc
in
mov
fisubrs
insb
or
das
cld
push
loopne
pop
cmp
js
adc
pop
loopne
fs
adc
shll
or
ljmp
insl
inc
inc
adc
xor
sub
push
xchg
adc
data16
mov
pop
frstor
jb
and
jne
ja
int
or
or
pop
das
mov
aam
cmpsl
jl
es
sub
movsb
mov
or
test
xor
out
jne
mov
add
and
movsl
and
stos
ss
or
sti
push
jnp
xchg
jecxz
fcoml
xlat
jbe
fwait
push
das
and
fists
loop
int
cwtl
dec
ljmp
add
sub
xchg
es
mov
ljmp
jmp
push
xor
sbb
fwait
mov
mov
mov
adc
shlb
outsb
inc
pop
adc
xor
out
movsb
in
dec
lds
pop
outsb
push
cli
dec
sub
xor
xor
das
mov
jecxz
push
sub
divb
push
in
int3
and
adc
xor
inc
repz
iret
jbe
inc
xchg
lret
test
outsl
mov
and
ss
cltd
cmp
rolb
aaa
pop
mov
xchg
add
xchg
and
and
imul
dec
daa
scas
aam
popf
cmp
pop
sbb
and
cmp
cmc
mov
pop
sbb
loop
mov
push
adc
sub
push
mov
inc
cmc
ret
scas
sbb
dec
jne
gs
data16
add
shl
cmpsb
mov
int
fst
xchg
sub
clc
dec
nop
cwtl
stos
enter
mov
xchg
dec
lock
inc
mov
sbb
loope
scas
mov
sbb
les
subb
jg
out
mov
mov
push
and
pop
pop
cld
or
xor
add
xor
fs
test
sbb
sub
cmp
push
scas
pushf
pop
idivl
mov
aaa
jno
imul
out
in
pop
rcrb
addr16
xor
stc
clc
push
xor
cmp
mov
in
ss
jp
lods
inc
push
mov
add
inc
dec
lds
push
cmp
sbbl
test
cmp
sbb
enter
mov
xor
cmpsb
mov
pop
seto
decl
cmpsl
xchg
lock
andb
push
adc
stos
js
jbe
cmp
dec
dec
inc
mov
inc
mov
xchg
fadds
repz
or
popf
outsl
pop
jo
jo
jp
xchg
xchg
lcall
cltd
ret
repz
adc
leave
mov
loopne
cmp
nop
xor
sbb
cmp
dec
add
adc
ret
outsb
sbb
test
lahf
mov
aaa
lock
jp
je
and
jb
or
or
push
push
leave
dec
out
jmp
push
out
xor
xchg
das
sbb
fs
inc
add
popa
insl
les
hlt
shll
and
fs
pop
imul
adc
jb
rolb
or
adc
sub
or
sub
xchg
cld
mov
sbb
jge
fwait
ret
test
pop
dec
ds
mov
hlt
fs
and
repz
dec
xor
mov
mov
mov
repnz
mov
movsl
stos
pusha
adc
add
hlt
ficoms
cltd
lcall
add
pop
mov
mov
movsb
xor
sub
into
ljmp
in
mov
inc
push
shrl
inc
add
pushf
mov
push
push
xchg
pop
pop
out
sbb
sub
ja
lods
cmp
pop
repnz
les
cmp
movsl
lcall
cwtl
test
xchg
js
es
push
cs
lret
mov
pusha
mov
aam
call
test
adc
push
fistps
push
pop
stos
lods
lret
mov
push
cmpsb
ret
xchg
pop
emms
jp
bound
movsl
mov
xchg
xor
pop
pusha
nop
loop
and
mov
adc
int3
scas
jb
icebp
dec
jb
fwait
movsl
dec
push
or
jp
xlat
outsb
das
inc
push
sbb
jae
scas
fwait
xchg
ljmp
and
pop
xor
lock
push
jmp
les
lret
sahf
rolb
mov
pusha
movsb
iret
push
in
or
mov
stos
sbb
mull
stc
ss
negl
adc
sbb
cli
sub
adc
in
cmp
xchg
out
or
fcmovu
cmp
xchg
xchg
push
jl
rolb
lahf
fdiv
test
push
mov
arpl
cmp
adc
pop
sub
call
in
mov
adc
pop
je
loopne
fistpl
or
jae
pop
sub
adc
adc
lea
push
pop
cld
add
and
or
testl
fwait
cmp
sahf
mov
jne
xchg
scas
adc
stc
ret
pop
jnp
lock
call
sbbb
inc
lds
xchg
jl
cmp
mov
cmp
pop
hlt
fs
inc
out
and
inc
or
sub
daa
xchg
push
fiadds
inc
inc
insb
mov
add
cmp
push
mov
pop
test
in
outsb
pop
sti
sarl
or
inc
push
pop
inc
vmovdqu
xchg
stc
cmp
sbb
das
leave
enter
adc
lods
and
or
enter
das
sbb
push
ficoml
and
push
out
sub
lcall
aas
add
test
inc
sahf
scas
ret
inc
movsb
wbinvd
mov
push
int3
movsb
movsb
repz
and
call
push
incl
neg
pop
lcall
shrl
lahf
sbb
pop
dec
dec
fdivp
rcl
nop
rol
sbb
xor
xor
fsub
sbb
mov
fmuls
jmp
inc
int3
test
nop
mov
inc
mov
pop
and
stc
cmp
inc
imul
js
pushl
inc
sub
push
into
test
stos
mov
nop
into
push
mov
clc
mov
imul
xlat
inc
fstl
lods
push
shr
xor
dec
xor
inc
push
int3
wrmsr
dec
je
cmp
sub
daa
sbb
mov
xchg
jne
int
cli
scas
xchg
in
jle
inc
pop
or
push
pop
mov
cmp
mov
xchg
out
insl
push
sbb
pushf
jmp
ret
jecxz
pusha
or
jg
lcall
xchg
sbb
fdivr
jecxz
adc
inc
xchg
jno
jo
insb
outsb
jb
inc
xchg
and
xlat
and
sbb
jp
mov
movsl
xor
sub
ss
add
push
mov
pop
mov
jp
lret
pop
sub
pop
pop
popa
in
add
xchg
push
lret
std
mov
jge
mov
fs
and
sub
sub
aad
mov
sbb
dec
dec
xchg
sar
xchg
enter
lea
sub
xchg
lcall
inc
out
mov
dec
int3
dec
sahf
inc
jb
cmp
jnp
loopne
or
lcall
pop
mov
sbb
jns
rcrb
shrl
hlt
jno
outsl
fldcw
rcl
xor
out
inc
dec
lock
jne
cmp
sahf
pop
fnstcw
or
or
sbb
lea
ja
sarl
mov
popa
inc
push
ret
std
aaa
xchg
and
xchg
add
call
push
mov
lcall
sbb
push
ljmp
xchg
imul
add
andl
call
es
orb
leave
repnz
jg
push
mov
lods
mov
aas
pushf
push
ja
les
ficoml
nop
pop
pop
mov
out
xchg
jae
mov
and
call
cltd
jae
pop
pop
pop
testb
loop
lea
aas
insb
and
insl
orl
out
mov
mov
loop
xor
ror
add
mov
js
mov
dec
sub
fldz
xor
insl
pop
in
xlat
std
in
mov
mov
gs
or
mov
lds
cltd
cmpsl
jecxz
sbb
xor
insb
in
and
push
mov
or
adc
adc
stos
cmp
adc
lret
mov
or
or
xor
sub
jne
repnz
dec
mov
xor
or
and
sub
pop
arpl
or
nop
lret
jle
push
out
jl
add
mov
in
xchg
lcall
fs
add
mov
stc
popa
jo
cmp
mov
js
andb
nop
push
xchg
xchg
cmp
clc
cmpsb
pop
nop
stos
mov
scas
in
mov
inc
cmp
clc
dec
fsubp
stc
sub
and
push
or
xlat
add
andl
or
cltd
lock
fwait
js
pop
sub
fstp
dec
mov
or
add
shlb
inc
mov
shr
rorb
jns
jne
add
loop
or
jp
in
push
pusha
push
dec
push
jp
out
imul
jnp
push
and
push
es
dec
push
outsl
and
xchg
lods
push
movsl
out
jne
push
dec
dec
push
lret
dec
add
xchg
pusha
sti
int3
jecxz
inc
push
add
adc
add
xor
lret
jmp
int
sahf
lahf
mov
rcrb
dec
fistpll
pop
push
pop
sub
lds
test
dec
sahf
add
xor
mov
push
fnstenv
in
mov
or
sbb
stos
dec
adc
out
cs
mov
out
insb
pop
mov
inc
mov
int
add
cmp
stc
mov
sarl
ja
arpl
add
push
xchg
sbb
adc
mov
fsubs
pop
mov
mov
sub
jmp
cltd
cltd
mov
mov
cmp
cltd
xchg
les
mov
push
int3
cmp
jbe
jb
scas
stc
sbb
shlb
enter
pop
and
fucomip
ret
sub
push
mov
xchg
popf
push
les
imul
stc
imul
adc
lods
loop
pop
mov
ljmp
or
jp
and
outsl
enter
in
icebp
aam
adc
inc
xlat
pop
out
dec
or
xorl
ret
in
and
fistpl
dec
das
and
in
je
mov
cld
push
cmp
jb
or
cltd
in
mov
pop
cmp
pop
sahf
mov
jle
mov
jb
fucomi
in
iret
push
push
adc
arpl
enter
insl
inc
jns
pop
out
cmpsb
lods
and
cmp
frstor
cld
cwtl
stc
out
ja
mov
jns
cli
jnp
mov
sub
and
cmp
pusha
jg
scas
mov
lea
cmpsl
xchg
repnz
cld
dec
stos
dec
cmp
fsubl
fwait
adc
mov
sbb
ljmp
or
insl
stos
sbb
test
mov
repnz
fistpll
rcl
mov
xor
in
aam
jb
out
pop
int
jb
stos
arpl
imul
mov
mov
mov
dec
xchg
cmp
cli
mov
imul
dec
jp
je
repz
inc
jbe
push
jp
int
popa
in
inc
movsl
call
xor
inc
mov
mov
dec
js
add
jnp
and
outsl
sbb
adc
jp
int
or
jg
mov
imul
aaa
in
dec
push
test
je
cmc
jg
js
aad
lret
and
sti
punpcklwd
mov
les
mov
ficoml
add
fildl
addr16
ljmp
shrb
sub
fists
xor
jne
movsl
stos
or
pop
mov
out
jns
and
mov
sbb
js
mov
jno
push
inc
mov
dec
stos
dec
xor
mov
stos
add
pop
jns
sbb
jns
cwtl
push
lea
movsl
es
and
aas
shll
mov
jl,pt
loope
in
xchg
jb
or
icebp
js
xchg
jge
or
aam
mov
repz
dec
xchg
les
out
scas
ja
arpl
jp
pop
pop
or
xor
push
inc
push
mov
mov
out
mov
hlt
gs
andl
xchg
jbe
in
lock
push
fisubl
incl
insl
jmp
mov
inc
sbb
addr16
int
test
cwtl
into
cmp
loop
mov
or
and
pop
dec
inc
shll
mov
and
call
xor
or
pop
inc
mov
stos
add
add
sbb
inc
icebp
in
cmpsl
movsl
and
cmc
fucomip
push
paddsb
dec
icebp
into
out
mov
lcall
mov
push
shll
into
push
sub
negl
and
aad
adc
dec
cmp
daa
sbb
aas
xor
xor
pop
jecxz
push
insl
rcr
pop
mov
sbb
cli
rcll
cmp
leave
cmp
mov
jmp
or
push
subb
adc
adc
add
mov
sahf
shrl
and
ret
fcomps
cmp
cmpsb
lods
mov
push
fsubrl
xor
lds
adc
test
cmpsl
cli
out
fs
in
test
push
add
nop
add
and
xchg
movsl
fwait
into
push
daa
ljmp
sbb
sub
call
imul
push
push
jns
sahf
loop
std
sbb
dec
je
push
movsb
clc
repnz
xchg
insb
push
jle
dec
cli
inc
xor
mov
mov
pop
xchg
dec
xchg
cmc
popa
lret
in
jecxz
lcall
xor
imul
in
jns
icebp
cmpsl
jl
or
mov
sub
loop
pop
xor
add
lea
rcr
jb
or
mov
inc
insb
xchg
jns
inc
jne
cs
lahf
incl
rclb
std
adc
adc
lret
iret
pop
xor
jbe
jle
int
fldcw
xor
adc
mov
iret
sub
cs
jno
in
dec
inc
outsl
stos
xchg
lcall
pop
scas
lock
sarl
imul
sbb
adc
out
stos
fdivs
or
add
ds
xor
xchg
test
aaa
or
lcall
and
push
enter
lods
xlat
xchg
xor
out
in
cmp
or
push
mov
add
push
or
cmp
nop
or
stos
cmp
movsb
mov
out
lcall
cmp
mov
loope
stos
push
pop
shrd
lret
outsl
mov
pop
scas
jo
out
jge
cmp
aaa
inc
and
divb
into
push
lock
xor
cwtl
dec
std
mov
or
push
mov
inc
stos
mov
popf
lea
ds
out
mov
adc
ret
call
adcb
shl
in
pop
jb
lods
repnz
popf
lahf
push
push
dec
jno
or
cmc
out
movsb
sub
push
sub
jb
test
adc
test
sbb
insb
dec
test
fdivr
dec
out
jne
aaa
xchg
inc
mov
mov
pusha
gs
enter
orb
fdivl
in
cmc
das
je
rcrb
inc
xor
scas
ffree
nop
cwtl
xor
lret
jo
repnz
mov
mov
mov
jb
mov
inc
push
mov
xchg
xchg
jae
insb
push
rcrb
add
mov
or
cmp
mov
fs
fmuls
xchg
mov
addr16
mov
push
or
push
and
jp
in
and
aas
cwtl
pop
insb
xchg
mov
fidivrs
pop
lds
test
cmp
es
out
mov
popa
jne
cli
xor
xor
out
mov
add
sub
jl
shrb
sub
jo
mov
lret
aam
cmpsb
fwait
ljmp
bound
dec
push
aas
xor
test
jmp
mov
jl
push
scas
leave
scas
shlb
clc
aam
jbe
push
aam
sbb
sub
and
rclb
fistpll
in
jmp
jl
mov
sbb
sbbb
fucomp
lods
aam
in
test
insb
rcll
cmp
xor
jns
arpl
cmpl
sarl
push
sub
inc
cmp
sti
loopne
fwait
pop
xlat
dec
push
setne
jmp
jnp
and
in
mov
iret
pop
insb
mov
sbb
pop
mov
adc
xchg
pop
or
aaa
divb
dec
jmp
mov
mov
faddl
jmp
addr16
roll
xchg
mov
ds
lods
adc
sbb
cmp
or
jo
mov
xchg
jbe
and
std
mov
popf
jbe
shll
mov
ss
in
pop
pop
addb
scas
push
sub
ss
push
mov
stc
rol
pop
shl
push
mov
bound
mov
cmp
cld
pop
xor
inc
cmp
dec
aad
out
les
adc
push
in
clc
gs
js
push
iret
lcall
adc
add
dec
fcoml
fsubrs
sbb
in
mov
xchg
in
orb
xchg
inc
scas
add
insb
cmp
pushf
jecxz
shll
pop
out
jno
push
and
mov
jmp
cld
cmc
cld
popf
es
add
cmp
sti
inc
push
add
push
mov
scas
dec
jl
test
popf
cs
jbe
pop
cmp
dec
jbe
iret
dec
idivb
push
aad
sahf
mov
sub
pop
push
jbe
xchg
in
inc
outsb
loopne
dec
int
test
xchg
sti
cmpsb
inc
dec
outsl
pop
pop
adc
pop
push
and
or
mov
cli
xchg
ja
dec
sti
inc
xor
ds
jg
rcr
pop
xor
jae
push
cltd
add
inc
cmp
mov
mov
dec
xchg
or
or
je
pop
shrl
popa
out
mov
imul
mov
ljmp
cld
pop
rorb
arpl
js
rcl
push
xchg
fcmovnb
in
repnz
fcmovnb
out
dec
cmp
add
xchg
cmpsb
stos
xor
and
fists
fs
sbb
and
iret
dec
cmpsl
movsb
and
idivb
stos
fdivs
icebp
mov
es
outsb
push
pop
ds
aam
scas
pop
inc
aad
and
insb
push
mov
or
scas
jle
roll
imul
add
out
pop
jbe
stos
leave
sub
push
xor
jae
xchg
stos
sub
mov
jecxz
push
adc
fldcw
into
daa
sub
dec
shlb
cmp
pop
ljmp
xor
xchg
mov
mov
mov
cmpsb
ja
out
loopne
call
jle
pop
cld
int
mov
test
or
insl
sahf
pusha
pop
sub
int
cmpsl
ficoml
int
sub
pop
loopne
int3
shrb
mov
std
sbbl
cwtl
ds
cmp
enter
hlt
sbbl
cmp
inc
jae
or
push
sahf
outsb
add
and
enter
leave
in
popf
and
add
push
inc
je
iret
xlat
jo
adc
pop
adc
mov
push
das
mov
fstpt
lods
in
xor
addl
rcrb
test
sbb
dec
pop
or
mov
shrl
mov
stc
pop
push
xchg
je
sti
adc
outsb
pop
mov
pop
mov
or
cwtl
ss
jecxz
scas
into
js
push
test
pop
mov
movsl
sbb
mov
push
test
loop
pop
les
add
mov
push
xchg
adc
out
cmp
aaa
xorl
xor
or
popa
rorb
adc
les
xor
arpl
mov
add
jb
xchg
scas
sbb
push
xchg
mov
loopne
lods
dec
mov
and
dec
xchg
cmpsb
dec
mov
aam
xchg
dec
in
mov
cmc
jae
out
xor
int
lea
sbb
push
inc
jae
aad
jo
sbb
cmp
rcrl
sub
pop
sub
or
push
xchg
or
mov
mov
or
fwait
sbb
add
inc
pop
cmpsb
xchg
fs
lcall
dec
movsl
push
and
inc
adc
dec
popa
cld
loopne
insl
mov
test
cld
cmp
call
cld
out
dec
push
jae
mov
stos
ret
xchg
popf
ds
clc
daa
mov
jge
stos
addl
lret
jecxz
dec
dec
fcmovnbe
shlb
pop
cmp
stos
movsb
jp
or
sub
fucomip
mov
fisubs
pop
push
jle
shlb
cld
mov
lret
or
push
or
bound
sbbl
xchg
xorl
daa
inc
jp
push
xchg
int3
leave
lods
inc
or
int
lahf
lods
sbb
ret
cmp
insb
and
jl
scas
xor
cmp
call
inc
daa
jg
in
loop
inc
pop
xor
adc
pop
cwtl
int
dec
insl
xchg
push
bound
imul
xchg
adc
cmp
xor
lods
jmp
cmp
adc
inc
ror
sarb
ja
push
out
es
cwtl
icebp
rcrb
mov
adc
push
aad
fwait
xor
fsubr
shlb
gs
aaa
sarl
jmp
lahf
fstps
or
add
jnp
lret
mov
dec
cmp
jl
push
add
jb
scas
cld
mov
mov
cmpsb
gs
jno
push
cli
xchg
aaa
into
or
pop
iret
jge
es
pushf
mov
cmpsl
rolb
sub
cmp
jge
push
inc
mov
ret
fistpl
or
inc
gs
sub
popf
daa
out
loop
jl
enter
cmc
fiadds
shl
cwtl
scas
testb
mov
decl
je
insb
dec
cmp
mov
add
xchg
lods
push
ret
push
bound
jp
divl
mov
pop
adc
pop
xchg
mov
lahf
pop
js
sbb
push
push
negb
call
dec
out
jbe
dec
imul
xor
pushf
mov
jmp
dec
push
popl
orl
cmp
arpl
pop
mov
mov
das
inc
cmovne
pop
mov
cltd
stos
bnd
cmp
mov
repz
xchg
adc
fisubrl
daa
mov
push
mov
arpl
arpl
into
dec
pushf
popa
mov
mov
shll
xchg
imul
cld
lds
ds
mov
xor
xor
sub
adc
movb
jb
add
jno
mov
shll
lea
hlt
call
mov
addr16
or
and
rcr
mov
jp
or
xchg
adcb
insl
mov
pop
mov
les
mov
jbe
inc
jne
lock
into
pop
pop
jns
and
or
dec
cmpsl
xchg
je
fwait
xor
mov
pop
inc
pop
test
push
xor
stc
pop
stos
jmp
mov
in
loope
hlt
ss
jnp
jecxz
imul
mov
loopne
sub
lods
or
scas
push
cmp
mov
and
mov
in
or
lret
std
and
ljmp
inc
lret
mov
call
aam
jmp
xchg
jo
jmp
insb
imul
nop
lret
jge
data16
mov
and
mov
maxps
dec
push
mov
fs
sti
add
loope
mov
dec
cmpl
shll
cmp
push
push
ret
cmp
daa
cmp
icebp
lcall
adc
shlb
sbb
or
test
jne
mov
movb
push
out
outsb
jns
or
lea
inc
push
les
mull
ficoms
aaa
mov
mov
add
add
xchg
and
cmc
cmp
outsb
pusha
iret
ret
jecxz
cwtl
ret
push
or
push
into
adc
mov
jnp
inc
push
and
mov
cltd
sbb
ja
xor
fistpl
inc
xchg
pop
jle
cmp
pop
cmp
daa
inc
dec
push
or
addr16
nop
jmp
aad
lss
ret
sbb
cmp
je
pop
loopne
loope
addl
in
loopne
pushf
xchg
and
xor
out
movsl
pusha
or
cmp
mov
adc
pop
test
shll
rcl
mov
outsl
add
add
sbb
mov
out
leave
fcoms
iret
jns
out
jae
push
js
cmp
and
pop
inc
sbb
mov
in
loopne
sti
int
mov
xchg
lret
mov
inc
neg
scas
sbb
inc
push
sub
ds
neg
rorl
cmp
pop
mov
test
cwtl
insl
movsl
add
shl
sub
movl
pop
mov
cld
lock
jo
rol
or
pop
mov
js
lods
out
or
pop
es
shlb
cmp
pop
lahf
loopne
loope
ficoml
xchg
push
xchg
inc
nop
icebp
mov
shlb
push
ret
push
jb
mov
mov
pop
cwtl
pusha
sub
rorb
inc
add
mov
xor
into
cmpsl
sti
ret
push
push
dec
shll
ret
lods
pop
sub
and
adc
xchg
mov
out
lods
jbe
mov
pusha
mov
orb
pop
ficoms
xchg
ret
push
sbb
enter
test
cwtl
setno
dec
jecxz
cwtl
pop
mov
adc
dec
test
adc
push
imul
subb
pop
jno
ss
js
fistpll
imul
xor
ret
in
test
dec
jmp
mov
call
cmpsl
xlat
aam
inc
add
ljmp
ljmp
mov
ljmp
lock
cli
pop
movsl
push
das
ret
outsl
ret
or
pop
mov
sbb
xchg
out
repnz
cli
popa
pop
jmp
outsb
lods
pusha
mov
push
cwtl
repz
dec
xor
add
mov
and
add
mov
mov
aas
push
popf
xor
mov
jecxz
pop
lahf
or
inc
lahf
xchg
cmp
imul
cmp
ja
inc
stos
cs
or
add
roll
xor
popf
or
push
rorl
or
flds
repz
or
jno
repz
add
insb
iret
cwtl
mov
pushf
inc
pop
mull
jp
or
or
cmp
std
insb
and
cmp
dec
add
aas
inc
nop
dec
inc
movsb
jecxz
test
loope
in
rcrl
push
xor
jnp
in
sub
pop
cmp
inc
jmp
fucomp
cmp
cmp
fs
out
jns
repnz
sbb
popa
jge
add
cmp
cmpsb
lods
push
clc
sbb
repnz
mov
enter
and
ljmp
fldenv
fsubrs
cld
test
push
inc
lea
add
pop
or
adc
rorl
cs
push
lds
sub
dec
mov
dec
or
mov
mov
jecxz
mov
sbb
jl
jmp
cmp
push
push
outsl
dec
addb
test
pop
pop
loopne
push
xor
gs
xchg
orb
dec
pop
xor
daa
inc
movsl
in
xchg
in
xchg
jp
xor
cld
cli
sbb
cld
lods
inc
mov
sub
jp
pusha
es
orb
test
jo
ja
movsl
jp
test
inc
or
sub
pop
imulb
xchg
xchg
push
sub
lret
jne
cli
adc
repz
shrl
ficomps
notb
movsb
sbb
xor
out
setns
scas
psadbw
lods
ds
xlat
ret
sub
inc
clc
and
push
lea
das
xor
pop
repz
push
jge
mov
sbb
shll
adc
outsl
xor
ret
lcall
and
test
sub
fldl
stc
insb
mov
rorl
pop
out
and
adc
xor
cmp
pop
lahf
jl
jmp
dec
mov
lods
or
mov
mov
sub
std
out
and
sti
mov
insl
sarb
movsl
into
sub
int3
pop
mov
mov
bound
inc
pop
xchg
jp,pt
je
pop
or
ljmp
in
jnp
out
dec
jb
out
std
jbe
inc
cmp
and
mov
cmp
pop
call
clc
inc
repnz
xlat
test
jb
out
and
or
ds
mov
push
fcom
movb
lds
popf
cmp
je
fbld
jae
pop
push
out
repz
test
enter
dec
or
sub
cmp
mov
shl
in
cmp
inc
cmpsb
jmp
out
cs
stos
dec
dec
inc
pop
cmp
jbe
dec
leave
and
xor
mov
jae
inc
movsl
cltd
sbb
jmp
cld
push
adcb
addb
je
movsb
jns
mov
loopne
dec
inc
sahf
push
arpl
cmp
cwtl
dec
xchg
jo
adcl
dec
mov
mov
je
and
mov
jae
dec
push
mov
adc
jecxz
js
push
jmp
stc
aaa
test
dec
cwtl
fs
sarb
sar
push
outsb
loop
les
ljmp
mov
mov
out
pop
mov
je
fwait
iret
jmp
or
add
subl
lea
popf
cli
neg
xor
adc
jmp
lock
lcall
cmp
stos
and
or
notl
sbb
jmp
jmp
mov
fcomip
imul
cmp
or
sbb
xor
ficompl
mov
mov
adc
ret
dec
push
pop
shlb
xchg
out
and
mov
dec
pushf
inc
les
sbb
sbb
lds
fists
xor
fs
insb
add
insl
pop
mov
xchg
repnz
adc
popf
sbb
add
test
fwait
int
jno
sbbb
xor
sub
or
add
pop
ficomps
aas
mov
mov
and
mov
jle
push
mov
ss
or
sub
pop
xchg
repz
mov
push
rcl
test
sub
movsl
push
push
mov
push
sbb
fwait
mov
shrl
pushf
fcoml
idiv
mov
popa
out
pop
add
insl
push
jbe
mov
nop
jns
pop
push
ljmp
subb
notb
and
lret
push
mov
pop
cmp
scas
rclb
fs
in
arpl
fwait
add
sub
xor
in
sbb
das
popf
sub
cmp
movsb
push
test
xchg
mov
mov
test
cltd
dec
es
mov
hlt
xchg
xchg
or
shrl
dec
sub
loop
mov
montmul
cmpsb
xchg
jb
cs
cs
int
xor
push
fcoms
or
mov
mov
mov
call
leave
cmp
inc
wrmsr
enter
mov
ret
outsl
cmp
jns
stc
rcrl
lea
adc
leave
mov
adc
das
mov
xchg
push
aad
mov
cmp
popf
or
fistpl
je
aaa
mov
jg
cld
mov
pop
fsubrp
or
xlat
inc
aas
stos
dec
push
loope
lods
push
cmp
mov
idiv
int3
shl
pop
ss
into
fwait
add
mov
push
fcomps
xchg
pop
push
rclb
movl
jb
or
insl
daa
dec
cmp
leave
lock
sti
mov
xor
js,pn
daa
jmp
mov
rclb
mov
xchg
mov
das
aas
hlt
dec
and
xor
stc
fadd
pop
out
cs
lea
int3
mov
in
inc
inc
ss
arpl
cmp
sub
repz
push
jecxz
adc
and
frstor
inc
mov
adc
sub
pushf
xor
popa
aas
mov
mov
and
rolb
cli
ja
repz
and
aam
pop
fnsave
outsb
push
into
cmpsl
inc
and
or
loopne
inc
mov
add
sbb
adc
in
cmp
mov
sbb
in
outsl
push
xchg
lea
or
lret
jecxz
adc
jl
outsl
adc
aad
testb
decb
cmp
fidivrs
fdiv
gs
notl
adc
sbb
daa
shll
mov
dec
scas
out
rol
stc
lods
cmpsb
insl
push
in
lahf
adcl
xchg
sbb
cli
addr16
dec
sub
lret
stos
test
arpl
mov
fadd
shrb
andb
gs
pop
mov
sbb
or
fiaddl
mov
cmp
popa
dec
sahf
fprem1
imul
mov
aam
mov
loop
and
cmp
xchg
xchg
cwtl
ja
imul
daa
lcall
enter
or
cmpsb
lahf
js
pop
mov
bnd
cmovns
xor
outsb
stos
jle
adc
lock
dec
xor
cmp
test
mov
and
push
pop
aam
or
clc
stc
pop
out
incl
xchg
dec
and
daa
add
rcr
clc
and
les
leave
and
faddl
pop
cmp
mov
add
pop
and
neg
xor
mov
mov
inc
or
cli
push
add
pushf
scas
mov
lock
dec
jb
orb
xor
add
or
call
add
sub
jae
dec
pop
inc
push
cld
out
sti
out
mov
sub
pop
sbb
fstps
xor
adc
push
adc
push
stos
fnstsw
aas
adc
shlb
rclb
and
inc
or
jge
sbb
pop
aaa
cwtl
fdivl
test
push
cmp
mov
mov
cli
or
pop
cmp
push
push
or
in
xchg
or
add
out
dec
and
icebp
out
data16
xor
and
sbb
leave
jg
pop
push
out
mov
jns
push
pop
adc
in
cmp
cmpsl
mov
mov
outsl
cmp
pop
mov
out
in
nop
adc
push
cmp
std
ja
xor
rol
jp
xor
mov
fstl
movsl
aad
add
mov
pop
imul
imul
mov
xor
mov
cmp
add
mov
test
movsb
and
test
jecxz
cmpsl
inc
inc
jp
inc
jmp
rcrb
out
jmp
pushf
mov
xor
pop
or
sbb
test
pushf
inc
mov
cmpsb
adc
add
cli
movsb
mov
mov
call
das
and
ret
add
insl
out
in
jo
popf
cmpsb
sbb
xor
pop
das
movsb
ds
mov
add
push
xorb
mov
cmp
sbb
sbb
out
and
mov
jb
inc
add
xor
test
mov
adc
inc
hlt
test
pop
mov
clc
sbb
xor
or
data16
add
adc
popf
lods
les
mov
daa
sub
sarb
inc
sbb
popa
sti
fwait
arpl
iret
aas
jge
add
pusha
mov
sbb
mov
fisubs
gs
test
cmc
pop
jmp
sbb
dec
jb
mov
push
sub
fwait
jp
push
sbb
addb
mov
scas
add
xchg
fldl
or
mov
lcall
mul
cmpsb
int3
leave
jecxz
dec
das
and
leave
pushf
mull
mov
xlat
hlt
inc
push
pop
xor
xor
dec
jnp
inc
xchg
jg
mov
rcrl
in
das
out
jns
mov
xor
mov
and
or
push
push
or
sbbb
sbb
inc
jle
mov
dec
jnp
jmp
jo
ss
loopne
add
mov
push
pop
xor
sub
insb
adcl
ret
test
test
inc
movb
loopne
and
adc
stos
adc
mov
and
sub
xor
adc
ljmp
pushw
fistps
lds
fisttpll
or
mov
punpckhwd
fsubrs
cmp
xchg
push
fsts
sub
jge
cld
jae
mov
addr16
mov
xchg
mov
stc
jno
push
xlat
and
stos
and
movl
sbb
xor
arpl
pop
mov
jecxz
push
xchg
inc
mov
jl
pushf
push
cwtl
ffree
movsl
pop
and
push
cmp
fdivrs
lods
xchg
inc
mov
dec
adc
testb
pop
and
sub
stos
arpl
movsl
jmp
aaa
rclb
sarb
pusha
and
repnz
nop
insb
inc
pusha
sbb
xchg
jecxz
and
shll
jo
cmp
or
pop
or
call
mov
cwtl
add
stos
mov
dec
loope
stos
or
out
xchg
in
xor
cmp
jmp
pop
sub
sbb
mov
inc
pusha
push
mov
nop
inc
aad
and
sub
push
cmpsb
lea
mov
arpl
mov
imul
push
push
push
test
adc
add
imul
jne
sbb
outsb
sbb
xchg
push
cmpsl
inc
xchg
sti
movl
pop
cmp
sarb
inc
popa
pushf
jne
sub
pop
fcompl
jecxz
pop
mov
ret
jg
imul
fiadds
mov
test
cmp
or
mov
or
fadds
lock
xchg
lret
aam
dec
adc
xchg
cli
stos
sbb
lcall
aas
sbb
rorl
aas
cmp
xor
inc
mov
shr
les
std
mov
jne
xlat
sub
push
xlat
in
xor
mov
cmp
sahf
cli
psrlq
dec
pop
gs
push
jp
lds
jb
loope
dec
rorb
out
jne
cltd
and
inc
mov
xchg
mov
ljmp
push
inc
aaa
jne
lcall
push
sub
pop
pop
or
add
cmpsb
aaa
stos
mov
mov
addl
mov
ret
mov
pop
push
cmp
inc
xchg
lods
cli
cmpsl
std
sbb
mov
mov
xor
test
dec
xchg
gs
push
and
jo
push
xor
dec
xchg
gs
sub
fistpll
fiadds
lock
enter
cmp
xchg
dec
xor
sub
mov
aam
cmp
cmp
lret
cli
sbb
lods
gs
pop
out
int
sub
loop
lds
fiadds
in
hlt
cs
push
lret
adc
sbb
jno
pop
test
xchg
or
and
int3
test
loop
addr16
pop
sbb
jl
filds
dec
mov
pop
in
imul
xchg
in
sub
jp
inc
xchg
sbbl
push
loopne
fwait
repnz
sahf
add
ret
lret
mov
enter
dec
jb
xor
out
pop
ret
testl
in
scas
pop
or
sbb
xor
add
fsubl
call
pop
mov
and
fsub
retw
repz
adc
or
sub
jbe
push
sub
push
shll
or
vmovaps
pop
inc
in
mov
mov
or
mov
out
add
or
daa
sbb
adc
or
inc
push
repz
fnstsw
mov
sbb
clc
xchg
push
in
fs
push
nop
daa
lods
in
add
dec
repz
mull
xchg
lds
arpl
xlat
add
je
pop
dec
adc
xchg
push
out
add
mov
shrb
scas
pop
cmp
cmp
subb
in
inc
xor
push
test
insb
js
mov
lret
loop
adc
outsl
add
inc
jae
insl
fwait
std
pop
scas
dec
test
sub
adcl
adc
add
addb
jecxz
jno
sti
dec
push
cli
ficompl
cmp
lahf
rcrl
mov
sub
loope
xor
dec
dec
sahf
fwait
pop
stos
sbb
int
jmp
repnz
testb
daa
sub
ds
notl
push
jno
or
push
test
mov
dec
dec
int
add
xor
mov
mov
sub
jg
jp
push
sub
sub
mov
cld
or
add
or
es
shrb
lret
sbb
test
add
adc
sti
es
dec
in
imul
les
xchg
push
mov
xchg
nop
and
daa
out
cmp
mov
clc
out
out
push
into
push
xchg
enter
aaa
mov
ss
fildl
faddl
icebp
sub
outsl
int3
data16
push
xchg
cmpl
je
dec
jmp
sub
mul
test
std
into
test
mov
pop
mov
out
hlt
pusha
xchg
adc
ss
cli
pop
leave
pop
pop
out
fcmove
mov
push
cmc
rcl
dec
test
pop
lea
lahf
arpl
fcomps
push
addr16
outsb
mov
int3
and
shlb
jecxz
xor
adc
sub
aaa
sub
popa
pop
adc
jge
jp
inc
inc
in
je
fsubrl
adc
leave
inc
outsb
add
test
lock
jp
jmp
xchg
ss
imul
ljmp
std
insl
sub
imul
cmpsb
mov
push
adc
hlt
into
xor
lds
fdivrs
push
lahf
push
pop
cmpsb
lock
sbb
push
jg
lods
je
fidivs
add
dec
outsl
push
test
push
mov
fmul
repnz
mov
clc
cmpsb
imulb
mov
xchg
not
jle,pn
pusha
xor
mov
jp
and
lock
outsb
mov
out
pop
cmp
dec
mov
imul
lods
jne
pop
cmp
xchg
pop
fildl
add
int3
aam
push
cmp
xchg
fsts
pop
out
in
xchg
and
imulb
inc
ret
lret
pop
mov
xor
push
repz
xchg
push
xchg
mov
addr16
push
xor
xchg
xor
pop
mov
jle
xor
inc
and
and
cmc
adc
outsl
test
add
mov
and
testl
negl
mov
fidivrl
pop
jle
fcoml
pop
andb
sarb
jb
sub
mov
cld
enter
out
sub
testb
dec
mov
jno
sbb
mov
inc
adc
push
dec
dec
mov
in
in
mov
adc
paddsb
cmp
adc
mov
xchg
sahf
cli
xchg
stos
pop
stc
push
outsl
mov
adc
cmp
mov
mov
int
xor
dec
mov
addr16
and
mov
leave
cmpsl
or
xor
aaa
fcom
jne
ds
and
cmp
jnp
lods
mov
fs
mov
pop
dec
mov
idiv
or
popa
in
adc
repz
test
loope
pusha
xor
inc
out
data16
inc
xchg
sbb
xor
adc
add
xchg
repz
imul
enter
pop
popf
scas
jl
push
fimull
inc
outsl
stc
incb
sbb
fwait
jg
insb
sub
push
fwait
imul
push
push
loop
push
hlt
mov
push
xor
cmp
xchg
pop
rorb
ja
xchg
xchg
fwait
mov
mov
cmp
mov
out
fsubrs
addb
sub
pop
cmp
mov
mov
cli
sbb
mov
adc
out
xor
lret
pop
dec
and
addr16
jnp
cld
in
jo
jecxz
mov
push
ret
in
mov
ja
push
sub
cmpsl
pop
stos
inc
icebp
insb
in
jmp
ss
leave
into
mov
ljmp
pop
push
mov
xor
xor
and
jge
pusha
hlt
add
adc
inc
add
or
xchg
or
stc
adcb
xchg
ja
imul
data16
xchg
outsl
dec
fistps
enter
mov
cmp
rorl
sbb
cltd
add
pushf
divl
lret
loop
xor
cmpsb
aam
lcall
xchg
and
mov
js
outsb
sub
pop
cli
lds
pop
push
fimuls
jg
push
or
incl
mov
icebp
aaa
aas
mov
and
sub
ss
sbb
jne
call
push
lea
xor
test
jg
andb
adc
mov
cwtl
popa
rclb
add
pop
push
incb
insl
and
jecxz
and
pushf
scas
inc
xor
push
outsl
popw
ficomps
jmp
jmp
mov
push
outsb
fisubrs
inc
mov
inc
pusha
xchg
repz
pop
xchg
pusha
cmc
testb
jnp
cli
jo
pop
jecxz
mov
push
daa
dec
mov
std
lea
fnstenv
cmpsl
add
push
rorb
ffreep
mov
stos
shlb
fcmovb
xchg
sub
mov
das
xchg
out
outsl
rcrl
pop
fcomi
dec
dec
xchg
enter
adc
sub
jno
addr16
das
cmpsl
mov
jo
add
mov
scas
inc
jnp
repnz
or
cli
fildll
or
jg
test
cmpsl
xchg
pop
out
xor
ljmp
scas
stos
sbb
fwait
cmp
inc
push
es
shr
mov
loope
imull
pop
sbb
cmp
out
mov
iret
and
pop
adc
hlt
xchg
dec
daa
call
std
dec
push
int3
outsl
xor
jo
jb
mov
mov
out
pop
ret
movsl
mov
repnz
dec
mov
mov
ss
push
push
cmpsb
aam
inc
mov
mov
add
add
pop
insl
in
pop
rcll
sbb
add
jl
fists
jecxz
push
sbb
xchg
in
into
and
fcomp
imul
add
stos
xlat
icebp
aad
and
sub
adc
jo
in
push
mov
xor
orb
add
pop
mov
sub
cli
pop
out
daa
pop
and
mov
cli
cmp
lret
rcl
mov
add
shrl
or
imul
fs
loop
xor
fyl2xp1
or
addl
mov
dec
shll
or
sub
or
or
aam
mov
sbb
inc
xchg
cwtl
jae
cmp
int3
and
fdivrs
mov
pop
imul
inc
pop
data16
lods
imul
rcrb
dec
out
mov
inc
inc
push
and
shll
lret
arpl
pop
inc
push
jecxz
psllw
jg
sub
insl
mov
cmp
push
fdivs
and
lret
in
fidivrl
leave
in
popf
cmp
or
fdivrp
lcall
sbb
push
push
inc
cli
js
add
dec
xor
mov
loopne
leave
or
jnp
mov
mov
rorb
stc
mov
adc
dec
add
out
pop
daa
fst
shrb
and
or
cmpsl
jl
inc
jbe
lea
or
or
mov
mov
add
sub
data16
retw
call
out
rolb
pop
sbb
adc
cmp
loop
jle
xchg
adc
adcb
cwtl
jne
movsl
mov
mov
into
test
les
or
movl
dec
xor
jno
aaa
jo
add
imul
xchg
cmp
mov
push
xor
push
xchg
jecxz
inc
imul
aas
jl
cmp
xor
arpl
lahf
gs
repnz
sub
sarb
push
jle
inc
or
ja
jge
ss
jecxz
into
sahf
int3
rclb
movsl
lds
dec
or
ljmp
or
cmpsl
nop
cmp
and
aas
sbb
adc
cmp
in
popf
jnp
cmpsl
cmp
jnp
push
inc
inc
mov
in
fstps
sub
dec
sbb
xchg
enter
mov
mov
mov
pop
test
sbb
filds
clc
lret
nop
aad
cmpsl
sub
rcrb
lret
in
cmc
ret
mov
mov
insb
and
iret
imul
push
fidivrl
rcr
jno
les
pusha
mov
nop
push
leave
das
adc
sahf
xchg
data16
sbb
dec
iret
in
les
test
rcr
adc
loope
inc
imul
inc
shll
lods
ja
iret
sar
lcall
cmp
mov
xchg
fdivrl
dec
xor
roll
cmp
into
add
adc
daa
lods
std
movsl
je
xlat
dec
push
loope
sahf
adc
push
jmp
gs
movsl
dec
jmp
ret
lds
mov
psrad
inc
out
out
sub
lret
jae
add
jb
lcall
aaa
push
popf
gs
inc
loopne
and
pop
loop
xor
add
xchg
orl
or
pop
cmp
xor
mov
inc
xchg
jmp
jge
adc
push
and
roll
lret
mov
or
xor
mov
xchg
lods
gs
movsb
out
idiv
xlat
mov
mov
push
mov
pusha
gs
into
push
movl
lea
cmp
ss
ljmp
push
jl
and
dec
mov
insl
xchg
push
xor
sub
xchg
push
cmp
testb
inc
cmpl
lahf
sbb
loope
xor
pop
mov
inc
mov
pushl
push
rorl
add
push
sbb
sub
jb
xchg
sub
sti
fwait
mov
div
pop
lret
push
xor
lds
sbb
inc
push
aam
es
mov
or
movsb
mov
push
fs
xchg
xchg
jmp
ljmp
fwait
mov
lcall
mov
je
mov
enter
into
iret
outsl
add
ret
jp
pop
jge
out
pushf
push
mov
daa
hlt
test
cld
cli
push
mov
outsl
jae
pop
jbe
adc
xor
ja
sub
lds
cmpsl
push
sbb
dec
pop
push
xchg
xchg
sub
jmp
push
mov
push
dec
lahf
test
aas
and
xorb
ja
or
mov
mov
dec
shr
testb
pop
pop
insb
aaa
sbb
mov
xchg
jmp
jno
or
jns
add
lahf
inc
sbb
jl
push
push
push
xor
pop
cmp
mov
int
loope
add
test
xchg
and
xchg
cmp
jne
adc
movsl
scas
shrl
xchg
jge
sub
sub
xchg
gs
ja
sbbl
insl
push
in
sbb
ja
aaa
mov
stos
loope
jnp
mov
shl
daa
outsb
mov
xor
sbb
xlat
mov
das
mov
jle
jo
je
fcompl
push
idiv
lcall
scas
gs
dec
jge
push
insl
adc
cmp
xchg
lret
test
dec
xor
xor
out
or
xchg
sbb
pop
aas
mov
pop
ds
dec
inc
ficoms
fnstcw
call
inc
mov
ret
aas
lret
out
mov
stos
dec
fistpl
cmp
jo
pop
lock
in
mov
push
stos
cmp
push
xor
aam
pushf
mul
pop
insb
and
adc
mov
jae
in
in
jmp
fdiv
push
ljmp
stos
into
es
mov
lcall
add
dec
les
scas
and
hlt
pop
mov
jnp
adc
jecxz
cmpsb
test
push
jle
mov
mov
lock
or
add
mov
adc
inc
fstpt
mov
add
jnp
jle
ljmp
js
test
mov
jne
inc
pop
jle
addr16
prefetchw
stc
mov
sbb
pop
push
paddb
iret
mov
jns
lds
pop
ret
outsl
cld
js
loope
and
xor
cltd
mov
mov
ret
cmp
fsubl
loop
push
sub
mov
leave
insb
movsl
fsubs
pop
inc
jg
pop
cld
dec
movsl
outsb
aam
dec
es
cmpsl
cmp
add
pop
out
sbb
xorb
stc
popa
add
or
je
aaa
cmc
iret
dec
push
inc
loope
pop
mov
jecxz
push
sbb
loop
jo
cli
adc
add
out
repz
movl
and
xchg
or
inc
push
sub
sbb
push
dec
mov
fsub
aaa
iret
xchg
adc
inc
sbb
xchg
fdiv
daa
mov
mov
xchg
push
jo
stos
mov
clc
shrb
clc
ljmp
enter
or
je
jp
call
aad
fwait
iret
outsb
dec
popl
enter
xchg
fcoml
xor
movsb
outsb
pop
mov
ss
movsb
addb
xchg
into
lret
jne
sub
outsl
pushf
in
add
pop
pop
jns
pop
scas
les
mov
push
adc
shr
mov
cltd
call
orb
add
sbb
add
mov
jle
stos
push
negb
fcmovne
add
loop
pop
fisttpll
jns
std
dec
mov
scas
dec
or
adc
push
mov
mov
cs
mov
into
leave
icebp
xchg
and
outsb
outsb
pop
adc
cmpl
cmp
popa
jo
mov
push
and
or
mov
mov
pop
in
daa
xor
pop
movsl
inc
scas
sub
pop
dec
subb
inc
mov
cli
push
mov
dec
cmp
jo
xchg
dec
push
outsb
sub
push
sub
pop
leave
sti
xor
fs
cld
dec
and
mov
pop
and
ljmp
call
stc
inc
cmpsb
mov
stos
movl
sbb
test
push
push
pop
ja
ss
xor
adc
xchg
mov
dec
cs
inc
jge
jno
dec
fwait
inc
mov
mov
out
popf
and
insl
loop
test
pop
rcll
mov
mov
jmp
cmp
cmp
mov
mov
xlat
xchg
and
jle
jae,pn
mov
mov
imul
js
adc
cmp
cwtl
add
repnz
jbe
push
inc
sbb
imul
aas
pop
gs
mov
ljmp
fistpl
pop
lret
js
ljmp
push
adc
sub
lret
mov
orl
loop
leave
adc
rcrl
mov
jp
push
push
repnz
dec
int3
mov
sbbl
nop
cmp
lret
cs
mov
out
in
pop
fsubr
test
dec
xor
mov
sbb
scas
adc
xchg
xchg
push
and
xlat
roll
sbb
gs
add
les
dec
lret
jmp
push
adcl
cs
je
div
mov
mov
incl
arpl
inc
sbb
xor
aaa
out
movsl
xchg
bound
sbb
lods
push
sbb
icebp
adc
rcll
int
jns
enter
mov
jno
or
cmp
repz
aaa
adc
test
push
sub
push
cwtl
sbb
stc
add
and
rcl
sbb
mov
sub
push
xor
subb
add
in
fcoms
or
and
lods
push
rorl
lahf
dec
shr
pop
aam
jecxz
stos
idivb
cs
pusha
pop
push
out
jae
nop
gs
arpl
sbb
pop
add
mov
jge
xor
sbb
push
fucomi
test
cmp
sahf
add
divl
scas
int
cmc
xchg
ss
ds
data16
sub
mov
and
cmpsb
test
mov
mov
xchg
mov
repz
sahf
inc
sti
dec
shr
dec
dec
lea
add
inc
scas
xor
xchg
leave
inc
mov
pop
movsl
push
pusha
xchg
push
faddp
sub
dec
xchg
sub
test
mov
icebp
jp
mov
cltd
xchg
xchg
adc
stos
add
sub
xor
and
jne
push
cmp
test
bound
movsl
adc
das
cmp
jmp
sub
repz
fisubs
mov
sbb
cmpsb
or
add
incb
xchg
movsb
std
ja
adc
sbb
sbb
push
sbb
mov
dec
push
cld
or
lods
rcrl
incl
inc
ret
gs
pop
fcomi
je
stos
add
inc
mov
in
ds
push
out
daa
jae
es
xchg
xchg
arpl
out
popf
pop
xchg
xor
pop
push
or
and
cmpsb
mov
mov
jl
cld
stos
loope
xchg
cmpb
jg
xor
dec
rolb
pop
lret
pop
xchg
mov
js
xor
push
jle
pop
in
jbe
lods
xor
cmp
sbb
dec
movsb
jnp
mov
cwtl
jge
mov
outsb
add
bound
lods
stc
lcall
pop
mov
xchg
je
push
jl
les
and
adc
ret
push
popf
int3
jecxz
out
sbb
jo
sti
jbe
add
int
in
imul
or
in
inc
shll
popf
lock
sarl
mov
jp
cmp
out
adc
cld
xchg
pop
ret
jne
lods
inc
and
mov
mov
lock
pop
jbe
pop
xor
mov
pop
push
sbb
repz
mov
enter
fildl
xor
cmc
inc
roll
xor
aaa
jb
jmp
mov
popf
cld
mov
fildl
mov
sbb
sahf
adc
jg
xchg
xchg
pop
insl
fsubr
or
xor
adc
jl
jns
shl
jae
jp
push
pop
std
cmp
mov
fs
pop
ljmp
mov
test
push
pusha
decl
inc
into
lahf
xor
sbb
repz
loope
xor
jge
rcll
rep
pushl
pop
sahf
cltd
fists
stos
push
scas
mov
pushf
adc
inc
das
cmpsb
lods
xor
popa
sub
jp
adc
repnz
mov
push
dec
insb
jno
cmpsl
test
dec
and
cmp
clc
pop
and
pop
or
fs
sub
int
shl
mov
cli
cld
xchg
inc
cs
ja
int
enter
inc
je
cli
jmp
sahf
or
sub
push
pop
int3
jle
loop
int
pop
gs
cwtl
xchg
adc
jbe
sbb
cmp
add
loop
sub
je
sti
xor
lods
dec
in
cmp
sub
dec
mov
add
mov
andl
popa
adc
in
xchg
lret
jle
push
push
mov
adc
movsb
xchg
movsl
aas
fs
pop
movsb
mov
repnz
dec
jmp
mov
dec
je
jecxz
out
loope
adcl
sbb
daa
std
pop
cmp
xchg
xlat
adc
cltd
mov
inc
jmp
inc
cs
mov
pop
pop
daa
jmp
cmp
mov
mov
adc
leave
adc
mov
lret
dec
xchg
dec
repz
fs
jb
in
imul
sbb
fildll
daa
cmc
push
sbb
lret
sti
mov
dec
aam
push
lcall
jbe
cmc
push
jmp
mov
push
mov
or
and
dec
mov
lret
sbb
and
bound
lahf
add
cltd
xchg
addb
nop
jbe
pop
mov
sub
mov
xchg
push
jbe
or
lret
fstpt
data16
push
pop
mov
adc
repz
push
out
cli
push
call
push
ret
xchg
addr16
fdivs
and
xchg
sub
ret
std
add
nop
lret
dec
daa
loope
daa
inc
xor
lock
inc
int3
pop
fildl
out
mov
sti
popf
lret
fwait
insl
pusha
cmp
stc
sbb
out
jo
xor
inc
mov
sbb
add
inc
cmp
in
mov
sub
cltd
sub
leave
push
jmp
inc
xor
cmp
popf
jecxz
jae
lret
xor
test
rorb
addr16
add
mov
and
pop
repnz
mov
cs
and
pop
xchg
sbb
xor
lea
adc
ss
in
inc
stc
jae
scas
and
mov
sub
cmp
in
mov
movsb
cmp
pop
jo
jb
ljmp
jg
pusha
mov
mov
mov
push
inc
and
scas
out
jle
mov
xor
pop
data16
dec
rcrl
pop
rcrb
xchg
add
enter
pop
lcall
aas
mov
inc
into
cs
shl
test
insb
pushf
lock
in
mov
push
dec
ror
stos
cmp
rorb
ret
mov
xchg
add
lods
sti
dec
sub
pushf
sub
loop
pop
push
arpl
test
pop
movsl
cmc
mov
or
arpl
jecxz
aas
jle
sbb
loopne
sub
test
gs
cmp
pop
lret
push
jb
aaa
sub
aas
add
in
andb
rclb
mov
jae
sbb
in
push
jmp
in
xchg
pop
movsl
lock
jno
jle
inc
mov
ja
popf
sbb
into
mov
cltd
aad
in
test
pop
in
add
push
add
xor
jae
mov
pop
data16
shl
dec
lea
xorl
mov
stc
inc
or
jne
leave
jle
movsl
jecxz
cmp
lea
cmp
fists
jno
imul
or
jbe
pusha
mov
cmp
and
mov
hlt
or
push
pop
mov
pop
adc
jno
xor
sti
push
cld
xlat
incl
or
lock
or
jne
mov
push
sub
rcll
and
jge
jne
es
jo
das
movsb
aad
data16
pop
or
push
xor
mov
push
pop
cmp
lock
out
dec
xor
outsb
adc
loop
leave
jns
lods
mov
xchg
pop
pop
mov
xchg
mull
out
les
clc
xchg
repz
scas
cltd
mov
inc
shll
pop
repnz
mull
or
push
in
cmp
aam
mov
scas
clc
call
fsubs
aaa
push
cmp
mov
push
sub
nop
mov
ret
gs
je
push
xchg
add
push
ret
lock
push
movb
lahf
pop
inc
clc
popf
iret
jg
or
jb
push
jo
inc
shll
sub
das
xchg
enter
fwait
aam
xor
mov
mov
add
xor
repz
out
and
mov
les
mov
pushw
and
push
pop
sub
push
cs
add
or
push
lahf
repz
push
outsb
jo
adc
enter
mov
sbb
rcl
sub
insb
push
insl
pop
cmp
jo
push
xor
mov
pop
adc
adc
add
push
xchg
enter
iret
lods
xchg
jno
dec
pop
icebp
pop
mov
adc
pextrw
jecxz
xchg
dec
dec
mov
mov
out
or
adc
xor
xor
cmp
cmp
out
pop
xchg
pop
inc
add
push
sbb
movsl
mov
sbb
push
loopw
arpl
xor
sub
and
mov
aad
mov
pop
cs
scas
ljmp
xchg
sbb
xor
xor
cmp
mov
jae
sub
notl
out
les
sub
adc
flds
xor
ficoml
mov
lret
pop
lea
jecxz
test
fsub
lea
popa
push
adc
dec
ljmp
add
push
stos
sbb
fsub
cmp
mov
jb
call
or
push
lea
mov
cltd
ret
cmp
lahf
in
dec
ja
dec
movsl
loopne
inc
dec
jmp
clc
scas
fs
mov
iret
call
jmp
xchg
cltd
sub
jo
pop
add
pop
dec
lods
mov
pusha
lods
jbe
lods
xchg
push
pop
jno
xor
lea
mov
mov
stos
call
jae
stos
mov
jno
scas
xchg
push
js
jmp
cmpsl
hlt
lods
sub
inc
testl
lock
add
mov
js
mov
inc
stos
jg
pop
sub
es
pop
fs
push
das
mov
push
mov
jle
aaa
aad
jmp
inc
sub
out
sbb
test
call
mov
subl
mov
daa
int3
test
push
cmp
add
imul
test
xchg
jmp
sti
sbb
dec
adc
add
fwait
adc
adc
adc
fiadds
inc
xchg
adc
and
into
ret
cwtl
pop
mov
push
cmp
add
mov
xor
pop
and
pop
adc
adc
push
ret
pop
cmpb
push
ret
dec
or
lods
push
inc
dec
cld
xor
lock
cltd
mov
cmp
rcll
fisttpl
add
pop
push
fisttpll
pop
in
icebp
popf
bound
daa
dec
std
mov
pop
inc
jns
push
dec
xor
add
pop
fld1
outsl
mov
or
cmpsl
sub
test
sbb
ficoml
imul
sub
loopne
adc
loopne
inc
lds
subl
sbb
jmp
shlb
mov
shl
popa
inc
dec
fs
pop
aad
in
push
test
jl
ds
and
mov
inc
movsl
movsl
cmp
adc
or
cld
xchg
scas
lea
sub
int
dec
icebp
test
or
cmp
aad
and
lds
push
inc
xchg
pop
cwtl
inc
jnp
xor
movsb
test
hlt
out
pop
jecxz
pop
or
xchg
xchg
lret
fcom
ret
cmp
out
ja
sbbb
or
add
scas
jno
add
sbb
mov
dec
push
sub
ljmp
js
push
push
jae
mov
sub
gs
mov
insb
push
pop
mov
mov
mov
aam
push
push
aad
cltd
mov
insl
ds
int
cmpl
dec
lds
dec
pop
pushf
movb
addr16
sti
ds
cltd
stos
sub
mov
xchg
mov
sbbb
mov
int
je
pop
or
mov
scas
psrld
fimuls
mov
cwtl
pop
mov
sahf
movsl
cmpl
movsw
dec
cmp
inc
mov
jo
mov
movsb
out
xor
pushf
aam
push
add
orl
dec
push
add
pop
outsl
icebp
xchg
arpl
xlat
jne
mov
rcl
adc
cmp
xor
jb
cmp
stos
js
mov
jno
out
and
js
cltd
test
fidivs
mov
movsb
mov
lods
leave
dec
mov
mov
stos
pop
xchg
orl
jecxz
cwtl
jge
and
dec
jge
mov
push
lock
repz
mov
or
movsl
push
int3
inc
gs
xchg
data16
insl
and
lods
cs
xlat
mov
xchg
inc
jmp
sub
sahf
fdivrp
outsl
jmp
in
mov
sbb
je
dec
mov
stc
mov
aad
movb
cli
fs
push
dec
add
xchg
mov
pusha
arpl
jle
sub
push
and
cwtl
out
fisubrl
sub
pop
aad
lock
pop
push
cmp
test
mov
cmp
jb
dec
pop
and
cmpsl
jecxz
fldcw
mov
lds
movsl
cmp
in
mov
test
dec
xchg
es
inc
xchg
addr16
insb
test
push
mov
xchg
rcll
pop
cld
mov
pushf
aaa
mov
test
int
subl
lret
hlt
jno
call
fs
cmc
mov
jecxz
ja
mov
ljmp
pop
pop
jg
test
adc
out
outsb
cmpsb
pop
dec
push
jle
xchg
les
cmp
add
cltd
inc
ljmp
dec
or
pusha
pop
enter
sbb
dec
push
leave
bound
dec
aam
aad
shlw
pop
icebp
jne
sbb
sbb
pop
orl
sub
movsl
mov
jecxz
outsl
cs
pop
roll
pushf
dec
test
fwait
add
cwtl
push
sub
les
push
jecxz
inc
and
addl
call
dec
mov
adc
xchg
jae
ja
les
adc
sti
xchg
cmp
add
xchg
nop
add
fstps
cld
call
cmpl
int3
cmp
mov
dec
sub
push
aad
scas
movsb
push
xchg
test
je
pusha
cwtl
clc
loop
cmp
lock
mov
fldl
cwtl
loope
popf
cmp
pop
push
pop
push
dec
movsl
or
cmp
dec
xchg
or
stos
cmc
mov
les
mov
lcall
adc
mov
push
outsl
ja
fcoml
outsb
jbe
fistpll
mov
xor
cmp
jmp
insl
neg
xchg
out
and
test
mov
fadd
cld
xchg
subl
lahf
das
call
outsl
imul
decl
rol
enter
sbb
or
int
adc
jno
mov
xor
fisubl
or
popa
test
vunpcklps
sarl
xorb
insl
outsl
decb
xor
test
add
xchg
mov
adc
xchg
pop
dec
dec
ret
mov
adc
jmp
push
pop
out
hlt
lret
pop
fucom
adcl
fst
inc
mov
daa
inc
ret
xor
jg
and
rcr
xchg
jnp
jo
rol
aaa
insl
xchg
loop
nop
jbe
test
pop
cmp
ss
push
stos
dec
mov
add
sub
pop
fmulp
jl
jbe
and
adc
scas
sub
inc
out
cmp
push
mov
push
fldl
outsl
pop
in
fildll
xor
pushf
sbb
int
jge,pn
dec
fsub
fiadds
jnp
pop
popf
adc
mov
ret
decl
flds
xchg
popf
out
inc
dec
imul
inc
and
pop
out
es
dec
movl
repnz
push
xchg
push
cmpsl
pusha
in
push
movsb
push
mul
inc
out
dec
jne
push
sub
xor
mov
out
popa
dec
fdivr
mov
fisubl
mov
movsl
movlps
jb
cmp
inc
jnp
push
jnp
sbb
dec
and
cmp
push
mull
push
in
je
dec
cmp
xchg
subl
enter
xor
jg
nop
or
inc
js
lret
ret
xchg
dec
clc
xor
inc
data16
imul
js
push
pop
sbb
mov
imulb
push
aam
jl
sub
negb
in
sbb
lock
lcall
sahf
imul
cmc
in
and
adc
xchg
sbb
xchg
push
mov
mov
ss
mov
mov
lock
sub
outsb
mov
imul
ljmp
inc
jno
sbb
iret
iret
out
test
xlat
gs
sti
inc
lods
fisubrl
jb
bound
jae
xchg
and
gs
fsubrs
lock
lds
mov
imul
and
sub
inc
sub
mov
inc
stos
mov
pushf
fisubrl
pop
dec
jp
adc
std
rcll
outsb
aas
rorl
dec
fsubs
fwait
ss
icebp
push
push
add
fdivrs
jne
les
mov
dec
pushf
mov
bound
jmp
xor
sub
imul
pop
push
sub
addl
pop
and
inc
jb
push
lods
sbb
leave
idivl
mull
xor
adc
dec
stos
mov
subb
leave
mov
jl
xchg
jecxz
mov
cmp
add
sub
out
and
and
pop
popf
int
movsb
out
cmc
clc
idivl
subl
rolb
jg
mov
les
loopne
mov
data16
push
cltd
xorl
xor
mov
std
xor
push
jno
lret
mov
ss
mov
push
mov
mov
push
push
sti
or
mov
xlat
addr16
dec
and
jecxz
icebp
sbb
ja
aas
add
lret
push
ror
mov
and
mov
fistps
sbb
outsb
pusha
ffree
sub
xor
push
or
cs
test
xor
cmp
or
push
push
cli
xchg
sub
mov
gs
jae
push
xchg
push
clc
idivb
mov
pop
xlat
mov
push
pop
dec
outsb
cltd
push
cmp
xchg
repnz
push
aad
dec
push
popa
aas
sub
mov
jecxz
adc
insb
repnz
outsl
icebp
pop
insb
inc
mov
jno
xor
loope
mov
lock
xchg
lods
cmp
pusha
pop
xor
cli
test
push
cmp
sbb
xchg
lret
fmuls
fstl
pop
jno
mov
or
aaa
sub
cld
pop
in
xchg
adc
sbb
xor
cmp
and
inc
mov
in
xor
xchg
pop
jmp
sub
xchg
push
inc
int
test
cli
jl
fsubr
in
push
shrb
test
insb
push
adc
add
dec
cmp
in
mov
in
sub
mov
lahf
push
jmp
lods
cmpsb
sahf
testb
mov
rolb
ret
mov
xor
mov
adc
push
ss
pop
cli
jg
mov
cmp
mov
xchg
int3
pop
scas
or
mov
mov
stc
adc
mov
das
fsubrs
jl
incl
cmp
add
div
jmp
testl
dec
or
mov
stos
xchg
adc
add
mov
add
cmpsl
mov
pop
jge
popf
jae
xchg
fcompl
mov
push
jmp
jae
pushf
fwait
pop
imulb
mov
push
scas
jl
sbb
jae
andl
and
call
sub
mov
pop
cmp
mov
das
dec
jecxz
lret
popf
and
mov
mov
insb
xchg
add
pop
cmc
pop
ret
jle
cmp
and
lds
inc
subb
or
jne
jecxz
pop
add
dec
sbb
mov
xchg
test
xchg
pop
jmp
pop
repz
addr16
push
dec
jl
pop
sbb
cmp
adc
ja
dec
aas
dec
xchg
fstl
inc
add
cmp
mov
insb
push
std
jae
push
adc
ja
lret
popf
xchg
scas
test
out
rcl
jo
clc
mov
jo
lock
sub
add
mov
sub
mov
mov
imul
ljmp
stos
ds
shll
test
inc
cmp
inc
xchg
xchg
stc
sbb
out
loope
lds
cmpsb
mov
dec
sbbl
lods
add
inc
adc
test
and
lods
cmpl
and
out
inc
imul
and
dec
mov
mov
xor
cmc
push
dec
push
shlb
adc
ja
jle
insb
dec
aam
push
sbb
dec
pop
inc
and
lods
pop
cs
out
cli
aas
lahf
shll
out
jl
mov
pusha
cmp
in
and
pop
cmpsl
jne
es
pop
xchg
xchg
and
lea
cmp
movsb
loop
nop
das
mov
hlt
push
loopne
lods
mulb
and
pop
mov
adc
push
lea
inc
aam
sarb
adc
insl
fcoml
lods
fs
lcall
repnz
jge
push
fistpll
inc
pusha
iret
lret
cmpsb
fbstp
fwait
pop
arpl
adc
insb
mov
mov
shlb
into
xor
inc
and
adc
hlt
lea
add
inc
xchg
adc
sbb
adc
loop
jecxz
ja
jnp
outsb
adc
xchg
cmp
lods
add
js
test
mov
xchg
mov
push
imul
je
fisttpl
insb
mov
je
jbe
sub
addr16
jbe
and
dec
sbb
xor
dec
cmpsb
cltd
jge
call
das
cltd
xor
cld
jbe
xor
pusha
popf
cmp
dec
test
outsb
fimuls
inc
dec
cmp
adc
jge
xchg
jb
inc
jns
test
ret
cmp
or
iret
xor
fists
lahf
fldenv
mov
inc
sub
cwtl
nop
add
or
xchg
xor
hlt
out
inc
pushf
cmp
push
mov
mov
mov
xlat
pop
mov
ret
jmp
sbb
decb
into
fwait
repnz
stc
bound
ret
cli
mov
daa
shlb
imul
imul
cwtl
xchg
data16
and
mov
not
clc
hlt
xchg
fcomip
sbb
jno
loopne
xor
fists
push
mov
daa
xlat
adcl
loopne
out
dec
hlt
loope
jae
notl
loop
pop
and
mov
push
or
cmovno
lcall
outsb
ds
in
nop
cmpsb
out
pop
jbe
imul
push
dec
inc
xor
ret
lods
cmp
jp
sub
pop
addb
xor
xor
pop
lods
fwait
jae
insb
lcall
insb
fwait
imul
adc
push
add
cmpsl
insb
and
cmpsb
dec
or
in
clc
xor
into
pusha
in
or
jg
push
pop
test
bound
inc
mov
stos
dec
push
jae
dec
inc
fwait
jecxz
in
in
jbe
cmpsl
aad
fisubrl
pop
mov
ja
adc
mov
inc
les
lcall
negl
call
mov
xor
outsb
adcb
and
push
push
pushf
inc
notb
pushf
fwait
pop
sub
das
mov
roll
push
iret
pop
test
ret
mov
mov
call
inc
mov
adc
mov
mov
data16
mov
addb
scas
scas
rcll
jbe
incl
lods
push
xchg
mov
mov
andl
clc
pushf
inc
imul
or
adcl
imul
lret
in
daa
loope
push
inc
or
fwait
xchg
je
test
mov
cmp
jp
push
fcom
inc
adc
xchg
and
ret
push
dec
je
call
jg
adc
and
mov
rcrl
inc
mov
adcb
inc
adc
ja
pop
add
jecxz
xchg
cmp
add
mov
imul
in
dec
vminss
or
inc
mov
mov
dec
jb
adc
pop
pop
push
add
shl
inc
push
rcl
jbe
test
daa
inc
xchg
mov
icebp
push
push
pusha
js
popf
or
es
cld
add
mov
fadds
fwait
dec
out
insl
mov
xchg
mov
rcll
ljmp
fs
sbb
in
mov
inc
jnp
roll
movl
xchg
jno
jecxz
stos
or
and
cmpsl
or
mov
repnz
cli
jg
and
fcoml
dec
mov
mov
pop
push
das
mov
inc
testb
mov
cmp
mov
jmp
pop
xor
mov
jnp
sbb
sbb
jmp
fisubs
xchg
cmpsl
pop
xchg
mov
lahf
push
adc
ljmp
in
les
xor
fwait
push
sub
jbe
jns
sbb
dec
mov
mov
xor
sbb
jecxz
mov
aas
mov
je
ret
repnz
test
les
mov
or
out
shr
int3
lds
out
mov
inc
dec
jle
outsb
push
out
fstl
and
jg
push
fcoms
adc
dec
inc
and
or
divb
repnz
decl
shrl
sbb
jmp
inc
mov
mov
orb
xor
js
pop
or
sub
into
ss
jp
push
inc
mov
or
ret
fdivrp
push
and
std
push
pop
jnp
add
dec
filds
fisubl
movsb
sarl
mov
ds
xchg
in
jnp
leave
mov
imul
daa
jg
cwtl
add
cmp
lret
lret
xor
and
cmp
jp
enter
lods
orb
or
pop
xor
iret
mov
and
mov
push
sbb
sar
aas
xor
sahf
dec
inc
fdivr
and
jge
enter
sub
mov
dec
cmp
add
int
es
aaa
inc
push
cmp
lret
cmp
inc
or
mov
mov
mov
inc
cmovp
mov
xlat
jg
int
data16
jne
mov
ss
and
lods
aad
andb
addr16
sub
addl
sarb
lcall
stos
add
in
inc
jb
mov
rcrb
dec
pushf
pop
mov
add
lcall
mov
mov
ret
into
ret
sti
jae
mov
mov
sub
ret
arpl
aas
jmp
sbb
movsl
add
cmp
mov
in
xor
scas
jnp
scas
xchg
mov
mov
lahf
cmp
add
push
lea
das
sbb
daa
nop
xchg
aaa
aas
lret
sub
push
repz
mov
dec
cwtl
dec
cmc
insl
jp
adc
fwait
std
ret
pusha
jg
insb
scas
movlps
popf
movsb
add
lahf
outsl
lods
cmp
jo
push
movl
add
inc
mov
mov
in
mov
or
and
add
jmp
jl
cmp
cwtl
sub
movsl
cmpsl
inc
cld
adc
lcall
mov
sbb
cmpsl
sub
inc
mov
push
inc
add
inc
pop
out
out
xchg
int3
bound
faddl
mov
mov
cmpsl
addr16
dec
sub
push
js
push
inc
movsl
pop
fwait
inc
pop
inc
jno
cmp
push
shlb
out
push
push
scas
adc
out
mov
xchg
fcomps
out
lods
pushf
mov
jne
roll
subl
ret
jbe
fs
xchg
mov
cmp
and
in
jbe
add
mov
insb
ljmp
mov
mov
adc
pop
mov
loope
lcall
sbb
pop
add
js
inc
mov
movsl
pop
aad
fstpl
jmp
push
mov
rorb
and
lahf
sarb
out
push
mov
mov
fisttpl
push
out
fimuls
cs
jmp
pop
test
push
cmpsb
test
or
xchg
filds
in
lods
and
sub
fstps
std
sbb
js
adc
mov
adc
enter
adc
leave
jnp
mov
xchg
loop
jg
sarl
sbb
jns
push
scas
loop
movsl
jg
daa
aam
out
shlb
jb
repz
push
popa
test
sbb
outsl
ss
ss
bound
nop
pop
lcall
out
pop
icebp
fsubr
jp
pop
repz
in
cmc
cmpsl
xor
inc
das
xor
ret
std
cli
call
shrl
xchg
out
fisubrs
int3
xchg
push
sbb
gs
cmp
and
bound
jo
sbb
fisubrl
pop
and
xor
inc
in
in
mov
sub
outsb
add
xchg
les
cltd
and
push
mov
imul
jns
pop
mov
lock
lds
jmp
pop
lret
test
ficompl
mov
and
jns
lret
fbstp
cs
jnp
ljmp
mov
cmpsl
mov
adc
clc
lcall
adc
jne
mov
cmp
scas
cmpsb
addr16
sti
mov
dec
xorl
popf
jne
jno
pop
add
popa
shll
mov
mov
xor
cmc
lock
jge
xlat
outsl
lds
into
cli
lea
pop
xchg
or
and
xor
add
imul
cs
mov
hlt
out
movsb
loope
mov
mov
pop
sub
scas
inc
push
mov
insl
dec
lcall
xchg
sahf
popf
adc
test
aas
jmp
cmpsb
nop
jg
sub
icebp
faddl
aad
stc
adc
mov
mov
loopne
mov
push
test
imul
mov
jns
xor
shll
lahf
cmp
inc
push
xor
fdivrs
repz
mov
or
aaa
pop
dec
pop
xor
hlt
pop
push
or
enter
popa
fldl
insb
and
stc
lds
pop
addl
xor
cs
push
bsr
call
push
subb
ljmp
mov
mov
cmp
mov
test
aas
add
mov
push
mov
xchg
fisubl
sahf
dec
cmp
or
mov
pop
xchg
shll
rcrb
in
inc
inc
xchg
rol
cmp
xor
pop
scas
push
addl
mov
inc
mov
dec
mov
adc
out
mov
fnsave
xchg
rolb
cld
lret
mov
pushf
dec
jbe
aaa
xor
fdivp
test
int
mov
cmpsl
cmp
mov
repnz
xlat
xchg
fidivl
xor
loope
xchg
xchg
ds
or
mov
cmp
ss
lds
mov
mov
or
mov
mov
add
test
push
in
adc
xor
lret
enter
adc
xor
dec
push
xchg
loope
rclb
ds
inc
xlat
mov
scas
jmp
xchg
outsb
sbb
inc
fsts
xlat
mov
and
lahf
ffree
lcall
ror
and
aaa
and
xor
jle
ret
push
daa
pushf
ret
pop
lcall
xchg
inc
push
scas
cmc
stc
pop
imulb
lock
sahf
hlt
xchg
stc
mov
jp
aam
mov
cmp
pop
popa
sub
test
pop
fdivl
int3
fdivl
and
adc
rcll
pop
mov
adc
leave
aad
je
fildl
sub
js
or
repnz
mov
ret
or
xchg
mov
adc
clc
shr
int
jg
xor
sbb
sbb
ljmp
nop
mov
or
xlat
jno
dec
xor
mov
cmp
add
inc
or
add
fistps
repz
push
addl
imul
pushf
dec
fxsave
pop
push
test
lcall
lds
pusha
ret
and
addr16
das
enter
xchg
ja
jg
sahf
das
shlb
jae
sub
mov
fstpt
shll
mov
test
add
lds
jbe
in
or
aaa
repnz
mov
pop
adc
push
pushf
xchg
ret
push
dec
repz
sub
sbb
in
jg
nop
jl
cmp
out
jmp
ret
xlat
rcrl
xor
sbb
xchg
nop
push
add
cmpl
push
insl
lods
repnz
mov
or
test
push
fnstsw
cmc
arpl
pop
stc
fidivs
shrl
mov
ret
lods
aaa
dec
or
repz
inc
jg
mov
ja
mov
jns
adc
enter
out
in
adc
and
fistpll
hlt
add
stos
mov
mov
hlt
jns,pn
xchg
xchg
aaa
cs
xor
sbb
sub
jp
xchg
pop
jo
int3
das
jae
mov
das
lods
jo
aaa
push
mov
adc
and
adc
test
push
int3
jl
movsb
push
cwtl
in
cmp
cmp
jge
orl
adc
add
nop
test
lret
test
stc
mov
xor
cmp
les
into
hlt
mov
sub
es
popa
push
arpl
mov
push
ss
addl
mov
out
xor
test
mov
jne
les
arpl
je
xchg
fwait
add
in
in
sti
or
mov
cli
xchg
or
cmpsb
mov
push
or
fadd
scas
ret
xor
data16
leave
push
insb
movsl
pop
sub
and
jae
lcall
in
push
rcrb
repz
mov
cmc
xor
stos
mov
dec
jne
sub
imul
insl
jecxz
sbb
push
shl
xchg
call
fs
rcl
cmpsb
enter
or
sbb
in
add
sub
sub
stos
adc
mov
push
or
sub
or
movsb
sahf
lret
test
sub
loopne
xor
inc
shrl
enter
push
adc
stos
clc
ret
andb
jbe
lret
inc
mov
sub
and
jle
push
mov
xor
ret
stos
es
in
mov
jge
push
fwait
push
int3
fistpll
mov
cmpsl
mov
inc
mov
xchg
ret
fiadds
pop
std
sub
clflush
adc
push
fcoms
mov
fcompl
xor
lea
out
data16
adcb
or
aas
into
pop
push
mov
or
add
hlt
xchg
mov
repnz
dec
filds
push
mov
dec
sub
dec
lds
xchg
fmuls
ficoms
scas
arpl
es
mov
movsl
mov
inc
pop
mov
sbb
insl
fstpl
sti
mov
shll
xor
imul
mov
xchg
aaa
cmp
ret
out
cmpsb
rcl
xchg
das
mov
cmc
adc
xchg
arpl
gs
inc
addr16
mov
pop
or
push
xor
inc
jp
push
popf
lods
xor
jl
fiadds
call
popf
fnstenv
sub
pop
push
imul
jecxz
fstl
adc
fcmovnu
push
call
or
push
iret
pusha
pop
xchg
cmp
and
filds
orl
addr16
pop
cs
and
mov
add
imul
repnz
insb
frstor
add
sbb
xchg
dec
out
addl
cmp
fdivl
cmp
je
fsts
pop
into
mov
and
loop
push
jle
mov
inc
into
popa
addr16
sbb
js
sbb
es
clc
sahf
outsl
and
imul
jg
rorl
ret
in
xchg
add
and
jno
push
ficoml
hlt
pusha
mov
add
sbb
push
dec
push
inc
mov
sbbb
pop
adc
cmp
add
pop
dec
mov
fbld
sub
add
push
cltd
int
jecxz
adc
sub
lds
jl
in
in
jno
shl
mov
lods
repnz
add
rol
dec
inc
lock
pop
mov
and
mov
push
adc
int
mov
popf
stos
mov
imul
jmp
fimull
mov
in
fwait
out
or
movsb
mov
mov
jb
adc
jno
adc
sti
cmpsb
adc
push
test
xchg
xor
std
sub
ret
icebp
ret
adc
mov
adc
cmc
rol
mov
sti
xchg
outsl
outsb
mov
mov
out
mov
mov
pop
or
hlt
add
test
and
dec
insb
cltd
push
fnsave
mov
add
in
mov
fwait
lahf
mov
mov
lahf
cmpl
add
push
jg
mov
aam
pop
lahf
pushf
jnp
out
jns
or
sub
add
inc
gs
sub
out
push
mov
push
mov
or
cmp
imul
mov
jae
mov
fisubrl
xor
movsb
fidivrl
add
call
fs
faddl
outsl
imul
mov
fiadds
clc
test
push
xchg
dec
cmp
aaa
or
push
out
push
lret
je
pusha
pop
mov
pusha
sahf
xchg
lcall
aas
jle
iret
sub
xor
scas
and
out
mov
icebp
adc
mov
mov
xlat
out
mov
mov
cmovae
xor
sbb
mov
sub
outsl
xchg
jb
popf
sti
mov
jb,pn
push
sub
and
pushf
push
js
call
jne
pop
das
lods
ljmp
cmp
in
ret
adc
pop
and
push
mov
scas
push
nop
mov
int
pop
adc
sub
lahf
andb
cmc
sbb
enter
lret
sub
out
ret
jge
shl
lods
ss
fistl
mov
repz
jne
jno
add
leave
ja
loop
adc
inc
leave
mov
add
dec
aaa
popf
cmp
loopne
and
or
ljmp
movsb
fiadds
xchg
insb
insl
sahf
push
scas
jne
dec
imul
scas
sbb
arpl
repz
sahf
lods
xchg
in
adc
cmpsl
add
popf
imul
mov
mov
pop
inc
mov
outsl
int
adcl
hlt
scas
xchg
cmp
xor
adc
mov
mov
es
in
inc
ret
mov
pop
daa
lods
orl
js
jecxz
movsb
loope
add
fistpl
pop
cmp
repz
cmpsb
pop
adc
jnp
rolb
dec
xchg
sbb
add
xchg
fsubp
sbb
mov
insb
stos
adc
sbb
inc
push
push
imul
addr16
dec
fisubs
sub
sub
pop
stos
ss
sub
and
rorb
imul
sub
jg
test
pop
mov
and
cmp
add
xchg
xlat
xchg
mov
sub
ds
add
loope
lret
sub
gs
or
lods
sub
xchg
cmc
popf
aaa
lahf
and
sbbl
cmp
mov
add
and
stos
es
inc
or
loopne
inc
mov
sub
cmp
hlt
lds
jp
movsb
add
xchg
pop
test
bound
mov
sbb
les
insb
mov
sub
movsb
push
fimull
adc
imul
push
mov
int3
lods
rcl
pop
jecxz
mov
lahf
dec
push
fcmovnbe
add
mov
push
pop
insl
pop
iret
pusha
mov
mov
mov
repnz
addr16
cmp
loope
repz
or
jp
lret
lds
pushf
pop
jmp
fbstp
shrl
pop
stos
or
bnd
sbb
movsb
push
lcall
in
aad
xchg
sahf
insb
cmp
lahf
es
sbb
andb
aas
adc
cli
cmpsb
icebp
ljmp
rcll
cmovge
enter
pusha
test
out
cmpsb
fnsave
xchg
jb
mov
fbld
outsl
jecxz
add
imul
out
add
mov
pop
xchg
call
or
xchg
rdmsr
cld
testb
out
jmp
fisubrl
fs
jo
mov
leave
jns
add
push
addr16
test
jle
outsl
iret
imul
out
ljmp
xor
popa
insl
out
sbb
mov
lcall
jno
xchg
rol
mov
push
mov
sub
insl
dec
add
hlt
inc
dec
mov
lods
cmp
jg
out
or
pop
je
in
icebp
mov
roll
jo
aad
fmuls
lock
push
push
cmpsl
dec
addr16
push
lods
adc
frstor
mov
push
jns
cmp
scas
loope
xchg
fnstenv
push
inc
loopne
inc
mov
fcomi
les
push
adc
iret
out
sahf
xlat
fisttpll
jo
imul
inc
jg
fwait
xor
mov
and
fidivl
cwtl
cwtl
insl
out
jge
push
or
or
push
xor
stc
sbb
mov
enter
or
dec
mov
outsb
or
adc
inc
testb
stos
push
out
insl
imul
movsl
mov
rorl
movaps
jb
movsl
cmp
xchg
sub
popa
add
sti
pushf
add
ficoms
adcb
shlb
jge
cmp
pop
shlb
jae
popf
out
cltd
inc
ret
shll
lock
das
sub
cmc
inc
jle
xor
mov
fisubrl
push
loop
dec
jns
fdivl
pop
xor
push
lcall
or
or
add
adc
mov
fistpll
test
inc
pop
stos
xor
insb
dec
into
lret
inc
mov
imul
cltd
push
xchg
aaa
push
and
stc
mov
fwait
sbb
scas
pusha
rolb
mov
inc
sub
insl
or
xchg
fistpll
fidivrs
ss
adc
sub
fdivl
pop
mov
test
out
in
out
or
stos
xor
iret
loopne
xor
mov
btc
push
cwtl
add
rcll
adcb
add
jne
cmp
and
pop
cmc
psubsb
lea
ror
mov
ret
fildll
pop
jns
push
outsb
sbbb
ret
mov
rep
adc
out
adcb
les
jecxz
cld
mov
push
xor
inc
repnz
dec
xor
mov
inc
ficoml
sub
pop
push
js
adc
xor
xor
movsl
push
mov
sub
mov
sub
mov
xlat
inc
js
fcomip
into
stc
ficoms
pop
outsl
cmpsl
mov
jmp
xchg
int
into
adc
and
pop
addb
in
lods
ret
inc
xchg
das
repnz
popa
jl
push
sub
cmpsl
mov
jp
xchg
aaa
push
jp
add
jns
add
xchg
pop
loopne
mov
dec
or
dec
xchg
fwait
test
cltd
into
xor
paddq
bound
xchg
jns
fidivl
cs
data16
add
jnp
fwait
rcrb
push
xchg
dec
adc
xlat
inc
je
inc
fistl
scas
out
cmp
fwait
es
mov
push
andb
das
push
andl
loop
mov
stc
stos
scas
and
push
dec
lret
imul
in
loopne
xchg
insl
dec
fistps
jo
xor
jnp
repnz
mov
das
fnsave
stos
or
daa
xchg
out
jmp
xchg
jno
cmp
pop
sbb
fisubs
mov
jb
aaa
inc
push
mov
sub
inc
rcrl
ret
in
fcomp
loope
movsl
xor
fisubl
mov
testl
out
pop
iret
and
push
lock
mov
lcall
subb
lret
addr16
adc
jae
sbb
test
mov
push
jno
les
enter
fdivs
sub
stos
and
add
sbb
add
shr
pop
cmpb
cmp
stos
jo
push
xchg
jl
aad
dec
ds
and
mov
inc
mov
inc
jle
jmp
cmc
ja
and
nop
push
leave
or
adc
xlat
pop
dec
xchg
clc
aad
cmp
or
int3
jo
dec
lock
push
add
nop
push
inc
mov
loope
xor
sahf
addl
lahf
xchg
aas
dec
pop
loop
adc
pusha
sub
or
and
mov
imul
enter
lods
popa
mov
adc
sbb
rolb
and
push
pusha
pop
inc
fst
adc
add
stc
cmp
jg
imul
and
clc
mov
mov
int3
popf
push
sub
push
std
lods
rolb
outsl
push
mov
fisubs
cmp
mov
cld
add
jg
aad
cld
pop
cmc
xchg
dec
jb
loop
mov
mov
xchg
fwait
xchg
lret
mov
mov
call
out
out
es
push
jno
loop
outsl
popa
cmp
into
mov
xor
inc
cs
outsl
adc
xchg
or
or
cmp
imull
test
repnz
adc
add
cld
iret
in
jmp
mov
std
jg
lcall
das
pop
popf
dec
btr
outsb
sub
test
mov
test
or
mov
aas
mov
inc
mov
dec
adc
push
jge
inc
roll
mulb
mov
push
dec
in
aam
pop
xor
adc
sbb
dec
xor
or
and
shrl
lods
shlb
or
fnclex
mov
mov
out
in
mov
xor
sbb
push
dec
ja
pop
mov
mov
jp
and
adc
xchg
pop
pop
lea
sti
in
shll
mov
pop
push
jo
ror
into
sub
or
cmp
std
cmp
inc
insl
in
aas
jp
cmp
cmpsb
dec
cmpsl
sub
fs
mov
sub
inc
pop
popl
mov
sahf
inc
cld
lret
cs
sbb
loop
lods
or
sbb
lret
sub
mov
inc
cmp
idiv
push
mov
push
xchg
sarb
mov
mov
dec
mov
pop
rcrb
rcrb
add
loope
loop
jnp
xor
out
mov
jno
scas
mov
sub
inc
push
cmp
stos
and
scas
subb
lret
insl
lret
pop
cmp
test
mov
or
dec
rcll
adc
pop
mov
addr16
enter
dec
xor
dec
out
fdivrl
in
xor
sub
movsb
and
cmp
cmpsl
inc
test
xor
fsubl
mov
dec
mov
pop
rolb
cld
cld
jnp
jl
push
dec
push
mov
dec
movsb
hlt
sbb
fstl
sbb
sub
rolb
ja
das
mov
pop
xor
or
mov
shlb
ljmp
add
test
pop
or
shrl
lsl
dec
ja
mov
lea
shrb
clc
hlt
inc
jno
insb
hlt
pop
in
outsl
cmc
and
inc
jle
arpl
dec
in
and
mov
xchg
in
push
add
cs
in
add
xchg
push
fs
sub
cmp
xorl
jne
ja
cmp
adc
std
jle
pop
mov
cmp
int
pand
pop
add
and
sbb
cmpsl
ljmp
dec
leave
cld
arpl
mov
loop
xor
inc
loopne
lret
testl
enter
insb
sub
fstps
mov
rcrl
cmp
aaa
es
push
push
or
mov
incb
stos
mov
in
xchg
sbb
add
xchg
icebp
adc
adc
push
daa
dec
lcall
sub
mov
lcall
leave
add
fwait
pop
jp
js
xchg
pop
add
loopne
adc
push
push
lret
lahf
das
jns
push
inc
jmp
adcb
mov
movsl
test
pop
jns
mov
dec
test
push
in
adc
in
jns,pt
xchg
fidivl
pop
push
mov
fcmovnb
rcrl
inc
push
jmp
call
roll
test
xor
mov
push
repz
out
xor
nop
stos
add
xchg
daa
out
or
pusha
rcll
mov
mov
xchg
fcoml
push
test
cwtl
sbb
cmp
mov
mov
add
adc
inc
in
and
pop
ret
arpl
daa
aad
dec
mov
cs
mov
nop
iret
out
dec
mov
fwait
mov
dec
les
or
cmp
rorb
sbb
mov
int
jle
inc
xchg
bnd
sar
shrl
fldl
movb
push
in
aaa
dec
push
xchg
dec
cwtl
daa
imul
mov
mov
and
cmc
andl
addr16
mov
cltd
or
or
loope
pop
or
push
int
icebp
cbtw
inc
cmp
stc
shl
pusha
sbb
nop
sbb
daa
stos
xorl
push
enter
test
lahf
stos
cmpb
loop
insl
sub
lret
outsl
enter
or
jae
sbbl
fsubrs
dec
and
dec
in
test
mov
inc
int
roll
sbb
xchg
lahf
inc
xchg
cld
daa
add
cmp
add
insw
or
rep
adc
in
dec
sub
mov
movsl
xor
cmp
inc
popa
sub
jge
fwait
push
mov
rorb
adc
negb
das
dec
std
and
dec
mov
in
das
and
dec
xlat
aad
mov
xor
testl
cmovne
inc
cmp
scas
and
cld
shl
sbb
lahf
jle
xchg
outsb
xchg
cs
mov
inc
ret
aaa
adc
xlat
jl
lds
cmpsb
push
push
mov
insb
cmp
rcr
inc
hlt
test
jecxz
sub
aas
rolb
push
iret
pop
lcall
jge
inc
bound
aad
pusha
dec
and
repnz
mov
rclb
jmp
mov
repnz
out
push
sub
lock
scas
mov
ret
nop
add
mov
pop
xchg
inc
in
nop
pop
out
imul
subl
mov
and
cwtl
inc
clc
rcrl
cmp
push
xor
icebp
call
xchg
lret
mov
dec
push
mov
xchg
sbb
or
jnp
les
or
xchg
clc
es
mov
push
mov
mov
cmp
fs
mov
testb
sbb
jl
dec
jns
inc
mov
xor
divl
icebp
rcrb
sti
mov
daa
into
adc
cmp
stos
stos
negb
mov
mov
xchg
movsb
adc
sbbb
cs
dec
mov
aas
mov
sar
imul
mov
jno
inc
xchg
xchg
repnz
mov
mov
mov
rclb
mov
and
out
fdivrp
sub
cmpsb
mov
inc
jl
out
orl
or
aad
dec
aad
iret
iret
inc
std
mov
add
cmpsl
sub
push
xor
divl
dec
cmpl
mov
push
enter
stos
xlat
fsubl
xor
in
dec
cmp
push
sbb
push
test
mov
nop
inc
scas
or
out
push
mov
xchg
mov
adc
insb
jecxz
mov
sahf
pop
sti
pop
inc
add
nop
lret
dec
ret
loopne
je
mov
mov
adc
pop
inc
mov
imul
rcll
xor
cmp
cmp
push
cwtl
int3
shlb
je
les
aad
sub
ret
pop
pop
jno
jae
pop
out
icebp
movsb
enter
xor
dec
dec
xor
push
cli
stos
sti
popf
aam
dec
cmp
or
push
mov
fsubr
test
mov
push
fidivrs
ljmp
rcrl
xchg
sub
mov
test
lods
setg
dec
adc
enter
aad
lock
fcmovnb
or
mov
icebp
test
adc
shrb
jle
cmovl
movsl
inc
idivb
movsb
pop
xlat
dec
cld
push
ss
or
rolb
mov
js
pop
or
and
ss
or
cmp
sti
xor
mov
ja
sbb
loopne
in
sub
sub
dec
xor
mov
sbb
dec
adc
mov
xchg
out
bound
ja
in
mov
arpl
xor
imul
lds
scas
into
sbb
das
mov
pop
mov
sub
movsl
push
mull
sub
adc
das
sti
sbb
mov
lret
mov
dec
add
aaa
dec
lahf
mov
in
mov
scas
idivb
cmp
or
push
aam
cmpsb
imul
or
cli
mov
ret
fstpl
sti
pop
xchg
sbb
movl
inc
popf
out
data16
mov
adc
jl
sar
lea
mov
mov
and
adc
lods
fsubr
mov
dec
sbb
and
mov
pop
dec
inc
iret
add
repz
jno
es
cmp
xor
fs
mov
push
mov
sbb
xor
sub
dec
fcomp
mov
mov
nop
out
test
cld
add
out
add
arpl
fisubrl
or
fisubrl
jnp
adc
dec
adc
inc
ds
xchg
jl
dec
jmp
call
aaa
jg
dec
xor
arpl
scas
ljmp
mov
dec
xchg
or
push
push
imul
mov
cmp
mov
in
dec
lahf
xchg
xchg
pusha
cli
daa
adc
push
call
mov
mov
mov
xor
mov
int
sbb
mov
dec
jbe
test
fs
mov
dec
test
sub
add
cmpsl
test
push
or
push
mov
movsl
lock
scas
pop
mov
push
and
xchg
imul
iret
cld
cmp
sbb
fmul
and
inc
dec
push
and
dec
mov
mov
mov
sbb
sbbb
sub
dec
cmpsl
inc
lea
pop
push
sti
add
scas
loopne
bound
fwait
repnz
inc
cmpl
outsb
sub
jbe
jp
pusha
jbe
and
cli
adc
repnz
out
jmp
and
rorl
mov
push
popf
sahf
push
push
jg
cmp
popf
test
mov
ror
in
fnsave
sbb
dec
jg
push
inc
sahf
sbb
adc
mov
and
fdivs
fimull
test
lea
jns
sahf
and
insb
leave
sbb
jbe
outsl
mov
notb
add
jp
pop
pop
inc
push
and
shr
mov
into
cmp
fists
iret
push
and
ror
add
scas
xor
ret
cmc
daa
mov
int3
pusha
mov
enter
sbb
loopne
imul
jge
gs
cmp
scas
mov
stos
push
push
pop
push
outsb
stos
xorb
adc
fsubrp
sbb
xchg
mov
jne
dec
mov
xchg
fs
in
dec
jne
dec
pop
xchg
mov
cs
sbb
pop
out
pusha
cmpsl
push
pop
inc
mov
push
test
jge
out
jns
jae
xor
fs
xor
push
int3
push
loopne
mov
into
mov
and
mov
sarb
push
out
std
mov
and
stos
mov
shll
int3
decl
sti
addl
or
scas
rol
rol
jmp
outsb
fsubs
pop
or
lcall
mov
pushf
imul
jp,pt
push
xchg
test
cmp
mov
leave
cld
pop
lods
ret
clc
add
sub
daa
mov
mov
sbb
jo
mov
and
add
pop
or
xchg
xor
out
mov
lds
lods
pop
clc
jmp
mov
movsl
bound
mov
dec
std
xor
addr16
cli
jle
adc
das
adc
sub
push
add
pop
xor
pop
imul
cmp
sbb
test
fisttpl
aaa
push
inc
cmpsl
add
cs
sarl
adc
je
and
adc
fdivrs
cld
iret
or
xchg
rcll
cli
lock
cltd
iret
test
xor
lds
sbb
divl
addl
inc
xlat
in
sbb
in
adc
jne
stos
pop
push
negl
outsl
mov
mov
mov
xorl
xor
outsl
icebp
ss
cltd
push
inc
mov
fldcw
loop
push
xor
cmp
sub
adc
out
dec
pop
add
jmp
jnp
mov
daa
mov
sahf
sarb
in
xor
xchg
cmp
xchg
adc
push
and
lret
inc
jge
pop
lds
pop
je
dec
mov
loop
cmp
adc
ds
and
or
aad
mov
rcr
movsb
lret
adc
pop
xor
inc
les
stc
jo
xchg
jecxz
ficompl
push
cld
addr16
out
into
pop
daa
mov
pusha
daa
or
mov
xchg
fists
and
add
cmc
sahf
fwait
push
adc
lods
mov
push
pop
push
xor
lahf
mov
outsb
aam
mov
jge
cs
adc
inc
or
les
std
cmp
addb
loop
lcall
fwait
cmp
jg
in
cmp
orl
outsb
pop
bnd
pusha
xchg
flds
cmpsl
mov
js
mov
mov
aad
out
jb
incl
aaa
and
fidivrs
fmuls
push
xlat
hlt
fimull
fwait
xorl
rcr
mov
aad
add
xchg
inc
pop
add
ja
sbb
xchg
mov
ljmp
cmp
mov
xchg
nop
mov
inc
mov
adc
adc
imul
push
fwait
mov
or
cmp
mov
test
dec
sbb
jl
mov
xchg
and
out
in
ds
in
dec
stc
xlat
adc
mov
xchg
std
scas
rcrl
mov
mov
andb
mov
and
test
hlt
push
lcall
pop
ret
shll
push
push
inc
bound
sbb
fnstsw
lret
inc
sbb
dec
negb
lods
dec
lret
mov
inc
or
in
call
sbb
cmp
jno
pop
mov
pusha
inc
out
jo
cli
aad
inc
jl
sub
mov
daa
jp
pop
dec
subl
xlat
and
rcll
xor
cld
or
repz
mov
sub
loope
mov
fstl
push
or
cmp
push
ja
dec
jl
push
dec
push
xchg
out
out
and
jle
jp
enter
mov
repnz
std
clc
fisubl
test
push
xchg
sub
int3
movsl
leave
mov
insl
xchg
mov
mov
lods
hlt
sti
fstpt
mov
iret
in
sbb
pushf
lret
xor
push
je
sub
cmpsl
sub
dec
les
cmc
xchg
push
or
insl
lods
andl
outsb
out
push
test
ret
jecxz
outsl
mov
xor
jbe
lds
xorb
cmpsl
adc
ds
jle
add
outsl
or
fcomps
jmp
dec
adc
add
sub
adc
xor
sar
mov
mov
mov
clc
inc
inc
xchg
cmpsb
nop
int3
bound
pop
xor
fs
out
pusha
loope
cli
cmp
mov
pusha
shlb
jbe
es
push
push
xor
lcall
mov
rorl
or
xor
daa
add
push
lds
outsl
fstl
lahf
out
call
iret
xchg
inc
out
aam
jle
inc
cs
pop
cmp
or
xor
mov
testl
pop
adc
mov
cmp
jae
iret
inc
jle
cltd
popa
fisubs
outsb
adc
aam
add
push
xor
xchg
adc
pop
out
icebp
aam
xor
unpcklps
mov
mov
das
mov
pusha
sbb
lods
jbe
pop
les
xchg
push
cld
aam
das
test
bound
inc
jbe
cmpsl
dec
loop
cmp
and
fldcw
sbb
into
cmp
imul
lock
jg
rcrl
jecxz
fs
mov
push
aas
push
ss
andb
scas
rcl
out
daa
pop
adc
fsubs
mov
mov
dec
sub
das
mov
inc
scas
adc
mov
push
mov
ja
sbb
cmpsb
jne
inc
push
lock
or
loope
mov
stos
rcrl
xchg
cmp
mov
into
hlt
sbb
out
outsb
and
cmpl
std
jbe
sbb
ja
aas
and
lock
ret
jg
lods
pop
mov
inc
push
cmp
pop
adc
or
or
sub
xlat
xchg
add
mov
mov
inc
data16
xchg
and
xchg
pop
jns
adc
outsb
add
and
cltd
fst
mov
xchg
out
push
repnz
popf
outsb
mov
xor
frstor
sbb
pusha
jp
jo
incl
outsb
lret
inc
nop
mov
dec
hlt
sahf
mov
lods
pop
fists
inc
ja
lret
and
sahf
push
pushf
int3
add
xchg
sub
xchg
jbe
or
cltd
xchg
pop
push
push
xchg
xchg
push
xor
cld
loope
mov
enter
daa
dec
repnz
jl
mov
mov
mov
add
mov
mov
jg
mov
push
lahf
mov
adc
cmp
ret
test
in
fwait
sbb
add
jb
push
jle
or
mov
cltd
pop
shrl
mov
js
push
mov
icebp
mov
dec
lods
adc
sub
fbld
xchg
add
xchg
mov
xchg
or
test
cmp
dec
push
repz
das
push
mov
lods
cmp
cmpsl
mulb
mov
pop
push
mov
lahf
pop
sbb
fidivl
push
xchg
xor
sub
dec
loop
in
xchg
push
xchg
insb
orb
leave
jle
add
stc
and
mov
sti
sbb
push
movsl
in
fcomi
sbb
or
xor
aas
xor
mov
pop
adc
sub
cmp
and
cmc
mov
out
lock
and
dec
aad
cld
cmpl
cmp
push
jmp
dec
jp
add
repz
add
pop
push
aas
add
lcall
sbbl
dec
stos
jo
xchg
mov
scas
adc
daa
bound
mov
mov
mov
add
fsubrl
and
pop
mov
inc
loopne
out
pop
iret
lods
cmp
mov
outsb
fisubrl
mov
add
xchg
int
rorb
mov
mov
and
rorb
sbb
jg
dec
jno
pop
rorb
cltd
movsb
je
lods
mov
pop
shlb
jmp
add
jle
and
sete
dec
movsb
stos
rorl
adc
inc
fwait
pusha
lret
sub
fstpl
sahf
jnp
cmp
fbstp
into
mov
sbb
filds
data16
inc
outsb
mov
push
fsubrs
xlat
or
lock
loope
testb
jno
and
aam
adc
cmpsl
out
sbb
aaa
sbb
inc
jnp
rcrl
out
sbb
mov
push
adc
sbb
repnz
push
push
xchg
js
adc
cmp
push
push
out
test
add
hlt
jle
fcoml
cld
mov
test
mov
xor
les
aam
cmp
outsl
xchg
or
aad
mov
mov
repz
test
sub
mov
inc
call
cmp
inc
cmp
mov
dec
pop
dec
xor
repnz
loop
bound
or
popa
ret
pop
push
cmp
xor
dec
push
sbb
daa
stc
sbb
sub
ror
imul
leave
and
repz
ret
xor
gs
inc
jns
and
cmp
cmp
adc
jecxz
insb
enter
sahf
imul
sub
in
dec
int3
popf
xlat
cmp
add
mov
negb
push
xchg
jp
jl
fsts
repz
shll
in
sbb
dec
scas
inc
divb
addr16
mov
pop
adc
and
cmpsb
push
cmp
cmpsb
jle
cltd
mull
lods
dec
adc
shl
cwtl
push
insb
adc
repnz
mov
outsb
shrb
fidivrl
adcl
inc
das
sti
sahf
jns
mov
add
imul
orb
lods
jmp
insb
fwait
icebp
cmpsl
jbe
xchg
pop
and
test
push
rclb
idivb
lock
and
inc
ljmp
insl
clc
push
or
std
aad
pop
mov
dec
xor
xor
or
sub
sti
xor
repnz
push
add
xchg
movl
call
add
fs
mov
inc
inc
mov
pusha
in
xorl
call
inc
mull
jo
xor
push
or
outsb
jmp
jmp
push
cli
ljmp
nop
aad
lret
fadd
int
dec
mov
jle
imul
pop
mov
xchg
outsb
jl
sub
adc
pop
in
scas
jl
pop
pop
mov
and
idivl
add
add
fld
hlt
xor
mov
imul
mov
in
xchg
and
pop
movsl
incb
je
pusha
lock
in
pop
loope
inc
inc
popf
int3
clc
stos
lret
cmpsl
push
lea
xchg
and
mov
das
out
cs
push
jg
add
mov
clc
aaa
clc
mov
jmp
in
sti
aaa
vfmsubadd231pd
pop
sar
movsb
in
shrl
cmp
xor
xor
mov
nop
dec
cmc
jge
scas
test
cmpsw
pop
pop
xor
pop
push
inc
lcall
jno
sarb
repnz
add
pop
iret
adc
mov
adc
pop
add
lds
or
js
aam
out
popf
and
pop
sbb
stos
out
xor
cmp
or
lcall
push
adc
jns
lods
and
or
xchg
jl
xchg
aaa
outsl
dec
and
push
jmp
shll
mov
nop
int3
mov
mov
rcrl
and
out
inc
push
cmp
sub
or
cmp
cld
mov
insl
mov
cmpsb
jecxz
outsb
xor
dec
inc
mov
rcrl
aam
call
xor
mov
pop
repz
mov
push
int
gs
cmp
stc
cmp
imul
ret
aaa
push
hlt
cmp
xor
adc
jge
mov
mov
dec
movsb
add
mov
mov
rorb
enter
inc
cmp
push
and
pop
movsl
js
fisubl
or
mov
add
and
int3
std
cld
imul
sbb
arpl
sub
fdivs
sbb
das
es
les
push
mov
ret
repnz
push
mov
mov
cmp
mov
scas
jge
loope
outsb
aam
jmp
mov
mov
pop
insl
xchg
repz
pop
mov
loop
orb
adc
int3
pop
and
sbb
or
cwtl
enter
sub
dec
push
and
and
repz
lret
ret
xchg
add
pop
stos
add
cld
hlt
add
inc
push
popf
xchg
lret
in
les
pop
sbb
fnstenv
cltd
mov
out
cltd
xchg
in
inc
cmp
mov
jle
les
adc
orl
mov
pop
inc
or
and
and
rcrb
lcall
xchg
mov
insb
leave
xor
sub
repnz
cmp
nop
xor
ret
movsb
adc
adc
lea
sub
pop
mov
bnd
xchg
pop
mov
pushl
jp
jle
adc
scas
je
jae
or
cmpsb
sub
lcall
int
scas
lret
inc
pop
fs
push
sub
cld
jecxz
xchg
add
mov
add
jmp
ja
shl
mov
in
cwtl
xor
sbb
pop
lock
push
mov
mov
sbb
sub
ret
aas
xor
lock
cmp
pop
sbb
fstpl
mov
mov
addr16
mov
out
sahf
dec
push
loop
out
in
sti
dec
or
jp
adc
lods
push
out
stos
push
and
sub
sbb
outsl
imul
loop
adc
add
cmp
in
pop
cmp
sub
mov
cmp
mov
add
lret
xchg
pop
dec
js
hlt
push
ret
dec
push
add
lds
aaa
push
sbb
push
push
fmull
js
push
leave
pop
loop
dec
aas
and
mov
mov
daa
inc
loope
out
and
cmpsb
xchg
fwait
jecxz
mov
or
repnz
nop
fistpl
nop
xchg
jne
xlat
cmp
fdivrs
mov
mov
out
rcrl
or
sbb
in
push
sub
mov
fisttpll
xchg
in
scas
dec
and
dec
lret
cli
and
sub
pop
mov
cmp
mov
roll
lods
xlat
xchg
mov
repz
pop
gs
ficompl
xor
jb
lcall
dec
mov
adc
fisubs
mov
xchg
ljmp
mov
lret
aas
ret
jae
movsb
add
mov
jae
mov
push
dec
cmp
ficomps
jl
inc
lock
mov
fsubrl
push
xor
sbb
sti
xchg
mov
and
and
idivl
sub
fidivs
mov
sub
cmp
out
dec
repz
inc
stos
fistl
xor
faddl
std
sub
das
jge
aaa
add
ffreep
pop
mov
orb
push
push
cmpsl
subb
mov
mov
aas
nop
pusha
inc
mov
mov
and
js
rolb
push
dec
or
cltd
jle
inc
shrl
sbb
sbb
inc
or
xor
mov
xor
insb
cmp
mov
jns
mov
sbb
mov
sub
add
lcall
adc
xor
fs
cmc
adc
xchg
mov
sarb
push
push
or
dec
lea
pushf
out
dec
push
sub
dec
cld
in
cmp
mov
xchg
stc
cli
and
lock
test
rcll
fnstcw
add
cs
cmp
xchg
dec
and
cmp
dec
xchg
cld
dec
in
mov
lods
sbb
popf
xor
and
add
test
shr
loopne
imul
dec
inc
mov
jo
add
mov
xchg
je
imull
std
jge
sbb
or
inc
cmpsl
mov
ja
daa
push
adc
jg
pusha
xchg
cmp
cmc
and
cmp
xchg
in
or
filds
xor
sar
jmp
data16
push
movsb
jle
addr16
lea
adc
sbb
imul
dec
add
jl
scas
in
pop
cmpsl
add
xchg
inc
or
test
ja
pushf
adc
data16
inc
ret
cltd
jmp
loop
xchg
push
out
subb
ret
imul
or
inc
iret
fdiv
pop
call
xor
repnz
js
sti
pop
pushf
scas
pop
enter
dec
shll
ljmp
popa
jp
mov
jb
pop
xchg
lods
leave
push
mov
adc
mov
in
push
imul
scas
arpl
push
mov
add
repnz
aad
lea
push
mov
jnp
and
jmp
inc
mov
dec
lods
mov
fimull
mov
mov
sahf
icebp
push
or
mov
in
lods
mov
cmp
and
rep
aas
adc
lds
push
push
addl
xor
xor
movsl
sub
mov
test
add
mov
movsb
sub
or
dec
sti
fwait
insl
ret
push
in
pushf
stos
into
xor
es
sub
popa
cmp
insb
xchg
rolb
jmp
sbb
rcr
popa
mov
mov
adc
cld
push
movsb
adc
mov
lods
jle
lahf
cmp
js
pop
pop
dec
cmp
sbb
or
cmp
cmp
sahf
cmc
insl
nop
fwait
inc
mov
jb
jns
or
fs
mov
mov
loopne
mov
push
pop
and
sub
cmp
or
jg
jg
jo
in
push
jp
pop
add
mov
mov
dec
and
dec
les
sbb
in
fcmovb
xor
call
mov
mov
aad
icebp
jge
push
mov
fdivr
pop
ret
cmpl
pop
adc
cld
pop
xchg
push
sub
inc
xchg
cmp
loope
aad
in
push
xor
imul
sbb
pusha
jbe
in
mov
and
repnz
out
rcrb
test
lods
sub
pop
inc
jns
and
ret
pop
fmuls
dec
sbb
xchg
jge
pop
hlt
jg
pushf
sub
adc
inc
lods
mov
out
dec
xor
notl
or
aaa
mov
xchg
ds
mov
add
pop
xlat
ljmp
popf
push
add
stc
mov
xchg
jbe
mov
std
sahf
push
daa
jb
rcrl
mov
dec
cmp
inc
cli
divl
sbb
xchg
jo
mov
repnz
loope
stc
sbb
not
xchg
imul
lods
jecxz
push
xor
and
fisubl
sbb
dec
xchg
xor
fisubl
jmp
xor
ret
cmp
movsl
dec
lods
addb
pop
sbb
lods
sbb
xor
dec
fisubl
add
lahf
sbb
mov
push
xor
lods
and
add
cmpsl
cmpsl
je
mov
mov
inc
data16
adc
mov
lods
jno
pop
lret
cmp
mov
jl
jle
push
movsb
add
xlat
cltd
inc
popa
jbe
lcall
mov
fdivs
jb
mov
mov
inc
leave
ljmp
sub
lods
pop
lock
inc
mov
pop
xor
mov
call
cltd
push
mov
or
mov
js
fcmovnb
ds
sbb
mov
add
pop
test
xchg
fwait
sbb
and
sti
sbb
pop
call
shll
sub
add
fs
or
cs
sbb
mov
into
lock
mov
cmp
inc
inc
jbe
in
js
aad
jmp
lcall
add
xor
shll
xchg
jne
dec
movsb
add
aaa
out
aam
es
jge
push
shl
jle
pop
lahf
or
cli
bnd
sbb
cs
mov
cmp
cs
jmp
enter
mov
dec
out
sbb
fwait
xchg
dec
mov
pop
push
mov
andb
and
ret
sub
fdivrp
lret
and
or
out
in
insb
mov
or
add
mov
int
jl
push
cmp
add
xlat
outsb
addr16
flds
xor
add
fcoms
clc
xchg
dec
mov
cmp
push
add
out
lahf
mov
xor
enter
pop
std
daa
sbb
pop
add
sbb
xor
xor
cltd
movsb
xchg
sub
or
pop
or
enter
sbb
add
nop
push
cmp
ret
mov
out
shrl
inc
sub
std
mov
test
inc
je
sub
xchg
adc
inc
pop
movsl
dec
and
adc
fwait
push
push
leave
repz
jbe
mov
mov
icebp
insl
ss
or
xchg
cmp
cmc
and
push
mov
fstps
sub
push
sahf
pop
lret
mov
mov
sub
xchg
ja
cli
inc
dec
loop
fwait
sub
testb
cwtl
xor
or
jge
rep
loop
jle
push
add
jge
jmp
cltd
jecxz
and
mov
mov
push
ret
sbb
dec
shr
sub
ret
fcoms
push
sub
xchg
adc
mov
mov
gs
xchg
sub
cmp
nop
rcrb
add
or
paddusb
clc
std
push
mov
and
lds
pextrw
mov
imul
cmp
sub
dec
aam
pop
inc
mov
icebp
mov
ljmp
into
xchg
lods
outsb
les
cmp
mov
inc
repz
pop
aam
mov
mov
pop
loope
pop
arpl
pushw
cmp
jg
repz
mov
daa
cmc
ret
xchg
jge
aas
mov
xor
test
notb
mov
lea
cld
in
rcrl
push
outsl
sbb
rcll
mov
mov
aas
ljmp
mov
bound
aad
xchg
loope
pop
dec
adc
mov
or
lahf
insl
mov
jb
jg
mov
xchg
inc
das
into
xor
push
mov
sbb
jnp
jecxz
popa
pop
or
adc
push
lock
lds
adc
and
push
mov
int
test
jl
xchg
cwtl
pusha
jnp
inc
mov
cmp
fiadds
loop
mov
cmpsl
pusha
xchg
jmp
and
jns
jns
mov
pushf
mov
pop
das
pop
cmp
sub
jo
imul
inc
fstp
cmpsb
std
inc
clc
addr16
mov
xor
mov
scas
test
pop
repz
fidivl
pusha
sbb
inc
push
pop
push
mov
ret
pop
xor
push
fldenv
mov
xlat
push
ss
repz
nopl
mov
leave
push
in
inc
int
dec
stos
out
insb
pushf
fisubs
xor
pop
js
insl
aas
dec
push
cmp
cmpsl
popf
or
jle
inc
shrl
scas
lods
add
lret
mov
dec
xchg
test
inc
lock
popl
sbb
js
into
sahf
xor
testl
aas
mov
shrl
inc
sbb
into
mov
sub
jbe
add
or
jmp
cltd
das
mov
aam
fiaddl
loopne
xchg
sbb
in
mov
popf
push
mov
mov
loope
sub
lret
test
and
or
bound
push
stos
dec
push
ror
pop
add
inc
sub
fwait
cld
adc
cmc
push
jne
sar
xchg
andw
loope
lahf
sbb
imul
popf
add
filds
add
mov
push
mov
std
pop
int3
pop
jmp
pop
pop
xor
scas
or
jne
loopne
xor
in
idiv
les
and
ja
cmp
test
lea
mov
dec
movsl
sub
fs
push
cmpsl
and
cmpsl
add
push
inc
mov
aam
aas
mov
push
add
or
mov
xchg
cs
imull
loopne
stc
je
test
mov
gs
inc
rcrl
and
notl
fisubs
and
in
out
bnd
loop
in
mov
mov
xchg
test
arpl
adc
push
orl
imul
jp
xor
lret
cmp
adc
movsb
adc
fs
push
outsb
xchg
test
ja
mov
inc
aas
repz
les
adc
inc
stos
jmp
addr16
movsl
sbb
out
fwait
imul
cld
sbb
adc
mov
imul
push
jecxz
rcl
xor
xchg
pop
stos
mov
mov
lock
stc
sub
mov
imul
insl
adc
sbb
cltd
and
std
das
dec
ss
fimull
pop
icebp
adc
cmpsl
sub
aaa
int3
mov
shl
mov
xor
into
fwait
ret
cmpsb
push
fs
ds
jge
xor
in
mov
int
push
jnp
push
pop
xor
mov
pop
lods
lahf
xchg
repnz
adc
fwait
bound
xchg
fcom
adc
push
inc
jmp
les
and
fdivs
cltd
cmpsl
xor
or
stos
sbb
push
adc
mov
stos
mov
cmp
aam
lock
es
sub
fs
popa
jb
lods
out
out
sbb
jae
xlat
and
mov
addr16
rorb
das
xor
movsb
and
fmul
mov
mov
cmp
shrl
insb
mov
lret
jp
aas
or
loopne
xor
pushf
test
icebp
jno
in
aam
loope
xor
mov
xlat
inc
mov
xchg
inc
mov
push
xchg
fisttps
mov
add
push
xlat
mov
xor
in
jbe
stos
sbb
pop
dec
xchg
lock
lods
in
xchg
pushf
addr16
dec
cmp
xchg
clc
into
or
popf
and
arpl
xlat
jmp
xor
xchg
ds
and
and
test
lret
cmp
mov
dec
jne
shll
hlt
and
add
xchg
lods
ss
cmp
and
jle
ret
push
push
pop
popa
insb
aas
mov
dec
mov
sarl
xor
lods
sub
xrelease
sub
test
loopne
lahf
xchg
icebp
jo
xchg
mov
hlt
lret
test
xlat
sbb
lret
std
cmp
repnz
xchg
popa
sub
or
mov
or
popf
insl
ds
dec
sbb
xor
cmp
inc
stos
mov
lret
mov
movsb
cltd
inc
icebp
insb
leavew
pop
xorb
mov
or
loopne
add
das
mov
cmp
lret
addl
dec
outsb
jmp
jo
sbb
push
pop
gs
fsts
push
add
mov
rep
mov
push
sahf
sar
sahf
cld
js
mov
leave
rcll
cmp
sbb
ret
ss
lret
adc
cs
pop
ljmp
imul
jns
fsubrl
stos
jmp
xor
mov
cld
and
mov
mov
jmp
lret
ja
add
fldenv
cmp
imul
jp
leave
ret
lds
jle
mov
call
mov
pop
lret
mov
push
popa
dec
add
inc
call
scas
repnz
or
xchg
pop
pop
mov
repnz
sub
push
xor
xchg
and
bound
sub
fwait
xchg
lds
mov
xor
into
inc
movsl
aad
leave
pusha
push
ret
test
mov
xchg
cmc
sub
icebp
mov
test
loope
daa
lea
dec
sub
mov
cmp
xor
sub
push
bswap
sbb
ds
and
xor
mov
push
out
repnz
xor
inc
lcall
lret
cmpsb
adc
adc
lock
add
loop
stos
mov
mov
imul
pop
ficoms
ja
rorb
ret
popa
arpl
cmp
jp
cwtl
xor
mov
jmp
lret
adc
mov
int
dec
xchg
ret
cmpl
ja
push
cld
pop
neg
pop
stc
stc
add
jo
jne
fstpt
pop
jb
cmp
ret
add
or
cmc
cmp
and
pop
jl
mov
movsl
test
push
imul
or
push
jnp
lahf
xchg
loop
sub
mov
push
pop
mov
imul
lock
mov
outsb
and
add
std
add
daa
outsb
xlat
fildll
aas
shll
pop
mov
test
dec
push
inc
push
add
jp
xchg
ret
xor
into
rep
jle
ja
mov
out
int
sahf
add
jnp
cs
add
arpl
lahf
push
das
jl
lock
jno
dec
xchg
in
or
cltd
sbb
mov
enter
add
inc
and
xchg
push
xor
dec
mov
jg
fcomps
fmuls
lods
xor
movsb
in
stos
test
lods
sti
aam
and
cs
call
and
push
ljmp
in
cmp
jae
lock
int
ja
mov
adc
xor
or
pushf
jo
je
jl
and
mov
inc
stc
ds
mov
inc
addr16
fadd
inc
pop
or
call
popf
dec
xor
pop
loop
push
lock
mov
mov
jl
into
pop
pop
lret
cmc
sub
sbb
cmp
jb
push
leave
lret
push
mov
mov
scas
mov
cmp
xor
dec
jmp
cltd
fisubs
push
jmp
cmpb
cmc
and
xchg
repnz
test
jnp
mov
sbb
nop
jno
fstps
jmp
mov
dec
stos
test
mov
shrl
dec
shrb
jmp
ja
mov
pop
sbb
cmp
cld
jecxz
fcmove
xchg
and
mov
jns
push
dec
and
pop
roll
sti
aam
sbb
inc
jmp
push
cmp
ret
addr16
mov
decb
mulb
bound
ds
in
mov
insb
ss
ret
mov
scas
pushf
xor
mov
lret
int
push
xchg
jbe
out
jmp
push
je
test
hlt
enter
push
and
addl
mov
lea
dec
pop
push
xor
mov
jo
popf
pop
mov
lret
fs
scas
adc
mov
cmp
inc
inc
jne
mov
pop
popa
mov
cmpsl
sbbl
lods
testl
adc
aam
je
js
xlat
jb
js
sbb
adc
push
movsl
mov
ss
cmp
cmp
flds
mov
test
add
orb
lea
dec
clc
testb
dec
xlat
rcr
ret
outsl
shlb
sub
add
pusha
cmp
shll
push
movsb
loopne
pop
mov
popf
push
mov
cli
rcr
cs
arpl
idivl
and
in
aas
adc
sub
rcll
add
mul
mov
adc
inc
sarb
sub
movsl
pop
pushf
sahf
aaa
sbb
ds
pop
int3
xor
push
pop
or
popf
sbb
dec
push
call
mov
add
movsl
xor
mov
mov
dec
pop
jmp
mov
inc
inc
in
dec
jne
pop
je
mov
cwtl
cli
pop
outsl
rcrb
rorl
dec
leave
mov
lds
pop
xor
sub
lsl
cmpl
fs
out
inc
pop
gs
add
test
mov
into
pop
clc
arpl
ret
nop
adc
mull
push
push
iret
loopne
in
call
xor
pusha
add
push
ds
cmpsl
outsl
ja
mov
sub
xchg
mov
lea
dec
insb
sub
mov
dec
loopne
dec
jge
aas
inc
mov
xor
cmp
jle
movsb
mov
fisttpl
mov
in
fwait
dec
jmp
jbe
mov
int
stc
push
lods
and
add
int
mov
inc
mov
adc
mov
loop
mov
loope
data16
xor
das
iret
movl
clc
sub
pop
clc
call
lret
pushl
sahf
ljmp
lret
mov
imul
adcb
imul
xor
sub
mov
mov
cmc
out
es
ss
dec
shll
int3
and
push
xchg
cmp
sub
clc
mov
push
bound
sti
push
push
cmp
and
add
sbb
fistpll
cmpsl
fprem
outsl
in
mov
sub
jge
sbb
dec
negl
or
pop
mov
in
repnz
cmp
mov
imul
imul
xor
inc
mov
aam
mov
cmp
or
scas
test
mov
jg
cmpsb
hlt
or
adc
sbb
addr16
add
mov
inc
push
in
pop
sahf
dec
and
and
mov
xchg
mov
mov
data16
aad
push
inc
scas
inc
repnz
and
lret
movsb
mov
cld
sub
sub
add
fisubs
and
fstpt
xchg
out
roll
std
cld
out
and
mov
test
fldenv
mov
push
push
push
lcall
popa
fmul
push
mov
fldl
dec
je
sub
mov
ss
lcall
sbb
adc
sub
mov
push
xor
jae
mov
scas
in
test
push
aaa
dec
lods
and
xchg
into
pop
inc
lcall
or
daa
mov
or
lds
mov
movsl
stc
mov
add
mov
pop
out
mov
push
ret
add
xchg
pop
jmp
xchg
xor
cltd
dec
add
mov
xchg
out
inc
mov
mov
test
in
xlat
fists
std
imull
out
lcall
lds
lods
aaa
js
push
jbe
xor
jae
push
daa
stos
cmc
add
jno
add
pop
push
lahf
test
and
pusha
mov
xlat
mov
cmp
stos
stos
gs
or
push
inc
xor
leave
in
or
and
add
shrl
shlb
inc
loopne
inc
dec
loope
shrl
cwtl
add
cmpsl
sbb
adc
mov
mov
jg
test
xlat
rcr
jbe
jns
mov
insb
inc
dec
addr16
mov
push
and
mov
call
and
sarb
lods
pusha
and
loopne
sbb
cld
jl
mov
or
bound
add
leave
mov
mov
mov
push
fidivl
lcall
mov
mov
pop
dec
std
jno
fnstcw
mov
adc
movsb
add
adc
cltd
scas
xchg
ret
cmp
lock
xor
mov
in
push
repz
xor
popf
mov
pop
stc
push
mov
fstpl
xchg
xor
jmp
nop
xor
leave
je
movsb
fistl
xor
loopne
xor
xchg
orl
add
out
mov
pushf
outsb
jnp
rcrb
inc
mov
lods
out
mov
push
std
pop
mov
xor
js
add
cmpb
in
push
fistps
sbb
stc
aaa
daa
xor
or
dec
ja
gs
loop
cmp
jae
jge
iret
cs
or
insb
rorl
imul
pop
rcrl
arpl
push
daa
out
cmp
cli
mov
idiv
cmp
jno
sbb
or
or
fistpll
xchg
ljmp
jmp
insl
dec
loop
out
add
fs
and
add
loop
hlt
xchg
aad
adc
ja
inc
leave
pushf
or
fwait
mov
ljmp
aam
fsts
scas
adc
dec
mov
sarl
add
repz
add
xchg
add
mov
mov
add
add
movsb
mov
add
adc
dec
lea
cmp
je
fs
jb
loopne
in
in
pop
cmp
xor
add
imul
cmpsb
repnz
and
fcoms
dec
jp
jbe
jo
xchg
js
es
out
inc
in
jge
xchg
out
into
sbb
mov
add
mov
sub
sbb
cld
sarb
sbb
roll
add
push
add
rolb
push
out
stos
loopne
stos
das
and
ja
mov
pop
clc
sub
and
push
loope
add
call
test
and
xor
lods
scas
outsl
push
sbb
dec
cs
fists
jns
xchg
sti
push
sub
in
cmc
hlt
loopne
dec
pusha
xchg
xchg
lock
mov
jge
in
adc
or
iret
dec
mov
lret
add
inc
loopne
jmp
cmp
jne
aas
fisubrl
xchg
and
out
cmp
clc
mov
dec
cli
hlt
ds
rcrb
rclb
pop
cltd
mov
xlat
mov
mov
stos
pop
test
rcll
aas
inc
xor
push
in
loop
mov
pop
aad
push
mov
xchg
pop
adc
and
jge
mov
stc
cs
movsl
and
test
and
scas
test
xchg
jp
mov
std
sahf
outsl
xor
fmull
fisubs
mov
lods
jo
inc
lret
jl
les
dec
pop
push
imul
gs
ds
into
cld
test
cmp
push
or
push
ficomps
add
lret
fisubs
xlat
dec
dec
jns
repnz
psubw
push
les
add
sarl
lret
sub
stos
test
out
scas
movsl
xor
hlt
add
ret
mov
aas
std
cwtl
sbb
xor
cs
lret
sbb
insl
ret
popf
sub
loop
sbbb
popa
lods
pop
add
lock
cwtl
cmpsl
in
stos
mov
es
gs
int3
xorb
sbb
mov
sub
repnz
in
xchg
inc
loopne
dec
pop
stos
pop
cmp
sub
jge
stos
sbb
inc
fsubp
sahf
mov
push
mov
inc
loopne
push
jnp
sub
test
loope
addl
or
sub
xor
mov
push
jecxz
inc
push
jb
cmc
push
add
sbbb
shrl
lds
jno
jg
mov
cmp
fsubs
std
dec
out
pusha
jo
xchg
sarb
fwait
insl
in
into
push
pop
push
out
mov
pop
adcb
sub
jbe
rorb
add
inc
out
and
xchg
mov
aaa
pop
les
and
mov
in
adc
sub
insb
sahf
mov
sbb
aaa
jbe
fsts
push
mov
out
ficompl
sbb
mov
outsl
push
or
push
mov
cs
lcall
hlt
addl
into
enter
dec
call
jno
push
in
or
shrl
sbb
cs
shrb
bound
xor
jle
pandn
daa
adc
push
mov
les
mov
leave
xlat
pop
mov
out
sbb
cmp
push
nop
inc
add
es
jo
add
fidivs
ds
repz
jnp
lea
daa
testb
int
popa
fmul
fwait
cld
and
xchg
aas
test
pop
add
inc
scas
cmpsb
cld
sbb
pop
mov
mov
orl
enter
mov
incb
push
roll
pushw
lods
mov
mov
or
sub
sub
test
sbb
jns
xor
repz
push
dec
hlt
jmp
push
pop
mov
lods
test
lret
jmp
rclb
xchg
rolb
mov
movsb
jae
ret
ret
sbb
jecxz
dec
mov
es
mov
mov
ds
lods
xchg
rclb
movsl
mov
pop
xchg
ds
sbb
xorl
fisttpl
and
movsl
fstpt
test
mov
cmp
lret
inc
addr16
out
test
xchg
jg
nop
or
mov
in
jecxz
mov
jmp
cmp
sbb
cld
cltd
fnstcw
mov
lds
mov
mov
lahf
pop
jl
pop
jcxz
and
push
mov
loopne
fldt
jmp
sbb
mov
mov
inc
fs
je
sbb
xor
sub
neg
sub
scas
jp
mov
sar
test
inc
scas
out
adc
cmc
lock
loopne
sub
gs
std
outsb
shlb
pushf
lahf
add
inc
pop
cmpl
fimuls
leave
mov
ja
les
xor
xor
les
rclb
arpl
pop
fsubrs
sub
test
test
fcompl
pop
mov
adc
cmp
mov
call
int3
lock
lods
lret
addl
es
mov
ret
pop
sbb
lea
rorl
addl
jae
stos
jmp
sub
cmp
ror
les
pop
pop
push
sarb
ss
jmp
mov
cli
xchg
jne
cmpsb
xchg
ret
pop
push
push
jmp
mov
mov
es
push
cmpsw
fwait
repnz
enter
jmp
mov
and
into
dec
cmp
jne
push
xchg
sub
shl
inc
inc
ljmp
mov
loop
scas
movsb
or
cmp
pop
xor
add
out
cmp
sub
jmp
dec
cmpsb
add
daa
iret
out
pop
xchg
or
fistpll
leave
mov
popa
insb
pop
inc
sbb
cmp
fdivrp
out
repnz
test
repz
loop
mov
and
mov
ficomps
inc
lret
jbe
inc
xchg
rcr
mov
sbb
inc
adcl
push
sbb
int
scas
adc
call
daa
inc
fs
loopne
dec
and
mov
or
ss
mov
lds
dec
xchg
pushf
sbb
int3
inc
jl
hlt
inc
repz
in
scas
scas
int
or
lret
lock
mov
cmp
mov
aas
adc
pop
roll
push
stc
movsl
push
shll
xchg
inc
jae
adcl
js
mov
fdivl
jg
and
data16
or
sbb
mov
sub
ja
jb
push
push
push
sbb
adcl
adc
mov
lock
rorb
cmp
or
cmp
sbb
int3
rolb
fisubrl
fisubrs
and
sbb
hlt
out
xor
sahf
jo
iret
notl
subl
dec
rorb
inc
cmc
jecxz
loopne
push
insb
cld
dec
pushf
subb
xchg
mov
mov
inc
cmpsb
adc
adc
sbb
cmp
in
pop
xchg
jno
leave
push
mov
jae
xor
icebp
add
mov
flds
fwait
divl
mov
push
push
mov
add
xchg
je
add
iret
mov
cmp
pop
add
pop
loopnew
xchg
mov
ret
ret
in
and
xchg
js
mov
icebp
enter
mov
jne
fs
shrl
inc
shll
iret
int3
dec
mov
jae
jecxz
ss
and
mov
mov
ss
push
mov
inc
inc
sbb
sahf
jge
test
xchg
int3
out
enter
notb
mov
lea
dec
mov
mov
mov
dec
imul
in
push
push
test
cwtl
xchg
jle
decl
shll
psllw
mov
mov
loope
in
dec
mov
scas
test
iret
in
add
dec
lods
jge
cltd
jg
cltd
arpl
jg
arpl
pop
inc
xchg
mov
add
adc
jle
xor
mov
ss
data16
mul
lcall
repnz
fst
les
jl
add
mov
xor
shlb
adc
movb
test
push
xor
sub
ss
pushl
jp
hlt
xor
das
jg
test
cmp
loope
mov
fs
gs
mov
int
xchg
cltd
hlt
jns
add
test
cs
mov
rcrb
add
ret
xor
sahf
aas
mov
push
xor
stc
xchg
cmp
mov
sub
cmp
scas
or
je
lcall
leave
fisttpl
das
fisubs
jnp
jmp
jae
pop
xlat
jbe
or
rcll
or
mov
and
pusha
mov
data16
aad
popa
insl
or
js
mov
test
sbb
sti
pop
fisttps
add
lods
mov
nop
call
fistpll
push
aas
loop
mov
inc
adc
sarl
mov
mov
pop
stc
pusha
push
bound
xchg
faddp
cmpsb
or
sbb
sarb
xchg
push
mov
push
cmp
loopne
fnstenv
aaa
stos
sbb
cmp
cltd
fists
enter
aam
adc
fwait
mov
hlt
mov
cmc
scas
adcb
out
mov
incl
mov
mov
rcl
inc
adc
outsl
jnp,pt
popa
sbb
stos
adc
fisubrs
sub
out
fucomp
jo
lock
push
xchg
mov
test
out
mov
xchg
fisttpll
arpl
into
fbld
sarb
outsl
adc
mov
inc
pushf
sub
cmp
je
cmpsl
mov
dec
movsl
insl
movsl
aas
jmp
loopne
mov
push
cltd
inc
lret
xor
mov
xchg
xor
or
sbb
fwait
xlat
test
out
mov
arpl
ds
icebp
cs
mov
xchg
addr16
jo
in
ljmp
pop
iret
adc
xchg
mov
mov
sbb
ja
push
adc
push
mov
ret
aad
gs
dec
cmp
into
mov
loope
ja
dec
mov
push
std
leave
dec
cli
mov
and
pushf
pop
pushf
xorb
int3
and
lods
fbstp
jo
adc
jg
bnd
icebp
test
insl
std
jo
aas
xchg
imul
push
aad
pop
push
pop
test
push
sbb
cs
repnz
push
inc
and
nop
and
fcompl
lret
push
sbbb
push
mov
imul
int3
lock
add
mov
lock
insb
xor
cmp
ja
and
stos
test
daa
push
push
xlat
es
push
or
pop
sub
cmpsl
adc
inc
pushl
cs
mov
jle
rorb
and
call
ja
mov
pop
out
shlb
and
verr
lret
das
test
jge
sub
rcr
sbb
jnp
jne
std
scas
inc
loop
jl
lods
shll
pop
in
cltd
xchg
sub
les
repnz
jbe
adc
and
jne
mov
jo
sbb
idivl
insl
aam
or
mov
jp
outsb
add
jmp
sub
ss
xchg
add
daa
adc
es
std
jl
inc
inc
icebp
loope
scas
push
test
xor
cmc
lahf
enter
in
testl
sarl
jge
sub
xchg
scas
jge
dec
mov
sti
add
jbe
push
outsl
mov
test
xor
iret
sub
adc
pop
adc
in
or
inc
cli
jnp
or
sub
leave
jg
inc
cmc
insl
mov
inc
pushf
ss
shlb
mov
and
sub
lret
adcb
cmp
and
nop
cmpsb
sub
lods
dec
push
cltd
imul
adc
lock
mov
call
dec
push
adc
imul
xchg
xchg
lock
stos
mov
lahf
mov
xchg
push
push
lods
aaa
mov
add
mov
cmc
ret
mov
add
mov
jle
and
inc
lea
push
mov
sub
fucomp
scas
inc
inc
push
cmp
test
arpl
daa
xor
scas
mov
mov
jg
mov
aam
cli
scas
rclb
fnsave
lds
jmp
scas
mov
test
lods
int
sahf
jge
push
out
pop
lods
and
sub
add
sub
repnz
add
sbb
mov
mov
lds
push
int3
dec
xchg
ljmp
push
inc
adc
mov
push
adcb
mov
xchg
inc
sub
mov
test
ficompl
cli
incb
leave
sti
and
roll
cmp
sahf
adc
mov
add
divl
into
jp
pusha
idivl
sub
sahf
aaa
shlb
int
inc
imul
in
stos
push
dec
retw
loopne
lea
mov
xchg
dec
add
jge
imul
and
fisubrl
cmp
not
pushf
add
rol
xchg
out
in
adc
nop
js
mov
push
subl
jae
xor
dec
dec
popf
mov
sti
mov
hlt
jecxz
scas
jecxz
adc
gs
dec
and
cwtl
aas
push
add
cmp
jbe
mov
add
mov
fistl
arpl
dec
jl
icebp
pop
sub
push
enter
mov
push
xor
lcall
pop
cs
shll
add
in
popa
shl
test
mov
xchg
push
ja
add
rcll
and
rcll
jb
test
sub
jge
loope
lods
inc
pop
pushf
dec
ss
nop
cmc
push
mov
sub
ja
ss
addr16
mov
xchg
push
push
gs
shll
sub
or
mov
or
dec
out
dec
loopne
cmp
adc
popl
sbb
sti
enter
mov
aaa
mov
aad
lds
je
push
or
push
test
aad
fdivrl
movsl
call
aam
mov
inc
jnp
pop
fstps
lock
pop
and
sbb
xchg
in
insl
mov
aam
or
clc
or
mov
push
in
aas
insb
jb
jmp
push
xchg
pop
mov
adcl
bound
jns
decb
fsubr
test
dec
cmpsl
xchg
repz
das
and
adc
out
and
sub
aad
pop
jne
ret
jbe
pop
pop
jns
out
aas
mov
ljmp
jae
cmpsl
scas
sbb
in
push
icebp
mov
inc
inc
push
lods
out
rcrb
push
mov
fldcw
popa
in
int
cltd
xchg
fisubl
jp
sbb
pop
in
enter
cmp
fwait
add
je
cmp
or
inc
or
sbb
jle
adc
popf
mov
or
out
call
lret
cmp
fs
push
andl
aaa
xchg
or
sub
or
push
cs
leave
popf
mov
sti
loope
xchg
xchg
push
cltd
mov
stc
mov
xchg
in
aaa
and
mov
jb
call
adc
in
inc
inc
lods
std
fiaddl
mov
mov
pusha
xor
cmp
dec
push
loopne
pop
and
ss
pop
cld
sbb
xchg
and
and
loop
push
test
into
jns
and
mov
jnp
xor
sub
not
pop
int3
pushl
push
fldenv
cld
test
pusha
xchg
enter
negb
test
xchg
scas
insl
or
rcll
notb
jns
aaa
push
mov
dec
movsl
into
inc
shlb
sti
outsb
mov
sbb
push
jl
xchg
cmp
or
fcmovbe
pop
adcb
mov
dec
xchg
mov
loop
sub
bound
sti
jle
lea
jecxz
sub
adc
insl
mov
sahf
sti
psrad
imul
fs
or
fwait
adc
or
cs
cltd
jne
idiv
pop
mov
subb
pop
enter
push
icebp
or
sbb
mov
add
andb
enter
movsl
nop
xor
mov
push
fistl
rorb
aaa
mov
stos
daa
sub
cmp
vunpckhps
pop
lods
mov
scas
pop
movsl
jp
mov
mov
jae
pop
adc
mov
mov
cld
cwtl
insl
mov
inc
push
dec
bound
jp,pn
or
in
add
push
je
dec
sbb
push
pop
sbb
aas
jmp
enter
std
fldpi
or
fisttps
mov
xor
jg
ds
dec
pop
jge
aas
mov
push
pusha
stc
push
fistpll
and
rorl
test
sbb
lret
dec
jg
inc
fsubs
and
cmp
lcall
mov
faddl
lahf
mov
sub
jge
pusha
push
jecxz
and
test
fs
add
xchg
cmpsb
mov
mov
movsb
loopne
add
dec
pop
cmc
pusha
mov
add
push
sub
xchg
out
push
add
xchg
out
mov
or
out
push
xchg
dec
xor
inc
repnz
sub
add
int
ljmp
xchg
inc
faddl
test
scas
test
test
fldcw
mov
loopne
arpl
notl
popf
outsl
je
pop
shrl
sub
cmp
insl
mov
mov
sbb
out
lds
add
cmp
mov
jbe
xor
cmp
push
scas
xchg
inc
dec
jno
sar
rclb
push
int
push
jecxz
repz
xor
shr
cmp
insl
sbb
fiadds
mov
or
fimull
int
imul
orl
mov
leave
inc
jne
jle
test
bound
or
js
xchg
cli
jo
fsubrs
fs
xchg
daa
xchg
inc
shrl
data16
pop
sbb
mov
stos
xchg
dec
int3
lret
lds
dec
push
xor
test
shll
mov
mov
pop
push
fidivs
dec
push
push
idivl
pushf
loope
pop
mov
scas
pop
insb
push
stc
mov
push
adc
inc
rol
mov
test
cltd
pop
pop
xor
and
leave
imulb
push
dec
sti
mov
pop
dec
loop
mov
xchg
lea
pop
enter
mov
adc
ret
lds
push
fbstp
pop
sahf
int3
insl
data16
mov
mov
bound
fmul
mov
add
sbb
ret
xchg
sarb
leave
mov
ret
andb
or
jnp
mov
add
shll
fcompl
push
sub
mov
lret
iret
popa
jg
add
mov
xlat
fwait
cmpl
push
stos
jno
lods
pop
dec
dec
push
inc
mov
adc
jo
xchg
sarb
dec
mov
mov
movsb
inc
fwait
ja
in
sahf
xchg
xlat
add
sub
mov
and
inc
gs
aam
popf
mov
cmp
clc
aad
add
sbb
add
mov
mov
jle
inc
sarb
or
add
fdivr
sahf
jmp
push
sahf
mov
xchg
mov
lds
shrb
push
into
fs
rclb
mov
adc
pop
jmp
imull
icebp
sub
aam
pop
sub
out
fmul
jno
in
push
lcall
jb
inc
sub
xchg
addr16
mov
push
adc
outsl
stos
fwait
pop
push
cli
push
jmp
jl
sahf
hlt
xlat
ss
fwait
insl
mov
lods
pushfw
dec
fisubrs
mov
sub
mov
add
jae
mov
push
lods
fdivrs
ljmp
fidivrs
and
pop
fwait
jns
add
push
insb
icebp
iret
mov
das
testl
push
pusha
push
aaa
or
fldl
pop
fdivl
inc
pusha
add
lods
pop
int3
mov
in
pushl
stc
out
jg
xchg
jno
push
rolb
pop
sub
outsl
pusha
dec
int
iret
gs
clc
and
or
sub
sbb
out
and
adc
pop
in
push
stos
pop
fiadds
xchg
insb
dec
or
stos
push
adc
cmpl
push
add
jmp
loopne
adc
jo
insl
sti
outsb
sub
adc
js
stos
dec
xor
jl
iret
mov
mov
scas
movsb
jns
into
adcl
and
adc
stos
jge
pop
popa
add
cmc
mov
pop
mov
divl
jne
loope
push
adc
mov
fldl
mov
sub
jnp
dec
push
add
cmpsl
push
mov
test
inc
loope
ja
pop
dec
mov
movl
xorb
mov
pusha
xor
pop
xchg
adc
ljmp
xchg
and
sbb
insb
cmp
imul
adc
rol
stos
inc
cmc
cmc
sub
in
test
icebp
dec
adc
sbb
repz
fadd
pop
mov
add
jns
xchg
xchg
or
fcoml
mull
xchg
xchg
ds
pop
push
int3
jp
insb
xchg
scas
popf
lret
repz
ficomps
adc
jp
in
cmpsb
jne
adc
hlt
mov
mov
xlat
cmp
add
out
cmp
pusha
inc
scas
cli
xchg
out
pushf
out
and
je
pop
xchg
adcb
cli
in
ficoms
sub
mov
in
aaa
pop
popa
and
aad
mov
and
xorb
fimull
mov
pop
jge
cltd
scas
cltd
xor
mov
cltd
pop
dec
xchg
into
dec
test
leave
shlb
popa
les
mov
std
mov
pushf
rolb
xchg
pushf
lret
lret
xor
add
push
pop
xchg
scas
aas
lods
fisubl
cmp
js
or
push
sub
cmp
dec
clc
lcall
ss
add
adc
inc
jmp
sub
iret
add
push
lcall
sbb
sbbl
push
dec
fsubrl
adc
or
mov
xchg
shl
aam
adc
lea
jg
loopne
js
xchg
mov
subb
sub
insl
push
cmp
xchg
pop
mov
cwtl
pop
jns
xor
dec
bound
xchg
in
testl
mov
jge
fisubs
out
mov
or
fs
jl
mov
sbb
mov
inc
stos
pop
adc
add
jle
cmp
fadds
mov
fimuls
pop
push
lods
push
out
popf
push
ljmp
jg
mov
into
popf
ret
repz
fwait
or
cmp
add
bound
outsl
rorl
insl
jge
insb
sub
sbb
test
mov
ljmp
xor
sbb
dec
pop
movsl
pop
xor
push
jge
cmp
std
add
cli
sbb
jge
dec
add
ss
push
inc
dec
jle
inc
cli
add
add
insl
dec
ficoms
inc
cltd
loope
pusha
divb
repnz
pusha
xorb
gs
xchg
inc
adc
or
movsl
cltd
je
push
and
cmp
mov
mov
mov
iret
fcompl
lods
outsb
jle
data16
rcll
mov
jo
imul
in
in
lret
xchg
cmp
sti
into
ficomps
ss
push
bound
sbb
shl
xchg
cmpsl
dec
decl
and
aam
inc
fadds
pop
int3
stc
lret
insb
mov
out
aaa
cmp
sahf
sarb
and
mov
mov
das
loopne
aad
into
fistpl
mov
push
pop
es
push
xor
sbb
scas
scas
push
loopne
popf
imul
pop
repnz
std
ljmp
shll
dec
cli
std
out
outsb
push
jmp
mov
imul
cmp
cmp
add
xchg
xchg
icebp
and
push
not
dec
cmpsb
xchg
fstps
sbb
lret
and
push
ljmp
fwait
in
out
aad
lret
insb
add
xor
and
cs
push
stos
pop
in
arpl
stc
and
sbbl
fsubs
adc
inc
fistl
dec
jle
sbb
test
pop
mov
repz
mov
push
fnstenv
jbe
xor
jle
aas
push
inc
add
inc
scas
arpl
push
ud2
fistl
sahf
xchg
mov
lea
cmp
pusha
pop
les
pushf
fsubp
push
push
nop
inc
mov
ficompl
movsl
or
mov
outsb
add
inc
push
lods
ret
mov
add
xor
sub
xchg
cmpsb
inc
test
xor
xchg
iret
mov
js
ds
into
inc
popa
push
xor
sub
pop
int
pop
pop
orb
fisubrs
add
outsb
sub
cmpl
pushf
xchg
ljmp
lds
fwait
sbb
sti
sbb
leave
dec
xor
outsb
or
fwait
adc
push
and
imul
adc
int
imul
movsb
outsb
addr16
stc
jp
push
insb
mov
lods
inc
sub
mov
pop
jne
insb
stc
movsl
test
cmp
faddp
xor
xchg
lea
inc
outsb
fstl
jp
test
call
in
sbb
jae
lret
icebp
and
fs
cmpsl
inc
xchg
cmp
mov
push
pop
pop
dec
inc
mov
mov
xchg
xor
xchg
data16
add
push
pop
lea
push
pop
std
cmp
stos
loope
adc
dec
or
push
pop
cmp
fsubl
inc
jecxz
jp
mov
push
push
sbb
pop
and
push
dec
jbe
mov
sbb
lods
sub
lret
mov
adc
repnz
sbb
sub
push
stos
mov
jb
mov
xchg
xchg
mov
insb
or
add
cmp
fidivl
sbb
cmp
cwtl
jmp
dec
inc
ds
and
xor
bound
pop
jle
popa
insb
testl
gs
xor
push
test
inc
sbb
and
mov
cmp
leave
insb
lods
push
ret
mov
mov
inc
fsubrs
dec
cmpsl
or
mov
adc
ret
jne
push
sub
out
mul
jmp
xlat
lahf
rolb
sbb
test
int
mov
lahf
push
test
ficomps
add
mov
outsb
leave
inc
in
xchg
xlat
mov
test
mov
mov
in
jge
and
and
test
test
inc
stos
lods
hlt
lock
mov
jmp
xchg
repnz
dec
iret
cmp
xchg
jne
lret
xchg
and
es
mov
js
sub
popa
push
dec
daa
mov
cmp
aad
sub
cmp
sub
pop
push
or
daa
fnstcw
lret
orb
fsubs
test
rol
mov
cmp
jp
pop
adc
jle
pop
movsb
sti
jge
lcall
lret
iret
inc
imul
inc
xor
ds
inc
sub
fwait
lea
and
xor
mov
push
ds
jno
fst
mov
aad
pop
icebp
sbb
add
push
aas
or
stos
jge
sbb
jns
mov
sub
inc
push
mov
pop
add
xor
rol
mov
lret
mov
mov
push
jp
pop
xor
fstpl
sbb
mov
in
fmulp
out
pop
pop
add
adc
dec
outsl
lret
fcoms
mov
or
lea
inc
leave
xchg
sub
push
xor
mov
xchg
dec
imul
xchg
fcom
decb
xor
jno
mov
inc
jae
cld
lcall
imul
inc
cmp
pop
or
fs
mov
mov
xchg
lods
xor
mov
js
and
push
cmp
jmp
xchg
das
in
inc
adc
mov
idivb
dec
push
in
js
push
cli
add
loopne
rol
sub
pop
jmp
bound
subb
xor
movsb
sub
pop
clc
rclb
push
mov
jmp
dec
pop
sub
out
adc
mov
jmp
daa
mov
stos
pop
adc
test
shlb
mov
out
stos
jb
xor
sahf
fwait
push
ret
jecxz
pop
leave
mov
mov
and
movsl
mov
cs
rolb
scas
inc
sarl
mov
aad
sbb
jne
or
into
cmp
in
stc
mov
cmp
ror
mov
hlt
push
mov
xchg
shll
mov
push
stos
mov
shll
mov
lahf
aaa
cli
sti
xchg
lods
jbe
pop
cmp
cmp
sti
cmp
mov
mov
dec
sub
hlt
sahf
cwtl
daa
int
cli
mov
dec
rcll
mov
je
pop
push
dec
cmp
clc
inc
sub
jmp
int3
mov
lea
push
jb
jp
push
rorb
or
jb
outsl
push
pushf
push
pop
dec
cmp
sbb
pop
daa
xchg
js
adc
out
push
mov
bswap
sub
cmp
xor
pusha
clc
je
cmc
dec
jmp
loop
inc
push
movsb
arpl
lret
cwtl
adc
sbb
add
and
adc
js
jne
xchg
lcall
je
xchg
cld
rclb
jmp
add
jg
test
and
mov
pop
testb
scas
das
insb
push
jns
pushf
xchg
xchg
jae
push
jb
iret
leave
push
ljmp
fcompl
push
icebp
out
cmp
lret
addb
jl
xchg
mov
cmp
inc
cmp
sub
dec
mov
mov
cmp
pop
jg
mov
into
les
out
jmp
mov
inc
out
roll
mov
jle
cld
divb
add
xor
cmp
out
xlat
testl
cli
sahf
loopne
mov
leave
cmc
jnp
inc
add
adc
add
cmp
movsbl
pop
out
cmpsb
mov
lahf
cmpsl
mov
pop
imul
and
cmp
cltd
pop
cmp
lods
inc
jnp
sub
cmp
aam
daa
pop
out
inc
std
dec
int
repnz
cmpl
cmc
into
or
movsl
cmp
pop
sub
repnz
jb
ss
pop
or
mov
mov
hlt
inc
jp
push
bound
add
mov
cmp
cmp
les
mov
mov
add
xchg
hlt
push
aas
add
and
push
dec
ljmp
jb
mov
fistl
add
lret
xchg
sub
xor
leave
cmp
xchg
pop
pop
jae
loope
dec
fstpl
iret
inc
cmpsl
push
xchg
in
iret
xchg
stos
add
cmp
adc
mov
orl
inc
aad
fisttpll
test
fidivrl
sbb
call
aad
shrb
push
pop
aas
sti
mov
int
jmp
dec
sahf
sub
and
bound
and
add
fwait
fs
mov
jb
rcll
xchg
cs
int3
xor
pop
scas
mov
out
int3
rcrb
mov
dec
jnp
test
pop
lods
aas
mov
icebp
in
shll
lret
xor
and
adcl
sti
jg
sub
jl
in
push
pop
cli
adc
add
scas
in
push
adc
loope
in
mov
std
mov
jle
adc
lahf
sub
cmp
or
push
and
xchg
hlt
pop
mov
sahf
pusha
ljmp
idivl
in
sub
cmp
mov
push
mov
lret
arpl
cmp
movb
lods
jbe
cli
hlt
test
push
mov
sti
pop
movsb
mov
push
loopne
sti
lods
pushf
mov
and
mov
data16
pop
je
cmp
pop
shrb
xor
ja
or
divb
and
insl
adc
jo
sub
push
mov
xchg
repz
cmp
test
adcb
jno
daa
xlat
mov
imul
mov
cmp
add
xor
mov
sbb
pop
and
dec
iret
ljmp
cld
add
sub
rorl
xchg
jmp
xor
stos
xchg
mov
fdivl
cmp
arpl
dec
xor
or
sub
xchg
or
cmp
and
rclb
dec
test
rolb
insl
mov
mov
bsf
pop
cmp
xor
in
and
adc
imull
loop
pop
mov
inc
subb
cmp
push
adc
xchg
push
imul
adc
cli
rolb
mov
push
rclb
xor
test
sahf
mov
dec
stos
loopne
cmpsb
shrb
dec
or
scas
in
adc
cltd
push
cld
lds
dec
iret
push
push
push
mov
rcrl
xchg
cltd
cmpl
sbb
stos
push
mov
std
dec
adc
imul
jo
xor
cmpl
cmp
add
push
enter
sub
clc
insb
cmp
adc
push
shlb
or
xchg
push
scas
pop
xchg
sarb
dec
jle
daa
clc
repz
icebp
lea
jp
jp
imul
jmp
pop
xchg
nop
aaa
mov
out
arpl
sbb
pushf
fwait
ret
sbb
aam
dec
outsb
clc
mov
jns
mov
cmp
cmp
in
mov
adc
nop
and
pop
aas
jbe
cmpsl
pop
xchg
xchg
jge
pop
add
mov
sti
and
loope
adc
cmpsb
rcr
aaa
cld
mulb
loopne
cmp
inc
xchg
add
xor
out
fcoms
ffree
xor
jmp
mov
inc
cmpsb
adc
outsb
stc
les
dec
pop
aam
jb
dec
cmp
xchg
je
les
xchg
shrb
sar
sub
into
jae
pop
jle
in
in
sbb
xchg
test
push
inc
test
jo
cmpsl
out
and
ffree
movsb
and
jmp
stos
dec
fwait
jle
orb
stc
ss
or
adc
ja
xor
push
push
jae
lret
stos
jns
xchg
mov
dec
ficomps
sahf
cmp
in
cmp
int3
cmpsb
push
inc
adc
mov
shl
push
add
mov
std
std
call
bound
lret
mov
pop
or
loopnew
clc
ret
insl
imul
fs
xchg
jbe,pn
jne
imul
xchg
mov
lret
pop
jne
jg
push
ffreep
cmp
repz
std
xor
cli
in
popf
or
outsb
cli
pop
cltd
inc
mov
sbb
repz
std
xor
movsb
testl
or
cmp
jns
cs
jecxz
xchg
mov
enter
pop
in
test
mov
push
xor
imul
mov
aam
cs
and
popf
xchg
aad
addr16
mov
mov
add
lret
mov
add
inc
push
stos
es
dec
push
lods
jl
jp
scas
js
enter
lahf
cmp
xchg
lret
mov
in
pusha
jb
push
popa
outsl
cwtl
fiaddl
movsl
pop
jl
sub
test
add
shll
cmpsl
pop
cmp
loopne
dec
and
jb
shrl
and
xor
and
bsr
lcall
sub
sub
je
dec
shll
mov
sbb
mov
xor
out
jae
inc
jmp
es
dec
fdivrs
loopne
shlb
sahf
jmp
sub
hlt
icebp
es
fwait
bound
cld
xchg
pop
push
pop
je
aas
out
mov
adc
sub
jecxz
scas
xlat
mov
fldt
mov
dec
shlb
xor
cmp
push
jmp
lds
mov
add
loop
sbb
mov
jmp
pop
push
jnp
sub
cmpsb
lret
loop
jo
xor
les
clc
and
inc
add
cmp
shl
push
jns
jb
imul
sub
int3
cmp
jo
sbb
aam
ja
add
outsb
and
jo
push
bound
ljmp
cmp
xchg
outsl
popf
mov
dec
bound
push
pop
jbe
repz
push
cltd
lret
aam
lock
das
dec
je
iret
lahf
repz
ret
sbb
lods
stc
scas
pmullw
int3
test
lock
push
int
and
pop
test
mov
int3
inc
push
cs
inc
imul
negb
lock
jnp
inc
gs
mov
push
mov
shlb
rorb
outsb
mov
ja
sarl
add
push
push
je
jb
stos
bound
aaa
sub
jo
xlat
cli
pop
fstl
scas
fsts
dec
pop
das
mov
lods
fcmovne
cltd
out
adc
jl
or
lcall
outsl
cmp
shrl
sub
mov
xchg
dec
lea
mov
push
out
dec
aaa
orl
and
mov
dec
fisubrl
addr16
inc
in
mov
xlat
mov
inc
mov
movsl
cld
int3
cltd
in
popa
inc
ud1
lret
xlat
dec
pusha
repz
sbb
xlat
or
cwtl
out
push
fldt
lret
dec
testl
push
sub
cmp
fsqrt
in
hlt
push
movsb
push
pop
or
push
sub
iret
fistpll
fnstsw
aaa
enter
push
loope
in
ss
push
aas
or
sbb
ret
shrb
aaa
sub
jg
cmp
out
mov
mov
or
int3
jmp
std
jno
or
push
mov
shlb
call
int3
outsb
aaa
xchg
arpl
sub
fs
inc
mov
pop
mov
push
sub
gs
fiaddl
pop
xor
cmp
push
jmp
add
xchg
jo
pop
lods
out
jecxz
pop
push
push
cs
adc
jbe
cs
jmp
and
loopne
es
inc
leave
cwtl
lret
mov
jne
pusha
mov
mov
lods
jge
jl
add
sti
mov
ret
push
sbb
xor
xlat
sbb
or
loop
jbe
mov
pop
out
and
mov
xorl
lret
mov
movsb
cld
ficoml
hlt
push
leave
xchg
pop
dec
dec
sub
shrd
and
shlb
sar
pushf
aaa
popf
push
icebp
out
shll
mov
enter
mov
stc
push
outsl
mov
test
dec
test
push
lahf
pop
xchg
frstor
cli
repnz
popf
gs
je
test
xchg
lds
mov
mov
mov
pop
mov
and
into
lret
dec
mov
inc
inc
mov
fsubr
xor
fwait
mov
dec
inc
jae
sub
call
cwtl
jp
repnz
dec
or
lods
sub
repz
sti
ja
mov
pop
cmpl
push
in
mov
testl
clc
xchg
fiaddl
and
popf
iret
jns
adc
or
add
or
test
mov
inc
jmp
cmp
jbe
ljmp
test
dec
and
mov
out
sub
repz
popa
sbb
iret
psubq
out
ficomps
or
cmpsl
insl
xchg
mov
sbb
cwtl
loop
mov
ds
add
jnp
in
pop
pop
loope
lahf
jl
cli
mov
lret
cmpsl
sti
add
repnz
push
mov
and
cwtl
pop
arpl
pusha
aam
xchg
ja
daa
cmc
das
std
push
rorb
pop
add
jl
xor
xor
and
mov
lock
stos
pop
xorb
leave
mov
pop
fnsetpm(287
loopne
xlat
mov
pushf
insl
push
fists
sbb
jp
test
adc
fldenv
push
mov
pushf
es
lods
sub
mov
jg
sub
in
xchg
jno
push
jg
and
pop
daa
mov
cmc
scas
jno
inc
mov
imul
in
mov
movl
out
repz
das
cmp
mov
gs
fadd
xor
mov
push
sub
stos
rolb
mov
outsb
dec
xchg
inc
mov
xchg
jl
cltd
dec
scas
xchg
dec
xor
mov
arpl
in
cmpsl
lcall
hlt
push
mov
xchg
stc
rcrb
pop
aam
les
pop
mov
shll
add
sbb
movsl
mov
cmpsb
sub
inc
adc
nop
scas
out
std
inc
cmc
mov
frndint
sbb
leave
xchg
lock
stc
outsb
pop
cmpsl
mov
ret
push
lcall
jae
cltd
push
pushf
addr16
shlb
sub
push
jle
clc
daa
mov
mov
movsb
mov
mov
sub
mov
scas
ret
sbb
xchg
je
sarl
insb
shrl
outsb
jp
in
mov
fs
enter
out
hlt
jg
cmpsl
sti
push
shlb
fwait
cmp
imull
or
xchg
das
jbe
sbb
daa
lds
lret
pop
jns
lret
sahf
test
mov
loopne
int
shrb
jnp
loopne
jmp
mov
sub
mov
adc
mov
mov
lds
mov
pop
or
into
jae
dec
push
add
mov
pop
jo
jbe
mov
daa
adc
jno
repnz
fmull
lods
dec
in
aam
aam
je
cltd
fisubrs
push
ljmp
shrl
scas
sbb
mov
or
and
mov
push
pusha
in
aad
imul
inc
sti
call
jbe
jb
mov
pop
das
sbb
mov
decb
lods
xchg
ljmp
jge
pop
mov
into
ds
je
pop
sahf
pop
andb
mov
imul
aas
inc
xor
inc
xchg
loope
sbb
pop
mov
pop
movsb
loope
movsb
loop
and
jns
add
sbb
pop
xorb
inc
hlt
aam
adc
sbb
sub
mov
cmpsb
adc
ja
cmc
pop
lahf
and
inc
mov
cwtl
mov
jae
sbb
and
das
js
icebp
xor
mov
dec
cwtl
scas
arpl
push
insl
in
outsl
ss
test
movsb
xchg
je
lcall
sub
mov
push
adc
dec
fwait
js
jns
arpl
xchg
mov
into
mov
out
cld
pop
fsubrl
dec
dec
sbb
mov
insl
push
xchg
pop
outsb
fisubs
or
out
fldenv
in
and
movsb
addr16
hlt
push
lock
pop
dec
xchg
xor
mov
dec
jnp
rcrb
xor
andl
add
ja
xchg
mov
pop
fnstcw
and
xor
mov
push
daa
js
jg
push
test
mov
fs
fs
and
iret
sbb
aaa
fbld
add
cld
dec
cli
pop
lcall
mov
xchg
mov
inc
mov
mov
mov
mov
ds
outsb
and
dec
adc
addr16
movsl
icebp
or
shll
loop
dec
and
sarb
add
stos
testl
xchg
daa
jne
scas
xchg
stc
pushf
pop
jecxz
xchg
aam
xchg
pop
fcoms
popa
push
mov
test
jmp
in
pop
cmp
and
add
cmp
xchg
dec
test
mov
inc
ja
jp
push
pop
add
add
out
jno
pop
pushf
jnp
ljmp
add
xor
lock
aaa
push
and
cld
fidivrs
lahf
mov
mov
push
xchg
mov
aad
xchg
mov
in
mov
push
jl
mov
loopne
cwtl
push
in
mov
mov
pop
testb
mov
jae
inc
in
and
scas
cmp
mov
add
dec
mov
and
je
stc
pop
cltd
cmp
imul
jle
stos
int
inc
adc
adc
sbb
addr16
je
pushl
cli
inc
dec
push
push
pop
shll
pop
sub
push
mov
sahf
fimuls
push
je
iret
sbb
lret
popa
cmp
cmp
add
xor
xorb
fs
sti
stos
push
stc
push
sub
jmp
mov
mov
cwtl
jno
imul
adc
push
add
xchg
and
sbb
xor
dec
lahf
and
outsb
fldl
stos
dec
and
out
fstpl
mov
xor
sub
in
or
jecxz
addb
mov
lock
pop
or
push
test
dec
inc
and
int
sbb
adc
mov
stos
cmpb
lahf
xchg
cmc
or
pop
jmp
outsb
pusha
insl
hlt
or
inc
jecxz
adc
test
and
jmp
movsb
push
mov
dec
sub
into
idiv
lret
and
adc
inc
add
sbb
cld
xchg
aaa
movl
dec
icebp
je
jge
jl
sbbb
xchg
sbb
fadds
hlt
pop
xchg
in
cmp
add
or
push
notb
test
and
mov
xor
mov
nop
jmp
movsb
test
inc
adc
dec
jge
xchg
mov
pmulhw
loopne
pop
fcmovnu
mov
scas
sub
adc
outsl
jo
ss
cltd
out
xchg
and
pop
out
fwait
jp
sub
fsin
jns
sub
sbb
cli
sbb
bound
push
cmp
jl
popa
xchg
les
leave
jns
mov
and
notb
and
xchg
lcall
fcompl
int
mov
sub
adc
lds
pop
or
xchg
sub
lret
scas
mov
cmp
cmp
cwtl
and
pop
adc
add
loop
cwtl
pop
js
sub
and
pop
lock
push
insl
mov
jge
add
xchg
imulb
into
xchg
mov
fidivl
xor
in
add
lea
cwtl
jb
aam
imul
jmp
xchg
fidivrl
roll
iret
enter
mov
bound
test
mov
xlat
int
inc
rcrl
imul
adc
gs
outsl
iret
add
pop
mov
dec
add
mov
sbb
sarl
fdiv
pop
stc
ja
out
mov
scas
sbb
loop
pop
xchg
pushaw
in
dec
outsl
mov
mov
push
xchg
add
testl
sbb
mov
out
out
jle
loopne
dec
movsb
jg
mov
stos
popf
and
cmp
xchg
push
sbb
mov
xor
mov
cmp
and
inc
push
fstpl
bound
stos
repz
cmp
shrl
xor
xchg
ds
jecxz
test
lcall
add
mov
imull
xlat
dec
iret
inc
push
push
ja
xchg
ficoms
rcl
sub
add
fwait
add
cmp
stc
jp
mov
ljmp
dec
inc
inc
or
add
or
ficoml
inc
cmp
and
jge
popa
ss
push
pop
add
pop
arpl
dec
stos
xchg
and
test
sub
rcr
test
outsl
xchg
cmpsb
sbb
push
adc
lods
adc
cmp
cmpsl
iret
dec
mov
arpl
bound
xchg
or
cltd
cs
push
mov
mov
or
cltd
sarl
in
insl
shrb
loop
arpl
dec
adc
adc
andb
dec
lock
psrlq
mov
adc
fisubs
subl
inc
repnz
or
cltd
ficomps
add
inc
in
sbb
dec
ljmp
stc
lock
sub
enter
mov
lea
xlat
adc
and
and
mov
push
push
ljmp
mov
enter
jb
mov
or
and
fstpl
sbb
add
inc
mov
cmp
sbb
mov
dec
cmpsb
jns
fwait
shl
push
test
or
jo
push
cmp
push
mov
xor
sub
insl
sbb
cld
popa
and
in
inc
xor
dec
cmp
test
aaa
repnz
in
mov
insl
add
fiadds
frstor
push
rcrb
pop
add
fisttpll
rcrl
ss
test
add
dec
jb
xchg
insb
mov
lods
and
js
adc
outsl
and
sub
jae
scas
sbb
mov
or
dec
pop
adc
dec
lret
je
mov
es
cmpsl
mov
divl
adc
ret
stos
sub
dec
push
add
ja
adc
push
loope
lods
or
mov
std
in
xchg
arpl
inc
sbbl
xor
jae
dec
dec
push
popa
jnp
das
cmp
into
push
out
insb
mov
dec
pop
xor
adcl
dec
lds
mov
jle
movsb
inc
iret
adc
repnz
or
fwait
stc
pop
mov
into
xor
push
mov
nop
out
stos
cmpsb
add
xchg
data16
lods
in
jg
dec
mov
pop
inc
in
xlat
and
pop
xchg
sbb
dec
dec
lods
adc
sbb
jo
out
mov
out
aad
cli
cmpb
int3
scas
mov
xor
mov
into
rorb
mov
imul
cs
aam
inc
jno
add
loope
mov
xlat
adc
add
stc
fistpll
jb
jg
sub
sub
cmp
imul
or
mov
mov
push
cmp
mov
cld
jge
dec
loop
jmp
test
push
int
adcl
les
hlt
rcl
stc
fistpll
lret
sbb
push
add
mov
lret
and
jnp
xor
inc
xchg
jge
cmpsb
sbb
sub
or
orb
jle
loope
mov
ret
and
push
jo
scas
loope
lds
mov
loop
cmpsb
inc
jge
into
or
enter
inc
mov
mov
out
ror
loopne
sti
add
mov
lahf
fsubrl
insb
jbe
vphaddbq
jmp
jl
adc
mov
add
mov
or
sbb
test
mov
test
call
jg
jl
mov
inc
adc
lea
and
ja
mov
and
in
pop
or
adc
hlt
xchg
fs
arpl
xchg
addr16
pop
out
or
fnsave
mov
jae
lock
loopne
shlb
jb
or
mov
test
sub
cmp
jns
je
inc
mov
ja
lea
sub
jmp
lock
inc
iret
fwait
inc
push
je
orb
scas
push
push
in
leave
push
in
sub
mov
mov
jae
fnstenv
adc
addb
js
sbb
cmp
mov
add
filds
xchg
add
sub
push
outsl
insb
repz
push
add
xor
and
cmp
sub
in
ja
enter
pop
lret
jmp
fdivl
out
ja
fdivr
nop
dec
in
popa
sub
sbb
fcmove
sbb
pcmpgtw
or
jne
adc
cld
loopne
sti
mov
add
js
inc
xchg
jmp
movsb
xor
jge
pop
xor
rcr
rorl
mov
inc
cmp
cmp
mov
pop
sbb
jmp
dec
pop
cmpsl
in
cmc
imul
push
mov
fwait
jbe
mov
sti
dec
push
and
fsubr
int
mov
xor
or
push
adcl
std
cmpsl
mov
loope
mov
sub
push
aam
mov
sbb
adc
xchg
cltd
push
fcmovb
outsb
arpl
lcall
pop
jge
sbb
and
lds
inc
mov
pop
adc
xlat
jge
jne
mov
test
jle
shll
xchg
jae
scas
addr16
movsb
dec
fnsave
or
pop
sub
adc
sti
xor
or
scas
mov
dec
xchg
mov
and
add
sbb
das
shl
push
js
sbb
add
test
adcb
mov
jg
and
cld
pop
and
leave
stc
add
dec
lret
xor
icebp
mov
xor
adc
test
addl
push
push
cmc
pop
inc
sbb
xor
andl
mov
adc
in
sbb
imul
or
rorl
jg,pt
mov
repz
aam
jae
mov
dec
jmp
cmp
jbe
pop
mov
lcall
rcrb
cli
int
lods
aas
filds
ret
ja
cmp
icebp
jmp
lea
std
loope
insl
sarl
inc
push
imul
in
adc
and
andl
mov
mov
mov
test
pop
xor
call
loope
jle
orl
leave
lock
pusha
jno
mov
xchg
pop
mov
mov
dec
pop
cs
mov
stos
sbb
call
les
cmc
cmp
test
fisttps
aad
sbb
aam
sbb
inc
ret
jno
dec
or
xor
stos
and
outsl
dec
jo
ljmp
mov
icebp
mov
mov
jno
xchg
lea
fildll
mov
ret
adc
popf
stos
sub
mov
xor
inc
jle
mov
pop
pop
push
push
add
insb
lret
pusha
scas
addr16
mov
das
cmp
jmp
arpl
push
popf
pusha
loopne
in
nop
sub
and
pushf
mul
sbbb
rcl
daa
xchg
stc
incb
repz
lock
iret
pop
xchg
dec
mov
and
dec
inc
adc
adc
push
push
pandn
fwait
xlat
cmp
scas
popa
addr16
mov
cmp
mov
xchg
shll
cmp
shll
jnp
jae
xchg
and
divl
mov
push
pop
push
or
int
dec
pop
adc
int
xor
inc
mov
bound
sarl
scas
and
mov
cld
mov
rolb
xchg
xchg
dec
pop
adc
loopne
mov
and
bound
in
sbb
xor
push
mulb
mov
adc
ja
mov
outsl
in
xor
and
lcall
insb
cld
int3
cmp
call
jecxz
inc
jmp
mov
sub
dec
mov
mov
out
aaa
add
or
adc
xchg
insb
and
or
sbb
jge,pt
or
push
xchg
hlt
enter
cmp
lds
imull
dec
xlat
dec
psllw
sbb
push
xchg
ret
push
or
push
test
xchg
aas
lahf
imul
mov
jns
leave
icebp
rcr
push
push
sahf
subl
add
inc
imul
cmp
inc
and
jne
adc
adcb
or
jmp
jnp
test
out
adc
ret
pop
cmp
pop
mov
xchg
mov
test
xlat
add
loopne
xchg
fistpl
pop
mov
push
xchg
adc
add
scas
mov
fs
int3
lahf
mov
dec
outsl
ror
dec
sbb
mov
or
sub
int
lret
test
hlt
jbe
adc
loope
mov
cmc
or
cmpsb
cmp
into
mov
xchg
out
add
push
imul
xchg
mov
pop
fcoml
jg
push
cmp
fdivrs
and
ja
popa
push
imul
xor
cli
div
mov
shll
cli
mov
testl
mov
mov
push
xchg
data16
sub
ror
jns
xchg
push
popf
mov
les
pop
mov
popf
cmp
add
mov
ljmp
fldcw
push
shrb
jae
aad
shl
jle
fdivr
scas
jle
icebp
out
les
or
cmp
jle
lcall
inc
pusha
push
movsb
mov
jae
je
xchg
cmc
mov
mov
or
xchg
jmp
cwtl
test
ds
rorl
out
sbb
inc
mov
ss
xchg
sbb
ds
xchg
mov
mov
clc
and
push
push
loope
outsl
ret
add
pusha
push
popf
dec
or
jo
movsl
mov
cmpsl
out
sbb
ljmp
add
or
arpl
or
cmp
cwtl
mov
aas
adc
pop
and
mov
jns
jae
push
fimull
dec
ret
loop
icebp
out
mov
inc
xorl
ret
push
loopne
outsb
xchg
inc
dec
sub
push
mov
jno
xor
insl
add
cmp
xchg
sarb
xor
add
negl
sbb
mov
push
fcmovne
and
pop
cltd
int3
sahf
xchg
xor
jmp
jmp
inc
movsb
je
andb
or
jge
push
shll
pop
popf
sbb
jg
push
cltd
mov
xor
in
fcomi
push
add
mov
add
cmp
movb
ret
mov
cld
movsb
inc
sahf
ror
cltd
call
and
sub
jnp
xchg
jle
pop
loope
cmp
xor
nop
jns
mov
fistpll
or
sbbl
mov
arpl
push
cwtl
jb
loope
dec
inc
test
stos
clc
scas
sub
addr16
test
lea
in
adc
cmp
fldt
mov
sbbb
int3
mov
xchg
cld
testl
xor
xchg
lret
test
in
inc
pusha
push
icebp
mov
push
sub
fsub
add
push
imul
lods
shrl
fdivr
repz
push
jne
ds
mov
popf
cmp
ret
testb
movsl
mov
lock
rcl
fcmovu
in
int
or
cs
hlt
cmp
mov
into
outsl
mov
lahf
and
and
jns
ds
ss
fldenv
mov
cwtl
jg
dec
sahf
aam
jnp
bound
inc
mov
cmpsl
mov
cmpsl
enter
jb
sbb
xchg
jo
pop
adc
mov
mov
dec
pushf
xor
pusha
cwtl
int3
movb
sbb
imul
outsl
into
jecxz
mov
repnz
xor
jmp
push
xor
or
sub
shll
fdivrl
push
cmp
add
xchg
jmp
xchg
jge
fidivl
sbb
dec
arpl
pop
pop
rolb
push
in
push
mov
stos
sahf
hlt
aad
mov
lea
stos
pop
xor
sbb
mov
dec
clc
clc
mov
cmp
mov
sbb
mov
out
loop
xchg
ljmp
aas
js
mov
lcall
add
mov
push
scas
dec
or
pop
ljmp
fs
stos
in
fsubl
fwait
mov
cs
jecxz
mov
mov
out
xchg
pmullw
scas
lret
jo
sbb
sub
shrb
jge
mov
movb
pop
jecxz
icebp
std
cmpl
push
aas
ret
test
cmp
mov
stc
xchg
mov
in
test
pop
imul
pop
cmpsb
cmp
outsb
sahf
ss
jg
xchg
mov
and
cwtl
enter
mov
inc
je
cli
popf
xchg
pop
scas
or
mov
pop
pop
shll
jne
jmp
and
sbb
std
xor
test
std
es
loope
pop
xor
xor
lret
bswap
lret
shlb
cmpsl
add
adc
fwait
mov
xchg
dec
ret
test
xor
mov
push
dec
pushf
mov
add
mov
js
pop
mov
call
orb
bound
pop
jge
jecxz
push
mov
cld
mov
imul
dec
mov
xor
xchg
push
jmp
push
aas
in
mov
or
inc
cmc
add
loope
jg
mov
hlt
out
pushf
dec
leave
pop
sub
inc
cmp
aas
in
ljmp
adc
lods
fidivl
xlat
cmpsb
mov
in
push
mov
test
inc
daa
jg
xor
pop
adc
nop
lcall
jg
int
repz
push
jae
mov
loopne
push
sub
js
cmpsl
sahf
out
push
dec
sub
mov
icebp
jmp
test
mov
adc
push
enter
pop
lahf
adc
fimuls
dec
dec
jb
inc
xchg
cwtl
adc
inc
add
mov
dec
and
fdiv
pusha
movsl
jbe
lret
les
jns
xor
mov
add
into
xor
push
sub
xchg
ud2
into
popf
mov
pop
cmp
mov
stos
scas
bound
or
cmpsl
jmp
shll
pop
xchg
aam
fidivrl
xchg
xchg
mov
adcb
sub
cmp
jb
stos
inc
leave
or
sar
je
test
or
cmpsb
ret
sub
mov
ja
dec
int3
or
mov
in
sbb
clc
cmp
mov
xor
push
push
out
sub
popf
sub
shll
aas
cli
es
mov
fimull
and
fstpl
std
or
push
cmp
mov
shl
xchg
stc
sbb
dec
into
mov
jecxz
sub
add
lcall
out
rorb
mov
dec
pushf
xor
je
mov
inc
pop
dec
es
push
and
outsl
and
push
dec
lods
add
mov
mov
mov
xchg
sub
shrl
dec
lret
push
or
jge
dec
int3
lcall
test
aad
lea
mov
filds
addr16
enter
sbb
in
cltd
sub
negl
adc
lea
insl
inc
in
sbb
xor
loop
dec
mov
inc
lret
out
adc
rcrb
lcall
or
ret
clc
cmc
and
mov
aam
aad
lahf
in
das
jo
loop
ljmp
pop
lret
insl
jle
leave
and
sub
inc
dec
loopne
cmc
lods
and
repnz
mov
xchg
xchg
pop
dec
nop
jge
mov
jp
fs
sar
das
push
sub
ja
test
push
dec
adc
or
mov
sahf
inc
push
mov
dec
sbb
dec
xchg
aas
test
arpl
add
lret
lods
adc
jp
push
pop
mov
xchg
stc
imul
enter
cmp
pop
mov
or
out
hlt
sub
add
shl
push
pusha
sbbl
sbb
mov
inc
push
mov
mov
enter
mov
or
push
jmp
sbb
cmp
mov
arpl
add
dec
cmp
mov
push
lods
in
add
les
push
jge
cmpsb
es
out
cmp
xor
std
cmp
and
mov
insl
jle
mov
pop
scas
add
pop
stos
mov
dec
inc
pop
int3
std
and
aas
pop
jle
and
sbb
fcomps
fprem1
adc
lods
cmp
adc
mul
add
sub
adc
cwtl
fcomps
gs
les
pop
pushf
movsl
loope
fwait
jge
add
xchg
pop
jae
jnp
pop
or
adc
pop
mov
push
sub
es
push
sbb
test
inc
mov
scas
xchg
bound
dec
pop
pusha
movsl
ds
mov
add
fxch
sbb
mov
sbb
mull
sbbb
xchg
sahf
js
scas
xor
out
pop
push
sbb
insb
les
adcl
repnz
xchg
push
jle
mov
push
jno,pn
pusha
pop
add
sub
ret
fisubs
loop
outsb
or
movsl
lds
and
mov
shll
adc
add
dec
and
cmp
nop
out
lods
or
rcrl
roll
in
dec
fldt
cmp
out
dec
icebp
dec
sbb
cmp
or
dec
hlt
dec
jecxz
pop
add
dec
les
mov
mov
pop
xchg
filds
jno
cwtl
xchg
sub
jg
or
cmp
loop
or
sbb
push
push
popf
fsubl
lcall
inc
out
mov
jg
enter
xchg
mov
sub
std
xlat
or
inc
fcomip
sbb
cmpsb
stos
xchg
icebp
cltd
std
lahf
aam
adc
faddl
sbb
sbb
pop
inc
into
scas
addl
mov
testb
cmp
cmpsb
sahf
sub
int
repz
cmp
mov
fs
jg
mov
pop
or
and
fnstcw
in
jl
in
mov
sbb
mov
jp
sub
popf
mov
icebp
cwtl
and
clc
cmpsb
push
mov
lock
jo
and
rcrb
sub
jne
or
lods
je
in
or
push
dec
inc
ds
ljmp
stc
sbb
push
call
fs
push
pusha
sbb
fcmove
push
mov
or
sub
sub
repnz
sti
adc
sbb
fwait
inc
jnp
fdivl
loope
bound
push
sbb
aas
adc
cltd
pusha
jb
push
daa
sahf
hlt
cmpsl
cmp
icebp
cmp
inc
sbb
push
imul
mov
ljmp
inc
push
and
xchg
mov
mov
sbb
neg
js
inc
shrb
js
jecxz
dec
pop
test
call
jle
mov
push
lea
add
mov
adc
push
daa
out
sti
or
cmp
add
lret
inc
adc
push
adcb
or
out
jmp
cmp
inc
pop
rclb
movsl
testl
and
dec
dec
insl
lds
xlat
sub
repnz
out
scas
pop
mov
jno
jbe
inc
and
jne
mov
mov
mov
fwait
mov
mov
out
dec
fnclex
add
lret
mov
adcl
inc
int3
xor
stos
aad
dec
push
pop
jo
rcl
dec
sbb
xchg
xchg
jmp
dec
cmp
aas
fdiv
pop
xchg
es
pop
mov
stos
les
sub
ljmp
scas
lods
pop
or
mov
lock
aaa
jmp
testl
out
cltd
jnp
add
mov
in
enter
inc
pop
jge
in
orb
in
sub
in
fcoml
cwtl
add
cmp
mov
mov
and
into
pop
cmp
mov
or
mov
pop
add
out
shlb
and
imul
sbb
sbb
sbb
jmp
or
jo
xchg
pop
gs
lahf
in
xor
mov
cmpsl
aaa
popf
aad
out
stos
test
push
stc
jg
cmpsl
mov
pop
ja,pn
dec
and
shlb
in
out
out
xchg
jge
sbb
jge
mov
and
dec
cmp
xchg
xor
inc
dec
xor
mov
xorb
mov
mov
xchg
mov
test
jo
call
adc
aam
addl
mov
cmc
push
push
jnp
js
mov
pop
insb
jmp
sbb
mov
cmpsb
out
lret
popf
test
es
repz
push
call
pop
adc
imul
jecxz
pop
and
mov
pop
cmc
in
stos
enter
sbb
mov
das
aas
jne
sub
mov
sti
and
jno
imul
or
je
mov
in
dec
xchg
lret
push
cmp
in
xor
dec
push
add
xor
in
test
rcl
dec
mov
das
lret
imul
jle
jp
and
sub
mov
mov
mov
in
adc
inc
es
push
fisubs
loop
call
pusha
sub
sub
loopne
cmp
mov
lock
stos
cmp
mov
xorb
mov
aas
testb
xor
jmp
iret
mov
in
mov
mov
mov
push
or
fbld
jmp
je
shl
ds
inc
shrb
mov
add
fs
and
pop
out
clc
popf
push
fcomps
push
outsl
pop
call
addr16
imul
push
mov
xor
inc
inc
sub
jo
xchg
outsl
outsb
sarb
lds
repnz
mov
psrlq
add
sbb
cmpsl
xchg
mov
pushf
fbld
jns
cld
jb
stos
mov
iret
cmp
fldt
fldl
dec
gs
aaa
cmpsb
push
enter
shll
pop
daa
ret
addl
push
pusha
jmp
cmpsb
add
adc
stc
pushf
sbb
mov
mov
inc
xor
jp
mov
pop
xor
adc
dec
jp
mov
sub
test
or
xor
cmp
scas
sub
add
mov
aad
movsl
rcll
lret
pushf
fnsave
xor
mov
cmp
inc
and
xor
push
jge
inc
jg
sahf
jno
test
cmp
out
cmc
add
fbstp
mov
xlat
aam
and
xchg
aad
cld
inc
in
pop
ja
stc
push
cld
push
add
mov
pop
mov
xchg
mov
cmpsl
jecxz
mov
adc
aas
subl
lahf
ret
cld
icebp
fmulp
add
out
aas
fisubrs
push
push
cltd
xchg
jmp
mov
jnp
mov
test
dec
out
pop
popa
movsb
inc
insb
inc
vandpd
orb
popa
stc
xor
push
lock
out
mov
mov
movsb
std
xchg
sub
mov
xchg
mov
xchg
xchg
cltd
xor
sub
push
add
in
xchg
inc
sbb
outsb
xchg
fsubrl
inc
out
push
push
scas
and
push
jb
xorl
repz
xchg
sub
mov
jle
push
daa
xor
pop
dec
andl
ja
imul
cmp
fsubrl
cltd
lea
dec
mov
pop
pop
inc
mov
das
negb
xchg
push
mov
push
enter
mov
mov
jle
cld
cmp
loop
outsl
outsl
xchg
sti
add
sub
pop
into
ficoml
lret
sti
test
jecxz
enter
or
outsl
mov
repnz
adc
decb
mov
inc
out
lret
cltd
inc
pop
mov
xor
js
repz
push
sahf
cmp
pop
lock
mov
mov
xlat
cli
in
jl
loopne
adc
lds
popf
shrb
sub
ljmp
in
jecxz
cmp
push
push
add
pop
and
xor
scas
cli
clc
stos
mov
mov
stos
out
lret
push
int
ret
imul
push
stos
sbb
clc
insb
arpl
cmp
sbb
adc
decl
pop
mov
out
int
cmp
testb
gs
cmp
mov
jp
inc
add
jb
sbb
dec
mov
test
repz
xlat
add
xchg
sbb
xchg
and
jo
scas
idivb
sahf
clc
sbb
fs
sbb
inc
sub
hlt
cwtl
jcxz
sub
mov
push
push
insb
cmp
mov
imul
jo
inc
pop
mov
mov
push
xchg
add
mov
xor
dec
test
jne
push
mov
add
mov
pop
aam
sbb
xchg
inc
imul
aas
cmp
ret
jns
notb
xchg
push
push
mov
aad
cs
lcall
and
lcall
icebp
and
sbb
shr
xchg
lds
mov
dec
inc
or
sbb
xchg
mov
jecxz,pn
shl
mov
pop
into
test
scas
ja
lea
adc
icebp
jns
fldcw
ss
imul
ja
mov
cmc
stc
aaa
rcll
pop
cmp
stos
add
repnz
dec
push
or
lahf
jbe
adc
pop
jne
lret
sub
sahf
js
jns
enter
add
clc
xor
leave
xchg
lret
or
mov
mov
in
stc
or
aam
notl
mov
mov
hlt
cmpsb
jno
push
ljmp
xchg
popf
xchg
and
jne
sti
jp
out
loopne
pop
in
stos
xor
ret
in
out
rcrl
xchg
repz
sbb
add
movb
add
inc
fldenv
repnz
ret
xor
mov
xchg
fcoml
or
outsl
mov
sahf
and
mov
out
push
dec
pop
scas
and
add
fwait
mov
scas
insb
hlt
ret
and
mov
pusha
jns
push
movsl
test
lcall
add
add
cli
cli
dec
jg
out
rcrb
jae
outsl
jns
dec
das
adc
rcrb
cld
mov
jne
in
add
push
mov
pop
dec
ret
push
ja
sub
loop
mov
sub
push
ss
push
rorb
add
insl
add
push
pop
test
popf
dec
cs
cmp
out
cmp
orb
cmp
fs
pushf
xor
aam
test
testb
xchg
jae
sub
pop
xor
dec
cld
pushf
add
sahf
imul
out
push
packuswb
or
fdecstp
or
int3
mov
fwait
mov
roll
pushf
aam
push
dec
or
xor
and
mov
pop
mov
fwait
mov
xor
lods
movntps
mov
mov
lock
loop
lahf
ret
jecxz
imul
jl
icebp
xor
fildl
cmp
or
ficoms
jbe
inc
rcll
ficompl
xchg
pop
xor
jp
outsb
lahf
mov
out
xor
iret
mov
insb
mov
das
push
jo
sub
push
push
in
rorb
xchg
lret
dec
mov
rol
lds
xor
js
jno
outsb
rol
push
mov
das
je
ljmp
lahf
mov
dec
sub
ljmp
xchg
fcmovnu
in
fstpl
int3
pop
mov
jbe
arpl
inc
cli
inc
lods
xor
xor
in
add
and
jae
sub
lcall
sub
adcl
mov
mov
mov
dec
add
ret
sbb
dec
mov
cmc
xchg
mov
jne
in
scas
jecxz
adc
imul
inc
fisubs
and
and
add
lcall
test
cli
popa
andb
imul
and
cld
pushf
mov
lods
xlat
xor
sub
imul
lahf
push
aaa
xor
icebp
mov
pop
rorb
mov
std
xor
movl
pop
mov
mov
xchg
adc
adc
insb
push
int3
mov
inc
cmpsl
pop
icebp
push
test
imul
cmp
adc
adc
call
add
outsb
xor
xchg
jmp
mov
mov
jns
incl
adc
push
loopne
imul
fldl
add
aam
mov
call
mov
arpl
hlt
pop
mov
pop
fmull
in
xchg
push
cmp
cmpsb
inc
push
mov
jne
sbb
ds
pop
dec
loope
addb
out
or
xor
pop
xchg
sub
cs
push
fldl
jbe
mov
sub
sbbb
and
lock
ds
jl
jecxz
scas
movsl
sbb
add
jb
push
fucomip
out
call
loop
xchg
mov
adc
hlt
cmp
add
in
pop
int3
cmp
dec
outsb
xorb
mov
xor
out
addr16
cs
icebp
addb
clc
pop
insb
sti
loop
lock
je
das
test
insl
push
in
mov
call
dec
xorb
or
sti
into
in
sub
shll
es
mov
adc
jbe
test
dec
mov
pop
cmp
sbb
cmp
jmp
daa
iret
rolb
push
mov
stos
mov
out
adc
pop
inc
bound
aam
ljmp
aad
add
mov
push
or
addr16
xchg
add
xor
and
shlb
sbb
ret
stos
xchg
adc
in
xorb
call
call
in
xchg
das
push
inc
push
outsl
add
outsb
bnd
jno
mov
pushf
scas
cs
stos
in
mov
mov
mov
movq
or
or
add
jp
cmp
lea
cmp
gs
cmp
ds
push
lcall
stc
cltd
loope
in
push
mov
mov
xchg
xchg
pop
mov
lea
sub
pushf
popf
or
in
inc
inc
sub
pushf
stc
pusha
popf
push
enter
jo
xor
sbb
push
push
idiv
cwtl
pop
scas
ret
sti
mov
and
xchg
faddp
jmp
test
push
push
out
inc
fadds
loopne
test
gs
mov
ljmp
cmpsb
in
lds
cmpsw
popf
cmp
inc
pop
test
cwtl
je
clc
jae
jne
rcll
cs
pop
inc
shll
scas
stos
push
cmp
sub
cwtl
mov
jl
xchg
lcall
inc
add
and
fcmovnb
adc
das
and
or
sbb
xchg
mov
mov
mov
push
bound
rcll
fsub
mov
xlat
add
rolb
dec
gs
mov
mov
mov
mov
ret
ret
ljmp
fiadds
les
xchg
add
addr16
sbb
cmp
mov
es
add
jle
in
in
inc
sbbb
ja
in
js
cmp
int
mov
ret
or
arpl
mov
dec
loope
mov
xor
mov
add
jbe
test
sub
imul
cs
in
std
fdivl
inc
sbb
dec
insb
sub
xor
cmp
jp
adc
or
movsl
sbb
jno
and
pop
cmp
cmp
pop
sti
icebp
shlb
aam
pop
jg
lds
lock
loop
or
sub
pusha
add
sbb
mov
push
lret
push
test
dec
push
movsl
pop
xchg
push
stc
out
ljmp
into
mov
add
sub
out
inc
je
jge
fiaddl
adc
sbb
cmpsl
fucomip
pusha
sbb
pop
mov
pop
xchg
out
cmp
cmp
jo
fmull
leave
mov
cmp
cmpsl
jns
push
test
dec
mov
int
enter
les
lahf
aad
sti
jecxz
mov
das
jmp
dec
mov
loope
xchg
dec
mov
pop
shll
adc
sbb
pop
shrl
push
divb
stos
cld
dec
or
and
into
xlat
inc
shlb
adc
shlb
jnp
stos
out
xchg
push
jl
aad
xor
push
pusha
push
mov
add
sub
incb
mov
sbb
xchg
clc
add
movlps
cmpsb
push
incl
out
mov
lcall
lock
cld
mov
jp
testb
lgs
mov
mov
xchg
cmp
call
xor
xchg
scas
faddp
sarb
dec
push
and
hlt
mov
xchg
cmpsl
fisttps
sub
push
cwtl
sbb
inc
sbb
pop
jae
test
mul
mov
lret
std
xor
mov
mov
cld
cmp
mov
stc
out
and
mov
scas
pop
in
cmp
jle
ljmp
scas
pusha
push
and
pusha
xchg
adc
inc
outsb
dec
lea
lret
in
push
mov
shlb
roll
sub
lods
push
jo
rorb
jl
sub
jle
xchg
adc
cmp
xchg
inc
movl
xchg
fiadds
inc
mov
cld
push
jmp
xor
and
mov
rcrb
mov
fucom
or
add
cmp
icebp
xchg
std
stos
sbb
dec
std
dec
or
movsl
les
in
in
jge
dec
or
cmp
cmc
lret
xorb
sbb
add
mov
mov
cld
insl
mov
pop
iret
inc
or
xchg
lock
sub
daa
pop
loope
lock
dec
jns
imulb
clc
or
inc
jne
imul
xchg
and
jge
iret
pop
add
lahf
cmpsb
inc
inc
out
sub
lcall
jb
ja
mov
shrl
shlb
mov
repz
lock
dec
fcomps
call
sbb
movsl
xorb
in
int
xor
jecxz
and
movsb
int3
adc
push
insb
lods
loopne
imul
hlt
and
aad
call
sub
push
aaa
pop
add
sub
jl
pushf
sub
mov
dec
test
loope
icebp
test
push
scas
sbb
push
push
cmpb
add
xchg
or
loopne
js
clc
inc
adcb
mov
sbb
fildl
mov
popa
jge
fwait
lea
iret
aam
inc
enter
sub
sbb
jmp
xchg
jle
mov
push
mov
cmp
mov
mov
xchg
xchg
repnz
and
xchg
xchg
aaa
pusha
movsl
lahf
aaa
jl
icebp
fbstp
adc
inc
les
enter
pop
movhlps
sbb
pusha
adc
mov
pop
mov
push
dec
sarb
pop
insb
frstpm(287
nop
inc
jbe
cld
fsubr
ffreep
cmp
es
pop
jns
jb
xchg
rcll
add
jmp
jecxz
fdivr
mov
xchg
leave
daa
cmp
push
fisubrl
ja
pop
sti
fwait
lds
mov
and
xor
push
xorl
dec
mov
jge
xchg
xlat
movsb
push
jmp
jecxz
rol
or
divl
imul
push
cmp
sub
pop
xor
cmp
push
sbb
pop
fwait
out
in
out
or
xorb
fadds
pop
mov
scas
mov
hlt
dec
jne
mov
in
roll
lcall
adc
xchg
cmpl
pusha
mov
in
inc
dec
and
fstpl
call
leave
add
push
cs
cmp
cmc
xchg
ljmp
inc
pop
pop
leave
fwait
cmpsl
cli
pop
js
sbb
leave
xor
pop
test
cmpsb
mov
out
pop
xchg
pop
sbb
daa
mov
mov
mov
jge
push
jne
cld
cmp
sub
xchg
fidivrl
stos
mov
and
ss
iret
test
rcl
add
adc
fldcw
pop
enter
pop
jns
je
movsl
mov
stc
and
adc
sub
and
jae
mov
jle
popf
push
push
xchg
flds
fstpt
dec
pop
stos
popf
pop
movsl
ret
lea
lahf
sub
inc
lock
pop
jmp
in
pop
loope
enter
in
pop
adc
imull
loope
cltd
jo
in
dec
xor
mov
jae
arpl
pop
xchg
stc
scas
jecxz
cmp
ret
clc
dec
jno
and
filds
test
xchg
mov
fisttpll
mov
pop
add
testb
andb
mov
jo
jle
cli
or
pop
imul
test
inc
fists
inc
scas
push
dec
pop
jno
enter
sahf
dec
jl
jge
mov
mov
mov
xchg
ret
fstpl
adc
xchg
fisubrl
mov
adc
inc
mov
das
mov
ret
out
xor
xor
dec
add
adc
inc
xor
sbb
mov
sbb
push
jg
cmpb
ss
insl
cmp
and
dec
ss
jmp
and
stc
ja
lret
sahf
sarb
loope
sub
adc
out
mov
cmp
sbb
int
fidivs
inc
dec
push
jmp
jge
push
enter
stos
mov
movsb
sahf
clc
xchg
xchg
imul
stc
js
jmp
inc
cs
stos
pop
aam
je
xchg
insl
cs
call
xlat
push
xor
cld
jno
xchg
and
out
mov
imul
xchg
shlb
inc
shrl
dec
jae
aaa
xor
sbb
cmc
jb
jp
inc
pop
lea
inc
jne
jnp
add
xor
aad
sub
repnz
mov
or
push
push
jge
js
sub
outsl
movsb
push
push
repnz
pusha
xchg
pusha
mov
push
movsl
jmp
xlat
jge
mov
sbb
sbb
adc
inc
sbb
jp
xchg
jbe
or
xchg
xchg
push
es
cltd
push
xor
jg
add
pop
push
mov
push
xchg
mov
mov
insb
mov
sbb
jmp
jecxz
scas
mov
ret
mov
ret
lcall
jno
ds
and
jge
sbb
mov
jg
jbe
xchg
dec
adc
lock
mov
adc
ja
jge
aam
cmp
ds
or
xchg
scas
sbb
sub
rcll
les
sub
mov
pusha
xchg
sub
jnp
mov
mov
in
xor
sbb
and
xlat
xor
pusha
and
std
inc
jnp
dec
dec
mov
cmpsb
sub
nop
mov
xor
hlt
sub
jb
mov
out
xchg
xchg
adc
push
in
jae
and
rorb
sub
jg
xchg
scas
testb
push
pop
jg
dec
add
xchg
aas
xchg
out
lock
xorb
sti
jmp
dec
les
and
sub
jl
dec
adc
movsb
lret
ucomiss
fistl
mov
iret
mov
adc
mov
mov
xchg
xor
stos
mov
push
lahf
addr16
xor
inc
mov
xchg
push
jg
imul
inc
js
rorl
jnp
popf
ret
cmc
andb
out
jmp
cli
sub
or
and
sahf
xor
add
sbb
cmpsl
outsb
jg
outsb
mov
ja
or
out
arpl
mov
jbe
aas
loopne
aad
dec
jns
scas
mov
fwait
xor
in
ss
fstl
mov
gs
in
cltd
jnp
xchg
stos
mov
xchg
mov
xlat
pop
jbe
clc
add
mov
test
fstps
jecxz
pop
imul
mov
in
es
in
popf
inc
cmovp
jmp
adc
out
cli
fnstcw
popf
mov
rorl
adc
xlat
inc
jp
mov
insb
fnstcw
jp
movsl
sub
xchg
addb
pop
pop
jae
mov
fdivrl
inc
adc
in
gs
mov
js
adc
sub
loop
int
ss
orl
test
scas
out
push
mov
loopne
pushf
mov
pusha
mov
push
sbb
sbbb
xor
jns
cs
inc
or
sub
push
ror
pop
sbb
fadds
scas
sbb
nop
mov
out
mov
xchg
cwtl
xchg
js
outsb
jb
or
std
cli
inc
lock
pop
into
js
jp
scas
lcall
popf
in
data16
fchs
andl
push
and
adc
call
cmp
sub
mov
loopne
xchg
add
sub
sahf
pop
stos
popa
lds
rorl
js
test
call
add
clc
roll
in
xor
shlb
cmp
push
les
cmpl
dec
pop
add
mov
xchg
cmp
stc
mov
inc
popa
adc
adc
js
ss
push
repnz
sbb
sub
cmp
popa
and
or
jbe
jp
lods
ret
or
add
mov
divb
xor
jmp
es
dec
pop
jle
fldenv
int
sub
stos
pop
call
pop
push
das
loope
divb
pop
xlat
mov
ljmp
jno
popa
cli
mov
push
adc
xchg
data16
cwtl
popf
pop
mov
push
les
mov
hlt
das
ljmp
jg
fwait
sbb
iret
jb
lea
jecxz
mov
test
add
mov
or
pop
ret
xchg
sti
inc
in
jge
ja
cpuid
ret
mov
sahf
imul
jnp
sti
arpl
sub
nop
aas
ljmp
adc
jge
bound
dec
sub
cmpsb
scas
shrb
push
sub
fcompl
inc
push
test
xchg
js
ret
push
je
scas
push
punpckldq
lahf
sti
mov
adc
dec
sub
imul
xlat
push
movb
test
pop
jge
test
fists
jecxz
dec
mov
xchg
adc
in
mov
cli
stos
pop
jecxz
rcr
push
jecxz
and
mov
popa
mov
fsubl
mov
or
adc
pop
xor
xchg
add
fdivs
jmp
aam
daa
push
mov
jae
repz
test
aaa
mov
inc
inc
push
shl
and
idivl
out
jle
mov
mov
pop
push
inc
repnz
mov
inc
lods
mov
popf
loopne
aad
mov
and
shll
push
add
mov
pushl
mov
xor
lahf
xor
pushf
mov
dec
mov
jne
hlt
out
rol
jecxz
jle
lahf
cmc
adc
or
clc
repnz
inc
mov
push
shr
jb
xchg
mov
ds
imul
out
xchg
pop
jns
mov
and
push
and
or
ret
stos
fs
stos
lcall
xchg
es
aaa
sub
cwtl
dec
out
mov
sub
pop
mov
das
insl
xlat
mov
movsb
or
in
cmp
pop
sub
je
adc
test
jle
mov
jge
or
inc
or
adc
push
les
test
mov
push
ror
and
mov
or
push
data16
add
mov
mov
aad
and
insb
fildl
shll
sbb
mov
cmpsl
mov
test
stos
sub
test
xorl
fcoml
dec
cli
push
imul
xor
sbb
xlat
shll
popf
fmul
mov
fwait
adcb
test
mov
inc
sub
pop
dec
dec
xor
jbe
xor
push
sub
gs
icebp
daa
mov
inc
inc
cmp
mov
xor
mov
adc
mov
fs
insb
jl
push
jmp
jmp
es
xchg
jmp
xchg
push
ljmp
adcl
push
mov
cli
fsubl
ss
inc
nop
pop
shlb
inc
adc
lods
mov
std
jecxz
ret
aad
jp
call
popf
int3
adc
and
lcall
out
sub
or
les
sahf
lods
or
call
cmp
pop
mov
mov
lea
js
stc
sub
das
adc
adc
test
loope
xchg
sbb
push
pusha
and
lds
rcl
fistl
cmp
pop
and
jnp
jp
xorl
les
xchg
mov
loop
ret
mov
das
and
in
xchg
cmp
mov
lahf
xchg
sub
jg
cmp
repnz
lahf
or
xor
dec
jo
adc
mov
icebp
jno
pop
addr16
cmp
ss
test
pop
mov
adc
push
andl
loop
xchg
push
or
rep
movsb
and
jne
jae
xor
xchg
push
xlat
jae
insl
je
dec
imul
inc
pop
aad
and
imul
movsb
xor
push
mov
push
xchg
cmpb
fmull
xchg
xor
idivb
add
add
sarl
and
lods
mov
mov
jns
std
arpl
out
inc
add
jp
aam
jae
add
data16
xchg
sub
xor
addr16
add
js
dec
jns
cmp
pop
fcoml
cmp
sub
in
push
sahf
xor
dec
shl
sub
movsb
idivl
mov
mov
in
stos
loope
out
xchg
inc
xlat
cld
dec
add
fsts
sahf
mov
test
scas
dec
js
xchg
sub
pop
mov
cmp
scas
out
or
in
mov
clc
fs
jns
add
fldpi
loopne
pop
jecxz
bound
in
push
outsb
or
mov
xchg
sbb
mov
nop
xchg
mov
pusha
add
mull
or
mov
cmpsl
ss
mov
push
push
mov
cltd
int
mov
mov
inc
push
adc
cwtl
jno
js
test
cmpsl
jbe
pushf
mov
jmp
lods
repnz
pop
loop
fidivl
mov
je
fwait
lea
or
test
mov
jns
fsubs
lea
xor
ret
jge
jl
cmc
jge
frstor
add
pop
into
or
lods
pushf
fistpll
in
arpl
cmc
jo
out
push
jno
or
jne
jnp
cmp
or
dec
fwait
testl
pop
test
insb
or
fdivrs
push
mov
jl
push
or
dec
sub
lods
xor
mov
cmp
sub
inc
mov
std
jb
mov
sar
loopne
and
mov
sub
xor
push
push
in
add
adc
mov
mov
or
mov
movl
jne
sahf
scas
push
lds
sbb
mov
btc
mov
psllq
int3
movsb
shl
add
sbb
ja
repz
and
inc
mov
push
and
sti
jecxz
out
mov
icebp
push
cmpsb
mov
imul
nop
hlt
leave
lahf
sbbb
repnz
into
pop
sub
es
sub
aad
outsb
iret
dec
rcr
repnz
dec
cmpl
addb
clc
jecxz
mov
add
push
xor
jae
xchg
cwtl
iret
loope
sbb
test
movsl
pop
mov
adcl
lahf
or
pop
mov
outsb
xchg
fidivs
inc
add
mov
mov
dec
leave
mov
int
daa
lods
ret
xchg
lods
dec
out
mov
outsl
ljmp
loope
stc
xchg
adc
insl
rcrl
int
mov
fs
mov
test
mov
aam
cmp
mov
fstps
lock
mov
adc
cmpsl
ret
pusha
fsubrl
mov
adc
add
xor
sub
add
filds
iret
cs
clc
inc
daa
stc
arpl
inc
or
or
rclb
mov
nop
mov
outsl
xor
xchg
pop
lock
repz
xlat
test
push
or
cmp
out
cltd
out
pop
pop
xchg
mov
ret
nop
xchg
inc
in
mov
fists
aam
jp
jg
push
xor
mov
adcb
andb
jno
and
mov
cli
shlb
cmp
adc
ja
out
movsl
test
pop
xchg
imul
xchg
loop
or
fwait
and
movsb
enter
cwtl
cmp
push
in
mov
jmp
nop
inc
push
repz
add
stc
and
insl
pop
cmp
push
sbb
int
cwtl
subl
mov
icebp
push
cmp
add
fldl
stc
mov
repnz
nop
inc
xchg
push
pop
pushl
inc
sub
mov
jae
popf
les
rcll
cli
les
hlt
out
hlt
dec
jbe
mov
adc
or
aas
push
mov
sahf
fxch
dec
lcall
fs
pop
cli
jmp
mov
in
xorl
xchg
mov
cmp
inc
lods
sbb
scas
leave
test
push
pop
int3
dec
or
in
aam
stc
mov
xor
cmp
pop
mov
lods
aam
iret
adc
ja
and
mov
fcomip
dec
jl
in
cmc
xchg
jp
sahf
addr16
imul
dec
jno
xchg
cli
les
pop
jecxz
scas
mov
push
movsl
movsb
loopne
inc
jnp
shrl
mov
or
test
and
inc
popa
nop
or
and
or
mov
in
dec
jmp
jmp
push
clc
push
test
nop
push
jnp
add
cmp
dec
push
movsl
inc
loopne
ja
incl
adc
std
sub
sub
mov
add
out
jo
or
rorl
push
dec
loop
les
fidivs
jnp
imul
in
imul
lds
push
pop
cmc
jnp
imul
lods
cli
jb
add
clc
dec
rcll
fcomip
jmp
xor
dec
dec
or
adc
and
fs
adc
sbb
push
jbe
icebp
mov
inc
adc
cmp
stos
push
cmp
mov
inc
mov
xchg
shll
and
mov
mov
push
cs
hlt
pop
mov
pop
xchg
jbe
repz
andb
addl
pop
and
xchg
pop
pop
cmp
cli
out
jb
out
adc
je
insl
js
daa
faddl
mov
cmpsb
scas
lods
jp
test
sti
push
fdivrl
dec
lahf
jne
lea
fcomps
fnstsw
jecxz
fisttpl
sbb
push
jnp
dec
int3
ja
mov
ja
je
and
test
pop
testl
stc
pop
xchg
sub
mov
arpl
push
push
xchg
xor
fwait
notl
adc
push
insb
mov
jb
pop
rolb
lea
sbb
outsl
adc
mov
jecxz
cld
mov
cmc
adc
cmp
out
or
in
add
idiv
test
cmpsl
mov
jecxz
lret
rcrb
divb
cmp
in
stos
add
cld
outsb
mov
out
pop
pop
push
sub
xor
and
dec
sbb
scas
or
outsl
sub
lods
fs
aad
inc
repz
insb
cmp
loop
sbb
adc
in
jecxz
add
jnp
add
shlb
and
cmp
jp
cmp
ficoml
testb
int3
cmp
lods
and
lods
jle
add
mov
xor
insl
js
fisubrl
shll
sbb
aaa
xchg
push
pop
xchg
and
push
xchg
and
das
sbb
jl
and
lahf
in
jle
sub
insb
and
jmp
xor
cmpsl
inc
mov
div
xor
push
push
xor
mov
push
dec
push
aaa
jb
mov
testl
test
mov
fimuls
or
mov
jg
test
jl
stc
fnstenv
cmpsb
mov
lock
sub
fsubrs
repnz
inc
pop
in
adc
mov
popf
adc
adc
rolb
push
lods
shrd
mov
and
xor
js
js
xor
sahf
mov
push
lods
mov
fdivp
xlat
mov
mov
imul
pop
test
lods
daa
cmp
add
pop
outsb
push
jmp
mov
out
aaa
xchg
pop
test
inc
das
loopne
int
cmp
push
nop
fsubrl
sar
xor
lods
pushf
roll
test
fsts
mov
pop
pop
mov
es
mov
xchg
cmpsb
movsb
fiaddl
cmp
push
ja
cmp
xor
jl
repnz
data16
xchg
xchg
jge
out
push
dec
rcll
out
add
mov
aaa
test
popa
push
mov
cmpl
inc
pusha
in
test
fidivs
pop
jnp
mov
mov
jg
pop
jo
or
pop
not
lcall
jo
dec
out
jmp
jbe
jge
and
mov
mov
or
adc
sti
mov
out
add
cli
icebp
lcall
dec
es
cmpb
lahf
push
decl
cmp
data16
das
add
jmp
sub
fcomip
jl
jl
add
jo
sbb
imul
andb
xor
shlb
add
fwait
cmpsl
dec
imul
sbb
xlat
add
aaa
stos
arpl
add
adc
sbb
mov
mov
push
xor
or
mov
xor
or
push
mov
gs
jg
mov
sub
xlat
mov
push
movsb
jge
jmp
pop
xchg
sbb
pop
mov
daa
dec
jne
int3
lds
xchg
ficompl
dec
jmp
out
repz
or
add
out
loopne
xchg
mov
leave
fnsave
mov
jecxz
fistpll
dec
and
mov
lret
fstps
sub
sub
adc
or
ret
rcrb
scas
les
sub
xor
push
pop
adc
mov
ret
mov
jo
insb
add
inc
repnz
cmp
push
fwait
mov
push
aaa
push
negb
xchg
mov
xlat
pop
pop
dec
or
jnp
ljmp
mov
in
adc
sti
cmovg
dec
jmp
pop
in
rcll
push
adc
xor
add
jg
sahf
lods
xchg
mov
loope
xchg
or
or
movsb
xorl
lock
xchg
xor
sti
sub
ss
cs
out
repnz
jp
or
test
xlat
test
sbb
int3
or
test
outsl
ficoms
push
xchg
adc
movsl
fisttps
pop
add
cli
jl
jnp
arpl
div
adc
adc
jb
jns
dec
push
cli
popa
lock
imul
insl
nop
in
xchg
js
stc
pushf
push
loopne
and
stc
ret
aam
sbb
inc
rcl
xchg
es
cmpl
push
test
inc
test
loope
movsl
stos
mov
lea
sub
clc
pop
imul
fdivl
mov
sbb
xor
cmc
scas
dec
iret
ss
ljmp
pusha
xchg
out
add
xor
fstps
ret
jg
test
mov
popf
cli
fisttps
pop
sahf
xchg
ret
hlt
cwtl
sti
imul
mov
clc
roll
movsb
fwait
outsl
or
xchg
and
pop
je
mov
mov
adc
stos
pop
ds
mov
scas
pop
inc
ret
mov
clc
sbb
push
push
stos
push
testl
jnp
sbb
in
mov
cld
jbe
dec
int3
int
cmp
sub
daa
icebp
dec
push
lea
fdivl
push
int3
xchg
mov
push
jb
mov
jnp
pusha
cmpsb
sub
ss
jns
dec
mov
mov
sub
or
das
out
mov
aas
add
in
mov
psubw
sbb
jecxz
sbb
shrl
push
mov
sub
cmp
cmp
aaa
mov
jbe
jg
rclb
imull
stos
out
push
mull
push
nop
mov
outsb
jno
mov
testl
aas
mov
or
cmp
or
jecxz
adc
fnsave
and
sbb
mov
xor
dec
aam
sub
ss
shlb
push
sub
xor
push
es
mov
loop
mov
enter
fisubl
mov
dec
xor
xchg
das
scas
fistpll
fidivrl
je
shl
mov
inc
ljmp
xchg
pop
mov
xchg
imul
gs
cmp
movsb
in
and
mov
imul
leave
push
stos
inc
lahf
mov
mov
pushf
inc
imul
cmp
aas
sub
jns
sti
inc
pop
sub
fildl
mov
xor
aas
rolb
adc
xor
je
jecxz
jnp
pop
shlb
jmp
xor
mov
or
cwtl
in
cmp
call
cli
push
shlb
push
mov
popf
pop
xchg
push
int
add
cmpl
fisubrl
outsb
dec
cltd
push
test
mov
je
std
push
out
hlt
adc
aas
cmc
jmp
push
pusha
push
das
jl
loope
icebp
xchg
enter
imul
push
xchg
mov
mov
int3
sub
xchg
mov
mov
inc
push
pusha
jg
xorl
adc
fmuls
std
mov
pop
adc
pop
js
dec
insb
dec
int3
icebp
les
in
mov
mov
dec
mov
ficompl
iret
aaa
popf
insl
mov
imul
out
cmp
sub
and
mov
xor
aas
dec
insb
call
pmulhuw
mov
adc
adc
lret
fmulp
test
push
push
inc
call
pop
sbb
xchg
pop
push
aas
lods
sub
les
test
pop
orl
mov
adc
mov
rcrl
fwait
movhps
out
jo
xchg
inc
lods
mov
popa
adcl
mov
xchg
jle
es
stos
int
shlb
js
loopne
mov
jle
int3
lret
xor
testl
add
pop
or
sahf
movsl
xor
sub
inc
imul
dec
cld
mov
cwtl
dec
adc
mov
mov
xchg
jo
adc
add
xorl
jp
dec
loop
es
xchg
pushf
xor
fnsave
xchg
mov
cld
out
push
jb
fstp
gs
mov
add
sahf
stos
or
out
sbb
ret
lea
fwait
cli
rclb
dec
fcomps
lret
or
xlat
mov
insl
dec
push
fcoms
xchg
mov
call
mov
sbb
jmp
and
dec
xchg
and
lcall
cltd
inc
pusha
jge
int3
jns
mov
mov
popl
jo
mov
pop
sbb
les
mov
sub
daa
and
in
add
pop
mov
jmp
xchg
out
add
cltd
or
cltd
fistps
cmc
or
or
mov
lods
sbb
lods
xchg
test
mov
sbbl
adc
mov
and
inc
mov
das
and
or
inc
push
lea
or
push
mov
lds
stc
cmp
sub
pop
push
dec
adc
ror
or
xor
in
sub
mov
push
idivl
aam
arpl
data16
sbb
int
mov
cmp
cmpsb
jae
mov
xor
shl
pop
sbb
and
out
fidivs
rclb
jbe
fstpt
shlb
jmp
inc
xchg
or
rcr
dec
or
mov
insb
push
aaa
mov
pop
xchg
shlb
jmp
mov
out
and
cmp
test
fwait
add
dec
fiaddl
sub
mov
xchg
les
leave
jae
adc
mov
cmpsb
dec
xor
push
imul
and
outsb
mov
rcrb
mov
stos
jp
mov
pop
in
inc
dec
jmp
cmp
xor
sub
mov
jbe
es
arpl
data16
add
lods
cmp
psrlq
inc
pop
and
push
xchg
push
sahf
xor
mov
les
cmc
cld
imul
add
dec
mov
scas
neg
pop
subb
in
sbb
sub
xor
cmp
sub
pop
fnsave
icebp
lcall
cbtw
and
cmp
in
mov
mov
push
jbe
dec
or
pop
outsl
stos
cld
lods
daa
loope
inc
pop
and
mov
loop
aaa
sub
cltd
xchg
fnstsw
cli
scas
mov
fisttps
in
test
mov
cs
cmp
pop
mov
inc
dec
pusha
mov
mov
xchg
xchg
outsb
dec
lods
lock
dec
cltd
fidivrs
jnp
aam
arpl
pop
cmp
std
sub
push
sbb
cwtl
or
cltd
mov
mov
les
pop
cmp
inc
mov
test
gs
lds
inc
sahf
jbe
xchg
add
lods
xchg
sbb
xor
and
pusha
xor
mov
out
addb
rorb
out
sub
imul
xchg
fimuls
movsb
arpl
outsl
fsubs
testb
insl
mov
mov
dec
jp
out
mov
mov
ss
inc
loope
lret
dec
push
lret
push
and
cmpsb
dec
test
lahf
sti
loopne
or
lret
addr16
xor
insb
dec
mov
mov
enter
cmpsb
cmp
sbb
push
fstl
inc
mov
push
mov
jae
ficoml
mov
xor
popa
mov
push
lods
insl
cmpl
mov
inc
pop
out
xchg
sahf
sub
xchg
out
dec
inc
mov
mov
pop
mov
xchg
mov
aad
cli
xchg
bound
mov
pop
dec
mov
movsb
stos
insb
adc
mov
lcall
xchg
shl
sbb
hlt
pop
cmpsl
insb
negb
leave
pop
mov
lods
cmp
sub
mov
cli
jge
into
xor
adc
mov
hlt
jno
push
lcall
mov
fwait
inc
and
pop
sti
sbb
subb
mov
adc
cwtl
pop
mov
nop
loop
cmpsb
mov
sbb
jecxz
jb
add
push
adc
jb
push
sahf
dec
lods
test
js
xchg
cwtl
xchg
add
enter
bound
pusha
xchg
out
ficompl
dec
inc
pop
xchg
mov
add
xchg
sub
fsts
xchg
pop
mov
and
mov
dec
in
cmp
pop
icebp
sub
cmpb
loop
cli
cld
out
sub
and
mov
mov
cmpsl
lods
addl
std
pop
call
jmp
out
inc
daa
xchg
pop
pop
clc
in
scas
ljmp
in
cmp
testl
cmpsl
push
jbe
dec
test
cs
push
jp
icebp
cs
addr16
popa
lret
xor
out
test
adc
mov
push
fs
xchg
pop
popf
movsb
pop
inc
dec
mov
aam
sbb
fs
je
push
inc
loopne
sub
test
icebp
nop
subb
aad
xchg
xor
paddusw
xor
cmp
pop
sbb
xchg
adc
pusha
dec
lcall
or
call
and
out
ret
repnz
test
nop
or
mov
loope
les
dec
mov
cs
gs
jp
scas
inc
add
add
js
rcrl
arpl
aas
pop
add
cmp
jnp
jns
dec
jg
jecxz
out
in
cmc
hlt
adc
dec
mov
and
sub
out
lods
sbb
addr16
cmpsb
mov
dec
inc
sub
and
fdivrl
cmp
shrb
sarl
aas
inc
cwtl
lock
mov
lods
iret
jg
rolb
sub
and
add
push
pop
and
stos
pop
mov
cmc
fwait
sti
xchg
je
push
or
dec
fwait
jbe
cmp
cmp
xchg
jae
divl
loope
enter
int3
and
popf
push
test
mov
test
sti
xor
mov
add
out
call
incb
push
push
sbb
and
cltd
xor
repz
mov
pop
filds
mov
xor
jae
xorb
mov
xorl
mov
and
inc
jae
stos
sub
sti
cs
pop
cmp
fiadds
push
scas
cmc
fs
dec
cmp
in
outsl
mov
or
inc
push
mov
mov
dec
cmp
arpl
xchg
test
cmp
adc
jns
mov
aad
fcmovbe
testb
and
sbb
ret
dec
jp
pop
mov
jne
mov
and
xchg
jnp
push
jno
xchg
push
add
lods
xor
lret
test
jg
clc
add
jne
sub
lods
jle
divb
pushf
sub
movsb
push
int3
mov
movsl
jg
xchg
clc
imulb
inc
rorb
sbb
ss
push
adc
andb
dec
int
aam
push
fwait
je
fldcw
movb
test
stc
stc
inc
sbbb
cs
jmp
repz
imul
div
test
fistpll
jle
add
and
lods
andl
loopne
movsb
pop
out
mov
imul
sub
xor
adc
mov
test
cmpsb
mov
or
cld
lock
lahf
push
inc
sbb
sets
sub
sbb
fbstp
repnz
jle
xor
push
cmpsb
push
rcll
adc
pop
repz
cmp
mov
or
inc
xor
movsl
mov
jns
icebp
roll
inc
jnp
mov
scas
mov
xor
xchg
bound
sub
daa
insb
dec
sbb
mov
sti
jge
dec
mov
mov
pop
pop
call
mov
jl
popf
jo
cs
adc
push
icebp
mov
cmpsl
popf
nop
lods
and
jle
xchg
mul
fwait
jg
jns
jae
push
mov
fnstenv
mov
xor
cld
mov
fmuls
push
push
xchg
div
cmpsl
dec
enter
insl
das
and
popa
inc
jnp
pop
and
dec
rcrl
xchg
xlat
cmpsl
cmp
clc
movl
shll
shrl
stos
and
xchg
call
insb
ret
bnd
imul
aaa
push
xorl
ds
mov
stc
outsl
divl
movsl
ss
into
popa
daa
mov
add
mov
mov
mov
push
repz
push
xorl
repnz
jno
push
imull
js
jge
cmpsb
mov
xor
fidivl
loop
in
ret
gs
scas
fdiv
icebp
shll
cmp
sub
es
dec
adc
rcrl
pop
jb
lds
cmc
enter
scas
lods
inc
cltd
aam
mov
jmp
fstps
xorl
add
push
push
inc
fwait
xor
ljmp
mov
call
sahf
jo
jecxz
inc
inc
lock
jl
mov
cmp
jo
cmp
inc
xor
mov
push
bound
xor
jg
sub
incl
cmp
lock
sub
popl
aad
out
adcb
into
xchg
pop
imul
pop
inc
lret
or
test
jge
aam
pop
ljmp
pop
in
cmp
inc
aas
inc
or
lret
inc
adc
or
incb
shr
mulps
mov
dec
les
add
fcompl
pop
cs
inc
mov
pop
mov
pop
xorl
dec
bound
int3
cmp
outsb
mov
cmpsb
mov
test
mov
mov
mov
inc
loope
out
mov
lea
jle
andb
adcb
and
sbb
addr16
mov
fldt
pop
bound
sub
xchg
mov
cmp
jl
add
pop
pop
adc
scas
adcl
jne
insb
sarb
sbbl
mov
and
adc
addr16
and
ljmp
sti
loope
aam
sbb
adc
popf
mov
or
xor
imul
dec
cmp
popa
daa
out
pop
push
out
mov
jne
xorl
jns
mov
enter
push
xchg
mov
loopne
dec
enter
pop
mov
pop
push
adc
loope
int
push
ds
lods
rcl
popa
xchg
cmp
in
or
sub
rclb
ficoms
popf
div
xlat
rcll
mov
jg
add
ss
push
sub
push
lock
jle
and
sbb
push
fisttpll
jl
idivl
aas
push
jnp
mov
hlt
adc
pop
movsb
push
and
xor
hlt
aas
js
pop
push
lahf
jge
sub
and
mov
mov
std
mov
mov
aas
cmp
xchg
imul
loopne
or
xchg
frstor
mov
adc
js
xchg
insb
mov
lret
scas
and
mov
sub
lods
xchg
or
popf
mov
xchg
xor
sbb
sbb
lcall
mov
and
dec
push
aaa
sub
cmpb
inc
mov
mov
cmp
mov
xor
and
pop
mov
and
mov
into
arpl
in
testb
ljmp
pop
sbb
lock
repz
push
xchg
dec
jmp
pushl
pusha
cs
lods
pop
sahf
scas
add
mov
xchg
and
fadd
call
push
cmp
sub
sahf
add
aad
push
leave
cld
dec
cmp
jb
cmp
and
in
test
push
out
lret
inc
push
jecxz
or
xor
out
fst
push
and
fistpll
sub
mov
add
decb
inc
and
cmp
inc
jmp
scas
pop
ror
ljmp
jl
lock
mov
and
and
mov
push
aas
fists
stos
dec
pop
mov
insb
inc
cmp
lds
cltd
gs
mov
mov
pop
cs
adc
xor
xchg
ljmp
pop
ja
inc
cmp
sahf
rcl
cmp
push
dec
mov
insb
iret
add
inc
sub
int
dec
cmpsl
push
pop
inc
dec
jo
cmovo
jp
push
flds
cmp
out
push
aaa
gs
jno
aas
jno
mov
enter
std
popa
push
push
in
out
or
xor
adc
jmp
addr16
xchg
inc
mov
inc
push
test
or
dec
pop
sub
les
jg
mov
in
cmp
mov
ss
call
mov
insb
mov
add
ljmp
push
and
pcmpgtb
pop
movsl
int
test
lds
jge
mov
push
dec
mov
inc
fldt
xchg
aaa
sub
fucomi
fucomip
jns
push
outsl
hlt
inc
fisttpll
es
mov
imulb
adc
cli
faddl
popf
imull
inc
cwtl
inc
shrl
dec
sbb
ret
push
or
roll
inc
fisttpll
jecxz
mov
sub
push
sahf
loop
into
mov
decb
stos
push
xchg
dec
adc
and
cs
cmp
push
cli
xchg
add
xchg
jecxz
rcl
xchg
pusha
test
int3
inc
dec
in
or
outsl
mov
jae
gs
sub
adc
popf
mov
leave
clc
mul
mov
clc
loope
testb
cmc
xor
pop
pop
iret
or
mov
ljmp
sub
add
out
call
mov
orl
in
pop
and
das
push
inc
adc
test
mov
lods
xchg
cmp
cltd
cli
add
cwtl
xchg
test
enter
push
sbb
jnp
bnd
xchg
fyl2xp1
sbb
mov
dec
jnp
mov
push
push
ret
daa
aam
dec
stc
ds
jmp
sti
loopne
jmp
mov
mov
inc
fstpt
mov
xor
inc
shl
jb
and
leave
out
xor
mov
jb
sbb
loop
movsb
in
test
xor
sub
fnstsw
aam
stos
inc
mov
or
cmp
or
stos
sarb
rcll
pop
mov
incl
inc
cmp
lcall
sbb
push
xlat
leave
enter
mov
xchg
pop
out
in
js
sbb
inc
mov
sbb
push
pop
rcll
call
mov
sbb
sbb
aad
push
mov
lahf
mov
iret
push
stc
les
pop
lret
cmc
push
or
stos
add
pop
dec
xlat
fldcw
inc
shll
loope
aam
cltd
sub
icebp
stos
out
sub
scas
fwait
mov
xchg
aaa
pop
or
mov
jge
pop
push
inc
cld
sbb
jne
rcll
inc
cwtl
jmp
xor
inc
xor
jmp
sbb
inc
mov
push
cld
jp
test
iret
pusha
dec
cwtl
pop
sbb
inc
xlat
push
inc
mov
lret
dec
data16
out
mov
sub
cmpsb
or
aam
jnp
sbb
imul
mov
jno
sbbl
jb
movsl
mov
repz
xchg
aam
xorps
xor
loop
push
sbb
divb
mov
dec
sub
or
inc
sub
ret
push
js
or
enter
mov
loopne
sub
mov
in
lcall
in
inc
sub
mov
and
add
ret
test
xchg
mov
insl
cmpsb
or
adc
scas
stc
dec
add
mov
inc
push
outsb
popf
sahf
add
data16
fdivrl
bound
adc
sahf
and
mov
sahf
outsb
gs
sub
lds
repnz
outsb
inc
arpl
mov
jb
cli
sbb
or
adc
cmp
push
cmpsl
insl
add
add
dec
arpl
dec
aaa
xchg
clc
out
add
jp
sbb
cs
aam
push
sbb
cmp
rclb
cwtl
xorb
xchg
fbld
cs
pop
add
push
or
mov
mov
fidivs
iret
cmp
std
popf
filds
test
outsb
outsl
into
rol
and
push
lcall
stos
les
and
inc
xor
adc
fbstp
jmp
int3
addr16
jmp
ljmp
hlt
jo
push
jge
mull
out
jnp
inc
inc
sub
xchg
ljmp
loope
or
mov
enter
xchg
jo
adc
xor
stos
xchg
sbb
insb
pop
fsubrl
adc
lahf
leave
mov
cmp
popa
mov
lds
mov
inc
mov
jns
xor
pop
inc
out
outsb
in
cmp
bound
inc
or
sti
test
push
into
xchg
cmpl
aad
jle
push
and
in
fisttps
or
mov
jmp
jb
and
popa
cmpl
stos
arpl
gs
and
mov
inc
add
mov
insb
insb
hlt
ljmp
dec
enter
mov
push
xchg
icebp
cmp
arpl
mov
scas
inc
gs
loop
push
inc
push
jne
xor
mov
inc
daa
cld
inc
data16
or
pop
pop
add
pop
scas
inc
mov
les
xchg
loopne
jmp
cmpsl
jmp
xor
pop
sbb
jle
jae
jg
pop
mov
outsb
sbb
lock
hlt
std
jb
mov
fidivrs
xor
add
addr16
adc
jge
test
std
inc
lret
scas
insb
lcall
cmp
or
test
in
push
movsl
push
dec
jle
push
add
inc
lret
xchg
push
push
jo
repz
mov
test
xlat
dec
mov
or
pop
in
inc
fmuls
xchg
and
add
mov
inc
aas
std
and
scas
lret
cltd
fwait
popf
imul
jae
xor
push
push
iret
repz
outsb
hlt
pusha
outsb
icebp
cld
leave
pop
jl
add
stos
dec
nop
lcall
sub
into
dec
xchg
andb
bound
imul
enter
das
mov
icebp
clc
cmpsb
cmp
pop
and
or
sbb
sub
andb
inc
ret
out
and
mov
je
and
js
dec
jnp
sub
pop
sti
inc
rcrl
mov
imulb
repnz
jmp
outsb
fwait
mov
push
test
mov
inc
mov
xor
push
das
mov
or
cmpsb
mov
in
fdiv
ja
imul
pop
and
imul
in
in
mov
loopne
sub
cmp
in
js
pop
pop
push
sarl
repnz
xor
in
add
lock
mov
in
divb
or
add
xchg
mov
scas
mov
mov
jl
lcall
push
mov
stos
xchg
push
mov
sarb
push
and
sarl
cmpsb
jnp
mov
sbb
inc
jl
adc
adc
je
ljmp
xchg
out
aam
les
popa
pop
jl
mov
call
adc
int
add
jb
lcall
mov
fnstsw
pop
mov
imul
mov
add
jne
xor
cmpsb
inc
mov
mov
jg
imulb
cmc
adc
push
xchg
jecxz
jns
fildl
xchg
push
int3
pop
and
out
push
mov
addr16
and
sbb
outsb
insl
xor
enter
adc
loop
xchg
ljmp
dec
inc
push
movsb
xor
rorl
aas
push
imul
mov
out
loopne
addr16
and
out
mov
cs
stos
int
loop
cmc
loope
mov
in
icebp
sbb
dec
or
fcmovnb
test
pop
xchg
cli
xor
dec
mov
jp
sbb
icebp
and
shrl
lock
pop
xchg
and
std
adc
or
jb
or
movsl
pop
in
outsl
sbb
mov
and
mov
notb
pop
fwait
les
xchg
jo
mov
sbb
jl
ds
adc
pushf
jno
cmp
jge
inc
pop
push
popf
jg
inc
add
cmove
stos
push
xchg
in
mov
mov
repz
push
test
cmp
sub
dec
pop
xchg
aas
movsl
cmpsb
enter
push
xchg
mov
lcall
in
pushf
xor
in
push
icebp
bound
rclb
push
mov
insb
mov
mov
insl
mov
lcall
xchg
cmp
mov
fsubl
xlat
cld
pop
sub
and
fdiv
push
popf
jb
mov
lret
mov
insw
mov
add
push
shr
shlb
aaa
fstpt
and
mov
cmp
sbb
lock
shlb
sbb
mov
xchg
jge,pt
cmp
arpl
lret
imul
push
cmc
or
or
fcmovnu
dec
sbb
inc
dec
fidivrs
shlb
sbb
out
or
sbb
mov
push
out
repz
push
or
ljmp
jae
xchg
and
or
loop
mov
sub
inc
adc
jns
xchg
aaa
xchg
mov
and
shl
mov
add
jae
xor
lods
cmp
mov
inc
mov
push
adcb
dec
xchg
xchg
int3
xor
pop
outsl
inc
jmp
ss
loope
data16
aad
imul
dec
cmp
popf
pop
adc
repz
mov
sbb
imul
push
enter
push
mov
enter
xlat
ss
nop
push
inc
adc
or
and
loope
mov
out
push
out
out
cmc
std
fwait
add
mov
jmp
xchg
in
add
mov
fbld
fsub
pop
mov
repnz
inc
inc
shrl
stc
push
push
mov
in
icebp
xor
xchg
add
test
jb
jmp
test
add
push
push
push
cmpsb
push
dec
push
aad
xchg
loope
add
rorl
push
and
shrb
mov
dec
mov
cmc
outsl
dec
inc
add
aaa
jecxz
cmpsb
cli
sbb
lret
subb
push
sub
les
fmull
sahf
inc
dec
jnp
call
mov
jns
mov
and
jns
push
mov
add
mov
mov
add
repz
rcll
das
pop
mov
xchg
push
xor
shrl
jno
push
xchg
inc
mov
mov
adcl
pop
roll
dec
lock
in
into
push
cld
stos
push
std
and
ret
mov
rcl
gs
js
dec
cmp
stc
mov
jne
push
popf
das
fsubrl
inc
stc
push
int3
hlt
les
mov
icebp
jg
call
outsl
sub
movsb
xlat
pop
pop
jae
inc
mov
push
loop
addr16
adc
sub
pusha
jl
cmp
pushf
imul
add
std
enter
insb
xlat
jnp
mov
push
xor
iret
inc
int
popa
jmp
mov
mov
into
sti
push
add
inc
and
xchg
jo
rcrl
cld
imul
mov
mov
sar
inc
lds
or
cmp
mull
cld
mov
jl
xchg
inc
sbb
inc
mov
dec
rcrl
mov
pop
test
mov
andb
cmpsb
add
xor
test
roll
mov
out
sub
in
in
mov
xchg
dec
pop
fs
add
adcb
or
jle
frstpm(287
mov
cmp
lds
std
into
mov
imul
out
nop
hlt
es
icebp
cltd
cmpsb
xchg
enter
aaa
add
inc
mov
cli
inc
pop
int3
xor
push
cmc
mov
mov
jg
mov
imul
xlat
fisttpl
into
pop
sbb
push
lret
push
popf
dec
mov
xchg
cmp
popf
test
mov
sbb
cmp
push
or
and
int
pop
push
mov
dec
out
jle
pop
pop
inc
sub
or
je
bound
sti
lahf
imul
jp
shrb
mov
adc
xchg
jb
jle
aad
outsb
pop
jle
or
jl
add
insl
push
sbb
clc
mov
cmc
add
popf
mov
inc
not
stc
or
shll
sahf
push
hlt
push
mov
xchg
rclb
mov
outsl
cmp
xchg
hlt
pop
mov
xor
sbb
inc
or
adc
or
add
pop
lds
cs
mov
mov
out
push
hlt
xchg
push
xchg
call
lcall
mov
ja
xchg
jno
sbb
mov
mov
andb
movsl
xor
cld
dec
pushf
inc
xchg
enter
aad
shr
inc
mov
popf
jae
cmp
jo
insl
and
mov
xchg
xchg
hlt
mov
adc
shll
inc
dec
or
xor
dec
daa
xor
leave
test
cmp
sbb
add
lock
aam
push
sar
scas
pop
inc
dec
fisubrs
sbb
ja
aam
cmp
leave
xor
fildl
cltd
and
pusha
scas
int3
sbb
popf
lret
mov
push
mov
xor
daa
sarb
pop
enter
inc
xor
std
jno
xchg
lahf
std
clc
jmp
push
inc
mov
and
stos
push
cli
pop
push
adc
add
xchg
mov
je
std
sub
dec
aaa
sub
cmp
ss
icebp
imul
and
mov
cld
imul
mov
loope
repz
mov
cmp
inc
cmp
sbb
jae
cs
fsubl
inc
and
jo
pushf
inc
punpcklwd
jns
lock
stos
inc
inc
lcall
mov
inc
pushf
test
or
gs
pop
push
xor
mov
mov
cmp
and
dec
dec
ret
sbb
loope
adc
dec
inc
mov
push
xchg
or
out
pop
test
dec
call
mov
icebp
jecxz
daa
mov
test
xor
sbb
insl
loope
cmpsb
xchg
jo
cmp
mov
xchg
push
mov
lahf
inc
jmp
ja
xchg
and
pop
aad
mov
push
xchg
repnz
mov
mov
or
jbe
arpl
or
std
idivl
imul
dec
xchg
cmp
hlt
lock
lods
nop
popf
or
scas
inc
or
pushf
fisttpll
dec
enter
sbb
outsb
sub
push
pushf
jg
xor
xor
jp
testl
sbb
or
fwait
pop
filds
or
mov
leave
movsl
push
cmc
cmp
out
scas
pusha
dec
int3
adc
dec
adc
testb
cmp
and
push
mov
mov
out
jl
scas
mov
push
cmpsb
dec
pop
jmp
fisttpll
leave
in
test
mov
mov
jae
xor
mov
outsl
and
dec
sarb
scas
push
js
pop
inc
ds
pushf
mov
in
push
test
and
sub
pop
adc
add
mov
push
test
add
lea
fucomip
outsl
rep
xlat
lea
dec
push
loope
jae
pop
mov
int3
dec
jmp
lea
push
jg
lret
jmp
pop
enter
pop
pop
inc
xchg
shrb
sbb
xor
nop
insl
sub
pop
mov
bnd
hlt
jns
jge
int3
shrl
pop
mov
adc
cmp
imul
out
adc
mov
dec
dec
xchg
mov
or
bound
cmp
sahf
in
adc
push
mov
out
xchg
scas
addr16
xor
js
imul
xor
dec
push
lea
sub
fdivrs
pop
fisttps
mov
inc
xchg
sbb
sbb
sti
push
cli
popf
xlat
sbb
mov
jo
mov
xchg
mov
stos
add
mov
aaa
jae
ja
nop
out
push
pop
js
arpl
mov
jns
lock
lret
ret
scas
cmc
fsubl
aam
inc
cmp
add
rclb
ljmp
repz
int
sbb
mov
mov
aas
inc
int3
dec
jl
fwait
xor
out
pop
popf
xor
push
sub
fistps
mov
xor
sub
scas
testb
test
sbb
dec
ret
push
stos
jmp
mov
stc
outsl
sub
lods
mov
in
cmp
mov
sarl
jo
pop
adc
outsl
imulb
aas
and
call
sbb
cmc
xlat
fwait
and
and
xchg
or
mov
inc
pop
sub
lret
sub
pop
data16
cld
cmp
push
mov
das
sub
int
cli
and
or
lret
or
pusha
mov
cmpsb
test
movsb
jne
movsb
xchg
nop
add
lret
fmulp
mov
out
and
jns
fldl
inc
movsl
push
sub
ja
mov
mov
adc
push
or
pop
lret
xchg
sar
sub
nop
fnstenv
xchg
fistpll
int3
jo
popa
push
pop
push
sbb
or
in
sti
stos
loopne
jb
outsl
in
imul
sbb
cmpsb
decb
ljmp
add
lods
lret
sbb
repnz
or
loope
cmp
in
pop
out
bound
insb
jg
add
push
or
jno
jge
fwait
data16
gs
icebp
outsb
xor
shl
fmull
mov
xchg
and
cmp
push
rclb
clc
cmpsb
sbb
inc
test
xor
cmc
push
sbb
insl
pop
call
cmpsl
dec
cs
loop
xchg
mov
pop
sbb
pop
das
outsb
lods
adc
adc
and
mov
imul
aaa
insl
vpackssdw
jae
adc
out
push
adc
xor
xor
mov
pushf
cmp
xor
nop
fbstp
lret
xchg
pop
into
fildll
and
call
inc
push
cli
pop
push
jbe
popa
loopne
cmp
mov
jae
les
inc
cmp
ds
cmp
or
jb
adc
popa
popa
cs
outsb
add
in
nop
jns
jbe
inc
or
addr16
cmp
mov
or
and
adc
sbb
mov
push
cmp
rorl
adc
jmp
pop
scas
pop
mov
pop
dec
ds
sub
and
movsl
andb
pop
mov
fucom
cmp
inc
inc
mov
cmp
jo
dec
and
sarb
lret
dec
je
rolb
sahf
jmp
and
js
aaa
aas
movsb
fistpll
dec
in
push
pop
repnz
push
and
sub
jge
outsb
sub
cltd
cmp
push
sub
lret
mov
lods
sbb
in
movsb
enter
int
cmc
xlat
stc
fists
loope
inc
pop
mov
mov
and
out
push
mov
mov
cmp
fcoml
cmp
and
rolb
cmp
xlat
mov
mov
fldcw
shll
es
addr16
sub
out
push
sbb
push
xor
mov
jne
int
jns
daa
mov
mov
arpl
imul
push
mov
fs
movsb
add
or
add
hlt
adc
daa
out
stc
aad
lcall
in
jae
sub
mov
jns
cmp
stc
das
mov
gs
mov
sub
and
and
fmull
sbb
mov
shrl
iret
insl
enter
js
shll
bound
inc
roll
and
mov
mov
subl
gs
mov
pop
mov
xlat
pusha
pop
sub
lods
cmp
dec
add
and
icebp
movsb
adc
vsqrtss
loop
fs
ret
sbb
xchg
pushf
jno
fnstcw
jne
movsl
mov
out
mov
out
cmpsb
cs
mov
jo
pop
into
push
sub
add
call
mov
lret
jg
cltd
and
sbb
or
mov
add
or
loopne
xor
loopne
cltd
cs
idivb
lahf
mov
dec
mov
jecxz
mov
repnz
sub
dec
subps
sbb
loop
mov
push
sbb
xchg
sbb
xor
sub
and
add
clc
push
out
jbe
fs
sbb
cmp
lods
mov
out
inc
in
orb
jae
xor
cmc
inc
push
repnz
lock
mov
jle
mov
in
push
imul
imul
fnstenv
dec
stos
imul
cmp
leave
mov
test
and
xor
xchg
pop
jno
test
mov
or
sub
ds
lret
jne
lods
int
pop
out
mov
push
mov
adc
test
scas
mov
pop
dec
pop
fcompl
imul
subl
xchg
sbb
adc
push
shrb
bound
or
mov
add
gs
mov
loop
mov
adc
pop
lock
pusha
stos
shlb
cli
adc
add
mov
imul
imul
dec
insl
int
cmp
cmp
xchg
les
in
iret
pop
insb
and
add
test
add
mov
pop
sub
xor
ja
jecxz
in
push
ret
jb
or
xchg
jg
dec
std
jae
loop
cmp
cmc
les
and
inc
adc
call
xorb
mov
fs
xchg
out
push
sbb
inc
dec
sub
jge
lods
std
fildll
insl
cmc
in
test
mov
add
into
out
push
les
rorb
cmp
pop
add
sub
push
fidivs
leave
in
and
addr16
mov
inc
sbb
mov
mov
xchg
pop
dec
xchg
inc
lcall
push
mov
sbb
das
mov
pop
cmp
dec
push
cld
cmpsl
rcll
cmpsb
popf
xchg
xchg
jge
int
rcr
cld
test
mov
sbb
push
rclb
cli
lcall
inc
sub
lret
dec
push
rol
scas
bound
cmp
js
mov
fwait
rdpmc
arpl
xor
mov
test
mov
dec
jg
bswap
aam
sub
push
daa
ljmp
push
enter
insl
cmp
pop
stos
aad
dec
mov
insb
insl
push
loop
daa
pop
jnp
cmp
sbb
xchg
setbe
sbb
test
jge
jo
in
sbb
jmp
stos
bound
xor
dec
xchg
dec
je
imul
inc
xchg
mov
fisttpl
pop
pushf
sar
lahf
pop
dec
push
stc
pop
inc
xchg
push
mov
push
ljmp
cmp
dec
or
push
arpl
mov
mov
ja
add
lahf
dec
js
mov
popf
dec
leave
push
pop
imul
imul
push
sub
push
ret
test
int
and
adc
dec
fstpt
mov
xchg
loope
in
xchg
mov
mov
imull
mov
lods
and
and
mov
pop
popf
jecxz
scas
cmpsl
xorb
adc
push
jno
enter
ja
and
push
xchg
inc
repz
test
ret
in
les
iret
clc
dec
in
test
inc
pop
push
pop
sub
orb
pushf
popf
xchg
idivl
mov
xchg
mov
pushf
sub
dec
mov
push
mul
push
xor
scas
lahf
lcall
pop
fistl
loop
add
cmp
in
loopne
insb
dec
push
or
lock
jae
xchg
and
clc
xor
sub
inc
xor
test
sbb
lock
out
add
and
aaa
cmp
lods
repnz
and
inc
xor
in
rclb
push
dec
sub
ficoms
xchg
jae
pop
fadd
inc
out
mov
push
mov
dec
or
ds
js
pop
int3
push
sti
xchg
imull
xor
mov
adc
shrl
out
test
stos
outsl
lahf
popa
lea
pop
xor
imul
out
fadds
push
mov
sbb
imul
es
shrb
or
in
push
xchg
sbb
push
repnz
popf
add
ret
pop
xor
arpl
fsubp
sahf
rcrb
xchg
hlt
jmp
xchg
inc
inc
jo
js
lahf
xchg
cmpsb
or
lods
xchg
jmp
in
ljmp
jle
xor
out
fdivrs
adc
pop
push
inc
cli
cmpsb
xchg
jnp
push
push
xlat
adc
ret
jmp
sub
insl
fwait
enter
sub
inc
cmp
dec
repz
mov
loope
je
mov
dec
movsl
inc
out
cmp
testb
mov
popa
xchg
adc
inc
scas
mov
orl
mov
xchg
dec
push
and
add
push
mov
dec
sub
jmp
push
xchg
in
stos
adc
mov
scas
dec
insb
mov
in
clc
xchg
les
pop
and
push
pop
inc
ret
push
gs
leave
aas
enter
push
cmpb
cld
iret
out
pop
add
in
nop
mov
inc
sti
and
xchg
popf
outsb
jmp
mov
fsin
leave
lret
xchg
aad
xchg
loope
sbb
in
jl
inc
ds
loope
dec
xorb
clc
mov
daa
mov
sahf
cltd
push
pop
fisttpl
in
dec
into
sbb
out
sarb
mov
ja
into
xchg
data16
stos
xorl
jae
jb
fsubl
cmp
movsb
leave
inc
mov
repnz
mov
cmpsl
fcompl
sub
out
or
jp
lret
adcb
sbb
xor
dec
inc
mov
xchg
mov
ret
adc
dec
rcrb
fwait
pop
mov
popf
es
stos
push
pop
cmp
fcoms
mov
lcall
loopne
xchg
cwtd
jg
cmp
jg
icebp
cltd
cmpsb
adc
out
aad
out
daa
dec
inc
in
xchg
lods
sbb
dec
mov
and
and
xor
mov
inc
cmp
adc
inc
push
mov
sbb
pusha
insb
or
cs
imul
lahf
xor
jns
scas
insb
iret
cmp
cs
pop
rcl
int3
repz
fnstsw
fxam
lret
in
pop
cli
into
loope
popa
int
xorb
enter
shlb
mov
push
decl
or
mov
addr16
not
jns,pt
ficoml
imul
sarl
dec
mov
push
sbb
pop
jle
or
fdivrl
xchg
negl
sbbb
mov
fnstsw
cli
out
xor
jo
cmp
pop
mov
ror
push
mov
test
in
pop
es
cmp
xor
push
out
iret
testl
lods
stos
and
sbb
dec
mov
xchg
inc
je
insl
orb
outsb
aas
xchg
mov
ds
xchg
mov
test
inc
or
push
stc
jne
test
jb
push
inc
inc
data16
mov
leave
pop
fisttpl
sub
or
fildl
inc
push
loope
aaa
mov
xchg
dec
je
mov
in
aaa
mov
xor
ret
jne
cmp
sbb
dec
inc
cmpsl
pop
mov
mov
repnz
push
cmp
fsts
pop
dec
xor
fists
divb
adc
sbb
and
fistpl
mov
fstps
clc
dec
and
testb
loope
sti
shll
xlat
pop
popf
add
mov
adc
movsb
xor
lods
mov
ds
push
mov
jno
add
in
lea
fs
fsts
mov
xchg
cmpsl
int
lahf
xchg
scas
aam
xchg
testl
pop
loop
xchg
adc
pop
movsb
movsl
xchg
xor
cmp
adc
adc
pop
ljmp
jg
cwtl
arpl
arpl
ficomps
gs
jge
popf
add
sbb
insb
rorb
push
mov
data16
aaa
pushf
fstpt
push
push
bound
mov
adc
jne
repnz
in
push
stc
ret
in
add
pop
cmc
sbb
pop
dec
sti
outsb
shlb
loope
lock
ljmp
fisttps
mov
mov
mov
ret
adc
aas
push
push
and
sbbb
fs
stos
ja
and
test
xor
fdivs
push
sub
adc
and
fmuls
jp
pop
sbb
mov
inc
shll
add
or
lcall
inc
ffree
inc
bnd
bnd
xchg
sbb
lock
faddp
nop
loope
jl
xor
or
cs
or
fwait
add
xor
lods
and
andl
xchg
lret
adc
inc
xor
mov
negb
daa
cmp
jns
shlb
into
inc
push
out
or
jge
into
cmp
xchg
mov
stc
subl
popa
cmpsl
jbe
leave
sub
imul
ja
mov
sahf
in
je
roll
pop
mov
std
jns
es
stc
pop
pop
sbb
je
fucomi
inc
and
enter
lret
and
lahf
jmp
dec
dec
pop
jge
sbb
jbe
or
cmpsl
loopne
inc
stos
push
fstps
inc
dec
adcb
ret
jbe
iret
mov
icebp
test
clc
lret
sbb
sbb
ja
pop
aaa
imul
cs
jmp
mov
std
movl
and
add
movsb
push
enter
jmp
xchg
xor
push
or
push
mov
divb
dec
and
ljmp
mov
js
dec
fwait
inc
dec
adc
movsb
or
ret
mov
popf
dec
jnp
addb
xchg
stos
nop
add
movb
cmp
adc
xor
adc
icebp
cmp
and
in
fdivrs
push
mov
or
mov
loop
into
ja
sbb
sbb
dec
jnp
xchg
nop
xor
pusha
add
jb
or
or
lret
mov
mov
clc
or
bound
push
outsl
and
push
fwait
iret
push
mov
mov
add
mov
cmp
xlat
int
in
adc
lcall
cli
mov
ja
mov
sub
icebp
ret
aad
out
aad
movsl
or
pop
cs
mov
inc
jbe
lret
insl
push
sub
int3
pushf
pop
pusha
and
inc
fisubl
cmpsl
sbbb
dec
enter
dec
pop
inc
pop
mov
dec
in
sahf
subb
sub
fstpl
iret
sbb
xchg
in
mov
aaa
shll
pop
pop
or
dec
in
adc
lea
xchg
xchg
into
mov
leave
or
add
cmpsb
test
mov
xchg
mov
out
js
jb
mov
pop
fcmovne
insl
pop
pop
out
daa
test
pop
mov
pop
lods
push
mov
sbb
jg
or
ret
dec
fmuls
cmp
imul
iret
xchg
shlb
mov
mov
outsb
aas
mov
pushw
int3
jge
popf
dec
push
into
in
mov
outsl
incb
inc
sbb
or
lods
and
into
pop
push
bound
dec
mov
movsb
push
imul
add
xchg
mov
mov
in
out
je
pop
xchg
inc
rcl
jmp
sarb
jno
mov
les
fs
mov
add
ja
push
push
dec
fcmovbe
cmpsl
or
inc
inc
sti
lock
ja
pusha
cmp
mov
push
mov
iret
cmp
sbb
lock
sub
dec
dec
stc
dec
enter
aam
inc
jno
or
fmuls
test
adc
jmp
icebp
cmp
idivl
mov
hlt
cli
sbb
jae
cmpsb
and
fs
int
hlt
ret
call
pop
movsb
push
adc
jno
cmp
jae
in
test
jnp
test
stos
jle
lcall
cmp
dec
sbb
push
sbb
push
test
pop
cmp
xchg
xchg
pop
jo
jne
jno
mov
sbb
push
sbb
jne
or
xor
pop
andl
jp
lock
xchg
push
jecxz
jae
xor
push
lds
cs
fs
addb
sarb
popf
xchg
leave
and
jg
cli
pop
movsl
sbb
jp
mov
push
or
sbb
push
mov
js
sti
mov
xchg
mov
mov
jo
fimull
cmp
mov
cmpsl
or
fdecstp
bound
sub
inc
cmp
test
aas
mov
pop
lret
outsb
pop
or
push
adc
into
cmpsl
insb
and
test
xor
push
leave
jo
fisubrs
leave
xor
ss
sbb
xor
fld
rorl
pop
adc
mov
dec
cmpsl
es
pop
or
add
pop
sahf
jne
xchg
outsl
inc
inc
sub
fwait
jno
addl
stos
mov
pop
pop
sub
fnstsw
idivl
fwait
adc
movsb
je
adc
xor
sub
aam
push
decl
and
and
mov
cmp
mov
iret
and
pop
mov
frstor
int3
je
loopne
xor
aad
cmp
mov
movb
aam
das
mov
into
and
rorl
sti
jns
iret
addb
or
add
insl
add
mov
inc
jecxz
inc
xchg
push
push
adcl
dec
cmp
sbb
bnd
pop
arpl
clc
push
sub
push
sbb
push
fst
daa
popa
mov
stos
xchg
imul
lods
mov
xchg
rcrb
cmc
add
pop
xchg
enter
cwtl
jnp
xchg
and
jb
add
mov
jp
orb
out
xchg
adc
jns
stos
xor
fistpl
lds
int
in
xchg
xchg
fcmovne
shrb
sub
xor
pop
xlat
mov
je
test
or
jg
jb
data16
mov
test
xor
mov
es
and
pop
and
sbb
xchg
fsub
pop
arpl
rcrb
mov
jns
setbe
push
fcmovnu
mov
mov
fisttps
out
xor
sbb
fs
xor
sub
adc
mov
pop
jge
testl
mov
sub
pop
dec
push
sub
dec
lcall
mov
push
push
mov
test
inc
movsb
faddl
fwait
add
or
scas
insb
int
mov
pop
xchg
jg
aad
jae
mov
out
push
fwait
push
notb
pusha
cs
test
rcl
jae
mov
enter
cltd
xor
bnd
dec
adc
mov
adc
mov
sbb
repz
xchg
push
aad
outsl
pusha
aas
or
lods
jge
xor
pop
mov
arpl
adc
push
test
or
mov
and
clc
mov
and
pushf
aas
push
push
shr
push
gs
dec
cmpsb
jmp
nop
xor
ficomps
lods
mov
scas
int3
add
sbb
andl
mov
loop
enter
in
cmpsb
or
lods
lods
out
sti
orb
cs
ret
add
popf
mov
push
rcr
cltd
inc
outsl
and
stc
rorb
fmull
push
xchg
rol
fcomps
xbegin
cmp
sbb
jecxz
int
push
icebp
inc
aas
push
ss
inc
lcall
xchg
or
push
push
cli
outsb
adc
jge
or
push
lods
mov
loop
test
mov
mov
clc
dec
das
fisttpll
adc
or
cmp
sub
dec
push
jge
mov
adc
pop
dec
fcompl
push
xor
jge
lret
lret
dec
or
push
xor
in
adc
jb
jne
iret
cmpsl
mov
clc
push
mov
das
sub
into
sar
mov
es
push
andb
add
nop
fidivs
lock
inc
add
jle
fs
movsb
cld
aaa
inc
mov
std
mov
mov
lcall
sbb
cmp
andb
mov
std
inc
xchg
mov
pop
nop
inc
enter
xchg
ret
and
ds
push
cwtl
pop
and
in
fildll
lea
xlat
mov
ret
imul
jmp
jp
sbb
dec
add
pop
jp
push
sahf
sarb
sub
aaa
mov
adc
xor
testl
mov
adc
movsl
xchg
loop
cmpsb
stos
adc
lds
hlt
inc
xor
outsb
and
jno
mov
movsl
add
imul
add
mov
lcall
xor
xchg
cs
loope
ret
lea
mov
imul
loope
cmpsl
hlt
daa
das
mov
clc
shl
inc
dec
inc
popf
or
cmp
lret
mov
outsb
scas
lds
loop
add
or
fwait
aaa
jb
loope
mov
pushf
test
rcpps
dec
dec
rorb
psubsw
rcrb
add
push
test
pop
aad
mov
stos
push
inc
cwtl
mov
ja
divb
jle
aas
xchg
and
mov
je
push
in
push
sbb
inc
sarl
lret
mov
jae
and
mov
loopne
dec
xor
mov
mov
pop
daa
stos
fstps
into
adc
in
cmp
ds
repnz
or
cmp
lock
out
pusha
add
pop
scas
push
loope
mov
mov
les
test
xchg
je
sbb
out
je
fsubl
jmp
xchg
push
xor
lods
dec
inc
dec
add
enter
pop
int3
push
test
cmpsb
dec
mov
mov
pop
fsubrs
int3
pop
pop
push
in
lcall
sbb
jbe
push
mov
mov
out
push
mov
push
in
xchg
lea
mov
addb
mov
adc
js
bound
mov
mov
aam
popl
dec
cmp
ret
cwtl
adc
sbb
js
inc
xchg
pop
loope
hlt
lcall
cmc
adc
push
dec
pusha
lcall
movsb
jmp
sti
loop
xchg
xchg
ret
sahf
inc
mov
adc
xchg
inc
dec
ret
pop
push
add
fucompp
adc
fwait
mov
jge
pop
sub
xchg
jg
orb
loopne
stos
fistpl
sbb
aas
negb
hlt
push
out
pop
mov
push
int
je
jl
mov
push
sub
test
sbb
pop
cld
aaa
dec
out
imul
inc
sub
push
cmc
popf
mov
lds
cmc
imul
jecxz
jp
aas
mov
xchg
imul
xchg
imul
push
mov
xor
adc
xchg
mov
out
out
add
cli
cmpsl
hlt
mov
push
pop
aad
pop
pop
movsb
jmp
sbb
cli
sbb
fidivl
sbb
call
add
and
or
insb
js
pusha
jecxz
sub
test
mov
mov
jp
mov
hlt
aam
fiadds
dec
daa
mov
mov
dec
mov
decb
pusha
inc
movsb
mov
cmp
push
daa
roll
mov
scas
out
mov
add
xchg
push
push
xor
mov
fstl
push
dec
pop
test
sub
imul
xor
mov
and
jp
stos
scas
outsb
in
mov
dec
test
ds
js
jbe
pop
cli
sbb
jns
jne
sbb
shlb
lcall
push
lods
dec
addb
shrl
popa
dec
adcb
pop
fstl
mov
out
cmpsl
jle
aad
mov
lret
outsb
xchg
push
xchg
aaa
jmp
push
sbb
and
cmpsb
cli
scas
jmp
push
int
out
adc
movsl
mov
pop
xor
and
push
pavgb
call
subb
pop
gs
mov
sub
or
sbb
adc
lea
out
je
adc
fistps
push
mov
lcall
leave
inc
and
pushf
stos
ljmp
pusha
es
or
mov
push
shrl
sahf
cmp
das
cmp
mov
fs
jge
dec
add
rcll
push
icebp
xor
fmuls
jge
adc
dec
lds
sbb
sarb
pop
xchg
push
sti
pop
push
jbe
adc
ss
call
orl
pushf
dec
mov
pop
ja
popf
mull
cmp
cmp
scas
mov
add
pop
sbb
mov
fnstsw
ret
stos
sub
lret
pop
adc
and
fs
lods
cwtl
in
aas
xchg
and
mov
stos
inc
loope
int3
cmp
roll
cmpsl
sub
loope
or
push
and
xor
mov
shl
stc
mov
rorb
jge
xchg
mov
dec
jl
push
mov
mov
xchg
std
pusha
adc
ja
adc
cli
insl
and
xor
vcvtps2pd
push
mov
or
mov
jl
xor
jl
test
aaa
dec
dec
and
jbe
cltd
shl
addr16
push
or
stos
shrb
pushf
mov
lock
test
push
adc
xchg
mov
lahf
adcl
mov
mov
xor
xchg
fs
push
xor
addr16
mov
or
jbe
pop
std
pop
pop
push
push
icebp
push
jle
mov
ret
dec
rcl
fstp
push
pop
daa
add
xor
xchg
rclb
pushf
je
das
or
pushf
cld
jmp
xchg
daa
mov
push
shlb
mov
lahf
sub
sub
stc
xlat
loop
js
outsb
push
leave
fnstsw
mov
adc
mov
pop
cmpsl
std
clc
mov
push
push
xchg
or
mov
mov
xor
xchg
dec
adc
xor
mov
sub
jg
jne
js
xor
xor
xchg
cld
xor
test
mov
inc
test
sbb
dec
adc
in
mov
sub
mov
pop
xchg
lcall
mov
out
int
ja
jns
jl
andl
fnstenv
xchg
inc
add
jae
pop
pop
in
stc
inc
inc
push
mov
sbb
inc
sti
inc
sbbl
add
adc
mov
daa
pop
cmp
sub
shl
push
sbb
dec
and
ret
adc
cmp
push
sub
add
ja
cltd
add
or
adc
inc
iret
jl
dec
add
js
popa
out
pop
xor
jmp
stc
ret
sbb
sbbl
dec
sub
dec
in
pop
mov
test
mov
inc
cmp
test
mov
mov
jmp
in
bound
lcall
dec
push
and
xchg
dec
mov
fstpl
cmpsl
cmpsb
sub
ror
or
mov
notb
outsb
lods
xchg
fistpl
pop
jl
adc
xchg
pop
jo
jns
xor
imull
ljmp
pop
xlat
icebp
push
fwait
std
fwait
inc
in
pop
fldl
insb
xchg
sub
push
xchg
jle
or
ja
mov
mov
cmp
aad
jno
or
loopne
dec
ds
sub
push
mov
jno
in
ret
stos
outsb
push
inc
orb
jno
push
idivl
mov
sub
fwait
ja
cmp
lock
test
cmpsb
movsb
mov
mov
mov
loopne
cmp
sub
pop
pop
aas
insb
xor
cld
fistpl
push
sbb
loope
adcb
adc
lock
addr16
cmp
lret
dec
and
cmp
inc
push
das
add
sub
out
mov
movsb
push
repz
lods
or
loopne
roll
inc
jl
js
leave
push
inc
scas
mov
mov
stos
mov
mov
xchg
andb
sar
sub
push
dec
mov
xchg
icebp
outsl
or
mov
bound
rcrb
mov
fcmovb
cli
pop
push
aam
insl
mov
jp
pop
cs
lods
mov
mov
fwait
popf
cmp
cmp
lods
push
jmp
into
xchg
mov
push
push
mov
xchg
add
cs
jbe
sub
add
and
fxch
xor
sbb
jno
int
mov
adc
notl
movsl
ret
mov
fsub
cld
jne
je
xchg
shrb
mov
sbb
insb
xchg
push
or
loope
pop
test
mov
cltd
fistl
lds
cmp
lcall
jnp
mov
cmpsl
sub
jnp
sbb
lods
pop
or
pop
inc
rorl
jns
lahf
aas
movsb
adcl
add
int
cmp
loop
mov
add
bound
popf
pop
pushf
fsubrs
pop
mov
pop
push
pushf
es
push
jecxz
cmp
jno
add
mov
inc
mov
adc
cmovo
pushf
xor
lret
mov
sbb
push
lods
insl
scas
jmp
inc
jp
stos
mov
cmpsl
push
ss
jmp
es
xor
push
fsubr
iret
sti
push
das
mov
push
dec
xor
mov
test
push
enter
adc
repnz
repz
pop
in
push
out
sbb
and
adc
jge
add
push
adc
adc
jg
sbb
push
addr16
jae
jl
add
push
pop
pop
adc
mov
cmp
jns
fs
loop
mov
in
jp
adc
dec
dec
lea
loope
push
insb
jne
mov
and
icebp
sti
push
add
incb
aas
jmp
xor
and
shlb
jg
sahf
sub
mov
push
popa
dec
sbb
fs
movl
add
xchg
dec
fldenv
dec
mov
push
or
sbb
mov
rcll
lahf
or
xchg
xchg
pop
jo
popa
aaa
jecxz
mov
scas
imul
dec
arpl
in
pop
cli
scas
mov
test
dec
daa
mov
add
xchg
xor
fmull
and
out
lods
mov
add
or
mov
ja
movsl
fists
cmpsl
test
mov
add
mulb
lods
and
cltd
or
cs
call
and
jge
mov
inc
push
dec
mov
push
dec
inc
lock
or
movsb
sub
lahf
sub
mov
mov
cli
push
icebp
add
pop
cwtl
adc
jmp
fs
adc
jbe
cmp
xor
jns
rorl
mov
outsl
fwait
push
call
rolb
mov
dec
gs
cmp
in
xor
jmp
dec
iret
inc
and
pop
mov
pop
lea
insb
pop
ret
and
xchg
fwait
xchg
ficomps
xchg
sub
lods
inc
push
out
mov
lret
mov
cwtl
rcrl
lock
mov
andl
jp
popa
inc
push
test
pop
and
hlt
pop
aas
adc
stc
cmp
mov
mov
cmp
test
in
mov
push
pop
imul
out
insl
sbb
pop
lahf
dec
rolb
sbb
rcrl
stos
outsl
orb
sahf
and
sbb
out
js
loope
test
or
mov
mov
cmp
xor
sbbl
outsb
jecxz
cmpb
ret
inc
fstl
xchg
push
and
pop
test
xchg
mov
cmc
test
cmp
push
xchg
dec
ss
test
xor
xchg
sub
pop
add
in
xor
lds
jecxz
loop
xor
jg
jb
xchg
cmp
daa
mov
mov
pop
push
std
cmc
dec
cmp
inc
push
js
and
jge
mov
in
fwait
iret
inc
pop
in
add
js
pop
cli
pop
je
pop
jmp
popa
push
fisubs
aaa
sbbl
andl
lods
fcmovb
aas
cwtl
mov
nop
push
mov
popf
xchg
gs
movsb
mov
xor
push
push
jbe
jnp
repz
clc
lods
dec
push
aam
and
sbb
jge
mov
data16
int
xchg
adc
fsubrl
inc
fsubrl
enter
jg
adc
out
fs
sub
pop
inc
xor
or
cmp
mov
dec
cwtl
xchg
test
out
sti
shrb
lcall
arpl
js
test
addr16
aad
movsb
cld
outsb
and
mov
ret
jns
int
push
jno
and
and
xchg
popf
or
xchg
cmp
ret
push
sbb
xor
in
pushf
lret
xor
lret
cmp
inc
in
inc
xor
call
mov
xor
mov
xchg
dec
addb
movsb
sahf
cmp
flds
addr16
dec
mov
jg
mov
mov
push
sbb
xchg
jl
outsl
sub
in
jl
call
inc
xor
shrb
push
out
dec
rcll
subl
dec
adc
pop
xchg
dec
jecxz
cs
mov
insb
adc
mov
outsl
int
clc
in
mov
call
aaa
mov
fucomp
clc
inc
ja
sar
push
mov
imul
xchg
leave
fldl
test
pop
or
scas
aad
mov
mov
push
das
dec
aas
cmp
out
lea
mov
test
push
sub
xchg
icebp
push
cltd
add
adc
and
jle
cmpl
push
aas
add
adc
fisubl
pop
mov
jge
imul
push
int
nop
and
out
repnz
outsl
jp
sbb
xor
fildl
lahf
test
push
aad
mov
stos
xchg
xor
add
aaa
mov
idivb
or
xchg
mov
add
push
push
jae
xchg
cmp
push
mov
lahf
icebp
test
ret
ss
mov
jmp
fisubrs
cmp
push
dec
cwtl
push
loop
sbb
movsl
sub
rcrl
subl
rorb
xor
nop
xchg
mov
leave
loopne
add
aaa
repnz
cwtl
leave
mov
push
in
leave
jp
stos
jae
pop
sbb
mov
mov
fcoms
inc
cld
push
pop
cld
or
cld
mov
lea
stos
cmp
jp
dec
xor
popf
mov
or
pop
xchg
fidivs
mov
clc
mov
sbb
jae
sub
bound
dec
push
imul
popf
dec
test
test
loop
fldcw
mov
jne
mov
lahf
adc
mov
xor
ret
lcall
mov
or
cmp
out
cmc
cs
pop
xor
xchg
xchg
or
stos
test
repz
add
outsl
fidivs
test
dec
mov
loope
jno
cli
mov
mov
in
push
cld
jle
enter
test
jbe
fdiv
xchg
add
mov
test
push
mov
mov
mov
push
sar
outsb
and
movsl
xchg
mov
icebp
popf
add
push
fwait
into
push
scas
xchg
mov
iret
xor
repz
xchg
rol
sub
or
push
mov
stos
inc
icebp
lea
adc
cwtl
sbb
es
out
push
lods
dec
lock
pop
push
sub
loop
mov
cli
mov
enter
mov
cmp
add
mov
stos
jne
xchg
call
inc
repnz
int
xor
xchg
cmc
loopne
jae
fs
data16
and
ret
add
mov
mov
into
lods
jnp
sahf
dec
adc
or
adc
jae
lea
ljmp
lcall
mov
mov
in
mov
stos
xor
lcall
mov
lods
andl
movsb
aad
in
jle
xor
and
bound
cs
jo
dec
jo
fidivl
lock
add
and
adc
add
lock
mov
cltd
mov
loopne
movl
push
adc
mov
and
lock
cmp
call
pop
cli
stc
dec
movsl
or
in
insl
lahf
hlt
jl
and
pop
mov
lcall
pop
ljmp
inc
and
inc
aas
mov
test
xor
js
add
cwtl
push
xchg
out
cmp
sub
insl
jmp
cmp
cld
dec
inc
cltd
stos
mov
xchg
movsl
pop
xchg
cmp
fmul
push
jb
xchg
pop
int
scas
in
jnp
movsl
js
cmp
dec
or
mov
mov
push
push
lock
clc
pushf
inc
out
sbb
jbe
push
ja
cltd
push
std
mov
push
mov
inc
inc
dec
push
mov
cmp
cmc
or
or
mov
mov
cmp
jbe
stos
daa
fsubrs
call
andl
roll
push
sub
data16
push
scas
stos
mov
movsb
stc
repz
mov
sbb
push
insb
shll
mov
push
xlat
outsl
aaa
jl
shrl
fidivl
scas
ret
inc
shl
or
jnp
xor
das
test
xchg
test
jnp
fsubrs
push
pop
popa
aad
loope
xor
loope
lcall
jg
lock
mov
mov
or
rcr
cs
daa
fwait
lds
outsl
or
mov
push
gs
fnsave
push
shrl
mov
xchg
mov
into
cmpsb
jns
inc
shll
fs
jmp
int
sbb
and
mov
dec
add
jge
inc
mov
mov
push
add
jo
sub
andb
rorb
dec
pop
jbe
cmpsb
push
gs
sub
subl
movsb
and
pop
or
push
xchg
jae
pop
xchg
push
mov
sbb
and
lods
mov
ss
sti
lods
nop
mov
jno
sub
stc
test
movsb
cli
clc
add
inc
icebp
inc
adc
xor
rcrl
nopl
fldt
gs
add
mov
call
xchg
xor
sbb
xchg
mov
adcb
loopnew
repnz
js
movsl
ds
lahf
notl
and
mov
sbb
movsl
xor
fnsetpm(287
inc
aaa
insb
in
arpl
and
std
cmp
sub
dec
hlt
shrl
add
xchg
fwait
sti
pushf
fdivrs
cltd
dec
add
popf
xchg
pusha
mov
nop
loop
mov
je
adc
lahf
jecxz
fs
pop
pop
push
ljmp
das
mov
and
and
lods
aaa
and
fistl
push
mov
mov
mov
out
std
adc
inc
shrl
and
push
adc
out
cld
dec
pop
xor
dec
or
push
hlt
imul
or
add
or
jle
sarb
insb
adc
jmp
dec
pop
pop
cmp
dec
add
mov
push
cmp
and
ds
mov
mov
xor
fstpt
ja
dec
sbb
xchg
push
xchg
pusha
and
lcall
repnz
pop
cmp
lods
cld
dec
xor
imul
dec
jge
mov
sbbb
sub
arpl
push
mov
jae
sub
and
dec
pop
addr16
lock
push
mov
sub
call
jne
mov
rcrb
cmp
dec
cmp
fcom
or
repz
mov
xchg
jne
lret
in
js
out
adc
lcall
ds
sub
int
data16
in
les
std
orb
shlb
jecxz
mov
push
imul
adc
mov
dec
inc
mov
xchg
movsl
mov
lcall
push
out
stos
jne
sarl
sbb
jbe
ret
sahf
push
dec
xchg
sti
test
loope
ja
pop
add
sub
scas
imul
push
jnp
stos
mov
or
mov
mov
call
aaa
mov
fwait
out
fimuls
jnp
add
arpl
test
cmp
leave
js
add
xchg
popf
xchg
dec
call
jmp
in
push
push
lcall
lods
dec
ljmp
or
pop
les
lods
fsubrl
into
and
inc
mov
cltd
adc
xchg
lret
push
in
push
fiadds
push
fmul
cmp
xchg
mov
jnp
adc
mov
ret
pop
lret
pop
loop
pop
fisubrs
hlt
icebp
aam
out
push
mov
pushf
ds
ja
cmpl
ljmp
pop
and
dec
cmp
pop
movsl
or
outsb
cwtl
xor
aaa
stos
sbb
into
andl
aad
fs
flds
fnstcw
push
aaa
cmpsb
aaa
push
mov
mov
lea
xchg
or
sarb
aam
or
and
inc
push
addl
jns
xchg
adc
dec
xchg
mov
cmp
mov
cld
fs
cmp
aas
pop
or
push
test
mov
and
push
pop
inc
mov
pop
adcl
lods
aas
xor
jne
insl
or
jmp
push
arpl
stc
mov
or
mov
cmpsb
xchg
push
lret
sbb
outsl
dec
dec
jmp
adc
fwait
inc
je
bound
jne
jns
in
mov
sbb
fdivrl
and
mov
imul
dec
and
push
ret
mov
fcmovnbe
cld
imulb
and
in
out
mull
cwtl
or
subl
loop
sti
addb
mov
mov
cs
lahf
xor
ljmp
pop
icebp
pusha
mov
scas
into
dec
andb
and
std
pop
into
rcrb
mov
mov
orl
and
dec
dec
push
jo
adc
sub
xor
je
inc
mov
push
pop
jb
pop
adc
popa
jne
imul
xchg
mov
stos
das
add
ja
scas
inc
loopne
rcr
mov
out
mov
jns
cmpl
lock
mov
jg
sahf
sbb
faddl
and
pop
iret
inc
or
sub
inc
into
dec
outsb
pop
and
push
mov
mov
popa
mov
loopne
cmp
and
mov
lret
push
mov
insb
lret
fisttpl
inc
pop
xchg
inc
inc
mov
stos
inc
and
in
test
pop
inc
cmpsl
pop
dec
out
sub
aas
sar
cmp
jge,pt
pop
cmc
frstor
jo
movsl
stos
inc
aas
je
xchg
dec
stos
adc
and
enter
ja
fstp
lods
lock
push
inc
xchg
mov
imul
test
out
in
push
sti
in
push
cmc
sbb
cld
lock
int3
pop
mov
outsl
movsb
push
int3
jmp
cmpsb
loop
jae
jns
ds
xchg
xchg
add
xchg
in
jb
cmovae
mov
mov
out
mov
outsb
xor
xchg
sub
stos
shlb
xor
rcr
jnp
or
sub
pop
mov
cs
les
fwait
std
das
mov
pop
xor
add
cmpsl
popf
in
sbb
dec
or
mov
and
sbb
cmpsl
inc
and
in
lret
dec
pop
repnz
or
lods
dec
jne
cmp
sbb
and
cmp
inc
sub
jmp
divb
stos
fstps
pop
xlat
and
push
xlat
loopne
pushf
out
ret
and
aaa
xor
mov
fs
jp
cld
rep
xor
cmpsb
cmp
mov
mov
push
fildll
lahf
xor
inc
or
mov
adc
xor
sbbl
rcrb
pop
int3
insl
cwtl
filds
cmp
icebp
bound
lods
call
xchg
mov
shr
fdivrs
sub
pop
sbb
sub
and
stos
push
jne
daa
xchg
stos
jge
xor
inc
stos
cmp
mov
mov
cmp
lret
rorl
inc
push
xchg
pushf
aam
fstp
lret
adc
sbb
or
lret
arpl
dec
leave
repz
xchg
adcl
or
inc
jbe
lret
rorb
inc
ss
test
int3
sub
pusha
lcall
or
xor
sets
dec
ret
in
aam
in
movsb
inc
dec
push
mov
xor
or
add
or
mov
cltd
bound
mov
cmp
push
xlat
sub
rcrl
jae
pop
mov
xor
pushf
dec
cltd
dec
and
jbe
mov
mov
stos
lods
sbb
addr16
clc
jge
sbb
ss
or
sbb
rorb
movsl
data16
mov
out
test
stos
mov
popf
jg
inc
mov
add
imul
or
mov
gs
pop
xchg
std
xchg
stos
or
loopne
es
in
popf
inc
adc
aaa
xchg
cli
call
cld
loopne
into
mov
gs
lret
xchg
mov
aaa
xchg
xchg
sub
shl
shll
sub
les
out
xor
les
clc
int3
pop
cwtl
pop
imul
push
das
lret
and
int
idivl
scas
enter
jne
aaa
mov
push
rcrb
xchg
mov
xchg
push
out
mov
pop
es
cmc
stc
scas
call
or
xor
jne
aam
jbe
push
repz
push
sbb
lret
mov
aaa
insb
xor
push
jg
push
mov
push
sti
hlt
aad
mov
or
mov
iret
fs
int
push
mov
mov
dec
inc
mov
or
loopne
cmpsl
add
adc
filds
enter
mov
mov
stos
xor
push
les
push
push
ret
movsl
icebp
adc
rorl
cmp
push
xchg
int
movsl
dec
or
in
pop
or
popa
cmp
jl
xchg
sahf
aad
jp
mov
push
cmc
daa
jno
push
lods
mov
dec
in
cmp
sbb
cmp
pop
sub
scas
daa
sahf
xchg
cmp
cmc
sub
cmp
inc
mov
adc
fisubrs
fistl
jge
pop
adc
mov
xchg
xchg
aas
mov
and
andl
push
push
xchg
repnz
stos
int
dec
and
sbb
inc
fidivrl
jmp
sub
cwtl
cli
cli
pop
lods
movsb
leave
out
aaa
pop
jbe
imul
pop
insl
xchg
xchg
add
daa
cld
adcl
cmp
mov
pop
popf
xchg
notl
mov
es
xor
push
xchg
jge
out
cmp
icebp
mov
sbb
jo
mov
lea
in
loop
fs
pop
push
xchg
mov
xor
sbb
push
mov
and
lds
mov
xlat
lret
push
pop
dec
lea
mov
or
pop
aad
jl
test
sar
fadds
mov
addr16
mov
add
mov
mov
nop
xchg
mov
std
sbb
or
lods
add
int
or
ss
icebp
xchg
add
and
cmp
cmp
or
mov
jae
popf
roll
in
push
in
loopne
cmp
shrb
push
in
xchg
lcall
xchg
jno
nop
rorb
cmpsb
sub
mov
ds
xchg
xor
jbe
repnz
ss
mov
popa
icebp
and
movsb
push
mov
sarb
cltd
adc
and
fwait
movntps
leave
mov
cs
imul
ss
dec
loop
lahf
adc
clc
adc
xlat
orl
xchg
add
rcr
mov
idivl
scas
mov
outsl
scas
pop
mov
adc
loop
jns
arpl
cmp
pusha
out
cltd
cmp
cmp
add
enter
ja
test
push
sahf
clc
aas
adc
jno
xor
lret
test
ficoml
add
cmc
mov
dec
lea
arpl
push
dec
add
pop
in
addr16
lahf
call
mov
inc
mov
enter
sarb
add
pop
jecxz
mov
out
pop
push
hlt
les
scas
int3
xchg
lods
inc
mov
cmp
fnsave
add
adc
mov
aas
mov
daa
mov
cs
call
jae
jb
adc
mov
jecxz
lds
insl
int
adc
js
jb
jmp
xor
lds
add
mov
sbb
in
sub
sbb
pushf
cwtl
mov
shr
scas
xor
ljmp
sub
js
imul
popf
mov
shlb
scas
sarl
leave
push
jl
sub
sbb
je
pop
fwait
mov
les
stc
scas
rcr
or
outsb
gs
mov
sub
roll
fiaddl
mov
jmp
push
ret
mov
test
cmp
push
sub
mov
int
and
pop
stc
jne
add
mov
jb
imul
shrl
pop
pop
clc
mov
dec
into
inc
imul
cltd
lcall
add
pop
mov
inc
fnstcw
lds
cmpsb
je
pushf
mov
mov
push
aas
pusha
mov
sbb
or
data16
and
enter
loop
stos
sub
jno
outsl
inc
inc
call
inc
xchg
cmc
popf
jmp
shld
xor
or
jae
outsw
cmpl
mov
in
repnz
xlat
sub
lret
push
adc
scas
add
mov
repnz
inc
pusha
lcall
mov
aaa
xor
pop
fmul
xor
sbb
lds
in
mov
leave
vmovq
popa
movsb
icebp
mov
mov
add
into
pop
cli
jp
sbb
in
dec
dec
in
mov
hlt
int3
and
push
call
push
cmp
xchg
in
cmp
cmpsl
mov
addr16
or
inc
orb
out
add
adc
push
inc
dec
cs
add
push
and
cmp
ret
mov
jg
js
mov
shrl
mov
pop
pop
mov
add
mov
pop
fdivs
shrb
ds
repz
std
add
dec
imul
test
outsb
fistpll
iret
sub
aad
jo
dec
cltd
aas
addr16
jp
loope
mov
sti
xchg
imul
jle
popf
mov
cld
add
inc
jns
mov
mov
adc
lea
xchg
xorl
das
cwtl
icebp
add
push
fisubs
testl
stos
loope
stc
xchg
scas
imul
push
mov
mov
mov
lods
sbb
lods
xchg
fiaddl
out
add
fisubs
jmp
or
and
adc
add
sub
ss
push
hlt
es
xchg
mov
aas
lods
pop
ss
test
fnstenv
cmpsb
xchg
cmc
cli
pop
jb
mov
pop
ss
stc
sahf
jnp
jp
iret
or
sarl
jp
aaa
add
xor
push
shll
inc
icebp
aad
loopne
sub
and
mov
imul
and
jg
inc
pop
xchg
mov
call
mov
jno
push
loope
rorb
adcl
push
daa
lock
xchg
add
lds
divb
cli
jge
adc
lret
stos
sub
jl
shrl
dec
lret
cmp
xor
in
test
addr16
or
pop
jecxz
or
jb
dec
pop
hlt
mov
cmp
jmp
cmp
push
sub
xchg
mov
sub
ret
out
divb
lock
add
dec
outsb
pop
cmc
dec
and
leave
rorb
out
jbe
aaa
push
scas
mov
and
rcrl
ljmp
xchg
aam
xor
rcll
xchg
in
push
testl
fisttpll
sbb
mov
xor
jmp
xchg
cmp
pop
das
and
out
ficomps
or
jmp
jecxz
enter
testb
cltd
push
in
inc
mov
jno
repnz
inc
rolb
cltd
cmc
add
jo
cmc
and
sbb
pop
sub
jae
loope
push
aas
outsb
mov
call
mov
lret
in
push
addr16
aaa
lock
inc
ljmp
cmp
sbb
add
mov
test
jb
scas
hlt
pop
aad
mov
push
pushf
addl
push
push
or
into
int
dec
add
addr16
jae
xchg
bound
xchg
out
mov
sahf
enter
sbb
cwtl
in
cmp
pusha
jne
jbe
pusha
mov
mov
insl
mov
mov
dec
shll
mov
test
into
stc
cmpb
fdivrs
nop
xor
sbb
jbe
nop
pop
popf
pop
pop
cli
decb
jg
enter
insl
loope
lock
repnz
jae
dec
pop
dec
cmp
jbe
jns
cmpsb
jno
movsl
push
push
cmp
js,pn
pop
mov
cmc
not
sub
and
push
data16
sub
rorl
fstl
adc
add
loope
lods
sbb
jb
add
push
roll
das
mov
stc
jmp
lods
sarl
hlt
cli
ds
ficoml
inc
or
push
imul
sbb
or
pop
in
mov
insl
test
xor
add
popa
inc
mov
add
pop
stc
add
fs
lret
xlat
rclb
xchg
cmp
jns
jg
mov
das
add
ss
pop
xor
inc
mov
mov
sbb
add
cmc
loope
inc
xor
adc
dec
das
adc
mov
arpl
push
int
inc
outsl
cmpsl
adc
sbb
xor
push
push
xchg
data16
scas
ret
and
out
out
je,pt
xchg
lret
addr16
lcall
pop
push
pusha
jo
pop
dec
jne
and
xlat
push
sarb
mov
cmp
push
fdivrs
es
shl
out
sbb
lahf
mov
sbb
pushf
xor
test
int
lret
andb
dec
cs
aaa
inc
dec
lahf
jb
pusha
pop
rcl
fldenv
sti
mov
add
or
jnp
dec
mov
sar
int3
sbb
xor
inc
inc
pop
jecxz
xchg
addr16
sbb
mov
inc
leave
std
lret
movsb
adc
pop
outsl
inc
leave
inc
imul
pop
ror
mov
fisttpl
test
or
mov
lret
or
xlat
aas
sarl
push
pop
call
fwait
push
jno
push
add
fisttpll
dec
sub
mov
cmp
mov
das
adc
lahf
outsl
fimuls
push
mov
jnp
xor
push
mov
mov
or
shrl
push
sbb
aad
fs
dec
and
cmp
cmpsl
mov
push
mov
pop
int
fstps
jne
pop
inc
mov
das
outsb
pop
ljmp
mov
jne
xchg
loop
add
cmp
dec
lods
shl
adc
fstps
dec
dec
and
repz
aas
loope
imul
imul
fidivl
rol
stos
sahf
xor
pop
cmp
mov
jle
xor
cmpsl
fsubrs
mov
lret
cmpsl
lods
mov
adc
inc
and
ljmp
inc
sub
push
mov
xor
leave
cli
mov
mov
mov
xor
sub
cmpsb
inc
sub
fwait
adc
hlt
xchg
add
mov
aam
loop
jbe
jne
jle
mov
nop
test
repz
in
lahf
mov
ret
inc
mov
lea
dec
adc
movsb
fstl
aas
mov
sub
icebp
mov
push
mov
push
or
sbb
push
test
leave
imul
scas
jae
sarl
pop
fsubrl
push
mov
adc
push
pusha
pop
test
xor
sub
ss
mov
push
subb
cli
inc
and
clc
xor
dec
mov
mov
stos
or
cmp
aam
popa
test
mov
sti
jle
arpl
mov
mov
pop
push
imul
xchg
mov
mov
pop
sub
ret
cli
xor
movsl
loope
xor
push
test
dec
mov
xor
sti
mov
imul
jnp
popf
dec
dec
loopne
les
push
shlb
push
imul
movsl
out
sbb
imul
shl
mov
or
pop
mov
adc
xrelease
mov
adc
xchg
mov
popa
mov
sbb
sub
mov
pop
dec
in
fidivrs
adc
testl
dec
gs
jle
dec
jo
hlt
inc
fldl
xchg
mov
push
mov
aas
ja
pop
dec
pushf
loope
out
push
add
xchg
inc
push
sbb
fnstsw
ret
cs
and
adc
push
aam
sub
aas
test
cld
xor
inc
lea
pop
push
shll
enter
inc
or
adc
movsb
mov
inc
mov
and
pop
pop
addl
add
pop
std
or
add
push
arpl
ret
jmp
jo
stos
cld
mov
call
lret
unpckhps
movsb
mov
stos
loop
or
mov
loope
inc
rol
icebp
pusha
lcall
in
repnz
sahf
leave
pusha
cmpsl
jnp
push
or
jb
sbb
ljmp
divb
xor
test
dec
cmp
imul
arpl
mov
dec
sbb
add
icebp
popf
mov
inc
and
imull
push
pop
mov
repz
adc
xchg
xchg
repz
cmp
dec
imul
cmp
sbb
mov
jno
out
mov
xor
cmp
out
xor
int
cmp
sub
xor
or
sub
cmp
and
in
imul
sbb
mov
in
cmp
mov
hlt
push
lds
ret
pop
aad
je
lahf
pop
ds
sbb
push
or
insl
in
iret
dec
adc
inc
cmpsl
loop
es
frstor
mov
pop
mov
repz
data16
sub
aad
cwtl
icebp
sbb
lahf
pop
adc
dec
in
scas
dec
jl
popl
sbb
sub
mov
dec
insl
enter
xlat
xchg
out
mov
pop
add
out
outsl
mov
repz
aas
cld
repnz
hlt
xchg
and
jbe
jno
adc
push
call
cmp
sub
int3
fld1
xchg
sahf
lock
push
mov
dec
xchg
xor
jmp
data16
mov
xlat
mov
and
jecxz
mov
sub
les
es
hlt
imul
sahf
lahf
in
cmp
mov
pop
or
int3
push
dec
sub
test
sahf
rorl
iret
sbb
fdivrs
mov
xchg
jnp
scas
push
popa
cmp
mov
jmp
cmc
insb
sbb
in
mov
int
and
mov
dec
push
pop
mov
lret
jo
mov
test
sti
scas
mov
daa
aas
mov
cltd
xlat
push
mov
or
jecxz
jle
push
mov
rol
sub
dec
push
push
sbb
gs
enter
les
and
int3
push
mov
lods
xorb
add
inc
mov
in
push
jne
inc
xlat
rorl
sub
lret
mov
inc
inc
je
aaa
add
mov
leave
gs
adc
mov
pop
dec
jb
mov
cld
aaa
mov
out
aam
stos
add
jp
jg
push
or
loope
push
xor
leave
or
lret
movsl
adc
lret
add
push
dec
or
ret
dec
xchg
or
imull
std
mov
pop
icebp
inc
mov
xchg
nop
call
inc
xor
test
mov
das
sbb
mov
rclb
push
xchg
pop
cmp
cmp
xchg
lock
push
xor
mov
or
and
dec
lret
cmp
movb
fbld
lods
push
or
test
add
or
shlb
test
xchg
sbb
leave
dec
shll
xor
test
xchg
sahf
scas
or
pop
fistpll
les
cmpb
jge
ss
cmp
out
mov
and
inc
scas
or
add
mov
push
bound
adc
and
sbb
xchg
addr16
loop
push
jnp
mov
and
jbe
insb
jno
push
outsl
std
ss
imul
hlt
sub
fs
in
adc
mov
add
sub
xchg
int
mov
in
or
jns
dec
sti
in
add
fimull
xor
sbb
mov
cli
and
xchg
popa
sbb
inc
lds
sub
dec
insb
push
dec
sbb
movsb
pop
fldenv
movsl
cmp
loopne
jge
aas
aad
cmpsb
sub
mov
push
or
adc
xchg
lea
scas
cmpsl
jns
pop
xchg
in
mov
sub
push
sarl
mov
mov
pop
das
inc
test
mov
add
lods
pusha
daa
in
mov
dec
sub
in
mov
or
push
hlt
sub
ljmp
ss
or
dec
xor
adc
insb
lods
arpl
mov
ret
lret
nop
pushf
sbb
cld
stos
push
sahf
sub
and
mov
xchg
jae
negb
out
push
in
cmp
loopne
jb
in
sbb
cmpsb
sarl
jne
std
sbb
call
movsb
addr16
mov
test
cmp
sbb
mov
pop
mov
pop
notl
push
fildll
adc
cs
push
insb
inc
aad
ljmp
lods
xlat
pop
and
aad
add
in
xchg
outsb
cmpsb
aaa
jmp
iret
cmc
mov
inc
jge
push
xor
and
cmp
sti
cmp
or
data16
xor
gs
lock
ds
add
pminsw
loope
rorl
inc
out
iret
add
int3
xlat
rorl
push
es
mov
outsl
lcall
push
sahf
je
cli
jle
push
xor
in
aas
xor
adc
kmovw
inc
mov
mov
stos
jb
loopne
pusha
adc
sbb
mov
jecxz
inc
addl
dec
jg
push
lahf
and
push
mov
fabs
fnstsw
push
outsl
lcall
inc
fidivl
sub
mov
or
out
std
jb
push
xor
in
movl
pop
push
idiv
ja
add
neg
gs
flds
xor
cltd
bound
adc
inc
mov
jne
out
inc
pop
jbe
xlat
cmp
push
adc
mov
movsl
pop
sti
rolb
outsl
dec
cli
pushf
arpl
hlt
mov
std
xor
push
sbb
imul
imul
fisttps
xchg
xchg
mulps
cmp
adcl
adc
call
aas
fldl
inc
mov
lock
add
pop
pop
movsl
test
popa
or
cmpsb
dec
rolb
adc
hlt
pusha
xor
lock
dec
mov
cmp
scas
insb
xchg
xor
and
xchg
fwait
jle
nop
aad
push
roll
lea
push
or
jns
pusha
mov
or
in
mov
push
mov
push
pop
and
add
fcmovbe
std
jecxz
fiadds
inc
lret
xchg
pop
sub
pop
sbb
dec
push
or
fdivl
int3
mov
push
add
imul
cmp
pop
rolb
test
mov
sahf
cmp
xor
push
mov
daa
arpl
jae
adc
lret
sub
add
mov
add
and
aaa
mov
clc
push
insb
fdivrl
lods
std
or
negl
popf
shll
inc
ret
in
mov
ror
imul
in
xor
sub
cwtl
fwait
push
mov
icebp
pop
lea
sbb
outsb
jmp
cmp
cmc
xchg
enter
repnz
jbe
mov
xchg
add
repz
in
inc
mov
rcrl
inc
add
xor
aad
mov
and
jle
push
repz
mov
lret
sbb
in
setp
or
sub
cld
cmpsl
in
push
xchg
cmc
or
mov
dec
and
xor
shl
dec
sbb
add
jecxz
push
shll
sbb
jg
push
cld
xlat
pop
in
gs
ss
aas
inc
out
sbb
pop
ret
or
test
mov
cmpsl
out
cmpsl
movsl
dec
push
gs
mov
hlt
popf
pusha
adcb
aad
lret
add
fildl
daa
cmc
cmpsb
outsl
inc
stos
sub
push
pop
inc
fidivl
fnstenv
popa
in
push
call
jno
fmuls
cmpsb
lret
add
push
sbb
xchg
mov
cmp
aam
dec
dec
xchg
mov
addr16
jne
in
pop
popf
xchg
push
xor
mov
sub
ret
lock
mov
gs
push
mov
icebp
push
gs
cmp
jns
daa
mov
movsl
leave
sub
loope
cs
xchg
mov
test
mov
call
mov
pop
pop
mov
cwtl
jb
cmpsl
jge
push
xor
fisubrl
mov
sbb
jecxz
push
rcr
mov
fcomps
add
mov
mov
jle
jp
push
cltd
or
lock
mov
cmp
jg
mov
sbb
clc
test
jno
xorl
std
les
cmp
cmp
add
xor
xchg
xlat
sbb
in
inc
xor
orl
repnz
add
lret
in
mov
icebp
sbb
std
xorl
ret
jl
sub
faddl
scas
push
popa
push
nop
xor
push
mov
push
cmp
fidivs
xchg
push
in
or
mov
shlb
sbb
insb
sub
push
loope
test
repnz
jle
pop
addb
ja
xlat
int
adc
shr
jbe
out
push
jl
mov
sahf
sbb
mov
rorl
gs
xor
stos
loope
and
mov
push
test
cmpl
movsb
xchg
dec
mov
cld
sar
and
adc
cmp
loope
add
xchg
xchg
mov
push
xor
sarb
bound
cmp
mov
sar
sbb
aaa
or
inc
cmpsb
add
repnz
cld
imul
add
scas
fists
leave
or
jb
mov
loope
js,pt
movsb
jmp
mov
xchg
inc
add
xchg
inc
sub
inc
cmp
push
loop
fisttpl
cmp
loopne
jmp
in
dec
lock
lret
adc
js
push
mov
call
and
mov
push
fcompl
test
cwtl
or
mov
lret
je
jmp
xchg
ret
popf
inc
jmp
and
cmc
in
jnp
and
inc
loop
push
inc
fildll
inc
idivl
clc
inc
call
das
mov
and
mov
imul
movsb
daa
or
dec
cmpsb
pusha
aas
sbb
pop
and
pop
add
pop
stos
pop
jg
add
mov
sub
insb
js
subb
mull
mov
imulb
into
add
and
aad
cmp
movsb
inc
dec
push
sub
idivb
jmp
lret
aaa
adc
pop
and
test
and
test
push
jl
int
dec
lds
jge
and
sbb
cld
dec
into
pop
mov
mov
and
lahf
cmp
cmpsl
jnp
pop
jp
push
inc
jno
out
int
shrb
mov
in
icebp
into
dec
adc
or
in
cli
sbb
test
shrl
dec
xchg
mov
push
repz
scas
xor
cwtl
and
add
jmp
icebp
test
verw
aas
inc
cli
mov
test
or
dec
lods
push
in
lahf
sahf
jmp
adc
add
ds
mov
stc
stos
movsl
sbb
and
scas
lock
jns
jno
pushf
or
inc
push
jne
push
fdivrs
mov
sti
jg
add
test
je
cmc
lods
mov
lcall
sbb
ss
ja
mov
mov
dec
mov
stos
mov
push
scas
xor
adc
add
jbe
fld1
movb
pop
cli
inc
mov
pusha
jno
xchg
leavew
jle
push
push
push
add
mov
mov
repnz
pushf
mov
ret
sarl
and
fiadds
movsl
aam
mov
adc
jge
or
fwait
cmp
shr
push
mov
lret
jno
or
mov
sub
dec
fadds
enter
jae
push
mov
xlat
ret
sarl
out
mov
leave
push
insl
cmp
icebp
adc
cwtl
mov
arpl
lods
pop
add
adc
ret
outsb
out
mov
jl
addr16
lea
push
scas
jl
inc
dec
sahf
sbb
sbb
cmp
mov
lahf
out
lock
jns
enter
stos
sbb
inc
pop
cmc
xchg
sub
jae
ret
pusha
pop
ds
jo
dec
push
pop
lcall
aam
cmpl
inc
mov
xchg
bound
ret
and
mov
lods
roll
scas
jns
or
pop
lods
lea
or
inc
test
jg
bound
divl
pushf
cmp
mov
lods
inc
in
scas
mov
fisttpll
in
and
push
scas
popf
adc
pop
stos
lods
outsb
xor
mov
clc
pop
inc
leave
out
inc
xorl
or
fnstsw
arpl
add
add
mov
fwait
rclb
pop
or
aad
sbb
fwait
add
cmp
nop
add
sbb
jnp
pusha
jne
dec
imul
mov
inc
sbb
fs
cld
cmp
imul
orl
test
jg
cmpsb
jge
pop
cwtl
leave
xchg
outsl
mov
mov
or
push
les
ja
stos
lods
pop
outsl
aad
pop
fnsave
iret
mov
clc
shrl
cld
stos
sbb
loop
test
add
data16
pushf
inc
cltd
xor
or
arpl
cltd
cltd
loopne
sti
cmp
add
push
adc
inc
enter
dec
divl
dec
scas
fbstp
add
or
add
inc
cltd
daa
mov
xor
test
test
popf
pop
dec
cmp
icebp
cmpsl
setp
sbb
mov
xchg
sbb
sub
mov
sbb
dec
mov
in
out
fildll
lcall
sbb
adc
andl
sbb
cli
movsl
shrb
cmpsl
mov
int
xchg
aaa
xor
add
sarb
cli
addl
push
jmp
cmpsl
popf
pop
inc
call
fildll
gs
loopnew
jno
sub
mov
sbb
jbe
outsl
pop
inc
adc
mov
addr16
ljmp
jo
adc
sbb
sbb
add
rcr
inc
add
je
aam
and
divl
add
not
add
add
test
jg
bound
jmp
add
test
ljmp
shrl
mov
sahf
inc
adc
xor
jl
jae
push
ret
shl
jge
xchg
mov
mov
jp
stos
xchg
mov
push
iret
pop
push
iret
adc
dec
aad
mov
sti
test
and
inc
xor
in
pop
xchg
dec
xchg
das
fisubs
lahf
sub
push
mov
sbb
jl
pusha
mov
sbb
insb
lahf
xor
scas
pop
sahf
and
les
aaa
out
imull
inc
xor
mov
ds
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
mov
incb
ret
lods
push
and
lods
push
push
and
out
xchg
inc
out
cmp
push
fs
roll
scas
push
mov
push
cmpl
mov
ja
xlat
rcr
inc
std
inc
in
aam
punpckhdq
jo
fcompl
dec
ljmp
mov
call
push
jo
hlt
sbb
arpl
or
dec
sub
and
ja
in
roll
and
mov
pop
push
loopne
scas
lcall
fidivrs
inc
xor
jbe
pop
mov
fbstp
cmpsl
push
push
mov
mov
pop
imul
pop
and
inc
ds
ret
pop
pop
add
push
xor
mov
inc
sahf
mov
pop
cmp
dec
sti
not
sub
dec
xchg
mov
out
mov
std
cltd
or
mov
and
testb
inc
je
scas
jge
adc
sub
into
dec
jle
pop
imul
fwait
inc
shl
insl
push
aad
mov
mov
jle
loop
push
pop
lods
outsl
call
dec
addl
jns
int3
mov
and
inc
out
or
jb
pusha
adc
pop
cmpsl
push
loope
adc
ret
jle
icebp
adc
cmp
das
movsl
faddl
and
lods
ja
add
ret
dec
lcall
rorl
pop
xchg
xchg
pop
pop
or
subb
shll
xchg
add
enter
movsb
loop
hlt
dec
adc
leave
cmp
stos
loop
sti
inc
push
ss
jnp
insl
cmp
out
out
incl
and
jecxz
and
int
movsb
mov
push
dec
dec
mov
pop
and
imul
pop
popa
fwait
arpl
cmp
js
mov
xlat
mov
int3
pop
push
push
mov
into
hlt
sub
sbb
jne
ja
std
les
mov
fsub
mov
mov
mov
pop
fsubs
gs
leave
jb
sub
xor
cli
aad
js
rorb
scas
dec
add
popf
xor
adc
mov
aam
and
cmc
mov
push
jge
mov
int
mov
xchg
loopne
ss
jle
jp
mov
je
cmp
inc
pop
pusha
orl
jecxz
loop
and
jg
jbe
inc
movsl
mov
shl
out
clc
jmp
pushf
orl
addr16
cld
insb
icebp
fsubl
xchg
cmp
pop
ficompl
mov
push
and
mov
in
xor
xor
or
or
insb
loop
iret
push
or
mov
in
mov
cmp
hlt
xchg
std
xchg
mov
cwtl
pushf
iret
cmp
popa
fstpl
adc
cld
lods
mov
movl
test
daa
add
dec
gs
xor
xchg
mov
jnp
stc
stos
inc
cmc
inc
xor
push
push
cli
and
fsubp
mov
fwait
push
xchg
iret
adc
mov
std
imul
mov
push
lret
push
or
or
popf
or
dec
in
ss
arpl
sbb
pushf
imul
lods
mov
or
sbb
sub
fidivrs
pop
aam
and
cmp
repz
dec
and
or
vcvtsi2ssl
push
or
pushl
imul
rorb
adc
mov
andb
pop
inc
push
cltd
sub
test
arpl
fldcw
push
lea
xchg
xchg
sub
adc
push
in
inc
sbb
lea
cltd
xchg
testl
inc
sub
xchg
push
pop
push
sbb
stos
xchg
mov
lds
fwait
fwait
xlat
push
adc
fwait
xchg
cmp
icebp
or
cli
sbb
cmp
lods
sahf
inc
xchg
sbb
push
mov
dec
sarl
icebp
test
add
js
je
adc
pop
loopne
cmpsl
add
jb
jl
sbb
jl
dec
in
ret
inc
fdivr
out
mov
inc
adc
mov
test
dec
push
push
adc
loope
lret
mov
pop
in
ja
nop
sahf
sub
push
mov
or
or
aam
dec
je
inc
sub
cmp
xchg
jmp
ret
inc
sbb
leave
pusha
xor
rorb
or
push
mulb
bound
pop
stos
lcall
dec
mov
sbb
fwait
das
fldcw
xor
cmp
cmc
push
jmp
cmp
popf
jmp
push
push
shrl
pop
cs
adc
xchg
test
sub
cwtl
and
subl
sub
enter
jbe
push
je
in
loop
scas
adc
jae
mov
lret
int3
sti
adc
cmpps
stc
adc
dec
out
dec
repnz
nop
rolb
je
xor
ss
adc
pop
jmp
and
clc
lahf
adc
popa
scas
sbb
jno
mov
mov
inc
cmc
cmp
sbb
jg
mov
lahf
cmpsl
dec
and
push
call
scas
fwait
pop
or
push
adc
pop
imul
lcall
dec
or
push
mov
or
loope
jb
ret
dec
sub
in
add
loopne
xchg
mov
adc
dec
fadds
sbb
gs
push
je
stc
jno
fadd
adc
sub
ret
insb
int
jp
testl
loope
cmp
out
mov
sub
xor
dec
cmp
cs
inc
ss
jnp
push
mov
cld
or
jmp
mov
subb
mov
outsb
push
aaa
lretw
dec
push
lahf
sbb
aaa
sub
stc
push
ljmp
or
jb
xchg
and
rcrl
sbb
xchg
movsb
jmp
lods
fidivs
bnd
jmp
and
add
test
mov
in
repz
shl
dec
call
repz
clc
dec
iret
notb
pop
enter
push
mov
test
push
in
xor
cmpl
pop
mov
dec
adc
xchg
pop
flds
js
pop
add
enter
scas
aaa
push
rcrl
mov
dec
push
lods
insb
push
in
jg
rorb
test
aas
mov
repnz
idivl
cmp
xor
xor
push
daa
jbe
scas
mov
in
fsubrs
add
jns
clc
stc
push
das
fisubrl
inc
lods
roll
add
or
push
adc
jecxz
addr16
bound
repz
push
fcoml
sub
mov
imul
cmpsl
ja
lret
inc
cmpsb
into
insb
stc
icebp
add
cmpsb
mov
mov
jae
inc
js
aas
daa
xchg
stos
ret
fwait
ret
pop
pop
inc
stos
stos
xchg
or
bndldx
push
dec
movsb
stos
mov
in
fs
adc
lret
imul
cld
mov
testb
rcll
stc
sbb
ret
gs
das
push
outsl
das
lock
or
dec
mov
enter
test
lret
adc
roll
push
daa
jg
xchg
fcompl
in
rorl
addr16
sub
pop
push
fisubrl
aad
inc
ret
sub
addb
scas
sbb
pop
add
push
sbb
push
mov
cmp
out
loope
pop
arpl
mov
lret
add
dec
icebp
jecxz
jo
out
lods
pop
sahf
cs
xchg
add
lea
popa
data16
and
mov
inc
add
mov
pushf
outsb
lcall
fiaddl
xchg
or
jmp
ficomps
aaa
add
mov
fs
ret
mov
adcl
inc
sbb
ret
hlt
mov
push
call
sub
aad
jb
scas
add
xor
mov
lahf
adc
scas
sbb
mov
push
aaa
sub
push
xor
mov
addb
lcall
dec
dec
std
mov
pop
pop
xchg
add
pop
adc
out
jmp
adc
mov
lret
jl
xor
pusha
test
call
add
xchg
in
pop
push
ficompl
dec
outsb
jp
in
dec
mov
hlt
in
mov
incl
push
cmpsl
sete
pop
adc
mov
seta
mov
pusha
mov
jg
dec
mov
insb
das
cmpsb
orl
xchg
into
ljmp
popf
inc
inc
fcmove
xchg
push
roll
test
testl
fimull
and
mov
pop
add
ficomps
xor
mov
lahf
xchg
rclb
dec
xchg
mov
mov
imul
jmp
sbb
and
idivl
adc
out
jnp
jge
scas
subb
adc
sub
pop
inc
mov
pop
imul
push
lret
fmull
and
icebp
mov
icebp
add
jae
sbb
in
je
dec
push
adcl
lds
jge
leave
push
shrl
mov
xchg
jo
aas
mov
in
sbb
imul
mov
lods
push
hlt
or
aam
les
mulb
sti
xchg
pop
rolb
popa
daa
fstp
stos
xchg
add
dec
repz
jb
adc
add
xchg
scas
shrl
xchg
loope
fsubp
out
inc
mov
push
jge
cmp
pop
push
loop
adcb
inc
andl
push
pop
mov
xchg
pop
leave
inc
push
jge
out
xchg
sbb
jle
sbbb
mov
push
rclb
enter
popa
add
sub
shll
mov
stc
pop
lock
outsb
bound
inc
xorl
in
mov
mov
mov
fstl
rol
push
lock
and
aam
pushf
mov
into
cs
or
call
pop
sub
push
mov
lock
inc
jbe
gs
adc
in
sub
xchg
mov
lret
jne
jmp
adc
andl
repnz
int
inc
psubd
mov
pop
std
ja
aam
mov
or
out
popf
push
mov
or
pop
cwtl
pop
push
push
fs
loopne
push
mov
mov
or
roll
mov
cld
sub
jnp
or
sbb
xlat
fimuls
mov
ret
repz
mov
insl
data16
sub
dec
pop
mov
cmp
jp
jmp
inc
dec
cmp
gs
jb
mov
sbb
add
std
inc
iret
out
call
sbb
sub
sub
jns
pop
inc
insb
sub
sarb
outsl
in
inc
in
mov
dec
mov
cmpsb
add
cmp
inc
insl
sub
push
scas
outsb
subb
jbe
pop
sbb
idivb
loope
leave
loope
mov
call
cmp
loopne
jmp
sub
fdivrl
test
xlat
popf
and
fimuls
mov
inc
hlt
or
adc
jge
idiv
and
sar
jb
add
jecxz
loopne
dec
in
pop
inc
mov
mov
faddl
sub
out
mov
rcrl
inc
push
aas
cmp
xor
divb
mov
rolb
mov
mov
jecxz
rol
sbb
cmpsb
pop
test
imul
popf
pop
shrl
mov
test
cwtl
dec
mov
jmp
xor
pop
fiaddl
leave
sti
add
out
mov
dec
and
xlat
and
xor
mov
or
in
cld
imul
push
cmp
jle
and
lock
inc
jge
push
cmpsb
js
push
mov
cmp
cli
stos
popa
jge
sbb
sub
jnp
push
sarb
aaa
roll
jnp
sub
cmp
mov
pop
jmp
mov
push
sti
jmp
into
and
lea
lret
cld
push
dec
cli
push
lods
cmp
add
not
popa
and
pop
cmpb
jbe
jp
test
lods
adc
dec
push
addr16
jg
ficompl
mov
loop
mov
and
sbb
push
push
pop
add
clc
mov
dec
inc
or
stos
repz
in
mov
pop
dec
xchg
jp
out
adc
ja
rcrb
in
lret
ljmp
adc
decl
das
shl
das
push
sub
rep
inc
mov
cmp
mov
jb
dec
mov
jle
mov
or
push
sbb
pop
sar
inc
sahf
enter
iret
fcomps
inc
jae
mov
lahf
pop
sbb
pop
dec
inc
mov
hlt
mov
pusha
or
push
shll
push
inc
jg
mov
xor
xchg
ficomps
js
dec
lret
std
push
lea
xchg
dec
inc
add
aaa
jae
mov
aaa
cld
lea
negl
sbb
sub
add
mov
testb
push
sbb
movsb
cld
jbe
movsb
sti
mov
mov
cmpsl
mov
dec
push
loopne
jnp
pop
outsl
cmp
xchg
in
pop
scas
jecxz
jbe
push
push
stos
test
or
in
jno
lahf
mov
mov
add
divb
mov
pop
ss
cmp
xchg
add
lretw
stos
xor
clc
and
push
mov
xchg
sub
repnz
sub
leave
cmpb
sarl
in
xchg
icebp
mov
jecxz
lahf
into
shlb
mov
dec
jge
jnp
add
ret
cwtl
mov
add
and
mov
clc
sub
and
nop
movsb
aad
fcoml
je
mov
clc
sti
jno
jl
inc
cmp
jns
push
bound
enter
rolb
outsl
lock
xor
bndstx
iret
sub
inc
mov
mov
insb
push
in
xor
mov
inc
sbb
mov
int3
cmp
pop
cli
loopne
inc
test
iret
rolb
push
inc
je
lret
jne
rorb
add
adc
cmp
or
add
jne
mov
sahf
adc
xchg
jns
sbbl
orl
pop
add
shll
adc
js
mov
pushf
repz
test
mov
cmpsb
sbb
icebp
jl
mov
jae
and
mov
sbb
mov
sbb
add
fnstsw
mov
orl
das
sbb
cmp
test
jl
mov
gs
xor
push
sbb
xchg
stc
fsub
sbb
cwtl
gs
mov
fidivs
outsb
cwtl
cmp
shrl
pop
stc
inc
cmpsb
or
dec
inc
add
xlat
xor
fwait
adc
xchg
cmp
aad
dec
ret
mov
sub
mov
test
stos
pop
das
sub
stos
mov
mov
les
out
mov
sub
push
cltd
pop
ss
push
mov
jp
imul
add
jbe
mov
cmpsb
adc
mov
mov
xlat
cmp
stos
or
fdivr
mov
insb
arpl
xor
mov
fimull
daa
cmc
movsl
mov
and
fucomp
cmc
inc
pop
jno
mov
andb
mov
rorl
filds
xchg
sub
sub
fstps
rclb
stos
pop
pop
ret
leave
and
cmp
cli
lret
pop
fsubrl
pushf
out
push
or
adc
xlat
push
and
jae
je
std
jecxz
jle
movsl
xor
sub
mov
ret
jno
jo
sti
or
jmp
inc
fwait
in
xchg
fadd
loope
xor
fsubl
out
in
lea
cmpl
lret
xor
bound
loope
jb
mov
dec
add
xchg
lea
test
cld
out
cmp
js
cmp
adc
dec
shrl
ss
jl
les
mov
push
and
mov
aad
dec
das
cmp
mov
push
icebp
mov
jo
rol
adc
cmp
insl
and
cld
xor
sbb
sbb
dec
sbb
fmuls
xor
imul
popl
test
loopne
or
les
lods
inc
pop
lret
cmc
pop
stc
fistpl
add
xor
nop
popa
in
push
lcall
hlt
scas
mov
jne
dec
sbbl
pop
adc
push
imul
pop
xchg
test
loope
sbb
shll
hlt
xchg
push
ljmp
xor
inc
hlt
ficoms
sar
and
pusha
in
in
shll
rclb
mov
repz
mov
sahf
mov
test
testb
jnp
pmullw
loopne
hlt
mov
jns
dec
mov
dec
sbb
sub
pop
das
jg
adc
inc
push
inc
jb
imul
mov
movsb
loope
pop
mov
nop
pop
insb
mov
popa
push
cltd
xchg
push
hlt
lods
and
push
adc
dec
xchg
mov
or
mov
cmpsb
ret
cli
inc
add
loopne
loopne
out
stc
aaa
sbb
loope
test
mov
aad
subps
mov
test
outsb
call
xchg
sub
xorl
xor
dec
jl
aad
lds
sar
adcl
fsubrp
cltd
test
push
mov
test
add
pop
rorl
mov
lods
and
pop
jns
and
cmp
xor
xchg
pop
push
inc
std
movsl
outsb
mov
cmpsb
jno
and
stos
pop
and
jecxz
fistpll
pop
rcll
insl
mov
ret
add
pop
pop
pop
jp
xchg
idivl
or
fucomi
fisttpll
or
adc
outsb
loopne
mov
out
orps
jns
dec
cwtl
stos
sbbl
push
mov
dec
insb
mov
and
add
int
and
cmp
imul
loope
ss
pop
movsb
sbb
lcall
je
stc
xchg
xchg
xor
fstp
sub
stc
loope
adcb
insl
inc
mov
aaa
or
test
shl
and
add
or
mov
jmp
test
jno
jne
mov
add
shrb
sti
mov
outsb
jp
or
dec
or
dec
or
jp
pop
clc
lcall
cld
es
sub
sbb
mov
loop
into
loopne
mov
jbe
sub
add
inc
mov
mov
imul
popf
or
jns
ja
adc
or
adc
pop
xchg
xchg
stc
mov
bound
dec
aas
popa
xchg
cltd
iret
xor
popa
or
les
adc
dec
sbb
adc
jmp
outsb
inc
pop
sbb
pop
jp
fidivl
fisubs
cmc
add
clc
jne
sbb
mov
repnz
jne
shl
or
xchg
xchg
lret
call
sarb
lods
cmc
fyl2xp1
push
cwtl
les
xchg
pusha
lcall
mov
js
sbb
loop
lock
jl
aam
cs
imul
sbb
imul
sti
stc
mov
pop
xor
add
fimuls
cmc
enter
lods
cmc
cli
xor
lret
or
rcrl
mov
ljmp
xor
add
mov
shlb
call
stos
repnz
fistps
jb
or
loopne
mov
mov
push
stc
test
enter
mov
subb
mov
xor
pop
pop
std
pop
int
push
add
cltd
inc
les
ret
mov
fwait
fwait
sub
and
push
in
movsl
mov
xor
inc
mov
push
inc
mov
popf
inc
clc
inc
fwait
int3
std
int3
push
or
sub
jmp
add
fildl
in
adcl
icebp
fsubrl
popa
xor
jecxz
test
or
cmc
sahf
or
es
lods
sbb
lock
out
mov
mov
pop
std
aaa
xor
jno
vmovaps
les
and
shrb
mov
jg
mov
ret
inc
jb
inc
sbb
iret
sbb
stos
jge
pusha
add
xchg
hlt
pop
aam
mov
and
roll
jge
mov
lods
cli
add
mov
cwtl
sub
sub
xlat
pop
ljmp
popf
xor
adc
push
pushf
and
inc
daa
mov
mov
testl
test
shrl
sub
lds
cmovnp
cmp
push
outsl
push
xchg
pop
loop
aaa
les
push
out
push
pop
sub
int
push
cmp
insl
and
mov
sub
jo
dec
pushw
inc
add
sub
adc
pop
pop
ds
aad
lcall
imul
jl
jl
js
jl
sbb
lahf
xchg
xor
cmp
out
add
sub
xor
hlt
popa
neg
mov
movsb
out
bound
mov
pop
dec
jb
mov
scas
lock
lds
clc
inc
jno
aad
pop
popf
rcrl
xor
mov
inc
inc
imul
shrl
mov
ds
test
fstl
test
divb
and
xchg
scas
mov
sbb
hlt
popf
mov
arpl
lret
push
jne
in
sbb
pop
push
mov
ret
mov
cmp
aad
rolb
enter
mov
mov
call
push
jmp
aad
lahf
or
jo
sti
ror
jno
dec
mov
add
mov
add
push
mov
push
push
lods
xchg
aam
lahf
inc
out
mov
inc
lret
mov
inc
imul
sbb
sub
xchg
and
and
nop
test
mov
mov
popf
fadds
imul
cmpl
daa
mov
test
dec
xchg
or
inc
cmp
ret
popa
les
dec
sbb
and
mov
or
adc
paddq
shl
jg
sbb
es
jecxz
dec
xor
psrad
std
ficoml
ror
lahf
jl
fsts
fistpl
push
xchg
pop
imul
dec
xor
sarl
test
mov
xlat
repnz
jge
adc
lea
dec
ljmp
mov
inc
loop
arpl
aad
cwtl
les
jge
adc
les
mov
loop
sbb
xchg
and
mov
or
inc
mov
iret
add
int3
sub
lods
mov
and
mov
es
sbbb
dec
cmp
movb
jb
mov
or
dec
pop
add
add
insb
repnz
or
out
fimuls
sti
inc
jno
inc
enter
sub
in
sarb
imul
sbb
mov
pop
cmp
mov
std
movsb
sbb
sbb
pop
aaa
mov
ret
jg
mov
adc
xchg
cmp
mov
inc
insl
or
aad
xchg
mov
pop
jg
fimuls
push
jge
pop
dec
stc
fdivs
xchg
dec
mov
and
jae
std
sbb
mov
cmp
adc
sub
xchg
ficoms
add
notl
cmp
sbb
jne
fnstsw
add
or
mov
inc
and
cli
int3
imul
les
lock
push
push
sub
test
dec
add
fdivrs
jge
jp
pop
or
mov
push
into
sub
aam
into
xchg
ja
out
cmp
xlat
add
push
lds
dec
xorl
add
xor
dec
mov
lret
fisubl
lea
out
pop
or
jmp
loope
fwait
cmp
dec
inc
mov
mov
imulb
mov
sub
sahf
lret
sub
scas
push
stos
jbe
pop
loop
aaa
mov
out
stos
cmp
cmpl
sbb
add
jo
pop
stos
fucomi
sub
fsubr
cs
mov
and
mov
inc
aam
add
cmp
lock
dec
cltd
mov
scas
jmp
inc
xor
imul
pushl
int3
cmp
enter
cmp
mov
and
shll
dec
jle
das
into
shl
adc
add
inc
lret
cmpsb
and
adc
andb
pop
add
in
cmp
or
xchg
dec
xor
pop
xor
ja
mov
mov
ret
dec
inc
push
insl
xlat
or
add
inc
jp
pop
jge
rcl
ljmp
xlat
fdivrl
pop
decb
and
mov
pop
popa
push
lret
loop
hlt
xchg
leave
xor
fstpt
xorb
rorb
mov
sahf
or
jno
xchg
insb
jae
out
add
aaa
push
xor
dec
test
pop
fnsave
sbb
cwtl
popf
data16
xchg
adc
jnp
daa
push
enter
adc
jbe
inc
ds
xchg
mov
jo
movsl
scas
jge
fnsave
push
sub
push
and
mov
lcall
aas
dec
pop
xchg
cmp
cmpsb
pop
movsb
sbb
cmp
inc
test
sub
push
test
sarb
push
and
inc
mov
jbe
sub
shll
mov
mov
std
jnp
loope
or
xor
in
jb
jge
mov
daa
cmpsb
mov
dec
test
dec
outsl
outsl
insl
fs
mov
jp
icebp
push
lods
mov
push
inc
jne
ds
jg
and
dec
cli
sub
pusha
inc
adc
loop
inc
sub
aad
dec
pop
int
loopne
and
repnz
cs
mov
dec
outsl
pusha
pop
fwait
push
fdivrs
sub
xchg
adc
int
mov
insb
jns
sub
jg
aas
inc
or
jecxz
imul
mov
cmpsb
xchg
inc
ficompl
xchg
and
insl
inc
aad
xchg
dec
xchg
enter
aas
es
rclb
int
pop
mov
adc
jae
imul
repnz
mov
and
scas
cmp
pop
or
cmp
sbb
cmp
or
jb
fsts
rcl
push
aaa
std
int3
mov
stos
jno
loope
inc
sub
dec
insl
iret
pop
rcrl
sti
lock
mov
out
pop
push
sub
popf
rcrl
inc
cmpl
push
mov
push
hlt
mov
mov
add
jmp
jmp
stc
mov
dec
cmpsl
sbb
mov
out
pop
push
push
or
mov
pop
lret
dec
loop
int
sub
enter
fistps
inc
sub
popa
push
lret
test
pop
ljmp
pop
add
pop
scas
pop
push
xor
xchg
sbb
cmp
gs
cli
out
stos
scas
movsb
loopne
mov
movsl
add
das
mov
mov
xor
test
xchg
lsl
sub
in
mov
enter
fisubs
mov
rorb
dec
pop
cmp
sub
fwait
out
mov
pop
call
fldt
push
inc
lds
mov
stos
jns
mov
cmp
push
pop
leave
and
push
mov
dec
fcmovu
sub
in
pop
sbb
iret
bnd
ret
fmull
pop
pop
cmpb
push
fdivrs
cmpl
and
int3
out
jno
loope
cmp
ret
incl
in
iret
cwtl
pop
push
nop
mov
sets
pop
lock
das
sbb
inc
pop
in
or
imul
add
sbb
or
scas
sbb
mov
and
aaa
out
int3
cltd
pop
mov
and
xor
decl
pop
mov
sbbb
imul
jg
push
inc
aad
test
dec
mov
push
mov
pop
cmp
dec
jnp
and
adc
popa
orb
adc
dec
cmpsb
call
test
jnp
ret
inc
jp
cli
call
loope
push
insl
push
aaa
xchg
push
xor
mov
mov
sub
jle
adc
mov
dec
cli
rcrl
insb
jb
cli
inc
push
push
aas
shll
inc
xor
popf
mov
xor
cmc
nop
lds
repz
and
push
jl
mov
test
mulb
pop
in
push
mov
mov
insb
repz
int3
jl
lods
jl
inc
inc
add
int3
mov
pop
xor
int
mov
and
dec
sbbb
xor
pop
iret
pop
sbb
and
lods
cmp
ljmp
aaa
mov
xchg
jmp
icebp
mov
push
or
xor
adc
jmp
shll
mov
movsb
adc
ljmp
or
sub
xchg
adc
aam
mov
pusha
sub
pop
pop
in
and
pop
jnp
arpl
lret
das
push
dec
incb
fidivs
outsl
mov
ret
fildll
cmp
cmpsb
cmp
aad
jo
aad
notb
fisubl
mov
pop
xor
push
dec
data16
pop
arpl
push
pop
inc
adc
test
pop
int3
mov
lods
rolb
fsubr
add
pop
subb
lahf
ret
out
insb
push
add
xor
mov
sbb
movsl
sub
aas
addr16
or
cltd
out
xchg
xlat
add
loope
mov
jbe
jmp
aaa
icebp
adc
into
dec
push
or
mov
and
cmp
xchg
ficomps
ja
or
nop
scas
imul
pop
push
aad
das
dec
mov
jae
shl
mov
lret
adc
and
rorl
fsubr
fsubrs
cmp
add
inc
idivl
mov
test
aas
enter
inc
fs
fsubrl
adc
fcmovne
cmpl
push
in
xchg
rclb
push
shr
push
jge
mov
mov
add
mov
mov
ljmp
push
popa
inc
or
test
add
mov
inc
shll
pop
sub
mov
pop
and
push
ss
ljmp
fsubs
xchg
scas
jbe
mov
pop
repnz
jb
lret
daa
push
lret
adc
stc
pop
mov
mov
dec
or
movl
adcl
sbb
xor
aaa
shl
test
mov
mov
cwtl
fwait
std
inc
or
fdivr
adc
js
inc
adc
das
bound
pop
lock
adc
dec
dec
sbb
xchg
cltd
mov
xchg
mov
push
lret
add
outsb
sub
movsb
xchg
int
gs
push
lcall
jb
stos
stc
jle
jns
fmuls
ja
test
aaa
clc
roll
xchg
divl
dec
ds
mov
and
xor
push
xchg
std
add
mov
sbb
cld
clc
out
push
inc
xor
sti
popf
cli
or
mov
fmull
subl
icebp
je
and
xchg
aas
rcrb
pusha
sub
mov
fwait
lret
or
out
movsb
outsb
rorb
mov
fldt
pop
cmp
mov
pop
addb
imul
call
push
imull
or
hlt
mov
push
mov
lret
mov
ljmp
mov
aaa
lahf
fwait
test
jno
in
andl
and
adc
xor
or
jl
pop
mov
ss
sub
sbb
ficoml
in
pusha
or
mov
push
sbb
xchg
mov
cmp
adc
dec
test
lods
insl
adc
lock
mov
adc
ss
or
xor
fdivp
fs
dec
pushf
sub
scas
movsl
xor
call
ja
pop
fs
and
xor
clc
adc
arpl
push
imul
mov
bnd
jge
les
pusha
cli
inc
imul
push
fwait
std
cmp
loopne
pop
in
movsb
mov
push
sbb
call
lea
dec
xchg
sub
pop
push
sub
xor
shll
sti
sub
fwait
aas
stc
subl
pop
popa
rorb
push
std
aas
data16
mov
inc
stos
cltd
add
mov
ds
mov
shr
test
cwtl
xor
mov
push
jecxz
movsb
cmc
jmp
call
mov
lcall
pusha
add
cmp
pop
sbb
rcll
mov
xchg
sub
pop
mov
and
insl
iret
add
aas
dec
imul
je
arpl
jge
shll
mov
dec
add
mov
pop
clc
xor
fsubrl
popf
movsl
scas
mov
add
xor
aad
mov
imul
or
mov
iret
data16
or
jp
call
popa
push
mov
push
sarb
cmp
mov
mov
pusha
xchg
stos
dec
xchg
mov
jae
movsl
idivb
dec
movl
push
and
fsubr
dec
inc
ja
scas
pop
push
adc
cltd
push
scas
shlb
aas
int3
fsubrs
and
cld
pop
lock
mov
les
dec
rolb
outsl
hlt
inc
or
sbb
fs
loope
xchg
jge
jmp
lock
lods
cld
mov
pop
aas
arpl
in
push
in
mov
mov
or
les
mov
rcll
mov
lahf
push
mov
dec
sbb
pop
xchg
les
push
or
into
xchg
fcmove
fdivl
xor
dec
movsb
aas
inc
add
or
cmc
or
add
fsubrs
popf
test
orl
movsl
push
bound
mov
add
jbe
mov
lret
xor
into
into
das
mov
xor
sbb
mov
mov
lret
cmp
leave
decl
sub
sbb
lea
nop
test
mov
xor
aas
adc
xor
cli
int
mov
ss
add
icebp
stc
push
dec
cld
xor
cmp
lcall
pop
dec
inc
gs
ficoml
clts
adc
pop
adc
mov
ret
nop
fbld
xor
jae
jl
xchg
js
filds
xor
xchg
sahf
jmp
fistps
and
sbb
mov
lahf
pop
and
cmp
in
in
ficoms
movsl
mov
mov
adc
vprotq
pushf
mov
jmp
imul
cs
lret
popf
jns
pop
mov
stos
mov
sti
cs
inc
sbb
stc
push
sub
push
mov
mov
mov
into
stos
hlt
cmp
call
xor
lock
flds
push
jl
jno
in
inc
cmp
sbb
xchg
cmp
shll
mov
xor
fsubr
xchg
loope
pushf
stc
sbb
or
mov
es
movb
mov
dec
shl
lret
xor
pop
sbb
arpl
cmp
insb
fnstsw
jmp
xchg
and
mov
nop
jecxz
cmpsb
xor
test
mov
stos
lcall
scas
push
jae
push
xor
push
and
outsb
lret
xlat
xlat
mov
jmp
test
push
sbbb
das
xor
cwtl
lods
inc
sub
or
cmp
jge
or
jo
sub
in
pop
inc
lods
shrb
xor
loope
iret
xchg
jmp
push
sub
loope
cmpsb
repnz
inc
inc
int3
pop
fstpt
les
mov
sti
xor
mov
lahf
jmp
out
lahf
test
inc
sub
aaa
shrb
scas
ret
jbe
adc
ret
mov
repz
icebp
movsb
add
popf
clc
cwtl
and
mov
cmp
sbb
stos
adc
mov
mov
jno
or
or
inc
cmp
xorl
je
fstpl
and
sub
or
pop
test
nop
push
lods
ds
jae
add
out
dec
test
sub
div
dec
inc
xor
xchg
xchg
jns
sarl
push
outsb
cmp
shrl
mov
repz
jg
je
aas
ss
mov
mov
in
push
jle
lahf
stc
xor
push
or
movsb
fistps
pop
pop
and
int3
push
sti
cmp
and
xor
call
cld
pop
rcr
jmp
dec
pop
mov
data16
pop
jnp
cmpsb
cmpsl
mov
hlt
or
mov
dec
jae
push
adc
hlt
and
rorb
mov
shlb
jg
sub
mov
insb
cmp
or
push
dec
jbe
xchg
inc
and
sbb
adc
ss
or
mov
inc
ljmp
dec
mov
and
pop
lds
js
add
dec
cmp
mov
pop
adc
jecxz
add
inc
imull
sbb
cltd
jnp
cltd
mov
and
sahf
inc
inc
or
sahf
jns
push
adcb
and
mov
mov
mov
add
jecxz
test
jmp
sub
adc
add
sub
cmpsl
iret
subl
inc
jp
xchg
cmp
idivb
mov
pop
sarb
pop
and
enter
neg
xor
scas
jno
inc
pop
xor
pop
cmp
scas
call
scas
aad
push
pop
in
xor
pop
jb
push
addr16
pop
push
pop
cli
mov
test
das
rorb
and
shl
sarb
rolb
aam
sarl
pop
icebp
pushl
pusha
xsha256
cmpsb
xchg
pop
jns
mov
jb
lahf
or
or
pop
scas
repnz
pop
cmc
sub
stos
cltd
lcall
dec
jo
nop
sbb
adc
inc
jmp
pop
aas
imul
cmp
xchg
push
mov
xor
mov
xchg
pushf
sbb
jo
inc
out
stos
and
push
mov
lret
out
jae
pushf
mov
mov
pop
or
aam
insb
ret
cmpsl
mov
mov
xchg
fdivs
mov
mov
cwtl
xor
daa
pop
xlat
fwait
mov
pop
or
in
or
mov
mov
sti
das
adc
jbe
int
ret
or
cmp
sbb
sbb
lcall
test
mov
ds
mov
cli
sub
subl
icebp
imul
test
lret
mov
sbb
hlt
jae
mov
push
ja
hlt
jae
inc
mov
adc
mov
outsl
and
push
test
mov
loopne
xor
ret
fldenv
int3
inc
or
orl
jo
aas
jecxz
iret
jge
leave
repnz
mov
pop
jg
int3
pop
out
mov
daa
lahf
lret
mov
mov
popf
pop
fisttpll
cmp
arpl
mov
xchg
inc
inc
mov
das
lcall
fmul
xchg
push
cltd
subb
imul
xor
hlt
mov
cmpsl
fnstenv
or
adc
jnp
mov
ficoml
mov
and
ja
scas
sbb
jnp
sbb
loop
adc
bound
jle
sti
repnz
sbb
call
out
cmp
out
inc
and
sbb
mov
adc
push
lcall
cmp
out
fdivr
out
lods
out
rclb
push
sti
outsb
mov
test
shr
cmp
inc
loope
mov
aas
xor
fs
push
xchg
xchg
lcall
frstor
lret
test
pop
notl
xchg
hlt
push
loop
lods
and
sub
jle
push
clc
jmp
jnp
mov
movsb
inc
xchg
ss
lods
call
mov
int3
aam
mov
adc
inc
rol
aas
cmp
cltd
adc
lock
pop
in
pop
sub
lret
popa
in
je
or
in
enter
sub
mov
mov
mov
outsl
les
arpl
jns
aas
cwtl
ret
mov
movsb
roll
jmp
push
xchg
xor
fsubs
loopne
daa
xchg
dec
int
shrb
andb
pop
or
imul
mov
inc
jnp
cmp
xor
in
icebp
stc
or
pop
pop
call
scas
les
repnz
cmp
cmp
lret
gs
inc
insb
adc
mov
das
iret
lahf
xchg
in
mov
xchg
inc
xor
add
in
mov
stos
push
sub
xor
cwtl
aad
push
pop
adc
push
je
outsb
shll
int3
push
cmpsb
test
push
imul
mov
add
rolb
sub
mov
int3
sub
jnp
add
ret
sub
or
das
push
cltd
enter
dec
es
sahf
addr16
out
scas
push
adc
pop
pushf
jbe
insl
es
dec
adc
faddp
fnstsw
sbb
daa
mov
les
sbb
jecxz
pushl
cmp
lcall
fwait
subb
and
fimull
add
jns
adc
mov
mov
fwait
outsb
inc
push
loop
fistl
stos
fwait
mov
adc
leave
and
push
cmp
cmpsl
push
std
lods
out
lods
dec
dec
pop
fdivrs
cli
test
stc
xchg
jmp
and
cmp
push
ja
dec
push
inc
das
popf
lcall
imul
xor
fmul
push
adc
pushf
dec
push
rolb
aam
sub
mov
icebp
sbb
cmpsl
bound
mov
or
xor
mov
pop
mov
sub
mov
leave
mov
push
cmp
out
sub
dec
icebp
push
faddl
jp
in
ja
and
icebp
mov
dec
pop
test
jns
and
fisttpl
inc
aam
push
jle
xlat
push
push
insl
pop
mov
loopne
repnz
imul
or
sbb
pushf
pop
data16
in
fidivrl
lret
or
out
arpl
push
cmp
jo
cmp
hlt
cld
aad
dec
sub
inc
cmp
je
lret
mov
xor
or
pushf
xchg
insl
mov
dec
clc
push
jns
and
scas
add
repnz
and
bound
fs
aad
fwait
lea
insb
loope
lcall
test
or
shrb
stos
mov
and
jo
mov
cmp
call
jb
mov
outsb
ss
inc
and
outsb
dec
jae
inc
and
cmp
mov
test
test
inc
cmp
and
xchg
or
rolb
hlt
in
sbb
inc
jg
popf
inc
dec
movsl
lcall
push
cmp
pop
dec
ds
movups
lea
cs
test
cmc
loope
mov
cwtl
push
lds
xchg
jo
loop
pop
test
adc
mov
jg
xor
das
push
ficompl
cmp
fprem
daa
in
pop
add
jmp
sbb
pop
mul
jle
in
loope
shlb
rorb
push
fldl
push
subl
ret
fisubrs
scas
les
sbb
pop
sbb
add
xlat
adc
inc
imul
or
data16
inc
mov
or
outsb
push
sub
mov
addr16
pusha
or
xor
mov
mov
sub
pop
ret
leave
mov
test
bound
xchg
lods
mov
push
adc
les
fmull
xlat
push
and
mov
push
and
mov
sbb
aaa
dec
mov
pushf
mov
scas
imul
ljmp
inc
lods
sbb
jb
xchg
mov
jne
or
adc
mov
push
incb
adc
in
pushf
sarb
lret
push
cmp
cmpsb
mov
push
ja
sbb
scas
add
add
mov
pop
sbb
lock
push
cli
rclb
jp
xor
aad
mov
scas
aaa
adc
adcb
dec
pop
fistl
mov
out
mov
aad
sbb
les
bound
aad
scas
fstpt
pop
mov
sub
enter
filds
xchg
dec
mov
fucomip
arpl
push
inc
sbb
out
ds
std
inc
daa
sub
imul
mov
push
int3
add
pop
inc
lret
add
ds
fcompl
ds
xor
dec
testb
scas
aam
mov
test
in
aam
scas
std
movsl
sbb
push
add
jmp
pushf
sbb
cli
fdivrl
daa
les
out
repz
orb
mov
and
sahf
flds
movsl
scas
inc
dec
icebp
mov
movhps
cmp
popl
xchg
pop
fimuls
fdivl
push
loop
or
out
mov
int
sbb
jns
and
sbb
jmp
inc
ja
in
mov
pop
mov
les
cmp
and
jbe
clc
pop
div
add
push
xor
xor
mov
icebp
mov
pop
outsl
pop
push
repz
in
adc
add
add
add
add
xchg
add
inc
xchg
popa
add
jp
test
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
shll
