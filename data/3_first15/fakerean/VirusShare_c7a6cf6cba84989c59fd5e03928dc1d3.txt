and
call
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
sub
push
push
push
mov
xor
push
mov
mov
push
push
push
push
call
mov
push
push
push
push
mov
call
cmp
mov
jne
mov
mov
push
push
push
push
call
cmp
mov
jne
mov
mov
push
push
push
push
call
lea
lea
push
push
mov
mov
push
push
mov
mov
push
lea
push
push
mov
lea
push
push
mov
lea
push
mov
push
push
push
call
mov
add
push
push
push
push
call
mov
push
push
mov
push
push
add
call
dec
cmp
jle
mov
push
push
push
push
call
mov
dec
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
lea
or
inc
add
iret
call
mov
push
push
push
mov
call
add
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
push
call
mov
lea
cmp
jb
lea
call
lea
movl
call
push
lea
movb
call
push
lea
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
jmp
push
push
lea
call
mov
lea
mov
call
cmp
jne
push
lea
call
mov
mov
test
mov
jne
lea
push
lea
push
push
lea
push
push
push
mov
push
call
add
jmp
push
push
call
add
test
je
lea
push
lea
push
push
push
call
add
mov
call
mov
mov
mov
lea
push
push
push
push
mov
mov
call
mov
cmp
je
mov
push
push
push
push
call
mov
push
push
push
push
call
cmp
je
push
push
push
lea
mov
lea
in
add
iret
call
mov
push
push
push
push
call
cmp
je
push
push
push
mov
call
push
push
push
mov
call
pop
lea
movl
call
lea
movl
call
pop
push
mov
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
call
push
mov
movl
call
mov
mov
push
push
push
push
call
mov
cmp
je
push
lea
lea
xor
add
sti
jno
add
dec
and
movb
call
lea
movb
call
mov
push
push
push
push
call
mov
test
jne
lea
push
lea
push
lea
push
mov
lea
push
mov
push
push
push
call
add
jmp
mov
lea
lea
push
push
push
call
add
mov
push
push
push
push
call
dec
cmp
jne
push
dec
push
push
mov
call
mov
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
push
mov
push
mov
push
push
push
mov
call
lea
mov
mov
push
push
push
push
movl
movl
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
lea
add
push
push
mov
push
push
call
mov
lea
lea
add
push
push
mov
push
push
call
mov
lea
lea
add
push
push
mov
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
lea
mov
call
push
lea
movb
call
push
lea
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
mov
mov
mov
call
lea
mov
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
cmp
add
jne
push
mov
push
lea
fadds
add
add
push
push
push
call
test
pop
je
push
mov
call
push
push
mov
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
push
call
movsbl
push
push
mov
call
mov
call
mov
pop
movl
ret
nop
nop
push
mov
push
call
mov
push
test
je
lea
lea
push
lea
push
mov
lea
push
push
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
push
mov
lea
push
push
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
mov
jne
test
push
je
lea
lea
push
lea
push
mov
lea
push
push
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
push
mov
lea
push
push
push
push
call
add
mov
call
pop
ret
test
je
lea
push
lea
push
push
push
call
add
mov
call
pop
ret
lea
lea
push
push
push
call
add
mov
call
pop
ret
push
push
mov
push
mov
sub
push
mov
lea
call
lea
movl
call
mov
movb
call
push
mov
call
mov
test
je
push
lea
call
push
jmp
push
lea
call
push
lea
call
mov
mov
push
push
call
mov
call
add
push
push
mov
call
mov
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
call
mov
xor
push
movl
mov
mov
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
mov
mov
jae
inc
add
mov
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
inc
add
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
push
mov
mov
push
call
lea
lea
push
push
mov
call
mov
movl
mov
call
push
call
mov
xor
cmp
lea
sete
mov
mov
push
push
mov
call
mov
mov
mov
call
test
mov
jne
mov
test
je
mov
mov
push
push
push
push
call
mov
jmp
push
call
mov
mov
push
call
push
mov
call
push
mov
call
push
mov
call
mov
jmp
mov
test
je
mov
push
push
push
push
call
jmp
push
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
mov
mov
mov
lea
xor
push
push
push
push
movl
mov
mov
movl
movl
movl
call
cmp
jne
mov
call
test
je
testb
jne
testb
jne
mov
jmp
movl
mov
mov
lea
push
push
push
mov
call
mov
lea
push
push
push
mov
call
mov
mov
cmp
mov
jl
mov
test
je
mov
mov
push
mov
call
mov
mov
mov
mov
push
call
mov
mov
push
lea
call
test
je
mov
push
mov
lea
push
push
call
movl
movl
lea
jmp
mov
mov
push
mov
call
mov
mov
push
lea
call
test
je
mov
push
mov
lea
push
push
call
movl
movl
lea
call
mov
movl
test
je
mov
mov
jmp
test
je
mov
mov
movl
and
je
shr
dec
push
mov
mov
push
push
push
call
push
call
add
je
test
jne
xor
jmp
mov
mov
mov
push
push
mov
push
push
push
push
call
mov
lea
push
push
push
mov
call
mov
push
push
push
push
call
push
call
test
mov
je
mov
mov
push
push
push
push
and
call
mov
mov
mov
dec
cmp
jge
cmp
jle
sub
cmp
jle
mov
mov
mov
push
lea
mov
lea
call
test
je
mov
mov
push
lea
push
push
call
movl
lea
movl
call
mov
mov
mov
or
mov
push
push
mov
push
fiadds
push
push
push
mov
push
mov
push
push
mov
movl
push
movl
call
mov
mov
lea
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
sub
add
mov
lea
push
mov
mov
mov
push
push
push
mov
call
mov
lea
mov
push
push
push
push
movl
call
test
je
mov
mov
mov
add
mov
push
push
push
push
mov
mov
call
inc
add
mov
add
add
rolb
dec
jne
mov
jmp
mov
mov
mov
mov
mov
mov
or
mov
push
add
sub
lea
mov
mov
mov
mov
push
push
push
mov
call
mov
mov
lea
inc
push
push
push
push
call
test
jne
testb
je
mov
test
je
mov
lea
push
push
call
mov
mov
test
je
mov
mov
push
call
mov
mov
push
mov
call
jmp
mov
mov
push
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
mov
push
push
push
mov
push
push
call
mov
mov
cmp
je
lea
push
push
push
mov
call
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
call
test
jne
mov
push
push
push
push
call
mov
cmp
je
lea
push
push
push
mov
call
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
push
push
push
push
call
mov
cmp
jne
mov
adc
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
call
add
movl
mov
test
je
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
cmpw
jne
call
cmpw
jne
mov
call
mov
pop
pop
movl
ret
mov
pop
pop
movl
ret
push
mov
push
push
mov
xor
push
push
mov
push
push
call
test
jle
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
test
push
je
push
jmp
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
push
mov
or
push
mov
test
je
mov
mov
xor
cmp
je
push
call
add
jmp
mov
push
push
push
push
call
cmp
je
mov
push
push
push
push
call
cmp
je
cmp
jne
mov
mov
push
push
push
push
call
mov
cmp
je
call
jmp
mov
push
push
push
push
call
cmp
jne
dec
push
push
push
mov
call
lea
call
mov
push
push
push
push
mov
xor
call
test
mov
jle
push
lea
push
push
mov
call
push
lea
movb
call
lea
movb
call
mov
mov
push
push
push
push
call
cmp
jle
mov
mov
inc
cmp
jl
lea
mov
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
lea
call
lea
push
push
push
mov
movl
call
mov
mov
cmp
jge
lea
lea
push
call
mov
mov
dec
cmp
jge
mov
mov
mov
lea
push
push
push
mov
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
out
out
inc
add
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
test
push
mov
je
mov
mov
mov
mov
push
push
push
call
test
jne
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
push
mov
movb
movl
call
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
call
mov
test
jne
mov
mov
add
add
add
mov
add
push
call
add
push
mov
call
mov
mov
push
push
mov
push
push
call
cmp
jne
mov
push
push
push
push
call
push
call
mov
lea
push
push
push
call
lea
push
push
call
add
mov
add
pop
add
lea
push
call
push
mov
add
shlb
insb
jb
add
neg
sbb
push
and
push
mov
push
push
call
mov
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
nop
nop
nop
nop
nop
push
mov
push
call
mov
xor
mov
test
setne
push
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
lea
mov
push
push
push
call
lea
or
xor
push
repnz
not
dec
lea
push
push
call
mov
and
add
cmp
jne
mov
call
pop
pop
mov
mov
add
ret
lea
call
lea
movl
call
push
lea
movb
call
lea
mov
push
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
call
push
mov
call
mov
push
push
push
push
call
push
mov
call
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
call
mov
test
je
mov
mov
mov
add
ret
lea
dec
roll
add
and
add
test
jne
mov
mov
mov
add
ret
push
lea
call
mov
movl
mov
lea
call
cmp
jne
mov
lea
mov
call
lea
movl
call
mov
mov
mov
add
ret
lea
movl
call
lea
movl
call
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movl
movl
ret
sub
lea
push
mov
push
push
mov
push
xor
push
mov
push
push
push
push
call
test
je
lea
push
call
lea
push
call
push
push
push
lea
push
push
call
test
jne
mov
mov
push
mov
push
mov
mov
mov
mov
add
inc
inc
pop
add
add
dec
call
add
mov
mov
pop
pop
pop
pop
test
jne
xor
add
ret
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
push
mov
lea
push
mov
movl
movl
movl
call
mov
mov
push
push
movl
mov
mov
call
add
mov
movl
mov
and
pop
pop
and
pop
ret
nop
mov
mov
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
mov
call
push
push
push
mov
movl
mov
mov
mov
lea
lea
mov
shr
rep
mov
and
rep
mov
mov
jmp
mov
ret
mov
xor
movl
test
je
mov
push
lea
push
mov
push
call
add
mov
mov
pop
pop
pop
mov
pop
ret
xor
mov
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
push
mov
push
push
push
push
call
add
cmp
je
push
push
push
push
call
add
cmp
jne
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
mov
call
push
push
push
mov
xor
mov
mov
mov
mov
mov
cmp
jl
dec
mov
mov
mov
dec
jmp
mov
ret
mov
mov
xor
cmp
jl
mov
dec
jns
mov
or
mov
movl
mov
mov
mov
mov
cmp
jge
mov
mov
inc
mov
inc
jmp
mov
jmp
mov
ret
mov
mov
cmp
jge
lea
mov
sub
xor
mov
shr
rep
mov
and
rep
movl
push
lea
push
mov
push
call
add
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
push
lea
push
push
lea
push
push
push
push
mov
push
call
cmp
jne
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
push
mov
push
call
add
mov
or
mov
jmp
mov
ret
mov
or
mov
mov
mov
cmp
je
mov
mov
lea
mov
test
je
mov
cmp
je
push
push
call
add
mov
cmp
je
mov
jmp
mov
jmp
mov
ret
mov
movl
push
lea
push
push
lea
push
push
push
push
mov
push
call
mov
cmp
jne
mov
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
xor
push
mov
mov
call
mov
add
cmp
je
mov
push
push
call
mov
add
test
je
push
call
add
cmp
jne
add
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
cmpw
mov
mov
je
mov
add
push
push
push
call
lea
push
push
call
add
cmp
je
push
push
call
add
add
mov
cmpw
jne
jmp
movl
push
movl
call
mov
add
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
lea
xor
push
push
mov
call
add
test
je
lea
push
lea
push
push
call
test
je
lea
push
lea
push
push
call
add
push
lea
push
push
call
lea
push
lea
push
push
call
push
lea
push
push
call
add
lea
push
push
push
push
push
push
push
call
mov
call
cmp
jne
pop
pop
mov
pop
add
ret
mov
push
push
call
add
cmp
jne
pop
pop
pop
add
ret
push
call
add
cmp
jne
pop
pop
pop
add
ret
lea
push
push
lea
push
push
push
push
push
push
call
test
jne
pop
pop
mov
pop
add
ret
mov
push
shr
mov
mov
mov
je
mov
mov
mov
lea
push
push
push
lea
push
push
call
test
je
lea
push
call
lea
push
call
push
push
push
lea
push
push
call
test
jne
mov
mov
push
push
call
add
cmp
je
mov
mov
inc
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
nop
push
mov
lea
mov
push
push
push
push
call
add
cmp
jne
mov
pop
ret
cmpl
jae
mov
pop
ret
call
test
push
je
call
add
pop
ret
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
cmp
ja
jmp
mov
ret
mov
ret
mov
ret
mov
ret
nop
dec
jl
add
inc
add
jl
add
jl
add
jl
add
enter
add
jmp
je
mov
ret
mov
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
call
test
je
lea
call
lea
movl
call
push
lea
movb
call
mov
lea
push
call
mov
mov
push
push
push
push
call
cmp
jne
call
jmp
call
lea
movb
call
lea
movl
call
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
mov
mov
xor
cmp
jbe
mov
push
push
mov
push
mov
cmp
jne
mov
xor
mov
cmp
jbe
mov
jne
xor
mov
cmp
jae
test
je
pop
pop
mov
pop
add
ret
mov
xor
cmp
jae
mov
jne
mov
xor
mov
cmp
jae
mov
jne
movzbw
cmp
jb
test
je
pop
pop
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
mov
or
dec
je
dec
jne
mov
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
or
call
mov
mov
test
jne
push
call
add
or
pop
pop
pop
ret
call
test
je
push
call
add
test
jne
mov
jmp
push
call
add
test
jne
mov
cmp
je
cmp
jne
call
test
jne
call
mov
neg
sbb
neg
add
mov
pop
pop
pop
ret
test
jne
mov
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
xor
or
call
sub
je
sub
je
dec
jne
mov
jmp
call
test
jne
call
test
jne
mov
mov
jmp
mov
jmp
mov
test
jne
mov
mov
jmp
mov
mov
mov
test
je
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
mov
test
je
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
mov
test
mov
je
push
call
test
je
push
mov
push
mov
mov
mov
shr
rep
mov
push
and
rep
mov
call
pop
pop
test
je
mov
pop
pop
pop
ret
or
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
test
push
mov
jne
mov
pop
pop
ret
mov
mov
lea
mov
shr
shl
cmp
je
test
je
push
push
push
call
add
mov
mov
cmp
jbe
push
push
call
add
test
jne
pop
pop
ret
mov
mov
mov
mov
mov
pop
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
mov
sub
mov
add
add
cmp
pop
pop
jbe
xor
ret
add
mov
mov
ret
nop
nop
nop
push
push
mov
mov
push
movl
call
add
lea
mov
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
add
mov
mov
push
call
add
lea
mov
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
add
mov
mov
jmp
mov
mov
add
test
je
mov
shr
push
push
push
call
add
jmp
movw
jmp
mov
mov
mov
xor
add
shr
rep
mov
and
rep
mov
test
je
mov
mov
mov
add
shr
rep
mov
and
rep
mov
add
test
jne
pop
pop
pop
pop
ret
mov
out
addb
addb
addl
addb
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
lea
mov
addl
test
repz
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
mov
xchg
test
mov
inc
add
test
lret
add
inc
and
lea
shl
mov
cmp
jne
mov
mov
mov
mov
ret
cmp
jne
mov
mov
mov
mov
ret
cmp
jne
mov
mov
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
mov
mov
push
xor
push
cmp
push
je
mov
mov
test
jne
mov
mov
push
mov
call
mov
mov
add
test
je
mov
push
push
push
call
add
test
jne
jmp
mov
push
push
call
add
test
jne
mov
add
cmp
ja
xor
mov
jmp
mov
test
jne
mov
push
push
call
add
mov
jmp
cmpw
jne
cmp
jne
mov
push
push
call
add
mov
jmp
cmp
jne
mov
push
push
call
add
mov
jmp
mov
mov
push
push
call
add
mov
jmp
mov
mov
dec
lea
push
push
push
call
mov
mov
add
movw
jmp
lea
push
call
mov
push
push
call
add
mov
jmp
call
mov
mov
mov
add
inc
cmp
mov
jne
mov
test
je
mov
mov
pop
pop
mov
pop
pop
add
ret
mov
mov
inc
add
xchg
sub
inc
add
xchg
out
inc
add
push
push
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
push
push
add
nop
mov
push
mov
xor
test
jbe
push
push
mov
mov
xor
mov
and
shr
xor
xor
mov
mov
xor
inc
cmp
jb
pop
pop
pop
ret
nop
mov
push
mov
xor
test
not
jbe
push
push
mov
xor
mov
mov
and
xor
shr
mov
xor
inc
cmp
jb
pop
pop
not
pop
ret
nop
nop
nop
sub
mov
push
push
mov
xor
mov
div
mov
mov
push
mov
mov
xor
div
mov
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
xor
test
mov
jbe
mov
mov
and
and
mov
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
xor
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
inc
cmp
mov
jb
add
mov
inc
cmp
jb
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
call
add
ret
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
call
add
ret
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
call
add
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
push
push
push
push
push
push
push
mov
call
mov
cmp
jne
call
cmp
je
cmp
jne
dec
je
push
call
add
push
push
push
push
push
push
push
call
mov
cmp
je
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
mov
and
sub
je
dec
je
dec
je
or
ret
mov
mov
push
push
push
push
call
ret
mov
mov
push
push
push
push
call
ret
mov
mov
push
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
mov
push
push
push
call
test
je
mov
ret
or
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
add
pop
pop
ret
nop
mov
push
call
xor
ret
nop
nop
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
neg
sbb
and
add
push
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
mov
movl
test
mov
je
mov
mov
mov
lea
push
push
call
add
test
jne
pop
pop
or
pop
add
ret
mov
push
push
call
add
cmpw
mov
jne
mov
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
add
test
jne
test
je
call
cmp
je
cmp
je
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
push
push
call
add
pop
pop
or
pop
add
ret
mov
mov
mov
test
je
push
call
mov
add
test
je
push
push
lea
push
push
push
call
test
jge
cmp
jne
mov
test
je
push
lea
push
push
call
add
test
jne
cmpl
je
mov
or
mov
push
call
add
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
movl
mov
je
mov
mov
mov
lea
push
push
call
add
test
je
mov
push
push
call
add
cmpw
jne
mov
jmp
mov
lea
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
push
call
xor
add
cmp
je
test
je
mov
pop
pop
mov
mov
pop
ret
cmp
je
call
cmp
je
cmp
je
mov
mov
jmp
movl
movl
jmp
movl
movl
jmp
xor
mov
mov
mov
push
push
call
add
or
pop
pop
pop
ret
nop
orb
add
mov
sahf
mov
mov
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
test
je
mov
push
push
mov
call
add
jmp
mov
cmp
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
je
mov
mov
jmp
mov
cmp
je
mov
and
sub
je
dec
je
dec
je
xor
add
ret
mov
push
cltd
push
push
push
call
add
add
ret
mov
push
cltd
push
push
push
call
add
add
ret
mov
push
cltd
push
push
push
call
add
add
ret
mov
mov
xor
and
push
sub
push
je
dec
je
dec
jne
mov
lea
push
push
mov
push
push
push
call
mov
pop
pop
add
ret
mov
lea
push
push
mov
push
push
push
call
mov
pop
pop
add
ret
mov
lea
push
push
mov
push
push
push
call
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
test
je
mov
jmp
mov
cmp
jne
mov
lea
push
mov
mov
push
mov
push
push
call
test
je
pop
pop
or
pop
ret
mov
mov
push
push
push
call
add
cmp
jne
pop
pop
or
pop
ret
test
mov
je
mov
test
je
push
push
call
add
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
add
pop
pop
ret
nop
mov
sub
test
mov
je
mov
cmp
jne
mov
lea
push
push
mov
push
call
mov
add
ret
push
call
add
add
ret
sub
push
mov
push
push
test
je
mov
mov
jmp
mov
mov
test
je
cmp
jne
mov
lea
push
mov
mov
push
push
push
call
test
je
pop
pop
or
pop
add
ret
push
mov
test
je
mov
mov
test
je
push
push
call
add
push
push
push
call
add
mov
test
je
mov
mov
test
je
push
push
call
add
cmp
pop
je
mov
pop
pop
pop
add
ret
mov
pop
pop
pop
add
ret
cmp
jne
mov
lea
xor
push
mov
xor
push
push
push
push
call
mov
mov
push
mov
mov
push
push
call
test
jne
pop
pop
pop
add
ret
push
push
push
push
call
mov
add
and
cmp
je
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
nop
nop
nop
nop
mov
push
mov
push
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
add
pop
pop
ret
nop
mov
push
call
add
ret
nop
push
push
mov
push
call
mov
cmp
jne
pop
or
pop
ret
push
push
call
test
jne
pop
or
pop
ret
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
neg
sbb
neg
dec
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
push
push
push
mov
push
mov
push
push
push
call
push
push
call
mov
add
test
je
lea
push
call
add
cmp
jb
push
lea
push
push
call
mov
mov
sub
mov
add
lea
sar
sub
lea
push
push
push
call
push
push
call
add
test
jne
pop
pop
pop
pop
add
ret
cmp
jbe
push
push
push
sub
movl
call
lea
add
push
push
push
call
push
push
call
add
test
je
mov
inc
cmp
mov
jge
push
push
push
call
lea
push
push
push
call
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
nop
nop
mov
mov
push
mov
push
mov
push
push
push
push
push
call
add
test
jne
push
push
call
add
cmp
jne
mov
xor
cmp
pop
setne
dec
pop
and
ret
push
push
call
add
mov
pop
pop
ret
pop
xor
pop
ret
nop
sub
push
mov
push
push
push
call
add
test
jne
add
mov
cmp
jne
cmp
jne
cmpw
jne
cmp
jne
add
push
push
push
call
add
test
jne
xor
pop
add
ret
mov
test
jne
xor
pop
add
ret
cmpw
je
xor
pop
add
ret
mov
lea
push
push
call
add
lea
push
call
xor
cmp
sete
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
mov
test
je
cmp
jne
mov
add
test
jne
ret
nop
sub
push
push
mov
push
push
push
call
mov
add
cmpw
jne
add
push
push
call
add
test
jne
push
push
call
add
mov
pop
pop
pop
pop
add
ret
sub
mov
sar
push
push
push
call
add
movw
mov
pop
pop
pop
pop
add
ret
push
push
mov
call
mov
add
test
je
mov
sub
sar
cmp
jbe
mov
push
lea
push
push
call
lea
movw
push
call
mov
add
test
je
push
push
push
call
add
test
push
je
call
add
lea
push
push
call
mov
add
test
jne
push
push
call
add
mov
pop
pop
pop
pop
add
ret
call
sub
sar
push
push
push
call
add
movw
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
push
call
add
test
je
lea
push
push
push
call
add
test
jne
add
push
push
mov
add
add
test
je
add
push
push
call
mov
add
test
je
add
jmp
cmpw
jne
cmpw
jne
add
mov
mov
mov
sub
sar
dec
push
push
push
push
call
jmp
mov
mov
push
push
call
mov
add
cmp
jne
cmp
jne
mov
add
add
push
call
add
test
je
add
push
push
call
mov
add
test
je
push
push
push
add
call
add
jmp
cmpw
jne
cmp
jne
lea
mov
push
sub
sar
dec
push
push
push
call
add
lea
push
push
push
call
add
test
je
push
push
push
call
push
lea
push
push
call
push
push
call
add
mov
test
push
jne
lea
push
push
call
add
jmp
mov
lea
sub
sar
push
push
push
call
add
lea
push
call
mov
add
test
je
lea
push
push
push
call
add
test
jne
mov
push
push
push
call
push
movw
call
add
test
je
lea
test
jne
pop
pop
pop
mov
pop
add
ret
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
sub
push
push
mov
lea
push
push
push
movl
xor
call
add
test
jne
push
lea
push
push
call
add
mov
lea
push
call
add
test
je
lea
mov
jmp
lea
mov
mov
lea
push
push
push
push
push
call
test
je
pop
xor
pop
add
ret
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
mov
lea
push
lea
add
call
test
je
mov
push
call
pop
xor
pop
add
ret
cmp
jne
mov
push
call
pop
xor
pop
add
ret
mov
mov
push
push
lea
push
push
call
mov
push
call
mov
mov
lea
push
push
call
push
call
mov
mov
mov
inc
lea
mov
inc
push
mov
lea
mov
push
push
lea
push
push
push
push
push
call
mov
test
jne
cmpl
jne
push
call
lea
push
push
push
call
add
test
jne
push
lea
push
push
call
add
mov
lea
push
call
add
test
lea
jne
lea
push
mov
push
call
add
test
jne
mov
push
push
call
inc
test
je
mov
push
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
push
mov
lea
push
xor
push
push
mov
call
add
test
jne
push
lea
push
push
call
add
mov
lea
push
call
add
test
je
lea
mov
jmp
lea
mov
lea
push
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
add
lea
lea
push
push
push
push
push
push
call
lea
push
push
call
add
test
je
cmp
mov
lea
je
push
push
call
mov
add
mov
mov
cmp
je
cmp
je
cmp
je
mov
add
cmp
jne
mov
sub
sar
cmp
jle
mov
push
lea
push
push
call
lea
push
lea
push
push
mov
call
add
test
jne
lea
push
lea
push
push
call
add
mov
lea
push
call
add
add
rorb
lea
mov
push
push
call
add
test
jne
push
call
push
push
call
add
movl
jmp
cmp
mov
je
lea
cmp
jne
mov
pop
cmp
je
mov
lea
lea
push
push
push
push
call
pop
pop
pop
add
ret
nop
nop
sub
push
push
push
mov
lea
push
push
push
movb
call
add
test
jne
push
lea
push
push
call
add
movw
mov
lea
push
push
call
mov
add
test
je
add
jmp
lea
lea
push
push
push
push
push
call
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
push
push
call
add
test
jne
mov
push
call
pop
pop
pop
add
ret
cmpw
push
lea
mov
jne
mov
lea
mov
mov
test
je
cmp
je
mov
add
test
jne
push
push
movw
call
mov
add
test
jne
mov
jmp
add
mov
push
push
call
add
test
jne
movb
push
push
call
add
test
je
movw
push
push
call
add
test
pop
je
mov
test
je
mov
push
push
push
call
add
mov
push
call
pop
pop
pop
add
ret
nop
nop
push
push
xor
push
push
push
call
mov
test
je
mov
push
push
push
push
push
call
mov
mov
test
je
push
call
test
je
mov
push
call
push
call
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
add
mov
push
lea
push
xor
push
push
xor
mov
call
mov
add
test
jne
push
lea
push
push
call
add
mov
lea
push
call
add
test
je
lea
mov
jmp
lea
mov
lea
push
push
push
push
push
call
test
jne
mov
lea
push
push
push
push
xor
call
test
jne
mov
mov
lea
push
push
lea
push
push
push
call
test
jne
lea
lea
push
mov
lea
push
push
push
push
push
movl
call
test
jne
lea
mov
add
ljmp
sub
mov
xchg
and
inc
mov
add
adc
incl
jne
lea
push
lea
push
push
call
add
mov
lea
push
call
add
test
lea
jne
lea
push
mov
push
call
add
test
jne
lea
push
call
add
mov
mov
push
call
mov
lea
inc
push
push
push
push
call
test
je
mov
mov
push
call
pop
pop
mov
pop
pop
add
add
nop
nop
nop
nop
nop
nop
push
mov
push
push
call
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
call
add
call
test
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
push
call
test
je
pop
pop
mov
pop
add
ret
lea
push
push
call
mov
lea
push
push
call
lea
push
push
call
mov
mov
add
lea
push
push
push
call
test
jne
pop
pop
mov
pop
add
ret
mov
test
je
lea
push
push
push
call
test
jne
pop
pop
mov
pop
add
ret
lea
lea
push
push
push
push
call
cmp
jne
pop
pop
mov
pop
add
ret
cmpw
push
mov
lea
je
push
call
lea
add
cmpw
jne
test
je
lea
push
jmp
push
push
call
add
push
push
call
lea
push
push
call
push
call
add
lea
lea
movw
push
push
push
call
pop
pop
pop
movl
mov
pop
add
ret
nop
mov
sub
test
push
push
push
push
je
pop
pop
pop
mov
pop
add
ret
mov
push
lea
push
push
call
mov
add
lea
push
push
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
push
call
push
push
call
mov
add
test
jne
pop
pop
pop
pop
add
ret
testb
jne
mov
mov
or
xor
lea
repnz
not
sub
push
mov
mov
mov
push
shr
rep
mov
and
rep
lea
push
call
lea
or
xor
lea
repnz
not
dec
lea
push
push
push
call
add
test
je
testb
je
mov
mov
push
mov
call
add
xor
push
lea
push
push
call
add
lea
push
push
push
call
inc
cmp
jge
test
je
mov
lea
push
push
push
call
push
push
push
call
push
push
call
mov
add
test
jne
pop
pop
pop
pop
add
ret
test
jne
pop
pop
pop
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
repnz
add
dec
and
push
push
call
add
lea
lea
push
push
push
push
call
test
je
push
push
call
add
lea
test
jne
mov
lea
push
call
add
test
lea
jne
lea
push
push
push
call
add
test
pop
je
movw
jmp
cmpw
jne
mov
sbb
addb
push
push
push
lea
push
push
push
call
lds
add
xchg
add
add
imul
js
pop
mov
push
leave
stos
call
push
add
mov
add
std
mov
push
add
mov
mov
add
popa
mov
popa
add
inc
in
push
lea
push
push
call
add
jbe
stc
mov
add
lock
add
add
add
add
add
mov
push
push
imul
mov
add
outsl
xchg
jbe
pop
fildl
lcall
push
push
lea
push
push
push
push
push
push
push
push
call
loopne
cwtl
cli
pop
add
into
add
add
add
flds
add
imul
xchg
loopne
add
mov
add
push
push
push
push
lea
push
push
lea
push
push
call
lock
sub
add
xchg
mov
add
add
popa
pop
cli
xchg
add
hlt
add
faddl
pop
movsb
xchg
jnp
cmc
add
add
add
nop
test
mov
add
add
add
lcall
push
push
lea
push
push
call
jl
add
cmpsl
add
int
add
add
pop
fstl
shr
cmpsb
shlb
push
in
pusha
mov
add
add
stc
rcr
sub
pop
call
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
lret
rorb
add
add
add
add
add
push
cli
add
add
add
push
mov
add
mov
xlat
jno
data16
mov
jecxz
arpl
add
add
xchg
add
lahf
sti
iret
lret
gs
in
add
movsl
lret
sub
pop
call
push
push
push
push
push
push
call
pop
fildl
scas
push
test
add
xchg
popf
fstl
rclb
add
movb
leave
add
add
add
flds
mov
test
push
ret
add
mov
pop
add
cmpsl
xlat
jecxz
data16
sti
add
stc
add
sub
pop
jmp
push
push
push
lea
push
push
push
lea
push
call
ljmp
incb
push
add
add
add
iret
add
int3
mov
cmpsb
mov
out
roll
in
fcomi
add
add
add
add
mov
bound
add
in
ret
push
lea
push
push
call
loop
add
fadds
add
imul
add
add
pop
add
stos
jno
add
jno
fstpl
add
pop
ljmp
hlt
xchg
int3
add
jmp
scas
pop
add
add
filds
add
scas
add
add
lcall
inc
hlt
push
push
push
push
push
push
push
push
push
push
call
xchg
add
out
add
roll
ret
add
add
out
mov
add
lds
fildl
xchg
add
lcall
pop
hlt
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
add
hlt
xchg
mov
jns
stos
mov
push
enter
leave
insb
add
repnz
add
add
leave
add
xchg
cmpsl
addb
in
push
lea
push
push
push
call
shrb
jl
sahf
loopne
add
jl
pop
add
loope
scas
mov
add
mov
lock
mov
fisttpll
add
sahf
decb
mov
push
roll
lods
add
imul
add
lcall
ret
add
add
push
push
push
push
push
push
lea
push
call
mov
add
cli
lock
add
add
scas
loope
jno
mov
add
loope
aam
add
add
add
push
stc
jp
add
add
add
mov
scas
add
add
add
add
xchg
xchg
jecxz
in
in
lcall
ret
xor
push
lea
push
push
push
call
test
loope
jmp
mov
notl
pop
add
jno
cli
mov
add
mov
add
add
cwtl
iret
test
add
jae
lret
add
cld
add
lcall
imul
popf
mov
add
pop
std
lds
add
jo
pop
ficoml
add
shrl
add
hlt
test
lcall
pop
add
push
lea
push
call
mov
add
xchg
mov
jnp
test
jle
add
xchg
jb
push
add
push
into
add
add
out
mov
jae
add
add
lcall
sbb
push
lea
push
push
push
call
add
mov
add
mov
out
cmpsl
xchg
lahf
add
xchg
out
mov
int
fisubs
mov
add
data16
lcall
les
add
push
push
sub
inc
shl
push
or
not
add
lea
sub
add
xor
pop
inc
add
pop
push
push
push
push
push
push
call
add
add
out
add
add
mul
lret
rolb
push
addl
lea
add
mov
aad
mov
lret
push
out
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
call
pop
pusha
pop
mov
xchg
cld
cmc
add
imul
jecxz
into
pop
add
add
lods
add
loop
call
rcll
loop
add
movsb
add
pushf
add
lcall
je
add
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
jns
mov
add
jle
add
jae
movsl
pop
leave
pop
add
jb
push
add
xorl
out
add
add
loopne
xchg
lret
mov
push
jmp
push
add
add
lock
fdivl
jb
pushf
add
mov
add
sub
pop
mov
push
push
lea
push
lea
push
push
push
push
call
std
add
in
add
pushf
fdivrs
add
add
add
add
add
add
add
pop
out
sub
pop
lea
push
push
push
lea
push
push
push
push
push
push
push
lea
push
call
push
pushf
add
fildl
test
lock
sarl
add
add
fwait
mov
add
add
add
arpl
into
add
add
gs
jmp
pop
xchg
add
mov
add
add
in
fcomps
jne
pushl
push
push
push
push
push
call
lds
add
test
mov
add
add
mov
add
xchg
mov
add
mov
movl
pusha
sub
pop
call
pushl
push
lea
push
push
push
push
push
call
jnp
testb
xchg
add
js
repnz
mov
add
fs
movsl
iret
add
add
loope
add
add
xchg
lahf
jecxz
hlt
add
sub
pop
pushl
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
loopne
mov
sahf
add
enter
jno
pop
fisubrs
add
add
add
lcall
jle
add
push
push
lea
rol
push
xor
add
rol
add
sub
xor
sub
not
pop
xor
shr
pop
push
push
lea
push
push
push
lea
push
push
call
add
roll
jae
ja
in
add
jb
mov
jle
lods
add
add
jns
test
xchg
pusha
sti
add
mov
roll
add
rcrb
add
xorl
lcall
jne
push
push
push
push
lea
push
push
call
xchg
cmpsl
add
xlat
jb
add
add
leave
add
add
stc
jl
mov
pop
fiaddl
call
add
push
push
push
lea
push
push
lea
push
push
call
fldl
add
in
out
imul
add
lods
xor
lods
loope
pop
jne
lret
add
add
mov
mov
add
out
push
mov
add
mov
imul
fcom
icebp
jge
out
add
lret
sub
pop
push
push
push
add
sub
sub
push
push
pop
add
sub
inc
rol
dec
sub
lea
pop
dec
inc
pop
push
push
lea
push
push
push
lea
push
lea
push
push
call
mov
add
movl
jmp
test
mov
aad
add
loop
xchg
pop
add
jne
arpl
addr16
mov
push
lods
sbb
movsl
popa
mov
mov
lds
enter
stc
add
cwtl
add
ljmp
jp
add
add
lcall
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
pop
push
xchg
in
add
loope
aam
add
push
ja
outsl
in
add
mov
ja
mov
add
add
add
in
mov
add
mov
pop
add
add
sub
pop
push
call
push
push
push
push
push
lea
push
call
add
pop
popf
fwait
movsb
cltd
pop
add
add
add
ficompl
add
test
mov
push
add
add
mov
fistps
fisttpl
rolb
incb
add
rclb
iret
add
popa
mov
in
call
mov
push
push
lea
push
push
push
call
mov
add
stos
jle
je
add
cmpsl
add
add
add
cli
aad
push
jno
add
cli
test
add
neg
out
pop
lods
xchg
add
mov
fldenv
ja
add
aam
mov
iret
stos
mov
ja
in
in
lcall
push
lea
push
push
lea
push
lea
push
push
call
add
negb
lea
in
je
add
pusha
add
fcmovne
cli
addl
jl
repnz
add
shrb
mov
xchg
pop
lea
in
call
push
mov
push
push
lea
push
call
add
fmull
addb
add
fcmove
add
add
shrl
aad
roll
out
add
add
pusha
iret
ljmp
add
lods
sti
add
fildl
cwtl
add
add
in
hlt
pop
add
add
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
ja
push
outsl
add
add
mov
mov
add
push
add
mov
jge
lret
fxch
add
movsl
pop
add
mov
jbe
mov
jge
add
call
add
lock
lcall
ret
xor
xor
push
push
push
push
lea
push
call
add
add
pop
add
hlt
add
mov
add
add
add
add
add
ficompl
jmp
add
add
mov
test
pop
add
lods
aad
mov
add
add
xchg
add
add
in
pop
xor
push
push
push
push
call
add
jo
add
jae
add
les
add
add
add
loop
imul
mov
jae
add
add
add
scas
arpl
add
imul
add
add
lahf
stos
add
test
mov
mov
xchg
xchg
loope
sub
pop
add
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
out
jo
mov
faddl
add
mov
add
add
test
add
add
mov
add
test
fbstp
gs
lahf
icebp
sti
in
rcrl
add
add
push
pop
add
hlt
popf
xchg
aam
std
add
add
mov
cltd
addl
mov
mov
sub
pop
add
push
push
push
push
push
call
mov
mov
add
add
lret
add
lock
popf
jmp
mov
add
add
rcr
mov
add
add
jge
push
add
fldt
add
fldt
lcall
mov
push
push
push
push
push
lea
push
push
call
lods
pop
insb
loopne
int
add
push
add
in
gs
add
ljmp
les
add
mov
imul
sub
pop
xor
push
push
push
push
push
lea
push
push
lea
push
call
fwait
add
add
pop
call
add
mov
add
iret
xchg
mov
add
add
addr16
add
fiaddl
lock
add
cld
add
jp
add
sub
pop
add
push
push
push
push
push
push
push
push
lea
push
lea
push
call
arpl
faddl
lret
repnz
stos
addb
movsb
fistpl
add
jnp
add
add
mov
add
jno
add
push
test
sub
pop
add
push
push
push
lea
push
push
push
push
push
push
push
call
cmpsb
add
add
scas
bnd
mov
pop
cli
add
add
push
lret
add
add
add
add
xchg
add
sahf
cltd
mov
mov
add
add
push
add
pop
int
sub
pop
pop
push
push
lea
push
lea
push
lea
push
push
push
call
shll
hlt
addr16
mov
cmpsb
add
pop
push
push
gs
gs
add
jo
jle
ja
jmp
pop
add
call
icebp
sub
pop
mov
xor
push
push
push
push
push
lea
push
call
repnz
xlat
rolb
add
insb
std
bound
insb
add
add
incb
push
add
add
ja
test
add
add
insb
add
lods
add
mov
js
nop
sub
pop
push
push
push
call
add
xchg
push
add
repnz
add
mov
add
jbe
iret
mov
lcall
xchg
xchg
outsl
add
pop
jmp
mov
mov
in
add
shl
loope
add
lcall
sahf
add
lea
push
add
in
clc
pop
mov
push
push
push
lea
push
push
call
mov
jno
add
push
test
jno
addl
push
jb
incb
xchg
jo
les
cli
sahf
pop
addb
add
add
push
mov
idivl
jmp
test
imull
jae
add
add
sub
pop
xor
push
push
lea
push
push
call
popl
loopne
std
out
add
xchg
jl
add
add
sti
incb
jp
loopne
add
xchg
mov
jns
aam
fsubs
into
roll
add
mov
jle
stos
jmp
add
mov
lcall
les
push
call
filds
cli
add
add
add
ficompl
add
cmc
add
lods
mov
jecxz
rolb
add
add
in
clc
lcall
enter
push
push
push
lea
push
call
add
cmpsl
add
add
mov
mov
pop
fadds
insb
add
jae
mov
jnp
loop
icebp
jo
add
mov
js
js
add
lea
roll
lcall
push
lea
push
push
push
push
push
push
push
call
cli
add
mov
mov
mov
add
fcompl
sahf
add
mov
pop
add
jnp
push
lret
shlb
add
popl
add
add
add
nop
add
movsb
pop
push
push
call
rclb
in
add
push
jnp
add
mov
in
mov
pop
cmpsl
add
cltd
mov
xchg
aam
add
mov
xchg
add
add
loopne
add
imulb
imul
add
push
push
add
call
lcall
pop
hlt
push
push
push
push
call
cli
jne
cmpsl
add
add
mov
scas
add
add
arpl
xchg
rclb
add
movsl
push
nop
add
add
les
sub
pop
add
push
push
call
stos
nop
out
lds
jbe
mov
xchg
add
lock
lahf
cwtl
add
movsl
pop
xchg
add
repnz
push
stc
xchg
fildl
add
mov
addr16
lcall
add
xchg
fwait
add
push
add
add
popf
fs
mov
add
add
add
cld
lods
lea
add
lock
stos
cltd
pop
mov
clc
pop
add
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
cltd
fidivs
mov
arpl
add
add
into
rcrb
add
cltd
jp
popl
lret
add
mov
popf
add
pop
fimuls
flds
push
repnz
add
cmc
mov
sub
pop
add
push
push
push
lea
push
push
push
push
call
js
xchg
mov
aam
add
mov
lds
add
mov
add
push
add
add
add
subb
cmpsb
mov
mov
mov
add
in
xchg
add
loope
add
add
push
add
add
add
hlt
add
add
add
lock
lahf
add
shr
add
out
sub
pop
mov
xor
push
push
push
push
push
push
push
push
push
call
mov
add
in
add
add
mov
pop
add
add
add
mov
orb
js
add
roll
pop
add
pop
fiadds
add
in
mov
pusha
mov
add
add
jbe
fstpl
add
scas
loop
jnp
lahf
xchg
add
addl
stos
mov
in
fcompl
push
and
repnz
push
lea
push
push
call
add
roll
add
add
mov
mov
sti
add
add
add
push
mov
pushf
push
addb
mov
mov
add
jae
add
insb
mov
add
stos
add
push
add
scas
test
push
add
add
mov
xchg
add
add
hlt
pop
mov
push
push
push
push
push
push
push
push
call
mov
xchg
into
cwtl
data16
addr16
sahf
add
xchg
add
add
mov
loopne
scas
in
mov
out
lret
add
cltd
add
jmp
out
add
mov
add
add
add
or
push
push
push
push
lea
push
call
pop
jne
cmpsb
cmpsl
add
scas
out
ljmp
add
fcompl
in
into
push
add
add
add
jb
repnz
push
hlt
xlat
lahf
mov
push
add
rclb
mov
add
mov
in
in
lcall
les
add
push
xor
pop
add
push
ror
shl
pop
add
mov
push
push
sub
push
or
not
add
dec
rol
sub
lea
pop
rol
rol
sub
pop
push
rol
not
pop
pushl
push
add
pop
call
push
push
push
push
push
push
lea
push
push
push
call
fiaddl
rorl
add
add
add
jmp
jnp
cli
stos
add
add
cmc
mov
add
shlb
addb
mov
lret
jbe
fmul
pop
aad
add
add
jp
jno
mov
add
popa
xchg
jne
mov
add
add
lcall
add
daa
mov
add
lret
push
or
not
add
rol
lea
sub
ror
pop
add
add
pop
push
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
call
leave
mov
xchg
out
jb
ja
add
add
add
faddl
add
push
add
icebp
jae
les
add
in
add
add
add
sti
jnp
jmp
add
mov
push
lods
push
add
add
in
mov
sub
pop
push
push
push
pop
call
push
push
lea
push
lea
push
call
test
out
enter
push
pop
add
icebp
rolb
ljmp
out
add
add
cmc
into
add
std
fldl
test
add
add
mov
pop
sub
pop
mov
push
add
not
pop
push
push
ror
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
pop
push
add
rol
mov
add
test
add
ljmp
mov
fadds
add
fildl
add
push
data16
fwait
add
add
add
sub
pop
mov
push
rol
shl
add
pop
add
push
push
lea
push
push
push
call
add
mov
into
mov
mov
xchg
add
roll
jmp
mov
in
addl
add
add
je
lret
xchg
add
lcall
add
ja
add
lcall
ret
add
add
add
push
ror
inc
sub
pop
mov
xor
push
push
lea
push
push
push
push
push
push
push
push
call
addb
mov
cmc
add
add
rolb
iret
add
in
pop
add
add
add
test
pop
mov
sub
pop
add
push
sub
inc
pop
push
push
push
push
push
push
call
mov
add
add
int
clc
sbbl
jb
mov
mov
pop
xlat
xorl
pop
addr16
imul
addl
scas
add
mov
in
in
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
call
js
pop
stc
add
leave
roll
push
add
mov
ret
add
add
add
add
push
xlat
add
mov
je
add
add
add
pop
lret
lret
fistps
add
xchg
add
add
add
mov
jmp
sub
pop
xor
push
lea
push
push
push
push
push
push
lea
push
push
call
add
je
inc
add
fidivrl
jne
add
add
adc
cld
mov
add
pushf
mov
ret
xchg
pop
add
xchg
add
outsl
mov
testl
test
lock
add
test
pop
add
add
add
add
lcall
les
shl
pop
add
push
push
call
cltd
add
add
add
aad
push
in
flds
add
add
jns
mov
add
cmc
jmp
jmp
add
add
lahf
movl
add
or
sub
pop
pop
mov
push
push
push
push
push
push
call
lods
add
outsl
add
add
add
add
add
jl
jp
out
add
pop
add
filds
cltd
js
add
movsb
push
add
fdivrl
add
out
add
mov
leave
add
sbbl
mov
out
add
push
mov
in
in
pop
xor
push
push
lea
push
push
push
push
lea
push
push
call
bound
add
add
insb
sahf
mov
out
add
push
ljmp
lret
test
lea
roll
aad
push
rolb
lcall
les
add
push
lea
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
fisubs
add
out
lahf
xchg
add
add
add
jbe
add
add
rol
add
push
aam
add
add
add
push
jbe
add
ret
out
hlt
bound
pushf
sub
pop
rep
push
shl
inc
lea
pop
mov
xor
push
ror
shr
inc
pop
or
je
push
add
sub
add
pop
mov
push
push
push
lea
push
push
push
lea
push
push
push
push
push
call
pop
popf
test
add
add
mov
xchg
mov
stc
push
lahf
add
cltd
add
mov
xchg
lods
add
fwait
add
ja
jmp
lcall
xor
push
push
push
push
push
push
push
lea
push
call
push
addl
les
rclb
cld
int
jecxz
add
js
shr
rolb
pusha
jge
jns
add
add
out
popa
enter
xchg
iret
mov
shl
mov
pop
les
mov
nop
pop
xchg
iret
add
fwait
add
add
push
lret
cli
mov
add
add
jp
xchg
lcall
les
add
push
push
push
push
call
addl
cli
je
pop
sahf
aam
add
push
into
mov
add
add
push
leave
add
scas
filds
add
add
mov
add
ret
sbbb
in
jmp
add
add
jne
mov
in
lock
lcall
push
sbb
push
rol
rol
pop
add
add
push
push
lea
push
push
push
push
push
call
fwait
cli
add
jno
sar
add
into
push
repnz
add
mov
sti
test
add
imul
sub
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
fildl
push
mov
xchg
lret
imul
out
out
int
jle
push
xchg
popa
mov
stos
xchg
add
cld
mov
je
call
add
add
add
mov
add
add
xchg
lret
add
arpl
int
jae
add
add
mov
add
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
add
incb
mov
mov
push
mov
mov
jae
jmp
insb
push
add
gs
add
mov
sub
pop
xor
push
push
lea
push
push
lea
push
call
mov
xlat
lods
sahf
add
add
jmp
add
in
add
lahf
add
add
les
push
push
push
lea
push
push
call
out
aam
cmpsl
push
push
loope
nop
pop
mov
jbe
jbe
add
sahf
add
add
add
xchg
fidivl
cmc
roll
add
add
add
ljmp
add
test
add
jge
add
xchg
add
test
add
add
jae
mov
lcall
lock
shr
add
sub
pop
pop
push
lea
push
push
lea
push
push
call
xchg
mov
add
add
filds
out
mov
pop
jmp
xchg
addl
mov
sahf
add
mov
add
add
in
add
add
aad
add
add
mov
mov
add
mov
in
add
stos
test
out
jne
in
in
pop
rep
mov
xor
push
lea
push
push
push
push
call
add
add
stc
mov
xlat
in
add
pusha
mov
add
mov
stos
mov
call
add
call
test
stc
add
imul
jns
in
in
pop
or
je
push
lea
push
push
push
push
lea
push
lea
push
call
fcmovu
nop
iret
lds
lret
aad
add
add
pusha
mov
pop
mov
add
cld
cwtl
add
pop
push
jns
shlb
roll
push
mov
movsb
lret
pop
add
mov
cmpsb
popl
sahf
call
add
ljmp
add
loopne
add
jnp
sub
pop
mov
add
push
lea
pop
rep
pop
push
push
shl
ror
push
or
inc
add
sub
add
dec
sub
pop
dec
pop
push
shr
dec
shl
pop
pop
push
lea
push
push
push
push
push
push
push
push
push
call
les
pop
cmpsl
push
clc
movsl
add
jmp
lods
nop
stos
xchg
add
push
add
mov
add
ficoml
add
mov
mov
lcall
jne
push
push
push
call
add
add
add
lret
lods
repnz
fiaddl
scas
out
add
add
roll
add
mov
pop
add
add
add
test
gs
add
test
lcall
insl
hlt
push
sub
pop
mov
push
dec
pop
jmp
push
sub
not
pop
push
push
push
push
push
call
cwtl
mov
mov
jmp
add
add
add
movsb
add
loope
add
add
push
add
cmc
add
iret
ffree
sub
pop
mov
push
add
add
add
pop
add
push
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
add
add
ret
rolb
out
push
add
mov
pop
push
test
jae
cli
leave
mov
insb
test
add
stc
add
fcomps
push
push
call
add
shl
add
add
mov
lds
add
imul
shrl
mov
xorb
mov
out
add
xchg
iret
in
add
gs
add
add
add
icebp
xchg
add
iret
in
add
push
xor
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
push
call
enter
jmp
fadds
add
flds
outsl
add
cmpb
add
add
add
add
add
add
sub
pop
mov
pop
push
xor
lea
pop
pop
push
lea
sub
pop
pop
push
lea
push
lea
push
push
push
lea
push
call
lahf
xchg
popf
sti
mov
jbe
mov
add
jno
add
test
filds
xchg
add
push
add
data16
scas
add
lods
add
add
add
lcall
push
push
push
push
push
call
mov
add
add
sahf
std
xchg
xchg
add
xchg
add
mov
enter
add
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
lea
mov
jo
push
jno
add
jnp
fiaddl
add
cwtl
lcall
add
mov
int
xlat
add
cltd
mov
add
lret
xchg
ret
scas
cmpsl
jge
test
add
add
add
or
push
lea
push
push
push
push
call
clc
add
cmc
mov
cli
flds
add
add
js
mov
test
pop
add
roll
shll
add
add
in
in
pop
push
mov
push
add
pop
add
push
pop
push
push
push
dec
add
rol
not
pop
push
push
push
push
push
push
push
push
lea
push
call
divb
add
lea
add
jmp
add
les
xchg
push
add
pushf
mov
cwtl
jne
add
jbe
xchg
add
add
add
loopne
outsl
add
lock
pop
movl
push
push
push
push
lea
push
push
push
push
call
icebp
fsubrl
fildl
addb
jno
stos
mov
mov
add
shrb
mov
push
jle
out
xchg
add
mov
add
add
stos
add
pop
ret
add
push
jmp
add
add
add
loopne
faddl
jle
les
inc
clc
call
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
add
sahf
add
movsl
add
add
mov
mov
mov
jae
mov
add
add
shl
aam
loope
hlt
add
stc
mov
xchg
insb
add
js
data16
add
mov
add
int3
add
arpl
mov
jbe
push
lcall
rorb
pop
add
add
negl
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
jge
xchg
stos
in
imul
xchg
jno
fcomip
fdivl
add
sti
rolb
pop
mov
fldl
jge
sub
pop
pop
push
push
push
lea
push
lea
push
push
push
push
call
xchg
add
test
mov
mov
add
add
pushf
mov
pop
lds
add
mov
pop
mov
mov
add
lret
jne
add
cmc
cmpsl
jne
add
push
aad
les
test
lods
out
hlt
nop
add
enter
in
sub
pop
pop
push
shr
pop
pop
push
shl
sub
rol
pop
leave
ret
push
lea
push
call
add
add
xchg
mov
div
add
out
fsubr
add
mov
fistps
add
add
shr
addl
mov
add
fcoml
in
clc
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
stc
push
add
add
add
add
xchg
test
add
je
jbe
add
into
add
push
test
lea
xlat
js
les
mov
sbbl
scas
mov
add
call
mov
mov
aad
rolb
aad
test
fildl
add
lcall
in
add
push
push
lea
push
call
fdivr
add
push
fists
mov
mov
add
add
add
movsb
add
add
add
fistl
mov
insb
fs
addb
testb
jb
push
xchg
lds
push
push
inc
shr
pop
push
push
inc
xor
not
pop
push
push
shl
rol
pop
testl
push
push
push
call
sti
fiaddl
push
iret
gs
subb
fs
js
add
data16
add
add
mov
add
mov
xchg
push
out
movb
add
mov
js
mov
loope
mov
pop
nop
add
jo
xchg
add
inc
or
push
lea
push
push
push
lea
push
push
push
push
push
call
jge
add
add
std
add
lahf
xchg
ljmp
popa
jns
nop
add
pop
fs
sub
pop
push
push
push
lea
push
lea
push
push
call
add
shrl
addl
pop
add
rcrb
mov
add
call
mov
push
lea
inc
shr
pop
pushl
push
push
push
call
lcall
cmpsb
pop
out
lahf
fiaddl
add
xchg
cwtl
xlat
jbe
add
add
fwait
mov
add
xchg
push
add
add
add
add
lcall
call
leave
xchg
rol
dec
pop
sub
add
into
inc
pop
call
cmpl
jne
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
mov
add
add
pusha
ja
cwtl
in
imul
add
je
popf
xchg
addl
clc
add
mov
fists
rolb
fbstp
outsl
shl
add
add
jns
aad
add
in
loopne
pop
push
xor
xor
pop
pop
push
lea
push
push
push
push
lea
push
call
jge
sarl
fcmove
mov
add
add
test
add
bound
clc
cwtl
push
add
add
add
add
call
jne
int
jmp
in
cmc
leave
loope
in
add
add
subb
jbe
add
add
add
lcall
push
rol
pop
pop
leave
push
add
rol
shr
shl
pop
ret
push
push
shr
ror
pop
mov
push
dec
pop
add
push
shr
sub
rol
pop
push
push
push
push
push
push
push
push
push
push
call
add
add
mull
out
ficomps
push
js
jno
add
repnz
add
movsb
cltd
add
fildl
addl
add
add
add
addr16
push
divb
leave
sub
pop
push
push
push
push
push
lea
push
push
call
mov
push
lds
roll
push
add
add
in
add
pop
scas
add
add
jp
add
add
jae
pop
add
into
int3
push
add
imul
add
push
add
add
jne
add
add
jbe
in
call
push
push
push
lea
push
call
add
xchg
mov
in
add
add
pop
mov
add
add
nop
mov
jae
lods
pop
mov
sub
pop
push
movl
push
xor
pop
push
push
add
pop
call
push
xor
shl
sub
pop
push
call
push
shr
pop
subl
cmpl
jne
push
lea
push
lea
push
push
lea
push
push
call
mov
popa
add
out
mov
jno
add
jmp
subb
sarl
mov
rcrb
stos
lret
nop
in
fnstsw
add
lock
ljmp
add
sub
pop
pop
push
dec
not
add
add
pop
pop
push
shr
shr
add
not
pop
pop
push
rol
add
pop
pop
leave
push
xor
pop
ret
push
not
add
dec
pop
push
push
inc
pop
mov
push
push
call
add
push
stos
leave
clc
ret
into
je
scas
fldcw
fistpl
repnz
add
fadds
add
mov
add
pop
test
scas
add
pop
mov
add
mov
add
add
mov
xchg
mov
call
vandps
add
add
add
lcall
cld
push
add
pop
push
push
push
call
add
out
movb
lods
add
addb
add
jb
add
mov
add
pop
shrl
mov
add
sti
mov
movb
frstor
ret
add
mov
leave
cmc
mov
add
add
pop
pushf
add
loopne
fidivrs
sub
pop
push
push
push
push
push
push
push
call
fwait
pushf
add
scas
rcrb
bound
add
lcall
in
add
add
add
add
movsl
xchg
faddl
add
sbb
ljmp
add
add
jno
add
testb
jns
jmp
in
in
lcall
push
push
add
push
xor
add
dec
add
sub
add
shr
pop
add
pop
push
push
push
push
push
push
call
add
add
lods
add
add
xorb
add
sbbl
xchg
add
jecxz
add
shll
add
add
lcall
jne
push
pop
call
push
ror
not
sub
pop
call
push
push
lea
lea
push
xor
add
ror
sub
sub
add
sub
not
pop
not
sub
dec
pop
push
ror
xor
pop
pushl
push
shl
lea
pop
call
call
push
push
rol
sub
add
push
and
add
rol
sub
shr
pop
not
shl
pop
push
not
ror
rol
sub
pop
pushl
call
push
push
lea
push
call
xchg
xchg
scas
add
cmpsb
add
pushf
push
loope
add
clc
test
clc
rolb
roll
fwait
cltd
rcr
jns
jbe
add
mov
add
fcomip
mov
pop
call
push
push
sub
sub
push
sub
add
sub
rol
sub
inc
inc
pop
add
pop
push
add
pop
pushl
push
pop
call
push
xor
pop
call
mov
push
rol
pop
lea
push
push
push
lea
push
lea
push
push
push
call
iret
add
push
rolb
xchg
push
mov
cmpsb
add
icebp
mov
add
loope
mov
push
sub
pop
sub
push
push
push
push
lea
push
lea
push
push
call
nop
jbe
add
add
nop
cmpsl
add
add
scas
iret
enter
add
rorb
ret
add
cmpsb
mov
add
lock
arpl
cld
add
testl
lcall
add
mov
pop
add
mov
push
in
in
lcall
add
ret
call
mov
out
sbb
push
add
add
popa
pop
pop
pop
ret
sahf
add
bound
call
testb
repnz
popf
add
push
add
add
add
xchg
fwait
in
je
add
mov
add
add
push
add
add
addl
pop
add
push
push
push
lea
push
push
push
push
push
push
call
push
add
add
jb
jne
add
push
out
fwait
xchg
add
lret
add
jge
pop
call
jo
add
add
jmp
add
add
out
js
add
mov
icebp
add
lcall
inc
cld
push
xor
pop
mov
push
not
rol
pop
add
add
push
add
add
pop
mov
push
add
shl
pop
mov
cmp
jne
push
add
shr
inc
pop
cmp
jne
push
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
jno
add
add
bound
add
hlt
push
aad
nop
add
pop
fisubrs
divl
mov
mov
jle
addb
in
fdivr
lcall
inc
adc
jno
sub
add
pop
movl
push
lea
push
push
lea
push
push
call
push
add
add
mov
xlat
pop
add
add
imul
ret
pop
add
int3
mov
add
add
loop
cmpsb
add
add
imul
pop
add
add
test
in
in
lcall
icebp
or
add
in
push
mov
imul
add
add
add
jge
jnp
roll
add
mov
jns
repnz
mov
mov
mov
xchg
add
add
addl
in
lock
lcall
inc
cld
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
jae
ficoml
add
out
add
add
arpl
mov
jns
sti
icebp
fs
and
mov
sahf
pop
add
add
add
add
add
pop
push
push
jb
rcrb
add
lds
add
add
test
ja
mov
notb
add
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
cmpsb
pushf
mov
xchg
fadds
add
add
loope
jge
add
pop
jl
rclb
loope
mov
add
bound
add
in
mov
add
js
arpl
ljmp
xchg
add
push
not
add
dec
xor
pop
mov
push
push
push
push
push
push
push
push
push
push
call
leave
hlt
jne
js
call
add
shlb
arpl
add
add
add
add
add
test
add
mov
jmp
add
add
pusha
xchg
add
jecxz
add
ror
xchg
pop
mov
bound
in
fcomps
add
add
jmp
push
ror
pop
mov
push
push
lea
push
push
push
push
push
push
call
add
add
ljmp
push
std
mov
shrb
call
mov
clc
xchg
add
addl
pop
mov
add
add
mov
nop
data16
mov
pop
mov
push
lea
push
call
add
mov
pusha
add
fistpl
add
pop
fwait
addb
mov
add
add
pop
in
sti
int3
fcoms
add
add
push
add
nop
cmpsb
add
pop
out
add
add
jp
in
clc
pop
cmp
jne
mov
push
push
push
lea
push
push
push
call
pop
sti
stos
xchg
mov
jge
movsl
add
addb
int
add
add
adcb
add
add
add
add
sub
pop
movl
push
lea
push
lea
push
lea
push
call
jle
enter
scas
addb
pop
jl
lods
roll
mov
add
fiadds
in
push
gs
iret
add
jl
push
add
add
ret
scas
sub
pop
jmp
push
ror
shl
pop
mov
push
lea
push
lea
push
push
push
call
push
add
testb
lea
fistpl
add
pop
mov
xchg
rcr
add
mov
add
out
add
add
std
leave
fwait
cmc
scas
imull
pop
cwtl
push
movl
out
add
push
xchg
mov
scas
lret
lret
add
add
in
in
pop
cmpw
jne
push
shl
sub
pop
mov
movl
push
add
pop
jmp
pushl
push
push
call
fstps
add
je
leave
popf
mov
out
aad
lret
add
add
add
add
add
pop
lock
add
ja
add
movsl
stos
add
add
add
testl
mov
add
xchg
xchg
popf
jp
add
cmpsb
test
lcall
mov
push
lea
sub
pop
mov
push
add
add
shr
pop
mov
push
push
sub
dec
ror
push
push
pop
add
not
rol
add
sub
xor
add
dec
rol
pop
pop
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
pop
data16
add
icebp
add
add
rcrb
add
add
pop
add
add
xlat
add
add
push
add
add
sub
pop
push
push
push
push
push
push
push
push
push
lea
push
call
rolb
add
add
fidivrl
cli
test
jo
lds
mov
icebp
add
out
mulb
add
je
je
insb
add
push
fdivrl
aam
add
add
leave
jl
add
add
mov
jle
cwtl
add
mov
les
add
cmpsb
add
add
incb
aad
add
cmpl
je
push
push
shl
sub
not
not
push
or
inc
add
shr
sub
ror
sub
sub
dec
not
pop
shl
add
pop
push
add
dec
pop
push
push
push
call
add
xchg
cld
add
add
incb
lods
out
add
cmc
arpl
cwtl
pushf
jb
outsl
cmpsl
lods
add
xorl
mov
loopne
add
add
add
lods
push
mov
in
clc
lcall
cmp
push
lea
push
push
push
push
push
lea
push
push
call
add
add
lds
aam
sahf
rorb
add
je
outsl
jl
hlt
stc
call
lods
cld
add
add
lods
int3
mov
add
add
add
popa
add
add
mov
imul
lahf
add
add
add
pop
cmpl
je
push
push
lea
inc
push
or
not
add
shr
sub
inc
sub
shr
pop
add
pop
push
push
push
push
push
push
push
push
call
add
icebp
rolb
add
add
lods
cltd
add
cli
mov
add
xchg
imul
xchg
scas
add
push
stos
push
add
add
pop
pop
jle
lock
add
jns
jecxz
int
xchg
add
add
pop
push
add
movsb
mov
add
add
add
out
mov
loopne
push
call
push
lea
push
push
call
scas
sahf
mov
test
lea
cwtl
add
push
add
push
clc
mov
int3
cwtl
add
repnz
imul
add
add
add
std
add
out
add
jp
add
mov
mov
mov
ret
test
in
hlt
lcall
cmp
test
add
add
call
les
ror
test
rol
push
xor
add
rol
sub
shl
ror
lea
shl
pop
shr
not
lea
pop
push
shr
xor
pop
push
call
push
lea
push
push
push
push
push
call
mov
mov
bound
add
add
imul
popf
out
xchg
add
xchg
stos
xchg
ja
add
fadds
jp
add
ret
call
xor
ret
test
add
push
push
shl
push
push
pop
add
sub
add
lea
sub
pop
dec
pop
push
inc
pop
push
call
push
not
sub
pop
cmpl
je
push
push
push
or
not
add
not
not
sub
lea
add
shr
inc
pop
inc
add
inc
lea
pop
push
lea
pop
push
push
push
push
push
call
add
xchg
js
imul
imul
add
add
push
out
add
mov
test
add
add
mov
add
sahf
in
ret
aam
into
mov
add
mov
xchg
add
fsts
add
xchg
add
loope
pushf
add
lret
loopne
imul
add
sub
pop
call
push
push
call
xlat
fwait
add
add
add
enter
add
lcall
add
aam
add
addr16
add
add
mov
imulb
xchg
pop
mov
addl
push
add
mov
push
add
js
xor
pop
ret
push
add
add
push
push
lea
push
call
call
add
jns
pop
popa
mov
add
ret
add
addb
jecxz
add
cmpsb
roll
mov
push
add
stos
add
stos
lock
add
add
mov
add
lret
imul
leave
xchg
mov
pop
add
add
add
sub
pop
movl
push
lea
sub
not
lea
pop
jmp
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
push
cld
jne
add
add
xchg
push
insb
int
add
bound
add
pop
testb
iret
movsb
cli
pop
jmp
addb
stos
add
stc
add
pop
add
add
popa
push
mov
mov
add
jno
cmpsb
pop
lods
test
add
add
fcomps
rclb
lea
xor
lea
pop
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
mov
add
sbbb
mov
lea
push
fstl
rclb
add
aam
mov
lea
pushf
sub
pop
pop
pop
push
add
sub
pop
pop
push
push
lea
push
push
push
push
call
xlat
mov
add
add
add
add
call
add
bound
add
mov
add
cmpsl
xchg
enter
add
mov
add
fsts
fnstsw
int3
adcb
add
push
lea
push
lea
push
push
push
push
call
mov
mov
jp
cltd
faddl
add
loopne
int
jecxz
mov
mov
sarl
add
jns
add
jecxz
jp
add
in
addb
sub
pop
ret
push
push
lea
push
call
add
mov
mov
in
jne
add
repnz
add
mov
push
xchg
mov
add
add
cld
movsl
add
mov
xchg
mov
add
lods
fiaddl
std
add
add
sbbb
add
out
jmp
fiadds
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
pop
jmp
add
mov
mov
add
add
lret
aad
mov
stos
add
movsl
lret
cmc
mov
fcompl
in
push
sub
lea
pop
cmpl
jne
push
push
sub
inc
shl
push
push
pop
add
xor
lea
sub
sub
sub
lea
shr
pop
add
lea
pop
push
xor
sub
pop
pushl
call
push
push
push
push
push
lea
push
push
call
add
lds
rclb
xlat
add
add
push
mov
fldt
mov
loopne
in
jp
lods
add
imul
mov
stos
int
jno
in
in
lcall
call
push
lea
push
push
push
push
push
push
push
lea
push
call
add
cmpsb
out
add
add
add
add
add
add
mov
jae
jge
pop
add
movsb
movsl
cmpsb
cli
rorb
add
movsl
add
roll
add
add
add
in
xchg
jno
add
popa
pushf
in
mov
fmull
mov
add
add
fcompl
ret
pop
add
push
shl
add
lea
add
pop
cmpl
jne
push
push
push
push
lea
push
push
lea
push
call
roll
mov
cmpsl
adcb
add
add
add
loop
imul
scas
stos
std
add
push
xchg
rorb
add
aam
fstpl
jmp
jecxz
mov
loope
add
add
enter
xchg
pop
mov
push
xor
add
pop
ret
push
push
lea
push
push
push
call
nop
mov
add
cltd
mov
add
add
pushf
add
incb
add
fst
sub
pop
jmp
cmpl
jne
push
push
inc
push
push
pop
add
shr
shl
sub
shr
pop
sub
lea
shr
pop
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
out
mov
jnp
nop
in
into
jle
add
aad
jo
les
nop
add
mov
nop
mov
mov
fisubl
in
fcomps
jne
push
lea
push
push
push
push
push
push
lea
push
push
call
jae
out
int3
test
roll
add
add
add
in
imul
add
in
add
jmp
mov
in
mov
xchg
nop
add
add
lcall
push
add
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
mov
outsl
cwtl
pop
xchg
lea
add
mov
add
add
add
add
push
push
hlt
sub
pop
call
jmp
push
ror
pop
cmpl
je
push
push
call
xchg
icebp
pusha
mov
jno
add
aad
testl
add
add
xchg
bound
bound
add
add
mov
push
pop
mov
jge
add
add
mov
addr16
mov
add
repnz
lcall
jge
add
add
push
lea
push
push
lea
push
call
imul
add
add
stos
jmp
add
mov
jae
rcl
add
add
lcall
fnstcw
push
add
add
cld
add
pushf
mov
xchg
add
mov
push
ja
movl
add
lcall
add
add
push
push
call
add
add
lret
add
mov
stos
add
jl
add
add
jb
add
push
add
cli
sbb
in
clc
pop
mov
push
push
xor
sub
xor
pop
ret
push
push
shl
xor
push
and
add
lea
sub
sub
add
sub
pop
inc
add
shr
xor
pop
push
push
push
push
lea
push
lea
push
push
call
mov
pusha
test
cmc
movl
xchg
in
push
repnz
add
mov
add
add
add
movsl
fiaddl
add
add
add
sub
pop
pushl
push
ror
pop
call
push
sub
lea
pop
call
push
push
dec
dec
push
xor
add
xor
xor
shl
sub
sub
xor
pop
inc
shl
ror
pop
push
add
rol
lea
lea
pop
pushl
call
push
lea
push
push
push
push
call
add
add
cmpsb
jecxz
add
shrl
add
add
add
roll
jmp
add
add
stos
ja
add
jbe
xchg
mov
andb
sti
add
add
add
lcall
shrb
lods
lds
push
add
not
sub
push
push
pop
add
not
add
sub
sub
lea
not
add
pop
inc
xor
pop
push
push
push
push
push
push
call
add
push
mov
add
add
lods
mov
mov
add
in
je
add
fadds
xchg
xchg
cmpsl
mov
add
imul
movsl
sub
pop
pushl
push
xor
shl
shl
pop
call
push
shr
pop
call
push
push
ror
push
push
pop
add
xor
xor
sub
not
not
pop
inc
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
add
iret
push
add
mov
test
add
add
push
pop
test
mov
imul
add
xchg
add
jnp
add
add
movsb
loop
sub
pop
pushl
push
lea
push
push
push
push
call
ja
incb
add
lcall
stos
mov
subl
add
add
outsl
push
mov
pop
xchg
add
add
fucomi
ljmp
jb
test
mov
lcall
lock
add
shrb
sarb
push
sub
sub
push
or
not
add
add
not
sub
ror
not
dec
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
lods
xchg
push
add
outsl
add
shl
arpl
add
add
lds
add
repnz
push
xchg
jmp
lcall
add
scas
add
mov
add
xchg
add
add
out
loope
fadds
jne
call
push
push
push
call
xchg
jmp
add
les
rolb
xchg
add
add
mov
xchg
test
mov
outsl
pop
test
faddl
enter
xchg
add
lock
shll
add
push
jp
push
push
mov
add
test
mov
insb
rcr
add
add
shrb
scas
ja
push
inc
shl
push
push
pop
add
xor
add
sub
sub
sub
shl
rol
pop
xor
inc
pop
push
sub
dec
xor
pop
pushl
push
lea
push
push
push
lea
push
push
push
call
add
lret
add
add
add
add
add
repnz
addb
mov
mov
add
sub
pop
call
push
push
push
call
flds
jne
cmpsb
add
repnz
xlat
out
add
test
push
aad
sarl
jle
push
ja
mov
mov
add
pop
addl
add
mov
pop
rolb
rcrl
scas
sub
pop
call
push
push
not
rol
push
sub
add
shr
rol
sub
shr
not
pop
not
add
pop
push
push
push
push
push
call
jmp
push
les
imul
add
fsubrp
add
add
add
jecxz
cld
add
imul
add
add
call
add
jmp
test
add
stc
mov
in
in
pop
pushl
push
lea
push
push
push
push
push
lea
push
call
pop
jb
leave
jp
add
add
add
add
pop
clc
fldl
mov
idiv
ljmp
add
mov
jl
cmpsl
movsb
jbe
add
add
jb
aam
add
add
add
clc
in
add
cli
mov
fadd
add
movsl
add
in
in
call
call
push
push
sub
push
or
not
add
inc
sub
add
not
sub
pop
pop
push
lea
push
call
pop
sar
mov
fcompl
jecxz
lds
add
add
add
iret
mov
mov
roll
test
mov
xchg
popf
sarl
loopne
add
lcall
jne
call
push
push
push
push
push
call
rolb
xchg
add
push
add
mov
add
les
jbe
fwait
pop
add
test
mov
add
add
add
fildl
add
pop
add
out
add
jl
xchg
add
add
cli
add
ljmp
add
in
pop
lea
push
push
lea
push
push
push
push
call
mov
movsl
jnp
les
jecxz
out
fcoms
lods
imul
xchg
xchg
mov
add
lds
lock
add
cld
mov
fisubrl
add
jb
shlb
mov
aad
in
in
lcall
shrb
stos
subb
pop
add
inc
sub
lea
sub
ror
pop
sub
sub
add
pop
push
lea
inc
sub
pop
pushl
call
push
lea
push
lea
push
call
add
add
mov
fiadds
mov
ret
mov
fs
clc
add
std
add
lcall
mov
add
addb
js
add
mov
push
add
in
hlt
lcall
shrb
add
dec
shl
push
xor
add
rol
sub
sub
pop
shr
add
pop
push
dec
not
shl
add
pop
pushl
push
lea
push
push
push
push
push
push
push
push
call
pop
add
testl
outsl
mov
testb
rolb
push
add
add
add
xchg
lret
cltd
add
add
fsts
add
sub
pop
call
push
shl
shr
pop
call
push
push
xor
sub
shr
push
or
inc
add
shr
add
sub
not
pop
inc
pop
push
pop
pushl
call
push
inc
pop
call
push
push
shr
inc
push
and
add
ror
sub
sub
rol
add
lea
pop
pop
push
shl
add
shr
pop
pushl
call
push
push
ror
add
push
sub
add
shr
sub
rol
sub
pop
ror
not
sub
pop
push
push
add
lea
sub
sub
push
sub
add
add
dec
lea
sub
lea
pop
lea
sub
inc
xor
pop
push
xor
pop
call
pop
push
push
push
push
push
push
push
lea
push
call
mov
jno
cmc
add
imul
enter
add
add
enter
xchg
scas
icebp
add
test
add
jle
mov
add
out
xlat
cmpsl
flds
add
scas
add
incb
lods
movsl
add
mov
add
call
dec
jne
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
add
push
call
popf
faddl
movsl
clc
mov
lods
add
out
add
add
add
jae
push
cmpsb
add
push
mov
mov
add
add
mov
add
add
addr16
pop
call
push
push
push
push
push
push
lea
push
call
add
mov
add
scas
add
add
cmpsl
add
cld
add
lcall
xchg
add
loop
push
sub
pop
mov
lea
push
push
shr
ror
push
sub
add
lea
inc
rol
sub
shr
lea
add
pop
shl
shr
pop
push
pop
pushl
call
push
ror
inc
pop
push
push
push
lea
push
call
add
addl
add
push
hlt
jb
add
int
in
shl
xchg
mov
mov
ret
add
add
add
sub
pop
call
push
push
not
sub
push
xor
add
shl
inc
inc
sub
pop
sub
shl
sub
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
pusha
add
mov
add
mov
add
mov
jmp
add
ja
add
add
pusha
aad
add
std
mov
add
mov
stos
leave
add
add
add
leave
add
add
lcall
jne
push
rol
shl
shr
pop
call
push
sub
pop
call
push
add
xor
pop
mov
lea
push
push
add
not
sub
push
push
pop
add
sub
shr
xor
sub
lea
inc
pop
add
pop
push
push
push
lea
push
push
call
in
pushf
add
add
rorl
cli
lock
pop
mov
add
push
add
mov
add
movsb
xchg
sti
add
add
mov
add
cmc
mov
sti
push
add
loopne
add
fs
popf
sub
pop
pushl
call
push
lea
push
push
call
add
add
nop
add
jno
push
push
mov
push
add
add
popf
xchg
xchg
cmc
add
mov
mov
add
lea
push
push
shl
sub
pop
push
push
push
lea
lea
shl
pop
pushl
push
push
add
dec
shl
push
push
pop
add
sub
sub
ror
sub
dec
pop
shr
ror
pop
push
push
push
push
push
call
mov
rcl
lret
add
fadds
add
add
popa
js
in
add
add
add
imul
add
add
add
lcall
push
push
push
lea
push
push
call
loopne
add
jb
fadds
lret
jb
jp
mov
add
addb
add
leave
push
xlat
insb
fiaddl
aad
add
pop
lock
aad
lods
jo
pop
add
fs
add
movsl
add
add
jecxz
jl
out
shlb
outsl
add
shrb
cltd
hlt
in
push
add
sub
push
and
add
add
sub
inc
inc
sub
pop
rol
pop
push
push
push
push
push
push
push
call
ret
mov
arpl
xchg
cmpsl
add
lretw
ljmp
clc
jne
push
push
pop
js
in
xchg
jmp
jo
scas
mov
add
ljmp
push
pop
add
add
test
add
leave
sub
pop
pushl
push
dec
rol
add
inc
pop
call
push
push
push
push
push
push
push
push
lea
push
push
call
fwait
je
addl
lea
add
add
roll
mov
xchg
add
add
add
add
into
addr16
add
add
roll
mov
jbe
add
lcall
call
mov
jno
jge
push
lea
push
call
add
add
lahf
je
pop
imul
add
call
jns
add
jnp
stos
add
jp
add
popa
mov
mov
mov
add
int3
pop
bound
xchg
mov
add
mov
fcmovnbe
xlat
add
mov
mov
pop
call
push
push
add
not
not
push
or
inc
add
lea
sub
rol
not
pop
lea
dec
add
pop
push
add
add
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
in
ja
cmpsb
add
mov
mov
out
imul
out
add
mov
jle
add
fs
jmp
add
pusha
pusha
add
add
gs
fiaddl
add
add
fbstp
fadds
push
add
lret
add
out
loopne
in
fdivr
lcall
iret
adc
add
out
add
pop
call
pushl
push
push
push
push
push
push
push
lea
push
push
call
lock
mov
add
in
add
add
add
jp
fs
fucomi
loop
lcall
roll
xorl
push
add
mov
lea
test
add
loope
add
in
push
pusha
ljmp
add
mov
jmp
push
push
xor
push
or
inc
add
xor
sub
sub
pop
sub
pop
push
not
shl
pop
pushl
push
push
push
push
push
push
call
hlt
jmp
shlb
clc
pop
add
cwtl
add
mov
add
adcb
xchg
gs
repnz
add
mov
call
push
push
push
push
push
lea
push
push
push
call
add
lret
fiadds
add
pop
fnstenv
add
jecxz
ret
insb
add
push
add
mov
lahf
jno
add
test
pop
pop
scas
mov
movsb
or
lock
mov
ffree
add
add
int3
mov
push
iret
fsubr
nop
popa
add
in
in
lcall
shrb
cs
xlat
push
shl
sub
push
push
pop
add
sub
add
sub
sub
pop
pop
push
shl
sub
rol
pop
pushl
call
push
shl
not
pop
push
push
push
call
add
add
add
add
leave
loope
pop
xchg
add
add
test
les
add
int3
add
mov
in
nop
add
mov
enter
in
add
clc
pop
call
push
push
lea
push
lea
push
push
push
call
mov
mov
add
insb
push
pusha
pop
pop
in
loope
pop
mov
pop
fwait
add
not
in
push
cmpsb
testb
fmull
js
lret
out
xchg
mov
call
pop
nop
lea
add
sub
pop
leave
push
dec
dec
shl
pop
add
push
push
lea
push
push
push
push
lea
push
push
call
mov
jae
push
xchg
add
pop
cltd
add
add
arpl
xchg
xchg
cli
add
add
repnz
add
lret
sbb
add
add
add
add
lock
out
testl
pop
pop
push
push
push
push
lea
push
call
push
mov
add
add
push
add
aad
push
add
jns
xchg
add
add
add
fidivs
add
xchg
push
mov
mov
fwait
add
lahf
repnz
aad
add
pop
arpl
fildl
int
add
lcall
push
sub
sub
pop
pop
push
push
call
lret
pop
add
lahf
add
add
add
add
into
cmpsb
add
out
add
jl
add
addr16
rcrb
add
add
loopne
push
jnp
sub
pop
xor
push
shr
pop
inc
push
push
push
push
push
lea
push
push
push
call
add
out
add
xchg
movsl
mov
jle
add
test
cmpsb
xchg
fildl
add
mov
add
add
fiadds
jnp
mov
add
iret
lds
test
movsl
into
add
fdivl
add
xchg
ljmp
rolb
in
loopne
ret
leave
push
lea
push
lea
push
lea
push
call
add
loop
mov
add
add
push
add
jmp
pop
xchg
add
mov
pop
out
add
add
xchg
add
add
add
add
flds
add
popf
add
add
push
stos
int
add
sub
pop
ret
push
dec
add
sub
pop
push
mov
push
push
push
push
push
push
push
lea
push
push
call
pop
fsts
add
shl
add
aad
mov
in
add
incb
jne
add
aad
mov
mov
xchg
add
cmc
pusha
add
add
add
push
add
in
fcompl
jge
add
test
add
add
rol
shr
pop
jmp
push
shr
inc
shl
pop
mov
push
push
call
fildl
iret
jbe
in
add
movsb
add
arpl
jne
pop
xchg
add
call
add
mov
movsb
cmc
js
in
lret
pop
not
pop
push
pushf
add
loopne
add
add
clc
lcall
and
push
rol
pop
xor
push
push
call
insb
out
add
icebp
mov
add
xchg
mov
add
test
add
fists
jne
rolb
add
data16
add
scas
add
not
add
mov
pop
pop
aam
add
jae
ljmp
add
pop
xor
push
lea
push
push
push
push
push
push
push
push
call
mov
imul
mov
lret
pop
add
cmpsl
ja
into
add
add
add
hlt
ljmp
lret
pop
mov
jmp
shl
stc
add
outsl
hlt
pop
add
sub
pop
add
xor
push
push
lea
push
push
push
push
push
push
push
call
add
outsl
jns
mov
add
add
testl
cli
loop
loopne
fimuls
test
shl
xchg
lahf
add
jbe
xlat
addl
add
hlt
add
pop
add
cmpsb
mov
pop
add
dec
push
lea
not
pop
sub
jmp
push
sub
add
pop
sub
push
pop
pushl
push
inc
pop
pop
push
sub
pop
sub
push
pop
cmp
jne
mov
push
push
push
push
push
push
push
push
call
lods
add
add
add
add
sarl
add
fwait
mov
pop
xchg
in
add
add
pop
add
add
jle
sub
pop
lea
sub
push
inc
ror
dec
pop
mov
push
push
push
push
push
push
lea
push
push
call
imul
add
mov
sarb
je
mov
loop
add
les
stc
add
les
pusha
popf
add
add
xchg
add
je
std
add
fsubrl
in
loopne
shr
push
push
push
push
lea
push
push
lea
push
push
call
scas
jmp
add
mov
in
xchg
mov
movsb
add
mov
mov
add
mov
mov
add
faddl
add
imul
jmp
lcall
enter
sub
jmp
not
add
pop
pushl
push
rol
pop
pop
push
push
push
push
push
call
je
add
push
mov
add
jns
lods
repnz
add
xchg
pop
add
arpl
pop
popf
add
mov
add
add
jle
scas
add
jp
add
add
jb
test
mov
mov
add
add
add
add
jmp
ror
pop
and
sub
push
add
pop
cmp
jne
push
lea
push
lea
push
push
call
lea
jl
fstpl
xorl
in
add
popa
pushf
pusha
add
add
mulb
mov
add
in
lock
lcall
push
push
call
add
shrl
scas
push
fbld
iret
xchg
shr
add
add
clc
test
add
xchg
add
jae
add
movsl
add
popa
mov
add
mov
add
pop
addb
add
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
add
in
add
add
mov
add
push
bnd
int3
arpl
leave
add
bound
add
add
add
pop
jb
add
leave
add
add
int
addr16
add
scas
pop
movsb
mov
add
xchg
add
add
fcomps
mov
push
shr
pop
add
push
lea
push
push
push
push
push
push
push
push
push
call
add
shll
call
lahf
add
mov
test
add
add
add
jnp
push
cmc
add
add
add
fwait
jae
ljmp
imul
lds
add
xchg
mov
fidivrl
push
add
mov
add
add
js
xchg
cmp
add
xchg
add
lcall
push
push
push
push
lea
push
call
je
mov
add
cwtl
int3
add
movsb
add
rcl
in
jnp
add
scas
push
aad
lret
xchg
ja
push
push
add
cltd
movsl
stos
add
add
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
int3
fcompl
lock
add
clc
fsubrl
add
add
pop
add
mov
out
flds
pop
add
mov
aad
fwait
je
sub
pop
push
push
push
lea
push
call
adc
sbb
add
add
lods
lahf
js
add
xchg
fildl
out
fiaddl
mov
les
push
rolb
add
add
add
jb
lods
add
push
stos
shr
test
loop
sub
pop
push
push
not
shl
add
pop
mov
lea
push
lea
push
push
lea
push
push
lea
push
call
je
pop
push
add
push
mov
std
add
testb
add
je
iret
add
icebp
add
add
into
xchg
add
ja
pop
popf
arpl
pop
test
add
xchg
fnstsw
mov
mov
xchg
repnz
fwait
add
mov
pushf
bound
jae
test
leave
imul
mov
pusha
add
lcall
ljmp
outsl
push
lea
push
push
push
call
add
xchg
rcll
mov
push
les
add
add
jae
add
add
mov
mov
add
ljmp
add
push
add
sti
lods
rcrb
stc
pop
lds
mov
add
add
jb
mov
addl
loop
clc
add
mov
add
in
call
ljmp
add
mov
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
cwtl
ror
add
add
add
cmc
int
add
lret
negl
add
jbe
popf
add
add
add
xchg
imul
add
add
loope
add
popl
lock
lods
rolb
sub
pop
add
push
dec
pop
mov
push
xor
pop
add
push
lea
push
push
lea
push
lea
push
call
fsub
loopne
jge
pop
add
enter
add
popf
add
loop
add
loope
add
cmpsl
insb
add
fdiv
int
push
push
test
mov
add
call
int
add
add
iret
jp
add
mov
sub
pop
xor
push
lea
push
push
push
push
push
call
jo
stc
add
bound
out
add
add
jb
mov
xchg
add
add
call
add
add
in
pop
add
add
add
mov
lcall
xlat
push
sub
pop
and
push
rol
pop
rol
rol
push
push
push
push
push
push
lea
push
push
push
call
add
addb
hlt
std
faddl
je
add
jnp
mov
add
add
xchg
cwtl
add
add
push
cmpsb
andl
pop
fdivl
jl
cmpsb
sar
xchg
push
hlt
test
in
fcompl
add
ror
pop
inc
push
lea
push
push
push
push
push
push
push
push
call
in
ljmp
add
pop
je
add
add
fisttps
jne
testl
add
add
test
rolb
lods
mov
aam
iret
ror
in
add
add
jle
mov
jp
std
xchg
testb
int3
pop
jb
pop
add
add
lcall
cmp
jne
push
push
lea
push
call
iret
add
jno
jbe
repnz
je
test
pop
fadds
clc
add
pushf
lods
xlat
xchg
lods
add
xor
xchg
mov
cmc
ffreep
push
mov
in
add
add
mov
add
popf
roll
fs
in
hlt
lcall
inc
pop
ss
push
dec
add
pop
cmp
je
push
shr
shl
dec
pop
add
cmpl
jne
push
push
push
push
push
call
add
sbbl
aad
xchg
xchg
gs
repnz
fdivrl
add
mov
add
mov
scas
lret
cmc
add
jb
add
add
test
add
lock
addr16
sub
pop
xor
push
lea
pop
pop
push
push
push
lea
push
push
push
lea
push
push
call
push
cld
pop
add
scas
jo
cmpsb
sahf
add
xchg
sti
into
mov
add
add
imul
add
add
add
pop
popa
jmp
aad
sub
pop
pop
push
not
shr
dec
shr
pop
pop
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
push
in
pushf
add
rcrb
add
add
add
add
add
incb
test
add
mov
int3
insb
loop
test
fidivs
stc
ficoml
add
mov
movsl
add
add
in
fcomps
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
jnp
stos
push
add
test
add
add
in
aad
add
fwait
mov
enter
enter
add
test
sarb
loopne
pop
push
xor
pop
leave
ret
push
push
lea
push
call
add
push
mov
cmpsb
add
mov
fcomip
add
sti
jmp
pop
rolb
jmp
mov
pop
xchg
add
pop
add
jno
mov
add
add
xchg
cmc
add
lret
add
out
cltd
jecxz
test
fildl
lcall
push
adc
cld
jl
mov
rorl
push
push
lea
push
push
call
sahf
add
pop
jecxz
mov
add
imul
sahf
add
add
add
pop
add
std
cmc
stc
mov
xchg
add
push
in
jbe
add
scas
add
add
cld
add
loopne
lcall
push
or
fdiv
pop
jb
push
push
push
lea
push
lea
push
lea
push
push
call
add
jmp
loopne
outsl
add
push
addl
add
add
lods
in
cltd
movl
add
sti
stos
pusha
add
movsb
js
roll
jns
les
pop
scas
roll
pop
imul
pop
test
push
push
push
push
push
push
call
add
fcmove
cmpsl
xchg
loop
mov
push
test
add
add
add
divl
add
pop
add
mov
add
add
les
movsl
icebp
call
push
lea
push
push
push
push
call
add
xchg
add
movsl
sti
add
add
pop
mov
add
pushf
add
int
int
xchg
add
add
add
in
add
ret
loop
mov
add
fdivp
mov
add
xchg
sti
lahf
rolb
lcall
xor
push
shr
shr
add
inc
pop
pop
push
push
push
push
call
clc
add
icebp
test
add
add
add
jp
mov
int
xchg
outsl
lods
hlt
cmc
mov
mov
add
test
mov
xchg
xchg
add
add
sahf
mov
in
mov
jl
loopne
xchg
add
rolb
imul
fiadds
lcall
push
ror
pop
pop
push
inc
pop
pop
pop
push
lea
push
push
call
add
add
arpl
shrl
jp
push
add
add
add
add
xchg
movsb
jl
cltd
add
leave
mov
into
jb
xchg
add
mov
in
hlt
lcall
ret
push
lea
push
push
push
push
push
lea
push
push
push
call
ja
mov
add
push
lcall
jo
clc
jmp
mov
add
addr16
arpl
addl
lret
add
add
mov
add
jmp
add
push
push
lea
push
push
push
push
call
mov
jle
repnz
out
add
iret
jne
rcll
add
lea
ljmp
add
add
push
lods
add
test
add
mov
out
iret
in
lret
add
sub
pop
mov
push
push
push
lea
push
call
push
imul
add
add
add
add
add
in
add
stos
add
add
mov
int
add
jmp
mov
into
add
mov
add
sub
pop
add
push
not
pop
push
push
add
not
pop
push
push
push
xor
pop
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
mov
jbe
js
add
push
push
xchg
std
xchg
fs
add
jno
stos
add
test
cwtl
mov
add
loop
add
push
movsl
add
add
in
add
add
test
add
jp
notl
add
push
ror
fiaddl
jbe
add
add
pop
or
int3
pop
push
push
dec
xor
pop
pop
push
push
push
call
add
lods
bound
jno
jmp
addl
add
mov
add
add
add
add
pusha
jge
add
movsb
lcall
jne
jnp
add
sub
pop
lea
sub
push
push
push
call
movsl
mov
out
add
add
testl
call
jecxz
aad
add
add
add
add
std
xchg
push
neg
mov
add
test
mov
hlt
lcall
adc
add
lea
push
push
push
push
call
jo
add
mov
add
stc
add
mov
add
add
aam
add
movb
push
mov
add
out
add
cmpsb
add
jle
add
add
add
imul
int
test
pop
mov
lcall
ljmp
push
dec
inc
lea
pop
mov
push
push
push
lea
push
lea
push
push
push
call
jb
popf
test
cli
fcompl
iret
nop
add
add
add
outsl
add
in
loope
jnp
add
mov
mov
in
in
lcall
fsts
rol
enter
jae
push
add
sub
sub
sub
pop
popl
mov
push
push
push
lea
push
lea
push
push
push
push
call
add
add
cmc
add
add
cmpl
mov
add
add
add
mov
add
add
imul
mov
lcall
stc
xor
push
push
push
lea
push
push
push
push
push
call
movl
add
cmpsl
aam
pushf
pop
mov
push
add
in
imul
add
add
js
push
add
add
mov
call
add
mov
add
aad
add
lea
out
cli
add
lcall
adc
mov
push
lea
push
push
push
push
push
push
lea
push
call
add
scas
add
add
mov
add
flds
test
in
add
movsb
mov
add
aad
add
lret
sti
out
add
xchg
add
add
loope
pusha
js
push
adcb
int
mov
add
imul
add
mov
in
loopne
lcall
rcll
inc
xor
push
lea
push
call
mov
add
lcall
lock
cli
mov
add
mull
lock
shrb
xchg
rolb
xchg
js
test
xorl
mov
mov
xchg
xchg
add
lcall
rol
pop
push
not
add
pop
nop
nop
push
lea
push
lea
push
push
lea
push
push
call
aam
pusha
stc
xchg
stos
add
hlt
scas
rolb
js
mov
movl
add
add
add
add
out
add
mov
add
ror
add
loope
xchg
lock
add
add
add
jecxz
mov
mov
int3
loop
cmpsb
add
lcall
add
push
call
jne
arpl
imul
jge
testl
mov
iret
in
push
add
add
mov
add
scas
rcr
jbe
cmpsl
mov
hlt
data16
add
mov
pop
xchg
hlt
add
mov
shlb
add
add
push
mov
clc
sub
pop
nop
push
add
pop
inc
nop
push
push
push
push
lea
push
call
add
add
push
add
xlat
mov
add
add
add
add
movsb
add
stc
xchg
movsl
mov
loopne
data16
pop
cwtl
add
lcall
cmpb
jne
push
push
push
push
lea
push
push
lea
push
push
push
call
add
mov
add
xchg
pop
mov
xchg
lahf
add
out
arpl
js
add
add
test
add
cli
loope
add
add
fldcw
push
add
pop
enter
add
push
addl
mov
add
lcall
inc
pop
ss
push
push
push
push
lea
push
push
push
lea
push
push
call
into
repnz
mov
mulb
fadds
aad
add
mov
add
add
fisubrl
mov
jmp
jne
int3
mov
mov
add
jge
enter
jnp
iret
mov
test
adcb
add
add
jl
jbe
stos
je
sub
pop
nop
push
add
pop
nop
cmp
je
push
push
push
lea
push
push
push
call
jne
add
jmp
jns
aad
sti
aam
cli
aad
nop
mov
add
fsub
cwtl
add
push
mov
xchg
add
movsb
stc
add
add
mov
pushf
lcall
add
scas
jno
add
jl
pop
add
sub
pop
nop
push
push
push
push
push
push
push
push
call
add
add
pop
add
ljmp
rolb
add
imulb
add
add
stc
pop
mov
add
add
scas
push
lds
add
jbe
add
roll
push
jbe
add
nop
push
sub
pop
inc
push
push
push
push
call
add
bound
add
lock
loope
enter
aad
add
add
iret
xorl
add
add
lock
add
add
pushf
add
mov
add
push
mov
movsl
testb
add
ljmp
lods
nop
add
data16
sub
pop
nop
push
not
sub
xor
ror
pop
nop
push
xor
sub
rol
pop
cmp
jb
xor
push
add
pop
jmp
push
sub
not
pop
mov
push
not
pop
add
push
rol
sub
sub
pop
movzwl
push
push
push
lea
push
call
mov
push
add
add
cltd
push
rolb
pop
fnsave
in
add
mov
push
rorl
fxch
aam
fs
add
out
add
ror
scas
addb
add
xchg
scas
out
add
add
sub
pop
mov
push
inc
pop
add
push
ror
inc
sub
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
rolb
iret
fildl
add
add
fiadds
add
in
in
add
push
add
add
test
jns
movsl
add
add
add
stc
out
add
add
jp
movsl
xchg
add
sub
pop
xor
push
sub
xor
dec
pop
xor
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
bound
fwait
popa
push
mov
add
add
idivl
lret
xchg
add
add
pop
cmpsl
test
mov
test
pop
loopne
flds
lcall
loope
xor
push
push
push
lea
push
push
push
push
push
push
call
ja
jl
aad
jbe
mov
jge
mov
add
mov
cltd
jae
add
add
add
add
out
nop
fcomp
fwait
add
add
sub
lcall
loope
push
push
push
push
call
push
xchg
mov
mov
jns
push
add
mov
arpl
mov
rolb
mov
pop
add
sti
mov
add
test
add
loop
aam
xchg
mov
mov
mov
add
lea
fsubrl
add
jno
in
lock
xor
shl
push
lea
push
push
push
push
lea
push
lea
push
push
call
ret
push
mov
popa
fistpl
xchg
add
mul
mov
std
rcrl
add
add
mov
jns
in
loopne
lcall
or
mov
push
add
inc
pop
add
pop
push
inc
pop
pop
push
inc
ror
pop
pop
push
push
push
call
sti
movsl
out
add
pusha
add
jb
add
push
add
push
xchg
cmc
add
roll
add
add
add
stos
add
imul
loope
test
scas
add
cwtl
add
in
add
ret
int
push
mov
add
lahf
add
push
shr
add
sub
sub
pop
leave
push
push
push
push
push
push
push
call
add
shlb
add
xchg
aam
pusha
jp
push
lods
cmpb
imul
mov
cld
lahf
add
mov
out
stos
imul
test
test
loopne
pop
addb
stos
xchg
add
add
out
arpl
xchg
je
sub
pop
ret
push
push
push
push
push
push
lea
push
lea
push
call
test
add
xlat
add
add
add
add
mov
mov
add
add
mov
loopne
push
mov
push
push
lea
push
lea
push
call
mov
movl
xorb
add
add
mov
mov
cli
add
mov
frstor
add
add
add
push
add
add
add
sub
pop
push
push
shl
shr
sub
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
jne
into
out
imul
add
xchg
mov
sar
add
xchg
add
add
push
add
add
ret
jecxz
leave
loope
fcomip
icebp
sub
pop
push
push
shl
shr
sub
pop
mov
mov
push
push
lea
push
push
push
call
add
pushf
add
xchg
mov
lock
mov
add
imul
clc
nop
add
add
popl
test
add
imul
lods
add
in
in
pop
mov
push
push
push
lea
push
lea
push
push
push
call
lods
add
add
add
leave
cmpsl
stc
jne
call
pop
mov
lods
out
fcoms
xchg
addb
add
pop
sub
pop
test
je
push
ror
xor
pop
mov
test
je
push
xor
pop
mov
mov
push
push
push
call
xchg
addl
testl
faddl
lea
push
aad
push
xchg
add
addb
loope
jbe
std
sub
pop
mov
push
push
push
call
add
test
add
add
lret
push
leave
mov
lret
fildl
push
add
add
add
cld
mov
add
add
push
fadd
add
test
lods
xorb
add
fwait
aam
in
hlt
lcall
push
push
call
add
cmpsl
hlt
loopne
xchg
xchg
addb
add
add
xchg
mov
jbe
push
add
xlat
insb
jecxz
cli
add
mov
add
mov
mov
pop
stos
mov
xchg
xchg
xchg
cmpl
in
clc
pop
cmp
je
test
je
push
xor
pop
mov
push
inc
pop
inc
cmp
je
push
lea
push
call
pop
add
jno
push
add
xchg
lret
mov
add
sarl
add
sub
fbstp
clc
pop
test
jne
xor
push
push
push
push
push
push
lea
push
lea
push
push
push
call
pop
add
jmp
mov
add
add
aam
lahf
movsb
add
fildl
int
add
lcall
pop
push
add
not
add
pop
pop
push
push
push
lea
push
lea
push
call
add
int
add
jl
popf
loope
scas
shlb
incb
jge
add
int3
cmc
add
add
pusha
pop
jecxz
add
add
cmc
scas
push
add
add
loopne
mov
call
add
xchg
xchg
stos
mov
mov
in
pop
pop
push
add
sub
pop
leave
push
push
push
push
lea
push
call
add
scas
mov
add
in
add
fldl
push
enter
mov
jns
decb
add
add
in
lcall
or
mov
push
push
push
push
push
push
lea
push
push
push
push
call
cmpsl
cwtl
mov
add
push
mov
xchg
popf
mov
jb
push
std
add
add
fdivr
testl
xlat
add
shll
lods
add
add
shll
pop
add
cltd
cwtl
add
out
add
mov
in
fcomps
push
sub
xor
pop
cmp
jne
push
shr
xor
pop
lea
push
push
push
push
push
push
push
push
push
push
call
divb
cli
mov
pop
add
out
add
add
call
add
addr16
add
enter
imul
xchg
add
add
xchg
out
push
std
add
jnp
jo
pusha
call
pop
jle
xchg
add
add
lods
mov
add
add
cli
add
sub
pop
mov
test
je
push
dec
dec
pop
mov
push
xor
pop
add
push
shl
pop
cmp
jne
mov
push
push
lea
push
push
push
push
push
call
add
aad
jne
mov
int3
test
mov
mov
cmc
fildl
xchg
cmpsl
cld
add
pop
push
lahf
mov
imul
xchg
xchg
int3
add
jmp
mov
in
mov
imul
mov
add
add
xchg
add
add
add
add
stos
arpl
push
test
rorb
je
add
mov
push
push
push
push
call
jne
add
incb
add
add
push
add
add
jbe
add
pop
mov
push
push
add
lds
icebp
add
lcall
roll
loopne
test
call
jge
in
jl
pop
pushf
cli
les
xchg
lea
push
lea
push
push
push
call
add
push
add
add
stos
imul
add
sarl
add
mov
fdiv
add
jnp
ljmp
jmp
popl
add
ret
jp
sub
pop
jmp
push
add
dec
rol
pop
xor
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
add
add
pop
add
movsb
repnz
in
lret
add
add
int
pop
jp
outsl
mov
add
sti
add
aad
add
sti
add
rolb
pop
pop
push
push
push
push
push
lea
push
push
push
call
pusha
cli
jo
push
add
add
xlat
fidivl
je
add
loopne
fiaddl
fsubl
mov
cli
roll
mov
pop
iret
in
sar
mov
add
add
push
pusha
add
xchg
add
cmpsl
cltd
add
rolb
lcall
push
push
push
lea
push
push
call
add
add
fnstcw
mov
add
enter
faddl
out
add
lret
les
add
jp
in
divb
jnp
mov
test
add
mov
add
hlt
push
add
lock
add
out
add
add
test
xchg
fldl
add
pusha
pusha
fdivrp
sub
pop
pop
push
add
shr
xor
pop
pop
leave
push
push
push
push
push
call
iret
push
mov
push
jl
add
add
mov
lods
test
scas
add
push
movl
jmp
mov
pop
ror
jb
in
in
pop
ret
push
pop
lea
push
push
push
push
push
push
push
lea
push
call
add
add
mov
mov
xchg
add
lret
add
leave
add
add
xchg
jae
addl
add
pop
stos
add
enter
iret
sar
cld
xchg
addl
stc
shl
pop
mov
add
jle
add
in
loopne
pop
pop
push
push
lea
push
push
push
lea
push
push
call
loop
jmp
jbe
addr16
popa
adc
cltd
cbtw
out
add
mov
fs
add
hlt
xlat
add
pop
add
mov
mov
jns
fadds
test
leave
aad
sub
pop
pop
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
xchg
add
add
add
jecxz
add
xchg
repnz
cwtl
js
fbld
xchg
push
lea
add
add
lock
xchg
cli
add
fiaddl
push
enter
add
add
mov
add
push
sbb
stos
add
jmp
mov
in
lods
jb
in
fcompl
ret
push
shl
pop
mov
push
push
push
lea
push
push
push
lea
push
call
mov
mov
mov
cmpsl
andb
shl
js
lds
add
add
fsubp
test
lret
mov
arpl
add
cwtl
xchg
lahf
ljmp
out
out
add
mov
cwtl
add
xchg
xchg
mov
test
lcall
push
sub
inc
add
pop
pop
pop
push
push
push
push
push
lea
push
push
call
cltd
lret
int
fs
add
push
jecxz
int3
jne
clc
lods
insb
idiv
add
mov
roll
iret
pop
add
add
mov
add
mov
jecxz
mov
add
lea
add
push
add
ljmp
jmp
add
add
test
pop
push
shr
inc
inc
pop
leave
push
push
push
lea
push
push
push
push
lea
push
push
call
stos
add
xchg
fdivrl
fdecstp
add
pop
std
push
pop
imul
add
add
lret
testl
add
pop
xlat
iret
cmpsl
jge
add
add
mov
mov
push
bound
add
add
test
jmp
nop
leave
jb
pop
add
in
fcompl
or
decl
ds
adc
cli
ljmp
aad
cmpsb
jl
out
std
daa
xor
jecxz
push
rol
jns
faddl
mov
mov
cs
mov
sub
xlat
movsl
bound
and
mov
pop
not
push
out
adc
push
adc
cmp
andl
les
xchg
int3
lcall
adc
xchg
fstps
or
jae
xlat
xor
lcall
bound
mov
aaa
xchg
fstl
into
loope
lahf
xchg
adcb
mov
mov
insb
mov
test
stc
pop
iret
adc
sti
xchg
jl
inc
out
cmp
pop
and
xchg
mov
int3
bnd
pop
sbbl
loope
mov
outsl
rcll
jne
push
clc
push
stos
pop
ret
ljmp
outsb
jb
or
fistpll
xor
ja
mov
out
jne
fcomi
or
mov
mov
adc
xor
xchg
mov
ss
xor
out
mov
xchg
mov
inc
imul
sbb
fsubr
mov
cwtl
xor
add
cmp
aas
aam
ror
sub
fisttpl
mov
in
into
lods
xor
inc
test
fldl
cli
test
push
imul
fsubs
mov
xor
cmp
or
jns
shr
jl
inc
popf
cmp
aam
fmul
and
ret
mov
push
mov
jne
xchg
dec
mov
aaa
push
cli
stc
adc
xchg
mov
movsb
and
lock
cmpsl
sbbl
mov
aad
sbb
mov
dec
fildl
pusha
inc
inc
inc
xor
and
aaa
shrb
jae
adc
pusha
push
jl
imul
cmp
cltd
sub
jns
sbb
push
es
cmpsb
sbb
and
push
lods
push
xor
cwtl
mov
stos
push
jmp
test
aad
ror
lret
pop
fistpl
jmp
cmp
pop
ss
xchg
sarb
sub
sub
mov
into
adc
mov
pushf
push
push
leave
jns
popf
aaa
inc
int3
add
and
fdiv
scas
stc
cs
and
jmp
addr16
bound
roll
in
movsl
outsb
leave
movsl
push
roll
lds
push
ret
push
fistps
andl
pusha
jns
daa
rcr
mov
adc
xchg
negl
inc
lcall
ret
xchg
cltd
pop
in
pushf
cmc
cmp
cmpsb
pop
jns
enter
push
aaa
mov
call
mov
pop
stos
movb
inc
push
rorl
xor
push
jp
and
shl
sbb
pop
mov
jbe
mov
xor
iret
cmp
fisubrs
add
add
sbb
adc
outsl
jae
incb
push
icebp
cmpb
bound
mov
stos
movsl
pop
pop
fisubl
sahf
mov
inc
jno
aad
push
jo
dec
iret
addr16
sbb
setp
pop
mov
and
sbb
mov
dec
pop
or
out
push
push
out
pop
lret
js
jmp
sbb
or
lcall
aaa
test
mov
stos
xorb
mov
jne
loope
andl
push
xchg
mov
stos
push
insb
push
insb
rclb
xchg
out
mov
xrelease
dec
jne
jl
xor
push
stc
mov
push
jo
out
aam
subb
mov
out
xchg
xor
jl
repnz
jae
js
clc
xor
rcr
cwtl
inc
xchg
push
fdivs
loopne
lret
push
inc
andl
jae
jne
push
shl
or
repnz
int3
mov
push
mov
adcl
aam
jnp
movsl
mov
mul
cli
gs
jmp
pop
sub
outsb
cs
pcmpgtd
or
inc
mov
pushf
out
cmp
inc
xchg
rorb
fsubrs
jp
cmp
dec
movsb
mov
push
push
inc
aaa
push
mov
xchg
dec
lds
je
dec
ja
pop
aas
mov
xchg
insl
adc
add
mov
mov
cmp
sbb
dec
clc
stos
scas
movsb
ss
pop
mov
shlb
pop
and
jb
and
ror
push
minps
je
cmp
lock
mov
jbe
xchg
jge
jnp
mov
jbe
rorl
pop
inc
insl
adc
stos
push
arpl
inc
or
mov
inc
or
push
pop
xor
ret
iret
xchg
pop
xchg
cwtl
jne
jo
add
dec
ret
mov
scas
mov
xor
fdivrl
sub
mov
mov
stos
mov
cmp
sub
dec
or
jmp
aad
outsl
int3
jle
sub
push
inc
mov
es
mov
fdivrl
fdiv
outsb
scas
mov
paddusb
and
clc
xor
popa
cmpsl
int
mov
mov
and
add
mov
xlat
lds
imul
lock
popf
pop
cmp
push
std
orb
jg
fdivl
loope
pop
push
or
xchg
orl
stos
jp
imulb
xchg
enter
push
fsubrp
ftst
sub
add
out
cmp
sbb
xorl
ljmp
add
mov
mov
imul
cmpsb
loopne
movl
add
nop
and
pop
mov
cs
dec
gs
xor
int3
pop
push
lret
inc
insb
ret
inc
and
adc
sbb
add
icebp
xorl
push
dec
shl
sbb
push
mov
cli
loope
cmp
push
mov
push
jbe
push
adc
and
push
jmp
and
add
add
or
cmpsb
mov
jg
pop
adc
fistpl
xchg
addb
pop
add
cld
sbb
ds
mov
jb
sub
sub
sbb
adc
cmp
sbb
lods
mov
cmp
pop
sbb
jg
ds
mov
lods
cltd
sub
imul
enter
and
ret
inc
xor
orl
hlt
loope
pop
dec
mov
in
xchg
sub
loope
cmp
rclb
mov
jne
orl
push
loopne
jl
sbb
divb
scas
les
lods
int
loop
daa
dec
sub
mov
mov
mov
int
in
les
adc
cmp
dec
lds
sbb
sbb
add
cmp
mov
dec
push
cs
scas
sbb
xor
enter
arpl
pop
cmp
push
push
sbb
bound
arpl
pop
xor
popf
imul
xchg
aam
movl
mov
mov
jmp
int
pop
cmp
sbb
pop
cmp
icebp
sbb
je
mov
or
popa
ljmp
adc
fucomi
frstor
scas
shlb
bound
lret
jo
and
add
aam
add
adc
lahf
mov
movsb
scas
sub
sbb
sahf
or
imulb
cwtl
into
xor
lcall
in
sbb
mov
push
fnstenv
push
fsubrl
into
jl
dec
xor
mov
lods
popf
jbe
inc
aad
push
jno
mov
jns
push
mov
xchg
jge
mov
outsl
mov
loope
jns
mov
mov
mov
orl
inc
or
dec
test
jne
jmp
addl
sbb
pop
inc
mov
jo
cmp
mov
fstp
sub
sbb
sbb
fwait
cmp
mov
in
mov
test
mov
xlat
or
add
jle
fbld
adc
sub
inc
rcrl
add
out
imul
jle
sbb
xor
mov
jbe
movsb
sub
xchg
ss
mov
add
lret
inc
sahf
lret
data16
int3
fildl
mov
dec
jbe
mov
dec
mov
dec
outsb
push
pop
mov
push
xorl
cmp
jle
test
arpl
mov
dec
daa
jnp
icebp
imul
clc
fldenv
shll
push
test
lock
cmpb
sti
scas
fld
hlt
cs
inc
cmp
movsb
pushf
dec
enter
push
xchg
xchg
mov
mov
mov
ficomps
xchg
mov
or
sbb
sub
sub
xor
push
push
dec
add
ja
cld
dec
inc
hlt
imul
mov
push
and
and
xchg
sbb
mov
mov
jbe
pop
inc
cmp
popf
dec
xchg
out
inc
sub
mov
sbb
call
fwait
aam
ficompl
imul
enter
mov
push
mov
das
push
cmp
push
rcll
adc
outsb
hlt
sbb
scas
mov
xor
mov
sbb
arpl
push
xchg
xlat
cmp
xchg
repz
scas
subl
inc
std
inc
in
loopne
insb
in
xchg
dec
jno
mov
cmp
sbb
jnp
jmp
pop
adc
jne
inc
test
pop
inc
jb
cmp
popa
adc
mov
xor
js
notl
out
ljmp
xor
or
adc
sub
jle
mov
push
loope
push
jle
cmpsl
int3
sbb
jp,pt
mov
push
and
clc
lret
cs
ret
pop
cmc
mov
sti
and
pusha
xchg
mov
cltd
adc
nop
shlb
mov
xchg
sub
mov
xchg
scas
mov
or
jne
pop
mov
repnz
mov
nop
and
pop
mov
and
jnp
call
or
sbb
dec
push
inc
sbb
mov
lahf
loop
movl
inc
add
aaa
test
mov
cwtl
repz
insb
xor
push
dec
enter
lods
fmull
cmp
loopne
mov
adc
das
aad
mov
fmull
ljmp
cmp
cmp
incl
xor
ljmp
rorl
lahf
cmc
adc
add
leave
and
adc
xchg
push
dec
test
sub
test
push
add
aam
cmp
or
in
stos
mov
mov
add
dec
mov
xchg
mov
inc
scas
mov
stc
mov
int
dec
push
in
fs
push
in
jbe
xor
push
inc
ds
cwtl
xchg
push
lret
xchg
mov
aam
mov
push
dec
arpl
push
jae
aam
negl
or
sub
imul
pusha
xchg
test
inc
jae
sub
test
movsb
pushl
loop
mov
pusha
push
push
testb
pop
mov
gs
std
and
mov
jmp
adc
leave
jns
push
adc
cltd
mov
xchg
inc
test
jno
dec
mov
lds
dec
inc
bnd
and
mov
pop
daa
or
xchg
inc
pminub
push
movsl
mov
call
lock
gs
xlat
mov
repz
push
pop
scas
popa
adc
cmpl
loop
outsb
in
push
push
out
scas
dec
test
insb
aad
fnstsw
dec
lret
jp
shrl
xchg
cs
pusha
aad
sub
addb
pusha
sbb
and
mov
cmp
mov
mov
fistps
in
dec
aaa
jg
test
outsb
je
insb
icebp
loop
xor
shrb
cmc
leave
stc
inc
imul
mov
add
sbb
or
xchg
stc
push
xorb
inc
stos
pusha
xchg
fistpll
fsubrl
sub
add
inc
mov
cltd
dec
jb
stos
inc
rcl
xchg
cwtl
lods
and
bound
pop
data16
mov
sbb
pop
push
stc
insb
xchg
pop
loop
enter
xor
push
lea
pop
cvtdq2ps
sarl
jp
sub
and
jmp
fs
rolb
mov
insl
fisubrl
fimull
test
dec
pop
xchg
jl
cli
xor
dec
pop
inc
jno
cmpsl
stos
jne
inc
mov
cld
inc
mov
or
out
jle
adc
test
mov
mov
pop
mov
xor
sub
jmp
stos
cltd
adc
mov
roll
push
push
sub
xchg
sti
shl
and
jns
inc
test
jne
ljmp
enter
repz
mov
and
dec
mov
inc
cmp
xor
sub
mov
in
add
jg
icebp
mov
outsb
mov
lret
outsl
lods
roll
popf
loope
lock
mov
or
hlt
roll
fdivrs
not
xchg
adc
inc
jg
or
push
movsb
das
dec
sbb
in
push
cmp
cmp
aam
mov
mov
push
andb
pusha
shrl
aam
cmp
push
mov
xchg
jl
pop
cld
dec
testb
cmpsb
dec
test
push
pushf
jecxz
lret
sbb
sub
popfw
lahf
leave
loopne
pop
test
nop
push
sub
shrb
pop
sub
xchg
out
test
sbb
sbb
loop
mov
dec
add
ror
out
inc
fdivrl
jb
popa
jbe
inc
cs
out
scas
adc
and
mov
int3
sbb
dec
inc
addr16
jbe
repnz
divb
dec
or
push
sbb
adc
ljmp
or
jle
hlt
cmpsb
stos
std
rorl
mov
sub
mov
mov
imul
ja
push
cmp
test
lock
pop
imul
sbb
cli
lods
dec
add
push
fnstenv
xlat
xor
js
cmp
xor
repnz
mov
xlat
bnd
jl
push
push
xchg
mov
cmp
cmpsl
arpl
and
mov
stos
mov
pop
sub
jge
push
mov
lea
mov
adc
ds
inc
jns,pt
mov
loop
ds
xor
pop
xor
sbb
ljmp
xchg
addw
xchg
pop
int
cmpl
xchg
stos
sub
and
testl
jb
cmp
cwtl
cmp
mov
test
fsts
arpl
mov
pop
bound
pop
cld
pop
scas
add
push
push
imul
adc
pop
fidivrl
xchg
fsts
inc
dec
pop
ss
adc
push
add
adc
push
out
mov
xchg
lds
and
push
push
adc
in
jecxz
mov
repz
pop
inc
inc
xchg
mov
sarb
mov
mov
pop
cmpsl
stos
pop
push
popa
pusha
mov
movsb
loope
aas
jne
repnz
mov
sbb
xor
mov
outsl
divps
pop
cmpsb
mov
cmp
add
mov
cs
pop
cmpsl
subl
jg
jns,pn
lds
iret
mov
xchg
test
dec
cld
iret
pop
pop
arpl
pop
and
fmull
dec
pop
ror
and
mov
jbe
pushf
pop
adc
inc
and
leave
push
scas
popa
mov
pop
aam
pusha
and
cld
outsb
pop
sarb
mov
adc
sbb
mov
popf
jmp
stos
pop
pop
clc
int
push
daa
repnz
adc
push
mov
mov
xchg
inc
mov
fcmovne
mov
repz
sbb
cmp
sbb
icebp
push
imul
mov
add
int3
ljmp
pusha
clc
int3
inc
mov
faddl
push
repnz
mov
xchg
andb
xor
adc
imul
dec
ss
xchg
xor
mov
dec
or
sarl
movsb
sbb
pop
popa
inc
popa
mov
xor
pop
push
xor
std
fistpl
scas
insl
mov
push
test
mov
sub
push
push
mov
cmpsb
add
test
popa
pop
push
inc
lret
push
jp
out
jp
sar
and
inc
ret
les
test
nop
push
push
cmp
mov
out
and
jmp
les
xchg
cmp
js
outsb
mov
lahf
sub
and
add
push
pop
stc
pop
push
cmp
std
out
lahf
stos
mov
sbb
and
pusha
cmc
aam
hlt
shr
sub
leave
xor
mov
add
sbb
mov
movsb
clc
push
cmpsl
mov
insl
mov
mov
jns
dec
push
pusha
arpl
aaa
push
loop
ret
jecxz
pop
out
sub
mov
pop
stc
mov
ficomps
mov
push
xor
int
mov
test
mov
lods
aas
cmp
pop
pop
faddp
cmpsb
adc
pop
into
push
pop
mov
xchg
fs
mov
push
or
cmp
les
push
inc
dec
mov
xchg
scas
pop
mov
pop
push
dec
xor
mov
mov
jl
add
dec
cli
rol
and
dec
xchg
mov
and
xchg
pop
pushl
xor
mov
out
mov
lea
in
sbb
outsb
test
xchg
inc
into
adc
inc
jmp
fwait
cmp
fisttpl
jmp
daa
faddl
pop
mov
test
sti
add
mov
jns
lret
arpl
cmp
ljmp
pop
xchg
xchg
dec
mov
mov
jge
dec
mov
popa
pop
lods
shlb
inc
roll
jnp
or
lret
pop
pop
xchg
scas
lret
cmp
rolb
xchg
pop
push
or
push
jae
and
push
dec
add
imul
mov
scas
shrl
add
mov
je
pop
xchg
daa
lahf
mov
test
inc
xchg
push
cmp
inc
push
pop
and
pop
cmc
imul
lret
int3
sub
xor
in
jge
jne
loope
push
leave
pop
xchg
sub
sbb
inc
pop
mov
mov
arpl
cmp
sub
in
lret
in
sbb
fisttpll
xchg
in
out
repnz
fs
daa
test
cmpsl
push
inc
call
adc
and
xor
xchg
push
les
negl
movsb
cmc
ljmp
adc
jg
out
jb
fs
out
adcb
sti
jmp
xchg
adc
dec
adc
inc
add
lea
push
test
call
pop
daa
cs
pop
xchg
addr16
sub
mov
mov
and
aad
mov
call
movb
icebp
xchg
int
jns
jg
test
stos
xor
popa
rcrb
and
mov
mov
xorl
or
bound
shlb
push
imul
dec
out
test
adc
scas
cmp
lret
cli
inc
cltd
cmp
nop
pop
iret
sbb
outsb
inc
mov
into
cwtl
addb
sbb
jle
movsb
pop
lret
repnz
add
sub
jg
pop
sub
loope
inc
lods
rcrl
out
mov
dec
into
repz
xchg
cmp
aas
fsubrs
xchg
das
push
addb
loop
and
push
aam
mov
mov
jge
aam
xchg
lods
fnstsw
mov
repnz
popa
cli
repz
jmp
test
pop
push
rcrb
pushf
push
aad
sub
incb
mov
add
cs
icebp
repnz
or
sub
cmp
aaa
in
ss
in
pop
int
andb
into
jns
and
xchg
fnstcw
jo
and
jle
jb
mov
pop
sub
iret
aas
mov
fwait
call
in
lds
cmp
adc
incl
sbb
push
sbb
and
std
jecxz
sbb
sbb
rorb
cli
outsl
inc
mov
dec
outsb
dec
lret
mov
jge
sbb
and
aad
dec
mov
or
cmp
out
sbb
aas
jbe
ret
les
xor
cmp
mov
cmp
mov
dec
jl
jg
dec
and
xchg
jle
stos
orb
inc
jl
lods
push
xrelease
aaa
sbb
bound
sub
mov
or
subb
mov
loop
hlt
push
sub
push
lahf
inc
push
mov
mov
dec
in
xchg
sti
inc
les
iret
mov
xchg
mov
into
mov
pop
sbb
cmp
xchg
insl
decb
sub
adc
lahf
testl
jno
jo
das
jns
movsb
in
int
push
xchg
stos
xchg
or
or
test
or
mov
mov
fildl
jb
loope
lods
ja
dec
cmpsl
repz
clc
fs
test
inc
xor
popl
inc
inc
mov
push
mov
in
sbb
ljmp
rorl
dec
jae
inc
adc
in
decl
icebp
aas
dec
arpl
jns
fsubs
lahf
icebp
dec
inc
cmp
in
dec
sub
fld1
adc
loopne
mov
fimuls
inc
jne
xchg
je
sub
fdivrs
mov
sub
push
cs
xchg
xchg
mov
jmp
fsubrs
mov
jge
inc
aaa
pop
mov
in
test
fistpl
div
xchg
rcrl
icebp
fst
outsb
cmp
xchg
jg
jb
rcrl
lods
jae
scas
adc
gs
outsb
inc
jae
sub
xchg
inc
xchg
out
bound
popl
repnz
push
mov
mov
cwtl
enter
pop
mov
sub
test
out
adc
sub
jecxz
test
sti
push
in
xor
or
sub
ret
adc
js
sti
add
mov
jp
inc
push
pop
call
fmuls
out
xchg
xchg
pusha
addps
add
mov
mov
adc
xchg
popf
cmp
push
fisubrl
shll
leave
mov
movaps
pop
pop
inc
mov
mov
inc
mov
lret
fsubrs
sbb
lahf
sub
sub
xchg
ss
pop
das
sub
push
xchg
fwait
xor
mov
dec
lods
jl
orb
xchg
sbb
xchg
or
cmp
repz
call
test
jae
mov
fs
mov
lods
cmp
jg
and
mov
xchg
fmull
adc
pop
scas
mov
pop
mov
xchg
and
pop
jecxz
in
inc
movsb
pop
les
jae
pop
les
mov
and
xor
jecxz
mov
das
xchg
xchg
mov
lock
inc
dec
shl
in
mov
dec
shrl
fwait
enter
insb
mov
je
pop
sub
jmp
sahf
inc
shrl
add
mov
xchg
gs
je
mov
adc
cmp
daa
out
rolb
js
sbb
cmp
adc
out
dec
ss
dec
lods
scas
push
xchg
loope
jns
lds
mov
fisttps
push
xor
into
sarb
test
sub
adc
adc
mov
fstl
es
pop
push
cmp
repz
dec
pop
jns
push
dec
lcall
rcll
pmovmskb
pop
js
repz
pop
and
popa
inc
jo
daa
push
scas
sbb
pop
loope
es
dec
aad
pop
cmc
push
mov
mov
test
mov
ficompl
dec
nop
pop
das
fs
jne
es
or
call
bnd
push
stos
lods
sbb
xor
ja
ficoms
lret
movsb
icebp
mov
xlat
outsl
xor
cmpsb
roll
jae
stc
sub
jbe
out
loope
push
jo
push
xchg
ja
inc
pop
mov
pop
fimull
hlt
outsb
jne
or
into
sbb
dec
jo
in
testb
icebp
outsb
hlt
ret
xor
bound
dec
sbb
adc
js
jns
mov
iret
push
js
lea
dec
jns
je
dec
mov
pop
jmp
dec
mov
push
aam
add
mov
insb
ret
add
cmpsl
push
cmpl
cmp
aad
pop
aas
scas
jmp
int
insl
and
sub
fwait
lods
inc
mov
iret
inc
push
cmc
jnp
cmp
jecxz
lcall
stos
mov
int
mov
lret
outsl
mov
mov
jnp
cmp
jo
lret
lds
movsb
out
and
cmp
push
sbb
icebp
pushf
xor
sub
nop
es
hlt
push
es
mov
aam
scas
rcrl
mov
popf
push
jecxz
lods
mov
repz
outsb
sbb
dec
sbb
push
sbb
popa
sub
dec
xchg
clc
outsb
xor
jnp
out
push
arpl
aad
adc
scas
fwait
sti
iret
mov
sar
test
dec
lret
ds
mov
mov
mov
call
and
jp
js
jl
xchg
movsl
sub
leave
rcll
push
in
pop
lret
cmp
cmp
mov
test
das
and
inc
data16
in
dec
xchg
sbb
sbb
test
jno
call
dec
xor
cmp
cltd
mov
mov
cs
xor
sbbb
fisubrs
add
imul
dec
outsb
add
sbb
inc
mov
cmp
inc
scas
lock
adc
les
push
dec
or
cmpsb
jo
lods
rorb
sahf
loope
jge
filds
out
or
fildll
and
and
ja
cmp
xor
dec
adc
or
pop
xchg
arpl
adc
mov
and
cmpsb
shll
adc
jl
das
mov
push
inc
add
and
mov
xorl
xchg
lret
out
add
fstpt
pop
scas
pop
xorb
mov
insb
sub
xchg
sbbl
shl
adc
push
xchg
and
cmp
jb
pop
in
xchg
rcrl
sarl
xor
push
mov
clc
xor
int3
subl
outsl
pop
jl
push
adc
push
ja
lods
ret
dec
int3
popf
loop
mov
jecxz
push
adc
lods
test
out
out
add
push
insw
inc
mov
sub
int3
inc
sbb
in
jo
jmp
dec
jo
mov
fwait
mov
sub
fstl
xor
and
leave
mov
sbb
clc
xor
enter
pop
popf
lahf
mov
xor
xor
sub
test
imul
add
xlat
pop
fucomip
sbb
jne
cs
mov
addb
sahf
mov
inc
dec
popa
cmovns
sbb
sub
ret
or
sbb
in
xor
inc
int3
fildll
aad
inc
xchg
xchg
test
or
std
push
push
jg
in
in
push
inc
lahf
mov
jbe
test
push
dec
push
into
lcall
cmp
lea
xorb
push
dec
mov
sbb
cmp
or
aam
jmp
mov
sub
sub
imul
mov
addr16
pop
sbb
jp
idivl
push
xchg
in
adc
scas
or
jbe
jge
mov
mov
in
xchg
js
insb
fisubl
push
popf
in
ret
xor
movsb
cmovl
xor
jae
mov
idivl
mov
mov
mov
fidivrs
inc
pop
cmpsl
out
roll
pop
aam
jp
cwtl
aad
and
push
dec
xchg
add
daa
lods
leave
out
test
xchg
lds
ljmp
sbb
sub
mov
jno
inc
sbb
xchg
sbb
push
or
inc
and
mov
cmp
aaa
rcll
cmp
out
and
adc
ret
testl
fisttps
je
popa
lret
cli
ret
ja
push
cmp
mov
sahf
and
mov
and
pop
push
cmp
push
adc
out
pop
iret
in
push
push
mov
push
addr16
mov
mov
and
and
push
call
and
cmc
add
mov
adc
inc
or
xor
mov
fnsave
or
lcall
add
sbb
comiss
es
push
addr16
inc
xchg
mov
sbbb
adc
push
loope
shrb
into
xor
lcall
lods
xor
aaa
cmp
leave
jle
jecxz
addb
jge
out
cs
lock
mov
mov
add
addl
lcall
jne
scas
push
icebp
jl
clc
and
mov
mov
imul
lods
or
shrb
mov
inc
ds
pop
sub
sti
xchg
cmpsl
jb
sahf
clc
ja
xor
jl
arpl
int
mov
lret
cmpsb
and
dec
xor
or
mov
and
dec
and
iret
hlt
shl
sbb
xor
dec
es
mov
in
js
loopne
lods
jge
in
pop
cmp
xchg
pop
xor
and
rcl
lret
out
dec
inc
and
mov
sub
in
push
adc
lock
bound
mov
or
test
rclb
add
inc
and
mov
adc
and
jge
pop
aas
dec
mov
fdivl
stos
jns
fst
ret
mov
inc
mov
push
adc
jns
cmp
push
sbb
mov
xchg
mov
stc
jmp
mov
adcb
stos
fistpl
addr16
fwait
pop
dec
mov
jl
rorb
rcrl
mov
enter
rorl
xchg
jmp
sub
adc
xchg
and
stos
neg
movsb
xor
cmpsb
mov
jp
mov
or
pop
ja
fimuls
out
mov
cld
sub
outsb
cwtl
pop
pop
popf
ficoml
je
aaa
xlat
cmp
gs
leave
mov
cld
loope
ds
mov
xchg
mov
pop
or
sbb
in
rolb
jle
pop
jg
shll
or
xor
andb
bound
lods
jmp
add
xlat
test
inc
call
stc
adc
inc
loopne
pusha
ror
adc
dec
rol
fildll
mov
hlt
repnz
cmp
cmp
lret
mov
testb
inc
xor
lret
leave
xchg
jbe
mov
xor
dec
jae
in
icebp
push
fwait
shlb
xchg
push
clc
das
mov
ficoml
xchg
nop
cmpsl
push
mov
mov
inc
add
mov
xor
mov
dec
out
mov
inc
and
xlat
daa
xorl
jbe
enter
scas
stc
outsl
or
nop
pop
xchg
imul
cmp
push
jb
sub
int
lods
imul
fs
or
mov
push
loop
cmpsb
inc
outsb
mov
dec
movsl
sbb
in
decb
mov
mov
cwtl
fsubrl
fcoml
mov
dec
loope
adcb
bound
sub
dec
clc
faddl
daa
and
xchg
aaa
add
push
mov
mov
mov
inc
sub
jmp
es
outsb
js
fstl
pop
popf
cwtl
aaa
lods
out
pop
popa
roll
clc
cmpsb
loopne
mov
pop
xchg
push
ret
push
jns
cs
test
mov
jg
xchg
dec
loope
icebp
js
shl
test
push
mov
xchg
xlat
out
jmp
cmc
in
sar
negl
imul
hlt
comiss
push
inc
stos
jle
fisubrl
repnz
test
and
stos
es
adc
mov
xor
shll
inc
inc
sbb
mov
cmpl
out
imulb
test
mov
cs
adc
sbb
andnps
mov
mov
les
sub
fcomip
dec
adc
nop
stc
clc
adc
loope
lret
xchg
out
mov
inc
outsb
test
mov
aaa
stos
ljmp
xor
sarb
push
push
pop
and
das
mov
and
dec
xchg
mov
fidivs
jns
in
je
cmpsb
popf
test
jns
mov
cltd
xlat
mov
adc
sbb
sub
aad
pop
ss
insb
xchg
mov
or
outsl
not
sbb
cmpsb
scas
mov
outsl
test
or
aas
outsl
test
mov
xchg
mov
scas
scas
push
add
cmpsl
dec
test
jne
mov
rcrb
or
jg
inc
pop
dec
or
aad
aaa
xchg
mov
dec
xor
sarl
shlb
cmp
sub
ds
fsubl
pop
xchg
ss
pop
lods
cld
and
loop
test
or
mov
xchg
aaa
mov
shll
aas
lret
dec
lret
jmp
adcb
insl
test
and
aaa
add
int
sbb
mov
pop
mov
repnz
insl
jle
xor
sahf
xchg
ret
ljmp
mov
outsl
lods
mov
and
das
pushf
dec
inc
push
mov
scas
daa
cmp
iret
adc
popf
push
adc
jbe
loop
and
scas
ret
fistps
xchg
cli
jl
subb
sbb
enter
mov
daa
push
rorl
aas
iret
roll
pop
and
lea
stos
dec
negl
stc
stos
pop
mov
clc
cmp
xchg
mov
dec
faddl
cmp
pop
cmc
movsl
pop
insb
jbe
dec
out
cmp
xor
jno
mov
xchg
in
adc
cmp
inc
dec
cmp
daa
jae
mov
mov
xor
push
mov
stos
into
or
mov
push
xor
sub
lcall
pop
push
insl
mov
ret
mov
mov
arpl
xor
daa
dec
xlat
imul
inc
lea
xchg
inc
rcl
mov
lds
xlat
cltd
cltd
lods
not
dec
fmuls
xor
movl
rcrl
push
int3
ret
mov
mov
add
sub
les
scas
jl
jl
push
inc
movsb
shrl
fisttps
xchg
or
insb
iret
adc
faddl
xchg
add
xor
loop
cmp
addl
push
sbb
fcmovu
mov
xchg
jae
inc
inc
cmp
insb
jnp
inc
mov
test
mov
cmp
xor
or
adc
aam
rclb
mov
sub
test
cmp
mov
daa
inc
cmp
jg
xchg
mov
jbe
sahf
inc
fcmovnb
aaa
mulb
lcall
add
mov
add
cmpsb
pop
or
int3
lcall
repz
ffree
imul
xchg
jp
push
flds
push
aad
and
lods
sbb
cltd
ss
cmp
dec
fs
xor
pop
jns
loop
out
mov
sub
out
cmp
iret
call
mov
mov
scas
stos
cmc
stos
mov
popf
mov
das
jle
sub
pushl
lods
jle
test
lds
mov
adc
pop
bound
lret
enter
add
mov
inc
sbbb
xchg
jns
shrb
lea
or
sbb
out
jge
dec
mov
xchg
insl
test
inc
lods
test
aas
lret
je
jo
pcmpgtw
pop
mov
fninit
mov
push
jge
aam
push
mov
cli
xchg
cmp
test
rolb
or
fbstp
jmp
std
jmp
es
mov
push
cmc
movsb
arpl
popf
inc
sub
add
iret
clc
mov
ljmp
inc
fnsave
push
ja
pusha
dec
mov
into
fcmovbe
mov
ficoms
push
sub
pop
imul
div
push
shrl
jp
mov
sahf
pop
stc
ss
out
stos
jbe
fistl
je
mov
mov
cmp
mov
addr16
mov
lret
pop
rolb
testl
mov
insb
fldcw
arpl
mov
lahf
repz
jno
pop
pop
adc
xlat
sbb
stc
mov
jae
mov
fsubrs
lock
mov
scas
mov
aam
add
push
ret
shll
mov
pop
addl
scas
outsb
or
xor
inc
inc
jmp
sub
mov
call
push
cmp
fwait
jns
adc
test
stos
dec
jmp
sub
jnp
adc
test
jae
sti
jo
int
add
push
push
fstpl
pushl
int
es
lret
jo
xchg
leave
lcall
push
shlb
ret
dec
loopne
arpl
sub
push
nop
xchg
cmpsl
push
or
adc
inc
aam
mov
mov
adc
out
jns
mov
push
aam
xor
imul
mov
jb
adc
psllw
ja
fldcw
jp
mov
push
mov
mov
add
lahf
fdivl
inc
shlb
pop
fwait
push
mov
and
aaa
fisubs
loop
in
mov
xchg
mov
xchg
cmp
repz
aam
sahf
inc
push
test
xchg
shr
dec
sbb
fsubrl
pop
lcall
in
les
inc
cld
jle
rolb
sub
movsl
pushf
fcompl
xchg
xchg
push
in
lds
cmpb
dec
cwtl
call
loopne
xor
out
fmul
ja
imul
mov
sub
mov
insl
dec
xchg
out
adc
testb
jb
push
or
iret
lcall
clc
sub
insb
dec
pop
movlps
leave
xchg
mov
stos
addr16
xor
cwtl
jae
or
cmpb
decb
mov
fisttps
xor
stc
lret
mov
inc
mov
mov
popa
jge
mov
in
lods
jbe
pop
jne
into
fdiv
adc
mov
adc
scas
cmpsl
mov
sbb
fwait
push
xchg
sbb
inc
pop
push
in
out
hlt
test
jo
imul
mov
jl
movsl
mov
push
adc
jp
add
mov
cmp
mov
jl
repnz
cltd
dec
pop
int
cmc
repz
outsl
adc
jecxz
arpl
shl
lods
mov
arpl
pop
daa
inc
scas
add
negb
push
mov
clc
mov
sbb
lock
repnz
sub
push
lea
mov
pop
or
pop
add
jmp
xlat
call
arpl
aas
dec
jmp
add
aam
nop
in
push
cmp
out
gs
inc
or
fs
cmpsl
outsb
adc
inc
stc
fbld
fwait
fwait
push
sub
adc
in
pop
les
sbb
std
mov
inc
sbb
sub
filds
fcmovnbe
xor
mov
and
mov
out
cmp
lds
adc
push
cs
mulb
ds
ss
push
sahf
daa
mov
and
inc
adcl
xchg
in
adc
in
xchg
loopne
add
jne
mov
mov
inc
lcall
mov
inc
fsubrl
inc
int
leave
je
push
frstor
push
enter
mov
xchg
sets
cld
xchg
push
xor
pop
jb
and
in
andl
mov
xchg
sbb
cmpsl
mov
sub
xchg
lods
dec
mov
push
aad
cmp
mov
dec
outsl
test
cmp
and
out
xor
mov
ss
fwait
xchg
xchg
pop
inc
rcl
xlat
lret
dec
movsb
pop
insl
icebp
adc
test
jl
test
das
or
int3
jp
add
rcrb
xor
dec
imul
xchg
jmp
bswap
jmp
dec
lds
les
imulb
sahf
xchg
lret
add
sbb
daa
inc
sbb
xor
lock
inc
mov
les
pop
jmp
mov
loop
jmp
pop
divps
jmp
aas
dec
or
fildll
test
imul
std
fistl
roll
or
adc
outsl
test
and
mov
or
pusha
jg
ss
xor
mov
ret
test
lcall
push
push
xlat
xchg
adc
mov
pop
add
or
push
js
pop
fildll
sbb
push
addb
inc
pop
in
mov
fsubrs
xor
cmc
mov
out
lea
mov
je
sub
out
jge
inc
xchg
loopne
add
pop
cmpsl
inc
mov
in
jne
clc
dec
in
mov
or
mov
out
insb
push
add
sahf
jnp
dec
push
ja
jge
sbb
push
jmp
cmp
mov
roll
sub
sbb
adc
mov
ds
push
or
add
pop
das
or
aad
xchg
xlat
add
cwtl
out
sti
popf
fistpl
or
loope,pt
cmc
mov
or
adc
push
sub
fbstp
lock
pop
dec
pop
mov
mov
lock
jmp
sbb
xchg
mov
adc
fcoms
leave
or
adc
loopne
scas
adc
popf
lret
hlt
aam
cmp
inc
dec
mov
mov
sbb
jno
fsubr
test
jge
pop
int
dec
jbe
sahf
and
sarl
mov
ficomps
scas
cmp
jne
out
or
nop
mov
xor
pop
shlb
cmp
out
add
mov
insb
scas
les
mov
mov
hlt
mov
in
mov
mov
out
subb
inc
xor
jmp
and
pop
rcrb
pop
loopne
cltd
xchg
mov
lods
fsubs
sub
push
ret
fsts
outsl
adc
jno
jns
fwait
jo
jae
mov
xchg
dec
repnz
and
adc
jmp
sti
or
mul
out
pop
andl
or
int3
je
jnp
in
dec
mov
leave
mov
in
xchg
or
lods
daa
fnsave
xor
aaa
cs
clc
out
mov
sbb
pushf
insb
xor
popl
popf
jmp
mov
in
out
repnz
out
adc
xchg
in
sbb
inc
in
outsb
push
xor
fstps
jb
jmp
pop
dec
sub
outsb
mov
cmp
aaa
fists
and
sub
lret
sub
xor
sub
outsb
push
and
xchg
pusha
hlt
inc
xor
sub
lcall
and
push
pop
jne
stos
stos
lret
sub
mov
popf
xchg
mov
bound
add
adc
test
xchg
lods
sub
xchg
imul
cmp
bound
jne
pop
push
mov
jae
testb
add
xchg
fsubrs
les
mov
das
stos
or
lcall
adc
pop
push
cmp
jge
jl
sarl
into
int
jp
test
mov
int
in
mov
in
pushf
adc
movsb
in
divl
das
cmp
adc
aad
push
inc
shrl
loop
insl
fcomps
jmp
push
jmp
adc
adc
pop
shrl
xchg
or
jb
xchg
idiv
dec
iret
aaa
push
idivl
push
sub
jmp
mov
lcall
adc
mov
mov
das
not
mov
or
and
leave
or
adc
lret
pushf
jns
mov
fs
fdiv
inc
mov
push
mov
dec
fidivs
cmpsb
arpl
sarb
repnz
sbb
fs
jbe
je
mov
in
shlb
inc
push
std
roll
jns
lock
and
push
xorb
rcl
mov
push
sub
mov
fmull
dec
test
mov
icebp
add
sbb
repz
sub
xor
or
lods
andb
pop
mov
xchg
out
adc
xor
push
mov
jb
and
into
pusha
in
js
adc
xor
mov
cmp
mov
push
jg
ja
test
sbbl
lcall
sbb
jp
or
bnd
std
sub
insb
or
jns
sbb
jge
lret
inc
and
ljmp
and
mov
adc
sub
scas
cmp
out
mov
pop
lret
jns
shlb
jl
dec
dec
cmpsb
lock
loop
add
add
hlt
stos
loop
mov
mov
pop
sub
push
jg
xor
add
out
ss
bound
push
jbe
or
cmc
aaa
aas
sbbl
push
push
enter
sub
xchg
movsl
mov
or
pop
sub
push
push
lods
fistl
cwtl
aas
das
lahf
adc
cmp
push
repnz
icebp
add
jmp
push
movsb
cmc
aas
in
shr
in
or
ss
jbe
rcrl
mov
cmpsl
outsl
inc
xchg
ret
fnsave
inc
addr16
dec
jns
mov
lock
push
push
mov
push
int
nopl
mov
sbb
daa
fcoms
mov
aas
xchg
xor
add
std
or
jo
mov
dec
subl
sub
mov
pop
movsb
cld
mov
jae
mov
lahf
inc
out
pop
adc
mov
jae
push
mov
sbb
jle
int
sub
stos
loopne
sahf
push
xorb
ret
mov
add
dec
je
jo
lods
mov
mov
sbb
lds
or
jmp
xchg
loope
shll
xlat
jecxz
scas
jle
popf
mov
in
sbb
add
push
mov
xlat
int3
mov
push
xchg
andl
or
out
mov
dec
sbb
push
cld
in
jnp
or
cmp
xor
jae
mov
cmp
jns
cmp
cmc
push
sbb
jns
jno
jl
sbb
les
adc
pop
scas
add
mov
dec
xchg
jmp
outsl
pop
sbb
test
jae
pop
call
cmp
dec
clc
int3
mov
xor
inc
sbb
jno
and
and
icebp
or
xchg
test
and
shl
mov
inc
movsb
fistpll
pop
outsl
cmpsb
stos
mov
cld
sarb
or
inc
cmpsb
shr
lret
call
hlt
mov
sar
cmovno
fisubs
data16
adc
inc
shlb
inc
cmp
xchg
jge
mov
je
in
or
inc
fildl
sub
jmp
mov
sti
lods
pushf
movsl
xor
jb
enter
mov
adc
sbb
push
lea
fadd
push
and
icebp
mov
push
je
test
dec
ss
fistpl
test
mov
dec
cmc
jle
jmp
adc
jnp
mov
pop
push
push
notb
mov
ljmp
pusha
dec
daa
aam
arpl
mov
lods
mov
mov
mov
cmp
icebp
sti
xchg
xchg
mov
aaa
out
loop
jbe
xor
sar
popf
pusha
sbb
lcall
shrb
shl
clc
mov
les
into
inc
mov
fsubp
xor
mov
jbe
sbb
and
mov
mov
in
xor
adc
jg
cwtl
aam
movsb
sbb
or
push
dec
lcall
dec
xor
pop
jno
inc
adc
fnsave
stc
lcall
fiaddl
aam
cmpsb
out
cli
mov
mov
xchg
lahf
in
fsts
sbb
mov
mov
jg
das
leave
sbb
movsl
xchg
out
shll
xchg
sbb
insl
add
lcall
pop
xchg
mov
adc
and
mov
sbb
imul
out
mov
cltd
sub
xor
insb
push
adc
pop
sbb
shr
push
pop
lock
popf
jnp
jo
jge
mov
xchg
and
xchg
or
sub
gs
inc
inc
sti
push
lock
cmp
xor
idivb
pop
inc
pop
jno
mov
adc
stos
iret
sahf
mov
jp
iret
sbb
lret
stc
xor
lock
aam
in
lods
add
repnz
pop
xchg
imul
mov
je
hlt
xor
imul
xchg
lods
mov
jb
inc
cmpsl
or
ret
xchg
xchg
insl
aas
dec
adc
xchg
subb
and
loope
sbb
cltd
daa
into
bound
les
popf
cmc
lret
sarb
push
push
fs
ror
hlt
sti
mov
sbb
jp
jmp
cmpl
inc
add
xor
ljmp
pop
je
inc
mov
bound
pop
aas
add
xchg
mov
xor
mov
mov
xchg
les
sub
push
in
or
cmpsb
fdivrl
popf
js
sahf
inc
cmp
movsl
and
and
cmpsb
adc
dec
call
xchg
push
daa
in
mov
les
arpl
in
pushf
xchg
push
xor
add
dec
mov
lahf
or
pop
rclb
cmp
push
addr16
mov
mov
shll
ret
mov
jno
jmp
pop
mov
push
dec
insb
cmc
push
xlat
sub
cmc
notl
mov
in
dec
bound
mov
mov
aam
adc
xchg
inc
dec
aam
inc
jmp
stc
fimull
inc
add
add
sbb
lds
aaa
inc
jg
mov
cmp
sub
and
dec
mov
inc
push
js
and
jbe
jmp
leave
push
jne
daa
out
mov
fstpl
sub
push
aam
ljmp
pusha
sti
pop
lahf
cld
inc
inc
movsb
xor
fdivp
bound
nop
arpl
mov
xorl
sbb
nop
and
jle
mov
cli
mov
mov
sbb
test
push
pop
dec
data16
sub
jg
cltd
rolb
xchg
test
inc
inc
jnp
mov
add
ret
pushf
add
mov
inc
push
ljmp
xchg
stos
pop
call
nop
mov
aaa
jne
cmp
push
inc
addb
insl
rorb
testl
sub
push
in
adc
mov
imul
or
xchg
jecxz
cs
sub
aaa
clc
movsb
mov
fbld
jbe
inc
dec
repnz
fstpl
dec
jmp
aad
mulb
and
pop
add
sub
jmp
fwait
cmp
pop
xlat
es
ret
aaa
stos
mov
inc
pusha
xlat
outsb
das
cmpsb
xor
dec
rol
pop
or
outsl
test
xchg
jl
stc
sub
jecxz
pusha
jb
or
bound
mov
sbb
lahf
mov
insb
loop
lret
push
mov
xchg
dec
mov
cmpsl
add
pop
lods
loopne
mov
xor
icebp
sbb
dec
jle
jno
arpl
or
mov
sahf
jecxz
xor
lock
ja
cmp
mov
xor
inc
repnz
lods
out
or
adc
in
add
or
cwtl
cwtl
xchg
out
outsl
mov
jp
sbb
xor
dec
jnp
repz
fwait
jns
sub
das
ret
adc
lods
ret
leave
sbb
pop
jno
or
das
sub
dec
jno
mov
icebp
jbe
int
idivb
fwait
sahf
adc
mov
inc
adc
mov
stc
nop
xchg
or
cmp
adc
inc
daa
dec
hlt
inc
cmc
jl
and
fdivl
push
mov
popa
push
xchg
std
mov
inc
jmp
push
test
test
fdivl
pop
inc
xor
pop
xor
lahf
push
mov
and
push
cmpsb
dec
mov
inc
imul
mov
lret
jge
sub
push
add
dec
and
lock
bound
movsb
dec
in
loop
dec
out
nop
pop
cld
pushf
scas
dec
sub
and
jle
fcoms
rcl
pop
lea
hlt
in
enter
stos
pop
or
popa
and
js
lret
mov
pop
xchg
in
insl
jne
dec
imul
scas
or
lret
push
or
mov
dec
gs
xchg
stc
stos
test
arpl
movsb
push
cmpsl
inc
std
arpl
push
pushf
xor
mov
ss
pop
pop
roll
adc
out
push
cld
mov
dec
push
adc
je
in
leave
pushf
lret
sub
lret
dec
out
and
popa
pop
fsubs
or
mov
pop
sbb
or
popf
out
push
inc
test
imulb
mov
inc
and
cli
rcrl
pop
sbb
stos
jge
inc
mov
cltd
inc
cmc
test
das
cmpsl
dec
push
dec
mov
das
ss
lods
in
and
sar
mov
daa
fildl
dec
loope
mov
arpl
jl
mov
call
inc
sub
cltd
ds
mov
test
call
ds
push
mov
mov
clc
push
push
mov
pop
push
sub
fcoms
mov
ficomps
push
add
or
je
repz
push
sbb
mov
loop
dec
xor
xchg
scas
jge
push
pushf
scas
imul
cwtl
testw
and
mov
movsb
movsb
mov
jl
adc
data16
jo
add
iret
movsb
leave
ret
psubusb
pop
sahf
sub
jmp
shl
mov
pop
sar
cmp
decb
mov
fs
push
test
push
sub
mov
and
pop
daa
ljmp
aad
mul
ljmp
fwait
aas
lret
cs
ret
lret
test
cmp
adc
adc
or
lock
fwait
pop
mov
inc
repz
pop
lahf
push
inc
test
xchg
vpminsw
hlt
int
sti
fstpl
jo
dec
mov
popf
dec
imul
sbb
or
incl
inc
jecxz
ret
cli
fldt
xchg
jp
adc
jg
xchg
in
cmpsb
imul
adc
lcall
sub
out
dec
dec
sub
gs
sbb
aad
hlt
inc
dec
or
jge
sarl
sbb
pop
dec
fmuls
sbb
sub
notb
xor
xchg
nop
sarl
in
aaa
stos
rcrl
xchg
lahf
nop
scas
xchg
dec
jp
jl
les
int3
xchg
in
jg
pop
jmp
lea
push
jnp
sbb
shl
roll
cmpsb
pop
pop
jp
add
std
dec
inc
cmp
addr16
dec
loopne
fs
xor
stc
cmp
loope
int3
fbld
stos
mov
adc
push
push
stos
iret
mov
inc
and
adc
and
sub
in
mov
dec
push
test
fisttps
xor
xor
mov
mov
adc
sbb
mov
mov
repz
xchg
ljmp
jmp
fldcw
jge
test
xchg
xchg
pop
jg
pop
or
and
xlat
cmp
es
push
mov
xchg
and
shrl
mov
dec
out
adc
ret
repz
push
adcl
scas
shll
ret
fiaddl
hlt
xchg
cmp
mov
clc
insb
pop
push
scas
jnp
mov
adc
mov
fmull
adc
pusha
sti
mov
mov
fistpl
fsts
push
ss
test
and
and
mov
inc
adc
rolb
xor
scas
cmp
lretw
scas
cmpsb
mov
dec
push
aam
aas
mov
sub
aas
test
ret
faddl
fisttpl
jecxz
push
rol
and
out
pop
push
cld
adc
sub
sub
jo
pop
mov
mov
fisubrl
cmp
test
inc
test
jle
loopne
push
fwait
pop
in
pop
xor
cmp
jns
adc
dec
cltd
pop
push
movsb
in
insb
or
into
mov
push
dec
fwait
mov
test
mov
mov
pusha
lcall
cwtl
aaa
xlat
in
push
sarb
inc
fiaddl
mov
sbb
ds
mov
test
loope
pop
in
xor
or
and
pop
cmc
in
lock
mov
loop
stc
xchg
push
lock
jmp
stc
lcall
and
shll
dec
ljmp
out
inc
xor
xlat
in
lret
insb
out
fs
imul
das
imulb
jle
popa
or
das
movsb
out
add
mov
inc
in
inc
mov
shll
cwtl
push
cmp
mov
jmp
loop
sti
push
mov
loope
stc
iret
test
xor
push
sbb
and
pop
fcomps
imul
mov
daa
lea
lahf
lds
pop
nop
aas
sub
out
outsb
rorb
or
mov
cmpsb
out
lock
add
shrl
out
fsubs
push
fs
sbb
fwait
pusha
clc
and
ja
iret
xchg
pop
out
or
mov
pop
hlt
ret
push
or
sbb
ljmp
sbb
sbb
aam
mov
add
pop
fcoms
out
test
sub
je
add
lahf
inc
adc
call
fnstcw
xchg
add
xchg
dec
test
jmp
pop
fs
adc
add
int
es
jns
and
addr16
cmp
push
stc
sbb
adc
push
jle
data16
sti
or
push
int
and
dec
mov
cltd
xor
pop
decl
adc
pop
ljmp
movsl
cmpsl
and
mov
movsl
mov
xor
cmp
aam
inc
push
das
leave
sub
push
iret
movsb
inc
fucomi
sub
inc
inc
mov
or
mov
lret
add
push
pop
mov
test
xchg
stos
sub
aas
push
je
stos
cld
daa
fwait
int
jo
sbb
push
or
jno
lock
or
add
adc
or
mov
push
jmp
paddusw
pop
test
pop
movsb
mov
popa
push
cs
adc
out
sbb
inc
pop
pop
jge
dec
cld
out
mov
add
arpl
mov
push
jle
icebp
repz
inc
jmp
movsl
jl
into
add
lahf
lock
ds
mov
mov
dec
fisubrl
mov
mov
es
shrb
hlt
or
jo
sahf
jne
jp
adc
gs
cltd
pop
jmp
mov
sahf
sub
insb
mov
mov
jne
fldl
adc
scas
cmp
pop
sbbb
mov
mov
xor
cld
adc
repz
movsb
pushf
mov
sub
psubusw
pop
cmp
sub
xchg
inc
repz
sbb
out
xchg
xor
fidivrl
lds
js
mov
or
xchg
mov
xchg
pop
pop
movsb
frstor
insb
sahf
mov
jnp
fidivrl
sub
pusha
fiaddl
clc
dec
push
or
cmpsl
ficompl
int3
fsubl
inc
inc
fldt
mov
and
mov
fsubrs
sahf
in
pop
enter
xor
mov
mov
fucomp
lcall
call
dec
xchg
xchg
das
pop
movb
fisttpll
and
push
es
xor
lea
xor
inc
cmp
jns
pop
jns
sub
mov
es
xor
pop
jl
jbe
inc
mov
inc
mov
aaa
push
add
outsb
pop
leave
cmp
and
push
dec
ljmp
ds
gs
xor
in
imul
out
dec
cmp
sbbb
aam
or
sbb
aaa
daa
xor
aam
dec
push
jmp
xor
fistps
or
mov
xbegin
pushf
test
sub
bound
lods
std
clc
inc
mov
adc
popa
inc
mov
ret
xchg
cmp
fwait
movsb
or
out
adc
divl
daa
sbb
fsubrl
test
je
call
add
pop
mov
and
push
rorb
sub
cld
mov
adc
repnz
mov
or
icebp
fbstp
mov
xchg
pop
movsb
movsb
std
push
call
hlt
das
dec
movsl
xchg
cltd
gs
adc
mov
clc
stos
les
aad
cmpsl
loope
scas
in
leave
inc
cmp
cmp
outsb
pop
icebp
push
cld
adc
sbb
scas
jecxz
cmc
fidivs
outsb
push
adc
and
mov
push
push
jge
pop
arpl
daa
cmp
cmp
cld
mov
cs
loope
xor
sbb
test
stos
jb
sub
pusha
fs
outsl
mov
call
cmp
rolb
aas
pop
inc
enter
lock
and
dec
dec
mov
outsl
pop
mov
stos
scas
nop
pop
mov
xor
inc
insb
pop
xor
jo
cld
cmpsl
push
jmp
jle
outsb
push
mov
seto
dec
inc
inc
jae
fisttpl
out
push
mov
cli
inc
jmp
outsl
lods
mov
xchg
xchg
jmp
mov
pop
fdivrl
enter
vorps
das
fldenv
mov
lret
jb
jge
mov
jmp
push
mov
cmp
mov
bnd
cmp
xchg
les
or
and
lods
test
fstpl
inc
mov
jl
out
sti
les
rclb
cli
xchg
mov
mov
loop
jb
add
or
mov
dec
iret
arpl
push
pop
lret
cmpsl
pop
mov
shll
aas
subl
push
cs
ret
xorl
xor
or
xchg
sti
aad
repnz
lods
sub
add
scas
jae
pop
push
dec
cmpl
adc
push
movsl
in
xchg
inc
insl
cmpsb
stos
jbe
jae
cltd
popf
push
fnstenv
sub
mov
pop
in
cmp
push
aaa
fidivs
sub
push
adc
inc
pop
aas
cmp
jge
and
sbb
and
xchg
cmp
pusha
xor
shl
pop
ds
outsl
mov
xorl
add
push
clc
mov
insb
mov
shrl
stc
ret
gs
aad
insb
dec
mov
js
push
int3
in
push
or
or
pop
push
add
fsubs
push
mov
sarl
mov
mov
mov
and
movsl
push
mov
mov
stos
add
fwait
or
jmp
inc
popa
mov
jns
and
stos
adc
pop
mov
cmp
pop
test
mov
jle
mov
sub
push
mov
andl
enter
jae
sbb
adc
push
or
sbb
test
xor
add
xor
ss
mov
outsl
fsubl
fisubs
jns
sbb
mov
loopne
fwait
sbb
add
in
pushl
fimuls
pop
jp
sub
jmp
xor
in
push
sub
mov
in
adc
ficoml
and
dec
jle
mov
mov
lret
mov
jl
push
sub
jmp
and
addr16
add
mov
dec
xor
xor
push
lret
cs
stos
or
popf
call
ja
lods
movb
loopne
dec
jl
mov
inc
pop
add
call
mov
rorl
adc
test
xchg
nop
mov
inc
pop
das
push
mov
sub
cmp
pop
cwtl
push
mov
scas
cmp
sbb
dec
add
ja
enter
test
cwtl
int3
jge
repnz
repnz
xchg
gs
push
xor
push
aas
inc
aaa
push
jge
inc
pop
testb
fdivrl
pop
add
insb
xchg
fldcw
cmpsb
fsubp
cmp
dec
mov
jo
xchg
push
pop
push
rorb
or
lcall
arpl
fldcw
xchg
mov
xor
pop
and
subb
pusha
insb
xchg
sbb
fwait
jo
inc
idivb
mov
lcall
push
lret
arpl
and
cmp
jb
mov
inc
jnp
sbb
fidivrs
ds
push
adc
popa
sbbl
jp
adc
mov
dec
xor
or
insl
int3
sbb
xor
in
lods
inc
mov
jns
and
add
or
lods
mov
insl
inc
in
sub
subb
out
inc
mov
adc
sub
sub
int
xchg
rclb
xor
fimull
cli
test
xchg
add
test
jb
sub
pminub
cmp
aaa
icebp
add
int3
inc
repnz
lock
jae
test
pushf
test
imul
xchg
cmp
jae
mov
test
es
cmp
in
inc
sbb
mov
std
sbb
xchg
out
movsb
jo
cmp
xor
ficoms
out
adc
pop
imul
add
sbb
adc
out
xor
adc
das
ljmp
inc
insl
shrb
mov
inc
repnz
mov
js
xchg
jb
sti
data16
inc
dec
aam
repnz
aaa
xchg
lcall
mov
sub
push
pop
jae
cmpl
loope
push
mov
mov
and
ret
insb
sti
add
scas
gs
fwait
and
mov
jge
mov
testb
js
mov
jg
pop
push
lods
mov
inc
das
sahf
shrl
xor
fimull
adc
ret
cmpsb
mov
jae
das
movsl
push
into
repz
pusha
add
fildl
jmp
jnp
mov
mov
pop
adc
or
je
outsl
into
sar
dec
leave
or
out
clc
ljmp
rcrl
aas
dec
xchg
pop
pop
lods
leave
fiaddl
mov
push
jmp
mov
xchg
gs
jbe
movsl
xchg
std
and
je
popf
mov
insl
sbb
jmp
mov
jp
cmc
lods
in
lea
adc
jnp
push
push
add
dec
xchg
pop
lcall
loop
pop
inc
jns
or
dec
fucomi
mov
add
mov
inc
mov
enter
cmp
add
push
mov
lcall
lcall
fstpl
iret
mov
dec
cwtl
out
jb
in
les
jmp
ja
jnp
push
das
pop
dec
or
mov
mov
xchg
pushf
xchg
out
loopne
lods
int3
and
xchg
int
or
jno
int3
aas
lods
stos
pop
dec
and
cltd
in
lods
mov
sub
inc
stos
out
pop
pop
mov
adc
fwait
xchg
cmpsb
or
jge
mov
cmp
out
or
lret
mov
lret
je
shr
scas
or
dec
xchg
cmp
jle
lret
into
lahf
jae
sub
imulb
xchg
xor
add
fcmovu
inc
addr16
mov
mov
xor
mov
push
lret
sub
ljmp
ljmp
int3
sbb
push
leave
sub
dec
xor
bound
mov
dec
test
pusha
cltd
pop
dec
dec
lds
pop
lea
dec
mov
adc
xchg
fisubl
inc
dec
nop
outsl
in
dec
add
xor
and
dec
int
push
es
and
dec
cmovae
push
xchg
mov
xchg
call
push
jle
outsl
pop
loopne
rorl
enter
and
mov
mov
dec
jb
imul
adc
jbe
nop
bnd
icebp
add
jl
pop
push
xchg
cmp
mov
imul
andl
daa
mov
jge
scas
hlt
stos
push
test
dec
in
lds
lock
push
inc
xor
dec
and
and
popf
inc
sub
adc
sbb
cmp
adc
sub
fnstsw
in
popf
enter
push
mov
imul
xchg
xor
lret
mov
or
jae
shrb
cmpsl
mov
stos
fbstp
inc
mov
mov
jb
cmp
scas
push
pop
mov
fnstcw
mov
mov
jle
aad
lcall
std
add
pushf
ds
mov
pop
add
mov
into
xchg
sarb
clc
mov
lcall
ljmp
push
jnp
test
sbb
dec
lods
adc
std
push
inc
mov
lea
mov
or
in
in
fwait
cltd
add
cmp
dec
out
loop
mov
xlat
sarl
jne
xor
aam
mov
out
outsl
jl
inc
mov
popa
popa
fsubr
aaa
ds
push
lea
fs
lcall
lret
cmp
daa
jmp
imul
in
dec
roll
jns
dec
pop
xor
cmp
gs
out
mov
out
push
push
cmp
push
xchg
lods
push
dec
out
sbb
xchg
into
ds
pop
add
fwait
fwait
loope
in
mov
cmp
xchg
int3
in
mov
cltd
data16
aas
mov
jne
push
add
out
arpl
xor
ja
xchg
cmp
sub
pop
sub
lds
and
xchg
movntps
fnstsw
lods
add
mov
mov
js
mov
cld
xor
cmp
into
iret
fcompl
jne
xlat
cmpsl
xchg
push
lods
mov
scas
hlt
ror
or
lcall
movsl
leave
or
mov
xor
and
cmp
repz
arpl
in
add
xchg
or
pop
or
adc
mov
and
xchg
das
xor
mov
stos
lds
jl
push
inc
or
js
cmp
scas
xlat
mov
sub
pop
jmp
pusha
mov
push
repz
mov
dec
pop
push
subl
add
sbb
and
roll
scas
xor
lea
inc
adc
sahf
pop
dec
mov
cltd
xor
lret
dec
pop
mov
bound
fwait
mul
xor
sub
mov
mov
rcll
xchg
das
cmc
jb
movsb
in
mov
mov
sub
movsl
jl
mov
iret
mov
aaa
inc
fidivs
inc
adc
xor
ljmp
aas
and
movsb
sub
and
inc
mov
lock
jmp
insl
inc
push
mov
insb
ss
fidivrl
mov
mov
lret
repnz
insb
inc
and
rcll
lock
dec
jne
icebp
data16
roll
stc
and
inc
adc
cld
jle
popf
inc
je
sti
aas
jmp
or
sbb
push
pop
inc
push
loope
sub
roll
aad
lods
jg
fwait
pop
shll
mov
jmp
and
cli
cld
sar
stos
fnstenv
adc
push
lahf
in
pop
pop
orb
sbb
jle
notb
lock
mov
outsb
jmp
adc
and
inc
daa
sbb
nop
stc
push
scas
cmpb
xchg
sbb
lret
push
insb
iret
mov
fsub
mov
pop
cltd
push
xchg
mov
es
repnz
and
add
inc
insl
add
addr16
sub
dec
adc
push
ss
sbb
xchg
icebp
adc
andb
imul
lcall
cmp
jne
adc
xchg
fcompl
popa
jle
jecxz
jb
cs
cmp
or
jg
xor
adc
add
push
mov
insb
inc
push
test
call
test
movsl
rclb
jno
or
imul
orl
mov
mov
aad
dec
and
mov
or
nop
push
loopne
std
int3
mov
mov
shll
ljmp
xor
lahf
adcl
shrl
shrb
pop
fimull
mov
jge
dec
or
stos
adc
pop
push
mov
addl
imul
or
inc
out
and
out
sub
call
enter
nop
jbe
push
push
inc
jl
cmp
pop
pop
or
mov
out
cmp
and
push
push
lea
mov
xchg
lret
cs
cmpsb
push
jle
lahf
mov
ja
sbb
cmp
popf
cmp
ljmp
dec
push
sub
test
cmp
popa
and
nop
or
xchg
push
lds
adc
jae
mov
xor
into
jp
lods
dec
dec
dec
mov
mov
flds
add
sbb
sub
cmc
cmp
lds
push
cmp
lods
xchg
dec
sarb
les
cmc
xchg
pop
dec
jae
mov
js
lock
and
and
xchg
ret
jg
int
es
hlt
mov
adc
cmp
mov
xchg
and
lods
out
pop
xor
inc
mov
lahf
cmp
mov
mov
aad
or
das
xor
call
jecxz
das
mov
adc
in
inc
sub
nop
out
mov
dec
fcoms
dec
cmp
mov
inc
cmp
adc
adc
mov
sbb
sub
stos
cmp
inc
push
jecxz
or
sbb
sbb
adc
ja
inc
jecxz
jle
mov
cmpsb
clc
rcll
inc
adc
lahf
cmp
dec
mov
push
int3
jl
lret
test
div
xor
loopne
in
icebp
repnz
or
inc
or
add
cwtl
mov
call
ret
pop
cli
mov
pop
frstor
add
insb
sbb
shr
sbb
mov
outsl
jmp
les
push
and
lcall
stos
fsts
pop
adc
or
jl
fbstp
pop
cmp
sbb
shld
into
aad
cwtl
fmull
jmp
iret
or
leave
push
jne
or
ds
test
shr
daa
lret
and
pop
mov
inc
mov
sub
dec
sti
daa
fisttps
sub
push
aaa
out
in
inc
xchg
rol
push
xlat
mov
popa
fmul
mov
mov
sbb
movl
mov
add
add
cwtl
lret
xlat
sbb
clc
clc
fwait
lahf
push
insl
iret
sbb
push
jbe
sbb
xchg
mov
aad
scas
inc
loope
jne
insb
fsubs
fnsave
jecxz
jg
bound
lods
pusha
rorb
inc
fisttps
xor
enter
test
movzbl
imul
adc
xlat
mov
add
loop
les
push
loope
ret
mov
out
repnz
push
stc
or
orb
test
movsb
in
xchg
push
imul
or
push
sub
loope
aaa
sar
add
nop
test
shlb
repz
cld
in
push
enter
clc
std
in
shlb
fstps
cmp
sub
iret
adc
and
push
loope
xchg
test
pop
ljmp
out
and
out
push
cltd
push
xor
shr
lods
addl
jne
aas
dec
sbb
mov
dec
push
jne
pushf
xor
push
test
loope
movsl
jbe
push
inc
xlat
mov
xchg
add
pop
cli
test
test
popf
movl
mov
push
xchg
push
push
cs
call
mov
mov
rcrb
daa
movsl
stc
push
insl
imul
andl
jmp
fistl
pop
or
cmp
or
into
mov
push
sbb
das
ljmp
sub
ljmp
fnstenv
ja
cmp
cmp
add
stos
jae
stos
mov
cmp
or
inc
and
mov
and
mov
mov
test
js
addr16
jo
adc
pcmpgtd
inc
and
stos
js
lds
push
shrb
rcll
or
inc
data16
outsl
pop
call
sub
dec
aas
mov
dec
xor
pushl
es
shrb
aad
add
cli
aas
ljmp
ret
fisubs
daa
arpl
mov
cwtl
arpl
jge
sub
insl
sbb
xor
mov
imul
int3
lret
in
and
xchg
outsl
gs
outsl
in
ret
mov
ds
jge
cmc
xor
in
dec
dec
outsl
mov
das
orb
out
popa
out
lret
add
insb
mov
sub
cmpsb
inc
pop
and
sbb
outsl
es
outsb
ss
fcoml
into
xor
push
cmp
push
mov
loopne
and
cs
adc
sbbl
pop
xchg
xchg
icebp
jg
push
fadds
xor
xlat
pop
iret
push
out
icebp
sub
or
adc
test
das
xor
push
repnz
fisttpll
ds
mov
xor
jp
sub
jbe
fcmovb
sbb
in
sbb
lret
leave
inc
icebp
cmp
aad
in
pop
lcall
cmp
fdivrl
bound
push
add
rcrl
or
sub
mov
or
or
mov
fbld
push
jmp
ss
les
and
in
mov
push
shrb
inc
int
out
pop
mov
dec
aam
lahf
sub
data16
mov
cmp
xchg
add
cmc
movsl
xor
push
dec
orl
repnz
mov
inc
or
push
loopne
xchg
xor
jg
cmpsl
out
shll
adc
test
mov
pop
xchg
xor
cmp
mov
adc
frstor
mov
shr
test
add
bound
leave
dec
xor
mov
dec
popfw
enter
out
repnz
lahf
cmp
shrb
mov
pop
ja
sub
neg
dec
sbb
mov
cmp
or
and
xchg
pop
xor
faddl
dec
dec
lahf
repz
mov
lea
bnd
std
mov
push
cmp
fcomps
cmp
jo
shlb
sti
out
sahf
fsubrs
dec
push
pop
push
leave
scas
mov
je
dec
and
movsb
inc
dec
test
and
or
ret
push
sbb
pop
add
add
push
cmp
insb
stos
mov
adc
cli
clc
mov
fnstsw
fbld
xor
es
lret
cmp
push
dec
fidivl
add
push
or
bound
pop
mov
push
das
aas
loope
imul
mov
adc
sar
cmp
pop
mov
mov
aam
aam
mov
fcoml
inc
out
fs
cmp
jle
test
adc
dec
fnstcw
lret
adc
outsl
jbe
mov
and
lahf
cmp
dec
ret
sbb
addr16
fidivs
outsb
push
dec
movsl
and
stos
add
ja
aas
ss
cli
les
fs
aaa
bnd
xchg
adc
xchg
push
jo
lods
out
fldl
repz
xchg
push
das
loop
repnz
in
aas
lods
ljmp
imul
mov
pop
pop
jl
arpl
push
push
loop
mov
imul
sbb
lea
inc
aas
ret
and
mov
faddl
int
es
out
adc
sub
stc
dec
jl
cli
ss
imul
jmp
inc
xchg
addb
mov
call
out
fwait
movsb
loopne
enter
cli
jg
test
jbe
imul
loop
gs
jne
xchg
mov
inc
inc
lods
ja
out
push
jl
out
stos
movsb
shll
jg
lock
pop
popf
jmp
inc
pop
xchg
cltd
andb
vandnps
xchg
xchg
clc
jle
jae
cmp
sub
in
mov
mov
outsl
jmp
fs
pusha
movsb
dec
pop
xor
adc
push
movsb
cmpsl
imul
stos
loopne
out
stc
aad
mov
cmova
push
and
shlb
mov
into
dec
cmp
add
xchg
test
adc
dec
fcomps
fs
or
loop
sbb
repz
inc
mov
push
jge
andl
mov
xchg
jbe
movsb
in
dec
scas
ja
push
fsub
pusha
push
cmpsb
push
push
popa
stos
push
pop
cmp
or
cmp
test
push
or
shll
inc
dec
mov
enter
imul
mov
jmp
out
jp
sbb
call
push
push
xchg
xchg
and
je
aam
sub
cmp
push
int
xchg
repnz
imul
pop
aam
xor
mov
add
xor
sbb
mov
sub
jecxz
inc
lahf
adc
inc
sub
jbe
xchg
mov
mov
pop
cmp
sbb
mov
iret
aad
xchg
popf
inc
stos
orl
mov
adc
inc
add
pop
jbe
xchg
clc
cmp
push
jo
jbe
jmp
push
scas
xchg
pop
imul
call
inc
sbb
aaa
push
es
sub
pop
leave
cmp
mov
xchg
mov
xchg
and
cmc
ss
sbb
subl
cmpb
das
lds
pop
xor
mov
lock
or
cmp
and
sbb
push
imul
fmul
pusha
dec
mov
dec
pop
mov
popa
adc
pop
jp
or
jg
adc
cs
pop
int3
lahf
inc
aam
push
repz
sti
bound
insb
out
sbb
dec
adc
ret
cli
mov
pop
or
repz
cs
mov
jb
insl
cmp
mov
jg
lods
mov
iret
movsb
dec
repz
mov
adc
dec
inc
or
les
adc
sub
pop
xchg
jp
jbe
lcall
outsb
mov
jne
mov
jle
lcall
adc
jbe
add
rolb
push
loope
dec
push
in
idiv
imul
xchg
xlat
je
pop
ds
dec
push
sahf
add
insl
xchg
icebp
jp
sub
aam
lcall
mov
mov
jecxz
or
inc
xor
add
test
mov
fisttps
xchg
int
xor
mulb
sub
testl
dec
ret
xor
cld
add
push
lods
in
mov
test
adc
sahf
jmp
dec
or
iret
push
or
jb
push
cmp
cmp
mov
mov
sub
inc
subl
in
xor
popf
sbb
lahf
mov
xchg
sbb
or
xor
xchg
push
mov
pop
mov
outsl
and
loop
dec
or
or
test
aas
out
les
icebp
cmp
push
imul
adcb
mov
ljmp
sti
pop
fdivr
push
sbb
sbb
sbb
add
cs
pop
push
call
into
mov
lods
cmpsb
mov
jb
sti
fdivs
xor
je
xor
sarl
mov
sub
scas
xor
shll
mov
adc
pop
add
add
pop
mov
xor
es
cmp
fisttps
fsubl
outsb
jbe
mov
add
cmpsl
pop
cmp
mov
mov
shrl
adc
xchg
into
sti
daa
mov
sub
ficomps
push
jecxz
loopne
add
xchg
pop
rorl
sbb
mov
push
pop
cmpsl
mov
cmp
mov
mov
mov
xor
insb
fcoml
mov
add
cmpsl
xor
sub
ljmp
xorb
loope
addl
inc
push
stos
xor
movsl
shlb
pop
xlat
sub
into
sub
js
bound
mov
orb
inc
adc
ss
sbb
cmp
mov
dec
mov
xor
xchg
xchg
dec
lret
jl
dec
fisubrl
sub
xor
daa
cmp
push
mov
imul
mov
sub
sub
adc
pop
jb
std
mov
fcompl
mov
jecxz
jb
shl
mov
mov
loopne
inc
cmp
jb
movsl
mov
jmp
xor
insb
pop
cltd
push
jo
cmp
mov
test
int3
lds
mov
xchg
fisubs
xor
rcr
lds
lahf
daa
sti
mov
sub
loopne
inc
jno
mov
fcoml
xor
mov
andb
cmpsb
push
adc
mov
repz
dec
jo
ret
add
jno
loop
jge
mov
lods
ret
jp
or
fdivrs
aaa
and
in
mov
add
inc
jmp
loop
lret
inc
mov
inc
cmp
mov
mov
sub
cmp
out
inc
cld
xor
arpl
dec
popf
push
sub
mov
insb
rol
repz
or
inc
pop
mov
mov
sti
cmp
fs
scas
movsl
iret
es
mov
addr16
and
cmpsl
insl
cmp
loope
daa
cmp
pop
pop
jmp
in
mov
xchg
stc
test
cmc
scas
jmp
stc
xchg
inc
xchg
lret
cmp
xor
test
mov
push
insb
inc
outsl
int
call
jp
sbb
mov
push
lds
push
sarl
sarb
xchg
into
mov
call
mov
cmpsl
or
adc
aaa
mov
fldenv
outsb
adc
daa
testl
mov
xor
inc
lods
mov
mov
pop
sahf
dec
setns
adc
testl
mov
add
mov
lret
mov
pop
frstor
xor
inc
add
aad
and
das
push
sbb
lock
pop
out
jle
sbb
dec
lcall
jno
sub
icebp
aaa
imul
push
data16
push
cmp
out
std
fimuls
cmpl
pusha
enter
dec
dec
jmp
inc
xor
jns
in
or
mov
cmp
outsb
cli
or
loop
sbb
xor
jg
fnstcw
push
sub
pop
sbb
adc
adc
mov
and
jecxz
adc
mov
std
ret
push
lods
sbb
mov
daa
pop
jae
inc
fwait
test
es
push
sahf
in
pop
fwait
dec
dec
or
mov
lods
push
aas
push
cs
pop
lcall
shlb
icebp
mov
or
dec
les
fidivrl
or
mov
adc
loope
xchg
iret
mov
jbe
sbb
rcr
fnstsw
ret
jg
pop
lods
movsl
jecxz
aam
adc
mov
imul
mov
gs
fwait
popf
mov
mov
jne
push
or
fcoml
xchg
nop
mov
gs
in
data16
xor
xor
dec
lds
outsb
xchg
leave
jle
jg
leave
adc
scas
jno
push
and
dec
loopne
lret
xchg
repz
cmpsb
imul
jg
jb
arpl
jl
push
cmp
mov
and
addr16
push
cmp
lret
ffreep
cmpl
adc
mov
push
aam
mov
push
xchg
fucomp
mov
adc
sbb
insb
dec
cltd
inc
sbb
rolb
fildl
or
js
lods
repnz
lock
fwait
mov
push
jmp
pop
stos
jbe
out
ds
push
and
or
or
mov
jno
pop
test
pop
sarb
out
jnp
in
ss
jmp
push
loopne
and
leave
push
mov
mov
push
jmp
addr16
in
mov
add
mov
nop
mov
inc
out
lahf
xchg
inc
sbb
mov
mov
out
mov
out
push
frstor
orb
cmp
mov
sub
mov
jns
and
inc
ljmp
jp
pop
test
sbb
xchg
mov
adc
rclb
daa
cmpsb
sti
or
jnp
test
stc
push
ljmp
mov
pop
add
bnd
insl
das
xchg
jl
inc
adc
add
pop
std
ret
dec
ds
pop
mov
lahf
mov
push
in
out
rol
xchg
mov
mov
cmp
jle
mov
jne
lods
cwtl
sbb
out
jl
jb
lods
ljmp
sub
loopne
pop
cmpsb
fld
int3
daa
ss
aaa
outsb
cs
and
push
sbb
push
ret
aad
fdivrl
hlt
popf
orl
lock
sub
mov
mov
pop
sub
dec
movsb
aaa
je
adc
fnstenv
mov
aas
mov
repnz
push
pop
push
lods
push
in
add
lea
iret
or
jl
xlat
movsl
ret
arpl
cmp
add
xchg
add
leave
pop
fcoml
rol
movsb
add
or
sub
test
add
xchg
mov
adcb
mov
jnp
inc
repnz
test
push
pop
pop
cmp
jge
adc
repz
aad
sbb
imul
gs
sbb
sbbl
clc
sahf
int3
stos
popf
divl
fisttpl
xchg
orb
test
mov
dec
dec
inc
imul
aas
orb
add
ficoms
js
and
enter
mov
fcmovu
mov
and
subl
in
xchg
in
std
mov
lret
test
stos
daa
lds
jmp
jbe
sbb
push
xor
or
push
and
test
daa
mov
mov
add
dec
lock
jns
cmpsl
add
add
lret
out
and
add
addl
mov
shlb
loope
dec
cmpsb
ss
mov
mov
add
popf
push
stos
cmpsb
cltd
xor
sub
jno
cmpsl
add
fs
stos
mov
mov
push
testb
pop
es
add
loope
cs
ja
loopne
sub
mov
jmp
xor
push
mov
jo
mov
les
test
scas
xchg
movsb
mov
jnp
pop
lods
clc
push
cmc
enter
sbb
or
push
sbbl
pop
inc
pop
adc
fisubs
es
mov
fcmovbe
inc
mov
dec
push
ds
add
divl
aam
repnz
mov
lods
jle
sti
mov
mov
aad
das
mov
xchg
cmc
push
add
clc
cmp
ss
fcomps
lret
stos
enter
int
divb
inc
je
dec
mov
movsb
mov
dec
or
test
xchg
jb
mov
lcall
out
xchg
sub
subl
std
jae
in
mov
stos
repnz
das
js
filds
outsb
popa
push
clc
add
jne
mov
subb
pop
dec
inc
push
nop
scas
lods
jle
pop
add
sbb
add
shlb
bound
in
fmul
stc
adc
sub
adc
or
mov
mov
mov
dec
scas
cmp
lods
jmp
mov
mov
mov
or
mov
rclb
mov
fists
cmp
cs
dec
cli
push
cmp
mov
jns
xchg
jge
inc
jb
in
jecxz
lods
in
or
xorl
or
les
aaa
mov
push
cltd
aas
fistpll
repnz
push
jle
ret
fnstenv
mov
jge
divl
dec
inc
push
fisubrs
inc
sub
jo
push
pop
xchg
icebp
xor
out
cs
sbb
out
add
in
jo
scas
pop
or
sbb
jl
mov
push
addr16
dec
stos
jge
dec
inc
sub
sub
and
js
not
and
sub
xlat
or
sbb
cld
jbe
push
in
inc
fstp
adc
jg
stos
pop
pop
xchg
popf
xor
rcrl
xor
lahf
xor
jle
stos
inc
inc
dec
movsl
rcrl
xchg
cwtl
sub
sbb
mov
test
dec
sub
fcomp
sub
lods
js
xchg
xchg
pop
push
push
push
and
jmp
and
sbb
pop
stos
add
add
scas
or
and
xorb
push
mov
jge
mov
xlat
repnz
sub
mov
and
push
aas
pushl
and
imul
mov
out
lods
leave
xor
push
mov
movsb
lea
sti
adc
out
mov
add
and
push
notb
aas
or
imul
icebp
shll
dec
cltd
mov
pop
inc
idiv
neg
ds
inc
sbb
dec
cli
and
lods
out
fnstsw
stc
push
pop
mov
sub
jns
int
je
push
lret
sahf
out
cmp
mov
xchg
cmpsl
imul
test
fiaddl
fwait
xchg
jbe
loop
rclb
inc
imul
mov
cmpsb
xor
in
xchg
mov
in
addb
cmp
add
mov
xchg
scas
rclb
mov
mov
dec
ja
sbb
sub
push
push
sahf
cmp
xchg
mov
enter
dec
and
fistl
or
push
test
out
or
movsl
ret
das
aas
icebp
or
mov
leave
sub
test
inc
sar
sbb
out
cli
les
lahf
inc
mov
mov
fisubrl
cmp
pop
push
lds
mov
out
shlb
jne
push
push
xchg
push
scas
or
cwtl
and
mov
jo
sbb
jmp
inc
jns
testb
xchg
aas
fisttpl
jo
mov
fbld
push
pop
or
invd
insl
insl
mov
cmp
repnz
outsl
test
xor
inc
push
and
mov
out
pop
stos
jg
int3
inc
add
mov
sbb
in
sarl
jnp
scas
xchg
dec
adcb
js
mov
lea
subl
test
dec
mov
pop
fs
popf
push
leave
rclb
les
sub
pop
inc
sub
cwtl
adc
pop
rcl
cwtl
mov
andb
lock
std
xlat
dec
ret
stc
jno
cld
inc
xor
addr16
repz
lds
sub
test
dec
sarb
clc
inc
shll
test
lds
sahf
rorb
mov
fisttps
inc
loope
pop
int
bound
xchg
data16
xor
aam
xchg
test
mov
mov
lret
xchg
lret
arpl
fwait
clc
mov
lods
or
pop
cli
sub
dec
sbb
pop
pop
jbe
jns
aaa
mulb
jnp
hlt
int3
sbb
popa
add
mulb
pop
in
out
jo
inc
leave
push
pusha
bound
gs
ret
sti
cli
cli
in
push
sti
scas
jb
fldt
gs
xor
dec
sub
iret
clc
cwtl
iret
push
mov
loope
adc
int3
dec
sub
sahf
jge
dec
jmp
lock
jg
testl
movsb
mov
push
out
pop
in
leave
fnstcw
iret
divl
addl
imul
push
mov
mov
mov
fwait
mov
add
loop
push
pop
mov
jno
pop
fisttpl
out
vcvtdq2ps
sbb
sbb
or
jl
jg
push
dec
cmp
xchg
xchg
dec
sti
arpl
sbb
leave
enter
cltd
pop
jbe
cmp
mov
push
stos
and
or
sub
inc
pop
lret
out
pusha
pop
movsl
and
call
cmpsb
mov
fs
cmp
out
xor
inc
cmp
les
imul
and
dec
loope
cmp
mov
nop
mov
clc
adc
gs
xchg
in
ja
test
int3
jno
bound
dec
push
imul
mov
cmc
hlt
jmp
sub
lock
cmp
bound
cmp
add
pop
pop
bound
pop
fdivr
icebp
or
arpl
pop
pusha
and
leave
and
pop
in
fwait
xor
outsl
sbbl
sbb
pop
clc
mov
into
fcomp
jns
fwait
rorb
push
xor
ret
scas
rclb
adc
sub
fidivrs
subb
dec
add
cld
mov
mov
fiaddl
xchg
and
pop
pop
push
lods
or
dec
aad
stos
and
inc
cmp
out
in
inc
push
out
das
mov
mov
out
or
int
shrl
add
icebp
rorb
push
ret
fcmovb
push
fidivs
in
sub
inc
and
cmp
adc
cli
sub
scas
roll
mov
sub
ja
xchg
das
cmpsl
insl
sub
mov
xorl
pusha
sub
in
push
mov
ljmp
cli
pop
repz
and
lcall
mov
jg
cmp
into
ror
fwait
out
je
bound
add
mov
aad
adc
imul
mov
cmp
jmp
pop
repnz
add
mov
nop
jmp
push
xlat
sub
aaa
in
repz
xchg
pop
inc
mov
sub
push
or
incl
xor
cmp
or
pop
inc
or
xchg
cmpsb
adc
jne
add
lea
sub
push
cltd
out
repz
inc
jnp
dec
subb
mov
add
add
mov
cs
and
jecxz
push
inc
dec
push
mov
daa
xor
lfs
sbb
jge
push
pop
pushf
and
cmp
or
setnp
xor
scas
mov
push
addr16
adc
fcoms
cli
sbb
call
cmp
cmp
mov
mov
dec
push
popa
mov
jae
pop
adc
fmuls
push
add
scas
mov
cmp
mov
jg
mov
jmp
jmp
mov
pop
sbb
jae
adcl
jno
test
in
decb
inc
notl
pop
sub
mov
dec
and
inc
lods
mov
fsin
sbb
movsb
bound
xor
out
pop
shlb
xor
cmp
xchg
lods
shrb
lcall
out
jle
aad
mov
mov
sti
pusha
lods
sub
push
mov
stos
popf
jecxz
pop
jle
inc
adc
divb
xchg
sbb
mov
addb
std
and
jle
jmp
sub
jbe
loope
sbb
add
push
pop
jg
mov
pusha
mov
lock
jb
pop
daa
adc
fiaddl
mov
les
es
std
das
in
imul
repz
cmp
and
mov
imul
bound
and
sbb
and
xchg
jmp
lock
jmp
dec
insb
jl
into
xchg
imul
out
lds
ror
popf
jb
lods
or
inc
cmc
sbb
jmp
scas
outsb
stc
push
fwait
xchg
pop
add
lea
cmpsb
xchg
lcall
leave
stos
cmp
in
repz
sub
push
xor
loope
mov
and
insl
ja
mov
insl
clc
test
mov
repnz
sbb
xor
in
fmul
notb
test
mov
out
or
lock
mov
insl
lahf
loope
addb
in
jmp
xor
popa
fdivr
in
in
pop
xor
jmp
push
fidivrs
add
mov
mov
call
loope
jle
cmp
int
insb
inc
xchg
js
mov
pop
inc
sub
stos
clc
test
stc
pop
mov
enter
sbb
clc
and
adc
daa
add
xchg
test
sub
xor
out
sub
ret
inc
orl
add
cmp
xchg
and
in
jmp
jmp
jecxz
nop
test
mov
and
in
and
mov
cwtl
ss
fstpt
ja
stos
fbstp
scas
mov
xchg
jo
add
sbb
movsb
adc
daa
sti
cmp
sbb
mov
pop
push
ds
cli
xor
or
rolb
stos
stos
sbb
sub
arpl
xor
iret
ljmp
movsl
test
sahf
jp
icebp
sub
push
adc
lcall
std
ja
xor
lahf
xchg
jae
sbb
repz
fbstp
mov
pop
imul
xor
jnp
addr16
mov
dec
in
icebp
cmpsl
inc
sub
out
es
mov
call
xorl
icebp
in
in
mov
dec
jae
xor
or
cmp
dec
dec
cwtl
scas
clc
mov
ljmp
jb
sbb
or
dec
push
push
pusha
xchg
dec
clc
xor
xchg
dec
ds
add
or
std
scas
mov
jp
add
mov
pop
icebp
pop
cmp
pusha
mov
inc
push
mov
adc
dec
inc
lret
inc
outsl
lock
inc
or
push
add
mov
cmc
rcrb
subb
clc
sbb
mov
dec
ret
or
xchg
mov
call
bound
inc
or
push
push
in
jno
das
or
cmp
xor
icebp
pushf
mov
or
cmc
adc
jb
jo
cmp
enter
inc
mov
jmp
inc
mov
mov
in
imul
pop
adc
push
or
xor
movsb
lcall
sbb
mov
mov
ret
scas
or
mov
jecxz
xor
insl
leave
push
add
int3
or
inc
sub
pop
jecxz
xchg
scas
sub
sbb
popa
addr16
clc
test
repnz
insb
jns
icebp
pop
xchg
loopne
or
sub
movsl
in
popa
ss
push
cmp
fwait
ret
test
push
js
icebp
jmp
daa
sbb
lock
std
mov
arpl
iret
pop
leave
add
or
push
cmp
jle
nop
mov
ljmp
lds
js
xchg
or
and
loop
js
add
gs
sbb
je
sbb
bound
inc
pop
adc
shlb
and
add
es
cmp
cld
mov
jb
sarl
imul
pop
mov
fmulp
or
shlb
push
bound
test
mov
imul
bound
mov
bound
xchg
xabort
mov
mov
pop
xor
mov
xchg
push
movsl
mov
add
dec
or
xor
lods
xchg
push
or
jnp
test
std
jmp
fmuls
popf
jg
hlt
or
push
xor
jmp
fnstcw
sbb
xlat
sub
das
adc
add
insl
cmp
push
mov
shll
push
outsb
jl
xchg
jmp
mov
inc
add
xor
in
fisubrs
mov
sbb
jg
mov
sbb
push
lahf
pop
push
call
push
icebp
cmc
mov
scas
cmp
arpl
test
adc
pop
jmp
pushaw
mov
mov
daa
fstpt
xchg
push
inc
imul
xorl
or
pop
pop
fiadds
xchg
push
push
xchg
xor
pushf
decb
aaa
pop
xlat
aaa
gs
push
shl
inc
or
mov
adc
xor
mov
repnz
dec
xchg
xlat
jnp
mov
push
inc
xchg
pop
add
mov
lahf
fisttpl
mov
mov
lea
jle
jns
mov
lret
pop
int
fwait
mov
fs
xlat
ret
or
ljmp
mov
or
inc
movsl
mov
xchg
ret
jb
xor
push
push
sbb
aaa
and
or
out
imul
cmpl
mov
add
loopne
mov
sub
xchg
sub
sbb
in
stos
gs
pop
push
adc
in
in
pop
sbbb
in
xor
add
test
xor
push
adc
out
mov
call
outsl
les
movsl
xchg
cmc
scas
stos
scas
push
arpl
imul
jp
or
mulb
sub
out
cmpsl
jle
imul
adc
in
mov
pop
push
jecxz
aas
mov
sub
jns
xchg
mov
dec
fsubr
xor
xchg
jle
cwtl
sub
mov
paddusw
mov
stos
push
lret
mov
in
lcall
xor
stc
inc
jp
mov
pop
sub
xchg
push
sbb
mov
cmp
push
pop
inc
xchg
xor
daa
add
mov
dec
leave
and
mov
roll
pop
or
popa
cltd
jb
std
mov
out
xchg
ja
mov
jle
mov
sbbl
js
shll
stc
sarl
mov
xor
outsb
stos
mov
xor
cmp
sti
jp
insl
dec
pop
js
mov
orb
or
mov
insl
add
cmp
xor
ss
mov
repz
stc
imul
or
xor
mov
sti
dec
adc
movsl
incl
scas
mov
mov
movsl
into
dec
add
insb
and
bound
out
cs
ljmp
xchg
mov
cmc
inc
sbb
es
stc
mov
xchg
pop
loopne
scas
push
xchg
inc
mov
mov
out
dec
ljmp
mov
pop
mov
mov
inc
cs
xor
pop
mov
pop
and
test
push
cld
or
pop
inc
mov
add
leave
xchg
movsb
xchg
lcall
mov
xor
pop
mov
push
jno
mov
pop
outsl
adc
dec
jle
jmp
or
mov
jbe
xchg
fdivs
repz
jge
pop
rcrl
xor
adc
xchg
xor
mov
cmp
mov
aaa
mov
cmpb
pop
xchg
mov
scas
pop
xchg
mov
xor
out
iret
call
dec
mov
aas
scas
mov
in
pop
mov
imul
jmp
and
push
mov
out
mov
jge
cmp
imul
out
cmpsb
push
int3
pop
pop
iret
mov
testb
push
jmp
cmp
lock
rol
inc
sub
or
dec
jbe
cs
fs
loop
push
push
dec
xchg
or
cmp
adc
mov
dec
sbbl
pop
inc
imul
popa
sub
pop
in
cmp
stos
mov
fs
mov
std
in
pushf
xchg
inc
or
rclb
jecxz
dec
cwtl
mov
mov
mov
jl
push
repnz
decb
push
lret
mov
fstpl
xor
or
test
inc
fwait
or
mov
test
adc
mov
add
push
orl
aad
hlt
out
cli
xchg
into
repnz
clc
mov
push
shlb
ret
push
dec
enter
out
addr16
repnz
inc
lahf
mov
dec
fwait
sub
fbstp
sbb
mov
test
mov
mov
adc
mov
stos
insl
and
inc
lock
ret
iret
xlat
ror
xor
adc
dec
adc
lods
dec
xor
sarb
jecxz
inc
out
or
rorl
jae
pushf
fsub
dec
dec
dec
sbb
into
mov
pop
xor
js
cmp
fs
leave
test
fucomi
xchg
adc
mov
sub
sahf
push
clc
or
pop
cmp
ss
xor
out
pop
scas
mov
sarb
sbb
push
cwtl
imul
stos
negl
aam
push
add
sub
xchg
mov
dec
mov
inc
pop
mov
mov
fwait
stos
lret
add
lret
mov
jecxz
sbb
pop
dec
ja
and
mov
stos
inc
mov
sbb
insb
sub
stos
in
add
ja
or
pop
inc
iret
pop
movsl
stos
divb
dec
movsb
ds
fnsave
xchg
xchg
xchg
push
mov
cwtl
movsb
negl
pop
pop
pop
push
ds
jmp
clc
clc
jge
in
test
int3
cmp
adc
cmp
and
repz
out
jle
fmuls
jno
mov
and
and
cli
cmp
jecxz
cmova
nop
jae
fildl
daa
pop
ljmp
stc
repnz
shlb
mov
jne
push
mov
push
lret
imul
adc
inc
pop
fsubl
push
xchg
xchg
daa
mov
xor
and
in
dec
xor
fsubrs
inc
sub
cmpsl
pop
sbb
mov
gs
inc
xchg
cmp
out
cmp
shlb
ret
mov
rclb
loope
idivb
in
ss
cmpsl
int3
inc
aam
xor
mov
add
xchg
mov
insb
mov
pop
inc
mov
fbstp
call
ficomps
inc
inc
pop
aas
mov
xor
sbb
mov
fs
rsqrtps
ja
lock
sub
js
pop
popf
jns
push
add
faddl
insl
hlt
inc
mov
sub
pop
popa
mov
cwtl
mov
std
repnz
outsl
adc
or
in
les
xchg
in
lahf
dec
in
fwait
rcr
fndisi(8087
mov
add
mov
and
push
inc
or
pop
je
mov
or
fidivrl
mov
mov
lret
out
cmpsl
mov
mov
leave
test
je
sbb
jno
mov
mov
lcall
mov
negl
in
dec
dec
xchg
sbb
sahf
pop
sub
jb
out
addl
jg
mov
xchg
lods
arpl
addl
popa
dec
pop
sub
jecxz
out
movsl
cmp
push
nop
int
xchg
cli
inc
leave
nop
adc
das
xchg
inc
insl
xor
push
int
in
lcall
sbb
sti
mov
ja
mov
mov
mov
ljmp
cmp
in
lds
lret
fwait
imul
sub
sbb
lcall
out
xchg
xlat
pop
das
mov
and
pop
jns
xchg
fsubrs
pop
xchg
in
mov
sub
pop
xor
js
call
push
ficompl
cli
push
or
pop
in
push
fcoms
int3
loopne
dec
mov
inc
fildl
xchg
lods
cmp
imul
xchg
xor
dec
mov
imul
jno
dec
adc
nop
inc
test
ljmp
push
scas
and
outsb
jmp
mov
mov
jg
out
or
mov
pushf
aad
das
addr16
inc
add
jl
bound
lret
mov
jae
cli
adc
or
cmp
pop
loop
xlat
cmp
xor
ja
orb
mov
decb
sahf
cmp
add
stc
and
aas
shll
xchg
cmp
push
movsb
cli
pop
push
negb
inc
add
mov
in
inc
out
cmp
dec
sbb
add
aas
sub
jecxz
fpatan
cmc
add
sarb
xchg
sbb
test
pop
and
in
das
test
jbe
dec
out
mov
add
mov
iret
movsb
jne
enter
cmpb
in
push
lock
xor
test
cltd
into
test
and
jne
adc
mov
bound
inc
mov
push
cmp
mov
and
or
add
cmp
test
inc
and
jns
decl
xchg
movsb
mov
dec
inc
mov
dec
inc
fildl
mov
ljmp
cmp
xchg
es
xor
jae
pop
in
iret
je
aad
add
inc
mov
bound
mov
imul
lods
fisubl
xchg
xchg
cli
mov
out
sub
clc
mov
sub
add
xchg
test
repnz
int3
lock
xor
or
mov
jo
mov
popf
dec
push
mov
mov
ror
mull
mov
lret
ljmp
mov
xchg
mov
insb
pop
roll
inc
fstpl
scas
in
xor
dec
and
adc
fucom
push
jb
pop
aas
cmp
arpl
xor
call
mov
cmpb
dec
imul
cltd
lret
mov
sub
icebp
push
pop
cltd
and
mov
or
aaa
sbb
fmull
cmp
movsb
or
adcb
bnd
inc
mov
fdivr
xchg
dec
out
cmp
data16
int
adc
mov
into
mov
fists
adc
xlat
into
adc
lret
in
ret
xor
push
int3
aas
sbb
ret
in
in
out
push
les
aas
movsb
test
int3
push
fldt
or
or
rol
jmp
cli
inc
syscall
pop
inc
xchg
jp
mov
pop
cmpsl
push
and
jmp
pop
dec
add
ror
or
dec
imulb
addl
jle
push
jne
mov
hlt
cli
mov
gs
push
fwait
pop
scas
testb
jo
dec
ss
push
sbb
faddp
push
mov
mov
jbe
xor
inc
and
cli
ret
push
jbe
ljmp
and
xor
pop
jno
or
arpl
sbb
xlat
xchg
xchg
push
pop
or
xchg
rolb
stos
punpckhdq
scas
aas
push
push
sub
pop
sub
sbb
ja
mov
and
out
or
mov
pop
jmp
nop
je
lods
xlat
subl
mov
aaa
mov
sbb
orl
pop
addr16
mov
enter
cmp
pop
stos
int
cld
test
inc
jg
and
loop
add
addr16
sub
cmpsl
icebp
and
cmp
xchg
mov
fildl
xor
ret
ret
sub
xor
lcall
inc
and
in
out
sub
stos
sub
sbb
mov
out
test
lock
fs
jne
loopne
xlat
adc
or
ss
ret
dec
jb
xchg
cmp
xlat
stos
pop
jl
cs
jo
testb
call
adc
fldz
xchg
daa
cmc
pusha
and
or
scas
pop
pop
cmp
push
and
mov
cmpsb
test
lret
mov
pop
sbbb
jns
cmc
rcr
ficompl
aad
test
sahf
mov
xor
fmull
mul
leave
data16
rcl
cmp
test
add
mov
mov
xchg
mov
dec
mov
lock
pop
xor
filds
btr
pop
int
inc
outsl
out
dec
push
sbb
dec
mov
rcll
mov
mov
insl
add
xor
lret
scas
sbb
fists
fcmovne
out
test
inc
push
lods
add
cmpsl
inc
cwtl
es
ret
sub
jns
fisubs
data16
imul
iret
adc
dec
add
cmp
xor
mov
jg
xor
adc
jge
lcall
test
or
pop
dec
and
aam
leave
mov
sub
inc
push
cmc
sbb
inc
push
pop
xchg
dec
fists
or
imull
push
or
arpl
mov
or
sbb
imul
dec
loopne
mov
jae
cmpsb
sbb
xchg
cmp
push
lock
push
mov
ret
lahf
std
and
loop
add
sbb
cmp
add
dec
pusha
pusha
aaa
ja
je
mov
cmp
inc
and
insl
aad
sti
sahf
pop
loopne
mov
test
sbb
pusha
mov
sub
enter
add
mov
cli
ror
adc
adc
loopne
shr
mov
cwtl
repnz
subl
jmp
pusha
inc
xor
sbb
bound
scas
popf
shl
lret
inc
pop
pop
out
jecxz
inc
das
fwait
test
xchg
cmpsl
sbb
test
sbb
cs
push
sub
int
sub
aad
lock
leave
mov
in
adc
out
in
jae
jle
insl
adc
cld
mov
pusha
test
ret
push
loope
jl
mov
fs
push
movsb
lret
popf
push
stos
lret
orb
xchg
jmp
or
lret
ud1
push
dec
in
lahf
push
test
negb
testl
pop
sbb
stos
cmp
arpl
out
orb
add
sub
and
pusha
xchg
jo
movb
push
or
xor
test
clc
mov
push
mov
sbb
loope
pop
push
jno
ret
dec
stc
scas
add
sbb
xor
xchg
test
cmp
testb
stos
jno
shlb
pop
iret
mov
pop
xchg
cli
arpl
dec
and
or
aam
or
ret
xchg
into
fistps
pop
lret
repz
stc
mov
out
popf
test
outsl
xchg
stc
adc
sti
repnz
jnp
jb
mov
jg
test
jp
bnd
mov
xor
mov
shlb
dec
mov
and
in
jl
xor
loop
pop
push
mov
and
or
fcom
mulb
or
sbb
mov
mov
scas
stos
arpl
js
jb
shr
xchg
insl
jnp
aam
popa
inc
push
push
iret
fadds
inc
jae
inc
test
roll
add
je
xchg
ret
pushf
jmp
shrl
insb
cld
add
xchg
sub
inc
mov
inc
pop
push
jb
mov
xchg
lahf
dec
arpl
shrl
sub
adc
ret
xchg
scas
dec
rcrb
xchg
and
xchg
xchg
pop
dec
in
xor
jg
insl
stos
mov
insl
pop
jge
and
sbb
jnp
mov
sub
aad
insb
cmpb
arpl
sub
cmp
cltd
adc
push
push
push
push
jmp
filds
fwait
ljmp
pop
inc
in
cli
mov
dec
dec
out
pop
jmp
dec
push
sub
es
xchg
adc
mov
push
shrb
pop
inc
jl
push
pop
cmc
add
fs
sbb
loope
in
dec
xor
push
sbb
leave
imul
cs
aad
sbb
pushf
mov
push
stos
add
add
mov
nop
adc
mov
adc
mov
xchg
fistps
addl
test
addb
xchg
rcr
mov
xor
adc
out
int3
sar
sbbb
add
loopne
mov
inc
insb
jnp
enter
pop
mov
jmp
mov
imul
insb
or
pop
sub
jle
xchg
int3
or
stos
aaa
les
lret
push
rolb
jo
data16
mov
or
push
int3
xchg
fisubrs
lret
ror
push
fidivl
inc
jl
cmp
mov
pop
jl
push
imul
inc
negl
xor
das
xchg
dec
mov
loop
cmp
cmp
dec
pop
add
outsl
je
dec
dec
jmp
ja
jl
fisubrl
mov
pop
in
scas
loope
xchg
inc
jl
pushf
cld
mov
in
daa
ja
jmp
mov
adc
xchg
dec
lahf
repz
mov
stos
xchg
fidivs
xchg
repnz
inc
cmp
push
aas
rcll
cmp
sub
adc
mov
push
push
cli
aaa
jb
hlt
xchg
cltd
fists
dec
lret
ffreep
insb
sbb
mov
std
mov
gs
test
mov
mov
xor
dec
pop
jns
or
aaa
int3
inc
outsl
dec
sar
inc
in
pop
and
leave
in
xchg
mov
stos
repz
push
jo
mov
xchg
lods
sbb
or
ljmp
hlt
adc
leave
std
pushf
pop
inc
jnp
sbb
jo
dec
sub
mov
mov
push
inc
mov
or
sub
mov
insl
sub
dec
cltd
xchg
xchg
scas
ret
aad
pop
sbb
xchg
jo
or
lds
iret
cmp
push
lods
add
xlat
cltd
xor
push
movsl
xchg
cmpsb
add
add
adc
ljmp
insl
outsl
mov
jno
inc
push
sub
and
cli
dec
lock
xor
xchg
mov
mov
cltd
mov
sub
push
data16
cmpsb
sbb
repz
mov
mov
negl
mov
ret
xlat
filds
sbb
and
sub
ds
iret
mov
adc
mov
push
xorl
jbe
mov
and
pushf
push
xchg
mov
push
mov
cmpsl
pushf
das
sbb
push
hlt
sub
xor
loopne
flds
pop
and
cmp
daa
lcall
sbb
pop
mov
je
jl,pt
sahf
icebp
jmp
mov
ds
lcall
jle
lret
lods
es
or
adc
inc
loop
add
push
aaa
test
adc
mov
out
int3
xchg
jne
lea
push
pop
inc
lods
mov
cmpsl
test
ljmp
lcall
fistpll
adc
xchg
jne
xor
jge
xchg
iret
pop
mov
data16
ja
test
dec
push
mov
xlat
into
inc
sbb
cwtl
push
mov
pop
das
ret
inc
pop
stos
scas
fldcw
push
cmp
les
mov
sub
inc
push
xchg
je
popf
sub
dec
mov
and
sub
es
xor
cltd
cmpsl
mov
and
das
mov
mov
into
add
inc
mov
fidivl
movsb
decb
pusha
rorl
out
fmuls
cmpb
jns
inc
data16
iret
inc
sbb
subb
shlb
rorl
mov
mov
lods
iret
subb
and
lods
aam
aam
ja
or
in
or
clc
das
cltd
mov
data16
data16
pop
cltd
xchg
fisubrs
mov
push
popf
xorb
xchg
mov
mov
out
rcll
and
and
int3
cmp
push
adc
mov
mov
dec
cmp
cli
mov
dec
adc
mov
lds
jno
bts
addb
and
fdivrs
inc
andl
fisubs
sbb
or
ret
aas
cmc
fwait
jmp
loopne
mov
mov
pop
mov
mov
jg
clc
dec
push
int3
movsl
or
rclb
xor
pop
cmp
shll
daa
es
add
adc
testb
mov
ret
add
aas
leave
adc
pop
ljmp
jns
or
lea
mov
rorb
mov
insb
cmp
dec
rcrl
and
cmp
xchg
xchg
loop
pop
sbb
out
test
lret
jbe
pusha
pop
lcall
shlb
push
jne
fdivrs
mov
jecxz
inc
gs
mov
cmp
fadd
cmp
stc
and
push
std
or
fiaddl
lahf
push
add
jmp
test
or
bound
stos
and
aas
aaa
push
push
icebp
test
lret
pop
scas
insl
xlat
mov
pushf
dec
lods
jb
xchg
adcb
aas
mov
gs
push
push
fucomi
ret
cmp
or
scas
std
add
sub
mov
pushf
pop
stos
dec
cmp
push
xchg
popf
and
leave
xchg
cli
pop
test
jg
xchg
sub
aad
cmp
cltd
hlt
xacquire
cltd
xor
mov
mov
jge
ss
stos
std
imul
lahf
jl
sub
dec
pop
xorb
add
shrl
mov
cmp
dec
in
pop
out
into
popf
jno
push
das
cmpsb
xor
dec
xchg
push
cli
inc
ror
inc
push
out
adc
mov
shll
fimuls
mov
push
dec
and
fistpll
filds
fbstp
sub
fs
enter
xchg
xor
daa
or
sbb
xor
adc
xor
sbb
and
stc
xor
cld
xor
scas
and
mov
mov
mov
inc
iret
xchg
int3
outsb
mov
cmpsb
shlb
in
jo
lods
loope
sub
or
dec
test
test
arpl
mov
inc
dec
jmp
sub
mov
jmp
adc
jecxz
fisttpll
sahf
mov
out
add
rol
push
pop
shr
mov
dec
stc
inc
mov
add
inc
idiv
fiaddl
out
std
call
repz
push
lods
cmc
sti
loopne
cmp
or
push
inc
cmp
mov
mov
xor
sbb
popf
je
dec
hlt
in
pop
mov
add
mov
xchg
xchg
xorl
jne
mov
jp
loop
lock
push
std
xchg
mov
sti
imull
push
mov
pop
jge
aaa
cltd
pop
push
ret
mov
rorb
outsb
out
mov
add
imul
inc
dec
cmp
arpl
and
out
mov
xlat
jg
rcll
cli
sbb
mov
mov
add
xchg
mov
jecxz
shlb
mov
sbb
cmpsl
mov
xchg
lcall
and
std
fildl
xor
fists
sbb
ret
int
sbb
js
push
or
clc
and
cld
test
sbb
mov
and
mov
shl
test
bound
push
bnd
pop
aad
adcl
mov
jge
int
adc
sub
notl
mov
insl
icebp
sbb
mov
mov
add
mov
jg
shl
nop
mov
ja
jne
xchg
popw
push
in
fmuls
mov
fidivrs
test
imul
cmc
push
in
and
jg
fwait
add
lods
fldcw
mov
mov
lea
fsubp
mov
cmpsb
out
inc
xchg
pushfw
and
dec
mov
sbb
adc
mov
adc
lds
inc
rorb
dec
out
dec
dec
mov
lret
imul
and
ds
addr16
ja
mov
sbb
in
nop
lock
push
inc
mov
xchg
mov
sti
add
and
addr16
les
lahf
aam
ljmp
hlt
popf
mov
cli
lret
movsb
mov
pop
ret
movsl
mov
add
xchg
je
jge
cmc
in
test
or
aas
fisubl
add
ret
xchg
push
scas
pop
push
subb
mov
aad
insl
jbe
sarl
int
xor
push
outsb
ja
outsb
daa
popl
xchg
push
shr
int3
adc
lods
out
pop
mov
jmp
and
shlb
pop
push
sbb
mov
push
sarl
leave
loop
jmp
lds
dec
sbb
xchg
push
xor
daa
push
cwtl
bnd
int
mov
rcrb
icebp
dec
xlat
loope
pop
push
out
loopne
xchg
fdivrs
xor
arpl
popa
stos
push
inc
hlt
insl
int
aas
rcr
adc
pop
jbe
jo
push
cmp
add
add
pop
push
sub
sahf
push
sub
icebp
addr16
sub
sub
mov
or
cmp
cltd
ljmp
mov
stos
push
stos
js
pop
jmp
mov
dec
fs
xchg
inc
mov
xchg
sahf
es
cmp
int3
mov
ja
mov
std
lds
bound
sub
sbb
andl
push
pop
fmuls
xchg
and
pop
jl
js
mov
sub
mov
inc
sarb
loope
sbb
insb
cmp
out
add
pop
pop
cmp
and
es
or
pop
jbe
sti
jp
pop
out
pushf
iret
movsb
pop
imul
fwait
push
add
xchg
xchg
cld
ret
cmp
ja
in
cmp
adc
and
test
sub
sub
mov
rol
mov
cli
add
movsb
test
jecxz
inc
dec
dec
imul
inc
aas
cltd
cltd
rol
lea
arpl
scas
xor
iret
imul
outsl
mov
pusha
movsb
jns
cmpsb
sti
roll
scas
adc
pop
sti
pop
ret
testb
rcrl
ljmp
mov
ljmp
mov
xor
shl
mov
addr16
sbb
adc
dec
lret
jg
fwait
sbb
sub
or
movsl
cmpsl
dec
int3
imull
pop
lret
lods
or
adc
aas
lods
imul
cltd
inc
test
js
out
mov
stos
jno
push
popf
inc
jno
jbe
xchg
pop
push
lcall
mov
jmp
push
scas
jl
mov
adc
aam
je
push
sbb
je
pop
test
fldenv
cmp
dec
mov
sahf
mov
cmp
sahf
ljmp
cld
xadd
xchg
add
les
pop
mov
popa
xchg
out
add
mov
xor
xchg
xchg
fstp
cmp
add
push
push
lahf
mov
sbb
mov
add
std
lea
xor
mov
xor
jno
dec
hlt
cmpsb
pop
in
ljmp
cld
push
rclb
mov
addr16
xor
or
cwtl
pop
inc
push
and
sub
lds
lret
sbb
pop
cltd
sub
jmp
cmp
nop
xchg
jo
stc
movsl
xor
mov
mov
hlt
lahf
ss
popa
test
divb
lds
ljmp
sbb
inc
mov
mov
cmpsl
jl
aaa
cmpsl
sbb
inc
js
xor
sbb
mov
mov
add
fldenv
shll
aad
push
pop
push
out
out
arpl
std
insl
push
mov
jne
xor
fstps
shrl
xchg
subl
jp
in
sbb
leave
cmp
xor
js
lahf
cmp
and
out
js
cmp
mov
out
mov
mov
aas
arpl
or
lcall
sbb
rorl
or
loop
adc
sbb
pop
in
in
mov
enter
insl
xchg
xor
lock
cmc
in
xchg
fmuls
jae
imul
ja
sti
out
rclb
ds
mov
int
int
sahf
notb
lock
cmp
pop
cmp
mov
shll
shlb
inc
aaa
out
je
xchg
jge
xchg
aaa
bound
movsl
jmp
xchg
stos
in
adc
add
xchg
cmp
sub
push
lahf
jo
jnp
and
lock
add
clc
pop
mov
iret
daa
outsb
mov
aas
xlat
clc
data16
es
or
jno
mov
jecxz
subb
dec
fimull
xchg
sbb
cmp
aad
enter
sub
pushf
jns
rcl
dec
mov
shll
inc
jmp
cmp
fsub
outsl
xor
inc
adc
and
fistl
lahf
movsl
fmuls
adc
ja
adc
rclb
lds
cmp
cmc
cmp
nop
test
adc
aam
sbb
jae
xchg
xchg
shlb
inc
inc
dec
fdivs
pushf
mov
or
mov
xchg
mov
pop
sub
dec
adc
loop
je
and
and
cmpsb
popf
subb
enter
xor
cs
mull
pop
aam
xchg
or
push
xchg
jo
sub
gs
jnp
jmp
shll
and
mov
mov
adc
in
ret
xchg
cmp
adc
mov
outsb
inc
xor
lds
or
hlt
imul
push
sbb
pop
xor
ret
dec
fistpl
mov
bound
cmpsl
pop
andb
cmpsb
dec
jo
xorb
and
rcrb
sub
dec
and
outsl
out
lods
push
cmp
test
ss
or
inc
mov
aaa
cmpl
mov
cli
daa
jbe
jmp
arpl
mov
pop
xor
sbbb
push
mov
loopne
in
lcall
push
or
mov
fildl
insb
lcall
dec
popa
xor
fisttpl
and
into
out
or
mov
into
ficomps
add
clc
mov
mull
xchg
xchg
mov
sarl
adc
scas
xchg
pusha
xchg
test
and
push
add
mov
shll
ret
ret
jns
insl
imull
outsl
xchg
aas
test
daa
jns
ficompl
inc
nop
lahf
and
and
mov
xor
push
movsl
fstpl
cmp
divl
or
and
popf
sti
popa
movsb
cmp
jb
fwait
pop
popa
pop
add
mov
out
scas
sbb
sbb
fmul
movsb
cmp
pop
jmp
pusha
jg
movsb
aas
repnz
sbb
or
cmp
sbb
sbb
push
fisttpll
or
xor
fisttps
popa
sub
fisubl
pop
jne
inc
ror
pop
rcrl
in
and
dec
sbb
sbb
xchg
scas
fs
in
push
push
mov
repnz
fmuls
mov
scas
test
je
scas
sbb
scas
push
jp
fwait
cltd
je
iret
js
jns
mov
enter
pop
cmp
pop
lds
jo
or
inc
add
in
pusha
xchg
or
ds
sbb
dec
mov
xor
push
lahf
in
inc
mov
jg
mov
mov
outsb
js
out
push
das
popa
and
cltd
stos
cmp
sti
add
xor
leave
imul
sub
mov
inc
sub
leave
xlat
out
test
and
mov
pop
and
mov
scas
or
test
leave
outsl
pop
das
inc
repnz
add
jge
das
outsl
or
pop
jp
sahf
mov
pinsrw
nop
sbb
mov
sbb
xor
scas
dec
sahf
cli
int
lcall
mov
or
mov
pop
xor
cmp
pop
mull
popf
lock
int3
data16
sahf
sbb
movsl
xor
cmp
or
or
sahf
and
insb
leave
fdivrl
nop
daa
mov
pop
push
in
cmp
loop
sub
sub
cli
jne
testb
add
mov
pop
xchg
int3
aad
inc
dec
add
adc
jns
mov
sub
es
sub
mov
or
and
mov
enter
cwtl
popa
mov
jecxz
mov
pop
rcrb
insl
outsl
or
mov
cltd
mov
inc
pop
in
jb
adc
das
sub
xchg
dec
ds
outsl
in
in
pop
cmovb
push
hlt
mov
add
xchg
mov
lds
inc
sub
fstps
dec
and
dec
pop
iret
xchg
scas
mov
sahf
or
jae,pt
sbb
inc
xchg
test
and
sub
bound
ds
and
jnp
cmp
nop
push
clc
and
jb
mov
insl
adcb
test
icebp
adc
push
adc
jb
arpl
mov
cmp
movsb
mov
add
cmp
push
incb
call
lock
mov
shr
dec
pop
push
adc
cwtl
jl
push
fimull
jno
xchg
in
test
dec
xor
adc
and
sbb
lret
imul
movsl
push
jl
adc
dec
pop
fdivrs
fldl
outsl
mov
shrb
pusha
enter
ret
hlt
sbb
gs
loopne
sub
inc
mov
cmp
and
arpl
xchg
cmpsl
xchg
mov
ds
mov
shlb
mov
clc
es
mov
pop
dec
dec
arpl
adc
movsl
cmc
rcll
fwait
mov
cltd
pusha
shlb
and
xchg
dec
dec
addr16
insb
insl
mov
ficoml
dec
in
movsl
inc
fdivrs
add
cwtl
sahf
sti
loopne
das
mov
sub
mov
jecxz
fists
sti
out
mov
call
enter
jno
adc
outsb
or
stos
sub
mov
push
das
popl
cltd
push
push
sbb
jb
lea
lahf
inc
dec
xlat
push
movsb
mov
into
adc
cmc
imulb
pop
stc
xchg
repnz
and
jge
outsb
jl
push
push
jge
xor
lret
je
mov
mov
mov
lea
std
sub
dec
pushf
and
test
neg
jno
push
adc
arpl
int3
insl
and
fucomp
test
insl
mov
sub
pop
cwtl
pop
es
push
mov
and
jle
jge
dec
dec
in
or
stos
cmpsb
movsb
lea
xor
iret
in
mov
inc
pop
add
jge
xchg
fcomps
mov
or
mov
cs
ss
js
lds
test
mov
idivl
mov
jne
lret
imul
in
cmp
imul
and
adc
push
dec
jnp
mov
stc
pop
outsl
in
xchg
jb
inc
aas
and
imul
inc
addr16
iret
fwait
push
add
lcall
in
cmp
adc
lahf
mov
xchg
inc
enter
ud1
inc
or
pop
stos
negb
jne
imul
push
adc
outsb
mov
mov
fsubrl
packsswb
mov
inc
aad
outsb
sbb
xorb
fiaddl
add
loope
daa
xchg
mov
cmp
test
adc
mov
jecxz
mov
jo
add
push
or
cmp
add
fs
daa
jae
std
movsl
shrb
inc
das
sub
jno
outsl
xchg
jo
shll
xor
sub
and
mov
out
cwtl
adc
ficompl
sub
dec
jecxz
sarb
cltd
ret
adc
mov
dec
div
sbb
pusha
dec
in
ret
cmp
lods
push
pop
cld
xchg
rcll
cmpsb
inc
mov
mov
lds
push
iret
or
mov
imul
inc
cmc
cld
ljmp
lea
arpl
mov
daa
les
cltd
fbld
and
adcl
xor
mov
pushf
pop
nop
sbb
cmpl
push
repz
aas
mov
mov
dec
push
cmc
nop
jne
popf
pushf
sbb
cmp
insl
push
mov
scas
or
push
lods
and
mov
lods
inc
out
in
jae
or
mov
add
xchg
mov
gs
inc
mov
jmp
xchg
sub
mov
cmp
push
xchg
addl
mov
xor
in
fstp
les
mov
and
jns
cmc
mov
sarb
cmpsb
out
cld
push
js
repz
sbb
mov
mov
mov
dec
jmp
aas
clc
sti
lcall
mov
pop
out
xlat
fsubr
inc
pop
lahf
pop
add
push
mov
add
hlt
sub
shlb
clc
xchg
pop
inc
push
jg
cmp
mov
mov
and
adc
add
push
insl
push
xor
aam
jmp
mov
and
cld
cmp
and
xor
es
ss
mov
mov
das
mov
lahf
inc
push
or
dec
sbb
mov
stc
jp
or
lahf
leave
inc
jge
sbb
sbb
cmp
imul
push
enter
xchg
push
cwtl
fcomip
pop
popf
or
xor
mov
gs
adc
mov
inc
sub
sub
pop
scas
fisttpll
scas
and
lock
xor
mov
out
jmp
in
aad
dec
imul
dec
aad
dec
pop
inc
dec
mov
pop
push
scas
test
xchg
add
xchg
mov
lods
sbb
std
ja
xor
popf
sub
fdivrl
rcrl
hlt
jecxz
and
mov
lock
mov
cmpsb
rorl
adc
loop
push
lcall
jo
dec
xor
sub
sub
inc
cmp
pop
cwtl
sti
iret
push
std
cltd
sbb
lret
adc
test
push
mov
lea
sbb
std
lret
jecxz
or
jne
stos
jns
xor
mov
je
jle
sbb
add
push
es
and
std
mov
jnp
mov
test
jns
or
mov
in
mov
out
xchg
call
out
gs
insl
aam
lock
in
lret
jno
push
push
push
cwtl
xchg
cmp
aas
cmp
and
and
gs
icebp
jecxz
mov
and
rorl
xchg
inc
jbe
sbb
cmp
shlb
mul
cmp
jns
pop
adcl
add
mov
jno
fistps
push
hlt
mov
push
lods
out
mov
or
xor
and
fbld
cld
out
sub
add
mov
pop
mov
add
scas
adc
arpl
ss
out
shlb
pop
add
movsl
xchg
nop
mov
inc
mov
out
mull
add
add
mov
nop
cmpsb
jb
xchg
pop
or
dec
lods
pushf
orl
mov
shll
popa
cmpsb
pop
pop
mov
dec
in
xchg
repz
dec
cmp
gs
pop
inc
xchg
scas
mov
or
arpl
jns
rcll
ss
int3
mov
std
sahf
les
ljmp
dec
pop
inc
cmp
xchg
test
jmp
out
daa
sub
ss
push
test
inc
into
aad
in
inc
mov
out
enter
sbb
sti
imul
int
mov
sbb
test
loop
sbb
and
test
lret
ret
into
push
mov
sbb
test
mov
adc
or
movsl
add
mov
sbb
pop
xchg
cli
xlat
mov
test
jmp
sbb
stos
mov
mov
xchg
add
pop
ja
scas
pop
xchg
and
and
pop
divb
mov
bound
fidivl
mov
and
dec
pop
add
push
pop
pop
scas
test
add
decb
addr16
inc
push
xchg
imul
mov
adc
mov
push
fstpl
aad
addr16
ficoms
push
jb
xor
clc
push
ret
repz
pop
add
arpl
adc
subb
xchg
roll
and
xorl
pop
fwait
dec
aam
test
lea
pop
lea
icebp
mov
scas
pop
jno
data16
lcall
or
popa
jmp
je
mov
pop
mov
mov
in
in
cmp
xchg
push
cmpsl
push
pop
pop
adc
fcompl
pop
sub
pop
hlt
icebp
lea
inc
popa
lahf
xchg
arpl
and
push
insl
scas
push
sbb
das
sub
or
lods
jne
push
or
dec
insb
mulb
jo
xor
sbbb
sbb
std
xchg
xchg
fsin
daa
dec
jmp
adc
inc
rcl
lods
pushf
adc
lret
xor
dec
sub
data16
inc
or
jnp
xor
jecxz
cmp
rorb
adc
pop
add
adc
ja
nop
ret
scas
loope
clc
or
in
dec
in
cmc
lods
ret
or
push
fnstcw
in
inc
testl
lea
out
fxch
in
inc
sbb
shll
pop
call
into
hlt
mov
js
pop
js
rclb
pop
mov
jl
jo
dec
inc
sub
mov
mov
adc
push
bound
add
jns
loop
ficoms
cmp
mov
addr16
je
cmp
int
fwait
pop
add
je
mov
push
pop
fcompl
sarl
pop
jecxz
sbb
sub
cmp
andl
push
call
push
mov
pop
enter
lock
sbb
dec
add
loop
dec
int
ret
das
cs
sub
out
mov
mov
pop
out
mov
adcl
add
add
inc
in
cmp
mov
dec
adc
shll
fstpl
push
push
and
fistps
inc
and
push
mov
inc
mov
add
sbb
in
mov
jmp
sbb
popf
loopne
adc
cmp
cmp
adc
mov
roll
jmp
cld
push
test
xchg
je
xchg
cmp
fbstp
sahf
in
inc
push
and
int3
in
ss
pop
lods
repz
mov
adc
ljmp
sub
ret
int
jge
insb
aaa
idivl
pop
mov
in
and
popa
inc
nop
sub
roll
and
add
dec
daa
and
xchg
mov
mov
pushf
and
sbb
lods
in
sub
iret
fcmovnbe
mov
xchg
sub
ret
xor
or
add
cwtl
sahf
lods
xchg
test
scas
sbb
loopne
xchg
mov
imul
push
xlat
jmp
std
frstor
sbb
inc
mov
popf
adc
icebp
inc
inc
inc
incb
inc
mov
adcb
js
lcall
mov
mov
cmpsl
and
ret
inc
enter
xor
shrb
pop
rol
pop
jns
icebp
mov
fiaddl
ficoml
lret
mov
sbb
outsb
inc
in
ret
add
mov
shr
or
lcall
push
movsb
adc
loopne
or
cltd
aad
sub
dec
inc
add
cmp
sbb
popa
addr16
mov
adc
je
and
cmpsl
test
ljmp
add
mov
ret
xchg
repnz
lods
xor
pop
push
xchg
dec
xor
inc
repz
outsb
xor
push
xchg
lcall
insb
jmp
and
jb
leave
dec
dec
cmp
hlt
je
cwtl
pop
mov
lods
xchg
add
loope
loope
imul
push
xor
cmp
jb
into
xorl
sbb
hlt
lods
push
mov
xchg
movsb
mov
xor
mov
loopne
pop
pop
and
adc
test
jns
jns
push
dec
scas
movsb
and
push
ret
pop
incl
pop
dec
xchg
lret
shlb
out
popa
call
mov
or
inc
mov
out
push
pop
pop
and
sub
popa
add
xor
out
inc
in
sahf
or
sub
insl
sub
int3
repz
jle
adc
cmp
js
mov
fucomi
test
push
cmc
jp
and
adc
aas
jno
sbb
mov
mov
dec
dec
sub
int3
popw
sub
add
das
lret
sbb
mulb
jo
lea
jecxz
loope
push
mov
ret
jno
cmove
clc
fdivrl
xchg
adc
scas
fcmovnbe
rcrl
xor
sbb
in
mov
add
roll
into
ss
mov
sub
xchg
mov
dec
and
dec
aaa
rol
dec
and
xchg
and
mov
fstpt
or
push
pop
jne
shll
cmp
pop
cmovbe
jmp
clc
xchg
js
in
lcall
popf
xchg
fwait
hlt
cmp
cmc
xchg
cli
cmp
test
imulb
xchg
sbb
ret
mov
jle
cmp
shrl
insl
movsb
insl
jge
xchg
inc
or
test
push
nop
push
add
cmp
push
pop
lret
push
add
mov
pop
icebp
xor
int3
pushf
je
mov
int
sahf
cld
add
inc
inc
sub
testl
cmpsb
push
arpl
mov
in
jge
lods
push
shl
jge
jae
dec
cltd
stos
xchg
sub
mov
btsl
sbb
inc
in
sub
push
testl
mov
aaa
xorb
inc
pop
push
sbb
push
scas
je
inc
shl
push
jl
shll
mov
sub
fwait
loop
add
mov
push
test
test
mov
cltd
add
pushf
ret
pop
cld
xor
testl
xor
lods
mov
mov
xor
push
add
and
leave
pop
dec
inc
dec
xchg
mov
andb
cmpsb
fwait
addr16
xor
in
xchg
mov
popa
and
test
or
sbb
xor
js
popf
xchg
jnp
adcb
ss
fs
push
jp
addr16
sbb
cmp
push
xchg
flds
xchg
pop
aaa
loopne
int3
sbb
push
lea
add
push
or
aas
sub
bound
es
mov
mov
inc
lret
mov
mov
mov
icebp
imul
cmp
in
pushf
jp
mov
sbb
jbe
pop
out
imul
push
pop
mov
sub
mov
es
aaa
int3
mov
inc
addr16
push
jge
lods
sbb
leave
shrl
mov
div
pop
ja
mov
dec
mov
outsb
mov
xor
out
xlat
and
lahf
pop
lods
cmp
cmp
call
sbb
jecxz
inc
popa
stos
hlt
in
sbb
sbbb
lea
add
jns
lret
mov
repnz
jbe
adc
inc
xchg
sub
xchg
inc
cmpsl
and
pop
inc
add
push
imul
mov
cmpsb
out
es
outsb
mov
mov
out
pop
inc
mov
fcoms
cmpsl
inc
sub
js
stos
dec
incl
stos
ret
dec
test
xchg
mov
dec
sbb
add
jnp
mov
mov
ds
sti
push
dec
fwait
dec
sub
mov
loopne
xchg
jg
push
addr16
loope
cltd
sbb
bound
add
sbb
cli
mov
std
inc
jb
rolb
cmp
fistpll
push
mov
adc
loop
bound
or
adc
mov
js
test
in
insl
shll
cmpsl
cmpsb
dec
stos
xchg
or
int
adc
mov
sbb
into
jle
and
add
xor
inc
mov
mov
stc
push
stos
cmpsb
popl
outsb
sbb
jg
and
sbb
aam
js
dec
mov
lods
fcmovu
js
cmp
movsl
add
aaa
cmp
test
pop
mov
test
sbb
jae,pn
gs
fs
jmp
dec
lea
jmp
jg
sub
mov
incb
mov
test
xor
mov
add
arpl
test
inc
jecxz
shrb
or
push
test
jle
mov
nop
lret
dec
mov
cmpsb
pop
pop
mov
inc
jno
int
out
jo
dec
aas
out
or
mov
mov
inc
sbb
mov
pop
add
mov
pop
fsubs
call
lahf
inc
fisttps
stc
insl
int
mov
mov
scas
add
xor
adc
or
push
pop
clc
pop
lds
sbb
cltd
push
insl
mov
lret
and
xor
lret
leave
outsb
mov
test
add
sbb
cmp
xchg
add
or
and
pop
daa
pusha
roll
out
dec
add
pop
mov
stos
xchg
push
out
cmp
repnz
mov
jo
jo
bound
pusha
mov
push
push
jo
xlat
outsb
cmp
pop
mov
jne
notl
pop
test
and
inc
loopne
inc
sbb
xchg
lcall
test
xchg
rolb
scas
lea
xchg
or
mov
scas
dec
mov
roll
lret
pusha
insb
push
arpl
out
popa
decl
andl
std
adc
nop
int3
loope
jbe
xor
xchg
cmp
mov
fnstenv
add
cmp
cltd
cmp
jnp
push
mov
xchg
shrl
inc
push
cmp
dec
dec
imul
mov
dec
jmp
adc
push
mov
adc
lds
xlat
rorb
subl
jecxz
mov
cmp
mov
sub
cmp
mov
adc
repnz
into
adc
mov
cmp
jecxz
jmp
jno
mov
mov
xchg
loope
call
jmp
jl
xchg
mov
xchg
cmc
out
jae
xor
and
push
scas
xlat
cmp
xor
and
xchg
inc
jmp
mov
add
sub
andb
inc
into
jo
sarl
addl
xchg
shlb
lret
xor
mov
xchg
inc
jo
shll
or
mov
shll
xor
mov
lods
pop
adc
xlat
sbb
daa
insb
js
bound
and
and
hlt
leave
sub
rorb
sbb
or
out
and
mov
orb
or
sub
jl
ja
pop
sti
arpl
mul
or
jmp
in
popa
xorb
mov
dec
fisttpll
jge
xchg
cmp
dec
andb
test
int3
rcll
iret
hlt
and
pop
dec
ja
pushf
adc
call
sub
in
mov
cmp
cltd
jo
rclb
cld
lods
push
mov
pusha
mov
in
jle
pushf
jb
mov
inc
rclb
ja
inc
mov
adc
push
push
jg
cmpsb
sub
jne
addb
adc
mov
ljmp
push
adc
jle
repnz
das
push
add
fldenv
scas
jge
std
push
lcall
dec
std
xor
push
repnz
cmp
aad
xchg
cli
or
pop
and
jae
loop
popa
icebp
adcl
mov
pop
out
add
out
adc
jge
or
icebp
pop
in
shll
xlat
jg
into
ret
popa
push
pop
iret
lret
sub
cli
ret
std
jl
lods
test
jno
hlt
scas
pushf
push
add
rcll
mov
lea
pop
aad
ja
inc
ftst
mov
jl
pop
imul
jmp
fstpt
xchg
inc
mov
inc
push
test
out
fmuls
jmp
mov
pop
pop
mov
es
xchg
push
push
negb
adc
fisttpll
mov
cmpsl
adc
roll
adc
jp
and
pop
fbstp
pop
addb
jae
jns
nop
outsl
mov
movsb
cmp
std
aam
jg
iret
xchg
ljmp
xor
xchg
xchg
add
dec
into
in
push
pusha
mov
mov
mov
cmp
xchg
jns
out
int3
mov
inc
xchg
sub
adc
dec
cmp
cmp
jecxz
adc
ds
test
fdivl
xchg
jno
imul
mov
hlt
add
lret
pop
inc
push
cwtl
cmp
xchg
inc
xlat
test
xor
imul
xchg
loop
inc
inc
rcrl
jne
fcomps
sub
stc
sahf
movsb
lods
jbe
pop
mov
sbb
jl
jecxz
enter
stos
int
push
fnstsw
ret
fldcw
mov
lods
pop
mov
mov
dec
xlat
dec
int3
jns
lahf
mov
adcl
and
aas
adc
data16
movsb
jbe
clc
out
xorl
ss
repnz
daa
popf
int3
mov
and
rorl
repnz
push
fcom
rcll
scas
lret
hlt
cs
cmpsb
into
stc
lahf
add
sub
cmp
push
test
int
jne
push
cmc
cwtl
mov
lock
mov
insl
sbb
xor
xor
gs
fisubs
fwait
jl
mov
xchg
and
rolb
dec
test
stos
sbb
mov
sub
in
cli
pop
iret
movsl
sub
cwtl
idiv
rcl
cld
mov
xchg
pushf
int
xchg
mov
shll
sbb
cmpsb
rcrb
scas
movsl
pop
sub
mov
data16
arpl
std
hlt
rcrb
lods
cmp
loopne
xchg
push
lock
ja
inc
sbb
bound
data16
pop
sti
mov
jbe
pop
pop
or
rol
jne
repnz
add
mov
adc
mov
insb
dec
pop
aad
scas
lds
in
faddl
or
xor
cltd
loope
push
cltd
or
push
cs
dec
aam
fs
mov
add
adc
xor
mov
dec
xchg
lcall
pop
xor
out
cmpl
inc
xor
or
je
xchg
jg
aaa
cmp
rclb
mov
lock
sti
inc
or
pop
push
rorl
test
mov
insl
mov
jecxz
push
sub
push
cmp
xor
sahf
inc
scas
incl
xchg
sub
adc
mov
outsb
andb
aam
cltd
stos
jns
int
xchg
ljmp
repnz
mov
popa
addl
out
dec
dec
sbb
std
add
out
or
push
xchg
inc
call
jo
icebp
imul
arpl
test
adc
ret
aam
adc
jns
bnd
stos
fwait
xor
push
ja
dec
mov
or
sub
mov
pop
data16
jp
popf
into
sahf
mov
je
lock
je
mov
fistl
orl
nop
xchg
sub
xor
mov
xor
lock
push
fdivr
jg
test
fwait
sti
in
xor
jmp
mul
sbb
test
push
rclb
inc
nop
lock
aas
dec
subl
daa
out
outsl
aad
fwait
mov
cmpsb
cs
mov
pop
mov
fisttpl
std
movsb
outsl
push
mov
add
add
adc
je
mov
xchg
adc
fisttpl
sbb
lock
or
insb
or
dec
push
nop
mov
fistl
popa
sti
dec
in
mov
cmp
sbb
lret
vandnps
repz
flds
imul
push
add
mov
das
mov
mov
xor
xchg
rolb
jne
repz
ret
jne
add
repz
aad
or
ficompl
mov
gs
dec
or
out
enter
dec
leave
mov
push
roll
xchg
icebp
sub
xchg
dec
xchg
test
and
dec
fcmove
leave
getsec
xchg
sub
fsubs
pop
jo
inc
out
dec
and
fcmovnb
mov
push
mov
mov
in
lret
sti
imul
push
xor
cs
cmpsb
push
sbb
popf
fldcw
pop
push
arpl
mov
or
cmc
mov
adc
adc
push
add
popf
movsb
in
push
out
mov
mov
enter
das
sbb
paddsw
test
cli
popf
xchg
sarl
jl
pushf
lret
in
inc
xlat
sbb
aad
and
or
loope
fmul
out
shrb
xchg
arpl
je
fucomp
push
out
movsb
cltd
sti
cmp
and
cmc
es
test
mov
scas
mov
xlat
movsl
push
fwait
sbb
rcr
sbbl
cmpsl
mov
cwtl
loope
lea
lea
fcoml
mov
jle
shll
push
dec
orl
xchg
ds
push
jmp
sub
dec
dec
out
xchg
cltd
ficompl
push
es
sub
xor
ds
pop
jle
aad
pop
and
jmp
mov
call
sbb
cmc
dec
jb
or
aas
cltd
in
cmp
je
pushf
dec
andb
xor
inc
dec
inc
inc
mov
cmp
ds
cltd
test
mov
mov
rcrb
xor
or
or
xchg
sbb
ja
lcall
mov
or
push
leave
pop
int3
xor
xor
or
cmp
jg
adc
xchg
ja
int3
lds
jno
pop
sub
cmp
jno
dec
mov
add
jp
ret
fstp
jg
cmp
nop
mov
sti
ljmp
loope
nop
insl
loop
jle
dec
pop
xchg
dec
imul
sti
sub
xchg
cmp
das
mov
shrb
rol
cmc
pop
lcall
push
test
pop
in
and
mov
mov
sbb
inc
xchg
stc
test
cli
sbb
and
and
loope
out
or
nop
imul
cmp
mov
jmp
das
mov
sub
sbb
sub
test
shrb
aad
mov
cld
inc
inc
mov
test
or
jae
xchg
sub
xchg
aam
js
push
or
xchg
jae
xlat
stos
dec
dec
in
push
les
xchg
dec
xchg
aaa
xchg
gs
inc
and
scas
push
add
jge
popa
pop
xchg
aas
mov
jg
repz
and
cwtl
sub
aaa
and
push
js
sub
push
mov
pop
mov
pusha
jnp,pt
add
or
cmpsl
clc
test
pop
add
mov
mov
dec
call
and
test
test
scas
cmpsl
lods
outsb
add
pop
movsb
jmp
lcall
dec
cmp
clc
jns
decl
aaa
mov
dec
lods
and
adc
sbb
push
and
pop
pop
mov
or
pop
sbb
push
out
outsl
inc
dec
insb
and
xor
pop
insl
mov
call
nop
lahf
dec
in
cmp
cmp
cmp
rolb
aas
aas
test
fucomp
out
test
jbe
cmp
xchg
and
clc
pop
inc
enter
clc
stos
and
clc
mov
xchg
push
mov
data16
sbb
scas
movb
cmp
push
popa
mov
shll
jp
popa
ret
sub
imull
fwait
add
jnp
lret
mov
ss
mov
lods
lods
in
rcr
or
pop
repz
xchg
arpl
sub
sti
sbb
in
inc
hlt
stos
or
and
lret
mov
jecxz
xor
fidivrl
sbb
adc
xlat
hlt
into
xchg
fsub
pop
mov
pop
repz
cmp
pop
xchg
push
mov
lock
pop
add
jb
cmc
adc
jne
fs
or
ja
mov
lds
in
inc
mov
jno
ljmp
pop
addr16
std
jle
xchg
psllw
stos
inc
lock
jl
xlat
jg
outsb
pop
inc
push
fldenv
fstps
cmc
lahf
out
inc
popf
mov
incb
cmp
out
push
inc
leave
push
jns
push
idivb
dec
sub
andb
rol
push
mov
jl
pop
and
inc
mov
xor
push
sbb
or
jp
mov
mov
pop
clc
push
jo
addr16
sarb
sbb
cwtl
adc
xor
jmp
push
cld
test
repnz
mov
push
xchg
std
push
cs
mov
xchg
mov
stc
lret
inc
dec
fnstcw
push
jp
sbb
cli
pop
iret
fs
jne
cmp
dec
repz
jmp
and
ret
movhps
xchg
in
pushf
std
enter
pop
mov
lea
push
jne
cmp
cmp
pop
mov
pop
xchg
lods
aas
lods
fdivs
and
push
lods
dec
mov
ljmp
in
ficoml
clc
aaa
lock
bound
mov
pop
fmull
cwtl
xor
insl
mov
int
cli
addb
sub
lret
dec
jp
sbb
data16
sub
xor
jae
lods
xlat
xor
cmp
jg
pop
sub
sbb
adc
cmp
hlt
stos
add
jg
sbb
lds
in
faddp
mov
dec
sub
es
inc
fisubl
inc
sub
add
mov
clc
push
xchg
adc
lds
sbb
pop
and
stos
pushf
mov
je
cmp
int3
mov
arpl
cmp
adc
pop
out
movsb
test
cltd
imul
add
popf
fdivrp
xor
fsubr
cmp
mov
cmp
mov
cwtl
repz
mov
sub
push
ss
test
pop
xchg
or
push
add
xchg
arpl
lea
into
insl
push
stc
in
xchg
cmp
bound
push
in
stc
pusha
test
mov
call
push
cmpsb
aas
subl
sbb
js
dec
jno
cmp
lock
inc
dec
mov
jge
add
inc
daa
popf
pop
popa
add
xchg
mov
lret
inc
aam
test
pop
mov
dec
stos
jbe
gs
mov
popf
fwait
ror
pop
sbb
cmpsb
in
adc
jne
jnp
popf
cmp
pushf
popa
xchg
xor
ret
sbb
push
mov
mov
mov
cmc
ret
arpl
inc
lock
add
xchg
dec
dec
mov
push
inc
push
mov
sub
movsb
lds
lods
aam
je
aaa
lahf
dec
in
jmp
ljmp
sbb
mov
cwtl
push
call
adc
jae
rcll
dec
mov
mul
scas
imul
jmp
mov
pop
pushf
or
jne
insl
outsl
sahf
jl
sub
popf
and
lahf
inc
lcall
aaa
sub
xor
ret
test
inc
mov
leave
mov
add
inc
js
xlat
mov
subl
push
je
outsb
nop
cmp
jbe
mov
nop
out
nop
jp
popa
rorl
dec
jge
xor
xor
faddp
lods
inc
or
or
adc
ss
lret
mov
in
push
mov
mov
cmp
cvtps2pi
mov
dec
or
ret
xor
adc
iret
add
add
repz
scas
xor
and
push
or
mov
or
mov
loopne
pop
popf
cmp
sub
rorb
repnz
and
cmp
xchg
push
cmpsl
ljmp
pop
dec
popa
negb
xchg
popf
andl
xchg
inc
fistps
mov
shll
pop
or
xor
mov
cmp
popa
push
adc
add
jns
jg
faddl
mov
out
in
sti
adc
insl
jae
icebp
imul
into
xchg
push
jno
inc
inc
lea
xchg
outsb
subw
dec
sbb
std
scas
mov
test
jecxz
sub
and
lods
add
jmp
imul
adc
daa
enter
push
daa
repz
jnp
into
test
popf
dec
xor
out
cmp
pop
icebp
push
mov
cltd
xchg
push
scas
fisubs
push
sub
imul
and
ss
push
pop
fldenv
jbe
ret
sahf
repnz
cmc
sub
pop
mov
add
hlt
cmp
mov
cmpsl
and
ret
xor
fildl
jbe
shl
iret
inc
push
jne
insl
les
mov
jg
adc
sbb
dec
lret
dec
pop
jp
mov
cmpb
adc
push
jecxz
clc
mov
xor
and
lahf
test
jge
mov
dec
daa
jle
pop
je
lods
push
cmp
sbb
mov
mov
jae
xchg
pop
xor
dec
cmc
je
and
pusha
jp
sbb
pop
add
cli
aas
sbbb
dec
pushf
mov
or
dec
andb
xchg
add
inc
mov
jl
rorl
stos
call
sbb
push
scas
cmp
lods
rolb
xor
les
in
roll
cmp
jl
mov
push
adc
jg
push
xor
call
mov
aam
xor
scas
in
xchg
movsl
jmp
cld
out
mov
daa
pop
dec
pop
jae
dec
cmp
dec
dec
aas
push
scas
out
cld
ss
or
sbb
fbld
push
inc
lret
cli
movsb
inc
xchg
xor
and
push
roll
sub
ja
mov
adc
push
cmpsb
sbb
mov
popf
mov
lods
aad
sub
test
jno
scas
jnp
inc
test
jae
push
jecxz
fdivrp
dec
pop
mov
push
xor
insb
in
addl
dec
mov
jecxz
mov
pusha
rcll
loop
inc
sbb
dec
and
sub
mov
mov
mov
sbb
inc
imul
test
fst
pop
cs
pmulhuw
sbb
jle
sti
loop
adc
inc
xor
pop
pop
xchg
or
and
sbb
add
add
sbb
add
data16
jns
sub
dec
lods
lret
test
popf
test
xor
out
pop
inc
rcrl
test
jp
mov
movsb
mov
cmp
lods
add
sbbl
push
dec
insl
mov
outsb
inc
jno
shl
insb
sub
add
jnp
in
leave
jle
fst
lret
cmp
orb
jns
dec
arpl
push
push
mov
je
sub
mov
inc
inc
loop
dec
inc
imul
add
fistps
jo
push
mov
xchg
in
outsl
pop
adc
rcrl
mov
cs
fcompl
cmp
pop
imul
loop
xor
out
dec
cmp
inc
gs
scas
out
dec
mov
aas
out
add
popl
rcrb
fwait
mov
adc
jns
pop
lds
dec
jp
cmpsl
push
rcrl
leave
xlat
or
les
push
sbb
ss
pop
and
and
mov
mov
lcall
repnz
inc
enter
int3
push
push
jge
jecxz
test
push
inc
adc
mov
fptan
pop
dec
and
pop
dec
cmp
mov
scas
pop
pop
dec
cmp
ss
int
and
xchg
js
push
cmp
or
mov
rcl
add
jns
fldcw
xlat
addb
or
jmp
mov
push
jae
push
push
movsb
das
sti
or
popl
dec
mov
adc
cli
sbb
imul
outsl
call
cwtl
int
cwtl
sbb
faddp
cld
ffree
dec
dec
lods
push
pop
jns
bound
outsl
pusha
scas
cmp
jmp
sub
or
dec
push
imul
shlb
xchg
dec
loopne
call
mov
adc
cmpsb
mov
test
out
xchg
push
or
add
stos
and
lds
pop
jnp
stos
jl
ficompl
lods
push
push
insl
test
cli
insl
imul
clc
mov
add
push
fprem
fadds
lea
negb
or
sbb
cltd
out
sbb
jae
std
daa
push
fwait
das
into
insb
iret
out
push
mov
inc
enter
mov
nop
dec
aaa
sbb
push
es
cltd
std
xor
sub
pop
push
adc
or
mov
inc
and
or
sbb
inc
movsl
lock
pop
out
mov
inc
movsb
loope
mov
test
out
ds
push
fnsave
jle
popa
push
std
and
in
cmp
test
jo
or
aam
mov
mov
push
jne
icebp
loope
inc
xchg
loopne
fs
and
mov
dec
and
fdivs
and
xor
jl
test
or
pushf
or
add
pop
clc
sbbb
fistpll
mov
lahf
stos
push
push
mov
and
sbb
stc
xchg
adc
pop
jnp
lahf
fcomps
xor
mov
mov
into
inc
repnz
ljmp
imul
mov
jp
pop
cmp
mov
loope
les
sub
sbb
repnz
push
pusha
push
sbb
pusha
es
or
pusha
and
lods
cmp
es
jae
rcll
aaa
jp
mov
lret
jg
or
lahf
shlb
or
loope
jo
add
popf
and
sub
out
push
mov
lret
sbb
xchg
int3
faddl
cmp
adc
mov
push
aaa
dec
push
cli
mov
icebp
cmp
in
sbb
hlt
loope
xor
sbbb
xchg
cmp
xor
xchg
xor
cmpsb
add
cld
sbb
or
andl
pop
xchg
jmp
mov
push
loopne
repz
mov
adc
cs
mov
in
hlt
add
ret
into
cld
mov
sarl
xchg
test
cmp
ss
mov
cld
jg
mov
dec
mov
add
mov
scas
push
outsb
xchg
outsl
mov
cld
pop
inc
cmpsl
das
je
push
movl
mov
fcompl
sub
out
in
push
add
push
or
xchg
das
movsl
xlat
sbb
aad
add
mov
icebp
jle
mov
xlat
or
cmp
sbb
cmp
aad
test
mov
daa
aas
and
inc
hlt
pop
clc
cs
lds
push
leave
aad
pop
icebp
outsb
pop
xchg
mov
jns
movsb
push
jge
std
scas
ja
mov
inc
pop
bound
mov
mov
cmpsb
xchg
stos
mov
cmc
jbe
sbb
push
arpl
es
out
aam
mov
fwait
stc
push
xchg
xchg
xchg
xor
jb
loopne
mov
push
dec
cs
scas
xor
cmp
xchg
imul
push
fwait
insb
pusha
jecxz
sub
sub
ret
jp
faddl
jno
popf
dec
jnp
push
sbb
jl
xchg
stc
decb
add
xchg
imul
push
inc
rolb
push
mov
int3
jnp
add
sbb
mov
mov
mov
cs
subb
push
es
push
mov
jae
pop
sbb
jl
mov
jle
aaa
popa
lock
lret
aam
shlb
cmpsb
js
xchg
mov
test
mov
in
out
jge
out
stos
sbb
fldcw
int
jo
mov
pop
sbb
mov
jle
or
rcl
fwait
xor
push
leave
call
mov
js
popa
push
mov
pop
inc
xchg
inc
cmp
loope
sbb
adc
jo
jg
pop
fwait
adc
sbb
ret
dec
rorb
or
mov
leave
inc
or
movsb
sbb
and
sub
popf
sub
lahf
adc
pop
faddl
int3
stos
sub
ds
stos
jo
mov
out
mov
dec
dec
insb
ljmp
xchg
cmpsl
dec
xchg
outsb
xchg
js
mov
jb
aam
imul
jnp
stos
notl
pop
push
adc
mov
and
sbb
in
repnz
fnsave
sbbb
mov
loope
sbb
sbb
and
xchg
sub
or
mov
cmp
push
imul
test
loopne
dec
imul
lods
adc
bnd
in
loopne
repnz
fstl
inc
xor
adc
jbe
pusha
lods
inc
in
enter
cld
dec
cmpsb
and
and
add
push
xor
jns
mov
mov
jns
jge
bound
push
jbe
into
jg
adc
inc
xor
call
movsb
out
inc
ret
lods
gs
in
testb
jecxz
push
jae
mov
jle
and
lods
mov
jo
std
cli
sbb
and
jge,pt
fistl
or
subb
sbb
js
sar
sub
in
adc
leave
imul
mov
adc
fidivl
xchg
decl
adc
jl
adc
mov
fs
loop
or
mov
sub
xor
lock
mov
add
sub
repz
mov
push
arpl
test
pop
lods
mov
push
mov
movsl
pop
pop
aad
sub
add
hlt
pop
stos
mov
inc
mov
xchg
out
sub
in
add
das
sbbl
sbb
sub
adc
shlb
push
ja
insb
ds
pop
push
repz
xchg
imul
shr
stos
add
pop
js
repnz
xchg
add
leave
xchg
in
faddp
arpl
shrl
pop
and
xchg
fnstsw
lock
lret
mov
mov
jmp
push
lea
adc
popa
jnp
ret
mov
add
out
mov
into
lcall
mov
dec
and
and
and
mov
mov
gs
adc
or
adc
pop
in
icebp
xchg
insb
fmull
mov
jno
mov
sub
inc
mov
pop
dec
mov
inc
daa
movntq
jne
fidivrl
out
jbe
xor
xchg
rolb
out
inc
movsl
les
pop
sahf
jge
adc
sahf
in
xchg
mov
push
sbb
mov
mov
inc
mov
in
and
dec
fisubl
das
dec
fisubrl
pop
push
daa
add
aad
mov
lahf
dec
lock
test
xor
icebp
cmp
aaa
push
pop
das
inc
mov
in
add
xor
mov
mov
or
jns
and
in
inc
cmp
outsb
sbb
repz
aas
in
data16
lret
dec
rolb
or
addl
mov
cs
lods
repz
adc
cmp
dec
sbb
es
jge
fs
or
xchg
adc
mov
mov
clc
and
sub
sbb
push
mov
daa
or
jle
pop
outsb
repz
sbb
jmp
not
inc
mov
call
movsb
int
fmuls
sub
pop
fwait
push
imul
dec
scas
cmp
faddp
and
pop
bound
add
cmp
hlt
addr16
add
mov
clc
cmc
mov
mov
ficoml
aas
dec
ss
rolb
data16
int3
adc
push
pop
jo
cwtl
adc
push
jge
xor
inc
ret
jg
push
pop
dec
sub
sti
and
jg
ss
negl
push
or
sbb
je
insl
cltd
notb
outsb
and
mov
mov
shl
movsb
movsb
jle
xchg
in
lahf
sub
mov
pop
lahf
dec
cmp
or
leave
sub
jge
pushf
jae
dec
push
inc
jns
push
mov
dec
xor
leave
or
nop
movsl
jg
jp
int3
inc
insb
ja
pusha
inc
and
push
icebp
imul
icebp
mov
loope
sahf
add
cmp
cwtl
dec
movsb
mov
addl
dec
mov
addr16
xor
inc
es
lds
stos
out
test
repnz
and
jns
cmp
sahf
mov
sbb
add
add
fmull
jns
ret
push
xor
and
insl
push
fcoml
jmp
movsl
lods
cmp
mov
push
dec
notb
xchg
lock
pop
sbb
jp
aad
inc
nop
mov
sub
and
cmp
add
xor
dec
das
jp
scas
push
mov
add
add
imul
roll
jnp
xchg
push
jmp
insb
cmp
sbb
arpl
inc
push
xor
xchg
inc
test
mov
push
fcmovnbe
lock
pop
js
inc
adc
sub
fists
pop
sti
add
jb
or
cli
test
les
dec
lock
cmc
rorl
push
outsl
rcr
inc
sbb
outsl
sub
aas
je
xor
push
test
cwtl
xchg
outsl
sbb
hlt
pop
pushf
mov
js
inc
test
gs
lods
aad
inc
xchg
enter
cli
pop
or
xor
lock
or
imul
nop
mov
fisubrs
pop
jmp
mov
xchg
jae
popf
je
arpl
xchg
ljmp
pop
ret
inc
cmpsb
add
pop
fnstsw
sti
dec
and
cwtl
outsb
ret
jl
jbe
shr
iret
pop
je
subl
shrl
mov
cmp
dec
pop
add
pop
mov
in
add
mov
and
sbb
push
sbb
push
mov
fistps
sub
push
fisttpll
xlat
xchg
cmpsb
mov
and
dec
testb
pop
lea
mov
adc
cmpsb
icebp
les
pusha
xor
push
cmp
popa
dec
clc
jb
lcall
sbb
sub
dec
jnp
pop
sub
add
outsl
jo
mov
fistps
inc
cltd
jp
pop
jmp
xchg
es
xchg
enter
outsb
stos
cld
xchg
pop
pop
push
mov
jg
pop
jno
mov
in
push
popf
dec
sub
or
and
test
jb
scas
jnp
inc
sbb
mov
mov
mov
arpl
aam
std
jbe
pop
push
xor
shll
xlat
mov
decb
xchg
add
and
mov
jge
push
inc
mov
leave
repnz
or
mov
pop
lcall
mov
addb
int
sbb
sbb
fistl
incb
andb
cmp
in
sub
dec
sub
jle
xchg
movsw
cmp
data16
nop
repz
sub
lahf
and
jmp
xchg
xor
mov
xchg
cmp
sub
mov
xchg
mov
dec
movsb
jnp
adc
shlb
and
movsb
lock
fcoms
push
int3
mov
cmp
xchg
sub
lret
mov
cmp
shl
jmp
mov
es
or
daa
loop
inc
xor
dec
pop
cmp
in
mov
xchg
inc
int
rcrb
sbb
movsb
out
mov
scas
notb
nop
xchg
mov
and
jg
xor
push
rcl
cwtl
inc
jp
inc
scas
popf
fldl
fldl
inc
adc
cmpb
rol
or
xchg
mov
nop
lret
out
mov
ret
pop
lods
or
push
jno
pushf
ds
cmpsl
add
jmp
aam
mov
mov
nop
mov
hlt
mov
insl
jbe
cmp
in
push
adc
sbb
test
add
pop
push
stc
hlt
leave
movsb
scas
mov
add
adc
subb
add
jns
lret
or
jecxz
and
pop
xchg
sub
xor
faddl
mov
inc
pop
rcrl
xchg
negl
pop
xor
aas
ds
shl
fadds
out
inc
adc
inc
dec
cli
jmp
dec
nop
add
jo
adc
sbb
lahf
mov
or
pop
add
jl
cmp
jmp
ljmp
sub
mov
xchg
mov
ret
mov
fsubs
cltd
sub
ds
mov
shrl
int3
call
jg
jbe
pop
dec
mov
push
mov
fldt
sarb
js
imul
pop
pop
cmpl
mov
and
sub
xlat
in
call
fistps
movsl
xor
mov
cli
push
xchg
fdivl
insb
jns
adc
std
pop
scas
adc
pop
ret
jo
clc
cmp
stos
fnsave
jl
pop
xor
jnp
jp
xor
aaa
xlat
fdivr
jbe
stc
out
pushf
sub
lret
xor
push
sub
ret
mov
lds
or
in
clc
es
sbb
lea
jecxz
jns
jb
lret
and
int3
sub
lds
scas
xor
orb
add
test
and
lahf
pushl
jge
lret
sub
mov
sar
bound
inc
xchg
pop
repz
mov
mov
jb
jle
js
aas
xchg
mov
mov
sub
mov
mov
shll
push
pop
sbb
push
mov
xor
sbb
xchg
in
lods
inc
mov
fcomip
xchg
dec
dec
test
xlat
cmp
mov
repnz
cwtl
cwtl
adc
je
or
out
sub
lods
sub
clc
cmpsl
fcompl
mov
sbb
pusha
mov
or
sbb
cmp
and
push
mov
cmpsl
cmp
fs
push
mov
test
in
fsubs
add
or
dec
stc
push
mov
ljmp
xlat
inc
addb
or
sub
test
enter
sti
cmp
in
push
push
push
jmp
and
mov
scas
mov
inc
ds
jns
sub
subb
repz
dec
or
es
lret
enter
gs
sbb
ljmp
jle
out
pop
mov
mov
sbb
sub
imul
or
andb
aas
aaa
addr16
push
es
fwait
stos
mov
shr
adc
mov
lods
rorl
outsl
xchg
stc
fbstp
out
ret
pop
js
scas
hlt
cmp
daa
cmp
mov
cwtl
fucomp
sub
divl
lahf
inc
xor
outsb
cmc
add
push
cmc
add
enter
pop
push
mov
dec
addb
mov
dec
test
adc
rcrb
aad
dec
pop
inc
mov
xor
stos
repnz
shll
cmp
test
xchg
in
sub
xchg
inc
pop
iret
jg
ljmp
nop
data16
mov
add
pop
and
cmp
push
mov
adc
int
jb
jge
push
sbb
adc
pop
inc
flds
icebp
jl
push
bswap
in
inc
orl
lret
mov
pop
jge
pop
push
add
in
enter
sbb
mov
push
mov
cld
in
mov
adc
loope
mov
enter
pushf
mov
filds
xor
and
dec
jb
out
pop
add
xchg
loopne
mov
mov
lock
decb
adc
ss
sub
popf
ret
dec
ds
sbb
outsl
dec
notl
sbb
xchg
push
jno
or
and
dec
add
add
mov
or
in
lods
fildl
mov
jmp
jns
sbb
push
sbb
sahf
add
pushf
addr16
fimuls
xor
fsubr
jle
rcl
xor
pop
mov
sub
pop
jno
es
xor
jecxz
stos
in
push
into
mov
inc
mov
in
fdivrl
mov
jle
cmp
cmpsb
sub
mov
xchg
jno
jl
mov
mov
mov
sbb
cmp
cmpsb
orl
adc
add
in
pop
test
and
cmp
dec
stos
lret
dec
sti
clc
flds
fstpt
lock
push
mov
cmpsl
xchg
lea
pop
mov
and
stos
outsl
fsubl
xchg
pushf
call
mov
loopne
lods
fcomps
mov
stos
push
push
sub
mov
gs
loopne
loop
pop
or
inc
add
and
adc
and
dec
mov
in
sub
pop
shll
push
jnp
test
pusha
es
cmpsl
add
sub
fstpl
jmp
ds
cmp
movsl
mov
cmp
icebp
repz
stos
mov
insl
xlat
jbe
mov
pusha
xchg
xchg
mov
je
mov
int
sbb
fwait
mov
insb
dec
sbb
xor
das
add
scas
cltd
pushf
mov
scas
sbbl
add
mov
repnz
mov
fwait
lods
jo
repnz
decb
sarb
dec
stos
jle
dec
fistps
jge
jb
adc
out
add
or
lock
cld
mov
dec
add
fcoms
add
push
stc
and
push
pop
out
inc
jo
cmp
add
in
jp
or
jno
or
insl
pop
mov
repz
jb
fxch
shr
sub
add
in
sub
sub
stos
cmpsl
add
orb
fwait
pushf
lret
orb
rolb
nop
pop
jmp
int
or
xorl
sub
add
and
and
dec
lods
int3
xchg
dec
inc
jp
mov
adc
push
add
push
repz
clc
repnz
gs
sarl
mov
sbb
orb
mov
cmp
mov
loope
pop
aad
fdivrs
mov
lock
dec
ret
scas
nop
sub
enter
dec
ja
arpl
fsubrl
iret
js
lds
aam
cmp
and
xchg
mov
jno
test
cmp
dec
daa
pop
movsb
push
stc
push
cmp
insb
xor
pop
mov
imul
test
sti
xlat
dec
add
cmp
dec
cmc
out
out
imul
pop
outsl
pop
cld
push
jb
add
xor
mov
cmc
call
pop
cwtl
pop
jns
fwait
loopne
mov
pop
inc
cwtl
ret
push
arpl
add
mov
push
mov
js
orb
or
sbb
cmp
mov
xor
add
fbstp
sub
lock
nop
mov
mov
push
in
icebp
jp
pop
and
sbb
cmp
leave
cmp
stos
stc
sbb
jecxz
rorl
cwtl
out
pushf
in
lret
mov
enter
adc
push
cmp
cld
fsubr
sti
add
mov
test
sub
out
into
pop
or
mov
cmp
int3
mov
adc
ret
pop
inc
add
jo
and
sbb
iret
adc
stos
ss
sub
mov
xor
nop
in
push
je
icebp
xchg
xchg
xchg
push
and
sbb
sub
mov
cltd
jl
fchs
xchg
hlt
add
ret
pusha
popf
inc
cmp
mov
xchg
arpl
fstpt
lret
out
sti
add
lret
xchg
fs
xchg
mov
fs
xor
movsl
cmc
or
pop
insl
outsb
scas
hlt
iret
ret
daa
std
loope
sub
shr
es
andl
adc
mov
loop
inc
bound
std
jne
loopne
jg
dec
push
stc
clc
push
enter
xchg
in
rcr
mov
cmp
pop
sub
enter
shrb
push
and
mov
xor
ja
and
xor
pop
pop
mov
jecxz
sbb
sbb
sub
sub
cmp
loop
fidivl
outsl
nop
cltd
adc
outsl
pop
dec
add
pop
cli
inc
inc
inc
fs
aam
addr16
adc
cmpb
std
cs
sub
fistps
test
pop
jmp
mov
jmp
sbb
icebp
dec
dec
jns
sub
cwtl
out
add
xor
push
in
mov
pop
rolb
cmp
fs
pusha
int3
sub
je
jg
or
fildll
pop
pusha
dec
hlt
sbb
add
xlat
xchg
ss
ja
sti
aaa
in
cli
icebp
dec
push
cmp
ret
jne
in
cmp
mov
ss
mov
in
gs
scas
fwait
push
rolb
mov
dec
jb
pop
pop
jns
pop
lods
xchg
pop
nopl
push
add
push
jg
ds
pop
sbb
mov
adc
push
pop
jb
pop
out
or
fldcw
xor
jae
or
mov
stos
test
push
or
inc
pop
int
cmp
mov
jb
hlt
adc
jmp
jo
sbb
pop
mov
xchg
ss
dec
inc
and
subb
jg
filds
xor
addr16
pop
lds
lret
ret
cs
aaa
xor
in
punpcklwd
push
sbb
outsb
lods
sbb
test
addl
dec
add
cmpl
cmp
push
xor
pop
jae
in
sbb
add
push
int
xor
mov
push
mov
les
sbb
lret
sub
and
arpl
xchg
fcompl
scas
mov
cli
push
xchg
int
sub
xchg
loope
xchg
test
in
xor
insb
scas
lds
subl
pop
or
push
jle
and
clc
outsb
xchg
sbb
mov
cwtl
sarb
sub
test
sti
icebp
insb
xchg
pop
cmp
jno
pop
mov
and
iret
test
xchg
lea
addr16
mov
imul
push
sub
out
nop
arpl
out
idivb
mov
push
pop
nop
lds
jecxz
rclb
add
cwtl
mov
stos
es
scas
pop
jbe
mov
mov
or
cmp
fisttpl
or
mov
std
fs
idivb
push
movq
xor
xchg
outsl
cmp
outsb
bound
lods
ljmp
push
cwtl
ret
sahf
imul
jl
out
fisttpl
jecxz
out
and
insb
xchg
test
jns
lock
cmp
push
mov
jg
aas
jp
out
les
jp
dec
sub
gs
cmp
inc
sbb
repnz
outsb
adc
inc
das
adc
mov
inc
xchg
cmp
pop
gs
test
shl
lret
or
stc
int
dec
aaa
cld
mov
fdivrl
lock
mov
fdivp
cs
ret
mov
add
orb
jecxz
cmp
pop
mov
test
xor
add
sub
in
jmp
lret
clc
loope
aad
icebp
cwtl
adc
or
jne
bound
mov
add
xchg
jae
out
daa
int3
fisttpl
jg
mov
jmp
sarb
das
andl
jne
xlat
xor
andl
mov
aam
adc
dec
cmp
push
xor
mov
in
movsb
js
cmc
ficomps
cmp
dec
xor
inc
mov
sub
pop
loop
sub
jl
ja
je
fstl
shlb
dec
push
pop
ret
xor
icebp
jbe
rclb
inc
or
or
dec
or
sbbb
cwtl
lahf
addr16
mov
cmp
push
movsl
fidivs
dec
pop
jmp
add
stos
sahf
pop
mov
sub
fsubrs
daa
les
mov
adc
push
imul
ret
mov
je
shll
xor
jg
sub
and
cltd
xor
out
mov
insl
add
es
xor
and
outsb
scas
and
in
mov
xor
and
xchg
xlat
jbe
ds
notl
sub
std
les
xchg
cmp
insl
push
sbb
sarl
add
sbb
add
cli
inc
cmpsl
loope
mov
stc
xchg
imul
and
loope
push
in
hlt
in
pushf
test
out
lret
lods
xchg
pop
addr16
sbb
mov
mov
xor
movsl
cmpsl
jmp
dec
sbb
cmp
pushf
add
in
mov
jnp
jne
push
push
and
pop
das
push
adc
cmc
xchg
jp
mov
sbb
fcompl
sub
xchg
mov
int3
cwtl
inc
jns
clc
call
cmpsb
out
pop
scas
mov
popa
aad
pop
inc
cmp
xor
sub
ljmp
cld
or
je
cltd
aaa
cmpsl
add
mov
pop
inc
or
cli
rcll
push
imul
pop
cltd
imul
popa
out
fisubrs
mov
mov
pop
inc
jl
and
mulb
and
sbb
scas
movsb
jns
adc
sub
xchg
mov
add
jmp
ljmp
in
mov
mov
sarl
stos
mov
mov
adc
pop
and
das
repnz
aas
cld
pop
fildll
push
rclb
loope
push
popf
gs
mov
mov
loopne
push
inc
lods
xor
adc
sbb
add
mov
rorb
jae
mov
add
adc
mov
xchg
fbstp
hlt
cmpl
mov
loop
dec
out
cltd
out
in
repnz
push
adc
aas
stos
in
mov
mov
mov
faddl
jg
in
dec
int3
movsb
lods
xorb
xor
xor
fidivrl
push
call
lret
jno
cmpl
sub
xor
ds
sbb
das
xchg
popa
pushf
and
inc
hlt
out
inc
sbb
mov
xchg
mov
insl
jnp
stos
andl
imul
pop
lahf
das
test
stc
mov
enter
call
lcall
cld
mov
push
xor
insb
std
shrl
or
pop
out
mov
daa
leave
movsb
add
out
ja
xchg
mov
push
fwait
inc
push
mov
lret
push
je
sti
jle
mov
aad
andb
pushf
inc
inc
imul
stos
movsb
out
add
push
repnz
or
adc
ret
test
push
cmpsl
mov
sbb
arpl
jbe
sub
fldcw
and
push
test
sub
jmp
push
shlb
fcomi
ret
or
xchg
pop
inc
in
pop
sbb
sub
push
and
imul
out
jnp
adc
in
lea
dec
imul
xlat
mov
outsl
out
cli
imul
arpl
jno
pop
pop
imul
sti
mov
mov
adcb
mov
sub
dec
rolb
jno
ja
sub
adc
mov
insl
jle
sbb
in
dec
mov
jp
fadds
hlt
sarb
orl
xchg
pop
push
int
gs
adc
jno
aad
outsl
adc
add
mov
mov
inc
fs
fstp
pop
data16
push
lds
js
sub
aad
sbbl
pop
repz
out
push
jb
xor
out
in
imul
mov
sbb
add
fmull
mov
mov
arpl
adc
jo
js
fsubs
outsl
jb
ret
cld
ficompl
or
repz
or
lods
leave
jmpw
fcoml
pop
orl
rcll
jne
mov
add
pop
ficoml
xor
loope
dec
inc
and
sbb
xchg
sub
mov
or
push
push
ljmp
pop
cmp
cmc
insb
dec
push
and
sub
adc
cs
aam
inc
pushf
fcmovnb
push
shlb
inc
stc
xor
sbb
xchg
or
mov
fidivs
daa
test
test
adc
sub
in
xor
out
mov
call
cmp
add
xchg
or
push
pusha
insb
push
push
lods
daa
js
add
cmp
loope
mov
mov
mov
jl
cld
lcall
shl
jae
mov
add
mov
adc
aaa
dec
adc
aad
dec
push
mov
in
mov
and
and
mov
cld
adc
insb
pop
sbb
adc
movsl
scas
inc
mov
jae
xchg
stos
repz
pop
inc
lods
fld
sbb
and
cmc
adc
xchg
inc
outsb
divb
push
adc
iret
pushf
xchg
dec
hlt
ret
mov
dec
add
mov
gs
cs
dec
ror
mov
cs
sti
push
mov
mov
iret
lds
jle
dec
push
dec
mov
xchg
xchg
insb
sub
fists
mov
scas
mov
aad
cmp
jecxz
xchg
fistpl
lods
mov
ja
imul
or
or
mov
outsl
mov
xchg
adc
xchg
jmp
dec
je
dec
jp
adc
push
lret
add
outsb
aaa
cmp
mov
fists
jp
or
and
sub
jns
or
jp
pop
insb
xchg
imul
mov
sbb
je
pushf
cmp
add
cwtl
lods
xchg
fildll
testb
adc
jbe
jne
icebp
push
rolb
popf
out
imul
gs
in
pop
dec
lahf
adc
push
leave
jmp
jbe
xchg
aas
bound
dec
push
outsb
xchg
push
clc
into
lcall
adc
jge
pop
test
pop
mov
shll
insb
or
push
fwait
iret
xchg
pop
shrb
dec
andb
cmp
mov
cmpsb
mov
lea
mov
jae
fcmovnu
data16
dec
dec
movsb
mov
xor
mov
mov
fidivl
cs
es
lahf
inc
pop
mov
adc
repnz
hlt
and
pop
ds
cs
cmp
jle
sbb
xchg
xchg
fxch
cwtl
out
stos
mov
lock
mov
inc
jno
xchg
mov
cmp
mov
test
das
pop
push
int
xchg
or
push
pusha
xor
add
mov
mov
push
lods
std
orb
adc
jge
lret
jb
bound
add
rcl
lods
idiv
call
and
mov
or
data16
pop
mov
jnp
add
xchg
mov
ret
sbb
pmuludq
inc
nop
sub
xchg
push
out
sub
jp
push
pop
inc
xchg
lock
mov
or
mov
mov
ret
push
je
jle
and
or
adc
xchg
xchg
popl
mov
dec
dec
mov
pop
stos
pop
ficompl
jg
pop
movsl
dec
jnp
push
je
mov
mov
sub
xchg
rorb
pusha
xor
ret
and
dec
repz
or
mov
sbb
mov
pop
xchg
jne
jbe
repnz
xchg
mov
sarl
pop
and
js
stos
shlb
inc
mov
imul
rcrb
push
or
mov
inc
jecxz
ret
stos
fcmovb
clc
and
or
int
push
dec
or
mov
insl
repz
in
jbe
or
mov
stos
jmp
xor
jp
pop
fsub
mov
mov
pop
icebp
popa
mov
cmp
mov
je
insb
loope
mov
mov
rcll
call
inc
inc
mov
dec
mov
movsl
jecxz
loop
xchg
push
daa
lea
mov
pop
adc
mov
imul
xor
push
xor
cmc
pop
cs
jae
cmpsb
shrl
mov
sub
mov
sbb
xchg
lea
pop
jg
sub
cmpsl
lret
packsswb
test
push
jg
sub
fbld
cld
adc
mov
ja
lds
pop
iret
jp
mov
imul
iret
xor
ret
mov
inc
mov
mov
add
stc
mov
cmc
cwtl
cli
mov
mov
cmpsl
lret
popa
mov
xor
adc
sbb
mov
lea
call
ret
orb
xchg
rorb
arpl
inc
xchg
movsl
sbb
in
push
mov
inc
cmp
pusha
cmp
cmpsb
lcall
movsl
in
jno
pop
jle
and
pop
fiadds
dec
imul
scas
test
mov
jae
bound
in
out
daa
xlat
add
in
into
cmovns
subb
nop
cmp
aad
or
pop
jmp
xchg
mov
adc
sub
incl
sub
cmp
pusha
cld
inc
loope
fs
mov
stos
mov
and
stc
cwtl
cmpsl
test
sahf
ljmp
sti
jb
mov
bound
jge
add
insl
aas
adc
xor
add
enter
mov
popa
xchg
cmpsb
inc
loop
mov
scas
cmp
jb
jmp
imul
mov
mov
mov
and
aas
sbb
lock
add
and
xchg
jecxz
out
jl
or
jnp
pusha
test
sub
xor
mov
xchg
xchg
loope
cmp
dec
mov
mov
lock
in
clc
cli
pop
fst
fcomps
stos
jno
push
mov
pop
int
daa
cmp
movsl
loop
adc
fnstcw
mov
test
xchg
and
icebp
inc
xchg
stos
pop
xchg
aam
call
in
test
pop
cmp
data16
lock
ret
mov
mov
es
lret
sub
mov
popf
leave
jbe
icebp
stos
mov
push
xchg
push
jge
mov
je
push
inc
mov
jbe
lret
clc
lods
sbb
lahf
dec
mov
or
aas
add
scas
leave
fisubs
popf
xor
jbe
out
push
mov
mov
nop
jo
or
pop
cmc
sbb
mov
movsb
fidivrs
rcrl
popl
jnp
movsb
sub
mov
sahf
fildll
aam
push
in
mov
sahf
fs
mov
popa
adc
out
arpl
sti
push
pusha
lods
push
mov
push
mov
xchg
mov
aaa
xchg
inc
int3
add
pop
cmp
das
pushf
xchg
xor
sub
or
cmc
popa
int
cs
cmpb
fnstcw
pushf
in
pop
jae
in
jg
inc
int
ja
sbb
xchg
push
ss
adc
out
add
sub
iret
aas
mov
mov
js
push
imulb
lcall
int3
sbb
ret
rol
gs
xchg
call
pop
fistpll
push
sub
pop
adc
jbe
stc
loope
in
fwait
xchg
and
mov
inc
pop
ss
mov
pop
cld
xchg
jbe
pushf
pop
fs
cmp
stos
add
xchg
pop
xchg
scas
scas
ja
mull
or
xchg
stc
mov
xchg
jge
xchg
xor
dec
cmp
loop
inc
cld
xor
pop
pop
loopne
repz
mov
loope
pop
xchg
inc
mov
aad
inc
and
pop
lahf
popf
imul
shlb
cmp
jle
jnp
mov
mov
jl
jae
mov
jecxz
adc
pop
jns
pop
pop
and
mov
add
ja
in
testb
push
sbb
add
pop
loop
ret
int3
mov
scas
int3
out
inc
jmp
lret
outsb
cmp
pop
jge
adc
cmpl
dec
jmp
in
mov
mov
mov
nop
sub
popa
dec
add
shr
cld
test
jb
insb
adc
add
imul
xchg
sbb
xchg
in
sub
cld
bound
lret
aad
sbb
lock
xchg
jne
or
pop
cs
adc
sbb
push
pop
push
lcall
pusha
repnz
adc
sub
mov
loopne
xlat
lods
subl
mov
inc
mov
and
xor
inc
clc
sahf
stos
jae
jg
xor
and
iret
popf
mov
lods
dec
add
xchg
xchg
push
push
lods
call
jecxz
popf
or
dec
out
xchg
ret
sbb
js
add
mov
jo
jnp
repz
mov
addr16
jne
or
mov
test
pop
inc
mov
in
pop
sbb
cmp
sub
mov
jmp
cmp
push
jns
jo
cmp
hlt
ss
mov
int3
jnp
mov
test
or
push
mov
mov
cmp
out
xor
jae
jmp
xchg
dec
mov
cmp
call
hlt
or
ljmp
int
pushf
popf
hlt
jnp
inc
movb
es
cld
add
pop
test
inc
les
fsubrp
jae
insl
xchg
std
adc
jecxz
dec
mov
bound
or
and
je
iret
and
add
and
adc
lods
outsb
inc
test
xchg
dec
dec
jmp
dec
ds
js
inc
jmp
gs
mov
lret
mov
inc
mov
mov
insb
outsb
jmp
pop
outsb
out
outsl
add
pop
mov
out
movsl
mov
scas
add
mov
inc
xchg
mov
push
inc
out
loop
hlt
test
jae
pop
cmp
jp
xchg
shl
mov
sti
and
mov
out
orb
movsb
clc
push
rorl
lret
lods
inc
xor
sti
push
cmp
push
aaa
inc
mov
pop
pop
sbb
lea
testl
pop
jbe
je
cwtl
addr16
out
and
das
pop
add
jmp
sbb
jge
movsb
les
mov
or
inc
lcall
inc
mov
cmp
cltd
push
mov
xor
int3
enter
mov
mov
in
lcall
mov
jp
inc
pop
mov
std
or
mov
jnp
add
fnstsw
pushf
cmpsl
stos
or
call
mov
mov
or
cmpsl
pop
cmp
in
sub
loop
add
scas
xchg
lods
xor
imul
pop
xchg
add
loopne
mov
lret
neg
js
je
xor
sub
xlat
xor
adc
popa
popf
movsb
xchg
int3
iret
lea
sbb
jns
rcr
repnz
jne
push
iret
fdivrs
inc
mov
mov
jns
out
mov
das
dec
cld
add
js
mov
out
imul
subl
fldenv
pop
mov
dec
hlt
or
std
fwait
and
xor
sbb
pop
imul
out
sub
pop
mov
js
lock
add
mov
cmpsl
sbb
push
mov
xor
xchg
push
or
leave
ja
dec
sbb
jb
mov
popf
cltd
in
cmp
push
jno
fninit
fidivrl
push
and
pop
push
or
mov
das
sbb
pop
or
adc
lret
or
gs
lret
pop
mov
lcall
cli
loope
nop
nop
xadd
enter
xchg
in
mov
cwtl
dec
dec
and
icebp
int3
mov
pushf
js
pop
xor
rcr
inc
fldl
hlt
add
test
stos
lahf
xchg
aas
insl
or
in
data16
inc
mov
scas
pop
jbe
dec
cmp
jae
call
mov
mov
push
ljmp
or
and
sarb
jle
or
sarb
mov
out
sar
roll
mov
dec
nop
add
xchg
mov
insb
jno
cltd
pusha
mov
fidivrl
ficoml
mov
js
lea
push
jns
mov
cwtl
addl
sub
imul
cmp
push
test
out
cltd
mov
mov
jp
enter
jb
leave
mov
fwait
or
les
pop
mov
ficoms
pop
aam
xchg
roll
sarb
or
insb
shrb
jae
mov
lcall
cmp
xchg
mov
stc
xor
mov
out
mov
mov
dec
adc
fimuls
push
or
or
jne
cmpsb
cmp
rorb
cltd
ficoms
pop
nop
sarl
pop
pop
test
jb
or
filds
movsl
cld
imul
or
bound
das
mov
cs
inc
adc
ds
lcall
ss
jecxz
push
leave
or
mov
sub
dec
mov
iret
push
mov
sub
mov
cmp
es
pop
lret
out
sahf
pushl
fwait
jmp
cmp
in
sub
inc
lods
daa
add
out
xor
xchg
sahf
out
in
das
in
in
fisubrs
int3
sbb
ljmp
faddp
xchg
jecxz
icebp
mov
sti
mov
mov
add
cmp
inc
ret
imul
sarl
call
push
pushf
and
mov
lea
into
push
clc
sahf
add
jb
stc
mov
cs
add
js
sub
jle
loopne
xchg
out
loop
mov
aaa
jmp
jns
rcrl
pxor
xchg
je
sub
movsb
iret
xor
pop
data16
es
rclb
xchg
or
add
inc
andl
mov
js
pusha
gs
call
in
imul
adc
mov
dec
aad
scas
pop
inc
pop
imul
add
pop
adc
mov
insb
push
js
dec
pop
sub
pop
mov
mov
scas
frstor
push
inc
dec
fadd
insb
xchg
je
das
sub
in
inc
aaa
fistl
mov
hlt
dec
in
mov
sti
pop
xchg
mov
jb
cwtl
clc
bound
fisttpll
push
hlt
jo
xor
adc
xchg
dec
enter
pop
fistpll
or
test
inc
lret
sub
inc
pop
pop
sub
out
out
pop
jne
pop
fisttps
cwtl
icebp
push
les
aas
add
mov
and
and
inc
scas
ret
or
cmc
pusha
jne
sub
ss
add
loopne
gs
xchg
mov
jle
adc
push
fcmovbe
push
je
push
xchg
test
pop
dec
pusha
cmp
sbb
lock
xchg
ljmp
cmp
mov
push
clc
test
mov
adc
fimull
adc
jae
cmp
add
push
inc
cli
cli
push
test
bound
mov
xchg
arpl
cmp
nop
popa
and
xor
test
test
inc
sub
pushf
xchg
in
adc
fnstenv
and
pop
add
inc
push
ror
or
in
dec
mov
insb
cltd
out
push
adc
rolb
pop
sbb
int3
js
stc
hlt
mov
mov
jecxz
shll
and
cld
movsl
mov
and
sub
and
xchg
stos
mov
adc
pop
test
cs
lret
jg
pop
js
inc
aam
hlt
subl
outsl
movsl
mov
pop
out
cmp
test
adc
mov
inc
dec
mov
call
lea
jl
out
cs
pusha
in
dec
lcall
icebp
stc
mov
and
mov
incl
out
mov
std
push
int
rcl
lahf
add
sbb
jle
sbb
repz
adc
ficoml
movb
js
mov
xchg
mov
mov
inc
es
das
mov
push
lea
lods
pop
inc
stos
inc
out
in
je
aad
icebp
sub
jecxz
hlt
cmpsl
jg
pushl
insl
jmp
jns
xchg
arpl
icebp
in
out
push
jno
sbb
divl
cmp
std
push
loop
pop
cmp
mov
mov
add
sbb
ja
cmp
push
pop
rep
cmp
lahf
outsb
mov
pop
adc
icebp
pop
dec
iret
dec
mov
jno
insl
jg
stc
arpl
pop
and
sub
inc
mov
lods
aaa
icebp
aaa
push
mov
mov
sbb
imulb
xlat
cmpsl
outsb
test
jbe
mov
xorl
dec
decb
popa
popa
add
call
stc
ds
decb
cmpsb
pop
mov
mov
sbb
in
insl
orl
repz
rcr
mov
imul
mov
pop
ret
mov
dec
lock
shr
add
lea
sub
pop
pop
push
stos
adc
rcrl
cmp
jbe
and
mov
add
fnstenv
mov
mov
out
rcrl
inc
push
pushf
lret
sar
and
lea
lret
pop
dec
mov
leave
fsubrs
push
and
test
cwtl
mov
jmp
fwait
adc
dec
rorl
popf
je
inc
enter
jg
cmp
cs
shll
popl
jbe
les
movsl
and
mov
sub
scas
scas
jl
lahf
inc
xchg
jle
mov
stc
dec
xchg
cmp
jnp
stos
jecxz
fcmovu
xchg
add
xchg
xchg
jle
fwait
out
push
and
mov
add
mov
sbb
insb
sbb
pusha
enter
popf
dec
mov
scas
xchg
dec
mov
les
or
push
pop
or
push
clc
dec
adc
js
fldl
push
or
sub
ds
xchg
das
cwtl
dec
adc
add
shrl
or
gs
cmp
pop
int
mov
repz
xchg
push
test
cld
loopne
adc
mov
push
test
das
lahf
push
ret
adc
es
aad
pushf
lock
dec
scas
lret
inc
iret
cmp
mov
mov
and
sub
or
ret
mov
jb
push
fwait
xor
ja
adc
cmp
lahf
pop
jmp
mov
dec
adc
dec
pop
rcll
mov
leave
test
jmp
mov
mov
frstor
movsl
add
mov
mov
fstp
xchg
xorb
ret
cmpsb
dec
dec
sub
outsl
sbb
fs
cwtl
pusha
mov
mov
cmp
xchg
int
xchg
push
add
cmp
and
push
outsl
mov
testb
outsl
xlat
jg
scas
fisttpll
or
push
mov
pop
filds
inc
and
add
dec
movsl
orl
jnp
pop
out
push
lods
test
bswap
test
or
push
xor
mov
cmp
std
fnsave
inc
inc
mov
or
out
dec
fcmove
add
fnsave
push
pop
jecxz
mov
imul
pop
fisubs
cmp
xchg
and
add
push
test
mov
popf
bound
xor
orb
sti
and
shl
xor
test
add
repz
pushf
repnz
loope
ret
movsb
cmp
pusha
jbe
scas
jmp
push
inc
and
enter
dec
push
cmp
sbb
pop
jmp
xor
sub
push
outsb
mov
lds
push
loop
lods
lods
dec
out
leave
in
popa
daa
xor
or
mov
ror
sbb
popa
mov
push
psrlq
mov
xor
imul
mov
mov
jbe
in
dec
and
ljmp
xor
pusha
dec
rcl
dec
xor
pop
push
pop
sti
js
pop
sbb
gs
or
das
mov
es
daa
mov
mov
movsl
sbb
cmp
fsubrl
adc
xchg
inc
add
xchg
inc
xor
or
into
fwait
xchg
fs
mov
mov
pop
and
shrl
lcall
push
jg
add
les
inc
and
clc
call
dec
cmpl
inc
ret
sahf
mov
push
arpl
push
shrb
inc
dec
hlt
or
pop
mov
mov
mov
rol
sub
cmc
mov
mov
jb
xchg
aaa
lcallw
xchg
fmulp
xchg
add
pushf
les
xor
add
lods
bound
cmp
fdivs
xor
jne
outsb
hlt
add
mov
or
push
dec
dec
cmp
orb
shl
ffreep
pop
orl
loopne
cmc
mov
in
mov
out
adc
int
test
js
dec
cltd
jns
repz
mov
mov
and
push
shl
sbb
pop
pusha
dec
inc
push
dec
push
xorb
movl
dec
pop
jecxz
mov
aaa
mov
mov
fs
fmull
inc
jmp
lods
jns
vpminub
ja
nop
cmp
sbb
mov
aam
cmpsl
or
sbb
mov
xchg
movb
push
lds
fstpt
add
rolb
adc
dec
fcomip
add
imul
xor
arpl
xor
fcmovu
add
push
sub
cmc
or
in
icebp
push
jp
lock
jl
mov
mov
movsb
test
cmpsb
in
jo
xchg
or
sbb
jne
xor
data16
push
pop
fadds
push
push
xchg
inc
iret
bound
adc
mov
xor
jl
mov
addb
inc
cld
sahf
mov
cmp
lock
pop
pop
or
cli
xchg
or
sarb
imul
rcrl
or
lods
pop
xchg
cld
sbb
rcll
pop
hlt
popa
cmp
jb
enter
outsb
ss
sbb
jbe
cmp
add
into
cmp
or
lretw
out
sahf
test
or
jp
nop
js
xor
pusha
push
dec
adc
cmp
dec
add
rcrb
mov
xlat
jl
inc
fldenv
xchg
lods
hlt
push
adc
shlb
pushf
push
pop
inc
nop
pop
mov
xor
aas
xor
popf
mov
aaa
or
mov
loop
sub
sub
daa
pop
in
mov
test
mov
pop
mov
xchg
cmp
sub
sub
pop
xchg
inc
mov
xchg
mov
dec
jl
mov
vcvtsi2sdl
push
or
out
pop
frstor
push
sub
or
outsl
pop
popf
mov
inc
ljmp
jo
or
push
xor
test
nop
mov
pop
cmp
clc
mov
pop
push
jecxz
mov
shrb
sbb
jno
and
ret
xorl
mov
sub
cmpb
icebp
push
push
out
inc
je
std
das
jp
jne
and
mov
sbb
sub
mov
cmpsl
and
push
je
jbe
stos
test
call
and
fmuls
mov
mov
fwait
enter
pop
mov
mov
lea
or
jno
inc
and
cmp
mov
xchg
adc
push
mov
push
aam
mov
push
jne
cs
rol
sbb
xor
outsb
sahf
stos
sub
out
xchg
int3
int
mov
shrl
imul
mov
idiv
test
pushf
sbb
mov
push
cmc
xchg
loop
das
and
outsb
popf
inc
xor
sbb
jo
sbb
jle
push
sbb
pushf
mov
aas
fsubrs
xchg
xor
mov
lea
mov
inc
mov
lcall
mov
jmp
jp
xchg
cmp
loop
out
mov
fists
scas
mov
jo
mov
or
pop
inc
insl
pop
mov
mov
sbb
pop
or
fistl
push
xor
pop
sar
cmp
sub
pop
in
aaa
sarl
inc
jmp
mov
cltd
scas
jg
inc
test
nop
xchg
sbb
sub
xchg
leave
sbb
dec
arpl
fildl
dec
jae
ficomps
mov
ss
mov
in
dec
cmp
push
sahf
loope
and
rcpps
push
das
sarb
fwait
das
add
shll
xchg
nop
loopne
lods
cmp
stc
cmp
dec
jg
sub
inc
es
and
aas
mov
mov
mov
push
lds
sub
mov
testl
test
lods
xchg
lret
jno
repnz
mov
mov
or
ljmp
bound
pop
enter
and
pusha
xlat
nop
mov
mov
inc
mov
sbb
push
les
sub
sbb
and
adc
mov
out
and
dec
sbb
jmp
mov
shr
subl
jae
xchg
xchg
mov
imul
or
xchg
jle
movsb
inc
mov
and
pop
inc
fistpll
pop
jle
aad
push
xor
call
insl
push
into
int3
push
and
es
mov
jp
mov
jle
in
les
ja
movb
in
lcall
xor
repnz
aas
or
add
in
call
loop
mov
mov
fisttpl
or
inc
pop
xor
pop
incb
dec
out
cmpxchg8b
dec
cmp
xor
xor
and
dec
add
mov
lret
cld
cs
mov
hlt
sbb
jnp
shrl
incb
or
aam
xchg
popf
inc
push
shll
xor
jg
stos
push
push
xchg
ret
jle
cmc
pop
pop
int
aas
psrlq
cmpsl
pusha
subb
mov
dec
mov
call
loop
popf
movsb
xor
sbb
popa
cltd
pop
sub
mov
inc
into
loop
cltd
add
dec
imul
sbb
dec
xchg
and
movsl
das
int3
xor
jmp
push
sub
xchg
jne
stc
and
push
test
cmp
dec
les
mov
int3
repnz
or
pop
seto
insb
pop
jg
movsb
fsub
mov
jne
and
dec
jbe
dec
sub
enter
dec
or
call
add
mov
test
cmp
jnp
mov
repnz
aas
xor
or
mov
cli
mov
loop
outsb
leave
add
inc
jae
mov
push
or
mov
xor
sbb
dec
movsl
dec
adc
xor
or
mov
or
sti
pop
jecxz
or
ret
outsl
leave
cmp
insl
scas
subl
add
pusha
repz
mov
jnp
push
mov
cmp
mov
cmp
jnp
addr16
jno
das
cmc
jbe
movsb
test
xchg
std
add
adc
fmulp
mov
mov
loopne
je
imul
xlat
cltd
lock
inc
icebp
pop
pusha
and
jns
mov
loope
pop
sub
es
and
aaa
xchg
repnz
inc
test
inc
jmp
or
rcrb
nop
shl
loop
inc
jnp
sub
push
mov
and
push
popa
mov
loope
lods
adc
decl
push
js
push
pop
sub
aaa
adc
jecxz
adc
mov
in
sub
push
xchg
jbe
ret
pop
in
sbb
shlb
mov
cmp
push
dec
lods
test
mov
ret
std
data16
xorb
sub
test
ja
outsb
push
pop
mov
fsubrp
mov
sbb
xor
cmp
dec
pop
add
pop
imul
mov
mov
ret
mov
add
or
jo
in
lret
and
mov
test
std
aad
mov
xchg
push
jae
push
lret
loopne
jmp
subl
imul
and
test
xchg
cmp
clc
subl
stc
xor
jp
xchg
mov
outsl
in
jge
jmp
adc
fs
xor
mov
daa
cltd
lods
dec
xlat
test
or
jecxz
in
addl
adc
add
in
mov
push
cmp
test
pop
mov
imul
inc
in
jnp
out
clc
ss
test
add
and
mov
pop
and
pop
or
js
pushf
pop
loope
xchg
pusha
dec
nop
push
movsb
incl
cld
outsb
dec
enter
into
pop
inc
push
adc
xchg
mov
inc
mov
push
jbe
movsl
xor
jmp
adc
add
es
adc
cmp
movsb
and
daa
scas
outsl
jp
test
outsb
sar
call
leave
sti
adc
adc
decb
add
loop
enter
rcrl
stc
filds
inc
cs
data16
xchg
xor
popl
cmp
or
push
dec
popf
loopne
push
stos
cmp
fwait
shr
mov
daa
ret
out
add
popf
sbb
nop
cwtl
ss
and
insl
or
lea
stc
cmp
xor
test
shl
sbb
push
mov
jo
lea
cs
cmp
mov
push
loopne
and
das
in
push
insl
and
fadd
and
mov
shlb
fdivp
je
mov
sar
push
pop
xchg
clc
sahf
cmp
mov
bound
ret
and
push
jmp
pop
push
lea
or
inc
arpl
fs
mov
xchg
mov
push
gs
int3
out
jno
inc
insl
add
aam
enter
bnd
dec
jg
xchg
or
xchg
pminsw
sbb
adc
cli
and
dec
pop
iret
lods
ficoml
inc
int3
cltd
sarb
mov
adc
and
out
pop
outsl
inc
sub
fistpl
fistl
xor
stc
mov
push
or
jg
mov
mov
mov
sub
xchg
xchg
xor
shll
push
scas
test
inc
pop
fnstsw
sbb
xchg
mov
loope
xor
cli
xchg
and
call
fmulp
fists
repz
je
aad
or
fsubs
wrmsr
xchg
mov
dec
fs
jl
mov
lcall
sbb
mov
dec
add
mov
cwtl
into
loop
fdivl
or
mov
adc
xor
outsl
mov
lock
out
xorl
or
inc
pop
or
and
push
jp,pn
ja
dec
out
xlat
pop
add
mov
and
js
andl
mov
mov
sub
sbb
aaa
and
jne
mov
cmp
dec
push
cmc
mov
or
pop
fisubl
mov
fimull
xor
test
add
pop
and
push
add
fcmovne
adc
out
push
je
jg
mov
push
pushl
and
push
aam
push
jmp
mov
mov
outsb
aaa
mov
cmpsl
pop
iret
mov
xor
push
xlat
pop
je
aas
xor
dec
cmp
sti
daa
xchg
mov
or
cmc
cmp
lcall
cld
mov
jmp
sbb
lea
mov
cltd
ss
ja
mov
clc
scas
test
push
sbb
sbb
add
loope
xchg
sbb
cmp
jnp
and
pop
pushf
xchg
mov
push
fistpl
imul
jns
stos
daa
mov
mov
out
fistpll
imul
xor
and
sub
inc
cmp
cmc
aas
pop
es
mov
popa
shll
xchg
cmp
push
ljmp
je
movhps
loopne
int3
jge
mov
mov
aam
test
pusha
push
iret
pushf
loopne
jbe
insb
sti
lds
inc
pop
or
jg
aaa
pop
popf
sub
xor
push
sbb
flds
pop
mov
inc
push
xor
repz
leave
pop
push
in
outsl
and
sahf
mov
daa
lods
pop
out
mov
jbe
fdivrs
mov
pop
shll
mov
outsb
or
cmp
int
mov
sbb
or
xchg
inc
adc
inc
cmpsb
inc
lds
push
aaa
iret
and
sbbl
es
icebp
ljmp
inc
mov
adc
add
lcall
cmpl
std
cltd
jns
lods
lods
or
inc
lcall
out
push
in
sub
inc
je
data16
xchg
ljmp
mov
inc
shlb
cmc
sbb
adc
out
mov
jmp
adc
adc
sarl
lahf
xor
shll
mov
gs
xchg
push
fldt
and
call
gs
xor
in
sbb
repz
and
insl
push
outsb
xchg
jg
xor
and
sti
std
ss
and
lods
dec
sub
push
sarb
xlat
popf
ret
sbb
sbb
in
inc
inc
movsl
cwtl
dec
add
cmp
rcrl
adc
push
sti
pushf
mov
ror
xlat
mov
es
rorb
fcmovne
xor
mov
sub
xor
je
sti
cwtl
cmpsl
mov
lret
mov
adc
or
sub
jl
icebp
mov
fdivr
pushf
lods
cmpsl
mov
jmp
ds
pop
xlat
iret
inc
or
popa
xchg
pop
sahf
jp
lret
cmpsb
test
call
addr16
xor
mov
adc
dec
aad
dec
push
test
jecxz
xor
mov
movsb
push
and
dec
insl
call
jg,pt
test
aam
pop
test
sbb
xor
push
aam
add
mov
hlt
xchg
fdivl
adc
mov
mov
je
sbb
pop
mov
mov
stos
adc
xor
cmp
in
outsl
cs
dec
shlb
mov
add
cmp
cmp
js
jp
xchg
scas
cld
or
das
cs
push
xor
sub
nop
jl
aad
pushf
pusha
fwait
xchg
push
xchg
mov
add
cmpsb
adc
lea
dec
inc
sub
arpl
and
js
hlt
stos
mov
sub
xor
xor
lods
pusha
sti
adc
enter
xchg
jmp
or
sbb
jae
adc
test
or
adc
and
fsts
cltd
pop
ljmp
lahf
mov
cmp
outsl
inc
stc
pop
ja
test
xchg
push
add
enter
pop
fsubs
outsl
sbb
addr16
test
ds
aam
int
out
mov
cli
je
sub
mov
imul
cld
push
out
or
jle
mov
ffree
das
in
sub
xor
cli
mov
push
xlat
movsb
push
push
pop
mov
aaa
cmp
jo
fcoml
inc
outsb
repz
imul
adc
or
int
mov
adc
add
push
mov
jo
adc
jmp
stos
mov
test
xchg
inc
inc
xchg
mov
adc
mov
push
mov
cli
fwait
insl
in
stc
sub
ficompl
jbe
int3
bound
outsb
pop
test
call
movsl
lahf
mov
je
insl
test
lock
push
jle
and
lret
mov
cmpsl
adc
orl
sarl
arpl
push
pop
push
loopne
fnstcw
out
movsb
imul
lcall
dec
fisttps
xor
xor
jae
cmp
es
mov
push
sahf
mov
pop
inc
mov
dec
xchg
xchg
dec
jo
sarb
pusha
out
jne
pop
lods
xchg
pop
xchg
sbbb
cld
mov
mov
notl
push
jge
sub
scas
pop
cli
xor
xor
scas
pop
sub
dec
ljmp
adc
subb
stos
inc
sti
fadd
mov
test
xor
sbb
lcall
jle
jp
fcom
rcrb
push
movsl
lret
add
cmp
fcmovnbe
insb
mov
pusha
cmpsb
add
rorl
mov
add
mov
mov
dec
out
xorl
repz
loope
and
cmp
push
aas
shrl
sbb
push
jbe
inc
pop
dec
rcrb
fcomi
repz
jmp
mov
jmp
xorl
call
mov
aad
inc
sarb
xchg
inc
sti
sub
in
xor
clc
test
adc
dec
cltd
into
sbb
lds
mov
enter
cwtl
adc
mov
sub
pop
or
jmp
div
push
dec
add
je
mov
and
movsl
fdivl
sbb
dec
dec
adc
ss
pop
inc
cwtl
jno
adc
out
test
aas
jle
test
adc
aad
mov
lods
fsubrp
add
js
push
and
cmp
lea
mov
sub
imul
mov
mov
sbb
xchg
fidivrl
repnz
and
mov
insl
pop
fwait
incl
xor
and
xchg
mov
lds
out
lock
dec
inc
in
test
in
adc
jns
mov
mov
popf
test
mov
mov
sbb
in
sarl
test
fisubl
inc
xor
push
push
ficoml
jae
lock
sub
idivb
pop
adc
sbb
sahf
jno
xor
or
test
adcb
pop
xchg
lds
adc
fistl
add
adc
cmp
cmpsl
jno
cmp
fucom
out
inc
xchg
cmp
jo
push
lret
les
cmp
mov
shrl
sbb
int3
and
js
out
fisttpl
or
int3
jp
repnz
or
sahf
outsb
and
stos
int3
push
adc
in
jb
cmpsl
shl
add
pop
addr16
stos
dec
or
das
adc
mov
push
push
dec
push
sbb
sbb
mov
sbbl
in
xlat
xchg
out
pop
out
inc
dec
loopnew
je
mov
sub
pusha
orl
hlt
mov
sub
aaa
cmp
insl
int3
inc
jne
jno
aad
xchg
popf
repz
mov
dec
sub
cs
mov
dec
ja
sbb
jge
lea
mov
ret
sbb
sti
mov
cmpsl
ficompl
sub
loop
mov
sub
repz
loopne
stos
sahf
xchg
adc
xchg
sahf
mov
xchg
enter
test
push
into
mov
hlt
hlt
andl
add
iret
sub
or
mov
shl
mov
xchg
divb
rcll
mov
js
fisubrs
xor
xlat
fldenv
sti
inc
and
jno
jns
ret
cmp
push
cwtl
scas
or
xchg
mov
lea
adc
cmp
mov
imul
inc
cld
std
jl
jecxz
test
es
cwtl
add
imul
iret
adc
jle
scas
cwtl
push
std
testl
pushf
rolb
cld
pushf
cmpsl
push
and
addl
and
test
pop
out
ja
sbb
decb
mov
stc
in
sti
aaa
hlt
gs
rcll
subb
and
mov
je
fdivrl
outsl
or
pop
arpl
add
pop
fwait
pop
hlt
rol
pop
xor
adc
cmc
fstps
int3
ds
cmp
imul
or
push
mov
es
mov
mov
mov
mov
mov
and
add
xchg
adc
cwtl
xchg
call
loope
mov
insl
ds
and
int
mov
sbb
jo
pusha
loopew
jmp
mov
sub
xor
mov
loopne
iret
push
testb
add
popa
cld
movsl
xchg
mov
jne
mov
sarb
shr
and
add
fdivr
cmpl
pop
ja
push
data16
mov
movsl
adc
dec
sub
scas
push
xchg
fldcw
mov
mov
mov
mov
loope
outsl
fstps
xchg
lods
xor
or
sbb
bound
mov
sahf
mov
cwtl
jg
inc
jg
push
fcmovne
ds
arpl
add
cld
rcr
sbbb
pushf
lds
push
std
or
pop
scas
aas
dec
rclb
jnp
jne
outsb
out
lcall
inc
iret
rcl
imul
aaa
or
aad
or
cmp
xor
sub
pop
movsl
bound
out
xchg
cltd
xchg
mov
xor
or
jns
adc
fildl
fs
es
scas
and
pop
pop
sbb
in
sub
test
dec
arpl
and
std
aad
movsl
push
cli
sub
incl
jecxz
ljmp
scas
jbe
mov
xor
ret
inc
push
movsl
rorl
std
pop
shrl
or
push
push
shll
sti
dec
test
cli
inc
lea
or
xor
call
pop
jle
mov
imul
jle
lahf
inc
xor
mov
cmpsb
cmp
fadds
loope
inc
subl
sti
mov
ss
in
stos
add
mov
mov
aas
shll
mov
and
fisttpll
dec
in
ja
and
lods
xor
rcrb
mov
outsl
popf
sub
imul
imul
shr
mov
lret
fs
mov
neg
xchg
jg
fisubrs
xchg
aas
pop
sbb
xchg
dec
jle
and
mov
mov
mov
out
sub
movsl
jle
cmp
inc
adc
mov
rorb
imull
xchg
jno
xchg
pusha
dec
or
adc
repz
inc
mov
fldl
xor
mov
loopne
sub
dec
add
icebp
dec
in
lret
inc
iret
pushf
out
mov
rcr
add
push
decb
shrl
or
mov
mov
adc
paddsb
lret
pop
xchg
fdivrs
cs
xor
jb
adc
jo
fnstenv
iret
dec
xchg
lods
inc
pusha
nop
mov
add
mov
xor
mov
dec
push
and
cmpl
test
or
lahf
sarl
xlat
addr16
xor
jp
sbb
and
rep
mov
and
push
shlb
xor
lods
imul
mov
decl
add
iret
push
lea
int3
sbb
lds
outsl
ja
test
push
fs
aaa
jg
in
or
add
enter
addr16
jo
mov
mov
es
sbb
mov
ljmp
cmc
pop
hlt
adc
test
stos
cmpsl
rorl
mov
adc
xchg
out
stc
push
lods
mov
xchg
mov
arpl
sbb
inc
xchg
push
xchg
ret
jno
xchg
out
and
std
cwtl
sub
and
pop
pop
test
pop
stos
mov
popl
pop
push
ljmp
das
or
fxch
add
cmp
sub
sbb
loope
dec
pushf
nop
mov
sbb
ficompl
outsb
and
popl
jmp
xchg
mov
xlat
sub
xor
dec
sbb
mov
or
sar
mov
sbb
es
loope
mov
add
and
call
fsts
sub
out
add
or
mov
out
sub
lock
adc
cmc
cmp
nop
fcomps
mov
pop
mov
fimuls
rclb
inc
inc
loope
jo
movsl
inc
pop
sbb
mov
jmp
xacquire
test
cmc
nop
xchg
xor
nop
popa
pop
mov
pop
sub
and
leave
xchg
lcall
add
or
outsl
movsl
jle
mov
or
andb
outsl
jae
pop
fsubrl
xor
fdiv
loope
push
lret
loope
call
or
or
out
push
dec
pop
push
lret
cli
push
lods
mov
out
dec
int
inc
mov
add
out
cli
xchg
pop
xor
shlb
xlat
mov
add
pop
aam
leave
sub
add
xor
cmp
inc
ret
pushf
xchg
lds
scas
icebp
lcall
mov
or
xchg
int
ror
out
dec
push
int
adc
jo
and
test
out
pop
ja
xlat
inc
inc
call
addr16
setno
sahf
inc
mov
out
xchg
inc
push
cli
inc
xor
jno
or
xchg
xchg
mov
ror
fldl
mov
jo
cmpsb
mov
sub
push
or
sub
inc
stos
sub
roll
or
cld
mov
bswap
stc
scas
push
sbb
add
pop
out
adc
cld
or
sbb
dec
cmp
xor
mov
sub
fcoms
xchg
add
and
xlat
jle
sahf
add
cli
out
jo
jae
pop
pop
push
mov
adc
push
dec
shlb
fsubrl
mov
lock
pop
ret
repnz
cmpsl
pop
addr16
xchg
pushl
jg
fcmovbe
mov
cmpsl
cmp
add
inc
lcall
or
pop
gs
cmp
xor
insl
fidivrl
stos
and
lock
adc
popa
outsl
ljmp
leave
sub
sub
sbb
push
xchg
cli
neg
dec
pop
add
pop
lcallw
or
mov
push
setbe
fwait
cld
arpl
test
mov
add
inc
shll
lcall
mov
cmc
lret
int3
ss
mov
mov
sbb
jo
dec
or
inc
adc
inc
addr16
pop
or
insb
clc
jg
or
push
mov
in
imul
cmc
push
popa
push
orl
es
in
xlat
jmp
mov
dec
mov
out
lret
aaa
sahf
push
je
lods
call
js
push
dec
adcb
test
mov
in
lcall
int3
movq
mov
sub
adc
fcomp
sub
insl
jns
mov
lods
mov
jge
pop
xlat
clc
test
push
inc
dec
push
ret
fsubs
fcmovb
int3
pop
add
stc
cmp
sbb
leave
mov
cld
add
out
mov
push
adc
dec
fadds
imul
and
enter
inc
xor
loopne
cwtl
mov
mov
sbb
mov
dec
fld
gs
shl
outsb
stos
or
test
xor
push
cld
dec
jae
outsl
mov
out
inc
aas
mov
jb
xlat
xor
jbe
aam
lret
roll
pop
xchg
aas
and
pop
adc
sbb
push
cli
jae
lods
push
sbb
add
xchg
adc
in
jge
cwtl
in
mov
push
push
pop
out
mov
lret
mov
xlat
xor
inc
ror
adc
push
cli
sbb
push
imul
std
push
or
sbb
xor
jo
push
loopne
std
or
cs
xlat
xchg
jmp
lret
addr16
bound
and
hlt
loope
mov
dec
mov
sbb
mov
xchg
shrl
xor
ja
addb
sub
insl
andl
inc
frstor
sub
pop
test
lds
addr16
shlb
std
fsts
popf
sub
dec
nop
dec
leave
hlt
xor
repnz
nop
int
aad
std
int
mov
lret
sub
xchg
cmc
push
inc
and
xor
ja
ss
and
jp
xlat
roll
mov
cltd
xor
mov
insb
mov
xchg
mov
adc
mov
or
adc
fs
push
jecxz
shlb
push
adc
ror
mov
into
sbb
out
sub
arpl
rolb
cmc
lock
out
dec
add
xor
repnz
add
dec
inc
mov
scas
xor
push
icebp
ret
mov
xchg
dec
xor
out
or
frstor
ss
push
shrl
in
xchg
fld
insl
adc
inc
add
aaa
ds
aaa
push
jmp
and
out
cltd
repnz
sub
popf
jae
outsb
cmpb
adc
and
scas
mov
mov
data16
mov
xchg
out
test
pop
sbb
sbbb
mov
add
inc
sub
inc
xchg
in
es
sub
mov
pop
cwtl
call
jo
sub
mov
fimull
cmp
sub
sub
shlb
clc
lret
sub
adc
lret
in
xor
push
mov
adc
mov
add
loop
sub
cs
ljmp
adc
imul
lock
pushf
lock
rcll
push
ret
mov
inc
jecxz
adc
sbb
test
xlat
movl
cld
std
xchg
movsb
adc
ficompl
jmp
xchg
movsb
roll
push
or
add
popf
mov
or
sbb
push
inc
stos
pop
adcb
xchg
push
sub
xchg
pop
enter
enter
out
or
sbb
jae
movsl
sbb
xor
fildl
fwait
mov
inc
es
scas
inc
and
ret
add
outsl
lods
mov
je
loope
mov
jae
xchg
aas
cld
inc
test
pop
or
mov
fcmovb
sbbb
cwtl
and
add
dec
push
mov
push
mov
shl
movswl
adc
add
push
dec
out
push
and
sbb
imul
divl
cmp
inc
push
cwtl
push
or
decl
push
push
mov
mov
loope
add
test
cmp
repnz
inc
jo
rclb
popf
out
mov
data16
adc
lods
iret
insb
test
lods
jmp
popa
cwtl
xchg
and
push
bound
push
mov
shlb
push
add
cmpsl
mov
add
cmp
movsl
add
and
ja
or
shll
cmp
or
pop
sub
add
imul
inc
sbb
sub
jbe
movsb
por
jb
xchg
cli
in
add
gs
sbb
dec
inc
call
jecxz
out
add
pop
popa
cmpsl
icebp
mov
in
outsl
jb
jmp
xor
fs
clc
push
iret
cmpsb
fs
mov
xchg
lret
lock
ja
out
movl
outsb
mov
lds
xchg
adc
enter
jg
add
pop
pushf
cmc
cmc
mov
movsl
xchg
inc
lods
push
in
fwait
mov
jp
pop
outsb
fisubrs
lds
orb
inc
push
in
sbb
test
pop
leave
jmp
inc
and
repz
mov
dec
cmp
out
mov
inc
outsb
addr16
repz
dec
ljmp
test
mov
ljmp
fs
xchg
mov
push
lahf
add
imul
inc
ret
lods
push
loope
or
sub
jg
jl
sub
cmp
cmp
scas
inc
sbb
cmp
ret
mov
xor
and
imul
add
cmp
mov
mov
bound
cmp
jb
xchg
pop
jecxz
inc
shlb
sub
repz
out
out
iret
push
aaa
sbb
push
xor
loopne
clc
push
fdiv
sahf
push
adcl
xor
dec
cli
fldt
jp
push
dec
jmp
hlt
add
insb
loopne
sbb
nop
fstl
cmp
aad
cltd
cs
jge
ret
add
push
mov
stos
imul
push
fs
ss
xor
ret
mov
push
in
mov
push
pop
neg
leave
xor
jbe
popf
div
dec
inc
fiadds
lock
adc
push
inc
pop
int
cmp
lea
or
gs
bound
lds
ret
jmp
in
dec
repz
sbb
scas
dec
pop
rcll
and
push
inc
mov
and
arpl
outsl
pop
adc
mov
pop
fs
cwtl
mov
add
pop
push
sbb
xchg
mov
lds
fs
cmp
ret
cmp
aad
sbb
xor
addr16
jo
pusha
and
test
pop
xchg
std
test
mov
js
mov
push
sub
xchg
hlt
nop
test
mov
cmpsb
mov
sbb
mov
daa
nop
pop
jmp
xor
push
shl
call
cmpsl
xlat
out
jp
pusha
sti
ds
stc
mov
popa
sub
fmuls
jle
cmp
jae
fwait
and
mov
sub
jne
test
mov
es
push
stos
loope
out
mov
mov
imul
ja
mov
loope
cli
insl
leave
jns
int
sbb
and
mov
arpl
xchg
inc
mov
shlb
sbbl
add
inc
mov
dec
mov
jo
in
out
pushl
sbb
adc
add
push
repnz
sbb
adc
subl
mov
scas
cld
xchg
lcall
loopne
mov
jns
push
call
pop
push
add
jle
loop
sbb
push
inc
jmp
or
mov
pushf
inc
out
les
add
inc
mov
into
dec
xchg
loop
inc
out
lcall
push
ljmp
mov
js
and
rorl
dec
inc
sti
repz
fidivl
sub
fs
loopne
aas
cmc
pop
cmp
seta
out
cli
xorl
icebp
out
add
rorb
insb
sub
in
cmp
pop
icebp
stos
repz
test
bound
add
jo
sbb
outsl
dec
je
cmp
sbb
xchg
jo
or
and
pop
or
nop
mov
jae
push
cltd
outsb
push
inc
es
and
addl
leave
and
inc
add
dec
mov
imul
subb
test
mov
jmp
insl
imul
mov
js
imul
or
repz
sub
test
push
push
repnz
cmpsb
sub
jmp
les
dec
ret
adc
and
sti
ror
xchg
sbb
mov
xchg
add
jne
push
add
test
sahf
ja
lds
lea
cmp
shrb
xchg
or
inc
mov
mov
enter
sub
sahf
push
jle
add
jb
stos
pop
mov
in
mov
inc
xchg
ja
cmpsl
mov
xor
dec
nop
mov
xchg
xor
pop
mov
xor
fisubl
loope
or
adc
outsl
cmp
pop
push
mov
lock
add
dec
imul
jmp
mov
xor
arpl
popf
aaa
mov
outsb
and
daa
int3
insl
sbb
lret
mov
ss
imul
sbb
std
cmc
ds
pop
int3
orb
pop
push
dec
pop
pop
mov
arpl
outsb
or
adc
in
push
outsl
xchg
mov
xor
in
push
fwait
pop
adc
call
movb
fcoms
and
pop
out
outsb
mov
mov
mov
test
shlb
jl
aad
das
add
sub
out
push
mov
or
push
mov
rcr
xorl
fdivrs
cmp
cmpsl
aas
popf
ret
cmp
insb
cmpsl
fsubl
mov
or
lcall
test
fsub
ljmp
mov
into
arpl
jb
mov
dec
sub
cwtl
fwait
sub
xlat
push
jns
test
pusha
add
test
pop
pop
push
jg
cs
lret
aas
mov
inc
pop
push
inc
and
and
inc
mov
test
jg
and
and
into
mov
mov
les
loope
adc
xchg
add
lea
add
gs
cld
je
fs
popf
inc
pop
inc
dec
cmpsl
cmp
call
lods
jnp
addl
pusha
and
add
sahf
sub
jb
inc
rorb
pop
or
fwait
int3
mov
cs
adc
xor
in
fldt
sub
pop
lret
mov
inc
rclb
jnp
cmp
xchg
sahf
test
int
mov
test
push
sub
es
sub
and
enterw
sbb
sbb
pop
movsb
ss
pop
das
cli
sbb
sbb
ror
je
xchg
popf
out
lock
fildll
push
xchg
lret
lea
push
jne
decl
mov
jge
pop
roll
mov
movsl
adc
je
imul
out
test
dec
push
enter
add
mov
pop
or
inc
jae
nop
and
addb
xor
aad
and
lods
mov
call
mov
jo
sub
clc
lcall
jp
repz
inc
clc
dec
cmp
mov
cltd
mov
lcall
sbb
mov
and
xor
out
xor
test
add
addl
daa
mov
loop
mov
and
and
inc
notl
sub
outsb
jns
fstps
cmp
pushf
adc
das
push
dec
sbb
adc
or
push
dec
in
pop
jl
inc
or
in
dec
pop
lret
add
rcr
ret
incb
sahf
das
incl
mov
rolb
mov
add
repz
add
mov
sti
int3
cmp
daa
xor
inc
sub
push
fldt
loope
jl
sahf
rcrb
mov
sbb
dec
imul
iret
sbb
sti
scas
insb
or
fdivrs
lret
subb
ret
incb
xchg
or
push
sbb
xchg
inc
sbb
add
sub
pop
icebp
dec
decl
mov
push
jae
aam
push
pushl
in
mov
sbb
addb
lods
fwait
adcb
lock
aaa
enter
int
nop
das
leave
gs
jg
pop
cld
call
gs
dec
lods
push
fstps
inc
push
pop
dec
push
daa
cmc
loopne
mov
xorb
out
mov
cmpsl
cmp
adc
fisubrl
in
subl
fwait
aaa
jmp
lahf
in
in
loope
cwtl
or
mov
stos
cmp
mov
arpl
cmpsl
hlt
sub
in
inc
out
das
add
daa
inc
daa
das
mov
add
fnstenv
aas
iret
pop
daa
test
aaa
xchg
pusha
cmpsl
add
xor
lcall
inc
and
or
popa
sub
sbb
inc
sub
lahf
cwtl
dec
lcall
push
sbb
aam
jl
sbb
xor
push
or
inc
addr16
lret
in
lcall
sub
mov
rclb
daa
pop
pusha
jmp
pop
jno
ss
iret
jnp
push
pusha
movsb
push
inc
in
mov
xor
mov
inc
sub
movsl
pop
and
push
mov
push
jmp
inc
push
xchg
fwait
subb
push
fwait
pop
add
pop
jae
xor
push
jnp
test
out
hlt
jne
insl
pop
xlat
and
jmp
push
adcl
jne
mov
inc
je
loopne
mov
pop
jbe
push
sub
sahf
mov
pop
sbb
addr16
dec
pop
vrcpss
ficoml
rorb
mov
js
mov
js
inc
xchg
shrl
adc
push
insl
fisubrl
and
ret
sbb
pop
ud1
mov
rcll
mov
sub
out
jp
sarb
xor
gs
loop
shll
cmp
push
jns
sub
add
test
test
pop
cld
shll
dec
and
push
jecxz
lret
push
push
je
push
stc
sub
mov
data16
mov
in
cmpsb
mov
bound
xlat
mov
push
push
and
mov
sbb
adc
cmpsl
mov
cmp
sub
cmp
add
scas
mov
inc
mov
lcall
jmp
movsb
mov
int3
adc
cmc
btc
mov
das
int3
cmp
shlb
icebp
mov
sti
jns
imul
and
divl
movsb
testb
mov
mov
inc
pop
into
iret
stc
unpcklps
inc
inc
adc
sbb
dec
movsl
mov
sub
decl
cld
add
and
mov
jle
stc
xchg
pop
jae
insl
shl
sub
sub
testl
inc
and
ja,pn
lods
jecxz
cmc
je
in
fwait
lret
daa
xor
mov
add
fsub
jns
insl
ffreep
adc
addr16
lods
xchg
mov
jp
loopne
cmp
inc
imul
pop
add
push
xchg
rcrb
fs
lods
lock
cmp
mov
jo
mov
mov
pop
lcall
insl
addr16
cmp
ss
stc
xchg
sbb
jb
add
cmpsl
jge
mov
into
dec
aaa
fs
push
adc
ja
nop
mov
add
inc
dec
adc
cmp
xchg
adc
fsubs
imul
sub
into
repz
xorb
inc
in
and
mov
xchg
outsl
fcoml
fidivrl
in
mov
or
mov
arpl
dec
xor
das
pop
mov
jge
ret
xchg
jns
mov
es
sahf
push
fucomip
cli
jp
sub
cmpsl
insb
mov
test
inc
fists
aaa
adc
cltd
adc
gs
les
pop
dec
cli
call
cmp
pop
xor
sub
jmp
mov
xchg
xor
cld
fs
jbe
test
sub
sbb
fimull
xor
sbb
add
mov
mov
xor
das
sbb
mov
cmp
jp
inc
push
xor
popf
addr16
das
and
icebp
fs
xor
imul
inc
in
dec
xchg
insb
jo
or
adc
push
orb
jge
cmc
rorb
mov
outsb
out
and
pop
add
mov
push
and
adc
lods
enter
dec
sub
push
jns
pop
inc
out
scas
add
inc
jmp
cmpsl
ret
fcomps
inc
mov
cld
mov
lcall
fs
push
jecxz
mov
orl
xchg
and
ret
lock
sbb
xor
ja
in
pop
repz
and
push
out
push
inc
push
pop
sbb
xor
xchg
cwtl
push
sbb
scas
cmp
sub
jl
mov
sbb
fisttpl
test
pop
mov
pop
cmp
roll
popf
xor
push
and
aas
sbb
and
test
mov
add
xlat
test
fdivrs
in
mov
cmpb
out
jmp
scas
pop
inc
stos
add
cltd
in
imul
cmp
mov
mov
inc
or
inc
sbb
cmc
std
out
fidivl
add
test
xor
inc
xor
and
mov
repnz
int3
mov
pop
inc
lods
cltd
cmpsb
sbb
mov
cmp
sahf
pop
enter
jns
addb
rcr
jo
mov
cld
or
or
idivb
aaa
popa
xchg
mov
stos
and
bound
pop
pop
sahf
idivw
lea
adc
stos
or
pandn
ds
jge
mov
jbe
rorl
lret
mov
movsl
insl
and
inc
repz
push
sub
out
pop
mov
scas
in
jb
aam
jne
bound
or
jp
shlb
sarl
sbbb
jl
xor
adc
leave
push
mov
in
jb
xor
xchg
lret
movsl
mov
sub
xlat
xchg
cmc
arpl
pop
mov
test
das
jecxz,pt
pop
inc
ljmp
dec
in
repz
out
bound
into
idiv
imul
bound
mov
xor
aas
movsl
sub
add
in
daa
aas
jb
repz
test
or
sub
sub
lods
add
sbb
xor
popa
mov
stos
and
sub
push
pop
outsl
xchg
push
jmp
mov
scas
outsb
pop
fdiv
cmp
inc
dec
jle
es
fldl
fnstenv
icebp
mov
jns
jae
mov
push
and
stos
lds
mov
fbld
mov
and
iret
sti
out
ret
dec
insl
fadd
push
in
stc
jge
cs
and
leave
or
pusha
xor
fdivrl
stos
or
mov
call
insb
adc
add
imulb
lcall
test
sti
cmp
pop
jecxz
inc
adc
ljmp
test
adc
inc
mov
fcompl
scas
std
fbstp
lods
loop
rcl
sub
or
stc
xchg
negl
and
mov
pop
incb
subl
call
add
outsl
push
jge
lea
dec
cmpsb
movsb
pop
mov
iret
xor
lahf
pop
mov
cmp
xor
xchg
or
and
outsb
lods
jae
mov
mov
arpl
ds
inc
xor
int3
adc
push
inc
push
out
jne
dec
popa
push
and
adcl
sub
or
pop
das
jae
xor
mov
mov
ret
push
add
xchg
pop
jne
inc
mov
push
sbb
js
sbb
push
cmp
sti
fildll
cmp
xchg
jle
mov
enter
jo
shll
or
fwait
lahf
xor
adc
lock
lret
fwait
clc
out
mov
jae
xor
dec
aaa
jo
test
arpl
rolb
dec
inc
mov
jle
and
ds
pop
pop
cmp
inc
mov
xorb
xchg
pop
pop
mov
ror
mov
decb
xchg
sbb
xchg
inc
out
imul
cmp
sub
loop
fnsave
test
rcll
lods
repz
add
xchg
adc
pop
dec
sub
pop
xor
fistpl
testb
lds
or
in
repz
xchg
sahf
pop
pop
mov
mov
fisubrl
mov
pop
nop
inc
in
dec
cltd
xor
sub
xchg
inc
mov
add
lea
and
pop
fistps
aad
rorl
ljmp
out
jecxz
add
ss
mov
movb
inc
outsl
mov
ret
jecxz
stc
int3
add
mov
xchg
pop
push
rsqrtps
dec
mov
mov
xchg
mov
lea
fs
pop
loopne
cmp
jae
in
lea
mov
lret
dec
cmp
jecxz
cmp
pop
push
inc
iret
adc
push
mov
pusha
dec
inc
adc
sbb
or
dec
fbstp
jns
int3
inc
cmp
into
subb
cltd
das
fsubrs
mov
pop
mov
push
or
cmp
jge
jle
sub
jge
shrl
lods
clc
lcall
xor
fnsave
or
popa
sub
xor
fistpl
orl
mov
rorl
xchg
mov
xchg
lock
jns
data16
inc
jge
rorl
fs
ret
popf
dec
mov
bts
jmp
mov
outsl
lds
data16
pop
cmp
push
decl
mov
cmp
mov
xchg
ret
jp
out
call
or
push
mov
movsb
mov
jge
js
jns
cmpb
sub
or
pusha
pop
aad
in
daa
repz
mov
fnstenv
sub
cmp
in
pop
jns
lods
pop
and
push
jmp
cmp
les
add
call
sub
shll
fldl
sahf
inc
sbb
lods
mov
into
bound
in
xchg
out
loop
mov
cmp
mov
lret
push
push
popf
out
out
xor
scas
push
mov
cmp
je
sbb
xchg
icebp
dec
ja
ds
mov
lahf
adc
xor
imul
xchg
call
or
stc
enter
shll
imul
fs
cmp
inc
popa
mov
fnsave
add
icebp
dec
xchg
inc
jae
std
add
jmp
lahf
mov
push
icebp
dec
sub
jmp
mov
ljmp
jg
mov
sub
inc
cwtl
int
mov
cmp
out
add
jmp
popa
lret
push
mov
mov
arpl
lret
xchg
repnz
cmp
sbb
loopne
test
and
sbb
fstpl
movsb
fdivr
add
cmp
inc
lods
add
ficoms
sub
adc
inc
mov
cs
and
cld
jmp
fbstp
cmp
rcr
dec
xor
mov
pop
mov
dec
popa
sub
inc
adc
mov
push
jp
xor
mov
add
out
outsb
mov
pop
sbb
adc
pop
xor
outsb
iret
into
inc
std
sbb
add
push
in
jmp
mov
mov
ficoml
lock
adc
add
in
xor
daa
mov
test
aam
mov
fistpl
jne
jl
xchg
pop
mov
cmp
push
inc
or
out
cmc
movl
fnstsw
dec
mov
cmp
adc
jge
fs
pop
subb
or
cmp
nop
ljmp
and
add
or
test
xchg
xlat
negl
pop
mov
lea
test
faddl
xchg
sub
arpl
jno
je
out
rorb
mov
lea
push
sub
mov
filds
cmpsl
mov
mov
xor
adc
cli
loop
shr
xor
lret
push
in
outsb
pushf
pop
or
push
inc
rorb
jb
sbb
lods
popf
fcomi
pop
bound
jge
ss
xchg
dec
fisubrl
sub
xchg
xor
bound
adc
dec
mov
cwtl
insb
pop
cltd
mov
fldl
mov
mov
jg
push
jo
test
test
jle
lea
je
mov
fadds
push
test
fisttpll
das
xor
cmpsb
push
add
mov
jle
mov
daa
fildll
push
leave
cmp
cmp
and
mov
cmp
mov
lods
push
xchg
loopne
dec
das
pop
mov
stos
ss
dec
movsl
xor
jecxz
push
notb
pop
push
jecxz
in
cmp
scas
mov
cs
sbb
into
je
add
lea
add
les
xor
sahf
push
lcall
popf
xchg
ret
nop
dec
pop
xor
and
pusha
in
sti
inc
insl
xchg
dec
xor
pop
mov
cwtl
orb
imul
fldenv
mov
popl
pop
mov
jns
push
push
pushf
add
xor
aaa
cmpb
cmp
aad
inc
push
lret
mov
sbb
adc
adc
je
cli
xor
or
xchg
stc
pop
aaa
loop
insl
xchg
and
xor
cmp
add
cmp
cmp
loopne
iret
ret
add
cmp
movsl
daa
pop
repz
ret
add
cwtl
push
ljmp
dec
stc
dec
cmp
ja
pop
insb
add
jae
sub
mov
sub
xchg
xchg
lea
xor
gs
stos
dec
xchg
jl
gs
and
test
outsb
pop
outsb
setb
cmp
pop
lcall
rol
cltd
repz
mov
push
push
dec
adc
mov
or
or
pusha
and
lahf
out
fisubl
or
aaa
and
pop
pop
and
sahf
mov
aad
notb
icebp
cmp
int
rcrl
mov
int3
ret
cmp
cld
sub
lods
xor
jle
ljmp
outsl
in
fdivrs
jl
jmp
add
adc
dec
mov
mov
jno
std
stos
or
std
or
ja
push
loope
mov
dec
mov
test
sub
sbb
xchg
icebp
and
pusha
or
loope
int3
mov
mov
dec
loopne
mov
xchg
inc
push
mov
fmull
hlt
jge
xor
xchg
fs
xor
enter
inc
or
mov
xchg
outsl
pop
or
and
push
test
xor
lods
int
cmp
cwtl
or
data16
pop
adc
jae
test
fildl
dec
mov
xchg
outsl
js
lods
or
test
sti
mov
call
stc
fmul
push
xchg
test
int3
fldcw
push
xchg
ds
and
cmp
add
mov
push
lea
int3
xchg
adc
mov
push
test
rcrb
cmp
cltd
pushf
xor
outsb
sbb
ret
aaa
mov
test
sub
jmp
jmp
in
mov
jns
mov
int3
xchg
sbb
xorl
stc
jp
sub
adc
add
stos
or
xor
fmulp
in
scas
mov
lds
orb
xlat
ror
fwait
and
fldt
push
clc
mov
leave
test
and
mov
fstp
std
pusha
mov
mov
xchg
shrw
sbb
xor
jb
push
jb
adc
mov
xchg
dec
push
pop
push
jns
rcl
inc
cmpsb
dec
xor
pop
cmpsl
call
xchg
cld
sarb
and
jmp
and
or
push
inc
sub
or
and
mov
mov
nop
mov
mov
lds
mov
lods
mov
adc
out
xchg
and
popf
test
jp
cmp
out
push
mov
addr16
ss
aas
jl
cmc
inc
cmp
inc
inc
jbe
das
fsts
mov
jecxz
sub
repz
sub
nop
or
mov
dec
push
xor
jne
xor
mov
adcl
or
loop
pusha
jne
bound
sbb
sbb
test
adc
pop
lds
sarb
push
popf
lret
jns
mov
jmp
xchg
and
mov
imull
inc
pushf
adc
mov
clc
mov
dec
int
xor
push
das
stc
outsb
add
mov
movzwl
xchg
mov
out
aam
cmpsb
movsl
pop
js
mov
popa
lret
sahf
in
jb
cmpsl
popa
adc
cmp
lahf
movsl
mov
add
pop
mov
sub
dec
adc
cld
mov
pop
dec
aaa
in
js
xchg
mov
xlat
xchg
add
add
daa
sub
add
ret
mov
cmpb
cmp
subb
mov
mov
outsl
mov
lahf
arpl
jle
popa
lock
adc
jmp
jl
pop
popa
movsb
aas
int3
dec
mov
lods
sub
cmp
lods
sub
fisttps
adc
repz
lahf
rclb
mov
jge
cmpsl
shlb
dec
inc
xor
jmp
mov
xlat
pop
mov
mov
xchg
mov
and
mov
pop
push
xchg
xchg
jle
add
arpl
icebp
mov
mov
aas
leave
cltd
mov
xchg
dec
testl
mov
imul
ss
in
mov
jle
sub
mov
dec
lret
mov
fsubs
ja
hlt
cmpsl
xlat
pusha
xlat
cltd
jmp
stc
test
mov
mov
xchg
push
cltd
imul
xor
les
add
hlt
push
rcr
xor
mov
clc
lods
cwtl
cwtl
jb
repnz
adc
iret
in
pop
adc
jg
loop
xor
xchg
cmp
mov
sub
cli
fcmove
jg
daa
pop
jnp
inc
outsb
cmp
inc
xchg
lods
lods
mov
push
mov
pop
sti
jne
addr16
rcrb
jns
mov
cltd
mov
and
pushf
jbe
dec
in
clc
jmp
cmp
dec
sahf
popa
fcom
and
jle
mov
ss
mov
dec
inc
sub
dec
fsubrl
or
es
dec
mov
inc
mov
inc
pop
dec
mov
stc
and
mov
loopne
scas
or
outsb
xchg
aad
or
dec
jge
cmpsb
dec
mov
push
pop
les
xor
imul
icebp
jb
sbb
xor
jne
ret
push
inc
insb
roll
cmp
push
xor
dec
insb
add
sbb
mov
in
cmp
jno
gs
adc
cmp
arpl
loopne
out
je
jp
and
pop
pop
jnp
jne
aad
pop
pop
nop
fbstp
xchg
inc
loop
aaa
or
push
jne
cli
pushw
lahf
and
xor
cmp
ja
and
dec
lcall
ja
and
aaa
enter
mov
cmc
mul
aad
pop
aaa
inc
sarb
in
fwait
sbb
pop
hlt
jp
pop
shll
stc
ret
sti
pop
out
push
or
dec
jg
or
add
cmp
sbb
sub
es
decl
ds
lcall
inc
dec
lret
inc
push
pop
das
stos
loopne
adc
mov
ljmp
xchg
and
sbb
mov
inc
mov
cltd
pop
sbb
pop
pop
inc
cmc
and
sbb
pop
and
mov
aas
test
fsubrs
xchg
push
xor
mov
not
movsl
sub
mov
pop
cld
fisubrs
xchg
popa
fwait
out
lahf
rclb
scas
add
sti
inc
sbb
mov
lret
test
fisubs
scas
sub
push
iret
mov
pusha
test
ljmp
push
inc
mov
pop
lret
adc
std
push
sub
jmp
popf
fmulp
mov
ret
imul
or
loop
sbb
jle
in
fwait
inc
fists
ljmp
loopne
adc
sbb
mov
shlb
shlb
mov
imul
rcll
popf
push
jmp
clts
dec
xor
add
jno
inc
mov
cmp
jmp
test
imul
push
xchg
jmp
push
aam
cltd
ret
loop
inc
imul
dec
push
and
add
dec
xor
rolb
shll
cmpb
xchg
adc
movsl
xor
test
jne
mov
cmp
cmp
loopne
sbb
jmp
fmuls
mov
add
mov
mov
jmp
cltd
sahf
xchg
jp
shl
nop
or
ret
mov
popf
jp
xor
in
div
aas
fidivs
shl
out
xchg
mov
cs
mov
push
jns
negl
and
shlb
or
push
jmp
jmp
js
call
pusha
and
mov
loope
mov
cmp
lret
fbld
movsb
xor
mov
sub
push
shrb
or
and
and
push
fxch
mov
mov
test
subb
rorb
sub
push
test
sbb
xchg
push
fs
arpl
sub
mov
xor
roll
pusha
inc
sti
ret
mov
dec
jp
mov
mov
cld
imul
jae
test
mov
jne
pop
mov
cmp
adc
inc
mov
leave
sbb
in
pop
sbb
stos
mov
nop
inc
loope
js
pop
ds
fcompl
lock
sbb
and
xor
or
jb
mov
fcmovnbe
fmuls
inc
lods
or
dec
pop
sub
xor
inc
xor
push
push
mov
sbb
adcb
out
in
filds
and
mov
movsb
adc
sub
in
dec
or
fisubrl
movsb
sbb
mov
push
dec
push
push
iret
sub
mov
int
inc
ja
inc
fcompp
push
mov
or
sbb
jp
cmp
ret
lds
inc
push
lahf
xchg
nop
and
jnp
xor
sub
dec
inc
sbb
inc
adc
sbb
stc
inc
and
mov
lea
add
scas
mov
orb
ds
push
cs
inc
dec
outsl
xor
std
dec
jge
push
mov
sbb
push
fucom
mov
mov
mov
mov
mov
stos
or
or
sbb
dec
scas
aad
pop
pop
jg
sbb
xor
dec
lock
int3
les
add
lds
fnsave
inc
sbb
inc
idivl
adc
dec
lods
jae
inc
sub
nop
fs
insl
xor
xchg
xor
mov
mov
pmuludq
sub
cs
shl
incl
les
mov
or
push
ficoml
mov
inc
push
fisubl
jo
or
sub
adc
or
pop
sub
mov
mov
imul
mov
sbb
pop
inc
test
jp
or
push
data16
add
out
dec
scas
sbb
into
and
jle
push
cmp
sbb
or
dec
mov
mov
js
aam
jle
fs
mov
out
les
in
cltd
insl
iret
mov
dec
inc
enter
ret
dec
mov
mov
inc
jne
jmp
and
sub
and
mov
mov
andb
cltd
add
in
mov
rcll
test
and
xor
mov
pop
popa
sbb
in
cmpl
sub
adc
push
sbb
cli
jmp
inc
or
mov
les
stos
dec
pop
mov
sarb
sti
jns
popf
rclb
cmp
push
sti
pusha
dec
mov
push
pop
jge
shll
sti
push
cli
mov
stos
movsl
push
mov
mov
jle
jb
mov
es
mov
mov
cmpsb
outsl
mov
xchg
pop
adc
dec
and
add
std
jle
cmc
sbb
or
bound
pop
push
add
int3
adc
lret
mov
es
pop
or
pusha
rorl
imulb
push
in
sub
fwait
sub
mov
xor
test
xchg
sbb
and
les
outsb
in
shll
jle
sub
movsb
cmp
pop
stos
fcompl
jg
cwtl
and
sbb
dec
adc
mov
cwtl
push
pop
fxch
frstor
jno
dec
jle
cmp
jmp
mov
dec
repz
pslld
cmpsl
popf
out
inc
inc
mov
xor
and
mov
xor
inc
into
es
sbb
jg
push
mov
ret
mov
push
fwait
xchg
mov
xor
mov
out
sarl
cmpsb
push
sub
mov
mov
xchg
pop
or
adc
mov
push
cmpsb
cmp
jbe
pop
inc
or
lahf
hlt
sub
sbb
stos
inc
push
cs
sub
outsl
gs
inc
adc
call
inc
sub
push
imul
into
adc
mov
loopne
ret
xchg
adc
scas
push
jg
cmp
pushf
adc
outsl
stos
decb
cmp
stc
pushl
aaa
inc
sbb
dec
fidivs
mov
push
loope
repz
out
push
outsl
test
in
ljmp
pop
shll
dec
out
into
leave
mov
mov
jmp
xor
test
adc
call
sahf
xor
cmp
jge
push
cld
xchg
imul
pusha
fs
das
ret
push
lods
push
data16
repnz
xchg
jle
mov
pop
push
push
movsb
add
push
out
push
stos
shl
cmp
push
jmp
scas
and
movsl
jo
in
mov
into
shrb
inc
cltd
xchg
mov
enter
in
lods
call
pop
sbb
nop
adc
xchg
adc
xor
dec
inc
dec
add
scas
test
aam
or
mov
aaa
dec
push
pop
sub
and
les
xor
jmp
cmpsb
pop
test
lods
push
fistps
fs
ljmp
test
mov
mov
mov
jg
mov
arpl
cs
in
cli
xor
inc
popf
mov
mov
jns
in
lods
pop
cltd
imul
andb
cmp
cmpsl
dec
xlat
lcall
jmp
cltd
push
pop
and
lds
push
int
mov
mov
push
jne
dec
cwtl
repnz
jno
es
sbb
das
fdiv
xor
in
insl
adc
push
aas
and
xor
ja
cmp
jo
cmp
pop
fbld
add
pop
lds
sbb
stos
clc
lea
int3
sub
dec
leave
adc
ret
mov
inc
lret
xchg
out
cwtl
push
ret
int
clc
mov
into
sbb
push
ret
xchg
lods
jae
xchg
mov
cmc
push
outsb
jbe
mov
stos
mov
add
jmp
adcl
push
sub
nop
mov
or
aaa
fstps
fcomps
sub
ds
fs
pusha
jl
inc
andl
fildll
fldenv
gs
fwait
in
loope
fisubrs
adc
scas
ja
mov
jecxz
and
out
in
rcrb
idivl
lcall
test
scas
jns
mov
cmp
aam
cld
push
sbb
pop
xlat
dec
sbbb
mov
popf
inc
jmp
jmp
pop
in
clc
push
dec
push
dec
adc
adc
push
dec
mov
lods
jae
icebp
je
popf
mov
hlt
test
inc
sbb
mov
xchg
je
push
inc
aaa
in
bnd
mulb
decl
std
outsl
aad
loopne
enter
mov
mov
xor
test
add
fs
rclb
push
add
push
ja
nop
jno
adc
outsb
out
jecxz
jnp
fwait
mov
pop
enter
push
mov
push
push
sub
js
int
xor
mov
ret
lcall
xchg
out
pop
jo
sbb
fstpl
repnz
pop
mov
leave
mov
dec
ja
xchg
lds
cmp
dec
push
xor
mov
lods
imul
pusha
cli
sub
add
rcr
insb
mov
xchg
push
rcrb
push
cmpsb
mov
ror
popf
mov
mov
cmc
daa
mov
imull
mov
sbb
sub
pushf
stos
mov
xchg
stos
xchg
outsl
jle
xchg
dec
cld
xchg
call
pop
out
js
test
mov
popa
add
mov
testb
pop
in
sub
and
push
in
cmp
icebp
pop
or
xor
arpl
scas
dec
dec
pop
iret
popa
adc
push
jle
pop
or
outsb
jbe
iret
pop
bound
outsb
sti
xor
aaa
cmp
cmc
and
dec
shlb
jb
imul
stc
and
inc
fiadds
push
aaa
loope
shrl
test
add
ss
fcmovb
test
pop
sub
push
cwtl
nop
lods
pop
nop
sub
pop
mov
mov
push
pop
cmp
scas
jge
jp
add
out
je
pop
push
add
pusha
mov
cltd
xchg
add
js
cmp
mov
mov
xchg
push
pop
inc
lret
aaa
shr
push
jmp
outsb
int
sub
push
jae
sbb
test
popf
imul
scas
fwait
push
test
insb
push
xchg
cmp
mov
mov
xor
fdivrl
hlt
sub
add
cmp
pop
stc
call
adc
pop
dec
std
push
mov
push
in
fisubl
push
mov
aad
popf
xlat
ret
lods
or
mov
cmpsl
sub
std
pop
movsl
adc
push
outsl
jae
test
dec
adc
mov
add
or
pop
ficomps
jmp
dec
xchg
cmp
fldenv
aaa
add
out
fmul
xchg
mov
in
cmp
pop
stos
sub
lret
xchg
loope
pushf
sub
adcl
fisubl
and
arpl
repnz
mov
repz
dec
and
outsb
pop
inc
mov
sbb
mov
pop
and
shll
ljmp
lea
adc
out
mov
mov
outsb
mov
and
cmpsl
sbb
mov
std
mov
out
cs
add
inc
and
adc
insb
xchg
in
cld
push
inc
mov
mov
sbb
outsl
lds
cmp
inc
push
dec
lods
jno
repnz
sub
popf
pop
scas
mov
repnz
adc
push
ss
lcall
call
cltd
les
loope
outsl
lock
xor
aas
js
cli
ja
and
cmp
outsb
add
dec
pop
out
or
sub
ret
pop
mov
lcall
fwait
jle
sub
test
cmp
addl
xchg
mov
lcall
je
pop
xlat
jbe
jb
insl
dec
leave
cs
mov
xchg
neg
sub
adc
pop
hlt
jno
out
lods
sub
das
xchg
xor
imul
sub
jg
and
repnz
mov
inc
insb
mov
std
es
daa
addr16
pop
pop
sbb
jg
cwtl
lods
jge
xchg
or
dec
or
loop
mov
pop
inc
subb
adc
lea
jbe
mov
sub
mov
xchg
es
mov
lret
aas
insb
cmp
stos
and
push
jg
jl
call
out
rcr
mov
shl
cli
aaa
shll
push
ljmp
out
xchg
and
das
push
push
fadds
add
gs
lahf
push
aaa
imul
dec
lahf
dec
inc
sbb
jmp
push
lcall
add
ljmp
popa
adc
int3
jecxz
lea
sbb
and
jo
cld
stos
std
or
leave
and
ja
and
push
mov
subb
mov
shll
jecxz
shlb
mov
insb
out
push
and
int
test
loopne
test
or
sub
mov
icebp
aaa
imul
aad
fldenv
ss
sarl
cmp
ljmp
adc
ss
in
xor
jne
xor
test
push
xor
les
sbb
mov
and
sub
fs
fiadds
jb
add
mov
sbb
iret
jb
jns
mov
add
dec
or
adc
mov
not
imul
sarb
push
push
daa
mov
sub
das
dec
inc
lods
sbb
rolb
outsl
lds
flds
add
cmpl
jbe
out
push
mov
xor
aad
inc
mov
xor
xchg
or
mov
mov
lods
incb
stos
lahf
lods
xchg
lods
es
notl
aad
std
lds
js
and
fs
cld
mov
mov
call
fldenv
xchg
shll
xor
fimuls
call
xor
outsl
add
and
sub
dec
or
inc
aas
inc
xorl
push
sub
xor
shrb
cmpsb
les
xlat
sti
cmp
js
test
inc
or
ret
ss
xor
xchg
xchg
lock
xchg
inc
cmpsb
cld
stc
cwtl
pop
push
xchg
xor
loop
mov
ss
std
icebp
cmp
cmc
or
push
lahf
ret
mov
popa
dec
aad
js
add
cmp
xchg
and
mov
xchg
inc
movsb
cmp
mov
mov
test
lret
lock
cld
mov
mov
cmpsl
mov
ja
or
or
cmp
add
and
cmc
jns
or
adc
testl
jmp
xor
jecxz
jae
xchg
insl
xor
loopne
xchg
mov
sbb
or
cmp
mov
insl
ficomps
inc
mov
icebp
jge
testb
inc
pushf
std
sbb
scas
jmp
inc
jbe
adc
jne
das
test
adc
mov
cmp
jb,pt
mov
inc
add
or
xor
cmp
jnp
jne
inc
sbb
gs
xchg
pop
push
sub
sbb
add
out
enter
test
lcall
insb
movsb
mov
out
add
adc
out
imul
popa
push
mov
hlt
cmp
test
movsb
or
ss
aas
aad
sti
cmc
cld
in
add
arpl
dec
adcl
sbb
out
sub
pop
push
out
mov
repz
lock
dec
xchg
lahf
push
add
and
adc
inc
enter
dec
push
call
inc
fwait
aad
outsb
jp
loope
call
cmc
sbb
mov
loopne
and
pop
mov
pusha
aas
ss
mov
jge
popf
cwtl
pop
mov
mov
ret
sub
jne
mov
leave
xor
in
gs
xchg
jge
iret
sub
dec
inc
and
hlt
pop
hlt
push
jge
cmpsb
add
dec
jl
inc
add
leave
fsubp
sub
pop
jmp
rolb
push
cmp
push
cmp
or
dec
les
dec
fsubrs
add
lock
andl
into
lods
and
sbb
mov
andl
and
mov
test
dec
cmpsb
sbb
mov
aas
mov
outsl
inc
in
cmp
pop
xchg
loopne
adc
push
mov
call
popa
dec
add
push
push
subb
clc
mov
imul
mov
xchg
mov
or
std
in
and
sarb
jle
clc
dec
push
jle
or
ja
or
cmpsl
push
cmp
cmc
push
std
call
inc
add
testb
pop
scas
dec
inc
xchg
xchg
daa
push
or
aam
cmp
jo
or
xor
cld
sarl
mov
sarl
and
cmpl
lock
popa
addr16
mov
cmp
dec
in
jg
cmp
ss
jge
and
xor
and
fs
sbb
or
aas
mov
out
sbb
xchg
pop
jl
sbb
in
inc
cs
ja
pop
lahf
outsb
pop
jmp
xchg
lea
lret
push
sbb
call
cmp
cmp
daa
cld
push
ljmp
mov
hlt
and
cwtl
fiaddl
mov
add
daa
and
js
jmp
push
repnz
cmpsl
shll
mov
sbb
and
gs
notb
ljmp
cmpsb
pop
shll
mov
ja
enter
mov
mov
test
lods
out
mov
pop
mov
add
stos
rcrb
mov
xchg
lcall
out
mov
add
stc
movsw
xchg
or
pop
jnp
jp
and
mov
jae
scas
stos
dec
in
cwtl
push
out
movsb
jp
arpl
ja
out
imul
jo
mov
xchg
or
lret
dec
or
cmp
bnd
xor
enter
fincstp
add
std
js
adc
rcll
stos
inc
pop
inc
push
push
and
inc
and
int
ljmp
sbb
lahf
push
inc
and
and
stos
in
or
orb
sub
and
addl
inc
lret
add
cmp
clc
roll
stos
adc
xchg
popa
xchg
pushf
and
and
mov
inc
subl
movsb
jl
xor
push
outsb
or
aaa
lret
subb
imul
test
lods
xchg
push
lret
xchg
adc
pcmpeqb
mov
fldcw
insl
stc
cs
movsb
sti
stos
jb
and
popa
jne
push
cmp
push
and
aam
jne
xchg
je
mov
pop
mov
sub
mov
std
jne
popa
out
fsub
mov
ds
or
test
rorb
xchg
sub
dec
adc
aaa
push
jl
iret
xor
sub
xor
dec
push
xor
insl
mov
imul
adc
mov
test
pushl
and
shlb
into
add
sub
adc
sub
xlat
fdivl
xchg
out
out
cld
in
jo
adc
cmp
repnz
push
push
lods
and
lahf
jae
out
popl
pop
int
fnstsw
ret
hlt
pop
call
adc
imul
push
add
and
cli
push
fadds
shlb
movsb
xor
repnz
add
xchg
sub
cmp
movsb
arpl
out
push
xor
cmp
dec
mov
add
pop
dec
lret
das
mov
and
mov
je
loopne
inc
repz
loop
lret
cmp
fidivs
cwtl
movsl
xchg
pop
jne
inc
insb
adc
bound
cmpsb
mov
adc
rep
xor
movsb
add
or
pusha
jge
mov
mov
add
aaa
bound
cmpl
pop
test
shl
test
je
leave
mov
push
stc
shl
or
je
adc
inc
inc
add
stc
pop
pop
les
addr16
cmp
dec
xchg
ljmp
mov
int
repz
es
mov
and
fnstsw
movsb
andl
daa
xlat
lods
mov
jge
xchg
mov
xchg
pop
or
push
out
ret
aad
add
sub
addr16
push
sbb
sti
or
jge
jp
lret
and
mov
fisubs
lock
xlat
pop
xlat
loop
jo
inc
fldenv
sbb
adc
es
push
dec
xchg
sub
xorps
test
repnz
xor
std
loopne
lahf
movsb
mov
int3
pushf
pop
ret
rep
pop
adc
xchg
or
out
jnp
icebp
in
xor
pop
mov
cmp
jge
or
outsl
mov
mov
mov
add
les
mov
mov
cmp
pop
jo
frstor
mov
lea
and
scas
int3
enter
dec
sti
dec
mov
fst
cmp
jl
cmp
pop
sbb
ret
out
push
push
out
ljmp
ret
cmc
xchg
push
adc
push
jns
pop
or
cmpb
in
fs
cmp
and
fldl
cltd
inc
jo
negl
fwait
mov
out
cltd
lods
fildll
jbe
or
cld
pop
cmp
adc
pop
xchg
cmp
cltd
stc
aaa
dec
mov
pop
mov
mov
jg
pushf
mov
andb
jns
das
inc
scas
sub
push
pop
leave
inc
push
insl
mov
cs
or
and
mov
push
inc
and
cli
sub
negl
sbb
mov
fldl
je
shll
aas
mov
inc
outsb
jmp
jmp
xchg
sbb
push
jae
arpl
fcoml
cltd
and
sub
push
sub
lock
addr16
in
rcr
xor
popl
jecxz
pushw
aad
js
or
enter
sbb
orl
mulb
jmp
popa
mov
ja
jle
sarb
pop
aas
insl
into
lock
add
jne
jne
rcrl
adc
mov
stos
test
add
test
in
adc
das
leave
pusha
jl
mov
jp
push
daa
hlt
hlt
sbb
sti
outsb
ror
mov
rcrl
mov
into
push
push
mov
pop
jge
sub
xrelease
adc
sbb
ss
mov
cmc
das
lret
lcall
fisubl
sbb
scas
in
cwtl
push
inc
pushf
scas
pop
rcr
shll
mov
xchg
rcrb
fadd
inc
subl
sbb
pop
fwait
xchg
out
mov
ret
pop
popa
insb
in
into
in
outsl
sarl
inc
fldenv
xchg
out
or
pop
lea
fucom
mov
xor
lahf
lret
cmpsl
pop
in
mov
lods
adc
add
cmp
pop
test
in
cld
jecxz
faddl
xchg
or
push
lahf
ficompl
sub
dec
dec
int
adc
mov
ret
stc
test
pop
pop
inc
rcrb
jmp
iret
fldcw
jb
and
jle
ja
mov
dec
into
adc
pop
int3
test
dec
push
int3
insl
notl
mov
add
ret
adc
push
mov
gs
in
xor
jl
test
inc
inc
pop
cwtl
mov
ret
mov
sbb
aas
mov
cs
insl
fbld
push
out
shlb
stc
mov
mov
mov
sti
xor
add
xor
and
or
int3
xchg
ficoms
daa
lea
rclb
lcall
clc
sbb
inc
dec
lcall
xchg
jnp
push
fsubs
pop
xchg
inc
aaa
cltd
shr
cmp
ret
or
inc
adc
sub
stos
and
ss
mov
es
iret
xchg
inc
sti
mov
xchg
lods
jns
mov
enter
aas
mov
repnz
stos
out
mov
inc
sbb
pop
pop
mov
adc
jg
inc
mov
cmp
ljmp
and
xchg
cmpsl
jmp
mov
mov
adc
xchg
imul
jns
scas
jg
mov
push
mov
jb
mov
mov
mov
pusha
movsb
add
xor
mov
jl
fsubrs
sbb
stos
ljmp
dec
mov
lds
mov
push
or
shll
sarl
inc
iret
jno
stos
mov
sub
jecxz
cmpl
add
pop
dec
jecxz
push
cmpsl
in
mov
jge
mov
shlb
mov
push
scas
popa
enter
jl
xchg
loope
andb
stc
xor
shll
adc
or
lahf
or
out
inc
out
inc
ljmp
je
dec
add
loop
out
or
xor
adc
outsb
pushf
cld
into
scas
pop
cmp
loope
mov
pop
in
lds
lret
inc
addr16
ds
xor
insl
xor
dec
and
jno
test
push
iret
xchg
loopne
push
sahf
sub
pushl
mov
inc
addr16
push
ffreep
push
lods
popl
push
sbb
repz
adc
dec
pop
cmpsl
or
add
jne
sbb
push
xor
lea
lods
outsb
dec
inc
cmp
jg
push
fistl
std
push
add
cvtpi2ps
add
pop
lea
fldcw
lret
add
mov
lds
arpl
lea
sub
repnz
into
test
push
pop
sbb
jp
push
or
sub
jecxz
shrb
inc
out
mov
adc
mov
lret
push
or
sbb
ds
ljmp
or
dec
xchg
pop
cld
mov
fnsave
scas
nop
inc
dec
or
lods
idivl
xor
sti
mov
je
popf
push
mov
ficompl
mov
jecxz
or
dec
xchg
ja
into
stc
mov
jecxz
lahf
inc
orb
add
inc
movsb
sahf
cmpsb
clc
into
out
stos
push
in
inc
daa
push
inc
pop
dec
inc
mov
push
mov
int
es
loope
xor
mov
int
pop
dec
jno
sbbl
mov
pop
test
xchg
popf
sbb
push
inc
data16
test
pusha
iret
fsts
jbe
ljmp
cld
dec
insl
popl
dec
ret
movsb
pusha
xchg
cmpsl
rorl
ljmp
add
sub
aas
call
sbb
mov
xchg
addr16
lods
fs
dec
jnp
call
push
pop
sub
shr
jnp
ret
sbb
mov
divb
or
ds
ret
inc
add
push
cmp
xor
add
push
shl
sub
mov
mov
xchg
sub
push
into
enter
nop
xorl
shrl
ja
mov
push
jg
outsb
jbe
cmp
mov
pop
sbbl
mov
mov
sub
out
jne
sar
adc
aas
fsubs
lcall
aad
lods
mov
mov
mov
rorl
or
mov
adc
dec
mov
movsl
push
lcall
and
fldenv
mov
scas
out
inc
xchg
std
xchg
add
xchg
dec
jmp
in
pop
imul
outsl
ret
inc
call
jg
insl
sub
sbb
xchg
test
cld
xor
pop
incl
pop
sub
mov
lds
scas
add
je
mov
nop
fcomi
cwtl
mul
push
fimull
push
push
fisubl
push
bound
daa
fsubl
test
cmp
xchg
sub
dec
xchg
mov
xchg
mov
dec
xor
jp
inc
pop
or
repnz
outsl
jecxz
fisubrl
push
inc
clc
aaa
popa
cmpsb
das
dec
add
nop
fwait
xor
or
ja
scas
mov
jl
adc
xchg
dec
mov
test
fistl
subb
addr16
lea
sbb
jmp
push
sbb
pop
sarl
xchg
mov
mov
shlb
dec
add
inc
mov
ror
jno
push
mov
out
rcll
dec
lret
clc
test
cmp
inc
sub
sbb
dec
sub
xor
orl
sub
and
int
xor
sbb
sarl
lock
jnp
adc
dec
lods
mov
sub
pop
ljmp
es
loopne
mov
int3
mov
mov
lret
repnz
mov
mov
cmpsl
jge
mov
or
sbb
mov
push
popa
insb
sahf
test
fwait
add
es
cmp
sti
dec
and
push
es
add
inc
push
mov
mov
cmp
xor
lock
dec
mov
pop
sbb
ret
inc
aad
loop
test
add
mov
in
lret
mov
arpl
mov
inc
mov
mov
ljmp
xor
addb
sub
mov
fldt
inc
cmp
adc
mov
sbb
inc
outsb
mov
fwait
lahf
sahf
push
rcll
adc
mov
and
mov
lock
out
sub
lea
mov
fisttpll
pop
sub
sbb
jns
push
es
cmp
aas
aas
shl
xchg
fcompl
and
push
shll
aaa
mov
pop
jbe
jo
cld
into
outsl
repz
insl
inc
fcmovne
lret
sbb
icebp
pop
pusha
les
fistl
mov
sti
fdiv
sub
loope
and
in
in
push
mov
add
push
mov
and
mov
dec
pop
pop
dec
xchg
add
and
iret
mov
stc
nop
icebp
fisttpl
adc
mov
and
ds
mov
iret
mov
popf
inc
xlat
daa
sbb
scas
les
outsl
or
lock
xchg
add
fidivrs
outsl
ficompl
xor
inc
sub
dec
xchg
cmc
jo
xor
data16
pushf
sub
or
dec
sub
add
mov
fstps
jns
jnp
mov
test
mov
inc
sub
dec
test
ja
cmc
aaa
mov
clc
jl
and
sbb
pop
jp
bound
stos
pusha
arpl
cwtl
lret
sbb
mov
outsl
jle
jb
clc
js
imul
push
mov
iret
xchg
jns
xor
hlt
sub
xchg
lods
cmp
mov
enter
xchg
out
enter
xchg
inc
jbe
arpl
enter
ror
in
xor
clc
imul
in
sbb
mov
pop
pop
jae
fisttps
mov
mov
repnz
push
sub
mov
out
add
addr16
out
and
ret
push
inc
leave
jnp
insl
dec
mov
mov
sarl
push
imul
sti
or
cmp
pop
notl
inc
adc
mov
scas
imul
sbb
sub
push
mov
xor
pushf
xor
pushf
inc
insl
mov
mov
pop
xor
aam
adc
dec
aad
outsl
sub
das
ficoml
mov
xchg
sbb
loope
pop
xchg
test
and
push
xchg
jo
sbb
and
mov
jg
jns
pop
insl
gs
hlt
push
cmp
ss
lods
stc
mov
mov
das
js,pt
enter
es
pop
rcl
mov
imul
push
mov
popf
mov
stos
sti
jns
pusha
dec
arpl
hlt
cli
arpl
mov
lea
mov
inc
push
and
sti
cltd
jno
bnd
fsubrs
subl
and
push
cmp
cmpsb
pop
pop
mov
pcmpgtw
test
jg
pop
pop
xchg
lea
fidivs
adc
pop
mov
hlt
mov
push
xor
in
pop
xlat
ja
jg
shrb
addr16
push
aaa
data16
mov
adc
sahf
mov
mov
mov
fimull
adc
not
sub
daa
outsb
xorb
xchg
jp
popf
xchg
out
stos
sub
jne
xchg
pop
mov
inc
mov
jmp
mov
orb
mov
pop
push
and
xlat
outsb
lcall
mov
lock
adc
xor
sub
in
lods
in
roll
sbb
inc
loopne
xchg
add
cld
xchg
ret
and
dec
jl
pop
and
push
data16
sub
rorb
pop
sahf
inc
ss
les
mov
movsl
add
pop
xor
aam
mov
repnz
enter
xchg
roll
xor
xchg
ljmp
jg
pop
cmp
pop
pop
mov
aad
pop
mov
das
sub
sarl
lds
mov
inc
push
icebp
mov
rorl
movsl
lret
lock
pop
scas
mov
pop
clc
adc
sbb
testb
xchg
fcom
sahf
ficoms
jo
push
shll
mov
ret
scas
dec
xor
fidivs
sti
addr16
mov
jl
lods
shl
pop
and
sti
mov
in
or
cmc
jge
push
push
daa
mov
test
ja
sti
adc
adcb
mov
stc
push
test
ja
pop
out
lcall
test
notb
sarb
leave
andl
inc
jb
shrl
xor
cmpsb
lea
push
add
sti
fimuls
cmp
sub
push
xor
inc
ret
in
xchg
add
nop
popa
arpl
out
adc
or
lahf
in
sub
cmp
aas
movsl
mov
mov
cmp
mov
mov
pop
jno
mov
scas
xchg
movsb
sub
mov
push
ret
shrb
lods
nop
add
mov
cwtl
jo
ss
dec
lahf
dec
xchg
idivl
pusha
imull
push
testl
loopne
gs
ret
sub
arpl
add
setp
cmp
adc
push
push
dec
jmp
mov
add
pop
fidivl
loopne
fcompl
xor
cltd
lret
sbb
loope
adcb
out
mov
popa
test
out
repnz
pop
jnp
push
addl
shl
xlat
jbe
into
push
fldcw
pop
pop
xchg
andl
aad
out
pop
mov
xchg
aaa
mov
incl
aas
sub
adc
push
pop
push
lock
loopne
dec
addl
push
fsubl
scas
inc
or
dec
lea
sahf
xchg
adc
stos
insb
inc
xchg
xchg
xor
or
ficoms
adc
fnstcw
loop
cmp
cmp
dec
or
jge
inc
lcall
cli
jo
cmp
nop
sub
stos
hlt
push
stos
lcall
inc
pop
repnz
push
mov
and
in
addb
pop
add
push
sub
or
jl
pop
xchg
pop
and
scas
mov
cltd
mov
xor
enter
jge
push
pop
bswap
loopne
dec
add
icebp
cmp
fs
aas
push
aam
stos
pop
pushf
hlt
mov
cmc
sbb
sub
add
arpl
cmp
insl
pop
mov
movntps
dec
xorl
fs
cmp
aaa
push
pushf
addr16
adc
movl
popa
inc
mov
mov
push
sub
dec
xor
pop
inc
sub
in
or
xor
sbb
scas
clc
or
xchg
jmp
cmp
push
js
in
test
mov
mov
push
inc
sub
inc
or
xchg
xor
in
xlat
or
sbb
jno
insl
leave
repz
mov
rolb
adc
bound
sbb
jle
jle
pushl
pop
gs
sbb
push
imul
adc
mov
cmp
bound
xor
sub
jae
xchg
push
mov
dec
in
int
icebp
sti
filds
call
popf
arpl
mov
fwait
sub
mov
xchg
push
sub
cmpb
sub
in
sbb
adc
cmp
es
sub
rcr
pusha
sti
out
sub
orb
mov
sub
cmp
or
cmp
addr16
adc
dec
add
dec
push
orps
add
fcompl
push
addb
jno
adc
mov
add
xor
and
movsb
xor
cmc
dec
imul
stos
pop
jmp
out
mov
sbb
mov
mov
nopl
and
xor
push
and
dec
sub
shrl
adc
andl
jae
cltd
mov
in
and
pop
sub
hlt
cmp
call
mov
rorl
ja
nop
jno
mov
test
pop
enter
fs
out
and
mov
pop
sbb
and
push
pop
or
stc
jl
outsb
mov
mov
mov
push
stc
mov
pop
adc
lds
pop
fistps
mov
jne
jl
xor
js
or
xor
es
int
ljmp
mov
int
iret
and
or
ret
cld
mov
gs
outsb
pop
lea
cmp
jno
imul
mov
pop
rorb
xor
lcall
sub
add
dec
add
psadbw
mov
sbbl
pop
mov
mov
hlt
lahf
cmp
incb
xor
jmp
lret
scas
das
adc
in
mov
jns
xchg
jecxz
mov
sbb
sub
dec
lds
lret
inc
sub
fnstcw
repz
outsb
pushl
push
cmc
adc
aam
inc
pop
mov
push
xor
loopne
mov
pop
cmovs
pop
push
cmp
xchg
loope
cltd
sbb
sbb
adcb
push
jno
fldt
jae
lcall
stc
xchg
push
pop
in
mov
mov
mov
stos
mov
jge
cmp
push
sahf
push
lahf
pop
sub
dec
mov
jmp
inc
mov
lock
or
pop
insb
mov
inc
sub
into
sbb
push
xchg
repnz
jbe
xchg
sarb
cmc
jl
fdivrl
push
cli
sub
inc
ret
add
and
cmp
repz
cwtl
out
lret
js
xchg
xchg
test
addr16
push
rorb
es
push
pop
mov
dec
jmp
call
mov
bound
cmpsl
sub
fs
pop
jo
dec
in
xor
cmpsb
icebp
jmp
aam
gs
int
test
mov
lock
mov
jne
mov
dec
push
int
int
xor
popl
add
mov
mov
es
sti
ja
inc
push
cmp
mov
pushf
mov
movb
out
inc
adc
pusha
out
fisttpl
aaa
inc
mov
and
push
ljmp
xchg
das
fisttps
stos
dec
mov
bsr
out
sbb
jge
std
loope
ljmp
fistl
mov
mov
push
out
and
imul
jo
jecxz
mov
mov
sti
ja
outsl
inc
mov
divb
cmpsb
dec
lret
cmpsb
rcrb
fcmovne
push
lock
mov
cmp
xchg
insb
lret
int3
out
movsl
mov
das
xor
insb
hlt
inc
into
xchg
sub
icebp
lds
adc
push
xor
stos
enter
pop
daa
sub
mov
scas
mov
adc
mov
sub
je
inc
mov
jno
push
push
imul
xor
and
dec
gs
sbbb
jne
cmp
mov
lods
loop
push
and
daa
lods
inc
mov
popa
or
adc
and
cwtl
add
fstpt
cld
aas
mov
andb
adc
and
push
ljmp
ret
or
push
xlat
test
sbb
out
dec
xor
sbb
mov
cld
gs
lock
test
call
cltd
and
cmp
lahf
mov
and
pop
pop
cli
hlt
jae
in
testl
mov
xor
adc
test
sub
jl
cmp
push
mov
xor
pop
or
xchg
gs
adc
sbb
cmp
repz
jnp
add
mov
lret
xlat
je
idivb
outsb
push
int
lods
fwait
or
je
mov
dec
mov
fsubl
mov
rorb
push
xchg
add
push
aam
rorl
dec
ficompl
icebp
movsb
mov
ljmp
mov
push
xor
sub
xchg
inc
sbb
scas
mov
mov
stc
cmp
sahf
lahf
cmp
aam
fsub
push
cmp
js
pop
dec
rorl
call
mov
jg
mov
adc
movsb
or
cmp
inc
push
sbb
scas
mov
test
lock
mov
pop
fbstp
pushf
xchg
fcompl
sbb
cmp
inc
lret
gs
cltd
sbb
fistl
cmpsb
xchg
sub
test
xlat
int
lock
xchg
mov
test
adc
push
frstor
jg
jae
push
jbe
std
fxch
mov
xor
cmpsb
xor
hlt
lds
add
ljmp
adc
mov
dec
out
mov
mov
lods
sub
or
lahf
sub
stc
push
cmp
icebp
jg
movsb
std
out
mov
push
sbb
into
fwait
mov
in
insb
sub
and
push
aam
pusha
mov
insl
or
inc
loope
stos
popa
cmp
adc
fwait
ja
adc
out
shll
xchg
and
popa
adc
cvtpi2ps
inc
add
pop
and
in
test
adc
call
add
push
sbb
dec
and
rolb
insl
mov
flds
sbb
ret
dec
sti
repnz
test
out
mov
or
lods
movsl
and
data16
aas
cmpsl
sbb
movhps
decb
jae
int
xor
jg
adc
fucom
loope
jle
mov
add
jo
sub
insb
in
into
xor
lods
add
xchg
add
cli
mov
loopne
movsl
lock
in
push
mov
leave
or
xor
add
in
pushf
mov
push
pop
cmp
pop
fwait
dec
sbb
fisubl
dec
mov
mov
aas
pop
jne
out
cmp
add
mov
xchg
push
adc
cmp
cmp
cld
ret
cwtl
adc
xchg
std
out
adc
xchg
rcll
pushf
mov
add
sub
icebp
mov
out
out
xorl
lret
jno
dec
push
push
xlat
cmp
lea
lahf
cwtl
xor
pushf
movsb
lret
add
inc
in
add
test
dec
xor
adc
pop
dec
sbb
aas
cmp
fisubrs
and
fstps
mov
inc
push
adc
daa
add
mov
icebp
les
sbbb
std
cli
pop
pop
pop
jb
push
test
decb
jg
and
cwtl
push
lret
mov
insl
mov
sub
out
popf
adc
mov
fwait
loopne
adc
bound
lahf
mov
test
sar
mov
shlb
push
xchg
jns
ss
inc
pushf
mov
xchg
jno
fsubrs
xchg
cmp
movsl
cmp
push
lret
loopne
mov
sub
aaa
push
popl
jg
push
cmp
iret
arpl
mov
pop
mov
rclb
sub
adc
dec
shlb
jg
imul
pop
rclb
imul
scas
dec
loop
pop
ljmp
sub
repnz
sbb
xchg
push
imul
data16
or
sub
test
cmc
js
dec
mov
push
inc
fisubrl
dec
push
mov
bound
xchg
scas
mov
mov
lock
and
mov
gs
and
inc
insb
pop
cli
pop
dec
rcrl
pushf
mov
xchg
push
inc
adc
mov
std
lods
sbb
and
sub
leave
pop
xchg
shlb
outsb
mov
cs
and
insb
pushf
movsb
inc
cmp
lcall
pop
je
xchg
jp
iret
mov
inc
lret
pop
inc
mov
ja
jb
in
lds
movsl
test
fsubrl
into
sub
push
movsb
adc
sbb
pop
push
loope
mov
movsl
das
push
mov
jecxz
fdivl
adc
data16
push
cmp
push
inc
and
jge
popf
or
cli
sub
mov
pushf
add
shlb
sbb
loop
cmp
mov
je
inc
pop
push
and
push
sub
int
out
inc
sbb
movsb
fildll
icebp
mov
cld
adc
push
mov
add
movsl
lods
sbb
sbb
sub
call
hlt
fldcw
push
sti
leave
ret
loopne
mov
dec
stos
dec
data16
arpl
lcall
stos
insl
jmp
push
jmp
dec
sbb
arpl
int3
loop
pop
in
or
loop
shlb
push
mov
cmp
push
inc
fst
pop
mov
out
xor
mov
xorl
add
fndisi(8087
or
pop
das
lods
adcl
sub
int
push
cmpsb
cmpsb
jl
movsl
sbb
xchg
or
mov
dec
xchg
lods
in
lock
add
jge
mov
in
pusha
sbb
mov
mov
mov
mov
in
test
stos
pop
push
dec
lcall
push
jo
pop
lahf
daa
cs
enter
adc
pop
jae
lret
sbbb
jl
jnp
fsubs
jns
cmp
sbb
bound
mov
in
rorb
add
addl
aam
ret
ret
or
repnz
loope
fldenv
incl
sub
mov
ja
push
xor
popf
pop
jae
cmp
cmp
inc
cltd
or
sbb
insb
jae
and
sbb
inc
fstpt
scas
aad
pop
addb
je
xchg
adc
fsubrl
out
stos
in
in
adcl
cmp
cmp
imul
mov
loope
popf
push
sub
jns
les
xor
add
jb
jecxz
pop
es
push
imul
insb
pop
rcl
push
mov
adc
mov
imul
cmpl
in
das
xchg
cmp
mov
rol
loope
fwait
cmp
mov
movsb
insl
loope
cmp
in
mov
jp
sub
mov
xchg
xor
les
ds
push
xchg
leave
fdivr
lgs
pop
push
sbb
ds
push
pop
lock
fistps
out
push
pop
inc
pop
add
sahf
push
in
mov
sbb
outsl
addb
js
lock
push
xor
lock
jge
arpl
xor
and
dec
xlat
add
jl
rorl
fsubr
ret
xchg
cmc
dec
jecxz
loop
hlt
cmpsb
adcl
fldl
mov
jo
xchg
js
push
loop
fdivs
repz
fwait
in
mov
inc
loope
pop
jo
inc
cmpl
test
mov
dec
les
js
sub
clc
in
fs
stos
dec
outsb
lahf
int3
int3
adc
outsl
lcall
xchg
shll
mov
out
mov
push
or
inc
or
test
subl
cmpsb
or
mov
push
int3
outsl
iret
popf
or
push
push
inc
ja
jle
add
sub
repz
xchg
pop
das
data16
add
xchg
xor
shlb
jle
mov
jmp
inc
mov
arpl
loop
repnz
adc
test
push
ret
and
xor
rep
and
aad
adc
stos
mov
loopne
mov
xchg
cmp
rcrb
call
nop
fdivrp
and
mov
ret
mov
push
cltd
lret
pushf
lods
fnstenv
movsl
add
imul
push
or
daa
inc
cs
ljmp
gs
jno
sarl
pop
lods
adc
jp
clc
mov
and
or
push
je
subl
xchg
clc
mov
aaa
push
loopne
sub
xchg
push
dec
out
adc
pop
lock
mov
mov
loopne
sbbl
je
mov
xchg
or
cs
dec
pop
out
dec
cwtl
cs
imul
dec
insb
sub
cs
iret
push
xchg
dec
int
xor
jp
cmp
dec
add
mov
clc
test
fsubl
or
xchg
inc
mov
push
ret
xor
jb
bound
mov
cmpl
stos
icebp
sahf
mov
in
mov
sbb
mov
mov
stos
jns
mov
out
adc
xchg
push
hlt
insl
xor
mov
arpl
fstps
mov
adc
outsl
mov
shrb
push
fidivl
sahf
mov
movsb
sub
pop
les
cs
jecxz
imul
pop
sub
jle
cwtl
out
retw
ja
lcall
cs
or
mov
cmpsb
movsl
xchg
aaa
lea
dec
adc
test
dec
repnz
mov
aaa
in
and
in
jne
bound
lcall
pop
ret
cmp
and
and
xchg
cmp
mov
mul
lds
pop
testl
cmc
test
ss
fdivl
test
daa
test
popa
push
leave
dec
push
in
xor
int
push
pop
fwait
lret
dec
stos
gs
fcos
mov
out
test
fwait
daa
jecxz
popa
mov
adc
pop
mov
sar
enter
and
notl
bound
push
cmp
inc
xchg
inc
push
add
cli
and
adc
xor
mov
sahf
nop
arpl
fnclex
scas
leave
stos
inc
inc
pusha
imul
pushl
sub
icebp
and
push
pop
ret
lds
ss
or
std
xchg
in
fildll
add
hlt
push
adc
sub
or
outsb
lret
inc
lock
xchg
sbb
pop
rcrb
sbb
add
mov
xchg
lea
int3
add
mov
int3
xchg
sbbb
adc
leave
or
sub
bound
xor
lret
dec
repnz
les
jb
adc
shrl
mov
mov
sub
lock
xor
leave
mov
and
sbbb
push
xchg
andl
cld
test
vhaddpd
adc
sbb
mov
push
inc
dec
idivb
push
lds
in
jle
fidivl
sbb
fwait
cmp
xchg
fidivrl
cld
imul
sub
test
out
inc
mov
dec
xchg
push
push
sbb
cmp
or
xor
pop
xor
inc
xor
cmpsb
jmp
inc
ja
sbb
sbb
jo
sbb
outsl
xor
cmp
xchg
in
es
jl
fistpll
loopne
jnp
sarb
sbb
ret
outsl
and
lcall
sbb
negb
outsl
jp
or
pop
imulb
loopne
ret
pop
pop
stos
ss
mov
shlb
cs
add
mov
add
aad
cmp
call
hlt
dec
jns
push
sub
sbb
jp
jp
adc
jne
xor
xchg
xchg
lods
and
cmc
jno
rcrb
fdivs
rorb
cmp
pop
sub
pop
dec
repnz
cmp
and
jle
cmp
out
js
sahf
rcrb
arpl
xchg
rcrl
mov
rorl
mov
ss
dec
push
push
inc
in
out
in
movsb
clc
pop
push
stc
pop
cmp
inc
fstl
mov
push
add
add
dec
imul
jl
xlat
xchg
dec
mov
rcrl
sub
int3
push
pushf
dec
subb
adc
xorl
cmp
lret
push
push
cmc
std
fldt
cmp
repnz
loopne
popa
pop
test
outsl
rorb
lods
pop
icebp
inc
mov
cmp
je
jns
or
inc
imul
iret
dec
leave
lcall
lcall
insl
mov
or
push
repz
fiadds
push
xchg
push
nop
or
mov
test
adc
and
lea
xchg
cmp
or
mov
dec
es
push
out
addr16
shlb
pop
stos
sub
inc
cmp
out
add
mov
in
push
mov
ja
in
pop
jns
pop
adc
jecxz
test
add
call
cmp
cltd
cwtl
pop
jb
cs
lahf
dec
dec
mov
or
test
movsl
bound
or
push
jns
cmp
popf
push
test
test
xchg
adc
call
pop
lret
push
dec
mov
mov
fs
rolb
les
in
mov
jns
jg
adc
les
arpl
jae
sub
fstl
andb
add
in
mov
cmp
adc
idivb
sbb
push
jbe
jmp
fdivl
inc
mov
mov
out
sbb
xchg
push
cld
mulb
aam
lods
stos
sub
in
adc
out
mov
mov
sbb
jb
jp
pop
mov
loop
scas
pop
scas
inc
int3
ljmp
mov
pop
adc
addb
push
ret
vpmacssdql
pop
andl
mov
aam
mov
sub
inc
xchg
jo
gs
fcmovne
pop
ss
sarl
xchg
add
lahf
mov
fcoms
mov
pop
xlat
jmp
pusha
add
dec
pop
push
push
push
aam
add
or
add
or
add
lret
xchg
outsb
sbb
xchg
inc
xor
mov
sbb
dec
sarb
xchg
faddl
and
pop
cmpsl
out
sbb
jmp
inc
or
cmp
cld
cmpsb
mov
cmp
pop
ret
jno
fisttpl
and
sub
imul
mov
sub
sahf
adc
mov
popf
jl
call
xchg
hlt
stos
push
in
out
mov
push
xor
mov
and
mov
dec
in
cmp
repnz
fisubs
ret
shll
sbb
dec
jae
jle
cltd
shrb
cmp
xchg
cmpsl
jne
xchg
pushf
mov
jo
ja
inc
call
aas
mov
aas
insl
imul
or
sbb
sbb
jne
mov
lods
adc
subb
insl
cld
shl
push
pop
jl
mov
add
in
and
pop
sub
in
icebp
dec
inc
pop
and
stos
lods
leave
dec
jmp
test
pop
push
jmp
xchg
or
fstpl
add
out
ja
push
popa
add
call
cltd
cmp
outsb
push
ret
rclb
dec
and
sbb
inc
cmp
or
popa
mov
les
es
jnp
xchg
jl
nop
push
xor
inc
sbb
push
call
sbb
inc
imul
mov
add
pop
pushf
out
insl
iret
cmp
cmpsl
mov
outsl
jb
inc
cmp
dec
fisubl
and
movsb
add
fildll
repnz
addr16
xchg
pop
pslld
adc
mov
sarl
pushf
fiaddl
inc
ret
sub
in
mov
in
inc
jne
ljmp
pop
or
div
add
je
and
push
dec
ljmp
adc
mov
outsb
loop
nop
js
xchg
sub
jl
adc
jp
jle
xor
out
call
aad
xchg
and
push
pop
cmpsl
ljmp
push
loope
sub
lret
mov
xor
xchg
adc
pop
das
sub
fsubrl
inc
sbbl
out
lcall
xlat
rcll
inc
and
movsb
test
add
es
inc
shrl
jne
and
lods
testb
jle
mov
movsb
cmp
aad
mov
inc
inc
inc
ja
xchg
sub
sub
jmp
add
sub
je
inc
add
adc
add
pop
or
sbb
lret
pop
fisttpll
lds
and
aad
pop
mov
push
stos
arpl
xchg
push
lahf
int
sbb
and
inc
cwtl
int
sbb
lahf
inc
popa
cmp
xor
push
insl
add
int
lret
xchg
mov
loop
cld
lds
or
and
sub
sub
xchg
fsts
mov
fdivs
sti
loopne
jne
stos
xchg
popa
arpl
inc
sbbl
add
mov
mov
xchg
ja
adc
lret
cmp
push
jnp
xor
mov
scas
push
icebp
mov
hlt
je
jno
int
add
shl
push
add
push
lds
cmp
jmp
call
fwait
sbbl
pop
pusha
inc
dec
iret
imul
sbb
out
xor
and
push
xchg
sbb
lcall
xor
aam
cmpsb
and
add
frstor
or
test
shll
xor
sti
sahf
jmp
iret
jmp
sti
inc
jns
mov
adc
push
rorb
inc
sub
sub
inc
mov
outsl
pop
dec
ja
ret
jl
frstor
xchg
repnz
test
sub
cmc
jl
popf
scas
cmc
and
mov
out
out
cmp
ds
push
pushw
xchg
cmp
lret
popf
arpl
push
imul
cmc
in
fsubl
push
pop
push
xchg
inc
xchg
mov
jmp
cmp
jecxz
mov
iret
mov
add
add
cld
cmp
pop
cmpsb
data16
js
icebp
pop
cltd
imul
adc
lahf
sbb
adc
jl
pushf
and
pop
js
sbb
mov
mov
jmp
mov
insl
mov
mov
dec
jp
pop
jbe
jecxz
and
xor
enter
inc
fcmovnu
jnp
xor
adc
xchg
inc
rcl
xorb
mov
arpl
sub
test
adc
jae
outsl
in
fsubr
cmp
stc
sub
lret
mov
lret
adc
cmpsl
fs
call
pop
jle
mov
fldenv
arpl
ret
mov
push
in
dec
xchg
stc
lock
nop
repz
outsl
jg
into
xor
inc
sbb
outsl
jg
xchg
pop
mov
lock
xor
aad
push
inc
adc
adcl
sbb
dec
mov
gs
pop
lods
jnp
subb
aas
ficoml
out
and
mov
sbb
cmp
loopne
lea
sahf
pop
mov
daa
cmp
pop
shll
cmpsb
test
scas
dec
add
mov
ljmp
icebp
cmpl
mov
das
das
jns
movsb
xchg
inc
or
jne
out
stc
or
push
mov
xchg
xlat
cmpsl
in
pop
mov
pop
jmp
daa
cmp
push
dec
inc
sbb
mov
xchg
sub
sbb
sub
xchg
jns
mov
rcrl
adc
lret
mov
stos
rorb
enter
sub
pop
pop
pop
sahf
xor
ljmp
add
repnz
mov
pop
xchg
xor
pop
into
outsl
mov
data16
mov
xor
xchg
lret
jl
je
push
xchg
xchg
mov
push
icebp
das
rcrl
mov
test
es
int3
std
xchg
fiadds
fwait
enter
popa
mov
dec
and
test
pushf
or
in
or
fs
mov
mov
ljmp
sub
fs
cli
data16
in
cmp
out
push
xor
loope
jmp
cmp
dec
cmpsb
add
test
sub
or
and
fstl
lock
jbe
mov
dec
pop
loop
mov
dec
jae,pn
jne
scas
adc
loop
imul
pop
jns
push
xchg
dec
dec
xchg
scas
ficoms
inc
jo
push
les
imul
mov
or
outsb
int3
pop
cmp
out
enter
lods
das
adc
mov
and
out
in
jecxz
fsts
add
insb
mov
xchg
daa
hlt
sub
ljmp
loop
xchg
adc
sbb
adc
les
cli
sub
mov
cwtl
mov
test
push
xchg
mov
rorl
inc
int
cmp
push
sbb
shrl
push
lock
mov
loop
lcall
out
pop
sbb
fidivrl
mov
push
xor
and
push
les
inc
cmpsb
mov
sbb
imul
push
push
outsb
ds
out
cwtl
push
push
pop
pop
mov
xor
jle
popf
mov
fs
xor
fisubrl
adc
daa
cld
push
inc
test
xchg
pop
ss
imull
inc
jp
cld
jmp
mov
movsb
sbb
pushl
shlb
popf
jo
sbb
jp
movsb
jnp
mov
outsl
dec
jnp
sub
adc
cmp
mov
push
divl
shr
or
call
fistl
sti
or
xor
clc
ret
mov
enter
test
int
mov
pop
or
or
or
and
fcmovb
mov
aas
or
roll
mov
push
daa
inc
pop
adc
mov
dec
lret
lcall
dec
lock
dec
sub
mov
adc
mov
push
cmc
mov
cwtl
mov
pop
mov
sub
gs
mov
ret
xlat
mov
xchg
xchg
idiv
mov
hlt
repnz
and
sub
pop
dec
xor
cmpsb
mov
aam
in
fwait
push
add
insb
and
adc
xchg
fistpl
in
lea
pop
ret
push
and
adc
and
dec
out
jle
ja
inc
stos
negl
adc
mov
es
lea
leave
sub
jo
jns
mov
mov
and
fistpl
mov
mov
or
outsb
stos
adc
xchg
stos
shlb
xchg
jno
shl
imul
daa
imul
xchg
and
or
pop
push
jns
fdivrl
jnp
mov
push
sub
ret
shr
das
xor
rol
ss
shlb
pushf
sti
mov
out
in
clc
out
in
xchg
rcll
xchg
mov
lret
mov
rorl
cmpsb
pop
inc
push
daa
push
adc
cmp
dec
sbb
rcrb
adc
leave
arpl
vpsraw
mov
and
cmpsb
xor
cli
jne
int
and
in
gs
pop
jno
pop
add
mov
lahf
xlat
add
arpl
ss
gs
jae
dec
test
fcompl
adc
and
mov
gs
popa
xor
pop
xchg
pop
mov
pop
or
test
popa
jmp
stos
xor
and
icebp
dec
sub
xor
cli
xchg
loope
fcoml
and
loop
sbb
es
push
adc
xor
xchg
out
mov
rorb
xchg
jo
xor
inc
bswap
push
subl
frstor
jo
xchg
jb
outsl
aad
out
cmp
inc
sar
and
jns,pt
je
leave
sub
js
jns
pop
or
fwait
inc
fsubr
sub
das
xchg
cld
add
psraw
into
sub
or
mov
jmp
imulb
stos
mov
test
jbe
inc
dec
inc
xchg
inc
add
inc
dec
test
xchg
lea
mov
cmp
rcr
repnz
jmp
cmp
jb
scas
add
inc
ret
lods
inc
xorb
pusha
push
xor
nop
std
cmp
jmp
adc
or
jge
jb
cwtl
xchg
stos
dec
xlat
mov
mov
dec
enter
cmpsl
mov
js
jp
dec
mov
in
dec
xor
mov
cmc
dec
lods
mov
lret
xchg
adc
or
inc
xor
out
out
aaa
ret
es
sub
js
loope
cmc
pop
dec
pop
shl
or
mov
aam
inc
xor
dec
test
jmp
push
push
inc
jmp
mov
mov
push
cmpl
push
fsubs
outsb
pop
adc
scas
lret
ja
ret
xor
mov
scas
mov
sub
mov
jae
fldcw
add
and
inc
mov
data16
movsl
out
dec
push
jmp
sbb
xchg
sbb
add
in
push
add
mov
adc
insl
or
fidivrl
sub
and
lods
push
fwait
or
dec
dec
in
icebp
jb
or
test
sbb
fstpl
mov
cwtl
xchg
cmp
outsl
xchg
or
lock
clc
push
into
dec
lea
outsl
mov
inc
lahf
cwtl
das
ret
mov
rcl
stos
aam
adcb
ss
cmp
xor
mov
inc
ss
sub
dec
imul
jp
and
add
scas
flds
out
inc
ret
dec
fcompl
lods
mov
jg
fidivrs
mov
inc
jg
movsl
cmp
xchg
int
sbb
ret
das
xchg
or
lret
mov
xchg
hlt
mov
gs
and
popa
cmp
aad
mov
xor
pop
pop
sbb
imull
pop
cli
sub
into
pop
or
out
xchg
adc
add
mov
ficomps
xchg
je
adc
mov
aaa
cmpsb
andl
jl
jecxz
push
test
push
push
das
std
ret
mov
out
ljmp
xchg
mov
jecxz
lret
add
insb
and
mov
jecxz
ds
test
shl
jne
sahf
inc
dec
insl
xchg
movsb
xchg
rclb
addr16
movsb
cmp
ror
in
pushl
in
ret
in
inc
inc
sarb
mov
out
cmp
xor
in
dec
mov
sbb
add
jnp
sbb
xchg
cmp
std
push
inc
mov
test
sub
scas
inc
jle
adc
shrb
fidivl
outsl
pop
cmp
push
loopne
add
nop
stc
jle
sub
ret
lahf
mov
or
cmpsl
je
mov
xchg
push
cmp
icebp
mov
mov
rcrb
mull
dec
add
das
sbb
mov
xchg
mov
pop
in
loop
stc
xchg
paddd
jp
ds
cmp
adc
lods
rcrb
mov
xchg
dec
inc
and
xlat
xchg
shll
xchg
push
movsb
loope
daa
and
mov
roll
cmp
jns
mov
sub
call
mov
sahf
adc
loope
les
cmp
loope
jp
rorb
cld
sarb
sub
les
hlt
jbe
add
out
cmpsb
test
mov
icebp
stc
hlt
dec
sub
daa
mov
les
daa
cmp
xlat
jecxz
std
int
aas
lock
pop
inc
adcb
std
add
dec
loop
sbb
outsl
rcr
xchg
xor
loopne
aam
push
or
lcall
test
out
lock
jmp
in
or
jmp
jg
std
xor
dec
aaa
xor
jmp
jp
pop
cmpsl
pop
daa
dec
imull
inc
idivb
popf
xchg
subl
icebp
mov
jno
inc
xor
pushf
repnz
sbb
or
popl
and
jbe
or
or
xchg
addr16
xchg
sahf
and
pop
adc
lgdtl
in
xchg
mov
jnp
test
pop
sub
sub
sub
js
mov
dec
test
les
icebp
incb
stos
pop
clc
lret
mov
fnsave
sub
pusha
mov
mov
and
pop
fnsave
cli
aas
fs
jmp
aad
lret
or
mov
inc
mov
pmaddwd
clc
int
dec
or
out
into
jbe
pop
xchg
lret
inc
lock
mov
jb
shlb
cld
or
pop
mov
in
xor
push
cwtl
insb
xlat
xor
and
lret
arpl
int3
in
add
jmp
mov
push
aad
xchg
cmp
iret
jmp
out
mov
icebp
dec
or
or
nop
loopne
int3
and
xchg
outsl
push
push
stos
jae
shrb
cltd
mov
add
jo
xor
or
addr16
push
or
push
pinsrw
testl
xor
rorl
push
imul
popa
and
xor
mov
pop
mov
imul
jbe
sarb
jbe
pop
mov
pushf
lcall
dec
and
pop
pop
inc
lahf
push
push
std
add
mov
aaa
mov
push
dec
fistpl
std
xorb
ficomps
out
std
push
cmc
xchg
xor
inc
push
into
or
pop
xor
insl
or
ret
out
lea
bndstx
into
rcll
in
aam
leave
push
dec
js
les
pop
repz
mov
jae
aad
dec
push
and
dec
mov
enter
mov
scas
mov
lret
sbb
adc
push
je
int
sub
adc
xchg
ss
inc
xor
outsb
xchg
mov
jo
jg
jle
cmp
mov
or
mov
push
or
shlb
pop
lret
xchg
sub
lods
add
push
dec
repz
adc
mov
scas
push
mov
inc
mov
sub
or
xchg
sub
mov
jns
mov
fldl
not
hlt
pop
sub
dec
dec
lret
sbb
inc
out
out
cmc
mov
in
push
ret
lret
push
mov
cld
lcall
mov
arpl
lds
test
add
mov
dec
add
out
adc
push
and
xchg
mov
mov
xor
jmp
aaa
add
mov
aas
mov
mov
filds
arpl
les
rolb
or
pop
inc
in
pop
fbstp
push
or
aas
loope
mov
adc
cs
inc
sti
mov
dec
fnsave
int3
inc
push
xchg
pop
adc
dec
iret
imul
cmp
sub
repnz
pop
add
push
mov
pop
sbb
scas
dec
int
cmp
adc
push
xchg
mov
sbb
xchg
lahf
adc
inc
add
mov
adc
mov
xchg
or
imul
mov
sub
flds
outsl
jbe
outsl
rcrb
popa
adc
div
push
stos
shr
mov
mov
sahf
lea
gs
xchg
jo
dec
sti
mov
push
aaa
std
stc
cmp
adc
ljmp
pop
ljmp
inc
mov
cmp
inc
add
pop
cwtl
in
jo
dec
lret
imul
loop,pt
mov
mov
shll
sbb
gs
bound
sbb
insb
bound
add
and
lret
rclb
mov
pop
mov
stos
cmpsb
movsl
adc
aad
lcall
mov
nop
mov
movsl
lret
push
dec
in
pop
or
hlt
inc
lods
jne
dec
mov
dec
pop
test
loop
xlat
in
add
sub
lret
cs
arpl
sub
dec
stos
dec
xor
lcall
popa
fisubs
ss
bound
and
lods
add
dec
rolb
mov
jns
mov
lcall
mov
arpl
mov
stos
frstor
pop
lods
cmp
push
jecxz
push
dec
test
lcall
subl
jg
jmp
and
test
inc
imul
mov
push
mov
mov
jbe
cmp
jne
incl
orb
ret
sahf
push
pop
repnz
rclb
call
push
adc
pop
jmp
jns
push
je
call
push
pushf
dec
jl
push
lods
cmp
ja
pop
arpl
clc
mov
repnz
sti
pop
push
cmp
and
sbb
movsb
aam
xor
adc
pop
int3
fs
loop
ret
cmp
imul
mov
hlt
push
xchg
outsb
mov
and
rorb
sub
mov
sbb
and
call
sub
xchg
or
lret
sub
in
push
adcb
enter
sub
jae
adc
xchg
aad
nop
outsl
push
daa
mov
jno
jae
push
mov
cwtl
data16
xor
pop
xorb
xchg
fnstenv
or
or
mov
dec
scas
mov
in
lock
and
icebp
loope
ss
das
adc
mov
repz
mov
xlat
cs
mov
jb
mov
imul
and
in
and
cmpsl
inc
in
push
dec
adc
lods
cmpsl
jae,pt
push
and
inc
sbb
jne
adc
clc
xor
cmp
add
notl
ds
aad
xor
outsl
jp
jnp
movsb
jg
test
inc
dec
or
jne
rclb
dec
dec
nop
mov
sbb
and
xchg
inc
loop
insl
sar
loopne
xchg
and
mov
dec
cltd
js
loop
adc
fisubs
adc
rorl
add
pop
mov
fcompl
xlat
jmp
dec
mov
enter
ja
mov
cmp
mov
test
lret
scas
xor
es
outsb
add
mov
xchg
lods
aas
popf
insb
lret
xchg
and
cmpsl
xchg
cld
lods
pushf
inc
xor
push
sub
pop
mov
dec
xor
dec
js
sub
pusha
mov
imul
es
push
push
adc
push
out
jo
cmpl
imul
pusha
xor
aaa
and
mov
loope
xchg
mov
cld
inc
dec
push
mov
sbb
sbb
rcr
pop
xlat
push
js
xor
mov
repnz
pusha
push
xchg
mov
push
add
nop
std
jae
push
aaa
hlt
andb
cli
pop
roll
dec
lock
hlt
int3
popf
cmp
or
mov
xchg
pop
push
mov
sbb
sub
in
cld
xor
jmp
push
aaa
jae
jmp
inc
xor
or
inc
mov
xchg
mov
sbb
xlat
jne
pop
push
xchg
jecxz
hlt
jg
add
and
scas
jb
int
pop
xlat
mov
sbb
loope
icebp
mov
imul
xchg
imul
adc
inc
ljmp
addr16
add
mov
loop
adc
mov
dec
push
and
fdivrp
add
cmp
aam
jnp
lahf
push
add
inc
stos
xchg
rcrb
lea
jecxz
outsl
das
cwtl
outsb
add
push
rorb
leave
push
les
mov
ss
test
into
sbb
pop
fidivs
adc
shr
jno
jbe
jae
pushf
movsl
fcmovu
ret
fucomi
pushf
jb
jo
popf
es
inc
ljmp
and
adc
loop
mov
outsb
mov
rcrl
sub
mov
orb
andl
sbb
stos
je
pop
pop
test
movsl
pop
aad
es
rcrl
mov
div
cs
repz
pop
orb
rcl
or
fsts
ret
mov
cltd
jle
push
jb
ljmp
dec
stos
cmp
rolb
xchg
mov
xchg
shr
cmp
aaa
pop
push
xlat
cwtl
ficoms
out
fistps
mov
cmp
mov
mov
sbb
enter
cli
xchg
outsb
pushf
sbb
mov
movsb
dec
xchg
clc
and
xchg
xor
inc
mov
sti
pop
mov
cmp
js
push
outsb
stos
adc
mov
xor
imul
outsb
mov
imul
data16
dec
xchg
popf
xor
movsl
aas
rclb
and
nop
movsb
out
pop
mov
mov
lock
dec
test
sahf
pop
sub
fldl
repnz
sub
insb
xchg
xor
and
add
movsl
imul
inc
jae
cli
insb
rcl
jge
clc
sahf
add
adc
mov
or
lock
out
test
pop
dec
push
sbb
mov
add
mov
mov
lods
in
sbb
movsb
outsb
lds
aam
push
lock
bound
mov
push
ficoms
in
add
xor
enter
icebp
dec
scas
andb
xor
xlat
jle
mov
push
loop
dec
bound
in
clc
lock
cmp
shrl
jmp
mov
mov
daa
rcrl
or
shrb
jecxz
or
icebp
xchg
fucomi
dec
and
roll
sbb
nop
sub
xchg
cmp
inc
mov
arpl
dec
pop
push
fstpt
inc
gs
shlb
lods
dec
push
in
add
xchg
mov
xchg
shll
and
sub
and
roll
jle
adc
mov
sarl
cmpsb
outsl
add
hlt
mov
hlt
sub
and
ja
push
mov
scas
sti
daa
push
lahf
mov
shlb
adc
push
push
pop
int3
push
mov
jnp
andl
int3
mov
inc
das
cmp
xchg
mov
mov
into
sub
cli
test
psllq
jmp
fs
xchg
mov
sub
mov
xor
xor
dec
mov
loopne
mov
movsl
cs
add
xchg
push
les
inc
xor
xchg
inc
jns
pop
in
jg
pop
fsub
push
cmc
cmp
fstpt
repnz
enter
xchg
sahf
sub
int
rcl
xor
xor
ljmp
push
int
jns
adc
addr16
popa
gs
mov
pop
adcl
dec
sub
pop
sbb
sarb
in
cmpsb
push
fcom
push
addr16
ret
cmp
sub
repz
cmp
xor
and
push
lods
cmpsl
jno
js
mov
lret
les
mov
pop
jae
mov
and
mov
in
das
jnp
cs
nop
fisubrs
jnp
adc
repnz
orl
pushaw
inc
sub
xchg
mov
bound
bound
pop
mov
mov
dec
add
test
scas
shrb
add
daa
mov
test
mov
cmp
mov
mov
inc
insb
xor
jle,pt
out
jg
xchg
adc
out
add
xor
pop
paddw
cld
sahf
sar
cmp
xor
xor
xlat
dec
outsl
jg
sar
movsl
cltd
fadd
ja
inc
mov
push
enter
les
or
cmovae
sbb
sub
mov
mov
lcall
inc
or
sub
insl
out
mov
mov
inc
push
or
dec
fs
dec
sti
and
pop
clc
mov
arpl
ds
popf
push
movsl
jbe
jns
sbb
mov
in
or
arpl
push
pushf
jne
das
jb
add
push
lock
xor
ror
idivl
leave
dec
mov
pop
add
xor
lock
sbb
jne
add
ss
shrb
and
clc
mov
dec
jp
cmc
rcll
xchg
pop
jge
push
js
mov
fstl
jne
insb
rcll
or
fcomi
mov
jge
mov
je
dec
lds
sub
lcall
push
ds
dec
mov
pop
popl
lret
popf
nop
into
fs
cmp
lahf
mov
or
jl
rcrb
test
mov
fidivrs
repz
in
cwtl
mov
xor
adc
stos
or
mulps
xchg
in
mov
mov
scas
sarb
jb
xchg
das
push
daa
xchg
sbb
jbe
xchg
lods
stos
dec
jp
in
cmc
mov
push
std
jp
sub
pop
cs
push
xor
hlt
stos
pop
stos
jae
movsl
pop
push
and
movsl
mov
fdiv
and
lahf
sub
cltd
movq
fistps
mov
jne
subps
int3
adc
incb
pop
pop
pop
repnz
aad
fs
push
sbb
pop
dec
into
add
cmpsl
test
adc
sbb
inc
sahf
shll
sbb
roll
lea
fstpt
push
push
xlat
repnz
ret
adc
bnd
cmpsb
pop
push
add
lea
nop
mov
stc
pop
idiv
xor
in
fisttps
mov
gs
pushf
sub
and
pop
mov
sub
xor
add
add
lods
iret
xchg
xchg
jno
dec
jnp
out
fidivs
lcall
sti
mov
in
out
xor
fs
das
cmp
cmc
jo
jge
inc
xor
jmp
cmpsl
mov
or
cltd
mov
imul
sub
sub
xchg
int
push
and
or
push
or
dec
jae
pop
xchg
movsl
pop
stos
test
cmpsl
shll
push
cli
mov
jo
pop
cli
mov
cmp
or
testl
adc
push
aad
push
js
popf
mov
xchg
adc
int
and
or
or
xlat
or
mov
xchg
push
mov
into
xor
mov
adc
aas
repnz
mov
push
add
pop
cmc
mov
pop
mov
lods
xchg
cmp
jp
pop
sub
jno
xor
pop
mov
jg
jle
sbb
cmp
cmp
fidivl
cmpsb
push
or
fimull
push
mov
test
and
adc
mov
pop
cli
test
sahf
ds
rorb
cmpsb
incb
inc
lret
mov
jl
jb
jnp
movsl
push
adc
dec
stos
jae
cld
aad
and
bound
aad
mov
sbb
test
push
push
subb
dec
mov
out
adcl
pop
rorl
jl
push
adc
mov
movsl
add
pop
or
mov
popa
jp
mov
xchg
or
dec
push
jp
std
int3
push
cwtl
dec
outsb
cmc
and
jge
imul
insb
xchg
in
jl
mov
ja
bound
in
xor
mov
adc
jae
sahf
dec
lar
xchg
popa
out
pop
fisttpll
sub
inc
pop
cmp
jecxz
add
orb
daa
xor
lea
mov
sub
pop
mov
and
in
cmp
out
mov
dec
scas
pop
sahf
lods
enter
fistpl
fwait
test
aad
ret
and
enter
mov
jns
adc
mov
aam
mov
lock
pop
cmpsl
pushl
push
imul
aad
ja
mov
shlb
mov
mov
mov
mov
fildll
insb
stos
stos
mov
roll
lods
mov
pop
sub
cmp
in
loope
add
sbb
imul
sub
leave
sub
add
mov
lea
in
sbb
out
outsb
out
inc
xor
inc
cmp
or
jle
out
dec
cmp
cmpsb
aaa
loop
push
sub
insb
arpl
lds
outsb
xchg
push
dec
xchg
ss
ficoms
aaa
lret
lds
or
add
pop
inc
add
pop
xchg
jne
push
outsb
inc
fistpll
pop
or
mov
pop
int3
xor
scas
jns
pop
cmc
xor
daa
jnp
inc
pop
lahf
push
sbb
sbb
js
into
and
xor
xchg
dec
rcr
mov
test
addr16
pop
cmc
fdivl
pop
push
das
adc
push
mov
ja
mov
je
in
rolb
push
dec
cmpsl
mov
sar
popa
sub
sti
inc
gs
scas
imul
repz
subl
ljmp
test
or
sti
arpl
push
push
fimull
xchg
sub
sub
push
dec
ret
ljmp
cmp
cmpsb
push
or
cli
rorb
xlat
lcall
sahf
sbb
bnd
sahf
mov
into
testb
inc
insl
cmpsl
or
jno
mov
and
fs
or
sbb
data16
push
leave
mov
mov
adcl
test
lea
jle
fwait
adc
imul
jl
lret
ljmp
inc
pop
rorl
inc
cmp
jle
sub
je
pop
ds
pushf
cmp
mov
clc
in
mov
aad
mov
js
pop
mov
fldl
roll
sub
push
xchg
daa
rclb
xor
and
inc
lret
fdivrs
sbb
and
cmp
test
int3
daa
cmp
xor
shr
adcl
lahf
mov
ljmp
shll
and
mov
out
mov
pushf
dec
outsl
mov
mov
lea
test
repnz
adc
pop
add
jp
stos
adc
pop
out
shr
inc
mov
lcall
pop
mov
out
popa
or
xlat
and
sub
xchg
mov
inc
xlat
sub
scas
popf
mov
rep
in
dec
mov
das
inc
inc
test
inc
shlb
sub
pushf
adc
dec
negl
pop
inc
pop
jmp
addr16
lock
out
bound
fnstenv
fsubs
or
repnz
adc
sub
aaa
icebp
fsubp
shr
pop
stc
lret
bound
dec
sbb
mov
insl
scas
add
ret
lock
mov
das
and
pop
fcomps
cmp
pop
pushf
fwait
inc
lcall
test
hlt
insl
lods
inc
sar
imul
inc
inc
out
sbb
std
xchg
or
or
mov
sahf
jo
das
shrb
ss
push
jne
aad
scas
jbe
mov
out
loop
test
inc
mov
insl
xlat
popa
dec
stc
int
mov
xor
in
imul
pop
dec
mov
shrl
repz
dec
in
sahf
push
fdivrs
ret
out
das
sub
pushl
and
shll
or
and
xchg
inc
cs
cmpsb
fcmovnu
inc
jle
add
mov
mov
cld
xlat
hlt
pusha
std
jne
sarb
scas
test
jno
cmp
incb
mov
mov
rclb
stos
cmpsl
repz
cmp
pop
subl
mov
pop
shll
jl
das
mov
dec
xor
add
fdiv
ret
ljmp
cltd
dec
xor
and
sbb
cwtl
shrb
jnp
icebp
adc
jmp
out
sti
or
pop
ljmp
pop
rcll
call
fwait
aas
push
xchg
aam
inc
fsubs
out
push
inc
outsb
nop
or
cli
loope
rclb
addl
lock
push
cmpsl
add
hlt
push
out
sti
shl
daa
test
sbb
xchg
cmp
shll
push
outsb
scas
dec
pop
andl
dec
in
lea
int3
lods
fnstenv
loop
xchg
inc
pop
push
xchg
pop
leave
enter
add
inc
arpl
xchg
in
xchg
jb
test
push
xor
hlt
fdivl
test
mov
out
adc
jbe
push
jne
xor
mov
dec
lahf
cld
es
pushf
add
mov
xor
mov
dec
jg
call
jle
xchg
aad
pusha
add
lods
push
mov
push
cmp
cmc
lahf
repnz
int3
nop
lods
rorb
daa
jmp
mov
adc
and
data16
stos
cltd
mov
js
push
fwait
or
dec
out
daa
mov
pusha
and
pop
ret
call
cmp
gs
arpl
stos
or
xorl
mov
lahf
std
in
popf
dec
das
xchg
xchg
or
and
pop
test
bound
imul
xchg
inc
arpl
pop
adc
xchg
xchg
jg
sbb
pop
clc
mov
pop
stos
mov
js
mov
push
xor
add
xchg
loop
sub
aad
idiv
mov
pop
mov
lret
and
add
jns
jb
and
cwtl
jl
mov
and
lret
jno
jbe
jge
jnp
lea
js
xchg
cmc
sub
loop
jl
lock
loopne
stos
dec
jg
ja
lds
sub
lods
call
icebp
mov
stos
clc
xchg
fucom
sbbb
and
inc
out
xchg
sbb
or
or
sub
push
add
int3
dec
sub
sub
add
jo
neg
addb
mov
push
lea
in
lcall
xchg
mov
mov
fstl
and
cmp
push
inc
push
loope
sbbl
fs
jno
sbb
test
push
mov
mov
addr16
pop
test
mov
xor
aam
and
or
enter
pop
and
and
neg
push
fbld
lcall
adc
fiadds
aam
add
mov
and
inc
mov
ja
mov
and
dec
mov
sti
mov
adc
or
push
mov
adc
leave
sbb
mov
push
add
adc
jne
into
pop
sub
loopne
mov
adc
mov
dec
jp
sbbl
fistps
sbb
testb
sbb
cmp
das
ret
gs
jbe
xchg
xchg
dec
lcall
scas
cmp
mov
dec
and
sbb
pop
pop
pop
pop
stos
in
adc
xchg
cwtl
out
mov
mov
mov
out
jne
pop
leave
sbb
imul
insb
into
sbb
inc
pop
mov
mov
or
scas
cmpsb
subb
push
divb
mov
mov
cmpsb
dec
aas
scas
xlat
dec
adc
leave
repnz
fdivs
mov
mulps
jmp
and
int
xchg
inc
mov
in
push
inc
adc
jmp
add
push
ret
pop
mov
pushf
cs
mov
push
mov
add
clc
rolb
addb
adc
mov
cmp
xchg
mov
jno
movsl
and
out
xor
cmp
jge
lret
sub
pop
mov
cld
and
xchg
jl
pop
sbb
sarl
ret
adc
xchg
call
jmp
insl
pusha
mov
not
lock
icebp
cmp
add
stos
sub
sbb
pop
inc
mov
dec
mov
add
lret
sub
pop
lods
pop
pop
sub
call
inc
ret
xchg
lahf
out
rcr
cwtl
aad
sahf
adc
clc
pop
movsb
add
hlt
pop
pop
dec
lea
jne
in
sub
cmp
mov
or
jmp
in
sbb
repnz
addl
out
and
repnz
jne,pt
call
fs
mov
mov
es
jae
rorl
mov
add
push
imul
jecxz
shl
pop
fsts
scas
std
cmp
loop
les
in
int3
popf
adc
push
inc
addr16
xor
xor
loope
xor
push
aaa
sbb
jae
js
div
pcmpgtb
in
in
loopne
insb
movups
stc
and
or
bound
xor
adc
jo
stos
cld
jmp
mov
js
test
cmp
cltd
mov
lods
inc
sub
xor
adc
pop
xchg
arpl
aad
adc
pusha
mov
jb
idivl
loopne
xor
mov
test
xor
xchg
xor
fbstp
pop
inc
cltd
push
mov
loope
test
sub
pop
sbb
lods
dec
test
clc
pop
cmpsl
sub
js
inc
aad
lcall
mov
mov
lahf
pop
and
mov
mov
lods
andl
xchg
addr16
xchg
insl
pushf
mov
icebp
xor
enter
dec
mov
mov
or
iret
fmul
cs
daa
pop
addl
cld
jmp
movsb
lahf
arpl
in
pushf
lods
mov
push
push
je
xlat
push
jmp
mulb
je
inc
pop
loop
add
enter
sahf
jmp
jo
ret
xchg
aam
lock
aaa
add
jnp
dec
sub
data16
shr
gs
pop
enter
testl
pop
imul
loopne
orl
mov
pusha
iret
rorb
jecxz
leave
das
inc
repnz
loopne
jbe
getsec
cmp
insl
xchg
fs
aad
mov
sti
imul
add
stos
dec
sbb
inc
xchg
cmp
lods
cmpsl
xor
pusha
movsb
loop
cmp
pop
lcall
push
push
mov
xlat
mov
fisttps
divb
movsb
aad
push
fs
dec
dec
in
pop
add
xor
data16
xchg
mov
cmpsl
mov
mov
mov
shll
cmc
jge
xchg
xchg
sti
jg
mov
cwtl
mov
xchg
inc
sub
dec
jmp
adc
sub
jno
rol
and
add
daa
sti
jecxz
outsb
fwait
ja
xchg
aas
jns
xchg
and
or
loopne,pn
divb
jmp
dec
stos
outsl
sbb
inc
xor
sub
and
roll
mov
xchg
sahf
int
inc
jns
jmp
repnz
dec
sub
dec
xor
popf
adc
add
adc
rcl
cli
movsb
add
mov
push
sub
jae
bound
insb
fwait
pop
pop
sbb
out
pop
or
or
cmp
mov
dec
sbb
cmp
xor
test
imul
xchg
mov
fnsave
xor
jl
xlat
add
sub
addr16
push
cmpsl
adcb
lahf
aaa
insl
push
cmpsl
or
push
jge
into
daa
add
mov
icebp
fistpl
xor
mov
lock
fadd
add
nop
push
push
sub
pop
in
mov
dec
dec
imul
jle
xor
notl
dec
pop
notb
shl
pop
jmp
aas
jno
lcall
or
jnp
je
push
loopne
stc
ja
add
pop
mov
and
sbb
or
add
orb
inc
in
lahf
popf
mov
shl
sahf
cmp
fmul
adc
andl
test
int
mov
roll
xor
jns
sbb
adc
inc
lods
push
dec
mov
push
ds
adc
push
mov
loope
lcall
sbb
jae
out
adc
sub
and
xlat
sub
mov
push
xchg
in
in
repz
clc
mov
test
in
cltd
cld
or
fildll
inc
cmp
cmc
bound
pop
imul
mov
imul
jae
in
cmp
rcrb
scas
xor
push
lahf
adc
fcoml
imul
xor
xchg
shlb
out
fwait
push
or
xor
push
sub
dec
jge
pop
cmp
lahf
xchg
nop
xor
ror
sub
ret
int3
mov
cmp
push
aam
pop
pop
movsb
mov
popf
cmp
mov
mov
push
cltd
clc
jle
sub
sub
dec
idiv
xchg
mov
leave
xchg
leave
dec
adc
add
xlat
inc
mov
sub
lock
bt
fldt
adc
dec
adc
test
shlb
sti
adc
xor
jo
mov
mov
xchg
push
outsl
dec
rcr
sbb
jb
lcall
adc
mov
sbb
push
or
jl
push
dec
movsl
addr16
cltd
imul
mov
sbb
or
jno
xchg
sub
lret
int3
lahf
cmp
popl
mov
je
inc
call
add
push
or
mov
sub
push
add
cmp
xor
jae
pop
dec
xor
push
inc
nop
and
push
ss
inc
jnp
sub
imul
repnz
push
jae
mov
cmp
dec
mov
xchg
xor
fwait
jne
sub
inc
mov
dec
or
jp
pop
push
ds
mov
fsts
iret
imul
mov
adc
or
daa
movsl
cmc
fsts
jg
inc
gs
xor
add
aas
lret
into
push
push
iret
xor
cmc
out
mov
xchg
push
pop
rcl
pusha
lods
lods
bound
and
pop
jbe
pushf
repz
xchg
test
aaa
fadd
outsb
lret
fsub
fistps
rol
stos
scas
insb
out
fists
inc
inc
aam
cs
inc
xchg
push
test
pushf
adc
jns
and
call
in
decl
in
lret
in
fidivs
push
call
cltd
mov
stos
testl
ss
cmc
aaa
cmp
mov
adcb
jg
or
xor
lds
pop
push
push
inc
movb
xor
cli
jmp
cmp
arpl
enter
jl
xor
jno
fwait
mov
xchg
xlat
and
jmp
fldl
inc
mov
pushf
cmpsl
int3
arpl
mov
aad
pop
movsl
fcomip
out
dec
sti
shrb
pop
fistps
adc
add
push
addb
xlat
push
mov
ret
cmovno
dec
mov
mov
rorb
jp
push
adc
shl
lock
pusha
xor
xlat
sahf
ljmp
mov
xor
xor
cli
andl
jmp
out
sbb
xchg
xchg
jno
pop
cmpsb
add
lods
les
dec
scas
cmp
js
aad
aad
aam
and
imul
push
inc
add
xchg
sti
adcl
jge
add
mov
incl
xlat
cmp
cmc
pop
adc
adc
call
int
mov
pop
mov
lea
fnsave
mov
xlat
pop
imul
push
sbb
lds
iret
pop
jge
stos
orl
xor
sar
mov
sbb
pop
loop
jmp
cmpsb
imul
aaa
sub
inc
das
xor
add
sub
sub
lods
lret
mov
loopne
shll
xchg
inc
jnp
add
adc
inc
insl
mov
add
mov
test
movsl
mov
dec
dec
movb
inc
pop
mov
test
out
or
bnd
xchg
jge
lcall
ss
jae
cs
ret
cmpsb
jo
insb
cltd
and
cmp
cmp
pop
ds
xchg
add
dec
or
add
out
xchg
sbb
and
outsl
push
cmp
add
xor
shlw
pusha
xchg
mov
lahf
out
pusha
xor
adc
push
ljmp
lods
stos
or
aaa
pop
sub
mov
cltd
sarb
ja
sbb
fmul
test
jbe
incb
and
pushf
cwtl
mov
icebp
dec
mov
cmp
stos
int
in
xor
inc
add
mov
and
decl
fcmove
add
sbb
iret
sbbl
mov
popl
cmp
jnp
out
mov
and
idivb
sub
add
mov
pop
ljmp
pop
push
je
movsb
sub
subb
insl
adc
xchg
add
mov
mov
sbb
inc
pop
js
push
xchg
mov
push
test
fadds
in
or
push
lahf
lea
scas
sti
sub
and
push
inc
test
and
gs
in
mov
lods
movsb
mov
jns
stos
jb
push
pop
cmp
pusha
pushf
fsubrs
mov
jmp
subl
cmpsb
stos
int
test
add
cmp
out
cs
sbb
loopne
xchg
cmp
insl
push
add
pop
lock
in
adc
lods
jge
fidivl
ss
roll
mov
aad
fcompl
out
sub
cmpsb
addb
addr16
jo
mov
and
ret
js
adc
aas
lds
fdiv
stc
cmc
lret
cli
bound
inc
xchg
mov
iret
notl
and
mov
xchg
mov
push
xchg
je
push
ficoms
sbb
jl
sti
cmpb
jns
inc
enter
sbb
jge
pop
pop
data16
cmpsl
inc
mov
push
cli
push
nop
push
fsubrs
in
pop
hlt
rcrb
mov
repnz
outsl
aad
push
icebp
push
sub
lea
scas
sti
ret
das
dec
subl
out
push
or
sub
incb
jecxz
je
sub
jnp
mov
jno
loope
inc
mov
rorb
lock
push
repz
adc
loopne
data16
in
jecxz
xchg
and
mov
adc
mov
lcall
shrb
insb
xchg
or
movsb
addb
fldenv
arpl
pop
jg
ret
aas
fwait
mov
sahf
es
add
add
inc
mov
sub
or
mov
addr16
repnz
sbb
lcall
adcb
popa
adc
mov
cmp
test
add
adc
cmp
sahf
push
cmpsb
mov
cmp
shll
nop
stc
jns
push
xchg
jmp
shlb
or
test
sbb
clc
fdiv
iret
ss
push
test
loop
into
xorl
jp
cmp
xchg
and
add
dec
push
mov
mov
decl
pop
es
xor
std
lahf
test
add
in
mov
in
xor
test
xchg
in
hlt
adc
rcl
dec
aaa
sub
shl
mov
sbbb
jb
stc
xor
push
pop
dec
push
les
xchg
scas
inc
sbb
call
mov
mov
mov
cmc
ret
fwait
sbb
orl
mov
push
popa
mov
jmp
inc
ljmp
pop
arpl
lahf
and
push
test
lods
rcll
mov
sbb
movsl
fsubrl
add
sub
sbb
inc
mov
test
cld
inc
insb
mov
movsl
adc
xor
pop
inc
pusha
cld
scas
lahf
add
adcb
leave
enter
test
pop
sub
pusha
outsb
icebp
je
rcrb
mov
aas
jecxz
adc
mov
sarb
stos
mov
scas
popf
inc
fildl
out
lods
adc
and
cs
mov
rorb
inc
imul
test
sub
lock
jb
in
pushf
xchg
jns
fstp
dec
arpl
sarl
sbb
mov
cmpsl
mov
aam
and
jae
jbe
sti
ficompl
push
lods
mov
loope
xor
into
out
jge
push
xchg
dec
cwtl
cmp
out
outsb
or
in
inc
addl
mov
cmpsl
and
aam
in
dec
dec
andl
int
loope
pop
insl
xor
divl
scas
ljmp
leave
cmpsb
test
cmp
in
sbb
adc
movsl
push
push
sbb
push
stos
popa
xchg
adc
shlb
pop
icebp
push
jl
ds
flds
xlat
jnp
popf
ss
and
sub
pop
xlat
ret
inc
ret
fwait
std
faddl
sub
push
mov
fcmovu
push
jge
and
mov
xor
push
jl
cmc
sbb
test
ja
stos
dec
das
mov
mov
inc
outsb
or
lahf
enter
aad
cld
int3
lea
inc
adc
jns
sarb
push
pop
lcall
cmc
mov
ret
cltd
sbb
das
js
scas
jge
sbb
add
mov
fnsave
outsb
div
xchg
in
mov
pop
mov
jecxz
or
xchg
dec
jb
aam
sub
pop
cmp
ret
push
repz
std
sub
shll
leave
stos
iret
push
pop
sbb
out
push
into
or
sbbl
pop
mov
scas
dec
outsb
inc
mov
jae
xor
lret
push
lcall
scas
sub
push
lret
push
int3
push
or
mov
imulb
out
lods
jb
cmp
or
jg
stos
insl
lret
or
mov
movsb
sub
pop
adc
mov
fimull
sub
jne
inc
adc
mov
fwait
xchg
mov
ss
shlb
dec
cltd
push
aad
mov
test
mov
lods
clc
movsb
and
xchg
aaa
jmp
sbb
sbb
sub
xchg
leave
xorl
insb
out
out
imul
in
push
fcmovnb
cld
fdivrl
dec
sub
pusha
add
cmp
push
pushf
add
shll
negl
es
incb
cmpsl
xchg
nop
cmc
inc
shll
inc
int
jmp
or
inc
scas
dec
mov
dec
mov
outsb
xchg
idiv
faddl
push
push
lods
mov
mov
aam
loope
movsl
sarb
sahf
pop
ljmp
jl
pop
add
aaa
pusha
sub
leave
push
in
xor
pop
pop
les
jbe
xchg
mov
lahf
dec
sub
xchg
sbb
mov
sbb
icebp
xor
push
fwait
cmc
mov
test
ret
mov
sub
pop
and
movsl
imul
pop
pop
lock
cmp
adc
negl
push
sub
repnz
mov
inc
push
mov
rcll
cmp
push
ja
pop
and
xchg
sub
jecxz
xor
push
or
push
data16
cmpxchg8b
stos
in
in
in
cmp
mov
es
jne
jbe
xchg
inc
fcomps
sbb
sbb
stc
shrl
inc
jg
and
push
bnd
add
lds
pusha
loop
or
xchg
adc
lahf
push
push
inc
cli
fildll
stos
jg
adc
jnp
in
cs
and
movsb
jnp
push
fs
rol
popa
sub
pop
adc
adc
les
cmp
call
sar
sub
push
icebp
jecxz
pop
daa
mov
xchg
ret
or
adc
notl
negb
mov
or
roll
addb
and
add
orl
sahf
and
fsubr
stos
jb
push
stos
push
mov
adc
sub
mov
pop
inc
pusha
push
dec
lds
xor
icebp
push
mov
sbb
pcmpgtb
add
xor
mov
sbb
aas
inc
arpl
xchg
in
or
lret
dec
and
mov
stos
inc
repz
int3
rcll
imul
add
push
push
jl
cmp
shl
sub
ja
push
push
loop
sbb
sub
inc
adc
mov
push
mov
out
loopne
sub
adc
cs
aam
cwtl
ret
scas
cmpsl
divb
in
shlb
stos
repnz
fiaddl
mov
add
inc
popa
xchg
movsl
addr16
pop
xor
pusha
es
insl
adc
dec
cmp
cmc
je
popa
outsl
cli
ret
mov
and
dec
cmc
incl
dec
nop
pop
fucomi
pmaxub
and
sbb
sbb
sbbl
add
shlb
adc
int3
addr16
xchg
es
cltd
jns
jb
sbb
pop
mov
mov
mov
adc
cmpsl
cltd
movsb
jo
sbb
lock
test
lret
push
fcomip
lea
js
ret
les
push
inc
mov
cmp
fstps
shrl
xchg
je
je
call
push
push
insl
lds
mov
cmp
or
icebp
sbb
inc
out
or
aam
and
cmp
es
lds
xchg
ss
mov
sub
push
pushf
test
out
loop
es
sbb
add
das
out
or
pop
cmp
adc
rcrl
dec
inc
bound
cmp
mov
xchg
and
xor
push
jns
lcall
sub
cmpsb
fucomip
shrb
jbe
mov
xor
inc
mov
sbbb
test
add
scas
movsb
push
inc
lret
pop
fidivs
xchg
xor
mov
cmp
or
std
movb
aad
dec
jl
mov
jns
ficompl
lahf
loopne
cmp
test
fbstp
js
loope
mov
call
cmp
mov
cwtl
inc
jge
inc
cmpsb
adc
pop
scas
jmp
cld
addr16
dec
in
mov
lret
incl
sub
repnz
add
arpl
loopne
add
push
ljmp
lods
push
mov
js
push
jae
xlat
inc
stc
xchg
enter
sub
xchg
mov
push
fidivrl
fldenv
fbstp
notl
push
scas
andl
jmp
mov
xchg
imul
pop
push
adc
shrl
int3
call
aas
push
dec
lret
push
aaa
arpl
lods
arpl
dec
mov
imul
gs
cld
mov
call
or
cmp
cmp
or
movsb
mov
xor
push
imul
scas
xchg
cli
xor
xchg
hlt
lret
aas
fstl
jg
cmpsl
scas
inc
pop
add
jns
stos
dec
sub
push
out
ja
xor
stc
sar
repz
push
adc
lods
push
or
into
mov
stc
mov
add
int3
movsb
pop
cmp
ljmp
aaa
in
push
lea
pop
adc
mov
mov
int3
or
xchg
mov
int
dec
jmp
lods
fs
pop
xchg
test
push
movsb
dec
mov
andb
jnp
loope
pop
push
cmpsb
mov
repnz
mov
clc
jne
cmp
lcall
andb
stos
mov
into
add
mov
xlat
lods
shrl
or
sbb
pop
rcrl
jae
outsb
fwait
in
xchg
adc
sarl
addr16
test
test
xchg
add
and
mov
inc
inc
mov
sub
pop
or
pusha
ret
push
inc
push
sbb
shrb
imul
js
movsb
lods
xor
bnd
sbb
jg
int
sbb
imul
shll
mov
push
dec
aad
ljmp
dec
test
pop
cltd
outsl
es
xchg
fcompl
in
sub
jl
mov
cmpsl
xchg
cmp
mov
push
stos
mov
hlt
mov
imul
aad
mov
je
cs
shll
push
mov
bound
sbb
cmpsl
pop
xor
outsb
mov
es
imul
pop
inc
roll
lcall
stc
push
mov
xchg
adcl
div
inc
dec
and
jns
xor
fs
movsb
cmp
pop
js
jg
cld
sub
hlt
lahf
sbbb
mov
rorb
dec
xchg
xor
lods
inc
jl
dec
mov
sub
lahf
dec
xchg
pop
inc
shr
fmuls
fmull
mov
or
and
ret
cmc
leave
adc
dec
jmp
jo
xor
jmp
cltd
hlt
push
pop
lock
dec
pop
fucomp
adc
or
and
mov
cmp
add
imul
dec
insl
add
cmp
sbb
stos
dec
mov
push
or
arpl
add
popa
aaa
daa
adc
lret
jl
push
cwtl
insl
repnz
cltd
push
cltd
test
addr16
jmp
mov
dec
mov
jmp
sbb
imul
inc
mov
mov
push
mov
xchg
in
pop
and
mov
gs
clc
jb
xor
aad
insl
jno
es
hlt
mov
mov
or
in
jmp
test
subl
or
stos
in
pop
in
and
mov
rclb
call
mov
dec
repnz
sbb
mov
mov
or
lret
aaa
jg
testl
jg
sbbl
popf
jns
cmp
cli
cmp
and
shr
adc
in
sbb
out
dec
ljmp
out
pop
add
and
out
loopne
insb
arpl
mov
mov
das
push
xor
lods
adc
cmc
fdivs
iret
or
in
das
ret
jne
inc
repz
cmc
or
xchg
pusha
mov
mov
sar
popf
test
push
xchg
outsl
outsl
rorb
mov
data16
clc
jge
mov
fldenv
adc
inc
in
dec
dec
inc
sbb
aad
mov
into
mov
mov
jne
mov
sarl
and
xor
decl
flds
sub
cmp
pushf
sub
xor
in
ds
mov
sar
pop
cmp
cli
or
fwait
jmp
pushf
mov
jmp
aam
mov
lcall
inc
sti
icebp
iret
adc
adc
fdivp
aad
inc
mov
cmp
mov
lsl
aaa
in
mov
jmp
pop
or
add
jbe
fimuls
test
test
pushf
dec
out
mov
inc
dec
xchg
dec
xor
xor
out
rorb
add
xor
sbb
xchg
aas
in
mov
sbb
fadds
mov
and
cmp
mov
les
dec
ss
lea
aas
inc
dec
notl
pop
loopne
xchg
fisubl
adcl
xchg
push
cs
lret
shll
and
pushf
pop
xchg
aas
sub
test
in
adc
bound
xchg
jo
stc
inc
cmpsl
int
ljmp
sbb
loope
mov
or
fidivrl
or
mov
xor
cmc
aam
add
and
je
cmpl
rcl
pop
stos
add
cmp
adc
lret
insl
pop
lods
mov
pushf
add
loope
cli
rorb
adc
pop
mov
push
jecxz
adc
and
sbb
inc
scas
sbb
dec
mov
je
es
mov
add
inc
add
decl
ljmp
loop
jg
push
int3
out
xchg
mov
mov
xchg
jp
mov
push
mov
push
adc
adc
xchg
push
adc
out
and
daa
xchg
cwtl
cwtl
rcr
mov
inc
shll
pop
lcall
test
adc
jl
xchg
mov
xchg
lds
or
pop
call
push
pop
lds
leave
orl
cmpsl
sbb
xchg
ret
add
sub
in
icebp
cmp
inc
push
xor
enter
pop
xchg
inc
add
imul
adc
and
fwait
cmp
xor
or
repnz
insb
dec
mov
sub
les
dec
lock
repz
stos
outsl
pop
dec
les
xchg
fs
mov
pusha
cltd
rorb
and
jne
ds
dec
push
jne
push
js
sahf
repnz
test
pushf
pop
test
outsb
mov
cs
pop
add
or
dec
mov
hlt
jnp
mov
xor
loopne
cmp
lcall
push
xchg
inc
test
subb
and
inc
or
mov
push
push
clc
inc
sahf
movsb
dec
or
add
jns
push
loope
clc
xchg
xchg
rclb
int3
and
fcompl
mov
xchg
or
sbbb
int
xlat
fisubrs
sub
xchg
jno
scas
mov
pop
xchg
dec
sub
adc
cwtl
subb
jns
xchg
mov
lahf
gs
movsl
xchg
pusha
repz
ret
xchg
sub
mov
inc
inc
mov
in
cli
jb
pop
dec
dec
sbb
inc
clc
push
or
ds
cmc
in
daa
repz
push
mov
out
lea
mov
add
mov
dec
mov
ljmp
dec
lods
addl
cmpsb
fadds
les
pop
out
test
imul
jmp
lcall
frstor
insl
fidivs
cmp
mov
aaa
push
cmp
jp
add
cltd
xor
cld
pop
xor
repnz
push
clc
cmp
push
pop
xor
mov
insb
in
sahf
jmp
mov
cmpsl
shrb
movsl
imulb
cltd
mov
cmp
stc
sub
and
jae
out
dec
das
hlt
cmpsb
lods
mov
push
sbbl
fs
arpl
mov
pop
sub
cltd
cmp
lds
inc
stc
shl
aas
and
xlat
mov
loop
in
fimuls
push
jle
dec
repz
movsl
movsl
shll
sbb
arpl
cltd
aas
adc
loopne
das
andl
jns
xchg
into
ja
mov
xchg
std
jmp
mov
push
or
xor
mov
sbb
jg
loop
enter
or
pop
int3
popl
jp
adc
imul
dec
inc
and
push
mov
jnp
and
push
mov
test
ds
jl
lea
clc
push
jecxz
add
mov
inc
lcall
push
sub
jne
push
push
loop
outsl
ljmp
js
ret
addl
andb
xchg
sub
sbb
dec
pop
and
scas
mov
add
popa
std
xor
rclb
mov
xchg
mov
cmpsl
pop
jae
fwait
ja
push
add
into
daa
mov
jg
hlt
dec
lret
push
lods
cmp
or
movsl
push
pushf
mov
imul
pop
clc
sbb
addr16
aad
jnp
stos
mov
xchg
push
sub
inc
xchg
cmp
or
enter
cld
inc
mov
sub
dec
adc
clc
xor
test
lods
adc
mov
inc
sub
into
fwait
decb
mov
rcll
push
adc
fnsetpm(287
rcll
outsb
adc
add
in
enter
and
push
test
and
jp
mov
sbb
mov
out
sub
sub
add
in
mov
mov
cmp
push
inc
clc
loop
cmp
adc
dec
dec
hlt
imul
or
jnp
jne
int
push
jnp
mov
lds
pushf
push
out
mov
mov
mov
sbb
jns
push
lcall
imul
push
js
add
adc
mov
mov
movsl
iret
sub
push
cmpsl
mov
in
xchg
add
into
adc
and
sub
lret
jno
or
inc
out
leave
xchg
pop
and
mov
stos
out
cmp
das
or
xchg
push
in
pop
ficomps
nop
add
aaa
dec
pop
jo
adc
pop
imul
xor
jecxz
mov
les
jo
add
loop
lea
sbb
push
xchg
out
cmpsl
cld
popa
arpl
and
sbb
ljmp
xor
das
or
fwait
mov
jns
xor
sbbb
fisubl
and
or
jns
push
adc
outsl
pusha
test
cmpsb
mov
pop
into
pop
cmp
mov
dec
mov
movsb
mov
outsl
imul
xor
ss
adc
es
je
nop
pushf
enter
nop
mov
jge
cwtl
cld
inc
sti
sbb
mov
out
fs
loopne
in
pushf
rclb
shlb
divb
shll
aam
add
testl
aaa
cmp
mov
mov
push
loope
mov
aam
cmp
push
lahf
push
test
cltd
shl
adc
sub
add
repz
repz
fistpll
xor
mov
stos
insb
sub
mov
popa
sahf
imul
pop
pop
mov
adc
or
mov
je
mov
stc
in
and
jns
inc
sbb
movb
fdivs
shll
and
jne
push
and
inc
shrl
jbe
in
pushf
cmp
dec
faddl
insl
shll
dec
mov
and
into
sarb
push
mov
cs
push
ljmp
stos
push
inc
jns
test
pusha
js
jns
mov
jns
int3
and
scas
fidivl
cmp
mov
sub
push
xchg
int3
fldt
fwait
loop
cli
fcmovnb
mov
mov
inc
sub
mov
mov
shll
enter
ret
shrd
mov
mov
push
lock
jne
mov
clc
pop
pop
stos
inc
pop
das
inc
cltd
or
xor
clc
jo
pop
dec
popf
xchg
sbb
dec
in
pop
xor
dec
sub
ret
enter
shll
xor
jae
cmp
jnp
clc
push
push
dec
fadd
daa
mov
mov
rorl
xor
add
cmpsl
jbe
jl
outsl
sub
and
sub
sbb
or
jno
add
push
test
jmp
and
outsl
dec
aad
cmp
cwtl
pop
xchg
jp
int
jecxz
jge
gs
jl
repnz
add
or
jne
movsb
jne
cltd
imul
push
mov
mov
stos
into
pushf
jo
hlt
mov
rcrl
es
mov
pushf
xlat
dec
in
dec
scas
pushf
mov
idiv
fwait
add
pop
mov
pop
bound
push
adc
lahf
int
inc
in
sbb
and
sbb
rcll
push
mov
mov
and
insl
fwait
loop
cmp
out
cmp
sbb
fldcw
pop
mov
dec
dec
loop
inc
add
pushf
add
incb
pop
sub
jb
pop
imul
dec
inc
pop
daa
rclb
and
mov
lcall
aad
jmp
mov
lock
ret
adc
pop
daa
loopne
lea
cmpsb
stc
stc
les
int
mov
sbb
out
scas
outsb
mov
cmp
leave
cmpsb
es
out
mov
xor
les
fcoml
gs
push
negb
jne
es
cld
sub
xorl
sub
sahf
hlt
les
sbb
dec
leave
std
push
mov
dec
arpl
dec
push
xchg
stos
ret
std
test
mov
aaa
dec
xchg
dec
xorb
in
pop
mov
into
loopne
fs
out
addb
test
xlat
gs
cli
arpl
jo
dec
mov
incb
push
xchg
mov
jp
mov
pop
add
fidivrs
mov
mov
mov
shll
add
jg
adc
mov
adc
nop
mov
iret
hlt
bswap
mov
inc
mov
pop
mov
out
jns
outsb
data16
xchg
mov
pop
or
jo
mov
insl
cmpl
jo
mov
and
inc
rclb
push
pop
ds
inc
pushf
test
stc
or
filds
out
add
lods
loopne
imul
pop
jns
cmp
pop
mov
pushf
inc
nop
mov
xchg
jle
jbe
mov
mov
aam
cmpsl
leave
dec
ss
aaa
xchg
xchg
bound
dec
cmp
mov
and
cmc
push
sar
mov
jp
fistpl
bound
notl
adc
mov
fwait
xchg
mov
pop
add
inc
push
dec
and
dec
mov
inc
mov
js
sti
push
add
hlt
mov
sub
stos
ljmp
nop
imul
loopne
hlt
stos
int3
or
enter
mov
in
arpl
clc
push
cmp
inc
sbb
dec
pop
mov
pop
pop
ret
pop
je
fidivs
fadds
rolb
adc
jp
and
test
dec
outsb
fistl
jne
ja
stos
inc
sub
lcall
lahf
gs
and
or
push
pop
mov
mov
cmpsb
sub
add
xchg
cmpsb
outsb
dec
aad
dec
test
jecxz
push
insb
int
cmp
jne
in
mov
jp
add
jns
xchg
and
or
jl
ret
pop
push
adc
pop
jno
bound
mov
or
out
mov
loop
dec
das
lods
sub
push
fmull
cmc
mov
pop
cwtl
sub
mov
ret
fs
adc
or
adc
sbbb
icebp
cld
adc
cmpsb
testb
cmp
adc
push
imul
rorb
push
mov
pop
in
jg
repnz
fldenv
mov
push
push
xchg
jnp
call
das
push
icebp
gs
xchg
xor
adcb
test
xor
xchg
and
dec
inc
and
push
cmp
adc
mov
dec
add
cld
mov
push
and
scas
jp
add
mov
ja
cmp
push
sahf
cmp
daa
jle
and
dec
xorb
insl
fsts
nop
jle
fnstsw
arpl
shrb
mov
xor
rclb
clc
adc
pop
rcrb
movsl
cmp
cmpsl
daa
iret
leave
adc
mov
sub
inc
or
push
lods
lock
test
pop
mov
mov
cmpsl
pop
pusha
adc
movsb
and
jo
push
jp
popa
pop
push
hlt
or
mov
aam
xchg
cmc
jl
dec
cltd
or
scas
push
in
mov
push
dec
sbb
ljmp
divb
sub
in
notl
mov
out
stos
sbb
jmp
adc
scas
add
cmc
push
daa
sbb
xor
pop
sbb
sbb
mov
add
inc
cmpsl
mov
jmp
clc
dec
push
and
ficoms
cli
ljmp
xchg
out
mov
inc
aaa
mov
std
in
je
fs
test
add
mov
dec
call
inc
jmp
leave
shlb
daa
das
adc
lret
sbb
mov
ficoml
pop
mov
add
inc
int3
pop
nop
push
test
loop
lea
jl
add
lods
mov
cmpsl
dec
cwtl
stos
mov
mov
push
in
mov
mov
mov
and
mov
idiv
test
outsl
sub
pushf
xchg
pcmpeqd
stos
punpckldq
and
clc
fnstsw
enter
nop
inc
push
in
xchg
fistl
inc
sub
and
push
jnp
jl,pn
std
cmpsb
add
and
sub
and
xor
sub
es
gs
dec
cmc
sbb
pop
add
mov
mov
xchg
jl
xchg
adc
ficompl
clc
stos
mov
mov
cmp
dec
addr16
pop
inc
test
pop
dec
lret
outsl
or
adc
dec
push
push
mov
fdiv
add
push
inc
mov
mov
sahf
jp
and
jnp
aad
pop
sti
call
mov
fcomip
push
es
inc
les
repz
movb
mov
xor
cld
int3
cld
icebp
in
and
test
jbe
es
movsb
push
pop
xor
jo
std
pop
decb
push
mov
ljmp
mov
cld
rcr
or
cli
mov
sub
cmp
xchg
inc
cs
and
jne
aad
sbb
push
xchg
mov
das
mov
pusha
into
dec
xor
push
mov
inc
or
repnz
lods
lcall
mov
clc
icebp
cmpsl
outsb
mov
loope
negl
pop
sub
ficompl
aad
or
dec
iret
dec
icebp
xchg
mov
gs
inc
int3
adc
popa
mov
mov
addl
fucomip
pusha
or
pop
vmaskmovdqu
inc
and
xchg
jne
dec
movsb
push
in
and
std
pop
mov
mov
sbb
mov
xor
push
mov
add
push
jae
push
dec
mov
repnz
test
outsl
fistps
pop
iret
int
fwait
repz
stc
mov
jmp
push
inc
xchg
or
leave
mov
pushf
aas
xchg
fwait
gs
mov
test
sub
pop
cmp
rcrb
cwtl
push
fcoml
jecxz
add
sbb
test
dec
push
mov
popa
mov
pop
inc
push
dec
aaa
pop
mov
pop
stos
xchg
dec
add
out
mov
jmp
dec
jo
mov
xor
mov
push
inc
xchg
dec
or
pop
popf
and
mov
scas
mov
dec
adcb
jg
push
ficoml
dec
fnstsw
cld
mov
fimull
aam
jne
dec
inc
dec
xor
push
fisttps
add
pop
pop
lods
jle
dec
rorl
daa
mov
ret
pop
jae
bound
jmp
push
jl
popf
into
xor
jl
cmpsb
jl
rcrb
push
incb
hlt
sbb
cmp
out
push
xchg
mov
push
push
pop
js
enter
insb
mov
aad
add
inc
mov
aad
cmp
and
cmp
iret
shlb
dec
dec
mov
jmp
repnz
cmp
divl
into
mov
inc
iret
cld
pop
jbe
mov
mov
add
into
add
insb
cmp
adc
into
out
repz
mov
ret
in
push
scas
dec
sbb
notl
dec
cs
jnp
outsb
or
ljmp
je
loop
cmp
jle
test
ds
rclb
xlat
jb
jbe
adc
jne
shlb
dec
testl
cmp
ljmp
jnp
mov
filds
mov
fstl
and
je
fs
popf
jnp
pop
pop
ljmp
daa
aad
mov
xchg
hlt
inc
mov
sbb
sbb
push
or
xor
mov
fdivl
addr16
xchg
mov
mov
je
mov
sbb
inc
sarb
mov
cwtl
sub
push
icebp
mov
aaa
mov
out
mov
sbb
xor
fidivl
cmp
icebp
sub
add
out
cmp
push
xchg
mov
xor
fldenv
les
mov
xor
outsb
pop
in
cmp
test
sbb
dec
cld
mov
mov
incb
mov
aas
imul
xchg
push
dec
mov
cmp
out
push
push
inc
and
jmp
xchg
incb
inc
fs
or
or
and
push
cltd
and
sub
xor
aad
nop
dec
call
into
inc
rsqrtps
push
cmc
test
and
aad
push
lds
sbb
in
int3
adc
mov
mov
sarl
fwait
jg
mov
les
jno
ds
mov
push
stos
mov
push
add
push
mov
enter
xor
lods
mov
fbld
adc
out
aad
fisubs
sbb
pop
js
xchg
outsb
ficoml
cmp
mov
pop
lods
ds
out
jo
loope
mov
or
jbe
xchg
fisubl
lcall
daa
fadds
pushf
out
sbb
es
sbb
mov
out
mov
sbb
pop
enter
add
je
in
push
xchg
test
mov
and
cmp
mov
clc
mov
ret
mov
cmc
ss
fidivrs
cmp
pop
mov
data16
xchg
mov
aaa
stc
adc
xchg
fdivr
cmp
fs
pop
xchg
into
push
insb
mov
xor
adc
push
xor
jle
pop
adc
repz
adc
mov
inc
sbb
out
sub
mov
add
xchg
cld
add
push
ds
jecxz
cltd
mov
xchg
stc
push
xchg
fistpll
fstpl
or
push
inc
das
mov
sahf
xchg
dec
adc
repnz
mov
ret
test
mov
push
test
dec
adc
ljmp
fnstenv
insl
aad
push
call
jno
shl
pop
jle
fwait
hlt
xchg
cmpsl
push
imulb
sbb
testb
pop
cmp
leave
jl
fldenv
dec
mov
xor
jne,pn
add
cmp
push
fisttpl
pop
in
or
into
mul
lar
inc
cmpsl
not
inc
sti
scas
ficompl
and
and
fsub
repz
int
mov
call
movsl
in
inc
or
cmp
insb
mov
jns
lock
mov
or
mov
or
cmp
cld
adc
shrl
push
mov
and
in
int
aad
daa
push
ljmp
mov
fbstp
in
lahf
cmp
pop
in
scas
push
pop
mov
xchg
fisubl
inc
cs
clc
mov
mov
aas
push
mov
test
push
imul
mov
and
dec
jg
sbb
sarl
call
push
mov
mov
inc
or
cmp
jmp
mov
push
imul
js
xorl
cmp
outsb
xlat
mov
jg
push
or
popa
jb
hlt
jns
mov
mov
rcrb
and
sti
iret
mov
test
je
leave
shlb
sub
and
js
adc
adc
mov
rcrl
mov
pop
popa
cwtl
fwait
mov
dec
push
outsb
push
pop
xlat
je
push
add
popf
popf
and
bound
ja
mov
outsl
jecxz
out
dec
fwait
inc
enter
cmc
mov
popf
addr16
mov
push
mov
outsl
repnz
mov
push
sbb
jnp
mov
and
in
inc
test
mov
rcrl
pop
sbb
jge
xchg
mov
je
xchg
les
inc
fcompl
aad
loopne
int
loop
mov
ja
cmp
pop
shl
int3
ret
pop
xor
jae
pop
call
cmp
xor
cwtl
fadds
adc
ss
add
dec
mov
jns
mov
mov
in
mov
test
in
aam
pop
dec
cmpsb
push
pop
mov
mov
xor
push
inc
xlat
mov
jo
je
das
imulb
and
int
xor
es
rcrl
je
cmovle
add
fs
mov
ret
xor
aad
push
mov
imul
arpl
jnp
adc
cmp
adc
and
sub
xchg
lds
or
lret
sub
add
in
fs
fs
cmp
add
unpcklps
divl
into
pushf
aad
push
call
js
out
mov
repnz
inc
inc
cmp
mov
mov
and
js
out
sub
rcrb
or
dec
test
clc
dec
daa
jmp
pop
or
mov
cmp
lds
loope
and
test
pop
dec
or
pop
jp
rol
pop
hlt
mov
sbb
imul
pop
jne
faddl
pop
sarl
inc
adc
cmp
repz
xchg
adc
ss
call
dec
lret
cld
sub
loop
std
and
out
lea
cli
imul
dec
mov
mov
mov
push
mov
addr16
in
cmp
push
dec
loopne
enter
mov
or
sti
int3
jmp
dec
mov
dec
ja
xchg
aaa
adc
lret
sub
fsubrp
fs
cwtl
push
jle
mov
aaa
nop
lods
lahf
ss
sbb
mov
gs
pop
mov
notb
dec
int
icebp
push
fwait
movb
outsb
jae
sti
inc
mov
loop
loope
adc
xchg
mov
lods
xchg
leave
stos
es
outsb
mov
iret
push
repz
xchg
aaa
push
iret
sar
ret
cmpl
out
cmp
lds
in
pop
jmp
xchg
flds
xchg
ljmp
std
push
cltd
mov
push
cmp
adc
dec
add
fimuls
dec
std
inc
orl
sub
mov
popf
cmp
mov
pop
leave
xchg
mov
in
and
pop
stos
imull
cmpsb
mov
popf
xor
or
ss
xchg
xor
popl
add
ljmp
push
rcrl
cltd
push
fisubrs
xlat
and
repnz
sti
xor
stos
dec
mov
xor
xor
mov
cmp
scas
cmp
loope
das
sahf
call
inc
or
add
push
dec
ljmp
mov
cmp
jecxz
jecxz
fisubrl
mov
sti
in
jp
xchg
out
jmp
movsb
cmc
xchg
subb
outsl
sub
jnp
mov
fsubrp
icebp
roll
dec
out
pop
push
cmp
cmp
jb
js
xlat
push
jne
sub
and
in
movsb
je
mov
mov
cmp
pusha
xlat
ss
and
rol
sbb
push
out
pop
iret
adc
lods
inc
xchg
out
pop
arpl
stos
fs
dec
jb
enter
inc
loop
mov
mov
aaa
sbb
cmp
jle
icebp
and
loop
xchg
fs
cmpsb
jge
pop
xchg
lods
lea
dec
je
fisttps
jnp
ret
sbb
jno
dec
popa
or
stos
pop
mov
imul
pop
rorl
cmpsl
sahf
in
aaa
dec
pusha
mov
mov
ja
bnd
jmp
ss
ja
jl
js
stos
lahf
and
imulb
sub
mov
andl
or
hlt
add
pop
mov
and
push
inc
pop
stc
lods
mov
xor
pop
ja
cmp
in
sub
push
mov
shll
mov
inc
loopne
mov
jns
xor
cmp
gs
mov
xchg
mov
fsubrs
ret
and
add
xor
test
movsb
pop
or
in
test
cmp
shll
fs
dec
push
adc
cmp
sbb
lea
insl
adc
push
sbb
mov
add
mov
fsubr
test
in
notl
sbb
je
int3
jo
insl
pop
cmpsb
rorl
add
and
cwtl
cmp
pop
mov
imul
test
push
cmp
pop
xor
inc
idivl
or
pop
enter
inc
fsubl
mov
add
xor
fwait
out
ror
or
aam
nop
pop
xor
rcl
mov
pop
rorb
adc
test
mov
aad
psadbw
push
jmp
jl
dec
adc
lahf
mov
sbb
pusha
ror
pop
jp
lret
out
std
popf
call
testl
dec
jl
js
mov
pop
ret
and
mov
hlt
mov
add
daa
das
inc
fstp
add
xchg
push
enter
nop
pop
push
ficomps
adc
sbb
or
inc
jp
aaa
lahf
fucom
lea
sub
arpl
ret
inc
ds
and
out
add
lret
cs
mov
shlb
mov
jg
addr16
jp
je
mov
out
test
cltd
xchg
inc
sbbl
arpl
int3
jns
loope
mov
push
fstps
mov
clc
cltd
negb
hlt
mov
mov
enter
lahf
enter
stos
push
cs
xor
xchg
fadd
adc
stc
and
sbb
fsubr
clc
fidivrl
cwtl
jmp
jmp
scas
xor
pop
int3
inc
out
push
mov
mov
out
ret
loope
dec
jp
int3
arpl
sbb
xchg
test
and
je
xchg
rcr
push
sbb
push
sub
pop
movsb
adc
ret
pop
mov
ds
and
clc
leave
jns
dec
adc
clc
fwait
iret
inc
rol
mov
sbbl
or
scas
xchg
in
inc
movsl
dec
sti
imul
mov
aas
test
lods
inc
mov
flds
mov
pop
sub
mov
movsb
cmpl
jns
lcall
xor
outsb
sbbl
mov
je
in
sbb
add
push
shll
pop
fmuls
out
xor
xchg
stc
lcall
int
xor
push
ljmp
cmp
js
loopne
adc
adc
in
xor
movsl
lret
ja
nop
fbstp
cld
movb
cmc
addl
push
adc
insb
lcall
sbb
cmp
js
andb
packsswb
cmc
sbb
cmp
xchg
movsb
jno
lret
jecxz
push
out
stos
xchg
sbb
bound
jae
mov
pop
or
rcll
imul
jb
rorb
push
pop
dec
repnz
rcrb
push
jae
mov
int3
mov
mov
push
or
adc
movsw
inc
cmp
cld
mul
in
xchg
cmp
xchg
mov
or
lea
jge
adc
roll
mov
xor
mov
insl
jmp
hlt
mov
les
push
sub
cmpl
xchg
xchg
dec
roll
cmp
mov
pop
mov
lret
ret
dec
inc
shll
sahf
pop
lds
mov
push
in
popa
or
loope
inc
sahf
repnz
cmp
movsb
int
outsb
ss
fisubl
ret
repz
sub
jl
cmp
out
loop
sub
movsl
fsubrl
aaa
sbb
push
push
sbb
xor
xor
fucomip
inc
xchg
in
push
testb
ret
sahf
mov
les
inc
out
pop
xor
cs
js
lahf
mov
adc
xchg
in
ljmp
bound
adc
mov
shll
movsb
jo
push
mov
fildll
inc
std
cmp
cmp
xchg
xchg
sbb
xorb
out
mov
jns
xchg
xchg
xchg
aam
scas
ljmp
bound
push
pushf
mov
push
data16
adc
sub
ja
pop
mov
pop
test
xchg
imul
jl
mov
jo
cmp
fbld
adc
cld
sub
pop
addb
cmpsb
push
dec
add
repnz
cs
fwait
or
push
inc
imul
iret
int
jae
enter
xorb
jge
cmc
stos
mov
xor
les
sub
insl
js
push
cmpsl
add
mov
dec
test
adc
jne
movsb
add
jg
push
inc
mov
inc
pop
test
xchg
mov
cwtl
cmp
iret
popf
rorb
cmpsb
std
daa
xor
or
test
fidivs
jnp
stc
fstpl
jmp
jno
xorl
push
ret
scas
cs
icebp
pop
out
cltd
mov
movsl
dec
pop
popf
stos
pushf
movsl
movsb
mov
pop
sub
adc
aaa
outsb
push
movsb
push
fimuls
cwtl
inc
js
das
xor
pop
xchg
sub
rorb
jg
pop
push
cs
xchg
mov
xor
pop
call
mov
mov
mov
std
mov
dec
mov
out
int3
mov
repz
mov
imul
mov
testl
fidivrl
sbb
insl
lods
inc
das
mov
push
mov
out
adc
in
mov
sarl
cmp
outsl
xchg
loopne
adc
daa
mov
daa
pop
mov
inc
inc
out
lret
xchg
mov
std
sarb
adc
jmp
out
or
arpl
mov
enter
dec
icebp
or
push
sbb
mov
movsb
rclb
xor
je
lock
pop
sahf
xchg
jbe
rcrb
insb
push
mov
in
or
sub
inc
mov
dec
add
xchg
pop
das
btc
pusha
icebp
inc
pushl
jno
mov
data16
push
or
fcomi
mov
jmp
mov
xchg
int3
mov
outsb
push
iret
enter
jge
mov
hlt
out
xor
xchg
popl
int
into
addb
stc
fdivs
testl
dec
pop
in
pop
sbb
push
aas
mov
pop
or
imul
jns
test
call
jle
iret
std
or
add
scas
add
xchg
loop
insl
mov
stos
push
cmpl
aam
add
adc
ds
jmp
add
inc
inc
nop
adc
test
sarb
je
xchg
jb
aaa
xchg
fsubs
andl
orl
xchg
push
add
out
fidivl
sbb
inc
enter
out
add
sub
sti
test
pop
mov
and
sub
test
jbe
mov
negb
psubb
shll
inc
fwait
xchg
fisubs
call
sub
subb
mov
mov
aaa
xor
push
bnd
mov
cmp
xchg
mov
sbb
fistl
sub
jmp
scas
cmc
adc
xchg
xchg
enter
out
aam
jg
mov
shlb
adc
inc
fcoms
movsb
sub
in
sub
jle
mov
popa
cmp
mov
push
or
call
jg
cmc
lret
movsb
add
aas
jmp
mov
dec
and
call
leave
sbb
std
dec
cltd
jle
std
add
push
shlb
cmp
clc
sbb
jle
push
push
decl
aam
mov
nop
mov
mov
std
int3
xor
hlt
cmp
inc
movsb
daa
fiadds
or
xor
or
mov
xchg
inc
jmp
or
mov
jge
negl
dec
xlat
cmpsb
pop
xchg
mov
inc
add
mov
setl
mov
stos
mov
push
rol
pop
push
adc
xchg
nop
aaa
std
xchg
xor
push
and
in
mov
sahf
pop
mov
push
sub
loope
inc
stos
xor
add
jb
mov
xor
jmp
sub
jne
push
sub
push
add
dec
or
std
xchg
or
das
xchg
fwait
or
jl
fdivrs
add
mov
dec
cmp
dec
test
arpl
pusha
out
repnz
push
aam
sbb
and
aas
iret
xchg
movsb
and
sahf
mov
dec
xchg
pop
jno
xchg
lea
sub
outsl
das
mov
mov
fimuls
les
mov
dec
xchg
dec
dec
push
scas
fcomp
push
sub
push
adc
xor
and
popa
fistl
clc
add
and
sub
ljmp
addr16
inc
mov
clc
loope
data16
ss
and
jmp
cmpsl
int
and
outsb
cs
loop
mov
mov
ljmp
cmc
mov
int3
mov
test
or
xor
sbbb
jle
mov
cmp
call
mov
inc
jo
adc
sbb
ret
hlt
xchg
sbb
pop
ret
mov
shlb
notb
adc
mov
mov
fsubrs
stc
dec
arpl
loop
mov
je
ja
hlt
fnstsw
push
jb
out
ret
push
push
xchg
movsl
dec
dec
pop
sub
sub
dec
mov
sub
xchg
sbb
rcr
lret
idivb
sub
fiadds
scas
xlat
ret
gs
mov
and
push
push
xchg
and
andl
aaa
add
test
push
xchg
lret
rcrb
push
loope
sbb
xor
stos
xchg
mov
ja
cmpsl
mov
cli
push
je
cmp
xchg
cmpl
add
inc
push
mov
mov
xchg
sub
dec
ljmp
mov
add
cs
stos
gs
std
movsb
sub
sub
and
push
xchg
popa
out
jmp
test
loopne
inc
mov
jmp
ds
lods
inc
sahf
loope
cmp
push
in
cmpsl
and
ror
mov
mov
add
in
sub
sub
pop
enter
sbb
ret
xor
cmc
ljmp
cmpsb
scas
xor
clc
cmp
jbe
and
jnp
filds
push
sbb
pop
lret
cltd
sarl
addr16
and
incb
iret
orb
gs
ljmp
scas
ds
aam
push
mov
jo
sti
adc
xchg
loope
sbb
loop
stc
sbb
adc
jnp
insl
cmpsb
jno
cmp
lods
jbe
lret
loopne
mov
xor
xchg
sub
fcmovne
mov
out
sti
in
cmp
adc
mov
mov
fldt
mov
aaa
pusha
dec
cs
call
mov
mov
test
pop
mov
xchg
movsb
lret
stc
adc
sub
and
mov
lahf
inc
dec
push
repnz
arpl
sbb
shlb
sub
push
ja
sbb
mov
in
cmp
add
push
nop
sub
pusha
lea
xor
adc
stc
mov
in
jo
or
lea
pusha
std
int3
sbb
pop
jge
aam
and
in
inc
mov
add
sbb
lret
scas
das
cmpsb
add
lock
or
rcrb
xor
cld
sbb
lret
cwtl
xchg
cmp
jmp
mov
sbb
subb
cmp
mov
adc
ss
xor
aam
cwtl
fwait
shll
mov
jo
nop
cmp
lods
or
mov
insb
xchg
sub
mov
mov
xchg
mov
pop
sbb
data16
mov
bound
xchg
cmp
fwait
xor
stos
pusha
popa
shll
imul
movsl
pop
sbb
rorl
sahf
dec
les
sub
lods
push
mov
sbb
aas
mov
mov
cmp
dec
push
jmp
xchg
rorl
mov
dec
das
pop
cmp
les
xor
scas
cld
mov
ror
xchg
popf
mov
aad
sarl
in
mov
pop
rcll
pop
add
shrl
mov
dec
cmpsl
adc
cld
and
movsl
in
cmp
mov
pop
xchg
flds
push
cmp
arpl
and
test
and
sar
xchg
inc
popf
aam
jge
and
inc
inc
daa
push
inc
or
icebp
movsl
fisttpll
cmp
arpl
out
or
loop
imul
push
aas
hlt
andb
inc
sub
mov
clc
jo
mov
loopne
lret
sub
cmp
imul
outsl
cmpxchg
jg
jns
aad
pop
div
push
xchg
iret
adc
jbe
cmp
addl
mov
jl
movsb
push
pop
cmp
iret
adc
cltd
fcmove
je
fs
push
mov
in
jne
cmp
sub
test
adc
outsb
fisttpl
clc
fwait
jbe
cmpl
mov
mov
sbb
int3
insb
imul
ds
js
adc
and
scas
mov
adc
pusha
xor
add
and
data16
pop
sbb
test
addr16
mov
cld
push
in
addr16
outsb
jbe
push
sbb
out
dec
aam
outsb
insl
pop
inc
adc
mov
xchg
pop
pop
or
in
push
fsubl
mov
sub
and
xchg
shll
fldt
dec
mov
out
inc
fnsave
repnz
xor
pushf
sub
fisubrl
aad
daa
in
or
fwait
or
mov
add
or
cmp
push
add
cmpsl
or
cltd
jae
testb
mov
out
sbb
and
push
in
or
loope
pop
fldl
jno
xchg
in
xor
imul
mov
lret
push
out
test
sbb
jno
js
jnp
je
movsb
inc
xor
mov
dec
clc
pop
pop
out
pusha
inc
lods
imul
pop
pop
cmp
sbb
or
imul
dec
mov
rcr
loopne
pop
or
insl
aam
movsb
imul
or
test
mov
cs
stc
inc
xor
inc
add
pop
mov
jl
outsl
push
imul
xor
outsl
jno
call
jge
pop
mov
xor
loop
mov
push
ss
fbstp
push
scas
mov
inc
imul
xchg
sbb
pop
rclb
insb
add
dec
repnz
push
push
lahf
sbb
jp
dec
shlb
daa
push
fcompl
pop
mov
pop
mov
xchg
stos
jl
and
pop
cld
push
imul
add
and
mov
repz
and
out
in
cld
or
pop
imulb
jg
mov
mov
clc
fwait
push
xchg
rorl
mov
jns
sti
pushf
push
lods
push
add
aam
mov
in
and
push
ds
jmp
popa
sub
hlt
dec
les
rcll
movsb
test
jmp
or
jne
add
in
sbb
add
mov
into
add
push
adc
bound
sbb
mov
into
mov
xchg
es
mov
stos
lods
cmp
shrb
orb
mov
pop
xchg
sub
pop
out
jmp
xchg
mov
js
ljmp
or
fwait
cmp
dec
xor
jnp
enter
dec
sbb
mov
aaa
les
iret
in
push
or
bound
xchg
scas
mov
fs
sub
in
xor
inc
mov
sti
aam
adc
aam
xchg
pushf
cmp
cmp
xchg
aad
xchg
mov
cld
rorl
xchg
mov
xor
loope
push
dec
cmpsl
inc
xor
add
cmpsb
fisttpl
lret
add
nop
pop
ds
cs
aaa
data16
mov
pop
xor
insb
sbb
fwait
bound
cli
push
je
or
jmp
icebp
xlat
daa
mov
inc
icebp
add
pop
bound
lret
insb
loope
sti
hlt
sahf
test
xchg
enter
adc
lock
shll
cmp
jae
cmpsl
movsl
sub
xchg
adc
insl
add
stc
or
shl
or
scas
rcl
sub
add
inc
mov
int
jb
test
and
add
insb
std
jecxz
clc
add
sbb
clc
sub
sarl
sarb
clc
pop
into
jp
lcall
mov
rcll
xor
divl
aas
aad
test
mov
incb
movsb
push
cltd
adc
sbb
mov
insl
cmpl
out
adc
shr
xor
lcall
aaa
dec
dec
inc
mov
mov
cltd
or
das
inc
dec
loop
insl
mov
enter
out
mov
div
pop
fucomp
repnz
inc
push
enter
jb
inc
cltd
sub
jne
pop
xchg
insb
sub
test
fstpt
das
outsl
dec
pop
sbb
mov
sbb
dec
jbe
inc
add
inc
or
xlat
out
push
das
in
mov
popa
or
repz
imul
sbb
out
test
pop
fwait
cmp
aas
xor
loopne
pop
daa
out
sbb
popf
sbb
fisubrl
sbb
sahf
aas
dec
pop
popf
mov
fcomps
roll
lods
sbb
int3
mov
lret
dec
lds
fs
sub
rclb
mov
inc
mov
mov
je
popa
add
and
push
or
inc
push
in
imul
hlt
repnz
outsl
test
iret
loop
scas
nop
ret
mov
icebp
cmp
lret
lahf
mov
out
loope
xor
dec
mov
fucomip
and
cmp
data16
fcompp
xchg
mov
and
mov
loope
mov
jecxz
or
mov
pop
fidivrl
add
push
xor
jno
sbb
sbbl
jge
icebp
pop
adc
xor
jg
mov
mov
cmpsl
addr16
les
bound
mov
sbb
sbb
push
into
fisttps
mov
adc
add
adc
mov
popf
inc
insl
test
ret
dec
jno
iret
xor
out
icebp
adc
mov
sarl
dec
mov
lods
pushl
jns
mov
mov
sbb
fstpt
movsb
fstl
insb
out
cwtl
fnstenv
push
das
sbb
or
jne
data16
and
insl
mov
pop
mov
les
adc
pop
mov
dec
mov
cmp
pop
push
push
fidivrs
sub
out
dec
pop
dec
popa
into
repz
inc
sarb
lock
shrl
sti
arpl
test
pop
push
inc
int3
les
sbb
mov
cmp
adc
cmpsb
and
mov
repz
les
popa
pop
dec
xor
cmpsb
mov
fs
jle
in
mov
lds
and
inc
cmp
mov
xor
pop
dec
dec
loopne
add
in
mov
out
mov
jo
stos
loope
or
inc
adc
xchg
xchg
mov
inc
popf
fwait
iret
pop
jne
cmp
adc
lock
jne
and
les
jmp
popf
fs
jecxz
adc
imul
or
push
pop
dec
loope
outsl
mov
xor
mov
cmpsl
repnz
inc
mov
mov
and
and
mov
in
and
xchg
sbb
shll
pop
dec
and
aad
cmpl
push
inc
stos
xlat
xor
pop
mov
adc
sbb
fistl
and
ljmp
mov
push
ja
mov
js
sub
mov
popf
ror
xchg
in
std
sti
into
out
xorb
dec
mov
aas
sti
lea
lock
outsl
sbb
test
push
aaa
sti
fldl
in
cmp
ret
push
pop
rcll
push
or
lcall
jns
add
pop
cmp
mov
ret
mov
jne
adc
sbb
cmpb
lock
pop
sarb
xchg
pop
dec
dec
sub
movsb
ds
mov
in
pop
imul
rorb
fdivrs
addr16
add
pop
popa
fdivrl
ja
mov
loop
jp
test
addr16
aad
mov
cs
je
jge
aaa
lret
dec
hlt
cmpsl
mov
popa
mov
sar
mov
jle
dec
adc
push
fisubs
movswl
dec
cmp
das
in
mov
in
dec
ds
xchg
cli
mov
lret
push
mov
aaa
or
mov
add
idivl
jo
jmp
jecxz
sub
sbb
fdivrl
sbb
ror
push
lods
push
mov
push
jb
jno
sub
pop
sub
out
xlat
dec
and
fs
insl
mov
mov
adc
ret
mov
pop
negl
jmp
push
push
std
loop
sub
sub
mov
out
cmp
and
outsl
fsubp
push
sub
ja
and
or
aad
push
psubq
popa
or
sbb
scas
adc
std
jecxz
loope
out
cmp
jg
cmpsb
loope
jae
mov
jo
dec
xchg
outsb
sub
push
std
xor
mov
and
repnz
popf
lret
push
arpl
or
lea
adcl
and
leave
mov
loopne
mov
jae
repnz
mov
notl
ret
js
and
rolb
add
loopne
sahf
mov
pop
movsl
lcall
adc
xchg
dec
pusha
imul
int3
and
loop
out
add
mov
push
icebp
cmp
ja
push
sbb
push
mov
cmpb
jns
int
add
andl
sbb
cld
test
leave
aad
sti
into
je
popa
les
sub
or
push
xchg
and
je
pop
sbb
insl
mov
inc
pop
push
mov
sub
test
lea
mov
in
mov
and
fcoms
frstor
jmp
hlt
push
lods
xchg
mov
clc
unpckhps
xor
push
icebp
jne
test
adc
paddd
xchg
jge
sub
push
pop
mov
lahf
mov
sub
mov
sub
fld
and
les
push
or
sti
mov
dec
push
movl
mov
xchg
xor
addr16
dec
int
jae
cmc
jne
pop
icebp
cmpsb
les
mov
and
or
mov
mov
sbb
je
pop
in
pushf
push
mov
fsubs
adc
cmp
loope
rolb
into
mov
push
popf
sub
xchg
ljmp
add
cmp
push
or
jb
popf
dec
sbb
jmp
out
sarl
cmp
xor
or
lods
push
cmp
pop
and
sub
aam
lret
cmp
mov
and
leave
out
dec
mov
notl
pop
mov
cs
call
icebp
and
mov
cld
in
xchg
cltd
cmpsb
ljmp
pop
xchg
pop
push
in
jno
push
inc
sti
cmp
fmuls
or
mov
outsl
test
aad
negl
pusha
mov
lcall
dec
xlat
out
jns
jo
sarl
push
idivl
cld
stc
mov
jmp
mov
pop
iret
mov
js
clc
sarl
into
cmpsl
sub
test
pop
adc
inc
daa
or
mov
and
aam
rolb
add
mov
pop
cmc
out
cmp
lds
int
addr16
cmpb
sub
out
cmp
adc
push
mov
fldcw
sbb
cmp
or
fimuls
xchg
jge
sub
lods
inc
fdivl
mov
in
in
inc
mov
xchg
pcmpgtd
lods
test
xchg
gs
jb
test
lret
pop
adc
mov
sbb
xor
push
jp
ret
imul
push
cmc
bound
mov
pop
sub
adc
ja
mov
fisubl
add
cmpsl
mov
xlat
add
jne
aaa
ret
xor
sub
or
test
xchg
xchg
fwait
in
lahf
das
cwtl
dec
push
dec
sbb
leave
loope
cvtdq2ps
sub
cmpsb
outsb
mov
sub
in
inc
imul
mov
jb
xchg
xor
xchg
mov
daa
inc
out
and
andl
and
in
inc
cmp
or
fadd
movsl
push
inc
inc
mov
and
jge
pop
push
loop
sbb
aam
push
push
dec
aad
outsl
dec
lcall
cld
ljmp
xor
jl
push
cld
cmc
pushf
mov
ret
int3
add
pop
add
int3
pop
in
push
jo
add
fistpl
jge
movsl
fldl
test
inc
rep
movb
and
mov
jp
es
cmpsl
mov
out
xor
enter
loopne
add
or
rcl
mov
mov
shll
add
pop
inc
jl
aas
in
daa
mov
je
rcrb
cli
push
push
sbbb
pop
cmp
mov
xchg
divl
inc
or
lret
xor
clc
mov
xor
inc
pop
sbb
push
cmp
sbb
scas
insb
cmp
cmp
cmpsb
mov
mov
stc
scas
inc
in
lock
fnsave
or
mov
ja
data16
adc
insb
or
sub
dec
and
je
ljmp
xor
adc
leave
hlt
jge
sbb
cmp
aas
push
xchg
jle
pop
fs
or
push
adc
movsb
dec
imul
roll
leave
jl
fstpl
out
mov
push
sbb
aad
stos
js
jge
js
icebp
outsl
fwait
popa
je
push
dec
sti
dec
pop
mov
ret
inc
mov
lods
repnz
push
cmp
jae
mov
adc
ljmp
mov
ja
xor
mov
fwait
das
sbb
sub
data16
inc
or
mov
test
and
and
sub
test
mov
imul
pop
pop
sub
mov
sub
inc
push
jns
mov
pop
adc
sbb
xor
pop
aam
stos
push
mov
xor
jb
lds
popa
dec
pop
xchg
adc
jmp
dec
inc
out
cmp
xchg
mov
ljmp
push
mov
sbb
sub
test
and
jl
test
xor
xchg
push
mov
dec
je
jne
cmp
or
jp
pop
mov
jae
lret
fst
mov
and
dec
jbe
fdivrs
cli
out
mov
aaa
shlb
mov
xchg
add
ret
jno
into
pop
repnz
cmp
shl
outsb
cmp
sti
and
cmp
icebp
xor
inc
pop
mov
inc
shll
cmp
das
add
fcoml
loopne
pop
adc
jg
xor
rorl
je
test
add
mov
testb
sarb
lds
add
test
jne
ss
cwtl
cmp
bound
stos
call
xchg
pop
lds
mov
xor
jle
mov
dec
fcomi
ss
push
rcrl
mov
js
scas
in
andb
pop
pop
sbb
cld
fdivs
popf
sbb
mov
xchg
push
xor
lahf
cmc
mov
sbb
cmpsl
adc
imul
and
das
xchg
fmull
pop
mov
gs
fldcw
shrb
fs
jmp
and
lahf
mov
cmp
cmpsb
lret
rcrb
sub
xor
sub
fbld
mov
les
sub
mov
shlb
repz
jmp
test
xchg
jno
pop
adc
cmp
jecxz
and
pusha
lds
inc
xchg
out
jle
xlat
sbb
fwait
das
jecxz
cmp
sub
ret
xor
or
fdivrl
push
mov
imul
mov
out
sub
xchg
lret
testl
push
xor
imul
adc
ss
nop
dec
sub
inc
sbb
idiv
or
lret
test
push
push
inc
sbb
xchg
and
pop
mov
bound
xor
leave
pop
cmp
cmp
shl
cwtl
popf
dec
scas
mov
divb
mov
mov
ss
sub
subb
push
jbe
adc
daa
es
lods
cmovb
mov
cs
out
test
cmpsb
fldt
pop
loope
enter
cli
jns
clts
fimuls
sbb
lds
lea
mov
pop
sub
call
imul
jne
xchg
js
mov
fwait
aam
cmp
sbb
lds
jl
jp
stos
pop
sub
imul
es
shll
iret
fwait
popf
lods
ss
xchg
lods
sbb
scas
xlat
xor
in
daa
and
rclb
or
ljmp
inc
fcmovb
mov
in
lods
imul
inc
push
and
std
ds
sarb
sub
enter
imul
out
pusha
sahf
clc
fildl
sti
sub
push
sbb
in
fs
repnz
fs
cmpb
js
je
xchg
fnstsw
sti
add
iret
ret
in
daa
sub
call
mov
roll
dec
in
xor
push
fidivrs
jg
xor
sti
xor
and
subl
cli
gs
xchg
aam
and
outsb
sbbl
gs
gs
das
xor
adc
stos
into
xor
mov
xchg
xchg
aaa
imul
rcll
inc
sub
or
data16
add
stos
push
inc
pop
mov
aam
ss
jnp
fidivs
sbb
dec
ljmp
push
cmp
cmp
frstor
mov
lds
jbe
adc
sub
xchg
xchg
aam
fdivrp
mov
pop
lods
lahf
test
jb
ljmp
lods
ds
pop
mov
stos
and
in
xor
pop
div
sub
iret
xor
adc
pop
xchg
sbb
cmpxchg
xor
jne
rcll
testb
sbb
xor
icebp
or
ret
insb
sub
ficoms
je
or
mov
cmp
lret
or
das
or
sbb
lock
adc
cmp
mov
in
daa
loop
sbb
lods
mov
shll
addr16
outsl
lea
and
xchg
push
mov
add
inc
call
bound
scas
mov
mov
rcl
dec
das
int3
ret
sbb
and
sub
jle
xor
je
cltd
push
mov
push
jl
jp
dec
pop
xchg
mov
adc
call
jecxz
pop
jnp
ret
pop
sbb
lret
addr16
test
adc
adc
xchg
jns
or
jb
outsb
cmp
cld
sbb
test
push
ljmp
push
push
cmpsl
jbe
lahf
or
pop
je
sub
lds
mov
repz
clc
testl
pop
fcoms
pop
push
or
inc
xor
lods
shr
ret
inc
xchg
stc
jnp
stc
shrl
push
test
ljmp
inc
jbe
xchg
xchg
jp
pop
das
imul
push
mov
mov
pop
cmovs
push
xchg
fcoml
mov
xor
cli
fsubrs
jecxz
lods
out
jbe
stc
sbb
or
lods
or
dec
dec
pop
add
lret
pop
or
roll
enter
lock
push
jb
ret
sbb
imul
shlb
mov
jmp
and
or
mov
push
das
and
inc
and
push
dec
and
hlt
jns
iret
cs
add
sub
push
add
aas
jbe
lock
xchg
cmp
jecxz
std
insl
out
lods
cli
js
rcr
pop
sub
rcl
aam
sub
lock
adc
xlat
pop
fmull
and
cmpb
cwtl
pop
add
sarl
movsl
pop
lea
sub
pop
test
adc
pop
cmp
or
or
push
cmp
inc
mov
mov
repnz
cmp
mov
jns
pop
jp
cmpsb
xchg
xchg
or
jmp
repnz
xchg
push
dec
jne
or
xor
or
dec
jbe
add
test
push
scas
jno
lcall
inc
mov
into
sub
mov
rclb
les
sub
aaa
sbb
mov
sub
es
leave
dec
or
and
sub
add
xchg
loopne
xchg
inc
orl
and
loopne
fists
dec
fisubrl
push
mov
xlat
fsubs
and
xchg
xchg
dec
dec
inc
or
das
mov
pushf
into
inc
or
rolb
int
pop
je
cmp
lcall
jae
sarb
pushf
shl
xchg
sbb
icebp
repnz
in
inc
insl
lahf
in
fs
popf
outsb
mov
mov
fndisi(8087
push
cmc
cmc
push
in
inc
mov
adc
mov
xlat
push
sahf
mov
int3
add
movsb
lds
test
mov
dec
jg
enter
and
stos
inc
sbbl
or
xor
sti
ds
out
std
push
cmp
cmp
stos
dec
ljmp
popl
and
sbb
xchg
cmpsb
mov
pop
push
xor
mov
add
adc
imul
or
outsb
ret
xor
push
dec
enter
xorb
repnz
push
or
iret
shll
mov
jge
jmp
xor
xchg
les
insl
fisttpll
mov
push
imull
and
jl
xchg
push
add
xor
jle
mov
xchg
push
mov
sbb
iret
xor
mov
push
xchg
push
mov
divl
ljmp
xchg
pop
enter
mov
les
add
leave
dec
cmp
fstpt
cmp
jno
lcall
mov
mov
xor
and
xchg
lahf
leave
lret
mov
test
push
mov
imulb
jp
mov
roll
call
mov
scas
daa
daa
sti
fdivrl
imul
push
mov
add
mov
imul
inc
in
pop
pop
xchg
inc
dec
sbb
shlb
inc
icebp
loopne
mov
es
xor
adc
lods
loop
popf
dec
pop
mov
adc
pop
lret
jl
jb
and
je
int3
xlat
push
in
bound
enter
add
mov
ja
subb
icebp
in
push
cltd
das
xor
popf
push
icebp
out
les
push
aad
push
jle
scas
sti
pop
inc
idivl
lock
xchg
movsb
addr16
cwtl
pop
sbb
jne
daa
gs
fxch
test
xor
inc
out
aas
ljmp
pop
ret
and
cltd
aam
into
mov
sub
outsl
inc
mov
ja
call
inc
adc
enter
into
xchg
lret
sub
scas
xchg
xor
sub
iret
inc
xchg
mov
mov
popa
jle
test
pop
call
shl
cwtl
insb
fadd
jmp
addl
fiaddl
mov
lahf
jmp
repnz
loope
mov
push
mov
mov
cmpsl
mov
imul
push
stos
cmpsb
inc
test
and
rorl
movsb
cld
imul
lds
or
jecxz
dec
sub
push
xchg
xchg
xor
push
dec
or
inc
fistps
sbb
jmp
sub
cmp
pop
lds
cld
icebp
xchg
ljmp
dec
jbe
inc
push
loopne
dec
incl
ficoms
xchg
cmpsl
loopne
xor
dec
aaa
inc
jp
aad
nop
push
jecxz
pop
sub
sbb
data16
clc
push
cmp
test
jge
mov
dec
int
mov
movsl
lcall
cld
sub
sub
or
xchg
inc
jns
add
nop
cld
dec
jmp
adc
sub
and
push
xor
daa
jmp
push
es
cmp
cmc
pushf
in
in
and
out
inc
mov
mov
test
scas
sbb
cli
lret
or
iret
es
dec
or
jb
inc
movsb
nop
insb
jbe
jg,pt
jae
daa
out
mov
mov
mov
push
aam
lods
daa
inc
ret
test
jle
call
lds
cli
clc
inc
ffree
pop
mov
cs
and
mov
xchg
insb
pusha
scas
loop
and
aaa
lahf
mov
clc
or
out
ficoml
mov
repnz
mov
sub
clc
fdivl
shr
xor
clc
xchg
jp
sbb
scas
inc
in
push
int
xchg
jno
incl
jb
mov
mov
mov
jb
inc
inc
xchg
and
push
dec
cmp
loopne
inc
imul
iret
imul
add
movsl
mov
std
dec
test
xchg
jmp
push
pop
test
in
mov
inc
lock
adc
mov
popa
pop
mov
cwtl
sbb
in
lea
xchg
mov
push
das
bswap
ret
pop
gs
aam
idivl
add
in
sbb
mov
stc
ss
jns
mov
and
std
test
ret
or
ss
jmp
jl
xchg
rolb
mov
cmpsb
dec
cmp
sub
and
push
xchg
dec
adc
popa
jno
sti
push
fistl
outsb
dec
insl
ljmp
aam
jne
in
mov
mov
subb
xor
mov
jmp
jbe
dec
jb
test
xor
iret
xchg
mov
jl
mov
push
push
jo
std
add
scas
dec
hlt
dec
pcmpgtd
sti
inc
jne
repnz
dec
dec
mov
out
lods
out
stos
cmpb
jb
jmp
inc
data16
stc
imul
repnz
inc
loop
push
xchg
inc
loop
leave
ds
cmp
mov
icebp
testl
iret
mov
adc
ljmp
ret
rorb
pop
xor
pop
iret
jbe
mov
fisttpl
cld
add
aaa
stos
push
lods
mov
dec
gs
insb
popa
addb
jecxz
inc
jp
push
inc
shll
cmp
in
popl
jge
outsl
sti
cmc
out
ret
je
jge
int
push
push
sub
jecxz
addl
imul
push
lret
fsubl
rcr
mov
aam
imul
mov
fsubrs
test
pop
jl
push
dec
int3
xor
mov
mov
cmp
mov
push
jns
dec
and
mov
lods
jo
pop
pushf
std
imul
mov
inc
cmp
inc
scas
aas
addr16
sbb
cmpsb
push
jbe
push
xlat
push
es
jmp
das
int3
cmp
jns
xor
mov
xor
and
bound
add
adc
sti
sbb
xor
repnz
add
pop
loope
add
test
mov
jecxz
aaa
cli
xchg
mov
mov
xchg
loope
aam
testb
jl
add
inc
jae
adc
lret
cld
jle
imul
loop
xorb
aaa
sub
aaa
pop
mov
loop
aad
mov
xor
inc
sub
sub
nop
dec
jp
shll
add
cmpsl
arpl
cs
scas
lea
orb
cmp
mov
push
fnstenv
pushf
loope
movsb
ja
push
js
insl
pushf
jecxz
dec
mov
test
xchg
int
out
mov
movsb
in
or
sub
enter
divps
mov
xchg
and
pushf
mov
mov
stc
lock
sbb
dec
aad
daa
push
mov
inc
imul
popa
and
xchg
stc
cmpsb
mov
in
lea
and
fisttpl
xor
int3
mov
popf
js
add
cmp
sbb
mov
fildl
sbb
lods
mov
cmpsb
and
in
mov
shrl
dec
fsubrl
imul
and
popa
pop
es
add
loopne
scas
mov
pop
aas
ds
add
push
push
roll
push
adcl
stc
andl
lcall
xor
mov
iret
add
dec
and
stc
daa
push
dec
sbb
jl
pop
cmpsw
inc
data16
fnstsw
pop
push
mov
sarb
sahf
enter
mov
daa
cli
loopne
inc
push
mov
popf
test
mov
mov
xor
push
adc
bound
ret
out
jmp
or
jo
fsubrs
adc
xchg
movsb
cmp
mov
test
add
inc
js
sar
hlt
cli
fdivs
mov
push
cli
jmp
pop
push
inc
iret
in
mov
pop
insl
rclb
xchg
cmp
jne
inc
pushaw
iret
dec
push
inc
mov
std
sahf
adc
lods
dec
icebp
push
jge
fdivr
stos
aad
mov
and
outsb
loope
rclb
lret
fwait
cli
mov
push
ja
cmp
int
sbb
cld
test
pop
cmp
fisubrl
and
mov
add
daa
push
cwtl
outsl
cmp
and
movd
repnz
cmpsb
cmp
cmpsb
outsb
jnp
push
out
or
cmp
jno
in
sbb
push
imul
inc
xor
sbb
test
push
mov
or
jg
dec
les
mov
inc
mov
push
loope
cs
lret
inc
inc
es
test
insl
add
cmp
push
lret
pop
stos
bound
inc
mov
or
lods
shl
call
loopne
call
enter
inc
xchg
adc
and
mov
push
sbb
gs
push
cmc
lcall
add
xchg
and
aad
je
aam
shr
imul
or
cltd
aas
mov
mov
lcall
xchg
jb
ret
xor
dec
subb
shll
push
daa
or
dec
mov
add
cli
ss
sub
rcll
sbb
lods
adc
aas
flds
out
daa
stc
test
iret
ficompl
enter
enter
add
dec
jbe
inc
inc
cli
pop
and
add
fcoms
jo
lea
adc
enter
add
arpl
inc
sub
test
stos
test
in
shl
adc
out
mov
adc
fsubp
sbb
std
ljmp
sub
pop
add
push
loopne
cli
cltd
or
xlat
bnd
decl
lock
or
icebp
in
pop
xchg
jp
cmp
dec
scas
inc
addr16
jmp
or
loop
pop
sahf
jmp
js
inc
leave
iret
or
outsb
imul
movsl
sahf
mov
cli
loopne
test
add
ret
cmp
or
stos
jno
jl
cmp
lahf
push
scas
ja
dec
and
sti
add
call
add
pop
inc
out
loope
sbb
adc
mov
and
pop
ja
mov
rcrb
call
push
xor
and
and
xor
cmpsl
xor
addr16
imul
jae
daa
loop
mov
inc
jmp
xchg
inc
jns
sbb
icebp
pop
inc
push
xchg
test
idiv
shrl
les
fcompl
stos
add
push
bound
mov
loopne
sbb
inc
jbe
fdivrs
fs
pop
jge
insb
mov
mov
dec
sarl
and
orb
push
imul
test
fdivrp
xchg
adc
mov
in
mov
inc
inc
or
je
inc
ds
in
add
cmpsb
jns
rcr
jnp
decb
imul
jne
aaa
jnp
fimull
lea
add
cmp
fsubrl
push
addl
adc
adc
push
cmp
popa
inc
sub
push
addr16
jmp
or
cltd
xchg
lods
test
call
pop
or
bound
jg
jge
and
inc
and
cmp
sub
in
dec
idivl
test
sti
mov
mov
arpl
roll
cmp
cwtl
lea
xchg
push
or
ret
decb
mov
mov
dec
dec
push
pop
mov
aaa
mov
pushf
jecxz
into
dec
mov
out
inc
pop
daa
jo
dec
test
jns
jo
dec
lea
sahf
mov
inc
jo
sbb
adc
ljmp
sub
js
movsb
jns
or
and
inc
ja
dec
inc
in
imul
shr
adc
pop
mov
lahf
xor
or
xchg
shrb
test
push
cmp
adcb
sbb
dec
xchg
je
and
xchg
mov
aam
cld
push
dec
dec
jle
cltd
adc
and
es
mov
arpl
insb
push
jnp
pop
es
js
inc
lcall
aad
fsubrl
pop
inc
pop
aad
pushf
fdivrs
rcrl
and
xor
adc
xchg
xor
add
cmp
mov
dec
dec
pop
xchg
lahf
add
jp
popf
lds
sahf
add
jle
mov
mov
xchg
or
fdivs
adc
stc
push
ss
cmp
xor
fisttps
addr16
je
xor
push
add
mov
xchg
mov
fnstcw
jle
sbb
fs
dec
test
push
sti
movsb
cmpl
aad
sub
jno
ja
mov
xor
fnstcw
mov
fisubrs
inc
or
jl
fcompl
inc
xor
mov
xor
xchg
rclb
lahf
push
ljmp
bound
leave
int
imul
push
mov
stos
icebp
xchg
dec
jp
out
cmp
lahf
sub
or
sbb
xchg
inc
fs
xor
es
mov
mov
inc
gs
loopne
or
sub
mov
outsb
movsb
sahf
shlb
lds
sub
lcall
mov
sbb
out
push
mov
push
adc
or
sarl
mov
or
inc
lahf
pop
psubusb
cmp
enter
adc
aaa
and
aas
push
mov
and
jle
sbbw
inc
int
sarl
std
test
test
popf
jmp
lock
jg
sub
shll
mov
mov
or
fnstenv
flds
jne
andl
pop
xchg
sub
jb
jbe
lahf
mov
dec
pop
enter
test
pop
and
dec
std
into
dec
dec
xchg
cmp
adc
sti
cmp
pop
pop
xor
push
xchg
jecxz
pop
jl
fwait
push
sub
and
xchg
scas
insl
stos
cmp
cmp
pop
out
fwait
cmpsl
mov
getsec
inc
pop
pop
xchg
and
fists
js
mov
jno
jne
jno
pop
dec
scas
mov
add
adc
adc
add
xor
mov
cmpsb
je
lock
push
or
add
or
add
add
pop
cmpsb
inc
nop
mov
mov
xchg
xchg
jbe
ret
testb
int
lea
cmp
aad
mov
push
lods
dec
or
jle
and
xor
sub
cmp
mov
mov
jmp
das
xor
pop
xor
rolb
inc
aas
xor
mov
fcmovbe
data16
adc
mov
fstpl
jbe
add
xchg
jno
cmp
xchg
cltd
push
jle
cmc
int
arpl
jmp
nop
fst
push
or
js
lods
aas
test
xchg
loopne
insl
aam
mov
stos
or
test
fsubrl
mov
xor
xchg
in
jmp
mov
in
mov
inc
fs
sahf
rclb
adc
inc
bound
and
pop
add
sbb
or
rcl
xorl
and
push
and
repz
mov
data16
or
pop
push
sti
test
mov
lea
push
cmp
jbe
mov
lahf
in
mov
or
jo
mov
out
lods
loopne
repz
sub
dec
cmp
mov
clc
scas
or
pop
add
dec
adc
rcrb
mov
dec
xor
mov
or
outsb
imul
adc
pop
or
sub
and
adc
xchg
and
inc
hlt
inc
movsb
adc
pop
mov
pop
outsl
lods
mov
dec
sbb
das
push
in
setns
les
and
fwait
dec
jge
push
pop
push
in
sbb
sub
lret
hlt
jbe
sbb
jb
das
pop
mov
lods
stos
add
jne
aas
aam
adc
nop
sbb
addb
pop
adc
sbb
adc
mov
dec
xor
cmp
jo
enter
jno
mov
fisttpll
lret
push
mov
icebp
xor
cmp
push
mov
xchg
mov
mov
cmp
imul
lret
in
or
rcrb
mov
imul
aaa
and
add
jg
sahf
cltd
mov
fsubr
push
sbb
add
inc
xor
js
jb
jo
scas
aas
jno
pusha
out
dec
mov
push
jno
cli
inc
dec
outsl
divl
loop
mov
cwtl
test
dec
arpl
std
bound
sub
push
fdivr
xchg
mov
push
push
xchg
add
and
cmp
enter
and
dec
jmp
mov
out
adc
fisubrs
testb
push
leave
inc
rclb
jnp
xchg
fimull
jle
addr16
ja
sub
in
test
add
fdivrl
sbb
pop
mov
arpl
imul
int
shr
aaa
popa
movsb
sub
cld
lock
sahf
cli
cli
xor
iret
imul
ljmp
adc
mov
insb
sbb
cmp
stos
push
in
mov
adc
cmp
push
leave
dec
gs
mov
pop
adc
xchg
shrb
push
int
fwait
loop
dec
and
pop
bound
mov
daa
fdivs
neg
push
xchg
pop
add
inc
mov
sbb
loop
xchg
js
das
jbe
inc
dec
push
addr16
test
scas
icebp
aam
cmp
call
lret
icebp
push
sahf
pop
lcall
jle
mov
pop
dec
je
arpl
popf
adc
fisttps
mov
push
xor
lock
mov
nop
fucom
mov
push
dec
xchg
addb
stos
dec
add
cmpl
cmp
lret
es
mov
lret
ror
add
adc
pop
arpl
jae
jne
sub
clc
mov
inc
addr16
sub
divb
sub
ljmp
mov
repz
int
sub
arpl
push
jns
dec
outsb
jp
push
mov
xchg
pop
xchg
lret
xor
lods
jae
and
mov
sub
pop
dec
subb
jae
movsb
ret
mov
hlt
add
test
stos
daa
mov
sub
ja
sub
mov
pop
testb
jp
int
mov
fildll
in
mov
mov
cmp
inc
cmp
das
cli
stc
and
stos
call
jmp
idivb
stos
frstor
jnp
hlt
cwtl
repnz
neg
cli
rcl
data16
mov
ret
shrl
mov
movb
gs
lods
mov
jb
cmpsb
mov
sbb
push
aaa
andl
movsb
arpl
and
xlat
jns
push
rorb
and
repz
jle
fwait
push
dec
mov
jge
cli
testl
sbb
stc
mov
mov
mov
out
xlat
clc
mov
ss
jge
and
hlt
in
pop
test
xor
sarl
insl
shl
mov
sahf
sbb
push
insb
mov
fs
stos
packsswb
sub
pop
dec
imul
fsubl
add
in
push
or
std
sbb
and
cli
sbb
and
insb
cli
jp
inc
pop
xchg
xchg
adc
mov
pop
mov
dec
sbb
bound
pop
insb
aad
xor
inc
sbb
out
inc
push
leave
cltd
cmc
data16
lock
fcmovnu
cmp
fld1
scas
in
jg
cmp
test
out
insb
cs
sub
and
nop
lret
sbb
outsl
inc
push
mov
sti
test
xchg
pop
int
push
xchg
into
gs
dec
and
je
jnp
enter
scas
dec
jmp
addr16
mov
sub
or
cmc
shl
push
arpl
negb
aad
hlt
clc
push
or
bound
fidivrs
scas
fnsave
or
mov
lods
movsl
push
jg
sar
xchg
test
mov
lods
and
sbb
or
mov
pop
push
enter
mov
adc
mov
lret
fdivs
out
popf
mov
call
mov
mov
enter
clc
sar
lea
stos
push
data16
rol
ret
sbb
bound
stc
in
inc
mov
xor
jo
test
cli
addr16
xorl
into
ja
faddl
sbb
push
sub
incb
mov
ss
scas
push
fldenv
xchg
popf
cmp
out
std
cld
and
es
xor
scas
aad
clc
pop
add
xor
lods
std
stos
gs
scas
stc
into
adc
jmp
in
cmc
mov
mov
jmp
push
xorps
cmp
leave
jae
movsl
push
icebp
mov
rolb
scas
pop
sbb
aaa
clc
fdivrp
mov
or
outsl
outsl
std
int
mov
cwtl
loopne
das
xor
les
pop
pusha
sbb
pop
lods
roll
stos
in
push
mov
repnz
or
adc
or
test
push
push
je
push
fs
cmc
push
push
or
adc
xor
icebp
addl
data16
stc
xchg
ds
add
sub
idivl
mov
pushf
clc
arpl
xor
jns
icebp
adc
push
lods
add
dec
cmpsb
divb
push
xor
cmp
lea
popf
sub
vpmulhuw
jnp
jae
mov
jne
sbb
or
lahf
push
push
mov
fcom
cld
aad
add
push
mov
mov
cmp
sarb
insb
push
out
mov
shrb
mov
into
mov
into
pushf
push
fsubrs
mov
cmp
pusha
cmp
pinsrw
mov
push
loope
cs
add
sbb
loopne
movb
pop
sub
fstpt
outsl
cmpsl
imul
or
fs
cmp
rolb
scas
int3
push
adc
js
mov
ret
sbb
inc
sub
pop
adc
jp
jns
mov
call
dec
test
lock
inc
lret
xchg
arpl
scas
aaa
shlb
sbbb
outsl
mov
sbbl
xchg
rorl
into
lahf
cmpb
imul
mov
fcomps
lds
jnp
sbb
loop
pop
dec
xchg
and
inc
jmp
pop
mov
xor
out
iret
ljmp
iret
jno
jbe
sbb
negl
xchg
sti
jne
jns
push
aas
cs
int
xor
cmp
cli
rcr
imul
dec
das
outsb
inc
xchg
mov
and
stc
adc
lcall
dec
xor
jbe
and
push
repz
mov
mov
in
cmpsl
mov
cmpsl
lods
push
int
imul
inc
fsubl
mov
cmp
add
or
inc
mov
jmp
pop
add
mov
test
popa
cmp
fs
movsl
cmp
sti
push
negb
push
sahf
or
mov
aad
cmp
ds
cmp
sub
push
adc
adc
int3
mov
xor
outsb
ja
test
insb
dec
lds
inc
xchg
xor
imul
push
nop
pop
stos
sbb
fs
pop
lcall
push
cmp
push
bound
jb
jle
pushf
rcll
fucomip
add
sub
add
inc
jo
aaa
pusha
add
sub
push
js
mov
cmp
fists
push
push
mov
pop
mov
pop
mov
imul
enter
xchg
push
into
pop
loop
aaa
adc
imul
cmp
out
sbb
stc
loopne
in
cwtl
mov
js
push
stos
adc
sub
and
lret
or
das
sbb
int3
sti
cwtl
jne
inc
pop
fmulp
lcall
xchg
mov
mov
movsb
sub
add
sbb
push
popa
pop
jbe
mov
mov
jo
inc
call
into
and
setle
aam
xor
sub
ret
xchg
xchg
test
scas
jp
dec
jo
sbb
xor
sbb
jg
push
add
jne
popa
dec
mov
sbb
mov
shr
push
add
daa
stc
roll
in
ss
mov
and
jnp
jecxz
test
and
in
movsl
sub
inc
cs
sarb
repz
xchg
lret
add
lea
cmpsl
inc
push
xchg
popf
out
mov
popf
mov
popa
jns
or
push
lret
mov
int3
push
lcall
xchg
insb
dec
jb
adc
xchg
cmp
push
aaa
inc
sbb
cld
mov
pop
cmp
xor
cmp
mov
daa
mov
sar
or
lods
mov
scas
icebp
imul
in
imul
xor
iret
dec
xchg
and
pusha
cvtdq2ps
movsb
inc
test
fs
pop
jae
sub
push
dec
dec
ror
shrl
lods
push
push
mov
push
or
pushf
or
lds
mov
scas
inc
mov
xor
pop
jecxz
lea
lock
jg
outsb
repnz
data16
subb
ret
repz
iret
pop
fadds
push
mov
pusha
mov
mov
xchg
orb
pushf
pop
lcall
out
mov
mov
jp
aad
add
fistpl
lcall
ljmp
arpl
js,pt
xlat
sub
fmuls
out
jb
lods
les
jle
sub
call
jmp
adc
jmp
pop
and
push
ficoms
inc
ret
test
mov
xor
subl
insb
mov
pop
stc
mov
dec
push
in
mov
outsb
mov
push
es
add
pop
ljmp
push
repz
gs
hlt
mov
test
cmp
inc
icebp
dec
and
cmpsb
mov
cli
and
jns
std
pushw
xor
arpl
add
out
scas
mov
cmp
movsl
dec
adc
test
push
aaa
mov
mov
or
stos
sahf
test
jle
mov
dec
jge
cmpsl
das
shlb
mov
sahf
push
insb
out
int
dec
mov
popf
dec
xchg
popl
or
pop
sbb
out
mov
sbb
orl
lahf
bound
add
sub
pslld
mov
or
and
dec
mov
xor
push
lods
xchg
sub
lahf
rcrl
xchg
popf
mov
cmc
inc
jnp
lds
lock
xorl
inc
push
adc
xchg
test
pusha
orl
pop
mov
cmpsl
jp
mov
push
or
lret
sbb
adc
dec
sbb
popa
jne
push
sarl
les
sub
cmp
nop
or
jns
sahf
dec
lahf
bound
lea
fisttpl
leave
push
inc
test
xor
and
inc
icebp
cmp
lock
pop
inc
mov
or
addr16
inc
std
jne
push
mov
push
cmp
sbb
fidivrs
ss
mov
shl
aas
andl
lahf
jg
arpl
adc
push
adc
aam
inc
repnz
mov
xlat
fbld
dec
popa
loope
push
aad
cmp
aas
dec
int3
shll
out
std
pop
or
jecxz
cmp
jecxz
daa
cmpl
clc
les
test
ss
xchg
sub
sbb
xchg
adc
aas
jno
aad
mov
or
das
int3
xchg
repz
pop
call
hlt
push
incl
cmp
sar
jle
inc
xchg
dec
cltd
negb
in
or
mov
imul
xor
inc
out
insb
dec
enter
inc
cmpsl
bnd
into
adc
pop
xor
jae
cmp
inc
nop
mov
insb
ljmp
jmp
test
jecxz
mov
jnp
mov
push
daa
xchg
fwait
mov
movsl
pop
xorb
adc
int3
loop
repz
pop
add
inc
mov
pop
and
mov
mov
fiaddl
out
dec
mov
inc
popa
add
sub
dec
lods
adc
outsb
add
mov
clc
leave
adc
insl
sbb
cmp
push
add
fcomps
and
mov
enter
mov
or
cmp
clc
dec
mov
imul
movsl
hlt
sbb
std
popf
shr
andb
bound
sar
ljmpw
prefetcht2
nop
mov
mov
cs
or
cld
fld
in
mull
dec
ficoms
push
popf
push
out
lcall
movsb
ret
jo
xchg
lahf
test
add
or
sarl
jns
mov
ret
imul
jo
adc
sbb
cmp
lods
jecxz
ds
mov
mov
pop
in
pop
pop
fsubrl
or
divl
mov
dec
jg
outsl
dec
inc
dec
or
addb
sub
aaa
test
pushf
jecxz
mov
jmp
inc
lods
mov
jnp
lock
mov
movsb
cmp
icebp
jecxz
mulb
movl
out
sub
inc
mov
jbe
leave
out
into
cmp
push
lcall
jbe
clc
int3
mov
shll
jmp
popa
pop
ss
gs
leave
and
add
xchg
sar
mov
and
inc
scas
jns
or
sub
subl
scas
fldenv
inc
fiaddl
pop
add
push
pop
data16
roll
jecxz
lret
mov
jns
repnz
push
inc
mov
jae
adc
sub
dec
pop
out
mov
jp
scas
push
stc
fmul
adc
cmpsb
xor
sub
leave
call
rcr
xchg
loopne
ja
xchg
out
xor
and
cmp
mov
je
lret
push
pop
je
mov
cmpsb
fidivrs
and
pop
call
add
jne
mov
mov
xor
sbb
clc
push
test
icebp
xchg
das
jle
sub
dec
out
push
movsb
aaa
pushw
aaa
nop
xchg
cmpl
cmpsl
jl
mov
push
xchg
mov
adc
decl
loopne
or
rorl
loope
mov
int3
pop
mov
rcrb
fdivs
das
sub
test
jmp
inc
xchg
add
push
sbb
pop
pmulhw
dec
stos
or
in
rcrl
dec
dec
mov
fwait
std
adc
push
mov
xchg
add
add
mov
fcomi
and
cmp
jns
shlb
inc
popa
jp
mov
je
mov
inc
xor
test
test
or
nop
pop
sbb
mov
mov
test
pop
mov
je
pop
stos
aaa
testb
adc
mov
gs
pop
push
inc
leave
sti
fidivs
pop
dec
movsl
add
mov
arpl
inc
inc
or
inc
jmp
and
xchg
scas
xchg
shrl
in
gs
inc
mov
and
call
and
cmc
xor
mov
mov
and
adc
xchg
cmp
add
popa
add
je
lods
mov
jg
inc
rorb
scas
rol
je
les
xor
xchg
and
fsubp
sti
push
sub
and
sub
cmpsl
adc
aas
sarb
dec
xor
aas
notl
inc
int
mov
mov
pop
mov
xchg
mov
xchg
outsl
push
xchg
js
out
push
add
push
iret
fs
ret
lock
call
inc
push
stos
aas
mov
leave
das
pop
cld
out
xor
sbb
out
pusha
or
push
mov
jne
scas
sbb
adc
aas
xchg
loop
dec
mov
stos
add
stos
insl
hlt
pop
in
mov
jle
sarb
fcoms
loop
and
add
pop
pushf
mov
inc
xor
lods
sub
je
outsb
cmp
add
push
adc
mov
push
mov
push
roll
pop
pop
in
test
jp
or
in
mov
shll
popl
xor
add
insb
pop
bound
fcompl
cld
jae
je
shlb
lret
mov
jle
adc
mov
shlb
push
enter
jp
mov
cld
iret
mov
out
cwtl
push
mov
and
movsb
mov
xchg
leave
cltd
adc
mov
mov
mov
bound
mov
test
pusha
dec
lahf
inc
jno
fnstenv
cmp
push
mov
out
jecxz
pusha
scas
dec
xor
loope
adc
cmp
fisttps
xor
dec
dec
add
leave
pop
or
sbb
and
subb
iret
cs
add
dec
mov
pop
gs
aam
fs
jle
or
or
in
movsb
insl
xor
xor
outsl
cmc
lret
inc
cwtl
imul
jmp
ja
fstps
adc
roll
or
gs
popa
inc
loopne,pn
aam
arpl
add
push
adc
ret
jno
mov
test
int3
push
ss
lret
mov
add
and
jne
in
jns
and
and
xchg
scas
mov
aad
call
int
movsb
inc
jns
ljmp
pop
mov
popa
cltd
aam
sub
movsb
mov
faddl
lret
dec
dec
pop
xchg
fstl
dec
fdivl
dec
pusha
jbe
push
fcoml
xor
movsb
push
fistpl
divl
jbe
ds
lret
dec
scas
stos
mov
out
inc
sub
into
cmp
dec
dec
and
mov
sahf
dec
stos
stc
inc
jmp
aad
insl
test
xchg
adc
ljmp
in
inc
dec
sbb
lcall
adc
mov
and
push
movsl
xor
in
cmpsb
pop
or
aaa
jg
lea
jo
sbb
mov
push
cmp
xchg
pop
cmp
test
push
pop
sbb
dec
pop
mov
mov
push
shl
ja
jne
sbb
jge
aaa
adc
les
pop
mov
ret
hlt
cmp
fisubs
std
cwtl
add
jl
push
mov
imul
cwtl
adc
gs
push
inc
inc
xchg
mov
xor
pop
imul
test
jo
xchg
stos
call
movsb
cli
mov
test
mov
clc
ss
iret
xchg
or
push
xchg
fsub
jmp
sub
jge
xor
sbb
out
shr
mov
bound
fs
mov
ud0
imul
xchg
inc
cmc
shll
call
push
shl
loopne
outsl
call
sub
lods
and
cmp
or
pop
lahf
inc
sbb
imul
mov
ja
jmp
xchg
leave
cmp
dec
imul
stc
pop
cmp
insb
inc
xor
rcrl
lahf
div
shlb
daa
sbb
popf
push
loopne
or
lahf
mov
mov
dec
shl
jbe
pop
dec
mov
xchg
or
pop
adc
and
inc
iret
or
test
imul
scas
js
loopne
jb
adc
gs
mov
movsb
cld
pop
inc
sbb
lahf
clc
mov
push
xor
pushf
push
cltd
lcall
lcall
sar
stc
loope
pop
fwait
adc
pop
sbb
aas
push
or
sti
push
ret
pop
insb
sbb
aas
ret
add
movb
dec
les
sub
push
mov
jl
mov
aad
out
inc
inc
es
dec
mov
idiv
mov
scas
movsb
mov
loop
pop
push
add
popa
aaa
cmp
adc
test
jo
imul
out
aam
push
repz
test
ss
sbb
and
jmp
or
in
jbe
inc
test
rcrl
xchg
nop
das
and
push
and
mov
push
cmc
pop
adc
and
adc
decb
roll
test
add
sti
clc
cmp
push
ja
outsb
sub
xor
aaa
cmp
rorb
sub
push
push
ret
inc
lcall
inc
addl
icebp
pop
sbb
repz
popa
sbb
lods
fs
scas
js
jb
data16
pop
add
or
scas
mov
push
sub
pop
ja
stos
ret
inc
xchg
jae
cmp
and
sbb
pop
add
fmull
outsl
add
xchg
push
cmpsb
in
mov
add
and
or
push
call
or
xchg
xor
mov
roll
test
cmpsl
pusha
dec
pop
jno
addl
sahf
test
inc
stc
mov
and
jp
mov
sbb
pushl
jbe
test
test
mov
ljmp
xor
loop
mov
add
in
dec
test
scas
test
mov
jge
out
loop
adc
dec
outsl
adc
jno
pushf
iret
fxch
dec
cld
cmpsb
imul
dec
les
and
xchg
mov
adc
mov
sahf
and
adc
imul
test
lcall
ljmp
sbb
mov
pop
mov
bound
fcmovnb
scas
xchg
lods
jo
fwait
sub
cmp
clc
lds
sub
add
cmp
and
movsl
and
push
jb
pop
or
sub
inc
jns
jno
jle
mov
in
mov
movsb
mov
jge
jp
add
enter
daa
pop
inc
lret
insb
je
push
push
inc
adc
fsincos
xor
dec
sub
shrl
lock
sbb
insl
outsb
mov
add
ja
stc
fiadds
mov
lds
xchg
test
mov
lret
adc
roll
mov
lret
sti
fsts
cwtl
sbb
mov
popa
or
push
add
loope
pop
dec
shll
sub
int
push
sbb
repz
add
filds
outsl
xor
scas
int3
aaa
cld
push
shrl
sub
out
and
inc
mov
mov
mov
push
lret
scas
mov
iret
or
ss
movsl
repnz
mov
sbb
cli
out
lods
scas
mulps
adc
adc
xor
nop
xorb
je
mov
cmc
lret
lcall
inc
test
jg
mov
mov
adc
ja
cmp
push
stos
dec
adc
pop
mov
add
das
lock
mov
call
ret
pop
cmc
push
mov
jbe
in
adc
jmp
mov
xchg
mov
fidivl
pop
pop
xlat
pop
mul
push
insb
mov
cmp
and
mull
leave
add
aaa
jne
stos
jno
into
imulb
or
add
mov
dec
inc
dec
jo
adc
pop
cmp
mov
lods
jl
mov
lds
lock
mov
js
and
push
and
adc
lret
and
es
sbb
sub
repz
dec
jns
adc
mov
pop
int
loope
fidivl
add
les
rcll
ret
mov
xchg
inc
cld
mov
mov
push
or
cli
jno
sbb
fsubr
rcr
jge
stos
pop
add
dec
xchg
cmpsb
lea
inc
imul
mov
cmpsb
cltd
dec
dec
cmc
push
pop
jl
in
push
add
or
addb
scas
jbe
test
xchg
repz
push
ljmp
aad
jae
adc
push
sti
mov
movsb
jns
bound
into
cmp
psllq
incl
data16
mov
arpl
mov
jae
loopne
ret
cmpsl
iret
cmpsb
mov
std
in
test
push
fiaddl
gs
mov
dec
test
fisttpl
xorb
dec
or
xchg
sbb
cmp
dec
mov
ret
mov
mov
out
or
outsl
ds
mov
loop
add
insl
cmp
fld1
lock
ja
jae
adc
mov
and
mov
aas
mov
lcall
dec
in
sub
and
xor
fldcw
cmpsb
jo
loop
daa
test
jmp
inc
out
lret
fistps
loope
add
mov
dec
repnz
mov
dec
lods
add
xchg
xchg
dec
outsl
in
mov
push
mov
jae
cmpsb
lods
jo
cld
dec
jnp
out
rorb
jbe
mov
mov
inc
cmp
xor
ficoml
adc
dec
jbe
fsubr
mov
push
cmpsb
push
cmp
je
cmp
inc
xor
xchg
jnp
pop
les
xor
push
scas
repz
lods
gs
add
push
in
insl
cmpsb
mov
xor
lock
pushl
or
out
dec
std
push
imul
orl
repz
cmp
sbb
jecxz
ja
bound
sbb
xor
fwait
inc
dec
push
movsl
xlat
pop
pop
shlb
cmp
dec
icebp
xor
pop
pop
lahf
stc
dec
mov
int3
js
mov
cmpsl
daa
cmc
dec
push
pop
jg
adc
je
loopne
test
xor
pop
add
pop
sbb
pop
push
sub
mov
sub
pop
mov
dec
sti
jp
popf
out
sub
in
sub
and
sub
and
push
inc
pop
nop
cwtl
in
jo
into
mov
mov
cs
mov
mov
sub
pop
sbb
jno
jle
popf
pop
mov
nop
cltd
cltd
dec
xchg
xor
mov
pop
lret
stc
mov
addr16
jo
insl
mov
dec
mov
or
mov
mov
xchg
and
sub
out
push
lret
cltd
dec
je
int
lock
sub
iret
push
mov
into
push
data16
push
das
mov
xor
push
sbb
lret
mov
cmp
into
inc
stos
int
fsubrl
add
es
out
dec
push
add
mov
rorb
xchg
aas
outsb
outsl
and
iret
out
addr16
lock
sbb
insb
out
jge
cltd
cmpsb
in
xor
xor
out
ret
jbe
push
cmp
sbb
hlt
sbb
xchg
lcall
pop
jbe
stc
stos
xor
push
adc
cmc
jge
filds
imul
dec
jle
ljmp
stos
ret
push
dec
adc
and
inc
sub
mov
push
pusha
dec
mov
or
jno
das
mov
xchg
orl
pop
xor
push
cmc
pop
lret
es
sub
and
test
and
pop
xchg
ds
cmpsl
sbb
je
dec
adc
fcoml
into
push
stos
inc
cmp
jbe
enter
sbb
or
movsb
jmp
lret
clc
int3
cwtl
add
orl
out
xchg
mov
addr16
sahf
mov
cmp
mov
das
jg
xchg
pop
xchg
in
js
icebp
xchg
push
test
enter
pop
fstps
mov
cmp
jbe
out
mov
adc
in
test
fsubrl
insl
jno
ljmp
jno
loope
cmp
bnd
in
insb
aaa
and
adcb
sbb
fmuls
pop
js
pop
pusha
xchg
mov
mov
out
daa
inc
mov
fisubrs
jecxz
stos
push
call
or
sbb
fcomp
adc
fsubr
sbbl
sbb
xchg
mov
aam
push
in
fdivs
mov
dec
push
inc
or
xchg
mov
mov
lahf
outsl
shll
fsubl
jo
inc
movsb
pop
imul
jae
sbb
repnz
dec
sti
sbbb
xor
mov
pop
repz
in
imul
or
loope
cli
idivb
stc
adc
imulb
lret
push
mov
and
rol
mov
xchg
ja
adc
xchg
xchg
pop
mov
jo
xorl
cmpxchg
inc
push
push
mov
scas
or
sahf
popf
call
dec
and
sbb
rcll
xchg
scas
sti
sbb
roll
ljmp
lret
dec
out
inc
in
jae
mov
clc
sahf
mov
lods
sbb
cmc
insl
shll
xor
push
stc
jb
lret
rcl
inc
inc
cmp
adc
ret
ret
pop
pop
sub
cmpsb
mov
push
mov
and
pushf
enter
aas
sub
inc
adc
loop
inc
mov
dec
ror
xchg
jne
push
imul
inc
mov
adc
ss
jbe
loope
mov
out
xor
mov
cmc
cmpl
fmulp
cmp
imul
data16
je
or
leave
cltd
bound
pmaxsw
xor
das
test
loope
or
fnstenv
xchg
leave
jle
iret
rorb
cmp
fadds
cli
push
enter
ja
in
movsl
call
lret
mov
mov
adc
ret
push
xchg
xor
jge
repz
std
jo
push
xchg
inc
inc
mov
mov
xchg
sub
idivb
call
lea
adc
cwtl
sub
shlb
pusha
cmp
lds
jecxz
add
xor
and
cli
mov
sub
cmpsb
rolb
fsubrl
cwtl
inc
pop
and
push
mov
fildll
and
cltd
add
fsts
push
mov
insl
push
or
and
mov
jae
or
mov
movsl
push
test
fldl
shl
aam
sub
pop
fldl
cmp
push
out
je
gs
sbb
pop
jo
pop
cmpsb
ja
popa
push
rorb
push
lahf
nop
enter
lods
jecxz
xchg
jmp
std
or
xchg
aam
push
jnp
xor
lock
xchg
and
cmp
mov
mov
adc
js
mov
push
adc
scas
dec
adc
int
pop
jle
inc
sbb
add
sbb
xchg
add
xchg
jae
lea
dec
mov
decl
jns
das
jl
movsl
jae
mov
push
add
pop
mov
push
inc
stos
lea
cmp
cld
xchg
int
outsl
pushl
sahf
cmp
dec
nop
in
xor
and
xchg
mov
or
jge
ljmp
dec
popa
sub
xchg
je
std
push
push
and
in
and
cli
inc
lret
lcall
int
ja
out
popf
xchg
dec
xchg
jns
fsubs
push
push
ljmp
pop
mov
add
ja
xchg
incl
cli
ret
mov
inc
neg
mov
jbe
stos
push
mov
mov
dec
inc
pop
fmuls
repnz
add
pushf
pop
inc
add
dec
adc
and
mov
xchg
lods
jne
xchg
pushf
xchg
lcall
call
insl
notl
xorl
dec
testl
ja
repz
inc
jae
sahf
dec
pop
jno
into
xchg
push
das
pop
xor
insl
sub
mov
nop
adc
fwait
mov
jle
xor
add
cltd
mov
xor
pop
mov
daa
lds
sub
ret
add
push
mov
mov
pop
cmp
jae
xor
cltd
call
inc
clc
hlt
loop
or
enter
rcr
dec
and
arpl
in
rcrb
jp
sub
stos
les
shl
jb
test
mov
scas
xor
sub
stos
xchg
test
lods
rcrl
aad
cs
cli
imul
xchg
sbb
inc
out
jge
rol
adc
in
mov
in
faddl
scas
xor
push
xchg
cmp
sbb
data16
push
pop
arpl
sub
fs
fldl
in
pop
in
out
mov
shr
xchg
mov
jp
or
add
inc
jnp
mov
add
dec
fimuls
pop
mov
or
xor
ja
out
leave
mov
test
es
xchg
rcpps
mov
popa
movl
aad
cwtl
mov
icebp
roll
mov
in
test
dec
inc
jmp
cli
imul
dec
inc
add
xchg
or
push
jne
push
clc
loope
add
pushf
cmp
mov
inc
outsb
icebp
cmpsl
add
xor
decb
mov
inc
outsl
fwait
mov
mov
fmuls
dec
dec
mov
mov
pop
rep
dec
adc
mov
add
sti
jns
dec
adc
loope
pop
jmp
xchg
xchg
and
fisubl
adc
pop
jl
xor
movsl
inc
cmp
push
mov
dec
dec
daa
nop
inc
mov
xor
cltd
call
cmpsb
lock
dec
pop
cmpl
or
push
cmp
sub
out
ds
cmp
xor
mov
jbe
push
and
mov
mov
dec
iret
sbb
aas
test
fsubrl
pop
jecxz
jp
mov
fcmovnbe
imul
or
sbb
bound
add
jnp
cmp
inc
imul
inc
fnsave
add
test
lcall
sbb
sbb
jne
push
lret
sub
sbb
sbb
and
add
sub
lret
mov
dec
insb
into
fldcw
lret
add
imul
mov
and
int
inc
xchg
pop
cld
scas
test
jns
out
aas
mov
scas
jp
cs
inc
popa
pop
ret
mov
add
jne
push
mov
fildll
xor
mov
jbe
xor
or
jo
loop
pop
stos
fisttps
lock
add
add
mov
fiadds
sbb
lret
jl
sbb
mulb
inc
scas
out
xor
cs
mov
pop
imul
jne
xlat
pop
xor
xor
ds
pop
and
divl
arpl
adc
xor
hlt
sahf
popa
dec
xchg
loop
mov
pop
pop
xchg
xor
cs
mov
cmc
cmp
sub
loopne
ret
or
ret
jecxz
enter
mov
into
jmp
mov
dec
mov
sub
and
jl
inc
sub
jae
cld
aas
or
mov
push
dec
or
cs
add
gs
std
mov
subb
mov
insl
jnp
cmp
roll
aam
inc
push
mov
cmpsl
pop
mov
xchg
ss
jns
lcall
sub
jb
xorb
inc
xor
movsl
std
push
insl
cmpsb
fsub
mov
aaa
pop
ret
repnz
mov
leave
cmp
pusha
dec
cld
pushf
clc
mov
and
test
jno
leave
xchg
jp
stos
sbb
fnstenv
xchg
cli
pushf
in
in
scas
dec
and
xchg
mov
mov
xchg
test
movsb
add
push
push
mov
xchg
shlb
ror
dec
xchg
push
ljmp
or
jnp
insl
lret
lret
movsb
fidivrs
orb
dec
ljmp
cmp
xchg
or
dec
in
nop
in
lcall
and
dec
mov
jmp
cltd
add
scas
cld
shll
cmp
dec
fists
in
icebp
add
rcrb
hlt
daa
cmp
lahf
arpl
push
lcall
fimull
adc
and
and
mov
jne
inc
jb
push
xchg
shl
mov
test
push
ss
or
add
xor
xor
popf
mov
bound
call
or
imul
in
pop
add
inc
test
sub
lcallw
dec
push
xchg
sbb
rcr
insb
pop
nop
fldcw
je
mov
imul
stos
loopne
mov
gs
push
push
int3
popa
mov
cmpsb
xchg
sub
std
jnp
repz
popa
pop
out
repz
mov
stos
in
dec
sub
daa
daa
popf
push
in
push
cmp
ret
cld
addr16
add
xlat
cmp
or
leave
or
shlb
out
xchg
sbb
xor
in
and
jne
nop
popa
xor
mov
fstpl
sbb
cs
mov
movsl
ds
pop
cmp
cmp
or
std
popf
adc
cmc
cmp
enter
sbb
cmpl
std
daa
ret
andb
fbld
popa
jnp
pop
mov
cmp
mov
fsts
loop
dec
mov
cmc
iret
push
leave
test
adc
add
add
mov
mov
pop
icebp
nop
dec
repnz
cmp
and
sbb
mov
in
test
cltd
lret
ret
push
push
sti
xchg
icebp
mov
out
mov
cmpsl
push
sbb
scas
fidivrs
mov
adc
loop
test
xchg
fwait
and
sti
jbe
fwait
push
les
addb
test
push
stc
mov
mov
test
and
pop
xchg
test
pop
faddl
popa
dec
pop
or
dec
lods
fwait
aaa
lds
mov
fdivr
mov
or
inc
repz
mov
inc
xlat
shr
push
mov
lret
lcall
xchg
jns
xchg
pop
std
sbb
lods
leave
pop
popa
fdivs
loopne
mov
rcr
outsl
into
sbb
daa
lret
pop
and
out
mov
xor
cld
cmp
filds
out
cltd
mov
pusha
pop
scas
notl
adcl
cmp
mov
out
xchg
call
fsub
lahf
pop
xchg
push
es
popf
stos
and
cmpsl
shrb
ss
test
mov
int3
les
xchg
jo
mov
pop
jb
push
and
xchg
ficompl
out
jns
or
subl
xor
push
cld
stc
xchg
addb
dec
dec
mov
insl
movsb
dec
and
mov
adc
sub
lcall
sti
leave
or
cmp
in
xchg
or
das
lea
push
fsubr
lret
lahf
pusha
bswap
mov
jmp
stc
sbb
mov
insl
daa
rorb
out
pop
aad
xchg
mov
mov
cli
lret
fisubl
clc
dec
mov
sub
mov
lcall
cld
mov
jge
mov
aad
leave
inc
test
cmp
ret
imul
fcomi
xchg
je
cmpsb
and
sbb
rorl
sahf
pop
mov
test
filds
lods
out
jno
out
mov
es
push
mov
sbb
inc
fstl
jl
xchg
and
ds
fistps
ds
out
movsl
dec
jbe
dec
cmp
push
js
dec
adc
sbb
outsl
jb
xchg
xor
sbb
jns
cmp
push
lahf
push
lock
jge
lods
lahf
popf
in
add
jne
sbb
push
add
mov
sbb
mull
mov
imul
mov
filds
mov
or
in
push
xchg
dec
inc
mov
test
push
fsubp
mov
enter
scas
and
inc
xchg
outsb
sub
and
lods
sub
mov
sbb
into
insl
mov
push
leave
jne
ljmp
outsl
imull
mov
pop
mov
lcall
addr16
or
pop
or
dec
mov
and
fists
or
adc
push
cmp
repz
or
push
cmp
jl
adc
lds
fcoms
cwtl
outsb
sub
daa
cltd
hlt
inc
jo
into
jge
and
push
fwait
ret
fs
sub
sar
jg
stc
in
xchg
jnp
nop
mov
push
loopne
ljmp
repnz
out
nop
xchg
notb
sbb
insl
jne
mov
lods
and
sbb
adcb
inc
mov
inc
arpl
ret
fwait
mov
sbb
loop
jbe
cmp
cmpl
sbb
pop
or
movsl
loop
pop
ds
in
inc
sub
jns
sub
mov
cmp
clc
jg
sub
sbb
sbb
cmpb
sti
mov
adc
xchg
sub
jle
mov
sbb
sbb
push
add
jmp
divl
or
repnz
mov
loope
mov
jb
or
and
add
pop
pmuludq
or
cmp
sub
fcomi
sahf
pushl
xlat
cs
jecxz
dec
push
jb
inc
lods
aam
xchg
and
fcoml
pushf
xchg
sub
es
loope
add
sub
test
ss
push
push
xchg
adc
push
imul
cli
lret
mov
lock
js
jge
sbb
loope
mov
mov
mov
mov
xchg
mov
inc
fstps
mov
jnp
ret
push
clc
das
loopne
pop
add
add
imul
sbb
jne
jecxz
mov
sbb
push
cmp
and
dec
sub
negl
rorl
jbe
in
inc
xchg
daa
divl
cltd
aaa
bound
rcrb
scas
mov
push
loopne
jne
cli
and
cmp
dec
js
inc
movsl
and
decl
ds
or
daa
mov
xchg
scas
pusha
and
xchg
rcl
sbb
shll
std
adc
and
xchg
sbb
es
xchg
pop
int
mov
cs
dec
stos
addr16
int3
sbb
hlt
xchg
test
mov
arpl
add
dec
add
jno
mov
call
fdivrs
xor
adc
aas
mov
mov
add
pop
int
test
mov
xchg
mov
sub
xor
sub
sbb
inc
dec
dec
scas
xchg
sbb
mov
sbb
pop
sub
sbb
adc
add
mov
imul
sbb
xchg
mov
out
or
frstor
js
dec
jnp
inc
cmpsl
add
cmp
insb
or
lahf
mov
out
xor
push
inc
aad
xor
cmp
loopne
mov
xor
into
push
pop
push
sub
movsb
jl
push
sub
mov
pop
lahf
in
lcall
test
sub
stos
iret
int
jmp
imul
mov
icebp
lcall
mov
in
cmp
outsl
leave
or
jp
in
mov
shrb
je
ljmp
cwtl
sbb
cwtl
pop
lds
push
movsb
xor
shl
pop
loop
shl
inc
pop
popa
movsb
shr
jle
fstps
test
xor
es
xchg
data16
or
xor
mov
bound
cwtl
int3
fmulp
xchg
movsb
rcrl
xor
nop
mov
add
cmp
bound
into
cli
daa
and
jg
push
mov
push
jmp
lret
cmpsb
es
sbb
out
xorb
sti
in
sahf
not
xor
adc
jae
fistps
adc
sti
pop
ficoml
out
ljmp
aam
repz
mov
lcall
cmp
xor
out
fldl
stos
push
cwtl
push
sbbb
les
xchg
sub
jle
pop
in
sbb
sub
cmp
lock
jecxz
mov
dec
dec
out
inc
jl
cmc
int3
fisubs
xor
push
lea
jp
loop
or
and
mov
sbb
lret
fistps
test
mov
shll
jo
add
dec
jb
loope
pushf
sar
pop
add
dec
movsb
pop
sbb
jne
insb
xchg
addr16
lret
shrb
xchg
pop
and
lds
cmpb
es
lahf
mov
rcrb
ljmp
adc
hlt
mov
jg
pop
mov
mov
daa
popa
push
dec
pop
imul
push
repnz
test
sub
jno
xchg
sbb
test
into
jne
sub
dec
loop
inc
insl
mov
in
stos
subb
add
push
add
test
cmp
xlat
push
adc
out
and
fstl
push
lret
dec
sbb
push
std
jb
and
xchg
lea
test
xor
in
add
pop
add
ja
fldl2t
les
pop
cmpsb
mov
mov
clc
xchg
pusha
movb
push
shlb
mov
lods
ficoml
insb
ret
xlat
bound
fs
xlat
into
imul
mov
dec
pop
fs
jmp
jnp
xchg
icebp
and
push
sub
adc
in
shrl
cld
and
jns
outsb
add
pusha
lods
loopne
dec
and
mov
mov
inc
xchg
enter
push
cmpsl
loopne
loope
int3
jge
hlt
pop
iret
xor
int
add
aaa
ret
sbb
repnz
movl
loopne
lahf
and
data16
in
ja
loop
push
rcrl
ds
sarb
dec
push
add
add
mov
add
push
mov
sbb
mov
xabort
out
fcmovu
scas
jl
dec
fsubs
adc
sub
adc
or
test
jle
mov
mov
fiaddl
lock
sbb
or
xor
dec
jns
mov
or
adc
cli
mov
lds
cwtl
mov
mov
pop
pop
sbb
dec
jo
rcrb
xor
dec
movsb
jae
test
mov
daa
inc
mov
lret
inc
test
or
cmp
add
sbb
fiadds
push
push
add
add
sbb
or
testl
test
push
and
hlt
movb
or
arpl
pop
orl
int3
pushf
js
sub
mov
les
inc
mov
pop
and
push
scas
in
test
and
mov
push
les
jecxz
cmp
add
and
push
movsl
imul
adc
aas
loopne
in
sbb
jbe
gs
icebp
and
loopne
insb
aas
ret
mov
sbbl
inc
or
ss
mov
ret
pop
fwait
mov
push
stc
aam
stc
mov
shufps
inc
test
add
add
mov
mov
pushf
push
jp
push
xchg
or
sub
inc
bswap
rclb
insb
lock
or
xor
xchg
arpl
and
scas
je
iret
pusha
shlb
pop
xor
add
jp
sbb
cld
xchg
push
in
pop
cmp
push
jmp
inc
pushf
fisttps
outsb
stos
ror
jmp
or
push
test
fnstsw
test
inc
orb
fiadds
or
stc
mov
sub
mov
jg
int3
add
xchg
sbb
mov
fcoms
xchg
xchg
cld
sub
fildll
ljmp
push
pop
pop
and
and
mov
cmpsl
mov
icebp
jb
lcall
or
addl
mov
imul
shll
cwtl
xchg
push
inc
jmp
jmp
jns
ficompl
fsubl
add
mov
clc
and
xor
shlb
jp
popf
jbe
cmp
cmpsb
xchg
ss
push
sbb
jmp
into
int
add
mov
xor
pop
pusha
incl
test
sbb
leave
pop
adc
and
shll
loop
lcall
int
push
int3
sub
push
cmpsl
push
jmp
jnp
jne
out
pushf
dec
xchg
arpl
mov
movsb
roll
rorl
sbb
aas
insl
stc
xlat
xchg
in
ljmp
sahf
adc
das
xchg
incl
cmpsb
rcr
arpl
imul
enter
ds
push
aam
dec
loop
pop
les
jnp
data16
ss
movsl
aaa
imul
dec
loope
and
fidivs
hlt
add
mov
addr16
mov
bound
test
or
push
adc
stos
push
mov
clc
mov
sbb
mov
mov
ret
inc
push
sbb
mov
xchg
mov
movsb
sahf
adc
scas
andb
repnz
pop
adc
cmp
shlb
outsb
push
in
mov
push
pusha
jg
test
jne
mov
data16
xchg
cmpb
and
sub
cmpsl
or
stos
ret
aaa
and
jo
inc
cmp
ja
out
popa
push
lea
dec
cs
and
cli
ljmp
adc
fsubrs
adc
pop
xor
in
cmp
sbb
and
into
adc
jb
jle
stos
cwtl
insb
adc
out
mov
add
pop
test
out
xchg
push
mov
push
lret
lret
xor
sbb
jno
adc
sbb
js
loopne
xchg
add
dec
call
adcl
cmc
mov
adcl
pop
push
mov
aas
ret
sahf
pop
sti
cmp
push
adc
out
adc
cmc
cld
mov
push
adc
pmaxsw
ja
inc
xor
jge
shl
rcrl
mov
bound
sahf
cmp
and
pop
sbb
xor
jecxz
mov
jo
addr16
xor
sbb
test
lods
xor
lret
ret
in
hlt
rcl
add
outsl
mov
xor
fwait
int3
lahf
xchg
sbb
xchg
fwait
sub
inc
repz
lock
cmpsl
loopne
enter
jbe
fwait
add
loope
sarl
pop
fnstsw
adc
shlb
pop
mov
movsl
imul
jmp
call
mov
pop
lock
jmp
aaa
mov
pushf
repz
aaa
push
mov
jbe
push
inc
push
movsb
fsubl
pop
fldl
sbb
push
cmc
shl
bound
adc
adc
jbe
int
cmp
imul
ja
push
adc
popf
push
test
and
add
dec
pop
fsubrs
adc
pop
sbb
pop
xchg
sub
ja
into
lcall
ret
xchg
sub
jns
sbb
enter
cmp
shlb
pusha
ja
fcomps
inc
ss
mov
push
xchg
sub
mov
das
dec
idivl
in
lret
icebp
aam
jb
jb
push
inc
adc
enter
cmc
mov
push
mov
sub
movsl
leave
movb
lods
xor
shrb
sarl
sbb
sbb
cmp
xlat
cmp
xchg
sbb
adc
cli
inc
loope
push
shlb
lods
pusha
data16
jne
fidivrl
mov
mov
lcall
push
sbb
aam
sti
pushf
jb
es
lret
aaa
pop
les
sti
loope
into
out
lock
push
pop
popf
jle
push
testb
popa
inc
cmp
push
xor
dec
mov
cmp
jp
data16
ret
mov
filds
add
in
out
paddusw
insb
xor
or
jne
shl
pop
push
mov
inc
inc
fs
dec
lock
ror
push
mov
fwait
subl
fisttps
cmp
sub
xchg
sub
or
push
sbb
js
ja
jno
bound
push
sub
stos
or
rcll
cmp
cmp
push
or
iret
sub
jp
lds
xor
fisttpll
inc
mov
fmull
mov
lods
inc
addr16
mov
iret
stos
leave
mov
js
movsb
dec
outsb
add
inc
mov
je
decb
adc
lcall
push
mov
sbb
xor
jns
and
lds
mov
mov
xchg
jle
mov
inc
mov
inc
inc
sub
inc
aad
loopne
adc
fs
paddsw
cli
sbb
notb
xchg
rolb
shrb
pusha
movsb
push
push
dec
fiaddl
faddl
jge
shl
jle
cmc
pop
adc
inc
and
fcoms
icebp
pop
pop
jmp
pop
stos
sarl
xor
xchg
mov
fwait
dec
jp
dec
mov
insb
arpl
insl
jb
mov
push
jnp
mov
jl
mov
and
jle
mov
inc
stos
or
mov
hlt
pusha
iret
dec
mov
ret
sbb
fwait
in
jp
aam
mov
pop
cs
pop
dec
xchg
in
mov
cmp
lods
lock
xor
sub
es
aas
cltd
lret
sti
dec
pop
mov
in
lea
or
and
xor
ret
jmp
cmp
mov
out
rolb
push
xor
adcl
xchg
mov
scas
mov
or
adc
push
mov
idivl
xor
dec
lods
add
inc
xchg
push
lahf
insl
pop
les
lods
loopne
fs
popa
int3
or
sub
inc
std
sbb
mov
sti
in
arpl
ret
sub
in
mov
mov
mov
add
lea
xor
mov
sti
cs
lahf
xor
jmp
ljmp
jno,pt
adc
das
data16
mov
into
xchg
sub
pop
je
ret
xor
sub
sti
fisttpll
cmp
call
dec
and
inc
cmpsl
test
push
gs
sti
lahf
leave
sbb
outsb
inc
int
out
xchg
jnp
push
aam
lret
rorb
push
inc
push
repnz
fldl
adc
mov
jl
push
ficoml
xor
outsl
es
xor
cmp
mov
adc
mov
frstor
out
push
lock
or
and
pop
xor
pop
fildl
ds
or
and
inc
inc
pop
lock
in
inc
rolb
aad
hlt
in
sub
adc
subb
pop
push
in
adc
cmp
icebp
pop
sub
pop
xchg
repz
out
shll
jo
addb
push
pop
xor
fidivl
les
loopne
outsb
icebp
les
and
xor
jg
jnp
adc
cmp
cwtl
mov
orl
push
and
loopne
pop
jae
and
push
div
loop
dec
and
inc
adc
fildl
add
shll
xchg
int
pop
pop
jg
pop
add
jno
add
xchg
in
mov
test
adc
dec
fs
push
pop
mov
add
aaa
dec
mov
jecxz
arpl
fcmovnu
shll
popa
in
ficomps
mov
sub
movb
scas
std
and
xor
rcl
cmpsb
add
or
push
test
rcr
das
mov
dec
test
and
lods
xchg
dec
sub
pop
cli
test
popf
stos
dec
pushf
mov
into
fdivrs
cs
or
add
fs
cmpsl
mov
cmp
notl
sbb
ret
pop
dec
jae
xchg
mov
jb
add
jp
push
testb
addr16
jo
inc
inc
insl
cmp
add
out
xorb
popf
inc
xor
loopne
das
loop
scas
repz
repnz
pop
pop
mov
mov
and
jnp
loopne
adc
jmp
mov
aad
sub
and
je
loop
jmp
and
xchg
lock
push
mov
test
roll
mov
pop
adc
imul
pop
jae
aam
cs
cmp
daa
movsl
sub
mulb
aaa
pop
bswap
flds
jecxz
mov
mov
mov
ficompl
ficomps
fistl
xchg
xchg
dec
jns
addb
jae
adc
mov
xor
les
dec
sub
jecxz
xor
mov
outsl
cmpsb
push
mov
jp
adc
ja
cmp
mov
movsb
mov
subl
sub
mov
pop
loope
xlat
jecxz
jp
mov
ret
in
ret
imul
fwait
hlt
daa
popf
bound
cld
fstps
outsl
mov
ljmp
aad
popa
icebp
adc
mov
fdivrp
jne
ret
pushf
push
sarb
daa
xchg
adc
xchg
movsl
push
jns
push
adc
hlt
fmuls
das
mov
sub
jns
into
pop
jo
lods
fwait
cli
xchg
sbb
mov
adc
mov
pop
ret
out
inc
popf
add
or
fnstcw
sub
cmp
add
aad
push
sbbb
xor
rolb
mov
add
rolb
xchg
sub
jo
and
nop
lahf
jae
into
mov
scas
rcl
xor
int3
and
xor
cld
push
mov
cli
je
outsl
pushf
push
sbb
test
loopne
subb
jl
dec
mov
fcmovnb
ffree
mov
es
cmp
lar
divl
dec
xchg
sub
cli
clc
dec
push
sbb
adc
jmp
jo
out
lods
or
ds
dec
cs
jg
mov
test
cmp
in
pop
inc
pop
or
jle
test
pop
pop
fimuls
rcrb
push
pop
orb
sbb
xor
add
in
stc
jne
xor
cmpb
scas
ss
loope
ja
fists
scas
lock
and
outsb
jo
dec
adc
mov
jnp
aad
xchg
inc
lahf
mul
test
in
push
and
fwait
xchg
fisttps
mov
daa
jg
xchg
jle
cli
mov
sub
mov
inc
repz
lahf
sarb
push
push
fisubrl
outsl
or
adc
jmp
ss
nop
pop
push
sbb
clc
scas
aas
xchg
leave
fadd
pop
pop
fwait
jmp
in
addl
dec
xchg
stc
fdiv
scas
and
inc
push
in
inc
clc
es
ja
mov
out
dec
sti
xor
adc
sbb
push
adc
lods
int
sbb
pop
xchg
fists
mov
sub
dec
out
push
mov
repnz
push
aas
pop
xor
xchg
shl
ds
out
ret
or
mov
pop
rolb
add
in
mov
imul
sahf
add
sub
dec
das
jbe
ret
or
xor
notl
scas
dec
shlb
arpl
loop
push
fwait
outsl
sbb
das
fsubrl
popa
inc
lea
in
cmc
push
rcrl
and
mov
cwtl
es
popa
ljmp
xlat
lret
outsl
sub
pop
imul
scas
loop
sbb
je
outsl
cmp
js
pop
inc
aam
in
lods
subb
xchg
lods
loop
jno
push
jne
jbe
in
cmpsl
sub
sbb
xchg
aam
sbb
lcall
push
jns
sahf
add
cs
nop
lret
sub
jg
mov
clc
aaa
push
sbb
fisttpll
add
dec
jge
and
cmp
xchg
mov
jae
xchg
mov
pusha
inc
or
das
mov
sbb
push
dec
pop
loope
fcmovnb
int
sahf
out
mov
mov
out
jnp
mov
dec
sbb
repnz
sbb
push
sarl
jge
jecxz
sbb
push
mov
xor
mov
jns
inc
arpl
xor
add
faddp
insl
in
and
enter
and
and
int
ja
lods
ret
cmp
pop
pusha
test
dec
repnz
sbb
ret
repz
fdivs
stos
mov
int
insl
push
xlat
fistpl
ja
xor
lcall
cmp
int
roll
scas
jnp
add
testl
das
cmp
xchg
cli
lret
adc
add
xchg
adc
mov
sti
idiv
jecxz
nop
mov
and
adc
fadds
daa
hlt
cmpsl
and
fdivrl
jecxz
push
ja
xchg
test
cmp
push
fwait
inc
cwtd
aad
jo
aad
pop
mov
xchg
les
xchg
cmp
mul
mov
sarb
xor
iret
je
or
daa
out
xchg
pop
pushf
stos
jecxz
dec
adc
imul
or
cld
or
xlat
push
movsl
aad
movsb
bound
daa
out
inc
push
aas
lret
mov
sbb
lds
leave
inc
xchg
enter
frstor
fildll
mov
mov
shrl
fcmovnb
dec
sbb
mov
mov
inc
sub
daa
push
add
adc
mov
cmpsb
in
lret
mov
loopne
or
or
daa
jno
loop
sarl
or
xchg
jl
andb
mov
hlt
cmp
aaa
inc
fdivrl
jmp
cmp
cwtl
fs
mov
out
or
push
jne
push
fisttpl
or
prefetchwt1
loope
or
mov
inc
mov
jne
sarb
data16
jo
imul
in
push
dec
fldz
xor
inc
adc
adc
mov
inc
fbstp
fs
outsb
iret
mov
inc
cwtl
xchg
xchg
xchg
cli
mov
adc
ret
inc
out
outsb
inc
jbe
mov
push
push
pop
pusha
add
cmp
shlb
jge
mov
dec
pop
sbb
adc
add
mov
fbstp
xor
pushf
sarl
inc
repnz
or
bound
mov
xchg
push
mov
lcall
test
mov
fneni(8087
adc
bound
out
scas
ss
gs
lea
push
in
sbb
or
in
fcoms
test
ja
sbb
jo
sar
andb
mov
xchg
cld
insl
push
jge
aam
sub
imul
test
pop
cltd
ret
je
pusha
int3
movsl
adc
aam
mov
push
dec
pop
shll
and
and
dec
leave
fnop
xchg
inc
cmp
cmp
push
in
fldcw
mov
add
out
sbb
or
and
inc
jecxz
stos
push
sub
and
sub
sbb
sub
or
xor
jne
in
mov
repnz
ret
mov
ret
and
int3
push
dec
andl
push
pop
and
add
addr16
dec
push
scas
mov
inc
and
pop
or
jg
xor
shl
in
inc
adc
cmpsb
inc
inc
lock
mov
in
nop
push
in
add
push
fbstp
mov
std
mov
ss
sbb
sub
and
xlat
jmp
loop
jb
push
mov
into
sub
and
stos
shlb
xor
push
xchg
jl
gs
nop
cmp
xor
xor
and
out
push
push
into
movsl
and
pop
loope
pop
mov
or
xchg
mov
jbe
mov
lock
adcb
xor
sarb
mov
cltd
jno
cmpsb
ret
push
outsl
xchg
cmp
scas
cmp
xor
pop
out
cmpsl
in
stos
jnp
imul
dec
or
addb
mov
pop
daa
jb
and
das
push
les
mov
rorb
sarl
jge
jb
jg
mov
repz
jg
out
xor
sub
scas
sub
hlt
lock
arpl
btr
pop
out
arpl
addr16
push
sarb
test
inc
and
pop
lret
in
mov
filds
add
push
outsb
jle
or
inc
add
rol
push
mov
add
mov
jo
push
xchg
cmc
dec
ds
aad
imul
aas
int
mov
rolb
lcall
sub
sbb
and
call
mov
pop
mov
ret
dec
mov
lds
jns
xor
cwtl
inc
fisubrs
add
pushf
sbb
push
push
filds
jl
insb
and
adc
add
inc
lahf
add
fs
aaa
out
les
mov
pop
mov
mov
data16
decl
jg
sbb
push
loope
movsb
sbb
addl
or
insl
jge
shrb
fstpl
daa
rcll
imull
xchg
jbe
js
sub
mov
jno
push
cmp
adc
hlt
roll
ror
mov
insb
rcrb
rcl
push
lods
jb
lods
leave
bound
push
in
jns
sbb
mov
daa
stos
add
inc
loop
loop
cmc
pop
in
cld
das
sbb
in
add
jge
movsb
inc
cmp
and
aad
jge
xchg
jae
pop
psignw
inc
clc
push
sahf
orl
stc
lret
loop
mov
dec
cli
inc
add
lea
lea
les
sbb
cwtl
or
push
sub
fcmovnu
xor
icebp
test
sbb
and
mov
rclb
addr16
xchg
into
fistpll
jp
imul
test
ljmp
subl
aas
push
push
mov
movsb
pop
cmc
xchg
jbe
mov
jg
pop
jne
nop
outsb
xchg
cmp
js
mov
popf
mov
add
in
in
mov
mov
mov
mov
pop
test
dec
addr16
xchg
movl
and
and
call
push
sahf
popa
sbb
push
cmpsb
push
push
sub
xorb
out
fimuls
jne
fisttpl
iret
lahf
pop
rcl
xchg
jle
pop
dec
xchg
xchg
pop
xor
int3
lcall
mov
add
adc
lea
div
es
mov
iret
xor
and
xchg
in
dec
mov
mov
jmp
sub
jmp
fiaddl
addr16
shl
sub
xor
hlt
arpl
mov
mov
jo
mov
mov
sar
in
out
cmp
mov
xor
add
fstps
popf
sub
or
xchg
shl
sub
push
enter
xchg
push
dec
sti
push
sbb
adc
ja
mov
cmp
cmp
insl
adc
or
sbb
xchg
cmpsb
loop
jge
aam
gs
rolb
lcall
pop
inc
imul
sahf
movsb
mov
xchg
dec
jecxz
jns
push
jle
mov
ja
imulb
xor
push
adc
push
in
fmull
fsubr
addr16
mov
jg
rorl
xchg
sti
push
xor
or
movups
xchg
sar
adc
add
xor
cs
dec
movsl
scas
xchg
push
inc
addr16
xchg
pop
jb
jl
add
lcall
xchg
adc
sub
call
in
int
push
pushf
fdivr
into
push
loope
jbe
decl
sbb
pop
jmp
or
shlb
pop
jnp
push
pop
gs
sbb
lea
sub
adc
jecxz
jb
cmp
loopne
mov
lcall
mov
stc
adcl
shl
in
xchg
cmp
push
mov
int3
data16
icebp
mov
cld
mov
stc
pop
inc
and
push
int3
shr
insl
stos
jecxz
gs
mov
fptan
sbb
jbe
loope
push
insl
adc
into
mov
out
jo
movsb
dec
jo
daa
das
fwait
sub
dec
xchg
mov
mov
mov
xor
cmp
add
arpl
jnp
push
mov
cwtl
dec
lret
pop
test
mov
scas
int3
arpl
mov
movb
jmp
xchg
insb
bound
rorb
ss
dec
cmc
mov
add
test
imul
and
sbb
jns
jno
jne
movd
mov
jae
insb
mov
xor
add
pop
push
sti
test
xor
out
ficoml
mov
xchg
out
mov
scas
test
lea
es
daa
mov
test
jns
push
int
sbb
out
lcall
xchg
mov
or
cmpsl
push
or
dec
push
mov
repnz
repnz
and
mov
sbb
or
mov
cmp
push
xor
outsb
aaa
insl
aaa
sarl
mov
mov
jmp
inc
fdivs
sub
add
jp
inc
dec
jb
jecxz
pop
add
loop
ss
test
lock
mov
in
and
xor
or
sarl
sub
dec
addr16
out
pop
pop
sbb
aam
rcrl
aaa
xchg
push
mov
mov
adc
pop
push
push
cltd
inc
sbb
cmp
addr16
jnp
stos
pop
fistl
pop
jle
cmpb
push
xchg
je
mov
or
rol
imul
sbb
mov
and
push
pop
sub
hlt
mov
lds
out
xor
das
rclb
mov
or
stos
jp
pop
fucomp
inc
push
push
mov
cmpsl
pop
imul
scas
push
jo
in
imul
sar
aas
xchg
sbb
jnp
sbb
xor
cwtl
pusha
imul
aaa
insb
adc
ja
cmc
cmp
inc
cmc
shr
nop
stos
outsb
mov
add
mov
sbb
test
adc
inc
fildl
push
cmp
stos
das
lock
cs
fsts
out
mov
add
xchg
sbb
test
sbb
mov
push
adc
dec
xorl
sbbb
cmpl
jne
mov
cmp
movb
or
insl
cmp
push
sub
mov
ret
xchg
mov
mov
inc
mulb
or
pop
jne
adc
pushl
cmp
sbb
or
outsl
stos
out
loopne
test
cli
push
push
xorl
push
jns
mov
and
rorb
pop
insl
fdivrl
jns
outsl
jmp
orl
lcall
dec
lret
mov
sub
call
add
scas
cmovb
rol
pop
dec
pop
repz
fs
test
imul
imul
add
pushf
mov
inc
outsb
popf
test
into
hlt
xlat
test
inc
in
or
and
push
jl
sbb
jb
xchg
fisttps
inc
cmp
push
cmp
pushf
fcompp
scas
outsb
ret
test
lods
xor
and
cmp
enter
xor
gs
cmp
push
in
mov
jnp
imul
pop
add
out
cmpsb
adc
mov
fistps
movsl
not
lcall
lret
inc
xor
in
pop
js
in
in
rcrb
sub
push
xchg
imul
decb
push
xor
dec
and
iret
and
ds
sub
out
popa
in
adc
inc
loopne
lods
ljmp
cli
push
call
push
cli
shlb
mov
lahf
push
pop
std
add
gs
sub
mov
adc
fsubl
mov
jne
and
inc
sub
mov
cvtps2pi
mov
loope
lock
call
push
push
sti
cmp
push
add
sahf
into
divl
xor
mov
jne
fimull
in
aas
mov
pop
jle
js
test
hlt
call
dec
jno
jle
adc
movb
daa
xchg
ret
outsl
rcl
xor
hlt
dec
mov
scas
or
mov
js
lods
inc
cli
jmp
leave
shr
and
divl
std
xchg
xor
sbb
inc
pop
data16
pop
je
in
rcrb
cwtl
xorl
add
xchg
je
mov
mov
jbe
testb
pop
lea
mov
or
pop
xchg
aam
arpl
push
pop
in
sar
push
dec
and
sub
out
rcll
iret
push
push
jle
mov
jp
push
mov
pop
pop
ss
inc
or
in
fwait
aad
xchg
push
iret
gs
mov
mov
aaa
imul
inc
jne
test
popf
add
or
cmp
cs
cmp
mov
rclb
lret
ret
jle
test
pop
xor
incl
lock
add
add
xchg
mov
xor
jo
lret
stos
mov
mov
ljmp
jae
mov
cmc
dec
or
out
jno
cld
pop
ja
add
popf
or
mov
pop
jp
in
dec
push
jbe
adc
and
or
popw
pop
mov
push
je
mov
bound
jecxz
jge
test
inc
aaa
inc
int3
lds
lds
lea
loop
cs
es
int
enter
jge
int
xchg
cmpsl
push
insb
lcall
dec
outsb
pop
cmp
int
xor
sbb
jmp
and
out
xor
loope
cmp
test
icebp
xchg
std
mov
adc
dec
or
loop
jno
sub
inc
sbbl
fisttpll
mov
add
fisttpll
icebp
leave
test
sub
pop
dec
push
insw
adc
cmp
gs
adc
icebp
popa
push
ljmp
xor
movl
mov
mov
xor
pop
les
fsub
orb
lcall
sbbb
cmc
lods
mov
sarl
insb
lock
adc
jno
dec
lret
xchg
mov
negb
inc
push
sbb
mov
jae
jno
mov
xor
push
or
mov
dec
inc
cmp
inc
adc
fisttps
dec
lret
cld
pop
xchg
jmp
and
sarb
jnp
xchg
or
xchg
add
push
mov
lret
adc
jle
outsb
dec
fistpl
adc
xchg
gs
jecxz
loopne
pop
inc
into
add
pop
cli
sbb
adc
push
sbb
and
ret
jp
ljmp
sbb
or
mov
xor
inc
add
push
inc
add
outsl
ss
xor
cwtl
fistpll
imul
test
push
fwait
xor
mov
aad
push
and
rcrb
call
pushf
icebp
lock
loopne
pop
sub
and
xchg
mov
jg
dec
cmp
aam
int
inc
das
mov
enter
mov
add
ljmp
fwait
mov
ret
imulb
or
scas
outsb
push
inc
int
pop
nop
imul
loopne
xor
insb
cltd
data16
in
cmp
inc
clc
stc
sti
call
xchg
push
sub
sub
or
and
xor
mov
dec
lahf
cmpl
pop
mov
xchg
stos
push
aaa
dec
push
push
pop
ss
movsl
or
mov
dec
clc
js
jecxz
jo
add
popf
xchg
out
pop
inc
adc
aam
dec
in
stos
or
jne
mov
mov
mov
aam
cmc
call
pop
lea
nop
jb
adc
mov
mov
cs
cmpsl
gs
xor
dec
aaa
pusha
add
and
xor
test
push
lcall
nop
xor
add
pop
add
dec
divl
fimuls
js
out
xchg
add
ret
repz
mov
idivl
out
test
mov
inc
out
sti
pop
dec
lret
jmp
stos
rolb
xor
inc
clc
movsl
sbb
lcall
cmpsb
sbbb
movsb
pop
stc
test
cwtl
mov
loopne
adc
adc
pop
test
xor
adc
lret
xlat
int
and
push
xchg
mov
test
popf
scas
push
mov
xchg
push
inc
or
shlb
jl
cmp
movsl
mov
xor
cmp
loopne
cmpsb
cmp
imul
mov
push
dec
mov
push
in
and
data16
xchg
jne
inc
xor
decl
xor
add
cltd
stos
sti
dec
mov
or
je
hlt
fwait
mov
push
cmp
jge
mov
and
out
mov
add
xor
inc
push
add
lret
add
or
mov
or
in
jle
pushf
js
lea
add
add
or
mov
insb
xor
imul
pop
lahf
clc
xchg
dec
addl
jo
jmp
mov
or
jge
jp
cmp
sbb
cmpsl
mov
xchg
repz
xchg
push
add
rorl
mov
inc
rorl
xchg
xor
jle
stos
loope
sub
cld
in
nop
and
pop
movl
mov
mov
cmc
xchg
ds
ds
insl
imul
int3
add
sti
fmuls
xchg
popa
test
mov
xchg
test
roll
jle
and
add
xor
jg
cld
sub
pop
sub
inc
shll
les
and
jo
jbe
flds
popf
push
jnp
fwait
test
jp
mov
add
ljmp
inc
lds
xor
mov
cmp
jg
mov
cs
dec
leave
mov
or
mov
cwtl
add
lods
sbb
js
je
xchg
ja
fmuls
stos
popf
stc
dec
xchg
scas
test
cmp
sar
aaa
mov
mov
aad
stos
pop
lock
xor
pop
mov
lea
sahf
loop
mov
stc
enter
fistl
adc
jmp
and
fists
push
sbb
arpl
popf
mov
sub
hlt
push
cmc
sub
sub
adc
and
aaa
test
mov
bound
cmovbe
sbb
insb
lea
and
pop
cltd
push
adc
in
or
pusha
adc
jnp
test
mov
cmpsb
xchg
repz
aam
addl
jle
daa
inc
push
sbb
pushf
mov
jl
sbb
adc
mov
pop
dec
pop
sbb
mov
jp
fcoml
subl
dec
shl
loopne
xchg
pop
pushf
sbb
ffree
mov
adc
in
leave
cli
mov
ficoms
jbe
mov
imul
sbb
popf
in
xor
adc
mov
mov
outsl
imul
in
insl
into
movlhps
mov
pushw
aad
mov
jbe
nop
fnstenv
roll
nop
and
in
movsb
aaa
pushf
mov
into
adc
pop
bound
fs
mov
mov
push
push
stos
dec
gs
sbb
cmpsl
mov
adc
in
sub
xor
shrl
mov
adc
leave
pop
fs
pinsrw
jmp
lahf
xor
int
sbb
sti
pop
std
call
jne
inc
mov
xchg
repz
movsl
icebp
test
inc
js
repnz
cmp
call
testl
mov
xchg
mov
mov
or
int
lds
sbb
mov
test
xchg
neg
push
xchg
das
and
cmp
shll
add
push
lcall
arpl
movsl
jmp
out
cmc
pop
out
jp
jno
mov
mov
jp
data16
cwtl
sbb
movsl
add
ret
out
pop
sub
dec
popf
out
or
cmp
stos
outsb
rcrl
jp
sub
or
into
ja
in
jns
or
js
xor
arpl
fwait
inc
cmpl
test
add
pusha
fadds
inc
and
cs
xor
push
xor
xor
push
dec
mov
push
xor
cmp
sbb
cmc
push
cmp
pop
push
shlb
aas
shlb
xor
inc
and
int3
jl
ja
jne
sub
xchg
in
mov
rolb
test
add
bound
mov
or
out
mov
scas
jmp
popf
jne
fs
sti
movsl
subb
jmp
push
js
dec
jbe
sub
push
clc
lea
cmp
xor
or
jmp
popf
or
cmpsl
sbb
mov
dec
rolb
push
sub
movsb
inc
testl
sahf
push
pushf
test
mov
jno
sub
pop
imul
es
jle
mov
adc
gs
xchg
mov
fistl
pop
xchg
test
adc
aas
adc
testl
test
and
loopne
xchg
inc
add
and
in
cs
cmp
pop
pop
je
ja
xchg
lods
adc
xchg
nop
lods
dec
lods
mov
inc
les
out
xchg
mov
jecxz
sahf
leave
jg
shlb
lcall
and
int
jo
sub
hlt
pop
or
lods
bound
mov
xchg
sbb
fisttps
out
push
clc
adc
imul
lahf
inc
test
xor
jecxz
jne
push
cmpsb
in
ret
xchg
push
neg
dec
xchg
in
mov
push
pop
fcoms
mov
ret
sub
sbb
cmp
jae
sub
push
js
fdivl
repnz
push
push
xor
fwait
dec
adcl
xor
mov
fs
insl
sub
push
sub
mov
add
aam
ljmp
mov
push
fldt
or
fcompl
push
mov
fnsave
insl
inc
repz
push
test
push
aam
rcrl
pop
jns
nop
mov
xor
sub
in
mov
out
xor
inc
test
lods
lds
daa
out
pop
xchg
stc
sub
mov
pop
push
xor
adc
pop
std
inc
dec
push
mov
sahf
std
xchg
push
cmp
in
enter
sbb
jp
xor
out
pop
adc
dec
lds
sbb
ror
in
roll
clc
push
aam
jle
push
and
dec
filds
push
rclb
sbb
mov
stos
gs
jbe
lcall
mov
mov
sub
mov
cmp
ja
mov
daa
jbe
insb
pop
outsb
inc
lahf
inc
ret
aam
mov
pcmpgtb
inc
jg
cmp
test
cmp
insl
pinsrw
mov
fnstenv
mov
je
imul
lahf
xchg
cmp
add
stos
mov
cmc
and
cmp
mov
ja
cmp
shlb
imul
push
pop
sbb
daa
mov
cmp
sbb
xor
enter
sahf
push
xor
xchg
fists
and
push
and
xchg
bound
push
sub
ljmp
xor
sbb
push
add
inc
lcall
inc
jo
fs
pop
test
push
lock
jbe
cmc
enter
xor
jge
jbe
mov
dec
test
pop
xor
add
in
bound
jp
sbb
pop
pop
mov
pop
push
stos
mov
shlb
test
mov
stc
mov
fstps
imul
mov
and
stos
sbb
roll
arpl
fidivl
push
les
fstpt
mov
inc
lcall
std
sub
cmpsl
mov
ret
lret
cmp
cmp
add
mov
cmp
ret
xor
mov
pop
int
test
cmpsb
adc
popa
mov
insb
decb
jb
xlat
mov
insb
mov
sub
rclb
xchg
aas
mov
xchg
adcb
pop
pop
xchg
xor
xchg
das
jmp
cwtl
sbb
add
leave
jne
leave
fs
ret
cmpsl
xchg
pop
inc
push
ds
or
dec
xchg
cmp
sub
cmp
lods
jmp
ror
pop
daa
jo
add
loop
sti
mov
or
outsb
negl
adc
lock
jl
mov
inc
and
scas
test
fnsave
call
test
xchg
mov
cmp
iret
or
push
sti
sti
leave
cmpsl
lds
or
stos
jbe
aam
pusha
cmpsl
sub
sti
ret
cmp
xor
clc
out
fs
add
fmuls
je
call
rcr
jge
leave
aaa
jecxz
mov
pop
jge
les
push
pop
sbb
pop
push
add
jp
aas
sub
jmp
dec
rcrb
adc
mov
add
enter
xchg
and
in
movsb
sbb
push
movsl
fwait
lock
pop
jmp
icebp
sbb
das
pushf
rcrl
popf
arpl
push
or
shll
cmp
jge
dec
pop
mov
xor
cmp
leave
aas
ds
push
fistl
clc
fistpll
inc
les
mov
or
push
push
dec
lods
mov
ret
test
push
push
or
xor
in
push
jge
out
mov
push
imul
push
mov
sub
add
add
xor
lahf
push
lret
adc
roll
outsl
mov
add
sbb
push
sbb
mov
idivb
dec
sbb
int3
mov
es
add
rorl
movsb
and
adc
ret
arpl
lds
pop
jl
xchg
jbe
and
cwtl
xor
int3
je
pmaxsw
or
fsubr
jecxz
fcmovne
or
sub
cmp
and
dec
out
push
movsl
xchg
out
mov
and
and
sbb
pop
inc
test
jmp
mov
adc
mov
sub
push
xchg
xor
popf
xchg
sub
lds
cmpsb
jns
add
inc
jb
call
in
inc
push
pop
fstps
movsb
xchg
orb
scas
repnz
jg
sub
xchg
sbb
mov
adc
sbbb
mov
aaa
dec
insb
xchg
mov
fldl
push
movsb
decl
icebp
leave
add
dec
sbb
or
xor
imul
cmp
push
fldcw
sbb
xlat
jno
std
out
or
out
cmp
pushl
push
imul
pop
and
pusha
xor
int3
in
inc
dec
cli
mov
imul
or
inc
mov
cmp
js
rcrb
mov
mov
adc
dec
xchg
lock
arpl
pop
mov
cmp
mov
jbe
es
std
jnp
sub
rcll
xlat
in
jne
mov
pop
sub
enter
fldcw
pop
outsl
push
xchg
test
xchg
xor
pop
arpl
pushl
xchg
and
jmp
lea
xor
xchg
pop
out
jecxz
inc
mov
mov
lods
in
mov
jecxz
mov
popf
mov
jnp
loope
jecxz
pop
stc
out
mov
sub
das
iret
ret
pop
xor
stos
cli
pop
aas
leave
cmp
imul
test
mov
xor
fsubl
cmp
dec
and
adc
mov
jbe
sahf
std
ljmp
cmp
imulb
or
shll
aam
jge
rol
dec
subb
mov
stos
fsubrs
enter
das
pusha
cmp
fldenv
imul
mov
or
xchg
jmp
inc
sbb
cmp
fnstenv
push
and
inc
mov
jg
je
stos
or
je
cmp
add
and
mov
outsl
mov
xchg
mov
cwtl
cmpb
xchg
test
rorl
sbb
push
enter
rcl
test
vunpcklps
mov
jl
mov
push
loop
xor
xor
repz
inc
mov
push
push
xchg
mov
add
pop
lcall
div
aas
lcall
push
add
bound
inc
rolb
mov
sub
inc
jmp
xchg
mov
negl
and
movsb
mov
push
imulb
inc
and
sbb
in
xchg
xchg
out
inc
rcll
cmp
add
in
mov
and
pushw
lret
gs
ds
cmp
jno
pop
mov
jne
cltd
mov
jg
neg
mov
sets
ficompl
mov
cmpsl
mov
dec
mov
ss
push
xchg
or
fs
cltd
mulb
lahf
and
ret
pop
pop
mov
hlt
sub
lahf
or
adc
jbe
pushf
fiadds
sub
mov
inc
ljmp
xor
stos
shlb
addr16
sub
js
mov
xchg
and
fildll
pop
adc
fisttpll
bound
push
std
and
imul
sub
mov
ljmp
test
fsubs
faddp
inc
das
out
and
jp
cltd
cmovnp
pop
cs
cmp
aad
mov
xchg
ds
add
ss
push
jae
dec
ja
adc
dec
cs
jecxz
sbb
aad
xchg
aas
int3
rolw
test
fdivrl
and
idiv
push
test
push
in
xchg
addr16
lahf
addr16
lods
dec
fsts
xor
fldcw
add
add
adc
mov
int
jne
lods
xchg
sbb
cli
lcall
push
and
mov
jno
cmp
imul
add
sub
cmpsb
call
movsl
inc
inc
sub
dec
push
cmpsl
rcl
out
pop
sub
testb
push
adc
enter
insb
mov
lea
loop
push
pop
sahf
adc
mov
xchg
push
fwait
popa
mov
pushf
aas
je
mov
and
mov
out
sbb
cmp
sbb
xchg
cmp
push
mov
ja
add
push
into
arpl
and
scas
inc
xor
dec
addl
push
xchg
in
rcrb
jecxz
mov
inc
adc
cli
xchg
iret
fwait
jno
lock
scas
xor
out
and
arpl
rcrl
leave
add
mov
add
repnz
xor
aam
lahf
pop
inc
pop
inc
insl
fidivl
pop
ds
and
shl
fisubrs
sbb
pusha
dec
pop
and
leave
add
pop
xor
mov
push
sar
xchg
imul
adc
int3
mov
pop
sbb
cmpsb
xor
dec
or
jne
addl
sarb
pop
inc
test
shll
xor
test
cmp
insb
lahf
push
and
jp
add
idivl
dec
data16
scas
pop
js
fisubrl
xchg
mov
push
je
jecxz
cs
lret
stc
add
outsb
xchg
test
dec
fmul
cmp
pop
mov
rorl
sub
cmp
cmp
mov
stos
cli
mov
add
xor
ds
aas
and
pop
xor
jle
push
mov
rorb
nop
inc
ljmp
or
ja
xchg
adc
push
scas
mov
or
outsl
shrl
sub
sbb
dec
lret
lret
mov
and
sub
mov
sbb
push
pop
mov
jg
mov
adc
out
int3
add
repnz
shrl
mov
mov
inc
pop
xchg
pop
add
sub
push
call
mov
inc
xchg
cmp
xchg
xchg
inc
inc
dec
int
sub
imul
cld
and
lods
inc
aas
push
movsl
jbe
imul
jmp
ss
jnp
xor
imul
test
push
fisttpl
pusha
cwtl
xchg
push
sbb
repnz
in
pop
pop
push
div
or
daa
cs
or
je
std
icebp
jno
mov
mov
bound
daa
fbstp
pop
add
xchg
cld
and
std
mov
fstl
jmp
lods
xorb
out
adc
popa
adc
mov
xor
aam
negl
daa
cs
or
mov
dec
sub
test
mov
ja
imul
mov
jne
mov
pop
jae
pop
fdivl
push
xor
repnz
loope
fcmovu
and
sub
imul
mov
dec
test
lock
idiv
dec
sbb
inc
xorb
lods
ja
shrl
ror
and
and
lret
cmpsl
mov
jecxz
xchg
mov
jmp
sti
xor
cld
xchg
xlat
es
mov
mov
in
cs
lcall
pop
adc
xchg
lods
fisubrl
sub
hlt
out
push
push
sub
cmpsl
mov
cmc
jo
loopne
xor
mov
shll
fcomps
imul
cmp
dec
fistpl
out
addl
jmp
repz
xchg
ror
aas
pushf
mov
repnz
add
lahf
mov
pop
jnp
inc
lds
jg
mov
fs
das
xchg
cmc
mov
mov
movsb
jecxz
or
dec
mov
add
jne
ss
mov
mov
jo
inc
mov
sub
bound
lcall
add
adc
xor
pop
dec
iret
repz
shl
and
ss
mov
fsubrs
jmp
icebp
mov
bound
mov
pushf
pop
sub
jb
sub
pop
addr16
scas
insl
push
mov
push
ret
xor
je
shrl
or
inc
push
mov
push
out
pop
aaa
cwtl
pushf
mov
mov
addr16
inc
jmp
dec
ret
minps
push
lret
push
mov
pop
je
mov
bound
rolb
sahf
jmp
cmp
xor
pusha
enter
imul
or
imul
adc
and
or
push
and
cld
test
inc
arpl
leave
adc
leave
stos
enter
add
fstl
lods
cmp
and
dec
jbe
pop
add
test
mov
aaa
popf
dec
cs
mov
push
adcb
lods
add
add
test
dec
cmpsl
fiadds
pop
dec
insb
shrb
call
pop
lret
cltd
daa
sbb
lcall
jns
xchg
and
les
add
sbb
inc
push
pop
mov
shll
jge
outsl
das
jae
fwait
addr16
and
pop
gs
adc
inc
cmp
aas
ss
pop
pop
jne
imul
iret
cmc
adc
cmpsb
or
lret
lahf
cwtl
lahf
lret
and
xchg
xchg
add
or
push
cmc
sub
xchg
jne
jno
fs
pop
aam
or
test
mov
adc
xor
scas
or
mov
cmp
push
adc
inc
mov
push
push
aam
pop
sbb
jnp
mov
fimull
inc
mov
pop
adc
and
inc
gs
jecxz
jl
les
ret
imul
adc
sbb
sub
pop
sarb
jb
pop
movsl
xchg
dec
out
push
das
xchg
pop
xor
dec
fs
push
loopne
cwtl
out
roll
inc
aaa
lcall
ljmp
sbb
sbb
pop
jl
mov
cmpb
sbb
mov
sbb
in
out
sbb
test
andl
pushf
mov
ss
or
sbbb
scas
mov
push
ja
sbb
xchg
mov
push
mov
aam
jg
inc
fucompp
shrb
je
out
daa
sub
or
pop
push
push
push
fisubl
dec
divl
shl
add
or
xlat
inc
cmp
popa
xchg
test
imul
iret
jb
pop
in
sbb
insb
mov
xchg
fcmovnu
or
xlat
cmp
add
ljmp
cltd
gs
pusha
and
std
xchg
lret
sub
daa
fildll
jge
icebp
cltd
test
sbb
mov
add
negl
or
test
enter
incb
pop
pop
jmp
loopne
inc
cld
cli
fidivl
shr
lret
int
bswap
inc
dec
sub
xor
xchg
in
dec
out
iret
mov
push
push
imul
mov
mov
fcoml
sti
fidivs
js
out
xchg
or
xchg
push
shlb
in
test
sub
mov
mov
dec
xchg
bound
movsb
mov
fisttpll
jg
ds
push
sbbl
pop
lea
inc
or
outsb
push
test
add
addr16
fs
out
jle
hlt
sbb
stc
mov
jl
stos
bound
jge
sub
and
inc
stos
clc
aad
push
leave
mov
out
mov
sub
ret
lods
sbb
icebp
mov
pop
addb
ljmp
add
xchg
jno
lods
in
dec
imul
pop
sahf
push
xchg
sbb
xchg
nop
cmc
inc
fwait
xchg
fcomps
dec
inc
mov
call
in
sahf
xlat
pop
mov
cmp
mov
cmp
mov
adc
pusha
mov
sub
add
divl
dec
stc
pop
sub
jle
lods
icebp
jge
and
in
scas
and
dec
push
rolb
aas
push
mulb
sbb
dec
sti
pop
shl
mov
inc
jp
ljmp
orb
push
ret
mov
lock
in
popa
lds
jmp
out
in
jge
ret
scas
sub
lods
jecxz
push
lods
jp
fnsave
mov
push
cld
add
push
adc
stos
add
insb
jne
jbe
pushl
jae
fmuls
push
movsl
cmp
out
xchg
mov
pop
jae
pop
and
fsubrp
outsb
loope
mov
lahf
in
in
cmp
sbb
mov
imul
fnstsw
push
dec
adc
cs
jmp
shll
cltd
adc
fstl
sbb
fistpl
aad
sub
loope
pop
xor
xor
adc
sahf
popl
andl
scas
lahf
test
cs
inc
popa
dec
lods
sub
jb
pop
push
push
cmpsb
scas
test
xorb
addr16
popa
xchg
maskmovq
divl
out
mov
daa
popa
inc
dec
lods
lds
jp
dec
imul
adc
xor
jne
or
outsb
adc
push
bound
mov
test
mov
in
mov
jge
mov
lods
cltd
jnp
popf
sbb
pop
in
mov
push
sbb
push
push
repnz
test
or
nop
jno
enter
inc
movsl
movsb
lret
outsb
xor
xor
aam
mov
arpl
repnz
adc
xchg
shl
gs
daa
icebp
mov
out
jmp
sub
add
shrb
fcmovnu
push
hlt
leave
ja
inc
dec
aam
outsb
adc
mov
mov
out
jnp
insb
mov
jbe
sub
adcb
mov
dec
jmp
in
inc
sub
icebp
ret
mov
or
jle
xchg
ljmp
fwait
add
fs
or
mov
jbe
nop
jp
ds
out
mov
xor
imul
ds
jnp
int
mov
std
cwtl
or
lock
mov
in
jle
mov
into
inc
and
test
or
jb
add
mov
and
cmpsb
fists
mov
push
lods
or
sub
loop
cmp
fwait
mov
jb
push
inc
adc
sbbl
cmp
push
out
sbb
dec
std
sub
jb
add
es
daa
sub
mov
mov
cs
mov
popf
loop
das
mov
add
loope
inc
cltd
sub
jg
addl
outsl
jecxz
lds
adc
mov
mov
mov
mov
and
loopne
xor
out
paddb
popl
or
popa
sahf
mov
or
mov
xchg
sub
clc
repz
rcr
or
jb
dec
cmp
daa
out
stos
xchg
mov
adc
lods
pop
loop
stos
jne
sahf
add
push
dec
popa
cmpsl
dec
fisttps
out
loope
data16
cli
xor
fists
jmp
sahf
pushf
jo
andb
jo
popa
sub
cltd
xrelease
fs
imul
push
pusha
mov
iret
test
movsl
push
xor
andl
inc
popf
movsb
je
rol
xchg
scas
pop
aaa
jb
adcb
and
jl
push
rorb
lods
push
popa
outsl
in
jecxz
mov
testb
lock
jmp
das
or
cmp
add
push
testb
mov
in
jo
inc
mov
scas
push
xchg
mov
cld
scas
dec
xchg
inc
clc
sbb
push
adc
test
adc
movsl
sbb
push
cs
lock
ret
insl
lods
je
jo
repnz
cmp
sbbb
xor
test
fs
bound
jecxz
incl
or
movsl
inc
in
loopne
in
invd
inc
cmp
repnz
xor
jnp
enter
sub
jnp
jmp
or
mov
test
notl
adc
add
mov
pop
imul
push
popa
adc
inc
jg
pop
mov
enter
adc
mov
cmc
push
xchg
cld
or
lahf
mov
jnp
add
in
and
pushf
testw
push
xor
sub
repz
inc
jns
inc
push
jmp
idivl
scas
jmp
hlt
fldl
sbb
inc
cmp
dec
push
add
movsl
and
and
mov
and
shlb
les
pushf
push
into
or
mov
cwtl
arpl
xor
adc
shlb
add
mov
inc
out
jb
movsb
stos
mov
scas
je
sti
stos
loopne
mov
in
aas
mov
cmp
cmp
lret
fbstp
ret
xor
mov
jl
into
push
jbe
pop
insl
fistpll
jge
adc
or
cld
xor
movsb
pop
test
or
lods
pop
inc
mov
inc
sbb
jb
adc
and
gs
jo
push
mov
rorb
dec
enter
je
or
pmuludq
in
rclb
xchg
arpl
pop
stos
fadd
mov
sbb
add
inc
jecxz
shrb
cs
mov
sbb
adc
inc
push
idivb
es
push
cmc
sub
jg
movsb
add
adcb
lods
je
adc
rolb
jg
in
inc
add
ret
in
xchg
into
fisttpll
cmp
rorl
stc
testb
aas
stos
adc
insb
cmp
push
sub
fcomip
int
jge
inc
inc
insb
mov
lock
notb
xchg
hlt
dec
push
cmp
mov
adcl
lock
adc
js
and
int
lods
insb
addr16
mov
jo
or
or
sub
orl
lahf
repnz
repz
inc
repnz
stc
xor
or
movsl
inc
jmp
mov
inc
ret
cs
xchg
push
add
loopne
mov
sub
popf
cmp
lahf
push
xor
test
xor
add
js
lods
loopne
pop
pop
std
push
jg
pop
jnp
call
sbb
push
into
mov
xchg
cmp
mov
shr
lret
push
aam
or
adc
push
mov
scas
scas
push
shrl
testb
and
test
adc
ds
lock
mov
and
mov
dec
mov
imulb
and
adcb
jns
mov
loope
in
roll
imul
push
mov
cmc
lret
jl
inc
adc
sbb
mov
dec
cwtl
jo
push
and
sahf
dec
sub
mov
lds
loop
add
xor
popa
movsl
xchg
in
lret
jo
lods
add
pop
pop
xor
jmp
arpl
sub
aas
sti
sbb
out
clc
xchg
xor
loopne
popa
inc
adc
enter
push
xor
lea
xor
jno
sub
scas
add
out
and
in
fwait
push
or
int3
fdivs
aam
andl
pop
fs
push
sarb
lods
and
and
sub
pop
call
sbb
adc
pop
test
or
mov
mov
rcrb
jp
and
les
je
ret
xor
and
imul
mov
fcmovu
mov
jno
sub
es
and
mov
out
cmpsl
xchg
aaa
pusha
or
je
add
and
pushf
lods
movsb
insb
jge
cmc
insb
loope
fdivrl
lods
mov
out
cmp
jg
sbb
sahf
mov
jmp
cwtl
subb
mov
mov
in
mov
sbb
mov
into
sub
mov
movb
ds
and
test
sbb
dec
xchg
rol
jmp
rclb
xor
push
adc
in
or
cmp
loop
dec
ja
test
popa
inc
ja
test
inc
ret
push
lods
mov
add
lea
rorb
dec
push
pop
test
adc
insb
cld
mov
shrb
mov
sub
mov
sbbb
jae
test
ja
xchg
mov
cmc
xchg
jbe
push
pushf
mov
daa
mov
addr16
sbb
and
iret
cmp
stc
test
xchg
or
nop
inc
and
mov
jmp
ja
fidivrs
push
sbb
pop
call
lods
push
pop
test
jnp
push
sbb
outsb
fbstp
loopne
dec
push
lock
cmp
mov
lcall
sbb
cmp
bound
cltd
lock
xor
jo
insb
lods
loopne
sbb
xchg
pop
mov
imul
lock
cld
dec
xor
in
pushf
insb
adc
jl
xchg
out
adc
mov
mov
lock
sub
mov
lds
sti
shlb
rclb
mov
cwtl
jno
mov
pop
pop
in
sbb
push
rcrb
jmp
adc
jno
hlt
shl
adc
fwait
ror
dec
scas
cs
lods
or
mov
jb
or
js
or
cmp
pop
sub
sbb
mov
sub
cmp
int3
in
sub
shll
test
push
sbb
int
inc
xor
ds
mov
sbb
std
leave
jp
xor
mull
sub
cmc
out
inc
lret
sbb
jmp
sub
js
in
stos
dec
push
jmp
pop
inc
add
inc
out
sub
imul
pop
jbe
push
dec
xor
jb
sub
ss
cli
scas
inc
push
mov
mov
gs
cmp
lcall
pop
push
adc
mov
movsb
pop
mov
lahf
dec
dec
jns
jbe
mov
dec
xor
xchg
cmp
out
in
fcmovnb
add
out
mov
cmp
cmp
pusha
add
jo
cs
push
mov
iret
push
int3
cmpsb
mov
imul
pop
push
ffree
movsb
or
loope
icebp
inc
das
dec
popa
in
aas
jb
xchg
or
and
pop
iret
mov
pushf
sti
dec
test
xchg
bound
adc
imulb
mov
pop
mov
adc
jg
mov
mov
ljmp
outsl
jmp
sbb
or
std
jb
xor
imul
aad
ja
repnz
or
sub
sbb
inc
sbb
not
and
pop
cmp
idivb
cmp
and
movsl
sub
sahf
mov
outsb
dec
xchg
and
pushf
adc
dec
icebp
stos
or
cli
fisttps
jb,pt
mov
cltd
inc
lods
mov
shrb
sub
rcll
pop
pop
xor
mov
inc
mov
cmp
outsl
nop
dec
jb
inc
adc
xor
movsb
dec
pop
in
bound
aam
jge
imul
add
cmc
aas
inc
push
movsl
adc
lods
jg
add
push
push
lret
lods
pushf
into
mov
lds
lds
movsl
push
mov
and
lahf
xchg
xor
jmp
jle
shll
adc
and
repnz
dec
fisttpll
aas
xor
sbb
lret
std
loopne
jo
xor
arpl
sbb
mov
ja
jne
cmc
cs
sub
inc
jnp
pusha
addl
xchg
enter
add
fdivl
xchg
into
and
fistps
dec
les
imul
imulb
lret
cs
mov
out
jl
repz
stos
shll
test
pop
add
cmp
fwait
gs
fcmovnbe
cld
icebp
sub
inc
stc
xor
aas
lock
sbb
dec
push
mov
xor
dec
or
fmuls
icebp
adc
pop
test
imul
fbld
fwait
orl
mov
xchg
sbb
out
mov
icebp
jp
mov
jae
test
aad
push
and
sub
lods
and
fimuls
or
cmpsb
mov
sub
fcmovnu
pop
inc
cmc
inc
pop
cltd
add
and
aad
mov
jne
push
clc
in
into
aam
mov
and
sbb
insl
jb
cmp
jo
adc
divb
std
fwait
cmpsb
mov
adc
push
cmp
push
lods
clc
xchg
popf
and
aad
sub
and
popa
cmp
mov
jmp
inc
lea
xor
hlt
aad
and
test
adcl
cmp
xchg
test
adc
inc
cmpsb
imul
and
jge
and
movsl
jae
sub
jbe
icebp
cmp
int3
lods
test
pop
adc
loope
or
jmp
jge
inc
lock
jge
sbb
dec
dec
popa
jo
jae
test
jp
jns
jno
sub
pop
cmpl
jg
nop
or
outsb
popa
xor
mov
pop
adc
dec
xchg
andl
fstl
loope
push
ja
lahf
or
in
cmc
out
in
out
jge
cs
adc
jae
sbb
mov
lock
pop
repnz
adc
pushf
in
repnz
xchg
aad
out
pushf
mov
std
xchg
pop
dec
icebp
jge
push
mov
or
fsubrl
sub
or
mov
mov
das
popf
cmp
add
sub
in
pop
add
inc
call
insb
push
mov
jg,pn
jne
jg
cltd
jg
or
pop
stos
cmp
arpl
in
movsl
aaa
adc
pop
push
xchg
andb
or
repz
rorb
cmp
jmp
jnp
add
adc
inc
loop
jl
out
cltd
sahf
sbb
lret
mov
mov
sbb
out
adc
and
mov
mov
rorb
jecxz
cmp
imul
fldt
jae
xchg
dec
inc
shl
nop
lds
loope
and
cmp
jmp
jg
or
ret
xchg
pop
stc
shll
loopne
rolb
or
mov
mov
mov
test
mov
cmc
lock
and
repz
aam
das
xchg
jmp
in
rclb
mov
xor
mov
mov
cmc
rcr
lcall
and
icebp
stos
out
dec
dec
js
sbb
dec
test
iret
cmc
jb
out
xchg
cmp
rol
xchg
lods
iret
int3
mov
sub
sub
addr16
adc
pop
cmpsl
sbb
jbe
xor
filds
popa
in
mov
shll
je
outsl
mov
cmp
jl
and
jl
sbb
js
cmp
and
mov
mov
xchg
aaa
xchg
scas
xor
les
mov
sbb
pusha
mov
sbb
loop
lods
fs
sub
fwait
lret
xchg
push
mov
add
mov
lds
push
bound
mov
stos
jb
rcl
test
pop
fnstenv
xchg
mov
mov
and
enter
fidivrs
insl
cmpsb
popf
pop
mov
cmp
lods
dec
lds
jne
fstps
leave
lcall
push
shl
out
sbb
in
push
mov
xchg
cmp
cmp
mov
cmp
and
dec
jae
ja
mov
scas
mov
les
mov
test
mov
sub
or
mov
std
and
push
sti
ds
sub
mov
in
cmpsl
adc
imul
mov
add
loopne
jb
pushf
nop
push
in
push
notl
mov
enter
js
pop
loope
aad
cs
sbb
hlt
mov
pop
pop
jecxz
movsl
xor
push
mov
lods
mov
fwait
xlat
cmpsl
push
push
fcmovu
pusha
mov
adc
mov
test
cmp
movntq
out
es
dec
jp
jge
push
jmp
xchg
push
ret
movsl
nop
je
push
les
scas
je
and
shll
add
pand
aas
inc
mov
imul
mov
mov
imul
leave
jmp
ret
daa
aas
scas
addr16
mov
imul
fucomp
adc
aad
xor
adc
icebp
adc
fs
and
jmp
sub
test
icebp
jae
inc
jno
insl
xchg
adc
pop
ljmp
les
iret
pop
stos
es
push
iret
imul
mov
icebp
test
popa
jne
cs
adc
stc
xlat
pop
shr
mov
loop
inc
and
rolb
in
jg
xor
insl
or
sahf
cmp
stos
jmp
pushf
adc
xchg
je
aad
mov
sbb
das
aad
cmc
pop
jns
xchg
and
inc
xchg
imul
adc
and
imul
je
fs
pusha
push
testl
aad
or
aad
xchg
fsts
or
pop
sbbb
repnz
les
pop
xchg
push
xchg
mov
cs
add
jb
subl
jle
adc
push
xlat
hlt
jne
nop
stc
xchg
inc
aaa
jbe
ja
arpl
sub
sbb
or
xlat
and
in
adc
cmp
jno
inc
incl
ret
fcompl
adc
dec
in
mov
cmp
xchg
std
sbb
notl
jnp
or
mov
pop
add
pop
cmp
inc
aam
dec
int3
call
aam
pop
jne
and
int
xchg
ret
ret
adc
inc
mov
das
ficoms
xor
aas
jb
mov
xchg
pop
in
pop
int
xor
sbb
test
push
jbe
xchg
inc
outsl
sahf
movsb
ret
push
mov
xchg
jmp
mov
and
mov
inc
int3
mov
sahf
in
and
jbe
dec
rcl
lock
insb
sub
xor
lea
adc
xor
inc
stos
push
stos
sahf
out
jb
ss
cli
pop
mov
push
data16
lret
jb
fildl
loope
es
lcall
pop
cmpsb
inc
adc
out
push
je
arpl
xchg
imul
repz
test
jae
jbe
out
test
andb
rcrb
sbb
ss
or
in
inc
out
out
inc
dec
sub
sub
or
je
stos
fs
xor
add
pop
xor
cmc
and
sbb
xlat
gs
mov
xchg
pop
jp
std
jo
popf
lock
enter
das
xchg
add
int3
sbbb
fldenv
or
mov
int
repz
fbld
jp
ljmp
and
inc
mov
jge
push
les
dec
jb
mov
add
xchg
mov
test
ss
xchg
xchg
cli
sti
pop
mov
scas
xchg
jbe,pn
fld
dec
mov
push
ror
gs
test
or
pop
xor
add
push
movsl
xchg
leave
mov
icebp
repnz
and
faddl
rolb
adc
jl
inc
fimuls
outsb
outsb
sub
sahf
cmp
inc
cmpsl
mov
in
les
sub
nop
mov
cld
fs
test
cmp
jae
and
xchg
sub
repnz
shll
adcb
sub
dec
adcl
jmp
lahf
add
cltd
jno
add
mov
leave
xor
jno
aaa
dec
sub
mov
loope
shlb
arpl
or
xchg
push
mov
fs
int
lahf
fs
das
and
int
imul
add
push
jnp
test
sbb
or
gs
faddp
or
rcrb
adc
imulb
mov
fisubrs
jge
ljmp
adc
lods
inc
adc
incb
setle
frstor
jp
or
mov
adc
push
xor
push
pop
stc
mov
in
sub
adc
shl
mov
ss
cmp
int
into
xchg
pop
sub
dec
cmpsl
mov
or
inc
mov
push
and
cmp
mov
or
icebp
or
and
bound
movsl
jecxz
xchg
aas
mov
add
xchg
jb
or
mulb
and
and
imull
cmp
xchg
lods
insb
mov
cmc
pushf
inc
xchg
xor
xchg
dec
xchg
jne
loop
xchg
mulb
insl
jnp
rorb
sub
xchg
mov
lock
mov
dec
pop
ss
dec
fs
ljmp
subl
mov
and
repnz
aam
push
pop
mov
xor
movsb
aas
sbb
dec
and
jmp
mov
mov
mov
jnp
or
and
dec
popa
ret
lods
push
xor
test
pop
mov
dec
add
js
mov
jne
in
mov
cmp
stc
or
pop
mov
pop
out
xchg
loope
mov
ds
int
sarb
push
sbbl
pop
ret
xchg
inc
xchg
aas
outsb
push
pop
push
fs
loopne
jmp
ljmp
int3
rcll
cmp
mov
hlt
iret
ror
add
dec
shrl
cmp
mov
and
adc
pop
fwait
xchg
outsb
test
ficompl
jne
xor
push
pop
aam
out
fcmovu
clc
into
mov
push
lret
ret
subl
lret
push
adc
mov
out
fwait
in
ss
aam
or
scas
cmp
pop
inc
xor
in
xor
ficoms
std
in
ds
call
or
scas
xchg
push
cli
outsb
mov
dec
mov
cld
mov
mov
pop
je
dec
imul
loop
cmp
scas
lods
lcall
fcos
popf
sub
sub
or
sub
clc
ficomps
loope
js
or
and
mov
cld
pop
xchg
add
mov
lock
xchg
es
mov
adc
pop
sbb
test
sbb
xchg
lret
movsl
and
mov
mov
in
cmc
push
rcrb
fs
imulb
psraw
inc
lds
xor
sub
push
fldcw
fdivl
dec
je
cmp
in
push
and
add
test
push
jg
xor
movsl
sub
sarb
mov
inc
mov
insl
outsb
inc
aaa
mov
and
push
and
ss
mov
imul
dec
push
inc
inc
js
nop
cltd
xor
adc
pushl
and
or
push
rol
lret
sahf
mov
or
add
gs
inc
fisttpll
scas
sbb
imul
cmpb
aam
imull
mov
mov
lret
mov
daa
mov
in
jae
cmc
out
mov
test
mov
or
dec
filds
xlat
pop
mov
jl
mov
sbb
daa
cmc
push
out
push
arpl
filds
enter
cmp
dec
or
mov
jne
adc
imull
test
loop
out
fidivrs
mov
fdivs
mov
sbb
or
jns
pusha
pop
stc
xchg
ss
int3
addr16
loope
sahf
cmp
jecxz
jecxz
insb
add
icebp
leave
and
or
in
test
bound
cltd
rcll
sub
xor
inc
and
rcrb
cli
adc
sysexit
cmpsl
sub
sbb
xchg
cli
nop
addr16
ja
into
push
in
lahf
or
pop
lcall
sbb
mov
loop
insl
ds
dec
ret
push
cltd
sub
or
adc
lods
in
nop
pop
test
std
mov
push
push
sbb
loopne
xor
out
in
mov
sbb
jbe
add
mov
mov
sbb
cwtl
sbb
xor
mov
std
or
sahf
push
add
stc
ss
adc
jae
mov
mov
jno
cmp
test
int3
sub
pop
fcoml
or
div
mov
ljmp
insl
das
xchg
jmp
sbb
push
push
movsb
add
xchg
das
or
pop
daa
shlb
and
dec
stos
pop
rorl
les
sub
inc
sub
fcoms
adc
idivl
out
pop
inc
or
push
push
mov
cltd
xor
cwtl
gs
int3
incl
loop
scas
adc
scas
add
push
jns
sbb
and
lahf
sbb
pusha
pop
dec
loope
clc
and
fcomip
dec
fists
imul
or
dec
mov
push
mov
adc
mov
iret
int3
jb
push
adc
mov
adc
mov
push
in
adc
push
pusha
stc
cmp
pop
dec
sub
mov
sub
outsb
in
dec
stos
insb
mov
mov
lods
adc
and
push
xor
outsl
loop
xchg
js
mov
push
jnp
fimuls
fs
sub
inc
push
mov
xor
mov
cmp
test
sbbl
pop
dec
stos
mov
add
or
cmpsb
stos
fidivrs
ret
pop
and
jge
fstpt
nop
repz
int
pop
pop
and
jo
pop
mov
or
mov
and
scas
sarb
and
pop
jg
mov
fildl
out
xor
dec
and
test
pop
aad
aad
jg
sub
and
fwait
mov
fs
jmp
dec
loopne
fisttpll
push
dec
jle
cs
cli
rcll
push
out
mov
cs
call
shlb
jmp
xchg
popl
test
out
lea
xorb
aaa
add
dec
xchg
fadd
je
mov
test
cmpb
rclb
cmp
xor
mov
arpl
inc
mov
adcb
add
and
aad
cld
xor
sub
shr
jae
nop
jle
movsl
je
fsub
push
sbb
insb
pushf
jns
or
enter
mov
inc
xor
subb
jle
imul
mov
add
pop
sbbl
in
dec
jmp
xchg
push
and
test
cmp
arpl
outsl
cs
lahf
je
pop
test
movsb
sub
stos
inc
inc
inc
mov
cwtl
pop
cmp
pushf
js
mov
push
dec
test
cmp
fbstp
lahf
inc
sbb
sub
sbb
test
mov
test
sbb
ss
leave
pop
sub
cli
pop
push
les
push
pmaxsw
ja
imul
lock
adc
mov
and
xchg
push
and
cmp
popa
xchg
enter
xchg
hlt
lret
pusha
outsb
inc
test
pop
repz
or
lcall
inc
cmpsl
pop
movl
rcr
jp
xchg
nop
out
test
out
icebp
fsubrl
arpl
lret
ja
adc
repz
add
test
xchg
insl
int3
int3
fnsave
gs
ror
sub
pop
dec
sub
sub
adc
jbe
lods
sbbb
in
out
mov
push
push
adc
shlb
mov
add
aas
clc
shl
fwait
dec
add
dec
mov
bound
ror
jb
rol
xchg
scas
test
fwait
aad
lret
enter
loope
loope
iret
aaa
jae
cs
iret
testl
mov
movsb
outsb
add
fcoms
ret
and
jns
or
inc
and
sbb
idivl
imul
mov
enter
mov
out
cmp
jns
cmc
insb
add
lret
cmp
fldenv
mov
ret
push
lods
cwtl
mov
stc
fldl
clc
adc
dec
sub
xchg
jns
stos
sub
jp
icebp
adc
and
movsb
sbb
xor
push
mov
pop
gs
or
cmp
iret
mov
icebp
test
testl
sbb
jl
mov
jmp
aam
je
es
sub
dec
cmp
dec
ja
pop
lods
jle
adc
in
xchg
inc
jb
stos
adc
and
fcomip
outsb
out
imul
aam
repz
inc
pop
movsl
xor
add
push
roll
mov
outsb
sti
icebp
pop
cmp
out
cmp
add
jbe
out
xchg
sbb
repnz
cmpsb
push
sar
lret
hlt
or
push
xor
lret
lcall
mov
test
cwtl
mov
adc
fidivs
sbb
mov
aam
mov
dec
sub
loope
hlt
sahf
jp
leave
mov
adc
aas
pop
js
in
mov
and
out
orl
scas
shrb
out
adc
dec
clc
inc
in
daa
lret
jle
xchg
push
cltd
pushf
xchg
jnp
sbb
std
dec
movsl
lods
divl
or
out
cmpsl
jmp
je
negl
leave
add
jno
out
mov
push
rolb
loope
stc
or
xchg
or
rep
in
ffree
and
xlat
adc
ljmp
fisubl
out
or
sbb
mov
sbb
aaa
mov
adc
xor
jp
xchg
lret
or
mov
test
inc
fs
pop
and
sarb
out
stc
and
sub
mov
ds
iret
xchg
movsl
pop
xchg
and
out
push
test
das
fstpl
jne
outsl
stos
out
gs
cwtl
pop
sub
lock
adc
and
adc
and
pop
push
sbb
pusha
sarb
or
fsts
lahf
jecxz
cs
sbb
ja
and
loope
and
dec
dec
adc
mov
repz
lea
inc
push
mov
dec
aas
dec
cmp
pop
xor
nop
cmp
aas
or
xlat
xchg
fs
loope
dec
pop
sbb
sbb
enter
add
or
fwait
hlt
inc
lcall
sub
xor
ja
inc
xlat
inc
or
pop
enter
lret
or
adc
shll
jno
shrb
das
ret
pop
sar
jb
mov
and
inc
mov
push
adc
sar
and
cli
jmp
enter
push
cmp
mov
stc
repnz
les
lods
jb
outsl
stos
xor
push
out
mov
dec
push
jo
jg
sub
pusha
clc
addr16
loop
gs
xchg
push
add
jl
lods
repz
adc
ja
mov
fcompl
sbb
inc
outsb
insb
inc
adc
das
jmp
js
mov
push
inc
sub
repnz
xchg
or
fisubrl
test
mov
sarl
stos
ror
sarb
cmpsl
xchg
out
mov
js
jecxz,pn
lea
rol
ss
lds
es
push
or
xor
aas
push
sub
jmp
ficoml
into
fldt
adc
daa
mov
fnstenv
jg
mov
xor
rcrb
sbb
clc
dec
jae
repnz
cwtl
shlb
sub
add
stos
clc
sahf
cmp
inc
push
mov
inc
lds
enter
push
push
test
into
mov
mov
jge
int
ds
outsl
mov
outsb
pop
and
aas
test
jl
inc
inc
stc
mov
sbb
cmp
out
jp
add
mov
outsl
cltd
outsb
aas
inc
xor
mov
mov
adc
push
out
mov
es
ret
hlt
lock
and
sub
sbb
popa
lcall
push
iret
out
xchg
pop
mov
jge
push
xchg
mov
daa
add
mov
in
add
lret
pop
movsb
mov
ret
push
leave
mov
mov
cmp
pusha
xor
aas
inc
mov
xor
xor
push
add
xchg
add
dec
pop
mov
mov
jns
dec
out
push
pop
mov
sub
cld
aaa
jge
xor
lea
ror
popw
test
sarb
jmp
sbb
jo
mov
movsl
cmp
adc
in
pop
icebp
pop
jae
fmul
or
xor
cltd
xlat
and
sbb
xor
fcompl
jg
xchg
shl
cmpl
cmp
sub
xor
mov
add
sub
in
inc
mov
xor
sbb
cli
pop
aam
fcoms
push
dec
or
pop
enter
and
and
jns
xchg
iret
test
or
rorb
in
scas
call
pop
imul
jl
push
pop
icebp
mov
xor
jo
lock
xchg
and
lcall
or
outsl
cmp
not
aas
jne
inc
in
mov
xor
iret
mov
nop
out
lret
mov
iret
imul
mov
cmpsl
sub
mov
lea
call
mov
ljmp
mov
jns
xchg
xchg
mov
mov
outsb
fidivs
outsl
out
fsts
cltd
call
out
movsl
mov
pushf
rcrl
xchg
mov
loopne
or
lahf
nop
and
inc
sahf
and
add
sbb
or
pushf
out
rclb
stos
popf
pop
in
insl
mov
outsl
pop
xor
or
popf
inc
and
fisubrs
mov
mov
xchg
push
dec
and
rclb
cmpsl
ret
xchg
addr16
or
mov
adc
sbb
mov
test
push
into
sub
out
jbe
pop
push
fcoml
aad
pop
push
dec
stc
jle
outsl
jle
bound
xchg
dec
enter
stos
sahf
ljmp
fcoms
dec
les
sbb
lcall
dec
in
fwait
mov
inc
xchg
mov
movsl
scas
cmpsl
ficompl
dec
dec
mov
sbb
inc
loopne
adc
in
movl
in
mov
call
push
pop
inc
ret
in
jmp
test
inc
xchg
mov
mov
stc
stos
ljmp
pusha
lods
dec
jp
sbb
mov
mov
xchg
fstps
add
add
mov
scas
je
mov
inc
mov
jae
xchg
adc
push
cs
pop
decb
sub
and
inc
xor
data16
fcmove
pop
adc
dec
insb
add
lea
je
insb
mov
movsl
adc
xchg
in
lret
addl
test
push
std
popa
ljmp
daa
sub
loop
pop
cs
inc
dec
loopne
add
outsb
minps
pop
cmpsl
fmuls
data16
ret
shr
dec
scas
adc
sbb
ljmp
mov
or
cmpsl
sub
dec
aaa
fldenv
test
je
jmp
mov
imul
dec
loop
out
mov
cltd
sbb
inc
push
pop
cmp
dec
push
in
fists
bound
lea
mov
adc
pop
jmp
cmp
push
dec
jno
push
imul
adc
add
adc
in
xor
pop
mov
add
mov
cmc
ret
loopne
filds
fsubrs
ss
push
dec
iret
aad
cwtl
inc
rolb
adc
cld
jns
mov
dec
popf
dec
add
popf
cs
jmp
push
mov
adc
sub
jmp
xchg
movsb
stos
jl
or
fidivl
stos
lods
cmc
fdivs
fwait
dec
ret
xchg
sahf
cwtl
das
lret
sarb
in
push
inc
test
cltd
adc
imul
in
roll
add
dec
fiaddl
inc
mov
iret
inc
icebp
dec
jbe
pop
push
jp
mov
xor
mov
fstps
sbb
or
or
jecxz
mov
adc
cmp
lea
add
xor
fs
mov
repz
fwait
push
pop
add
add
xor
sti
mov
fwait
adc
mov
jns
hlt
adc
subl
and
adc
out
jnp
lds
lcall
les
sub
mov
mov
mov
ja
and
test
and
out
inc
mov
dec
jle
and
scas
sub
xchg
cld
popa
pushf
push
mov
stos
mov
push
mov
and
aaa
insl
aam
insb
xchg
and
stos
shlb
incb
call
insl
addr16
loop
mov
scas
add
push
or
pop
scas
in
sbb
xchg
jmp
scas
mov
je
xor
sbb
pop
incb
aas
fs
clc
lock
insb
dec
mov
mov
adc
cmpsl
fldcw
aad
arpl
adc
xchg
jp
jne
push
jo
or
inc
cmp
cmpsl
imul
test
sub
idivb
test
mov
ss
pusha
cmpl
ffree
fst
inc
out
ljmp
xchg
push
and
mov
stos
outsb
or
js
testl
stc
aaa
test
sub
push
ja
sbb
sbb
dec
or
sti
fsubrl
cmc
add
add
or
rorb
fstl
cmp
add
movsb
clc
mov
insl
in
mov
and
sub
icebp
mov
mov
pop
push
add
dec
insb
lods
mov
adc
mov
dec
inc
pop
popa
loop
adc
aad
inc
lcall
cmp
filds
sub
jl
xchg
ror
cld
pop
or
stos
and
mov
lret
hlt
push
xchg
xorb
cmp
sub
pop
dec
loopne
or
aaa
and
mov
aaa
leave
js
adcb
lret
das
mov
dec
insb
test
or
or
ds
push
mov
mov
jne
rcrl
xchg
cmp
movsl
nop
jge
in
cmpsb
loopne
popa
mov
jecxz
mov
pop
stos
dec
fnsave
int3
mov
ret
int
cltd
outsb
cmc
push
jo
mov
adcl
pop
pop
rcl
orl
fidivs
cmpsl
push
and
dec
sahf
imul
mov
mov
mov
xlat
mov
lret
sti
xchg
cmpsl
add
aaa
adc
mov
and
and
cmp
xchg
inc
jne
fwait
ss
or
fucomp
jg
push
inc
in
add
outsb
add
lret
inc
pop
dec
and
adc
jae
adc
imul
rcll
xchg
xor
outsl
mov
push
inc
hlt
xlat
push
pop
sub
sub
xor
insl
pop
bound
scas
dec
add
shlb
mov
ja
jno
push
pop
jb
mov
xchg
shr
ds
loop
ja
and
add
dec
push
shl
ficoms
lahf
push
adc
jg
add
pop
cs
mov
or
cwtl
les
daa
leave
testl
pop
cmp
lcall
movsb
jp,pt
jp
imul
mov
popf
call
scas
adc
xchg
popf
cmpsl
xor
push
je
inc
in
mov
test
shll
jmp
or
mov
or
mov
stos
adc
and
jl
dec
xchg
and
fistl
outsb
imul
mov
pop
rcpps
jne
xor
movsl
push
clc
add
mov
mov
xchg
xchg
and
aaa
mov
nop
mov
stos
xlat
xchg
xchg
inc
push
adc
stos
sahf
clc
and
xchg
push
xor
ja
pop
mov
gs
cmpsl
cmpsb
inc
add
jg
loope
std
adc
jno
adc
add
fmuls
jp
dec
mov
rol
repz
subb
sub
dec
aaa
loope
nop
push
push
rorl
aas
jge
mov
ljmp
aaa
inc
ficoms
jb
aam
addb
xor
popf
mulb
stc
jmp
leave
xor
out
lods
hlt
or
xchg
mov
inc
fadds
jecxz
inc
xchg
aam
jmp
sahf
inc
jmp
gs
and
cmp
or
ret
mov
divl
pop
sbb
xor
xor
movb
stc
push
addr16
lds
sbb
ficomps
pushf
dec
inc
outsb
mov
cwtl
jecxz
mov
jo
and
je
lds
xorl
or
call
jl
stc
aas
pop
out
mov
cmp
mov
cmpsl
cmovns
mov
js
je
aas
lcall
mov
dec
iret
jnp
mov
cmp
or
push
data16
and
pop
dec
sub
adc
loop
lcall
int
xor
enter
xor
loop
sti
xchg
ret
arpl
sbb
imul
mov
test
repnz
in
popf
or
push
jbe
dec
inc
stos
ret
inc
adc
cwtl
mov
in
out
popf
adc
je
sbb
ret
mov
xor
push
push
loopne
mov
cmpsb
add
push
outsl
jge
js
pop
inc
iret
mov
dec
xchg
mov
jnp
rorb
inc
arpl
mov
push
sub
iret
movsb
cmc
int
daa
cld
mov
push
adc
dec
adc
push
jae
lods
lods
jmp
fadd
les
les
xlat
push
push
mov
cli
mov
dec
jbe
jae
pop
add
mov
mov
bound
cli
mov
jmp
sahf
mov
push
loop
jbe
out
mov
mov
cmpsb
jl
shll
shr
xor
clc
adc
adc
mov
xchg
jmp
dec
fldenv
sarl
xor
mov
xchg
fists
mov
cli
sti
jnp
sub
inc
pop
add
push
test
pop
or
cli
mov
jmp
dec
mov
pop
in
hlt
mov
dec
sub
mov
xchg
xor
mov
push
pop
stos
cmpsb
ss
jo
fisubrs
clc
mov
add
fisttpl
mov
mov
adc
ret
or
or
lahf
dec
mov
push
xchg
ss
pop
pushf
sarl
aam
pop
mov
jb
loope
sub
cmp
lret
das
dec
sbb
lods
js
push
dec
cmp
push
xchg
sbb
inc
loope
and
movsl
or
loope
out
and
in
sub
and
icebp
insl
mov
arpl
outsl
in
add
jae
rorl
add
shrl
push
stc
popf
xchg
cmpsb
imul
xchg
lock
lods
decb
andl
xchg
xchg
ret
sub
outsb
mov
je
push
sub
test
lcall
mov
sub
in
xchg
mov
punpcklbw
xorb
fmulp
enter
out
test
bound
pop
test
shlb
lods
xchg
and
xchg
cmc
sub
lods
jl
cmp
pop
xchg
jmp
fiaddl
sti
or
add
test
dec
mov
cmpsb
xchg
mov
sub
dec
or
out
sbb
adc
jecxz
add
sbbl
xlat
push
stos
cmp
adc
jnp
fistps
push
sti
xchg
pop
fldenv
dec
jo
cmc
loop
in
push
pop
repnz
pop
aad
daa
or
loop
pop
adc
sub
mov
sub
outsb
jg
imul
xlat
dec
dec
in
sbb
mov
daa
sub
xchg
bound
cmp
mov
cmp
mov
ja
fimull
data16
pop
push
mov
mov
ret
inc
sub
jnp
push
enter
arpl
mov
sbb
pop
ja
insb
cmpsb
push
bound
xchg
mov
jle
inc
push
inc
sub
nop
lock
shrl
fnstcw
cmp
push
rorb
sub
fldt
jle
into
in
pop
jne
push
adc
push
cld
pushf
mov
cltd
mov
cmc
shlb
idivb
and
pop
std
mov
stc
cmc
jo
mov
movsl
xchg
in
sub
and
std
push
mov
mov
inc
mov
adc
cwtl
dec
push
jo
nop
test
and
sbb
xchg
cld
inc
scas
les
sbb
or
dec
mov
mov
add
and
or
nop
xchg
aam
ljmp
mov
push
jge
ud2
cmpsb
push
add
lds
mov
mov
mov
mov
mov
and
pop
ljmp
push
movl
and
mov
add
adc
pop
std
adc
mov
inc
enter
sar
adc
push
push
cld
mov
mov
ds
dec
pop
pop
inc
push
jp
call
cmpsl
fistpll
sub
fbstp
cmp
adc
fildl
jle
mov
outsb
xchg
icebp
or
push
and
xchg
movsl
ja
aam
movsl
mov
je
sbb
rorl
sub
sbbl
std
pop
and
js
push
inc
jle
cltd
js
mov
xchg
push
cmp
iret
in
lock
fdivrl
xor
les
add
mov
mov
in
add
fidivl
mov
mov
sahf
call
sbb
cli
jmp
icebp
inc
cltd
jl
xor
fiaddl
mov
fs
pushw
jns
jp,pt
scas
sbb
out
loopne
cmc
enter
jmp
cmc
jle
pusha
cli
sub
repnz
sub
insl
rcrl
mov
xor
inc
mov
imul
mov
out
cmc
add
pop
pop
or
push
sbb
jno
sahf
mov
scas
push
cmp
leave
pop
xor
cmp
pop
mov
jnp
mov
repz
pop
loop
shr
sbb
outsl
cltd
jnp
div
xchg
test
mov
jne
arpl
mov
repz
unpcklps
gs
adc
jbe
and
mov
adcb
pop
adc
push
repnz
decb
or
iret
imul
sub
mov
fisubs
sub
test
mov
inc
sbb
in
add
adc
rorb
mov
nop
movb
xchg
ja
fwait
mov
dec
pop
daa
outsl
scas
sbb
pop
mov
add
sbb
adc
popa
fstpt
adc
mov
sbb
push
inc
test
aam
push
test
and
arpl
inc
sub
add
out
dec
pop
data16
dec
jle
jo
sub
adc
dec
ds
and
pop
shlb
imul
mov
test
jbe
mov
loopne
out
jmp
jge
cmp
rclb
jg
cmp
test
adc
pop
aad
adc
pop
fisttps
jp
dec
jg
cmp
xchg
add
xchg
push
out
or
loopne
aas
add
jecxz
xchg
cmp
rcll
mov
mov
fwait
sahf
mov
addr16
sub
push
sahf
out
les
icebp
rorb
lahf
jo
pinsrw
mov
jae
les
gs
adc
imul
out
mov
add
stos
jmp
es
xchg
cmp
dec
inc
je
mov
cmc
call
or
cmp
lahf
mov
and
ror
js
and
clc
ds
subb
dec
cmpsb
add
cmp
and
xchg
pusha
ljmp
arpl
fdivrs
popf
addr16
sub
dec
and
fnsetpm(287
adc
outsl
push
cs
pop
pop
inc
sbb
sub
scas
fidivs
cmpsl
in
add
dec
sub
stos
inc
push
gs
fdivrs
mov
inc
pop
sub
pop
rol
stc
mov
jbe
sbb
xor
popf
addr16
and
ja
repz
cmp
sub
cmp
fwait
jmp
sbb
pushf
bswap
scas
jecxz
cs
cmp
mov
sbb
ret
push
movsb
stos
sahf
push
leave
or
jns
adc
popf
outsl
sub
sub
push
sub
cli
enter
push
mov
and
jle
ljmp
dec
bound
pop
mov
or
push
hlt
jae
jo
cli
sti
loop
mov
popa
std
mov
ljmp
repnz
pop
and
push
mov
xor
nop
lods
dec
sti
push
mov
xchg
inc
inc
lea
cmp
pop
imul
popa
sbb
mov
pop
push
test
jbe
push
add
movsb
cli
or
lcall
jnp
aas
pop
stc
outsl
lods
cs
mov
cli
inc
mov
mov
mov
outsb
daa
fbld
xchg
jo
mov
mov
fisubs
sub
xor
xor
inc
and
pop
cwtl
pop
popl
loope
cmp
jne
das
mov
movsl
push
xor
push
inc
dec
sbbl
pop
and
inc
mov
test
lods
cli
insl
lods
rcrl
add
fwait
leave
lea
ret
jl
sahf
hlt
jmp
adc
add
and
jge
dec
out
popa
outsb
fs
xchg
in
gs
mov
jo
icebp
int3
test
sub
incb
mov
push
je
cli
std
out
ds
push
or
gs
xor
addr16
sbb
aad
lret
mov
xchg
or
inc
add
dec
xor
imul
pop
adc
loop
mov
shll
mov
insb
push
jg
lcall
addr16
fbstp
movl
pusha
rcrl
xchg
mov
adc
xchg
dec
adc
or
or
aad
ss
lods
fsubr
adc
stos
nop
add
dec
jb
test
pop
lret
jp
decl
rcll
test
mov
into
stos
add
lcall
add
lret
rcl
inc
int
mov
mov
jbe
xchg
gs
mov
movsl
imul
sti
ds
fistpll
int
cmp
aam
xor
movsb
lods
lods
fistps
xchg
xchg
push
in
out
ljmp
cs
mov
pop
pusha
mov
push
xor
dec
in
mov
add
jbe
or
outsb
test
jecxz
sub
add
or
imul
fistps
xorl
cmpsl
or
inc
fidivrl
xchg
aaa
repnz
push
mov
das
stos
mov
xorb
xor
loope
stc
sahf
or
dec
xchg
and
cwtl
pop
mov
jge
cmp
and
mov
mov
sub
stos
mov
pop
cmp
cmpsb
pop
and
lret
pop
inc
test
adc
in
jns
xchg
and
in
inc
fistpl
cmpsb
dec
mov
js
dec
adc
mov
test
iret
clc
pop
push
das
push
cmp
jp
push
arpl
jns
iret
in
lret
sub
int3
push
gs
push
in
aad
imul
movsl
xor
stc
call
adc
jae
add
and
xchg
dec
fnsave
jbe
or
push
js
push
pop
push
cmp
pusha
sbb
nop
jns
mov
dec
mov
std
or
xor
and
cmp
sbb
pop
jg
data16
sti
cmp
pop
test
mov
iret
popf
sub
sub
sahf
test
push
xor
pop
and
pop
outsl
adc
iret
in
dec
xchg
pushf
pop
in
stc
xchg
add
arpl
cwtl
inc
add
into
push
prefetch
push
push
push
push
cld
push
pop
ja
hlt
mov
or
leave
or
enter
scas
pop
xchg
and
mov
ficoml
xor
sbb
repnz
pushf
sahf
outsw
aad
hlt
lods
mov
pushf
jae
pop
cmp
jne
mov
jge
ljmp
jmp
adc
lods
mov
mov
add
repnz
dec
mov
test
fs
adc
mov
mov
testb
sbb
or
inc
test
sahf
fwait
pop
jg
aas
sbb
js
imul
or
mov
pop
mov
dec
pop
sub
xor
push
rcll
and
rcr
fdivr
lret
lock
aad
fistpl
inc
gs
pop
mov
cmpsl
int
jecxz
pop
aam
test
rorl
stos
and
out
jbe
or
in
test
jge
dec
js
test
cmp
and
cmp
pop
xchg
mov
jnp
push
in
leave
sbb
insl
cld
stos
sbb
or
inc
pop
mov
shrl
push
arpl
xor
sbb
movsb
in
pushf
cmpsb
loopne
or
into
inc
in
subb
test
and
add
sub
and
out
loopne
jecxz
fwait
cld
push
xor
in
in
or
pop
jns
mov
insb
insl
and
scas
imul
jne
push
sti
rorb
into
jg
dec
push
xorb
xchg
adc
icebp
xchg
mov
fcmove
hlt
dec
sub
pop
pop
mov
inc
xchg
imul
push
pop
addr16
mov
int
or
out
adc
fsub
xchg
lods
leave
xchg
pop
sbb
not
cmpsl
jns
ficoml
scas
sub
pusha
fcomps
cmc
inc
push
std
sub
pop
dec
mov
mov
jb
jne
and
dec
cmp
or
cmp
mov
or
jp
decl
push
test
add
jnp
cld
inc
data16
or
add
leave
push
mov
or
movsl
and
insl
sub
mov
jl
cmpsl
fs
jl
mov
fs
jb
mov
jecxz
idivl
xchg
push
clc
inc
push
add
pop
mov
jg
outsb
adc
sti
fidivs
loope
xchg
push
mov
add
fists
shlb
xchg
jl
add
sub
cmp
cs
adc
mov
icebp
jle
pop
movsbl
pusha
push
lods
gs
jbe
mov
repz
lock
popl
push
in
loopne
cmp
cmp
idivl
inc
stc
adc
mov
rcrb
adc
mov
ret
test
adc
and
fidivl
negl
aad
jnp
jo
rcll
scas
push
lcall
sahf
and
jne
add
add
aas
mov
push
mov
dec
imul
inc
insl
push
jne
add
test
jle
ret
out
adc
dec
aam
jg
adc
sub
leave
outsb
jne
negb
jecxz
mov
je
jl
out
pop
sar
xchg
push
test
xor
mov
add
dec
lcall
add
or
sub
add
rolb
ja
adc
add
stos
add
sub
testb
loop
dec
and
push
mov
mov
jnp
mov
or
mov
testl
imul
push
aad
stc
cltd
mov
int
sbb
cli
es
jl
mov
out
sbb
xchg
adc
out
lret
mov
das
and
in
jmp
dec
add
lcall
dec
stc
aas
dec
adc
fildll
jnp
test
xchg
xor
jg
sbb
sysexit
imul
push
push
ja
test
mov
xorb
popf
jae
idivb
jns
ret
sahf
rolb
sbb
jmp
test
jl
dec
pop
rorl
mov
fs
mov
xchg
sub
push
push
push
push
arpl
cmp
mov
mov
adc
rorb
movsb
push
mov
leave
in
jnp
rcll
call
fcomps
ret
and
mov
idivl
xchg
sbb
cmp
dec
addb
movsl
scas
stos
pop
push
or
loop
mov
movsl
cmp
loopne
in
mov
dec
inc
shlb
popa
int3
pop
and
loopne
nop
fsubrl
mov
dec
push
cmp
mov
daa
mov
das
es
cltd
int
pop
pop
dec
add
test
sub
shll
bound
rcr
stos
imul
ficompl
fidivl
push
repz
aas
mov
push
aad
push
xchg
into
cmp
inc
cwtl
rolb
insb
mov
stos
xor
mov
fiadds
in
or
push
adc
pop
les
fmuls
loope
mov
repz
into
lret
std
lcall
mov
inc
mov
mov
jae,pn
jae
mov
push
push
test
jg
lock
lods
sub
add
xlat
nop
push
loop
test
fnstenv
push
fidivrl
imul
sub
lcall
adc
ret
rcrb
clc
ss
and
push
mov
popl
xchg
push
test
popf
dec
jecxz
mov
inc
std
adc
pop
adc
roll
mov
xor
pop
dec
or
aam
subb
sbb
scas
lret
push
and
jne
mov
lock
sbb
sarb
inc
inc
repz
push
inc
fisubl
daa
add
cmpsl
repnz
xchg
mov
inc
leave
lcall
mov
movsl
xchg
sahf
mov
adc
xchg
std
stc
xchg
cli
test
pop
sub
shrb
in
jne
in
mov
mov
xor
xor
shl
enter
mov
push
sbb
cli
loopne
sbb
ja
jecxz
jecxz
stc
cltd
scas
jp
xchg
ds
jle
shr
pop
push
inc
in
and
icebp
jo
out
rorb
and
addr16
mov
jo
jge
cmp
loopne
dec
stos
stos
aaa
sti
lea
movsb
out
xor
sahf
scas
xor
je
popa
cmp
jnp
jmp
mov
and
dec
leave
jno
pop
cmp
inc
xchg
mov
pop
shll
cmp
mov
mov
cmp
push
add
push
xlat
dec
push
gs
jb
bound
pop
sub
jmp
addr16
lahf
arpl
mov
push
push
incb
push
int
push
shl
xchg
addr16
cmp
push
push
pop
gs
cmp
enter
imul
cli
adc
jmp
movd
pushf
push
test
pop
xchg
lea
adc
pushf
mov
inc
or
rcll
sbb
push
mov
loop
hlt
mov
sub
push
xor
jae
cmpl
pusha
pop
test
lahf
roll
mov
movsl
add
cmp
mov
test
gs
push
xchg
nop
pop
rorl
add
mov
adc
mull
jp
ljmp
std
fistpl
pop
push
in
scas
sub
mov
decl
or
jle
add
xor
or
ret
cmp
scas
pop
add
and
arpl
or
pushf
loop
ret
mov
mov
lods
jmp
pop
mov
inc
jge
push
xor
cs
or
cld
sbb
repz
paddq
pop
ficomps
leave
in
lods
add
fwait
sub
adc
sub
aad
int
pushf
push
mov
jmp
ss
lret
push
mov
pop
imul
mov
or
cwtl
and
jge
psubb
mov
cmp
dec
jmp
repz
mov
cmp
test
idivb
sub
cmc
jno
fdivrs
push
add
aaa
mov
mov
mov
jnp
adc
arpl
adc
in
jecxz
sub
out
or
add
sub
xchg
and
inc
ret
mov
adc
and
mov
and
mov
pop
insl
cmp
mov
ljmp
xor
leave
aas
movsb
xchg
ficoml
shlb
cmp
cmp
mov
enter
dec
mov
mov
sbb
jbe
cmp
imul
xor
pop
stc
inc
fwait
dec
ja
jo
popf
stos
mov
ret
pop
sahf
stos
jl
sbb
sub
lahf
mov
xlat
push
icebp
gs
insb
test
int
fistpl
ss
pop
push
xor
test
inc
sub
xlat
mov
pop
xor
mov
sbb
sub
jb
out
and
push
cmp
push
insb
enter
jp
sbb
push
jb
mov
sub
inc
lret
stc
and
bnd
cli
fisttpll
inc
cmpsb
xor
push
inc
jb
rclb
fsubrl
out
dec
mov
xchg
hlt
fsubrp
mov
mov
pop
fidivrl
sarb
xchg
push
xor
fdivrs
and
xor
shlb
xor
or
or
adc
stos
inc
ret
mov
and
mov
adc
pop
push
xchg
pop
pop
fs
andb
ret
sbb
mov
jp,pt
or
mov
out
push
pop
adcl
paddw
push
sti
sbb
imul
pop
pop
sub
adc
jb
inc
hlt
sbb
pop
cmc
rolb
shlb
cmpl
adc
lods
es
dec
push
adc
fsubr
lret
popa
add
aas
or
adc
aaa
sub
leave
test
ljmp
lock
jne
in
dec
xchg
enter
int
xor
rorl
bound
xchg
push
pop
jno
lods
add
pop
xchg
mov
mov
js
jg,pn
add
and
jmp
adc
ficoms
dec
incl
push
fisttpl
jg
xlat
arpl
data16
pavgw
push
mov
inc
xchg
push
incb
scas
repz
pop
mov
sbb
adc
fisttpl
movsl
sub
jbe
add
jnp
add
inc
inc
push
pushf
or
es
test
pusha
js
and
mov
inc
mov
or
gs
or
jmp
push
lods
mov
lcall
fldcw
aaa
mov
fstps
stos
cmp
decl
shrb
inc
adc
mov
dec
ret
jnp
jmp
flds
in
or
or
out
insl
and
push
mov
ds
jne
cmc
inc
xchg
push
scas
divl
xorb
test
ret
fsubp
push
dec
jbe
idiv
add
sub
inc
push
mov
jae
imul
shlb
or
repnz
or
arpl
movsl
cmc
push
dec
test
mov
clc
and
in
icebp
stc
icebp
jne
cmp
cmpsb
and
jbe
mov
jl
cltd
sbb
push
cmc
jae
xchg
dec
adc
mov
mov
mov
pop
out
pop
int
jmp
movsb
inc
inc
adc
aam
rol
nop
enter
mov
fiaddl
sbb
xchg
add
push
fnstsw
aad
sub
js
jle
inc
scas
movmskps
jge
jp
adc
mov
sub
loopne
out
or
es
rorl
daa
icebp
adc
std
arpl
lods
mov
mov
jg
aad
movsl
in
loopne
mov
bound
mov
iret
js
paddd
inc
lret
int3
jae
add
add
jmp
add
and
cmp
mov
mov
ss
push
mov
push
lods
shrd
jns
movsb
or
pop
add
mov
in
xchg
dec
push
inc
sub
fisubs
cmp
outsb
mov
jge
sub
xchg
inc
and
fdivl
pop
cmpsl
stos
sbb
test
into
inc
call
jno
je
orb
pop
aas
test
cmpsl
outsb
int3
push
aaa
xchg
aam
adc
fidivl
and
inc
dec
mov
xor
mov
ja
cltd
aas
call
hlt
cmp
add
out
pop
das
out
sbb
mov
pop
lds
add
push
push
cmp
push
jns
pop
pop
adcl
add
xor
mov
out
push
adcb
xlat
mov
into
adc
or
in
std
call
jl
add
ss
pop
sbb
imul
test
es
cmp
stc
mov
push
loope
jl
jmp
xchg
ret
shufps
nop
js
adc
jne
lret
fs
sub
jecxz
in
aad
adc
out
pop
cmpsl
jmp
mov
fcmovu
clc
mov
aaa
jb
cmp
jle
dec
fildl
gs
mov
cmp
scas
sub
popf
xchg
mov
pop
jp,pn
sbb
and
ficompl
sbb
mov
in
add
push
push
adc
cmp
rorb
mov
mov
loopne
mov
cmc
je
or
out
push
imul
loop
and
jle
out
or
es
lock
stos
mov
ds
rorl
cltd
fld
push
sub
add
push
add
inc
test
push
clc
mov
push
push
ljmp
mov
loope
lods
inc
sbbb
cmc
into
lret
push
pop
pushf
dec
ds
jno
call
jb
inc
jb
out
mov
dec
xor
xlat
xchg
arpl
push
and
fcoml
dec
cmpsb
fs
push
iret
mov
mov
and
idiv
cmc
cmpsl
jmp
push
gs
add
test
pop
inc
jbe
adc
or
sti
sahf
mov
adc
push
icebp
xchg
sub
aam
loope
outsl
in
ljmp
iret
setge
adc
cmp
roll
sub
fisttpll
ds
jge
cmp
xchg
hlt
pop
jmp
add
iret
xchg
je
cmc
scas
add
or
lea
loopne
pop
push
mov
inc
mov
fcomp
mov
lret
movsl
xchg
loop
loop
pusha
std
test
cwtl
pop
mov
mov
and
data16
adc
fisubrl
scas
jg
ficoms
outsb
fwait
or
pop
and
scas
push
popa
sub
inc
mov
aad
push
push
es
out
data16
mov
js
scas
int
adc
cwtl
sub
mov
lret
push
fcomp
xor
gs
ljmp
xchg
add
cmc
lock
jge
js
scas
pop
mov
int3
rcl
jae
add
xor
pop
popf
into
inc
xor
int
mov
in
pop
mov
in
insb
or
es
jae
shlb
nop
in
dec
add
cmp
je
aaa
cmp
insb
xlat
mov
setns
lret
ficoms
enter
mov
mov
out
aaa
leave
mov
clc
pop
rclb
fildll
loop
orl
loope
std
push
sub
cmc
rcrl
sbb
and
jmp
jno
cli
mov
dec
adcb
les
mov
xor
out
cmc
mov
and
cmp
imul
xor
mov
cmp
mov
hlt
mov
cmp
vmulpd
enter
cmp
mov
inc
aad
aaa
test
mov
mov
inc
ds
mov
lock
mov
stc
fucomp
mov
gs
jae
sbb
aam
cltd
cmc
sti
gs
push
movsb
stos
and
dec
xchg
fmuls
jg
pusha
inc
or
aad
cmp
in
pop
call
ds
pop
test
loop
pop
pop
or
jp
mov
mov
mov
or
xor
sahf
xor
jg
mov
jmp
les
movsb
mov
push
lea
cmp
xlat
cli
roll
push
dec
movl
out
hlt
jecxz
mov
dec
and
xchg
pop
movsl
lds
inc
sub
and
xlat
outsb
popf
add
mov
jl
in
sub
clc
xchg
jecxz
xchg
jbe
in
jle
push
or
inc
jbe
sbb
mov
pop
repz
inc
mov
fcomi
addr16
mov
xchg
pop
rcrb
sbb
mov
pop
filds
mov
lods
lea
imul
mov
mov
das
mov
