jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
pop
or
and
mov
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
inc
xor
and
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
or
add
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
outsb
sbb
clc
mov
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
sbb
add
addb
adc
add
add
push
add
xchg
add
add
inc
add
mov
add
or
add
add
push
add
add
push
add
mov
add
add
add
add
add
add
or
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
stc
adc
pop
jo
pop
je
pop
js
pop
jl
sahf
addb
add
sub
popf
adc
push
inc
add
inc
inc
dec
add
add
push
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
aas
or
adc
lds
pop
or
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
wbinvd
inc
add
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
rcrb
inc
add
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
adc
and
mov
cmp
je
jmp
push
mov
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
test
add
je
mov
in
inc
add
call
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
adc
inc
add
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
inc
pop
inc
add
lea
mov
sub
lea
pop
or
pop
and
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
fisubs
inc
add
add
mov
mov
push
push
call
test
js
lea
lea
sbb
inc
add
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
or
inc
add
xlat
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
cs
add
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
xor
call
pop
lea
cmp
adc
call
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
add
lds
test
decl
or
adc
lock
incl
dec
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
add
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
add
jno
adc
add
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
add
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
insl
push
or
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
fstpl
fldl
fstpl
fldl
pusha
push
call
mov
add
pop
test
cmpsb
pop
pop
add
lret
js
xchg
add
addl
mov
iret
ljmp
push
add
add
mov
add
sahf
nop
push
test
add
push
mov
add
push
push
push
push
push
push
lea
push
push
push
call
add
repnz
push
jns
pop
jge
add
mov
out
mov
mov
mov
add
cld
add
cmpsb
lret
movsb
add
push
add
add
lret
jecxz
jle
in
loopne
lcall
inc
in
push
push
call
jmp
add
sahf
add
mov
add
add
add
f2xm1
mov
add
aam
add
mov
push
xchg
add
push
jns
aad
jb
movsb
jno
xlat
cmp
cli
les
insb
add
rcl
enter
sub
pop
push
push
push
push
push
push
push
push
push
call
add
js
mov
add
ja
pop
add
cld
add
fnstsw
stos
fdivr
movsl
add
push
add
mov
jecxz
pop
add
push
push
lea
push
push
push
push
push
call
add
faddl
nop
out
mov
lods
ret
stos
add
roll
jle
push
add
not
xchg
stc
pop
mov
shl
mov
add
add
pop
add
cmpsb
roll
data16
jno
mov
pusha
mov
adc
add
sub
pop
push
push
push
lea
push
call
lahf
xchg
jmp
out
add
add
nop
hlt
mov
loopne
scas
incb
imul
add
add
jns
add
add
lret
add
jns
add
add
add
fs
add
fcoml
out
flds
add
add
sahf
loope
sub
pop
push
push
push
push
push
push
call
lods
add
add
mov
add
add
push
sahf
mov
mov
add
mov
outsl
add
mov
jmp
test
mov
add
sub
pop
call
push
lea
push
lea
push
push
push
push
push
push
call
add
iret
lds
pushf
add
xchg
imul
pop
addb
mov
add
xchg
out
add
movb
add
cwtl
cli
mov
xchg
push
enter
hlt
mov
aam
sub
pop
call
push
push
push
push
call
add
add
add
lahf
incb
mov
aad
add
fsubrs
sahf
add
jl
iret
jge
movl
add
add
push
lea
lahf
sub
pop
call
jmp
push
push
push
lea
push
lea
push
lea
push
call
add
js
test
add
jo
push
jmp
imul
addr16
add
mov
add
add
xchg
add
jae
mov
add
fildl
sub
pop
ret
push
push
push
lea
push
push
push
call
add
add
add
add
nop
in
hlt
fwait
popl
mov
add
sti
add
add
addb
neg
add
inc
hlt
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
loop
add
add
mov
fldl
push
in
push
int
add
in
add
xlat
add
push
add
scas
out
add
add
add
mov
jbe
xchg
mov
imul
sub
pop
mov
add
push
push
push
lea
push
push
push
push
push
call
mov
into
xchg
add
out
lods
fs
add
add
add
lods
mov
gs
call
add
xchg
push
add
xchg
mov
add
sub
pop
add
add
push
lea
push
push
lea
push
push
call
je
movsl
add
fucompp
add
push
xchg
add
add
mov
jb
add
push
jns
add
mov
cmpsl
xchg
add
mov
lcall
pop
add
test
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
outsl
add
xchg
rcrl
movsl
add
add
add
scas
add
pop
add
add
nop
mov
mov
pop
cmpsb
add
add
push
add
add
add
add
sub
pop
xor
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
lods
xchg
xchg
in
push
add
in
add
lds
icebp
fisubrs
les
add
lcall
add
xchg
mov
cmpsb
in
add
add
jb
add
mov
add
lods
add
add
add
pop
into
push
mov
jecxz
add
add
mov
les
add
push
push
shl
push
xor
add
add
sub
pop
add
pop
push
push
call
mov
push
jbe
add
mov
out
mov
mov
xchg
popa
push
push
test
add
add
add
jo
push
sti
add
add
add
mov
mov
icebp
sub
pop
pushl
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
call
pusha
std
lcall
add
les
xchg
xchg
push
xlat
jns
in
add
add
jge
xchg
add
movsb
addb
ljmp
add
add
jmp
add
leave
arpl
add
mov
cmpsb
jl
add
je
add
loopne
call
push
push
push
call
int
stos
add
fiaddl
add
add
cmc
add
add
push
jb
add
add
lea
add
mov
push
mov
fisubs
add
mov
add
pop
add
out
imul
inc
lock
push
push
push
push
lea
push
lea
push
push
push
call
add
mov
add
add
mov
sahf
add
mov
add
mov
gs
shll
add
fcompl
inc
call
push
push
push
push
push
lea
push
push
lea
push
push
call
add
loope
add
rorl
out
movsl
out
stos
pushf
add
mov
stos
stos
cld
popl
mov
mov
mov
add
jno
add
jne
not
out
jns
mov
add
inc
call
pushl
push
push
push
push
lea
push
push
push
call
add
mov
add
pusha
in
push
push
add
add
add
add
cld
gs
lea
mov
add
add
clc
rolb
mov
fcomps
add
iret
add
add
mov
add
out
pop
add
add
push
lea
push
push
lea
push
push
push
call
add
sti
mov
divb
jno
int
mov
hlt
mov
mov
add
add
call
pushl
pushl
push
push
push
push
push
call
add
jne
mov
lahf
add
mov
imul
add
iret
add
add
push
loope
mov
addr16
add
rolb
cmpsb
mov
add
jp
xchg
lea
stos
enter
lods
add
add
jl
fsubrp
add
adc
les
sub
pop
call
push
push
push
push
push
push
push
push
call
add
mov
add
mov
add
add
sahf
stos
add
stc
add
scas
add
xchg
mov
jecxz
negl
add
test
cmpsb
add
add
js
imul
jmp
lret
pop
add
outsl
add
fadds
sti
pushf
iret
add
add
fstl
rolb
lcall
jne
pushl
push
lea
push
lea
push
push
lea
push
call
add
add
mov
pop
js
add
lahf
add
push
push
add
jmp
sub
pop
call
push
push
lea
push
or
inc
add
inc
ror
lea
sub
pop
sub
not
pop
push
push
call
add
movsb
test
mov
add
rorb
add
add
add
mov
add
xchg
jmp
add
sub
pop
pushl
push
push
push
lea
push
push
push
call
add
add
jp
add
push
add
add
add
add
fiadds
add
add
lcall
icebp
jb
icebp
cltd
mov
pop
fsubs
mov
into
ljmp
pop
mov
jne
add
add
mov
mov
sub
pop
call
push
lea
push
lea
push
call
add
add
ret
push
add
add
add
jbe
xlat
not
add
data16
add
out
cld
add
mov
jbe
push
xchg
loope
insb
add
mov
add
lcall
inc
push
push
push
and
add
not
dec
sub
shl
pop
dec
shr
pop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
cmc
add
push
add
xlat
xchg
xchg
int3
fcomp
add
scas
pushf
jmp
mov
xchg
cmc
add
add
mov
add
add
pop
mov
add
add
add
xlat
add
mov
add
add
add
js
jnp
add
in
fiadds
add
repnz
pusha
iret
cmc
popa
sub
pop
push
push
push
push
push
push
call
in
add
add
lret
add
mov
jbe
cwtl
add
stc
scas
mov
fistl
fs
xchg
roll
add
add
add
test
add
stos
mov
xchg
add
add
add
add
add
lcall
add
push
push
push
lea
push
push
push
call
add
mov
add
imul
int
add
rcrl
loope
add
lcall
add
push
add
jnp
add
add
add
fdivrs
ret
xchg
jno
add
stc
add
add
in
in
xacquire
add
add
lcall
rclb
aam
dec
add
add
add
in
push
add
jb
add
movsl
add
gs
test
out
rolb
add
push
add
add
add
add
loop
jle
xlat
add
movl
je
stos
mov
add
adc
xchg
mov
clc
lcall
clc
push
push
lea
push
lea
push
call
scas
add
pop
pop
add
add
add
std
xlat
add
add
add
add
lock
add
xchg
movsl
add
sub
pop
push
push
push
call
lret
add
xchg
mov
bound
add
cmpsl
xchg
add
push
aam
xchg
mov
add
pop
add
scas
test
lahf
add
pop
xchg
add
add
clc
jl
sarb
add
push
add
add
add
push
lret
sub
pop
push
push
push
push
push
push
push
push
call
cli
add
add
movsl
add
mov
add
xchg
add
ljmp
test
pop
xchg
aam
sub
pop
mov
add
push
push
push
push
call
out
jns
gs
mov
lods
mov
aam
fxch
shlb
jae
out
mov
push
stc
add
data16
pop
add
push
in
mov
add
pop
push
scas
movb
mov
add
lret
hlt
mov
cmpsl
les
mov
int3
add
sub
pop
add
push
push
push
push
push
lea
push
push
call
outsl
add
add
pop
push
mov
mov
outsl
add
lahf
add
imul
mov
add
add
add
jne
shr
loopne
push
xchg
add
mov
jecxz
pop
xchg
popa
add
add
ja
mov
rolb
mov
movb
filds
add
add
pop
add
lcall
ret
push
pusha
add
push
push
lea
push
push
push
push
push
push
push
call
push
bound
shl
int
add
mov
xchg
add
add
cli
out
add
mov
mov
add
add
mov
popf
push
insb
mov
cwtl
add
cltd
mov
add
loopne
add
fsubl
add
add
lcall
xor
pop
jae
push
push
lea
push
push
push
push
push
push
push
push
call
test
push
out
add
shl
add
stos
add
cmpsb
imul
hlt
add
add
popf
fildl
imul
jbe
add
xchg
out
sub
pop
xor
push
push
push
call
andl
fsubs
add
add
aad
fisubs
loopne
clc
add
cmc
mov
lock
xchg
stc
jae
mov
mov
push
clc
add
jl
filds
stos
add
in
add
sahf
ljmp
hlt
lcall
les
add
push
push
lea
push
push
push
call
pop
gs
leave
push
mov
pop
out
lea
add
add
xchg
jno
mov
add
add
jmp
jmp
mov
testb
aad
fsubrl
out
add
add
add
add
add
stos
add
sub
pop
add
push
push
push
lea
push
call
add
aam
ja
add
add
mov
in
jp
pop
add
add
push
pop
pop
test
add
push
add
jbe
add
movsl
add
lds
mov
mov
testb
jbe
in
lock
lcall
mov
xor
push
push
lea
push
push
push
push
call
add
mov
stos
add
jmp
add
call
pop
testb
add
add
add
mov
add
outsl
jbe
mov
xchg
add
add
xchg
mov
in
call
push
call
mov
mov
add
add
jns
into
mov
push
add
scas
imul
add
lcall
push
lea
push
lea
push
call
add
add
testl
add
fadds
add
adcb
add
add
jecxz
jbe
jbe
sub
add
mov
jmp
fstps
mov
mov
add
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
push
call
add
cltd
sahf
xchg
add
lret
mov
mov
mov
add
jo
mov
add
jp
add
xchg
add
lret
icebp
add
int
add
add
cwtl
out
in
fists
fdivr
lcall
or
push
push
push
push
lea
push
lea
push
push
push
call
xchg
mov
ljmp
outsl
add
pop
add
jne
pop
out
add
cmpsb
xchg
add
rclb
out
add
sahf
mov
aam
cld
add
add
add
fs
add
pop
add
lcall
mov
aam
fstl
mov
test
les
push
call
popl
roll
enter
call
subb
add
int3
xlat
add
push
add
out
iret
in
jbe
filds
push
push
add
add
rcrb
add
jbe
add
mov
add
add
clc
pop
push
mov
xor
push
lea
push
push
lea
push
lea
push
lea
push
call
addl
mov
loope
lods
jnp
jnp
imul
clc
test
jns
push
lahf
shll
add
add
rolb
mov
or
test
pusha
add
add
in
shl
jp
in
call
sub
pop
pop
push
push
lea
push
lea
push
push
call
add
lea
add
push
add
add
int
fnstcw
add
mov
loope
add
mov
xchg
arpl
pop
loopne
lods
roll
fildl
stc
add
leave
mov
rolb
rol
add
mov
add
in
pop
rep
push
push
call
test
add
add
add
add
test
add
roll
add
jno
add
in
cltd
call
cmpsl
lret
callw
pop
out
add
sub
pop
pop
mov
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
xchg
add
iret
out
mov
mov
add
add
icebp
jecxz
xchg
repnz
aam
fistpll
cmpsb
mov
add
pop
movsb
add
in
shlb
arpl
mov
in
add
jp
stos
add
rol
imul
xchg
add
mov
out
add
pop
add
push
push
push
lea
push
push
push
lea
push
call
pop
mov
add
subl
arpl
add
add
in
jp
testb
fiadds
add
add
push
push
addr16
rolb
push
add
jl
add
shr
sahf
mov
scas
jns
push
or
cli
sub
pop
add
add
push
sub
add
ror
pop
mov
push
push
lea
push
lea
push
push
push
push
push
push
call
jno
add
add
data16
mov
test
add
in
add
add
add
add
add
push
fisttpl
mov
add
lcall
add
push
push
push
lea
push
call
jnp
mov
add
lahf
ja
imul
add
lret
push
push
mov
jbe
mov
add
aad
out
mov
push
push
lcall
xchg
outsl
repnz
add
lahf
add
add
xchg
add
lock
lcall
les
rol
pop
mov
push
push
push
call
xchg
add
add
add
ficomps
cmc
aad
push
add
loop
bound
add
rclb
jmp
rolb
lods
out
int3
add
out
add
add
pop
add
out
mov
scas
add
loopne
xchg
pop
add
add
add
add
addl
lods
add
pop
xor
push
push
call
add
add
sar
out
xchg
js
add
les
filds
imul
cld
mov
cmc
jp
popa
repnz
lcall
add
add
add
add
jecxz
std
xchg
lock
test
lcall
les
push
push
push
push
lea
push
call
jge
push
test
sti
add
add
iret
add
add
out
jmp
mov
add
push
xchg
jmp
jb
iret
rolb
add
add
outsl
out
add
jmp
mov
call
mov
push
push
lea
push
lea
push
push
lea
push
call
add
jge
mov
add
jns
pop
stos
add
add
add
add
pop
imul
jns
leave
mov
icebp
test
gs
cltd
aad
fsubrl
add
add
add
add
loop
jnp
rolb
add
clc
mov
jge
fildl
sub
pop
xor
push
push
lea
push
push
call
mov
mov
out
jns
out
or
add
jnp
mov
leave
test
lret
add
push
cltd
add
add
insb
add
jno
jo
rcrl
xchg
mov
add
add
lahf
mov
in
lock
lcall
les
shl
sub
shr
ror
pop
add
push
sub
shr
pop
add
push
sub
pop
mov
push
push
shl
not
push
xor
add
add
sub
rol
shl
xor
pop
lea
sub
dec
pop
push
push
push
lea
push
lea
push
push
push
push
call
pop
cli
aad
ret
add
add
push
fadd
add
add
add
lahf
add
loopne
add
div
testb
movb
add
lock
fadds
jae
add
in
add
push
add
xchg
xchg
add
movsb
mov
add
jne
call
push
push
push
push
push
lea
push
push
push
push
call
add
add
xchg
pusha
les
push
mov
pop
cli
add
hlt
add
xchg
fiaddl
add
lret
pop
push
add
aam
add
in
add
pop
mov
mov
add
add
add
add
popa
lds
add
add
fdiv
add
sub
pop
push
push
push
not
ror
sub
push
push
pop
add
add
sub
sub
sub
sub
pop
lea
shl
sub
pop
push
dec
pop
push
push
lea
push
push
lea
push
push
push
call
pop
add
jbe
add
insb
add
add
ja
cltd
add
insb
add
fildl
fcmovu
jo
subl
leave
rclb
call
push
push
push
push
push
push
call
fcomp
int3
mov
filds
outsl
add
ficoml
imul
ja
mov
add
pop
add
mov
add
xchg
add
add
out
pop
sub
pop
call
push
push
lea
push
lea
push
call
adcb
mov
gs
ror
outsl
out
add
add
push
mov
fadd
add
mov
out
add
add
xchg
pop
add
add
add
add
mov
sub
pop
mov
push
push
call
mov
mov
add
add
test
add
add
pushf
jae
scas
lret
push
add
add
add
add
add
add
jge
clc
add
add
xchg
add
add
pusha
mov
stos
pop
rclb
hlt
add
aad
in
clc
pop
push
push
shr
add
xor
xor
pop
push
push
push
push
push
lea
push
push
push
call
sahf
mov
add
pop
test
stos
add
lock
add
add
out
addr16
mov
add
add
xlat
xchg
test
add
xchg
xchg
div
roll
cmpsb
fldl
mov
in
in
lcall
pop
hlt
push
lea
pop
add
push
lea
push
push
push
push
push
lea
push
push
call
addl
loope
push
add
mov
add
add
out
stc
mov
add
add
out
push
mov
test
add
outsl
add
add
in
js
pusha
int
push
lcall
sub
pop
add
add
push
add
pop
mov
push
push
push
push
push
lea
push
call
jo
ljmp
mov
add
fildl
add
mov
xchg
add
out
jb
mov
add
addb
add
add
mov
xchg
leave
loopne
add
mov
shr
in
in
lcall
xor
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
mov
sahf
add
add
fwait
stos
mov
add
add
add
pop
add
gs
mov
add
add
jbe
lahf
lahf
mov
sub
pop
add
push
push
push
push
push
lea
push
call
add
add
fcomp
in
add
jbe
pop
add
clc
add
add
add
mov
mov
mov
loopne
pop
add
add
jle
cmpsb
popf
add
stos
add
add
add
lcall
jne
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
int3
mov
add
insb
add
pop
mov
add
add
add
jns
hlt
frndint
mov
add
into
add
js
sub
pop
mov
xor
push
push
call
test
push
add
out
mov
push
incb
adcb
sarl
pushf
sarb
add
call
pop
out
data16
lods
add
push
fildl
pop
pop
lea
and
jp
add
push
mov
add
mov
jle
add
add
loope
leave
nop
sti
popf
add
lcall
lock
sub
ror
pop
pop
push
ror
pop
mov
push
push
push
push
lea
push
push
call
in
bound
add
pushf
mov
roll
add
in
mov
add
add
flds
pop
add
into
faddl
add
jle
add
xchg
xchg
add
add
fstpl
add
add
mov
mov
cld
add
fstpt
in
pop
xor
push
push
push
lea
push
push
lea
push
call
stos
add
js
add
mov
pop
add
add
push
cli
fiaddl
test
jecxz
out
arpl
out
xchg
in
add
mov
in
call
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
add
ret
aam
push
sahf
add
add
mov
mov
mov
add
jp
lock
cld
add
jns
add
cmc
xchg
rolb
fs
imul
movsl
incb
pop
roll
lcall
movsb
push
xor
rol
pop
mov
push
push
lea
push
call
bound
add
add
into
add
enter
enter
add
mov
push
mov
add
add
mov
movl
xor
push
push
push
push
lea
push
lea
push
push
push
push
push
call
loop
clc
cltd
out
call
mov
add
push
test
test
movsb
push
jb
add
jns
cmc
lds
jmp
mov
add
add
add
pop
add
out
add
mov
push
add
pop
mov
add
add
loop
jmp
in
fdivr
lcall
les
dec
shl
pop
or
je
mov
push
push
lea
push
lea
push
push
push
call
add
mov
add
lods
add
add
lods
add
lds
neg
mov
add
pop
add
mov
add
mov
pop
xchg
iret
in
jge
bound
push
mov
add
sub
pop
xor
push
push
push
push
push
push
lea
push
lea
push
call
jno
jno
xchg
fadds
jmp
movsb
jp
lock
mov
pop
add
jp
add
je
add
ljmp
insb
jns
jnp
add
ja
push
mov
mov
sub
pop
add
push
push
call
add
mov
rcll
stc
add
aam
jp
cmpsb
push
aad
jp
xchg
movb
pop
jmp
in
clc
pop
mov
xor
push
push
push
push
push
call
stos
add
clc
add
xchg
jo
jge
mov
cwtl
add
add
add
add
out
scas
add
add
push
leave
add
out
mov
mov
sti
add
xorl
scas
add
stos
add
mov
fmull
lcall
repnz
push
push
push
push
push
call
add
fnstenv
mov
add
mov
in
xchg
popa
enter
int
add
add
add
clc
add
lret
add
add
mov
push
add
add
add
incb
add
imul
add
stos
push
into
movl
add
pop
add
pop
add
lods
pop
flds
not
insb
fadds
lcall
push
lea
push
push
lea
push
push
call
jb
add
mov
add
add
lods
xchg
add
add
add
aam
ficompl
rcll
add
arpl
mov
imul
mov
js
add
add
in
in
pop
mov
xor
push
push
push
push
push
push
call
xchg
xchg
add
add
add
pop
jno
add
add
andl
faddl
add
in
add
imul
mov
popf
mov
add
add
int3
push
mov
xchg
mov
fcoms
cmpsb
frstor
sub
pop
add
pop
push
lea
push
push
lea
push
lea
push
push
call
add
add
xchg
xchg
roll
cmpsb
add
int3
je
add
add
lds
out
sub
pop
rep
push
xor
lea
rol
pop
mov
push
push
lea
push
push
push
call
add
mov
add
add
mov
add
scas
xchg
add
add
fiadds
add
in
lock
lcall
or
push
push
push
lea
push
push
lea
push
push
push
push
call
je
add
fidivs
add
roll
cmpsb
int
mov
mov
add
jmp
pop
add
push
leave
add
add
push
add
add
scas
testb
popl
add
std
gs
jno
add
push
shlb
pop
add
sub
pop
add
push
push
push
push
push
push
push
push
lea
push
push
call
repnz
fcmovne
fs
flds
mov
add
insb
jl
add
test
jnp
mov
mov
push
add
test
xchg
add
jne
add
ljmp
add
mov
int3
jp
sub
pop
or
je
push
not
pop
mov
push
pop
add
push
push
push
push
call
arpl
add
mov
movb
clc
les
add
mov
jle
scas
arpl
mov
mov
add
xchg
testl
mov
push
add
add
out
test
add
add
add
add
pusha
add
add
lcall
movb
add
push
sub
pop
rep
push
lea
push
push
push
push
call
add
add
lds
stos
mov
xchg
stc
jge
leave
add
add
add
ljmp
mov
test
sub
pop
pop
push
push
dec
push
or
not
add
dec
sub
shl
shr
sub
lea
inc
inc
pop
add
shl
inc
sub
pop
push
push
push
lea
push
lea
push
push
call
mov
cld
add
add
rolb
add
add
add
lock
add
lret
js
add
add
call
lock
push
lea
push
call
mov
outsl
pop
add
add
push
add
jp
xlat
movsb
add
mov
testb
aam
add
loop
hlt
pop
arpl
add
fs
pop
mov
push
sub
lea
pop
mov
push
not
add
pop
jmp
push
push
push
push
lea
push
push
push
push
call
fildl
mov
add
addr16
add
add
push
add
iret
mov
loop
lahf
out
mov
add
add
iret
ljmp
in
push
lea
push
push
push
call
add
push
jnp
test
mov
hlt
mov
dec
addr16
add
add
sti
add
fcoml
out
loop
push
push
add
lcall
cld
push
push
push
push
push
push
lea
push
push
push
push
call
stos
jle
out
andl
xchg
adc
pop
add
add
push
sbbl
jns
add
add
xchg
jno
out
jnp
test
rolb
add
jns
mov
pop
add
add
in
fdivr
lcall
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
pusha
mov
add
int
add
out
add
add
add
add
sti
incb
lcall
push
not
pop
push
mov
push
push
lea
push
push
push
push
lea
push
push
push
call
xchg
pop
data16
jbe
lahf
jnp
scas
push
cwtl
add
add
and
add
test
add
xchg
add
clc
outsl
add
enter
mov
fdivr
lcall
push
push
push
call
movsb
insb
push
add
add
add
add
mov
je
test
pop
mov
je
add
pop
add
hlt
int
add
out
faddl
cwtl
shr
cli
add
mov
xchg
add
lcall
push
inc
pop
pop
pop
push
add
shr
pop
leave
push
rol
dec
pop
ret
push
push
push
push
lea
push
push
lea
push
push
call
add
add
xchg
bound
add
add
xchg
add
add
icebp
add
push
outsl
add
add
add
enter
loopne
lcall
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lods
fdivs
int3
add
int
add
add
add
fdivrp
add
xchg
cltd
add
fisttps
lcall
in
push
not
pop
add
push
push
push
lea
push
lea
push
call
add
add
xchg
movsl
idivb
add
add
add
jb
jns
fildll
lret
add
add
lahf
add
test
scas
add
fcomps
add
add
neg
rclb
arpl
and
out
pop
aad
add
sahf
andl
sub
pop
push
push
not
pop
push
push
push
push
push
lea
push
push
call
xchg
add
pop
into
mulb
add
add
jl
hlt
add
add
sbbb
xchg
pop
lcall
add
push
jecxz
add
hlt
lea
shll
jmp
pusha
into
ret
gs
sub
pop
push
push
push
shl
dec
add
not
pop
movl
push
push
push
push
push
push
push
push
lea
push
call
mov
lds
rorb
mov
add
xchg
in
in
add
xchg
lahf
enter
add
add
ret
mov
leave
std
jb
cwtl
roll
test
lcall
inc
clc
call
mov
xor
push
push
lea
push
push
push
lea
push
call
stos
add
std
mov
lea
jle
mov
ljmp
add
jnp
repnz
add
mov
add
in
fcompl
rorb
dec
add
add
lea
pop
mov
push
push
push
push
call
test
add
add
add
push
pop
mov
outsl
add
add
add
add
add
add
pop
push
push
push
lea
push
call
mov
jnp
add
add
add
jl
sti
add
mov
add
pop
add
add
add
add
add
push
arpl
add
add
add
add
xchg
add
add
add
rolb
add
add
add
add
lcall
push
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
loope
add
rcrl
add
xchg
xchg
lds
pop
mov
jmp
jns
data16
lock
mov
iret
mov
xchg
add
add
loope
mov
pusha
cmpsl
add
fadds
xlat
mov
out
rorl
add
imul
pop
pop
push
push
push
push
push
push
lea
push
push
call
pop
xchg
enter
add
jle
add
add
jne
mov
add
jns
mov
shl
clc
pop
push
mov
add
test
bound
int
sub
pop
leave
push
rol
inc
pop
ret
push
inc
shr
xor
dec
pop
push
push
ror
not
pop
mov
add
push
sub
pop
push
push
lea
dec
pop
push
push
sub
add
pop
push
push
xor
pop
push
push
push
push
push
push
push
push
push
call
fwait
aad
fsubp
xchg
addb
icebp
jno
add
ja
imul
xchg
jmp
imul
add
sti
jge
mov
add
loopne
lcall
inc
cld
add
add
addl
push
inc
rol
shr
ror
pop
push
push
push
call
mov
add
loop
add
add
add
add
push
pop
pop
loope
mov
pop
pop
jb
mov
mov
in
add
iret
lea
movsb
popf
add
add
add
add
stc
add
addl
sti
decl
push
lea
push
push
push
push
call
faddl
add
add
lods
mov
in
add
rolb
cli
movsb
add
in
add
lcall
add
add
add
xchg
cmc
enter
add
add
add
test
mov
in
in
lcall
jne
push
inc
rol
pop
push
push
push
push
push
push
push
push
lea
push
push
call
fstpt
std
cmp
mov
add
insb
mov
add
ljmp
arpl
add
add
scas
xchg
xlat
add
movsb
xchg
jl
add
pop
add
push
add
add
add
mov
loopne
lcall
jmp
jge
add
test
ret
inc
pop
pop
push
push
push
lea
push
call
add
add
imul
add
test
add
call
add
jne
cwtl
pusha
fistpll
add
xchg
pop
add
lds
add
in
add
add
in
lock
pop
push
ror
rol
add
pop
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
mov
je
mov
mov
add
shl
popf
shlb
in
jmp
mov
lcall
add
jmp
stc
mov
fwait
add
add
test
mov
test
add
xchg
add
sub
pop
pop
push
not
not
inc
pop
leave
ret
push
push
push
push
call
add
push
mov
pushf
in
repnz
push
loope
add
loop
in
loop
clc
add
mov
add
xchg
ret
roll
mov
xchg
add
test
add
sub
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
push
call
mov
cmpsb
mov
add
add
cwtl
pop
mov
push
add
add
add
push
add
fcoml
jns
fs
add
jge
out
mov
lret
jge
add
lods
ja
in
push
jle
add
add
add
out
movsb
testl
roll
add
mov
pop
out
push
add
fldl
sub
pop
mov
push
push
call
popa
push
add
jle
add
add
push
xchg
addb
lods
loope
add
faddl
movb
add
cwtl
pop
mov
ret
mov
add
movsb
add
mov
push
add
fildl
sti
out
mov
mov
in
pop
stos
add
test
in
clc
pop
add
push
push
dec
shl
add
pop
push
push
shr
add
pop
push
push
push
shl
add
shl
pop
movl
push
push
push
push
push
push
call
xchg
ljmp
add
jle
scas
jb
roll
fildl
add
add
shl
mov
xchg
add
add
add
mov
loope
roll
stos
add
push
test
jne
add
add
out
lods
mov
mov
lock
loope
in
in
pop
call
push
push
push
lea
push
lea
push
push
push
push
call
cli
jno
test
jo
add
xchg
lahf
cmpl
pop
ljmp
push
push
push
stos
hlt
rclb
fsub
add
loope
add
xchg
cwtl
pop
jb
add
test
add
enter
add
jb
lahf
adc
mov
loopne
push
push
push
push
push
push
push
lea
push
push
push
call
add
std
cld
add
pusha
add
add
outsl
pop
pop
rolb
add
add
fldl
int
mov
add
jge
mov
popa
push
pop
cli
add
add
fadds
ljmp
data16
add
out
popf
add
stos
hlt
add
add
fcompl
daa
cli
call
sub
lea
pop
subl
cmpl
jne
push
push
call
clc
add
mov
add
mov
add
jnp
loop
test
testb
rcll
call
add
add
clc
mov
add
pop
pop
push
lea
push
push
push
push
lea
push
push
push
push
push
call
lret
ret
leave
popl
lahf
add
pop
add
fildll
stc
add
cli
mov
enter
add
sti
add
add
jle
jge
mov
out
fiadds
lods
fs
mov
add
xchg
mov
add
sub
pop
pop
push
lea
push
push
push
lea
push
push
call
mov
push
fdivl
xchg
fptan
add
add
xchg
fs
add
loope
jle
add
add
xchg
cltd
stos
jb
pop
aam
js
iret
mov
lock
test
sub
pop
pop
push
lea
push
push
push
push
lea
push
call
fdivr
add
in
testl
shl
add
add
add
add
test
pop
jmp
add
sub
pop
pop
push
push
push
push
push
push
lea
push
call
add
add
add
add
xlat
add
add
js
add
add
add
xchg
sti
test
pop
add
add
add
add
jae
add
pop
jo
jle
pusha
add
sti
mov
add
out
add
cmpsb
add
in
add
add
ret
push
push
call
mov
aam
clc
mov
scas
hlt
xor
xchg
xchg
movsb
add
xchg
adc
add
enter
add
nop
sub
pop
push
push
sub
add
pop
mov
push
inc
dec
pop
add
push
add
pop
push
push
dec
pop
push
push
push
push
push
call
add
xchg
testl
add
jb
repnz
outsl
shl
addb
mov
add
clc
mov
mov
hlt
pop
push
push
not
sub
not
xor
pop
mov
push
sub
shl
pop
lea
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
mov
movsl
pop
jmp
add
add
popl
sbbb
enter
out
jae
add
add
jmp
sub
pop
sub
push
not
pop
mov
shr
push
lea
push
push
push
push
push
push
call
cltd
add
add
pop
int
jmp
mov
pop
add
mov
repnz
test
les
mov
lods
add
add
add
pop
jecxz
add
add
gs
cltd
std
sub
pop
add
push
dec
shl
sub
pop
mov
push
add
inc
pop
mov
add
push
push
lea
push
lea
push
push
push
push
push
push
push
call
mov
lock
movsb
imul
lret
out
hlt
popl
add
pop
add
mov
add
pop
incb
imul
in
fcomps
shlb
inc
add
add
lea
add
pop
mov
push
push
push
push
push
push
call
add
push
mov
enter
add
add
jmp
lds
add
add
xchg
testb
in
in
call
jne
cmp
jne
push
xor
pop
mov
movl
push
sub
xor
pop
jmp
push
dec
add
shl
pop
mov
mov
push
push
lea
push
push
lea
push
push
push
call
gs
cmpsl
push
in
add
push
add
add
lods
add
imul
stos
jne
aad
add
lods
add
movsl
lea
pop
add
pusha
add
mov
roll
js
xor
jne
push
add
dec
rol
pop
mov
movl
push
rol
sub
pop
jmp
push
sub
add
pop
mov
mov
push
push
push
push
call
pop
mov
xchg
add
add
add
add
mov
les
popf
lea
add
add
jo
lret
add
rol
jp
add
mov
mov
test
in
lock
cmp
jne
push
shl
shr
pop
mov
push
inc
sub
add
pop
movl
jmp
push
push
lea
push
push
push
push
lea
push
push
call
icebp
pop
add
pop
add
mov
add
sahf
sar
add
add
int3
add
pushf
pop
loop
add
add
mov
shlb
add
add
jno
mov
add
mov
lret
add
add
xchg
in
loopne
lcall
inc
cld
push
shr
ror
pop
cmpw
jne
push
xor
pop
mov
movl
push
add
rol
pop
jmp
push
lea
push
push
push
push
push
push
call
push
add
lds
add
add
mov
ret
subl
pop
movsb
std
mov
mov
jbe
xchg
add
imul
add
mov
xchg
hlt
add
mov
add
add
rcl
mov
in
in
pushl
push
push
push
push
push
push
call
add
add
jnp
mov
add
je
add
aam
incb
lds
in
add
mov
std
add
les
pop
mov
push
sub
rol
pop
mov
mov
push
push
ror
push
push
pop
add
ror
sub
add
sub
pop
xor
inc
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
jb
testl
jecxz
add
xchg
out
add
subb
pop
mov
add
push
call
push
shl
pop
cmpl
je
push
push
sub
shl
push
or
not
add
sub
add
ror
pop
add
sub
lea
pop
push
push
push
lea
push
lea
push
call
cli
stos
test
mov
test
movsl
mov
add
push
idivb
iret
add
jno
add
push
add
mov
mull
enter
fwait
loope
mov
addl
mov
add
mov
jo
sub
pop
push
push
sub
pop
call
cmpl
je
push
push
dec
push
sub
add
add
shl
inc
sub
xor
inc
shl
pop
sub
lea
pop
push
add
inc
shl
sub
pop
push
push
push
lea
push
call
add
pop
pop
aad
rolb
aam
pop
jle
push
ret
add
lock
add
insb
add
rcrl
add
bound
push
add
add
rolb
pop
aam
add
testb
pop
call
cmpl
je
push
push
shr
sub
push
and
add
add
add
xor
sub
add
inc
dec
pop
add
lea
inc
rol
pop
push
add
rol
rol
pop
push
push
rol
xor
xor
not
pop
call
push
sub
dec
pop
cmpl
je
push
push
push
or
inc
add
sub
add
sub
shl
shl
pop
xor
shl
pop
push
shr
pop
push
push
pop
call
cmpl
je
push
push
xor
push
xor
add
not
ror
sub
xor
pop
rol
sub
ror
sub
pop
push
inc
pop
push
push
dec
shl
sub
pop
call
push
lea
push
push
call
mov
add
pop
mov
push
cmpsl
jl
movsl
add
mov
pop
add
jne
ret
push
js
push
push
push
pusha
add
lcall
cmp
rol
je
push
push
ror
ror
sub
push
push
pop
add
inc
add
not
sub
shl
pop
shr
rol
inc
pop
push
ror
pop
push
push
dec
inc
shl
pop
call
push
lea
push
push
call
outsl
add
jbe
test
pop
add
cmc
aad
clc
in
xor
in
sbbl
add
add
call
jecxz
add
add
xchg
lea
add
sub
pop
cmpl
je
push
push
sub
shl
push
sub
add
xor
sub
add
pop
shl
not
pop
push
push
push
lea
push
push
push
push
call
add
movb
add
cmpsl
add
andl
pop
add
add
clc
lret
repnz
add
add
mov
add
add
jge
stc
mov
add
lcall
push
xor
pop
call
push
push
lea
push
push
push
push
call
test
sahf
xlat
int3
imul
fwait
add
mov
add
add
int
int
add
popf
mov
add
filds
xchg
add
pop
mov
jmp
add
fistpl
sahf
add
add
sub
pop
cmpl
je
push
push
ror
shl
push
or
inc
add
sub
shr
sub
rol
xor
sub
pop
add
sub
pop
push
push
call
add
ljmp
lock
add
xchg
jecxz
jl
push
mov
in
add
mov
add
sti
out
jne
add
incb
jo
popf
mov
bound
clc
pop
push
push
lea
pop
call
cmpl
je
push
push
sub
shl
push
xor
add
lea
sub
sub
sub
inc
add
pop
sub
pop
push
inc
pop
push
push
lea
not
pop
call
cmpl
je
push
push
add
add
push
or
not
add
add
rol
sub
xor
pop
ror
sub
pop
push
xor
lea
shl
dec
pop
push
push
shr
pop
call
push
push
lea
push
push
push
push
push
lea
push
call
fcompp
aam
add
shr
add
add
int
xchg
push
movsb
jmp
mov
movsb
mov
mov
mov
add
add
addl
push
pop
idiv
scas
fiaddl
fdivp
add
add
push
sub
pop
cmpl
je
push
push
lea
sub
push
or
not
add
not
sub
pop
lea
dec
rol
pop
push
push
push
lea
push
push
call
jmp
mov
repnz
mov
add
add
add
push
jmp
js
addl
mov
roll
add
add
pusha
jle
add
add
pop
test
push
lahf
mov
sub
pop
push
push
push
push
lea
push
push
push
push
call
ret
xchg
add
add
add
stos
jle
mov
add
add
ja
pop
add
add
out
pop
sub
pop
call
cmpl
je
push
push
rol
lea
push
sub
add
shl
sub
not
not
add
pop
shr
pop
push
push
push
push
lea
push
call
test
add
add
movsl
repnz
add
sti
imul
in
add
cwtl
test
sti
xchg
aam
gs
divb
sub
pop
push
push
shr
add
shl
pop
call
push
rol
xor
not
pop
cmpl
jne
push
push
push
push
lea
push
push
push
lea
push
push
call
rolb
jo
popa
add
add
xchg
pop
jmp
add
je
mov
mov
add
out
cmp
xchg
add
add
add
mov
out
mov
mov
xchg
add
out
mov
test
push
add
rcrb
add
in
fdivr
lcall
inc
adc
mov
add
push
add
add
jmp
push
dec
dec
add
not
pop
xor
push
inc
not
add
pop
pop
push
add
pop
pop
pop
push
shr
shr
sub
shl
pop
pop
push
lea
add
pop
leave
push
push
lea
push
call
pop
stc
les
sti
movsl
mov
in
leave
add
add
add
add
mov
hlt
add
add
add
out
add
jl
aad
push
add
cmpsb
pusha
faddl
stos
add
int
mov
cli
add
add
add
testl
xchg
add
out
sub
pop
ret
push
push
sub
pop
mov
push
xor
inc
pop
add
push
inc
dec
sub
pop
cmpl
jne
push
push
sub
dec
push
push
pop
add
sub
lea
rol
sub
add
pop
sub
pop
push
shr
shr
pop
pushl
push
xor
ror
inc
pop
call
push
add
rol
lea
pop
push
push
push
push
push
push
push
push
push
push
push
call
add
add
cmc
fiadds
add
call
add
faddl
roll
cld
add
loopne
std
int3
add
mov
nop
add
jae
mov
push
pop
in
jle
sarb
loopne
fwait
mov
sub
pop
call
push
push
lea
push
call
test
lds
sti
add
xchg
add
add
add
stos
pop
add
add
add
push
movsl
add
sahf
xorl
mov
add
add
test
add
hlt
pop
jmp
push
push
push
push
push
lea
push
push
call
xchg
lods
add
add
into
add
mov
xchg
add
mov
mov
test
jnp
pop
pop
popa
pop
add
add
incb
add
pushf
imul
cltd
mov
mov
jo
add
lcall
jge
add
test
add
add
ret
sbb
add
or
jne
push
add
rol
shl
lea
pop
leave
add
push
ror
shr
pop
pop
push
push
push
push
push
push
push
push
call
xchg
add
fs
mov
push
ja
mov
js
add
sbbl
hlt
repnz
add
stc
mov
add
jae
iret
test
add
push
add
addl
add
push
jno
stos
add
add
add
flds
push
add
pop
pop
pop
push
push
push
push
call
add
jnp
out
cwtl
rolb
enter
lret
add
jle
cld
fsts
jecxz
sti
add
add
stc
add
lock
leave
push
ror
shl
pop
add
push
push
push
push
push
push
call
xchg
in
add
add
add
cwtl
xchg
add
add
jle
popf
add
mov
pusha
mov
in
add
add
loopne
mov
roll
test
add
fildl
idivl
ret
push
xor
ror
sub
pop
jmp
push
ror
sub
shl
pop
cmpl
jne
push
push
xor
sub
sub
xor
push
xor
add
ror
shr
dec
sub
sub
sub
sub
pop
shl
pop
push
push
push
push
push
push
lea
push
lea
push
call
add
pop
pushf
mov
testb
add
pop
add
cmpsb
out
arpl
jle
jae
xchg
les
fcoml
add
lcall
jne
call
push
push
push
push
call
mov
add
int3
push
out
out
arpl
add
add
scas
add
jl
js
add
xchg
imul
push
push
push
push
push
push
push
push
push
push
push
call
mov
add
data16
hlt
fsubr
jge
movsl
add
xchg
loope
test
hlt
lods
add
roll
push
add
add
add
add
add
add
cld
in
xchg
fildl
fiadds
lcall
rclb
ljmp
add
test
push
add
push
sub
dec
pop
mov
push
push
push
push
lea
push
lea
push
push
push
call
fsubrl
jp
flds
mov
add
test
repnz
gs
cmpsb
out
add
add
fiaddl
leave
test
jnp
cmpsb
sbbl
pusha
add
data16
add
add
add
lods
mov
mov
add
in
loopne
mov
push
dec
pop
jmp
push
dec
pop
push
push
push
sub
push
sub
add
shl
sub
pop
lea
add
pop
push
inc
add
pop
pushl
push
add
sub
not
pop
call
push
lea
pop
call
push
push
sub
xor
push
xor
add
add
rol
rol
sub
add
sub
sub
pop
rol
pop
push
not
pop
pushl
push
inc
sub
pop
call
push
rol
shr
sub
add
pop
call
push
push
add
sub
push
push
pop
add
inc
shr
sub
sub
ror
add
xor
rol
pop
shl
xor
ror
pop
push
inc
pop
pushl
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
lret
ret
add
movsb
movsl
insb
mov
pop
lock
add
add
mov
stos
xchg
loop
mov
add
add
add
testl
aam
mov
mov
add
in
fdivr
lcall
subl
push
push
call
add
mov
in
add
ret
add
lea
jnp
xchg
negl
add
mov
stos
add
lret
in
jmp
add
add
mov
jl
test
cmc
add
add
ja
imul
add
rcrl
in
in
add
lcall
shrb
sbbb
xor
lea
push
xor
add
shr
sub
lea
shr
lea
pop
inc
lea
pop
push
sub
sub
xor
pop
pushl
push
push
push
push
push
push
push
call
xorl
mov
cmpl
icebp
int3
jbe
add
add
jmp
jb
fstpl
add
fsts
add
push
sti
out
sub
pop
call
call
push
push
ror
push
or
inc
add
shl
shl
sub
pop
add
inc
pop
push
push
push
call
add
jne
add
pop
mov
add
stos
add
add
mov
mov
lret
loop
int
xchg
roll
filds
mov
mov
jmp
pusha
repnz
lods
lock
cli
fs
leave
sub
pop
pushl
push
lea
push
push
push
push
push
push
push
push
push
call
mov
pushf
sahf
mov
rcrb
les
add
add
nop
add
loop
add
aad
nop
out
fidivrs
pop
add
jns
add
int
xchg
add
push
mov
stos
flds
add
jne
add
jnp
cltd
lcall
gs
loop
in
fdivr
lcall
subl
xlat
shr
add
pop
call
push
push
sub
ror
lea
add
push
sub
add
sub
sub
sub
ror
sub
sub
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
push
loopne
mov
ror
pop
mov
pop
popf
jae
aad
jp
fiaddl
data16
ja
add
jne
arpl
push
cli
lea
subl
mov
lcall
add
mov
sub
pop
pushl
call
push
sub
pop
call
push
push
lea
shl
xor
sub
push
sub
add
add
sub
add
dec
ror
pop
not
rol
pop
push
ror
pop
pushl
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
pop
out
add
mov
add
add
mov
hlt
add
outsl
add
sahf
mov
mov
in
std
xorl
insb
xchg
add
push
int
sub
pop
call
call
push
push
push
or
not
add
xor
sub
dec
xor
add
pop
sub
add
pop
push
add
pop
pushl
push
push
push
push
lea
push
call
add
add
add
ljmp
movsl
cltd
std
mov
add
insb
clc
add
add
jp
jmp
add
add
data16
add
fwait
pop
mov
sub
pop
call
push
push
push
lea
push
push
call
cmpsl
xchg
add
les
gs
mov
add
mov
add
add
stos
add
rolb
add
addl
pop
add
add
subl
out
add
testl
into
cwtl
stc
xchg
jl
add
rorb
add
add
lcall
shrb
and
or
cmp
jne
mov
out
add
add
add
sub
sub
rol
shl
dec
pop
shr
pop
push
not
xor
pop
pushl
push
push
push
push
push
push
lea
push
push
call
mov
add
add
pop
iret
add
bound
mov
loope
add
aad
in
out
add
add
nop
scas
add
in
xlat
fiadds
aad
jb
add
fnstenv
lcall
mov
add
push
push
call
add
add
pop
pop
int
ljmp
add
add
xchg
sahf
add
mov
in
iret
add
add
add
add
mov
movsb
addr16
add
arpl
leave
add
mov
iret
int3
sub
pop
call
push
push
push
or
inc
add
add
sub
sub
rol
sub
dec
add
pop
rol
pop
push
lea
push
push
push
push
call
fwait
mov
mov
add
filds
andl
out
add
mov
stos
jns
sti
add
movsl
jb
add
add
add
add
pusha
jnp
loope
add
add
add
push
iret
add
std
mov
fstl
loopne
stc
add
add
jnp
add
sub
pop
pushl
push
rol
dec
ror
sub
pop
call
push
push
push
lea
push
lea
push
push
push
call
data16
add
jns
cltd
mov
lds
jmp
mov
xchg
mov
add
out
add
faddl
mov
xchg
add
add
bound
add
jmp
pop
cmc
mov
mov
jmp
sub
pop
lea
push
push
push
push
call
cmc
add
repnz
jno
mov
xchg
add
pop
add
popl
add
mov
add
lret
stos
cwtl
push
mov
push
out
imul
test
mov
incb
mov
add
hlt
pop
call
push
push
shl
lea
not
ror
push
or
inc
add
lea
shr
add
add
sub
shl
pop
rol
pop
push
push
push
lea
push
push
push
push
call
imul
enter
push
lods
jae
add
aad
add
jae
xchg
mov
je
add
add
mov
into
add
xchg
add
add
xchg
jl
mov
lret
ror
std
mov
stc
add
lcall
jne
push
pop
call
push
lea
push
push
lea
push
push
push
call
mov
gs
outsl
add
mov
add
jo
add
clc
into
out
mov
add
lock
leave
add
add
test
jae
add
add
in
call
call
push
push
add
sub
push
sub
add
lea
ror
sub
xor
pop
sub
sub
pop
push
not
shr
pop
pushl
push
dec
pop
call
call
push
push
rol
not
lea
push
or
inc
add
xor
sub
ror
pop
rol
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
xlat
not
jo
jnp
out
xlat
jmp
nop
lea
add
sub
jge
mov
mov
add
add
add
shlb
movsl
imul
add
stos
lret
add
movb
lea
add
add
add
xchg
add
add
add
stc
flds
add
mov
fdivr
lcall
jne
call
push
lea
push
call
add
add
int3
pop
add
loope
data16
pop
add
stos
push
insb
pop
mov
outsl
add
add
js
add
add
add
fwait
add
add
rorb
ljmp
jge
adcb
dec
push
xor
add
dec
not
shr
inc
sub
add
dec
shl
xor
pop
pop
push
push
push
push
push
call
mov
add
add
iret
int3
stc
movsl
mov
add
popa
add
movsb
add
pusha
loopne
movsb
shll
movsb
addr16
sbbl
sub
pop
pushl
push
push
lea
push
push
lea
push
lea
push
call
and
movl
mov
nop
add
add
pop
popl
divb
mulb
out
add
scas
fxch
in
scas
in
sahf
int
pop
add
add
jecxz
jle
std
fildl
iret
fiaddl
mov
in
call
add
push
lea
xor
ror
pop
push
call
push
push
xor
inc
push
xor
add
sub
sub
not
sub
sub
add
not
rol
sub
pop
sub
rol
pop
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
mov
add
add
cltd
add
add
rolb
mov
add
pop
add
int3
add
into
jae
pop
add
xchg
jns
sar
mov
add
add
add
test
cmpsl
cld
add
cli
add
mov
add
push
arpl
pop
pushl
push
push
push
push
push
push
push
push
lea
push
push
call
xchg
les
faddl
add
shll
mov
pop
push
loopne
test
lahf
mov
jmp
push
push
mov
add
std
add
aam
roll
add
loope
mov
add
add
cmc
add
mov
add
add
loope
ret
xchg
hlt
xchg
shlb
add
mov
lcall
inc
and
add
rclb
dec
pop
mov
push
push
sub
inc
add
push
or
inc
add
dec
sub
inc
pop
shl
xor
pop
push
lea
pop
pushl
call
push
xor
pop
push
push
xor
pop
pushl
call
push
push
sub
dec
xor
push
or
inc
add
inc
lea
xor
dec
sub
sub
pop
rol
add
shl
shr
pop
push
sub
pop
pushl
push
pop
call
push
push
inc
sub
push
push
pop
add
shl
dec
sub
sub
ror
add
inc
pop
dec
rol
pop
push
push
add
shl
inc
push
or
not
add
dec
sub
sub
not
dec
sub
pop
sub
sub
not
pop
push
push
lea
push
push
lea
push
lea
push
push
call
jno
js
add
add
add
loope
push
lds
mov
mov
add
test
mov
push
in
jns
jecxz
loop
mov
add
add
sub
pop
call
push
push
shr
add
push
xor
add
sub
sub
dec
sub
shl
not
pop
not
sub
pop
push
add
lea
pop
pushl
push
lea
push
lea
push
lea
push
push
call
xchg
xchg
outsl
pop
rcrb
mov
mov
test
pop
add
rolb
in
add
add
add
les
nop
fiadds
add
add
add
std
mov
shlb
in
pop
call
push
lea
push
push
push
call
addb
test
ljmp
mov
lret
add
jmp
add
stos
add
mov
stos
shlb
add
add
fsubrs
fwait
add
mov
faddl
push
add
lock
push
mov
aad
add
inc
hlt
push
add
shr
xor
pop
lea
lea
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
data16
scas
add
test
add
mov
mov
lock
popl
jp
gs
icebp
jb
addb
mov
iret
movsl
cmc
xchg
add
popa
aam
int
jae
push
mov
lods
lds
imul
push
call
add
add
fnstenv
ljmp
arpl
scas
add
mov
lea
mov
add
lret
add
fisubrs
in
add
jnp
mov
out
out
jge
add
xchg
sub
pop
push
push
xor
sub
pop
push
push
push
call
rcrl
cwtl
add
add
pushf
pop
pop
pop
add
add
add
aad
xchg
add
lods
mov
mov
add
mov
jmp
add
std
add
xchg
test
add
jo
testl
cli
add
aam
lock
lahf
fiadds
xchg
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
add
hlt
lcall
add
jmp
add
lods
add
lret
add
add
push
shll
pop
mov
stos
mov
add
xchg
loopne
add
jno
add
add
ror
add
cmpb
add
add
lcall
push
clc
pop
sub
pop
push
push
xor
pop
push
push
xor
pop
push
push
lea
pop
push
pushl
push
push
lea
push
push
push
lea
push
push
call
xchg
mov
add
mov
insb
std
stos
add
scas
pop
xchg
add
add
loop
test
add
mov
add
pop
add
add
lea
push
lea
push
lea
push
push
call
cmpsb
add
add
add
movsb
xchg
add
add
add
movsb
ja
xorb
scas
add
mov
add
add
add
sahf
mov
testb
test
jecxz
xchg
in
call
push
push
ror
shl
push
xor
add
dec
not
shl
sub
not
pop
shr
rol
add
pop
push
sub
ror
shr
pop
pushl
push
push
push
push
push
push
lea
push
push
push
push
call
add
roll
jae
add
add
add
push
mov
std
add
int3
add
rcr
int3
addb
pop
call
push
push
lea
push
push
lea
push
call
add
add
fiadds
leave
add
clc
mov
add
lahf
pop
xchg
add
jnp
jle
add
add
rolb
std
add
test
out
add
pop
xchg
jae
add
test
call
add
sub
pop
call
push
push
push
push
lea
push
push
lea
push
push
call
aam
test
push
test
add
add
add
mov
add
out
add
add
add
addl
mov
add
add
add
stos
sub
pop
mov
push
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
pusha
bound
pop
add
roll
add
test
sti
add
add
testl
int
fldt
add
addl
pushf
call
add
lds
add
lods
pop
leave
outsl
add
xchg
call
lcall
push
add
shr
xor
pop
dec
jne
push
push
call
add
add
mov
add
jl
add
add
jnp
stos
push
lds
add
test
loopne
bound
ljmp
cli
jecxz
mov
add
enter
test
ret
add
out
add
add
add
jno
pop
add
lods
add
clc
pop
call
push
push
push
sub
add
sub
ror
shl
sub
add
rol
not
not
pop
xor
pop
push
add
add
inc
shr
pop
pushl
push
dec
lea
dec
pop
call
push
add
shr
not
shr
pop
push
call
push
xor
shr
pop
mov
push
inc
pop
lea
push
push
ror
not
push
or
inc
add
lea
sub
shl
shl
pop
dec
lea
sub
add
pop
push
shl
rol
pop
pushl
push
shl
shl
pop
call
push
push
call
add
fiadds
ret
add
mov
jge
add
pop
add
pop
add
add
cmp
xchg
roll
gs
into
add
add
lcall
push
ror
not
add
rol
pop
call
push
push
lea
dec
push
push
pop
add
xor
not
sub
sub
rol
lea
pop
not
pop
push
push
push
push
push
lea
push
push
lea
push
call
mov
mov
jne
lea
jge
test
add
lods
out
xchg
mov
lahf
add
add
add
add
cltd
add
add
add
add
movsb
add
push
add
lcall
jne
push
lea
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
rcr
mov
add
test
lock
scas
sahf
mov
push
hlt
add
add
mov
add
ficoms
add
mov
add
xchg
mov
add
add
lcall
ret
add
enter
pop
pop
call
mov
push
add
inc
inc
pop
lea
push
push
shr
sub
not
push
and
add
shl
sub
lea
sub
rol
ror
pop
sub
rol
pop
push
push
push
push
call
mov
mov
add
add
mov
add
aam
jp
add
mov
add
mov
test
ja
sub
pop
pushl
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
jae
fcompl
test
movsb
in
jno
ja
add
cltd
mov
fwait
add
mov
add
in
testb
test
fadds
addr16
add
xchg
jne
insb
add
add
cmc
add
mov
add
aam
lret
sub
pop
call
push
shl
rol
xor
inc
pop
lea
push
push
shr
ror
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
test
add
mov
mov
push
push
add
cmpsb
test
mov
nop
add
add
add
shrb
in
in
in
pushl
push
push
sub
push
or
not
add
sub
sub
sub
shl
pop
not
sub
inc
lea
pop
push
sub
ror
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
call
movsb
add
jne
gs
push
ljmp
mov
jne
add
testb
mov
add
aam
add
in
sub
pop
call
push
push
lea
sub
push
or
inc
add
add
dec
sub
sub
pop
add
pop
push
dec
pop
pushl
push
push
lea
push
push
push
push
call
add
jb
add
add
into
mov
push
mov
pusha
add
mov
add
push
add
add
mov
add
add
push
add
add
aam
in
call
add
push
push
lea
push
push
push
call
add
jp
jae
add
mov
mov
add
aam
hlt
sbb
jmp
xchg
jns
loop
cwtl
add
jae
add
les
jno
add
or
add
add
test
mov
faddl
imul
sub
pop
push
push
inc
pop
call
push
push
inc
sub
sub
sub
push
xor
add
sub
sub
sub
rol
pop
sub
xor
add
pop
push
add
xor
pop
pushl
push
push
push
push
call
popa
mov
stos
mov
add
mov
add
add
pop
jmp
jae
add
cld
add
add
mov
push
rcrb
pusha
ret
ljmp
lock
lcall
aas
adc
push
push
call
nop
mov
sti
ljmp
fucomp
add
add
xchg
int3
imul
jle
add
mov
add
insb
add
pop
push
test
xchg
popf
mov
mov
popf
mov
add
ja
in
clc
lcall
testb
add
out
or
pushl
mov
push
sub
pop
jmp
push
push
shl
rol
push
push
pop
add
shr
sub
shl
xor
sub
pop
sub
pop
push
ror
pop
pushl
push
dec
add
dec
pop
call
push
push
lea
push
call
add
add
pop
add
add
cmpsb
xchg
add
add
je
ja
add
call
lret
imul
add
add
add
add
sahf
sti
add
add
add
jp
mov
stos
mov
sub
pop
call
push
push
sub
add
push
or
not
add
shr
dec
shl
sub
inc
inc
lea
xor
pop
shr
sub
pop
push
push
call
add
add
mov
leave
add
add
mov
adcb
shlb
add
movsb
adcl
add
add
outsl
add
lods
pop
incb
add
add
rolb
add
push
mov
popf
cmc
int
jae
in
clc
pop
pushl
push
lea
push
push
push
push
push
lea
push
push
call
xchg
mov
shlb
add
stos
push
mov
add
sbbl
aad
xchg
lea
je
loop
mov
cmpsl
add
lcall
dec
adc
add
push
push
push
call
add
xchg
addr16
xchg
jns
cmpsb
add
roll
add
test
add
add
add
aad
pop
int
loopne
out
stos
mov
pop
aam
fbstp
cld
jge
push
add
nop
out
add
incb
add
out
pop
shl
add
fadds
js
push
test
nop
stc
add
loope
movsb
mov
in
hlt
pop
call
leave
push
push
lea
push
lea
push
push
push
call
pop
add
push
jbe
push
push
jl
mov
rolb
add
fucomp
add
fucom
fwait
push
stos
xlat
shll
hlt
add
fwait
push
rolb
std
cmpl
lret
addr16
into
fnstenv
lret
call
add
push
lea
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
sahf
add
push
cmpsb
add
add
add
fwait
add
add
cld
add
add
add
pop
xlat
add
add
mov
add
add
sub
pop
pop
push
push
push
push
push
push
push
call
push
shlb
je
mov
add
pop
rolb
add
popf
test
add
jno
out
xchg
xchg
call
test
out
mov
ret
add
add
enter
scas
shl
pop
scas
add
sub
pop
pop
push
shr
sub
sub
pop
pop
push
rol
pop
pop
push
push
push
push
call
xchg
push
pop
add
add
aad
call
add
pop
add
cmpsl
add
add
pop
out
cmc
movsb
add
add
out
add
loopne
fadds
sub
pop
leave
add
push
sub
sub
pop
ret
push
xor
not
inc
add
pop
leave
push
push
lea
push
push
push
call
add
leave
aad
mov
pushf
add
jmp
push
add
mov
mov
jb
push
add
test
clc
add
add
add
add
jle
pushf
sub
pop
ret
push
push
push
push
push
push
push
lea
push
call
add
mov
add
add
xchg
add
add
add
mov
ret
add
add
cmpsb
add
jnp
insb
mov
loop
push
idivb
pop
jp
lret
add
add
push
icebp
pop
add
sub
pop
mov
push
push
push
push
push
lea
push
push
push
push
lea
push
call
into
add
xlat
add
pop
add
jle
roll
add
add
add
mov
add
add
cmpsb
add
add
add
sub
pop
cmpl
jne
push
inc
pop
mov
push
push
push
lea
push
lea
push
push
call
jle
iret
mov
add
add
fstpl
fs
lods
add
in
jnp
lds
lea
xchg
mov
mov
roll
add
fdivp
xchg
mov
adc
add
in
pop
add
pop
fcoms
out
mov
call
jmp
push
push
lea
push
push
push
push
push
lea
push
push
push
call
iret
loopne
add
xchg
ljmp
popf
mov
jae
je
mov
lods
in
jmp
jae
data16
icebp
repnz
push
add
shl
cmpsb
jae
jmp
mov
add
fisubrl
add
movsl
rorb
jb
pop
jns
jge
lock
jnp
add
add
scas
add
add
gs
pop
mov
push
push
push
push
call
add
out
add
add
add
add
fildll
rolb
pop
xlat
rclb
push
pushf
mov
jno
cld
mov
mov
jnp
add
add
mov
and
xor
push
xor
inc
xor
pop
xor
push
push
push
push
call
mov
jecxz
add
add
add
add
add
add
add
add
jmp
jp
add
mov
iret
leave
mov
add
mov
add
popl
in
stos
xchg
add
pop
jecxz
jo
shrb
cmpsl
jbe
add
rolb
lcall
rolb
add
pop
xor
push
ror
pop
dec
sub
push
lea
shr
not
pop
jmp
sub
push
dec
xor
dec
pop
pushl
push
sub
add
shl
pop
pop
push
push
call
add
mov
mov
jae
mov
repnz
fxch
add
test
xchg
add
add
imul
iret
jnp
in
clc
lcall
jmp
push
sub
lea
rol
pop
cmp
jne
push
push
push
push
push
lea
push
call
mov
push
repnz
add
add
jnp
add
add
add
mov
adc
add
mov
scas
jno
add
test
add
add
push
add
mov
add
push
add
pop
int
lea
lcall
enter
clc
pop
lea
push
lea
push
lea
push
lea
push
call
add
insb
sbbb
iret
jecxz
sahf
test
mov
mov
mov
push
int3
hlt
push
in
add
lods
add
add
add
in
lods
mov
into
mov
jl
add
pusha
add
test
jbe
push
add
mov
in
lock
sub
mov
push
lea
push
call
mov
popf
cld
mov
add
imul
mov
add
jno
loopne
pop
mov
push
add
add
jnp
scas
mov
add
rolb
add
filds
bound
jecxz
in
clc
pop
shr
push
lea
push
push
push
call
fdivrs
jo
mov
add
add
push
add
mov
test
loope
test
mov
in
lock
lcall
enter
push
push
call
les
cwtl
les
int
add
int3
bound
bound
fiaddl
add
mov
add
jmp
gs
in
add
addb
mov
fsubl
add
add
mov
add
mov
xchg
push
mov
add
mov
push
pop
mov
add
xorb
in
pop
sub
pushl
push
sub
pop
pop
push
push
push
push
push
call
add
imul
int3
add
xchg
add
mov
cld
add
imul
mov
pop
repnz
lods
add
add
lahf
test
jae
test
add
push
xchg
sub
pop
shr
push
push
call
insb
push
add
add
add
pop
add
add
pop
mov
fs
pop
jno
jbe
mov
lea
ja
movsb
add
add
mov
lock
xchg
into
jo
add
xchg
loopne
jno
scas
add
testl
pop
push
mov
addr16
add
push
add
add
in
clc
pop
and
push
push
lea
push
push
call
add
add
add
add
out
hlt
jo
mov
add
sti
push
std
xchg
add
lods
xlat
imul
iret
stc
pushf
mov
insb
mov
fdiv
add
in
loope
sub
pop
sub
push
rol
pop
cmp
jne
push
sub
shr
sub
pop
leave
push
push
push
push
push
push
call
iret
mov
clc
add
imul
scas
lods
outsl
in
add
add
jno
loopne
jmp
add
lret
jo
xchg
add
add
in
call
ret
push
push
push
push
push
push
push
lea
push
call
mov
add
push
jl
add
movl
mov
push
outsl
lock
enter
rcl
add
roll
mov
pop
mov
lds
add
jbe
add
jb
fs
pop
push
mov
push
push
push
push
push
push
call
fwait
jbe
add
jne
les
add
jne
in
add
add
rolb
add
push
movl
call
push
lea
pop
push
push
xor
pop
push
push
push
call
imul
in
addb
add
add
jb
jae
add
lret
add
jns
push
cwtl
out
add
push
cmpsb
add
shll
enter
outsl
mov
add
add
pop
add
lea
jbe
sub
pop
push
push
push
sub
inc
pop
push
push
lea
shl
pop
mov
push
push
push
push
push
lea
push
call
mov
rolb
mov
add
pop
add
push
add
mov
mov
xchg
hlt
mov
mov
in
add
sub
pop
lea
push
rol
rol
lea
pop
sub
push
shr
lea
inc
pop
mov
push
lea
add
pop
shr
push
push
call
in
out
jle
stc
pop
pop
aad
xchg
mov
add
ror
push
add
mov
imul
arpl
into
add
mov
mov
add
sub
pop
add
mov
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
add
add
sti
icebp
add
add
int3
mov
insb
add
fldenv
jno
in
stos
add
jno
add
jo
add
fwait
add
pop
add
xchg
sub
pop
add
push
ror
shl
ror
pop
mov
push
push
call
cwtl
add
in
popa
push
ror
int3
mov
movsl
enter
add
push
add
pop
rclb
jl
pop
shrl
scas
add
jb
add
add
mov
lret
mov
jnp
mov
in
mov
mov
add
lods
scas
stc
roll
jae
xchg
jge
push
lea
push
push
push
push
push
push
call
cltd
jecxz
out
call
nop
into
popf
iret
mov
add
jl
add
fldl
cld
mov
xchg
add
add
add
add
xchg
add
notb
mov
iret
shr
pop
add
add
ffree
test
rcrb
push
mov
push
jae
test
movl
loope
add
add
add
test
mov
add
add
in
add
add
add
add
lds
negl
add
push
cmpl
in
clc
lcall
xlat
push
dec
xor
add
pop
and
push
push
push
call
pop
aad
add
xchg
mov
mov
add
negl
add
push
test
add
outsl
mov
pop
add
add
movsl
add
mov
add
mov
insb
mov
out
sahf
xchg
pop
mov
mov
int3
in
sub
pop
rol
rol
push
push
push
push
lea
push
push
push
call
add
add
jmp
add
xchg
add
cmpsb
add
mov
std
add
add
add
add
loop
rolb
lods
mov
push
in
add
cli
xchg
test
add
add
add
mov
sub
pop
xor
push
sub
ror
pop
inc
push
push
push
push
push
call
add
hlt
add
add
add
hlt
fdivs
lock
jnp
mov
add
pop
out
movsb
loop
out
pop
jle
mov
in
add
jbe
push
in
test
xlat
add
lret
loop
in
call
mov
cmc
jle
fwait
add
nop
mov
pop
aad
add
jmp
bound
in
pop
cmpb
jne
push
dec
ror
ror
add
pop
add
push
push
push
push
push
call
mov
add
add
add
mov
insb
add
add
imul
jle
add
push
mov
add
push
test
loope
push
add
pop
add
add
mov
xchg
lcall
add
jle
cli
add
int
arpl
inc
or
test
add
add
incl
add
push
rol
not
pop
cmpl
jne
push
push
call
jle
add
add
mov
popa
xchg
mov
add
aad
je
xchg
nop
mov
add
lahf
add
int
add
add
mov
int
in
clc
lcall
rclb
lea
push
push
lea
push
push
call
mov
add
rolb
add
movsb
mov
mov
hlt
mov
outsl
add
add
mov
add
sahf
add
pop
push
push
push
lea
push
push
push
push
lea
push
call
add
nop
pusha
fildll
add
fildl
add
add
jecxz
jae
scas
add
fdivrp
bound
fstpt
add
add
imul
add
xchg
add
cmpsb
pop
mov
pop
push
sub
shr
sub
xor
pop
pop
leave
push
rol
shr
dec
pop
ret
push
pop
mov
push
push
call
imul
mov
add
add
push
lcall
pop
imul
add
add
add
icebp
add
hlt
movb
xchg
adcb
add
lcall
add
push
call
mov
sub
pop
add
push
rol
xor
pop
push
push
push
lea
shl
pop
add
mov
push
lea
push
push
push
call
movsl
pop
add
cli
add
roll
pushf
cld
lret
add
push
stos
add
add
loopne
add
add
mov
addl
xchg
add
add
add
push
add
add
add
xchg
jb
add
in
lock
testw
push
sub
add
shl
pop
pop
push
add
dec
add
dec
pop
pop
push
add
not
pop
mov
push
inc
sub
pop
push
push
shl
pop
call
push
push
push
call
xchg
add
add
mov
test
add
add
add
mov
fldl
add
mov
add
add
mov
imul
in
imul
loopne
sub
pop
xor
push
lea
push
push
call
add
test
mov
add
scas
mov
jns
add
in
hlt
ljmp
add
test
mov
cmpb
add
int
loop
enter
in
cwtl
add
mov
mov
mov
popl
sub
pop
pop
push
push
push
lea
push
push
push
push
call
add
add
add
add
jno
nop
int3
pushf
int
in
mov
add
stos
sar
add
loopne
pop
lret
std
movsb
outsl
loopne
jns
add
add
jmp
add
add
add
push
jns
add
aam
xchg
in
add
in
lcall
push
push
push
lea
push
call
add
mov
in
push
add
add
add
out
pop
std
je
movsb
stos
pop
push
mov
add
add
cld
fwait
add
rcll
add
lcall
pop
push
lea
push
push
push
lea
push
lea
push
push
call
add
int
add
pusha
jo
add
pop
add
jle
add
ficomps
xchg
addr16
xchg
add
add
add
jmp
mov
jne
add
mov
pop
out
add
add
lds
aam
in
in
lcall
push
lea
push
push
call
cli
stc
add
jns
jmp
test
vpunpckhwd
lds
test
test
add
icebp
add
mov
jbe
mov
in
hlt
lcall
push
push
push
call
add
add
sti
mov
add
mov
add
rclb
jae
add
add
push
pop
ret
push
push
push
lea
push
push
push
push
call
xchg
movsb
cmpsb
add
lret
test
fimuls
jle
push
pop
xchg
jp
add
mov
add
add
sub
add
loope
add
add
xchg
mov
add
add
pop
pop
add
pop
pop
lahf
mov
enter
ret
jae
out
fiadds
add
add
pop
mov
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
pop
js
push
pop
addl
loope
add
scas
fs
add
mov
imul
add
pusha
add
outsl
lods
popa
lods
mov
add
lods
lea
mov
rolb
add
sub
pop
add
push
rol
inc
pop
push
push
push
ror
ror
add
pop
push
push
push
push
lea
push
push
push
call
add
xchg
add
mov
add
lret
notb
les
add
add
add
add
add
addr16
sahf
add
push
mov
imul
push
lea
add
mov
je
xchg
add
add
sub
pop
push
push
xor
shr
pop
mov
push
dec
pop
push
push
push
push
call
icebp
mov
add
jmp
add
jmp
add
push
add
add
push
add
add
add
add
in
incb
cmpsl
loopne
add
out
mov
std
fildl
add
mov
push
add
into
int3
add
add
add
ret
je
nop
mov
add
pushf
int
jle
add
lea
push
dec
not
pop
sub
push
sub
pop
mov
push
push
push
lea
push
push
call
call
add
add
xchg
push
pop
add
add
repnz
add
cltd
add
add
add
xchg
outsl
mov
lcall
ljmp
xchg
loopne
inc
push
push
call
ljmp
add
add
add
xor
mov
shrl
xlat
cld
mov
add
scas
orl
je
into
mov
jbe
add
ror
add
out
add
sub
pop
add
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
push
add
icebp
push
mov
add
mov
mov
popl
test
pop
fwait
pop
add
cld
cwtl
push
add
add
addb
test
lcall
pop
js
fsts
out
pop
pushl
popl
push
ror
sub
pop
mov
push
add
inc
xor
pop
add
xor
push
ror
pop
lea
push
shl
pop
mov
push
sub
pop
add
push
pop
xor
rol
push
push
lea
push
push
push
push
lea
push
call
test
add
add
testl
scas
aam
add
lret
incb
add
lea
in
add
add
add
xchg
add
enter
stos
test
in
in
nop
push
shl
rol
sub
pop
nop
push
sub
inc
pop
xor
nop
push
push
push
push
push
push
push
push
push
call
stos
fwait
mov
add
add
add
arpl
mov
mov
out
cmpsl
test
stos
aam
pop
sarb
sarl
push
add
add
stos
sub
pop
nop
push
lea
push
push
push
push
push
call
subl
jmp
xchg
into
add
aad
enter
add
shrl
add
mov
xchg
negb
push
in
mov
add
add
fadds
stos
add
add
into
add
add
add
add
add
mov
sub
pop
inc
push
push
push
push
lea
push
call
sub
add
jp
mov
add
pop
cmpsb
into
lcall
add
add
in
pop
fs
std
add
test
add
fistpl
mov
add
add
add
add
add
xchg
icebp
sti
fwait
add
in
in
lcall
push
push
call
gs
add
cmpsb
push
add
add
jmp
arpl
clc
xchg
int3
add
add
in
mov
test
add
test
ljmp
add
add
mov
in
clc
pop
nop
cmpb
jne
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
mov
mov
add
add
imul
add
add
mov
lcall
push
add
pushf
les
sub
pop
add
push
push
push
push
push
lea
push
push
lea
push
push
call
cld
pop
addb
adcb
out
fsubrl
pop
scas
add
jns
cmc
cwtl
pusha
enter
add
add
not
add
add
mov
add
add
iret
add
mov
add
jo
mov
mov
add
add
int
les
push
mov
testl
add
add
ficoms
mov
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
lea
je
add
jae
subb
add
add
add
add
les
mov
jb
lret
pusha
xor
jae
add
lcall
cmp
je
push
push
push
push
push
push
call
add
jge
mov
jo
add
mov
data16
mov
add
movsl
fisubl
in
add
add
fs
add
fwait
lcall
add
xchg
add
mov
mov
rolb
add
xchg
add
add
in
call
rcrl
inc
push
lea
push
push
push
lea
push
push
push
push
call
leave
add
mov
cld
test
lret
add
jecxz
add
stc
mov
mov
add
mov
mov
cmc
xchg
pusha
add
add
into
lea
hlt
jne
in
loopne
nop
push
push
call
add
les
add
fildl
add
imul
add
add
push
mov
add
add
xchg
arpl
mov
or
add
sub
pop
nop
push
not
rol
ror
pop
cmp
jb
xor
push
lea
push
call
int
lock
jecxz
int3
add
cmpsb
add
add
fildll
pop
add
add
add
nop
jge
roll
notl
in
clc
lcall
in
add
push
push
push
push
push
lea
push
push
push
call
push
xchg
enter
mov
jnp
add
add
push
addl
add
add
shlb
mov
add
fsubr
add
xchg
add
xchg
lcall
push
and
rcll
sub
sbb
push
push
call
add
in
add
add
add
jecxz
fwait
add
roll
aam
outsl
arpl
je
add
pop
test
add
xchg
in
lea
scas
lret
jge
push
mov
add
lret
in
in
lcall
mov
jb
xor
lea
not
pop
mov
add
push
rol
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
add
add
add
insb
add
ljmp
xchg
push
add
ror
add
aad
ljmp
jae
ja
outsl
add
add
incb
fnstenv
add
leave
push
rol
shl
not
pop
xor
push
xor
pop
shl
xor
push
shr
inc
pop
shl
push
sub
inc
sub
pop
xor
shl
push
sub
sub
pop
xor
push
push
push
lea
push
lea
push
push
push
push
call
cmpsl
mov
xchg
loope
loopne
add
jno
add
push
data16
jnp
pop
imul
in
add
clc
add
pop
scas
jns
add
add
jmp
in
loopne
lcall
rcll
out
pop
add
pop
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
mov
add
mov
mov
mov
data16
adc
add
add
add
out
mov
sub
pop
pop
push
push
call
xchg
add
push
add
add
add
int3
aam
or
out
pop
push
add
iret
pusha
add
add
add
in
cmpsb
add
add
test
lock
xchg
scas
add
cmpsl
cmpsb
add
je
jne
jl
add
mov
add
add
pop
mov
in
clc
pop
pop
push
shr
lea
inc
pop
pop
push
dec
ror
pop
leave
push
dec
add
pop
ret
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
int
mov
out
mov
outsl
fcom
push
add
add
add
data16
fnstsw
addr16
xlat
rcrl
fcomps
push
pop
mov
push
inc
pop
push
push
push
push
lea
push
push
call
add
out
push
add
jle
add
push
fadds
add
neg
add
repnz
out
lahf
loopne
add
movsb
add
cmpsl
push
mov
ljmp
add
add
in
lock
push
push
push
lea
push
call
add
jecxz
push
xchg
je
jo
add
xchg
add
jge
add
add
push
add
bound
std
mov
add
out
add
dec
or
push
push
push
push
push
push
push
push
call
cmc
aad
flds
add
add
xchg
xor
add
and
orb
negb
pop
add
add
roll
push
movsl
pop
pop
add
xchg
add
add
add
add
add
fdivr
lcall
adc
add
test
push
push
push
lea
push
push
push
push
call
add
pushf
addl
int3
xchg
fidivrl
data16
fwait
test
add
add
pop
add
mov
sarb
popa
jbe
add
add
add
add
mov
add
out
sahf
xchg
pop
add
in
jle
add
push
cmpsl
leave
stc
add
sub
pop
mov
push
dec
xor
not
shr
pop
test
je
mov
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
mov
add
outsl
add
add
add
push
add
mov
push
mov
xchg
mov
lea
mov
add
mov
add
mov
add
lcall
testb
addb
add
int3
sub
lea
pop
mov
mov
push
push
lea
push
call
xchg
imul
add
into
add
test
push
xchg
add
add
cltd
mov
add
cld
xchg
add
add
push
add
add
addr16
mov
add
std
mov
add
add
pop
inc
push
xor
xor
pop
cmp
je
push
push
lea
push
call
add
add
scas
jbe
fisttpll
add
movsl
movsl
jno
mov
add
xchg
out
mov
std
int3
jns
mov
add
add
add
push
imul
into
iret
push
iret
sub
pop
test
je
mov
push
push
push
lea
push
push
push
push
lea
push
push
call
push
add
cli
test
add
out
push
test
mov
mov
ljmp
lds
cld
pushf
jne
add
std
mov
les
add
cwtl
add
js
add
pop
inc
push
ror
sub
lea
inc
pop
cmp
je
test
jne
push
lea
push
push
call
ja
mov
arpl
loop
add
loopne
add
add
add
cli
movsb
add
xchg
add
add
lcall
rcrb
ret
rol
shl
pop
pop
pop
push
dec
sub
shl
pop
pop
push
xor
ror
pop
leave
push
add
add
ror
pop
ret
push
lea
push
lea
push
lea
push
push
push
call
pop
add
mov
shll
andl
mov
pop
mov
add
lret
add
add
xchg
add
leave
push
repnz
xlat
add
mov
lcall
push
push
push
lea
push
push
lea
push
push
push
push
call
imul
repnz
add
add
add
add
add
add
add
jo
add
lret
mov
add
imul
rorb
mov
test
jne
add
cwtl
add
lcall
push
lea
push
push
push
push
push
push
lea
push
call
pop
scas
out
mov
mov
add
add
add
mov
add
je
add
add
enter
stc
push
add
add
test
add
add
xchg
add
scas
add
mov
add
sub
pop
cmp
jne
push
push
call
add
pushf
xchg
sub
les
xchg
cmpsb
mov
rolb
add
mov
mov
out
arpl
push
hlt
xchg
filds
add
add
mov
jmp
mov
sub
pop
lea
mov
push
push
push
call
add
fists
cltd
in
sbb
add
mov
out
incb
out
mov
add
mov
test
push
add
xchg
mov
add
in
hlt
pop
test
je
push
push
push
lea
push
push
push
push
push
lea
push
call
fcmove
push
push
flds
movsl
cld
add
fsubrs
pop
add
add
lcall
add
mov
add
add
add
add
out
sub
pop
mov
add
push
xor
pop
cmp
jne
push
push
lea
push
lea
push
push
lea
push
call
scas
sbbb
fnstenv
add
jns
movsb
add
add
mov
addb
enter
add
jp
mov
outsl
xchg
xchg
jmp
pop
sti
sub
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
add
popf
add
fucom
add
mov
stos
add
push
aad
pop
stos
xchg
out
jge
add
add
jecxz
add
call
add
test
lret
fwait
add
push
sbbb
roll
add
mov
xlat
pop
mov
in
fcompl
rorb
pop
add
add
aam
inc
pop
mov
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
add
sarl
lods
popa
cltd
jle
add
add
pop
add
fsubrs
xchg
out
enter
add
mov
xorl
sub
pop
add
push
push
push
push
push
call
scas
add
sahf
add
lret
add
pop
add
in
add
add
add
les
ja
fs
add
add
stc
in
add
lcall
loopne
test
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
leave
mov
add
loopne
xchg
add
lea
push
add
iret
push
add
xchg
idiv
jge
mov
push
insb
sub
pop
jmp
push
lea
push
call
test
add
mov
pop
add
pop
pusha
mov
add
leave
add
mov
pop
add
addb
hlt
mov
push
sub
pop
xor
pop
push
lea
push
push
push
push
push
push
call
ret
mov
add
mov
mov
cli
xchg
add
push
lods
add
add
andl
add
jb
cld
add
pop
pusha
pusha
ja
movsl
test
add
add
idiv
add
loop
add
mov
nop
add
pop
sub
pop
pop
push
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
in
add
add
loope
add
jmp
lret
sti
cwtl
mov
add
xchg
shrb
jl
add
add
push
rcr
mov
add
add
add
lret
add
push
mov
mov
mov
add
add
popf
mov
sub
pop
pop
push
push
push
push
push
push
push
lea
push
push
call
add
add
push
mov
rolb
mov
add
jb
add
sahf
rcll
in
mov
add
push
mov
fwait
pop
flds
xchg
add
testl
pop
xchg
push
stos
add
pusha
sub
pop
pop
leave
push
lea
rol
pop
ret
push
push
lea
push
push
push
call
add
lods
call
int3
add
mov
add
fcoms
fldl
add
testl
movsb
nop
mov
sahf
rolb
sub
pop
lea
pop
push
inc
not
xor
pop
pop
push
inc
sub
inc
pop
pop
push
push
push
lea
push
push
call
aam
add
add
mov
mov
add
mov
add
xchg
jb
rolb
add
lea
mov
cld
hlt
add
test
stc
xchg
iret
ret
add
jno
jmp
add
test
add
int
sub
pop
pop
leave
push
xor
inc
pop
ret
push
push
push
push
call
xchg
add
lds
add
add
test
mov
data16
add
xchg
fdivs
mov
jmp
cld
add
nop
add
insb
addb
add
add
leave
les
add
stc
mov
shl
add
xchg
enter
popf
add
pop
push
lea
push
lea
push
call
lahf
fstl
add
idivl
add
push
cld
shl
add
add
mov
add
call
ljmp
add
fucompp
add
out
add
add
sub
pop
pop
pop
push
rol
pop
pop
leave
push
push
lea
push
push
lea
push
push
call
jbe
add
testb
cwtl
mov
test
into
add
popf
sarl
add
jns
add
add
popa
add
enter
add
add
add
leave
mov
cli
aam
add
sbbl
sub
pop
ret
test
push
test
jae
inc
push
push
test
jo
test
jb
int3
insb
jae
sub
push
cmp
mov
jae
test
add
sub
jne
das
jg
dec
push
adc
add
testb
push
inc
lods
pushf
leave
jg
fisubl
stc
dec
cmpsl
pop
pop
fs
add
lahf
in
mov
mov
lock
pop
sarb
notl
lock
outsl
insb
pushf
pop
jmp
inc
icebp
and
cli
push
mov
and
pop
cmp
pop
ss
mov
lods
mov
aad
jmp
cmovbe
xlat
mov
loopne
leave
sub
insl
add
adc
pop
roll
sti
js
cmp
or
or
loopne
inc
in
es
outsb
rorb
xchg
retw
jo
jns
data16
xchg
fcomp
sbb
stos
adc
lods
cmp
xchg
je
sbb
adc
add
xchg
in
and
jne
aad
push
cwtl
rcr
mov
pop
insl
ret
mov
mov
sbb
loop
test
mov
jmp
insl
pop
in
mov
inc
in
scas
sbb
sub
add
push
mov
bndstx
popa
es
int
loop
ja
sarl
dec
pop
mov
xor
jge
inc
mov
mov
popf
ret
in
and
ret
fwait
dec
sti
pushl
push
dec
mov
adc
scas
xchg
dec
mov
push
mov
dec
sbb
jns
jnp
mov
lds
and
and
aaa
cmc
mov
mov
dec
aaa
push
xchg
jbe
cmc
mov
int
adc
jl
xchg
xchg
fnstsw
popf
cmp
repz
daa
jl
xchg
and
ret
lret
xchg
mov
das
ficomps
push
aaa
mov
pop
dec
out
dec
xchg
stos
xor
stc
sub
dec
jle
mov
sbb
mov
out
insl
and
pop
xchg
jmp
pop
jmp
fld
jnp
data16
mov
mov
push
adc
fyl2x
adc
push
sub
mov
scas
or
mov
pop
inc
ja
mov
xchg
shrl
xchg
lea
fsubs
outsb
jae
movsb
jmp
sahf
push
mov
jmp
xchg
sbb
adc
add
js
data16
push
into
xacquire
ficoms
scas
jge
test
dec
fldenv
outsl
cmc
push
add
dec
ficoml
lret
mov
lcall
dec
and
inc
push
pop
adc
jno
pop
sarb
leave
addr16
clc
fwait
xchg
mov
jecxz
push
shlb
push
add
cmc
or
out
sbb
lret
aas
sahf
arpl
mov
das
sbb
jne
mov
add
xchg
jae
sti
pop
push
sbb
not
out
notb
xor
cmp
imul
pop
lahf
scas
cmc
sbb
cmp
cmp
pop
icebp
sbb
in
inc
sahf
xor
sub
jle
adc
mov
adc
mov
xchg
pop
xor
inc
cmpsb
push
pop
or
or
lret
xchg
and
aas
int
dec
sub
mov
outsb
icebp
jb
inc
xchg
cmp
mov
cmp
jns
sub
decl
and
in
jmp
into
or
dec
cmp
jmp
lahf
outsb
gs
bound
mov
lret
ljmp
daa
es
loope
cmp
dec
inc
int3
fists
pushf
das
jno
dec
mov
pop
and
lea
push
rclb
adc
mov
add
pop
add
cmp
sub
lds
inc
imul
repz
int
cltd
test
fcom
inc
adc
lea
push
sti
inc
bound
xchg
neg
gs
dec
and
ret
setb
mov
scas
dec
mov
loopne
inc
leave
sub
idivl
shll
lea
jns
adc
inc
popf
dec
cli
cltd
jecxz
mov
jecxz
in
jge
mov
lahf
mov
xor
ret
cmp
insl
fdivp
xchg
aaa
dec
or
xchg
cmp
out
in
ss
mov
movsb
push
je
mov
dec
inc
add
jae
pushf
hlt
inc
sbb
jecxz
icebp
data16
xchg
cmp
jecxz
mov
xlat
sti
cmc
sbb
subb
push
jle
cmpsb
es
adc
push
mov
mov
sub
adc
push
sbb
dec
fstpl
roll
xor
gs
cmc
xor
mull
pop
mov
dec
inc
push
pop
adc
sbb
leave
jmp
js
push
out
insb
mov
subb
mov
jb
hlt
outsb
fs
xor
cmpsb
inc
sarb
mov
sbb
sub
xchg
sbb
mov
imul
and
push
popf
lret
cs
push
call
fs
xchg
lret
xlat
xchg
pushf
in
scas
dec
je
adc
das
aaa
dec
test
sbb
mov
mov
fadd
push
dec
divl
fwait
sbb
xchg
push
jns
ret
mov
in
negb
push
mov
or
fwait
dec
sub
mov
and
sti
pop
xchg
sbb
mov
lock
repnz
out
adc
lock
enter
cmp
fsub
mov
sub
stos
sub
mov
subl
fdivrs
adc
loope
lcall
xchg
push
out
jg
push
jno
ds
out
pop
sub
mov
imul
xchg
insl
xor
mov
cmpsb
jl
faddl
xor
jmp
pop
pop
filds
or
scas
xchg
rcr
push
jae
outsb
js
insb
sti
dec
call
cmpsl
pop
pop
aaa
jecxz
mov
clc
mov
adc
cmp
stos
cmp
dec
inc
mov
lds
cmp
hlt
mov
out
xchg
cmp
and
ret
out
mov
sub
dec
vpmacsdqh
mov
cmc
dec
jns
xchg
cld
jne
mov
es
jnp
int
jno
dec
xchg
push
pop
les
sub
stc
mov
mov
jnp
fstps
pop
idivb
mov
add
mov
or
push
aad
mov
and
aad
mov
lcall
mov
js
int
add
aam
movsb
test
xor
xor
dec
add
sbb
insl
cwtl
test
dec
dec
out
dec
stos
cmpsb
mov
mov
sarb
adc
xchg
vxorpd
mov
nop
sbb
mov
fsubl
movsl
xchg
mov
mov
pop
sub
call
test
push
mov
xchg
push
inc
push
cmpb
in
jg
movq
and
std
and
lods
movsl
dec
xchg
push
inc
clc
imul
cld
mov
dec
xlat
xchg
iret
cmp
aaa
daa
gs
das
push
sub
int3
subl
sub
ja
cmp
pop
mov
aas
mov
or
cmp
rcrb
ljmp
cmp
jmp
jp
mov
mov
nop
or
repz
cmp
mov
insl
aaa
sub
in
mov
push
sbb
cmp
jb
repnz
sub
rol
lret
ldmxcsr
cmp
fdivrl
sti
xlat
push
xrelease
loope
push
repz
xchg
jne
movsb
sbb
pmullw
dec
mov
mov
outsb
scas
test
data16
push
testl
loopne
mov
imul
push
xor
cmpsb
fs
fildll
adc
aaa
cmp
cli
clc
cltd
ds
repnz
ds
dec
xor
pop
outsb
sbb
divb
pushf
and
mov
mov
shl
jo
mov
inc
xor
sbb
jo
mov
movsl
int
aas
clc
mov
jo
dec
lock
rcr
test
mov
jnp
push
jl
ss
lret
push
insl
sub
xchg
stos
je
fst
cmp
push
add
mov
les
jmp
or
inc
jmp
pmaxub
jmp
bound
iret
ljmp
cmp
mov
dec
dec
dec
subl
pop
adcb
pop
fxam
std
or
mov
mov
adc
jno
mov
dec
mov
inc
pop
int
ja
negl
loope
adc
push
sub
call
xor
jo
pop
cmp
out
jns
mov
sti
and
xchg
pop
das
xchg
jns
addb
lods
insl
xchg
jmp
stc
je
mov
mov
js
push
aad
in
mov
xlat
orl
mov
sub
loopne,pn
cld
inc
inc
jp
shll
inc
push
repz
cmpl
jge
mull
outsb
jnp
inc
test
aad
call
cmp
ds
sub
bound
xlat
arpl
push
lcall
push
jmp
out
pop
mov
adc
rcrl
or
cltd
ret
cwtl
push
cmp
js
push
push
fldl
data16
add
test
or
aam
fcomps
sbb
frstor
add
mov
out
add
cmp
xor
sbb
mov
jnp
push
in
xor
loope
pop
gs
and
cmp
fsts
cmpsb
nop
push
daa
nop
cwtl
dec
or
jp
fsubp
adc
lods
test
decb
lods
push
mov
bound
mov
mov
lds
stc
test
inc
xor
frstor
iret
xlat
mov
sbb
pop
std
pop
sub
out
mov
add
cs
inc
push
dec
mov
adc
xchg
mov
xchg
aad
dec
divl
jecxz
nop
stos
mov
mov
mov
mov
lock
rorl
dec
icebp
pop
xchg
mov
mov
add
jge
mov
outsb
and
sbb
mov
lock
les
in
mov
fbld
xor
sbb
sub
lods
xor
jl
into
or
imul
xorl
lret
test
mov
in
mov
pop
inc
aam
scas
pop
fnstcw
popa
repnz
dec
aad
shrb
or
pop
pop
or
inc
rcrl
and
xlat
icebp
xor
pop
iret
adcb
jge
xchg
ljmp
jns
dec
dec
adc
push
int3
push
fisttps
add
aad
fnstenv
stos
mov
cwtl
cmpsb
les
das
push
scas
jg
ret
sbb
aaa
mov
dec
push
shll
xor
jle
xlat
imul
mov
dec
cmp
arpl
or
jl
dec
and
nop
mov
jle
arpl
mov
pop
xchg
inc
sahf
mov
jnp
jo
loopne
jno
add
dec
jl
adc
imul
cld
aad
push
xor
cmpsl
pop
cmp
mov
mov
lret
icebp
mov
loopne
pop
notl
in
jle
outsb
jmp
jbe
mov
add
dec
sbb
out
call
mov
mov
into
adc
xchg
pop
aaa
sub
jp
push
das
push
das
or
aas
xor
daa
lahf
clc
xor
call
cmp
fwait
nop
mov
dec
pop
lahf
add
add
mov
inc
arpl
je
js
sbb
ljmp
insl
or
iret
inc
lods
nop
fwait
xchg
mov
sub
movsb
jge
inc
clc
sbb
pop
sub
add
mov
push
imul
or
lea
mov
fldl
xchg
jp
call
mov
bound
fsubr
mov
fnstcw
cmpsl
js
mov
push
rorl
sti
shll
pusha
mov
test
xchg
loope
lds
pushf
into
xchg
xchg
and
addr16
jae
hlt
xchg
dec
movsb
add
sub
mov
in
xor
mov
push
int
and
sub
mov
add
out
adc
adc
jmp
subl
xchg
sti
cmp
and
dec
les
mov
cmpsl
jne
cmp
loop
sbb
ljmp
pop
mov
inc
jg
loopne
dec
ljmp
mov
cmp
mov
sub
sahf
cmc
test
daa
sub
gs
inc
dec
jl
mov
jb
pop
rorl
in
mov
into
or
mov
mov
xchg
inc
jno
jb
pop
add
lret
arpl
int3
loopne
in
mov
and
fdivl
cmp
sahf
rorl
xor
jecxz
stc
mov
sbb
iret
ror
aam
mov
cmp
mov
push
outsb
int
out
call
pop
les
mov
pushf
jbe
sub
arpl
jb
fiadds
aam
pop
loope
or
and
xchg
sbb
gs
andl
sbb
outsl
jae
sbb
fadd
jb
lods
mov
mov
cltd
cltd
jb
lods
fisttpl
insl
sti
or
lahf
out
pop
cld
lcall
mov
xor
jns
jnp
aam
xchg
mov
inc
loope
mov
inc
xorb
mov
xor
ljmp
lahf
pop
add
fcomi
inc
xchg
fcompl
mov
pushf
dec
lea
in
pop
out
hlt
xchg
jne
push
movsl
sub
dec
sub
in
mov
test
sub
push
fwait
clc
aas
jbe
adc
pop
cmp
lods
pop
ja
subl
dec
inc
and
xor
jno
dec
cmp
movsl
imul
sarl
adc
ds
dec
cltd
lods
xchg
cwtl
das
mov
cmc
mov
cmpsl
std
into
or
mov
mov
subl
imul
cmp
jge
jae
push
ja
sbb
sarl
add
cld
bound
out
inc
aas
iret
mov
jo
cmp
push
nop
movsb
mov
add
xchg
data16
mov
sbb
mov
mov
mov
adcb
or
jo
push
sar
ljmp
add
sti
jmp
icebp
jp
or
leave
rcl
andb
jb
mov
add
sub
sub
popf
jae
nop
lret
pop
daa
push
scas
inc
xchg
sub
sbb
dec
or
xor
dec
sub
xor
add
test
cmpsb
push
pop
cmpl
andb
iret
fwait
push
mov
lods
mov
cltd
and
sbb
cld
in
loope
stos
pusha
divb
loop
cltd
pop
inc
xor
imul
out
sbb
push
xchg
mov
lret
cmp
dec
or
mov
jns
movsb
lds
test
add
pop
aam
popf
or
cmp
mov
mov
inc
lods
lods
addr16
sbb
std
in
sbb
lret
dec
and
push
fwait
xchg
dec
pop
and
push
fstps
fwait
adc
jbe
shlb
sarb
lods
adc
rol
xchg
xor
xchg
sub
ret
cmp
or
cmp
ljmp
pop
dec
mov
xchg
in
adc
xchg
push
and
into
sbb
aad
andb
dec
imul
jge
xchg
movsb
or
ljmp
jp
mov
popa
push
pop
lods
pop
imul
daa
fadds
inc
and
mov
jns
cmp
imul
dec
sbb
mov
lods
insb
mov
ret
sbb
mov
mov
icebp
push
pop
pop
xchg
and
imul
inc
fnsave
aaa
mov
dec
stc
lcall
scas
mov
ss
push
mov
mov
lds
push
ljmp
rcrb
mov
mov
sub
int3
push
xor
subb
into
inc
mov
and
xor
popf
xchg
and
aad
inc
adc
xchg
shrl
and
ss
sub
mov
decl
fnstcw
mov
cld
push
and
leave
mov
jge
dec
pop
mov
dec
or
mov
adc
xor
sub
xor
popa
fwait
iret
sbb
loopne
popa
inc
add
mov
cmp
lock
enter
rorl
or
sti
movsb
pushf
mov
cli
sbb
push
xchg
add
mov
adc
push
pusha
sti
sti
bound
insl
jb
inc
jg
inc
mov
xor
enter
cwtl
mov
mov
sbb
xorl
or
xlat
mov
push
pusha
mov
dec
ja
ljmp
mov
fcoms
adc
cld
xchg
test
cmp
sti
or
ret
scas
ss
icebp
loop
arpl
out
test
push
insb
js
pusha
lahf
xchg
jb
outsl
pop
push
jnp
loop
mov
fstpl
mov
fcmovu
inc
shl
into
cmp
idivl
pop
push
arpl
cltd
jns
mov
lods
xchg
add
cmp
pop
mov
rorl
movsl
testb
test
dec
rolb
push
mov
sub
dec
xor
mov
dec
shrb
mov
data16
dec
and
mov
sub
or
iret
in
xchg
lret
imul
ja
scas
inc
push
jle
sahf
mov
cmpsl
pop
rcll
inc
cmpsl
add
ffree
cld
aas
mov
mov
iret
mov
scas
inc
pop
and
xor
rclb
sub
xchg
in
xor
es
sbb
cmp
and
adc
insb
stos
push
mov
in
add
push
sbbb
sbb
xchg
popf
adc
sub
xchg
lds
jmp
add
add
cmp
jae
fwait
lods
rclb
loop
ret
or
loopne
movsl
scas
mov
mov
fimull
inc
fmul
mov
xor
ljmp
cwtl
xchg
popf
stc
mov
add
mov
jmp
leave
inc
adc
dec
fidivrs
mov
outsl
jge
fcmovbe
xor
or
into
xor
stos
xorl
pop
out
in
push
push
gs
loope
dec
xchg
dec
sub
cmp
mov
lds
and
ds
es
mov
or
inc
ss
jecxz
dec
xchg
ret
push
lock
out
jo
mov
dec
push
xchg
mov
and
add
jno
sub
push
push
ret
sbb
je,pt
xchg
hlt
inc
jl
pop
sub
sub
test
outsb
outsl
dec
dec
sbb
enter
mov
jno
aaa
inc
shr
out
push
mov
adcb
jnp
jp
xor
cmp
xchg
inc
pop
punpckhwd
test
adc
subb
cli
out
mov
adc
shl
addr16
loope
mov
push
mov
pop
fs
jb
popa
cmp
dec
jg
add
or
iret
push
jge
in
hlt
cmp
insb
jg
jmp
sub
rol
xor
sub
divb
fwait
scas
pop
test
in
ja
push
int
pop
mov
loopne,pt
popa
arpl
out
cwtl
add
in
out
arpl
in
inc
addr16
jge,pn
repz
jne
push
in
inc
xchg
xchg
ficoml
inc
into
daa
inc
stos
call
xor
xor
push
je
fdivrl
outsb
inc
push
out
outsb
lahf
sbbl
ljmp
cwtl
mov
sub
jb
or
cld
jg
js
ret
sahf
cmp
mov
fwait
dec
mov
pop
ja
cmp
mov
mov
mov
lods
mov
clc
and
xchg
out
inc
hlt
imul
jne
das
mov
lret
lret
lods
cmc
loopne
dec
push
sar
lret
cmpsb
andl
jbe
cmp
pop
inc
aaa
mov
jae
add
loop
add
sbb
mov
aam
jae
shll
inc
xor
jbe
in
inc
andb
arpl
add
aaa
xor
jg
lock
in
aad
mov
int3
rol
lods
xor
je
fdivl
lods
xchg
cmp
xor
xlat
pop
loopne
mov
pop
in
xchg
mov
loopne
cs
nop
xchg
fcomi
out
mov
iret
mov
add
dec
das
lret
push
mov
or
dec
in
movsb
adc
cs
xchg
ljmp
sub
ljmp
ja
mov
jmp
mov
shlb
cmp
cmp
lods
lds
jb
dec
add
mov
and
jecxz
mov
testl
bound
push
or
ja
cmpsb
mov
in
aad
je
fs
dec
mov
mov
jb
bound
aaa
in
call
je
mov
xchg
ficoms
repz
mov
loope
xchg
mov
mov
xchg
mov
cmp
mov
sarl
test
test
imul
mov
mov
mov
xchg
mov
push
and
lds
insb
xchg
repz
jno
ja
inc
mov
dec
cmp
or
call
in
ja
int
sub
inc
clc
xchg
clc
inc
aas
pop
test
out
sub
fidivl
add
cmp
cmpsl
sub
cmp
sub
pop
shl
nop
stos
movl
sbb
mov
push
movsb
js
imul
dec
jp
and
test
mov
adc
data16
test
cmpsl
xlat
fsubl
loopne
pop
addr16
push
jns
fcomps
clc
xor
cmc
adc
insb
xor
mov
loope
in
xorl
mov
mov
mov
insb
dec
push
or
ret
push
jmp
mov
xlat
gs
mov
orb
stc
leave
aam
repz
push
mov
or
and
push
das
dec
cmp
xchg
cltd
xchg
repnz
rolb
loop
xor
je
imul
repz
ds
mov
pop
push
pusha
ss
sbb
and
inc
andl
push
push
mov
and
jge
mov
inc
scas
cmp
mov
mov
cli
iret
mov
mov
in
xchg
cmp
fstpl
bound
fnsave
cltd
adc
adc
sbb
sub
adc
inc
cs
js
cmpb
subl
cli
mov
xchg
dec
movsl
fst
inc
cmc
incb
hlt
pop
std
mov
subb
mov
loope
repz
testl
cmp
push
push
add
push
and
pop
sbb
aam
xor
cld
push
lahf
and
imul
jo
pop
loope
inc
push
mov
repnz
ss
jno
push
mov
xor
jnp
imul
bound
js
std
pop
jmp
outsl
lock
in
call
loope,pn
push
push
xor
aam
inc
daa
insb
dec
out
mov
jb
leave
push
xchg
sub
das
xor
push
inc
or
mov
mov
add
ficoms
jo
mov
sbb
mov
in
sub
or
xorl
sbb
daa
pop
test
push
hlt
loopne
movsb
out
cmpsl
test
fidivrs
rcll
out
jmp
lcall
lods
out
lods
mov
push
jb
sub
pop
mov
mulb
sarl
pop
cmc
push
push
scas
mov
test
iret
std
into
cltd
mov
test
cmc
add
jnp
cwtl
sbb
jo
fsub
imul
sub
pusha
sbb
int3
sbb
push
inc
push
shll
xchg
lcall
push
loopne
dec
push
mov
lds
mov
sub
testl
sub
cltd
and
xor
sbb
mov
dec
lock
and
xor
and
dec
adc
xchg
mov
stc
loop
mov
mov
push
sub
xor
cld
push
and
scas
ja
lea
stos
push
fdiv
add
es
pop
ret
call
xchg
jae
xchg
xlat
clc
jne
cmp
pop
loop
xchg
push
mov
adc
jl
movsl
push
ret
pop
imul
mov
movsb
add
daa
push
fidivrl
lea
pop
outsl
outsb
mov
stc
xor
imull
push
jne
mov
xor
popf
aaa
jmp
pmaxsw
prefetchwt1
or
jb
ja
sbb
jp
iret
xchg
jge
push
test
addr16
dec
jo
adc
aas
dec
push
pushf
pop
int3
push
sub
and
mov
in
addb
cmpsl
imul
and
xchg
pop
xchg
imul
mov
mov
lock
add
pop
ret
cld
sbb
add
aas
daa
push
leave
stc
fucom
dec
inc
pushf
cmp
inc
lods
insl
mov
insb
xor
jae
inc
and
inc
aad
push
bound
insl
lcall
test
adc
xor
xor
xchg
jno
xchg
cmpsb
or
pop
mov
out
setg
pop
nop
scas
or
xor
test
pushf
and
shlb
and
data16
push
xchg
ret
rolb
mov
or
sbb
sbb
add
jns
inc
std
mov
xchg
ja
dec
std
pop
pop
shll
mov
aam
cmc
push
cmpsb
mov
out
xchg
icebp
dec
frstor
push
ds
aaa
loopne
psadbw
mov
or
dec
outsl
xchg
icebp
fs
or
pushf
pop
mov
jo
pop
mov
push
mov
xchg
push
mov
fcomps
movzwl
push
test
cmp
stos
and
cmp
daa
mov
fdivs
xor
repnz
aaa
xchg
aad
or
cmpsb
push
popa
mov
jecxz
repz
lret
xchg
sub
xor
nop
mov
push
cld
mov
out
and
int3
add
jnp
inc
jo
mov
push
xchg
in
lods
inc
imul
mov
das
dec
jo
and
aad
mov
inc
enter
andb
insb
sti
fstpl
call
cmp
ja
mov
sub
imul
or
or
cmpsb
inc
add
dec
lcall
popa
mov
sbb
pop
jb
icebp
mov
fadd
loope
xor
nop
lods
pop
sub
stc
mov
and
iret
loope
push
xchg
cli
mov
pop
pop
test
lds
adc
repnz
push
push
lods
sub
fildll
xchg
push
mul
test
aam
ja
dec
lret
adc
dec
sub
popf
shrl
mov
add
rcrl
fbstp
sbb
mov
mov
pop
loop
xor
dec
add
push
mov
cmp
dec
dec
lds
repnz
sbb
inc
aad
sub
cmp
ss
and
mov
fisubrs
outsl
cwtl
fsubp
dec
in
dec
clc
dec
inc
mov
jecxz
sbb
or
loope
cs
pop
add
stos
arpl
call
add
jno
addr16
mov
daa
add
jge
insl
sub
sub
lret
sub
xlat
cmc
hlt
add
jne
mov
adc
imul
aam
inc
imul
sub
or
sub
mov
hlt
in
int3
jecxz
pop
out
sbb
pop
jno
bound
les
or
push
pop
jl
mov
scas
pop
movsl
jno
cld
int
mov
jbe
les
icebp
pop
xchg
add
pop
cmp
xlat
add
lods
loope
push
jae
inc
out
xchg
mov
rcrl
pusha
dec
cmp
pop
sub
rorb
mov
jecxz
sub
mov
mov
mov
les
jo
or
pop
enter
or
fs
dec
add
or
ja
xchg
out
cmp
jecxz
mov
xor
lods
inc
sahf
jb
call
mov
mov
or
mov
test
push
xor
clc
jp
xor
bound
lods
cld
js
dec
std
hlt
and
push
jbe
icebp
mov
mov
fsubrl
push
or
push
pushl
xchg
push
and
outsl
cmpsl
sahf
sar
push
cmp
jl
stos
scas
lock
int
sbb
ds
outsl
int
mov
imul
dec
or
and
adc
dec
scas
push
std
aad
xor
cld
insl
jo
pop
xor
jb
in
dec
or
mov
dec
dec
fidivl
or
sbb
dec
adcl
xor
dec
addb
inc
loope
sbb
in
pop
and
inc
adc
out
push
pop
dec
arpl
xchg
push
add
jg
xchg
outsb
and
movsb
dec
push
pop
adc
sbb
es
cmp
cmp
into
sbb
jb
roll
cmp
add
jb
insl
pop
fbld
add
dec
stos
ficoms
mov
mov
dec
add
stc
fsubl
push
nop
sub
out
jl
sahf
shll
stos
cmp
test
or
mov
lret
addr16
push
jnp
and
loope
aad
jecxz
mov
inc
shrb
pop
icebp
add
and
imul
scas
nop
dec
pushf
call
in
jmp
push
fmul
dec
xor
lock
and
iret
ljmp
push
push
fisubrl
or
cmc
mov
aad
ret
and
sbb
add
adc
jae
es
sbb
cs
cmp
rorb
adc
sbb
adc
aas
and
mov
dec
test
adc
sub
mov
xchg
mov
insl
das
sbb
lahf
jno
movb
fwait
push
cmp
and
cmp
insb
cmp
xor
sbb
push
xlat
jae
pop
ja
sti
andl
shlb
cmp
repnz
adc
sub
push
stos
mov
mov
jne
pop
loopne
cmp
inc
imul
dec
shrl
cmp
clc
gs
dec
mov
push
rcll
les
dec
adc
xchg
cmp
xor
aaa
aas
cmp
hlt
sub
push
sub
lea
add
lcall
xor
outsl
lahf
test
call
mov
arpl
add
mov
test
or
add
test
test
pushf
jnp
stos
test
push
pop
xchg
dec
pusha
inc
call
loope
rclb
fnstcw
xchg
inc
enter
into
nop
mov
dec
pop
cwtl
inc
or
movsl
imul
repz
mov
mov
mov
cmp
out
lods
and
movsb
cmp
cmpsb
fdivl
xorb
xor
in
mov
les
fs
xor
loope
jno
arpl
xor
add
arpl
lods
mov
out
fistpl
cwtl
rcrl
mov
pushf
das
call
hlt
jge
add
xchg
ljmp
clc
bound
es
mov
and
lea
mov
jge
and
jo
push
or
sbb
mov
pop
bound
es
lds
scas
imul
inc
cmp
test
xor
pushl
dec
mov
je
add
addr16
xchg
dec
inc
mov
int3
sbb
ds
inc
xchg
movsb
insb
adcl
nop
xor
add
fdivrs
psrlq
lods
xchg
pop
enter
fst
aaa
dec
adc
mov
cmpsl
adc
nop
nop
inc
insb
mov
fildll
add
and
jge
push
cs
or
or
fildl
dec
adc
mov
scas
xchg
pop
sbb
stos
jne
push
jmp
push
push
add
aas
icebp
push
popf
xor
sti
ds
push
lods
les
fdivl
add
sbb
push
shrl
mov
add
jne
movsl
in
push
mov
div
mov
out
mov
inc
dec
aaa
enter
inc
daa
inc
xor
cmp
pop
adc
lock
popf
icebp
sub
pop
push
xchg
test
and
ret
xchg
js
stos
jo
gs
sar
sti
sbb
fsub
data16
lahf
cmp
out
subb
sbb
into
xchg
cmp
movsb
bound
push
lods
int
or
xlat
mov
les
fdivrs
inc
in
pop
roll
or
std
daa
and
cmpl
xor
test
std
sbb
mov
loopne
js
jp
lock
push
pop
arpl
das
mov
lock
shrl
mov
ds
xchg
shll
in
cmp
dec
fisubs
pop
cmpl
jo
adc
roll
xchg
dec
iret
popa
lds
addr16
mov
mov
test
clc
test
xchg
push
jmp
popf
dec
cmp
dec
inc
mov
jp
jg
sti
add
fsubr
mov
adc
xor
mov
lock
inc
movsl
sub
sbb
punpckhbw
inc
fs
mov
sbb
bound
cmp
outsl
xchg
out
mov
imul
push
pop
pop
int
inc
int3
xchg
lods
adc
pushf
lahf
das
add
push
cmp
sti
movsb
xor
xor
sbb
mov
cli
fadds
adc
iret
sub
or
sbb
xchg
xchg
cmp
popf
lret
xor
rcrl
js
popf
push
and
rcrb
adc
aam
hlt
pop
dec
sbb
seto
pop
xchg
leave
adc
call
out
xchg
cli
jg
jbe
call
push
adc
es
jo
cmc
enter
pop
or
roll
stc
cld
jmp
sbb
mov
mov
cmp
jp
mov
mov
or
lods
call
arpl
lahf
ja
popf
or
hlt
into
xchg
insl
fdivs
sbbb
call
lcall
loopne
push
into
in
ljmp
add
add
sbb
test
dec
out
mov
ret
js
sub
addl
nop
adc
loopne
sub
jns
je
xchg
lret
add
dec
or
ljmp
or
adc
sub
xchg
xor
or
push
cltd
fisubrl
sub
lahf
jl
movsb
xchg
xrelease
jge
sub
seto
or
pop
fists
cmp
enter
loope
insb
mov
pop
sub
into
in
jecxz
hlt
cmp
mov
inc
add
pop
dec
jmp
adcb
lcall
xchg
mov
mov
adc
shrb
mov
icebp
repz
pop
and
fsubs
push
call
inc
sbb
in
push
fsubrl
pushf
xchg
cmp
and
test
rcl
cmp
pop
push
adc
js
and
push
sbb
stos
cmpsl
test
arpl
xchg
or
sbb
sub
push
inc
int3
add
push
adc
and
adc
stos
sbb
pop
rcrl
inc
inc
out
sahf
pusha
mov
stos
lods
mov
in
mov
insb
arpl
inc
mov
mov
in
jmp
xchg
push
cmp
push
pop
iret
jle
insl
add
lds
sbb
sti
notl
lret
xor
pop
out
xchg
cmp
jle
insb
pop
test
mov
cmp
xchg
dec
shll
shrb
test
or
cmp
gs
int
sub
add
sahf
xor
pop
push
pop
out
scas
xchg
xchg
add
sub
push
ss
iret
inc
loopne
mov
jg
enter
rcr
fbstp
sub
add
mov
lods
aad
dec
xor
jmp
pop
mov
mov
push
and
fisttpll
mov
lods
cmpsl
outsl
std
push
leave
lods
jge
stos
xor
lcall
mov
cld
in
jno
clc
in
movsl
and
outsl
push
sbb
jbe
add
mull
in
pop
jno
sbb
mov
adc
xchg
cmc
cwtl
mov
jg
xor
popa
pop
jmp
clc
xor
or
inc
rcll
inc
cs
jbe
mov
andl
sbb
and
imul
shll
jg
mov
mov
aam
arpl
inc
movsl
out
lods
mov
fidivs
push
adc
jae
sarb
jae
xchg
jge
cmc
mov
int3
or
call
adc
pop
or
jge
adc
xor
mov
mov
sub
or
or
mov
mov
hlt
dec
mov
orl
xchg
sub
xlat
inc
or
fcoms
rcrb
into
dec
mov
xchg
nop
imul
cmc
cmp
shll
iret
xor
addb
pop
jb
lcall
stos
arpl
test
pushf
mov
and
mov
dec
mov
imul
fiaddl
jl
mov
ret
loopne
out
ret
jae
ja
and
mov
in
negl
loope
out
jae
xchg
popa
jne
test
les
orb
repnz
sar
pop
arpl
daa
jp
inc
jmp
test
aam
lcall
aaa
enter
or
dec
movsb
dec
add
out
dec
push
add
push
stc
push
pcmpgtd
movsb
aam
xchg
hlt
roll
stos
insl
imull
mov
xor
dec
pop
negb
sub
imul
icebp
ret
adc
dec
dec
call
fistpll
and
mulb
fsubs
loopne
mov
scas
dec
rcrl
or
fistl
add
sub
or
and
and
mov
add
xchg
arpl
mov
movsb
js
int
mull
ds
jmp
out
mov
push
cmp
mov
mov
jmp
or
pop
das
jo
sbb
pop
fwait
sbb
das
lahf
out
mov
sub
lea
imul
mov
xor
push
rcrl
push
add
mov
gs
xchg
pop
movsl
aam
add
in
xchg
add
hlt
ds
mov
jnp
xor
outsl
aaa
mov
inc
xchg
fiadds
fwait
jle
xchg
jb
int
jle
int
es
mov
mov
jecxz
cmpb
loop
movsl
in
testl
stc
jg
mov
aaa
or
add
cmp
and
lret
mov
xchg
outsl
push
mov
and
lods
cs
jmp
repz
cmp
jge
xchg
mov
push
mov
pop
notl
mov
leave
stos
jne
mov
sub
shr
jb
adc
ss
add
lret
mov
or
jnp
cmp
test
mov
adc
jne
popa
pop
mov
loopew
cmp
jae
call
aaa
add
out
mov
test
push
dec
jg
cwtl
enter
repnz
dec
cli
lret
push
pop
fbld
mov
es
push
mov
ret
xor
shld
inc
inc
inc
xor
jp
mov
jp
mov
sub
xchg
mov
inc
sar
test
pop
test
lds
xlat
pushf
mov
pop
push
and
int
mov
jno
cmp
or
sub
ret
mov
out
movsl
mov
cmpsl
xchg
dec
sbb
stos
sbb
pop
cltd
xchg
inc
ss
ds
mov
outsl
pop
mov
leave
jae
pop
push
shrl
jo
lods
in
sbb
cmpsb
cwtl
sub
lock
int
aaa
sbbb
mov
je
xchg
and
lods
xchg
inc
pop
sti
shlb
out
xchg
mov
lret
sbb
aaa
xor
sub
adc
push
cmp
xor
addr16
inc
jb
and
sub
sub
jo
stos
inc
mov
cltd
cli
mov
add
cmc
mov
mov
loope
dec
cmp
cli
pop
dec
or
cmp
pop
lods
add
and
xlat
mov
mov
fmulp
std
or
or
xchg
mov
mov
cmp
sub
adcl
aam
and
push
test
push
sub
gs
sbb
inc
pop
pop
inc
shlb
inc
pop
shlb
jp
js
xorl
cmpsb
sub
dec
sbb
in
add
adc
xchg
popa
pop
idivl
clc
popa
xchg
divb
rcrb
cmp
pop
ds
dec
lcall
aam
rorb
sbb
inc
insb
lcall
sbb
or
pop
jns
mov
ss
cmp
mov
ja
adc
sub
mov
sbb
xchg
add
fwait
int
ret
call
int
cmp
aas
das
push
jg
mov
loopne
add
mov
or
push
outsb
cmp
adc
mov
sti
pushf
shll
cs
ficoms
int
xor
sbbb
outsl
icebp
adc
movsl
aas
mov
push
in
mov
jno
inc
sbb
xor
cmc
repz
pop
mov
dec
das
push
jmp
xor
fimuls
pop
clc
pushf
shll
mov
cmp
add
insl
dec
mov
mov
jne
loop
jbe
psllw
addr16
xchg
jge
jns
sub
andb
aaa
pusha
jl
push
sbb
sub
lds
or
lcall
into
dec
popa
lods
pop
xchg
enter
ret
lret
nop
mov
lock
fs
fcmovnu
frstor
xlat
cmpsl
sbb
sbb
hlt
pop
clc
xor
test
fsts
pop
dec
out
jnp
sbb
push
or
sub
pop
ds
xchg
inc
cmp
mov
pushf
lock
sarb
push
pop
sbb
xor
push
mov
das
arpl
ret
stos
add
mov
jae,pn
jge
pop
jl
sbb
subb
and
ljmp
sbb
lahf
lret
cmc
js
cwtl
fdivrp
loopne
or
popf
test
mov
rcr
jg
vmread
ljmp
xchg
sub
xchg
add
or
adc
clc
idiv
mov
sbb
data16
add
inc
inc
sbb
leave
mov
cld
sub
xchg
push
push
sub
jae
cmp
adc
sbb
adc
insb
or
push
mov
sub
in
mov
aam
call
pop
inc
sub
xlat
pop
dec
sub
sub
cmpsl
out
xrelease
popf
aad
xchg
pop
repnz
scas
push
das
in
lret
jp
dec
imul
insl
sbb
pop
sbbb
int3
mov
enter
xchg
out
loop
fstl
sbb
movsb
fnstsw
pushf
mulb
pop
push
and
addr16
push
pop
sti
jb
cli
sbb
test
and
cmc
rorb
popf
addr16
lock
jmp
ffree
mov
les
insl
mov
add
or
and
hlt
fld
push
push
aaa
pop
add
lret
in
adc
nop
adc
dec
enter
push
out
pop
stos
ficoml
adc
jb
lods
shlb
and
rcrb
sub
dec
pop
roll
dec
pop
fcom
xor
clc
xor
in
push
pop
mov
addr16
dec
out
into
or
dec
in
jmp
xchg
out
imul
inc
in
mov
push
adc
repz
movsl
sbb
movsb
scas
xor
loop
scas
mov
stos
lods
push
popf
std
or
icebp
pop
scas
je
loope
pop
fsubrs
test
lods
lods
popf
or
lods
adc
fisttpll
mov
push
cli
mov
aam
xchg
cmp
inc
imul
or
sbb
jns
lods
jmp
and
and
shrb
out
inc
or
ss
gs
movsl
xchg
stc
and
inc
data16
cli
lret
ficompl
jnp
icebp
test
xor
add
aam
or
ja
out
mov
out
mov
ds
mov
adc
mov
cs
sub
dec
shrl
stc
pop
jne
fisubl
sub
sub
mov
xlat
fwait
push
and
push
nop
js
push
or
stos
and
aad
sbb
int
sub
push
pusha
sub
adc
lock
lea
jnp
insb
jbe
mov
and
popa
add
into
popa
cld
loopne
pop
xchg
sbb
mov
mov
cmp
inc
adc
data16
std
stc
lret
cmp
cs
pop
rcrb
sahf
orb
mov
ret
ret
pop
cmc
decl
data16
arpl
aaa
xor
push
das
andb
dec
xor
fdecstp
sbb
xor
repz
ret
pop
pushf
popf
sbb
lcall
pushw
dec
std
pop
cmc
mov
xlat
clc
loop
and
dec
xor
xchg
xorb
xor
dec
pop
xor
aad
and
push
sbb
or
aaa
popa
daa
cmpsb
out
out
lcall
xchg
adc
jecxz
cmpsl
pop
push
sub
andb
shrl
sahf
mov
pop
aas
pop
xchg
cmp
lods
push
inc
xor
mov
xorl
jecxz
dec
jbe
sbb
loopne
fisubrl
cmp
std
sub
mov
std
push
push
ror
xadd
xchg
fistl
sbb
rcl
sbb
and
mov
shl
popa
fxch
loopne
repnz
hlt
or
pop
xchg
sbb
xchg
ja
sub
jbe
mov
dec
out
mov
jle
push
pop
js
mov
stos
cs
dec
sar
ljmp
out
jmp
adc
fstps
fisttpll
mov
aad
stos
mov
xor
sub
or
cmp
scas
sub
jb
mov
sub
or
dec
mov
cmc
inc
add
jo
add
orb
mov
loope
jg
sbb
sub
mov
cmpsb
mov
imul
rcr
sarl
cli
cld
lea
xor
adc
push
or
fimull
repnz
lahf
xchg
and
mov
imul
xchg
scas
out
lret
push
shr
pop
sahf
rol
nop
inc
into
xchg
pop
or
adc
inc
xchg
std
fstpl
ss
cltd
nop
dec
xor
mov
loop
and
mov
lods
inc
repnz
pop
scas
xchg
xchg
dec
add
push
inc
cmp
hlt
mov
mov
xor
clc
push
add
popa
lcall
imul
andl
sub
orb
cli
cltd
pushf
cmp
movsl
jg
sbb
addr16
jmp
adc
dec
xlat
pop
ja
mov
outsb
ljmp
pop
cmp
arpl
sub
push
int
fbstp
push
and
cmp
pushl
inc
test
dec
mov
jge
xlat
lret
xchg
mov
jge
dec
inc
aaa
push
mov
xor
sub
push
movsl
cltd
shll
imul
fstps
xchg
fcoml
cmp
arpl
shr
and
daa
mov
pop
stos
xor
sbb
xchg
daa
int
incb
dec
jns
jae
cmpsb
xor
loope
adc
jg
scas
xor
ret
test
xchg
push
rol
aam
xchg
scas
jb
sub
imul
push
sub
mov
js
xchg
fbld
jbe
jae
fistpll
sub
or
lret
popf
xor
mov
jnp
movsl
jg
dec
dec
add
sbb
jecxz
inc
mov
sub
test
dec
imul
aas
mov
sbb
mov
aaa
and
xchg
xor
adc
das
jge
add
pop
push
mov
les
inc
sarl
jp
je
push
es
push
mov
jp
jae
mov
rorl
ljmp
and
out
das
pop
dec
cli
add
rcrl
mov
jne
movsl
out
xor
pop
lret
cmpsb
mov
cmpsl
mov
xor
outsl
lods
push
jns
lods
xchg
push
mov
push
mov
and
pop
repnz
movsl
hlt
xchg
test
inc
lds
jno
dec
lea
and
rcrl
pushf
sbb
or
out
or
mov
out
xor
enter
inc
cltd
orb
into
test
fxam
cmp
jge
adcl
mov
sub
pop
push
cmc
sub
xor
or
dec
es
sahf
loopne
in
lret
mov
xchg
jnp
push
imul
add
iret
mov
ljmp
mov
add
stc
and
dec
enter
ljmp
mov
cmc
sub
imul
push
lcall
or
mov
inc
and
xor
imul
ds
les
inc
pop
fwait
cld
and
rolb
inc
arpl
add
jmp
mov
cmp
out
pop
jnp
scas
mov
bound
xchg
add
push
mov
mov
mov
mov
pop
push
jg
and
jbe
test
xor
std
fiaddl
mov
inc
or
add
in
and
or
lret
or
dec
gs
mov
jecxz
dec
jmp
pushf
dec
movsl
cmp
cmp
cmp
movsl
das
out
test
scas
xchg
push
jg
bound
sub
dec
inc
pushf
sub
dec
adc
push
outsb
ljmp
mov
pop
mov
jl
fdivrl
aaa
mov
rcrl
clc
xchg
out
xchg
pop
lret
lret
mov
iret
adcb
cwtl
clc
inc
adc
out
add
jne
setg
inc
cmp
test
jns
mov
ds
jmp
fadds
sub
ja
sub
test
aas
stos
icebp
pop
pop
hlt
push
loope
rolb
mov
imul
ss
inc
adc
push
sub
aaa
jg
push
or
pop
push
jmp
add
xlat
sarb
nop
jmp
dec
cmp
mov
ljmp
pop
cmp
insb
jecxz
pop
add
scas
cmpsl
inc
popa
fwait
xchg
cs
popf
ljmp
add
gs
lahf
adc
pop
or
aas
and
ljmp
std
add
faddp
lcall
arpl
fdivrl
js
incl
and
in
pop
or
dec
outsb
fcmovne
pop
daa
rcrb
ljmp
mov
fst
or
pop
lods
mov
cmp
xchg
dec
mov
dec
adcl
or
add
jo
pop
mov
rcr
stos
adc
das
mov
dec
loop
repz
mov
jb
repz
sti
in
mov
jo
jno
lret
fisttpll
and
pop
cld
insb
into
and
lahf
mov
cld
idiv
pop
add
dec
bnd
and
pop
mov
add
dec
add
sti
push
aad
mov
xchg
push
cld
pop
js
cmp
jmp
jne
xchg
mov
xor
mov
sub
and
mov
mov
iret
mov
sbb
popf
lret
sbb
sub
mov
rol
into
mov
lds
inc
loopne
and
lea
jle
bound
and
loopne
or
pushf
ret
adc
pop
cmp
sarb
and
mov
mov
dec
int
jae
iret
gs
mov
ljmp
pop
add
mov
pop
sub
int
outsb
dec
sbb
sbb
idiv
int
inc
dec
adc
imul
sti
jle
cmc
add
pop
mov
and
aad
adc
dec
sbb
mov
sub
test
xor
jmp
inc
xchg
fisubrl
into
data16
xor
mov
or
in
jecxz
shlb
inc
pop
fwait
aam
sbb
jne
push
aaa
cmp
mov
add
daa
cmp
or
mov
jne
dec
ficomps
in
xchg
adc
nop
add
addr16
mov
ret
call
scas
mov
pop
nop
filds
insl
push
or
add
jecxz
in
mov
inc
js
dec
rolb
xlat
fsubrs
or
mov
or
pop
mov
es
jns
lock
sbb
xchg
push
inc
aad
roll
xor
dec
adc
cmp
fldl
mov
and
push
dec
xchg
mov
mov
es
mov
cmpsb
test
cs
jns
and
sbb
insl
xor
add
int3
xor
dec
cli
cmp
sub
notl
div
ds
notl
scas
and
xchg
aad
repnz
test
sahf
xchg
inc
inc
fisubs
xchg
test
out
test
cli
add
or
pop
mov
jmp
int
arpl
mov
mov
or
popa
sbbb
xchg
jg
jge
mov
xchg
subb
mov
divl
cmp
or
xor
jmp
xor
xchg
clc
dec
icebp
dec
cmp
sub
mov
and
mov
sub
ja
cmc
in
sarl
sbb
sbb
and
pop
aaa
enter
adc
out
pop
adc
js
mov
and
sbb
jae
insl
jecxz
cmc
pop
mov
test
ja
mov
xor
jnp
push
push
fs
les
inc
or
sti
decb
sbb
imul
mov
xor
inc
xor
mov
ret
push
sub
adc
cmp
cmpsl
adc
mov
cmp
cwtl
loope
int3
add
or
lods
pop
mov
dec
lret
out
adc
in
sbb
popa
cld
push
ret
dec
insb
pop
push
pop
xchg
adc
dec
imul
lods
rcl
dec
repnz
mov
inc
es
int3
sbb
jle
in
xor
mov
insb
test
ja
adc
dec
in
xchg
divb
in
mov
aam
mov
inc
enter
fs
mov
xchg
lock
or
loopne
sahf
xchg
sub
es
push
mov
or
xchg
sahf
fisttps
lds
int3
jle
cmp
ror
mov
loop
mov
dec
in
xchg
int3
cmp
daa
pop
stc
into
sbb
pop
ret
in
inc
mov
icebp
adc
mov
rclb
push
or
pop
sarb
xor
gs
mov
cmpsb
fsub
xchg
jno
lret
adc
mov
movups
xchg
in
std
mov
dec
out
mov
cmp
sbb
out
jge
les
sub
jmp
jle
lods
push
pushf
inc
and
ret
lods
fisubrs
popf
sub
popf
jmp
adc
icebp
mov
mov
push
and
pusha
cmpb
mov
push
out
pop
inc
pushf
adc
sbb
out
push
outsl
xchg
cwtl
fiaddl
adc
fnstsw
bound
stos
inc
sbb
jo
lcall
jb
scas
mov
mov
adc
cmp
lods
out
xchg
and
insb
lds
pop
out
lret
lret
inc
adc
call
inc
pop
push
nop
dec
repz
pop
test
pop
push
subl
or
loope
add
sbb
bound
cld
movsb
sub
jb
jbe
lcall
jb
pop
js
jge
mov
lea
mov
mov
or
jle
inc
in
mov
leave
mov
dec
add
imul
push
popf
out
adc
jp
mov
pop
stos
stos
adc
inc
insb
pop
std
or
lods
dec
cwtl
push
fstpt
in
je
and
mov
pop
jp
push
in
fbstp
mov
and
adc
jl
jl
mov
xor
loope
scas
push
mov
jl
mov
jg
cmpl
sub
xchg
nop
dec
lea
int3
and
fs
popf
or
testl
sbb
adc
rcll
out
cli
je
out
push
movsl
ret
push
or
jo
cltd
out
mov
sub
outsb
arpl
xlat
es
nop
aaa
enter
negb
add
adc
ljmp
jge
and
shrl
mov
rcrb
loop
stc
stos
mov
adc
movsb
and
push
es
push
lods
dec
xchg
insl
mov
int3
pop
or
daa
addb
and
mov
cmp
repnz
mov
inc
xor
adc
mov
lahf
or
js
add
push
jo
addl
andb
scas
leave
ficomps
test
rcrb
push
jge
or
repz
hlt
out
dec
pop
add
js
lret
divb
mov
mov
call
dec
lods
dec
add
cmpsl
loop
aas
inc
mov
mov
test
dec
aad
psubw
and
in
pop
xchg
jno
pop
movl
push
gs
mov
jmp
pushf
jmp
xchg
mov
enter
push
jl
leave
popa
push
cmc
into
movsl
mull
push
popf
jp
mov
pop
mov
and
ds
and
daa
jle
lock
testl
jmp
lahf
aam
adc
pop
sbb
mov
stos
test
adc
xor
pop
out
push
outsb
js
cmp
push
cmp
pop
mov
sbb
fisubrl
mov
incl
mov
sbb
scas
int3
aas
jg
mull
aaa
int3
fs
icebp
mov
daa
sub
imul
cmp
adcl
mov
adc
xchg
lret
inc
cmp
sarb
scas
fldenv
iret
mov
lods
xor
stos
push
fnstsw
mov
pop
add
xchg
scas
ja
jns
or
lds
adc
xchg
subb
lods
mov
jne
sub
and
loop
enter
imul
pop
mull
mov
and
and
mov
inc
je
rcrl
mov
clc
mov
add
jg
adc
lock
inc
xchg
repnz
stc
cmp
pop
cltd
jle
stc
or
inc
fwait
cmp
test
jnp
xchg
lea
aam
inc
xchg
cmpsb
xchg
jp
int3
adc
inc
mov
dec
push
sbb
shll
mov
jb
lock
icebp
popf
xchg
ficomps
js
mov
out
rcll
mov
cmp
fcmovb
ljmp
sbb
idivb
add
iret
fmull
fsubr
mov
jl
out
cmp
xchg
stos
adc
push
xor
std
jmp
adc
xor
cmp
cwtl
aaa
sbb
mov
cmp
mov
push
fsubrs
mov
mov
inc
je
ja
bound
cmp
popa
push
mov
add
fbstp
int
mov
inc
call
lret
negl
hlt
cmc
les
stos
cmpsl
xor
push
imul
das
stos
pop
addr16
dec
in
push
lods
sub
arpl
mov
out
xor
nop
repnz
dec
fsubs
ds
pop
add
and
bnd
push
lret
test
add
mov
push
push
mov
scas
sub
roll
push
xor
or
jnp
call
cmp
mov
inc
pop
xchg
ret
loop
mov
mov
mov
xchg
adc
aas
rolb
mov
insb
add
sbb
mov
iret
repnz
lock
push
mov
cmp
loope
adc
sarl
les
pop
jmp
arpl
add
js
push
daa
shlb
push
arpl
fidivl
jle
lret
in
adc
in
mov
fbstp
sarb
cld
lods
arpl
push
ja
outsl
xchg
jns
rorb
loop
ret
dec
xor
add
loope
cmc
lds
cmc
push
xor
push
mov
sub
add
cmp
cmp
stos
push
push
mov
fs
lea
dec
sub
adc
xchg
inc
addr16
cmp
test
add
ja
lea
cltd
sbb
idivl
jbe
xchg
stos
sti
aas
cmp
ja
stos
mov
push
dec
mov
push
cmp
lret
mov
scas
push
lea
ror
mov
arpl
lods
jge
jmp
fimuls
das
fisubrl
adc
sahf
jnp
mov
into
sbb
jo
fistpll
out
or
stos
and
mov
out
fcmovnbe
add
mov
loop
jnp
dec
dec
add
or
push
iret
popa
stos
stc
push
xchg
inc
xchg
out
jo
or
stos
outsb
jnp,pt
fs
mov
fs
mov
sbb
pop
jg
les
push
scas
rorb
mov
loop
sub
mov
sbb
cmpsb
inc
sbb
sbb
dec
sub
push
xor
push
cli
xchg
pop
lods
arpl
fninit
xor
adc
sub
fildl
pushf
out
subb
push
mov
fwait
popl
mov
xor
inc
or
jmp
fcomps
out
mov
xchg
in
call
fadd
es
inc
pslld
stc
nop
add
pop
aad
sub
add
push
push
inc
pop
pop
data16
xorb
ds
repz
paddw
pushf
or
movsl
je
pop
and
enter
or
mov
dec
lret
shlb
fimull
and
sbb
aas
dec
and
xor
ret
rol
jmp
mov
adc
inc
into
cmpsl
insl
adc
adc
iret
loop
or
bound
lock
dec
or
lahf
je
lea
xchg
rorl
push
push
cmp
pop
loop
rcrb
icebp
inc
inc
xor
pop
fbstp
mov
movsl
cmc
xchg
stos
sbb
jmp
mov
sbb
push
jle
sub
jne
xor
mov
mov
push
mov
daa
push
out
cmpsl
bnd
inc
lea
fadds
insb
mov
push
mul
outsb
xchg
loopne
cli
leave
inc
insl
clc
mov
es
call
or
fmull
cwtl
mov
push
adc
cs
cmp
push
aas
mov
jg
ja
pushf
movsb
int
insb
popa
jnp
mul
pop
loope
loope
jo
pop
lret
int
jnp
xchg
adc
fidivrl
int
jae
insb
mov
and
rorl
sti
mov
jns
sub
div
sbb
dec
add
fimuls
jmp
xor
pusha
dec
ljmp
repnz
mov
shrb
mov
ja
lahf
and
insb
cmp
cmp
aam
bound
add
inc
inc
pop
push
jg
outsb
sbb
arpl
cli
negb
arpl
xchg
sub
or
mov
daa
mov
mov
pushl
add
xor
fcom
je
push
test
sbb
rcrl
inc
mov
fs
jge
xchg
or
jb
xor
mov
pop
loopne
popa
sbb
push
cmp
pop
cmc
pop
mov
inc
insb
dec
pop
xchg
mov
fstpl
cmp
add
lret
je
push
imul
jne
sbb
leave
ja
inc
xor
cs
mov
or
in
xor
repnz
mov
or
pop
aaa
push
lods
dec
sub
jb
and
pop
dec
out
aas
movsb
popf
cmp
add
ds
xor
pop
in
add
shll
or
xchg
pop
fsubrl
stc
sarl
push
or
jp
jp
mov
jecxz
lret
mov
jne
mov
mov
xchg
mov
jmp
arpl
lea
call
push
aam
ret
lds
je
and
sub
clc
int3
rcrl
stos
dec
jb
cmp
add
pop
faddl
test
mov
sbb
inc
shll
push
ljmp
outsl
dec
push
sub
sbb
das
outsb
push
jne
push
mov
add
push
cmp
xor
call
fistl
push
mov
push
and
ret
ja
dec
or
dec
push
das
push
or
aad
int
fisubs
cvtps2pi
mov
jg
in
loop
jmp
inc
aad
xlat
pop
cli
xchg
cmp
pusha
pop
inc
mov
ret
jae
out
jnp
jbe
mov
jmp
das
jns
popf
orb
cs
dec
xchg
rclb
aam
sbb
sub
repz
push
sti
push
cmp
add
sti
adc
add
sub
cmpsb
mov
and
xor
xchg
lcall
jmp
xor
cmp
xchg
cwtl
mov
mov
sbb
mov
push
mov
sub
and
leave
test
cld
ss
stos
xchg
sar
mov
lock
mov
ja
pop
int3
iret
sbb
stos
dec
and
push
and
mov
xchg
jo
mov
add
rclb
xchg
mov
sbb
push
xchg
cltd
jge
cmp
dec
mov
mov
in
mov
lock
je
add
push
or
pop
or
dec
inc
sub
les
aam
mov
mov
push
rclb
outsb
push
xchg
or
xor
stos
push
in
enter
push
test
test
sar
lea
inc
and
xlat
pop
leave
mov
sub
sbb
sbb
rcll
xorl
lods
leave
inc
pop
les
shrl
ret
cmp
test
or
gs
mov
fstps
cmpl
popf
mov
inc
loopne
mov
jle
out
xor
xor
arpl
cmp
test
and
mov
es
int3
mov
dec
or
pop
sub
xchg
testl
sbb
in
pop
push
ja
movsl
adc
xchg
lcall
dec
xchg
loope
enter
pop
je
xchg
lret
ljmp
pop
rcll
or
cmp
rolb
push
out
fwait
mov
inc
inc
xor
jge
bound
jmp
test
mov
ss
bound
mov
push
cmp
mov
and
pusha
das
ss
mov
shrb
inc
repnz
inc
jno
dec
cli
cs
cmp
mov
nop
add
add
addr16
cwtl
std
or
sbb
xchg
push
cmpl
sti
faddl
or
cs
sti
mov
test
add
dec
ror
lea
mov
pop
jmp
pusha
mov
out
sub
or
shlb
adc
push
lcall
hlt
pop
mov
jbe
lahf
jne
push
mov
test
push
pop
push
cltd
jg
in
sti
cmp
adc
and
xor
aam
lret
xor
xchg
sbb
nop
cmp
inc
outsb
sbb
jae
push
repz
mov
jo
mov
popl
sarl
and
and
pop
aas
lods
push
shll
sub
pop
mov
xchg
rcll
mov
inc
mov
adc
add
je
outsl
mov
sbb
xchg
jno
adc
leave
cmpsb
les
shr
cwtl
adc
aas
mov
cmp
jmp
stc
mov
mov
cmp
mov
add
imul
jns
mov
sbb
das
stc
test
add
xchg
jmp
cld
inc
xor
lret
shlb
push
xor
shlb
xadd
js
push
int
aaa
add
xor
push
sbb
ljmp
xchg
outsb
mov
pop
cmp
pop
in
or
lds
and
pop
cmp
xchg
push
fldcw
mov
fucomi
cmc
or
test
inc
push
mov
insl
pop
mov
sub
xchg
aas
mov
stos
jo
pop
rorb
mov
cmp
mov
sbb
dec
jns
nopl
icebp
test
jbe
adc
push
inc
jge
or
mov
addb
lock
ss
sbb
xchg
adc
and
out
cmc
stc
mov
shrl
inc
decl
nop
cmp
mov
fsubrl
pop
pop
gs
adc
fwait
mov
fnstsw
loopne
sbb
stc
testl
stc
out
jae
sbbl
pop
lret
and
aas
in
out
hlt
in
push
imull
cmp
loop
and
cmp
lret
and
dec
push
lock
sbb
lcall
cmp
lahf
mov
aaa
pop
push
cltd
aam
bnd
cmpsl
shlb
fdivr
pop
mov
movsb
push
ljmp
jl
out
stc
xorb
stos
jo
in
fistps
xor
scas
mov
fnstsw
pushf
imul
out
push
dec
iret
arpl
dec
hlt
jp
cmp
push
addr16
flds
push
mov
jb
ret
iret
flds
adc
imul
andb
xchg
stc
ret
call
push
movsl
cld
and
int3
insb
xchg
push
int3
sbbl
cli
fwait
pusha
ljmp
add
or
popa
in
xor
jmp
dec
faddp
jge
jge
sub
xchg
cmp
mov
stos
dec
adc
push
mulb
inc
cld
fwait
and
outsl
push
call
aad
pusha
lea
or
mov
adc
xor
ds
cmpsl
dec
in
xor
mov
push
jecxz
outsl
jle
loop
pop
xor
mov
cmp
fcoml
or
scas
fnstcw
nop
cld
or
pusha
inc
cltd
jl
push
inc
lods
scas
adc
xor
inc
mov
mov
lock
pop
mov
and
sub
xorb
dec
jnp
mov
jo
xor
jns
lcall
dec
or
sbb
mov
inc
shrb
mov
and
cwtl
mov
mov
mov
lcall
jp
mov
xor
dec
divps
imul
popa
sbb
mov
out
or
jo
dec
jmp
cmp
jbe
push
scas
mov
daa
in
ljmp
stc
push
xor
lcall
jl
mov
xchg
fwait
pop
in
jp
push
lret
lret
xor
xchg
les
sahf
cmp
dec
mov
jmp
mov
xchg
jecxz
cwtl
cmp
jno
cmp
stc
test
pop
movsl
lahf
lea
cmpsl
or
mov
lea
test
mov
mov
in
ja
les
aam
dec
and
push
mov
pop
sbb
lcall
jo
mov
ljmp
inc
test
push
ds
subl
test
mov
adcl
int3
adc
jl
jne
dec
push
imul
xchg
imul
xchg
cmp
out
dec
pop
js
xlat
hlt
xchg
lea
call
movsl
dec
mov
jnp
add
lods
or
push
mov
cmp
enter
inc
cmp
jns
mov
xchg
test
cmc
mov
fxch
out
add
mov
xchg
push
fs
cld
jge
ss
insl
inc
into
push
and
aad
aam
sar
cmp
sbb
pop
and
cmp
xor
cwtl
stc
jne
xchg
idivl
push
dec
imul
ss
aad
push
adc
movsb
mov
icebp
lods
mov
push
js
jnp
movsb
jle
sub
ucomiss
addb
or
in
mov
sub
or
int3
push
fmuls
out
outsb
mov
mov
movsb
inc
insl
sarl
cld
xor
fcoms
repnz
or
and
scas
or
and
addl
xor
mov
xor
lods
test
jbe
jnp
adcb
fbstp
mov
mov
xchg
loope
sbb
add
out
xlat
cmpsb
sub
cltd
insl
fisttpll
shl
jo
pop
xchg
js
mov
out
xchg
jge
lahf
ljmp
jle
scas
dec
push
xchg
das
pop
scas
ret
stos
mov
dec
jns
dec
pop
fsubrl
repnz
icebp
leave
popa
pop
adc
and
add
fldpi
push
dec
xor
ret
cmp
stc
cmc
xor
into
loop
scas
mov
test
outsb
iret
and
repnz
push
push
mov
push
fwait
add
je
add
mov
sbb
mov
inc
add
mov
fs
sub
push
inc
in
loop
mov
js
mov
dec
int
mov
lea
out
fisubs
push
xchg
jb
cmc
leave
jg
lea
jge
add
jne
dec
jbe
mov
fwait
mov
jbe
addr16
mov
jmp
cmp
mov
fxch
jns
leave
es
and
dec
jo
ss
cld
int3
out
imul
sub
fs
inc
cmc
xor
cmp
or
fisttps
lds
dec
scas
mov
ds
iret
ljmp
inc
jae
sub
es
pop
mov
xchg
sbb
push
test
push
xor
cmp
ret
shr
cld
inc
imul
mov
in
test
push
add
adc
sahf
dec
int3
inc
icebp
push
out
imul
mov
lods
out
nop
push
sti
push
add
pop
or
sbb
push
lods
xchg
push
mulb
adc
repnz
mov
jp
sbb
sub
rorl
or
dec
jecxz
inc
inc
xchg
sbb
cld
enter
dec
dec
orl
xlat
lods
sti
jmp
fwait
mov
or
orb
sub
xchg
enter
das
call
xchg
inc
repz
inc
js
mov
aad
xor
inc
leave
aaa
hlt
or
push
stos
or
div
mov
out
add
aad
lcall
or
adc
cmpb
das
dec
jb
mov
ss
jno
dec
cltd
inc
in
mov
stos
sbb
test
push
mov
xchg
pop
repz
mov
sub
mov
pop
enter
into
push
push
fmull
leave
movsb
sub
inc
sbb
rcrb
inc
dec
mov
or
popf
popa
je
pop
xchg
nop
and
aas
add
or
lret
ficomps
aas
in
jbe
push
shl
fiaddl
push
aas
sti
jno
sbb
push
idivl
push
xchg
inc
ret
leave
push
push
shlb
in
ja
test
pop
fwait
inc
ljmp
test
pop
mov
cmp
jl
in
or
pusha
pop
or
sti
and
lods
add
xor
pop
stc
jp
push
push
jb
mov
xor
and
cmp
adc
in
test
decb
adc
fbstp
jae
jo
adc
jecxz
or
testb
scas
sub
mov
stos
jle
or
lods
push
push
mov
jno
xlat
in
stc
fsubl
pop
jno
jg
jecxz
idivb
stc
inc
fcoms
lcall
add
mov
imul
fisttps
dec
sti
xchg
add
pop
push
mov
mov
lods
jge
lods
xchg
xor
push
add
iret
addr16
fidivrs
cmp
mov
mov
xlat
mov
daa
or
xorl
test
ja
push
enter
test
imul
adc
and
stos
xchg
xchg
jbe
fldcw
int
sub
ffreep
pop
pop
or
jno
cs
xlat
mov
mov
cmc
or
mov
xchg
cmp
pop
sbb
popf
adc
sbb
push
and
xchg
dec
mov
icebp
loop
inc
in
movsb
push
lods
sbb
mov
aad
pop
mov
popa
dec
lods
andl
inc
adc
cmp
push
cld
mov
push
lods
sbb
subl
rep
insb
xor
mov
repz
stos
sub
into
je
sbbb
mov
fisubrl
lods
push
pop
aad
or
sbb
mov
cmp
je
dec
ds
enter
jns
lods
sub
jecxz
push
jne
mov
imul
jns
nop
into
in
loopne
mov
dec
repz
xor
std
xor
mov
cwtl
aaa
ljmp
pop
mov
out
fstl
sbbb
xchg
shll
cld
in
mov
or
or
mov
aas
dec
pop
jne
and
mov
pop
into
int3
jge
push
jbe
popf
lea
andl
addl
in
out
pop
fwait
test
push
jo
movsb
movsl
jnp
addl
jmp
mov
cmc
mov
shr
daa
sub
cmp
lock
lds
fwait
int
push
popa
aad
out
add
fldl
jns
xchg
sub
shl
xchg
adc
cmpsb
movb
enter
mov
adc
dec
popf
mov
ret
mov
sub
mov
addr16
sarb
movsl
gs
fnstcw
das
test
fwait
outsl
jle
push
xchg
aaa
add
dec
bound
sbb
in
loopne
pop
out
push
lcall
cmp
cmc
test
insb
or
and
leave
fnstcw
xchg
add
jne
mov
dec
push
push
mov
xor
loope
mov
push
loope
xchg
sbb
jno
mov
mov
cmc
lods
dec
add
orl
imul
jle
xchg
out
into
pop
popl
aad
xor
fidivrl
push
add
sbb
outsl
jnp
adc
outsb
mov
inc
leave
push
add
test
mov
adc
lret
cltd
jne
fmulp
and
mov
and
xor
leave
and
in
mov
mov
xchg
dec
jg
adc
gs
jge
pop
jnp
in
sub
mov
or
adc
popa
enter
movsl
add
movsl
xchg
fcoms
aad
pop
mov
fcompl
push
mov
das
add
push
lods
lret
xor
pop
sub
dec
sub
push
pop
or
ret
int
in
mov
xchg
push
xor
mov
cmp
sbb
sub
lea
ret
mov
jp
leave
xchg
dec
lcall
xchg
add
push
and
xchg
adc
mov
jge
mov
bound
pop
sub
inc
xchg
sbb
jl
jp
or
xchg
push
dec
pop
fsubl
je
mov
mov
mov
and
pop
in
mov
or
cmp
into
std
aas
sub
mov
loope
lea
jg
lcall
rcr
popf
ljmp
jle
pop
movsl
test
adc
xchg
cltd
leave
and
lods
shlb
aad
inc
jbe
fdivrl
jge
push
push
sbb
add
into
jmp
testl
pusha
xchg
das
cmpsl
loop
ja
jnp
mov
xor
mov
std
iret
repz
push
mov
mov
test
cmp
pop
xlat
pop
adc
pushf
dec
pop
testl
xchg
jge
jecxz
adc
out
lea
jae
pop
out
mov
ret
out
jb,pt
jne
xor
sub
cwtl
push
pop
loop
mov
pop
mov
jbe
mov
dec
cmp
adc
pushf
movsl
arpl
int
ficoms
imul
xrelease
jl
das
movsl
jp
nop
test
outsl
into
sub
sbb
cmp
adc
and
push
mov
fmull
pop
inc
or
or
test
sbb
bound
sbb
fsubrs
dec
stos
and
outsb
loopne
in
xchg
daa
fmull
notb
fsts
mov
xor
push
xchg
dec
test
mov
cmp
jns
nop
push
mov
adc
mov
jne
out
pop
in
dec
cmp
loope
enter
xchg
mov
jns
loope
cmpsl
lock
cmpl
sub
mov
leave
into
mov
pop
popf
adc
xchg
popf
gs
sbb
mov
xor
or
ja
add
sub
sti
popa
mov
pop
out
mov
shlb
fsubs
fsubr
pop
icebp
addb
inc
cltd
lret
outsl
xor
xchg
fbstp
pop
repnz
mov
outsl
movsl
sahf
subl
pop
faddl
ret
fwait
sbb
sbb
pop
dec
add
hlt
dec
negb
popa
or
mov
clc
cmp
sub
lahf
outsb
and
cmp
sbb
xor
lds
xchg
movsb
mov
je
stos
sahf
mov
adc
sub
pop
sbb
xchg
sbb
cmp
repnz
insl
repnz
ret
in
dec
leave
pop
dec
add
sti
je
mov
jecxz
stos
jo
add
mov
mov
lcall
fmull
iret
sbb
sbb
rep
jno
loope
icebp
xchg
popf
mov
dec
fdivrl
add
test
fcoml
mov
outsl
sub
outsb
addb
lods
jo
pop
pop
movsb
std
decb
sbb
sahf
ficompl
stc
jecxz
popf
imul
mov
or
push
js
pop
lret
gs
jbe
lock
xor
bound
or
pop
sahf
pushf
cmp
int
mov
mov
and
lods
or
or
dec
push
mov
push
imul
aam
pop
push
cltd
xlat
push
mov
fsubl
push
xchg
pop
popf
fcompl
inc
stos
mov
add
mov
loope
out
iret
cli
mov
adc
aam
xchg
test
jp
std
in
imul
mov
push
mov
xchg
lcall
nop
xor
cmp
fsts
dec
push
push
mov
sub
scas
push
jle
push
ss
out
cmpsb
cmpsl
mov
mov
mov
pop
fs
inc
mov
scas
fmuls
sub
es
fidivrs
cmc
jge
lcall
call
xchg
mov
ret
outsb
filds
dec
jp
or
fbstp
jnp
in
js
pop
pop
insl
cmp
loop
insl
add
xor
stc
lock
adc
mov
test
and
popa
add
xor
aad
or
push
xor
fisubrl
je
push
je
push
jae
cs
mov
push
ljmpw
call
push
xchg
xor
insb
int3
dec
sub
pop
std
sbb
xchg
rcll
sbb
xchg
popf
mov
and
out
jne
pop
lods
in
jecxz
negb
dec
or
in
lret
popa
or
cmp
jp
cmpsl
jne
stc
mov
jge
ret
shlb
lods
adc
outsl
jl
fdivrs
scas
cwtl
mov
shlb
xchg
push
test
mov
rorl
add
aaa
adc
xchg
inc
sub
mov
cwtl
fucomip
mov
jno
mov
inc
fidivl
or
dec
inc
hlt
sti
fmull
push
ret
adc
jo
pop
sbb
aaa
ljmp
pusha
std
mov
adc
pop
or
push
pop
out
push
lea
dec
push
movsb
push
enter
lret
fiadds
ror
outsl
sbb
or
loop
jb
push
shlb
xor
mov
popa
addl
fcmovnb
insl
jp
loope
dec
test
pop
pushf
push
outsb
mov
cs
and
sub
push
add
sbb
mov
mov
xchg
sbb
jne
xor
mov
lret
stc
lods
cltd
mov
frndint
scas
pop
je
lods
sbbl
push
push
loope
dec
hlt
popf
inc
mov
inc
movsb
sahf
or
mov
adc
sbb
mov
adcb
and
adc
popf
jle
pushf
mov
arpl
sub
enter
std
push
leave
cmp
cmp
adc
push
push
frstor
xchg
pop
fisttpll
jo
mov
out
in
inc
mov
int
mov
and
and
xchg
mov
ss
jnp
mov
cli
or
xchg
inc
aad
lea
cmp
aaa
adcl
clc
call
push
pushf
jae
pushf
jge
xchg
dec
add
incb
dec
imul
dec
cmp
addl
daa
dec
loope
add
decb
mov
inc
xor
sbb
xor
fcomps
nop
loope
xor
inc
daa
cmp
addb
repz
inc
popa
outsl
cmp
push
movsb
inc
stos
mulb
mov
scas
dec
dec
and
sti
pop
and
subl
ss
std
cli
rcl
in
outsl
push
mov
arpl
jmp
pop
fldl
test
cmp
push
sub
imul
sub
call
mov
mov
movsb
adc
or
adc
aad
and
test
jge
orb
movsb
in
jmp
iret
sub
clc
adc
hlt
mov
inc
ljmp
enter
push
cwtl
data16
sbb
test
add
pusha
or
lds
loope
sub
aas
fsub
jne
or
and
mov
aaa
ret
push
shr
push
xchg
xchg
cmp
hlt
jecxz
xchg
xlat
cmp
rcl
mov
pop
rcrb
data16
push
je
jbe
enter
imul
jge
mov
repz
jno
dec
xor
aaa
sub
gs
xchg
mov
out
pop
cmp
setno
jle
xchg
lods
sbb
scas
in
fisttps
mov
cmp
test
dec
lea
cmp
ljmp
jmp
clc
mov
shlb
jle
dec
gs
ret
mov
out
das
push
insb
mov
sub
dec
cmp
test
xchg
xchg
minps
imul
jne
loopne
pop
sbb
les
ficoms
push
aas
repz
aam
imul
int
push
mov
xchg
ficoml
pop
mov
or
add
popa
clc
xchg
imul
jb
xor
lods
insb
inc
nop
ja
xor
mov
enter
stos
add
stc
movsb
pop
push
dec
cltd
scas
leave
inc
inc
and
push
add
mov
xchg
in
jne
fcompl
or
popa
loop
add
mov
mov
jbe
int3
hlt
out
inc
and
ss
and
movsb
dec
mov
inc
jnp
mov
pushf
movsb
stos
ljmp
into
mov
mov
aam
in
xor
xchg
fsubrl
sub
sahf
cld
int3
lods
nop
adc
xor
mov
sbb
jle
sbb
lods
das
jg
stos
pusha
rol
xor
xor
stos
sub
clc
jae
push
call
sub
and
inc
jle
popa
xorb
push
cmp
sbb
outsl
sbb
jnp
ret
fcoms
jmp
inc
lods
clc
cmc
dec
pop
mov
push
clc
sub
mov
idivl
fsubl
int
jns
and
mov
and
mov
scas
push
imul
dec
or
add
dec
mov
mov
mov
inc
cmpsb
movsb
mov
ds
adc
shlb
fwait
addr16
insb
adc
lds
in
cmp
xor
pop
jle
scas
fnstenv
movsl
add
pushl
dec
cltd
pop
movsl
push
push
sti
push
lods
daa
jge
xor
imul
xchg
mov
jl
insl
ret
lods
sahf
add
int
pop
cmpsb
jnp
push
shll
int3
add
mov
dec
mov
sbb
sbb
add
inc
push
push
lea
mov
shrb
nop
popf
adc
jnp
jne
ss
mov
inc
stos
testl
pop
jmp
rolb
mov
mov
xor
or
data16
sbb
or
lcall
jno
test
mov
in
xor
or
ret
imul
mov
in
xchg
mov
sbb
fildll
and
jl
pop
cli
loopne
adc
xchg
adc
loop
hlt
aas
cmc
stc
int3
in
scas
ja
popf
mov
stc
xchg
fimuls
hlt
repz
cwtl
enter
aas
loope
punpckhdq
adc
pop
test
out
xchg
out
xlat
mov
test
in
xchg
xchg
inc
cwtl
shrb
fdivrl
mov
arpl
mov
pop
dec
adc
adc
jo
daa
test
cmpsb
pop
mov
or
adc
push
push
push
dec
leave
inc
jle
insl
dec
sub
scas
daa
xchg
cld
jns
jo
cmp
mov
pop
xchg
add
mov
pushf
ss
jge
mov
repz
test
jo
testl
sbb
fstpl
scas
enter
mov
sbb
xchg
mov
sbb
dec
icebp
idiv
mov
iret
pop
jp
in
out
jb
sub
lret
pushf
stos
imul
mov
mov
xchg
inc
dec
mov
fcmovnb
test
nop
push
jno
fsubr
in
movsl
ret
pop
inc
aam
jl
sub
xchg
ljmp
or
ja
or
loop
mov
out
leave
sbb
pop
pop
xchg
dec
dec
sub
and
fldl
jp
idivl
jno
mov
push
lret
shll
incb
je
jo
jle
xor
sub
xor
stc
jo
test
les
cmpsl
mov
std
int
sbb
and
daa
cmp
sub
movsb
orl
sbb
dec
xchg
cmp
dec
and
xchg
pop
push
jae
paddw
cmp
push
add
xchg
addr16
cwtl
mov
repz
xchg
cld
xchg
ret
incb
push
mov
add
int
pop
in
and
mov
in
jnp
jnp
ss
in
or
lods
mov
pusha
mov
cmp
and
inc
jl
in
jle
adc
out
mov
insl
cmc
orl
fwait
push
mov
dec
push
stc
push
inc
pop
shrb
pop
cmc
mov
push
cld
fistpl
sti
mov
xor
fisubl
pushf
mov
insl
fidivl
dec
subl
jb
mov
xor
scas
or
stos
dec
push
invd
test
lahf
xor
lods
jnp
mov
mov
xor
sti
ds
mov
in
dec
dec
aaa
push
shll
arpl
clc
subb
mov
push
scas
test
sub
loopne
lahf
jnp
push
mov
in
xchg
adc
mov
push
idivb
lea
mov
jmp
movsl
lret
add
hlt
xchg
hlt
fidivrl
xor
adc
je
mov
outsb
xorb
rolb
jbe
cmc
cli
fstps
or
aaa
iret
lock
mov
xchg
add
sub
mov
mov
pop
mov
mov
sub
jg
cld
sbb
push
and
jmp
outsl
adc
pushf
push
jae
jns
test
mov
and
stc
mov
push
loop
mov
js,pn
dec
add
sbb
mov
popf
inc
dec
inc
mov
mulb
std
repz
sbb
cmp
sbb
mov
push
cwtl
and
push
cmp
push
pop
xchg
mov
movsb
xor
fistpll
pop
jmp
adc
add
stos
scas
push
in
pop
xchg
xor
dec
cmp
jg
imul
popf
jo
and
fdivp
jle
pop
fistpl
insb
mov
sbb
pop
pop
inc
inc
mov
xchg
mov
into
xor
push
imul
daa
jmp
out
mov
sbb
lock
adc
inc
movsl
xor
les
push
and
nop
mov
fnsave
push
in
cltd
ret
movsl
push
or
jbe
mov
out
mov
fistps
shlb
mov
in
cmpsl
test
fldl2t
das
and
or
jae
push
int3
push
je
mov
mov
pop
test
insb
fildl
jns
xor
inc
daa
lock
stos
adc
ret
jge
cmp
test
mov
fadds
xor
ds
rorb
iret
adc
cld
test
jno
and
sub
in
dec
xor
jle
mov
fbld
fwait
xor
movsl
rcrl
dec
in
sbbl
popf
pop
test
dec
adc
mov
ret
sub
out
add
fsts
dec
aad
sbb
daa
decb
jne
test
mov
add
dec
ret
rclb
sub
dec
aam
xchg
cmp
sub
pop
ss
data16
fs
mov
inc
pop
test
cli
dec
cmp
dec
hlt
ja
decl
fld
inc
mov
push
je
lock
call
and
fstl
push
mov
iret
mulb
cmp
rcr
arpl
push
push
inc
ljmp
inc
jo
mov
mov
out
icebp
pushl
mov
dec
jne
es
nop
jecxz
push
sbb
out
jp
pop
cwtl
in
loop
mov
ljmp
add
dec
pop
xchg
push
mov
cli
xchg
mov
jno
scas
arpl
and
ljmp
jmp
js
shll
stos
xor
stos
or
push
mov
inc
addr16
add
jns
jge
ss
mov
jae
outsl
mov
icebp
adcl
push
les
adc
and
stc
pop
inc
sbb
int
je
mov
lea
cltd
pop
ja
jl
lret
pop
sub
in
or
mov
add
mov
insb
sub
hlt
xor
add
fisubrl
pop
and
cmpb
mov
and
cld
jnp
xchg
arpl
ret
aam
idiv
ret
fstps
adc
or
movsb
in
repnz
xor
inc
pushf
sbb
sbb
adc
mov
adc
xlat
cmp
pop
mov
pop
adc
int
popl
dec
jno
mov
push
aas
cs
stc
popa
jo
arpl
cmp
std
add
lret
insb
jnp
and
lods
inc
fstps
push
repnz
fs
push
nop
mov
add
or
sahf
cmp
mov
js
cmp
stos
test
and
jge
ret
out
pop
mov
add
xchg
in
test
xchg
js
push
pop
aam
mov
and
mov
and
xchg
notb
xorl
stc
xchg
lahf
jp
je
fiadds
push
shlb
cmpsb
fs
scas
mov
or
es
fs
lea
mov
hlt
daa
fs
and
aam
or
mov
in
cmpsb
dec
jge
hlt
dec
inc
dec
cld
inc
xchg
bound
xor
hlt
shrb
int
test
repnz
cmpsb
cwtl
xor
loope
hlt
dec
std
js
cs
inc
or
cli
mov
daa
mov
mov
sti
and
sub
lds
inc
mov
cmp
in
lret
in
icebp
insb
lds
and
cltd
dec
out
aaa
es
cmpsl
fimull
xor
mov
hlt
jae
mov
mov
rorl
xchg
daa
lret
mov
mov
mov
imul
cmp
pop
sub
mov
mov
xor
and
mov
popf
fwait
mov
pop
jo
sarb
lret
imul
sub
sbb
jge
loopne
popf
xchg
sbb
sub
ss
mov
ret
sub
xchg
cmpsb
adc
movsl
fwait
jl
lahf
sub
inc
arpl
cli
mov
or
inc
mov
jg
mov
mov
mov
xor
popa
incl
xor
inc
test
sub
leave
ret
stc
mov
jg
jbe
cmp
aaa
cwtl
pop
add
int3
jne
dec
mov
mov
divb
repz
dec
repz
stos
jno
lahf
in
mov
icebp
cmp
sbb
in
xor
sub
push
sub
les
add
pop
aad
in
out
cwtl
das
fdivl
xor
sahf
push
test
and
lods
pop
sarl
push
dec
xchg
jmp
dec
sti
aas
and
aad
ror
fmul
mov
cmp
mov
and
out
mov
rcrb
cld
add
and
jge
fsubs
lds
fsubrs
mov
mov
inc
push
in
mov
pop
xor
inc
cmp
mov
test
mov
sbb
fucomi
in
mov
and
cmp
jecxz
xor
je
jnp
adc
aas
cli
mov
pop
push
xlat
pop
popa
sub
andl
sbb
fisttpll
pop
jb
gs
int
pop
lods
fnstsw
enter
lret
push
push
pushf
pop
mov
xor
mov
dec
jecxz
jmp
sbb
les
jge
popa
jmp
out
into
or
pop
inc
push
adc
ret
adcl
cmp
or
jmp
push
mov
adc
sub
mov
push
jl
or
mov
loope
inc
jp
jnp
xor
adc
cmp
xchg
int3
fnstenv
inc
adc
mov
mov
mov
dec
push
jg
adc
fstps
lods
aaa
jnp
sahf
or
stos
push
inc
pop
mov
hlt
push
pop
add
and
clc
mov
xchg
icebp
jmp
xchg
test
or
shll
and
out
sbb
jp
mov
adc
cmp
xor
sub
xchg
stc
call
fucomip
dec
fisubl
inc
in
sub
lcall
jae
pop
pop
add
and
andl
mov
cld
add
shl
mov
xchg
popf
and
out
jecxz
pushf
push
cmp
pop
das
sbb
xchg
addb
fisttps
jp
adc
dec
mov
xchg
sub
inc
outsl
sub
aaa
mov
and
outsb
sbb
in
or
fstl
add
daa
dec
sbb
jns
fwait
mov
and
sub
or
sub
out
das
cmpsb
out
test
or
cld
adc
nop
mov
scas
and
dec
lods
dec
jns
ficompl
xchg
das
aaa
stos
aas
dec
dec
push
sub
repz
mov
lcall
jae
test
andl
push
pop
jp
test
mov
add
inc
dec
das
push
out
dec
jmp
sbb
negb
ljmp
add
adc
int3
movsl
bound
outsl
daa
scas
test
sub
add
xor
test
cltd
insb
dec
int
xor
popf
fdivr
or
cmpsl
imul
lea
jge
call
popf
std
sarb
jmp
push
push
testl
xor
push
insl
push
and
xor
mov
cmp
sbb
xor
xchg
adc
mov
xor
xor
adc
stos
mov
mov
aaa
jo
xchg
aad
or
mov
push
mov
fldcw
loope
sbb
ficomps
lret
cmp
sahf
lret
push
dec
inc
fiaddl
xchg
jb
mov
test
adc
cli
cmp
push
sub
mov
test
mov
add
cmp
pop
add
sarl
scas
xchg
gs
repnz
imul
cli
insl
jg
dec
mov
and
push
lahf
lcall
cmpsb
lds
mov
inc
daa
cli
or
cmp
or
cmp
jns,pt
xchg
push
push
jbe
adc
test
sti
test
test
push
data16
mov
arpl
enter
inc
lahf
jne
subl
fcmovu
stos
adc
dec
jno
jno
les
xchg
insl
mov
test
and
mov
icebp
test
sub
insl
cmpl
cli
lret
es
imul
aam
sbbb
aam
and
or
xor
gs
cmpl
hlt
mov
fmull
stc
xchg
jbe
adc
ret
pusha
stos
cmp
int
mov
popa
ret
pop
fisttps
icebp
icebp
stos
fwait
ret
pop
push
xorb
addl
int
push
not
inc
xor
scas
lret
mov
mov
mov
xchg
pop
push
and
icebp
fsts
lods
lods
lret
xor
fsubs
xchg
test
cmp
jae
push
sbb
sbb
shll
dec
mov
mov
cld
inc
out
rol
add
jmp
push
and
ds
cli
push
adc
jne
dec
out
mov
das
and
fwait
int3
mov
ret
push
js
fs
add
dec
push
xchg
es
shlb
or
push
pop
mov
mov
mov
jne
or
clc
or
leave
popa
int3
pop
xor
ss
test
mov
sbb
jae
mov
in
push
pop
mov
dec
js
add
scas
in
jns
push
sbb
ret
out
jge
stos
iret
loopne
out
sbb
adc
mov
pop
pop
and
scas
sbb
and
gs
jp
jb
fistps
pop
sub
scas
mov
inc
adc
push
mov
aaa
in
jle
ficompl
call
inc
roll
and
add
jo
in
sub
sub
mov
and
fwait
je
dec
add
push
sbb
outsl
pop
xor
daa
enter
cld
inc
cmp
je
jb
push
xchg
xor
addr16
cld
mov
mov
sub
pop
cmp
pop
pop
sub
dec
loope
mov
arpl
insb
cmp
dec
stos
jg
add
inc
jp
fchs
sub
pop
iret
out
cmpsl
lret
dec
cli
data16
pop
cmp
test
aam
dec
pusha
fdivp
xor
mov
rcrl
addl
add
hlt
lret
cvtps2pd
xchg
cs
and
ds
mov
push
das
jp
xor
stc
pop
mov
pop
adc
sub
pop
sub
xor
icebp
cmp
js
aam
fwait
pop
mov
in
cld
mov
xor
call
fwait
mov
jmp
inc
loopne
inc
ljmp
pop
test
push
in
insl
xchg
mov
fildll
add
mov
sbb
add
or
inc
pop
adc
lcall
xor
sbb
add
xchg
js
pop
inc
into
dec
mov
cmpsl
cmp
xchg
cmp
xchg
mov
mov
mov
lahf
ret
sub
out
das
pop
dec
cs
xchg
xchg
jbe
xchg
inc
pop
mov
push
decb
xor
movsl
ja
sar
and
mov
mov
push
hlt
jle
stos
jge
mov
iret
aas
aam
js
push
sub
call
repz
test
dec
aas
repz
push
lock
xchg
pop
jbe
pop
loopne
imul
or
lahf
aam
mov
fidivl
scas
inc
in
xchg
rcll
pop
les
xchg
pushf
and
sbb
or
and
pop
pop
icebp
sti
gs
cs
icebp
sarb
mov
xor
pop
nop
arpl
ficomps
cmp
test
int3
push
jmp
in
mov
lea
lods
xor
xlat
push
dec
cmp
pop
cltd
movsl
ficoml
mov
popa
push
pop
leave
pushf
call
jnp
jg
ss
in
pushf
sbb
mov
and
pop
xchg
pop
push
arpl
xor
arpl
adc
jl
ss
cmp
xor
adc
cmpsb
es
dec
xchg
mov
shl
fwait
shlb
cmpsb
bound
and
cmp
ds
sub
xlat
mov
add
dec
loop
fiadds
mov
loope
popa
mov
cmp
repz
enter
and
fdivl
out
aaa
mov
loope
idivb
mov
movsb
or
gs
and
xchg
mov
mov
mov
lahf
pop
push
int3
inc
movsl
push
icebp
movsb
aaa
aas
mov
bound
pop
adc
mov
cld
into
add
cli
or
sbb
cmp
ljmp
je
lods
jno
int3
test
push
pop
fs
jae
dec
mov
push
mov
out
cld
in
cwtl
inc
mov
sbb
cs
sti
repz
jnp
push
pop
pop
sub
cltd
and
in
incl
push
xchg
pop
jecxz
adc
mov
out
sub
mov
sbb
orb
imull
pop
cmpsl
aam
pop
fsubrs
mov
adc
sbb
aad
push
sahf
out
enter
out
stos
pop
dec
push
iret
mov
popa
xchg
dec
inc
rorl
cmp
pop
mov
push
fsub
scas
add
enter
sti
div
in
out
incb
jne
loope
rclb
mov
fisubrs
xchg
dec
jp
or
cltd
add
mov
push
push
adc
loop
in
or
and
sub
lahf
pop
pusha
xchg
pop
dec
push
pop
or
testb
pop
add
rclb
and
aas
fldl
and
sahf
fs
mov
sbb
adc
clc
add
repnz
inc
adc
hlt
jge
pop
loopne
sti
mov
xor
fsubs
lret
mov
imul
jge
sub
inc
leave
loope
lea
mov
xlat
jmp
mov
push
mov
and
or
sub
mov
addr16
das
sbb
jmp
sbb
and
daa
out
mov
jecxz
rcrb
mov
addl
lret
jmp
das
lods
stos
mov
pop
clc
jl
cs
xor
mov
or
imul
push
repnz
movsb
push
dec
adc
cli
test
add
pushf
gs
push
sub
test
dec
loopne
rol
cli
mov
push
xchg
push
iret
or
and
dec
xor
sbb
fnstcw
jg
push
scas
std
pop
dec
cmp
and
out
in
movsl
cld
in
add
aam
ja
sub
cmpsb
mov
sub
add
mov
std
sbb
sbb
mov
cwtl
mov
or
mov
sub
add
cmc
push
scas
movsl
xchg
lret
popa
lds
jge
hlt
jb
inc
xchg
mov
cmp
mov
gs
test
test
into
xor
rcrl
cmpsl
jae
adc
fld
dec
cli
xchg
dec
mov
mov
imul
cmp
sahf
inc
or
xor
out
jg
xlat
outsb
and
fdivrl
idivl
push
sub
and
jg
andl
les
inc
mov
mov
push
sub
inc
cmc
movb
aam
mov
decb
inc
mov
ret
mov
mov
addb
fidivl
push
add
xchg
push
fisubrs
xor
sbb
add
mov
mov
sarb
arpl
pop
clc
cmp
aas
xorb
xchg
xor
push
mov
jno
mov
nop
mov
jp
aad
fdivrl
loope
mov
mov
gs
push
lods
sub
mov
shrb
dec
xorl
ss
xor
or
aam
in
dec
pop
mov
loop
out
jecxz
flds
sbb
push
jmp
fs
leave
inc
pop
inc
lret
push
jo
mov
outsb
sbb
pop
inc
icebp
inc
pop
inc
xlat
iret
arpl
notb
lret
adc
hlt
adc
fstpl
jnp
jge
sub
mov
mov
pop
cpuid
sbb
pop
mov
sbb
and
inc
repnz
push
fcmovnu
xchg
rdpmc
xor
idivl
test
fnsave
dec
or
mov
xchg
xchg
loopne
subl
dec
imul
adc
xor
adc
in
ss
aad
in
lods
subb
mov
pop
and
aas
or
pop
out
iret
out
dec
push
sbb
mov
inc
pop
js
push
sub
out
pop
mov
mov
dec
cli
outsb
jns
jo
fldenv
dec
or
cmp
mov
push
push
pusha
pop
mov
dec
lods
in
flds
clc
xor
cmp
or
repz
cltd
mov
aaa
or
cs
dec
xchg
jg
adc
repnz
push
loope
pop
sbb
scas
jne
int
repz
leave
orl
scas
or
inc
mov
sbb
and
stos
cmpsl
imull
cs
in
or
push
fisttpll
or
xchg
dec
push
arpl
adc
icebp
stos
arpl
jge
fisttps
rcr
fstps
test
or
push
test
ljmp
aam
inc
dec
test
out
int
loop
push
inc
mov
dec
adc
repz
cli
into
stos
sub
add
jno
jle
stos
pop
aaa
fcoms
xchg
mov
sti
call
loope
or
jmp
cs
arpl
xor
mov
ds
in
sub
push
xor
mov
sub
jge
push
jno
movb
xchg
cmc
or
mov
jno
aam
sub
loope
stc
push
cwtl
sahf
xchg
std
push
rcrl
rclb
dec
test
adc
cmpsb
fbstp
xchg
jo
movsl
mov
stos
sbb
xchg
xchg
divb
leave
cmp
add
mov
aad
and
sar
out
cmpsl
sahf
ss
lcall
ds
xchg
jnp
sub
cmp
push
push
fistl
mov
cmp
sbbl
lret
sub
xchg
xchg
test
fs
cmpsb
xchg
mov
repnz
mov
incl
into
mov
jg
das
and
movsb
fdivrp
jno
mov
push
cmp
data16
aaa
hlt
push
or
inc
jno
pop
in
psadbw
cmp
out
dec
aad
sbb
mov
fucom
xchg
mull
movsl
add
out
decl
stos
out
mov
mov
sub
sbb
xchg
leave
inc
js
repnz
adc
mov
cwtl
inc
std
mov
pop
jle
ds
xchg
stos
xchg
mov
mov
cld
mov
add
push
xchg
clc
insl
jecxz
divl
int3
xchg
sub
cmpl
insl
mov
pop
adc
xchg
xchg
push
incb
lods
dec
pop
in
and
repz
pop
fsubrl
or
push
std
cmp
daa
fbstp
inc
pop
pop
sbb
dec
fwait
xchg
xchg
push
cmp
jns
loopne
jecxz
fldenv
inc
jne
loop
mov
jle
loop
add
dec
or
std
fsts
bound
xor
in
mov
inc
loopne
popa
mov
xor
hlt
cmp
jbe
xchg
bound
pop
or
stc
cmp
dec
adcl
sub
mov
adc
out
xchg
add
fidivl
push
inc
mov
into
xchg
or
adc
ficompl
mov
adc
mov
in
dec
push
fs
daa
mov
inc
cwtl
fwait
xor
pusha
xchg
jbe
fwait
inc
loopne
xchg
mov
scas
lods
jg
int3
and
out
or
fucomi
sar
popl
gs
xchg
xchg
sub
cmp
enter
nop
adc
les
test
gs
adc
aaa
iret
inc
mov
outsl
cmp
pop
dec
push
push
mov
mov
push
aad
cmp
mov
fistpl
cmp
push
mov
pop
xchg
sbb
ljmp
lods
mov
xchg
xor
push
out
mov
dec
jl
loope
cmc
sub
jecxz
push
lods
jecxz
push
loop
push
lds
add
lret
dec
pushf
jmp
and
js
dec
push
pop
pop
stc
or
xlat
push
push
fistpll
je
xchg
pop
or
sbb
jmp
push
cmpsb
push
sbb
outsl
adc
sar
mov
jns
sub
ss
sub
incl
fisubs
out
mov
cmpl
mov
inc
mov
in
enter
jle,pn
add
sbb
data16
or
add
shll
add
mov
xchg
nop
insl
push
in
ret
loop
dec
mov
lock
mov
jne
cli
sub
shll
test
sub
push
js
shlb
cmp
cmpb
stc
insl
sbbb
dec
aaa
popf
lret
push
add
and
or
mov
xchg
jle
inc
or
dec
mov
fwait
cmc
jecxz
cmp
or
push
xchg
pop
jg
mulb
xor
inc
sbb
sbb
dec
xor
push
cmpsb
sahf
mov
mov
imul
rorl
test
mov
idivb
jo
int3
cmp
pop
nop
adcl
push
ljmp
rcl
jmp
cmc
push
into
add
ds
int
idiv
and
inc
pushw
mov
push
lds
jno
dec
push
mov
xor
gs
in
pop
xchg
cmp
repz
mov
push
aam
scas
aaa
cmpsb
inc
int
pushf
std
mov
xor
fs
push
cmp
jg
loopne
dec
outsl
cmp
rcrl
out
dec
icebp
mov
mov
into
ja
fsubr
jecxz
xchg
divl
insl
dec
jl
lds
cmp
fs
mov
cli
ret
int
sbb
cmp
pop
les
xchg
packssdw
jnp
js
xchg
push
xchg
xor
pushf
sub
addr16
sbb
fldln2
stc
or
fsubp
not
mov
cli
cmp
or
int
sbb
pop
pop
movsb
dec
inc
adc
movsb
jecxz
push
popf
cmp
loopne
xchg
mov
push
push
pop
cltd
pop
mov
mov
aaa
test
enter
mov
push
aad
mov
loop
loope
sub
sbb
xchg
add
jb
or
lods
pop
cmpsl
sub
push
into
or
data16
jp
popa
xor
add
fisubrl
sbb
pop
bsf
adcl
add
sub
enter
lods
inc
call
imul
push
fs
lret
sbb
sub
sti
clc
popa
stos
xchg
test
stos
fiadds
in
mov
mov
shlb
or
aam
mov
dec
cmp
push
jecxz
and
scas
pop
sti
push
lea
adc
cmp
je
cmc
lods
pop
movsl
outsb
jmp
mulb
repnz
jmp
push
aad
jne
lret
xor
fwait
int3
jns
rcll
sub
sbb
jl
call
leave
adc
call
dec
pop
xchg
lock
fcomi
sti
lea
test
mov
and
insl
dec
xor
inc
dec
imul
xor
ljmp
jp
jg
mov
adc
scas
fidivl
xchg
push
sub
sub
xchg
jge
jne
add
lret
jmp
or
push
movsl
divl
or
xchg
enter
jmp
fnsave
mov
fcomi
dec
shrl
xchg
cmp
push
xchg
or
jmp
cmp
sbb
insl
dec
fs
inc
std
into
rcr
push
push
faddl
xorl
cmp
out
daa
mov
and
shrd
push
push
mov
scas
jae
push
addr16
jmp
es
imul
push
jp
mov
dec
sbb
sub
mov
sbb
out
xor
cmp
pusha
mov
out
out
mov
mov
xor
cmpsl
xor
adc
fiadds
pusha
aas
jno
dec
fistl
ljmp
xchg
nop
inc
gs
jb
xchg
testl
cmp
mov
jg
pop
mov
mov
and
daa
out
pusha
fmull
dec
pop
sbb
mov
ret
loope
fmuls
pop
cmp
xchg
into
jle
jmp
call
insl
sti
cmc
idivb
enter
mov
ss
dec
mov
xor
mov
subb
inc
xchg
add
lods
pop
or
inc
cmpl
push
sbb
add
out
xchg
sahf
enter
add
cmp
imul
das
gs
cmp
add
jo
arpl
inc
sbb
gs
addr16
xor
out
nop
mov
pushl
icebp
inc
xor
pop
mov
notl
jmp
les
dec
mov
std
in
jno
out
xor
lock
lods
xchg
push
cmpsb
subl
movsl
pop
cltd
movsb
sbb
sbb
in
sub
pop
cmp
fistl
and
cmpsb
test
das
test
xlat
loope
jbe
jne
or
adc
aaa
sbb
fs
icebp
xor
fcoms
loopne
in
insl
out
dec
fsubl
push
loop
shlb
stos
pushf
enter
shlb
xor
add
inc
mov
test
xchg
and
jb
mov
xor
mov
sbb
in
movb
xor
xchg
pop
adc
mov
in
clc
xchg
sub
pop
pop
inc
mov
test
call
push
adcl
call
mov
out
out
jge
push
dec
add
xor
imull
sbb
and
lea
into
inc
cmc
xchg
xor
sbb
insl
daa
rcrb
roll
dec
fwait
push
lock
jmp
mov
adc
data16
mov
insl
cmpsl
shlb
mov
ss
scas
fs
pop
sbb
xor
sar
cs
mov
dec
sub
push
mov
cli
add
es
add
jp
test
mov
jmp
pop
inc
test
aaa
jmp
dec
and
scas
jmp
cmp
pop
mov
pop
xchg
xchg
xor
pop
leave
out
movsl
rcrb
loop
test
enter
ret
out
call
push
push
in
or
jle
xchg
sbb
pop
cs
mov
arpl
jle
cmpsb
out
adc
mov
movsb
cld
mov
icebp
lcall
add
pusha
jns
shlb
pop
jne
sbb
mov
das
mov
int3
push
sub
repz
inc
jl
push
add
pop
into
and
xor
adc
pop
arpl
ficoms
stos
jb
pop
loopne
or
cmp
inc
shlb
jbe
inc
pop
test
fildl
mov
push
out
bound
pop
sbb
xchg
nop
push
jecxz
xchg
rorl
dec
in
lea
xchg
add
mov
lods
add
mov
cmp
ret
sbb
shl
insb
ljmp
shll
inc
fcoml
mov
push
mov
pop
subl
add
xor
loope
add
icebp
push
shll
sbb
or
push
mov
inc
enter
out
mov
add
std
push
xlat
out
xor
mov
dec
sub
das
xchg
out
gs
mov
sbb
mov
cld
jmp
add
mov
aad
mov
sbb
xor
adc
xchg
cltd
fimull
lock
inc
loop
jo
inc
inc
dec
outsl
lahf
stc
push
dec
xchg
subb
stos
insb
and
dec
adc
adc
lock
out
ret
and
sub
jnp,pn
or
fidivrs
sbb
mov
int
imull
imul
es
loope
idivb
jg
mov
push
insb
or
mov
xchg
pushl
dec
xor
decl
xor
ret
je
or
dec
out
dec
lcall
fmuls
jno
push
daa
iret
ror
icebp
push
inc
sbb
mov
jecxz
xor
pop
inc
mov
lcall
mov
clc
lcall
cmp
cmp
test
movsl
fcmovb
stos
or
or
stos
xchg
mov
push
test
sarl
push
add
and
imul
or
xor
jmp
icebp
test
mov
jecxz
sbb
addb
mov
pop
rol
xchg
push
std
mov
ja
fldcw
lods
pop
jge
sti
clc
cmp
sbb
xchg
push
lahf
fisubl
scas
dec
inc
jne
pop
lahf
jg
loope
mov
inc
push
add
sbb
rorl
dec
pop
and
add
das
jmp
iret
data16
mov
cmp
test
movsb
mov
cmpsb
push
test
negl
pop
aad
cmc
push
inc
repz
xor
xor
movsl
mov
and
lret
sbb
xchg
testl
into
mov
xchg
jnp
sbb
pop
loope
jmp
or
cs
ljmp
and
pop
push
fisubs
insl
loope
mov
imul
bnd
les
pop
lret
dec
mov
add
mov
pop
gs
xchg
mov
mov
pop
out
pop
sub
test
dec
sarl
push
test
call
cmp
aas
pop
outsl
jo
or
repnz
xchg
cmp
jmp
dec
push
sub
inc
std
dec
out
imulb
inc
sub
sbb
in
fnstsw
ds
jb
loopne
xchg
xlat
sarb
fnstenv
pop
imulb
js
out
imul
inc
nop
jmp
in
xchg
push
jecxz
mov
inc
popl
push
or
sub
pop
movsl
and
sub
andl
aam
xchg
sub
addr16
fnstcw
idivb
push
pop
and
mov
fldt
inc
cltd
ds
jae
inc
test
hlt
adc
mov
testb
cmp
inc
aaa
sbb
xchg
clc
jp
xchg
sub
and
sbb
push
push
imul
or
or
or
ljmp
mov
add
fwait
push
lods
rclb
adc
inc
scas
xchg
cld
jmp
out
loopne
jl
les
pop
dec
cld
or
push
fisttps
push
je
dec
jge
mov
fnstcw
cmp
fcmovb
repz
add
inc
mov
jbe
mov
aam
out
dec
icebp
or
jg
in
js
pop
xor
or
pop
dec
les
xor
fisttpl
pop
or
pop
daa
enter
stc
mov
add
js
and
arpl
mov
and
movsl
cmp
xor
or
dec
jmp
ja
push
dec
sbb
pop
loope
mov
mov
dec
cmc
in
add
add
andnps
pop
mov
cmp
cmp
cs
push
jecxz
inc
iret
add
add
test
sahf
mov
xor
and
out
data16
out
arpl
and
aad
pop
dec
xor
mov
xor
add
cmp
adc
jb
inc
jle
xor
push
xchg
xchg
fisttpll
push
push
xor
out
sub
lock
or
imul
and
cmp
xchg
repnz
stos
movsl
mov
scas
sarl
and
mov
repz
pop
and
jb
mov
xchg
jno
xchg
push
cmp
mov
cld
aas
andl
into
and
adc
mov
or
arpl
in
or
negl
jmp
adc
pop
imul
ja
ds
mov
and
pop
jne
gs
adc
mov
inc
mov
mov
mov
jle
mov
push
pushf
fdivl
mov
test
aad
lock
sbb
push
dec
add
mov
test
or
fwait
mulb
loop
int3
mov
add
inc
loop
scas
jp
cmp
xchg
movlps
mov
inc
imul
pusha
mov
lahf
mov
popa
pop
cmpb
dec
push
inc
push
pop
adc
je
imulb
push
dec
loopne
scas
mul
adc
push
cmpsb
stos
sub
cmp
pop
or
fwait
inc
test
test
mov
dec
dec
mov
jb
dec
out
gs
imull
imulb
dec
out
xor
sub
inc
mov
int
xor
pop
ficoml
subb
sub
sarb
inc
push
sbb
xor
in
jge
jne
sub
adc
mov
fisttpl
cs
xabort
mov
push
xchg
lahf
cwtl
aaa
fcom
shrl
cwtl
mov
imul
mov
pop
pop
aam
push
movsb
mov
jns
les
xor
popa
lret
push
pop
jle
lret
mov
fisttpll
mov
mov
push
xor
inc
inc
sbb
xchg
or
aaa
dec
sti
fsubrp
mov
in
add
pop
insl
dec
iret
jnp
aas
sbb
dec
xor
out
add
mov
sub
rcll
popf
std
mov
int
cltd
pop
pop
add
ret
js
jmp
jno
or
inc
movsb
or
rolb
xchg
jno
add
insl
stc
scas
aad
xchg
adc
or
xchg
mov
jns
movsl
fsubrp
jno
ret
sarl
mov
mov
mov
sbb
push
push
and
and
cld
sbb
mov
mov
popa
sti
pop
mov
mulb
sub
leave
jg
hlt
xor
daa
pushf
insb
or
sbb
jbe
dec
mov
push
mov
mov
add
ljmp
icebp
or
add
lock
add
shr
pushf
jg
mov
je
add
mov
incb
or
and
into
jb
cs
adc
xchg
mov
add
in
mov
pop
mov
add
imul
push
push
into
in
rcll
aam
rclb
jecxz
and
ljmp
or
insl
xchg
aam
shlb
lret
and
lock
sub
pop
sti
test
cwtl
imull
inc
rclb
scas
inc
dec
add
and
stos
std
into
loopne
mov
push
imul
jb
out
mov
bound
sub
mov
inc
xor
aaa
test
sbb
cmp
cmp
or
out
and
shr
pop
xadd
cli
or
out
xchg
push
lds
pop
mov
dec
es
shl
mov
subb
jae
movsl
inc
lock
dec
fnstsw
ja
lret
pop
inc
mov
push
pop
sbb
push
popa
test
decb
call
mov
fnsave
ds
xor
sbbl
cmc
sub
es
in
push
cli
jo
or
jno
in
bound
addr16
shll
xlat
and
push
push
pop
inc
push
pop
pop
movsl
pop
ja
loope
leave
xor
pop
inc
sbb
mov
inc
aam
int
mov
or
push
mov
jb
daa
pop
mov
fs
xchg
jns
pop
mov
pushf
data16
sti
inc
inc
insb
sbb
ret
out
jbe
adc
mov
jno
xchg
std
scas
or
or
sbb
mov
rorb
mov
push
sar
sbb
lret
push
imul
cmp
pop
sbb
enter
dec
mov
sub
popa
xor
sbb
out
jge
jle
dec
xchg
fidivrs
lods
xlat
out
xor
call
dec
xchg
test
gs
mov
aas
adc
popa
cmp
adc
pop
push
mov
adc
dec
dec
jmp
test
sbb
insb
in
xor
add
xchg
xchg
sti
test
cmpsb
cli
sub
jmp
divb
jl
movsl
jo
setb
mov
push
lea
lahf
adc
call
aam
add
push
insl
ror
jns
sbbb
xchg
inc
push
and
fucomip
add
jbe
out
and
mov
bound
cli
sub
stos
inc
enter
leave
dec
adc
dec
xchg
lds
fadds
fs
xchg
xlat
icebp
lock
shrl
cli
mov
sub
dec
out
dec
xchg
out
jns
xorl
data16
repnz
xor
xchg
fs
cli
data16
or
mov
xor
and
xchg
push
pop
push
mov
or
jno
in
jb
push
mov
call
outsl
loopne
mov
push
cmpsl
sub
xchg
jno
lret
xchg
push
add
dec
lods
dec
popa
xchg
imul
out
lret
mov
mov
andl
lock
cmp
shrl
inc
sub
das
insl
cmp
xor
clc
ljmp
cmp
popa
insb
xlat
insb
cmp
or
insl
mov
add
and
add
aam
ljmp
test
push
clc
xor
jmp
repz
fistl
jp
dec
shll
cmp
outsl
test
xor
and
sub
mov
popf
mov
mov
push
js
pop
pusha
outsl
jl
sub
cs
ja
inc
or
in
push
jmp
xor
sbb
adc
jae
shrl
add
push
popa
inc
scas
shrl
lods
dec
mov
cmp
push
and
xchg
pop
test
jle
pop
push
pop
xchg
insb
sbbb
pop
fsubs
addr16
sbb
push
xchg
stc
lods
fildl
pushf
mov
decb
cmp
sbb
inc
nop
pop
cmpsl
mov
int3
cli
movsl
fnsave
lret
cli
in
add
add
and
outsb
pop
rclb
push
aad
stos
adcb
mov
repnz
xchg
or
loop
and
sahf
rcll
out
sbb
xchg
push
mov
aaa
dec
jnp
mov
inc
fildl
push
push
inc
divl
mov
mov
cmp
icebp
jle
sbb
or
dec
inc
jo
xor
cld
mov
jp
cmp
mov
inc
add
in
xchg
sbb
push
popa
mov
stc
and
xor
popa
mov
aam
jp
lock
outsl
movsl
mov
cmpsb
add
add
mov
lods
dec
push
jo
push
cmpsb
scas
or
nop
bound
inc
cltd
repnz
cmc
or
lock
ds
je
data16
lods
jge
roll
popa
xchg
scas
dec
icebp
test
shrb
ret
jbe
ja
lock
mov
mov
lcall
dec
and
mov
dec
inc
fidivrl
mov
mov
fimuls
mov
sahf
pop
pop
xor
rclb
mov
adc
adc
fisttpll
js
and
dec
and
testb
or
movsl
mov
sub
leave
fimuls
dec
lods
shrl
cmp
push
inc
mov
das
jo
jmp
out
lods
outsb
sbb
cs
push
jns
js
sub
jno
mov
xorb
shrl
sub
test
orb
dec
inc
insb
or
inc
mov
stc
lods
sbb
push
fbstp
dec
test
adc
test
mov
push
xchg
dec
mov
xor
std
in
ret
push
lods
int3
int
ja
add
mov
sbb
push
adc
or
add
push
push
enter
jmp
mov
cltd
sub
enter
jmp
adc
mov
xor
push
imul
iret
and
push
add
int3
push
add
inc
adc
xor
push
push
mov
loopne
divps
in
fwait
mov
xchg
orb
inc
clc
sub
iret
std
inc
add
add
add
adc
xor
in
inc
fmul
int
push
push
and
inc
xor
adc
and
and
push
xlat
sarb
dec
outsl
jg
mov
leave
sti
jmp
lret
mov
sahf
out
sbb
push
orl
cmpsl
dec
lret
xchg
cmc
stc
ja
lahf
mov
mov
mov
shrl
into
or
mov
jmp
push
add
push
jb
mov
push
inc
stos
mov
jb
mov
enter
hlt
mov
es
pop
movl
out
xor
inc
jne
or
jo
es
mov
imul
mov
sbb
and
ret
gs
cwtl
sub
adc
push
stc
shl
negl
xor
adcb
enter
push
jmp
xlat
dec
clc
sti
mov
xor
xor
jmp
out
in
out
mov
adcb
inc
lock
sub
mov
fistl
push
not
jl
psubq
xlat
enter
arpl
pop
lahf
leave
lock
ljmp
xor
in
frstor
sbb
sub
dec
loopne
or
jmp
and
stc
hlt
push
mov
push
shl
ja
cmp
cmc
add
mov
pop
test
shlb
push
je
fsubrs
sbb
repnz
pop
lods
dec
inc
add
push
xor
or
aam
dec
xor
lods
mov
testl
outsl
xor
cmp
negl
inc
mov
jae
jp
xchg
cmp
and
sar
mov
xchg
lret
js
and
pop
jmp
pop
add
dec
leave
add
xlat
cld
adc
arpl
mov
xor
xor
add
lahf
pusha
jo
mov
xor
jno
and
jb
sahf
fs
cmp
fdivrp
test
pop
outsb
test
xor
push
data16
pop
mov
scas
in
push
fcomps
push
xchg
sbb
mov
xchg
jmp
out
aad
leave
scas
push
repnz
movsl
bound
in
sub
adc
mov
pop
pop
mov
int
outsb
jg
add
insl
pop
into
fwait
jbe
xor
stos
iret
movsl
hlt
ret
push
sbb
adc
mov
pop
aad
scas
pushf
int3
int3
push
fdivrl
mov
dec
lret
addr16
dec
jb
cld
cmp
shrl
sahf
in
cld
mov
sub
je
jecxz
sub
xchg
repz
cld
push
in
enter
xchg
sti
push
movsb
or
push
xor
jg
and
push
add
popa
sub
pop
inc
jle
fnsave
addr16
iret
lret
or
xchg
inc
test
loope
push
jl
jg
fildl
in
pop
mov
fdivrs
inc
jl
push
cmpsl
cmp
das
lds
xchg
inc
std
ror
add
and
orl
jmp
push
fucomi
and
or
mov
push
jnp
push
push
pusha
in
pop
lods
push
lcall
mov
adc
jae
adc
iret
push
stos
sub
out
lods
in
add
mov
je
cmp
idiv
imul
popa
ficoms
sti
in
mov
xor
mov
lds
dec
das
push
inc
in
lea
adc
mov
jmp
sbb
dec
dec
insl
inc
xchg
xor
clc
sbb
loopne
and
or
repz
pushf
push
int3
aaa
test
arpl
rorl
mov
gs
mov
leave
popf
jge
nop
ja
push
mov
sbb
dec
inc
or
inc
jns
xchg
pop
or
icebp
or
pop
dec
xor
mov
repz
cwtl
mov
lret
out
pop
inc
lods
rclb
aad
pop
test
idivl
xlat
or
pop
pop
or
xchg
and
test
push
out
xor
icebp
mov
adc
nop
dec
mov
pop
inc
leave
das
daa
bnd
stos
add
adc
mov
dec
xchg
push
jp
inc
mov
push
insl
dec
and
fnstenv
sub
adc
shlb
adc
lock
jo
popf
iret
xchg
adc
sub
lods
or
iret
mov
sbb
cmp
inc
mov
into
rcrl
je
mov
mov
adc
lods
push
mov
movups
stos
and
add
mov
xchg
shl
mov
mov
call
pop
mov
adc
jl
leave
cwtl
dec
ljmp
or
scas
xor
icebp
ret
pop
adc
roll
push
mov
jp
inc
adc
push
sub
mov
xchg
pop
mov
adc
clc
leave
ret
jnp
hlt
sub
jnp
pushf
mov
adc
test
fs
sub
cvtpi2ps
sub
sbb
inc
pop
mov
xor
push
outsb
push
xchg
sub
mov
jecxz
fsubl
pop
sahf
cmp
xchg
pop
mov
and
int
mov
mov
ljmp
in
jno
dec
mov
jg
mov
sahf
loopne
and
icebp
mov
cmp
sarb
outsb
int
rcl
push
lea
sarb
hlt
orb
mov
aad
xchg
aas
sub
xor
pop
imulb
stos
sub
shrb
dec
pop
les
imul
sbbl
out
jno
stos
and
mov
loope
mov
or
cmp
fildll
adc
sbb
or
in
lods
repz
sbb
stc
es
adc
pop
dec
inc
adc
rclb
mov
dec
xchg
ret
gs
shll
cmp
fistpl
adc
data16
mov
hlt
dec
push
cmp
jg
nop
call
imul
xlat
scas
call
lds
mov
stos
cmpsl
or
shrl
cmp
jns
and
aaa
test
ret
stos
lret
jl
mov
adc
mov
push
mov
add
xchg
dec
fwait
lock
cli
cmp
imul
mov
jp
push
mov
jg
pushf
inc
xlat
mov
int3
pushf
and
dec
icebp
adc
xchg
scas
loope
mov
push
lret
pop
cmpsl
dec
push
and
and
lahf
xchg
jmp
ds
jmp
in
inc
or
test
leave
jmp
pop
dec
mov
icebp
fwait
daa
xchg
add
insl
cwtl
in
cmc
dec
insb
aam
xchg
or
push
fstpl
pop
int
fcomp
inc
add
xor
insl
into
fsub
xor
and
jo
dec
lock
push
push
xor
and
mov
xor
insl
xchg
sbb
push
outsl
mov
stc
or
icebp
mov
sarl
ljmp
cmpsb
pop
test
jle
push
xchg
xchg
in
and
popa
call
stc
ret
mov
aaa
cmp
push
out
ret
nop
pop
fadds
repnz
daa
mov
in
fsubrl
push
xor
dec
inc
imul
mov
mov
xchg
inc
in
mov
mov
ss
inc
ds
or
push
movl
pushf
cmp
xorl
negb
adc
cmp
popa
jle
cli
arpl
cli
cmc
xor
insl
and
jb
ds
jmp
movsl
or
insb
mov
sub
sub
sub
fdivrl
mov
add
in
sub
xor
repz
pop
mov
imul
xorl
push
pop
push
sub
rorb
jecxz
pop
orl
inc
mov
sub
jne
cmp
pop
dec
repz
adc
and
pop
cmp
push
jae
adc
or
popf
mov
scas
fisttps
cld
pop
push
in
imul
stos
pop
add
xor
add
inc
mov
inc
mov
mov
cmp
pushf
or
cmp
add
aaa
pop
ret
fistl
pop
ljmp
cld
push
mov
roll
std
cmp
cmp
pop
jno
or
loope
cmc
fsub
mov
rolb
push
shlb
dec
push
loope
push
pop
mov
aaa
jb
fstpl
mov
jmp
mov
cmpsb
xchg
aad
hlt
push
les
jb
pop
mov
into
jp
pop
xor
lcall
inc
sbb
adc
dec
pop
lret
xor
jnp
popf
mov
bswap
scas
xor
jo
jmp
fs
jp
leave
sbb
sub
inc
xor
mov
cli
sub
fdivrs
daa
stos
lret
sbb
sbb
add
lods
ret
cld
pop
inc
in
pop
or
and
out
or
lret
enter
push
xor
shll
add
cmpb
rcll
fcoms
sbb
xlat
xchg
jecxz
dec
jecxz
jp
mov
push
bswap
or
xor
mov
roll
xchg
mov
insl
jg
and
std
cmp
xor
test
aaa
mov
sahf
je
adc
in
mov
arpl
mov
clc
out
push
xchg
pop
cltd
das
pop
outsl
xor
rclb
cli
pusha
mov
inc
xchg
sbb
repz
popf
call
fnstenv
sarl
and
mov
jp
pop
rcll
js
dec
mov
lods
xchg
jns
push
fstpl
in
in
lcall
mov
push
dec
lods
std
popf
shrl
jbe
mov
out
mov
jle
stos
fwait
call
in
sub
or
aad
jecxz
mov
or
adc
xchg
fisubrl
ja
dec
or
call
mov
int
push
mov
lods
xor
sti
std
sbb
pushf
incb
jbe
xchg
mov
es
aad
outsb
movsb
mov
push
call
ret
push
and
push
push
mov
out
ljmp
rcll
ror
mov
out
sbb
mov
daa
ja
jae
or
loop
mov
mov
mov
aas
or
lock
out
ljmp
out
fmuls
or
shll
fcoml
adc
jbe
or
stos
add
push
push
or
adc
jecxz
cli
subb
outsl
adc
jle
inc
outsb
out
mov
imul
fisubrs
faddl
pop
lret
mov
and
loopne
jecxz
pushf
sbb
mov
fistpll
nop
push
cwtl
push
ja
push
sub
insl
ss
and
fisttpl
jno
test
test
jl
jge
jae
push
iret
add
lods
insb
int3
cmp
ss
sbb
insb
cmp
fdivrl
push
cli
push
mov
clc
hlt
and
daa
inc
pop
and
mov
adc
test
cmpsl
fldenv
add
mov
or
dec
scas
das
imul
addr16
inc
jge
and
nop
cmp
xor
push
sbb
jbe
sbb
sub
mov
stos
pushf
mov
and
sub
cld
xorl
les
push
out
sub
aad
shll
ficomps
lods
in
pop
aam
stc
int3
mov
lods
cmpsb
testb
imul
cmc
adc
addr16
popf
push
xor
inc
nop
out
ss
out
xchg
arpl
mov
out
or
xchg
out
xchg
sub
sahf
test
or
mov
lock
add
and
fwait
sti
lods
test
in
rcl
or
or
imul
sti
sub
xor
push
arpl
outsl
mul
mov
add
push
mov
and
aaa
jae
in
adc
xor
outsb
sub
cs
lds
ljmp
punpckhdq
jecxz
dec
push
and
fsts
loope
stos
fstl
mov
sti
sbb
mov
xchg
xor
es
or
loopne
xor
cmpsl
fsubrs
mov
pop
imul
in
orl
clc
xchg
movb
jge
xchg
es
sbb
inc
lret
mov
leave
mov
mov
xchg
int3
add
and
and
das
data16
int
subb
leave
sbb
ja
inc
imul
xchg
cltd
xchg
pop
out
and
inc
cwtl
outsl
add
dec
nop
fildl
scas
enter
sub
sub
xchg
dec
pop
xor
xor
jle
dec
pop
jmp
cli
test
mov
cmp
cmc
scas
cmp
aad
std
xorb
inc
test
mov
test
jo
adc
orl
push
mov
mov
jle
add
sub
dec
ljmp
lock
movsb
ljmp
or
loop
jnp
or
lret
dec
lcall
lret
fcmovnbe
jecxz
xchg
in
xchg
inc
jno
push
push
sub
mov
ret
xchg
mov
mov
aad
dec
mov
aam
mov
xchg
imul
stos
test
jae
test
and
push
cwtl
mov
and
popf
xchg
pop
shll
mov
add
pop
dec
pop
addr16
inc
mov
adc
inc
xchg
inc
test
fsubs
cmpsl
loop
cmp
cmp
jno
push
rorl
in
fwait
jae
mov
popf
pushf
mov
add
sahf
sub
jno
cs
out
and
jno
fwait
pusha
or
and
jp
addb
pop
decl
std
push
out
test
dec
ja
pop
js
and
jb
jle
or
push
sbb
jne
cwtl
cmp
pop
cmpsl
mov
jp
sarl
dec
and
stos
out
pop
xchg
std
fldl
xlat
jle
mov
rcrb
mov
sbb
jmp
jg
call
mov
into
xchg
les
rclb
and
ds
loopne
fs
mov
xchg
lea
mov
adc
jns
mov
inc
jle
out
dec
jge
xchg
xchg
xor
pop
inc
popa
arpl
add
add
out
sbb
pop
stc
inc
enter
mov
adc
push
das
add
movsl
push
push
sti
xchg
adc
pop
mov
and
mov
and
xor
and
imul
pushf
push
add
aas
pop
fidivrl
andb
insb
aas
stos
add
add
pop
jno
and
dec
fiadds
aam
cmpsb
movsb
mov
aam
and
sar
inc
sbb
inc
pop
push
cs
cmp
xor
sbb
xchg
loope
pusha
inc
imul
mov
add
jmp
pusha
sub
shl
mov
mov
or
adc
mov
pop
bts
xor
cwtl
xchg
pop
mov
mov
stos
mov
mov
mov
rep
or
out
in
push
shl
and
test
into
pop
aad
mov
fcomp
push
cwtl
push
push
test
incl
inc
rcrl
pop
mov
fldl
mov
lds
dec
stos
insl
sarb
imul
outsb
dec
adc
fistl
arpl
add
pop
and
jnp
and
xor
test
imul
pushf
outsb
gs
sbb
inc
cli
mov
in
pushf
in
push
fs
imul
dec
addr16
repz
dec
and
ret
mov
push
cwtl
sbb
jmp
sbb
add
push
out
dec
test
xchg
xchg
hlt
adc
pushl
mov
insb
sub
xchg
mov
dec
loope
mov
or
fwait
sbb
outsl
cmp
stos
andb
sbb
scas
sub
xchg
gs
sub
pop
jno
add
sti
ret
dec
fucomp
inc
fwait
notb
ja
or
xchg
pop
push
loopne
movsb
pop
rorl
int3
mov
lods
lea
roll
xor
xchg
cmp
xchg
inc
aaa
out
in
ds
jne
mov
loop
or
negb
ljmp
leave
int
outsb
or
mov
sub
iret
loopne
nop
test
rcll
aad
sbb
fisttps
sbb
aas
loope
jle
in
push
cmpsb
jle
sub
cs
call
jns
jl
inc
push
and
pop
xchg
mov
loope
sub
loopne
in
dec
mov
dec
sub
pop
test
repnz
cwtl
lea
adc
and
loop
inc
loopne
fcmovbe
sahf
push
add
idivb
repz
loop
jns
lock
push
pop
adc
and
fldcw
jns
in
jecxz
mov
lods
mov
lcall
jnp
xor
xor
lret
test
inc
iret
loop
pushf
dec
push
or
repnz
and
icebp
xchg
xchg
stos
mov
mov
cmp
test
pop
jecxz
scas
shll
push
scas
cmpb
adc
cs
and
mov
pop
andb
je
xor
cli
mov
push
xor
pushf
cmp
sbb
dec
cmp
jae
jl
fistpll
fmuls
mov
sbb
imul
daa
aam
lods
addr16
xchg
cwtl
cmp
mov
inc
out
inc
shrb
int3
add
int
xchg
out
pop
loopne
into
push
xchg
sahf
sub
int
test
nop
inc
jge
loopne
xchg
test
pusha
push
xchg
dec
js
movsl
shlb
add
das
pop
push
pop
dec
std
cmpsb
fiadds
add
and
popa
outsl
decb
aam
adc
test
cmp
shll
add
adc
adc
stos
jne
or
and
mov
pop
add
sahf
push
sbb
std
or
fs
ja
mov
mov
mov
xor
lds
mov
mov
pop
cli
cmp
flds
bound
aam
loop
call
or
into
mov
or
jae
mov
lret
pop
pop
incb
mov
jmp
and
or
frstor
pusha
lcall
ret
pop
mov
cmpsb
jge
pop
and
repnz
push
int3
add
cmp
pushf
icebp
in
sub
testl
xchg
inc
and
jge
cmp
mov
xchg
mov
filds
enter
or
stos
outsb
jne
push
psubw
adc
into
jbe
addr16
adc
sub
jmp
cli
adc
mov
and
out
dec
popf
mov
and
outsl
int
lds
mov
jns
or
lds
dec
imul
std
sbbb
cmp
add
mulb
fldl
xor
nop
mov
cld
add
mov
jno
icebp
mov
cmp
inc
daa
or
mov
lods
loope
jge
test
and
pop
xchg
jae
fs
xor
dec
stos
dec
mov
xchg
bound
dec
mov
daa
xor
dec
xchg
lods
aaa
pop
loopne
mov
cli
in
in
lret
adc
cwtl
cwtl
scas
mov
sub
adc
icebp
stos
loope
sti
pop
xorl
idivl
xchg
lret
jae
mov
inc
and
rcrb
rolb
sub
jnp
or
add
cmpsb
test
cmc
icebp
fdivs
or
jbe
inc
xchg
ror
inc
pop
push
ja
dec
mov
inc
mov
mov
mov
into
cmpsb
push
push
push
mov
mov
sub
mov
and
cwtl
jne
or
or
adc
jmp
push
and
xor
jl
dec
outsb
inc
xor
imul
outsb
repnz
mov
lds
push
dec
pop
cmc
aam
sub
mov
lock
mov
in
xor
xchg
notb
jg
mov
dec
xchg
push
shll
cmp
fbld
enter
jns
ror
xchg
popa
gs
mov
in
mov
mov
loope
and
movl
mov
xchg
sbb
clc
mov
adc
mov
xchg
adc
and
jae
or
mov
aam
mov
sbb
fwait
add
and
inc
fistpll
adc
sbb
xchg
push
lea
test
push
cmp
cs
std
cmpsl
fiaddl
je
jmp
mov
jle
xor
mov
mov
hlt
or
mov
xchg
mov
fistps
mov
mov
xchg
pop
adc
mov
mov
js
sub
xor
xor
pop
cmp
repnz
sbb
pop
popf
loope
add
shrl
pop
mov
mov
shll
xchg
movsb
das
iret
out
push
xor
or
or
mov
outsb
jbe
adc
mov
xchg
fists
jb
mov
sub
sarl
popa
or
add
test
jnp
shll
cs
das
mov
or
sbb
dec
pop
xchg
inc
jmp
cmp
mov
dec
mov
or
decl
stos
pop
ljmp
and
add
pop
test
rcl
inc
pop
ss
mov
leave
jmp
out
insl
daa
fiadds
add
push
shlb
lahf
int3
adc
rclb
xor
loopne
rcll
pop
sub
aam
xorl
arpl
push
fstpl
mov
icebp
push
pop
or
iret
add
sbb
pusha
fsubrs
mov
pop
push
inc
jp
lret
dec
aad
inc
into
fmuls
je
subl
leave
hlt
popa
mov
repz
aas
mov
jl
std
mov
xchg
dec
mov
push
fwait
sub
aaa
es
data16
jo
loop
lahf
push
pop
out
outsl
jg
pusha
fidivl
fnstenv
xchg
push
mov
push
and
je
mov
insl
inc
aas
aam
loop
cvtps2pi
or
cmp
insl
test
jle
and
ja
adc
fwait
mov
cs
popf
push
insb
inc
arpl
xchg
mov
lret
sahf
mov
xchg
inc
dec
mov
fisubrl
sbb
sbb
rolb
mov
in
add
jns
add
nop
mov
repnz
pop
jmp
fnstcw
stos
mov
cmpsl
pop
inc
out
adc
mov
roll
orl
iret
in
xchg
test
aam
fisubs
push
or
lock
dec
movsl
push
xadd
inc
cltd
call
xorb
test
dec
sahf
mov
jmp
and
addr16
jno
inc
int
jp
mov
aas
in
inc
pop
push
mov
mov
mov
pop
pop
mov
cmp
cmc
lds
lock
add
cmove
pusha
inc
sbb
xor
jne
popl
test
adc
push
shll
or
bound
cmpsb
xor
add
fists
rorb
sahf
dec
imul
push
test
fdivl
lods
xor
cmc
push
mov
in
add
jg
jg
add
sub
divl
les
aad
add
sbb
cwtl
cmp
cmc
fbstp
lret
and
jg
jb
add
and
data16
adc
adcb
inc
test
and
xchg
lods
nop
or
xchg
outsl
pop
les
mov
xor
push
aas
hlt
dec
dec
rcll
mov
dec
pushf
iret
xor
out
test
aaa
stc
push
push
push
ljmp
insl
add
stos
stos
jl
mov
push
jnp
push
dec
hlt
pop
xor
xchg
loop
fnstcw
push
jbe
nop
dec
xor
jl
fdivrs
les
das
scas
push
stos
jb
test
sarl
in
arpl
dec
fmul
mov
cli
outsb
mov
inc
jmp
aad
fisttpll
icebp
lods
ret
sub
cs
sarl
mov
cmc
gs
and
lds
aaa
cld
jle
jns
jno
mov
imul
push
mov
xor
jbe
push
xchg
push
jae
cwtl
add
adc
imul
mov
addr16
pop
cmpb
ret
mov
mov
in
pop
and
imul
out
push
xchg
fldt
jg,pt
jge
push
jecxz
lods
sbb
xor
jae
adc
lcall
pop
pop
dec
or
adc
sbb
pop
mov
xlat
in
mov
mov
sub
mov
sub
lods
push
jo
out
cld
dec
xor
std
jne
sub
scas
iret
sbb
sbb
mov
sarb
lods
sbbl
sarb
push
add
sub
test
jge
stos
mov
lods
shl
leave
andb
faddl
pop
enter
jb
add
jns
mov
pop
or
jne
outsl
add
cltd
jmp
fidivrl
dec
inc
mov
pop
imul
mov
xor
dec
mov
jbe
sti
je
movsb
iret
movsb
xor
mov
pop
cmp
jo
jbe
sti
daa
lcall
push
js
outsb
push
pop
loop
mov
adc
aam
mov
mov
pop
int3
xchg
jmp
xchg
add
pusha
aas
cmp
add
mov
mov
push
mov
cli
ret
div
imul
dec
or
pop
aaa
mov
pop
pop
xor
mov
cltd
iret
es
hlt
mov
out
aaa
stc
or
pop
mov
loopne
mov
outsl
mov
rolb
mov
mov
std
fdivrp
lods
pushf
xor
jge
mov
inc
rorl
test
andb
mov
loopne
fwait
std
mov
jmp
shrl
js
dec
mov
js
xor
bound
loop
sbb
or
and
mov
lods
jae
push
add
push
mov
inc
in
js
fsubp
mov
les
test
insb
rol
inc
or
mov
aad
test
les
leave
lea
hlt
jp
jo
cli
jo
jg
jg
stos
sub
rorb
mov
sbb
xor
and
aad
mov
adc
xchg
pusha
xlat
or
aaa
xchg
loop
mov
jp
clc
dec
cwtl
xchg
jo
out
sub
mov
pop
cmpsb
cmp
dec
inc
cs
pop
outsb
mov
pushf
clc
adc
inc
xor
ret
cmp
pop
ds
jge
sahf
outsl
incl
popa
out
fildll
popa
movsl
mov
packuswb
cltd
shlb
push
xchg
std
cwtl
xchg
out
add
adc
push
iret
adc
mov
pop
lahf
lahf
neg
not
and
mov
repnz
imul
and
sub
neg
pop
cmp
das
hlt
sub
or
fdivrl
pop
fmulp
scas
cld
cmp
jecxz
aam
repnz
pop
pop
scas
stos
stc
xor
mov
mov
cmp
sti
sub
ss
and
insb
loop
dec
test
or
addb
cmpsb
ja
and
enter
mov
cmp
push
xchg
sub
and
fsubrs
pop
shl
insb
cs
inc
adc
int
sub
pop
dec
mov
xorb
sbb
add
sub
inc
push
push
sub
shlb
dec
dec
xchg
cltd
push
dec
jp
icebp
xor
pop
bound
in
or
adc
pusha
jmp
mov
and
push
insb
push
xchg
xchg
je
fdivp
call
test
out
dec
ficoms
push
enter
mov
xor
and
cltd
mov
mov
in
call
cmp
xchg
sub
xchg
sub
add
out
cmp
lret
rol
rolb
mov
xchg
pop
jmp
in
iret
mov
stc
andb
test
rolb
jno
sub
inc
lcall
mov
xor
push
mov
inc
fs
enter
jecxz
lcall
aas
lcall
leave
xor
mov
rep
cmp
dec
stos
out
popf
xchg
imul
add
mov
movswl
loop
pop
sbb
pop
xlat
push
repnz
mov
out
sub
or
xor
loope
push
loope
les
insb
test
push
cwtl
mov
inc
pop
jb
fsts
mov
inc
fildll
and
out
mov
and
inc
sbb
jnp
ja
js
sbb
push
ja
jl
dec
push
popf
dec
in
pushf
jmp
mov
addr16
fadds
dec
sbb
imul
movsl
push
cmp
push
jb
lret
sti
xor
jb
sahf
push
ljmp
das
or
pop
xchg
shll
fildl
movsb
sub
pop
out
cld
loopne
js
les
cmp
int3
aam
sbb
mov
out
and
fsubs
and
aas
xchg
and
iret
pop
fcmovne
push
xlat
jecxz
jg
mov
jle
sub
in
add
and
ret
dec
mov
and
fdivp
push
adc
daa
shrb
aaa
mov
cmp
cs
inc
xchg
mov
cwtl
out
add
cs
mov
out
sbb
dec
in
jno
xor
or
xor
mov
ja
push
addr16
add
sbb
push
jae
xchg
enter
adc
push
rorb
or
xchg
push
test
outsb
sub
rorb
leave
cmp
xchg
popf
aad
lods
adc
jl
xchg
test
xchg
in
sti
fiadds
pop
or
outsl
js
gs
movsl
sahf
adcb
out
in
cmpsb
je
testb
fst
mov
fbstp
sub
hlt
outsb
mov
out
mov
cmp
addr16
jmp
or
sbb
mov
jnp
movsl
jecxz
int3
push
xchg
jmp
mov
imul
scas
lods
cmpsl
movsb
adc
test
shll
cwtl
je
ja
pop
fsub
xlat
dec
adc
cltd
imul
loopne
push
rcrl
xor
inc
cmpsl
mov
cld
xchg
jl
sarl
int
shrb
mov
mov
add
jo
xchg
cmpsb
xor
jnp
movsl
in
jmp
mov
les
in
dec
insb
adc
sahf
pop
pop
inc
sbb
sub
xor
adc
cmpl
fsubp
std
stos
repz
mov
cmp
sbb
dec
popf
cmp
add
mov
test
add
repz
clc
mov
add
test
xchg
sbb
mov
and
mov
ror
dec
and
int
out
testl
jo
adc
mov
lcall
push
jae
ret
lea
jg
pop
out
dec
out
mov
push
or
pop
push
mov
fistl
and
sbb
mul
jge
sub
idivl
cmp
jno
cmpsl
data16
jmp
adc
and
jnp
enter
mov
and
lret
jae
mov
and
ds
dec
or
es
fldcw
mov
inc
cmp
sub
popa
and
pop
jb
cmp
mov
idivb
or
and
cmp
mov
mov
fisubrl
addr16
fcom
adc
add
test
jo
xchg
xchg
mov
xor
jl
out
sarb
sbb
fwait
enter
push
clc
inc
sbb
push
ja
xor
jo
pop
test
fwait
mov
sbb
loope
xchg
pop
inc
xchg
pop
loopne
stc
and
outsb
aaa
out
xchg
fcomps
cmp
in
mov
std
dec
pop
sub
pushf
add
push
test
lcall
dec
cmp
pop
pop
jle
or
sub
cmp
pop
fwait
xor
jo
or
add
loopne
loop
inc
pop
adc
aaa
fildl
push
cmp
test
loop
test
test
outsb
pushf
push
dec
in
sbb
dec
sbb
out
loop
push
insb
xchg
dec
mov
or
jo
xchg
popa
mov
in
test
mov
mov
jb
js
xchg
mov
xchg
test
xor
mov
sub
jb
xchg
scas
outsb
mul
mov
mov
push
into
adc
jae
adc
dec
add
cmpsb
mov
daa
push
inc
cltd
mov
push
cmp
mov
je
movsl
test
xchg
aam
imul
jge,pn
mov
rorl
or
mov
cs
aas
test
push
cmp
dec
cmpb
ja
loope
subl
nop
xlat
pop
and
sbb
movsb
rcr
mov
jmp
xchg
mov
adc
pop
in
xchg
sbb
or
ljmp
and
movlps
fdivrl
dec
and
and
outsb
and
gs
je
cld
sbb
mov
fisubrs
inc
int3
int
popf
sub
jb
aas
push
or
iret
dec
and
fimuls
inc
into
push
xchg
movsb
inc
cmpsb
adc
jg
das
out
add
pop
push
cltd
enter
inc
aaa
pop
fcoml
fs
sti
lods
dec
int3
iret
mov
push
mov
and
int3
jne
pusha
ret
shrb
fwait
ficomps
jns
sub
add
loop
xchg
decb
and
sbb
imul
out
faddl
fistpl
xor
lcall
push
scas
cmc
push
jae
xchg
adc
arpl
lcall
xchg
popa
lcall
dec
cmpsb
push
or
lods
pusha
inc
and
imul
mov
sbb
bound
dec
js
sub
or
outsl
mov
stos
lcall
shrl
push
sahf
popf
inc
xchg
dec
dec
js
mov
loop
int
xchg
cmpsb
mov
cmpsb
ja
test
pop
mov
pushf
push
cmp
insl
adc
fidivrl
in
ljmp
push
add
je
das
mov
outsl
dec
xchg
aad
or
or
pushf
int
inc
lret
out
cmp
outsb
dec
sub
subb
xchg
jmp
xor
daa
adc
arpl
dec
loope
cltd
mov
in
test
fwait
push
mov
aad
hlt
mov
push
cmp
mov
xor
sbb
in
test
in
int
and
push
adc
aas
inc
mov
sbb
pop
sbb
and
sub
movsl
lea
or
dec
inc
cmp
and
fbld
push
xchg
xchg
jo
stos
leave
pop
mov
fld
sbb
push
imul
sbb
sbb
xor
adc
cmp
jno
insb
cltd
pop
sbb
xchg
push
ret
add
jbe
addr16
fs
mov
push
push
popf
ret
fnstenv
stc
inc
adc
ret
or
xor
or
sub
add
sarb
rolb
sarl
mov
mov
or
jecxz
pop
or
pop
pop
xchg
movsb
popf
mov
inc
int3
pop
insl
add
imul
std
out
fs
idivl
pop
and
inc
jns
mov
inc
fldcw
sti
in
xchg
test
adc
or
lahf
xchg
xor
jbe
pop
mov
inc
pushf
push
mov
dec
cmpsb
pusha
scas
push
movsb
adc
or
push
cmc
xchg
sbb
aas
sub
and
fistpll
mov
mov
xor
popf
int3
pop
add
lea
pop
add
and
push
mov
out
ds
ss
and
jnp
imul
fisubl
cvttps2pi
addw
xor
fwait
mov
mov
jmp
insl
xchg
or
ss
testb
inc
xchg
push
sbb
ljmp
mov
mov
sub
push
xlat
inc
inc
subl
xor
mov
mov
mov
xlat
jp,pt
or
ds
pop
or
mov
call
fsubs
jo
jmp
call
cmp
cmpsl
fsubl
outsl
xchg
popa
es
xchg
push
mov
inc
lahf
icebp
imul
pop
dec
in
lock
xor
sbb
push
lahf
in
inc
mov
dec
adcb
ret
xchg
bound
sbb
pop
call
xor
es
lret
repz
shr
pop
leave
test
sub
mov
pusha
lods
xor
lret
jnp
lods
and
shrl
out
shll
in
mov
mov
popf
lahf
xor
cmpsl
xor
jnp
push
sub
adc
cltd
add
int
std
idiv
aaa
ss
and
imul
arpl
in
xchg
add
pushf
popf
daa
es
clc
push
inc
stos
sahf
insl
inc
xchg
cmp
inc
das
cli
adc
jge
pop
jge
push
push
mov
and
ss
inc
call
push
and
jne
pop
fcompl
adc
sub
mov
xchg
icebp
aaa
pop
jns
and
jecxz
nop
movsb
xchg
inc
leave
adc
mov
ret
pop
es
and
movsl
inc
movsb
mov
inc
addb
shrb
xor
pop
aam
aaa
outsl
je
ret
jno
fisubrs
mov
fdiv
add
pop
sub
add
ret
int
add
jp
aaa
aam
lods
pusha
sbb
mov
adc
mov
lret
xor
dec
aas
cmp
popf
repz
cmp
fistpll
leave
jcxz
out
cmpsb
inc
mov
and
xchg
xchg
aam
dec
push
mov
in
lock
aad
mov
jne
das
and
mov
add
sbb
jb
mov
into
inc
and
or
push
push
sbb
fwait
outsl
test
ret
jmp
mov
pop
es
fsubrs
xchg
jmp
push
mov
fsubrl
or
push
mov
cmp
jns
xchg
movsb
or
sbb
push
sarl
inc
xor
mov
sub
fcoms
test
cmp
lea
pop
pusha
mov
test
mov
jb
adc
aas
leave
jl
mov
push
inc
lcall
sbb
test
adc
je
and
fs
enter
scas
jno
pop
xchg
ljmp
jl
pop
cmp
add
or
fs
fstps
ljmp
aad
and
and
or
mov
pushf
add
dec
push
and
mov
stos
mov
adc
sahf
call
fistps
mov
sub
inc
rcr
js
jmp
push
pop
add
adc
jb
xchg
rcr
rcrb
sub
cmpsb
fnsave
jle
jle
insl
es
cmc
test
rclb
mov
aam
and
jb
imul
pushf
mov
cmp
pop
fsubs
popa
sub
mov
addr16
and
adc
outsl
dec
out
sub
add
dec
cmp
xor
mov
cmc
fcmovnbe
xor
ss
call
sbb
in
fldt
xlat
scas
mov
repnz
test
gs
xchg
dec
stc
pushf
ret
pop
sub
push
push
jnp
adc
cwtl
mov
insl
cmp
icebp
frstor
mul
aam
rcl
insl
mov
mov
sbb
out
mov
xor
icebp
loopne
jge
jmp
mov
xchg
jns
fnstenv
cmp
inc
xchg
lods
xchg
idivl
icebp
lcall
dec
inc
mov
xor
fsts
int3
movsb
xchg
adc
mov
inc
popa
in
dec
mov
iret
test
fimull
pop
add
push
pop
outsl
cmp
and
lods
push
add
mov
and
out
adc
loop
subl
outsl
mov
subl
or
stos
movsl
outsl
xchg
pop
inc
gs
mov
dec
icebp
aad
xlat
or
std
mov
sahf
push
pop
popf
call
cltd
push
popf
sbb
mov
imul
mov
adc
out
adc
pushf
mov
dec
ret
cmp
xor
or
adc
mov
mov
incl
dec
mov
popa
inc
sbb
loopne
pop
fwait
or
mov
xor
add
add
xchg
inc
inc
add
mov
sub
push
pop
and
cld
mov
out
cmp
mov
int3
pop
mov
daa
pop
rolb
lea
mov
and
in
orb
add
test
andb
dec
adc
scas
dec
loopne
cs
jp
adcb
mov
out
xor
andl
ja
add
mov
fsubrl
out
pop
xor
and
sbb
mov
hlt
hlt
aad
add
dec
inc
xchg
mov
into
push
xchg
idivb
or
sbb
cmp
adc
cmp
aaa
pusha
mov
cs
push
mov
test
mov
js
pop
adc
inc
pop
loopne
je
inc
insl
je
mov
testl
sub
rcl
int3
sbb
mov
xor
int3
add
xchg
jae
mov
in
aam
xchg
out
push
mov
mov
test
leave
popf
bound
add
inc
sbb
fmull
stos
push
lahf
mov
pushf
cmp
cmp
int3
mov
loop
jg
or
jecxz
gs
lret
fs
lods
hlt
xchg
mov
ret
xor
pop
inc
cmp
push
outsb
dec
pop
js
jl
adc
jmp
int3
push
xlat
fcoml
push
cwtl
outsb
int
sub
enter
push
sub
xchg
call
fs
lods
push
cmpsl
lods
pop
xchg
mov
cmp
loop
inc
lods
mov
lock
push
fdivl
jg
xorb
addb
jl
sbb
ja
xlat
xor
insl
pop
dec
jg
xchg
mov
iret
mov
gs
mov
lcall
lahf
mov
jmp
mov
mov
jg
push
dec
pop
out
sub
or
stos
fbstp
xchg
dec
shr
mov
jp
adc
cmpsl
aam
xchg
sbb
int3
and
adcb
jnp
xchg
dec
mov
pop
loopne
push
aam
sbb
jo
scas
pusha
dec
push
sub
and
setne
pop
adc
fimull
loopne
and
inc
shrb
call
fsubrs
popf
jmp
leave
xchg
shll
lahf
dec
dec
dec
push
imul
ret
sbb
in
aaa
loope
jmp
stos
inc
mov
mov
cmp
push
xor
xchg
aad
in
in
jl
or
push
mov
xchg
out
pop
iret
addr16
addr16
adc
std
xor
xchg
roll
mov
arpl
and
js
sub
sbb
subl
or
loopne
xor
sub
in
jne
mov
imul
adc
adc
xor
mov
push
mov
dec
cmp
xor
jmp
icebp
jmp
lret
cli
add
sbbl
pop
sbb
push
repnz
xchg
xchg
in
leave
pusha
cwtl
out
or
repnz
mov
in
adc
xor
add
jge
push
js
mov
sbb
jnp
fcompl
shlb
cmp
lea
xchg
ds
clc
mov
sbb
sti
cld
lds
in
pop
sbb
inc
xor
mov
dec
sub
scas
popa
js
push
push
fs
push
pop
pop
psrlw
jmp
das
call
imul
inc
cld
cli
jnp
mov
dec
inc
les
mov
cmpsb
cmc
rclb
insb
mov
or
mov
add
adc
movsb
sbb
sub
sub
mov
rorb
rol
dec
and
sti
jbe
pop
rorl
mov
sbb
cmpsb
or
push
mov
movsl
xor
xchg
xor
cmova
fwait
pusha
imul
ret
adc
ret
out
lods
xchg
in
into
push
pop
jne
mov
data16
inc
push
out
mov
and
mov
jo
and
or
fmuls
negb
sbb
cwtl
sar
repz
imul
adc
pop
jnp
mov
mov
push
movsb
rcll
test
pop
inc
and
addr16
data16
push
adc
jno
adc
cmp
out
in
jp
sub
addr16
add
jb
xchg
inc
cmp
push
sbb
xchg
inc
test
out
sbb
jae
sub
out
loope
xchg
inc
imul
inc
imul
adc
pop
jns
push
pop
inc
jp
out
fiadds
in
pop
sub
push
push
cltd
insl
cld
insb
roll
cli
stos
pop
dec
inc
nop
xor
mov
cmp
das
and
pusha
lcall
or
lods
inc
divb
es
sub
into
add
jne
pusha
std
out
sahf
lahf
loopne
jae
mov
punpckhwd
movsl
push
jae
sub
jg
in
inc
or
mov
movsb
dec
push
aas
cwtl
movsl
cmp
sbb
mov
dec
test
cmp
xchg
insl
dec
push
xor
cmp
mov
clc
mov
into
lret
adcb
xor
xchg
jo
add
xor
rcll
cmpsl
sbb
sbb
das
aad
stos
loop
xchg
ja
iret
push
pop
push
jp
xchg
icebp
pusha
enter
adc
inc
shlb
push
pop
stc
sub
rorb
pop
mov
out
iret
mov
sub
xchg
pop
shlb
push
sti
add
cmpsl
dec
mov
pop
jp
jmp
pop
xchg
and
lods
sbb
sub
cwtl
sbb
aaa
jle
jle
sub
mov
push
jae
jmp
insl
je
jge
call
dec
or
gs
xchg
sub
outsb
xchg
add
cmp
adc
push
sub
test
sbb
jmp
mov
jbe
je
jae
addl
mov
push
aas
xchg
int
pop
js
mov
into
gs
lret
sub
inc
mov
pusha
add
movsl
lcall
xorb
xchg
out
xchg
push
movhps
mov
jne
test
fidivrs
xlat
mov
jno
dec
mov
mov
push
inc
xchg
in
rclb
or
sub
and
out
push
push
adc
push
fstps
jecxz
shlb
pop
adcb
xchg
repz
or
movsb
mov
test
test
mov
mov
icebp
cmp
repz
xchg
hlt
test
or
inc
lret
sub
xchg
test
enter
cmp
sub
fstpl
cmp
ljmp
mov
and
adc
shl
mov
pushf
push
popf
out
test
cld
dec
jle
cmp
popf
inc
es
inc
daa
in
fsubr
xchg
out
test
movsl
or
mov
push
in
out
inc
idivl
dec
sahf
and
adc
pop
ffree
or
cmp
loop
push
insl
aaa
adc
adc
pop
enter
insb
xchg
outsl
xlat
gs
repz
and
in
dec
addr16
dec
add
mov
xor
and
rorb
bound
jne
sbb
add
mov
rorl
jns
push
mov
and
cmp
outsl
lret
nop
insl
out
push
mov
repnz
add
lea
cli
aad
in
or
push
or
jo
inc
cltd
cwtl
mov
pop
in
pop
jle
pop
outsl
stos
fnstenv
sub
sti
in
mov
jns
pop
adc
ljmp
mov
jg
push
nop
loop
jnp
fwait
hlt
inc
enter
sbb
add
sbb
pop
outsb
daa
jb
mov
push
idivl
into
shl
mov
or
in
repnz
call
push
or
ficoml
cmp
int3
shrl
xchg
add
xor
xchg
out
ret
or
arpl
sti
ret
out
repz
adc
rcrb
push
gs
aam
inc
mov
test
mov
add
fs
and
pop
jge
adc
arpl
pop
repnz
mov
jg
decl
scas
inc
push
repz
jle
push
or
insb
leave
insb
mov
inc
xchg
les
aam
push
lods
fidivrl
divl
mov
pop
outsl
test
xor
mov
mov
jae
ja
or
mov
fucomip
push
lret
loop
add
push
mov
mov
int3
push
lcall
xchg
pop
lcall
mov
loope
dec
mov
sbb
fsub
fidivrs
mov
mov
rclb
rcrl
push
aas
hlt
inc
test
das
mov
inc
ffreep
mov
hlt
xor
fcompl
idivw
mov
lea
push
repz
pop
push
jnp
push
add
sub
call
iret
ds
outsl
jl
lock
fistl
lret
cmp
mov
repnz
and
ja
sbb
test
mov
sti
gs
cmp
inc
mov
pop
movsb
cmpsl
dec
sahf
in
add
xchg
lods
in
lea
inc
xchg
sarb
sub
dec
pop
repz
cmp
xchg
xchg
xchg
cmpsl
ss
daa
clc
mov
scas
and
jp
not
and
cmp
jne
or
jnp
jle
inc
mov
push
into
arpl
fcoml
movsl
add
imull
sub
popa
lea
mov
pop
fbstp
jp
shrb
xchg
stos
stos
mov
cmp
or
adc
mov
xchg
aas
mov
mov
sahf
lret
icebp
out
pop
mov
fistps
clc
mov
jno
xchg
fnsave
out
mov
sbb
push
adc
movsl
mov
dec
ja
cmp
jno
pop
adc
stos
mov
lret
add
cmp
jg
push
inc
adc
push
jge
sbb
int
fs
movsb
pop
out
fcmovne
jl
and
rol
mov
jo
cmc
fisubl
sub
or
lahf
dec
lods
sbb
fwait
imul
int
push
out
mov
sarb
imul
nop
jo
popf
icebp
aam
popl
jl
lret
xchg
pop
into
push
cli
mov
aaa
test
mov
int
mov
mov
mov
js
inc
jmp
cs
push
mov
dec
shr
mov
in
shl
sbb
inc
popf
jo
mov
sbb
sub
xchg
mov
imul
sbb
sub
test
lock
aam
mov
aaa
and
jle
xchg
lock
cs
xor
andl
arpl
shrb
sub
lahf
insl
dec
cmpsl
push
pop
adc
cmp
lock
fildl
inc
push
hlt
loop
fdivrl
xchg
aaa
sub
fst
dec
mov
ror
icebp
inc
xor
lods
sbb
into
sti
lods
dec
ja
popa
jmp
or
sti
jns
jle
daa
icebp
mulb
inc
adc
mov
push
mov
add
jbe
xor
lret
cmp
adc
and
xchg
jecxz
test
or
lods
hlt
movsl
mov
fldcw
adc
xor
ss
jne
mov
rcr
movsb
xor
cs
std
movsb
sarb
pop
pop
lret
mov
jns
rorl
mov
adc
divb
adc
loop
aas
inc
insl
pop
movsb
cmp
rorl
out
movsb
or
dec
mov
out
std
pop
xor
and
cmpsb
and
or
jo
add
aam
mov
lods
push
sub
pushf
jae
out
repz
rorb
pop
imul
cmp
sbb
neg
jg
sbb
fdivrp
mov
lahf
fsub
out
mov
mov
clc
xchg
jb
inc
xchg
sbb
pushf
fs
loope
add
test
je
push
jp
dec
fwait
or
push
rol
fcoml
leave
nop
stos
movsl
and
jns
test
lea
mov
xchg
cmpsb
insb
xor
jo
shlb
sbbl
repnz
andb
pusha
pop
jns
clc
sti
in
and
cmp
cwtl
ja
push
sahf
bound
mov
xlat
push
cmpsl
ss
push
cmpl
into
mov
dec
sub
pop
mov
jg
test
mov
arpl
stc
insb
bound
cmp
mov
inc
int3
stos
xor
mov
push
cmp
lcall
or
test
xchg
in
mov
mov
nop
mov
jp
cmp
mov
mov
inc
js
icebp
shll
cmp
fmuls
lock
jg
ja
mov
aaa
xor
xchg
cmp
add
pop
jp
sub
sbb
mov
arpl
jno
nop
js
aaa
fnstsw
pop
xor
ds
or
pop
pop
scas
xor
push
movsl
rcll
inc
test
mov
jl
fcmovnb
jecxz,pt
les
or
out
in
ret
mov
outsl
pop
lods
sub
mov
and
add
loope
loop
cmp
std
repz
cld
in
lret
repz
negl
fnstsw
xor
adc
enter
ss
fiadds
stc
mov
in
pop
imul
xor
and
shlb
push
insb
mov
in
mov
cmp
jns
ss
jno
mov
fldcw
ret
pop
inc
sbbb
lods
imul
fdivrs
mov
fsubs
outsb
mov
adc
mov
jns
push
inc
in
inc
and
in
add
adc
mov
lods
dec
inc
pop
or
cmc
fsubrs
enter
int3
popl
rorb
mov
xchg
mov
mov
into
mov
clc
xor
dec
xchg
xchg
stos
es
push
jae
aas
jne
stc
xchg
jecxz
lea
pop
hlt
inc
je
push
or
xor
mov
leave
dec
jp
cmpsl
repz
dec
push
hlt
orb
sub
cmp
sub
dec
mov
sbb
into
int3
xchg
xchg
enter
and
xor
inc
test
jmp
push
ds
push
push
out
mov
add
shlb
mov
push
add
in
iret
jle
xchg
je
mov
std
lods
popw
shr
loope
push
dec
shlb
sub
sub
push
iretw
adc
xchg
insl
sub
pop
and
les
xlat
xchg
loop
adc
lock
into
nop
xlat
lock
jp
movsb
cmp
adcb
test
stos
jmp
and
mov
xchg
imul
mov
pop
cs
and
aam
data16
imul
pop
repnz
mov
jmp
mov
cmp
inc
sub
ljmp
xor
outsb
push
dec
fidivrl
mov
int
inc
push
insb
cmp
inc
pop
dec
sub
testl
push
outsb
lods
or
pop
out
xlat
mov
inc
cld
adc
das
sbb
in
adc
lcall
dec
andb
xor
xor
in
fdivr
cmpsb
mov
popf
inc
inc
ja
add
rolb
cmc
fwait
mov
push
lret
insl
loopne
jne
sub
xor
sbbb
xchg
sub
push
jge
ficoml
cli
sub
push
mov
xor
xor
mov
fbstp
pop
xchg
test
pop
sti
fadds
sti
movsb
fwait
clc
pop
pop
and
xor
mov
das
lods
dec
addr16
clc
cwtl
add
mov
mov
inc
xor
push
mov
dec
adc
sub
lds
popa
pop
add
shlb
cmpb
mov
sbb
daa
add
scas
xor
adc
or
mov
loop
fs
insl
lea
xchg
or
pop
xchg
or
icebp
and
cmp
cltd
jp
mov
aad
test
imul
push
icebp
pop
pop
mov
or
out
push
mov
mov
jbe
pop
rcrl
es
icebp
inc
adc
add
inc
push
aad
xor
xchg
andb
repnz
mov
std
scas
inc
loop
mov
fsubrs
inc
sarb
dec
int3
icebp
cli
lods
dec
fnstsw
jecxz
fmulp
push
bound
in
fimull
or
sti
aad
mov
movsb
mov
and
call
mov
not
and
loope
mov
fs
sahf
imul
cmp
inc
fcmovu
jnp
hlt
xchg
cmp
mov
push
fsubrl
test
mov
or
jp
push
add
out
xor
mov
call
sub
mov
dec
or
stc
gs
imul
out
icebp
std
jmp
xchg
or
ficoms
sahf
std
or
inc
sub
dec
inc
push
lret
add
popf
imul
subb
sbb
imul
mov
je
pushf
mov
lods
or
test
jne
imul
out
aam
add
test
adc
lahf
scas
pop
rcrb
mov
mov
pop
in
add
pop
jno
xor
shlb
sub
cli
push
mov
mov
push
mov
insb
cwtl
cmpsl
popf
sahf
aas
adc
insb
pushf
ss
mov
sahf
test
add
in
push
xchg
call
xchg
les
lods
test
loope
adc
add
js
test
mov
repz
dec
mov
cmp
or
pop
pop
nop
int3
jno
stc
repnz
loopne
xor
push
out
or
push
es
push
popf
jns
out
mov
call
jecxz
hlt
cltd
xorb
push
and
jp
add
pop
in
sub
mov
push
aaa
mov
dec
pop
mov
gs
lock
out
data16
lods
inc
xlat
push
adc
out
cmp
fdivrl
push
adc
sbb
test
je
xchg
jnp
lds
pop
inc
adc
cli
and
mov
lret
adc
rcrl
shrb
clc
push
adc
and
imul
push
ror
jno
pop
mov
mov
jecxz
test
jmp
jne
mov
lcall
mov
iret
popf
push
cmp
rclb
dec
call
push
dec
and
movsb
jno
sub
fbld
mov
sbb
push
cmp
cwtl
movl
push
in
jle
inc
rolb
mov
cwtl
fs
decb
inc
rcrl
sub
sbb
ret
je
mov
dec
into
cld
fwait
xor
stos
push
sbb
pusha
cmpsb
lahf
dec
push
or
xor
sbb
vpsraw
ljmp
les
jno
xor
sbb
ret
xor
mov
mov
pop
xchg
test
addr16
and
lcall
cli
jb
dec
mov
and
jo
cmp
rdpmc
outsl
xchg
mov
pop
jae
xor
mov
adc
add
pop
sub
cmpsb
daa
jbe
fisttpll
cmpsl
fildl
in
xor
cmc
xlat
jno
ret
stos
outsb
push
xchg
xchg
sub
mov
in
int3
ret
pop
add
mov
push
xchg
pop
clc
andl
popf
stos
es
jb
mov
xor
ret
mov
movsl
mov
xor
insb
add
mov
sub
sub
xor
pop
push
out
rcrl
stos
roll
aas
idiv
loope
lds
popf
addr16
pop
repnz
push
hlt
outsl
and
jnp
xor
sbb
ret
mov
shll
inc
test
ret
fcmovnb
ret
rorb
push
cwtl
mov
ficomps
xor
mov
bswap
sub
test
scas
dec
imul
es
dec
add
adcl
mov
pop
test
push
xchg
push
xor
andb
sub
and
sahf
roll
push
cmp
push
sbb
mov
jg
jle
ret
faddl
icebp
fs
std
std
xchg
rcll
dec
movsl
mov
andl
mov
cli
sub
xchg
ficomps
and
sbb
scas
sbbb
ljmp
aas
or
int
push
cli
jo
lret
or
push
or
dec
shl
loopne
mov
push
fcmovnbe
or
mov
dec
lea
xlat
cmp
call
daa
int3
adc
sbbb
xchg
adc
lahf
call
mov
les
pop
imul
mov
fwait
pop
ja
xor
adc
add
dec
mov
rolb
push
mov
cwtl
push
add
dec
les
and
shrl
sub
mov
clc
or
inc
xor
test
push
fwait
push
pushf
jo
sti
and
lahf
ret
xchg
dec
add
jne
sahf
dec
fmulp
adc
aad
in
adc
ljmp
stc
ret
or
push
in
xchg
popf
dec
fs
lahf
cmp
nop
dec
imul
fsub
fistpl
mov
dec
lcall
imul
sahf
jno
gs
out
push
mov
cmc
in
pop
sub
inc
jae
shlb
add
and
jae
sbb
mov
xor
arpl
es
push
loopne
insb
mov
sub
jg
out
dec
mov
push
adc
shlb
popa
je
pop
outsl
jns
jg
push
push
clc
cmp
xorb
imul
pusha
cld
ja
std
sub
fcmovnu
sbb
sbb
arpl
call
daa
scas
jmp
test
dec
fidivrs
pop
in
add
daa
repnz
fimull
jmp
in
jns
mov
lods
sub
scas
lret
dec
js
sub
mov
or
iret
cwtl
cmp
sbb
fdivrl
jns
scas
je
pop
out
addr16
out
scas
enter
leave
mov
and
jp
clc
cmp
mov
xchg
adc
test
xlat
mov
pop
aaa
test
push
adc
je
mov
mov
lahf
cmp
jno
xchg
mov
divl
orl
add
das
push
sbb
fiaddl
push
imulb
mov
fistl
xor
xlat
imul
hlt
sub
inc
inc
hlt
mov
incb
popa
push
data16
sub
maxps
out
cmp
push
jb
cmp
cmp
jl
jecxz
js
cld
cwtl
clc
jge
add
fisubs
in
add
rorb
orl
mov
inc
psadbw
adc
adc
aam
jne
mov
mov
daa
jge
dec
dec
cmp
int
addl
test
add
mov
pop
pop
push
scas
pop
insl
ljmp
add
sahf
inc
adc
inc
fwait
cmp
and
clc
movsb
xchg
jae
cmp
push
sub
ljmp
mov
dec
call
add
sbb
jg
adc
popf
push
leave
popa
cmp
and
cmp
test
rorl
add
pop
lcall
or
iret
rcl
roll
repz
clc
jl
xchg
test
sbb
lcall
jle
add
xchg
sti
dec
xchg
sahf
mov
inc
in
mov
adc
sub
lea
nop
pop
outsl
mov
cmp
dec
dec
dec
jmp
sub
sar
push
pop
mov
xchg
ljmp
sbb
addl
into
pop
orb
add
mov
pop
loope
or
add
and
test
ret
or
mov
mov
adc
aad
push
js
nop
pop
fstl
repnz
stos
push
cmp
mov
xor
inc
dec
cmp
aam
roll
mov
lods
push
bound
addl
cmpb
jo
imulb
pop
ss
pop
into
sahf
aad
jno
cmp
sub
pop
xchg
add
and
dec
stc
pop
jo
lods
cli
out
lods
std
push
shl
jp
cltd
cmp
xlat
add
sti
lret
or
adcl
pop
cld
cmc
pop
nop
js
out
or
xchg
or
test
repz
enter
or
mov
pop
out
mov
sub
fsts
push
ss
dec
or
adc
pop
mov
push
pop
shrb
push
mov
dec
add
pop
shll
xchg
addr16
out
add
dec
dec
test
mov
ret
push
push
repnz
fiadds
xchg
out
lea
mov
mov
popf
loope
mov
push
or
cmpsb
jl
lcall
or
adc
fidivs
and
xor
jmp
scas
gs
and
lods
pop
fsubl
xchg
aaa
lea
cmp
mov
xchg
dec
mov
das
nop
add
xchg
sub
cmp
mov
mov
shll
jae
imul
pusha
mov
jns
jo
cmp
push
sbb
mov
push
pop
add
inc
push
jnp
stc
loope
icebp
and
push
pop
lcall
adc
jnp
xlat
outsl
outsb
icebp
aaa
push
xor
dec
call
inc
nop
sbb
cmp
or
xchg
mov
cwtl
and
aam
cmp
movsb
lea
in
iret
bound
inc
add
lret
sti
nop
mov
xchg
jg
scas
xchg
mov
pop
jo
mov
or
dec
int3
and
aam
dec
or
mov
arpl
jo
sahf
xor
add
mov
pop
subl
lds
xor
xor
jp
xchg
push
mov
xchg
jecxz
push
xchg
lods
scas
or
int3
add
lock
mov
mov
or
mov
xchg
jo
xchg
sbb
es
shl
and
cmp
xchg
sbb
call
jnp
inc
jmp
andb
lds
int3
cmp
loope
add
xor
jl
adcl
pop
nop
movsb
repz
ret
jne
loop
mov
lcall
movsb
rcll
mov
adc
sub
out
push
fisubl
add
adc
xlat
sub
popf
inc
test
es
sbbl
arpl
int
jle
jecxz
sub
or
lcall
int
dec
in
dec
in
lods
aad
sub
adc
fistps
sbb
cwtl
sarl
mov
aam
test
xchg
and
stos
movsb
xchg
push
add
adc
push
mov
xlat
loop
jl
ss
or
mov
or
stos
fidivl
lret
in
and
xchg
outsl
jnp
xchg
call
adc
or
lahf
jmp
shl
xor
push
pop
mov
mov
dec
sahf
aad
xchg
popf
dec
out
test
int3
loop
cmc
cwtl
dec
adc
jp
adc
jbe
jmp
movsl
push
rorb
push
fwait
adc
call
push
in
mov
int
cmpl
cli
pop
and
cli
xchg
movsl
aam
testb
imul
mov
stos
arpl
xchg
fcoms
arpl
shld
fstps
pop
add
pop
inc
mov
jge
xchg
popa
add
fdivrs
mov
popf
pop
pushf
in
pop
add
jo
in
cmp
ret
push
xor
lods
mov
push
cmp
or
jle
adc
xchg
jge
outsl
popf
and
pop
inc
mov
imul
xchg
or
fwait
sbb
sbb
inc
push
and
test
daa
fsubl
in
leave
adc
mov
cmp
imul
mov
pop
in
out
sbb
mov
int3
mov
fucompp
sbb
pushf
jmp
fidivl
sub
sbb
in
out
cmp
ret
sub
aas
data16
jp
mov
fmull
and
les
js
pop
mov
addr16
mov
push
mov
mov
test
and
mov
rcrl
jbe
mov
cmp
out
into
mov
jp
inc
loopne
pop
icebp
aad
cmp
fs
add
fsub
hlt
cmp
sub
mov
adc
xchg
rol
loopne
lret
inc
out
std
jecxz
pop
aad
pop
add
ret
cmpsl
add
and
movsl
or
ja
icebp
daa
adc
and
push
mov
mov
xchg
mov
test
push
inc
hlt
pop
testb
shrl
call
bound
pop
add
icebp
dec
xchg
lea
mov
icebp
les
and
repz
cmp
fsubr
iret
mov
and
add
xchg
push
out
fcomi
pavgb
pop
test
fnstcw
je
lahf
or
repz
enter
fstps
sub
dec
push
mov
imul
cwtl
out
daa
shl
out
cmp
fwait
inc
enter
cwtl
xlat
dec
mov
imul
xchg
mov
sbb
pop
mov
lds
mov
cwtl
jecxz
xor
xchg
into
repnz
std
cmp
leave
adcb
out
mov
popl
mov
mov
adc
sbb
mov
or
incb
aad
xor
and
fwait
pop
xor
divl
xchg
cli
mov
mov
pop
dec
insb
sub
adc
push
fs
outsb
insb
mov
imul
sub
mov
jne
call
fcoms
gs
leave
in
cmpsb
sbb
push
leave
sub
jp
mov
shl
ret
mov
icebp
dec
sub
idiv
and
cmc
loope
divb
xor
sarl
lea
popa
mov
scas
popf
movsl
ja
movsb
add
push
data16
fistpll
ljmp
xchg
mov
sbb
stos
repnz
icebp
out
and
xor
push
mov
andnps
mov
pop
cld
jle
rcll
adc
kmovw
or
pusha
shlb
pop
and
dec
insb
xor
or
xor
stos
mov
cmp
out
test
mov
mov
cmp
pushf
cltd
lea
adc
andb
mulb
inc
in
sahf
xor
inc
mov
lret
sub
es
iret
or
addr16
adcb
ret
repz
and
mov
push
adcl
leave
sbb
mov
pcmpgtw
xchg
mov
xchg
mov
adc
adc
in
sbb
imul
lahf
inc
arpl
fsubrs
mov
outsb
iret
rcll
popf
js
outsl
inc
cmp
jg
call
mov
push
inc
frstor
pop
lahf
jb
in
adc
ja
mov
shl
cmp
orl
pusha
cwtl
mov
int
add
dec
ficomps
rorl
pusha
lods
push
and
jbe
incl
and
push
sub
cmc
mov
jmp
jnp
cmp
ret
pushf
and
cmp
push
stos
dec
ret
adc
rcrb
xor
js
out
push
daa
sub
or
imul
xor
aaa
fdivrs
ds
xor
sub
adc
les
ljmp
outsb
sub
add
and
in
shl
sub
add
data16
ret
jnp
mov
leave
clc
shrl
add
aad
dec
mov
cli
ja
push
mov
lret
test
jl
test
push
dec
mov
jmp
pop
fildll
jle
jle
pop
cmp
mov
mov
and
ret
add
ja
mov
neg
sub
adc
into
xchg
push
push
xchg
adc
shlb
testl
xchg
jg
movb
test
inc
jbe
cltd
int
push
in
dec
pop
cmp
scas
loope
push
sub
les
inc
jbe
gs
insl
out
jae
mov
pop
lcall
in
lahf
mov
jl
fsubl
xchg
mov
popf
xchg
adc
push
xchg
scas
xchg
mov
pop
in
push
std
cwtl
cmp
or
rcll
repz
add
dec
inc
lock
and
fstpt
fs
xchg
in
pop
dec
pop
movsl
testl
fwait
xchg
setb
mov
dec
xor
jge
pop
xor
xor
sarb
inc
pop
out
mov
mov
movl
sbb
add
pushf
adc
in
and
and
adc
jbe
fiadds
cmp
in
xchg
adc
js
push
inc
cs
sbb
popf
test
imul
or
jle
es
dec
lahf
dec
repnz
cmp
lret
xchg
rolb
xor
rcr
pusha
test
jno
out
cmp
bound
lret
cmpsl
cwtl
xchg
fisttpl
dec
mov
ss
addb
sbbb
sbb
fists
jmp
out
psubusw
pop
xor
mov
mov
push
push
and
push
sub
call
mull
push
and
iret
shl
out
mov
stos
jp
add
mov
jge
cmc
xor
imul
outsl
adc
outsb
lret
xchg
xchg
lret
imul
dec
jae
sub
jbe
push
and
scas
mov
add
mov
xlat
in
jle
add
popf
enter
fistpll
incl
adcl
mov
hlt
iret
adc
adc
outsl
cwtl
insl
addb
and
push
insb
jle
push
xor
jge
sub
ret
cwtl
in
out
push
cmp
mov
cltd
mov
dec
jp
or
cmc
push
cmp
jge
or
mov
lret
hlt
mov
mov
into
repnz
mov
push
test
out
xor
outsb
adc
pop
push
fistps
adc
jnp
sti
int
dec
lods
add
pop
ffree
push
and
mov
mov
adc
add
cmpsl
or
add
xor
out
or
inc
jmp
sti
and
pop
cmp
pop
xor
xor
sbb
inc
mov
xor
cmp
add
popa
inc
inc
xchg
mov
mov
jecxz
jo
dec
das
sbb
mov
sti
mov
shrl
ja
xchg
add
adc
bnd
rolb
adc
sbb
int
or
cmp
test
fcmovnu
cwtl
mov
daa
outsl
lods
cltd
sub
sbb
mov
out
mov
test
or
pop
cmp
sbb
into
leave
jmp
stos
mov
or
jecxz
test
pushl
push
jnp
adc
xor
jle
inc
out
push
jecxz
mov
mov
mov
mov
loopne
mov
push
push
sbb
mov
and
add
pusha
dec
or
popl
orl
jbe
mov
pop
rcll
xchg
and
std
xchg
cs
jg
lods
aad
mov
xor
sub
lahf
je
gs
lea
out
call
sub
mov
jno
into
mov
push
xor
loope
pop
testl
mov
outsb
sbb
ljmp
inc
nop
mov
lret
outsl
adc
inc
dec
pop
es
fsubrp
mov
jle
adc
mov
fisttpl
iret
adc
popa
aas
stc
push
mov
cwtl
jecxz
fadd
xor
aad
mov
inc
add
test
jmp
push
mov
outsl
add
iret
dec
or
fstl
fmul
jae
mov
mov
aas
lods
pop
pushf
xchg
js
inc
push
mov
cmc
ja
fdivrs
cmc
mov
and
nop
and
jg
lret
stos
add
xchg
or
scas
mov
fmul
push
cmpsb
pop
outsb
or
inc
cmpsl
daa
xor
pop
hlt
fdivp
jg
inc
or
sub
xchg
mov
fldcw
lret
dec
std
push
and
test
mov
sub
aaa
jl
test
fs
dec
pop
mov
adc
fidivrl
divl
push
mov
fcmovu
ja
daa
inc
push
je
mov
mov
pop
jae
ficompl
jbe
fcoml
pop
cmp
dec
test
adc
mov
mov
das
mov
call
xor
mov
mov
jno
movsb
jb
ror
jle
insb
scas
insb
fistl
dec
btr
xor
push
cwtl
pop
mov
ds
rcrl
sbb
fisubs
pop
dec
adc
sub
adc
mov
sti
sbb
sbb
cmp
pop
mov
mov
xor
cmp
adc
insl
sub
sbb
lock
inc
mov
lret
cli
into
nop
pop
sub
pop
inc
sub
and
and
jnp
mov
scas
imul
icebp
addr16
mov
jns
mov
add
loopne
rorb
add
sbb
push
jae,pt
cmp
pushl
mov
push
sahf
jl
cli
nop
sub
xchg
imul
out
icebp
jne
xchg
stc
push
pop
fstpl
imul
push
scas
inc
fcoms
ja
sub
jo
adc
and
sbb
push
cld
cmp
jmp
dec
push
xchg
shrb
cmp
jbe
xor
sti
dec
jnp
or
imul
push
movsl
pop
icebp
pop
ds
xorl
mov
andb
mov
das
scas
inc
sbb
cli
cmp
movsb
or
adc
dec
mov
mov
pop
leave
jecxz
stos
xchg
ja
jnp
insl
add
xorl
and
test
aad
pop
gs
icebp
add
out
xor
sub
addl
rcl
test
ds
fwait
pop
addr16
adc
daa
mov
mov
int3
das
push
pop
mov
add
inc
pushf
nop
ss
aaa
insl
test
xchg
inc
and
adc
shlb
mov
pop
adcb
inc
arpl
xor
movsb
mov
in
xor
pop
pop
loope
and
sbb
push
movsl
test
test
loopne
test
mov
xor
test
ds
and
mov
imul
inc
inc
cmp
in
sub
dec
in
scas
iret
scas
jbe
decb
xchg
dec
inc
cmpsb
ljmp
jnp
sub
xlat
sarb
je
cmp
xchg
shlb
inc
xchg
testl
and
jnp
adc
call
mov
in
dec
loop
sub
rorb
bound
or
fidivl
loop
xor
into
mov
adc
xchg
repz
mov
ret
lret
xchg
sbb
repnz
inc
popf
lahf
lds
addb
loop
das
lcall
in
xor
addr16
loop
iret
lret
xchg
in
aaa
xchg
fildl
adc
dec
jno
popl
fs
mov
or
push
in
stc
int
inc
stos
inc
mov
lock
add
xchg
imul
mov
or
inc
test
data16
pop
cmp
inc
sub
add
loopne
icebp
jno
mov
fxtract
dec
pop
xor
mov
lret
jge
push
jle
xor
lret
testl
or
and
sbb
mov
sbb
rcll
pop
gs
cmp
mov
fnstsw
dec
clc
cmp
inc
sub
xchg
ljmp
inc
cltd
sbb
inc
sbb
in
xchg
popa
and
in
jp
jns
fnstenv
orb
popf
test
or
imul
mov
roll
xchg
dec
clc
adc
adc
movb
mov
shrb
ret
add
jle
push
xor
loopne
inc
and
lods
aam
cmp
cmpsl
pop
insl
xor
sarb
jge
mulb
scas
outsb
gs
jno
aaa
or
std
inc
xchg
je
out
fdivrs
mov
add
inc
pop
inc
in
xor
cltd
add
movsb
mov
xor
pop
fidivs
sbb
mov
mov
ljmp
pushw
mov
movsl
xor
sbb
jle
and
push
nop
aaa
repz
imul
std
test
mov
dec
pop
xchg
pop
lock
inc
pop
lods
mov
loop
xchg
mov
jae
in
fadds
add
push
sbb
inc
mov
fistpll
pop
hlt
push
movsb
cli
dec
loope
addr16
shlb
aaa
loope
mov
adc
sahf
or
add
inc
fidivrl
jnp
sbb
mov
aad
jb
test
mov
idiv
pop
add
out
popa
add
les
in
push
mov
jle
add
loop
fadds
daa
aam
lret
push
imul
push
out
mov
out
jge
xchg
jmp
pop
aad
sbb
pop
into
push
test
loop
test
lahf
dec
add
pop
add
fdivrs
mov
jmp
jmp
jmp
cld
xchg
sub
repnz
jb
out
das
xchg
out
and
mov
sbb
jnp
mov
xchg
mov
add
cmp
in
fisttps
adc
sub
test
scas
and
in
inc
aad
inc
jbe,pn
pop
inc
jbe
mov
cs
push
jmp
data16
and
out
mov
mov
lods
jns
mov
jno
in
xlat
xor
flds
les
mov
icebp
jne
dec
push
negb
sbb
push
or
push
sti
push
sbb
push
dec
test
xchg
push
xchg
inc
repnz
fwait
imul
scas
mov
fcomip
sbb
dec
or
lcall
gs
rcrl
mov
lret
idivb
fcmovnb
imul
lret
xchg
ficoml
pop
js
cmp
dec
and
test
ret
jge
and
and
jmp
xor
pop
in
jmp
rcrb
and
fwait
or
mov
test
lahf
leave
fsubp
pop
push
jne
xor
dec
pop
mov
lcall
lea
cli
xchg
popa
pop
jecxz
aad
xor
adc
dec
cmpsl
pop
or
lds
pop
and
mov
adc
add
push
in
jle
xor
mov
or
es
push
aam
das
test
int3
push
and
std
lahf
pop
jecxz
in
loope
dec
or
jmp
xchg
push
adc
mov
adc
mov
call
psubw
jns
fnstsw
and
loop
outsb
pusha
jbe
rcrb
mov
test
xor
adcl
or
pop
cmp
and
aam
fstps
sti
cmp
pop
push
fwait
sub
icebp
pop
inc
sarl
loope
ja
pop
mov
dec
lds
cmpsb
fimull
inc
in
xchg
sti
repnz
mov
jo
cmpb
jae
loopne
daa
lea
push
stos
popf
out
lret
xchg
dec
cmp
adc
outsb
int
pop
mov
xor
pop
lods
add
pushf
dec
nop
jne
imul
pop
mov
leave
and
cmc
lock
lods
fcomps
jle
dec
push
inc
scas
dec
mov
dec
push
in
jne
jg
mov
xchg
adc
lret
shrb
lret
inc
cmp
pushf
inc
fwait
jecxz
insl
fucomp
inc
mov
leave
sbb
add
xor
or
mov
rcrb
adc
xor
test
mov
dec
jl
fdivrl
mov
or
pusha
cli
lock
cltd
in
in
cmpsl
mov
lock
mov
test
pop
and
rolb
add
pop
push
leave
loop
push
ds
and
push
push
daa
mov
sbb
add
arpl
ret
sub
jno
or
or
or
jo
xor
aam
filds
fisubrs
fldcw
call
mov
sbb
mov
icebp
sbb
scas
mov
cli
bound
push
into
dec
dec
in
fisubl
cli
out
and
inc
pop
pop
adc
sub
cmp
test
cmp
sbb
lods
inc
xchg
lahf
stos
in
testl
fnsave
das
cmp
mov
dec
test
mov
push
mov
arpl
push
adc
in
add
cmp
adc
sti
call
dec
dec
cld
popf
mov
leave
jmp
pop
stos
mov
cwtl
mov
fmull
pop
mov
in
adc
add
loop
stc
cmpsb
mov
sbb
repz
push
lret
fistl
es
out
fs
adc
testb
cmp
push
ds
push
lods
fwait
addr16
xchg
cmpsl
jo
adc
insb
inc
mull
cmp
stos
enter
test
sub
xchg
xor
leave
mov
lea
sbbl
push
iret
rcrb
mov
std
sub
in
int
pop
jno
pop
mov
clc
mov
jno
mov
in
pop
das
cmp
sbb
jmp
and
dec
mov
sub
add
push
sub
fwait
mov
dec
sbbb
and
pop
mov
xchg
and
inc
xchg
lds
je
jg
ljmp
inc
cmp
sub
into
xchg
je
aaa
or
lea
pop
pushf
xchg
and
lret
jmp
jmp
imul
stos
jnp
jnp
je
pop
sbb
jge
cmpsb
and
subb
mov
xor
dec
les
outsl
pushf
dec
outsb
loop
xor
pop
sub
rcr
sub
sub
lcall
bound
fsubr
popa
adcb
ficomps
pop
jle
cmpsl
and
jae
in
jne
adc
dec
data16
sbbb
mov
repz
cmp
jmp
mov
aaa
cmpsb
push
repz
pushf
sbb
xor
mov
int3
inc
out
dec
dec
rclb
xchg
cmp
movsl
mov
mov
dec
or
pusha
xor
cmpsb
jle
add
mov
sahf
int
stc
je
add
and
or
pop
shll
cwtl
cmp
jl
pop
inc
and
adc
ret
cmp
jae
aam
cmc
adc
adc
icebp
cmp
add
push
mov
push
jo
dec
cmp
push
ret
cmp
mov
movsl
xchg
xchg
jbe
inc
jns
fdivs
out
adc
inc
popa
scas
adc
dec
dec
cmp
push
jnp
call
mov
xchg
or
loopne
cs
lcall
pop
xor
test
ljmp
orl
inc
xchg
aas
mov
imul
js
push
lret
sbb
adc
mov
xchg
xchg
sarl
arpl
loope
rorb
xchg
mov
mov
push
xor
lods
push
lret
dec
dec
jl
cmpsb
adc
fistl
fdivs
movsl
cli
das
ljmp
sbb
add
mov
mov
shrl
mov
pop
lahf
lea
and
pushf
xor
insb
jns
cmp
imul
scas
pop
pop
mov
bound
in
pop
push
cmp
shrb
scas
push
sbb
inc
xchg
iret
jbe
or
fs
lods
mov
and
dec
sbb
sbb
xor
mov
loopne
mov
jp
mov
out
ficoml
outsb
dec
lods
sbb
sub
rcll
dec
in
sbb
sbbl
inc
mov
jl
mov
scas
cmpsl
insb
dec
sub
pop
cli
mov
fst
cmp
push
outsb
and
sbb
shl
or
pop
mov
inc
add
pop
imul
insl
ds
ffree
sbb
fstl
jge
lret
lods
sub
mov
jecxz
test
movsl
push
lcall
xor
out
dec
cmp
mov
sub
inc
cmp
mov
scas
xor
in
ljmp
cli
mov
dec
stos
mov
sbb
pop
mov
outsl
sub
jno
or
sub
cli
mov
out
loop
pop
aam
mull
xor
pop
cmp
jae
in
cmpb
movsl
mov
stc
dec
movsl
add
loope
stos
xor
shlb
lahf
notb
mov
shlb
and
movsb
push
shlb
mov
add
clc
and
pop
xor
xchg
outsl
mull
aaa
adc
adc
int
fwait
jmp
sarb
mov
pop
cmp
les
mov
cmp
mov
leave
mull
xchg
jecxz
cmp
jecxz
cmp
hlt
jns
adc
mov
jbe
mov
adc
xchg
outsl
ret
stos
daa
ret
fistps
sbb
pop
movsl
sti
mov
jo
xor
xor
aas
insb
mov
clc
xor
or
cld
adc
repz
xlat
ret
add
pushf
shl
ret
pop
out
sub
push
jp
les
xchg
dec
mov
fdivrp
lahf
xlat
mov
mov
test
popa
in
jns
test
and
mov
pop
push
fnstcw
jbe
add
sbb
fstpl
daa
pop
inc
jmp
pop
dec
or
aaa
cmp
sub
xchg
scas
cli
outsb
in
sub
push
mov
sbb
in
add
sbb
sub
test
and
push
rcrb
sub
adc
imul
jbe
jno
add
pop
pop
shrb
pop
jo
push
xor
push
xchg
add
lahf
cmp
xlat
imul
dec
mov
and
adc
sbb
cltd
sub
xchg
mov
shll
mov
xorl
rcrl
addr16
pop
call
subl
sub
sbb
bound
cs
mov
cmpsb
cli
cwtl
or
repnz
push
in
mov
jge
loope
pop
mov
sbb
stos
scas
fisubrl
mov
pop
add
push
lret
fadds
iret
nop
scas
push
shll
xlat
inc
pop
pusha
insl
nop
mov
outsl
pop
movl
xor
add
inc
test
dec
inc
push
xchg
xchg
dec
adc
inc
add
jmp
sub
arpl
mov
or
dec
push
aas
add
out
or
xchg
addr16
adc
imul
test
pushf
test
insl
outsl
cmc
repnz
cmp
int3
ja
xor
imul
call
push
cmpsb
rcll
repnz
mov
xor
fisubrs
pop
add
sbb
nop
add
push
and
adc
xchg
lcall
out
sub
scas
mov
clc
mov
adc
testb
mov
inc
je
aas
loope
in
cld
and
mov
fisttps
icebp
cmp
adc
push
imul
jle
cmp
es
dec
jne
imul
pop
adc
and
test
fcomps
imul
sbb
repnz
aad
and
adc
and
mov
incl
push
sar
xchg
pop
mov
leave
sti
repnz
or
movsl
pop
sbb
xchg
lahf
ficomps
cmp
and
adc
mov
mov
shl
sahf
fcomip
mov
sahf
xor
sub
jmp
xchg
xchg
jecxz
ds
cld
xchg
mov
fs
out
inc
movsb
std
jmp
cmpsb
inc
sahf
fdivrl
mov
imul
repnz
xor
adc
aam
in
inc
xor
cmp
xchg
hlt
icebp
outsb
lea
push
xlat
adc
enter
repz
dec
js
push
sbb
push
mov
daa
mov
dec
clc
inc
sub
inc
cld
orl
mov
rclb
jle
adc
add
outsb
stos
lahf
jmp
mov
jmp
out
jnp
ljmp
mov
and
mov
out
loope
lret
mov
lcall
call
pop
shll
jmp
add
pop
fs
sub
pxor
inc
sbb
jnp
ja
imul
mov
clc
ljmp
adc
or
out
push
and
jl
clc
cmpsb
mov
sahf
je
push
insb
or
mov
cs
push
mov
decl
jle
in
mov
aaa
ljmp
pop
and
sub
jecxz
fsubrl
jecxz
dec
jb
dec
mov
data16
or
das
fmulp
imul
mov
andl
repz
loope
or
repnz
mov
rclb
fcomip
iret
mov
test
xor
and
lock
jb
sbb
mov
imul
or
mov
push
cmp
sbb
jb
cmp
in
cld
fists
jge
cmp
xchg
sbb
out
adc
sub
andl
ss
sbb
inc
out
push
pop
ficomps
push
nop
test
nop
fdivrl
sub
outsl
andb
mov
pop
jp
push
lock
cmc
daa
adc
shlb
mov
sbb
adc
mov
aaa
cmpsl
aaa
cmpsb
pop
sub
enter
outsl
in
pop
int3
cmp
xchg
jmp
jne
xor
sub
mov
xchg
lods
leave
fistl
ja
popa
pusha
in
mov
cmc
xchg
pop
test
pop
sahf
and
leave
push
add
mov
lods
jl
cmc
adc
push
aaa
adc
mov
fidivrs
jp
lcall
sbb
dec
cwtl
push
push
xchg
lock
mov
movsl
push
xor
mov
repz
sbb
sbb
outsl
or
cmp
fdivp
mov
jae
mov
ds
rolb
fldl
movsb
movsb
jnp
fiaddl
mov
push
xchg
out
lods
ss
sub
cmp
add
movb
loopne
xor
out
and
mov
cmpsl
sahf
push
add
out
mov
loopne
in
push
jns
push
add
or
mov
jb
ret
les
mov
push
add
inc
into
add
mov
cmc
jmp
imul
pop
mov
cli
mov
pop
push
mov
bound
push
adc
adc
decb
xchg
div
lret
adc
mov
mov
mov
sti
or
dec
rorl
jecxz
das
mov
jnp
cmp
aam
sbb
mov
rorl
aam
notb
int3
xchg
enter
cwtl
or
in
test
fldl
and
push
in
and
lods
mov
mov
imul
mov
push
cmpsb
sbb
add
movsb
jns
fwait
mov
outsl
add
push
xchg
xchg
xchg
cmp
cmpsl
loope
add
aam
lods
and
fstps
ja
pop
lret
mov
cmp
outsb
or
or
xchg
and
xchg
aam
mov
inc
in
adc
dec
test
outsb
mul
pop
lret
jge
and
push
mov
push
xlat
les
imul
mov
sub
daa
repz
jl
aam
addr16
pop
mov
lahf
inc
sub
push
sbb
mov
adc
mov
fadds
aam
or
push
fistps
es
repz
mov
jle
shrb
jmp
in
push
jg
out
gs
push
or
jne
push
mov
movsb
xchg
lock
add
and
insl
mul
xor
xorl
loop
pop
fwait
cmp
and
inc
inc
dec
jl
cmp
enter
movsl
xchg
sub
and
repnz
imul
fidivl
addr16
jg
fidivrs
inc
sbb
cltd
xchg
xchg
or
fists
aad
mov
mov
test
js
pop
push
push
popf
shlb
dec
push
cmc
xor
sub
dec
or
or
push
in
call
ljmp
mov
cwtl
sbbl
sub
pop
sbb
jge
ret
jmp
outsl
cld
mov
mov
rcl
push
stos
push
jmp
sub
ljmp
mov
insb
rcrb
pop
lret
push
mov
popf
mov
test
mov
outsb
jno
jbe
or
xor
dec
xchg
ss
popa
jle
nop
sti
cli
movsb
sti
mov
movsl
sub
ret
mov
mov
arpl
fimull
dec
push
lods
dec
mov
or
hlt
lods
insl
jmp
mov
data16
add
jns
cmp
rcll
inc
xor
push
decb
sahf
jo
mul
xor
in
pusha
inc
or
pop
sbbb
xchg
mov
inc
fdivrl
xchg
adc
es
sbbl
out
or
jno
jne
inc
pusha
adc
dec
fisubrs
insb
mov
ljmp
lds
xor
and
jnp
bound
mov
add
xchg
popa
dec
jmp
iret
ljmp
or
sbb
mov
mov
and
sub
int
or
repnz
pop
and
nop
mov
in
pop
pop
sarl
aas
enter
push
lods
pop
int
jne
jb
cwtl
lahf
cmp
sbb
push
sbb
xor
in
or
cwtl
cld
push
call
mov
mov
jl
mov
in
xor
jmp
rclb
jl
jb
or
test
rolb
rcl
xchg
lahf
push
mov
scas
add
fnstsw
adc
pop
xor
imul
je
and
mov
in
mov
or
dec
jmp
ds
push
ror
roll
inc
cmp
jno
jmp
inc
in
shrb
adc
push
lea
mov
fnstenv
mov
sub
clc
aas
cltd
repz
ret
lock
dec
pop
ret
das
fsubl
nop
xchg
iret
xorl
and
adc
cmp
faddl
nop
adc
inc
enter
jno
xor
mov
pop
mov
loop
cmpb
hlt
mov
out
aaa
pop
xor
push
ds
incl
xlat
decb
jl
mov
dec
pop
imul
push
mov
ss
imul
xchg
mov
les
insl
jp
and
jp
js
xchg
pop
push
pop
xchg
or
rorb
sub
shrb
scas
pop
lahf
dec
test
jns
mov
cmp
mov
scas
inc
decl
or
jmp
xor
in
int3
jb
sub
imull
fldenv
dec
lea
fldcw
fldl
enter
mov
push
push
mov
popa
xchg
sub
pop
xor
sub
jns
dec
sbb
rcll
pop
jle
jge
repnz
and
mov
adc
aam
es
push
inc
adc
into
xor
pmullw
inc
jb
push
in
mov
or
xor
mov
adc
fdivp
int3
or
testb
adc
jmp
mov
insb
fcom
fildll
cmp
aaa
sarl
mov
cmp
sbbb
cmp
and
mov
inc
mov
cld
mov
jmp
adc
dec
mov
clc
mov
js
sub
int3
cmp
popa
xlat
dec
jmp
clc
hlt
outsl
shl
popa
inc
push
popa
mov
mov
pop
cmp
pop
and
push
hlt
dec
addr16
aam
cs
lock
test
cmp
mov
rcrl
jo
daa
iret
popa
daa
or
lds
test
jmp
push
pop
loope
jp
dec
sti
or
pop
dec
cwtl
in
mov
fists
loopne
inc
aas
xchg
pop
mov
adc
lret
js
xchg
add
mov
push
inc
dec
pop
sbb
imul
push
mov
jge
push
movsl
dec
stos
mov
add
shlb
js
rorl
adc
mov
aas
call
imul
inc
xchg
sbb
fnsave
testb
cmp
sub
nop
vmread
and
mov
sub
add
jle
mov
mov
and
mov
dec
cmpsb
xor
pop
inc
aaa
les
cltd
or
iret
lret
jl
sbb
mov
xor
into
adc
test
jb
outsl
mov
xor
xor
xor
mov
sahf
inc
gs
loope
or
test
incb
add
or
sbbl
xor
in
sbb
jns
hlt
mov
dec
adc
cmp
push
xor
outsl
cltd
ret
pop
daa
out
out
jge
lock
mov
jge
stos
loop
push
outsb
xchg
push
add
xchg
mov
gs
dec
dec
mov
and
repz
adc
into
loope
mov
dec
fcomi
nop
adc
cmp
test
sub
pop
popf
enter
test
adc
mov
lret
adcb
mov
pop
cmp
rolb
mov
es
xchg
jno
outsb
lds
je
pop
sub
jns
pop
and
sbb
sub
add
rclw
ljmp
ficoml
jnp
push
imul
mov
pop
es
mov
adc
dec
and
and
sub
xor
xor
lea
inc
and
jno
lcall
push
dec
fs
movsl
mov
jno
movsb
loope
test
rcll
mov
push
mov
push
xlat
xor
bound
add
arpl
fiadds
mov
mov
shll
push
retw
pop
xchg
dec
or
dec
sbb
std
lock
pop
filds
roll
inc
cmc
pop
rclb
loop
fwait
pop
adc
loopne
imul
adc
pusha
lods
lods
dec
cmp
xchg
inc
inc
add
dec
xlat
dec
jl
dec
popa
and
adc
int3
lods
call
out
jecxz
jecxz
cmp
push
pop
incb
jge
sub
or
inc
out
leave
std
out
je
loopne
jecxz
outsb
data16
movsb
clc
mov
rcrb
xchg
sbb
xchg
cmp
xchg
pop
loopne
subb
leave
repnz
mov
shlb
and
lcall
pusha
lods
out
hlt
push
mov
pop
divb
mov
xchg
loopne
je
jns
mov
loopne
jns
xchg
add
imulb
adc
xor
dec
fnstcw
shl
insb
test
loopne
push
out
out
insb
nop
in
mov
mov
clc
mov
jle
cmpsb
mov
cmp
pusha
stos
xor
shll
sub
adc
pop
imul
xchg
mov
cmc
insl
ss
stc
inc
insb
inc
shl
subb
jnp
pop
roll
and
cmp
or
and
or
xchg
sub
xchg
ret
fcmovne
mov
punpckhbw
jmp
push
jb,pt
adc
pop
cltd
cmp
scas
push
add
push
mov
ffreep
mov
pop
lds
ss
jne
jno
faddl
push
sbb
adc
jbe
sbb
js
mov
push
xchg
push
in
add
out
sti
in
jns
shll
shlb
mov
test
hlt
dec
sub
in
jnp
in
daa
and
fwait
std
pusha
movsb
shrl
cmp
mov
lock
std
push
jmp
and
inc
dec
mov
lds
or
jge
fucomi
jno
jecxz
shll
sub
fwait
or
xor
in
sbbb
hlt
push
xor
inc
jecxz
dec
sbb
or
xor
jecxz
repz
jg
push
les
and
test
push
je
xchg
adc
lret
pop
mov
addr16
cmp
test
cmp
cmc
test
fnstcw
jns
dec
frstor
out
or
adc
mov
jns
mov
lret
jle
lods
imul
mov
mov
stc
mov
ret
popa
repz
test
adc
test
cwtl
jg
data16
out
enter
mov
adc
cmp
mov
push
arpl
mov
dec
in
in
sub
out
cmp
lods
jmp
mov
jmp
jge
insb
cld
adc
dec
xchg
iret
add
daa
mov
jge
lret
xchg
cltd
adc
xchg
fldcw
add
sbb
and
inc
xor
lods
movsb
in
pop
xchg
punpckldq
inc
xchg
mov
mov
xchg
fisttps
push
jne
leave
adc
movsb
neg
mov
rorb
subb
insb
inc
xlat
aam
xchg
iret
sub
sub
fisttpll
popa
fisubs
and
scas
fidivs
pop
jmp
sbb
cli
jge
and
les
mov
sub
and
and
jle
sub
bound
test
sub
and
sbb
and
xchg
lret
sub
pop
repz
inc
or
das
ret
addb
mov
hlt
jle
pusha
cmpb
fcom
clc
xor
xor
int3
push
scas
push
and
test
or
sub
push
xlat
and
cli
jmp
lods
pop
dec
add
and
push
dec
rcll
les
cmp
mov
inc
shrl
fwait
push
xor
lcall
mov
jne
add
and
lea
cltd
in
inc
loope
sub
das
into
xchg
pop
in
dec
jne
icebp
xchg
fisttpl
inc
dec
mov
pop
adc
in
cwtl
cmpsl
mov
sub
cmp
scas
test
jge
sub
shll
test
clc
fbld
popf
adc
mull
sti
fmulp
mov
aas
add
sub
push
add
mov
mov
bound
fistpl
jl
mov
add
into
movl
rcll
bound
shll
dec
arpl
addb
pop
imull
mov
adc
in
jle
adc
inc
mov
fnstcw
xchg
dec
cmp
cmp
es
jnp
mov
pushf
repz
push
gs
lea
in
jg
jne
sbb
push
push
aam
loope
out
fs
mov
movsl
negb
sbb
ja
push
adc
or
call
or
adc
sub
cmp
insl
std
inc
data16
int3
popf
xchg
or
cmp
add
and
call
pop
add
fdiv
add
shrl
mov
cmp
mov
out
ficoms
in
jg,pn
pop
das
mov
xor
test
push
push
cmp
jns
and
in
sub
cmp
xchg
mov
or
out
add
inc
movsl
insl
insb
test
pop
cli
mov
xchg
ds
gs
xlat
stos
movsl
shl
out
lahf
fbld
insb
sti
jge
outsb
pop
clc
push
dec
int3
scas
es
dec
out
cmp
sub
mov
or
jmp
add
pop
pop
inc
pop
jmp
xor
sub
dec
ficomps
mov
xor
or
adc
jmp
push
add
jb
repnz
test
fiaddl
insl
add
jne
jge
or
lods
mov
push
or
pushf
push
mov
jecxz
pop
ret
sub
lcall
mov
stc
xor
inc
push
sub
rcrb
les
sbb
cmp
inc
add
insl
adc
insb
jmp
fistl
dec
test
fldenv
popf
mov
pop
mov
gs
push
jecxz
pop
leave
cmp
iret
push
jns
xchg
dec
push
das
jmp
jmp
sub
test
mov
sub
fisubrs
mov
push
jnp
fnstenv
hlt
adc
sti
ds
inc
mov
imul
dec
inc
dec
aad
nop
lods
les
mov
xor
cmp
push
cli
gs
cmp
lea
fadd
outsb
mov
iret
mov
inc
mov
xchg
orb
inc
adc
subb
je
cli
rcrb
lods
xor
push
arpl
lds
in
out
testl
push
pop
fcomps
lods
pop
mov
lret
cmp
mov
sahf
jmp
subl
jns
imull
sbb
cs
roll
cs
mov
sahf
out
sub
lods
sub
loopne
out
inc
aaa
fs
out
inc
inc
mov
nop
imulb
clc
mov
cmpsb
jge
sub
or
jno
ret
mov
pushf
xor
inc
cmp
stc
shll
int
mov
insl
push
imul
mov
ss
mov
out
cld
fcoms
in
mov
inc
push
roll
test
jbe
dec
leave
adc
inc
inc
jmp
mov
adc
push
cmp
cs
dec
pop
adc
jmp
cmpl
imul
or
push
inc
mov
incl
outsl
stos
jbe
in
push
and
dec
adc
jl
test
mov
push
ljmp
xchg
or
loop
cmp
ret
cmp
nop
sub
std
mov
inc
lret
add
rorl
dec
insl
sarl
jb
insb
inc
add
iret
inc
lods
ret
sub
dec
test
in
sub
pushf
and
mov
dec
jnp,pn
das
mov
push
ror
sti
aaa
cmpsl
stc
inc
adc
mov
pop
adc
sarl
cmc
mov
jbe
hlt
in
and
sti
out
jne
in
adc
ret
jns
add
rcr
lcall
xchg
fs
jae
clc
add
out
loopne
insb
out
mov
xorb
bound
add
sti
stos
or
js
jge
push
popa
cmp
ja
inc
popf
sub
add
jl
mov
mov
jae
mov
add
vmwrite
xchg
mov
dec
sbb
adc
inc
sub
fnstenv
das
adc
push
push
popa
leave
mov
or
mov
enter
idivb
loope
stos
xchg
xchg
fiadds
arpl
movsl
dec
int
fcomi
ficoml
xchg
mov
and
sbb
adcb
pop
daa
cmp
lds
mov
xchg
cmp
lods
push
loopne
loopne
cltd
mov
xchg
adc
cmpb
scas
jne,pn
daa
xor
and
scas
xchg
xor
daa
dec
adc
jns
inc
push
imul
out
fisubrl
and
or
pushf
rcl
dec
or
mov
inc
xor
jno
sbb
inc
int3
lret
out
push
scas
xor
dec
bound
pop
cli
xchg
fs
lcall
xlat
arpl
mov
mov
sbb
addb
lock
enter
sbb
mov
and
out
shll
cltd
inc
sbb
sbb
sbb
shlb
shrl
add
sahf
hlt
push
sbb
loop
aaa
xchg
pop
in
pop
push
jo
push
arpl
lret
fs
outsb
mov
xchg
adc
mov
push
pushf
pop
inc
and
ljmp
shrl
push
mov
stos
bound
imul
aad
mov
cmp
pushf
xchg
aaa
jmp
xchg
rclb
hlt
sbb
sbb
xchg
pop
outsb
mov
fstl
dec
dec
adc
in
dec
cmp
pop
push
mov
jnp
ds
cmp
sar
arpl
xchg
pop
ret
sub
sti
loope
bound
lea
repnz
jp
movsl
pop
add
clc
icebp
jns
int
jb
fists
bound
adc
xor
sub
lods
mov
push
loope
sbb
insb
cmp
jge
jp
jo
and
gs
pand
push
mov
movsb
fstl
dec
xchg
cmp
fdivl
jbe
ret
xchg
jno
mov
scas
pop
add
cmp
and
mov
jle
inc
xchg
mov
jae
push
loopne
xchg
into
cmp
ja
mov
rorb
arpl
aad
or
adc
jns
cmp
xchg
lahf
and
fimuls
dec
lahf
xchg
inc
sbb
xchg
div
sub
xchg
je
xchg
mov
or
jle
lcall
or
mov
jns
mov
cltd
rorl
mov
lock
sbbl
test
pop
or
push
stc
sub
int
fcomps
sub
shr
and
mov
in
subl
xor
pop
mov
inc
fxch
shl
jmp
iret
notl
ret
dec
lds
pop
mov
jle
cmp
rorl
fdivrp
xor
out
adc
xor
lds
inc
sub
cmp
dec
cmpsl
lcall
popf
cmp
pop
or
jno
repz
mov
out
cmp
xchg
push
push
loope
in
pop
inc
ret
fdivs
xchg
mov
loop
xor
out
pop
aad
cmp
mov
inc
dec
xor
dec
fdivs
cmp
aas
popa
out
cmpl
push
adc
lret
sbb
mov
mov
lret
pop
dec
stos
subb
loope
mov
push
scas
adc
pop
pop
fs
mov
lock
fs
cmpsb
jae
mov
ret
jg
fdivrl
fnstsw
sub
out
lock
mov
lret
push
push
lock
scas
mov
lret
ss
adc
aaa
cltd
lea
jb
mov
pop
pushf
jp
mov
sti
ret
mov
jae
jb
outsb
lods
emms
inc
mov
inc
push
ret
add
jo
rolb
add
add
or
enter
mov
adc
subb
xlat
aaa
in
sbb
outsb
aam
ljmpw
push
js
test
dec
push
mov
sar
pop
idiv
iret
cmp
jb
and
lea
push
pop
dec
fdivr
inc
cmc
ja
sub
into
fnstsw
pop
xchg
movsl
jnp
xor
mov
or
daa
jo
in
and
in
xlat
test
movlps
adc
imul
cltd
aam
ds
push
xchg
inc
lahf
movsl
mov
push
cmp
xor
sbb
stos
shll
mov
mov
subl
daa
fists
cltd
aaa
sarl
sti
push
xlat
mov
sbb
lods
jle
and
scas
hlt
aas
mov
mov
jge
in
mov
ret
in
repnz
rol
adc
push
jno
int
dec
or
adc
jp
sbb
jmp
mov
out
test
and
aaa
je
adc
popf
rcl
mov
or
pop
mov
cmp
sub
add
clc
mov
inc
lret
xor
jge
mov
out
push
cs
and
or
inc
xchg
xor
push
jge
mov
push
push
mov
ret
enter
ljmp
mov
xchg
jge
sub
repz
loop
and
sahf
mov
and
pushf
add
outsl
sub
mov
pop
add
mov
inc
mov
jmp
inc
cmp
arpl
hlt
add
mov
sbb
cs
rolb
filds
adc
ja
add
in
mov
in
ljmp
sbb
mov
iret
add
inc
movsl
icebp
inc
or
or
jmp
or
out
mov
mov
stos
cmp
std
movsl
dec
pop
dec
cli
and
aaa
xchg
test
mov
cmp
lods
sub
pop
hlt
jle
aas
shll
mov
mov
push
out
jp
lods
xor
pop
xor
xor
add
scas
mov
pop
insl
dec
out
xor
adcl
dec
fimuls
sub
clc
inc
xchg
xchg
dec
lret
imul
ja
mov
xchg
loop
fdivp
sub
fstpt
pusha
xor
jne
adcb
ret
fdivs
jns
mov
cmc
jne
push
enter
xlat
inc
adc
cwtl
xchg
sbb
adc
adc
xor
fucomp
scas
addr16
jle
pop
adc
aam
dec
lods
loop
cmp
inc
pop
cmp
inc
mov
repz
jnp
mov
pop
add
and
and
pop
push
fists
jo
adc
sbb
cs
sbbl
repnz
lds
xor
mull
lcall
and
repnz
mov
inc
stos
scas
test
mov
insb
dec
int
pop
mov
je
in
cmpsl
out
lock
inc
mov
mov
mov
cmp
cmpsb
cld
mov
sarl
loopne
shll
std
test
loop
dec
sbb
ror
test
cmp
adc
int
xorb
dec
sub
add
cli
fimull
push
xchg
adc
hlt
add
mov
add
out
push
lea
mov
hlt
mov
mov
pop
cmc
mov
pop
pushf
mov
frstor
das
aaa
push
xor
pop
and
fbld
ficoms
dec
insb
xchg
pop
shll
adcl
insl
sahf
arpl
sub
adc
ss
std
mov
sarl
jno
mov
xor
divb
sub
push
pop
int3
jle
pop
cmp
in
dec
jg
lret
in
shlb
xchg
inc
push
leave
adc
rcrl
inc
pop
and
or
data16
fwait
scas
cmp
xor
dec
jge
je,pt
or
xor
xchg
loope
loop
pop
mov
add
push
test
xchg
idivl
sbb
mov
jmp
fiadds
jne
pcmpeqb
movsl
fdivrs
push
xor
push
imull
pop
pcmpgtd
mov
adc
mov
add
lahf
or
and
push
cli
lock
lods
or
mov
ss
sbb
jnp
sbb
stos
adc
push
jns
jbe
dec
sub
in
stos
xchg
out
push
adc
jae
roll
lret
cwtl
mov
lods
inc
push
or
int3
cmp
scas
pop
jl
mov
lahf
xlat
mov
adc
arpl
and
or
std
ret
push
in
mov
out
jne
cld
jnp
dec
sub
mov
xor
mov
insb
rorl
out
bound
xchg
jb
jbe
and
cmc
lcall
and
add
popa
not
push
inc
insb
xchg
jno
mov
mov
lahf
inc
add
xchg
enter
stos
add
addr16
imul
sub
mov
jl
movl
sub
adc
add
cltd
pop
adc
add
add
insl
mov
lock
lock
pop
popa
or
xchg
scas
fnstenv
and
fs
pop
dec
fsubrs
mov
insb
dec
add
jo
ret
dec
mov
push
push
cwtl
jl
roll
inc
inc
testl
out
mov
test
adc
out
repz
and
and
push
or
gs
cmpsl
leave
sahf
ficompl
aas
sub
cmp
loop
lds
mov
out
mov
jno
push
stc
nop
xchg
mov
clc
pushf
jno
mov
sahf
int3
dec
imul
xchg
test
stos
and
stc
clc
cmp
loopne
xor
jb
dec
pop
int3
loop
arpl
mov
pop
sub
xorl
inc
push
out
sti
cmp
dec
sbbb
or
cmp
mov
lret
jne
gs
pop
fstps
cmc
aas
and
add
pop
cs
bound
in
dec
cli
test
add
jmp
lret
sub
sub
fwait
mov
sub
sbb
dec
push
mov
fsubr
cmp
mov
test
aaa
stc
add
pop
aam
xor
xchg
push
mov
jne
ljmp
arpl
add
mov
push
dec
addr16
adc
mov
mov
ds
pop
inc
sbb
into
sub
ss
test
das
les
fisubs
outsl
xchg
test
into
imul
fstpl
xchg
jmp
xchg
loop
sbb
in
add
loope
adc
xchg
xchg
mov
std
adc
fsubs
mov
subb
mov
cmp
mov
pop
jno
xchg
mov
xchg
dec
push
adc
mov
mov
inc
inc
int3
repz
jae
scas
and
sub
daa
dec
into
das
lahf
ret
mov
cmp
xchg
in
jecxz
stc
dec
popl
mov
hlt
dec
out
cmp
cmp
outsl
movsl
incl
cli
lea
or
fcmove
mov
daa
inc
add
lcall
aas
imul
push
cmp
xchg
jle
ds
orb
cmpsl
pusha
sub
movsb
or
or
dec
int3
ds
jp
adc
movsl
call
pop
inc
push
jo
lods
xchg
dec
or
xchg
std
mov
mov
jno
outsb
xchg
addl
rcll
addr16
xor
jnp
mov
cmpb
jns
xor
fwait
inc
cmpb
jp
ret
loopne
loope
and
in
in
xorb
lea
push
jmp
pop
mov
xchg
xor
xchg
imul
cli
jp
lret
cltd
adc
imul
pop
add
loopne
mov
dec
mov
cmc
add
adc
mov
jns
and
clc
push
pusha
xor
xchg
in
pop
jne
mul
out
push
pop
cmp
cmpsl
out
push
imul
push
lcall
jge
imull
loop
jmp
in
shll
jno
int
sub
inc
fisubl
jmp
addr16
dec
push
fdivr
andl
sbb
test
push
sti
mov
lea
dec
test
mov
add
stos
cmp
nop
mov
clc
jge
sub
adc
test
sub
push
jg
mov
inc
sub
fs
adc
add
mov
and
push
jecxz
jmp
jne
cli
insl
push
mov
popa
push
addr16
fidivrs
pop
lods
ret
and
xor
mov
xchg
imul
jne
inc
insl
mov
std
jnp
fists
and
pop
insl
mov
pop
je
test
mov
cs
push
xor
popa
or
sbb
mov
stos
sub
fnsave
dec
inc
mov
mov
test
adcl
movsb
testl
jl
ffreep
fstps
or
mov
insb
xor
outsl
into
mov
inc
ds
out
dec
pop
lods
inc
rcrl
push
daa
out
jns
dec
dec
add
cmp
inc
sub
adc
test
push
adc
mov
sbbl
push
sbb
add
clc
shlb
ljmp
or
mov
push
xlat
aas
jnp
push
adcb
adc
inc
leave
adc
nop
ret
data16
sbb
add
xchg
xchg
ljmp
insb
int
xor
test
fwait
jne
adc
enter
xchg
outsl
sub
inc
shll
sbb
push
and
xor
cvtps2pi
cmp
cmpl
jno
xlat
mov
inc
stc
pop
cmpsl
xchg
fists
pop
stc
xor
add
mov
test
stc
inc
mov
cmp
cli
or
in
fisttps
aad
shll
jno
fcomps
or
aad
iret
shrb
mov
inc
loope
sbb
mov
mov
push
mov
dec
sbb
push
sub
jb
cli
xchg
pop
dec
mov
in
and
fs
sbb
pop
das
push
or
xor
movsb
inc
xchg
into
push
xor
icebp
addr16
addl
jno
cmp
adc
push
mov
test
fisttpl
jno
fmuls
sub
imul
or
mov
loopne
dec
ret
rcll
push
lahf
je
mov
ss
dec
or
lds
add
jae
mov
pop
or
mov
push
popf
inc
mov
icebp
cmp
mov
loope
sbb
cli
mov
push
clc
pop
icebp
lret
nop
out
movsb
pop
stos
xor
outsl
mov
xchg
pusha
inc
imul
mov
pop
ret
pop
jns
mov
xor
scas
in
inc
aad
imulb
lret
es
testl
pop
sbb
jge
popf
push
cmp
cmp
insb
jae
cli
xor
push
leave
jo
repnz
repz
test
fldenv
fildl
push
adc
test
sahf
int3
or
into
sahf
sub
dec
xchg
shl
lods
movsb
data16
push
inc
testb
pop
and
mov
shll
pushf
xchg
pop
movsb
xor
xor
aas
cmpsb
popf
xchg
shlb
jl
jl
enter
loope
pop
jns
sbb
scas
and
inc
ljmp
push
jecxz
out
test
psubsw
sti
leave
les
idivb
mov
cmc
adc
jmp
jmp
inc
jle
ret
pop
or
cmpb
xor
or
les
bound
sbb
add
push
push
je
aas
call
insb
lods
or
jle
add
xchg
subb
daa
inc
into
lods
xchg
addr16
inc
dec
sahf
mov
clc
cmpsl
ret
aad
sub
and
or
fwait
jmp
imulb
push
cmp
sub
xchg
push
jge
dec
pop
movsl
cmpsb
add
inc
jp
lahf
and
mov
push
lods
and
scas
lahf
jns
rclb
xlat
pop
pop
shr
or
in
xchg
jns
leave
mov
lcall
mov
jp
mov
add
loope
mov
push
cmp
daa
gs
dec
adc
sbb
or
or
mov
shrb
stos
inc
sub
adc
jp
cld
addl
ficoml
cli
das
mov
push
cmp
mov
cmpsb
dec
insb
jp
sbb
add
shrb
clc
xchg
mov
les
xor
push
push
push
mov
cmp
add
or
push
mov
xchg
popf
mov
adc
repnz
sub
test
xchg
rcl
mov
push
dec
cmp
add
push
and
testl
mov
popf
test
mov
and
cld
jb
lcall
sub
mov
mov
push
cmp
nop
hlt
jae
clc
mov
jecxz
adc
test
dec
adc
ret
mov
out
jle
popf
inc
adc
sahf
clc
mov
lcall
addr16
lods
mov
and
mov
andl
dec
mov
or
cmp
jecxz
mov
adc
xchg
bound
adcb
iret
or
adc
push
and
push
daa
stos
outsl
scas
and
pop
jbe
sarl
or
and
hlt
int
mov
cmp
rolb
jp
xchg
lock
cmc
inc
xor
aad
movsl
nop
test
xor
cli
std
loopne
mov
mov
xchg
inc
cld
pop
cmp
pop
repnz
shll
xchg
add
pop
fidivrl
loop
mov
or
mov
xlat
pop
test
jno
push
adc
mov
lret
xor
pop
mov
stos
insb
mov
fisubl
out
pusha
cmpsl
lds
pop
dec
mov
inc
mov
lret
sub
inc
mov
shlb
test
xor
lcall
cs
pop
adc
pop
mov
mov
int
icebp
mov
mov
ret
or
in
imul
data16
cltd
mov
xor
and
mov
add
dec
repnz
cltd
std
movsl
xchg
pushf
dec
test
mov
xor
jb
inc
xchg
add
cmc
xchg
jnp
mov
inc
adc
mov
inc
mov
loopne
mov
nop
test
xchg
xor
andb
test
out
in
cmp
mov
push
and
mov
pop
dec
iret
mov
out
mov
arpl
sbb
imul
mov
push
enter
loope
mov
sub
cmc
pop
hlt
push
adc
data16
iret
lahf
sbb
outsl
inc
out
fcomi
mov
mov
loop
ret
into
shlb
test
and
out
int3
mov
ja
cmp
rorl
inc
mov
sub
add
ljmp
ss
adc
cli
hlt
scas
cmc
insb
push
leave
mov
js
out
xchg
sbb
xor
mov
scas
jp
aas
ja
push
nop
out
addl
fldenv
jle
fisttpll
into
repz
stos
cmp
mov
jbe
test
xchg
inc
imul
movsb
lahf
daa
dec
xchg
sarb
adc
dec
xchg
jb
repnz
add
ffree
cltd
out
xchg
test
and
out
sub
dec
xlat
push
jmp
push
jne
lock
lret
and
push
xor
cmp
fistl
jp
and
add
movsb
sub
popf
andl
pushf
push
push
pop
or
cmp
scas
cmp
mov
fistpl
push
sbb
iret
and
adc
fsubs
test
lods
pop
jmp
shrl
popa
out
mov
xchg
inc
test
push
mov
imul
or
fiaddl
sarb
in
xchg
sbb
lret
dec
add
push
push
dec
imul
movsb
test
fsubrl
and
out
mov
mov
clc
lods
cmp
shlb
add
mov
and
ss
and
sub
cmp
cmp
mov
mov
decl
loopne
in
pop
mov
ret
aam
sbb
push
les
adc
fldln2
cmp
adc
clc
pushf
lret
out
dec
negl
or
cmpsb
fidivrl
jmp
sbb
and
pop
adc
pop
sbb
sub
rcll
xchg
and
rorb
fisubl
cmp
outsl
dec
adc
jns
dec
jae
sub
mulb
movsl
push
sub
push
out
aas
push
add
and
sub
bound
adc
out
xchg
sbb
pushf
pop
int
jge
push
add
insb
arpl
xchg
add
xchg
pop
mov
js
ds
mov
cmp
out
hlt
mov
mov
inc
sub
mov
shlb
jge
shrl
push
andb
leave
outsl
imul
push
pop
push
movsb
mov
imul
push
pop
sbb
push
mov
mov
and
dec
loop
and
xchg
mov
xchg
or
sbb
and
add
cmp
inc
rolb
daa
outsl
jle
sbb
outsl
js
jge
sbb
dec
and
xchg
and
mov
push
movsb
jns
fistl
sti
add
daa
fucomi
nop
jae
cld
push
inc
or
stc
in
xor
and
cmp
add
jl
or
into
add
loopne
mov
roll
inc
xlat
jge
xor
push
ret
cmc
mov
data16
add
divl
mov
push
mov
jp
push
mov
std
jp
into
nop
xchg
ss
push
dec
int3
inc
jo,pn
sahf
cltd
rcrl
imul
xchg
lret
lock
stos
popa
outsb
mov
cmp
mov
xor
sahf
sub
cmp
adc
dec
mov
xchg
xchg
push
add
roll
sarl
scas
sbb
cmpsb
mov
popa
fildll
and
sahf
sub
or
mov
sub
pop
arpl
sbb
scas
aaa
and
push
jg
add
aam
fdivrs
aad
or
inc
mov
aad
and
fmuls
mov
mov
inc
mov
mov
xor
cmp
or
loopne
inc
mov
add
pop
lea
jnp
xor
and
dec
pop
je
ja
cmp
fwait
daa
mov
sti
ret
cmp
push
hlt
mov
sti
std
push
in
ds
xlat
stos
xchg
and
aad
jle
mov
xor
cmp
mov
sub
sti
scas
dec
jmp
lcall
fs
push
lret
dec
jg
mov
mov
push
and
dec
inc
hlt
cmp
mov
int
mov
outsl
adc
sub
inc
ljmp
cmp
and
imul
fidivrl
mov
jle
cmp
js
scas
pop
jnp
outsb
push
sbb
lods
push
add
out
ss
mov
pop
dec
dec
push
je
aam
scas
push
out
call
pop
repz
mov
mov
sti
mov
mov
and
rorl
insb
xchg
pop
mov
push
push
fwait
cmc
sti
xorl
pusha
andb
out
mov
add
adc
push
andl
sub
flds
pop
ljmp
inc
push
andb
adc
adc
push
popf
mov
and
hlt
jecxz
mov
je
inc
insb
cli
sub
enter
sbb
adc
sbb
addr16
dec
cmp
pop
lret
insb
jnp
sbb
push
lcall
push
xlat
dec
popf
shl
loope
add
cmc
scas
xlat
stc
imul
inc
sbb
push
js
nop
cli
and
aad
jo
fiaddl
add
push
xor
fildl
out
or
cld
or
jnp
sub
imul
out
jns
int3
imul
fucomip
mov
push
pop
insl
inc
orl
stc
cltd
subl
pop
fidivrs
movsb
or
idiv
mov
or
xlat
jo
mov
push
push
into
test
add
fisttpll
xchg
leave
pop
js
jle
or
mul
xchg
cli
xchg
ret
jl
mov
add
jecxz
cld
cmpsb
out
sbb
adc
push
std
mov
and
fildl
out
pop
out
ljmp
mov
jno
fsubrl
sub
sbb
xchg
mov
mov
jne
push
movsl
outsb
jns
nop
cmp
andb
in
rcrl
jge
sub
inc
out
mov
cmp
xchg
mov
xchg
icebp
les
int
adc
sub
xor
jbe
mov
cmp
push
cs
stos
cld
sub
in
scas
mov
pop
add
cltd
jg
lcall
test
xlat
sbb
leave
mov
sub
data16
imul
adc
call
dec
int
cltd
xchg
lods
icebp
add
lret
mov
xorb
nop
js
add
pop
imul
push
sub
lds
pop
loopne
dec
sarl
into
fstpl
clc
stc
fildll
cmpsl
dec
xor
sub
xorl
adc
jo
jl
and
or
or
mov
mov
arpl
scas
dec
mov
pop
adc
lea
sti
scas
push
pop
cmp
popa
sti
pop
jne
pop
ror
sub
int3
fs
popf
fadd
mov
int
push
in
repnz
mov
jo
jp
sub
and
xchg
add
jns
add
xchg
lds
imul
pop
mov
adc
sahf
insb
adc
sahf
add
sbb
out
clc
sub
sbb
pop
sbb
ss
mov
dec
bound
and
adc
push
or
jle
inc
mov
and
stos
jns
mul
fistpl
xlat
nop
xchg
sub
or
rcrl
add
dec
xchg
loope
data16
push
idivb
out
testl
push
nop
inc
out
sti
aam
cmp
pop
pop
sahf
out
jo
repz
jl
lret
or
cmp
or
push
test
lock
cld
ss
pop
or
xchg
add
mov
xchg
cmp
lret
push
push
dec
das
adc
stos
cmp
cs
aas
xor
cwtl
dec
mov
push
arpl
and
neg
cmp
mov
sbb
ss
imul
mov
xor
in
notl
insb
imul
mov
fs
adc
mov
add
or
leave
inc
mov
pop
or
adc
inc
sti
xchg
or
adc
and
cltd
dec
fwait
mov
icebp
pushf
xlat
push
out
stos
rcr
rcrl
mov
ds
xor
addl
fdivs
fdivl
sub
jecxz
shrl
and
cwtl
dec
jmp
jne
repz
data16
into
mov
dec
mov
js
mov
push
test
xor
ror
xor
daa
jo
and
arpl
push
fldt
add
ficoml
sbb
sahf
rorl
jecxz
adc
icebp
lret
popa
out
xchg
int
mov
sti
mov
sbb
dec
test
addb
pop
dec
add
and
jmp
lcall
add
dec
mov
lahf
ja
outsb
mov
lods
or
lods
sub
bound
inc
lcall
mull
jmp
inc
mov
test
sahf
and
mov
int3
sbb
ret
lock
mov
scas
lea
cmp
bound
mov
mov
jne
ljmp
or
cmp
enter
dec
cwtl
mov
insb
mov
dec
pop
inc
pushf
loope
jno
mov
inc
sbb
jecxz
mov
push
sbb
addr16
sub
cmpsb
and
jns
pop
loopne
jmp
jne
outsl
xor
orl
sub
imul
mov
and
sbb
movsb
sub
fsubl
cmp
mov
xor
in
pop
pusha
xchg
mov
cli
mov
xchg
jge
pushf
das
mov
mov
popf
mov
pop
cmc
inc
mov
push
push
jg
mov
adc
sub
add
sbb
pop
cmp
pop
imul
cmc
insl
mov
in
adc
mov
fsts
in
stos
dec
fists
add
mov
mov
push
out
pushf
lret
sarl
pop
jg
adc
arpl
cmp
jle
clc
stos
jb
outsl
pop
pop
sub
and
fdiv
loopne
icebp
lock
cmp
mov
into
sti
cmpsl
test
push
dec
and
xchg
mov
lahf
cwtl
es
out
xchg
fnstcw
add
xor
stc
in
mov
jl
sbb
aaa
in
xor
out
stos
mov
cmpsb
xor
or
sub
pusha
adc
add
mov
js
jp
sbb
packssdw
insl
out
xlat
movsl
inc
add
in
int3
leave
shll
jecxz
pop
pop
sub
and
imull
mov
sbbl
popa
lods
in
and
fs
fs
call
rolb
mov
cld
dec
jne
clc
mov
out
shl
sbb
push
loop
jge
aad
fnstcw
push
add
out
mov
add
push
push
iret
les
mov
dec
cmc
jg
cmpsb
push
and
inc
fs
add
xor
movsl
push
push
xor
std
mov
out
leave
sbb
jecxz
jp
icebp
dec
sub
imul
imul
mov
inc
gs
idivl
loope
sub
push
push
or
movb
es
adc
push
loop
sub
sbb
push
mov
aaa
xchg
fmull
mov
out
lods
lahf
dec
out
push
stc
push
and
add
push
mov
cmc
addr16
divb
mov
cmpsl
cmpb
push
xchg
mov
sarl
push
mov
jno
mov
pusha
imul
cmp
pop
jb
fidivs
push
jp
add
push
shrl
dec
loop
add
mov
xor
nop
mov
je
mov
outsb
xor
in
push
ret
jmp
push
dec
pop
std
xchg
les
cld
jae
cmp
add
pusha
dec
jb
shll
or
cmp
mov
push
repnz
inc
or
sub
pop
xorl
dec
pop
cmp
xor
mov
push
dec
mov
mov
jp
test
add
in
xchg
or
jecxz
mov
mov
pop
pop
push
xor
fldenv
xchg
jg
jb
xchg
pop
outsl
sbb
sti
lods
fistpll
adc
insb
shrb
push
dec
aad
dec
jb
adc
pop
sub
sbb
filds
fstps
and
das
push
mov
test
pop
and
xor
mov
and
lea
xchg
cmpsb
aas
ljmp
dec
pop
mov
adc
sub
sbb
frstor
pop
pop
jbe
das
push
dec
pop
xchg
sbb
ret
cmpsb
cmp
push
lods
pmaxsw
dec
fs
sub
insb
mov
pop
daa
shlb
fwait
cmp
test
imul
in
sahf
in
fcmovne
adc
aam
dec
mov
outsb
add
pop
cmp
loopne
or
pop
es
out
cmc
pop
jno
inc
dec
mov
mov
push
pop
pusha
pop
cmpsb
cmp
pop
aaa
div
jno
lea
pslld
aaa
test
je
mov
sub
mov
mov
adc
push
adc
push
test
jne
xchg
mov
pushf
mov
mov
shrl
mov
jp
pop
and
out
testl
cmp
pop
jbe
jo
sbb
lds
pop
add
rclb
add
push
add
fsubl
adc
aad
test
and
push
icebp
sbb
loope
mov
add
repnz
mov
push
mov
mov
pop
jl
loop
cmc
mov
popa
cmp
jnp
xor
or
stos
or
lret
cmp
sbb
movsl
and
jae
mov
jmp
rcl
dec
clc
jmp
mov
jns
stos
fldcw
cmp
jne
mov
imul
mov
fwait
gs
stos
fimull
gs
sbb
insb
rcl
and
push
stos
in
push
data16
inc
jmp
lea
dec
and
xchg
fisttpl
pop
sbb
mov
shrl
daa
sub
sbb
inc
or
sbb
inc
out
sbb
jnp
lcall
mov
adcl
std
jne
mov
out
pop
fidivrl
xchg
int
adcb
stos
mov
clc
fisttpl
shlb
out
mov
cli
xor
loope
pop
push
and
icebp
movsb
movsb
aaa
mov
and
mov
aad
sbb
sbb
or
rorb
pop
daa
lock
add
inc
in
ficoms
push
mov
loopne
mov
loop
data16
push
mov
mov
movd
emms
add
pop
adc
out
inc
jno
jne
xchg
mov
mov
adc
add
inc
jmp
xchg
jae
jbe
dec
aas
lock
int
ss
fwait
gs
cmp
lea
ja
jg
nop
arpl
and
cmp
xchg
push
lea
std
jbe
pop
fwait
xor
inc
xor
dec
fisttpll
jg
push
lods
lea
jb
or
fiaddl
or
packsswb
test
lret
int3
inc
sub
mov
mov
cmp
inc
mov
aas
xchg
fdivs
jl
sub
pop
fwait
push
xchg
ds
xor
xor
fcomi
ljmp
mov
cmp
testl
pop
ret
mov
sub
pop
and
cld
test
repnz
adc
fnstenv
push
mov
movsb
pop
lcall
lahf
test
pop
pop
dec
mov
aam
addr16
movb
insb
mov
fs
mov
insb
push
sub
pop
sub
rclb
pop
inc
and
sub
pushf
test
adc
xor
movsb
insb
mov
xchg
insl
pop
sbb
cmp
lret
push
shl
stos
push
pop
cmp
sbb
pop
adc
add
test
sbb
xchg
sbb
push
leave
or
nop
mov
pop
ret
in
ficoml
or
add
aam
lahf
push
dec
pop
fwait
mov
in
out
sti
roll
dec
mov
std
and
sub
repnz
mov
add
jo
les
movsl
aaa
push
lcall
push
jge
std
mov
mov
add
fldt
arpl
inc
adc
imul
sub
jo
arpl
xchg
dec
or
push
dec
jo
lods
add
data16
leave
cmpsb
int
pop
in
xlat
xchg
clc
add
aam
dec
pop
popf
and
xchg
movsl
aad
mov
sahf
mov
mov
push
lret
dec
scas
and
xchg
add
adc
mov
arpl
outsl
mov
xor
xorl
pop
call
hlt
ror
cmp
push
mov
jp
adc
in
mov
xlat
insl
cli
aam
aas
scas
dec
imul
dec
test
jg
pushf
aad
adc
and
dec
xchg
jg
cld
mov
jecxz
imul
add
mov
push
sbb
adc
xchg
lret
leave
test
out
popa
dec
push
cs
add
insl
pop
movsl
test
dec
repz
lods
divl
sbb
mov
test
shr
pop
push
insl
inc
jae
pop
outsb
jo
lret
xchg
mov
in
les
je
adc
insb
test
sbbl
fld
push
and
aam
dec
push
or
inc
jmp
mov
es
push
dec
adcl
push
sub
ja
mov
lock
pop
mov
sub
cmpb
xorl
pop
aas
movsb
cltd
cs
mov
xlat
push
dec
inc
movsl
iret
pop
cld
sub
sbb
fwait
adc
sbb
cmp
cmp
adc
or
jle
xchg
loopne
mov
mov
movsb
fstpl
jl
jg
jo
sub
and
test
lcall
jle
lds
fs
or
hlt
fimull
repz
mov
sbb
sbb
es
aaa
fadds
push
inc
push
and
sbb
or
push
rorl
xchg
aad
pop
sub
mov
out
nop
add
out
sahf
fldt
and
rcrl
imul
mov
jle
clc
cmp
mov
jg
insl
and
xor
pop
fiaddl
xrelease
cmpsl
xchg
pop
rcrl
pop
jg
lret
push
dec
pop
dec
pop
rclb
adc
push
sbb
cmp
pop
inc
mov
notl
les
pop
imul
and
fwait
xlat
outsb
aaa
mov
sub
mov
es
insb
jle
push
imul
shlb
add
vmovdqu
inc
xchg
sub
scas
mov
pop
ret
and
jecxz
jo
cmp
push
out
notb
fstl
push
cli
cmp
add
ss
xor
lret
stos
push
loopne
js
dec
repz
jl
or
inc
and
rol
lds
pop
pop
and
sahf
fwait
hlt
jae
and
cwtl
mov
aas
rcr
out
add
lods
mov
stos
mov
xor
xchg
and
ljmp
push
arpl
frstor
jbe
das
push
dec
ja
mov
xchg
sbb
sbb
push
jle
mov
mov
divb
inc
push
xchg
push
bound
push
push
stos
mov
push
movsb
xlat
add
or
dec
push
in
lds
shll
lock
mov
test
lret
jo
imul
mov
or
outsb
fsubrp
lcall
sub
xor
cld
jae
mov
testl
das
adcl
mov
leave
es
and
xchg
or
mov
clc
adc
dec
mov
adc
movsl
dec
dec
and
rcrl
pusha
sub
jg
sub
add
inc
push
sbb
outsb
pop
jnp
xchg
mov
xchg
jl
sti
cltd
sar
ret
push
js
xchg
lahf
mov
adc
mov
ljmp
push
xchg
aas
and
testl
xor
lahf
pop
and
mov
divl
test
push
lret
adc
xchg
add
shlb
jns
pop
inc
ret
dec
adc
xchg
sti
mov
std
push
push
insb
ret
cmp
mov
xchg
push
jno
inc
cmpsb
adc
mov
dec
sub
rcl
add
rcl
jo
sbb
add
ret
sub
push
stos
sahf
sti
add
adc
mov
inc
addr16
or
cmp
mov
jne
jns
xchg
test
rorb
xchg
dec
jo
popf
fiaddl
inc
cmc
insl
push
test
shll
mov
sbb
jg
ss
dec
xchg
scas
sbb
frstor
pop
js
dec
dec
cltd
rcrl
mov
incb
xor
adc
sub
xchg
rol
fisttpll
mov
xchg
jne
daa
adc
or
xor
or
bound
push
xchg
neg
ss
ret
sbb
xor
mov
sarl
adc
in
aad
test
es
jp
aad
gs
sbb
xchg
sub
sub
inc
loopne
bnd
mov
adc
dec
or
imul
xchg
xchg
pop
add
mov
loop
clc
das
cltd
cmpsl
xor
xchg
jp
push
leave
aam
dec
sahf
push
mov
insl
push
mov
mov
mov
fstpl
into
jecxz
inc
movsb
sbb
fsubl
int3
xchg
in
sub
aas
lcall
popf
rorb
popf
inc
push
js
and
pusha
je,pn
into
lods
cwtl
fcomps
loop
testb
push
insl
sbbb
lds
push
jecxz
sahf
mov
movsl
jg
fs
mov
sub
arpl
jbe
push
add
pop
add
leave
dec
push
push
incl
bound
pop
in
dec
outsl
adc
out
pop
xchg
scas
ret
jns
or
dec
add
push
cmp
sub
mov
sub
js
mov
pop
sub
mov
push
push
jg
lahf
outsb
rcrb
adc
sahf
ret
aam
pop
xchg
push
xchg
dec
add
xor
stc
adc
xchg
xor
mov
es
adc
inc
in
push
inc
push
fisubl
cs
or
cwtl
mov
pop
jnp
jecxz
test
fldt
inc
sub
movsl
xorps
sub
cmovno
push
stos
lea
gs
mov
dec
mov
pop
loope
and
jo
push
mov
dec
jne
push
or
pop
pop
sar
rep
int
sub
stc
lods
idivl
jp
lret
shrb
xor
xlat
nop
mov
push
idivl
cmpsb
xchg
mov
mov
test
push
imul
mov
xor
push
into
movsb
outsb
push
out
test
pop
xchg
mov
adc
and
imul
enter
xchg
mov
push
mov
aad
jnp
or
movsl
stos
loope
sbb
cmp
pushf
and
ret
mov
aad
jecxz
fistpl
add
in
add
or
ljmp
pusha
mov
out
ljmp
push
pop
pushf
stos
cmc
test
sbb
out
flds
bound
cmp
shlb
lock
fsubrs
ret
dec
pop
pop
xchg
aaa
mov
jl
out
pop
mov
ret
shll
popf
scas
aas
cld
mov
cli
mov
movsl
push
xor
or
xor
in
mov
inc
stc
cmp
pushf
ror
adc
in
xorl
adc
jp
adc
cmpsl
int3
ret
sub
sub
das
mov
push
sub
loop
ljmp
mov
std
mov
fildll
jp
in
and
inc
xor
hlt
or
or
popa
xchg
lds
mov
repz
movsl
mov
add
add
les
loop
add
jnp
in
std
movsl
mov
hlt
loop
stc
mov
lret
test
lods
frstor
fucomi
or
fistpl
and
addr16
dec
fs
fucomi
outsb
add
lds
subb
mov
call
leave
lock
dec
dec
aam
lcall
arpl
cltd
push
and
leave
jbe
sbb
jmp
pusha
repnz
xor
mov
mov
into
xor
in
push
jge
sarb
jmp
xchg
cmp
cmp
je
adc
mov
dec
out
mov
pop
dec
sbb
xor
dec
fdivl
jmp
je
out
sbb
sub
movb
sub
pop
or
out
push
push
jecxz
imul
push
cmp
pop
je
sub
call
dec
insl
or
mov
xor
add
mov
inc
outsb
shl
xchg
clc
push
in
jns
scas
fcoml
dec
sub
nop
push
jnp
imul
xchg
into
call
imul
bound
mov
mov
int
sahf
jge
outsb
push
inc
sbb
ret
popa
ljmp
or
aad
fidivl
sub
clc
sbb
sbbb
and
xor
subl
xorb
pop
xor
adc
scas
mov
out
arpl
and
loop
inc
push
mov
push
jge
stc
push
scas
mov
loope
test
pusha
dec
fdivrp
adc
jmp
and
cmp
push
outsb
ret
js
push
sbb
shrl
mov
dec
push
les
adc
scas
int3
or
jae
jns
xor
out
movl
cmpsl
inc
mov
adc
mov
dec
mov
movsb
adc
test
xchg
pop
xchg
xchg
mov
cmpsl
inc
bound
push
imul
or
or
cmpsb
dec
jbe
fsts
enter
out
cltd
leave
xor
or
jp
test
xchg
arpl
dec
cmp
sub
xchg
in
cmp
mov
jo
adc
add
lea
ja
mov
cmp
dec
pop
cmp
or
sbb
add
arpl
xor
cmp
inc
pop
cmc
cld
jo
call
mov
jp
cli
shlb
xchg
sub
and
sbb
sub
adc
mov
imul
in
mov
shll
negl
cmc
stos
rcrl
push
pop
xchg
daa
mov
dec
lret
lcall
cld
repnz
outsb
insl
xor
xchg
mov
push
inc
and
xchg
negb
sub
pusha
pop
dec
cmp
data16
sub
cmp
out
add
lahf
aas
ljmp
and
std
sub
sbb
movsb
mov
scas
lds
arpl
cmpsl
dec
adc
lret
add
xchg
arpl
and
shrl
into
sub
cmp
hlt
sbb
inc
mov
out
arpl
lahf
outsl
xor
nop
cmp
inc
mov
lahf
loopne
lcall
or
sbb
shll
lcall
out
jmp
mov
and
fsubr
mov
mov
pop
lcall
fildll
jnp
adc
xor
push
jnp
and
test
aas
pop
ja
test
jecxz
addr16
sub
mov
cmp
pop
sub
and
xlat
sub
pusha
in
or
mov
and
popf
ret
jl
mull
mov
insb
xchg
fimuls
and
je
mov
fdivrl
daa
push
aam
iret
inc
jle
mov
idivb
imul
mov
lods
adc
jp
pop
pop
or
sbb
sahf
adc
sub
hlt
mov
mov
call
jno
lcall
imul
ficompl
xchg
dec
popa
shr
ds
ds
add
data16
imul
jle
stos
add
sbb
popa
mov
rclb
rorl
or
dec
mov
scas
fs
sbbl
pop
cmpsb
sub
xchg
stos
pop
out
dec
mov
mov
xchg
sti
jns
xor
sbb
xchg
test
pop
push
cmp
inc
add
insb
push
cmp
mov
pop
je
xor
push
xor
pmullw
mov
hlt
push
insb
pop
fwait
shl
mov
jno
lcall
pop
xor
push
les
inc
nop
and
mov
imul
sub
sarl
dec
sahf
in
push
and
loope
rclb
sub
ljmp
push
inc
inc
aam
iret
inc
sbb
mov
pop
and
or
scas
popa
jns
xchg
push
into
ret
sbb
xchg
sbb
pop
out
cmc
sbb
add
adc
mov
dec
aas
es
sbb
push
mov
stc
into
push
xor
or
into
scas
roll
sbb
outsl
das
inc
cmp
cmp
icebp
xor
cmpsl
call
xchg
inc
loopne
pop
sub
aad
inc
cmp
inc
lea
fistl
sub
xor
hlt
or
dec
lds
imul
cmp
jo
add
add
lock
fmul
call
or
jo
frstor
pop
push
sub
gs
sti
filds
ror
mov
imul
cmp
aaa
add
insl
cmp
push
aam
or
rorl
add
rol
das
aad
dec
je
xchg
repz
xor
xchg
mov
pop
rol
jae
std
pop
cmc
in
xchg
jno
push
push
test
sub
pop
mov
into
add
and
ret
sbbl
jno
adc
push
cmp
mov
jo
mov
call
ss
imul
jb
dec
add
movsl
mov
push
dec
dec
sahf
scas
jb
imul
daa
sub
xchg
push
push
pop
aam
lret
repnz
pushf
ja
push
out
subl
cmp
cwtl
cmp
xchg
jg
in
lea
dec
cld
popa
push
out
jbe
out
inc
rclb
or
subb
or
popf
push
jecxz
mov
pop
lds
mov
or
xlat
xchg
inc
in
xchg
jmp
mov
cmp
mull
sbb
aam
insb
daa
hlt
sbbb
pop
mov
stc
repz
call
bnd
mov
mov
or
fisttps
fistpl
loope
int3
jle
mov
dec
xor
jae
loop
adc
int
inc
or
mov
adc
pop
fs
inc
fsubs
loop
scas
fsubrs
or
in
cmc
nop
mov
push
rorb
cmpsl
sub
jae
adc
inc
dec
sahf
inc
mov
es
pop
nop
rcrl
xchg
loope
leave
lahf
pop
dec
sub
add
shrl
jge
popf
mov
addr16
sbbb
int
sbb
lods
sti
mov
or
shl
lret
popf
mov
sti
js
test
sbb
mov
jno
cmp
cmp
xchg
inc
xor
xchg
push
mov
or
out
mov
adc
outsl
xchg
push
ret
imul
out
cli
push
pop
jmp
outsb
data16
leave
mov
xorb
xchg
pop
sub
mov
fisubl
and
shlb
xchg
loopne
cmp
sbb
add
cmp
or
ret
lock
ja
jo
mov
pop
pop
popa
shrl
icebp
repnz
sti
ljmp
subb
mov
shll
iret
jne
sti
xchg
xlat
xchg
loop
aaa
lahf
add
enter
inc
loope
cmp
repz
mov
sub
inc
mov
loop
insb
iret
orl
loope
jecxz
rclb
arpl
sub
vpmuludq
pusha
sub
sbb
adc
xchg
mov
int
inc
sbb
xor
out
xchg
fnstcw
cmc
sub
imul
xchg
inc
testb
or
rcll
pop
mov
out
sbb
inc
xor
sti
push
into
pusha
mov
js
and
negl
and
mov
shlb
leave
mov
add
gs
mov
js
xchg
mov
ja
mov
hlt
xchg
mov
sub
daa
mov
inc
push
aaa
int
push
dec
enter
mov
repz
mov
stc
adc
mov
rol
sbb
adc
mov
xchg
cltd
and
push
test
and
jo
or
mov
in
movsb
pop
dec
cs
jo
or
scas
cmpsl
pop
sar
stos
in
rcr
sub
jb
imul
aas
test
add
scas
xlat
add
mov
add
xor
pop
ds
mov
data16
mov
xor
push
jge,pn
addr16
mov
jns
jge
mov
or
push
sbb
push
sahf
call
or
or
mov
lahf
push
xchg
insl
ffree
jns
negb
xchg
arpl
cmp
mov
out
in
movsb
les
cmp
jmp
add
shlb
dec
cmp
or
mov
insl
xchg
add
roll
movsb
mov
hlt
cmp
and
int3
test
mov
cld
cmp
dec
sbb
lock
pop
pop
insb
dec
call
cltd
ret
push
cmp
out
sub
or
pop
ucomiss
add
sub
mov
jnp
arpl
shl
cmc
mov
sahf
xor
mov
xor
scas
add
aam
xchg
pusha
jmp
sub
sarl
cmc
inc
mov
pop
push
lods
aaa
into
repz
adc
push
dec
and
lcall
and
jno
stos
push
lea
idivl
iret
xchg
fstpt
fstpt
jp
rclb
inc
divl
lods
sbb
leave
sub
cs
orb
mov
jnp
ja
pop
ss
sahf
adc
adc
ljmp
jbe
aaa
pop
rcr
popf
mov
test
adc
and
pop
mov
sbb
mov
push
push
and
aas
xlat
xchg
data16
lret
lahf
data16
mov
out
mov
fbstp
scas
iret
out
addl
aas
test
cmpsb
inc
add
test
pop
sbb
push
repz
mov
in
imul
rorb
ss
jns
icebp
xchg
rcrb
pop
and
mov
xchg
add
daa
mov
pop
sarb
aas
cmp
adc
enter
jnp
dec
test
push
push
adc
mov
cmp
push
pop
mov
sarb
dec
sbb
in
pop
loopne
jle
idivb
cmp
gs
outsl
lods
and
lea
xchg
int
jecxz
scas
cmp
jnp
lcall
fwait
jmp
cmp
popl
xlat
rcll
mov
and
push
in
mov
xchg
xor
movsb
loope
cmp
repz
sbb
rcrb
test
jl
stos
add
insb
xor
jbe
mov
gs
loope
cmpsb
jbe
adc
dec
mov
fnstsw
imul
mov
inc
sbb
rcl
leave
pop
pop
aad
inc
mov
nop
sbb
jg
rcrb
mov
lcall
jns
push
ja
stos
movsl
cmp
adc
adc
scas
pop
ja
pop
sbb
mov
not
or
jg
nop
sub
scas
push
test
push
or
in
pop
cld
xchg
fisubrl
shll
xchg
movsl
sahf
loop
jge
and
push
ljmp
push
cmp
inc
add
in
xor
outsl
fistpl
dec
movsl
pop
xchg
jle
lock
mov
in
pop
ret
jo
test
rcrl
mov
adc
lods
mov
and
push
lods
adc
mov
or
inc
int
xchg
mov
jno
pop
stos
lret
test
sub
dec
sub
mov
inc
sbbl
sbb
xor
add
jge
cmp
mov
es
sarl
xchg
iret
data16
ror
sub
sub
in
adc
rorl
pop
jp
inc
stc
xchg
sub
or
inc
insb
rcll
les
ss
xchg
xchg
shrl
mov
out
fwait
rep
out
and
adc
mov
dec
aaa
mov
cmp
push
iret
mov
pop
inc
test
cwtl
fldcw
push
jle
in
xchg
jg
dec
stos
adc
mov
in
ljmp
data16
gs
sub
bound
mov
in
jle
insb
cmp
lahf
dec
in
adc
mov
push
icebp
aas
pop
mov
or
addb
jp
lds
lods
or
into
pop
add
jbe
les
mov
mov
mov
xchg
ret
lcall
mov
out
in
js
addr16
roll
scas
lcall
mov
testb
scas
imul
nop
enter
fidivrl
popa
mov
out
inc
lret
dec
lcall
pop
add
aam
push
adcl
lock
lcall
pop
pop
and
jno
xlat
push
jge
mov
push
cmpsl
aas
dec
dec
dec
fwait
rcll
inc
cmp
test
shll
std
cmp
fdiv
add
push
shl
xchg
xchg
inc
xchg
movsl
fs
lret
xchg
and
aad
mov
movsb
loopne
push
fiadds
sub
mov
andb
dec
inc
jo
test
mov
jo
mov
cmc
test
data16
mov
inc
jnp
jg
push
mov
sub
xor
adc
push
push
add
adc
dec
popl
call
stos
pop
jle
dec
or
jge
mov
mov
push
in
es
shrb
iret
or
xlat
das
das
fstpt
push
leave
stos
push
call
sti
aam
or
dec
test
lret
or
orb
push
out
sbb
test
lea
inc
adc
push
lds
add
or
stos
xor
mov
mov
push
in
mov
sbb
dec
cmp
pop
lods
cmp
inc
aam
sbb
xchg
pop
std
xchg
shlb
lret
repz
pop
and
inc
daa
add
fistpl
xor
cwtl
sbb
adc
repnz
mov
inc
cmp
mov
or
sbb
mov
mov
and
loope
loopne
movsl
cmpsb
push
fldl
xor
push
daa
ss
mov
add
mov
xchg
sub
dec
test
aaa
adc
std
in
sub
shlb
mov
add
subl
adc
mov
push
adc
pop
rcll
push
push
cwtl
into
leave
xchg
cmc
pushf
call
xchg
neg
rolb
xchg
sbb
orl
loope
pusha
call
test
aad
xor
lods
fcmovne
out
jmp
fucomp
dec
fidivrs
jns
inc
dec
push
xchg
sub
mov
lea
push
int3
fcoms
popf
or
dec
rcr
inc
push
or
outsb
adc
pop
test
fisttpll
cmpsb
xchg
or
jge
call
aaa
pop
lds
lret
and
ss
sbb
fdiv
dec
stc
add
pop
insb
push
cmp
mov
stc
loopne
mov
dec
ret
push
imul
sbb
arpl
mov
mov
xor
push
and
mov
popf
or
imul
clc
or
notl
push
adc
rorb
pop
lret
dec
dec
test
in
push
mov
scas
pop
mov
mov
adc
rcr
cmp
pop
testl
push
jbe
xor
clc
icebp
and
fldenv
mov
incl
push
test
mov
fistpl
adcl
movsb
int3
aaa
xchg
sbb
ret
sub
adc
in
sub
fstps
dec
mov
test
push
mov
adc
in
mov
icebp
leave
and
cmp
lea
push
xor
cmpsb
sti
stc
inc
stos
dec
inc
mov
and
jae
jmp
rclb
mov
sub
jg
scas
cmpsl
je
push
data16
test
dec
jecxz
outsl
pop
ret
fimuls
sub
rolb
mov
neg
rcrb
dec
in
cmp
push
aas
mov
pop
shll
push
daa
mov
cmpsl
les
jns
add
cmc
jg
adc
and
inc
ds
cmp
enter
jecxz
mov
mov
jl
cmp
cmp
shl
fiaddl
jnp
mov
ret
insb
jns
out
mov
imul
push
jae
sub
mov
xchg
insl
icebp
inc
mov
insl
shl
add
adc
js
rcll
orb
push
push
sti
mov
ss
call
les
adc
jl
loop
lret
sub
std
inc
daa
movsl
mov
and
push
mov
sti
aas
fs
cmp
lods
push
inc
hlt
mov
jae
rclb
cs
data16
sbb
aam
pop
popa
push
dec
icebp
jne
and
mov
insl
lods
inc
inc
test
dec
or
jl
aad
ss
sbb
sahf
or
xchg
cwtl
adc
and
fimuls
fwait
or
mov
mov
push
and
dec
out
imull
xor
mov
daa
cmpsl
test
ljmp
imul
cmp
gs
lods
cmp
fstpl
xchg
dec
push
mov
cmp
in
push
cmp
mov
pop
push
inc
dec
cld
push
xor
repz
xchg
test
pop
adc
xchg
test
inc
lret
fidivrl
inc
pop
mov
sbb
lret
aad
fcoms
sbbl
pop
imul
gs
repnz
sbb
fwait
loopne
fwait
push
sbb
jle
bound
jecxz
rorb
push
imull
aad
inc
js
xor
mov
mov
add
adc
or
push
in
inc
pop
mov
int3
into
pusha
xchg
mov
push
pop
pop
lods
in
or
iret
les
push
xchg
iret
bound
xchg
aaa
add
jp
out
stos
ja
mov
and
insl
pop
mov
pop
mov
sub
dec
test
add
rcrl
iret
add
pop
push
test
push
xor
xchg
das
jb
jge
push
and
and
sbbb
test
jbe
int
sbb
imul
cmp
imul
stos
sahf
rcrb
scas
test
jmp
aas
sub
shrb
int3
test
out
repz
sbb
jae
lods
mov
loop
data16
cmc
sbb
mov
push
movsl
push
loope
inc
daa
mov
shll
mov
mov
sbb
mov
pusha
data16
in
es
outsl
in
outsb
push
scas
pop
pusha
and
xchg
xor
rcr
or
js
inc
test
ficoms
lods
push
mov
fwait
negl
cmpsb
in
out
cli
lea
lds
inc
popf
and
in
cmpb
mov
inc
sbb
xor
jg
ret
add
fildl
arpl
pop
test
jo
cmpb
cmc
mov
adc
jae
in
jnp
mov
in
mov
icebp
mov
movsb
jnp
sti
sbb
fcmovb
pop
mov
push
xlat
and
mov
mov
push
and
fimuls
repz
inc
std
mov
mov
sbbl
dec
ret
mov
sar
rorb
sbb
xchg
in
lret
aaa
inc
iretw
pushf
xor
lock
push
dec
lret
cs
popf
lahf
pop
inc
pop
inc
enter
or
sbb
jmp
add
shl
scas
test
aad
xor
sbb
push
pmaxub
inc
adc
fnstsw
inc
ljmp
xor
xchg
sub
push
dec
aaa
push
scas
mov
inc
je
pop
out
pmaxub
or
fstpt
ds
loopne
cmp
lcall
add
scas
cmp
movb
cmc
dec
pop
xchg
cmp
add
test
sub
sub
mov
sub
ljmp
mov
push
jl
mov
ja
adcb
outsb
sbb
mov
pop
push
push
repnz
sub
cmp
imul
sbb
add
rorb
jns
cmpsb
jl
les
stc
loop
lcall
mov
stos
xchg
lods
popa
mov
jmp
dec
loopne
aad
ljmp
xchg
push
jnp
sub
jne
ljmp
in
aas
loopne
push
pop
pop
outsb
jns
ss
jp
mov
xorl
cmpb
aas
adc
and
push
ds
test
lds
ljmp
insl
out
aas
aam
push
test
pop
dec
sbb
cmp
outsb
sub
pop
mov
cmpsb
nop
jne
scas
fimuls
jecxz
imull
push
imul
in
popf
test
loop
xor
call
mov
mov
daa
jmp
mov
push
jnp
inc
jp
test
ds
aam
pop
movsl
lcall
icebp
lret
xchg
pusha
imul
sbb
sub
bound
cmp
dec
mov
push
dec
push
int3
cmp
out
push
sahf
push
or
addr16
adc
adc
mov
jnp
mov
cwtl
add
adc
or
adc
enter
int3
mov
push
lret
cmp
inc
ds
ds
in
or
jmp
cwtl
addr16
pop
mov
out
int3
mov
jl
lock
push
negl
ret
add
mov
mov
sub
push
mov
mov
outsl
outsb
mov
lea
cmpsl
or
bound
mov
in
shrb
mov
xchg
and
sbb
mov
fadds
lods
nop
loopne
xor
inc
jns
mov
or
test
loop
in
sbb
mov
nop
int3
add
loope
icebp
jge
shll
sub
sub
nop
sbb
fsub
dec
mov
or
add
xchg
push
aad
cwtl
pusha
push
mov
sahf
pusha
jbe
push
test
mov
hlt
inc
xor
dec
gs
mov
out
add
shr
mov
bound
lock
movsb
mov
pop
test
and
outsl
pop
jbe
pop
daa
addb
xlat
shl
dec
cmpsb
mov
sbb
xchg
xlat
adc
pop
or
stos
pushl
lret
cmpsl
xchg
fstpt
cld
test
neg
push
pushf
fwait
adc
push
adc
testb
icebp
push
cwtl
repz
pop
cld
cld
sahf
stos
jne
test
or
icebp
and
movsl
stc
sub
pop
nop
jb
pop
pop
mov
in
sbb
lret
push
dec
inc
addb
stc
outsb
testl
jecxz
hlt
inc
repz
mov
test
xor
gs
add
adc
fsubs
nop
mov
arpl
xor
stos
test
or
mov
push
loopne
push
xor
inc
xchg
add
push
adc
push
jp
mov
push
subb
sub
dec
add
xlat
repnz
fists
mov
ljmp
pop
or
lahf
xchg
in
mov
xchg
jb
xor
daa
clc
scas
shr
xor
push
loope
xor
scas
ljmp
fcmovbe
ss
add
repnz
jle
int
xchg
mov
test
ret
or
sahf
add
ja
imul
sti
add
pop
dec
les
fildll
sbb
and
xchg
es
ret
sbb
flds
jae
outsl
incb
push
shll
sbb
sub
adc
loopne
lea
movb
jge
xor
test
sbb
stos
pop
int3
pop
lret
cmp
xchg
mov
roll
jmp
xor
add
fwait
cld
ss
cs
ss
das
add
mov
enter
loope
jmp
insb
push
mov
ficoml
sbb
adcl
xorl
repnz
enter
shlb
aam
mov
inc
adc
and
sub
mov
lods
jno
pop
adc
xor
lret
fists
dec
sub
push
jns
xor
clc
mov
push
bndstx
jl
shrl
cmpsw
out
push
push
cmpsl
into
mov
fildl
dec
sbb
dec
fsts
testb
mov
xchg
cmp
sti
out
jbe
fsubl
mov
mov
imul
cmp
cmp
and
loop
imul
test
push
test
insb
test
inc
lcall
dec
popa
sti
inc
insl
enter
xchg
cmp
arpl
sub
scas
test
jns
dec
pop
dec
dec
jo
aam
lods
inc
sbb
or
xchg
repz
inc
aad
call
addr16
mov
sti
sub
movsb
dec
out
repnz
jp
les
loop
rcll
iret
insl
popa
loope
cmc
mov
jno
pop
sub
into
push
aaa
adc
cmp
mov
jne
jns
dec
xor
pop
mul
cwtl
movd
in
xor
dec
mov
das
stos
ljmp
test
repz
mov
push
dec
rolb
push
rorb
insl
and
lcall
ficompl
dec
int
jl
test
ds
inc
fstpl
push
mov
out
fmuls
sti
dec
inc
sbb
push
aas
sub
mov
xchg
or
mov
iret
mov
add
xor
daa
mov
inc
testb
sub
mov
jno
jne
fmul
lahf
xor
cmp
subl
fwait
mov
shll
inc
pop
lea
notb
cld
lds
and
loope
insl
test
loopne
outsb
popf
aam
mov
loope
loopne
xor
fwait
or
push
fidivrs
hlt
push
movsl
and
icebp
jne
sbb
std
popa
adc
stos
inc
shl
dec
xor
icebp
jb
xor
ljmp
xchg
jle
mov
pushf
sahf
cltd
pop
xchg
mov
call
arpl
adc
je
mov
xor
gs
xchg
mov
out
outsb
mov
inc
cmp
lock
xlat
pop
shl
adc
mov
or
popa
call
push
call
fwait
sub
rcl
mov
push
lods
adc
sub
ret
popf
out
sbb
aas
aas
mov
jp
sub
push
adc
xor
jns
jae
test
addr16
push
sbbb
and
mov
cmpb
sahf
dec
gs
int
jg
stos
dec
xchg
lret
mov
adcb
inc
pop
inc
or
mov
out
jmp
int
clc
pushf
test
aam
mov
sub
fmul
push
inc
bound
popf
push
sbb
pop
mov
xchg
repnz
and
pop
and
daa
pop
mov
mov
pop
loop
loop
aam
inc
lret
outsb
mov
iret
cli
and
dec
push
xchg
add
inc
pop
stos
or
or
sbb
and
fisubrs
ror
xchg
popf
cmpl
xchg
in
push
cmpsb
out
or
andb
mov
nop
cmp
inc
push
mov
shrl
cmp
push
pop
lods
repz
hlt
enter
and
cmp
std
add
test
dec
test
popf
or
xchg
cmp
aas
pushf
fstpt
push
cmc
pop
imul
out
dec
fucomp
jle
cwtl
aam
push
outsl
cmp
xlat
jns
sar
pop
dec
popa
cmc
leave
mov
pop
cmc
out
lret
cmp
hlt
cmp
test
push
pushf
fcom
add
ffreep
popa
icebp
mov
mov
push
add
mov
insl
dec
cs
andl
aad
sbb
mov
nop
pop
mov
in
orb
sub
sbb
stc
je
mov
xor
or
dec
mov
fldl2t
sbb
les
inc
pop
push
pop
sub
jmp
mov
out
aas
inc
inc
aaa
in
sub
fdivrl
rcrb
and
and
push
out
popa
sub
pop
mov
aaa
lret
lcall
aad
push
ja
lea
repnz
push
into
mov
add
sub
in
in
fcmovne
inc
rolb
jg
jecxz
movsl
mov
out
in
adc
lahf
scas
add
sub
mov
notl
movhlps
dec
imul
push
lahf
daa
jb
xchg
and
jbe
cli
or
lret
push
jecxz
ret
loop
push
sbb
push
cmp
rcrl
inc
scas
andb
out
xor
icebp
sti
add
xchg
lea
aad
or
ja
mov
add
xor
shlb
xorl
pop
and
or
popf
test
push
adc
enter
and
test
pop
into
mov
sbb
add
lea
jnp
mov
std
mov
js
sti
out
or
fists
jg
div
or
sub
cmpsb
mov
scas
leave
mov
sub
call
mov
fistps
loopne
arpl
xor
xor
mov
cwtl
fabs
xor
divb
jne
aam
push
add
jmp
inc
inc
shrl
jmp
mov
inc
test
cmpl
sub
bswap
jg
ja
lock
mull
jnp
frstor
nop
cld
ds
xchg
and
sahf
ljmp
push
sub
jnp
xchg
dec
inc
sub
hlt
add
mov
rcrl
inc
lock
fwait
pop
sub
orb
mov
pop
xor
lock
arpl
xchg
pusha
fwait
mov
out
jmp
push
cmp
push
fwait
adc
mov
icebp
cwtl
xor
lret
add
and
mov
shrl
rorl
or
shrd
xchg
mov
fists
mov
xchg
ja
rcl
addl
cmc
je
lahf
mov
sbb
shlb
arpl
jp
outsl
test
fwait
xor
arpl
fildl
push
push
nop
movsb
fdivrs
mov
repz
pop
push
shrl
sub
inc
pop
add
inc
sub
fs
lods
in
imul
adc
fsub
xchg
data16
adc
sbb
dec
xchg
pusha
ret
mov
repz
leave
lahf
xor
test
clc
sub
frstor
rcrb
cltd
lods
jmp
mov
inc
push
pop
hlt
inc
pop
cmp
fwait
push
lods
ss
repnz
or
add
dec
or
sarb
jg
xchg
mov
leave
mov
scas
ja
dec
mov
pop
fwait
mov
push
xchg
sbb
fdivrs
incl
jg
adc
xchg
add
and
call
call
sub
cmp
dec
mov
lock
call
xor
insl
mov
dec
les
enter
sbb
adc
dec
jno
ljmp
iret
sbb
int
cs
test
add
inc
imul
mov
mov
outsb
mov
arpl
push
call
pop
mov
dec
xor
pop
dec
xchg
leave
scas
push
test
shrb
sbb
mov
jmp
aaa
test
mov
mov
hlt
ds
sbb
fisttpll
add
imul
stos
hlt
fimuls
xlat
adc
addb
sub
cmpsb
sub
sub
lea
sbb
out
fsubrl
mov
test
mov
fsubl
scas
ds
and
cli
lods
scas
inc
xor
aas
aam
ret
rorl
xor
daa
sbb
xor
push
adc
mov
xchg
xor
pop
lahf
das
jecxz
fcoms
jns
aad
and
outsw
pop
sbb
in
lcall
out
mov
and
add
push
add
dec
or
jge
pop
movsb
push
xlat
ljmp
sub
imul
imul
fs
or
push
xor
out
jge
jg
lods
fildll
ja
fldcw
idivb
sub
pop
inc
dec
mov
int3
adc
out
std
jo,pn
lret
dec
dec
add
leave
mov
insl
jnp
incb
test
xor
add
lods
stc
push
shll
mov
into
xlat
push
stc
rorl
pop
push
mov
or
imulb
or
inc
cli
add
pop
aam
push
dec
mov
xchg
or
jp
test
lahf
mov
cmp
loope
cmp
dec
arpl
pop
ss
jmp
adc
std
outsl
dec
mov
mov
adc
decb
and
mov
jne
shlb
faddl
jae
es
loop
leave
and
in
mov
jmp
shll
pop
sbb
sub
mov
shll
cltd
ret
nop
mov
mov
push
add
jns
and
aaa
enter
fwait
cwtl
mov
adc
push
xchg
push
lds
insl
pop
sub
shlb
lods
call
lds
dec
rorl
ja
mov
sbb
adc
adc
xor
arpl
leave
xchg
dec
adc
loop
dec
push
cmp
inc
js
out
sbb
rcr
iret
out
sbb
scas
inc
cs
dec
xor
push
push
jnp
adc
insl
sbb
insb
lds
push
pop
sbb
call
pop
mov
jo
or
imul
add
loope
test
outsl
arpl
dec
and
mov
aaa
fmull
adc
fcompl
jb
inc
nop
jnp
and
aad
or
sub
std
mov
mov
xor
daa
jecxz
jge
fildll
inc
mov
xor
shll
fdivr
std
lcall
add
xchg
sahf
daa
int3
test
ret
adc
cmp
dec
cmc
jecxz
shr
sub
lock
pop
mov
pop
daa
mov
imul
fimuls
stc
mov
shl
stos
jg
pop
sub
pop
iret
std
xor
xchg
jo
jle
test
ljmp
cmp
outsb
pushf
lret
jb
sti
fmuls
push
ljmp
inc
aad
clc
push
setl
shll
mov
inc
sbb
rolb
xlat
xchg
mov
xor
mov
sbb
in
aaa
cli
adc
subb
cmp
dec
mov
movsb
cmp
fcom
scas
mov
addr16
mov
dec
int3
inc
xlat
stos
imul
outsb
adc
cld
sub
bound
jno
sbb
test
loop
test
pusha
movsb
adc
out
mov
xchg
mov
push
test
inc
dec
cmpsl
test
jns
adc
mov
xor
mov
adc
testb
xor
xchg
dec
and
lea
or
push
mov
rol
shll
xor
insb
pop
sub
sbb
aam
gs
out
pop
cs
shrb
out
arpl
or
ss
mov
clc
mov
or
mov
sbb
jnp
pop
lcall
stos
scas
dec
cwtl
xor
push
sbb
mov
lock
inc
not
xor
iret
les
mov
mov
bound
push
ror
mov
mov
or
outsl
xchg
daa
and
cmp
fs
sub
or
inc
pop
and
push
gs
pop
cmpsl
push
jg
xchg
cmp
lret
xchg
cs
scas
xchg
in
and
scas
pop
cmpsb
into
lahf
bound
insl
leave
mov
aaa
sub
pop
mov
push
scas
pop
cmpsl
add
stos
leave
mov
scas
lods
cmp
mov
cmpsb
fisubrl
mov
mov
lds
xor
push
call
adc
movsl
pop
mov
lret
mov
enter
ljmp
stos
das
push
into
fcomps
iret
xchg
outsl
pop
aad
push
mov
jmp
insb
popf
jbe
shrl
fs
xchg
pusha
dec
push
in
les
push
ja
andb
dec
stc
outsl
inc
jbe
inc
and
dec
popf
out
movsb
out
push
lds
aas
or
mov
addr16
int3
sub
adc
jl
pushf
les
push
dec
rcr
add
cld
dec
in
roll
xchg
xchg
in
lods
jns
and
push
loope
imul
sbb
sbb
adcl
loop
mov
imul
adc
adc
in
cmp
jbe
sub
cmp
or
jae
aaa
mov
sbb
add
jmp
jae
pop
xchg
xlat
out
dec
dec
dec
push
shrb
lea
mov
loope
inc
in
out
or
andl
in
push
rolb
mov
push
pcmpgtb
out
inc
jnp
ja
push
dec
or
and
addr16
and
mov
in
and
popa
mov
fdivr
andps
push
sti
add
or
stc
and
sbb
or
sbb
inc
cs
and
stos
enter
into
push
pop
cld
jnp
movsl
aad
jp
fsubrp
sarb
aaa
inc
int
fwait
cs
mov
push
sub
xor
mov
and
sbb
stos
adc
and
pop
mov
out
loop
mov
fidivrl
orb
dec
sbb
push
xor
aam
mov
mov
push
sbb
jae
mov
imull
jbe
insb
sti
icebp
adc
arpl
jnp
sub
cs
xchg
or
out
cmp
fdiv
cmp
repz
fcoml
and
test
or
jne
dec
out
add
test
je
adc
jns
sub
ss
sahf
mov
jb
mov
inc
push
jmp
mov
shl
pop
int3
lods
loop
clc
mov
dec
rcr
jge
dec
movsl
push
mov
xchg
adc
mov
mov
xchg
sub
inc
stos
iret
shrb
lcall
mov
ja
enter
add
test
pusha
sub
repz
pop
xor
shrb
pop
xor
insb
push
mov
jo
outsl
xor
pop
pushf
cs
jmp
cli
js
mov
outsl
jo
dec
adc
jne,pn
sbb
pushf
push
sahf
jbe
and
inc
mov
aaa
pop
cld
imul
mov
pop
out
sbb
ljmp
mov
jnp
push
enter
in
mov
in
sbb
sti
insb
mov
dec
inc
mov
cmp
ficomps
jecxz
and
push
inc
fsts
insl
in
fsts
xor
or
sbb
xor
ret
push
aas
bound
loopne
bound
mov
sub
jge
sbb
lret
out
out
jns
jo
insb
fs
xor
bound
js
inc
rolb
cmp
jl
and
incb
das
jge
pop
mov
in
lahf
aas
jo
repnz
aaa
in
sbb
mov
je
shl
cwtl
in
sti
sti
add
outsb
mov
add
imul
xor
inc
movsb
jmp
test
pushf
lcall
out
clc
leave
mov
or
fcmovnb
sub
push
pop
inc
inc
mov
jmp
pop
push
pusha
mov
dec
and
shrl
fisttpl
notb
add
xor
jl
mov
mov
jl
scas
pop
mov
cs
fiaddl
test
js
stc
insl
and
test
mov
test
imul
out
pop
jb
scas
fimull
fsts
cmp
and
lcall
js
ret
repz
jl
mov
cmp
mov
pop
repnz
mov
aad
mov
in
cmp
leave
lret
or
lcall
pop
xor
pusha
and
loop
leave
mov
ds
cmp
mov
jmp
arpl
pop
subb
cmpb
pop
cli
movsb
mov
jnp
adc
out
mov
push
das
insb
fwait
test
xchg
mov
nop
cs
loopne
inc
enter
into
fstpt
or
lods
daa
add
stc
sbb
psubd
das
outsb
ljmp
fldt
adc
mov
ret
sub
ja
sub
fmul
bswap
enter
inc
and
outsb
cmp
testl
jnp
and
mov
ljmp
mov
dec
fwait
fwait
adc
subb
mov
cmp
fsts
sub
aas
stos
and
push
fs
pop
mov
jae
and
testb
and
mov
add
mov
inc
sub
jno
sbb
popa
fdivs
adc
xchg
cmp
mov
cmp
loope
pop
mov
in
das
shrl
jecxz
lret
and
sub
mov
push
insl
imul
pushf
mov
lock
sub
out
stc
xchg
pop
jg
aad
in
daa
lcall
adc
xor
imul
test
outsb
imul
out
or
and
fcmovnb
std
jb
xchg
dec
pop
or
outsl
jno
mov
dec
push
xchg
ljmp
jmp
mov
xchg
loope
add
pop
cmp
pushf
or
gs
in
ljmp
into
rcl
jl
xor
outsl
sub
or
and
jg
fldenv
push
int3
aam
addl
ret
xchg
aam
mov
addr16
pushl
in
dec
dec
pushf
dec
cmp
out
and
mov
test
ret
add
push
or
dec
dec
lods
cmp
lret
pushf
lcall
aas
dec
shll
add
pop
stc
popf
cmpsl
push
loope
mov
nop
inc
inc
mov
jnp
xlat
sub
mov
data16
sbb
data16
and
xor
insb
xchg
mov
mov
or
rcr
ds
add
mov
das
fdivr
aad
mov
cmp
in
dec
mov
insb
sahf
sub
or
adc
add
xchg
jb
jp
sysret
inc
fwait
dec
adc
fidivrl
lock
or
xor
in
lods
hlt
add
test
push
dec
inc
aam
imul
pop
enter
pop
testb
mov
in
adc
int
inc
packsswb
inc
pop
pop
mov
ljmp
sub
and
jno
add
jb
dec
mov
dec
xor
out
shlb
arpl
mov
popf
pop
xor
cmp
inc
jmp
cwtl
inc
jnp
cmp
mov
sbb
mov
dec
fisttpll
xorb
push
mov
fwait
dec
js
dec
jp
into
or
ljmp
enter
hlt
aam
xchg
push
sbb
xchg
sub
push
lods
dec
leave
mov
pop
xor
xchg
jbe
mov
ds
out
mov
push
mov
loope
mov
cmp
sti
cmpsb
scas
or
jae
or
in
mov
lcall
mov
and
insl
aaa
jge
mov
dec
in
push
jne
lret
stos
shlb
into
or
cmc
cmc
leave
adc
lds
jmp
adc
push
xchg
mov
or
out
aam
popa
jae
xor
fwait
out
aam
add
stos
add
lods
sub
vrangeps
test
xor
push
and
std
pop
lcall
pop
jecxz
mov
movsl
not
dec
fstp
inc
cmpl
dec
xchg
es
xor
call
lret
xchg
rcll
sbb
imul
movsl
pop
or
push
inc
inc
mov
mov
mov
bnd
je
das
push
out
mov
aad
popa
push
and
pusha
pop
push
lahf
movsl
mov
adc
ljmp
out
mov
std
iret
jecxz
pop
mov
push
adc
mov
jmp
sarb
xchg
out
mov
jmp
lods
mov
xchg
daa
int
adc
nop
dec
pop
into
repz
jnp
pop
out
test
mov
adc
mov
or
jnp
test
negl
cmp
addr16
jae
pop
xor
sbb
pop
sbb
stc
xchg
mov
ja
aas
shl
leave
lods
mov
pushf
and
adc
not
sbb
insl
or
lods
xchg
mov
mov
into
in
or
mov
fsubl
in
jmp
inc
mov
inc
and
mov
pop
push
das
or
inc
jge
stos
mov
push
out
aad
inc
add
sbb
dec
sbb
sub
scas
mov
dec
or
xlat
push
mov
enter
adc
cmpsl
and
pop
stos
outsb
sub
popf
dec
pop
ja
pop
xchg
jb
data16
push
std
pop
mov
mov
or
cmp
mov
or
push
mov
xor
jle
mov
jecxz
add
xchg
jmp
mov
pop
pushf
sub
mov
orb
out
movsb
add
inc
mov
imul
enter
cld
mov
and
xchg
adc
jne
ret
xor
outsb
or
sbb
mov
int3
mov
mov
pop
or
or
pushf
imul
aaa
sbb
enter
pop
mov
sbb
mov
jge,pt
pop
out
scas
mov
mov
outsl
es
lret
js
clc
fcmovnbe
sbb
gs
in
push
push
xor
mov
mov
jns
mov
repnz
int3
incl
adc
mov
andl
jp
xchg
adc
out
mov
lods
movsb
pop
dec
pop
fldcw
ja
cmp
call
and
cmp
or
xlat
mov
outsb
mov
sub
adc
shlb
ret
push
and
stc
push
or
dec
pop
testl
xchg
jbe
adcl
jns
lret
lahf
mov
push
push
cld
lret
xchg
xchg
movsb
xchg
in
movsl
rorb
fimull
mov
cmpsb
out
outsb
jg
stos
fimull
xor
add
cld
sbb
xchg
data16
xor
and
nop
lret
jmp
jbe
pop
and
mov
clc
mov
ret
add
mov
data16
pop
mov
js
out
ret
sahf
outsb
dec
mov
cmp
jl
cmp
jne
lcall
aad
repnz
mov
test
xor
lret
inc
xor
sbb
push
das
jg
cmp
jnp
fwait
and
fdivrl
cmpb
inc
lods
dec
and
shll
in
cmpsb
xchg
push
aad
push
pop
loopne
lods
xchg
out
pop
xchg
push
enter
and
and
mov
push
xor
xchg
in
clc
pop
mov
sub
sbb
scas
dec
ret
or
repnz
xlat
inc
into
loopne
xchg
outsb
repnz
ret
pop
adc
push
fpatan
in
pop
out
sub
inc
pop
and
test
iret
gs
xlat
push
xchg
dec
lods
push
arpl
jnp
xor
lods
loope
mov
xor
test
cmp
clc
push
xor
pop
in
mov
mov
hlt
adc
dec
inc
add
ret
push
cmp
test
fsubrl
add
xor
xchg
jl
xor
test
xchg
xor
mov
xchg
stos
cld
addr16
xor
sti
and
mov
push
jp
shrb
lods
pop
movsl
inc
cmp
push
fisttpl
movsl
pop
fisubrs
sub
lds
mov
shlb
in
jno
push
fldl
mov
dec
shlb
flds
xchg
daa
jae
or
test
lret
lods
je
xor
dec
stc
pop
hlt
ret
aas
loop
and
pop
pop
aas
add
inc
mov
pop
scas
out
xor
loopne
xor
mov
mov
pop
sub
lahf
mov
inc
cmpsb
sbb
subl
push
push
push
add
int
stos
sbb
sub
mov
ss
in
mov
xchg
inc
pop
mov
outsb
sbb
mov
test
or
sbb
ss
rep
xor
mov
cwtl
lds
mov
xor
dec
loop
dec
add
sub
cmp
or
punpcklwd
mov
mov
lret
cmpsl
sub
cmp
stc
lea
sbb
mov
out
mov
lods
inc
cld
mov
cmp
jae
adc
sub
lea
adc
popa
mov
push
dec
xchg
jbe
sub
addl
inc
dec
lds
adc
pusha
outsl
xorl
xlat
inc
shld
sbb
enter
pop
int
push
xor
nop
daa
push
das
divb
repz
sub
mov
out
dec
leave
xor
sbb
and
insl
push
inc
int
cmpl
rolb
or
mov
mov
lea
out
je
push
in
gs
sbb
jnp
inc
push
mov
xchg
scas
lret
mov
cmp
ja
adc
pop
xor
push
xchg
bsr
inc
sub
xor
lds
jl
packsswb
cmpsb
or
fildll
ss
orb
aad
sbb
mov
outsl
pusha
leave
dec
cmc
push
jle
or
insb
inc
and
je
xlat
aad
add
jp
fimuls
fldl
fs
fdivrp
jae
xor
mov
sbb
dec
pop
lods
xchg
mov
add
stos
enter
adc
jp
or
mov
jo
jecxz
xor
arpl
cwtl
lahf
adc
sub
daa
jo
scas
ljmp
scas
dec
rolb
jg
pop
pop
std
sub
dec
rcrl
in
bound
lods
sub
pop
mov
movsb
enter
ja
fmuls
cmpsl
xchg
mov
or
dec
imul
add
add
xchg
mov
mov
int
sbb
push
je
mov
dec
add
cmp
xor
adc
pop
add
mov
and
xor
shlb
out
into
mov
movsl
stos
aas
rol
push
or
xchg
ss
stos
push
lahf
cmp
mov
movsb
add
test
xor
scas
mov
inc
push
ss
mov
xchg
jmp
loopne
repz
add
mov
or
lcall
add
iret
cld
lret
rcr
cmp
inc
inc
sbb
mov
iret
jne
iret
mov
push
lock
insb
push
repnz
xor
movsl
xchg
push
sub
mov
jnp
mov
jno
shll
and
std
aam
je
dec
or
mov
in
jmp
mov
fmuls
cmp
jnp
ret
sbb
mov
inc
and
push
dec
repnz
push
jne
xorb
xchg
mov
dec
mov
mov
xlat
popa
push
jbe
cmp
jge
aaa
aaa
movsl
pop
jne
xchg
jmp
push
mov
fsubrl
lods
cmpsl
stos
push
outsb
negb
out
mov
pop
sarl
inc
mov
push
fsubl
out
repnz
xor
sbb
sbb
mov
xchg
and
mov
jp
push
pushw
lret
cmp
mov
insl
lea
mov
popf
pusha
lahf
mov
pushf
pop
imul
jmp
divl
pop
xchg
test
inc
imul
movsb
or
lret
loopne
sbb
icebp
pop
xchg
sbb
jno
outsb
xchg
popa
pop
shll
add
add
sti
mov
mov
jae,pt
or
jecxz
push
sahf
js
out
mov
xor
idiv
sar
add
xchg
mov
js
add
ret
mov
push
mov
push
addr16
loopne
jl
sub
push
push
adc
lret
flds
js
lret
stc
mov
ds
inc
movsl
jge
rorb
inc
mov
sahf
push
jge
push
inc
mov
jmp
adc
cmp
cltd
scas
xorb
js
cmc
xchg
incb
mov
loope
mov
aad
icebp
outsl
mov
loop
xor
ret
adc
pop
imul
aas
hlt
jno
cmp
xchg
or
hlt
add
clc
aam
dec
inc
sbb
or
ret
or
cmp
outsb
call
mov
inc
mov
in
adc
movsl
mov
xor
dec
add
fnstenv
sbb
pusha
sbb
adc
mov
mov
sbb
test
or
xor
mov
jmp
test
dec
cmp
loope
dec
aad
jmp
push
push
fs
mov
jmp
lods
negl
xchg
cmpsl
mov
movsb
jbe
outsb
push
in
push
popa
dec
cmp
fcoms
push
mov
mov
add
movsb
xor
mov
pop
cwtl
movb
cltd
sbb
fcmovnbe
xlat
jno
shll
mov
pop
xor
xor
test
lcall
out
and
add
cld
outsl
xor
lret
test
sub
mov
or
mov
xchg
repz
movsb
inc
push
and
add
jl
mov
pop
push
imul
fdivs
push
les
xor
lods
movsb
outsl
add
push
out
push
lea
sbb
aas
mov
loope
scas
xor
dec
inc
pop
sub
jno
ret
lock
cwtl
pop
fxch
push
mov
rcrl
mov
dec
cmp
adc
xchg
hlt
hlt
pop
push
lcall
cmp
ja
popf
jg
rorb
mov
push
test
fwait
outsb
sahf
arpl
ffreep
aas
arpl
cwtl
adcb
mov
and
sub
hlt
mov
or
jno
or
or
pop
jg
dec
mov
mov
scas
sub
les
add
inc
iret
call
sbb
scas
dec
cs
outsb
jge
jnp
aas
lret
sbb
or
xlat
fildl
repz
out
cmp
ret
ret
out
xchg
repz
xorb
lea
insl
or
push
mov
push
mov
pop
mov
mov
push
js
test
lret
test
pop
push
xorl
fcoml
adc
repz
cmp
xor
movsl
inc
pop
mov
or
test
arpl
pushf
data16
mov
pop
mov
mov
lods
lret
mov
xor
xchg
mov
aad
dec
sub
aas
out
rdmsr
mov
pop
add
xor
hlt
jno
int
inc
mov
pusha
adc
sti
call
lret
xchg
push
aaa
ljmp
cmp
cs
decl
scas
xchg
mov
mov
cmp
stos
mov
stos
pop
xchg
and
cmp
in
xor
mov
imul
hlt
hlt
xchg
sbb
lods
xchg
loop
or
rclb
jnp
jecxz
jno
sbb
pop
jo
cmp
xchg
int3
outsb
call
adc
or
xchg
fstpt
addl
add
mov
rolb
lods
mov
dec
xchg
and
inc
iret
lcall
out
cmp
rolb
jecxz
cmpsl
sbb
mov
dec
push
icebp
or
dec
jecxz
bound
mov
pop
pminub
cmc
xchg
fldenv
mov
inc
inc
jmp
or
xorl
popf
push
clc
push
add
or
dec
mov
xor
and
xor
loope
xchg
fbstp
cmp
pop
or
dec
arpl
stc
lods
and
ja
inc
or
adc
daa
or
dec
ret
orl
icebp
jge
cmpsl
jl
dec
xor
js
mov
inc
mov
call
fs
push
rcrl
mov
push
jnp
push
les
inc
test
test
shlb
filds
test
jb
scas
pushaw
xor
push
and
or
push
or
gs
add
jecxz
adc
dec
xor
sbb
pop
add
cmp
jae
sub
push
xchg
cmp
aas
lcall
lret
shlb
mov
push
dec
lock
mov
clc
jmp
mov
add
notl
ss
push
xor
popf
push
or
jge
jns
cmp
fldl
int3
jbe
pop
mov
scas
jo
push
xchg
cmp
iret
sbb
in
jl
stos
imul
mov
imul
sub
pushf
icebp
test
movsl
push
mov
xchg
rolb
pop
daa
and
or
test
nop
mov
pop
fisttpll
sti
ljmp
lock
xlat
pop
mov
scas
pop
lds
fistl
inc
pop
repnz
outsb
and
stos
xchg
in
mov
push
xor
xorl
in
cmp
data16
clc
jns
lret
test
jns
in
lret
clc
ficoml
mov
jbe
mov
xchg
call
mov
fwait
out
add
fsts
inc
and
sti
cmc
ret
data16
cmc
adc
dec
push
cmp
gs
call
jne
notl
pop
xchg
pop
jne
mov
bswap
cmp
jmp
aam
and
int3
pusha
xchg
adc
jl
movsl
mov
dec
mov
xchg
cmp
mov
in
or
lahf
leave
and
sub
int
jbe
xchg
jmp
cmpsb
xorl
fldcw
ret
leave
sbbb
das
mov
rcrb
push
mov
jl
aam
xor
shrl
jno
mov
xchg
mov
lahf
jmp
enter
xchg
or
pop
sub
stc
gs
sti
pusha
fldl
ret
pop
dec
sub
or
pop
mov
mov
mov
adc
ljmp
mov
mov
ja
loop
dec
call
sbb
cmpsl
cmp
xor
dec
mov
push
les
add
notl
jb
or
hlt
stc
fdivrp
orl
or
pop
ror
mov
inc
push
mov
rcl
in
test
add
ds
mov
jo
push
cmc
sbb
lea
loopne
lret
push
mov
fmuls
ret
fildll
jge
das
fsub
inc
sbb
mov
lods
sbbl
xor
cmp
js
jne
pop
push
out
dec
push
fcomps
cmp
inc
ljmp
mov
pop
xchg
sahf
jp
cltd
lahf
mov
cli
add
xchg
das
decl
mov
rcrl
movsl
cmp
cwtl
dec
fldln2
lret
sbb
xor
popf
mov
mov
in
or
pop
cs
adc
mov
jecxz
loopne
mov
enter
and
out
icebp
inc
mov
push
or
mov
cmp
or
fcmovb
and
sub
stos
enter
and
mov
xchg
ds
pop
or
xchg
ss
jg
vpcmpeqw
rcrl
shll
dec
mov
xlat
lock
and
mov
imul
daa
pop
shl
xchg
push
outsl
shll
xor
jo
mov
cmp
mov
movsb
rcrb
mov
adc
sbb
subb
mov
daa
adc
push
xlat
mov
lcall
add
imul
sub
popa
lods
xchg
pop
movsl
add
sbb
ret
mov
xor
xor
lds
negl
lcall
push
hlt
inc
sub
dec
addl
or
mov
mov
out
inc
pop
lds
dec
jae
scas
arpl
jp
mov
jo
dec
cmp
ss
or
jno
sub
fnsave
xchg
mov
xchg
mov
mov
adc
insl
dec
shlb
hlt
push
xor
sbb
aam
movsl
dec
arpl
or
inc
xor
inc
clc
xor
jne
or
inc
jno
mov
or
xchg
gs
jl
jbe
jecxz
pop
cmp
and
dec
fs
popf
repz
xchg
xchg
sbb
cltd
decb
fwait
push
pop
dec
cmpsl
data16
testl
sub
or
lret
loopne
mov
mov
sahf
nop
pop
aaa
ja
adc
ficoml
add
ds
and
into
or
jmp
mov
bound
lcall
mov
cmp
mov
mov
xor
xor
stc
imul
add
sarb
mov
int
idivb
lods
loopne
xchg
push
in
and
add
inc
pop
divb
pand
sti
adc
mov
pop
jmp
popa
and
cmp
pusha
data16
push
mov
movb
mov
or
add
and
push
cmp
xchg
es
lock
jae
mov
xchg
jne
ss
test
push
push
stos
pop
adc
fistps
cmpsb
into
and
and
test
decb
int
fimull
enter
arpl
stc
mov
scas
pop
sti
int
aam
cmp
lahf
test
es
mov
jne
push
out
push
hlt
push
push
cmpsl
repnz
pop
stc
jg
lds
mov
divb
inc
ljmp
sahf
jne
push
call
mov
pop
jp
sub
sarl
add
xchg
cmp
sub
daa
adc
loop
out
jnp
mov
adc
fs
sbb
aas
lock
or
mov
push
or
pop
xor
mov
push
icebp
incb
or
cli
ds
dec
inc
in
push
dec
mov
int3
sbb
adc
cmpsl
or
loopne
or
jno
shlb
add
cmp
jmp
mov
push
jbe
pop
xchg
pushw
adc
adc
pop
dec
movsl
ss
cld
jae
mov
dec
xchg
lds
jb
icebp
cmp
call
scas
enter
fldt
and
not
and
dec
scas
sti
cmpsl
and
mov
pop
xchg
mov
adc
jno
adc
popf
push
add
movsl
mov
xchg
cli
xchg
popf
and
mov
sbb
jle
sbb
sbbb
je
push
das
mov
mov
iret
lret
jnp
rorb
jle
or
imul
stc
mov
push
and
shrb
jb
jns
inc
pushf
aaa
out
cmp
inc
or
andl
and
mov
lahf
je
xor
mov
and
cwtl
push
xor
sub
or
mov
hlt
shll
fcmovbe
add
adc
inc
sbbl
mov
fsubrs
jno
lods
cmp
adc
add
jnp
test
mov
jnp
inc
inc
nop
pop
xchg
mov
mov
hlt
lods
ja
add
test
testb
mov
cmpsl
mov
push
mov
sub
jnp
popf
cltd
push
ljmp
shr
jge
mov
insl
jle
mov
std
out
mov
mov
cli
jno
dec
mov
pop
andb
addl
lret
les
mov
mov
adc
pop
out
push
jg
setl
test
lods
adc
into
jno
hlt
out
rcr
inc
and
push
mov
sub
cmp
test
lods
lret
dec
outsb
pusha
into
std
dec
cli
test
aas
pop
js
iret
mov
jl
jno
ss
jecxz
lods
add
test
int3
mov
sahf
cmp
addb
pushf
cmp
cmpsb
in
fsts
test
cmp
add
cmp
mov
inc
insb
insb
pop
mov
shrl
jae
out
das
in
leave
icebp
cld
sub
lahf
or
adc
sbb
push
xor
and
or
jmp
in
inc
daa
dec
adc
pushf
push
jg
or
push
or
adc
pop
mov
and
mov
out
ja
das
xor
cmpsl
gs
cmp
mov
pop
dec
jnp
es
movq
xchg
std
xor
xchg
pop
inc
leave
mov
dec
xchg
mov
mov
cmpsb
lret
mov
mov
pop
mov
inc
shll
sub
fcomp
inc
pop
mov
mov
pop
pop
aaa
push
mov
test
addb
pop
sahf
lea
ret
mov
ret
and
cmc
bound
mov
or
xchg
psrlq
shlb
xchg
je
mov
cmp
adc
pop
push
mov
and
fldcw
call
pop
roll
insb
sbb
push
call
jle
jbe
in
pop
sbb
pop
loop
jg
dec
inc
fs
push
popa
xchg
aad
jae
pop
inc
inc
mov
fcompl
pusha
dec
mov
xlat
data16
pop
push
cmp
xlat
jmp
jg,pn
and
into
sbbb
mov
xchg
cld
inc
jl
push
in
cld
xchg
aas
aam
push
pop
push
mov
xor
and
fstpt
jno
inc
fcoms
mov
adc
dec
sti
dec
js
pop
cmpsb
out
xor
sbb
cwtl
icebp
cld
xor
mov
xchg
inc
inc
adc
lds
fcompl
mov
cmp
pop
push
xchg
daa
in
xchg
lcall
pop
xchg
mov
push
sbb
sbb
push
lods
gs
repz
or
push
sub
cmpsb
int3
mov
data16
jl
lret
je
pushf
loop
shlb
sahf
adc
jns
push
jecxz
icebp
sub
cmp
xchg
fisubs
sbb
scas
or
cwtl
loope
repz
inc
arpl
insb
in
testl
push
fwait
xorl
dec
push
push
out
cmp
test
xor
insl
push
popf
aas
cli
mov
fisttps
fwait
xchg
adc
cmc
and
mov
cs
push
repz
push
ret
dec
sbb
mov
sbb
pop
sub
fildl
push
sub
aas
pop
or
test
and
push
lock
ljmp
jmp
test
sub
sbb
mov
dec
stos
jno
inc
lods
leave
cmp
xor
adc
iret
mov
int3
js
cmp
dec
sti
add
inc
mov
jae
jle
mov
or
scas
cmp
cmp
xlat
test
dec
stc
inc
lods
in
insl
fbld
sbb
xchg
stc
fdivr
xchg
icebp
inc
repnz
fists
stos
mov
xchg
cmpb
movsb
jp
pop
inc
push
add
adc
push
cmp
pop
fcoml
pop
mov
pop
xchg
adc
mov
insl
sub
lahf
push
push
mov
add
mov
xchg
mov
out
jl
mov
jle
sub
fs
out
scas
cmp
ds
fldcw
jb
sbb
in
enter
xor
xchg
sub
pop
and
mov
inc
xlat
loopne
inc
or
mov
mov
inc
repz
and
sbb
adc
xor
inc
xchg
aas
or
out
cld
rclb
mov
xchg
shlb
cmpsl
sbb
ror
ljmp
dec
ljmp
ss
jo
xchg
xor
outsl
jo
sbb
and
enter
cmpsl
loop
fstpt
in
mov
mov
add
fwait
sbb
enter
push
add
mov
add
pop
in
lcall
add
test
sbb
mov
cmpsb
xor
or
aam
dec
shrl
int3
je
sub
popa
xor
out
rol
ja
push
out
jge
push
xor
sbb
faddl
iret
aam
xchg
test
and
testl
xlat
not
out
sbb
inc
loop
pop
xchg
xchg
outsl
pop
dec
xor
loopne
or
or
xchg
popa
mov
fcoms
or
or
mov
outsb
inc
mov
push
xchg
out
sbb
je
xor
aaa
add
mov
mov
imul
ret
std
call
enter
out
and
adc
pop
jmp
je
dec
sub
insl
and
lods
sbbb
out
push
sbb
lds
push
jbe
push
xor
pop
ror
jp
jl
xor
sti
fistps
sarl
sub
pop
xor
pushf
into
pop
lcall
lret
or
rol
ror
movsb
mov
add
adcb
cli
faddl
adc
clc
lret
xor
adc
test
popf
cli
and
lahf
xor
test
pop
jmp
in
js
rcrl
adc
shl
mov
mov
mov
jnp
jecxz
cmpsb
push
or
adc
or
pop
imul
les
in
int
mov
ffree
repnz
pop
pop
cli
push
ret
adc
aaa
or
les
lods
xor
inc
or
lods
inc
xor
mov
movhps
cmp
push
int3
or
outsb
xchg
jnp
stos
and
rolb
pop
push
cmp
mov
aas
mov
mov
inc
repz
mov
push
and
sub
out
cwtl
push
aam
push
pop
inc
inc
push
outsl
push
stc
sub
shlb
add
pushf
jns
jle
push
lods
lods
xchg
lret
cwtl
leave
das
jecxz
pushf
pop
mov
or
out
add
bound
arpl
dec
ja
adc
xchg
jno
cmp
pusha
sub
ljmp
push
xor
ljmp
lea
inc
sub
outsl
xchg
xchg
cwtl
jno
and
jmp
mov
jnp
and
inc
and
jl
dec
or
out
ss
test
jle
dec
push
cmc
pop
inc
jg
xchg
bound
ljmp
sub
ljmp
cmpb
jo
loopne
shlb
mull
push
xor
cmpsl
ret
mov
subb
stos
in
adc
aas
push
mov
cltd
loope
lods
shlb
sbb
popf
orb
enter
test
cwtl
jmp
stos
scas
fs
out
roll
repnz
insb
test
fcmovnbe
ds
xchg
outsb
cmp
push
pop
roll
fabs
and
or
xchg
in
sbb
shll
push
mov
iret
enter
jle
sub
adc
cmp
adc
xchg
inc
cmp
loop
les
rorl
sub
or
jl
sbb
ret
jle
xchg
lret
divps
lods
dec
fwait
xchg
sub
loope
cmp
dec
jmp
lfs
mov
leave
jp
jbe
xor
sub
mov
jmp
pusha
repz
js
jno
imul
dec
ss
das
dec
push
imul
push
fcomip
fdivl
or
aas
mov
mov
adc
es
and
push
or
xchg
adc
int3
add
xchg
inc
imul
mov
adc
jp
push
cli
aad
mov
xor
out
xchg
push
mov
xchg
scas
ret
sub
fwait
adc
sub
adc
jne
jnp
add
push
jp
mov
push
add
shrb
sbb
cmp
out
mov
mov
test
fwait
xchg
push
loope
adc
jns
js
jmp
push
rclb
pop
movsb
inc
shll
nop
inc
repnz
add
mov
adc
xor
lods
ljmp
roll
jnp
sub
cmc
clc
fcoml
sub
insl
notb
ss
sbb
pop
lcall
shlb
cmpsb
lret
cmp
and
adcl
sar
js
ds
jp
int3
fyl2x
mov
loope
lcall
push
add
lret
cmp
xchg
mov
ds
fldln2
inc
pop
orb
popw
repz
add
mov
jo
inc
push
cltd
mov
adc
mov
insl
mov
push
bound
outsl
icebp
mov
movsb
lods
push
pop
test
jmp
mov
test
in
mov
dec
sbb
push
mov
out
push
lcall
jno
sub
icebp
mov
ljmp
dec
pop
ret
sub
push
xor
cmpl
jecxz
ret
lcall
enter
mulb
cmp
jno
std
bound
jb
fcomip
xchg
and
sbb
mov
pop
pop
fisttps
xchg
inc
cmp
mov
pop
std
add
push
mov
loope
jle
enter
repnz
cmpb
ficomps
ss
push
mov
addr16
add
pop
sub
xchg
cmp
iret
xor
adc
insl
rclb
jg
add
out
push
sbb
sbb
fdivrl
test
mov
mov
xchg
movsb
data16
inc
rcrl
lret
or
mov
in
xor
add
jg
daa
call
jmp
gs
inc
or
or
or
sbb
pop
icebp
pop
xor
shll
pop
jg
call
xor
mov
je
cmp
fistl
movsb
fs
cmp
fwait
mov
aas
mov
ljmp
and
push
or
push
sub
xchg
aam
fiaddl
pop
negb
cwtl
sbb
add
shlb
imul
pop
cmpsb
dec
pop
out
or
or
repz
sbb
fisttps
repz
fmull
daa
call
sbb
mov
out
and
cmp
clc
mov
mov
or
mov
xchg
adc
adc
mov
fstpt
inc
pop
enter
sub
inc
or
lahf
into
add
xchg
adc
xchg
jp
in
adc
in
mov
jp
andl
mov
mov
mov
fidivs
outsl
push
mov
hlt
cld
inc
test
insl
int
repz
cmp
sub
movsl
loop,pt
xchg
push
pop
pusha
repz
out
adc
in
stc
pop
xor
scas
out
sarb
pop
add
pop
ret
insl
fs
std
sbb
adc
jl
push
add
or
out
xchg
xor
gs
sbb
cmp
loopne
cmpsb
rcr
pop
loop
sti
cmp
cs
cwtl
jg
inc
inc
push
cs
xchg
inc
hlt
and
adc
cmc
push
aas
stc
inc
call
xsave
mov
mov
rcl
in
dec
cmp
loopne
es
cmp
test
jg
dec
add
jo
add
pop
filds
and
test
mov
dec
push
push
lret
and
aad
lds
test
pusha
or
cmpsl
push
fistpl
and
fisubrl
divl
pop
loope
jl
pop
cmp
mov
and
lret
inc
push
xor
adc
imul
fnstcw
mov
or
jae
sbb
cmc
cli
fwait
sub
mov
cltd
pop
shll
call
xchg
adc
je
cmc
mov
mov
jmp
loope
add
out
pop
in
stc
enter
fcmove
jle
mov
fwait
js
xor
clc
dec
cmp
mov
jb
inc
adc
leave
in
leave
adc
push
xor
lret
mov
call
push
inc
addl
sbb
add
jnp
push
push
inc
jae
lea
inc
adc
cwtl
mov
jl
sub
roll
fildll
jae
insl
cmpsl
in
fs
or
mov
xchg
loope
fcoms
cs
out
dec
dec
fmulp
faddl
fcoms
jl
psrlw
mov
shrl
jecxz
ficomps
stos
test
pusha
or
aam
push
or
aam
in
xchg
movsb
adc
lea
leave
mov
mov
into
adc
lods
and
inc
lcall
or
push
mov
cltd
js
or
jns
push
mov
shlb
add
cld
into
pusha
adc
daa
and
pop
ja
imulb
mov
cwtl
mov
lods
in
dec
je
cs
inc
push
xchg
ret
pop
adc
repnz
push
mov
adc
dec
sbb
int3
rclb
outsb
push
sahf
call
call
cltd
xchg
stos
ret
test
orl
jmp
inc
inc
mov
popa
add
mov
xor
mov
inc
push
xor
into
pusha
mov
pop
call
cmc
out
test
mov
jno
or
xchg
ljmp
sahf
rcrl
repz
jne
mov
add
mov
mov
jecxz
mov
mov
pop
mov
mov
lret
or
jb
mov
out
cltd
js
xchg
mov
scas
fnstsw
inc
xchg
call
adc
inc
push
pop
loop
call
pop
mov
movsl
mov
mov
cs
or
mov
stos
ret
push
or
in
aam
cld
xor
jp
in
shll
dec
lret
scas
pop
xlat
push
mov
pop
stos
movsb
repz
fcoml
xchg
sbb
xchg
and
repnz
filds
push
ljmp
mov
sub
jno
clc
outsl
movb
test
std
bound
call
out
out
xor
jns
call
pop
fucom
mov
insl
mov
jecxz
cmpsl
push
ds
stc
jne
inc
jecxz
pusha
int3
inc
mov
in
pop
inc
push
mov
push
sbb
pop
mov
cmp
push
sub
imul
or
bound
push
cltd
mov
or
scas
dec
enter
xchg
sbb
imul
xchg
fistl
xor
scas
pusha
mov
lds
jae
inc
adc
cmpsb
arpl
sub
inc
and
hlt
clc
sub
not
sub
iret
adc
fidivl
sti
cs
fdivrs
xor
repnz
in
cmp
mov
jae
jg
adc
xchg
lcall
push
les
jb
and
mov
mov
cmp
pop
fidivrl
stos
test
les
test
mov
or
sub
filds
and
inc
movsb
mov
lods
pop
or
mov
inc
cmp
xor
jnp
pop
in
cli
test
xchg
sub
jg
adc
scas
inc
scas
lahf
out
pushf
fs
inc
sahf
lea
std
cwtl
rcrl
push
fbld
incb
sti
cmp
mov
test
ja
outsb
mov
lods
aas
mov
xor
loop
add
andl
cmp
sbb
add
out
mov
rorl
dec
cmpsl
cmp
push
rcr
std
xchg
mov
inc
xchg
xchg
rorb
dec
push
sbb
fisubrl
pop
jbe
daa
mov
xchg
pop
addl
bound
mov
xlat
and
das
sub
jp
xchg
push
push
ret
jmp
lds
cs
je
adc
stos
pop
push
inc
aas
adc
push
or
and
xor
popf
xor
sbb
cltd
repnz
test
leave
mov
mov
imul
cwtl
jl
and
and
or
sbb
inc
out
movl
cmp
adcl
jl
out
ss
pop
mov
adc
in
sub
je
lahf
jb
icebp
xor
dec
shrb
stc
lods
jle
mov
add
into
test
jns
cmc
dec
pop
lea
lea
mov
je
mov
es
mov
and
mov
xor
and
int
pop
add
add
xchg
xchg
dec
ljmp
lock
add
mov
xchg
fsubl
fwait
lods
push
mov
cmp
cmp
push
pop
js
lods
xacquire
add
cmp
adc
in
icebp
enter
aaa
push
js
add
add
in
xorl
jns
mov
sbb
addr16
sub
stos
lods
xchg
push
fildll
pop
mov
xor
loope
scas
jnp
inc
shl
add
pushf
popa
inc
outsb
scas
mov
xchg
pop
ljmp
cmpsl
mov
jb
inc
xor
mov
ret
push
mul
js
mov
xchg
pop
push
aam
andl
mov
or
push
repz
rcrl
js
fs
push
nop
jb
adc
stos
jg
xchg
and
cltd
repz
lods
adc
insb
and
js
outsb
cltd
insl
pop
dec
insl
lret
jmp
fldenv
add
or
add
scas
add
xlat
push
repz
push
cs
shrb
add
adc
lods
ret
xor
mov
jb
xor
sahf
gs
pop
dec
mov
cmp
or
pop
sbb
push
and
movsl
sub
xor
and
pushf
insb
insb
insb
les
pusha
push
xor
pusha
push
xlat
mov
icebp
mov
sbb
mov
jge
loopne
scas
out
or
mov
mov
xchg
xchg
fcomp
adc
dec
out
jbe
add
or
cmc
cld
and
jb
sti
mov
call
aas
in
pop
fwait
mov
call
mov
mov
sub
push
in
andl
mov
cltd
pop
fidivl
or
aas
pop
push
adc
jae
fdivs
enter
loope
in
mov
cltd
cmp
divb
inc
jle
or
sub
js
fcoms
jl
xchg
inc
sbb
mov
sbb
add
dec
loop
push
sub
or
mov
pop
or
lods
dec
loopne
mov
call
imul
jno
outsl
and
fists
dec
in
mov
movsb
int
cmp
jg
jg
aas
sub
xchg
loop
and
lahf
scas
cmp
stos
pop
pop
pushf
mov
xchg
out
clc
insb
xlat
icebp
pop
xor
mov
loopne
cmp
push
popf
iret
mov
add
push
mov
add
and
mov
pop
pop
xchg
add
push
fcmovnb
push
ret
pushl
lds
clc
mov
cmp
repz
jg
clc
call
cmpsl
and
or
push
cmp
lret
out
pop
in
mov
inc
add
repz
inc
dec
add
inc
xor
inc
pop
sub
shlb
xor
add
cs
scas
rorl
xchg
cltd
int3
es
push
push
fsubrs
sbb
push
lahf
dec
cmp
dec
pop
loop
fcoms
jg,pt
jnp
jge
out
int
or
push
mov
fistps
ss
fs
push
les
sub
xor
enter
adc
outsb
enter
mulb
mov
and
orb
pop
and
push
popa
cmp
rcll
sbbl
pop
in
dec
imul
and
in
dec
dec
subb
jp
xor
inc
das
andl
sbb
stos
sub
lods
inc
push
je
stos
mov
sub
and
inc
adc
aaa
inc
out
jne
ja
mov
or
jle
sbb
pop
sub
mov
cld
repz
push
or
mov
adc
call
and
pop
fildl
in
sub
xor
arpl
sub
pop
push
dec
and
lret
push
pop
lds
loope
test
outsb
push
push
pop
mov
cltd
xchg
js
jge
inc
push
fidivrs
test
jnp
dec
mov
cmp
movb
mov
loope
aam
xlat
jl
std
jp
mov
xchg
insb
leave
les
dec
cld
popf
push
mov
insl
inc
or
ljmp
xchg
scas
inc
out
iret
out
xchg
adc
inc
dec
pop
and
add
sub
xchg
mov
mov
popa
mov
rorb
imul
dec
sbb
lea
jmp
or
insl
pop
scas
roll
std
dec
aaa
mov
mov
inc
xchg
daa
jge
cmc
xchg
mov
adc
or
subb
fimuls
out
cli
outsl
jnp
sub
xchg
dec
dec
pop
adc
out
push
jle
sbb
mov
icebp
mov
nop
sub
mov
fdivs
icebp
sbb
ja
fs
or
imul
jl
sarl
or
mov
bound
xor
decl
pop
mov
cmp
jbe
fldcw
fbstp
scas
sub
mov
lret
fldenv
sbb
movsb
xor
jo
sbb
hlt
xchg
or
movsb
pop
pop
sbb
imul
mov
pusha
ss
mov
inc
sahf
inc
and
fsubl
or
mov
stos
push
movsb
cli
sub
cmp
add
or
jns
xchg
insb
jno
aaa
stos
hlt
ret
push
mov
orl
mov
xlat
sub
cli
dec
push
stos
add
mov
mov
sbb
xchg
push
cmp
int3
mov
sarb
and
cld
cmp
inc
sti
push
imul
or
mov
and
test
dec
dec
sub
sti
scas
inc
outsl
mov
sub
pop
jno
jge
nop
xchg
les
enter
add
cmc
push
inc
pop
notl
addr16
push
sbb
xchg
loopne
and
enter
cmp
and
not
add
addb
jmp
fildll
push
hlt
push
stc
test
xchg
dec
and
fldl
sbb
fstpl
sarl
aad
add
push
dec
icebp
lret
mov
xorb
xor
sar
js
sbb
push
fists
push
add
aad
adc
dec
hlt
insl
mov
outsl
cs
movsl
dec
hlt
testb
push
cmp
jbe
pop
dec
mov
inc
inc
push
xchg
push
ret
push
and
mov
lods
insb
jbe
hlt
scas
and
inc
js
and
enter
inc
push
and
ljmp
sub
add
daa
or
js
xor
or
out
in
jge
popa
mov
adc
xchg
stos
data16
stos
ret
push
jne
sbb
push
push
cmp
sub
push
jg
or
or
mov
xor
inc
push
cmp
stc
aas
sub
push
incb
inc
and
ficomps
mov
mov
mov
xchg
das
incl
sbb
iret
out
out
lcall
push
adc
orb
lcall
xchg
into
mov
jo
aaa
mov
mov
cmpsb
cltd
push
mov
xor
jecxz
xchg
lea
out
lret
lea
jp
pop
push
rorb
movsl
sub
mov
xchg
or
xlat
or
jb
jae
leave
pop
loopne
xor
sbb
lods
mov
xchg
xor
xchg
inc
sbb
scas
andl
adcl
xlat
leave
mov
loopne
in
test
xorb
rcl
mov
add
loop
aas
jp
mov
add
dec
cwtl
divb
cmp
rorl
cmp
test
sub
lods
inc
outsl
mov
nop
mov
pop
inc
mov
fwait
outsl
out
fnstsw
outsb
add
xchg
mov
ja
test
add
sub
in
rorb
push
sub
xchg
adc
clc
mov
cmpsl
mov
das
arpl
and
jmp
or
pushf
inc
repz
fisubs
jl
dec
ss
maxps
mov
call
xor
adc
icebp
sub
cmc
fwait
push
in
iret
sahf
orb
xchg
cwtl
aam
imull
inc
adc
popa
adc
std
in
pop
sbb
sub
mov
scas
imul
jo
pushf
add
fnstsw
inc
and
out
push
cmp
sub
aam
scas
xchg
jg
mov
or
js
add
out
lcall
push
lea
pop
jno
pop
pop
cmp
fistps
ds
push
test
push
std
fisubrs
loopne
mov
cmp
int3
sbb
jns
das
add
mov
push
outsl
arpl
nop
push
sbb
shlb
inc
xchg
cmpsl
sub
push
xchg
and
xchg
sahf
movsl
out
jne
sub
testl
loopne
jmp
and
hlt
js
cld
test
jnp
je
cmp
cmp
or
test
xchg
es
fcmovb
sbb
inc
pop
ss
sbb
mov
cmpsl
pop
cmc
lcall
stos
repnz
movsb
sahf
mov
pusha
ss
xor
clc
add
mov
shrl
and
mov
dec
sahf
icebp
pop
inc
and
push
aaa
sub
xchg
pop
dec
adc
int3
cwtl
iret
mov
imul
lahf
inc
adc
int3
push
mov
sti
test
lods
in
xor
mov
xchg
fwait
jl
sub
lahf
inc
sbb
pop
or
mov
jno
lahf
adc
sbb
add
loope
adc
add
push
mov
and
mov
gs
sbb
sbb
mov
xor
mov
jmp
push
sub
pop
inc
fstps
inc
cmp
aad
xchg
mov
das
jb
jp
out
dec
mov
push
jnp
add
or
xor
lret
dec
in
enter
imull
imul
xor
inc
cmpsl
push
push
jb
lods
sbbl
dec
lds
mov
hlt
mov
xor
aas
xchg
nop
mov
adc
jbe
adcl
sub
in
mov
adc
jp
bnd
insl
push
mov
mov
in
xchg
push
ljmp
xchg
fidivrs
lcall
mov
test
inc
movsl
outsl
movsl
jo
mov
int
lock
cmc
sub
fnstenv
mov
mov
pop
pop
sub
mov
mul
mov
sbb
pusha
xlat
lret
leave
pop
jno
scas
loope
mov
addr16
xor
pop
insl
cltd
push
unpcklps
jo
push
dec
jne
nop
int3
divl
add
sub
insl
mov
adc
jo
cmp
mov
push
jne
push
or
push
mov
pop
ja
mov
dec
imul
loop
je
out
xchg
push
test
sbb
or
xchg
push
mov
cmp
pop
fs
inc
mov
adc
pop
lds
jno
inc
inc
sbb
cmp
mov
fisttps
aam
jno
mov
hlt
sahf
mov
orb
jae
xlat
mov
push
adc
cs
popf
lods
mov
shl
dec
repnz
cwtl
pop
dec
and
xchg
push
mov
popf
sbb
jns
or
sbb
or
xchg
push
inc
sbb
lock
inc
mov
fabs
inc
xor
mov
xchg
and
cmp
fidivrl
dec
push
fwait
and
pop
xor
aad
xor
push
fxch
dec
mov
int3
imul
dec
shrl
ffree
dec
jno
in
inc
adc
je
je
inc
mov
popl
jl
mov
push
int3
mov
enter
out
xor
movsl
jmp
xor
rclb
je
sub
ror
or
lahf
cmp
dec
gs
in
cmp
aaa
mov
mov
or
sub
inc
xor
push
inc
enter
dec
scas
adc
adc
add
shr
xor
or
pop
inc
push
test
fmulp
mov
push
jmp
mov
lahf
loop
or
adc
add
jle
lods
lret
fwait
push
in
push
ljmp
lds
cli
stos
dec
loop
ret
push
out
adc
mov
jbe
cli
jae
fisttpl
in
iret
nop
push
enter
cli
pop
int
push
add
and
add
clc
rcl
inc
pop
ror
fcmovu
jo
inc
es
push
stos
and
clc
or
and
cmpl
xlat
lret
inc
stos
or
mov
jge
enter
lret
mov
cmpsl
int3
pop
jg
lock
out
mov
insl
fsub
cmpsb
sub
pusha
cmp
in
sub
pop
dec
add
loop
sarb
arpl
jae
fnsave
add
mov
cmc
cld
or
popa
fcomip
inc
lret
mov
aad
mov
enter
outsl
mov
pop
pop
inc
xchg
je
aam
loopne
decl
xor
mov
cmp
aam
mov
pop
ret
lret
ficoml
hlt
push
addl
popf
jle
lods
adc
loopne
movsl
stos
daa
loop
push
lret
inc
or
pop
and
out
mov
mov
xlat
cmpb
je
mov
sbbl
pop
loopne
xor
je
mov
pop
cmp
enter
cmp
push
pushl
notl
jp
dec
inc
mov
sbb
dec
sbb
add
addr16
push
adc
sbb
rclb
jo
push
ds
daa
adc
aam
mov
popf
lea
mov
mov
mov
scas
and
xchg
aam
outsl
inc
sahf
hlt
dec
pop
lret
repz
enter
cmp
jmp
pusha
jp
popa
and
lret
fbld
xor
add
push
imul
fcoml
ret
adc
in
xchg
and
sti
test
fimuls
sbb
into
jbe
push
xor
mov
ds
jl
dec
dec
mov
repnz
fisttpl
mov
loop
dec
lahf
dec
fdivs
cmc
mov
jl
lods
push
xor
jle
data16
repnz
mov
or
or
fsub
add
cmp
push
mov
push
dec
push
mov
lea
ret
inc
scas
lcall
mov
stos
jbe
outsb
dec
outsl
stos
test
gs
enter
add
adcb
rcrb
int
sbb
cmc
sbb
stos
sbb
inc
push
inc
leave
aaa
nop
int3
or
icebp
xchg
push
loopne
dec
add
mov
hlt
cmp
fdivrs
pop
adc
inc
and
fsts
imul
add
inc
mov
into
mov
in
sbb
sub
pop
pop
mov
mov
dec
fildl
and
mov
sbb
xor
imul
or
cli
lds
ret
pop
pusha
dec
out
mov
xchg
addr16
subb
jb
std
pop
gs
jecxz
cmpsb
shl
mov
sbb
je
xor
adc
out
push
test
jb
leave
cmp
pusha
stos
fisubl
add
jno
push
test
in
mov
inc
push
push
call
sbb
dec
jp
outsl
jnp
sbb
push
sbb
stc
test
or
scas
inc
scas
fst
mov
in
fcmovbe
xor
ljmp
or
fbld
cmp
or
addr16
aas
xchg
movsb
imul
movsl
ffreep
into
add
xor
cwtl
push
ss
add
dec
popf
mov
fsts
lea
nop
push
hlt
jb
pop
fistl
adc
aaa
nop
popa
mov
mov
dec
mov
inc
in
fdivrl
xor
bnd
push
imul
jno
lods
inc
jge
sbb
mov
scas
inc
loope
push
cli
push
ja
mov
shl
clc
cmp
outsb
jg
loop
in
jge
les
shll
addl
or
into
dec
xor
stos
fdivs
popf
and
pop
xchg
stos
dec
leave
xchg
mov
imul
dec
add
cs
push
push
dec
add
push
dec
dec
jge
mov
mov
lds
mov
popa
add
repnz
xchg
dec
in
pop
add
jbe
out
addb
push
or
lret
cmpsb
cmp
mov
loop
lods
mov
adc
push
jg
xor
mov
loop
sub
stos
cli
cs
pop
mov
sti
fwait
mov
inc
mov
add
and
ja
scas
aad
stos
xchg
jno
cmpsl
mov
or
sub
push
nop
pop
xchg
jnp,pt
int
cwtl
loopne
push
dec
mov
inc
aas
rcrl
rorl
pop
mov
mov
rclb
lcall
int
adc
jne
adc
sbb
fisubl
push
jne
cli
push
push
inc
fdecstp
pop
hlt
xchg
pop
cmp
movsb
and
cltd
mov
add
dec
xchg
xchg
testl
xchg
in
pushf
shrl
mov
push
cmpsb
and
add
and
jp
imul
loope
aas
stos
loopne
add
cmp
popa
lods
sbb
mov
stos
add
xor
add
inc
ja
fildll
mov
int3
mov
lret
lahf
data16
insb
int
xorb
mov
pusha
fcoml
jecxz
mov
push
stos
sbb
jno
pop
xor
sbb
clc
jecxz
push
and
sbb
in
mov
test
in
mov
add
mov
cmp
fnstcw
out
xchg
jb
mov
mov
stos
jge
or
jae
inc
pushf
loop
mov
shl
add
adc
sahf
sarl
xchg
divb
or
aad
adc
ljmp
pop
cmp
lret
fldl
rolb
add
jmp
xchg
les
mov
cmc
add
xlat
fstl
sub
or
popa
xchg
jp
movsl
pop
std
iret
mov
inc
sub
or
lcall
and
sub
stc
fcoml
pop
push
and
or
sub
mov
add
xchg
mov
loope
jle
repz
adc
xlat
sbb
js
cmp
scas
or
sub
jb
sub
rep
cltd
scas
and
out
sub
out
xchg
scas
push
sbb
mov
push
insl
mov
and
jp
hlt
fistpl
xchg
scas
push
arpl
pushl
jno
xlat
mov
xor
push
cmpl
adc
pusha
fsub
fadds
inc
mov
sbb
cs
lahf
mov
adc
frstor
add
xlat
movsl
jecxz
jnp
insl
lods
jecxz
jns
push
sbb
fwait
dec
and
andb
popf
popa
lret
xchg
mov
cwtl
cmpsb
xchg
and
aam
dec
fld
and
incl
mov
js
sub
cmp
dec
imul
mov
mov
lahf
sarb
dec
cmpsb
push
push
iret
xor
cmp
fsin
mov
jne
test
repz
test
in
scas
fs
dec
jne
push
arpl
sub
movsb
xchg
test
pop
push
in
mov
sub
push
out
sarl
and
lea
mov
test
sub
cmpb
xor
sarl
cmpsb
in
lcall
cmp
mov
test
adc
rcl
lods
cmc
and
mov
flds
sbb
pop
pop
sahf
or
data16
clc
mov
ss
lret
dec
imul
xchg
es
cs
stos
test
sub
adcl
adc
cmp
mov
jo
or
jbe
jne
cmp
ss
dec
mov
ljmp
add
popa
xor
xchg
fldcw
scas
or
std
aad
sbb
repz
ds
xor
cwtl
int3
add
push
leave
es
mov
pop
insl
mov
xor
sub
test
aam
jne
push
jmp
mov
icebp
mov
inc
test
aas
dec
xor
mov
jmp
adc
and
mov
lea
dec
inc
ret
or
and
inc
and
lahf
inc
je
jl
pop
jns
mov
cmpsb
sbb
jno
xlat
std
xor
movsl
cmp
ss
int
xchg
jle
je
cs
pop
aam
gs
dec
div
mov
inc
inc
cmp
addb
lahf
test
xchg
adc
mov
or
stc
push
leave
in
pop
xchg
int3
add
rcrl
jbe
inc
mov
push
js
mov
std
stos
mov
flds
cmpsl
aaa
sbb
pop
dec
clc
and
inc
cwtl
and
fisttps
xor
dec
bound
mov
ljmp
push
gs
cld
les
jbe
cmp
sahf
popa
xchg
pop
frndint
dec
aad
xor
lods
push
adc
dec
mov
ds
fcmovnu
movsb
mov
push
popf
mov
mov
xor
dec
or
loop
sbb
mov
push
push
movsb
or
jb
out
xchg
mov
mov
andb
xchg
ficomps
jbe
xlat
add
notb
out
adcl
mov
adc
add
mov
movsb
mov
aam
in
movsl
inc
inc
shrb
cld
stos
scas
xlat
xchg
sub
pop
std
inc
mov
xchg
ds
pop
bound
fwait
pop
scas
outsb
aaa
inc
inc
mov
aas
push
inc
mov
xchg
lods
aam
xchg
push
lcall
xor
pop
cmp
push
xchg
push
test
xchg
sahf
int
aad
jno
mov
cs
out
pop
push
idivb
nop
cmp
add
lea
jl
mov
sbbb
add
out
jo
fisubs
out
and
ss
daa
pop
xor
dec
inc
js
int
pusha
orb
dec
pop
hlt
xchg
je
adc
fwait
movsb
mov
and
sbb
dec
inc
mov
jae
cmp
data16
jmp
xchg
xchg
js
add
data16
shr
or
ror
cmp
xorl
or
dec
jmp
iret
movsb
in
jne
mov
cmp
add
adc
mov
push
stos
bound
repz
push
fs
mov
stos
sub
push
xor
iret
xchg
or
and
pop
pop
rolb
std
aad
inc
gs
cmp
xchg
or
inc
dec
leave
arpl
pop
cmp
xlat
fsubrs
lock
aad
repnz
dec
pop
call
cmp
sub
lock
ljmp
and
push
dec
cwtl
in
shr
imul
mov
add
sub
sbb
sub
jae
push
mov
in
in
cmp
mov
out
ja
inc
dec
movsb
std
imul
movb
adc
fwait
movsb
mov
rorb
sub
add
test
push
xchg
inc
pop
out
testb
outsb
insl
jl
jge
or
repz
sahf
leave
pop
push
adc
fmuls
movsb
pushl
adc
dec
xchg
xchg
repz
icebp
xlat
mov
les
sub
std
inc
mov
cwtl
fstps
and
cs
add
fsts
stos
lods
xchg
xor
pop
mov
xor
pop
jmp
mov
or
mov
sbb
sbb
dec
sbb
pop
adc
fcompl
ficomps
xchg
fisttpl
stos
xor
lcall
jle
cmp
testb
jge
xchg
stos
sahf
cmp
or
or
aam
scas
int3
fildll
popf
lea
xor
push
test
mov
mov
sahf
outsl
es
dec
dec
mov
sub
testb
mov
mov
decb
xor
sub
ret
cmpsb
stos
adc
out
hlt
dec
dec
loope
xchg
xchg
mov
insb
xor
inc
daa
or
cs
lret
jnp
or
cmpsb
and
mov
scas
cmc
and
mov
mov
iret
jbe
lcall
mov
aad
mov
add
or
push
dec
dec
in
orb
imul
nop
sub
cs
push
in
pop
dec
out
scas
out
mov
icebp
cs
jge
sub
clc
leave
mov
pop
sub
aad
leave
xor
dec
mov
lcall
mov
xchg
mov
jg
fcomi
lret
dec
xor
adc
pushf
aas
add
or
jg
and
jns
loop
je
vcvtss2si
xchg
mov
jg
lahf
pop
out
jl
jbe
insl
adc
rcl
in
call
fildll
adc
ss
mov
in
xchg
mov
adc
decb
inc
test
push
mov
fsubrl
adc
pop
mov
enter
ds
or
pop
sbb
sub
xchg
inc
dec
cmp
jb
mov
adc
fcompl
out
popa
dec
dec
mov
test
xchg
pop
in
mov
xchg
lea
push
fildll
inc
pop
ret
mov
cld
lods
adc
adc
mov
dec
jbe
sbb
jp
lahf
popa
addr16
dec
rcrl
cwtl
dec
mov
pop
adc
test
xor
jle
mov
bound
jecxz
je
lock
push
dec
int3
les
and
ret
inc
aas
pop
sub
xor
test
insl
fsubl
push
adc
mov
cs
scas
pop
and
add
lcall
dec
call
jno
iret
enter
push
ss
rclb
fcomps
out
pop
cmpsl
push
pop
test
xor
mov
jecxz
jle
pushf
fmul
cld
int
lret
adc
int
sti
sbb
push
xchg
sub
inc
mov
out
test
cmpsl
pop
aad
test
sub
addb
xor
jmp
jecxz
dec
stc
gs
in
push
add
push
mov
hlt
cmp
jb
aas
add
jne
sub
js
pop
fsubr
jge
lock
lock
mov
popl
adc
xchg
fidivl
test
xor
or
aam
ja
nop
jno
xchg
adc
sahf
mov
out
les
in
lret
ret
fs
stos
cmp
jmp
cmc
mov
xor
jl
xchg
int
lods
mov
cmc
inc
push
jb
imul
orps
xchg
fs
ret
mov
jne
mov
fstl
add
dec
push
scas
add
pop
das
xchg
in
cmp
jbe
pop
mov
push
jno
fdiv
stc
jle
inc
leave
lods
sar
aad
data16
xlat
mov
in
mov
mov
insb
cmpsl
movsb
ljmp
xlat
jbe
xor
mov
or
in
inc
pop
adc
push
cmp
mov
xchg
mov
pop
sbbl
scas
sub
xor
out
inc
aad
fwait
pushf
push
jnp
dec
or
xchg
mov
or
cwtl
mov
cmp
xor
jnp
jne
xchg
mov
mov
and
dec
jae
movsl
shll
push
test
xor
cmp
in
xorb
aam
outsb
out
mov
movsl
jb
dec
inc
cltd
cmp
loopne
mov
pusha
or
jle
dec
mov
add
push
loopne
dec
xor
test
ficomps
daa
xchg
xchg
mov
pop
mov
dec
jbe
shll
mov
shlb
jns
or
sarl
push
leave
inc
and
das
cmp
mov
pop
dec
xchg
mov
push
fidivrs
stos
mov
es
sahf
add
jb
icebp
jp
mov
shlb
jmp
sbb
mov
pop
rclb
xor
jb
fbstp
adc
test
xchg
sub
cmp
sub
add
scas
or
arpl
repnz
negl
mov
push
out
adc
imul
inc
mov
mov
sbb
mov
and
jmp
add
orl
popa
cmp
mov
rcl
jo
push
pop
bound
es
mov
leave
stc
in
movsl
daa
dec
std
popa
movl
imul
adc
and
cmpsb
jno
scas
sub
shlb
test
pop
ret
jg
dec
scas
xchg
imulb
testl
or
insb
daa
xor
jbe
add
push
adc
pop
fistl
fdivr
jecxz
psllw
mov
and
in
rcrl
hlt
xchg
adc
dec
fsubl
leave
mov
shlb
or
out
jg
mov
stos
and
enter
push
xor
es
jbe
sahf
and
mov
xor
mov
xor
dec
xchg
or
xor
sbb
lock
adc
mov
xor
clc
and
or
dec
cli
decl
fs
aaa
mov
xchg
jmp
cmc
xchg
inc
dec
mov
fmulp
ja
push
pop
mov
dec
repz
pusha
aas
push
jmp
mov
sbb
loope
xchg
scas
xchg
ljmp
jecxz
xor
mov
shll
stc
in
or
sbb
loop
xor
fs
movsl
movsb
ljmp
insl
jmp
sub
mov
push
sbb
lods
push
loopne
test
cli
arpl
call
jbe
mov
or
popa
xorb
fildl
sbb
or
add
cli
sub
lock
test
cmp
cmp
sti
mov
repz
movsb
cmpsl
xchg
in
je
int3
dec
jno
pop
fwait
jae
push
jb
sub
lods
pop
sbb
pop
out
adc
dec
rcl
and
call
xor
mov
cmp
stc
decb
cmp
push
mov
dec
shlb
mov
push
push
mov
repz
add
xor
or
cmpsl
bswap
lret
int
aaa
add
mov
test
sub
push
sbb
rclb
sub
mov
cld
les
and
ja,pn
loopne
cmc
cltd
dec
sbb
dec
inc
mov
push
adc
imul
adc
add
ljmp
mov
fidivs
push
adc
sub
addr16
xor
sbb
mov
adc
sbb
mov
cld
je
push
mov
sbb
cs
mov
shrb
jb
inc
pop
jmp
mov
cli
xchg
pop
loopne
cs
orb
push
gs
repnz
stos
xchg
addr16
je
lret
cs
pop
sub
push
rorb
call
sbb
jmp
mov
lret
add
cmp
pop
pop
sbbb
gs
jmp
clts
xlat
or
dec
pop
outsl
ret
push
mov
sti
popf
lock
xchg
outsl
subl
imul
xchg
fidivs
mov
jno
in
mov
inc
xor
sbb
das
pop
mov
xchg
add
loope
ret
xor
cmp
insl
lock
js
sub
loopne
subl
adcl
das
mov
insb
ljmp
arpl
imul
aaa
ds
scas
or
data16
incl
sbb
rcrb
idivl
lcall
imul
sti
dec
js
out
test
test
push
iret
mov
popa
loopne
dec
inc
push
xor
and
jp
in
jno
mov
mov
push
lods
xchg
mov
int
lret
in
jmp
enter
jnp
lcall
lret
push
jge
dec
je
sbb
and
ljmp
call
int
cli
rclb
push
aas
xor
jbe
mov
adc
insb
cld
cmp
leave
dec
jle
push
pop
hlt
leave
sbb
mov
fadd
movsl
dec
loope
jg
push
jae
out
repz
sbbb
lods
out
mov
jo
sbb
dec
repnz
lea
movsl
pop
lret
mov
daa
lods
push
popf
jo
jnp
shll
lcall
daa
bound
ds
fidivrs
jp
cmp
out
out
and
dec
mov
ljmp
daa
fwait
pusha
and
jmp
push
cmpsb
out
mov
sbb
iret
jae
mov
add
sbb
sub
cs
pusha
xchg
lret
sub
mov
inc
mov
adc
cmp
cmpsl
pop
loopne
inc
or
stc
xor
ss
scas
js
push
call
stos
sub
push
je
xchg
mov
add
mov
stc
xor
push
enter
and
mov
daa
pop
decb
aam
fmull
imul
lret
jne
xor
jae
testl
xchg
or
mov
stc
lock
or
jecxz
cmp
inc
test
push
out
inc
and
adc
shl
fisttps
pop
adc
inc
imul
clc
cs
adc
push
jnp
ds
mov
fmull
fisttps
adc
aas
mov
pushl
mov
mov
push
rcrl
filds
sbb
shlb
call
add
test
xchg
negb
in
incb
ror
dec
lods
add
cld
pop
cli
sbb
xchg
inc
push
je
std
push
popa
push
outsl
push
std
xor
jmp
fidivrl
mov
pop
ljmp
ds
out
xor
mov
popa
cmp
add
cwtl
pop
pop
xor
test
jg
notl
inc
and
lcall
nop
mov
inc
cmc
andb
pop
sbbb
cltd
ficoml
pop
lods
leave
push
sub
lret
shr
pop
pop
out
jo
mov
sub
mov
jp
in
pop
jg
pop
sahf
pop
push
ja
jge
push
add
and
jge
mov
xor
les
clc
xchg
in
das
or
arpl
lods
mov
hlt
adc
add
stos
xor
adcl
adc
inc
jge
daa
leave
push
mov
clc
bound
repz
xor
jmp
pop
pushf
push
rolb
ja
int
cmpsb
stos
dec
xor
and
inc
int3
xchg
mov
mov
xchg
xchg
sti
lahf
subb
lcall
pushf
cmc
xchg
mov
in
mov
mov
ficompl
ss
mov
cmp
mov
and
jae
ljmp
push
ret
maskmovq
imull
jo
fsub
outsl
out
shll
and
out
stos
cmp
mov
sub
push
cld
fwait
xchg
int
adc
or
jl
lods
sbbl
mov
inc
rcl
mov
inc
not
test
scas
adc
cmpb
repnz
push
rcr
in
jb
jbe
xchg
aaa
enter
mov
jge
cli
cwtl
add
mov
bound
iret
push
cmpsb
add
mov
mov
push
scas
pop
fldenv
sti
loop
jl
popf
sub
lret
movl
icebp
pushf
pushf
shrl
dec
pop
aad
insl
ret
sub
and
mov
imul
jle
out
push
stos
inc
fcoms
repnz
pop
mov
add
mov
xlat
loopne
notb
or
out
mov
sar
xchg
jecxz
testb
pop
icebp
mov
mov
jae
ret
test
loope
mov
pop
fistps
int3
popf
cmp
repnz
jne
in
pop
pop
mov
push
ret
sbb
add
loope
and
imul
fbld
sub
repz
pop
sbb
cltd
into
daa
lcall
push
out
call
aad
push
push
out
mov
addl
xorb
gs
adc
lds
loopne
daa
test
test
or
add
aaa
mov
jnp
sub
cmp
mov
hlt
push
mov
fmull
cmp
arpl
sti
sbb
or
int
xlat
cmpsb
mov
filds
insl
push
sahf
sub
hlt
test
data16
aaa
mov
mov
pop
adc
xor
adc
push
cltd
in
push
and
push
sub
xchg
daa
xor
rolb
mov
lret
cmp
inc
mov
jl
popa
inc
xor
cs
dec
mov
shrb
in
push
dec
fnstsw
push
xor
lret
mov
inc
mov
cmpsl
cld
stc
xchg
mov
aas
or
push
dec
outsb
or
pop
inc
sub
jmp
and
xor
xor
insb
cmp
jg
mov
xchg
inc
push
aad
movsb
add
scas
mov
ljmp
arpl
pop
cmp
jno
dec
push
sbb
daa
jbe
movsb
fwait
adc
int3
mov
xchg
fmulp
sub
mov
push
test
sub
in
cmp
add
sub
fcoml
pop
push
mov
icebp
pop
pop
push
inc
mov
outsl
mov
enter
inc
shlb
adc
sub
cmp
add
cli
xor
and
lcall
stc
add
rclb
push
rcrl
pop
mov
in
fwait
jecxz
test
or
mov
addl
xchg
mov
mov
shl
push
mov
imul
push
jnp
ljmp
in
and
lods
and
ljmp
outsl
repnz
push
divl
cmpsb
sarb
xchg
cmc
sti
dec
or
or
rcl
xor
pop
xchg
ss
ljmp
inc
imul
sbb
inc
mov
lret
jl
sub
cli
fs
sbb
aas
call
iret
mov
mov
xchg
mov
pushl
push
sti
test
sbbb
sqrtps
insb
in
std
add
loopne
xchg
icebp
cmp
notb
mov
test
fsts
cli
cmp
mov
and
jp
mov
jns
jl
adc
int3
jle
push
scas
jae
sbb
pop
fcomps
sbb
daa
jae
inc
pop
mov
clc
pop
js
aam
jle
pop
mov
roll
cmp
pop
andl
scas
jno
out
repnz
xchg
or
out
icebp
cld
or
mov
std
pop
xor
dec
arpl
jno
mov
push
mov
push
insl
push
jns
or
dec
lods
adc
xor
sti
add
jno
mov
shl
adc
xor
add
scas
sub
outsb
fcmovnbe
adc
dec
shrb
adc
xchg
arpl
test
sub
sarl
cmp
stos
push
xor
filds
lcall
push
movsb
cmp
lcall
fucom
sbb
cs
jne
jno
cmp
cmpsl
loope
mov
jg
and
adc
rorl
shll
push
mov
push
fiaddl
outsb
cmpsl
sub
pop
lahf
fcmovb
arpl
add
loopne
push
pop
push
mov
push
aaa
flds
sahf
cld
std
pop
cli
dec
lahf
sub
mov
sbb
jb
mov
in
and
scas
lret
scas
cmp
pusha
enter
and
add
arpl
das
jp
push
xchg
mov
jmp
mov
inc
and
pop
arpl
call
pop
inc
cmp
je
and
scas
and
cmpb
xchg
mov
mov
and
mov
and
xor
xor
xchg
aad
jle
push
popa
dec
cmpsl
shlb
jmp
out
cmp
pop
cmp
push
pop
adc
sbb
sti
pop
sbbb
rcrb
lret
jl
imul
cmc
clc
enter
sbb
test
fwait
insb
ret
add
stos
ret
arpl
push
mov
bound
mov
imul
mov
jae
roll
inc
repnz
pop
dec
mov
mov
stc
in
movsb
or
ret
mov
pop
imul
jae
mov
sub
jnp
push
xchg
dec
lahf
adc
push
adc
cmpsb
cmpsb
inc
or
fwait
lret
mov
mov
sti
pushl
jns
repz
mov
daa
cli
push
sub
popf
stos
cmc
jl
pop
scas
outsb
or
xor
daa
add
insb
dec
addr16
in
add
xor
enter
adc
cmp
push
or
inc
adc
cmpsb
pusha
push
pop
data16
jbe
cmp
mov
jecxz
test
loop
movsb
push
das
jb
xor
fwait
test
bound
add
jno
scas
andb
cmp
aas
pop
movsl
daa
cmpsl
push
in
and
adcb
mov
push
pop
pop
xorb
loope
jmp
scas
xchg
xchg
lcall
or
mov
sbb
mov
and
or
mov
scas
and
and
adc
mov
shl
fnsave
rcrl
fwait
fwait
or
mov
lea
sbb
ja
jmp
and
cs
filds
adc
fnstcw
loopne
fs
aam
xlat
jne
jmp
movsb
sti
test
bound
sub
shrl
test
data16
mov
cmp
sbb
cmp
stos
aaa
jle
movsl
fwait
xchg
test
jne
mov
stos
sbb
divb
jbe
sbb
iret
push
xlat
push
xchg
push
popf
inc
adc
dec
sti
movsl
cmp
inc
mov
cmc
fwait
jecxz
test
add
sub
jg
jo
ss
mov
and
or
push
ljmp
mov
fwait
imul
mov
mov
repnz
ret
or
mov
es
xchg
fmull
inc
pop
mov
test
cmp
sub
insl
pop
fstpt
fidivs
and
or
stc
pop
sbb
push
clc
xchg
xlat
lock
push
ret
xchg
mov
mov
fildll
orl
int
sbb
out
ret
push
dec
lret
sbb
add
test
inc
sub
pop
mov
in
mov
fmuls
xor
push
lcall
mov
addr16
out
add
xchg
xor
cmpb
dec
lock
fwait
push
pop
xchg
cli
div
sbb
fstpt
ficompl
xchg
or
insl
pop
pop
arpl
xor
sti
ja
hlt
fadds
test
xchg
je
push
adc
jns
inc
les
or
and
pop
mov
fs
jmp
pop
int
lahf
cmp
fs
sub
je
loop
and
mov
into
fsubs
inc
andb
adc
movsl
jo
mov
xchg
jp
and
addr16
add
fisttpl
rcrb
lods
fldt
das
push
xchg
pop
ljmp
leave
mov
adc
in
aam
xor
lods
repnz
ss
and
mov
xor
clc
mov
test
add
mov
jnp
jbe
jge
jl
fs
cmpsb
mov
jno
nop
jb
lret
sub
sbb
and
mov
shr
aad
scas
das
or
enter
xlat
imul
mov
add
scas
insl
pushf
sbb
add
stos
cmp
mov
cmp
cmc
push
xor
adc
jecxz
xchg
dec
in
pop
ljmp
mov
scas
mov
mov
aad
xor
mov
or
jns
mov
pop
push
xor
fs
cltd
jp
inc
cmpsl
test
mov
sub
orb
dec
sub
lods
gs
mov
jbe
negb
bound
ficomps
xchg
and
aaa
pop
xchg
stos
aaa
pop
sbb
lods
std
xlat
les
xor
idivl
xchg
fstpl
imul
out
mov
pop
lcall
mov
sbb
sub
shrl
lcall
lea
xor
xchg
adc
jae
and
xor
enter
push
scas
add
push
jns
lret
loope
push
adc
insb
xor
popf
jmp
lods
jg
add
mov
push
test
aam
insl
cmp
add
mov
jno
repnz
add
ficoml
les
mov
aaa
pushf
xchg
fcmovu
scas
mov
jae
cmpsb
rcll
mov
rcrb
aaa
pop
lret
lea
popf
fnstcw
adc
leave
int
adc
aas
shll
and
leave
mov
js
stos
push
pop
xchg
popf
test
xlat
fsts
negb
in
push
ret
fsubl
mov
mov
clc
mov
cmp
jmp
xchg
inc
and
popa
loop
movsl
sub
sub
xchg
call
je
inc
mov
adc
sti
out
cs
cwtl
shrb
cs
fstpt
outsb
int3
jge
inc
pop
hlt
bound
mov
and
pop
int
stos
aam
or
sbb
adc
push
repnz
pop
xchg
fmull
sbb
mul
mov
push
xchg
aas
aas
fists
daa
cmp
shrl
jge
sub
lock
jo
out
push
dec
sub
fsts
pop
and
shrl
insl
movsl
cmc
mov
aad
out
dec
aaa
scas
inc
pushf
mov
into
inc
pop
mov
gs
lret
int3
clc
int
frstor
sub
sbb
hlt
les
pop
roll
pushf
mov
cmp
sub
push
dec
cltd
lcall
jne
and
mov
xchg
push
inc
push
xchg
push
sub
mov
mov
repnz
das
pop
push
into
adc
mov
fsubs
or
popf
notb
mov
xchg
ret
loope
call
ret
aas
mov
dec
add
pop
nop
xor
fldcw
sbb
daa
mull
loopne
xchg
push
xchg
loopne
inc
in
shrl
test
into
xor
iret
aad
test
sti
jp
mov
adc
mov
cs
adc
inc
mov
push
in
push
or
cmp
and
pop
inc
loopne
shrb
out
int
push
clc
imul
mov
and
jge
mov
out
clc
jecxz
sbb
dec
mov
adc
inc
imul
cltd
movsl
xor
and
xorl
mov
popf
cmp
jecxz
jecxz
dec
push
and
jbe
aaa
movb
add
mov
adc
sub
out
mov
das
push
push
jnp
pop
repnz
xlat
jl
push
out
sahf
sti
int3
sti
lods
push
lcall
xor
xchg
inc
jl
push
aas
arpl
pop
xchg
pop
lret
nop
cmp
std
push
cmp
jge
cmpsl
cld
push
dec
sub
add
ret
scas
adc
jb
fisubs
loop
ljmp
or
in
rcr
cmp
inc
mov
movsl
and
ret
in
inc
push
vmread
lods
add
and
ficompl
mov
lea
xchg
mov
xor
xor
jb
gs
xor
pushf
adc
cmpsl
imulb
in
sbb
sub
inc
jle
lret
lock
or
loop
inc
sub
iret
cmp
dec
jb
jo
aam
xor
insb
pushf
test
les
sub
inc
add
mov
sub
xchg
and
aam
sub
mov
or
mov
sbb
jno
sahf
mov
push
adc
out
adc
cmpsl
mov
jp
push
in
xchg
inc
std
sbbb
mov
jecxz
adc
and
clc
sbb
push
clc
ret
jnp
popa
sub
faddl
adc
inc
jecxz
mov
fcompl
imul
dec
int3
scas
pop
out
fcomps
jge
jl
data16
jbe
in
dec
dec
mov
stos
pushf
ss
mov
fimull
xchg
hlt
mov
and
jmp
mov
jns
sub
sub
testl
pop
int3
push
outsb
sub
mov
adc
les
scas
jl
daa
mov
fldl
push
stc
stos
cmpsl
mov
xchg
mov
test
aam
stc
or
in
in
enter
sahf
push
pmulhw
lahf
xor
outsl
stos
pop
cltd
imulb
mov
or
jno
fs
xchg
shll
mov
std
sub
sbb
sbb
fiaddl
test
mov
inc
fwait
dec
or
pop
inc
or
jno
js
push
mov
add
aas
jecxz
and
adc
pop
jle
mov
xchg
insl
je
cmp
dec
imul
push
jecxz
fwait
push
push
push
pop
mov
xor
cld
add
cmp
jae
cli
hlt
cmp
imul
xor
lcall
xchg
mov
cmc
cmp
pusha
push
mov
idivb
mov
arpl
int3
xlat
dec
loope
icebp
cmpsb
and
cltd
push
mov
in
je
out
aaa
or
xlat
xchg
sub
xchg
call
bnd
or
pop
xor
mov
and
mov
inc
into
roll
sahf
pushf
xchg
ret
mov
aad
imul
jb
xchg
popf
pop
mov
adc
stc
mov
mov
xchg
jae
push
out
mov
inc
sbb
sar
ret
aad
shll
mov
insb
and
out
xchg
jl
shrb
dec
mov
fldl2t
das
cmp
push
push
and
pusha
jmp
pop
cmp
cmpsl
aam
mov
movsb
and
xchg
cmp
jo
aam
lret
movups
mov
lahf
sti
adc
in
sub
mov
popf
mov
dec
test
add
jecxz
and
or
lret
sbb
in
pop
xchg
aaa
rorl
xchg
mov
loopne
outsb
cwtl
mov
fildl
into
jg
jbe
sub
aad
cmp
xchg
outsl
ret
xchg
add
sti
jno
pop
test
mov
xlat
pop
test
adc
lods
xchg
or
mov
into
and
xchg
sub
mov
stos
lods
xor
add
mov
xchg
stc
push
popf
sub
test
pause
xorb
fs
lea
imul
ja
lods
xchg
sub
ja
in
add
sbb
push
out
xor
lahf
mov
loop
jle
adc
dec
push
pop
jmp
xchg
sbb
out
xlat
jl
ror
sbbl
mov
sarl
cmp
or
iret
mov
dec
inc
sub
xor
pop
inc
xor
in
inc
dec
out
imul
or
sahf
lds
lock
and
ds
aam
test
pop
jb
jg
dec
inc
inc
jle
jbe
cld
mov
mov
js
sub
sbb
pop
adc
test
popf
mov
add
out
ds
mov
xor
fdivrp
cmp
inc
and
xchg
cmp
sti
pop
pop
xchg
and
lds
or
add
mov
cmp
mov
lret
int
xor
imul
xchg
test
mov
fistl
mov
inc
les
xorb
outsl
cli
or
add
out
and
sbb
loop
sub
xchg
push
mov
movsl
or
sub
out
and
sbb
pop
outsl
mov
cli
mov
sub
ror
mov
xchg
fnsetpm(287
addl
repnz
push
push
pop
sbb
sbb
ficompl
scas
insb
add
jbe
clc
mov
divb
or
adc
aam
popf
mov
fistpll
or
pop
jbe
push
jo
leave
iret
and
add
testb
into
push
adc
pop
imul
in
xchg
outsb
out
mov
or
data16
ficoms
mull
jle
mov
xchg
fnstenv
stc
stos
scas
aaa
fwait
loope
dec
clc
jle
xchg
ficoms
pop
jle
jp
add
inc
lret
mov
outsl
adc
adc
cmp
push
cmp
outsb
jp
xchg
cwtl
push
jp
add
mov
outsb
stc
in
push
int3
out
fisubrl
fxch
scas
and
jo
push
pop
data16
jmp
in
test
roll
mov
mov
dec
jbe
fisubl
stos
call
xor
sti
pushl
mov
add
out
jo
test
push
add
out
cltd
adc
sbb
jnp
cltd
or
cmpsb
in
sbb
pushf
mov
jg
imul
cmpsb
clc
pop
cmp
jecxz
push
jb
mov
sbb
movsl
pop
js
inc
cmp
punpcklbw
inc
lahf
push
adc
shlb
push
pop
jge
imul
jo
dec
pushf
hlt
xor
out
into
std
cmp
jns
xor
fisubl
jns
cmp
pop
push
imul
testl
sti
jb
mov
movsb
insb
popa
out
mov
int3
jno,pt
xchg
mov
ret
ret
aam
adc
mov
sub
call
scas
add
sub
sbb
or
ja
ret
mov
mov
and
pop
dec
shlb
mov
loope
pop
jmp
fldcw
xlat
in
and
cmpsb
adc
xchg
test
and
xchg
cmp
fs
dec
repz
fsubrs
jle
push
jecxz
movsl
out
lret
sub
pusha
popa
scas
and
aam
popf
and
adc
xchg
je
stos
faddl
mov
repnz
lock
mov
fisubrs
dec
dec
leave
xor
inc
pushf
stos
and
flds
xchg
push
pop
out
adc
and
inc
nop
pop
push
ffreep
add
pop
jae
sbb
and
shlb
int3
push
pop
mov
fnstenv
or
adc
jo
mov
fidivrs
mov
and
call
inc
shrb
pop
mov
inc
aad
jecxz
mov
negb
ds
sti
in
jmp
inc
hlt
jl
push
jge
ss
mov
rcrb
sbb
inc
cmp
insl
mov
pop
loope
ds
lret
fidivs
jecxz
or
xchg
mov
dec
imul
push
adc
mov
or
adc
out
and
xor
push
mov
adc
and
outsb
shlb
sub
push
push
std
lcall
lods
insl
ljmp
das
xchg
sbb
mov
adc
xchg
popa
stos
std
pop
sahf
lods
ror
jl
inc
imul
fs
push
icebp
pop
and
mov
add
adc
loope
xorb
pop
jno
inc
push
imul
fxch
xchg
mov
stc
rcrl
movsl
push
insl
pop
fsubl
popf
cmp
test
xor
testb
js
mov
sub
notb
fistpl
jne
xor
xchg
xchg
or
loop
or
in
adc
std
cmp
loope
mov
inc
sbb
jmp
mov
test
xor
fnsave
adc
or
push
mov
test
mov
push
push
inc
jl
leave
mov
aad
in
mov
dec
or
inc
or
pop
stos
sub
inc
imul
sbb
fdivr
fidivl
mov
cmc
pop
mov
inc
shll
and
jmp
add
and
out
cmp
shrl
dec
dec
test
sbb
or
ret
jle
outsb
mov
mov
mov
aam
push
mov
cmpsl
push
mov
ja
xchg
and
xchg
and
push
enter
lcall
inc
test
jo
in
hlt
mov
cmpsl
xchg
outsb
push
xchg
sarb
jnp
test
inc
ret
test
push
aas
insl
sub
mov
adc
dec
pushl
and
adcb
loope
mov
inc
and
sahf
jecxz
fistl
stos
sub
xchg
in
xor
pop
in
cmp
hlt
sbb
pushl
mov
aam
sub
aam
cmpsb
fsubs
mov
sbb
outsl
rclb
mov
mov
pushf
xchg
pop
mov
sbb
push
sub
mov
add
adc
scas
push
push
rcrl
xchg
dec
pusha
dec
scas
pop
sub
aas
jle
lret
shl
xchg
mov
fadd
cmpsl
xor
test
bound
fdivs
xchg
mov
lods
xchg
ret
int
lahf
fisubrl
and
adc
cmp
or
stos
pop
mov
sbb
inc
insl
out
adc
es
xchg
roll
dec
aaa
pop
movsb
sbb
lea
pop
push
mov
icebp
pop
and
in
fsubrl
push
mov
loope
jb
loope
js
dec
out
pop
pop
sub
cmp
mov
fcmovne
mov
push
adc
xor
std
or
shrl
hlt
inc
rolb
pushf
ss
sub
call
adcl
es
push
add
popa
in
daa
cwtl
ss
xlat
scas
cmpsl
xlat
mov
rclb
push
scas
in
pop
jae
dec
pusha
cwtl
mov
and
sahf
repz
dec
in
cmpsl
ret
outsl
imul
mov
or
jge
xor
stos
cld
pop
pop
mov
sbb
in
xor
test
or
dec
cmp
loopne
loopne
sbbl
mov
dec
lcall
mov
mov
mov
jl
lods
in
dec
imul
pop
adc
fmull
inc
ja
cmc
mov
xor
lret
flds
add
in
arpl
inc
mov
iret
lods
mov
lahf
and
test
or
adcl
cmp
cmpsl
in
aas
jge
jmp
xchg
mov
dec
imul
nop
jb
ret
insl
dec
and
and
push
or
jmp
jle
mov
push
mov
leave
dec
outsl
fyl2xp1
or
mov
hlt
adc
out
push
lahf
and
and
rclb
ljmp
push
cs
inc
push
lret
sub
icebp
aas
mov
mov
inc
xchg
jp
jmp
leave
shll
adc
sub
aas
jle
mov
ret
push
scas
fiadds
loop
inc
out
push
sbb
pop
xchg
call
ss
inc
xchg
xchg
outsl
scas
cmp
popf
aaa
bound
stos
inc
and
mov
es
dec
in
push
add
cmp
mov
sub
das
popa
pop
lds
movsl
imul
ds
sub
mov
sbb
lea
xchg
shrl
dec
movsl
testb
cltd
aas
lcall
mov
pop
xor
cmp
xchg
cmp
mov
xor
mov
or
xor
mov
push
sbb
and
or
inc
loop
mov
or
jo
add
mov
ja
mov
mov
push
mov
jp
mov
repz
fistpl
pop
mov
out
mov
std
out
arpl
jle
outsb
pop
sahf
ja
inc
adc
mov
or
and
inc
lret
mov
cmp
mov
inc
mov
mov
imul
into
ja
jo
icebp
push
repz
sub
or
push
cmc
movb
cltd
dec
pop
pop
pop
sub
mov
inc
mov
fcmovnu
pop
cmc
pushf
sbb
imul
mov
adc
ret
xlat
and
mov
lea
sub
ret
xchg
jb
or
fs
pushf
cmp
cli
dec
movsl
or
pop
adc
mov
mov
push
ljmp
stos
mov
cld
addb
loop
ffree
shll
xchg
aad
mov
int
mov
outsl
rclb
ret
scas
mov
daa
out
sub
push
test
cmpsl
aad
inc
inc
loop
and
xor
and
pop
ret
adc
cmc
mov
inc
pop
mov
das
pushf
subl
pop
sbb
and
mov
popf
leave
xchg
fisubl
ds
cli
cmpsl
pop
jno
shrb
lretw
nop
dec
push
jns
ds
bound
gs
adc
