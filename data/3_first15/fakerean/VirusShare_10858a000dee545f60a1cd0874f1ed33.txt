neg
not
xor
xor
mov
push
xor
neg
rcr
lea
mov
not
not
add
shr
jmp
shr
mov
add
mov
lea
shrl
mov
lea
mov
jmp
shr
push
xor
not
xor
rcr
pushl
xchg
xor
lea
pushl
neg
lea
lea
call
jmp
mov
and
xchg
lea
lea
neg
mov
mov
add
xor
mov
not
mov
jmp
xchg
neg
add
xchg
rcr
mov
mov
neg
not
jmp
mov
not
xor
ret
mov
lea
neg
xchg
mov
xor
xor
xchg
mov
mov
jmp
mov
xor
mov
mov
neg
xor
xchg
xor
lea
add
xor
neg
call
jmp
mov
xor
xchg
adc
decl
jne
jmp
neg
mov
mov
xor
mov
mov
xor
jmp
xor
xor
mov
not
lea
call
mov
lea
jmp
mov
lea
or
je
xor
xor
mov
mov
shl
adc
lea
mov
shr
jmp
shr
mov
xor
call
push
jmp
mov
xor
rcr
rcl
lea
lea
rcl
jmp
xor
rcr
lea
lea
mov
xor
and
shl
mov
xchg
mov
not
jmp
mov
xor
mov
lea
cmp
je
neg
not
mov
not
xor
mov
jmp
not
neg
add
shr
mov
xchg
push
jmp
rcl
neg
mov
xor
xor
jmp
lea
ror
mov
mov
and
popl
lea
mov
jmp
push
mov
sub
push
push
push
neg
lea
mov
add
jmp
rcl
shr
xchg
not
cmp
je
jmp
add
push
xor
rcl
xchg
mov
jmp
push
call
rcr
mov
xor
neg
add
not
mov
jmp
neg
rcl
xchg
xor
lea
xor
jmp
lea
not
ror
mov
neg
xchg
mov
mov
xor
rcr
xor
lea
jmp
shl
add
lea
shl
lea
jmp
mov
xor
add
lea
ror
adc
xchg
mov
lea
mov
lea
jmp
not
adc
not
mov
xor
rcr
xor
neg
xor
movl
jmp
mov
not
neg
jmp
mov
shr
add
lea
mov
xor
not
add
not
xchg
mov
mov
lea
shl
not
xor
jmp
and
lea
xor
and
xor
and
mov
mov
push
add
jmp
lea
adc
movl
lea
mov
add
rol
mov
mov
and
jmp
not
mov
mov
mov
neg
add
xor
xor
mov
lea
jmp
push
xor
xor
neg
lea
jmp
xchg
xor
not
pop
adc
jmp
not
mov
mov
xor
add
mov
lea
lea
not
lea
shl
mov
jmp
stc
addb
fistps
push
cmpsl
aaa
cmp
fistps
push
cmpsl
fists
pop
cmpsb
fcomip
shl
or
jbe
lds
popf
adc
mov
dec
fisttpll
sub
ljmp
lods
or
xor
insb
adc
xchg
pop
adc
movsl
inc
xor
xchg
fwait
aas
dec
push
fstps
mov
ss
push
push
cmpsw
fistps
rcll
fcmovnu
cmp
push
cmpsl
fistpll
or
mov
cmpsl
push
outsb
mov
mov
imul
pushl
mov
mov
lcall
stos
movsl
xlat
fidivl
xor
jecxz
mov
nop
adc
push
ret
push
out
nop
push
fcomp
xlat
ret
xchg
sub
sbb
fbstp
lods
sub
jecxz
pop
and
test
int
dec
mov
sahf
lcall
repnz
movsl
push
sti
push
movsb
lcall
jecxz
pop
aaa
outsb
sbb
imull
pop
and
lahf
and
aas
shl
sti
pop
xchg
repnz
not
arpl
jnp
loop
ds
push
and
xor
out
or
fcoml
push
push
pop
pop
dec
fistps
push
cmpsl
pop
aaa
jb
lcall
cld
push
cwtl
ss
mov
pop
scas
int
jae
xchg
fistps
test
iret
xchg
push
cwtl
scas
aaa
test
pop
push
data16
sub
out
nop
ffree
rcrb
jnp
add
xchg
or
test
cwtl
ds
sub
test
mov
fcomps
push
cmpsl
sub
psrld
pop
push
sahf
fsubrs
sub
nop
sub
mov
add
cmpsl
sub
frstor
add
cmpsl
push
data16
sub
jecxz
dec
push
or
sbb
sti
rcrb
lcall
ret
fwait
in
js
sbb
jl
iret
xchg
push
stos
fcmovnb
mov
mov
and
mov
in
in
mov
mov
insl
cltd
bound
lahf
sub
adc
jecxz
lahf
mov
cmp
push
dec
pop
dec
jns
fidivs
adcw
add
mov
in
or
cmp
out
pop
inc
les
xchg
or
jecxz
clc
inc
jb
je
cmp
mov
xchg
mov
mov
data16
bsf
mov
mov
mov
push
loop
mov
repz
lret
push
mov
clc
in
push
rclb
repz
rol
jp
jno
imul
ret
setne
fcmovb
mov
mov
cmp
cmp
cmp
jb
mov
cmp
xor
mov
les
push
out
dec
ret
dec
scas
cmp
jmp
sbb
cld
ljmp
popa
sub
pop
xchg
dec
mov
push
repz
lahf
les
lods
jne
je
adc
cmp
pop
sub
dec
dec
fldl
xchg
xchg
adcb
je
ret
mov
cmpsb
inc
test
ja
pop
jns
mov
xor
mov
stos
adc
in
mov
lds
add
stc
mov
les
mov
les
mov
adc
sahf
sbb
pop
or
ja
sbb
pop
popf
adc
mov
adc
mov
addr16
ss
adc
shll
ja
out
xor
pop
lcall
testl
test
jmp
dec
mov
jmp
les
out
lret
dec
lret
movsl
jg
sbb
jecxz
clc
inc
jb
je
repz
jmp
aaa
mov
ret
das
inc
cmp
pop
mov
les
stos
push
in
or
dec
in
scas
neg
adc
mov
inc
scas
mov
pop
leave
js
cld
xor
jmp
repz
cltd
ja
test
les
dec
pop
sbb
xor
and
add
mov
ja
test
loopne
cmp
das
inc
fldcw
pop
mov
jmp
lds
jl
ret
sub
dec
jmp
aas
hlt
loopne
jbe
nop
out
mov
adc
dec
out
sub
dec
jmp
lea
addr16
mov
inc
mov
out
dec
dec
dec
jmp
xor
mov
adc
jecxz
lahf
or
xchg
jb
hlt
cltd
jb
negl
pop
clc
sarb
push
rcl
cmp
cmp
lea
loop
push
cmp
loope
mov
fnstcw
stos
mov
cld
cld
dec
dec
jmp
cmp
inc
lahf
or
in
pusha
cmp
lea
jae
mov
jae
movsl
cltd
mov
test
sbb
enter
mov
mov
xor
faddl
inc
sbb
enter
mov
inc
mov
call
jge
mov
adc
jmp
cmp
push
jb
sub
mov
int3
cmp
lds
ret
mov
xchg
jne
pop
jmp
mov
out
dec
or
sub
dec
jmp
cmp
cmp
iret
inc
les
dec
inc
mov
int3
mov
sbb
mov
or
fcmovnb
mov
cmpl
int
sub
dec
jmp
in
sbb
sbb
cmp
cmp
lea
xchg
add
mov
mov
pop
inc
or
mov
sti
cmp
adc
mov
sub
lret
mov
std
int3
addr16
mul
sbb
imul
mov
adc
mov
hlt
sbb
xor
mov
pusha
mov
adc
inc
ret
fimuls
jne
les
jno
les
call
out
mov
fistl
lds
cmp
pop
rcrb
sub
adc
cmp
jno
adc
mov
lahf
repnz
mov
mov
cmp
mov
mov
push
int3
fistl
mov
popa
int3
dec
popa
jne
pop
aad
hlt
mov
adc
idivb
pop
fdivrl
test
sub
dec
in
cltd
pop
cltd
mov
in
adc
mov
jle
fidivrs
aam
pop
jno
dec
dec
pop
cld
in
loope
shll
jmp
cmpsb
or
mov
mov
scas
aam
mov
xor
into
mov
adc
mov
mov
xchg
shll
dec
mov
repz
jge
test
and
mov
ja
repz
adc
pushf
mov
xor
lds
sbb
mov
mov
or
mov
pusha
sbb
mov
mov
xchg
imulb
sbb
cmpb
idivl
add
push
ret
faddl
cmc
push
aam
mov
imul
loope
or
call
add
repz
daa
out
jns
and
add
stos
aad
mov
out
orl
push
test
frstor
mov
xchg
inc
add
add
scas
xchg
pop
pop
cltd
inc
hlt
pop
loope
mov
ret
aam
sub
jge
pop
dec
stc
and
add
sbbb
pop
adc
push
pop
push
ret
pusha
mov
sub
scas
mov
mov
stos
mov
push
rolb
add
int
cmc
lods
push
xor
pop
cmpsb
mov
mov
sarb
and
aam
add
push
andl
les
sub
subl
mov
jns
and
ret
pushf
std
xor
outsl
dec
icebp
int
mov
push
frstor
aad
movsb
cmp
dec
out
and
out
test
cli
mov
aas
push
adc
icebp
lock
push
sub
xchg
or
inc
sub
dec
push
xor
lds
lret
add
dec
filds
ljmp
xchg
or
cmp
xor
stos
and
in
stos
sub
jbe
inc
mov
dec
ret
cld
insb
insl
mov
or
js
roll
lock
cmp
mull
jbe
or
aas
test
out
fcmovnbe
clc
clc
enter
mov
icebp
arpl
adc
imul
jo
jno
sarb
loope
loopne,pn
adc
mov
jmp
pop
in
push
mov
mov
mov
movsb
test
jne
inc
lret
jecxz
lahf
xor
pop
les
pop
mov
scas
fsubr
scas
push
pop
mov
xor
mov
icebp
pop
sub
adc
cmp
mov
pop
add
mov
mov
add
imul
jno
popf
xor
jl
jmp
mov
pushf
rorl
or
dec
shll
pop
lea
mov
jg
cld
outsl
fnstsw
xor
mov
sub
lahf
lods
mov
int
or
aad
mov
jns
cmp
dec
cwtl
sub
enter
xor
mov
pusha
mov
stos
lret
incl
addr16
scas
gs
adc
int
mov
ud0
dec
jno
stos
call
orb
in
dec
and
stos
fbstp
push
clc
and
fistl
xchg
bnd
cmp
negb
out
bound
fcmovbe
or
and
push
movsb
mov
add
movsl
fsubl
push
mov
inc
rol
scas
insl
and
lods
mov
cwtl
arpl
aam
enter
clc
sub
and
dec
pop
push
rorb
ds
mov
xor
fwait
add
stos
incb
das
out
out
mov
cli
mov
push
rol
es
orl
data16
shl
jmp
xchg
pop
xchg
sti
cmp
rcrl
add
mov
mov
bound
aaa
dec
push
popf
ret
push
push
mov
aam
int
mov
call
jns
xchg
movsb
push
jne
or
test
lahf
adc
pop
xchg
and
fldenv
stos
icebp
push
imul
jmp
sahf
mov
push
mov
mov
dec
clc
enter
dec
and
mov
lods
leave
jae
dec
scas
clc
fistpll
pushf
cmpsb
mov
sbb
loop
xchg
nop
jo
bound
pop
add
cs
xchg
enter
mov
popf
xor
inc
add
xor
repnz
mov
inc
xchg
movsb
js
cmp
mov
sub
stos
xchg
sub
push
mov
adc
inc
cmpsl
icebp
fldt
fsts
xor
dec
cli
out
pusha
xor
push
jns
mov
inc
jno
sub
inc
in
rclb
test
jo
popa
add
pop
or
xchg
pop
testl
dec
pop
dec
popf
icebp
sarb
mov
cmp
cmp
xchg
clc
xchg
test
xchg
and
ret
popf
mov
xchg
cmpsb
arpl
cwtl
fs
out
push
mov
mov
xchg
inc
into
ret
inc
adc
loope
push
lret
cmp
hlt
push
cmp
into
insl
cwtl
lcall
pop
push
loop
adc
and
xchg
inc
jmp
mull
cmp
and
fninit
mov
push
mov
cld
push
mulb
cmpsl
xchg
lret
xor
jle
test
xor
push
rcr
je
inc
les
and
fidivrs
mov
push
dec
stc
movsb
sbb
pop
dec
cmp
mov
xchg
shl
ss
xlat
cmp
sub
repnz
sbb
push
popa
ret
test
jl
mov
lret
cwtl
xchg
xor
mov
adc
push
jne
movsb
or
cmp
aad
add
sar
inc
sbb
daa
cmp
in
int
adc
cmp
inc
out
mov
faddp
pop
mov
popf
out
jge
in
mov
les
iret
push
push
movsl
lahf
add
sar
cmp
push
into
mov
fdivrs
pushf
xchg
stc
scas
mov
jmp
std
pop
jp
movsb
sbb
test
add
inc
push
stc
jmp
out
ret
pop
lods
enter
std
inc
xorl
fs
mov
mov
push
push
scas
shll
in
xchg
icebp
xor
push
inc
jp
rcll
jmp
in
lods
lock
adc
sete
xor
jg
pop
clc
adc
and
movsl
mov
in
into
mov
push
dec
ret
movsb
cmp
mov
rcll
inc
add
ret
pop
cmp
xlat
repz
jae
loop
into
cmp
and
push
inc
pushl
mov
pop
xlat
dec
stc
add
aaa
dec
xor
dec
mov
xchg
or
push
jns
adc
test
loopne
pop
cmpsb
pop
push
xchg
test
mov
cmpsb
sbb
mov
lcall
jno
jno
add
sarl
xchg
imull
ss
sub
mov
or
fiadds
mov
fdivs
int
add
cmp
sub
loope
sbb
cltd
adc
jg
lcall
dec
and
add
lahf
adc
cmp
sbb
xor
lds
mov
xchg
mov
jp
lret
push
out
mov
mov
xor
pop
into
mov
ljmp
push
cmp
aaa
mov
in
pushf
cmp
subl
or
addb
xchg
pop
add
in
divl
add
mov
sub
je
push
lret
test
jae
mov
dec
je
xchg
sbb
mov
pop
out
rcr
dec
mov
mov
jbe
je
mov
mov
mov
mov
cmp
dec
push
std
jnp
ret
ds
repz
pusha
inc
cmp
sarl
sarb
jae
imull
mov
adc
popf
pusha
mov
dec
push
das
cmpsl
movsl
stos
adc
push
in
add
jecxz
fnsave
inc
pop
or
xor
cmpl
jno
pop
mov
dec
cmp
mov
addr16
xchg
jp
pop
mov
cmp
lds
loop
call
mov
or
adc
sbb
ret
mov
xchg
sub
cld
push
fnsave
dec
daa
mov
xor
push
je
out
mov
inc
fadd
aam
mov
dec
add
stos
sub
jno
movsb
mov
in
call
lret
xchg
pop
add
or
test
dec
sbb
inc
int
mov
adc
pop
lcall
cmp
adcl
jbe
lret
cmpb
es
jbe
dec
mov
cld
mov
test
iret
push
data16
cmpsb
inc
orb
jecxz
ret
xchg
mov
cmc
xchg
std
outsl
in
scas
mov
rclb
pusha
loopne
sti
rolb
pop
in
test
xchg
loopne
or
mov
pop
cmp
xor
out
cli
scas
xor
add
in
pop
cmc
inc
dec
std
xchg
pop
dec
lret
jne
xchg
sahf
mov
dec
sahf
out
xchg
xor
mov
jle
add
scas
push
movsb
cli
sub
loope
pop
rorl
dec
mov
pop
rolb
icebp
mov
cmpsb
rcrb
lock
xchg
rorl
lods
daa
cmp
cmp
dec
fistl
mov
cld
clc
mov
pusha
aas
or
jmp
les
popa
mov
stos
or
ds
sub
cmp
mov
mov
stc
fwait
test
sbbl
in
arpl
in
xchg
mov
ret
sbbl
sub
loopne
xchg
movsb
pop
adc
mov
pusha
and
nop
pushl
mov
ret
xor
mov
and
mov
xor
sub
inc
jmp
les
jne
sub
inc
mov
adc
cmp
mov
lods
sahf
nop
addb
xchg
out
xor
xlat
fidivrs
insb
mov
rolb
sbb
push
xchg
adc
enter
ja
pop
sbb
push
popa
fdivrp
fwait
xor
dec
lret
das
nop
dec
fists
shrb
repnz
fwait
into
pop
cld
test
mov
mov
jecxz
xor
or
push
fldz
xchg
pop
inc
aas
pop
nop
aad
lods
ss
mov
mov
fimull
aaa
inc
pop
jecxz
dec
jmp
xorl
add
sahf
imul
xor
and
call
movsb
nop
es
cwtl
fisttpl
and
and
fistpl
jecxz
push
cmpsl
jb
xchg
mov
xor
xchg
scas
mov
shll
jne
popa
xchg
mov
pop
loope
dec
mov
push
add
cmp
nop
mov
push
cwtl
cmp
mov
imulb
pop
or
dec
mov
negl
fcoml
xchg
pop
dec
mov
std
cmp
mov
into
out
fdivr
xor
rcll
jnp
mov
cmp
aam
jae
mov
ret
dec
mov
cmp
mov
adc
sbb
fld
jmp
mov
push
pop
xchg
je
push
sub
in
push
sti
and
dec
cltd
mov
sbb
sub
jmp
mov
push
in
notb
in
sahf
xchg
jo
stc
and
cmp
sub
xor
xor
jle
das
cmp
fwait
int
sub
pusha
mov
cmpsl
ret
out
pusha
jbe
cmp
or
cmpsl
mov
fisttpl
cltd
mov
mov
xchg
ss
cltd
std
imull
mov
nop
cmp
pop
std
push
xchg
mov
leave
push
cmp
cli
and
std
cmp
fisubrs
add
nop
rcll
dec
xchg
out
jl
mov
test
pop
icebp
jno
mov
cli
mov
adc
xor
xor
bound
leave
jmp
sbb
and
xor
adc
call
imul
mov
jnp
inc
add
pop
cmpsb
fs
imull
push
test
loopne
push
inc
xor
xchg
jnp
fsubrs
mov
cmp
rcrl
and
das
scas
add
imul
lea
mov
ja
cld
das
inc
mov
test
push
loope
test
adc
shll
mov
jne
jo
xor
jp
lea
mov
nop
loopne
sbb
jge
cld
loop
enter
dec
sbb
in
xchg
dec
jl
xor
jl
xor
mov
out
cmp
cmp
hlt
lret
insb
mov
faddl
xchg
loopne
inc
mov
xor
mov
adc
out
add
mov
nop
pop
ror
rolb
pop
cmp
xchg
jne
mov
scas
xor
cmc
and
filds
mov
loop
imul
movsl
idivb
insb
sub
dec
es
stos
xchg
mov
fwait
lahf
je
mov
subl
testl
mov
je
loopne
inc
lock
ss
push
mov
iret
xchg
inc
mov
nop
dec
mov
mov
xchg
pop
sbb
or
jg
sahf
pop
lock
mov
inc
in
mov
and
sub
pop
sbb
sub
rorl
into
out
movb
jl
pop
pop
stc
push
idivl
dec
stos
lret
test
gs
and
aas
call
inc
hlt
mov
pusha
out
ss
push
mov
mov
imul
push
adc
addr16
mov
mov
icebp
stc
xchg
sub
jo
sub
mov
or
adc
comiss
adc
xchg
fiadds
lock
mov
popl
mov
lds
add
leave
ds
inc
adc
inc
push
mov
je
mov
xchg
mov
cmpsl
dec
push
scas
mov
lock
ljmp
popf
adc
mov
imul
xchg
call
adc
mov
repnz
out
jne
lea
leave
dec
mov
out
gs
push
jl
sub
jb
fmull
iret
subb
arpl
adc
adc
or
outsb
movsb
cli
test
mov
in
daa
in
cmc
mov
iret
cmp
pushf
rolb
loope
xlat
push
nop
test
mov
ds
xor
mov
fwait
adc
popa
fcmovu
mov
mov
out
mov
xor
fsubrl
aad
and
cmpsb
jmp
mov
or
cmpsl
pop
lods
ret
sahf
mov
pop
das
pop
adc
mov
xlat
ret
adc
push
call
xor
push
pushf
in
adc
ffree
ds
fisubrl
cmpsl
jb
sbb
sub
xchg
enter
ret
or
mov
dec
test
cmp
mov
lods
sbb
sub
ret
lea
int
fwait
push
addr16
jb
in
fistpl
mov
add
fstpl
ss
or
cmpsb
xor
enter
shl
cmp
mov
add
lret
pop
inc
dec
lret
jns
mov
xchg
imul
ret
dec
jns
loop
fstpt
dec
loopne
cmp
test
and
adc
inc
lret
mov
and
push
xchg
xlat
mov
mov
push
fcom
inc
inc
les
mov
mov
aam
fwait
add
lods
pop
mov
adc
pop
xchg
jae
out
clc
addb
cwtl
shlb
subb
xor
cmp
jbe
cmp
loopne
fwait
xor
inc
enter
xchg
add
hlt
out
inc
xchg
cmp
push
sarb
mov
pop
dec
cs
mov
xor
cmp
int
sbb
mull
sub
clc
jb
repnz
cmp
mov
repnz
test
inc
std
gs
ljmp
dec
and
add
insb
fildll
inc
or
adc
sbb
aas
in
negl
mov
stc
popa
mov
mov
or
xchg
jns
inc
andb
loopne
mov
lret
push
inc
jo
or
inc
jle
xor
movl
pop
sub
adc
mov
xchg
xor
push
stos
andl
jl
jp
das
pop
mov
loope
lahf
lds
jle
repnz
pushf
mov
stc
jl
mov
adc
aam
lods
mov
mov
sub
jo
fsub
test
inc
mov
call
xor
or
stc
push
mov
mov
pop
push
jne
clc
roll
mov
push
xchg
inc
maskmovq
imull
add
subb
sub
adc
or
ljmp
stos
dec
movsb
push
push
jge
in
mov
add
out
in
adcb
lahf
dec
xor
add
ret
pop
cltd
cmpsl
mov
dec
pop
dec
xchg
repz
fistps
sbb
inc
dec
loope
adc
mov
ljmp
test
insb
inc
mov
xor
outsl
divl
jne
push
mov
xchg
mov
inc
xlat
xchg
inc
insb
es
push
movsl
pushf
pusha
loope
or
jl,pt
or
push
xchg
sarl
aaa
sbb
sub
cmp
pop
jecxz
xorb
xchg
popa
out
lret
hlt
pop
cmp
cld
in
hlt
push
adc
xor
jbe
enter
movsl
pop
pop
sub
mov
mov
mov
sub
add
adc
jle
push
mov
add
dec
pop
jmp
popf
adc
les
loope
cmp
xchg
aam
or
or
int
pusha
movsb
push
cmp
dec
nop
movsb
sbb
ss
mov
pop
push
fidivrs
js
inc
pop
mov
in
jae
xor
add
js
std
xor
mov
xor
test
mov
cmp
das
filds
jmp
cmp
push
push
push
mov
cmp
cwtl
jae,pn
leave
daa
and
sarb
aaa
pop
jmp
jmp
cmp
sarl
pusha
sub
test
and
jbe
inc
out
imul
cmp
arpl
inc
xlat
and
or
mov
dec
test
xchg
aas
xchg
lds
cmp
jg
jmp
popf
icebp
dec
loopne
into
insb
test
jmp
xor
xchg
mov
xor
mov
sbb
insl
xchg
loopne
xor
dec
popa
xor
lds
int3
xchg
xorb
int
imul
std
leave
pop
fucomi
cwtl
lret
dec
roll
jb
mov
inc
xlat
ret
adc
pop
xchg
xor
aam
mov
xlat
into
pop
std
fnsave
arpl
je
sub
and
pop
or
xchg
xor
loopne
adc
addr16
and
mov
add
cltd
into
push
cld
add
inc
jo
xor
popf
andl
insb
mov
pop
mov
aad
pop
fisttpll
add
sub
std
popf
inc
adc
jl
xor
mov
loopne
rolb
test
shr
sbb
insb
pop
bound
mov
sbb
dec
cmp
movsb
hlt
inc
sub
iret
enter
xlat
lods
xor
les
in
lahf
popa
pop
test
sbb
xchg
mov
xor
dec
adcb
and
loope
cld
dec
leave
jp
loopne
sub
mov
aad
sbb
adcl
ja
mov
sar
adc
xchg
aaa
adc
dec
push
pop
pop
xlat
jnp
xor
mov
mov
sarb
popf
push
mov
and
push
call
add
xor
or
test
and
repnz
enter
push
repnz
imul
dec
mov
sbb
imul
mov
movsl
int
jo
mov
mov
jns
and
jle
adc
mov
sub
jne
sbb
xchg
inc
push
add
daa
mov
cmp
aam
fstpl
dec
cs
ds
xchg
mov
scas
out
mov
xchg
lret
nop
push
xor
fwait
mov
cmc
pop
out
div
mov
stos
lcall
adc
fnstsw
popf
rclb
push
push
divl
sbb
popa
imul
into
aaa
xor
mov
xchg
mov
cli
xchg
gs
mov
or
adc
xchg
out
mov
jle
or
ja
popa
cs
xchg
mov
jecxz
jp
pushf
xor
mov
insb
std
mov
dec
adc
mov
adc
out
les
clc
sbb
jnp
out
aam
and
hlt
call
mov
popf
sbb
inc
arpl
fstpt
ljmp
mov
sub
add
stc
notl
sub
or
mov
mov
add
xor
cmp
and
pop
and
mov
idivl
and
sahf
and
xor
sub
inc
xchg
sahf
adc
loop
or
mov
scas
fdivs
lahf
ds
inc
cmp
mov
es
jecxz
cs
sub
sbb
add
cld
popf
sub
ss
shlb
inc
jmp
pop
shll
sbb
or
lret
mov
push
adc
sarl
jno
or
mov
sub
sub
mov
push
cmp
inc
adc
xchg
jno
popa
cmp
or
jmp
popf
cmp
xchg
push
sub
xor
inc
fsubrs
and
mov
xchg
jne
mov
call
add
pop
dec
dec
lods
push
shrb
lea
dec
mov
cmp
les
xor
scas
xchg
sub
dec
cmp
iret
ret
adc
and
mov
pop
rcll
cltd
mov
fisubs
test
sbb
add
sbb
lock
hlt
loopne
mov
mov
jl
sbb
inc
xor
jae
and
cmp
pop
mov
lea
das
pop
xlat
mov
lea
inc
cmp
jo
sti
inc
mov
add
mov
pop
and
xchg
xchg
repz
push
stos
mov
js
fcom
xchg
adc
lods
fisttps
cld
loop
adc
out
pop
movsl
xchg
cmpsb
frstor
ss
pop
outsl
pushf
mov
ficomps
shrb
adc
rol
js
lret
mov
in
xchg
pusha
insl
xchg
mov
lods
sub
fcmove
fstp
xor
ja
mov
jno
in
loop
cld
addr16
and
addl
xchg
dec
daa
mov
cmp
imul
out
das
jge
aas
popa
xchg
xchg
popf
lods
and
in
jmp
lret
aad
hlt
fistps
sub
and
ret
stos
int
ret
popf
lock
psubusb
les
push
in
sub
ja
repnz
push
lret
adc
lret
jne
push
pop
xor
ret
add
std
cmpl
sbb
les
pop
push
nop
xor
mov
mov
cmp
push
adc
jl
xchg
sbb
mov
call
sub
cwtl
ds
xor
jae
mov
cmc
dec
push
pushf
sub
lods
add
inc
stc
pop
popa
adc
fwait
cmpsb
cltd
cmpsb
testl
sbb
jb
daa
sub
orl
fsubs
inc
dec
ss
out
aas
or
jnp
push
es
push
xchg
cmp
mov
ret
pop
data16
imul
pop
cmpsb
xchg
add
push
push
mov
inc
sbb
mov
testb
enter
sub
xor
cltd
xchg
or
je
pop
add
and
out
iret
les
pop
xor
jno
out
lret
into
out
ljmp
mov
aam
jle
pusha
orl
das
in
sub
push
loopne
mov
daa
repz
jmp
xchg
fs
loope
sar
scas
std
test
cmp
out
cld
push
xchg
mov
in
cmc
cmp
inc
into
jecxz
xchg
ja
push
mov
or
cld
cmpsb
aad
fimuls
mov
sub
cmp
push
int
jmp
in
mov
movsl
jg
test
mov
add
pushf
push
xchg
mov
or
dec
fidivs
mov
fidivrs
aaa
mov
in
mov
add
inc
imul
shlb
mov
mov
mov
mov
int3
out
mov
hlt
scas
nop
adc
lods
adc
adc
push
notb
dec
divl
and
adc
push
lret
mov
dec
sub
and
stos
adc
dec
aam
add
fiadds
xor
pop
test
add
jb
cmp
jns
stos
inc
push
and
iret
push
lret
xor
lret
cmp
stc
add
adc
cmpsb
std
jne
mov
dec
loop
test
inc
jge
in
xchg
les
lds
sub
imul
or
cmp
dec
or
inc
push
lahf
sti
ret
cwtl
xlat
test
mov
lock
mov
mov
mov
imul
adc
mov
mov
stc
xor
mov
mov
in
and
mov
ds
insb
fisubs
pop
leave
aad
call
fcompl
dec
sub
push
cmp
push
out
or
jno
into
mov
jae
add
xchg
push
std
out
mov
xchg
mov
mov
xchg
lcall
mov
hlt
jne
xchg
adc
push
scas
mov
mov
cwtl
cld
sub
adc
loop
inc
xchg
cli
loop
dec
mov
fsubr
fistl
ja
ja
rcr
push
scas
das
fs
std
mov
cmp
aas
into
aas
daa
adc
mov
and
pop
push
dec
adc
pusha
push
nop
xor
adc
aam
sub
in
aas
mov
inc
incl
pusha
sbb
out
push
xchg
mov
lds
jg
pop
mov
pop
fsubs
push
or
test
push
stos
jae
jmp
mov
xor
mov
push
aas
sbb
jmp
xor
in
stc
incb
enter
mov
mov
inc
pop
mov
repnz
xor
out
cmpsl
movsl
sub
and
mov
cs
mov
in
loop
popf
movsb
mov
lds
mov
inc
xchg
in
inc
scas
mov
lods
scas
ret
xchg
xlat
es
imul
push
push
inc
into
int
cmp
add
inc
enter
inc
mov
jns
dec
je
add
pop
sbb
pusha
mov
xchg
ret
push
mov
xchg
mov
push
jnp
rol
mov
add
test
xor
outsb
cmp
jb
cmc
call
leave
mov
add
cmp
mov
loopne
shlb
iret
std
push
sahf
or
cmc
movsb
mov
add
inc
test
mov
icebp
aam
pop
outsb
lods
rcll
dec
outsl
xchg
push
mov
cld
sub
icebp
out
mov
int
dec
jmp
dec
mov
dec
insb
out
push
mov
cmpl
nop
jmp
mov
std
outsb
sbb
repnz
adc
xchg
into
cli
sbb
pop
add
pop
mov
aas
sbb
pop
adc
xchg
inc
pop
icebp
ja
std
inc
and
mov
das
jne
inc
iret
xor
mov
lret
xchg
jo
in
leave
pop
je
adc
xchg
cmpsl
xchg
sbb
xor
rol
es
lods
aam
sub
fsubl
icebp
fs
movsl
popf
sar
push
fneni(8087
sub
pop
je
lods
lods
ja
cld
mov
jb
cmp
lahf
clc
stos
test
cmc
add
cmpsl
push
dec
jbe
into
sub
dec
xchg
xchg
pop
xor
sahf
pop
inc
mov
lcall
xchg
std
jp
cmp
addr16
shlb
pop
inc
or
xchg
je
aam
cmp
pushf
shr
roll
mov
clc
in
jle
or
pop
mov
fwait
data16
dec
and
inc
rcll
shrb
sub
mov
cwtl
roll
loop
int3
fstl
imul
jmp
stos
adc
mov
inc
jno
in
js
movsb
out
movsb
out
popa
mov
shl
mov
mov
add
mov
xchg
addr16
sbb
adc
add
adc
lret
dec
sub
leave
xchg
sub
jmp
add
popf
pushf
mov
ja
lods
xor
xchg
test
mov
mov
pop
ja
xchg
or
mov
xchg
mov
xor
leave
fwait
sahf
ss
stos
mov
jmp
mov
mov
cld
outsl
std
pop
mov
addr16
cmp
mov
sub
mov
fdiv
pop
mov
jmp
cmc
mov
cld
lret
mov
pop
push
sub
mov
hlt
adc
mov
xchg
les
xchg
xchg
lcall
sbb
xchg
dec
adc
dec
mov
out
push
aam
dec
sub
adc
mov
mov
mov
std
fidivrs
popf
or
and
pop
leave
lret
cmp
repz
sub
adc
pop
aad
cwtl
xor
in
add
adc
mov
fcoms
es
push
repz
in
dec
xchg
xchg
dec
push
inc
jmp
mov
das
mov
subb
je
insb
scas
cmc
push
into
xor
push
add
push
mov
lahf
aam
inc
lods
xchg
mov
mov
dec
out
mov
jb
repnz
out
jno
sbb
loope
jl
cli
in
loope
and
cmpsl
in
pop
xchg
in
dec
out
cmp
mov
inc
cld
iret
sub
repz
ret
cli
jmp
push
movsb
jecxz
mov
sbb
lret
gs
jne
scas
popa
inc
mov
inc
insb
fisttpl
push
aad
aas
xor
sbb
cmpsb
imul
mov
lds
dec
dec
fdivs
xchg
mov
pop
pop
push
push
or
shrb
push
aad
pop
lock
jecxz
popf
inc
mov
push
pop
dec
jg
ja
pop
adc
lods
inc
bound
scas
pushf
imul
pushf
xchg
aas
push
mov
mov
and
in
mov
push
xor
push
mov
sub
leave
jg
pop
cld
xchg
jbe
jp
pop
mov
test
das
cmpsb
xchg
xlat
push
lahf
mov
mov
sbb
push
cwtl
push
mov
cs
in
clc
jne
push
xchg
lret
bound
inc
pop
clc
sub
orb
cmc
or
es
rclb
mov
call
in
mov
dec
push
cmp
push
adc
dec
fwait
pop
out
push
jno
mov
pop
loopne
cmc
lock
sub
ja
cli
sahf
push
xchg
push
mov
into
repnz
scas
das
aam
in
add
or
or
xchg
dec
pop
sub
push
out
fisttpll
int3
mov
cmp
adc
xchg
sbb
cli
or
inc
push
inc
ds
jo
test
pop
pushf
xchg
leave
xor
inc
decb
mov
fisubrs
incl
or
lea
ret
jp
xchg
outsb
sti
mov
call
xchg
mov
lods
ret
xchg
sbb
pop
mov
gs
stc
adc
fldt
sub
data16
test
movsb
mov
subb
cmpsb
ljmp
add
pop
out
into
std
std
add
push
pop
loopne
pop
nop
imul
or
addl
and
push
mov
xchg
jl
mov
fwait
push
add
out
mov
xor
insb
int3
or
gs
mov
xor
mov
jp
shlb
dec
and
dec
outsl
rcl
icebp
out
lahf
and
pop
cmc
leave
icebp
out
in
and
cmp
sub
into
stos
sahf
ret
sbb
aam
cmp
jg
jle
mov
xchg
sub
mov
insb
ds
xchg
cmp
push
cld
mov
xor
inc
into
xor
int3
cs
int
push
enter
dec
adc
and
xlat
dec
rolb
data16
cmp
mov
push
mov
aaa
cld
sub
mov
adc
test
fstpl
mov
jnp
mov
fwait
hlt
ficompl
pop
adc
aas
imul
add
and
push
or
push
add
add
adc
inc
and
mov
lahf
add
imul
lea
inc
fistps
pop
cmpsb
cmp
sarl
pop
stos
ljmp
call
in
lds
pop
add
dec
pop
cltd
lret
pushf
lock
xor
pop
cwtl
fwait
pop
call
add
aaa
out
dec
push
ror
repz
mov
ds
std
shrl
jmp
idivb
mov
sub
xchg
xchg
movsb
sub
ret
mov
sbb
jl
fmul
addr16
adcb
push
dec
sbb
test
vsubsd
pop
cmpsl
add
lock
scas
xchg
adc
xlat
std
mov
pop
inc
mov
data16
cmp
mov
mov
stc
push
xchg
sub
push
shrb
enter
lea
jg
pushf
jmp
outsb
adc
movsb
jmp
push
test
imul
lret
inc
fstps
or
mov
mov
inc
and
xor
cmp
sub
pushf
xchg
cld
iret
pop
scas
in
inc
xchg
in
leave
dec
sub
dec
cld
in
lret
dec
push
aad
or
push
add
shrb
mov
loop
mov
inc
add
mov
in
mov
cli
pop
xchg
dec
movsb
xchg
pop
in
and
mov
loope
std
cmpsl
in
stos
fnop
xchg
es
mov
int3
mov
dec
add
xor
pop
nop
lret
dec
cmc
xchg
xor
cmp
out
dec
mov
xchg
push
push
cmp
mov
sbb
pop
shl
fs
cmp
cmc
pop
rol
mov
cmp
arpl
subl
scas
fcomps
ret
arpl
mov
fcom
cld
pop
lcall
data16
repnz
scas
sub
imul
inc
pop
pop
iret
in
clc
pop
movsb
mov
lock
or
mov
sbb
mov
insb
jae
out
fs
cmp
adc
fwait
mov
in
movsb
out
adc
ja
test
mov
je
mov
add
or
xor
test
into
cmc
lahf
pop
sti
mov
andl
mov
xchg
jb
std
popa
