push
mov
sub
push
movl
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
sar
or
mov
mov
mov
mov
mov
mov
and
cmp
jne
mov
and
mov
mov
xor
mov
mov
add
mov
mov
add
movzbl
movzbl
sub
mov
add
mov
jmp
mov
and
mov
mov
shl
mov
mov
mov
mov
add
movzbl
movzbl
xor
mov
add
mov
mov
inc
mov
mov
shl
mov
shr
or
mov
cmpl
jl
xor
inc
pop
leave
ret
push
mov
sub
movl
mov
or
mov
mov
mov
pushl
call
mov
leave
ret
push
mov
sub
push
call
andl
push
push
push
push
push
call
cmp
jne
push
push
call
test
jne
movl
jmp
mov
imul
mov
mov
or
mov
mov
xor
mov
div
mov
mov
xor
push
pop
div
mov
mov
shl
mov
mov
and
mov
mov
mov
push
push
push
call
add
cmp
je
mov
mov
shl
mov
shr
or
mov
mov
mov
jmp
movl
call
push
call
pop
leave
ret
int3
int3
int3
outsl
mov
int3
int3
mov
add
dec
push
dec
jne
pushf
imul
fdivrl
loop
insb
in
xor
fisttpl
subb
cld
push
cmp
dec
fisubs
adc
xchg
sahf
and
testb
push
adcl
movsb
fistpl
and
or
xchg
or
add
adc
sub
and
lahf
in
mov
aam
or
addr16
push
sub
add
insb
mov
mov
je
mov
mov
pushf
cmp
das
int
mov
test
aad
packuswb
repz
add
xor
popf
pop
lea
or
leave
mov
andb
dec
and
adc
leave
mov
dec
xchg
data16
push
adc
mov
xchg
dec
fisubrl
push
sbbb
lahf
movsl
scas
aaa
fstl
xor
sub
push
cmp
rcrb
sub
adc
mov
lret
insb
pushf
fldt
std
cmp
test
xchg
inc
icebp
mov
repnz
push
xchg
shr
jmp
pop
cmpsb
mov
cld
stos
adc
jp
jns
mov
fs
outsb
popa
add
fsubs
in
scas
sbb
ljmp
pop
mov
push
inc
inc
adc
inc
add
adcl
mov
imul
pop
cmp
jg
jae
test
shrl
or
loope
mov
les
shrl
clc
mov
push
lods
mov
int3
cwtl
in
push
mov
pop
aad
cltd
xchg
int
cmp
mov
lock
push
and
and
mov
scas
jmp
adc
jle
push
sbb
aam
ljmp
data16
int3
test
shll
fldl
mov
inc
or
sub
mov
xchg
test
push
std
mov
mov
hlt
push
cmp
out
je
cmp
gs
fwait
sbb
push
xor
and
inc
data16
mov
inc
cltd
loop
xor
inc
loope
inc
fistl
repnz
ret
leave
test
add
dec
mov
movb
imul
inc
out
pop
xchg
repnz
push
lock
bound
push
cmp
ja
mov
cld
inc
xchg
pop
jne
pop
bndldx
push
in
scas
in
sahf
mov
pop
mov
icebp
jne
add
es
sbb
nop
and
dec
shll
lods
lcall
mov
mov
jb
xor
ja
xor
aas
lret
cmp
pop
push
out
xchg
sub
fst
inc
imul
mov
aam
loopne
dec
push
call
pop
pop
xchg
sti
xchg
mov
pop
repnz
pop
push
push
testb
popf
sub
or
mov
adc
ljmp
mov
bound
xor
lahf
in
push
cmp
lds
sub
sub
xchg
shlb
cpuid
add
xor
lcall
mov
out
sbb
imul
xor
xor
fucomip
sub
pop
and
mov
in
repz
xor
and
pop
mov
flds
in
jg
push
and
out
sbb
mov
and
and
mov
mov
dec
mov
test
int
push
leave
jge
mov
xchg
adc
divb
sub
rcrb
in
out
or
sahf
sub
stos
shrb
das
cmp
cltd
dec
or
xor
inc
or
rcll
test
stos
lret
or
ss
xchg
mov
adc
adc
test
cmpsb
mov
xor
xor
inc
clc
lods
sarl
rcr
sbb
lahf
cs
xchg
xchg
fnstcw
inc
jle
push
and
imul
mov
inc
es
mov
or
xchg
fisttpl
jne
aam
sbb
imul
pop
xor
jnp
jmp
fwait
aaa
mov
pusha
jne
adc
dec
push
test
imul
fisubs
inc
cmp
mov
pop
push
insl
imul
pop
inc
stos
negl
cld
jmp
mov
test
mov
add
jmp
xchg
ret
pusha
in
aam
xor
fmuls
mov
lahf
call
add
les
inc
sub
lahf
loopne
jo
aad
add
sbb
std
push
lock
loopne
sbb
icebp
push
jp
cli
mov
sub
mov
jns
andb
lahf
xchg
sbb
jge
out
push
pop
ret
into
and
call
jns
xchg
inc
sbb
call
sbb
mov
fdivp
jne
popa
aas
lea
rclb
cmp
fsub
sub
pop
and
add
or
stc
shlb
subl
cld
or
jae
mulb
jl
adc
call
fsts
pop
test
adc
cmp
lods
sahf
into
push
scas
lds
xlat
adc
xlat
outsb
scas
mov
xlat
js
or
daa
push
call
ret
test
or
jb
icebp
push
jl
cmc
inc
mov
dec
and
adc
inc
fisubrs
lea
mov
add
push
bnd
insb
sbb
std
sub
mov
divb
clc
in
out
add
gs
loope
js
notl
sbb
mull
nop
push
sub
cmpsl
fisubl
scas
xor
pop
xorl
mov
lock
lds
cwtl
or
cmp
sbb
jge
out
inc
int3
stos
es
xchg
call
xchg
and
imul
bound
insb
lahf
hlt
stos
pushf
mov
mov
jne
sub
es
jne
inc
out
idiv
nop
scas
dec
or
and
test
sub
gs
adc
js
shl
fisttpl
push
xlat
in
or
add
pop
scas
add
mov
xor
inc
out
jae
jmp
jnp
pop
in
addr16
and
mov
ftst
int3
shrb
fcmovne
mov
mov
pop
nop
push
push
outsb
leave
and
sub
stc
pop
sbb
dec
adc
test
pop
mov
mov
push
aaa
fsubs
push
mov
sub
mov
shl
lret
leave
mov
test
iret
xchg
shr
sbb
pop
jmp
or
adc
loop
hlt
int
loop
hlt
inc
pop
test
ret
cld
lcall
dec
ret
inc
and
pop
popa
mov
test
sbb
hlt
or
cmp
insl
mov
push
rorl
shll
or
pop
cli
xchg
sarl
loopne
push
add
scas
jne
pop
pop
jb
outsb
mov
lds
mov
and
jge
enter
xor
out
jo
sbb
cs
mov
rol
fldt
xor
push
pop
xor
cmp
leave
test
adc
out
outsb
clc
jb
das
mov
dec
push
fwait
push
mov
mov
test
mov
lods
testb
dec
fwait
pop
lock
sub
jae
cmp
iret
mov
xor
dec
inc
cwtl
push
fsubrs
pop
mov
clc
inc
leave
jo
sub
jle
mov
inc
xchg
stc
lds
adc
movsl
xchg
add
fwait
sub
jns
sub
movsb
jge
adc
sbb
sbb
enter
dec
mov
sahf
fdivl
xchg
dec
dec
test
cmp
xor
inc
inc
inc
sub
divb
mov
repnz
jle
mov
pop
stos
xchg
cmp
inc
add
xor
dec
clc
cmp
out
jg
in
sub
ds
mov
imul
pop
pop
jne
push
gs
adc
xchg
test
lret
out
int3
jl
aad
sbb
push
push
std
push
adc
test
cmp
hlt
fnsave
bnd
leave
rcll
inc
pop
push
sub
lods
xchg
movsl
popf
gs
into
mov
xchg
int
cmc
adc
aas
in
loopne
fisubrl
psubq
add
rcrl
mov
xchg
inc
js
push
pop
lds
mov
xor
mov
or
cmp
and
mov
inc
aaa
lret
in
arpl
pushf
insl
mov
loope
adc
lret
jmp
sub
sbb
push
ret
popf
lahf
sub
dec
pop
cmp
aad
mov
mov
test
pushf
and
cmc
jb
jo
cmp
pop
sub
inc
sbbb
stos
push
or
aaa
pop
gs
stos
inc
cltd
jecxz
sbb
mov
mov
pop
pop
fcoml
out
int3
in
adc
jno
cmpsb
push
mov
cmp
xlat
or
rdtsc
jbe
aad
aad
in
cmp
shr
aaa
and
clc
std
xor
inc
movsb
xor
popa
pusha
stc
enter
cmp
fsub
jmp
stos
aam
sbb
xchg
cltd
lret
cmp
mov
testl
xchg
nop
xor
mov
adc
push
or
mov
inc
mov
and
push
out
scas
aaa
iret
cwtl
xchg
adc
gs
sbb
cmc
xchg
push
mov
cltd
repz
cli
mov
insl
and
mov
in
cmpsb
push
add
addb
cmp
mov
enter
es
xchg
jle
lea
mov
out
rorb
ss
nop
adc
push
mov
and
jo
xchg
dec
mov
mov
cmp
jne
mov
jmp
or
sbb
les
les
rcr
lret
add
out
les
sbbl
cld
daa
mov
push
dec
push
sahf
mov
mov
rcrl
rolb
lods
mov
aam
and
and
dec
outsb
push
jbe
mov
pop
add
movsl
adc
fwait
cwtl
mov
in
mov
cmp
push
sbb
xchg
xor
mov
aaa
xchg
push
mov
fs
rclb
mov
ja
dec
xor
movq
inc
ficoml
mov
pextrw
jns
mov
bound
xchg
or
mov
mov
std
sub
rcr
cmp
and
add
add
push
and
cld
jae
nop
test
adc
cmp
movsb
fstpt
dec
faddp
mov
in
mov
jg
fwait
cmc
pop
adc
fildll
xchg
int3
aaa
xchg
mov
icebp
or
pop
jns
dec
or
xchg
sbb
je
movsl
jb
mov
xchg
pop
jbe
push
out
lahf
sbb
rolb
pop
clc
mov
mov
aaa
push
sti
xchg
scas
xchg
faddl
and
subb
jle
sub
mov
push
inc
cmp
xchg
shll
xlat
push
lret
jle
mov
mov
test
sub
clc
loope
lret
xchg
out
cwtl
repnz
add
jle
adc
pop
xor
dec
xor
cwtl
movsl
data16
iret
fldz
dec
dec
popa
add
inc
cld
pushf
push
or
lret
lods
lea
mov
ret
fs
dec
gs
test
stos
pop
push
add
test
pop
idivb
out
mov
nop
push
cli
lret
lahf
push
sbb
sti
loopne
dec
or
movsb
aaa
jno
fprem
loope
mov
dec
xchg
stos
jo
push
push
mov
dec
pop
jmp
dec
xor
ds
lds
push
inc
and
mov
add
dec
outsb
repnz
sarb
push
add
inc
gs
std
fs
mov
imul
mov
in
adc
enter
repz
loope
iret
or
cs
ret
lock
pop
sbb
xchg
pop
mov
mov
mov
cmc
push
dec
sub
pop
pop
fdivl
dec
out
insb
je
fcmovbe
fisttpll
rorl
negl
cmpsb
push
mov
push
lock
lods
jae
cld
mov
dec
add
jge
jb
inc
mov
out
cmpsb
cltd
in
lock
fistpll
int
push
jo
repz
divl
xor
call
imul
dec
xor
test
pop
xchg
mov
nop
mov
leave
push
mov
out
jno
adc
xchg
add
imul
jo
inc
adc
adc
dec
loopne
adc
ja
jno
cli
stc
mov
add
mov
push
cmpsb
fsubrs
fidivl
fwait
lahf
rcl
mov
xor
sbb
popa
push
ljmp
test
es
add
cld
xchg
loop
cmp
sbb
mov
sub
lds
cwtl
or
clc
jge
out
xchg
int
sbbb
mov
mov
jnp
rcrl
out
js
pushf
fiaddl
pop
cmp
pop
add
mov
mov
add
scas
int3
cmpsl
push
test
pop
xchg
adc
dec
testl
nop
jb
cli
lock
jnp
out
sbb
push
sbb
sbb
ficoml
nop
fldcw
jecxz
sub
scas
sub
cmpsl
jnp
jno
cmp
dec
shll
sbb
mov
mov
or
cmpsl
inc
int3
pop
jge
cwtl
ds
mov
and
sahf
push
insl
mov
sbb
sub
data16
scas
push
outsb
mov
sbb
inc
cmp
inc
out
aam
mov
out
pop
xchg
loop
imul
sub
cmp
fadd
aad
dec
sti
inc
lret
jl
outsl
mov
or
cmp
xchg
cltd
xchg
cmp
push
xchg
insl
sbb
mov
inc
xor
out
or
pop
pop
fisttpll
popa
lret
loope
xor
out
cli
xor
popa
jbe
inc
push
loope
int3
adc
out
adc
and
push
dec
dec
mov
addr16
les
test
inc
mov
pusha
jb
mov
inc
jg
loop
imul
icebp
dec
popa
outsb
lea
das
sbb
fistl
lods
int
test
pop
jo
jmp
or
inc
stos
adc
push
lret
inc
test
stos
movsb
std
jno
aas
jbe
pop
and
in
add
inc
mov
sub
jb
and
fwait
aam
js
mov
add
test
icebp
mov
jns
rorb
sahf
out
cwtl
push
mov
lret
cli
mov
mov
rcrl
test
sarl
sbb
insb
cwtl
jbe
lcall
push
jle
sub
add
push
push
sbb
push
jo
fs
mov
out
ret
push
pusha
adc
mov
pop
mov
pop
jl
in
and
dec
xor
paddsw
jns
cs
pop
xor
inc
xor
jl
xchg
aam
cmpsl
mov
push
push
ret
adc
pop
mov
sbb
mov
sti
inc
or
cmpsb
mov
cltd
arpl
pop
les
dec
and
das
popf
pop
sbb
inc
and
stos
outsl
out
jmp
das
bound
jl
sti
mov
jecxz
cmp
cmp
pop
xor
jp
xor
adc
sbb
out
jl
arpl
pop
inc
call
fnstcw
sbb
iret
cmpsb
loope
loope
je
jne
xchg
jb
add
imul
popa
jns
and
add
into
mov
mov
shrl
out
outsl
gs
bound
mov
les
jo
fucomi
sar
push
xchg
or
dec
lahf
sub
adc
movsl
scas
pop
cmc
inc
adc
add
dec
dec
scas
pop
hlt
insb
out
jbe
popl
and
loope
push
sbb
xor
xchg
adc
push
insb
push
cmp
in
mov
add
jb
sbb
jae
add
das
les
fidivl
cmp
cmp
mov
shlb
fwait
insb
mov
xchg
add
bswap
or
ja
adc
hlt
jg
cmp
lcall
mulb
xchg
lods
cmp
call
fstpt
pcmpgtw
xchg
inc
push
adc
mov
mov
sbb
jo
stos
add
outsb
or
and
pop
jno
mov
cmp
mov
sub
mov
out
sbb
xchg
pushl
enter
jecxz
mov
je
pop
xchg
fcoms
mov
jae
lods
jne
das
cmp
movsl
pop
xlat
insl
dec
pop
adc
push
cmp
gs
scas
imul
jno
jg
mov
dec
arpl
loop
outsb
dec
or
jecxz
cmp
hlt
push
lods
shlb
mov
adc
stc
loope
dec
xor
fisubrl
adc
pop
push
mov
mov
mov
push
xchg
mov
sbb
lahf
xchg
cmp
aaa
mov
les
push
inc
or
cmpsb
xchg
push
sub
leave
nop
inc
mov
enter
sbbb
dec
xchg
jle
fiaddl
dec
lea
xor
mov
lret
lret
mov
jns
rcl
xor
inc
shlb
sahf
shlb
jns
stos
ja
bound
in
dec
ds
adc
sub
jb
dec
adc
scas
mov
xchg
cmpsb
sahf
xchg
mov
mov
das
mov
ljmp
or
fldenv
aaa
loope
sub
or
test
pushf
pop
xchg
push
pop
jno
je
adc
imul
insb
lock
in
cld
scas
dec
aam
mov
xor
or
and
sbb
pop
mov
imul
es
shl
fs
decl
loop
stc
nop
popf
cld
out
gs
cmp
test
pop
pop
pop
cmpsb
mov
addr16
dec
mov
jb
arpl
movsl
imul
sub
sbb
ret
cmp
cld
sbb
sahf
cld
pop
mov
data16
sti
inc
or
and
add
rolb
mov
xchg
fcomip
imul
jg
sahf
rclb
or
pop
out
mov
cmpl
inc
insl
out
or
cmp
cs
inc
or
inc
and
xchg
shl
leave
mov
xor
jp
or
add
fmul
mov
loop
push
sub
fimuls
std
xchg
fcoml
outsl
movsl
mov
sbb
adc
mov
test
xchg
es
jle
leave
cmp
pop
xor
cmp
mov
aaa
adc
push
dec
pusha
scas
arpl
sbb
push
popf
pushl
jp
cmp
or
outsb
loop
cwtl
loope
mov
aad
div
aas
stos
and
cltd
fstps
bnd
mov
pop
pusha
pop
or
mov
test
pop
int
jp
push
and
inc
dec
xlat
fcmove
fildll
and
cli
sub
test
adc
sbb
lea
sbb
sbb
outsb
push
aas
loope
cmpsb
lret
stc
push
fldl
lahf
or
add
gs
nop
lods
mov
in
mov
xor
sub
arpl
or
fmuls
xchg
popa
bound
xchg
icebp
mov
cmc
fisubl
push
inc
cs
push
mov
fnstcw
add
filds
cmpb
std
mov
ljmp
mov
cmp
adc
pop
clc
jge
inc
nop
scas
jecxz
and
fidivrs
dec
sub
inc
idivl
pop
cmp
pop
mov
sub
pop
cmpsb
lock
inc
dec
inc
lret
dec
cmpsl
push
ss
lcall
cmp
jl
jle
aad
jp
xchg
sub
loopne
xchg
mulb
jg
cmc
test
jecxz
leave
das
nop
ret
mov
cmp
hlt
mov
push
sub
inc
mov
push
sti
fisttpll
jns
mov
out
mov
dec
lcall
insb
fcompl
jp
sub
dec
cwtl
xor
imull
xorb
ret
xor
xor
dec
scas
movsl
add
cwtl
pop
dec
sub
aam
fwait
push
push
cmp
and
sbb
repz
dec
sub
inc
push
add
fcoms
fsubs
scas
mov
push
xchg
jnp
lea
repnz
bound
dec
rorl
push
mov
ss
loop
ljmp
xchg
lds
mov
ja
rcrl
into
jae
add
addr16
jp
outsl
lcall
cmpsb
repz
dec
scas
mov
mov
xchg
lret
inc
aas
sub
fmul
dec
ja
add
aas
push
pop
push
test
jp
cmp
outsl
outsb
js
stc
lret
adc
fisubrs
cs
andb
rol
adc
xor
test
hlt
sbb
sar
aaa
mov
fbstp
jg
push
aam
cli
xor
inc
test
int
xor
and
mov
inc
mov
mov
or
add
shll
outsb
in
cmp
cmc
pop
add
aad
jae
ror
and
or
dec
call
fildl
hlt
pop
shll
mov
jmp
leave
mov
xchg
mov
inc
sub
xor
leave
lret
es
add
sbb
andb
pop
and
add
dec
jge
cmp
sbb
xchg
div
aam
lcall
adc
xchg
cmpsb
mov
cmp
adc
sub
cmp
mov
sub
call
adc
cwtl
dec
stos
push
jnp
xchg
movsb
ret
fwait
push
scas
imul
int3
cmp
in
pop
stc
jp
add
ficoms
adc
lret
shl
jecxz
scas
xchg
adc
jne
xchg
jnp
jecxz
mov
push
cltd
mov
jmp
ljmp
pop
dec
cmp
push
nop
xor
add
mov
jb
repz
mov
dec
xchg
cmp
orb
sahf
fidivrl
dec
pop
dec
add
jne
jg
hlt
adc
push
mov
pop
mov
fildll
xor
jecxz
dec
stos
and
sbb
push
xchg
arpl
movb
sti
movsl
and
repz
je
insl
lds
out
mov
out
xorb
test
stos
mov
jne
push
jecxz
mov
push
add
mov
sbb
insb
mov
movsb
mov
sbb
cmp
popa
or
xchg
pop
dec
imul
jb
ss
xchg
dec
dec
fmul
pusha
call
inc
sbb
shll
cmp
outsl
int3
outsb
add
and
sub
mov
negb
cltd
push
call
shll
lods
outsl
call
shlb
in
push
xchg
dec
sbb
and
sbb
inc
test
negl
jl
jns
mov
int3
ret
orb
cmpsb
jle
leave
cltd
mov
cmpb
test
shrl
or
sbb
mov
sbb
adc
xchg
pop
mov
jecxz
test
mov
packssdw
cmc
incl
sbb
inc
adc
and
and
sti
mov
lods
jbe
lret
jbe
shll
call
int3
fidivs
cmp
sub
jmp
dec
jo
sbb
cs
sub
push
dec
sbb
shll
je
pop
inc
jns
jp
mov
or
stos
or
pop
jmp
jge
mov
sbb
dec
loop
xchg
jg
lds
addr16
xchg
xchg
jae
inc
xchg
xchg
push
out
pusha
fstpt
xchg
stos
lds
mov
sbb
lahf
stc
pop
notl
mov
aam
mov
test
xchg
add
mov
mov
fwait
je
popa
rclb
sub
sub
add
sbb
mov
cmp
scas
inc
sbb
movl
push
ret
test
out
pop
cmp
push
or
mov
mov
fcoml
inc
stos
adc
or
std
das
pop
lahf
inc
jp
and
pop
sub
sbb
add
push
lock
in
inc
loopne
xchg
xlat
ret
das
cmpsl
adc
add
jns
sbb
jno
xchg
aad
fisubl
mov
test
stc
pushf
push
adc
or
and
push
adc
out
pop
xchg
and
hlt
pop
ficomps
push
pushf
rcl
gs
sbb
aas
pop
jmp
mov
mov
mov
cmp
sbb
maskmovq
testl
jb
pushf
data16
imul
fisubs
int3
fstpt
push
mov
dec
aas
inc
adc
sbb
loopne
mov
stos
int
sbb
mov
ret
pop
outsb
sub
fstpt
cmp
add
rol
jmp
lods
cmp
stos
js
das
adc
adc
lods
popf
aam
fsubs
lds
lds
ret
xor
mov
inc
aam
icebp
lret
shlb
sub
xchg
adc
mov
popa
scas
sahf
jge
pop
inc
shll
out
and
jno
insb
pop
mov
jp
jbe
mov
mov
xchg
xchg
nop
cltd
sbb
inc
ja
mov
inc
sbb
loopne
sub
push
fildll
stos
mov
add
out
lret
cmovs
push
mov
dec
cwtl
sub
and
add
or
clc
in
addr16
xor
dec
rolb
and
add
push
sar
jl
pop
loope
outsb
out
insl
aaa
jo
jle
push
mov
xchg
jae
jp
mov
stos
into
mov
je
movsb
sbb
push
fs
adc
in
add
mov
roll
jae
mov
out
xchg
mov
rorb
flds
stos
xlat
mov
cmp
ljmp
mul
mov
mov
cmp
push
adc
mov
cmpsl
mov
repz
ret
xchg
aam
push
xchg
sub
pushf
xor
mov
scas
xchg
push
xor
aad
cmp
outsl
adc
jmp
add
data16
sbb
push
pop
xchg
jecxz
inc
cmpsl
cs
jns
adcb
stos
mov
xchg
push
cwtl
iret
mov
mov
pop
stos
dec
les
ja
mov
and
push
inc
mov
xchg
es
stc
cmpsl
fistl
in
test
lahf
xchg
inc
into
add
mov
loopne
and
rol
nop
or
sbb
iret
bound
xor
cmpsb
mov
adc
pop
mov
out
dec
sub
xchg
scas
sub
sbb
dec
nop
in
imul
jne
cmpb
aad
test
or
add
sub
dec
push
pop
push
loopne
push
aas
imull
loop
in
pushf
shlb
push
xor
stos
fabs
push
mov
or
adc
push
ror
jg
jp
inc
push
mov
jbe
pop
sarb
cmp
lock
addb
pop
or
push
jno
lds
mov
mov
icebp
stos
push
in
fistpl
mov
mov
sbb
mov
lret
daa
pop
imulb
inc
je
mov
add
clc
push
jno
daa
fs
pop
ja
cmpsl
pusha
insl
or
ret
pusha
cmp
in
and
xor
add
shrb
in
int3
push
push
xchg
in
popa
pop
loop
in
sti
jge
mov
sbb
add
aaa
stc
xchg
pushf
mov
sub
jb,pn
scas
aad
mov
mov
sbb
jnp
and
dec
sbb
mov
jmp
push
dec
ja
jns
push
hlt
sbb
icebp
sarb
in
in
pop
rclb
in
sbb
mov
stc
pop
enter
les
enter
testl
imull
sbb
xor
mov
add
pop
mov
int
cmp
test
fistps
aam
scas
mov
pop
sarl
sbb
adc
lock
leave
rol
rclb
cs
cmp
mov
jae
inc
jbe
pop
shlb
mov
sarl
lcall
pop
bound
out
cmp
xor
fstpl
jb
mov
mov
enter
repnz
cmp
dec
clc
rcrl
cmpsb
add
mov
sbb
movzwl
add
sub
mov
mov
enter
add
mov
enter
rcr
add
femms
inc
hlt
ret
sub
mov
stc
subb
ja
das
add
loop
repz
pop
push
inc
mov
jg
pop
out
call
vpcmpgtb
lods
repz
jne
outsl
pop
decb
push
or
test
or
dec
movsl
mov
aad
inc
xor
jg
xchg
and
or
test
xor
shufps
push
ds
movsb
dec
decb
and
in
mov
mov
loope
scas
nop
adc
inc
push
lods
or
stos
mov
call
sbb
adc
sub
cmp
inc
pusha
stc
test
subl
shrl
in
or
fs
scas
inc
shlb
mov
mov
gs
fldt
xchg
or
lock
test
insb
mov
fdiv
imul
cmpsl
mov
push
push
mov
jg
orb
push
aam
mov
fs
lret
push
out
mov
loop
movsl
icebp
push
rcl
sub
test
inc
stos
and
sbb
ret
rorb
xchg
rorl
inc
mov
rcrl
icebp
scas
out
pop
xor
sbb
call
int3
cmc
sub
jo
adc
jp
gs
imul
xor
in
jecxz
sbb
mov
in
cmp
xor
pop
test
das
and
stos
ficoms
xchg
xchg
push
and
outsl
insl
jl
int
mov
out
aam
out
imul
hlt
push
xchg
pop
sbb
or
fsubr
add
dec
mov
mov
xchg
arpl
ja
mov
pop
enter
inc
dec
popa
push
unpcklps
inc
ljmp
jge
fcomps
frstor
ret
or
inc
pop
mov
arpl
xchg
pop
test
cmp
xchg
sub
push
popf
inc
pop
inc
mov
dec
out
cmp
stos
popf
insl
adc
xchg
movsb
mov
mov
adc
mov
adc
or
adc
stos
aam
repz
mov
or
dec
mov
test
cmpsl
pop
outsl
jns
push
pop
popf
roll
mov
icebp
xchg
adc
outsb
sbb
jge
push
aad
xchg
mov
add
inc
mov
movsb
xor
mov
aaa
or
call
push
add
lret
mov
into
int
das
stos
jne
or
xchg
xchg
shll
sbb
inc
jp
stc
dec
arpl
lcall
outsl
lcall
jb
and
js
xchg
lods
fisubrl
push
loopne
mov
rorb
xchg
in
push
ja
scas
divb
add
std
enter
jle
sub
xchg
jp
sub
jbe
test
pop
pushf
sti
cs
out
fnstcw
xchg
mov
add
jae
cltd
dec
mov
arpl
pop
pusha
xor
ret
xchg
imul
jne
mov
subl
xor
sbb
dec
and
mov
pop
push
cmp
jp
mov
jg
ja
sti
xor
les
cmp
es
outsb
lds
cmp
mov
cmc
repnz
in
sbb
sub
mov
cmc
jo
arpl
mov
pushf
push
and
push
sbb
mov
inc
xchg
pop
add
push
repnz
repz
jg
mov
lret
adc
add
mov
sub
pushf
push
das
ss
sbb
jnp
jns
popl
pop
insb
push
js
sbb
add
test
cmp
jecxz
andb
leave
add
pop
mov
jl
in
jg
cmp
jl
push
cwtl
sti
mov
push
rcrb
arpl
int
or
pop
xor
sub
jecxz
dec
in
mov
push
inc
lret
out
in
cltd
sub
lock
dec
out
pop
lret
aam
stos
or
out
cmc
push
das
add
aas
jo
xchg
xor
mov
jle
mov
jp
and
pop
sub
imul
push
imul
sbb
imul
cmpb
pop
addr16
loope
xchg
cmp
xor
pop
sbb
sbb
push
xchg
clc
adc
dec
add
je
imul
pop
adcl
shlb
sbb
sub
sbb
scas
leave
jl,pn
sub
jbe
xchg
ljmp
imul
outsl
mov
stos
cmp
cmpsb
gs
mov
stos
mov
lret
rol
cmp
lock
outsl
or
jns
test
hlt
addb
into
lds
test
nop
jno
sbb
lds
mov
lcall
cmp
add
xchg
jo
repz
cmp
xor
xor
dec
bnd
sub
stos
outsb
lret
add
outsl
ljmp
stos
sub
das
push
xchg
push
js
inc
into
pushf
cmp
lahf
call
pop
add
mov
cwtl
mov
sub
dec
mov
lret
lret
sbb
sahf
dec
mov
mov
dec
xlat
pop
andl
shrb
adc
add
adc
sbb
shl
sub
popa
out
push
add
cmp
cwtl
ja
into
out
xchg
inc
sub
mov
repnz
test
addb
adc
mov
mov
jp
pop
dec
fcomps
aad
lods
lock
jae
dec
in
mov
stc
aaa
ljmp
adc
add
push
mov
xchg
ja
sub
xor
jns
popf
stos
push
into
je
and
sub
sub
adcb
add
inc
adc
inc
das
inc
out
sbb
arpl
inc
out
dec
inc
test
fidivl
mov
cmpsl
rclb
sub
subb
into
mov
pop
jne
mov
pushf
sahf
lds
cli
jp
push
mov
mov
mov
inc
push
mov
imul
mov
and
imul
mov
fs
or
xchg
jmp
icebp
ljmp
dec
mov
ljmp
xchg
pusha
add
jge
sahf
push
pop
xchg
lds
cwtl
xor
mov
mov
aad
mov
inc
es
push
mov
adc
ljmp
or
jo
mov
enter
inc
nop
push
out
in
repnz
add
push
or
sbb
adc
mov
popf
jl
mov
push
xchg
mov
jo
mov
dec
nop
fdivs
mov
icebp
aaa
jecxz
add
loopne
es
jo
or
adc
loopne
out
hlt
shll
lods
adc
roll
jle
mov
lea
cmp
xchg
cli
jle
or
inc
or
aam
jge
jl
and
and
pop
xchg
mov
sub
out
pop
or
scas
adc
test
cmp
int
cmp
lret
movsb
and
outsb
mov
cmpsl
sub
xorb
je
adc
add
cwtl
daa
out
mov
loop
xlat
xchg
push
sub
add
dec
loope
cmpsl
adc
cmpsb
insl
lods
cmp
xchg
gs
cmp
mov
add
xchg
lds
es
nop
insl
leave
adc
adc
and
cmpsl
insb
mov
andb
push
dec
movsb
rclb
bswap
clc
addl
imul
push
mov
mov
jns
lods
sbb
fwait
adc
imul
or
sbb
and
ret
cld
aad
mov
mov
loop
push
out
ds
mov
mov
add
xchg
int3
aad
fsub
and
fldt
sbb
mov
mov
and
cs
ret
sahf
lds
push
cmpsl
lock
pop
fwait
jge
mov
test
rcll
lock
in
mov
xlat
mov
clc
xchg
incb
xchg
cmp
movsb
mov
xlat
sub
sbb
cmp
pop
mov
mov
or
outsb
mov
jmp
dec
xchg
add
jl
iret
lcall
int3
data16
mov
or
push
cwtl
add
out
mov
mov
inc
pop
jg
and
and
icebp
scas
cmc
xor
rolb
mov
cmp
into
jae
add
ret
mov
arpl
jl
pop
mov
mov
mov
sbb
fstps
ret
leave
pusha
icebp
imul
pop
jnp
mov
inc
jne
xchg
loopne
push
sub
push
movsb
das
xchg
lock
dec
frstor
inc
jge
das
cmp
jge
insl
cli
push
and
cmp
movsb
push
mov
int3
push
sbb
inc
sub
add
enter
and
cmpsl
push
cs
pop
jae
dec
dec
jns
dec
pop
pop
xchg
mov
sti
or
add
dec
push
and
or
popf
mov
xchg
adc
pop
ret
arpl
loopne
mov
lret
rcll
push
pop
loope
jg
or
lds
jne
in
mov
repnz
jae
hlt
push
addr16
push
pusha
xchg
iret
push
inc
push
cmc
push
popf
cs
cmp
dec
addr16
lcall
stc
fstpt
xor
mov
mov
cli
cs
aad
push
into
push
mov
arpl
lds
in
xchg
pop
xchg
popf
sti
out
int3
xor
int3
into
mov
lods
aaa
mov
lret
mov
mov
add
push
sbb
inc
rcrl
popf
les
add
or
jge
fwait
test
rorb
cwtl
int
shrl
add
sbb
lods
test
add
scas
rolb
cwtl
shlb
repz
mov
pop
dec
or
adc
lock
lea
adc
dec
repz
xchg
adc
out
or
pop
insl
push
pop
pusha
insb
fs
inc
adc
fldt
xor
ds
lcall
inc
push
dec
pop
mov
push
or
mov
jge
sbb
sbbb
arpl
push
mov
out
push
xor
mov
mov
out
stos
std
push
jnp
push
aam
and
jbe
mov
or
mov
lods
or
gs
jbe
jecxz
in
xchg
push
lea
push
jno
ljmp
stos
lods
inc
mov
rcrb
fucomi
lock
xchg
mov
add
insb
fwait
adc
cmp
divb
xchg
xor
stos
pop
scas
dec
xor
adcl
pop
mov
or
imul
out
push
int
inc
lcall
cwtl
ljmp
sbb
enter
mov
sbb
and
mov
jns
scas
rclb
xchg
adc
mov
xchg
xlat
add
in
movsb
xchg
push
ja
nop
pop
ss
repz
mov
out
and
cmp
pop
xchg
js
ret
scas
mov
mov
mov
jno
pcmpgtb
push
adcb
jecxz
sub
pop
mov
call
std
fidivrl
mov
pop
pop
cmp
jge
push
call
jae
jecxz
ret
sub
and
adc
push
inc
mov
rcr
push
pop
or
inc
xor
push
psubsw
push
mov
in
jne
std
mov
call
cwtl
cltd
testb
cmp
push
pop
je
dec
push
jl
cwtl
scas
lock
dec
jge
mov
cmpsb
nop
or
addl
sbb
std
das
xchg
pop
dec
push
daa
imul
insl
mov
imul
or
mov
faddp
ret
cmp
pop
jns
adcb
lock
push
pop
ljmp
cmp
out
shr
adc
inc
inc
in
dec
aam
out
sahf
mov
xchg
insw
jmp
inc
or
les
jg
loopne
adc
aad
push
push
mov
jle
cmp
leave
ret
shlb
cs
movsl
lret
rsm
adc
dec
pop
jle
gs
mov
jo
in
insb
pushf
or
and
stos
aam
mov
into
pop
push
inc
mov
lcall
xor
and
adc
pop
adc
aaa
pushf
xchg
lock
leave
inc
ret
loope
sarb
push
mov
inc
jecxz
lds
test
adc
inc
mov
in
aad
mov
push
ja
adc
push
lock
int
dec
out
stos
sar
and
cld
mov
mov
and
fbstp
push
and
test
loop
test
dec
imul
or
pop
xor
jg
mov
push
jg
mov
dec
add
shl
xor
cmpsl
sub
rcrl
cwtl
inc
pop
jnp
loope
push
adcb
fsubs
lea
mov
add
push
sbb
in
int3
popf
inc
cmpb
mov
mov
out
pop
fs
gs
scas
cmpsl
cli
adc
mov
jns
fstpt
sahf
ljmp
inc
jge
pop
not
and
dec
iret
or
push
push
iret
leave
pusha
dec
hlt
mov
pop
xchg
mov
jmp
test
mov
pop
adc
mov
fisttps
xor
xchg
sbb
std
pop
rsqrtps
xor
sub
xor
dec
adc
mov
adc
mov
sbb
push
lcall
in
inc
jb
sar
ja
dec
stos
out
nop
leave
lods
add
add
out
fadd
jp
mov
mov
mov
lret
mov
dec
int
jns
mov
lods
push
adc
test
fdivrl
xor
outsb
xor
mov
xchg
outsl
sti
int
pop
push
mov
movsl
insb
rcll
fadd
mov
imul
jae
cmp
fimuls
and
or
mov
jmp
cmc
test
into
outsl
cmp
in
pop
fdivrs
insb
inc
jmp
cmpsb
jnp
pusha
cmp
push
pop
add
cwtl
pop
mov
fisubrs
das
or
pop
mov
or
repnz
scas
mov
test
enter
jb
xlat
mov
call
popa
and
mov
lods
sahf
testl
push
movsb
xchg
inc
fsubrs
insb
adc
test
cmp
xor
dec
push
push
scas
lea
outsl
imul
mov
arpl
dec
xor
and
xchg
sub
cmp
xchg
add
loopne
addr16
addr16
mov
in
push
ss
aam
dec
xchg
mov
call
sub
xor
mov
sbbb
mov
lret
jle
subb
pushf
mov
push
cs
aas
xlat
mov
add
cmp
mov
loope
xor
push
fldenv
sbb
push
seta
insl
fmull
adc
test
mov
xchg
movsb
push
dec
mov
pop
and
mull
jno
xchg
and
inc
ficoml
mov
xor
push
push
cmp
sub
mov
adc
popa
adc
lahf
cmc
adc
or
jl
mov
lret
test
aaa
adc
stos
and
push
orb
lahf
push
fstpl
cmc
sar
dec
push
divb
sub
add
sub
int3
sbb
xchg
xor
lods
fidivrl
in
shlb
call
int
in
xchg
test
idivb
sub
inc
mov
lret
lcall
pop
mov
outsl
sub
sti
pop
out
or
mov
lret
je
pop
adc
popf
leave
adc
cmp
jne
mul
popf
js
push
xor
data16
fcomps
fidivrl
pop
in
fwait
jnp
jp
push
lret
or
and
push
mov
rorl
ret
into
rorl
push
adc
mov
rcr
lret
fists
clc
fwait
xor
push
jo
inc
iret
sbb
cmp
or
divb
mov
adc
sub
mov
sarl
rorb
xor
add
mov
out
cmpsl
xchg
xchg
aaa
ljmp
ljmp
lret
or
inc
inc
stc
andb
sbb
xchg
pcmpeqd
jge
mov
dec
jnp
add
cmp
stc
push
rcrl
sbb
jae
inc
call
mov
popf
aas
fmul
int3
xor
sbb
shl
sub
mov
adc
in
mov
add
mov
outsb
fldcw
add
sbb
fwait
push
stos
jnp
jnp
mov
test
fimull
adc
mov
and
les
mov
sbb
inc
shll
mov
iret
lret
add
push
adc
mov
fisubl
call
mov
data16
push
lock
mov
cmpsl
jb
filds
adc
pop
scas
repnz
mov
xor
dec
mov
pop
ret
mov
mov
xchg
or
cltd
mov
insl
in
push
jmp
push
outsb
or
lods
jmp
push
dec
cwtl
xchg
xlat
jg
inc
ljmp
xor
push
incb
inc
push
sahf
cmp
loopne
jg
dec
sbb
add
pop
gs
xchg
cwtl
shrb
mov
jo
jmp
adcb
pop
loope
xchg
or
push
loopne
jnp
call
or
adc
cld
outsl
loope
mov
mov
loope
xor
aaa
inc
test
and
test
inc
movsl
jne
dec
pusha
jmp
and
sbb
dec
sbb
dec
mov
test
lret
scas
or
in
adcl
mov
pop
lods
loope
cmpsl
andl
es
lret
fstpl
outsb
jne
hlt
xor
adc
loop
fcomi
inc
xor
jle
lds
loop
test
jbe
jb
dec
inc
mov
push
test
push
into
imul
and
icebp
imul
and
pop
mov
aaa
cmp
xor
sub
jp
add
mov
jg
sti
push
addr16
and
aas
movsb
popa
pop
fcom
ds
cmp
pop
mov
jae
push
outsb
fcomps
cmp
ret
lahf
movsl
repnz
leave
dec
push
push
testl
cmp
mov
xchg
or
scas
xchg
ret
cmc
inc
test
stos
adc
sarl
dec
pop
mov
test
std
lahf
fcmovb
popa
aaa
clc
loop
call
add
scas
movsb
fidivrl
ret
arpl
popa
jno
dec
cmpsl
sbb
addb
inc
or
dec
or
xor
push
sbb
imul
mov
cmc
hlt
adc
inc
push
dec
les
mov
sbb
mov
in
push
roll
idivl
cmpsb
or
and
pop
jge
xchg
cmp
mov
stc
sbb
mov
sbb
pop
push
stc
dec
add
jge
mov
jno
jo
popf
fsubs
pop
fnstsw
sub
sbb
in
jecxz
sub
cmp
nop
cmc
loop
rol
clc
fldl
ret
add
pop
aas
lods
push
xchg
adc
jg
repnz
jg
xchg
jl
int3
mov
sahf
outsb
icebp
mov
popf
orb
push
jnp
xlat
out
test
xor
aam
mov
lret
rcr
repz
sub
and
pop
in
std
les
aam
lret
sbb
add
fistps
and
outsb
add
mov
fsubs
lods
in
add
jecxz
mov
aam
leave
push
mov
add
loop
xchg
clc
iret
xchg
push
mov
cmp
inc
sbb
lock
push
dec
aas
xchg
repz
shrl
push
mov
stc
cli
push
xchg
sahf
in
in
sub
repz
xchg
dec
xlat
repnz
lret
pop
xor
xchg
push
sbb
mov
add
and
pcmpgtw
mov
adc
sub
rcrl
cmp
test
dec
test
inc
in
mov
jae
xor
outsl
sbb
hlt
mov
cmp
popl
out
loop
clc
xor
mov
xchg
loope
jle
imul
dec
cld
cltd
add
enter
lods
aaa
dec
adc
mov
adc
adc
pop
imul
aaa
jl
cwtl
lods
cli
jmp
aaa
ss
sbb
inc
inc
mov
sbb
mov
xor
or
inc
jae
push
int3
aas
lods
lcall
or
ret
lcall
movsl
jmp
lods
adc
push
mov
je
and
addr16
enter
sub
ss
sbbb
into
loopne
lods
clc
cmc
mov
test
push
fucomi
xchg
outsb
adc
pusha
sub
push
ss
cmpsl
pop
clc
add
dec
dec
inc
addr16
sbbb
cmpb
jnp
fsub
push
xchg
pop
mov
xor
sti
mov
dec
mov
lods
stc
mov
iret
loopne
jge
or
xchg
es
test
pop
in
lock
pop
xchg
imul
imul
loope
into
mov
roll
leave
and
inc
and
lret
movsb
sbb
test
push
jne
das
lea
sbb
mov
imul
lret
cmpsb
pop
dec
jno
add
enter
lods
popf
shrb
das
in
and
xor
add
lods
xchg
fimull
jle
cmc
mov
push
mov
out
test
push
adc
sti
loope
aas
push
divl
xorl
stc
test
loop
and
cmp
xor
addr16
cmp
jae
cmp
gs
inc
packssdw
call
lret
mov
test
rclb
bound
xchg
enter
jmp
sub
iret
pusha
popf
shl
add
jnp
sbb
ds
push
or
pop
out
inc
xchg
ja
xchg
leave
jmp
inc
fcomps
dec
jg
test
mov
adc
add
enter
hlt
jns
test
lea
jmp
leave
xor
cmp
xor
jmp
in
fdivrl
outsl
clc
rcrb
and
mov
push
lea
jp
imulb
dec
cli
jle
hlt
push
cmp
rcl
rclb
push
and
xor
cwtl
minps
pop
mov
shll
mov
or
jae
fstl
xor
addr16
xchg
dec
clc
adc
test
pop
jp
test
mov
loop
add
sub
dec
mov
xor
lea
dec
imulb
sbb
out
ret
or
push
pop
inc
out
cltd
addl
or
adc
sbb
dec
mov
aam
aam
jo
mov
cmp
ficompl
pusha
cmp
jne
dec
sbb
test
bound
sub
mov
aaa
jge
cmpsl
pop
repz
shlb
xchg
adc
aad
insb
xlat
add
lret
push
jne
lahf
push
push
push
fwait
aad
out
clc
popa
inc
xchg
xlat
ljmp
dec
and
pop
push
mov
test
jg
daa
outsl
push
or
lds
jge
test
in
or
pop
push
pop
test
mov
xchg
shll
loopne
aas
sub
repnz
and
lods
imull
stos
jg,pt
mov
cmp
and
stos
leave
mov
test
push
jne
sbb
inc
mov
cmp
jecxz
xchg
test
rcll
push
orl
fs
and
mov
mov
lock
aaa
dec
loope
dec
cmp
ds
sbb
mov
rcr
imul
inc
ja
jae
rcrb
add
sub
movsl
stc
pop
adc
pop
movsl
jb
iret
cwtl
addr16
cmpb
sbb
jnp
inc
push
mov
fcomi
int
scas
in
insb
jnp
imul
jo
dec
sahf
in
dec
cmp
lret
mov
and
loope
adc
push
cmpsb
cs
dec
hlt
push
pusha
xor
loopne
push
jne
add
xor
push
push
or
mov
cmp
sbb
test
cmp
aad
mov
iret
mov
rcl
out
mov
sti
dec
or
push
dec
push
test
mov
cmp
shlb
into
push
stc
aas
or
daa
adcb
adcb
aam
pop
dec
cmpsb
sbb
fwait
push
mov
fbld
lcall
dec
add
cltd
or
movsb
inc
inc
mov
aam
mov
test
test
fidivrl
inc
sub
popf
mov
sub
dec
adc
movsb
inc
add
cmp
in
push
mov
push
lods
hlt
sbb
aad
repz
and
push
int
cmp
xor
ljmp
notl
or
je
scas
out
pop
in
stc
pop
sbb
cmp
cmp
cmpsl
mov
popf
hlt
mov
add
sub
cltd
stc
cmp
jecxz
dec
sub
mov
mov
ss
sbb
pop
mov
inc
add
test
andb
mov
aas
lock
add
loop
push
icebp
mov
pop
or
xorl
mov
faddp
out
jg
dec
sbb
test
jmp
push
sti
or
arpl
add
imul
stos
std
mov
cltd
and
outsl
adc
ja
rorb
bound
aad
es
fiaddl
movsl
and
add
mov
mov
xor
out
pop
out
mov
leave
pop
loope
bound
inc
mov
test
push
imul
xchg
lcall
cmp
pop
lods
xchg
stc
push
xchg
pusha
push
mov
dec
cmp
jo,pt
push
cmpsl
fsubs
ljmp
cmp
push
rolb
fcomps
test
mov
or
ds
mul
jge
and
xor
or
add
mov
rclb
orb
sub
int3
and
test
jg
push
and
test
ret
das
dec
movsb
or
cmp
loop
inc
push
xor
inc
and
xchg
sbb
aad
lods
dec
int3
jge
fwait
xchg
mov
cmpsl
fbstp
inc
xchg
mov
mov
mov
loopne
lret
dec
pop
xchg
out
cmp
push
adc
cmpsb
mov
mov
jne
push
movsb
popf
sub
add
and
sbb
movsb
std
cmp
adc
dec
movsl
xchg
mov
mov
dec
mov
adc
repnz
mov
xchg
adc
imul
adc
xor
ja
dec
fldenv
dec
xor
pop
clc
call
jno
scas
mov
clc
cmp
jge
jle
xor
push
adc
add
mov
or
gs
cmpsl
adcl
mov
cmc
dec
aaa
out
aas
mov
inc
and
test
cmpsl
or
pop
fidivl
jb
dec
dec
lea
scas
or
cwtl
push
pop
sahf
dec
lds
nop
xor
cli
jo
mulb
sti
test
rorl
push
sarl
aad
jae
test
out
cli
mov
mov
popa
cmp
adc
in
sbb
dec
sub
jg
push
push
cmp
ret
testl
nop
xchg
imul
testl
leave
outsl
test
and
or
insb
mov
sub
xchg
int
movl
xchg
out
loop
fistpll
fs
jno
stc
mov
imul
inc
and
dec
xchg
lock
repz
outsb
push
dec
jae
leave
repnz
or
aad
nopl
mov
imulb
push
ret
jg
add
or
dec
pop
xchg
ror
add
repnz
xchg
sbb
stos
fisttps
lret
inc
mov
in
pop
xorb
push
enter
pusha
dec
push
push
xor
pcmpgtd
xor
mov
pop
cmpsb
xchg
sbb
cmp
xchg
adc
mov
ret
or
sub
insl
mov
push
mov
clc
inc
nop
xor
out
rcrl
test
xchg
lahf
call
cmpsb
sbb
jne
and
outsb
popa
xchg
test
sub
pop
jnp
mov
push
jge
cmp
sub
clc
cmp
and
pop
xor
in
inc
scas
sti
inc
pop
mov
xchg
fwait
in
movsl
outsl
cmpl
xchg
test
ds
and
xchg
sbb
jge
mov
inc
sbb
enter
fisubrs
xor
mov
xchg
lock
mov
mov
pop
mov
out
aaa
xchg
cmpsb
add
jae
mov
dec
jns
loopne
shrb
loopne
mov
dec
ret
sbb
jne
test
mov
out
and
cmpl
jnp
shlb
test
cmc
jno
pusha
inc
loop
or
mov
xchg
stos
adcl
scas
or
sbb
mov
and
sub
cli
repz
loope
cmp
daa
jge
and
out
jecxz
sub
pop
mov
jmp
cmp
in
inc
imul
data16
sub
ret
les
sbb
cs
push
iret
mov
outsb
jmp
shlb
lret
mov
sbb
inc
jmp
pop
pop
out
sbb
outsl
push
out
jnp
and
loopne
jp
xor
lret
jmp
stos
jmp
imul
mov
ror
int3
pop
sub
push
cmp
int3
mov
sbb
ret
push
rcrb
arpl
std
inc
loop
pop
iret
jbe
dec
mov
cmp
outsl
leave
sub
jno
fcom
lret
mov
inc
out
bound
push
cmovns
nop
out
mov
sbb
dec
mov
jne
jg
push
test
add
shrb
xor
popf
sbb
leave
cld
mov
test
mov
mov
cmpsl
mov
cltd
pushf
stos
pop
jp
sbb
popa
and
scas
fs
cmpsl
mov
and
repnz
sub
cs
pop
xchg
or
lcall
in
dec
dec
lock
and
orl
mov
push
pop
xchg
jne
sbb
movb
andb
add
pop
mov
leave
cs
mov
and
sub
jae
je
xor
shr
leave
and
jge
push
xchg
mov
mov
add
add
fnsave
clc
mov
cs
xchg
test
mov
nop
mov
lahf
out
mov
mov
mov
or
test
xor
xor
sub
repz
adc
add
fimuls
add
mov
lcall
sub
mul
outsb
fnstcw
sbb
pop
lds
and
in
icebp
scas
add
cmp
mov
sbb
xorb
sbb
push
ror
rcrl
push
out
dec
xor
not
add
ljmp
xor
into
lock
leave
inc
test
cmp
mov
dec
neg
pushf
mov
xchg
add
cmp
cmp
xor
pop
stc
dec
mov
jl
incb
js
cltd
cmp
push
les
jne
fists
into
pop
mov
in
cvttps2pi
lret
out
pop
movsl
add
divl
push
sbb
mov
mov
decl
addb
xchg
and
mov
movsl
mov
sub
xor
mov
pushf
cmp
mov
or
sbb
pop
call
push
daa
inc
xchg
adc
mov
clc
cmp
mov
ljmp
lahf
add
test
fiaddl
mov
fs
dec
jge
push
aaa
pop
maskmovq
out
pop
int
pop
test
ljmp
imul
and
rcrl
sbb
hlt
xchg
xchg
insb
jp
cwtl
mov
out
mov
xchg
pop
sbb
xor
add
or
sub
inc
mov
adc
rcl
xor
pop
loopne
vmwrite
jle
out
mov
sbb
inc
and
xchg
mov
imul
xchg
and
jl
mov
adc
mov
add
cmp
sbb
lret
push
lock
sub
cmp
shr
rorl
or
add
dec
and
push
xchg
fwait
stc
mov
outsb
push
call
nop
sub
mov
dec
pop
and
or
lcall
lock
sti
jae
mov
sbb
sahf
test
jno
push
dec
xchg
in
inc
or
adc
mov
dec
sar
cwtl
popf
xchg
mov
dec
add
in
dec
cmc
fidivrs
and
mov
mov
sbb
xor
xchg
or
jmp
sahf
xchg
in
adc
stos
sbb
aad
pop
sbb
int
out
mov
pop
mov
adc
adc
jne
mov
divb
mov
dec
push
jl
xchg
addr16
aam
add
jl
adc
lds
repz
sub
in
dec
inc
ljmp
test
bound
mov
outsb
add
push
enter
mov
jg
leave
pop
and
div
jae
enter
pop
cmpsb
sub
das
and
push
push
div
lds
adc
sahf
rcrb
fmul
ds
rolb
test
mov
in
adcb
mov
xor
outsb
push
test
adc
ret
inc
inc
mov
mov
cmp
lock
mov
adc
lret
adc
ja
out
arpl
adc
loop
ja
shlb
add
sub
cmpb
mov
int
xchg
mov
xchg
sbb
and
lods
cmp
cmp
dec
xor
lret
pop
jnp
lods
fadd
stc
stos
fcompl
adc
movsb
pop
fstps
ret
fcmovnbe
add
jl
dec
loopne
cmp
sbb
adc
mov
and
mov
popf
mov
add
ror
fisttps
mov
mov
sti
scas
hlt
push
adc
cld
or
jge
pop
gs
lcall
out
xor
adc
in
scas
test
add
sub
jle
outsb
movsb
arpl
aad
pop
xor
pop
sub
sbb
popf
fcompl
mov
ret
into
adc
hlt
mov
lcall
jecxz
mov
and
or
mov
stos
je
mov
dec
pushf
add
into
aaa
add
movsb
ror
mov
cld
and
inc
lret
adc
mov
cmpsb
ss
xor
add
push
cmp
and
xor
jae
pop
cmp
lods
ja
pop
imul
lods
sub
fs
dec
jl
cs
loop
add
and
push
ja
or
out
jne
mov
cmp
mov
jp
in
inc
mov
jne
push
dec
jle
xor
jle
pusha
testl
sub
mov
or
inc
ss
xchg
cli
movsb
and
cmp
int
and
mov
fs
xchg
add
inc
or
pop
xor
pop
push
push
imul
enter
xchg
push
ficompl
and
mov
mov
cltd
sbb
jo
nop
mov
cmpsb
lahf
push
jmp
xchg
sahf
xchg
movsb
nop
in
mov
into
mov
in
ret
lea
dec
jnp
notb
rorb
les
in
es
mov
fildl
mov
jae
push
cmp
mov
mov
movl
int3
ret
pop
frstor
dec
ret
jbe
xchg
jo
call
jl
faddl
shlb
outsb
shlb
cld
jecxz
add
hlt
daa
adc
pop
push
sbb
adc
add
outsl
xchg
fs
mov
nop
sahf
stos
das
ds
jg
test
repnz
jmp
mov
subl
jo
xchg
inc
xchg
mov
xchg
jp
imul
sbb
push
pop
cmc
out
xchg
aad
push
xchg
inc
or
sub
xchg
add
mulb
mov
popf
push
jp
inc
loopne
jg
mov
fstps
mov
aas
nop
adc
cli
cmp
xor
repnz
pushf
cmp
or
movsl
jecxz
lret
and
cmp
push
mov
stc
cmp
mov
outsb
arpl
adc
sbb
sbb
and
mov
inc
mov
lret
mov
jae
xchg
mov
outsl
inc
int
iret
mov
shrb
mov
pop
insb
push
pop
inc
xchg
rcrb
fdivs
pop
add
xor
scas
fsubr
push
movsl
add
out
test
pop
fsubr
aad
mov
popf
sub
lock
aaa
ljmp
or
jne
out
push
xchg
nop
xorl
dec
mov
aad
jl
rcll
in
pusha
xchg
test
iret
xchg
pop
es
mov
dec
cmp
aaa
or
popa
pop
cmp
push
gs
out
sti
or
adc
xchg
pop
loopne
jp
fsubl
sub
push
push
push
lcall
xchg
lods
jge
add
popf
icebp
xlat
add
mov
xlat
loope
and
stos
pop
insb
out
test
jae
imul
cwtl
jo
lods
xor
pop
fs
lods
adc
imul
sub
std
fs
add
add
psubd
retw
test
push
dec
xchg
rcll
xchg
xor
aad
and
lods
or
ficoms
out
orb
cmp
inc
xor
ss
jl
or
in
int3
xchg
arpl
pop
jb
jb
pushf
or
in
rolb
fsubrs
data16
sarb
cmp
mov
mov
enter
cs
xchg
sbb
pop
sbb
adc
out
data16
lahf
sbb
cmp
lock
std
lahf
xor
mov
push
inc
jmp
add
mov
stc
ss
dec
lock
pop
imul
mov
pop
fnclex
fwait
adc
xchg
pop
mov
cmp
outsb
jg
dec
dec
mov
inc
bound
cmp
cld
in
pop
mov
mov
xchg
dec
int3
cwtl
ja
cld
xor
mov
adc
mov
jb
fwait
pop
in
shl
sti
mov
loope
subl
jnp
sub
jle
pushf
pop
stos
mov
inc
movsl
enter
lahf
pop
cltd
int3
inc
fdivr
dec
add
cmp
stc
adc
add
mov
push
xchg
mov
jne
dec
mov
lret
pop
fdivrs
stc
or
and
cmpsb
xor
stos
outsl
jbe
jne
pop
push
lret
inc
push
insb
add
jl
out
js
incl
xchg
push
cld
pusha
andl
inc
fistpl
sub
ud2
push
call
or
dec
dec
je
rcrl
add
xchg
popa
sub
dec
sbb
mov
enter
mov
popa
insb
xchg
sbb
out
jg
in
inc
or
rorl
scas
pop
fcoms
and
dec
scas
outsl
out
cld
dec
mov
jbe
dec
pop
outsb
sti
stos
inc
mov
jp
jge
xchg
xchg
xchg
mov
mov
shll
mov
clc
movsl
and
add
mov
lods
xor
xchg
xchg
js
lods
daa
arpl
lds
pop
es
fldcw
jb
dec
inc
push
imul
mov
lcall
mov
les
sti
cltd
mov
jecxz
add
shlb
adc
in
add
or
dec
sbb
roll
fimull
push
or
sbb
jl
mov
repnz
enter
es
outsl
jne
in
in
je
push
sub
cmpsb
sbb
adc
jmp
mov
shll
mov
ljmp
imul
mov
ss
mov
jb
and
or
jb
in
xchg
rcrl
pop
pushf
add
inc
add
cmpsl
pop
or
lahf
fs
vrsqrt14pd
jecxz
jecxz
pop
jl
mov
and
mov
fsts
shlb
xchg
inc
jg
cmc
jbe
addl
inc
ja
add
sbb
inc
push
sub
insb
addr16
or
dec
daa
sbb
pop
icebp
and
mov
leave
or
daa
push
icebp
or
or
pop
popf
les
mov
ss
add
repz
sarl
popf
nop
lret
fbld
scas
out
dec
push
shr
loopne
aam
sbb
icebp
flds
mov
mov
lcall
roll
mov
fmuls
out
push
cmp
sbb
cmpsl
cwtl
pop
clc
xor
or
xchg
lods
and
and
inc
aam
call
mov
pusha
xor
mov
rol
xchg
stos
test
mov
mov
insb
jbe
aad
xor
adc
test
mov
pop
fs
outsl
xchg
mov
xchg
fistpl
sbb
int3
movsl
pusha
addr16
repz
out
cmp
sbb
xor
daa
or
mov
popf
jmp
ds
cli
sarl
lock
pop
adc
shr
and
cltd
xchg
xor
subl
sbb
adc
mov
mov
data16
out
icebp
push
in
inc
dec
dec
mov
sahf
jnp
push
xor
and
mov
add
lods
stos
xchg
pop
loopne
aas
cld
or
aad
jnp
ds
rcr
lds
inc
pop
fdivrs
mov
stc
xchg
test
dec
fisttpl
jb
adc
ljmp
pop
cwtl
int
in
in
mov
sub
jge
mov
sub
out
xor
mov
sbb
pop
in
adc
outsl
jecxz
sub
lods
xorl
negb
out
rcrb
popf
sbb
adc
sbb
xlat
add
sub
xor
les
std
dec
in
cli
dec
and
jno
mov
mov
mov
lret
xchg
sub
mov
pop
push
subb
enter
scas
push
or
mov
xchg
push
iret
rclb
lret
sub
test
je
test
jmp
fcompl
add
cmp
movl
jne
jne
das
jle
cmpsb
imul
cli
stos
mov
inc
push
pop
xchg
add
xchg
rolb
gs
test
test
adc
cmc
xlat
mov
incl
shlb
loopne
pop
mov
popa
sub
mov
out
mov
cmp
or
stos
dec
rorb
mov
in
jo
jmp
dec
xchg
xor
xor
pop
jno
mov
mov
adc
mov
jno
push
push
jmp
mov
add
inc
addr16
addr16
test
mov
add
mov
pop
and
xchg
inc
or
scas
movsb
scas
or
popl
stos
ret
add
aad
lds
sar
cmpsl
cmc
add
shl
jp
and
jnp
mov
or
xchg
in
outsb
inc
xor
pop
cmp
mov
dec
sbb
push
jp
xchg
pushf
cmp
jg
jno
aam
cmp
xchg
xchg
stos
out
mov
mov
xchg
clc
loope
leave
jle
pop
lahf
aaa
fwait
lret
stc
ss
test
fisubrs
out
and
sarb
insl
inc
xchg
ds
jmp
jge
rorl
ret
aad
sbb
add
cmc
popf
lods
outsb
mov
mov
jg
xchg
dec
adc
jo
push
test
sbb
orb
xchg
sbb
jo
jns
jge
jecxz
or
dec
movsb
flds
push
mov
mov
test
pop
inc
dec
sub
add
adc
sbb
pop
pop
push
mov
scas
mov
popf
rcr
adc
dec
icebp
lret
add
lahf
inc
clc
push
mov
push
add
scas
cmp
jne
dec
pop
ljmp
or
mov
mov
fisttps
dec
rcll
out
mov
arpl
daa
mov
adc
sbb
xchg
add
xchg
in
xor
subb
test
enter
out
push
or
jnp
jmp
inc
or
lret
xchg
out
adc
push
push
adc
xchg
mov
push
sub
push
adc
jns
nop
jmp
ss
adc
movsl
mov
mov
imul
mov
mov
shrl
ret
out
jle
dec
rolb
xchg
push
adc
push
cmp
fiaddl
cwtl
leave
sub
fcmovnbe
pop
xchg
push
cmp
add
sbb
lahf
js
add
hlt
mov
adc
rcll
shlb
popa
cmc
jle
and
outsl
std
inc
lock
arpl
icebp
orl
cmpsl
mov
imul
inc
outsl
in
sbbl
lock
jl
into
dec
stos
sub
mov
mov
mov
jno
and
out
pop
out
jg
adc
adc
in
lea
jmp
pop
push
xor
sub
jg
sti
in
in
push
jge
testb
clc
rcrb
setnp
adc
xor
add
jb
nop
jl
cmp
mov
fstp
aas
icebp
mov
pop
xlat
test
or
adc
neg
cld
fcoms
movsl
or
jecxz
or
into
fsubrl
push
clc
xor
leave
fcompl
adc
mov
xor
les
fidivs
xor
pop
je
lea
ss
mov
ljmp
push
adc
fs
insl
xchg
inc
pop
popa
roll
lds
push
mov
cli
push
cmp
dec
in
int3
and
pusha
rcrb
mov
dec
cli
jl
mov
fmul
push
neg
or
subl
cmc
test
push
sub
and
xor
pop
push
movb
jns
adc
mov
data16
notl
fldl
movsb
add
repnz
dec
loop
and
xor
gs
xchg
pop
adc
pop
sub
inc
aas
mov
pushf
push
fbstp
iret
and
mov
jnp
rorb
loopne
or
inc
add
xchg
and
insl
and
pop
js
xchg
loop
dec
cmc
mov
orb
adc
xchg
cltd
mov
push
and
cmpsl
dec
mov
loopne
xchg
arpl
mov
pop
addr16
xor
and
rcll
dec
xchg
mov
div
pop
shll
in
loopne
xor
fiaddl
mov
mov
repnz
movsl
ss
sbb
inc
xchg
call
and
mov
cmpsl
cmp
push
xchg
xchg
test
fdivl
cs
clc
jge
jg
and
arpl
sbb
repz
stos
mov
sub
out
ffree
ret
mov
inc
xor
popf
ret
mov
aad
ret
fdivrl
mov
sbb
xor
and
and
inc
repnz
ljmp
movsb
lret
or
cwtl
mov
add
mov
mov
xor
lcall
mov
ret
lds
dec
sbb
jmp
and
fnsave
sahf
fcoml
repz
mov
push
jl
push
repnz
loop
mov
and
or
pushf
scas
jbe
scas
sarl
test
and
imulb
icebp
scas
cwtl
pop
mov
mov
and
stc
mov
pop
cmpsl
arpl
negb
fdivrs
call
mov
xchg
cmp
add
out
xor
cmp
dec
bound
mov
lcall
jl
das
pop
lret
mov
mov
dec
xor
xor
loop
inc
ljmp
fadd
ss
cli
lret
les
filds
adc
mov
push
data16
rorl
mov
lea
xor
jb
insb
aaa
stos
cvtps2pi
insb
mov
mov
cmp
cli
sub
and
mov
mov
xchg
bound
into
inc
in
push
scas
std
int3
shll
sbb
xchg
dec
test
je
mov
lock
rolb
clc
adc
iret
jp
pop
jl
pop
cwtl
dec
mov
inc
xchg
lea
pusha
dec
sub
fcmovnb
idivl
fmulp
fs
test
xchg
lods
pop
xchg
pushf
or
ret
xchg
cltd
addb
repz
movb
add
xchg
push
in
push
popf
mov
mov
add
fdivrs
stc
mov
lea
mov
and
mov
cmp
jns
xor
or
push
lea
movsl
ficomps
inc
arpl
cmp
js
mov
jbe
insb
dec
push
mov
fisubs
sub
adc
xorl
fdivrl
push
mov
call
xchg
sbb
decb
pop
jnp
out
cmpsb
sbb
and
or
sbb
xchg
dec
dec
pminub
pop
sti
jo
scas
into
dec
inc
test
dec
and
adc
and
ss
ljmp
out
sub
jg
mov
fsubrs
mov
push
or
jmp
cmp
and
push
sbb
and
outsl
sahf
out
pop
push
mov
mov
jecxz
cmpb
pop
ret
xor
inc
jp
and
pop
lds
out
fmul
or
add
fstps
dec
inc
out
negb
sbb
jle
dec
and
hlt
movsb
inc
aaa
pop
and
insb
pop
dec
jge
test
dec
push
pop
cmp
inc
je
fnstcw
xchg
je
adc
mov
imulb
sub
xlat
leave
sub
into
imul
xchg
mov
outsl
jmp
sub
das
mov
jo
mov
in
sub
dec
hlt
loope
test
fdivr
or
cmpsb
sub
std
and
shl
ret
repz
popa
mov
sub
mov
sbb
pop
fwait
movsl
icebp
and
pop
inc
xorl
inc
cmp
repnz
xchg
inc
int
out
xor
into
jns
insb
imul
sbbl
inc
xor
shl
sbb
mov
lret
mov
notb
out
scas
mov
sub
mov
and
jns
test
dec
xchg
pop
jle
std
mov
lods
loopne
and
mov
outsl
sti
inc
lahf
cmp
dec
cltd
scas
ficompl
lea
mov
mov
inc
push
repz
or
iret
jecxz
adc
mov
clc
out
sbb
shll
xchg
xchg
sbb
das
cmpsb
adc
sbb
inc
test
inc
ret
or
push
mov
loop
xchg
inc
andl
push
dec
xlat
mov
cmpsl
lret
pusha
clc
je
std
or
lcall
and
jl
test
gs
in
clc
push
outsb
xor
adc
das
xor
loop
xchg
sub
test
and
pop
jae
aad
aas
je
int3
mov
popf
imul
fsubrl
inc
mov
sub
sti
jecxz
inc
lret
xchg
add
mov
or
add
mov
mov
cmp
mov
out
push
mov
push
inc
dec
rcrb
or
add
xlat
mov
mov
popa
and
mov
aam
roll
add
in
push
nop
js
xor
pop
or
sti
idivl
rol
cmp
push
sbb
jmp
mov
xor
xchg
imul
mov
aaa
mov
rclb
push
cmp
inc
and
cmp
jecxz
fwait
xchg
test
out
sti
adc
mov
cmpsl
rcr
mov
jne
aaa
in
outsb
pop
push
aas
insb
push
daa
mov
jmp
out
test
adc
sub
fnop
daa
std
cmp
jg
ret
enter
jp
mov
fs
loop
jnp
out
mov
mov
push
in
fmul
cmc
in
mov
popl
cwtl
xchg
test
adc
sahf
xchg
add
cltd
cs
xor
cmpsb
movb
push
xchg
jns
and
cli
in
pop
xchg
or
push
or
ljmp
ds
cs
inc
nop
daa
lods
inc
sbb
rol
jbe
call
hlt
loope
pop
xor
adc
cmpsb
and
jmp
aad
jo
mov
cmp
jg
adc
mov
adc
js
mov
mov
iret
and
test
and
push
and
nop
push
xchg
call
test
mov
lret
lea
pop
pop
pushf
mov
xor
sbb
and
xor
stos
stc
mov
xor
mov
adc
adc
in
cwtl
iret
mov
xor
jecxz
test
or
jle
aam
out
iret
js
leave
adc
add
repz
lds
xor
mov
les
cmp
daa
test
mov
sbb
adc
push
pop
aam
outsl
mov
mov
mov
push
or
jl
neg
repz
mov
scas
icebp
xchg
cld
mov
sbb
fwait
dec
pushf
mov
stc
mov
push
adcl
int
cmpsb
rolb
xchg
cltd
enter
movsl
addb
fidivrs
fsubs
push
jo
stos
sbb
insl
sbb
mov
inc
ss
push
mov
es
scas
or
mov
add
sti
in
pusha
cwtl
mov
inc
mov
and
sbb
mov
jns
mov
test
imul
xor
push
shl
in
inc
lods
pop
lds
popa
ds
sahf
mov
sub
xor
jne
sbbb
add
sahf
dec
add
push
push
lods
out
std
adc
iret
jnp
add
pop
sbb
mov
sub
and
cmp
out
mov
jnp
push
andb
sbb
sub
mov
push
dec
insb
dec
insl
lods
arpl
rorb
add
add
sub
mov
jo
pop
jo
push
lret
loopne
loop
sahf
mov
movsb
adc
jl
jbe
pop
add
xchg
pop
testl
sub
mov
adc
push
xchg
data16
pushf
xchg
push
fnstcw
mov
leave
or
insb
jbe
out
mulb
iret
fcoml
pop
add
stc
xchg
shll
sub
loope
xchg
or
cmp
mov
jno
xor
insl
adc
lahf
js
loopne
dec
mov
and
mov
cld
mov
mov
and
cmp
std
icebp
sbb
pushf
mov
fiadds
pop
sub
movsl
shr
scas
ret
cmp
push
cltd
rclb
jb
mov
fisubrs
stc
xchg
mov
cwtl
cmpsl
in
push
es
mov
mov
test
outsb
or
mov
aam
andl
pop
pusha
hlt
mov
sub
jmp
leave
cmp
push
sbb
jo
test
sarl
je
pop
add
or
sti
mov
sub
or
cltd
hlt
mov
mov
jge
jg
scas
sub
jns
inc
lds
mov
mov
cmp
sub
cwtl
or
inc
scas
or
push
call
int
imul
ja
mov
xor
ds
loop
pop
xchg
jb
fisttpl
insl
leave
cmp
shrl
aaa
sub
std
test
in
sti
shr
sbbb
and
cmp
and
cmp
lahf
mov
xchg
ficoms
lret
sub
mov
jle
lret
jmp
jle
ljmp
lahf
lret
das
xchg
in
sub
imul
mov
sti
movsb
dec
jle
dec
jle
jns
xchg
loop
lock
mov
mov
mov
mov
pop
ljmp
push
bound
adc
pusha
into
xor
cmp
je
fsub
inc
fstpl
popa
jecxz
add
push
movsl
add
test
add
mov
outsb
outsb
xor
in
sub
addr16
inc
sbb
fsubr
cmp
sub
cmp
addr16
inc
lcall
add
sbb
xchg
lods
mov
pop
test
push
add
scas
ljmp
add
mov
std
cltd
fs
loope
fs
pop
test
jno
in
add
gs
ljmp
inc
pop
dec
jo
mov
xchg
push
push
or
sbb
jmp
dec
mov
shl
add
xor
jnp
xor
loop
pop
out
inc
sub
dec
jne
mov
xchg
dec
mov
jns
or
cmp
jmp
loope
out
or
pop
adc
cld
negb
mov
push
sub
stos
mov
or
and
sub
add
mov
xor
mov
dec
nop
pop
in
pop
xor
lock
shrl
rclb
test
mov
jo
gs
dec
mov
xchg
cmp
outsb
je
out
mov
push
aas
add
sbb
pop
sti
pop
rcr
cmp
scas
dec
sub
cmp
push
mov
pop
fcomps
add
push
xchg
clc
sbb
xchg
adc
adc
sub
fnsave
jns
or
fisttpll
xchg
imul
call
popa
daa
and
std
xchg
jae
clc
aaa
negl
xor
adc
popf
jo
std
mov
out
test
jle
pop
mov
movsl
inc
test
pop
jp
imul
pop
push
nop
shll
and
or
xchg
icebp
pop
inc
pop
dec
push
in
rcr
mov
ljmp
mov
xchg
jge
mov
insb
sub
lret
popf
sbb
push
enter
cmp
push
xor
add
das
pusha
xchg
daa
pop
test
adc
ret
cs
sbb
aad
lods
rcll
test
subb
pusha
in
es
lret
add
mov
daa
repnz
call
or
mov
pop
mov
mov
hlt
bound
mov
bnd
adc
mov
mov
cmovle
sbb
icebp
les
mov
xchg
inc
lcall
inc
mov
add
lret
lods
fst
push
add
lods
jae
mov
mov
xchg
shll
pop
aam
fptan
pop
icebp
fstpl
adc
push
mov
js
or
pop
lods
lcall
outsl
rclb
pushf
sarl
sbb
lret
ret
cmc
adc
inc
inc
mov
push
mov
push
cmp
dec
je
cmp
in
cmpsl
xor
dec
adc
loopne
mov
pop
mov
scas
loopne
cmp
fsubl
popf
sub
add
imul
dec
fistpl
cmpb
pusha
cmp
sti
add
aaa
cmc
or
cmp
sti
or
jbe
clc
fdivrl
push
xor
mov
es
inc
into
imul
dec
loope
xor
mov
adc
inc
fsubrs
fistpll
xchg
hlt
push
sub
in
outsl
jne
test
aaa
or
fstps
stos
fadd
xchg
jle
xchg
adc
imul
fs
jle
loop
mov
stc
sbb
sub
fidivrl
add
clc
stos
jo
outsb
pusha
sbb
lods
mov
push
cmpsb
jnp
and
testb
cmp
test
mov
enter
and
cs
sbb
mov
push
inc
test
dec
push
in
outsl
test
mov
pop
mov
inc
in
jne
push
loope
fimull
adc
push
cmp
lret
lea
shll
testb
mov
iret
into
lds
fucomip
or
movsl
fwait
and
cwtl
or
imul
xlat
jnp
push
fdivrl
orl
adc
sbb
mov
cwtl
into
and
scas
lret
xor
or
pop
inc
pop
jg
clc
inc
cmp
jbe
dec
orb
addb
bt
push
test
lahf
cmpsb
cmp
sub
ja
inc
and
mov
jmp
xchg
and
adc
dec
ljmp
push
out
cwtl
add
inc
dec
pop
aaa
push
push
outsb
adc
mov
inc
adc
pop
scas
add
xor
pop
sbb
add
or
pop
push
leave
in
and
test
lahf
push
ficomps
mov
and
ds
mov
cmp
xor
pop
and
repnz
pop
sub
xchg
cmp
xchg
cmp
xchg
aad
cmpsl
cs
out
jne
cmc
loope
push
pop
push
add
pop
mov
enter
mov
xchg
stos
and
xchg
push
xchg
sub
arpl
dec
cltd
mov
xor
mov
jmp
cmpsb
sbb
jns
and
adc
add
mov
dec
stos
loopne
dec
mov
jmp
outsl
jb
out
scas
mov
add
leave
jne
push
shr
adc
insl
xor
mov
lret
loop
rcl
rolb
sbb
imul
ret
adc
fisttpll
mov
mov
outsb
push
imul
dec
data16
invlpg
leave
stc
mov
or
push
xchg
xchg
sbb
vpmacsswd
and
rcrb
popa
ljmp
add
test
jne
aam
bound
mov
sbb
mov
mov
insl
pusha
xor
addb
jge
inc
insb
pop
pushf
pop
cmp
cltd
pop
mov
xchg
dec
dec
inc
les
in
fcoms
daa
push
pop
jae
push
nop
rol
sarl
adc
in
mov
repnz
push
inc
icebp
xor
mov
adc
pusha
ret
ret
ljmp
lds
in
push
shl
xor
lahf
in
push
pop
sbb
add
int
pusha
imul
frstor
adc
js
pop
jne
fwait
inc
sbb
iret
aas
mov
jne
jae
aaa
frstor
add
add
adc
in
push
and
xchg
or
dec
mov
int
in
mov
xchg
sarb
adc
xor
je
or
xchg
cli
aam
mov
lods
sub
sbb
shll
jb
push
jbe
out
jnp
sub
jge
mov
dec
lret
stos
std
popa
xchg
pop
cmpb
cmpb
cltd
push
pushw
lret
test
rclb
inc
jbe
arpl
fiaddl
mov
dec
push
cltd
movsl
mov
pop
xrelease
jg
mov
pusha
adc
sub
imul
mov
push
movsl
sbb
mov
inc
pop
mov
icebp
rolb
inc
je
rcl
out
jg
dec
xchg
inc
imul
aad
jne
sbb
shlb
jno
lock
subl
into
push
add
or
stos
test
icebp
or
pop
adc
movsb
mov
pop
xor
sbb
jl
or
or
insl
fbld
sbb
cmpsl
inc
mov
mov
dec
jbe
mov
add
sub
push
ja
lods
repnz
dec
pop
addl
pop
in
sarl
enter
outsb
mov
fsubrp
xorl
ja
mov
pushf
imul
ss
jae
sub
imul
sbb
inc
int3
inc
test
pop
dec
inc
ljmp
pop
dec
sbb
xchg
int3
add
inc
out
out
scas
test
mov
xor
push
dec
pop
mov
lods
and
xor
mov
das
enter
lret
in
xchg
scas
out
iret
mov
jmp
js
jbe
pop
dec
mov
dec
inc
inc
ret
mov
or
pushl
xor
cld
test
mov
cmp
jb
lahf
orl
sub
dec
pop
jmp
vandpd
fs
cmpsb
les
lcall
pop
or
popa
fsubrp
or
jge
mov
mov
pop
in
pop
das
pop
insb
jle
out
add
sbb
mov
xor
ret
imul
scas
mov
inc
jecxz
push
cmp
in
popa
xor
iret
dec
cmpb
cwtl
mov
cmp
push
sub
mov
pop
cmp
insl
xor
into
test
and
mov
mov
pop
cmp
xchg
jecxz
xchg
cmpsl
jne
leave
pop
mov
push
xor
bound
sahf
mov
lret
iret
stc
jno
and
ljmp
mov
ljmp
mov
cmpsb
sahf
testb
nop
mov
lods
es
popf
sub
sbb
lret
jl
and
mov
movsl
jmp
lock
out
je
push
xorl
xchg
or
sub
dec
lret
jp
mov
jmp
in
push
and
adc
test
dec
mov
ja
add
imul
sbb
mov
pop
xchg
adc
or
mov
mov
mov
out
jmp
adc
dec
out
and
mov
xor
fistpl
js
mov
fldt
loope
test
ret
push
cmp
ja
mov
pop
sbb
filds
jo
call
addb
mov
mov
or
icebp
fstpt
dec
inc
mov
bound
in
jns
scas
mov
mov
cli
lods
mov
cli
sbb
std
int
mov
in
bound
pop
push
pop
mov
xor
jl
xorb
inc
lret
cmp
lds
sbb
ja
cmp
sti
leave
jp
adc
icebp
push
lods
sub
ljmp
mov
or
mov
insb
scas
mov
xchg
xchg
stos
or
ss
sti
push
adc
lcall
cmp
sub
mov
mov
jmp
mov
scas
adc
and
gs
push
push
and
mov
mov
out
push
shlb
test
or
in
std
scas
cmp
adc
xor
je
fucomip
dec
xor
jecxz
dec
arpl
ss
lret
in
lds
sbb
out
mov
cmc
movsb
inc
cs
scas
mov
pop
mov
mov
pop
movsl
sti
mov
lcall
sbb
mov
push
inc
pushl
popf
push
sahf
sbb
popa
cli
and
and
and
pusha
jnp
pop
test
sbbb
mov
test
repz
ret
je
repnz
and
in
ss
sub
push
ftst
in
cmp
sbbb
rolb
inc
add
jb
push
pop
jg
cld
rcll
shrl
ret
leave
pop
movsl
push
lea
jo
fcoml
push
clc
ja
jb
push
scas
test
dec
test
mov
fwait
stos
inc
and
sub
xchg
rcl
jp
cltd
mov
hlt
mov
out
dec
xchg
lahf
sarb
scas
jae
lods
add
fsubrl
imul
push
ds
lods
xchg
adc
mov
mov
fstps
pop
mov
imul
cmpsl
push
xchg
imull
cmp
mov
loopne
jns
pop
cmp
loopne
and
int
sub
pop
and
xor
in
push
adc
push
pusha
and
xchg
das
or
xor
dec
popa
xchg
push
or
loope
push
or
push
mov
xchg
mov
xor
shlb
push
push
sub
sbbb
xor
or
add
mull
cmp
inc
ficompl
int3
push
sbb
xchg
push
xor
les
mov
fs
hlt
rolb
dec
fistl
jge
cmp
xchg
jno
mov
add
leave
int3
xchg
inc
mov
in
stos
jbe
cmp
add
cmp
mov
adc
enter
inc
pushf
pop
or
mov
aaa
lea
push
aaa
jge
pusha
push
mov
mov
push
ds
pop
push
fisubrs
add
lea
stos
ds
xor
push
arpl
ss
dec
xor
mov
fdivl
imulb
imul
enter
xlat
cmpsl
jl
call
outsl
and
stos
in
fldl
mov
cli
mov
fs
or
cmpsb
js
fcmovbe
loopne
mov
push
and
ret
hlt
rcrl
out
lea
lods
inc
in
in
jl
fucomip
mov
lods
cmp
rcrl
icebp
es
or
into
pextrw
xor
mov
cmp
idivl
mov
movsl
lods
call
and
jecxz
cmp
testl
outsl
loop
mov
jg
sub
xchg
int
mov
or
leave
mov
mov
mov
scas
pop
push
push
jno
mov
or
xor
clc
cmpsb
sbb
xchg
nop
push
out
mov
loop
xor
push
lods
xchg
push
or
sbb
mov
addl
or
cmp
inc
and
ret
and
movsl
dec
ja
aam
adc
and
xor
pop
icebp
pop
cmp
das
rcrb
in
fistpll
push
xchg
sub
xor
push
xchg
add
test
or
ret
push
mov
mov
jg
les
decl
dec
add
add
xor
and
or
and
fwait
jns
push
push
jbe
pusha
add
mov
out
nop
loope
jne
cmp
pop
sbb
push
ss
add
lea
hlt
test
data16
push
add
push
pop
mov
adc
and
adc
xchg
sub
imul
popa
or
xor
sbb
mov
cmp
scas
and
popf
jl
test
sbb
nop
bound
je
aam
inc
insb
clc
pop
dec
icebp
mov
shlb
lock
add
pop
pushf
in
or
out
xor
out
dec
push
push
pop
sbb
or
push
and
push
or
cmp
call
push
inc
push
shrl
sub
xor
arpl
pop
enter
cmp
test
icebp
dec
in
insb
insl
mov
testl
push
movsl
pushf
int
dec
xor
std
mov
xor
and
sub
test
push
aas
mov
sub
ljmp
int
and
xchg
or
sub
sbb
jnp
xlat
push
mov
xchg
cli
xor
cmp
pushw
in
push
and
sbb
fstpt
lahf
adcl
ljmp
and
in
cmc
test
dec
repz
cli
pushf
xchg
add
gs
xor
mov
push
cmp
add
ss
cmp
or
fdiv
loop
mov
push
and
movb
dec
in
ja
xor
mov
and
mov
loope
ret
xchg
popa
sbb
hlt
fistps
mov
add
out
das
insb
fwait
sub
add
imul
ja
mov
fwait
in
cmpb
stos
sub
out
fs
sti
lret
pop
aaa
mull
add
push
inc
cli
jmp
bound
cmp
lods
and
fsts
daa
lds
popf
lock
mov
push
pop
jb
mov
cmp
mov
push
lods
xchg
cmp
or
push
mov
mov
fidivs
aaa
es
imul
mov
jmp
or
andb
xor
popf
mov
mov
sub
dec
and
pand
add
or
aas
je
xor
pop
cmp
lock
frstor
adcl
cs
push
inc
repz
xchg
xchg
sbbl
frstpm(287
sbb
out
push
scas
jle,pt
xchg
sub
jb
pop
mov
imul
outsb
sbb
or
cmpsb
mov
mov
movsb
mov
call
jle
out
ret
test
push
sbb
outsl
add
rolb
mov
cmp
ja
inc
enter
fistpl
out
lock
int3
xor
xchg
sub
xor
sub
popa
dec
and
jnp
in
aam
lahf
or
aaa
mov
sbb
xchg
or
lret
hlt
dec
mov
add
jbe
xor
js
pop
or
pop
xchg
cmp
and
fwait
mov
mov
in
and
fisubrs
test
dec
cmp
je
test
and
ret
test
jb
xchg
cmpl
mov
xchg
jns
adc
jns
sub
jl
fcoml
jae
lret
fiaddl
sahf
lahf
popa
das
mov
lds
sub
mov
add
enter
js
inc
mov
dec
mov
dec
fistpll
push
sub
lcall
andl
push
dec
dec
mov
adc
das
xchg
iret
jle
das
pop
lahf
push
mov
adc
scas
fwait
mov
push
pop
fwait
testl
fstl
and
xlat
loop
or
push
mov
in
mov
cmpsl
sub
sub
xor
xchg
nop
inc
ficoml
dec
idivb
or
xchg
sub
xlat
xor
nop
lcall
scas
ret
add
jmp
inc
sub
cmp
mov
adc
repnz
imul
movsl
xchg
test
repz
int
mov
pop
sbb
dec
cmpsl
push
mov
inc
mov
faddp
lret
inc
xchg
mov
pop
adc
mov
ss
push
jle
jae
inc
jo
add
jno
hlt
arpl
mov
xor
leave
int3
repz
hlt
addr16
cmpsl
data16
popa
pusha
and
mov
xor
cli
data16
fdivrl
xchg
lret
fadd
push
aam
fcoml
lahf
dec
sub
pop
sahf
xchg
fistl
cmp
mov
push
xchg
int3
jg
or
and
jo
or
inc
mov
xor
jne
sahf
fmuls
push
mov
fwait
lahf
mov
fidivrl
in
mov
mov
pop
push
or
loop
adc
fcoms
shll
mov
imul
pusha
mov
and
inc
and
xchg
cmp
xchg
pop
pop
adc
ret
aam
xchg
sub
std
push
daa
imul
nop
enter
add
jbe
bound
fwait
add
int3
lret
scas
pop
aad
add
repnz
sub
cmpb
hlt
mov
add
jnp
in
sbb
stos
sub
in
fdivrp
inc
cmp
das
inc
ljmp
fdiv
jge
inc
popa
xor
stos
xor
push
dec
addr16
fisubl
cwtl
xor
cmp
movsl
lds
shll
stos
inc
inc
pop
xchg
xor
adc
jge
imul
mov
leave
or
adc
or
xor
data16
fnstenv
icebp
ljmp
pushf
add
imul
sbb
movsl
fdivrp
fisttps
call
dec
add
xchg
push
cmp
sbb
sbbl
fisubl
cmp
ja
sub
mov
lcall
hlt
mov
or
iret
lea
sti
out
fs
adc
push
mov
cmp
jne
outsb
dec
dec
mov
jnp
pop
ja
sbb
cmp
andl
dec
push
arpl
and
loop
adc
and
in
or
mov
sbb
aaa
mov
stos
daa
cmpsl
dec
xor
mov
popf
clc
mov
fisubs
cld
and
mov
test
test
mov
pushf
xchg
repz
dec
orl
jne
mov
pop
hlt
and
popfw
test
stos
dec
add
xchg
icebp
sbb
xchg
lods
add
shr
or
cmpsb
leave
mov
fdivs
fcmovnb
scas
lahf
lods
popf
aaa
shll
xor
mov
sbb
push
or
adc
mov
cld
adc
mov
sub
mov
fisubl
sbb
or
xchg
popf
out
xorw
mov
shll
rcr
jbe
sub
add
cmp
subb
dec
test
mov
aaa
lcall
test
pop
stc
popf
pop
or
mov
cmpl
push
pushf
mov
andb
call
aaa
in
pushf
adc
out
mov
out
cmc
pop
and
sar
push
dec
xchg
movl
lock
add
and
out
std
mov
xchg
push
test
enter
xor
stos
sbbl
xchg
into
stos
pop
iret
dec
sub
push
sbb
imul
mov
sub
and
or
and
in
push
je
mov
pop
or
mov
jae
mov
inc
movsb
data16
ret
aaa
push
mov
cmpsb
inc
scas
ficoms
int3
push
jae
out
mov
mov
jmp
int3
inc
sbb
loop
mov
fldenv
loopne
xchg
cltd
mov
cmp
jg
push
jp
xor
pop
pop
aas
mov
jmp
xchg
lcall
sbb
int3
pop
jo
cmp
fcompl
push
adc
xor
inc
mov
xchg
jb
or
cmp
inc
push
andb
and
push
mov
jne
mov
int3
mov
bound
jns
enter
out
inc
in
movsb
push
fwait
xor
mov
fadd
in
mov
lods
cmp
mov
lret
push
pop
jp
cld
dec
aas
inc
mov
jle
out
add
or
mov
roll
ja
popa
sub
inc
sub
mov
adc
notl
jg
arpl
aaa
jb
xchg
jo
insb
xchg
push
nop
xchg
dec
mov
lahf
mov
jp
test
xchg
adc
sub
jmp
jp
loop
arpl
cs
lcall
cli
je
fcom
pop
dec
xchg
xlat
jg
stos
popf
or
ftst
inc
std
or
dec
pop
in
and
push
mov
lods
add
fildl
push
mov
out
pop
rcl
jno
out
cmpsb
pop
sub
insl
jmp
cwtl
jnp
mov
adc
rorb
lret
addb
xlat
leave
dec
aaa
mov
lods
fidivrl
mov
shll
jecxz
mov
dec
sahf
xor
xchg
outsl
subl
cld
inc
test
mov
stos
xchg
push
adc
pop
and
push
movsl
in
gs
loope,pn
outsb
jp
cmp
inc
push
add
clc
cmp
cmc
xor
or
xor
mov
xchg
loop
push
lcall
ljmp
jecxz
and
addr16
jl
or
lods
pop
mov
mov
jb
cld
mov
mov
add
pop
mov
les
fdivrl
lods
add
cld
jnp
aaa
inc
popf
mov
mov
mov
jmp
das
mov
ret
mov
adc
fsubs
sbbl
das
and
in
test
ds
sub
mov
jno
popa
mov
sahf
and
nop
sbb
xor
rolb
cmp
movsb
dec
jb
rcrb
mov
dec
mov
gs
testb
sub
add
mov
in
cmp
aam
fs
xchg
nop
fidivrs
adc
shrl
sub
inc
pushf
fisttpl
les
cmpl
movsb
stc
inc
add
xchg
xchg
imul
xchg
jg
js
shll
add
fwait
pop
sbb
fsubs
push
mov
cli
mov
sbbl
setno
mov
push
pop
and
mov
mov
xchg
fs
movb
out
shr
sbb
gs
mov
rcrl
arpl
fimuls
mov
sub
mov
ret
xor
and
add
clc
jo
pop
xchg
imul
or
into
clc
dec
sbb
cltd
xlat
jne
lea
or
fidivrs
pusha
pop
mov
add
pop
sub
inc
stc
cmp
dec
fldt
dec
mov
xor
sbb
jmp
mov
jns
mov
push
loope
test
or
in
ja
aaa
push
lds
or
ja
cmp
sub
push
iret
ljmp
pop
imul
cmpb
sar
ret
sub
shlb
pop
int3
xor
xlat
sub
scas
xor
mov
in
fisttps
cli
adc
dec
push
sbb
addl
outsl
mov
xor
imul
push
xorl
cli
xor
mov
or
mov
imul
es
jbe
out
in
stos
cmc
mov
pushf
mov
nop
in
dec
pop
push
cmp
sbbb
xchg
fwait
mov
mov
pop
xor
in
cmp
mov
cs
lods
in
mov
sub
fs
mov
arpl
jg
test
or
testb
adc
xchg
insl
sti
bound
in
aaa
popa
add
push
aas
mov
mov
mov
lcall
leave
sub
inc
lock
xor
inc
cmp
sbb
mov
inc
cmpsb
add
enter
add
int
hlt
xor
jecxz
pop
ljmp
push
dec
mov
pushf
fmul
inc
das
pushf
ret
xchg
in
dec
ds
fsubl
ds
mov
fmul
daa
xchg
lock
fwait
imul
xchg
mov
and
jge
mov
add
test
push
flds
push
xor
mov
xor
es
fnstenv
xchg
hlt
lds
cmp
lret
out
adc
jbe
outsl
sub
les
data16
aaa
mov
xchg
sar
jle
int3
adc
mov
dec
loopne
mov
and
test
shll
mov
cmp
lods
sbbl
bound
in
jl
push
bound
push
aaa
out
rcrb
sub
inc
and
adc
push
adc
lcall
cs
out
push
dec
iret
repnz
cli
sbb
test
xor
pop
out
inc
push
movhps
out
push
mov
dec
movsl
or
adc
les
movsl
pushf
cmp
out
cmp
pop
stc
dec
jmp
call
call
out
dec
inc
push
or
es
sub
mov
stos
ret
mov
fs
movsl
aad
mov
cmp
ljmp
jg
dec
out
lock
jp
daa
push
f2xm1
add
push
imulb
sbb
xchg
cmpsl
add
aad
mov
add
mov
xchg
sbb
sbb
and
mov
jno
in
hlt
decl
fcomps
xchg
repz
pop
movsl
icebp
iret
leave
push
lods
mov
js
stos
mov
xchg
cmp
xchg
mov
jns
fnsave
push
mov
sbb
lret
imul
lcall
popl
jns
in
lock
jle
in
jb
iret
or
movsb
std
jge
das
pop
outsb
lods
sbb
ja
lret
ud1
and
ret
jne
cmpsl
jnp
cld
jo
insb
add
push
cmc
andb
filds
inc
inc
cwtl
jo
in
lods
pop
jmp
pop
daa
add
popa
xor
aad
sbb
cmpsl
ret
insb
loope
sub
out
je
call
test
inc
imul
xor
xchg
jmp
mov
jmp
cs
sub
xchg
mov
std
lds
lret
ret
push
mov
aas
std
insl
dec
fisttpll
adc
and
xchg
fldcw
cmp
das
pop
mov
push
mov
scas
add
fdivr
cmp
sbb
pop
nop
push
xlat
xchg
shlb
xor
mov
lret
out
inc
add
push
je
xor
xlat
daa
lret
daa
mov
pop
repnz
insl
xor
jb
pushl
fdivrl
mov
push
mov
mov
mov
ds
movsb
pop
roll
movsb
sub
dec
stos
ja
cs
add
cs
enter
bnd
push
and
lcall
mov
icebp
arpl
fwait
xlat
sub
test
mov
test
fnstcw
inc
movsb
in
mov
out
jnp
or
push
sub
shlb
jle
jmp
xchg
pop
shr
ds
mov
mov
cmp
insb
xchg
push
aas
xchg
lea
inc
ja
sub
fistpll
push
adcl
pop
inc
pop
out
mov
pushf
push
sahf
ret
cli
lds
xchg
mov
push
inc
enter
and
out
testl
mov
mov
add
inc
inc
xchg
push
hlt
stos
pop
ja
inc
out
inc
insb
dec
aad
mov
rorl
imul
mov
in
inc
inc
pop
and
mov
es
fsubl
scas
inc
cli
or
popf
popf
adc
addr16
xor
call
push
rcrl
xchg
repnz
add
lods
in
hlt
mov
inc
dec
int
into
pop
pop
lret
xchg
gs
ljmp
cmp
scas
in
int3
jl
cmp
jnp
cs
sbb
mov
jmp
aam
lret
popa
push
ret
stos
outsb
add
frstor
add
int3
xchg
jmp
jmp
cli
sbb
sti
mov
aas
mov
cmpsb
aad
jp
jl
int3
pop
pop
sarb
arpl
fsubrl
mov
push
icebp
or
push
faddl
lock
pusha
enter
mov
mov
xchg
dec
fstl
mov
mov
push
mov
fstl
cmp
push
aas
jecxz
and
sbb
insl
addr16
sub
sti
push
sbbb
jle
std
jle
nop
dec
xor
mov
rcpps
aad
cli
js
jo
sbb
lcall
mov
xor
mov
jno
pop
jbe
sub
sbb
nop
lods
jo
fs
inc
mov
push
loope
mov
push
repz
in
xchg
sahf
mov
jns
xchg
loope
add
jns
mov
out
lds
mov
adc
dec
mov
sbb
ret
rolb
gs
sahf
cltd
loop
jb
mov
hlt
push
inc
aaa
js
aam
dec
pop
cmp
fdivp
stos
ret
fistpl
cmp
cli
div
mov
ljmp
xor
push
xor
xor
sbb
adc
push
xor
stc
lret
pop
leave
jae
rsm
cmc
iret
mov
ret
aam
xor
adc
lods
jge
sbbl
mov
xchg
les
cwtl
sub
pop
ss
mov
fisubrl
loop
testb
sub
mov
in
scas
fwait
mov
movsb
xchg
mov
mov
xor
rclb
lock
inc
int3
movsb
lods
retw
dec
xor
mov
mov
test
sti
mov
push
scas
mov
add
sar
jno
in
fdivrs
sarb
movsl
push
xchg
dec
mov
and
xchg
pop
rcr
nop
xchg
in
imul
sbbl
or
jecxz
add
cmp
iret
int3
xlat
dec
xchg
xchg
cmc
mov
mov
iret
int
mov
add
cmp
inc
jb
or
stos
pusha
xor
sbb
or
movsb
add
xchg
cmpsb
bound
push
repz
mov
in
repnz
rolb
pop
mov
xchg
lret
addl
or
imul
dec
sbb
int3
jp
das
push
adcl
add
test
call
lcall
div
xchg
in
push
in
mov
testl
inc
pop
jno
jnp
cmp
loope
push
inc
inc
xchg
fnsave
faddl
lcall
ss
arpl
fldcw
push
mov
pop
insl
lcall
push
scas
mov
sahf
pop
fwait
call
ss
dec
test
and
mov
cmp
loope
idivl
dec
push
mov
fcmovne
cmpsb
fcoms
add
test
imul
mov
jb
mov
lock
mov
scas
pusha
push
mov
pop
push
mov
jae
or
rcl
mov
xchg
loopne
outsb
lret
int
sbb
or
pop
inc
fstpt
out
fcomps
mov
sub
push
and
pop
xor
movsl
sub
mov
mov
sbb
and
lock
sbb
sbb
sbb
xlat
xchg
mov
adc
cmp
pop
push
sti
adc
or
repnz
lods
adc
nop
mov
and
jg
xchg
cld
fstps
movsb
fistl
aam
push
sbb
ror
mov
xchg
inc
cmp
sub
in
dec
fcompl
faddl
add
xchg
or
mov
pop
roll
mov
aas
or
je
out
mov
je
xor
int3
inc
pop
mov
lahf
sub
jge
and
or
mov
adc
and
add
mov
pop
sbb
jae
mov
push
and
lcall
jb
adc
jmp
shlb
add
fimull
aad
cmp
fmull
rorb
mov
test
mov
stos
dec
and
enter
add
pop
dec
dec
int
dec
aaa
xlat
cld
pusha
ljmp
and
out
dec
test
insb
push
fstl
in
mov
xorl
push
dec
movsb
lds
dec
or
movsl
and
stos
push
adc
add
add
sahf
lcall
in
cmp
inc
arpl
dec
bound
sub
xor
xchg
pop
mov
or
inc
mov
mov
pop
and
out
repnz
jmp
xchg
mov
lock
cld
mov
rorl
mov
push
icebp
cmpsb
mov
pop
js
xchg
jne
or
int
cltd
or
adc
mov
fistps
xor
scas
cmp
cmpsb
jecxz
dec
incb
mul
mov
clc
movsb
xchg
or
cmpsb
orl
lahf
sbbl
movsb
pusha
cmpb
add
xchg
paddq
cmp
push
ss
mov
xchg
ror
mov
roll
in
cmp
insb
pop
mov
jl
dec
xor
xor
fisttpl
mov
mov
mov
jmp
roll
insb
fisubrl
call
mov
mov
mov
jle
rcrb
fdivl
aam
loope
xchg
je
pop
inc
aad
sub
ja
aas
cmp
leave
and
lcall
pop
jo
cld
sbb
inc
cs
rcl
jmp
test
std
popa
push
xor
or
lret
and
sbb
in
inc
mov
mov
fadds
dec
fcoms
pop
sbb
int3
outsb
test
cs
pop
cltd
push
jecxz
repz
popa
outsl
aam
inc
fdiv
jp
in
and
leave
adc
push
inc
ret
cmp
stos
pop
push
sub
std
push
mov
push
xchg
dec
lock
push
lret
pop
or
fs
clc
les
mov
cld
dec
add
cld
sbb
pop
aam
xchg
mov
cmc
or
and
dec
mov
dec
mov
dec
xlat
fmulp
enter
sbb
stos
and
or
int
adc
inc
or
cmpsb
inc
xchg
in
lea
cmpsl
sub
iret
les
shll
ljmp
mov
push
and
inc
push
cmc
xor
pop
or
mov
ljmp
pop
inc
daa
jo
cmp
mov
outsl
das
xchg
mov
mov
mov
sbb
add
jl
pop
es
mov
ror
mov
jo
mov
jmp
fs
push
in
inc
shrb
dec
jge
xor
push
xor
lock
bound
stc
jo
addr16
jmp
xor
lcall
add
stc
adc
add
or
stc
idivl
xchg
or
call
and
fcmovne
xor
scas
ret
aad
fcomp
shrb
dec
and
outsl
inc
cmpsl
add
mov
push
test
iret
les
mov
push
out
push
mov
mov
xchg
xchg
fstpt
arpl
add
movsb
icebp
lods
push
and
test
or
stos
roll
xchg
mov
lret
jle
incb
fisubl
jae
cmp
lods
sub
cwtl
sbb
inc
out
sub
xchg
pop
xlat
pop
in
adc
pushf
stc
fdiv
sti
push
lret
mov
xor
ret
push
fucomp
les
leave
jae
test
pusha
imul
imull
loop
rcrb
and
mov
mull
mov
push
repz
or
inc
pop
or
das
push
sarl
das
nop
cmp
adc
mov
stc
adc
jne
out
in
jmp
movsb
aaa
mov
dec
dec
rorl
jno
ljmp
pop
and
adc
aam
and
lcall
int3
sub
xor
inc
ds
rolb
in
mov
mov
ljmp
dec
push
out
mov
bound
jl
cmc
cltd
dec
add
frstor
stos
clc
sub
adc
inc
imul
jae
loope
call
pop
dec
test
fildl
inc
in
rcll
sbb
loop
jbe
sub
jp
push
and
sub
push
lods
movsb
dec
sbb
clc
mov
fs
sub
enter
push
movsb
les
fcmovnb
fsubrp
test
push
xor
lock
push
in
sbb
pop
push
addl
xchg
xchg
xchg
cli
xchg
xchg
bound
into
das
cs
dec
or
jns
pop
imul
idivb
jb
or
xor
repnz
sbb
mov
in
cmp
push
push
add
daa
jbe
or
adc
lods
xor
je
fcmovnb
ss
outsl
inc
dec
push
call
or
ficoms
sbb
and
push
cli
mov
movsl
filds
cmp
mov
inc
popf
clc
bound
sub
xlat
mov
xchg
ds
push
jg
stos
add
mov
in
pusha
fisttpl
sub
rclb
or
pusha
popa
or
in
cmp
dec
cmp
jb
notl
mulb
add
mov
fstps
ffree
pop
scas
in
insb
or
stos
shlb
leave
cli
mov
std
and
and
cmpsb
and
in
inc
arpl
fsub
mov
and
jp
add
jbe
inc
sbb
push
mov
xchg
stos
jmp
stos
sbb
adc
sarb
push
mov
addb
sbb
ljmp
imul
or
and
or
pop
mov
loopne
loope
xchg
push
cli
xchg
lock
pop
js
ss
loope
enter
orl
leave
outsl
clc
mov
xlat
dec
jmp
mov
lcall
mov
repnz
std
arpl
adc
fsubrs
mov
xor
xchg
push
push
push
test
dec
pop
cmp
repnz
aam
out
dec
mov
mov
out
xchg
out
mov
mov
and
or
sbb
push
mov
xor
lds
and
mov
mov
adcl
sub
in
mov
dec
mov
jno
sbb
testb
jne
push
add
jl
js
insb
loopne
montmul
cmpsb
inc
add
fstps
sbb
dec
mov
sub
sbb
clc
inc
loop
sbb
dec
cs
add
cltd
jecxz
fcompl
xor
mov
es
or
mov
push
mov
cmpsl
push
jmpw
xor
push
enter
mov
scas
cwtl
cs
je
outsb
sub
lret
mov
fsubs
test
jmp
pop
das
add
fcmove
jb
outsb
shl
mov
jecxz
out
leave
jg
pop
inc
sbb
adc
mov
mov
sub
dec
repz
push
pushl
push
fnsave
sub
sti
loopne
inc
add
sbb
cli
and
cltd
pusha
aaa
cmpsb
add
addr16
jecxz
andps
cmpsl
mov
js
jle
stos
mov
cmp
inc
pop
sub
pop
pop
push
je
xchg
jp
mov
cmp
out
gs
cld
cwtl
cmpsl
mov
aaa
mov
mov
inc
xchg
push
fldt
cmp
test
mov
lret
cld
dec
lret
test
push
jl
orb
arpl
popa
add
jno
test
inc
mov
jns
mov
mov
push
or
loop,pn
xchg
jns
addl
or
xchg
or
jge
inc
xchg
sub
pop
xlat
and
andl
pop
mov
loopne
pop
jb
cmc
jae
iret
xor
mov
inc
jns
outsb
sbb
imul
jge
jmp
add
ljmp
sub
roll
lcall
pop
andb
pop
ficoms
push
lock
jne
xor
sub
mov
push
in
mov
pop
je
push
mov
pop
push
push
imul
out
pop
pop
in
add
push
cmp
pop
les
insb
hlt
and
scas
jg
outsl
and
add
mulb
out
cmpsb
pop
icebp
in
sarl
jb
mull
loope
gs
cmpb
gs
add
jg
sbbl
ds
lods
pop
fwait
xchg
sub
or
mov
stos
out
fbld
lret
or
loopne
sub
movsl
fcmovnb
xor
push
add
test
not
mov
cmp
aas
sbb
je
jbe
cmp
aas
add
enter
dec
push
scas
push
cmpsl
outsb
dec
js
out
subl
dec
test
mov
sbb
mov
aaa
push
or
mov
mov
inc
push
jg
adc
mov
pop
je
dec
rorb
lcall
push
loopne
fmull
test
cltd
xor
arpl
in
clc
test
ds
testl
outsb
and
ja
mov
or
mov
aas
insl
out
sti
mov
pop
add
mov
and
jg
data16
dec
pusha
pop
cmpsl
add
dec
jae
and
dec
lods
ja
lret
inc
sub
dec
rclb
testl
sbb
inc
fstps
pop
icebp
cmp
test
xchg
add
mov
inc
xor
sahf
les
shll
cmp
fisubl
xorl
fldenv
int
xchg
dec
aas
daa
jmp
andb
ret
loope,pn
add
jnp
loopne
int
fcmovnb
cmp
add
and
int3
nopl
mov
aam
or
inc
mov
ret
iret
sbb
sub
mov
xchg
addr16
std
test
fldl
mov
pop
adc
stc
sub
mov
dec
rcrb
and
and
adc
adc
out
dec
xchg
sbb
sahf
lret
out
into
shl
nop
les
push
in
shr
test
ljmp
or
inc
loope
pop
adc
cmp
shl
mov
stc
scas
pop
pop
push
adc
mov
pop
lds
je
aas
and
dec
in
leave
adcl
out
jbe
fmuls
xchg
and
ds
mov
xchg
in
and
out
pop
xor
je
lret
ret
movsb
shlb
negb
xor
fcomps
test
or
aad
add
outsl
leave
andl
mov
cmp
aad
jno
dec
push
ss
dec
fcompl
and
mov
push
push
cld
mov
in
fidivl
out
pop
inc
stos
rclb
out
dec
xor
pop
mov
dec
mov
cs
push
and
xchg
pop
mov
push
inc
movl
sbb
clc
add
test
repz
scas
xchg
xchg
rcrl
pop
test
movsl
push
dec
xor
das
mov
out
jle
sub
adcl
or
or
xchg
xchg
inc
pop
insb
sub
test
loope
lret
cmp
dec
outsl
repnz
and
outsl
jne
cltd
in
std
test
out
outsb
mul
or
or
dec
jmp
jp
or
and
pop
enter
jns
popf
or
dec
jg
mov
inc
out
mov
out
scas
scas
jne
inc
ret
popf
mov
or
dec
shr
jne
adcb
jl
xchg
jp
pushf
fstps
xchg
or
movsl
add
inc
addr16
adc
sbb
inc
mov
add
add
mov
cmc
cmp
and
add
dec
cmp
leave
fisttpll
outsl
cmc
add
test
xchg
test
inc
mov
mulb
cltd
movsl
out
mov
jge
adc
gs
jmp
ljmp
adc
ljmp
aam
daa
xchg
shl
cld
jcxz
into
lock
pop
pop
lea
iret
cmpsl
inc
xchg
enter
ds
dec
in
decl
loop,pn
add
mov
imul
dec
aas
pop
clc
gs
fwait
mov
mov
adc
xor
adcb
mov
leave
mov
sub
push
pop
mov
cltd
lret
sub
mov
mov
add
push
gs
mov
lock
mov
xchg
or
adc
cmp
sarl
or
rolb
cmp
arpl
aas
inc
repnz
orb
pop
sub
dec
in
jge
rorl
sti
movsb
fmull
jecxz
mov
jecxz
sbb
mov
ljmp
es
xchg
in
js
ljmp
pop
mov
fsubr
xchg
and
aaa
xor
std
imul
loopne
adc
mov
or
mov
adc
jb
and
icebp
xchg
xor
dec
in
jg
andnps
mov
insb
sub
pop
sub
loope
xor
or
or
fldl
sub
xorb
leave
decl
sub
jp
popf
mov
popf
xchg
jp
xor
cmp
dec
adcb
dec
hlt
out
pushf
cmp
dec
adcl
fcoml
fidivrs
and
jle
sub
test
push
adc
leave
jg
jecxz
loopne
ss
das
add
loope
mov
xor
cmp
in
mov
adc
out
push
push
dec
jns
aad
add
cmp
lret
int3
adc
dec
mov
xchg
jg
repz
add
ret
cmpsl
out
lock
jecxz
xor
mov
pop
jne
hlt
xor
and
inc
sub
lret
sbb
adc
xchg
iret
xor
cmp
inc
pop
sub
lea
nop
xchg
adc
jp
imul
inc
pop
xchg
inc
pop
outsb
pop
ss
pop
dec
ret
gs
and
das
adc
xor
xor
mov
lret
pop
mov
dec
mov
mov
pop
mov
stos
ss
xor
sbb
xchg
sti
xor
cmp
push
hlt
add
pmovmskb
rolb
cmc
mov
es
mov
push
dec
jnp
sub
fiaddl
insb
jl
call
imul
ret
or
pop
subl
fldt
mov
faddp
movsb
and
dec
xchg
push
shl
cwtl
xchg
add
int3
out
sbb
add
fsubrl
hlt
adc
ret
test
xchg
push
inc
fdivl
jne
out
sahf
xchg
loopne
test
adc
mov
dec
stos
pop
xchg
sub
rcrl
xor
sub
int
ficomps
pop
test
dec
imul
cltd
sbb
sub
cld
out
sbbb
ret
nop
das
outsl
jnp
lock
les
xchg
out
xor
mov
cmp
dec
fnstsw
sub
repz
mov
inc
push
mov
hlt
nop
add
cmpsl
and
mov
dec
cs
inc
push
in
sub
mov
mov
nop
lods
xchg
or
adc
int3
roll
add
mov
test
xchg
cmpsl
fdivrl
sbb
mov
js
pop
movsl
xchg
loop
mov
push
int3
mov
addr16
leave
add
std
insl
xchg
and
xor
pushf
push
iret
adc
test
lret
jge
int3
mov
sbb
pushl
jae
or
test
mov
push
xchg
inc
push
lock
jmp
sbb
lret
push
mov
mov
xor
mov
repz
mov
mov
adc
push
mov
popa
outsl
or
and
data16
sbb
xchg
mov
xchg
push
pushf
mov
xor
and
cmpsb
notl
rorb
addb
xor
sbb
aam
and
fdiv
popa
shr
cltd
dec
push
xchg
sbb
mov
sub
into
sub
in
std
add
lret
into
out
push
mov
cmp
mov
or
cmc
aad
push
dec
pusha
mulb
test
mov
xor
mov
jnp
aam
fisttpll
out
lds
out
lods
jge
ja
cmc
mov
outsb
xchg
sub
divb
push
inc
adc
sub
insb
stos
pop
lret
lahf
adc
stos
push
scas
dec
push
add
sub
jle
shlb
add
test
lea
ficoms
cmp
jb
jp
leave
fwait
movsb
aaa
cmpb
pop
jnp
push
cmpsb
ret
pop
sub
out
jg
pop
shl
mov
cs
out
pop
inc
stc
mov
push
mov
sub
mov
insl
aas
sbb
fcoml
push
xor
mov
mov
sahf
scas
xchg
cmpb
jle
xchg
int
inc
sbb
xchg
movsl
ljmp
adc
stos
jg
scas
xchg
xlat
xchg
inc
inc
loop
shl
mov
repnz
add
scas
int
cmp
sbbl
inc
enter
sub
call
addr16
sahf
shrl
jae
mov
jno
mov
jmp
jnp
repz
fs
clc
mov
sbb
mov
outsl
pop
mov
fwait
inc
mov
and
add
loopne
jne
lods
mov
int3
outsb
out
shl
clc
lods
out
lods
sub
pop
stos
mov
sub
or
mov
sub
lods
pop
sahf
mov
xor
je
aas
mov
add
mov
or
dec
out
enter
push
lock
stos
mov
inc
sub
xor
arpl
repz
fs
es
jno
inc
dec
bound
mov
cmp
adc
ret
and
out
daa
js
ss
jecxz
jmp
call
fists
aam
adc
push
les
sub
pop
inc
cmp
xorb
leave
in
outsb
pop
sbbb
mov
jne
push
and
fldl
mov
fwait
outsl
and
sbb
pop
mov
out
xor
inc
lcall
decb
fcmovnb
cli
cmpsb
lods
or
dec
dec
sub
pop
push
push
ds
jbe
test
enter
xchg
push
lahf
fs
adc
je
ret
das
enter
jne
rcrb
jg
outsl
arpl
es
mov
xchg
add
pop
cmp
jmp
shl
xor
stos
dec
aad
adc
or
lds
loop
mov
cmp
xor
sbb
xor
and
fwait
add
cli
les
lcall
adc
jb
repnz
std
sub
jo
adc
fidivs
je
sbb
jmp
jb
add
mov
mov
loopne
sub
jb
hlt
mov
dec
std
aad
bound
lcall
add
mov
nop
xor
xor
cmp
push
pop
fcmovnu
xchg
fcoms
mov
jge
outsb
push
mov
cwtl
lock
jge
fiaddl
ja
es
cmp
pop
fadds
stos
xor
roll
jle
dec
push
sahf
mov
sti
push
enter
mov
dec
xchg
cmp
cmc
push
pop
call
test
int3
push
loope
sub
pop
sbbb
cmp
imul
lcall
in
ret
cmp
mov
jae
hlt
gs
push
rclb
lret
mov
stos
or
jb
pop
ljmp
push
mov
push
add
cmp
into
stos
in
push
xchg
sbb
fistl
push
xchg
xchg
shrl
mov
ffreep
dec
ret
daa
into
icebp
pop
mov
imul
add
xorb
mov
bound
ss
xor
sub
cmp
cmp
imul
xorb
mov
sub
add
stc
dec
lahf
nop
mov
inc
and
xor
push
mov
dec
mov
sub
jge
ljmp
xchg
pop
enter
lret
sub
add
inc
mov
mov
scas
test
aam
dec
arpl
sub
xorl
mov
inc
jo
popf
aas
cmp
adc
imul
xchg
stc
pop
sarl
jbe
cli
hlt
daa
add
enter
addl
int
inc
out
mov
add
mov
mov
mov
int3
xchg
add
loope
ss
shrl
inc
rep
push
scas
dec
out
lcall
push
std
mov
je
lcall
sub
jmp
aam
clc
xadd
dec
hlt
rolb
inc
movsl
inc
bound
scas
icebp
int3
mov
push
ljmp
ret
xchg
and
and
and
movsb
mov
ficoms
xchg
pusha
insb
fsubrs
jns
cwtl
pop
adc
std
sti
lock
ss
dec
adc
xor
push
xor
jge
adc
adc
xchg
fwait
push
xchg
int3
cltd
push
mov
fdivs
xchg
loop
push
outsl
jle
push
fisttps
inc
mov
subb
sub
mov
mov
jb
and
jecxz
mov
sbb
mov
test
or
into
sbb
outsl
rolb
mov
mov
rolb
cmp
cltd
inc
adc
jl
out
jns
or
push
int3
sti
push
js
movsb
hlt
jnp
mov
daa
mov
mov
jns,pt
sub
adc
mov
iret
push
pusha
xchg
adc
call
adc
ja
jg
hlt
in
xor
loopne
or
outsb
nop
push
sbb
jae
push
call
pop
and
std
pop
adc
loopne
inc
dec
lods
sbb
dec
jg
xor
arpl
push
xor
mov
enter
cmpxchg
jp
jb
sahf
mov
add
and
or
jge
addr16
aam
rcll
cmpsb
sub
and
pop
cmp
inc
insl
push
pop
mov
or
dec
dec
xlat
mov
cwtl
jbe
pop
shlb
pop
and
sbb
lods
pushf
push
mov
cmp
jl
cli
aad
lea
dec
jl
in
mov
and
in
repnz
int3
mov
jl,pn
push
pop
adc
je
lea
sub
mov
lods
and
jge
xchg
mov
loop
les
fdivp
jno
in
rcrl
test
addr16
dec
and
sahf
jl
lcall
cmp
mov
aas
jge
xchg
mov
mov
add
in
inc
add
adc
mov
adc
push
mov
inc
sbb
jns
cmpl
or
mov
out
shlb
add
clc
xchg
mov
mov
add
gs
lret
mov
jo
push
lcall
scas
mov
add
mov
xor
mov
jbe
xchg
xor
js
imul
or
out
loope
dec
loope
fwait
pusha
mov
jne
test
call
pop
pushf
adc
scas
adc
cmp
enter
cmp
sub
sbb
push
xchg
lock
das
mov
ljmp
push
mov
in
rcr
bound
mov
dec
outsl
push
stos
js
loopne
push
mov
es
enter
dec
and
in
imul
mov
in
test
pop
dec
out
loopne
cmc
fdivl
mov
dec
dec
cmp
mov
cmp
inc
in
inc
mov
idivb
popf
aas
cmp
and
inc
push
cmp
mov
mov
push
sub
repz
nop
aad
jg
adc
mov
lds
lret
sbb
enter
into
pop
xor
pushf
or
mov
mov
dec
fmull
or
xchg
inc
jmp
or
int
addr16
test
xchg
in
cmc
sarb
push
and
loopne
in
ja
xchg
cmp
nop
sub
lods
xchg
mov
fildll
jmp
sbb
int3
enter
adc
ljmp
ljmp
or
out
cmp
sbb
lods
adc
sub
xchg
pop
sub
xor
ret
xchg
lods
xlat
dec
fdivs
xchg
push
inc
xchg
lods
pop
sbb
cmp
mov
std
mov
jne
xchg
popa
xor
dec
insb
int3
push
sbb
add
xor
mov
and
test
int3
jne
mov
pop
mov
mov
jl
into
mov
pop
hlt
cmpb
in
xor
pop
sbb
in
leave
js
or
fdivs
loopne
mov
aaa
push
add
mov
jae
jmp
shr
jle
adc
aas
xor
loop
add
xlat
mov
imul
sub
mov
cmpl
cmpsl
inc
and
test
xchg
out
mov
dec
xor
jge
pop
and
addr16
repnz
fs
inc
xchg
nopl
imul
jmp
test
mov
jle
outsl
data16
adc
inc
loop
mov
sub
jle
cmpb
popa
jns
pushf
inc
repz
cmp
scas
cmp
sti
std
orl
xlat
mov
fisttpl
into
jp
fisubrs
jno
dec
leave
fldl
scas
iret
orb
into
cmpsb
dec
lea
js
ss
imul
push
cmp
stos
pop
inc
pop
inc
incl
or
dec
mov
sub
cs
pop
aas
lods
xor
mov
push
outsl
gs
into
mov
push
repnz
pop
imul
shll
add
std
xchg
sub
mov
fstp
cmc
sarb
movsb
sbb
sahf
mov
cmpsl
mov
mov
jo
test
loop
call
sub
lret
dec
mov
mov
push
xor
in
cmp
stos
dec
movsb
or
cmp
pop
mov
dec
out
push
mov
and
cli
mov
mov
and
or
dec
jecxz
cmp
add
cwtl
lcall
dec
sub
and
push
imul
test
cmpsl
push
and
daa
xchg
sub
adc
negl
out
lret
or
and
test
mov
inc
mov
sbb
inc
lds
outsl
mov
loopne
mov
add
adc
inc
dec
add
mov
enter
lahf
mov
pop
mov
xchg
std
pop
sub
orb
push
and
push
sbb
and
fstps
xchg
mov
das
push
mov
sub
cmp
mov
int3
adc
jne
jnp
insb
arpl
mov
scas
shll
inc
stc
fisttpll
push
xor
in
sbb
rorb
inc
xchg
enter
aas
es
xor
hlt
xchg
cmp
mov
sbb
add
jmp
ret
mov
and
mov
and
inc
adc
mov
push
incb
and
adc
pop
jno
negb
movsl
jno
or
jecxz
adc
sahf
movsb
push
bound
movsb
inc
and
out
stos
repnz
fs
xor
sub
push
jle
mov
push
leave
in
stos
mov
iret
movb
jecxz
lods
push
cs
xchg
or
sub
xchg
sub
cmpsb
repz
bound
cmp
mov
xchg
mov
mov
push
and
xchg
dec
nop
mov
js
sbb
xchg
mov
lods
and
adc
dec
jg
pmaxub
clc
ss
std
jmp
pop
negb
push
adc
lfs
add
add
outsb
jmp
mov
or
and
enter
shll
fcmovne
lods
pop
push
in
fwait
lret
out
mov
mov
mov
jnp
jb
add
jmp
jp
cli
push
adc
gs
mov
inc
mov
mov
dec
mov
jne
sbb
xchg
lods
fldenv
xchg
pop
mov
mov
adc
negl
das
mov
in
sbb
test
mov
adc
add
push
sahf
adc
fs
dec
xor
or
decl
jmp
mov
cmp
pop
dec
mov
rorl
mov
and
repnz
test
inc
int3
dec
sbb
pop
out
fiadds
mov
jmp
mov
popf
mov
fwait
ret
dec
repz
jns
addb
lahf
les
push
sub
or
sar
js
mov
push
enter
popf
jl
mov
into
dec
adc
adc
stos
aas
jl
test
inc
cs
pop
lret
das
add
in
mov
mov
push
arpl
jle
daa
imul
or
ljmp
in
mov
sub
push
dec
push
push
push
mov
leave
push
scas
inc
gs
jecxz
sub
enter
cmp
dec
rcl
inc
inc
inc
and
insb
outsb
inc
lret
inc
mov
sahf
sub
mov
add
and
repz
stos
fnstsw
leave
mov
mov
scas
outsl
xor
dec
std
lret
fmuls
aad
adc
jno
into
lret
mov
dec
mov
imul
out
jge
cmp
movsl
testb
scas
loopne
and
xor
aam
out
pop
xlat
imul
aad
enter
dec
push
or
sbb
cmp
adc
enter
lret
add
cmp
cmc
sub
add
nop
aam
or
cli
es
jo
xor
push
cmp
dec
outsb
movsl
mov
cmpb
faddp
popa
push
and
jle
inc
aaa
pop
in
sub
xlat
add
push
lods
mov
andl
ret
xor
xchg
retw
int
cmp
jecxz
mov
lock
inc
out
ret
test
mov
mov
pop
in
pop
movsl
aad
xchg
sub
xor
push
inc
or
cmp
fistpll
lcall
pop
pop
push
and
aam
or
mov
les
lock
sarl
les
inc
jge
repz
mov
adc
pop
or
sbb
in
jp
sub
cltd
sbb
popl
sub
call
xchg
ror
mov
mov
jns
adc
scas
or
out
mov
cmp
shlb
lcall
sbb
jns
ljmp
pop
popf
popa
sarl
in
cmp
fildl
add
sub
bnd
test
cmp
js
out
shrb
mov
adc
out
call
lret
mov
xchg
and
mov
push
inc
sub
je
rolb
lret
rclb
addr16
mov
push
jb
mov
pop
mov
or
test
loope
lret
les
sti
xor
push
mov
fbstp
inc
adc
xorl
xchg
add
inc
sub
xor
out
add
cwtl
mov
jnp
addl
cmp
pop
sub
push
push
test
push
fsubrs
cs
fwait
xlat
mulb
mov
pop
es
popa
mov
adc
xchg
push
mov
cmp
cmp
repz
lock
insl
mov
rorb
xchg
into
jae
push
push
outsb
jo
movsb
jns
int3
dec
cmpsb
test
sub
popf
decb
aaa
aam
mov
mov
aaa
movl
sbb
call
xor
pop
shrb
iret
sbb
cmp
sub
cmp
push
push
sbb
mov
cltd
lea
adc
mov
push
xchg
mov
pop
lea
jb
add
loope
ljmp
leave
aam
mov
fdivl
adc
inc
lcall
mov
or
and
fdivr
sbb
adc
xchg
pusha
push
std
addb
adc
dec
add
bound
mov
inc
xor
dec
mov
cmp
jb
and
lret
pop
incb
jmp
cmp
push
rcrb
inc
shl
adc
and
mov
aas
push
xchg
push
push
adc
sub
adc
mov
sbb
mov
imul
insl
dec
scas
pop
inc
adc
in
pop
js
rcrb
push
nop
shrb
cwtl
mov
out
call
rcrl
mov
push
add
push
sbb
mov
pusha
rorl
or
aam
fisubs
pop
aam
pop
ljmp
bound
xchg
scas
or
fnstsw
leave
and
xchg
sub
mov
mov
jns
sbb
push
inc
adc
movsl
jbe
frstor
jle
mov
test
push
ret
add
push
mov
cltd
push
shrl
syscall
jno
loopne
ja
push
pop
push
xor
fwait
mov
or
fdivs
inc
jg
aam
mov
insl
movsb
scas
daa
je
cld
sbb
das
repnz
mov
xchg
out
out
dec
aaa
das
aam
icebp
and
dec
and
inc
test
cltd
cld
or
push
lret
inc
fsubrs
in
mov
pop
out
dec
dec
xchg
adc
or
dec
sbb
arpl
push
sbb
xchg
mov
lahf
cs
xor
jmp
cld
enter
xor
pop
sub
loop
xchg
jecxz
sub
pop
or
ffreep
pop
pop
inc
repnz
scas
movsb
daa
mov
cmp
fdivs
mov
repnz
repnz
mov
cmp
cltd
lahf
add
test
loope
fistps
int
test
cmc
clc
sub
lods
js
loope
push
mov
jo
or
mov
fsts
scas
xor
xorb
in
jo
mov
fistps
ljmp
aas
ret
sbb
xchg
das
jno
pusha
test
int
dec
push
lret
and
jne
and
mov
push
and
fs
enter
imulb
and
iret
loopne
jge
stc
insl
in
js
mov
sarb
xor
and
outsl
mov
lcall
cmp
cmp
push
cs
in
sti
in
pop
mov
flds
fwait
gs
aas
or
inc
fsubs
xchg
push
inc
xchg
hlt
daa
mov
or
enter
inc
mov
sbb
inc
pop
xor
xchg
xor
jmp
daa
int3
iret
push
js
insl
dec
inc
popf
mov
rclb
icebp
std
je
jne
scas
push
pushf
jl
daa
mov
jnp
in
or
pop
stos
and
enter
imull
js
pop
icebp
pop
enter
sbb
in
mov
ljmp
test
xlat
push
hlt
and
mov
dec
cltd
xor
call
ljmp
std
fidivrl
aad
out
xor
or
pop
push
out
movsb
inc
mov
xor
les
jbe
lcall
mov
mov
pop
dec
push
jae
add
and
mov
repnz
or
fcoml
movsb
sub
mov
sti
mov
aam
sbb
add
mulb
iret
dec
inc
aad
in
rclb
stc
push
dec
lea
push
arpl
movsl
cmp
xchg
mov
aaa
fcompl
inc
stos
sub
es
cld
sbb
jmp
cmp
push
cli
or
rcr
icebp
mov
int
fmull
jge
loope
push
mov
cmp
cltd
sahf
int
xrelease
fbld
mov
in
fs
cmp
and
xchg
fisubl
and
and
and
sarl
inc
lock
push
inc
lret
push
repnz
and
add
andl
mov
jecxz
fsubs
xor
std
mov
mov
cmp
repnz
sub
fcompl
mov
push
shll
mov
insl
mov
stos
push
push
rcr
and
stos
jno
dec
hlt
sbb
sub
fldenv
dec
pop
lcall
imul
xchg
jmp
ss
cltd
mov
push
call
sub
add
xor
add
or
pop
cmp
leave
mov
movsl
ljmp
lods
gs
data16
leave
fistpl
faddl
xor
stos
sbb
sbb
ljmp
xor
enter
inc
jmp
stos
fmuls
aam
xchg
lods
insb
sub
in
cmp
loopne
aaa
into
dec
inc
xchg
lock
mov
aad
aas
insl
push
ret
in
sbb
data16
cli
pop
dec
das
scas
mov
xor
mov
loop
test
ret
nop
xor
cmp
movsb
pop
imul
jmp
jle
test
fcmovnu
arpl
cmp
mov
xor
jno
and
jb
mov
stc
push
ljmp
adcl
into
nop
jae
dec
int
daa
gs
daa
popl
stos
inc
fidivrl
pop
rcr
or
mov
rorb
xchg
je
repnz
mov
cli
icebp
sub
cld
sub
inc
ret
cmp
hlt
adcb
scas
and
mov
loop
xlat
mov
loop
push
jbe
fwait
mov
dec
add
sbb
gs
fldt
push
sbb
mov
pop
sub
mov
cltd
add
pop
mov
mov
mov
cmpsl
rcpps
js
daa
or
int
xorb
push
mov
fists
xchg
xor
js
repnz
or
push
sbb
faddl
jge
sub
popa
jg
inc
gs
out
hlt
pop
push
and
loop
out
dec
xchg
mov
cmp
adc
jmp
sarl
push
mov
pushf
gs
mov
popa
and
fwait
cmpsb
mov
inc
loopne
xor
jbe
jne
insb
int
pushf
add
imul
in
out
and
push
sbb
xchg
int3
mov
adc
pop
dec
jnp
xchg
mov
cmp
ret
out
sub
xchg
mov
rclb
mov
pop
inc
repz
add
repz
push
sbb
jno
data16
std
rcrb
daa
jne
pop
xor
test
mov
and
pop
cmp
in
icebp
jns
sbb
xchg
xchg
rcrl
icebp
and
pop
xor
xor
lret
push
mov
jmp
into
push
lods
pop
jbe
fidivs
mov
fiadds
repnz
push
inc
pop
scas
scas
mov
ret
clc
enter
mov
sbb
pushw
in
inc
aaa
dec
mov
pop
je
xor
and
or
push
sbb
in
nop
test
sbb
or
test
push
xchg
push
or
mov
ficomps
std
in
insl
pop
lods
and
sbb
and
movsb
or
sbb
add
into
dec
pop
mov
sub
xchg
shlb
cmp
adc
sbb
cmpsb
fsubrs
std
insb
mulb
jb
inc
cmpsb
xchg
xor
pop
loope
or
cs
mov
push
or
cli
cltd
jmp
adc
ret
mov
mov
decl
xor
mov
sbb
bound
pop
inc
jae
les
or
ljmp
mov
adc
daa
shlb
push
cwtl
test
cmp
dec
stos
scas
das
push
adc
inc
sahf
lds
repnz
ljmp
and
iret
pop
and
lods
mov
jae
push
xchg
cltd
xor
mov
pop
mov
lods
jmp
or
hlt
cmp
rorl
sbb
mov
push
push
outsl
sbb
movsb
dec
ds
outsl
call
cmpsl
ja
sbb
cltd
sahf
cmc
push
xor
cwtl
iret
dec
daa
or
or
jae
iret
dec
outsl
popa
iret
mov
xor
push
jo
cltd
or
test
sbb
add
mov
cs
mov
clc
outsl
loopne
xchg
push
adc
pop
xor
fadd
dec
mov
xor
cwtl
jbe
mov
daa
lds
sub
test
add
insl
mov
cltd
xchg
mov
or
dec
es
sub
inc
fisubrl
cli
iret
jp
adcb
data16
fcoml
data16
mov
or
push
sub
jbe
ja
mov
addl
inc
fwait
mov
jg
ficoms
or
psubw
sbb
scas
add
lcall
imul
jge
add
fistpl
movsl
in
gs
int3
mov
cmpsl
jmp
xchg
imulb
xchg
cmpl
dec
dec
andb
sub
xor
or
std
jp
and
lahf
cs
mov
iret
jbe
sub
mov
mov
leave
xchg
subb
add
ss
insl
mov
xlat
imul
shll
jecxz
mov
xchg
mov
xchg
inc
xlat
outsb
mov
sbb
xchg
sti
push
out
cmp
inc
add
pop
pop
ret
jae
jo
dec
xchg
lldt
xchg
jns
mov
cmp
pop
adc
add
and
icebp
pop
sbb
mov
xchg
test
fmuls
fdivl
orb
cmpsb
gs
stos
fmull
xlat
lea
mov
in
nop
pushf
out
add
shlb
ss
call
mov
loope
sub
and
pop
add
pop
and
mov
flds
or
pop
fcmovnbe
pop
test
daa
add
push
scas
into
jb
add
sti
adc
mov
negb
int3
cli
stos
jno
sar
stc
or
jae
movsl
xor
adc
mov
mov
stc
xchg
leave
jp
pop
leave
mov
jmp
fwait
mov
loope
faddl
jno
inc
ret
orb
mov
mov
imul
test
mov
or
and
cld
sbb
push
cmp
lret
out
jle
mov
sbb
or
shrb
test
inc
rcrb
sti
xlat
pop
fsubrp
cmpsb
inc
xor
xor
mov
in
cmpsb
mov
inc
and
ret
gs
mov
das
sbb
inc
ret
xchg
ss
sahf
shl
inc
mov
movsb
mov
dec
insb
dec
sbb
faddl
out
pop
insl
mov
push
cmpsl
shll
and
std
pushl
lds
loop
orb
push
fildll
hlt
andl
sub
sub
sub
jbe
mov
aad
xchg
movsb
mov
cld
mov
mov
xor
aas
jecxz
mov
mov
or
lods
fadds
xor
scas
icebp
cmp
icebp
outsb
rol
xchg
stc
sub
sub
fs
das
lods
lods
sub
movsl
jo
xchg
adcl
adc
xor
cmp
xchg
movsb
xchg
gs
je
les
fsubrl
lds
inc
and
adc
add
pushf
mov
scas
imul
adc
out
lahf
push
rclb
les
cmc
outsb
and
xchg
mov
jp
mov
xchg
iret
sbb
repz
scas
mov
inc
stos
jo
cltd
and
or
lahf
out
sub
and
stc
enter
or
mov
mov
scas
xor
lcall
dec
mov
mov
fucomip
stos
jno
out
outsl
xor
fnstenv
cmpsb
test
sbb
gs
xchg
inc
lods
pop
xlat
add
pushf
fsubr
scas
jl
mov
rcll
out
sarl
in
bound
inc
arpl
and
push
and
leave
lcall
mov
mov
call
loope
outsb
inc
das
xchg
inc
outsl
push
jl
ret
push
jmp
arpl
or
ret
jbe
stos
mov
cltd
pop
lds
jns
mov
pop
fidivs
test
sub
and
out
mov
pop
xchg
outsb
and
sbb
mov
add
and
jno
mov
or
jg
in
daa
or
div
cld
cld
or
ret
dec
mov
xchg
xlat
and
orl
cmp
test
das
int3
jg
pop
xor
sbb
inc
enter
push
shr
sbb
clc
sub
mov
mov
xlat
shll
xor
fwait
pop
mov
test
popf
xchg
daa
mov
ljmp
test
mov
mov
mov
loopne
iret
xchg
jno
inc
xchg
scas
or
adc
clc
addr16
insb
xchg
gs
call
pop
push
dec
ljmp
mov
mov
fistps
add
adc
pop
cwtl
jecxz
test
adc
inc
test
jmp
push
pop
xor
xor
loopne
dec
cs
mov
push
jge
lods
pop
out
lret
popa
mov
aad
loopne
jns
cmp
les
in
push
aad
sub
jnp
mov
jne
dec
es
shl
inc
es
xor
int3
xor
jecxz
push
enter
mov
in
sbb
lret
push
pusha
into
jnp
mov
std
inc
jbe
test
mull
push
mov
shrl
pop
jle
xchg
ss
sub
int3
ret
aam
adc
inc
mov
fcmove
mov
arpl
in
push
push
fcomi
repz
pop
lods
mov
inc
jmp
cmp
dec
xchg
sahf
scas
push
adc
pop
cli
nop
mov
mov
in
out
push
mov
lods
std
pop
inc
push
cmp
or
hlt
jp
jb
xchg
xor
mov
mov
daa
jb
sub
jns
aad
mov
repz
push
push
inc
out
bound
clc
pop
popf
stc
cmpsl
sub
cmp
sahf
sub
push
mov
cmp
ljmp
or
arpl
jle
scas
cmp
stc
ljmp
je
sahf
adc
sbb
mov
out
out
iret
jae
dec
pop
mov
enter
xchg
stc
xorb
and
fdivr
bound
enter
ret
jae
faddl
mov
push
pop
xor
adc
testl
clc
adc
sbb
push
daa
inc
mov
cmp
negl
insl
and
js
mov
icebp
mov
xchg
jg
flds
fisubrs
adc
lds
loop
sub
jne
lods
cmp
subb
sbb
xor
jl
fidivs
test
pop
out
lock
xor
pop
les
fucomi
out
in
and
pop
push
out
lods
or
and
xchg
lea
or
jecxz
push
imull
leave
fistl
fnstcw
aaa
sub
xor
xor
xchg
and
pop
icebp
fdivrp
call
je
andl
cld
pusha
cmpsb
repz
and
cmp
clc
in
hlt
jp
imull
out
out
mov
mov
push
mov
mov
xchg
jns
in
fwait
lock
jge
pop
pop
jecxz
adc
adc
hlt
xchg
inc
jecxz
insb
xchg
fs
shr
scas
ret
sub
pop
xor
jecxz
stos
add
addr16
ret
sbb
mov
xchg
sete
adc
inc
sbb
xor
mov
out
jmp
jl
or
dec
fldenv
dec
add
movsl
decl
pop
mov
jle
mov
push
mov
into
and
mov
add
xchg
adc
push
hlt
sub
bound
cmpb
jo
stos
and
sub
sub
loop
fsubr
aad
push
cmpsl
mov
mov
mov
mov
sbb
xor
inc
xor
mov
cmp
push
cmp
mulb
test
mov
cld
push
in
jl
out
xchg
aam
dec
fsubp
out
cmp
shl
mov
fimuls
test
insl
mov
out
or
test
popl
sbb
pop
sbb
xor
mov
ja
dec
and
je
adc
xor
pop
fcoml
out
jle
adc
jle
mov
mov
cltd
and
push
pusha
sar
pusha
jb
cwtl
inc
ja
mov
test
cmpsb
ret
mov
jmp
adc
add
add
in
pushf
ds
add
popa
inc
mov
mov
add
sahf
rcll
aas
loop
push
jb
sub
insl
dec
icebp
or
fsubrs
sbb
xor
push
out
out
fcompl
ljmp
out
das
sbb
js
test
sbb
pop
std
fldl
adc
mov
clc
cmp
mov
insl
mov
fidivs
push
hlt
sbb
hlt
icebp
sbb
jbe
or
out
movsl
mov
insb
or
sti
adc
mov
iret
pop
ret
int
fimull
jno
jl
cld
mov
fdivrl
jno
inc
xchg
push
pusha
aad
xor
hlt
cmp
scas
cwtl
cli
lret
xchg
dec
and
bound
fs
jbe
or
addr16
stc
pop
add
xor
test
sub
mov
xchg
or
js
sbb
gs
sub
push
push
jecxz
xchg
sarl
int3
test
jl
in
fwait
cmp
push
repz
pusha
repnz
fdivr
rol
push
loope
test
push
ds
adc
add
stos
cmpsl
lcall
pusha
mov
repnz
push
les
cmpsb
leave
sti
test
addps
cmc
sbb
xor
fwait
rcl
testl
shl
jne
loopne
pop
xchg
jecxz
mov
sbb
lods
lahf
push
mov
jns
cmp
cmpl
jae
mov
or
arpl
cmp
scas
sbb
and
lock
repz
push
std
repz
jg
fdivrs
push
sbb
pop
das
ljmp
pop
mov
mov
cmpsl
out
pop
in
insb
fisubl
cmpsb
icebp
jnp
pusha
cli
pop
nop
pop
lods
push
lds
and
xchg
dec
out
in
mov
cld
lods
outsl
fcoms
imul
sub
mov
mov
jmp
movsl
sbb
mov
cmp
xor
inc
dec
jl
shlb
rclb
popw
ret
inc
les
cli
or
jae
int3
cmp
mov
sub
mov
inc
xor
out
aas
sub
testl
cli
dec
into
or
out
aad
cmp
mov
lock
adc
imul
dec
mov
fnsave
ficoms
jnp
scas
and
mov
fwait
int
int3
lock
daa
pop
or
aad
dec
gs
add
inc
iret
bound
clc
mov
pop
ljmp
cmp
mov
push
mov
fcmove
cmp
adc
or
lcall
mov
fwait
adc
loope
fxch
add
push
jno
xor
xchg
imul
push
dec
into
xchg
shr
rorb
sub
mov
icebp
mov
ficoms
lea
stos
sub
mov
xchg
cli
inc
sbb
shll
xor
dec
pop
dec
mov
sbb
aam
jb
das
or
pop
cmp
jmp
mov
and
imul
cmpsb
xor
sub
xchg
subb
call
incl
jno
xchg
jge
pop
mov
xchg
mov
das
ljmp
pop
mov
mov
das
jo
adc
add
gs
lds
pop
push
mov
push
or
fisttpll
and
dec
adc
lahf
xor
je
data16
push
test
mov
repz
aas
repz
ja
adc
daa
push
add
mov
and
mov
sub
mov
test
push
rcrl
jl
filds
add
enter
add
sar
mov
call
push
into
xor
sbb
test
sbb
stc
add
es
mov
lcall
xchg
push
lods
fcmovnu
push
or
cmp
outsb
aas
repz
mov
fdivrp
jl
mov
adc
pop
sub
cwtl
aam
and
add
pop
or
sahf
pop
xchg
mov
rcr
cmp
cmpsl
fldt
incl
outsb
js
data16
jg
out
sti
jmp
cmp
scas
imul
lea
shlb
sahf
cmp
or
add
pop
call
push
sub
xchg
sbb
sub
push
daa
fcoml
pop
mov
add
and
push
pop
fdivl
cmp
push
in
lock
rorb
sub
mov
ja
add
loop
fidivl
xchg
sbb
mov
mov
or
inc
inc
push
imul
jno
stos
lahf
or
aad
add
das
cmpsl
xchg
or
jge
lret
out
pop
dec
mov
push
xlat
aad
lods
cmc
cmpsl
js
and
jo
jne
negb
inc
insb
into
adc
daa
aas
mov
push
pop
mov
jb
popa
mov
push
jmp
loope
pop
sbb
imull
sub
cs
ljmp
hlt
movsb
inc
lods
xchg
jl
lods
jg
mov
inc
fists
pop
clc
mov
repnz
lods
sub
fbstp
out
movsl
jbe
sub
add
ljmp
gs
dec
dec
inc
lds
cld
loope
outsl
aam
add
sub
std
rcrb
les
pop
inc
jnp
add
or
inc
xchg
nop
cmpb
jl
add
or
xor
jge
push
insb
and
xor
loope
cmp
add
pop
mov
mov
mov
push
lret
xor
dec
add
pop
jae
mov
outsl
push
sub
add
mov
fs
pop
or
xchg
lds
iret
mov
lds
cmp
not
je
sub
mov
mov
sbb
inc
push
out
outsl
mov
mov
xchg
push
add
jne
pop
inc
addr16
xor
push
inc
aad
and
mov
lcall
mov
fstl
loop
pusha
int3
sub
ss
mov
ljmp
fisubl
cwtl
push
lahf
mov
ret
mov
cmp
jne
subb
dec
push
mov
jb
xor
cmp
jl,pt
mov
clc
jmp
sbb
mov
mov
adc
lret
pminub
aam
mov
pop
sub
or
dec
sbb
jmp
mov
test
jmp
insl
push
imul
mov
imul
sub
fmul
ljmp
icebp
jns
stos
stc
pop
mov
les
xchg
iret
fcoms
sub
popf
daa
mov
or
dec
add
stc
adc
mov
je
pop
jmp
lahf
cmpsl
out
lahf
mov
xchg
inc
fistpl
ljmp
fs
jg
loope
std
lcall
cltd
iret
pop
pop
adc
push
push
sbb
mov
jb
adc
inc
icebp
les
sub
cmp
je
xor
jnp
xor
mov
inc
aaa
xor
cmp
pop
sbb
test
dec
ja
or
inc
fisubrl
xchg
in
jne
and
dec
leave
pop
jp
lret
mov
push
mov
icebp
xor
repz
pop
gs
or
int3
movsb
dec
or
stc
fmul
cli
push
daa
cmpsl
jp
inc
push
and
aad
xchg
mov
das
movsl
pop
adc
cmc
pop
cld
push
jnp
push
divb
mov
out
or
pop
push
add
xor
or
rorb
or
fs
in
sbb
pusha
call
nop
mov
inc
add
push
shll
jle
pop
mov
cld
inc
idivl
pop
mov
rcr
ljmp
cld
pop
jle
mov
loopne
ds
sbb
loope
xchg
or
jno
fmull
scas
xchg
test
jnp
push
adc
test
test
les
cmp
push
les
out
xchg
flds
in
mov
nop
das
jmp
jae
mov
or
lods
outsb
push
mov
fisttps
lock
inc
fucomi
or
mov
inc
add
lds
xchg
mov
std
pop
iret
jmp
pop
sarb
add
and
cmp
dec
jns
pop
gs
lods
fwait
jp
stos
inc
dec
out
sbb
pop
push
jo
sub
sbb
int3
xchg
subb
sub
and
cmpsb
lds
orl
adc
xchg
push
repnz
mov
bound
hlt
scas
scas
sbb
sbb
and
cmc
and
push
pushw
cmpsl
jp
insl
js
sbb
adc
dec
ficompl
lds
fwait
sbb
lcall
in
lock
cmp
scas
cmpsl
or
jns
lods
inc
push
inc
jns
add
jo
jp
mov
or
inc
or
cs
add
mov
inc
dec
adc
push
push
sub
aam
xchg
sub
xchg
adc
pop
xchg
mov
sub
push
fidivrs
mov
shrl
push
jbe
inc
daa
sar
xor
mov
shrb
test
fst
mov
stos
ss
cmp
jle
andl
cmpsb
lods
insb
imul
fldcw
mov
sbb
aad
inc
notl
add
cmpsl
lds
push
push
mov
pop
cmp
sbb
insb
pushf
rol
out
mov
mov
xchg
push
fnsave
inc
js
xor
lahf
push
jbe
jbe
js
sub
nop
aad
lea
sub
dec
scas
in
iret
outsb
bound
pushf
mov
mov
aaa
jg
pop
aas
inc
pop
outsb
rorl
movsl
sub
daa
or
nop
adc
jne
repnz
popa
push
push
rol
sbb
fldcw
jge
dec
xchg
jle
in
cmpsb
gs
call
dec
je
xchg
dec
inc
sub
dec
movsl
mov
adc
ljmp
xchg
sbb
push
sub
dec
je
add
mov
sub
je
rcrb
inc
jnp
cmp
push
lea
psraw
jle
xor
ret
fwait
sub
sbb
and
arpl
mov
into
jp
cmc
pop
loop
pushf
xchg
jmp
les
daa
scas
sbb
cld
dec
mov
mov
test
dec
mov
jecxz
pop
test
mov
mov
pop
insl
inc
pop
scas
mov
fisttpll
xchg
xor
and
sbb
adc
shll
test
pop
addb
inc
loope
fnstenv
and
pop
dec
test
insb
or
shrl
and
cmpsl
sub
cmc
repz
loop
jle
sub
movsb
imul
mov
xchg
xchg
and
ret
and
and
push
mov
xchg
pop
shll
test
mov
imul
call
call
cli
xor
pushf
mov
add
sbb
jne
or
sbb
ret
mov
out
jg
xchg
orb
cmpsb
inc
lods
jmp
inc
push
jge
push
sub
push
test
cmpsb
mov
jne
test
cmpsl
lahf
jg
push
mov
loopne
pop
adcl
jne
pop
dec
adc
dec
xor
daa
and
xchg
fs
mov
mov
imul
outsl
add
add
jbe
add
popf
aad
lahf
data16
insl
pop
cmpsb
mov
icebp
jnp
jo
arpl
jae
or
lcall
mov
test
testb
rorb
jp
scas
cmpsl
mov
xchg
out
rcrb
sub
sbb
mov
mov
push
ret
push
mov
or
mov
push
sbb
jo
and
lock
adc
jb
fisubrs
inc
sbb
movsb
dec
movsl
cmpsb
movaps
mov
mov
push
add
cmc
ret
mov
out
js
mov
shr
add
loop
sub
ja
pop
pushf
ljmp
xchg
std
push
pop
sbb
jecxz
sbb
mov
movsl
lods
rcrl
inc
mov
out
shrl
add
dec
fldl
mov
rorb
imul
mov
in
cmp
pop
add
movsl
data16
xlat
add
aas
and
xor
pop
adc
inc
lea
cs
shlb
imul
and
mov
popa
dec
imul
int3
adcl
cmp
cmp
cmp
pop
or
mov
push
or
incb
gs
and
sahf
clc
stc
pop
les
lock
jb
mov
popa
dec
mov
jle
adc
mov
dec
lahf
inc
gs
fdivs
lea
cli
fwait
dec
jno
and
scas
or
lods
jge
test
test
mov
mov
mov
ds
sub
je
movsl
les
xor
xchg
fstps
jo
cmp
adc
jge
xor
repz
and
les
lcall
cmp
fidivs
jl
or
add
pop
inc
insb
add
xchg
dec
aaa
pop
xchg
jle
test
fisubrl
add
iret
lods
or
popa
ds
pop
sbb
add
gs
pop
fcmovbe
rorb
rolb
repnz
cmp
lcall
cltd
sub
pop
outsl
jge
imul
push
shll
std
fbld
gs
lret
imul
add
push
subl
pop
pop
dec
push
out
mov
jge
inc
add
dec
dec
xor
or
push
aaa
lcall
push
scas
adc
mov
gs
test
jns
mov
jp
mov
ja
int
int
sbb
and
in
ja
lret
push
cmp
xchg
jnp
lcall
mov
call
jge
lods
or
jno
sbb
or
dec
xor
cmp
movsl
mov
mov
xchg
or
add
leave
xchg
in
mov
movsb
shll
rcrb
cmp
pop
sbb
sbb
add
jle
bound
out
sbb
lea
xchg
inc
mov
mov
stos
mov
movsb
mov
mov
xchg
mov
push
gs
push
fucomip
popa
adc
cld
xchg
xor
mov
jnp
in
jne
scas
xlat
test
jge
xchg
pop
pop
cmc
push
xchg
outsl
pop
arpl
jl
inc
mov
push
jns
fnsave
lock
sbb
jo
nop
cmp
pop
inc
test
cmp
sbb
outsb
loope
xchg
xor
sbb
xor
mov
daa
roll
jb
cmp
adc
and
lahf
lcall
daa
dec
xchg
sbb
mov
leave
arpl
xor
dec
loop
imul
ret
popf
pop
lods
or
test
mov
popfw
xor
xchg
insl
dec
popf
mov
rcll
dec
sbb
jne
aas
sub
ret
xchg
pop
sub
add
mov
fisttps
sub
insl
mov
arpl
out
out
add
sub
outsb
hlt
call
sub
xor
mov
jae
pop
pop
mov
mov
jecxz
outsb
and
push
cs
and
dec
dec
cmc
daa
scas
push
jae
mov
and
adc
jmp
adc
cmpsl
jb
icebp
js
outsl
inc
rolb
xchg
outsl
lret
and
bound
inc
fs
xor
add
cmpsl
jecxz
adc
xor
push
jno
test
add
push
add
dec
jb
pop
addr16
and
test
and
adc
stc
imul
mov
mov
sbb
in
sbb
psubw
adc
das
les
icebp
stos
push
add
adc
mov
xor
push
ds
pop
shlb
mov
sbb
inc
push
xchg
inc
cwtl
in
inc
cmc
adc
xor
mov
or
jg
jmp
jge
bound
fnstenv
in
cs
inc
jp
cmp
mov
jb
test
cmp
xor
or
mov
add
sub
push
and
push
and
mov
cli
mov
in
jle
es
push
push
mov
dec
iret
mov
aad
fildl
or
in
pop
dec
or
mov
call
jne
sub
add
mov
and
jle
stc
adc
imulb
mov
shlb
jp
sub
pop
sub
cwtl
mov
or
jp
pop
push
sbb
adc
jbe
outsl
fwait
ret
mov
push
shl
clc
popa
les
imul
or
and
clc
repnz
lds
dec
or
mov
adc
ret
mov
push
mov
mov
ljmp
jae
data16
int
mov
add
mov
arpl
jns
mov
xchg
sub
into
mov
mov
cmp
movsb
nop
cs
jg
gs
ret
add
sbb
mov
rorl
add
jp
push
out
inc
jnp
xor
mov
bnd
cwtl
ret
lods
in
es
cs
stos
outsb
in
xchg
cmp
adcb
inc
or
ds
adc
aas
out
dec
je
stos
jecxz
mov
or
js
inc
pusha
lea
add
cmp
jnp
stc
sbb
out
and
add
and
push
jle
or
imul
fisubl
lret
cltd
sub
mov
and
push
or
shrb
xchg
add
cmp
outsb
mov
jbe
adc
stos
add
aas
lahf
xor
fdiv
adc
jmp
lock
sub
xor
xor
out
mov
jge
sbb
jb
and
lret
popa
cmp
push
iret
cmp
andb
int
das
lods
nop
adcb
stos
or
push
xchg
inc
test
cmpsb
jae
movsb
push
sbb
ficoml
fsubr
in
scas
fs
jns
cmp
rclb
mov
pushf
outsl
inc
mov
rorb
jg
imul
mov
testl
sbb
xlat
std
mov
mov
repnz
aaa
mov
lret
fildll
mov
xor
pop
push
fistps
xor
rorl
xor
mov
fisubs
cmpl
sub
lret
jmp
xchg
xorl
arpl
lods
lods
cmpsb
decl
and
push
xchg
dec
push
sub
cmpsb
int
jle
imul
arpl
popa
sbb
mov
loop
and
loope
lcall
test
and
xchg
fnstenv
movsb
outsl
pop
mov
push
push
lea
lods
push
dec
xchg
sar
out
jle
jecxz
stos
xor
test
aas
mov
sub
push
dec
mov
imulb
jne
lods
mov
mov
das
sub
jbe
stos
inc
addr16
cmpsl
and
jo
sbbl
movsl
and
dec
fmuls
mov
mov
movsl
lods
cltd
cltd
jle
pop
xor
sti
test
flds
jno
push
ret
fdivp
je
movsb
mov
repz
subl
sbb
rol
fsubr
inc
jne
call
jnp
push
andb
xorb
mov
fcmovb
xchg
jmp
sub
or
or
fistpll
shrb
push
test
aas
dec
mov
rcrl
in
cwtl
daa
dec
and
jecxz
fmull
pop
outsb
popf
pushf
cmp
iret
mov
lret
or
popa
aam
pop
sbb
ljmp
ja
mov
out
push
dec
cli
out
rcl
loopne
lcall
fiadds
adc
cmp
cmp
add
aaa
xchg
lcall
sbb
xchg
aaa
push
jmp
push
into
aad
cmp
adc
inc
mov
ret
aaa
push
add
repnz
andb
bound
mov
xor
ss
sub
pop
fdiv
mov
sar
inc
or
cmp
insb
fsubrl
repnz
jge
lret
sub
in
add
add
adc
push
mov
sbb
xor
jbe
scas
add
fs
jbe
mov
xor
mov
cmc
and
hlt
fistpll
jecxz
pop
cmpsl
flds
lcall
rcl
sti
jo
mov
call
xor
ds
adc
adc
mov
jno
sub
nop
jmp
int
add
mov
xchg
pop
sbb
jns
push
mov
fs
xchg
sub
jae
mov
aam
movsb
std
inc
fstps
rcrl
stos
lahf
xchg
pop
pusha
imul
mov
icebp
sub
mov
aam
mov
inc
test
mov
push
mov
push
sub
push
lds
gs
testb
inc
sub
hlt
shr
aaa
in
pop
movsb
pop
cmp
push
insl
mov
loopne
sbb
cmp
lcall
pop
aaa
ljmp
jecxz
sbb
xor
je
adc
inc
xchg
mov
das
rol
arpl
jmp
sbb
inc
arpl
xor
inc
mov
out
jb
mov
les
adc
mov
xor
xor
sub
or
xor
out
aas
sbb
jmp
cmp
mov
pusha
lock
mov
inc
fcompl
add
jb
and
push
popf
push
cli
js
cmp
inc
mov
and
xchg
mov
push
out
adc
es
pop
sub
inc
ja
sub
xor
lds
mov
sub
mov
cmc
mov
fs
cmp
xchg
cwtl
jge
sbb
loop
in
cs
xor
cmp
es
loope
sti
push
call
and
mov
add
pop
inc
jecxz
imul
lcall
daa
mov
mov
cmp
mov
push
int3
cmp
int3
add
jne
dec
adc
adc
int
mov
sub
ss
ror
sbb
mov
xor
dec
xchg
pop
adc
lods
push
fsubl
pop
lcall
test
or
xorb
movsb
test
cmp
xchg
mov
cmpsb
mov
jne
xchg
mov
inc
lods
push
daa
inc
mov
mov
pop
popf
lods
enter
imul
out
rolb
or
mov
sti
int3
icebp
cltd
and
lods
ljmp
lea
adc
jne
cmp
xor
or
cmp
add
push
xlat
push
aas
es
aad
testb
fdivr
xchg
add
dec
jbe
inc
cwtl
outsl
cmp
xchg
rclb
and
hlt
add
outsl
ja
inc
jmp
das
push
lahf
sbb
aas
fsubrl
mov
lea
jno
inc
push
mov
out
fnstcw
cs
jecxz
push
mov
fildl
gs
xor
and
js
pop
lds
jmp
jae
sub
and
inc
mov
addb
cmp
xchg
xchg
lahf
cli
jo
cmp
call
or
lods
push
jns
fstpt
test
test
dec
incl
scas
int3
aad
and
mov
xor
pop
pop
xchg
scas
mov
push
xlat
cli
ret
mov
sbb
xchg
in
ss
jnp
stos
adc
lods
outsb
jo
adc
mov
xchg
mov
mov
ss
lods
add
xlat
outsl
das
xor
in
rorl
filds
sbb
and
popa
aaa
inc
mov
adc
mov
cmc
mov
inc
mov
mov
movsl
mov
stc
jns
jae
xchg
push
cld
inc
ja
jge
xchg
adc
dec
int3
and
pop
je
adc
and
rcll
adc
cmp
sti
fsubrs
repz
mov
mov
mov
xchg
pop
sbb
dec
lret
ss
in
fs
lods
jl
sahf
fidivs
aaa
fsubs
jle
ret
loopne
es
sti
cmp
mov
sbb
dec
inc
es
sub
aaa
xchg
lret
bnd
popl
add
sub
sbb
clc
push
nop
mov
shrb
or
adc
adc
or
mov
mov
int
jecxz
xchg
mov
movsl
mov
adc
sbb
cmp
sbb
add
jae
cmp
negb
aad
lret
pop
push
sbb
std
pop
sbb
imul
insl
mov
or
cltd
xor
push
push
daa
std
fnsave
ja
es
lock
enter
dec
cmp
out
aas
jbe
adc
xchg
pop
pushf
lcall
jg
call
adc
enter
ss
sub
lods
inc
ret
push
int
xchg
fwait
sub
push
pop
cmpsb
pop
cmp
mov
xor
mov
pop
rcrb
mov
loopne
mov
sub
dec
mov
mov
lcall
lea
movsl
hlt
or
push
pushf
mov
daa
scas
inc
sti
insb
push
fstps
and
push
insb
out
imul
int3
mov
inc
or
test
or
vorpd
xor
mov
ja
leave
fucom
nop
cmp
jbe
imul
jmp
mov
sbb
mov
cwtl
cmpsl
cmp
mov
stc
mov
cmp
jecxz
cmp
outsb
fwait
sti
pop
ss
mov
inc
sbb
fisttpll
add
loope
aad
add
test
sahf
fnstsw
inc
mov
adcb
lret
push
jge
sub
nop
add
pop
xor
push
push
repnz
lods
jae
xor
and
sub
lods
xor
mov
jae
cmp
xchg
lcall
lods
lods
mov
andb
stc
out
dec
dec
lea
dec
hlt
sub
ds
push
pop
mov
fists
test
xchg
mov
mov
in
jmp
cwtl
outsl
addl
adc
icebp
dec
mov
xchg
decb
add
sbb
or
lret
jle
movsl
push
pop
enter
test
rcl
clc
pop
sub
cmpsl
mov
sub
mov
in
or
mov
cmc
inc
pop
jg
cmp
xchg
scas
imul
ror
jmp
arpl
pop
insl
rorl
or
test
mov
cmp
cld
cmc
pop
insl
xor
inc
and
xchg
das
fcmovu
mov
loope
stos
sbb
cmp
xchg
scas
lods
add
loopne
mov
lea
fidivrs
ljmp
mov
add
std
sbb
test
pusha
mov
add
xchg
jecxz
push
mov
push
add
sahf
sub
pop
test
adc
js
aas
jb
adc
jl
xchg
pop
adc
inc
subl
jb
xor
dec
mov
or
pop
push
inc
rcrb
dec
fs
pusha
xor
stos
mov
and
out
test
push
test
cmc
jle
mov
lods
cmpsl
rcll
icebp
outsl
pop
xchg
loopne
aas
mov
rcrb
cmpsl
sbb
or
scas
outsb
cli
push
mov
and
jb
and
dec
dec
stc
and
mov
je
mov
pop
lods
ficoms
cmp
cs
push
mov
pushl
adc
jno
outsl
cmp
shr
inc
mov
mov
in
mov
xchg
es
push
jo
lcall
movsl
and
adc
jno
xchg
std
and
test
inc
pop
test
lods
test
movb
mov
mov
mov
lods
mov
outsb
cmc
cmp
outsl
lds
add
out
das
mov
pushl
leave
jl
adc
leave
es
sbbb
cli
inc
pop
pop
xchg
sahf
addr16
push
jmp
cld
arpl
test
out
scas
gs
adc
inc
mov
jmp
push
stc
lock
and
in
testl
or
lar
insl
mov
dec
pop
lds
xchg
ret
lds
add
cmp
stc
lret
inc
stos
mov
movsb
sbb
fdivrl
cmp
cld
jle
test
mov
fstps
or
ja
addr16
cmp
jge
xchg
out
in
mov
shll
sub
add
scas
in
sbbl
mov
aad
in
add
or
inc
mov
sub
mov
or
add
test
mov
or
les
cmpb
popa
test
insl
clc
movsb
mov
lds
addr16
in
ss
call
push
jl
add
insb
dec
dec
mov
and
dec
dec
roll
je
sub
leave
add
outsb
aam
lods
fwait
sbbl
mov
pop
inc
xchg
out
movsl
adc
mov
dec
sbb
xchg
into
rorl
xchg
mov
inc
jmp
pcmpgtb
addb
xchg
je
inc
ds
fs
push
aam
cltd
mov
cld
pop
in
test
enter
cmc
aas
mov
mov
cmpb
aaa
jecxz
adc
in
sbb
pusha
inc
inc
jge
push
or
pop
fisttps
sahf
lds
imul
addr16
sub
pop
fstl
adc
cli
test
sbb
push
popf
stos
mov
push
mov
int
scas
shl
or
add
imul
ljmp
xor
or
insl
add
bound
insl
cwtl
mov
mov
push
push
xchg
test
loope
adc
sub
ja
mov
int
addr16
icebp
lock
jl
add
lret
hlt
jns
shr
popf
adc
push
fwait
mov
fidivrs
mov
imul
ljmp
inc
push
jns
inc
imul
fiadds
add
pop
xor
sbb
cli
jbe
lods
loope
mov
cltd
jge
pop
mov
pop
dec
clc
icebp
mov
xchg
sub
or
push
sahf
iret
sti
push
xor
push
lods
into
cltd
pop
repz
out
push
scas
fimuls
xchg
push
rclb
es
mov
std
clc
mov
aam
scas
sbb
cli
push
lcall
inc
or
push
icebp
test
mov
jns
mov
inc
adc
cli
inc
mov
movsl
dec
les
cmp
jbe
jle
add
bnd
stos
add
sub
sbb
jmp
or
ret
mov
add
aaa
repnz
das
testl
add
ja
sub
xchg
lret
add
ret
adc
xchg
add
bound
mov
adc
clc
icebp
add
push
js
mov
cmp
sti
mov
jnp
shl
push
adc
lret
inc
inc
push
sarb
mov
inc
or
test
mov
stc
mov
mov
dec
mov
jae
lds
ja
inc
vcvtsd2si
fisubs
lahf
pop
jns
repnz
stos
icebp
dec
gs
mov
jne
popf
fldt
mov
or
imul
aaa
dec
mov
shll
stc
stc
sbbb
test
test
inc
testb
fiadds
iret
inc
inc
stos
lea
repnz
adc
jge
leave
hlt
filds
test
and
mov
cmpsl
pop
fs
scas
arpl
add
ficompl
in
lret
ret
shll
fs
fimull
mov
fisttps
mov
mov
adc
mov
cmp
fstpl
test
pop
pop
pop
bound
cltd
ret
jns
mov
xor
sbb
sarb
xchg
fbstp
xor
rcrb
sahf
notw
in
lods
jno
pusha
mov
mov
cmp
jno
add
scas
adcl
int
xchg
jns
shlb
sbb
nop
icebp
mov
xor
adc
add
inc
or
cwtl
pop
ret
sub
mov
mov
repnz
adc
sarb
or
lret
test
lcall
mov
mov
das
mov
insl
inc
xor
inc
xchg
stos
sti
or
lcall
push
arpl
xchg
popf
insb
push
test
or
sahf
inc
mov
fistpll
das
pop
fcmovne
and
and
cmp
sbb
cmp
cmpsl
fs
xchg
enter
sub
push
mov
gs
or
and
xchg
jnp
arpl
insl
adc
out
mov
mov
popf
loope
fmuls
mov
les
addl
fistpll
xchg
jge
mov
and
dec
inc
inc
xlat
movb
movsb
mov
inc
push
lock
cmp
sub
stos
pop
mov
cmp
fs
out
pop
jl
test
adc
xchg
popa
out
andb
cmc
mov
inc
cmpsb
xorl
ror
js
push
dec
pop
push
jae
fstps
xchg
mov
mov
adc
cmp
push
mov
inc
aaa
cwtl
mov
test
xor
mov
int
add
push
push
mov
or
ljmp
mov
aad
nop
icebp
ror
jb
or
fistps
jnp
xchg
xor
mov
test
mov
outsb
xchg
test
aaa
pop
fidivrs
mov
push
outsb
xchg
mov
push
cli
add
sbb
js
cmp
lret
jecxz
inc
lret
adc
xchg
mov
xchg
mov
out
leave
inc
dec
sub
int3
pusha
or
jmp
push
add
les
pop
push
push
sbbb
cmp
mov
dec
sbb
inc
repnz
out
jle
adc
xchg
lds
es
mov
lret
roll
ret
mov
push
push
pusha
movsb
scas
mov
push
or
fs
cwtl
idiv
jle
cld
outsl
push
inc
fwait
jmp
lret
call
and
cmp
cltd
or
scas
cmp
mov
sub
test
call
and
rcrl
fwait
mov
popl
movsb
cmp
stc
inc
lret
sub
aaa
or
outsb
and
adc
lds
or
stos
push
daa
imul
push
hlt
and
inc
mov
xchg
jne
and
outsl
add
cmp
add
jnp
in
push
mov
or
movsb
sbb
in
pop
fisttpl
sub
mov
jmp
mov
decb
adc
lods
mov
iret
add
sar
inc
add
lds
stos
xor
movsl
imul
jg
inc
outsl
mov
js
sbbl
mov
adc
arpl
cmpsb
sub
shlb
imul
and
inc
mov
jge
fsubr
or
fs
rolb
test
cmp
pop
push
std
jns
pop
push
pop
nop
pushf
mov
mov
add
sub
je
inc
add
pop
mov
stc
sub
push
and
repnz
test
lahf
jmp
sub
out
jl
push
stos
mov
in
sarl
fwait
lcall
outsl
clc
mov
cmpsl
lods
pop
jmp
xchg
xlat
dec
rcrl
push
lea
icebp
adc
jmp
sbb
lea
imul
popa
xor
je
mov
sub
and
enter
cmc
mov
ret
xchg
jecxz
xchg
out
inc
mov
inc
cltd
xchg
cmp
jle
outsl
xlat
jl
clc
test
add
orb
clc
adc
and
insl
jo
mov
inc
push
idiv
or
inc
out
pop
mull
aam
aas
fistps
jne
mov
lds
ss
and
push
fiaddl
test
xor
mov
adc
call
dec
imul
inc
xchg
add
sbbl
movsl
mov
adc
fistpl
in
fbstp
fs
lahf
push
in
push
dec
cmp
mov
or
mov
ret
push
nop
dec
pop
ss
std
mov
daa
int3
popf
sahf
fs
call
mov
push
inc
push
bound
or
pop
fiaddl
push
rorb
xor
imul
push
add
data16
pop
ret
sub
and
flds
sub
push
or
out
sbb
xchg
out
sbb
je
stos
pushf
outsb
ss
loop
adc
jmp
add
lds
outsb
mov
dec
lret
and
lret
fbld
push
cltd
xchg
pop
inc
ret
test
mov
adc
std
or
pop
aam
pop
inc
stos
and
aam
insl
adc
rclb
xor
into
stos
rcrb
cmpsl
ret
and
add
mov
jbe
adc
lock
lds
mov
ror
add
test
mov
xchg
push
int3
test
ds
arpl
ret
pop
cmp
xchg
push
lcall
arpl
adcb
or
mov
dec
imul
xor
rcrb
arpl
jb
xchg
es
es
dec
test
cmpsl
xlat
push
sbb
cmp
pop
das
xchg
push
inc
imul
mov
or
insb
jnp
xchg
popa
ljmp
jo
dec
adc
js
inc
jne
jnp
movsl
in
nop
test
jge
mov
jnp
inc
stos
mov
repnz
jmp
insl
or
cli
in
test
loope
xchg
pop
popf
add
mov
pop
fcoms
int
lods
mov
push
or
sub
pop
std
mov
pop
cwtl
mov
neg
cltd
jns
fimuls
jmp
sbbb
xchg
jecxz
out
fs
push
mov
push
in
int3
pushf
fwait
pop
push
fcoms
rolb
insl
in
push
pop
cmp
and
in
je
mov
test
in
or
loop
fdivl
lcall
movsb
xor
or
mov
scas
test
mov
lcall
pusha
jmp
adc
mov
jns
repz
fimuls
ret
inc
ljmp
inc
mov
pushf
jae
jmp
ret
fimuls
pop
mov
inc
xchg
into
sub
mov
aam
fwait
aaa
and
dec
les
mov
aam
mov
adc
mulb
dec
test
daa
andl
loop
mov
push
inc
leave
mov
stos
fstp
cld
cmpsb
cli
sti
mov
mov
stc
in
inc
xchg
scas
jne
lcall
call
pop
fiadds
and
test
inc
fs
xchg
add
fadd
les
inc
ds
cmp
jecxz
test
mov
xchg
into
sbb
mov
adc
fsubrl
mov
mov
outsl
sub
orl
and
or
mov
movl
xor
aas
pushf
fcmovb
sahf
daa
dec
call
or
sub
mov
loop
cli
jne
xor
imul
cwtl
sahf
inc
push
shlb
jnp
lahf
adc
popa
sub
pushl
ds
xor
movsb
add
ss
sti
lock
mov
pushl
or
imul
add
fldl
mov
inc
les
mov
rorl
jb
xor
pop
xor
je
in
mov
shl
xlat
jmp
mov
dec
aas
adc
xchg
lods
filds
cmc
aad
and
aad
or
mov
xchg
xchg
adc
aaa
jo
ja
div
jl
out
sub
mov
lahf
xchg
mov
sub
mov
mov
cmpsl
jnp
je
mov
aam
dec
mov
inc
xchg
push
out
into
or
cs
mov
sbb
daa
or
and
ljmp
push
mov
js
fstpt
fs
in
mov
popa
cwtl
scas
jle
jp
sbb
vminss
je
xchg
mov
push
inc
cmp
fs
jl
add
mov
test
lret
test
mov
mov
or
aas
loopne
cltd
pop
push
sbb
xor
xchg
mov
mov
test
mov
push
sbb
lret
xchg
loopne
sub
mov
pop
mov
mov
lods
shlb
jb
or
mov
adc
add
in
push
jl
idivl
adc
repz
fadds
ret
insb
in
imul
lea
mov
and
or
movsb
cmp
mov
adc
or
jno
mov
pop
jae
cmp
push
jo
mov
adc
cwtl
aaa
dec
cmc
call
sub
mov
xor
movsl
push
mov
loope
pop
ficoml
cmp
inc
push
ret
repnz
sub
mov
out
ret
inc
psadbw
cmp
cmp
mov
nop
ljmp
or
and
ret
pop
or
pop
xor
mov
cltd
mull
mov
pop
shl
mov
fmul
test
mov
inc
push
fistl
jp
aam
mov
lock
dec
dec
cli
push
mov
xor
popf
stos
jne
push
add
in
cmp
decb
mov
addr16
or
mov
inc
and
jbe
jmp
push
and
adc
jmp
add
jl
mov
imul
loope
fcmovb
sbb
jmp
xchg
das
xchg
rcrl
fs
dec
scas
mov
or
add
cli
hlt
ss
push
mov
dec
mov
adc
sub
aaa
mov
popf
sbb
aad
adc
inc
cmpsb
jne
or
pop
testb
sbb
lods
adc
outsb
add
cmpsl
sub
xor
push
leave
es
aas
fiadds
push
pop
cmp
xorb
shrl
loop
repnz
daa
in
aad
adc
pop
lret
jl
ja
sbb
push
clc
dec
jecxz
adc
ja
arpl
ret
and
lods
or
imul
pushf
and
sbbb
nop
or
push
loope
adc
inc
mov
mov
shr
sbb
call
push
fidivs
or
jo
outsl
cmp
repz
cmpsb
clc
fs
addr16
mov
ficoms
sbb
pop
push
sbb
outsl
movsb
inc
xchg
stos
mov
cwtl
ja
sahf
cmpsb
mov
cli
stos
lods
out
sub
inc
pop
add
je
push
ljmp
shl
jo
dec
add
js
inc
sub
dec
pop
xor
out
dec
sbb
dec
mov
xchg
insl
out
xchg
outsb
insl
ret
xchg
je
shl
or
lcall
movsl
adc
js
incl
jbe
push
outsb
clc
mov
mov
xor
ds
pop
inc
mov
loopne
xor
adc
out
pop
js
mov
xor
xlat
cmp
ljmp
mov
lret
adc
es
sub
fistl
lds
and
push
fcom
movsb
add
and
or
adc
fwait
div
je
ss
decb
rcr
out
mov
push
outsl
xchg
pop
add
cmp
subl
xor
dec
adc
and
into
cmpsl
or
aam
mov
jo
lods
mov
movsb
int
nop
jb
in
lahf
or
and
icebp
into
lods
dec
mov
pop
les
mov
scas
dec
repz
js
mov
mov
adc
xchg
and
push
xor
pop
add
jno
pop
adc
pushf
rcl
lds
pop
ret
xor
mov
hlt
int3
sbb
xor
or
pop
loopne
sub
sahf
ret
sbb
loop
sbb
cld
sub
bnd
dec
pop
xchg
cmp
xchg
imul
int
test
inc
ds
stc
xchg
aaa
mov
mov
push
out
leave
push
mov
mov
xchg
in
dec
insl
loopne
daa
sahf
adc
outsb
mov
imul
push
sti
push
test
stos
std
lret
mov
mov
test
loope
sbb
iret
push
push
add
pop
cli
adc
mov
and
lock
in
adc
pushf
xchg
gs
lds
or
cld
push
fstps
mov
cmovae
cmp
and
jle
repz
cmp
mov
fadds
lahf
hlt
jp
xchg
out
sbb
ja
pop
dec
imul
lcall
dec
pop
pusha
frstor
pop
sbb
mov
test
in
push
lock
adc
xlat
lea
nop
jb
mov
push
test
leave
inc
insb
lahf
inc
or
test
push
jge
out
cmc
stc
pop
cwtl
call
push
or
repz
movsb
and
xchg
out
xchg
jmp
sbb
mov
mov
addr16
addr16
push
inc
sub
cmp
xor
cwtl
mov
mov
pop
je
dec
stos
cmpsb
inc
cltd
jns
nop
adc
push
sarb
push
addr16
push
cwtl
pushf
das
stc
sub
test
push
pop
xchg
dec
ss
mov
fistpl
rcrl
and
sub
insl
sub
or
fwait
int
lods
pop
inc
jp
imul
push
jp
mov
xor
xchg
fs
scas
add
scas
dec
stos
pop
jmp
into
mov
aas
shrb
test
xchg
mov
rcrb
inc
scas
xchg
jb
adc
das
push
mov
popa
outsb
add
cmpsl
in
sbb
andb
or
dec
outsl
cmp
adc
adc
leave
in
xor
pop
ljmp
mov
xchg
mov
outsb
cmp
ret
xchg
add
jecxz
or
mov
lahf
lea
pop
sub
mov
mov
dec
fldl
jne
pop
lret
jbe
mov
arpl
add
jp
imul
mov
mov
mov
aam
cmp
fimuls
sbb
jns
xchg
mov
cmp
sahf
test
dec
add
popa
repz
push
sbb
inc
pop
cmp
popa
mov
mov
add
scas
leave
clc
mov
jecxz
addr16
out
cmp
int3
jo
xchg
rorb
add
movsb
add
xor
out
mov
mov
and
adcb
inc
aam
and
insb
xor
xchg
push
cmp
sub
jmp
inc
mov
sti
insl
sub
mov
inc
mov
sbb
mov
clc
xchg
jmp
ret
shlb
pushf
jg
xor
lret
mov
test
stos
jle
stos
pop
out
xchg
scas
mov
addr16
dec
lods
imul
or
push
jmp
rorl
push
shrb
cli
loopne
xchg
in
cwtl
jno
cmp
cmpsl
mov
cmpsb
xor
xchg
sub
pop
std
cmpl
add
sbb
lods
hlt
mov
bound
pop
stos
aas
cmpb
lds
mov
jb
scas
mov
mov
adc
adc
push
roll
clc
jmp
jo
jle
sbb
jl
add
lods
fs
and
lea
push
add
mov
adc
ja
pop
popa
push
sahf
pusha
fwait
jmp
mov
sbb
cmp
adc
dec
mov
fimull
orb
sbb
mov
dec
int3
jl
pop
or
dec
shl
movb
inc
outsl
mov
cmp
mov
out
cmpsb
cmp
xor
mov
fiaddl
pop
push
add
fcmovnbe
cmpsl
sub
cmp
mov
xchg
ss
or
cmp
adc
pop
jg
jns
jp
jno
fidivl
push
mov
jecxz
loope
inc
cmpsb
imul
adc
add
shll
xchg
das
jle
jo
repnz
pop
shll
sub
inc
mov
fmuls
mov
jbe
dec
out
bound
and
repnz
arpl
inc
jno
pushf
ds
mov
push
repz
pop
mov
pop
outsb
push
mov
dec
xor
aam
xor
rorb
push
sti
jge
cli
add
cmp
pop
push
pop
pushf
lea
fs
cmp
pop
push
nop
add
test
pop
int3
sub
lock
sbb
call
and
cmp
std
aad
pop
in
aad
gs
addb
hlt
mov
pop
pop
sbb
sbb
stc
push
addl
mov
jle
jo
bound
lods
orb
pop
push
mov
shl
xchg
in
repnz
negb
inc
adc
shl
cltd
adc
mov
cmpl
loop
sbb
frstor
pop
xchg
fwait
add
ficompl
scas
or
dec
fstl
stc
jo
sahf
or
hlt
cld
repnz
push
adc
out
lret
cmpsb
mov
mov
jb
dec
push
adc
fadds
adc
jmp
out
adc
jbe
push
mov
cmp
cmp
call
test
lea
xchg
das
mov
push
sbb
add
jg
pop
mov
lods
xor
out
lahf
adc
pop
inc
push
and
movsb
xor
add
cmc
cmp
sub
xlat
xlat
sbb
div
jne
mov
sbb
arpl
cld
fcmovb
or
inc
cwtl
iret
std
xchg
push
adc
cs
nop
mov
cmc
xor
pop
adcl
adc
adc
in
aam
dec
cmp
pop
xor
xchg
fmuls
in
mov
jge
mov
lcall
test
loope
jle
and
daa
stos
ficompl
pop
icebp
or
push
pop
xchg
loope
mov
xchg
pop
jle
stos
dec
mov
popa
sub
and
and
mov
jnp
adcl
push
adc
sbb
jle
loopne
mov
add
arpl
gs
adc
filds
push
mov
jne
sbb
mov
jnp
pop
in
mov
xor
pushf
in
mov
mov
push
mov
insl
adc
adcb
xor
mov
pushf
loop
sbb
das
push
stos
lahf
popf
shll
push
jp
jl
imul
lds
xor
inc
nop
push
pop
sbb
adc
fbld
movsl
cmp
xchg
xchg
testb
add
sub
xor
sbb
mov
pop
shll
mov
sbb
jg
xlat
mov
loopne
xchg
or
add
adc
ret
or
rcl
dec
mov
icebp
daa
mov
sbb
xor
pop
lock
sub
sbb
imul
lods
jecxz
inc
pop
testb
notb
add
leave
sbb
push
imul
lcall
sahf
pop
fsub
jg
or
out
cmpsl
mov
mov
inc
divl
js
mov
adc
das
push
dec
shl
sti
mov
jg
cmp
into
nop
fisubs
sub
rorl
inc
and
lea
or
and
jl
cmc
sbb
loope
dec
inc
out
pop
divb
cmp
nop
jle
insb
movsb
push
jno
jb
inc
lret
mov
push
push
inc
xor
push
jnp
popf
mov
nop
ror
inc
incb
dec
adcb
jg
ss
je
or
sbb
and
xchg
mov
inc
test
mov
stos
fadds
or
xor
pop
pop
aaa
rcll
js
sub
testl
sarb
xor
bound
lret
mov
xor
dec
jp
sub
add
ss
stos
jo
rol
push
hlt
dec
cwtl
or
sbb
std
test
cmpsb
call
sbb
inc
dec
leave
insb
mov
outsl
or
dec
ss
jp
jecxz
and
mov
dec
add
inc
sarb
dec
decl
andb
call
pop
stc
jnp
decl
je
xor
mov
pop
movsl
lods
jnp
enter
cmpsl
iret
in
out
mov
out
and
fwait
loope
jmp
std
pusha
jb
cmpsb
es
pop
lahf
inc
pop
cmpxchg
push
inc
jno
xor
shrl
jnp
aad
rcrb
outsl
jge
fwait
and
xchg
das
sbb
adc
pop
inc
mov
or
mov
push
out
add
leave
inc
push
adc
ficomps
outsb
leave
add
call
adc
dec
lcall
lods
mov
lcall
aas
add
xor
leave
call
cltd
imul
orl
orb
insl
and
scas
movsl
fstpt
lods
mov
test
xchg
cwtl
inc
sbb
fsincos
pusha
in
loope
jae
xchg
sbb
stos
jnp
lcall
adc
shlb
mov
add
xor
xchg
repz
push
pop
push
push
jno
push
mov
dec
adc
and
test
shll
movsl
pop
loopne
cmp
les
or
mov
cmp
ret
les
sub
push
cmp
push
jb
sbb
and
xchg
add
pop
jo
xlat
mov
mov
cmp
jmp
imul
repz
std
call
pop
adc
loop
inc
cmp
push
jle
popf
inc
stos
dec
xchg
push
ret
outsb
pop
sbb
hlt
cli
stos
cmp
test
dec
shll
cmc
dec
xchg
mov
or
pop
fcmovu
xchg
mov
cs
fcmovnb
jg
loope
sub
mov
out
int3
aaa
pushf
fcoml
mov
fs
loop
pop
push
loop
aam
out
cld
adc
mov
outsb
mov
push
data16
push
adc
push
lds
push
xchg
das
fs
mov
lock
sbb
push
leave
sti
jmp
sti
insl
push
pop
pop
lret
pop
dec
int3
sahf
mov
outsl
into
aas
mov
out
sub
pop
jge
arpl
jl
fwait
xor
in
xchg
mov
mov
in
jo
sbb
mov
lods
mov
adc
in
jb
lret
arpl
jg
xor
mov
mov
test
popf
cmpsl
in
xor
loope
test
lds
mov
fisubs
into
arpl
jp
push
add
ret
out
jl
or
push
add
xchg
adc
test
mov
inc
stos
popf
jmp
pop
outsb
ljmp
pop
push
jmp
or
sub
inc
xor
cmp
and
jmp
mov
xor
mov
sub
addr16
xlat
push
pop
push
daa
orb
mov
mov
xor
cs
pop
rclb
jecxz
negb
jns
pop
ja
cmp
xor
lock
popl
inc
inc
mov
data16
and
outsl
cs
sbb
imul
mov
xor
mov
stos
lcall
lret
shrb
lahf
inc
sar
cwtl
sbb
and
xor
xchg
jmp
cmp
push
call
ret
mov
fisttps
jae
push
into
cmp
add
mov
ds
cmc
adc
sbb
push
adc
incl
outsb
in
movsb
add
sbb
or
je
jo
testl
sbb
repnz
mov
insl
hlt
cmp
pop
inc
out
jnp
mov
or
push
mov
lea
scas
pop
mov
data16
clc
and
add
fisubs
dec
lahf
pop
loop
lret
ljmp
std
data16
lcall
mov
clc
mov
add
xchg
out
insl
pop
out
sahf
xor
popf
or
or
ss
aad
aam
cmpsl
testb
loopne
add
xchg
mov
mov
in
and
xchg
sarl
xor
icebp
cmpsb
out
add
jno
flds
je
stos
push
inc
adc
or
adc
xchg
imul
in
sub
popa
sbb
stos
rcrl
push
mov
inc
test
push
aaa
sbbb
aam
mov
shlb
cmp
cmpsl
or
inc
aam
pop
mov
adc
out
push
cmp
pop
rolb
mov
test
inc
push
mov
mov
les
icebp
adc
sarl
lods
jne
add
jns
int
mov
cmc
jo
stc
cmpsl
sub
int3
outsb
pushf
push
jno
loope
mov
sub
inc
in
pop
pop
xchg
push
clc
xchg
shll
fwait
nop
or
or
lret
pop
adc
orl
lahf
mov
xchg
mov
jg
cwtl
lods
pop
add
dec
push
gs
jmp
push
and
lret
in
push
dec
jns
std
adc
aaa
mulb
out
movsb
inc
mov
into
pop
add
xor
and
aaa
mov
out
and
call
scas
add
push
sub
leave
inc
and
or
loop
pop
dec
or
cltd
add
daa
js
jne
aas
sub
out
popf
jbe
loope
pop
mov
push
pop
test
imul
cmp
cmp
push
test
push
fucomi
cmp
mov
mov
pop
scas
mov
xchg
loope
cmpsl
outsb
or
mov
inc
inc
push
out
pushf
js
jno
xchg
dec
sub
arpl
add
cmc
sbb
arpl
sub
mov
push
insb
mov
jge
add
adc
or
cmp
popf
std
inc
call
clc
ds
xor
jb
dec
pop
ror
mov
add
mov
sbbb
push
imul
jmp
and
test
mov
nop
xchg
rorl
and
imul
xor
fsubrs
outsl
iret
aaa
or
jne
mov
inc
ljmp
inc
pop
lock
jmp
fcoms
inc
adc
bound
stc
xor
sbb
in
jbe
adc
sbb
push
add
out
lret
jl
push
fldt
xor
fistpl
lcall
push
packssdw
sbb
push
adc
mov
shlb
cmp
push
push
out
test
loop
mov
mov
cwtl
or
cli
stos
push
mov
movsb
nop
std
loop
or
sub
aaa
test
pop
stc
jns
rolb
push
in
ljmp
imul
lds
pop
jmp
adc
add
test
xor
jbe
movsl
sub
cmp
fbld
shll
cwtl
out
mov
push
daa
les
lea
mov
ljmp
fprem
xchg
add
push
movsl
ret
sti
mov
jb
js
ror
dec
mov
push
pop
mov
insb
iret
std
cmpsb
or
iret
out
sbb
sbb
adc
xlat
lea
xchg
mov
in
test
movsl
test
pop
ficoml
out
mov
sub
push
daa
or
dec
pusha
js
xor
or
xchg
dec
int
sub
pop
mov
aam
sbb
shll
mov
in
fistpll
xchg
ja
pop
out
loop
into
add
dec
inc
sahf
lock
push
add
xchg
in
jmp
mov
sbb
cwtl
jbe
sahf
gs
push
mov
xchg
andps
loope
xchg
xchg
movntq
popf
in
fdivl
jae
mov
sub
sub
sub
pop
ds
pop
xchg
pop
xor
aaa
mov
xchg
into
in
stos
outsb
jg
rorb
push
push
enter
cld
ficompl
mov
test
das
movsb
pop
fcmovne
jns
sbb
imul
inc
sub
test
rcrb
shlb
pop
xor
mov
lods
push
sub
xchg
adc
std
mov
ja
ja
add
hlt
and
dec
ja
faddl
outsl
das
lods
jne
or
mov
bound
pop
imul
push
out
jae
adc
cmp
ljmp
and
push
adc
shll
test
clc
cmp
imull
in
mov
inc
cld
xorb
stc
aas
mov
cmpsl
push
cli
inc
push
fstl
sbb
in
mov
fdivrl
arpl
xor
push
push
inc
add
cmc
popf
or
movsl
push
xchg
mov
push
addr16
push
insb
cmp
stc
das
std
sbb
out
ds
movsl
lcall
fidivrl
jb
mov
insb
notb
jns
out
or
iret
sbb
js
or
sub
mov
cltd
xchg
cld
add
cmp
jl
jb
add
or
inc
xchg
xor
push
mov
test
loop
cmp
xchg
push
pop
roll
mov
out
aaa
push
adcl
lods
out
adc
test
xor
rcll
xchg
leave
shlb
cwtl
pop
dec
inc
push
int
xor
pop
cltd
test
mov
add
daa
test
lods
adc
push
xorl
mov
mov
add
pop
cld
jl
shll
jl
outsl
add
fmul
js
outsl
push
lcall
fimuls
push
xchg
scas
push
es
mov
cs
sbb
pop
imul
fiaddl
mov
add
jmp
cld
into
lock
dec
shr
popa
sbb
jl
xchg
and
xchg
imul
xor
je
loope
mov
incl
leave
mov
iret
insb
push
movsl
repnz
mov
xchg
xchg
push
dec
cmp
dec
repnz
or
jge
out
arpl
lcall
test
inc
das
pop
mov
mov
mov
xchg
xchg
cltd
add
adc
in
push
jno
and
xor
or
xchg
stc
push
movsl
lock
mov
pop
inc
xchg
push
notl
mov
cltd
add
sbb
adc
xor
cwtl
test
xor
push
push
lcall
mov
aam
cmp
dec
jl
adc
xlat
jmp
fwait
inc
sub
sub
shll
xchg
outsl
xchg
mov
jbe
aam
cld
jecxz
movsl
int
add
and
xchg
js
mov
ret
int3
rorb
pop
pusha
lea
add
les
push
subb
sbb
jg
mov
cmpsl
mov
cmpsb
mov
gs
mov
jl
stos
pop
push
addr16
jmp
jns
add
mov
mov
inc
adc
mov
test
clc
xchg
jp
dec
pop
push
ss
jnp
cmpsl
stos
mov
and
push
push
adc
and
cmpsb
call
pop
js
scas
sbb
aad
cmp
addb
lods
lock
cltd
ja
lret
adc
jmp
mov
xchg
pop
mov
hlt
enter
rolb
inc
mov
dec
jo
inc
jbe
daa
popf
hlt
fwait
cwtl
fidivrs
lret
cmc
popl
fstl
inc
inc
aad
pushf
cmpsl
adc
push
mov
push
adc
mov
fcomps
in
pop
jbe
mov
pop
idiv
sahf
xchg
lock
int
pop
mov
add
scas
insb
cmp
ffreep
cmp
mov
jg
and
add
sub
and
pop
cmp
dec
cmpsb
pushf
fcmovu
clc
adc
nop
stos
xlat
mov
out
mov
out
aaa
and
sub
dec
dec
and
lods
call
rcrl
ret
inc
es
or
xchg
xchg
test
cmp
or
arpl
adc
inc
shrl
out
inc
and
data16
add
imul
test
xor
dec
fcomip
pop
dec
pop
add
test
xor
xchg
or
dec
cltd
das
int
inc
pop
sbbl
cwtl
mov
pop
mov
stos
ss
cmpsl
pmovmskb
mov
test
into
call
cltd
jmp
stos
insb
ficompl
inc
jmp
shlb
pop
negl
and
cltd
mov
movsb
dec
jno
and
gs
shll
in
loope
cmp
xor
dec
es
test
push
jnp
dec
adc
or
lds
pop
jnp
es
xchg
aad
xchg
popl
mov
inc
dec
lret
xor
jne
and
cmpsb
inc
and
mov
and
mov
push
mov
outsb
and
xchg
sbb
jle
xor
cmp
push
mov
test
lea
push
xor
in
sbb
mov
mov
sub
mov
cs
insb
mov
or
pop
xchg
add
sub
cmp
jmp
jb
test
mov
ja
inc
pop
mov
or
push
jecxz
sbbb
bound
scas
mov
push
lcall
add
int
das
inc
cli
out
pop
push
mov
push
adc
arpl
pop
add
push
inc
shl
and
sbb
aas
cmp
sub
and
in
dec
mov
sbb
sub
add
addr16
fcomps
mov
mov
push
pop
jg
in
pop
mov
xchg
aad
jbe
stc
jl
pop
incb
mov
fstpt
filds
loopne
les
push
inc
and
into
popa
or
incl
arpl
jae
cli
add
mov
cmp
sbb
push
or
adc
jcxz
push
mov
int3
insb
jl
test
xchg
mov
inc
or
cmp
adc
pop
pop
imul
pop
mov
and
pop
mov
mov
fldl
lcall
cmp
mov
dec
add
mov
es
jmp
inc
int
adc
xlat
int3
sbb
mov
push
lret
xchg
lret
xchg
lret
shl
add
into
xchg
xor
data16
xchg
dec
dec
cld
jl
bound
cmp
jo
dec
push
cwtl
or
xchg
fnstenv
sbb
push
push
push
push
add
jnp
push
mov
jne
adc
and
jle
aam
xchg
lods
repnz
mov
and
cmp
loop
fsubl
fucomp
stos
and
mov
dec
test
lea
pop
inc
daa
mov
iret
inc
test
cltd
arpl
mov
out
inc
cmp
out
ror
loopne
hlt
adc
xchg
roll
or
mov
push
add
repnz
scas
js
xchg
int
mov
pop
and
test
xlat
and
lret
xorl
push
ficomps
stos
mov
call
movsb
scas
std
imul
fstpl
sub
dec
test
xlat
jbe
sub
inc
mov
and
outsl
dec
iret
xor
jg
cmp
mov
repz
ljmp
js
xor
jp
ret
and
test
fcompl
shrb
ret
or
mov
addb
rorb
jns
les
out
bound
pop
mov
inc
outsb
mov
movsl
xchg
push
xor
push
xor
mov
roll
jle
js
mov
test
push
ds
dec
clc
leave
stos
ffreep
ljmp
inc
int3
xchg
stos
jo
imul
xor
sbb
mov
mov
add
mov
xchg
scas
mov
add
mov
and
jp
ds
dec
jno
dec
mov
mov
mov
xlat
pop
or
arpl
ror
ficompl
adc
popf
andb
ja
dec
test
jno
add
mov
jns
push
fildll
xor
insl
dec
cld
aad
lret
xchg
std
imul
adc
mov
adc
adc
std
dec
movsb
pop
xchg
mov
inc
xchg
std
xorl
lret
movsl
add
pop
jp
cwtl
push
jle
es
push
xlat
push
sbb
movsl
adc
js
dec
ds
adc
lret
je
inc
loop
divl
rol
mov
sub
aas
fisttps
sahf
push
ss
pushf
or
pop
repz
cmpsb
jg
iret
xor
ja
and
mov
pop
inc
fiaddl
mov
push
jg
sub
push
dec
stc
push
test
cmp
dec
pop
mov
pop
scas
testl
adc
imul
sbb
call
add
jo
sub
mov
and
pop
mov
movl
mov
cmp
mov
insl
aas
xorl
jbe
iret
subb
push
push
cmpb
jmp
inc
out
scas
and
dec
mov
out
test
push
xor
pop
push
ret
dec
daa
and
or
and
xchg
enter
xchg
call
loope
repz
jge
xor
addr16
stos
es
pop
cmp
mov
xchg
sub
int3
cmpsl
dec
dec
movsl
mov
push
pop
movsb
repnz
mov
xor
add
sub
sub
sbb
mov
xlat
push
mov
cmpsb
mov
scas
in
cltd
loop
mov
mov
push
fisttpll
fwait
stos
hlt
in
dec
jne
add
lea
xor
cli
ret
sbb
enter
fadd
test
je
fwait
popf
leave
mov
das
mov
mov
jb
test
jg
or
mov
mov
aam
neg
aam
aam
js
inc
inc
sbb
mov
lds
xlat
outsb
dec
out
bound
pop
popf
scas
repnz
sbb
sbb
xchg
fldenv
push
movsb
xchg
pop
gs
pop
dec
push
movsb
fisttpl
inc
mov
jg
sbb
movsb
jns
add
out
popa
les
or
adc
daa
cmpsl
cmp
sbb
jo
sbb
ret
rorl
ret
jmp
sbb
scas
arpl
jbe
cmc
loop
aas
push
scas
cld
push
stos
jne
jl
pop
sub
and
fwait
or
jne
adc
jecxz
xchg
int
aaa
push
lret
push
dec
adc
scas
cmc
shlb
imul
xor
and
adc
in
adc
in
jo
push
mov
or
jbe
pusha
repnz
cmpsl
movsl
push
mov
jl
cmpsl
fmuls
add
in
xchg
aam
mov
data16
in
lods
add
jl
scas
push
mov
loope
cmp
lret
mov
stc
imul
fldenv
add
xor
mov
cmpsl
and
sbb
insl
add
data16
inc
adc
xchg
movsl
mov
repnz
sub
cmc
lahf
lods
pop
call
jmp
fstps
mov
and
pushf
pop
dec
dec
mov
pop
mov
mov
mov
xor
jne
rol
xlat
mov
adcb
out
adc
cltd
push
cld
add
jns
cmp
enter
ljmp
mov
fnstcw
lods
jmp
push
cmp
sbb
test
xchg
mov
rolb
cli
lret
outsb
push
scas
add
js
or
lods
lret
repnz
xchg
mov
and
sub
mov
xchg
adc
push
sbb
cmp
insl
movsb
jge,pt
out
add
pop
pushf
add
xlat
xchg
xchg
faddl
lret
xchg
out
dec
les
adc
clc
push
test
inc
jo
mov
imul
xor
loopne
sub
aad
pusha
hlt
outsl
adc
add
outsl
push
shrl
jmp
movsl
or
and
sub
inc
dec
call
mov
cmp
call
loope
pop
xchg
cmc
pop
add
cs
popf
loopne
or
rolb
xlat
cmp
jl
inc
xor
scas
cwtl
sbb
xchg
inc
pop
fwait
fwait
cmp
xor
sbb
jb
inc
mov
sub
cwtl
jmp
jb
ljmp
stos
out
insl
scas
xor
pop
cmpsb
add
sbb
cmp
mov
enter
adc
mov
xor
inc
sub
dec
mov
into
je
rcl
or
jne
iret
inc
jne
stc
ja
inc
xor
mov
xchg
sbb
mov
rcl
pop
xchg
cmp
bnd
mov
sub
mov
mov
mov
inc
fbstp
jo
sub
push
xor
add
in
cmp
inc
dec
mov
jg
movsl
mov
pop
xchg
inc
jb
ds
inc
mov
shll
and
sub
addb
sbb
in
adc
dec
sub
sbb
mov
insb
into
sub
add
or
xchg
fisubrl
ss
jp
les
das
and
or
xor
mov
int3
sbb
push
push
lods
xor
mov
dec
add
fiaddl
push
push
xchg
add
sub
jae
pop
and
mov
cmp
mov
jne
lret
les
clc
mov
cld
jb
das
xchg
bound
hlt
xchg
inc
iret
pop
push
cmpl
dec
push
fldl
sub
inc
adc
inc
fbld
mov
or
sbb
jp
aam
cmpl
push
ror
lret
jl
movsb
mov
sub
adc
mov
inc
add
and
dec
jne
mov
pop
ljmp
lret
and
lahf
lods
cmp
mov
jnp
ror
lods
xchg
pop
sarb
jmp
fdiv
rcrl
clc
cmc
cltd
loopne
mov
mov
sbb
and
xchg
mov
hlt
test
rolb
rclb
push
sub
mov
inc
and
jno
jecxz
movsl
pop
jnp
push
popa
adc
add
fstpl
add
cmp
inc
lret
ret
pop
or
mov
loopne
cmp
stos
pop
nop
iret
xor
enter
push
fidivrs
insb
fdivrl
lock
or
push
stos
mov
lret
xchg
stos
add
outsl
pop
lea
vpunpckhwd
dec
aad
out
mov
dec
sub
repnz
aaa
std
and
fmuls
push
js
push
fmul
xchg
repz
mov
dec
daa
mov
mov
pop
adc
jle
subl
ja
push
mov
lret
decb
cli
cwtl
xlat
cmp
sbb
or
and
add
sti
mov
dec
xor
pop
cmc
sahf
jnp,pn
mov
push
mov
sub
cwtl
jg
lret
mov
insl
sbb
insb
js
addb
pop
fisttps
pop
shrl
sub
sarl
push
gs
fwait
lods
mov
sub
pusha
xchg
cmc
mov
ss
xor
pusha
out
xor
cwtl
ja
lahf
adc
rcl
out
mov
adc
jne
ret
push
sbbb
jae
adc
inc
sbb
mov
mov
ret
in
xlat
sbb
lret
mov
pop
push
aaa
popa
sarb
mov
and
jo
ss
imul
xchg
test
enter
mov
cmpsl
int
xor
por
pop
repnz
mov
cmp
or
and
pop
rorl
and
xor
sub
dec
push
stos
push
xor
push
inc
int3
and
cmp
out
add
sub
inc
push
pop
bound
in
adc
aad
xor
fs
xor
jno
pop
push
pop
jp
or
dec
jmp
aad
push
inc
shl
inc
addr16
nop
packuswb
mov
pop
jmp
loope
sub
ret
or
mov
aam
jg
mov
lret
mov
out
fwait
shl
mov
or
or
sbb
orl
sub
notb
xchg
mov
icebp
inc
cmp
pushl
cli
mov
hlt
inc
imul
sahf
mov
add
fadds
jae
pop
test
push
pop
pop
pop
mov
loope
test
std
pop
addr16
dec
aad
or
pop
aad
iret
inc
loopne
lret
into
cmp
aam
jmp
cmpsb
sbb
stos
clc
test
lahf
push
xor
mov
or
jmp
inc
les
pushl
pop
mov
xor
inc
xchg
ja
out
xor
adc
shlb
mov
loop
sbb
int
out
icebp
popa
sub
inc
mov
xor
mov
ja
repnz
inc
xchg
shll
jecxz
dec
pop
test
cmp
dec
sub
out
pop
fsubrs
mov
test
xchg
cli
sti
iret
mov
jbe
dec
int3
pop
rol
sub
xor
lock
in
rcrw
in
mov
push
mov
imul
cmp
ja,pn
insl
inc
push
or
push
pop
popf
aam
cmp
mov
add
push
pushf
cmp
dec
xchg
pop
jle
mov
jge
js
sub
ret
and
pop
dec
in
stos
nop
pop
js
xorl
bnd
push
test
outsb
xor
and
jl
mov
js
test
mov
cmc
scas
and
gs
mov
jp
idiv
cwtl
or
jg
int3
rorb
xlat
jl
hlt
jg
movsb
jo
pop
sub
cmp
sahf
out
pop
jecxz
jns
mov
mov
or
sub
cltd
test
pop
movsb
cmp
dec
inc
icebp
add
aam
or
fs
enter
inc
ss
mov
popf
jno
cmp
rol
adc
out
stos
call
jg
mov
pop
cli
xor
add
test
adc
fstp
dec
rcr
arpl
push
mov
or
je
sbb
pop
push
rclb
fdivs
pushf
daa
push
dec
xor
dec
lahf
pop
gs
jecxz
or
lahf
mov
adc
test
push
sbb
lods
adc
lock
fmuls
stos
xor
lcall
leave
mov
xchg
xchg
mov
or
dec
decl
punpckldq
popa
mov
mov
addb
ret
pop
mov
shl
divl
sarb
inc
add
call
and
stos
das
lret
loop
inc
jns
data16
adc
sbb
and
in
in
sbb
dec
pop
jecxz
movsb
and
mov
pop
jecxz
or
lret
into
stc
jae
in
push
add
lea
cld
pop
in
xor
add
dec
sti
dec
lret
inc
mov
and
adc
aas
stos
mov
cmp
cmp
daa
add
in
pop
inc
jns
dec
out
xlat
test
stos
in
popf
leave
add
cmpsl
add
paddq
xchg
testb
jmp
arpl
xchg
push
jle
sahf
aad
sub
add
fidivs
inc
jp
out
cmp
push
mov
stos
mov
pop
insl
loopne
loopne
shlb
imulb
and
and
xor
outsl
push
movsl
sub
ds
adcb
sub
jbe
push
insl
and
fisttps
xor
inc
push
idivl
ss
popf
mov
sbbl
out
pop
pushf
xchg
cmp
fnstsw
outsl
xchg
push
mov
popf
xchg
fwait
out
dec
dec
inc
out
or
xchg
jmp
mov
jg
mov
mov
test
inc
ficoms
push
mov
leave
push
add
add
loope
xlat
cmp
repnz
call
inc
cmpsb
pop
frstor
cmpsl
or
ljmp
ss
or
lret
mov
xchg
cmp
or
and
icebp
ret
cmp
test
add
adc
popa
mov
and
js
inc
sub
inc
shl
loop
adc
xor
mov
icebp
jl
push
addb
cmp
movsb
adc
mov
into
addb
sub
mov
inc
xchg
dec
dec
add
dec
in
cli
shlb
cmpsb
dec
cmp
add
inc
pusha
xchg
push
xchg
leave
out
sbb
pusha
mov
mov
sbb
pop
mov
mov
testl
push
sub
push
stc
push
cs
stos
cmp
fadd
jne
jo
scas
sub
ret
lea
sbb
dec
jnp
inc
aas
ljmp
xor
push
push
add
mov
dec
adc
in
imul
push
xchg
dec
loopne
and
push
movsb
dec
das
je
jbe
jbe
test
movl
fdivrs
mov
stos
or
scas
pop
mov
and
xor
in
lret
repnz
stc
addb
test
xor
sti
mov
sub
jne
push
in
ljmp
outsl
push
lret
popf
mov
sub
out
adc
sbb
jne
xchg
outsb
sbb
adc
in
mov
push
sbb
lret
data16
into
add
mov
imul
std
mov
push
js
pop
mov
cld
bound
popa
pop
xchg
push
push
adc
inc
push
cmp
lea
sbb
mov
pop
cmpsl
leave
icebp
mov
lahf
scas
xlat
mov
jmp
adc
addr16
loop
push
mov
pop
and
lds
insl
cltd
jle
jne
or
cltd
outsb
mov
pop
jb
xchg
testl
jg
xor
imul
ffree
xchg
gs
mov
arpl
xor
test
aaa
outsl
jns
sbb
mov
andl
dec
aad
fldl
int
jecxz
scas
add
aas
xor
xor
add
dec
jp
fwait
arpl
data16
in
cs
movsl
movsb
call
sahf
dec
fs
subb
sbb
addr16
xor
or
cwtl
mov
ds
cmpsb
mov
cmp
ret
imul
push
ficoms
add
ret
add
pop
pop
xchg
xor
les
xchg
lods
xor
fs
stos
inc
mov
cmp
and
mov
or
in
jg
decb
test
ret
dec
imul
inc
lods
lea
sbb
xchg
insl
sub
pushf
icebp
test
adc
dec
xchg
mov
adcl
stc
or
add
icebp
sbb
loop
bound
push
fiadds
nop
int
icebp
mov
jg
leave
sub
push
testb
sub
repz
and
test
mov
adc
mov
fistps
lods
jne
aad
push
or
mov
in
or
xchg
mov
pop
xor
insb
cmpsb
movsl
mov
daa
iret
and
mov
insb
lret
sbb
sbb
sub
xchg
or
addb
add
or
stos
xchg
pop
inc
add
mov
roll
mov
jmp
pop
cmc
xchg
stos
fsubrl
push
lods
and
sub
fcoml
test
sbb
clc
push
push
dec
sub
mov
aaa
mov
sahf
adc
popa
pop
ss
xchg
leave
cmp
sbb
lcall
cltd
add
fdiv
dec
rolb
in
cmp
cld
dec
xchg
or
push
imull
sub
xchg
stc
test
ret
pop
popa
dec
insb
roll
add
and
fwait
hlt
xor
inc
sbb
arpl
sbb
xchg
mov
enter
ret
jo
js
sbb
rol
pop
jmp
int
push
dec
std
pop
sbb
sbb
inc
rcr
xor
popa
jg
lcall
add
dec
cmp
jb
push
jg
popf
inc
call
test
pop
ljmp
dec
mov
ja
inc
aad
or
hlt
inc
cwtl
insb
stc
jbe
in
cmpsb
cld
and
xor
mov
js
notb
lret
adc
ljmp
out
pusha
pushf
xor
pop
hlt
push
push
and
stos
lret
or
jecxz
bound
fcomip
scas
sbb
mov
addr16
sbb
aam
push
jmp
ret
test
mov
xchg
dec
shlb
jne
pushf
call
fldl
jne
xor
ret
lea
mov
repnz
and
push
jne
xor
test
arpl
ljmp
mov
jno
inc
pop
mov
push
or
sbb
jg
nop
dec
and
jnp
xchg
std
dec
adc
pushf
stc
divb
adc
je
dec
fisubl
add
pop
jae
mov
insb
adc
in
mov
and
xchg
sbb
out
cltd
or
addr16
sub
xchg
xor
inc
mov
inc
xchg
xchg
orl
push
add
push
sub
in
les
cli
int
call
outsl
fwait
movl
mov
fsts
add
dec
add
dec
in
in
movsl
movsb
xchg
ret
jb
rcl
jns
lods
push
inc
mov
jbe
pop
xor
je
insl
xor
jp
inc
pop
pushf
xor
mov
mov
fisubs
fidivl
out
outsb
jp
inc
pop
aam
adc
mov
dec
mov
jl
add
mov
fs
lods
mov
pop
and
xchg
dec
movsl
scas
aaa
and
dec
adc
push
mov
and
insl
jge
pop
and
sbb
loope
mov
mov
mov
imul
adc
shl
mov
ljmp
push
hlt
xor
cltd
mov
xor
jecxz
out
add
testb
and
xchg
mov
lahf
sbb
xchg
lods
icebp
out
flds
cmp
lock
push
pusha
mov
jnp
add
jns
repz
xchg
pop
into
mov
inc
addb
mov
add
arpl
pop
insl
enter
addr16
mov
jecxz
daa
in
js
jg
cmc
das
in
or
ficoms
inc
xchg
or
bnd
push
incb
inc
loop
aad
dec
test
cmp
adc
aam
shrb
and
roll
stc
cmpsl
inc
mov
dec
lods
fisttpl
std
push
je
shl
bound
fiaddl
rcll
adc
iret
cmp
ret
imul
mov
push
mov
mov
das
xor
or
pop
fisubrl
das
addr16
push
or
mov
fldcw
iret
push
scas
cltd
int
push
test
sub
adc
sahf
xor
or
cld
xchg
sbbl
jg
sti
les
rcll
gs
pop
and
out
adc
iretw
cmp
add
test
push
mov
cwtl
testl
and
or
out
cmp
jg
or
mov
sub
cmp
adc
lock
sahf
ret
movsb
cwtl
js
cmpsb
jae
mov
push
xchg
fs
mov
mov
inc
mov
sub
bound
pop
pop
mov
push
xchg
loop
jae
in
lea
dec
das
gs
sub
push
dec
push
sar
push
mov
fisttps
xchg
pop
cmpsb
gs
or
cmp
pop
adc
dec
aas
sub
cmp
push
dec
lret
fsts
inc
dec
or
sbb
jae
lods
mov
in
frstor
jno
fistpll
jl
xor
addr16
mov
inc
jo
inc
call
inc
pmulhuw
and
test
fcomp
test
loope
mov
insb
mov
add
aaa
sub
mov
test
stos
jbe
lds
cmp
sbb
in
orb
test
les
sar
push
outsb
adc
test
or
std
pop
fsubrs
sub
in
adc
fisubrs
dec
push
lret
cli
adc
stc
outsb
leave
fstpl
mov
push
dec
pop
push
ja
xchg
and
scas
adc
lock
in
sbb
mov
mov
jg
dec
mov
loopne
fmull
sub
mov
mov
call
dec
arpl
dec
inc
sar
repz
jb
std
push
mov
in
xchg
andb
push
leave
mov
dec
je
clc
aad
jo
lods
adc
aaa
pop
ds
mov
push
pop
adc
lcall
or
or
xchg
arpl
fsub
lods
dec
dec
mov
test
push
sbb
ljmp
lds
pop
loope
ret
aas
icebp
push
ljmp
popf
pop
mov
sti
jl
inc
outsl
decl
pop
mov
aad
mov
arpl
fsubs
repz
outsb
xchg
mov
add
pop
xchg
or
jnp
arpl
xchg
adc
mov
dec
sub
pop
mov
outsl
add
adc
and
or
sub
jnp
fsubr
mov
rcrb
ljmp
adc
into
repnz
insl
leave
in
mov
ljmp
pusha
fcoms
pop
insl
sbb
loop
outsb
sub
jle,pn
inc
pop
mov
mov
inc
sbb
sarb
dec
std
mov
push
addl
je
pop
sbb
sub
out
inc
mov
mov
push
insb
insb
add
lods
enter
mov
inc
pop
icebp
xchg
mov
callw
fiadds
add
pop
xor
xchg
jae
sahf
add
sbb
lret
scas
xor
bound
and
push
push
sub
cmc
mov
dec
mov
scas
sbb
mov
cld
out
pop
jmp
lods
push
mov
sub
add
add
xchg
xchg
xor
sub
and
sub
jne
lods
dec
ljmp
in
sbb
or
aam
aas
mov
or
xchg
lds
jle
sub
sub
adc
les
mov
dec
jb
mov
leave
gs
pop
cmp
mov
cmp
insl
out
int3
dec
or
xor
and
ja
push
sub
mov
xor
jbe
and
sub
and
inc
adc
push
daa
stos
aam
sbb
cmc
xlat
add
sbb
gs
cltd
loopne
and
jb
sbb
fwait
adc
out
mov
stos
rclb
pop
cld
cmp
dec
dec
mov
scas
pop
test
push
jns
and
jne
xlat
jecxz
fwait
push
imul
rol
pop
mov
insl
lret
mov
push
mov
mov
int3
xchg
movsb
fldl
dec
pop
ret
jbe
mov
outsb
jecxz
inc
sahf
cmp
jbe
push
in
cli
pop
push
cmp
cmp
sbb
and
icebp
sub
imul
call
sbb
mov
ja
test
dec
xor
int
xchg
xor
jle
xchg
ret
out
mov
out
mov
mov
int3
adc
fstpt
aas
ljmp
cmp
incb
out
add
and
push
sub
cmc
sbb
jle
test
push
std
fdivs
out
inc
jns
das
stos
ret
add
sbb
sahf
stos
lahf
test
mov
pop
jb
out
scas
add
out
jecxz
or
scas
out
cmp
andb
dec
cli
adc
mov
sub
or
nop
mov
cmp
out
fwait
sub
lcall
das
dec
jno
fwait
aaa
jp
roll
cmp
jne
insb
push
xchg
loop
pop
mov
outsb
cltd
outsb
movsl
pusha
pop
insb
adc
rsqrtps
sub
sbb
out
mov
test
add
add
iret
fnstcw
loopne
sti
inc
xchg
push
rcrl
xor
jge
sub
jnp
dec
adc
pop
das
fstps
dec
adc
xchg
and
cmpsl
mov
pop
les
cltd
hlt
add
or
mov
push
inc
in
adc
cs
hlt
in
sbbl
mov
push
mov
inc
repnz
push
xor
dec
xor
push
jge
subb
fldt
icebp
jecxz
ja
xor
and
std
into
push
inc
bound
lock
arpl
es
icebp
push
adc
pop
push
push
mov
cmp
out
imul
popa
cmp
sbb
jl
lret
test
sbb
pop
mov
add
inc
pop
aaa
sti
adc
fsubs
push
repz
jno
repz
adc
clc
insb
cmp
sbb
mov
outsb
popf
ror
jno
jmp
inc
cmp
sub
fmull
xor
xor
add
mov
xchg
cmp
and
cmp
aas
mov
in
mov
push
push
jmp
and
ret
push
sbb
xchg
mov
decb
idivl
or
sahf
jo
pop
lock
pop
insl
lret
mov
lahf
sub
mov
push
sub
or
xor
out
or
adc
loope
and
xchg
mulb
jb
push
xchg
mov
xchg
and
iret
add
icebp
xor
push
scas
mov
dec
xor
loop
mov
push
mov
and
repnz
test
sub
aaa
jb
addb
mov
shll
dec
ss
or
cmp
push
inc
dec
pop
or
shll
rcrl
lock
cmp
movl
lods
adc
pop
pop
mov
xor
xlat
data16
les
mov
inc
mov
xchg
cld
int
lea
jo
loop
rorl
es
add
in
xor
in
pop
sub
int3
or
jns
ja
sub
jb
pop
jo
cmp
leave
cmp
sbb
les
sub
loopne
or
dec
xchg
outsl
xchg
pop
sub
sbb
fwait
inc
icebp
mov
dec
push
pop
and
push
pop
jae
jecxz
mov
push
dec
xchg
in
jno
jbe
loopne
arpl
incb
jo
push
in
dec
insl
shlb
negl
and
push
sbb
xchg
xchg
pop
repnz
xor
jmp
mov
icebp
mov
sbb
test
enter
mov
or
jne
mov
notl
scas
clc
xchg
out
pop
int
mov
sub
push
pop
sahf
cmp
xchg
bswap
inc
repnz
ror
push
lods
mov
add
scas
adc
mov
clc
cwtl
rcl
mov
inc
imul
pusha
aad
sar
iret
and
lods
cltd
pop
jge
mov
frstor
add
into
leave
dec
dec
imul
loope
es
fists
aam
sbbb
test
iret
orb
cmp
fnstsw
les
jecxz
sub
push
or
jns
add
mov
xchg
sbb
int3
xchg
test
data16
scas
fmull
loop
xchg
bnd
xchg
fisubrl
jmp
and
int3
ret
mov
cmc
sbb
fwait
jmp
es
mul
and
int3
cwtl
ja
arpl
data16
add
cmpl
xchg
fisttpl
ljmp
xchg
enter
dec
push
loopne
bound
xchg
in
and
dec
sbb
aaa
and
mov
jne
xlat
xlat
and
jg
into
adc
add
xor
jb
clc
sub
push
into
scas
dec
xor
mov
and
in
sbb
lods
adcb
sahf
adc
inc
xchg
into
cld
jbe
lods
sub
ljmp
sub
push
in
gs
inc
sbb
aam
mov
add
mov
pop
push
mov
cmp
add
xlat
cmp
movsb
and
mov
jle
cld
jne
sub
fs
mov
iret
mov
and
xchg
es
out
cmp
or
sbb
bound
mov
adc
in
sti
roll
int3
mov
add
idivl
xor
xchg
inc
add
push
rcrl
push
jle
or
icebp
cwtl
daa
sub
bound
clc
in
sub
fsub
mov
or
push
jg
push
pop
push
push
inc
andb
inc
dec
addl
sbb
xchg
lahf
cmp
lea
jmp
popa
and
jge
lds
nop
pusha
sbb
mov
subl
sti
outsl
push
xchg
cmp
insb
ds
mov
sti
xchg
das
out
insl
pop
cwtl
xchg
dec
mov
jno
xchg
iret
sbb
jbe
jbe
bound
inc
adc
or
dec
or
pusha
sbb
add
sbb
call
jmp
jmp
inc
fdiv
les
je
adc
jmp
pop
out
adc
xchg
adc
in
pusha
xorl
mov
xchg
push
xor
cs
mov
mov
push
ljmp
lret
dec
dec
inc
loopne
sbb
mov
movsl
xchg
inc
xchg
and
cmpsb
std
inc
shlb
cmp
pop
xchg
push
or
cwtl
xchg
adc
fdivl
xorl
sub
sub
inc
pop
jmp
je
sub
jno
fsubrl
adc
aad
mov
std
scas
or
or
mov
lahf
ljmp
adc
nop
mov
mov
cltd
push
lea
stos
inc
push
mov
in
sub
jne
jb
xor
orl
adc
adc
aas
mov
jl
repz
or
shlb
inc
data16
testl
jnp
push
xchg
jecxz
xor
aaa
dec
aas
xor
icebp
scas
cli
ss
jl
iret
jne
shll
cmp
adc
adc
cmp
dec
popa
add
inc
xchg
xchg
sub
cld
ljmp
fisttpl
cmp
mov
xchg
mov
mov
aam
insb
and
cmpsl
sbb
cmp
push
jo
mov
sti
bsr
pop
adc
inc
hlt
cs
sub
cmpsl
sbb
leave
fistpll
out
repnz
loop
push
cld
leave
pop
movsb
push
enter
sub
popa
cmpsl
xor
lcall
inc
aaa
mov
out
movsb
test
cmp
mov
pop
jnp
pusha
mov
bound
rclb
testb
hlt
arpl
rcll
testl
push
pop
xchg
cld
pop
push
outsb
leave
int3
data16
repz
aad
movb
dec
clc
xor
inc
pop
inc
les
lea
fsubs
sbb
scas
cmpsl
adc
pop
popa
fimull
ret
or
test
dec
sahf
xchg
jno
incb
mov
test
lahf
roll
and
enter
test
mov
sbb
xorb
in
outsb
mov
aad
and
cmp
rorl
aad
xor
cmpsl
mov
ds
adcl
cltd
jle
xorb
mov
out
add
mov
inc
xchg
je
push
xor
and
mov
aad
add
or
insb
xchg
and
ror
add
lcall
cmp
xor
loop
jmp
and
fistl
dec
test
es
xlat
pop
hlt
and
jns
sbb
into
mov
pop
icebp
push
dec
jp
ljmp
jnp
dec
pop
mov
rorb
xchg
mov
push
or
shlb
fstp
mov
cli
out
lods
loop
nop
push
pop
js
mov
mov
movsl
icebp
fisttps
xor
scas
out
jbe
lahf
cmc
add
mov
push
cmp
mov
ljmp
push
pop
lods
xlat
in
leave
test
adc
movsb
xor
imul
pushf
in
jo
dec
das
outsl
mov
inc
dec
sub
mov
xchg
js
loopne
ror
adc
jb
fbstp
cld
and
push
sub
mov
and
rorb
int
stos
mov
xchg
add
sub
sub
movsb
insl
sub
push
pushl
idivl
mov
nop
cmp
jnp
adc
mov
push
popa
push
mov
jae
cmp
add
cmpsl
mov
shll
cmpsl
outsl
ficompl
xchg
fstl
fdivs
inc
jo
mov
xor
maxps
das
jne
cmp
jp
sub
test
rorb
cld
adc
orb
out
mov
pusha
imul
xor
inc
divb
dec
and
sub
rcrb
cltd
cld
pop
in
push
sub
lods
repnz
cmp
mov
adc
and
dec
pop
and
mov
pop
pop
pop
inc
aad
stos
inc
clc
jnp
fstpl
jp
adc
xor
imull
cld
add
adc
jbe
inc
js
jl
sub
pusha
cmc
rorb
sbb
sti
imul
sub
loope
xor
cs
inc
and
push
inc
mov
push
cld
pop
fwait
lods
je
pop
ret
les
les
lock
into
pop
lret
in
or
movsl
bound
xor
in
das
mov
divl
push
sub
xchg
push
addr16
shl
mov
lds
mov
mov
ss
inc
push
out
inc
popa
cmp
out
xor
cmpsl
enter
add
pop
lds
cld
and
dec
push
out
adc
cmp
call
out
das
dec
call
sub
fwait
push
dec
loopne
push
push
in
aad
or
stos
mov
addr16
jno
and
rolb
orl
into
nop
sub
test
mov
pop
push
sub
add
cmp
push
stos
loop
test
lret
push
jnp
push
pop
mov
jmp
and
sbb
add
out
pop
or
push
jge,pn
pop
mov
jno
pop
rclb
cmp
mov
inc
jo
mov
movb
mov
ficoms
xor
js
scas
pop
sbb
xor
mov
dec
inc
in
add
insl
sbb
cmp
gs
push
ja
adc
in
fnstsw
xor
out
dec
xchg
ss
int3
int3
scas
imul
lods
cmc
mov
pop
mov
cli
xor
insl
test
stc
jbe
addr16
mov
outsl
imul
add
push
xchg
jns
fsts
insl
mov
loopne
mov
pop
jne
lods
icebp
ds
outsb
mov
push
ja
aas
jle
frstor
xlat
shl
clc
lock
mov
stos
pop
jne
addr16
pushf
std
jno
sbb
xor
jp
lea
xor
xor
gs
je
xchg
xor
mov
xor
aaa
scas
jb
mov
lret
mov
js
sub
mov
push
cwtl
lret
add
push
pop
inc
ficoms
out
imul
gs
adc
shll
call
pushf
andl
and
add
jge
mov
lahf
loope
fldenv
into
das
out
push
dec
enter
sub
imul
adc
pop
xlat
or
stos
jae
inc
orl
call
out
or
cs
or
imulb
lods
sti
loope
cmpsb
in
leave
into
jbe
xor
mov
gs
xchg
aam
or
jp
sub
scas
push
or
fdivl
inc
xor
dec
sbb
inc
pop
test
adc
pop
pop
xor
test
loope
lahf
add
xor
loopne
mov
gs
xchg
stos
push
cltd
and
es
lcall
es
scas
mov
push
inc
jp
xlat
lret
lea
and
sahf
fwait
xchg
add
test
aad
jne
jbe
dec
je
sub
lock
jbe
leave
jns
insl
xor
and
rolb
fisttpll
inc
aaa
push
or
mov
or
push
mov
movsl
dec
dec
add
iret
insb
pop
pop
adc
test
dec
xchg
mov
mov
jle
xor
js
movsb
fcoml
jle
xchg
inc
cld
mov
and
cwtl
mov
jo
test
mov
mov
movsb
lcall
std
shr
adc
es
mov
lods
cmp
es
shlb
negl
std
jp
inc
jne
mov
scas
jno
inc
ja
jmp
sarl
cltd
test
pushf
adc
sbb
repz
lahf
push
dec
cld
movsl
jp
mov
movsl
daa
or
mov
mov
jns
xchg
add
adcl
push
cmpsb
movsb
push
arpl
lock
jl
clc
out
pop
pop
ljmp
inc
out
mov
push
sub
mov
and
adcl
scas
fs
lock
fsubrs
inc
cld
adc
inc
inc
fistpll
jb
dec
xchg
xor
push
mov
addr16
das
cmc
mov
dec
popf
loopne
lds
push
loop
imul
push
adc
ret
mov
popf
ret
push
out
fisubrl
mov
imull
jmp
push
roll
lock
shlb
inc
cmp
fnstsw
and
sbb
add
stc
xor
jae
das
mov
xchg
add
jge
clc
imul
jns
push
rcl
sbb
or
cmpsb
jl
push
in
dec
push
sti
loope
push
sub
ljmp
push
pop
pushf
cmp
mov
mov
inc
sub
jne
ss
cli
cmp
aad
out
nop
and
push
xor
std
fs
jl
insb
nop
inc
push
sbb
mov
mov
aad
and
push
movsl
fcmovnb
mov
adc
insl
cli
popf
lret
in
xchg
xchg
lods
jg
add
lret
add
jb
jo
test
dec
mov
push
test
cmp
inc
out
xorb
lock
sub
adc
lods
outsl
insb
pop
mov
jne
xor
loopne
push
ret
mov
test
inc
cmp
hlt
dec
push
into
stos
push
pop
mov
loope
mov
iret
cmpsb
out
cmp
cmp
test
jbe
cmpsl
cmpsl
cwtl
out
add
xor
push
hlt
js
mov
les
inc
shr
jge
pop
int3
test
aaa
fldpi
lods
stos
repnz
fcoms
xchg
les
lea
fstl
inc
stos
bound
nop
jge
cmp
faddl
clc
jno
fstpl
nop
mov
mov
sub
lahf
pusha
into
hlt
insl
filds
fs
adc
xchg
jae
gs
inc
ss
out
add
push
repnz
pop
add
inc
aaa
push
pop
xor
nop
addb
shll
pop
aad
mov
daa
xor
roll
jp
xchg
rclb
mov
adc
sub
adc
mov
or
adc
or
add
sbb
fs
adc
or
add
xlat
stc
movsl
lea
fsubl
sub
pop
inc
loopne,pn
es
push
inc
in
mov
cmp
rcll
decl
push
lcall
mov
jno
aam
jp
sbb
adc
dec
cmp
xchg
fcompl
mov
fidivrs
xchg
add
lret
stc
sub
inc
gs
test
jb
scas
mov
jb
mov
push
out
adc
jmp
mov
out
sub
pop
inc
scas
push
dec
sub
cltd
pop
iret
cmp
mov
outsb
outsb
adc
stc
mov
mov
pop
lock
and
jb
stc
insb
ss
dec
jp
gs
lea
sub
push
pop
mov
jle
jo
mov
xor
jb
xchg
and
shll
stos
xchg
ja
sub
push
ret
popa
cmpsl
cmp
int
cmp
and
cli
enter
jne
outsl
and
adc
jo
jg
sbb
sbb
sbb
mov
xlat
aas
in
sub
add
sar
pop
cmp
mov
das
cmpl
push
bound
std
and
and
push
cltd
dec
cltd
mov
jmp
fsubrs
lock
mul
mov
test
adc
scas
insb
or
cmp
pusha
cwtl
ss
or
add
add
pop
and
dec
push
xchg
pop
out
jmp
xlat
lods
sub
mov
mov
dec
jecxz
add
cmp
xchg
mov
sbb
jne
or
and
sub
cmp
stos
mov
sub
jp
or
scas
push
repz
inc
adc
das
mov
mov
mov
push
in
jae
dec
ucomiss
lds
xor
ret
ficompl
xlat
arpl
mov
add
test
shll
filds
insl
or
pushf
jno
mov
enter
jle
fidivl
xchg
push
test
dec
sub
hlt
push
sti
in
mov
js
lret
ljmp
sbb
cmp
jmp
gs
add
cmp
dec
inc
mov
sbb
add
ret
push
push
mov
and
jg
test
jmp
dec
scas
movsb
scas
sub
fnstenv
add
bound
imull
sbb
aas
out
ror
ljmp
lahf
and
adc
popf
push
icebp
scas
sarl
roll
push
lods
push
mov
mov
in
arpl
aam
lret
or
sbbb
arpl
rcrl
lret
popa
mov
daa
imul
and
xchg
mov
je
xlat
jg
cwtl
test
mov
in
in
dec
and
arpl
addr16
or
xlat
xor
cmp
xor
push
jg
je
pop
mov
lods
mov
inc
adc
push
push
and
insb
cmp
sbb
add
adc
mov
mov
sarb
pop
or
pop
mov
mov
push
flds
adc
dec
enter
adc
sti
push
pop
dec
negl
mov
loopne
imul
lock
daa
dec
mov
aas
pop
shll
push
ret
enter
xor
jae
jp
fstps
mov
jbe
jae
push
ds
into
xchg
push
xchg
mov
push
aas
mov
push
das
scas
mov
fstl
in
sub
lret
dec
and
into
xchg
xor
aad
or
popa
push
jbe
inc
xor
rol
addl
jl
mov
or
in
es
mov
es
imul
mov
xchg
mov
andl
xor
mov
xchg
add
sub
stc
xor
out
cmpsl
lods
push
xor
scas
std
ret
testl
add
loope
cltd
or
call
jle
ljmp
jns
leave
das
je
lret
mov
popa
pop
and
add
inc
insb
dec
inc
test
lret
cmc
pop
ret
rcrb
and
clc
add
dec
mov
mov
enter
adc
repz
pop
clc
and
sub
xor
test
cmpsb
jnp
mov
cmp
cmp
repz
inc
pop
xchg
lea
xor
sti
add
cli
ljmp
inc
adc
adc
add
movsb
mov
push
push
pushf
sub
push
cmp
sub
mov
mov
in
out
cs
in
scas
test
mov
jecxz
cmp
mov
rorb
lret
xor
mov
loope
cld
push
cld
aam
mov
int3
fwait
movsl
cmp
push
aam
insb
cmp
js
inc
pop
push
cmc
sbb
dec
jg
fcmovnbe
push
gs
mov
jb
lock
mov
out
push
dec
cs
repnz
inc
sbb
stc
bound
dec
les
xchg
jno
push
jle
dec
mov
sub
jmp
fidivl
aad
or
and
imul
nop
out
mov
xor
jne
es
lods
insb
dec
xlat
int
shlb
jnp
sub
rcr
mov
ja
subb
ds
js
cmp
out
xor
xchg
inc
les
outsl
lods
inc
adc
fucomip
and
jnp
es
xchg
or
hlt
or
mov
loop
loope
push
mov
pusha
stc
push
or
sti
jmp
int
in
xchg
push
femms
mov
iret
loope
mov
mov
xor
out
push
stos
mov
fcompl
inc
push
leave
mov
mov
or
int
fmuls
adc
xor
push
cmp
iret
add
adc
rcrl
add
daa
cmc
mov
das
xor
adc
cmp
pop
cmpsb
and
outsb
test
fidivrl
add
mov
imul
sub
inc
inc
push
bnd
scas
pop
out
jge
mov
outsl
pop
adc
fiaddl
loopne
out
cwtl
addr16
cltd
outsl
mov
push
movsb
cmp
xchg
iret
shlb
cmp
adc
loope
inc
gs
call
sbb
mov
nop
pop
add
dec
or
loopne
in
xchg
ret
add
mov
push
fwait
ds
pop
cmp
push
sbb
add
or
cmp
decl
test
adc
ljmp
sub
pop
xor
enter
rcr
inc
xchg
pop
inc
in
push
cli
loopne
test
sub
push
jmp
test
addr16
ret
stos
push
jle
rcrl
mov
mov
inc
loopne
dec
js
push
aaa
xor
and
cld
lock
adc
mov
xchg
sbb
xchg
mov
xor
pusha
pop
testb
sub
out
lret
mov
inc
daa
push
sbb
cs
inc
push
and
mov
cltd
push
jg
fwait
movsl
xchg
pop
mov
mov
arpl
in
scas
pop
std
arpl
sub
xor
mull
push
sbb
pop
popa
mov
jle
stc
adc
iret
setge
daa
cwtl
mov
ret
shll
movsl
push
pop
fldl
addr16
insl
imul
or
mov
and
mov
mov
int3
das
aaa
ds
scas
sbb
mov
push
setae
xor
repz
ljmp
sbb
lods
add
enter
out
adc
jp
inc
iret
cmpsl
mov
cmc
mov
ds
in
movsb
out
into
inc
mov
enter
add
xchg
inc
push
jl
jo
out
push
add
and
cli
adc
push
lret
loope
hlt
fists
pop
rol
sbb
add
pop
sbb
notb
test
xchg
divb
das
dec
scas
jp
xor
cmpsb
jno
push
or
sarb
and
dec
insb
aam
repnz
je
in
mov
aas
inc
ds
loope
mov
icebp
iret
aas
adc
push
dec
sub
pop
adc
mov
xor
sti
fs
sbb
push
lret
mov
fistpl
jns
lds
or
add
adc
aas
xchg
aam
and
sub
fs
stos
push
sarl
pop
add
pushf
sbb
xor
or
pop
addb
jne
out
push
adc
aas
cmp
iret
mov
add
test
ljmp
dec
mov
stc
push
sub
add
call
mov
int
add
ret
adc
xchg
cltd
les
pcmpeqd
out
ficoml
cltd
jne
jp
cs
cs
mov
push
or
adc
xlat
add
and
scas
das
mov
adc
test
push
ret
sbb
xchg
out
mov
insl
jge
insl
repz
sub
arpl
pop
inc
add
xchg
inc
nop
mov
push
and
mov
mov
mov
cmp
mov
data16
in
add
leave
movb
aas
in
stos
hlt
adc
jge
xchg
add
mov
andl
push
mov
std
and
mov
stos
push
push
pop
into
movl
jae
jnp
mov
pushf
xchg
pushf
push
aaa
add
cmp
inc
jle
add
subl
jns
aas
aas
out
jecxz
hlt
dec
aas
pop
push
subps
push
push
movsb
inc
pop
bound
pop
adc
out
cmpsb
aas
pop
dec
xor
loope
push
or
jg
cmpsl
lret
jns
or
xor
pusha
lods
mov
pop
ljmp
repnz
mov
mov
xchg
ret
pop
fdivl
mov
mov
xchg
lods
or
int3
sub
jp
repz
popa
xchg
dec
sbb
clc
call
ss
inc
mov
pop
cmp
pop
les
lret
outsb
mov
je
cmp
pop
jnp
mov
stc
xor
jmp
call
js
je
loopne
xor
sbb
gs
pop
cmp
pushf
inc
xchg
dec
sub
mov
jb
lods
adcl
pop
sbb
fistl
pop
mov
mov
sbb
push
clc
mov
push
xchg
iret
fadds
addr16
rcrl
xor
daa
adc
sub
in
push
fs
mov
cmp
cmpsl
xchg
mov
scas
pop
add
adcb
xor
pop
push
mov
mov
popa
movsl
das
ret
dec
mov
scas
imul
ret
xor
push
mov
jo
sbb
stos
sub
outsb
mov
gs
sub
dec
mov
pop
push
mov
push
inc
hlt
lea
int
sarl
mov
adc
inc
nop/reserved
xchg
loopne
dec
movsb
and
cmp
fwait
mov
add
dec
jne
sub
push
and
and
jo
sub
xchg
adc
mov
jecxz
movsb
jnp
gs
aam
xchg
sbb
int
push
sub
out
out
push
cwtl
neg
and
pop
sbb
int
arpl
add
sub
dec
pop
push
vpsubsb
fsubl
sbb
daa
push
xchg
inc
mov
or
sub
outsl
int3
push
lret
leave
add
mov
dec
out
test
cmp
int
fistpll
push
and
sub
cmp
xlat
cli
dec
bnd
sbb
xor
xor
mov
pop
mov
mov
shlb
pop
add
dec
dec
or
cmp
xor
lock
cmp
inc
int
fmull
inc
mov
enter
push
xor
mov
mov
push
je
popf
sahf
add
lds
pop
in
xor
out
push
dec
dec
fmull
jle
xchg
bnd
lret
adc
fdivl
mov
jno
bound
or
jmp
add
push
xor
stc
jmp
xlat
jnp
xchg
mov
push
inc
aad
add
notl
xchg
das
push
loope
or
movmskps
aam
insl
pop
scas
pop
inc
pop
dec
stc
jmp
jle
push
fbld
daa
inc
dec
xchg
shlb
ds
cld
xor
fs
inc
inc
inc
es
add
or
or
ds
sub
inc
sbb
ja
gs
mov
mov
scas
in
bound
add
jp
pop
cmpsl
movsb
test
out
sub
push
xchg
pop
sbb
cwtl
stos
enter
jle
add
mov
add
sub
dec
pushl
les
addr16
dec
test
pop
test
and
pop
push
mov
mov
fiadds
inc
adc
shld
pop
mov
adc
stc
scas
scas
push
inc
cmp
push
outsb
push
mov
repz
rolb
push
jle
sti
inc
in
jg
pop
stc
arpl
cli
mov
jmp
sahf
scas
pushf
inc
and
aas
cmp
lods
adcl
cwtl
lock
sahf
adc
frstor
icebp
pop
mov
lods
icebp
xchg
push
lock
test
out
ficompl
nop
mov
mov
adc
pop
sti
in
dec
fcomps
fcmovu
pop
cmp
adc
jmp
jne
mov
sub
adc
mov
sbb
stos
jle
fisubrs
fcmovb
out
cwtd
and
testb
stc
mov
mov
andl
loop
pop
popa
adc
add
into
call
cltd
mov
pop
test
ja
iret
mov
cmp
hlt
add
mov
xchg
es
sahf
mov
icebp
pop
nop
sub
test
cmp
scas
or
xchg
mov
pusha
lret
mov
lods
push
dec
repnz
jns
or
xchg
jecxz
jb
push
scas
repz
data16
cmc
push
mov
and
insl
xchg
pop
lock
xor
sub
test
or
fildl
test
xchg
out
and
xor
adc
xchg
inc
stc
or
frstor
jb
push
mov
insb
cli
jns
js
inc
adcl
add
sti
setnp
xlat
ret
lea
cwtl
mov
xor
jo
xchg
inc
cmpsb
push
test
adc
repz
sbb
leave
ja
mov
pop
fsubrp
sub
jg
incb
mov
mov
pop
aaa
iret
bound
mov
lahf
addr16
or
xor
pop
pop
push
rorb
or
mov
scas
mov
push
shlb
jb
lds
jg
xchg
lahf
dec
xchg
push
stos
or
in
jecxz
fcoml
pop
repz
pop
mov
in
add
mov
inc
fs
inc
loop
cmpsl
push
mov
adc
out
xlat
into
push
lahf
cmp
out
ret
daa
clc
mov
fsubl
lods
mov
lcall
lret
pop
ljmp
cltd
jg
outsl
rcr
cmpsl
popfw
mov
js
in
ret
jne
pop
popa
xchg
shlb
cmc
add
push
jne
iret
lret
jb
jge
push
push
mov
mov
push
mov
ds
sbbl
mov
stc
xchg
add
filds
lret
cli
lret
pop
cmp
xor
jge
hlt
cmp
xchg
ret
mov
and
adc
lret
rcrb
xchg
dec
inc
xchg
mov
cs
pop
jle
lock
daa
sti
andl
or
lea
cmc
outsb
cmc
cmp
popa
rorb
adc
inc
movsl
lds
popa
movsl
mov
mov
jns
out
pop
test
shll
mov
fsubs
aam
pop
aam
pop
test
adc
pop
sub
test
fcmovbe
mov
xchg
insl
dec
mov
xchg
pushf
nop
lock
iret
push
lea
mov
cli
and
in
hlt
cmp
push
adc
outsl
mov
adcl
mov
xchg
imul
incl
adc
loope
jl
cwtl
push
sti
sbb
sub
adc
sbb
nop
push
xlat
mov
lds
orl
jbe
xchg
push
rcr
fisubrs
lahf
or
int3
fimuls
pop
into
je
mov
add
xchg
cmp
jno
test
clc
into
sbb
cmp
and
mov
cmp
xchg
sar
fsubrs
int3
sub
jle
loopne
or
popa
sbb
cli
mov
pop
rorl
dec
jmp
mov
inc
xor
repnz
std
or
and
xor
xor
or
insl
adc
mov
push
add
mov
jle
rcrl
out
mov
mov
lea
test
jno
fs
mov
push
fs
lods
loopne
test
mov
cmp
and
mov
mov
jo
dec
push
lret
pop
sub
enter
mov
ss
imul
fdivrs
mov
imul
js
pop
xor
nop
and
outsb
or
sub
mov
bt
mov
xchg
repnz
nop
sub
adc
leave
lret
int3
aaa
test
pop
stc
sub
adc
mov
fcmovnbe
add
xlat
aam
adc
jmp
lcall
icebp
sti
mov
inc
push
sbb
or
popa
inc
jmp
sub
out
dec
lds
out
pop
mov
sar
jle
xlat
cmp
dec
inc
pop
push
clc
int
mov
lods
pop
mov
lea
sbbl
int3
mov
jle
outsl
xor
pop
fwait
mov
sub
inc
push
sub
leave
xor
xor
ficoml
jmp
add
add
jo
adc
mull
aaa
cmpsb
std
popa
mov
not
fadds
jecxz
mov
jno
test
mov
out
dec
xchg
or
je
push
sbb
sub
mov
push
push
and
pop
in
fnstcw
pop
in
xor
pop
xor
rorl
jge
push
icebp
and
inc
jae
scas
ret
fisubrl
stc
inc
pop
paddd
shl
repz
mov
xchg
jl
es
pop
xor
xor
iret
imul
push
neg
loopne
jb
outsb
inc
xor
inc
mov
mov
cmp
stos
mov
outsl
mov
mov
xor
push
in
nop
stc
or
es
ret
movl
cmpsb
push
add
lock
into
sbb
pushf
pop
push
inc
jmp
test
lcall
ficoml
iret
push
sti
out
dec
inc
je
xor
popa
jle
movsl
push
and
test
sahf
test
cmpsl
cmp
xchg
cmpsl
mov
ret
adc
cmp
mov
and
jecxz
lret
stos
stc
push
mov
fwait
cmp
jmp
mulb
jg
lods
cli
cmp
mov
mov
pop
mov
aaa
data16
stos
cli
movsl
arpl
repz
notb
dec
pop
test
adc
cmp
in
sub
inc
and
xchg
das
fisttps
pop
stc
in
jmp
popf
and
das
bound
mov
mov
sahf
adc
int
stos
and
mov
dec
mov
loop
xor
jnp
mov
scas
test
xor
sub
test
nop
dec
je
mov
push
int3
push
pop
fcmovne
sub
pop
pop
mov
adc
dec
pushf
push
cmpsl
push
add
cmp
add
inc
sbb
xchg
lods
vandnpd
or
adc
adc
and
popf
ds
pop
sub
xchg
xor
repnz
imul
mov
inc
jns
jae
push
mov
or
fucom
in
sub
sub
sbb
inc
scas
and
sub
ss
cli
mov
leave
enter
sbb
jo
in
mov
cmp
pop
xor
addr16
cltd
jo
pop
inc
sub
sub
in
or
jae
or
out
jne
dec
xchg
adc
scas
push
test
test
and
jge
lahf
cmp
sar
leave
lods
sahf
pop
xchg
stos
and
xchg
add
pusha
ret
test
ljmp
jle
xchg
xchg
sarb
xor
imul
inc
pop
dec
lret
pop
cmp
or
and
add
or
push
xchg
jecxz
pop
sahf
mov
in
fldcw
xor
mov
popf
data16
rolb
mov
std
movsl
movswl
xchg
sar
and
in
in
and
vandps
add
test
xor
icebp
jle
aas
cli
adc
ss
or
shlb
into
cs
arpl
in
call
mov
mov
jne
ficomps
scas
pushf
xchg
sub
adc
stc
clc
mov
sub
fsubrs
adcb
loopne
sub
lods
cli
bnd
mov
mov
lret
scas
jp
popf
out
call
inc
insb
cmpsl
mov
mov
add
das
stc
xorb
xchg
push
outsl
cmpsl
xlat
xchg
jne
push
loop
es
jmp
xchg
cmp
push
push
cmp
ljmp
adcb
mov
adc
jnp
add
stc
xor
pop
fsubr
das
lds
xor
jno
jmp
sbb
add
jno
and
fs
scas
ds
shrb
xchg
pusha
mov
rorl
movsb
inc
and
loope
sub
scas
push
fcomps
adc
sarl
outsl
int3
xchg
bound
xchg
xlat
adc
inc
dec
mov
aam
add
mov
lret
jno
and
pop
pop
sbb
push
into
ret
push
push
insl
aam
insb
push
jmp
int
sbb
in
repnz
mov
rorb
adc
cwtl
notb
sub
push
stos
out
loope
add
or
incl
mov
xchg
clc
jo
pop
scas
jo
cmc
and
push
mov
or
mov
cmp
xchg
popa
int3
sub
enter
cmp
inc
jo,pt
cmpb
cmp
mov
sub
push
inc
push
call
add
adc
ret
movsb
add
ret
cmp
or
mov
push
push
popa
in
xchg
add
cs
mov
cmp
xchg
dec
int3
enter
ror
mov
in
xchg
pop
or
gs
mov
jmp
mov
mov
push
insb
mov
rcrl
push
sbb
xor
lods
add
mov
mov
cmp
push
mov
adc
lods
pop
add
pop
mov
xchg
adc
pop
mov
lret
adc
pop
push
sbb
daa
pushl
cltd
jp
xchg
and
jge
mov
cmp
xlat
dec
dec
mov
ret
incl
repz
shlb
test
xchg
call
ss
sti
out
imul
cltd
enter
add
pop
test
mov
xor
aas
add
mov
insl
dec
dec
or
orb
add
sbb
sahf
out
pop
cltd
std
pushl
cs
fistpll
into
sub
into
adc
sbb
dec
pop
dec
add
jge
jbe
out
in
pop
and
add
xchg
ds
inc
test
xor
mov
xchg
popa
imul
cmc
mov
ss
xlat
stos
in
dec
pop
add
fldenv
push
int
int3
xor
mov
pop
shrl
push
mov
pop
pop
mov
xor
push
push
data16
cmp
inc
jge
outsb
cld
fyl2x
pusha
add
jmp
sti
pop
pop
mov
pop
movsb
xchg
cs
mov
cmpl
stos
pop
add
push
sbb
sub
mov
add
pop
pusha
loope
insb
daa
cwtl
outsl
xchg
decl
or
stc
adc
cmovp
imul
ja
lret
and
roll
inc
outsl
in
int3
xchg
fcmovu
jne
aaa
test
dec
fnstcw
sub
mov
add
pop
pushf
in
jecxz
movsl
hlt
fisttps
cmp
mov
xor
inc
or
lock
pop
push
push
lret
mov
lahf
dec
das
js
add
cltd
push
ja
xor
jl
shlb
xor
pop
orb
mov
and
lret
test
not
ss
inc
enter
or
out
inc
pop
add
or
inc
testb
loopne
cmpl
in
lret
jecxz
lea
fidivrl
mov
in
push
mov
xchg
rorb
cmpl
arpl
scas
enter
cmpsl
hlt
xchg
data16
and
fadd
mov
add
xchg
mov
pop
push
insb
mov
adc
mov
and
repnz
cld
add
fildll
dec
test
mov
sub
jne
cwtl
sub
or
pusha
sub
xchg
xchg
gs
data16
adc
popa
lcall
orb
xchg
cli
jae
scas
pop
loopne
inc
cmp
in
leave
out
jo
ret
pop
into
jle
push
popa
into
call
daa
xchg
jne
jbe
push
push
outsl
add
mov
push
xchg
je
outsb
push
loopne
sbb
hlt
inc
arpl
shrb
cmp
or
xchg
inc
fcompl
ljmp
rcrb
mov
and
int
cmp
add
das
lds
mov
mov
data16
adc
add
sbb
cs
mov
out
scas
inc
cmpsl
cmp
adc
mov
pop
out
push
movsb
pop
mov
and
push
fisubrs
jns
loop
mov
cmp
fidivrs
push
xchg
mov
daa
mov
mov
pop
mov
sbb
push
adcl
cwtl
scas
dec
adc
test
lods
out
iret
cmpsb
and
add
clc
cmp
xchg
pop
mov
data16
sbb
ds
or
xlat
mov
sahf
jo
push
pop
sub
movsb
lea
sub
outsl
pop
inc
mov
neg
adcb
sub
xchg
inc
mov
cmpsl
dec
out
xchg
fisubrl
aaa
sbb
es
mov
push
ja
mov
sub
lahf
mov
lds
and
pusha
rcr
pop
data16
sbb
mov
hlt
mov
sarl
cmp
push
push
dec
sub
cmp
dec
and
sbb
hlt
mov
mov
push
cmp
jbe
jl
in
jno
aad
sub
test
inc
shlb
xor
jae
mov
jg
adc
xor
pop
fwait
push
mov
sub
dec
mov
ret
mov
les
cwtl
push
shr
out
pop
xor
fidivrl
mov
fstps
fisttpl
xor
jb
jns
pop
scas
inc
test
cwtl
stc
sub
mov
ss
pop
cmc
inc
dec
push
or
push
xor
pop
or
rorb
loopne,pn
mov
aas
inc
repnz
insl
inc
jne
sbb
add
lret
pushf
inc
lods
add
sub
jle
sub
stos
jmp
lea
aad
movsl
jne
fcompl
inc
sub
and
test
fsubs
mov
add
or
gs
mov
push
xor
xchg
divl
cmp
cmp
inc
cld
jno
popf
ja
subl
pop
outsb
push
cs
cli
pop
sub
adc
ja
pop
sti
mov
sbb
push
adc
out
scas
shlb
inc
ret
pop
xchg
push
ror
push
cmc
and
pop
mov
push
pop
adc
xchg
xor
pop
sbb
push
xchg
xor
fistpl
pop
xchg
push
xchg
adc
in
mov
mov
out
sbb
or
xchg
sub
inc
mov
mov
mov
and
das
lods
jne
leave
inc
sbb
push
das
inc
test
imul
dec
fsts
in
jge
insl
mov
out
push
test
mov
outsb
call
aaa
push
sub
ljmp
lock
dec
cli
or
inc
sbb
mov
mov
xor
pop
ficomps
dec
lcall
jbe
or
ljmp
mov
mov
sbb
jle
stc
pop
jle
xchg
ret
test
sar
add
ss
adc
cmc
jae
inc
scas
sahf
inc
sub
sub
push
jbe
adc
gs
pushf
aam
pop
xchg
inc
sub
outsl
mov
pop
cmp
lret
mulb
inc
jae
push
dec
mov
or
pop
mov
scas
aam
pusha
lea
and
sbbl
push
add
andl
sbb
lcall
lds
or
push
push
dec
push
xor
xor
adc
popf
in
or
aad
sub
enter
push
les
ja
test
inc
fbstp
cmp
sub
out
pop
push
inc
sbb
push
call
pop
out
pop
and
repz
fwait
enter
daa
ljmp
pusha
jno
scas
movsl
rol
jae
xchg
aam
push
pushf
daa
sub
decl
xchg
addr16
dec
movsb
inc
xlat
enter
ret
mov
push
mulb
lcall
iret
std
push
xchg
rolb
ljmp
add
daa
dec
stc
jge
test
jg
mov
mov
jnp
push
es
pop
pop
inc
dec
jmp
ja
inc
jmp
les
jb
xor
mov
and
out
lcall
mov
icebp
jecxz
adc
iret
ljmp
push
imul
notb
aam
scas
cmp
pop
movsl
aas
scas
add
loopne
inc
jg
scas
mov
push
nop
out
sahf
decb
andl
push
dec
fchs
and
loop
or
xorl
into
add
sbb
push
jmp
loopne
xchg
mov
loop
fcompl
jecxz
dec
xor
repnz
xor
repnz
add
or
outsb
fisttpll
or
adc
sbb
mov
stc
mov
hlt
jne
out
add
and
js
into
jbe
jne
push
mov
inc
inc
mov
imul
push
mov
insl
mov
lea
and
outsb
jle
scas
out
pop
cmp
cli
cmpsl
or
outsl
mov
add
cmp
push
or
mov
sysenter
push
pop
mov
dec
pusha
pusha
push
fwait
push
jae
jmp
mov
ficomps
nop
add
adc
aam
cltd
icebp
aam
stos
js
xorb
outsl
jnp
jmp
imul
leave
xlat
notb
ss
sbb
repz
lret
cmp
sub
aas
imul
xchg
fdiv
popl
insl
cmp
stc
lcall
push
mov
xchg
ja
scas
pop
add
sbb
das
aas
ret
or
or
daa
mov
mov
and
mov
test
rcl
xchg
fnstsw
and
sub
push
adc
jb
fistpll
xchg
bound
cmp
arpl
in
sub
cmp
andl
subl
ss
pop
rcl
adc
push
jae
cwtl
jnp
mov
lcall
pusha
and
and
or
fsubs
or
jne
movsb
repnz
rolb
mov
dec
inc
pop
or
lods
imul
mov
pusha
cmp
out
les
mov
sub
jmp
mov
daa
out
sbb
xchg
popa
popa
inc
push
xor
dec
cs
inc
sbb
mov
sbb
pop
push
or
fcoml
cwtl
inc
sbb
add
aaa
sbb
and
rclb
or
loope
js
cmp
lods
les
repz
mov
cmp
cld
xchg
mov
and
fstl
inc
jmp
jo
adc
cltd
cmp
sahf
cli
or
imul
push
xor
xchg
sbb
adc
test
pop
mov
inc
xchg
dec
shlb
mov
lds
popf
dec
pop
lret
cmp
hlt
cmpsl
sub
fmuls
mov
lds
cwtl
fimull
icebp
int
test
mov
xchg
mov
xor
cmp
mov
movsb
pop
or
xchg
push
or
mov
adc
adc
lea
sub
sub
lret
leave
inc
in
arpl
xchg
add
xchg
in
loop
jge
sub
add
cmp
out
lcall
lock
push
sub
aad
mov
mov
in
mov
scas
and
xor
add
rclb
loope
repnz
pop
lds
pop
inc
scas
adc
sub
into
pusha
insb
mov
pushf
nop
imul
aas
push
out
imul
xor
xor
sbb
in
adc
shrl
and
cmp
jl
mov
fsubrp
mov
push
add
sbb
cmpsb
test
pop
xor
ret
pop
out
popa
sbb
fisttpll
mov
mov
mov
sbb
cmpl
dec
je
sub
fs
clc
xor
nop
pop
cmp
sbb
fisubl
aad
lds
push
lea
test
sub
xchg
push
lods
sbb
cmp
ja
push
movsl
push
inc
loopne
lods
in
add
pop
shll
mov
and
and
cmp
xorb
testb
cmpsl
leave
insl
mov
mov
mov
out
sub
xor
loopne
adc
xchg
test
cli
sub
insl
add
fstpt
insb
loope
adc
pop
dec
sub
je
ret
xor
ja
sub
scas
les
fld
xor
notl
jne
out
loope
push
aas
push
bound
out
ljmp
pop
sahf
dec
imul
fucomip
hlt
les
or
push
or
lock
cmp
and
testb
insb
out
xchg
iret
adc
movzwl
insb
sub
xlat
mov
sbb
push
das
jp
xor
imul
icebp
or
xor
clc
out
xchg
pop
stos
rcr
jns
mov
adc
fwait
movsl
ret
arpl
imul
cmp
push
dec
arpl
jl
movsb
mov
sarl
test
add
push
push
sub
arpl
sub
fimuls
lock
mov
sbb
call
push
push
add
pop
mov
pop
int
ficoms
into
cmp
aaa
sbbl
xchg
pop
mov
lret
aam
insb
xor
stos
xchg
testb
jmp
out
add
repnz
in
repz
mov
add
ljmp
js
push
mov
fcomi
fucomp
out
push
fcmovb
out
fldl
nop
adc
mov
xchg
mov
sahf
cmpl
and
push
aaa
mov
xor
sbb
cmp
test
lret
lock
lret
mov
push
and
mov
lea
mov
js
stos
xchg
pop
aad
popa
loop
jb
ds
sub
sti
iret
repnz
sti
cwtl
pop
inc
sbb
mov
push
std
int
jb
mov
incb
aad
add
adc
sarl
ss
push
xchg
dec
mov
dec
pop
sbb
mov
std
mull
or
mov
popa
push
mov
or
popa
nop
pop
jmp
ds
inc
xchg
lock
imul
iret
sub
inc
repnz
dec
jl
cltd
jne
jl
mov
sti
inc
cmp
ljmp
hlt
and
fcoms
sub
enter
mov
and
bound
push
push
mov
pop
movsl
adc
stos
mov
das
fidivs
adc
pop
call
pop
out
jae
mov
cmp
or
movsl
or
jle
or
fldl
mov
pop
cs
pop
imul
pop
iret
leave
sbb
add
ljmp
outsb
das
repz
imul
xchg
sbb
ja
pop
int
or
in
ficoms
stc
and
or
xorl
mov
pop
mov
mov
fldt
add
push
repnz
jne
adc
into
mov
shll
pop
loop
xchg
adcb
pop
call
test
inc
cmp
sbb
and
sti
ja
in
loope
int3
inc
inc
sbb
mov
rol
icebp
imul
mov
pop
daa
into
hlt
xchg
addr16
xor
fcmovbe
in
lcall
fnsave
xchg
fcompl
out
xchg
mov
push
adc
cld
inc
xorb
pop
stc
pop
jne
xlat
jae
adc
xchg
mov
out
lods
sar
xor
xor
and
jl
pop
jae
in
seta
jmp
pop
das
pop
pop
sub
push
scas
repz
cltd
pop
out
shr
imul
nop
psrlw
fdivrl
adc
into
cltd
lods
loopne
and
cmpsb
and
mov
enter
cmp
stos
ficompl
imull
xchg
ret
int
fsubs
mulb
loope
cmp
popa
xchg
jmp
sbbl
gs
inc
lcall
cwtl
mov
stos
fdivl
out
jnp
pushf
jle
int3
mov
mov
mov
inc
cmp
repz
leave
push
mov
cmp
out
push
pop
push
lahf
adc
pop
xchg
jp
fs
push
xchg
repnz
cmc
push
mov
in
jnp
das
jp
lds
mov
sub
xchg
lds
xor
shl
roll
push
mov
bound
cmp
enter
sahf
jnp
ficomps
inc
fdivl
mov
arpl
into
incb
sbb
or
cmp
cli
fwait
hlt
mov
fstps
fsubrs
xchg
ret
or
mov
addr16
lcall
fsubrl
mov
add
dec
repz
lret
dec
pop
fsubl
lahf
add
jp
aas
fidivs
jp
movsl
mov
imul
pushf
jns
stos
mov
pop
mov
leave
cmp
aaa
ror
adc
xchg
push
xor
shll
pop
ds
mov
sbb
and
int
push
rcrb
inc
fs
cld
cmpsl
lock
gs
mov
jl
cli
add
popl
gs
andl
cmc
and
cmpsl
cmp
push
pushf
add
pusha
lret
je
test
inc
iret
add
dec
dec
jbe
in
xchg
mov
adc
cmp
dec
inc
pop
jl
out
xor
pop
xchg
xor
jp
call
mov
push
lods
test
cli
test
sbb
insb
dec
cmpsb
and
pop
mov
shrb
xor
imulb
jmp
int
arpl
inc
test
push
out
lahf
fwait
jl
mov
ret
or
dec
cs
mov
xlat
lcall
shlb
jecxz
rorl
fstp
sub
push
sbb
repnz
insb
inc
in
or
sbb
lahf
pop
in
add
cmc
lcall
fmuls
xchg
mov
shlb
repnz
test
sti
fcmove
push
fcomi
mov
arpl
lock
mov
jge
mov
sub
insl
lcall
pop
xor
mov
sbb
sub
jns
test
aad
sbb
jns
xchg
dec
sar
mov
xchg
xor
sbb
cltd
test
sub
sub
enter
cld
aas
dec
dec
mov
push
add
or
loop
es
repnz
sbb
adc
fmull
imul
dec
minps
sarl
les
xchg
scas
rcr
jmp
les
outsl
scas
jg
adc
in
cmpsb
loop
enter
xchg
fisubrl
mov
adc
mov
mov
inc
inc
in
inc
in
inc
or
lret
lret
lea
or
cmp
or
hlt
aam
es
daa
cltd
mov
inc
jp
and
jb
mov
cmp
stc
mov
pop
insl
stos
jl
pusha
leave
out
xor
add
jbe
clc
sub
push
dec
test
inc
xlat
out
push
and
sub
mov
pusha
and
cmp
cmp
sahf
mov
fisttpl
sub
jne
xor
das
inc
repnz
enter
push
idivb
mov
fcmovnbe
jae
lcall
negb
lods
dec
stos
push
loop
mov
popf
pop
xchg
xor
clc
xchg
mov
inc
or
sub
jge
mov
xchg
in
ret
lock
aad
pop
aad
pop
pop
rclb
lds
or
dec
sub
cmp
push
sahf
add
mov
test
adcl
sti
inc
in
lock
xchg
ja
xlat
in
aam
gs
and
aad
in
imul
inc
add
lock
sub
repnz
pushf
aad
call
pop
and
enter
jne
mov
lret
mov
xorl
xchg
cmpsb
push
aaa
ljmp
les
push
iret
loope
lods
iret
inc
lea
pop
mov
stos
movsb
stc
aaa
js
fwait
inc
sbb
mov
inc
jb
in
dec
sub
mov
in
vsqrtpd
pop
cld
sub
mov
mov
inc
jne
jbe
mov
cld
xchg
ss
and
lods
in
pop
push
iret
push
inc
outsl
xchg
clc
or
cmp
shll
stos
nop
jne
shll
rcrl
out
test
pop
inc
xor
or
push
jmp
jns
ljmp
push
xor
out
scas
fcoml
xchg
push
mov
mov
int3
cmp
arpl
out
sahf
cltd
inc
sub
mov
mov
mov
push
dec
movsb
andl
out
lea
pop
jo,pt
popa
mov
add
fcompl
or
inc
in
icebp
rdmsr
aad
mov
lcall
lds
mov
in
mov
xor
mov
lcall
dec
shll
insb
mov
mov
and
mov
push
jb
inc
in
gs
ficomps
imul
nop
stos
imul
stos
push
fstps
loop
cmp
loop
fldl
sbb
ljmp
shl
in
in
xor
mov
lcall
sbb
int3
mov
inc
roll
jmp
inc
in
popa
lea
mov
jmp
push
mov
notl
pop
cmc
push
loope
adc
sarb
movsb
xchg
das
mov
and
pop
mov
insl
xchg
loop
and
js
xor
xchg
gs
mov
add
jae
pop
push
gs
into
jl
cli
mov
ljmp
fwait
rol
sbb
std
pop
and
xor
es
addr16
pop
movsl
mov
mov
fs
inc
in
idiv
aad
cmp
pop
scas
test
subb
add
and
loopne
out
push
mov
icebp
mov
dec
fimull
push
mov
xchg
loope
xchg
mov
push
push
data16
int
lock
mov
dec
xlat
sbb
xor
or
dec
adc
shrl
xor
fldenv
scas
lock
mov
mov
pop
cli
cltd
ret
xchg
adc
sbb
std
in
testl
mov
mov
xchg
xchg
ss
scas
inc
js
mov
into
pop
xchg
xor
push
int3
dec
sub
dec
xor
addr16
mov
cs
sbb
in
popa
in
cltd
int3
mul
cmpsl
mov
dec
xchg
mov
fstps
je
jge
cmp
mov
shrl
jbe
pop
sbb
mov
mov
inc
aas
inc
pop
jl
mov
sub
inc
aam
out
mov
adc
test
lret
cwtl
or
sahf
stos
adc
inc
push
cmpsl
add
daa
ret
loope
roll
mov
ret
xchg
out
pusha
cmp
inc
fisttps
cs
xor
dec
ja
es
mov
cltd
outsl
dec
and
mov
jmp
std
or
mov
mov
or
mov
loop
xchg
and
push
mov
scas
sarb
fsts
ret
data16
adc
ss
jecxz
ret
dec
sbb
cwtl
iret
mov
mov
jb
dec
divb
aaa
lcall
test
sahf
dec
mov
shll
out
xor
nop
mov
pop
jp
mov
cmp
inc
lds
push
cmp
jns
push
push
push
jecxz
sub
jns
rol
push
loopne
and
outsl
push
push
mov
pop
mov
pop
cmp
ds
popa
test
fsts
or
movsb
out
mov
out
data16
mov
cmpsb
repnz
lret
push
testb
das
mov
sub
out
incl
cwtl
xchg
fisttpl
lds
ljmp
mov
aaa
test
xchg
ss
lods
mov
bound
mov
sbbb
ja
mov
mov
or
test
imul
aad
push
push
add
scas
jmp
jns
aad
sbb
mov
sbb
mov
cwtl
xchg
lock
push
sbb
call
aam
mov
and
insl
das
mov
cmp
daa
and
or
fisttps
out
push
arpl
orb
inc
sahf
hlt
cmp
test
push
in
xchg
pop
mov
ljmp
pop
adc
fwait
enter
dec
popa
iret
insb
lahf
sti
push
addb
or
andl
jb
jle
xchg
xchg
jg
subl
push
into
sbb
loope
jge
add
mov
ja
xchg
push
jle
adc
mov
jg
lcall
aam
inc
pop
mov
add
stc
or
and
jne
cmp
mov
cmpsb
mov
pop
cli
sub
xor
sub
insl
aam
cmp
gs
aaa
adc
push
inc
repnz
fdivl
imul
inc
gs
push
add
fyl2x
stc
ret
jg
jl
pop
les
ret
push
add
fdivl
scas
daa
xor
int3
pushf
mov
pop
fdiv
pop
jl
jae
pop
push
imul
fwait
xor
decb
mov
mov
arpl
stos
addr16
mov
inc
pop
imul
pop
call
push
pop
ficomps
xchg
mov
sub
sbb
loopne
pop
mov
xor
ret
push
fwait
sbb
xchg
fistpll
shll
nop
push
push
adc
xor
adc
mov
mov
cmp
cltd
xchg
inc
and
jns
sbb
fdivrp
pushf
dec
arpl
or
jmp
fdivs
mov
sbb
int3
mov
pusha
inc
fmuls
sbb
pop
mov
push
repz
in
dec
popf
push
push
inc
into
xor
leave
fsubrs
xchg
push
inc
mov
dec
xor
stos
mov
sub
fnstcw
imul
add
hlt
icebp
insb
inc
mov
xchg
lea
sahf
sarl
push
pop
adc
sub
gs
push
mov
cmp
std
add
mov
data16
jne
imul
negb
push
cli
add
in
xchg
frstpm(287
xchg
fsubrp
sub
dec
mov
pushf
leave
scas
aaa
xor
and
push
xchg
ret
stc
cmc
xor
pop
push
adc
adc
adc
adc
push
in
mov
out
cld
sbb
icebp
mov
jp
pusha
imul
or
rcrl
sti
xor
fxch
ja
xor
adc
ja
lods
repnz
jg
in
pop
mov
xchg
pushf
fs
jae
roll
in
cli
lahf
pop
sub
cmp
dec
leave
xchg
leave
fwait
cmp
mov
jp
sbb
sti
adcb
jg
jp
loopne
jle
add
jl
inc
aad
ficompl
sub
sbbl
int
aam
in
bound
xchg
es
xchg
or
shr
xlat
pop
outsl
je
and
sti
ss
sbb
cs
dec
lret
out
add
sbb
and
push
icebp
pop
lcall
mov
or
cld
jl
push
jae
inc
xchg
sbb
jge
frstor
insb
mov
and
inc
loop
sub
add
cmpsl
scas
cmp
dec
loop
movsb
mov
int3
mov
test
movl
call
mov
in
mov
mov
lds
idiv
sahf
pop
cmpsl
pop
add
push
test
xchg
xor
inc
xor
cs
insb
les
arpl
icebp
inc
push
pop
call
cld
stc
xor
and
xchg
fcmovu
faddp
pop
mov
stc
inc
dec
add
mov
outsb
or
mov
dec
clc
xchg
cmp
or
pop
fdivrs
mov
fdivl
xchg
cmp
cmp
jmp
std
cli
test
cmc
sub
dec
xor
and
lock
sbb
xlat
mov
cltd
cmp
clc
cmp
into
mov
repnz
lret
dec
mov
mov
lods
adcb
xchg
cs
subl
loop
movsb
cmp
jae
adc
addr16
and
xchg
das
push
fsubs
pop
sbb
jno
sub
stc
fisubrs
call
push
jb
and
xchg
mov
cs
xlat
adc
mov
mov
xor
dec
pop
cld
dec
and
sahf
pusha
repnz
test
jp
repz
enter
daa
cld
je
test
push
imul
cmp
adc
xchg
sub
jmp
cmp
cmp
cwtl
add
sbb
sbb
arpl
adc
xchg
sub
or
fmuls
in
mov
dec
sub
add
cmp
cmp
loop
xor
aaa
ficoms
sti
mov
or
fcmovb
lret
mov
loop
lcall
arpl
inc
cwtl
mov
mov
hlt
jnp
cli
xchg
push
jns
loop
loope
repnz
and
movsb
out
es
mov
dec
mov
xor
xorl
and
pop
ret
inc
arpl
xchg
insl
ret
sub
enter
nop
push
jb
jb
rol
lods
stos
shlb
cli
cmp
cmc
mov
cmpsb
pop
cmp
pop
cmc
sub
jb
mov
sbb
and
sbb
subb
lods
pop
jbe
mov
mov
jnp
enter
lds
jmp
pusha
push
lea
adc
aam
dec
cmp
xor
cltd
push
jbe
aam
add
xor
test
adc
mov
jl
and
jmp
push
les
int3
int3
add
les
pop
stc
aad
out
xor
push
dec
jmp
std
nop
mov
js
mov
mov
test
mov
es
mov
lods
je
add
fimull
fdivr
xor
in
lds
push
dec
in
cmpsl
fildll
mov
cmp
and
gs
or
cwtl
mov
ret
mov
daa
out
loopne
xacquire
mov
iret
lds
xchg
in
fs
in
test
add
jo
dec
mov
call
cmp
insb
or
and
leave
xor
test
lret
cld
mov
xchg
aad
dec
or
cmpl
sbb
js
add
loope
lods
inc
outsl
mov
ficomps
clc
push
cmc
sub
decl
andl
pop
cld
pop
mov
xchg
adc
mov
sti
sub
mov
or
push
fnsave
adc
out
or
int3
and
pop
icebp
cmp
addr16
iret
pop
shl
cs
leave
inc
fildll
sbb
ds
cmp
mov
sbb
pop
lea
or
nop
movsb
jnp
gs
adc
sbb
loopne
sbb
shlb
adc
in
dec
push
mov
in
jnp
jmp
push
std
loope
shrl
push
filds
in
cmp
es
cmp
dec
ds
stos
lds
pop
xor
call
mov
imul
arpl
movsb
dec
and
jl
icebp
repz
popa
push
repz
push
mov
mov
in
push
fildl
sbb
mov
jg
stc
xchg
xchg
faddl
dec
or
leave
setae
or
cmp
mov
or
sbb
nop
mov
addr16
test
addl
push
ja
mov
xor
sub
dec
pop
icebp
rcl
sub
call
rclb
std
sbb
push
es
push
push
dec
lahf
out
xchg
mov
iret
jb
pop
add
ljmp
mov
sbb
cld
dec
jle
in
mov
shlb
or
push
ficompl
pusha
cld
adc
jno
jae
cmp
pop
sub
in
adc
arpl
cmp
andb
sbb
fiadds
jmp
and
js
int3
xchg
lcall
adc
sbb
xor
xor
cmp
insl
popa
xorl
inc
lea
xor
mov
shlb
sub
shll
into
xor
arpl
cmp
leave
iret
in
sub
mov
push
loopne
sub
std
push
test
sbb
push
lret
mov
mov
fcomps
dec
out
mov
dec
fsin
int
mov
ret
sbb
or
shrb
test
cmp
shr
jno
ja
xchg
adc
daa
cmp
fmul
out
pop
xlat
push
sub
jmp
xor
adc
fidivrs
nop
jns
int
shrl
std
pop
test
testb
mov
mov
insl
sbb
xchg
mov
jmp
xchg
and
in
jns
ljmp
cmp
loopne
sbb
pop
jg
test
xchg
add
les
push
xor
sub
out
jae
cmp
lahf
inc
dec
dec
push
cwtl
addb
dec
aam
outsl
mov
dec
cwtl
aas
xchg
sti
xchg
cmp
pop
mov
fs
test
mov
scas
test
xor
add
or
adc
shlb
push
imul
and
ret
sarl
imul
mov
mov
leave
dec
in
fistpl
fstl
push
ss
lock
mov
mov
outsb
xlat
inc
cli
lods
je
sbb
jbe
fstl
lods
inc
jb
cs
push
inc
addr16
mov
jno
pop
cmp
stos
mov
pushf
jo
neg
sub
movsb
lds
or
cwtl
test
out
repnz
test
pop
and
movsl
dec
and
int
pop
mov
push
movsb
xchg
pop
loope
add
and
dec
lahf
test
inc
pop
push
mov
mov
pop
js
inc
pop
dec
stos
outsb
jbe
jne
mov
sbb
jl
pop
jnp
lock
cwtl
rcrl
mov
add
daa
movsl
in
cli
movups
movsl
pop
sahf
push
and
push
sbb
ja
rcl
fmull
push
movsl
lret
and
iret
fiaddl
out
adc
mov
mov
dec
ljmp
and
mov
inc
inc
lds
or
pop
sub
dec
xchg
xor
movsb
mov
loope
fisubl
rorb
jle
aam
xchg
mov
test
stos
inc
push
mov
popa
cmpsl
pop
ljmp
movswl
pusha
jae
iret
xlat
lahf
subb
lret
mov
dec
rcrb
mov
mov
sbb
punpckhwd
jnp
ss
jnp
in
jmp
mov
rorl
cmpsl
mov
xor
push
lcall
sbb
xor
sbb
enter
rcll
int
or
test
sub
jno
inc
pop
jno
clc
mov
inc
add
push
xchg
mov
mov
pop
loope
clc
inc
mov
or
sbb
xchg
xor
push
js
mov
xchg
mov
cli
int
jne
adc
mov
adc
xor
in
out
mov
inc
scas
inc
iret
mov
xchg
dec
int
roll
inc
aam
adc
push
dec
fstp
push
stos
int
mov
stos
xor
xchg
xor
sbb
lods
in
into
loopne
mov
enter
aad
into
xchg
jmp
and
dec
mov
mov
sahf
fdivs
xor
mov
push
iret
cmp
adc
mov
in
add
stos
in
stos
fisubrs
mov
jae
lcall
sbb
dec
int
cmp
xchg
jle
mov
nop
pop
dec
std
lock
scas
sar
or
pop
mov
pushf
mov
add
dec
or
mov
mov
jae
leave
loopne
fisubrs
cs
cs
dec
cmp
add
mov
lea
mov
dec
arpl
xchg
sub
add
in
inc
lret
push
inc
xchg
dec
loopne
stc
mov
dec
inc
xor
sub
movsb
cli
scas
mov
jp
fsubl
xor
test
int3
add
scas
pop
add
mov
push
aas
fnstsw
cltd
push
jecxz
sub
xor
xor
adc
xchg
adc
repnz
pop
mov
lret
rclb
inc
dec
stc
dec
insb
stos
inc
hlt
les
jp
fbstp
out
pop
imul
popf
or
int
fcompl
stos
enter
jo
int3
je
push
dec
lds
into
fldt
cmp
mov
sub
test
movsb
sub
xor
call
cmp
rcrl
test
adc
xchg
fucomi
cld
jbe
rorb
cmpsb
xchg
adc
jmp
mov
out
mov
insb
push
dec
cmp
push
enter
loopne
push
mov
stos
dec
or
and
arpl
mov
insb
rorl
cmp
test
cmp
cmpsl
add
ds
cmp
scas
mov
xor
sbb
cmp
aad
jne
sub
sti
int
mov
push
xchg
ljmp
xchg
mov
dec
mov
scas
hlt
rcrl
imul
movsb
je
leave
fnsave
jb
jecxz
je
cmp
outsl
pop
mov
movsl
mov
xor
cmp
test
sub
and
adc
and
mov
dec
adc
cmp
and
rcrl
pop
mul
fcoml
mov
cmp
xchg
jg
inc
mov
sub
neg
inc
clc
dec
dec
adc
sysenter
daa
pushf
push
mov
add
mov
xchg
dec
or
ja
jb
pop
and
movb
sub
out
push
aam
imul
cmc
and
popf
cmpsl
repz
add
les
adc
lods
mov
add
sub
cld
dec
leave
jns
ja
mov
adc
pop
std
jle
cmc
rclb
sub
sub
jae
jb
mov
cld
je
mov
shrb
loope
js
mov
jno
add
push
sahf
sbb
cmp
pop
in
fimuls
outsl
dec
lahf
ret
rorb
ror
xchg
sti
sbb
mov
pusha
aam
je
fbstp
cmc
popf
xor
cmpl
pop
jb
inc
rclb
xor
and
xchg
fisubrs
insl
sbb
mov
mov
js
pop
call
std
mov
xchg
test
push
xchg
outsb
jns
add
cmpb
mov
lea
out
or
mov
pop
into
pop
fdivrl
pop
cmpsl
sub
iret
mov
push
inc
pop
dec
out
mov
cli
add
push
adc
jge
xor
jb
push
jge
scas
dec
iret
or
inc
cmp
push
add
or
xchg
pop
addr16
or
xor
repnz
lods
xchg
xchg
mov
icebp
mov
inc
gs
std
sbb
pop
sbb
mov
jl
rcll
jl
dec
and
xchg
imul
sub
mov
add
int3
cltd
out
test
insl
sarb
sbb
mov
stos
mov
shl
data16
cmp
cmp
pop
mov
lcall
lahf
cwtl
cli
sti
cmp
mov
inc
push
push
mov
push
adc
push
lahf
int3
aam
mov
lock
inc
loope
cli
call
push
pop
cli
shl
jb
movsl
mov
dec
mov
rcrb
sub
jge
pop
aaa
sbb
shl
lret
cmp
pop
push
sub
push
fidivrs
cmp
sub
aad
lds
fstl
leave
in
add
mov
or
cmpsb
pop
sahf
int3
sub
sub
sub
push
jmp
dec
insb
fiadds
adc
jnp
std
lods
iret
or
pop
mov
lcall
or
clc
push
sub
or
nop
add
in
test
mov
arpl
add
lods
pop
int
pop
sub
pop
mov
push
pop
repz
jle
rol
hlt
xchg
dec
mov
pop
adc
pop
push
lret
adc
push
cmpl
and
jmp
inc
jp
shrb
jns
test
outsb
ds
insb
pop
imul
push
dec
into
imul
in
sbb
aas
inc
loope
addb
lods
jnp
sub
fsubrl
push
mov
push
cs
sbb
jnp
shl
add
push
xchg
jl
push
ficoml
and
addl
xchg
icebp
leave
dec
sbb
ret
pushf
xlat
xor
out
cmp
jecxz
inc
cli
xor
movsb
add
mov
cmp
cmp
jle
jg
adc
mov
dec
out
jp
adc
xchg
or
popf
xchg
mov
push
stos
dec
mov
loopne
lods
les
rcrl
sub
xchg
jg
movsb
andb
mov
mov
lcall
mov
fiaddl
loope
in
divl
pushf
dec
lock
test
push
pop
lds
jecxz
push
jno
jle
or
leave
out
int
inc
mov
mov
loopne
rcrb
add
mov
sbb
mov
mov
loopne
push
jne
mov
pop
or
and
adc
mov
rcl
add
mov
mov
jae
dec
add
les
faddl
jo
je
call
jge
lods
jnp
xor
cmp
add
bound
popl
push
inc
pop
xchg
xchg
lods
fstpt
jp
adc
push
push
or
or
std
xchg
sub
popa
roll
test
sub
fwait
sub
push
cmp
cwtl
fnstsw
adc
test
int3
daa
add
mov
mov
sub
add
push
adc
pop
add
fadds
adc
adc
es
add
xor
push
cmp
in
div
mov
pop
gs
jne
mov
hlt
sub
mov
mul
push
test
xchg
lock
test
lahf
cltd
xor
std
nop
shlb
ret
cmpsl
and
andl
pop
gs
push
xchg
fmul
es
xor
xchg
mov
fistpl
jns
adc
sbb
incl
or
popf
push
sbb
iret
dec
sub
or
mov
fdivs
jae
adc
fisubl
cmp
add
mov
cmp
xor
jge
jmp
mov
lods
loopne
sub
xchg
inc
xchg
jg
jge
push
hlt
pop
pop
or
js
pop
xchg
mov
icebp
fwait
enter
mov
inc
fnsave
dec
and
cmp
mov
lret
lock
and
dec
xchg
sbb
dec
sahf
jae
inc
loope
inc
mov
lods
mov
mov
lret
or
push
pop
or
pop
cmp
add
cmpsl
cltd
loopne
xor
sbb
jecxz
mov
fsubl
or
pop
and
push
sti
jae
cmp
cmp
push
out
cs
aad
lods
mov
dec
inc
xchg
add
pushf
jmp
arpl
pop
sbb
mov
stc
lods
push
push
cmp
push
call
dec
push
lea
cltd
sbb
mov
pop
jl
mov
mulb
lea
xor
mov
xor
prefetchw
push
nop
mov
addr16
mov
xor
pop
dec
sub
mov
orl
sbb
das
notb
dec
popf
xor
jbe
lds
inc
dec
add
rcll
jae
jg
xchg
fisttpl
pop
fbstp
cwtl
test
lea
cmpsb
fcmovbe
lahf
and
push
add
movsb
fidivrs
addb
adcl
sahf
cmp
repnz
add
sub
popa
fsubrp
shrl
movsl
addb
inc
mov
mov
pop
test
lret
insl
jmp
aas
repz
mov
stos
filds
push
aaa
and
fisubrs
stos
pop
pop
inc
and
in
sbb
cmpsb
stc
pusha
cltd
sarl
adc
les
sbb
orb
je
in
dec
int
adc
out
pop
arpl
lret
jge
ficoms
arpl
loop
sub
shll
out
pop
outsl
movsb
pop
sbb
cmp
jmp
inc
sub
hlt
jne
rolb
inc
adcl
test
icebp
movb
test
lret
minps
aad
dec
cli
push
mov
or
testl
or
fidivl
cmpsl
sub
sub
fistpll
dec
xor
stos
cmp
pop
into
pusha
push
add
dec
outsb
ss
pushf
stos
sahf
jo
jg
lahf
add
int
loope
xchg
filds
aad
add
icebp
rorb
cli
and
add
fstl
and
push
cmpsl
lcall
bound
mov
jmp
into
imul
lahf
jge
imul
pop
mov
fucom
pop
stc
inc
and
das
xor
adc
push
icebp
sbb
add
fsubl
mov
fbstp
jo
inc
sub
mov
add
adc
pop
sub
mov
popa
mov
xchg
cmp
sub
sahf
out
gs
jne
or
cmpsl
or
dec
and
push
pop
mov
mov
aaa
dec
add
cmpl
mov
fmuls
call
int3
jecxz
or
leave
outsb
inc
or
imul
test
push
fcmovbe
and
add
cwtl
cmp
mov
out
negl
mov
outsb
in
bound
or
aaa
adc
movsl
insl
mov
inc
inc
mov
push
dec
jo
add
shl
orl
imul
test
jno
pushf
xor
and
adc
fmulp
sti
xor
sbb
es
test
mov
roll
and
out
je
xor
jae
sbb
fprem1
cmp
dec
push
gs
aaa
adc
jg
call
scas
push
lret
mov
dec
cmp
sub
adc
mov
push
xor
mov
insb
das
lods
hlt
xlat
mov
sbb
push
leave
push
stos
cld
lahf
and
js
jne
daa
loop
inc
cmp
mov
clc
adc
scas
inc
pushf
adc
jns
mov
cmp
pop
mov
popa
int
fwait
and
lods
or
cltd
outsl
movsl
xchg
jo
cmp
xchg
sbb
or
xchg
xor
shll
adc
outsb
cli
push
int
rclb
dec
and
or
movsb
out
xchg
bound
push
leave
pop
lcall
iretw
mov
mov
loopne
adc
inc
fwait
and
sbb
mov
jecxz
or
or
popf
mov
xor
int3
sbb
addr16
mov
push
and
aas
mov
xchg
dec
or
out
mov
lahf
cmp
add
jae
or
pop
mov
clc
mov
push
cmpsl
outsl
xor
push
mov
dec
sub
mov
xor
inc
adc
ret
int3
stos
xchg
loop
adc
int3
dec
gs
or
or
ss
mov
mov
dec
mov
jns
imul
sbb
ret
dec
add
fs
nop
jmp
lods
mov
pop
mov
popa
mov
mov
mov
das
ljmp
xlat
sbb
cli
and
pop
mov
jo
ds
adc
shlb
sbb
imul
fidivs
or
hlt
mov
sbbl
out
cwtl
jecxz
xchg
jg
pop
clc
popf
dec
push
cmpsb
addr16
das
addr16
imulb
pop
scas
mov
push
mov
daa
xchg
in
xchg
ficompl
scas
cmp
sub
jae
sub
jae
sub
jmp
enter
loope
pop
pusha
xor
cs
adc
movsl
sbb
or
inc
dec
into
ret
gs
adc
aaa
dec
mov
lcall
lods
push
pop
fdivp
push
cmpb
iret
incb
cmc
jo
fbstp
fwait
iret
mov
bound
cmp
cld
je
sub
sahf
mov
cmpsb
mov
in
or
mov
inc
inc
sub
adc
xchg
push
lds
fucomi
into
jae
xlat
jne
sbb
cmpsl
cmpsl
sub
push
test
daa
mov
repz
int
dec
push
xor
dec
out
in
mov
add
push
adc
mov
jp
popa
test
fimuls
dec
cmp
jmp
or
movsl
outsl
xlat
lcall
data16
lcall
imul
jmp
scas
les
stos
insb
cmp
test
inc
loop
dec
mov
int
fs
lea
call
js
sbb
icebp
call
fisubs
add
lret
mov
pop
jmp
imul
mov
and
nop
add
xchg
and
inc
add
scas
fcoml
and
insb
in
lret
push
push
xor
mov
repnz
xor
call
cs
outsl
mov
sbb
pusha
pusha
sbb
add
std
push
mov
and
mov
aas
lahf
pushf
lahf
adc
imul
mov
mov
es
daa
bound
test
dec
lret
insb
add
loopne
adc
push
or
mov
xchg
pop
addl
insb
sub
test
movsb
lahf
incb
pop
jnp
pop
lock
ret
sub
icebp
push
test
sbb
mov
jmp
stos
mov
fildl
sti
ja
mov
sbb
xor
shlb
cld
push
pop
lea
int
dec
push
test
xchg
inc
pop
jnp
jmp
jecxz
jge
add
lcall
shll
cs
mov
and
fcoms
sti
je
mov
inc
movsl
dec
mov
mov
imul
inc
jb
lahf
jbe
sbb
and
dec
test
stos
and
pop
cmp
stc
inc
dec
cmpb
xchg
daa
lock
xchg
push
cltd
cli
sub
cmp
sahf
sbb
adc
inc
mov
pusha
push
fdivl
inc
or
xlat
sarb
and
scas
jbe
or
inc
adc
cmp
lods
pop
push
popa
cmp
push
adc
cmp
fsubrs
or
iret
mov
in
and
das
mov
push
rol
jb
dec
cwtl
push
in
sti
xor
or
shl
in
sahf
add
out
push
dec
xor
dec
sub
and
cld
or
lock
std
sbb
js
fwait
iret
std
adc
call
mov
mov
das
adc
mov
push
dec
test
xor
or
rcrl
dec
out
mov
insb
fst
push
decl
orb
mov
int
out
xchg
xor
cltd
jne
adc
jp
mov
out
movsl
xor
cmc
adc
repnz
nop
pop
dec
xchg
pop
push
cltd
xchg
fisttpll
ret
xchg
inc
scas
xchg
mov
adc
push
test
mov
fsts
repz
nop
and
fimull
mov
lods
outsb
adc
cli
mov
xchg
lods
push
pop
dec
out
jmp
clc
inc
test
pop
and
ret
mov
mov
into
cltd
enter
dec
mov
sub
xchg
shl
jns
push
sub
mov
mov
push
mov
pop
and
fisttpll
outsl
mull
xor
xchg
adc
es
push
testb
jmp
clc
jle
lods
xchg
dec
cmp
cmp
ja
xchg
mov
rol
test
rorb
lret
insl
imul
shll
cmp
lods
adc
in
or
in
cmc
adc
push
dec
xor
nop
pop
lea
fmulp
mov
into
pop
std
loopne
ret
mov
cltd
imul
mov
pop
aas
popa
lock
aaa
arpl
xor
push
jl
mov
push
dec
shll
mov
in
pop
push
out
or
in
pop
jp
int3
sti
stos
sub
cs
cmpsl
negb
dec
xor
cmpsl
adc
repz
sbb
jg
jg
push
test
sbb
stc
adc
imul
pop
sbb
int3
outsb
sub
inc
jno
cmpsl
enter
ret
add
outsl
cmp
and
sti
add
dec
jns
sbb
aam
ficomps
out
xorl
incl
imul
xlat
and
pop
jbe
sarl
das
xchg
jae
out
jb
cld
xchg
pop
ja
dec
aam
mov
add
cmp
or
and
in
and
mov
pop
sbb
mov
adc
dec
inc
jo
cli
mov
sarb
xor
or
dec
cmp
push
sub
mov
daa
addr16
xor
cmpsl
pop
xchg
hlt
hlt
dec
mov
and
ljmp
add
ljmp
xchg
lret
mov
daa
sub
stc
test
mov
add
mov
pop
xor
push
jg
mov
pop
jecxz
cmp
dec
add
xchg
sub
leave
mov
cs
gs
insl
imul
mov
add
imul
lcall
xchg
dec
sub
icebp
loope
pop
mov
decl
das
mov
lcall
dec
pop
popa
adc
pop
aaa
pop
sbb
dec
dec
jecxz
inc
call
sub
mov
or
mov
xor
push
dec
call
lret
mov
popa
cld
insl
sarb
stc
jmp
loope
enter
inc
shl
cmp
adc
push
dec
sub
in
mov
sarl
xlat
jb
call
mov
movsl
dec
add
dec
mov
adcb
push
subl
push
push
pusha
ljmp
ds
sbb
jno
inc
sub
stc
jb
push
sub
lret
push
adc
lahf
cmp
and
inc
lcall
das
cmp
rcll
dec
test
gs
ja
cmp
pop
addr16
mov
test
js
mov
mov
andl
mov
dec
jg
aaa
int3
sub
xor
aad
rep
adc
stos
hlt
dec
fwait
cmp
movsl
test
and
ds
mov
push
mov
xor
mov
into
sbb
mov
jg
loope
adc
mov
js
repz
push
imul
push
sub
jg
leave
add
or
call
enter
hlt
cmp
fwait
into
mov
fimuls
xchg
testb
push
bound
test
es
or
add
xor
lods
mov
pop
loop
or
mov
sbb
sbb
nop
popa
mov
xchg
arpl
jae
sbb
cmp
incl
incb
xchg
jae
insl
out
jecxz
lock
sub
scas
mov
dec
mov
dec
add
into
outsb
adc
push
xchg
jae
adc
mov
or
pusha
mov
inc
jno
add
push
cld
sbb
out
inc
arpl
and
mov
sbb
and
punpckhbw
js
pop
pop
jmp
pop
push
out
test
and
sub
outsb
mov
das
sub
cmp
imull
sub
shlb
and
stos
xchg
mov
sub
push
std
inc
movsb
nop
xchg
ss
sbb
leave
lcall
sarb
jae
sarl
in
add
gs
ljmp
lods
xchg
xchg
int
cmc
ljmp
imul
add
aaa
cmp
and
pop
sub
jmp
lds
mov
jo
ss
pop
sarb
or
fcmovnbe
jo
nop
xor
js
inc
pop
inc
sbb
push
jno
popf
mov
in
push
xchg
mov
push
stos
push
inc
jmp
cs
mov
adc
xchg
shll
out
idivl
aad
xchg
addr16
andl
loopne
xchg
int
jp
mov
in
loopne
xchg
jno
dec
pop
mov
popa
in
mov
jnp
sub
outsb
cmpsl
les
cmp
fs
mov
leave
mov
test
repnz
ss
test
pushf
shlb
mov
icebp
icebp
mov
loopne
cld
mov
ljmp
cmc
adc
mov
sbb
fs
add
push
lock
js
push
add
lods
jnp
stc
and
js
movsl
xorl
mov
rorl
or
inc
and
sub
es
into
je
into
loope
mov
sub
xchg
scas
test
out
and
dec
pop
mov
sahf
adc
outsl
in
xchg
push
jp
jb
out
in
popf
ljmp
mov
lcall
xlat
or
push
pop
icebp
test
insb
mov
test
mov
xor
enter
out
adc
sub
sbb
sub
push
sub
mov
in
fwait
xor
and
imull
data16
int3
jbe
and
pop
sbb
or
push
pusha
xor
rcrb
mov
sbbl
cmp
fiadds
stos
xlat
mov
in
pop
and
test
shl
push
adc
add
sbb
sbb
aam
ret
pop
lea
cmpsl
int
sbb
imul
dec
xchg
rcrl
cmp
sbb
dec
jne
int
xchg
rcr
fstpt
add
add
cwtl
pop
daa
mov
test
clc
mov
fdivs
adc
xor
stos
popf
pop
and
push
dec
xchg
inc
inc
and
cld
sub
roll
dec
xchg
bound
cmpl
mov
inc
adc
cli
aad
jbe
push
and
cmp
xor
xchg
xchg
push
sbb
jae
pop
das
sub
lret
xchg
popf
ret
and
test
fildl
add
sbbl
ja
ja
mov
cmp
jecxz
enter
popa
lods
mov
mov
aas
jl
mov
bnd
lds
and
jle
mov
adcl
sub
sbb
mov
pop
xlat
into
push
adc
inc
pop
arpl
adc
neg
inc
jae
mov
sub
xchg
movsl
dec
hlt
insl
dec
sahf
loop
xchg
test
adc
xchg
push
enter
fcompl
xchg
fiadds
xor
push
xor
add
test
xchg
clc
pop
jbe
in
call
int
mov
in
in
lcall
mov
mov
cmpsb
sub
lret
stc
xchg
adc
lods
cwtl
lods
stos
inc
ss
mov
lcall
sahf
and
jns
icebp
sub
mov
and
inc
mov
and
and
and
dec
push
stos
jmp
sbb
in
das
sbb
lret
std
mov
call
mov
cmpl
push
fdivs
das
inc
and
clc
cmp
call
cltd
out
jmp
in
jp
sub
jae,pn
sarl
pop
ss
lret
vprotq
and
jb
jns
mov
loopne
sub
into
add
lock
enter
sub
stos
push
sub
jg
pop
insl
js
nop
ljmp
push
jg
out
xor
push
std
push
sub
sbb
adc
push
inc
lods
imul
sub
and
ss
mov
mov
mov
addl
cmp
cmpsb
mov
jnp
pop
sub
stos
sbb
mov
mov
cmc
aad
iret
jle
dec
les
xor
or
jmp
or
sub
jecxz
adc
lock
hlt
and
mov
xchg
lds
popf
repnz
adc
je
stos
stos
imul
fnop
push
jo
outsb
inc
cwtl
cltd
pushf
cmc
cmpsl
cmp
and
test
pop
xchg
les
js
xor
inc
cld
addr16
lods
lods
push
mov
ret
pop
movsl
testl
pop
popf
cmpsb
lcall
ljmp
jl
imul
dec
dec
xor
mov
and
shr
es
into
or
popf
xor
data16
jmp
mov
inc
adc
or
in
and
jbe,pt
xorb
addl
dec
xchg
or
pop
push
xor
lods
shlb
push
adc
xchg
mov
pusha
stos
notl
out
or
lret
add
mov
cmp
fidivs
lock
xor
cs
hlt
lock
dec
fisubrl
mov
adc
iret
mov
pushf
mov
xor
xchg
fldcw
rorl
adc
out
add
mov
mov
pop
lods
or
testl
icebp
inc
mov
push
lret
in
cmpsl
testl
mov
out
inc
jg
call
xchg
jne
pop
dec
iret
loopne
add
in
xor
xor
jne
inc
adc
or
cmp
sti
mov
popf
es
les
mov
push
add
mov
xchg
test
jae
push
fcmovnu
lret
rcrl
xor
stos
jne
inc
int3
mov
push
xchg
fwait
ret
mov
xor
cmc
cmpsl
jnp
dec
cmp
sbb
es
jno
pop
mov
inc
xor
lods
imul
pusha
or
fsubrp
inc
idiv
jp
dec
xchg
cmc
ficompl
stos
sub
cld
cmp
xchg
dec
neg
lock
fs
add
dec
fdivrl
sbb
mov
sbb
xor
pop
sbb
pop
dec
mov
adc
push
psllq
enter
push
testb
inc
xchg
je
imul
loopne
into
repz
sbb
push
cmp
pop
int3
outsl
add
repnz
mov
or
push
mov
icebp
fcoms
lock
jp
sbb
adc
jge
into
add
testb
and
wrmsr
mov
cs
and
jle
insl
xor
pop
push
bound
xor
repz
inc
and
cmp
push
icebp
pop
gs
mov
add
fcmovnbe
and
movsb
fsts
pop
push
xchg
adc
sub
xchg
bound
nopl
jns
std
mov
adc
movsl
loopne,pt
nop
xchg
xchg
outsl
sar
scas
ja
cmpsl
adc
xchg
xor
mov
arpl
movsb
inc
into
sbb
mov
jns
or
push
jl
and
push
insb
inc
jp
xchg
xor
pop
sbb
and
lret
movsb
daa
inc
stos
loope
dec
jecxz
lahf
lea
and
or
mov
dec
out
pop
lret
es
inc
dec
jg
scas
pop
iret
sub
fwait
inc
add
sahf
jle
call
out
adc
push
pop
enter
add
imul
mov
sub
test
shrb
call
sbb
sub
lret
test
push
xchg
loope
stc
shll
cmp
rorb
and
ljmp
xor
cmp
sbb
or
test
inc
inc
sti
push
push
popf
fsubrs
push
xchg
mov
cmp
jecxz
test
pop
fistpll
or
pop
mov
dec
inc
int3
add
push
aad
xchg
test
test
xor
and
and
sbb
fdivr
test
cmp
outsl
dec
sub
jle
cmp
push
push
xor
mov
cmpsb
mov
pushf
jno
dec
aad
cltd
push
cs
incl
rcll
das
scas
ret
and
mov
mov
sbb
into
cmp
adc
add
fldl
testl
ret
push
pop
leave
shlb
jne,pt
jns
fs
out
lods
stc
mov
rcl
int3
adc
ss
xchg
add
push
dec
xchg
loop
xchg
inc
test
mov
arpl
arpl
ret
mulb
jno
cmpsb
xchg
push
repz
fimuls
jp
gs
and
add
mov
add
mov
sub
sub
sbb
xchg
jo
xchg
ror
cmp
lock
mull
jle
mov
xor
sahf
test
stos
rcrb
addl
pop
push
loop
scas
mov
push
adc
cmp
xchg
iret
mov
or
imul
pop
jmp
mov
cmpsl
js
or
fisubrl
dec
add
stc
xor
jne
sbb
lea
test
push
outsb
jecxz
cmp
add
xor
push
xchg
or
aas
mov
vpmadcsswd
arpl
mov
imul
imul
dec
mov
pop
fcomps
nop
movl
test
jecxz
ror
call
roll
pop
fldt
shlb
orb
mov
adc
pop
clc
push
sahf
fwait
outsb
inc
sub
add
push
shrl
fsts
daa
gs
pop
lods
mov
arpl
dec
inc
sub
lock
fstp
pusha
int3
mov
jecxz
ja
dec
cltd
push
cvttps2pi
push
fldl
and
aas
cmp
add
mov
xlat
push
mov
lock
jne
imul
sti
adc
cld
fsubl
dec
nop
xlat
mov
sub
inc
adc
cmp
cwtl
aad
flds
or
add
std
dec
fistpl
stos
inc
lods
lcall
mov
xor
jno
pop
insb
add
or
call
andl
fcomps
sub
add
and
lds
or
and
arpl
mov
lods
xchg
rcll
pop
and
test
push
mov
sub
outsl
dec
mov
xchg
imul
cmpsw
sub
fcmovbe
imul
pop
sbb
mov
mov
hlt
adc
add
pop
pop
gs
ret
into
xor
cwtl
mov
jle
add
bound
rcrl
xor
ljmp
es
mov
or
and
popf
or
push
pop
cld
and
inc
fistpll
incl
jb
shrb
aaa
cmpsl
push
insb
jecxz
int3
sbb
ret
xchg
adc
cmp
subl
bound
leave
jmp
std
shrl
int3
jp
or
call
mov
shrb
pop
cmc
add
adc
ljmp
push
xchg
fs
mov
cmc
mov
xchg
push
popa
inc
sub
and
enter
jge
pop
sbb
hlt
addr16
cmpsb
int3
jl
sbb
xchg
cs
jmp
and
enter
iret
jmp
fcom
movsb
aaa
pop
ds
mov
mov
sub
push
lret
xchg
jbe
dec
int
rcr
cmp
and
nop
sbbl
lods
push
mov
jb
js
pop
out
sub
push
ret
pop
pop
int
cmpsb
xor
rol
loop
addr16
sub
fdivrl
pop
dec
loope
scas
mov
mov
pop
nop
mov
das
mov
sub
sub
or
inc
push
lret
and
lock
adc
in
push
xchg
mov
loopne
sbb
es
cmpsl
inc
mov
add
pop
ror
dec
lods
js
enter
lcall
sahf
ljmp
push
pushf
and
adc
xchg
xor
inc
lods
sbb
xchg
jb
xchg
cmp
mov
xor
xchg
mov
jge
outsl
fldcw
clc
or
sub
insl
pushf
xchg
xchg
sarb
loope
cmp
jp
or
int3
push
mov
and
outsb
out
ds
push
xor
inc
mov
insl
pop
mov
xor
jg
push
pop
adc
push
sub
cmpsb
pusha
inc
je
push
fwait
lret
lcall
push
or
xor
adc
mov
sub
pop
popf
je
xor
inc
ja
inc
inc
xlat
mov
nop
and
push
lock
test
xchg
push
sub
xchg
fcoml
cmp
and
push
push
inc
mov
or
movsl
shlb
jae
into
xlat
mov
lret
cmp
mov
out
push
inc
les
jno
sbb
test
pop
xchg
jle
subl
cwtl
cmp
aas
mov
es
stos
aaa
xchg
push
les
lahf
sbb
ret
push
mov
mov
adc
push
adc
add
call
mov
enter
les
and
test
out
mov
mov
lret
ja
sub
adc
out
add
dec
shrb
pusha
sub
insl
cmpsl
or
fwait
les
fmuls
push
outsl
xor
repnz
loop
js
jmp
nop
xchg
jns
lahf
jno
mov
dec
jge
jmp
arpl
mov
cmp
mov
inc
stos
inc
dec
in
and
iret
dec
rcll
push
mov
xchg
lds
hlt
bound
imul
lahf
ja
fiaddl
and
call
xchg
lock
cmc
push
movsl
arpl
lods
imul
repnz
cmc
add
sbb
push
shl
ss
push
ss
cli
clc
cmpsl
xchg
or
rorl
sbb
inc
icebp
int3
dec
or
push
jno
sbb
dec
pop
jnp
insl
or
mov
or
fnstsw
out
push
fsts
mov
in
cmp
mov
aas
jge
add
mov
test
adc
out
loope
pushf
sub
loop
jo
sbb
pop
dec
pop
push
xchg
adc
cmp
fsts
rorl
je
add
jmp
xor
scas
mov
loope
ljmp
inc
mov
fstps
adc
jae
xchg
pusha
gs
mov
iret
or
orl
push
jae
mov
adc
add
and
in
test
jecxz
sbb
mov
and
mov
loope
jo
repz
add
fsts
mov
jb
sub
testl
shlb
mov
in
sbb
outsl
adc
mov
out
std
lds
adc
xlat
adc
divl
mov
adc
stc
mov
icebp
dec
lret
mov
int
gs
gs
cmp
add
rorb
pop
lcall
aaa
jp
jno
and
or
pop
xchg
and
dec
testl
outsl
repz
pop
nop
jo
in
lcall
pop
repnz
test
ljmp
cmp
jae
xor
cmp
icebp
cltd
mov
xor
sub
push
xor
je
ret
mov
mov
adc
and
daa
adc
push
mov
fnsave
mov
xchg
cmp
pop
outsl
dec
loop
push
mov
ja
mov
dec
sub
xchg
add
lahf
dec
fs
cwtl
in
pop
jge
pop
xchg
ljmp
mov
in
into
inc
ret
lods
aam
push
mov
inc
fchs
lret
fiaddl
dec
jae
add
or
adc
push
pop
mov
call
jnp
sar
icebp
cmp
into
cmpsb
mov
or
xor
or
adc
cmp
mov
xor
cmpsb
pop
inc
xchg
in
mulb
mov
mov
stos
sar
push
or
xor
mov
fwait
jno
stos
addr16
jg
repz
hlt
push
push
lcall
dec
test
push
sbb
ftst
push
sub
jmp
sbb
nop
or
fwait
leave
mov
aad
and
int3
or
jno
cmpsb
cmpsl
cmpsl
lret
xor
nop
pusha
sbb
imul
xlat
or
std
in
cmp
imul
cmp
bound
lods
cmpl
shll
enter
cmpsb
and
inc
mov
inc
scas
add
jle
rclb
push
push
push
and
mov
jle
scas
sbb
push
add
ss
in
aas
div
pop
pop
mov
cmp
call
enter
push
insb
sbb
daa
jmp
mov
or
clc
sub
pop
mov
inc
ret
clc
ret
test
cli
in
and
jge
xlat
jo
enter
es
aaa
mov
cmp
mov
pop
adc
lock
leave
sbb
jb
adc
ss
test
xorb
jb,pt
repnz
out
add
jp
adc
mov
outsb
jbe
jle
test
mov
lahf
jo
sub
lahf
mov
rclb
or
mov
xlat
sbb
std
and
mov
jecxz
adc
fdivs
pop
xor
js
scas
popa
cld
jg
and
das
clc
repnz
idiv
lods
in
dec
nop
jae
negb
sbb
ds
pop
fwait
add
xchg
sbbb
mov
sub
repz
and
jle
pop
mov
aad
mov
ja
dec
push
sbb
loope
mov
scas
mov
push
sub
roll
out
xchg
fsubrs
pop
xor
dec
lret
pop
dec
pushl
push
sub
add
js
adc
imul
push
stc
sahf
add
jg
sbb
pop
mov
ficompl
jl
aaa
mov
addr16
xor
je
add
xor
or
cmp
jae
in
addr16
sti
cmp
cmpsb
loopne
push
test
aad
mov
inc
lret
push
inc
xchg
ljmp
aas
stc
mov
scas
and
pop
push
dec
and
xchg
inc
push
dec
andb
roll
mov
psadbw
jb
and
jnp
pop
in
ljmp
sub
inc
lock
je
sbb
push
mov
mov
xchg
or
out
test
inc
sbbl
in
cmp
mov
call
imul
lcall
pusha
push
mov
notl
iret
pop
mov
ret
add
es
push
das
jg
cmp
pop
cmpsl
lea
or
pop
je
in
lds
rcl
pop
and
inc
aas
push
jp
xor
ret
dec
inc
fdiv
mov
lods
cld
mov
scas
jle
adc
lock
xor
nop
mov
cmp
lods
cmpl
mov
jo
popa
mov
aam
ss
je
sti
mov
imul
sbb
aas
add
sub
fisubrs
mov
xlat
cwtl
push
mov
rolb
dec
imul
push
loope,pn
shlb
adc
adc
cltd
repz
pop
mov
mov
jno
adc
cli
ds
decb
test
pop
lret
pop
int
test
mov
lret
push
push
adc
cld
mov
test
and
or
adc
cmp
cltd
pusha
xor
adc
shl
push
mov
mov
imul
add
push
std
movsl
jbe
pop
insl
inc
clc
add
negl
inc
aaa
xor
imul
enter
mov
sbb
fiadds
dec
mov
cmpsl
fcomp
out
in
ss
call
push
ficompl
addr16
or
enter
adc
jo
pop
jecxz
daa
adc
dec
xchg
test
out
out
xchg
fucomi
lcall
adc
mov
xchg
or
mov
ret
pop
xor
push
jge
add
xor
cld
imul
cmc
icebp
cmp
lods
mov
dec
xor
pusha
outsl
cmp
loopne
cld
push
repnz
sub
idiv
jnp
mov
sarb
mov
mov
mov
sbb
ja
enter
rcll
mov
mov
mov
add
bound
mov
retw
popf
aad
iret
int
or
mov
push
mov
jecxz
minps
xchg
ret
int
jae
jno
and
or
add
jae
fiaddl
sub
mov
call
out
and
xor
adc
adc
lods
and
jo
push
es
mov
lea
or
or
mov
push
adc
js
or
xlat
call
push
pop
jb
aas
mov
nop
sub
test
es
call
xor
iret
fsubrl
pop
pop
mov
ret
fwait
shlb
add
cmc
xchg
cmpsl
icebp
btc
stos
lahf
cltd
push
ret
jns
lea
rclb
xchg
jnp
dec
fcmovnb
pop
inc
arpl
and
in
rol
dec
xor
jne
add
push
pop
sub
cli
mov
push
rclb
shll
xor
sub
or
lahf
xchg
mov
js
mov
mov
cmp
cld
xor
add
cli
and
mov
mov
add
mov
jnp
leave
in
andb
mov
and
arpl
lret
mov
xor
mov
jecxz
lea
jle
jb
push
xchg
outsb
and
jne
test
xchg
pop
push
pop
repz
sub
mov
lahf
clc
mov
pop
mov
mov
or
stos
cmp
or
aas
xchg
push
int
cs
movsb
out
sub
xchg
orl
dec
inc
jg
push
sub
imul
repnz
in
test
inc
mov
gs
cltd
int
mov
lahf
pop
shl
inc
jmp
xchg
sbb
inc
je
in
movsl
insl
mov
xchg
sub
and
and
dec
lret
pusha
add
rcr
adc
adc
xor
inc
cmpsl
sub
ljmp
push
pop
test
adc
and
xor
repz
push
shll
and
pop
adc
stos
pop
cmpsb
lahf
cmpsl
and
mov
mov
aaa
push
jb
outsb
in
loope
test
shl
sti
jo
mov
stos
push
out
popa
lret
insl
sbb
pusha
hlt
rclb
pop
mov
add
mov
sti
cmpsb
push
xor
pusha
sbb
push
pop
mov
leave
jne
add
scas
or
or
leave
icebp
push
sbb
call
popa
sbb
xchg
xchg
jg
lock
dec
int3
shrl
mov
cmp
outsl
in
mov
cmc
xor
push
mov
or
iret
add
popf
mov
lods
xchg
in
cli
sbb
lahf
xchg
push
ficomps
push
loope
cmc
int
popa
pop
out
cmpsb
bound
lar
test
xor
mov
dec
in
push
stos
mov
sbb
mov
or
movsb
adc
sub
hlt
aam
test
sub
dec
xor
das
mov
leave
into
xchg
jb
js
mov
push
call
push
mov
pop
mov
xorl
pushf
push
push
test
mov
mov
leave
cmp
sub
lcall
and
stc
lods
out
xorb
mov
mov
div
add
add
fwait
sti
neg
push
insb
cs
movsl
sbb
fdivrp
sbb
aam
stc
mov
and
dec
adc
ds
dec
mov
shlb
lods
imul
ret
xor
or
pop
mov
sub
adc
sarl
lahf
push
fistps
xor
adc
fwait
lds
lds
call
pushf
lahf
test
jge
je
shl
test
shll
jo
jnp
mov
add
and
dec
mov
xorb
shlb
imul
mul
scas
sub
lahf
mov
sub
int
inc
jo
adc
iret
pop
cltd
cmp
iret
aad
sbb
adc
jne
pushf
test
mov
and
jp
push
sti
sub
and
sub
das
xor
je
adc
clc
clc
cld
mov
sub
pushf
adc
or
add
xor
xchg
jb
inc
jmp
decb
lahf
int
cmpsb
push
in
dec
jo
daa
adc
dec
test
dec
push
shll
mov
adc
hlt
loope
add
sahf
test
jae
ror
aaa
repz
and
cmp
sub
or
sbb
cmpsl
inc
adcb
insb
xchg
lds
dec
pop
in
cli
sub
cmp
andl
fists
inc
testb
push
mov
add
or
jbe
pop
je
testl
xchg
cmpsl
movsl
mov
jnp
sarl
cmc
push
xor
test
xor
std
outsb
insl
adc
jge
into
push
adc
or
push
sub
insb
jg
lock
emms
gs
andb
xor
insl
pop
push
jno
sub
out
in
testb
loope
in
mov
and
jae
jle
cltd
repnz
jge
xor
cmp
add
pushf
cld
jg
push
mov
sbb
repz
outsl
mov
outsl
fnstenv
repz
or
shll
insb
xor
cmp
je
in
cmp
push
cli
and
aad
pop
popa
jle
outsb
stc
inc
dec
jbe
aam
stos
call
out
cmp
add
dec
out
fwait
cmp
add
xchg
push
div
dec
cmp
push
push
jo
inc
xchg
mov
je
fistl
sub
pop
popf
js
mov
xor
cmp
mov
out
jno
lea
jne
inc
stos
mov
add
movsl
je
loop
pop
pop
mov
mov
sbb
jns
sbb
xor
mov
in
enter
sub
mov
lods
sar
push
aaa
aam
movsb
cmp
mov
lcall
pop
aam
out
mov
add
hlt
sarb
add
xor
xchg
xor
jo
lret
into
mov
fcoms
jmp
dec
ja
int
loopne
push
and
push
jle
enter
mov
lea
lea
adc
fsubrl
dec
cmp
sbb
mov
ja
jecxz
lret
lock
shll
mov
mov
dec
push
faddl
and
push
outsb
mov
dec
add
mov
sub
mov
pop
pop
imul
mov
jmp
loop
or
dec
push
add
adc
dec
jmp
mov
sti
sub
xchg
into
dec
cwtl
ljmp
gs
push
xchg
in
mov
ljmpw
cltd
int3
test
insl
rcrl
add
and
enter
lcall
repz
pushf
mov
mov
push
rcl
loop
or
xchg
psadbw
sti
cli
mov
std
jle
nop
mov
popf
xchg
aaa
pop
jo
mov
cmp
xlat
out
xor
jg
sbbl
iret
xchg
push
pop
insb
sbb
adc
stos
push
mov
dec
sub
sahf
jno
out
cmpsl
ja
mov
fnstcw
or
mov
jg
cld
dec
adcl
in
rolb
ret
cli
lcall
into
mov
clc
jae
jb
sbb
fisubs
mov
mov
ds
cs
jecxz
inc
xor
mov
mov
add
mov
pop
or
sbb
xchg
shll
xor
mov
or
xchg
shlb
pop
iret
ja
inc
shl
sbb
pushf
hlt
das
mov
xor
rclb
out
ret
jecxz
or
mov
outsl
ja
in
lahf
mov
rcl
mov
mov
mov
inc
pop
sub
inc
fwait
mov
xchg
pushf
out
incb
insl
mov
sahf
add
cmp
in
mov
or
mov
stc
data16
mov
push
jb
push
add
loop
add
pop
loopne
fisubrl
dec
je
aam
mov
inc
mov
fldenv
aam
sbb
or
sub
sub
mov
ja
sbb
adc
pop
xor
cmp
xchg
mov
mov
sahf
or
iret
mov
dec
rorb
lret
inc
xlat
jb
mov
movsl
push
out
mov
lods
push
jb
xor
stos
jmp
imul
or
loop
es
sub
push
pop
aaa
pop
insl
sbb
stos
add
dec
ficoms
aam
fdiv
mov
inc
jno
cli
hlt
sbb
mov
jl
mov
aas
pop
lods
jne
cmp
add
test
cmpsl
xor
scas
jne
dec
add
mov
push
mov
pop
sbb
mov
jb
cmpxchg8b
leave
add
mov
movsb
push
xchg
ljmp
aam
inc
mov
movsl
xchg
add
out
sbb
test
or
ror
mov
mov
iret
testb
mov
lds
imul
and
pop
xchg
dec
jne
xchg
das
popf
loop
xchg
sbb
and
xlat
dec
loopne
add
mov
call
xor
ret
lret
xchg
sub
je
cmp
pop
sbb
repnz
jno
add
inc
jne
std
imul
lret
lds
xor
je
ds
dec
mov
mov
jg
ret
push
pop
fisttpl
jl
xor
mov
or
test
xchg
mov
shrb
gs
cld
in
fnsave
and
mov
sub
push
pushf
repz
pop
lcall
cmp
imul
loop
dec
test
mov
jecxz
sbb
push
jmp
outsl
adc
fwait
ret
sub
xor
mov
xchg
lret
mov
push
scas
sbbl
das
add
and
dec
sti
inc
xlat
arpl
pushf
lods
xchg
dec
sub
in
xchg
test
addr16
inc
lds
xor
nop
or
sbb
mov
insl
rorb
mov
imul
adc
movsb
push
xor
enter
push
sbb
rcl
aad
imul
cmp
add
shll
aaa
fstl
inc
or
push
mov
stc
mov
sub
sbb
rcl
push
out
cmp
movl
xchg
hlt
inc
mov
adc
xchg
xor
xlat
cmpsl
arpl
or
sbb
popa
mov
dec
cmp
add
jge
sub
mov
push
leave
ljmp
pop
cmp
and
cmp
jg
js
fwait
in
mov
mov
data16
cmp
mov
inc
sub
cld
or
scas
sbb
cmc
dec
mov
out
sub
sub
sub
or
sub
popa
fmul
mov
pop
xor
popa
rorl
addr16
pop
mov
ds
xchg
outsb
push
es
mov
xchg
and
leave
xchg
sbb
lods
cmp
aam
inc
insb
xchg
movsl
lods
cmpsl
out
cmpsb
add
sub
mov
cmpsl
test
xor
aaa
jne
inc
pop
pop
stos
inc
inc
out
jge
mov
add
jmp
adc
pusha
add
mov
stos
jle
mov
mov
out
mov
addr16
sahf
ror
xor
jl
cmovne
or
dec
jp
adc
jnp
adc
fldl
xchg
jb
xor
fnstcw
lock
fwait
mov
stos
push
inc
outsb
xor
cwtl
fcompl
inc
dec
in
and
xchg
adc
cmpsb
dec
sbb
lret
in
ret
mov
lea
push
test
sti
icebp
int
daa
inc
subl
sub
lcall
lods
add
xchg
push
out
pop
lahf
scas
mov
mov
sub
mov
cmp
dec
imul
imul
out
adc
or
sub
sahf
mov
add
lret
and
gs
sub
jmp
and
ja
mov
cwtl
and
jnp
pop
jo
mov
orl
jp
cs
gs
cmpsb
dec
pusha
ret
out
and
dec
mov
ror
sub
mov
mov
inc
xor
push
or
mov
mov
add
pop
or
jnp
mov
imul
aam
leave
xchg
ret
add
cmp
or
xor
jp
sub
dec
mov
ljmp
int3
add
xlat
sahf
sbb
push
sbb
out
mov
inc
jp
dec
pop
imul
xor
insl
dec
add
pop
fstpl
jl
clc
mov
cltd
je
adc
scas
lods
jae
xor
shrb
aad
std
das
lods
inc
mov
sbb
leave
nop
inc
scas
inc
mov
cmp
mov
inc
ret
xchg
inc
sub
out
pop
mov
imul
mov
sbb
mov
cmpsl
jae
xchg
cli
rorl
fnstenv
je
jg
xchg
cmp
popa
mov
insl
sbb
push
dec
mov
les
lahf
shr
xchg
hlt
push
mov
mov
aaa
jge
add
ds
mov
popf
cmp
pusha
dec
test
out
and
or
es
mov
pop
mov
cmp
lock
mov
arpl
mov
aaa
fsubrl
pop
add
fcmovnbe
inc
sub
rolb
popa
add
sbb
lock
xlat
ljmp
adc
sahf
fucomip
iret
movsb
loopne
push
lods
cmc
adc
xor
xlat
test
lahf
and
aad
ret
mov
pop
cmp
ret
xor
adc
lods
fidivl
jne
mov
popf
cmp
jmp
shlb
cmc
shr
mov
or
xlat
xchg
pop
aas
dec
test
aas
jl
cmp
aad
pop
lds
jmp
dec
xor
inc
into
mov
inc
xchg
int3
shll
aam
mov
das
mov
lock
jnp
loop
cwtl
mov
push
daa
fsubr
cltd
xchg
or
pusha
stc
or
daa
jne
and
mov
cs
xchg
sub
cld
iret
lock
pop
jne
fmul
lods
in
aam
in
sbb
clc
jp
lcall
cwtl
inc
sbb
or
pop
inc
fwait
mov
das
sbb
mov
cmc
push
das
dec
in
adc
mov
aas
cmp
ljmp
f2xm1
popf
clc
cli
call
mov
pop
rorb
xchg
lret
dec
mov
imul
push
dec
add
inc
dec
out
daa
mov
loope
pop
outsb
mov
push
add
inc
mov
arpl
stos
adc
movsl
or
orb
mov
cmpb
and
dec
fcmovne
sub
daa
loope
dec
adc
bsr
scas
inc
dec
pop
mov
sub
shrl
aas
push
fcompl
adc
push
xchg
inc
jge
es
xchg
add
mov
mov
pavgw
push
into
cmpl
frstor
out
mov
xor
rclb
fwait
dec
jge
mov
bound
xor
les
jle
pushf
in
popl
sub
sub
test
inc
mov
ficoms
in
mov
sub
cltd
insb
jle
dec
xor
loopne
push
xchg
fldcw
aam
pushl
pop
mov
mov
push
mov
cmp
in
xchg
stos
pushf
xor
xchg
xlat
loope
jne
popf
scas
pop
outsl
mov
outsl
push
btr
aaa
mov
sbb
cs
sbb
fwait
out
in
cs
imul
popa
mov
push
dec
out
hlt
cmpsb
inc
xor
insb
adc
lcall
push
mov
xchg
outsl
arpl
and
mov
jo
cwtd
and
addr16
jecxz
mov
jle
xchg
arpl
mov
pop
mov
mov
cmp
inc
xor
and
testb
add
mov
jnp
xor
aam
mov
insl
scas
outsl
loopne
cmp
dec
cmpb
jbe
ret
cmc
out
jmp
xchg
jns
and
cmc
in
cltd
mov
aaa
andl
mov
dec
mov
sub
mov
fiadds
pushf
aaa
mov
aas
les
pop
push
pop
movsb
push
mov
aam
lock
jl
sub
das
add
xchg
popa
movsl
mov
dec
sub
push
inc
mov
mov
cld
lahf
and
sahf
ljmp
sbb
or
cmpsb
ret
in
imul
sub
xchg
mov
cli
mov
dec
sbb
pop
loopne
shll
in
sbb
test
mov
out
aam
in
fcoml
sbb
pop
ss
cs
scas
in
nop
cmpsl
xchg
iret
and
pop
dec
cmp
dec
sub
nop
enter
push
mov
stos
fbstp
jnp
dec
push
fdivrs
and
xchg
sbb
stos
test
pop
aad
cmp
paddd
push
mov
imul
lods
out
mov
rorl
sbb
cs
and
sbb
test
or
dec
sub
cmpsl
popa
pop
push
lds
add
ret
dec
andl
jl
and
je
js
cmp
adc
adc
ret
enter
cli
pop
jae
add
push
sbb
jmp
and
mov
out
mov
icebp
popf
jbe
fucomp
test
or
xorb
movl
jmp
into
mov
repnz
out
rorl
je
loop
jl
mov
and
push
arpl
cmp
push
jno
inc
push
fisttpll
inc
sbb
add
movsb
jns
xchg
divb
movsb
push
pop
jmp
jge
mov
fcmovnu
xor
mov
cmp
or
imul
bound
aas
sub
mov
loopne
jb
xchg
icebp
cmp
lock
loopne
add
push
sbb
xorl
add
mov
xor
ss
fcmovu
or
mov
mov
stos
xchg
push
mov
mov
cltd
outsb
or
cmp
insl
lods
out
les
jp
lds
dec
addb
insb
int
movsb
jecxz
jl
push
aam
icebp
aaa
and
jno
add
mov
pop
xor
jmp
sub
mov
decl
or
aam
adc
adc
and
push
ss
fdivs
mov
lret
nop
mov
int
sbb
rolb
mov
testb
push
gs
jbe
arpl
xor
sbb
test
sbb
sbb
push
cmpsl
arpl
mov
xchg
out
cmp
push
jnp
ljmp
outsl
sub
stc
les
ds
sub
mov
pop
xchg
js
cmpsb
mov
inc
lock
dec
fstpl
cs
rcrb
flds
popf
sbb
jno
mov
in
int3
repnz
mov
pusha
inc
lods
cli
test
mov
clc
fbstp
pop
lahf
and
nop
xlat
fwait
pop
dec
add
addr16
inc
shlb
das
cltd
pusha
nop
xor
push
inc
xor
iret
jp
daa
cmp
outsb
icebp
add
sub
pop
hlt
ret
popa
mov
inc
jne
es
xlat
jb
cs
vmwrite
int3
pop
or
lods
fcomp
or
xchg
and
dec
mov
mov
or
in
or
out
and
xchg
mov
mov
add
mov
pop
test
push
nop
cs
mov
cmp
test
ja
add
call
xor
push
adc
bound
add
insl
add
mov
inc
out
push
sbb
stos
push
aas
xchg
or
add
cwtl
cmpsl
sub
adc
std
aam
in
inc
fbld
pop
xor
rclb
mov
xor
jnp
sbb
out
ret
movsl
mov
lcall
sub
push
and
cld
repnz
or
xlat
cwtl
adc
pop
icebp
xchg
out
roll
test
jecxz
call
mov
sbb
fistl
arpl
xor
pop
pop
jle
andl
push
stos
lods
pusha
enter
mov
outsl
shll
jge
jo
and
cmp
fcompl
adcb
jo
sti
jge
pop
jl
jo
push
jmp
rorl
pop
jmp
cld
in
jle
fiaddl
call
inc
mov
pop
pop
loop
outsb
or
sub
insb
cs
mov
mov
xchg
imul
leave
fimull
pop
sub
stos
adc
aaa
sbb
insl
pop
mov
out
mov
out
xlat
sub
into
repz
repnz
adc
cmpsl
aad
in
cmp
repnz
push
fnstsw
lds
adcb
mov
decl
adc
pop
ficomps
or
add
ret
xor
das
mov
cmp
xchg
ja
adc
jb
popa
aad
push
ficoms
and
ficoml
pop
jge
jle
xor
xchg
dec
das
movsl
clc
nop
jns
dec
icebp
loopne
push
and
jmp
ficompl
xor
popa
add
fistpll
dec
mov
test
xor
xor
push
movsb
pop
sbb
push
icebp
dec
ret
loop
mov
cmpsl
push
xlat
mov
jnp
nop
lret
imulb
aaa
xorl
fs
sub
das
mov
and
fs
inc
xor
xchg
adc
sar
in
sub
xchg
fldl
push
fiadds
sbb
stos
xor
movsl
xchg
pop
adc
pop
movsl
mov
add
jg
lods
stos
xorl
test
das
jl
mov
dec
xor
inc
lock
cmp
and
adc
jb
push
idivb
and
call
sbb
inc
pushl
add
test
bnd
push
hlt
cmp
cltd
into
sbb
popa
push
mov
mov
push
fists
das
fsubrs
cmp
out
and
in
and
pop
xor
push
jecxz
hlt
gs
scas
loop
pop
std
push
outsl
cltd
cmp
cmp
sbb
ja
mov
cmpsl
lods
adc
pop
orps
out
pop
xchg
test
scas
jmp
inc
fisubl
rorb
sti
dec
jne
outsb
cmp
ljmp
add
adc
mov
cld
lret
pop
xchg
jno
pop
jle
push
mov
adc
in
and
popa
das
cli
lret
xchg
push
push
mov
dec
jo
cmpsl
push
pop
int3
sub
jno
mov
jge
mov
inc
sbb
jne
jecxz
pushf
ljmp
jb
push
and
sbb
mov
test
jne
std
mov
mov
mov
movsl
les
or
mov
outsb
push
les
xchg
test
sarb
jmp
outsb
pop
jns
ret
sub
sub
ds
mov
setae
adc
xchg
xchg
push
paddq
cli
ljmp
cli
inc
cmpsb
mov
faddl
cmpb
inc
repz
icebp
xchg
add
ljmp
push
test
data16
in
lea
or
add
and
popl
add
test
lds
xchg
pop
adcl
and
sbbb
cmpb
mov
nop
mov
sahf
cmp
sub
loop
sahf
xchg
rolb
xchg
lahf
cmp
lea
aad
and
outsb
adc
push
mov
cmp
lret
pop
or
pop
sti
xor
jle
imul
jmp
push
divl
push
pushl
cltd
incl
sub
sub
sbb
ss
stos
sub
push
sbb
lods
jge
or
cld
xchg
insl
das
in
inc
inc
movsb
cmp
clc
push
ds
icebp
inc
out
and
sub
ss
cld
and
cli
sar
push
pusha
sbb
jns
xchg
pop
and
xchg
addr16
inc
cmp
jnp
inc
or
cmpb
inc
loop
push
or
inc
popa
push
dec
cmpl
xchg
sub
out
sbb
cmp
jecxz
movsl
cld
push
dec
fcoml
orb
cmp
test
push
hlt
std
mov
xor
mov
std
xor
mov
sbb
das
cmp
into
mov
xor
frstor
into
push
call
sbb
dec
jne
push
jo
ja
mov
lea
movsl
pop
stos
jns
or
adcl
sub
fwait
clc
inc
pushf
mov
test
rcll
addr16
cmp
in
or
and
testb
mov
sub
daa
das
adc
lcall
xor
fisubrl
imul
push
xchg
sbb
pushf
pop
shrb
mov
push
push
mov
sub
pop
adc
cmpl
jne
shrl
xor
in
xchg
xchg
shlb
xor
stos
lods
xchg
pop
jg
inc
cli
lret
inc
aad
sbb
pop
mov
popf
inc
xor
dec
fld
sti
mov
jge
lcall
adc
push
pop
movsl
fmull
pop
cmpsl
inc
pop
pop
mov
test
daa
popf
xchg
dec
shlb
shl
add
cmp
rcrb
xor
inc
sahf
dec
jmp
mov
push
nop
pop
cwtl
call
mov
lret
movsb
sbb
lret
mov
ffree
test
xchg
add
fwait
dec
scas
leave
mov
js
ja
repnz
je
addr16
cmc
fcomp
push
push
xchg
lea
add
divl
fistps
sbb
movsb
sbb
mov
xchg
dec
mov
out
jo
in
xchg
fsubrs
mov
cmp
pop
fwait
incb
loopne
aaa
sarl
dec
or
mov
cltd
aad
hlt
out
cltd
xchg
xlat
out
fwait
mov
scas
into
xlat
stc
mov
shlb
mov
jmp
mov
fisttpl
dec
push
sbb
pushl
pop
popa
or
in
jl
repz
mov
lahf
std
jmp
push
push
pop
or
je
icebp
hlt
push
cltd
or
popa
gs
cmp
push
jae
test
repz
mov
xchg
sub
and
movsl
adc
inc
icebp
outsl
cmpsl
jle
ss
cli
loope
iret
repz
jnp
adc
gs
or
in
nop
nop
imul
ss
jmp
add
xor
pop
sub
pop
or
lret
inc
sbb
push
mov
jp
add
jl
adc
add
arpl
jmp
scas
stc
or
inc
js
mov
push
mov
and
sub
adc
inc
and
xchg
pop
add
mov
lret
sbb
add
xchg
sbb
mov
in
loope
leave
mov
push
cwtl
mov
xchg
loop
testl
adc
fsubrp
push
mov
repnz
mov
add
sub
sbb
and
aam
mov
lods
fld1
push
dec
sbb
aas
ja
rclb
divb
push
or
pop
nop
inc
push
popf
faddl
test
ja
pop
mov
or
push
cmp
add
clc
movsl
mov
cmp
dec
cld
decb
jg
jmp
rcrb
xchg
les
insb
inc
mov
push
fstpt
out
fisttps
shll
lods
in
jno
sbb
lret
lods
cmpsl
nop
mov
lods
mov
push
dec
jbe
mov
mov
ss
and
cmp
inc
cmp
add
lods
xlat
sub
xchg
in
pushf
ds
xchg
mov
in
add
daa
xlat
int
dec
add
add
cmp
bound
roll
mov
test
sbb
insl
pop
pop
xchg
addl
sub
subb
dec
loop
mov
fcmovbe
inc
fldt
rcl
mov
mov
lock
jmp
push
stos
inc
or
inc
inc
push
pop
sti
movsl
cmp
aam
jb
mov
rcrb
or
sahf
jns
rorb
jg
xchg
mov
jg
or
mov
sbb
xchg
icebp
lods
and
xchg
mov
inc
lea
push
insb
rolb
lock
cvttps2pi
sbb
std
sub
adc
loop
out
aad
adc
clc
mov
mov
rol
xchg
sub
and
xor
insb
jp
fst
dec
je
inc
push
int3
and
dec
push
cmp
ss
jmp
imul
push
outsl
nop
jns
sub
or
pop
std
insb
cmpsl
test
pop
mov
mov
stc
in
mov
pop
test
adc
shlb
in
je
ds
sub
lods
xlat
test
mov
loope
adc
ret
jbe
popa
popf
scas
mov
push
stos
jmp
xchg
outsb
mov
hlt
pop
or
push
jmp
lahf
mov
das
mov
sbbl
dec
and
les
mov
pop
or
pop
pop
in
adc
clc
push
insb
test
fisubrs
push
mov
inc
pop
fwait
imul
jns
dec
pop
dec
push
and
and
lea
or
dec
adc
mov
add
xchg
and
add
ljmp
sbb
stos
mov
adcl
add
dec
lret
sbb
dec
mov
insl
or
jns
mov
stos
shll
jge,pt
out
flds
inc
xchg
movsb
cmp
mov
jle
not
push
xor
lds
mov
add
jg
xchg
outsb
jecxz
ja
fnstenv
xor
adc
out
mov
dec
imul
stc
orl
in
jno
call
push
xchg
mov
or
or
and
pop
ficompl
dec
xchg
add
sub
dec
dec
cltd
fs
inc
stos
mov
xchg
or
or
ficompl
jmp
or
out
test
rorl
mov
inc
lds
or
aaa
or
jne
dec
add
clc
pop
insb
lods
mov
cmc
xor
ss
aaa
push
adc
testb
rcrb
lcall
movsb
jmp
sub
cmp
shrb
std
push
std
test
mov
in
repnz
xor
repnz
pusha
aam
xor
aas
movsb
aam
dec
sub
push
scas
add
push
lcall
mov
cld
lods
pop
push
jbe
dec
and
or
jl
xor
and
pop
pop
imul
data16
mov
lcall
fwait
xor
push
jns
roll
adc
mov
je
addb
and
sbb
push
and
sub
or
xchg
mov
rol
mov
out
dec
mov
xchg
lock
sub
rorb
rcrl
sub
cld
sbb
insl
lods
rolb
push
add
or
test
xor
aad
dec
fldenv
jmp
pop
sbb
xchg
loope
dec
sub
adc
jecxz
pop
movsl
stos
and
push
jnp
add
into
or
orb
repz
sub
lret
mov
push
jb
aad
mov
mov
or
hlt
pop
int
adc
xor
add
pop
cmp
dec
fisubs
ret
or
icebp
jecxz
dec
addb
scas
push
fildll
jo
xor
imul
mov
mov
mov
negl
jno
xchg
push
into
ret
xlat
xor
rolb
test
into
xor
inc
push
cmpsb
dec
popf
lods
neg
inc
data16
into
cmpsb
test
xchg
add
cli
in
dec
pop
adc
push
fcoml
sub
adc
cmp
hlt
es
int
divl
xchg
repnz
int3
mov
add
adc
xor
xchg
pop
add
ss
push
mov
jmp
test
add
push
xor
cmp
push
jb
adc
jae
leave
jns
in
loope
pop
inc
xor
mov
and
jl
lea
pop
pop
rcll
movsb
push
xchg
pop
mov
hlt
lcall
shrb
jb
inc
jae
mov
mov
scas
add
jp
shrl
fst
pop
jp
adc
lret
pop
or
mov
or
xchg
sub
xlat
inc
das
rcrb
mov
aam
sahf
lods
scas
movsb
mov
cmp
add
inc
pop
mov
aas
cli
fiadds
int
push
test
movsb
cld
xchg
push
sti
sub
jp
std
enter
add
pop
xchg
lcall
push
push
push
ret
pop
loopw
and
add
testb
mov
mov
mov
jge
jmp
push
mov
divb
fcmovb
lea
and
mov
loop
orl
out
push
xchg
and
adc
sahf
repz
std
sti
sub
aaa
cmp
inc
imul
lock
in
lahf
mov
ss
test
rcr
mov
mov
add
imul
mov
mov
push
dec
mov
rolb
dec
popf
lock
jo
ss
fmuls
adc
pop
mov
je
vmread
fdivl
clc
xchg
aad
add
inc
xchg
pop
popa
and
inc
pusha
iret
js
or
cmp
pop
lds
addr16
fs
fsub
rcll
psraw
rcrl
imul
sbb
add
icebp
mov
std
sbb
xor
jg
adc
daa
xor
sbbl
sti
add
adc
sar
inc
jmp
out
je
dec
arpl
adc
test
ds
add
jecxz
ss
stos
xor
ret
fistps
enter
cmp
or
xlat
xchg
sbb
add
cmp
loop
sbb
inc
scas
pop
sub
add
nop
sbb
jle
sahf
repnz
adc
mov
dec
movsl
mov
sbb
outsb
add
cmpsb
sub
adc
push
jno
ljmp
jno
cmp
mov
cld
and
mov
rcrb
scas
les
push
lds
and
pop
cmp
out
shrl
fdivrp
jns
sub
das
sarl
mov
out
push
stc
stos
and
pusha
fldcw
adc
dec
dec
push
add
mov
clc
cwtl
in
ret
xor
and
xor
sub
sbb
in
and
in
lea
push
cmp
jge
xor
mov
inc
lock
mov
pushf
imul
or
push
movsb
mov
cmpsb
lcall
lret
mov
popf
loope
cmpsl
inc
mov
jb
jo
shl
mov
xchg
out
sbb
sbb
pop
cwtl
xlat
aam
cmp
lock
mov
mov
cli
and
mov
daa
dec
cmp
and
xchg
jp
out
mov
pop
cmp
je
addr16
push
mov
arpl
dec
cmc
imul
adc
sbb
fcmovne
sub
cld
imul
sub
ja
or
pushf
and
movsl
push
hlt
fcomps
xchg
andb
shrl
pop
sub
or
jecxz
in
lods
popa
int3
std
add
jns
mov
lods
pop
xchg
push
push
mov
push
ret
mov
push
test
es
sub
mov
push
xchg
pop
aad
cmpsb
push
xor
add
mov
invlpg
inc
xor
out
xor
insb
or
ret
mov
sbb
cld
dec
loopne
pop
jnp
out
pusha
int
loopne
aaa
push
cmp
lods
nop
or
lea
pop
lods
outsb
adc
ret
jb
ja
adc
test
mov
add
adcl
or
fisubrl
outsl
pop
pop
adc
lods
inc
xchg
notb
outsl
inc
insl
cmp
inc
mov
repz
xchg
adc
je
push
dec
cmp
xlat
ja,pn
ret
in
cmpsb
aam
jo
pop
ss
mov
inc
nop
in
sbb
test
rorb
sbb
dec
jb
mov
cmpsb
int3
push
jns
push
push
jae
mov
sbb
aas
scas
out
jo
sbb
mov
imul
jne
push
inc
rcr
sbb
sub
fabs
shll
mov
daa
mov
xchg
and
divl
sbb
and
sbb
mov
aam
shlb
iret
add
inc
jbe
adc
xor
xchg
sti
sub
or
adc
jecxz
cmp
aad
add
int
faddp
dec
mov
jp
dec
testb
ds
pusha
inc
and
xchg
mov
mov
not
ficompl
push
insb
sbb
sbb
push
sub
and
mov
push
pusha
jecxz
dec
cmp
cmp
aad
xchg
cmp
pop
add
jo
jb
out
add
test
cmp
pop
xor
ss
popa
rcrl
movsl
inc
testb
add
and
cmpsl
and
and
dec
sub
inc
xor
xlat
dec
adc
mov
repz
cwtl
add
lock
leave
arpl
cmp
ret
add
je
cmp
gs
cmpb
sub
mov
cmp
mov
lcall
shlb
out
cmp
adc
ficoms
mov
ss
xchg
mov
dec
out
test
mov
fwait
outsl
aad
cmc
xor
push
or
cmp
aas
insb
fildll
sub
idiv
ds
inc
jns
in
ljmp
push
mov
cld
or
cmp
mov
pop
repz
sar
xchg
pop
mov
pop
and
and
adc
out
outsb
xlat
cmp
ss
sbb
gs
mov
sub
pop
adc
xchg
mov
jg
psrad
mov
jge
outsb
hlt
push
lret
or
call
cli
adc
fwait
clc
aam
scas
or
mov
jns
out
mov
orl
rorl
xorb
dec
arpl
aaa
les
in
add
cmp
sub
scas
adc
shrl
mov
popf
out
xor
stc
fisubl
mov
sub
mov
stc
mov
shlb
mov
inc
lcall
ja
add
insb
test
sub
mov
rorl
push
inc
stc
loope
ljmp
insl
dec
add
notb
push
jmp
fidivrl
jge
scas
fsubr
push
cmp
fmuls
push
enter
es
mov
inc
movsl
mov
das
aam
int3
lret
popf
aam
mov
mov
popa
jbe
push
xchg
push
in
push
adc
sub
cmpsb
lds
clc
clc
xchg
aam
repz
mov
pop
out
cmp
inc
test
xchg
mov
push
out
sub
or
int
cld
mov
sbb
mov
or
rcll
pop
pop
cmp
adc
cpuid
jge
repnz
in
movsl
or
mov
lods
xlat
out
fldt
fcoml
xchg
mov
outsb
jl
int3
xchg
sbb
mov
mov
push
mov
fdivp
shlb
mov
inc
pop
scas
sbbl
mov
pop
or
ljmp
imul
inc
mov
dec
icebp
jge
mov
out
shll
add
cwtl
movsb
mov
inc
shll
xchg
nop
stos
cmp
out
pop
mov
xchg
lods
xchg
shl
stc
sub
mov
xchg
xchg
popa
cmp
cmpl
dec
icebp
and
cmpsb
sahf
adc
xchg
mov
xchg
cmpb
mov
repnz
jp
hlt
call
decb
xor
loop
dec
or
push
jp
xor
sbb
jnp
adc
bound
outsl
and
int
add
in
pop
inc
xor
cli
inc
sbb
insl
mov
shl
jl
jl
sar
es
fs
push
bound
aas
jne
sahf
jo
hlt
insb
add
add
shlb
test
xchg
std
std
arpl
cmpsb
dec
cmp
mov
dec
in
jnp
jno
mov
jbe
xchg
push
inc
imul
test
jle
sub
std
into
xchg
push
inc
pop
and
inc
sub
sbb
incb
xor
mov
push
pop
pop
xchg
jecxz
test
cmp
push
cmp
xor
mov
aas
push
pop
jle
ret
sbb
dec
in
jmp
addr16
xor
divl
lcall
xlat
or
mov
popa
pop
popa
ja
loop
cmp
cmpsl
outsl
testb
je
jg
mulb
cmpsb
enter
imul
push
sub
in
iret
mov
mov
xchg
xchg
in
outsb
gs
mov
jnp
lods
aad
loope
pop
repnz
insl
jmp
jle
xchg
addr16
mov
inc
mov
movsb
push
mov
jp
ljmp
xor
outsb
int
mov
out
jmp
das
sbb
shl
cmp
or
scas
sbb
and
xchg
lahf
jnp
xlat
data16
enter
inc
out
sub
pop
sub
cmc
arpl
cmp
jbe
iret
icebp
pop
lods
fbstp
outsl
out
or
cmp
stos
add
jp
bound
sbb
cmpxchg
sti
add
cwtl
inc
cs
stos
into
jle
push
xlat
sbb
mov
aas
scas
mov
ss
roll
jns
push
jmp
iret
out
shlb
xchg
lahf
jbe
push
jle
nop
cmp
pop
mov
mov
push
stc
insl
out
notl
pop
enter
stos
loope
push
int
mov
loopne
in
mov
dec
enter
cld
xor
int
add
adc
insl
and
int3
push
roll
inc
cmpb
push
jmp
adc
or
lea
in
or
mov
aam
cmp
xlat
fwait
jbe
imul
push
cmpsb
roll
push
test
xor
inc
dec
inc
mov
add
adc
push
rcll
pop
popa
out
lcall
xor
mov
hlt
inc
cmp
inc
das
sbb
and
mov
out
xchg
mov
shl
cmp
test
mov
test
scas
mov
in
es
repz
out
pop
jl
jle
scas
mov
add
push
stos
cmc
cmp
cmp
mov
push
les
dec
mov
dec
xor
idiv
pusha
bnd
add
inc
inc
mov
add
push
jl
jge
pop
xchg
in
push
mov
mov
inc
gs
lods
lahf
jl
xor
ficompl
dec
lahf
ja
dec
fwait
jbe
imul
pop
jge
ljmp
ret
test
xor
adc
lahf
pop
mov
inc
cmp
mov
sub
or
mov
lds
outsb
pop
mov
inc
in
push
addr16
push
adc
lods
jae
xor
jne
adc
repnz
xor
not
fldt
into
xorb
push
mov
lahf
xor
inc
lahf
je
out
xlat
enter
nop
jg
add
jns
ret
scas
jae
loopne
add
xchg
cmpsb
inc
dec
mov
inc
dec
icebp
fiaddl
sub
or
pop
push
add
nop
popf
jge
jge
aas
push
mov
mov
adc
cmp
orb
sbb
shlb
bound
lret
lock
shrl
pop
sar
nop
lret
in
add
and
or
sbb
dec
sub
decl
ljmp
cmc
pop
pop
dec
ja
mov
fwait
daa
nop
leave
xchg
jne
and
xchg
cmp
loope
div
push
cmp
popa
enter
dec
mov
out
movsl
mov
mov
xchg
cmp
jmp
mov
and
adc
fcomi
repz
sub
lret
push
sbb
cmpxchg
call
mov
enter
dec
dec
int3
sub
addr16
lea
xchg
addr16
adc
inc
shl
adc
jo
pop
and
test
out
sarl
out
cs
mov
rorb
and
out
xchg
sahf
jne
mov
add
lds
fnstsw
hlt
adc
in
clc
xor
divb
sub
inc
xchg
jb
mov
cld
rorb
mulb
and
lahf
mov
sub
xchg
imul
loop
lcall
rclb
gs
pop
xchg
icebp
adc
xlat
lods
mov
inc
pop
bound
mov
call
sti
aas
lds
movsl
fwait
aad
cmp
lock
in
and
adc
sbb
mov
adc
icebp
jp
outsb
repz
loop
call
std
xor
addl
repnz
mov
jb
mov
mov
mov
mov
rorb
aad
test
pop
xchg
lret
mov
jg
mov
inc
and
shll
ss
mov
je
loopne
shl
lcall
mov
mov
push
movsl
out
xchg
jnp
daa
mov
cli
lods
mov
std
inc
jns
jo
jbe
cmc
mulb
out
cmp
mov
pop
lea
cmp
push
ret
outsb
mov
mov
ss
cmp
sbb
pop
adc
mov
mov
jg
add
mov
and
pop
adc
adc
cmpsl
sub
popa
mov
inc
push
mov
addr16
push
incb
and
sbb
pop
add
inc
lods
xchg
mov
int
and
rol
or
and
jl
adc
cld
xlat
into
adc
lret
cmp
push
push
or
pop
insl
sbbl
and
aam
sbb
shll
and
sub
mov
adc
jg
sub
xchg
xchg
or
sub
pushf
mov
dec
and
in
loop
idivl
cmp
xor
in
out
add
push
and
outsb
movsb
cs
stc
imul
flds
movsl
pop
mov
inc
mov
into
dec
xor
push
xchg
imull
xchg
fldcw
sub
jle
in
jae
pop
jmp
daa
movsb
ds
pop
xor
imul
xchg
adc
pop
or
and
pop
dec
ds
imul
adc
ret
or
mov
lock
ret
and
ss
xchg
adc
pop
push
mov
inc
pop
sbb
into
cmp
pushl
xchg
or
jg
sub
xchg
cmp
cltd
mov
stc
lcall
mov
icebp
lds
les
repnz
add
inc
loopne
xchg
cmp
jp
dec
and
and
push
push
mov
mov
shrb
ljmp
mov
mov
or
cs
fsub
cli
jo
xchg
mov
out
in
pop
cmp
jg
inc
cmpsl
insl
aas
iret
push
bound
sbb
or
int
xchg
dec
inc
fistpll
repz
into
out
jg
sbb
sub
jl
arpl
mov
mov
adc
mov
dec
and
insl
add
adc
scas
push
pop
insb
lret
mov
and
mov
and
add
pushf
fbld
and
push
pop
xchg
es
popa
mov
and
and
mov
sub
into
xor
roll
cmpsl
xchg
cli
or
sub
lret
jmp
mov
fs
popf
sbb
pop
adc
rcr
mov
sub
mov
sti
jo
lahf
jae
sbb
pop
movl
iret
push
fmulp
push
jle
sub
push
jno
repnz
push
sbb
shll
fists
and
aaa
test
mov
mov
test
fsts
cmp
xchg
rcr
push
icebp
sub
ss
xor
cmc
push
stos
call
stc
popf
xchg
inc
pop
cmpsl
and
inc
xchg
push
mov
lods
mov
jo
push
push
pusha
cmp
mov
sbb
fcmovnbe
cmp
mov
sbbb
dec
int3
out
or
pop
cmp
sub
psrld
xor
jb
pop
je
idivl
lds
cmc
dec
pop
lock
mov
add
mov
addr16
insb
cltd
repz
cmc
loop
sahf
les
mov
ret
inc
push
shlb
mov
sbbb
mov
inc
cs
xchg
sahf
scas
aas
cmp
jle
pop
or
ret
cmovns
push
gs
fcmovnbe
mov
jge
int3
ret
mov
gs
sub
push
add
mov
subl
aaa
std
mov
xchg
stos
int
cmp
pop
push
inc
ljmp
jmp
repz
sbb
shrb
add
test
pop
adc
sahf
std
sub
adc
mov
jle
gs
ret
pusha
adc
sbb
add
adc
xorl
rolb
jo
sub
bound
add
xchg
sub
lods
sbb
cmp
sbb
xor
sub
xchg
mov
dec
leave
int3
icebp
mov
adc
shrb
jmp
xor
gs
loopne
xlat
mov
outsl
mul
mov
jl
jl
ret
adc
aad
pop
mov
cmp
jns
xor
add
mov
leave
mov
inc
cmpsb
arpl
dec
add
mov
clc
xor
lods
in
xchg
in
xor
stos
mov
sbb
mov
pop
push
out
cmp
sub
adc
aad
xor
push
test
pop
lock
test
faddl
ret
mov
sbb
das
jnp
popa
cmpb
test
in
hlt
cli
mov
jecxz
pop
ret
cwtl
xchg
clc
push
and
jle
outsb
or
sbb
pop
loope
int3
out
jns
mov
pop
cmp
sbb
xchg
mov
or
insb
pop
pop
shrl
xorl
fstpl
push
lea
mov
stos
fs
mov
xor
lret
inc
xor
pop
fwait
stos
loop
inc
xchg
cmp
aad
in
mov
mov
out
jmp
mov
sub
xor
mov
push
ror
mov
mov
mov
nop
sub
jl
xor
int
lcall
or
arpl
or
jp
xchg
ljmp
lahf
push
popf
mov
scas
jne
xor
out
dec
xor
xor
mov
and
mov
add
out
and
inc
mov
push
dec
addr16
mov
inc
insl
or
stos
pop
sbb
fsubrl
add
sbb
sti
sub
mov
and
xchg
jle
sub
jbe
test
or
jns
adc
icebp
cld
push
pop
xchg
arpl
jbe
mov
mov
ss
adc
cmp
cmp
inc
popf
jle
mov
cmc
add
xchg
cld
ret
inc
push
aas
adc
js
and
js
cmp
xchg
dec
push
cmp
es
fisttps
insb
mov
in
inc
rolb
dec
repnz
mov
lret
ljmp
sub
sub
cwtl
dec
or
fidivl
in
add
xor
out
sbb
jae
jle
add
test
cmpsb
cmpsb
lods
stos
pusha
mov
mov
stos
clc
dec
sbb
out
lcall
scas
xchg
add
dec
push
adc
inc
cmpsl
stc
idivb
push
mov
mov
inc
push
movb
int3
lcall
push
faddl
imul
pop
mov
mov
inc
daa
les
mov
push
pop
mov
jmp
or
jns
and
popf
mov
repnz
je
scas
ret
add
gs
cli
xor
mov
cs
pop
out
jge
pop
pop
jg
adc
insl
mov
cwtl
ljmp
out
inc
and
int
pop
test
lcall
push
loop
subb
add
pop
in
movsb
lock
push
push
or
popa
jmp
test
dec
and
dec
xchg
shlb
test
cmpsl
xor
repnz
jmp
pop
lahf
shll
jo
lret
and
push
lock
cmp
imul
cs
inc
nop
push
aas
mov
scas
loope
jmp
push
cmp
cmpsb
adc
push
cmc
loopne
pop
inc
mov
add
les
xor
repnz
sbbb
inc
jl
or
lods
fistl
mov
mov
out
and
mov
cmp
push
clc
xor
push
add
dec
xchg
loopne
aas
fldenv
mov
add
mov
jno
stos
push
test
fprem
pop
xor
xorb
pushf
mov
add
cmp
in
iret
pop
jb,pn
mov
cltd
and
pop
ds
rclb
jl
add
mov
ljmp
outsb
dec
je
pop
leave
push
add
dec
and
enter
in
lahf
iret
cli
xchg
pop
mov
icebp
mov
xchg
stos
loope
fucomip
and
in
aas
cs
or
xor
xchg
lcall
or
stos
sbb
cmp
icebp
jl
dec
lret
mov
jb
push
mov
cmc
adc
push
mov
sbb
sbb
mov
adc
sub
into
jbe
dec
adc
mov
ret
mov
gs
xchg
dec
clc
mov
cmp
out
push
pop
mov
xor
inc
enter
jno
mov
out
add
divb
sarb
xchg
ljmp
roll
xchg
or
mov
or
cmpsb
sbb
call
xlat
mov
fcomps
les
xor
xchg
ds
xchg
add
out
xor
mov
mov
and
stc
in
aad
push
push
popf
loopne
shl
daa
mov
fiadds
adc
pop
or
pop
std
sbb
add
out
inc
xchg
fcoml
xor
std
les
xchg
call
add
add
push
clc
fs
lds
push
adc
cmp
mov
out
cltd
rclb
pop
or
jmp
jne
fucom
js
dec
stos
or
sbb
cmpsl
stc
fmull
movsb
aad
fldcw
push
mov
subb
pop
pop
jmp
repz
pop
xor
xorl
xchg
jns
test
push
xchg
outsb
jbe
ret
xor
movsb
pop
in
xchg
mov
adc
sub
mov
aad
dec
cmpsb
aad
shrl
add
cltd
mov
mov
and
mov
sub
ds
pop
add
aam
add
xchg
xchg
int3
mov
inc
and
and
lds
rclb
jmp
mov
sbb
mov
iret
fstp
jmp
mov
jo
mov
or
xchg
into
cmp
xor
or
rorl
movsb
aad
mov
jp
mov
pop
inc
sbb
sti
adc
add
lods
sti
imul
cmp
aaa
pop
cld
or
call
outsl
iret
sahf
subb
add
cltd
xchg
imul
lret
inc
addr16
in
fisubrl
insl
inc
push
jge
filds
ljmp
jns
inc
cld
add
jo
xor
fcmovb
mov
clc
pop
insb
pop
jmp
pop
clc
jo
add
jbe
cmp
lahf
and
sub
mov
orb
pop
sub
ret
jecxz
fsubr
sub
call
mull
aam
dec
fldcw
dec
push
pushf
push
les
or
dec
mov
dec
or
cmp
push
lret
clc
adc
xor
aam
dec
mov
pop
xchg
rclb
inc
inc
arpl
mov
fisttpl
insl
daa
cmc
push
dec
cmp
push
inc
aaa
push
adc
es
ret
in
imull
out
scas
add
arpl
cwtl
cmp
out
xchg
jge
enter
lret
sbb
jecxz
aaa
movsb
mov
jno
xlat
scas
jmp
pop
rol
ror
xchg
outsb
rorl
out
out
jge
or
xchg
aad
psubsw
fnsave
addl
repnz
mov
ret
in
sub
stos
fs
shlb
das
popf
xchg
mov
pop
jbe
mov
into
inc
mov
scas
cmp
scas
arpl
push
imul
mov
ret
jb
pop
and
add
mov
out
ds
mov
cmp
jmp
sbb
sbb
ficompl
dec
leave
xor
lcall
fmull
jmp
mov
cmp
mov
jecxz
xor
dec
sub
stc
dec
sbb
ret
mull
pop
and
in
sbb
jo
pop
ss
mov
dec
lcall
enter
popl
out
pop
pop
shrb
test
outsl
jbe
sub
hlt
mov
sbb
pop
dec
sub
stos
add
fcmovnb
ss
lret
dec
mov
cmp
push
sahf
iret
ljmp
push
and
mov
jne
add
xor
mov
mov
sahf
insl
iret
nop
sub
test
hlt
shlb
fsts
xchg
ss
ljmp
shrl
sbb
pusha
cwtl
push
leave
mov
fmulp
gs
pop
addr16
pusha
xlat
pop
cmp
mov
scas
push
and
or
jge
add
xchg
sub
dec
adc
out
cld
sbb
push
loope
insb
inc
xlat
aas
ja
mov
sub
jle
mov
mov
rcrl
fidivs
sub
fcoms
pop
and
jmp
fwait
adc
mov
loope
mov
jle
shlb
je
fisubrl
and
lret
sbbb
inc
stos
loopne,pt
into
or
sbb
lret
xchg
add
jns
xchg
or
or
dec
inc
add
clc
and
push
test
push
sub
inc
leave
scas
push
repnz
mov
lea
jnp
mov
jge
cwtl
jb
loope
or
pushf
and
mov
and
les
jp
mov
test
pop
in
cmp
outsb
xchg
mov
cld
adc
push
inc
mov
cmp
adc
lea
cmc
jne
sbb
dec
stc
adc
nop
lea
adc
int
in
mov
hlt
sbb
inc
jns
fidivrl
imul
fchs
push
pop
movsb
mov
ret
push
mov
xchg
xor
fistpll
in
ds
adc
jo
mov
in
sbb
out
adc
mov
xor
into
shrl
xorb
hlt
neg
mov
adc
movsl
mov
mov
mov
cltd
inc
sbb
int3
jae
pusha
add
aad
inc
xor
sarb
inc
mov
inc
ds
inc
xchg
mov
ljmp
jno
lahf
mov
dec
fisubl
test
sub
jl
lock
xchg
stc
outsl
jmp
mov
lock
push
in
dec
sub
loopne
testb
jge
popa
arpl
lods
hlt
adc
xchg
mov
mov
mov
mov
add
repz
xorl
lret
jae
cld
notb
mov
aas
mov
push
mov
mov
mov
mov
lret
sbb
test
and
sbb
xchg
sub
int
mov
push
pop
or
in
mov
sbb
or
cmp
jecxz
mov
shll
idivl
push
and
mov
dec
outsl
jno
ja
outsl
fcomi
xchg
xchg
jae
cmp
or
push
sti
bound
xchg
pop
arpl
sahf
dec
and
js
hlt
inc
daa
add
out
pop
popa
cld
addr16
loop
gs
test
mov
ror
sti
cltd
sub
jbe
popa
popl
sbb
mov
enter
test
sub
ljmp
pop
xchg
cmp
sbb
sbb
pushf
mov
loope
push
sbb
mov
xchg
xchg
cmpsl
inc
sti
xchg
lret
and
or
out
int
lods
sbb
or
and
pop
pop
mov
mov
out
in
xlat
loopne
adc
pusha
cmc
rorb
jae
dec
pop
int3
push
mov
cltd
das
clc
mov
movsb
pop
outsb
sub
ret
je
adc
jno
and
mov
daa
idivl
jge
arpl
stos
or
cmpsl
or
or
jg
mov
sbbb
fcmovnu
xchg
sbb
insl
je
imul
sub
mov
fwait
and
mov
pop
inc
fsubr
adc
js
loope
xor
cmp
insb
mov
xchg
mov
mov
jmp
outsl
dec
cmc
lods
push
push
fldenv
gs
aas
sbb
cmc
ljmp
enter
mov
leave
mov
mov
fbld
and
adc
xchg
jne
into
sub
lea
cwtl
push
repz
les
or
cltd
aaa
lock
aaa
mov
adc
push
add
push
xchg
out
add
xchg
test
cmpsb
call
mov
popf
add
imul
cwtl
adcb
mov
mov
push
jno
sahf
and
lods
shl
dec
mov
sbb
push
lea
jle
int3
aaa
xor
mov
pushf
addr16
inc
sub
in
jmp
push
adc
jns
jp
cld
mov
cmp
mov
push
and
jecxz
mov
adc
and
push
pop
mov
fwait
xchg
jno
fwait
add
roll
cmpsl
cmp
test
ret
stos
add
sub
pop
dec
rclb
mov
int
sub
sbb
es
fisttpl
and
push
stos
adc
outsl
es
clc
mov
into
movsl
out
sahf
adc
add
inc
in
and
dec
pop
ret
mov
jae
and
outsb
imul
cmp
xor
repnz
push
xor
adc
test
jae
testl
xor
ror
fisttpl
loopne
push
or
push
xchg
mov
lea
in
and
in
lock
and
xchg
mov
push
inc
dec
xlat
or
adc
inc
je
xchg
es
mov
repnz
cld
shrl
dec
das
loop
push
cmp
lea
test
jmp
jmp
xorl
jnp
mov
fimuls
iret
and
pop
sarl
adc
call
and
lahf
mov
inc
jnp
or
xchg
dec
ret
push
and
add
sbb
es
dec
mov
push
pop
outsl
hlt
add
lds
sub
adc
aas
mov
add
mov
xor
push
jg
mov
sub
out
aad
pop
out
adc
sub
outsb
loope
pop
cmpsb
insl
pop
lods
pop
data16
xchg
push
ret
out
add
rorl
mov
jae
popl
push
frstor
or
sub
dec
out
or
push
or
sbb
pop
xor
mov
and
outsl
mov
inc
and
stos
push
ja
outsl
dec
bound
lret
jge
fimuls
and
repnz
int3
iret
aad
mov
loope
xchg
pop
movb
fcmove
add
jge
mov
scas
dec
mov
in
jmp
mov
in
inc
in
sub
jnp
lock
mov
xor
mov
mov
xchg
push
jmp
iret
xchg
and
cmpsl
pop
pusha
addr16
hlt
sub
pop
sbb
push
inc
push
lock
sbb
mov
pop
or
mov
push
sbb
and
repz
push
pushf
test
out
dec
mov
xchg
divb
sub
cli
cmp
cwtl
ficompl
pop
ds
dec
movl
lahf
lods
sub
push
and
push
push
std
pop
pop
dec
leave
pop
ds
ljmp
sub
mov
add
in
add
mov
lret
mov
mov
adc
pushf
xlat
scas
fildll
fdivrl
pop
push
movsl
sub
xor
gs
jne
mov
jbe
sbb
pop
es
add
cmp
xchg
xchg
xor
mov
mov
stc
jns
es
mov
ficoms
or
push
adc
push
imull
je
push
dec
fnstcw
lret
cli
jmp
outsl
jae
out
push
out
cmp
xchg
fwait
mov
or
dec
fimull
popf
loope
ss
icebp
bound
roll
insl
je
or
add
lds
adc
inc
xor
in
and
out
pop
inc
xchg
call
nop
pop
addr16
hlt
pop
dec
decl
out
lcall
or
sbb
test
outsl
stos
test
orb
shrl
cld
xor
and
mov
lret
scas
repz
hlt
sti
nop
or
sub
movaps
xchg
cmpsl
mov
add
adc
sti
cmpsl
test
into
ja
pop
add
subb
xchg
sbb
ret
inc
jns
ret
push
arpl
jo
test
sbb
enter
push
jle
sub
sub
stos
repz
mov
fbstp
sub
sub
mov
andl
cmc
inc
lret
jae
bound
and
and
sti
push
int3
rcl
sub
fldt
sbb
cld
out
sub
hlt
inc
push
mov
mov
into
addl
pop
and
push
int3
mov
clc
das
jae
call
sub
shrl
xchg
sub
in
xchg
sub
xor
jbe
mov
mov
push
imul
jp
add
fistpl
jns
cmp
cmp
mov
xchg
xchg
lods
jbe
push
aam
dec
pop
or
xlat
add
cmc
xchg
adc
fnstenv
icebp
clc
sbb
je
pop
pop
push
pop
in
xor
sahf
jmp
cld
add
xor
repz
fistpll
repz
add
xor
loopne
ret
push
insl
push
cs
push
sbb
add
cli
mov
push
cli
outsl
repnz
pop
mov
lock
cld
or
rolb
aam
inc
mov
mov
jae
movsb
dec
sahf
dec
out
push
ds
jg
mov
cmp
pushf
push
jmp
fldt
dec
mov
roll
pop
xchg
imul
loop
push
mov
imul
mov
dec
add
jae
test
fs
push
dec
int
pop
loop
mov
or
inc
adcl
leave
daa
lods
xorb
movsl
rorb
xchg
mov
sbb
jbe
sbb
hlt
push
and
inc
mov
leave
fbstp
sarl
xchg
into
jne
mov
aad
lods
mov
repnz
popa
ljmp
add
xor
roll
pop
or
dec
jecxz
adc
or
lahf
inc
fsubr
mov
lret
add
xor
pop
mov
and
xor
push
in
test
jge
jmp
dec
sbb
adcb
and
xor
outsb
mov
adc
outsb
sub
cmp
lret
inc
test
int
inc
in
daa
sub
mov
cmp
aam
mov
out
pop
stos
repnz
mov
xchg
in
insl
sti
push
out
xor
icebp
dec
adc
lret
or
jmp
cs
inc
ret
cmpsl
int
dec
movsl
ljmp
das
les
pop
xor
inc
xor
rclb
sti
or
or
xor
mov
and
xchg
and
repnz
push
call
leave
mov
insb
lods
sbb
lock
les
push
adc
bound
mov
pop
push
mov
fs
pop
jp,pn
addb
popf
xor
mov
inc
or
fmuls
inc
push
mov
pop
andl
es
nop
outsl
push
mulps
pop
test
cmp
dec
push
cmpsl
xchg
xor
loopne
fildl
sbb
inc
fcomp
cmpsl
pop
inc
in
lcall
mov
movsb
sub
inc
or
pop
or
sbb
hlt
into
sbb
addr16
test
ja
test
dec
enter
sbb
ret
push
popa
xchg
cmpsl
cmp
push
iret
addb
in
push
adc
and
inc
jmp
inc
stos
mov
cmp
xchg
insl
mov
adc
cmp
mov
or
orl
and
add
dec
jnp
cmp
test
enter
mov
popa
dec
ss
jecxz
jno
mov
pop
sti
xchg
cmp
xchg
pop
push
xor
das
filds
push
add
jbe
mov
add
cwtl
sbb
adc
test
push
push
and
arpl
jnp
dec
es
mov
jge
cwtl
test
mov
dec
or
or
or
add
ret
sub
add
int
in
or
or
andb
gs
xchg
mov
scas
test
adc
ds
insb
and
xchg
xor
data16
xchg
pop
mov
cmpsl
xor
inc
mov
pop
fucom
inc
adc
xor
into
dec
mov
adc
hlt
dec
mov
scas
adc
rolb
dec
cwtl
in
popa
rolb
sub
loopne
out
mov
mov
popa
and
add
dec
mov
leave
push
pop
mov
jnp
mov
into
xor
jb
cmp
nop
mov
adc
icebp
lcall
sti
and
out
movq
imul
cmc
je
imulb
xor
cmp
dec
cmp
dec
test
mov
testb
xchg
loope
or
lods
sbb
mov
sti
das
popf
xor
push
xor
fs
push
bound
popa
xchg
andb
ret
cli
cmp
mov
add
jle
lret
insb
sar
mov
dec
push
and
fildl
and
sub
xchg
fldl
xchg
imul
xor
or
jno
es
jmp
sbb
out
bound
cwtl
jb
xchg
jno
test
inc
or
aas
push
arpl
in
xorb
sbb
xchg
and
pop
int3
insb
pop
stc
shlb
cmp
or
sti
and
push
and
inc
insl
jo
arpl
cmpb
adc
and
sbb
or
add
push
jbe
fs
mov
jmp
cmp
jle
cmpsb
push
and
xchg
push
push
fcomp
pop
push
pop
pop
xchg
rorl
cmpsl
mov
outsl
mov
ss
sub
dec
push
add
push
push
and
int
pushf
xor
mov
shll
xchg
dec
and
jge
flds
nop
inc
push
adc
jle
mov
in
xlat
lea
pop
cmpsb
lahf
add
xor
in
ljmp
and
imul
das
fwait
std
adc
leave
inc
movsl
jae
addb
je
inc
movsl
sbb
loop
fcomp
dec
add
adcb
ss
fistpll
mov
or
dec
hlt
scas
dec
je
ret
test
xor
lret
push
imul
jmp
cmpsb
mov
scas
aam
cli
push
or
mov
and
ret
adc
xlat
cwtl
popa
pop
ja
mov
inc
pop
push
jmp
dec
push
loope
push
or
and
adc
popf
xchg
adc
fsubrp
xchg
push
gs
out
stos
mov
cmp
roll
mov
xor
dec
mov
mov
int3
add
loopne
sub
js
mov
add
inc
pop
loope
push
and
push
arpl
leave
add
popa
clc
aad
push
inc
aad
outsl
and
or
add
bound
fisubrl
add
filds
int
shlb
dec
cmp
cmp
in
push
sub
adc
pushw
outsb
repz
jo
data16
scas
mov
outsb
in
lret
ljmp
ja
popa
xchg
adc
add
pop
inc
mov
xchg
fdivrs
push
repz
gs
jmp
and
call
es
int3
in
scas
stc
addb
data16
pushf
sub
fisubs
cmp
lea
jecxz
repnz
dec
int
jo
std
fwait
mov
loopne
fadd
add
pop
dec
popa
imul
test
fistps
outsl
rcrl
inc
mov
sbb
test
cmp
lcall
insb
bound
pushl
xlat
mov
fstps
int3
push
push
test
xor
jbe
cmpb
mov
sbb
jae
add
popf
adc
bound
add
stos
inc
jecxz
outsb
xor
or
and
out
dec
cmc
sub
jp
jg
jns
pop
test
jecxz
into
addr16
dec
push
pop
add
pop
rcll
pop
std
test
mov
xchg
insb
sub
sub
ret
loope
stos
push
or
mov
mov
daa
sub
aaa
pop
test
les
stos
lcall
push
bound
iret
je
xchg
sahf
insb
enter
rclb
xchg
les
xor
cmp
sub
mov
sbb
dec
lret
pop
mov
inc
mov
dec
jmp
or
jns
mov
cmp
andl
lock
inc
jl
push
sub
push
xlat
sahf
scas
push
xchg
push
sbb
jns,pt
xchg
or
or
int3
or
stos
cltd
dec
or
xchg
js
in
lret
sti
inc
cmc
jb
idivb
mov
mov
jp
sub
aad
sub
mov
lea
pop
loope
popf
mov
shl
fistpll
cltd
mov
or
mov
and
call
xchg
data16
loope
add
mov
xchg
out
ljmp
push
dec
dec
cmpsb
push
mov
adc
xchg
cmp
and
xchg
xor
jg
bound
lret
enter
mov
sbb
jg
mov
inc
dec
stos
rcr
data16
mov
jnp
cmpsl
add
cmpsl
mov
cmpsb
int
inc
out
mov
mov
lods
dec
mov
push
cmc
inc
push
addl
addb
add
sub
mov
je
push
loopne
popa
and
add
mov
dec
xchg
mov
icebp
subl
iret
sbb
mov
loope
add
push
lea
cmp
push
ss
test
popa
sub
icebp
addr16
or
adc
fs
or
inc
add
aaa
mov
adc
mov
mov
daa
hlt
jmp
mov
pop
xchg
push
sbbl
movsl
pop
jbe
add
inc
aam
leave
jle
pusha
mov
mov
xor
daa
fists
pop
dec
add
enter
push
or
pushf
inc
cmp
jbe
mov
scas
mov
data16
inc
lahf
fadds
inc
or
mov
push
xorl
ja
sbbb
sub
cltd
not
cld
dec
lahf
inc
loop
or
dec
jns
sbb
std
aad
xor
cmp
divl
pop
push
test
cltd
out
push
fldt
dec
shll
and
ss
inc
filds
repnz
push
mov
mov
add
out
push
xor
mov
and
aaa
pop
mov
ja
dec
push
lret
cmp
or
sub
jnp
loope
lfs
cmpsb
loopne
add
das
in
mov
pop
sbb
pop
jge
push
mov
test
outsb
into
dec
mov
adc
mov
pop
out
bound
adc
int3
in
jge
and
dec
and
inc
in
push
pop
inc
int
jne
nop
or
add
icebp
sahf
dec
pop
jo
mov
pop
mov
push
mov
xchg
cmp
mov
xor
mov
test
int
dec
mov
psubq
dec
cmp
xchg
fistl
lcall
cmpsl
fwait
and
xchg
std
adc
inc
mov
cltd
push
sbb
xchg
xor
in
inc
or
popf
sti
push
xchg
out
jo
or
mov
movsb
in
popf
jo
shl
and
loopne
cmp
mov
jge
add
fiaddl
cmp
inc
repz
aas
push
stos
mov
adcl
leave
sbb
test
pop
and
out
call
pop
clc
outsl
sbb
test
dec
push
push
inc
push
lods
insl
mov
and
enter
bound
lahf
call
sub
mov
shlb
pusha
sub
adc
cmp
mov
lds
push
inc
jo
inc
mov
mov
popa
outsb
push
sbb
and
and
lea
push
out
sbbl
gs
mov
mov
sbb
pop
xor
shll
dec
popf
cld
imul
outsl
mov
scas
xchg
aaa
and
dec
int3
xor
sbbb
enter
sbb
cli
loope
or
mov
jg
ljmp
cmp
mov
or
jmp
mov
or
subl
push
cltd
or
jg
xchg
pop
mov
cs
in
mov
ret
push
mov
inc
cli
push
aam
and
jge
popa
outsb
sbbb
mov
inc
sbb
int
adc
insl
dec
jno
or
pushf
jecxz
adc
push
add
push
shrl
mov
repz
mov
pop
xchg
xor
and
mov
adc
std
mov
or
xchg
rorl
shlb
push
mov
scas
push
xchg
scas
cmp
ror
pop
adc
imul
shll
adc
add
and
inc
sbb
pop
jmp
xchg
gs
mov
in
enter
xchg
and
xchg
or
push
mov
xor
or
test
xor
fildll
sub
sbb
movl
fldt
test
decl
pop
imul
lods
loopne
sahf
repz
in
lods
xlat
scas
add
fwait
or
dec
push
inc
mov
imull
pushf
mov
in
aaa
xchg
xor
popf
rorb
xchg
js
les
scas
push
jge
cmp
scas
sbb
xor
lret
inc
loope
fsubs
or
mov
xlat
dec
sbb
fsts
das
imul
pop
pop
shlb
xchg
enter
je
clc
aam
push
jbe
ljmp
mov
mov
sub
xor
movb
outsl
aaa
dec
sub
and
stos
cmp
frstor
pop
adc
xchg
lret
or
mov
inc
or
mov
cmpb
aas
dec
inc
jnp
jg
add
scas
shrb
lods
arpl
sbb
enter
pop
xor
cmp
jle
pop
push
adc
lock
ja
mov
movsb
scas
aaa
pop
ds
cmp
mov
mov
or
test
cmp
int3
sub
mov
cmpsl
fldpi
push
mov
dec
or
inc
adc
inc
shr
fadds
push
mov
pop
push
xor
stos
cwtl
push
out
jl
outsl
pop
mov
scas
sub
adc
adc
adc
mov
cmc
pop
rep
cmp
fnsave
icebp
bound
jne
push
cmp
jle
jae
insl
pusha
sub
pop
jge
pop
dec
fcmovu
cmp
push
std
mov
lods
aaa
dec
cli
iret
dec
dec
sbb
test
dec
jb
push
sbb
test
js
or
je
ret
popf
fdivl
xchg
mov
dec
pop
pop
or
outsb
ficoml
xchg
add
inc
xchg
jnp
or
gs
ds
push
pop
pusha
dec
cs
inc
and
mov
leave
out
pusha
lret
notl
mov
xchg
pop
mov
in
inc
push
subb
call
rcrl
sub
mov
or
adc
enter
nop
lcall
add
das
mov
ret
push
dec
mov
xchg
mov
push
dec
call
data16
xchg
cmc
test
sbb
pop
lret
push
loopne
xor
lcall
or
rclb
add
daa
stos
or
fisubs
sub
mov
test
mov
es
test
mov
inc
xlat
leave
pop
mov
testl
loop
pop
jmp
push
mov
jmp
movb
leave
xor
adc
cld
and
pop
adc
jg
inc
shll
in
aad
iret
inc
adc
pop
mov
push
les
xor
fs
xchg
loopne
test
or
jge
cs
mov
aas
lods
lea
das
add
mov
cmc
and
mov
faddl
cmp
mov
insl
push
inc
stc
sbb
repz
add
aam
add
add
inc
lods
cld
cmpsb
push
imul
push
scas
xor
pop
jno
mov
sub
mov
add
test
and
std
add
sbb
fistpll
bswap
mov
pop
pop
std
cmpsb
into
fwait
outsb
into
cmpsb
push
mov
cmpsl
aam
arpl
cmp
pop
inc
jbe
fstpl
std
lock
gs
sti
push
popf
and
rorb
pop
rcll
es
adc
popa
aam
pop
mov
repnz
test
test
or
adc
dec
jnp
fdivrl
add
inc
aad
fwait
add
xchg
add
addr16
lret
add
mov
cmpsl
xchg
jge
dec
mov
lds
xor
and
mov
xor
stc
iret
pushf
fcmovu
pop
scas
and
mov
shl
jbe
stos
sarb
mov
xchg
dec
pop
pop
sbb
pop
xchg
cmp
cltd
pop
sub
xor
and
stos
xor
shrb
daa
mov
add
push
push
and
cmpsb
cmp
sub
aaa
pop
mov
push
xchg
orl
xor
dec
jne
ficoms
cld
int
and
enter
dec
stc
pop
nop
sbb
lcall
push
mov
pop
rcr
xchg
jb
pop
fisubrl
shl
vpmacssww
std
jns
inc
loope
sbb
xlat
outsb
jle
ds
testb
push
adcl
inc
stos
sub
dec
dec
pop
out
mov
xchg
mov
es
lahf
or
scas
mov
data16
cmp
call
or
fdivrs
aas
pop
addr16
dec
jge
push
popa
push
popa
outsb
sahf
jge
cmpsb
cmp
insb
mov
out
insl
mov
dec
cmp
dec
pop
push
adc
fiaddl
mov
es
repz
adc
cld
sti
out
stos
xchg
pop
and
les
stc
and
out
out
rcrl
in
pop
push
stc
adc
js
in
mov
mov
out
fsubl
xchg
push
out
and
daa
faddl
sbb
aaa
call
test
jb
jecxz
stc
cmpsl
jl
stos
pop
jp
aam
mov
pop
adc
cwtl
movsl
xchg
add
ja
pop
xchg
nop
xchg
push
jnp
cs
pop
lcall
mov
cmp
sbb
test
cmp
sbb
lds
xor
fnsave
cmp
std
js
dec
dec
mov
js
je
mov
inc
mov
arpl
ret
clc
add
sub
in
leave
jne,pt
imul
fwait
pcmpgtb
repz
add
fstpl
rcpps
xor
mov
lret
jl
xor
push
stos
popa
jl
xchg
in
popf
mov
movsl
jns
aad
fistps
lcall
imul
lea
outsb
lcall
push
jbe
sub
cmp
cmp
mov
dec
or
lahf
jns
mul
jl
inc
cmp
dec
mov
or
push
sub
add
lret
lds
inc
adc
scas
dec
fiadds
dec
insb
nop
or
push
jmp
in
mov
xor
and
test
fsubrp
testl
jbe
pop
ficoml
iret
mov
adc
test
cld
stc
cmp
mov
fsubr
or
jbe
insl
mov
dec
int3
mov
shl
and
pop
and
rorb
mov
push
or
jge
xchg
in
sbb
cwtl
mov
aam
testl
lods
lret
and
or
xchg
scas
or
lret
popl
arpl
jne
push
loopne
std
cwtl
and
cmpsl
xor
pop
cld
push
addl
fdivrl
in
and
stos
popa
out
fs
ds
xor
iret
pop
jb
outsb
imul
push
fsubrl
fxch
adc
mov
mov
sbb
scas
not
add
addr16
movsb
mov
insl
fstpt
ljmp
xor
or
setbe
lret
arpl
scas
adc
add
jecxz
jne
std
adc
sub
jg
shll
sbb
sub
je
shrb
adc
mov
jo
jg
cmpb
mov
push
push
dec
cmp
in
fstpt
pop
scas
out
arpl
fbld
inc
xor
movb
or
push
sbb
push
imul
cli
and
sub
jge
mov
lahf
xlat
lret
stc
std
ret
or
cmp
lgs
add
sbb
pop
or
inc
fisttpl
out
sub
mov
rcl
iret
jp
jb
push
xor
idivb
popa
std
xchg
mov
xchg
push
xchg
mov
xchg
or
mov
std
cmpsb
aam
fidivl
cmp
and
loopne
add
push
pop
arpl
inc
fsubl
and
dec
pop
adc
push
mulb
inc
cmp
push
gs
sub
push
out
inc
push
into
cmp
adc
mov
dec
mov
and
arpl
dec
stc
xlat
daa
test
push
cmp
mov
loop
pop
inc
shll
mov
push
xchg
mov
sub
enter
in
data16
std
cmp
cmp
cmp
and
and
xchg
dec
lock
out
lret
cmpsl
add
sarb
push
pop
sub
mov
mov
pop
and
outsb
pop
icebp
pusha
fdivrl
jno
mov
inc
or
cli
ja
xchg
out
pusha
xor
in
and
andl
in
push
roll
lock
scas
outsb
and
and
iret
mov
ret
loop
insb
and
ret
mov
test
sbb
fimull
neg
pop
cmpsl
es
ret
inc
out
pop
jecxz
sbb
mov
sbb
push
test
push
add
rcrl
mov
xchg
sti
cmp
std
js
jno
mov
mul
clc
sti
js
cmp
adc
jbe
mov
and
arpl
jecxz
mov
lcall
xor
loop
loop
xchg
cmp
xor
lock
push
adc
mov
leave
cld
mov
sub
loopne
imul
ja
call
mov
push
repz
je
inc
je
cld
sbb
rclb
outsl
fldt
sbb
xor
lret
mov
push
sub
and
out
fcmovb
es
xor
xor
sbb
cmc
xlat
inc
test
mov
mov
mov
adc
jbe
push
mov
or
cmp
jo
xor
imul
fcoms
jge
call
lret
and
xlat
mov
mov
jl
sbb
psllq
icebp
hlt
xchg
jno
scas
jl
outsl
out
enter
add
cmp
scas
push
sbb
jecxz
push
push
in
pop
mov
xor
pop
aad
scas
mov
push
push
sub
ret
cwtl
push
insl
and
inc
add
push
lds
pop
ja
cmpsl
mov
aad
mov
cltd
push
mov
mov
cli
pop
movsb
mov
jbe
mov
xchg
mov
push
in
leave
inc
ljmp
xchg
and
xchg
dec
les
loopne
sub
dec
jl
imul
dec
std
adc
stc
les
inc
rorl
add
jmp
jecxz
jbe
clc
cmpsb
aam
cmp
mov
imul
inc
sahf
iret
xchg
fdivrs
gs
and
cmp
push
mov
shl
pushf
push
ljmp
outsb
repz
lods
test
and
mov
xchg
out
xlat
loop
add
lods
xor
inc
inc
pop
xchg
out
add
mov
sbb
xchg
xor
imul
test
sub
lret
int3
pop
sbb
into
cmp
mov
icebp
div
cli
hlt
out
repz
cmp
cmp
test
pop
mov
inc
mov
and
inc
adc
popl
es
roll
jne
xchg
push
fisubrs
xor
loope
adc
mov
sbb
jg
rorb
xor
out
and
fwait
xchg
icebp
add
xor
mov
xor
cmp
ret
bound
fdivrl
outsl
in
shrb
adc
dec
adc
inc
js
sub
repnz
cltd
rcrb
push
xorl
pop
insb
jne
cmpsb
push
std
xor
inc
rorl
jae
sbbl
adc
movsb
scas
fs
push
jp
jo
sub
xchg
dec
jmp
scas
xor
fcomi
xchg
test
push
mov
addr16
inc
data16
fsubrs
popf
inc
adc
lret
inc
lea
sub
and
int
dec
cs
lock
lds
rcll
sbb
cmpsb
in
xchg
push
inc
stos
outsl
mov
outsb
out
shr
mov
push
jp
fsubs
sbb
repnz
fsubrs
lock
pop
or
and
hlt
jns
lahf
jp
lahf
push
or
or
mov
mov
lods
sahf
sbb
add
mov
xchg
mov
aam
insb
mov
pop
iret
and
xor
addr16
negb
or
aas
shlb
jmp
out
xlat
lret
sub
cmp
pop
enter
aaa
icebp
imul
xchg
or
mov
je
hlt
dec
in
mov
or
cmp
inc
cltd
ror
data16
gs
dec
ret
sub
in
pop
mov
movsb
andl
jle
ja
cli
dec
ja
push
or
mov
sbb
rdtsc
mov
cmpsb
pop
in
fcmovb
jno
cmpsb
xlat
dec
adc
mov
out
push
outsl
int
pushf
fcmovu
mov
inc
pop
adc
fwait
ror
in
jl
cmpsb
or
push
sub
pop
mov
mov
aam
mov
jg
mov
test
xor
cli
mov
pop
dec
mov
pushf
cmp
iret
mov
sub
push
pop
into
stc
dec
repnz
out
dec
add
jle
std
jb
aad
mov
std
add
aad
leave
mov
int
sub
dec
inc
icebp
call
xchg
dec
inc
repz
cmp
imul
fidivl
test
xor
adc
adc
mov
xchg
sbb
insb
mov
and
lcall
adc
je
jecxz
les
push
xor
imul
and
jne
xor
add
js
dec
je
pop
mov
jge
cmc
shlb
adc
mov
ret
loopne
jmp
sub
shl
cmp
pop
adc
mov
add
mov
inc
pop
sub
xor
fnsave
fidivl
dec
mov
insl
inc
test
mov
test
sbbb
int3
aad
pop
jg
jecxz
pop
aam
movsl
cli
add
ljmp
jg
inc
aaa
sbb
mov
sahf
lods
xchg
test
dec
std
xchg
cmp
or
xor
mov
insb
lock
adc
xor
pop
cld
adc
gs
push
adc
and
xlat
pop
and
daa
shlb
cmc
dec
stos
sbb
movsb
mov
pop
push
lcall
pop
adc
clc
xchg
repz
popf
lods
outsl
jle
shlb
pushl
enter
cld
xchg
mov
or
add
mov
test
andb
stos
bound
add
ss
mov
fwait
dec
enter
mul
js
stos
cmp
stos
inc
lahf
sahf
or
pop
jge
sub
pusha
dec
fdivrs
jp
cmp
lock
repz
jns
xchg
iret
adc
mov
inc
inc
dec
test
imul
or
xor
inc
gs
sti
push
aam
sub
loop
lret
add
xchg
mov
leave
jp
mov
adcl
add
mov
inc
mov
test
call
inc
xchg
or
or
lock
addr16
mov
push
lcall
xchg
insb
push
mov
mov
jbe
pop
roll
repnz
xchg
push
dec
fwait
mov
pop
add
xchg
iret
mov
or
out
pop
jle
call
test
xchg
pop
cli
jne
in
cli
xchg
std
or
mov
cmp
mov
int3
incb
fwait
mov
pushf
push
and
shl
or
xchg
cltd
dec
ljmp
dec
sbb
sbb
mov
cmp
hlt
in
adc
adc
fs
mov
and
pushf
loope
lock
sbb
xor
ror
es
add
sub
and
fdivs
loope
mov
mov
fdivs
pop
pop
xorl
adc
test
jecxz
test
icebp
mov
scas
movsl
cmp
xchg
notb
pop
mov
sahf
test
sahf
cld
shll
outsb
cmp
lods
push
and
mov
fdiv
push
dec
jnp
jnp
mov
mov
jno
add
fnsave
test
push
inc
fmull
xor
push
imul
mov
or
imul
scas
jb
push
lock
pop
sbb
cli
push
ret
call
test
movsb
xlat
sbbl
mov
xchg
aad
bound
imul
dec
lahf
sbb
mov
sub
rorl
loop
mov
pusha
popa
sbb
sahf
pop
jge
data16
rcr
add
sti
test
data16
mov
pushf
stc
mov
js
jmp
adc
lods
adc
xor
sub
or
xchg
jne
mov
movsl
clc
mov
loopne
js
xchg
jg
ljmp
cltd
xor
jnp
ljmp
push
mov
cmp
shlb
insl
jae
cld
js
iret
pop
out
mov
jl
xor
or
mov
out
in
incl
test
inc
push
insb
inc
add
jne
push
clc
lds
or
mov
cli
aas
cmp
mov
push
jbe
xor
loop
mov
lret
mov
pushf
or
xchg
inc
cltd
push
jecxz
mov
sbb
js
imul
xlat
push
pop
aas
or
jl
mov
ret
ljmp
sub
insb
xchg
imul
fcmovnb
pop
sbb
mov
xorb
xchg
into
mov
pop
pop
out
add
push
cmp
sti
addl
add
test
roll
jg
sub
lods
icebp
in
push
repz
mov
test
iret
inc
ss
push
mov
test
popf
lcall
mov
icebp
dec
xchg
cmc
pusha
xor
xchg
daa
icebp
mov
repz
push
stos
lock
sbb
stc
pop
pop
xor
notb
sbb
jb
sub
push
ret
shll
clc
test
stc
sahf
pop
loopne
fcoml
and
idiv
int
sub
out
shrb
and
aad
sub
arpl
icebp
mov
loopne
push
mov
fisttps
or
dec
inc
jl
es
add
aas
and
sub
out
mov
int3
xchg
in
mov
ja
insb
sub
bound
xor
and
popa
outsl
and
loop
cmp
out
dec
and
call
shll
mov
mov
mov
ret
sbb
xchg
pusha
pop
hlt
flds
dec
mov
iret
js
fwait
pop
adc
fcomps
mov
xchg
clc
push
and
mov
scas
xchg
mov
ss
xchg
cmp
stc
sar
sub
mov
mov
and
jne
popf
outsl
shlb
and
cmp
bound
dec
mov
sbb
cmp
xchg
pop
cmp
mov
sub
cmp
orl
aas
test
out
aad
out
lcall
int3
cmp
xor
pop
sbb
je
sti
fcoml
mov
sub
jecxz,pn
aad
hlt
test
mov
shll
sbb
enter
mov
into
ret
pop
call
icebp
sti
imul
mov
std
lds
mov
insb
xchg
dec
scas
and
movsl
jb
and
mov
daa
add
push
jmp
jmp
in
inc
jmp
or
push
stc
shrb
sub
fs
stos
dec
divl
icebp
jb
lds
shl
leave
push
pusha
push
fnstcw
iret
sbb
jg
sarb
mov
fisubl
adc
sbb
jb
mov
dec
mov
and
dec
sub
hlt
mov
jae
inc
adc
int3
pushf
cltd
mov
aaa
jg
sub
shlb
dec
jmp
pop
incl
movsl
xchg
dec
les
and
rcr
ret
stos
push
xor
push
push
or
jle
mov
push
bound
call
dec
and
fldcw
adc
xchg
mov
push
std
push
pop
jae
xchg
push
repz
cmp
ljmp
pop
test
mov
scas
loop
push
mov
icebp
sub
loopne
jle
and
jne
shll
sahf
pop
aad
adc
pusha
outsb
lock
add
xor
and
ret
repz
fisttps
sbb
push
cmpsb
jmp
test
and
push
data16
adc
stos
xchg
push
xchg
xchg
pushf
pop
fwait
or
xor
ds
mov
call
subl
stos
cmpsb
push
mov
js
add
insb
mov
pop
je
jg
jp
or
iret
addr16
push
mov
mov
xchg
mov
mov
mov
shl
jp
mov
pop
iret
outsl
and
mov
add
ss
les
ljmp
pop
iret
cwtl
insl
ret
mov
mov
mov
je
mov
ds
cmpsl
push
push
jb
mov
adc
push
aam
sbb
popf
cltd
lahf
ss
push
dec
mov
sub
xlat
mov
cmp
sbb
mov
sub
or
inc
and
test
mov
stos
test
xchg
andl
pop
push
dec
inc
movsb
mov
pop
aam
jo
cmp
in
daa
shll
add
push
adc
and
xchg
inc
nop
es
or
push
mov
test
push
aad
fnstsw
sub
mov
xchg
adc
imul
and
scas
out
divl
jbe
xor
mov
sub
in
fwait
pop
movsb
lods
jp
dec
jmp
cld
gs
test
xor
cmp
cltd
inc
jmp
mov
das
rorl
fcomps
mov
lret
jo
add
popa
out
loopne
fsubp
adc
addb
stos
pushf
pop
movsl
mov
inc
je
in
or
inc
inc
jl
xchg
mov
sbb
mov
adc
je
fimull
lods
and
pop
or
aam
cmp
cmpsl
loope
or
dec
and
pop
adc
ljmp
sbb
add
xor
push
in
jb
xchg
aas
clc
fdivrl
xchg
push
lds
and
adc
movsl
dec
adc
leave
arpl
mov
xor
rclb
lcall
pop
add
shrb
lret
pop
fdivr
jge
mov
sti
mov
scas
rorb
jg
mov
cs
lods
sar
nop
scas
xchg
adc
adc
or
add
pop
jbe
clc
rclb
int
pop
pushl
fcomps
iret
jl
pop
je
adc
and
cmp
mov
push
cmp
xchg
jb
mov
popl
cld
mov
xchg
fwait
js
repnz
daa
hlt
add
add
inc
jb
jnp
gs
xchg
cmp
dec
or
mov
sub
pop
jae
jle
fadd
mov
lea
mov
ds
sbb
lods
mov
mov
jo
push
xor
dec
les
js
int3
sbb
int3
icebp
inc
arpl
test
pop
pop
adc
cli
xchg
scas
into
adc
cmp
daa
xchg
icebp
push
xor
jg
cmp
fisubrl
add
and
lahf
add
fldenv
popf
pmulhw
xor
cmc
fwait
jl
out
add
cmp
dec
pop
shll
mov
mov
iret
cmp
push
jne
push
dec
scas
xchg
push
jecxz
test
xor
int3
movsb
movsb
ficoms
clc
mov
xor
xchg
sbb
sub
xor
ficomps
jae
cwtl
out
jl
xchg
adc
imul
js
pop
cmp
andb
mov
xchg
and
push
test
mov
mov
xchg
repz
mov
mov
shl
fildl
inc
mov
insb
pop
imul
or
jl
lods
jo
ds
pop
mov
push
xorb
in
sar
sbb
pop
cltd
rcr
jb
iret
mov
inc
adc
scas
jecxz
pop
or
stc
xlat
dec
in
addl
scas
pop
rorb
mov
jno
into
push
movsb
lcall
movsl
outsl
xchg
cmpsl
ret
pop
into
fs
jnp
push
dec
outsl
faddl
incb
mov
push
cmp
movsl
jp
sub
or
and
icebp
repz
cltd
cmpsb
insb
ljmp
pop
cmp
xorl
mov
dec
test
lahf
aam
jge
fcmovbe
enter
loope
add
mov
pop
outsl
nop
jp
cmpsl
out
lods
ret
and
mov
mov
ja
stc
arpl
adc
jo
lret
jb
push
clc
enter
jmp
sub
pop
out
lret
push
insl
test
loope
repz
dec
repnz
mov
push
and
shrb
and
push
out
sub
lcall
sub
jae
xchg
enter
mov
xchg
test
jne
mov
aaa
orl
fiadds
out
aad
sub
mov
les
movsl
in
clc
pop
mov
fs
and
es
xor
js
fwait
xchg
sub
popa
pop
jnp
cmp
mov
out
nop
push
jnp
sub
jns
stos
popl
ret
leave
push
mov
out
in
rolb
or
adcb
icebp
jl
sbbb
hlt
fsubl
faddl
hlt
cmp
aas
push
mov
push
inc
mov
ret
stos
or
ret
fmull
xchg
and
mov
push
dec
mov
imul
shr
push
addr16
inc
push
stos
je
mov
enter
xor
jnp
shrb
insb
jo
adc
jne
nop
lcall
cmp
gs
and
stc
or
xchg
jg
sub
ds
imul
mov
mov
xchg
arpl
addb
out
and
xor
or
rcr
dec
inc
add
ljmp
and
test
subb
push
xchg
xadd
xchg
loopne
push
dec
mov
cmp
add
inc
aas
testl
pop
lods
into
mov
roll
cmc
fwait
push
push
stos
push
dec
int3
mov
clc
ds
mov
jne
or
fsub
lahf
or
int3
mov
jl
out
stos
test
pop
jo
push
popf
ret
push
add
add
mov
mov
cltd
push
popa
sti
cmp
mov
sbb
cli
ja
fs
test
xorb
cs
jmp
orl
stc
sbb
inc
add
mov
mov
push
jo
int3
outsb
sar
dec
ja
push
dec
int3
pop
std
push
xchg
sbb
push
in
xchg
jmp
pop
clc
test
cmp
push
xlat
mov
add
dec
ljmp
repz
jl
pop
pop
scas
mov
push
mov
adc
out
mov
loop
out
repnz
jno
mov
adc
jmp
and
je
fwait
xchg
aaa
push
push
sbb
test
cld
iret
notb
test
jmp
cmp
inc
js
dec
inc
insl
mov
add
stc
xor
jp
push
mov
lods
pop
push
sub
pusha
stc
mov
hlt
cmc
xor
push
xor
xchg
jno
xchg
je
sbb
mov
pop
xchg
out
adc
xor
jb
call
int3
pop
lods
dec
add
pusha
imul
shl
mov
jg
or
add
push
lock
push
xor
icebp
lds
std
push
std
fimull
test
in
ret
and
adc
dec
fisubs
stos
inc
movsb
lahf
inc
jbe
js
push
add
dec
xchg
int
mov
adc
fsts
cmp
stos
fs
popf
es
mov
fildl
test
adc
scas
loopne
fcoms
aad
mov
hlt
pop
adc
sbb
imul
leave
aam
sub
inc
inc
fld1
imul
in
mov
or
jmp
adc
enter
test
xor
shrb
and
popf
shl
cli
cmp
pop
inc
jmp
scas
icebp
fisubs
or
insb
fwait
mov
and
xlat
lock
mov
xchg
pop
mov
jnp
pushf
xor
xchg
push
filds
pop
shll
push
andl
cmp
xor
and
mov
bound
sbb
dec
mov
inc
leave
fldl
add
repz
mov
pop
lahf
add
and
lea
push
stos
xchg
movsb
push
imul
jecxz
jne
shlb
dec
xorl
jle
in
leave
icebp
sbb
dec
mov
roll
ret
sti
or
cmp
jl
movsl
dec
mul
lcall
pop
loop
xchg
popa
lcall
pop
sub
xchg
push
sub
icebp
jbe
inc
cld
repz
test
sub
mov
mov
lahf
nop
sbb
cltd
in
mov
add
out
out
xlat
add
or
push
xchg
mov
decb
adc
jp
adc
mov
mov
imul
lcall
stos
movsb
xlat
sub
les
test
mov
xchg
xor
fcoms
loope
xor
add
ja
stos
mov
loope
loop
iret
jmp
ljmp
je
mov
enter
insl
movsl
jmp
push
ja
mov
mov
je
js
movsb
pop
add
imul
bound
jnp
mov
cmpl
in
fdivs
jno
repz
and
divb
lods
imul
ss
mov
pop
es
out
call
enter
pusha
mov
mov
rclb
sarb
ret
out
aam
sbb
movsl
mov
fwait
mov
nop
sub
cmp
into
and
test
aam
pop
adc
jg
push
push
push
adc
cmpb
cwtl
jl
mov
mov
jge
push
adc
roll
adc
pushf
fnstenv
cs
jns
xchg
pop
adc
mov
repz
shll
mov
jp
push
movsl
ficomps
cltd
das
sahf
je
data16
mov
push
add
loopne
sbb
mov
in
inc
ret
jl
mov
repz
es
push
add
out
pop
sbb
xor
stos
pusha
test
mov
and
cmp
cmpsl
fiadds
sub
mov
stc
ret
ret
jns
mov
sub
xchg
xchg
push
jle
jp
dec
push
ret
cmp
xchg
outsl
cmpl
xor
adc
inc
add
clc
aam
dec
sti
clc
pop
icebp
mov
mov
add
jb
xor
lret
ret
push
ds
movsl
test
jmp
xchg
adc
std
iret
fs
fldcw
or
shl
xorb
inc
ror
shl
or
cmp
push
jns
dec
pop
mov
cmp
iret
lret
fidivrs
mov
dec
ficompl
add
dec
popf
call
jl
fwait
roll
and
jno
add
sti
pop
sub
addb
outsb
cld
das
rolb
es
fildll
jmp
dec
cmpsl
push
mul
out
inc
subl
loopne
add
lock
mov
call
icebp
sahf
or
and
clc
shr
adc
cld
aas
jp
dec
push
int
je
lds
xchg
and
cmpsb
mov
les
push
or
ret
cmp
subb
mov
clc
stc
scas
jo
push
add
inc
lret
add
pop
cmp
sub
test
outsb
lret
jns
mov
out
idivl
call
dec
jle
test
pop
and
adc
outsl
cmp
cs
mov
imul
int3
mov
incb
outsl
adc
mov
cli
mov
shll
lret
mov
mov
out
push
fsubr
loopne
fchs
sub
inc
cld
mov
jns
inc
sbb
push
dec
push
mov
pop
sub
fdivrp
jno
mov
notl
and
lods
push
fs
movsb
data16
lock
mov
push
dec
movsb
imul
xchg
hlt
cld
lret
sbb
into
aam
shl
dec
imul
js
push
insb
mov
rcrb
jae
jae
std
push
cs
push
bound
out
ret
jle
imul
push
pop
push
xchg
mov
or
fstl
mov
aaa
pushf
in
dec
roll
cli
cmp
test
xor
call
scas
js
mov
mov
cli
pop
cs
xor
mov
inc
loop
popf
incl
jl
sub
xchg
stc
mov
fisubl
push
mov
rorb
fbld
pop
popf
adc
cld
in
and
icebp
lods
pop
sub
fbld
insb
movsl
jge
add
out
pop
cwtl
js
xor
sbb
cltd
push
rcll
imul
in
insb
outsl
mov
ss
outsl
xor
lea
jo
insb
daa
fsub
in
or
and
divb
push
sub
scas
cmp
cmpsb
mov
pushl
dec
shll
in
int3
out
scas
mov
push
shr
cmpsl
dec
jae
jecxz
jno
mov
rcl
mov
dec
mov
mov
inc
jmp
out
mov
ja
adc
test
shlb
cmpsl
dec
test
rolb
es
popa
sub
add
sub
adc
out
cmp
scas
mov
and
mov
mov
femms
sbb
std
fstps
insl
mov
jb
imul
rorb
rclb
shld
fs
sub
dec
dec
fstps
ficoml
rolb
sbb
mov
aaa
mov
das
push
mov
fisubl
in
sbbb
outsb
pop
jge
fsubrp
pop
lods
repz
popf
fldcw
mov
pop
lea
add
fcomp
and
mov
movb
push
xchg
sbb
sbb
push
mov
xchg
sub
push
mov
fnstcw
stos
mov
sub
fwait
in
jmp
adc
out
cmpsl
iret
adc
mov
mov
dec
aam
or
aad
ret
jns
pop
sbb
pop
stc
jne
cmc
push
cwtl
jg
jle
lahf
sbbb
imul
ljmp
leave
mov
and
inc
out
pop
mov
xor
mov
scas
dec
fsub
pop
sbb
movsb
adc
jge
mov
mov
xchg
push
stos
notl
test
xchg
arpl
cmp
xchg
dec
adc
in
push
idivb
dec
mov
add
add
push
cmc
dec
jae
int3
pop
xchg
mov
icebp
loopne
inc
fldcw
push
jp
push
pop
cmp
jb
std
jmp
and
push
scas
adc
jge
aas
incl
inc
push
scas
test
sub
ret
xor
les
mov
loopne
in
stc
pop
sub
sub
sub
std
popa
out
sbb
xchg
testl
jno,pn
push
sub
cs
cmc
jl
lods
lock
mov
jmp
fwait
cmp
lcall
insb
push
bound
movsl
lahf
int3
loop
fnstenv
xchg
cmp
or
les
loopne
xor
push
add
test
enter
test
fdivl
fstl
sbb
es
dec
jmp
cmovg
push
pop
fcmovbe
xor
in
dec
lahf
mov
mov
push
pop
push
les
rcrb
movsl
mov
cltd
nop
jg
f2xm1
and
or
movsl
loop
xchg
stos
aas
adc
fmuls
adcl
repnz
mov
xchg
cmp
push
xor
and
adc
pop
mov
into
cmc
outsb
fcoml
push
aad
jl
or
xlat
jge
pop
aas
mov
lds
mov
jecxz
and
lods
jle
mov
xlat
loope
mov
adc
adc
dec
stos
dec
jno
xchg
xor
pop
mov
push
sub
mov
cmpb
jle
push
cmc
lea
jle
in
lds
jb
sahf
loop
jle
std
push
lds
imul
jb
sbb
push
fidivrs
adc
cmp
fcomi
inc
or
int
dec
test
sub
push
rorl
scas
push
cs
sahf
enter
popf
rorb
les
cltd
push
cmpsl
adcb
add
int3
stc
mov
les
lret
jnp
jp
pop
sbb
mov
push
mov
ret
stos
rolb
sbb
dec
mov
fnsave
mov
sbb
sbb
jp
icebp
mov
jge
ds
sbb
and
hlt
rcr
icebp
push
or
mov
out
xor
mov
and
in
rcll
mov
add
pop
iret
inc
cmpsb
pop
sub
dec
lea
fwait
movsb
push
rorb
insb
data16
sub
add
out
mov
jl
fwait
xlat
jge
pop
adc
fdivl
je
es
ds
sti
inc
sbb
jo
subl
lods
mov
loop
je
xlat
mov
inc
inc
adc
aam
xor
sub
mov
leave
jnp
sti
add
or
lcall
inc
scas
push
sbb
sub
cmp
xchg
jmp
push
jo
jecxz
mov
xchg
out
arpl
fnstsw
fidivrs
xchg
aas
add
inc
mov
push
in
and
jo
adc
xchg
les
fsubrs
and
icebp
pusha
add
jl
mov
or
sbb
ret
push
lods
sub
outsb
pushl
loopne
mov
jg
inc
pushf
adc
mov
jmp
lock
push
popf
push
jle
testb
xchg
dec
ja
mov
leave
jge
push
push
sahf
loope
loopne
gs
or
jnp
fdivrp
outsl
fwait
mov
mov
fsubs
int3
mov
or
negb
iret
mov
adc
jmp
lea
or
aas
dec
cmp
adc
loopne
imulb
addr16
rorb
ror
test
je
adc
cmp
or
notl
adc
mov
daa
sbb
pop
cmp
or
xchg
jmp
outsl
sbb
adc
mov
xchg
xchg
in
imul
pop
push
sbb
xchg
andl
cmp
dec
pusha
push
cmpsb
add
xor
leave
jp
ds
insb
and
inc
out
cmp
ljmp
scas
test
mov
pop
push
jmp
xor
ja
in
cwtl
fisttpl
test
hlt
aaa
mov
and
jmpw
loopne
push
nop
aas
out
mov
mov
call
push
jbe
pop
aam
pop
push
flds
repz
mov
mov
xchg
xorb
out
fmulp
lds
aaa
and
das
jne
lock
and
cs
in
addb
push
pop
out
mov
fnstsw
test
shr
or
or
push
jo
je
jo
scas
or
mov
adc
xor
es
and
adc
ret
ja
ja
fcomi
pop
or
cmp
lret
outsl
aam
jl
xor
decl
push
sub
pushf
push
mov
inc
sahf
pop
out
imul
or
xor
pop
sub
xchg
and
mov
adc
sbb
xchg
and
xchg
mov
jg
xor
pop
mov
xchg
lods
jmp
and
jno
add
shll
cmp
cmp
adc
sbb
jmp
sub
in
add
or
mov
loop
daa
jge
dec
add
jmp
addb
addr16
mov
mov
fidivrl
cmp
inc
dec
leave
mov
lea
mov
sub
stos
pop
daa
jmp
cmp
out
inc
movsb
cld
in
mov
mov
scas
popa
test
loopne
icebp
cmpsl
adc
addl
push
imul
xchg
popf
les
icebp
mov
cmpb
add
adc
sbb
lock
rcrl
add
pop
hlt
push
jns
xchg
sbb
adc
ret
int
cmpsl
xchg
ja
mov
lahf
dec
daa
dec
mov
dec
add
push
or
insl
and
fistl
movsl
mov
inc
cs
pop
iret
sub
jmp
aas
and
mov
sub
out
mov
sbb
loop
sub
push
mov
and
out
cmp
sahf
loopne
xchg
je
ja
jns
dec
orl
sub
gs
in
mulb
lods
mov
pop
sti
nop
int3
shlb
je
sbb
inc
sub
or
mov
inc
xchg
push
shlb
gs
adc
cwtl
or
idivl
mov
adc
mov
and
push
dec
add
dec
shr
inc
repz
push
or
es
push
rorl
cmp
inc
fmul
sbb
sbb
xor
lea
imul
and
adc
std
lock
mov
cltd
inc
out
and
pop
insl
and
inc
xchg
popf
mov
aam
fsubrs
pop
jo
popa
jp
and
sbb
inc
jmp
icebp
addl
xchg
dec
pop
mov
aad
push
mov
pop
stc
loopne
inc
dec
sub
or
and
adc
push
scas
popa
push
test
adc
lods
jb
outsl
or
shl
loop
lret
insb
shll
gs
ljmp
pop
ret
rcll
fsubs
mov
cmp
xchg
loope
cmp
sbb
sub
and
pop
cmp
les
movsb
inc
imul
inc
inc
out
and
and
mov
xor
dec
icebp
setae
add
faddp
mov
loopne
mov
mov
popf
xchg
mov
cmpb
aaa
std
insl
adc
popf
ss
push
xchg
xchg
sarl
mov
xor
ret
adc
shr
subb
enter
mov
les
movsl
loope
inc
testl
mov
shl
add
mov
sbb
xchg
loop
insl
inc
jnp
lods
and
mov
pop
pop
hlt
sub
dec
cld
pop
inc
aam
adc
mov
popa
dec
aas
sub
ret
xlat
mov
loop
nop
cwtl
insl
add
or
cmp
sub
push
cmp
lcall
and
out
jo
push
xor
xchg
add
or
outsb
mov
cmp
cmc
push
xchg
shlb
shl
dec
add
lds
lock
movsb
inc
pop
xlat
mov
outsb
enter
cmp
fwait
mov
jle
pusha
push
adc
stos
pop
sub
jecxz
popf
jb
imul
jae
jmp
mov
js
mull
icebp
mov
xchg
sbbl
and
sbbl
xor
je
xor
enter
mov
sbb
das
jb
jmp
sbb
scas
sbb
sbb
gs
sti
mov
add
aas
stc
insb
lret
cmpsl
jmp
push
push
add
je
fidivrs
mov
into
mov
add
int
mov
pop
inc
sbb
ret
subb
mov
mov
push
ljmp
pop
int
dec
call
pop
inc
add
and
xchg
push
ret
adc
aam
jg
xchg
push
pop
adc
xchg
adc
dec
outsl
sub
mov
stos
movsb
adc
inc
push
imul
dec
out
daa
lret
in
icebp
cmp
add
aas
shl
ret
xchg
jmp
mov
push
adc
sub
and
sarb
or
or
leave
ja
sub
push
and
pop
js
and
pop
xchg
jmp
incl
mov
je
fisubs
daa
and
hlt
pop
push
les
insl
shlb
xchg
rcll
mov
adc
mov
jecxz
cmc
popf
or
pop
lcall
pop
ja
test
jge
cli
loope
push
sbb
jae
add
push
fistl
jbe
adcl
roll
scas
push
sub
sbbl
das
push
pop
push
sarb
stc
and
clc
push
jle
movsl
xchg
sub
mov
cmp
jp
aad
sbb
and
dec
aam
test
pop
aas
in
push
movsl
and
dec
ja
loopne
mov
arpl
bound
push
xor
mov
data16
mov
test
push
rcrb
push
dec
or
and
es
sahf
bound
mov
push
and
mov
outsl
mov
jl
add
cmpsb
dec
dec
or
xor
dec
mov
adc
insb
es
sbb
jb
int
add
mov
inc
fsts
xchg
gs
pop
mov
xor
mov
mov
jae
fs
sbb
dec
xorb
jp
sub
or
fbstp
test
cmp
cmpsb
sub
sti
mov
inc
lock
repnz
out
cld
mov
xchg
pop
jge
out
cmp
push
push
fdivrs
shl
sub
ror
push
jle
pop
dec
es
jle
pop
mov
cmp
mov
fwait
pop
subb
push
iret
les
movsb
outsb
rclb
push
sarl
icebp
addr16
call
leave
push
aam
cli
aad
ds
cmpsl
push
adc
adcl
mov
in
outsb
add
push
fcomps
es
ja
dec
inc
mov
scas
fwait
jle
aas
rol
or
repz
js
dec
add
and
out
ss
lods
out
xchg
push
sbb
movsb
stc
in
xchg
in
sbb
push
and
jne
or
jle
fcomps
jp
movb
inc
loope
dec
out
jo
xchg
push
shrl
xor
test
loope
out
les
ficoml
jno
int
insl
dec
outsl
sub
sub
rclb
inc
pop
adc
push
cs
andb
push
sub
and
sti
mov
in
popa
mov
push
out
leave
imul
jnp
add
les
clc
mov
jo
xchg
cmp
and
fwait
test
insb
lock
pop
fsubl
in
sub
call
in
neg
aas
fistpl
pusha
inc
sub
cmp
add
push
add
shl
pop
push
sub
negb
inc
imul
dec
add
fnstenv
sahf
push
mov
adc
and
xor
pushf
stos
jns
loopne
enter
test
lock
sub
push
push
xor
or
pop
add
xchg
stos
imul
adc
or
mov
movsl
fxch
xor
mov
data16
jg
sub
sbb
mov
mov
aaa
in
gs
xchg
xchg
rcrb
fs
cltd
test
mov
add
mov
push
insb
into
mov
test
nop
test
xor
enter
jg
dec
filds
scas
mov
xchg
dec
adc
fwait
mov
movsl
mov
mov
icebp
test
inc
jne
sti
inc
vmread
dec
adc
aaa
jg
push
inc
adc
mov
cmp
mov
mov
scas
leave
mov
jp
push
cmp
pop
rol
les
mov
sbb
jp
loop
and
inc
mov
dec
adc
adc
sbbl
jae
movsl
dec
xor
adc
or
push
xchg
adc
insb
test
in
adc
cmp
js
aad
push
movsl
andb
or
lods
push
pop
push
stc
and
push
push
push
test
ficoml
sbb
mov
mov
jns
imul
add
inc
add
push
cmp
mov
je
adc
loop
sahf
add
pop
pusha
test
pop
adc
cld
loopne
js
cs
adc
jb
aaa
dec
inc
mov
mov
arpl
mov
xchg
jo
das
fnstsw
push
push
lret
mov
add
inc
xor
sbb
add
test
push
and
xor
je
cmp
sbb
outsl
lea
icebp
mov
jl
scas
ljmp
and
jae
add
jge
jno
adc
mov
inc
imul
xor
les
out
pop
scas
in
fs
jbe
pop
dec
imul
mov
mov
jg
mov
sahf
xchg
add
cli
pop
popa
xchg
or
aas
cli
cli
imul
in
mov
mov
jmp
cltd
lahf
lcall
jb
mul
pop
dec
lock
jbe
clc
pop
or
mov
sarb
lahf
inc
lea
es
xchg
xchg
xlat
dec
cs
adcl
das
xlat
push
shll
aam
adc
fiadds
pause
cld
and
push
movsb
in
mov
mov
sub
sub
xchg
sbb
pusha
xor
js
and
fisubl
out
cld
push
push
inc
mov
ret
inc
push
aad
push
enter
push
pop
fwait
out
push
sbb
sahf
cli
xorl
sbb
jge
bound
aaa
notb
push
test
cmpsb
sub
loope
adc
xlat
adc
int3
scas
xor
xor
mov
stc
aam
pop
or
jge
cmp
ds
push
imulb
ljmp
mov
sub
pop
shll
dec
into
cmp
das
fdivs
fwait
xor
cmp
adc
and
and
les
xor
mov
mov
aad
or
and
pop
mov
jno
jb
pop
fsubr
test
hlt
cmpl
or
ja
add
cli
add
mov
push
lock
cs
or
in
add
cld
out
decl
fsubr
push
dec
inc
out
int3
push
popf
mov
ds
das
sub
das
and
in
hlt
xor
sti
int3
mov
cmpsl
mov
fs
cmpsl
sbb
adc
repnz
loop
fsubp
mov
sub
and
jle
in
push
xchg
xor
pusha
sub
fs
pop
cmp
or
popl
dec
mov
push
ljmp
shrl
push
aad
cli
pushf
sub
push
in
faddl
and
ljmp
inc
in
cld
aad
jne
pop
pop
mov
mov
ret
pop
mov
mov
shlb
mov
add
testb
jecxz
push
or
add
sbb
cmp
loopne
lret
pop
cmp
sti
push
push
add
stos
adc
shll
sub
call
lcall
je
push
dec
mov
les
mov
and
loope
jg
lods
push
mov
cmp
sahf
inc
lret
cli
out
aam
int
sub
loope
mov
daa
xor
sbb
add
xchg
cmp
dec
or
add
sbb
outsl
nop
dec
pop
xchg
jbe
ret
repz
pop
outsb
add
mov
cmp
scas
add
pop
inc
adc
mov
jmp
cmp
dec
icebp
push
sub
in
or
sbb
dec
dec
sbb
sbb
mov
std
inc
mov
lock
mov
mov
insb
jecxz
xor
inc
add
cmp
cmp
adc
mov
cmp
push
mov
add
xchg
icebp
aaa
pop
fwait
cmpsb
ret
stc
push
test
jle
dec
popa
stc
or
jbe
les
repnz
popf
or
pop
mov
subb
fsts
add
sbb
pusha
and
nop
inc
adc
cld
dec
loop
or
mov
adc
xor
cld
sub
scas
aas
adc
lods
ljmp
fldt
shrb
adc
or
mov
mov
jle
insl
xchg
pop
xlat
dec
stos
fdivrs
loopne
sbbb
jne,pn
push
inc
stc
sbb
clc
mov
and
cli
js
mov
gs
gs
add
loope
xor
frstor
cmpb
js
scas
mov
pop
out
std
pop
xchg
in
mov
or
mov
js
xchg
cmp
jns
lods
xor
shl
aaa
mov
shl
mov
or
fists
dec
pop
sbb
loope
out
mov
cmc
jmp
adc
stos
jl
inc
jns
or
iret
in
ljmp
cmc
mov
mov
cmpsl
lea
pop
or
popa
ljmp
push
inc
test
pop
lahf
aaa
lret
adc
add
scas
or
inc
lahf
mov
cmp
push
xchg
xor
pusha
dec
jno
lods
shrb
shr
fcompl
int
aaa
roll
xor
clc
rcr
fcmovne
aaa
sbb
ja
push
sub
insl
cmp
in
dec
push
xchg
jmp
jg
in
ss
idiv
roll
arpl
add
stos
jle
in
mov
pop
mov
daa
je
mov
hlt
xchg
divb
push
in
out
xchg
mov
andl
mov
ss
cmp
sti
cwtl
push
repz
xchg
lret
insl
imul
rol
inc
iret
sahf
arpl
sbb
in
int
jp
xchg
pop
cmpsb
mov
and
add
sti
mov
gs
ja
mov
test
dec
sahf
cmpsb
jo
jns
scas
or
movsl
orb
jmp
and
push
jecxz
ret
push
arpl
xor
sub
test
push
je
ljmp
cmp
test
pop
loope
loope
lods
mov
inc
or
mov
fstl
mov
jp
bound
sbbb
inc
sbb
jecxz
adcb
push
jo
ficoms
or
xlat
jae
cwtl
xor
pop
gs
sbb
sbb
aad
dec
fcmove
xor
sub
outsl
mov
test
fsub
and
loopne
and
cmpsb
pop
push
push
xchg
ret
inc
popa
sbb
xchg
mov
bound
push
incb
inc
in
fld
loopne
xchg
ror
test
mov
shl
xor
jnp
pop
adc
in
sbb
cmp
test
lods
int3
push
mov
ret
in
subb
push
loop
nop
test
aaa
jg
dec
loopne
pushf
loope
add
jmp
pop
push
xlat
mov
push
popf
or
pop
inc
je
pop
mov
xor
push
push
and
cmp
and
lods
push
dec
push
add
cmc
jl
cmp
adc
dec
pushw
je
gs
add
or
leave
or
vcvtdq2ps
scas
rorl
push
addl
and
and
loope
sbb
pop
aas
inc
in
pushf
fcoml
mov
arpl
lret
jae
add
inc
mov
sbb
cld
inc
inc
outsl
fcompl
je
or
cmp
test
sbb
cli
mov
xor
out
enter
pop
push
enter
push
cmp
sub
rolb
mov
and
xor
js
lea
pop
dec
loop
or
pop
or
mov
push
xchg
jge
ret
cmc
testl
daa
es
mov
xchg
pop
jge
shll
into
xchg
jae
or
cmp
adc
out
jmp
mov
lret
sub
int3
out
std
push
sbb
and
mov
repnz
lcall
xchg
imul
mov
cmpl
push
ret
out
shr
cmp
jns
and
aam
inc
andb
cmpsl
sarl
test
scas
mov
xchg
push
sbb
adc
inc
jns
lock
sbb
xchg
mov
or
cmp
cs
mov
sub
rorb
mov
cmp
popa
addb
lcall
enter
pushf
push
mov
leave
sub
imul
ret
cmpb
pop
inc
mov
mov
mov
mov
mov
clc
rolb
mov
ficoms
push
mov
mov
pushf
int3
nop
jnp
iret
pop
sbb
scas
out
leave
mov
mov
inc
xchg
cmp
push
pop
shll
rcrl
cld
mov
loopne
fdivrl
aam
daa
popf
xchg
jns
bound
decb
jnp
and
enter
push
mov
mov
pushf
and
lods
insb
enter
xchg
inc
add
xor
push
mov
jle
mov
cli
xorl
jo
arpl
pop
pop
out
and
test
sbb
out
xor
adc
inc
sbb
sbb
pop
mov
sub
jns
adc
mov
in
xor
pop
scas
xchg
push
xor
out
leave
inc
xor
cmp
sarb
adc
adc
pop
cli
add
adc
mov
or
clc
js
cs
inc
frndint
scas
sub
fsubrs
xchg
adc
jae
pop
rorl
and
sbb
xor
sbb
cmp
fildl
out
les
cmp
adc
orb
and
sti
xchg
cmpsb
and
adc
cmc
insb
push
mov
mov
adc
add
sahf
mov
out
xchg
repnz
popa
repnz
repz
pop
and
loop
aam
clc
adc
inc
fcompl
sti
inc
xor
insl
movsl
ss
fwait
cwtl
jns
xchg
add
rorb
lahf
pop
cmc
dec
cmp
int
in
dec
loopne
loop
xchg
xor
jle
aas
ds
add
mov
mov
jae
inc
cmpsl
or
fcomi
cli
fs
fldt
mov
popf
lahf
or
popf
ja
push
sbb
pop
scas
popa
fimull
je
inc
cld
push
mov
mov
aas
out
add
mov
push
xor
xchg
mov
dec
test
in
or
sbb
add
jmp
push
xchg
xchg
adc
mov
sub
push
or
pop
push
or
rcrb
jg
hlt
bound
pop
es
mov
xchg
xlat
or
mov
mov
fidivrs
in
xor
repz
fsubs
and
cs
sub
xor
cld
push
mov
scas
add
pop
in
pushf
mov
dec
das
adc
nop
add
pop
testl
dec
jb
sub
and
push
decb
cltd
int3
lods
jo
add
mov
jne
std
sbbb
lret
xchg
mov
mov
std
loopne
push
mov
jae
inc
jbe
pop
loop
mov
icebp
mov
ds
dec
pop
mov
mov
rorl
sub
fucom
lret
pop
pop
fcmovbe
lcall
sub
push
lret
sub
sub
add
add
lahf
les
add
jle
fs
push
arpl
enter
push
xor
xchg
pushf
insb
dec
sbbb
mov
add
sbb
lods
xchg
imul
inc
cmc
xchg
jb
mov
out
and
dec
push
xchg
aam
fsubrl
jle
leave
test
inc
sub
and
push
imul
xor
xor
mov
popw
lret
jle
fistpll
or
ret
or
push
mov
inc
mov
js
push
aas
xchg
aam
test
mov
push
xor
icebp
cmp
inc
loop
inc
popf
pop
arpl
xchg
jns
cwtl
lea
xchg
cmp
cmp
cmp
pop
add
aas
popa
jle
xchg
iret
fnstenv
das
add
jne
out
dec
mov
push
loop
push
call
stos
fisttpll
in
push
add
sub
clc
or
inc
mov
adc
stos
xor
inc
out
push
add
sbb
aas
aam
xor
push
stos
xor
sbb
out
inc
lcall
es
dec
mov
xchg
stc
std
es
movsl
aas
push
cmpsl
push
xor
cwtl
mov
insb
das
pushf
xor
lahf
push
cmp
int3
jnp
jmp
bnd
inc
outsl
push
sti
clc
lds
and
cmp
ljmp
xchg
mov
cmpsl
ds
das
push
je
aas
std
inc
imulb
cli
rcrl
pcmpeqb
pop
add
out
pushf
and
inc
add
cmp
cmp
mov
cltd
rcr
aam
and
icebp
insb
sar
negb
mov
mov
pop
pop
int
dec
sub
xchg
iret
repnz
mov
lods
or
cmpsb
rcll
movsl
add
dec
ja
outsb
or
loopne
mov
jno
inc
int3
push
sbb
stos
cmp
sar
ds
xchg
daa
push
inc
jnp
xchg
fwait
sbb
test
bound
sahf
test
movsb
mov
jnp
push
mov
mov
adcl
mov
xor
dec
jbe
test
add
push
lock
mov
push
pop
mov
and
inc
movsl
sub
sbb
dec
and
push
bound
sti
mov
sbb
push
roll
adcl
jle
adc
xchg
aas
sahf
imul
push
jmp
add
inc
jo
sbb
rolb
pop
rol
int
xchg
adc
ljmp
mov
push
sbb
add
add
adc
les
cmp
jae
push
ret
enter
leave
jns
xchg
enter
imul
fsubrs
push
clc
out
aam
rorb
int3
sbb
mov
mov
ja
xchg
repz
xor
ret
jle
aam
rorb
in
mov
mov
mov
xchg
nop
pushl
hlt
cmpl
jns
test
push
rolb
push
imulb
xchg
sar
dec
jnp
sbb
jle
add
adc
repz
outsl
cmp
jle
mov
lods
inc
aaa
push
cmp
and
rclb
rorl
dec
jge
fdivrs
mov
icebp
cwtl
dec
jp
lods
mov
sarl
cwtl
xchg
and
movsl
lods
xchg
cli
clc
and
outsl
mov
push
jle
cmp
int
fsts
add
cmc
cld
push
addl
add
sub
stc
mov
push
cld
or
jle
ljmp
inc
and
aam
lock
pop
lods
mov
pop
outsb
das
cmc
add
cmp
dec
shr
jle
xor
push
dec
lds
int3
xchg
subl
lods
daa
and
jle
adc
stc
into
jg
xchg
dec
pushl
sub
inc
or
pushf
fwait
icebp
ror
fmul
xor
movsl
addr16
mov
add
cs
mov
mov
leave
insb
dec
jne
js
int3
pop
sbb
sahf
mov
and
scas
stos
mov
andb
xchg
inc
jae
jo
cmp
jo
lds
movsb
sbb
xor
mov
inc
loop
rcr
add
xchg
mov
cmp
jno
push
mov
ret
repnz
adc
mov
lahf
out
push
push
pushl
lahf
dec
stc
shrl
dec
ljmp
enter
adc
push
out
sbb
cld
mov
popa
loopne
adc
sbb
or
and
xchg
xchg
clc
push
dec
pop
popa
sahf
lods
ficomps
in
in
xor
mov
scas
mov
sub
push
popa
in
inc
les
roll
ja
aas
fsubrp
pop
jmp
add
jge
loope
or
std
sbb
jno
mov
fsubl
inc
mov
movsl
aad
push
mov
fildll
popa
pop
cmc
scas
popa
loopne
fsubl
ret
pop
or
movsl
leave
je
fstl
mov
addr16
adc
pop
ljmp
je
outsb
dec
cmp
push
jp
stc
data16
lahf
xchg
jbe
cmp
jbe
xor
bound
mov
dec
jbe
roll
insl
leave
loopne
jl
ss
into
push
daa
popf
xor
sub
mov
fldcw
stos
push
lret
mov
sub
fimull
and
mov
and
loop
jno
das
jo
sbb
lret
add
mov
fstps
sub
repnz
imul
inc
int
or
mov
add
push
std
negb
add
popa
dec
and
mov
push
sti
jp
jbe
adc
xchg
mov
popf
or
out
imul
pop
or
mov
fidivs
add
pop
flds
dec
cmp
xor
cmpsl
xor
pop
cld
adc
fnstenv
stos
adc
and
jno
or
hlt
dec
push
dec
rclb
into
test
jno
movsl
ja
clc
cmp
inc
iret
lods
rcr
and
insl
orl
rcr
pop
and
fidivrl
mov
sti
sub
dec
stos
mov
xchg
mov
ficomps
inc
add
cmp
dec
push
cmp
aad
pop
dec
popa
jae
rcr
mulps
sbb
xchg
adc
test
push
std
sub
mov
jno
subl
dec
in
push
jg
xor
fiaddl
jl
cmpsb
jne
cmp
outsb
ljmp
xchg
in
mov
xchg
cmp
out
call
sub
ds
xor
push
push
ud1
mov
idivl
pop
icebp
out
movl
addl
lcall
lcall
adcb
aad
test
ljmp
inc
movsl
and
aam
es
imulb
pushf
jp
add
lds
sub
adc
xchg
xor
dec
pushf
jmp
out
cs
mov
adc
push
popf
xor
imul
lods
jecxz
xor
pop
xlat
push
test
pop
pop
push
add
dec
out
xchg
jns
gs
push
ret
pop
push
xchg
cmp
negb
icebp
mov
repnz
stos
mov
hlt
fimull
xchg
test
pop
mov
shlb
push
in
push
addb
ja
cmc
call
xchg
inc
icebp
repz
loop
sahf
cmpb
cwtl
sub
in
xchg
nop
lcall
and
test
outsl
inc
adc
fwait
pusha
les
dec
dec
push
jmp
gs
shrb
dec
xor
push
movsl
jg
push
xchg
mov
cmp
mov
sub
pop
pop
jmp
inc
int
ja
xchg
scas
dec
mov
xchg
lret
sub
js
dec
or
jle
cld
mov
mov
sbb
and
out
inc
lods
and
xchg
popa
lock
jmp
inc
dec
aas
sbb
mov
xor
inc
pop
adc
sub
or
call
movsl
add
into
sahf
mov
enter
or
rolb
jne
add
mov
imul
mov
cltd
repz
cmp
aas
fcoml
aam
subb
adc
add
push
ljmp
fsubl
es
fs
iret
fildl
xor
xchg
iret
push
pop
mov
mov
into
fwait
stos
xor
jnp
mov
inc
es
push
lds
stos
ljmp
cltd
xchg
rclb
xchg
push
out
xor
add
and
jmp
mov
cmpsl
ds
jbe
negl
dec
add
push
lods
test
mov
adc
movsb
push
cmp
sbbl
sahf
dec
cld
adc
pop
lds
push
imul
pop
aaa
pop
std
insl
mov
jb
lahf
fbld
sub
int3
push
out
fisttps
fistps
call
mov
inc
pop
sbb
ror
sub
jno
popa
les
shll
jne
sbbb
sub
jmp
ljmp
push
jno
lods
fisubrs
scas
cld
lods
mov
cld
pop
addr16
adc
mov
loopne
cli
sbb
mov
add
es
cmpsl
pop
stos
sub
push
rolb
fnop
call
imul
aam
int
fidivl
popa
cltd
inc
jb
sbb
mov
push
shll
adc
sub
fcoml
inc
adc
test
pop
cmpsb
aas
mov
pushf
es
sbb
cmc
mov
xchg
fdivrs
mov
jp,pt
xor
cmp
dec
adc
lea
mov
mov
push
xor
cmp
xor
pushf
sbb
test
cmpsb
lock
mov
sahf
mov
and
or
lods
cmp
incb
in
cmpsb
push
and
movsl
test
jnp
cmp
ret
xchg
lea
imull
leave
wrmsr
icebp
hlt
scas
mov
pop
cmpsl
rcrl
cmp
in
mov
into
jge
inc
lcall
cmp
jg
and
roll
cmp
mov
cmp
shl
dec
iret
inc
in
jns
imul
pop
into
imul
xor
sub
aas
jecxz
dec
jge
popa
xlat
mov
cli
sub
pusha
sub
test
jbe
mov
sbb
lds
inc
pushf
fcomp
icebp
insb
cltd
popa
mov
push
les
jg
mov
in
out
insb
pop
jo
in
pop
and
das
sub
cmpsb
and
dec
dec
sbb
cld
push
sub
mov
mov
stos
pushf
xor
addl
push
jne
push
xchg
cli
in
cwtl
jp
adc
add
push
sub
fmuls
je
daa
push
and
push
sub
mov
push
repnz
mov
push
xor
pop
cmp
push
incb
loopne
insb
sub
jg
les
adc
push
adc
cmp
std
cmp
and
std
cmp
bswap
lret
xor
int3
out
mov
adc
and
push
push
xchg
or
stos
loop,pn
mov
xchg
cmpb
in
ja
bound
push
iret
jg
add
loop
std
loop
sbb
dec
push
movsl
sub
popa
jl
jecxz
adc
das
or
fucomi
xchg
jmp
sbb
stos
ja
cmp
imul
aam
mov
and
mov
mov
ret
add
mov
mov
sarl
add
icebp
ds
clts
aam
pop
aas
push
xchg
pusha
mov
movsb
and
in
divl
outsl
sbb
movsb
cwtl
cwtl
fdiv
sti
cld
fiaddl
cwtl
mov
push
cmp
mov
push
push
inc
push
in
or
data16
fidivs
sub
lret
add
sbb
popf
data16
enter
out
or
xchg
dec
in
dec
fsub
shrd
mov
mov
ret
sbb
repz
mov
shrb
sbb
ja
sahf
mov
movsl
push
test
jae
in
pop
data16
xchg
addr16
ds
gs
push
mov
test
push
daa
xlat
ja
sbb
cltd
inc
iret
jns
mov
scas
dec
mov
mov
add
cwtl
and
sbb
jbe
mov
aas
sub
mov
cs
int3
mov
ds
mov
testb
lods
jnp
xor
xor
jmp
lahf
push
cmpsl
sbb
xchg
push
fwait
pop
pushf
jecxz
push
stc
daa
add
in
lea
popl
aaa
push
cs
push
pushf
mov
lds
sub
adc
or
daa
fsubl
add
pushw
out
adc
jle
leave
push
and
mov
js
adc
xor
or
jnp
fcmovbe
cmp
enter
mov
push
movsb
pusha
call
mov
push
pop
js
fisubl
add
stos
adc
mov
test
mov
or
sbb
xorb
push
fidivs
push
xorl
or
mov
sub
sbb
xchg
popf
and
jg
rorl
add
xchg
outsb
loope
sub
mov
jmp
cmp
lret
rcrb
cs
jl
in
mov
xorb
sub
and
mov
pop
js
cwtl
push
pop
pop
xor
jg
sbb
lret
in
out
xor
lret
pop
mov
sub
mov
repnz
or
push
lahf
ljmp
fnsave
or
and
enter
xchg
xchg
cs
outsl
sbb
sarb
mov
pop
cmc
cli
icebp
mov
mov
xor
mov
neg
add
in
adc
jge
mov
mov
jb
aas
inc
movsw
dec
jge
insl
add
xor
jo
xorl
xor
test
rolb
dec
xlat
mov
push
xrelease
lods
or
push
xchg
shll
stos
aam
shr
in
fisubrs
shl
push
aaa
outsb
add
int
pop
ja
out
cs
adc
push
sub
adc
push
inc
inc
or
stc
loope
and
or
outsl
icebp
push
pushf
scas
lds
sbb
pushf
xchg
ret
mov
inc
rcll
inc
pop
or
mov
ret
andl
jns
xchg
cmp
mov
push
insb
xor
push
fisttpll
stos
mov
mov
jne
mov
outsl
jbe
inc
js
cld
movsl
mov
jno
clts
test
sub
push
sub
nop
lahf
sarl
subb
out
sbb
xor
mov
pop
aad
test
push
inc
sub
popf
cmp
xorl
fwait
cmp
hlt
repnz
popf
fwait
cmp
push
mov
in
xchg
sbbl
cmpsl
in
fcmovb
push
xor
cltd
in
icebp
xchg
pop
popa
inc
dec
mov
lds
adc
orb
les
aas
adc
pop
adc
or
xchg
sbb
rdtsc
and
xor
dec
mov
or
add
push
fucom
cmc
insl
push
test
lcall
mov
ljmp
push
fsts
push
pop
adc
aam
xlat
aas
imul
nop
inc
pop
pop
dec
push
mov
xlat
jge
fisttps
not
fidivs
iret
gs
inc
add
popf
xchg
add
pop
xchg
sub
std
mov
adc
and
outsl
push
in
test
jno
cmc
in
sbb
fadd
adc
in
sub
mov
lahf
cmp
or
out
jle
mov
ja
int3
jge
stos
lcall
aad
fnstcw
add
cli
mov
out
jl
lahf
loopne
xchg
xchg
and
lahf
inc
sbb
fcmovbe
out
or
jmp
dec
push
xor
or
dec
icebp
popf
push
sub
pop
adc
mov
pop
mulps
stos
mov
xor
adc
and
shl
mov
dec
out
adc
dec
incl
pop
xchg
mov
cmc
lods
fisubs
movsl
nop
dec
bts
jne
shlb
jmp
ficoms
mov
add
cmp
inc
mov
jle
mov
enter
movsl
dec
arpl
stc
icebp
shlb
jno
lock
cmp
inc
pushf
pop
cmp
dec
dec
inc
adc
push
dec
inc
pop
inc
mov
icebp
outsl
xchg
sbb
jg
xor
cmp
in
xchg
xor
ror
jno
mov
cltd
sbb
xchg
inc
lock
dec
inc
les
sbb
es
mov
mov
push
pop
add
lcall
stc
aaa
mov
lock
pop
mov
popf
lea
mov
xor
repnz
aam
mov
push
push
xor
mov
test
cld
loop
push
push
adc
inc
popf
inc
pop
xor
mov
ret
stos
add
stc
mov
jg
test
adcb
lea
pop
call
jbe
call
addb
mov
mov
jecxz
push
in
insb
ds
mov
or
ficomps
xchg
inc
data16
lcall
cld
into
les
adc
mov
sub
and
lods
imul
push
or
push
js
pop
hlt
xchg
mov
jmp
add
je
repnz
lods
inc
inc
and
scas
pop
mov
jo
or
and
loop
iret
inc
hlt
inc
cmp
xor
xchg
push
in
test
cmp
and
faddl
fucomip
or
and
pop
sbb
xchg
pop
aaa
div
and
sbb
pop
jl
mov
ret
xor
xchg
jmp
out
dec
pop
push
pusha
add
mov
jae
in
scas
cld
jne
inc
mov
popf
sahf
cmpl
loop
cld
inc
jmp
xor
call
push
cmp
lea
movsb
mov
sbb
ss
mov
ret
and
fstpt
xchg
sbb
push
lods
and
and
in
xor
and
mov
lret
pop
cmp
or
int
icebp
cmp
lea
mov
mov
pop
xchg
push
in
ds
fstps
mov
subl
cltd
dec
mov
sub
sub
pop
mov
push
fs
xlat
pop
popf
or
sbb
dec
test
xor
pop
shrb
int3
mov
fcmovnu
pop
xor
imul
shl
dec
lock
and
push
lock
sbb
fildl
mov
and
and
ret
testb
sub
push
out
jle
sbb
negl
and
push
dec
cmp
imul
pop
jecxz
sbb
ljmp
cmp
call
fisubl
push
pusha
and
sub
lock
scas
add
arpl
ds
sub
cmp
mov
mov
jns
and
outsl
fstpt
sbb
push
or
mov
fwait
sub
sahf
mov
jns
dec
insl
insl
lret
fimuls
cmp
cmp
push
filds
dec
push
clc
jns
mov
xor
hlt
mov
rcrl
aaa
sbb
push
xor
icebp
dec
sahf
or
inc
clc
addr16
hlt
cmp
loop
cmp
jl
int
push
cmp
pop
repz
cmc
xchg
aad
int
aas
xorl
aam
xchg
mov
jmp
push
out
pop
cmp
jp
movsl
sbb
pop
xor
push
xor
xor
dec
mov
xor
stc
cltd
mov
inc
xor
es
test
lret
cltd
mov
das
and
add
das
dec
sbb
popf
jg
lea
add
bound
rcll
pop
icebp
pop
sbb
xor
dec
lea
and
data16
fistl
sub
lret
imul
add
stc
in
add
adc
dec
fisttpl
add
mov
js
jb
shr
scas
outsb
aas
push
add
ss
xchg
add
mov
lret
sti
stos
call
test
jnp
test
sbb
outsl
test
jl
icebp
sbb
popl
cli
mov
push
shl
jmp
sahf
push
test
cmp
add
cmp
mov
push
cmpsb
push
ss
aas
cmp
cbtw
lret
mov
xchg
adc
std
add
outsb
ret
aam
mov
jno
mov
sbb
ds
pop
cmp
iret
lret
pop
jmp
jp
pop
or
lock
dec
push
mov
pop
dec
dec
repz
sub
pop
jp
pop
jge
insb
imul
inc
jb
hlt
jo
xor
std
fcomip
inc
enter
sub
sete
adc
popa
in
sbb
adc
mov
pop
repnz
int3
aad
arpl
cmpsb
ds
sbb
fwait
sti
lret
mov
adc
add
cmp
push
inc
shll
jecxz
add
shrb
sbb
mov
mov
test
pusha
ss
cmpsb
ja
jmp
sbb
jmp
lds
in
loope
mov
push
aaa
mov
mov
fs
mov
leave
fwait
ret
lods
std
rcrb
shr
pop
daa
jns
ror
mov
adc
pop
xchg
sbb
insl
enter
xchg
or
arpl
sarb
lock
ret
in
xor
lods
loop
sbb
pop
xchg
dec
test
add
or
int3
pop
rcrl
mov
aas
outsl
jmp
andl
in
imul
cmp
and
mov
cli
loopne
pop
dec
popa
dec
nop
add
out
cmp
loope
sub
adc
fbstp
lods
ficoml
mov
inc
sub
or
scas
dec
and
mov
and
ror
loopne
pop
adc
imul
xor
mov
aaa
scas
repz
jmp
pop
mov
lds
xor
lea
imul
cltd
leave
push
sbb
sti
test
stos
xor
dec
dec
arpl
sbb
sarb
jmp
stos
inc
or
pop
dec
add
lret
rclb
lods
mov
out
mov
scas
fdivl
mov
pop
mov
icebp
dec
dec
sub
cwtl
js
xchg
pusha
pop
sub
dec
cmpl
pop
push
push
push
imul
fs
mov
js
nop
inc
daa
test
jae
mov
jmp
inc
push
js
cli
aam
sbb
into
sti
mov
mov
outsl
arpl
or
nop
jbe
xchg
mov
adc
mov
out
fdivl
pop
rcl
popa
lret
sbb
pop
fcoml
pop
imul
sbb
cmp
insl
mov
jo
imul
push
cmp
je
mov
imulb
or
add
push
and
in
ds
rcll
add
cwtl
mov
mov
scas
mov
lret
lods
and
jge
xchg
js
sahf
test
fld
inc
ss
dec
xchg
mov
imull
js
mov
fldl
mov
lcall
jl
fadd
loopne
call
movsb
sarb
or
add
cli
sub
int3
fisttpl
stc
test
xor
daa
xor
iret
and
cs
mov
sub
inc
loope
mov
mov
stc
push
jecxz
pushf
pusha
cmp
jne
xchg
dec
or
stos
or
sub
daa
lods
add
fcmovbe
jge
lock
jl
loope
fisttps
rcrl
mov
sub
mov
leave
jne
aam
lock
mov
sbb
scas
out
loopne
mov
xor
rol
cltd
dec
dec
sarb
jmp
mov
xchg
jle
dec
mov
loope
dec
and
nop
stos
jmp
das
dec
loope
pop
lods
xlat
or
loop
dec
lods
jnp
inc
mov
adc
in
mov
pusha
add
ja
mov
mov
jae
gs
addb
repnz
jb
cmpsb
faddl
stos
cwtl
fadd
mov
out
adc
clc
pop
jle
sti
pushf
test
push
dec
arpl
cld
je
inc
bound
mov
iret
inc
out
dec
pop
jecxz
push
lahf
out
mov
arpl
sbb
cmp
cmpsb
add
sub
jl
rcpps
push
sbb
mov
shlb
push
jp
jae
stos
push
pushf
pusha
insl
pop
mov
dec
lcall
shll
std
inc
rolb
sarl
push
sub
ror
aas
insb
mov
lock
std
and
aad
ror
mov
add
rolb
rclb
push
loop
jge
jp
jecxz
aaa
push
mov
dec
daa
ret
ljmp
xchg
mov
cmp
xchg
cmp
jne
int
js
xor
fisttps
fnstsw
shrl
jno
outsl
stos
es
cmp
std
pop
ds
inc
cmp
in
jno
dec
sub
loopne
xchg
adc
adc
push
lds
or
push
jae
inc
cli
xor
xlat
mov
idiv
push
or
add
pop
test
popf
xchg
pop
cmp
loope
xchg
dec
loopne
scas
outsb
jmp
push
ljmp
sub
jmp
jbe
stos
subl
clc
insl
sbb
add
andb
jae
sbbb
mov
jbe
pusha
push
adc
fbld
xor
push
cs
dec
shll
jo
pop
add
mov
jge
sub
popa
test
dec
je
adc
ds
lods
int3
or
push
jbe
adc
adc
out
dec
inc
jge
add
test
arpl
jns
jmp
ret
push
data16
xchg
stos
sbb
push
ja
loope
mov
cld
push
sub
xor
dec
jns
sbb
das
rclb
xor
push
sahf
mov
sbb
jl
jecxz
xchg
push
mov
imul
sbb
add
js
push
add
outsb
out
add
scas
mov
ds
adc
es
fisttpll
int3
sbb
sub
cltd
adc
repnz
push
movsl
add
sti
mov
push
ds
rcr
and
jge
push
mov
enter
inc
jle
std
and
xchg
sbb
in
test
jae
sbb
add
or
lahf
sub
div
push
mov
xor
xor
sbb
ret
sbb
push
and
test
fwait
aam
out
dec
or
sbb
dec
and
popf
pusha
stos
cli
sub
ja
sbb
pusha
add
mov
bound
out
mov
and
int3
jb
mov
fs
in
add
xor
push
mov
in
sbbb
push
xchg
and
pushf
cmc
mov
repnz
gs
xchg
lret
or
fwait
sti
int
sahf
sbb
sbb
pop
xchg
xchg
xchg
cmp
and
xchg
outsb
or
pop
fstps
ljmp
dec
jnp
push
rep
leave
mov
pop
test
test
or
sbb
push
add
je
add
mov
je
fstpl
dec
inc
mov
add
lahf
sbb
sub
fcmovnu
ss
gs
test
inc
fs
mov
out
push
cmp
push
orl
fwait
sub
fistpl
nop
in
and
stc
int
mov
adc
loope
insb
aaa
jecxz
xchg
mov
in
orl
mov
adc
mov
movsb
mov
in
stos
add
divb
imul
xor
add
add
xor
jmp
xor
xchg
insl
mov
iret
add
mov
push
aam
dec
repnz
or
mov
pop
jbe
xor
out
mov
mov
xchg
xor
iret
fdivrp
into
or
add
adc
shlb
add
movsb
mov
xchg
push
test
faddl
pop
adc
jp
clc
push
mov
mov
lock
cmp
pop
in
cli
pop
pop
fs
push
or
arpl
add
add
loope
std
mov
ret
test
xor
cmpsl
movsb
dec
lcall
xorl
imul
xlat
comisd
aaa
push
fs
xor
and
push
sbb
sbb
pop
fnsetpm(287
push
lds
pop
push
pusha
push
clc
cmp
mov
xchg
sub
popf
test
mov
inc
sbb
sbb
mov
lahf
sub
xchg
push
mov
repnz
xchg
shl
call
dec
bound
aad
addr16
jecxz
add
dec
outsb
mov
out
add
xor
sbb
sub
sub
cmpsl
mov
shrl
push
inc
orb
rolb
fwait
mov
and
inc
push
xchg
fsub
push
dec
dec
jmp
push
outsl
xor
xor
pop
xchg
rclw
lret
or
cmp
into
shlb
mov
fildl
sbb
jp
dec
pop
testb
jg
sub
inc
adc
iret
dec
scas
cmp
pop
inc
negb
jecxz
testb
jno
std
adc
mov
xor
les
xor
xor
int
in
daa
mov
lss
xor
gs
jmp
in
les
in
in
and
stc
add
js
pop
sbb
cli
xchg
lock
inc
push
mov
pop
or
xchg
aam
add
inc
push
cld
call
loope
loop
movsw
fwait
arpl
into
mov
daa
gs
xchg
cld
lahf
inc
mov
and
aam
xchg
xchg
or
inc
and
sahf
int3
and
or
cmp
popa
inc
or
daa
jo
pop
out
call
jle
pop
xchg
pop
sub
rolb
call
and
and
addr16
sub
xorb
dec
pop
xchg
or
stos
addr16
imul
add
and
and
in
pop
lods
jbe
pushf
add
jo
push
sbb
lcall
pop
xchg
push
vsubss
ret
repz
add
and
imul
push
push
adc
jns
sub
pop
rclb
lcall
mov
inc
mov
rolb
push
adc
std
adc
out
rcrl
and
xchg
mov
inc
dec
in
ja
lods
data16
cwtl
xchg
insl
dec
mov
mov
jae
aaa
cmp
sti
push
mov
cmp
sub
repnz
cmp
cmp
jp
jnp
je
add
outsb
sbb
jbe
add
pop
mov
inc
dec
adc
lea
jl
hlt
dec
push
pop
lods
repnz
mov
pop
addb
pop
in
jno
dec
inc
repnz
xchg
add
adc
enter
xor
or
mov
mov
gs
push
push
pushf
into
or
data16
in
mov
enter
adc
lahf
mov
pop
mov
das
mov
sub
adc
int3
ret
or
add
lcall
jmp
or
outsl
xchg
inc
movsl
mov
mov
pop
fdivr
leave
jbe
fucom
adc
push
cmp
or
mov
aad
js
lahf
xor
jp
push
sub
ficoml
mov
jo
push
mov
push
cmp
mov
fcompl
cmp
xchg
sub
and
mov
loope
push
sarw
pop
and
iret
in
lods
inc
inc
add
fdivs
mov
addr16
lahf
inc
cs
loope
and
loope
bound
mov
loopne
std
add
call
fsub
lahf
push
popa
ret
divb
cmp
shrb
fidivs
scas
aaa
pop
popf
aas
stc
push
push
popa
xlat
cmpsl
scas
jmp
stc
lahf
jmp
jg
mov
lret
ret
ret
mov
sub
loop
not
add
rcrl
into
mov
pop
push
out
jp
jo
dec
lcall
out
insb
and
fs
sbb
add
xor
inc
out
mov
inc
pop
cmp
sahf
lea
push
mov
cmp
inc
sbb
bound
or
inc
and
out
dec
push
data16
jae
xor
mov
mov
stc
movswl
daa
pop
push
pop
bound
nop
stos
cmc
or
jns
insb
inc
mov
bound
pop
mov
fistps
sbb
mov
sbb
rclb
dec
subl
daa
shlb
ss
cmp
mov
sub
push
push
cs
and
nop
movsb
add
adc
ja
mulb
mov
cmc
lock
cmp
mov
or
xlat
xchg
gs
ret
pop
lods
js
sbb
xchg
inc
add
xchg
ficoms
aas
loop
test
fidivrs
or
sbb
fcmovne
mov
ret
orl
rcrl
iret
shl
movsb
mov
fcomip
push
lcall
cmp
pop
dec
loop
jmp
lret
cs
lret
addl
out
in
push
pop
xchg
jg
inc
icebp
push
push
xlat
out
popa
into
inc
adc
outsl
ret
jae
fisubl
out
and
fidivs
cmp
data16
pop
out
fnstsw
icebp
xchg
cld
in
inc
xchg
pop
hlt
mov
dec
ljmp
ret
leave
push
xor
jae
cmp
cmp
cmp
mov
pop
dec
dec
and
sub
fwait
push
sub
inc
adc
scas
icebp
mov
mov
xor
or
scas
movsl
mov
mov
xchg
xor
sbb
pop
jp
aas
cmc
mov
aad
push
lds
jne
mov
mov
dec
shl
and
sti
je
enter
pop
and
movsl
mov
mov
dec
dec
fistpl
insl
outsb
push
popf
mov
pop
xchg
mov
scas
dec
lret
iret
mov
fldt
repz
in
jecxz
push
ret
xchg
js
icebp
inc
push
jnp
movb
aam
testl
inc
cli
and
mov
adc
mov
clc
push
jg
decb
inc
enter
rcrb
fwait
sbb
mov
pushf
call
sbb
fstl
test
cmp
fcomps
and
mov
xor
push
pusha
dec
fcomp
sub
cmp
xchg
adc
pop
jecxz
push
cmp
adc
lret
add
pop
mov
jo
hlt
dec
mov
pop
fisttpl
cs
mov
mov
ds
adc
cmpsl
icebp
stos
popfw
fcoml
sub
scas
cmp
lcall
add
adc
fldenv
jb
ret
jae
sbb
pusha
inc
pop
cmpsb
in
in
ss
or
mov
cltd
push
add
out
mov
addr16
xor
push
push
mov
std
sub
rorl
xchg
mov
sub
shrb
ficomps
sub
test
jno
cs
add
mov
sbbb
out
lret
stos
mov
jmp
scas
ret
idivl
outsl
mov
xchg
xchg
xlat
ljmp
mov
aad
in
neg
mov
or
pop
int
es
lcall
ret
lcall
lock
mov
lock
jecxz
inc
es
xchg
jb
sbb
xor
stos
adc
loop
adc
jge
xchg
adc
mov
pshufw
leave
imul
push
mov
and
mov
jl
movsl
jnp
mov
xchg
xor
pop
int
sub
jl
cltd
push
stos
mov
inc
cltd
push
cs
scas
and
mov
shlb
mov
sub
dec
ljmp
mov
dec
or
xchg
lods
das
nop
test
sub
push
push
or
inc
divl
and
lcall
push
add
ret
mov
jmp
sub
mov
mov
lds
xchg
ja
mov
mov
pushf
cmp
jns
in
pop
cmp
xor
not
inc
in
mov
pop
cmpsb
mov
out
adcl
fstpt
sti
cmpsb
fwait
shll
pop
xchg
sti
jecxz
das
scas
stos
shll
cmp
mov
inc
sub
sbb
inc
orb
popa
add
notb
xchg
pushf
push
mov
imul
xchg
push
mov
mov
bound
cmp
rcrl
popf
push
or
sub
xorl
les
pop
sub
cmpsl
push
add
push
ficoml
fwait
testb
jb
roll
sbb
mov
mov
fwait
sub
pop
ljmp
push
in
mov
std
test
mov
xchg
aam
mov
xor
movsl
mov
bound
mov
ret
dec
bound
mov
jno
movl
ret
out
mov
outsl
sub
pop
scas
into
xchg
pop
xchg
dec
mov
aaa
push
sbb
lds
pop
daa
mov
xadd
mov
cmpb
push
and
xchg
pmulhuw
es
jo
std
xor
getsec
sub
int
out
scas
push
cltd
cmc
adc
xor
inc
jb
mov
push
push
cmp
int3
xor
dec
add
mov
xchg
dec
out
dec
mov
mov
jb
in
sahf
and
add
add
xchg
xor
repz
jge
add
hlt
or
and
mov
mov
inc
pushf
addb
repz
or
insl
out
mov
ds
and
clc
inc
push
inc
movsb
xor
mov
mov
dec
cwtl
xor
cmpsl
cwtl
outsl
xchg
xchg
mov
mov
ja
xchg
scas
push
cmpsl
xor
loopne
shlb
sub
push
loopne
and
push
andl
es
dec
fdivl
lret
adc
lods
movsb
imul
enter
imul
adc
sbb
and
push
or
bnd
mov
sti
int
lcall
or
scas
inc
ret
xor
mov
jno
inc
mov
mov
push
pop
stc
hlt
cmpl
push
loope
pop
cwtl
rsqrtps
sbb
cmp
lret
lods
ljmp
push
push
fmuls
mov
or
jp
rclb
or
fs
aad
fsubs
pusha
push
pop
adcb
add
pop
int3
adc
jmp
mov
pushw
mov
in
sub
mov
xchg
xchg
shr
add
jne
xor
mov
flds
popa
dec
aad
xchg
xor
les
ret
repz
repz
dec
mov
nop
bound
ss
movsb
pop
or
shll
pusha
sub
jns
adc
or
jle
sbb
sbb
lock
lods
je
mov
xor
dec
stos
dec
lcall
inc
jo
testb
cmp
out
jno
mov
inc
inc
mov
clc
ret
fdivp
das
popf
je
call
cmp
mov
xlat
lcall
adc
insb
fistpl
test
decl
inc
leave
adc
jb
sub
cmp
or
sbb
aaa
adc
adc
jae
mov
pusha
mov
fldl
lea
sbb
stc
xchg
push
adc
push
mov
popa
mov
data16
add
or
and
jbe
data16
lock
pop
or
sbb
mov
jne
mov
cmpsl
add
sahf
lahf
xchg
xchg
sub
clc
sti
stc
or
pushf
cmp
movsb
lds
sbb
mov
sub
cli
cmp
scas
popf
cmp
cltd
int3
into
iret
add
pushf
cwtl
out
jae
lods
imul
pop
and
repnz
lcall
lock
mov
testl
inc
shlb
imul
imul
push
cmpsb
jge
daa
lock
bnd
mov
xor
sbbl
cltd
sub
test
dec
xlat
inc
sub
mov
out
jo
testb
and
jnp
jle
xchg
imul
push
imul
cmp
pop
mov
jg
inc
dec
jle
arpl
lcall
sbb
cmc
sti
icebp
lods
cmc
jle
dec
pop
jge
ret
mov
daa
mov
xchg
jecxz
and
cld
xchg
sbb
mov
ljmp
loope
scas
std
scas
sub
mov
mov
xchg
xlat
mov
and
cmp
flds
sub
pop
rcrb
fsub
inc
es
xchg
hlt
test
jae
mov
mov
dec
jle
je
dec
cmpsb
repz
jg
push
lea
push
mov
test
mov
xchg
js
insl
rorb
je
test
pop
xor
add
cli
aaa
pop
mov
ja
xchg
add
xchg
jne
add
mov
cmpsl
loopne
lds
aaa
popa
cmpsl
fildl
push
cmpsb
inc
iret
mov
fimuls
xor
sti
test
rcll
mov
stc
jae
or
add
stc
rclb
mov
mov
aad
scas
ds
pop
xchg
roll
pop
gs
lret
fistl
shl
sub
inc
popf
or
lret
jno
fdivrs
ds
pop
sub
aad
and
sar
jmp
gs
and
js
cmp
xor
loope
inc
mov
push
popf
movsb
sarl
lods
pop
pop
and
enterw
sti
sbb
push
sub
smsw
xor
ret
test
in
dec
lds
mov
xorb
xor
aas
data16
pop
push
fstp
push
push
xor
mov
sbb
pop
xor
mov
add
inc
xorl
gs
bound
jae
ret
xchg
mov
dec
nop
add
jmp
addr16
jae
mov
jnp
out
fistl
xchg
sti
iretw
imul
cmp
mov
xor
dec
sub
out
pop
rorl
sub
pop
pop
nop
pop
jnp
adc
int
out
push
notb
lret
xor
push
adc
in
fwait
insl
mov
test
adc
pop
testl
shrb
dec
shl
pop
adc
test
lods
inc
popa
in
lcall
and
cmp
push
lock
dec
mov
jp
js
iret
push
xor
mov
lret
or
xor
mov
push
fidivrs
mov
pop
mov
push
lret
fs
ret
adc
scas
sbb
dec
mov
jne
fs
mov
sbb
and
cmpsb
decl
push
jp
imul
mov
cwtl
scas
and
xchg
adc
sbb
push
insl
push
mov
lret
rolb
lret
outsb
mov
loope
stos
dec
cmp
cmc
xor
push
mov
std
inc
mov
incl
inc
es
lret
popa
jl
push
mov
pop
sbb
inc
jae
lahf
push
mov
mov
int
add
sarb
jge
pushf
xor
add
cltd
xchg
std
cmp
sbb
mov
push
outsl
dec
inc
xor
jecxz
pop
sbb
add
mov
in
ljmp
aaa
push
mov
cmc
inc
repz
outsb
ja
or
jno
and
mov
lock
cmc
mov
out
pop
dec
mov
gs
and
cmpb
push
aam
repz
addr16
push
stos
dec
mov
and
cmp
mov
mov
ret
ss
inc
imul
inc
xor
mov
cmp
xor
mov
negl
or
jecxz
pop
cmp
xor
xchg
int3
dec
pop
push
push
popa
lds
repnz
sbb
add
lret
shlb
test
in
mov
xor
inc
and
and
sbb
mov
push
adc
or
inc
ljmp
ret
xlat
frstor
enter
xor
das
jle
loope
in
popf
mov
push
pop
xor
mov
popf
movb
movsb
push
pop
cmpsl
cld
imul
repnz
das
testl
push
lods
fcoms
imul
pop
fldcw
or
and
pop
decl
push
shll
sub
loope
xchg
lock
addl
push
mov
lds
add
pop
fadd
in
xchg
sub
xor
pop
or
push
stc
dec
or
ficompl
inc
mov
mov
mov
repz
add
lock
push
sbb
add
lock
jmp
imul
int
xor
shll
push
jbe
fs
xchg
imul
xor
popf
sub
js
pusha
js
mov
mov
sub
aas
test
sub
cli
xchg
into
movntps
mov
or
cmp
xchg
cmp
std
andl
mov
subb
add
ds
mov
fwait
jecxz
push
jbe
subb
js
push
adc
mov
push
test
aas
test
outsl
add
cmp
loope
sbb
ret
adc
lods
outsb
sub
rcll
nop
pop
cmp
negl
mov
arpl
xor
sbb
fidivrl
fisubl
pop
mov
je
mov
sahf
scas
in
rcr
aaa
daa
cld
push
jge
addr16
pushf
jnp
push
jl
xor
cmp
inc
push
mov
gs
adc
dec
jmp
cwtl
mov
fcoms
jnp
imul
std
addb
jbe
fwait
and
pop
loop
inc
sbb
sbb
add
inc
adc
pop
mov
jae
pop
repz
out
fidivrl
mov
out
addr16
jg
push
jae
mov
loopne
xchg
push
sti
mov
inc
movsb
push
push
push
mov
sbb
or
mov
mov
push
ror
test
dec
inc
nop
and
xchg
adc
push
xchg
movsb
ret
bnd
ds
inc
movb
pop
mov
loop
mov
pop
loop
push
sahf
popf
popa
out
sub
cmpsb
in
fbstp
mov
xchg
mov
mov
in
fidivrl
lods
or
mov
in
xor
xor
sub
lods
divb
push
mov
dec
ret
arpl
and
clc
push
mov
ja
pusha
int3
xchg
cs
pop
inc
cmp
sarb
mov
js
push
mov
sbb
je
sub
mov
pop
shr
dec
sub
bound
dec
out
jmp
cltd
lods
push
in
addl
add
repnz
inc
mov
mov
repz
jecxz
and
pop
jp
or
movl
nop
jne
jmp
stos
ljmp
test
lods
ret
xchg
mov
xor
xchg
jns
xor
cmp
xor
sbbb
pop
lret
jo
js
inc
scas
cmpxchg
outsb
daa
insb
push
ss
pop
pop
in
cmp
cld
sub
cltd
jp
sub
loopne
call
insb
std
inc
cmp
mov
jge
xchg
mov
adc
sub
sbb
lods
ljmp
scas
aaa
packsswb
ret
movsb
add
or
adcb
loop
mov
and
fsubrs
subb
int
xor
sti
test
xor
out
gs
jo
cs
fs
jp
sbbb
or
out
mov
pop
pop
add
adc
adc
andb
inc
or
orl
sbb
mov
stc
mov
sbb
aam
andnpd
arpl
or
je
and
shrl
rorl
mov
pusha
leave
addr16
dec
pushf
inc
sahf
lret
sbb
inc
leave
pop
add
add
add
outsl
add
xor
lock
arpl
out
adc
mov
inc
imul
jmp
jae
and
jmp
rcll
xchg
jmp
dec
inc
pop
push
jp
leave
xor
pop
nop
sub
ja
rcll
and
repnz
pop
inc
fwait
das
mov
push
xchg
push
mov
loop
mov
js
sarl
jge
call
in
sub
mov
inc
sbb
mov
xchg
or
inc
clc
sub
daa
push
pusha
les
sub
adc
rorl
push
inc
or
popf
daa
cmp
cli
or
and
pop
dec
jns
or
jns
add
and
das
xchg
shll
sbbb
fnstenv
pop
testl
notb
and
push
mov
sbb
or
rol
lods
pop
adc
idiv
loopne
gs
mov
mov
fucom
in
ret
inc
push
cwtl
adc
dec
and
loopne
sbb
ret
push
pushf
test
sahf
jo
cmp
mov
inc
inc
cltd
push
mov
pop
push
add
pop
into
pop
sub
add
or
adc
xorb
lret
testb
xchg
test
leave
ljmp
adc
cmpsb
decb
int
out
cmpsb
mov
insb
jb
test
daa
imul
jle
cwtl
mov
test
ret
mov
pop
or
push
test
push
jg
push
mov
enter
xor
icebp
jmp
fldl
push
add
arpl
sbbb
push
pop
and
loope
jge
and
jne
push
je
ret
in
mov
xlat
ret
mov
xor
popf
repz
pushf
sti
adc
testl
cmc
sbbb
les
xchg
jmp
ficoms
js
sbb
sahf
fsts
sub
cltd
outsb
push
inc
lods
push
enter
add
push
inc
movsb
push
fists
pop
pop
push
fildll
in
and
xlat
mov
xlat
adc
in
stos
push
cmp
jo
aam
arpl
sbb
push
ficoml
and
in
faddp
mov
clc
fidivrl
cmpl
icebp
pop
xchg
rcr
adc
dec
or
xor
data16
aad
in
ss
aaa
sub
cmp
ja
out
insb
bound
jae
sub
xchg
pop
daa
jle
add
cwtl
jae
add
xchg
lahf
outsl
daa
hlt
mov
sub
add
test
loop
mov
sub
mov
frstor
shll
cmp
lret
sbb
jp
punpckhbw
xchg
jns
inc
pushf
jno
mov
or
push
pop
mov
adc
test
aad
fucomi
lret
cmp
subl
scas
push
out
sar
mov
decb
adc
inc
mov
and
std
stos
mov
in
xor
bound
ret
or
ljmp
nop
imul
fdivp
add
mov
sbb
aad
rclb
sub
sub
cmp
fldenv
shll
mov
push
pushaw
scas
mov
iret
addr16
sti
lods
and
jae
mov
lret
xor
mov
ret
pop
jo
daa
xor
jge
mov
int
mov
out
orb
adc
addl
xchg
pop
xchg
xchg
fldln2
lea
add
inc
mov
movsl
inc
cmp
push
mov
sti
fildl
xchg
xor
add
fldt
push
je
cmc
pop
test
arpl
jecxz
jl
nop
shrd
jmp
iret
and
add
inc
jg
push
fdivs
jmp
stc
inc
cltd
bound
dec
fdivrp
out
inc
idivb
fs
xorl
ret
iret
mov
lahf
decl
sbb
and
adc
lds
mov
jmp
mov
mov
cmpsl
cmpsl
or
add
lcall
jle
push
jo
or
scas
and
fistps
pop
loopne
sbb
push
cmp
mov
repz
lds
dec
lock
mov
xor
filds
call
icebp
test
mov
jecxz
xor
sbb
gs
mov
call
lret
ds
cmc
fnsave
sub
mov
and
and
fldcw
push
sub
xor
insl
es
lea
loopne
aaa
jmp
push
adc
dec
mov
push
cmp
mov
sub
sub
cmp
or
xchg
dec
sbb
dec
addr16
dec
mov
inc
fisubrs
pop
cltd
sub
adc
add
add
out
fs
push
lret
pop
adc
dec
add
int3
pop
add
push
adc
cmpsb
je
lahf
out
push
addr16
dec
imul
int3
lret
jns
jg
mov
sbb
jle
jg
sbb
and
imul
repz
ss
js
and
xchg
cmpsl
add
jecxz
es
jo
dec
adc
ss
testl
shll
xchg
movsl
out
xchg
iret
es
xchg
js
inc
pop
mov
xor
pop
imul
and
xchg
cmpsb
push
das
xor
and
ja
adc
movsl
xchg
jmp
loop
jmp
rcl
adc
loope
imul
insl
xor
xor
insb
dec
sub
lock
int
mov
ficompl
pop
test
fcomp
and
insb
popa
sub
outsb
mov
pushl
xlat
cwtl
fisubrs
mov
sbb
inc
shl
push
sub
out
jns
test
xchg
int
add
sub
test
xor
cmp
out
out
pop
adc
imul
push
lods
sub
cwtl
jmp
aas
jge
inc
ret
test
cmp
push
inc
ficoms
or
lea
inc
testl
or
mov
push
dec
mov
cld
popf
jo
addr16
or
or
sahf
jmp
jle
jmp
mov
pop
scas
cmp
shl
jns
call
das
aam
ja
dec
clc
insb
sub
lods
adc
lcall
mul
fidivrs
addl
jecxz
shll
mov
mov
outsl
mov
xchg
jg
js
jle
cmp
sbb
pop
cmp
mov
lret
xor
and
mov
jbe
jge
aas
nop
push
aam
popf
dec
call
loopne
mov
pop
aam
mov
xor
mov
mov
mov
pop
jg
pcmpeqb
cmp
sub
cmp
pusha
pop
movsl
inc
mov
inc
inc
dec
stos
leavew
int
addr16
push
in
call
push
dec
adc
pop
movsb
enter
in
inc
popf
xor
in
iret
dec
and
jmp
and
dec
iret
fstl
sbb
jl
xchg
and
hlt
mov
sbb
neg
sub
inc
xchg
cmp
mov
pop
addb
pop
iret
or
test
fnstsw
push
out
or
addb
in
cmc
mov
jmp
pop
xor
push
jns
das
mov
mov
push
dec
inc
adc
out
inc
inc
push
out
das
xchg
sub
xchg
mov
xchg
movsb
cld
pushf
stos
jge
idivb
fcoml
add
rclb
xchg
mov
pop
sbb
xor
xchg
dec
pop
or
je
cmp
push
push
push
out
vpunpckhdq
jb
adc
add
sahf
inc
dec
movsl
pusha
lock
rolb
into
jl
mov
icebp
mov
mov
push
nop
pusha
pop
jl
sysret
xor
mov
iret
ss
or
adc
jp
cmp
adc
repnz
fiadds
mov
cli
stc
icebp
xor
adc
xor
popf
and
call
xlat
mov
pop
testb
lcall
push
push
sahf
shl
fadd
xor
ljmp
lods
jle
std
lods
mov
dec
ret
xor
pop
inc
mov
sbb
adc
mov
lock
shl
adc
jno
jbe
adc
popf
push
xor
aam
mov
out
rcrb
mov
sbb
cwtl
and
inc
pop
push
inc
popf
stc
ret
mov
mov
lahf
xchg
shrl
and
sbb
push
aas
mov
ret
fsubs
xchg
dec
in
mov
jae
dec
or
pop
pop
and
cmp
sbbl
lods
inc
test
pop
dec
aas
push
hlt
out
shlb
xor
ds
sbbb
fwait
cmp
xchg
cmpb
popa
mov
loope
pusha
mov
pop
xlat
pop
or
jmp
push
imul
lret
inc
push
mov
addr16
in
ss
repnz
add
pushf
imul
fistpl
js
sbb
fcomi
jbe
mov
mov
cmp
xor
rolb
push
mov
repz
fimull
push
mov
insl
or
in
add
pop
loope
std
mov
out
insb
xor
subb
xchg
push
test
sbb
sub
mov
in
xchg
loop
mov
js
out
ljmp
stc
addr16
outsl
daa
imulb
cltd
sub
lcall
add
aad
mov
dec
sub
xchg
jecxz
int3
imul
fiaddl
shll
jbe
mov
sub
and
or
ds
inc
sub
pop
stos
ss
pop
and
lret
stos
out
sbb
movsl
jl
aad
mov
icebp
addr16
push
xor
out
lods
rcll
mov
fsubrp
mov
movsb
hlt
lds
test
jb
repz
lea
xor
mov
push
push
cmp
loope
push
pop
cli
cltd
pop
or
pop
jecxz
cmp
pop
or
test
cli
leave
add
imul
pop
sbb
in
sub
fistpll
mov
int3
add
dec
add
push
inc
daa
insl
pop
lea
rorb
cmpl
es
nop
or
cmc
in
call
pop
not
dec
sbb
bnd
cvtps2pi
out
inc
sub
arpl
jnp
sbb
cmp
es
sbb
dec
stc
xchg
rorl
cmp
sub
push
rcll
iret
fistpl
cmp
mov
rcrb
out
fldt
loope
mov
arpl
add
cli
lahf
xchg
in
pop
psraw
push
jae
push
cs
sub
or
sar
and
cld
nop
ja
fnsave
cmp
jmp
mov
cmc
aaa
clc
adc
test
mov
jbe
out
adc
insl
addr16
adc
jl
in
out
mov
int3
cmp
or
in
or
jle
inc
jne
icebp
aas
dec
vpunpckhqdq
jge
sub
mov
or
sbb
lock
imul
jno
dec
cld
add
int
mov
jno
aad
fbstp
lea
fs
in
shl
or
es
push
jno
repz
sbb
dec
xor
xchg
cmp
push
inc
xchg
pop
leave
or
bound
xor
sbbl
add
lock
xchg
dec
int
insl
mov
out
xchg
cmp
dec
push
mov
aas
lret
mov
test
das
gs
jg
test
or
mov
aad
lea
bound
sbb
and
cmpsl
aad
movsb
xor
test
lcall
xor
inc
clc
testb
push
gs
adc
mov
push
jns
sbb
decl
xorl
loopne
mov
cmc
call
filds
popl
mov
movups
loop
orb
imul
lods
pusha
mov
hlt
out
repz
add
jecxz
push
test
loopne
pop
test
in
xchg
inc
cmpsl
pusha
loope
repz
stos
mov
push
cwtl
fmuls
or
push
out
pop
popf
xor
push
pop
jp
xchg
cmpsb
xchg
xor
imul
in
adc
mov
mov
ss
inc
cmp
mov
ret
jno
ficomps
lcall
jnp
push
xor
test
inc
in
or
or
pop
sbb
push
pop
pop
test
lds
mov
cmc
or
mov
cmp
ret
scas
and
mov
push
sub
and
neg
xchg
mov
jnp
adc
sub
popf
shrl
out
iret
push
xlat
push
mov
cmp
mov
aas
inc
out
lret
lahf
and
cli
add
mov
cmp
jecxz
mov
sahf
lods
fst
inc
lods
cmp
push
xchg
daa
xchg
xchg
adc
rcrl
clc
aas
insb
pop
pop
push
mov
xorb
sbb
ja
mov
xor
not
inc
aaa
cwtl
inc
jecxz
ljmp
mov
mov
push
sub
shl
mov
and
jno
movb
dec
inc
cmp
es
pop
push
out
je
addr16
int3
loope
stos
sarl
adc
test
and
jmp
mov
cmc
vpmacssdql
dec
push
in
cmp
mov
in
cmp
cmp
pop
aaa
push
cld
dec
out
pop
mov
pushf
push
out
into
inc
popa
cli
stos
imul
je
jno
lods
hlt
and
push
pop
fcmovbe
les
pusha
jl
jmp
movsl
mov
sub
dec
pusha
imul
loopne
addr16
mov
mov
mov
lods
xor
repnz
ds
dec
les
inc
cmpsl
cs
dec
and
test
insl
xchg
mov
push
std
xchg
xorl
comiss
cmpsl
in
pop
jmp
js
and
addr16
pop
jg
loop
data16
mov
daa
imul
add
mov
and
clc
cmc
add
mov
jp
push
dec
sbb
push
and
lds
dec
out
sbb
dec
leave
xchg
sub
adc
aad
aaa
xchg
lods
inc
or
mov
shlb
xchg
out
or
mov
inc
adc
popf
push
jno
adc
in
adc
das
lock
fwait
cmpsl
cmp
xor
fs
sub
xlat
fiadds
int3
int
pusha
lods
mov
fistl
dec
outsl
fstpt
jns
mov
sti
xchg
mov
pop
jmp
xchg
jae
pop
ds
inc
fwait
jbe
mov
mov
push
flds
repz
test
sub
jl
cmpb
in
ret
cwtl
pmaxub
inc
loopne,pn
mov
rcl
stc
dec
mov
cmpsl
loope
sbb
cli
or
add
ljmp
in
jne
cli
jmp
push
gs
dec
xor
jo
jecxz
sub
repz
ljmp
dec
out
mov
xchg
push
mov
sub
cmpsl
scas
mov
xchg
mov
push
call
xor
mov
pop
mov
stc
nop
rolb
scas
mov
in
mov
ficoml
or
in
fisttpl
jmp
imul
xchg
movsw
inc
data16
push
mov
or
inc
ret
jno
test
inc
fsubl
inc
vunpckhpd
sbb
xchg
clc
idivl
cli
cltd
jg
ret
push
jo
loopne
cmp
push
inc
pop
add
test
cwtl
out
jge
lods
shrb
pop
popa
sub
idivl
les
bound
cltd
fstp
mov
inc
mov
lret
jmp
data16
out
dec
push
lret
or
ljmp
dec
mov
out
jle
and
xor
fwait
inc
xchg
xor
clc
and
sbb
rorb
lret
mov
adc
faddl
mov
fsubp
add
or
jns
pop
add
jmp
xlat
xchg
sub
mov
xchg
shr
inc
push
mov
fcoms
inc
bound
cwtl
lret
mov
mov
inc
xchg
pop
pop
les
mov
xchg
inc
xchg
pop
push
mov
psubb
shr
push
mov
or
xor
mov
mov
mov
adc
mov
or
test
mov
push
nop
shl
mov
fdiv
bound
fldt
addr16
cltd
outsl
in
push
frstor
stos
movsb
out
roll
mov
fs
xchg
in
into
loope
daa
pop
bound
cltd
fstps
jge
or
idivl
push
stos
push
data16
flds
test
neg
cmpsl
mov
das
les
adc
stos
in
mov
fsubrp
js
push
in
or
mov
loope
push
adc
out
push
pop
mov
aad
pop
xor
test
in
mov
jbe
xchg
pop
lds
mov
dec
rcrl
imul
pop
xor
jns
outsl
dec
mov
sbb
nop
cwtl
mov
adc
or
lcall
in
pop
jge
xor
adc
mov
sbb
push
repnz
or
das
xchg
push
insl
outsb
nop
fiaddl
fwait
mov
es
sbb
mov
ret
mov
rclb
cs
ret
sub
xlat
test
sub
and
ds
jnp
cmpsb
lock
dec
mov
mov
dec
jno
cmpl
lret
mov
jb
out
add
dec
out
or
popa
mov
out
fcomps
xchg
fnstsw
jg
sbb
hlt
pushf
and
into
fxch
mov
mov
mov
pusha
rol
imul
xchg
aad
cmpsl
pop
imul
jae
std
ror
imul
sub
icebp
xor
call
addb
or
hlt
inc
out
or
roll
xchg
mov
pop
cld
inc
lret
inc
jae
lock
xchg
pushf
or
xchg
lock
pop
call
es
inc
movb
loope
xchg
aaa
shlb
aad
je
sbb
xchg
faddl
push
scas
and
cli
scas
int3
negb
scas
push
cmp
adc
mov
call
cmp
pusha
mov
jmp
cmp
add
jl
mov
pop
jp
or
pop
js,pt
mov
mov
das
mov
or
mov
imul
push
cld
dec
sub
jmp
cld
fnstenv
iret
mov
repz
push
mov
push
out
test
pop
repz
xchg
jp
pop
in
sbb
das
push
xor
adc
aad
jno
iret
fldl
repz
notl
jecxz
mov
push
aad
daa
pop
pop
pushl
jo
leave
push
insl
or
lods
pcmpeqd
das
push
lret
mov
loope
cmp
sbb
popf
mov
into
cltd
lods
push
scas
cmpb
adc
sti
xor
insl
mov
mov
jb
push
test
jle
lea
and
loope
rolb
lea
lods
inc
fs
add
rorb
pop
sub
loope
cmp
xchg
cmp
inc
outsl
enter
inc
xor
movsb
aaa
inc
cs
mov
repnz
ds
or
jmp
sub
call
jne
loop
xchg
sub
jne
pop
or
addl
mov
mov
or
jg
dec
sti
mov
sub
dec
add
cmp
loopne,pn
loop
add
jne
add
iret
xor
dec
ret
pop
out
repz
out
push
rorb
jl
cmpsl
repz
and
pop
pop
mov
pop
std
roll
mov
or
add
xchg
out
sub
lret
leave
movsb
xor
xor
insb
lret
adc
hlt
xlat
testl
mov
xchg
dec
imul
cmp
enter
inc
xchg
outsl
ljmp
mov
imul
add
dec
inc
rcr
jmp
xor
push
mov
dec
aaa
out
fwait
xchg
xorl
fidivs
adc
call
sbb
dec
lret
aam
es
adc
cmpsl
ud0
inc
addr16
inc
stos
aaa
test
enter
mov
add
mov
fmull
mov
sbb
or
mov
xchg
xor
sbb
js
aam
daa
jp
ljmp
add
shlb
test
xlat
mov
mov
dec
jae
ja
mov
add
or
add
out
sarb
idivb
jne
mov
ljmp
push
inc
dec
jns
imul
movsl
adc
xchg
cmc
xchg
mov
cmc
mov
lods
shl
sbb
mov
adc
aam
add
call
test
test
fstp
push
inc
xchg
in
ds
cmpsb
mov
in
pop
or
push
stos
push
daa
shl
cmpsb
xor
cmp
hlt
leave
jno
jns
fwait
stc
mov
push
xor
into
imul
cmc
rcll
xchg
mov
inc
inc
stos
xor
mov
insb
daa
mov
out
repz
pop
clc
enter
andb
icebp
mov
mov
sarb
aad
cmc
in
dec
push
jno
pop
in
push
jae
cmp
jne
aad
cs
sbb
cli
sarb
inc
and
and
sarb
sub
sbb
lods
sbb
aad
sti
mov
ja
loop
xchg
shll
js
aad
lods
push
mov
es
or
lret
xchg
push
push
pop
loopne
cmp
sbb
mov
inc
inc
mov
aas
pusha
add
inc
nop
sahf
push
movl
test
xor
into
out
cs
orb
fdiv
cmp
jo
inc
nop
inc
insl
loope
insl
sbb
insl
rcr
test
xlat
fsubl
dec
pop
mov
imul
or
mov
pop
pop
mov
cwtl
mov
ror
adc
push
add
in
loope
jnp
loopne
lods
addr16
mov
fcoml
inc
sub
and
xor
sub
in
mov
mov
loope
dec
pusha
add
inc
dec
cmpsl
sub
xchg
xor
or
adc
imul
pop
xchg
and
loope
ljmp
pop
and
adc
add
daa
lahf
push
clc
push
ret
mov
sub
xor
lds
and
sub
mov
mov
notb
sbb
inc
ret
and
movsl
mov
insb
xchg
or
test
mov
adc
push
mov
test
mov
pusha
lahf
push
filds
aaa
mov
cmp
mov
je
lcall
and
push
mov
mov
dec
int
push
xchg
jbe
shlb
push
mov
mov
in
and
pop
sbb
push
je
push
xorl
adc
pop
cmp
mov
insb
icebp
pushf
shl
mov
xchg
adc
mov
aas
xlat
repnz
adc
mov
adc
ss
jbe
and
lods
or
sub
mov
movsl
push
pop
inc
push
fisubs
stos
outsl
inc
inc
jnp
jle
sub
or
fwait
movsb
pop
dec
jp
mov
je
add
xor
cmp
inc
mov
push
into
in
into
mov
push
je
adc
mov
loopne
pop
divps
aas
ret
data16
add
cmp
and
cwtl
add
rclb
jmp
mov
and
cmpsl
dec
pop
and
jecxz
aad
sub
mov
cmc
jmp
outsl
imul
adc
jmp
iret
sbb
dec
adc
aam
sbb
inc
mov
mov
dec
mov
ret
loop
fyl2x
or
sbb
das
test
imul
inc
lcall
jne
fstl
jge
xchg
stos
test
decl
xor
sbbb
inc
rclb
jmp
in
pusha
aaa
and
shll
sbb
push
test
jmp
sbb
mov
je
enter
sbb
in
mov
les
mov
movsb
add
fidivrs
iret
sbb
hlt
test
clc
xchg
sbb
sbbl
dec
insl
adc
jno
cmc
fldcw
aas
dec
mov
xchg
dec
imul
jo
pusha
lods
js
loop
cs
sub
xchg
inc
and
lcall
cmp
sub
pushf
fwait
sahf
adc
cltd
ret
sbb
push
jmp
out
dec
xchg
daa
lds
jo
cmp
xchg
enter
repnz
fcomps
mov
sbb
iret
sar
fmul
clc
lret
outsb
sub
fists
dec
lea
pop
xor
imulb
ficompl
stc
dec
cld
imul
push
outsl
cmp
push
and
mov
cwtl
push
repnz
aad
mov
loopne
push
xor
icebp
cs
stos
xchg
xor
dec
pushf
push
mov
shl
push
add
inc
jo
dec
xor
xlat
jnp
das
jmp
loop
mov
push
push
int3
mov
xor
pop
pop
adc
das
jno
out
sub
push
jns
cltd
ja
and
mov
orl
shl
inc
cs
xor
pop
pop
pop
xchg
xchg
lcall
je
pop
filds
jbe
mov
sbb
leave
mov
jl
shlb
in
xchg
imul
xchg
mov
popa
cwtl
pop
or
adc
lret
xchg
mov
sub
dec
imul
mov
das
cli
outsl
movl
inc
bound
and
or
adc
mov
mov
jle
mov
pop
cmp
data16
or
adc
xlat
lea
in
cmp
push
outsb
jmp
pop
adc
pop
cmp
xchg
lods
xchg
into
sbb
mov
sahf
cmp
into
rclb
inc
pop
cmp
int3
pop
add
jae
adc
pop
fs
adc
bound
adc
xor
jecxz
pusha
mov
push
test
jo
sub
adc
jns
jb
orb
sub
fisttpl
sub
aam
pushf
add
cs
jecxz
lds
shrb
sbb
int3
add
jge
popf
mov
adc
mov
stos
mov
pop
and
loopne
pop
adc
and
xchg
mov
jo
scas
aaa
pop
out
sub
pop
pop
call
ret
mov
mov
pop
xchg
scas
and
daa
cmc
into
in
leave
mov
je
dec
scas
xchg
cmpsl
mov
push
outsb
stc
xchg
cmovl
enter
fs
xchg
jecxz
mov
stc
imul
aam
xor
mov
pop
bound
jns
dec
xchg
loop
cmc
fdivr
mov
outsl
subl
out
shll
mov
ss
loop
ret
xorb
js
mov
adc
shrb
test
inc
adc
lahf
daa
cmp
insl
test
mov
or
ffree
and
loope
dec
xchg
xchg
inc
stos
aad
adcb
in
cli
adc
add
jmp
mov
push
jno
cmc
icebp
mov
lea
jecxz
sti
or
repnz
cmp
cmpsb
jmp
xchg
shl
aaa
stc
adc
lea
jae
sub
popf
nop
lcall
adc
push
testl
leave
cmpsb
test
mov
jl
jo
mov
aad
les
or
inc
js
mov
xchg
icebp
add
lea
inc
xor
add
xchg
in
cmp
int
ljmp
sbb
rcll
cmp
daa
loop
jl
sub
inc
cmp
jno
or
stc
int3
popf
sub
nop
adc
mov
jecxz
dec
in
and
cld
inc
aam
jecxz
mov
xchg
rolb
dec
and
shrl
xchg
mov
fdivrp
pmulhw
push
ljmp
pop
iret
jbe
fiadds
adc
ds
fiaddl
jb
cmpsb
add
in
int3
add
and
loopne
xchg
mulb
jnp
mov
fnsave
fs
outsl
js
bsf
sub
out
sbb
rcrb
mov
adc
jns
popf
repnz
sarl
cmp
jae
pop
ret
out
daa
jg
xchg
pop
xor
and
out
adc
lret
clc
xlat
xchg
xchg
cmp
jle
mov
loope
xchg
pop
dec
jb
test
fstpl
inc
lret
arpl
jbe
orb
dec
cmp
pop
mov
mov
dec
xchg
shr
xlat
cmp
push
ja
ret
push
insb
enter
in
mov
jne
loopne
jo
sub
xlat
in
push
mov
lcall
xchg
lds
aas
fnsave
mov
xlat
mov
test
shrl
pop
dec
sti
lahf
imul
rclb
pop
inc
ret
stc
les
mov
nop
and
fdivs
in
mov
roll
push
aas
ljmp
loope
jns
stos
lock
push
mov
or
aaa
iret
sarb
shll
fstpt
out
adc
sbb
pop
loope
outsl
mov
bnd
sbb
and
fists
and
push
sar
add
add
pop
jae
scas
or
aas
xlat
inc
stc
loop
add
paddusb
push
subb
addr16
xchg
outsl
xor
pop
sbb
imul
es
call
lock
adc
jb
cmp
and
shlb
mov
xor
add
or
cmp
stc
and
ja
xchg
mov
andl
and
js
scas
pushf
cmp
lock
adc
js
pop
or
sti
or
cmp
or
jbe
lea
xor
test
pop
fwait
jmp
pop
or
dec
dec
scas
lahf
cmp
xchg
mov
adc
jl
cmpl
rolb
mov
inc
cmc
add
push
lods
dec
int
in
je
int3
jnp
mov
insl
fbstp
ret
sbb
jl,pn
lods
adc
sub
stos
aaa
lcall
das
cltd
xor
lea
dec
repz
loopne
lock
aaa
and
xor
cmp
insb
xchg
sbb
icebp
push
xor
mov
cmp
and
cli
lahf
mov
mov
or
xor
pop
mov
ss
outsl
sbb
xchg
or
lods
sbb
xchg
add
out
icebp
in
or
xor
xor
dec
sub
nop
insb
jle
cld
push
mov
push
sbb
into
sbb
outsb
sti
loopne
or
stc
leave
icebp
les
hlt
pusha
notb
lea
scas
rcll
sbb
stos
cwtl
xchg
push
popf
fcmovnu
adc
gs
add
lahf
shlb
es
inc
imul
xchg
inc
dec
stos
push
sti
cmp
add
test
and
aas
pop
ret
xchg
das
ret
cltd
xor
push
fnstenv
push
add
add
jne
or
sbb
loop
iret
push
xchg
stos
cmc
mov
addr16
pusha
pop
inc
xchg
sahf
lock
loope
xchg
lret
jne
inc
mov
sub
in
xchg
ret
inc
mov
lret
test
and
outsb
add
gs
dec
int
lahf
mov
scas
jp
js
add
shll
push
stos
add
jne
popa
add
adc
dec
int3
pop
pushf
aaa
inc
mov
mov
idiv
cmp
sti
sub
stos
ljmp
out
mov
cmc
das
adc
loope
cmpsl
pop
cmp
xchg
loop
jo
jno
loop
push
sub
sbb
fists
lcall
into
subl
pop
shr
xchg
stc
in
jle
movsb
out
rcrl
test
dec
cwtl
push
mov
jmp
inc
push
das
fldcw
adc
in
aaa
cmp
fistpll
xor
mov
stos
daa
testb
sub
push
loope
loope
gs
ja
movsb
cmp
jge
adc
jno
push
mov
addr16
add
imul
xchg
sbb
or
aad
leave
xor
aam
stos
or
sbbb
and
out
mov
int3
inc
fimuls
mov
push
mov
push
push
lods
inc
popf
loop
arpl
dec
mov
cmp
repz
fldcw
ja
shlb
and
add
sub
sbb
push
sbb
push
pop
jge
or
push
jmp
lods
xchg
adc
insl
add
mov
jecxz
add
roll
jo
adc
scas
nop
xchg
shll
flds
fcmovu
in
int3
xchg
lahf
mov
inc
pusha
into
adc
mov
pop
mov
jge
mov
cmp
stc
fwait
or
test
clc
lahf
imul
jle
ljmp
xor
cld
mov
adc
in
jl
sbb
test
rclb
pop
inc
dec
xor
mov
mov
aas
lret
xor
sub
push
mov
outsb
jb
cli
mov
pop
gs
push
mov
pop
mov
or
aam
mov
cmpb
push
sbb
bound
jbe
popa
pop
leave
inc
fwait
iret
andb
std
sbb
in
aam
test
je
insl
loope
faddp
dec
sbb
clc
sbb
pop
fsubrp
cmp
pop
lock
jl
cmpsb
jmp
arpl
inc
sub
jnp
data16
dec
lahf
mov
sbbb
or
mov
and
cmpsb
fdivrs
xchg
test
test
sti
insb
add
sbb
subb
sub
or
addr16
dec
scas
mov
xchg
insb
or
inc
cs
in
mov
imul
jno
xor
shrb
ror
jo
dec
sarl
mov
adc
mov
xor
mov
adc
jo
ss
pop
xchg
pusha
sti
xchg
dec
xchg
sub
icebp
jnp
cmp
out
pushf
mov
or
je
sub
cmpsl
inc
cmpsl
xchg
in
in
pop
das
das
cwtl
cmp
mov
cmp
sbb
xchg
cld
jg
fsubrs
cmpsb
and
lahf
xor
into
stos
cmp
lods
rcl
xchg
inc
cmp
ds
jecxz
add
pop
mov
and
lret
inc
mov
and
mov
inc
cmpsb
mov
cmp
sbb
sbb
mov
fwait
sub
pop
cli
ret
mov
xor
inc
cmpsb
call
mov
xchg
adc
test
add
cmpsl
cltd
or
dec
test
ret
addps
stos
mov
and
sbbl
adc
lods
dec
imul
mov
std
mov
out
ds
mov
push
in
enter
inc
insl
lret
pop
and
mov
add
jp
repnz
xchg
dec
lock
or
xchg
add
mov
inc
sub
mov
mov
dec
call
sti
add
sub
push
sbb
je
fdivrs
cmp
sbb
cmp
data16
test
dec
push
ret
jmp
xchg
lea
mov
push
and
cmovns
lds
sbb
fsts
imul
inc
and
ret
and
cmp
add
mov
add
xlat
sbb
fwait
imul
jl
bound
sub
cmpsl
push
lock
lret
out
out
push
cmp
jne
lea
lock
cli
in
push
in
lret
cmp
in
inc
adc
xchg
in
inc
xorb
popf
inc
dec
imul
leave
loope
mov
aas
lods
push
jns
push
xor
push
mull
out
pop
cwtl
mov
adc
cmp
jb
in
enter
hlt
xchg
lods
push
test
and
jl,pn
sbbb
jecxz
inc
pop
dec
xor
in
mov
xorl
push
scas
in
pop
pop
pop
inc
mov
sarl
sti
mov
xchg
mov
movsl
xchg
or
ss
lahf
inc
shll
and
imul
mov
ljmp
xor
push
loop
cmp
test
mov
xchg
fwait
leave
xchg
sarl
repnz
mov
lods
pop
push
int
daa
repz
inc
inc
mov
or
xchg
lods
cmpsb
stc
data16
pop
jecxz
aaa
and
divb
outsb
mov
add
movsl
cli
push
movsb
mov
fidivrl
jge
push
fwait
dec
in
lds
rcrl
mov
cmp
rolb
jge
pop
and
rorl
cmpsb
mov
in
or
in
xchg
jge
inc
jl
push
mov
icebp
imul
jp
push
ja
jo
repz
pop
setle
push
or
jb
fwait
mov
mov
jb
pop
sbb
lods
addr16
mov
mov
dec
fcomp
pop
mov
inc
in
jno
into
add
add
mov
cmpsb
push
push
dec
mov
addb
mov
sub
mov
xlat
std
and
and
add
ret
dec
insb
xlat
loopne
lret
stos
or
push
pop
or
adc
arpl
inc
cmpsb
mov
shlb
mov
sbb
es
cmp
jecxz
subl
fcmovnbe
pusha
test
inc
lret
xchg
sbb
mov
ret
hlt
jne
mov
xor
loope
adc
ljmp
cltd
jmp
mov
lods
add
call
idivl
and
ljmp
jmp
aad
and
outsb
jecxz
jo
pop
sahf
jb
gs
ja
iret
call
jp
pushf
lock
bound
ffree
stos
pop
sbb
in
cmpsl
pop
movsl
popl
std
pop
or
xchg
movl
xchg
movsb
cmovb
fsubs
jb
cmc
lock
int
out
faddl
popf
xchg
rcrl
jmp
push
sub
lea
push
insl
or
sub
sbb
jo
jp
bound
adc
repnz
loop
aas
adc
mov
popa
mov
pop
cmp
pushf
push
adc
mov
lret
repnz
std
lret
nop
sbb
mov
jmp
out
std
ss
sub
push
mov
addr16
arpl
xor
adc
xor
rep
jb
xchg
insl
mov
adc
ds
fdivs
adcl
stc
sbb
jo
ljmp
in
fcmovne
movb
xchg
rol
jl
inc
iret
and
flds
cltd
jno
cli
icebp
xchg
daa
lret
push
or
lds
push
mov
shrb
in
lds
dec
mov
mov
movsl
mov
jno
mov
push
and
test
sub
imulb
adc
mov
push
mov
xchg
pop
xor
and
lea
add
adc
je
stos
mov
js
ret
xlat
insb
sub
inc
test
mov
ds
mov
push
fimull
rcrb
arpl
nop
imul
add
dec
outsb
test
push
xor
arpl
adc
mov
or
pop
pop
sbb
cmp
pusha
subb
xchg
cmp
aad
movsl
dec
sahf
sbb
pop
clc
or
test
and
jo
lea
fimull
add
lods
rcll
push
or
fnstsw
mov
fdivr
mov
sbb
rorb
roll
dec
sub
lretw
xlat
jb
push
loope
add
mov
fs
insl
mov
jmp
mov
push
xor
sahf
lcall
aas
mov
dec
and
icebp
dec
xchg
mov
add
cmpsb
dec
dec
pop
jge
mov
imul
add
cmp
ds
scas
lret
mov
xchg
pop
aam
stos
test
sti
adc
inc
jp
insl
push
xchg
mov
pop
stos
mov
push
mov
sub
mov
dec
push
jp
push
push
jnp
dec
aas
and
xchg
xchg
nop
daa
out
seta
inc
xchg
pushf
sbb
lds
aaa
dec
aad
roll
sbb
cltd
fnsave
repz
push
sarb
push
sbb
cmp
add
pop
sbb
test
sbb
jne
xor
lock
insl
shr
cmpsb
cmp
mov
mov
jo
loopne
je
xor
dec
ficompl
or
jl
jno
loop
inc
loop
in
inc
xchg
pop
mov
adc
jge
xchg
jp
pop
push
dec
push
push
sti
lahf
mov
push
xor
test
mov
and
rolb
lods
or
push
pop
xchg
adc
jo
sbb
sub
fiaddl
sbb
mov
mov
push
ljmp
push
addps
push
sub
insb
pushf
aas
sbb
xchg
and
loope
in
xor
adc
out
cmp
mov
lock
ss
xchg
test
jmp
inc
repnz
xor
pop
fcompl
ficomps
xchg
push
adc
bound
sarb
mov
aaa
subb
jle
push
mov
mov
out
mov
mov
and
and
js
and
mov
and
mov
cmp
push
and
cli
stos
xchg
fwait
adc
mov
xchg
scas
adc
fisubrl
or
xlat
int
add
adc
aam
xchg
add
dec
push
inc
add
and
pop
ja
and
je
sub
jb
movsb
insl
cmc
cwtl
jle
sbb
push
xor
push
ret
mov
sub
inc
pop
dec
aad
arpl
stos
fs
dec
mov
xchg
addl
sub
push
push
and
dec
je
stc
out
outsl
push
inc
movsb
adc
ret
imul
aas
mov
aad
xor
xlat
test
add
call
push
cmovno
adc
imul
std
std
xor
out
xchg
stos
cmc
xchg
pop
orb
out
xor
stos
mov
or
pop
pop
lea
filds
cmp
jo
addr16
jl
push
insl
stos
adc
aas
push
mov
mov
scas
mov
cli
filds
pushf
xchg
icebp
xor
leave
dec
or
rcr
repz
ret
mov
sub
jge
bound
imul
test
lret
fs
testb
lea
mov
xor
cmp
imul
jg
into
adc
pop
call
cmpsb
xchg
fiadds
or
popa
lret
push
out
cmp
or
pop
xchg
pop
mov
std
icebp
sbb
sub
mov
repnz
leave
test
in
sub
punpckhwd
ficoms
push
adc
adc
inc
imul
jo
xchg
enter
call
movsb
mov
pop
add
jle
pop
into
adc
outsb
sub
sbb
cmp
call
pop
scas
mov
pusha
xchg
xchg
cs
jecxz
jb
add
pop
adc
pop
mov
dec
or
push
shll
stc
aad
es
dec
mov
sub
orb
sub
iret
sub
cs
movsl
mov
sbb
jns
test
pop
je
out
cmc
xor
ret
loopne
je
inc
movsl
ss
sub
pop
lods
mov
test
shr
aas
insb
ds
sarb
jl
clc
in
jae
pop
and
xchg
jle
pop
lods
mov
add
sbb
jp
jbe
mov
popa
jge
negb
mov
jle
or
popf
adcb
hlt
pop
or
and
loop
adc
orl
fwait
push
cmp
cmpsb
jns
add
xor
add
arpl
cwtl
adc
ljmp
mov
mov
shlb
fistps
out
lea
xlat
fldt
in
das
lods
popf
sti
std
dec
or
and
punpcklbw
add
jb
shlb
sti
stos
and
test
add
lret
lods
ret
pop
mov
and
and
add
iret
jbe
inc
in
adc
je
inc
mov
push
add
jl
pmulhw
shl
mov
and
mov
lods
pusha
imul
repz
sub
lea
jg,pt
fisubl
cli
add
leave
adc
out
hlt
sbb
stos
inc
xchg
jo
repnz
repz
jmp
gs
pop
jecxz
push
cmp
cmp
xlat
rorb
negb
out
lock
in
inc
lds
aas
les
push
jne
mov
stos
jle
fidivrs
mov
inc
pop
sahf
clc
pop
test
jmp
jne
xor
xchg
fs
push
ljmp
adcb
jo
push
jge
push
inc
mov
mov
pop
je
inc
mov
pop
mov
adc
xchg
mov
jbe
xor
pop
test
mov
add
rorb
movd
xor
stos
sub
fsubl
or
add
dec
push
mov
hlt
cli
adc
push
fwait
bound
addr16
sti
pop
dec
mov
or
cmp
add
xchg
cmc
inc
cmpsb
add
jecxz
push
jmp
cmpsl
mov
mov
mov
jns
push
pushf
bound
scas
xchg
fbld
cld
sbb
cmp
xor
mov
iret
xchg
xor
ja
push
mov
mov
iret
pop
dec
aaa
jae
and
ror
aaa
ja
jbe
ror
push
cmpsb
movhps
subl
xlat
out
cmp
pushf
icebp
fpatan
add
adc
push
xchg
loope
sbb
pop
sub
jecxz
push
inc
cmc
mov
jmp
or
loop
mov
popa
inc
cli
test
cs
cltd
pop
fbld
imul
jbe
cmp
shll
in
movsl
mov
and
mov
enter
mov
inc
stos
sti
imul
mov
arpl
iret
cmpsb
in
fs
and
jg
mov
inc
fistps
daa
cmp
mov
aam
sbb
jmp
pop
dec
insb
cwtl
out
pop
pop
jbe
imul
mov
inc
sbb
out
mov
xchg
add
sbb
mov
xor
xchg
cmp
pop
pop
push
or
push
sbb
push
out
stos
and
jecxz
sahf
sub
xor
mov
push
push
adc
add
movsl
aaa
shl
cmp
cli
sub
je
and
nopl
inc
call
out
pop
pop
push
iret
lret
pop
cmp
xor
imul
mov
test
outsl
mov
jae
insb
movsb
loope
push
insl
mov
jmp
gs
int
adcb
xor
ret
dec
sub
and
jmp
mov
idiv
adc
jnp
xchg
or
pop
mov
in
mov
test
adc
test
dec
out
es
jmp
cld
insl
jmp
jo
mov
sub
or
sti
ds
imul
aaa
cmp
dec
cs
or
mov
pop
lret
inc
xchg
cmp
add
add
jge
xchg
fdivp
push
addr16
inc
loop
sbb
ja
pusha
xor
dec
fcmovne
ret
fucomp
jno
loop
mov
and
int
movsl
pop
push
mov
xor
mov
jecxz
jne
fistl
cs
push
iret
mov
xorb
jo
adc
ljmp
out
sbb
and
sti
inc
mov
cmp
ja
add
jle
js
mov
or
mov
mov
rcl
inc
scas
mov
mov
lds
into
mov
iret
xchg
jle
aam
or
sub
sahf
orl
mov
test
mov
mov
mov
xchg
cmp
ljmp
mov
jmp
out
or
fmul
xlat
inc
xchg
pop
xor
insb
daa
sbb
mov
mov
mov
or
push
pop
out
aad
sub
xor
fs
jnp
loope
xor
add
test
or
jns
and
leave
imul
xchg
xor
shlb
lods
lcall
xor
inc
ljmp
iret
dec
xchg
adc
sub
xor
aam
pop
out
jbe
movl
cmp
mov
sbb
dec
shlb
or
mov
mov
mov
mov
mov
insl
and
out
lods
out
cmp
scas
vmovq
mov
scas
jne
addl
popf
push
inc
adc
or
mov
das
addb
int3
leave
adc
sub
fsub
repnz
inc
movl
nop
nop
push
push
and
imul
mov
stos
pusha
ret
pusha
pop
test
popf
mov
push
jecxz
and
data16
test
fwait
addr16
inc
adc
xor
cmp
scas
mov
adc
mov
fildl
mov
js
cmp
pop
fistl
mov
test
or
push
push
cmpsb
mov
mov
imul
lret
add
inc
push
js
push
cmpsl
xor
daa
pop
lods
inc
add
dec
loop
jp
push
sbb
push
xchg
xlat
sub
xlat
loope
and
dec
mov
lahf
pop
cs
lahf
and
jp
in
in
or
enter
or
mov
mov
gs
mov
inc
and
test
jbe
stos
icebp
test
jns
out
lea
jb
cmpsl
aad
inc
notb
xchg
or
xchg
xchg
dec
add
sub
insb
or
jmp
in
push
cwtl
jno
push
call
cld
jl
and
mov
sbbl
stos
cmpsl
dec
dec
cmc
push
cmp
push
lds
out
pop
dec
clc
sbb
pop
stos
pop
xchg
fdivp
jo
cmp
jle
cmp
xor
loope
cmp
fdivs
pop
subb
arpl
jmp
insl
movsb
mov
insl
arpl
mov
lods
sbb
cli
jecxz
sub
movsb
cmp
cmpsb
inc
and
in
or
mov
mov
push
notb
add
dec
mov
add
cmp
sar
out
test
lods
push
inc
sub
pop
mov
fldenv
out
stc
fadd
and
das
cmp
cli
push
mov
mov
cmc
lret
adcl
mov
enter
inc
inc
xchg
or
js
shrl
mov
xchg
mov
xchg
cmp
pop
sbb
ret
sub
mov
addl
mov
lcall
add
and
jmp
out
cmpsl
jmp
xchg
pop
mov
test
xchg
ret
divb
cmp
cs
xchg
push
inc
pop
jbe
pop
ftst
mov
iret
leave
call
cmpsb
lret
movsb
dec
movsb
lcall
cli
dec
pop
stc
test
inc
mov
sahf
jl
dec
pop
test
pop
and
pushf
sbb
dec
scas
mov
xor
cmpsb
xchg
or
pop
gs
das
nop
adcb
add
scas
sbb
mov
dec
pop
dec
repz
mov
jae
daa
fdivrs
xchg
mov
lock
sub
jo
cmp
mov
or
mov
scas
les
pop
pop
cmc
stc
xchg
and
sbb
mov
hlt
stc
inc
jge
push
mov
cs
push
mov
sub
mov
mov
cmc
testl
int
adc
call
push
adc
jge
int3
jle
dec
mov
cmp
out
cs
insb
cmp
pop
insl
cmp
dec
inc
xacquire
imul
loope
lods
outsb
mov
jmp
test
loop
lahf
or
push
je
dec
mov
shlb
add
jno
mov
je
or
push
or
sti
orb
or
mov
add
sarl
sbb
or
pop
inc
jmp
ficompl
jns
mov
inc
int3
loopne
cmp
jb
lea
fcompl
jns
rolb
jns
dec
adc
xor
lods
mov
fnstsw
ja
loop
das
inc
xor
fstpl
sbb
push
mov
sbb
mov
shrb
mov
dec
ret
push
lret
add
aas
pop
mov
inc
lock
xor
mov
fidivs
pop
inc
pop
mov
inc
mov
sbb
daa
add
adc
in
add
subb
mov
sbb
rcr
inc
sub
push
and
out
jb
cltd
and
lds
fs
lods
insb
std
xor
pop
shrl
sub
roll
ret
in
ss
icebp
mov
es
stos
jns
push
stc
rcll
adc
int
and
pop
int
adc
inc
ret
fldl
add
popa
pusha
cmpsb
incl
jmp
pop
mov
and
xchg
or
mov
cmp
fidivrl
inc
imul
in
imul
inc
mov
or
add
fcmovne
and
mov
cli
jge
std
data16
push
not
xchg
push
lret
xor
scas
push
cmp
xor
jnp
jne
adc
mov
lea
sbb
push
cli
mov
fnstcw
ficompl
pop
leave
ds
jb
in
arpl
mov
fs
bound
cmp
iret
cwtl
xchg
xchg
cld
in
mov
jecxz
sbbb
and
shl
pusha
mov
es
fs
xchg
aaa
add
xchg
jns
fidivrs
cwtl
fsubrl
lea
add
out
ret
in
mov
mov
lock
mov
cmp
fimull
xor
es
nop
fisubs
bound
sub
je
jmp
inc
aaa
imulb
cmp
js
mov
add
icebp
mov
jbe
inc
xor
rcrl
push
scas
inc
insb
rolb
inc
xchg
ret
xchg
xor
ret
out
dec
ss
push
in
xchg
data16
cmp
push
loopne
mov
inc
rcll
sbb
lahf
push
adc
sbb
outsl
fnstenv
or
adc
enter
hlt
jae
ljmp
or
push
aaa
shl
mov
sub
out
sub
movsb
lret
out
rcr
pop
fmuls
popf
adc
push
decb
pushf
sbb
mov
lcall
cmp
in
in
rorl
movsb
xchg
int
ja
hlt
cs
inc
mov
jg
es
idivb
mov
mov
adc
nop
es
test
sbb
sbb
jb
call
inc
jo
or
rcr
pop
mov
dec
cmp
pop
adc
or
mov
inc
inc
add
outsl
sub
cmp
iret
push
call
dec
sub
clc
lea
aaa
sti
mov
and
cmp
mov
mov
rorb
repz
push
orb
pop
push
movsl
int
mov
cld
sbb
cmp
pop
ja
jae
outsl
jnp
lcall
fsts
in
sbb
mov
add
sti
adc
push
arpl
sub
out
mov
dec
hlt
imul
call
out
jo
pop
aaa
hlt
arpl
jo
nop
and
cli
out
shlb
loopne
push
lret
sub
push
pop
inc
jmp
mov
inc
add
shll
cmp
xor
mov
push
jmp
incb
xchg
sbb
addr16
pop
cmpsb
xlat
ljmp
inc
xor
push
mov
lret
mov
push
ljmp
xchg
in
xor
lock
fwait
lds
fsubrp
push
mov
cmp
pop
mov
xor
aam
xor
sbb
sub
data16
test
xor
adc
mov
shll
add
ret
mov
lret
mulb
mov
aaa
les
cmp
xchg
sbb
xor
loop
cmp
or
dec
repz
or
fs
cwtl
lcall
jno
dec
lret
jae
add
cmp
push
rcl
xor
xchg
insl
xor
ficompl
test
pop
neg
arpl
cmp
dec
nop
scas
fmull
pop
mov
dec
pop
add
and
fbstp
mov
arpl
iret
ret
roll
sbb
lret
push
ds
ret
movsl
into
jns
xor
icebp
sub
loope
sbb
dec
cmp
add
adc
dec
inc
inc
imul
pop
leave
test
mov
dec
notb
fucom
inc
push
jl
dec
sub
pslld
stos
lods
dec
mov
xor
push
icebp
xor
bnd
pop
out
test
jne
out
movsb
jbe
sbb
dec
or
std
jg
rcrb
into
push
mov
fcmovb
imul
pop
addr16
mov
push
mov
sub
lds
dec
dec
imul
out
cmp
mov
loop
call
and
rclb
dec
push
inc
in
ret
push
sbb
dec
push
ds
sbb
mov
cwtl
and
jg
int
jmp
lods
push
dec
adc
pusha
andl
mov
or
aam
sbbl
inc
push
mov
test
out
pusha
ljmp
push
inc
jge
inc
cltd
cld
iret
push
loopne
out
shrb
or
and
xchg
pop
jae
cmpsb
loop
popf
sbb
outsl
icebp
add
repnz
cli
jnp
ja
test
int
jp
mov
dec
sub
shlb
mov
xor
jp
mov
inc
jae
pop
pop
dec
xor
add
inc
test
jae
into
sbb
leave
jnp
mov
mov
or
ss
push
int3
scas
jl
dec
lods
sub
xor
or
fwait
mov
rcrb
scas
sti
mov
mov
pop
test
or
aad
sbb
mov
pop
xchg
jo
cmp
push
jecxz
imul
xchg
rorl
loopne
cmp
scas
pop
and
cmc
fldt
loop
inc
mov
stos
mov
mov
andl
leave
into
mov
dec
fdivs
stos
pop
or
das
pop
out
xchg
lds
xlat
stos
jbe
iret
xchg
and
daa
fistl
adc
inc
dec
sub
arpl
xchg
adc
sti
adc
lea
jno
add
aad
sub
mov
pop
into
in
gs
loopne
clc
mov
fstpt
lods
mov
xchg
js
jle
inc
sbb
xchg
fwait
shr
jns
hlt
push
and
pop
xor
jns
clc
xor
pop
cmc
cmpsl
aad
call
call
push
jae
xor
insb
adc
adc
inc
stos
sub
or
lcall
aas
nop
xor
xchg
scas
in
ss
sub
jnp
rcll
sahf
sub
clc
clc
cmpsb
sarb
int
shl
mov
add
sbb
add
out
rorl
xor
sbb
jle
adc
mov
sbb
cltd
repz
mov
sub
pusha
pusha
add
fnstsw
mov
mov
mov
inc
test
leave
adc
mov
cmp
add
pop
sbb
hlt
jb
jb
push
popf
lret
negl
sbb
mov
lahf
pushf
movsb
ret
mov
mov
shll
mov
orb
roll
cmp
pusha
xchg
inc
cmp
in
pop
mov
rcl
in
pusha
adc
push
dec
in
push
js
cmp
adc
jbe
inc
repz
ret
or
out
dec
mov
push
add
adc
pop
sti
pop
jae
enter
gs
sub
out
mov
jbe
inc
lods
rcl
jge
fsubs
push
das
xchg
js
jg
je
aam
sub
xchg
lods
stos
loop
jg
mov
xchg
shll
call
lcall
mov
cwtl
dec
mov
jecxz
fsubrl
shl
clc
inc
pop
mov
fcomps
lret
mov
mov
imul
jp
outsb
push
inc
clc
xchg
dec
adc
adc
mov
xchg
jecxz
cmpsl
les
dec
rcrl
pop
cli
sub
in
lods
dec
sbb
xor
mov
shr
nop
sahf
jns
jnp
and
addr16
repnz
sti
aad
mov
jl
pop
xor
loop
addr16
mov
call
push
fs
pushf
or
movsl
mov
mov
push
jnp
aam
mov
pop
xchg
lret
fcmovnbe
mov
jns
into
or
aam
mov
stos
aaa
push
mov
leave
sub
jle
cmp
add
test
cmp
mov
leave
shll
xchg
cltd
fs
fs
mov
xchg
arpl
mov
loop
adc
repnz
adc
out
sbb
in
imul
out
int
lcall
pop
pop
lcall
mov
popf
imul
mov
adc
lcall
sti
les
gs
jae
mov
and
dec
and
and
js
xor
and
aad
in
push
imul
aaa
mov
mov
mov
nop
in
imul
pop
lods
ds
add
in
imul
cld
outsl
enter
scas
ss
ret
pop
push
loopne
je
cld
mov
clc
jnp
pop
lret
mov
outsb
rorl
lock
int3
sub
sub
dec
mov
lock
in
test
fadds
cmp
inc
fnstenv
dec
cmpsl
dec
dec
or
xchg
gs
lods
shll
notl
out
ja
pop
mov
inc
push
mov
test
adc
mov
fs
das
std
push
lods
push
mov
xor
shlb
fwait
fs
testb
fsubl
sti
or
mulb
mov
mov
adc
iret
sahf
pop
xor
mov
pusha
cmc
nop
jo
push
pop
sar
fsubr
or
adc
ret
xchg
mov
mov
xchg
out
sbb
movl
lahf
mov
es
push
out
dec
dec
in
call
in
cmpsl
movsb
fwait
ret
cmp
and
adc
out
jle
pop
pop
pushf
xor
add
in
cmp
mov
lahf
shrb
push
in
push
test
ja
leave
inc
mov
mov
jnp
faddp
xlat
fsub
in
mov
add
mov
xor
push
out
mov
movsl
adc
inc
cmpsb
inc
dec
add
das
push
cmp
pop
add
pop
sbb
je
cltd
int
arpl
pusha
rcr
andl
arpl
jle
mov
mov
mov
mov
mov
or
pusha
adc
inc
clflush
and
xchg
sub
jecxz
cmp
jo
fimuls
push
lock
bound
lds
out
mov
es
lds
lods
rcll
aam
jmp
adc
movsl
cmp
jl
xor
in
sti
scas
orb
outsl
mov
lahf
enter
pop
mov
lea
jns
push
cmp
dec
bound
fsubl
xor
mov
mov
sub
adc
sub
jno
sbb
adc
movsb
cmp
push
lahf
pop
arpl
out
cmp
and
out
pop
shlb
int
mov
dec
enter
popa
clc
inc
adc
mov
mov
aaa
jmp
xchg
pop
jle
pop
and
xor
imul
lahf
push
aad
jg
cmp
int3
imul
out
jge
icebp
jns
dec
ja
ja
sbb
jbe
sbb
test
adc
outsb
dec
scas
bound
mov
adc
sub
test
mov
pop
test
mov
and
and
mov
mov
int3
adc
int
xchg
jae
or
sub
jl
mov
add
or
movsb
pop
jmp
xchg
aas
vpsllq
push
outsb
lcall
sub
xchg
leave
push
and
xchg
rorb
in
sub
mov
add
xor
jno
leave
push
sub
jbe
and
push
and
pop
fstpl
inc
in
aad
cmp
aaa
call
loop
add
add
subl
pushf
je
shr
mov
pop
pushf
sub
inc
das
mov
shrl
or
sti
lock
mov
mov
push
jle
dec
cltd
cmp
rorl
jne
insb
inc
call
adc
pop
xor
jnp
adc
fistpll
out
xchg
push
add
xchg
ficoms
mov
push
scas
sar
pop
repz
call
int
sub
mov
mov
or
xchg
aad
or
pop
xchg
les
xor
dec
mov
pop
orb
rcll
push
or
add
outsl
mov
jns
out
jno
fidivs
cltd
sbbl
xchg
add
test
dec
into
shll
ret
shll
sahf
xchg
jge
aam
or
push
pop
sub
sub
push
je
cmp
popf
out
stc
movsl
push
dec
add
xor
push
fwait
pop
jmp
jae
mov
jne
into
scas
fmul
or
sbb
push
mov
jp
push
in
add
and
pushf
movsb
in
bound
mov
xchg
in
imulb
std
call
iret
shrl
loopne
cwtl
adc
ss
outsb
xchg
or
insl
xchg
fwait
mov
pop
jle
pop
lcall
es
mov
aad
rorl
dec
int
dec
adc
je
xor
add
cli
cld
repz
push
cs
aad
xor
movsb
jb
fnstsw
imul
shrl
mov
imul
or
pop
scas
mov
bound
dec
mov
lods
adc
repz
in
movsb
jo
bnd
test
mov
aas
mov
outsb
or
xchg
cbtw
test
cmp
insl
pop
data16
cmpsb
andb
cmp
cli
sbb
loop
add
cltd
sbb
outsb
gs
movb
pop
sub
aad
cwtl
pop
lods
sbbb
aaa
jb
pop
push
rcrl
and
cmp
mov
xchg
aaa
test
sahf
lret
jae
icebp
loope
je
jbe
cmpsl
xlat
jb
loopne
xor
push
int
fdivrs
mov
pcmpeqb
xor
push
call
inc
aam
mov
scas
mov
push
imul
ljmp
sbb
mov
sub
push
cmp
cwtl
aad
dec
paddb
loope
jne
add
mov
divb
or
xchg
jle
xor
rolb
xor
lods
inc
mov
pop
pop
mov
inc
xchg
fidivs
scas
xor
lods
fdivrl
xchg
incb
test
test
out
mov
inc
jmp
sub
mov
daa
adc
pop
xor
xchg
pop
je
xchg
mov
lock
lahf
loopne
mov
lret
inc
pop
or
dec
ds
lret
mov
ljmp
sbb
fwait
cs
push
hlt
ds
jg
dec
jbe
cmp
add
inc
adc
pop
arpl
cmp
add
or
adc
sbb
es
loopne
int
cmc
push
inc
push
decl
je
call
jmp
add
pop
pop
adc
rcll
jecxz
mov
ret
sub
cmp
pop
push
inc
jmp
dec
popa
cmp
icebp
fisubl
pop
jmp
shrl
sub
adc
shlb
mov
xor
shr
push
xchg
mov
test
loope
pop
mov
jle
cmp
ljmp
or
mov
int
es
xor
inc
pop
in
dec
add
lds
mov
ret
gs
das
gs
dec
les
lahf
aas
into
push
cmp
sbb
fwait
cltd
push
out
mov
test
rcll
pop
mov
mov
movsb
push
and
inc
xchg
mull
sbb
xchg
xchg
xor
jne
out
add
lds
das
lods
xor
mov
ss
inc
add
push
mov
daa
push
jae
push
stos
pop
inc
push
add
call
inc
push
mov
ja
inc
icebp
sbb
fs
inc
or
int
xor
inc
out
inc
cltd
push
sub
loope
stc
adc
clc
pop
xchg
loopne
sub
imul
andb
shlb
mov
insb
and
lcall
stc
and
dec
in
cmp
pop
mov
jmp
xor
pop
in
call
outsl
in
outsl
repz
ret
and
lret
loope
push
mov
cs
sbb
inc
pop
das
xchg
std
mov
in
xchg
mov
adc
mov
loop
fdivrl
imul
push
int3
xchg
push
cltd
sahf
in
scas
add
sbb
xlat
lahf
mov
fidivrs
xor
arpl
outsl
in
enter
inc
in
rcrl
inc
iret
and
inc
call
lret
cmp
pop
dec
add
sbb
mov
add
sar
stc
sbb
mov
out
cmpsb
out
and
aam
shl
or
sbb
mov
mov
fnstenv
jns
inc
out
stc
mov
xchg
mov
arpl
ljmp
jge
aaa
jge
sarl
pop
int3
jecxz
lods
mov
dec
xchg
lea
addb
pop
inc
shl
icebp
ljmp
xor
dec
xchg
sti
sbb
nop
les
mov
test
or
pop
jge
int3
or
je
enter
sti
mov
mov
movsb
mov
sub
pop
adc
enter
divl
push
fs
push
test
mov
insl
xchg
and
jle
sub
in
sbb
int3
int
scas
push
jle
pusha
adc
fstps
test
js
mov
push
pushf
lret
in
add
andl
mov
jno
mov
gs
adc
call
mov
or
add
pop
sub
mov
inc
test
leave
cmp
mov
cmpsb
jle
fwait
jle
test
cld
test
ret
adc
test
pop
mov
nop
mov
mov
pushf
insb
enter
push
idivl
test
jg
movsl
call
lea
pop
pop
les
dec
fistpl
jns
jmp
shll
test
adc
and
cmp
ljmp
cmp
notl
mov
sar
daa
repz
dec
pop
popa
mov
roll
outsb
inc
xor
out
outsl
data16
and
pop
incb
inc
fimull
push
outsb
clc
mov
test
xor
and
xor
lods
push
push
cmp
adc
das
or
push
fcomps
sti
fstps
sbb
ljmp
jge
jns
shlb
shrl
cmp
add
cltd
stc
dec
scas
out
aam
xlat
sti
cmp
pop
xor
stos
sbb
call
leave
sub
andb
hlt
scas
aaa
jne
jle
es
mov
shl
stos
adc
mov
add
sub
dec
xchg
fdivrs
leave
imul
jo
xor
jnp
add
xchg
aaa
rcrb
aas
dec
jge
sti
push
int3
mov
mov
pop
ret
inc
sahf
fsubrs
int
jne
push
lds
insb
fdivrs
mov
loopne
in
mov
add
in
cmpsl
mov
mov
xor
jmp
xor
xor
in
inc
rorl
aam
push
jns
sbb
push
mov
push
insl
lock
mov
mov
cli
mov
pop
mov
jbe
pop
iret
roll
enter
xchg
ss
imul
xchg
and
and
mov
pop
cs
jmp
jbe
pop
pop
xor
adcl
cs
std
insl
lret
or
sub
ja
fwait
or
out
aam
imul
and
hlt
arpl
jae
xor
dec
enter
push
andl
push
idivb
pop
nop
push
mov
pop
stos
ds
movsl
add
in
dec
test
ja
insl
jo
shlb
inc
cmp
xchg
insb
push
cmpsb
mulb
push
push
cmpb
jmp
sarb
subl
ss
sub
add
xor
xor
add
call
cmp
dec
lcall
dec
xor
jno
pop
push
icebp
and
aas
lahf
lahf
sbb
and
aas
xlat
mov
cmp
mov
les
lods
repz
push
lcall
std
mov
dec
mov
xchg
inc
pop
aad
adc
mov
fcomps
mov
pushf
aas
clc
push
inc
adc
aas
xchg
xor
or
rcll
xchg
jbe
push
sub
adc
sahf
test
sub
sbb
dec
es
push
jp
fists
rolb
int
pop
and
xchg
mov
je
repz
in
cmc
dec
push
push
sarb
ds
push
sbb
pushf
sti
xchg
cmp
roll
ja
jb
mov
test
adc
xchg
jae
testl
push
adc
nop
jb
xor
pushf
push
adc
mov
jp
mov
or
out
cmp
scas
stc
out
stos
xchg
test
cmc
inc
mov
cmp
jae
jmp
cmp
push
push
cmpsb
and
jo
or
filds
jp
and
imul
jno
pop
je
fnstcw
fiadds
mov
nop
sbb
mov
insl
mov
inc
test
mov
mov
adc
repnz
movsl
inc
iret
inc
popf
test
mov
jmp
mov
dec
jg
push
arpl
mov
clc
iret
jge
je
pop
aaa
insl
stc
negb
testb
sbb
shlb
sub
mov
rorb
or
lahf
mov
rcr
jne
mov
push
lea
push
pop
pop
jge
adc
sub
cmc
cs
push
adc
and
or
mov
leave
fs
pop
mov
inc
shll
and
cwtl
inc
mov
jo
test
dec
push
adc
lods
cmp
dec
sub
adcl
addl
cmpsl
xlat
test
leave
je
fs
xlat
sub
orb
adc
pop
mov
xor
cwtl
and
mov
add
cmp
rcrl
idiv
aas
mov
pop
push
outsl
arpl
ljmp
cs
cs
enter
lret
sub
aaa
rcll
or
imulb
mov
sub
add
sbb
adc
cltd
popf
xchg
xlat
leave
push
sbb
cltd
push
push
stos
bnd
pop
push
and
lret
imul
xor
adc
mulb
nop
loope
or
lds
cmc
jge
add
jp
fdiv
adc
in
lods
mov
push
outsb
incb
das
mov
xor
xor
es
and
int
pusha
ret
fisubs
stos
inc
loop
jle
popf
xlat
adc
pushf
out
bound
in
popf
mov
bound
sub
fcmovnu
lods
mov
jne
adc
js
int
iret
mov
mov
dec
jmp
xor
sbb
sbb
and
mov
cmp
or
fimull
cltd
icebp
xchg
lret
insl
mov
pop
xchg
std
push
or
add
mov
fsubl
in
dec
mov
mov
xor
jp
into
mov
sti
insl
int
andl
and
fildl
xchg
mov
scas
jmp
ja
sti
outsb
imul
pop
push
movsb
xor
mov
lret
jge
movsb
clc
enter
movsb
xchg
jge
cmpsb
dec
mov
dec
scas
lods
movsl
xchg
lock
iret
aaa
cs
test
andl
cmp
mov
cmp
int3
lods
cmp
adc
je
pop
or
inc
lods
ss
adc
cmc
in
dec
sarl
aaa
sub
ljmp
and
aaa
pop
inc
xchg
mov
sub
pop
xchg
loope
insb
pop
mov
inc
loope
and
out
xor
addr16
orl
fs
loop
je
movsl
fiaddl
shl
into
movsl
add
sbb
adc
pop
movsl
daa
les
adc
loopne
sub
fdivrl
ja
inc
cmc
scas
ja
movsl
aaa
push
dec
sarb
aas
sbb
cltd
leave
cld
rcrl
inc
sbb
imul
mov
pop
loop
je
aaa
lret
daa
pop
jle
cmp
mov
inc
lds
push
mov
scas
dec
xchg
and
or
fisubrs
jp
psadbw
adc
lods
dec
fcompl
divb
pop
inc
mov
les
push
jecxz
push
dec
out
push
cmp
jne
dec
sbb
inc
adc
roll
out
or
lds
les
js
dec
jmp
lahf
js
dec
fs
lods
xlat
fcoms
out
lret
into
push
mov
cmp
mov
out
jne
scas
push
or
repnz
mov
out
xlat
jo
loope
add
push
jnp
sub
fidivl
jp
in
pushf
rdmsr
inc
jbe
or
shr
stos
xchg
fwait
scas
or
out
int3
ljmp
addr16
or
scas
shrl
cmp
ret
mov
adcb
sub
push
ret
fsubl
out
jns
xchg
jno
in
sbb
mov
pop
jmp
ret
mov
sbb
ret
mov
pop
out
pop
nop
lds
test
jne
jne
xlat
mov
pop
inc
sbb
dec
jl
mov
stos
xchg
jae
dec
mov
fidivl
jge
jp
add
les
ficomps
aaa
aaa
movsb
and
out
xor
hlt
mov
lret
test
push
adc
sahf
and
cmp
xor
cmp
and
popa
aam
jecxz
xchg
ss
or
in
outsl
dec
stc
inc
int3
adc
adc
hlt
or
mov
in
adcl
and
mov
loopne
mov
dec
je
mov
lods
test
and
lret
test
bound
add
aas
or
loopne
imul
cmp
sbb
xor
cmp
clc
dec
cs
inc
pop
fdiv
aaa
mov
clc
ljmp
pop
scas
dec
xchg
inc
scas
pusha
xor
mov
cmp
das
cld
fsubr
insb
ljmp
mov
xor
cmp
cmp
enter
xchg
dec
into
cwtl
bound
pop
cmp
mov
aam
push
inc
hlt
in
cmc
sub
adc
pushf
lods
jg
inc
icebp
es
xor
imul
cmc
jno
in
adc
or
mov
push
aas
mov
ret
les
xor
popf
push
aad
call
cltd
adc
clc
mov
mov
sbb
cmpsb
sub
jl
adc
call
cltd
dec
psubusw
inc
sub
stos
adc
ljmp
pop
icebp
or
pop
aaa
fidivrs
leave
dec
mov
dec
mov
jnp
sar
mov
fwait
imul
lahf
inc
xchg
iret
rorl
jns
ja
ja
aam
cltd
push
or
cld
sub
adc
fmul
xor
out
jl
xor
and
push
xor
pop
sub
mov
sbb
dec
fwait
push
shr
push
loope
inc
xor
push
xor
mov
outsl
and
rorb
mov
test
mov
inc
push
dec
push
adc
and
testl
filds
ss
fadd
mov
clc
icebp
scas
out
mov
inc
and
mov
jl
ret
nop
sbb
call
ljmp
sub
sub
ds
ljmp
ret
mov
cwtl
mov
or
ljmp
xor
push
add
fisubrs
xchg
scas
insb
nop
movsl
arpl
ja
sub
in
imul
out
outsl
in
inc
leave
push
or
dec
or
mov
mov
aam
lret
jo
dec
cli
dec
js
inc
sub
sub
cmpsl
add
inc
pusha
xchg
negb
loope
xor
adc
add
mov
in
fdivrs
and
stc
test
jle
push
jno
sub
or
fisttps
out
cmc
lcall
fstpl
jge
push
fwait
add
lock
cmp
or
cmp
dec
add
out
xlat
dec
mov
outsl
aas
mov
pop
push
ret
or
ret
xchg
ss
fmuls
mov
rolb
stos
push
jns
lods
fists
xchg
xor
add
insl
add
push
sbb
stc
inc
push
xor
es
mov
push
sbbb
cmpsl
mov
in
add
cli
inc
lea
lcall
push
test
pop
xor
sub
inc
push
jecxz
add
mov
jp
push
pop
fstpl
pop
sarl
push
sbb
lret
adcl
adc
mov
loopne
rorb
jnp
xchg
orl
repz
xor
xor
cmpsb
cld
inc
dec
js
jecxz
sub
or
loop
aad
insb
pop
inc
inc
imul
add
nop
xor
push
jno
mov
inc
adc
test
jb
pop
inc
cmp
hlt
xor
or
push
aaa
dec
in
aas
cwtl
and
inc
in
cmpsb
xor
jl
imul
jmp
mov
jg
sub
mov
jbe
cmp
out
mov
mov
inc
scas
push
mov
cmp
dec
dec
inc
outsb
pusha
cli
ljmp
sarb
dec
repnz
pop
xchg
pop
dec
test
add
scas
call
add
stc
pop
mov
dec
cmp
jnp
adc
in
mov
mov
dec
add
test
loope
lahf
cwtl
mov
aad
test
les
sbb
cltd
xor
or
das
outsl
adc
je
or
inc
dec
fadd
fmull
pop
movb
cltd
sbb
lea
in
loope
mov
mov
frstor
xchg
adc
stos
les
inc
ljmp
pop
mov
andl
mov
xchg
mov
fmul
loope
cmp
pop
pop
sbb
aad
js
sub
enter
xchg
pop
ja
add
jns
in
pop
lahf
mov
or
scas
xor
sti
aas
lret
lret
mov
and
into
adc
sub
fdiv
stc
fwait
daa
repnz
arpl
dec
shrb
es
lock
xchg
jnp
inc
test
aaa
hlt
jmp
xchg
jl
sti
cmp
adc
mov
mov
jg
test
in
lods
mov
add
adc
cmp
sub
out
dec
dec
rol
call
arpl
mov
mov
and
arpl
jecxz
inc
xor
aad
ja
cmp
mov
push
scas
or
mov
cmp
popf
test
xchg
push
adc
pop
repz
pusha
test
ret
jb
in
mov
lds
mov
xlat
fadds
adc
dec
lods
rol
inc
cmp
cmp
or
mov
adc
adcl
xorb
int3
ja
adc
out
add
outsl
push
cmpsl
and
xor
mov
mov
movsb
aas
mov
xchg
jb
je
mov
mov
test
hlt
mov
into
jecxz
mov
lahf
xchg
cltd
out
pop
jp
mov
jns
fcoms
push
push
pop
jb
xlat
adc
cmp
sub
cmp
dec
lods
vshufps
cmp
cs
mov
jecxz
jmp
inc
imul
nop
mov
pop
push
divl
xor
rolb
sbb
mov
mov
bnd
or
jnp
jnp
cwtl
pushf
shlb
push
fwait
out
mov
cmp
arpl
push
jecxz
out
sbb
cwtl
xchg
shll
insb
aas
mov
pop
mov
inc
notb
sti
or
mov
jg
push
sub
and
fstps
mov
cmpsb
add
cmpl
inc
and
pushf
cmp
mov
mov
cwtl
jle
sbb
xchg
mov
stos
push
mov
scas
dec
dec
rcl
test
sub
sbb
cld
adc
test
aaa
into
mov
movsl
test
jne
out
push
xchg
dec
mov
xor
mov
sahf
shll
lret
stos
pcmpgtw
or
inc
mov
mov
xlat
jae
inc
lods
xlat
hlt
xchg
mov
aam
idivb
inc
cmpsb
cmp
inc
aam
aad
int
sub
clc
ret
cmc
jbe
shl
mov
mov
push
mov
push
pop
fdivrs
jb
mov
lods
shlb
dec
sub
sbb
or
xlat
push
popa
dec
les
mov
adc
lret
xchg
or
jmp
or
lret
movsl
sub
mov
sbb
add
push
push
jge
dec
call
xchg
insl
mov
iret
js
jae
into
mov
dec
int
in
inc
test
test
pushf
rorl
arpl
ds
nop
pop
fdivs
sti
xor
repz
inc
aad
shl
xlat
fbstp
mov
jle
test
cmp
iret
and
sub
cmpl
clc
ret
dec
pop
mov
fstpl
mov
add
and
jne
out
push
xchg
mov
jmp
xchg
fstps
movsb
outsb
xchg
ret
fiaddl
cmp
cltd
mov
test
cmp
or
xchg
shll
mov
pop
mov
pop
jmp
mov
jmp
das
iret
lcall
lea
loopne
jge
inc
jle
jp
or
fwait
and
inc
aam
adc
pop
push
pop
jns
pop
fstps
ja
pop
pop
call
es
dec
jns
dec
daa
or
testl
xchg
sub
pop
enter
add
aaa
pop
add
int
lods
bound
add
inc
lahf
dec
nop
sub
aam
push
filds
pop
or
call
mov
add
imul
add
clc
push
or
jmp
xorl
xor
jmp
ss
push
xchg
xor
out
lea
push
lea
sbb
cs
push
test
jno
mov
sarb
xorb
jge
mov
popf
jno
pop
frstor
and
das
xchg
dec
lock
sti
add
xchg
mov
movsb
popf
pop
jne
out
repz
sbb
loop
repz
pop
push
movsb
mov
mov
ficomps
jmp
xor
sub
mov
idivl
pop
scas
pop
dec
or
mov
push
in
aad
lods
in
mov
push
daa
pop
mov
or
popa
daa
and
pushf
xor
call
jg
jae
aam
movsl
and
jb
ljmp
outsb
xor
popa
dec
movsb
xlat
and
dec
mov
sub
inc
imul
popa
xchg
pop
enter
inc
mov
in
pop
sub
mov
xor
fbstp
nop
adc
inc
icebp
cmp
cltd
cmp
sbb
leave
or
mov
aam
mov
fiadds
mov
mov
sub
xor
int
leave
mov
aas
clc
push
ret
cs
sar
pop
jae
cmp
fxch
out
popf
pop
cmc
jns
jnp
push
imul
sub
mov
mov
testb
cmpsb
es
frstor
dec
or
dec
mov
or
popf
xor
gs
into
xor
sbb
pop
inc
lods
test
movsb
dec
outsb
clc
lret
lahf
adc
ds
in
decb
test
fisttpll
arpl
test
fistpl
and
jle
mov
jb
dec
xchg
xchg
sahf
pop
loope
out
aas
loope
rcrl
jge
popa
push
sub
push
mov
push
inc
popl
cmc
xor
jne
mov
out
mov
xchg
loopne
cmc
sbb
push
jae
pop
mov
jo
jb
dec
jmp
mov
mov
out
repnz
sbb
mov
and
in
loopne
jecxz
sub
mov
pop
int3
add
stos
and
lret
jbe
sbb
jg
or
inc
cmpsl
pop
dec
xchg
out
adc
or
mov
add
pop
pushf
and
scas
sbb
push
gs
xor
ret
add
dec
int3
adc
insl
repnz
mov
sbb
push
adc
dec
aam
sbb
iret
sbb
xor
push
and
inc
nop
pop
repz
sbb
sbb
inc
jb
jae
push
dec
dec
or
lea
icebp
negb
into
aam
mulb
shlb
stos
daa
sub
lahf
inc
hlt
or
inc
fs
call
lahf
fwait
lcall
aad
leave
xchg
adc
lods
xor
int3
jp
fucom
add
sbb
xor
push
push
lret
pusha
testl
ds
ss
adc
out
jp
mov
mov
mov
je
adc
out
xor
int3
and
and
sub
in
bound
popa
rclb
adc
mov
aam
sbb
xchg
pop
sbb
xor
push
lods
dec
jo
jmp
pushf
push
cwtl
pop
jnp
mov
add
icebp
pop
into
sahf
ss
cmp
test
adc
test
mov
mov
dec
cmp
pop
mov
xchg
push
push
mov
stos
imul
outsb
add
lds
adc
cwtl
pop
fwait
dec
sbb
adc
shlb
outsb
jecxz,pt
roll
xchg
or
inc
bound
inc
mov
jns
stos
aam
imul
jo
xchg
shrl
clc
call
or
orl
std
jns
rorb
in
inc
adc
inc
in
lret
stos
jp
aas
sub
stos
cmpsl
sahf
lahf
in
inc
lea
mov
loopne
push
xchg
mov
jbe
aaa
mov
rcrl
neg
mov
js
adc
xchg
lret
mov
pop
dec
cmp
cld
push
pusha
out
jl
xor
adc
call
jbe,pn
mov
push
lds
ret
mov
rcr
test
daa
lods
cmp
or
xchg
jge
and
mov
sti
lret
repz
mov
sbb
mov
out
xor
gs
jae
lds
jp
lods
cwtl
lods
iret
lcall
adcb
in
shrl
adc
les
scas
das
inc
jo
inc
push
dec
and
sbb
push
xchg
and
andl
out
mov
scas
loopne
push
fwait
sahf
xorl
movsb
mov
icebp
enter
mov
pop
push
cmp
cld
mov
out
inc
shll
and
out
aad
mov
nop
inc
js
insb
add
push
jne
addr16
or
das
mov
in
repz
jns
adc
push
mov
testb
jbe
int3
add
push
dec
pop
je
iret
mov
sbb
outsb
jmp
adc
sub
popa
mov
xchg
cli
cld
jmp
dec
xor
inc
int
fisubrl
dec
out
add
fwait
repz
jnp
inc
pop
repnz
adcb
sahf
stos
mov
mov
add
add
xor
je
imul
lea
ja
dec
out
vmptrld
adc
mov
mov
loopne
popf
stos
cli
and
inc
sub
ljmp
data16
outsb
cmp
sub
inc
jb
cmc
adc
lods
cmp
xlat
orb
xlat
jae
cmc
sti
mov
insb
push
mov
adc
inc
in
lods
rcrl
xlat
iret
ljmp
rcll
andl
stos
sub
dec
xor
mull
nop
aas
inc
hlt
mov
data16
sub
pop
cmp
dec
outsb
mov
out
stc
inc
mov
sub
mov
mov
mov
pop
fistpll
gs
adc
add
or
adc
mov
sbb
ds
cmp
shrl
xor
push
sub
mov
xchg
sbb
out
iret
cmp
xor
xchg
in
mov
outsb
inc
xchg
outsl
inc
pusha
in
mov
icebp
imul
insb
mov
subl
rorb
add
popa
jle
lahf
test
loopne
mov
scas
inc
rorb
shr
iret
inc
push
mov
mov
or
jp
into
scas
jnp
aad
int3
or
and
add
xchg
jnp
xchg
mov
mov
sbb
shr
mov
fdivr
push
roll
mov
push
cltd
inc
add
out
js
lock
cmp
gs
mov
dec
fisubrs
aad
aas
aaa
lret
push
mov
mov
and
sub
sbb
aad
and
ja
addl
ja
pop
push
inc
jae
gs
outsb
shlb
sahf
pop
adc
sub
jmp
fdivrs
dec
stos
dec
stos
push
mov
lret
aam
aas
jnp
mov
popf
jmp
mov
inc
icebp
rolb
pop
xchg
mov
sbb
insl
pop
push
or
or
nop
cmp
push
xchg
icebp
lcall
scas
aad
xchg
hlt
scas
mov
cmp
imul
loope
adc
pop
jg
push
jb
dec
test
add
aas
sub
xor
ret
mov
inc
sbb
dec
dec
cltd
in
jns
ret
insb
mov
and
adc
sub
out
xchg
or
out
pop
sbb
sbb
fildl
mov
lret
movsb
std
mov
scas
mov
jb
sti
mov
or
mov
ret
sarb
ss
insb
dec
xchg
imul
enter
add
xchg
dec
mov
mov
jl
insl
aam
mov
pushf
mov
push
scas
cmp
mov
dec
outsl
mov
xchg
jne
adc
shrb
movsl
mov
test
xor
imul
test
and
sahf
test
push
add
pushl
pusha
mov
push
test
add
ret
dec
inc
lds
push
cs
sbb
jmp
inc
icebp
popa
mov
popa
ss
stos
jmp
lods
cmc
xchg
xchg
pop
std
add
adc
iret
sbbb
add
rolb
sbb
fiadds
ljmp
shrl
push
pop
xchg
push
jge
cmp
mov
or
nop
jne
push
out
sub
sahf
or
jns
push
cs
out
jo
push
xchg
insb
or
or
gs
out
lret
push
xor
xor
arpl
movsb
and
jns
xchg
incl
add
pusha
xor
fstpl
ficompl
xchg
lea
xchg
stos
pusha
lods
mov
jge
pushf
adc
jb
sbb
sbb
addr16
clc
xlat
xchg
xchg
mov
nop
aaa
sti
push
bound
push
mov
fxch
cmp
dec
and
lret
cltd
add
int3
icebp
pop
imul
pop
xchg
cmpsb
pop
add
ret
cld
in
lret
les
jnp
mov
pop
jmp
arpl
and
les
xor
lret
mov
aaa
lods
sti
jp
jg
ret
or
cmpsl
xor
add
jae
sahf
call
jecxz
mov
push
in
les
mov
xor
sbb
pop
xchg
lock
sub
cmp
lret
aam
push
or
push
push
mov
push
popa
enter
insb
cmp
mov
imul
lret
bound
jne
inc
jb
jb
jmp
or
mov
mov
or
push
inc
add
clc
inc
pop
cmp
repz
mov
xor
jbe
stos
inc
int3
cli
lahf
push
or
xor
jmp
loop
xorb
fwait
mov
push
push
pusha
sbb
mov
dec
lcall
xor
or
sub
xor
pop
je
add
mov
pushf
or
aas
loope
pop
sbb
mov
cmc
jne
pop
and
add
mov
inc
pop
adc
xchg
loopne
push
push
fstp
jb
in
sub
in
xchg
fldcw
xlat
ret
xchg
jae
pop
in
push
xor
ss
add
sub
sti
push
in
xor
xchg
std
jo
push
arpl
icebp
cwtl
fnsave
outsb
xor
cs
mov
pushf
ds
jnp
imul
sbb
mov
mov
imul
daa
repnz
jne
add
je,pt
push
sbb
fiadds
ja
test
add
dec
pop
lods
loope
mov
fstl
cltd
or
push
scas
lods
lods
jp
mov
je
je
nop
call
jns
dec
sub
test
out
call
jge
jmp
xchg
pushf
add
enter
test
jo
inc
dec
jnp
jmp
ja
je
ss
pop
fisubs
repz
mov
pop
test
pop
stos
daa
pop
push
xchg
sti
xchg
ret
push
push
cltd
movsl
fistl
sub
jo
cs
leave
add
pop
nop
add
imul
punpckhbw
int
xor
in
mov
insl
iret
and
xchg
cmpsb
add
in
dec
sub
push
inc
aad
mov
es
test
pop
cmp
imul
add
inc
pusha
rolb
pop
inc
cmp
das
popa
push
dec
fwait
scas
pop
js
bound
mov
cmp
dec
inc
mov
lock
insb
in
divl
push
pushl
inc
andl
sub
or
xchg
andl
inc
sub
adc
js
and
ja
pop
adc
xchg
js
lods
addr16
fisubrs
push
inc
xchg
fbstp
cld
stos
pop
gs
pop
insl
dec
incb
push
mov
iret
fidivrs
xchg
test
roll
inc
cmp
sbb
pusha
inc
or
xorl
test
mov
sbb
add
add
int
pop
xchg
xor
das
push
cmp
and
out
mov
cli
not
push
movlps
rcll
push
inc
dec
xor
mov
insl
loop
adcb
jmp
sub
mov
cld
mov
adc
jb
in
sbb
not
inc
in
pop
dec
orb
add
mov
xchg
test
daa
in
fimuls
push
dec
test
ret
out
outsl
add
popa
mov
push
out
inc
repz
mov
jne
xor
pop
mov
mov
fwait
daa
lret
xlat
push
and
pop
in
mov
and
push
push
daa
adc
loope
in
mov
mov
cmpsb
or
pop
ret
sub
loop
arpl
add
es
scas
cmc
mov
sbb
jbe
mov
out
imul
pushf
xor
mov
dec
imul
lcall
mov
test
jns
popf
cmpsb
push
lds
mov
cmp
subb
out
push
test
fs
add
mov
mov
xor
sbb
xchg
gs
scas
in
push
ja
jmp
jp
inc
jb
rorb
inc
pop
test
mov
dec
insl
inc
jg
inc
xchg
jb
and
sub
mov
push
testb
adc
rcrb
cwtl
push
popf
mov
xchg
notb
bnd
movsb
mov
clc
cltd
xchg
in
fnsave
cmp
xorl
roll
inc
aaa
int
dec
pop
rcr
pop
push
or
in
push
in
and
cs
push
jb
mov
or
mov
scas
push
aaa
adc
mov
pop
xor
loopne
lret
mov
ret
cld
dec
pop
or
add
adc
push
mov
lcall
mov
dec
xor
fs
inc
daa
xchg
out
xor
ret
fldcw
sar
mov
out
push
pusha
leave
into
adcl
xchg
inc
cwtl
imul
out
xchg
jne
sub
pop
xchg
inc
or
fldt
jle
cwtl
mov
xor
inc
mov
pop
je
xchg
lahf
and
xchg
add
std
ss
imul
ficompl
imul
cmp
jmp
es
jp
enter
nop
xchg
lahf
inc
gs
adc
add
scas
mov
ret
mov
push
sub
and
add
pop
call
testb
pop
mov
and
pop
xor
pop
pop
pusha
lds
mov
lahf
sbb
not
out
rcrb
jae
cmc
mov
mov
shlb
jno
or
mov
sbb
ljmp
pop
or
sub
dec
pop
xorb
sub
push
cmp
and
jbe
and
cmp
dec
rcl
ret
cltd
push
cmp
jbe
shll
repz
lods
movsl
sbb
push
ss
sbb
daa
sti
jl
and
inc
jmp
jle
push
jmp
mov
dec
push
fs
mov
xchg
insb
mov
mov
fsts
mov
out
std
jne
repnz
cmp
mov
sbb
sbb
xor
push
pmulhuw
inc
xchg
mov
jb
das
lock
sbb
cmp
push
mov
sub
out
iret
pusha
insl
bound
xchg
faddp
ret
inc
push
push
insb
jno
in
pop
insl
std
xor
fists
lahf
and
nop
lret
inc
or
movsb
dec
stos
sbb
cs
into
test
icebp
mov
fldt
loop
cmc
push
mov
push
imul
cmc
dec
ret
loopne
pushf
jle
mov
mov
xchg
mov
fstps
mov
imul
jo
sbb
les
lret
push
push
xor
sub
xor
dec
ror
add
test
aas
sbb
cmc
repz
pushf
clc
pop
sbb
push
pushf
dec
xchg
jae
or
sbb
xor
jne
out
incl
nop
cmp
scas
lods
lods
mov
xor
jbe
mov
loope
out
outsb
lea
js
inc
in
mov
ret
inc
iret
iret
cmp
cli
push
std
cmpsb
push
aam
mov
mov
inc
repz
cltd
ljmp
nop
cmp
inc
xchg
insl
jecxz
scas
add
ja
repz
pop
cmp
push
gs
sbb
stos
add
loope
push
arpl
or
lret
mov
inc
mov
and
push
cmpsb
cmpsb
cmpb
gs
scas
xchg
and
adc
adc
scas
dec
mov
mov
dec
sub
popa
pop
cmp
xor
and
lret
sbb
mov
add
inc
pop
cmpsl
sbb
or
lahf
push
pop
jg
or
mov
dec
and
xor
inc
or
in
call
in
or
pop
inc
push
jnp
sub
imul
sbb
fcoms
xchg
lea
imul
pop
ret
mov
rcrb
ja
rolb
mov
mov
and
jp
lahf
lea
push
test
shlb
ljmp
popf
rclb
in
cmp
lahf
or
scas
jb
cs
out
fcomps
push
aad
dec
daa
out
mov
loopne
jge
ret
xchg
fbstp
and
out
fdivl
rcrb
das
push
in
cmp
cltd
xchg
jg
xchg
mov
mov
jno
into
pop
dec
lods
sub
repnz
or
push
xchg
cld
push
cmp
xor
mov
ds
jns
xchg
mov
mov
add
mov
rcr
sbb
jb
dec
pusha
out
or
sub
cmp
xchg
stos
push
push
fdivrl
pop
lret
mov
stos
add
repz
xchg
ss
add
cmpb
jmp
cmc
adc
enter
and
bound
or
xor
js
gs
adc
jne
out
mov
aam
mov
pop
pop
insb
call
ret
scas
test
mov
jno
and
adc
or
mov
mov
repnz
sub
mov
gs
hlt
lret
mov
pushf
scas
cmp
pop
in
in
cmp
fisttps
xchg
inc
sub
pushf
or
pop
fnsave
push
ror
jl
push
imul
jge
add
rcl
xchg
mov
aad
jne
push
aam
mov
clc
mov
emms
das
and
sub
dec
jp
dec
jge
xor
adc
test
add
testb
sbb
mov
sub
shl
fadds
clc
xchg
xor
jno
or
push
in
jnp
aaa
add
mov
sbb
je
inc
data16
xlat
test
pusha
pop
or
cmp
out
and
int
cmp
xchg
in
test
jo
or
dec
ret
xor
adc
sub
ljmp
das
push
xchg
scas
pop
sub
mov
cmpsl
lahf
in
dec
mov
aad
cmp
pop
jmp
fldt
je
or
shll
shrl
sahf
imul
ss
dec
inc
cld
repz
imul
add
sbb
mov
leave
jne
pop
fisubrs
adc
cmpl
into
cmp
addr16
mov
fsubs
sbb
nop
inc
pop
subb
lcall
or
rol
jae
jecxz
cmp
insl
adc
and
stos
push
dec
push
cmp
xor
and
mov
aas
push
fidivl
cmpsb
pop
jnp
jno
fnsave
fildll
or
or
mov
mov
ss
int
ljmp
outsb
ret
in
shll
inc
pusha
sbb
xchg
and
cmp
dec
stos
test
inc
adc
push
and
movsb
inc
dec
add
js
jb
pop
into
loopne
popf
jne
insl
pop
addr16
leave
jnp
fucomi
lea
pop
sbb
test
jle
movsb
incb
adc
rcll
and
push
xor
xor
lret
fdivrp
and
jge
sbb
pop
jg
pop
es
in
test
stos
add
test
nopl
fldl
imul
sub
aas
sub
insb
jecxz
fs
movsl
adc
mov
sub
mov
ds
and
push
cmc
sar
cmpsl
push
mov
aam
std
cmpsl
fists
mov
inc
test
mov
addr16
jl
insb
jg
and
pusha
iret
mov
mov
bound
or
cmp
lcall
mov
sbbl
xchg
das
aas
xor
push
or
cmp
push
and
mov
mov
add
aad
sub
cmp
arpl
mov
mov
inc
outsb
jno
inc
je
mov
ss
imul
jne
fstl
test
xlat
hlt
mov
cs
or
jae
dec
pop
or
ja
lret
xchg
dec
or
cmpsb
stos
fisubrs
adc
jbe
movsb
mov
or
out
sub
fwait
jecxz
lcall
jp
es
and
sbb
push
or
test
sub
repz
rcrb
lds
call
mov
popa
add
sti
int
test
cmp
pop
fdivrs
inc
xchg
pop
jb
loope
pushf
push
or
test
push
xchg
bound
dec
or
jae
inc
push
pop
stc
arpl
mov
adc
cmpb
movsl
push
outsb
xchg
xor
xor
dec
xor
push
out
popf
loopne
xchg
push
mov
xor
sbb
pop
push
dec
xor
mov
repz
jecxz
inc
pop
xor
cmp
mov
xchg
dec
arpl
mov
cmp
push
je
xchg
out
mov
pop
data16
mov
mov
push
rorb
dec
sub
jg
je
cmpl
pusha
fldcw
outsl
insl
sti
lret
iret
mov
or
dec
les
mov
sub
mov
cli
and
dec
mov
jne
shlb
jbe
pop
or
push
pop
lahf
ljmp
mov
sbb
fs
mov
mov
aaa
mov
and
dec
cmpsb
fldt
add
sub
add
cld
out
fimull
mov
into
in
cmp
fldcw
jo
pop
movsb
jmp
lret
leave
iret
adc
out
xlat
push
xor
mov
and
movsl
sbb
loopne
bound
pop
mov
loope
int3
jp
pop
jo
sbb
mov
loopw
ss
push
cld
data16
roll
aam
sub
mov
xor
xor
sub
cmpsb
xor
iret
icebp
das
hlt
mov
fildll
push
xchg
out
hlt
xchg
in
mov
adc
xor
fisubrs
addb
mov
pushf
test
insl
xor
ja
outsl
sbb
mov
add
push
gs
pop
mov
mov
lods
mov
pop
add
adc
adc
mov
test
sbb
sbbl
adc
xchg
sub
sub
xchg
inc
or
mov
insl
adc
push
andl
fwait
js
cmpsl
push
rclb
pop
xor
or
jns
or
mov
scas
popa
cmpsl
cmpsl
out
les
sbb
aaa
fimuls
je
mov
pop
sbb
mov
push
rcll
loop
inc
subps
ja
hlt
xchg
scas
or
pop
pusha
imul
insl
ret
or
lods
cmp
jmp
pop
sbb
cmpsb
sahf
emms
sub
mov
aas
push
data16
add
mov
jbe
add
sbb
aas
push
adc
sub
xchg
mov
ficomps
orb
das
inc
push
in
dec
ret
jle
sub
cmp
jge
int
dec
push
mov
cmc
aaa
or
das
outsb
pop
and
lcall
call
loopne
mov
xorw
scas
add
push
inc
push
xor
testb
xor
sub
rcll
xchg
rol
xchg
nop
jle
add
xchg
cmpsl
enter
pop
mov
mov
jmp
in
mov
inc
stos
xor
or
push
idiv
cmp
xor
pop
out
add
hlt
out
mov
pop
push
lods
mov
cmp
icebp
sub
rcrl
clc
push
bound
addr16
add
xchg
ljmp
adc
dec
clc
jle
pop
loop
mov
push
sub
iret
imul
pop
add
sbb
insl
and
sbb
popa
and
and
jo
andb
inc
mov
pop
push
insl
or
nop
and
pop
loope
aam
scas
xor
out
pop
int
push
xchg
outsl
pop
xor
jge
icebp
inc
mov
gs
pop
je
outsl
mov
xor
xor
mov
mov
insl
fcomps
push
popf
fsubl
pop
mov
clc
cmp
cmpsl
pop
jle
ja
xor
pop
sti
gs
cltd
ljmp
es
mov
pushl
mov
pusha
push
aam
push
jne
les
xor
aam
push
shlb
call
loopne
aas
mov
aad
mov
push
out
ret
xlat
test
mov
fs
addr16
and
outsl
stos
lcall
popf
fbld
imul
pusha
loop
cmpsb
std
fistpll
and
jmp
popa
call
sub
xor
stc
or
sub
hlt
jecxz
das
enter
jecxz
mov
ret
repz
pop
xchg
je
lock
push
dec
sub
imul
mov
xchg
push
stos
je
xchg
sbbl
sub
push
jecxz
arpl
inc
or
pop
into
lds
pop
mov
aam
mov
mov
nop
xor
sbb
lahf
inc
outsl
push
sarb
ja
jge
mov
mov
adcb
scas
or
cs
ja
pop
aad
lret
outsl
add
push
inc
pop
push
add
in
push
pop
inc
mov
ror
mov
push
ja
or
mov
pop
sbb
insl
pop
cmp
adcb
aad
dec
cmpb
mov
push
fwait
adc
int3
lock
mov
insl
sub
rorl
dec
mov
xchg
pop
int
sahf
nop
adc
sbbl
loop
mov
adc
sarb
mov
test
ja
mov
add
fwait
ljmp
imul
mov
rcll
xor
or
pop
mov
mov
xchg
in
jno
outsl
jns
mov
in
repnz
in
js
int
mov
mov
cli
or
jle
jbe
jp
xor
jle
cmp
dec
xchg
jmp
mov
icebp
jnp
popaw
pop
inc
stos
mov
mov
insb
aaa
xor
into
sub
out
add
sbb
cmc
pop
mov
test
in
or
cs
xor
cmp
ss
add
jo
cmp
jecxz
insl
ds
stos
push
ret
and
cld
fwait
inc
xlat
test
test
or
and
inc
std
xor
fidivrs
and
rcl
sti
fimuls
sub
cs
jno
xlat
stc
cli
and
imul
xchg
into
cmp
and
outsb
loope
dec
adc
fsubl
mov
jb
aas
std
insb
push
ds
dec
jmp
leave
insl
jae
test
dec
lock
jge
es
jmp
jmp
xchg
jle
mov
add
stos
push
jl
fnsave
push
sbb
mov
in
call
cwtl
push
ss
imul
adc
xor
xchg
mov
pop
inc
lods
lds
ja
repz
lret
mov
push
icebp
add
ffree
jnp
testl
sbb
jnp
mov
lds
daa
jp
in
test
push
rcrl
in
pop
inc
ss
cmp
add
dec
mov
popf
mov
les
cwtl
mov
push
and
jne
lds
orl
pushf
adc
leave
pop
scas
xchg
rcrb
fimuls
mov
fucomi
cmp
fdivrs
inc
shufps
repnz
aad
test
mov
jp
icebp
lods
mov
ret
cmp
dec
mov
clc
fcomps
mov
pop
xchg
and
mov
stos
adc
adc
mov
int3
icebp
pop
data16
mov
xchg
jle
pop
jo
addl
xchg
jbe
cmp
mov
icebp
call
lock
jae
adc
test
adc
in
pop
push
jae
xor
imul
roll
iret
jns
mov
mov
cs
ljmp
dec
mov
ret
inc
movsb
jne
insl
xor
les
std
mov
sbb
enter
adc
jno
xor
cmpsb
dec
sub
mov
inc
test
xor
scas
lock
mov
adc
stc
adc
xorb
lret
pop
icebp
ret
push
inc
call
imul
mul
jmp
mov
sub
cltd
jp
call
cmp
andl
sahf
fildl
pop
out
fisubs
jb
jne
xor
mov
mov
divl
dec
sub
mov
mov
jecxz
or
cwtl
pop
mov
and
and
pop
out
mov
sahf
xchg
push
mov
fwait
or
stos
les
xchg
in
inc
cmp
arpl
mov
insl
cs
stos
sbb
adc
jg
nop
lea
sti
lret
sbb
dec
mov
sub
xchg
mov
lods
inc
fwait
dec
xchg
in
out
ss
xor
mov
mov
pop
lock
mulb
xor
push
je
iret
and
add
jmp
push
jge
test
add
pop
sbb
push
movsb
inc
into
iret
sahf
fidivrl
mov
cmp
cmp
xchg
aaa
loopne
sub
loopne
repz
andb
jb
daa
sub
js
dec
fs
mov
mov
out
mov
outsl
push
cld
pop
test
cmp
outsb
push
bound
add
pop
test
or
sbb
das
add
in
pop
sub
movb
pop
add
xlat
adc
jp
inc
aaa
push
cmpsl
add
lcall
pop
or
call
mov
enter
inc
lret
xchg
les
mov
fdivr
fs
cld
mov
test
fiaddl
cmp
and
jmp
cs
gs
jne
stos
mov
lret
jae
lds
pushf
lock
dec
repz
or
pop
popa
xor
or
pop
push
nop
push
cs
ret
mov
stos
fsubr
orl
xchg
subb
outsl
out
jmp
int
adc
xchg
mov
lods
mov
orb
sarl
aad
mov
loope
loope
xorb
jle
pop
jnp
pavgw
dec
jge
mov
pushw
or
test
shlb
js
fs
stos
clc
xor
adc
test
incl
push
int
adc
iret
jle
adc
jmp
clc
and
push
xchg
push
xor
into
dec
mov
adc
fnstcw
inc
push
sub
cmc
inc
ret
fcoms
lret
push
add
or
dec
xchg
popf
push
xorb
jae
sti
jmp
aas
lea
pop
cmp
mov
add
inc
es
push
lcall
xor
in
adc
adc
je
mov
out
jns
jl
xchg
jns
push
mov
test
or
sub
push
inc
pop
lret
push
push
rol
cmp
xchg
adc
das
call
fstp
push
push
add
sub
insl
lds
jecxz
fnstenv
xchg
test
fcoms
or
jl
mov
sub
xor
or
jo,pn
pop
mov
dec
xlat
cld
mov
add
mov
popf
insb
cmp
push
popl
mov
pop
loop
insb
push
lds
jb
xor
andb
std
sbb
loope
push
mov
nop
sub
rcr
aam
push
push
les
dec
sbb
jmp
call
add
cs
xor
and
jne
lock
inc
xchg
cmp
pop
les
and
add
fsubrs
fbstp
inc
cmp
sub
rolb
mov
jg
cltd
push
xor
cli
mov
cmp
pop
movsl
gs
inc
mov
pop
je
mov
or
rorb
fadds
lock
hlt
push
in
lret
cmp
sbb
lock
movsl
aas
test
sbb
pop
inc
lret
sub
push
adc
imul
negl
sub
pop
dec
pop
lcall
jg
lea
or
jae
and
push
scas
sbb
mov
enter
shll
push
push
xor
and
mov
mov
xor
in
leave
xorl
dec
icebp
or
clc
test
inc
popa
stos
scas
pop
out
iret
mov
lods
mov
pop
nop
inc
add
lods
fisubrs
adc
push
and
push
pop
xchg
clc
inc
push
jbe
in
jne
fdivrl
nop
scas
call
jl
out
xor
mov
jge
icebp
es
mov
xchg
orb
int
loopne
mov
mov
fists
into
mov
mov
jne
add
in
adc
out
test
int
push
adc
inc
fidivrs
int3
daa
test
fdivp
push
and
fs
fstpl
mov
loop
gs
sub
std
mov
and
adc
data16
cltd
and
cltd
inc
and
bound
xchg
mov
scas
dec
pop
lods
in
loope
daa
push
sarl
xchg
sbb
ret
repz
dec
pusha
icebp
inc
std
push
push
mov
fmuls
dec
pushl
jno
adc
jecxz
in
push
rcr
aad
lcall
jns
stc
xchg
mov
inc
jle
mov
xchg
push
icebp
xor
mov
sbb
push
das
fldenv
pusha
aad
movsl
adc
sub
xor
or
repnz
jmp
sub
incl
movsb
icebp
fwait
inc
jle
jb
rorb
jne
out
sub
xchg
subb
dec
adc
imul
hlt
mov
mov
jl
ret
mov
sbb
pop
mov
lret
mov
ret
add
lret
dec
arpl
xchg
int3
lea
sub
fwait
dec
aam
rol
adc
adc
xchg
ljmp
fcomp
idiv
fisttps
out
rcrl
adc
mov
xor
push
ds
les
mov
aas
pop
sub
push
and
repnz
pop
push
mov
cmp
int3
push
dec
int
dec
and
stc
lock
fstps
push
xlat
push
lock
sbb
shrl
mov
sub
inc
jne
and
mov
sbb
outsl
mov
cmp
cmp
or
jno
and
insb
ja
aad
pop
popa
push
daa
sbb
loopne
cmpb
xchg
or
dec
jb
out
and
push
sub
pop
fbld
push
or
daa
pop
or
int
push
imul
mov
add
sahf
fstl
cmp
test
ja
inc
xor
outsl
push
cld
add
pop
and
imul
stos
xchg
push
aaa
es
mov
push
push
stc
cwtl
lea
jno
jp
adc
xor
mov
loope
lahf
fsubl
popf
fidivrl
and
adc
into
into
inc
dec
mov
pop
scas
dec
jle
loop
sub
movsl
mov
cwtl
push
repnz
in
in
xor
out
adc
jl
push
add
imul
or
mov
cmp
js
mov
repnz
and
pop
adc
int3
lret
cmp
mov
jmp
inc
sub
mov
adc
pop
jo
in
imul
push
xchg
inc
push
jl
pop
jp
jbe
mov
pushf
enter
aaa
jge
sbbb
loope
subl
push
jmp
pop
xchg
mov
lods
pop
fdivp
inc
rcl
mov
jne
pop
jmp
or
push
out
stc
pusha
push
or
sub
pop
rorl
pop
mov
in
pop
push
push
pusha
leave
or
and
inc
xchg
lds
repz
nop
inc
add
push
push
in
mov
jo
pusha
fwait
xchg
jl
mov
testl
lret
ljmp
or
and
xchg
loope
xchg
aad
cld
std
aaa
cmpsb
mov
into
xchg
or
cwtl
fcompl
loope
mov
sub
sti
jmp
inc
dec
mov
inc
and
jl
test
dec
lret
xlat
movsl
ja
push
or
mov
add
fnstenv
or
lock
cmp
xchg
or
notb
sbb
push
push
mov
dec
hlt
jle
dec
lahf
dec
dec
add
cld
sarl
sti
cmp
out
test
hlt
and
mov
scas
movl
cmp
adc
inc
push
imul
push
mov
fcmovbe
out
lcall
xchg
cld
pop
xchg
out
or
js
push
inc
or
xor
xorl
movsl
and
push
push
dec
out
xor
cmpsl
lcall
aas
pop
jns
jp
insl
sbb
cmc
pop
addr16
neg
and
scas
jecxz
ret
and
cmp
sbb
dec
adc
mov
rclb
scas
inc
inc
sbb
and
or
js
gs
mov
adc
sub
pop
push
mov
int3
jae
ret
mov
add
lcall
dec
iret
mov
arpl
lahf
jae
test
leave
inc
orb
xor
aaa
xchg
or
cmp
mov
push
lds
outsl
hlt
mov
imul
mov
in
xchg
push
jb
mov
int
popa
and
fldl
js
xor
imul
dec
mov
sbb
xor
xchg
sti
mov
jns
xor
mov
jbe
adc
sub
lods
add
imul
mov
mov
jbe
shl
gs
ss
adc
in
dec
add
fisttpll
xor
fdivl
jle
sbb
subl
fisubs
test
ds
outsl
cmpsl
je
mov
and
scas
nop
inc
popa
dec
lret
sub
shll
pop
mov
inc
repnz
in
push
popf
push
pop
jne
inc
jmp
popf
idivl
je
sbb
pop
icebp
call
sbb
add
pop
js
sub
jns
dec
cs
lods
pusha
adc
int3
jmp
and
in
xchg
das
fldl
call
in
lock
mov
push
jl
ret
push
in
mov
pop
test
xor
sub
cmp
dec
ljmp
stos
jns
jns
push
add
lea
jg
adc
mov
cmp
cmp
jnp
sbb
adc
cwtl
imul
movsb
xlat
scas
add
push
ss
lahf
imul
sub
cli
jge
sub
push
xor
inc
das
shl
ljmp
mov
sub
ds
aas
jge
cmp
das
pop
popa
jl
dec
cwtl
ret
jl
loopne
push
aas
adc
loope
mov
js
adc
mov
mov
ljmp
or
sbb
fistpll
cltd
pushf
pusha
sub
lods
mov
lcall
jecxz
lahf
loope
fisttps
push
push
stos
movsl
lret
ds
cwtl
in
fists
pop
stos
daa
mov
loope
push
daa
pop
inc
jl
adc
adc
insb
ds
icebp
mov
or
xchg
aaa
mov
xchg
int3
xchg
or
mov
ret
loope
and
adc
arpl
aas
test
cli
aaa
popf
xchg
mov
xor
test
lock
pop
cmp
inc
les
js
mov
subl
push
cltd
fmuls
add
mov
sarl
aaa
sub
xorl
add
jmp
push
addr16
dec
xor
push
mov
push
sub
cmp
push
lcall
pushl
outsb
or
es
std
xchg
push
ret
mov
jo
rcrb
lods
lock
pop
mov
mov
jns
cmp
jo
mov
push
ffree
jg
or
ficompl
pop
xorb
cmp
insb
sub
and
cs
pushf
stos
popa
mov
mov
test
or
loope
out
dec
cmp
adc
in
bound
jbe
aam
xchg
mov
inc
pop
xchg
or
popf
inc
faddl
int
inc
xor
adc
gs
adc
xchg
pop
mov
fstpt
inc
push
jo
sub
dec
add
pop
add
push
xor
sub
pop
pusha
dec
test
xchg
das
sbb
cs
pop
cltd
ss
aad
out
mov
sti
xor
lret
aad
xchg
sarb
stos
mov
or
xchg
inc
mov
push
insl
adc
jbe
add
les
xor
cwtl
mov
outsb
or
inc
xchg
pushf
pop
faddp
xor
pop
add
mov
cmpsl
adc
dec
and
aad
faddp
stos
push
add
in
mov
in
loop
xchg
sbb
sbb
xlat
and
jp
rcl
lods
in
adc
int
push
fcomps
mov
imull
or
mov
out
or
jbe
repz
xor
dec
call
sub
xchg
hlt
jmp
popa
inc
cli
cld
and
add
out
jmp
dec
xchg
or
dec
fnstsw
mov
cmp
lods
fs
decl
push
mov
aaa
xorb
pushf
mov
jecxz
or
leave
lods
shll
pop
js
movsl
sbb
das
jg
or
cmp
jp
mov
lahf
dec
adc
movb
sti
or
loop
outsl
pushf
push
cmpsl
ss
or
lret
out
lahf
fbstp
dec
pop
sub
dec
popa
xor
popf
fbstp
jb
icebp
daa
imul
enter
leave
scas
jl
fucomi
jnp
scas
sub
out
test
xchg
lret
dec
jo
sbb
xorb
aad
mov
jnp
lcall
inc
fimull
cmp
imul
test
outsl
outsl
xchg
pop
hlt
or
add
js
sbb
fsubs
mov
arpl
inc
mov
sbb
and
das
sbb
popa
in
cmp
icebp
adc
xchg
aam
push
aad
das
icebp
jb
push
mov
test
jb
loope
sub
popf
inc
outsl
fdivp
jge
pusha
sbb
xchg
push
fiadds
ret
sbb
int3
push
es
jl
adc
pushf
lea
jle
fistl
repz
add
cltd
mov
xor
push
test
bound
leave
enter
shll
jne
and
adcb
sub
xchg
pop
sbbl
push
pop
push
inc
mov
add
fucomp
and
xchg
dec
xor
pop
bound
or
sub
lret
les
mov
std
sarb
add
cli
aad
movsl
repnz
gs
push
sub
and
lret
mov
mov
cmp
ljmp
aad
cmp
add
jo
scas
popa
rol
push
sbb
scas
mov
cltd
insl
fmul
mov
ja
jecxz
hlt
out
lock
fisttps
mov
jbe
repnz
jnp
inc
push
dec
xor
mov
repnz
fucomi
sub
pop
into
loop
pop
mov
xchg
ljmp
call
movsl
sbb
adc
mov
pop
mov
lds
mov
clc
mov
mov
jl
xorb
cli
shr
cmp
stos
sub
mov
push
loop
aam
xchg
lahf
add
notb
lds
notl
scas
dec
jne
enter
add
pop
test
test
stc
jb
mov
mov
jecxz
leave
mov
add
mov
sub
push
ja
aam
or
jns
sub
dec
cmc
mov
in
fisubrs
push
xchg
inc
cmp
dec
cs
mov
sub
fstps
cmovs
fimull
cmp
dec
cmp
push
loope
push
sbb
repz
adc
mov
fisubrs
aad
xchg
rcr
lock
push
inc
sti
mov
jb
rcrl
sub
xchg
lcall
jecxz
js
decb
add
movsl
mov
lea
in
dec
mov
aaa
scas
loope
mov
pop
ficompl
pushf
lods
xor
outsl
jmp
sbb
jns
push
adc
out
and
bound
outsb
jne
ret
enter
mov
movsb
popf
push
int3
fiaddl
pop
lahf
loop
and
inc
in
es
jno
push
lcall
enter
mov
pop
inc
sub
cmpsb
pop
jns
std
rorb
push
sub
jp
lods
dec
ret
mov
int
lahf
fmull
mov
in
fdivrp
jge
ds
in
jg
es
mov
mov
mov
es
loopne
lods
pop
adcl
push
ds
sub
sti
les
push
or
pop
repnz
in
scas
xchg
aam
repz
lret
jb
es
jl
add
shrl
in
xchg
in
aaa
mov
pop
in
or
jmpw
int
cmp
ror
jmp
xor
in
loopne
lret
mov
push
sub
inc
jle
mov
sbb
shlb
in
das
xchg
stc
sbb
jb
xchg
pop
das
ret
jecxz
mov
out
aam
jbe
out
mov
lods
pop
cmpsb
pop
mov
mov
loope
pop
and
in
mov
repz
or
enter
out
insl
hlt
lods
xchg
push
sbb
push
mov
inc
inc
aaa
test
loope
or
les
mov
pop
push
dec
mov
mov
out
adc
rcrb
sbb
xor
jge
cmp
into
inc
into
xor
inc
inc
ds
mov
push
aad
out
pop
in
lret
roll
jmp
dec
mov
stos
subb
test
sub
jl
scas
lahf
and
fsts
enter
cltd
in
add
jbe
jb
add
mov
adc
mov
mov
or
adc
jecxz
lcall
or
cmp
inc
pusha
lahf
arpl
in
dec
pop
leave
pop
shll
cmpsb
out
ret
outsb
lret
cmp
pop
cwtl
inc
add
push
notl
mov
aaa
add
add
popf
loop
mov
cmc
scas
xlat
je
and
mov
inc
pop
push
loope
pcmpgtb
int3
rol
push
mov
sub
mov
adc
popa
lretw
nop
mov
mov
scas
add
pop
xchg
jl
add
xor
imul
jbe
sbb
data16
sbb
add
xchg
sbb
mov
xchg
and
push
sbbb
push
mov
cmp
jb
ret
push
mov
fcoms
in
or
dec
fstl
xlat
scas
push
data16
decl
mov
sub
add
adc
adcl
xchg
stos
mov
xor
cltd
fstpl
sub
push
in
arpl
cwtl
rcl
adc
jb
sti
cmp
push
add
fdivrp
gs
mov
hlt
testl
lea
push
mov
mov
arpl
and
fwait
jno
and
test
es
out
mov
pop
es
fwait
push
nop
shlb
daa
jge
shll
loope
mov
push
sub
add
daa
sbbl
iret
fstpl
movsb
xor
push
ret
pusha
or
pop
sbb
xor
and
sahf
cmp
lcall
mov
iret
inc
mov
test
rorl
or
jne
fs
fstl
xor
xchg
ss
pop
add
push
cmpb
icebp
lcall
cmc
sbb
imul
aam
or
pushf
push
popa
mov
cli
sbb
xor
popl
pop
js
insl
pop
ret
xchg
movsl
stos
scas
sbb
call
cmpsb
out
das
into
icebp
cltd
test
dec
adcb
mov
daa
faddp
je
mov
jb
cmp
rol
out
std
push
dec
data16
call
ljmp
lcall
xor
sbb
mov
aad
imul
jg
or
icebp
jle
pop
fsubl
jp
mov
add
icebp
lret
jmp
cwtl
xor
and
cs
inc
jecxz
xor
jle
xchg
cmp
leave
push
dec
or
inc
xor
testb
adc
std
xor
fcompl
add
aas
je
ret
mov
popf
fs
pop
pop
and
add
xchg
lret
xchg
xchg
mov
ds
stc
xor
imul
or
cmp
pop
sbb
xchg
push
lahf
mov
arpl
iret
shl
arpl
out
test
and
mov
xchg
in
in
test
xlat
jae
cmpsb
mov
or
mov
inc
js
jno
lret
jg
xchg
add
add
repz
fimull
fistl
adc
jnp
ret
fdivs
loopne
test
mov
pop
repz
in
inc
mov
aam
sahf
cltd
pusha
inc
loope
clc
push
jbe
xor
push
loop
inc
jl
insb
and
mov
and
inc
or
jo
push
fdivrl
lahf
xchg
mov
jns
test
mov
fsubs
inc
aas
je
ss
xor
mov
mov
scas
push
pop
add
out
cwtl
movntps
out
push
adc
jnp
aam
add
jg
es
pop
inc
rcr
sbb
outsb
push
pop
rol
scas
sub
jge
fcoml
jle
insl
pop
lcall
add
push
dec
movsl
ficoml
sub
mov
inc
lock
pop
lods
sbb
fsubl
add
mov
ja
add
xchg
ja
gs
ds
loop
ss
push
or
aad
sar
test
hlt
adc
and
or
cmpsb
cltd
or
push
test
dec
add
std
out
out
sarl
imul
mov
call
std
adc
add
and
aaa
call
iret
xor
popa
les
popf
jmp
arpl
arpl
sub
popf
mov
sahf
mov
pop
je
cmp
and
pushf
or
push
inc
cmpsb
lahf
inc
testl
lret
stc
fsincos
pusha
or
jge
int3
xchg
mov
sbb
arpl
fwait
adc
stos
xchg
daa
scas
mov
push
out
and
cmp
dec
std
ret
dec
adc
dec
xorl
sar
arpl
arpl
cmp
and
shl
in
aas
sbb
add
mov
pop
nop
stos
and
xchg
pop
pushf
int
and
sub
rorl
push
cli
adc
jp
sarl
inc
jecxz
movsl
adc
mov
inc
mov
cld
push
cmp
ret
mov
cmpsl
adc
cmp
ret
ret
xor
adc
mov
fs
push
aas
shlb
pushf
and
test
mov
enter
xchg
jbe
pop
sbb
cmp
fcomps
jbe
sub
movsb
cmpsb
cli
popa
mov
jo
scas
push
xor
les
xchg
jle
arpl
das
sti
aas
shll
cmp
popf
push
mov
pop
icebp
out
out
cmpsb
and
in
jl
pusha
cltd
mull
pusha
imul
push
jnp
inc
insb
sbb
int3
repnz
sbb
rorl
outsl
push
add
sbb
xchg
mov
sbb
xor
sahf
mov
and
xchg
sbb
jo
xchg
mov
sti
test
jl
int3
hlt
sbb
sti
sub
push
cwtl
data16
gs
addr16
movsl
stos
aam
or
out
push
inc
out
push
xor
stc
dec
dec
xchg
movl
adc
jl
in
test
dec
shll
addr16
sbb
fsubrl
mov
xchg
arpl
jne
jno
icebp
test
dec
test
inc
les
sub
inc
out
lret
inc
mov
rol
or
push
movsb
push
fnstcw
pop
rolb
ret
push
out
iret
xor
adc
push
xor
cmp
les
gs
push
mov
dec
movsb
scas
xchg
add
imul
xor
popf
test
cmpsl
insl
xchg
or
jbe
sarb
popa
cmp
jge
push
sbb
leave
mov
dec
pusha
push
sbb
ljmp
xchg
add
sbb
inc
add
mov
pushf
xchg
dec
mov
pop
cli
mov
andb
jle
jbe
pop
adc
movsb
lret
sub
jp
xor
xchg
and
pusha
fcoml
in
pop
je
adc
dec
push
jbe
shll
xlat
dec
cwtl
test
stos
push
imul
push
out
mov
xchg
aaa
mov
fistl
cmp
rol
movl
jb
inc
ret
add
cs
or
std
mov
or
mov
xchg
cs
inc
divl
fsubl
cmc
inc
stos
or
movsb
int
pop
xchg
insb
lds
stos
and
xor
sub
testb
sbb
xor
sub
leave
or
mov
add
sub
sbb
stos
rcrb
sub
xchg
mov
mov
dec
cli
push
in
xor
mov
dec
sbb
shrb
js
fisubs
jb
movsl
fldenv
imul
je
adc
iret
hlt
or
jge
repz
lods
adc
rcll
jle
je
lret
xchg
pop
dec
fistl
or
mov
ret
jmp
xor
mov
hlt
addr16
lock
outsb
dec
sub
mov
jnp
adc
mov
sbb
out
and
jp
cmp
push
sub
lea
cmp
pop
fs
scas
ret
xchg
jne
adc
aaa
loope
inc
add
and
movsb
dec
push
mov
shl
mov
inc
inc
ds
dec
ret
or
pop
mov
push
jmp
mov
lods
jbe
dec
sbb
jp
ret
push
add
scas
movsl
ret
testl
loop
sbb
out
bound
lds
icebp
xor
inc
scas
adc
pop
mov
lds
fmull
mov
jle
cmpsl
mov
movsl
mov
mov
lret
jnp
mov
dec
xor
push
shrb
into
xchg
data16
pushf
dec
or
mov
lahf
xor
repnz
pop
enter
call
daa
aas
daa
ds
sbb
mov
sub
push
dec
mov
push
test
hlt
add
es
sub
pop
daa
pop
cli
jg
arpl
mov
scas
xlat
iret
sarl
add
cli
roll
add
jl
jns
enter
pop
push
fildl
cmp
test
adc
mov
test
mov
mov
jge
xorb
bound
aas
std
mov
and
jbe
cltd
addb
push
mov
add
adcl
aaa
ljmp
dec
xchg
dec
or
add
fwait
add
pop
loope
fsubl
sbb
int3
sbbb
jns
xlat
cmpl
enter
test
xor
mov
cmp
jo
cmp
into
sub
pusha
dec
test
or
je
imul
sti
outsl
in
cmp
mov
imul
xchg
push
movsb
ja
xchg
insb
lds
cld
andl
xchg
and
or
jo
daa
xor
or
ret
lret
dec
xchg
lahf
pop
dec
push
je
dec
iret
inc
stc
pop
fucomip
cs
adc
inc
rorb
rcll
mov
imul
jg
je
xlat
pop
leave
xlat
repnz
inc
inc
or
cmp
push
leave
jne
mov
cwtl
pop
pop
sbb
jnp
flds
mov
pop
rolb
and
sub
or
lods
fcmovb
adc
rol
outsb
cmp
jns
lock
gs
sub
daa
or
int
in
or
daa
push
nop
stos
xchg
les
enter
frstpm(287
fisttpll
add
xchg
sbb
mov
and
aad
lcall
adc
jp
mov
sbb
aaa
loopne
iret
inc
xchg
push
and
cmp
dec
ret
idivb
sub
jne
mov
and
icebp
and
ds
cmp
and
mov
add
insl
push
mov
bound
lret
mov
inc
sbb
jne
icebp
xor
jmp
jnp
or
sbb
ret
out
shlb
pop
gs
mov
mov
pop
push
icebp
mov
push
jbe
out
jne
pop
scas
dec
mov
jae
jmp
js
int3
call
xchg
arpl
and
sbb
mov
xchg
dec
jmp
dec
jg
lds
or
or
pushf
arpl
dec
push
add
fisubrl
dec
mov
mov
sub
sub
mov
dec
test
xor
xor
sbb
jo
mov
aam
fsubrl
dec
pop
sarl
inc
sbb
subb
xchg
cld
jae
cltd
sbbb
imul
test
imul
scas
in
les
push
int
pop
popf
pushf
dec
dec
sub
lods
mov
push
mov
not
inc
mov
xchg
add
dec
sub
jno
enter
pop
cs
xchg
pop
pushf
daa
adc
xor
lds
or
xor
xchg
mov
je
sbb
out
cmp
add
jge
mov
inc
bound
orb
add
dec
rcl
aam
xchg
js
mov
sarl
ljmp
mov
aad
lret
adc
imul
fisubrl
xchg
jl
push
out
insl
sbb
mov
jp
addr16
xchg
mov
xor
outsl
stos
ljmp
xchg
ja
xor
test
jne
sbb
ficomps
pop
push
pushf
pop
pop
mov
ljmp
sub
jle
cmp
repnz
test
xor
cmp
jmp
mov
sbb
sbb
pushf
and
push
and
ja
loop
repnz
sbb
test
mov
and
imul
cmpsb
mov
lods
push
mov
in
add
cld
push
clc
jle
pusha
xchg
lods
test
adc
mov
scas
cmp
add
ffreep
mov
mov
mov
mov
imul
mov
test
scas
in
loopne
fbld
cmp
in
ret
outsl
scas
shlb
push
stos
nop
test
inc
sbb
sbb
cmp
in
pop
fldenv
es
movsl
out
ffree
xor
lret
insl
addl
dec
dec
push
push
fsts
adc
movsb
inc
pop
add
mov
pop
outsl
sbb
adcb
mov
mov
mov
adc
cmp
xchg
ja
inc
js
jnp
push
mov
ret
in
in
int
cmp
dec
mov
int3
lret
imul
mov
fadd
sbb
test
mov
sub
and
cmpsl
das
lcall
cmp
test
shrl
push
mov
sub
dec
testl
ret
mov
outsb
loope
pop
enter
mov
lods
cmp
pop
inc
shl
sub
xor
push
dec
lcall
mov
add
cld
jl
inc
jp
pop
sbb
or
adc
lahf
push
into
xchg
out
push
movsl
nop
clc
insw
inc
cmp
push
adc
jge
and
and
pop
es
popa
incb
mov
iret
stos
mov
jp
enter
enter
jp
inc
ja
mov
mov
adc
inc
sbb
mov
imul
incb
jno
cmpsb
mov
or
push
mov
lret
mov
mov
mov
ret
xchg
shl
outsl
loope
ret
add
inc
stc
shll
fs
pop
fwait
mov
cmpb
in
fwait
outsl
push
mov
fidivrl
mov
mov
xlat
mov
fcompl
shrl
imul
rclb
xchg
push
inc
pushf
data16
mov
or
pusha
inc
jg
dec
sti
pop
lcall
sub
mov
sub
inc
lahf
or
xor
mov
fwait
adc
mov
fwait
in
leave
loop
mov
movsb
pop
arpl
or
rcr
icebp
mov
rcrl
fisttpl
add
jecxz
push
and
xor
fisubrs
sar
fidivrs
cmp
pop
sub
inc
inc
or
imul
imul
sub
push
add
testb
or
jnp
out
nop
sbbb
jp
shlb
aad
jae
test
in
mov
pop
and
fwait
mov
lds
scas
pop
jl
or
call
insl
add
push
pop
outsl
adc
aad
inc
fwait
mov
shrl
adc
or
adc
mov
jnp
dec
xchg
out
jne
mov
push
mov
loopne
or
movsl
mov
jne
cwtl
sbb
icebp
test
out
aaa
cmp
outsl
iret
outsb
leave
inc
or
imul
call
inc
mov
or
and
cld
xor
icebp
xor
clc
push
adc
dec
push
xlat
push
inc
ret
in
sub
push
mov
pop
inc
push
insl
cmp
pop
cmp
dec
gs
jo
int
cld
mov
adc
bound
enter
cld
es
fdiv
adc
outsb
aaa
stos
add
arpl
cmp
jne
adc
and
data16
fdivl
int3
jne
push
push
xchg
sbb
pushf
aaa
sahf
sbb
out
adc
jns
xchg
out
lds
repz
ljmp
arpl
in
lcall
sti
loop
jl
test
mov
daa
mov
arpl
scas
sbb
pop
jbe
add
aas
test
mov
loope
mov
sbb
test
shll
cli
jl
push
pop
int3
loopne
cs
mov
mov
mov
push
or
fwait
xchg
stos
cmpsl
inc
jo
leave
in
push
jg
rorl
lods
push
clc
insb
clc
sbb
push
xchg
cmp
inc
cmp
mov
dec
adc
inc
je
mov
clc
imul
faddl
sbbl
lock
jecxz
mov
pushf
add
fwait
iret
mov
push
adc
inc
pop
jne
push
lcall
fsubrl
aam
lahf
inc
arpl
sbb
xor
out
out
inc
fidivl
add
mov
mov
jp
adc
test
jg
xor
outsl
mov
aam
pusha
inc
sub
mov
push
stos
cwtl
xlat
sbb
das
lods
mov
or
xor
scas
gs
pop
mov
mov
push
incl
fwait
push
scas
lds
negb
test
shrl
jecxz
dec
negl
dec
sti
jecxz
out
sub
daa
les
jecxz
mov
cmp
shl
jno
add
xchg
push
pop
bound
lods
or
addps
bound
incb
pop
shll
mov
jg
movsl
inc
xor
xor
lahf
xchg
xor
pop
sbb
inc
sbb
in
cmp
mov
push
rclb
scas
xchg
pop
test
xor
gs
out
shlb
mov
stos
lcall
and
mov
or
pushf
hlt
iret
dec
les
ret
pop
aam
fwait
push
mov
mov
fistpl
mov
pop
push
sub
dec
js
inc
adcb
dec
call
popf
lcall
cmpsl
subl
cli
push
in
mov
int
mov
push
mov
loop
loope
add
add
scas
push
outsb
xchg
imul
push
loop
gs
je
or
cwtl
inc
leave
jp
inc
adc
dec
mov
sbb
movsl
inc
cltd
mov
pop
xchg
sub
push
ret
in
dec
xchg
mov
ds
std
sub
in
adc
aam
push
dec
push
sub
arpl
or
pop
mov
repnz
testb
xchg
cmp
shll
pushf
jns
cmp
mov
imul
pop
rorb
sub
fmulp
cli
daa
push
pop
repz
frndint
inc
or
dec
sbb
dec
ja
pushl
imul
xchg
mov
out
test
mov
rorb
add
mov
iret
push
test
out
adc
push
icebp
roll
mov
push
sbb
xor
int
adc
add
mov
adc
jle
fwait
cmp
addr16
lahf
xchg
xchg
xor
inc
cmpsl
fiadds
dec
inc
push
and
jp
adc
add
dec
push
das
and
imul
mov
xchg
mov
shl
cmp
sub
les
adc
sbb
fdivrs
rcr
or
adcb
int3
or
and
les
dec
imul
addr16
leave
or
clc
shll
jecxz
inc
cmpb
xor
cmp
cwtl
xchg
mov
or
out
fs
mov
jns
and
mov
stc
push
pop
insb
jno
rorl
fcmovnbe
push
push
jg
sti
adc
push
ror
ss
aam
cwtl
adc
mov
outsl
hlt
mov
add
inc
sti
jo
sbb
sbb
pop
mov
jno
imull
push
xchg
mov
jo
or
mov
push
and
adc
movl
aad
and
xor
loopne
das
jo
jb
and
pusha
sbb
insl
outsl
mov
inc
mov
iret
bnd
fldt
out
push
movsl
rcr
mov
das
outsb
jns
add
push
ja
xchg
pop
mov
pop
int
ljmp
jno
ja
push
aad
mov
lea
pushf
mov
mov
inc
xchg
jle
in
lahf
sub
mov
sub
xchg
jge
int3
cmp
sub
mov
mov
and
and
jle
mov
inc
push
pop
jnp
cmp
and
out
inc
add
mov
repnz
and
xchg
cmpsb
ljmp
jl
lahf
jmp
jecxz
inc
push
push
ljmp
xchg
lret
repnz
mov
shlb
fildl
and
xchg
rclb
call
and
fwait
or
mov
test
out
movsl
cmp
push
fistl
push
faddl
sbb
mov
movsl
push
lock
aam
pop
jge
sub
or
push
mov
pop
inc
aam
gs
test
add
nop
movhps
mov
mov
push
scas
mov
xor
or
outsl
pop
je
mov
push
adc
xor
dec
cmp
scas
push
and
fwait
stos
push
lret
fistpll
push
push
stos
cmp
ret
pop
and
js
jle
pop
int
lret
add
outsl
and
fimuls
js
pop
loope
xor
mov
cli
and
xor
std
aad
test
pop
add
sub
jno
loope
test
or
les
pop
push
sub
inc
add
out
popf
dec
sbb
sahf
and
dec
or
or
dec
movsl
loope
jns
lods
stc
jo
cmc
test
mov
call
fcmovnbe
adc
scas
lret
fwait
popa
js
inc
and
mov
data16
mov
outsb
cmp
iret
inc
enter
jg
jae
inc
or
or
rclb
mov
lahf
stc
jnp
popf
adc
jle
repz
call
mov
popa
shlb
jbe
mov
cmpsb
cmc
inc
leave
arpl
gs
xchg
dec
push
cltd
jle
inc
lea
adc
into
mov
sub
mov
sub
cmpb
dec
mov
je
stc
lahf
outsb
dec
sbb
mov
pop
inc
or
pop
es
fcmovb
bound
or
or
test
cltd
dec
sub
sbb
loop,pt
adc
sub
aam
xchg
adc
es
xchg
inc
out
stc
mov
mov
je
icebp
or
xchg
lods
jns
iret
cmpsb
loope
and
inc
dec
test
mov
into
push
and
cs
ljmp
pop
and
push
xchg
ja
pop
sbb
jno
out
clc
out
pop
xchg
cmp
xor
loop
lret
imul
test
test
test
sbbb
stos
sub
xchg
xchg
and
lock
lds
loop
jae
ja
je
pop
cmpsl
dec
stos
ds
lds
xor
push
push
add
mov
es
or
inc
ss
cmp
or
dec
sbb
dec
push
into
scas
test
dec
push
int3
inc
mov
loop
lcall
cmp
cmp
hlt
cmp
pop
scas
or
or
rcrl
push
scas
shlb
iret
clc
movsb
sub
push
clc
mov
sahf
negl
test
int3
sub
sub
push
movsl
jbe
add
das
and
sub
ficomps
inc
xchg
outsb
cmc
and
or
or
jp
mov
pop
or
pop
scas
xlat
enter
and
lcall
pop
adc
stos
daa
movsb
int
sarb
xchg
pop
subl
add
mov
loop
mov
xchg
fists
sbb
adc
daa
lds
xor
ds
gs
lea
out
shlb
shll
cmp
movsl
mov
ret
jmp
out
pop
or
andb
aas
lds
cmp
jg
xchg
pop
push
inc
mov
notl
ja
out
setno
cwtl
pusha
mov
xchg
fwait
adc
imull
jno
leave
andb
stc
adc
dec
stos
lcall
mov
movsl
cmp
cmp
sub
dec
mov
xor
sub
sub
testl
adc
jg
inc
sub
or
jno
cmpsb
adc
xor
add
adc
movsb
jne
cld
dec
push
inc
movl
ret
xchg
out
mov
xor
jmp
or
jne
stos
xlat
jmp
test
jle
mov
push
in
int3
loop
push
adc
jns
add
jae
jbe
mov
pop
aas
test
dec
push
aas
pop
arpl
cmp
in
xchg
xchg
jae
js
repz
daa
pop
das
es
jno
dec
jge
lcall
inc
into
mov
outsl
mov
addr16
inc
push
jecxz
or
dec
cmpsl
xorb
stc
cltd
mov
popf
lahf
ret
jmp
div
rcrb
push
and
pop
test
mov
test
outsl
loope
jnp
sbbl
lcall
das
xchg
jg
or
movsb
xlat
inc
mov
add
test
xor
pop
fwait
daa
into
xorl
imull
mov
mov
stos
inc
cmp
imul
dec
xchg
mov
sbb
cld
mov
or
movsl
or
ja
divl
loop
in
mov
jb
lahf
adc
gs
sub
sub
pop
push
cmc
sub
sbb
loop
pop
in
mov
and
xchg
inc
les
pop
mov
mov
rclb
iret
pop
mov
inc
gs
sub
push
stc
mov
adc
cmpsb
pop
fwait
jno
shll
xchg
push
scas
mov
in
sub
das
mov
xchg
fdivrs
xchg
test
pop
inc
repz
mov
sbb
mov
test
addr16
mov
and
jl
enter
call
jge
fdivl
andl
xor
jp
push
adc
in
stos
dec
add
cmpsl
fld
adc
jo
jmp
mov
popa
and
sub
sahf
lds
dec
mov
test
pop
lahf
gs
clc
jno
clc
std
xchg
xor
pusha
test
imul
ficompl
jo
xor
jo
cmp
pop
and
cmp
hlt
push
shrl
add
insl
or
cmp
in
mov
imul
loop
jne
mov
add
lahf
stc
jle
pop
fwait
mov
mov
fwait
mov
loope
jg
pop
push
and
clc
leave
ja
fcompl
int3
mov
and
xlat
lret
adc
bound
add
scas
icebp
sbb
int3
xchg
flds
inc
pusha
loope
sbb
xchg
add
aas
dec
das
inc
cmp
adc
add
in
rolb
incb
cmp
add
clc
inc
jo
aam
cmp
sahf
mov
lock
adc
ljmp
fs
jns
out
hlt
xchg
shlb
rcll
xor
push
xor
stos
out
xor
jge
fldl
sbbb
pop
mov
mov
in
repz
pushf
pop
xor
jae
or
mov
mov
push
xor
sbb
cmp
dec
std
sbb
pop
jne
jp
icebp
mov
repz
pushf
cmp
mov
test
sub
test
lods
aas
xor
insl
mov
push
lea
mov
adc
rorb
pop
add
mov
and
adc
pop
rcrb
xor
mov
push
adc
sub
nop
jns
scas
cld
insl
xor
jge,pn
loope
fwait
aad
jnp
ds
mov
addb
shl
out
or
push
add
fwait
dec
push
adc
aaa
jb
stos
dec
mov
stos
pop
dec
dec
in
inc
mov
lret
popw
xchg
mov
ljmp
sub
mov
ss
in
and
movsl
dec
xchg
push
lret
int3
mov
int
pusha
outsb
dec
mov
xchg
fcomps
test
rcr
mov
dec
jne
add
push
dec
push
cltd
subb
iret
push
dec
insl
out
lahf
jnp
inc
mov
les
add
repnz
mov
rclb
std
loope
mov
ljmp
sub
add
repz
and
loopne
mov
inc
frstor
add
ret
jo
jmp
aam
repnz
enter
cmpsb
push
insl
jecxz
jp
test
sub
call
test
or
sti
mov
popf
and
jno
lret
shll
sub
pop
cwtl
fwait
ja
aad
pop
push
cmc
mov
stc
bound
xchg
push
pop
mov
loope
das
lods
jp
add
inc
sub
ljmp
roll
push
push
scas
inc
add
sbb
sub
pop
test
scas
sbb
jmp
sbb
aam
bound
out
movsl
in
sub
into
fchs
pushaw
pop
push
loop
xchg
lods
cmc
mov
mov
cld
ret
les
cmp
jg
jl
xchg
and
das
sti
dec
fisubrs
test
sbb
push
fs
aad
frstor
push
lds
aam
mov
xchg
jns
ljmp
or
mov
cli
jne
xchg
ja
add
jo
sub
cmp
stos
lret
inc
es
cmp
cmp
dec
mov
repz
xor
fildl
enter
push
xchg
scas
xor
es
adc
fwait
mov
nop
movsb
sti
hlt
jg
lret
push
fwait
leave
sahf
ja
lods
and
sub
test
push
lret
push
sub
lret
out
add
cli
xchg
xchg
xor
pusha
aas
inc
adc
jl
out
lret
add
in
stc
add
daa
lea
push
frstor
add
jg
xchg
pop
aam
add
addb
or
scas
push
in
adc
rcl
fs
sti
mov
sbb
fistpll
rcrl
out
test
xchg
bound
imul
pop
pop
pop
jge
pop
clc
int3
inc
addr16
das
int3
sti
fbld
jecxz
out
fiadds
aaa
xchg
or
fldl
pop
jle
xor
pusha
es
incl
or
mov
addl
add
int3
out
push
mov
mov
mov
add
xchg
add
imul
mov
loop
pop
movsl
repnz
cmp
stc
lods
add
xor
lock
rorb
popf
out
xchg
jl
pop
movsl
pop
mov
dec
scas
xchg
mov
mov
lock
cltd
movl
je
fnstcw
sub
pop
xor
in
repnz
push
enter
pop
aas
mov
nop
inc
or
or
adc
xchg
jecxz
arpl
stos
and
pusha
rolb
xchg
je
rorb
ja
mov
das
mov
jmp
pop
jae
sub
xchg
ficoml
push
xlat
test
out
or
pusha
iret
cld
loope
into
xor
add
outsl
ficoml
mov
push
mov
test
fbld
fcom
adc
jns
xchg
popa
xor
cli
out
xor
or
mov
clc
or
mov
cmp
movsl
lcall
cmp
sbb
add
xor
je
std
shrl
sarb
rorl
pop
fistl
sbb
adc
ror
push
or
ss
pop
bound
inc
jg
xchg
inc
insb
lret
xor
aam
add
inc
cmc
mov
scas
insl
cltd
or
rcrl
popf
lea
and
add
or
add
bound
sahf
es
outsb
push
cmp
mov
mov
push
shrl
fidivs
mov
popf
push
sbb
mov
aas
sarl
in
imul
lret
repz
xor
inc
enter
lods
clc
nop
inc
icebp
mov
cmpsb
push
sti
repz
pushf
sub
outsl
fmul
fld
fbstp
aam
jne
xor
scas
nop
pop
mov
inc
or
cmp
icebp
pop
int3
fcomps
mov
shrb
mov
aam
scas
inc
inc
sarl
arpl
jne
add
xchg
mov
pop
out
in
and
fld
pop
aas
popf
pop
jle
or
cld
push
rcll
adc
ret
movsl
leave
shl
adc
leave
cmp
hlt
adc
arpl
aas
adc
mov
mov
pop
sahf
sub
and
mov
xchg
insb
ja
dec
xchg
jb
mov
rclb
add
imul
add
push
or
pushf
pop
movsb
cmp
mov
sbb
jbe
loope
jmp
ss
in
mov
les
inc
rol
xchg
jns
movsb
jp
out
mov
or
icebp
jmp
mov
pop
sub
bound
and
hlt
jbe
lret
rclb
and
jo
outsl
jle
into
inc
and
outsb
xchg
jl
dec
enter
add
fsubrs
cld
das
mov
push
xor
push
cmp
jp
mov
add
outsl
popf
into
insb
adc
mov
subb
jns
dec
pop
xor
ss
mov
call
sahf
imul
inc
inc
sbb
push
inc
mov
adc
pop
aam
pop
pop
iret
mov
sub
stos
clc
sbb
mov
in
or
leave
sub
scas
and
push
lock
mov
stc
mov
jo
sub
sbb
das
dec
stos
or
cmp
imul
dec
mov
inc
push
dec
sbb
stc
test
or
inc
repnz
cmp
in
lds
rcrb
mov
test
mov
je
inc
mov
mov
vpunpcklbw
and
into
cltd
push
dec
sbb
inc
out
dec
jp
jecxz
adc
pop
mov
jbe
mov
stos
inc
xor
push
xchg
lea
lds
xor
pop
ret
pop
mov
or
mov
test
xchg
sbb
loopne
fistl
fisttps
sub
shrb
cli
fldenv
push
pushf
jp
cmpb
pop
lret
test
adc
pop
sbb
sti
mov
in
sahf
dec
movsb
add
sub
xchg
rol
filds
lret
or
lret
dec
cmp
inc
mov
das
mov
push
retw
or
mov
mov
or
inc
inc
mov
stos
out
adc
lea
ljmp
insl
inc
imul
sub
les
add
mov
das
popa
jnp
lret
xchg
repz
lcall
and
cmp
xchg
aas
loopne
cmp
test
mov
xlat
rcll
mov
dec
je
pusha
add
push
mov
out
jle
mov
incb
push
sbb
push
sub
js
scas
pop
inc
pop
adc
mov
mov
lahf
jl
mov
fcomip
cmp
mov
in
lret
ja
int3
cmc
pop
in
test
jno
mov
mov
dec
xchg
xchg
nop
mov
cmpb
jo
or
pop
mov
push
movsl
dec
popa
in
mov
add
jne
inc
push
xchg
test
dec
repz
iret
ret
test
push
leave
js
and
das
mov
fsubp
not
pop
or
mov
lods
inc
mov
mov
pop
lahf
cli
sbb
shlb
and
out
outsb
lcall
js
stc
or
insl
movsl
lahf
xor
test
sbb
shrl
int3
sbb
jb
mov
adc
lahf
pop
xor
imul
cmp
xor
lret
inc
jb
pusha
push
sar
xor
mov
mov
xchg
mov
or
adc
btc
cmpsb
mov
adc
and
sbb
pop
jns
push
jmp
jmp
mov
jge
adc
popf
xor
mov
adc
mov
mov
mov
popf
cwtl
stos
mov
pushf
sbb
push
call
mov
ja
jb
lahf
clc
push
mov
into
mov
mov
ds
mov
loopne
jnp
jp
jbe
jno
xor
xchg
mov
push
push
xchg
pop
pop
mov
sbb
sbb
daa
int3
sbb
dec
data16
test
push
fwait
sti
ljmp
nop
jno
xor
into
test
lods
push
pop
push
xchg
xor
shrb
dec
sbb
ret
mov
inc
inc
stos
fistps
mov
and
sub
mov
leave
cld
lea
lock
sbb
aaa
xchg
out
pop
popa
mov
pop
push
sub
test
int
fldcw
sbb
out
call
sub
loopne
sub
push
mov
xchg
mov
test
int3
pop
adc
scas
sahf
ljmp
leave
test
pop
loopne
repnz
mov
push
mov
adc
js
pop
inc
movb
xchg
xchg
sbb
repz
daa
call
test
jno
repz
outsl
xchg
and
sbb
scas
inc
ficoml
adc
inc
xchg
movl
sbb
lahf
fnstenv
sub
ljmp
pop
sub
cmpsb
jmp
data16
sub
or
pop
inc
sahf
cmp
cmpsb
cmpsb
out
fldenv
lock
in
fwait
add
ret
push
dec
ret
push
in
fimuls
pop
fdivr
scas
mov
pcmpeqb
jmp
out
shrl
add
sbb
jbe
xor
push
sbb
jno
popa
pop
dec
sub
push
stos
loop
jg
xchg
pop
jnp
int3
add
cld
daa
in
jmp
sub
sub
mov
adc
push
inc
dec
cmp
repnz
jbe
adc
add
cmpps
lcall
sbb
scas
cmp
xor
pop
jge
dec
nop
cld
gs
xor
pop
mov
add
dec
jmp
sahf
repz
add
push
sbb
inc
fsubrl
jnp
xor
lds
js
fcomps
lret
and
mov
mov
mov
mov
push
mov
adc
add
dec
adc
cmp
aam
mov
add
sarb
or
mov
add
mov
je
sub
and
mov
mov
cmp
inc
mov
add
adc
fsubs
jns
jbe
aad
or
jmp
aaa
xchg
pop
in
fxch
and
dec
dec
leave
pop
out
es
popl
pop
inc
iret
or
cmp
movsl
jmp
sbb
and
sti
cmp
xor
lret
push
xchg
stos
and
imul
fdivp
call
inc
inc
and
test
inc
je
add
cmp
into
xchg
pusha
sbb
cwtl
fwait
and
xor
cmc
popa
mov
loopew
stos
sbb
push
sbb
push
call
jge
mov
scas
xor
ret
mov
lahf
ret
xchg
push
js
jle
mov
push
subl
and
out
jb
adcb
mov
jae
data16
int3
icebp
pop
jns
rcl
pop
imul
pop
sbb
inc
stos
mov
pop
xor
xchg
push
and
pop
dec
xor
aaa
mov
jne
fimull
pop
xor
int
pop
mov
or
cmpsl
adc
pop
push
sbb
cltd
adc
iret
sbb
jmp
push
aad
pop
jae
adc
mov
sar
jb
lcall
inc
aas
sbb
mov
pushl
lea
inc
mov
sub
add
cmpsl
mov
cwtl
adc
das
dec
jne
into
int
loope
int
pusha
add
aam
inc
and
inc
xor
cmp
fdivl
mov
fwait
inc
loopne
adc
xchg
adcl
xor
test
xor
xor
shr
orb
xchg
imulb
dec
pushl
jnp
adc
mov
adc
pop
cltd
xchg
pop
fdivr
pop
adc
rcll
mov
add
out
mov
cmpsb
repz
lahf
xchg
adc
sub
xchg
out
addr16
jmp
out
adc
pop
and
pop
mov
loope
or
ds
xchg
xchg
jl
push
clc
loopne
shll
and
gs
push
cmp
inc
lcall
std
ret
idivl
xchg
ljmp
fstpt
dec
std
mov
xchg
lods
cli
mov
test
int3
jge
test
cld
pushf
and
cmp
sub
mov
cmp
outsb
fyl2xp1
in
pop
xor
popa
cmp
scas
sub
rcrb
dec
inc
or
arpl
fimuls
dec
jnp
aad
and
dec
adc
cmc
push
push
imul
jno
outsl
push
enter
pop
outsl
mov
lret
push
push
and
lock
jns
sub
mov
cwtl
sti
xchg
mov
nop
jecxz
insl
sbb
sahf
adc
pop
aam
mov
or
pop
outsl
mov
push
cmc
stc
popa
sbb
mov
jge
push
hlt
add
icebp
adc
mov
fbld
pop
lods
cs
test
cmp
push
movsl
mov
sub
sbb
inc
adc
js
addr16
pop
jno
jmp
cmp
addr16
ja
pusha
ss
ror
mov
sbb
hlt
iret
sub
ljmp
into
cmpsl
xchg
sub
mov
outsb
mov
pop
jge
and
sub
mov
jge
les
leave
leave
jb
push
movsl
movsl
dec
gs
xchg
push
loope
lcall
cmpsl
xchg
js
out
int
adc
mov
pop
cmp
mov
leave
xor
jo
xchg
ret
bound
dec
add
out
call
out
jnp
andb
inc
lock
test
popa
xchg
mov
inc
xchg
mov
xor
pop
daa
imul
int
lret
jl
xor
cmp
sahf
sub
ret
sarb
xchg
push
std
jg
into
jbe
test
or
push
jo
rcrl
fsub
mov
cwtl
add
arpl
mov
add
fisttpl
divb
and
jb
jge
pop
sbb
dec
in
or
aad
sbb
sub
pop
adcb
jle
cwtl
lret
or
cwtl
roll
test
cmp
aas
mov
inc
xchg
or
lahf
jp
mov
popa
pushf
jo
inc
pushf
mov
pop
fnstenv
cmp
jl
pop
push
movsl
add
or
xchg
dec
jns
cmp
stos
or
sub
leave
cmp
sub
dec
push
xchg
xchg
or
flds
and
adc
or
pop
lret
jl
pop
bound
pushf
test
adc
inc
data16
cmpsb
push
xchg
sub
inc
in
test
mov
mov
out
and
cwtl
shlb
mov
ds
sbb
mov
mov
add
jle
mov
rolb
cli
dec
lods
cld
stc
je
leave
enter
arpl
push
or
jge
fwait
sub
movsl
adc
mov
int3
shr
mov
adc
pop
sub
popa
iret
scas
xlat
clc
add
xlat
lret
int
xchg
push
ss
mov
cmpsb
scas
popf
clc
fucompp
sub
cmc
lds
das
stos
push
and
ret
pop
pushf
mov
pop
cli
sti
in
inc
xor
add
cmpsb
lcall
sbb
stos
shrb
push
out
xchg
out
dec
dec
adc
fisttps
xor
sbb
idiv
jne
xorb
mov
leave
fidivrs
test
ja
lea
mov
hlt
cmp
add
rcrl
mov
imul
push
jp
mov
ja
clc
fldl
psrad
jge
sub
mov
ja
lock
cmc
cmc
or
sti
fs
jle
sub
xchg
ss
fnstenv
cmp
dec
xor
in
push
xchg
push
pop
shrl
cmp
mov
pusha
jmp
or
jo
inc
cwtl
sbb
shl
add
sub
addl
push
aam
ret
out
add
pop
cmp
and
xchg
mov
loop
out
dec
out
leave
pop
adc
jp
pop
jne
negb
aad
sbb
push
pop
lods
sarb
sbb
outsb
lods
mov
mov
cmp
test
fsts
cmp
jns
push
cmp
fsts
adc
push
ret
push
aaa
outsl
mov
fucomi
push
mov
push
mov
cmp
lods
pand
dec
jp
aad
fxch
sbb
sahf
sahf
or
xchg
jne
pop
lret
jo
mov
mov
jbe
imul
jecxz
mov
loopne
scas
bound
and
inc
pop
add
cmp
stos
ss
xor
leave
mov
out
push
ja
repz
sbb
ljmp
dec
adc
xchg
or
fldl
ret
out
or
popa
icebp
mov
xor
fisubl
sti
sahf
mov
fdivrl
pop
out
push
movsb
bound
sarl
jmp
xor
xchg
xchg
sub
sub
loop
dec
mov
enter
in
cmp
je
cmpsb
xor
push
lahf
jmp
mov
mov
movsb
jo
mov
xchg
pop
insb
pop
mov
xchg
and
iret
rcrb
lods
cmpsl
mov
sub
push
add
loop
sbb
push
pop
cwtl
add
shr
lret
addr16
pop
mov
push
fdivr
pop
mov
dec
pop
lea
push
mov
jne
loope
pop
sti
dec
es
pop
repz
repz
lods
insl
scas
lock
test
pop
dec
movsl
pop
lods
add
jg
xchg
inc
jno
mov
add
fisubrs
dec
mov
inc
inc
notl
rorl
fnstsw
push
ret
jno
pusha
adc
inc
jecxz
fstpt
test
fs
jge
lods
aas
mov
repnz
loop
test
js
outsb
and
mov
repz
mov
push
and
add
sub
dec
xchg
push
rol
int
jecxz
dec
pop
lea
ret
loopne
push
and
ja
fcomip
add
pop
cmp
inc
cmp
ficompl
in
mov
into
mov
push
mov
enter
fisttps
call
xchg
mov
sub
pop
adc
xchg
rep
ficoms
inc
mov
out
into
aam
cs
scas
jl
sub
test
call
mov
insb
sbbl
sbb
push
mov
sti
xor
and
dec
test
mov
sbb
sahf
fs
inc
clc
sbb
test
mov
inc
mov
mov
xor
test
mov
sub
push
cmpsb
xchg
ja
xchg
aas
and
xchg
push
nop
cmp
mov
xor
xor
neg
jg
and
adc
outsl
imulb
test
or
dec
mov
xchg
ljmp
pushf
movsl
fcmove
or
fs
or
pushf
sub
dec
mov
xchg
aad
scas
es
adc
fs
je
stos
mov
mov
addr16
mov
test
dec
insb
rcrl
arpl
cmc
cmp
cmp
xchg
mov
sbb
inc
push
mov
inc
les
pop
subb
arpl
test
std
popf
fwait
mov
jae
lds
outsl
shlb
aam
mov
aam
cmp
sub
mov
xor
sbbb
adc
adc
sub
mov
mov
sub
push
rcr
sti
xchg
call
dec
rorl
sbb
cmp
and
arpl
cmc
call
inc
stc
decb
push
adc
lahf
test
sub
xchg
ret
xchg
push
lea
das
add
in
jg
adc
sahf
leave
sarb
mov
addr16
push
sbbl
jnp
loope
shrb
lock
clc
cmp
or
and
adc
mov
sub
mov
lcall
inc
pop
cmc
cmp
jnp
push
jl
xchg
jo
fwait
dec
push
push
and
inc
movsl
jae
ja
lcall
add
in
and
xchg
test
insl
lock
mov
pop
stos
mov
dec
aam
inc
out
mov
pop
xchg
and
sbb
cmp
aas
xchg
inc
loop
jno
or
pop
xchg
sti
cmp
lret
or
ret
clc
ret
jecxz
fbstp
adc
cmp
adc
xlat
aad
push
aas
and
shrl
push
dec
jmp
sub
mov
and
jl
movsb
iret
xlat
and
inc
push
push
xor
jno
and
adc
push
ss
ss
pusha
mov
jp
xor
cmp
inc
add
cmp
lret
mov
idivl
shlb
pop
cmp
stos
fsubrl
xor
pop
aad
pop
jnp
xchg
jl
outsb
xor
adc
push
push
pop
mov
mov
mov
and
inc
fnstenv
push
nop
xchg
push
insl
mov
sub
xor
mov
cs
and
stc
mov
and
add
jae
jno
mov
jns
pop
or
add
xor
mov
mov
jge
bound
das
or
cmp
popf
rcll
es
testb
adc
out
push
leave
fadds
sbb
loop
bnd
jns
mov
dec
stc
xor
lret
sbbl
cmp
jge
and
out
mov
sbb
push
popa
daa
out
xchg
cmp
psubsb
das
inc
and
mov
or
dec
test
xor
ret
repnz
pushf
jl
arpl
data16
push
adc
or
pushl
sub
dec
sbb
call
add
addr16
out
adc
adc
sarl
jl
ljmp
sub
and
cs
js
xor
or
mov
lahf
test
fimull
mov
ss
sub
cs
ficoml
ss
stos
sbb
xchg
dec
sbb
cmp
leave
sub
push
push
cmp
xchg
xchg
xor
sub
iret
xchg
pop
mov
testb
mov
cmp
nop
int3
jmp
adc
push
jae
test
stc
das
xchg
ret
roll
xor
xchg
daa
dec
push
or
repz
mov
dec
lock
ret
scas
fsubl
andb
mov
sub
je
xchg
and
mov
sub
out
ror
dec
pop
outsb
inc
pop
jbe
cltd
jp
js
xorl
xor
arpl
inc
xchg
dec
and
mov
push
push
mov
fiaddl
je
data16
sbb
inc
icebp
adc
pop
filds
mov
test
mov
enter
inc
cmp
fisttps
mov
outsb
push
adc
outsl
popa
mov
in
jae
sbb
sarb
mov
sbb
loop
lods
sub
stos
outsl
mov
inc
enter
lret
mov
jle
xor
sub
cmpsb
cmp
pop
push
inc
mov
into
icebp
cmp
movsb
mov
js
fisttpll
mulb
popa
cwtl
fisttps
cwtl
fdivrl
mov
mov
xor
in
or
sub
jge
cmp
mov
xor
jp
pop
mov
adc
test
call
test
jmp
push
aas
into
into
repnz
pop
pop
adc
jge
test
push
loope
popa
xor
neg
lea
add
add
fldcw
mov
push
xchg
bound
pop
add
xor
pushf
push
test
xchg
dec
mov
repz
and
daa
cwtl
sub
movsl
inc
jo
jno
push
stos
lock
repnz
lods
xchg
mov
mov
ds
mov
sti
lds
xor
call
data16
push
sbb
xchg
inc
dec
push
mov
imul
dec
clc
cmpsl
dec
loopne
mov
push
sbb
push
mov
adc
mov
jmp
iret
lea
in
xchg
sti
aad
pop
xor
push
dec
and
xchg
cs
inc
sub
mov
or
into
and
into
fs
int3
cmp
push
test
outsb
sub
out
and
in
xor
cmpsb
sub
popa
xchg
mov
jmp
push
add
cmp
dec
insl
cmc
fisttpl
cs
ret
inc
mov
pushf
sbb
xchg
aam
xchg
imul
call
stos
sub
ss
int
jmp
jb
repnz
inc
test
mov
call
lods
dec
inc
out
mov
out
push
xlat
mov
int3
scas
cmp
movsl
push
and
dec
adc
add
mov
and
xchg
fistps
xor
outsl
dec
jle
int
pushf
fdivrp
xchg
sub
into
dec
mov
shlb
or
push
mov
aam
xchg
push
ss
push
subb
movsb
push
fsubrl
aam
fcoml
dec
or
aam
lea
out
pop
xor
repz
incb
test
rorb
pop
mov
mov
adc
mov
dec
pushf
cmp
data16
sub
sarl
mov
rolb
pushf
inc
loopne
test
or
imul
jp
leave
mov
and
cmp
jecxz
clc
push
cmp
movsl
in
mov
add
or
jnp
test
push
push
loopne
mov
lcall
rorb
xchg
sub
mov
aas
sub
loopne
movb
add
xor
inc
push
popa
jno
ficomps
testb
popl
xor
push
test
mov
pop
and
imul
mov
scas
testb
repnz
loopne
pop
cmpsb
push
push
or
xor
aad
push
mov
or
les
scas
shll
sub
add
xor
test
xchg
inc
sub
into
cmp
xchg
push
inc
js
js
test
fcompl
shll
push
ret
mov
mov
mov
or
sbb
enter
sarb
sub
pop
xchg
hlt
cld
and
test
mov
xor
mov
in
out
je
das
lods
stos
jns
cmpl
outsb
mov
fdivp
shr
pushf
sti
fldt
bound
repz
in
jg
idiv
daa
mov
push
inc
aad
mov
jp
xchg
jecxz
dec
addb
adc
inc
shrb
jmp
jb
dec
lea
lret
rcll
les
pop
das
xor
rorl
cmpsb
stos
pop
pop
push
pop
xlat
ljmp
jp
insb
mov
lret
mov
xchg
jbe
push
mov
xchg
xor
sbb
mov
mov
andl
or
mov
iret
test
enter
in
mov
repz
xor
repnz
icebp
aas
jp
out
out
test
loopne
in
cmp
cmpsl
lds
std
push
popf
iret
mov
lret
sbb
outsb
mov
out
scas
jmp
fldcw
inc
and
test
outsl
push
or
popf
shl
mov
hlt
sbb
push
push
scas
sbb
clc
cmp
mov
clc
fadds
cmp
rcrl
iret
sbb
jno
mov
or
mov
sbb
xchg
or
adc
xchg
fsubrs
adc
je
xchg
ds
lret
push
jge
and
insl
sbb
ljmp
push
push
mov
stc
cmp
scas
inc
loope
into
stos
jge
andl
ja
dec
cmp
mov
dec
sbb
sbb
mov
xchg
add
lcall
pop
sbb
and
cld
xor
js
fcoms
mov
rcrb
test
mov
scas
movsl
inc
in
mov
test
sbb
pushf
mov
out
lahf
ficoml
aas
pop
out
inc
jbe
cmp
fs
jmp
mov
pop
in
pop
add
mov
roll
xchg
rcr
lret
insb
cmp
je
pop
bound
pop
bound
lret
insl
pop
or
push
xchg
or
mov
mov
mov
and
adc
xor
test
sub
clc
rol
in
lea
loop
add
and
jbe
adc
lahf
jns
dec
jecxz
pop
dec
adc
das
inc
insb
and
and
mov
lcall
pop
lret
popf
mov
mov
or
aaa
sbb
pop
fnsave
pusha
jecxz
or
mov
gs
xlat
xchg
add
arpl
sbb
lods
pop
fbstp
pusha
jo
sbb
jg
and
cld
or
dec
fs
push
adc
adc
cmp
frstor
imul
aad
adc
adc
cli
decb
testl
popf
jo
xchg
jmp
imul
add
clc
arpl
jbe
loop
xor
les
xchg
jl
mov
into
adc
imul
out
fistpl
jbe
xor
push
push
movaps
push
inc
pop
fsubl
orl
aaa
add
xchg
int3
pop
and
add
sti
sub
dec
out
sub
iret
movsl
prefetch
or
inc
pop
mov
lcall
jmp
add
lcall
mov
sbb
jns
sbb
jnp
jp
imul
lret
lock
push
test
adc
mov
pushf
mov
enter
add
sub
mov
hlt
test
jnp
out
and
mov
adc
push
enter
jge
mov
and
fadd
push
push
loop
push
ljmp
jnp
stos
cmp
pop
and
inc
xor
push
nop
jmp
fcomi
or
arpl
lods
mov
mov
das
rcll
mov
xchg
daa
scas
add
add
scas
add
push
lods
dec
xlat
rcrb
or
xor
sub
adc
push
lret
cmp
inc
lea
or
xor
cmp
into
push
sbbl
xchg
cmpb
and
test
rcrb
lock
sbbb
mov
lods
or
lds
push
adc
gs
inc
out
xchg
dec
in
dec
int3
ret
ljmp
xchg
leave
ss
in
jecxz
aaa
push
xlat
xor
gs
pop
jns
mov
jl
cwtl
fmuls
push
push
sub
mov
sahf
or
inc
test
add
xor
fistl
pop
mov
pop
xchg
mov
cwtl
adc
popa
ffreep
rcr
and
test
test
mov
mov
jnp
cli
dec
lret
add
inc
xor
mov
stc
jb
xor
pop
dec
pop
popa
popf
dec
das
loop
pop
xchg
test
add
lret
xchg
imul
mov
lret
or
mov
mov
test
test
sub
lods
fstl
adc
lods
mov
lret
or
scas
push
test
std
dec
out
pushf
xor
pop
sbbl
xchg
leave
sbb
movsl
or
mov
mov
outsl
inc
jge
scas
ss
popa
arpl
jno
call
push
or
inc
and
lea
mov
repz
mov
aam
repnz
mov
push
test
dec
in
test
xchg
jns
pop
mov
cmp
xor
mov
and
or
aas
stc
std
inc
sarl
rcll
ret
test
xlat
mov
sub
loopne
jae
ljmp
rcrl
cwtl
leave
test
mov
xchg
dec
jne
hlt
jbe
pusha
mov
dec
xchg
sbb
js
js
mov
stos
pop
out
sbb
push
xor
push
push
outsb
sbb
dec
icebp
pop
repz
fstpt
cmp
inc
push
xchg
int
mov
adc
repz
mov
or
mov
xchg
rcrl
ficoml
lock
jb
push
nop
lea
adc
push
scas
add
lods
je
or
repz
xor
mov
stos
mov
orl
jae
xchg
add
jmp
and
mov
jmp
push
mov
jbe
outsb
mov
xor
add
pop
mov
or
push
orb
pop
test
scas
out
sti
cmp
gs
adc
popf
icebp
insb
or
pop
adc
and
sti
js
outsb
add
inc
in
sub
icebp
fptan
std
aam
jle
mov
or
and
aam
mov
add
sahf
push
shlb
xchg
repnz
push
inc
cmc
in
fwait
out
arpl
adc
shlb
sub
and
pop
sub
pop
fbld
and
popa
jp
stc
xchg
js
or
pop
inc
xchg
sub
sub
test
ret
xor
cmp
push
cmp
insl
js
outsb
imull
sbb
sub
mov
push
mov
pop
sbb
movsb
jb
test
clc
test
in
pusha
jl
in
pop
movl
xchg
mov
push
ror
cmpsl
ja
mov
pop
cmp
cmp
int
jp
into
sub
stos
xchg
in
sbb
sub
push
sbb
pop
or
mov
inc
stc
hlt
xor
cltd
jbe
aaa
icebp
sbbb
jl
lods
and
mov
lcall
test
lret
or
or
jmp
loopne
xchg
or
in
dec
test
rolb
mov
ret
or
outsb
rorl
out
inc
mov
insl
xchg
stc
arpl
lret
enter
push
xor
or
insl
je
cmp
mov
pop
push
stos
aaa
loop
hlt
jmp
cmpsb
icebp
mov
xor
xor
imul
mov
int
bound
nop
nop
imul
or
mov
cld
inc
pop
movsb
scas
dec
loopne
inc
filds
or
xor
lea
pop
mov
mov
and
scas
and
xor
mov
push
mov
or
lock
notb
sub
and
add
and
jmp
xchg
clc
cmp
sbb
lods
sub
icebp
push
je
icebp
sub
fsubs
repnz
aas
lcall
loope
jp
pop
mov
sub
push
add
ret
pop
mov
push
push
js
popf
es
sub
add
call
and
pop
adc
hlt
xchg
jb
xchg
icebp
ret
jle
setp
dec
dec
pushf
add
cwtl
adc
sbb
aam
pusha
decb
pushf
lahf
jo
fiaddl
stos
cmpl
mov
cmpsl
xchg
xor
push
mov
dec
hlt
add
dec
mov
test
inc
lods
popf
imul
jae
ja
cltd
add
adc
fldt
outsb
mov
insl
outsl
jo
mov
dec
dec
pop
jp
fldl2e
leave
push
outsl
jp
mov
add
test
jl
enter
mov
test
inc
push
push
lcall
sbb
jne
je
xchg
out
adcb
dec
pop
addr16
inc
add
dec
xlat
imul
cmp
cmp
cmp
lds
fildl
int3
mov
adc
fbld
xor
jo
and
adc
push
push
mov
adc
xchg
lods
jmp
arpl
test
add
xor
and
pop
add
aad
or
sub
lahf
in
mov
add
pop
repz
xor
lret
mov
jb
ficoms
in
imul
xor
push
cmpsl
shlb
testb
icebp
loop
or
lock
jne
mov
mov
lds
and
aas
push
je
bound
push
aam
and
fadds
sbb
sbb
sahf
fisttpll
mov
leave
xchg
aam
jbe
aaa
or
jb
and
and
ljmp
or
ret
sbb
fldcw
cmpsl
fsubl
mov
leave
jne
cmp
add
mov
lods
test
dec
mov
fistps
and
call
or
jns
mov
xor
dec
das
jle
mov
add
mov
mov
pop
and
gs
mov
jbe
js
cmovge
mov
daa
jmp
sbb
adc
repnz
imulb
dec
adc
out
stc
sub
mov
fisubl
xor
cli
data16
pushf
aam
jle
ljmp
outsl
sbb
add
push
inc
inc
pop
out
mov
fidivs
ljmp
jbe
add
fbstp
setl
mov
and
jl
mov
mov
jg
cmpsl
cmp
push
mov
push
popf
sbb
dec
ljmp
xchg
adc
test
and
cmpl
lretw
rcl
clc
test
inc
pop
xlat
popa
and
dec
ds
push
cmp
cmp
inc
adc
mov
loop
adc
adc
push
sahf
mov
jecxz
rcrb
sbb
and
mov
dec
mov
sub
xchg
test
sarb
adc
mov
push
cmp
sub
xlat
bound
int3
mov
cmp
adc
mov
fnsave
cmp
xchg
or
add
mov
sub
push
xchg
jns
inc
mov
jg
nop
push
dec
and
inc
jbe
push
ds
xchg
xor
cmpsb
mov
lods
scas
inc
jns
and
cmpsb
jae
roll
xor
mov
cmpsl
mov
xchg
mov
jmp
popf
das
push
mov
dec
or
adc
jmp
mov
lcall
adc
lahf
xchg
outsl
jl
fcomps
push
cld
and
xchg
cmp
std
sbb
adc
das
testb
out
or
fbld
imul
jno
mov
lret
jns
jle
xchg
or
shll
pop
jle
mov
add
ficoms
scas
in
and
sub
xchg
lds
adc
lahf
push
jo
sub
add
andl
or
add
imul
or
xchg
xor
shlb
cmp
and
jns
ljmp
sahf
pop
xlat
push
inc
ror
imul
pop
lods
or
les
mov
gs
add
call
cmp
aad
imul
push
idivb
mov
stos
loope
popa
stc
dec
xor
and
push
mov
pop
sbb
enter
add
xchg
add
add
imul
xchg
inc
stc
xchg
dec
leave
repz
ret
fidivrl
pushf
in
xor
mov
cltd
and
decl
loopne
and
pop
or
jecxz
movsl
xchg
int3
imul
cli
cmpsb
jl
lcall
dec
pop
pop
push
hlt
mov
mov
inc
jecxz
lcall
loope
cld
or
mov
and
add
cwtl
ret
int
mov
test
push
mov
add
sbb
cmc
loop
rcrl
fidivl
mull
in
xor
and
insl
jg
cmp
or
lods
enter
pop
sub
in
sub
pop
lret
fidivs
sbb
mov
fnsave
outsb
pop
and
add
adc
dec
std
jae
or
out
pop
pop
aas
icebp
ljmp
xchg
mov
rolb
inc
pop
fcmovbe
cmp
ret
and
aad
push
outsb
adc
ds
pop
insl
aad
mov
pushf
imul
inc
hlt
mov
aas
fmull
leave
jg
xor
cmpsl
or
sahf
jns
xlat
insb
lcall
div
inc
dec
mov
xchg
mov
sub
or
sub
sti
mov
fdivp
sbb
mov
sahf
rcrl
xchg
arpl
jmp
mov
and
mov
orb
std
xchg
lahf
cs
ret
mov
pop
push
arpl
dec
das
push
popf
push
shlb
push
inc
jg
push
aaa
stc
push
fists
faddp
sbb
rolb
jbe
lret
ret
repz
pop
enter
loopne
cmp
daa
out
ljmp
jbe
cmc
push
dec
hlt
sbb
dec
lahf
mov
stos
jbe
push
fs
fisubs
out
js
dec
rcrb
cmp
stos
lcall
inc
imul
pushf
pop
shll
mov
gs
sub
inc
sub
xchg
adc
mov
rol
mov
mov
je
mov
push
xorb
int
in
call
sub
pop
mov
sti
jb
jns
inc
jb
lcall
mov
sub
jbe
leave
sub
or
add
push
popf
lock
sbb
orl
cltd
stos
or
in
jbe
mov
aas
iret
pop
jge
insl
xor
fimull
gs
orb
sbb
adc
mov
shrl
insb
cmp
insl
sub
mov
in
xchg
lods
into
js
cmp
and
test
nop
xlat
dec
sbb
fs
add
adc
stos
into
cmp
popa
ret
loope
jb
sub
aas
movsl
xor
insl
fcoml
pop
push
loopne
lea
cmpsl
in
pop
and
jnp
mov
loop
addb
lahf
sbb
cmp
xchg
cld
jg
sbb
iret
adc
pop
adc
out
cli
jg
pop
arpl
dec
adc
std
add
dec
jnp
arpl
adc
mov
inc
mov
sti
xlat
xor
cmp
xlat
mov
insl
dec
cmp
lds
insl
dec
mov
int3
and
cmp
xor
test
pusha
mov
mov
int
aam
mov
pop
jno
and
mov
div
add
cltd
insb
xchg
jmp
mov
pop
xor
out
jns
je
daa
pop
dec
loop
lods
sbb
std
fcompl
and
push
push
sarb
dec
xor
mov
inc
cmp
add
xlat
xorb
shrb
jo
mov
fldcw
das
mov
mov
test
dec
inc
adc
or
or
imul
ret
lret
xchg
in
pop
push
pop
push
out
cli
sbb
mov
add
outsl
lcall
sti
mov
daa
xchg
popf
add
dec
in
sti
push
pop
jmp
test
mov
push
rorb
push
pusha
sub
xlat
out
adc
mov
outsb
cmc
and
add
clc
push
dec
pop
lods
mov
jmp
pop
cmp
rcll
addr16
es
add
and
test
or
sub
popa
sbb
mov
stos
mov
push
adc
mov
add
stc
arpl
push
or
in
fwait
mov
fsubrp
cli
push
mov
push
fistpl
out
or
insl
mov
cli
shll
cli
sti
scas
push
adc
shlb
mov
out
hlt
dec
adc
pop
pop
push
shll
jne
insl
iret
inc
dec
or
mov
aam
scas
jbe
xor
mov
fs
cmp
mov
enter
add
stos
mov
mov
int3
enter
adc
addr16
ror
mov
dec
shr
push
inc
lret
sub
je
inc
inc
loop
cmp
inc
and
add
iret
outsl
xor
mov
cmc
or
cld
xor
mov
scas
cmp
call
fisubrl
pop
adc
and
and
mov
out
test
rcrb
mulb
push
mov
push
sub
xchg
sar
into
inc
sbb
lock
out
adc
lcall
and
roll
push
mov
cmp
int
mov
mov
stos
out
inc
sbb
flds
pushf
test
shlb
pop
iret
xchg
jecxz
jle
int3
add
sub
lods
sbb
jl
sub
in
mov
jmp
add
popf
cmpsl
lret
cmp
rclb
leave
push
daa
xchg
and
cmp
scas
ljmp
aad
xchg
bound
sub
out
daa
je
cwtl
mov
xchg
mov
bound
call
xchg
push
cmc
fsubl
ljmp
and
lods
insl
push
nop
cmp
cli
aad
rolb
lret
pop
push
sar
mov
setae
inc
pop
pop
lfence
adc
addr16
sbb
dec
push
xor
ret
push
push
inc
rorb
rol
push
movsl
shl
inc
sbb
jb
mov
mov
stc
icebp
mov
lea
cmp
out
sub
pop
mov
adc
addr16
mov
jno
sub
push
and
jb
ss
gs
imul
das
mov
add
sbb
lret
lahf
mov
xchg
mov
in
icebp
leave
test
and
add
or
jo
xchg
and
repz
aaa
adc
outsb
out
icebp
lret
add
jp
cmp
lret
lret
inc
inc
fisttps
xchg
push
mov
push
sbb
inc
lock
jns
mov
pop
or
inc
xchg
fisubl
cmp
mov
inc
in
stos
cld
cs
jb
popf
push
xor
push
push
loope
adc
in
leave
sahf
push
aam
jo
and
inc
data16
daa
pop
xor
cli
push
pop
push
mov
adc
das
cwtl
lret
loop
pop
out
push
cmovb
xchg
jmp
pop
xor
and
fldcw
neg
jg
clc
jecxz
xchg
inc
push
movsb
xor
or
xchg
in
and
dec
jmp
mov
xor
sub
push
jp
or
mov
insb
adcb
je
stos
push
loopne
add
data16
mov
int
push
lea
push
push
push
jo
xor
test
add
sub
out
xor
sbb
into
ret
jo
adc
xor
jge
adcl
dec
into
outsl
in
jp
xorb
fstps
xlat
push
js
push
push
fistpll
and
and
out
pop
or
loop
add
jle
push
aas
fldcw
stos
mov
out
repnz
mov
arpl
lret
xor
js
addl
push
aad
xchg
shlb
xchg
dec
cs
jmp
xor
std
fmuls
add
jp
mov
arpl
xchg
int
out
ljmp
in
scas
mov
or
test
les
mov
pop
outsl
push
push
push
mov
test
cld
sti
add
mov
dec
cld
in
and
mov
cmp
rclb
cmp
sbbl
dec
pop
jne
push
pop
movsl
lcall
jg
adc
pop
jecxz
test
testb
idiv
outsb
sbb
insl
scas
imul
out
sub
inc
shl
ficoml
pop
add
sub
loope
sbb
dec
adc
mov
decl
cli
data16
stc
mov
xor
test
mov
mov
jle
outsb
inc
mov
cmpsl
fs
adc
push
push
fdivrs
inc
adc
cs
dec
jle
cmpsl
cmp
push
cltd
pop
jp
in
lahf
stc
mov
xorl
addr16
xor
in
cli
gs
pop
shrb
xor
and
xchg
jecxz
int3
lock
cmp
pop
xor
shl
jno
xor
mov
adc
pusha
sbb
mov
out
and
inc
jp
mov
inc
xor
mov
sbb
js
cmp
inc
jno
loope
fidivs
push
dec
mov
test
dec
add
mov
and
xchg
stos
mov
imul
xor
sahf
dec
imul
and
lret
insl
jno
aad
or
lea
iret
mov
adc
popa
xor
pop
push
fsubr
pop
cmp
or
cld
pop
mov
xlat
pop
pop
xor
cmp
mov
or
sbb
jg
mov
lea
jbe
jb
and
leave
das
daa
shlb
xchg
jo
test
scas
xor
xor
pop
sub
mov
push
and
lcall
fstl
jns
sbb
or
mov
mov
add
popf
pop
or
testl
xor
sub
xchg
dec
inc
shll
inc
adc
add
outsl
ss
movsl
push
mov
push
inc
push
mov
mov
enter
jno
or
dec
jg
in
or
test
test
lret
mov
jmp
pushf
sub
mov
mov
dec
sbb
pushf
ljmp
aad
insb
inc
andl
inc
addr16
jecxz
and
fidivrs
sbb
test
aad
xorb
mov
jne
stos
das
push
sbb
and
pop
lock
std
mov
insb
and
faddl
add
lods
stos
sbb
popf
pop
push
pop
xchg
push
jg
xorb
pop
adcb
ljmp
sbb
add
dec
clc
adc
andl
filds
fld1
inc
mov
xchg
mov
ss
loope
inc
inc
mov
bound
dec
loop
xor
dec
dec
out
push
sub
mov
jmp
inc
iret
jp
popa
cld
mov
leave
sub
pop
cwtl
cmc
push
scas
sub
mov
mov
fs
ja
hlt
mov
adc
fisubrl
insb
adc
jle
pop
stos
call
jl
mov
data16
pop
loope
sub
xchg
mov
dec
sbb
sub
jo
jnp
and
jg
xchg
leave
popa
scas
mov
mov
pusha
jl
popa
sbb
sahf
mov
inc
mov
inc
aam
cmp
sub
mov
sub
inc
clc
rorb
sub
pop
jmp
neg
ret
daa
test
subb
pop
push
shrl
mov
loop
loope
adc
jmp
mov
lods
mov
pop
or
repz
dec
mov
test
aam
adc
std
push
test
push
nop
push
lds
mov
push
std
clc
out
inc
mul
pushf
ss
pop
inc
ljmp
pop
push
repz
mov
dec
pop
jecxz
cs
das
inc
push
inc
cld
in
mov
pop
inc
mov
insb
cmp
scas
ret
jl
mov
jo
inc
mov
sbb
mov
dec
xor
xor
mov
dec
ja
jb
inc
inc
popa
push
fldl
pop
xor
mov
xchg
pusha
mov
cli
jae
pop
mov
or
push
push
test
push
xor
xor
lock
fnstenv
movsb
xchg
orl
add
add
aam
in
insb
cmp
ja
mov
roll
and
mov
cli
repnz
sub
fildll
mov
jno
repz
jnp
mov
cmp
cvttps2pi
push
add
mov
into
xorb
xchg
fdivrl
sub
push
outsb
movl
jl
fsub
adc
sub
cld
mov
push
test
ficoml
daa
bound
cmpsb
inc
pop
loope
mov
fdivrl
xchg
cmp
mov
jl
xchg
pop
js
fcmovu
jecxz
pusha
mull
in
mov
in
dec
xor
cltd
pop
pop
jne
aam
shrl
jb
incb
pop
inc
fisttpl
fidivrs
adc
jmp
xchg
ljmp
inc
in
jecxz
inc
idivb
push
sbb
mov
pusha
jecxz
sbb
jae
inc
cmp
pop
jbe
jo
cmp
jp
jle
mov
lods
jl
addr16
popf
and
lods
std
jle
imul
dec
lods
hlt
mov
xchg
inc
xchg
in
xor
shr
or
fisubrs
sub
sub
lret
xor
ja
or
or
push
jl
das
aas
ficomps
sarb
into
push
mov
inc
xchg
pushf
stc
cmc
jmp
inc
inc
pop
nop
adc
adc
int3
daa
push
adc
xor
into
cld
xor
mov
call
ret
in
jle
jns
and
out
lods
orb
xchg
mov
or
mov
pop
xchg
rorl
addl
incb
dec
mov
inc
mov
mov
faddl
std
adc
mov
js
xchg
mov
add
adc
imul
out
rolb
fstpt
mulb
movsl
popa
push
push
rcll
jle
xor
push
loop
cli
dec
dec
xor
into
inc
xor
push
and
push
add
pop
mov
test
inc
arpl
andl
cmpsb
js
cmp
pop
xlat
inc
push
and
cmpsb
sbb
mov
lret
jnp
lds
xor
outsb
clc
jae
stos
mov
jecxz
ds
inc
xor
push
fcmovnbe
sarb
ljmp
cmp
xlat
or
aad
sbbb
push
add
aas
mov
or
sub
js
mov
cmp
mov
xlat
stc
adc
enter
add
and
cwtl
dec
pop
sbb
icebp
mov
stos
test
jecxz
add
jl
sbb
adc
xchg
popf
stos
movl
scas
lcall
and
and
mov
cmpsb
jmp
fists
div
sub
add
mov
lods
mov
dec
gs
mov
or
int3
rcrl
push
enter
xchg
pop
and
pop
aam
or
mov
adc
dec
mov
add
adc
mov
push
stos
push
adc
icebp
mov
xchg
adc
das
stos
inc
cmp
ror
shlb
jl
mov
adc
jmp
out
xchg
test
in
and
push
lahf
push
mov
or
lods
sbb
jge
shr
sarb
mov
mov
mov
jo
pop
inc
mov
int
or
jb
mov
xchg
in
imul
daa
sub
aaa
xchg
mov
dec
les
add
popf
inc
sbb
pushl
rol
lea
and
push
jbe
int
ja
mov
clc
outsl
pop
aad
adc
add
pusha
rorl
cwtl
adc
adc
loop
sbb
mul
inc
sub
inc
mov
jne
pop
fwait
insb
or
popa
fldcw
mov
mov
pop
adc
stos
mov
jns
sbbl
lods
jge
push
dec
xor
sub
sbb
push
mov
pop
sarb
inc
nop
jae
icebp
xor
add
dec
dec
mov
mov
mov
in
dec
mov
push
fnsave
mov
xlat
ret
push
xor
push
cmp
cltd
xorl
cmpsb
mov
les
mov
jp
adc
add
or
out
nop
jbe
add
mov
pop
jae
idivb
loopne
out
jmp
mov
sahf
xchg
cld
es
lea
rcrl
loopne
lock
jne
cmp
jne
xor
push
in
jl
push
adc
sahf
mov
mov
push
pop
mov
icebp
add
push
ss
scas
repnz
push
pop
mov
pop
outsl
jb
mov
aas
mov
out
pop
xor
mov
insl
int3
push
fs
pushf
xor
lahf
sahf
stc
stos
jns
jnp
jle
push
movsb
pop
shrb
dec
dec
pop
imul
sahf
test
fdivrl
ss
call
inc
ss
pop
stc
dec
icebp
imul
xor
ret
push
sub
std
pusha
fsubl
bsr
pop
and
inc
sub
bound
push
or
cwtl
bound
into
js
xchg
mov
in
sub
push
rorl
hlt
cmpb
shr
inc
pop
or
jnp
pop
test
sub
adc
cltd
movsb
ja
inc
dec
out
mov
stos
test
jae
imul
fisubl
ja
sbb
mov
jmp
sub
daa
cmp
test
scas
pushl
loope
adc
mov
popa
popa
shlb
das
add
mov
fstpt
mov
xchg
xor
mov
dec
movsl
pop
pop
xor
out
out
loope
repnz
popa
push
inc
mov
jb
fcompl
cmpsb
sbb
adc
sbbl
pushf
jmp
negb
and
mov
jmp
jmp
adc
sub
pop
inc
mov
cmpsb
mov
cmp
xchg
xor
xor
xor
test
bound
jmp
test
or
js
iret
pusha
icebp
fildl
outsb
mov
cmp
inc
mov
xor
or
das
pop
add
repnz
cmpsl
fstps
inc
push
flds
cmp
cltd
jp
pop
xor
cmc
stos
push
ficomps
in
fidivrl
sub
fnsave
cltd
mov
bound
fwait
jmp
and
or
mov
loop
push
add
xlat
mov
adc
int3
mov
xchg
stos
icebp
pop
inc
lods
mov
rorb
adc
push
lret
lahf
xchg
lods
aaa
xor
add
popa
xor
daa
xor
jl
cld
out
xor
cmpsb
mov
fpatan
in
in
fimuls
lods
fbstp
outsl
mov
mov
ror
xchg
ficoml
incb
adc
mov
mov
add
ljmp
fists
repnz
pop
sbb
pusha
ret
out
jl
lahf
movsl
testb
cmp
rcl
dec
int
push
lock
pusha
scas
vshufps
call
insl
fwait
xchg
loopne
pcmpgtw
stos
push
xchg
inc
sub
inc
push
ret
mov
outsl
fnsave
lret
xchg
outsl
xlat
xchg
sub
xchg
je
mov
int3
or
mov
mov
xchg
xor
jg
jge
lock
mov
jno
xchg
cwtl
xchg
pop
pop
add
out
aad
sbb
repnz
jae
or
mov
xchg
insb
imul
cmp
test
add
call
jl
push
cmp
or
fsubl
xor
or
ret
or
outsb
mov
dec
add
sbbl
mov
adc
or
cmp
lahf
inc
clc
nop
push
in
adc
scas
inc
xchg
dec
mov
mov
in
mov
jo
test
sbb
cs
popa
in
mov
and
adc
add
mov
out
pop
cltd
fiaddl
push
dec
push
int3
cmp
push
sbb
decl
test
push
push
lock
sbbb
mov
loope
and
mov
cmp
jb
add
adc
loopne
fidivl
test
rcll
push
cwtl
add
std
adc
push
pop
cmp
mov
ss
jge
mov
outsl
pop
mov
idivb
seta
stos
sub
push
mov
lods
lods
lea
jmp
in
xchg
fldcw
mov
loop
ds
cmc
lret
loop
pop
ljmp
push
into
inc
adc
sub
mov
scas
icebp
outsb
movnti
and
sbb
pushf
or
push
or
es
test
cmp
jle
test
insl
div
mov
adc
outsl
test
clc
popl
sbb
leave
pop
ja
adc
sbb
subl
icebp
rcrb
xchg
and
mov
add
ret
loopne
cmp
cmpb
fwait
cmpsb
mov
stos
stos
push
jmp
mov
pusha
mov
adc
sub
inc
addr16
insb
lods
inc
loopne
add
arpl
add
icebp
mov
lcall
pop
cltd
mov
int3
in
cwtl
scas
dec
add
scas
icebp
out
mov
dec
ret
test
add
mov
mov
clc
icebp
mov
pop
pop
scas
lcall
lock
insb
mov
adc
bound
pop
int
les
into
sysenter
jo
imul
arpl
adc
cmp
fwait
mov
mul
jg
sbb
sbb
out
fstpt
jns
fwait
cmp
jp
cmp
jg
daa
pop
shl
rolb
cmp
enter
fucomp
and
scas
add
xor
cmp
incl
stos
xor
push
vprotd
jbe
scas
cld
fcmove
or
stos
pushf
push
cmc
sub
insb
adc
int3
pop
xchg
cmpsb
push
int3
lods
push
push
sub
add
leave
mov
cld
mov
xchg
and
cmp
dec
xor
mov
sarb
mov
in
lcall
gs
sbb
fildll
inc
stos
push
insl
mov
js
jb
bound
pop
adc
mov
xor
mov
popf
add
add
ljmp
and
sbb
outsb
sbb
daa
repz
dec
cmc
jns
xorb
jmp
int3
lods
popf
jnp
cmp
out
or
jns
adc
add
ret
xchg
mov
ja
std
sub
jl
lock
hlt
loope
jae
jle
pop
push
mov
pop
fst
xlat
call
mov
adcb
sub
icebp
pop
enter
mov
movb
sbb
mov
test
push
aam
inc
es
mov
xchg
shlb
rol
cs
push
and
mov
cmp
test
xor
cmp
repnz
add
dec
add
arpl
lods
cmp
xor
mov
or
fistl
arpl
ljmp
stos
cld
fcompl
cmpsl
lcall
adc
rcr
stos
adc
sub
inc
movsl
xor
out
addr16
rclb
daa
pop
xchg
fs
pop
lea
push
sub
arpl
pop
repnz
pop
pusha
and
cmpsl
sbb
add
jno
sub
dec
outsl
cmp
call
push
call
inc
daa
repnz
push
ljmp
adc
mov
pop
pop
pushf
scas
popf
fbld
cmp
add
popf
imulb
add
iret
adc
sbb
je
js
test
add
sahf
jae
inc
cs
aam
mov
xchg
jge
insb
ret
inc
cs
and
xor
inc
mov
fstl
adc
fstps
pushf
cmpsb
mov
lret
es
push
sub
cli
pop
push
ret
and
fsubr
into
xor
ja
xor
mov
xor
dec
in
push
mov
pop
mov
mov
stc
loope
pop
mov
test
test
jg
jmp
and
std
sbb
and
and
mov
jae
sbb
push
sti
adc
cltd
mov
popa
mov
inc
and
pop
adc
mov
loope
scas
cld
js
add
sub
inc
sbb
push
jb
dec
adc
push
inc
hlt
or
in
pop
push
scas
aaa
pop
pop
aas
fs
push
mov
notb
mov
mov
cmp
pop
jnp
shrl
jbe
push
push
cmp
xchg
in
or
cmp
or
fists
xchg
dec
pop
popa
push
mov
jne
addr16
fwait
push
fistps
imul
outsl
subb
push
inc
cltd
mov
in
lods
dec
lock
insl
lret
dec
sbb
ret
rorb
imul
cmpsb
mov
fucomip
sub
pop
aaa
pop
pop
inc
cmp
xchg
orb
ja
cmp
dec
cld
cmp
add
std
gs
xor
fs
pop
mov
mov
stos
test
pop
data16
xor
addl
jl
xor
pop
enter
xor
bound
lds
xchg
ret
ret
push
call
adc
inc
mov
ljmp
xchg
shll
jae
popl
aad
je
out
pop
fnsave
jns
fmuls
aaa
mov
mov
lods
jo,pn
addr16
in
test
loope
ja
icebp
xor
dec
imul
test
adc
adc
aam
mov
insb
fldenv
add
movsl
mov
cs
fistpl
inc
and
and
and
in
or
fidivrs
cmp
dec
inc
sar
jg
mov
push
fs
aad
stos
rorl
rol
movsb
lret
add
push
rcr
jo
cmpsb
add
cmp
stos
repnz
adc
jmp
sbb
mov
push
push
add
cld
or
lods
mov
fs
push
adc
test
dec
jmp
ljmp
mov
pop
and
and
mov
sub
int3
das
xchg
imul
mov
bswap
lods
xchg
aad
arpl
mov
lahf
loopne
subb
cmp
push
scas
push
pop
mov
in
addr16
mov
test
test
stos
mov
dec
cmpsl
fadds
lods
dec
pop
mov
jecxz
adc
cmp
adc
popa
bound
addb
rcll
inc
stc
jl
std
icebp
fstl
test
cmp
fstpl
push
cmpsl
cmp
or
adc
lret
fidivrl
rcrl
xchg
mov
test
ljmp
movsl
clc
inc
jecxz
arpl
movsb
loope
stos
mov
cld
clc
inc
sub
add
aas
jns
pop
jle
xchg
inc
ds
in
and
lods
cli
arpl
xchg
jmp
jnp
sbb
aaa
mov
adc
popf
xchg
cmpl
clc
mov
jmp
out
cld
cmp
test
stc
sbb
inc
scas
push
pop
cmc
sti
jl
mov
adc
push
rcrb
and
aad
aam
out
loope
enter
cmp
je
cmp
add
cmp
inc
dec
mov
fnstsw
add
inc
stos
sarb
mov
pop
pop
sti
int3
jp
jecxz
inc
sbb
es
and
push
jmp
pop
in
mov
scas
mov
popf
rcrb
movl
inc
lret
fwait
cmp
jg
into
mov
clc
dec
xor
leave
aas
pop
xchg
je
sub
ret
sbb
xor
movb
cmp
pop
cwtl
pushf
push
pop
and
test
or
xlat
test
cmp
sbb
imull
jecxz
repnz
insb
in
push
aad
and
jp
and
sub
fstpl
mov
push
push
cmp
orl
xor
aad
dec
loopne
jo
notb
repz
push
repnz
or
sub
mov
scas
pop
xchg
aam
es
mov
xchg
fldl
mov
jno
and
mov
nop
ja
dec
push
inc
aas
sbb
xor
popf
sub
pop
xorb
adc
inc
out
mov
mov
xchg
adc
dec
fidivrs
pop
movsb
and
xlat
mov
and
fisubrl
pusha
into
inc
sbb
add
and
xchg
cmpsl
je
push
andl
and
pusha
stos
orl
jns
jecxz
sbb
push
aam
push
repnz
fwait
clc
xchg
inc
scas
es
or
movsl
cwtl
mov
outsb
dec
dec
stos
sbb
aam
xchg
push
jne
or
enter
jae
lret
mov
sbb
sub
fldenv
fcomi
leave
add
movsl
push
rcr
fmul
pop
aam
pusha
jg
jle
pop
and
pop
cmpxchg
cmp
pop
adc
dec
pop
inc
sarl
sub
inc
jle
or
jge
fnsave
mov
pop
push
push
stos
fsubrl
dec
rclb
jns
jp
jno
popa
push
mov
enter
dec
mov
mov
or
test
pushf
rclb
ja
sub
fadd
aaa
inc
ja
xor
or
mov
push
adc
or
add
add
dec
jnp
xchg
lcall
xor
out
fdivs
jnp
fisubrs
popa
or
loop
fwait
xchg
mov
lea
push
sbb
aam
pop
cmc
sbb
xor
fdivs
adc
xor
adc
mov
cmp
jg
jbe
es
jge
cld
mov
mov
fmull
lcall
jmp
cld
dec
adc
dec
test
inc
shl
lret
es
divb
lds
dec
rcll
jne
bound
daa
inc
addr16
pop
jo
cli
scas
sbb
mov
cmp
cmpsl
movsl
movsl
icebp
jmp
jle
dec
insb
xchg
cwtl
pop
mov
mov
sbb
movsb
leave
andb
mov
cwtl
add
mov
and
lds
push
sub
daa
es
lds
std
mov
and
mov
mov
xchg
xchg
hlt
and
out
xchg
stc
inc
in
nop
xchg
inc
push
sti
cmpsl
call
das
xor
inc
dec
sub
lock
inc
mov
add
iret
dec
outsb
push
mov
lcall
xchg
testl
stc
sub
iret
fdivrl
push
sub
mov
sbb
jg
mov
fsts
mov
iret
sbb
sbb
repz
cli
mov
mov
lds
pop
jecxz
jmp
test
cmpsb
push
sub
cltd
cmpsb
sbb
pop
popa
adc
pop
xor
call
jle
fdivs
mov
clc
adc
loope
sub
out
cmp
cwtl
mov
mov
imul
pop
adc
and
dec
sbb
jb
nopl
inc
jge
sbb
jg
sti
loopne
cmp
ljmp
mov
pop
sub
bound
xchg
les
sahf
dec
test
sbb
sbb
lret
mov
nop
add
jo
int
stc
ret
pop
shlb
daa
mov
add
stc
mov
mov
add
push
xor
xchg
ja
cmp
lea
or
cmp
cmc
adc
lret
inc
mov
dec
popw
repz
pop
test
test
sub
or
jae
enter
push
dec
je
pop
xchg
cmpsb
xchg
filds
in
mov
lods
mov
pop
test
ret
pop
cmpsl
imul
lods
mov
stos
mov
mov
mov
mov
cmpsl
and
push
insb
mov
scas
idivb
jle
adc
icebp
stos
clc
repnz
mov
inc
jns
and
xchg
pop
xchg
add
inc
stos
adc
sbb
mov
cmp
push
pmaxub
cltd
jg
sbb
mov
and
add
icebp
jne
adc
js
mov
sub
inc
jae
fwait
mov
ficoml
sub
cltd
ret
and
pop
mov
jge
jge
xor
mov
enter
jge
push
jne
jmp
adc
mov
imul
outsl
mov
push
cmp
dec
aad
sbb
into
pop
outsb
leave
jle
loope
sbb
cltd
lret
int3
gs
push
outsb
mov
cmp
loope
fcmovnbe
jg
pop
ljmp
adc
inc
call
jge
lret
fdivrs
fwait
dec
dec
popa
mov
and
test
add
mov
lret
mov
push
lds
xchg
dec
jl
or
jg
test
sub
sti
pop
pop
cmp
cli
or
adc
ja
icebp
mov
or
pop
testl
cmp
addr16
sub
xor
and
dec
dec
sub
and
stos
mov
std
std
stos
int3
pop
ja
inc
popa
jmp
addl
push
dec
paddd
popa
sub
lds
ja
into
sahf
cmp
cwtl
add
cmpsb
add
out
sub
cmp
sbb
pop
cmp
dec
jo
jecxz
in
adc
mov
cs
push
sbb
ds
jmp
mov
inc
lcall
mov
dec
int
dec
mov
push
pushf
inc
fldt
inc
jle
test
mov
cmpsb
jecxz
pop
hlt
dec
fsubrl
xor
fnstsw
lret
jp
and
fdiv
es
not
icebp
imul
sub
inc
pusha
ss
push
lea
insb
xchg
push
lock
push
fcoms
mov
ret
lret
mov
popa
pop
sahf
cmp
and
or
push
jb
push
pop
imul
rorl
pop
enter
push
leave
imul
mov
xchg
mov
adc
mov
loopne
stos
dec
cmp
mov
xor
xor
push
es
jo
jns
fisttpll
mov
imul
imul
fdivrs
jns
add
sub
mov
sub
and
lcall
imul
stos
sti
mov
or
stos
mov
xchg
clc
mov
xor
icebp
inc
mov
pop
out
js
pop
pop
out
lret
jbe
and
jp
nop
xor
xchg
pop
or
cmpsl
jnp
mov
push
lock
pop
sti
out
popf
mov
push
daa
mov
ret
fildl
xchg
mov
imul
leave
xchg
adc
or
cltd
iret
mul
mov
lea
das
xor
inc
mov
repz
mov
mov
jle
ja
dec
imul
xchg
push
lods
shlb
inc
jp
add
cltd
push
loopne
popf
lds
cmp
adc
loopne
cmpsb
leave
in
fcmovb
mov
sbb
ja
out
arpl
test
imul
cmp
sub
js
loopne
sarl
cltd
cmp
sbb
sbb
test
fsubp
pop
movb
leave
aas
xor
fidivs
fnstcw
cmp
dec
hlt
roll
jp
mov
push
orb
into
xlat
imul
leave
add
sub
dec
sbb
pusha
dec
scas
testl
or
and
dec
in
mov
sbb
adc
cmp
or
cltd
jne
cmc
mov
jb
push
enter
push
stos
clc
in
clc
mov
out
repz
mov
repnz
and
jns
xchg
mov
pushf
jne
mov
sub
loop
add
fidivrs
sarb
popf
adc
dec
mov
iret
add
aas
xchg
pusha
mov
push
or
sarb
pop
sbb
and
mov
sbb
test
mov
cmc
mov
notb
in
leave
lds
enter
cli
xor
mov
iret
sbb
mov
or
and
xor
adc
inc
fldl2t
cli
push
lcall
add
xchg
outsb
aad
add
mov
xchg
jae
pushf
jp
xor
inc
push
cmpsb
notl
xlat
and
and
clc
movsb
cmp
jo
aad
cli
ja
push
ret
cltd
pop
inc
mov
pop
mov
mov
jmp
leave
sbb
sbb
pop
sbb
mov
mov
mov
push
cmp
test
movl
sahf
push
pop
mov
pop
nop
pop
push
mov
sub
rclb
test
lds
insl
push
imul
outsl
mov
fistpll
sbb
jb
pop
pop
dec
sbb
jbe
mov
xchg
lds
or
cmpsb
dec
ss
icebp
mov
test
shrl
mov
sbb
mov
and
adc
lcall
fcomi
daa
iret
movsl
push
cmp
sbb
mov
xor
and
ret
or
inc
push
add
aam
add
inc
and
aaa
push
or
push
loop
xorb
jnp
ret
movb
insb
in
inc
out
mov
xorps
bswap
sub
mov
mov
es
loope
jno
outsb
add
aaa
rorl
push
xor
jmp
xor
iret
pop
mov
and
cwtl
outsl
shrl
dec
add
pop
leave
or
pop
inc
gs
cld
int3
jp
sbb
dec
jae
sbb
loopne
icebp
imul
jns
mov
jmp
pop
push
loope
dec
lahf
movsl
repnz
add
or
jnp
mov
addr16
lea
and
sub
mov
hlt
fwait
push
jae
out
popa
inc
icebp
mov
pushf
clc
rcll
aad
mov
outsl
jo
insl
jmp
cmp
dec
cmp
jne
and
push
lcall
add
push
inc
sbb
leave
fidivl
insb
mov
fwait
cmpsb
out
das
lods
jp
add
xor
or
sbb
lcall
rcrb
mov
pop
stc
mov
and
sti
adc
gs
insl
das
cmp
mov
dec
lea
fwait
cli
test
mov
or
mov
and
insl
mov
or
pextrw
and
pop
jns
imul
mov
aaa
bound
dec
je
mov
scas
sub
mov
xor
imul
dec
shrb
dec
pushf
mov
outsb
in
dec
jnp
mov
inc
ficoml
sbb
push
xorl
daa
xor
jo
scas
or
lret
mov
cmpsl
dec
imul
cmp
xchg
aam
rcrb
xchg
ret
daa
cmp
inc
lods
cmp
mov
mov
scas
adc
xor
insl
cmpsl
lods
iret
xchg
mov
jge
jmp
inc
js
call
fdivrl
nop
inc
mov
into
add
push
movsl
aam
sbb
idivb
out
gs
dec
lret
sbb
div
mov
xchg
dec
mov
pop
sbb
sbb
test
ds
sbb
lret
xchg
mov
mov
lea
adc
stos
mov
or
adc
movsl
mov
mov
loopne
inc
sbb
xor
arpl
sbb
test
cmpsb
jle
jno
mov
push
and
mov
daa
lods
jbe
addr16
out
mov
test
sbb
cmpsl
aaa
imul
and
lds
xchg
mov
cmpsl
stos
mov
push
cmpb
cmp
mov
mov
jns
fs
mov
in
outsb
movsb
fadd
or
int3
sahf
pop
push
int3
jmp
mov
ss
not
frstor
mov
jge
push
xor
out
xlat
ljmp
lcall
sub
and
fmull
jmp
jne
leave
cmp
es
dec
pop
or
add
sub
sbb
add
sub
and
mov
je
out
push
inc
movsl
in
cmpsl
nop
lods
xor
cltd
and
out
bound
stos
cmp
add
aad
add
fnstsw
inc
add
dec
sub
inc
jne
add
push
mov
adcb
fistl
into
cs
and
insb
pop
and
mov
cmp
je
popa
add
xor
popf
add
repz
adc
movsb
movsb
jle
fsubr
push
mov
fwait
jl
cwtl
lds
add
stos
out
adc
je
cmp
sahf
cmp
stos
cli
sbb
stos
popf
cmp
pop
mov
mov
imul
pop
ljmp
xchg
test
fadd
push
cmpsb
mov
xchg
in
sbb
pop
cmp
fsts
jnp
or
es
xchg
sbb
pop
aam
lea
mov
jnp
sbb
mov
adc
mov
shll
loopw
jmp
push
loopne
in
push
and
adc
repnz
enter
stc
aaa
icebp
or
daa
push
prefetchwt1
mov
ds
sbb
xor
jns
pop
adc
xchg
ret
mov
cmpsb
fisubs
ljmp
and
lods
ljmp
cltd
in
xor
test
daa
rcrl
cmpb
mov
or
cld
xchg
sahf
sbb
jne
add
in
cltd
adc
dec
dec
xchg
mov
ja
dec
jmp
inc
popf
in
add
or
ja
je
outsl
xor
cmc
popf
iret
clc
ficompl
test
loop
jne
mov
xchg
lds
loop
les
mov
pop
pop
add
mov
cmp
data16
iret
data16
sti
sti
add
xorl
movsl
pop
pop
push
sbb
pop
hlt
sahf
jg
les
inc
rol
add
ficoml
jmp
and
test
xor
pop
sub
sbb
dec
mov
inc
push
mov
add
jge
jl
cmpsb
sarb
adc
subb
cmp
nop
aaa
or
negb
adc
lea
shrb
inc
push
jns
dec
sub
xor
leave
cmp
mov
ret
pop
mov
add
cltd
xorb
cmpb
fst
jae
xchg
mov
nop
mov
or
push
bound
push
and
adc
xor
pushf
in
push
mov
xchg
add
movsb
xchg
rclb
loop
lock
xor
push
jge
jo
jge
inc
imul
sub
jmp
lods
mov
and
mov
decl
fucomip
xor
andl
pusha
fistpl
dec
dec
mov
mov
ljmp
push
aam
addr16
orl
es
bts
mov
jp
lea
lret
stos
test
jmp
int3
test
xor
jae
sub
mov
xchg
repnz
roll
xchg
mov
dec
insl
pop
in
pop
lret
cmc
or
inc
in
xchg
inc
add
mov
mov
cmp
and
inc
fisubl
adc
enter
jmp
mov
adc
mov
loop
xor
in
sub
mov
mov
mov
cmp
xchg
arpl
orl
loop
cmc
adc
sub
cmp
dec
negl
js
sub
pop
mov
aam
push
frstor
add
xchg
pop
fnstsw
inc
out
jno
or
test
rcll
push
loop,pn
in
insl
cmpb
dec
adc
idivl
cmp
pop
scas
inc
call
ret
loope
jno
push
inc
sub
das
mov
push
loop
mov
mov
and
lods
mov
xchg
scas
xchg
inc
lods
cmpl
dec
add
shll
stc
xchg
lcall
mov
cltd
mov
in
movsb
adc
push
dec
enter
ror
pop
sarb
jne
push
test
divl
dec
sbb
lahf
push
fs
xor
inc
cltd
push
cmp
loope
mov
fstpt
pusha
sbb
sbb
orl
push
fstp
cmpsl
add
nop
xchg
in
mov
hlt
icebp
mov
cmpsl
leave
iret
lods
and
aad
mov
iret
stos
adc
lods
lret
test
cmp
pop
sti
lea
cmp
adc
mov
mov
jae
shrl
push
xchg
cmp
cmc
xorl
mov
mov
pop
sti
imul
or
dec
outsl
xchg
inc
sbb
mov
or
xchg
mov
pop
loopne
add
and
jnp
aaa
inc
cld
aam
inc
or
push
inc
gs
sub
ljmp
sti
jno
jns
pop
push
imul
and
test
cmp
ljmp
out
bound
into
pop
adc
int3
and
pop
subb
inc
jb
mov
rorl
dec
cmp
sub
cmc
popf
fcoml
cmc
sub
gs
int3
add
sbb
inc
rol
fistpll
out
insl
cmpl
adc
clc
ds
cmpsl
addr16
stos
dec
lret
adc
mov
sub
add
cmp
add
inc
xchg
add
xlat
int3
mov
jle
push
mov
pop
out
mov
sub
jb
cmp
jns
dec
ja
mov
push
cmp
and
aaa
mov
mov
jge
pop
jae
jp
out
popa
xor
push
repnz
jb
jo
push
pop
pushf
mov
aas
mov
adc
test
add
jae
iret
push
bnd
sub
fwait
test
insb
test
push
jp
jnp
jbe
loop
pop
aad
ljmp
out
popa
cmp
inc
jp
orl
sbb
clc
push
int
pop
fdivs
inc
pop
fcoml
and
add
aam
mov
mov
push
cmpsl
dec
roll
push
add
fs
push
loop
stc
pop
movsl
insl
mov
xchg
cltd
or
mov
data16
into
add
lock
call
sub
mov
sub
outsb
in
gs
mov
das
out
rcr
decl
pusha
lods
adc
loop
movsb
push
add
add
cmp
aaa
push
sub
dec
lcall
jp
mov
cmp
fisttps
jp
je
sbb
hlt
dec
xor
insb
sub
insb
js
and
jns
adc
jnp
dec
lods
push
rcrl
cmp
dec
jns
xchg
imul
mov
and
js
das
mov
xor
insl
ret
imul
and
dec
frstor
push
scas
cld
mov
sbb
jecxz
mov
stos
push
sbb
lret
mov
cld
sbb
fldt
mov
and
stos
add
or
cmp
fs
out
stc
add
sbb
add
xchg
sub
lods
and
xor
and
stos
daa
scas
cmpsb
xor
mov
mov
dec
ret
fcompp
dec
idivl
xlat
loopne
jne
sarb
cwtl
fwait
and
inc
and
mov
sub
jecxz
sbb
call
test
push
popf
mov
dec
aad
xchg
dec
jno
jns
sarl
bound
mov
push
in
adc
dec
hlt
mov
dec
lods
inc
cmpsl
pop
lahf
lret
pusha
ret
shrl
lods
pop
xor
cmpsb
test
and
fiaddl
dec
jne
ror
jmp
cs
imul
xchg
repz
adc
ja
hlt
pop
pop
mov
jnp
dec
test
or
sbb
xor
mov
jo
adc
stos
clc
jp
je
push
jb
fcoms
pop
inc
xorl
mov
cli
xor
ds
ret
ret
pop
xchg
shlb
mov
jp
pop
test
mov
inc
lods
sbb
ja
insl
into
loop
fbstp
jb
dec
push
mov
inc
int3
and
cmp
fs
adc
mov
imul
clc
cltd
or
dec
sbb
pop
rorl
push
daa
in
rcr
lret
inc
jge
popa
leave
clc
mov
hlt
movsb
aad
xor
inc
out
inc
and
sub
mov
mov
xchg
orb
fisubl
sarl
lahf
leave
das
pop
jmp
dec
inc
cld
in
inc
mov
lcall
arpl
mov
ret
stos
in
loope
scas
mov
pop
mov
xchg
mov
sbb
dec
test
inc
pop
xor
incl
mov
test
pop
stc
push
test
jmp
insl
incl
and
cwtl
stos
movsl
daa
ds
enter
push
and
inc
mov
pop
js
cwtl
inc
das
adc
setno
lea
cmp
xor
jmp
push
push
lret
iret
je
repnz
lods
pop
pushf
cli
add
jno
mov
test
sbb
test
loop
push
sub
sbb
cmp
test
push
jecxz
sub
xchg
popf
shlb
and
pop
shl
xor
cmpb
push
fwait
sub
aas
sbb
outsl
push
int
mov
cltd
push
mov
adc
mov
push
movl
mov
sub
gs
int3
mov
mov
orb
push
add
xor
mov
fcompl
aaa
gs
lcall
dec
gs
std
out
js
int
ret
push
aad
mov
out
xchg
xchg
jns
adc
add
sbb
adc
mov
cmp
ja
jl
fdivl
mov
adc
cmp
lahf
push
shll
sub
xchg
jp
ss
push
mov
sbb
add
jge
repz
xor
mov
insl
popa
je
rcrl
or
xchg
push
ljmp
push
jo
push
mov
enter
sub
pop
addr16
pop
mov
sub
adc
push
out
in
inc
loope
cmpsb
pop
jmp
inc
loopne
inc
jns
mov
mov
mov
jb
leave
fwait
in
insl
out
inc
lret
xor
lcall
mov
ss
sub
cld
into
orb
mov
stos
xor
push
test
adc
leave
lea
data16
jbe
pop
fs
inc
js
orb
or
sub
scas
aaa
push
sahf
fildll
xchg
mov
xchg
dec
jns
mov
mov
fdivp
shlb
mov
pop
in
out
in
cmp
xor
pop
dec
pop
ss
dec
mov
inc
xor
sub
pop
adc
lret
jae
jb
xor
pop
nop
cmp
and
mov
scas
pop
sbb
push
aaa
jge
push
test
jmp
js
push
test
loop
xchg
nop
sub
mov
test
dec
cmp
sbb
adc
mov
pop
lods
sub
cmp
cmc
testb
push
mov
daa
mov
mov
jo
or
bound
sbb
dec
or
bound
adc
mov
in
shlb
sbb
adc
sbb
outsb
pop
rcrl
nop
divb
jmp
mov
sub
les
and
dec
pop
scas
sbb
push
mov
mov
add
xor
stos
fst
mov
ret
ja
stos
out
leave
pop
push
ja
xchg
flds
inc
repz
and
jno
inc
stos
push
fcoms
inc
or
jle
and
jo
and
dec
mov
movsl
rclb
mov
xor
pop
xchg
fistps
push
and
aam
sbb
lods
adc
mov
push
lret
rcrb
dec
lcall
gs
loop
cmpsl
fdivrl
lret
pop
add
push
inc
mov
scas
das
les
cmc
fcmovnb
sahf
and
xchg
jecxz
mov
add
inc
lock
mov
ret
mov
sub
sbb
lods
jo
je
cld
push
pop
mov
aaa
cmp
jp
cmp
xchg
pop
cmp
cwtl
aad
jmp
adc
xchg
popf
inc
mov
ss
out
filds
out
push
loope
shll
mov
fsubp
mov
jne
js
push
rolb
repnz
mov
fdivrs
add
fisttpl
push
xchg
stos
jnp
rorl
or
scas
mov
and
mov
adc
lahf
add
jae
pop
int
adc
cmp
dec
mov
inc
rcll
add
xchg
les
stc
add
mov
add
pop
shl
sti
dec
stos
sbb
pop
hlt
add
adc
ja
pop
sarl
scas
xchg
sub
les
mov
daa
jle
shlb
lds
dec
jecxz
push
push
xchg
loop
inc
inc
test
add
lds
adc
cwtl
out
lret
mov
cmp
mov
sbb
xchg
sti
mov
or
cmp
aaa
cmpsb
push
adc
test
xchg
xchg
sbb
xchg
inc
dec
cwtl
cld
fidivrl
and
adc
stos
push
sbb
lods
les
cld
pushf
xor
mov
mov
dec
dec
lds
movsl
rorb
cmp
bound
inc
ficoms
in
mov
xor
in
adc
cmpsb
jmp
push
xor
xchg
jns
aas
xchg
dec
jbe
add
or
test
divb
cmpsb
adc
and
pop
imul
adc
nop
nop
jns
and
cmp
mov
jbe
xor
sbb
lock
pusha
daa
xor
lahf
and
pop
jle
mov
lcall
push
sub
je
adc
cmp
aas
xchg
loopne
and
aaa
test
leave
pop
loop
jo
push
dec
jle
dec
xchg
outsb
and
jno
add
jg
add
in
add
lret
push
jge
mov
clc
lahf
sbb
mull
mov
or
test
pushf
push
dec
adc
jno
adc
inc
dec
cld
push
repnz
mov
xlat
pop
repnz
sub
push
dec
adc
ret
int3
mov
icebp
mov
lods
mov
pop
pop
add
jmp
mov
ljmp
cld
dec
outsl
nop
in
sbb
in
loope
aad
jmp
or
or
jmp
test
pop
flds
ficomps
data16
mov
cld
lret
mov
adcb
aas
loopne
xchg
mov
stos
icebp
pushl
jl
xchg
loopne
sbb
dec
or
test
lods
dec
fs
adc
push
jbe
fs
xor
jg
ss
jnp
shlb
stc
push
mov
ljmp
push
es
jp
or
aad
icebp
sub
test
xchg
fldl
xchg
js
jecxz
dec
lea
sbb
ficoms
mov
inc
stc
movsl
push
mov
aam
stos
cmp
adc
mov
pop
sub
sbb
cs
dec
fs
mov
push
mov
jb
xchg
test
xchg
inc
pop
add
ret
or
in
test
adc
inc
stos
mov
sahf
mov
mov
mov
das
add
icebp
push
mov
mov
repnz
popa
pusha
inc
daa
int3
pop
lock
mov
rorb
in
dec
mov
mov
sbb
add
mov
pushf
mov
das
pop
lds
xchg
dec
cmp
insb
xor
sub
mov
in
sub
clc
push
outsl
sub
or
cltd
mov
arpl
je
jae
mov
mov
sbb
adcl
xor
pop
xchg
sbb
mov
scas
arpl
rcrb
in
push
or
clc
push
push
aam
xchg
pop
aad
in
pop
clc
push
fldcw
sub
daa
out
pushf
aaa
divb
jb
lods
mov
lods
mov
xchg
insl
lcall
mov
push
sbb
push
les
movsl
jns
pop
into
inc
xorb
xchg
mov
in
xlat
mov
cmp
in
inc
jle
and
or
test
mov
sbb
or
es
not
cs
aas
rorb
mov
daa
or
movsl
cmp
imul
jns
adc
aaa
mov
adc
dec
ret
mov
aas
mov
cmp
sbb
pop
scas
aaa
sub
rorb
aas
mov
add
jg
push
scas
ret
cmp
testb
daa
and
popf
jp
and
and
rcrb
mov
add
sar
mov
outsl
repz
jle
scas
repz
sahf
inc
inc
pusha
xchg
xchg
lods
test
add
mov
popaw
fcomp
pushf
arpl
mov
xchg
jns
xlat
mov
push
push
repnz
pop
cmp
lods
push
js
push
and
movsb
ret
data16
sbbb
adc
pushf
cmp
xor
addl
in
stc
daa
cmpsb
xor
mov
cltd
xor
mov
xchg
mov
lahf
xor
sub
adc
ds
orb
jnp
repz
popf
add
pop
and
fwait
mov
pop
add
fsubrl
or
sti
out
lahf
stos
lods
pop
test
sbb
xor
adc
lret
inc
subl
jne
imul
sbb
adc
dec
cmp
rorl
or
scas
push
repz
sub
jb
adc
pop
mov
hlt
and
cmp
mov
dec
add
out
or
scas
out
xchg
push
cmc
mov
and
xor
jno
pop
and
scas
mov
filds
sbb
data16
arpl
push
push
stc
movsb
int3
jp
cmp
pop
mov
imul
cmp
jle
dec
pop
sbb
lcall
fcmovnb
add
push
dec
and
mov
sbb
cmpsb
pop
je
jae
mov
dec
pop
push
fistpl
inc
cmp
flds
jmp
push
mov
in
in
or
mov
mov
mov
enter
mov
jecxz
and
mov
xchg
and
dec
sbb
adc
scas
cmp
imul
addr16
ss
addr16
jno
movsb
add
pop
bound
aad
js
std
push
push
lahf
cmp
cmp
cmpsl
push
insl
or
lock
mov
cld
fcoms
pop
push
jmp
clc
call
lea
fidivl
es
cmp
and
lds
mov
sahf
jg
cmp
lahf
leave
ret
sub
jo
cmp
mov
mov
lahf
mov
fs
xchg
psubb
push
stos
jmp
orb
stc
xor
ss
fwait
sbb
sub
clc
adc
aaa
xchg
inc
jno
je
and
dec
jge
stos
pop
xchg
scas
icebp
ljmp
test
mov
mov
inc
nop
out
jp
arpl
ficompl
sbb
sub
loop
adcl
xchg
loop
daa
hlt
mov
in
cmp
mov
adc
dec
dec
sub
ljmp
iret
repz
cmp
mov
pop
mov
or
xor
and
lock
push
and
cmp
jmp
aaa
cltd
jnp
mov
mov
shrb
jne
dec
rclb
outsb
push
xor
lods
in
icebp
ret
arpl
fildl
sti
fs
aad
xchg
cltd
sub
and
adc
icebp
xor
jg
insb
xchg
shlb
jnp
sbb
push
push
push
dec
and
test
int3
repz
test
sub
add
rorb
lahf
daa
push
push
lcall
idivb
movsb
adc
shrl
and
or
nop
lods
fidivrl
xor
push
iret
filds
adc
or
arpl
push
call
fisubrl
jnp
add
imul
pop
outsb
inc
outsl
cmc
lock
adc
mov
ds
sub
or
jo
sub
jns
jmp
pop
scas
enter
or
dec
cwtl
nop
jno
adc
das
ficoml
lcall
jnp
in
loop
cmp
loope
rorl
or
ja
shrb
fbstp
out
cmp
sub
das
xchg
jge
adc
addb
jb
stos
imul
mov
or
sti
imul
add
and
fcomip
jo
sub
and
jb
arpl
sub
aaa
cmp
dec
out
addr16
pop
in
insb
sti
mov
jnp
xchg
push
movsl
xchg
mov
jbe
push
les
or
dec
sahf
jo
ret
popf
inc
cmp
mov
xor
sbb
std
mov
jae
jno
dec
rcrl
in
pop
mov
jo
lods
cmc
fdivs
out
movb
pop
cmpl
ds
fcomps
shrl
or
mov
scas
js
lods
mov
and
out
mov
movsb
jb
cmp
orb
mov
cmp
mov
xor
xchg
loop
push
push
push
or
mov
insl
shl
enter
mov
es
inc
mov
in
xchg
lods
jp
push
push
add
mov
popf
repz
jb
jp
std
sbb
loop
mov
inc
shlb
mov
cmovo
sbb
hlt
adc
out
hlt
inc
lret
into
pop
sti
int3
jo
gs
bound
scas
into
mov
sbbl
dec
aam
cwtl
adc
inc
mov
sbb
sbb
faddl
xchg
test
xchg
xor
jg
sbb
aas
xor
flds
pop
mov
cmp
mov
push
sbb
sbb
pop
adc
loop
aaa
xchg
dec
mov
fstpl
stc
data16
pop
pushf
cmp
popf
les
mulb
add
sbb
mov
pop
xor
jg
lods
mov
out
push
or
xor
fidivrs
push
pop
jecxz
test
insl
and
jl
repnz
in
mov
loop
xchg
mov
daa
cmp
arpl
mov
dec
sub
dec
loope
pop
and
mov
xchg
mov
xchg
popf
mov
pop
repnz
pop
pop
jp
mov
xor
cwtl
fdivrs
fs
es
dec
xor
stc
dec
jecxz
fsubl
rcrb
jae
push
dec
xchg
cmp
inc
fisubrs
mov
cli
add
ret
outsb
xor
push
popa
pop
sbb
mov
xor
mov
adc
daa
jbe
and
divb
or
cmp
ja
pop
or
je
fs
hlt
mov
test
push
ja
xchg
or
pop
sti
icebp
or
sub
stos
mov
adc
fwait
mov
cli
sbb
and
lcall
insl
push
pushf
add
xor
or
cmp
jae
mov
loopne
mov
sbb
repnz
movsl
scas
orb
jae
and
ret
and
das
aas
add
xchg
pop
mov
es
adc
push
jge
inc
inc
imul
add
jno
je
pop
jnp
lods
leave
aam
int
dec
es
cli
fwait
jl
lret
rolb
jbe
in
pop
or
imul
push
out
push
les
add
stos
rolb
xchg
inc
jle
lods
aam
loop
push
xor
jg
imul
aas
es
sbb
sbb
sub
xchg
daa
push
aas
in
cmpsl
imul
enter
sahf
push
enter
int
lret
add
mov
sbb
mov
xchg
hlt
mov
cmpsl
das
out
mov
in
sub
or
fistpll
popa
test
pop
ret
flds
cmc
pop
and
mov
xlat
cmpsl
popf
or
or
xor
rcr
ljmp
ud0
inc
or
mov
into
scas
xchg
lods
sbb
in
dec
xor
test
add
mov
ror
bound
scas
dec
iret
cmp
push
pop
cli
sub
mov
lahf
push
lods
ret
mov
fwait
pop
rcrl
adc
nop
sbb
stos
mov
lret
sbb
sbb
repz
push
fstpt
add
pop
outsb
lret
out
lcall
jns
cltd
insl
and
inc
and
lock
in
lcall
cmp
cmpb
inc
int
mov
pop
sti
lret
subb
adc
mov
or
fdivrp
orb
cmc
inc
pop
jo
mov
push
sub
gs
push
and
movsl
ljmp
mov
or
addr16
sub
int
xor
rorl
scas
add
cmpsb
jb
adc
jg
pushf
mov
xor
loope
and
stc
jb
jl
call
imul
inc
push
cmp
out
add
mov
repz
sub
or
xchg
arpl
adc
imul
sub
add
jp
cmp
mov
xor
mov
loope
scas
jbe
push
movsl
xchg
imul
js
enter
jnp
scas
mov
or
mov
aad
ficomps
rorl
daa
or
cmc
clc
cmc
rcrb
mov
mov
adc
sub
shlb
popl
cmp
ja
add
mov
adc
cs
pop
arpl
mov
outsb
rcrb
scas
int3
xchg
dec
xor
ljmp
cmpsb
addr16
jp
pop
lock
loope
sbb
cmp
and
and
mov
outsb
dec
mov
fnstsw
or
lock
and
iret
in
test
xorb
in
outsl
loope
pop
pushf
ret
xchg
and
aas
stos
movsb
pop
or
pop
jae
xor
cmp
aam
mov
inc
push
lods
or
push
xor
cwtl
dec
sbb
popa
inc
lock
pop
cmp
mov
rorb
loope
icebp
push
mov
lods
shrl
xor
adc
inc
sub
jge
shrb
inc
cmpsl
lock
push
jmp
fnstsw
sahf
mov
push
and
pop
out
ret
add
iret
scas
sbb
mov
les
lahf
clc
adc
fldl
fadds
movsl
xor
call
or
adc
push
mov
lcall
mov
push
int3
mov
fs
or
pop
sub
movsb
fcompl
mov
sub
in
add
inc
dec
push
aam
push
ret
aaa
movsb
out
scas
cmpsl
lret
dec
sbb
adcb
mov
ret
cmp
sub
ficoms
mov
fwait
mov
das
repnz
fidivrs
ja
adc
out
add
push
rol
mov
decb
inc
popa
jnp
adc
adc
rclb
pop
inc
andl
or
ret
and
arpl
std
cmp
sahf
arpl
pop
or
sbb
and
pop
xor
in
pop
test
and
jb
and
mov
shl
jo
out
xchg
push
repnz
cwtl
jmp
pop
or
movsl
pop
sbb
aam
inc
in
push
imul
std
lret
test
mov
stc
mov
dec
push
mov
or
out
inc
pop
fisttpll
jne
movsl
mov
in
add
jo
pop
jnp
hlt
xor
push
arpl
mov
pop
pop
dec
aam
mov
dec
lcall
pop
js
repz
shlb
pop
into
add
clc
popf
xchg
mov
int3
or
jnp
cs
push
dec
inc
mov
fwait
out
test
call
inc
inc
push
lock
out
das
fldt
outsb
pop
loopne
imul
test
jp
test
and
pop
stc
out
aas
scas
and
xlat
adc
cmp
cmc
or
lds
mov
lahf
movsb
inc
js
pop
inc
cltd
out
or
test
shll
xor
pop
push
outsl
or
sub
loope
stos
jbe
aam
xor
clc
sti
mov
jl
das
xor
out
and
mov
dec
lcall
dec
sbb
mov
cmp
inc
test
jnp
jb,pt
fsubrl
dec
insb
sbb
xlat
icebp
adcl
sub
mov
add
push
cmc
insl
lret
dec
insb
pop
push
sti
shrl
xor
fistpll
push
cmpsl
lds
dec
xbegin
push
xchg
sub
push
fidivl
ss
adc
adc
fsubs
cmp
call
push
int
mov
scas
xor
test
xchg
jns
xchg
and
cmp
or
sarb
notl
in
adc
or
repnz
imul
repnz
pop
add
mov
daa
aad
inc
adc
mov
add
insb
jne
mov
jnp
movsb
and
xchg
mov
hlt
inc
movsl
jnp
aam
push
mov
inc
add
mov
push
xor
dec
cmpl
cmp
hlt
cmpsb
adc
inc
add
xlat
or
idiv
inc
les
cmc
inc
aaa
cmp
jp
fwait
push
ljmp
loopne,pn
imul
dec
out
in
iret
sub
dec
push
cli
fildll
mov
enter
push
repnz
xor
adcb
aaa
adc
sub
iret
push
jecxz
test
in
fidivs
addr16
xchg
ljmp
dec
jo
xchg
jl
jmp
or
push
ja
ret
aas
mov
shrd
pop
cmp
icebp
mov
and
sub
scas
popa
dec
ret
xor
rorb
push
sbb
mov
outsl
pop
fcompl
test
add
rolb
std
push
mov
sbb
mov
sbb
cmp
test
subb
mov
fsubs
sbb
ret
bound
pop
pop
mov
nop
and
sbb
pop
pop
push
aas
adc
ror
call
jb
aad
or
mov
int
sub
inc
insl
cmpb
daa
das
aad
push
pusha
xlat
sarb
xor
jns
xchg
jg
in
iret
xor
mov
popa
sbb
je
mov
push
out
mov
bound
cwtl
push
add
mov
cmpsl
jl
dec
aas
shl
inc
dec
leave
and
clc
pop
mov
aam
cmp
dec
pop
and
imul
outsl
mov
sarb
in
sub
int3
sub
cmp
insl
negb
xlat
loopne
dec
or
icebp
stos
test
push
fldcw
je
add
ret
add
xor
jl
lods
popf
cmp
pushf
sub
orb
adc
xchg
mov
xchg
int
sbb
repz
mov
cmpsb
insb
jo
int3
jge
lods
scas
daa
sbb
mov
dec
or
les
dec
subb
test
out
xor
adc
jnp
shrl
insb
int
orl
aas
sbb
push
int3
out
sti
test
mov
sbb
into
imul
pop
xchg
pop
pop
imul
in
cwtl
mov
daa
test
lahf
popa
push
loopne
ds
and
lods
inc
mov
ja
sub
test
movsb
dec
xlat
push
lcall
sar
lcall
imul
dec
sbb
mov
mov
pushf
dec
push
in
sub
jnp
shrb
outsl
jmp
cmp
push
sub
insl
rorb
xchg
jae
jb
lds
lcall
jg
mov
cmp
inc
mov
xchg
cld
pusha
adc
pop
mov
xchg
adc
xchg
push
and
pop
icebp
adc
insb
add
mov
daa
and
xchg
add
bound
cmpsl
push
outsb
dec
mov
jl
repnz
lcall
into
inc
divl
popf
add
xchg
inc
cmp
leave
in
aam
ret
cmpsl
fldcw
dec
mov
push
test
xor
pop
sarb
jg
mov
xchg
loop
jle
adc
lds
or
test
jb
push
ja
pop
xchg
xchg
cmp
sarl
or
xchg
mov
mov
jmp
dec
sbb
jns
in
imul
cmc
pusha
std
fisttpll
das
mov
nop
adc
das
lods
es
loope
mov
das
rcrl
flds
xchg
popl
or
inc
pop
pop
lcall
jmp
insb
push
sub
mov
pusha
pop
dec
mov
ja
jbe
mov
push
sbb
stos
add
out
pop
in
leave
jbe
std
fists
push
gs
mov
adc
popf
pop
push
stos
jmp
pop
dec
sub
jmp
mov
outsb
jno
xchg
mov
cmp
push
movsl
push
outsl
pop
pop
out
es
adc
popa
pop
testl
sub
dec
mov
sahf
push
insb
mov
mov
pop
mov
arpl
xchg
pop
dec
lods
add
push
and
sahf
sbb
mov
lret
mov
inc
add
aaa
mov
in
sub
or
adc
int
sub
psrlq
cmp
push
scas
les
cli
fisttpll
fnstsw
addr16
cwtl
adc
cmpsb
or
daa
lds
dec
or
inc
mov
inc
mov
stos
sbb
lahf
into
adc
pushf
push
cmp
jbe
push
cmpsl
push
stc
outsl
mov
lods
xor
fs
push
add
push
shrl
aas
xor
insl
mov
stc
call
imul
mov
cmp
lret
jno
adc
cmpl
lods
jno
push
pop
ss
imul
arpl
stos
roll
fcmovnb
cmp
add
sbb
xor
int3
scas
into
add
ljmp
pushf
cmc
inc
insl
pushaw
mov
xlat
sti
hlt
dec
push
out
mull
movntps
add
mov
sub
pop
jl
mov
mov
mov
cmp
add
popl
ljmp
lods
mov
push
mov
mov
aaa
add
les
fsub
mov
fadds
jmp
cmpsb
outsl
or
push
xor
ljmp
shlb
into
test
lret
scas
fldenv
jp
mov
mov
das
fcompl
cli
or
lcall
xchg
repz
mov
sub
in
push
cmp
xor
jle
nop
xorl
sub
hlt
test
inc
je
push
or
mov
inc
xchg
xorb
dec
flds
lahf
rcrl
scas
enter
sub
mov
hlt
cmp
mov
adc
fists
cmp
push
pop
mov
pop
cmp
hlt
arpl
lds
jg
sti
sub
add
pop
lcall
std
or
adc
sbb
pop
cmp
inc
icebp
push
es
rorb
test
adc
jecxz
add
movsl
add
push
sti
and
sub
inc
sbbl
sti
pop
repz
das
iret
dec
fisttpl
add
mov
mov
out
ja
pop
ja
add
adc
sbb
sub
inc
cmovl
fidivl
popa
out
icebp
add
push
cwtl
or
lahf
xlat
sub
pop
mov
jnp
inc
lods
inc
fldl
sbb
into
ja
std
js
cmp
idivb
test
outsb
mov
iret
call
xchg
xchg
or
into
mov
push
cmp
push
xchg
leave
js
xchg
jle
xchg
xor
cmp
mov
pop
idivl
pushl
repnz
pushf
std
inc
addl
push
roll
sbb
jl
xor
dec
jg
xchg
adcl
sbb
lret
mul
inc
std
pusha
jno
adc
stc
dec
push
int
ret
rcrb
inc
pop
stc
add
shlb
stos
xchg
mov
jle
adc
fsubrl
jl
mov
cmc
lret
and
push
sbb
pushw
xchg
sub
push
rcrb
or
movsb
shr
xlat
les
stos
sbb
sbb
lret
subb
mov
stos
dec
fildl
mov
out
sub
sbb
pop
in
in
sbb
adc
or
adc
add
lahf
cwtl
into
adc
jmp
pushf
fcomip
popf
addr16
jmp
mov
pop
sbb
addr16
in
xor
jb
call
jae
test
sti
lret
add
in
jne
sbb
lret
ja
add
inc
test
lret
pop
mov
adc
mov
mov
loopne
xchg
in
test
xchg
mov
jp
push
sti
pop
dec
out
xor
out
add
loope
mov
cmp
sbb
leave
in
lock
jne
imul
cmp
or
mov
and
inc
add
and
xchg
js
clc
addr16
loop
ja
ss
sbb
and
mov
jl
inc
cmp
dec
mov
xchg
cwtl
push
movsb
out
lcall
call
movntq
adc
icebp
dec
movsl
sub
dec
out
adc
lods
xchg
adc
fnsave
xor
push
orb
pop
jl
dec
and
inc
mov
stc
fisubs
cmp
xorb
mov
inc
lds
push
mov
cwtl
insb
ljmp
mov
adc
and
imul
xchg
fstl
stc
jae
fdiv
xchg
ja
cmp
pop
pop
lods
imul
push
inc
mov
repnz
cmpsl
pop
jae
stos
xchg
jnp
fdivrs
mov
dec
fisubs
add
rorb
jl
lahf
jb
xchg
or
adc
jae
mul
rol
ljmp
sub
sub
add
xchg
xor
in
mov
jmp
movsl
in
and
gs
adc
pop
fildl
or
push
sub
fdivl
shl
inc
cmp
inc
cmp
xor
out
cwtl
in
xchg
in
repz
fwait
jno
dec
mov
out
hlt
fidivrl
xor
cmc
push
stos
cmp
addr16
add
mov
ret
pop
bound
add
mov
into
fildl
dec
or
jns
out
cltd
and
dec
sbb
mov
or
cs
jne
xorl
mov
movsl
sub
xor
sbb
adc
shll
leave
xor
mov
cmp
lods
dec
int3
jle
and
jns
das
xor
dec
mov
lahf
jmp
pop
and
dec
xchg
scas
loopne
call
xchg
lret
je
mov
in
adc
mov
mov
lods
int
outsb
xor
sbb
add
repnz
xlat
shl
xchg
sti
pop
cmp
pop
mov
dec
sbb
jp
lcall
xor
outsl
mov
add
sarl
add
mov
fimull
ja
mov
xor
jo
mov
jg
push
sbb
jo
pushf
cmp
es
and
aad
jmp
jb
jbe
jmp
inc
xchg
je
pop
insb
movsb
lods
mov
arpl
out
lret
fldcw
mov
adc
pop
clc
jno
dec
mov
mov
mov
data16
out
fwait
pop
icebp
xchg
push
ljmp
and
sub
in
movsl
add
dec
pop
push
sbbl
idiv
xor
dec
push
push
insl
cmp
cs
sbb
sbb
outsl
cmpb
clc
ss
mov
xchg
sub
mov
test
int3
cmpsl
loope
xchg
test
or
sbb
inc
cmp
test
pop
movups
adc
pusha
ffreep
lcall
push
adc
cltd
sahf
mov
in
arpl
cltd
push
cs
mov
out
jp
adc
ret
ror
imull
jae
pop
pop
outsl
inc
int
rolb
and
inc
je
js
and
pop
cmp
jle
fs
imul
subl
popf
inc
jl
push
sub
std
jae
mov
or
add
shll
inc
gs
or
in
cmp
jp
inc
xor
out
inc
mov
cli
test
xchg
xchg
cmp
mov
push
sub
mov
xchg
ss
mov
or
test
sbb
jae
jbe
dec
into
out
cld
lahf
sbb
in
push
xchg
pop
mov
movsb
dec
and
push
sbb
inc
sub
pop
jl
lods
xchg
cmp
inc
mov
mull
dec
fidivs
or
cmpb
inc
ss
lret
loopne
int3
mov
outsl
enter
mov
push
dec
xor
repnz
push
push
or
pop
xchg
sub
xchg
mov
cmpsb
fimuls
clc
jmp
push
clc
inc
xorl
repnz
fbld
adc
loop
and
lret
xor
jne
ret
sbb
scas
dec
mov
inc
dec
lcall
xchg
inc
adc
fs
sub
sub
push
dec
mov
enter
fwait
push
jno
cli
xchg
in
aaa
jbe
xor
cltd
fbld
xchg
mov
jecxz
dec
outsb
sbb
mov
aam
aaa
jg
nop
push
shl
xlat
js
cmp
cmp
pop
lock
xor
loope
shr
ret
mov
cmpsb
add
std
sub
jmp
vhaddps
mov
test
jns
push
imul
mov
dec
xchg
mov
aaa
inc
and
mov
mov
and
loop
and
jo
movsl
mov
rcrb
lods
mov
or
or
jge
lret
inc
jge
or
mov
mov
pop
outsb
cs
pop
insb
or
mov
lods
ljmp
in
pop
xchg
and
xlat
add
mov
mov
jo
stos
aas
iret
jmp
mov
xchg
icebp
cmp
das
or
push
loope
out
add
rorb
or
enter
fists
test
sub
data16
nop
inc
jne
out
pop
loop
enter
loop
into
fdivs
pusha
sub
jne
inc
push
mov
push
in
lahf
push
stos
adc
add
jmp
sub
sub
daa
mov
mov
adc
pop
cmc
cli
or
je
mul
adc
js
inc
pop
test
sbb
out
bound
loopne
stos
inc
xchg
push
loope
xor
ljmp
or
xchg
xchg
dec
pop
pop
adc
mov
dec
loopne
jae
ja
idivl
jg
push
lods
xchg
iret
sti
mov
jno
lret
ljmp
out
inc
pop
inc
sbb
jns
xchg
pop
lock
cmp
lret
jecxz
lods
push
mov
lcall
rcrb
mov
inc
pop
js
xchg
bound
test
std
jnp
nop
test
insb
sub
in
or
and
iret
js
out
and
lret
mov
sbb
ja
je
sbb
or
mov
or
fisubs
sbbl
or
xchg
ds
test
mov
jo
sti
mov
incb
jno
inc
and
rcl
mov
jae
sub
push
or
imulb
mov
aas
xor
dec
sub
or
sub
enter
push
outsb
addl
cmp
inc
int
xlat
mov
arpl
fisubs
sub
xor
jo
call
and
push
ja
sbb
mov
movsb
pop
cmp
push
in
movsl
xor
xchg
mov
sub
fcmovbe
filds
xchg
mov
test
arpl
call
mov
xchg
notl
call
les
loop
xlat
xchg
push
jge
or
mov
push
daa
jns
test
cmp
in
inc
stc
pop
gs
inc
in
fwait
pusha
movsb
rorb
ds
icebp
mov
mov
sub
pop
lret
aad
enter
mov
test
gs
inc
pop
cmp
or
rep
add
add
in
fidivrl
mov
into
test
push
and
test
adc
aas
fs
in
inc
stos
subl
mov
and
ret
nop
popf
push
lds
pop
sub
cmp
push
loop
dec
ja
cli
imull
leave
test
or
sahf
jae
push
scas
dec
mov
pop
cmp
arpl
nop
pop
mov
push
cmp
sub
outsb
push
test
push
push
cmp
lock
rclb
sbb
and
fsub
inc
cmp
jmp
orl
mov
lods
mov
jne
mov
xorl
and
sbb
push
sbb
pop
pushf
mov
mov
hlt
mov
cwtl
add
pop
bound
inc
test
xchg
inc
dec
jns
outsb
mov
int3
in
outsb
test
cmp
sub
ret
int
add
push
adc
adc
stc
adc
xchg
push
int3
outsb
testl
das
in
rcrl
lods
add
cmpsl
clc
mov
fs
rol
or
aam
das
stos
rorl
scas
int
inc
inc
pushf
mov
or
mov
jns
inc
js
ret
xor
cltd
orb
out
pusha
sub
aad
ja
pop
gs
sbbb
in
jp
lcall
jno
bound
lret
popf
out
jno
adc
rep
loop
lret
out
fbstp
add
jp
inc
or
cmpsb
xlat
or
push
cmp
and
cmc
mov
push
icebp
pop
lret
cli
outsb
mov
sbb
push
les
xor
je
cld
loop
jp
adc
cmp
xchg
ret
adc
push
sbb
sbb
in
xlat
outsl
push
jmp
sub
cmp
and
jle
out
aad
sub
or
mov
cli
push
sbb
lods
add
push
sub
xlat
mov
sarl
mulb
cmpsl
push
cmp
pop
cmp
jnp
cmpsb
sti
test
lods
call
sub
xchg
xchg
mov
jns
in
lcall
popa
xchg
xchg
pop
les
cmp
fisttps
xor
push
loop
jb
sub
jno
inc
dec
mov
stos
cli
les
mov
sbbl
cmp
fcmovu
sbb
lea
cmpsb
mov
and
sbb
cld
add
cmpl
push
nop
jmp
mov
fs
cmp
push
xor
dec
pop
and
rol
das
stc
andl
fldcw
push
mov
pop
sub
out
pop
mov
mov
ds
add
push
or
push
xlat
push
lods
test
ret
jp
imul
push
aad
xchg
pop
mov
jge
lock
cmp
sbb
nop
leave
fdivl
orl
sub
js
notb
cmp
pushf
sub
xchg
leave
out
jns
std
mov
in
fidivl
mov
push
jp
notb
bound
push
or
pop
jbe
sbb
mov
inc
pop
cs
push
mov
adc
lahf
roll
cltd
or
cmpsl
and
jno
gs
movsb
jle
or
xchg
sub
fisubs
or
je
cmp
ss
rcll
xor
adc
jl
xchg
fisubrl
lock
inc
xor
inc
jns
clc
fmull
ret
jae
mov
imul
mov
les
adc
sub
scas
jnp
outsb
mov
and
xor
push
imul
dec
adc
mov
pop
or
in
jge
inc
xchg
pop
outsl
fisubrl
mov
jne
push
mov
aad
daa
pop
jmp
xchg
hlt
dec
pop
pop
push
mov
xchg
jecxz
comiss
mov
lret
dec
and
mov
dec
in
ja
mov
jae
inc
sti
cmp
push
mov
xchg
add
mov
out
fsubrs
int
xor
mov
lahf
cmp
cld
push
aas
popf
mov
dec
inc
shll
jmp
adc
mov
inc
jmp
mov
es
stc
mov
imul
push
dec
push
and
add
cmp
andl
mov
jge
or
xchg
add
enter
or
jae
jecxz
push
mov
cmp
jecxz
xor
mov
ror
rcll
mov
mov
pop
push
shrb
pop
sbb
leave
push
sbb
xor
bound
add
test
fidivs
inc
xor
xorl
pop
cmpsl
js
lock
and
jmp
int
push
pop
mov
hlt
push
ret
ret
and
mov
push
dec
repnz
fbld
leave
popf
out
add
andb
jns
adc
movsb
cmpl
push
test
dec
jge
addr16
mov
scas
adc
int3
push
mov
lods
mov
loopne
cmpsl
sub
add
rolb
sub
in
push
xchg
negb
pop
mov
xor
jno
push
mov
inc
mov
jo
push
and
inc
ja
mov
pop
jp
mov
rorl
mov
push
inc
fs
imul
js
mov
repnz
add
jno
es
lods
xlat
sbb
insb
mov
imul
dec
lock
call
xor
push
xchg
xor
lret
xor
mov
and
std
scas
mov
xor
out
adc
cmp
pusha
cmc
sbb
sbb
mov
push
into
mov
adc
imul
and
mov
sbb
pop
je
fsubrs
xchg
push
xor
mov
jo
adc
jle
bound
inc
jbe
sub
iret
sub
dec
sbb
popa
stc
out
scas
add
flds
sarb
xor
enter
pop
ja
aaa
cwtl
and
test
js
push
or
mov
movsl
dec
and
dec
xchg
pop
out
xchg
xchg
pop
flds
test
mov
adc
cld
mov
lret
dec
dec
mov
ret
decb
inc
pop
in
js
cmp
sbb
jle
mov
jmp
add
push
inc
add
mov
shll
cli
xorb
loop
pop
jecxz
lret
scas
sbb
sub
aad
sar
sub
jp
pop
pop
movsb
add
repz
jge
xor
sub
mov
pop
jbe
mov
test
jbe
sbb
imul
scas
ljmp
movsl
mov
into
insl
add
dec
daa
mov
nop
or
mov
mov
sub
mov
repnz
mov
dec
push
into
cltd
loop
push
add
add
xchg
jnp
out
lret
push
xchg
push
aas
push
jb
inc
inc
enter
xchg
push
loopne
xchg
lahf
mov
mov
and
dec
pop
mov
leave
push
repnz
leave
in
sarl
out
bnd
incb
hlt
mov
xchg
mov
xchg
mov
push
negb
stc
es
mov
ja
fsub
ds
xchg
dec
inc
cmpsb
call
mov
lahf
addb
lds
aad
jl
inc
push
hlt
push
xor
ret
lahf
inc
shll
and
push
test
call
pop
call
aad
icebp
dec
push
push
jnp
in
mov
in
sbb
imulb
movsl
sub
insb
out
mov
nop
ret
sub
cmpsb
repz
outsb
cld
fmulp
in
and
mov
adc
popa
fcoml
and
mov
cltd
popf
rclb
mov
movsl
mov
aas
adc
or
pop
sti
sti
jae
mov
clc
mov
out
cltd
ret
push
vmwrite
cmp
cli
xor
inc
add
add
lock
dec
ret
and
test
test
daa
pop
or
xchg
lods
call
fistl
xor
sarb
jl
test
cmp
add
sti
xchg
inc
inc
outsb
push
push
push
dec
dec
jb
repnz
sub
in
mov
inc
push
sub
cs
lds
cmp
addr16
cmp
xor
pop
sbb
add
pop
pusha
mov
mov
push
adc
popf
rorl
es
jle
sahf
adc
movsb
adc
fcompl
ds
cltd
push
dec
cwtd
add
jecxz
add
rol
pop
dec
and
ds
ret
or
and
cwtl
in
pop
xor
cmp
repz
inc
leave
data16
mov
adc
jge
clc
scas
adc
xchg
mov
inc
not
iret
add
mov
jno
xor
adc
cmp
cltd
sbb
fdivr
xchg
adc
jo
test
bound
xor
stc
adc
push
addr16
add
call
outsb
test
ss
loope
push
xchg
inc
adcl
cmpsb
push
xchg
imul
rcrl
pusha
and
imul
inc
pop
cmp
mov
push
test
je
pop
mov
inc
or
shlb
dec
and
xchg
test
aaa
mov
cmpsb
sbb
cmp
lret
in
iret
add
add
lahf
and
jl,pn
sti
jnp
jg
int3
outsb
mov
fwait
loope
mov
es
mov
hlt
lret
adc
jge
std
mov
cmpl
sbb
add
push
inc
rcrb
xchg
repz
inc
aas
scas
jecxz
outsl
arpl
cltd
gs
sub
pop
add
gs
jmp
jbe
fists
cmp
hlt
mov
cmp
repz
xchg
cwtl
or
call
nop
sub
or
shll
out
repnz
loope
xchg
jbe
cmpsl
jno
cmp
fnsave
cmp
mov
and
xor
test
enter
jae
loope
adc
sub
divb
xchg
jne
jno
push
inc
xor
aam
int
dec
mov
push
jg
aad
dec
addl
mov
jo
add
clc
cmpsb
dec
jp
loopne
sub
xor
add
cs
cli
lods
adc
push
or
adc
test
pop
cmp
lcall
mov
ja
adc
fbld
or
lcall
mov
je
out
push
push
sub
jl
mov
je
add
push
pop
mov
pop
nop
mov
sarb
push
push
test
xchg
rcl
cli
sub
push
jns
push
testb
or
mov
dec
sub
mov
or
sbb
jae,pn
stos
lret
or
repz
inc
xchg
js
in
movsl
xchg
mov
adc
jbe
jne
xchg
jmp
repnz
aas
mov
mov
inc
jbe
mov
and
ljmp
js
jb
mov
ljmp
lea
mov
fdivr
inc
outsb
cmp
push
sbb
iret
into
pop
repz
add
mov
ss
push
and
pop
ffree
mov
inc
int3
push
fcoms
jno
or
xorb
push
xchg
xor
mov
repz
out
adc
arpl
adc
ret
or
movsl
or
push
ds
xlat
jns
call
jne
icebp
pusha
add
cmp
xchg
cmpsb
cwtl
lahf
sahf
cld
dec
xor
inc
pop
mov
xchg
sbb
addb
xchg
sub
lds
jle
push
sub
dec
mov
into
pf2id
dec
gs
fidivrl
lea
in
or
mov
or
inc
rcrb
cmp
pop
pop
mov
xlat
pop
out
inc
cs
jp
xlat
push
out
leave
xor
mov
ret
mov
push
sub
fwait
sub
and
jmp
mov
arpl
out
loop
dec
adc
cmc
adc
pop
and
jno
inc
daa
push
mov
shrb
pop
mov
arpl
sub
daa
and
mov
inc
out
jmp
or
add
lcall
sub
fs
push
jg
sbb
sub
sti
shll
mov
adc
aaa
inc
mov
cmp
mov
or
fcompl
mov
fs
or
push
shlb
mov
cld
outsb
test
aaa
pop
test
jb
ss
inc
dec
xchg
inc
sar
sbb
stc
jge
cmp
add
insb
loop
adc
test
dec
mov
push
inc
mov
fidivrs
add
je
mov
int3
outsb
jno
add
outsl
mov
add
movsb
push
mov
test
xor
cld
outsb
shl
sahf
add
xor
add
fsubrl
push
repnz
mov
cmp
dec
cmp
or
std
sub
hlt
mov
rcl
push
xor
add
and
ds
movsl
or
xchg
sub
jne
pop
mov
rorb
stc
mov
cld
and
jb
in
fs
pusha
fidivrs
aaa
sub
jne
test
enter
sub
sti
xchg
cli
fnstcw
jns
push
jle
dec
dec
sub
call
sub
aam
leave
in
incl
or
xchg
rorb
pop
mov
cmp
sbb
cs
cmp
test
push
test
mov
cwtl
shrb
lea
and
pop
jbe
mov
jno
xor
pop
aam
test
icebp
in
fcomp
xchg
out
jmp
shrl
mov
sbb
hlt
aas
mov
fimull
dec
inc
ret
sahf
stos
xchg
fdivl
jae
pushf
js
outsl
push
xchg
xchg
inc
pop
adc
stc
inc
mov
std
aas
push
lock
add
fstp
or
adc
rclb
cld
adc
adc
xlat
sbb
fisttpl
or
mov
inc
and
les
sub
xchg
push
std
movsl
sub
mov
fistpl
dec
leave
xchg
loopne
mov
cs
cmpsl
std
pop
lret
fildl
inc
inc
xchg
les
cltd
fwait
adc
aas
scas
mov
cld
xor
or
aaa
std
test
fcmovb
aam
loope
dec
xor
add
or
xor
cmovle
pop
stc
in
repz
jge
adc
repz
push
xor
scas
mov
jg
push
mov
movsb
cmp
lods
leave
add
cmp
jne
xchg
inc
stos
and
jge
fstps
mov
mov
in
push
mov
cmc
ret
cmpsb
mov
imul
mov
fwait
mov
xor
lea
cmp
jbe
mov
dec
stos
int
mov
fdivrp
sbb
sar
cmp
sahf
mov
cmp
addl
iret
gs
iret
lahf
loope
fisttpll
and
xchg
sarb
imul
sbb
in
push
lahf
ret
push
in
fildl
cmp
aad
daa
mov
test
xor
jne
mov
je
adc
push
mov
sbb
lds
lods
sub
scas
push
push
flds
aaa
xor
and
mov
push
push
sbb
push
xor
xor
fs
jmp
hlt
call
jno
push
xchg
pushf
xchg
add
or
lods
xchg
dec
das
mov
sbb
lahf
jecxz
leave
test
pop
add
inc
scas
mov
fidivrs
inc
pop
sti
arpl
xor
mov
xchg
sub
inc
pusha
xchg
jbe
push
xor
pop
js
test
stc
lret
out
mov
bound
test
add
sub
fs
or
sahf
cs
cmpsb
pop
repnz
mov
ss
push
mov
jge
dec
rolb
fnstcw
push
mov
sub
push
xchg
mov
dec
pop
out
push
add
stc
jmp
cmp
inc
cltd
mov
sub
add
arpl
add
sti
pop
cmp
add
cmp
mov
jp
or
mov
outsl
push
enter
shl
cmc
dec
adc
mov
jmp
mov
mov
pop
add
mov
pop
mov
jne
inc
mov
iret
test
outsb
push
push
sahf
shll
daa
sub
das
xor
mov
bound
and
or
cli
cmp
loopne
aaa
inc
xor
setno
add
dec
xchg
popl
sbb
xchg
push
lcall
dec
imul
cs
xor
mov
fcmovu
xchg
call
sub
aam
sbb
cmp
or
mov
in
mov
adc
dec
add
add
add
and
mov
jbe
inc
sbb
mov
rcrl
push
inc
inc
push
push
inc
repz
stos
mov
pop
in
addr16
sub
es
jbe
adc
dec
mov
push
push
int
lock
hlt
jecxz
jg
mov
out
mov
ja
sub
dec
mov
loop
shll
mov
cltd
mov
call
sbbl
dec
cli
mov
xor
xor
test
jle
repz
fwait
imul
scas
ja
adc
push
sbb
clc
adc
lret
xchg
pop
adc
dec
sub
lds
test
das
push
mov
dec
ja
pop
push
jae
xor
aad
inc
sub
insl
dec
cmp
add
push
push
dec
int
mov
xchg
stos
jbe
xor
lahf
fnsave
xchg
mov
or
mov
nop
dec
and
pop
sbb
repz
push
xor
icebp
push
sarb
inc
xor
test
sub
xchg
inc
xor
lock
scas
and
test
inc
fildl
dec
popf
cmp
xor
lods
push
sti
es
inc
inc
jnp
dec
and
sub
cli
cmp
jno
in
in
dec
jns,pn
and
mov
lret
adc
mov
inc
out
lock
ljmp
xor
push
sbb
cmp
mov
mov
xor
xchg
mov
loop
stos
movsb
jb
pop
inc
pushf
ucomiss
sbb
pop
pop
fstps
inc
in
test
das
loop
outsb
scas
cwtl
comiss
fnop
xchg
aad
outsl
sbb
lcall
push
mov
bound
mov
pop
out
push
stos
loop
adc
shrb
lret
popa
test
scas
push
nop
mov
fiaddl
cmp
sbb
aaa
psubsb
enter
lret
and
test
xchg
mov
pop
cltd
cld
mov
je
fstpl
push
lock
in
push
add
cmpb
dec
jge
pop
mov
add
xchg
xchg
popf
jae
repnz
ja
repnz
push
and
sahf
or
add
jmp
jl
and
clc
sbb
cmp
mov
iret
popf
xchg
dec
adcl
xchg
mov
jne
das
cmp
adc
lret
fcmovne
sbb
pop
xchg
push
cs
mov
pop
lea
outsl
mov
shl
loope
test
insb
xor
push
mov
addr16
sbb
adc
or
fmuls
popf
mov
shll
mov
insb
std
dec
ror
xlat
std
pop
pop
xor
jne
sbb
fisubl
pop
pop
dec
stc
imul
shl
inc
jne
in
adc
adc
xor
std
out
jb
hlt
sarl
ljmp
xchg
mov
and
sub
mov
loopne
inc
sbb
fdivs
inc
idivl
cli
sub
sbb
repz
loop
or
icebp
dec
and
aad
ds
scas
xor
fidivrl
dec
insb
lahf
insl
or
das
mov
sbb
jne
fcmovb
sarl
aaa
out
pop
jns
outsb
addr16
pop
dec
pop
mov
inc
xorb
xchg
jle
push
fst
add
jae
ja
das
stos
jo
pop
jmp
aam
mov
rolb
lcall
sti
rcrl
addl
cmpl
inc
stos
mov
imul
mov
int
push
lds
dec
cmp
xchg
iret
andl
loop
push
ficomps
sbb
mov
add
aam
outsl
jge
sub
inc
lret
add
jl
les
cmp
push
fists
clc
mov
xor
test
cmp
in
sub
das
repz
mull
sbb
scas
xchg
jge
es
mov
inc
pop
push
fistpll
cltd
addr16
and
pop
xlat
test
ret
sbb
insl
jl
je
call
in
in
rcr
xchg
outsl
das
call
sub
jl
mov
push
sub
ret
cmp
andl
test
mov
cli
push
in
cmp
ja
jae
pop
sbb
inc
iret
scas
adc
and
cli
mov
mov
js
push
imul
mov
lcall
push
fwait
xor
xlat
cltd
sbb
jmp
ror
jno
and
cwtl
jnp
insl
and
pop
jae
fstpt
aam
push
xchg
cs
inc
sarl
es
add
add
mov
fldl
imul
mov
mov
add
mov
cld
cmp
push
scas
dec
sbb
in
in
add
lahf
xchg
pop
cmp
adc
push
xchg
inc
xor
es
jae
and
add
jg
xor
pop
push
addr16
notb
movsl
fadds
cwtl
adcb
cmp
jmp
ret
push
stos
mov
mov
addr16
sbb
nop
jp
ficoml
frstor
or
nop
inc
adc
int3
gs
mov
adc
out
sbb
sahf
aam
notl
or
pop
or
icebp
cltd
loopne
lods
leave
mov
sub
fistpl
push
out
fs
sub
adc
out
jns
ja
mov
enter
cld
test
ss
xor
inc
imul
loopne
and
mov
sti
ja
pushf
push
outsb
mov
scas
dec
sbb
stos
vphaddbd
lret
movsb
imul
stc
gs
adc
ds
lret
jnp
jge
ss
ficomps
outsb
sahf
mov
pop
mov
or
in
cmp
pop
xor
pop
test
int3
aad
mov
xor
out
call
dec
mov
dec
add
mov
mov
cs
pop
xor
inc
pop
cmp
das
es
push
adc
lea
ljmp
cmp
cmc
gs
in
leave
cmp
mov
add
fcoml
sbb
leave
mov
mov
insb
mov
jge
mov
jnp
inc
pop
loope
lahf
in
and
out
xchg
aam
je
inc
les
sbb
lcall
icebp
stos
cmp
std
add
jb
movsl
xchg
mov
jnp
gs
in
rcrb
pop
cmp
xlat
ret
push
cltd
daa
fs
shll
xchg
bswap
loopne
and
fcoml
push
xchg
and
dec
add
je
fwait
lahf
popa
xchg
sbb
mov
pop
leave
mov
xlat
push
jmp
std
jne
mov
sub
int3
in
cli
sbb
cmp
or
inc
fiaddl
scas
scas
movsb
in
pop
movl
or
clc
jp
mov
stos
sahf
lahf
lret
inc
dec
repz
clc
fldt
rcl
stos
loope
cmp
ret
sti
mov
pop
fsubrs
negb
mov
jns
dec
mov
ja
jmp
out
outsb
repnz
inc
lods
out
inc
call
fmul
cli
and
aaa
nop
mov
imul
ret
ljmp
cmpsl
push
lcall
sub
sub
jns
mov
fs
dec
jle
sbb
fsubl
pop
and
pop
clc
jmp
lcall
sbb
into
or
cmc
add
fstl
test
mov
pop
xor
ss
sub
insb
push
aas
and
movsb
mov
xor
shlb
hlt
xchg
xor
iret
pop
mov
mov
cmpsl
or
popf
cs
test
ror
push
and
cld
sub
lret
into
mov
movsl
cmpl
insb
jl
or
sub
lahf
mov
jg
jecxz
sbb
sbb
sbb
insb
gs
jp
jns
mov
inc
or
jle
rorb
arpl
jmp
jno
mov
adcb
pop
pop
and
ficoms
nop
adc
push
inc
jb
dec
mov
and
pop
loop
sub
push
bound
test
mov
push
std
and
movsb
popa
pop
stos
xchg
fldl
lea
cmc
pushl
loop
pop
frstor
xchg
inc
popa
sbb
xor
popf
dec
mov
add
xchg
cmpsb
rclb
and
mov
lock
sub
inc
scas
cli
jle
sarl
mov
pop
and
push
aad
imul
adc
or
pop
sbb
jbe
call
lret
push
fidivs
mov
subb
cs
ljmp
out
addb
stos
push
xor
fmuls
mov
xchg
push
movsl
test
xchg
fdivrl
fidivs
adc
pop
jge
cs
inc
cmp
popf
xchg
stos
hlt
jbe
gs
cli
lret
shll
outsb
mov
movsb
je
fsts
inc
mov
repz
push
cli
js
leave
shl
push
sahf
mov
or
add
cmp
dec
or
cli
sbbb
bound
sub
leave
in
xor
stos
sbb
in
xorb
push
and
xor
ss
or
xor
adc
push
outsb
stos
shrl
sub
cmp
ret
dec
cld
push
lret
bound
push
ret
mov
test
mov
jp
cmp
in
inc
stos
je
js
xor
loopne
or
push
jge
fstpt
scas
xchg
das
push
das
loop
push
enter
sbb
ja
xchg
mov
and
divb
mov
push
fnstcw
sbb
xchg
mov
in
adcl
jo
iret
jnp
popf
mov
or
imul
subl
repnz
insl
jmp
add
data16
fadds
scas
add
cmp
mov
out
test
xor
aas
cmp
pop
cmpsb
shll
into
cmp
or
sub
std
ja
jne
lods
pushw
cmp
in
add
xor
dec
pop
inc
xlat
inc
pop
jne
insl
mov
leave
imul
push
outsb
push
loope
in
xor
and
and
mov
in
push
mov
dec
lcall
scas
outsb
cld
int3
cmc
mov
in
mov
cmc
cmp
adcl
pop
andb
hlt
outsl
cs
outsb
cmp
mov
sbb
test
ret
jns
lret
daa
mov
movsb
jno
inc
movsl
insb
pop
push
adc
test
add
outsb
lcall
push
xor
pushf
jns
inc
lret
out
lcall
aam
jl
inc
sub
and
jl
incb
mov
sarb
and
repnz
fsubrl
and
leave
insl
roll
inc
cmp
mov
outsl
jns
popa
mov
scas
cltd
ret
addr16
add
jno
shll
push
mov
gs
loope
pusha
xor
pop
cmp
xchg
and
sbb
sbb
pop
in
or
in
gs
scas
fisttpll
jecxz
dec
jle
xor
mov
notl
or
test
fbld
shlb
in
stos
insl
dec
pop
loop
enter
sub
imul
or
or
inc
leave
mov
xor
popa
jecxz
repnz
loope
inc
pop
cmc
rolb
jae
scas
lock
in
and
aas
vmovmskps
loope
mov
cs
loope
or
xor
add
inc
insl
aas
stos
dec
push
fisttpll
call
hlt
xor
xor
mov
sub
inc
sub
ds
call
xchg
inc
mov
or
test
dec
ss
stos
pop
mov
and
cmp
add
mov
clc
pop
aad
out
pop
jp
dec
mov
cli
aaa
mov
lds
or
ficoms
push
mov
push
rcl
pop
scas
mov
bound
add
cmpl
hlt
push
sbb
adc
add
jns
mov
insl
jg
cmpsb
jmp
or
sbb
add
daa
mov
scas
data16
je
sub
cmp
jne
pushf
push
push
dec
mov
insl
mov
lcall
jmp
rcr
mov
adc
mov
lret
inc
decl
pushw
test
lcall
ret
cmp
dec
inc
adc
xor
sbb
xchg
push
and
out
popa
jo
ficoms
repnz
pop
in
mov
mov
lcall
push
outsl
adc
or
aas
jb
pop
push
cs
add
jb
jmp
divps
jbe
mov
pusha
cmp
sbb
pushf
jge
mov
mov
or
fsubrs
movsb
sub
ss
jle
mov
clc
jle
sarl
jb
nop
imul
xor
fiadds
pop
mov
mov
dec
jp
lock
cmc
bound
or
xor
aam
cs
add
cld
pusha
movsb
dec
bound
inc
cmc
push
in
mov
and
loope
mov
push
repz
jbe
dec
adc
fwait
lds
and
popa
out
fisttpll
mov
inc
inc
arpl
adc
pop
repz
jno
add
sarl
stc
adc
sub
xchg
lcall
or
push
les
cmp
stos
cmp
cmc
nop
inc
ss
cmp
sbb
shrl
test
test
or
adc
push
out
pop
mov
adc
push
dec
push
xor
cmpsl
test
cmovo
inc
xlat
jnp
sbb
in
and
xor
xchg
movsl
outsl
je
outsb
add
and
ret
push
cld
into
or
fwait
jns
lods
data16
and
dec
pop
push
mul
lahf
cld
fimull
bt
in
inc
je
mov
cmpsb
mov
xor
or
icebp
xor
inc
test
stos
arpl
mov
add
adc
jns
jp
test
inc
clc
inc
and
jge
and
jns
aaa
js
call
push
roll
add
insl
inc
dec
call
add
nop
andl
fwait
cld
push
or
jnp
xor
sub
xor
movb
in
addr16
out
and
xor
inc
cmpsl
es
jle
outsl
push
movsl
or
xor
jb
fldcw
adc
or
adc
cmp
mov
cmp
push
les
mul
mov
cld
mov
cmp
and
mov
jmp
sub
jbe
and
flds
cmpsb
repnz
in
call
and
cmpsl
dec
es
push
jmp
xor
xchg
cmp
or
jg
dec
push
lahf
dec
nop
sub
pushf
insb
fisubs
fs
mov
add
pop
test
mov
dec
push
fdivl
adc
mov
shrb
cmp
mov
out
jge
imul
ret
add
push
aas
mov
dec
dec
cmp
cld
les
inc
pop
or
cld
xor
jmp
mov
lret
jle
xchg
sbb
loop
testl
jge
and
push
mov
test
lods
dec
mov
mov
cli
mov
xlat
cmpb
test
je
sub
mov
mov
or
dec
or
add
sub
shrl
imul
ret
fwait
pushf
lods
add
dec
pop
in
rcll
xor
enter
hlt
aad
mov
sbb
popa
mov
sti
lea
or
out
mov
cld
nop
sbb
in
mov
pushf
int3
cmp
push
mov
xor
nop
aad
bound
add
or
adc
xorb
js
cmp
xchg
mov
add
scas
pop
bound
nop
test
cmp
dec
cld
xor
movsb
mov
mov
xchg
std
jo
push
mov
push
popf
cltd
push
rclb
jmp
aad
lods
repz
lea
mov
push
loope
cmpsb
xchg
add
push
outsb
cld
pop
ljmp
mov
das
pop
jno
xorb
cltd
jae
lret
shr
pop
les
popf
fisttpl
add
pop
in
jge
cmp
repnz
daa
adc
imul
mov
and
mov
loopne
imull
inc
es
jg
push
stc
sbb
mov
mov
lods
aas
add
pop
lcall
pop
xlat
leave
or
pop
jle
mov
nop
add
popa
stc
mov
call
push
fs
je
in
jecxz
mov
jo
ret
inc
xchg
xchg
xlat
ss
push
incb
and
mov
cmp
sbb
out
xchg
or
sti
mov
lahf
aam
xchg
jb
scas
pusha
or
notl
and
enter
daa
inc
push
xor
lds
mov
repnz
loope
in
inc
dec
add
sub
inc
adc
popa
out
cmp
pop
scas
fsubrl
loopne
imul
dec
mov
es
pop
fsubrs
add
or
insl
fs
sbb
mov
or
ffreep
fcom
jo
sti
push
daa
aas
jg
or
out
mov
xchg
mov
push
mov
test
lds
push
jnp
xor
mov
cwtl
and
mov
add
push
sbb
mov
mov
iret
cs
pop
pop
sbb
pop
popf
add
add
ja
shrb
int3
mov
jl
in
push
sbb
cmp
jecxz
insl
mov
and
add
mov
jnp
pop
jecxz
jno
cwtl
or
iret
jno
in
pop
ljmp
push
cmp
adc
pop
mov
cmp
mov
jne
lret
adc
mov
push
out
jmp
pop
in
test
jmp
sub
jnp
lret
mov
stc
sbb
jnp
inc
add
out
lea
movsl
in
adc
outsl
inc
mov
push
and
in
push
aas
inc
mov
mov
jmp
gs
sub
adc
lods
fidivrs
imul
xchg
dec
cmp
push
aam
andb
cmc
popa
fwait
lret
clc
in
cmp
into
lock
mov
jae
rcl
sub
inc
xchg
pop
cltd
fistps
nop
mov
shlb
sub
insl
mov
call
jl
xchg
mov
ja
stos
or
test
xchg
lea
aaa
inc
mov
jnp
out
inc
cmc
popf
sub
jmp
add
fsubr
xchg
ds
cmpsb
enter
add
sbb
mov
in
aam
ud1
push
test
sub
lods
fcomip
mov
cmp
es
jge
add
jle
std
aaa
scas
cmp
dec
xorl
idiv
jns
mov
mov
cmp
push
bnd
dec
popl
pop
ret
mov
fmuls
push
loop
push
push
xchg
sbb
xchg
pop
jmp
fdivr
push
mov
push
shlb
inc
dec
xor
movsl
fadds
cmp
stos
in
mov
xor
sbb
cmpsb
sbb
adc
xor
inc
xor
js
clc
mov
xchg
mov
in
add
push
mov
fwait
imul
pushf
sbb
xchg
xchg
sub
clc
neg
push
iret
xchg
xor
or
stos
insl
mov
aas
dec
test
outsb
xor
xchg
shrb
cmp
je
ja
lahf
lret
loope
jg
adc
ret
repnz
dec
lea
imul
lea
cwtl
sub
mov
sbb
out
fsts
cltd
pop
rcrl
adc
dec
ljmp
cmp
mov
popf
cmp
mov
lret
ljmp
in
clc
outsb
and
add
insb
lea
jg
popa
mov
sar
jecxz
popf
and
pushw
jb
fildl
mov
add
mov
vandpd
loopne
and
sub
inc
and
sub
out
cmpsl
daa
daa
adc
push
dec
jnp
subb
mov
or
into
out
cld
cmp
push
lds
mov
cld
pop
push
xor
btl
or
subb
pop
stos
arpl
or
lock
jb
dec
dec
inc
sbb
ss
and
mov
push
stc
push
jecxz
jmp
lock
scas
xchg
mov
stc
insl
loopne
add
jb
or
inc
lahf
negl
jge
sub
cmc
lret
out
or
adc
adc
cmpsb
loope
js
aad
dec
mul
push
lcall
or
jg
hlt
flds
mov
mov
pop
dec
das
xor
lahf
and
rorb
mov
dec
daa
popa
lock
arpl
add
push
fmull
in
roll
push
jno
push
mov
sub
loopne
fs
sbb
xchg
fistpl
rcll
sbb
pop
jae
xor
test
adc
xchg
aas
aas
and
push
dec
mov
inc
or
or
sub
and
addr16
sub
inc
dec
pop
xor
cmpsl
sbb
xchg
dec
mov
inc
or
mov
xchg
mov
xlat
inc
push
mov
daa
in
mov
add
pop
stos
loopne
xchg
jae
in
negl
add
std
inc
scas
inc
inc
xor
lcall
fldenv
jecxz
dec
repz
imul
movb
xor
push
int
lods
jp
jbe
and
mov
dec
push
jle
leave
xchg
lods
jns
mov
mov
push
aas
into
insl
mov
insl
mov
icebp
aaa
jb
or
add
imul
xor
pop
push
add
push
aad
scas
je
push
call
arpl
lahf
xor
mov
int
sbb
ficoml
xchg
inc
daa
ret
adc
in
add
pop
mov
ljmp
rcl
icebp
lock
iret
cmp
sub
pop
fwait
add
fdivs
gs
mov
xchg
mov
add
scas
test
iret
push
push
add
stos
mov
adc
fisttps
mov
popa
or
icebp
gs
pushf
imul
jno
and
mov
lcall
sbb
mov
es
cwtl
adc
jmp
in
mov
lods
pusha
ret
shrb
in
ljmp
enter
lods
adc
and
insl
add
xor
pop
jle
sar
jae
push
inc
sarl
cli
or
mov
dec
jae
inc
sub
rcrb
push
jg
insl
xchg
lea
lret
loop
xor
push
mov
jbe
stos
test
xor
mov
icebp
imul
sbb
nop
pop
mov
adc
imul
sub
loope
fildl
aam
jnp
xor
sti
push
cmp
xchg
or
jecxz
dec
mov
test
pusha
shll
cmp
fwait
and
andl
xchg
push
cmp
out
inc
lcall
mov
shlb
lock
dec
xchg
sar
pusha
enter
and
push
xchg
lcall
xlat
sub
lahf
popa
outsl
lock
mov
fsubp
xor
dec
insl
fistpll
test
clc
out
mov
aad
iret
mov
rcrl
mov
fistpll
ret
mov
fiadds
cwtl
das
stos
and
leave
mov
jnp
push
mov
xchg
mov
pop
sbb
pop
mov
mov
cmp
push
pop
pop
cmpsb
xchg
adc
js
lahf
iret
loop
push
mov
pop
pop
inc
xchg
inc
mov
mov
fdivl
mov
jge
or
cmp
daa
hlt
insb
repnz
fidivrl
jbe
aad
fs
ret
je
rclb
in
sub
fisubrl
loopne
cltd
dec
xchg
lods
jle
adc
and
jmp
pop
sub
stos
stc
mov
push
and
shll
sbb
es
or
push
mov
rolb
leave
push
sub
repz
pop
sub
out
dec
pop
lea
lcall
out
or
sahf
and
repz
les
bound
popf
outsl
mov
or
sub
jp
stc
mov
mov
sbb
pop
daa
and
xchg
mov
mov
cmpsb
sub
popf
cmp
stos
pop
xchg
jno
aad
adc
or
xor
ret
push
ret
add
and
cli
mov
sbb
inc
testl
jnp
adc
mov
cmp
mov
mov
add
in
int
cs
xchg
xchg
scas
sub
mov
repnz
pop
lock
faddl
mov
sub
mov
inc
sbb
push
pop
cmpsl
call
pop
shrb
xchg
pusha
fwait
dec
jae
xor
test
in
jne
adc
mov
and
stos
sub
and
out
aas
inc
mov
fimuls
mov
xchg
stos
imul
xchg
cld
inc
pop
jmp
cwtl
pop
outsb
mov
xlat
cmp
sbb
mov
and
dec
out
push
adc
pop
push
mov
rolb
xor
xchg
push
inc
imul
add
xor
in
inc
jo
jns
movsb
pop
into
repnz
cs
add
andl
and
das
jge
js
into
mov
jg
hlt
jg
fstl
pop
push
fmul
jns
mov
pop
adc
pop
icebp
aad
add
xchg
gs
push
ljmp
jne
outsl
scas
dec
mov
push
sub
jp
fstl
jns
pop
cmc
push
xlat
out
out
push
mov
xor
mov
push
popa
mov
shlb
mov
inc
cmp
cwtl
js
push
pop
xchg
aam
jno
repnz
out
xor
dec
xchg
sub
inc
xchg
sahf
les
iret
int3
mov
mov
xchg
xor
mov
push
adc
pop
cmpsl
hlt
ret
mov
lods
test
jns
mov
dec
das
movsl
fisubs
push
repz
mov
dec
sub
jl
stos
mov
rcll
stos
icebp
sti
mov
push
xor
or
lock
xchg
push
xchg
dec
das
xchg
dec
addb
lret
addr16
sbb
fildl
push
das
push
adc
and
inc
xor
jb
jg
or
sbb
sahf
sarl
mov
enter
nop
mov
mov
add
xchg
mov
je
shlb
mov
stc
imul
jne
ret
fistps
add
cmpsb
xchg
call
fcom
jo
out
test
jle
fwait
and
jecxz
inc
mov
out
je
sub
cmp
mov
frstor
out
imulb
subb
jg
cmp
call
mov
test
sbb
mov
or
dec
mov
adc
xchg
mov
cwtl
ds
imul
cmp
and
in
lods
cmp
test
pop
mov
xchg
scas
int3
sahf
add
dec
mov
or
mov
pop
gs
cmp
lock
punpcklbw
cmp
xchg
pop
shll
xlat
movsb
lods
xchg
movsb
push
adc
xor
sbb
push
loopne
and
mov
in
mov
pop
arpl
inc
inc
test
jle
jecxz
in
pop
add
les
push
outsl
push
mov
pop
in
pop
fs
iret
cli
add
scas
divl
or
mov
push
adc
dec
xor
out
cmp
inc
jp
repz
in
xor
dec
xor
pop
mov
insl
loop
jp
inc
sbb
cwtl
mov
fimull
sbb
push
fdivrl
mov
test
sub
test
pop
cltd
int3
push
sub
xor
sti
test
jp
jb
cmc
out
add
lods
les
push
data16
leave
pop
xchg
xchg
andb
mov
clc
mov
cs
out
dec
and
mov
xchg
lcall
pop
mov
cmp
push
test
lock
or
aam
adc
xlat
push
xor
ret
rorb
and
aad
jns
ljmp
mov
mov
repz
mov
jle
dec
pop
icebp
mov
je
push
cmpsb
dec
xchg
insl
xlat
out
out
sahf
les
test
fs
add
shlb
sub
je
mov
or
inc
and
jo
jecxz
ds
shrb
ret
fwait
out
cmp
aaa
dec
fstpt
or
outsl
jl
xchg
push
add
adc
scas
neg
inc
sar
adc
loope
pop
xor
xchg
fs
lea
mov
bound
dec
fistps
movsb
aad
xchg
mov
sub
cmp
pop
pushf
sbb
pop
push
mov
cmc
jecxz
and
pop
jecxz
inc
inc
test
cmp
ss
ds
test
fwait
add
cmpsl
enter
adc
es
das
cmp
sti
mov
inc
xor
loop
jmp
inc
sub
int3
xor
fimull
cmpsl
adc
mov
repz
mov
add
fdivs
pop
mov
cmc
fnstenv
std
or
imul
mov
iret
xor
mov
js
sbb
enter
repnz
andb
or
pushaw
xchg
mov
jg
cmp
jg
sarl
pop
add
add
mov
dec
xchg
mov
repnz
cmp
ljmp
jo
arpl
js
hlt
jno
cmp
insb
dec
xchg
inc
roll
sub
inc
push
lea
push
decb
in
xor
testl
inc
jae
ja
inc
mov
negl
jg
mov
sbb
fs
pop
movsb
test
jmp
out
push
dec
jnp
out
cwtl
xchg
inc
adc
divb
sbb
or
push
xor
out
push
or
cltd
adc
sub
xor
sub
pop
scas
data16
loope
scas
lahf
ljmp
js
cmp
jne
roll
pop
xchg
jno
xchg
push
shrl
faddl
test
sbb
cmp
outsb
cmp
inc
in
nop
cld
mov
cmp
xchg
mov
mov
dec
cs
lcall
fisubrs
aam
mov
fbld
add
das
xor
dec
push
xor
repz
inc
mov
dec
or
fisubl
push
scas
sbb
xchg
enter
test
pop
gs
mov
mov
push
pop
mov
mov
inc
inc
ret
sbb
jle
push
inc
dec
movl
push
xchg
nop
rclb
push
adc
pop
mov
ljmp
cmp
pop
gs
fs
fimull
or
xor
adc
popa
push
jbe
pusha
and
fstl
out
xchg
sbb
out
sub
mov
cmp
rorl
mov
xchg
out
fldl
out
insb
loopne
xchg
mov
xchg
jbe
mov
subb
bnd
xchg
loope
int
int3
sub
mov
mov
push
mov
aad
adc
stc
flds
je
adc
push
cmp
xor
mov
mov
xor
ljmp
imul
adc
push
pop
jmp
rolb
mov
loopne
xor
fldl2t
enter
pop
into
popf
stos
clc
hlt
xlat
fsub
push
insb
jns
cmp
shlb
pushl
je
and
gs
adc
cmc
fwait
aas
pop
sub
push
pop
xor
pushf
xor
cs
aad
lds
mov
jp
scas
xlat
int
movsl
jae
mov
das
lock
aad
jge
pop
aad
stos
xor
fs
cmpsb
jle
andb
and
int3
mov
mov
mov
mov
xchg
out
ljmp
add
dec
lock
lods
shrl
es
dec
dec
insb
fs
add
mov
int3
test
ss
jge
jnp
mov
call
lea
jb
fldl
pop
cli
je
incl
mov
cld
add
mov
into
bound
sub
mov
dec
mov
cli
xor
fwait
adc
stos
xchg
add
pop
cmp
lret
mov
push
stos
dec
ljmp
nop
addl
shlb
dec
push
or
hlt
jno
test
int
adc
sahf
mov
les
xor
cmp
mov
inc
mov
mov
jne
mov
in
mov
dec
xor
call
std
add
cmp
inc
pop
cmp
adc
cli
data16
divl
jg
mov
pop
and
repnz
enter
imul
aaa
sbb
pop
add
mov
xchg
push
fadds
aam
mov
sbb
mov
fcomp
mov
lods
aam
dec
jmp
push
ja
push
or
cmp
mov
push
lds
in
xorl
cmp
rorb
jp
cmp
testl
push
insb
bound
cmp
cld
pop
mov
inc
add
data16
cmc
outsl
insl
xchg
mov
xor
xor
arpl
cmc
fbstp
je
add
jg
jl
aas
push
sub
pop
pop
test
fsincos
mov
mov
ljmp
lcall
sub
dec
in
mov
cltd
xchg
pop
cmp
nop
inc
outsb
xchg
adc
mov
fnstenv
cmp
rcrb
jle
xchg
cmp
push
mov
gs
aad
lods
ret
sbb
mov
test
test
or
in
fcmovnb
les
mov
xlat
and
scas
pop
cmpsl
cs
orb
fsubl
sub
arpl
and
push
popf
cwtl
and
fincstp
adc
jb
mov
xlat
test
pop
adc
bound
ljmp
pushf
pop
push
dec
jp
jnp
xchg
scas
and
popl
enter
adc
or
push
ret
mov
je
xor
ss
bswap
jne
mov
mov
and
mov
jle
mov
pop
cmpsb
jle
sub
lcall
jb
sbb
pop
sub
pop
outsl
adc
ja
imul
bound
clc
pop
in
std
mov
mov
roll
and
cs
test
ds
cmp
lock
loop
pop
scas
mov
sub
inc
lret
aam
mov
mov
mov
aaa
cmp
push
mov
ljmp
add
shlb
stc
adc
arpl
pop
cmp
cwtl
ss
mov
arpl
lods
push
pop
int
mov
cmp
testb
popf
mov
add
xor
pcmpgtd
mov
push
sub
sbb
cmp
sbb
xlat
xchg
lcall
insl
dec
test
jns
loope
shr
jnp
stc
fisubs
fisttps
nop
pop
repnz
ret
xor
cmp
movsl
insb
pop
into
sub
mov
and
jmp
jae
iret
in
cltd
pop
iret
das
xchg
jb
push
xor
aad
fs
jp
mov
and
loope
je
mov
or
mov
into
or
int
adc
cmp
jb
push
scas
fisttps
cmc
nop
fdivrl
jp
inc
fs
lds
push
xchg
scas
das
mov
faddl
out
adc
fwait
int
insl
scas
add
dec
stos
nop
ljmp
or
addb
pusha
sub
sub
mov
lcall
mov
jbe
movsl
inc
sub
pop
jb
pop
sub
aam
fildl
hlt
adc
icebp
pop
add
sbb
push
pushf
test
sub
aaa
adc
xlat
dec
outsb
dec
sub
out
cmp
mov
mul
or
adc
fnsave
and
cmp
call
pop
mov
dec
push
jecxz
popf
jecxz
je
cmc
iret
adcl
in
enter
mov
sub
mov
fnsave
jle
inc
xorl
sbb
and
mov
cmp
add
pop
cmpsl
mov
test
ljmp
pop
sub
mov
and
stos
cmpsl
das
jne
sar
xchg
inc
xor
cmpl
es
idivl
or
cmp
xor
call
add
mov
add
push
ret
jbe
and
orl
leave
inc
inc
add
xor
pushf
sbb
loop
movsl
push
divb
cli
push
mov
add
mov
lcall
imul
or
lahf
ret
std
iret
inc
test
jns
add
sbb
sub
aas
adc
ljmp
sti
mov
dec
mov
mov
or
in
out
or
push
add
pop
aas
andb
inc
inc
xor
rcll
movsl
xchg
and
andl
and
ss
imul
fbld
jl
test
stos
or
popf
cmp
test
lcall
fldenv
in
fimuls
xchg
mov
sub
fdivrl
pop
sub
pop
inc
cwtl
jmp
push
pop
xchg
sub
jno
xchg
daa
shll
repnz
xchg
idivb
out
pop
popa
and
pop
scas
pop
push
hlt
adc
push
add
jno
call
dec
and
rcl
jb
cmp
call
imul
stos
jmp
cmp
inc
and
mov
es
pop
pop
pop
sbb
mov
pop
mov
dec
mov
insb
inc
out
xor
and
cmpsl
dec
inc
and
inc
lock
cwtl
sbb
pushf
inc
xchg
or
adc
mov
sub
fs
cmp
test
int
mov
jle
xchg
sub
xchg
pop
push
dec
ror
cmpsl
cmp
popl
pushl
dec
mov
orl
divl
cmp
ret
add
xor
adc
cmp
hlt
mov
dec
add
into
nop
leave
push
cli
xlat
dec
jmp
push
xchg
lret
push
mov
cmpsl
push
clc
push
cmpsl
in
outsl
or
adc
mov
xchg
test
jnp
mov
arpl
add
sub
nop
or
das
fcomip
and
mov
bound
inc
adc
icebp
jecxz
call
or
ja
mov
mov
ret
dec
fnstcw
sub
or
call
ds
or
cmp
jo
pushf
sub
stos
outsb
jle
mov
add
mov
sub
call
int3
xchg
inc
repz
and
pop
cld
cmp
stos
adc
ficomps
popf
mov
out
incb
in
sti
mov
xchg
mov
and
cmp
pop
movsb
sbb
and
mov
js
add
push
mov
xlat
pop
sbb
seto
mov
js
or
cmp
pop
sbb
fidivl
or
push
loop
jno
mov
int
push
les
in
push
mov
out
adc
mov
hlt
test
stos
outsl
call
sbb
pop
cli
fs
sbb
nop
jb
xor
sbb
mov
mov
jo
xlat
sbb
orl
or
jae
aas
outsb
leave
arpl
cmpb
jb
add
dec
insb
je
ss
loopne
aaa
mov
dec
pop
insl
in
add
xchg
mov
and
pop
add
addl
fnstcw
sub
xchg
cmp
addr16
es
sbb
and
leave
in
arpl
test
or
clc
sbb
sub
pop
aas
jge
mov
inc
out
xchg
flds
mov
sub
stos
mov
xchg
adc
pushf
dec
mov
pusha
or
pop
and
addb
mov
insl
cmp
jmp
out
inc
cmpsl
decb
sub
xchg
sub
sub
inc
ss
pop
gs
push
movhps
fstps
push
sbb
push
mov
js
push
push
push
jae
negl
fdivl
aad
adc
and
push
jg
sub
int3
cwtl
cmp
xlat
dec
insb
jo
adcb
inc
ret
jb
jae
pop
fistps
cmp
mov
scas
fiaddl
stos
mov
add
in
out
or
inc
cmp
add
cmp
adc
addl
incb
popf
add
adc
dec
push
mov
dec
adc
orb
add
pop
lret
push
cltd
and
shlb
xchg
push
cltd
mov
jg
pushf
daa
imul
lds
lock
dec
stos
mov
xchg
xor
sarl
fists
push
cli
and
xchg
jle
fmull
jno
pop
movsl
jae
xor
mov
xlat
jno
jmp
jp
mov
fs
mov
pop
mov
lahf
ds
stos
fistl
add
andl
jge
xchg
and
mov
inc
out
cli
out
sub
pusha
lea
pop
sbb
sti
in
rcrb
orb
inc
adc
repz
pop
pop
mov
rcr
cmp
sahf
mov
jp
ret
jo
xor
popf
aas
and
cmp
mov
loop
adc
call
xchg
mov
cmp
push
and
inc
mov
into
mov
mov
jle
adc
mov
cli
jle
ja
incb
rclb
rorb
cmp
dec
leave
jmp
aaa
lcall
xlat
jp
enter
xor
ljmp
test
and
adc
cmpsl
in
loope
cltd
rcl
or
push
js
sarb
cs
adc
cmpsl
cs
jne
jns
push
test
push
jae
call
lret
and
jo
dec
sbb
leave
mov
cmp
ss
fidivs
outsl
and
xor
out
rcrl
inc
sti
xor
stos
cmp
and
pop
iret
and
stos
rclb
jle
add
fcomip
jg
pushf
arpl
ret
fdiv
cmp
pusha
fs
scas
call
mov
adc
mov
les
xor
ror
je
sbb
lahf
lock
in
pop
popf
cmc
add
gs
in
insl
fnstsw
xchg
pop
xchg
mov
jne
sub
jae
adc
sbb
xor
inc
fs
fcom
sahf
jge
in
inc
mov
cmpb
test
dec
or
sbb
push
leave
pop
mov
adc
cmp
jo
sar
ss
pop
xor
push
jno
int
pop
in
nop
aas
adc
jno
mov
jne
jge
jne
fsubl
mov
in
mov
or
xchg
mov
jnp
fcmovnb
ss
mov
mov
insb
inc
sub
test
add
fidivl
js
ret
mov
test
loopne
sub
xor
or
lret
or
sub
jl
das
mov
pop
and
and
ficomps
pusha
stos
xor
aas
mov
bound
lret
and
jecxz
sbbl
lock
cmpb
and
cmpsb
cmpsb
dec
cmp
loope
or
and
add
popf
xchg
mov
js
jmp
jg
imul
lcall
addr16
mov
mov
cmp
mov
xchg
int3
pop
lahf
push
in
rolb
loopne
jge
das
loop
clc
cmp
xchg
push
cli
in
push
sub
inc
xorl
or
js
cmpsl
int3
sbb
push
pop
mov
rolb
xorl
cmpsl
mov
or
inc
mov
out
ja
aad
fildl
xor
and
or
nop
fsubrs
cmpsl
sbb
out
flds
mov
adcb
add
enter
stc
jne
insb
cmp
ret
sub
mov
mov
sub
inc
push
inc
stos
adc
sbb
test
icebp
lea
mov
push
inc
xchg
xor
pop
insl
std
mov
in
or
adc
inc
jmp
fs
and
cmp
push
adc
sub
lret
push
cmpsl
cmp
jne
test
cmp
fstl
jns
adc
cmc
jecxz
pop
xlat
xchg
lods
mov
cltd
adc
or
adcb
aas
mov
in
test
negl
scas
inc
mov
dec
and
es
inc
xor
icebp
in
popa
sarb
add
mov
sbbl
sbb
cmc
insb
xchg
and
pop
and
mov
dec
add
dec
xor
jmp
in
push
cmp
xchg
dec
add
push
lods
bound
call
push
xchg
cld
rorb
xchg
sbb
jle
adc
cmpsl
xchg
lcall
sub
or
pop
lock
push
icebp
fidivs
divl
ret
roll
es
mov
pop
into
pop
xor
jo
lods
fwait
cli
push
jno
mov
nop
push
mov
stc
mov
jg
inc
scas
leave
call
xchg
inc
insl
mov
fstps
adc
sbb
lods
jno
mov
adc
mov
aaa
stos
adc
mov
push
sbb
out
mov
shll
fsubr
mov
dec
jp
xor
fildl
xchg
mov
inc
arpl
mov
push
adcl
xchg
push
push
test
loopne
push
mov
or
mov
arpl
mov
push
gs
lret
xor
arpl
push
or
in
push
test
xor
jnp
sub
push
test
sarb
mov
mov
inc
repz
cwtl
or
and
fnclex
sub
xlat
mov
mov
jmp
aaa
cmp
push
cmpsl
jmp
pop
int3
jecxz
mov
rcrb
fsubl
ljmp
lods
stos
aas
mov
or
lret
mov
sarb
inc
xchg
imul
jne
int3
xchg
popf
lock
sbb
push
dec
enter
in
add
sbb
push
xchg
pop
push
lods
jns
std
mov
faddp
outsb
shlb
insl
daa
mov
fistpl
sub
ret
pop
leave
sbb
mov
mul
and
lea
cmp
aas
pop
fsubrs
fstl
testl
jb
adc
xor
xchg
jge
fisubs
mov
mov
icebp
insb
xor
int3
enter
push
popa
aas
adc
clc
jne
aas
mov
xlat
dec
mov
adc
mov
cmpsb
pop
mov
scas
sub
dec
sub
sub
fdiv
mov
fwait
in
push
push
jae
out
mov
in
iret
lea
jno
xor
nop
jae
mov
cltd
push
fwait
add
cmpsb
movsl
shll
jmp
jbe
out
fistl
loop
jb
and
in
push
jo
test
rcr
jnp
fwait
dec
inc
mov
inc
icebp
int
insl
adc
data16
mov
and
data16
les
sbb
pause
pop
iret
xchg
mov
sub
ds
inc
inc
sarb
imul
sti
sti
loopne
push
shlb
dec
mov
mov
mov
fsts
xlat
ja
into
xchg
in
out
inc
mov
lret
jae
mov
mov
lea
mov
push
rcl
ret
ficompl
push
push
or
mov
sub
test
shl
adc
int
rcr
int3
cltd
js
cwtl
xchg
mov
out
cltd
and
test
icebp
lcall
jae
lea
fwait
jne
cmp
push
fldenv
pop
xchg
xchg
pop
add
or
xorl
pop
lahf
cmp
in
adc
xchg
and
cmpsl
xlat
movsl
mov
push
sbb
mov
es
mov
push
xchg
push
mov
xor
push
sub
xchg
jae
outsl
cmova
scas
sbb
cmp
and
xchg
jns
lret
repz
sbb
les
test
dec
pushf
sub
jno
je
dec
addb
push
push
stos
sub
bound
mov
and
and
movsl
or
dec
dec
mov
xorl
xor
mov
jecxz
loope
mov
bound
xchg
fnstsw
clc
adc
std
mov
cmp
int
mov
iret
adc
add
sbb
nop
pop
movsl
mov
mov
test
and
push
outsl
cmp
adc
les
add
xchg
shrl
cli
or
or
xchg
or
cwtl
das
jg
fistps
ljmp
jl
adc
les
xchg
sub
mov
xor
fs
cmpsl
lds
mov
aas
push
imul
push
sbb
shlb
mov
sbb
pusha
cli
pop
mov
sub
mov
push
add
cld
adc
push
ja
insl
jbe
lods
mov
std
aas
push
repz
stos
mov
add
and
cmc
fisubl
mov
pusha
mov
out
js
mov
sbb
movsb
js
lods
push
xlat
add
xchg
xorl
shlb
inc
fsts
into
cmp
loopne
test
imulb
pop
in
mov
mov
cld
inc
movsl
cmp
xchg
daa
mov
xor
aad
sub
data16
ret
int3
jb
push
push
pop
xlat
xchg
cli
aam
push
and
mov
lock
out
mov
dec
cmp
sub
jecxz
dec
lods
dec
into
pop
subb
paddq
lcall
enter
dec
dec
sbb
sbb
insb
jge
adc
jno
mov
lcall
jb
xchg
mov
add
and
orl
mov
and
dec
mov
ret
jl
repz
adc
stc
loope
loope
adc
push
stos
xchg
inc
pop
scas
lods
adcl
je
shlb
loope
cmp
stos
cmpsl
daa
or
lea
cmc
out
dec
pop
mull
mov
fcoms
add
push
mov
push
hlt
push
jo
jo
cmc
je
add
rcrb
aad
cmpsb
mov
movsb
add
mov
inc
mov
imul
movsb
cs
mov
add
push
icebp
xchg
cld
mov
ds
mov
jne
mov
loopne
fsubl
fstpt
mov
mov
fiadds
push
jge
cld
fdivrl
pushf
data16
xlat
or
cmp
inc
sbb
mov
addr16
fnsave
jne
aam
scas
stos
jbe
in
mov
pop
mov
mov
add
cmp
mov
push
mov
ret
iret
aaa
lcall
push
or
or
mov
mov
imul
add
icebp
push
or
sbb
or
xor
mov
mov
xchg
cmp
aaa
pushf
push
mov
jecxz
sub
pop
cmp
adc
imull
pop
or
rclb
cltd
andl
loop
sbb
dec
pop
adc
lret
loopne
pop
inc
dec
cmp
test
fsubl
cmpsl
cwtl
jne
out
insl
icebp
mov
test
mov
and
cmp
movsl
pop
sahf
pop
sbb
xchg
mov
fdivr
dec
sahf
cmovg
xchg
popf
xchg
insl
xor
push
stc
push
jno
mov
adc
js
fsubl
iret
fisubl
insb
ror
mov
nop
cltd
mov
ss
jg
rcll
add
pusha
xchg
mov
jns
hlt
add
dec
ljmp
jb
pop
jae
push
cli
mov
push
in
loope
ret
adc
jae
aam
and
sbb
shlb
sar
iret
pop
jo
shll
jnp
inc
sub
ret
mov
jmp
push
adc
dec
les
inc
loopne
inc
or
scas
adc
pusha
data16
push
sbb
hlt
xchg
push
mov
insl
mov
ja
or
loop
aas
mov
out
imul
mov
jecxz
adc
xchg
fstl
inc
sbb
xchg
cmp
xchg
or
fistpl
dec
loope
fwait
sbb
call
pop
xchg
lcall
sbb
fwait
cmp
decl
adc
dec
inc
xor
dec
mov
stos
out
xchg
or
fldl
mov
mov
mov
pop
xchg
out
push
cli
es
fcom
int
adc
fdivrs
inc
scas
leave
mov
ret
cli
imul
lods
imul
bound
shrb
jl
jmp
pop
inc
test
push
repz
mov
and
frstor
outsl
cltd
aaa
shll
sahf
pop
mov
jg
imul
movsl
out
cli
loopne
lret
pop
fnstsw
stos
nop
arpl
call
movsb
bnd
ret
sbb
mov
stc
in
cs
cld
xchg
mov
call
push
popa
rclb
ja
test
add
je
dec
andl
or
std
pop
mov
mov
ja
xor
imul
mov
rcll
dec
jnp
mov
dec
adc
js
and
iret
in
in
aas
push
adc
jmpw
in
xor
loope
out
push
movsb
xchg
data16
testb
ss
loope
iret
xor
xchg
test
popa
cmp
mov
xchg
mov
shll
arpl
sub
xchg
cld
cli
adc
pop
popa
aas
fs
sub
pop
int3
ja
xor
mov
and
xor
jp
and
cmp
es
add
es
cltd
js
mov
test
jecxz
xchg
push
xor
shrl
ret
add
xorl
loopne
push
jp
in
imul
decb
sbb
daa
fdivrp
jbe
and
pop
insl
cmp
push
adc
imul
rolb
insl
cmp
in
inc
cltd
xchg
or
aad
cmpsb
jge
scas
inc
dec
push
mov
xor
push
dec
clc
dec
mov
xor
push
lds
xchg
jge
lret
imul
xorb
stos
ficoml
je
dec
lcall
clc
les
leave
movsb
xchg
xchg
adc
popa
xchg
or
mov
icebp
rcrb
test
sub
jbe
xor
popa
nop
mov
inc
sub
dec
xchg
ffree
fmuls
js
or
ret
outsl
cmc
mov
xor
mov
xor
loopne
push
xchg
hlt
imul
sti
je
mov
push
insb
xchg
popf
aam
add
add
sub
mov
scas
cmpb
fbld
inc
dec
xor
lea
outsb
hlt
aaa
les
xlat
jmp
add
jmp
ret
add
stos
clc
into
loope
push
lods
aam
movl
and
pop
mov
loope
lock
dec
cmp
sub
mov
scas
sarb
aaa
push
mov
mov
and
je
sub
test
push
pusha
loopne
ljmp
pop
and
xchg
loopne
sbb
arpl
add
jne
pushf
addr16
sahf
das
mov
das
insb
dec
mov
out
xchg
cmp
insb
aas
mov
cmp
loopne
mov
xor
shrl
out
sub
and
xchg
dec
adc
orb
test
sub
and
cmpsb
push
loopne
cmp
adc
scas
test
jb
repnz
ja
fs
mov
push
pop
enter
push
jl
cmpsl
loopne
clc
or
inc
stc
in
cmpsb
gs
jno
fnstenv
pop
jle
out
push
incb
xor
cmp
mov
fstpt
icebp
dec
fidivs
fistl
loopne
adc
inc
cmp
scas
mov
pop
dec
inc
test
js
mov
ret
xor
push
mov
lea
sub
imul
sbb
and
cld
rol
fs
ror
arpl
xor
ja
adc
bound
imul
push
pop
out
push
jl
pop
pop
adc
cld
lds
or
push
rolb
mov
lods
fwait
push
adc
sbb
xor
push
pushf
adc
sbb
sub
aam
and
xlat
dec
popa
sti
leave
cmp
jecxz
mov
stc
sbbb
dec
jl
sub
push
push
test
jecxz
clc
loop
cltd
jecxz
ja
scas
repnz
fldenv
mov
sbb
push
arpl
or
movsl
fstl
sub
push
dec
cmp
icebp
adc
out
jmp
add
cmp
mov
loop
xor
dec
cmp
ret
in
or
pop
dec
enter
push
cmp
add
lcall
jns
fs
loopne
mov
scas
push
popa
stos
leave
cmpsl
pop
xchg
cmp
lret
bound
aas
pop
call
subl
jmp
int3
jle
sub
rorl
pop
xchg
cmp
movsl
mov
add
inc
stos
pop
or
cli
sbb
push
scas
push
pop
sbbl
cmp
fisubrl
icebp
xchg
stc
jno
mov
aaa
lods
stos
popf
and
data16
inc
cmpsl
cmp
daa
sub
popa
int3
fwait
fwait
int
cmp
js
cmpsb
stos
pop
xor
xor
adc
mov
test
rcl
add
shll
mov
ret
fisttps
imul
aad
mov
sub
jno
xor
aad
rol
add
jmp
int3
push
mov
dec
jmp
scas
test
mov
or
out
mov
enter
push
lret
mov
cmp
outsl
mov
push
jne
aam
in
sub
dec
jb
jns
mov
xor
jo
adc
cmpsb
jb
ret
jle
sbbb
ret
dec
push
sub
popa
dec
outsb
sbb
xchg
shl
xorb
out
add
in
or
sbb
jns
sub
sub
xchg
or
mov
add
std
ljmp
adc
shlb
xchg
mov
fidivrs
push
sarb
into
js
sub
fs
in
xor
dec
sarl
cmpsl
pop
clc
jmp
ja
arpl
mov
xchg
fstl
out
pop
aaa
cld
inc
adc
or
push
fdivl
push
addr16
out
pop
pop
xor
mov
push
mov
jmp
or
nop
mov
mov
jno
dec
mov
aad
nopl
stos
test
jo
mov
fldt
jbe
jl
out
inc
bound
mov
jmp
pop
fisubl
test
sbb
mov
mov
ficoms
add
imul
movsb
mov
lcall
rorb
sbb
inc
ret
mov
sub
jmp
fmuls
xchg
sub
mov
jbe
mov
pop
mov
insl
sbb
sub
adc
sub
gs
repz
and
cmp
xchg
aas
rolb
fdivr
stc
aad
xor
popf
rcrb
push
pop
cwtl
in
xor
hlt
fs
in
shld
push
ljmp
imul
xchg
pop
dec
xchg
sbb
lahf
adc
scas
cmp
mov
cli
in
and
std
dec
in
push
in
lcall
loope
enter
sub
testl
rorl
rclb
xor
pop
inc
int
dec
fdivr
adc
add
sbb
enter
mov
jb
sbb
or
push
adc
pushf
sub
cmpsb
mov
cld
xor
mov
ret
pusha
mov
xor
movsb
cmp
flds
cmp
or
nop
and
or
sarb
imulb
test
daa
cwtl
pop
xchg
inc
lods
loope
clc
pop
sbb
pop
cmp
xor
ja
inc
loope
xor
scas
xor
push
rcrl
cld
inc
mov
adc
inc
push
sub
cmp
rorl
xchg
das
xchg
mov
adc
nop
inc
repz
ret
call
pop
scas
in
push
cmp
xor
cld
fdivrl
pop
loop
stc
mov
cld
xchg
mov
cltd
and
dec
into
adc
icebp
ret
cld
sbb
adc
lret
xchg
fincstp
and
adc
sbb
inc
dec
inc
out
mov
call
imul
sub
mov
ret
jae
test
add
sahf
in
cmpsl
mov
push
lret
cltd
pusha
push
dec
and
add
push
mov
sti
aam
cmp
dec
ret
adc
sbb
pop
pop
cli
enter
sbb
lcall
mov
lods
enter
popa
gs
mov
xor
ja
adc
ja
out
inc
push
nop
push
cwtl
sarl
push
cmp
pop
insb
cltd
out
sub
inc
xor
pop
or
and
or
fidivl
cld
loop
mov
outsb
mov
add
repnz
mov
scas
cld
scas
shll
mov
fnsave
or
divl
fcmovnbe
pop
je
ds
xchg
dec
pop
xchg
dec
clc
sahf
push
leave
das
adc
popa
sbbl
hlt
jo
xchg
pop
xor
push
lods
ror
mov
lods
xor
push
stos
and
and
push
int3
pop
jmp
xchg
sbb
bound
shl
mov
add
xchg
lock
popf
sub
or
jmp
popa
jne
lods
test
push
push
pop
iret
push
jl
mov
imul
cmp
cmp
stos
push
push
lcall
divb
or
icebp
inc
push
add
adc
shrd
lods
rolb
stos
and
stos
roll
out
mov
lret
and
jle
outsl
sub
subb
mov
sbb
dec
movsl
or
test
pop
hlt
cld
mov
adc
jge
jnp
xor
aaa
negb
bound
mov
sub
dec
in
repnz
inc
jp
scas
mov
sbb
and
inc
adc
outsl
sbb
lods
pop
sahf
aas
and
xchg
jbe
pop
pop
pop
fwait
jge
dec
xchg
cmp
cld
scas
sub
jecxz
mov
mov
imul
dec
fwait
push
jmp
xor
pop
bound
mov
xchg
mov
xchg
sub
xchg
jne
inc
in
sub
pop
mov
ret
loopew
dec
xchg
xchg
addl
nop
hlt
mov
xlat
call
push
mov
lahf
fs
jl
outsb
xchg
gs
les
rclb
sbb
mov
imul
sub
pop
xor
mov
std
mov
jne
cmp
test
adc
sub
rolb
sub
mov
sub
xchg
gs
add
xchg
lods
mov
dec
loope
std
sub
push
adc
ds
popf
xor
and
mov
push
sub
lods
divb
mov
das
es
movsb
movsl
shlb
imul
sbb
jno
dec
es
sbb
ljmp
lret
sti
out
mov
enter
sti
pop
xor
sar
jo
in
rolb
imul
xor
xorl
push
sbb
jno
and
mov
push
sbb
inc
jmp
mov
andb
cmc
clc
das
bound
mov
outsl
fwait
cs
aas
lret
mulb
push
sahf
movl
jnp
xchg
mov
test
xchg
inc
sub
test
mov
xor
adc
pop
or
dec
dec
cs
insl
mov
inc
movsb
push
sti
ror
je
ja
gs
xchg
jne
inc
loop
enter
adc
ret
and
dec
pop
dec
cmp
xchg
and
xchg
pop
adc
xchg
or
and
pop
imulb
jge
mov
lods
and
jae
or
xchg
ja
pop
loope
adc
pop
jbe
in
xor
outsl
xchg
lahf
int
cwtl
or
call
mov
sub
push
shlb
mov
pushf
push
pusha
pop
mov
sub
push
pop
shl
insb
or
push
mov
je
pop
les
pushf
je
insl
addr16
lahf
add
insl
rolb
jg
adc
sbb
pushf
push
mov
mov
sbb
pop
push
cmp
cld
pop
mov
test
sub
pushl
inc
into
dec
andb
push
sbb
sbb
cmc
mov
add
pop
pushf
or
scas
xlat
sub
ret
pop
push
jl
test
sti
inc
or
mov
enter
in
lahf
loop
or
push
add
mov
jno
fucomip
leave
movsb
xchg
popf
xchg
and
cmpl
cmp
jns
es
fdivrp
xor
or
xor
aad
pop
cmp
dec
pusha
fnstsw
mov
sub
sub
push
out
dec
insb
enter
pop
dec
xchg
int3
mov
rcr
lds
pop
dec
in
pop
out
xchg
pop
xchg
xor
imul
xchg
sub
fwait
sub
dec
mov
iret
aaa
aas
stos
push
push
test
dec
mov
xor
add
pop
bound
sarl
lods
push
pop
std
shr
dec
mov
jno
pop
xchg
adc
call
in
adc
add
push
lea
out
lods
cltd
data16
mov
dec
jnp
aaa
inc
fs
test
pop
pop
and
repz
leave
mov
cltd
pusha
pusha
sbb
xor
or
daa
xor
aam
dec
jmp
mov
addr16
mov
jecxz
mov
sub
cli
mov
dec
jecxz
arpl
andl
jb
mov
pop
enter
or
movsb
in
push
movsb
loop
mov
sbb
push
mov
icebp
loope
loope
add
xor
addb
imul
clc
and
loope
gs
xchg
std
cltd
pushf
lds
fadd
dec
ret
push
cwtl
out
and
and
mov
sbb
xchg
in
fstpt
test
lods
cltd
xor
mov
and
jo
xchg
stos
sbb
orl
dec
push
sub
sbb
push
mov
int
cmp
std
divl
das
mov
ret
bound
pop
dec
notl
xor
sub
sub
test
xchg
into
dec
cmp
jl
xchg
test
sub
rorl
out
clc
add
out
scas
sbb
push
les
mov
addr16
xlat
pop
push
daa
cmp
lea
inc
icebp
test
inc
arpl
inc
enter
call
inc
lods
mov
push
push
adc
cmpl
stc
dec
je
lods
pushf
inc
push
out
movsl
cmpsl
sbb
addr16
sbb
mov
pop
adc
mov
jge
dec
and
pop
inc
cmp
inc
or
jae
notb
test
add
pop
adc
lock
test
inc
jl
call
xchg
mov
es
sub
mov
fsubr
sahf
sarb
leave
push
push
push
push
sbb
aaa
hlt
test
xchg
sbb
or
pop
inc
cmp
cmp
xor
aad
imul
adc
sarl
fcomps
jle
or
scas
and
int
dec
into
mov
test
adc
cli
ret
insb
cld
sub
xchg
dec
mov
jno
cmpsl
push
jle
inc
ret
dec
sahf
rorl
fiadds
stos
xchg
xchg
mov
xchg
push
dec
jns
mov
sub
cmc
leave
sub
pop
mov
sahf
ja
cs
out
push
mov
in
inc
pop
cwtl
test
out
xchg
daa
cmp
jns
jge
adc
ret
push
sbb
push
sti
imul
inc
jb
jmp
rol
cmp
int
je
bound
sbb
adc
cmp
inc
ret
in
pop
les
cmp
add
sub
xchg
xor
enter
sub
jmp
mov
pop
test
adc
jns
shll
ja
mov
adc
cmp
scas
cli
testb
add
inc
stc
loopne
push
mov
lods
mov
jp
mov
stos
dec
loop
ret
mov
arpl
mov
data16
push
std
decb
outsl
inc
roll
jl
aaa
iret
dec
dec
inc
idivl
adc
or
cmpsl
adc
sub
divl
pushl
aaa
shll
lods
mov
jle
fcoms
and
pop
inc
cltd
jl
stos
incb
push
cwtl
pop
movsb
jns
cmpsl
sti
dec
pop
or
sbb
rolb
sbb
in
jbe
push
pop
and
es
daa
in
ljmp
cmp
stc
inc
jl
in
jbe
mov
mov
mov
rolb
ret
aam
leave
and
add
aad
leave
repz
push
lret
inc
test
dec
adc
inc
xlat
sbb
clc
push
inc
inc
ss
popf
dec
xchg
shll
pop
push
jnp
data16
mov
xlat
mov
inc
sbb
ljmp
mov
sbb
mov
imul
stos
or
stos
push
loopne
repnz
bound
adc
sub
out
mov
mov
jno
das
out
xorl
hlt
cwtl
test
cmp
movsl
lods
push
push
fadd
mov
inc
je
stos
sub
negl
xor
cld
dec
jmp
pusha
jle
add
adc
jne
mov
mov
cmc
xor
mov
inc
dec
or
dec
mov
cmpsb
fwait
push
lods
mov
cmp
mov
loope
cmp
aaa
mov
dec
sub
sbb
sbb
movsb
fimuls
fmulp
loope
out
cmpsl
dec
clc
scas
aam
push
mov
pop
cmp
push
mov
or
flds
dec
insl
into
pushf
xlat
in
inc
out
xor
mov
enter
jmp
mov
loope
fcmovnbe
fwait
sub
ret
ljmp
xchg
inc
jge
cmc
sbb
fmuls
cmpsl
xor
pop
add
test
incl
mov
int
pushf
cmp
cwtl
pusha
mov
loope
fisubl
test
fs
adc
push
popf
add
iret
enter
out
adc
lret
add
loopne
loop
inc
pop
dec
loope
imul
mov
add
push
outsb
pop
mov
fistps
mov
xchg
and
outsb
or
inc
mov
lods
jae
fwait
mov
cs
jne
outsl
jne
and
adcb
lds
mov
repz
filds
addr16
push
aam
add
pop
xor
out
push
jns
les
shlb
sti
sarl
mov
xor
mov
sbb
out
idivl
dec
test
dec
mov
cmpsb
push
sarl
mov
cmp
les
inc
aaa
jle
jbe
mov
pop
rclb
shll
lret
jo
and
inc
push
lea
mov
stc
dec
wbinvd
arpl
inc
xor
jmp
sub
mov
out
lds
and
inc
movsl
xchg
aad
mov
lods
pop
test
loope
and
mov
cmpsl
xchg
pop
xchg
jle
dec
mov
or
cmp
or
test
out
mov
mov
add
sub
xlat
in
adc
pop
mov
adc
jmp
cs
nop
lods
xor
int3
push
test
push
xchg
cwtl
iret
push
jo
out
fisubrl
dec
sahf
add
cmp
arpl
popf
in
scas
ret
cmp
jno
inc
pusha
pop
mov
rorb
push
add
add
or
loopne
sub
push
jle
insb
sub
mov
pop
mov
ljmp
adc
and
and
iret
imul
adc
push
fisttpll
fisubl
pop
push
push
sahf
out
scas
int3
jge
bound
inc
dec
or
call
sbb
inc
fdivrs
or
mov
das
push
cli
sbb
xor
sbb
mov
nop
sahf
rcl
bnd
in
xchg
pop
aas
js
push
out
xchg
in
pop
lret
xchg
sbb
sbb
jno
loope
in
xchg
iret
fisubrs
test
testl
sub
sub
mov
bound
mov
push
cmp
jp
sub
mov
xchg
inc
lods
mov
sahf
sbb
dec
cmp
mov
ds
lock
and
leave
loop
roll
pop
rorl
xchg
dec
sti
xchg
sbb
popa
or
lret
or
and
lods
jmp
fwait
jbe
outsb
cld
inc
cmp
sti
sub
inc
movb
cmp
mov
stc
push
ret
rcrl
xchg
ffree
add
and
jp
fimuls
xor
mov
sub
xchg
cmp
cmp
xchg
xor
mov
adc
in
das
and
jnp
or
in
mov
mov
inc
repz
add
dec
test
push
repnz
add
arpl
sbb
arpl
mov
xchg
into
int3
mov
or
gs
testl
mov
pop
jb
fs
or
dec
dec
movsb
add
jecxz
fistpl
add
outsl
pop
jae
xor
and
adc
mov
mov
rolb
and
shrl
std
ljmp
mov
lods
filds
dec
mov
lea
scas
push
imul
jl
ret
push
jae
dec
in
sub
adc
or
pop
out
clc
aas
jae
loope
sub
mov
dec
sti
push
andl
mov
repnz
daa
je
shll
ror
mov
push
jb
popa
sub
xchg
ds
lock
add
sbb
add
lret
or
out
dec
int3
icebp
inc
ljmp
mov
jge
aas
loop
adc
add
andl
pop
push
lret
dec
fisttpl
mov
ljmp
and
sbb
data16
add
add
add
pop
adc
push
xorb
scas
adc
xchg
xor
xchg
inc
xchg
cmpsl
stos
gs
mov
mov
or
push
push
or
and
push
sub
dec
dec
mov
cmpsl
mov
addr16
jbe
or
push
pusha
leave
popf
mov
and
mov
loop
enter
popf
dec
sub
mov
imul
inc
mov
dec
inc
stos
cmp
icebp
js
pop
lret
and
js
push
jl
into
cmp
or
mov
push
sbb
dec
mov
lret
mov
cmp
ret
sub
dec
lea
out
pop
jg
push
sub
mov
icebp
in
jmp
mov
popa
pop
dec
rcll
or
cmp
cmp
pop
add
push
adc
add
mov
mov
mov
and
push
out
jg
aas
push
xor
sahf
cmp
ds
adc
jno
pop
push
or
xchg
orb
adc
stc
rolb
mov
mov
push
mov
fdivp
sub
push
and
in
call
cmpsl
dec
mov
mov
or
stos
out
pusha
adc
mov
mov
sub
fwait
test
fistps
pop
dec
mov
pop
cld
jae
sbb
aad
xor
ja
ss
sbb
xor
ror
mov
dec
jmp
push
jp
xchg
or
inc
es
adc
mov
test
mov
lock
cmp
out
pop
sbb
push
xor
ficompl
dec
popa
bound
test
or
xchg
inc
ss
and
jae
xchg
inc
cmpsl
mov
subl
fs
pop
ds
mov
comiss
lret
leave
mov
movsb
insb
inc
adc
and
push
scas
and
xor
loop
cmpsl
stc
shlb
fiadds
lahf
ja
scas
aaa
test
cmp
aam
nop
sub
mov
scas
icebp
test
in
sar
test
jg
std
std
pop
jno
pop
dec
add
movb
push
mov
jnp
rorl
add
mov
dec
dec
mov
cmp
sbb
insl
stos
je
xchg
sbb
cmc
pop
ds
xor
mov
movl
mov
icebp
push
aam
adc
rorb
mov
mov
call
pop
aaa
jmp
push
mov
es
inc
sahf
pop
cmc
push
clc
inc
mov
aaa
pop
jmp
std
clc
mov
pop
and
ret
fs
xchg
fldenv
or
push
mov
sbb
stos
inc
push
into
arpl
mov
cmp
lods
fwait
pop
test
dec
push
add
decl
pusha
cld
fyl2xp1
cmp
sahf
iret
dec
push
addl
xchg
faddl
add
lds
outsb
jbe
dec
std
insb
inc
push
adc
or
enter
adc
cmp
mov
fistpll
orl
dec
push
cli
mov
cmpsb
mov
sbb
mov
sbb
ret
push
inc
aas
outsb
dec
xor
bound
inc
rcrl
xorl
decb
xor
ljmp
dec
adc
jmp
icebp
js
jmp
dec
in
jo
aas
scas
lcall
scas
call
mov
ret
push
pop
shl
sbb
adc
insb
inc
aad
idivl
sub
movsl
stos
pop
mov
aaa
and
lcall
int3
inc
add
je
mov
in
push
bound
sbb
mov
cmp
mov
fnstsw
add
in
stc
fyl2xp1
out
inc
bound
lods
jbe
lret
addr16
inc
adc
push
jmp
loope
push
ss
movsl
sbb
lock
aas
pop
and
out
lods
push
push
repnz
sarl
mov
gs
loopne
fistl
sahf
lret
gs
mov
push
jge
loope
xchg
push
or
mov
cmp
nop
pop
inc
lcall
aaa
lret
cmp
adc
push
xor
inc
je
lock
loope
fadd
test
fs
and
int3
jb
adc
ja
and
pop
test
sbb
mov
mov
mov
mov
arpl
add
daa
int
adc
mov
cmp
je
xchg
push
sahf
and
aaa
sub
pop
cmp
rclb
cli
ljmp
jae
mov
xlat
ss
rcll
and
ret
dec
andb
pop
data16
lds
jbe
xchg
ret
test
mov
sbb
xor
inc
jg
pop
pop
add
fsts
repnz
sub
mov
xchg
push
mov
xchg
cwtl
inc
or
and
outsb
mov
cltd
pop
add
push
je
test
mov
sbb
sub
into
cmp
mov
lds
mov
out
jnp
add
loope
rcrb
jge
lds
sbb
fimull
leave
inc
xchg
mov
ss
fwait
cmp
aam
sbb
test
jg
cmpb
clc
insb
rcll
in
dec
scas
xor
jg
push
push
popa
loop
flds
dec
icebp
loopne
lahf
pop
scas
jno
test
jns
nop
gs
push
and
loope
pop
stc
stos
mov
test
sub
movsl
push
pop
mov
inc
jae
sub
insb
xchg
dec
cld
popf
or
dec
mov
pop
fwait
test
cld
pop
arpl
lcall
test
cld
mov
mov
xchg
lea
stos
jns
cmp
push
jg
test
inc
bound
jns
pop
adc
add
lea
dec
push
push
stc
push
enter
std
inc
outsl
loope
cmpl
enter
lea
pop
movsb
in
push
lea
adc
dec
jle
mov
jno
pop
in
repz
push
and
mov
aas
add
mov
idivl
loope
fstpl
fiadds
sbb
insl
cmp
sub
out
xchg
cmp
mov
pusha
arpl
jae
mov
sub
frstor
jno
popa
cmp
jmp
pop
icebp
insl
pop
arpl
filds
cmp
cmp
add
mov
or
hlt
jmp
jmp
mov
ja
leave
mov
inc
push
and
cwtl
pusha
ljmp
lds
lcall
push
xor
mov
loope
cltd
fcomps
pop
gs
js
xlat
mov
mov
addr16
jle
dec
imul
fidivrs
nop
mov
pop
in
std
xchg
push
fldz
orb
push
dec
jne
mov
or
and
add
xchg
add
test
mov
paddusw
xor
sub
inc
sbb
test
ficoms
dec
mov
out
insl
dec
popl
sahf
xor
out
adc
scas
lret
cmp
out
mov
cmp
jnp
add
es
mov
enter
adcb
push
xchg
adc
mov
dec
gs
xchg
adc
fnsave
and
movsl
into
dec
cli
inc
enter
add
cmp
cmp
ss
rorb
push
jne
mov
lahf
jle
mov
in
and
int
ljmp
mov
mov
xchg
add
ficoml
push
filds
xchg
mov
lahf
int
daa
in
cmpb
mov
inc
test
aad
dec
mov
mov
sbb
stos
sbb
xor
pop
sti
push
mov
in
or
add
pop
xorl
cmp
loope
xor
js
xchg
pop
push
adc
popa
sub
mov
push
dec
cmp
movsl
inc
sbb
mov
sbb
and
cmp
add
nop
xchg
movsb
imul
adc
push
popa
outsb
ljmpw
popa
test
pushf
pushf
aam
mov
lock
pop
test
and
mov
es
jo
fnsave
mov
pop
das
fistpll
test
adc
sarb
mov
inc
dec
shl
dec
in
outsl
sbb
cld
ds
cltd
pavgw
jmp
pop
add
mov
leave
jbe
popa
popf
daa
sti
das
loopne
into
mov
or
xchg
cmp
cld
outsl
fisttpll
in
dec
add
arpl
fwait
adc
cmpl
out
test
inc
fnsave
pop
xlat
mov
jae
add
jg,pt
daa
hlt
mov
sbb
repnz
cmpsl
jge
xchg
sbb
or
inc
sub
insb
xchg
mov
pop
iret
iret
sub
sbb
int3
out
cmp
ret
xchg
movsl
daa
cmpsb
test
or
sub
inc
pop
aam
push
push
test
sbb
add
pop
sub
fisubs
jne
into
lods
mov
sbb
mov
xor
dec
or
or
sbb
daa
inc
dec
push
mov
jl
lock
pop
scas
jae
loopne
ljmp
rolb
aaa
push
cmp
xchg
mov
aaa
aam
pusha
movsl
mov
dec
mov
aaa
dec
mov
inc
push
out
pop
pop
pop
inc
and
je
gs
filds
xlat
mov
pop
mov
jne
and
inc
mov
mov
test
out
or
cmpsl
jo
inc
pop
nop
pushf
icebp
jg
insl
adc
gs
xchg
jo
pop
dec
jg
mov
sub
and
inc
aam
pop
adc
xor
mov
cmp
or
mov
jp
out
adc
gs
pop
xor
fwait
push
mov
lea
sti
push
xchg
mov
loop
add
mov
hlt
daa
mov
aas
hlt
pop
sub
leave
gs
stos
cmpsl
int
jae
sbb
shr
mov
jne
cmp
ficomps
cmc
int3
stos
loope
mov
mov
cmp
add
xchg
xor
lahf
cmovs
int
pop
xor
pop
gs
loopne
test
fdivrs
xor
sbb
dec
imul
mov
add
push
popf
lea
clc
fisubs
jne
lret
shl
imull
cmpb
push
lret
jecxz
adc
or
arpl
pop
test
xchg
push
mov
popa
call
enter
mov
dec
daa
xor
mov
or
movsl
push
fildll
out
enter
arpl
mov
in
pop
push
dec
dec
mov
mov
mov
dec
cld
adc
cld
mov
fs
out
in
mov
jecxz
jmp
loopne
add
jp
orl
xor
insb
add
cmp
xchg
scas
xchg
jle
out
adc
mov
add
aaa
push
stos
cmp
aas
les
mov
js
hlt
dec
inc
in
push
jb
pushf
fdivr
jg
mov
dec
cmpsl
mov
push
sub
or
int3
pop
cwtl
jecxz
inc
clc
push
adc
ss
sbb
cltd
test
xchg
arpl
fnstsw
int
adc
cmpsb
push
xor
aas
mov
dec
pop
push
cmp
mov
gs
sub
pop
adc
jmp
leave
sbb
outsb
push
push
adcl
test
jb
inc
or
jns
das
mov
xchg
jecxz
push
leave
icebp
mov
adc
mov
pushf
mov
cmp
lcall
mov
xchg
in
xchg
nop
into
mov
popf
loopne
inc
je
cmpsb
sbbl
mov
mov
lods
call
testb
jmp
and
inc
sbb
mov
adcb
stos
cmp
pop
xchg
jno
or
jmp
mov
sbb
push
aad
mov
ficompl
inc
pushf
int
ret
mov
adc
add
lods
or
arpl
cmp
xor
addr16
xchg
scas
cmp
test
sbb
mov
cli
xor
push
xchg
or
test
repnz
dec
addl
or
test
incb
cmc
in
lods
or
mov
xchg
dec
aam
cmpsl
pop
shl
lret
mov
ret
push
arpl
enter
popa
xor
xlat
es
sub
negb
les
inc
daa
push
mov
dec
cmp
push
inc
ljmp
lcall
in
mov
mov
fwait
dec
and
add
adcb
inc
pop
cmp
adc
iret
negb
leave
or
xchg
test
sti
jge
add
mov
std
es
xchg
xchg
sub
push
imulb
lea
lahf
jg
std
or
pusha
lods
jp
dec
push
mov
mov
ds
scas
sub
ficoms
int
fimull
pop
pop
into
enter
sbb
sbb
loop
push
or
and
jmp
and
jbe
push
or
cmpsl
scas
lds
in
shll
cwtl
cmp
stos
cmp
sub
mov
cmc
addb
lcall
lcall
pop
das
lret
aam
jp
cmp
test
out
rcll
leave
js
pushf
int3
dec
addr16
pop
pop
int3
in
jnp
jnp
pusha
scas
ss
mov
jnp
outsl
out
xor
arpl
mov
mov
adc
push
addr16
int3
inc
dec
lahf
xor
cltd
mov
orb
add
icebp
mov
rcrl
out
xor
add
mov
ljmp
push
fcomp
xchg
repz
adc
test
test
pushf
test
push
pop
jb
mov
in
pop
mov
les
push
push
fwait
lret
movsb
data16
and
xchg
dec
and
in
xchg
jmp
jbe
jo
fs
cwtl
sbb
jbe
sub
ret
cmpsb
jb
lds
sub
hlt
pop
lods
scas
jns
icebp
mov
rorb
mov
movl
dec
dec
inc
out
xchg
xchg
or
push
push
out
test
dec
cli
mov
xchg
mov
xchg
cld
sbb
and
and
dec
and
push
sub
jecxz
mov
ds
push
push
mov
pop
mov
icebp
lds
cs
insb
lahf
cmp
mov
xchg
imul
mov
data16
imul
mov
sub
addr16
aas
ret
fcoms
or
pop
dec
add
add
sub
je
pop
mov
fsts
cmp
aam
call
cmp
add
mov
adc
or
and
mov
cmp
jle
sub
mov
pop
inc
dec
imul
add
loop
xor
mov
iret
popf
lcall
push
shrl
aad
lods
jmp
mov
lock
fcmovb
loopne
dec
movsl
push
jnp
in
loop
mov
pop
adc
aas
mov
push
cmp
cld
pop
mov
cmp
push
test
mov
outsb
mov
scas
xlat
xlat
jl
sbb
cli
fs
mov
sbb
outsb
mov
adc
sbb
add
enter
xor
pop
in
inc
xchg
mov
inc
lcall
adc
lods
and
cli
mov
leave
mov
call
pop
test
mov
sub
lods
pop
xor
insl
sbb
pop
jbe
sbb
imul
or
mulb
outsl
cmp
rorb
jle
push
scas
adc
scas
es
int
adc
jge
xor
movsl
add
test
jle
pushf
cmp
cld
xor
add
or
test
cltd
and
out
mov
aad
dec
or
jl
and
int
leave
jle
mov
cmpsl
jnp
imul
and
and
cmp
rorl
adc
push
fbstp
pop
xlat
popf
and
cmc
sbb
xchg
pusha
add
xor
xchg
mov
cmp
pop
frstor
mov
std
xor
mov
xchg
popa
mov
and
sub
cmp
jne
in
push
pushf
pop
mov
cmpsl
lret
add
sahf
push
int
inc
inc
sbb
loope
sub
lock
rcrl
jmp
decb
cmc
sahf
dec
inc
and
cmp
rorb
jge
sbb
dec
das
xor
pop
or
add
push
fstpl
ret
push
notl
lahf
mov
cld
aaa
imul
mov
or
jmp
mov
xchg
jne
mov
jae
out
lret
add
dec
lods
sbb
and
enter
das
fbstp
jns
in
cmp
cmpsb
stos
enter
cltd
hlt
and
shll
sub
clc
adc
iret
test
cmp
mov
push
add
or
lret
dec
inc
sbb
mov
xchg
or
ljmp
aad
xchg
sub
dec
out
mov
jo
mov
stos
imul
mov
mov
fidivl
fdivs
or
cmp
xor
imul
mov
cmp
scas
xchg
adc
or
mov
pop
loopne
mov
mov
xlat
addr16
xor
cmp
out
sub
or
ja
dec
sbb
xor
in
int
repz
fsubr
push
movsl
push
pushf
adc
inc
push
adc
ds
xchg
ja
loope
mov
xchg
leave
adc
fsubrl
imul
rcll
inc
or
iret
sub
jno
add
int3
cmc
fisttps
dec
ja
les
jp
dec
cltd
pop
add
fsubp
cmpb
iret
into
push
and
push
pushf
mov
pop
push
dec
scas
sbb
scas
sub
stc
mov
mov
dec
dec
enter
xchg
push
jmp
jecxz
fildll
mov
popf
dec
push
inc
and
pushf
out
hlt
aas
and
mov
cmp
in
lcall
rorb
icebp
xor
inc
stos
arpl
xchg
lret
imul
fdiv
stos
mov
mov
push
mov
adc
shlb
pop
dec
mov
ret
jo
pusha
jge
fsubrl
adc
outsl
comiss
push
daa
cmp
clc
sub
jg
in
sub
mov
push
scas
icebp
mul
repz
and
or
test
xor
cld
movsl
mov
cmp
fdivl
cwtl
jg
jecxz
sub
fstp
mov
mov
adc
dec
lods
push
mov
adc
pop
icebp
lret
test
rcll
pushf
ss
lret
subb
sbb
cmp
pop
shlb
mov
cmc
icebp
outsb
ljmp
push
jb
std
sarl
out
test
mov
jbe
iret
add
insb
mov
pop
mov
jl
fcoms
mov
ja
pop
or
mov
adc
sbb
into
in
mov
mov
movsl
nop
inc
push
adc
mov
xchg
insl
adc
jae
jb
cmp
jbe
and
bound
ljmp
clc
fisubl
dec
inc
popa
jge
je
and
je
mov
sub
test
dec
xlat
adc
loope
frstor
hlt
ss
lock
in
mov
jmp
jnp
and
sbb
test
leave
jmp
gs
int3
fnstenv
add
js
adc
lds
dec
push
shll
inc
add
insl
mov
push
xor
aam
mov
stos
cmp
sbb
push
pop
xchg
adc
jb
out
inc
mov
push
in
dec
out
push
cmc
scas
xchg
lret
mov
loop
cld
jge
scas
adc
inc
and
je
loopne
into
test
test
sbbl
xor
adc
xor
fnsave
leave
int3
iret
pop
lods
add
cmp
add
dec
adc
cmp
in
cmpsb
push
lahf
pop
dec
pop
inc
inc
daa
dec
inc
fucomp
lods
stos
mov
dec
jnp
imul
mov
pushf
mov
dec
inc
stos
xchg
add
push
pop
dec
or
negl
sbb
add
jo
cmpsb
mov
movsl
negb
cmpsl
lea
and
xchg
xchg
gs
sub
outsb
cmp
fwait
jb
sub
jnp
imul
mov
ja
test
dec
pusha
push
imul
dec
xchg
push
rcll
aaa
shlb
lds
test
sub
xor
dec
push
hlt
inc
and
add
mov
push
cmpsl
inc
adc
mov
cs
mov
jg
jbe
dec
repz
fwait
xchg
mov
push
outsl
sub
repnz
or
pop
cmpsl
std
notb
in
ljmp
xor
loop
jecxz
pop
loope
insl
sbb
clc
insl
add
in
jo
xchg
in
out
inc
add
fstp
and
push
sbb
scas
sbb
aam
clc
and
cmp
ficoms
or
sbbb
rol
mov
dec
inc
adc
or
ret
jnp
jae
cmp
dec
fldt
adc
test
pop
das
jmp
mov
js
cli
cmp
mov
daa
fiadds
push
loop
ljmp
push
mov
dec
or
xchg
out
fidivrs
dec
fdivl
out
or
jmp
test
out
repnz
xchg
lret
dec
repnz
lret
jecxz
repz
sbb
cli
xlat
mov
data16
repz
jle
shrl
data16
sub
js
sub
mov
adc
pop
pop
add
leave
aas
arpl
sti
imul
dec
je
int
hlt
shlb
xchg
stc
mov
dec
add
cwtl
fs
test
xchg
cli
mov
cmpsl
les
shll
jno
ds
jecxz
add
movsb
push
test
in
rorl
and
jbe
movsl
push
mov
es
add
inc
jp
inc
push
sub
sbb
sub
nop
scas
cmpsb
ljmp
jecxz
movsl
sub
cmp
inc
xchg
mov
mov
add
rsm
mov
mov
lcall
xor
xor
sbb
cmpsb
ror
gs
mov
cmpb
inc
testl
insb
add
jg
pop
test
cmp
add
aas
push
cs
mov
scas
add
add
je
mov
inc
dec
adc
jnp
mov
clc
fstpt
call
jmp
sbb
sbb
sbb
sub
push
xor
lea
mov
lcall
mov
xor
xlat
fldenv
push
inc
cmc
mov
pop
popa
or
xlat
dec
xchg
fdivrs
push
cmp
out
outsb
cmp
stc
jp
es
xchg
fdivl
pop
test
test
push
cmpsl
ds
push
sarb
outsb
sub
outsl
pusha
xchg
movsl
push
xchg
xor
outsb
push
les
je
xor
add
sbb
mov
mov
dec
sub
decl
hlt
rcl
addr16
ret
jne
daa
xor
cmp
inc
shll
inc
and
loop
ror
or
mov
pop
jae
lea
push
push
cwtl
pop
adc
ss
shll
and
pop
fdivrl
loope
iret
div
or
in
rorl
adc
test
cld
jmp
lret
in
sub
cmp
mov
in
test
inc
add
sahf
mov
mov
mov
sub
mov
mov
in
jmp
push
add
imul
mov
repz
ja
pop
int3
push
bound
jl
sarl
dec
xchg
inc
aaa
dec
or
ja
jecxz
jne
mov
testb
ljmp
mov
cmp
enter
jge
out
jge
pusha
or
dec
lods
sarl
xchg
aas
mov
in
xchg
hlt
push
push
aad
sbb
cmp
test
lock
mov
popf
sub
jge
xchg
and
mov
push
pop
pop
rdtsc
fsubp
mov
lea
data16
cmc
jne
imul
xchg
push
inc
imul
pusha
popl
mov
push
je
mov
and
imul
pop
loop
cmp
jmp
leave
nop
insb
pop
lds
xchg
test
xchg
pop
xchg
fadds
pop
push
je
popf
mov
push
shrb
fs
mov
das
scas
sbb
inc
cmp
in
stc
aas
testl
mov
pop
fwait
and
adc
dec
add
ds
xchg
inc
rcrl
add
mov
ljmp
and
call
sbb
imulb
sbb
arpl
and
adc
inc
repz
xor
aad
movsb
push
cmpsb
stos
jle
addl
jmp
gs
aaa
add
scas
sub
out
ret
inc
aas
test
pop
dec
xor
je
lock
aas
mov
lds
or
jnp
xor
cmp
jl
jns
adc
or
xlat
negb
jmp
pusha
ret
and
xchg
inc
push
pop
xor
ret
ror
push
inc
adc
mov
sbb
sbb
lret
push
int3
das
adc
dec
repnz
xchg
imul
shrl
sub
lods
daa
test
addr16
xchg
jno
fsubs
mov
mov
inc
lret
xlat
ret
cmpsl
das
lea
push
lret
xchg
stos
lds
in
test
mov
int
fsubrl
pusha
push
xchg
xor
sub
dec
adc
outsb
add
dec
add
cmp
iret
push
add
xlat
adc
into
lock
iret
pop
stos
mov
add
jmp
xchg
test
cld
or
repz
fstpt
test
in
lahf
adc
push
cmp
dec
clc
loopne
mov
mov
jno
adc
xchg
sbb
inc
inc
push
fwait
xchg
mov
mov
push
add
outsb
outsl
out
lret
xchg
icebp
jnp
popf
jmp
loop
lods
cmp
ret
xchg
fincstp
scas
jecxz
cmpsb
lret
pop
adcb
movsl
mov
xor
ficoms
xor
push
adc
sbb
jge
lods
pop
gs
dec
xchg
shrb
mov
sub
das
movsb
xchg
aad
push
xchg
jge
cmp
pop
add
ficompl
or
scas
dec
inc
pop
and
sbb
pop
cltd
not
out
mov
mov
push
sbb
imul
out
xchg
scas
mov
jns
lcall
sub
pop
ss
ror
or
scas
out
out
dec
cmp
bound
and
dec
jl
mov
test
mov
inc
pushl
rorb
xor
xor
push
inc
or
scas
das
stos
pop
in
into
mov
movsb
add
xlat
cmp
or
js
pop
int
mov
push
push
sbbb
cmpb
adc
sbb
mov
push
jno
rcl
ror
dec
jecxz
out
add
test
out
xchg
mov
cwtl
cs
or
mov
inc
xchg
or
jecxz
stos
not
lds
fwait
ss
inc
out
std
adc
data16
inc
lds
pop
add
shrb
mov
outsb
shll
push
xchg
sbb
jecxz
iret
imul
mov
add
jmp
rorl
jno
mov
cmovle
add
pop
lods
outsb
cmpsb
push
dec
cmpsb
addr16
dec
jle
or
push
insb
mov
mov
or
sbb
push
test
repz
sqrtps
lods
xchg
lar
dec
movlps
lea
xor
std
mov
inc
scas
sbb
pop
and
das
add
loop
in
inc
in
xor
ficoms
or
cmp
jmp
cmc
loopne
andl
bound
gs
and
dec
and
or
into
push
stos
jmp
jnp
xchg
adc
ds
jnp
bound
cmp
cs
jle
adc
inc
xor
outsb
repnz
adc
add
pop
mov
or
addr16
fstpl
mov
adc
pop
jae
repnz
push
out
in
notl
icebp
les
cmp
in
decl
cli
imul
push
jle
and
lcall
dec
pop
xchg
clc
mov
jmp
cmp
push
out
inc
add
jge
cmpsl
mov
dec
dec
loopne
jl
xor
movsb
ret
jecxz
nop
and
dec
jns
out
mov
jle
xchg
dec
mov
mov
mov
xor
cld
jno
sti
add
or
cmpsl
push
push
negl
js
lahf
int3
outsl
adc
test
pop
cmp
std
fidivrs
sarb
push
add
mov
inc
jnp
stos
inc
or
push
hlt
lds
mov
stos
xchg
cli
lcall
push
push
and
jge
mov
xor
mov
sbbb
jge
pop
cmc
xlat
gs
in
pusha
mov
and
aaa
jae
fcomps
outsb
ja
sub
aas
jp
cli
pop
and
xor
inc
cmp
or
jle
hlt
das
cmp
inc
adc
cld
flds
xchg
inc
in
jno
xchg
test
mov
ds
lret
jae
sbb
dec
mov
jle
aad
into
bound
pusha
lret
mov
outsb
sbb
pushf
jl
int3
roll
push
movsb
sub
sub
cli
fistl
jne
and
out
lea
push
pop
jge
push
lret
filds
lahf
into
jns
lds
jg
outsb
out
out
add
pop
dec
and
jle
clc
out
mov
fists
popf
loop
push
pop
dec
cmpsb
out
inc
shl
out
imul
data16
push
test
loopne
and
pop
and
mov
outsb
sbb
rcrb
lock
lods
ja
inc
test
and
lahf
xlat
xor
add
inc
sahf
cmpl
es
sub
test
xchg
jns
in
adc
daa
add
in
sbbl
jmp
add
and
shlb
cld
mov
lods
mov
sti
and
out
outsb
or
jge
std
xchg
scas
aam
and
decb
adc
es
lret
cmp
fists
movsb
jl
or
lods
mov
cld
xchg
ror
or
aad
lock
mov
inc
mov
movsb
cmpsb
dec
lods
divl
ds
fldcw
cmp
push
or
les
mul
inc
lock
mov
sarb
fwait
mov
xor
clc
data16
cmc
add
xchg
adc
testb
jge
sbb
mov
out
dec
mov
frstor
add
xor
enterw
fsubl
pop
fisubl
cmp
mov
pusha
movsl
leave
push
mov
mov
mov
push
add
int3
and
inc
popf
aaa
push
call
mov
call
xlat
or
xor
mov
sub
das
jnp
popa
jns
lods
shrl
cmpsl
out
movsl
dec
push
mov
mov
pushf
inc
out
or
dec
cmc
add
cmp
loope
scas
jbe
push
xchg
inc
inc
mov
pop
loope
cli
inc
jbe
and
cwtl
sub
aad
sub
popf
test
inc
rclb
loopne
cmpsb
mov
or
cwtl
clc
fadds
lret
and
push
int3
shll
outsl
movsb
mov
pop
xlat
inc
and
mov
fldl
pusha
mov
pop
fsubs
adc
fs
and
out
add
cli
gs
cmp
fnstcw
mov
jg
push
pop
movsl
cli
pop
loopne
jecxz
mov
outsl
andl
js
scas
pop
cmp
or
sub
aam
push
inc
pop
adc
loopne
sub
sub
mov
push
fstpt
mov
jb
leave
xchg
ror
pop
adc
cmp
xor
mov
adc
add
sub
or
or
sbb
sub
pushf
and
push
sub
fadd
aad
dec
ret
imul
sbb
lea
leave
jb
ret
inc
jnp
inc
xor
pop
jge
das
and
push
cld
stc
and
push
fdivr
adc
hlt
cmp
mov
cmpb
in
add
js
adc
xchg
jl
adc
scas
mov
jge
xor
fldl
cmp
sbb
jne
negb
dec
aad
icebp
mov
rcrb
add
sub
xor
dec
dec
mov
adc
mov
movsb
jbe
add
mov
or
inc
add
das
cwtl
xchg
sahf
movsl
xor
sbbb
arpl
inc
adc
xchg
bnd
mov
sbb
imul
or
pop
sub
sub
hlt
and
pop
push
adc
adcb
aam
sbb
pop
or
add
inc
push
sbb
push
testl
or
xor
mov
test
mov
xchg
add
adc
popa
clc
add
and
mov
test
xchg
repnz
jg
movl
imul
es
mov
push
xchg
xchg
icebp
addr16
cld
aam
sarb
fcompl
sub
or
xchg
out
cmp
mov
or
scas
hlt
jb
imulb
pop
add
cmp
pop
cmc
jle
movsb
shlb
dec
xchg
lret
lds
popf
sarb
sub
xchg
lahf
notb
mov
fidivrl
sub
push
or
faddl
dec
jbe
add
xchg
adc
inc
imul
inc
sbb
xchg
or
dec
lods
bound
dec
sbb
mov
or
mov
jno
mov
adc
ljmp
pop
adc
test
pop
call
sbb
or
cmp
fwait
int
pop
fwait
ja
jl
data16
jecxz
int
pop
dec
jno
add
inc
hlt
negb
stos
mov
add
test
mov
bound
pop
cltd
mov
outsb
into
pop
mov
inc
and
out
pusha
jg
repz
jne
movsl
das
clc
in
mov
repnz
lcall
fnstcw
and
sbb
in
insl
in
mov
cmp
push
cltd
ds
add
mov
cmp
push
pop
xlat
jmp
or
push
frstor
bound
mov
in
call
push
jg
pusha
and
jp
addr16
arpl
shll
add
ja
sbb
push
rolb
xchg
jl
sub
mov
pop
sub
or
jbe
movsb
xor
jno
insb
stc
mov
and
shr
in
clc
dec
dec
sarl
stc
repnz
mov
popa
addr16
add
mov
fcompl
std
dec
push
test
and
xor
jae
push
adc
sahf
fsts
int
and
xor
xchg
dec
mov
daa
pop
mov
push
popf
pop
dec
jle
cmp
daa
aaa
xor
mov
jns
fs
push
sbb
lret
pop
jae
lds
pusha
movb
adc
fsub
out
mov
xchg
aaa
xchg
fldcw
es
pop
insb
push
sti
cwtl
or
mov
cmpsl
xor
enter
arpl
and
outsl
mov
mov
ret
lods
cmp
lret
cld
push
lcall
out
mov
push
jl
pushf
shr
add
cs
jg
leave
imul
fsts
sub
jmp
cwtl
push
cmp
stos
dec
adc
push
les
xchg
nop
and
flds
popa
lock
mov
mov
in
in
adc
lock
test
jg
cmp
cmpb
xchg
rorl
cmp
xchg
inc
push
dec
xchg
pop
rclb
push
add
addr16
shl
in
std
or
shr
push
imul
aad
jno
das
mov
sub
fcoml
pop
sbb
push
cmp
fisttps
out
pop
fimull
jmp
arpl
dec
movsl
inc
and
push
push
sub
andl
ja
aad
fnstenv
mov
mov
push
and
shlb
and
aas
ja
movsb
jg
xchg
xor
idivb
and
fcoml
mov
pop
sbbl
xchg
cmc
xor
adc
push
pop
lods
xchg
out
movsb
fwait
push
and
ss
inc
out
inc
or
fnstcw
repz
fidivl
ret
xor
sub
sbb
cmp
cld
repnz
adc
sub
ss
xchg
mov
and
inc
xchg
mov
xor
inc
inc
xlat
sbb
jl
dec
lods
call
lea
cmp
js
push
jge
cli
enter
ret
xor
test
int3
call
pop
cld
cs
hlt
xlat
data16
fimull
cmc
jbe
pop
and
fs
in
aad
inc
je
push
jg
cmp
stc
push
pop
mov
or
fisttpll
sbb
aad
mov
push
pop
mov
xchg
inc
cltd
jns
xor
cs
cmp
jmp
mov
cs
scas
scas
fisttps
push
lahf
push
ss
cmc
shlb
outsl
jecxz
push
xor
shl
push
outsb
or
lret
mov
xor
push
std
xchg
push
lods
movb
adc
push
aad
repz
cli
dec
pop
mov
xor
xchg
ja
test
inc
mov
jnp
push
test
fs
sahf
jb
add
adc
sub
pand
filds
jl
out
rol
mov
insl
add
inc
xchg
lods
xor
mov
add
push
iret
scas
out
jp
cmp
enter
out
inc
aaa
xchg
push
js
fcmove
sti
aam
les
aad
cs
test
jmp
inc
movsl
mov
cmp
sarb
mov
mov
xchg
mov
pushf
pop
push
test
fwait
loope
mov
add
push
push
adc
sti
les
dec
stc
sbb
dec
lods
out
fisubs
in
fsub
or
or
pushf
sbb
or
xor
movsb
fld
jl
adc
dec
lahf
mov
movsb
mov
jmp
inc
int3
shll
adc
mov
cltd
test
aam
insl
jp
into
sbb
ret
dec
out
push
push
call
mov
fwait
incb
shrl
arpl
mov
in
and
adc
sub
hlt
test
outsb
mov
lret
jmp
sbb
cltd
mov
fldenv
call
inc
js
dec
in
cmpb
mov
sub
jge
inc
xor
and
cmp
add
jns
and
data16
fldt
jno
cs
hlt
aad
adc
es
push
sahf
out
ss
mov
push
or
rcrb
std
mov
pop
ds
nop
add
dec
sbb
std
lcall
jg
cmp
sbb
fmul
xchg
mov
loopne
mov
cmpsl
addb
dec
inc
and
outsb
and
pop
xor
adc
rcrb
adc
dec
sub
loope
fstp
sbb
icebp
imul
xor
fcoml
fs
das
dec
mov
test
js
scas
clc
out
lahf
jmp
cld
jecxz
aaa
xor
roll
mov
add
xor
insb
mov
inc
xor
lcall
in
pop
add
imul
cmpsb
movsb
stc
das
leave
inc
mov
mov
adc
push
jo
loope
jae
cs
xchg
out
rcl
sub
daa
ljmp
outsl
ret
popa
sub
pop
out
mov
inc
repnz
adc
sub
ljmp
pop
mov
xchg
bound
divb
push
adc
movsb
pop
adc
int
stos
ljmp
shrb
es
ret
sbb
out
out
out
add
mov
mov
mov
sub
mov
push
xchg
push
loop
loope
insb
add
jno
popa
jne
sbb
jb
insl
add
lret
aad
add
dec
dec
and
test
scas
or
fisubrs
ret
movsl
xchg
or
jae
scas
lods
in
inc
sub
mov
sbb
ljmp
jle
add
xor
insb
aaa
push
push
test
jl
xchg
sbb
pusha
stos
pop
fadds
scas
mov
cmc
outsl
pop
sbb
scas
into
ds
cs
rol
dec
lret
jp
inc
push
popf
cmpsb
or
sub
test
fcoml
les
lods
adc
xchg
jbe
pop
cmc
sbb
lods
movb
pusha
jmp
iret
aam
jecxz
and
jmp
dec
add
xlat
sbbl
or
movsb
insb
fsubl
jns
pop
jo
test
mov
xchg
cmc
shrb
xchg
xor
les
jb
rorb
inc
inc
push
dec
mov
and
cli
mov
lret
dec
or
adc
mov
inc
clc
sti
jae
add
insb
sbb
dec
mov
push
loop
or
lds
pushf
and
add
lods
int
shl
andb
cmp
mov
sti
xchg
xor
pop
xor
call
popf
sub
push
pop
sti
adc
xchg
dec
subl
jne
insb
movsl
insb
fistps
mov
push
rol
mov
or
aas
out
les
fwait
pop
daa
lahf
ljmp
add
mov
and
out
xor
imul
add
push
stos
mov
dec
je
and
jp
mov
mov
ret
cmp
iret
inc
add
sub
sbb
sbb
mov
aad
std
sti
std
or
flds
fiaddl
pusha
inc
jo
es
mov
sbbb
lea
test
xor
lea
dec
adc
movsb
fldenv
insl
lahf
enter
cmp
leave
sbb
popa
ret
add
nop
jge
and
mov
cmp
sub
mov
test
fwait
or
inc
mov
pushf
dec
out
fadd
push
inc
stos
in
clc
add
pop
or
dec
rolb
xchg
dec
xor
ficomps
inc
jae
push
jae
sarb
lds
addl
mov
mov
out
cld
mov
nop
xchg
adc
jecxz
fisttpl
push
push
decl
clc
sub
ja
dec
xchg
sub
je
mov
pop
out
pusha
cltd
mov
cli
mov
push
aas
notb
push
sti
mov
imul
sbb
stc
sbb
nop
mov
lret
adc
je
or
aam
mov
pop
ljmp
and
mov
vmovaps
lahf
lods
dec
pop
push
push
jbe
sub
adc
aas
push
add
es
scas
mov
jp
jecxz
imul
sbb
push
testb
aam
mov
mov
nop
push
add
adc
push
mov
xor
dec
mov
xlat
outsb
int3
and
fsubrs
jg
das
cmpsb
test
std
scas
cwtl
sbb
sbb
xchg
shlb
sub
xor
decb
cmp
inc
loop
push
popa
inc
add
or
aaa
or
cli
cli
in
aaa
rorb
xor
mov
jecxz
movl
out
add
rolb
sub
pusha
rcr
sub
sub
jmp
jl
int3
call
mov
stos
push
mov
push
xor
adc
fistps
pop
ret
cwtl
mov
inc
push
test
xor
lea
aad
call
cmp
insl
or
xchg
pop
dec
clc
loopne
loopne
arpl
outsl
jmp
lds
mov
call
mov
sub
xchg
ja
mov
loopne
daa
or
dec
pop
fstpt
sub
add
js
mov
push
jnp
or
gs
and
and
mov
fsubrp
addb
mov
inc
popf
repz
bound
fs
push
cmpb
mov
jecxz
mov
adc
adc
movsl
pusha
ss
inc
arpl
in
cld
adc
pop
and
jmp
sub
lahf
push
or
cwtl
or
jge
xor
jecxz
loop
fildll
mov
addr16
or
lods
pop
cmpsl
daa
cmpsb
in
fcom
jns
fwait
adc
push
mov
in
inc
mov
adc
jnp
ss
mov
pop
nop
xor
pop
cmp
jne
test
inc
jp
paddw
dec
mov
sarl
pop
hlt
test
sub
repz
mov
cmp
punpcklwd
sub
sub
push
xor
jns
sahf
pushf
pop
dec
addb
rcr
jg
dec
fs
repz
cmpb
mov
decl
into
adc
sarb
jl
and
or
xchg
push
xchg
loope
andl
xor
fsubp
test
mov
push
push
cwtl
icebp
add
cltd
cwtl
int
hlt
mov
ds
ret
sub
lds
add
cwtl
xor
sbb
xchg
mov
not
sahf
les
sbb
cld
mov
roll
adc
stc
and
xchg
jmp
sbb
shrl
fcoms
jl
add
insb
out
pop
add
in
bound
cmp
xchg
lock
mov
jmp
mov
subl
dec
std
ss
pop
add
cltd
cmp
shl
mov
jnp
lret
xor
inc
mov
and
sub
repnz
mov
movsb
sbb
mov
mov
mov
or
xchg
out
lea
jmp
sbb
jno
push
pop
mov
lods
sbb
pop
jp
insb
inc
dec
ja
xorb
mov
mov
insb
cmc
stc
imul
dec
scas
cmc
clc
fwait
outsb
pop
fsubrs
mov
mov
mov
or
inc
or
daa
insb
pushf
leave
je
mov
lret
xchg
xor
stc
std
and
cmp
mov
roll
mov
mov
jns
and
cmp
lds
lret
lret
add
rcrl
lock
scas
lods
mov
fsubs
fistl
inc
sbb
add
adc
out
leave
sub
xor
push
mov
and
jg
push
push
push
shr
jle
push
icebp
dec
mov
aaa
mov
clc
pop
add
dec
stos
push
vandps
cmp
call
xchg
scas
inc
shr
sub
inc
sub
pushf
push
ljmp
jb
xor
sbb
arpl
jle
sti
cmp
lret
mov
push
repz
repnz
mulb
xor
loopne
jbe
orl
shrb
push
movsb
in
cmp
insl
sbb
push
xchg
mov
or
cmp
or
cmp
loope
mov
daa
pop
aas
or
in
push
test
cs
mov
jmp
xchg
sbb
push
dec
and
and
out
das
jle
dec
add
in
hlt
fs
es
iret
pop
sbb
nop
shrb
or
xchg
xor
push
enter
out
inc
jae
fbld
out
cmp
mov
es
mov
and
cli
test
sbb
insb
movhlps
je
daa
idivl
imul
jg
inc
mov
fsubrl
xor
fmuls
push
sub
enter
addr16
cmovg
mov
pop
cmpsl
imul
mov
pushf
sbbb
pop
mov
int
cld
imul
push
add
adc
sub
loope
adcb
inc
fadds
mov
inc
sub
xchg
lds
jmp
sarb
mov
cld
cs
mov
cmpsb
enter
pop
pop
push
sahf
popa
dec
mov
lea
mov
sbb
out
mov
push
mov
mov
inc
inc
xchg
mov
sbb
inc
stos
mov
sub
sub
loop
mov
dec
add
insl
mov
mov
ret
sub
mov
mov
dec
mov
adc
or
dec
cmpsb
cld
jle
mov
sbb
fsubs
pop
aam
stc
call
insl
pop
clc
rorl
inc
sbb
adc
cmp
jg
daa
decb
jae
jae
aad
inc
sbb
dec
stc
jl
imul
push
ljmp
xchg
iret
incl
dec
call
dec
stos
dec
sbb
jno
pop
xor
and
ret
dec
addr16
mov
xchg
sbb
mov
adc
fimuls
sbb
fisubrs
jp
std
jae
dec
sbb
or
dec
push
dec
and
adc
out
dec
test
sbb
js
xor
sbb
test
test
inc
add
push
cmpb
jbe
mov
pop
or
cmp
adc
cmp
test
adc
pop
popf
jmp
adc
add
adc
mov
cmp
pop
ljmp
jge
push
mov
pop
cmp
cmp
popf
and
out
ljmp
and
shrl
mov
push
cmp
cmp
mov
inc
andl
adc
jo
movsl
stos
cwtl
mov
pop
pop
rolb
mov
adc
cmpsb
dec
or
and
inc
xor
push
mov
mov
xor
scas
sub
mov
ljmp
bound
or
fbstp
dec
lea
adc
lret
or
mov
les
daa
dec
add
adc
addr16
sti
loope
lcall
scas
les
addl
fnstenv
or
inc
mov
push
mov
test
imul
lahf
test
lret
negb
add
push
lods
dec
or
pop
sub
out
jecxz
ljmp
insb
push
jl
mov
dec
xor
test
sbb
pop
inc
filds
dec
out
popf
fisttps
xchg
or
nop
fwait
pushf
test
mov
js
xor
mov
aam
push
lods
mov
add
xchg
inc
das
lods
lods
js
dec
pop
cld
jp
xchg
cmpsl
das
xchg
adc
sahf
sub
imul
jae
cwtl
sbb
add
xor
mov
xchg
jnp
clc
pop
push
outsl
jnp
inc
dec
jae
call
pop
mov
into
dec
add
mov
sti
adc
scas
push
icebp
sub
adc
mov
aam
out
xlat
push
mov
cmp
add
cmp
cltd
mov
jnp
or
inc
or
rcll
jo
mov
cltd
jns
sub
mov
cmp
add
sbb
inc
fucomi
xchg
mov
pusha
test
mov
jb
out
aad
xchg
lds
repz
mov
inc
mov
fsubs
dec
mov
loope
fstl
push
pop
push
in
enter
and
mov
mov
push
sti
mov
jne
mov
xchg
or
xor
inc
jmp
cmp
outsl
jno
lret
mov
sbb
testl
fadd
fisubrs
imul
jmp
cmc
or
sahf
jno
mov
imul
fsubl
dec
pop
dec
out
in
iret
ljmp
ret
mov
inc
inc
mov
or
fists
xchg
insl
cmp
sub
in
jl
test
and
jbe
mov
arpl
popa
lods
fwait
push
fcomi
ret
mov
xchg
push
cltd
add
or
out
rolb
repnz
fdivrl
push
ljmp
or
inc
mov
adc
pop
inc
mov
push
xchg
mov
mov
inc
and
sub
fwait
test
fsqrt
int3
xlat
xchg
leave
adc
add
dec
mov
shl
std
cmp
or
les
movsl
push
adc
popf
test
inc
fdivs
mov
dec
sarb
sbb
and
lahf
push
mov
inc
sub
add
inc
add
sub
push
push
test
mulb
movsl
fs
into
or
dec
xor
sarb
mov
in
lods
sub
and
adc
cmc
dec
ljmp
sbb
imul
paddusw
daa
rclb
aaa
adc
jmp
jbe
ljmp
jg
fisubl
inc
call
xchg
aas
mov
scas
sub
inc
cmpsb
or
stos
xchg
push
das
loop
in
sub
fbstp
push
cmpsb
clc
iret
movsb
cmpsb
clc
xchg
mov
les
dec
or
push
mov
test
call
aaa
rcrb
and
mov
lods
stos
jecxz
jno
aas
or
insb
movl
insl
ss
test
test
mov
mov
lods
xchg
and
orb
cmp
std
lea
sbb
jge
push
test
sub
and
rclb
mov
and
mov
jb
repnz
jp
jb
daa
xor
xor
pop
out
lcall
adc
cmpsb
stos
in
xchg
mov
cmpsl
pmulhuw
scas
imul
movlps
aam
cld
dec
adc
sub
aas
or
inc
outsb
stos
popa
or
jg
xchg
sub
lret
jg
cmp
mov
pop
mov
lcall
pop
xor
mov
push
and
mov
shl
dec
mov
sbb
inc
mov
icebp
std
add
daa
fsubl
or
cmp
mov
push
js
iret
insl
leave
je
jae
fistps
pop
and
mov
sbb
cmpsb
sub
call
popa
or
mov
mov
mov
push
incb
jns,pn
lea
pop
ss
xor
fdivl
mov
ret
lds
int3
je
iret
cs
imul
dec
and
add
add
jns
add
ss
out
xchg
add
sbb
push
inc
lods
push
mov
mov
adc
and
pcmpeqd
dec
and
imul
jb
leave
lahf
leave
jnp
inc
adc
sbb
decl
cli
in
dec
xlat
push
pop
scas
push
repz
insl
inc
inc
orb
cmpsl
pusha
ds
cmpsl
lods
jae
movsl
dec
inc
inc
add
inc
test
cld
lds
ret
aad
sbb
lods
loopne
cmc
xchg
cmp
stos
adc
mov
movsb
cmc
imul
xor
shlb
jbe
ss
xlat
aas
xor
lods
sbb
dec
stc
cmp
pop
cld
inc
loop
xchg
stc
leave
lods
cmpsb
out
jge
xor
pop
or
sbb
shll
pusha
out
adcl
push
inc
icebp
mov
cli
addb
sbbb
xchg
jne
leave
jge
inc
es
adc
mov
add
add
push
pop
mov
out
pop
out
movb
pushf
and
jnp
pop
lret
inc
test
xchg
imul
jl
adc
icebp
xor
fstps
insl
sbb
mov
lock
mov
inc
xchg
and
or
push
lods
inc
jne
xchg
imul
es
in
mov
mov
lods
rcl
mov
add
mov
out
mov
out
filds
push
push
mov
test
insl
cwtl
and
lea
aaa
repnz
fsts
loopne
mov
repz
mov
sbb
xchg
nop
mov
cmp
adc
nop
jo
jle
xchg
fwait
insl
xchg
dec
outsb
sbb
ret
and
mov
dec
mov
jg
fidivl
out
cs
xor
jmp
mov
pop
pop
sbb
ret
nop
dec
fbstp
mov
outsb
aaa
dec
jo
rorb
jmp
cmp
pop
mov
cmpsb
std
xchg
inc
ljmp
lods
fs
adc
and
mov
jle
filds
dec
adc
push
or
imul
aad
jle
push
add
or
mov
adc
std
inc
mov
xchg
and
repnz
loopne
mov
jmp
sbb
ret
push
fxch
mov
cmp
and
add
dec
data16
mov
sub
cmp
or
sub
jmp
inc
jle
pop
add
and
int3
inc
mov
mov
cmp
adc
adc
adc
pop
inc
ljmp
pop
fisubs
sub
jg
adc
pop
inc
sbb
ljmp
in
push
inc
adc
outsb
inc
test
jmp
mov
pushf
mov
jmp
mov
and
fwait
aas
int
sbb
popf
dec
ret
mov
dec
cmp
cmpsb
cwtl
call
xchg
insb
jnp
xor
add
dec
inc
movsb
or
push
rcrl
ret
sbb
mov
popa
mov
jp
inc
mov
lods
pop
in
das
dec
mov
sti
insl
ljmp
dec
xor
pop
int3
pop
ret
cld
xchg
js
imul
out
cmc
jb
jae
sub
jmp
mov
xchg
inc
cltd
xor
xor
lret
orb
mov
inc
xlat
xchg
fidivl
sub
pop
lea
imul
and
movsb
pop
cmp
push
mov
sbb
sbb
imul
pop
mov
mov
mov
xchg
adc
xor
scas
mov
adc
mov
inc
xor
push
inc
enter
cmpsl
in
adc
scas
xor
sbbb
sub
adc
pop
cltd
adc
xchg
popf
leave
pop
sbb
les
adc
adc
cld
sub
xchg
fstpt
mov
addr16
mov
stc
add
fwait
cmp
in
das
sub
xor
out
mov
out
xchg
pop
repz
push
int
test
cwtl
fadds
pop
mov
cmp
jae
aas
cmpsl
lds
into
sub
mov
jno
jl
xchg
scas
aam
lcall
pop
xlat
scas
cmp
mov
pop
push
adc
sub
pop
push
int3
jl
stos
lea
push
divb
sub
inc
fwait
dec
or
push
xor
mov
mov
xor
movsb
push
adc
add
imul
pop
nop
loopne
mov
sbb
mov
sbb
jl
fmul
mov
pop
clc
es
outsb
xchg
push
pushf
xor
das
imul
test
cmp
add
xchg
inc
movsl
xorl
rol
pop
add
test
pop
addb
mov
inc
dec
mov
pushf
mov
neg
fiadds
xchg
push
sub
or
jg
sbb
sbbb
cs
and
mov
push
lcall
cwtl
pop
test
insb
dec
push
jbe
pop
aas
in
push
sub
syscall
subl
rcl
aaa
fdivrl
loop
add
mov
rcrb
push
mov
cli
and
and
popa
lds
ret
mov
nop
cmp
sbb
aad
js
lahf
out
frstpm(287
lahf
ss
jg
add
test
lock
mov
jnp
mov
dec
callw
scas
cmpsb
les
icebp
xchg
nop
stos
and
and
fwait
inc
mov
mov
rcrl
adc
clc
add
ds
test
out
xchg
in
cmc
in
adc
popf
push
leave
push
shll
mov
and
ret
int
out
aas
xchg
and
pop
jp
xorl
pushf
hlt
mov
mul
xor
inc
inc
sahf
in
add
pop
adcl
movsl
xor
pop
rcrb
scas
sub
lcall
movsl
outsl
popa
pop
push
hlt
pop
mov
add
cmp
mov
pop
out
fimuls
fmuls
xchg
dec
insl
pop
and
sti
icebp
sti
fs
cmp
xchg
jl
scas
mov
pop
arpl
cmp
data16
mov
sbb
mov
dec
int3
stos
or
push
data16
and
cmp
xor
push
sbb
test
int
push
jns
bound
sarb
lahf
faddl
pop
std
push
andb
add
fldt
mov
pop
into
dec
fisttps
stc
fcoms
test
jge
inc
out
out
pop
or
pop
outsb
inc
test
fiadds
cmp
or
aaa
jnp
in
loop
jbe
mov
pushf
fidivrl
jp
stos
pop
jno,pn
vphsubbw
inc
push
dec
in
stos
push
xchg
cmp
lahf
popa
mov
push
xchg
movsl
cmc
push
dec
inc
xchg
xchg
inc
pusha
mov
mov
cli
rcr
xlat
or
mov
xorl
stos
mov
ret
outsb
stos
mov
sarl
scas
icebp
push
jmp
addr16
adc
lcall
out
rcrb
push
adc
sbb
or
mov
pop
pop
lods
jg
fwait
imul
fsubs
xor
push
rorl
mov
sub
cmp
aam
cmp
mov
out
dec
jae
pop
fldt
daa
mov
or
jbe
icebp
mov
stc
out
bound
pusha
mov
enter
sub
icebp
sbb
in
rorb
pusha
fs
mov
scas
cmc
xor
lds
test
xchg
ljmp
dec
xchg
insb
fcom
dec
pop
adc
sti
xchg
pop
push
outsb
fsubr
jp
rol
or
cmpsl
scas
xlat
push
xchg
pop
outsb
and
sbb
jno
aaa
sbb
dec
jno
jle
jg
pop
outsl
inc
out
mov
in
and
addr16
xchg
testl
xorb
je
sahf
xchg
mov
push
cmp
inc
lcall
mov
test
imul
inc
js
inc
adc
sbb
jae
repz
sbb
add
sbb
and
pop
sub
inc
xor
cwtl
push
scas
bound
fs
jecxz
js
jo
mov
lods
in
or
push
repnz
inc
jne
lret
xor
mov
jecxz
xor
pop
sub
int
ficompl
scas
rcr
xchg
mov
push
xchg
mov
and
test
sbb
or
test
adc
cmc
mov
pop
push
sbb
ss
push
cmp
cmc
out
xchg
pop
mov
rorb
jl
aaa
mov
and
jle
ss
mov
in
insb
fstl
push
into
xrelease
sub
je
and
jbe
push
or
pop
pusha
lcall
dec
mov
fldl
and
test
fwait
scas
or
cltd
es
cmp
test
test
or
mov
cld
mov
cmp
out
ljmp
aam
mov
popf
mov
cmp
mov
sub
dec
push
aas
test
outsl
mov
test
int3
cli
inc
scas
mov
imul
arpl
stos
dec
mov
xlat
fwait
and
inc
dec
sub
stos
and
jns
or
pop
xor
jmp
mov
cmp
out
lcall
lods
sbb
pop
cli
mov
rorl
test
testl
lcall
shrl
mov
and
into
sbb
mov
in
xor
sub
mov
xor
push
repz
pop
xor
loopne
arpl
sub
xchg
inc
addr16
shr
leave
mov
mov
cmp
loop
aaa
fcoml
rcll
mov
pop
fisubs
roll
xchg
ret
mov
out
xor
push
ret
insl
inc
push
idivb
adc
inc
pop
and
adc
pop
cmpxchg
push
push
int
adcl
mov
icebp
dec
adc
cmp
push
ja
inc
inc
cmp
call
cmc
push
and
popa
inc
stos
mov
fildll
or
movsb
dec
test
jp
pop
out
mov
lods
dec
xor
mov
and
pop
fwait
and
jns
cmp
pop
jns
aad
rcrl
call
and
inc
mov
imulb
andb
jno
das
add
or
or
or
inc
fstpl
rolb
es
sub
dec
cmpb
push
int3
xor
pop
sbb
aaa
mov
cmpsl
mov
pop
push
mov
shl
jo
add
and
xchg
xor
mov
cmpsl
jne
lea
jmp
lret
fnstenv
insb
faddl
loope
pop
mov
shr
dec
movsl
outsl
dec
push
push
sub
mov
es
test
test
push
insb
dec
bound
in
mov
mov
xor
pop
dec
cmp
pop
push
shl
mov
lret
loop
sbb
bound
jmp
jns
movsb
loope
fmuls
cmp
imul
inc
pop
lods
sbb
pop
xchg
mulb
sbb
jno
lds
jecxz
subl
jmp
daa
jge
lock
mov
cli
sahf
je
repz
jns
testb
pop
cs
mov
repnz
jb
rolb
push
adc
pop
popa
mov
sahf
cs
mov
insb
or
icebp
and
repnz
mov
push
repz
push
loopne
outsl
jae
mov
cmpsl
inc
outsb
mov
jge
or
ss
lahf
lods
mov
xorl
xchg
mov
mov
dec
rep
mov
ret
lret
leave
icebp
testl
in
xor
cld
int3
jg
xor
sub
cmp
fcmovu
loop
fsubl
fsubr
notl
cmc
dec
inc
ror
and
test
ja
cmp
sbb
dec
adc
test
xor
daa
int
mov
daa
testl
addr16
arpl
into
cmp
lret
mov
jg
jg
and
es
xchg
fcomi
adc
or
mov
jbe
lods
std
jne
jg
rcrb
into
and
imul
test
xchg
or
and
jmp
test
push
scas
mov
sbb
push
inc
popa
push
adc
pop
hlt
xchg
cmp
in
icebp
fadds
hlt
sub
sub
outsb
mov
hlt
mov
adc
xor
xor
nop
sbb
sub
adc
ror
sub
cmp
mov
mov
fmull
mov
add
mov
imul
rclb
push
push
not
push
dec
out
dec
jmp
popf
inc
loopne
test
lret
insb
loopne
and
arpl
nop
xlat
ss
xor
mov
rclb
test
js
sbb
mov
mov
stos
fwait
loope
je
mov
pavgb
out
lods
pushf
xchg
sub
jnp
sub
fs
jbe
rcl
push
cwtl
push
sub
add
in
loopne
mov
push
dec
icebp
or
es
in
daa
sbb
ret
lds
mov
xchg
sahf
ss
shl
push
mov
mov
ds
sbb
xchg
inc
dec
push
ds
xor
pushf
jae
xchg
insl
mov
outsl
mov
sbb
inc
ret
mov
pop
xor
push
push
jmp
cmc
int3
xor
fcmovnbe
addb
mov
outsb
cmc
jb
int
enter
or
or
pop
xchg
cmp
and
add
jmp
jae
stos
pop
push
cmp
bound
inc
inc
inc
push
push
ret
leave
mov
loop
cmp
xlat
fadds
cld
add
mov
stos
xor
icebp
pop
addr16
xor
mov
test
cmp
pop
mov
stc
mov
inc
incl
inc
repz
repz
adcb
xor
cmp
mov
add
xlat
push
adc
imul
push
inc
jo
repnz
xlat
inc
rcrb
adc
call
fidivrs
mov
cmp
adc
mov
test
test
xchg
lret
stc
lahf
sub
xchg
jmp
add
std
pop
jb
sub
cwtl
pop
cmp
xor
sbb
add
aas
and
cmpsb
in
add
or
call
test
leave
iret
push
xchg
cmp
jmp
push
push
aaa
daa
add
stc
std
cltd
inc
mov
xor
sub
cmp
ss
cmp
lock
lcall
cmpb
push
xchg
and
mov
inc
inc
push
cmpsb
cmp
push
ss
out
es
stos
push
inc
push
aaa
or
data16
fistpll
push
mov
mov
fsubrl
lret
lahf
orl
adc
popa
pusha
dec
pop
mov
inc
xchg
clc
or
adc
sub
add
add
and
cld
sub
xchg
add
sbb
mov
add
out
mov
mov
repnz
xchg
push
xor
mov
pop
fmuls
cli
sar
int3
sbb
imul
fnstenv
jl
ja
shll
jae
add
add
cmp
inc
insb
lock
or
js
mov
fdivr
add
or
pop
lahf
jnp
xchg
hlt
dec
outsb
stos
mov
add
inc
sub
push
xor
outsb
and
dec
push
outsb
pop
push
sbb
add
xchg
sub
mov
fnstsw
fwait
mov
cmp
cs
cmp
cmp
out
mov
sub
int
lods
cwtl
and
ss
clc
loop
mov
inc
lahf
fwait
enter
int
push
ret
push
xchg
int
jne
dec
mov
popf
aaa
push
and
push
or
and
and
jecxz
adcl
pop
rolb
mov
or
dec
lods
je
jge
mov
cmp
out
ljmp
in
add
pop
xchg
pop
arpl
mov
mov
push
sbb
popa
pop
clc
cmp
or
subb
sub
insb
lods
mov
movsl
pop
jno
sub
jl
pop
push
pop
loop
push
insb
out
mov
imul
sub
jae
mov
push
out
sub
add
mov
stc
cld
sbb
lods
or
shrl
jecxz
lcall
adc
mov
jl
test
push
dec
aad
movsl
sbb
push
out
push
enter
push
lret
lret
das
add
cmp
add
dec
movsl
lods
mov
ret
test
enter
js
cmpsb
pop
add
xchg
data16
pop
icebp
test
add
movsl
pop
ret
fdivl
pop
in
imul
add
fdivs
xchg
xchg
mov
repz
push
push
xor
xchg
popf
mov
mov
xchg
rcl
fwait
sbb
xorb
ss
mov
mov
sahf
sub
add
cli
mov
xor
js
sbb
sub
mov
out
cmc
in
movsl
ljmp
sahf
test
js
andb
in
xlat
or
sbb
in
cwtl
rcrb
or
dec
dec
jae
mov
add
sbb
push
fdivp
mov
jecxz
lods
cmp
imul
mov
mov
roll
lods
xchg
mov
xchg
jne
jno
add
jno
dec
ja
cmpsb
test
es
push
rolb
add
jo
std
fstps
out
mov
lea
daa
or
aas
test
je
rcrb
call
jne
push
push
lret
add
in
pop
iret
out
lret
dec
dec
pop
pop
mov
sub
loope
aam
jns
inc
in
shll
ljmp
movsl
and
sbb
jle
and
fcomps
fisttpll
xor
jnp
fcmovu
into
cmc
mov
lret
push
cmc
mov
and
or
mov
mov
mov
shrl
setns
add
add
popa
les
daa
lahf
lods
cltd
lret
mov
arpl
inc
push
mov
push
popf
mov
sub
add
test
adc
push
xchg
movsl
jg
sub
out
out
and
adc
xlat
cmc
mov
enter
xchg
sub
dec
jp
adc
mov
test
mov
mov
sub
mov
xor
ljmp
dec
mov
sub
sbb
das
mov
jmp
mov
lock
les
popf
mov
cwtl
dec
sbbb
cld
cs
rorb
insb
icebp
push
or
cmc
mov
loopne
pop
mov
inc
push
or
dec
stos
push
dec
pop
jl
xchg
mov
notb
push
shl
add
arpl
inc
and
gs
nop
pop
cmp
mov
loopne
mov
popa
mov
outsb
loop
sarl
movsl
and
cmp
je
dec
imul
jmp
lods
pop
in
push
insb
mov
add
ds
add
bound
mov
imul
sti
cmpsl
xlat
dec
push
fisubrl
push
add
and
in
jge
lods
sub
jne
scas
adc
cli
xchg
ret
push
cmp
mov
inc
test
mov
jno
test
push
fs
aam
clc
xchg
push
test
cmpsl
mov
sti
pop
bound
sbb
and
mov
pop
push
sahf
sbb
cwtl
lcall
mov
mov
xor
pop
mov
icebp
ss
mov
sti
pop
adc
jmp
add
add
jae
mov
test
inc
in
rolb
dec
pop
mov
mull
mov
add
sarb
add
mov
stos
jp
mov
jnp
addb
sub
ljmp
push
mov
fst
fbld
or
sahf
and
pop
imul
std
push
jns
test
iret
mov
mov
mov
jmp
stos
mov
jl
sbb
pop
int
mov
addr16
xor
mov
jle
lods
mov
jno
mov
ljmp
addr16
xor
and
movsb
inc
dec
dec
out
inc
test
rcrl
imul
mov
pushf
fildll
push
sub
movsl
push
cmp
jge
cmp
sbb
jge
pop
neg
or
bound
pop
pushw
dec
push
ja
ds
push
addr16
adc
test
push
es
enter
movsb
pop
scas
jbe
mov
adc
fstp
push
pop
in
sub
mov
xchg
or
sub
mov
cmp
mov
jne
stc
dec
imul
test
and
into
inc
add
leave
sub
fimuls
cmp
pop
popf
aas
lret
decl
add
mov
adc
aaa
pop
mov
dec
cmpsl
std
daa
loopne
pop
out
rorl
and
in
mov
jecxz
xlat
aam
out
js
ds
push
testb
repz
call
mov
xchg
jns
ds
jmp
in
jecxz
pushf
xor
movsl
fucomi
out
mov
mov
cmp
inc
aad
aaa
pushf
mov
or
in
movsb
int3
cltd
sbb
cli
xchg
out
jne
stc
into
sarl
sti
push
xorl
xchg
pop
and
inc
jne
push
xor
mov
xor
inc
mov
enter
mov
fbld
pusha
adc
add
ljmp
imul
sub
xchg
push
cwtl
fsubl
cmp
test
insb
test
div
fcom
xor
pop
hlt
gs
and
jp
jl
or
mov
mov
adc
testb
mov
jle
in
jae
test
mov
fwait
mov
cmp
inc
jecxz
sbb
roll
repz
scas
cs
push
dec
adc
dec
jle
xchg
popf
sar
fsubrs
and
lds
fists
adc
scas
add
sbb
cmp
adc
cmp
ss
mov
or
divl
dec
iret
mov
cmp
ror
lret
mov
xlat
mov
pop
dec
add
int
nop
mov
scas
adc
or
mulb
push
xlat
add
xchg
leave
xor
lock
adc
sub
mov
es
test
push
xor
adc
mov
insl
or
xor
dec
jmp
lcall
adc
in
jmp
fs
jb
sub
outsb
lret
pop
cmp
in
xchg
add
dec
adc
or
cltd
decl
jo
loopne
mov
je
fstl
in
in
leave
mov
movsl
fstpt
insb
mov
in
sbb
out
stos
cld
rol
ljmp
into
push
addl
fsubl
xchg
bound
adc
sub
mov
mov
sbb
push
jle
jl
leave
mov
mov
roll
out
dec
pop
xchg
cmpsl
mov
mov
sbb
addl
fcomps
lahf
or
nop
sbb
lock
bound
insl
data16
jp
or
cmc
sbb
mov
add
mov
arpl
fs
cld
jno
lods
push
sbb
mov
mov
xchg
push
orl
pop
sarb
sub
and
jns
jge
and
pop
jg
ljmp
inc
and
dec
cltd
out
push
lods
out
outsb
xchg
pushf
popl
inc
mov
fstpl
ljmp
push
leave
insl
out
cmpb
mov
orb
cs
and
ss
dec
sbb
andb
mov
hlt
flds
mov
clc
inc
enter
sub
sbbb
ljmp
popf
push
xchg
mov
lret
jns
mov
push
aas
xor
bound
inc
dec
sub
scas
mov
mov
insb
enter
and
dec
inc
rclb
outsl
aad
outsb
jo
repz
movsl
xor
jbe
sub
sbb
lahf
shlb
je
ljmp
int3
jne
insl
in
cmp
jo
fcomps
popf
aam
adc
push
aaa
jle
xor
stos
inc
and
jecxz
mov
into
jb
ljmp
pop
push
inc
sbb
insl
mov
add
fsubs
xchg
pop
ss
adc
lds
mov
sbb
nop
jne
int3
push
test
xor
leave
stos
je
je
xor
ljmp
adc
aam
sub
test
fwait
insl
jge
adc
pop
xchg
stc
push
push
and
test
rolb
and
enter
andb
cmp
inc
ret
clc
xchg
lret
xchg
negl
push
pop
sub
sub
inc
pop
ja
stos
add
imul
std
jnp
dec
outsl
inc
iret
cwtl
es
nop
push
pop
movsb
lret
mov
test
dec
push
imul
sarl
mov
or
loop
fs
in
lahf
xor
das
mov
cmp
rorb
inc
scas
cmp
insb
insl
dec
sub
jmp
fwait
out
push
jb
cmp
fsubl
gs
cmp
cmp
lods
in
testb
mov
aad
shrb
iret
rorl
lea
sbb
or
cmp
xchg
int
dec
les
out
and
jge
popf
inc
xchg
dec
xchg
aas
andps
test
add
mov
test
mov
sbb
outsl
sahf
cmpsl
pop
add
push
int
adc
cli
cli
jge
daa
or
add
mov
cmp
mov
push
mov
pop
jno
xchg
popl
mov
xor
mov
mov
fwait
mov
lods
mov
nop
xchg
mov
aad
cmpb
inc
nop
jns
ds
cmp
push
sti
pop
cmp
sub
sub
mov
ret
inc
push
xor
inc
mulb
xorb
mov
sub
stos
popf
cmpsb
movsb
pop
mov
pushf
and
nop
pop
outsb
xlat
popa
loope
cwtl
pop
jns
inc
adc
adc
push
test
jnp
ljmp
jl
sub
cmpsb
adc
mov
popf
scas
ljmp
push
xchg
add
dec
xor
xor
dec
jmp
mov
jg
arpl
aaa
dec
sub
and
cmp
jno
lods
lret
sbb
movsb
loope
sub
dec
fstp
cwtl
stos
loop
mov
cmp
test
mov
dec
lret
sub
xor
adc
xor
push
sbb
fs
scas
inc
in
xchg
adc
out
lcall
push
rolb
jg
ret
ds
xchg
xorb
es
jns
xlat
mov
xor
push
lds
adc
lock
cmp
add
mov
mov
cmpsb
mov
or
ja
add
mov
dec
imul
jne
xchg
inc
pusha
dec
adc
jb
in
cmpsb
or
xchg
or
jl
and
repnz
add
ret
in
dec
dec
iret
xor
adc
ss
sbb
std
mov
sub
lods
bound
mov
lods
jl
xchg
xor
out
pop
popa
out
outsl
cwtl
cmpsb
push
xchg
pop
sub
fldl2t
inc
add
inc
sti
ret
push
cli
cltd
iret
imul
inc
testb
push
in
cmp
pop
adc
test
pop
in
pop
push
mov
push
mov
cmp
clc
pop
inc
pop
adc
stc
mov
orl
push
mov
das
jno
mov
mov
sbb
jecxz
shlb
fldcw
fimuls
xchg
lahf
push
sbb
not
lock
and
repnz
roll
cmpsb
cmp
push
sub
jns
cli
jns
pushf
rorl
xchg
mov
inc
xor
push
pushf
ds
roll
add
movsb
iret
push
inc
and
jnp
fwait
iret
and
cmp
popf
shl
sub
aad
movsb
and
mov
fildll
dec
mov
mov
push
daa
arpl
push
outsl
xchg
jp
xchg
xor
bound
cmp
add
roll
sti
add
popa
jl
and
or
xor
or
xor
mov
fcoms
ret
cld
arpl
push
jmp
dec
andl
rcrl
pop
outsb
inc
xchg
mov
ljmp
sbb
ljmp
gs
mov
push
orl
dec
cwtl
pop
cltd
dec
or
and
shl
sbb
xchg
test
jge
add
call
pop
popa
rclb
adc
movsl
sbb
or
mov
iret
call
sbb
aaa
inc
inc
or
pushf
and
ficomps
mov
cmp
icebp
das
out
push
cs
push
icebp
ficoms
loope
jg
jp
push
sbb
sbb
cmpsb
xor
in
inc
mulb
mov
movsb
test
jo
xchg
jbe
leave
xchg
scas
jmp
push
push
or
xchg
cwtl
sub
repz
int
imull
xor
lock
mov
sub
jmp
scas
scas
pop
fcoms
das
or
inc
add
pusha
and
scas
in
hlt
push
outsb
adc
dec
add
jecxz
cmpsl
fnstenv
call
test
xor
pop
rol
inc
xor
add
push
dec
scas
adc
jecxz
lret
add
adc
scas
pusha
clc
jmp
mov
or
lcall
daa
sub
xchg
and
pop
notl
cltd
out
into
fistpll
iret
sub
loope
adc
lods
lock
xor
mov
cmp
into
mov
sub
cmove
ss
lods
aaa
int
cwtl
or
fnstenv
or
sahf
xchg
ss
sbb
xchg
adc
cmp
xchg
les
jne
std
inc
js
bound
cmpsb
cmp
pop
ficoml
lods
mov
xlat
adc
popa
mov
or
insb
rcr
arpl
push
lods
push
ds
inc
gs
test
push
lods
jp
bound
int3
sub
fcomps
pop
scas
jne
pop
popa
call
cmc
sub
testb
jl
pop
mov
fcompl
dec
jp
aad
push
inc
mov
sub
mov
push
cs
loope
and
imul
out
mov
mov
dec
incb
pushl
ja
lods
sub
mov
xchg
stos
push
inc
add
imul
imul
mov
hlt
mov
mov
xor
stc
lock
cmp
data16
push
mov
loopne
push
jge
cmpsl
jmp
pop
shrb
dec
mov
bound
fidivl
jae
out
inc
sbb
pop
or
add
aas
push
xorl
jno
lods
and
popl
dec
or
incl
bsf
cmp
and
in
insb
mov
cmp
out
stos
sub
mov
test
cwtl
xor
adc
out
insb
inc
push
dec
ds
jl
lea
bound
mov
cmp
jns
test
pop
pop
sub
dec
out
int
stos
movsb
inc
mov
out
mov
jae
test
xchg
enter
incl
add
scas
nop
xor
leave
dec
in
shl
mov
mov
call
pop
jle
xchg
or
test
mov
inc
inc
testl
cmpsb
push
add
or
sub
mov
sbb
push
jb
lds
rorl
mov
fldcw
sub
push
mov
test
lret
cmp
std
add
into
scas
stos
push
mov
icebp
lret
sbb
data16
rep
repz
in
sbb
inc
sbb
into
scas
xchg
adc
stos
dec
lods
leave
jmp
xor
ret
dec
jae
and
in
xchg
divb
mov
push
std
dec
cmpsl
mov
andl
pop
xchg
fwait
subb
push
cwtl
andl
jl
dec
push
sahf
js
mov
adc
les
addb
pop
cwtl
rclb
incb
sbb
notl
scas
xor
mov
mov
pusha
or
out
cmp
outsl
mov
aad
dec
movsl
sar
lods
push
pop
adc
xchg
cmp
jbe
test
adcl
inc
dec
mov
jo
push
stos
lods
clc
jp
mov
or
mov
ret
mov
aaa
std
cmpsl
xchg
pop
jns
push
pop
imul
inc
ja
push
lds
jns
mov
mov
repz
xchg
cmp
out
cltd
pusha
popa
sub
adc
loopne
ret
out
inc
cmp
fidivrl
cli
shrl
jae
jg
std
lret
and
aad
jmp
jo
sbb
test
inc
js
lock
cwtl
dec
adc
xor
dec
xor
push
sub
ds
mov
dec
adc
es
out
adc
mov
sub
pushaw
inc
xchg
daa
ljmp
pop
jne
or
mov
ljmp
addb
dec
into
sbb
shl
push
ljmp
pop
out
pop
in
mov
adc
sahf
addr16
movsb
push
pop
das
mov
jbe
jno
mov
repnz
xlat
out
stos
lods
dec
inc
sub
icebp
addr16
add
cltd
flds
data16
pop
add
xor
stos
xchg
cs
and
mov
bound
dec
jb
pop
push
mov
out
cmc
imul
or
andb
jmp
cltd
lea
xchg
inc
iret
mov
test
sbb
js
insl
fisubs
dec
clc
maxps
pop
xlat
dec
mov
mov
or
xlat
xor
lods
cmpsl
push
xor
cmpsl
mov
push
or
cmp
loope
jne
mov
repz
xchg
repz
dec
or
jmp
aaa
test
outsl
aad
cwtl
inc
pop
aam
mov
jmp
push
test
inc
cmpsb
leave
ja
sub
sub
add
stos
cltd
imul
aas
loope
pop
aas
sub
negb
mov
leave
or
jg
xorb
adc
aas
test
mov
pop
test
int3
daa
add
mov
jae
jno
es
out
adc
das
jbe
and
mov
cmp
sub
push
jne
hlt
xchg
sarl
ljmp
or
dec
iret
mov
mov
dec
push
inc
and
test
pop
insb
mov
arpl
js
push
pop
int
push
outsl
adc
mov
rorl
mov
fildll
lea
stc
mov
jmp
jmp
das
pop
stos
pop
inc
stos
or
popf
xchg
xchg
icebp
jo
adc
xor
pop
cmp
lahf
mov
push
inc
sbb
jnp
xor
lea
clc
stos
stos
dec
push
cmpsl
pop
jecxz
rcrb
xchg
mov
popf
sbb
fs
jg
out
mov
loope
mov
mov
clc
mov
mov
lock
aam
pusha
xor
rcrl
mov
adc
popl
addr16
xor
into
icebp
cmp
xchg
popa
aas
dec
ds
jae
insb
pop
ret
pop
test
gs
push
and
jo
pop
and
loope
push
dec
fldt
mov
push
stos
subb
jbe
push
loope
lock
pop
cmc
mov
es
mov
jbe
xchg
inc
aad
mov
repz
adc
mov
mov
paddsw
js
lea
inc
sbb
in
jg
nop
popa
mov
aas
mov
subl
add
mov
cs
inc
fistps
mov
mov
pop
add
sbb
mov
outsb
xchg
popa
jmp
adc
and
xchg
stc
inc
dec
xlat
and
out
inc
out
aad
jmp
cmc
xchg
sbb
mov
mulb
mov
into
mov
push
aaa
bound
jbe
rclb
push
sbb
fstl
and
jle
or
scas
fiadds
decb
ds
xlat
sbb
cmc
push
dec
sub
or
sti
inc
sub
inc
mov
lds
in
xor
inc
mov
fimuls
ss
rolb
outsb
test
sarb
xchg
sub
or
push
mov
push
in
dec
mov
int
jbe
or
add
pop
inc
pop
cmp
mov
lahf
xor
mov
aad
incb
andb
add
and
pop
push
cmp
cmpsl
push
dec
sbb
in
sarb
pusha
data16
test
repnz
or
or
inc
arpl
cltd
push
ds
push
xlat
jmp
xchg
lret
loop
mov
testb
inc
out
mulb
mov
sar
cld
cmp
in
add
dec
xor
adc
sub
dec
cwtl
jbe
pushf
jns
add
jg
add
inc
in
xchg
adc
jne
in
mov
cmpsl
les
jo
in
adc
or
jmp
enter
outsl
test
adc
cs
je
add
test
je
sub
outsl
mov
push
pop
fwait
add
mov
jnp
mov
test
lds
push
mov
cmc
jne
in
inc
nop
adc
mov
loopne,pt
fadds
cltd
test
inc
pushl
decl
fbstp
nop
xor
sbb
cmp
push
xchg
dec
jnp
repnz
or
int
cmc
and
and
lock
inc
test
out
sub
shl
out
pop
popf
test
aam
jo
cmp
fmull
push
add
jno
xchg
adc
mov
cmp
adc
mov
push
xchg
aad
jne
sbb
out
ret
push
lods
repnz
and
mov
int3
insb
or
xchg
mov
dec
jmp
or
and
pop
jno
jb
jo
mov
add
sbb
mov
icebp
cltd
push
leave
push
dec
je
adc
pusha
jmp
test
sti
sbb
shll
push
xor
jnp
dec
insl
add
add
aaa
cltd
dec
pop
shrl
mov
pop
xchg
arpl
mov
ljmp
jno
call
leave
lret
hlt
pop
in
aad
mov
clc
in
lods
pushf
imul
mov
push
mov
divb
popf
sub
in
fbld
xor
stc
aam
fildl
or
mov
or
leave
sbb
ret
add
out
repz
mov
mov
repnz
and
enter
jne
or
scas
xchg
sbb
sub
mov
xchg
inc
data16
outsb
jne
xlat
and
dec
scas
mov
out
sub
cmp
adc
xchg
ljmp
ret
adc
xor
lcall
xor
and
imul
scas
dec
rorb
dec
cmp
sbb
mov
mov
sbb
cmp
inc
mov
mov
std
cmp
aam
ljmp
fmuls
popf
repnz
scas
sub
pop
movsl
sarl
mov
mov
and
or
sbb
imul
jmp
je
lea
ja
addr16
lea
jae
pop
xchg
push
inc
pop
or
pop
inc
outsl
jl
dec
pop
cmpsb
lea
iret
stos
jge
jmp
or
sbb
or
fsubr
mov
add
dec
xchg
pop
or
mov
xchg
mov
iret
adc
subb
adc
xchg
push
pop
arpl
ss
add
xchg
xchg
or
mov
sarl
mov
lret
sub
in
daa
push
inc
stos
mov
jecxz
push
fwait
mov
popf
mov
jbe
ret
hlt
cmpsl
imul
mov
lds
out
push
mov
div
cltd
shrl
loopne
mov
repz
mov
and
shll
mov
sbb
mov
pop
stos
stos
lret
int3
addr16
scas
pusha
sub
mov
loop
xor
dec
or
in
jecxz
daa
mov
pop
cmpl
lcall
insl
mov
adc
pop
jp
jns
jmp
cld
push
adcb
fisubrs
adc
test
loope
cmpsl
push
cmp
es
add
push
fcmovnbe
jg
jg
rorl
pop
movsb
imul
xor
in
and
fcmovne
xchg
mov
add
add
popa
jl
push
adc
xor
sbb
or
adcl
call
jnp
dec
loopne
mov
loopne
sub
ds
mov
sar
xchg
movsb
and
xchg
lea
pop
bound
xchg
or
js
aaa
cmp
in
mov
jno
int
mov
imul
arpl
arpl
stc
pop
sbb
mov
imul
mov
and
mov
leave
jo
in
or
enter
mov
push
out
sti
dec
add
xor
and
or
test
lret
jmp
fadd
test
mov
inc
leave
add
outsl
sub
xchg
cmp
sbbl
aam
inc
mov
in
out
jbe
push
jl
push
popf
out
in
pop
lcall
pop
inc
xor
ljmp
lods
pop
hlt
fwait
push
sbb
adc
jmp
std
in
jge
jmp
cli
mov
pushf
mov
es
xor
xchg
in
dec
ret
cmp
rorb
or
dec
loopne
mov
outsb
pusha
xor
testl
ret
fisubrs
repnz
fsubrl
aas
je
xchg
xchg
int
insl
hlt
lahf
std
or
insl
icebp
data16
pop
jge
xchg
iret
icebp
adc
push
adc
iret
push
sbb
jne
mov
sbb
jl
lock
lea
cmp
roll
lds
push
fcoms
push
shl
cld
mov
adc
sub
dec
sahf
hlt
xlat
idivb
repz
fisubs
gs
cli
jle
popa
inc
push
or
lea
jge
cmp
cmp
stos
cli
sub
sub
fsubl
add
aad
scas
push
test
xor
movsb
mov
xchg
pop
testl
rclb
outsb
stos
out
add
outsb
nop
inc
dec
dec
iret
jmp
out
push
mov
int3
je
adc
ds
dec
inc
lcall
das
ja
scas
popf
dec
daa
pop
add
mov
out
lcall
pop
int3
in
rcrl
sbb
addb
jmp
lods
shll
inc
mov
mov
jmp
sbb
or
out
int3
lret
inc
mov
xor
push
in
inc
push
ret
sub
mov
inc
jl
mov
pop
inc
gs
sarb
adc
inc
cmp
jb
or
addr16
or
jo
aam
out
sbb
sbb
pop
jnp
insl
mov
mov
repz
adc
pop
std
dec
mov
notl
mov
fdivrs
pop
dec
call
inc
mov
rcrl
cmp
cmpsl
iret
data16
xchg
adc
ds
popf
lods
stos
pushf
xor
fwait
int
scas
jmp
xchg
mov
cld
mov
and
adcl
es
xor
mov
sbb
add
gs
pop
lcall
nop
pop
fldt
out
out
ss
inc
or
and
or
cld
sbb
divl
adc
sar
daa
sbb
inc
out
cmp
repz
cmp
jb
xchg
fidivrl
mov
outsl
in
sub
mov
jecxz
repnz
jb
adc
mov
push
jne
cs
jg
outsl
cmp
cmp
fdivl
xlat
cld
lods
mov
dec
pop
inc
pop
and
sbb
jge
cmpb
jecxz
sub
cmp
inc
mov
sahf
ds
jbe
pop
jecxz
aas
in
add
push
mov
addr16
add
add
mov
daa
mov
pushl
xchg
lahf
mov
cmp
xchg
add
lret
pop
pushl
and
cmp
add
pop
hlt
shl
inc
pop
es
push
adc
std
jp
sarl
adc
add
sub
pop
out
hlt
xor
mov
jle
cmp
and
addr16
inc
ficompl
mov
sub
cltd
sub
cmpsl
xor
mov
sub
sbb
inc
fs
push
jae,pt
push
bsr
jbe
sbbb
and
jp
xchg
lea
stc
push
jne
xor
and
adc
addl
xor
or
mov
or
pop
pop
ja
sub
lea
pusha
in
xchg
cli
nop
jg
scas
mov
pusha
int3
out
aaa
inc
push
push
adc
sbb
in
mov
icebp
dec
test
inc
imul
ret
test
jle
jne
jb
add
adc
int3
add
inc
iret
fisubrl
nop
clc
mov
push
fwait
lahf
test
test
dec
aam
xor
and
jb
enter
call
mov
xchg
mov
sub
dec
aam
stc
xchg
xchg
lahf
sub
ret
shlb
imul
call
fs
jle
dec
dec
pop
add
rcll
test
pop
mov
sbb
sub
out
rorl
pop
and
add
dec
xchg
mov
mov
inc
pop
shlb
lahf
dec
xchg
mov
fwait
pushf
push
adc
jo
cmpb
test
mov
mov
movsl
mov
fnsave
mov
xchg
mov
or
push
xchg
mov
mov
orb
cmp
popa
push
inc
adc
push
mov
dec
fadds
or
test
inc
enter
jl
xorb
mov
cmc
push
lea
shll
int3
pushf
incl
cmpsb
loop
out
ret
lods
jg
cmpsb
pop
aas
fwait
in
dec
mov
dec
movsb
nop
mov
mov
xchg
adc
pop
sub
stos
push
adc
pusha
int
mov
scas
daa
nop
inc
loopne
pop
rclb
cmp
jb
mov
sub
mov
xchg
cmc
cmp
iret
movsl
mov
ss
inc
int3
sbb
xchg
stc
jge
loop
icebp
xlat
pop
add
jnp
decb
jle
sbb
sti
js
stos
inc
and
add
imul
movsb
movsl
push
adc
cmp
daa
imul
push
mov
lods
mov
sbb
lret
lods
pusha
mov
inc
and
xchg
jl
fdivrs
mov
xchg
or
das
fistpl
cwtl
not
ret
scas
mov
fistps
rcll
mov
loop
pusha
sub
xchg
loope
pop
push
arpl
mov
fs
dec
fwait
add
and
and
xchg
mov
daa
gs
cmp
mov
inc
shlb
out
rclb
ljmp
jge
cmpsl
cmc
and
push
mov
loopne
adc
imul
inc
xorb
or
andnps
popa
mov
and
jbe
sbbb
and
lret
dec
push
sbb
cmp
mov
lods
mov
cmpsl
rclb
cmp
add
lods
add
jp
lock
pop
or
es
es
mov
shr
test
mov
mov
push
cmp
dec
jge
fmull
mov
mov
jl
add
in
rorb
cmpsl
call
jge
adc
loopne
fwait
aas
sub
mov
xor
or
mov
lods
testl
jmp
xchg
jmp
cltd
pop
pop
mov
repnz
rcl
imul
pop
push
cmpsl
mov
lods
adc
je
and
push
ss
pushf
pushf
int
dec
divb
mov
jecxz
hlt
adc
jmp
mov
icebp
mov
arpl
fnstsw
jmp
jp
xor
imul
sub
pushf
push
xor
inc
mov
mov
shll
or
addr16
pop
les
xor
adc
loop
cmp
popf
adc
scas
push
in
movl
test
push
cltd
rorl
outsl
sahf
dec
jmp
mov
mov
xor
ret
imul
into
aas
xchg
fistpl
xchg
adc
insb
pop
and
mov
lods
das
dec
bound
mov
mov
mov
out
addr16
icebp
aas
notl
xchg
clc
in
push
or
cmp
sbb
mov
mov
jmp
xchg
in
scas
nop
cmp
add
shll
adc
sub
jmp
xchg
sub
jge
sti
das
fadds
mov
aam
jge
adc
add
dec
adc
call
push
gs
push
jno
hlt
jb
shlb
movsl
jmp
ret
pusha
add
pop
aam
shrl
call
push
add
push
lcall
insb
xchg
and
rcrb
cmp
mov
sbb
jne
sbb
lds
sbb
pop
fmul
jle
fcomip
xchg
jl
les
imul
xchg
aam
fnstcw
sub
dec
ficoml
push
or
and
mov
popa
cmc
xchg
ds
inc
fcomip
jae,pn
sbb
jo
xchg
inc
jbe
aaa
lods
push
mov
loopne
out
test
jns
pusha
jmp
cld
or
or
pushf
outsl
inc
ficomps
mov
xchg
or
lock
enter
inc
aad
jo
clc
push
adc
pop
ds
mov
pop
mov
jge
jbe
pop
ror
adc
sub
outsl
adc
sahf
arpl
mov
pop
test
inc
shlb
cltd
add
jo
mov
mov
ss
jns
mov
iret
push
dec
mov
mov
pop
pushf
xor
nop
sahf
mov
hlt
leave
push
xor
addl
add
sahf
imul
dec
xor
mov
loope
xchg
repnz
mov
inc
mov
fs
mov
add
daa
xchg
incb
add
fsub
ret
outsl
mov
cmp
adc
dec
pop
loopne
leave
fdiv
jge
jge
lea
dec
add
ss
pop
cmp
adc
cli
lahf
push
jmp
and
incb
pop
outsb
shll
and
enter
movsl
jg
sub
push
sbb
mov
outsl
xchg
mov
insl
push
cmp
mov
xchg
xchg
dec
stc
adc
repnz
test
xchg
arpl
cltd
sbb
mov
dec
cmpsb
fstpl
jp
outsl
cmp
dec
sub
pop
xor
or
mov
or
mov
imul
xchg
mov
mov
xchg
ret
ljmp
psubsw
push
inc
out
leave
js
jecxz
in
push
das
sbb
dec
popa
mov
daa
enter
add
fisttpl
mov
xchg
ja
dec
adc
outsl
jae
dec
das
arpl
lea
into
lods
push
mov
repz
and
hlt
fstpt
mov
xor
cmp
or
xchg
aam
mov
jnp
loope
jae
aam
cld
xchg
std
inc
lea
mov
ds
xchg
jo
stc
jnp
cmp
outsl
aad
sub
insb
aad
out
cmp
inc
and
addr16
test
xlat
mov
hlt
aam
sti
test
mov
sbbb
adc
adc
cltd
or
movsl
scas
test
bound
jne
or
mov
mov
fs
into
adc
jno
mov
jno
mov
ficoml
dec
mov
into
lret
out
jmp
push
mov
jecxz
sbb
mov
xchg
sbb
or
out
cmp
or
cmp
subl
add
mov
jge
mov
push
test
out
mov
arpl
push
pop
inc
mov
xchg
push
xchg
aaa
pusha
fldenv
mov
dec
dec
pop
xor
sub
ds
icebp
inc
mov
clc
mov
adc
or
mov
pop
addr16
push
aaa
mov
pop
pop
cmp
or
mov
cmpb
inc
jo
fwait
sbb
in
mov
dec
xchg
cmpsl
jae
loope
pusha
es
test
loopne
pop
test
rcrl
and
pop
xlat
mov
dec
fdivrl
fwait
jno
xor
push
jbe
adc
js
push
push
xor
in
aam
mov
clc
xchg
cmp
push
and
push
pop
or
sub
popa
fldl
lea
mov
shlb
mov
shrb
inc
movsl
imull
gs
clc
jmp
arpl
sbb
out
out
cmp
shl
fwait
and
add
xor
cmp
or
jb
inc
loopne
jecxz
sbb
popa
push
dec
int
or
out
in
in
int3
fnstenv
mov
or
mov
inc
jne
push
cmp
mov
fnsave
inc
inc
xor
xchg
mov
add
shlb
iret
sub
jmp
push
test
mov
adc
test
int3
fisubl
xor
xor
pop
push
xor
adc
paddb
cmp
push
inc
push
push
movb
andb
sbb
push
mov
call
and
push
rorb
jecxz
int
xor
push
mov
sarb
out
or
ja
push
xor
and
icebp
mov
andb
shl
sub
sti
call
aam
in
inc
or
lret
movsl
xchg
and
add
addr16
stc
test
stc
imul
in
cli
dec
mov
mov
ljmp
je
stos
dec
sbb
test
sub
orb
ret
add
mov
cmpsb
pop
xchg
addr16
nop
outsb
mov
add
add
mov
xlat
roll
sbb
sub
mov
fs
popl
fwait
mov
jae
lret
in
pop
jecxz
in
das
jp
and
mov
cmp
jg
gs
cwtl
adc
pop
mov
fiaddl
nop
hlt
fistpll
subl
mov
fdivr
adc
out
dec
push
rclb
pop
mov
cmc
lcall
in
add
xchg
lret
fsubrl
cmc
in
out
dec
std
ret
into
pop
adc
sbb
add
mov
in
xchg
mov
push
sbb
mov
xchg
jl
pop
xchg
pusha
popf
xchg
fcomps
lret
add
pop
jb
xchg
dec
into
ret
inc
inc
out
test
divb
mov
mov
or
pop
sbb
add
mov
fmuls
pop
insl
inc
pop
and
cmpsl
jae
dec
cmpsl
mov
pop
std
xorl
jae
inc
push
mov
test
or
mov
adc
sub
lock
mov
fdivs
mov
outsb
ss
push
xchg
fs
sbbb
mov
jbe
es
lods
mov
mov
jle
call
sub
mov
lea
js
add
jp
dec
sub
push
fsts
enter
pop
sub
jmp
lahf
bound
les
lahf
movsl
insb
cmp
mov
fwait
xlat
inc
and
xchg
out
rclb
jns
addr16
adc
or
and
popf
mov
outsb
call
xor
xchg
je
mov
push
pop
mov
jnp
push
clc
mov
rolb
les
push
gs
pop
shl
and
xor
push
data16
or
sub
js
test
adc
stos
jg
mov
xor
inc
sub
jp
dec
loopne
or
icebp
or
jg
dec
add
cltd
and
xor
test
lock
adc
testb
scas
arpl
adc
nop
fcompl
and
nop
and
or
pop
dec
jo
add
push
add
lret
icebp
fsts
mov
and
sub
push
xor
lea
sbb
mov
cmpsb
enter
clc
sarb
jmp
mov
je
ret
push
jae
imul
xchg
in
lds
mov
push
repz
test
popa
movsl
mov
mov
das
dec
out
mov
iret
mov
xchg
enter
roll
jo
jno
add
dec
lahf
lahf
mov
or
and
sbb
aad
mov
pop
cmpsl
call
insb
arpl
sete
mov
lods
fcomps
cmp
adc
or
jae
xor
mov
cmpl
pop
insl
negl
lock
pop
mov
test
xchg
sarb
or
xor
pop
adc
lea
fiadds
mov
mov
push
inc
cmpsl
outsb
pop
test
aam
insl
in
ljmp
lock
ja
ds
scas
outsl
ljmp
xchg
punpckhwd
push
mov
push
mov
xor
push
and
cwtl
inc
jp
xchg
cmp
xchg
mov
bound
outsb
lahf
cmc
sbb
xchg
push
mov
testl
ret
push
inc
mov
ret
hlt
add
call
sbb
dec
adc
mov
psrlw
aad
jmp
pusha
mov
insl
mov
jnp
out
mov
mov
push
jb
push
mov
movsl
rcll
push
and
popf
pop
loop
cmpsl
fst
sbb
int3
and
jne
cmpsb
cmp
insb
cld
push
bound
shlb
jle
mov
test
jp
dec
pop
outsl
mov
mov
pop
call
les
jg
xor
ret
add
stos
xchg
pshufw
stos
lea
mov
gs
xchg
in
test
clc
add
jl
and
adc
dec
call
dec
ss
cmpsb
cmp
cmp
mov
xor
lock
pop
jns
incl
lea
adc
and
dec
sub
cltd
and
enter
pop
lock
push
xchg
adc
push
mov
out
lahf
inc
push
or
xchg
xor
xchg
lret
pop
insb
ss
add
sbb
dec
repnz
imul
sub
sbb
sbb
mov
loope
aas
lea
push
ds
adc
js
or
fwait
sarl
vorpd
int3
jb
dec
push
hlt
jo
fistpll
in
addb
dec
push
fwait
and
inc
cmc
lcall
xchg
cmp
add
xchg
lods
pushf
scas
test
jne
lods
test
adc
fstpl
loopne
pusha
ja
fisubrl
cs
pop
mov
xor
addr16
mov
and
sub
and
insb
idiv
mov
mov
imul
inc
fstl
jle
inc
mov
in
xchg
xlat
and
das
aaa
push
gs
cmp
sahf
std
jl
cmp
sub
jae
xchg
or
in
fadds
xchg
cmc
ss
mov
mov
push
lret
adc
iret
cmp
stos
js
mov
jne
cmc
outsl
mulb
scas
scas
hlt
push
sbb
sub
cmc
cmp
data16
insl
in
inc
popf
push
or
stos
out
lret
xchg
dec
mov
inc
iret
fwait
into
jle
sub
add
sbb
sbb
stc
lea
mov
cmp
or
or
aaa
nop
loopne
push
push
call
outsl
popf
or
in
dec
mov
es
adc
xchg
inc
mov
aaa
cmp
mov
arpl
jp
add
jge
xor
mov
cld
mov
push
test
mov
pusha
pop
inc
stos
add
inc
sbbl
push
xchg
iret
mov
jle
add
push
cwtl
out
dec
lcall
imul
pop
mov
scas
leave
rcl
loopne
int3
pop
xor
stos
fwait
stos
xor
fmull
hlt
in
and
or
call
out
call
pop
mov
inc
pop
dec
mov
aad
dec
imul
sbb
xchg
sbb
sbb
lret
push
ficoml
cmpsb
jns
ja
pop
test
icebp
pop
xor
out
inc
ds
push
int
xlat
std
xchg
ja
stos
push
faddl
out
xor
pop
mov
sub
cwtl
insl
xor
and
jge
out
idivl
xor
outsb
push
add
int3
adc
xchg
push
push
lods
mov
outsb
into
mov
push
shl
adc
adc
mov
sub
xor
ret
sbbl
cld
dec
mov
pop
inc
fisubrl
push
and
or
into
testl
push
push
mov
pop
lret
insb
ja
int3
push
mov
arpl
ss
fmull
adc
and
lcall
dec
out
pop
ss
or
inc
imul
cltd
icebp
xchg
fsubr
add
dec
lcall
call
xor
iret
jbe
adc
add
and
inc
lcall
sbb
jge
cld
jle
sub
xor
push
pop
sbb
cmp
outsb
jb
dec
adc
mov
push
adc
add
pusha
ret
push
cmpsl
push
hlt
repz
test
mov
mov
ds
push
and
dec
sub
ret
xchg
lahf
add
jae
mov
leave
xor
je
movsb
or
push
xchg
in
outsb
inc
inc
jle
jg
idivb
push
xlat
je
mov
shlb
lods
sbb
push
cmc
rcr
mov
push
out
icebp
sbb
ja
rolb
sahf
push
mov
aad
mov
mov
out
out
into
sbb
sbb
aam
cmp
cmp
push
add
or
movsl
push
imull
sub
sbb
push
pop
or
push
fwait
sti
cli
cltd
ret
rol
xchg
dec
mov
jmp
sub
enter
cmpsl
lods
das
mov
int
xchg
xchg
fcmovnu
push
jg
add
fs
test
push
fdivs
add
mov
mov
xchg
jg
pop
and
ss
test
jno
negl
pop
pop
jl
lcall
fmull
sar
mov
arpl
push
add
fsubl
xor
mov
mov
sub
loop
rolb
js
aad
ja
arpl
or
inc
push
cmp
inc
dec
inc
or
aam
mov
xor
jp
fistpll
pop
or
cmpsb
jmp
pushf
ret
mov
mov
push
repnz
mov
outsb
sahf
stos
jae
bound
add
enter
mov
jno
filds
cmpsb
out
lds
insb
pop
pop
jbe
push
dec
aas
cld
in
ret
mov
mov
and
pop
into
in
xor
xor
in
add
inc
in
push
ja
push
cmpsl
test
and
shll
dec
sbb
cld
outsb
enter
mov
xchg
faddl
notl
dec
nop
and
pop
pop
sub
ret
inc
jb
es
testl
cld
test
pop
pop
popl
sbb
loopne
lret
negb
daa
adcl
cmp
cld
push
fnstenv
test
mov
imulb
sub
arpl
sub
jle
inc
cwtl
push
sub
sbb
inc
pushf
lods
dec
sub
adc
cwtl
leave
cwtl
test
out
movsb
rcll
test
aad
or
push
dec
or
mov
cmpsb
inc
jns
cmc
or
mov
xor
and
fcomi
pop
mov
ljmp
popf
out
dec
shlb
fbstp
dec
stos
popa
mov
lds
ja
call
pop
jg
stos
and
jo
aaa
ror
in
adc
arpl
jb
mov
pop
jno
pop
adc
cmc
lahf
insl
jecxz
not
mov
mov
xor
pop
aaa
push
mov
sahf
test
stos
lock
xchg
comiss
outsl
or
add
out
shl
sub
int3
push
add
pop
mov
cltd
lds
xchg
push
push
ja
mov
xchg
jb
stc
xchg
dec
out
fcomps
fimull
mov
jle
int3
enter
mov
jecxz
xor
pop
sub
cmp
mov
ja
aad
mov
pop
mov
sbb
leave
aas
xor
dec
lcall
sbb
xor
mov
and
xchg
or
add
enter
insl
sbb
out
pop
mov
lds
mov
jae
nop
fucomp
pop
mov
loope
inc
pop
jmp
lods
jbe
mov
push
leave
adc
dec
stos
mov
rcll
loopne
out
jno
mov
cltd
mov
jg
loop
jecxz
xchg
repz
ss
nop
adc
sub
out
push
jecxz
push
fwait
sbb
fcom
fcmovne
xchg
paddsb
fmul
adc
outsl
pusha
vphsubdq
mov
jb
inc
jmp
movl
push
shrb
pop
sub
pop
repz
call
shl
movsl
popf
pusha
stos
adcl
data16
add
xchg
adc
movl
popf
popa
pop
cmp
arpl
call
hlt
das
sti
adc
inc
mov
stos
lahf
add
jae
jg
push
jnp
pop
cmp
cmp
xlat
inc
adc
cltd
loopne
stos
dec
or
insl
cmc
xchg
cmpps
daa
dec
cmp
xor
stc
inc
push
sub
xchg
mov
loope
mov
cld
lret
into
jl
fstpt
out
sbb
pop
cmpsl
jnp
orl
sbb
xor
mov
sbb
pop
mulb
add
loopne
lret
das
sti
inc
cmpsl
pmovmskb
lods
addr16
sub
sbb
lds
cs
jp
push
repz
xchg
xor
fmul
push
push
enter
xchg
cmp
bound
aad
pop
out
push
mov
addr16
and
test
sbb
jle
or
push
inc
pushf
hlt
push
push
mov
mov
dec
bound
lret
ds
std
xor
jmp
lret
fsubs
lret
mov
les
out
jl
les
nop
pop
shr
jmp
fwait
and
mov
jbe
int3
inc
push
cmp
fdivrl
inc
lods
and
xchg
push
popf
jmp
jmp
hlt
add
adc
movsb
scas
mov
cmp
inc
adc
cwtl
mov
jo
push
popf
in
mov
mov
xlat
mov
aad
clc
pop
add
sti
adc
or
push
jmp
dec
xor
add
jmp
or
cli
popa
and
cwtl
cmp
cmp
pop
cmpsl
pop
pop
cmp
mov
sub
mov
in
pop
repnz
hlt
sahf
les
ss
clc
inc
dec
adc
cli
sbb
sahf
addr16
test
insl
jns
inc
in
xchg
push
std
adc
cli
mov
add
push
rcrb
xchg
dec
adc
lods
xor
aad
lds
scas
ljmp
scas
cmp
insl
lea
in
scas
push
filds
mov
iret
add
lods
cs
mov
push
jmp
cmpsb
aas
in
mov
outsl
jbe
inc
dec
or
and
dec
cwtl
xchg
and
sbbl
js
ficomps
cmp
add
mov
frstor
xchg
fidivl
outsb
sub
xor
andl
fildl
xchg
sub
fwait
push
sbb
lea
xchg
and
push
jmp
jns
out
jp
add
stos
mov
mov
sahf
ss
jle
mov
hlt
jno
pop
adc
add
push
call
lds
sbb
std
sarb
cmc
outsb
mov
rorl
movsl
mov
daa
insb
imul
aam
xchg
inc
and
cmp
jge
jg
mov
lahf
arpl
cmp
jge
xor
jle
cmpsb
mov
outsb
std
jb
jmp
movsl
mov
into
out
cmp
push
xchg
xchg
mov
xor
cmp
xchg
addr16
sahf
stos
movsl
jg
mov
mov
jnp
jge
mov
xor
sbb
inc
dec
pop
loopne
and
pop
inc
iret
xor
pop
pop
sub
outsl
aam
js
xor
push
jnp
fdivrl
scas
xchg
gs
loop
subl
push
subl
cmpsl
es
daa
xchg
icebp
iret
leave
jmp
mov
icebp
xchg
jge
xchg
cmc
loopne
mov
sti
lret
xchg
js
or
notb
sbb
js
mov
jne
cmp
inc
dec
add
cmp
adc
mov
es
adc
xchg
xchg
lahf
mov
mov
mull
xor
lret
aaa
push
shll
and
inc
push
adc
mov
cmp
jb
xchg
int
in
adc
fldt
loope
repnz
or
imul
rcrb
adc
subl
pop
int3
push
data16
call
or
lods
cs
lcall
and
mov
sbb
push
adcb
add
jns
stc
out
mov
aad
lret
jp
mov
lret
sbb
adc
sub
adc
adc
movl
lock
hlt
add
std
xor
push
jns
loopne
push
in
xchg
dec
nop
sub
push
int3
dec
jns
adc
pushf
mov
dec
mov
ss
sub
push
xor
mov
movsb
rcrb
scas
cli
je
daa
cmp
in
xor
pop
clc
jp
test
ja
test
xor
jge
mov
cmp
mov
in
aaa
inc
cld
and
xchg
arpl
icebp
mov
je
imul
lret
sub
add
clc
iret
inc
subl
jae
inc
push
and
fcmovne
sbb
das
sub
push
outsb
mov
outsb
dec
nop
jge
adc
jl
dec
adc
jmp
icebp
jg
xor
fs
into
mov
pop
pushf
popa
js
and
fbstp
dec
pushf
dec
das
out
aaa
xor
add
push
in
mov
xchg
pop
imul
rclb
xchg
loope
nop
push
es
xor
xor
jbe
test
popf
imul
mov
mov
cld
jle
aaa
mov
mov
icebp
inc
ror
imul
and
lock
lods
xchg
xor
pop
stos
mull
cmp
arpl
mov
jns
lcall
mov
pop
cmp
lds
scas
add
sub
mov
popf
and
mov
pop
mov
sbb
fiadds
xor
inc
cwtl
inc
cmp
in
scas
divl
add
dec
lret
lods
sbb
rcl
movsb
mov
ret
dec
ficomps
test
jg
push
push
mov
push
jl
lods
sub
arpl
mov
and
push
push
pusha
mov
jno
cmpsb
jne
dec
ljmp
js
inc
jecxz
jp
dec
sbb
sbbl
pop
aad
jbe
test
loop
repz
fisttpll
iret
sub
sub
js
lds
add
lea
cltd
lds
jge
push
shlb
pop
insb
mov
inc
mov
xlat
push
adc
scas
cmp
sub
push
push
cmp
mov
stc
movsl
loopne
popa
rolb
xor
mov
daa
xchg
xchg
test
lret
add
test
mov
icebp
ficoml
xchg
es
imul
lods
stc
je
rcll
in
jle
jae
clc
outsb
icebp
rol
outsb
xchg
movsl
ret
mov
xchg
pusha
cmp
scas
pop
pop
add
fstps
inc
mov
mov
test
data16
icebp
data16
test
aas
inc
rclb
xchg
std
add
xlat
hlt
sbb
or
pop
cmp
icebp
mov
cmpsl
leave
cmc
enter
in
imul
jno
fistps
or
xchg
in
pop
cmp
pop
aaa
les
lahf
jne
fwait
add
andb
mov
out
mov
clc
xchg
mov
notb
xchg
cwtl
or
mov
xor
push
in
mov
pavgb
push
dec
fcomps
aad
xchg
addb
imul
pop
push
push
dec
andb
or
les
inc
inc
out
stos
xchg
mov
lret
pop
xchg
loope
roll
add
cmc
fcmovnb
bound
pop
push
jno
jg
in
js
add
loop
enter
das
or
add
mov
or
fld
stos
out
dec
enter
rcrb
mov
sbb
out
mov
mov
or
add
std
mov
js
sub
mov
add
pop
ds
pop
xchg
in
aad
movsb
push
mov
xorb
data16
push
xchg
adc
sti
sbb
dec
xchg
aad
sbb
fdivr
orb
inc
jns
or
loopne
pop
mov
loope
ret
or
mov
sub
scas
roll
aam
cmc
fcoml
in
out
inc
sub
jmp
add
xchg
cmp
push
ss
pop
push
arpl
push
enter
mov
stc
mov
inc
fld1
sub
mov
je
jge
cmc
pop
out
push
sub
and
push
inc
adc
lcall
ret
cli
ret
xchg
fsubrl
mov
sub
or
add
pop
mov
mov
pop
sub
or
cwtl
lock
ret
and
arpl
adc
out
add
mov
mov
les
mov
in
mov
dec
mov
sub
or
orl
mov
xchg
pop
adc
fimuls
xchg
xchg
in
jo
push
mov
insl
aam
imul
jns
adc
nop
sarl
in
and
daa
or
movl
lock
fiadds
loope
mov
sbb
push
pop
xchg
cmp
push
pop
insb
xor
and
stos
pop
stos
xlat
mov
cmpsl
gs
push
adcb
daa
test
or
pop
je
and
shrl
sbb
out
inc
movsl
pop
xor
adc
add
push
push
sarl
pop
sti
cmpl
lahf
sti
scas
cmp
cmp
test
xchg
jp
jb
es
in
cld
std
add
addr16
cld
and
push
rcrb
jnp
jp
push
cmp
gs
out
call
clc
lcall
and
cmp
imul
aad
gs
test
pop
fwait
jmp
lea
or
mov
int
push
fildll
add
icebp
scas
mov
push
xor
ljmp
sti
sbb
mov
daa
xor
pop
out
dec
xchg
pushf
imul
mov
xchg
push
cld
popf
mov
ljmp
shll
ljmp
jae
cmp
in
mov
pop
ds
push
dec
jmp
call
pop
movsl
ret
jb
int
popa
sbb
and
addb
mov
mov
xor
pop
xchg
sub
aad
mov
dec
fiadds
add
jge
shlb
clc
push
mov
mov
add
inc
cwtl
rclb
xor
repnz
add
sahf
cmp
loopne
repnz
pop
scas
lds
test
mov
mov
inc
ja
dec
inc
movsl
xor
dec
add
sub
fdivrl
icebp
call
mov
dec
inc
movsl
not
push
rorl
rol
js
xchg
es
mov
push
ret
cmp
adc
push
mov
in
jl
fwait
outsb
mov
pop
lock
adc
inc
jo
dec
push
rol
mov
inc
clc
inc
ret
and
test
and
adc
movb
test
mov
sbb
jp
and
std
aaa
test
xorb
call
jle
sub
pusha
in
xor
out
cmp
xchg
or
sub
xchg
mov
sti
inc
lcall
shll
sbb
outsl
xor
mov
mov
ret
lcall
xor
cmpsl
mov
adc
repz
gs
lock
jl
cmp
mov
mov
xchg
testl
in
sbbl
adc
ja
lea
mov
mov
ja
xchg
jge
daa
shlb
xor
addb
mov
test
cmp
ret
push
mov
movsb
add
repz
mov
mov
jp
inc
aam
fsubrp
lahf
sbb
std
repz
out
adc
rolb
rol
in
adc
sub
mov
push
movsl
leave
stos
call
jge
lret
and
fwait
push
repz
push
test
xchg
gs
dec
adc
dec
int3
mov
adc
popf
jbe
dec
pop
xchg
sub
mov
movsb
sarl
inc
dec
push
mov
popa
cmp
dec
lea
dec
std
dec
aas
sbb
fs
add
ljmp
inc
sbb
insb
adc
dec
iret
in
jmp
ja
fimuls
and
jb
mov
adc
push
fisubl
mov
cld
pop
inc
fadds
and
dec
jns
loope
scas
push
aad
cmp
cld
mov
xlat
ds
push
xor
ljmp
cmpsl
inc
adc
jno
fiaddl
ljmp
mov
push
cld
rcr
scas
iret
xchg
enter
orl
out
dec
adc
int
mov
sbb
fbld
rol
cld
outsb
xchg
loop
into
int
stc
push
cmp
imull
out
cmp
adcb
lret
in
into
sarl
fistps
dec
adc
xor
dec
cmp
stc
lds
push
mov
cmp
sar
call
stc
movsl
jae
ror
int
pop
pushl
jle
pop
fwait
jnp
pop
add
movsb
dec
adc
inc
mov
cmc
and
test
xchg
xchg
or
jns
sub
bnd
daa
cmp
jno
movsl
aas
in
mov
jo
in
sbb
and
pusha
fsubr
jnp
leave
inc
je
push
cwtl
in
cmp
xchg
stos
sbb
lahf
cld
sbb
rorb
xchg
insl
add
inc
fdivrp
cmpsl
jae
xchg
loop
mul
std
push
lods
pop
cmpl
or
rcrb
lods
test
push
in
pusha
xlat
cwtl
jae
mov
fnstcw
stos
mov
out
inc
mov
sub
and
notl
xchg
inc
loop
lods
aas
inc
call
jle
aaa
pop
ljmp
lahf
in
add
outsb
hlt
cmpsb
sbbb
push
jl
pop
in
repz
and
or
mov
mov
xchg
jnp
pushf
adc
data16
inc
xor
rcrl
das
xchg
dec
inc
sub
rclb
je
xchg
and
sbb
iret
data16
js
push
adc
xchg
frstor
out
faddl
lcall
lcall
dec
jno
leave
inc
sub
pop
in
cmpsb
lds
js
jnp
sbb
dec
sub
fldcw
sub
xchg
mov
add
insb
lret
push
jl
pop
cmpsl
pushf
call
sarb
out
addr16
or
aam
xlat
rcll
cmc
push
xchg
add
xor
adc
xor
sti
rcll
mov
jb
in
xchg
mov
call
call
pop
lds
popa
fmulp
mov
mov
dec
bound
cmp
xor
addl
jg
loope
icebp
in
call
pop
dec
xchg
jge
xchg
or
outsl
xor
mov
or
pop
mov
mov
shll
jl
fists
jmp
cmpsl
outsb
dec
add
adcl
outsb
loopne
fiadds
and
push
int
dec
jae
lret
sub
pop
and
adc
and
xchg
lcall
sarb
inc
sub
outsl
stos
arpl
sbb
mov
je
sub
arpl
xchg
out
jb
cmpsl
xor
jne
nop
mov
xchg
sahf
in
push
jecxz
adc
pop
hlt
popa
jg
or
mov
outsl
or
icebp
push
rolb
mov
lods
fdivr
pop
and
lea
movsl
xor
cltd
adc
mov
mov
xor
daa
rorl
xor
enter
ss
cmp
and
leave
stos
mov
xchg
sbb
lds
mov
rcrl
sbb
xchg
mov
ret
push
arpl
sub
dec
das
pop
inc
std
jbe
lea
rcll
jl
jno
addr16
stc
ljmp
pop
mov
cmc
sub
add
xlat
test
into
out
jne
cmp
add
adcb
jnp
push
push
xchg
adc
in
adc
stos
aam
out
mov
ljmp
insl
popf
movb
push
arpl
push
loope
lods
dec
push
push
pop
cmp
pop
ds
js
imul
jns
adc
not
push
cmp
lock
xlat
and
repnz
push
add
int3
xor
add
inc
iret
jnp
push
mov
fld
jno
outsl
insb
in
cmpsb
ljmp
popa
leave
cli
or
sahf
lea
mov
jmp
pop
or
test
push
pop
inc
loopne
insl
lods
add
push
dec
or
stos
xor
add
insb
fdivl
mov
aas
enter
sbb
loop
jecxz
dec
cld
push
xchg
hlt
js
dec
mov
bound
in
das
adc
push
dec
int
mov
rcrl
das
testl
into
dec
jo
das
push
sahf
ds
and
or
push
mov
adc
daa
pop
sub
ret
clc
rcrl
add
sub
mov
daa
mov
pop
js
xchg
pop
lahf
jb
clc
dec
aaa
lcall
in
or
cmpsb
nop
sbb
jge
inc
iret
mov
adc
stos
add
aad
mov
lods
mov
filds
ds
mov
pop
jae
mov
jb
ret
mov
adc
shll
cmp
pop
mov
or
pop
sbb
xchg
fwait
enter
xchg
and
jno
adc
sti
dec
push
push
sbb
loop
push
imul
pop
rorb
lea
cmc
es
push
mov
push
dec
mov
jmp
movsl
or
jle
xorb
aad
popf
insl
lods
jae
pop
sbb
mov
out
pop
lds
cmpsl
test
rcr
jbe
mov
out
cmp
addb
aas
ret
loope
addb
and
sbb
xchg
push
arpl
mov
dec
pushf
cld
and
push
and
or
in
lods
jecxz
mov
sbb
inc
pop
inc
or
subl
pusha
mov
aam
adc
test
mov
mov
movsl
in
dec
rclb
sarl
jns
fistl
sub
pop
hlt
add
stc
pop
addr16
loopne
lret
pop
inc
sbb
mov
pop
aam
push
mov
das
xchg
xchg
inc
xchg
out
jae
lods
inc
fs
repnz
inc
xor
mov
xchg
inc
rolb
mov
aaa
test
lods
adc
push
jo
out
ds
xchg
xor
xchg
adc
and
and
clc
psubusw
jl
subb
testl
arpl
das
xor
inc
push
xor
push
push
gs
adc
inc
inc
mov
jno
iret
test
movsb
sahf
xor
xchg
je
and
subb
cmc
cwtl
xchg
out
pusha
pop
fisubrl
mov
adc
sub
adc
xchg
data16
xchg
xchg
mov
cmp
jne
fcompl
mov
lock
mov
pusha
sahf
inc
or
out
mov
sub
aam
mov
add
xor
mov
ret
fiadds
mov
lcall
rcll
adc
mov
fcomp
inc
cmp
jb
mov
xor
and
adc
sbb
sbb
das
cli
sub
test
mov
jnp
in
ficompl
je
insb
inc
lcall
xor
pop
imull
mov
fadds
scas
mov
dec
mov
dec
imul
jbe
out
jge
adc
dec
sub
add
shll
notb
stc
xchg
dec
inc
shlb
movsb
jmp
aaa
xchg
fxch
pop
in
mov
inc
adc
jp
lahf
mov
ljmp
mov
jle
push
adc
jbe
mov
jle
lds
pop
push
dec
popf
ss
pop
popa
xchg
lods
notb
fsubr
inc
cltd
clc
mov
mov
jl
cltd
popf
lahf
fsub
mov
inc
out
lea
jl
das
popa
xchg
or
dec
mov
jle
push
xor
scas
fstl
nop
add
cmp
or
jns
pop
lcall
ljmp
jno
mov
adc
sub
pushf
int
sbb
or
mov
xchg
cwtl
mov
sub
shll
mov
xor
mov
icebp
xchg
ljmp
pop
mov
mov
popa
fwait
es
repz
push
pop
dec
sbb
leave
loop
movsb
jne
fdivrl
or
jl
in
xchg
repz
inc
mov
xchg
outsb
or
fnsave
in
out
in
jae
mov
in
ss
mov
ret
push
mov
sbb
ljmp
ficompl
sahf
filds
lcall
stos
add
orb
ret
hlt
push
xchg
lahf
inc
pusha
jp
rcrl
stos
neg
and
xchg
inc
pop
sub
imul
addl
dec
xor
xchg
inc
and
adc
mov
pop
test
call
psubw
jl
mov
xor
enter
xchg
or
jns
out
movsb
mov
fwait
sbb
dec
out
fbld
lahf
test
rolb
or
ja
aad
pop
clc
repz
fisttps
jbe
in
stos
xchg
cmova
xchg
cld
adc
dec
or
sbb
xchg
stos
out
aad
in
rcrb
cmp
add
sbb
and
shlb
mov
jl
pop
mov
rorb
cmp
xor
sub
and
data16
and
adc
cmpsl
enter
fwait
ja
arpl
lret
je
adc
fcoms
ja
push
sub
sub
hlt
sbb
mov
adc
test
and
outsb
push
mov
mulb
hlt
push
sub
and
repz
imul
dec
xor
movsl
mov
xchg
rcrb
pushf
add
outsb
test
data16
or
bnd
add
or
xchg
cmpb
test
push
pop
cmp
push
sbb
or
outsl
add
lret
cmc
je
jl
movsl
loop
and
movsl
lret
lea
sub
outsl
pop
or
push
data16
lea
jle
in
aad
lcall
scas
sbb
pop
movsl
pop
cmc
mov
jbe
pop
lods
pop
push
insb
mov
lock
dec
scas
xor
lret
pusha
stos
out
incb
clc
lock
leave
sbb
xor
mov
jecxz
xor
cmpsl
out
cmp
loop
out
es
fcoms
jmp
inc
mov
xchg
sub
sti
cmp
iret
in
pop
cmc
sarl
out
jns
adc
add
ret
testb
xchg
pop
mov
pusha
popf
and
gs
mov
jbe
cwtl
sbb
pop
mov
shrb
jg
jbe
or
xchg
cltd
pop
sarl
in
stos
into
clc
lea
dec
pop
mov
hlt
push
jmp
negb
clc
cmp
xchg
imul
js
cmc
call
arpl
xchg
aam
xor
loope
mov
xor
jae
inc
nop
int3
lods
pop
adc
imul
aas
xlat
push
fdivrl
call
repnz
jecxz
sbb
mov
fistl
and
movb
xor
pop
icebp
inc
jmp
dec
popa
cwtl
loop
int
lret
mov
xchg
inc
es
scas
fxtract
or
outsb
test
add
or
orb
sbb
cmp
nop
jecxz
cmp
movsl
cli
inc
mov
imul
sub
sbb
jo
jl
aam
xchg
lret
iret
mov
pop
add
and
dec
pop
mov
jne
stc
sub
lret
lods
aas
sbb
inc
dec
mov
stc
decl
pop
aad
in
mov
or
lret
jle
mov
jle
je
xlat
sub
out
je
sbb
loopne
ret
lods
je
xchg
xor
and
ja
in
push
pop
aam
and
arpl
cli
psubsw
push
fsubp
in
test
les
iret
add
shl
rclb
xchg
pushf
and
pusha
mov
jge
test
outsb
addl
dec
mov
data16
cltd
ficoml
push
sbb
sub
xchg
xor
pop
out
fisubl
sbb
aam
jb
fucomp
push
push
jecxz
imul
cmpsl
sahf
or
mov
gs
pop
pop
pop
fsubs
out
inc
push
aam
cmp
cmpsl
iret
les
jl
push
fstl
rorl
in
mov
mov
jmp
mov
mov
sub
mov
push
mov
cmp
mov
fisttpll
mov
stos
mov
dec
test
stos
roll
stos
mov
outsl
pusha
cwtl
fsubs
or
int3
stc
mov
jo
dec
in
jbe
cmc
cmpsl
in
inc
loope
and
fwait
sbb
mov
xchg
jle
adc
sbb
sbb
pop
or
xchg
mov
pop
int
fstps
sub
push
popa
push
stos
pop
inc
ja
pop
es
mov
xor
pop
arpl
rol
ljmp
in
stos
cmp
xchg
sub
into
lods
mov
movsb
rcr
jge
push
insl
mov
and
mov
mov
cmp
push
mov
adc
jns
in
jns
divl
jbe
test
idivb
adc
mov
gs
push
sub
adc
pop
xor
inc
mov
ret
jge
mov
cltd
inc
add
std
mov
cmp
xchg
inc
jg
and
mov
xor
and
sbb
inc
clc
rorl
dec
xchg
push
call
hlt
movsl
or
in
sub
out
or
subl
sbb
pushf
mov
popf
adc
adc
add
mov
xchg
cwtl
cmp
xor
sbb
mov
mov
outsl
icebp
lret
mov
adc
enter
inc
das
adc
mov
jb
push
xor
mov
repnz
clc
mov
insl
pop
adc
rorl
push
lret
jne
jmp
mov
xor
in
stos
scas
xchg
or
inc
enter
adc
xor
sbb
test
insl
xchg
jecxz
mov
add
add
call
fistl
sahf
imul
inc
sbb
adc
sbb
mov
fwait
xchg
loope
inc
fidivrl
imul
and
mov
and
sbb
xchg
inc
test
sbb
pop
xor
sub
dec
ret
xchg
shlb
push
mov
xchg
mov
add
vandnps
pop
es
insb
aaa
jae
scas
fs
arpl
lret
push
mov
add
insb
sbb
dec
lods
adc
enter
jae
pop
sub
ret
dec
fstpt
fsubs
out
push
mov
cmp
xchg
mov
xchg
pop
pop
mov
xor
add
dec
addl
fwait
pop
mov
int3
dec
mov
cmp
mov
pop
xchg
hlt
cmp
xchg
into
jmp
jae
lahf
jg
push
mov
push
jns
push
into
adc
test
add
jnp
mov
int
or
mov
or
inc
rorb
in
sbbb
test
adc
adc
aaa
jg
in
mov
loop
lahf
cmpsl
in
iret
xchg
sbb
xchg
dec
sub
fwait
cwtl
int
jmp
pop
ret
push
adc
dec
dec
push
inc
xor
rolb
mov
fwait
sub
or
jbe
inc
and
out
enter
add
fnsave
mov
out
push
addr16
cwtl
adc
fidivrl
jb
push
mov
and
xor
adc
xchg
fs
dec
cmp
sub
scas
stc
mov
xor
pop
adc
mov
add
dec
jo
push
cmp
jl
fadd
mov
xor
pop
jmp
in
out
loope
idiv
fs
pop
leave
out
adc
jl
cmc
mov
pusha
pusha
jae
mov
aam
je
clc
shll
arpl
pop
mov
and
jle
jns
mov
pop
icebp
mov
ljmp
clc
xchg
jnp
xchg
jge
push
jne
imul
and
jbe
out
pusha
movsl
push
lods
inc
lea
mov
outsb
popa
cld
out
ja
cmp
and
xchg
sbbl
ret
imull
push
fwait
or
divb
nop
les
into
pushf
pop
jmp
dec
mov
test
sub
les
jae
xchg
mov
js
in
xchg
inc
incl
repz
ret
pop
insb
cmp
adc
and
fnstcw
mov
scas
lds
pop
ja
cmp
cmp
movsb
pop
add
out
adc
xchg
dec
lds
sub
mov
in
lods
mov
jno
fcmove
sahf
xchg
adc
mov
std
cmp
leave
mov
inc
or
cmp
cmp
cs
stos
mov
cld
sbb
jp
loopne
stc
out
test
les
xlat
pushl
adc
lds
add
fiaddl
sub
mov
and
adc
mov
ljmp
and
fwait
dec
clc
jns
xor
cmp
cmp
jbe
sub
js
mov
out
fwait
rcl
or
sbb
icebp
call
dec
bnd
jb
aaa
insl
sbb
das
in
es
xlat
pop
jp
jp
jge
out
push
jmp
fs
mov
mov
push
push
mov
xor
mov
cwtl
push
sti
movsl
mov
xchg
sub
add
pop
lods
cmp
dec
bound
sbb
mov
jmp
mov
lret
scas
cmp
insb
xchg
sahf
bound
sub
add
pop
xchg
pusha
stos
xchg
mov
or
fimuls
dec
xor
mov
and
xchg
xchg
mov
loopne
ljmp
sbb
push
cld
sahf
lea
inc
inc
rorl
pop
mov
sbb
pop
cmp
xchg
out
jb
lahf
jmp
jnp
gs
shlb
dec
mov
popa
in
sub
mov
in
mov
push
rcrl
lcall
jl
scas
leave
mov
sub
pop
sub
lret
and
movsb
mov
sbb
jg
inc
fldt
and
push
xor
andb
sub
cltd
mov
push
sarb
ret
cwtl
jp
aaa
sbb
xlat
pop
repnz
xlat
movsl
iret
fcoms
cmp
push
push
mov
fnstsw
push
and
pop
loopne
sbb
popl
lods
das
adc
push
jmp
adcl
xlat
mov
push
arpl
xor
mov
and
dec
sub
push
cmc
dec
cmp
repz
fstps
mov
inc
mov
aad
dec
and
cwtl
push
or
cli
jle
test
dec
test
push
sub
dec
xchg
push
xchg
icebp
sbb
dec
jnp
lahf
pop
sub
enter
dec
lahf
push
mov
sub
scas
in
lds
aaa
mov
adc
sub
xchg
xchg
cmpsl
aaa
jmp
sbb
mov
test
gs
push
into
mov
xchg
cli
jnp
xor
xchg
test
sbb
xor
inc
sbb
sub
clc
dec
cmpsl
es
xchg
cwtl
or
sub
cwtl
mov
jmp
sbb
lds
mov
imul
mov
insb
xor
out
push
and
jae
pop
sahf
test
out
xor
mov
ret
icebp
popf
mov
aad
mov
push
out
aaa
push
outsb
repnz
sub
cmp
adc
shll
inc
xchg
out
jmp
rcll
mov
adc
test
xor
inc
and
fimuls
push
leave
mov
pop
cltd
insb
dec
cld
mov
pop
lahf
outsl
xchg
mov
lock
fcmove
jmp
outsl
insl
arpl
fisttpl
repz
sbb
fs
daa
adc
push
xlat
mov
aas
mov
fldt
fcoml
scas
ret
or
pusha
outsl
pop
xchg
hlt
fisttpl
mov
outsl
lcall
ret
into
add
mov
mov
mov
ds
cs
add
rcll
or
jo
mov
in
jge
ss
scas
and
and
xchg
popa
inc
daa
push
out
dec
mov
add
dec
nop
pop
xchg
inc
sub
mov
jnp
add
pop
xchg
mov
adcb
out
mov
jmp
xor
cli
enter
roll
ss
and
jns
popf
mov
dec
mov
mov
xorb
and
xchg
rorl
adc
orl
ret
jnp
stos
push
mov
je
shrb
xchg
shl
je
push
in
fldcw
lods
cmp
movsl
filds
sahf
lods
mov
sub
dec
sahf
out
mov
les
sahf
cmp
pop
popa
jno
lret
adc
xchg
rcrl
mov
out
or
and
mov
adc
xor
div
jge
and
scas
insb
out
fmuls
ret
rolb
inc
fs
sub
push
daa
icebp
push
push
cltd
xor
dec
jecxz
mov
or
test
fdivs
pusha
jle
xchg
int
mov
xor
lods
add
movsl
clc
fwait
add
xlat
sub
adc
stos
pop
popf
add
fldz
ljmp
pop
in
and
and
popa
shrb
add
jg
pop
cmp
cmp
mov
repz
push
jns
lret
mov
arpl
mov
or
jno
and
sbb
repnz
lea
lahf
sub
std
aas
rclb
jp
dec
xchg
sub
mov
push
push
sahf
scas
xchg
pop
cmp
aaa
cltd
cli
jno
rolb
or
jbe
loopnew
imul
mov
pop
dec
call
add
pop
ds
and
mov
rcrb
jne
lea
fiadds
adc
nop
and
cld
push
loopne
mov
dec
nop
mov
aad
ja
xor
xchg
test
jle
ret
je
mov
js
or
mov
cmp
jg
fstl
cwtl
xor
dec
fists
pop
add
jg
push
jmp
inc
jmp
loopne
pop
mov
adc
push
outsl
ds
in
jno
jno
jno
daa
push
pop
dec
jge
fcompl
cvttps2pi
mov
adc
or
xchg
icebp
jp
int
in
xor
call
push
sahf
jge
mov
jne
push
fcompl
cli
xor
sub
dec
and
int
jle
ror
ss
mov
lea
out
push
cld
testl
add
divl
cmp
ficompl
add
repnz
mov
inc
out
loop
fnstenv
jmp
cld
mov
and
out
das
mov
mov
xchg
in
cs
or
call
pop
and
lock
pop
mov
and
jmp
dec
mov
cltd
and
shl
sbb
mov
inc
mov
outsl
and
inc
hlt
data16
aaa
lcall
stos
shl
std
mov
pop
lods
test
jl
xlat
repnz
xor
cld
pop
repnz
xchg
xor
arpl
cmpsl
popa
mov
mov
out
push
sub
sbb
js
mov
test
xchg
push
iret
xchg
inc
inc
mov
and
pop
inc
jmp
mov
insb
xor
mov
test
cli
test
push
xchg
insl
mulb
daa
push
pop
loope
xchg
and
xor
mov
adcb
jae
push
jecxz
mov
repnz
mov
cmp
push
addr16
aad
mov
stc
gs
xor
or
or
pop
sub
mov
pop
mov
mov
sbb
std
rcrb
lea
pushf
dec
xchg
popf
ret
incl
add
ret
xchg
pop
into
std
sahf
cwtl
lcall
stos
nop
jnp
mov
cmp
sbb
pop
negb
mov
popf
into
insb
ja
push
stos
pop
cltd
xorb
mov
mov
decl
dec
sub
gs
and
dec
lea
stos
std
repnz
mov
test
jmp
jno
cmpsb
lcall
call
ljmp
mov
jno
add
leave
les
ret
dec
pmaxsw
pop
cmp
mov
jp
sar
lret
mov
mov
aam
sbb
hlt
cmp
shrl
cmp
arpl
lcall
daa
arpl
push
pop
xchg
fsubrl
repz
mov
xchg
clc
movsw
pop
xchg
jae
push
stos
fcoms
jbe
test
jns
icebp
scas
add
jne
ljmp
mov
jo
sub
dec
clc
outsl
mov
mov
adc
lahf
inc
int
loopne
mov
mov
add
ds
popa
jp
push
pop
sbb
insl
xor
jb
ja
xchg
lcall
pop
pop
mov
jg
mov
lds
inc
sbb
fisttpll
push
push
fstpt
dec
out
in
icebp
push
pusha
mov
iret
pushf
dec
push
loopne
and
pushf
mov
insb
fimull
cmp
add
stos
aam
push
sbbl
push
popf
mov
popf
icebp
roll
pop
dec
cmp
pop
xor
rcrb
pushw
subb
repnz
or
or
rcr
mov
std
jbe
fcompl
cmc
imul
push
into
xchg
mov
enter
rolb
sbb
imul
lea
cmp
sbbl
mov
dec
jae
xchg
test
js,pn
pop
mov
add
loopne
inc
orb
lock
mov
mov
mov
pushf
into
xchg
xchg
cwtl
push
inc
les
push
and
or
lods
mov
pop
jns
mov
loope
add
outsl
es
push
jo
push
dec
hlt
push
mov
das
lcall
push
aas
sbb
push
push
jp
out
jbe
cmp
aas
jmp
dec
mov
cmp
lods
jns
sub
push
mov
add
pop
mov
shll
iret
and
push
int3
das
xor
movsb
mov
adc
jge
and
hlt
sub
pushf
ret
mov
stos
les
inc
mov
pop
cmp
rclb
nop
clc
xchg
cld
push
xcrypt-ofb
cmpsl
imul
mov
in
pop
push
or
and
pusha
shrl
test
dec
sbb
lret
pop
cmp
popf
mov
negb
test
scas
das
in
or
sbb
es
mov
pop
loop
pop
inc
cmp
adc
mov
or
mov
int3
fstps
ss
dec
mov
or
mov
mov
mov
inc
add
adc
pop
cmpsl
xchg
into
mov
pop
xchg
out
dec
push
rcrl
jnp
mov
ret
jns
cmp
into
scas
lods
movsl
pop
and
test
in
mov
insl
fisubrs
jl
fnclex
fstps
mov
mov
cmp
pop
mov
pop
stos
fdivrl
iret
pop
jmp
cltd
push
shrl
aaa
jmp
pop
inc
or
test
popl
sbb
rorl
mov
out
ja
xchg
in
les
fsubrs
jmp
dec
mov
aad
add
loopne
cmp
stc
xor
cmp
paddsb
and
add
jno,pt
std
sub
fdivrs
push
ds
cmpsb
test
xor
ss
xchg
xchg
aaa
cmp
inc
xlat
dec
inc
jo
push
xor
repz
inc
inc
jl
cmp
jno,pt
mov
mov
das
nop
mov
mov
cmp
fs
mov
add
popa
xchg
in
add
test
adc
in
loop
xchg
icebp
mov
loopne
add
dec
push
mov
pushf
mov
push
aas
roll
pop
adc
ficompl
push
dec
orb
fwait
in
and
into
pop
pop
pop
test
cltd
leave
lahf
push
pop
in
cltd
rol
xchg
jns
xor
pop
test
ret
or
push
and
inc
cmpsl
out
insb
inc
push
jge
sbb
sarb
lahf
xchg
xor
les
and
int3
sbb
orb
and
cmp
pop
or
notl
or
add
mov
or
in
andl
adc
popa
sub
cmpsl
clc
popf
or
outsl
mov
out
cli
ss
aaa
xchg
xorl
sti
lahf
data16
and
fildll
push
dec
int
pop
sub
or
fsubp
pop
dec
jne
mov
push
imulb
adc
jl
add
push
data16
dec
out
bound
jp
mov
add
mov
push
cwtl
in
shl
push
adc
xchg
fdivs
pop
push
jo
push
and
pushf
sbb
test
and
inc
js
decb
fcomp
dec
jmp
ja
lock
mov
cmp
sti
push
cmp
or
sbbb
pop
add
adc
fidivrs
shlb
dec
lahf
syscall
divb
inc
ss
adc
fs
out
js
out
std
jbe
mov
pop
ror
int
cld
push
jns
lock
or
push
sbb
push
hlt
sub
fisubs
insb
lret
mov
sbb
inc
cmp
mov
and
fdivs
xor
mov
pusha
mov
loope
popf
arpl
mov
jb
jnp
movsb
mov
xor
rorl
adc
scas
push
xchg
shl
add
inc
in
xchg
mov
lods
sbb
jns
loopne
mov
dec
sub
mov
mov
add
mov
in
gs
adc
rolb
in
inc
clc
sbb
cs
push
in
mov
jb
pop
pop
sbb
in
pop
sti
roll
test
or
cmp
mov
out
cmpsb
ret
icebp
int
movsb
jle
jge
movsl
cmp
aad
mov
insl
xor
fwait
xor
and
ja
xor
sub
push
lock
mov
popa
repnz
adc
lret
dec
push
adc
mov
lods
xchg
mov
and
cs
loop
loopne
mov
inc
push
mov
xor
addb
mov
cld
das
lods
jae
xlat
or
fstpt
mov
push
xchg
stc
sub
push
mov
add
js
push
lret
loope
jge
xchg
and
xchg
xchg
jl
pop
fstps
push
fdivrs
jmp
jle
neg
jl
imul
push
push
aaa
jnp
lea
jecxz
fcomp
lret
ftst
add
scas
dec
gs
sbb
xchg
imul
into
std
mov
pop
xor
jbe
xor
lret
call
mov
push
xchg
loopne
fcmovu
dec
nop
push
sbb
dec
mov
push
fdivrp
or
hlt
dec
pop
out
sub
mov
pop
add
adc
sarl
sarb
mov
mov
xchg
or
mov
mov
cmp
hlt
or
lret
movsb
out
jb
cmp
mov
xlat
pop
cmp
mov
and
ds
gs
dec
ret
push
into
xor
iret
sbb
sbb
sub
fisttpll
movsl
dec
jo
es
nop
clc
in
rcrl
jo
sarb
jnp
dec
icebp
loopne
and
loope
push
adc
or
or
out
in
sahf
adc
loope
fs
js
repz
nop
div
sti
or
mov
cmp
add
dec
sub
inc
stos
mov
mov
or
and
mov
fwait
inc
rcrl
inc
dec
adc
jmp
ljmp
mov
jne
mov
dec
and
cmpsl
mov
out
push
and
or
ret
cmp
lea
leave
les
xor
mov
xchg
sub
mov
push
clc
nop
inc
sbb
jno
psubusw
ficoml
xor
dec
rorl
cmpsb
aam
loop
loop
sbb
inc
xchg
rolb
out
ljmp
cmp
adc
ljmp
out
lret
push
dec
push
and
xchg
mov
add
addr16
js
mov
and
add
sbb
in
adc
jb
pop
or
sub
xchg
mov
sub
repz
aad
jbe
dec
int
mov
in
shl
int
popa
jnp
das
cmc
insb
lea
fnsave
adc
inc
rorb
mov
jmp
aad
inc
mov
or
loope
mov
popa
int3
xchg
adc
stos
idiv
xlat
push
in
push
jge
and
push
cmpl
mov
les
sub
xchg
stc
sarb
pop
enter
jl
les
jae
push
xchg
lods
sub
jmp
sbb
sbb
adc
pop
pop
pop
aaa
xchg
adc
fsubrl
add
aam
lock
cmp
pop
inc
dec
sti
sub
sub
lret
push
loope
pop
jl
hlt
bound
xor
nopl
dec
daa
sbb
add
adc
cmp
lret
jae
pop
xor
mov
cmp
dec
sub
add
cs
sub
pushf
ds
jmp
jnp
jge
jnp
test
add
in
mov
or
or
or
lods
cli
inc
imul
int
test
daa
push
into
jae
aaa
popa
xchg
lret
adc
iret
xor
or
aas
imul
repnz
or
jmp
mov
inc
mov
sbb
fdivr
hlt
push
jae
in
sbb
shrb
add
into
xorb
shll
ja
test
push
and
add
jl
popa
adc
out
aas
mov
mov
inc
mov
addr16
mov
push
jecxz
fwait
aas
pop
pop
fucomi
pop
dec
addb
stos
mov
cmp
sub
cwtl
in
sbb
cs
sbb
out
sti
cmp
iret
orl
outsl
out
iret
mov
ds
test
lock
int
mov
roll
in
clc
inc
cmc
mov
pop
dec
pusha
mov
adcb
subl
imul
test
rclb
mov
sub
mov
pop
fs
adc
test
sbb
and
cmpsb
mov
add
mov
push
pop
jl
jo
sbb
xchg
pop
lahf
lods
mov
mov
in
ljmp
push
xor
sub
lahf
subl
out
cmp
sar
inc
mov
push
mov
add
icebp
cmpsl
mov
cmc
mov
inc
jne
sub
jnp
rorb
jp
xchg
sbb
pop
and
push
xchg
dec
adcl
in
mov
popf
jge
fsubp
rcl
gs
ljmp
pop
jb
push
mov
into
inc
std
lret
mov
add
icebp
push
dec
sbb
sub
lcall
testb
mov
stc
popf
mov
clc
jae
dec
pop
cli
xchg
bound
sbb
loope
push
mov
inc
or
push
adc
inc
imul
mov
pop
jnp
and
jg
movb
adc
mov
cmc
add
adc
stc
inc
dec
adc
mov
test
xor
xchg
loope
dec
or
repnz
pop
orb
in
mov
dec
into
push
jg
jg
cwtl
std
inc
dec
ffreep
jecxz
pcmpgtw
push
enter
push
push
scas
jmp
pop
or
jle
fnstsw
xchg
inc
outsb
lret
shrl
es
daa
and
adc
in
daa
imul
fisubs
mov
mov
xor
inc
repz
in
ja
ds
lds
fs
enter
sub
test
cmp
aam
out
clc
jle
jmp
add
sahf
fld
lcall
inc
inc
cmpsb
push
cmpsb
and
or
mov
aad
mulb
inc
pop
ds
and
hlt
jo
jno
fwait
sub
inc
pop
std
scas
add
lret
enter
fistps
adc
pop
add
fwait
jl
sub
xchg
jns
cmp
jge
jnp
mov
mov
popa
iret
popf
ds
pop
xor
pop
mov
loopne
xchg
pop
shlb
xchg
fistpl
xlat
mov
mov
mov
adc
fiaddl
test
insb
cmc
xchg
pop
mov
push
mov
mov
fidivs
scas
xchg
cmp
jp
sbb
int3
fbstp
imul
adc
add
mov
add
inc
or
dec
faddl
in
and
stos
mov
mov
sub
ss
ds
lea
cli
es
mov
pop
js
int
ss
cmp
sbb
les
mov
negl
inc
sub
cmp
mov
xchg
mov
movsl
or
int3
repz
xchg
dec
clc
in
addl
mov
rcll
test
push
movsl
mov
mov
xor
shll
int
push
fs
outsl
lods
popa
les
jmp
clc
cwtl
mov
or
xor
add
mull
fcompl
outsb
imul
push
mov
stos
ret
test
jbe
cmpsl
xchg
inc
je
and
insb
inc
inc
xchg
scas
call
cmp
outsl
add
adc
and
jl
das
cmp
or
jle
pop
enter
jbe
dec
inc
pcmpgtb
jb
mov
xchg
lret
jns
cmp
insb
out
xlat
movsb
repnz
jb
shl
addr16
test
sbb
jno
out
mov
popf
aas
daa
or
ret
mov
leave
inc
push
pop
inc
jmp
sub
test
sbb
jl
xchg
adcl
clc
or
and
mov
xor
mov
je
mov
addr16
mov
jbe
and
mov
loop
out
addr16
sarl
mov
mov
xchg
mov
outsl
and
mov
sahf
xor
js
mov
jge
cmc
das
dec
add
sub
out
daa
adc
popf
fwait
xor
andb
mov
or
mov
cmp
xchg
rcrl
adc
loopne
fidivs
movsb
jo
cmp
js
sub
or
fnstsw
sub
pop
loop
fidivrs
mov
jmp
repnz
xor
aaa
or
pop
push
push
dec
push
push
mov
out
ret
sbb
lea
and
pop
scas
pop
ljmp
movsl
dec
ror
push
jne
or
pusha
sbb
aad
jl
sbb
mov
test
mov
std
andl
jge
std
jmp
std
ja
inc
cmp
arpl
out
sub
sub
cmp
mov
cltd
shll
jbe
push
pop
pop
es
fs
lock
daa
lods
inc
jmp
cld
dec
pusha
pop
lods
gs
jge
cmp
inc
shl
js
xchg
ret
or
push
jo
xchg
inc
out
sub
cmp
fdivl
push
loop
cmp
cmp
dec
mov
xchg
sub
and
in
pop
scas
ficoms
fldcw
dec
and
jg
inc
push
outsl
lret
sbb
ficoml
and
mov
pop
frstor
and
movsb
jge
push
and
xor
ljmp
es
lock
movl
xchg
jle
inc
jmp
sub
adc
lret
scas
mov
inc
xor
add
push
jg
mov
and
mov
mov
cmp
lahf
push
jbe
push
dec
xor
aam
es
andl
push
daa
sbb
pop
mov
mov
jae
lods
pushf
and
pop
in
lock
xor
outsb
sub
jno
mov
outsb
dec
add
mulb
xor
iret
xchg
xor
pop
mov
lock
xchg
pop
mov
in
pop
pusha
pop
push
mov
ljmp
sbbb
cld
pop
pop
xchg
out
enter
pop
pop
cwtl
data16
in
mov
adc
cmpsl
and
es
push
xchg
sbb
jecxz
nop
mov
jl
pop
mov
dec
mov
pushf
scas
sbb
arpl
cmp
out
imul
jl
shr
cmpsb
loop
fadds
jns
js
loope
in
and
sbb
inc
sbb
cmpsb
jo
movsb
enter
mov
adc
mov
xchg
sahf
jo
loopne
jo
loope
pop
pop
dec
lret
dec
inc
xchg
xchg
pop
sbb
imul
scas
push
icebp
lret
mov
mov
fnsave
and
mov
xchg
stc
push
mov
popf
rcl
pop
inc
mov
cmp
sbb
sub
ficomps
aas
insb
inc
cmp
sbb
mov
outsb
jns
mulb
pop
push
clc
int
mov
arpl
inc
mov
xor
jl
sub
xchg
push
adc
test
cmp
and
rorb
loopne
jne
dec
add
std
int
daa
cltd
xchg
or
xchg
jns
fs
or
dec
sbb
pop
clc
mov
pop
dec
gs
sub
jno
push
adc
xor
lods
mov
mov
fcompl
mov
outsl
addb
jbe
xchg
and
dec
pop
push
jb
lcall
fwait
nop
jge
pop
lret
int
lods
mov
mov
add
sbb
into
outsl
jmp
mov
lods
pop
adc
and
dec
mov
lret
jno
scas
jo
add
cli
arpl
lods
lods
sarb
fistpl
pop
cltd
aad
inc
mov
mov
jmp
jnp
push
push
das
mov
outsl
mov
sti
mov
mov
incl
sar
rorl
hlt
jnp
dec
into
fidivrs
jae
mov
mov
jmp
fstpl
mov
mov
mov
mov
and
out
adc
jb
mov
rol
mov
and
mov
out
dec
xchg
add
enter
iret
lcallw
dec
mov
loopne
aas
push
gs
scas
cmp
sbb
les
es
aam
cmp
and
insb
adc
out
push
fmuls
ja
negb
cld
movsb
push
jo
mov
push
mov
cmpsb
and
mov
adc
test
cmpsl
inc
add
pusha
movb
inc
mov
cmpsb
shl
popa
xor
add
je
and
xchg
dec
xor
mov
cmp
es
sub
fdivr
adc
in
xchg
das
inc
ss
cmp
mov
pop
js
mov
lea
pop
dec
fsts
mov
nop
ja
and
jle
dec
or
xchg
jbe
inc
mov
and
and
jmp
cmc
pop
pop
sbb
aaa
inc
sub
sbb
jns
or
lcall
aaa
add
inc
adc
xchg
pop
orb
dec
mov
or
or
push
pop
js
ljmp
jae
mov
dec
cli
mov
daa
and
push
out
adcl
aas
insb
btrl
mov
mov
leave
scas
stos
adc
adc
dec
inc
push
adc
jmp
push
in
jne
rcrb
jno
cmpsl
repz
daa
jo
inc
mov
dec
pop
adc
push
in
cltd
pop
sbb
xchg
mov
in
call
sbb
dec
call
in
cli
adc
rorl
xchg
mov
incb
adc
insl
ret
jns
sarb
jge
jecxz
mov
cs
in
fsubr
xchg
into
aam
dec
outsb
xchg
popa
rcll
fmuls
jbe
jo
jp
fildll
mov
mov
xchg
out
stos
in
mov
aam
sbb
je
hlt
lahf
nop
pop
pop
push
shrl
jnp
gs
in
jns
jb
cmc
jle
inc
lret
push
jns
jb
dec
loopne
pusha
jnp
mov
shrb
mov
cmp
mov
dec
in
test
and
inc
cmc
fwait
mov
call
inc
adc
add
insb
aam
xchg
lds
inc
and
cwtl
mov
mov
cs
bound
push
mov
das
jp
mov
fidivs
testb
cmp
adc
jmp
mov
or
inc
pop
mov
adc
scas
mov
and
inc
sub
cmpps
jl
fsubl
in
cmp
mov
sbb
mov
sti
and
cltd
ret
dec
rorl
stc
cmp
sbbb
mov
xchg
imul
fwait
nop
inc
jns
mov
dec
and
sub
mov
shll
dec
mov
xchg
mov
jnp
adc
lahf
or
ljmp
data16
mov
push
cs
jmp
sub
sbb
xchg
sahf
shl
sub
jg
call
sahf
popa
outsb
stos
push
jge
inc
and
and
sbb
inc
pop
xchg
cli
out
aam
jmp
arpl
imul
sub
jge
aas
jle
cmpsb
loope
jbe
ret
addr16
je
loopne
test
jge
adc
add
test
out
jmp
aad
xchg
pop
adcb
add
fstpl
dec
xor
or
sbb
mov
xor
jmp
push
adc
lods
mov
cmc
sbb
in
pop
out
lods
lret
dec
and
jl
push
into
add
pslld
or
or
xor
pop
clc
stc
in
dec
xor
or
pop
bound
sbb
dec
and
sahf
pop
les
xchg
mov
mov
ret
cwtl
lahf
sbb
mov
out
adc
out
mov
push
adc
xor
lret
loopne
xor
scas
mov
outsb
ljmp
dec
cmc
jp
fadd
rol
sub
into
add
je
dec
lret
dec
push
or
dec
ret
mov
or
inc
push
jbe
cmpsb
jbe
aas
push
xorb
imul
push
xchg
ljmp
push
fldenv
xor
dec
clc
xor
jns
paddd
xchg
div
loop
cld
sbb
pop
cmp
dec
pop
loope
push
int3
and
cltd
fldl
push
jle
push
dec
iret
jg
call
inc
adc
or
sub
lds
outsb
in
imul
cmp
cmp
pop
fs
mov
orl
pop
sbb
lret
in
rcl
out
out
mov
mov
es
xor
outsb
loopne
cli
scas
nop
xchg
enter
cld
jns
lods
cmp
add
aas
inc
pop
rclb
mov
jno
imul
sbb
idivb
in
inc
call
adc
lds
mov
dec
aam
pop
mov
xor
lahf
pop
xor
push
dec
ja
xchg
mov
inc
jb
or
add
adc
dec
jp
mov
xor
ret
sbb
cli
pop
push
jmp
lods
das
mov
sahf
test
mov
jo
gs
push
mov
iret
adc
pop
push
jae
imul
xor
rol
inc
or
arpl
je
cmp
xor
test
icebp
leave
popa
push
rcr
xchg
xchg
push
inc
jae
pop
imul
inc
or
shrb
les
xchg
daa
pop
dec
pop
mov
test
jae
fimuls
out
test
mov
insb
insl
data16
adc
mov
enter
lods
adc
stos
cmpsb
pop
in
shlb
push
xchg
add
pop
cmp
cli
gs
cmp
mov
test
in
mov
pushf
inc
insl
mov
fisubrs
and
mov
push
xor
lahf
ffree
cmp
xchg
dec
jbe
cs
test
mov
pavgb
loopne
jne
test
out
cwtl
mov
bound
add
sub
ret
or
shll
rorw
sbb
imul
mov
jg,pt
ljmp
imul
mov
jp
data16
adc
in
or
push
and
sub
add
fs
dec
mov
mov
push
cmp
lea
fwait
cli
xor
inc
mov
in
icebp
enter
push
lock
fistps
sti
adc
fsubl
pop
inc
jmp
ret
jmp
add
cmpsb
mov
nop
into
push
cmp
cmp
sub
sub
mov
stc
xor
xchg
sub
cmpsb
and
bound
xor
push
and
movsb
aad
dec
notl
inc
mov
aaa
fsts
inc
push
repz
stos
imul
xor
divl
les
mov
imul
adc
jp
sbb
xor
lock
ss
or
push
add
xor
punpcklwd
jb
xor
scas
push
add
stos
pop
push
cltd
pop
jb
sahf
dec
mov
add
inc
or
jge
cltd
dec
mov
out
or
jle
stc
xchg
sar
test
lock
pop
mov
mov
inc
popa
sub
sub
or
cmp
mov
push
mov
js
pop
cmpsb
push
mov
xchg
push
rcrl
repz
aas
lock
inc
xchg
push
xor
inc
push
xchg
push
or
idivb
in
mov
insl
inc
movsb
push
ljmp
add
add
xchg
divl
decb
andb
jne
leave
lret
sub
in
cld
dec
sbb
cmpsl
in
stc
std
push
jbe
lcall
push
out
pop
pop
push
outsl
and
in
sbb
mov
cmp
mov
lret
sbb
loop
cmp
lock
pop
mov
into
imul
sub
stc
xor
jno
and
and
cmp
stc
cmp
jo
xchg
sbb
popa
jae
mov
or
or
leave
mov
cmc
sub
lret
push
fcmovnu
aam
mov
scas
in
scas
ficomps
pushf
jp
xor
fistl
aaa
pop
xchg
imul
cld
push
pop
xor
outsb
aaa
clc
ret
ret
shrb
mov
dec
cmp
and
in
push
pushf
fsubrs
pushf
or
pop
aam
sub
mov
mov
movsb
pop
mov
repz
cwtl
push
fisubs
lahf
mov
jne
xchg
jg
dec
push
mov
and
cltd
dec
cmp
cmpsb
pop
inc
push
fiaddl
mov
inc
jns
les
rorb
cld
cmp
out
cli
cmp
popa
inc
xor
aad
hlt
les
ret
push
ja
add
xchg
dec
push
push
jle
dec
les
cmp
lods
push
mov
adc
mov
dec
lret
ss
and
scas
sub
into
pop
adc
jns
daa
and
sbb
enter
and
mov
iret
nop
fcmovb
pop
shl
cmp
jo
add
mov
mov
mov
lods
pop
inc
icebp
sarb
add
fadds
lods
lret
jne
repz
xchg
jbe
sbb
int3
lahf
jbe
or
and
ret
cltd
sub
je
sub
ja
and
lea
mov
outsl
xor
push
cmpsb
verr
outsb
insl
xor
in
or
dec
mov
divl
inc
pop
mov
pop
push
jo
xor
inc
xchg
pop
je
and
das
push
testb
dec
xorl
aas
pop
bound
mov
cmpsb
push
sbb
push
jg
subl
rorb
xor
stos
sbb
sub
jp
pop
push
insb
aaa
xchg
fucomi
dec
out
ror
leave
loope
mov
xchg
test
ret
xchg
jl
xlat
stos
insb
xchg
push
mov
jbe
or
mov
aad
scas
out
add
movsl
pop
sbb
lahf
dec
sub
loope,pt
es
loop
loopne
fmuls
cmc
repz
add
and
pop
int
je
test
verw
sub
mov
inc
pop
in
test
dec
push
shll
sbb
adc
sub
push
push
add
ds
mov
setle
test
je
clc
mov
mov
xor
leave
sbb
mov
xchg
mov
sbb
adc
inc
js
dec
jecxz
jo
fidivrs
mov
or
xorb
out
push
cld
mov
daa
pop
adc
pop
sub
sbb
shrl
test
mov
xchg
std
add
aam
sub
decb
fnstcw
pop
inc
sub
popl
inc
sahf
mov
pop
mov
mov
mov
pop
cli
push
enter
adc
out
mov
add
mov
fimuls
jle
jb
adc
mov
faddp
dec
dec
pusha
mov
dec
push
rcrb
push
insb
pop
repnz
loop
xor
push
mov
inc
xor
add
jmp
sbb
add
lods
sbb
aam
mov
adc
push
jae
roll
lea
mov
sbb
mov
mov
rcr
notb
pop
js
dec
mov
daa
or
inc
in
jmp
scas
xor
je
sub
jle
jmp
lea
jo
mov
cmpsb
jne
iret
and
adc
cli
ss
mov
call
scas
aas
pusha
outsb
call
and
pop
std
xor
cli
sub
pop
fidivrl
shll
test
nop
out
inc
adc
repnz
push
repz
jns
mov
imul
mov
jo
mov
sbb
sbb
ja
cmp
ss
mov
inc
out
test
push
adc
mov
stos
xor
inc
jp
jmp
pop
notb
inc
inc
and
inc
lods
xor
mov
jns
leave
mov
pop
pop
or
xor
outsl
mov
daa
or
jge
mov
jg
and
mov
fs
mov
and
dec
xchg
clc
mov
std
fcompl
jecxz
push
push
xchg
or
ss
sahf
rcrb
repz
lahf
dec
gs
pop
inc
mov
clc
dec
cmpsl
fxch
fcompl
adc
or
pop
cli
sub
clc
or
test
sub
int3
mov
nop
cmp
gs
cmpl
ret
adc
fisttpl
std
in
decl
adc
in
xor
mov
add
scas
mov
out
mov
mov
in
pcmpeqb
iret
sub
mov
cmp
clc
cmc
cwtl
scas
nop
xchg
loopne
sub
inc
push
repnz
clc
cs
leave
jmp
sub
pop
push
movsb
std
or
bnd
movsl
dec
pushl
push
xchg
aam
mov
jmp
push
je
and
cli
out
std
push
in
ret
xor
mov
sbb
fsubp
xor
add
movsl
ljmp
jns
add
nop
xchg
jge
mov
lea
xor
pushf
mov
push
fidivl
ds
sbb
call
push
hlt
xor
ja
ss
pusha
ficompl
adcl
xor
nop
mov
mov
sbb
and
cmp
fisubrl
push
pop
mov
scas
out
lcall
mov
in
add
push
push
push
int3
stos
shll
repz
cmp
inc
push
and
add
mov
in
add
fcmove
dec
shlb
lds
dec
in
xchg
sbb
insl
leave
mov
xchg
in
aam
sub
or
sub
mov
addr16
addl
cmp
xchg
in
jo
fs
and
cli
xchg
std
lock
adc
out
pop
movsb
int
test
addr16
out
fbstp
lret
xchg
mov
xor
fldcw
inc
xchg
push
repz
int
adc
push
clc
adc
sbbb
rcll
xlat
mov
jecxz
repz
aas
mov
sub
mov
pop
into
jb
fidivl
sti
cmpsb
jne
add
inc
pusha
pop
cmpb
xorb
aaa
xor
addb
mov
andb
push
mov
mov
xchg
jns
std
filds
negb
mull
nop
dec
adc
mov
sub
das
pop
adc
imul
cmp
and
cmp
sub
insl
mov
sbbl
sub
xor
lods
inc
bound
hlt
xchg
xchg
cmc
cmp
jmp
xlat
sbb
adc
pop
out
adc
pop
mov
add
mov
mov
mov
xor
nop
sub
roll
loope
ljmp
adc
pop
inc
roll
jno
test
mov
dec
aas
dec
test
mov
xor
cli
mov
stos
jg
sar
and
mov
push
add
lock
outsb
out
shlb
push
mov
das
mov
popa
sub
dec
std
leave
lret
lds
inc
lock
pop
lret
test
jo
sti
push
push
leave
dec
mov
cwtl
jp
sub
mov
imul
sub
rcrb
mov
insl
iret
gs
pop
mov
xchg
lods
mov
test
outsl
mov
bound
sub
xor
jecxz
dec
sub
jns
shl
push
daa
aam
test
rcr
sbb
pop
repz
push
test
pop
sub
xor
cs
int3
jno
test
or
fwait
lods
les
mov
inc
movsb
sbb
lds
and
jno
inc
and
loop
aaa
addr16
mov
dec
vmread
push
inc
imul
push
mov
sti
and
push
test
inc
mov
mov
mov
adc
push
test
fs
or
dec
sarl
gs
adc
aas
mov
push
push
and
in
and
and
rcll
dec
adc
sbb
jmp
lret
sbb
and
mov
leave
xor
push
add
xorl
int
repz
std
lods
rclb
or
dec
shrl
jae
lret
scas
nop
sahf
push
pop
mov
mov
jno
jmp
dec
test
cwtl
clc
imul
pop
jno
sti
mov
sbb
add
push
cmp
not
sub
mov
outsb
mov
push
fmull
loope
cwtl
mov
mov
mov
add
imul
adc
pop
mov
insb
rorb
iret
jecxz
test
cmp
mov
ret
or
pop
mov
push
mov
js
jmp
or
inc
in
mov
add
pop
pop
pop
sub
nop
mov
inc
add
sbb
cmp
cmp
outsl
cmp
das
es
adcl
je
pop
xchg
jle
xchg
mov
pusha
cli
inc
sbbb
and
or
decb
jae
repnz
pushf
in
ret
cmp
jp
out
cmp
lds
ret
arpl
stos
rcll
pop
sub
cs
call
jne
sub
mov
data16
fadds
bound
push
ja
or
pop
sub
mov
xchg
imul
cli
outsb
adc
inc
jmp
fistpll
xchg
inc
ret
xchg
xchg
cmp
inc
inc
sti
xchg
in
jbe
lods
ja
fistps
fdivrp
inc
push
or
ret
dec
jl
out
cltd
inc
mov
aam
add
or
cmp
mov
add
es
in
xor
adc
inc
out
shr
pusha
xchg
jmp
out
aam
insb
inc
or
jmp
mov
popf
mov
aam
and
in
inc
pop
push
cwtl
xchg
xor
dec
xchg
rcrb
xchg
pop
insb
insb
test
xchg
aam
mov
inc
adc
dec
addl
mov
arpl
or
mov
mov
lret
jae
dec
out
pop
push
outsl
stos
dec
icebp
mov
xchg
cld
pop
sub
sarl
sbb
addr16
popa
xor
sub
push
jbe
push
jne
push
sarl
xchg
icebp
dec
rolb
or
lods
add
lcall
into
ret
stos
xchg
lret
sbb
mov
lret
xchg
and
mov
xchg
mov
imul
popa
sbb
sub
or
pop
test
stos
mov
stc
stos
dec
fistps
les
push
pop
add
inc
cmpsb
popa
int3
dec
pushf
and
daa
stos
lcall
sub
jo
and
call
lcall
dec
in
add
jecxz
xchg
jns
mov
jns
mov
scas
shlb
leave
push
jmp
cmp
jp
ret
ds
outsl
lock
inc
arpl
sti
movsb
daa
ret
inc
add
adc
fildl
ret
in
jl
jb
outsl
mov
or
aas
push
sub
inc
sbb
inc
test
jecxz
jl
lods
decb
jno
jne
mov
aaa
mov
push
inc
sahf
add
mov
test
imul
lds
xchg
add
ds
inc
sti
cs
push
push
int
sti
sahf
std
aaa
push
cltd
call
sbb
jno
sti
ljmp
aas
pop
jge
inc
cmpsb
in
and
sbb
jb
mov
leave
in
push
add
enter
fstps
cmp
jl
loopne
insw
enter
pavgb
es
int
mov
shrb
add
repnz
arpl
in
xor
pmaddwd
lea
push
subps
movl
pop
lcall
jb
mov
cmp
mov
test
clc
jecxz
pop
gs
adc
test
repz
mov
das
push
adc
pop
in
adc
cmc
mov
fidivrl
cmp
xchg
dec
leave
mov
inc
jo
or
pop
mov
cli
ret
xchg
pop
xlat
xchg
xchg
test
mov
jmp
mov
jae
mov
hlt
jnp
add
in
pop
jns
jno
icebp
sub
jno
scas
mov
jp
sbb
out
mov
es
cmpsb
popa
sub
pop
into
and
xorl
shrl
or
pop
or
mov
stos
das
cmpsb
add
xchg
adc
nop
roll
jbe
inc
xor
int
ss
push
in
mov
push
lds
push
lcall
mov
and
inc
ds
add
xor
popa
dec
subb
mov
out
or
mov
popa
jp
mov
mov
jg
pop
insb
jo
stos
push
dec
cwtl
ss
jno
shlb
mov
cmp
gs
call
mov
loop
or
fucomp
sub
daa
ret
hlt
pop
adc
mov
push
enter
xor
test
das
pop
lahf
jmp
lret
movl
xor
xchg
xor
sbb
cmp
mov
leave
sbb
dec
push
xchg
mov
cli
add
addr16
and
or
outsl
inc
inc
pop
out
mov
add
sbb
loope
mov
xchg
lcall
lret
jge
jae
add
push
xchg
jle
rolb
jecxz
insb
sub
out
pop
mov
sahf
mov
lahf
leave
inc
ds
pop
dec
imul
xchg
ror
xchg
loopne
and
dec
stc
cmp
mov
mov
insb
jnp
fiadds
aam
cmp
xchg
scas
jecxz
sbb
pop
nop
cld
loopne
stos
cmp
aad
nop
inc
add
pop
outsb
lock
mov
gs
and
inc
sbb
filds
mov
push
add
scas
scas
cltd
test
sarb
outsl
sbb
in
cmp
hlt
cmc
push
pop
out
adc
mov
loopne
jne
jle
mov
adc
js
pop
adc
repnz
jno
xor
jo
mov
inc
jg
mov
lret
mov
imul
sbb
jecxz
mov
mov
iret
mov
stc
xor
xchg
mov
or
xchg
or
or
fmull
lods
jo
adc
hlt
test
stos
jmp
imul
std
std
push
sub
std
cltd
pusha
xchg
pusha
enter
divb
leave
testb
clc
lods
dec
push
cmp
arpl
xor
jae
rcll
clc
nop
jbe
mov
adc
xchg
aam
mov
adc
push
jno
and
daa
inc
cmp
cmp
inc
addr16
add
push
out
inc
test
stos
mov
push
sub
add
lahf
call
lods
div
push
inc
inc
mov
xchg
adc
push
enter
xor
xor
cld
xlat
test
push
sub
hlt
xor
pop
addl
rorl
dec
aad
or
insb
fucomip
js
fcoml
les
xchg
bound
and
ret
mov
in
pop
and
pusha
xchg
mov
ljmp
push
leave
gs
xor
inc
mov
fists
jno
jecxz
je
xor
cmp
mov
inc
loop
xor
or
xor
mov
je
dec
adc
vmovdqa
cwtl
or
outsb
pop
and
sub
nop
adc
push
in
pop
mov
mov
clc
push
mov
pop
mov
sbb
mov
jbe
cld
sti
inc
mov
inc
push
int
dec
int3
daa
insb
and
xlat
pop
test
dec
inc
mov
xor
outsl
cs
int3
sahf
imul
test
loopne
push
sahf
nop
push
pop
sti
sub
and
inc
stos
jle
rclb
sahf
int3
inc
stos
add
sbb
dec
loope
push
nop
ret
pop
das
incl
pusha
aas
inc
push
inc
mov
cmpb
inc
dec
hlt
sub
xor
cmp
xchg
fcoml
ret
xor
mov
arpl
rcrb
loop
lahf
lods
imul
mov
jge
pushf
leave
adc
shll
mov
mov
mov
jb
sub
aaa
push
es
out
inc
mov
adc
roll
sub
adc
sub
imul
lret
mov
mov
repnz
mov
lea
mov
push
mov
jmp
outsl
or
jne
inc
xor
inc
imul
sub
jmp
fsubr
movsl
xchg
cwtl
addl
insb
cmp
pop
cmp
mov
repz
test
aaa
call
dec
cmp
mov
scas
jmp
push
inc
ds
insb
test
lds
into
mov
fucomp
call
sub
mov
sub
mov
inc
fmuls
push
aaa
ror
jge
adc
loop
std
je
das
fsubl
das
int
xchg
fwait
repz
pop
jae
adc
jmp
pop
popa
test
mov
and
shl
sbb
fnstenv
mov
popf
mov
jae
sbb
xchg
jp
xchg
sub
in
cmp
or
pop
xchg
push
popf
insl
xchg
adc
xor
daa
mov
pop
lods
out
popf
jae
mov
aad
cli
stos
arpl
push
add
sbb
push
in
ljmp
mov
mov
popf
pushf
aaa
or
pop
or
cmpsb
rorl
cs
aam
sbb
adcb
push
xor
pop
cmc
mov
dec
adc
fiaddl
add
inc
imull
test
cmp
jge
dec
sbb
and
sbb
es
xor
push
sbb
sbb
pop
mov
pop
icebp
ljmp
lock
mov
stc
das
lea
movsb
sbb
clc
lock
push
pavgw
bound
stc
fld
inc
test
cmp
int
arpl
outsb
pop
jne
xchg
lock
stc
sbb
loopne
pop
out
ret
mov
mov
std
cs
sub
mov
int
inc
pop
aad
testb
xor
dec
mov
int
add
ja
cmpsl
sub
mov
push
and
push
push
jmp
or
clc
inc
push
xor
loop
icebp
jb
daa
pop
repz
jns
add
adc
xchg
sbbl
sub
clc
mov
in
sbb
sbb
adc
sub
aas
imul
das
insb
rclb
fsubrs
fwait
pop
mov
hlt
xchg
push
xor
sub
repnz
ss
in
mov
sbb
outsb
cli
popf
mov
push
sbb
adc
cmp
push
popa
cmp
popa
sub
add
mov
xor
and
pop
cli
ljmp
adc
push
subb
ret
scas
in
in
dec
pop
sarl
push
test
test
in
or
ljmp
fmull
fnstcw
push
sbb
int3
addr16
jns
jb
fisttpll
or
inc
adc
stos
int
clc
je
pop
or
pop
mov
cwtl
cld
mov
decl
mov
stos
add
dec
shll
imul
pop
pusha
popa
adc
pop
mov
mov
bound
cmp
lcall
out
js
add
and
adc
and
sub
scas
mov
push
mov
stos
jno
es
fsin
cmp
dec
pop
mov
sbb
inc
dec
test
mov
push
and
rclb
push
jae
xchg
or
movq
test
mov
sti
xor
cltd
out
fdivs
fld
stos
mov
les
pop
lock
not
jg
mov
push
aas
popl
imul
dec
sbb
rolb
out
sbb
push
sub
pusha
push
imul
jbe
push
xorb
les
in
and
pop
mov
mov
cltd
fmull
mov
ret
or
or
dec
inc
and
aad
icebp
ljmp
dec
dec
xchg
addr16
dec
lds
enter
mov
fs
loopne
push
addr16
pop
imul
movsl
dec
jg
inc
pop
lds
imul
aas
ds
xor
sbbb
inc
or
xchg
mov
pop
jmp
pop
cld
and
das
xchg
adcb
enter
out
push
hlt
fsts
push
mov
and
bound
xchg
pop
loope
xchg
xor
clc
push
push
rolb
fwait
in
gs
cli
adc
cwtl
aas
stos
sahf
movsb
in
sahf
imul
mov
jae
fisttpl
decb
sti
dec
pusha
or
mov
das
ljmp
adc
and
mov
jg
fwait
adc
cltd
and
pop
aad
mov
sbb
mov
pop
mov
iret
jbe
in
rcrb
into
lock
and
icebp
or
push
popa
in
shll
xor
std
mov
mov
xchg
rcr
aaa
lret
jmp
rcrl
scas
mov
xor
sbb
dec
out
addr16
sbb
ret
int3
test
mov
inc
outsb
and
dec
loop,pt
jg
leave
lods
xchg
mov
cmp
xor
cmp
dec
mov
sets
inc
push
clc
negl
inc
add
fimuls
push
ja
jae
insl
icebp
insb
inc
adc
mov
jg
sub
movsb
sub
scas
fbstp
mov
dec
lods
mov
loopne
cmp
inc
fdiv
xchg
cmc
stos
mov
dec
inc
mov
sub
into
xor
jns
dec
mov
push
lcall
inc
daa
adc
add
dec
and
jp
dec
filds
mov
sahf
sbb
push
dec
mov
sbb
lods
adc
add
cs
scas
adc
bound
xchg
cmpb
inc
ljmp
es
in
cmp
dec
outsl
sub
fwait
jbe
insl
sahf
xchg
mov
andb
add
lcall
stos
jmp
iret
dec
in
outsl
mov
call
shll
sub
cmp
in
jb
and
fs
cmp
inc
outsb
mov
std
dec
jle
jns
out
and
lret
jge
test
pop
in
sub
jle
pop
inc
aaa
push
sbb
sub
pushf
scas
add
repnz
insb
lds
dec
fnstsw
ja
sbb
sti
mov
orl
fsubrl
inc
inc
add
out
test
pop
sbb
and
cltd
mov
popa
cld
sub
push
add
lods
mov
push
sub
sbb
fisttpll
imul
pop
and
cmp
push
sub
jbe
mov
cmp
loope
xor
fnstenv
push
pop
xor
cs
mov
inc
push
stos
outsb
push
dec
test
stc
cli
push
inc
push
into
and
into
cmp
sub
lods
int
divb
push
xchg
loopne
jb
xchg
lret
adc
lret
and
inc
sub
jecxz
xchg
add
xchg
cmpsb
jno
xorl
insl
jg
subl
mulps
inc
xchg
xchg
or
and
lock
sub
mov
test
mov
sbb
and
es
stos
adc
test
andl
icebp
test
mov
adc
imul
push
movsb
ja
inc
mov
jno
enter
call
fisubrl
cmp
andb
into
dec
inc
lods
imul
testl
popf
fisubrs
push
ljmp
jo,pn
faddp
adc
in
push
aad
dec
lods
dec
add
push
inc
mov
sti
pop
push
leave
popa
inc
icebp
in
and
in
mov
sti
mov
not
imul
in
notb
cmc
mov
mov
test
jp
sti
mov
jno
leave
pop
jl
loop
incb
add
mov
data16
lret
loopne
test
jp
xchg
inc
inc
popf
and
push
test
in
imul
lahf
jle
sub
cmp
popf
dec
in
cmp
jbe
sub
jecxz
leave
inc
push
push
pop
cmp
popf
repz
pop
lea
push
mov
outsl
pop
popa
jmp
leave
mov
mov
add
inc
add
pop
mov
pop
and
jle
ret
hlt
aas
cmpb
sbb
pop
sbb
lock
sbb
sub
call
mov
sub
dec
adc
push
xor
sub
pop
addl
sub
xlat
and
aas
push
mov
ss
push
push
cmp
mov
lahf
mov
loop
mov
test
aas
sub
lea
jno
or
mov
lock
arpl
fildll
adc
push
mov
maskmovq
idivl
cmpsl
ret
es
fsubs
stos
insb
adc
xor
dec
cmp
sub
mov
rcl
pusha
xchg
sbb
gs
ss
add
aad
stc
pushf
or
clc
xorb
sbb
jl
push
scas
popf
push
push
imul
push
fisubs
sbb
xchg
in
loopne
jge
inc
adc
jae
shlb
or
jbe
mov
test
sahf
mov
ret
mov
call
mov
and
sub
es
cmpsb
mov
imul
fsubl
inc
add
ds
fbstp
pop
lds
push
push
enter
pop
mov
and
aas
lds
out
popa
xchg
test
pop
pop
jns
in
xlat
daa
mov
jno
sub
enter
test
addr16
addr16
enter
insb
mov
mov
cmc
andl
mov
jns
lret
repnz
mov
fcoms
pusha
jb
jl
cmp
jb
mov
gs
push
test
lret
xchg
shlb
add
popf
stos
frstor
lea
sub
adc
dec
push
rorl
data16
rcl
es
ss
jecxz
and
push
notb
rcl
and
mov
sub
adc
mov
aaa
cmpsb
adc
pushf
jno
mov
enter
aam
pop
fdivr
jmp
lods
dec
pop
dec
stos
dec
adc
push
bound
push
add
ret
cwtl
aaa
sbb
mov
sub
adc
sbb
sbb
aam
push
xchg
and
inc
mov
rorl
jne
iret
mov
icebp
pop
out
movsb
jge
or
out
jecxz
dec
push
sbb
js
insl
test
out
jb
mov
adc
xor
adc
out
sub
xor
or
pop
or
xor
scas
and
ss
push
scas
inc
pop
pop
or
int
or
je
jnp
jae
cmpsl
outsl
or
or
cmp
fcmovne
test
arpl
inc
mov
inc
imul
lcall
movsl
or
dec
mov
push
sub
pop
push
jo
or
stc
push
or
pop
ds
jg
test
mov
xchg
bound
ret
or
cmpl
inc
mov
nop
push
mov
and
mov
repnz
outsb
inc
aaa
outsb
bound
and
shlb
xor
pop
or
ret
or
xlat
stos
or
xor
outsb
outsl
jno
lods
leave
adc
pop
scas
sub
stc
aam
scas
fidivrs
mov
lock
and
cmpsl
inc
pop
je
cli
push
pop
dec
mov
loope
test
lahf
or
ret
cmc
scas
ljmp
out
lea
int
add
push
and
and
fldenv
in
repnz
mov
mov
es
jnp
ja,pt
fwait
jmp
add
mov
pop
or
mov
jl
dec
sub
js
jp
mov
and
not
mov
test
das
fdivrs
mov
sbb
adc
mov
in
dec
push
fisubrs
sbb
push
inc
popa
imul
scas
cltd
fstl
cmp
test
mov
add
nop
pop
adc
cvttps2pi
xchg
das
fwait
mov
adc
xchg
mov
pusha
in
hlt
stos
outsb
gs
jmp
or
sbb
mov
add
xchg
mov
imul
ss
mov
repnz
fs
inc
add
sbb
andl
inc
mov
xor
cli
shll
inc
sub
loopne
and
or
ljmp
scas
sub
mov
fwait
pop
adc
xchg
leave
or
out
rorl
cmp
ds
inc
lret
dec
push
loopne
or
sbb
push
out
mov
sbbl
fwait
dec
dec
in
mov
push
jnp
inc
std
pop
das
sub
and
es
je
ss
xor
nop
xor
fistpl
mov
or
into
shll
add
lahf
cmp
out
jmp
xlat
adc
cmp
mov
out
lods
ret
xlat
insb
push
lods
shlb
mov
cmc
scas
loop
lds
mov
jp
adc
sub
cld
int3
in
jo
lcall
aam
mov
in
in
pop
sbb
popa
mov
cmp
xchg
fs
jmp
inc
inc
adcl
insl
xor
sub
dec
orl
fwait
xorl
xlat
lods
jmp
aaa
adc
in
outsb
jg
test
pop
outsl
mov
jecxz
jns
jmp
mov
sub
fsubrs
loopne
and
daa
pop
lods
xchg
sbb
rcrl
push
gs
and
ds
and
push
loope
inc
pop
int3
gs
mov
add
mov
or
xor
jmp
sub
mov
popf
lret
dec
ret
xchg
xchg
inc
sti
lahf
cmpsb
mov
ljmp
xchg
xor
bound
leave
nop
pop
enter
push
out
iret
lea
rcrb
or
and
mov
clc
mov
imul
cmp
int3
cld
sahf
push
enter
or
lahf
mov
mov
insl
cmp
mov
xchg
mov
test
cmpsb
cmp
mov
mov
cli
pop
adc
pop
jbe
je
add
gs
sub
pop
cmpsl
mov
xor
shlb
sbb
mov
cmc
adc
cltd
pop
lods
bound
ljmp
jle
mov
xor
jle
loope
testl
jb
push
aad
dec
xchg
imul
mov
push
pop
push
popf
sbb
jo
push
pop
mov
or
aam
mov
jecxz
mov
mov
mov
aam
mov
mov
and
push
push
mov
in
lds
testl
push
mov
mov
sbb
data16
adcb
pop
pusha
js
imul
testl
les
movsl
xor
add
mov
cmp
lret
cli
cltd
xchg
and
jp
jge
push
cwtl
stos
sub
adc
fisttpl
lods
xor
pop
pop
jne
jp
mov
iret
test
and
or
test
call
cmc
movsb
dec
xchg
push
mov
gs
mov
sub
cli
in
ds
adc
data16
lret
push
dec
shll
test
es
jns
sub
aaa
jmp
jg
fidivs
mov
mov
pop
cmp
xchg
mov
sub
pusha
call
mov
jmp
mov
into
mov
jl
popf
nop
sub
dec
jne
adc
sbb
popa
idivl
sub
gs
cs
mov
iret
std
mov
cmp
or
mov
push
inc
mov
icebp
jae
lods
mov
push
loope
mov
mov
inc
and
aaa
orb
daa
test
test
loopne
filds
xchg
mov
test
jbe
inc
les
sub
mov
fcomps
sub
fstl
int3
test
xchg
dec
or
and
pop
lods
pop
scas
nop
stos
aas
stos
aad
fs
jp
out
loop
pop
repz
jnp
not
lret
insl
in
arpl
adc
mov
fsubp
in
pushf
and
in
js
aad
fldl
add
rcl
push
mov
lret
mov
fidivl
xor
jo
jmp
andl
jg
and
test
in
mov
adc
clc
dec
outsl
nop
rorl
add
ljmp
in
dec
cmp
inc
mov
inc
mov
shll
sbb
inc
bnd
lret
jmp
add
jecxz
in
clc
xchg
stos
mov
mov
push
pushf
mov
push
inc
call
xor
mov
xchg
adc
ljmp
scas
cli
xor
sub
adc
jmp
jge
cwtl
cmc
xchg
mov
in
aam
popa
icebp
lock
xor
repz
lds
movsb
sarl
cmp
mov
das
lods
adc
sbb
jle
xor
fdivr
lcall
es
mov
hlt
mov
pop
inc
sub
mov
mov
js
leave
pop
jae
mov
imul
popa
sub
div
lret
cltd
gs
adc
push
add
mov
shll
pop
xchg
mov
repnz
popa
pop
fisttpl
movsl
lahf
xchg
pop
push
jmp
test
mov
push
adc
mov
add
outsl
mov
pop
fsts
xchg
jl
lods
xor
popf
lret
in
xchg
icebp
cmp
cmp
sub
or
cwtl
outsb
popf
xchg
jle
movl
cmpsl
add
push
jo
aad
xor
ficoml
ljmp
push
outsb
and
cmp
sti
in
test
fwait
sub
outsb
and
insb
imul
sahf
jns
out
mov
and
test
lea
mov
xor
and
roll
inc
pusha
jle
es
or
in
push
mov
xor
lods
pushf
pop
sub
ret
movsl
xchg
jmp
cmpsl
jbe
mov
rol
inc
mov
xchg
sbb
adc
mov
dec
iret
repz
jne
pop
lea
dec
adc
sar
rcrb
cmc
cmp
mov
loope
jmp
push
push
jnp
mov
in
cmp
push
loope
int3
nop
sbb
test
out
push
pop
jbe
mov
in
rolb
inc
inc
arpl
and
fildl
pop
adc
or
ja
lcall
mov
sub
pop
js
mov
add
out
adc
arpl
lea
in
out
fs
mov
jmp
cmp
push
das
in
in
pop
inc
cld
push
sbb
lret
pop
movl
das
shlb
push
call
mov
pop
das
or
dec
dec
pop
add
xor
inc
mov
or
cli
fcomps
mov
push
nop
lret
insb
fwait
add
sub
das
xchg
decb
lods
mov
push
icebp
out
dec
test
out
dec
jge
jb
js
jnp
xchg
xor
adc
cmp
jp
dec
fsubrl
or
js
in
pop
push
and
pop
js
imul
out
push
cli
out
inc
ja
mov
cmp
sahf
mov
ss
rorb
or
out
incb
or
test
mov
cld
ret
jg
loop
pop
cmp
fcmovbe
loop
leave
enter
or
xchg
loop
imul
cmc
push
popf
or
mov
cld
lods
inc
out
xchg
pop
outsb
repnz
out
pop
dec
lcall
outsl
adc
data16
mov
pop
add
and
inc
scas
movsl
int3
mov
mov
lock
jne
aaa
cmp
jb
adc
repz
testl
mov
push
lock
dec
and
inc
jbe
jg
cs
inc
push
push
cmp
int
lea
sbb
lret
daa
cmp
sbb
lods
adc
out
scas
dec
or
dec
leave
cmpsl
sub
loopne
inc
imul
push
jbe
leave
adc
inc
sti
in
adc
sub
aaa
hlt
inc
test
sbb
mov
cmp
loopne
lock
orb
jno
mov
mov
rorb
xchg
dec
sbb
inc
std
test
and
inc
outsb
aad
fsubl
and
testb
fisttpll
pop
xchg
out
daa
add
cmc
loopne
sbb
insl
jp
inc
je
xor
add
in
pop
add
jge
pop
pop
mov
pop
or
dec
push
sub
jg
mov
test
inc
mov
adc
fistpll
jl
imul
lret
mov
add
adc
or
ss
jo
ss
cmp
xchg
pop
addr16
mov
dec
sub
fisubrs
mov
jge
cmc
stos
mov
dec
outsl
das
jne
daa
iret
jno
imul
rcr
mov
add
pop
push
bnd
adc
mov
inc
push
pop
ljmp
ja
push
lcall
iret
je
in
jl
les
repnz
mov
sbb
andl
shlb
cmp
ret
mov
pop
cs
dec
or
test
lea
notl
daa
iret
mov
sub
inc
shll
daa
daa
adc
push
add
or
jns
adc
push
jecxz
stc
cmp
movsl
sahf
in
mov
mov
jp
jbe
je
dec
lcall
cmpsl
jns
cmp
and
loopne
in
inc
incb
cmp
lock
push
out
out
xchg
add
lret
leave
mov
aas
ret
loop
adc
lods
sub
ljmp
imul
sub
jns
mov
loope
push
jmp
dec
jmp
and
fstl
jg
dec
add
push
inc
add
mov
int
pop
out
add
ljmp
and
loop
je
and
mov
es
int3
adc
idiv
pop
or
lret
add
mov
ror
sub
xor
adc
fdiv
rclb
mov
inc
clc
out
je
push
inc
mov
fsts
ds
or
add
mov
je
pop
outsb
cmp
or
mov
sbb
das
xor
mull
and
mov
sbb
aas
push
sbbl
cld
jl
js
pop
incb
sbb
jl
lret
mov
jns
aas
sti
xlat
pop
loope
pop
inc
or
insl
std
lods
jb
loopne
mov
movsl
mov
into
and
mov
in
dec
loop
sub
or
push
push
xchg
jg
aam
pop
insb
pop
ret
dec
sbb
cmp
pop
jmp
enter
or
pop
jle
nop
icebp
fnstenv
shll
push
dec
test
push
das
test
pop
test
fisubrl
daa
je
push
sbb
mov
mov
jge
mov
push
cmpsl
pop
and
jbe
mov
es
stos
mov
pop
jno
adc
jo
push
adc
jp
out
rcll
out
or
ljmp
mov
inc
push
fistps
cmp
cwtl
pop
sub
cmpl
push
pop
lods
sub
push
ja
push
inc
lret
movsbl
imulb
std
pop
mov
jne
fildl
rcrl
into
xchg
ret
mov
pop
mov
sbb
xchg
push
mov
out
scas
xor
mov
lret
dec
and
pop
jns
and
stos
icebp
ds
xchg
jbe
mov
loopne
fnsave
movsl
in
inc
mov
pop
sub
and
jle
ds
out
aaa
mov
fs
mov
fnstcw
pushl
ja
cmp
ja
pop
fisubl
lods
pop
bound
insb
in
fcmove
sbb
mov
aam
cmc
sbb
add
cwtl
pop
dec
hlt
int3
inc
cvtps2pd
pop
pusha
adc
dec
dec
jno
xor
movl
push
push
repz
inc
mov
ljmp
sbb
outsb
fbstp
pop
fsubrl
cmpsb
cs
repz
popf
push
or
mov
dec
in
loopne
insl
fadd
xor
and
mov
jge
mov
fcmovne
mov
sar
iret
ds
adc
rclb
test
cmp
fdivs
mov
and
scas
cs
dec
xchg
mov
add
mov
in
enter
shll
call
push
mul
inc
jb
pop
dec
pusha
je
pop
jb
xchg
in
mov
sbbl
inc
push
push
add
cmp
mov
lret
aad
stos
push
dec
cmp
jae
enter
cltd
cld
aad
sti
xchg
pop
aad
push
subb
fnstsw
or
mov
leave
xlat
popa
push
and
jns
lods
lea
xchg
lahf
dec
push
std
or
movsl
loopne
sub
test
sbb
mov
fiaddl
ds
jge
add
mov
push
std
or
ljmp
ret
pop
lds
mov
repnz
or
ficoms
xor
arpl
xlat
add
andl
jmp
xchg
popf
xor
popf
cld
cmc
jg
mov
adc
dec
jl
mov
jecxz
mov
test
sahf
out
cwtl
jno
jecxz
sbb
aas
inc
cwtl
mov
aaa
es
xchg
add
imul
sbb
sbb
and
test
xlat
or
mov
and
int3
jmp
lret
sbb
rol
add
inc
into
inc
int3
xchg
or
rcl
jb
mov
adc
rcrl
sbb
pushf
cwtl
aam
jbe
xchg
ja
mov
je
sbb
mov
outsl
outsb
pop
mov
add
insl
int
insb
lods
lods
mov
push
dec
shrb
lea
add
dec
pushf
and
pushf
pop
inc
xchg
xchg
shll
inc
out
inc
aaa
jae
jg
sub
mov
pop
popa
clc
add
xorb
and
xchg
in
xor
dec
jp
mov
test
adc
js
xacquire
fisubrs
pop
xchg
sbb
inc
and
out
jno
dec
rcl
or
xchg
lods
xchg
mov
lods
test
movsl
loope
lcall
scas
aaa
jo
adc
ret
ds
push
sub
mov
imul
imul
cmpsb
enter
popa
push
dec
jle
cli
mov
jb
es
cmp
in
lods
sub
jns
mov
insl
lods
and
jb
jno
dec
jge
jmp
cmpsl
and
add
or
push
mov
fadds
jbe
and
sub
je
xchg
scas
push
xchg
lret
mov
jmp
out
push
into
dec
sub
sbb
data16
push
sub
cmp
hlt
sbb
aaa
addr16
sbb
rorb
pop
lds
imul
cli
scas
aas
insl
mov
loopne
pop
test
cmpsb
shrb
fidivs
xor
sahf
jb
jne
and
cwtl
push
insb
push
fidivl
cmp
int3
aas
lds
pop
insl
sbb
stos
clc
inc
bswap
jnp
popa
dec
cwtl
jns
fnstenv
lods
movsb
pop
jnp
mov
loopne
push
fistpll
shrl
mov
aas
sbb
xor
lea
dec
jp
test
cli
or
cmc
mov
test
pusha
pop
add
xchg
outsl
push
push
cmp
std
sahf
xchg
sbb
push
sub
test
clc
jo
mov
sub
jb
xchg
mov
mov
push
cli
xchg
mov
cmp
xorl
cmpsb
cmp
inc
sbb
repz
or
andl
fwait
mov
cld
push
adc
sahf
cwtl
je
insb
fimull
nop
in
jecxz
enter
add
fnsave
add
cmp
repnz
stc
xchg
inc
mov
popf
push
add
imul
xor
mov
cld
movsl
out
xlat
push
inc
sub
push
dec
stos
jle
int
pop
cld
fxch
push
mov
movsb
sbb
insb
cli
push
add
jl
rcrl
icebp
stos
je
mov
pop
adc
jno
aad
jmp
adc
lds
pop
push
xlat
xchg
pop
movsb
mov
notb
xchg
insl
jno
ljmp
in
mov
lock
in
sahf
xchg
or
add
test
inc
jno
jge
in
and
test
fwait
mov
data16
in
xchg
xor
and
xor
mov
add
xchg
shll
mov
mov
mov
xor
and
adc
and
fadd
push
xchg
aaa
pop
daa
xchg
pop
ret
xchg
icebp
hlt
insb
repz
xor
sbb
cmc
insl
inc
loope
stc
mov
lret
sbb
adc
in
xchg
mov
pop
adc
adc
ficoms
add
mov
mov
lret
adc
and
out
adc
test
or
push
add
pop
cmp
or
dec
stos
lods
jne
fs
aas
pop
sbb
inc
xchg
and
das
add
dec
lods
test
psubw
movsb
clc
cmp
in
jb
and
push
das
cld
bound
out
xchg
or
ja
jae
mov
lahf
int
je
xchg
pop
jo
ja
mov
cmp
in
es
push
push
fadd
iret
cli
add
add
adc
pushf
adc
nop
leave
int3
incb
add
inc
or
aas
mov
rolb
sti
mov
mov
ficoms
and
inc
sub
xor
xor
push
mov
fwait
cwtl
pusha
lock
fimull
loopne
addb
scas
mov
aas
clc
cs
jecxz
or
movb
cmc
call
out
out
push
xchg
daa
mov
pop
andb
cld
test
mov
or
mov
pop
sbb
jg
xchg
jecxz
or
pop
cmpsb
jne
jae
pop
inc
sbb
mov
ficoml
insl
sbb
and
cmpsb
loop
xsha256
cmpsb
xlat
outsl
or
or
pusha
cmp
lcall
sbb
or
xchg
addr16
dec
mov
ljmp
push
lcall
orb
dec
in
addr16
mov
xor
dec
dec
sub
mov
fwait
sbb
add
pop
cmp
sub
ret
or
adc
push
inc
mov
shr
mov
add
imul
inc
std
or
lret
test
jg
jae
sar
stos
push
push
call
shrl
ret
push
cmp
mov
lahf
mov
jns
dec
add
int3
mov
push
andl
dec
dec
inc
xchg
mov
test
sahf
ja
rcll
push
ds
les
jne
ficoms
sbb
idivl
sti
adc
sub
dec
repnz
jle
pop
imul
fcmovnbe
jne
sbb
sub
xchg
xor
xchg
push
out
into
mov
xchg
ja
push
loope
in
cmc
push
push
rcl
mov
xor
ja
jp
and
mov
hlt
lods
stos
add
add
pop
out
repnz
shlb
pop
fldcw
fdiv
cmpsl
mov
jae
les
mov
mov
pop
xlat
mov
lcall
mov
sbb
aad
push
mov
jno
xorl
sbb
rclb
aad
in
jnp
cmpsb
int
jo
pop
cmpsb
fsts
push
inc
stos
or
popa
cli
jns
movsb
dec
sbb
test
sbb
movsb
cmp
push
outsb
xchg
adc
lea
fmul
repnz
ret
cmp
inc
mov
cmp
pop
test
and
and
div
movsl
andl
inc
or
dec
loop
sub
cmpl
push
lret
fisubs
outsb
and
xchg
xlat
pop
jmp
lea
aad
int
dec
or
js
loop
mov
ljmp
inc
add
enter
add
loop
ss
movsb
sbb
and
mov
or
ja
dec
push
testl
test
or
arpl
lds
fimuls
mov
or
cmp
push
pushl
pop
mov
divl
add
out
jle
push
sbb
sbb
nop
ret
cmp
mov
cs
mov
int
nop
fistpll
test
xor
negl
sub
mov
jne
into
imul
in
jge
sbb
dec
das
push
nop
pop
sti
data16
imul
nopl
fstpt
sub
and
push
cmpsb
push
mov
and
test
cmc
cli
rol
mov
into
push
ljmp
jne
add
mov
push
sub
ret
push
rorb
inc
inc
adc
add
sbb
push
dec
hlt
mov
push
iret
cmc
or
lret
mov
dec
mov
adc
mov
xlat
jno
sbb
js
dec
mov
fwait
into
pop
aas
bound
sbb
mov
gs
sbb
insl
sub
stos
mov
cli
jo
mov
cmp
pop
add
stos
daa
push
jns
test
stos
int3
add
xchg
pop
jl
ret
xor
outsb
jge
popf
rorl
xchg
add
pop
push
rcll
xchg
sbb
adc
mov
fsubl
fcoml
leave
shlb
adc
pop
ljmp
pop
js
push
aaa
icebp
sub
jbe
mov
enter
push
nop
shlb
arpl
push
mov
xor
jl
std
jp
mov
add
lret
loop
sbb
xchg
movsb
push
fs
shlb
cld
mov
fisubrs
sub
fsubrs
xor
jmp
in
xchg
jge
push
sbb
pop
rclb
fisubrl
aad
mov
pop
mov
jae
jb
push
push
jno
xchg
push
cmc
icebp
push
stos
inc
cli
inc
jmp
add
arpl
fst
sub
mov
dec
pop
movsb
sub
cmp
dec
clc
into
cli
js
push
aaa
lock
imul
stos
add
jbe
xor
ret
in
xchg
aaa
mov
leave
push
and
in
push
mov
mov
fs
or
jnp
mov
test
mov
xchg
je
and
inc
fdivl
mov
xchg
jg
add
jo
pop
push
adc
idiv
cld
xchg
std
xchg
jg
jge
nop
lds
add
loopne
sbb
in
in
sub
inc
imul
insl
pop
mov
loopne
orb
ret
inc
cmp
add
test
mov
loop
inc
shll
ret
inc
xchg
cltd
stos
lret
sbb
pop
sub
push
xchg
push
shlb
test
add
call
rorl
sub
iret
pushf
pop
in
stos
fldenv
addl
ds
or
mov
cli
jbe
sub
cmp
clc
fldl
ljmp
mov
mov
ja
sbbb
cmp
xchg
mov
call
lds
xchg
sub
shl
aam
lods
imul
sahf
das
sbb
xchg
xchg
ror
popa
aas
xchg
dec
push
imull
ja
jmp
jns
adc
lods
dec
bound
out
daa
push
push
jl
divl
test
pop
mov
xchg
xchg
lock
cltd
inc
mov
sub
cmc
adc
push
mov
outsb
mov
push
sbb
leave
cmp
stos
repnz
adc
dec
cli
insb
inc
loop
out
mull
jp
xlat
loop
loope
outsb
stos
xchg
mov
sub
psubb
mov
and
xlat
shll
push
pop
pop
add
mov
and
pslld
call
popa
mov
pop
cmp
rolb
push
jae
and
dec
jae
aas
mov
jp
pop
cmovo
push
ja
cmc
xorl
fsubl
mov
aam
aaa
jns
leave
push
test
addl
push
movsb
jmp
push
popa
repz
scas
loope
out
adc
aaa
add
xor
jne
ror
push
fisttpll
mov
or
sbb
add
adc
mov
push
mov
sbb
jnp
out
pop
sets
je
in
xlat
repz
pusha
popf
gs
int
sar
and
push
mov
mov
shrl
cmp
mov
push
jge
add
xor
in
enter
mov
shl
and
lock
adc
sbb
ss
and
pop
pop
jp
lahf
in
cmp
mov
jecxz
ss
fs
mov
fidivl
addb
loope
sbb
fsubrl
or
pop
ror
fidivrl
jp
mov
sub
add
sti
leave
jae
lea
fsubrs
loop
push
dec
and
dec
sbb
orb
push
shrb
push
pop
inc
cs
insl
pusha
or
pop
sbb
imull
cld
std
loopne
inc
aas
inc
mov
inc
enter
jns,pt
adc
or
sbbl
fs
clc
rorl
inc
stos
sbb
xchg
lret
pop
jbe
aas
cmp
mov
inc
add
sti
es
mov
and
push
stc
cmp
int
aaa
scas
cwtl
mov
lds
jne
jns
ja
lret
stos
mov
cmp
sbb
push
mov
cmpsl
and
xchg
xor
cwtl
or
mov
xor
fs
vmovlhps
xchg
or
sub
push
sti
lcallw
mov
pop
mov
push
mov
cmp
pop
out
xchg
cmp
mov
inc
lods
sub
jp
mov
imul
inc
pop
rclb
aas
or
rorl
jo
cmpsl
js
testb
and
js
mov
mov
cmp
cwtl
xchg
or
out
loop
xchg
fldt
sahf
pop
es
cmpl
out
adc
xchg
push
sbb
push
roll
inc
jb
push
dec
sub
stos
outsl
xchg
andb
frstor
lds
loopne
mov
js
push
xchg
int3
inc
push
popa
nop
push
scas
in
xor
cwtl
xorb
pop
mov
loopne
jg
jns
repz
push
mov
mov
adc
jp
popf
add
adc
fldcw
cmp
fsubrs
lods
mov
jp
lret
and
or
xor
cmpsl
cmp
subl
ss
vmaxpd
jns
sub
adc
mov
nop
cmp
sbb
mov
jecxz
test
js
ss
xchg
pop
insl
adc
push
xchg
fistpll
rol
fnstenv
mov
in
or
aas
mov
lds
jl
fwait
aad
shlb
jmp
dec
xor
stos
mov
mov
nop
movsl
icebp
pusha
xchg
ljmp
mov
lods
add
sub
jmp
lcall
lods
pop
push
add
pop
jae
mov
loopne
filds
fnstsw
mov
adc
push
sub
mov
push
fmuls
dec
in
sub
add
leave
add
roll
inc
das
aad
cmpsb
nop
addr16
fidivs
xor
sarb
pushf
xorl
loopne
mov
mov
inc
adc
test
addr16
vpsadbw
jecxz
addr16
fcmovne
mov
dec
or
jne
push
outsb
test
sbb
dec
xor
sbb
rcrb
rcr
into
sarl
adc
lock
jno
inc
dec
xor
sub
lret
out
xor
jns
xor
mov
les
insl
pushf
jmp
das
adc
xchg
xchg
cmpsb
into
or
mov
or
out
cmp
or
je
movaps
mov
xchg
test
cmc
hlt
pop
mov
dec
in
add
enter
or
into
lcall
cld
or
sbb
hlt
ret
jp
inc
sub
mov
aam
sarl
inc
aas
mov
mov
dec
or
xchg
adc
test
xor
push
lret
and
add
test
insb
inc
cmp
pusha
sti
cmp
mov
sbb
sub
adc
addb
and
dec
out
stos
les
mulb
stos
sbb
push
inc
mov
ret
xorb
jmp
loop
mov
jg
adc
std
mov
dec
movsb
mov
imul
mov
dec
adc
jp
lock
pusha
lods
fcmovne
mov
adc
fucomip
ljmp
pop
outsb
outsb
in
outsb
fcompl
xchg
loop
xchg
fmul
xchg
scas
and
js
sbb
push
hlt
and
add
int
loope
fs
mov
mov
sbb
or
or
lcall
sbb
lea
xor
daa
outsb
imul
jg
xlat
sbb
ror
ja
xor
xor
pusha
mov
mov
pop
ljmp
pop
je
mov
les
imull
ljmp
adc
inc
and
mov
andl
inc
push
pop
and
aaa
fs
jl
mov
jmp
xor
lock
inc
test
lea
popf
mov
cmp
jmp
add
hlt
scas
rep
arpl
inc
lret
popf
cmp
pop
and
outsb
out
jo
xchg
mov
inc
add
dec
ficompl
push
mov
xorb
pop
push
dec
pop
aam
mov
shll
sub
inc
int3
sbb
notb
stc
dec
cmp
push
mov
adc
insl
mov
mov
pop
add
data16
lea
stos
pop
sbb
stc
addr16
es
fnstenv
xchg
es
ljmp
cmpsl
pushf
mov
sub
xlat
pop
loope
inc
jno
jg
and
pushf
xor
imul
jbe
fs
fwait
xchg
cltd
mov
mov
add
shrb
fwait
loope
jmp
sub
push
lret
rclb
push
sbb
dec
cli
aaa
pushf
dec
xor
push
adc
push
repnz
ljmp
lods
pop
scas
test
push
cwtl
fldl
sub
mov
loopne
jp
and
into
dec
add
lods
in
inc
jb
hlt
aas
xchg
inc
adc
or
rolb
sub
lods
imul
cs
pushl
repz
push
mov
aaa
sti
mov
repnz
sbb
imul
testb
cmpsb
lods
or
jns
pop
sbb
push
imull
or
test
sub
push
sbb
ret
push
inc
loopne
add
bound
pop
dec
int
jb
sub
xor
xchg
ljmp
ja
fsubs
loope
push
iret
xchg
lcall
dec
sbb
repnz
jb
enter
in
xchg
dec
jnp
cmp
les
lds
mov
pop
movsb
adcb
mov
adc
cwtl
sarb
test
stos
xchg
and
mov
dec
or
sahf
stos
push
ror
xor
cmc
int3
sub
pop
xchg
or
lock
aam
int3
cmpsl
add
add
inc
push
mov
sbb
mov
mov
dec
sub
mov
rcl
popf
rorb
jae
ficoms
sub
xor
nop
imul
cmp
scas
shlb
or
dec
and
popf
mov
or
out
sbb
repz
lods
inc
sbb
scas
inc
lahf
data16
mov
or
sbb
scas
mov
in
jg
mov
aas
pop
mov
pop
lock
cmp
sarl
insb
mov
fsubrs
scas
sbb
fcomip
inc
cltd
lods
add
int3
mov
call
pop
hlt
cmp
hlt
test
aaa
ret
fidivl
rcll
imul
popa
jp
pop
cmp
inc
adc
cmp
and
pop
dec
into
daa
ret
add
adc
fimull
fadds
add
mov
data16
dec
mov
cmp
mov
dec
fstps
jecxz
inc
sub
loop
ljmp
pop
pop
pop
push
jbe
dec
mov
mov
xchg
std
cmpb
out
faddl
vmovsldup
xchg
loope
rcll
sub
dec
inc
xor
sbb
xor
pop
pop
popf
scas
lret
dec
testb
sub
jbe
pop
jno
jns
jnp
jecxz
mov
jle
dec
mov
sub
out
mov
sub
cmpps
mov
stc
das
push
mov
fbld
adc
add
loopne
test
imull
mov
pusha
and
push
and
sbb
mov
cli
aad
xchg
das
inc
and
cld
or
or
fisttpl
or
mov
adc
jo
lods
mov
mov
cs
lahf
cmp
cmp
and
xchg
and
fs
jp
cmp
in
in
mov
inc
inc
cmpsl
fdivrl
add
aad
sub
in
ds
ret
push
mov
fwait
sbb
data16
int3
idivb
jbe
out
inc
outsb
push
out
jb
push
ret
jno
repnz
sub
daa
cltd
jne
test
push
scas
or
or
dec
push
lret
pop
ja
out
ja
dec
clc
jmp
adc
adc
xchg
es
mov
ss
rclb
adc
sbb
xchg
cmc
sbb
bound
mov
adc
mov
in
cmc
sbb
popf
je
mov
xlat
cmp
movhps
scas
fxch
jae
add
out
imul
dec
push
dec
inc
ret
sbb
jl
inc
and
add
aaa
sbb
je
stos
cmpsb
adc
sbb
pop
test
push
mov
stos
into
nop
sbb
andl
andb
out
xchg
jae
inc
jnp
cltd
xor
mov
je
repnz
int3
add
jns
in
or
hlt
sarl
adc
sarl
fs
ljmp
daa
xor
dec
lret
dec
push
outsl
inc
pop
add
adc
xchg
bound
shlb
fnstsw
pusha
pop
aas
sbb
jb
ficoml
adc
je
sbb
dec
sahf
xor
jmp
test
sub
adc
popa
cmpsl
sbb
xchg
sbb
adc
xlat
test
sub
ds
xchg
xchg
add
jl
push
jle
scas
stc
fildl
push
cmpsl
cmp
inc
roll
fnclex
test
sbb
xchg
xchg
aaa
adc
int3
std
jnp
mov
insl
loop
cltd
imul
xor
pushf
pop
dec
loop
mov
lods
ret
pop
jmp
sarl
inc
cltd
les
jno
nop
push
clc
icebp
insl
jmp
cmp
xor
loop
das
out
add
pop
jp
movsl
cli
cmc
or
add
and
shll
or
inc
and
cli
sub
and
jmp
loopne
cmpsb
inc
dec
inc
sbb
test
lahf
xor
push
bound
cmpsb
roll
push
add
sub
in
imul
mov
rorl
jge
stos
jp
jae
lret
and
mov
rolb
decb
pop
cmc
dec
sub
rorl
cmpsl
or
inc
adc
adc
out
mov
adc
iret
cmp
fiadds
mov
jecxz
sub
adc
sub
adc
inc
loopne
rcrl
outsl
dec
int
ljmp
push
xchg
push
rolb
xor
out
imul
push
inc
jne
push
test
rorl
xchg
sub
jp
shl
cld
fdivrs
add
rcr
cltd
adc
push
rolb
add
jle
xchg
add
adc
in
push
mov
cmc
scas
in
cltd
lods
mov
popa
dec
fistl
sub
pop
jp
dec
pushf
mov
dec
out
cltd
out
in
out
dec
pusha
inc
xor
push
xchg
mov
clc
add
xchg
mulb
push
movsl
addl
shrb
or
pop
pop
pushf
mov
xchg
mov
and
mov
mov
sbb
adc
aad
jbe
sbb
in
stos
cli
insl
int
push
mov
or
or
pop
xchg
or
es
add
ljmp
sub
xchg
mov
sbb
adcl
jl
fwait
add
cld
stos
add
test
push
cli
loopne
add
inc
add
icebp
fsubrl
and
mov
loope
jl
ja
mov
sbb
mov
mov
mov
mov
imul
add
lock
or
lods
mov
or
in
sbb
sub
clc
test
lahf
push
push
repnz
mov
pop
add
adc
rcrb
jle
cmp
push
pop
sbb
cmpsb
test
cmc
mov
or
xchg
mov
pushf
add
adc
outsb
movsl
add
lock
sbb
dec
add
mov
add
xor
scas
push
xor
or
cs
xchg
jb
sbb
fmull
aaa
pop
push
in
into
sub
sub
jb
xorl
push
pop
pop
mov
out
inc
sub
fidivrl
cwtl
pop
and
mov
fbld
lock
mov
fldcw
or
scas
scas
loopne
lcall
push
mulb
dec
fdivrl
stc
loopne
clc
movsb
sbb
cltd
aas
jp
adc
add
cmp
add
into
lods
aam
add
insl
pop
outsl
jge
sub
add
bound
add
fdivrl
jl
sub
movsb
pop
and
add
je
mov
cmp
or
add
scas
add
or
adcb
cmp
aaa
adc
xor
mov
mov
and
je
push
pop
lds
cmp
fdivrs
xor
jecxz
and
cwtl
imul
add
cmp
test
and
adc
jle
insb
dec
cld
sbb
addl
jns
mov
sub
push
test
sbb
hlt
jecxz
mov
inc
lea
lcall
jp
pop
sti
aad
adc
add
or
sub
or
inc
pop
rep
inc
hlt
cs
cmpsb
xchg
adc
enter
push
sbb
lahf
or
sbb
or
dec
clc
dec
cmc
inc
mov
out
and
daa
pavgw
mov
mov
cwtl
stc
popf
mov
rcl
mov
cli
leave
jbe
or
cltd
int3
fisubl
cmc
sub
or
cmpsl
pop
cmp
lea
ficoml
shrl
pop
lods
xchg
fldt
sbb
push
mov
ljmp
stos
inc
cmp
or
jmp
add
dec
cmpsl
leave
push
fstpt
loopne
push
cmpsb
sub
icebp
sub
mov
adc
es
pop
or
testl
pop
push
sbb
int
xchg
sub
movsb
and
xchg
dec
sahf
xor
adc
jbe
xchg
jmp
sub
inc
xor
imul
jle
push
push
out
lret
mov
push
and
in
xchg
pop
cmpb
mov
mov
jno
inc
dec
out
or
pusha
in
mov
inc
jo
lock
in
into
clc
out
mov
and
int
sti
lret
or
stc
iret
sub
and
inc
mov
jecxz
xchg
push
in
xchg
lret
loope
hlt
jns
sbb
jo
scas
or
inc
test
out
mov
stos
jg
sti
or
xchg
xor
sub
fwait
push
jle
sub
scas
xlat
iret
cmpsb
cld
pop
fstl
add
add
xor
insl
outsl
push
orl
adc
and
fistl
addr16
cmp
sbb
jmp
add
pop
out
ss
std
insl
inc
fsubrl
mov
in
in
roll
xchg
cmp
inc
imul
and
rol
push
mov
jo
sub
or
xor
rclb
lahf
cmp
mov
jl
pop
add
rorb
enter
lea
out
dec
jl
mov
mov
icebp
push
mov
xchg
dec
addr16
add
cltd
fwait
dec
jle
hlt
jno
enter
into
int
outsl
dec
loop
icebp
xchg
repz
cli
pop
mov
hlt
shrb
xchg
fdivs
dec
sarl
dec
pop
lret
or
imulb
clc
mov
flds
inc
xor
sbb
out
ret
jnp
mov
in
fbld
push
daa
add
jnp
dec
dec
adc
push
mov
dec
test
das
sbb
test
leave
dec
jbe
push
test
mov
mov
mov
sub
push
cltd
movsl
push
jle
cltd
push
into
inc
pop
nop
in
xor
inc
sbb
fisttpll
cmp
pop
pop
mov
lcall
inc
mov
imul
xchg
aaa
iret
xchg
ret
bnd
lcall
sub
mov
mov
leave
in
pop
mov
lahf
loope
xchg
mov
sub
test
in
mov
ss
mov
mov
push
pop
das
test
lret
mov
xchg
mov
or
mov
testb
push
popa
mov
cmp
push
clc
pop
dec
xor
xor
orl
dec
mov
pop
dec
insb
xchg
call
mov
mov
aaa
ret
push
cmp
push
sbb
rcll
ss
mov
add
faddp
pop
aam
push
jns,pn
sub
das
nop
cmp
stos
mov
jns
sub
dec
popa
jns
fiaddl
adcb
dec
pusha
cmp
push
sub
stc
test
scas
loope
pop
pop
dec
or
dec
pop
pusha
movsl
in
loop
addr16
sbb
cmc
jge
popa
test
call
lcall
jecxz
call
js
push
fsubs
pushl
inc
push
out
pop
inc
xchg
cmp
cli
loop
sbbb
je
dec
adc
and
stos
mov
jno
and
sbb
outsl
popf
loope
pop
std
mov
dec
sub
inc
lods
shll
cmp
mov
popf
push
mov
cmpsb
mov
cs
in
scas
in
outsl
push
mov
repnz
and
in
xchg
loope
cmp
outsl
scas
adc
inc
pop
jp
stos
test
popa
ja
movsl
sub
mov
add
idivb
mov
and
push
cs
roll
lret
add
push
ret
mov
adc
xchg
test
pop
mov
adc
fistpl
xchg
and
insl
sub
stos
int3
stos
mov
aam
ja
icebp
inc
insb
repz
lock
into
mov
sub
adc
inc
stos
je
pop
movsb
arpl
sub
xor
subl
ror
pop
jns
rcrb
jno
out
fsts
xor
xchg
xchg
sbb
pop
sahf
ret
stos
stc
cmp
jo
jae
enter
rcrb
xchg
cli
jbe
push
leave
rcrl
inc
xchg
roll
xchg
sbb
out
pop
dec
and
sbb
xchg
mov
leave
fisttpll
or
lods
cmp
les
lods
inc
outsl
movsl
xlat
cmpsl
ljmp
xchg
pop
ror
inc
push
test
sbb
sub
add
lods
adc
fwait
sbb
lret
mov
sti
imul
xchg
pusha
shrl
ds
fistpll
jge
inc
cmp
mov
test
jb
imul
mov
sbb
lret
cld
pop
push
pushf
pop
inc
dec
jp
add
ja
add
ja
fcmovnb
icebp
push
sti
fwait
mov
pop
insl
sbb
std
test
popa
pushf
es
push
lock
mov
inc
add
add
jmp
cmp
inc
les
lahf
mov
fcomps
test
jbe
push
pop
pop
sbb
or
fwait
ljmp
or
ret
push
push
loop
sbb
stos
stos
pop
subl
lcall
je
dec
call
cmpb
adc
xchg
imul
ss
push
sbb
ret
cmp
imul
jl
pop
jae
notb
adc
icebp
aas
xchg
in
cmp
mov
scas
rclb
cwtl
jnp
xchg
movsb
or
out
jg
xchg
sub
jle
out
cmp
sub
repz
loop
shll
mov
dec
andb
cltd
std
mov
add
adc
test
in
mov
jmp
or
repz
out
or
fwait
jb
lods
out
inc
push
mov
cwtl
xlat
cmp
xchg
aas
mov
sub
add
shrl
xchg
mov
jge
push
mov
xlat
cwtl
iret
ss
add
das
sbb
fidivrs
movsb
pop
leave
jg
pusha
out
xor
lock
ret
dec
inc
rorl
in
mov
imul
test
inc
mov
sbb
or
push
mov
testb
mov
out
sub
int
mov
fiaddl
lds
lahf
andl
xchg
nop
das
mov
jb
mov
xor
push
lods
push
mov
mov
out
hlt
mov
push
jmp
es
jbe
cmp
pop
mov
mov
subl
and
ret
in
jge
out
outsl
cs
adc
shrl
or
js
fisubl
test
inc
leavew
rolb
push
mov
cli
xchg
adcl
fldenv
shlb
xor
pop
push
jecxz
dec
mov
call
or
out
out
inc
inc
rcrb
aas
mov
dec
or
stc
mov
cmp
test
out
icebp
gs
in
dec
das
fadds
push
xchg
in
adc
cmp
cli
stc
pop
es
popf
loope
fsubrs
sbb
jmp
pop
data16
or
push
iret
hlt
fiaddl
jecxz
mov
test
xchg
outsl
sbb
sbb
lds
inc
outsb
aad
xchg
loopne
shll
ljmp
mov
aas
add
cmp
xchg
and
loope
mov
enter
jne
add
push
pusha
icebp
dec
pop
xor
icebp
idivb
rorb
test
jbe
fwait
jle,pn
mov
push
and
lods
push
aas
xchg
stos
xor
sar
or
pop
xchg
add
xor
ret
data16
jne
ret
mov
adc
mov
fists
sbb
push
xor
cmp
pushf
addr16
aaa
mov
stos
fidivrl
or
push
pop
int3
sbb
je
jae
jmp
stos
repnz
inc
test
sbb
les
jl
cmp
mov
jnp
sbb
add
sbb
hlt
push
mov
and
outsb
inc
sub
inc
mov
sbb
cmp
jns
adc
jae
pop
sbb
push
inc
sarb
mov
xchg
scas
pop
add
shrb
and
insb
je
int
or
inc
mov
loop
cmc
mov
cmp
sbb
mov
add
sub
cmp
jnp
and
cmp
and
mov
sub
idivl
dec
pop
push
jno
out
inc
jge
push
push
dec
jnp
push
pop
mov
pop
xor
dec
and
add
in
xor
test
test
das
lret
out
subl
cs
fcoms
pop
ss
dec
dec
roll
mov
scas
xlat
out
aad
data16
and
in
jo
mov
jbe
ss
cld
inc
pop
xchg
imul
cmp
add
addr16
out
push
jo
mov
es
lds
mov
pop
aaa
int
or
inc
sub
adc
add
dec
rol
jmp
lahf
adc
and
pusha
outsl
xlat
inc
imul
insl
insl
dec
cmpl
pop
xchg
jno
sbb
mov
repnz
jnp
movsb
test
cmpsb
sub
jge
or
mov
push
xchg
and
and
or
out
sub
and
lock
out
inc
push
adc
lds
jno
mov
xchg
bound
cmp
int
mov
hlt
mov
push
add
subl
jecxz
push
imul
out
sbb
stos
inc
in
mov
xor
stc
aaa
lcall
push
decl
lret
mov
sbb
cmpsb
inc
in
rorl
push
movsl
imul
cmp
jo
mov
or
roll
hlt
shll
push
outsl
pop
xchg
push
popa
lcall
mov
imul
test
aas
lods
test
jg
xchg
outsb
and
jmp
cmc
stos
fsubrs
dec
or
mov
jmp
lahf
or
add
clc
or
sbb
ret
cmp
lahf
mov
mov
fidivs
mov
outsl
mov
cmp
xor
rorl
repz
push
xchg
outsb
jge
inc
aaa
mov
in
outsl
mov
cli
mov
stos
add
loop
mov
cmp
mov
inc
add
stos
mov
imul
push
fldl
sbb
dec
adc
lods
inc
lret
stos
sbb
cmpsb
orl
fcomps
cwtl
add
pushl
xchg
dec
jbe
int3
mov
mov
sbb
mulb
xchg
bound
rorl
cmpsl
push
bound
jns
mov
aam
inc
dec
ja
clc
nop
fldenv
mov
fmulp
imul
jns
loope
pop
jecxz
push
test
lahf
dec
jp
icebp
sarb
shr
inc
test
jb
pop
xchg
jp
jg
inc
add
jns
shll
xchg
mov
xor
pop
dec
sti
xlat
call
cwtl
adc
mov
add
leave
pop
es
int
adc
push
ja
shrb
inc
mov
add
mov
addb
jb
subb
addr16
push
jg
add
mov
sub
arpl
push
fcmovb
dec
cmp
sbb
jg
stc
mov
mov
pop
ret
rolb
mov
pop
pop
cmpsl
jmp
lods
repz
fmulp
fldcw
and
jl
repz
into
jg
sub
shl
mov
mov
ljmp
jns
mov
dec
adc
insb
mov
sarl
mov
loopne
es
jmp
test
xor
roll
sbb
out
clc
pushf
xchg
clc
shrb
repnz
in
test
pop
sub
push
inc
inc
lds
xchg
push
ret
mov
fistl
xlat
mov
sub
stos
mov
sahf
shrl
mov
cld
out
add
lcall
sbb
fwait
jecxz
xor
fidivrs
push
clc
add
outsl
pushf
xor
add
or
test
jo
jb
aam
mov
popa
and
lds
mov
jl
data16
fs
ljmp
inc
cmpsb
add
sti
daa
les
jl
jae
jns
sub
test
fisubs
or
adc
sarb
cmp
inc
mov
push
cli
or
mov
orl
nop
icebp
rol
aam
clc
push
std
imull
cld
das
stos
inc
das
rorl
dec
pop
jno
cmpsb
sub
jns
inc
mov
cltd
sub
inc
dec
jnp
in
cmp
loopne
idivb
dec
sub
adc
jne
lods
clc
cmp
push
mov
push
aam
cmpsl
jnp
mov
scas
aad
gs
push
xchg
cs
lret
ja
sbb
lods
outsb
mov
loope
fyl2xp1
mov
dec
fbstp
jmp
lcall
inc
xor
out
sti
push
push
pop
repnz
push
rcll
arpl
xorb
sub
enter
popa
fnstcw
inc
scas
out
pop
scas
push
or
dec
lds
out
data16
or
scas
mov
jecxz
mov
xchg
pusha
hlt
jne
cmpsb
and
insb
mov
cmp
mov
cmpsl
in
mov
mov
in
push
ss
out
repnz
adc
dec
sub
jb
pusha
mov
shlb
shr
loope
stos
pop
stc
sarl
sahf
cmp
xchg
cmp
cmp
fwait
add
or
lea
xchg
wrmsr
aaa
cmp
leave
pusha
mov
sbb
jmp
orl
and
jmp
in
clc
out
call
int
lcall
mov
add
xchg
je
jmp
jle
loop
mov
pop
cmpsb
fistpll
pop
loope
dec
flds
stos
bound
test
call
in
testb
cmc
xor
push
dec
mov
cli
dec
scas
clc
xchg
loopne
push
cmp
inc
jecxz
aam
lock
sbb
daa
mov
inc
mov
idivb
sub
add
sub
sti
pusha
out
or
nop
jge
inc
sbb
xchg
scas
leave
mov
cltd
jg
enter
push
push
mov
pop
pop
inc
cmpsb
sahf
arpl
pop
pusha
adc
sub
sbb
mov
movsl
push
xchg
xor
es
add
sbb
popa
popf
mov
xor
mov
sahf
insl
int
xchg
and
dec
addb
daa
into
adc
cwtl
rorl
aas
roll
jp
je
inc
jl
push
or
jmp
rcl
dec
pop
jns
data16
jns
adcl
fcmovnb
cmp
repnz
jle
mov
add
scas
fisttps
js
mov
push
std
sbb
jge
fiadds
mov
aaa
dec
adc
inc
xchg
push
fstp
clc
gs
icebp
sub
adc
xor
mov
jge
cmp
dec
lahf
lahf
sub
clc
lock
push
cmpb
add
loop
add
jne
ljmp
sbb
or
mov
xchg
mov
icebp
pop
xchg
inc
imul
xchg
stos
lea
arpl
ds
imul
xor
jns
push
xchg
or
xchg
test
xor
test
imul
push
lret
fcmovbe
inc
aad
or
mov
mov
jl
fisubs
pushf
adc
fcoms
dec
es
or
cwtl
sbb
in
xchg
stos
sbb
mov
std
xchg
sub
fwait
inc
popa
lds
shll
inc
lahf
les
adc
xor
mov
popa
incl
stc
hlt
and
mov
pop
adc
pop
outsb
xchg
mov
xor
xor
jmp
inc
hlt
das
mov
lea
fstl
or
in
jge
leave
rclb
or
js
fpatan
in
js
mov
jp
jecxz
pop
movsb
xor
xchg
in
out
in
pop
dec
decl
jnp
sbb
add
xchg
xchg
lcall
shrl
fstl
pusha
sbb
shrl
xchg
mov
jp
pop
shrl
mov
cmp
jle
ljmp
jbe
push
and
adcl
fsubrl
or
imul
push
std
and
cmpsl
ret
dec
push
movsl
test
popf
int
inc
movsb
faddl
nop
rcr
out
popa
push
in
xor
scas
xchg
or
leave
in
mov
int3
lds
jg
aaa
sub
inc
xchg
dec
enter
push
test
lods
fdivs
mov
iret
xchg
sti
cmp
sub
push
dec
cld
je
lock
inc
jns
lahf
cmp
push
imul
add
repnz
or
dec
in
mov
nop
icebp
lods
cmpl
sbb
jge
insl
std
inc
pushf
adc
ficomps
fisubrl
std
cmp
pop
jg
imul
jbe
movsl
dec
jns
jmp
dec
outsb
lcall
or
jne
ljmp
add
lcall
xchg
es
cmp
movsl
ret
adc
dec
jno
mov
pop
inc
sub
ss
jg
add
in
test
fabs
sbb
cmp
jnp,pt
roll
jmp
fdivrl
out
push
in
mov
not
cmpb
sbb
add
push
cwtl
pop
decl
lret
aad
fimull
in
arpl
xor
inc
jmp
aad
int3
add
outsb
les
dec
ljmp
int3
mov
movsl
pop
mov
sbb
nopl
or
jp
jl
push
pop
jns
repz
or
stos
iret
sub
scas
inc
in
clc
int3
mov
pop
mov
or
int
cmp
test
popf
mov
mov
sbb
xchg
shll
cmp
add
mov
mov
into
sbb
int3
inc
call
mov
add
mov
or
or
aas
push
jbe
lret
ja
sbb
sbb
adc
pop
mov
incl
adc
ret
pop
scas
xchg
push
sbb
fidivrl
pop
xor
sbb
cs
xchg
sahf
aas
enter
xchg
mull
shrl
pop
mov
outsl
jns
bound
jecxz
xchg
fmuls
push
sub
pusha
mov
jnp
scas
mov
in
pop
outsl
movb
add
mov
movsb
cmc
insb
movsb
loope
add
cmpsb
out
adc
dec
cwtl
stos
es
std
push
pop
mov
push
ljmp
out
cld
imul
icebp
push
adc
adc
imulb
inc
addr16
push
mov
leave
mov
je
pop
aad
call
mov
hlt
inc
cmp
mov
cmc
mov
jno
push
push
cmp
pushf
mov
or
push
sub
and
lahf
shlb
sub
dec
xchg
out
pop
fisttps
sbb
pop
aaa
mov
mov
imul
bsf
pop
pop
jne
mov
adc
sub
adc
repz
shr
mov
dec
push
mov
mov
mov
enter
stc
sbb
insl
dec
sti
mov
mov
ljmp
mov
shlb
sarb
jle
test
inc
icebp
jmp
xchg
or
test
xchg
or
push
loope
std
cs
jae
push
imul
inc
mov
dec
lret
fs
dec
push
inc
scas
pop
pop
rorb
dec
stc
and
or
cwtl
and
cltd
jmp
pop
dec
sti
stos
sub
out
pop
out
cmp
mov
into
jecxz
decb
mov
mov
and
pop
fbstp
mov
cli
jno
push
push
cmp
xlat
mov
mov
jno
lcall
push
dec
out
mov
xor
jmp
push
sub
aam
xor
mov
out
iret
fidivrs
inc
push
outsl
loope
mov
push
cmp
dec
mov
pop
lds
jns
repz
cmpsb
scas
incl
jb
cmp
out
xchg
push
jl
or
pop
jns
fnstcw
mov
jbe
inc
mov
sub
mov
add
inc
cld
xlat
cmp
pop
cmp
scas
aaa
rcrb
adc
jmp
lret
mov
adc
in
inc
cmpl
out
xchg
js
fsts
mov
and
pop
cmp
icebp
leave
xchg
fucomi
insb
cmp
sbb
test
mov
pop
sbbb
mov
inc
xchg
lods
sarb
lcall
sub
cmp
or
lock
sarb
test
or
out
imul
inc
sub
ds
push
scas
or
pop
mov
sbb
inc
adc
repz
xchg
add
scas
mov
jp
jle
insl
mov
jne
cmp
add
mov
push
mov
mov
mov
push
stc
add
jecxz
int
cmp
or
sahf
mov
data16
fsincos
mov
sbb
mov
xlat
mov
mov
xchg
push
push
push
test
mov
dec
divl
inc
loope
dec
fs
xor
into
loop
and
repz
or
in
jb
dec
aam
sub
mov
fisubl
mov
dec
add
inc
pop
rclb
sub
sbb
ret
or
pop
push
and
adc
call
daa
xchg
pushw
call
mov
mov
jo
dec
xchg
mov
outsb
lds
out
adc
sti
das
rol
add
loopne
add
cmp
jae
adc
pop
ss
sub
imul
lret
movsb
or
aam
sahf
add
stos
xor
aad
mov
fs
push
testb
cwtl
xchg
stos
mov
xchg
testb
loop
data16
lds
mov
push
cmp
fs
pop
or
subl
push
clc
mov
fisubl
jno
icebp
mov
sbb
aam
imulb
inc
mov
loop
push
xchg
mov
push
mov
ja
shl
int3
in
or
push
int3
pop
cmc
mov
std
adc
dec
or
xchg
adc
fucomip
adc
test
xchg
shrd
out
add
andb
pop
repz
out
std
mov
jle
dec
sbb
mov
lods
ret
xchg
xor
sub
mov
add
stos
add
sti
mov
notb
jne
pop
fsubrs
hlt
cld
inc
xchg
push
mov
out
inc
pop
aam
xchg
mov
out
cmp
cmpsb
in
jbe
adc
js
jns
push
and
adc
in
push
stc
orb
neg
movsl
pop
outsl
sub
cli
addr16
pusha
ljmp
fimull
jns
push
dec
outsl
clc
in
js
stos
mov
jno
out
roll
sub
dec
mov
xchg
mov
push
inc
jge
sub
xorl
and
mov
negl
out
test
push
insb
add
and
add
ret
dec
int
sub
sbb
sub
jbe
test
or
sub
es
and
idivb
mov
inc
arpl
pop
jp
adc
jmp
cmp
mov
out
sub
pop
hlt
and
and
add
jo
mov
cli
cmp
std
mov
pusha
sbb
mov
jno
jp
push
sub
notb
aaa
out
int3
cmp
scas
ljmp
mov
dec
mov
xor
dec
ds
sbb
sub
xor
and
outsb
iret
and
rcrl
and
cmc
out
adc
mov
xchg
int
std
ret
in
dec
cmp
cmc
cli
mov
sbb
add
pop
inc
imul
xor
mov
mov
ljmp
xchg
inc
mov
cwtl
idiv
and
into
dec
jecxz
xor
enter
hlt
jp
int
mov
stos
or
jb
sub
shll
inc
and
sarl
jl
jbe
sahf
push
inc
fwait
cmp
xor
mov
xchg
ret
mov
fstl
add
pop
cmpsb
pop
push
cmp
inc
or
ret
xchg
add
insb
jmp
dec
mov
cmp
in
cld
lods
outsb
pop
out
inc
xor
jl
cmp
adc
movsb
inc
xor
aad
shrl
pop
outsl
dec
test
mov
nop
sbb
push
cltd
aad
dec
bound
popf
loope
dec
jmp
aaa
rclb
lock
xchg
mov
pushf
pop
xor
push
xor
adc
cmpsb
test
popa
inc
cltd
inc
or
or
addr16
pop
jbe
daa
jo
cmp
sub
test
push
mov
mov
sbb
jecxz
shl
ret
adc
daa
xchg
mov
push
xchg
jae
sbb
dec
push
or
pop
cmpsl
cmp
cmc
sub
xor
shrb
popf
cltd
adc
lods
or
and
ret
push
inc
into
mov
xor
mov
jg
adc
scas
out
rclb
dec
fcoms
pop
mov
aad
iret
pop
test
jbe
ja
nop
nop
xor
ror
mov
add
add
push
fs
stos
add
loopne
pop
fwait
les
es
mov
mov
jg
xchg
in
outsb
pop
iret
and
ficompl
notl
ficoms
inc
adc
popa
out
xor
xchg
xchg
stos
push
sbb
sbbb
loope
mov
int3
inc
jae
imul
pop
xchg
cmpsl
mov
mov
cmp
sbb
les
dec
lahf
insl
mov
andl
fcos
test
ljmp
negb
cmp
adc
push
sbb
adc
pop
pop
jb
xchg
insl
jp
jno
hlt
cmc
das
xor
or
xchg
sub
adc
fwait
rcll
sbb
push
xor
dec
xor
inc
cld
push
nop
and
push
mov
lret
mov
leave
movsl
dec
dec
mov
jnp
iret
and
aad
cmp
dec
scas
mov
xor
and
sbb
lea
fldl
std
mov
and
ss
add
cmp
adc
mov
in
adc
scas
test
sbb
mov
adc
fldl
das
stc
xchg
insl
aaa
lds
fcompl
in
inc
inc
sub
out
lret
mov
jo
xor
dec
push
pop
push
push
dec
or
push
in
das
add
ss
out
pop
and
clc
int
sub
sub
fdivrs
sbb
or
jg
mov
sbb
cmp
pusha
dec
mov
pusha
mov
pop
pop
inc
xchg
dec
dec
mov
stos
mov
pop
sbb
xor
mov
cmc
adc
add
mov
je
push
mov
mov
jne
test
pop
jle
aas
push
insb
inc
mov
mov
not
ds
repnz
mov
mov
sti
dec
sbb
push
rcrb
shll
ss
mov
popa
mov
arpl
dec
pop
jmp
gs
je
dec
push
and
aas
out
popl
push
shr
mov
sbb
ffree
xor
or
lret
es
fimuls
jecxz
jns
jae
lds
add
leave
or
out
insl
dec
lock
adc
fcomip
fdivr
add
push
scas
dec
mov
cld
fidivs
enter
into
add
stos
in
ret
sub
mov
repz
push
test
sahf
aas
dec
mov
pop
jg
push
mov
and
mov
jnp
ljmp
divl
add
xchg
sub
imull
jp
sti
inc
jmp
imul
orl
add
jae
xchg
ficoml
xor
cld
shl
test
mov
lret
and
cmpsb
inc
int3
push
xchg
push
mov
imul
out
outsl
add
idiv
xchg
fiadds
cwtl
pop
add
mov
mov
xchg
imulb
adc
jmp
ljmp
adc
and
sbb
mov
in
je
mov
jae
scas
mov
js
testb
sub
adc
mov
sarb
int
lds
add
adc
dec
pop
shll
mov
pop
mov
scas
cmp
xchg
lret
jnp
dec
or
pop
roll
push
jle
sbb
inc
aam
jg
rcrl
xor
cld
xchg
inc
mull
lods
test
lcall
mov
je
push
and
into
jle
leave
stos
adc
mov
and
mov
fdivrl
cmp
mov
insl
andl
inc
dec
mov
sahf
cmp
outsl
mov
pextrw
lods
sbb
ret
mov
xlat
insb
push
jo
pop
xorb
pop
aaa
aas
arpl
push
adc
pop
or
pop
stos
xchg
test
mov
inc
pop
jns
pop
pushf
in
xor
pop
xchg
sbb
ss
fcmove
push
in
and
outsb
mov
lahf
leave
in
xor
fsubrl
movsb
jae
rcll
sbb
jo
pop
fs
ret
add
jno
and
repz
push
popa
xor
int3
push
loope
push
cwtl
inc
push
mov
divl
xor
lret
pop
pop
mov
push
fs
adc
or
xchg
jg
mov
inc
xor
mov
cmp
into
push
lods
inc
arpl
pop
enter
mov
mov
das
jns
ss
add
sub
sub
fistpl
ss
mov
mov
mov
movsl
push
pop
mov
adcb
adc
cmp
or
ds
or
dec
mov
sbb
cwtl
inc
mov
push
mov
hlt
mov
and
mov
iret
ja
aaa
rorl
lods
scas
stos
movsl
adc
or
xchg
mov
into
and
mov
mov
or
jecxz
cmp
mov
fsts
pop
loopne
or
mov
stos
popa
mov
or
mov
jns
ror
imul
pop
adc
jo
jge
jg
int
test
dec
jecxz
scas
cmp
subl
fcoml
rcl
sub
aad
arpl
lcall
sub
mov
pop
mov
cmpl
fiadds
jbe
loope
jl
inc
inc
adc
cmp
and
roll
ljmp
or
jmp
inc
hlt
or
xor
or
dec
add
adc
nop
sub
and
hlt
pop
cld
mov
in
sub
lret
jmp
xchg
push
sub
sahf
mov
in
adc
mov
std
add
pop
push
push
out
movsl
lret
mov
sti
push
addl
roll
js
xchg
sub
sbb
jae
push
insb
mov
push
cmpsb
cmp
or
and
inc
in
insb
test
and
test
xchg
pop
mov
or
adc
xchg
or
xchg
or
xor
dec
rorl
xor
xor
stos
mov
ljmp
fimull
dec
xchg
mov
cwtl
jb
mov
xor
mov
iret
jmp
jge
adc
pop
enter
in
repnz
xor
xchg
mov
push
sub
add
xor
push
fcoml
int
sbb
xlat
jmp
repz
add
or
xor
popl
mov
lahf
pop
mov
cmp
mov
add
jle
jne
dec
and
dec
pop
and
add
imul
pop
arpl
pop
stos
inc
repz
iret
test
dec
and
pop
and
dec
push
add
insb
dec
aam
xor
mov
jle
aas
aaa
sub
and
add
and
add
fldt
into
sub
push
xchg
mov
or
nop
inc
popa
jbe
aam
or
xor
stc
and
inc
das
test
cltd
and
cmpsb
insb
mov
or
ja
cmp
pop
cmp
imul
adc
fnstsw
shld
inc
ja
lret
inc
cltd
insb
rcrl
test
xchg
dec
lahf
nop
popa
push
pop
rorb
repnz
ffreep
and
push
xorb
sbb
cmp
lcall
pop
imul
popf
adcb
scas
pop
repnz
add
shlb
add
and
shl
fadds
inc
push
das
adc
je
pop
push
sahf
lcall
push
je
mov
or
or
push
aaa
lds
sub
or
mov
cmp
sub
ja
push
je
pop
cwtl
int3
mov
inc
add
mov
popf
incb
mov
mov
push
call
das
mov
scas
mov
mov
negb
dec
mov
jo
shlb
sarl
adc
nop
out
xchg
loope
stos
cwtl
lds
push
jge
push
call
int
push
loopne
push
mov
shr
and
xchg
movb
add
xorl
and
sbb
or
jns
inc
mov
pop
mov
pop
ljmp
lahf
sub
lcall
jb
xchg
xchg
popa
in
cmp
lea
or
push
pop
ficomps
adc
imul
outsl
addr16
scas
repz
inc
icebp
stos
pushf
xchg
movsb
push
xor
in
shlb
pusha
jmp
fnstenv
aam
pop
xor
mov
sbb
cwtl
pop
ds
jnp
xchg
sub
push
pop
incb
cmpsl
jmp
movsb
jbe,pn
jecxz
shlb
fs
mov
fldcw
clc
mov
xor
or
pushf
rcrl
lahf
shr
fimull
popf
loope
sbb
mov
lock
adc
mov
fsubrs
aaa
xor
les
push
popa
add
fdivl
aad
xchg
ljmp
add
push
repnz
push
iret
add
inc
rcll
jnp
lods
or
mov
xor
inc
mov
jl
bound
cmp
in
add
popf
and
push
sub
jg
ret
xor
jae
mov
pop
dec
pop
dec
jle
lds
inc
lods
ss
xor
fsub
jo
jecxz
pop
xchg
sub
incl
pop
cmp
dec
pop
cmp
sbb
push
sbb
push
fdivl
cmp
sub
cmc
fwait
xchg
xchg
sbb
or
nop
lds
repnz
jae
lret
data16
clc
mov
cmp
jg
inc
js
ss
gs
out
xchg
test
push
test
pop
sub
sbb
in
jg
sbb
mov
xor
movsb
cmc
mov
jge
into
int3
dec
movsb
repz
je
mov
addl
aad
cwtl
stos
imul
addr16
inc
mov
inc
rorl
cli
mov
stos
xor
mov
hlt
push
push
lret
jmp
or
popf
in
mov
repz
fiadds
arpl
jbe
inc
pushf
xchg
sbb
jbe
or
sub
push
dec
mov
mov
ja
incl
mov
sub
repz
xchg
test
dec
outsb
xor
clc
mov
dec
aaa
in
out
clc
rorl
add
push
inc
push
push
sbb
fbld
inc
xor
and
and
xlat
sbb
mov
jo
dec
pushl
icebp
cmp
push
mov
and
sub
mov
out
push
push
out
mov
clc
or
mov
insl
dec
adcl
stos
pop
xchg
movsb
add
scas
and
sti
jle
add
js
lea
xchg
sbb
lds
push
cmpl
aam
dec
inc
repz
clc
hlt
pop
mov
iret
icebp
push
sub
xchg
mov
mov
pop
aam
pushf
jl
int
outsb
lret
mov
sbb
dec
sbb
mov
xor
imul
jp
push
jo
xchg
and
hlt
pop
imul
repz
outsl
and
ds
je
jb
mov
repnz
xor
sub
pop
sub
xchg
mov
mov
xor
enter
popf
cmp
add
inc
and
jb
push
xchg
iret
and
or
jae
mov
xchg
jmp
mov
jnp
lods
dec
mov
in
loope
in
jmp
push
cmp
sahf
add
jo
imul
jae
pop
mov
cmpsb
ds
add
adc
push
lods
push
les
rcr
or
mov
and
test
es
insb
pop
adc
inc
xchg
or
sub
orb
adc
pop
pop
in
or
push
fbld
jge
lahf
xchg
jmp
ja
andb
inc
mov
sub
sub
cld
rcll
jl
push
sti
xchg
loope
mov
dec
lods
add
push
movsb
ret
je
push
xor
sahf
xchg
jbe
fs
dec
cld
inc
testl
sarb
jbe
mov
icebp
mov
jecxz
adc
jecxz
js
mov
mov
shlb
push
sub
in
add
mov
push
out
imul
out
fcomps
inc
test
hlt
nop
es
orl
mov
lods
xor
xor
sbb
xor
aaa
mov
pop
out
cltd
inc
mov
add
aas
cmp
cmp
or
jne
push
ljmp
mov
xchg
addb
out
dec
mov
call
decl
ss
add
aas
push
inc
adc
fisubs
out
and
mov
and
mov
sub
lret
ret
xor
push
dec
fldenv
jae
mov
fwait
inc
push
cs
or
and
pop
stos
xor
dec
cmpsb
dec
fxrstor
mov
or
push
dec
mov
jl
sbb
pop
add
adcl
rclb
jge
push
adc
lahf
pop
dec
pop
pop
adc
dec
aam
pop
mov
orb
popf
jbe
stos
jp
fcoml
cmp
xchg
dec
push
mov
shlb
or
jne
push
jp
stc
rolb
push
aaa
ljmp
test
orb
add
push
jecxz
push
dec
std
mov
mov
mov
jp
outsb
dec
xchg
jle
dec
imull
enter
ret
ljmp
sbb
cli
pop
movsl
dec
adc
push
lods
mov
push
in
xor
rclb
out
jne
mov
mov
dec
into
inc
pop
in
aad
jl
mov
andl
sub
mov
lret
clc
ja
push
pop
pusha
adc
mov
jg
cltd
dec
mov
xchg
inc
insb
in
mov
mov
cwtl
jno
sub
std
adc
push
xor
fistps
mov
fnsave
into
xchg
test
cmpsb
lds
cmp
sub
cwtl
test
push
adc
or
adc
js
adc
pop
jb
sti
icebp
xchg
outsw
mov
mov
imul
shlb
mov
sbb
xchg
jmp
push
pop
push
dec
fwait
mov
jmp
sub
aam
andb
mov
xchg
jae
mov
ja
popa
int3
sbb
repnz
mov
call
xor
lds
in
pop
dec
jno
lods
and
xor
lods
test
xchg
fstpl
fildl
add
and
sbb
jecxz
popf
sti
jnp
jp
jb
hlt
mov
mov
mov
ja
movsb
dec
mov
push
test
scas
or
nop
push
ja
inc
mov
mov
rcll
xchg
cmpsb
andb
aaa
sti
or
fstps
je
cmp
lods
cmpsb
gs
mov
mov
jecxz
sbbl
ss
call
loopne
mov
lret
lods
cmp
or
out
nop
mov
dec
xchg
xchg
lock
popa
push
pushf
out
cmpsb
mov
nop
pushf
sbb
ret
adc
fs
popf
mov
jmp
sub
mov
mov
add
cmc
rcr
xchg
popa
dec
xchg
stc
sub
movsl
daa
imul
in
out
pop
sbb
sbb
aaa
pusha
loope,pn
push
out
jp
inc
fmull
cmpsl
mov
ret
fxam
cmpsb
sbb
fildl
repnz
jno
mov
pop
inc
cmp
imul
loopne
lea
inc
lods
pop
add
aam
or
out
js
dec
jns
rcrl
pop
shr
cltd
lahf
jbe
cmp
xchg
addb
pop
in
adc
aaa
adc
xchg
sbb
push
sub
mov
jb
mov
pusha
ret
roll
mov
inc
aas
bound
xchg
push
mov
adc
scas
adc
and
outsb
add
aaa
sbb
lock
jbe
xchg
cmp
mov
lods
into
mov
call
stc
mov
mov
dec
icebp
js
daa
adc
sarb
pop
mov
lret
int3
or
add
and
push
push
movsl
int3
lods
mov
jmp
repz
movsl
sbb
cmp
pop
lds
pop
test
pop
sbb
inc
mov
out
xlat
sbb
in
test
push
push
aas
mov
fsubrs
adcl
fdivl
xor
addl
cmp
xchg
or
adc
rclb
arpl
std
push
into
adc
aam
stos
sbb
dec
dec
mov
inc
jns
scas
fisubrl
pop
popf
push
leave
and
mov
fisubrs
xchg
jge
mov
std
xchg
jns
pop
cmp
jmp
jno
sar
mov
test
icebp
mov
jmp
mov
cmp
adc
lcall
inc
mov
movsl
xor
outsl
pop
mov
dec
mov
out
dec
or
pop
stos
mov
sahf
les
sub
mov
shlb
mov
push
loop
psubd
cs
pushf
pop
iret
daa
mov
scas
popf
jmp
pop
cli
loop
sbb
fldcw
subb
mov
pop
add
test
lret
mov
std
mov
mov
imul
and
les
cmp
inc
stos
int
push
sbb
ss
cltd
jp
ja
mov
in
scas
lret
and
mov
push
adc
mov
adc
adc
lods
loop
scas
aad
mov
lret
adc
ss
cmp
sbb
and
sub
cmovp
mov
lret
pop
mov
add
cs
and
inc
mov
test
adc
mov
push
clc
lods
add
mov
pop
pop
adcl
mov
out
xchg
je
and
mov
pop
mov
leave
sub
nop
ret
mov
sbb
fs
jns
mov
ja
and
gs
imul
jmp
addl
push
pop
add
mov
ja
mov
iret
mov
sbb
out
xchg
lcall
and
sarb
rol
enter
clc
aaa
ss
mov
aad
das
out
dec
or
add
lahf
mov
dec
xchg
inc
or
les
add
lods
or
sti
inc
xor
or
jg
outsb
jno
movsl
lret
int
mov
pop
ret
sbb
test
sahf
lea
add
push
xchg
pop
xchg
xor
js
cmp
repz
pop
push
andl
or
mov
push
cld
call
cli
push
in
loop
sub
out
or
mov
insb
push
mov
mov
or
loop
mov
fwait
pop
jns
in
cli
push
popf
jns
adc
loopne
clc
add
inc
adc
ret
xor
arpl
ss
loop
jo
sub
orb
notl
or
loopne
sub
cltd
pop
mov
push
movsl
adc
scas
dec
insl
sbb
testb
mov
mov
andl
movsl
cmc
lret
jnp
rcrb
imul
fcmovu
xor
lret
add
leave
mov
popa
pop
or
js
push
andl
cltd
or
pushf
mov
push
loopne
out
aas
loop
jb
idivl
add
pop
mov
je
in
sub
cmp
adc
test
adc
pop
jne
bound
insl
shrb
arpl
or
xor
divl
pop
shrb
je
push
in
mov
ret
sbb
push
ret
push
gs
adc
fs
push
mov
and
clc
in
call
cmpsl
xor
jp
pop
mov
mov
call
lea
cwtl
mov
ss
in
imul
ss
les
ret
mov
cmc
xlat
cmp
pusha
scas
repnz
fmul
lea
dec
jmp
incb
insb
test
leave
repnz
inc
push
repnz
pop
jl
push
mov
cmp
mul
in
cs
ja
cwtl
jne
test
sub
les
jno
cmp
fisubs
jne
dec
les
lods
jnp
repnz
jno
pop
mov
sbb
lock
repz
das
rclb
aas
or
js
adc
mov
pop
xchg
mov
lahf
iret
movsb
ss
mov
mov
arpl
cltd
std
jnp
loop
sub
orb
push
stos
pop
into
out
hlt
stc
cmpl
inc
cld
out
mov
cmpb
mov
aam
popf
push
xchg
loopne
sti
push
enter
cmp
mov
xchg
xchg
lret
sub
dec
mov
test
sti
push
mov
test
cmp
mov
jbe
or
clc
push
insl
stc
out
shr
hlt
imul
clc
call
icebp
push
dec
and
sub
dec
inc
cs
out
inc
sub
pushl
je
mov
push
ss
insb
aas
xchg
push
stos
push
mov
push
jns
lea
cltd
decb
mov
cwtl
stos
inc
mov
in
jmp
mov
sahf
pushf
xchg
hlt
scas
sbb
mov
push
test
sbb
lahf
inc
and
mov
inc
dec
aam
adcb
les
fsubrs
push
mov
cmp
in
sbb
xor
ss
cmp
xor
lds
lahf
scas
mov
xchg
out
mov
mov
imul
pop
mov
mov
sub
xchg
aaa
xchg
sti
push
repz
lret
xor
sti
xlat
loop
lods
outsb
xchg
test
fdivrl
cmovl
pop
mov
data16
or
loop
aad
sbb
imul
adc
outsb
ds
add
cmp
sbb
xchg
into
push
pop
out
add
cs
int
or
int3
jno
adc
negl
out
mov
jne
insb
filds
stos
aas
dec
lods
out
popa
aad
push
test
inc
inc
rorl
adc
cmp
mov
xchg
les
enter
test
fnsave
adc
lret
movsb
mov
lea
jl
dec
lahf
inc
outsb
addb
push
cmc
sbb
test
movl
jnp
add
out
xor
dec
sbb
outsb
call
mov
adc
dec
lret
imul
pop
push
not
jg
imul
or
mov
hlt
push
mov
fisttpll
jno
sub
mov
aas
push
add
xchg
rorb
aad
sub
lahf
push
into
aam
dec
push
pop
mov
jle
fstps
shr
dec
cmpsb
insb
mov
push
xchg
cmp
sbbb
sbb
add
faddl
subb
cmp
push
or
adc
mov
cli
in
je
dec
sub
pop
cmp
test
cmc
jl
pop
adc
cmp
jo
scas
addr16
ret
or
mov
stos
mov
mov
pop
lods
std
mov
and
add
test
and
or
lea
fwait
stc
out
add
mov
xor
mov
sub
out
test
and
pushf
sub
add
dec
adc
scas
add
shll
in
leave
out
add
data16
jmp
mov
xchg
lea
sbb
movsb
or
push
lods
pop
mov
mov
rcll
ret
cmp
outsb
or
sub
mov
add
out
jle
dec
jecxz
xchg
mov
fsubp
jge
leave
mov
sub
push
xchg
subl
push
fdivrl
gs
push
ss
or
jmp
xchg
test
testb
mov
or
cmc
mov
push
mov
or
xor
and
or
xlat
lahf
fildl
mov
mov
fmull
out
hlt
mov
pop
xchg
cmpsl
pop
push
cli
addr16
jae
mov
jnp
leave
lcall
xor
jl
xor
push
push
sbb
mov
loope
data16
repz
pop
jmp
addr16
cs
inc
push
mov
pushf
shrl
std
pop
into
ret
jmp
movsb
popf
or
sbbb
jbe
iret
jb
xlat
or
sbb
jnp
lret
or
adc
imul
xchg
xchg
mov
sarl
xor
pop
dec
inc
cmp
mov
mov
faddl
and
pop
cmpb
fsubrs
inc
jbe
mov
ljmp
loope
loopne
mov
sti
mov
push
inc
mov
dec
lret
push
jae
scas
adc
arpl
add
cs
mov
das
mov
mov
add
sbb
mov
fadds
stc
imul
push
sbb
fisubrs
mov
ljmp
and
sub
push
rorl
pop
movsb
inc
gs
sub
mov
sbb
jns
adc
mov
out
insl
stc
push
jne
clc
mov
push
and
pusha
pop
lods
stos
leave
mov
inc
dec
stc
rorb
ret
out
clc
inc
or
push
sub
ss
mov
or
mov
mov
xor
inc
lods
push
adc
je
adc
adcb
pop
dec
push
in
outsb
test
mov
mov
jg
pushf
pop
adc
cld
ds
insl
je
loope
lock
rclb
xor
and
sbb
les
or
xorb
icebp
and
mov
adcl
std
lds
test
insl
jb
bound
inc
xchg
sbb
pop
mov
loopne
cmp
cmp
add
sub
mov
sub
fistps
call
lahf
sub
or
xchg
jp
aam
rcr
inc
in
leave
sub
repnz
xor
pop
xor
sbb
aam
sub
adc
aas
adc
iret
mov
push
dec
xchg
jne
ret
pop
out
stos
jl
mov
inc
push
mov
out
ret
lea
scas
ja
popa
icebp
pusha
fs
clc
out
jecxz
out
rorl
repnz
xchg
cltd
shrl
jmp
add
shrb
je
das
add
hlt
ret
push
mov
scas
mov
nop
jb
je
fdivl
loope
add
xchg
sbb
dec
or
sub
jno
mov
loope
repz
stc
filds
inc
faddl
fnstsw
int3
fdivrl
jb
jge
jns
popl
shll
adc
lret
rcrb
out
mov
lret
fildll
popa
or
enter
loop
pop
scas
dec
and
stos
fsubl
jle
xor
push
loope
pushf
sub
jmp
cmpsl
pop
or
repz
mov
jae
dec
enter
sbb
add
stos
inc
add
add
jo
mov
in
pop
je
int3
pop
lahf
fistps
sahf
inc
hlt
and
cmp
cmpsl
andl
adc
loope
cmp
test
dec
mov
xchg
inc
push
dec
sti
lret
stos
add
sbb
iret
lds
jecxz
out
fsub
inc
in
test
fcmovnbe
inc
mov
jno
movsl
out
fcomip
addr16
rcrl
call
dec
rorl
fs
loope
sbbl
cmp
inc
push
or
pop
insb
es
and
and
mov
out
jl
jo
fisubrs
jo
test
push
rdpmc
cmovle
xor
jp
enter
inc
pop
inc
fiadds
jno
or
test
mov
imul
push
push
call
in
addr16
pop
in
cmc
lret
orb
pop
inc
loop
fsubs
pushf
xlat
int3
push
mov
lods
push
aas
int
out
imul
ljmp
in
pushf
jo
mov
cltd
inc
leave
mov
cmp
fildl
cmpsb
mov
ret
push
dec
and
add
jmp
push
mov
insb
es
push
cmp
cmpsl
pop
cld
jg
loop
jno
ljmp
and
xor
push
ss
jecxz
gs
test
jne
and
sbb
mov
ljmp
or
outsl
sbb
push
test
aam
hlt
sub
icebp
mov
pop
xchg
ret
cmp
hlt
into
xchg
sub
hlt
shrl
xchg
sub
frstor
mov
movb
pop
jle
jg
jno
loop
int3
adc
enter
jns
mov
mov
and
hlt
mov
sub
lret
sub
mov
dec
mov
in
push
cmp
xor
dec
scas
push
test
mov
xchg
cmp
xchg
inc
bound
inc
sbb
jno
mov
and
cld
cmp
dec
cmp
in
adc
cmp
or
and
gs
movsb
lea
aas
mov
das
js
pop
out
cld
dec
ret
add
adc
adc
mov
fstps
jmp
add
arpl
gs
and
or
movsb
inc
nop
cltd
mov
popf
mov
mov
or
cmp
jo
rorl
stc
adc
add
or
sub
and
pop
lahf
sti
jmp
fisubrs
hlt
xchg
popa
icebp
mov
lret
std
out
fistps
mov
dec
popf
jmp
jo
jae
sub
pop
addr16
ds
mov
sbb
movsl
out
or
mov
scas
adc
mov
iret
mov
jle
daa
xchg
mov
lret
sub
andb
mov
lea
mov
cmp
jp
jecxz
xor
sahf
fsubrs
jne
mov
loope
jp
cmp
mov
sub
pop
inc
dec
lds
mov
push
sbb
pop
cld
mov
popf
jne
insl
or
adc
ja
push
dec
xor
or
sub
scas
adc
xchg
fisubrl
les
cld
sub
mov
lods
jmp
pop
push
daa
test
fwait
sub
push
outsb
pop
pop
insl
cmp
jb
lea
adc
test
push
out
pop
add
push
test
adc
ret
jb
dec
ljmp
xchg
add
adc
sbb
add
push
clc
and
in
pop
inc
adc
lods
les
add
les
cli
lret
xor
sbb
out
mov
and
mov
outsb
and
ffreep
adc
xchg
jns
mov
movsb
lods
stos
xor
xchg
fistpl
dec
shrl
call
bound
jle
pop
sarb
or
jg
ds
pop
in
jns
inc
push
insl
pop
and
pop
sbb
mov
push
aas
pop
add
popf
cmpsl
jbe
sarl
push
ret
ljmp
pop
jecxz
rorl
pop
push
pop
cli
xor
popa
jp,pt
sub
jne
jle
into
into
lcall
mov
jae
in
ret
push
and
lds
stc
icebp
movsl
cmp
sahf
push
inc
call
or
out
js
adc
jg,pn
mov
jb
mov
or
sub
fcoms
fisttpl
xchg
sbb
dec
cli
xor
dec
insb
ss
insb
pop
sub
into
movsb
xchg
sarb
add
mov
mov
scas
mov
pop
and
adc
fnstenv
insl
fwait
or
or
lcall
cli
jbe
inc
or
inc
mov
stc
inc
repnz
push
adcb
stos
stc
loop
nop
push
cmp
and
into
cmc
scas
dec
cltd
fstps
jmp
sub
cmpsb
xchg
ja
or
repnz
stos
mov
jg
test
mov
mov
shrb
mov
push
fwait
sbb
insb
ds
add
xor
add
push
push
cwtl
pop
out
cmp
push
mov
jne
add
stos
mov
std
test
cld
aas
ret
xchg
test
inc
pusha
or
lods
adc
xorl
iret
adc
andb
mov
aaa
orl
xor
dec
sti
dec
mov
int
ljmp
repz
mov
cli
repz
fstl
ja
jle
cmc
cmc
sub
xorl
jb
mov
adc
or
lret
jp
lea
testl
mov
clc
push
lods
ja
movsb
jnp
and
out
pusha
jb
mov
xchg
mov
pushf
ds
iret
pop
push
pop
lea
pop
js
data16
fbld
pop
sbb
dec
pop
mov
and
mov
jge
xor
xorl
xchg
js
out
mov
test
jecxz
dec
sbb
loope
cmp
push
xor
rolb
push
xchg
jle
or
lret
daa
lods
jno
lods
jno
filds
mull
lea
imul
or
mov
cmp
mov
leave
sbb
xlat
pusha
cmp
insl
dec
arpl
lds
pop
or
xor
loop
push
pop
add
addr16
jmp
leave
xor
je
repnz
xor
xor
mov
ljmp
sbbl
aas
mov
mov
jmp
div
add
fldz
mov
fistl
inc
cmpsl
mov
lods
cltd
sub
add
sbb
push
shll
mov
arpl
sbb
sub
mov
cmp
cli
clc
mov
scas
inc
cmp
jo
inc
daa
mov
mov
jbe
sbb
repz
cmp
lcall
and
iret
xor
clc
popa
push
outsl
loopne
adc
push
mov
iret
dec
xchg
xor
imul
dec
pop
aam
lret
adc
jae
jae
pop
mov
and
cmp
add
jno
mov
enter
loop
call
and
sbbl
inc
lahf
nop
and
add
aas
fwait
pop
fs
mov
je
insb
lret
mov
add
ffreep
sbb
lds
pop
and
into
movsb
dec
sub
jae
jo
mov
mov
in
fcmovnbe
in
or
jnp
pop
repz
lret
ret
out
push
mov
aam
shlb
or
in
ljmp
mov
shrl
inc
mov
ret
dec
mov
push
rcrl
ljmp
push
or
add
sbb
paddd
ret
inc
mov
pop
cmp
sbb
movsb
popa
dec
std
or
sub
lcall
adc
mov
or
xor
mov
inc
insl
push
ffree
in
jmp
push
sti
sbb
lret
nop
ds
movsl
insb
xchg
mov
outsl
imul
jecxz
ficoms
test
loope
repnz
cmp
je
jg
cmp
gs
out
out
sarl
lcall
mov
pop
lock
mov
push
add
shll
dec
jns
jle
cwtl
gs
fs
test
xor
sbb
xlat
loopne
repnz
lret
je
loope
cmpsl
add
stos
mov
cltd
add
rclb
pop
push
iret
imul
popa
xchg
dec
jmp
mov
jge
push
pop
loop
enter
pop
loope
les
sbb
push
mov
outsb
mov
add
pop
add
ljmp
pop
mov
sub
mov
mov
inc
adc
jo
jge
dec
adc
add
lods
sub
cmp
add
stos
xlat
enter
mov
mov
cltd
cmp
repnz
jb
mov
mov
stos
cmp
lock
enter
out
xor
jb
enter
cmp
pop
sbb
xchg
cmpsl
imul
xchg
push
jp
scas
sti
scas
stc
mov
scas
fsub
in
mov
mov
pusha
out
pop
lret
inc
mov
insb
mov
or
add
pop
xor
jecxz
cmpsl
cmp
mov
and
jns
repz
ret
and
sub
rorb
sub
test
xchg
push
loop
js
icebp
lret
inc
mov
orl
and
in
add
aaa
in
mov
clc
pop
pusha
stos
loope
sti
push
fistps
out
addr16
jne
push
adc
mov
int3
stc
mov
pop
sub
icebp
cld
xchg
xchg
insb
add
or
adc
shl
dec
test
in
fs
js
lret
jbe
std
scas
pop
push
xor
sub
pop
push
mov
sub
dec
dec
pop
test
sahf
clc
mov
adc
out
out
pop
push
repnz
fiadds
lock
call
mov
push
cmp
inc
addr16
insb
xlat
in
sub
sub
mov
movsb
ljmp
xorb
adc
int3
and
sti
notl
fidivrl
out
pop
cld
inc
imull
xchg
pop
mov
stos
xchg
popa
cmp
clc
add
sub
mov
add
aam
lock
lods
repz
je
xor
pop
lea
in
popa
es
in
sbbl
mov
adc
lods
std
mov
jl
dec
xchg
nop
outsb
add
mov
ja
push
cmp
cmp
push
test
jmp
inc
and
dec
insb
dec
scas
daa
enter
jb
cmp
enter
dec
sub
add
negb
ret
mov
xor
cli
adc
xor
jb,pt
push
mov
sub
and
jp
xor
sarb
jg
test
in
sahf
mov
and
adc
inc
jno
jne
add
int
hlt
and
out
hlt
loopne
xchg
add
xchg
aas
movsb
orb
mov
push
in
cmp
mov
xchg
mov
mov
aas
pushf
iret
mov
cmp
pop
test
cltd
popf
in
fcompl
in
sub
icebp
cs
mov
cmp
in
adc
scas
cs
sub
les
aaa
stos
inc
sti
xchg
je
cs
mov
test
into
pop
push
pop
cmp
lret
mov
jne
mov
rclb
push
loopne
cli
mov
cmp
pop
subl
es
test
stos
or
jnp
mov
mov
adc
sbb
mov
jne
das
mov
xor
xchg
in
add
jnp
movsl
adc
jns
pop
movsb
fsubs
sbb
mov
imul
dec
mov
mov
mov
leave
dec
loope
dec
push
sbbl
sti
hlt
mov
outsb
push
sub
xor
add
pop
push
mov
and
lcall
fwait
scas
jle
jo
int3
jo
cli
jnp
add
shlb
in
mov
pop
cltd
sub
mov
dec
jle
mov
adcl
adc
std
xlat
imul
loopne
jae
jecxz
hlt
mov
mov
paddb
push
adcb
shlb
mov
mov
movsl
dec
inc
sahf
scas
fisttpl
or
jmp
ja
sub
repz
dec
dec
xchg
nop
mov
inc
popa
fs
stos
clc
mov
jecxz
fs
out
mov
in
fmulp
mov
jmp
aas
and
cwtl
jne
inc
je
in
outsl
out
jns
sub
or
scas
jmp
pop
and
sub
sbb
xchg
popa
mov
adc
pop
inc
jmp
mov
repnz
fldcw
shrl
out
jmp
insb
lret
sbb
enter
int
or
sbb
cwtl
clc
dec
int
addb
add
cmpsb
test
aad
sbb
and
push
adc
repz
adc
pop
cmp
test
inc
les
and
shrb
fs
mov
cli
lods
test
fs
pop
sbb
fs
inc
cs
test
into
mov
addb
aaa
sbb
mov
xorb
push
test
stc
xor
xor
rcll
xor
in
dec
aas
std
clc
pop
push
imul
hlt
sbb
repnz
sbb
in
shrl
push
push
mov
ret
push
or
push
sti
cwtl
das
and
cmp
shlb
shlb
xchg
fcoms
sbbl
jbe
mov
lret
sbb
rcll
outsb
cmp
dec
mov
sbb
lret
sub
sub
gs
inc
ficoml
test
pop
sub
divl
add
xorb
shll
xor
enter
jne
mov
sub
jp
idivl
lret
loopne
mov
jle
movsb
jl
pop
nop
ljmp
stos
inc
repz
mov
popa
cld
jne
das
mov
mov
pop
jo
sahf
xor
cmp
scas
stos
dec
sbb
inc
adc
cmp
mov
fwait
or
in
jg
sbb
orb
pop
xchg
dec
std
sub
ja
cmp
pushf
les
add
jb
in
push
cltd
mov
ljmp
nop
xchg
pushf
mov
leave
int3
mov
out
jecxz
cmpsb
mov
xor
stos
popf
call
jecxz
pop
mov
sahf
and
aam
pop
dec
adc
xor
fs
xor
loope
mov
xlat
addr16
ja
xlat
or
loop
inc
insb
mov
stos
and
pusha
or
and
push
adc
mov
add
push
push
xchg
xchg
push
out
out
out
cmp
sbb
inc
jmp
cmpsl
cli
stos
mov
je
call
icebp
std
sub
movsl
inc
fbstp
cmp
dec
add
jp
mov
call
in
inc
cmp
or
mov
and
leave
cltd
lret
dec
sub
mov
and
imul
and
aam
push
add
fsubrl
sub
push
cli
inc
pop
push
push
or
sub
mov
cmp
je
leave
inc
adc
or
xor
cmp
sbb
push
mov
mov
fldl
sahf
xor
inc
loop
push
dec
cwtl
jp
shll
add
push
cmp
pop
push
xorl
mov
outsb
jo
mov
or
jo
lahf
into
or
push
int
in
and
or
mov
dec
std
add
repz
int3
mov
outsl
out
sbb
leave
ret
mov
rcrl
loop
lods
xor
cmp
xor
mov
lods
push
mov
and
fwait
add
jl
xchg
fidivs
sbb
fst
push
loope
sub
push
jae
inc
adc
rcrb
push
cmp
cli
cwtl
shl
xchg
fwait
mov
sbb
mov
sub
push
xchg
cmpsl
pusha
and
mov
bound
mov
jle
lahf
into
jge
test
cmp
adc
cwtl
and
cmpsb
in
ss
gs
sti
in
add
sbb
pop
xor
sbb
lcall
in
out
mov
xchg
xchg
push
fnsave
or
dec
sub
mov
test
mov
push
aad
xor
inc
push
pushf
rcrl
push
addr16
loope
or
std
es
data16
aaa
mov
inc
outsl
mov
cwtl
and
mov
dec
ror
lods
les
movsl
popa
test
xchg
sbb
mov
inc
insb
mov
jae
sbb
push
xchg
add
lahf
imul
movsb
mov
idivb
ss
cld
xor
cmp
push
push
imul
xor
push
and
push
leave
in
ds
push
xchg
divl
ja
xor
mov
bound
std
mov
jle
lods
cli
pop
js
sbb
mov
mulb
fidivs
mov
outsb
mov
notl
in
cmc
and
mov
push
pusha
cmpsl
cld
and
test
shll
pop
and
popa
adc
or
pop
iret
or
clc
mov
in
lret
imul
adc
je
pop
in
pop
push
or
pop
fimull
pop
dec
sub
out
call
in
scas
cmp
and
xchg
xor
scas
sub
pop
popa
int
push
cmp
cltd
rol
add
sti
scas
mov
stos
lcall
out
xchg
and
shl
pop
out
ljmp
int3
hlt
inc
imul
arpl
lret
sti
jno
popa
pop
cwtl
cmpsl
outsb
mov
mov
pop
imul
enter
je
arpl
push
mov
mov
stos
xor
leave
lret
sti
dec
aas
repnz
push
or
mov
add
dec
std
fsubrl
test
outsl
add
icebp
adc
ret
cmp
scas
inc
sahf
dec
fwait
add
adc
popa
xor
dec
lock
inc
or
arpl
arpl
lret
insl
mov
jg
js
aaa
lock
mov
pop
cmpsl
cmp
outsl
xor
stos
mov
sub
push
or
add
andb
sub
nop
sbb
mov
fstps
inc
rol
leave
imul
cld
push
jo
daa
stc
cwtl
filds
xchg
fs
push
xchg
lahf
lea
ret
adc
cmpb
dec
or
mov
loope
imul
inc
sbb
mov
pusha
jp
mov
mov
sar
add
jp
sub
test
dec
testl
and
mov
std
dec
xor
leave
mov
in
or
mov
inc
divb
jge
popf
shlb
das
iret
bound
cmpsb
lret
aas
pop
test
and
pop
dec
adc
add
mov
aad
mov
cltd
pop
sub
aad
repnz
or
xor
push
fnstenv
mov
rcrl
pop
or
adc
bound
jle
jnp
add
cmp
or
mov
out
sti
xchg
out
mov
or
jb
in
ds
pop
mov
jae
les
mov
sbb
ljmp
mov
sbb
shrb
sti
imul
test
test
mov
sahf
scas
push
jne
push
mov
push
fildll
xchg
js
or
imul
sub
mov
xchg
shl
loop
out
stos
out
cmp
mov
ret
nop
loopne
fdivrp
jnp
xchg
jo
in
cli
adc
sub
pop
inc
gs
lcall
aam
mov
xor
lret
cltd
xchg
outsb
addr16
dec
out
out
out
gs
mov
nop
notl
xchg
in
dec
mov
pop
mov
jo,pt
cmp
dec
cmp
sbb
pusha
lds
pop
mov
cmpsl
sbb
mov
in
mov
testb
sbb
mov
mov
arpl
imul
or
std
loop
or
xor
and
sub
jl
stos
imul
mov
mov
and
dec
mov
inc
enter
daa
inc
pop
pop
xchg
ljmp
aaa
lods
cld
or
enter
jnp
cmc
ret
loopne
add
aam
mov
loop
mov
andl
loope
xchg
mov
pop
cmp
outsl
outsl
dec
sbb
push
fsub
pop
aam
incl
bound
shrb
inc
xchg
jmp
cmp
loopne
aaa
inc
lret
das
push
loope
jg
mov
ss
add
adc
mov
data16
outsb
jg
xchg
adc
inc
call
inc
sahf
mov
xchg
dec
cmpsb
adc
push
xchg
adc
jno
and
rclb
je
or
mov
inc
lret
subb
mov
push
stos
clc
push
mov
out
mov
sub
xchg
loop
add
iret
fldenv
jge
daa
lods
fwait
stos
pop
andb
jecxz
mov
xchg
dec
pop
rclb
cmc
dec
in
cli
fisubrs
fucomip
cmp
pop
int3
cmp
lods
imul
lcall
xor
in
dec
pop
pop
push
fwait
lret
jb
outsb
test
pusha
xlat
cmpb
cmovb
pop
mov
jae
dec
push
inc
pusha
and
or
adc
xchg
insl
mov
shlb
xchg
subl
pop
adc
add
inc
fisubs
and
int3
pop
inc
sbb
sub
ficoms
es
adc
cmp
add
jbe
sbb
jmp
fiadds
loop
cltd
mov
popf
cmp
out
imul
andb
mov
or
xor
cwtl
test
dec
ds
scas
xor
loopne
push
das
ljmp
dec
js
dec
pop
dec
aam
stc
or
into
xor
mov
xor
lods
cmp
outsl
test
mov
ss
in
pop
les
fsubr
sti
jbe
mov
jne
pop
mov
jle
or
mov
mov
fsubrp
jnp
jnp
movsl
sbb
dec
inc
inc
pop
xchg
dec
jl
cmp
xchg
xchg
mov
add
jae
cmp
out
add
insb
cmp
test
mov
adc
xchg
fbstp
and
addr16
or
aas
push
pop
push
sbbl
mov
repz
rcrl
cmpsl
icebp
xor
jl
out
stos
sarb
cmp
rolb
or
sbb
lahf
pop
das
or
mov
cs
adc
push
testl
loope
xor
sub
xlat
lds
ffreep
sub
and
xchg
stos
insl
lods
std
push
loopne
out
lret
sbb
ja
or
xor
lds
sbb
jne
sbb
aas
sti
out
add
cmp
mov
push
mov
addl
mov
mov
scas
insl
xchg
shrb
movsl
mov
outsl
xchg
sub
mov
adc
jno
jae
jl
shrd
subb
dec
dec
cmp
or
sar
mov
push
insb
mov
iret
dec
push
icebp
jnp
shlb
inc
cli
mov
add
xor
mov
aad
int
dec
sbb
test
mov
mov
push
sub
xor
mov
or
movsl
popf
cmc
in
mov
sub
jnp
inc
sbb
insl
imull
mov
out
sub
fldlg2
in
jg
inc
xor
cmp
push
xchg
sbb
cltd
adc
lods
mov
cmp
cwtl
aas
jmp
loopne
mov
inc
fs
adc
cwtl
or
push
dec
push
push
ja
push
push
adc
add
popl
mov
aam
mov
loopne
xchg
inc
push
aas
ss
xchg
out
scas
or
test
icebp
insl
test
in
xchg
cld
in
outsb
jbe
xor
sti
sahf
kmovw
sub
cmpsb
testl
ljmp
movsb
add
insb
pop
inc
and
sahf
test
inc
movl
orb
decb
test
aad
daa
sub
je
mov
cs
mov
jo
dec
push
add
jns
adc
int
lret
ja
mov
rep
popa
pop
ljmp
aaa
mov
ret
and
mov
std
push
inc
movsl
mov
lods
addr16
jmp
lods
pop
adc
ret
push
push
jno
aam
imul
pop
dec
clc
pop
stos
jno
and
push
mov
xchg
ss
inc
out
dec
idivl
cmc
adc
hlt
dec
xor
mov
popa
test
and
repnz
sub
xor
cs
ss
sbb
ljmp
inc
push
inc
lret
push
or
scas
rcl
xchg
mov
inc
mov
pop
xorb
das
fisubl
mov
cmp
sti
inc
out
push
cmp
inc
cmp
sarb
cmp
shl
jmp
or
dec
push
subl
sbb
test
jnp
in
jns
in
sbb
test
mov
jl
insl
es
idiv
dec
jl
pop
pop
mov
push
test
popa
or
pop
ret
dec
pop
mov
mov
cld
push
fstpl
mov
xchg
fstpl
push
popa
stos
sbb
push
pop
aaa
int3
sub
dec
fucomp
in
mov
gs
fcmovb
inc
lret
mov
xchg
clc
out
and
test
lret
inc
rol
icebp
jns
xor
inc
lock
push
rorl
jl
mov
aam
movsb
or
mov
inc
incb
leave
lahf
pop
stos
andb
xlat
test
aad
sub
pop
sub
sbb
dec
in
xor
clc
arpl
mov
push
stos
lods
cmp
push
mov
lret
imul
int3
mov
out
mov
lcall
add
add
dec
es
loope
divb
lock
cmc
add
adc
fsubrp
adc
or
jno
andb
in
push
fwait
xlat
decl
leave
pop
in
xlat
sub
adc
and
sarb
adc
jl
add
xchg
loop
int3
in
adc
push
inc
lock
lea
add
cmp
arpl
outsb
les
out
mov
push
test
mov
jae
sbb
ret
dec
mov
in
mov
mov
xchg
nop
pop
ss
pop
adc
cmp
or
test
repnz
or
dec
fsubp
xor
push
inc
and
mov
inc
fs
dec
pop
cmp
cmp
mov
cltd
mov
add
test
xor
inc
rorb
fcmovnu
mov
adc
push
sub
popf
in
cwtl
ficompl
xor
pop
cltd
fs
push
jle
sub
push
movsb
xchg
cmp
push
sub
pushl
mov
addr16
xchg
out
sbb
lds
pop
or
xlat
jmp
leave
jge
outsb
fwait
mov
jbe
or
hlt
xchg
and
cmc
ret
fwait
cmp
pop
cwtl
or
es
dec
inc
and
fstl
cmpsb
sub
rolb
lahf
xorb
push
and
inc
inc
mov
push
jl
outsl
dec
pusha
push
sub
jnp
and
sub
sub
mov
pop
lods
daa
pop
fimuls
add
sbb
xchg
mov
sbb
dec
test
clc
fbld
jl
fcoml
xor
cmpsl
enter
out
mov
add
xchg
test
xor
dec
add
jecxz
jae
cmc
loopne
sub
and
xor
rcrl
int
or
push
dec
inc
push
aam
dec
sbb
inc
adc
xchg
leave
inc
xchg
mov
repnz
pop
jo
xchg
lock
dec
sbb
movb
or
aaa
fisttps
push
cld
xchg
push
paddsw
hlt
dec
nop
call
rolb
push
repnz
ror
pop
loopne
nop
jecxz
and
dec
cli
mov
stos
cmpl
jbe
cmp
jle
outsl
adc
dec
mov
gs
push
imul
xorl
repz
xlat
xchg
cmc
mov
outsl
popf
ret
dec
cmpsl
add
inc
dec
adc
sbb
mov
jno
inc
pop
pop
ja
sub
pop
push
jo
dec
sub
cmp
mov
loop
fiadds
fistpll
mov
ffree
mov
adc
push
stos
pop
stos
mov
out
sbb
cld
xor
je
push
dec
mov
icebp
imul
inc
call
or
mov
mov
fiadds
negb
add
mov
daa
insb
xchg
jnp
insb
xchg
push
aam
pop
mov
mov
push
push
gs
mov
push
das
sbb
mov
mov
nop
mov
lcall
push
arpl
adcb
lea
or
mov
mov
sbb
pop
repnz
jl
inc
leave
shl
mov
sub
sbb
and
js
int3
pusha
push
push
in
ss
mov
pop
cwtl
cwtl
xchg
inc
jg
jg
jae
adc
jne
gs
neg
and
push
addr16
inc
and
xchg
inc
fs
into
jmp
sbb
aam
dec
lret
out
cs
loopne
adc
sbb
jecxz
mov
jle
pop
das
inc
sub
ds
adc
jecxz
mov
movsl
cmp
cmpsb
subb
mov
jae
gs
loope
cmpsb
test
aam
test
or
movsl
jnp
arpl
pop
ret
mov
mov
sub
int
lret
push
repz
hlt
fstpl
mov
cmc
js
fiaddl
mov
xor
jecxz
or
bound
dec
movsb
mov
aam
lds
in
in
jp
jl
imul
inc
adc
or
lret
cmp
xchg
orb
sub
out
cmpb
insb
filds
or
xchg
arpl
add
push
gs
fbstp
cmp
out
cmp
jmp
je
mov
push
mov
sbb
xchg
xchg
and
jns
les
std
xchg
testb
push
sub
leave
bound
dec
xor
xchg
fs
imul
mov
and
xchg
sub
pop
mov
pop
add
mov
rorb
popf
push
lock
es
ds
add
ret
fimuls
jle
out
jo
or
int3
fidivrl
pop
arpl
mov
fimull
mov
inc
push
sbb
outsl
popf
pop
xor
pop
fcoms
dec
xchg
cmp
in
ljmp
andl
and
je
das
mov
jmp
stos
inc
fistpl
fcomps
ds
sbb
pop
push
pop
mov
push
lods
pop
nop
les
push
mov
iret
ds
pop
scas
sbb
imull
adc
inc
fadd
sbbl
fwait
lahf
sbb
pop
push
and
pop
mov
aam
cmp
sar
out
cmpsb
mov
shr
mov
jnp
stc
jp
and
sub
lods
pop
loopne,pn
arpl
xor
sti
adc
sbb
shrb
jge
sub
repnz
es
or
xchg
rolb
lock
mov
orb
dec
cmc
mov
xor
lret
push
sbb
inc
neg
pusha
xchg
sti
lds
sub
cmpsb
stos
negl
repz
ret
ds
xor
inc
inc
orl
mov
imul
das
mov
test
adc
nop
push
out
cmpl
or
rcll
idivb
dec
clc
push
dec
clc
pop
inc
lret
adc
mov
sub
mov
lods
std
sbb
out
xchg
scas
enter
dec
inc
cmpsl
icebp
and
xchg
std
rclb
fldt
push
into
inc
aad
in
cli
push
pop
add
sbb
mov
fucom
pusha
xchg
lar
inc
je
cwtl
fdivrp
mov
xchg
mov
jg
shll
jmp
out
shrb
insb
and
push
mov
inc
cmc
xlat
jg
dec
lock
cmp
adc
clc
mov
push
mov
mov
aas
insl
mov
jg
push
iret
add
mov
js
addl
xor
enter
jp
aas
adc
cmc
divb
xor
xchg
adc
jp
enter
stc
lahf
test
jno
adc
dec
movsl
popa
jb
cli
test
and
add
mov
push
add
hlt
int
out
je
inc
scas
popa
rcrb
pop
mov
xchg
push
lods
in
push
int
xor
lret
cmp
shr
xchg
push
xor
fisubl
popa
ss
xchg
mov
push
movsb
mov
and
and
pop
xlat
push
add
vcvttps2dq
daa
dec
and
mov
mov
jae
xchg
int3
cli
insl
xchg
jnp
nop
cld
sub
clc
lret
aad
mov
fidivrs
cmpsl
push
adc
loopne
les
test
jb
pop
imul
pop
pop
movsl
jb
mov
cmc
cmp
cwtl
rclb
mov
repnz
gs
movsb
iret
mov
jo
out
dec
push
ds
or
inc
cmp
xor
push
ja
pop
fs
xchg
test
movsb
stc
sbb
jae
loope
mov
add
or
cmp
addr16
popf
aas
fadd
mov
add
adc
das
cmpsl
test
stos
add
in
test
adc
lret
leave
out
insl
cmp
add
inc
sub
inc
jl
jle
and
dec
sub
js
cltd
lcall
jno
lret
sbb
loope
jnp
ss
or
jnp
mov
xchg
or
pop
add
add
push
cmp
jnp
and
lcall
call
jno
push
pop
inc
fcompl
lea
mov
lret
test
mov
fdivl
in
fldenv
cmp
mov
outsl
jecxz
jns
les
sbb
int
pop
mov
xlat
pop
push
out
testl
scas
jmp
pusha
mov
sbb
dec
cmp
mov
xchg
sarl
pop
jg
dec
aam
ja,pn
incl
and
psrld
and
push
lods
lds
mov
test
xor
sahf
push
dec
pushf
cs
pop
xchg
leave
out
jg
std
out
adc
negl
dec
xchg
or
pop
outsl
xor
inc
rclb
push
fs
scas
ret
jno
testb
dec
jb
push
call
pop
inc
repnz
lock
mov
js
sahf
cli
xorl
pop
or
and
std
mov
sub
sbb
jle
adc
js
mov
insb
dec
je
sbb
mov
ret
mov
xchg
pop
sahf
dec
cmp
xchg
ret
shr
sbb
bnd
add
sub
pop
sbb
adc
movsl
adc
or
dec
std
imul
int3
mov
or
in
lods
mov
or
sub
test
pop
jle
mov
cs
js
decl
ljmp
adc
mov
or
shlb
adc
mov
jle
or
sub
xchg
lds
cli
cmpb
xchg
outsl
add
add
and
out
sbb
sbb
mov
pusha
sbb
jb
jae
push
mov
pop
pop
int
cltd
ret
repnz
sub
dec
mov
xor
cmp
push
outsb
andl
lcall
xchg
roll
enter
sahf
cmp
jge
shlb
sbb
in
mov
mov
out
jle
mov
mov
add
hlt
loop,pn
push
or
jp
push
rolb
outsl
or
adc
stos
lock
pop
pop
lret
inc
fwait
jl
sar
push
nop
daa
sahf
inc
outsl
nop
sarl
mov
mov
dec
add
xchg
mov
xor
out
mov
cltd
cmp
xchg
clc
lret
lret
aam
cmp
lods
stc
jge
sbb
xchg
sbb
inc
fcompl
call
cmp
popf
cmp
sbb
nop
movsl
dec
stos
sub
hlt
sbb
jmp
in
daa
daa
push
mov
jg
xor
xlat
mov
sbb
dec
dec
or
fnstcw
bound
dec
sub
push
fidivl
movsl
xchg
aad
dec
ljmp
rcll
pop
pop
ret
cmpsb
mov
pop
sahf
loop
xor
xchg
popa
cmp
mov
ficoml
mov
out
sahf
xlat
add
fisubs
fcompl
inc
testb
or
xchg
fucom
enter
cmp
out
xchg
mov
test
jp
in
add
notb
subb
mov
movsl
pushf
cmc
cltd
adc
jnp
xor
mov
out
lea
pop
les
mov
in
or
sbbl
xor
inc
mov
mov
inc
sub
push
je
fsubp
mov
lahf
dec
test
dec
jb
mul
lock
sub
fwait
jle
test
jmp
ret
cmpsl
mov
pop
aas
cmpsb
or
popl
int3
xchg
sub
ficomps
xchg
jbe
int
pop
imul
pop
cmp
sub
adc
jno
cmp
jp
or
sub
sub
xchg
inc
jb
and
xor
in
xor
scas
bound
into
sahf
ss
xchg
aad
lret
outsl
lods
sti
prefetchwt1
or
ds
mov
cmpb
arpl
sub
enter
ss
shlb
mov
rcrl
test
mov
inc
mov
and
insb
sub
mov
mov
andl
sub
movsb
nop
call
out
adc
sbb
dec
imul
test
xchg
xchg
jl
mov
aam
addr16
pop
add
cmp
pushf
mov
add
ja
adc
xchg
scas
imull
cmp
or
repz
jge
dec
pop
sbb
lret
mov
sbb
rol
icebp
jmp
jns
loop
jno
ljmp
addr16
std
sbb
cmp
lret
test
fs
sub
inc
mov
cltd
ja
xchg
std
pushf
mov
xor
inc
subl
jb
outsb
or
rolb
sbb
loope
out
sub
int
std
push
pop
add
les
pusha
pop
jnp
lods
inc
aaa
jmp
rcrb
pop
mov
xsavec
cmp
shlb
add
pop
outsb
push
xor
imul
cmp
nop
cmp
push
add
ss
fistpll
js
ds
cmpl
out
sbb
ljmp
jne
call
cmpsl
push
daa
push
mov
xchg
xchg
call
popf
fwait
cwtl
mov
movsb
cmp
or
aaa
or
pop
cli
mov
or
jmp
mov
jo
into
inc
imul
dec
not
in
ss
dec
jl
push
add
cmp
mov
sub
mov
fistpll
into
in
test
andb
test
jge
pop
jl
xor
inc
insb
sub
cmpb
das
sahf
gs
inc
mov
add
push
mov
cmp
push
hlt
loopne
or
adc
or
xor
jns
outsb
std
mov
cmpsb
popa
dec
and
test
daa
lcall
aam
aad
int
lods
sub
movsb
out
cli
mov
jge
dec
jae
xchg
cmp
enter
in
pop
fistpl
scas
or
pop
sub
xor
add
push
mov
je
shrl
push
xchg
add
pop
sub
fisubs
xor
aas
mov
xchg
es
sub
bound
pop
jae
adc
jge
mov
outsb
std
push
ss
jg
call
repnz
ds
je
je
mov
push
daa
mov
adc
or
dec
loope
lea
repnz
and
test
insb
out
push
inc
sub
inc
scas
enter
pushf
and
mov
sahf
out
shrb
sahf
imul
int3
loop
push
and
add
mov
xchg
cmpl
inc
popf
sub
out
iret
pushf
adc
mov
imull
and
sbb
repnz
lcall
inc
std
lds
sub
mov
js
adc
arpl
arpl
push
mov
or
jb
push
xchg
scas
test
push
mov
add
cmp
ljmp
pop
bound
sahf
and
imull
and
xor
xchg
or
aam
arpl
and
push
movsl
mov
cmovae
mov
adc
vorps
jne
push
dec
insl
jp
loopne
testl
in
push
insl
leave
inc
xchg
ficoms
aam
std
test
add
xchg
test
mov
pop
jge
fisttps
aam
enter
jle
shl
cs
mov
or
decb
enter
loopne
test
push
cmpsb
cmp
scas
push
fldl
js
mov
cld
push
mov
aam
arpl
rcll
or
jg
leave
sub
mov
cmp
or
imul
xchg
xor
xor
ja
jg
jnp
mov
adcb
cmp
loop
lcall
aas
jge
push
or
jmp
jg
sti
xchg
loope
sahf
xchg
sbbb
lock
loop
xor
mov
popf
mov
pop
mov
nop
inc
call
pusha
outsl
xchg
bound
xor
cmpl
xchg
push
rorb
add
xor
push
lretw
xchg
mov
aam
call
inc
adc
or
cmp
mov
dec
inc
xor
scas
mov
mov
sbbb
cs
das
lods
pop
sub
jge
inc
mov
push
cmc
add
and
jns
and
repz
xor
mov
aaa
xor
popf
adc
std
jge
or
stos
push
add
sti
lcall
jg
jno
sbb
cmp
add
xor
ret
xchg
xor
sbb
insl
add
jle
stc
xor
out
and
or
dec
push
rol
ja
les
or
jno
adc
xor
push
es
test
lret
rcr
sub
aam
mov
loop
sti
pop
lea
mov
and
fisttpll
or
ret
in
fnsave
cli
or
in
test
es
dec
les
and
loope
loopew
popf
cmp
insb
adc
sub
push
aam
adcl
mov
jmp
movdq2q
xchg
enter
paddsb
rorb
sbb
lods
lods
roll
mov
int
adc
or
push
push
mov
sub
mov
dec
mov
sbb
hlt
fcom
cmc
inc
cli
int
shrl
bound
pop
imul
dec
sbb
pusha
or
rcl
xor
pop
inc
xchg
outsb
gs
inc
inc
jbe
mov
cltd
jmp
push
bound
push
and
adc
repz
in
lret
leave
jl
or
xor
jns
push
ss
mov
dec
test
push
adc
xchg
xchg
mov
xor
mov
lds
push
hlt
add
push
daa
sbb
in
out
aam
and
rorl
xor
adc
xor
sbb
adc
outsl
shrl
stc
push
sarb
push
xchg
mov
mov
xchg
lods
cltd
iret
out
dec
push
iret
rcl
pop
cld
xchg
cld
mov
sahf
sub
pop
cmp
cmc
dec
ljmp
cmp
jno
xchg
dec
insb
xlat
xlat
fstl
xchg
or
sbb
bound
or
dec
loop
adc
dec
sub
mov
cmp
ss
pop
repz
jg
call
repz
stos
imul
cmp
or
sbb
pop
mov
lcall
outsl
aad
out
cmp
fs
xor
or
ret
addr16
lds
adc
call
ja
rol
cli
xor
outsl
ss
cmc
lret
stc
jne
repz
sti
rcrl
bound
shr
and
jne
mov
push
bound
sub
enter
push
sahf
fld1
insl
cli
mov
loopne
iret
jp
addb
xchg
in
out
andb
fists
mov
push
hlt
test
pop
ss
adc
lds
mov
jmp
gs
rcr
add
cmp
xor
bswap
sub
lret
repz
insl
inc
push
sbb
dec
fistpll
xor
fstps
cmp
mov
cmpl
and
cmp
mov
mov
loopne
push
shlb
and
inc
mov
out
out
sub
popa
pushf
fs
cmc
lret
inc
dec
pop
push
pop
pop
out
out
int
cmp
xchg
ret
lcall
hlt
lahf
aam
popa
xchg
cmp
xchg
inc
add
cmp
sbb
dec
pop
fisubs
jns
test
fmull
xchg
dec
addb
push
mov
sarb
xchg
xchg
push
xchg
cltd
shll
imul
fidivl
pusha
mov
dec
add
push
push
mov
gs
pop
mov
adc
ds
sub
imul
loope
inc
mov
loopne
ret
movsl
or
mov
cmp
sbbb
lahf
pop
xorl
mov
aad
mov
out
add
es
test
xchg
sub
xchg
jg
test
repnz
xor
leave
xchg
mov
cmpsb
out
fistpl
shll
test
and
and
punpckhwd
mov
dec
enter
ret
ret
pop
sub
inc
jno
lret
dec
rorl
hlt
add
cli
adc
setge
test
test
das
stos
sbb
mov
cmpsl
js
push
jp
pop
mov
cmpsl
xor
or
mov
pop
pop
cmpsb
pop
mov
outsb
dec
inc
push
sub
and
cmp
in
xor
fsts
xor
test
sub
rcll
pop
xor
rcll
cli
cmp
ficoms
lock
jmp
addr16
xchg
jno
mov
ja
loopne
and
shrl
in
jae
push
fbld
pop
xchg
ljmp
inc
jne
cwtl
popf
mov
xchg
movsl
mov
xchg
mov
nopl
xor
inc
insl
add
and
push
idivl
push
pop
cmp
mov
push
jb
and
das
lock
sahf
jns
std
enter
je
scas
pop
jmp
add
jb
callw
icebp
cmp
fsubrp
mov
out
or
xchg
out
insb
in
and
cmp
xor
dec
jecxz
mov
rcr
adc
cmp
and
lret
dec
dec
out
subb
xchg
fiadds
pop
mov
mov
subl
mov
in
mov
sti
ss
adc
lea
filds
stc
cmp
pop
pop
outsl
rcrl
mov
arpl
mov
push
mov
cmpsb
scas
insb
mov
xor
outsl
mov
sub
das
test
das
fidivs
sub
mov
jmp
cmp
jo
push
call
inc
negb
stc
cwtl
cli
xchg
push
test
iret
push
jp
jb
orl
pop
arpl
cmc
and
mov
mov
fisubrl
or
adc
add
xor
inc
lds
or
sbb
or
and
notb
test
jne
pop
push
daa
shlb
mov
mov
aaa
popa
loop
jle
mov
iret
add
imul
adc
lahf
int
std
movsb
inc
cmp
mov
jae
movsb
lods
outsb
repnz
cmp
shll
sbb
mov
cli
jg
icebp
adc
fstpl
sub
popa
ffreep
and
jne
int3
enter
popa
repnz
sarl
xchg
cmp
fldenv
sbb
scas
in
mov
insb
cmp
es
jne
push
ret
dec
sti
jns
sti
mov
mulb
mov
cmp
add
and
jo
push
inc
mov
dec
mov
rorb
mov
test
lock
aaa
push
test
cmp
sbb
mov
shlb
xchg
data16
sbb
xor
add
or
sub
xchg
add
das
mov
jae
dec
cltd
pop
out
xchg
push
xchg
cmp
xchg
aaa
jns
xor
push
pop
jns
push
and
xor
in
insb
popf
lret
mov
sub
rcr
xor
jg
push
pop
aas
sbb
into
jmp
stos
pop
pushf
add
idiv
xchg
inc
sbb
inc
gs
idivl
jmp
js
mov
mov
or
mov
test
and
in
cmp
int
jnp
testb
jo
inc
mov
jae
aam
dec
test
adc
mov
leave
repnz
lea
cld
sbb
nop
pop
sub
push
xor
inc
movl
int
sbb
sub
push
xchg
push
adc
sbb
dec
lods
and
lods
xchg
ret
xor
scas
dec
cmp
sub
lods
add
dec
mov
out
and
mov
xorb
in
je
loopne
mov
negl
aad
push
mov
test
xchg
insb
and
add
sub
cmpsl
push
int3
ret
shrl
dec
repnz
cmpsl
mov
mov
adc
mov
pushf
lret
in
jmp
fstp
mov
in
push
imul
arpl
fwait
cmpb
adc
bnd
les
loop
xchg
mov
cmc
jmp
out
xor
repz
dec
xchg
push
mov
in
pop
push
mov
loope
iret
das
je
pop
dec
mov
mov
push
jp
ljmp
imull
int3
xor
leave
xor
je
sub
cmp
dec
hlt
mov
ss
mov
cmpsl
lret
mov
fs
imul
aaa
in
enter
cmp
lods
sbb
clc
jge
faddp
fcoml
js
insl
inc
daa
hlt
leave
pop
ds
dec
fstps
aad
data16
inc
mov
add
cs
popf
jge
xor
jae
fisubl
das
stc
fwait
andb
jl
sub
and
outsl
mov
mov
test
cmp
sbb
inc
mov
mov
jp
xor
sbb
daa
or
aaa
mov
popa
cmp
mov
dec
xchg
xor
xor
and
and
inc
jb
lcall
push
jp
into
adc
mov
test
test
gs
sti
ret
mov
out
sbb
addl
iret
jle
out
push
dec
mov
adcl
mov
cwtl
dec
cmp
lahf
jno
mov
inc
leave
lods
insl
mov
or
outsb
pop
cld
in
mov
mov
movsl
push
js
mov
or
pusha
bound
cmp
mov
mov
push
inc
andb
xchg
xor
xchg
push
cli
jp
fsubs
push
push
insb
cmp
ret
aad
andl
andb
stc
jl
jae
dec
or
xlat
push
xor
jge
fs
sub
fst
subb
insb
or
sarb
ljmp
insl
clc
inc
out
and
sub
dec
lea
scas
arpl
scas
xchg
pop
and
xor
iret
sbb
loop
stc
insb
mov
xchg
rorb
jbe
and
inc
pushf
lret
mov
or
mov
add
cld
mov
cmp
dec
pop
jbe
push
pop
push
sbb
sub
pop
mov
or
pop
imulb
les
and
cmc
stc
mov
xchg
mov
sbb
and
mov
stos
sub
push
faddl
or
lea
xor
mov
out
imul
push
sub
ds
int
lret
loop
aad
fbld
mov
pushf
inc
cmp
mov
iret
clc
sbb
xchg
jbe
mov
xor
cld
cmpsl
mov
xchg
xor
andb
lods
imul
sbb
aas
dec
inc
sub
aaa
nop
maskmovq
idivl
call
aaa
dec
sbb
jp
mov
leave
mov
negb
std
aas
mov
repz
push
scas
mov
daa
je
roll
and
popf
add
ja
sub
jge
gs
or
pop
scas
push
and
dec
out
fnstcw
jmp
arpl
push
sahf
ljmp
mov
fildll
rcrl
fstl
pop
jns
int3
aas
scas
sub
inc
loopne
push
aam
test
xor
rcrl
test
inc
sbb
jl
add
inc
jnp
push
test
sbb
test
jl
insb
ljmp
stc
mov
mov
jno
out
arpl
pop
pop
or
mov
dec
mov
icebp
and
imul
jno
add
mov
mov
fsts
mov
adc
dec
xlat
ret
rorb
cmpsb
out
mov
scas
dec
aas
and
xlat
adc
jno
rcll
jno
xor
mov
lods
cmpsb
sbb
popa
shll
adc
pop
xchg
cmpsl
ret
rorb
popf
pop
in
sti
pop
adc
xchg
xchg
fcompp
js
add
adc
fists
mov
sub
addr16
and
mov
fldt
xchg
and
pop
outsl
bound
sub
xchg
bound
sahf
in
add
orl
call
fs
ss
mov
aam
pop
pop
cmp
adc
sbb
xor
cwtl
mov
imul
adc
stc
out
testl
mov
ret
jne
loopne
sub
push
xchg
or
cltd
cwtl
sbb
pop
cmp
sbb
stos
push
mov
xchg
cmpsb
aad
mov
mov
lods
xchg
mov
aam
mov
aam
sbb
xor
xchg
mov
and
lea
jne
sub
decb
xchg
arpl
adc
cmpsl
and
dec
adc
imul
lds
out
roll
icebp
pop
xor
push
pop
repz
jge
add
mov
fsts
in
sub
sar
and
popa
pop
int3
and
adc
in
pop
in
jle
ret
jmp
hlt
loope
sub
jecxz
sahf
push
adc
clc
jg
cld
mov
fnsave
mov
test
ret
sbb
std
loop
aaa
xor
and
pushf
mov
lea
jecxz
mov
mov
mov
xchg
cmpsb
icebp
xchg
pushf
pop
pop
ds
dec
icebp
in
inc
cmpl
scas
cmc
push
push
sub
inc
inc
sub
loope
or
jle
jge
lcall
outsl
add
or
mov
jg
dec
push
outsl
xchg
insl
out
fildll
data16
out
push
loop
adc
lcall
into
rcrb
sbb
add
dec
pop
jp
and
imul
fildl
jae
fisubrs
push
xor
xor
icebp
or
xor
dec
xor
lds
fs
loop
sub
push
mov
sbb
aaa
pop
mov
enter
adc
fisubl
adcb
jne
fimuls
xchg
mov
or
loopw
loop
hlt
and
jecxz
push
push
push
movsb
aas
es
ret
jo
pop
dec
das
add
jbe
or
or
xchg
cmp
xchg
loope
fsts
dec
ret
mov
lcall
movsl
or
push
daa
adc
dec
lods
lods
xchg
in
add
cmp
push
dec
int
adc
out
or
gs
push
mov
lret
ret
inc
scas
pop
pop
xorl
sbb
test
test
push
mov
add
sub
pop
and
jns
mov
fstpl
mov
mov
mov
dec
sub
aad
es
mov
cli
in
test
cmpb
cmp
fprem1
inc
dec
pushf
ror
xlat
and
cs
inc
jmp
cld
enter
jnp
je
and
jge
mov
sbb
dec
adc
js
fidivrs
jne
lods
push
ret
daa
push
ds
js
mov
fidivs
jo
jae
aam
adc
jb
or
leave
mov
mov
xor
repnz
cmpsb
movsb
leave
add
imul
mov
orb
jge
add
dec
fldenv
imulb
stc
mov
jb
shl
imul
gs
std
and
add
jp
sbb
shlb
lock
stc
mov
cmpsl
aas
mov
lods
xchg
mov
push
mov
fadd
push
adc
push
add
add
and
cmp
vmread
sbb
rcl
push
inc
out
out
dec
bound
pop
sbb
in
add
mov
dec
xor
out
xor
cld
dec
pop
dec
jns
mov
movsb
sbb
mov
icebp
add
xor
test
repz
ficomps
and
mov
test
adc
sub
adcl
push
push
outsl
cmc
add
aaa
jle
mov
test
sbb
dec
sub
inc
pop
mov
mov
adcb
mov
les
sbb
scas
and
and
xor
xchg
pop
fstl
push
xchg
sub
stos
imul
out
xor
test
xchg
inc
sti
sbb
test
addl
int
cmp
ffreep
pop
sti
les
rcll
cmp
push
jp
pop
push
in
and
adc
xchg
cli
in
or
sti
cmp
int
push
sub
cli
inc
call
mov
pop
and
lret
pop
imul
sub
jbe
ds
test
push
pop
dec
sbb
outsb
std
insl
js
stc
add
ret
stos
sub
mov
push
jmp
push
and
fldt
fcmovnb
cmp
jl
mov
cmp
enter
frstpm(287
mov
or
xchg
add
imul
outsl
mov
out
sub
js
mov
cmpsb
outsb
jbe
lcall
inc
inc
sti
push
add
pop
ds
movsl
mov
xchg
sub
rol
stc
push
cmp
test
in
or
pop
or
out
mov
fcompl
out
mov
sbb
xorl
ffreep
cmp
pop
cmc
dec
cmp
loop
aas
int
jmp
mov
incl
mov
and
cmc
jnp
bound
jo
es
mov
dec
add
shll
lods
movsl
popf
mov
jae
cmp
jp
push
mov
mov
popf
xchg
dec
mov
cmp
mov
and
dec
lret
add
notb
sbb
gs
fisubrs
adc
push
mov
clc
xchg
cmc
push
repz
loopne
sbb
push
sbb
mov
test
pop
pop
fsts
hlt
dec
ds
pusha
cmp
inc
pop
popa
pop
imul
xchg
jp
jle
push
scas
repnz
xor
out
and
dec
jne
xor
int3
xor
add
popa
ss
call
test
sahf
mov
xchg
inc
sub
sbbb
daa
cmp
mov
mov
inc
sti
sbb
fstps
ret
mov
out
icebp
and
cwtl
adc
lea
adc
je
imul
mov
xchg
xor
mov
rorl
xor
fdivrl
sub
ljmp
decl
jbe
aad
fs
bound
jne
into
mov
adc
hlt
subl
and
push
push
adc
push
cld
add
cli
and
lahf
push
movsb
mov
push
jecxz
adc
and
mov
sub
jl
jb
lcall
mov
and
inc
es
cmp
mov
adc
jg
inc
sbb
mov
cmp
adcb
add
jg
lret
sub
lret
fbstp
mov
out
and
and
dec
mov
stos
pop
in
mov
xorl
lahf
ljmp
push
fldcw
or
out
and
jb,pn
cltd
leave
and
xchg
pop
mov
jbe
add
jbe
popf
mov
push
imul
aas
mov
cmp
or
dec
mov
push
dec
ret
adc
addr16
push
xchg
jmp
scas
fstps
in
xchg
pop
pop
lea
mov
sahf
and
insb
test
fs
in
into
test
adc
jo
repz
fsubr
popa
lea
jmp
ja
mov
in
xor
or
sub
cmp
xor
dec
sbb
out
mov
lahf
cmc
jae
loop
stos
and
and
cltd
lock
pop
mov
push
mov
jnp
mov
out
mov
pusha
in
js
xchg
push
aam
sbb
dec
push
adc
or
and
stc
adc
xchg
mov
jp
lods
into
jb
sbb
sub
popf
fsubl
xchg
clc
shll
sbb
sti
push
jmp
pop
pop
or
mov
xchg
loope
insb
rcrl
dec
loope
js
xor
push
mov
scas
mov
lds
movsl
push
out
xlat
mov
jo
rorb
fisubrl
xchg
movsl
push
mov
fcoms
loop
out
and
mov
cmpsl
test
mov
inc
popf
rorb
out
aam
addr16
dec
int
fmuls
xchg
incl
jmp
sbb
adc
imul
imul
mov
jne
stos
enter
test
lea
jnp
imul
and
sbb
pop
xchg
jecxz
dec
cmp
arpl
jecxz
test
mov
mov
fsqrt
mov
jns
sub
cs
insl
mov
xchg
lds
out
jbe
sbb
shl
and
int
cmp
lret
mov
push
jns
mov
xor
test
mov
jb
daa
loope
cmp
clc
cmp
shll
or
and
sbb
pop
sarb
push
popa
leave
into
in
and
lds
test
push
loope
loopne
fbstp
in
mov
lcall
or
into
mov
dec
xchg
mov
hlt
repz
js
loopne
adc
push
es
hlt
adc
jnp
inc
and
lods
jbe
xorl
xchg
mov
push
jle
mov
adc
in
mov
lret
ss
rcl
xchg
and
push
lock
add
ds
sbbl
enter
adc
dec
insl
mov
mov
out
sbbb
addr16
in
int
iret
add
inc
in
imull
cmp
xchg
fcomip
inc
dec
dec
add
insb
fcompl
inc
mov
mov
dec
inc
bnd
jne
in
jmp
pop
jns
or
or
mov
mov
mov
inc
aam
pop
or
movsb
aaa
enter
les
shlb
adc
dec
pop
mov
repz
jno
dec
dec
out
pop
mov
mov
sbb
in
fcoml
bound
push
cmp
mov
jecxz
aad
loop
push
insb
and
ficoms
stos
push
in
push
inc
sbbb
xchg
adcl
xlat
dec
out
outsb
mov
mov
lahf
scas
and
jge
sbb
fdivl
into
inc
rolb
cmp
or
sub
add
mov
inc
fs
adc
in
test
pusha
adc
sti
test
mov
lods
push
repnz
sub
mov
lahf
pop
loopne
cmc
push
out
jno
popa
lcall
dec
sub
arpl
mov
xorl
cs
ret
push
addr16
xchg
fs
inc
dec
push
add
dec
inc
xchg
push
push
int
mov
mov
mov
mov
lock
out
or
dec
hlt
pop
fists
push
push
cmp
aad
push
xchg
jecxz
out
push
dec
enter
mov
or
js
inc
push
rcrb
in
jnp
adcl
jge
xchg
cmp
faddl
hlt
and
imul
and
mov
cmc
lahf
sbb
xor
mov
in
jo
lahf
lock
or
sbb
push
xchg
xor
bound
dec
mov
out
mov
sub
mov
enter
or
mov
ljmp
fidivs
mov
and
pop
and
cmp
js
jge
push
jp
int
es
mov
cli
int
ja
add
stos
stos
in
jnp
sbb
push
loope
repnz
in
mov
rolb
xlat
hlt
push
cmp
adc
int3
hlt
inc
mov
and
cmp
jmp
pushf
sub
aaa
jbe
stos
dec
mov
inc
out
dec
adc
sub
lock
sub
clc
out
test
jmp
pop
aad
sbb
insl
cld
adc
ret
sub
icebp
push
ds
scas
gs
int
add
dec
imul
aas
roll
mov
imul
mov
aad
push
aad
adc
arpl
pop
mov
inc
xor
cld
cmc
ds
test
loopne
dec
int3
leave
adc
sbb
lock
sbb
sub
ja
xchg
add
and
data16
jg
pop
dec
test
sub
ljmp
mov
add
fsts
mov
dec
das
add
popf
xchg
mov
xchg
test
cmp
mov
sub
in
lret
mov
ja
movsl
in
test
cmpsb
pop
cmp
push
fists
insb
jp
add
adc
test
loopne
jl
cmp
int
testl
mov
mov
xor
pop
mov
mov
in
xlat
sti
sti
dec
lret
jle
mov
add
stos
inc
imul
mov
repnz
jl
ficoms
popa
jno
shr
xchg
daa
add
dec
and
rcrb
add
int3
push
xchg
add
loope
sahf
ss
add
inc
pop
decb
dec
pop
test
fld1
inc
aas
pop
std
xchg
cmp
sub
test
cmp
xor
xor
push
xor
push
inc
cwtl
data16
repz
cmp
loop
push
lods
sarb
int3
test
notb
dec
ficompl
loope
push
int
sub
pop
dec
fsts
sbb
or
ret
sahf
icebp
lret
sbb
sbb
dec
xchg
inc
pop
cmp
testl
or
add
and
mov
rcr
mov
and
scas
mov
popf
nop
lahf
or
cli
test
xchg
std
stc
dec
mov
sub
jp
push
insl
loopne
insb
inc
inc
push
or
mov
shll
imull
mov
outsb
adc
lcall
scas
add
adc
stos
and
sbb
mov
pop
adc
cmp
fnstsw
insl
and
shrl
lret
js
push
adc
mov
gs
inc
jg
mov
aaa
movsl
out
popa
out
push
subl
cmp
pop
or
inc
lea
daa
and
ss
sbb
xchg
lea
push
loop
mov
mov
test
sub
test
shll
pop
adc
jp
daa
data16
fsubl
ljmp
mov
je
mov
repz
scas
jmp
lret
sbb
mov
fimull
sbbl
loope
xchg
or
repnz
sub
je
mov
hlt
push
sub
xchg
insb
push
mov
loop
adc
repz
xchg
adc
pusha
jb
jl
add
mov
push
fstpt
cmp
out
outsb
mov
in
mov
inc
add
xor
cmc
mov
ret
and
mov
lret
jb
mov
popa
inc
xor
pop
dec
lahf
mov
mov
push
cwtl
jns
mov
mov
mov
int3
jo
add
pushf
fnstsw
imul
and
sub
dec
data16
test
sub
sub
mov
mov
add
add
insb
ss
shll
aad
xor
cmp
xchg
xchg
xchg
mov
add
lods
or
xor
cwtl
mov
jbe
dec
dec
loopne
lret
ss
mov
push
nop
xchg
rcr
loopne
lret
sbb
or
movsb
shrb
mov
in
mov
scas
mov
mov
push
push
decb
inc
addr16
cmp
fldcw
xchg
into
pop
push
push
cmp
push
jl
dec
dec
add
adcb
jae
ds
sarb
mov
inc
es
ret
mov
xchg
xorl
aam
jns
xchg
lcall
aam
test
imul
ss
mov
push
pop
cmc
shl
stos
xchg
push
jl
and
jle
insb
aam
sahf
in
pop
test
xor
jb
icebp
test
pop
push
insb
xorb
xchg
pop
dec
add
rcrb
arpl
test
jae
sub
jae
jl
aas
es
mov
mov
lods
stos
xchg
inc
stos
dec
jg
push
sbb
iret
fs
ljmp
adcb
dec
in
and
fucomip
out
jle
aas
imul
pop
cs
dec
cmpl
dec
jnp
jbe
inc
or
pop
jl
lea
test
outsl
mov
mov
data16
push
pop
pop
cld
add
dec
adc
enter
pop
inc
fsubrs
jbe
shll
adc
cmp
lret
push
mov
or
sub
pop
and
xor
in
shrl
sbb
outsl
mov
dec
into
xor
jmp
push
movsb
jl
jmp
lds
sub
jecxz
push
push
das
cwtl
jo
mov
sbb
je
add
ja
scas
gs
aas
mov
xchg
fistpl
pusha
pusha
aaa
dec
scas
adc
loopne
jmp
out
fmul
xchg
mov
decl
push
cld
inc
mov
dec
mov
fsubl
push
xchg
adc
in
sarb
fildl
subb
jns
cmp
mov
jg
stos
scas
sahf
sahf
add
jb
or
fcomps
inc
into
cld
and
adc
jo
in
inc
bound
push
je
adc
push
shlb
mov
sub
test
outsl
and
lds
aad
leave
mov
xor
aas
and
xor
gs
and
dec
repz
jecxz
inc
les
cwtl
mov
fsts
in
sbb
call
test
cmp
in
add
lods
daa
loop
pop
arpl
aam
rcrb
stos
sub
jp
sahf
xchg
andl
pop
add
sbb
push
sbb
add
stos
enter
fwait
and
push
push
push
inc
xor
loope
sub
test
mov
lods
push
xchg
cli
aad
pop
lods
mov
and
movsl
push
jecxz
cmp
data16
ss
sti
pop
mov
jb
or
int3
xchg
dec
lcall
popf
mov
mov
mul
es
notl
mov
xchg
jns
mov
jmp
mov
lret
std
mov
or
adcb
add
mov
cltd
cmp
adc
lods
xchg
movsl
inc
xor
sbb
mov
jo
inc
cmp
and
aam
cmp
mov
jo
ljmp
fmuls
lahf
cmpsl
cli
xchg
jle
sub
hlt
lahf
adc
cmp
repnz
and
sub
add
daa
je
scas
jl
dec
inc
jecxz,pt
lret
std
into
negl
arpl
iret
lret
cmpsb
cmp
and
negl
xor
lea
repz
dec
adc
cwtl
test
repz
sub
movsb
adc
pop
repnz
jb
out
mov
push
add
aam
aaa
mov
daa
and
mov
pop
call
shlb
xor
dec
mov
ret
push
push
popf
dec
adc
sub
das
enter
mov
lret
cld
mov
adc
pop
les
mov
in
test
ret
sbb
ret
push
lock
test
loop
mov
sub
cmp
hlt
leave
xchg
lds
xlat
mov
or
call
lds
pop
jmp
push
add
mov
jge
ds
jg
inc
add
mov
xchg
leave
push
xchg
popf
mov
fwait
xchg
or
lock
mov
mov
cli
add
jns
js
mov
fidivrs
inc
test
repz
push
jbe
sbb
lock
bound
push
insb
sbb
mov
jp
imul
jns
mov
dec
push
pop
sbb
mov
pop
push
movsb
out
or
xchg
mov
lea
icebp
pusha
or
pop
sub
cmp
leave
push
dec
xor
into
add
add
or
sbb
shll
cmp
cmpsl
movsl
jecxz
subl
or
and
inc
push
or
mov
jno
or
pop
add
cli
cltd
mov
or
lods
inc
cmp
mov
sub
into
pop
xor
imul
rorb
push
into
repnz
or
icebp
aas
enter
pop
out
jg
add
loop
pop
push
daa
jnp
cmp
xchg
addb
lods
insb
xchg
xorl
ret
in
insb
add
add
jg
pop
decl
pop
aam
lds
cmp
lock
pop
pop
xchg
push
lcall
xchg
insl
mov
and
out
push
idivl
lret
inc
pop
sub
xchg
xchg
fsubrs
repz
aam
ja
pusha
xor
scas
xchg
jae
addr16
sub
notb
xchg
sbb
xor
cmpsb
roll
mov
fildll
out
iret
movsb
cmpsb
in
test
in
hlt
and
inc
mov
mov
pop
inc
outsb
jmp
loopne
cmpsb
orl
pop
dec
xlat
mov
popf
push
loope
mov
push
testl
divl
xlat
std
sub
insl
mov
xor
faddl
xchg
movsb
in
ffree
dec
sub
sar
les
xchg
pop
in
into
les
pop
mov
fwait
mov
clc
jns
mov
and
and
jno
and
in
data16
pop
repnz
xchg
inc
push
call
dec
add
push
imul
call
lret
mov
int
enter
mov
sbb
or
or
out
sub
arpl
jg
int
lret
cmp
hlt
xchg
aas
cmp
or
arpl
pushf
xchg
push
mov
add
hlt
nop
mov
ficompl
xchg
scas
movsl
daa
popf
mov
lret
inc
add
xchg
push
push
sub
lods
sbb
arpl
insb
outsl
mov
jno
test
pop
pop
cmpsl
outsl
sbb
sbb
pop
cld
inc
cmc
ret
push
and
jmp
xchg
and
movsb
mov
pop
test
stos
sub
push
adc
jns
iret
outsb
add
jb
xor
ret
adc
lret
push
mov
xchg
mov
lds
xlat
adc
rcrb
test
shll
aam
mov
xchg
rcrb
popf
mov
pop
ja
mov
cli
inc
ds
push
sub
sbb
xchg
xchg
and
insl
lds
cltd
mov
sub
xchg
inc
icebp
in
sahf
int3
cli
inc
idivb
in
mov
add
pop
pushl
push
and
lock
rol
es
mov
add
jg
into
es
sbb
lock
pop
repnz
popf
sbbb
and
jb
mov
and
mov
test
popa
fadds
sbb
or
adc
in
pushf
ja
in
mov
xchg
push
xchg
aam
repz
inc
cmpsl
and
stc
add
inc
push
add
int
jle
in
cmp
mov
arpl
cmc
xor
jae
jmp
add
mov
add
lahf
testb
and
clc
shl
or
divl
fimuls
ret
push
ret
shrb
sbb
pusha
aaa
adc
aas
jg
mov
enter
cld
lahf
pop
push
dec
add
or
pop
xor
lahf
xor
subb
ret
add
int
das
pop
xchg
mov
call
out
pop
inc
cmp
lcall
sbb
fbstp
xor
mov
mov
xchg
inc
jg
lahf
jecxz
push
jbe
add
cltd
dec
aas
mov
xchg
adc
or
inc
sbbb
adc
adcl
pop
int3
sub
sbb
add
das
lahf
lea
sarl
pop
stc
fs
in
test
inc
pop
and
les
js
jne
rorb
ss
pop
push
sub
es
ljmp
imul
or
sub
int3
adc
int
pop
push
or
idiv
out
or
xor
testb
mov
jl
in
call
lods
loopne
and
or
mov
fldt
lret
jmp
aam
jle
je
push
mov
mov
xchg
cmp
lret
sbb
ss
call
xchg
imul
insb
cmc
jno
fs
xor
cmpsl
adc
mov
cmc
nop
lcall
push
or
push
bound
xchg
es
add
sbb
and
mov
inc
lea
xor
push
push
and
in
rcrl
cmc
and
sti
cmpsl
in
and
lahf
jae
roll
mov
pushf
fdivl
adc
lods
and
test
sahf
cmp
xchg
push
mov
mov
aad
clc
out
movsb
push
sub
popa
ds
adc
adc
sub
xchg
negl
ja
push
popl
lcall
pop
push
or
pop
add
xor
sbb
arpl
cmp
xchg
mov
aam
ds
mov
push
ss
sub
sub
jb
movsb
push
mov
xchg
shlb
inc
adc
rorl
sti
and
mov
sub
xchg
jae
xchg
add
js
cmp
jno
ret
inc
sbb
aad
rcl
in
push
add
fsub
add
lret
adc
pop
adc
fnstenv
or
es
pop
dec
cli
jbe
xchg
fwait
xchg
inc
test
leave
sbb
pop
in
inc
sbb
mov
int
into
and
and
push
clc
pop
aaa
jns
adc
adc
cmpxchg
dec
push
push
xor
popl
or
sahf
add
scas
in
cmp
stos
and
pop
fisubrs
in
ficoml
lds
mov
sub
add
add
lds
sti
divl
mov
hlt
lock
aad
inc
outsl
adcb
adc
push
je
inc
lret
lea
jns
push
repnz
in
sub
ret
iret
mov
push
xor
das
push
lods
cli
test
and
enter
inc
cld
push
xlat
push
cs
mov
lcall
cwtl
hlt
repnz
out
mov
bound
aam
lret
sbb
sub
dec
push
sbb
sbb
jge
fadds
sahf
cmp
arpl
xlat
inc
or
mov
jae
mov
add
ljmp
test
mov
pop
jl
xchg
lret
xlat
dec
mov
shll
xlat
pop
jbe
sbb
aas
add
bound
call
lds
pop
or
mov
stos
scas
mov
ja
mov
lret
aam
jne
xor
pop
pusha
fnstsw
xchg
lret
mov
jl
xor
ret
add
ror
mov
insb
add
pop
jo
xchg
dec
or
nop
ret
hlt
xorl
mov
jl
sar
jns
dec
cmp
fsubr
lea
mov
jne
xchg
outsb
push
dec
or
xchg
mull
xor
imul
mov
jmp
inc
aas
xchg
in
jbe
dec
xchg
or
sti
adc
fisttpl
stos
dec
out
mov
dec
rclb
inc
dec
pop
or
shll
and
jl
jnp
jge
pop
pop
sahf
inc
sbb
fisubrl
mov
mov
xor
out
xchg
out
andb
pop
or
lods
fisubrs
inc
or
jmp
xor
enter
xor
jo
mov
lcall
lcall
pop
cmp
inc
roll
int3
sub
mov
dec
sbb
inc
cwtl
shrb
out
dec
punpcklwd
jae
sbb
loopne
fldcw
mov
repnz
mov
pop
dec
fwait
pop
cwtl
sbb
out
test
cmpsl
sub
ficompl
and
jmp
xchg
xchg
or
popl
insb
jo
cmpsb
mov
dec
pop
subb
pop
push
push
imul
movsb
cmpb
mov
sub
lret
or
pop
fs
rolb
es
popa
jecxz
fsubrl
pop
fsubr
pop
xor
mov
loope
out
es
andnps
sahf
dec
imul
cmp
test
cld
test
sub
cmp
roll
stos
enter
dec
stc
arpl
or
push
xchg
xchg
sbb
imul
das
cld
lods
outsb
mov
cmp
add
pop
cmp
clc
pop
push
sbb
ret
add
loopne
add
lcall
je
xor
or
xchg
dec
push
sti
and
jecxz
add
xchg
mov
out
push
jno
dec
push
cltd
imul
mulb
pusha
mov
pop
sbb
xchg
loope
xlat
or
adc
jmp
fisubrs
pop
je
xchg
add
sub
cli
mov
addr16
lret
pop
fdiv
pop
cmp
out
loope
adc
mov
cwtl
push
mov
pop
sbb
repnz
xchg
ret
push
cwtl
mov
je
or
push
add
jo
sbb
sub
push
arpl
dec
pop
mov
icebp
cmc
icebp
ret
adc
jle
cmpsl
mov
icebp
dec
lods
inc
inc
iret
ss
icebp
mov
inc
adc
test
fcomi
or
push
inc
and
sub
mov
out
scas
les
cli
mov
scas
mulps
add
imul
daa
add
push
dec
xlat
jle
sbbb
and
mov
push
lods
out
inc
nop
loopne
ret
jecxz
xor
dec
shl
cmp
aas
gs
push
imul
cli
fldln2
or
in
add
lock
xchg
mov
cmp
ds
mov
push
lods
cmpl
add
inc
pop
pop
dec
repnz
jge
or
sbb
mov
sbb
dec
rcrl
es
sub
pop
xchg
rcll
push
xor
ljmp
jge
mov
aas
mov
push
and
out
mov
mov
fldl
jg
mov
call
das
or
sbb
into
ret
loopne
andl
test
outsb
push
insb
pop
in
lods
add
inc
pop
jbe
clc
pop
xor
jp
aad
leave
push
rolb
jp
ds
xchg
xor
cmp
xchg
je
push
cld
jmp
ja
pop
jecxz
das
dec
into
mov
dec
mov
jmp
jp
mov
sub
icebp
xchg
dec
sub
or
scas
mov
shlb
sti
dec
sti
pop
cmp
inc
dec
xor
mov
adc
mov
pop
lret
sbb
test
pop
and
adc
sbb
fisttps
fstps
imul
dec
lahf
sbb
fmull
imul
push
pop
inc
mov
jl
test
cmp
ss
hlt
cmp
arpl
aaa
xor
rol
pop
popf
jne
pusha
push
cmp
and
lds
loop
xor
ss
adc
jb
or
adc
lahf
lods
rcl
cmpsb
fisttpll
aam
shl
mov
xchg
sarb
add
imul
inc
shll
xor
sub
add
push
pusha
lds
adc
adc
push
jne
outsl
xor
test
xlat
dec
jno
add
mov
test
into
fidivrl
es
icebp
xor
pop
testl
and
out
in
xchg
push
sarl
scas
jge
push
cwtl
inc
pop
imul
xor
in
sbb
xor
imul
jp
insb
push
dec
push
mov
out
xchg
jp
pop
and
sub
mov
shr
adc
stos
add
mov
cld
mov
clc
xchg
lods
ss
push
hlt
mov
adc
shll
call
insl
adc
mov
movsl
add
jnp
jbe
sbbl
inc
stos
fsubrs
aam
push
sub
hlt
daa
cmpsb
sub
xor
xor
mov
shrb
jecxz
fldt
push
or
xchg
pushf
jecxz
cli
popf
imul
scas
sub
sbb
sbb
dec
mov
jae
or
addl
add
stos
mov
lea
rorb
lock
hlt
push
adc
xchg
ljmp
jle
negl
dec
dec
jg
xor
xor
mov
fisttps
mov
ret
jne
add
sub
push
pop
jbe
negb
mov
fnstsw
loope
pop
or
add
aad
loope
cmp
test
adc
inc
and
es
ret
xchg
mov
aad
or
dec
cmp
sarb
movsl
popf
mov
ret
jp
push
lods
insl
sahf
mov
aam
xlat
push
lret
andb
rcrl
mov
push
pop
pop
ficompl
add
or
push
out
xchg
dec
das
into
stos
sub
mov
inc
cli
imul
push
adc
lea
adc
adc
out
leave
imul
add
xor
cld
cmp
inc
pop
rorb
push
add
fstpt
fnstenv
mov
cltd
iret
sub
mov
cmp
or
scas
das
pop
mov
jg
out
loop
aaa
adc
adc
add
mov
or
mov
jmp
push
jo
mov
jge
jl
xchg
fidivs
mov
jl
mov
mov
adc
mov
push
sbb
xor
and
aam
lea
mov
je
sub
xchg
mov
rol
dec
popf
push
lds
stos
jnp
sub
les
push
inc
pop
imul
mov
daa
insb
or
mov
push
ja
mov
xorl
mov
lods
iret
push
aaa
cmpsb
dec
dec
or
jo
mov
mov
sbb
shll
into
ret
mov
or
in
add
fnsave
add
mov
sub
add
mov
das
cmp
repnz
sub
test
xor
add
lods
or
sarl
iret
mov
popa
add
stos
mov
in
cs
cld
fldenv
jecxz
mov
and
sbb
or
inc
mov
inc
inc
sbb
fs
push
stos
out
cmp
mov
add
inc
hlt
out
call
mov
rorb
aaa
sub
lret
xchg
mov
gs
push
dec
adc
cmp
stos
daa
cmp
cmpl
pop
mov
mov
negb
jle
icebp
mov
sub
inc
nop
lret
mov
push
add
mov
or
mov
into
xchg
push
dec
xor
fisubrl
adc
cmp
jl
mov
pop
cmp
and
sub
xchg
mov
aam
sbb
pop
jecxz
insl
imul
push
add
push
in
sub
mov
out
sbbl
pop
lods
add
ret
add
inc
push
jmp
lods
jl
or
cltd
dec
outsb
or
shll
push
dec
daa
cmp
into
lret
std
lock
jp
dec
imul
xor
sub
fidivs
dec
popa
ss
lea
rorl
rolb
xchg
and
ljmp
stc
inc
rcr
enter
addr16
sbb
imul
lahf
pop
jg
iret
jbe
sub
or
repnz
add
xchg
mov
scas
pusha
xchg
add
lods
int3
mov
movsl
movsl
xor
cmpsl
dec
ds
les
test
fs
imul
sub
push
lcall
jle
sub
cmp
lds
add
scas
adc
test
hlt
push
repz
mov
loope
pop
insl
xor
or
mov
pop
inc
je
and
inc
mov
mov
push
cld
call
addb
mov
ret
jns
repz
jecxz
mov
outsb
testb
icebp
pusha
sub
jne
pusha
jle
mov
sub
aad
in
adc
fldl
leave
ret
mov
divb
aad
shll
cli
or
inc
aaa
and
repnz
loop
cs
js
mulb
lcall
testl
sbb
loop
jns
and
inc
adc
leave
aaa
jb
repz
add
es
pop
cmp
lret
cmp
mov
push
std
pop
jl
push
cld
stos
enter
aam
faddl
push
xchg
xor
loope
dec
arpl
lea
sbb
in
mov
aam
mov
insb
push
pop
movsb
mov
fdivrl
shlb
mov
mov
hlt
scas
sub
shlb
sub
cltd
push
push
dec
testl
xchg
insb
imul
dec
and
sbb
sar
int3
and
lock
jae
lods
lret
aaa
jecxz
pop
push
shlb
aas
stos
sarl
dec
mov
pop
popf
sbb
cmp
jno
loope
outsl
call
sub
std
xchg
pop
out
mov
sbb
jmp
jno
push
cmpsl
addr16
lret
cli
lret
mov
imul
adc
popf
pushf
push
imul
mov
out
sbb
pop
ja
outsb
cltd
pop
rcrb
mov
xchg
test
clc
pop
lret
sahf
cmp
push
mov
cmp
pop
repz
lds
out
adc
std
add
sti
pop
push
adc
stos
out
pushaw
add
mov
call
fwait
dec
inc
and
insl
jno
push
pop
in
mov
adc
lea
sahf
push
jge
xor
xchg
and
roll
sbb
inc
je
push
jg
cmp
test
loopne
pop
nop
test
js
int
cli
mov
jo
xchg
dec
add
popf
int
pop
cli
scas
sbb
aas
xchg
or
jecxz
shlb
lea
or
cmpsb
mov
dec
sub
out
jns
cmp
popf
push
xchg
mov
movl
xchg
rol
jo
push
mov
or
mov
insl
call
ds
in
adc
push
adc
mov
pushw
and
jle
sub
sbb
inc
mov
xor
stc
add
pop
lock
cli
and
enter
pop
push
mov
adc
andb
xor
pop
push
inc
fwait
int3
jns
xchg
ret
arpl
fucomi
inc
stc
sbb
jecxz
add
sub
popf
into
insl
les
push
mov
jmp
orl
jmp
repz
shll
sbb
sbb
push
into
xorb
jmp
inc
lds
test
mov
aam
sub
mov
pop
pop
or
imul
xchg
movsb
jp
push
xchg
inc
sub
mov
lock
xchg
sbb
jge
cwtl
insb
pop
sbb
aam
repnz
addr16
mov
ret
mov
dec
in
xchg
push
mov
mov
xor
gs
push
sub
push
pushf
sbbb
xchg
add
dec
dec
and
sarl
mov
add
pop
mov
shlb
mov
mov
sbb
ret
cmp
push
fs
loope
rcrl
pop
mov
clc
scas
imul
test
or
out
push
adc
gs
loop
cli
mov
sbb
xor
lds
pop
idiv
push
cmpsb
or
add
dec
loop
mov
jne
lret
sarb
loop
jg
or
jl
mov
push
cmp
fists
addb
cli
and
adc
and
popf
xor
xchg
xlat
stos
shlb
test
jb
mov
gs
or
adc
or
lods
fiaddl
xchg
push
mov
inc
gs
lods
and
ds
dec
add
sub
scas
stos
push
mov
mov
push
xor
out
shl
mov
push
mov
inc
mov
mov
cmp
inc
push
or
lret
mov
mov
sbb
pop
lea
mov
lock
imul
std
stos
or
imul
std
repnz
push
add
adc
sti
bnd
mov
out
dec
lods
push
fwait
or
mov
lgs
lds
mov
sub
mov
je
ljmp
dec
push
lret
je
mov
cld
mov
test
js
add
lcall
shrw
jnp
outsb
cld
jne
inc
push
out
leave
mov
cmp
add
sbbb
in
mov
xor
lea
jp
fmuls
mov
lea
stos
or
push
sbbb
add
out
xchg
jmp
lahf
es
add
jb
mov
or
mov
xchg
inc
jo
cmp
inc
xchg
icebp
in
mov
lret
adc
cltd
push
mov
pop
mov
imul
aad
sbb
pop
pop
nop
jbe
or
ret
cmp
push
mov
adc
lds
dec
add
negb
ja
push
aaa
jle
clc
bound
jno
cmp
mov
rcrb
pushf
dec
add
cmp
push
inc
iret
push
xchg
test
inc
sbb
dec
scas
les
adc
sub
movsb
or
js
adc
in
inc
mov
mov
movsb
or
cmp
and
pop
inc
inc
test
push
jp
jp
popa
xlat
xchg
xchg
sub
hlt
push
std
enter
cmpsb
push
mov
mov
leave
in
ret
xor
xor
dec
jno
call
inc
xchg
inc
mov
jmp
repnz
mov
and
add
xchg
shll
in
jo
orl
adc
daa
pusha
mov
adc
fldcw
pop
xchg
add
sbb
mov
and
push
pop
div
push
mov
fsubl
adc
xchg
jl
call
shrl
dec
sbb
sbb
popl
adc
inc
or
fstpt
push
mov
cld
mov
jbe
add
sub
jbe
or
sub
mov
xlat
ret
mov
call
or
and
jne
stos
pop
dec
les
ret
cs
imul
and
xchg
sub
in
jne
ret
mov
add
cmp
int
dec
cwtl
mov
pop
pop
neg
mov
push
mov
mov
sbb
fstps
xor
xlat
mov
inc
mov
ss
jmp
push
pop
fidivrl
xchg
jo
pop
lahf
or
and
jbe
rcrb
bnd
cwtl
mov
xchg
mov
int3
fimuls
popf
xor
inc
fwait
repnz
xchg
dec
incl
sub
or
movsl
scas
test
std
jnp
repz
pop
dec
sti
sbb
mov
rorl
mov
mov
movsb
xchg
cmp
sub
mov
jle
fimuls
lods
int3
jl
pop
aad
dec
mov
add
fcomps
fildll
in
cmc
out
ljmp
jbe
test
and
xchg
inc
dec
cmp
test
sahf
test
shrb
xchg
scas
and
lahf
fsubr
push
fisttps
adc
xor
aaa
mov
arpl
lret
cwtl
xlat
mov
jl
cmp
pop
mov
daa
inc
inc
cmp
xchg
pop
jecxz
int
mov
in
mov
roll
mov
outsl
dec
mov
jno
popf
sbb
rcrl
fs
cwtl
cmp
pop
outsl
sbb
pop
and
icebp
pusha
cmpsb
hlt
les
rcrl
and
cli
repz
sbb
push
cld
int
add
pop
xor
shll
fsubs
in
xchg
xchg
neg
inc
data16
cld
mov
mov
jle
and
in
loopne
cmp
mov
push
lods
adc
mov
loope
scas
test
rcrl
or
pop
mov
data16
dec
test
xor
mov
scas
shrl
std
inc
inc
push
xor
mov
inc
jnp
stos
push
arpl
add
clc
cli
aas
mov
fldcw
les
iret
test
xchg
inc
add
in
mov
cld
loopne
ja
cltd
ja
ucomiss
add
cmp
mov
movsb
jp
lea
pop
lahf
dec
cwtl
jg
push
inc
mov
sbb
jle
lods
das
cmp
xchg
pop
pop
sbb
enter
mov
dec
outsb
fldl
aad
adcb
dec
lock
pop
or
xchg
test
push
outsl
jne
pop
pop
nop
rcrb
popf
sbb
xchg
dec
sub
sbb
push
clc
inc
fs
mov
or
mov
clc
mov
lcall
movsl
test
inc
outsb
mov
lahf
test
sbb
adc
stos
or
xcrypt-ofb
cmpsl
push
mov
vxorps
or
mov
mov
xchg
pop
arpl
outsb
leave
hlt
test
scas
jae
data16
fidivs
mov
popf
out
mov
lea
and
in
mov
mov
aaa
dec
cmp
mov
pusha
and
arpl
push
rcrl
mov
inc
cmp
cmp
pop
jo
xchg
mov
inc
loope
leave
cmc
add
leave
movsb
fucom
add
mov
js
jp
inc
push
cltd
adc
push
int
arpl
lret
push
xchg
cli
jnp
mov
leave
scas
jg
test
pop
jp
add
dec
scas
push
mov
mov
mov
sbb
stc
push
mov
pop
sbb
xor
ja
push
and
push
inc
xchg
sub
ret
pop
inc
mov
inc
xchg
pop
test
ljmp
mov
sbbb
repz
jmp
cmp
insl
jne
fs
stos
test
adc
ret
jb
sbb
ja
xlat
imul
sti
lds
testb
and
stc
rclb
lods
in
pop
in
sahf
dec
pop
add
cmpsl
add
in
pop
fimuls
push
sbb
call
fadds
dec
lcall
jbe
mov
mov
jecxz
sub
cli
shl
lret
or
lods
pushf
dec
cmp
ljmp
jmp
ss
popa
mov
add
mov
xchg
mov
pop
dec
push
jle
push
xor
imul
xchg
aam
fwait
jno
pushf
mov
mov
jne
in
and
xchg
pop
add
add
outsl
push
add
mov
shrb
pop
xchg
or
fbstp
mov
imul
push
mov
pop
and
popa
jne
lret
aaa
test
mov
push
sbb
cmp
pop
loope
sbb
or
push
push
out
fcmovnb
iret
mov
sbb
imul
shr
mov
shll
into
sub
shrb
pushf
repz
test
pop
add
leave
aam
jo
into
push
repnz
daa
dec
in
pop
mov
xlat
fcmovnu
sbb
inc
jae
mov
and
push
mov
push
push
lcall
loop
push
shl
xchg
js
xchg
popa
xor
mov
mov
push
imul
js
sbb
sbb
or
ficomps
push
or
sub
pop
inc
lret
dec
mov
or
ss
dec
das
cmp
imul
cmp
mov
xchg
das
push
xchg
fistl
pop
ja
xchg
in
out
sti
loopne
sbb
mov
xchg
call
sub
cmp
addr16
and
jecxz
push
add
cmpsl
loopne
sub
lods
and
inc
xchg
mov
xor
jle
cli
pmaxub
mov
stos
ja
cmpsl
cmp
out
jecxz
inc
pop
xchg
imul
dec
or
sbb
xchg
lods
sbb
notl
pop
outsl
xlat
shrl
dec
add
jbe
lcall
pushf
sbbl
lret
int3
jge
jg
popa
and
jmp
dec
pop
dec
fnstsw
mov
mov
leave
adc
aaa
lahf
sub
xor
sbb
outsb
arpl
or
lods
cmpb
lahf
adc
popa
mov
int
xchg
stos
int
stos
push
dec
lahf
movsb
or
inc
jmp
mov
inc
inc
mov
divb
mov
fwait
enter
add
cmp
pop
mov
stos
cmpsb
mov
outsb
adcl
repnz
loope
mov
imul
pop
xchg
pusha
cs
and
adc
cmp
cmp
sahf
cmp
mov
cs
arpl
xor
mov
or
dec
lods
lret
mov
ljmp
pop
cmp
stc
cmp
dec
int
jl
sbb
push
mov
or
pop
xor
adc
dec
seto
stos
pop
cmp
lock
adc
push
int
xor
pop
out
int3
cwtl
std
or
push
in
mov
mov
mov
fistps
xchg
in
pop
xor
adc
mov
inc
rcr
jp
cmp
xor
ret
movsl
cs
or
dec
mov
push
ss
push
adc
add
imulb
in
jge
lret
inc
sbb
xlat
jb
call
jle
rcll
xor
push
jecxz
adc
lods
cmp
sbbl
or
mov
add
jnp
pop
clc
ret
mov
cli
cmp
dec
mov
jae
fwait
add
mov
fisttpll
jge
popf
popa
lock
xchg
adc
into
in
aas
pop
push
pop
dec
test
sub
push
imul
pop
into
sbb
fistps
popf
fwait
sarb
jo
adc
nop
stos
js
pop
or
divb
rolb
pop
inc
xchg
testb
lods
ja
pop
aas
push
mov
and
pop
cmp
aas
jmp
lret
sbb
enter
xchg
fadd
mov
sarl
out
iret
inc
cld
cs
jge
faddl
dec
stos
jecxz
fisttpll
inc
test
lods
sub
adc
inc
inc
and
je,pn
fiaddl
sahf
ret
xor
add
jmp
push
xchg
pop
or
xchg
mov
in
xchg
es
ficoms
push
mov
xor
pop
je
ffree
test
jg
dec
add
jne
test
or
inc
mov
jmp
testb
in
in
xorl
frstor
jmp
mov
mov
and
push
jb
jbe
mull
imul
arpl
or
arpl
popa
test
sbbl
inc
sbb
test
push
inc
mov
pop
or
jo
sub
adc
movsb
aam
in
gs
mov
icebp
aas
mov
outsl
xchg
sub
and
pop
gs
inc
icebp
in
lock
fnstenv
outsb
cli
fsubrs
outsl
push
roll
je
negl
jb
xor
jge
shrb
jne
xchg
insb
lock
call
in
scas
cmp
loop
sbb
test
ja
pop
xor
repnz
fs
outsl
cmp
cld
lahf
std
xchg
mov
mov
popa
xchg
xchg
mov
dec
lods
dec
inc
inc
jecxz
push
ret
sbb
arpl
jae
inc
cmp
mov
add
adc
dec
or
jno
sbb
lret
jb
aas
cmc
sbb
outsl
aaa
add
std
clc
sub
add
mov
clc
xor
jnp
xchg
inc
cmp
movsl
jl
xchg
xor
sub
push
add
and
dec
xchg
jnp
jae
xorl
fwait
cmp
fbld
pushf
mov
or
and
sarb
cmpsb
das
cmpsb
rclb
dec
sbb
pusha
push
jne
dec
sbbl
jmp
aas
outsb
add
push
jle
in
jb
xor
dec
xlat
jp
out
popa
mov
dec
adc
test
inc
adc
inc
enter
mov
push
ret
lock
rorl
adcb
sub
jmp
adcl
jecxz
adc
mov
in
leave
xchg
push
lcall
mov
call
inc
or
out
and
sti
xorb
xor
gs
fildl
mov
cmpsb
popf
nop
jnp
or
jl
imul
loope
or
sub
arpl
lods
stos
roll
or
xchg
bound
andl
fbld
call
mov
pop
jle
pop
clc
ja
into
sahf
sbb
shl
push
repnz
test
lds
jp
repz
sub
sub
mov
dec
fsubl
popa
xor
imul
pop
push
das
or
popl
fdivp
add
push
ror
inc
adc
rcl
push
rolb
aad
cli
ret
push
and
jne
into
sarb
fidivrl
mov
sub
inc
sub
dec
sub
ja
testb
daa
pop
mov
sahf
cli
cmc
pushf
das
mov
xor
shll
les
sbb
cmp
fldl
jg
mov
ljmp
jns
xor
cld
or
xchg
lock
add
mov
cmp
arpl
ficoms
fsubrs
dec
rorl
sbb
adc
jno
enter
lahf
popa
lret
test
jbe
or
adc
adc
shr
cmp
pusha
inc
pusha
sahf
mov
pop
popf
sub
xchg
pop
mov
lret
xchg
xor
cld
push
xor
push
es
test
add
fmul
out
outsl
cmp
ja
int
mov
push
cmp
inc
mov
jmp
pop
cmpsb
mov
inc
jmp
aaa
cmp
pop
sbb
cs
or
fildl
cmp
xor
test
xchg
rorb
xchg
cmpsl
adc
push
xor
mov
jmp
divl
pusha
test
lret
outsb
inc
and
or
mov
cs
bound
jo
mov
loop
push
lea
lock
sbb
mov
mov
sarl
cmp
in
or
inc
out
lods
insl
jg
jmp
pop
repnz
xchg
or
fs
mov
jns
pusha
gs
pushf
cld
ljmp
in
ss
test
xor
push
jns
sub
xchg
or
int3
ljmp
inc
jo
cmp
cmp
xor
aaa
lea
mov
pop
and
sbb
scas
mov
mov
das
cli
ret
push
loope
jo
cmp
and
cmp
fldl
jle
xchg
lahf
add
pop
scas
xor
and
pop
dec
pop
mov
push
cmpsl
mov
add
fcomps
movsl
adc
cmp
mov
sbb
inc
es
addb
cmp
movsb
pop
stc
pop
movsb
push
xchg
dec
out
sub
rcrb
xor
mov
cld
dec
ja
jp
mov
push
or
in
sarl
movsl
ss
cmpsl
test
mov
xchg
enter
outsb
mov
xchg
in
lret
cltd
scas
cmpsb
pushf
out
jne
test
fdivrl
outsl
dec
dec
into
imul
cmp
sub
lret
negb
add
int
cmp
sbb
mov
pusha
out
adc
jp
stos
fwait
sti
outsb
pop
mov
and
loop
sbb
dec
stos
shl
leave
push
inc
pop
jae
fxch
adc
push
std
jns
dec
jmp
sbb
jne
mov
imul
rcrb
dec
sub
xor
je
push
add
xor
orl
jb
rolb
outsl
add
ss
roll
or
je
mov
cmp
cwtl
pop
pusha
popa
aam
xchg
mov
pop
aas
cmp
cmp
mov
sahf
adc
cmpsb
mov
push
movsl
fldl
fdivr
pop
xor
sbb
scas
push
imul
lret
ljmp
std
in
stc
cwtl
lret
cmpsb
es
jns
int3
lea
clc
push
sahf
aad
movsl
add
push
lret
and
iret
add
adc
jl
cmc
mov
cltd
leave
test
andb
xor
xchg
imul
imul
xchg
cmp
pop
xchg
je
outsb
xchg
add
rolb
xchg
adc
in
push
add
loop
lret
adc
decb
adc
and
push
sbb
pop
mull
sub
lret
das
push
lret
and
jo
jmp
inc
sub
mov
adc
das
in
or
add
ds
dec
jmp
addr16
inc
jge
sahf
xchg
sbb
popw
ds
insb
insl
mov
add
inc
and
push
dec
jns
mov
dec
hlt
cmp
insb
adc
popf
loopne
leave
test
dec
aam
frstor
or
push
mov
stc
push
nop
int3
xor
mov
sbbb
aam
icebp
jl
cmp
das
push
cs
movsb
mov
mov
mov
stc
call
and
adc
xchg
jns
jmp
and
sub
out
out
adc
push
stc
insb
lret
pop
push
aam
in
xchg
mov
mov
nop
push
add
call
ljmp
gs
dec
mov
aas
testl
popa
inc
mov
jl
jns
pop
jne
xor
ror
jnp
jbe
mov
mov
push
cmp
jmp
sub
xchg
dec
xor
in
sbb
stos
jg
sub
imul
inc
jnp
jmp
xor
push
sbb
xchg
add
sub
dec
dec
aas
neg
mov
xchg
dec
jp
bound
and
jl
test
and
jl
ret
jae
jmp
cmpsl
test
cld
imul
push
lret
xor
shrl
outsl
ret
cmpsl
imul
mov
leave
je
notb
xchg
outsl
push
jbe
loope
and
inc
mov
or
fidivrs
sub
mov
out
or
lods
dec
outsb
add
inc
xchg
test
jae
lret
das
andl
imul
xchg
xchg
mov
pop
push
push
leave
sarl
dec
movsl
imul
mov
and
les
adc
or
mov
mov
xor
mov
rcr
sahf
xlat
jae
push
stc
lods
or
pusha
pop
out
push
sbb
add
dec
jo
xor
xchg
sub
lds
dec
xlat
adc
in
data16
jo
inc
inc
cs
repz
repz
sub
into
cmpsb
lret
sbb
adc
pop
loopne
test
xchg
loope
fnstcw
in
je
clc
mov
imul
sub
push
mov
sub
jbe
pushf
aas
add
jo
outsl
shl
lds
fcoms
test
lods
je
or
jb
push
repnz
dec
adc
jb
inc
movsl
es
or
xor
sbb
movsl
cwtl
into
or
mov
lods
pushf
mov
mov
dec
xor
xor
rcll
imul
dec
stc
cmp
dec
mov
jl
sub
or
faddl
xor
mov
into
aad
dec
outsb
mov
pop
lea
sti
xchg
mov
fs
mov
insb
push
xchg
adc
and
add
xchg
mov
fdivs
mov
dec
sub
xor
scas
mov
nop
in
cltd
sub
outsb
test
xchg
arpl
dec
adc
orb
mov
cli
test
int
adc
shr
mov
mov
aas
fs
cld
sbb
cmp
les
popa
add
cli
mov
jmp
push
inc
pop
stos
sub
popa
hlt
sub
dec
mov
mov
dec
adc
dec
jae
mov
pop
dec
mov
repnz
xor
and
lock
jge
movsl
and
or
pop
sub
jbe
es
push
jae
push
jns
dec
jge
push
dec
out
int3
mov
inc
adc
sbb
loopne
xor
movsl
repz
inc
cmp
add
and
orb
shr
popl
icebp
cmp
hlt
push
aas
mov
imul
fisubl
imul
or
jp
ret
xchg
pop
lock
pop
outsl
lods
cmp
in
lock
mov
pop
addr16
adc
push
sbb
or
xor
inc
add
cmpb
mov
push
or
pop
jle
pop
push
repnz
ljmp
in
jle
dec
push
push
sbb
movsl
fmull
je
xor
push
xorb
in
imul
mov
dec
in
test
movsl
sti
inc
or
mov
push
je
jno
fldt
int3
sub
sbb
and
pop
hlt
sub
cmp
loopne
shl
arpl
int
xor
sub
std
repz
mov
mov
mov
xor
mov
push
or
cmpsl
fnstsw
xchg
xlat
or
mov
pop
push
jae
xor
stos
mov
dec
imul
pop
gs
outsl
mov
push
shll
pop
dec
repnz
inc
adc
dec
insl
jecxz
dec
add
out
push
push
add
jnp
outsb
iret
stos
xchg
je
pop
iret
adc
fidivs
and
loop
imulb
testb
hlt
mov
and
into
dec
ljmp
mov
mov
dec
lods
fsubrl
out
and
std
fistps
lcall
sbb
dec
mov
mov
mov
jno
mov
fcomp
mov
inc
test
imul
sub
mov
scas
mov
inc
xchg
jg
aad
dec
jle
mov
jmp
faddl
mov
cmc
stos
adc
mov
rcrl
out
sbb
add
xor
sub
jae
pop
mov
xor
mov
je
add
outsb
scas
imul
popf
pop
ds
push
and
add
mov
es
cmpsb
mov
xchg
cmpsl
sbb
std
or
ss
lock
sbb
cmp
repnz
or
and
mov
inc
sbb
xor
adc
adc
pop
test
mov
leave
dec
imul
cmp
mov
adc
mov
outsl
bound
jnp
pop
shlb
xchg
mov
dec
in
sub
lea
mov
jle
cld
cmp
push
jae
sub
in
mov
aam
into
pop
push
lock
imul
stc
push
mov
xlat
movsb
mov
or
xchg
jb
movsl
sbbb
and
sahf
mov
jmp
cmp
pop
pop
ficoms
dec
jg
cli
xchg
cmpsl
aas
push
sbb
es
fiaddl
fnstsw
or
push
into
xorb
fcmovnu
movsb
loop
les
adc
add
shlb
jmp
adc
in
xchg
or
aaa
add
in
push
xchg
out
and
and
or
hlt
sub
dec
inc
mov
xor
mov
in
nop
fnstcw
js
fwait
sub
jbe
ljmp
int3
and
add
pop
movsl
cmp
push
lcall
cmpsl
adc
cmpsb
adc
mov
cltd
sbb
hlt
xchg
inc
ret
lea
stos
cmpsl
out
lods
mov
adc
ret
in
lods
dec
xor
cli
gs
push
lods
mov
add
loop
xchg
push
fstl
adc
inc
cmpsb
in
sub
jmp
cmpsb
rcll
or
jmp
mov
pop
enter
cmpsl
movsb
lret
dec
in
fcomps
daa
cwtl
adc
loop
call
mov
xchg
in
adc
arpl
push
test
push
adc
jecxz
inc
loopne
push
adc
xchg
ss
jmp
add
hlt
mov
xchg
lds
data16
lock
mov
addr16
mov
cmpsb
jle
std
mov
movups
cmp
outsb
negl
push
fistps
mov
jo
sbb
dec
sub
fsubrs
cmc
insl
negl
push
fs
mov
jecxz
jmp
imul
push
in
mov
mov
dec
test
dec
pusha
mov
ljmp
imul
jns
fwait
shll
popa
jge
push
push
outsl
rclb
fdivl
xchg
lods
iret
sbb
dec
pop
lods
shl
cmpsl
or
cmpl
jb
in
int
mov
aam
and
dec
xor
xchg
pushf
js
cs
out
in
shr
pop
call
lea
sub
jg
mov
jo
sub
iret
cmp
mov
je
and
mov
cmp
xchg
xchg
xor
xlat
fwait
push
cs
push
fwait
lds
test
repnz
imul
lock
jb
push
mov
push
lock
mov
dec
mov
lods
and
lock
dec
and
add
xchg
iret
nop
xor
or
mov
jp
mov
leave
xor
jb
cmp
mov
mov
inc
xchg
subb
ret
xchg
mov
xchg
mov
addr16
pop
add
push
icebp
inc
out
mov
cmpsb
lahf
jo
test
fcomip
xor
or
xchg
test
jb
or
fldenv
mov
fidivrl
xchg
cld
push
mov
pop
pop
outsl
in
push
popf
jae
shlb
sbb
pop
or
inc
daa
insb
xchg
pop
loop
data16
add
mull
js
xchg
and
adc
ds
call
negl
std
jns
cmpsl
jb
dec
lahf
push
inc
arpl
add
std
cmp
in
addr16
cmpb
les
pop
jo
jmp
data16
add
out
es
cmp
mov
pop
call
mov
jae
pushf
pop
rclb
into
pop
aaa
inc
jae
pop
dec
repnz
sub
xor
sti
xor
xchg
jo
pushf
xlat
and
sbbl
mov
jp
lods
jbe
or
jae
cmpsb
pop
mov
inc
loopne
push
xchg
ret
outsb
out
fwait
sbb
cmc
or
jb
xor
mov
aam
outsb
jne
in
aas
repz
in
lahf
cmpsl
jns
jne
push
push
jg
popf
int
je
divl
aaa
pusha
imul
test
push
imul
lods
mov
push
fs
pusha
jle
mov
test
test
sub
test
jmp
stos
test
mov
and
dec
jp
out
sbb
mov
add
adc
mov
xor
mov
or
aas
inc
loopne
pop
jae
or
mov
movsl
sbb
ja
cltd
xor
xchg
adc
insb
sub
aaa
pusha
pop
repz
xchg
mov
sbb
xchg
xor
fdivrs
pop
mov
or
mov
jnp
push
punpckhwd
fidivl
outsl
and
sub
fsubrl
cmpsb
dec
and
lret
or
inc
and
neg
test
xchg
xchg
movsb
mov
mov
mov
outsb
int3
jo
cli
inc
les
xchg
outsb
mov
test
ja
mov
and
adc
xor
pop
and
adc
data16
idiv
out
std
ja
push
leave
mov
shr
ljmp
in
call
repz
dec
insb
loopne
pop
mov
push
or
mov
jmp
xchg
and
pop
xorb
fcmovu
inc
outsb
mov
in
mov
dec
push
and
xor
pop
xor
fistl
out
jg
shll
imull
jmp
out
inc
mov
pop
cmp
mov
and
push
mov
outsb
and
stc
daa
xor
xlat
push
insb
dec
leave
push
cmp
fadd
sar
jae
rorl
and
aam
xor
lret
clc
mov
das
rcrb
scas
pushf
outsl
xorl
lahf
xor
nop
inc
test
fcoms
mov
xchg
aaa
fnstsw
xor
jbe
xchg
fsubrl
divb
inc
cmp
push
xor
mov
mov
sbb
xchg
cmp
pop
insl
or
mov
fnsave
sbb
imul
imul
xchg
add
jge
jp
mov
sub
cmp
sub
dec
lahf
cld
cmpsb
stc
sub
or
repz
cwtl
cli
jo
call
in
xchg
movsl
mov
mov
and
mov
jns
std
mov
dec
rorl
hlt
scas
popa
inc
subw
pop
inc
daa
mov
mov
push
movsb
ds
mov
stc
out
push
das
and
jo
mov
adc
push
pop
out
scas
das
mov
ds
arpl
push
pop
sub
and
xor
push
mov
sahf
cwtl
push
or
lcall
inc
lock
sti
pop
addr16
push
mov
test
test
in
cmp
std
enter
xchg
push
ljmp
dec
addr16
mov
in
call
ss
cmp
jecxz
fs
std
aaa
or
test
into
jp
call
sub
stos
push
and
fldl
and
push
xchg
jl
push
mov
xor
or
jecxz
jbe
xchg
pusha
inc
push
test
or
out
add
outsl
jp
insl
add
push
adc
jns
xchg
cmp
xor
add
stos
js
push
sub
xchg
stc
or
xor
dec
push
orl
clc
orb
ret
out
or
jo
pop
xor
es
xchg
pop
outsb
dec
xor
sub
and
and
mov
lds
repnz
add
pop
inc
inc
sub
data16
loope
xlat
orb
out
dec
in
mul
mov
int
gs
or
pop
fildl
mov
mov
dec
mov
sti
mov
out
cmp
mov
adc
xchg
mov
push
insb
xchg
push
and
lahf
mov
repz
sbb
in
and
mov
jb
ret
inc
pop
mov
mov
jns
das
decb
jbe
dec
cmp
add
sub
fisttpl
cmp
inc
dec
cmp
cwtl
inc
idiv
pusha
adc
das
cwtl
stos
mov
sub
lahf
jp
xchg
xchg
cmp
jecxz
in
xor
in
dec
icebp
sbb
adc
sub
and
repnz
and
lret
cli
xor
fadds
mov
fistpll
enter
and
es
andl
imulb
fwait
dec
push
jns
lods
lods
xlat
or
push
or
arpl
les
or
stos
sub
in
xchg
pop
mov
imul
cmp
dec
jle
not
rcrl
out
inc
fdivs
push
xor
ret
aad
fadds
aaa
aam
pop
dec
rcl
mov
jne
mov
push
jle
push
je
cmp
xchg
test
add
loope
aaa
xchg
enter
push
rcl
xchg
sbb
mov
mull
jg
dec
shr
jg
and
and
mov
sbb
lea
hlt
mov
test
shlb
data16
add
mov
jge
mov
add
orb
fdivrl
add
gs
xor
dec
out
lret
cli
mov
imul
inc
and
inc
dec
mov
sbb
cmp
sbb
dec
mov
xor
push
adc
pushl
push
pop
pop
adc
je
push
inc
mov
jns
daa
bound
pop
aam
fdivrl
imul
xchg
das
adc
in
inc
xchg
and
and
lret
lcall
and
push
adcl
xchg
push
sub
push
mov
pop
lcall
pop
jbe
pop
in
icebp
pop
xor
and
xor
add
aaa
leave
mov
dec
adc
xor
inc
jo
aaa
enter
data16
stc
lds
fs
fdivrs
lods
inc
outsl
andb
dec
dec
push
add
cmp
xorb
pop
xchg
cmc
nop
sbb
test
pop
mov
addr16
test
sbb
gs
inc
movsl
lock
sti
bound
cmpsl
or
out
jae
push
loop
arpl
mov
outsb
sub
push
mov
jns
add
mov
pop
inc
mov
bound
or
ss
test
test
pop
dec
cld
jns
in
mov
in
add
push
lock
enter
test
popf
push
aad
cmp
cmpsl
jns
sbb
mov
xor
jmp
dec
adc
sub
int3
adc
nop
shlb
push
mov
mov
hlt
lock
call
push
cld
sub
loope
dec
mov
xor
lcall
push
mov
es
ss
mov
cmp
add
push
repnz
and
xchg
xchg
or
push
call
mov
insb
ret
inc
pop
cltd
jno
fdivrs
push
pushf
mov
sbb
decb
lret
ljmp
mov
cmpsl
pop
mov
jge
je
out
sub
mov
jp
bound
or
push
in
push
and
aad
in
inc
shlb
dec
sbb
lcall
pop
fs
cmc
int
ljmp
arpl
or
bound
mov
or
add
jge
sub
cld
sbbl
xchg
scas
xlat
je
aad
xchg
clc
cltd
inc
mov
lds
rorb
in
push
sub
xchg
int3
test
or
repz
push
fists
adc
mov
dec
andb
pushw
loopne
xor
xlat
hlt
pop
dec
ljmp
sbb
lods
xchg
xchg
lea
repz
dec
inc
shrb
cmovne
push
pop
mov
sahf
xchg
pop
pop
repnz
ljmp
pusha
outsb
pusha
outsl
pop
loopne
push
cld
push
or
sub
xor
dec
inc
je
mov
fsubrs
rcll
fs
sub
inc
mov
sti
pop
int3
pop
dec
xchg
adc
data16
insb
dec
daa
xor
jno
pop
push
ss
roll
or
inc
sarl
add
rorl
cmp
lret
mov
lar
lret
movsl
mov
xchg
push
insl
pop
xlat
imul
enter
addr16
lods
dec
add
dec
fs
fiadds
jg
cmp
inc
insb
inc
sbb
mov
popf
sub
xor
adc
cmpsl
mov
pusha
dec
dec
outsb
arpl
popa
das
sbb
dec
enter
cmc
fisubrs
lods
popa
jae
mov
arpl
arpl
inc
outsl
outsb
push
cld
mov
in
xor
xor
iret
pop
in
or
sbb
movsl
dec
jno
dec
lahf
ret
xchg
fcomps
xorb
dec
inc
adc
ss
or
mov
jns
cmp
popf
xor
loope
cmp
jb
cmpsb
dec
andl
sarl
aad
sub
test
dec
cmp
pop
lret
mov
push
jae
jnp
mov
popf
fld
xor
subl
popf
sti
aam
in
test
fs
fcmove
sub
dec
out
in
mov
loop
push
mov
les
movsl
add
stos
mov
movsl
rcrb
mov
mov
and
mov
into
imul
push
pop
xchg
icebp
js
pusha
cmpl
icebp
mov
mov
inc
mov
mov
mov
pop
in
mov
xchg
jge
inc
or
xchg
pushf
cmp
stc
push
int3
pop
nop
popf
and
jo
xor
pop
mov
cli
mov
sbb
orb
sub
push
sub
loop
lcall
add
call
pop
jnp
int3
xlat
ds
lods
filds
mov
inc
cmp
ljmp
in
es
mov
push
fprem
mul
sub
push
push
mov
scas
out
xchg
stos
pushf
jnp
mov
mov
aas
rcr
aas
pop
sbb
push
xor
shlb
iret
rcl
sub
insl
xchg
mov
mov
jecxz
dec
cmc
lods
adc
cmpsl
xor
inc
mov
enter
mov
xchg
inc
sti
or
xchg
aaa
xlat
mov
icebp
shlb
aam
inc
cmp
push
fldl2t
xor
cs
mov
test
popa
fisubs
popa
std
xchg
jne
sbb
xor
jo
inc
xlat
repz
sub
sbb
xchg
imul
dec
xor
lea
rorl
iret
cmpsl
mov
push
mov
mov
sahf
imul
push
xor
pusha
out
xor
aam
mov
arpl
and
out
push
nop
imulb
dec
mov
pop
cltd
sub
mov
fsub
push
data16
push
or
jmp
cltd
mov
pop
daa
xchg
jmp
neg
stos
xchg
cmc
scas
sahf
cmpsl
insb
xchg
or
ja
stos
orl
ja
repz
or
cmp
adcl
pop
addl
jae
sahf
sbbl
insl
add
fsubrl
or
adc
mov
in
sub
pop
push
mov
arpl
aas
sbb
and
idivl
push
mov
ja
adc
mov
fs
pop
rolb
xchg
mov
inc
mov
add
loope
jb
sub
mov
cmp
out
xchg
add
mov
mov
or
bound
dec
mov
popa
cmc
pop
and
aad
mov
nop
xlat
js
lcall
ret
iret
and
push
call
cld
scas
dec
add
cwtl
dec
fdivrl
dec
dec
push
and
iret
mov
in
cmc
cmpsl
sub
js
cwtl
adc
xor
mov
inc
jo
inc
sbb
stc
adc
mov
sbb
dec
sbb
inc
inc
inc
and
xchg
fs
repz
movsl
loope
movsl
in
shlb
sub
out
mov
ljmp
loope
popa
cmp
mov
sbb
xor
aas
sbb
sub
sbb
lret
insl
xor
jge
orl
and
sbb
dec
shll
xor
jle
icebp
cmp
xor
into
sbb
data16
pop
adc
adc
lahf
mov
jno
xchg
push
mov
je
adc
mov
xchg
cmp
inc
pop
aad
inc
jne
mov
sbb
sbbl
xor
pop
inc
dec
mov
or
js
push
xchg
add
sub
imul
sub
mov
imulb
mull
in
es
ret
adcl
repnz
add
dec
call
stos
pop
aam
in
jle
mov
jnp
sahf
sub
icebp
push
nop
insl
and
sar
jecxz
and
xchg
hlt
push
push
cmpsl
and
jnp
jge
lea
xchg
mov
xor
rorb
adc
test
data16
mov
mov
clc
pop
loopne
cmpsl
outsl
insb
jb
sahf
jle
mov
outsl
adc
stos
es
faddl
mov
test
sub
test
and
add
or
in
mov
arpl
jae
jmp
lock
inc
lods
lret
mov
sti
rcrl
cmp
clc
ljmp
jmp
jae
es
push
or
and
loopne
insl
push
mov
aam
ds
cmp
or
adc
idivl
adc
pop
pop
out
inc
jne
rorb
aaa
mov
out
ret
jge
mov
js
pop
nop
or
arpl
mov
sub
push
dec
or
xor
mov
testl
xor
cmp
lods
fistl
je
and
insl
adc
call
repz
sbb
pop
jns
movsl
leave
bound
testb
lret
shll
fisttps
lret
movsb
out
cmp
in
or
clc
pushf
or
pop
mov
test
inc
fwait
push
pop
insl
sahf
mov
orl
std
push
mov
int3
je
cmp
push
and
aaa
mov
cmpsb
dec
jmp
xor
jo
sub
mov
mov
push
ds
cs
aad
mov
icebp
ja
mov
adc
xchg
adc
inc
mov
push
mov
jle
xchg
and
rorl
or
stc
xchg
cmp
leave
orb
lea
ja
push
sub
sub
icebp
or
jne
mov
mov
mov
in
mov
xchg
ss
mov
jno
jge
cmc
cmpsb
sub
shll
dec
test
imul
pop
std
adc
jp
cmp
push
mov
mov
lss
mov
push
addr16
cmp
inc
pushf
pusha
ja
jl
add
repnz
dec
sbb
xchg
stc
pop
ret
xor
imul
adc
shll
sub
sti
roll
in
jmp
inc
xchg
jnp
loop
push
jae
and
test
insl
sub
mov
lcall
mov
imulb
pop
icebp
subb
test
imul
nop
iret
sbb
out
and
lahf
adc
pop
and
shrb
adc
push
sahf
dec
jg
mov
les
hlt
and
pusha
mov
mov
jecxz
clc
sbb
std
je
xor
push
adc
cwtl
mov
popl
sub
ljmp
in
pop
xlat
imul
ss
xchg
xlat
daa
imul
pop
test
dec
addr16
mov
lret
pusha
repz
and
ror
mov
cmp
int
jbe
mov
pop
fdivrl
mov
dec
inc
repnz
push
iret
andb
scas
and
test
adc
dec
add
lea
movl
and
cmpb
mov
aaa
dec
fimuls
inc
andb
stos
jo
rcrb
mov
loop
cmc
iret
rcrl
inc
rcll
mov
cwtl
pop
int
addr16
inc
pop
std
pop
lahf
gs
jne
imul
lds
scas
call
repnz
inc
xchg
outsb
fs
or
mov
push
mov
les
xor
pushf
sbb
mov
jle
scas
sbb
pop
dec
call
xlat
inc
sbb
cwtl
push
in
pop
cmpsb
cmp
pusha
inc
xchg
jge
push
pop
pop
cmp
mov
mov
ss
xor
loopne
sub
or
jmp
jbe
xchg
mov
add
ret
dec
and
ret
js
mov
std
out
jge
adc
or
sti
scas
iret
mov
xchg
mov
shlb
das
ss
arpl
xchg
mov
out
outsl
shlb
jmp
paddq
lahf
cmc
xchg
adc
inc
add
dec
outsl
xor
mov
cs
das
nop
ja
imul
jae
mov
movsb
cli
ljmp
sub
sbb
cld
call
inc
loopne
out
mov
mov
mov
or
pop
add
jne
scas
pop
call
ja
jmp
les
xchg
mov
sub
shll
daa
and
and
aam
add
xor
pop
dec
outsb
push
pop
sbb
cs
sbb
test
dec
jg
lods
dec
xchg
sarl
cs
mov
mov
popa
adc
push
inc
pop
test
xchg
and
inc
and
add
das
inc
mov
repnz
ret
js
daa
das
xor
pop
hlt
sbb
mov
ds
jecxz
lds
xchg
sbb
fistpl
clc
add
add
push
mov
lcall
lahf
pop
aam
ficomps
sub
lahf
cwtl
and
imul
into
jmp
jne
jns
adc
dec
ret
mov
ret
mov
in
sbb
sbbb
ljmp
std
rolb
dec
adc
xor
mov
mov
lret
pop
lock
out
es
inc
test
jp
push
shrl
xor
insb
icebp
dec
pushf
xchg
jecxz
test
push
rep
jnp
lock
jl
sarl
inc
pop
mov
or
push
xchg
test
push
sbb
cwtl
gs
jo
xchg
cmp
xchg
mov
cwtl
pushl
int
push
clc
iret
clc
movsb
xchg
cli
sbb
dec
xchg
fwait
xchg
in
jno
inc
mov
notb
aad
jmp
sbb
int3
es
dec
cmp
cmp
xchg
xor
fbstp
jmp
les
or
dec
xchg
add
negb
addr16
jg
push
fimuls
hlt
repz
test
xor
sbb
cmp
jae
in
pop
add
lret
add
mull
xor
pop
sbb
or
cld
add
arpl
push
add
test
das
dec
popf
push
pop
or
ret
int
fcomi
aam
xor
xor
dec
sbb
faddl
dec
pop
lods
mov
movsb
lret
pop
addr16
test
cltd
mov
leave
sub
dec
shll
mov
mov
and
insl
xchg
pop
jne
jmp
or
push
mov
std
mov
shl
loopne
adc
imul
jl
lcall
xchg
xchg
aas
push
xor
rorb
adc
sbb
xor
jne
mov
mov
inc
dec
mov
dec
ds
ret
xor
enter
aam
add
mov
fldl
out
jge
inc
in
pop
jmp
lea
dec
cltd
imul
test
cmp
in
cs
pushf
decl
jae
xchg
or
arpl
enter
faddl
and
adc
rcrl
test
fcompl
and
in
mov
mov
fadds
inc
xchg
mov
sub
mov
ret
push
ja
les
loop
xchg
aaa
sbbb
xchg
cltd
adc
fbstp
add
xor
imul
cmp
scas
lock
sub
lret
out
mov
add
mov
lods
inc
sarb
int
jmp
testb
xor
jl
dec
cs
jp
push
movsb
dec
and
or
mov
or
mov
lea
push
inc
mov
sahf
add
inc
sar
shr
cmc
scas
popa
fcoms
outsb
or
repnz
pop
sbb
dec
inc
jmp
push
mov
aaa
arpl
das
iret
cmc
xchg
cmp
lods
adcb
fdivr
mov
fucomip
in
dec
or
aad
icebp
push
pop
pop
stos
movsl
pop
dec
pop
mov
xchg
in
add
rorl
xchg
pop
cmpsl
in
ds
and
jmp
pop
sub
clc
loope
fcoms
mov
fdivs
dec
xchg
nop
pop
xchg
fistpl
jo
sub
in
inc
fdivl
stos
lods
xor
or
and
pop
cltd
js
packsswb
mov
jnp
and
add
lods
jne
std
icebp
lock
pushf
das
jmp
xchg
dec
movsb
lock
scas
mov
imulb
jmp
andb
mov
rorb
pop
cmp
fcmovnb
std
mov
icebp
and
dec
imul
mov
xchg
jns
movsl
sub
rcl
ret
pushf
add
into
test
xor
cmpb
xor
xchg
xlat
lds
test
push
xor
jo
ror
pop
mov
adc
sub
sbb
mov
mov
mov
js
push
inc
lcall
outsl
sub
push
jle
mov
cmp
sub
enter
sbb
add
xchg
shll
ss
daa
add
xchg
lcall
outsb
and
jg
xlat
push
mov
aaa
xchg
xchg
cmp
sub
xor
dec
addr16
cs
dec
scas
push
ror
mov
outsl
lds
test
push
test
iret
dec
test
pop
mov
stos
ficoms
jp
mov
dec
fisubrl
jp
sbb
fstpt
into
clc
loopne
imul
cltd
mov
hlt
loop
mov
mov
pop
aam
pop
sub
test
push
jecxz
sbb
pop
mov
mov
addr16
sahf
stc
cmp
fsub
out
ljmp
bound
mov
ljmp
fs
repz
jle
fidivrl
test
lcall
adc
or
pop
sub
mov
notb
xchg
pop
repz
mov
pop
repnz
pop
rcll
gs
mov
pop
pop
cmp
fadds
addr16
orb
xchg
mov
sub
bound
or
icebp
je
xchg
mov
mov
mov
sar
push
push
mov
lds
daa
mov
inc
pusha
mov
mov
int3
popf
sub
cmpsb
sarl
mov
jle
sarb
pop
lds
in
scas
scas
int
paddusb
mov
lods
pop
sbb
outsl
xchg
fucomip
inc
leave
repz
lcall
pop
mov
mov
iret
xor
int3
and
jns
std
or
jns
lods
adc
push
sar
mov
scas
mov
dec
call
push
pop
aad
or
out
in
sti
test
ljmp
movsb
jecxz
add
lcall
adc
sbb
xchg
and
lcall
mov
dec
mov
addl
and
dec
jmp
cmp
es
mov
repz
cwtl
adc
lret
mov
inc
pusha
add
lods
popf
mov
ret
stos
adc
rcrl
stc
adc
shll
stc
into
dec
ljmp
ficoms
insb
sub
frstor
mov
daa
loopne
call
mov
xchg
sub
mov
sarb
sbb
jmp
cmc
sti
xchg
adc
inc
inc
sub
std
addr16
pop
mov
mov
outsl
inc
inc
fdivrp
pushf
mov
sahf
fmulp
roll
or
pop
mov
iret
out
sub
imul
lret
stos
je
jp
xchg
popf
stos
ljmp
or
pop
out
add
or
imul
mov
or
icebp
or
adc
jb,pt
xor
cs
ss
int
ret
fidivrl
mov
int3
mov
jp,pt
scas
jo
push
dec
xchg
xchg
lods
data16
sub
ficoms
loope
or
add
and
fisubs
inc
int
push
pop
pop
add
jb
lods
rcrb
mov
jl
inc
imul
test
fwait
push
push
cmp
mov
icebp
stos
mov
ljmp
fnstcw
fistpll
data16
jle
inc
dec
or
jo
mov
adc
or
js
aas
pop
pop
loopne
mov
add
jg
incl
hlt
sar
loopne
xchg
int
arpl
fidivl
scas
xchg
test
aam
cmp
mov
and
stos
mov
int3
rcrl
add
mov
xchg
gs
dec
jl
ss
js
ret
pop
daa
cwtl
jmp
push
xchg
addps
sti
sub
cmp
push
xor
dec
ret
in
sti
pop
ljmp
push
insl
or
pop
fcmove
xchg
or
jmp
lahf
inc
dec
xchg
or
dec
loopne
lahf
fs
stos
adc
jecxz
jl
fldenv
mov
sub
dec
pop
and
pop
sahf
pop
out
mov
shrl
jo
ss
add
jmp
sbb
mov
push
jecxz
jmp
bound
jno
andb
lods
rcll
sbb
out
mov
out
xor
out
out
jle
jle
jg
mov
cmpsb
dec
add
popf
lcall
inc
inc
jl
lahf
push
repz
out
push
imull
gs
mov
xor
jg
mov
xor
ja
in
rcrb
test
cmpl
notb
ds
rcrb
repz
shlb
sahf
pop
xor
lahf
pop
or
fcoms
or
jne
sbb
jnp
in
inc
xorl
cld
jbe
or
mov
pushf
rol
sub
popf
jns
push
stos
int
ficomps
add
or
mov
dec
mov
mov
xchg
inc
xchg
or
pop
leave
mov
iret
jecxz
popa
icebp
or
daa
inc
mov
mov
hlt
inc
adc
mov
mov
outsl
loop
dec
ss
out
push
fwait
in
add
dec
jmp
push
add
and
mov
or
mov
in
cmp
push
push
repz
jge
jmp
scas
js
int3
and
jnp
adc
add
sbb
jp
lret
loop
xor
jle
add
pop
hlt
gs
xor
inc
fldt
jp
push
xorb
add
and
mov
adc
out
nop
std
xchg
outsl
mov
sti
sahf
addr16
pop
orb
pushf
and
push
fs
sbb
mov
mov
fildl
add
and
xchg
dec
cmp
or
adc
pop
int3
or
fcoml
popf
sbb
xchg
bound
push
sbb
scas
pop
pop
and
shll
mov
out
dec
xor
out
dec
cld
mov
mov
mov
pop
inc
movsb
lods
push
test
mov
clc
xor
and
push
fdivs
xchg
cld
addr16
test
jbe
inc
addr16
dec
sub
add
push
inc
in
cmpsl
out
push
or
xor
pop
testl
sub
jb
cmp
cmp
gs
cmp
ret
test
mov
and
add
fsubl
xchg
or
sub
add
xor
iret
filds
dec
jp
fidivrl
lret
jmp
es
xchg
and
add
scas
adc
mov
and
inc
sarb
ja
inc
sbb
jno
cmp
nop
add
pop
sbb
pop
int3
mov
cld
leave
cmp
jne
gs
shll
push
movl
sahf
push
imul
adc
mov
out
cld
jecxz
pop
dec
dec
loope
fistl
aad
push
adc
out
arpl
dec
xor
mov
mov
hlt
ds
or
sbb
pop
jne
outsl
xchg
pop
pop
sbb
mov
xchg
hlt
xor
pop
jle
sub
imul
mov
mov
mov
in
mov
or
mov
sub
lods
and
fcmovbe
and
rcrb
cmp
ret
jae
or
jbe
daa
ret
stos
xchg
idivl
sbb
call
and
push
test
loopne
mov
cmp
mov
mov
lea
lock
pop
scas
lahf
jbe
sahf
dec
lret
call
jge
notb
or
fisttps
mov
roll
mov
cmpsb
gs
aam
push
sbb
mov
mov
pop
xchg
fiaddl
ret
xor
and
std
mov
sub
mov
ror
mov
stos
xchg
sahf
das
and
mov
cmp
icebp
cmpl
dec
loopne
pop
push
sbb
je
adc
nop
iret
insl
mov
popa
pop
jp
jle
jp
outsl
enter
dec
sbb
dec
sub
jle
sarb
mov
mov
in
jnp
mov
sbb
out
and
mov
inc
sbb
ljmp
cmp
mov
fcoml
lds
dec
cs
aam
aad
cmc
int3
dec
jp
mov
push
xchg
jne
dec
mov
jae
and
jae
add
xor
jmp
mov
loop
xchg
mov
dec
int3
xlat
out
pop
rorl
or
and
dec
add
adc
ja
dec
in
in
add
inc
cmc
sbb
inc
sbb
xchg
pop
loop
pop
sbb
push
call
jns
cmpsl
int3
mov
add
les
mov
mov
fldenv
inc
jmp
mov
nop
mov
fstps
add
and
mov
or
hlt
fwait
sarl
js
fucomp
xchg
movsl
cmpsl
leave
sbb
xor
lcall
push
xlat
out
je
xor
lret
in
cmc
repz
cltd
fiadds
ja
sub
mov
addb
in
adc
mov
or
insl
xchg
push
sub
lods
sbbl
test
cmpl
jne
xchg
lcall
filds
fsts
cli
test
cli
bound
in
jle
aas
lods
nop
or
mov
leave
or
fmul
int
int
loop
mov
imul
jns
addl
out
add
jno
popf
sub
out
inc
xchg
ljmp
sbb
sbb
incl
add
dec
out
cmpsb
adc
arpl
in
sub
mov
out
aas
cmpb
jp
je
pop
dec
repnz
stc
mov
push
shlb
adc
adc
pop
cld
jno
push
repz
xor
cmpsb
xchg
mov
in
mov
add
rclb
flds
stos
cmp
ja
mov
cmpsl
pop
out
mov
xorl
jle
int3
fcomps
lods
mov
aam
je
sbb
bound
jecxz
daa
lahf
adc
xorb
adc
add
lds
and
ret
sbb
and
xchg
test
dec
mov
sub
popa
gs
das
or
mov
dec
push
xchg
mov
mov
imul
mov
idivb
ret
sbb
ss
and
add
xchg
cltd
nop
rorl
decb
popf
sbb
out
mov
in
lods
jne
mov
sbb
and
pop
int3
and
cmp
xchg
ljmp
xchg
enter
shl
jmp
xchg
inc
sarl
jg
add
enter
jp
lret
out
push
addl
adcb
je
call
loope
xchg
mov
adc
sti
add
inc
xchg
stc
jl
in
shl
cmp
cmp
push
add
sbbb
popf
add
jle
out
lods
mov
movsb
jp
movsl
pop
ret
in
imul
push
mov
adc
lret
xor
fcmovbe
dec
and
cmovle
mov
pop
mov
fcoml
sub
xchg
rcrb
mov
sub
into
xlat
rol
jle
shr
aas
mov
xor
and
dec
jnp
push
dec
mov
sbb
div
xor
jg
inc
xchg
adc
std
xabort
pop
repz
sbb
lret
andl
mov
cwtl
inc
aas
cmpsb
das
aas
dec
xchg
add
repnz
mov
daa
imul
sbb
in
pop
jnp
arpl
fwait
mov
aaa
out
sarl
movsb
mov
pop
andb
mov
scas
add
push
test
mov
xchg
and
loop
pop
jp
test
mov
loop
sbb
outsl
sub
mov
push
imul
add
fidivrl
shll
sub
jo
jns
addl
mov
pop
fs
pop
jmp
icebp
and
nop
adc
push
xor
mov
lret
xchg
mov
loope
sbb
mov
jne
pop
mov
xchg
loop
es
xor
dec
mov
arpl
adc
xchg
inc
and
bound
dec
cmp
jbe
push
sbb
pushf
sar
mov
or
loop
iret
inc
data16
mov
mov
bound
stos
jmp
or
sub
add
cwtl
adc
adc
cld
push
into
test
sbb
fdiv
imul
hlt
pop
fisubrl
sub
ret
add
test
dec
aad
aad
xlat
insb
cltd
and
cmp
dec
mov
jg
inc
mov
sub
out
sti
mov
insb
jnp
jns
loop
xlat
sbb
hlt
cld
adc
imul
fldt
jo
push
fwait
pop
pop
dec
mov
mov
vpsrld
jb
jl
pusha
pop
out
sub
sahf
xor
std
push
cmp
sbb
jg
xchg
cwtl
std
mov
loopne
icebp
js
mov
int
cltd
out
js
jl
ljmp
ffreep
dec
hlt
ficompl
sbb
sub
push
imul
mov
shr
jns
cmp
mov
mov
lret
data16
lods
in
jne
adc
mov
push
stos
movsb
jecxz
jo
dec
mov
xor
xor
ret
pop
pushf
mov
inc
cmp
xchg
mov
dec
lock
add
hlt
and
call
in
mov
aas
push
ret
dec
addb
pop
or
sbb
cmp
or
xor
in
or
pop
and
scas
sbb
add
pop
xchg
enter
icebp
test
divb
inc
rorb
push
in
push
jns
push
dec
cmp
jmp
fstpt
xor
std
xchg
clc
stos
push
stos
inc
test
pop
push
sub
cwtl
test
in
jl
xor
fcoml
fs
jno
das
jge
push
fisttps
sub
lahf
mov
pop
mov
das
inc
repnz
stos
stos
or
imul
mov
fistpl
aam
mov
loopne
call
jne
inc
and
mov
add
mov
ret
adc
mov
inc
clc
mov
jno
jle
mov
enter
sahf
nop
or
or
outsl
imul
jbe
pop
popa
jmp
mov
bound
loop
popa
adc
scas
jl
pushf
pusha
mov
adc
push
push
jnp
mov
sub
sub
aas
test
cmp
inc
mov
or
aam
mov
pusha
jno
rolb
ljmp
xor
and
dec
inc
inc
rorl
mov
jmp
jae
and
lods
sbb
ds
xchg
xchg
inc
ret
js
xchg
stos
stos
jb
lods
aaa
add
iret
mov
lea
scas
sbb
jbe
scas
int3
push
sbb
imul
adc
mov
int3
mov
xchg
mov
sarb
int
push
rcrl
fdivs
adc
insl
add
rcr
ds
out
int
inc
aam
add
jge
dec
jge
dec
jge
xchg
loopne
and
fdivs
iret
outsl
sbb
cmp
jecxz
repz
fwait
pop
cmp
push
cmp
push
dec
or
hlt
push
inc
xchg
push
or
ret
hlt
movsb
cltd
pop
xchg
sub
lock
adcl
hlt
insb
in
fimull
sub
lods
adc
call
pop
or
xchg
xchg
jg
mov
call
fwait
add
xorb
xchg
push
mov
negl
pop
and
sbb
lcall
shr
inc
cmp
stc
rcl
xlat
inc
repnz
mov
iret
fcoms
repz
sbbl
sbb
mov
imul
push
rcl
cs
daa
testb
roll
jno
push
ss
cltd
add
and
adc
adc
inc
pop
xchg
test
inc
mov
fisubrl
inc
rcr
push
pop
sti
pushf
cmp
cs
test
jnp
pop
and
int3
pop
mov
mov
and
movsb
mul
rcr
rcrl
mov
xor
or
and
adc
cltd
pushl
rcl
ss
insb
divl
cmp
dec
shl
outsl
mov
lahf
enter
jge
sbb
mov
or
pop
adc
sar
xorl
sbb
xor
jmp
inc
enter
xor
enter
and
mov
fsts
into
xchg
push
add
mov
sub
mov
enter
repz
out
mov
cmp
mov
loopne
mov
arpl
cmc
cmp
lahf
inc
and
fidivrs
les
pop
cmp
arpl
lahf
adc
add
cmpsw
or
test
jle
popa
pop
cs
pop
lret
icebp
xchg
and
outsb
cmp
cld
dec
and
addps
push
leave
adc
push
cmp
jae
xchg
mov
fisubl
arpl
pop
rorb
sbb
xlat
ficompl
xchg
sub
repz
aaa
test
pop
xchg
adc
dec
mov
in
sub
or
xor
rolb
dec
sub
xor
dec
pop
popf
mov
adc
mov
fimuls
inc
lods
mov
mov
and
xchg
jne
pop
ret
lahf
pop
jns
ret
sub
cmp
sub
xchg
mov
out
in
cmpsb
aas
jecxz
xor
cmp
xchg
aam
hlt
js
pop
and
dec
mov
test
std
stc
adc
imul
cmp
vpxor
dec
in
rol
mov
in
cltd
ret
faddp
loopne
test
xchg
inc
es
repnz
mov
fucomp
sbb
in
mov
dec
mov
push
cmp
and
lods
cli
adc
jnp
jo
ret
mov
subb
xlat
fwait
push
stos
xor
jp
icebp
jg,pn
or
mov
iret
push
or
xor
nop
arpl
and
data16
imul
hlt
outsb
mov
pop
jo
negl
notl
int
loope
aad
and
push
nop
lcall
xlat
pop
mov
adc
out
sbb
push
out
push
xchg
dec
xchg
ficomps
rsqrtps
push
mov
inc
dec
jecxz
cli
jp
push
or
xchg
push
std
data16
pop
sub
xor
shrl
mov
in
test
pop
int3
mov
rolb
push
adc
fwait
jl
into
imul
jns
les
jl
xchg
out
loop
push
aas
int3
adc
inc
jmp
pop
mov
sub
dec
in
inc
cmp
push
or
sarb
lret
test
pop
push
add
mov
ret
sub
sbb
mov
enter
mov
xlat
mov
push
iret
mulb
movsl
and
pop
mov
aas
sbb
jp
jae
arpl
mov
test
insl
dec
ja
or
rep
rolb
add
inc
popf
mov
int
pop
les
loope
ret
fs
cmp
push
insl
mov
jge
adc
mov
cli
jge
pop
stc
adc
xchg
push
pop
mov
mov
pop
mov
imul
sbb
aas
mov
shr
or
jo
das
pop
sbb
pusha
xor
push
inc
loop
push
dec
insb
in
push
xor
xor
shrb
push
sub
push
ror
jns
mov
inc
and
push
cltd
mov
lcall
scas
nop
pop
jmp
and
sub
mov
out
jle
sti
sub
fidivl
add
lahf
inc
mov
fnstenv
repnz
mov
cmpsl
pusha
js
xor
or
clc
adc
xchg
ljmp
cli
outsl
orl
xchg
fisttps
cld
aad
in
sub
faddl
jns
push
cmp
xorb
int3
cld
es
mov
mov
cmc
ret
enter
je
bound
xchg
or
arpl
inc
xor
and
cs
add
popa
mov
push
push
xchg
in
int
imul
lods
xchg
pop
push
arpl
inc
rcr
sti
fwait
leave
dec
ror
mov
pop
test
dec
pop
inc
xor
movsb
and
jb
imul
shll
adc
pusha
push
out
push
arpl
loopne
mov
mov
mov
test
xor
mov
pop
loope
adc
shr
push
mov
std
lcall
sahf
mov
lret
cmp
mov
pop
mov
leave
push
lock
cmovae
test
pop
cld
xor
lcall
xchg
inc
jb
sub
loopne
add
jp
jo
leave
sbb
or
test
push
rorb
bound
jnp
gs
in
repnz
mov
xchg
mov
inc
in
inc
repnz
ljmp
mov
lret
insl
fildl
lock
inc
movsl
clc
jb
sub
adc
ss
popa
mov
iret
cwtl
pop
das
fisubl
pop
call
jmp
fimull
js
dec
idivl
xchg
insb
mov
inc
das
jo
sub
push
out
andb
mov
enter
or
dec
mov
mov
loop
mov
jbe
adc
or
push
pmulhw
cmpsl
cmp
jns
mov
cmp
gs
mov
jl
insl
push
pop
js
or
jp
inc
nop
dec
mov
xchg
out
lea
push
adc
lahf
sub
sub
clc
lds
test
push
xor
insl
jno
ret
div
dec
shrb
shl
pop
mov
inc
pusha
pop
push
push
cmp
ja
xchg
mov
je
nop
push
int
inc
or
imul
call
ljmp
jns
pop
fsubrs
jecxz
mov
in
push
lock
mov
mov
lahf
lock
movsb
fstl
flds
or
pushf
mov
daa
sti
cmpsb
ret
mov
movsb
jle
out
pushf
sahf
sub
outsb
ja
ret
jns
ja
gs
cmpsb
mov
test
sub
pop
add
in
scas
clc
daa
push
jb
int
fwait
pop
xchg
xor
sbb
outsl
daa
aad
sub
cwtl
cmp
int
loopne
cmpsb
scas
jnp
mov
adc
add
mov
sub
jecxz
dec
push
mov
mov
ljmpw
pushf
test
xchg
and
inc
stos
shr
mov
add
addl
xchg
add
pop
aam
jne
fcompp
cmpsl
mov
sbb
nop
inc
test
outsl
inc
adc
inc
pop
insl
movsl
push
jp
pop
or
push
loop
xchg
xchg
outsb
subl
pop
mov
out
adc
lcall
sub
icebp
js
cmpl
adc
fldt
sbb
mov
mov
cmp
add
gs
les
adc
clc
rorl
add
jle
mov
sbb
nop
dec
cmp
mov
jmp
movsl
les
xchg
sti
loope
mov
sbb
lods
cmp
push
cbtw
je
push
pop
dec
and
pop
xor
push
clc
jp
xor
jg
lcall
jbe
or
or
xorl
push
or
or
xchg
sub
push
js
push
cwtl
rorb
mov
sub
aas
adcb
cmpb
pop
jne
mov
das
jo
sub
fsub
iret
and
loope
sbb
hlt
xor
faddl
popa
adc
shlb
lret
pop
mov
in
add
cltd
cmp
pop
mov
lods
test
fcmovnu
aam
xchg
mov
push
jbe
inc
jmp
mov
cld
cmpsb
fnstcw
shrb
dec
sahf
or
outsl
movsl
dec
aad
ret
je
dec
add
xor
sbb
pop
int3
adc
popf
fldenv
pop
sbb
stos
jbe
sti
outsb
cmpb
ret
popf
aas
imul
inc
mov
pop
in
cld
mov
and
cmp
fs
cmp
adc
fxch
jno
push
xlat
scas
fimuls
mov
xor
fistl
stc
pop
jmp
outsl
mov
push
scas
stc
push
imul
xchg
adcb
sub
dec
ficomps
mov
iret
cmpsb
xchg
mov
in
sbb
lret
jge
jmp
cmpsl
in
and
std
adc
fsubs
pushf
cmpsl
fbstp
and
shll
xor
jl
sbb
leave
mov
mov
cmp
and
andb
fcoms
addr16
jl
cmp
cmpsl
pop
adc
pop
dec
cmp
mov
adc
enter
mov
or
and
push
je
out
shl
jnp
pop
mov
and
divb
cmpsb
es
inc
nop
jg
hlt
adc
xchg
rorl
add
pop
ret
inc
ret
and
loope
mov
mov
dec
pop
testb
out
mov
jp
and
mov
pop
inc
fwait
jp
into
or
xor
push
popf
stc
dec
inc
cmpsb
sbb
pop
pusha
enter
inc
mov
rorl
sbb
fs
xchg
test
movsb
outsb
mov
test
rcl
shrb
jmp
ret
fidivl
dec
xchg
xchg
inc
int
cmp
addr16
jp
bound
mov
and
jp
cmp
cltd
cmp
mov
les
adc
xchg
test
or
adc
jmp
mov
test
cmpb
push
push
cmp
outsl
inc
sub
stos
fcmovnbe
nop
jge
in
xor
and
jo
sbb
lock
or
les
jg
and
sti
test
sarb
bound
pop
xor
xor
movsl
fstl
jne
xchg
int
push
leave
icebp
sbb
push
cwtl
xlat
andb
add
pushf
repz
or
into
push
jne
movsl
push
sub
jae
inc
and
sub
pop
fdiv
sub
dec
sub
stc
cmpb
das
jg
adc
push
push
sti
xor
mov
lods
jmp
shl
inc
loopne
add
dec
jae
adc
int
dec
in
cmp
imul
cmp
mov
aaa
cmp
pop
push
add
lods
ljmp
int3
mov
inc
cltd
lea
or
adcb
push
repz
stos
and
or
dec
aad
lods
push
push
stc
mov
jp
fwait
push
jge
xchg
mov
dec
into
pop
push
loopne
mov
in
lret
jp
pushl
pop
xchg
mov
cmc
sbb
jbe
adc
popf
dec
xchg
xor
dec
mov
dec
in
push
cld
add
sbbl
stc
mov
jp
mov
int
stos
out
leave
pushf
cmpsb
push
cmp
lea
cmp
xchg
cmpsl
xchg
push
fmul
or
sbb
mov
dec
or
stos
rorl
jb
lcall
lret
mov
fdivr
inc
lods
and
sbb
xor
lea
flds
subl
scas
je
ds
mov
ljmp
jno
adc
faddl
inc
push
int3
xchg
jg
xor
push
jmp
test
xor
jge
rcrl
jno
test
sarb
addr16
fxch
loope
shr
movsb
mov
movsb
jecxz
or
push
jae
les
cltd
mov
and
sub
jns
push
sub
testl
sahf
std
pop
call
pop
mov
loop
out
testl
sub
mov
sti
lret
add
fistps
in
mov
pop
aas
imull
in
jg
rolb
aas
xor
out
out
cmp
ret
xchg
inc
addr16
xchg
loope
stos
jecxz
xchg
lahf
jns
stos
jne
adc
cmpsb
inc
mov
int
es
inc
dec
fs
ljmp
es
pop
jp
mov
mov
mov
cmp
bound
loop
lcall
outsb
lods
test
fildll
mov
xchg
xor
movsl
out
subb
mov
test
shrb
mov
cmpb
nop
xor
and
push
mov
cwtl
daa
jo
inc
stos
aam
frstor
fstpl
outsb
daa
addr16
aaa
pusha
jb
mov
jns
mov
push
mov
and
inc
gs
out
icebp
rorl
add
in
mov
shl
or
ljmp
into
aam
int3
mov
sti
xor
sbb
cmp
lcall
fidivrl
sub
dec
push
imul
out
in
insl
push
xor
xor
jecxz
rorb
call
cmc
loopne
sbb
in
inc
xchg
jp
jg
push
ror
jnp
sti
loop
jle
repz
ljmp
movsb
cmp
clc
ljmp
outsb
in
mov
leave
and
mov
lea
imul
or
mov
inc
fistpl
imul
xor
lea
or
jmp
stc
dec
fsts
fmull
mov
xchg
ljmp
mov
cmp
iret
stos
sub
sbb
mov
sbb
lods
jno
imull
popf
mov
sbb
dec
mov
mov
add
and
scas
cmpsb
and
xchg
neg
cmp
rcr
mov
insb
pop
aas
imulb
mov
cmpsl
outsl
sbb
xchg
lahf
aam
xor
out
ret
ja
cli
in
push
inc
cmpb
inc
dec
mov
mov
sahf
inc
ret
ljmp
mov
push
pop
das
imul
sub
inc
xor
xchg
add
xor
pop
xor
or
ret
aam
cmp
jne
adc
das
sub
mov
lahf
shr
mov
loopne
out
pop
cld
jae
jae
fs
int3
sahf
inc
mov
hlt
test
dec
mov
cld
push
ljmp
sub
das
pushl
rcrb
and
xchg
mov
jbe
mov
xchg
cmp
bound
test
and
loopne
jbe
cmp
inc
popf
adc
cmp
fwait
push
outsb
ret
add
test
mov
outsb
jg
lock
arpl
and
repnz
das
test
jl
jge
jno
aaa
mov
das
sti
or
inc
popa
arpl
data16
mov
data16
mov
ljmp
daa
loop
je
pop
mov
je
addb
jmp
mov
mov
popa
cmp
adc
jb
jo
mov
jp
jb
xchg
push
lret
out
mov
leave
xor
ja
sti
stos
out
les
inc
fstps
dec
fwait
push
data16
out
and
dec
and
inc
jle
dec
filds
push
jle
outsl
sbb
or
call
nop
scas
add
rcrl
mov
clc
mov
out
jp
mov
or
push
loopne
dec
arpl
cmpsb
pop
cmp
fiadds
loope
int3
jecxz
sbb
inc
mov
lods
das
dec
mov
and
or
or
cmpsl
int
hlt
pop
bound
sbb
mov
adc
jno
adc
mov
inc
shrl
js
testb
imul
push
and
aaa
sbb
mov
mov
in
pop
xchg
inc
inc
sub
sbb
popf
insl
idivb
aad
insb
test
jecxz
ret
xchg
mov
out
ret
fistl
add
daa
repnz
sahf
mov
std
les
clc
sarb
ret
inc
in
pop
jg
push
jmp
xor
jns
xchg
test
and
mov
cmp
ret
xchg
ss
test
ljmp
pop
add
pop
lret
jl
xor
inc
faddl
ja
shll
jns
test
cmc
push
inc
fnclex
stos
and
inc
push
loope
js
jo
test
outsb
xor
cmc
jb
aaa
test
icebp
mov
mov
sbb
cwtl
aad
pop
xor
jne
fwait
iret
sub
inc
xchg
out
cli
mov
inc
pop
xchg
xchg
sbb
push
subl
lods
aas
push
mov
add
mov
popa
je
mov
cmp
mov
dec
add
cld
xor
sub
add
lret
push
insb
sub
int
dec
std
dec
cmp
rorb
es
add
cmp
xchg
mov
cs
cmp
imul
xchg
inc
dec
data16
arpl
js
jnp
lods
daa
cmpsl
pop
fidivrl
xchg
and
xchg
test
adc
ljmp
ret
scas
jo
sub
push
mov
sbb
pop
cltd
jne
lea
pop
imul
into
aaa
xchg
enter
xchg
lds
negl
sti
jb
sub
and
inc
xor
daa
roll
xlat
add
movsb
jg
jp
jle
shll
ds
or
jecxz
mov
loope
mov
xchg
add
mov
js
jle
loope
fsubl
mov
mov
push
sub
xlat
jle
fisubs
cmc
scas
outsb
push
icebp
sub
nop
imul
cmp
adc
out
inc
jge
cmp
pop
insb
daa
fdiv
ret
add
xchg
subb
repnz
jmp
mov
and
sar
push
pop
jb
dec
mov
adc
int
int3
jno
dec
mov
push
xcrypt-ecb
cmpsl
movlps
mov
adc
loopne
adc
jg
in
inc
push
scas
sbb
pushf
mov
or
aas
mov
add
push
dec
call
negb
out
xchg
cmpsb
pop
dec
add
lods
cltd
fildll
bnd
adc
or
adc
incb
push
add
pusha
jmp
mov
jg,pn
and
hlt
fucomi
push
fs
mov
adc
lret
aam
adc
inc
lret
insb
in
ret
and
jecxz
popf
inc
push
into
mov
insl
cmp
mov
lock
and
stos
inc
adc
fiadds
dec
std
mov
push
mov
sbb
fcoml
lds
sti
add
clc
xchg
imul
test
std
cmp
rorb
add
mov
xorb
inc
aam
xor
and
sbb
add
pushf
mov
pop
stos
pop
jmp
sbb
push
jb
push
xor
scas
push
or
and
scas
lods
jecxz
das
and
push
xchg
xchg
and
les
sub
movsb
stc
add
push
dec
scas
test
mov
pop
aad
jg
decl
jl
adc
xchg
xor
push
mov
les
xor
repz
fnsave
xchg
out
insl
test
fisubrl
jb
or
and
inc
ret
or
pop
cltd
push
loope
daa
mov
mov
fwait
push
sarl
ja
jbe
dec
popa
adc
clc
jl
push
or
or
adcl
jb
iret
xchg
jp
shll
push
and
jbe
dec
pop
xchg
movlps
jle
inc
mov
add
sbb
cmpsb
sbb
pop
fs
push
cmp
scas
out
push
fcmove
mov
pop
jb
das
aas
lods
xor
push
outsl
cli
pop
xor
inc
idivl
iret
cmp
xor
or
cs
pop
lods
scas
sub
xor
pushl
mov
test
inc
adc
inc
push
push
out
jmp
xorb
scas
dec
pop
pushf
mov
push
pushf
cmpsb
jb
std
push
jecxz
nop
and
sub
nop
cmp
stos
mov
xor
or
cmpsb
test
cs
or
cmp
outsb
jmp
mov
adc
inc
sub
in
out
ds
cmp
rcl
jno
add
jae
jnp
inc
int3
fcmovnbe
pop
out
lahf
and
push
pop
mov
imul
out
cmc
add
or
in
fildll
mov
and
inc
rcl
or
out
popf
adc
or
mov
adc
call
rol
neg
in
sbb
sti
xor
sbb
mov
cmp
stos
cmpb
sbb
ja
into
sub
or
pop
and
cmp
adc
push
push
mov
push
sub
aaa
lock
xor
sub
repz
aam
aad
fdivrl
inc
mov
rorb
test
xchg
int
adc
ret
jno
fsubrl
jg
pop
xchg
jns
or
pop
push
fisubl
fwait
cwtl
jg
mov
dec
push
sub
fidivrl
fisttps
xchg
int
xlat
jne
mov
into
daa
cltd
imul
out
dec
stc
stos
cmp
lret
shrb
mov
sub
sbb
inc
or
adc
pop
xchg
jb
aam
sbbl
mov
xor
loope
cltd
fdivs
fisttps
mov
mov
sub
in
mov
add
sub
xor
xchg
ffree
out
xlat
repnz
inc
aas
aad
dec
fs
push
js
dec
xchg
outsl
ja
mov
and
inc
add
pop
sub
xacquire
jne
stos
lock
mov
andl
dec
or
cmpsb
push
mov
int3
out
lret
test
mov
jmp
or
sahf
and
imul
mov
in
xor
inc
jecxz
or
pop
cmp
push
jns
push
jns
cltd
daa
rcrb
mov
pop
jmp
test
jmp
out
xor
or
repz
xor
jecxz
inc
imul
push
leave
ret
inc
test
sahf
sarl
iret
inc
ss
testl
cmpsl
mov
sub
popa
insb
xor
push
cli
fs
inc
xor
cmp
sub
sbb
or
iret
xor
mov
sub
icebp
mov
iret
lcall
dec
sub
xor
lock
popf
pop
cli
roll
inc
fiadds
or
add
cltd
mov
xlat
test
pusha
jecxz
push
xor
rcr
jbe
into
test
rcl
popf
ss
jl
adcb
and
mov
xor
dec
sbb
sbb
push
xor
ret
imul
rep
ret
test
push
ja
icebp
movsl
adc
mov
mov
testb
xor
xchg
xchg
add
call
mov
and
push
loop
imul
stc
push
mov
js
inc
mov
or
jecxz
and
and
mov
addr16
sbb
pop
insb
insl
cmp
adc
mov
push
mov
repz
xchg
and
je
pop
cmpsl
mov
xor
dec
mov
jae
xchg
dec
cmp
in
and
loop
push
test
stc
jg
mov
dec
std
adc
flds
xchg
insb
cmp
mov
pop
movsl
test
and
pop
push
jns
fdivrs
and
dec
mov
ficompl
mov
jo
mov
pop
cli
mov
aad
mov
ret
js
in
adc
push
mov
xchg
nop
sti
lcall
sub
and
pop
inc
jnp
push
shlb
cmp
stos
ss
inc
in
das
into
xchg
add
lods
cmpsb
fcoml
mov
addr16
sub
add
jb
in
aas
and
inc
mov
insl
aad
pop
jmp
mov
sbbb
mov
xchg
psubusw
adc
std
jge
adc
loop
pop
fstps
test
xor
mov
inc
xor
mov
cld
cmp
movq
dec
xchg
add
jae
enter
pop
mov
dec
jecxz
sbbl
xchg
into
outsl
push
aad
leave
mov
orb
in
mov
call
mov
xor
nop
pop
inc
adc
fisttpll
xor
inc
cmc
pusha
fs
xchg
int3
in
add
arpl
fnstcw
sbb
roll
ss
scas
in
fs
mov
mov
int
stc
mov
in
adcl
jp
ret
mov
notl
lods
and
pop
es
loopne
ficomps
int3
mov
mov
xor
pop
or
clc
icebp
test
gs
mov
push
scas
das
dec
jne
sbb
aas
mov
mov
dec
or
adc
adc
aam
sahf
fadds
nop
hlt
arpl
add
mov
insl
mov
jg
andb
mov
stos
cmp
xchg
lret
adc
mov
shr
add
cmp
hlt
pop
push
xchg
shll
inc
int3
add
mov
test
jbe
sbb
mov
or
rcl
mov
add
shll
pop
ret
inc
xchg
jbe
bound
cld
add
fildl
cmpb
jp
push
sti
mov
and
leave
mov
outsb
sbb
sti
jns
bound
xlat
fidivrs
stos
loope
or
out
jo
xor
sbb
arpl
clc
jne
movsl
fsub
push
shll
fstl
xchg
test
jl
or
add
rolb
imul
addr16
fnstenv
jbe
jg
inc
push
push
pop
shlb
push
cmp
jge
jp
outsb
xchg
fldt
xchg
push
jne
push
das
testl
jl
sbb
mov
cmpsb
jle
dec
movsb
insl
inc
inc
das
pop
add
jae
adc
in
lret
cli
jbe
inc
cmpsb
mov
pop
add
lret
cmc
lahf
lahf
push
pop
and
mov
imul
mov
xor
les
and
repnz
repnz
jecxz
loop
das
pop
mov
push
cmp
rcl
or
in
test
jmp
cmp
ljmp
pop
je
lahf
lahf
push
mov
jbe
adc
jp
fwait
sti
icebp
and
or
lds
mov
jno
mov
jmp
adc
outsb
cli
mov
jge
shrl
xchg
mov
and
adc
test
and
pop
outsl
jmp
int
and
dec
cs
mov
cmp
pop
and
je
mov
sub
enter
mov
test
rcll
mov
mov
imul
jp
sti
inc
pop
dec
dec
or
push
aam
icebp
dec
leave
add
data16
adc
pop
mov
inc
data16
imul
jecxz
loope
mov
sub
push
stos
xchg
or
xchg
ja
or
cwtl
mov
cld
aaa
mov
int3
int3
mov
mov
push
push
cmp
stos
pop
jbe
cmp
imul
inc
cmp
adc
mov
cmpsl
nop
ret
pop
mov
mov
jns
mov
xlat
push
cmp
pop
add
pop
push
inc
int
add
cmp
pop
or
ficoms
add
outsl
mov
xlat
pop
jno
jle
test
test
mov
js
das
pop
imul
lret
jmp
xchg
pop
mov
mov
xchg
sti
xchg
jmp
xor
jb
sbb
xor
and
test
ljmp
dec
xchg
dec
fimull
or
mov
xchg
lahf
cmpb
cmc
in
int3
loop
cmp
addl
mov
xor
imul
jecxz
inc
inc
movsl
jne
out
push
ja
push
mov
lods
rcrl
ds
xchg
mov
xlat
in
pop
xlat
jp
sbb
xor
sbb
mov
insl
mov
push
lods
mov
push
movsb
inc
or
cmc
mov
cmp
ja
rcrb
or
push
mov
data16
add
out
fwait
scas
pop
mov
mov
aaa
popa
cltd
and
push
daa
lods
in
jmp
cmp
pusha
push
jo
inc
daa
cwtl
jo
push
nop
mov
push
stos
inc
mov
push
loop
int
fbld
jmp
vpcomq
das
movl
ss
jl
rorl
popf
outsl
fmul
cs
add
push
cwtl
je
int
and
leave
cmp
out
je,pn
jae
in
xor
sub
lcall
cwtl
xchg
adc
inc
or
push
mov
insl
jnp
cmc
lcall
lret
outsl
sbb
pop
add
sub
out
ret
xor
mov
mov
and
test
mov
repz
xchg
adc
xchg
pop
push
xchg
cmp
fnstenv
popa
fisttpll
std
pop
popa
mov
notl
push
lret
ja
pop
int
push
cwtl
rol
mov
fldt
xor
sub
test
add
mov
jge
sub
les
cltd
pop
sbb
push
in
insb
mov
cmp
scas
dec
repnz
push
insb
fnstenv
lahf
jecxz
repnz
mov
and
pop
pop
sbb
cwtl
test
loop
and
cltd
mov
push
iret
fisttpll
jae
xlat
fadds
imul
cmp
out
repz
rcl
cltd
pop
sbb
mov
fwait
mov
dec
inc
add
or
dec
or
dec
addr16
inc
pop
cltd
lcall
and
mov
cmp
rolb
insl
popa
mov
add
xchg
jmp
push
dec
inc
les
aas
nop
aam
shlb
mov
lock
inc
sbb
xor
rcll
loope
dec
or
mov
xchg
mov
pop
rcrl
pushf
lock
bound
mov
inc
cltd
outsb
and
mov
js
xor
sbb
dec
dec
adc
mov
jle
jmp
and
movsl
inc
pop
dec
dec
in
push
aas
lahf
xor
cmpsl
mov
sbb
aam
ja
leave
sti
mov
fdivs
pop
lahf
sbb
and
out
addr16
push
xor
call
or
inc
lret
sbb
push
stc
add
or
sbb
arpl
sbb
cmc
jae
bound
aam
daa
or
jno
or
stos
mov
inc
xor
xor
cmc
lret
daa
jge
lret
imull
mov
add
in
cmpsb
adc
ror
cmc
push
push
cwtl
mov
test
xor
ficoml
es
adc
xor
test
xor
sbb
shrl
and
fidivs
push
iret
clc
fisubrl
int3
jno
adc
inc
dec
stos
ja
fiaddl
les
pop
xchg
or
lods
cli
jg
into
jne
or
test
mov
dec
out
push
xchg
cld
testb
pop
loop
pop
dec
enter
cmc
cli
jns
mov
cld
popa
shrb
dec
jb
mov
lods
push
sbb
imul
fsubs
or
out
in
cmp
outsl
int
and
hlt
stos
lock
sti
push
cmp
pop
out
jecxz
mov
popf
mov
push
dec
out
in
jne
xchg
mov
jnp
pop
adc
xchg
cmc
fwait
cmp
jge
xor
jae
add
repnz
shlb
inc
jno
pop
into
jae
xadd
pop
adc
sub
and
push
and
dec
lock
dec
test
pop
adc
xchg
inc
mov
add
push
stc
pusha
stos
mov
data16
ljmp
and
fistpl
fiaddl
xchg
inc
cld
pop
jo
repz
xchg
push
dec
sub
mov
or
dec
loop
leave
je
pop
fadds
lret
and
mov
into
pop
push
sub
je
cltd
dec
push
dec
sbb
mov
popa
scas
leave
jbe
in
add
push
inc
sbb
test
xchg
inc
inc
push
int
movsb
rol
cmpsl
std
jns
xchg
mov
xor
pop
inc
mov
xchg
ds
cmp
ds
gs
sub
int3
push
lret
leave
in
out
call
aas
ret
adc
adc
add
sub
movsl
dec
aas
xchg
rcrl
and
or
popf
or
repz
rcll
pop
mov
aad
lea
inc
jecxz
jae
adc
out
sub
mov
xchg
push
pop
dec
inc
and
movsl
addb
sbb
push
inc
inc
aam
loopne
lock
jnp
enter
scas
cmp
or
mov
sar
cld
dec
insl
das
xlat
push
pop
jo
jb
sbbl
and
mov
incl
rcrl
mov
fstpt
inc
mov
sahf
jle
push
inc
enter
xchg
xchg
addr16
dec
loopne
inc
mov
fs
test
fistpl
inc
and
mov
xchg
cmc
push
mov
inc
mov
fs
and
std
cli
xlat
and
insb
and
imul
jns
call
push
lret
jmp
pop
mov
sbb
sub
pop
pop
jecxz
push
xchg
mov
aam
cwtl
xor
in
and
cmp
dec
jg
nop
pop
pop
ret
andb
mov
outsb
and
gs
fistl
mov
sbb
mov
je
clc
call
sub
sarl
das
sub
out
add
shlb
pop
jno
jne
adc
adc
push
ffree
or
loope
test
cmp
mov
cmc
push
out
push
es
jb
dec
fdivs
dec
or
inc
cltd
add
out
outsl
out
lods
lahf
cmpsb
mov
incb
hlt
test
cmp
cli
and
dec
mov
inc
aad
inc
inc
inc
push
mov
call
mov
sbb
fmulp
dec
fiaddl
mov
jp
and
mov
lret
pop
jbe
xchg
xor
pop
xor
mov
inc
sti
in
cmpl
les
sahf
in
test
xor
daa
sbb
fisttpl
test
test
das
mov
hlt
pop
cmp
scas
test
ret
mov
lods
mov
mov
pop
or
xorl
into
out
jae
jb
sbb
cmp
inc
lret
je
jle
ds
mov
aaa
sbb
push
in
pextrw
pop
cmp
int
xchg
aad
fwait
or
stos
push
and
cmp
adc
pop
test
into
add
mov
adc
fisttps
push
cs
jge
xchg
addr16
sbbb
fadds
push
mov
ja
inc
aam
aas
nop
rolb
lods
add
stos
das
cmp
sub
mov
aas
dec
sbb
ret
in
and
movsb
das
stc
cmp
sub
or
rcl
popa
jne
pop
xor
mov
popa
sub
std
es
dec
cld
movsl
bound
xchg
fisubrl
cmpb
int
xchg
xor
jle
fisttps
fs
es
xor
xchg
pop
adc
hlt
dec
shl
and
sub
jo
dec
add
adc
xor
inc
dec
in
imul
lods
sbb
sub
inc
add
and
xchg
sbb
xchg
insb
int3
scas
push
inc
sbb
xchg
cmp
xor
jne
jno
xchg
pop
lock
push
cmp
mov
cmp
call
cmp
lret
cmp
mov
or
adc
test
add
pushf
push
orb
movsl
test
in
push
nop
dec
and
mov
out
inc
adc
jae
std
sbb
mov
das
add
rorb
xchg
mov
fucomi
jo
mov
add
pusha
dec
aam
lret
outsb
cmp
mov
test
xchg
fsts
sti
scas
adc
sub
xchg
imul
fistps
add
mov
in
pop
jecxz
dec
dec
xchg
jbe
mov
lret
pop
adc
arpl
lods
ljmp
mov
cmp
sub
paddusb
sahf
shrb
add
mov
fidivrl
into
mov
jg
loope
ss
push
xchg
ret
sub
arpl
popf
inc
inc
scas
lret
mov
xchg
mov
add
das
imulb
xchg
movsb
das
ds
jae
and
nop
rcrl
mov
inc
jge
or
or
fsubl
mov
test
enter
aaa
jbe
subb
lds
mov
xor
adcb
and
xchg
pop
or
push
jno
inc
jne
mov
pop
fisttpl
mov
mov
aad
sbb
mov
dec
sbb
and
adc
xchg
data16
mov
in
pmullw
lea
lods
jecxz
sbb
stc
cmp
lds
scas
add
fisubrl
xchg
sbb
add
mov
test
sbb
adc
rclb
sbb
sub
fnstsw
mov
mov
mov
movsl
in
enter
addr16
fs
push
and
and
add
xchg
js
out
mov
bound
add
pop
dec
popf
adc
in
mov
dec
leave
cmpsb
lret
add
into
dec
das
scas
xor
pop
les
push
or
cmovb
jo
mov
lock
aas
and
mov
incl
das
add
xor
xor
outsb
mov
movsb
mov
add
sub
enter
pop
jle
push
xor
mov
xchg
rcrl
mov
test
push
dec
dec
loopne
mov
mov
and
out
xchg
lret
jp
adc
xchg
int3
sbb
add
es
xlat
mov
sti
ret
insb
inc
inc
imul
push
xchg
iret
fnstsw
fldt
insl
addr16
push
xor
fucom
sarb
in
bound
fwait
xchg
mov
jb
and
mov
xchg
mov
ficoml
jl
icebp
dec
push
sti
imul
sbb
subb
dec
cmp
jmp
cmp
xor
arpl
adc
dec
imul
out
cmp
or
outsl
movsb
mov
clc
cltd
sub
xchg
jmp
pop
idivb
adc
icebp
jecxz
pop
out
jno
cmpsl
daa
mov
loopne
or
cmp
push
mov
jae
or
add
in
inc
sbbl
cmp
jb
ja
adc
push
arpl
orl
adc
add
jnp
cmp
test
ret
sarl
adc
sbb
inc
rcl
and
outsb
popf
mov
dec
sub
inc
std
cli
lret
jge
enter
into
adc
add
push
iret
fucomi
cltd
xchg
aas
cmp
pop
in
jl
int
xlat
and
icebp
pop
negl
sarb
dec
in
aaa
cmp
mov
xor
mov
orl
jmp
ss
ljmp
cmc
or
inc
sti
inc
xchg
xchg
es
add
incl
lds
arpl
jmp
rorb
mov
mov
pop
pop
test
mov
adc
out
xlat
cmp
js
sub
and
mov
cmpsl
pop
ljmp
pop
mov
fwait
mov
aaa
popa
ds
movsl
mov
stos
push
ljmp
dec
add
sub
jae
adc
jb
xor
shrb
xor
inc
cmp
jns
pop
add
out
imul
jl
push
lds
sbb
adc
dec
xchg
or
adcl
in
sahf
jmp
cld
addr16
jg
clc
cltd
mov
mov
sbb
in
scas
pop
mov
out
cmp
out
cmp
push
push
mov
vunpckhps
stos
mov
mov
inc
sbb
xor
mov
movsl
pop
push
pop
xchg
inc
pop
pop
and
mov
xchg
adc
out
add
or
inc
adc
lds
out
jo
cmp
cltd
xchg
je
data16
fs
push
dec
and
cmp
dec
jp
sti
or
daa
inc
xor
push
cli
jg
add
loopne
fucomp
in
sbb
insb
jb
and
and
jle
pop
daa
xor
shrl
xor
iret
outsb
sub
push
sar
mov
mov
cmp
mov
cmpsl
lods
mov
out
sbb
adc
es
je
push
rsm
out
xor
jp,pt
mov
pop
xchg
lahf
pop
and
adc
faddl
and
nop
test
les
inc
imull
mov
outsl
add
fsubrl
sarl
sahf
cli
inc
repnz
xchg
mov
push
aas
adc
add
sbb
ljmp
mov
divb
xor
lods
lcall
adcl
mov
cmpsl
add
fistps
lea
in
cwtl
jns
scas
sbb
stc
mov
mov
mov
rolb
mov
mov
sub
mov
leave
aas
sub
pushf
mov
sbb
jno
cmpsl
and
stos
push
jmp
push
sub
lea
repz
data16
pop
or
out
leave
es
lcall
les
lahf
jno
scas
in
mov
loop
imul
xchg
mov
xchg
out
insb
jge
shll
jmp
ret
rorb
mov
notl
mov
outsb
mov
adc
add
mov
jecxz
mov
pop
pushf
cmpb
push
xchg
pop
mov
lret
mov
fisubrl
push
cmp
mov
cmpl
mov
jp
adc
out
cmp
and
adc
add
int3
cltd
sub
sbb
jno
cmp
lds
ljmp
repnz
call
xchg
dec
sub
sahf
pop
sahf
mov
and
dec
andb
aam
mov
adc
rcr
add
mov
hlt
mov
shlb
jp
mov
int3
jg
mov
adc
xchg
xor
mov
pushf
jge
repnz
into
pop
cmp
inc
pop
les
xlat
push
outsb
mov
and
lret
mov
ja
fmuls
and
jns
jne
lret
lea
sbbl
adc
stc
xorl
jns
loope
mov
lods
adc
ret
test
or
adc
inc
inc
adc
fldl
jg
mov
push
fs
mov
in
push
push
push
leave
jl
mov
xor
pushf
loope
fs
lret
lds
sbb
sub
xchg
mov
scas
xor
ficomps
jne
lahf
push
das
cmp
fs
push
lods
mov
and
ret
out
mov
dec
pop
lock
xchg
xchg
fiaddl
fistl
nop
and
je
test
xchg
ljmp
mov
sbb
xor
xchg
mov
into
mov
push
mov
mov
outsb
lods
cmp
and
fsin
jnp
or
inc
and
pop
out
or
and
mov
loope
cmp
add
cmp
jge
push
mov
sub
lock
ja
pop
les
push
xchg
or
outsb
sbb
fsubs
jo
hlt
mov
and
lods
dec
push
mov
jno
aad
repz
adc
inc
repnz
sbb
add
push
or
mov
fidivl
lea
popa
sub
xchg
ss
sti
add
mov
out
in
or
push
sbb
jp
jbe
sub
push
les
mov
mov
and
xor
mov
sahf
mov
sbb
xor
pop
push
pop
xor
js
push
lahf
mov
in
cmp
xor
adc
push
lahf
outsb
cs
das
or
in
xor
push
dec
dec
pop
cld
add
shrl
push
popf
jmp
ret
cltd
out
xchg
xchg
xchg
sbb
sti
sbb
mov
mov
jo
ret
bound
repz
push
mov
sbb
xor
pop
pop
mov
sbb
sub
pop
push
push
out
out
pop
xchg
push
adc
adc
sub
pusha
loop
mov
lcall
cmp
or
sbb
jnp
js
dec
movsl
sbb
jmp
cmpl
insb
push
adc
rcrb
mov
and
sbb
push
cli
jle
test
xor
xchg
cwtl
xor
fldenv
dec
mov
xor
aas
test
sbb
and
sbb
pushf
cmp
test
or
mov
loopne
inc
jo
cmc
int3
outsb
les
mov
adc
pop
sbb
incl
in
cmp
jbe
xchg
push
add
dec
jae
dec
pushf
out
lea
aaa
loopne
push
push
fs
dec
add
or
andb
jmp
pushf
mov
leave
test
add
fsubs
or
addb
adc
ss
lds
dec
jne
in
gs
sbb
clc
mov
sub
into
cwtl
jne
mov
out
out
mov
inc
ja
sti
enter
push
or
jmp
aaa
test
mov
cli
int3
mov
mov
xor
mov
fimull
sbb
add
inc
in
sahf
pop
loop
pusha
mov
shll
outsb
xchg
jg
add
loop
insb
pop
pop
lods
mov
outsl
enter
jbe
clc
ss
mov
pop
adc
in
lahf
aam
sub
sarb
push
jle
outsb
dec
cmp
out
inc
out
popa
into
sbb
mov
out
mov
sub
push
inc
mov
and
add
xor
jg
jmp
mov
inc
mov
mov
popa
jns
cmp
and
int
mov
pop
push
cli
int3
mov
int3
ja
mov
jne
pop
jp
mov
sbb
andb
or
mov
mov
lock
in
xor
and
xchg
mov
or
fsubrp
mov
jmp
adc
mov
data16
icebp
dec
pop
jg
xor
enter
sub
and
sbbb
es
scas
das
jl
push
sahf
aas
and
push
out
fldl
sahf
aam
movsl
sbb
push
mov
popf
daa
iret
fucom
push
mov
mov
out
and
mov
fmul
push
xchg
cmp
adc
mul
xor
dec
pop
jae
gs
dec
and
xchg
inc
shll
in
iret
jb
lds
out
inc
jo
loope
shrb
imul
out
movsl
lret
insb
push
fdivr
pop
pushf
arpl
and
fwait
leave
or
and
pop
jb
jno
mov
dec
jp
fbld
lea
enter
adc
mov
mov
es
add
cltd
cltd
das
cmpsl
xchg
inc
shl
push
xorb
and
lret
pop
adc
repnz
mov
and
fcmovnu
xor
jae
pop
ds
stc
dec
lock
out
cmp
pop
xchg
cmc
mov
pop
inc
je
call
and
lret
add
arpl
inc
jns
sbb
xor
jns
orb
js
dec
cmp
adc
sub
inc
sub
clc
cmpsl
faddl
pop
push
mov
ret
cmp
jae
inc
or
out
xor
popf
pshufw
in
and
push
xchg
into
xchg
into
loop
mov
pop
inc
pop
xchg
cmp
and
mov
loopne
scas
sub
aad
orl
jle
xor
js
pusha
xor
mov
in
push
mov
mov
clc
jns
push
lahf
xor
and
dec
adc
pop
or
subb
lret
inc
jbe
xchg
or
and
mov
in
xor
xchg
test
aad
push
mov
dec
and
jle
mov
mov
pop
lods
adcl
aaa
loop
sub
xlat
push
dec
mov
fs
pop
lods
push
dec
outsb
adc
pop
ja
cmp
push
jp
pop
fwait
push
cmp
out
sub
xor
das
push
cmpsl
ljmp
add
je
out
fcomi
mov
pushf
test
das
outsb
xor
and
sarb
mov
jmp
xchg
mov
push
fidivrs
jg
aad
and
cmc
mov
iret
sub
mov
loop
sbb
lret
orb
imul
mov
jmp
push
xor
inc
out
mov
pop
pop
mov
xchg
xchg
repnz
sbb
dec
adc
pop
nop
and
lcall
lret
jg
jae
loopne
mov
xchg
inc
lock
pop
bound
aad
mov
mov
push
cs
jno
iret
aam
int3
nop
dec
loope
pop
into
and
xor
cs
repnz
dec
fistpl
sarl
cmp
scas
xor
jle
rcl
push
sbb
mov
stos
push
jno
sbb
sub
test
int
and
inc
call
jmp
push
rcr
adc
mov
xchg
push
push
loop
ds
pop
push
cli
out
jmp
repz
test
std
and
sbb
inc
in
mov
insl
outsl
mov
push
dec
stos
cmp
lods
movsb
icebp
cld
dec
cmp
and
fcos
ret
insb
cmpsl
sub
repnz
and
stos
pusha
stos
test
add
call
loopne
fcomps
push
cmpsb
pop
pop
mov
icebp
jp
movsl
hlt
inc
jbe
xchg
cmp
jne
aas
cmpsb
xorb
lods
fwait
pop
sbb
lret
loop
push
mov
fnsave
jecxz
fcmovb
adc
mov
xor
je
popf
xchg
push
cld
pop
fs
enter
add
ja
pop
sub
and
mov
popf
lea
add
jnp
inc
fs
icebp
outsl
lret
imul
push
jns
dec
ret
dec
adc
cltd
cwtl
dec
or
adc
adc
pusha
dec
xor
loopne
mov
cmc
and
jbe
mov
repnz
cmp
in
repnz
add
out
sarb
je
jecxz
add
xchg
lods
jecxz
adc
ret
cmp
into
xchg
ret
mov
pop
shll
inc
and
dec
sti
lds
sub
bound
loop
xor
scas
fists
sbb
cmpsb
pop
call
sarl
movsl
add
push
into
movsb
mov
les
jecxz
pop
mov
ficoml
xchg
push
or
rolb
dec
adc
or
aaa
sub
nop
stos
sbb
pop
pushf
inc
shll
mov
cmp
mov
cli
shlb
jle
mov
bound
xor
outsb
popa
ds
shrb
test
jno
push
cli
fmull
cmp
mov
cld
push
pop
dec
js
pop
loopne
xchg
adc
add
jns
mov
imul
fwait
mov
dec
xchg
in
leave
sahf
stos
insl
mov
adc
sbb
ss
push
jl
cld
in
std
mov
mov
stc
sub
ret
push
inc
gs
insb
daa
sub
inc
ffree
mov
adc
inc
jnp
pop
mov
dec
insl
sbb
insl
cmp
push
sub
cmc
xor
adc
push
push
dec
adc
adc
ret
dec
cmc
es
mov
testl
lock
jmp
cmp
in
or
push
fstl
gs
inc
sbb
movsb
stos
jo
mov
jmp
lea
ss
push
inc
shrl
xchg
mov
and
decl
add
pop
add
hlt
push
jns
push
sbb
imul
xor
shl
stc
fldcw
mov
lcall
push
sub
pop
fstl
and
sub
movsl
xchg
test
or
addr16
fidivrs
mov
outsb
jnp
mov
addl
push
cld
scas
sbb
lods
cmp
dec
inc
push
test
xchg
ret
in
rcrl
arpl
fsts
cld
out
fnsave
dec
fstps
cmp
inc
jno
jl
jg
xlat
dec
cltd
xlat
scas
cmp
das
cmp
negl
dec
xchg
test
jge
sub
push
call
jecxz
pop
andl
add
mov
jbe
xchg
cmp
out
popf
shl
in
sub
fisttpl
dec
xor
push
adc
and
in
fadds
loope
mov
ljmp
pop
jle
int
test
jb
test
insb
leave
rorb
ret
dec
xchg
gs
pop
in
inc
je
sub
push
loop
mov
mov
test
xchg
rcrl
and
out
adc
aad
iret
and
andb
js
loope
xchg
pop
scas
pop
xchg
inc
sti
xchg
sub
int
outsb
xchg
dec
das
jmp
scas
add
loop
mov
push
scas
movsl
enter
emms
mov
xchg
movsl
ficompl
cmp
push
outsb
fsubp
add
mov
js
sub
ret
ds
mov
inc
dec
cwtl
push
and
push
aam
mov
mov
cltd
fisttps
scas
sub
clc
orl
mov
jecxz
lea
and
jmp
or
mov
loope
call
sub
or
inc
pop
dec
sti
push
or
adc
daa
leave
or
test
cmp
in
test
fwait
mov
das
pop
imull
cli
and
movsl
or
or
js
sbb
cmp
stc
xlat
jecxz
lret
adc
pop
shrl
push
dec
jo
addr16
add
push
pop
je
pushf
inc
fwait
iret
shlb
dec
mov
mov
mov
xchg
stos
lock
shrb
adc
pusha
cmp
out
adc
outsb
ss
aad
mov
xor
cmc
adc
dec
jae
fcmovb
cmpb
repz
nop
add
or
ljmp
stos
imul
push
cli
add
sbb
jecxz
scas
scas
xlat
ret
xchg
test
fcoml
mov
fistl
push
jmp
inc
aad
sbb
mov
sub
cli
lea
aad
aaa
lcall
lret
lods
xor
xchg
jge
lods
ss
push
adc
arpl
cli
test
cmc
lea
mov
leave
push
jg
clc
stc
jge
sub
jp
sarl
sbb
cmpsb
mov
pop
xchg
push
adc
mov
jle
pop
dec
adc
daa
jae
imul
mov
lods
mov
sbb
outsl
push
push
data16
inc
xor
ja
mov
test
stc
xchg
aas
ss
mov
xchg
and
jae
pop
mov
jbe
out
pop
insb
sbb
ja
mov
in
inc
out
repnz
and
xchg
pushf
addb
cli
fistpl
fwait
sbb
int3
mov
outsl
fcomip
dec
jnp
add
xchg
sub
cli
inc
inc
rcrl
mov
dec
or
adc
and
mov
repz
mov
xor
dec
aad
jmp
fdivrs
popf
sub
out
and
push
adcl
adc
fimull
test
push
inc
imul
fadds
jne
repz
fldl
push
pop
adc
pop
xchg
jle
arpl
xor
cs
mov
xor
pusha
leave
test
das
stc
jae
sbb
and
cmp
sar
into
rorb
mov
xor
xor
mov
imul
out
icebp
adc
in
or
dec
bound
mov
or
cmp
sbb
enter
adc
push
mov
std
mov
sahf
cmc
lea
add
jp
ret
addl
jo
lret
mov
jg
cltd
pop
pop
push
push
xchg
dec
xor
repz
push
jns
lcall
insb
aad
inc
mov
or
pop
rclb
cwtl
data16
addr16
jne
xor
xchg
xchg
adc
idivl
sbb
mov
sbb
scas
adc
mov
std
stos
mov
fbld
ret
xchg
dec
fisubl
sbb
sbb
idiv
mov
push
sarl
xchg
or
lcall
pop
or
mov
lcall
dec
call
int
test
inc
das
call
sbb
sub
test
clc
xchg
test
mov
jl
gs
or
xor
je
lods
xchg
testl
es
cmp
jb
adc
and
ret
pop
fs
orb
ret
jecxz
adc
pop
jmp
sbb
dec
sbb
push
sti
xchg
mov
xor
xchg
or
fldcw
pop
lods
or
jl
fiaddl
notb
loopne
sub
mov
pop
mov
les
pop
jo
xor
mov
int
in
movsb
cmp
sub
xor
mov
add
sbb
mov
inc
push
hlt
je
mov
or
ss
dec
xor
popa
xor
and
pop
jb
arpl
push
dec
movsb
xor
dec
stos
insl
jp
push
test
or
fs
loopne
movl
pop
test
or
lret
out
leave
adc
xor
loopne
aam
xor
enter
jmp
mov
test
and
sahf
mov
divl
cmp
sub
sbb
mov
mov
pop
xor
scas
das
mov
sbb
out
out
pop
xchg
mov
adc
arpl
js
dec
imull
mov
xor
push
sub
cmp
adc
out
xor
or
sub
in
shll
aad
js
mov
enter
cmp
mov
jmp
nop
sub
test
adc
clc
or
sbb
sbb
lahf
test
movsl
add
shr
sub
repz
cwtl
xor
dec
sarb
frstor
mov
in
dec
cmp
jle
pop
js
mov
add
sbb
ds
aad
dec
pushf
add
push
add
mov
push
adc
mov
fstpl
lahf
insl
inc
push
les
in
fcmovb
popf
push
insb
enter
xlat
dec
xchg
mov
cmp
add
loope
loopne
jmp
mov
cwtl
cs
lea
in
leave
in
hlt
cmp
icebp
pop
ret
sarl
mov
jns
inc
or
add
es
fisubs
rorb
fs
ret
fbld
shrb
mov
fnstcw
jmp
ror
push
push
inc
pop
adc
stc
jb
rorl
leave
ret
mov
add
test
push
mov
xchg
sahf
ret
insb
xchg
ss
mov
cmp
rcrb
mov
pusha
repz
in
pop
repz
or
pop
nop
in
in
nop
sti
xor
outsb
push
jle
sbb
xchg
jbe
inc
dec
or
je
pop
xor
and
das
fldenv
int
in
add
pop
pop
adc
pop
push
push
mov
cmp
or
stos
and
pop
xor
or
ffreep
addr16
jmp
pushf
push
add
xor
ljmp
inc
dec
push
in
flds
jl
sub
jnp
pop
shrl
hlt
int3
inc
fidivrs
pand
imul
xchg
xorb
push
sub
ds
push
jno
mov
mov
je
lret
pop
pop
jl
mov
jae
xchg
mov
mov
stos
dec
mov
add
add
sub
sub
nop
out
push
push
pop
loope
xchg
fdivs
fimuls
loopne
mov
bound
jmp
xor
ljmp
pusha
addl
enter
lock
cld
sub
dec
dec
push
push
jnp
mov
ds
xorb
adc
int3
push
movsl
mov
push
xchg
insl
rclb
mov
add
or
jae
mov
mov
stc
es
into
or
fsubs
push
push
insl
jp
cmp
pusha
inc
xchg
icebp
adcl
xchg
inc
arpl
adc
test
cld
mov
sub
in
cmp
movsl
out
ret
xor
sub
inc
push
ss
add
mov
jne
inc
fsubp
adcl
pop
inc
testb
cmp
test
sub
sub
cmp
mov
lock
mov
loopne
sbb
std
sub
jae
sbb
mov
push
xor
outsl
xorl
inc
mov
incl
pop
rcrb
adc
push
out
imul
pop
movl
ret
push
jo
jb
lock
daa
cli
movsb
push
stc
push
add
cld
adc
xor
cmp
inc
push
add
or
loope
jl
cmpsl
or
mov
sbb
les
jno
movb
jmp
pop
xlat
jl
dec
pushf
jmp
jns
or
fmul
in
aad
mov
fcmovne
mov
jge
xchg
adc
das
fisubl
aad
enter
push
jle
push
out
push
rclb
xchg
dec
push
xchg
lcall
sti
mov
filds
arpl
jnp
dec
cltd
inc
lods
mov
imul
std
xchg
mov
dec
jae
push
pop
and
or
cmpsb
sub
out
sbb
ds
xchg
mov
inc
mov
sbb
xor
adc
xchg
pop
xchg
sub
inc
jecxz
mov
adc
int3
and
cmp
inc
aad
mov
movsl
inc
aaa
mulb
sbb
iret
je
jb
pop
jno
jae
lret
notb
fdivrl
jl
out
addr16
lahf
xchg
sbb
test
xchg
arpl
add
push
xor
aas
aam
subb
mov
data16
mov
pop
and
fs
cmpsl
enter
sub
imul
test
jbe
rcrb
lods
les
sbb
aad
mov
xchg
loop
testb
push
movsl
rcrl
popf
daa
jmp
jmp
outsl
sub
sub
jp
push
or
daa
dec
push
ss
fstl
and
cmpsl
xor
and
dec
xchg
notb
fcmovnbe
lods
mov
mov
and
mov
popa
fldl
mov
mov
sbb
jnp
sbb
pop
pop
loope
cmc
or
pop
sub
mov
inc
xchg
scas
mov
add
mov
push
push
xchg
mov
mov
pop
jns
enter
push
mov
adc
es
leave
movsb
cs
and
or
xor
aaa
std
mov
and
xor
ret
lds
cmpsl
divb
add
mov
rclb
and
rcrb
jmp
sub
aas
scas
jp
sub
lret
in
mov
call
and
mov
lods
inc
test
inc
das
les
add
movswl
mov
mov
or
test
lret
and
add
push
inc
into
sarl
ljmp
mov
mov
xchg
repz
xor
pop
xor
pusha
lcall
sub
add
sbb
push
clc
insl
imul
pop
out
imul
add
mov
xchg
push
adc
lock
adc
push
or
icebp
in
jnp
add
xor
shl
mov
cmpsl
in
fmul
in
pop
cwtl
rol
mov
sti
jecxz
pop
adc
push
mov
into
es
mov
pop
stos
fldcw
ret
mov
nop
mov
cmp
das
jp
mov
nop
push
or
test
and
mov
cmpsb
lret
pop
jae
lret
and
cld
aaa
jge
shld
and
imul
push
xlat
pop
push
in
xchg
in
or
mov
cmp
je
or
jmp
test
xlat
hlt
cmp
mov
aam
cmp
mov
popf
xlat
rcl
fwait
or
je
or
add
xchg
xchg
outsl
test
outsw
jae
aas
mov
adc
cmp
inc
pop
jae
xor
cmp
mov
repnz
and
mov
ljmp
ds
aad
sub
xchg
mov
out
mov
addr16
push
lret
jle
insb
xchg
scas
pop
pushf
outsl
push
popa
and
into
sub
inc
dec
test
dec
sbb
mov
popa
clc
aaa
dec
pusha
add
add
sub
push
mov
fldln2
pop
xchg
aad
jno
fwait
outsb
les
mov
lcall
das
pop
or
dec
int3
cmp
add
dec
fisubs
mov
sub
xrelease
adc
popw
insb
sub
or
mov
mov
jecxz
ror
adc
jle
lock
and
fs
dec
sbb
push
mov
movl
arpl
cmp
jb
inc
jp
aad
jl
sti
sahf
cwtl
xor
cwtl
ljmp
cmc
cld
mov
aam
test
cltd
out
mov
int3
sbb
cmp
inc
and
mov
xor
rcrl
push
mov
dec
push
loope
or
movsb
std
xor
mov
insl
hlt
dec
sbb
dec
jl
fiaddl
sub
mov
or
hlt
push
rcll
and
xor
ja
loope
mov
mov
out
xor
lret
std
push
jb
dec
inc
pcmpeqd
cmp
mov
inc
movsl
dec
jmp
out
das
xchg
cmp
adcb
jg
push
aam
dec
sbb
xor
test
cmp
push
xlat
shlb
loop
sub
cmp
xchg
pusha
mov
repz
inc
adc
cltd
enter
add
and
mov
dec
push
cmp
cli
out
mov
in
xchg
jne
jb
in
inc
and
or
stos
gs
cmp
insl
pop
xorl
dec
mov
aaa
and
dec
jge
roll
mov
scas
and
insb
imull
xchg
and
jnp
pusha
cltd
and
push
inc
mov
int
jno
jbe
pop
cli
pop
pop
pop
or
das
cmp
push
ja
enter
mov
mov
into
add
sbb
lret
ss
jecxz
jg
lods
cli
pop
fldcw
adc
lods
push
jge
aas
fwait
jb
out
inc
pop
outsb
shrb
dec
pushf
dec
ja
adc
pop
cmp
mov
mov
xchg
shlb
sahf
jno
cmp
or
xor
call
repnz
inc
ss
add
fstl
pop
ds
loop
mov
jecxz
mov
fs
out
add
inc
xchg
add
push
dec
int3
cmpsl
movsl
leave
dec
and
inc
imul
leave
insb
out
mov
icebp
ljmp
sbb
push
mov
lahf
add
jne
cltd
fcoms
addr16
mov
jmp
mov
lahf
insb
and
xor
dec
pop
sbb
add
pop
ljmp
insl
mov
xor
jg
push
std
sbb
daa
movsl
int3
popa
in
jl
mov
xchg
mov
cmp
pushf
stos
das
leave
pop
add
mov
idivl
xchg
dec
shll
jmp
jae
loop
and
andb
cmp
stos
push
jp
mov
das
call
mov
cld
popf
lock
mov
jns
sub
das
or
adc
adc
cmp
ret
mov
scas
push
sub
sti
lock
dec
cmpsb
hlt
sbb
pop
dec
adc
xchg
mov
xor
jmp
xchg
adc
jnp
inc
jmp
ficoms
inc
pop
lret
rcrl
test
xchg
or
in
popf
pop
jecxz
push
xchg
xchg
dec
sbb
out
stc
cs
add
ret
sbb
testl
and
rcrb
push
fs
inc
xchg
push
cmp
cmp
data16
hlt
jmp
fs
ror
inc
or
or
aad
add
fwait
das
sbb
insl
loopne
add
lods
jnp
movsb
and
cmpsl
loope
in
insb
cmpsl
cmpsb
mov
sbb
leave
ret
add
mov
pop
int3
into
inc
push
push
and
jp
inc
imul
and
or
dec
aad
jae
jne
mov
adc
daa
push
mov
xor
ljmp
mov
das
xlat
dec
insb
pop
adc
pushf
in
les
sbb
gs
mov
sbb
xor
dec
inc
dec
cmpsl
pusha
scas
lret
cli
mov
lods
cltd
std
mov
inc
mov
scas
and
adc
and
in
test
in
mov
push
lcall
mov
ds
xorb
mov
andb
xor
bound
jmp
out
push
add
xchg
movsb
stc
mov
cmp
push
addr16
cmp
aas
jae
add
sbbl
in
out
pop
xor
pop
movsb
mov
fnstenv
and
adc
fisttpll
push
scas
and
shll
mov
imul
fists
xchg
stos
andb
fidivl
dec
mov
push
mov
mov
add
test
xchg
add
inc
test
sbb
mull
jbe
into
in
dec
pop
mov
aas
mov
xchg
imul
sub
cmp
adc
test
mov
sub
loopne
sbb
mov
loopne
cltd
jns
insb
mov
nop
shrl
push
jbe
dec
and
in
ss
inc
pop
mov
cmpsb
mov
cmp
imul
xchg
add
nop
dec
das
into
rorb
sub
sub
add
push
push
xor
mov
or
loop
push
icebp
mov
mov
xchg
ss
mov
xchg
adc
adc
mov
inc
lretw
out
and
cmp
or
push
sub
xchg
sub
xchg
aad
mov
push
fcoms
fiadds
mov
cmp
jo
sub
cmp
sub
test
xchg
jns
pop
icebp
sahf
repz
xchg
jg
in
jne
xchg
lods
test
arpl
stc
cwtl
or
pop
cmp
notl
xchg
pop
xchg
jo
mov
scas
pop
loop
rcll
repz
push
push
sti
push
dec
xchg
mov
sbb
adc
cs
jae
dec
mov
es
jns
stos
and
insb
inc
lahf
jge
scas
jp
mov
mov
inc
adc
jle
cs
test
push
mov
int3
pop
dec
pusha
adc
or
cmp
ret
cmpsl
std
sub
jno
ret
mov
adc
pop
or
or
or
out
sbb
mov
xor
mov
fcom
cmc
cmp
or
sub
data16
jl
aad
roll
in
out
cmpsb
inc
fs
dec
xor
push
jnp
cld
add
lods
repnz
pop
jp
adc
jb
push
or
shl
cmc
mov
cli
push
jl
cmp
pop
ss
mov
add
mov
adc
ljmp
and
leave
inc
and
lret
lea
movsb
andl
cmp
mov
and
stos
int3
sub
xchg
jmp
jg
mov
cmp
push
and
xor
pop
push
iret
into
pop
ljmp
xor
mov
dec
movsb
nop
pushl
jg
mov
xchg
mov
mulb
rorl
je
xor
imul
adc
adc
mov
mov
stos
ss
sbb
and
pop
push
add
loopne
mov
push
push
fdivrp
clc
dec
xor
incl
or
mov
mov
pop
inc
js
fbld
jae
aaa
out
push
sbb
xchg
sbb
push
xchg
jg
inc
mov
decl
cmpsl
cmp
clc
aas
sub
pop
push
xor
rcrb
mov
mov
xor
addr16
or
mov
mov
imul
or
sub
mov
notb
and
add
mov
shll
inc
cmpsb
mov
adc
cmpsl
in
out
stos
scas
fcom
xchg
jne
push
arpl
pop
jo
or
in
pop
loopne
repnz
dec
insl
stos
mov
hlt
addr16
imul
mov
data16
mov
xor
xchg
lahf
repnz
push
sub
aaa
push
xchg
inc
mov
adc
jecxz
adc
xlat
inc
adc
rcll
call
pop
cs
add
inc
xchg
or
jp
mov
call
mov
cwtl
push
mov
inc
movsb
push
out
out
int3
cmp
lret
jo
push
jecxz
rolb
cmp
cltd
fadds
sub
ret
ja
out
mov
push
shll
fldenv
fildl
stos
jns
ror
mov
add
add
js
loope
push
xor
jmp
add
mov
addl
push
ja
in
test
test
popf
adc
pop
lahf
sarl
push
jae
mov
jmp
scas
or
sbb
or
sbb
pop
mov
roll
push
in
scas
mov
xchg
inc
int3
mov
sub
mov
hlt
mov
sub
inc
dec
jnp
or
adc
bnd
pop
shlb
mov
cmp
push
push
jp
pop
ficomps
addr16
xchg
ds
cmpsl
fs
mov
mov
jbe
pop
repz
inc
insl
mov
add
into
stos
aad
lock
aam
mulb
hlt
leave
jmp
pop
add
lock
out
dec
inc
out
pusha
js
add
imul
jns
es
aas
out
je
out
ljmp
lcall
outsb
ljmp
pop
inc
clc
movsl
lock
cld
in
sti
jbe
ds
xchg
sbb
test
fs
fs
jbe
lahf
cmp
scas
repz
call
xchg
sub
sti
ds
push
xchg
stos
or
jns
in
mov
or
inc
cmp
ficompl
fdiv
test
mov
xchg
scas
lds
add
fadds
dec
sbb
ret
push
in
loope
popa
cltd
sub
mov
int
nop
lretw
push
cmpsl
imul
mov
or
push
jge
lea
mov
mov
push
mov
jecxz
mov
adc
dec
and
inc
ret
mov
ljmp
push
jnp
pop
mov
sbb
sub
movsl
stos
xor
cmp
pop
xor
data16
arpl
mov
stos
xorb
pop
cmp
fstl
cmp
arpl
xchg
outsl
out
inc
dec
mov
push
stos
pop
push
jb
mov
lods
cld
and
daa
insb
sti
sahf
mov
nop
lahf
hlt
mov
cmp
sarb
movq
jge
cmpsl
popa
inc
sub
mov
leave
xchg
or
fsts
pop
pop
sub
loope
mov
lock
loop
rcl
ljmp
mov
lcall
js
adc
loope
jo
test
pop
adc
xchg
xchg
in
and
scas
jo
jb
xlat
out
in
sub
pop
les
iret
push
sub
cld
cmp
fnsave
cli
inc
mov
push
adc
adc
pushf
adc
dec
jmp
cmp
jnp
mov
insb
iret
push
push
mov
jmp
add
or
and
xor
outsb
addb
dec
imul
out
lret
jge
push
mov
sarl
mov
sub
mov
or
adc
das
pop
ror
sbb
in
push
cmp
loopne
sti
out
mov
inc
fbstp
and
xchg
stc
outsl
fisubrs
cmp
or
fs
jp
into
js
add
ret
lods
xchg
mov
jbe
std
lods
aad
and
cmp
sbb
in
shll
ja
int3
mov
mov
cld
fadds
xchg
or
das
and
xor
loopne
cmp
jb
imul
inc
in
or
cmpsb
pop
xlat
in
out
jg
nop
cmp
movsb
ret
push
xor
jne
pop
dec
ret
jno
test
inc
shrb
push
pushf
cmp
sub
add
xchg
mov
data16
out
in
mov
cltd
mov
pop
sahf
out
push
jns
aad
cmp
stos
inc
ret
cmp
mov
add
testb
cmpsb
push
adc
inc
push
xchg
lret
jecxz
xlat
cmp
sub
jo
pushf
mov
mul
add
add
loop
inc
mov
and
rorb
test
mov
leave
in
dec
mov
cwtl
add
xchg
nop
scas
adc
sti
mov
or
cltd
mov
and
lret
mov
push
fsubr
cld
jecxz,pn
mov
leave
test
xor
addb
xor
adc
lahf
push
nop
fldt
in
cmp
loopne
jmp
jo
incl
xor
fmuls
xchg
aas
mov
xor
pusha
fucomi
sti
sub
fistpll
loopne
dec
cbtw
or
imulb
inc
and
push
leave
in
dec
ficompl
jle
cli
xchg
mov
sub
mov
dec
aad
les
mov
daa
pop
sub
pop
cmpb
ficoms
adc
push
data16
dec
cmp
and
insl
js
addr16
push
cmp
xchg
jg
jns
leave
and
out
addl
ja
loope
or
pop
mov
jmp
or
iret
inc
or
xor
lods
pop
aaa
sub
jb
xor
arpl
aad
jmp
jns
bound
aam
mov
xor
addr16
inc
stos
and
mov
insb
negl
mov
jmp
or
mov
out
and
mov
jae
rcrl
cmp
xor
dec
inc
and
xchg
loopne
mov
ret
cmpsb
inc
mov
push
lahf
pop
push
jp
data16
push
fwait
lcall
movsb
adc
mov
add
sti
jmp
in
imul
xor
adc
adc
push
mov
shll
fnstsw
inc
cmp
enter
in
mov
sub
lahf
fnstcw
ss
mov
xor
or
stos
and
pop
mov
fistpl
arpl
pop
or
loopne
add
lds
orb
iret
popf
in
mov
jno
nop
std
add
stc
pop
cmp
insb
repz
sub
fcompl
jecxz
scas
mov
dec
js
xchg
xor
lods
add
or
cwtl
in
cmp
sbb
cwtl
sbb
sbb
cmc
push
sub
mov
out
sbb
pop
pop
mov
push
push
stc
sbb
xlat
iret
add
inc
dec
stos
inc
ficompl
int3
test
inc
cmp
sbbb
ss
pop
hlt
addr16
add
pop
mov
jmp
mov
add
jns
nop
shrb
rorb
add
mov
jp
jnp
mov
int
xchg
out
inc
ja
xlat
pop
divb
into
add
mov
popa
adc
je
popf
push
and
jecxz
jge
mov
add
cmp
nop
inc
jne
sbbb
lods
lret
repz
lods
mov
pop
mov
jmp
xlat
test
push
mov
repz
mov
lods
sbb
inc
scas
shlb
inc
lds
aad
adc
push
fiaddl
xchg
lock
dec
mov
xchg
shlb
xchg
lret
pusha
mov
lock
loopne
lock
mov
xor
insl
cmp
push
push
data16
sbb
gs
addl
sbb
adc
cmp
ret
and
mov
cmc
add
add
sub
lea
cmp
clc
pop
mov
stos
aam
adc
mov
test
popf
sbbl
pusha
jno
rolb
rorl
jns
into
adc
mov
jge
push
adcb
pop
and
cli
loope
sarl
push
shlb
and
call
xor
testl
pop
out
and
insb
and
jne
mov
imul
dec
ret
in
pop
mov
xchg
sbb
mov
jb
arpl
stos
pusha
enter
adc
mov
sbb
push
xchg
jnp
fistpl
ret
xchg
cmpsb
jl
int
mov
and
aaa
dec
and
pop
jae
push
or
jns
stos
shll
mov
adc
in
dec
pusha
sti
jns
aad
fdivrl
cmpsb
out
bound
mov
jb
sub
lahf
cmc
rorb
jl
cmp
enter
pusha
adc
jecxz
leave
push
mov
gs
jge
jg
loope
jp
dec
pop
pop
sbb
adc
adc
nop
add
mov
add
or
push
mov
sbb
or
or
shlb
add
shlb
cmp
cmp
adc
cld
push
push
inc
sub
or
ret
ret
shlb
lods
push
fcomps
call
mov
jmp
mov
cmp
cwtl
lock
ja
ret
adc
clc
push
mov
sbb
js
or
lods
imul
and
jno
cli
ret
jns
inc
cwtd
call
cld
adc
popa
cmp
mov
push
xchg
daa
jle
mov
movsl
test
mov
test
push
add
xchg
sub
push
sub
push
int3
push
sbb
fiadds
fdiv
inc
mov
add
mov
pop
dec
pop
bound
jnp
mov
adc
hlt
js
out
pop
or
insb
arpl
repnz
in
imul
cmp
lret
lds
int
mov
mov
add
or
push
popf
movsb
sub
leave
dec
xchg
dec
stos
sub
jl,pt
insb
lods
mov
fcmovbe
aas
les
inc
mov
mov
fidivl
inc
mov
mov
sub
fnop
jnp
aaa
fcmovbe
pop
stc
pop
pop
add
add
xchg
leave
inc
fiaddl
jae
dec
sahf
fistl
fdivl
in
mov
xor
or
rorb
lret
adc
pop
repnz
pop
sub
dec
out
insb
cmp
pop
mov
add
into
in
imulb
pusha
jge
arpl
sbb
das
adc
pop
imul
into
insl
imulb
test
ror
lahf
jne
mov
test
mov
cmp
into
dec
andl
cs
stos
testl
jp
leave
dec
rcrl
push
mov
jno
mov
pop
shll
mov
mov
push
dec
mov
xchg
hlt
stos
xchg
mov
inc
sahf
fwait
add
sahf
pop
cmp
inc
leave
push
loop
dec
xor
std
data16
mov
cmpsb
aas
mov
jns
jmp
stos
outsb
jmp
jp
xor
xor
pop
loopne
sub
or
imul
push
pop
icebp
cli
loope
mov
shl
and
repz
dec
aas
verr
inc
in
dec
sub
adc
popa
mov
sbb
sub
shlb
js
bound
mov
xchg
sbb
cltd
addl
and
pop
sub
repz
mov
mov
loopne
xchg
enter
sbb
fdivl
cmp
xor
push
mov
mov
mov
stos
call
ret
cmp
rorb
out
gs
pop
loop
push
scas
push
and
fs
push
cmc
add
mov
inc
mov
rcrb
es
push
mov
rolb
push
pop
addb
std
les
mov
sbb
nop
sahf
shlb
es
ljmp
int
jbe
push
xchg
pusha
or
out
popa
xchg
sbb
ja
xchg
pop
xchg
add
sub
cmp
xchg
dec
mov
add
out
dec
nop
mov
and
lahf
xlat
jno
and
insl
repnz
xchg
push
fcmovbe
fs
sbb
rcl
sarl
insl
cs
adc
pop
mov
pushf
out
arpl
ljmp
dec
cmp
and
or
jecxz
clc
xor
jno
mov
scas
aad
mov
testb
ja
dec
xor
test
jp
fstpl
lahf
push
ss
push
or
out
nop
ljmp
outsl
loopne
dec
shlb
add
cmp
stc
push
nop
jmp
sahf
or
mov
xor
outsb
sub
sub
popf
cmp
in
shlb
ljmp
stos
cmp
std
mov
je
and
mov
adc
lcall
je
cwtl
fnsave
clc
call
roll
add
mov
out
jb
mov
add
xor
scas
cmp
repnz
jp
pop
lock
mov
jmp
ret
jge
dec
cmp
notl
xchg
xchg
mov
jns
nop
shlb
xchg
dec
out
and
xor
test
pop
ja
cmp
mov
push
xor
push
mov
outsb
xor
adc
inc
lds
hlt
rclb
jle
in
jecxz
inc
jb
mov
ss
xor
sub
mov
adc
sti
mov
dec
out
push
imull
call
cmp
cmpl
adc
or
shlb
lods
mov
loope
jne
pushf
xor
jg
cs
mov
testl
out
int
loop
mov
pop
call
pushf
stc
dec
push
mov
movsl
int
les
inc
shl
mov
jb
inc
in
add
je
cmpl
xor
add
movb
push
insb
xor
movsb
dec
cmc
incb
push
jge
incb
adc
jg
pop
pop
dec
out
pop
test
icebp
xor
push
les
repz
pop
stc
movsl
dec
sar
cmp
mov
cld
push
cs
cltd
mov
mov
jbe
add
or
xor
les
scas
sarb
adc
mov
or
mov
fimull
mov
mov
cmp
sub
sarl
cmpsb
dec
dec
roll
jle
dec
push
in
aas
sbb
scas
clc
mov
outsb
jnp
hlt
mov
mov
ret
icebp
mov
fcmovu
imul
jp
sti
mov
xchg
sbb
ja
mov
std
out
mov
xor
call
adc
fists
xor
adc
imull
xor
mov
sub
xchg
jg
jecxz
je
jae
jns
cld
xor
enter
add
pop
mov
jnp
xchg
add
ljmp
fistpl
inc
ret
add
leave
pop
jno
cltd
stc
cwtl
insl
dec
push
inc
push
push
dec
shr
jp
and
jae
sub
xor
sbb
cmpsb
aam
pop
loop
test
insl
fiadds
push
inc
cmp
or
sub
cmp
xchg
pop
cmp
addb
lock
jo
gs
ss
data16
inc
jmp
ret
xchg
lahf
cmpl
ljmp
movsb
mov
pop
clc
loope
gs
adc
mov
das
testl
pop
push
pop
dec
inc
loope
or
loope
and
xor
inc
jnp
jmp
dec
cs
sbb
outsl
cmpsl
in
pop
js
es
das
xchg
dec
ret
test
ja
jecxz
out
bound
adc
loopne
sbb
xchg
daa
xchg
rolb
xor
sub
int3
gs
xor
xlat
js
inc
add
lock
mov
ds
adc
push
test
or
cwtl
jb
jae
push
clc
mov
jae
lods
jne
sub
add
fcmovnb
xchg
je
lods
fwait
outsb
cmp
push
and
repz
movsl
pop
xorb
data16
lods
jle
xor
pop
push
adc
frstor
adc
mov
ljmp
push
mov
and
cmpsl
shll
mov
jae
lret
mov
adc
pop
iret
pop
sbb
adc
adc
mov
mov
add
mov
inc
mov
push
fstl
daa
idivl
int3
push
test
lcall
xor
mov
mov
in
pusha
xlat
fdiv
std
adc
jno
movsl
push
adc
nop
les
cmc
test
or
push
fsubrp
mov
aam
mov
in
cld
shl
dec
stc
mov
xor
fcoms
mov
sub
xor
inc
inc
cmp
sbb
gs
jmp
negb
mov
stc
sarl
lock
imul
lods
aad
push
icebp
loope
xlat
popa
in
jge
cmp
sub
aaa
leave
mov
jge
cltd
pop
andl
sub
mov
sbb
aaa
cli
lods
mov
push
push
push
jno
test
cmpsl
pop
mov
repnz
icebp
adc
iret
mov
push
fs
push
orb
lcall
inc
adc
loopne
xchg
repnz
inc
rolb
jle
xchg
hlt
cmp
add
lock
lcall
lods
sbb
idivb
add
push
andb
mov
inc
jle
or
adc
jbe
mov
mov
les
ret
sub
mov
pop
mov
push
inc
inc
jns
imul
fildl
xchg
adc
mov
push
aad
sti
sub
dec
cld
fstp
pop
and
nop
scas
pop
cld
pop
dec
xchg
dec
jmp
xor
sbb
out
jmp
fsubrl
pusha
fisttpl
mov
js
ret
icebp
adc
std
push
pop
jbe
push
loope
push
or
sbb
jle
insl
mov
pushf
mov
pop
sub
fisubrl
xorb
xor
inc
sbb
fsts
dec
pop
movsl
adc
test
and
aam
das
icebp
inc
sbbb
ds
aad
imul
stos
or
dec
jbe
fadds
scas
test
scas
ret
or
lahf
aas
sbb
lods
repnz
sub
ja
mov
je
pop
into
mov
ret
or
add
das
std
inc
pop
xor
jmp
mov
mov
in
pusha
mov
ja
scas
inc
fcmovne
xor
aas
dec
cltd
les
ret
cmpsl
mov
sbb
test
xlat
cmp
cmc
sahf
sbb
jb
cwtl
std
xchg
mov
jge
aam
sub
fs
adc
sahf
fdivrl
sbb
stc
in
mov
push
push
je
stos
push
dec
ljmp
adc
imul
jo
mov
fnsave
mov
stos
nop
psubw
ret
ljmp
adcb
mov
out
testl
add
std
jl
inc
subb
mov
gs
popl
cmp
xor
and
xor
into
test
xor
nop
adc
cli
cmp
mov
fstps
in
gs
enter
cmp
jecxz
lret
test
pop
scas
pop
jg
cltd
jge
leave
hlt
jecxz
sub
mov
dec
aaa
mov
outsb
xchg
pop
insl
xor
dec
adcb
loopne
jp
lds
push
addr16
rolb
mov
enter
pop
xchg
movsb
sub
lods
nop
cmpsb
stos
dec
push
je
ret
lcall
lret
xor
push
test
xor
jecxz
movsl
mov
mov
popf
into
mov
add
repnz
lods
xor
hlt
stos
out
movsb
sbb
jnp
jmp
add
sbb
out
inc
pop
jno
inc
ljmp
mov
in
es
aad
push
cmpsb
pop
nop
mov
data16
pop
mov
insl
mov
adc
adc
in
pusha
dec
inc
add
lahf
shrb
dec
pusha
or
mov
les
fmul
pop
popf
sbb
jmp
data16
xchg
es
out
cmpsb
push
pushl
sub
mov
out
aas
dec
add
push
jne
or
or
jecxz
inc
test
inc
out
add
add
das
jno
dec
lcall
push
add
popf
add
mov
data16
mov
jp
lock
iret
jae
jecxz
jl
xchg
fucomi
sub
ficomps
jp
in
les
orl
cwtl
fstps
dec
pop
mov
loopne
mov
sbb
and
stc
aam
xchg
out
out
popa
inc
mov
lods
cmpsl
jl
aad
lahf
mov
stc
loopne
aas
sti
dec
push
push
mov
pop
add
iret
stos
add
mov
in
push
insl
dec
mov
cmp
testl
out
mov
inc
mov
icebp
dec
aas
mov
repnz
mov
sub
stc
sub
sbb
scas
jbe
leave
push
lret
mov
push
and
and
fwait
cmp
push
dec
xchg
xchg
or
out
inc
sub
mov
es
mov
xchg
lret
fwait
bound
or
fnstenv
mov
mov
or
mov
repnz
lsl
pop
mov
adc
push
xor
nop
or
push
dec
mov
pop
push
and
imul
pop
cli
or
mov
jge
cmp
add
or
out
mov
add
lds
push
push
xchg
add
fisttps
mov
outsl
mov
pop
repz
and
hlt
jle
out
out
jo
outsl
imul
or
es
or
dec
es
jb
movsl
movsb
rorb
into
jge
outsb
cmc
movsl
fwait
xor
and
subb
fimull
jmp
mov
call
in
test
mov
pop
or
xor
stos
mulb
insb
into
pop
test
cmp
sbb
xchg
sub
and
mov
inc
dec
repnz
pop
push
int
cmpsl
test
lock
mov
adc
or
inc
push
sub
or
dec
push
pop
aad
scas
hlt
stos
xchg
iret
push
stos
adc
cmpsl
insl
test
insl
test
jbe
jge
ret
hlt
mull
out
scas
add
lret
mov
push
rcll
push
fs
adc
sbb
addr16
fidivl
in
push
sub
loope
or
push
sub
sbbl
mov
add
xor
stos
xor
mov
sbb
pushf
js
adc
push
mov
mov
jecxz
add
daa
hlt
hlt
mov
push
sub
inc
jne
inc
jno
mov
sarl
mov
imul
pusha
cmc
or
jecxz
sub
jo
repz
nop
mov
push
dec
stos
shr
call
pushf
in
mov
adc
cmpsl
xchg
shlb
pop
pop
adc
outsb
ss
lret
inc
sbb
mov
xchg
fnsave
cmpsl
inc
add
xchg
mov
cmp
mov
mov
xlat
test
xchg
sahf
cmc
mov
inc
add
repz
push
outsl
pop
ret
repz
and
mov
and
xchg
mov
nop
ret
fisttpll
sbb
and
sbb
out
sarb
pop
loopne
sbb
jno
ss
push
mov
mov
and
lds
jae
subb
dec
cmp
mov
scas
or
test
mov
jmp
lods
iret
jb
data16
pop
mov
icebp
mov
pandn
aad
into
inc
jb
xchg
cmp
cmp
lods
adc
fidivs
inc
leave
adc
pop
cmc
pop
insb
sti
xor
sbb
inc
stos
test
dec
mov
arpl
popf
repz
test
pop
loop
mov
mov
lret
or
push
add
mov
stos
jae
or
xorb
out
xchg
mov
push
inc
jns
add
push
mov
ja
icebp
aas
fwait
lods
push
into
jl
shl
adc
lcall
sub
or
ret
fwait
push
dec
xchg
mov
mov
fcompl
push
in
stc
jecxz
data16
lods
push
cld
push
call
pop
mov
mov
iret
adc
mov
sbb
dec
movsl
jno
std
ud0
mov
iret
mov
sub
lcall
push
jo
imul
lds
gs
stos
inc
and
mov
mov
and
sub
sbb
mov
inc
mov
imul
inc
out
dec
inc
dec
xor
arpl
jp
or
fs
scas
fisttpl
test
dec
and
in
and
push
xor
lcall
push
cli
inc
pop
and
inc
xor
inc
in
cltd
dec
xlat
pop
sti
dec
adcb
popf
and
push
mov
pop
insl
xor
aas
adc
arpl
pop
gs
adc
xlat
sarl
pusha
iret
inc
shlb
loopne
cmp
inc
movsl
or
fdiv
add
fcompl
xchg
add
arpl
sbb
stos
ds
add
addl
mov
adc
inc
cld
lret
cmp
push
sahf
adc
dec
mov
dec
dec
aad
ljmp
mov
push
sarl
fwait
data16
sar
test
int3
pop
loop
xor
in
add
xor
add
and
push
jl
fisttpll
aas
fmulp
aam
int3
pop
pop
inc
pop
ja
mov
xchg
test
cmp
mov
jmp
or
insb
mov
mov
out
test
pop
jle
nopl
adc
aad
sarl
add
dec
loopne
cmp
and
test
pop
jle
cmc
lea
add
inc
mov
xchg
xchg
insb
adc
out
dec
xor
les
je
cmpsl
repz
jae
mov
add
hlt
and
jno
xchg
push
and
jg
shlb
movsb
add
rorb
jnp
push
jbe
mov
jge
push
pop
fidivl
cmp
mov
sarb
leave
mov
inc
xor
cltd
notl
mov
data16
dec
shl
sarb
jbe
push
movups
icebp
add
notl
ja
or
outsl
mov
cmp
addl
xor
mov
stos
lock
rorl
lret
orl
inc
pop
jge
push
cmpsl
push
cs
pop
add
and
dec
dec
sbb
lods
jae
mov
loope
sbb
sbb
daa
hlt
rorl
mov
and
or
in
jae
xchg
outsb
mov
push
adc
jno
and
add
ds
stos
xor
out
mov
and
pop
call
or
popl
ja
or
cmp
jmp
stos
ret
xorl
push
xchg
dec
cs
scas
sbb
mov
sbb
mov
lcall
cmp
jle
cmp
daa
test
sbb
add
xor
push
cmp
dec
scas
or
jp
add
andb
sbb
dec
cmp
jg
mov
ret
cmp
cwtl
adc
sahf
pusha
push
mov
adc
push
ss
leave
fldt
cmp
das
sub
pop
jle
push
push
xchg
xchg
dec
cmpsb
push
test
pop
sub
out
data16
shl
lods
fisttpll
push
jmp
popf
les
mov
dec
test
mov
rolb
clc
jnp
xor
mov
xchg
inc
dec
into
cmp
call
dec
adc
mov
adc
xlat
int3
adc
mov
sub
inc
mov
clc
test
movsb
and
jnp
dec
and
addb
lock
push
cmc
mov
pushf
stos
sub
test
cmpsb
add
dec
jecxz
arpl
xchg
repnz
push
repz
sti
int
or
dec
cmc
dec
scas
sub
lahf
or
out
sub
unpcklps
cmp
mov
mov
bnd
push
psllw
sbb
and
ds
lahf
scas
fildl
cmpsb
or
jp
xor
push
mov
bound
testl
pushf
lea
int
jnp
adc
roll
enter
iret
jne
test
aas
add
fs
pop
insl
xchg
xchg
fwait
jecxz
test
lock
loope
int3
pop
inc
test
pop
shll
pop
popa
sbb
cli
scas
int3
sub
xor
pop
into
cltd
dec
test
incl
sub
rorl
mov
dec
dec
dec
push
mov
pop
pop
adc
outsl
mov
lret
ja
mov
scas
mov
repz
in
imul
test
repnz
cltd
ret
xor
mov
add
add
mov
push
test
test
mov
pop
movsb
inc
cmp
out
and
mov
in
mov
cmpsb
mov
arpl
inc
and
mov
call
cmp
and
popa
cmp
fsubrl
ret
push
mov
pop
subb
jbe
cltd
dec
pop
or
xor
cmc
xchg
call
ja
int3
ds
lods
pop
dec
dec
xchg
add
mov
outsb
sbb
stos
fldt
cmp
mov
lods
pop
fldenv
and
aas
jg
out
fistps
rcr
mov
add
mov
in
andb
scas
adc
pop
popf
scas
mov
adc
mov
aaa
into
dec
movsb
pop
loopne
sub
mov
pop
sbb
out
cld
xor
sbb
lea
xchg
xchg
xor
xchg
jp
lds
jp
out
aam
mov
dec
sub
icebp
outsl
popf
cld
push
push
add
push
cmp
pop
repz
inc
lret
js
fcmove
pop
andw
bound
mov
clc
inc
mov
enter
int3
popf
mov
pushf
pop
into
dec
mov
rcr
inc
adc
rorb
inc
mul
mov
pop
pushf
jl
sti
popa
dec
fdivrs
hlt
aas
pop
mov
or
mov
loope
add
bound
popa
sbb
and
adcb
cli
lahf
cmc
jne
add
cs
mov
lret
cmp
cmp
and
ljmp
ja
insl
pop
idivb
jp
push
adc
clc
add
push
cmpsl
es
icebp
outsb
addb
push
ja
aaa
sbb
repnz
ror
imul
pop
call
sub
mov
pusha
popa
and
stos
testb
shr
mov
pop
mov
pop
push
pop
lods
jecxz
mov
push
or
xchg
pop
cwtl
imul
fldt
cmp
jge
lahf
inc
repnz
mov
and
movsb
and
and
cmpb
fwait
mov
aaa
repnz
addl
adc
scas
stc
jl
scas
mov
lret
mov
outsb
pop
ds
inc
push
sub
sub
setl
cmpsl
inc
push
dec
jns
lock
cmp
push
scas
cmp
fwait
and
sub
mov
fld1
pop
fsubl
xchg
add
and
jns
outsb
subl
int3
orb
ljmp
inc
sub
cmp
mov
or
repnz
sarl
les
test
cmp
xor
roll
outsb
xor
cmp
fsubl
sub
hlt
js
push
adc
push
pop
and
lcall
add
xchg
enter
and
cltd
clc
adc
test
jne
mov
ds
mov
lcall
jb
out
jge
pop
popf
iret
repnz
dec
in
cmpsb
and
out
mull
mov
mov
jecxz
adc
or
push
sub
and
nop
movl
mov
adc
push
call
xor
or
push
imul
pop
adc
testb
add
insb
movl
mov
scas
sub
fistpl
stos
mov
mov
rcrl
inc
sbb
fistps
inc
mov
pop
loope
cmpsl
ret
std
inc
jp
and
les
divb
or
sti
sbb
cmpsl
aas
add
out
daa
ljmp
pushf
xlat
cmp
cmpb
push
cmpsl
push
push
das
fstpl
jle
popa
mov
ficompl
mov
cwtl
test
mov
std
mov
sahf
xor
add
xor
scas
aaa
in
cmpsb
inc
or
jmp
or
cmpsl
enter
push
xrelease
push
xchg
bnd
jo
jmp
push
int
push
xor
int
sbb
push
jb
cmp
cmp
sbb
jns
push
stc
lock
mov
mov
stos
and
int
lds
lahf
std
shll
pushf
stos
cmp
loope
js
cmp
xor
test
movsl
inc
or
sbb
arpl
mov
je
push
jecxz
cmp
cs
mov
dec
xor
dec
cmpsb
hlt
subl
movsb
jp
add
bnd
pushf
loop
subl
jecxz
jmp
and
inc
mov
cmp
unpckhps
push
lahf
jmp
adc
and
push
push
or
stc
pop
cmp
cmp
cs
xchg
adc
hlt
mov
ror
movsb
loopne
xchg
stos
pushl
lea
faddl
iret
jns
fnstsw
push
mov
aam
int
and
sub
push
repnz
sti
addb
lcall
push
lret
call
mov
movsb
sub
push
cmpb
pop
add
mov
in
sbb
cmp
lret
clc
lds
mov
cs
mov
pop
cmp
sbb
cmp
das
adc
cmpsb
ret
xchg
scas
xchg
lcall
dec
dec
mov
sbb
jns
pusha
scas
cvtdq2ps
cmp
lods
pop
pop
mov
add
arpl
aad
pop
xchg
sti
cmpsb
data16
or
cmp
push
fiaddl
loop
mov
add
jae
rcll
add
xchg
shrb
adc
sub
pop
pop
andb
aas
pushf
cbtw
loop
push
stos
jne
icebp
cwtl
arpl
call
outsl
daa
jp
dec
push
inc
inc
jge
xor
lahf
mov
js,pn
xchg
adc
mov
movsb
int
loopne
es
sti
stos
cs
mov
sbb
sub
inc
push
daa
pop
push
and
das
cltd
ja
sbb
inc
sbb
lds
mov
cs
movsl
lods
sub
mov
aaa
mov
insb
and
push
and
dec
mov
jno
fnstcw
ret
sub
sbbl
ret
mov
jle
gs
lcall
xchg
or
xchg
mov
lcall
test
push
pop
xorb
xchg
mov
in
jne
and
add
test
inc
pinsrw
mov
ljmp
sub
fwait
dec
stos
imul
add
clc
fcoml
mov
push
les
loopne
dec
sarb
repnz
mov
sti
xor
cmp
in
gs
adcb
in
enter
inc
sbb
xor
pop
cmp
xchg
js
rclb
jno
dec
cli
fcomps
pop
sbb
adc
adc
push
rcrl
fucomip
sub
outsl
dec
test
and
loopne
in
sbb
lock
out
mov
js
fcomps
adc
enter
sub
stos
cmp
aad
test
gs
lret
jle
in
pop
js
rolb
clc
bound
pop
add
rclb
xlat
rolb
sub
cmp
cld
xor
pop
inc
adcl
dec
jmp
xchg
and
call
pop
cmp
movl
sahf
jne
sub
lahf
in
and
inc
popf
in
cmpsb
mov
aam
mov
sbb
fnstsw
insl
adc
cmc
adc
ljmp
lock
jle
je
cmpsb
stos
sbb
int3
jae
and
jbe
xchg
sbbb
and
je
leave
push
mov
outsl
cwtl
push
push
mov
je
jmp
jmp
out
je
xor
mov
into
repz
dec
xchg
or
sub
jbe
xchg
xchg
cmpsl
sub
xor
repnz
sub
int3
cmpl
sti
push
sbb
leave
ja
dec
xor
add
add
fsub
adc
lods
push
lcall
sbb
jbe
std
jg
cmpsl
adc
push
push
mov
cmc
xchg
movsl
test
lods
rorl
xor
sbb
ret
cs
scas
sbbb
mov
push
movsl
xorb
je
adc
adc
xchg
dec
cmp
sbb
push
ja
sub
cmp
and
sahf
sbb
in
adc
int
movsb
test
iret
xchg
mov
stos
mov
pop
xor
repnz
pop
adc
mov
mov
hlt
mov
aad
adc
fcmovnb
lret
and
pop
inc
and
movsw
into
push
add
test
jmp
data16
mov
sti
xchg
clc
mov
adc
popf
imul
aad
lock
out
sbb
ljmp
jp
inc
jnp
jle
call
int3
lea
outsb
out
and
ja
push
in
xchg
call
out
push
push
clc
hlt
mov
dec
dec
adc
xchg
sbb
cmp
xchg
in
aas
std
shrl
mov
mov
lahf
icebp
adcb
inc
cli
xchg
ds
and
lods
bound
cmp
jmp
push
push
and
fcmovu
ljmp
lods
add
mov
cmpl
xor
addb
xor
scas
and
or
call
push
arpl
mov
sbbl
sub
movb
imul
cmpsl
pop
das
in
std
repnz
xor
lods
push
mov
out
pusha
stos
inc
adc
into
addr16
jecxz
mov
inc
and
and
mov
and
fcoms
fbstp
fs
jns
xor
sbb
repz
xor
fbld
jae
cmp
mov
mov
lcall
daa
cmp
jno
fbstp
push
fisubl
mov
out
inc
pop
adc
and
and
mov
mov
xlat
jo
out
test
idiv
stos
mov
popa
out
cmp
mov
and
hlt
cmp
cltd
push
pop
outsb
sbb
leave
or
inc
out
xchg
sbb
mov
imul
in
lds
insb
inc
mov
pop
mov
leave
xor
sub
lahf
js
scas
mov
mov
push
mov
push
mov
sub
adc
aad
out
xchg
xchg
adc
lods
movsb
adc
pusha
adc
fildl
cmp
or
jge
xor
cltd
ret
daa
and
cmc
addr16
mov
xchg
sub
pop
and
mov
mov
mov
repnz
cmc
xor
adc
push
mov
add
insl
pop
and
xor
cwtl
ds
pop
push
dec
push
out
cmp
int3
mov
in
lods
lods
outsb
pop
sub
std
xor
sbb
sub
test
inc
push
bound
cmpsb
int3
ficoms
pop
dec
xor
or
adc
js
fldt
jbe
insl
or
add
xchg
fiaddl
lods
loopne
pop
adc
int
nop
out
aad
xorl
dec
movsl
xchg
ljmp
add
pop
sbb
cltd
sbb
cmp
mov
pop
ret
push
jb
andl
mov
adc
cmp
or
push
xchg
jo
xor
and
xor
shl
or
push
jg
sbb
add
lcall
sbb
imul
push
pop
jmp
loope
pop
sahf
icebp
jl
xchg
add
cmp
daa
data16
hlt
lods
xchg
fstpl
int
imulb
ror
xlat
ljmp
inc
lea
cmc
and
mov
ret
pop
push
mov
pop
xchg
fidivrl
sub
and
loope
fwait
sbb
or
sbb
mov
sbb
push
daa
adc
in
inc
and
mov
idivb
and
fcomip
les
test
mov
dec
jl
jle
shrl
sarl
and
hlt
jp
mov
pushf
scas
stos
lcall
mov
mov
pushf
mov
test
out
cmp
mov
fdivs
test
outsl
lods
push
sti
and
sbb
mov
pop
adc
xor
adc
push
into
f2xm1
gs
push
inc
jecxz
mov
jne
xor
cs
push
push
cmpsb
mov
jne
into
cmp
icebp
test
mov
xchg
test
fwait
sysret
inc
cmp
adc
sti
negl
jns
daa
les
mov
push
dec
mov
mov
cmp
xchg
mov
dec
out
sti
jge
sbb
mov
push
xchg
mov
or
insl
repnz
xlat
dec
bnd
dec
cltd
mulb
or
roll
xor
shlb
push
in
aam
mov
mov
pop
cmpsl
jecxz
testl
lcall
dec
push
xchg
dec
push
mov
sahf
hlt
sbb
adc
sub
jp
fwait
and
xor
jg
inc
test
sbb
pop
jecxz
loope
jge
pop
xorl
in
sar
adc
repnz
dec
dec
inc
scas
pop
lock
int
and
or
in
flds
jge
fiaddl
sbb
call
xchg
repnz
lcall
inc
push
pop
pop
addr16
arpl
pop
and
ja
iret
lea
bnd
push
mov
xchg
out
mov
movsl
movsl
mov
push
pminub
pop
dec
aam
mov
push
adc
popa
pushl
push
sbb
push
in
punpckhwd
or
ret
jbe
add
inc
stos
or
inc
mov
mov
loopne
ficoml
mov
fstps
outsb
out
imul
sub
movsl
mov
scas
cmp
add
cli
fldcw
xchg
or
movsl
out
jne
pop
test
rcrb
scas
dec
jae
fs
add
fidivrs
xor
adc
xor
cli
leave
xchg
dec
je
jp
into
daa
sub
sbb
inc
pop
sbb
push
fwait
gs
test
and
js
jb
adc
mov
cmp
cli
movsl
pop
sub
mov
sub
pushf
sub
mov
loopne
pop
nop
fisubs
and
jo
mov
outsl
lock
push
cltd
mov
fstpt
movl
cmp
push
pop
add
cmp
movsl
cmp
adcb
clc
jp
sbb
mov
pop
enter
out
mov
ja
outsl
stc
dec
mov
loop
scas
or
fisttps
cmpsl
push
in
inc
bound
int
and
in
das
ret
lahf
xor
lea
ret
sub
or
stos
lock
out
stos
insl
aas
popf
fwait
push
mov
and
cs
cmp
ja
out
insb
orb
mov
cmpsb
mov
jnp
insb
movsb
in
add
and
std
pusha
fldt
aas
int
scas
sub
push
jp
dec
mov
pop
mov
out
addps
test
lea
jne
jg
and
or
push
aas
push
pop
add
jmp
mov
insb
lods
lods
leave
xor
es
dec
cmp
bound
xor
cmp
int3
xorl
idivb
in
push
call
and
jb
lret
enter
lods
sub
cmpsb
or
xchg
lret
js
or
dec
stc
mov
xchg
test
pop
xlat
ja
xor
mov
push
or
xchg
movsl
jns
iret
push
xchg
sbb
fwait
sub
xchg
xor
bound
loopne
dec
ja
scas
out
cmp
movsl
jo
movsb
pop
jae
or
mov
adcb
xchg
clc
mov
data16
fsubs
pop
xchg
jnp
sbb
das
out
leave
xchg
dec
fnstenv
pop
adc
and
push
ret
ficompl
into
ja
push
add
or
adc
mov
aaa
stos
movsl
mov
lahf
push
clc
subb
xor
mov
filds
xor
dec
cmc
mov
decb
pop
pop
pop
or
pop
arpl
mov
push
je
and
dec
pop
sbbb
sbb
push
sub
jg
ljmp
ret
mov
rep
cmp
mov
cmp
cli
push
call
insl
hlt
mov
orl
imul
push
cmp
leave
xorb
push
ret
jmp
movsl
pop
xchg
ret
iret
popf
mov
jbe
and
jmp
xchg
xor
xlat
insb
cmp
inc
dec
in
or
leave
ds
xchg
xor
aam
lahf
jle
xor
push
loop
fwait
dec
mov
push
jb
jl
ret
and
add
shll
lods
pop
roll
inc
inc
shrl
sbb
movsl
leave
jbe
enter
xchg
fcompl
aam
out
push
and
gs
sbb
cmpsl
cmp
add
add
loopne
cmpsb
arpl
sbb
jle
xchg
test
mov
lods
rcrb
inc
cmpsb
push
movsl
fcmovu
dec
xchg
fisubs
sar
bound
jmp
mov
clc
pop
loope
fldcw
mov
or
loop
jo
or
sarb
pop
lock
push
push
push
xor
stos
xor
mov
jmp
mov
jbe
movsb
leave
insb
hlt
push
mov
in
jmp
call
cld
sbb
sub
add
pop
pop
pop
mov
clc
push
add
fisttpll
pop
iret
jne
push
jbe
sub
or
push
sub
sbb
lea
mov
loop
iret
adcl
cli
cltd
or
dec
pop
and
test
sub
mov
dec
lahf
imul
rorl
mov
dec
fsubrl
pop
xor
data16
jge
mov
mov
dec
fstl
ds
jle
sti
cmp
lahf
add
loope
shl
push
or
fbld
imul
lahf
push
lods
xchg
aad
lcall
fadds
fisubs
mov
and
aas
adc
fcmovnb
or
loope
fs
cmc
mov
out
add
or
mov
stos
cld
inc
and
aad
out
mov
xlat
mov
mov
push
into
push
pop
or
divl
push
rcll
xchg
fs
sbb
fcmove
sbb
xabort
ficoms
and
or
xchg
mov
scas
test
bswap
nop
cmp
sbb
xchg
xchg
dec
inc
add
cmpsl
loopne
lods
ds
sub
rclb
shr
xor
pushw
pop
inc
in
jl,pt
sbb
inc
mov
inc
or
dec
or
jnp
add
xchg
pop
test
ret
pop
jb
aaa
mov
push
repz
lret
dec
push
aad
mov
test
mov
jnp
loop
lock
rclb
inc
je
out
pop
adc
dec
ja
pop
xor
inc
mov
xchg
mov
inc
push
stos
fs
lock
js
stc
cmp
pop
cmpsl
mov
pop
pop
loopne
pop
xchg
cmp
or
or
sub
in
test
aad
stos
mov
inc
popa
test
gs
shll
cwtl
xchg
xor
dec
cmp
aaa
in
scas
data16
inc
clc
mov
xlat
sbb
cwtl
and
xor
mov
inc
and
jmp
jne
mov
out
mov
cwtl
sub
mov
pop
imul
bound
insl
sub
mov
loope
clc
fbld
daa
mov
in
mov
std
mov
jns
fisttpl
hlt
cwtl
mov
scas
adc
mov
jp
mov
dec
push
jnp
jp
push
pushf
inc
cmpsl
sub
mov
scas
cmp
cmpsl
cltd
shlb
xchg
sbb
inc
mov
testb
push
xor
into
adc
int
ret
test
jne
fcmovb
shll
jno
sbb
sti
jmp
adc
xlat
push
xor
and
int
and
pop
mov
or
push
or
ret
aam
pop
cmp
ret
test
out
insb
jp
popa
adc
and
sbb
imul
faddp
ficompl
dec
aaa
mov
addr16
dec
lods
leave
scas
mov
enter
outsl
push
dec
lahf
mov
sbb
inc
mov
les
lock
inc
andl
xorl
shrl
mov
mov
scas
or
add
dec
in
test
mov
add
push
jge
mov
mov
jno
or
xchg
repz
bound
in
inc
push
cli
stos
or
xchg
lret
fistl
mov
jle
jmp
push
icebp
cmp
xchg
sub
add
imul
out
mov
push
jno
dec
pop
ret
mov
std
movl
div
aam
add
xchg
adc
xchg
jno
xor
insb
lds
sarl
push
mov
fstl
in
pop
push
ret
sbb
cmpsb
mov
dec
insb
lcall
insb
dec
orl
fcomps
in
mov
pop
ljmp
outsb
pop
cmpsb
cmp
bound
int3
idivb
sahf
mov
rclb
jp
xchg
cmc
pushl
cmp
or
lret
sub
cmp
lods
pop
outsl
mov
pop
fiaddl
adc
sub
cli
loopne
push
jmp
ja
test
push
jo
shrl
cmpsb
mov
mov
sahf
pop
sahf
loop
and
lock
mov
loope
insl
push
js
sti
pop
sbb
jg
and
lea
subb
xchg
lods
jo
stos
iret
pop
flds
fidivl
jnp
xchg
fimull
pop
inc
add
stc
dec
imul
push
mov
repz
xchg
xor
mov
add
movsl
out
sbb
add
sub
mov
addb
or
jnp
loopne
call
xchg
je
sub
or
imul
push
out
cs
inc
mov
inc
in
in
repz
lea
hlt
pusha
mov
adc
adc
sub
dec
outsl
mov
scas
mov
fbld
int
sbb
xor
out
mov
xchg
pop
imul
xchg
mov
add
mov
es
push
daa
movsl
movsl
pusha
ret
ljmp
mov
cs
push
cmp
mov
fbld
inc
into
push
dec
jl
pop
mov
bound
pushf
lock
js
lret
push
push
xchg
pop
mov
scas
cltd
jbe
out
lahf
inc
outsl
std
xor
das
jge
enter
addr16
rcrb
movsl
sub
pop
dec
adc
jmp
adc
jbe
add
push
int
cmp
dec
aas
test
pop
jnp
jl
adc
sub
pop
sbb
das
icebp
negl
adc
stc
sub
enter
mov
mov
stc
fcompl
out
aam
or
add
adc
xchg
in
inc
pop
jl
inc
sbb
imul
or
stos
push
lock
or
jbe
mov
adc
lds
mov
subl
jno
pop
sbb
lret
outsb
data16
ljmp
loopne
mov
cmp
in
push
jecxz
enter
inc
mov
jae
rep
scas
ss
sub
mov
pop
std
and
sub
jo
icebp
imul
fistl
add
mov
in
adc
sbb
adc
js
push
pop
sbb
loope
movsl
std
mov
jns
lods
push
hlt
inc
fwait
cmpsl
insb
pop
repz
sub
xchg
cmp
adc
fbld
sti
fmuls
insb
sti
and
popa
push
lcall
sbb
inc
dec
cmp
flds
mov
out
sbb
outsb
push
dec
in
xor
imul
rol
imul
lcall
pushf
adc
out
cli
xor
mov
jecxz
cmpsl
mov
call
out
xchg
outsb
pop
movsl
jmp
jo
push
pop
mov
add
cli
cmp
sbb
popl
xorl
jbe
shrb
adc
pop
sbbl
cmpsl
je
mov
or
icebp
movsl
mov
cld
xchg
inc
loop
test
adc
mov
orb
stos
iret
cli
fistpl
inc
xor
test
out
sbb
cmpsl
stc
push
mov
lcall
aad
repnz
sbb
lahf
push
test
mov
inc
test
dec
pop
mov
xor
adc
pusha
lahf
push
incl
mov
add
pop
xor
ljmp
pop
mov
sbb
inc
icebp
mov
mov
ret
fcompl
sarb
sbb
sub
ret
xchg
push
push
inc
lods
add
pop
jae
test
push
repz
mov
pop
mov
push
push
lea
sti
cld
leave
aaa
inc
hlt
fcomip
jl
add
add
lock
fstpt
push
fldl
adc
or
mov
in
jp
ds
mov
ss
xor
cmpsb
iret
filds
imul
adc
je
and
scas
sub
cmpsl
sbb
adc
mov
dec
cmpsb
mov
lea
jge
or
push
adc
ror
ror
cmp
jbe
iret
aas
lds
sub
imul
xchg
jae
push
mov
mov
jmp
mov
dec
stos
les
mov
in
push
lock
sub
push
xor
aam
add
dec
repnz
sbb
pop
xchg
pop
out
movsl
mov
popf
iret
mov
aas
mov
jns
jg
push
je
fst
cs
loope,pt
js
pop
shlb
push
and
cmp
pop
sbb
div
jno
out
add
jnp
xor
and
push
shl
sbb
push
mov
mov
aad
and
mov
data16
sbbl
sub
or
sbb
adc
fstpt
ja
pop
popf
inc
popf
cmp
pop
repz
daa
sbbb
cmp
cwtl
lahf
sbb
shl
insb
lea
imul
sub
iret
xor
dec
push
pop
adc
int3
int3
repz
cmpsl
jbe
pushw
jne
es
push
mov
xchg
push
mov
lds
ret
jo
imul
push
mov
push
cltd
xor
jl
movsb
repz
dec
xchg
adc
xchg
xchg
xchg
dec
cmp
mov
xchg
fs
adc
xor
inc
cli
cmc
xor
mov
test
xor
fsubl
aas
fsub
mov
nop
pop
aaa
insl
dec
ficompl
pop
flds
data16
mov
scas
jmp
jo
xchg
or
xchg
jbe
lcall
xchg
xchg
or
mov
sahf
ret
adc
and
mov
cmp
sub
xor
mov
in
into
sub
ds
outsb
add
or
sub
dec
xorb
and
cs
ss
movsl
mov
and
and
imull
and
scas
imul
inc
movsl
testb
mov
push
xchg
call
in
lcall
stos
aam
pusha
popa
pushf
fstl
jno
ret
loope
popa
add
sub
add
sub
sahf
add
repnz
nop
or
or
dec
push
inc
add
loopne
icebp
adc
orl
rclb
push
dec
rorl
mov
pop
mov
das
push
repz
pop
std
pop
data16
sbb
sahf
inc
sbb
pop
pop
popa
int3
cmpsl
lahf
mov
jo
leave
aam
repz
stos
mov
adc
adc
xor
dec
in
jl
pcmpgtb
mov
sub
loope
mov
in
lahf
dec
lcall
mov
dec
pushf
mov
push
xchg
cmp
imul
push
or
ja
cvtps2pi
call
pop
ret
es
leave
push
mov
repz
icebp
leave
jo
aam
add
pusha
pop
jmp
test
mull
mov
das
scas
lret
dec
imulb
mov
xlat
clc
inc
fs
push
push
aad
sub
cmpsl
cld
imul
insb
sub
shlb
cld
movsl
lods
lahf
inc
iret
fs
rolb
xor
sbb
ret
mov
inc
mov
pop
cmp
int
daa
pop
pop
sub
mov
add
pusha
push
movsb
out
mov
cmp
jmp
sub
cmp
sbb
sbb
jae
arpl
add
mov
test
out
jl
sbb
ljmp
lcall
sti
loopne
inc
out
push
sarl
out
dec
sysret
mov
sbb
mov
push
inc
mov
call
test
or
sbb
mov
stos
je
pop
dec
and
addr16
jg
sub
push
sub
xor
jecxz
jbe
in
cmp
scas
adc
insb
in
push
jmp
inc
push
xchg
movsb
add
out
sub
dec
dec
pop
inc
cltd
movb
pop
es
inc
pop
stos
adc
outsl
bound
cli
xor
adc
mov
jmp
jp
or
xchg
das
add
pmaddwd
and
imul
push
fstpt
out
lock
outsl
adc
and
rclb
or
lock
push
rorl
fcmovbe
mov
jns
push
sbb
jne
dec
mov
fs
out
xlat
push
pop
ljmp
cld
imul
mov
xchg
imul
adc
sarb
fdivs
xchg
cmp
leave
xor
scas
push
dec
addb
mov
xchg
push
orl
stos
out
movsb
lret
fs
aaa
mov
add
repnz
sub
aad
das
push
pop
xchg
jae
adc
push
jae
mov
mov
sub
push
and
dec
es
mov
lods
mov
les
push
gs
add
subb
imul
jp
adc
mov
mov
stos
jne
push
xor
lahf
dec
sub
les
xor
sbb
mov
push
mov
lock
dec
out
jecxz
andb
mov
xchg
jl
popl
jb
ret
mov
pop
or
sbb
mov
jo
sahf
mov
enter
movsl
and
mov
sbb
mov
movsb
test
sub
sub
aaa
inc
xor
repz
test
jg
lcall
xor
arpl
ret
and
adc
mov
loop
stos
sahf
cmp
xor
ds
cld
jb
sbb
mov
push
ja
icebp
inc
cli
lret
sahf
push
inc
pop
lods
mov
adc
and
mov
sbb
jle
pop
int3
or
iret
sbb
test
push
mov
jp
popa
mov
jmp
inc
cmp
or
inc
iret
popf
xor
inc
fcmove
loope
push
sub
adc
repz
fmull
cmp
adc
xchg
jmp
hlt
adc
push
daa
dec
divb
cmp
repnz
js
fwait
jnp
cmp
sti
cwtl
push
arpl
mov
repnz
lcall
jmp
call
psubsb
jp
and
pop
jecxz
jns
leave
push
cltd
ret
cmp
and
dec
lret
mov
push
and
adc
cmp
sbb
jae
in
jmp
mov
jnp
or
scas
out
mov
xchg
cwtl
sbb
popa
cli
je
inc
push
mov
daa
dec
xor
sbb
arpl
pop
or
or
mov
inc
add
sub
outsl
cmp
and
fcoml
mov
loope
inc
mov
popf
sub
fcoml
fidivrl
lods
inc
mov
les
xchg
pushf
in
jo
addr16
mov
repz
sbb
xchg
push
jae
enter
lret
mov
jle
dec
pop
adc
jns
out
inc
mov
pop
jno
lds
xchg
mov
cwtl
leave
clc
jge
add
stos
mov
in
push
div
in
mov
inc
pop
lret
xchg
xor
xchg
mov
es
mov
mov
inc
adc
scas
scas
mov
fisttps
insl
fs
pop
mov
mov
in
push
xchg
ja
shlb
dec
das
pop
pop
in
fisubrl
cli
jg
rcl
push
jb
mov
push
fidivrl
sbb
dec
leave
scas
push
dec
xchg
stc
bound
mov
cli
loope
daa
out
fucomi
dec
mov
int
mov
xchg
test
mov
add
in
out
and
cmpsl
push
outsb
shrl
xor
push
and
arpl
inc
jp
mov
popf
clc
popa
lahf
xchg
sti
imul
xor
sub
lock
cmpsb
cmc
rorb
icebp
inc
jnp
cmpsb
es
xchg
adc
push
or
cmp
inc
imul
shl
push
icebp
sub
mov
xor
cltd
fmuls
pop
ret
or
aam
mov
out
inc
and
sub
mov
dec
iret
sbb
mov
js
in
int3
sub
sub
les
xchg
inc
mov
sbb
out
lret
push
outsb
pop
cmp
fs
xchg
ds
repz
call
or
and
or
jno
and
mov
data16
rcrl
std
sbb
into
push
scas
xor
shr
in
das
insl
fstps
pop
jbe
test
and
cmpsb
repz
out
in
data16
cld
adc
aas
pop
es
aad
setle
jl
mov
mov
fbld
mov
push
sbb
jb
jmp
mov
test
decb
movsl
pop
push
cld
mov
imul
mov
push
and
sbb
sti
cwtl
repnz
cmp
inc
test
fucomi
sub
jns
add
jmp
inc
lods
subb
inc
sub
cmp
sahf
flds
cmpsb
cmp
pop
jecxz
insb
imul
ret
pushf
dec
cs
fstl
loop
repnz
sbb
xlat
cmc
jp
add
pop
sahf
repnz
fnstcw
scas
add
aad
movsb
test
push
pop
repz
out
pop
test
cmpsb
push
out
out
stc
mov
xor
fwait
push
pop
fildl
iret
out
sbb
dec
mov
cld
imul
mov
mov
hlt
or
and
test
inc
in
push
pop
xchg
adc
pop
rcrl
mov
jae
nop
dec
adc
pop
cld
clc
cs
mov
mov
movsl
fiaddl
fwait
jns
dec
popa
fucom
jge
out
inc
jg
fwait
push
jle
fidivrs
mov
xchg
arpl
stos
mov
dec
sub
push
jge
out
and
jae
imul
adc
adc
das
jae
mov
mov
js
in
jo
mov
fwait
inc
inc
rcrl
sbb
mov
cwtl
mov
repz
sahf
cmp
in
fsubs
movsl
cld
xor
jno
pushf
pop
test
outsb
addb
lods
cmp
decb
mov
lahf
fs
and
xor
or
inc
fimull
jae
mov
jecxz
and
insb
pop
lcall
jnp
and
or
xlat
enter
jl
jns
aaa
outsb
cmp
aas
cmpsl
sub
int3
in
ljmp
add
push
cld
and
sbb
add
sub
lds
xrelease
or
je
dec
aad
pop
sub
cmp
icebp
pop
push
arpl
inc
dec
popa
push
dec
insl
adc
jo
movsb
cmpsl
mov
mov
sbb
dec
movsb
dec
adc
mov
shr
arpl
cmpsl
cltd
mov
aaa
pushl
mov
fistpll
bound
and
popl
sub
mov
push
das
mov
popf
pop
enter
inc
jl
fdivl
bound
icebp
xchg
movsb
loop
mov
lock
in
and
pop
mov
addr16
sub
rcrb
jmp
sbb
inc
loop
mov
std
sbb
or
push
pop
loopne
sbb
jne
mov
rep
cmp
sahf
gs
cli
xor
pop
es
fcmovu
in
pop
push
stos
outsb
dec
sbb
inc
pop
js
mov
inc
or
das
xlat
not
mov
fcomps
adc
mov
inc
ds
lods
add
popa
pop
jno
mov
inc
push
aad
adc
mov
pop
enter
adc
pop
mov
aaa
push
out
ret
ret
push
jne
add
dec
iret
sbb
inc
lods
push
sub
cmp
xor
cmp
mov
jno
es
psrad
pop
and
mov
pop
out
nop
and
mov
xchg
xchg
sar
or
jmp
repnz
lret
mov
or
add
sub
mov
sub
and
ljmp
xor
dec
in
sub
mov
add
xchg
jbe
pop
and
add
cmc
mov
fcmovnu
aad
dec
ficoms
cmp
fdivrl
movsl
pusha
mov
or
stos
stc
imul
dec
or
fs
je
xchg
inc
mov
dec
dec
das
dec
stos
and
pop
loopne
out
xchg
lods
lret
repnz
mov
sbb
mov
jp
rcr
dec
sub
outsl
pop
pop
mov
rclb
aam
test
sti
inc
or
cmpsb
fdivr
pop
pop
inc
adc
or
push
adc
ds
js
xchg
mov
jp
stos
inc
clc
mov
rcl
ja
shl
stos
fmull
add
jns
mov
cmp
or
mov
cs
xchg
jmp
aam
sub
arpl
add
or
jns
mov
bound
mov
jo
pop
arpl
adc
mov
jne
or
mov
icebp
cmpsl
mov
in
sub
sub
dec
or
jo
mov
scas
or
lret
sbbb
cmp
xor
stc
nop
xor
jns
xchg
aad
mov
fimull
incl
dec
push
add
std
sarb
or
ror
sub
movsl
int3
and
fnsave
test
out
insb
jns
mov
lret
adc
stc
ret
push
loopne
jns
push
fnstenv
cltd
sti
gs
fdivs
add
into
imul
mov
inc
dec
cltd
das
sub
xchg
jo
scas
lret
xor
and
loopne
rol
stos
daa
mov
push
mov
jl
push
jl
pusha
push
xor
out
inc
inc
pop
jnp
sub
push
test
inc
xlat
xchg
xchg
cmc
mov
mov
sbb
mov
push
sahf
lods
cmp
xlat
sub
lods
aas
dec
test
test
push
lret
insb
mov
test
push
imul
pop
insl
mov
rorb
lds
jg
jnp
daa
adc
mov
pop
cmc
cmc
add
ds
jb
hlt
ss
xchg
and
add
jmp
dec
aam
scas
cmp
xlat
dec
das
cmp
loopne
dec
inc
int
loope
jl
pop
mov
pop
push
sbb
or
mov
stos
adc
adc
mov
mov
dec
cs
jge
nop
mov
add
bound
insl
lods
xor
negb
jb
enter
ljmp
jg
stos
scas
pop
xor
push
iret
pushf
mov
ficoms
ret
fcompl
mov
xor
add
sub
dec
or
mov
pop
mov
mov
arpl
pop
adc
test
push
stc
xor
out
inc
jl
rorb
fs
ljmp
sbb
xlat
fnstenv
in
adc
push
mov
fisttpll
jle
bound
je
xchg
push
imul
outsl
mov
loop
xor
and
and
imul
lahf
mov
addr16
adcl
add
jno
cmp
idiv
or
fadds
jp
test
pop
adc
push
repz
jne
cld
sbb
imul
ljmp
pop
pushf
cltd
cmpsl
xchg
jbe
xor
loopne
jbe,pn
mov
std
pop
xor
clc
dec
add
xchg
loop
cltd
xchg
fistpll
fdivrl
fsubp
jnp
xchg
lahf
mov
ret
lcall
mov
mov
das
pushf
testl
dec
cmp
dec
jno
sbb
push
inc
cmp
push
dec
mov
mov
loop
inc
hlt
sub
out
loopne
outsb
movsb
sub
sub
jno
or
adc
lock
outsl
out
into
scas
orb
ljmp
ljmp
punpckldq
or
push
xchg
mov
adc
mov
imul
cmp
inc
jmp
pushfw
lds
fs
dec
jl
andb
add
sub
add
xlat
add
scas
push
push
in
shl
mov
test
adc
hlt
or
into
cmp
cmc
out
pop
or
sti
in
stos
add
xchg
fdivrs
cld
filds
int
mov
sbbl
mov
xor
push
jno
push
mov
push
mov
fsts
stos
push
jb
sub
push
xorb
lret
int
test
not
dec
mov
hlt
adc
cmc
clc
sbb
xor
pop
xor
scas
les
cmpsl
mov
pop
clc
cmp
cs
mov
sub
inc
mov
adc
test
pop
dec
cmp
lcall
push
xor
lahf
int3
adc
cmpsb
lret
add
aaa
xchg
hlt
insl
out
das
popa
inc
pop
mov
enter
clc
mov
daa
std
out
inc
inc
enter
test
xlat
xor
mov
add
icebp
enter
and
call
into
rcll
dec
scas
cmp
mov
das
popf
push
jecxz
lcall
xor
lea
adc
cmpsl
add
outsl
lret
loope
fists
addr16
pop
xchg
pusha
sub
bound
inc
jmp
cli
ss
lahf
mov
sbb
sbb
pop
insb
arpl
pop
xchg
add
jb
sub
movsl
or
xchg
dec
xchg
or
xlat
test
mov
js
xor
gs
aad
mov
dec
sar
push
cmpb
jl
sbb
das
fbstp
inc
or
xchg
or
pop
ret
adc
in
aaa
scas
dec
jns
mov
mov
and
mov
inc
arpl
xor
jp
pop
popfw
jb
cmp
dec
lock
mov
icebp
pop
js
lods
add
lods
or
xchg
aam
jge
daa
adc
jl
add
insb
inc
mov
jbe
pop
ss
aam
jmp
inc
cmp
repnz
xchg
aas
mov
lahf
fcompl
lcall
adc
push
mov
testb
xor
stc
push
dec
cmp
cmp
rorb
in
push
dec
sub
sbb
imul
xchg
test
mov
mov
inc
stos
cs
dec
js
mov
ja
add
cs
pop
mov
outsl
cltd
jl
pop
lcall
cltd
jnp
int3
xchg
xchg
ror
push
cmp
adc
jo
inc
movb
out
testl
lahf
sub
xchg
dec
xchg
sbb
mov
push
xchg
addr16
adcb
rcrl
das
mov
push
test
dec
aam
mov
sbb
jg
fimull
test
adc
pop
dec
cmc
repz
je
nop
sahf
in
push
repz
vunpcklps
push
add
mov
pop
and
aaa
dec
lods
lahf
stos
mov
or
xor
add
and
sbb
dec
jle
adc
push
mov
imul
ljmp
std
inc
movd
lea
cli
flds
movsl
dec
ja
and
xchg
mov
and
cmp
int3
xchg
mov
dec
jmp
shrl
inc
mov
cmp
add
imul
sti
bndstx
imul
jp
cmp
test
icebp
mov
fadds
data16
stos
insb
add
std
addr16
or
mov
stos
mov
push
jl
pop
frstor
jnp
dec
jns
sbb
outsb
cmp
add
scas
cltd
inc
dec
dec
and
mov
jbe
movl
aam
inc
inc
xor
pop
fwait
mov
pop
addr16
adc
and
xchg
out
int3
push
ss
or
push
ret
je
adc
jle
add
ss
add
aas
in
pop
aas
aaa
pop
adc
ror
call
push
mov
cmp
in
dec
inc
cmp
cmp
and
fdivl
jbe
repnz
and
test
jp
cmp
fisttps
push
jns
sub
push
inc
lods
xor
dec
xchg
cld
xor
push
sbb
pop
and
push
add
xor
mov
lahf
inc
jae
leave
add
in
in
push
mov
inc
adc
aas
fsubs
sahf
xchg
lods
fisubl
cwtl
push
pop
inc
add
outsb
xorb
xchg
sahf
push
popf
aam
aad
insl
jbe
or
push
and
xchg
mov
jp
mov
popf
ret
dec
jne
leave
bnd
jl
sub
ja
add
mov
inc
fs
sub
pop
or
mov
sbb
mov
das
shlb
adc
add
dec
mov
mov
loopne
lret
inc
jnp
repz
in
jbe
fcmovnb
pop
and
jae
fcoml
xor
and
sar
or
mov
xchg
and
sbb
xor
pop
push
bound
add
loopne
adc
insb
and
or
test
imulb
and
dec
pop
lods
inc
lods
mov
dec
push
jo
cmp
scas
add
add
jl
mov
jno
jmp
cmp
pop
jno
sbb
ret
cmc
add
sub
and
mov
iret
pop
out
test
xchg
mov
les
imul
stos
push
jecxz
sti
movsl
inc
inc
jecxz
xor
imul
cld
pop
jg
in
test
cmp
push
mov
and
sar
cltd
push
repz
jl
push
pop
add
inc
jo
sub
das
cli
jo
push
out
xor
jle
out
cltd
jg
mov
lods
fdivrs
stos
mov
test
dec
mov
dec
adc
mov
lock
inc
loop
add
pop
inc
inc
xchg
xchg
scas
mov
sbb
add
ljmp
pusha
sbb
aaa
hlt
lods
in
jns
ds
in
pop
sub
sub
jae
subb
jp
sbb
and
imulb
in
pop
scas
and
lods
jo
js
ds
xorl
push
mov
dec
cmp
imul
ficoml
inc
lock
imul
xchg
divb
iret
inc
cmpsb
fidivl
in
adc
test
into
nop
inc
add
sub
vphaddubq
ret
stos
dec
popf
push
mov
xchg
xchg
cmp
adc
dec
std
sbb
xor
adc
cli
cmp
arpl
cmp
insl
and
inc
sahf
fprem
mov
int
mov
not
int3
pop
adcb
std
rcrl
bound
mov
inc
das
xlat
mov
lds
andl
xor
jo
or
scas
or
inc
nop
test
ss
jmp
lret
add
adc
hlt
mov
mov
lret
inc
inc
cs
pop
enter
aad
xchg
push
aad
lock
and
ret
pop
es
mov
stc
fcompl
jbe
dec
lds
dec
or
inc
jp
cli
mov
notb
call
mov
dec
pop
mov
lock
cmpsl
cmp
outsl
push
inc
subb
xchg
sbb
test
xchg
inc
jmp
mov
test
sub
mov
sbb
lods
scas
lods
rorl
and
adc
inc
enter
mov
fsubs
dec
mov
js
fisttpl
call
fs
fcoml
jmp
sub
dec
out
cmc
out
xchg
movsl
jb
inc
dec
cmp
mov
ss
xor
jp
ret
leave
pop
lret
popf
mov
pushf
sbb
hlt
fwait
arpl
imul
adc
ja
inc
jl
into
and
mov
call
shl
in
movsl
xor
pop
mov
mov
stc
fmuls
xchg
outsb
neg
xchg
in
mov
inc
push
mov
int3
inc
cmpsb
mov
out
sub
into
enter
sbb
mov
sti
loopne
nop
frstor
cmpsl
mov
test
xchg
std
andb
adc
push
push
fs
loop
or
push
das
add
orb
outsb
aas
testl
mov
pop
inc
sbb
dec
enter
and
notb
jae
mov
xchg
or
lods
cli
mov
shlb
or
mov
cmp
cmc
mov
cmp
ror
addb
dec
cld
and
sahf
xchg
popf
clc
jp
ja
sbb
mov
icebp
pop
mov
mov
shrl
sbb
and
repz
int
pop
enter
sub
dec
fsubrl
pop
mov
xlat
bound
insl
daa
jg
jecxz
adc
xor
push
icebp
sbb
dec
outsb
or
into
jnp
pop
in
jnp
sub
stc
in
mov
fwait
and
or
mov
xorb
add
sahf
movsl
mov
in
sbb
mov
cmpsb
jo
sbb
xor
leave
lods
xor
sahf
xor
jb
lods
sbb
pop
scas
sub
xor
fdiv
xchg
jb
mov
jbe
add
subb
jne
add
iret
int
negl
dec
out
xor
and
inc
jecxz
decb
clc
call
and
std
aas
cmpsb
pop
jp
fbld
lods
xor
imul
scas
sub
inc
pop
fmul
cli
imul
mov
stos
testl
pop
cmpsl
sbbl
in
test
mov
sbb
mov
rcll
icebp
mov
shll
jg
js
cmp
inc
mov
dec
stc
pop
ret
mov
jle
mov
mov
clc
pop
rorl
mov
add
mov
jg
sbb
pop
out
xchg
jl
cli
movsb
add
adc
es
mov
mov
in
pop
inc
cmpl
adc
push
fwait
ja
loopne
sbb
loope
lods
testb
adc
mov
icebp
insl
or
test
test
pop
sarl
jae
mov
stos
xchg
add
popf
jnp
mov
shll
int3
xchg
stos
gs
out
test
jmp
addl
scas
or
movb
cmp
mov
jg
dec
sti
add
xchg
xchg
pop
fisubrl
cmp
loopne
xor
xor
lods
dec
dec
std
scas
mov
sbb
psubsw
xor
fistl
inc
xor
stos
cmpsl
sbbb
mov
jbe
mov
push
push
cs
repnz
arpl
repnz
movsb
out
movsl
jmp
insl
xor
popf
jb
into
mov
fldenv
roll
inc
adc
aam
fidivl
sub
and
adc
jp
inc
push
mov
inc
push
popa
adc
icebp
jbe
sarl
xchg
xor
in
or
call
jmp
xchg
dec
or
rclb
std
notb
imul
cltd
imul
loopne
jl
mov
jge
insb
xchg
popa
decb
sub
fisubl
sbb
out
fldt
inc
jecxz
lock
fdivrs
xchg
inc
cmp
add
out
mov
push
cltd
es
data16
ja
push
jne
sub
push
stos
sub
iret
ficoms
dec
ret
fcoml
ljmp
mov
add
cmp
cld
into
insb
push
mov
aam
cmp
arpl
ljmp
data16
test
out
push
and
xchg
imul
cmp
jle
in
out
repz
adc
jbe
std
inc
loopne
mov
int3
ss
adc
sbb
or
jmp
cmpsl
js
sbb
jecxz
mov
iret
cmpsb
xchg
push
mov
lea
pop
xchg
jb
jbe
cltd
dec
in
xchg
mov
xchg
test
rorb
cmp
and
inc
jae
testl
jmp
cwtl
and
mov
insb
mov
or
dec
js
sahf
adc
imul
or
les
cltd
outsb
cwtl
idivl
jle
xchg
fildll
sbbl
out
lods
ljmp
loop,pn
insl
aam
test
ret
mov
or
cmp
mov
or
sub
repz
hlt
or
shlb
pushf
movb
sub
ds
pop
ss
pusha
hlt
idivb
add
jg
fadds
out
pop
loop
inc
sub
sbb
cmc
popf
iret
movsb
fidivs
outsl
popa
push
mov
shlb
xchg
iret
leave
imul
mov
test
sub
dec
int3
xchg
adc
inc
stc
pop
jge
lods
and
iret
ljmp
push
pop
mov
int
and
add
lret
xchg
jl
cmpsb
neg
mov
inc
lcall
mov
push
out
push
mov
mov
dec
dec
push
jno
popf
pop
dec
pop
adc
or
inc
jmp
lds
repz
mov
jge
addr16
adc
std
ret
xchg
pop
ret
jno
inc
dec
into
jle
xchg
aaa
push
cmpsl
mov
push
enter
cltd
fiaddl
and
cmp
lods
mov
pop
loop
gs
popf
cli
xchg
shrl
push
rolb
pop
mov
add
xor
jge
cmp
cmpsb
daa
nop
push
mov
sbb
arpl
movsb
jl
call
imul
jg
out
aam
mov
leave
in
jne
or
addb
mov
jbe
nop
pop
movsb
mov
mov
mov
in
iret
lret
clc
test
scas
mov
stc
leave
mov
aad
gs
add
dec
push
lds
ljmp
sub
movsl
push
or
sbb
insl
stos
add
cmp
aaa
inc
add
sbb
pop
push
js
pop
or
cmp
cwtl
mov
es
jmp
shlb
sub
in
and
das
idiv
adcb
fbld
and
mov
aaa
mov
mov
addb
dec
or
fldcw
push
pop
mov
dec
sub
ljmp
cmp
xchg
loop
pop
aam
out
shrl
sbb
notb
jnp
inc
pop
and
xor
cmpl
jp
orb
and
adc
dec
push
jbe
push
push
and
lock
and
popf
mov
leave
in
cwtl
xor
pushf
je
mov
mov
stc
mov
mov
xchg
or
jmp
or
daa
or
out
cltd
lahf
cmpsb
mov
mov
mov
mov
pop
ljmp
hlt
mov
xchg
leave
pop
jne
rcrl
jo
push
inc
sahf
push
push
sbb
loope
jb
dec
test
pop
jns
xchg
movsb
imul
sub
test
mov
pusha
inc
es
lds
pop
mov
hlt
dec
and
xor
mov
dec
inc
dec
cli
push
out
or
jmp
adc
ret
lret
and
popf
je
jns
in
xor
into
cmpsb
sahf
cwtl
sbb
lret
jp
push
xor
xor
mov
iret
sub
outsb
outsl
mov
or
fisubrl
test
dec
xchg
inc
ret
jle
negb
and
xchg
jbe
jecxz
mov
test
xchg
fistl
sub
inc
jbe
movsl
out
int
jae
cmp
xchg
mov
inc
fstl
repz
inc
out
movsb
dec
pop
jnp
dec
pop
cmp
mov
or
lds
mov
loopne
or
mov
push
roll
arpl
mov
vmovntps
inc
mov
adc
outsb
add
aad
cmp
int3
push
imul
loope
int
stc
or
and
lret
les
roll
stc
repz
mov
or
cmp
loop
cmpsb
cmp
or
cmpsl
aad
cmp
push
jle
ds
pop
lret
xor
daa
xchg
inc
mov
xchg
cmpsl
cmc
pop
je
jl
int3
cltd
mov
or
add
mov
mov
or
fcomip
xlat
aam
leave
in
or
cmc
int3
xlat
sbb
test
mov
xchg
adc
repz
inc
fmuls
outsb
loop
stos
mov
add
push
or
push
popa
out
rorb
mov
mov
mov
push
mov
sbb
jbe
out
mov
sub
inc
aam
stos
imul
addr16
in
xchg
xchg
test
in
push
js
xor
les
fildl
pop
sbb
inc
fiaddl
pop
lea
sbb
mov
shr
sbb
je
xlat
out
xor
mov
or
sub
mov
adcb
cmc
adc
push
or
loop
pop
cmc
sbb
movsl
and
cwtl
sbb
pop
mov
jmp
or
sub
or
aas
scas
xor
test
rol
test
cmpsb
mov
xlat
test
add
push
or
rorb
rep
outsb
mov
cmp
xor
push
lret
xor
shlb
movsl
cmpsb
cmpsb
popa
sub
adcb
out
pushf
ljmp
iret
les
scas
in
jnp
sub
push
xchg
inc
leave
fstl
lcall
jge
push
fidivl
jle
sbb
test
subb
cmp
or
movsl
sbb
sub
out
movsb
in
cmp
mov
dec
sbb
sub
cwtl
sbb
add
jae
push
mull
fisubl
lahf
int3
or
sub
adc
movsb
ja
int
jo
lcall
or
loope
sbb
mov
ret
sbb
inc
fists
inc
inc
test
mov
jns
mov
push
jo
xor
mov
scas
or
mov
push
cli
mov
jo
popf
push
icebp
in
adc
int3
mov
cltd
orb
adc
std
addr16
out
aas
cmpb
addr16
mov
cmp
cmp
dec
jne
dec
pop
stos
inc
dec
dec
cltd
in
loop
cmp
mov
cmp
or
push
add
sbb
sub
es
pop
jmp
sbb
aas
fiaddl
sbb
test
loopne
js
lods
loope
jno
pop
jno
sti
push
mov
mov
mov
scas
add
out
push
mov
pop
pop
or
xchg
adc
pop
stc
sub
popa
pusha
incb
call
hlt
dec
push
and
mov
and
fs
mov
inc
push
fs
add
jl
adc
mov
icebp
rep
loopne
inc
ljmp
mov
mov
xchg
or
xor
sub
cltd
addr16
pop
fdiv
das
sbb
aad
lds
sbb
push
mov
xor
cwtl
loope
pop
jge
inc
es
sbbb
or
in
pop
mov
ss
ret
repz
pop
rcll
dec
mov
mov
push
push
test
jae
pusha
cli
xor
cltd
lods
into
loop
enter
sub
dec
push
mov
add
pop
add
rcrl
mov
dec
mov
pop
jbe
addr16
leave
xchg
cmp
jl
cmpsl
xlat
ds
add
loopne
dec
sbb
sti
mov
sub
mov
mov
arpl
push
stc
mov
fs
mov
xor
int3
out
adc
xchg
shlb
sahf
pusha
fdivp
fxch
cmovs
lods
mov
ret
sahf
insb
sbb
mov
xchg
sub
dec
out
dec
or
xor
mov
mov
jmp
xor
gs
sbb
movsb
negb
imul
adc
aam
mov
repnz
ret
aam
stos
addr16
cwtl
popa
and
cmpsl
mov
pop
push
dec
mov
ljmp
fs
jae
out
add
jb
pop
push
add
loope
popf
add
nop
xchg
std
mov
and
test
sub
mov
cmpsl
xchg
int3
xchg
bound
mov
push
addr16
popf
test
dec
dec
clc
xchg
dec
int3
mov
out
pushf
aaa
fmuls
mov
fwait
xor
cmp
sbb
sbb
out
gs
dec
adc
ret
push
add
mov
loope
ret
mov
fsubrs
aad
clc
jne
mov
jae
sbb
adc
add
sbb
gs
cmp
mov
outsb
aam
lds
jae
xor
or
add
subb
inc
mov
push
sarl
jno
xchg
fidivrl
mov
dec
jmp
cli
in
cmp
test
cmp
cmp
mull
arpl
or
addb
xor
mov
mov
mov
mov
outsl
lds
xchg
fwait
mov
push
fdivl
enter
xchg
aaa
inc
xor
in
mov
xor
jnp
mov
enter
dec
mov
stos
push
push
fnstenv
mov
pop
mov
jno
fsts
sub
pop
fwait
pop
jns
fcoml
test
pop
mov
mov
adc
outsl
std
adc
dec
in
xchg
and
jae
into
cli
jnp
sbb
pop
mov
mov
xlat
fld
mov
ss
aam
mov
jbe
xor
popa
gs
add
sbb
dec
aaa
outsl
mov
lods
or
test
dec
aaa
sub
and
pop
mov
sbb
leave
insb
sub
mov
adc
push
jmp
sub
or
pop
and
mov
insl
popf
scas
dec
mov
adc
or
movsl
xor
sarb
daa
add
push
jo
fucom
and
leave
mov
and
pop
or
lods
test
shrb
dec
in
jnp
jnp
popa
or
pop
in
mov
mov
mov
xchg
clc
aaa
popf
or
insb
push
sub
lret
push
push
sub
ja
or
ss
lock
add
cli
daa
or
dec
lret
dec
inc
test
imul
cli
sbb
mov
scas
add
push
push
jae
addr16
sbb
lock
shll
scas
sahf
dec
daa
daa
movsb
dec
aaa
push
xlat
gs
testb
mov
insb
add
cmp
pushl
add
stos
dec
pop
mov
iret
pop
cmp
lods
ja
cld
sub
loop
aaa
xor
outsb
enter
pop
sbbb
push
fisttpl
xchg
cmpb
dec
dec
mov
cs
xchg
filds
ljmp
xchg
mov
sub
jge
nop
gs
int3
pop
and
dec
fidivrl
aaa
fnsave
inc
and
dec
push
sub
nop
clc
or
push
sbb
mov
imul
jg
add
dec
enter
jns
out
aad
cmp
push
dec
int
stos
mulb
xor
loopne
pop
sbb
mov
or
push
sub
adc
test
divb
mov
arpl
add
or
xchg
das
mov
out
outsb
sahf
cmp
jmp
pop
pop
mov
loope
or
in
jb
lcall
js
test
xor
in
sbb
iret
aam
mov
mov
subb
es
inc
sahf
out
pop
fcoms
subb
xor
mov
cld
jmp
adc
push
dec
pop
add
or
shll
dec
insb
mov
jge
mov
push
cmp
or
add
shll
mov
xlat
lods
stos
xchg
adc
sahf
repz
xor
or
outsl
int
mov
and
mov
loopne
xchg
in
jmp
add
xor
stc
int
fisubrs
jns
in
mov
out
push
push
xchg
mov
out
sbb
fldl
mov
stc
cmpsb
sbb
test
shlb
pop
je
push
jbe
loop
daa
push
adc
mul
cmpsl
data16
cltd
fwait
lea
divl
adc
xor
push
cli
jmp
insl
sbb
fcmovnbe
out
and
xchg
mov
jae
popa
inc
in
adcb
add
cmc
shrb
add
aam
int
xchg
fwait
xchg
lock
push
outsb
xchg
pop
push
inc
jmp
xchg
int
sub
pop
pop
and
movl
dec
leave
arpl
cmp
push
fldl
dec
sub
rcr
idivb
mov
mov
mov
adc
stos
rclb
xchg
mov
inc
or
or
std
pop
into
sbb
cmpsl
lods
vmulps
sti
xor
lcall
data16
icebp
xchg
jecxz
push
mov
or
out
push
shr
sbb
pop
or
fcoml
lret
fimuls
inc
jl
mov
cltd
or
mov
add
popf
mov
stos
push
sarl
jne
sahf
adc
ret
pop
lea
pop
mov
xchg
into
mov
icebp
sti
dec
xor
in
or
sub
push
scas
xchg
pop
inc
stc
mov
or
sub
pop
and
repnz
clc
mov
cli
sub
xor
push
insb
movsb
sbb
mov
cmp
std
mov
cwtl
add
lock
test
jmp
gs
lock
xlat
cs
jp
cmp
lahf
jae
mov
xor
shrl
inc
stos
jnp
lret
mov
cltd
andl
dec
pop
fcomp
add
std
in
push
out
fnstcw
pop
cmpsl
es
jb
outsb
out
ficoml
sbb
in
int3
or
dec
andb
loop
ljmp
arpl
stc
pop
mov
sbb
mov
inc
std
cld
pop
adc
add
repz
mov
sub
pop
xchg
loopne
adc
push
cmp
push
mov
loope
xlat
jp
cmp
adc
sub
sbb
pop
popf
jns
adc
iret
adc
in
xlat
pop
sub
addr16
test
push
lret
xor
push
and
mov
daa
adc
xorl
mov
and
and
sti
adc
jno
jne
dec
movsb
xor
push
mov
adc
xlat
adc
mov
hlt
scas
insb
jo
cmp
push
inc
or
insl
popa
out
pop
jp
mov
jo
fsubl
sti
xor
inc
mov
das
xor
loop
aaa
and
add
sbb
sub
jno
xlat
sahf
sbb
sub
inc
cwtl
inc
nop
stos
sub
movsb
mov
aad
sub
pop
fs
and
das
lods
pop
xchg
sub
loop
leave
add
inc
mov
dec
cmpsb
out
xchg
stc
lock
xchg
or
movsb
and
std
addr16
cmpsb
gs
sbb
pop
mov
pop
push
and
cli
and
xchg
fisttpl
mov
shlb
out
je
sub
push
xlat
mov
mov
xchg
fwait
test
xchg
jge
icebp
jp
mov
and
push
icebp
pop
adc
sub
inc
cltd
outsl
pop
repnz
or
lds
push
enter
out
ljmp
jecxz
sbb
mov
mov
pop
push
out
test
rcrb
add
jnp
iret
mov
arpl
cs
rcl
push
or
jmp
js
mov
sbb
dec
cmc
decl
dec
lods
sbbl
stos
push
pop
scas
mov
mov
jns
inc
push
pop
cwtl
icebp
in
push
dec
xor
jno
aas
mov
add
cwtl
adc
lea
and
push
jbe,pt
call
outsb
dec
fists
insl
imul
and
jns
mov
in
mov
rorb
pop
dec
push
pushf
clc
in
xchg
and
hlt
int
cmp
cmp
and
daa
nopl
mov
sub
push
jle
and
inc
jmp
out
xchg
testl
bound
outsl
and
ljmp
shrl
add
lods
push
subb
jg
jnp
insb
sub
scas
dec
ja
inc
cmpsl
movsb
xchg
test
daa
cmpl
xchg
jl
lahf
lods
popf
cmp
dec
cli
in
ds
repz
cwtl
pop
int3
adc
pop
fwait
dec
cli
movsl
mov
fmuls
popa
iret
mov
lods
xchg
jns
repnz
jge
jbe
mov
cmp
lock
ss
pop
xor
ret
xlat
mov
sbb
mov
add
loopne
sub
nop
and
inc
pop
cmp
xor
inc
adc
or
push
daa
lods
cmp
or
xchg
pop
cld
and
inc
lods
and
xor
cmp
xor
das
fdiv
jge
pop
shlb
cmc
testb
mov
adcl
jmp
jmp
or
sbb
push
push
cs
mov
jg
insb
daa
xchg
add
mov
outsb
and
daa
inc
mov
add
sub
cmc
vucomiss
ss
fisubrl
xchg
ret
movsb
mov
out
xchg
mov
mov
movsl
out
or
cmp
aad
xor
test
push
lret
xchg
test
mov
push
sub
mov
lea
stos
scas
push
xchg
mov
lock
adc
xchg
dec
xor
das
leave
jnp
mov
push
jnp
cmp
mov
jp
cmp
xchg
push
sbb
mov
add
cmpsb
shll
ljmp
sub
add
fwait
stc
sub
in
add
lret
mov
jecxz
sbb
mov
cmp
orl
icebp
repnz
popf
and
xorb
xchg
call
fdivs
sub
sbb
ja
push
xlat
cs
test
pop
push
mov
cld
and
pop
out
cltd
int3
push
sub
jo
adc
adc
js
movsb
or
pop
adc
test
rorb
mov
mov
ret
dec
ficomps
out
outsb
mov
sbb
test
pusha
mov
xor
lock
jl
and
adc
shrb
or
lods
cmp
int3
fbld
es
out
fsub
dec
mov
jmp
or
loope
icebp
xchg
xlat
and
mov
mov
lods
inc
fdivr
mov
loope
push
mov
push
dec
dec
ficompl
sbb
out
fsubp
pushf
in
xor
jecxz
stc
pop
push
cmp
int3
sub
clc
mov
sbb
cmp
out
popf
roll
pop
js
jae
lock
repnz
push
test
out
jnp
sahf
push
outsl
imul
test
out
int
movl
add
jecxz
mov
popa
not
insl
out
imul
mov
lea
leave
pop
jae
loopne
data16
cmp
jmp
jnp
sahf
shrl
ficoms
aas
xchg
stos
imul
sbb
aas
aad
int3
sub
test
addr16
xor
call
orl
hlt
lcall
sbb
jae
fsubrl
imul
push
imul
in
add
inc
pop
loop
das
xor
cmpsb
leave
sub
rcrb
mov
test
mov
in
dec
repnz
gs
jb
pop
cmp
pop
in
xchg
shrl
ret
dec
mov
add
adc
out
pop
sbb
test
pop
or
dec
les
daa
mov
out
insl
add
fidivs
js
inc
cli
mov
movsl
dec
out
test
mov
ja
repnz
ret
xor
daa
loope
clc
xor
rcll
ljmp
nop
mov
cmpsb
fwait
mov
and
xor
cwtl
std
dec
mov
movsb
jb
push
push
cwtl
sub
push
push
ret
sbb
in
dec
sub
lea
nop
sbb
in
test
xlat
leave
and
mov
daa
cmp
in
arpl
ljmp
les
sub
xorb
fiaddl
popf
mov
enter
add
loop
lods
adc
jmp
mov
inc
xor
dec
mov
rorl
repz
lods
pusha
inc
lods
notb
xchg
fstl
outsl
mov
sub
xchg
push
xchg
mov
adc
orb
cmc
les
cmp
imul
in
das
imul
movsb
mov
aaa
test
adc
and
push
or
mov
mov
popa
fldcw
sub
xor
loopne
call
repnz
ljmp
outsl
push
inc
rolb
pop
xchg
mov
pushf
orb
inc
je
jne
adc
jle
add
sbb
es
xchg
adc
lea
inc
cmp
inc
jl
lock
loop
mov
pop
je
mov
leave
push
push
sahf
outsb
mov
push
lods
test
loopne
jmp
mov
push
arpl
je
adc
ret
dec
jl
pop
cmp
lods
call
mov
loope
pop
sbb
hlt
sbb
scas
xchg
outsb
sub
aad
cmp
ljmp
mov
scas
roll
in
jle
cmpsb
imul
fcomps
cwtl
lret
mov
divb
popa
xlat
pop
mov
in
movb
cli
lcall
icebp
call
mov
filds
sahf
loop
and
inc
dec
add
sbb
js
cwtl
lock
push
frstor
adc
push
add
jnp
les
lods
in
js
mov
ret
inc
lahf
pusha
cli
fcomp
inc
push
inc
inc
push
or
dec
shlb
lds
int3
lret
fs
in
sbb
pop
cmp
pop
cwtl
xchg
pop
fistpll
or
out
aam
stos
aad
pop
decl
scas
cmp
xlat
sub
mov
fs
mov
add
ds
data16
push
or
xlat
ret
test
adc
and
popf
pushf
xchg
fwait
imul
push
mov
jo
jl
and
pusha
aas
xchg
shl
jmp
mov
xchg
addb
imul
out
jb
call
iret
xchg
jnp
insl
inc
int
push
xchg
aas
aas
int
jle
out
bound
xor
icebp
dec
push
subl
or
cld
lods
or
mov
or
dec
pop
xor
jb
out
dec
adc
movsl
adc
stc
or
jno
movsl
je
outsb
lods
inc
dec
mov
iret
jmp
add
cmp
pop
orb
clc
inc
aam
xchg
xlat
cmp
and
inc
shll
popa
add
inc
push
push
notb
and
inc
mov
pusha
shll
mov
sbb
flds
jnp
fincstp
jmp
je
icebp
jne
sbb
shrl
aaa
mov
jb
and
jnp
mov
or
and
and
xor
cmpsb
rorb
mov
pop
or
bound
mov
jp
sbb
popa
js
call
cmp
pop
ljmp
rorl
lahf
sti
xchg
mov
xchg
jp
mov
js
cmpsb
dec
sbb
icebp
push
test
fwait
and
in
adc
adc
xchg
ja
clc
cmp
aad
lret
mov
imul
ja
mov
test
sub
int3
xor
or
popa
jb
cmc
iret
shr
sbb
test
out
mov
pop
push
and
jnp
mov
mov
and
pop
sbb
push
jmp
sub
shll
dec
fmull
dec
cwtl
jnp
rcll
mov
dec
loopne
les
xchg
andb
sub
xchg
fwait
pop
lret
sbb
jl
push
pop
add
or
sub
cmp
inc
jle
into
xor
in
imul
add
ret
scas
outsb
testb
scas
ljmp
add
lods
mov
testb
lret
fwait
dec
mov
aas
jns
inc
lret
nop
or
out
jbe
int
adc
mov
les
imul
addr16
or
into
es
dec
sbb
push
sbb
and
xlat
sbb
hlt
add
ret
popa
add
and
aaa
inc
cmpsl
adc
fsts
mov
adc
sbb
aaa
call
mov
inc
stc
sbb
ss
in
mov
inc
pop
aaa
pop
mov
sbb
or
mov
xor
add
pop
jnp
mov
push
jb
mov
xor
ds
xlat
jae
cltd
and
and
xor
lret
loop
stos
push
dec
lahf
dec
lds
xlat
xchg
inc
jmp
or
dec
pop
mov
inc
mov
inc
mov
testb
scas
and
adc
das
adc
test
stos
xchg
aad
xchg
mov
js
mov
pop
adc
test
in
pop
int
shll
cmp
lock
xor
mov
xchg
push
and
aas
enter
push
sbb
or
add
nop
fs
mov
and
fimuls
jae
mov
ficoml
sbb
jmp
jl
jnp
mov
jl
popa
mov
push
movsl
movsl
enter
addr16
enter
xchg
cvtdq2ps
sbb
call
push
imul
cmp
or
or
push
push
pop
dec
enter
sbbl
cmp
jecxz
adcl
sub
push
sub
or
nop
adc
test
jae
inc
add
jg
adc
sbb
test
mov
nop
sub
mov
sub
jg
loopne
xchg
dec
mov
js
inc
cmpsb
inc
insl
xchg
les
aad
adc
sub
lahf
jnp
mov
lods
fld
mov
pop
adc
fisttpll
fimull
in
popa
inc
xor
fistps
push
xor
jge
mov
adc
stos
clc
jnp
and
outsb
lea
cmc
push
das
test
sub
jns
inc
scas
or
cwtl
je
mov
inc
adc
ja
pop
mov
scas
loope
mov
mov
scas
inc
jg
bound
out
shlb
nop
aas
les
stc
subl
addr16
in
stos
or
xor
repz
gs
imul
lods
sub
rolb
jae
jmp
jbe
sti
in
adc
and
add
jl
icebp
and
outsl
nop
dec
adc
inc
enter
cmc
arpl
pop
cmp
loop
jns
xchg
sbbb
cmp
popf
cmp
movsl
fisttpll
int
xchg
add
lock
test
out
mov
movsl
sub
out
out
into
negb
push
lds
nop
push
jbe
sti
fimull
dec
je
insl
test
inc
push
dec
dec
aas
icebp
sbb
fcompl
cmp
jmp
je
push
pop
sbb
data16
xchg
outsb
out
dec
cmp
loopne
lret
testl
lea
dec
mov
inc
push
and
jmp
xchg
in
push
ficomps
add
jle
mov
xor
in
shll
orl
popa
cmp
fcomps
pop
testb
sbb
dec
stc
inc
xor
cld
adc
push
out
mov
lcall
mov
xchg
jns
lock
jnp
rol
xor
xchg
and
stc
inc
mov
add
jbe
push
push
mov
ret
mov
dec
cltd
in
adc
leave
enter
cmp
dec
sbb
insl
or
leave
mov
pop
push
mov
jmp
dec
mov
aam
jno
xor
cmp
sbb
scas
or
rcll
lock
leave
pop
ds
jge
jl
hlt
mov
insb
sub
xlat
in
push
jbe
adc
mov
push
sub
insb
outsl
or
push
jl
jns
mov
in
jle
pop
notl
fwait
setno
insl
push
dec
adc
ljmp
and
fwait
push
flds
xor
sub
insl
sbb
aad
mov
mov
or
js
add
sbbb
pop
negl
mov
mov
mov
adc
and
push
sbb
sbb
pop
pop
data16
sbb
ljmp
fnstenv
and
aad
ror
jge
shr
jae
popa
stc
mov
mov
mov
push
add
xor
sbbl
test
sub
or
dec
pop
int
loop
inc
xor
mov
in
sti
push
jbe
ud0
pop
dec
adc
dec
lds
popa
cmpl
push
daa
mov
xchg
sti
pop
or
add
imul
testl
or
sarl
aam
pop
dec
cmp
sub
sub
xchg
and
test
push
mov
push
add
cmpsl
cmp
aad
mov
popa
out
outsb
mov
push
mov
cmp
push
adc
outsb
mov
aaa
nop
out
xchg
in
xor
sub
not
jbe,pn
shrb
mov
mov
xor
lcall
je
das
mov
jae
adc
inc
cmp
test
fmuls
repz
add
pop
sub
add
rclb
mov
or
shlb
mov
push
cmpsl
ljmp
adc
adc
ljmp
out
push
pop
int
sti
sbb
dec
push
add
mov
cmp
mov
ss
mov
repz
push
or
sbb
pop
cwtl
pop
cmp
pushf
lcall
aam
jns
inc
push
cs
rclb
rclb
mov
test
mov
mov
ds
lods
loope
adc
test
cmp
jmp
and
mov
add
push
stos
das
jg
jl
inc
dec
arpl
inc
push
icebp
pop
xchg
movsb
fstl
pop
mov
add
xor
lret
jl
inc
or
add
or
xchg
inc
jle
mov
sbb
popf
pop
mov
call
dec
inc
xlat
ja
jmp
repz
cmpsb
and
enter
mov
lret
popa
leave
out
inc
mov
mov
lods
push
add
push
loope
sti
fisubl
loope
gs
xchg
and
stos
sbb
sub
push
push
xor
fsubrl
les
jmp
les
pop
dec
loopne
mov
jmp
in
sub
pmuludq
enter
lea
sub
test
mov
aam
fcmovnb
push
inc
pop
or
push
pop
addb
push
int3
pop
aad
push
mov
dec
je
subb
xor
push
xchg
or
int
cld
sbb
aad
int3
mov
aam
mov
rol
repz
xor
mov
sub
xor
jge
pop
pusha
popf
add
fistl
xchg
xchg
testl
lods
dec
std
xchg
mov
test
jns
in
bound
dec
fistl
or
lock
pusha
popf
out
icebp
fistl
scas
adc
cmp
jg
outsb
insl
xor
sub
sub
cmp
f2xm1
addr16
add
inc
mov
and
pushf
push
jp
je
stc
sbb
pushf
leave
adc
and
sub
jae
or
cs
sarl
mov
aas
repz
mov
sarl
and
sbb
sbb
daa
push
js
xor
mov
mov
jbe
cmp
adc
or
outsb
sbb
ss
and
repz
or
jno
mov
in
insl
cmp
and
pusha
cmp
in
and
mov
andb
es
xchg
sub
dec
leave
pushf
addb
lret
adc
lea
mov
mov
cmpsl
sarb
sar
das
lret
jo
cmp
shrl
add
sbb
icebp
lea
sub
imul
dec
mov
push
dec
insl
pushf
jmp
je
mov
lcall
arpl
aad
push
xor
loopne
sub
push
jno
or
push
cmp
mov
cmp
lcall
aad
sub
in
loope
sbb
cwtl
rorb
add
push
out
push
push
and
jbe
xchg
cmp
jle
fcoms
jp
jb
test
ficoml
imul
mov
xor
negb
cltd
stos
lds
jge
aaa
pop
in
out
sub
in
xchg
sbb
divb
inc
mov
pop
hlt
xchg
and
bound
shr
adc
clc
mov
mov
sti
sub
shl
cmpsl
aad
ss
cmpsb
or
mov
sti
xlat
push
dec
adc
adc
movsl
cld
daa
adc
cld
cltd
js
and
loop
pop
cld
pushf
neg
outsb
outsw
sbb
ds
mov
flds
dec
out
loop
sbb
add
mov
lods
and
xchg
mov
lret
add
add
call
out
pop
fisttpll
push
outsb
mov
aaa
bound
add
pop
sub
pop
inc
cli
rcrb
xchg
js
shll
enter
addr16
mov
stos
rcrb
shll
xchg
mov
sbb
or
xchg
jge
notl
push
les
pop
jge
pop
push
pop
stos
pop
mov
pop
ss
add
push
xchg
nop
pop
cmpsb
scas
or
jecxz
ja
sahf
addb
out
jmp
ret
in
and
je
mov
pop
fsubrs
mov
jp
shlb
jb
push
aaa
imul
int3
jbe
adc
repnz
or
pop
add
adcb
scas
stos
hlt
repz
out
sub
sub
pop
imul
in
fucomip
nop
xchg
sbb
push
movsl
mov
loopne
fs
cmp
inc
mov
sub
shlb
sub
je
and
outsl
xor
jne
imul
cmc
lcall
je
push
and
iret
stc
mov
adc
mov
fisttps
xor
add
les
les
add
data16
das
lret
hlt
sub
call
ss
cld
pop
sbb
lods
in
xlat
jge
adc
mov
int3
pop
mov
inc
sbb
cwtl
stos
lds
insl
jmp
mov
inc
lcall
outsb
cmp
pop
loope
xchg
movups
fwait
dec
xchg
pop
inc
add
push
sbb
test
lds
add
pop
dec
sub
fninit
aad
jmp
mov
inc
jbe
icebp
xchg
in
movsb
popf
push
dec
inc
xor
ds
pop
cmp
mov
pop
mov
sti
push
push
push
lock
xor
sub
push
and
insl
mov
stos
sbb
sub
cwtl
add
ds
inc
sbb
and
cmp
outsb
into
arpl
sub
mov
roll
cld
jecxz
test
cmpsl
inc
ljmp
in
cmp
into
jge
mov
mov
adc
fisubs
jmp
or
mov
push
bnd
add
maxps
mov
scas
and
cmp
pop
jae
adc
shlb
jnp
push
push
call
ja
pusha
and
jg
pop
sarb
sbb
xchg
dec
push
push
dec
jle
sub
dec
push
icebp
lods
xchg
insb
lcall
dec
lcall
loopne
test
in
imul
sub
or
xchg
cmp
fidivrs
lret
cmpb
out
mov
int3
sub
sahf
cmp
or
mov
or
xchg
movsb
popf
aas
sahf
insb
dec
dec
dec
das
scas
pop
fs
push
divl
pop
push
out
cli
test
std
push
xchg
xchg
popa
add
dec
sti
mov
pop
pushf
mov
ljmp
lods
arpl
push
das
insl
lock
data16
mov
or
ret
dec
mov
mov
out
push
ret
xor
jg
mov
pop
xor
sub
mov
es
fdivl
push
ds
clc
jno
mov
xchg
roll
inc
test
movsl
das
movsl
mov
out
enter
pop
or
add
xor
jmp
ljmp
int
jno
mov
mov
int3
mov
lcall
outsb
mov
popa
aad
pusha
out
or
xor
lret
push
lods
pusha
shlb
sbb
out
lock
or
out
push
cmp
in
ljmp
xchg
pop
lret
clc
and
pop
cs
in
or
mov
lock
mov
add
and
sbb
push
sbb
fs
xchg
add
loope
push
hlt
jg
in
dec
scas
inc
jmp
aaa
repnz
xor
enter
rcrb
mov
jmp
and
xchg
pop
cmp
jbe
add
xor
sahf
inc
xchg
mov
adc
inc
or
dec
mov
add
dec
mov
dec
or
fwait
sbb
xchg
stc
push
mov
je
jecxz
and
pop
xlat
mov
mov
xchg
dec
mov
jg
out
movsb
adc
mov
inc
jb
ljmp
dec
in
inc
inc
loop
std
scas
xlat
mov
imul
lcall
mov
push
aad
ss
cmpsl
adc
jae
in
in
pop
dec
mov
jecxz
js
mov
push
shrl
repnz
clc
push
sub
mov
dec
cmp
add
mov
aaa
lahf
outsb
push
lret
xchg
imul
gs
mov
jecxz
es
mov
repz
or
cmpsl
lds
call
push
mov
dec
mov
fisubrl
cmp
cmp
aad
adc
mov
cli
out
cmc
iret
fdivrl
fcmovbe
loopne
mov
addr16
pop
or
in
pop
cli
mov
cs
adc
pop
mov
cmp
xchg
outsb
outsb
xor
movl
jecxz
pop
stos
fiaddl
mov
popa
popa
in
ja
out
and
fcoms
rcrb
inc
loope
imull
push
outsl
aad
adc
mov
movsb
and
jp
in
ljmp
call
push
mov
mov
jno
daa
in
int
xchg
scas
and
aas
lahf
mov
mov
xchg
push
jl
jns,pt
loope
popa
adc
mov
push
cwtl
cmp
or
imul
or
mov
lret
ret
add
or
push
sahf
insl
push
dec
mov
hlt
sbb
scas
or
mov
in
dec
or
and
cmpsl
pop
adc
mov
jecxz
imulb
pop
and
adc
sub
iret
cmp
ljmp
adc
push
inc
mov
lea
test
or
insl
cld
das
adc
xor
sahf
outsl
lea
xchg
hlt
sub
mov
lcall
pusha
mov
and
movsb
imul
scas
outsl
sahf
add
xor
push
out
fcmovne
adc
fcomp
jge,pn
mov
xchg
sub
addb
xchg
les
leave
lods
aaa
jne
xchg
int
inc
pop
es
adc
scas
cmp
cmp
mov
jns
data16
inc
cli
and
sbb
test
adc
popf
out
and
lock
pop
insb
leave
jmpw
and
aam
dec
push
pop
sti
ja
std
lods
in
xor
mov
xor
enter
dec
cli
xor
fdivrl
orb
mov
xchg
mov
sbb
lret
scas
mov
and
icebp
in
in
outsl
push
sbb
rclb
dec
pop
rorl
add
lahf
test
ret
icebp
or
fs
stos
jno
mov
inc
mov
mov
sahf
popf
xchg
loope
pop
inc
shrl
adc
xchg
test
out
in
and
in
sbb
sub
pop
popl
pop
int
fisttpll
mov
stc
out
mov
jg
xor
xor
sub
insb
mov
adcb
jns
or
push
mov
outsl
sub
mov
popf
cmpsb
mov
jmp
mov
lret
mov
stos
push
cmpb
mov
and
lods
cmpsl
movsb
in
call
xlat
lret
mov
imul
dec
adc
dec
mov
mov
jne
mov
clc
popa
stc
pop
sti
xor
xchg
movsl
jo
cmp
cmp
shl
and
push
jecxz
aad
cld
cmp
cmpsb
mov
sbb
jae
xchg
mov
mov
repnz
test
mov
icebp
push
xchg
jbe
mov
xor
sub
xlat
popf
jo
jno
pop
lods
push
repz
out
sbb
stc
add
inc
adc
xlat
cmp
cs
cs
das
sub
je
add
shrl
mov
xchg
and
rcl
movsl
sti
incb
xchg
cmp
dec
out
sbb
sub
inc
inc
mov
rolb
les
fldt
push
data16
add
jns
insb
loopne
sbb
shll
xchg
cli
pop
movsb
aam
sbb
or
xchg
mov
out
stc
out
es
fs
push
in
adc
inc
inc
adc
jmp
xchg
dec
icebp
jo
jp
mov
loope
sub
dec
sarb
insl
push
mov
cmpb
arpl
test
shr
fadds
cmp
mull
loopne
add
repnz
popa
icebp
jmp
inc
push
xlat
mov
and
popf
inc
push
testl
movsb
icebp
pop
xorl
jns
cmpsb
and
dec
aas
cmp
pop
mov
std
pop
loopne
arpl
movsb
mov
mov
pop
bound
add
jle
mov
lahf
mov
loopne
mov
xor
adc
xchg
mov
pop
or
frstor
jns
insl
pop
push
scas
adc
mov
mov
sub
xchg
test
pusha
call
xchg
dec
cmp
add
push
mov
jae
rcrb
fmull
sahf
xor
jns
fnstcw
xor
mov
dec
rcl
mov
adc
push
or
mov
push
mov
cmpsl
repz
shll
jae
dec
fsubr
mov
and
mov
inc
inc
jle
aad
sbb
mov
std
les
jmp
mov
rcrb
jge
test
dec
arpl
mov
je
pop
pop
jbe
or
fcomip
cmpsb
push
mov
clc
scas
push
sub
call
xchg
fs
int
rorb
hlt
add
lret
gs
mull
xchg
lea
enter
pop
mov
mov
jns
lea
jle
sub
mov
dec
mov
push
push
in
shrl
sbb
sti
std
cs
pop
push
pop
sub
xlat
inc
jp
mov
stc
sub
and
stos
hlt
andb
inc
in
xchg
leave
test
push
push
les
adc
jge
test
sti
dec
repnz
bound
fnstenv
push
fidivs
es
icebp
enter
push
int3
adc
sub
cmc
out
mov
arpl
inc
cmpsb
xchg
pop
pop
jns
out
sbb
or
les
movsl
mov
jmp
mov
shrl
lods
loop
and
push
pop
aaa
dec
call
adc
push
add
jecxz
add
imulb
and
js
lcall
in
icebp
cmp
add
cltd
dec
sahf
jp
xchg
dec
add
aaa
xor
pop
xor
cmp
mov
fiaddl
and
lods
imul
mov
cwtl
sti
adc
pop
xchg
and
cs
pop
test
and
into
sub
mov
adc
movsl
or
adc
out
adc
sahf
mov
gs
pop
inc
push
mov
xchg
and
daa
jbe
in
jno
xor
or
xor
repnz
adc
std
ja
pop
jae
lret
sub
push
push
inc
popa
adc
mov
lahf
adc
lods
cmpsb
adc
pop
lret
js
mov
jb
in
jne
pop
ret
cmp
fisubl
dec
stc
loop
data16
jnp
arpl
addl
sub
fbld
pop
jmp
jp
and
es
repnz
insb
scas
cld
pop
and
add
imul
mov
addb
scas
pop
aam
mov
jnp
cli
sub
dec
fwait
jo
adc
fmuls
je
test
lret
sbb
iret
xchg
dec
lods
mov
sub
jbe
int3
sub
mov
sub
mov
and
ret
std
enter
lds
cmp
jle
lds
xor
push
aad
mov
push
outsl
pop
fs
movsb
mov
mov
add
mov
mov
es
fmuls
call
and
pop
mov
mov
repnz
jg
imul
mov
dec
mov
imul
add
cmp
stos
js
jne
pop
popf
repz
jp
movsl
sarb
adc
sub
ljmp
dec
cltd
leave
repnz
cld
pop
adc
or
in
adc
ss
cltd
sub
jecxz
add
pop
sbb
and
pusha
mov
sbb
imul
and
fwait
mov
sbb
push
pop
add
jp
sub
push
fimuls
dec
dec
ja
mov
hlt
mov
into
jl
mov
jg
cmp
mov
ja
arpl
lea
scas
sti
je
aas
pop
fst
pusha
mov
xlat
frstor
out
shlb
loop
adc
sbb
std
sbb
or
arpl
je
insl
inc
cmp
push
cmp
mov
fcomip
inc
in
pop
mov
lahf
movsb
pop
ss
dec
jmp
rorb
rclb
pop
mov
out
and
loope
push
in
and
add
cmp
add
jno
les
xorl
add
adc
push
or
pop
daa
std
in
xchg
lret
pop
fisttpll
adc
jnp
adc
or
int
push
icebp
xor
iret
mov
jns
mov
mov
dec
adc
pop
fs
loopne
mov
sub
inc
push
jne
adc
or
jne
out
or
loope
mov
mov
aas
push
dec
mov
or
icebp
jo
clc
jecxz
mov
inc
jmp
imul
fadds
jg
dec
xchg
sti
mov
in
ret
enter
loop
adc
sti
sub
sub
xchg
sub
fwait
jmp
and
add
roll
ret
in
inc
sbb
xor
pushl
push
fbstp
cli
add
jbe
movsb
fdecstp
and
loopne
sub
inc
and
fs
movsl
cmp
pushf
sbb
fcmovu
notb
in
iret
mov
fbstp
ja
mov
or
pusha
sbbl
mov
out
jmp
das
and
inc
stos
repz
dec
stos
cmpsb
arpl
dec
mov
pusha
mov
loop
pop
das
addl
jb
xchg
dec
pop
xchg
sub
bnd
dec
cmp
pusha
lds
xor
pop
sahf
das
std
dec
xchg
mov
cmp
push
cmpsb
mov
bound
or
mov
xlat
cmp
out
sti
mov
cmp
orl
stc
or
cmp
outsl
gs
adcl
pop
cmp
std
daa
pop
mov
or
and
xchg
mov
fwait
int
cmpsb
and
cld
int
rol
loope
cmp
xchg
push
xchg
add
dec
testl
sbb
mov
sub
mov
fs
les
addr16
insl
adc
jmp
jne
adc
cmp
mov
out
sub
sbb
shll
dec
lods
inc
adc
lret
dec
adc
sahf
cltd
cmp
pop
cwtl
in
jecxz
das
scas
out
jge
cmp
fisttpl
sbb
sub
xlat
addr16
pop
mov
sbb
fldl2t
insb
stc
in
jmp
jae
push
xchg
andb
popa
dec
sbb
addr16
mov
rcll
mov
andl
inc
mov
aas
push
jg
das
sbb
push
lahf
subb
jp
subb
insl
lock
fwait
mov
imul
out
into
cmc
sbb
int3
les
jbe
in
jbe
insb
sub
cmp
jae,pt
orb
iret
out
int3
push
mov
aaa
daa
cltd
roll
out
dec
test
jp
xchg
sbb
sbb
sub
mov
and
mov
pop
jecxz
stos
push
test
rclb
push
movsb
mov
push
xchg
arpl
movsb
hlt
lods
sbb
sahf
mov
mov
jb
flds
xor
pop
xchg
adc
pop
rcrb
mov
jle
call
cmp
or
jp
pop
sub
int
jge
and
adc
fadd
push
lds
in
or
cmp
inc
lcall
add
scas
xor
jb
lret
mov
add
repnz
sbb
cli
and
inc
jmp
mov
push
jmp
pop
cmp
mov
adc
test
jae
sub
adc
test
and
mov
sbb
sub
les
ja
clc
dec
sub
jmp
inc
test
pop
daa
xchg
xorb
jo
inc
jns
jb
jne
iret
mov
orl
mov
or
fwait
adc
scas
cmpsl
jns
dec
xchg
push
mov
cwtl
ss
push
xchg
push
ret
xchg
jb
xchg
adc
dec
out
inc
roll
pop
sub
out
sub
mov
int
ja
dec
lahf
push
lds
fiadds
test
ljmp
in
push
sub
hlt
into
mov
lds
xorb
loope
sarl
into
test
loopne
inc
in
fisubs
addr16
add
shlb
shll
pop
sbb
fistps
sbb
jb
test
pop
lret
mov
push
fldcw
shrl
push
jbe
clc
lds
dec
fmull
or
test
out
lods
adc
out
mov
stos
xor
dec
rcll
mov
cwtl
lods
dec
xchg
pop
iret
jp
jge
rorb
or
icebp
ret
sub
out
iret
das
rcrl
ret
fs
jmp
pushf
mov
lods
iret
ds
inc
xchg
movsb
js
or
jmp
mov
in
push
pusha
dec
push
sub
inc
dec
mov
sub
push
xorl
add
jne
mov
jmp
add
dec
ds
lret
xchg
push
push
or
lods
jno
mov
pop
testl
mov
and
jno
mov
movsb
sbbl
pop
jecxz
xchg
lea
or
aam
inc
push
popf
outsl
rclb
xor
pop
rol
sti
cwtl
jno
sub
sub
pop
cli
xchg
sbb
rcrl
pop
arpl
cli
adcl
jg
xchg
jno
out
adc
cs
mov
je
hlt
or
dec
in
adc
jae
dec
fcom
js
insb
punpcklbw
iret
inc
push
rcll
xchg
mov
add
mov
mov
jg
xchg
adc
xchg
pop
addr16
inc
push
or
movsl
out
mov
ljmp
std
cmp
dec
mov
in
xchg
frstor
nop
addl
out
adc
jg
and
and
sbb
mov
inc
fildll
lret
test
mov
fldt
addl
adc
sub
fcomi
inc
sbb
sbb
lret
arpl
imul
cmp
cs
jb
rcll
or
sbb
inc
addr16
and
in
into
shll
xchg
mov
inc
cwtl
push
popa
je
rol
dec
xchg
ror
inc
pop
push
xor
repz
popa
mov
xor
jns
repz
lret
lahf
push
mov
in
push
idiv
outsl
mov
add
add
xchg
rcr
add
imull
imul
sahf
add
stos
loope
push
mov
nop
inc
daa
sbb
mov
out
outsb
subl
lret
push
pop
jbe
cmpsl
or
fs
mov
sub
and
jecxz
mov
pusha
mov
mov
iret
sub
xchg
int
mov
jecxz
mov
inc
aas
push
sbb
inc
popa
pop
xor
cli
dec
in
or
push
icebp
push
xchg
in
ss
hlt
inc
mov
fdivr
daa
add
test
repz
and
std
and
aad
fwait
lds
out
mov
inc
pop
jb
push
sub
jecxz
pop
or
fs
sbb
sbb
xchg
push
clc
cli
or
xchg
add
xor
je
mov
jge
fwait
xor
nop
xchg
xchg
xor
push
cmpl
and
sbb
call
dec
cmp
das
popa
mov
imul
cld
fdivrs
mov
sbb
ljmp
add
jg
call
loope
pusha
push
and
add
js
lock
cmp
jb
pop
in
call
js
rorb
outsb
sub
push
or
mov
inc
mov
pop
sbb
pop
ret
sbb
inc
mov
fidivl
or
xor
popl
lcall
xor
sar
imul
lcall
pop
mov
or
and
movsl
fnstenv
mov
ret
aas
mov
add
imul
cmpb
and
or
ds
shlb
and
and
xor
push
insl
lret
mov
cmpl
jge
leave
xorl
sbbb
dec
add
and
jp
js
rclb
pop
fisubrs
jmp
rorl
mov
lods
mov
scas
add
dec
sti
into
xor
hlt
lods
and
xchg
add
imul
add
mov
aaa
lea
jp
push
stos
lds
jo
push
enter
insb
loop
pop
push
jl
add
imul
pop
pop
mov
push
sbb
push
mov
dec
pop
test
sub
fwait
int3
int3
inc
pop
aaa
xchg
pushf
outsl
or
shl
push
loopne
xchg
or
aas
xor
or
fsubl
shr
push
push
and
fdivs
enter
inc
clc
jb
add
das
push
mov
test
xchg
dec
mov
lret
call
stos
xor
pop
and
int
xchg
je
rcr
cltd
jne
xchg
bound
imulb
sbb
aam
std
mov
scas
lahf
rclb
out
or
xor
push
adc
sub
inc
ret
push
push
or
out
xchg
pop
lock
test
jae
pop
repnz
xlat
pop
mov
sbb
mov
aam
or
jp
negl
add
cmp
xchg
sub
jne
testb
jbe
mov
imul
push
stos
dec
mov
fdivl
xorl
push
lock
mov
mov
add
out
xchg
fistl
lcall
pop
icebp
decl
add
mov
js
jnp
ret
das
jo
jmp
xchg
pusha
xor
out
mov
inc
sahf
test
pop
popa
jg
cmp
xor
loop
xchg
jp
push
sbb
mov
pop
cmpsb
notl
mov
pusha
xchg
dec
xor
insl
mov
mov
mov
and
pop
fstpt
out
jp
mov
xchg
bnd
inc
pusha
in
loope
pop
imull
adc
dec
mov
pop
ret
xor
cmpsl
xchg
lds
push
jo
inc
or
repnz
and
insb
cmc
mov
push
mov
scas
enter
fcoml
cmp
mov
in
aaa
xor
cld
fidivl
adc
outsl
inc
cmp
test
loope
push
in
dec
jmp
mov
xchg
and
or
daa
inc
jae
jns
or
pop
rcl
scas
cmp
mov
dec
jo
pop
fsub
pop
imul
aad
mov
jle
adc
mov
cmp
popa
mov
push
xor
dec
daa
test
stos
jle
adc
jno
pop
nop
push
ret
jns
cmpsb
les
jne
sub
cli
pop
dec
or
adc
cmp
call
shrb
or
lea
into
dec
iret
das
outsl
sbb
adc
dec
pop
cmp
sub
sub
aas
pop
push
pop
imul
jp
pop
stos
fistps
addr16
loop
divl
andb
arpl
push
nop
mov
sbb
sbb
outsl
ja
jae
cmp
mov
or
inc
and
sbb
adc
dec
mov
jle
xchg
fnstcw
out
lods
inc
iret
movsl
outsl
dec
push
pop
pop
rorb
sbb
push
adc
inc
mov
push
clc
out
divl
cmc
test
and
inc
das
pop
loop
mov
cmpsl
mov
clc
in
fs
adc
xor
lahf
int
int
ret
into
out
dec
or
mov
popa
popa
xchg
adc
movsl
imul
add
jb
pop
mov
inc
sub
dec
mov
repz
jp
or
repnz
test
lret
cwtl
mov
iret
add
aam
and
mov
cwtl
sar
mov
dec
mov
push
and
adc
add
inc
jb
fs
pop
loop
sub
gs
mov
adcl
mov
lock
xor
add
jge
pusha
sbb
jbe
mov
fsubs
pop
mov
sbb
add
leave
arpl
jo
pop
in
sub
dec
pop
cli
pop
clc
aaa
dec
or
mov
and
rorb
fsubrl
std
and
daa
pop
mov
hlt
xchg
js
push
xchg
loop
popl
sarb
sti
or
scas
jp
iret
pushf
add
negl
iret
adc
and
sub
cwtl
sbb
xchg
dec
sti
pop
mov
jo
mov
shl
mov
dec
xor
add
add
test
jle
pop
lods
lret
hlt
out
inc
sub
shl
imul
jge
xchg
push
jmp
out
mov
xchg
mov
pop
lea
ss
push
lcall
adc
add
std
xchg
icebp
dec
shrl
pop
xor
ja
aad
inc
repz
push
inc
adc
enter
mov
test
jmp
add
sub
mov
mov
adc
imul
hlt
mov
adc
cld
push
sub
mov
push
cmpsb
xor
mov
pop
xchg
lea
push
jecxz
movsb
lods
mov
pop
and
rclb
inc
loope
int3
jb
adc
push
sahf
pop
mov
insb
in
mov
push
pop
dec
add
push
inc
in
push
xchg
fcoml
mov
mov
mov
push
xchg
cld
aam
dec
cld
outsb
sub
or
or
push
test
add
pop
enter
mov
ret
dec
push
lret
or
xor
fdivrl
xorl
aad
adc
clc
or
inc
jae
and
dec
cmp
aad
imull
in
les
mov
add
mov
mov
push
or
mov
andl
ja
out
dec
push
inc
xlat
test
dec
int3
pushf
fldcw
std
jg
ds
gs
xchg
repz
sti
and
fdivs
xor
mov
sbbl
daa
lock
adc
lahf
pop
sbbb
or
push
int3
mov
addr16
popa
inc
xchg
jge
scas
add
in
divb
and
lods
jae
jbe
jecxz
xchg
xchg
cmp
push
inc
adc
mov
pop
pop
rclb
xor
pop
arpl
aaa
or
cmpsl
scas
sub
jecxz
pop
cmpsl
add
jp
inc
pop
popf
xor
imul
in
and
pop
outsb
cwtl
inc
jo
xlat
dec
rcr
mov
fnstsw
sahf
xor
ss
dec
xor
nop
test
or
push
ja
inc
andl
addr16
pop
sbb
xchg
jecxz
dec
outsl
pop
dec
pop
mov
bound
sub
jecxz
bound
xchg
and
xchg
or
xor
add
pop
sbb
addr16
xchg
lret
pop
lods
inc
add
add
rorl
inc
cld
push
dec
aam
cmp
lods
xchg
je
sub
repnz
hlt
dec
in
sarb
push
clc
ret
dec
fimuls
push
sub
mov
xor
pop
mov
mov
aad
movsb
mov
sub
mov
je
loop
and
and
sti
cli
xor
sbb
and
enter
in
xchg
pusha
xor
mov
pop
hlt
jl
push
icebp
call
cmp
imul
xchg
neg
sbb
and
aaa
shrb
sbb
cs
mov
xor
sbb
push
add
lret
fimull
jbe
sbb
cmp
je
xchg
movsl
push
jmp
imul
dec
xor
lcall
jb
call
cs
leave
mov
push
jl
adc
shrb
and
lods
ret
shll
ja
xchg
lcall
xor
das
mov
sub
pop
rolb
outsb
mov
sbb
shrb
mov
pop
jnp
and
shll
test
jp
pop
add
ret
add
pop
leave
or
lea
fidivrs
insb
divl
push
insb
fwait
and
push
mov
lret
mov
xchg
jnp
dec
sub
into
inc
inc
imul
xor
into
lods
cmp
add
mov
negl
jmp
shll
into
daa
xor
add
sahf
pop
je
lock
shl
das
adc
pushf
gs
mov
lods
push
cmp
jp
faddp
ja
sub
push
xor
cmp
xchg
ja
loope
addr16
push
ja
daa
sub
xor
mov
mov
and
pop
add
gs
fcompl
dec
cli
sahf
sbb
push
mov
jl
cmp
add
pop
sahf
orl
movsb
jmp
cltd
mov
and
or
cmpsl
add
shrl
arpl
mov
dec
repnz
test
ret
aad
jb
xor
add
dec
lds
je
sub
ljmp
lock
inc
xor
fwait
arpl
mov
pop
call
repnz
sub
ret
insb
xor
mov
mov
out
int3
or
outsl
pop
es
fnsave
cli
andb
adc
lret
imul
dec
xchg
pushf
and
dec
mov
add
push
sbbl
jl
cmc
in
cmp
ja
imul
rorb
push
inc
aaa
or
mov
cmpsb
imul
popa
lcall
xchg
lcall
mov
adc
ficoml
ret
aaa
pop
mov
push
jno
into
lods
xchg
mov
jo
lods
jl
mov
cmp
test
fsubrl
push
push
jge
mov
je
imul
das
xchg
mov
xor
pavgw
lahf
enter
or
pushl
aam
or
push
sbb
mov
outsl
and
mov
psrld
insb
mov
inc
mov
js
mov
xorl
incb
out
aas
mov
pop
clc
inc
je
push
push
mov
push
pop
xchg
movsl
add
cmp
dec
bound
mov
xchg
xlat
mov
insl
out
inc
je
movsl
aam
les
call
mov
dec
mov
mov
mov
mov
sbb
xchg
mov
dec
stos
inc
mov
mov
push
lods
popf
and
or
cmp
adc
dec
orl
dec
jo
cmp
mov
shl
test
xor
pushf
mov
insl
push
sbb
pop
out
mov
divl
rorl
sbb
add
loopne
sub
mov
sbb
pop
idivl
dec
sbb
jo
dec
xchg
nop
pushl
aas
add
pop
adc
lret
adc
jmp
pop
insb
js
jb
imul
xchg
mov
push
fbstp
or
mov
inc
lds
mov
or
inc
mov
jl
aam
xor
test
sarl
inc
and
lcall
dec
cmp
mov
mov
adc
cmp
bound
adc
push
add
fldln2
cmp
loopne
cmpsl
fildll
pop
int
in
out
mov
xor
or
mov
fwait
and
xor
in
cld
ds
inc
xchg
test
mov
xchg
push
mov
or
pop
push
lea
xor
xor
popa
pop
mov
mov
mov
add
test
and
jl
xchg
repnz
sbb
mov
repz
adc
jge
jns
lcall
cld
bound
mov
add
pushf
push
cmpb
cmp
gs
or
fisttpll
dec
aam
jge
mov
pop
jbe
or
xchg
and
sub
mov
fucomip
or
pop
es
mov
dec
dec
inc
orl
pop
cmp
add
mov
sub
sub
loope
cmp
xchg
cmpl
inc
cmpsl
sub
cmp
adc
mov
push
fwait
jmp
jne
inc
jo
sub
adc
outsb
aad
jae
pop
sbb
inc
sahf
lods
dec
xor
lahf
push
ljmp
jb
mov
popf
fdivrp
lds
pop
popa
in
repz
ret
ret
outsb
jb
lret
scas
jg
mov
push
mov
lret
cmpsl
or
sbb
xchg
data16
xchg
test
jbe
mov
add
data16
mov
and
pop
rcrl
mov
sbb
pop
lcall
lret
mov
jns
sbb
aam
add
out
outsl
outsb
aaa
cmp
pop
xchg
cmp
jno
cmp
bound
pand
lods
cmc
xor
lods
and
mov
std
out
pushf
and
inc
mov
xor
push
adc
int
jge
push
cmp
inc
jno
in
aam
les
in
cwtl
pop
std
and
iret
sbb
xchg
inc
mov
insl
mov
sub
ret
lds
and
cld
hlt
je
add
les
mov
inc
dec
mov
mov
int3
jbe
dec
orl
mov
pop
decb
psrlq
popf
adc
inc
cmp
rcrb
in
cmp
adc
sti
mov
mov
arpl
rorl
add
scas
aaa
jns
add
imul
xchg
das
push
jge
movsl
inc
test
add
and
cs
outsb
mov
sbb
cmp
mov
lods
lods
pushf
fnstsw
fwait
out
negl
pop
mov
dec
mov
out
xorb
test
ljmp
and
mov
adc
arpl
dec
and
lret
call
lahf
ret
sti
xchg
xor
mov
inc
je
xchg
leave
sub
fs
mov
inc
push
sub
mov
mov
push
mov
sbb
xchg
ljmp
and
ljmp
pop
mov
es
ss
dec
dec
add
popf
into
lcall
add
jecxz
fdivl
xchg
fildll
mov
jge
inc
pusha
aam
cmp
xlat
pushl
pop
scas
ss
imull
pop
orb
pop
aam
push
lcall
mov
mov
sbb
add
mov
push
pop
and
pop
or
data16
cli
jp
cmp
push
add
sub
ljmp
dec
sbb
mov
aam
xor
jne
mov
cmpsb
dec
incl
add
cmp
dec
rolb
and
insb
dec
decb
pusha
push
insb
lahf
dec
decb
xchg
emms
stos
xchg
lea
sbb
test
shll
repz
and
sub
je
test
add
push
inc
cltd
daa
mov
inc
test
adcl
or
pushf
add
stc
movsl
dec
push
roll
aam
and
test
lods
sub
inc
icebp
jg
imull
dec
inc
mov
xor
test
and
push
sbb
add
xor
fnstcw
or
sbb
sbb
mov
stc
or
bound
adc
pop
scas
mov
or
sub
mov
mov
push
push
jae
mov
jb
fs
xchg
hlt
dec
sarl
sbb
jbe
push
inc
lar
and
lea
push
adc
mov
cli
loopne
jg
es
std
int
jge
cmp
clc
cmovbe
rcrb
ja
stos
adc
test
or
sub
mov
mov
add
stc
push
test
nop
or
jmp
mov
jg
rorb
dec
dec
pop
aam
call
sub
pop
push
leave
into
pop
enter
mov
fdivs
dec
test
movsl
cmpsb
js
mov
sahf
xchg
lcall
or
add
movsb
leave
jge
std
or
aad
popa
in
jo
pop
outsl
mov
gs
pop
jo
fsub
dec
fwait
and
mov
inc
es
cs
ret
std
mov
cmpb
std
sub
cld
add
out
cmpsb
mov
jnp
mov
xchg
outsb
inc
xchg
add
sbb
jae
lahf
mov
es
js
push
jae
xor
cld
dec
adc
test
jmp
jbe
jno
ror
int3
in
cmc
push
push
ljmp
sbb
dec
xchg
pusha
js
sarb
dec
imul
int3
cmpsl
add
nop
or
jecxz
jecxz
test
shr
lcall
jecxz
pop
fiaddl
popf
pop
and
jne
xchg
repz
jb
cmp
daa
inc
movsb
iret
les
call
push
pop
scas
ljmp
ss
or
pop
in
mov
xor
adc
addb
mov
or
dec
lahf
sbb
mov
sub
cmpl
jo
pusha
jmp
test
push
testb
jns
fs
fisttpll
fs
cmp
inc
xchg
inc
dec
xchg
js
mov
cmp
je
jne
adc
ljmp
inc
xchg
push
sub
xlat
addr16
xchg
movl
into
and
cmp
test
sub
mov
mov
or
adc
xchg
mov
imul
xchg
js
pop
xor
or
jns
sub
comiss
pushf
mov
and
sbb
cmp
mov
addr16
lret
lock
dec
push
ja
int
push
mov
pop
push
and
jb
mov
divl
mulb
or
pop
test
pop
lock
sub
jne
mov
adcl
les
pop
push
xor
adc
es
dec
add
pop
pop
jp
pusha
outsb
inc
dec
mov
stos
cli
xchg
pop
mov
out
das
add
xor
lods
sub
adc
push
inc
mov
pop
daa
insb
dec
sub
and
insl
mov
repz
ljmp
push
in
call
inc
rorb
loope
or
loop
sub
mov
push
cld
and
jbe
cli
clc
sub
jnp
dec
cmpl
xchg
xchg
popa
ds
adc
cli
cmc
dec
cli
pop
mov
in
bound
jge
dec
and
mov
jge
insl
movsl
cmp
adc
cmc
push
or
flds
fstpl
hlt
jns
jne
inc
pop
and
fistps
je
sti
cmpsl
insl
xor
xchg
push
sub
xor
dec
jge
xor
mov
out
xorl
mov
jnp
xor
sbb
cmp
mov
fdiv
ret
clc
adc
mov
test
pop
mov
out
jns
xor
xchg
scas
fisubs
push
movsb
bound
xchg
outsb
mov
mov
push
insb
movsb
pusha
inc
and
ljmp
push
mov
cmc
mov
imul
sbb
neg
mov
mov
mov
mov
fcmovu
mov
mov
sub
mov
inc
lret
sbb
sub
lcall
stos
xchg
jp
out
inc
shlb
lret
cmp
repnz
dec
ja
ret
mov
mov
or
ss
push
jl
adc
xchg
inc
fsts
mov
nop
popf
push
sbb
rcll
push
dec
and
insl
dec
shl
mov
mov
xor
mov
fcomp
adc
pushf
mov
pop
xorb
sbb
xchg
sub
xchg
mov
sbb
inc
push
loope
shll
push
sub
add
daa
lods
push
es
mov
jnp
or
mov
mov
gs
enter
and
inc
adc
sti
or
mov
mov
jmp
aad
dec
jg
fildll
fistps
loop
stos
outsl
out
inc
sub
jo
xor
and
orb
lea
adc
inc
psubusw
addl
das
clc
or
jbe
sbb
mov
or
dec
test
cmp
nop
inc
jae
cmp
mov
popa
push
and
push
loope
inc
cmpsb
dec
shll
inc
and
pop
sub
xor
lods
loopne
enter
lods
adc
mul
mov
roll
stos
mov
xchg
jmp
jecxz
or
mov
jg
into
xchg
int
jg
push
push
lahf
sbb
dec
sub
mov
ss
jp
es
pop
mov
test
in
and
lods
imul
and
and
jnp
cmp
imul
ja
ret
call
loopne
pop
outsl
xchg
rorb
inc
push
dec
fwait
cs
int3
out
sub
jl
inc
inc
xor
int3
insl
inc
xchg
dec
adc
mov
adcl
mulb
lods
notb
push
in
popf
in
hlt
repz
shlb
jge
fcmove
sub
test
pop
fidivrs
mov
inc
mov
gs
jecxz
imul
inc
repz
jge
dec
jb
cs
mov
add
pop
repz
jnp
pusha
mov
decb
push
push
pop
push
in
test
in
in
inc
mov
mov
mov
das
pop
add
xor
nop
xor
ss
lods
pop
imul
mov
popa
outsb
jno
jmp
or
clc
pop
ss
dec
mov
mov
lock
into
outsb
cli
lods
fucomip
jmp
jge
xchg
fisttpl
or
or
shrb
ja
pop
xchg
xor
loope
inc
test
dec
jb
mov
inc
in
or
sahf
sub
outsl
mov
mov
xchg
xchg
scas
sub
jp
mov
inc
fstps
xor
clc
lret
iret
mov
push
push
dec
and
rcrl
pop
adc
mov
pop
bound
test
js
insb
mov
lret
pop
out
and
fidivrl
dec
xchg
scas
jg
test
jb
mov
mov
mov
fistpl
lods
flds
rorb
and
xor
in
xor
and
incl
inc
jge
pop
dec
mov
pop
xor
pop
popw
fstps
push
mov
sbb
dec
out
mov
pop
lahf
mov
inc
push
xor
lods
int3
aam
xlat
cmp
cwtl
lock
loope
inc
ljmp
pop
nop
adc
das
xor
pop
jge
test
or
rcrl
mov
subl
sbb
call
cmp
movsb
push
cltd
sbb
std
push
xchg
bound
add
sbb
int
test
jp
rclb
nop
dec
pop
imul
push
dec
xor
rcll
in
adc
out
adc
in
or
dec
sti
sub
out
push
pop
push
lcall
mov
das
lods
lods
and
in
push
inc
push
jns
popa
and
stos
jmp
adc
sbb
std
imul
lret
sbb
dec
popf
sbb
ret
int3
mov
out
add
xor
aam
add
das
cmpsb
hlt
shll
dec
mov
cmp
xlat
sbb
bound
insb
jecxz
lret
out
jle
jle
lcall
out
aaa
mov
das
adc
test
inc
cmp
inc
cld
gs
push
out
xchg
jno
xor
sbb
mov
movsl
rolb
mov
inc
cmc
sbb
add
rclb
adc
in
ja
push
mov
cmp
popf
xorl
fdiv
imul
stc
mov
cmp
ss
mov
jbe
xchg
leave
and
mov
jb
push
frstor
scas
pop
mov
jmp
mov
sbb
and
sub
enter
xchg
mov
xor
xorb
outsl
push
sarl
sbbl
test
loope
or
jnp
push
addb
xchg
daa
fistpll
jp
jl
sbbb
sbbb
mov
lahf
imul
mov
pop
pop
adc
adc
or
pop
dec
jge
andl
push
jae
jmp
mov
cmp
out
aad
adcl
xchg
dec
mov
push
jb
loopne
ficompl
or
inc
jo
sub
pop
icebp
mov
and
adc
sub
movd
nop
jg
test
inc
popf
push
and
cmp
sub
pop
loope,pt
dec
cltd
pop
insb
mov
mov
lock
mov
xlat
pop
filds
loope
and
cmp
adc
into
push
xchg
lret
push
pusha
daa
sbb
loopne
pop
mov
lea
push
pushf
mov
sub
cmpsb
push
repnz
mov
adc
mov
call
iret
xorps
sbb
pop
xor
sbb
cs
xchg
mov
repz
push
mov
enter
mov
neg
mov
lods
je
inc
or
orl
pushf
inc
xchg
movsl
xor
mov
fnsave
inc
ror
es
out
fwait
mov
sbb
add
dec
stos
fildll
sub
push
fs
dec
xor
mov
es
aaa
pop
sub
jbe
enter
in
nop
pop
outsb
mov
test
divl
push
lcall
xchg
scas
lret
lds
fisttps
into
inc
inc
or
mov
mov
cmp
mov
inc
imul
pop
cmp
inc
pushf
adc
jnp
xor
xchg
and
daa
leave
stc
xor
sub
pop
xchg
sub
outsl
aaa
call
mov
je
aaa
xchg
cld
xchg
mov
add
xchg
pop
push
arpl
or
pop
sbb
cmc
mov
mov
add
push
push
stc
adc
jp
shlb
scas
xor
add
add
iret
rol
icebp
pop
jg
mov
and
sbb
stos
or
pop
sbb
test
sbb
add
push
cmc
and
push
xchg
xlat
push
test
into
and
lret
arpl
sbb
sbb
dec
bound
subl
xchg
mov
push
xchg
mov
jb
mov
inc
or
add
insl
jns
jbe
in
dec
sub
insb
fnstenv
cmp
lods
pop
mov
pop
jg
jge
scas
xchg
push
mov
xlat
int
dec
outsl
addr16
flds
movl
mov
jno
sub
xchg
aam
jae
add
cmpsb
sbb
shll
pop
popw
mov
mov
sub
xchg
mov
xor
and
popl
jb
cwtl
sbb
jb
jl
scas
pop
imul
sub
shll
dec
das
xor
or
or
inc
rclb
or
sub
hlt
sub
mov
push
mov
orb
mov
add
fldt
cs
popa
push
sub
sub
mov
jge
mulb
and
adc
mov
in
jmp
test
adc
xchg
fsubs
fs
out
cwtl
cmp
xchg
add
icebp
xchg
in
sub
xchg
push
shlb
das
adc
push
scas
sub
lret
add
jl
in
push
xor
loope
sbb
push
stc
xor
pop
aaa
xchg
addr16
rclb
ds
xor
or
out
jp
mov
shl
jecxz
cmp
and
insb
fwait
outsb
in
lcall
cs
dec
mov
std
lret
test
mov
jle
cmp
aaa
xlat
dec
and
in
mov
test
inc
inc
popf
ds
scas
xchg
push
inc
cmp
in
adc
sarb
ja
nop
pop
inc
fs
ret
mov
and
xor
push
mov
pop
pop
cwtl
adc
xor
roll
jb
mov
loopne
bound
nop
push
xchg
lea
xor
push
mov
stos
test
int
mov
mov
push
xchg
sbb
xlat
mov
xchg
test
test
and
inc
cld
jg
pop
add
or
cwtl
gs
mov
sub
pop
xchg
into
sub
pusha
inc
nop
pop
fs
repnz
cwtl
cwtl
test
iret
mov
in
jmp
fwait
ja
test
cmp
aaa
cltd
cmp
xor
insb
jbe
fs
in
lcall
mov
dec
scas
adc
cltd
faddp
adc
adc
out
xchg
and
scas
push
lods
stos
mov
cmpsb
in
clc
gs
dec
sbb
xchg
mov
in
and
insb
pop
mov
mov
pop
push
ficompl
sbb
lret
divl
or
pop
adc
popa
lahf
xor
inc
iret
add
lahf
or
gs
mov
inc
loop
sbb
daa
test
inc
shr
cld
sbb
xchg
push
ds
and
mov
fwait
add
add
or
outsl
push
push
cmc
pop
jmp
jge
cs
sbb
enter
xlat
test
add
inc
arpl
mov
jl
lods
repz
rclb
jecxz
test
loope
loope
fwait
and
adc
clc
xor
jmp
sbb
aaa
aam
cmpsb
xchg
mov
xchg
jb
mov
and
xor
dec
cs
dec
jns
in
dec
xor
add
cmp
mov
dec
mov
sub
pop
inc
mov
mov
jnp
mov
ja
pop
push
pop
jae
xor
adc
and
mov
mov
into
dec
mov
and
in
ss
testb
adc
cli
jo
mov
mov
mov
insb
xor
ficoms
pushf
xchg
mov
sub
sbb
cmc
mov
pop
test
xor
jne
stc
enter
lods
jl
mov
insb
sahf
outsb
jae
ljmp
fcomps
sub
cs
adc
pop
xchg
push
push
cmpsb
pop
lock
mov
or
jg
pusha
int
pop
cmc
mov
gs
push
pop
sbb
xor
popa
sbb
outsb
jle
shld
adc
inc
test
add
xchg
bound
xchg
cltd
xor
das
jbe
int
int3
mov
pushf
lods
sbb
daa
fiadds
lods
push
mov
out
std
lcall
lods
push
fcoml
and
xor
adc
cmp
iret
mov
xchg
shll
cmp
std
popl
outsb
pushf
inc
or
loope
or
pushf
pop
loopne
into
fidivrs
dec
repnz
arpl
lret
scas
ds
jl
jl
and
mov
mov
xor
inc
xchg
pop
sbb
cli
xchg
pusha
cmpsb
and
mov
jl
sbb
pop
add
nop
lods
mov
outsl
mov
xchg
cmpsl
loope
js
cmc
and
push
std
mov
push
xor
jle
pushf
sub
repnz
inc
jnp
mov
jge
mov
insb
sub
fisubs
repz
adc
fcmovne
add
fcomps
iret
xor
xchg
push
jmp
and
lock
and
sbb
cmp
mov
addr16
and
add
arpl
sbb
insb
mov
je
es
mov
xor
loope
or
jmp
push
inc
and
test
xchg
pop
imul
xchg
cmp
cmpsl
mov
dec
push
mov
into
pushf
xor
pop
ret
inc
popf
out
gs
mov
xor
jmp
insb
push
ljmp
pushf
jmp
aam
dec
popa
and
lods
and
jle
subl
push
adc
inc
sbb
imul
jb
mov
push
jne
dec
pop
into
add
pop
mov
jle
and
shr
push
aaa
vpshuflw
pop
jmp
cmp
xchg
jmp
push
sahf
shll
dec
inc
sbb
mov
insl
push
rcrb
outsl
xor
push
xchg
dec
ret
cltd
repnz
popf
jnp
sbb
fiaddl
lds
sarb
and
cmp
mov
hlt
inc
fimuls
shll
cmp
cmp
into
mov
xchg
das
icebp
mov
mov
cli
sarl
inc
sbb
clc
xchg
jp
jo
out
leave
push
push
cld
xlat
insb
adc
and
pop
sub
xor
test
adc
jae
jmp
dec
je
mov
jnp
xor
jb
mov
cmp
mov
jg
cmpsl
mov
mov
adcb
jmp
lea
popf
mov
cmp
popa
xor
aas
enter
or
lods
mov
insb
mov
lahf
lods
iret
scas
popf
in
pop
dec
mov
cmpsl
cmp
sbb
pop
cmp
adc
gs
aaa
outsl
in
fs
mov
lods
push
lods
sti
fldenv
inc
jns
pop
jp
in
pop
int3
jmp
mov
out
jmp
outsb
scas
push
lret
and
aaa
jns
out
cli
add
out
add
cwtl
jo
sbb
push
shl
iret
inc
inc
jecxz
cmp
add
sbb
pop
mov
adcb
mov
lret
xor
dec
cmpsb
ret
pop
scas
orl
mov
lret
lahf
mov
lahf
out
iret
lcall
sahf
jnp
fs
mov
dec
jmp
mov
ljmp
cmp
mov
iret
push
ret
xor
lahf
push
push
bound
push
xchg
jo
adc
scas
jbe
mov
cmp
sti
std
insb
into
in
clc
push
loope
sbb
xchg
inc
call
adc
sub
popl
ljmp
lahf
nop
lcall
add
pop
pop
int
popa
xor
push
loop
add
sub
or
sbb
int
shll
push
icebp
in
xchg
or
int
add
cwtl
lods
mov
adc
inc
int3
fimull
jbe
dec
adc
push
dec
push
repz
loope
hlt
aam
ljmp
lock
mov
inc
mov
jmp
lahf
jmp
mov
push
and
and
insl
fistps
mov
pop
ret
jmp
mov
mov
add
iret
jns
cwtl
add
mov
dec
std
xor
aam
dec
into
dec
outsl
pop
add
aaa
addr16
jbe
mov
mov
ret
cmc
mov
or
cmp
sbb
ret
add
roll
loope
xchg
out
add
or
mov
test
or
in
out
pop
push
aad
sbb
pop
xor
test
sar
mov
loopne
fistl
jno
cmpb
dec
mov
out
scas
popa
dec
mov
mov
adc
jns
incb
std
inc
or
xabort
or
xor
cs
sbb
rcll
jno
cmp
xor
jl
das
push
clc
popa
lods
push
out
andb
icebp
in
movsl
test
lods
xor
mov
sti
clc
ret
into
inc
mov
cmp
push
add
aas
imulb
mov
dec
mov
lret
adc
push
add
fidivs
jmp
sbb
sbb
push
sbbl
cli
sbb
ss
xchg
pop
push
cmp
and
dec
int3
jmp
sbb
sahf
dec
push
gs
mov
inc
dec
pop
nop
ret
int3
mov
jns
cmpsl
cltd
jo
bound
dec
je
push
imul
shrl
xchg
clc
call
sub
xor
mov
xchg
movsl
adc
inc
jno
addr16
mov
out
stos
pop
or
scas
movsb
mov
shrl
in
cwtl
pop
ffreep
mov
int3
mov
in
loope
or
movsl
fisttps
mov
ljmp
sarl
mov
adc
pop
jns
ja
mov
ljmp
daa
inc
sbb
enter
in
jae
add
faddp
add
push
imull
xchg
lock
es
pop
sub
cmp
repz
ret
jge
cmp
stc
dec
jge
stc
daa
outsb
push
fcom
aaa
in
int
jp
push
and
xor
scas
stc
insb
jmp
push
ret
mov
loopne
mov
jle
popa
loop
andl
mov
mov
outsb
fcmovnb
addr16
jb
not
mov
and
add
push
aad
mov
adc
push
gs
pause
jecxz
enter
pop
mov
mov
jnp
sarb
or
mov
push
dec
inc
cwtl
ljmp
jo
mov
hlt
mov
cmp
rdmsr
daa
pop
add
stc
orl
movsb
call
stos
aas
or
adc
jecxz
inc
loop
fisubs
pushf
in
out
loopne
repnz
add
insl
test
adc
cmp
notl
mov
std
stos
and
jo
fidivl
mov
pop
cld
jge
sub
inc
pusha
push
pop
push
pushf
add
repz
mov
inc
sub
outsl
mov
popa
das
xchg
push
add
and
test
pop
mov
add
jl
xlat
pop
sahf
dec
add
and
popf
xchg
adc
pop
mov
push
fsubs
shl
aaa
add
add
adc
sbb
jns
aam
lea
dec
cmp
add
sbb
inc
das
jno
icebp
cmp
pushf
outsb
hlt
pop
mov
sub
cwtl
fimuls
pop
xchg
xchg
js
sbb
aas
push
cmp
shl
push
ljmp
jns
xchg
xchg
xchg
fisubs
sahf
loopne
push
dec
or
int3
in
sub
cmp
mov
out
leave
xor
xor
in
sarb
push
jae
sbb
sub
xchg
das
mov
mov
push
mov
and
push
sub
jns
or
rorl
daa
jnp
sub
mov
jns
mov
es
dec
xchg
js
pop
fs
mov
jmp
iret
outsl
jo
sbb
jbe
std
mov
ja
mov
test
out
outsb
repz
jg
cmp
mov
xor
test
test
shlb
orb
ror
inc
adc
sarl
imul
je
mov
adc
adc
jle
data16
add
jae
jmp
mov
adc
pop
jp
ffreep
and
mov
test
jmp
nop
cmp
and
cmp
xchg
add
notl
dec
adc
insl
ds
test
mov
adcb
fldcw
jnp
add
mov
std
xor
mov
adcb
mov
stc
or
repz
sbb
test
cli
pand
mov
lock
out
jbe
mov
cmp
mov
mov
sub
mov
outsl
sti
in
mov
test
loope
push
inc
ja
gs
sbb
pop
in
xor
jge
data16
fcomp
mov
cltd
xchg
lcall
sub
xlat
mov
xor
repz
and
add
add
cmpsb
ret
xchg
push
in
or
loopne
inc
jnp
cmc
sub
push
adc
cmp
mov
dec
rcr
xor
xor
sbb
das
aad
loop
or
iret
fucom
cmp
dec
inc
xor
in
mov
xchg
cmc
jmp
popa
fwait
notb
loope
test
hlt
jnp
push
add
or
sbb
mov
and
sub
mov
icebp
loopne
mov
add
add
repz
sub
decl
adc
cmp
je
xor
add
pop
add
ja
scas
repz
lock
rcl
outsb
lods
mov
arpl
mov
dec
clc
or
fs
xchg
insb
xor
test
fwait
add
repz
dec
cmp
mov
scas
imul
enter
mov
or
mov
sub
xor
mov
out
cld
jno
adc
jo
add
fsubrs
outsl
lock
mov
scas
add
push
and
outsb
cmpb
js
pop
or
push
sub
aad
mov
mov
add
cs
mov
mov
rolb
repz
shlb
xor
lret
repnz
and
jl
jnp
shll
clc
inc
sbbb
lcall
fidivs
shrb
xor
enter
lods
lds
xor
mov
ret
es
jno
and
and
xchg
outsl
imulb
dec
outsl
mov
and
dec
cmp
sbb
mov
out
jp
outsb
push
xchg
lods
arpl
popl
mov
arpl
and
test
dec
insl
add
popa
or
je
dec
push
and
jbe
xchg
inc
rcr
dec
and
ficoml
mov
out
xor
les
mov
dec
jmp
jo
stos
lret
cltd
xor
mov
decl
sbb
jns
cmc
aas
jge
and
jns
mov
sub
pop
les
lret
gs
ret
test
lcall
pop
sub
sub
call
outsl
shlb
mov
mov
rcrl
cmp
xchg
pop
jecxz
push
subb
out
sbb
jae
mov
data16
push
jae
push
insb
scas
adc
add
push
cwtl
xchg
lret
push
push
not
cmp
fwait
xchg
stos
or
testb
sub
mov
sub
jnp
sub
or
addl
adc
es
cltd
repz
out
add
iret
cmp
fistpll
mov
sub
fwait
sbb
mov
adc
or
inc
inc
lahf
inc
in
xchg
scas
xchg
adc
nop
sub
push
pushf
pop
xor
lcall
and
movsl
mov
sub
push
add
gs
cwtl
mov
adc
sbb
lahf
push
shlb
xchg
sub
xor
add
mov
mov
adc
dec
mov
fs
inc
mov
pop
in
fsub
push
push
dec
jb
dec
sub
into
push
mov
cmpsb
out
fiaddl
add
andb
mov
fcom
test
pop
cmp
mov
mov
lods
outsl
cwtl
incb
cmp
movsl
fildll
cmc
or
add
pop
test
std
jb
dec
daa
cltd
cmp
dec
inc
mov
in
je
pop
stc
shlb
lods
scas
push
call
inc
cltd
sahf
mov
push
bound
mov
stos
xor
lahf
subb
pop
sub
pop
cmp
fsts
scas
or
adc
fsts
jo
mov
fbld
mov
lret
jecxz
or
xor
push
test
stos
mov
daa
mov
aas
ja
sahf
and
pop
es
lcall
xor
scas
or
rol
push
icebp
pop
dec
mov
outsl
jle
in
repz
loopne
push
jnp
jae
xor
mov
addr16
popf
icebp
cmp
mov
ss
out
sbb
cmp
inc
sub
ljmp
xlat
xor
mov
aaa
es
add
xchg
lcall
out
cmpsl
lahf
mov
push
pop
sub
mov
mov
and
fstps
aaa
lods
out
call
mov
mov
push
push
mov
or
mov
leave
push
cmc
movsl
sbb
stos
mov
mov
dec
test
xchg
pop
sub
adc
jecxz
push
scas
push
js
push
dec
andl
xchg
les
ds
push
js
loopne
adc
or
inc
popaw
xor
pop
imul
pop
insb
mov
out
inc
jns
add
stos
in
push
lock
pop
jecxz
imull
mov
lcall
inc
or
push
sbb
stc
and
das
imul
leave
je
repnz
mov
push
out
sarl
pop
xchg
pop
jo
push
jl
mov
xor
insl
jmp
ret
cmpsl
or
or
inc
sub
les
fisubrs
and
les
fmul
outsb
arpl
mov
pushw
clc
loop
pop
push
std
cmp
out
outsl
sub
dec
mov
push
push
adc
jb
dec
cmp
outsb
jns
jecxz
pop
add
fisubs
popa
outsl
int3
outsb
inc
les
ret
je
cld
fcoms
sti
rorl
or
imul
imul
lret
popf
out
js
cli
xchg
scas
sbb
jge
sub
mov
push
sub
inc
es
sub
push
andb
je
mov
xchg
addr16
dec
in
inc
stos
inc
push
mov
cmp
out
in
clc
das
test
inc
sbb
sub
push
mov
jle
sarl
inc
add
pop
sub
xchg
push
loopne
rcrb
mov
fcomip
lds
lods
sub
mov
fnstcw
fucomi
pusha
xchg
xor
push
xor
cmc
sti
jle
test
in
fucom
mov
push
popa
mov
sahf
add
push
dec
cld
imul
testl
xchg
imul
jge
jb
pop
imull
fisttpl
lcall
push
loop
jmp
stos
jg
push
loop
jo
ds
add
int3
mov
fimull
or
ret
xchg
mov
bound
dec
mov
enter
adc
inc
std
mov
xor
pop
pop
fistl
cmp
pop
cmpsl
mov
add
xor
loopne
sub
jns
shl
fucomp
push
add
loope
fcmovnbe
push
rolb
scas
cmp
sub
pop
and
popa
xlat
xchg
pushf
shlb
je
sbb
jb
jns
dec
jmp
add
inc
lea
push
dec
mov
std
scas
jmp
movsb
xchg
pop
mov
outsl
aam
mov
imul
push
dec
push
sub
xor
push
dec
insb
cs
jmp
mov
dec
pop
outsl
add
mov
fs
cmp
repz
adc
dec
mov
sub
cwtl
xlat
std
push
pop
pusha
inc
or
aam
ss
fists
cmp
sub
sbb
push
sbbb
push
jge
push
roll
scas
inc
fs
pop
lret
cmovg
inc
mov
mov
pop
shlb
enter
aam
push
mov
repnz
out
xchg
ret
inc
add
fimull
mov
pop
mov
xor
mov
pop
jno
cmp
popa
cmp
and
inc
mov
and
jecxz
sbb
stos
push
and
add
dec
je
aas
sbbb
mov
sub
sub
mov
mov
mov
jle
jbe
pop
into
lahf
in
jge
bound
sahf
mov
sub
movsb
outsl
mov
mov
dec
cmpl
iret
add
add
pmaxsw
or
jmp
repnz
lods
aam
push
in
jno
jns
mov
test
inc
add
adc
xchg
test
sub
mov
mov
mov
xor
dec
mov
dec
das
dec
push
and
inc
sbb
js
fwait
inc
out
ret
loope
xlat
dec
adc
scas
fs
sbb
inc
enter
aas
jge
aad
push
mov
fs
outsb
push
cltd
cli
aas
pop
mov
xor
call
leave
xchg
int3
mov
push
xchg
add
jge
rorl
pushf
xchg
push
fwait
add
outsl
push
lock
adc
cmp
mov
insl
scas
stos
pop
scas
popa
jl
dec
stc
xchg
add
and
testl
sbbl
dec
mov
push
mov
arpl
xor
or
fld
nop
dec
enter
mull
or
movsl
mov
daa
addr16
add
notl
xor
sbb
inc
int
outsb
xor
and
pop
xor
pop
sbb
pop
push
adc
xchg
pop
int3
mov
push
sti
nop
shll
aaa
rcrb
and
in
inc
cmp
decl
dec
cmp
call
and
popf
cmp
fdivr
lods
mov
jp
mov
mov
int3
mov
cmpsb
loopne
xchg
mov
push
inc
jecxz
scas
je
xchg
pop
dec
push
imul
mov
popa
bound
ret
imul
or
lcall
push
sahf
push
add
enter
aam
add
mov
or
incb
inc
mov
rolb
push
mov
lods
aaa
sub
push
add
jle
add
subl
add
ja
arpl
jp
mov
jae
mov
jno
nop
mov
cmp
inc
popa
outsb
mov
push
cld
xchg
fisubl
icebp
bound
xlat
jns
and
test
sub
loopne
sub
add
cmp
mov
mov
nop
adc
jp
inc
push
clc
daa
flds
cmc
xor
ret
sbb
push
cmpsl
push
ret
xchg
lret
jecxz
sub
push
sub
cs
sbb
mov
and
inc
dec
lahf
xor
pop
push
mov
or
xchg
mov
dec
hlt
incl
sbb
cwtl
xlat
jge
jae
sub
outsb
push
and
push
loopne
movsl
imul
pop
fwait
icebp
repnz
or
or
int3
add
jnp
cwtl
lods
loopne
pop
pop
xlat
rcrb
les
rcr
unpckhps
sbb
addr16
push
mov
ficomps
cmp
xchg
pop
mov
cmp
xorl
sub
pop
sub
movsl
rcl
cmp
js
js
jb
dec
xchg
cmp
mov
aas
push
std
add
idivb
sbbb
movsl
xchg
and
mov
add
xchg
sti
mov
divl
mov
test
movsb
mov
imul
and
fs
mov
and
fwait
and
lcall
frstor
cs
insl
rcrl
clc
call
xchg
imul
fisubrs
in
sub
push
sbb
jecxz
les
je
es
mov
or
xchg
outsb
inc
rolb
es
xor
test
inc
enter
idivb
jle
adcl
pop
jo
push
inc
test
inc
or
shll
jp
cmp
hlt
lcall
mov
repnz
add
push
mov
arpl
pop
in
test
push
push
jecxz
jne
mov
push
imul
adc
mov
push
dec
cmp
pop
js
cmp
sub
sub
inc
mov
jmp
jp
dec
or
insb
pop
stos
and
clc
outsb
movsb
in
shrl
jno
outsl
dec
mov
jmp
cmc
push
xchg
mov
nop
lods
popf
mov
add
sub
xchg
lods
pop
mov
shrl
lock
pop
lret
xlat
ja
leave
mov
in
pushf
pop
mov
adc
adc
inc
xor
and
cmc
xchg
dec
pusha
inc
inc
sarb
xor
repz
mov
dec
inc
aam
adc
inc
pop
jno
push
in
push
xchg
mov
scas
es
mov
add
jge
sub
pop
test
stos
mov
lds
jbe
loope
mov
out
cmp
pop
outsl
in
pop
push
xor
cli
fldt
popa
into
lcall
fidivrl
mov
movsl
test
adc
add
loop
xchg
push
imulb
mov
ss
xor
dec
imul
lret
dec
jl
icebp
ja
out
sbb
fdivrl
into
mov
cmp
adc
jns
ret
inc
pop
les
ljmp
je
mov
mov
sub
mov
adc
add
loope
in
clc
daa
or
fidivs
mov
imul
fsubrl
cmc
out
mov
and
addr16
cmc
je
dec
xor
xor
sahf
leave
js
xlat
aam
insb
popf
int
das
xchg
push
inc
loope
mov
in
and
push
aaa
jns
inc
push
add
sbb
ret
pop
add
loope
jb
pusha
and
cmp
pusha
mov
mov
jno
pop
mov
sbb
dec
sub
mov
rcr
pop
daa
int3
pop
and
mov
in
sbb
jne
lahf
cwtl
aaa
sti
sub
push
test
das
or
lods
test
xor
scas
pop
mov
dec
enter
mov
mov
push
stos
mov
jnp
les
ljmp
cmpsb
shrl
mov
push
leave
cmp
adc
mov
fidivs
pmaxub
outsl
push
mov
dec
in
rolb
mov
psrad
lahf
enter
pop
inc
lret
jno
dec
int
cmp
aaa
add
sbb
into
jmp
in
out
push
scas
push
test
scas
pop
push
int
addr16
mov
aam
mov
enter
cmpl
jb
lea
out
movsb
arpl
arpl
inc
push
or
pop
mov
hlt
xchg
or
mov
nop
scas
pop
pop
cwtl
mulb
je
adc
idivl
push
jb
xchg
out
xchg
and
sub
jp
ja
divl
dec
lods
xchg
scas
std
in
ret
hlt
int3
sbb
into
mov
fisubl
mov
dec
pushf
sahf
pop
test
popa
mov
pop
daa
sahf
stos
pop
call
lds
nop
mov
adc
mov
push
std
daa
xchg
push
iret
ficoml
fs
add
and
push
sub
or
add
inc
rcrl
sar
shrl
enter
push
icebp
shlb
mov
sbb
inc
sbb
lods
ljmp
push
out
ret
jg
xchg
jmp
mov
jecxz
add
push
jo
std
clc
mov
xor
cmp
mov
sub
les
pop
dec
dec
sub
je
rorb
cwtl
mov
arpl
adc
lock
xor
dec
cmpsl
or
sub
jnp
sbb
dec
jae
rcrl
daa
call
jbe
mov
cli
mov
pop
imul
in
jg
cld
adc
mov
gs
pusha
xchg
shr
ret
sbb
or
mov
xor
adc
ret
jo
in
into
push
pop
xlat
movntq
adc
clc
stos
jg
inc
mov
add
cld
test
icebp
int3
fld
xchg
fcomip
daa
cld
cmp
stos
lock
and
outsb
sub
push
xlat
daa
sub
fcomp
pop
push
popa
mov
mov
ror
scas
fisttpl
aad
imul
add
fwait
cmp
sbb
fildl
stos
dec
and
jno
xchg
sahf
pop
jecxz
sbb
fstp
dec
ds
or
mov
dec
shlb
cltd
xchg
lods
movsl
icebp
pop
push
pop
pop
xorb
add
movsb
in
inc
pop
mov
add
das
imul
lock
leave
sub
cmpsb
mov
pop
xor
imul
mov
inc
mov
mov
mov
pop
xor
mov
imul
cmpsl
movsl
je
xchg
xor
rsqrtps
jne
lock
rcll
mov
sub
cwtl
mov
repz
cli
out
lret
sub
xchg
cmp
les
pop
jecxz
stc
dec
push
add
xchg
movb
rcrl
lods
ljmp
dec
sub
fisubrs
outsl
adc
clc
and
aad
mov
ss
inc
sbb
cltd
sbb
push
lret
jnp
mov
lcall
loopne
fiadds
pop
test
je
adcb
mov
fcmovnbe
and
fs
lock
mov
negb
mov
hlt
add
idivl
lods
xchg
imul
into
orl
lods
cmp
pop
push
ficompl
cwtl
pop
sbbb
stos
add
xor
cld
ret
jecxz
mov
insl
push
mov
cwtl
mov
pusha
xchg
inc
outsb
imul
mov
inc
mov
mov
js
sub
adc
xlat
out
nop
dec
dec
test
adc
pushf
outsb
jg
fcoml
outsl
movsb
mov
mov
dec
push
js
fwait
jae
cmp
stos
mov
adc
xchg
sub
jmp
inc
sub
fs
jb
int
fadds
mov
pop
xchg
std
xor
out
xchg
sti
mov
dec
gs
push
popf
push
mov
jge
test
jge
pop
unpcklps
adc
stos
in
jge
movsb
inc
out
push
sub
mov
jbe
inc
sub
scas
lcall
or
push
sarb
scas
rcr
sbb
push
test
out
mov
scas
cmp
lds
xor
xlat
fwait
ret
xor
push
and
sti
dec
inc
outsl
mov
in
and
andl
movsl
or
cld
mov
lds
push
inc
sbb
or
cmp
sub
je
mov
hlt
cmpsl
test
hlt
popa
jns
adc
movb
or
push
movsl
dec
mov
insl
scas
mov
xor
call
test
xor
xorl
int
mov
adc
out
push
mov
dec
mov
mov
mov
orb
pop
xor
sbb
call
insb
fcmovnbe
adc
sbb
mov
sub
mov
jmp
push
pop
mov
pop
repnz
mov
adc
fisubs
mov
mov
out
adc
push
js
mov
repnz
mov
jno
je
ret
mov
adc
sbb
mov
jo
andb
movsl
jne
lret
pop
rcrl
xor
cmpsl
cmc
jbe
mov
or
inc
jg
mov
pop
movsb
xorl
mov
int3
jl
push
fwait
adc
loope
sbb
cmp
sbb
lret
stos
push
shll
inc
jmp
lods
xchg
aas
arpl
mov
mov
mov
scas
and
jae
negb
cld
ljmp
js
adc
loop
int3
inc
gs
lea
mov
aam
sbbb
lahf
xchg
lds
sub
or
push
out
pop
sbb
inc
jo
rol
pop
lahf
mov
cmpl
add
add
lcall
loopne
jecxz
mov
iret
push
insb
popf
add
repz
arpl
inc
test
iret
fs
mov
push
push
mov
inc
pop
pop
cmp
shr
je
mov
mov
loopne
mov
add
sub
sub
sahf
lds
push
cmp
add
sub
sti
gs
sub
mov
and
cmpsl
insl
movsl
arpl
pusha
dec
and
pop
mov
test
repz
add
mov
cmpsb
outsl
pop
mov
rcr
dec
xchg
imul
outsb
stos
enter
push
stos
sub
mov
hlt
push
mov
adc
pop
pop
test
or
sub
lcall
mov
aas
mov
inc
pop
add
adc
jmp
sbb
in
movsl
push
sbb
mov
cmp
ficoms
pushf
rorl
data16
xchg
cmp
add
negb
leave
rolb
int
xor
popf
push
jge
adc
xor
ja
push
and
dec
repnz
add
call
inc
fs
fnsave
dec
fdivrs
test
cmp
and
test
sbb
inc
shrb
jl
stos
stos
cmp
sbb
mov
xor
in
adc
mov
pop
aam
in
pop
inc
mov
out
inc
push
xor
adc
add
jle
in
test
ljmp
sbb
inc
inc
nop
or
fwait
divl
push
push
daa
stos
push
dec
dec
je
cli
adc
fidivrl
les
scas
or
daa
frstor
rolb
lods
clc
leave
dec
sub
pop
mov
jl
xchg
and
jge
orl
rclb
fwait
cwtl
jae
mov
daa
sbb
jnp
repnz
ja
ss
pop
adc
pushf
and
ja
clc
movsb
mov
dec
movsb
push
lret
jnp
xchg
decl
bound
adc
scas
fsubs
imul
push
mov
inc
xlat
inc
dec
rcrb
leave
inc
xchg
inc
imul
inc
cld
add
cmpw
push
out
mov
insl
jle
aad
ljmp
cltd
xor
adc
lcall
xchg
hlt
mov
int3
pop
clc
popa
dec
xor
push
jge
jg
outsb
mov
cwtl
xor
call
hlt
push
popf
outsl
mov
inc
mov
loope
add
inc
cmp
cmpb
push
fldenv
in
inc
aas
pop
push
ljmp
clc
cmp
out
inc
xchg
out
dec
sbb
or
sub
mov
sti
mov
xlat
mov
cli
rcr
scas
pop
rcrl
fmul
cmp
add
imull
mov
mov
sti
enter
orb
xchg
xchg
pop
pushf
insb
pop
sbb
xchg
pop
sbb
fistpl
inc
add
push
in
ljmp
push
movsl
mov
and
mov
dec
sbb
pop
rclb
xor
push
bound
int
mov
adc
fidivrs
push
lea
inc
push
cmp
hlt
testl
insb
mov
sahf
shl
mov
nop
das
inc
pushf
ret
lret
cltd
mov
in
lea
adc
aas
cmovo
and
scas
mov
mov
sbb
push
cmpsl
inc
or
mov
push
pop
dec
or
mov
and
xchg
mov
mov
adc
cmpsl
sbb
sub
mov
nop
movsl
and
cltd
mov
mov
scas
add
in
dec
xchg
clc
lea
sti
mov
ds
adc
adc
sbb
cmp
insl
xor
sub
pop
mov
or
cmp
push
fcmovnb
clc
add
cmp
repnz
test
mov
stc
xlat
jmp
push
pop
loop
xorl
xor
sub
sahf
insb
pushf
adc
jp
or
dec
repnz
jg
stos
cmp
cmp
sub
subb
adc
dec
out
lret
sub
mov
lret
bound
ja
xor
jne
insb
push
mov
dec
imul
push
adc
cmp
lret
xor
cmpsb
std
pop
movsl
int
inc
sub
cld
ds
jle
inc
fcompl
imul
cmpsb
cld
jae
jl
mov
mov
pop
arpl
and
push
jle
sbb
pop
adc
mov
idivl
sub
and
push
mov
mov
iret
fwait
mov
adc
pop
addr16
jp
add
mov
mov
mov
xor
insb
inc
fwait
in
add
ja
or
xchg
inc
call
dec
pop
clc
fcos
pop
push
loopne
xor
sbb
sbb
inc
cmp
inc
fists
push
mov
or
call
xlat
xor
movsb
sbb
nop
rcrl
movsb
aam
pop
test
sub
adc
ss
jbe
cmp
dec
aas
icebp
adc
orps
int3
jecxz
mov
std
sti
push
mov
movsb
sub
dec
and
cmp
pop
pop
lds
push
stc
dec
inc
stos
push
and
fidivl
pop
lds
mov
cld
or
inc
xor
pusha
sahf
jnp
cwtl
test
and
adc
jns
xor
mov
or
adc
and
aam
movsl
jl
es
lods
jne
ror
ljmp
cli
or
int
jle
inc
scas
movsl
stc
pop
fstps
pop
xchg
add
lods
and
addr16
xorb
fstpl
mov
pop
imul
lods
cmp
mov
insl
add
lret
adc
xor
mov
in
xor
test
lea
cmpsl
adc
aaa
pop
fiadds
pop
pushf
scas
lahf
repnz
mov
ds
dec
sub
inc
lcall
ds
pop
sub
and
jne
rclb
outsb
lods
je
outsl
shl
arpl
loop
aaa
cmp
push
outsb
out
push
data16
lea
in
cmp
ss
rcrl
lds
jno
fists
addr16
ljmp
sub
xor
push
jo
inc
jne
xchg
dec
popf
mov
push
push
inc
lods
scas
es
dec
pop
outsb
mov
ljmp
mov
dec
push
dec
sbb
out
push
pop
adc
xchg
sbb
testb
xlat
sbb
aad
inc
pushf
xchg
std
stc
push
movsb
push
pop
ds
adc
iret
mov
push
pop
lock
sub
jb
insb
mov
fcmovb
or
and
and
push
push
addr16
in
insb
xor
sbb
stc
roll
cmp
pop
add
subb
or
xorl
scas
sub
les
repz
fcomp
pop
mov
inc
push
mov
rclb
ret
adc
orl
pop
test
int
sbb
or
mov
jo
jp
out
inc
fdivrs
xchg
dec
inc
inc
adc
jecxz
mov
jbe
push
repz
cltd
je
inc
push
and
inc
stos
mov
scas
sub
adc
pusha
mov
cmp
mov
or
mov
ja
xchg
outsb
mov
movsb
mov
push
daa
les
add
or
or
nop
out
jge
test
pop
inc
sbb
int3
aad
add
and
lcall
movsl
js
lock
stos
sub
fidivs
shlb
aam
pop
fdivrs
lahf
mov
mov
popf
sbb
lcall
pop
insl
mov
jp
loop
shrl
cmp
lea
aas
rcl
jns
mov
aam
pushf
cld
xor
or
or
sub
xor
push
ret
testb
and
daa
mov
lret
sbb
mov
and
ljmp
mov
test
fstps
fidivrl
jb
mov
fistpl
idivb
scas
cmc
mov
pop
pop
adc
fcomps
pop
loope
or
xor
push
lods
xor
in
jbe
nop
hlt
inc
addr16
bound
xor
int
sub
aas
movsb
popa
cli
pop
dec
sarl
pop
cmp
mulb
clc
cmp
outsl
mov
sbb
xor
scas
fnsave
vpshlq
arpl
dec
faddp
and
jp
sub
aas
mov
push
inc
mov
imul
push
jne
rep
pop
aaa
shrl
cltd
ja
aas
mov
pop
adc
imul
repnz
dec
stos
mov
gs
into
loop
jle
jecxz
push
clc
lret
enter
pusha
sub
loope
aaa
dec
xlat
push
adc
push
jae
jle
cmpsl
sbb
or
mov
pop
inc
or
adc
movntq
out
in
or
adc
xlat
lods
pop
sbb
imul
inc
inc
ja
adc
stos
sbb
ds
jbe
mov
dec
or
pushaw
mov
orb
iret
mov
fdivl
bound
cwtl
or
sub
fisubrs
jb
inc
push
stos
push
xchg
popa
mov
xlat
rcl
je
iret
dec
push
jecxz
jno
scas
rorl
jns
scas
xor
sub
jno
ret
cmpsl
push
sbb
imull
inc
pop
or
mov
jge
pop
cmc
in
and
pop
xchg
out
pushf
push
jbe
gs
mov
dec
mov
jae
inc
inc
xchg
dec
rcr
cmp
nop
push
test
mov
iret
sahf
shrb
outsl
sub
mov
pop
xchg
cmp
adc
decl
dec
mov
sub
fnstsw
mov
and
mov
fldt
es
and
je
dec
and
xchg
iret
nop
and
cmpsb
cld
stc
mov
or
jnp
dec
pop
ficoml
inc
jno
repnz
sub
movsb
jmp
pushf
adc
push
dec
sbb
sti
push
add
das
stos
add
mov
movsb
lcall
daa
push
mov
imul
out
push
leave
jae
lret
pop
fisubrs
pop
pop
xor
sub
ss
in
shlb
sti
clc
fisttpll
into
push
sub
or
jge
cmpsl
jns
idivl
fldcw
jle
inc
jmp
push
pop
ret
loopne
and
insl
cltd
mov
mov
xor
gs
mov
and
or
sbb
xchg
cmpsl
add
imul
mov
int3
add
orb
dec
shll
and
jne
or
idiv
inc
and
call
out
add
fs
or
xchg
repz
xchg
icebp
xchg
xchg
add
xor
repz
sti
in
addr16
xor
mov
popa
fistpl
into
sbb
and
mov
in
and
mov
and
add
or
pusha
scas
xor
sub
js
ljmp
data16
push
lahf
fdivrl
xor
push
cmp
ficoml
and
bound
fidivl
leave
jo
push
lret
insb
cmpsl
mov
rclb
out
sub
clc
jo
pushf
mov
cs
aas
ljmp
stos
pop
sbb
in
cmc
daa
scas
out
fistpll
push
lods
cmp
int3
sbb
test
add
or
push
or
jg
sub
add
adc
sub
ss
fistpl
in
lea
add
push
gs
mov
test
mov
call
and
cmp
jge
jg
mov
ficompl
mov
into
add
xchg
pop
mov
inc
cmp
repz
and
mov
lea
jo
sub
iret
int
cs
pop
mov
mov
outsl
bnd
aam
stos
into
cmp
pop
sbb
mov
mov
adc
es
pop
xchg
mov
and
inc
pop
dec
lods
dec
mov
sub
push
or
dec
in
js
or
sbbl
out
dec
aas
int3
nop
push
cmp
stc
dec
sbb
lcall
mov
pop
xor
int
stc
push
or
shlb
lods
enter
js
cmp
mov
loopnew
mov
aas
repz
and
insb
mov
lret
and
jae
sarl
xchg
inc
jnp
out
int3
scas
clc
insb
mov
cwtl
push
mov
cmp
lock
push
lea
hlt
cltd
sbb
dec
mov
push
loopne
mov
dec
xchg
in
scas
lock
pop
sub
pop
xor
nop
out
in
sti
push
je
cmp
inc
jl
fidivl
jbe
pusha
test
sbb
pushf
mov
sbb
arpl
adcl
xchg
xchg
aam
sub
ret
fsubs
jmp
or
sub
shrb
lods
int
lea
cli
les
jo
pushf
popa
adc
sbb
insb
push
push
aaa
lods
xor
xchg
add
mov
mov
imul
push
hlt
mov
dec
xor
ret
aad
xor
sbb
pop
xchg
lahf
sub
jae
out
cltd
daa
popa
and
ficomps
pop
mov
test
das
leave
insl
jge
inc
dec
or
icebp
push
fidivrl
dec
insl
xchg
insl
bound
pop
es
outsl
lods
lcall
bsr
xchg
fstps
cmp
in
ret
fs
shrl
adc
xchg
es
jno
lds
mov
push
ljmp
into
pop
adc
mov
dec
add
xchg
sti
mov
pushf
or
cmp
pop
add
add
push
push
push
pop
jge
sbb
adc
add
int
loope
pop
adc
xlat
xchg
inc
push
xor
lock
mov
add
ja
push
cmpsl
fldt
mov
mov
mov
shlb
orb
or
sbb
lds
cli
arpl
gs
ds
xchg
mov
fwait
stos
xchg
or
adc
nop
mov
sbbl
cmpsl
mov
jecxz
inc
leave
loopne
push
loope
jmp
lods
jae
pop
jl
xchg
cmpsl
mull
cltd
inc
sbb
pop
mov
insl
jns
jae
sub
test
xchg
mov
or
inc
add
dec
xor
test
aad
inc
test
repz
mov
mov
push
dec
test
inc
xor
jbe
cmp
xor
ss
decl
mov
push
adc
cli
cld
lret
sub
xchg
test
xchg
cmovno
cmp
jle
pop
push
ret
cmp
fdiv
jne
lret
pop
xchg
jnp
popa
xchg
xor
cld
mov
aas
lods
mull
je
aaa
cltd
pop
fwait
rolb
je
inc
cmp
dec
inc
outsl
mov
ja
jge
xchg
fs
jge
mov
push
mov
xor
ds
inc
adc
stos
fnsave
lea
aas
jmp
fwait
popf
dec
fimuls
push
repz
loope
fucomi
xorb
loope
fs
movsb
rcrl
js
xchg
mov
xlat
mov
inc
xchg
sub
mov
jmp
sub
inc
fbstp
xchg
mov
jmp
mov
jb
sbb
xchg
aad
nop
cmpb
inc
sbb
cmpsb
pop
ljmp
das
repz
lea
sbb
mov
pop
mov
sahf
data16
repnz
cmpsl
cmpsb
sbb
mov
adc
xchg
iret
andb
adc
jle
cli
stc
jb
jmp
rol
aad
mov
fdivr
pop
arpl
cltd
jno
pusha
mov
or
and
fs
pop
mov
daa
fadds
icebp
mov
push
xchg
popf
xor
dec
lret
push
cltd
lods
add
inc
cmpsl
scas
push
adc
xchg
mov
aas
sbb
inc
xchg
or
or
add
or
lcall
fwait
jne
mov
jmp
ror
xchg
ret
out
scas
inc
jnp
pop
scas
or
leave
jbe
addr16
push
or
xchg
push
sbb
pop
leave
or
je
and
mov
push
pop
adc
loopne
arpl
out
out
loope
loope
xlat
mov
ss
fstpt
dec
mov
mov
out
arpl
addb
fmul
pushf
ss
sbb
add
sub
jmp
loopne
lret
lods
aas
inc
addr16
mov
int
jo
es
icebp
dec
dec
sbb
hlt
add
insb
add
test
push
aas
in
mov
jle
lods
movsl
lcall
inc
clc
jmp
mov
clc
popa
ret
xchg
sub
or
add
and
pop
push
mov
pop
ljmp
jecxz
sub
mov
fimull
test
or
repnz
ss
push
scas
lret
mov
loopne
xor
dec
jp
mov
pop
xor
pop
cmpsb
mov
sub
add
or
xchg
aaa
xor
arpl
push
lds
in
cmp
addb
js
stc
mov
sbb
into
ja
jmp
iret
jge
mov
arpl
shlb
mov
roll
shl
faddl
sub
fs
pop
xor
sahf
inc
mov
mov
into
loopne
fstl
pop
or
addr16
cmp
lahf
nop
ljmp
and
clc
sbb
push
test
adc
or
popa
mov
movsl
icebp
orb
pop
xor
sbb
leave
mov
insl
xchg
or
je
xchg
xchg
dec
nop
cltd
pusha
or
or
jo
addl
outsl
pop
stc
enter
test
push
je
inc
ljmp
mov
filds
push
into
jp
hlt
jmp
mov
sbb
ret
rcrb
mov
pop
pop
and
dec
pusha
inc
cmp
cwtl
pusha
cmp
das
orb
dec
adc
sub
adc
sub
fisttpl
push
cmpsl
lret
fsqrt
push
xchg
pop
stc
mov
lods
and
dec
repnz
dec
dec
rorb
aaa
imul
add
mov
sub
and
sub
out
inc
iret
jnp
insb
dec
xchg
scas
inc
retw
mov
jecxz
jb
and
shrl
jno
add
int3
jae
leave
and
bound
in
rorl
xor
int
int3
insl
jnp
pop
xchg
cmp
stc
push
sub
mov
jmp
xchg
cmpsb
lahf
lds
pop
dec
aam
cmpb
lods
or
rcll
sbb
daa
push
or
xor
pop
push
cwtl
xchg
or
jmp
arpl
lock
aam
jecxz
push
cmp
cs
mov
sbb
sub
fistps
mov
sub
cmp
pop
into
lahf
adc
add
imul
pop
push
mov
jne
mov
movsb
daa
bound
enter
xchg
mov
arpl
dec
sub
xchg
xchg
push
fidivl
pushf
in
iret
adc
mov
push
push
pop
push
adc
shll
lds
ds
ror
xchg
leave
sarb
xor
xchg
lret
out
adc
cltd
imul
jae
push
adc
mov
adc
in
flds
and
xchg
imul
add
xorb
mov
cmp
std
stc
popf
adc
scas
jl
push
jns
shll
enter
or
dec
pop
mov
int
jle
jns
in
rcrb
dec
pop
pop
cmp
jno
inc
pop
sub
add
mov
mov
and
lret
insb
sbb
jne
add
xor
je
sbb
out
pop
adc
xchg
fldt
sbb
pop
out
jae
inc
xchg
sbb
pop
and
das
jp
and
out
call
xchg
inc
shrb
in
pop
jl
mov
mov
dec
push
fsts
pop
stos
clc
scas
adc
or
xchg
adc
or
int3
pop
xor
data16
mov
in
pop
test
lods
imul
ja
hlt
jns
cltd
ja
cmp
mov
pop
rclb
aas
sub
in
aaa
add
out
iret
mov
loop
and
cmp
mov
popa
add
xor
bound
push
pop
fildl
jecxz
notl
das
clc
cmp
or
bnd
cmp
bound
inc
mov
push
test
jp
adc
sbb
popa
xchg
shlb
jns
sub
rolb
aam
in
enter
add
xchg
jne
sub
lret
out
push
imul
jae
push
scas
lods
scas
jmp
mul
pop
push
pop
xchg
cmpsb
xchg
push
leave
les
and
ret
cmp
flds
dec
mov
ja
fs
jbe
mull
subl
jecxz
mov
test
mov
loope
das
jp
pop
cltd
fdivs
fstpl
push
or
mov
das
adc
inc
inc
pusha
loopne
jno
in
in
or
xor
mov
mov
cs
adc
std
sub
sbb
cmpsl
add
lret
mov
loope
lcall
lock
sub
cmp
in
sub
cld
aaa
dec
cs
sahf
jne
fst
pop
pop
inc
mov
leave
mov
dec
mov
jp
in
mov
inc
cmp
sub
push
imul
add
bound
ret
adc
int
mov
push
jbe
fisttpl
sahf
loopne
add
stc
lret
pop
push
pusha
mov
push
mov
add
pop
cs
ljmp
clc
and
cs
and
sub
mov
xchg
out
sbb
dec
cmpsb
aas
mov
aas
sbb
push
or
shll
or
dec
sti
clc
movsb
or
cmp
scas
add
mov
inc
popf
hlt
popf
notl
fdivrp
sub
push
inc
sub
lods
pop
sbb
jp
daa
xchg
lods
lahf
test
mov
mov
shr
sbb
adc
or
std
adc
lods
and
shll
jge
in
cld
int3
testb
xor
aas
lock
repz
xor
out
mov
sub
inc
jb
scas
xor
mov
test
addr16
push
or
out
sarb
iret
enter
std
inc
clc
shll
lods
das
xor
sbb
xor
sub
out
sbb
cmp
mov
popf
pop
jl
sbb
fsts
aad
mov
inc
out
sahf
daa
mov
imul
test
cmpsl
fs
filds
gs
or
jns
xlat
push
sbb
enter
xchg
cmp
mov
call
inc
movsb
repz
icebp
pop
or
outsl
hlt
fs
cmp
scas
stc
mov
shl
mov
add
mov
xchg
rcr
cltd
xchg
cmp
fisubs
out
testb
pop
inc
sbb
test
mov
into
dec
mov
stos
scas
push
in
cmp
cs
mov
outsb
sbb
xlat
in
cmpsl
mov
lods
shr
mov
mov
adc
pop
xor
inc
xchg
lcall
mov
xchg
fcmovnbe
lret
pop
and
mov
lret
nop
and
and
dec
xor
xchg
jno
jmp
push
cmpsl
mov
imul
test
xorb
out
and
mov
loopne
sub
mov
mov
and
shl
sub
jmp
xchg
arpl
pop
push
in
test
fadd
ror
vpmacsdd
mov
and
dec
aad
sub
andl
adc
in
and
and
cmp
jbe
push
jp
and
or
jmp
pop
dec
test
fs
sahf
cmp
repz
ds
sub
fisubl
or
call
fdiv
int3
cmp
jp
sti
add
sub
xor
jecxz
add
test
push
daa
int
fdivr
inc
jmp
call
ds
bound
mov
dec
insl
dec
lahf
jbe
jno
xor
pop
push
addr16
push
and
xchg
sbb
lcall
and
shll
sub
test
out
into
sbb
xor
jo
inc
xor
ret
loope
arpl
mov
js
mov
and
pop
mov
mov
push
test
pop
nop
aam
repz
lea
mov
mov
push
call
das
rcrl
stos
fstpt
push
nop
xor
cs
fisubrl
inc
into
sub
xchg
jp
push
div
sbb
into
aam
cmp
lahf
mov
sahf
ret
mov
rcr
and
dec
or
fistpl
aaa
sbb
inc
call
mov
mov
clc
popf
jno
das
sbb
pop
jp
or
jp
add
push
jl
mov
out
cltd
mov
clc
daa
push
or
int3
push
in
sbb
insb
or
inc
adc
popl
sub
xor
cmp
cld
sbb
inc
sub
js
scas
fcmove
inc
pop
popa
jae
xchg
sub
jae
leave
jne
enter
iret
mov
pop
push
push
je
shrb
clc
fisttpl
fmull
lahf
imul
sub
xchg
cmp
icebp
pop
dec
out
jns
mov
jns
mov
xchg
popf
into
cmpsb
in
pop
adc
rcl
jmp
stos
push
xchg
jne
cmpsl
imul
ljmp
rorl
fstpl
mov
ja
push
test
pop
lcall
mov
and
jo
push
out
outsb
cmc
scas
arpl
sti
andl
jbe
cmpsl
popl
lods
in
leave
aad
lret
jo
aaa
imul
nop
scas
pop
das
or
xchg
mov
orb
data16
push
xchg
nop
pop
add
push
fists
das
pushf
fistl
add
xchg
sbbb
bound
and
jnp
imul
int3
jb
addl
je
mov
jecxz
add
and
nop
ret
rcll
gs
ljmp
and
push
mov
xor
aam
cwtl
ret
adcl
cmp
cmpsl
inc
frstor
addl
mov
cmpsl
sbb
into
sbb
sbb
xor
cmc
jle
mov
sub
inc
mov
cmp
int3
lret
xor
xchg
mov
mov
gs
sbb
mov
rcrb
push
sbb
fildl
push
fmull
push
fwait
mov
dec
mov
pop
cmp
xor
sbb
clc
xor
mov
and
lods
pop
sub
adc
xor
pop
aas
notl
pop
sti
mov
jg
mov
push
jp
subb
std
dec
daa
jge
in
add
dec
lods
pop
out
int
jne
test
popf
test
imul
mov
arpl
mov
sub
shll
mov
clc
xor
and
mov
mov
dec
lret
sub
cmp
jae
test
sbb
in
and
push
ljmp
out
mov
fsubp
aaa
lods
loop
pop
stc
lock
sarl
jns
adc
or
mov
aad
dec
mov
lret
test
mov
outsl
push
cmpsb
das
inc
inc
mov
mov
pop
cmp
setb
fwait
sbb
sbb
nop
mov
fcomi
cmp
mov
repz
cmp
lret
clc
mov
mov
mov
push
push
mov
mov
mov
xor
fsubr
scas
gs
cmp
scas
or
into
cld
pop
mov
pop
aam
icebp
jge
movsb
cmc
fcmove
cmc
aam
int
lds
lret
aaa
mov
pop
mov
inc
mov
xchg
sub
fcompl
not
pop
jnp
sti
mov
mov
add
adc
sbb
inc
ret
mov
xor
test
and
fisttpll
jge
xchg
pop
mov
pop
arpl
or
jo
xchg
les
sbb
addl
out
push
imull
pop
pop
xor
ljmp
pop
push
push
cmpsl
sbb
stos
adcb
push
pop
pop
movsb
mov
jb
shlb
adc
aaa
fwait
stos
sbb
outsl
div
push
adc
jle
pusha
ja
mov
jne
mov
mov
call
jl
mov
jp
ret
xchg
pop
push
popf
and
sahf
mov
js
int3
xchg
pop
in
push
mov
inc
movsl
push
sub
push
adc
mov
push
push
mov
push
mov
enter
popa
mov
fidivrs
out
and
jmp
mov
push
push
push
add
mov
mov
imul
loopne
dec
fistl
cmp
mov
mov
ljmp
sub
mov
add
dec
sub
les
shrb
cmp
cmp
mov
ljmp
mov
sub
lahf
xlat
in
push
insb
push
aad
cmp
jge
add
mov
pop
cwtl
mov
push
sar
pushf
xchg
push
sar
xor
ja
dec
or
scas
jo
repz
data16
lcall
xchg
sti
out
mov
test
enter
pop
call
jmp
mov
sub
sub
loop
push
stos
dec
sbb
inc
idivb
cmp
mov
sahf
add
imul
inc
and
in
in
pop
cwtl
test
mov
or
fisubl
sbb
daa
lods
out
aam
aas
sbb
data16
jmp
cmpsl
mov
ds
fmul
mov
jo
mov
cltd
pop
pop
mov
push
lds
pop
dec
das
push
and
xorl
cmpsb
or
inc
lods
jge
hlt
inc
mov
inc
jl
int3
in
dec
add
cmpl
es
add
push
imul
mov
pop
dec
mov
sbb
inc
lds
or
or
js
mov
fidivrs
clc
sub
mov
jmp
jb
mov
inc
jns
and
jge
dec
jae
sahf
pop
add
rcrb
sbb
fiadds
mov
jno
pop
sub
mov
dec
jns
xor
shlb
das
mov
mov
data16
out
loop
stos
xchg
std
pop
fdivrs
jle
pop
nop
push
mov
ja
out
aaa
jne
pop
test
push
fstps
cmp
mov
jl
mov
or
sbb
mov
and
nop
orb
add
cmp
inc
stos
xchg
xlat
in
out
mov
cmpsl
cmc
dec
xchg
lahf
push
movsb
cmpsl
add
adc
cmp
xchg
cmp
enter
mov
aas
inc
cs
stc
mov
fdivrs
stos
lret
inc
inc
fistps
aam
out
push
out
dec
testl
insb
lahf
pop
mov
lahf
cmpsl
or
out
push
lds
sbb
out
aad
adc
xchg
adc
dec
fs
cmp
mov
cs
sbb
lea
and
cmp
mov
ss
inc
or
cli
sti
popa
cmp
jnp
cs
mov
shlb
add
sub
jl
sub
imul
pop
lahf
je
sub
pop
sub
int3
or
aaa
mov
adc
push
jns
pop
popf
movsl
sub
out
mov
and
pop
xchg
push
push
add
xchg
insl
or
cmp
jl
jo
adc
fwait
dec
mov
xor
lahf
dec
jbe
mov
pop
add
sbb
pop
call
sti
in
sbb
idivl
or
xchg
arpl
mov
in
xchg
fsubs
mov
insb
xchg
mov
push
jmp
sahf
std
sar
sbb
mov
sub
lret
dec
adc
jl
popf
scas
push
inc
nop
xlat
bound
push
dec
sub
inc
jecxz
xchg
cli
fdivrs
imul
mov
mov
lds
sti
mov
sbb
outsb
rcr
lds
cmpsl
pushf
mov
mov
cltd
dec
sub
pop
inc
cmpsb
push
xor
jg
cmc
mov
cli
leave
loopne
inc
inc
pop
fisubrl
repnz
pop
imul
pop
dec
stos
cmp
mov
xor
mov
inc
cmpsb
jle
lods
mov
cmp
mov
jmp
pushf
or
and
mov
in
add
inc
xchg
repnz
sarl
fistpll
dec
pop
dec
scas
mov
xor
cmp
mov
fiaddl
int3
mov
adc
sub
mov
sub
cmp
sub
push
xchg
int
inc
adc
and
insb
pop
and
dec
mov
xor
leave
test
les
cltd
add
mov
push
pop
jge
int
jnp
mov
lahf
cld
cmpsb
stos
aaa
mov
xor
cmp
mov
mov
mov
xchg
and
mov
sub
mov
inc
xchg
add
sbb
sti
pop
stos
bound
mov
mov
out
adc
cmpsl
sub
dec
add
addr16
push
mov
push
mov
or
cmp
cmp
adc
scas
fsub
sbb
jmp
xor
call
mov
cwtl
sub
cld
mov
js
mov
add
dec
pop
add
sbb
xchg
outsb
xchg
adc
add
pop
addr16
lea
jmp
cmp
inc
inc
sahf
dec
je
pop
add
add
std
mov
jns
in
gs
in
fs
sub
fisttps
sub
sub
pop
jnp
mov
out
scas
xor
outsl
lret
xchg
lock
jle
fistl
xchg
test
xchg
xor
repnz
mov
repnz
jle
and
adc
dec
daa
ret
out
imul
les
cmpb
je
ja
inc
dec
lock
movsl
jg
and
adc
adc
lds
loope
adc
std
mov
sub
std
or
add
jl
or
or
sarb
push
data16
push
add
pop
fisubs
sbb
leave
lret
scas
insb
inc
pop
sbb
out
xchg
pop
cltd
inc
dec
incb
mov
fcmovu
sub
jge
push
cmpsb
cltd
cmp
mov
dec
sbbb
jmp
pop
jo
fistl
je
lock
jo
xchg
mov
cmp
adc
data16
jle
jmp
les
sub
cmp
cltd
mov
adc
ds
filds
ficomps
fcoml
cmp
jge
adc
into
inc
sbb
xor
popf
dec
push
xchg
fs
add
mov
pop
mov
dec
sub
repnz
sub
js
out
xchg
dec
xor
sub
jg
dec
inc
andl
sub
adc
xor
aaa
add
ret
mov
jae
call
inc
dec
add
mov
cltd
xchg
pop
sub
sub
imul
push
fidivrs
add
pause
dec
ja
arpl
dec
add
cmp
mov
dec
mov
push
test
mov
iret
or
cmc
push
int3
push
inc
pop
push
outsb
test
lret
shll
int
icebp
adc
sbb
push
sbb
xor
in
fimull
jo
push
stos
and
push
imul
sbb
or
xor
aam
xor
adc
pop
rolb
bound
aam
pop
xor
leave
pop
cs
inc
mov
mov
adc
jecxz
mov
xchg
daa
jno
fstpt
jl
test
mov
insb
jecxz
loope
sub
jb
sbb
push
push
je
pop
dec
xchg
cmova
mov
jl
xor
inc
mov
scas
loopne
xor
cmp
mov
push
xor
pop
adc
std
loopne
mov
mov
test
mov
sbb
bound
incl
ljmp
cmpl
xor
push
dec
popf
push
stos
scas
ja
in
pop
xor
xchg
out
jg
test
bound
inc
cmpsl
add
aas
stos
fdivrl
stc
fisttps
loop
mov
mov
sti
cmpsb
mov
lea
cmpsb
dec
popf
sbb
and
loopne
mov
aas
mov
cmp
inc
cmp
test
dec
fcoml
sbb
mov
or
fildl
aam
add
and
jmp
add
xlat
mov
jb
lds
iret
icebp
pop
shrl
aam
scas
jae
and
push
std
int
xor
shr
lret
cs
mov
fists
sub
xchg
data16
fbstp
pop
inc
xchg
pop
jo,pn
cmp
dec
repz
js
stos
test
push
minps
fwait
adc
adc
cmp
ja
mov
imul
call
test
jg
leave
sub
cmc
jge
out
and
push
xchg
sbb
push
add
addl
jecxz
shrb
jne
out
mov
pop
cmp
lret
push
mov
fmul
push
in
roll
inc
dec
jl
sbb
fwait
lods
push
adcl
jmp
dec
pushf
xchg
rcrl
das
dec
mov
push
insb
sub
in
mov
xor
gs
out
addr16
mov
push
das
call
lcall
adc
dec
add
sti
xchg
loop
stos
mov
adc
mov
jg
xor
jo
jno
outsl
outsb
dec
aam
fistps
pop
adc
mov
ss
pop
jnp
shlb
ret
dec
dec
movswl
xchg
xor
repz
rol
mov
lea
or
pop
mov
sbb
adc
mov
sub
mov
nop
xchg
hlt
jb
fwait
loop
mov
es
lcall
mov
mov
out
xor
cli
inc
or
fsubl
roll
sub
push
cli
mov
test
cmp
push
inc
jle
pop
cmp
addr16
subl
push
dec
xor
mov
push
xchg
sub
sbb
xor
cmp
adc
mov
mov
mov
pusha
cwtl
pop
hlt
pop
cs
mov
lds
sbb
pusha
or
add
lahf
out
inc
pop
adc
loopne
push
lret
dec
mov
out
jb
lds
push
jo
push
test
popf
pop
int
mov
adc
sti
cmp
outsl
jmp
jp
dec
jmp
mov
scas
stos
nop
ljmp
push
and
pop
out
arpl
adc
pushf
jne
aad
je
add
shl
jl
movsb
cmp
push
jecxz
push
mov
cmp
fsubl
jo
andl
lods
sbb
jmp
fistpl
in
cmpsb
pcmpeqb
push
mov
repnz
hlt
mov
cmc
mov
aam
xchg
insb
inc
std
and
scas
push
sbb
sub
sbb
fisttps
xor
call
mull
bound
in
fcompl
in
mov
stos
je
andl
pop
jg
push
adc
inc
mov
outsl
popa
mov
scas
pop
cmp
js
shl
push
xor
outsl
xor
dec
fcompl
testb
add
movl
imul
xchg
xchg
ret
dec
jo
fs
jle
add
es
aas
es
add
imul
sub
adc
jge
int3
xor
dec
jl
ljmp
lcall
xchg
fists
xor
mov
mov
push
inc
adc
dec
ja
iret
xorb
je
cs
lods
xchg
andb
nop
js
out
jmp
rcl
cmp
xchg
push
dec
ret
test
outsb
cmp
or
cmp
cmp
imul
pusha
jg
test
leave
mov
int
mov
sbb
mov
mov
mov
in
dec
push
shr
js
xchg
pop
cmp
push
cs
movsb
lds
addr16
mov
sti
iret
mov
xorl
dec
je
xor
in
adc
jne
sbb
rorb
aaa
push
mov
fidivrs
out
mov
call
add
arpl
ret
aas
bound
popa
adc
dec
xchg
pop
clc
insb
mov
pop
enter
inc
jb
add
ljmp
add
push
or
or
fdivl
jle
xchg
fwait
pop
les
ret
jle
mov
jg
repz
push
adc
push
pushf
jecxz
scas
sub
sbb
mov
mov
pop
pop
lds
sarb
or
loopne
cld
shrl
imul
aad
mov
cmpsb
gs
loop
xchg
dec
dec
mov
leave
test
dec
bound
outsb
mov
cltd
sbb
lock
psadbw
and
lret
out
shr
push
not
pushf
cmpsl
inc
dec
jge
aam
push
or
jmp
mov
out
jns
shrb
out
mov
scas
outsl
or
imul
movl
rclb
sub
mov
jle
dec
out
jg
mov
rorb
lods
jmp
mov
testl
jle
lds
std
loope
mov
ret
arpl
and
jg
aas
jns
jo
insb
mov
xchg
jae
cmpsl
dec
push
push
push
xor
call
mov
or
xchg
jno
clc
negl
push
sub
cmp
xchg
push
inc
ja
adc
pop
cs
mov
add
push
cmp
push
cwtl
xchg
add
mov
xor
mov
jg
popf
pop
dec
or
jae
and
dec
jg
ljmp
dec
sti
imul
lea
sarb
mov
mov
push
das
cmp
mov
dec
cld
test
negl
xor
push
push
jle
cmp
out
outsb
bound
lahf
std
dec
xchg
divl
jl
popa
enter
shr
adc
pop
insb
xor
bound
sti
pop
pushl
scas
scas
clc
jecxz
pop
ja
sahf
adc
mov
adc
dec
gs
std
xchg
xor
lcall
and
dec
pop
lods
dec
arpl
add
stos
jge
scas
inc
cld
dec
addr16
push
ret
mov
cli
roll
fs
cmp
xor
fimull
subb
in
xor
xor
add
lahf
dec
xor
mov
stos
sbb
sub
sarb
les
loop
mov
fnsave
ret
roll
mov
test
movsl
mov
jnp
out
and
loopne
pop
call
mov
fsubrl
dec
dec
rorb
xor
push
scas
mov
jo
inc
cltd
and
daa
jecxz
jbe
cmp
jae
out
lods
mov
lds
push
sbb
lods
out
in
pop
jg
repz
mov
popf
push
aas
dec
mov
test
xchg
add
and
pusha
add
inc
arpl
sbb
adc
xchg
mov
mov
sahf
das
or
popf
repnz
negb
mov
cltd
push
movsb
mov
pop
mov
push
push
sbb
sbb
add
pop
aaa
dec
jae
movsl
adc
rorb
aaa
sbb
xchg
jge
shrb
sahf
dec
stc
pop
out
std
or
xchg
jns
jo
mov
ret
push
shrl
addr16
xchg
loop
push
out
ror
cmp
mov
ljmp
mov
loop
and
dec
mov
lods
into
xchg
mov
push
imul
adc
jle
ljmp
mov
push
pop
aaa
dec
cld
fldt
jecxz
nop
cmp
mov
cmpsl
jb
cmc
xchg
out
lret
mov
and
jmp
incb
push
cli
push
subl
fdivs
aas
lods
je
cmp
fcmove
inc
push
sarl
dec
push
mov
cmpsb
dec
pop
jo
dec
cltd
hlt
out
jae
mov
add
jl
mov
aam
add
scas
lahf
and
sub
push
imul
gs
mov
cmp
cwtl
or
in
leave
mov
clc
int
and
sbb
push
adc
imul
push
xlat
inc
fwait
dec
push
xor
sbb
xor
mov
jg
xor
je
outsl
sbb
adc
cmp
fs
xchg
xorl
dec
sahf
jmp
pop
loop
stos
or
sub
xor
std
shrb
repnz
mov
mov
jl
int
pop
fisttpll
xchg
inc
push
fildll
std
cmp
lret
pop
lcall
push
dec
sub
cmp
pop
cmp
and
pop
or
ljmp
stos
mov
mov
repnz
inc
mov
mov
out
and
dec
fadd
aam
mov
xchg
jg
pop
sub
lock
xchg
ja
dec
dec
test
lahf
cld
ja
frstor
jns
push
int
out
mov
les
xchg
ret
enter
cmp
test
lods
sub
pop
inc
jo
xchg
stc
xchg
cmpsb
dec
jp
add
ret
iret
mov
inc
push
movsb
sbb
jp
rcll
jecxz
je
out
fsub
subb
ljmp
int
les
mov
je
ljmp
cmp
stos
loope
jns
lods
je
lock
push
xchg
mov
sbb
jle
jp
mov
popa
add
push
int
call
clc
jno
pop
dec
leave
jno
xor
push
movb
mov
jl
mov
xchg
repnz
out
mov
je
dec
es
push
das
ror
adc
cmp
jae
sets
out
dec
aad
ljmp
int
cmpsb
mov
nop
daa
repz
out
es
shr
popa
fisttps
call
frstor
aad
ds
jnp
icebp
adc
sbb
ss
jno
dec
sbb
ret
or
jl
xor
inc
mov
mov
mov
pop
pusha
loopne
cs
dec
lret
pop
daa
pop
push
dec
jge
mov
lcall
xor
out
dec
push
fistl
adc
clc
aas
divl
push
fdivr
xchg
popf
nop
ret
sbb
sbb
add
inc
aas
mulb
fadds
pushf
in
scas
sarb
cwtl
fistpll
cld
adc
xor
cmp
or
jnp
jbe
dec
xchg
cwtl
loope
repnz
inc
rclb
xor
mov
aas
xor
mov
aam
pop
pop
and
in
vcomiss
inc
xchg
push
pop
test
fidivrl
mov
sbb
push
das
fcmovnu
test
into
test
mov
sub
lods
dec
ljmp
mov
cs
adc
jp
inc
in
jl
mov
xor
jl
sbbl
push
pop
lret
dec
cmp
rcll
pop
dec
sbb
push
bnd
fnstsw
xchg
mov
xchg
vmptrld
int3
out
orl
insl
jbe
pop
jae
inc
inc
adc
mov
mov
std
popf
fwait
shl
scas
dec
xchg
popa
xadd
add
fimuls
mov
sub
fdivs
fs
popf
pop
and
fwait
xchg
jne
mov
cmp
cmp
mov
mov
jmp
cmpb
add
and
pop
sti
repz
jbe
push
cmp
cmp
xchg
iret
push
dec
sub
leave
cmp
jmp
clc
dec
rorl
outsb
mov
scas
ss
sub
mov
cmp
aaa
cmp
and
push
sbb
pop
jb
or
hlt
xchg
mov
lds
ja
jecxz
mov
sub
or
pop
mov
sbb
dec
and
jl
aas
jae
stos
les
dec
iret
and
sub
jae
pop
mov
bound
jp
jmp
mov
push
sub
cld
or
xchg
mov
xchg
dec
popa
inc
dec
push
int
push
cltd
push
adc
repnz
leave
gs
xchg
std
outsb
lock
cli
jge
ds
cli
insl
jl
inc
lds
push
pop
mov
lahf
jp
cmc
xchg
lock
lss
xchg
push
cli
xchg
cmp
add
lcall
es
fisttpll
fsubr
cltd
mov
add
push
cmpsb
lret
sbb
xchg
inc
mov
sub
sahf
mov
sub
dec
cmp
pushf
and
adc
lods
insl
fisttps
pushf
loope
xor
shll
dec
cs
inc
shll
add
push
inc
cld
test
xchg
sbb
xchg
in
push
or
add
imul
cmpsb
push
pop
test
dec
push
add
in
iret
gs
pushl
aaa
ja
mov
cmp
fcom
dec
mov
or
mov
sbb
sbb
xchg
es
or
mov
das
inc
outsb
mov
adc
jno
test
cmp
xlat
pop
loop
lret
sub
mov
sbb
jbe
repnz
xchg
mov
ljmp
insb
or
add
jmp
cli
enter
dec
ret
stos
adc
mov
imul
fidivrl
insb
call
or
enter
shll
mov
fstl
lods
mov
cmp
inc
cmpsl
dec
or
xor
loope
mov
xor
test
mov
adc
popf
xchg
jb
lea
fstps
mov
aam
sub
xchg
insl
fdivl
shl
aaa
add
or
aam
mov
outsb
scas
mov
dec
xor
cmp
sub
dec
pop
cwtl
mov
enter
enter
ljmp
das
dec
loope
daa
adc
xor
and
lds
and
cmp
pop
and
sub
jb
lock
xchg
insb
xchg
jo
mov
mov
movsb
jne
push
gs
jns
add
sub
aad
or
xor
add
hlt
cmpsb
inc
in
in
mov
adc
xor
cmp
cld
rorl
jg
sub
sub
xchg
cwtl
ret
add
push
das
imul
in
les
cltd
mov
mov
pop
dec
int3
sti
lods
sub
pop
test
sbb
ljmp
xchg
out
push
notb
lret
push
jae
cs
jb
jb
pop
and
lea
jnp
jnp
cwtl
inc
jne
cmp
jecxz
je
jp
jl
movsb
ss
and
test
je
popf
std
mov
rcr
mov
popa
or
dec
ljmp
icebp
pop
mov
jp
ja
stos
popa
jmp
cmp
add
stos
cmpsb
mov
lcall
sbbb
sbb
arpl
lcall
add
xchg
loop
jge
xchg
xchg
call
push
int
iret
or
es
das
and
std
cs
loope
mov
jo
jno
mov
pop
mov
add
loopne
in
fcomps
jmp
scas
inc
push
jae
popl
cmp
inc
mov
pop
bound
pop
adc
mov
je
dec
outsb
cmc
das
in
popf
jp
call
sbbl
std
add
lret
in
push
mov
and
mov
orb
mov
push
xor
inc
sbb
sub
movsl
mov
icebp
out
jbe
popa
or
call
add
xchg
add
or
xchg
fcoml
or
clc
out
or
push
inc
daa
jl
mov
mov
dec
push
dec
push
int3
push
jge
jno
fldenv
inc
adc
movsb
jg
lock
stos
cmpsb
gs
sbb
mov
fstps
shr
sbb
push
mov
and
and
call
pop
push
loop
adc
insl
mov
std
mov
test
insl
iret
jle
push
dec
test
sti
xchg
imul
sub
and
push
dec
movsl
mov
xor
mov
int
into
fisttpl
mov
scas
mul
lods
aam
movsb
jne
or
jmp
pop
subl
jno
roll
imul
mov
pop
arpl
pop
push
xor
aam
sub
push
cmp
aad
mov
sahf
xchg
dec
test
push
mov
clc
cmp
bound
jnp,pn
dec
lods
jle
cmpsl
aam
inc
inc
es
mov
jp
loop
test
into
jno
inc
jnp
lret
movsb
arpl
sub
fdiv
jecxz
mov
or
jne
je
leave
clc
inc
fimuls
pop
shll
pop
or
data16
fimuls
mov
sub
sub
mov
jbe
cmp
test
sub
into
ss
or
mov
insl
cmp
xchg
fdivr
lahf
jg
out
lods
dec
out
and
inc
test
inc
popf
sbb
frstor
push
aaa
xor
sbb
imul
mov
pop
xor
adc
cmp
jl
inc
mov
out
shrl
add
mov
popf
inc
lret
jmp
pop
mov
fwait
pop
int3
cmc
mov
inc
rorb
cmp
data16
test
xchg
lcall
les
push
mov
push
push
adc
dec
aas
loopne
add
push
fcomps
in
mov
pusha
popa
fsubrl
addl
dec
lahf
daa
xchg
jb
js
xchg
cmpsl
jo
or
push
subl
dec
lods
hlt
stos
or
mov
dec
loope
aam
stc
stc
xor
cs
in
xor
add
pusha
inc
daa
and
stos
getsec
pop
stc
fs
mov
xor
movsb
xchg
out
xchg
nop
bound
mov
mov
jmp
cmpsb
mov
ret
lods
dec
mov
xor
fbstp
adc
fsubl
xchg
out
mov
cmpsl
fwait
mov
sbb
mov
clc
or
jp
stos
bound
inc
not
aas
mov
push
aaa
xor
sub
push
and
mov
push
rcll
repnz
inc
or
adc
jmp
sub
xchg
add
or
fidivl
sub
cmp
aam
cmp
push
daa
in
je
push
mov
xchg
push
in
ret
dec
scas
lods
call
cmp
bound
cmp
jae
add
and
mov
add
pop
dec
ret
sbb
rclb
lods
push
push
lds
inc
loope
cmpsl
adc
sub
mov
insb
ljmp
repnz
cmp
loopne,pn
pop
inc
dec
lea
dec
lahf
lods
inc
lds
xlat
jecxz
bound
mov
sub
jg
fsubrl
cli
in
loope
into
out
mov
enter
inc
outsl
jl
cltd
mov
jge
add
popf
and
xchg
lahf
loope
cmp
xchg
into
popf
jnp
mov
dec
ror
fsubrs
mov
pop
lods
jnp
sub
cmp
xor
int
popf
incb
sbb
cmp
pop
jmp
dec
scas
jb
mov
push
gs
in
pusha
ljmp
push
pop
hlt
das
inc
popa
imul
push
add
xchg
popa
mov
test
mov
lods
in
xlat
push
mov
inc
enter
imulb
inc
andb
cmpsl
mov
ja
icebp
data16
or
lret
jne
push
lahf
rol
aam
stos
enter
scas
adc
jge
loopne
les
loop
aas
mov
push
out
mov
sbb
fwait
testb
push
lahf
outsl
lea
ret
daa
jmp
subl
dec
dec
xor
inc
test
leave
lea
fwait
fwait
cmc
cwtl
test
jne
es
ds
std
mov
into
mov
push
sub
daa
dec
out
xor
pop
inc
mov
mov
movl
mov
mov
mov
xor
xchg
mov
ds
jl
cmpsl
mov
fbstp
pop
je
xchg
mov
mov
pushf
inc
popf
mov
mov
xchg
popf
cmp
notb
add
stos
xor
insl
sub
add
lods
orb
mov
jae
xor
fisttps
outsl
or
ret
or
xchg
inc
mov
loopne
ljmp
mov
sbb
loop
push
pop
dec
add
push
or
daa
jne
xchg
jb
jl
or
clc
cltd
sub
jns
mov
pusha
xchg
lea
cli
lock
fdivs
lea
mov
test
adc
sub
pop
inc
cld
jge
mov
insl
mov
mov
sub
bound
fmuls
test
jmp
mov
or
push
out
test
mov
mov
mov
sbb
loopne
fnstcw
notb
out
dec
cmp
jnp
insb
xor
xor
sub
jnp
mov
aaa
or
fcomip
cmpsl
loop
cmpsb
cmp
inc
pop
test
rcrb
stc
pop
es
pop
push
sub
cmp
je
xchg
pop
or
or
rol
nop
dec
xor
js
or
ret
jae
nop
inc
das
or
cmp
loope
and
lret
daa
subw
inc
lahf
xor
sets
rsqrtps
adc
repnz
dec
jmp
mov
cmp
subb
jnp
insb
popf
and
sbb
pop
jns
call
inc
push
cmp
ret
lahf
pop
mov
jne
mov
loop
jae
add
jo
cmp
push
test
sti
sbb
test
iret
mov
mov
sub
jmp
push
outsl
loopne
fidivl
gs
aas
call
adc
mov
mov
cli
pop
loopne
sub
aad
jl
pop
adc
das
mov
push
xor
pop
mov
movsl
cmp
int3
add
and
push
adc
ljmp
sbb
movsl
jle
mov
jmp
in
sbb
subl
push
inc
push
dec
or
rorl
xor
add
fidivl
add
mov
insb
les
pop
outsb
cld
pop
xchg
or
sub
cmp
mov
cli
cmp
in
pusha
sbb
shrb
popa
hlt
fiaddl
cltd
sti
jg
test
inc
out
push
or
xor
orl
jge
push
mov
sub
mov
dec
add
fcoml
push
outsl
fstps
outsb
push
inc
repnz
mov
dec
nop
lret
daa
adc
icebp
fcos
cmp
sub
out
daa
movsl
fwait
mov
jb
and
aas
add
inc
cmpsl
cmp
fcoms
pop
mov
iret
xor
mov
dec
loop
and
add
xchg
insl
ja
xor
hlt
bnd
cmp
loope
pop
test
sbb
pop
ja
mov
sub
push
mov
sub
and
imul
sub
pop
scas
aas
push
mov
push
mov
pop
sahf
push
scas
out
mov
mov
cmpsb
adc
sub
jo
mov
das
jne
or
inc
mov
fiadds
pop
mov
repz
das
pop
dec
adc
sahf
sbb
adc
adc
sti
mov
add
push
and
push
jno
inc
adc
or
xor
push
mov
aaa
xor
mov
jae
adc
mov
fcoml
sbb
jnp
lods
and
movsb
xor
arpl
ret
or
fstl
scas
pop
mov
insb
fucomp
test
hlt
cli
sub
or
mov
fsub
cltd
or
leave
das
pop
xor
shlb
es
jp
ret
aad
adc
inc
xchg
dec
push
push
lods
add
jl
mov
jns
adc
les
es
sbb
out
repz
mov
fs
pop
or
aad
fsubs
sub
sbb
ds
les
jl
call
lds
test
ret
and
add
pop
jne
mov
cmpsb
and
test
aam
fld
test
mov
rolb
xchg
cs
std
inc
push
and
test
dec
and
jecxz
jg
ds
lret
push
cmp
roll
int3
mov
call
add
xor
stc
std
adc
leave
enter
pop
xchg
pop
rcr
mov
outsb
out
jp
data16
div
push
cld
mov
orb
loope
ret
cmp
pop
push
mov
inc
jae
push
and
test
mov
cmp
jbe
inc
inc
aad
adc
cmp
push
xchg
dec
add
push
pop
xchg
cmpsl
adc
jl
mov
pop
sub
push
adc
dec
out
stc
les
xlat
mov
pushf
adc
call
je
push
mov
stos
cmp
divl
jp
idiv
dec
insb
lods
addr16
pushf
pop
cwtl
cmp
divl
in
jg
adc
mov
xchg
ja
enter
dec
mov
xor
pusha
out
js
out
adc
insl
pop
shrb
xlat
and
inc
aam
xor
add
jne
ja
sub
shrb
rorb
jg
loope
and
hlt
jns
adc
aad
dec
jle
mov
mov
push
lret
xchg
daa
mov
pushf
loop
movsl
push
xchg
mov
stos
lret
addr16
int
andnps
cmpsb
ss
loopne
shll
cwtl
ret
out
mov
hlt
shr
or
push
mov
imull
ficomps
push
adc
inc
insb
inc
test
flds
push
pop
jnp
sbb
mov
hlt
nop
int3
mov
mulps
xor
or
cmp
sti
sbb
sbb
test
or
mov
cmpb
test
and
sbbl
fsubl
inc
loopne
mov
cmc
push
shrl
sarb
sbb
ss
xchg
and
mov
push
xor
roll
and
and
das
sub
jnp
fsubs
addr16
jmp
sarl
enter
imul
pop
cmp
nop
mov
inc
fisttpl
pop
or
js
mov
test
add
gs
in
xchg
addl
and
imul
lods
rcr
pop
ljmp
and
xchg
das
push
call
mov
mov
int
mov
dec
push
icebp
test
movsl
xchg
outsb
and
bound
mov
jo
pop
dec
xor
popl
mull
test
mov
xchg
mov
js
push
adc
sti
gs
loopne
push
dec
xchg
dec
sbb
clc
mov
shlb
adc
xchg
imul
int3
add
cmpsb
mov
inc
test
into
rcll
int
lret
cmp
mov
in
pop
fs
fldl
fcmovne
xor
fsubrs
add
bound
cmp
mov
xchg
fnstenv
pop
xor
push
aas
cmp
or
pusha
inc
lret
push
shrl
pop
outsl
sbb
mov
loope
xor
dec
fstl
nop
cs
rcr
mull
push
add
std
rcrl
push
arpl
stos
jmp
mov
dec
dec
jne
ds
stc
cmp
addr16
into
in
mov
insb
mov
fstpt
inc
or
fistpll
into
or
and
sub
sub
dec
push
ja
aam
sub
shlb
cmp
mov
cld
rcrb
pop
jge
sbb
cmc
mov
push
shrl
inc
mov
xor
jne
popa
mov
jg
lahf
mov
lds
lea
fs
and
test
and
gs
setns
int3
adc
scas
mov
adc
sbbb
cmp
pshufw
or
gs
popa
sub
or
xorl
ja
mov
outsb
cmp
cs
jb
adc
ret
lods
jmp
inc
mov
dec
pushw
sti
rol
mov
es
cmc
push
cld
sbb
inc
inc
jbe
shrl
fs
inc
mov
mov
cmp
mov
sahf
cmp
cs
xchg
int
mov
cli
cmp
shll
pop
fisubs
adc
add
arpl
xchg
inc
fcmovnbe
in
cmpsl
mov
jne
jl
aam
aas
adc
stc
cmpsb
mov
shlb
cltd
aam
in
xchg
mov
lcall
in
loopne
icebp
nop
pusha
cmpsb
jnp
jecxz,pn
sub
popa
shll
inc
imul
push
insb
movsb
jno
sti
jle
jecxz
cltd
ret
mov
subl
and
rcr
gs
mov
es
xlat
aas
mov
mov
or
dec
leave
enter
sub
and
mov
jecxz
adc
xchg
add
setg
daa
test
out
dec
ret
xlat
dec
pop
or
xor
js
add
jge
mov
and
aam
jecxz
in
lcall
xchg
pop
sbb
insb
dec
mov
ret
in
ljmp
movsb
iret
pop
xchg
inc
or
js
add
pushl
movsl
xorl
inc
out
jle
jbe
and
mov
cmpsb
loopne
xor
jecxz
or
mull
mov
adc
daa
test
pop
jns
movsl
ret
ja
sbb
int
or
inc
scas
pushl
and
xchg
push
lret
mov
mov
jge
repnz
pop
inc
pop
je
and
adc
dec
in
push
leave
xor
scas
mov
sbb
dec
lcall
adc
add
icebp
loopne,pt
out
addl
xchg
cltd
sbb
aaa
stos
adc
sbbl
iret
jmp
int
das
xor
leave
mov
lret
ficompl
int3
xchg
xchg
sbb
jns
lock
icebp
sbb
lret
dec
cltd
jge
mov
testl
sahf
ljmp
or
dec
fwait
push
xor
fstl
adc
sbb
sbb
push
ret
push
movsl
inc
mov
dec
shr
sbb
fldl2t
adc
or
pop
push
mov
and
sub
iret
xchg
mov
sbb
jae
aam
adc
lret
outsl
push
mov
add
das
jno
jecxz
test
mov
mov
outsb
and
bound
inc
lock
xor
pop
sub
addl
and
mov
test
jns
mov
loope
sub
mov
push
mov
movsb
push
pop
enter
adc
jp
push
mov
int
ljmp
sbb
das
sbb
test
arpl
sub
inc
pusha
repnz
int3
lahf
or
jecxz
mov
scas
lock
test
xor
mov
xor
cltd
jge
pushf
mov
shlb
cltd
xor
sbb
dec
mov
xor
mov
jnp
inc
mov
lods
jge
daa
xchg
aad
sbb
movsl
fdiv
notb
mov
xchg
das
mov
push
movsl
sub
sbb
adc
sub
sbb
incb
fwait
and
xchg
mov
addl
inc
xchg
rcll
pop
and
mov
xchg
mull
mov
dec
icebp
add
pop
and
aam
out
mov
sub
lret
pop
dec
cmc
sub
mov
dec
xor
std
aas
lock
cmp
sbb
aad
test
sub
fsubrp
ja
pop
out
push
dec
pop
lahf
pop
shlb
movsl
and
test
xchg
in
sbb
mov
addb
mov
dec
or
insl
ret
scas
adc
xchg
aam
in
pop
and
mov
and
dec
push
cmpsl
cld
imul
andl
shlb
out
aad
repnz
int
push
aaa
movsl
mov
mov
lods
lock
lds
mov
movsb
adc
ja
lcall
push
push
or
xor
push
insb
jbe
or
stos
daa
cmpsb
inc
sub
push
scas
mov
and
or
cmc
insb
lret
std
nop
rorl
xor
lea
mov
jmp
jp
lock
push
hlt
sub
mov
push
add
mov
dec
arpl
shll
cmpsb
mov
sbb
pop
sbb
cwtl
push
fmulp
adc
mov
pop
push
xor
into
pop
pop
jne
mov
mov
cld
pop
cmc
adc
aas
mov
ja
push
nop
pop
hlt
lods
jno
mov
mov
mov
andl
jge
repnz
rcrb
loopne
pop
mov
in
clc
push
imul
je
pop
mov
xor
mov
imul
or
xor
adc
lods
orb
pop
outsb
outsl
jns
push
push
add
mov
mull
mov
add
repz
add
dec
pop
lahf
push
fs
cli
lods
mov
adc
dec
fcomip
jne
push
mov
dec
iret
mov
into
arpl
pop
xchg
jnp
pushf
divb
cmp
mov
leave
mov
fcmovb
push
pop
fcoms
pop
mov
lcall
lret
mov
sub
dec
or
test
dec
cmp
cmpsl
icebp
loopne
daa
cmp
dec
loope
addr16
lret
jae
cmp
push
push
movsb
mov
repnz
andl
movsl
test
clc
mov
mov
iret
jge
adc
pop
sub
scas
stos
adc
mov
sub
pop
or
and
cli
mov
loopne
mov
push
icebp
int
jecxz
leave
mov
add
dec
movsl
mov
stos
push
push
add
xchg
and
push
mov
sbb
push
mov
xchg
xchg
jl
xchg
int
or
and
pushf
add
fidivrl
mov
add
jg
add
dec
jp
rcrb
xor
push
fdivs
xor
adc
inc
ret
fidivrl
pushf
inc
jbe
xchg
mov
sti
movsb
mov
lcall
lods
add
pop
push
sub
or
loope
pop
idivb
mov
bound
nop
std
test
ja
cmpsb
stos
aam
mov
aaa
mov
sbb
sahf
in
cmp
lock
fcmovnb
inc
outsb
fisubrl
pop
xchg
mov
inc
sub
popf
stc
inc
bswap
pop
movsb
pusha
divb
loope
ja
and
and
mov
arpl
out
addr16
pop
int3
fwait
int3
mov
and
adc
lds
fwait
jo
sahf
dec
mov
fwait
sbb
bound
nop
test
negb
xchg
xchg
nop
jg
lcall
mov
icebp
loope
add
or
sub
shl
sti
and
inc
mov
inc
out
mov
lcall
dec
pusha
cmc
pop
mov
pop
dec
clc
xor
mov
test
and
dec
aam
out
lods
loop
inc
ror
inc
cli
xchg
push
out
hlt
idiv
ds
stc
sub
sbb
jl
mov
lea
fmull
iretw
lods
lea
xlat
in
sub
push
ja
push
pcmpeqb
xchg
vorps
ss
cmp
test
inc
sbb
xor
or
mov
dec
inc
das
mov
fsubp
movsb
mov
aad
ret
sbb
jle
xchg
xor
ljmp
mov
lret
and
xor
jl
cwtl
xchg
loop
sub
cltd
sahf
mov
sub
dec
test
das
jo
fcmovnbe
insl
dec
push
and
in
imull
insl
jae
or
mov
cmp
cmp
shrb
push
stos
and
jg
push
popf
mov
dec
je
push
gs
call
jmp
leave
jg
addr16
sti
aas
nop
lcall
mov
aas
icebp
in
adc
cmp
loope
pop
rol
notl
xor
jb
jecxz
cs
ss
test
push
lahf
inc
push
mov
and
aad
mov
mov
dec
and
lcall
cmp
or
inc
mov
test
faddl
push
rorb
push
push
cmpl
and
xor
rep
xchg
das
mov
aam
inc
jecxz
popf
push
fmuls
push
test
out
or
fistps
rcl
dec
adc
pop
jbe
inc
popf
inc
ds
insb
mov
sub
test
stos
sub
andl
out
add
pop
loopne
mov
std
mov
xchg
aam
sbb
aaa
loope
dec
movsb
jecxz
jmp
loopne
daa
cmp
xor
aas
mov
mov
pusha
xor
enter
jmp
mov
cmp
xchg
arpl
jecxz
fstpt
cmp
out
or
add
ljmp
aaa
jns
pop
xor
je
or
lret
sub
push
gs
daa
inc
nop
mov
in
pusha
inc
addr16
insl
shlb
pop
sbb
outsb
test
aas
in
pop
mov
xor
sbb
push
mov
andb
mov
loop
push
leave
rcll
cli
ret
or
xor
sbb
cs
in
mov
shll
push
dec
xor
push
cmpsb
call
and
lock
arpl
jg
cld
dec
mov
in
xchg
daa
mov
fdivrl
flds
sub
sub
mov
fs
lods
jle
push
in
into
lods
adc
and
out
xor
mov
rorl
cli
jmp
daa
push
mov
loop
add
lods
push
xor
stos
sbb
mov
ret
fists
cli
jnp
rcl
xor
stos
jnp
sbb
inc
pop
scas
and
add
and
dec
and
rcrb
push
fadd
and
xchg
aaa
mov
lock
sub
jno
push
and
clc
shlb
jmp
adc
dec
jl
jmp
lock
loop
lods
ss
test
std
mov
inc
je
sub
insb
dec
xchg
loope
arpl
and
dec
mov
jle
push
push
jno
xor
or
inc
cmpsl
mov
fcmovb
scas
aam
and
pop
jmp
and
jg
xchg
mov
or
mov
outsl
or
or
mov
fdivl
out
adc
stc
in
sbb
xchg
xchg
sbb
cmc
ret
dec
sbb
sub
rclb
fidivs
xchg
lret
cmp
jnp
mov
out
outsb
sub
pop
hlt
xor
sbb
push
hlt
test
icebp
pop
xchg
fdiv
mov
xor
sbb
cltd
mov
in
xchg
clc
mov
cmp
icebp
push
mov
sbb
bound
jmp
mov
jp
push
sbb
sbb
lahf
fadds
push
inc
and
outsl
out
fstps
inc
push
pop
lcall
push
js
repz
pop
arpl
or
sti
sub
dec
xchg
add
out
lahf
aas
dec
add
in
xor
jge
leave
mov
enter
out
or
or
fstps
loopne
aaa
pop
or
pop
xor
and
adcl
jno
mov
lods
jmp
dec
mov
inc
movsb
loopne
lcall
add
cltd
add
out
mov
push
das
arpl
mov
dec
cmp
jl
mov
or
mov
or
idivb
jp
adc
lods
cmpsb
mov
test
daa
aad
in
pushw
sbb
jae
sbb
xor
sbb
test
sbb
push
outsb
jne
insl
push
inc
mov
fsubr
xor
cmp
out
dec
jb
jg
into
into
jmp
ret
mov
xor
insb
mov
or
mov
outsl
ja
scas
cli
test
mov
lods
dec
fcompl
rcrl
sub
pop
and
arpl
test
enter
mov
sub
and
push
and
fidivs
popa
scas
mov
jne
icebp
ret
mov
jne
adc
dec
sbb
iret
pop
fistpll
dec
ljmp
jae
addr16
negb
inc
jae
push
scas
dec
mov
in
dec
lahf
dec
xchg
ljmp
pushf
dec
jecxz
mov
and
mov
adc
xor
fiadds
adc
outsb
jg
rol
lds
sti
lods
stos
ret
das
mov
sbb
or
pop
jo
inc
insb
repz
pop
pop
mov
outsl
call
inc
fsts
cmp
push
ja
cwtl
jo
sub
repz
out
and
jbe
mov
or
aam
mov
mov
jae
lahf
scas
shlb
out
loopw
loope
in
lahf
roll
dec
inc
cmp
add
testl
inc
mov
arpl
sub
outsb
cmc
mov
imul
mov
jmp
adc
add
mov
dec
rorb
pop
jg
stos
mov
dec
enter
and
in
sbb
push
rol
cmp
aas
jmp
imul
adc
fs
mov
lds
dec
jecxz
sahf
jb
outsl
xchg
icebp
adc
enter
pop
adc
dec
stos
loopne
pop
arpl
jle
xor
push
pop
loopne
and
sub
dec
pop
or
lret
push
add
push
push
test
sti
loop
scas
rolb
jae
or
les
push
mov
xor
mov
sub
xor
jns
dec
jnp
aam
nop
inc
jg
mov
int3
mov
test
or
ss
add
lea
decb
dec
push
aas
dec
mov
data16
insl
scas
rolb
je
das
jnp
fs
jae
cmpsb
ret
fcmovnu
and
sbb
pop
les
inc
jo
xor
cwtl
mov
lds
push
mov
arpl
loop
mov
sub
xchg
jmp
jno
into
sub
push
sub
dec
jp
loope
insl
adc
mov
jmp
idivl
xchg
pop
out
push
mov
setl
or
mov
adc
sbb
add
xor
subb
jnp
pop
cmpsb
lcall
push
clc
cmpsb
shll
mov
jne
iret
jmp
mov
pop
std
addr16
test
jno
fmull
in
pop
jmp
bound
fld1
lods
push
jp
das
inc
sbb
xchg
or
cltd
daa
roll
fisubrs
jecxz
leave
movsb
clc
divb
or
bound
ljmp
lsl
mov
pop
pop
mov
jnp
cmp
dec
mov
leave
adc
push
lcall
sub
dec
in
cltd
mov
out
sahf
push
xor
ret
cmovne
cmpsl
dec
push
lcall
push
sbb
and
dec
lods
lahf
cwtl
iret
jbe
or
outsb
cli
cmp
aad
imul
pop
repnz
jbe
xor
inc
and
jge
cltd
movsb
iret
mov
mov
adc
bound
cmp
lret
imul
push
inc
pop
sahf
xchg
in
nop
stc
pop
dec
fwait
int3
mov
cmpsl
add
lahf
outsl
outsb
stc
pop
inc
cltd
push
add
mov
fcomip
jp
out
lods
popf
out
cmp
call
mov
ss
and
jg
aas
lea
and
dec
push
dec
jae
add
push
and
push
imul
mov
fildll
imul
out
mov
lret
popf
mov
sub
pop
cmpsb
cwtl
adc
fcmovnb
test
in
sbb
jno
icebp
loope
imul
mov
or
cmp
xor
lret
inc
push
inc
jg
icebp
adc
lock
inc
jbe
outsb
mov
xor
jae
scas
fs
lds
cltd
push
dec
mov
mov
mov
xor
jle
mul
sbb
popl
aad
es
inc
out
pop
insb
push
xchg
je
sarl
js
sbb
push
popl
mov
or
loop
mov
add
xchg
daa
pop
xor
sahf
mov
add
mov
cmp
sets
imul
push
pop
addl
add
retw
sbb
popf
pop
outsb
sub
in
in
lahf
sbb
ja
loop
sub
scas
sub
in
rolb
lods
sahf
mov
fcomip
jns
clc
xchg
mov
add
mov
cmpsb
inc
in
mov
push
push
or
cmp
das
mov
or
sti
add
into
enter
add
sub
ss
sub
push
add
fdiv
loopne
xchg
adc
cmove
filds
lods
push
lock
mov
adcb
clc
jns
jnp
popa
in
xlat
push
pop
loopne
add
sbbb
mov
into
test
cmp
inc
add
push
cmpsl
sub
cmp
adcl
aas
repz
aaa
sbb
sahf
jle
aaa
dec
xchg
lods
je
pop
inc
fwait
popa
orl
jo
mov
fcomp
pop
scas
cmp
xlat
jbe
xor
leave
xorb
add
leave
inc
mov
adc
cmp
pushl
popf
pop
or
outsl
cmp
loope
loopne
xor
mov
mov
popf
loope
movsl
sub
cmp
mov
sti
jo
aas
cltd
pop
or
mov
inc
lock
sete
pop
vaddps
sbb
jb
arpl
fiadds
sub
and
or
or
nop
sarb
adc
aam
cmp
xchg
lret
pushf
cmp
xor
fnstenv
xchg
pop
jo
ss
je
pop
pusha
imul
mov
out
sarl
andl
fisubrs
adc
cmc
xchg
testl
clc
pusha
rol
cli
fiaddl
pusha
pop
orl
int
clc
in
mov
cmp
in
pop
or
aaa
or
sti
scas
shl
push
inc
fistpll
addl
jo
fsubrl
aas
mov
popa
xchg
ljmp
lods
dec
and
adc
or
ljmp
ljmp
mov
sbb
xchg
jb
xchg
dec
lods
jns
test
adc
or
popa
test
push
loop
popf
sbb
addr16
loopne
pop
and
jns
jno
mov
decl
xchg
add
pushl
out
push
cmp
imul
gs
push
jmp
iret
xchg
rorl
sbb
add
mov
js
or
mov
std
aaa
outsl
push
push
lds
sub
sub
adc
test
jecxz
push
lods
mov
jge
outsl
jecxz
shl
insb
clc
mov
pop
xchg
cmp
arpl
jne
je
aad
pop
into
sbb
pop
mov
fsubs
enter
in
jle
and
movsl
or
and
inc
dec
xchg
push
stc
jecxz
incb
jb
mov
add
dec
sub
mov
ljmp
jb
iret
add
sbb
xchg
test
cmpsl
lock
xor
push
pop
leave
leave
int3
and
mov
inc
add
pop
ret
adc
xchg
pusha
and
cwtl
xor
jg
cmp
lcall
mov
pusha
adc
xlat
sbb
add
test
adc
jge
pop
sbb
aam
sbb
nop
mov
adc
sbb
inc
cltd
sbb
pop
movsb
aad
rcrb
jmp
bound
mov
lods
sub
mov
mov
push
mov
jno
popf
daa
fnstenv
jp
cmp
inc
add
mov
xor
xchg
jmp
lea
pusha
jo
add
testl
nop
mov
ret
mov
scas
out
aaa
or
jb
imul
pop
loope
insb
shll
sub
xchg
cld
push
cmpsb
sbb
sahf
jp
negl
fldt
add
sub
imul
bound
adc
pop
aas
add
clc
inc
ret
jne
lds
nop
insl
push
out
xor
push
in
xchg
jno
aad
cmp
fs
hlt
jmp
aas
daa
inc
mov
enter
xor
lahf
call
popf
dec
loopne
sbb
pusha
push
dec
das
xlat
sub
adc
mov
dec
ds
mov
mov
notl
decl
pop
adc
xchg
cltd
and
in
add
stos
fmul
xchg
or
add
inc
jg
aas
cmp
ljmp
jnp
loopne
fstl
sub
mov
roll
fisttpl
movsb
repz
xor
stc
incb
and
push
shlb
xchg
inc
cmp
stos
mov
jg
inc
jbe
mov
jle
loope
xor
inc
mov
mov
movsb
and
cmp
inc
push
jp
lods
mov
loop
mov
mov
mulb
xorl
mov
inc
sbb
loopne
sub
sbb
or
lods
divb
sub
sbb
jmp
insl
inc
enter
fs
icebp
clc
cmpsl
scas
loope
gs
and
lret
pop
mov
fisubrs
xchg
ds
js
test
ss
scas
push
adcl
nop
scas
add
daa
std
bswap
dec
ljmp
mov
xchg
xorl
inc
inc
dec
dec
cmp
aam
jecxz
fistpl
aas
xchg
leave
gs
flds
mov
negl
into
out
test
jb
push
or
jb
mov
divb
sub
jbe
pop
or
add
push
imul
ja
push
aaa
cmc
or
xor
mov
or
insl
icebp
xchg
and
pop
mov
adc
add
xlat
xchg
add
lods
mov
test
pop
sub
jo
cmpsb
sti
fs
jb
loope
test
sub
fists
push
int
push
fldt
and
or
mov
xor
add
dec
sub
dec
xor
xor
sbb
add
daa
aad
xor
cmp
sub
sbb
xor
popa
inc
lds
ret
arpl
sbb
cmp
xor
fs
cmc
add
icebp
mov
xor
repz
pop
sbb
dec
add
add
jo
dec
lcall
into
cwtl
idivb
fldcw
sub
push
sarb
ljmp
loopne
dec
repnz
inc
daa
repnz
outsb
or
mov
inc
cli
int
test
xor
jo
xchg
hlt
mov
scas
sub
sbb
jge
dec
mov
lods
mov
repnz
nop
test
rcr
iret
or
cmp
jno
icebp
stos
mov
cmp
fsubrs
aaa
or
sub
or
pop
add
pop
or
aam
sbb
xor
call
nop
dec
push
fwait
inc
mov
movb
dec
add
push
lods
adc
push
dec
outsb
mov
inc
sbb
nop
push
sbb
rorl
add
cmp
mov
inc
push
xor
incb
ljmp
sub
jmp
ljmp
jle
sbb
ret
outsb
in
cmp
or
add
jb
test
daa
aaa
int3
ljmp
shll
adc
pusha
sbb
xor
push
and
push
pop
and
mov
push
rcl
ja
cmp
out
xor
outsl
andb
movsl
mov
rol
enter
cld
sbb
lock
lods
fmull
gs
inc
sub
daa
lods
dec
imul
data16
dec
gs
push
dec
sbb
jns
jnp
ds
lods
sbb
inc
test
cld
jle
add
mov
lea
push
inc
mov
and
dec
mov
ja
xchg
add
scas
inc
xor
xor
adc
sahf
jmp
push
sub
cmpsb
push
sbb
fimull
inc
in
imul
psubw
in
dec
or
push
cs
std
bound
bound
mov
femms
dec
test
sti
xchg
mov
push
push
inc
lods
cltd
pop
jmp
jnp
movsb
pushf
jmp
mov
inc
mov
xchg
mov
popa
sahf
iret
daa
aas
sub
dec
rclb
xchg
bound
sarb
testl
loope
mov
sbb
adc
mov
sarl
xor
mov
push
or
insb
outsb
sub
ja
movsb
mov
xchg
and
adc
bound
jne
inc
xchg
pusha
add
les
pop
lret
push
push
into
cmp
cmpsb
mov
faddl
sbb
std
loop
fdiv
fists
lret
ljmp
loopne
add
fsubs
cltd
ffreep
jmp
sbb
lret
xchg
cmc
mov
fildl
cmpsl
jle
cmp
cmp
and
xlat
sub
mov
mov
jmp
sbb
jo
mov
xlat
dec
mov
mov
dec
add
sbb
push
ss
not
adc
loopne
mov
mov
adc
jb
addr16
mov
mov
lahf
aad
cmp
pop
into
pop
and
cltd
insb
out
aas
leave
jns
es
mov
imul
pop
mov
or
jb
popa
test
ds
adc
jmp
push
cltd
or
pop
neg
mov
in
adc
sub
mov
dec
dec
call
int3
cmc
adc
jbe
fidivs
pop
nop
xchg
add
and
jne
rorb
fwait
scas
jecxz
ljmp
or
push
or
xlat
inc
push
adc
push
cmpsl
jbe
push
dec
mov
fidivrs
lret
add
mov
hlt
jo
or
xor
xchg
mov
out
insl
loop
sahf
or
sbb
aaa
pop
or
mov
hlt
lret
pusha
sub
cmp
xlat
leave
adc
mov
sub
dec
cli
nop
iret
loop
xchg
push
adc
xchg
lods
sbb
clc
mov
decl
lea
cmpl
dec
sahf
mov
adc
pmullw
movsb
lahf
mov
or
imul
pop
clc
int
cmpsb
sbb
ror
int
push
pusha
adc
daa
lahf
aad
xchg
lock
add
lods
bound
bswap
les
aam
negb
sub
jge
cltd
jns
sahf
sub
and
bound
aam
pop
insb
xchg
into
ja
std
jb
push
xchg
ja
pusha
dec
rolb
sti
imul
mov
int
add
into
dec
fucom
mov
rcrl
in
xorb
xchg
and
adc
or
jp
test
repz
addb
mov
test
enter
mov
xor
add
and
adc
in
mov
mov
mov
repz
xchg
push
jb
ss
nop
js
cmp
push
fnsave
sbb
out
int
pop
adc
jecxz
pop
aam
mov
lock
adc
jecxz
fsubp
enter
loope
or
arpl
nop
dec
movsl
cmp
clc
and
insl
pusha
sub
lcall
inc
and
pusha
or
add
inc
sbb
cmpsl
dec
jne
jmp
cmc
sbb
repnz
lret
fwait
icebp
mov
mov
mov
push
lahf
test
jg
mov
insl
cwtl
in
add
adc
lea
sbbb
jg
ds
pop
fistl
shlb
loope
xchg
aaa
lods
cmp
lret
les
sub
aam
shlb
daa
xchg
xchg
jge
or
nop
lea
pop
inc
jnp
andb
cld
lcall
cmp
jle
xlat
or
shll
lahf
push
pop
lds
jo
or
inc
lds
pop
xor
lds
cmp
mov
sbb
or
and
push
jns
call
sub
mov
imul
dec
dec
and
sbb
scas
pop
in
mov
xchg
pop
mov
inc
subb
adc
xchg
bound
pop
cmpsl
cmp
pop
stos
aad
inc
jp
xor
or
inc
sbb
roll
lea
int3
fsubs
test
test
movsl
sub
and
and
inc
cmp
aas
les
push
xchg
andb
xchg
sbbl
jle
mov
adc
inc
stc
movsl
sarl
test
jns
fistps
xor
and
sbb
pop
test
adc
rcrb
xor
push
bound
jns
in
mov
xor
subb
and
cli
jno
mov
inc
notl
push
aam
std
sub
fidivrl
scas
jne
and
mov
inc
orb
cmp
enter
dec
sub
cmp
ss
insl
sbb
adc
pop
push
nop
pop
ret
das
jno
arpl
or
sbbl
out
mov
insb
mov
mov
inc
mov
mov
outsl
cmpsl
adc
leave
pop
dec
xchg
push
jnp
cld
xor
jb
push
sar
add
mov
ss
push
je
mov
insw
push
lcall
pop
xchg
jg
aas
sub
nop
push
push
push
out
in
test
ljmp
and
add
inc
lcall
fs
inc
dec
hlt
int3
clc
dec
fimull
push
sub
dec
fdivrp
mov
jmp
hlt
outsb
fistl
pop
loop
lahf
mul
imul
jo
movsb
icebp
mov
es
mov
scas
mov
fcoms
push
dec
mov
inc
lret
or
ret
stc
cmp
vpcomud
cmpsl
test
pop
adc
sbb
or
or
sbb
dec
push
mov
xchg
int
mov
jg
push
fsubs
shll
sbb
shll
xor
push
push
into
pusha
ret
rcl
pop
shl
xchg
fdivl
fwait
test
shrl
adc
ror
push
pusha
sti
sarb
imul
mov
mov
outsl
pop
hlt
push
sbb
hlt
inc
scas
sbb
adc
ja
jae
jns
push
cmpsl
add
xor
sub
fcoml
test
dec
dec
inc
mov
imul
sub
data16
push
inc
hlt
push
cmpsl
mov
and
dec
test
aad
xchg
sub
lcall
push
roll
jle
xor
jp
sarl
shll
imul
sub
and
rcl
xchg
addr16
xchg
pop
push
push
inc
popa
mov
lret
cmp
icebp
nop
popl
loope
shl
js
inc
ja
into
jle
test
adc
hlt
jo
mov
jbe
aaa
mov
lods
xchg
mov
push
sub
adc
sbb
fsts
test
std
xor
sub
jl
pop
test
cmp
add
mov
sarb
pop
mov
daa
jae
and
and
jle
lds
xchg
std
fwait
mov
lret
cmp
notl
icebp
lds
mov
sub
xor
enter
inc
out
sub
shrb
cmp
ret
jle
out
test
ret
ja
mov
sub
xchg
dec
loope
mov
sub
fucompp
xor
mov
pop
shlb
mov
cmpsl
mov
es
aaa
xchg
lret
shll
jne
mov
sbb
xor
and
cwtl
ficomps
adc
add
add
push
out
fistl
andl
xchg
jno
cmp
jecxz
mov
out
nop
lods
shll
rolb
mov
popa
out
xor
push
adc
pop
mov
xchg
outsb
push
loope
lock
mov
and
mov
enter
mov
mov
in
inc
cli
sahf
pushl
sub
lods
inc
mov
xchg
jecxz
out
sbb
sbb
push
lretw
push
sarb
and
pop
out
stc
adc
clc
aaa
push
cld
shl
add
and
jp
pop
mov
popa
dec
jmp
jns
jg
popf
mov
and
sbb
push
mov
cs
aam
jnp
jmp
sub
fnstenv
inc
movsl
inc
les
das
xchg
mov
cmpsl
es
in
ret
sbb
mov
into
ljmp
aad
fcoms
or
mov
sbb
cmpsl
pop
pushf
xor
or
insl
mulb
in
shll
mov
inc
neg
push
movsb
push
loope
fdivrl
test
push
mov
pop
inc
fistl
push
insb
adc
icebp
mov
insl
cwtl
call
leave
movsl
xchg
and
aad
push
orl
pop
push
mov
add
cmp
mov
cwtl
jle
pop
lret
xor
fstpt
shrb
sub
sub
loop
sti
hlt
fdivrl
mov
mov
fistpll
push
inc
int3
aas
fstl
lcall
inc
mov
fs
lret
sub
cmp
lcall
pop
inc
cmp
sbb
add
aad
pop
fwait
cld
fistpll
pop
sti
lret
pushf
jge
notl
sub
push
lcall
jmp
pushf
xchg
out
or
testl
out
push
fistpl
pop
mov
jecxz
stos
stc
pop
cmp
bound
pushf
lock
subb
xlat
sbb
jae
mov
stc
jnp
inc
das
dec
out
jl
push
pop
xor
loopne
xchg
dec
inc
test
jb
test
push
fstpl
push
jle
mov
fwait
out
imul
rcrl
jae
jle
cs
pop
or
xlat
mov
mov
cmp
mov
push
pop
stos
mov
jle
cmp
idivl
jg
cmpsb
in
fildl
xor
lds
cwtd
cmp
push
mov
jno
jge
call
or
jno
jb
repz
gs
ja
jne
and
repnz
cltd
loop
dec
cltd
or
push
mov
inc
aaa
adc
mov
and
push
repz
add
jns
add
inc
sbb
pushf
or
jo
mov
lret
shlb
cld
sbb
lret
inc
inc
sbb
push
xadd
js
les
jne
ret
add
inc
sbb
mov
clc
add
sub
sahf
and
adc
or
adc
inc
add
fwait
cmc
fsubrs
pushf
xchg
arpl
sti
out
stos
cmp
addr16
inc
arpl
cmp
pop
jl
jmp
mov
out
mov
sbbl
push
aam
xlat
push
loop
lods
sahf
dec
sub
lds
je
dec
push
pop
stos
push
jge
repz
push
out
mov
cmp
mov
movsb
aaa
and
in
inc
aaa
lea
iret
push
imul
loop
ss
pop
mov
cmp
mov
mov
adc
fisubrl
push
cmp
jecxz
sbb
adc
lcall
das
push
mov
lret
into
push
add
jecxz
aas
test
dec
dec
sbb
sbb
and
or
movsl
out
jo
jge
pop
test
jno
or
stos
jne
jnp
loope
pop
icebp
mov
adc
xchg
std
dec
mulb
lds
cmpl
inc
hlt
das
call
lock
cmp
data16
dec
je
mov
push
push
and
rorl
push
dec
sub
ficoms
pop
stc
ret
add
cmp
fdivl
mov
xchg
stc
and
jmp
movsb
mov
mov
out
push
hlt
andb
mov
mov
mov
pop
lahf
nop
movsl
sbb
jnp
cltd
imul
shlb
out
cmpsl
sbb
faddp
push
cld
mov
jae
insl
mov
mov
jg
or
sbb
pop
in
popf
pusha
jp
cli
aam
push
adc
jge
inc
or
adc
jne
and
and
aad
fcmovne
dec
xlat
test
add
aad
test
jge
lcall
mov
in
push
hlt
bound
mov
adc
push
lcall
inc
leave
mov
xor
cld
pusha
ljmp
sub
push
mov
leave
mov
sbb
push
insb
jb
fs
push
xchg
lods
inc
jmp
stos
fs
xchg
pop
dec
out
mov
ljmp
scas
cmp
inc
jmp
pop
scas
xchg
hlt
repz
out
pop
sbbl
repz
test
pop
fwait
sbb
push
loope
add
sbb
add
xchg
sub
std
sub
inc
jae
push
nop
xchg
movsl
push
push
xchg
stos
cltd
adc
add
sahf
or
mov
dec
cmpsl
cld
stos
inc
pop
add
inc
mov
mov
jl
leave
test
rclb
adc
mov
testb
popf
fistpl
add
stos
lock
jno
sub
pop
add
adc
loopne
jl
loopne
lcall
fisttps
sar
jnp
jae
enter
inc
lea
sti
shll
add
xchg
sub
cmp
mov
and
cmc
ret
lcall
mov
pop
cmp
xor
int3
mov
std
sahf
loop
or
mov
out
insl
lcall
lock
pop
jge
hlt
jle
popa
gs
mov
push
pop
push
and
fistl
dec
or
out
adc
push
movsl
imul
out
mov
push
cs
add
movsb
jns
pushf
sahf
mov
sbb
mov
rcl
add
clc
inc
push
lret
ds
jae
sbb
adc
out
cld
in
xchg
aaa
and
lock
add
loopne
cmp
in
jmp
lea
icebp
pop
push
out
ret
sbb
mov
sub
insl
addb
inc
or
xor
das
pop
into
and
cmc
pop
cmp
push
outsb
mov
cwtl
lahf
and
out
and
rcr
call
adc
les
xchg
out
xor
jne
repz
xor
sti
test
mull
pop
ficoms
ret
xorb
lock
push
daa
in
iret
adc
popf
push
dec
pop
scas
out
cwtl
mov
push
dec
mov
push
inc
test
sbb
hlt
loope
push
je
dec
xchg
pop
daa
test
scas
mov
cli
out
mov
cmc
inc
pop
hlt
out
push
push
push
rorb
outsl
movb
test
test
pop
into
and
dec
push
popa
pop
adc
rcr
mov
cmpb
in
mov
shrl
outsl
stc
push
pushf
pop
sub
xorl
sbb
adc
cmc
iret
out
sub
or
test
loopne
adc
call
mov
or
sbb
lock
rol
leave
scas
mov
dec
push
cmp
xor
adc
aad
loope
push
out
hlt
inc
mov
mov
sub
fidivl
outsl
data16
and
xlat
jl
push
loopne
jg
inc
in
jb
stos
sub
or
stos
pusha
jae
push
inc
popa
out
cs
and
andb
jecxz
jo
cmp
or
ss
mov
hlt
mov
aad
ret
cwtl
sbb
dec
push
in
fldl
fimuls
lods
or
sbb
sbb
and
ret
imul
jae
popf
aas
dec
iret
clc
push
dec
jge
popa
fimull
pop
or
mov
push
mov
pop
mov
fsubrs
push
hlt
pop
stos
push
or
xor
and
fsubrl
jae
mov
ja
dec
mov
jnp
cwtl
mov
lret
cmp
dec
push
pop
jecxz
bound
lods
mov
mov
xor
pop
pop
dec
sahf
in
xchg
and
add
pop
xor
or
mov
sbb
pop
adc
out
cmc
inc
jbe
cmpsb
ds
loope
call
testl
mov
fidivs
sti
imul
add
push
add
xchg
push
push
xor
punpckhwd
push
in
sarb
push
cmp
pop
mov
fmuls
andl
ret
daa
xchg
mov
in
daa
inc
sbb
imul
mov
pop
sub
cltd
mov
sbb
sub
mov
stos
mov
leave
notb
mov
ret
pop
ja
sub
out
mov
cmp
dec
push
mov
inc
mov
popf
addb
jo
rorb
addr16
pop
out
ljmp
dec
inc
push
push
aad
rcl
popa
insb
bound
fdivrs
into
mov
dec
or
mov
into
sub
mov
sbb
xor
stos
mov
adc
in
rcrl
sarl
call
popf
fiaddl
mov
bound
int3
cmpsl
rcrl
pop
push
dec
push
jb
cmp
lret
dec
rorb
push
pop
clc
pushf
mov
loop
sub
mov
and
rolb
out
lahf
xchg
outsb
dec
daa
pop
xchg
pop
ret
push
push
adcb
into
sub
test
cmp
xchg
pop
imul
mov
rcll
scas
lret
jmp
clc
call
dec
mov
mov
jb
test
cmp
gs
push
or
sub
push
and
inc
mov
repnz
fadds
pop
adc
mov
mov
aad
mov
push
and
inc
pop
pop
sub
stos
xchg
mov
ret
outsb
dec
outsl
and
mov
add
adc
cltd
push
in
movsl
cld
jle
lea
mov
ss
xchg
lds
cmc
orl
pop
repnz
es
fucomi
ja
jp
sti
addl
jg
or
outsl
insl
lret
push
inc
sbb
mov
mov
and
jl
repnz
jge
fcmove
mov
scas
inc
outsb
jbe
jmp
push
sbb
int3
lea
outsb
inc
cmp
lods
sbb
inc
icebp
hlt
fadds
adc
daa
xchg
sbb
cltd
mov
jecxz
nop
cltd
mov
or
shl
in
sbb
jmp
and
or
push
outsb
insb
fsub
sbb
mov
out
pop
fstp
test
or
xor
push
xor
int
or
mov
jecxz,pt
xor
jmp
aad
cli
mov
xchg
ss
xchg
push
mov
xor
cli
push
pop
jb
jo
pop
movsl
ret
movsb
jmp
mov
ss
in
hlt
jge
pop
adc
imul
xor
das
jne
js
push
cmpl
cmp
call
inc
fists
scas
and
cmp
jne
cs
push
repz
mov
pop
lahf
adc
ds
lds
inc
xchg
in
gs
mov
jne
aas
jmp
add
enter
jb
cmp
insl
iret
aaa
jge
gs
popf
enter
mov
sbb
int3
clc
push
je
call
mov
arpl
incl
push
imul
xchg
imul
loopne
outsl
pusha
int3
out
cld
outsb
rclb
lods
test
insl
cmp
sbb
dec
lret
inc
push
push
enter
jb
push
shlb
dec
or
push
dec
push
loopne
inc
ret
cmp
shl
scas
iret
aaa
out
cli
fs
pop
push
mov
aas
les
shl
jle
jg
lahf
jmp
out
mov
mov
mov
enter
mov
test
cld
rcl
mov
lcall
test
in
lcall
imul
fwait
shrb
sub
pop
repz
jecxz
aas
or
int
cwtl
imul
xlat
dec
nop
pop
cmpsb
add
pop
push
xor
loopne
js
sub
add
bnd
add
pandn
push
adc
insl
outsl
repnz
cld
dec
pop
popa
jb
jbe
aas
ljmp
jecxz
xor
mov
movsl
scas
cvtdq2ps
repz
mov
sub
divl
mov
ds
sti
sbb
inc
push
push
mov
adc
rclb
lahf
add
fldcw
push
mov
inc
adc
je
xor
insb
das
std
out
cwtl
mov
jb
lods
lret
daa
mov
mov
cmp
add
dec
mov
das
fdivl
xchg
cmp
data16
das
vmwrite
dec
fldenv
jae
or
and
pop
push
shr
outsb
pop
ljmp
add
loopne
ss
xor
into
mov
in
pop
sbb
sti
pop
jne
notl
push
movb
adc
addr16
gs
in
shll
push
cmpsl
push
cmc
xor
xor
daa
jnp
call
add
movsl
cmpsb
cli
push
and
or
inc
mov
cmc
cmp
add
lahf
iret
mov
xchg
push
and
out
repz
cmp
stc
mov
add
fcompl
jns
add
int3
popl
hlt
mov
jge
cld
popa
or
pop
les
mov
xchg
lret
adcl
out
test
test
sub
mov
jmp
popf
mov
lods
shl
es
fdivl
xchg
out
gs
mov
pop
mov
fwait
mov
mov
cmpl
push
rcrl
std
push
sbb
loope
mov
aaa
imul
cli
adc
push
jnp
addr16
cmpsl
inc
sbb
nop
sub
ljmp
jno
rcrl
pop
sub
add
lret
cmc
and
imulb
inc
push
dec
out
pop
push
or
outsl
iret
ret
inc
test
xor
cmpsb
movsb
dec
stos
nop
ljmp
pop
push
and
xor
push
lds
mov
cmp
jmp
inc
push
inc
push
mov
xchg
add
lock
dec
push
jno
out
add
mov
sahf
cmp
ror
pop
in
in
les
jl
xchg
adc
and
nop
and
ja
jno,pn
aad
hlt
dec
pop
mov
call
lock
fsub
cmp
dec
mov
pusha
rorb
jns
rcl
add
icebp
pop
and
sbb
in
out
pushf
mov
cmp
xorl
mov
cmp
lcall
or
mov
imul
sub
xor
sbb
xchg
mov
repnz
push
rcrb
popa
push
dec
outsl
andps
mov
xchg
data16
sbb
mov
fisubrl
pushf
cwtl
in
fistl
jg
mov
in
sub
mov
jecxz
fnstcw
movsl
dec
popf
pop
sbb
cmp
push
rcr
out
mov
mov
loop
int
and
dec
dec
mov
cmp
xchg
and
jb
cwtl
mov
mov
outsb
in
adc
sarl
in
pop
movl
sbb
jb
das
add
dec
das
je
shrl
sub
add
test
mov
stos
dec
xchg
lods
mov
mov
mov
in
in
in
out
inc
test
inc
repz
lds
jmp
push
incb
pop
cwtl
fadd
inc
push
andl
add
call
pop
mov
imulb
insl
sub
neg
insl
scas
sub
lcall
cmp
cmpsb
icebp
sub
rcr
xchg
mov
scas
inc
jle
rcr
or
inc
clc
or
stos
filds
inc
iret
movsl
bound
mov
sar
add
pushf
xchg
jo
hlt
mov
dec
sub
ds
xor
les
out
add
sbb
rcr
cmp
bound
pop
or
pop
jmp
jo
mov
cmp
or
mov
push
int3
loopne
and
dec
mov
inc
mov
test
fwait
lods
cmpsl
js
add
aad
dec
add
in
enter
xchg
push
push
icebp
jnp
mov
dec
or
loop
dec
in
ja
jb
mov
or
popa
cmp
adc
shlb
fcoms
sub
outsb
sub
sub
and
mov
mov
scas
out
hlt
iret
lahf
and
ficompl
outsb
shl
testb
jns
push
cmp
add
add
push
inc
pushf
sub
in
or
dec
xor
lahf
lock
sub
mov
sbb
mov
in
mov
nop
add
mov
inc
enter
insl
mov
mov
loope
fwait
add
mov
jecxz
jb
rorl
out
ljmp
aas
add
xchg
jg
lock
mov
inc
dec
imul
lahf
out
cli
or
imul
pop
and
add
mov
out
jp
push
add
lret
jmp
out
push
mov
test
in
lcall
sub
add
push
mov
sub
bound
movsb
repz
mov
rolb
insb
mov
stos
mov
jbe
sbb
pop
jb
and
sbb
addr16
add
insb
sbb
push
xchg
xor
out
push
jb
daa
mov
xchg
cmp
pop
dec
call
mov
sti
data16
jmp
js
pop
xorb
add
pop
sbb
lret
shll
dec
push
hlt
add
sub
xchg
sbb
inc
mov
jo
aas
cld
out
and
in
mov
sti
xchg
clc
rcll
loope
mov
jns
inc
and
sub
jae
int
xor
test
sbbl
lret
idivl
jg
inc
scas
xchg
sti
sub
sub
and
ret
add
in
pusha
adc
jns
test
adc
movsb
xor
lahf
arpl
int
out
dec
and
fldenv
or
cli
test
mov
ret
gs
mov
bnd
frstor
sbb
xlat
pop
mov
insb
push
add
insb
sahf
cli
sti
stos
adc
fistps
push
lea
rclb
inc
dec
dec
mov
in
push
jnp
xor
ror
ret
inc
lock
fwait
mov
cmp
mov
orb
mov
pop
jo
fwait
mov
stc
out
int
loope
inc
add
sub
outsb
dec
lods
adc
pop
in
hlt
inc
mov
aad
in
mov
stos
or
lret
pushf
lret
xchg
rorb
cmp
scas
sbb
adc
or
add
xchg
mov
das
sbb
cmpsb
cmp
fcoml
jp
in
int3
hlt
jbe
mov
and
dec
mov
xchg
inc
push
imul
loope
ds
rclb
pop
or
inc
pop
cmp
pop
mov
pop
cmp
jb
mov
gs
dec
pop
popa
jnp
stc
xchg
sbb
jnp
jl
movsb
daa
aad
pusha
stos
or
cld
scas
push
xchg
arpl
outsb
inc
cltd
jp,pn
pushw
mov
jl
pop
or
sti
mov
jl
movsb
dec
jle
push
or
pop
pop
call
cmpsb
or
scas
ss
popf
add
test
xor
cli
cmp
dec
shl
sbb
sti
push
lods
shlb
dec
lods
cmc
add
and
fldl
in
icebp
js
and
mov
add
fcompl
push
dec
dec
lods
fsts
test
std
dec
or
jge
pop
sub
into
or
jge
iret
adc
fists
xlat
jg
mov
push
fistps
jo
cs
ret
inc
lcall
xchg
adc
or
xchg
xchg
ret
jg
ret
and
nop
jbe
jmp
inc
jl
mov
fadd
sbb
and
loope
and
pop
test
push
scas
inc
fsubs
in
and
movl
lret
in
in
dec
or
shl
and
xchg
ljmp
loop
fisubs
jo
cwtl
fmul
ret
je
and
ljmp
js
mov
push
mov
mov
sbb
movsb
lock
or
push
lahf
arpl
cli
mov
push
add
xchg
ficomps
push
dec
sbb
flds
movsb
inc
mov
js
shll
bnd
aam
jge
xchg
and
test
cwtl
pop
lea
xor
jo
jge
xor
jb
push
mov
push
lods
rclb
pop
and
andb
mov
in
insl
push
shlb
jnp
das
rolb
mov
xchg
sub
test
shlb
cmp
and
xchg
jl
push
xchg
xor
mov
pop
sbb
sbb
adc
fimull
cmc
repz
xlat
pop
insl
jb
jns
mov
push
mov
in
aam
xor
shl
lock
mov
cltd
test
mov
xor
jg
lahf
mov
loopne
push
inc
add
test
leave
push
fistpll
sti
push
out
lahf
outsb
shrb
aam
or
je
mov
xchg
dec
lcall
push
out
push
popa
push
inc
push
push
test
mov
jo
xor
inc
jo
xchg
adc
repz
xchg
test
and
das
cltd
daa
mov
xor
mov
mov
int
lds
iret
scas
repz
jne
pop
cmc
xor
xor
addl
cmpsl
xor
sbb
mov
mov
jo
jb
out
adc
in
sarb
shrb
jns
xchg
iret
and
ds
cli
ss
popa
sbb
mov
push
cmp
pop
stos
pop
dec
add
insl
dec
xor
clc
cmpsl
or
stos
hlt
ja
mov
jmp
insl
push
ss
stos
add
mov
pop
add
jo
sbb
cli
mov
aad
hlt
adc
adc
shl
lods
add
scas
jo
push
mov
pop
dec
and
mov
mov
or
mov
lock
dec
out
inc
dec
mov
insb
mov
cltd
fidivrs
scas
xchg
leave
or
and
mov
dec
insb
adc
fimull
loop
fs
mov
leave
push
jmp
mov
gs
xchg
popa
mov
or
pop
dec
ss
mov
rolb
push
fsubrs
mov
jne
dec
or
subb
aas
scas
lret
js
es
sbb
or
mov
jl
mov
mov
testb
adc
aaa
adc
inc
into
movsl
stc
push
jmp
push
test
test
jo
push
sar
mov
mov
mov
add
or
mov
cwtl
out
into
mov
inc
in
xchg
sbb
orb
enter
push
lea
and
jo
stos
jb
inc
into
pop
add
fidivl
sbb
mov
ret
xchg
hlt
mov
in
adc
mov
jns
cmp
jg
mov
fs
lea
sub
sti
adc
push
xor
popf
adc
fidivrl
rorl
pop
cld
leave
dec
fs
or
xchg
lret
sti
push
sbb
mov
mov
or
inc
push
mov
imul
push
jl
arpl
xchg
cwtl
dec
cmp
pop
add
cmp
lcall
stc
call
and
cwtl
dec
mov
jno
adc
shr
sub
ljmp
xchg
movsl
cld
sub
push
mov
stc
or
cmpsb
ja
mov
inc
ds
inc
push
or
adc
jmp
mov
and
ljmp
mov
inc
lret
fptan
sub
mov
inc
fists
in
stc
insb
sahf
mov
mov
dec
or
popf
cld
pop
pop
inc
ret
jne
jb
add
adc
adcb
cld
aas
inc
cli
arpl
gs
mov
inc
dec
fs
lea
add
mov
and
xor
adc
xor
in
jecxz
inc
pop
push
arpl
sbb
fs
or
xchg
mov
into
jge
ror
pop
mov
leave
jae,pt
scas
dec
out
sbb
xlat
int
adc
and
gs
pushf
insb
xchg
les
subb
mov
inc
push
xor
lcall
outsb
push
xor
ret
scas
mov
xchg
cmp
fadd
jmp
pop
pop
fbstp
lds
push
stos
out
sub
mov
push
mov
fisttpll
fdivrs
mov
je
lahf
and
mov
fisttps
mov
xor
scas
adc
xor
xchg
fistpl
fadds
jp
out
js
daa
loopne
idivl
push
pop
add
push
jmp
jp
and
pop
cltd
add
and
adc
rorb
insl
push
dec
push
pop
cmc
inc
jnp
stos
cmpsl
jmp
sar
dec
or
jne
movsl
lcall
aam
mov
dec
incl
jbe
and
shr
pop
lods
inc
movsb
shll
pop
imul
jmp
lahf
cltd
xchg
loopne
cltd
add
dec
cmp
cwtl
cltd
rorb
sub
call
outsl
fnstenv
mov
sub
or
pop
mov
cltd
subl
xchg
out
sub
sub
es
lods
sbbl
in
jb
or
imul
jg
movsl
xchg
ss
sub
add
fbld
sbb
rorl
ret
and
mov
sub
es
sti
mov
popf
out
rcrb
hlt
dec
mov
imul
mov
sbb
and
clc
das
xchg
mov
outsl
fisttpl
xlat
mov
in
add
test
sbbl
or
cs
mov
or
ret
xor
leave
push
mov
dec
mov
and
mov
inc
rorb
add
jo
cltd
adc
add
mov
mov
aas
js
ss
in
sub
mov
adc
pop
roll
adc
inc
xor
lret
mov
andb
mov
iret
movsl
popa
imul
scas
popa
pop
mov
mov
dec
loope
inc
mov
loope
insl
inc
jge
loopnew
and
add
jle
lcall
push
imul
cmp
out
lods
stc
cmpsl
stos
movsb
mov
pop
mull
insl
idiv
cmp
dec
jbe
add
shlb
outsb
xchg
or
adc
jae
pushl
xchg
enter
movsb
pop
pop
in
cmp
pop
add
xor
and
xlat
xchg
popa
pop
data16
cmp
fsubl
popa
inc
ljmp
adc
outsl
mov
test
repz
les
test
mov
hlt
xchg
mov
sbb
adc
call
and
cmpsb
aas
outsb
mov
sbb
jp
repnz
pop
sbb
popf
dec
test
stos
call
sti
adc
and
nop
adc
jns
stc
jb
pop
out
mov
cmpl
cld
lods
jbe
mov
shr
push
add
mov
int
cmp
out
xchg
lret
jmp
nop
cmp
fcom
out
add
xchg
xor
fwait
pop
rolb
cli
jo
clc
or
lret
cs
shl
cli
nop
inc
shrl
popa
mov
pop
and
dec
cmp
ret
mov
movsl
sbbb
js
or
jp
jns
nop
and
fadds
ja
add
adc
push
aaa
andl
add
outsl
dec
mov
sbb
clc
test
loop
and
js
push
movsl
adc
xor
lods
sub
mov
push
inc
push
mov
mov
loop
inc
pop
jo
in
out
jnp
push
leave
jecxz
sub
inc
leave
cltd
mov
int3
pop
lret
sub
inc
repz
ljmp
mov
jnp
sbb
jb
arpl
out
loope
inc
add
loope
aas
int
add
mov
mov
ret
sbb
hlt
jns
aad
cld
jle,pt
jb
pop
shrb
pop
dec
ds
xchg
mov
inc
inc
adc
jnp
dec
leave
push
sbb
pop
xlat
sub
enter
or
sar
adc
mov
or
idivb
repz
push
test
notl
mov
inc
cld
adc
adc
ret
rcrl
jnp
push
xlat
loop
adc
jg
mov
repnz
pop
and
shrl
adc
add
jno
jb
js
push
cmp
ja
sbb
xchg
ljmp
pop
jno
fstpl
cmp
jmp
add
push
repnz
jle
mov
mov
push
dec
shll
xor
mov
sahf
movb
push
test
push
jne
dec
jne
jg
pop
cmp
mov
test
lcall
xchg
or
aad
mov
subl
jp
cld
std
pop
adc
outsb
or
jmp
push
lods
in
insb
add
xchg
adc
xchg
dec
push
rcrl
daa
sbbb
add
cmc
dec
cltd
scas
dec
movb
leave
push
sbb
push
loope
aas
out
jnp
cmp
adc
fs
mov
pop
xchg
sbb
xchg
add
fidivs
xor
shll
insb
mov
or
cmp
jae
dec
sti
sub
repz
jp
cmp
sar
mov
jp
das
in
push
hlt
cld
in
jae
std
call
in
je
fistps
test
mov
repz
and
sub
inc
scas
add
ljmp
outsb
mov
xchg
fnstsw
imul
aaa
mov
pop
hlt
xchg
sbb
scas
xchg
fdivl
aam
mov
loope
adc
jle
idivb
inc
push
push
cmp
inc
fmul
cmp
dec
in
and
pop
int3
xchg
inc
jo
mov
push
outsl
setge
adc
sbb
dec
loope
sub
insb
add
mov
lods
je
movsb
aas
xor
jns
cli
scas
sarl
xlat
cmpsl
loopne
das
in
mov
mov
and
nop
mov
scas
mov
add
and
and
mov
push
sub
xchg
push
ja
popl
out
sub
cmp
jge
mov
sub
jl
fbld
xor
mov
xchg
in
push
jmp
inc
adc
les
pop
clc
xor
push
gs
xabort
lds
sbb
and
ret
push
cmpsl
mov
xchg
dec
pop
inc
pop
js
inc
cltd
add
test
int3
and
ret
in
lods
clc
movsl
andl
push
jno
push
sti
lods
push
jno
inc
pop
pop
in
sahf
lret
mov
decb
and
loope
mov
jmp
jo
sub
mov
repz
xchg
cmp
xor
mov
movsl
out
add
and
xchg
jo
sbb
mov
sub
daa
xchg
in
push
outsb
loopne
addr16
push
cmp
scas
or
ja,pt
mov
inc
fwait
pop
daa
pop
bound
cmpb
andb
enter
sbb
aad
in
push
mov
lock
add
rcl
jl
xchg
mov
add
aam
dec
sti
ljmp
pop
mov
aas
push
roll
sub
popa
xchg
and
hlt
sahf
push
mov
dec
lahf
push
mov
test
loop
jnp
xor
js
push
call
loopne
notl
jns
stc
adc
push
lods
mov
adc
movsb
test
js
dec
fdivl
mov
dec
mov
cmpsb
sbb
icebp
movsb
and
push
lods
and
mov
fmuls
mov
mov
mov
mov
adc
imul
das
push
cli
repz
fsubrs
xchg
dec
rorl
mov
lcall
sub
mov
scas
fisttps
mov
jbe
jmp
mov
dec
xchg
ss
call
outsl
xor
xor
ja
jp
fs
fisubs
adc
repz
push
mov
dec
inc
outsl
sarl
push
xor
jnp
leave
cmpsl
add
data16
cmp
push
mov
dec
in
xchg
lcall
hlt
add
lahf
clc
aad
loopne
ds
pop
scas
shl
mov
lods
mov
js
int
dec
xchg
mov
xlat
push
jge
cmpb
sbbl
mov
cmp
xor
cmp
and
in
add
jmp
je
test
mov
cmpl
lret
jno
jns
pop
lahf
push
xchg
lcall
daa
mov
dec
mov
into
mov
aad
and
push
imull
inc
and
ss
and
dec
insl
xor
stos
lea
jb
mov
xor
dec
sbb
jecxz
loop
ret
mov
push
out
aaa
stc
sbb
xchg
ss
nop
je
cltd
adc
test
fistl
cmp
and
aas
xlat
arpl
ss
push
and
in
scas
loopne
cli
cmpsb
mov
jmp
adc
add
add
xorl
pop
dec
sbb
jle
mov
lret
add
sbb
lock
aad
jge
cmpsb
push
pushl
stc
shlb
mov
mov
push
std
cld
insl
test
mov
test
cmp
mov
pop
mov
jno
out
xlat
loope
dec
xlat
aas
adc
pop
sub
mov
jae
aam
into
aad
mov
sbb
cwtl
or
jnp
and
call
dec
roll
dec
sub
xor
roll
mov
push
sbb
add
sbb
movsl
cli
ficompl
mov
push
cmc
mov
pusha
or
jle
mov
mov
or
xor
mov
cwtl
push
cltd
push
and
rep
xor
push
jns
popa
popa
mov
loop
dec
fwait
xor
lret
test
push
pop
lea
push
ret
dec
xor
jle
movsb
andb
cmp
shr
cli
jnp
push
push
inc
pop
dec
arpl
mov
bound
cmp
cmp
aaa
imul
cli
inc
in
cmc
add
jmp
cmp
dec
sbb
fstpl
mov
cmc
gs
push
test
xchg
adc
pop
jle
adc
lods
into
xchg
cwtl
rclb
inc
xchg
dec
mov
xchg
pop
mov
lock
cli
ljmp
int
test
add
cmc
out
insb
or
push
cmp
bound
loop
movsl
iret
inc
add
pop
imull
stos
addr16
adc
in
push
stc
jbe
insb
scas
dec
jo
faddl
mov
dec
push
nop
addb
xchg
mov
stc
fcomps
pop
inc
sbb
shrb
cmpsb
lods
imul
lods
xor
and
loope
fistpll
cmc
jge
pushf
and
mov
cmp
adc
jg
sbb
cs
dec
es
cmc
mov
rorl
pop
fsubrp
inc
push
daa
dec
repz
inc
repnz
lahf
push
xchg
push
push
sub
inc
dec
xlat
adc
enter
or
fisttpll
sub
xor
xchg
ja
pop
cmp
mov
add
std
mov
sbb
lds
inc
insb
or
xchg
out
add
clc
in
dec
cmp
stos
or
in
inc
fldl
cmpsb
mov
scas
bound
mov
and
loop
insl
xchg
into
mov
inc
or
jge
call
imul
pop
fsubl
xor
adc
bswap
sbb
push
add
in
das
xchg
add
lret
jl
xor
inc
lret
add
daa
jg
lods
lcall
add
and
jl
scas
sbb
pop
ret
xchg
iret
sbb
mov
jo
js
loop
pop
sub
cmc
push
inc
lcall
or
pop
repz
sahf
fsub
sub
jbe
pushf
shr
xchg
incb
xchg
mov
push
test
add
rcrl
daa
mov
adc
popf
add
xchg
push
mov
cmp
sbb
jbe
lcall
stos
cli
inc
in
xchg
jne
lock
adc
mov
cmp
in
sub
mov
call
lods
mov
out
imul
je
sub
pop
adc
fwait
loop
jno
cwtl
mov
dec
and
lock
add
pop
push
test
incb
pop
jmp
mov
sub
fsubl
dec
pop
inc
jge
mov
cmp
fwait
movsl
out
out
inc
cli
call
pushf
push
ret
ds
mov
rorb
sbb
mov
mov
call
inc
nop
jl
mov
push
adc
add
add
pop
rcrl
popa
je
dec
jnp
mov
int
or
in
mov
mov
movsl
jno
cmp
push
push
pop
jne
sub
sbb
xor
mov
push
stos
adc
movsb
sahf
fwait
repnz
and
sbb
addl
dec
pop
popf
mov
xor
mov
fildl
dec
xor
jg
inc
push
jecxz
and
push
mov
aas
pop
data16
xchg
mov
stc
and
sub
push
sub
mov
dec
in
xlat
fdivr
sub
push
or
sub
push
add
nop
mov
aam
pop
mov
xchg
cli
jle
mov
lret
lret
loop
ud2
add
and
lods
xor
jmp
xor
xor
jl
mov
inc
mov
jge
aam
ss
pop
test
bound
push
icebp
pop
xor
sub
push
xchg
xchg
xorl
sbb
add
cld
lret
fmull
add
mov
rorb
int3
push
test
or
adc
in
ja
popf
sub
jne
pop
and
cltd
repnz
jnp
cmp
push
repnz
push
fbstp
scas
lock
movsl
pop
jno
roll
mov
fimuls
and
add
ja
icebp
push
popf
jle
pop
jl
imul
adc
push
inc
in
push
std
push
pop
fnsave
ds
or
popf
mov
je
lods
add
ds
mov
and
add
inc
or
and
mov
test
lock
enter
test
mov
or
pop
gs
add
ljmp
push
enter
enter
add
test
sbb
and
pusha
sbb
mov
cmp
in
inc
shll
cmp
pusha
test
rclb
outsl
lahf
es
pop
adc
pop
sbb
push
or
repz
sub
inc
test
mov
mov
add
xchg
push
pop
push
leave
xchg
div
jns
sub
jecxz
.byte
xor
rcll
in
lea
push
lcall
movl
dec
test
cmp
dec
lock
push
add
insb
add
test
cmp
or
icebp
dec
icebp
pop
sti
hlt
nop
cmc
jg
imul
ja
xchg
sbb
fcomi
push
mov
mov
and
cld
cmpsl
notl
xchg
pop
outsb
mov
rorl
ror
leave
pop
mov
je
sbb
mov
cli
jecxz
dec
stos
jo
push
sub
popa
jo
adc
dec
cmp
and
mov
add
shrl
jo
rcrl
adcb
insb
inc
pusha
divb
sbb
and
lock
push
xchg
aad
inc
lock
shl
addr16
out
repz
nop
xchg
leave
pop
loope
stos
add
or
jp
cmp
sti
sbb
sub
sbb
jp
adc
xor
fsubrl
dec
ja
cmp
fstp
pushf
aas
aaa
add
dec
cmp
add
pop
mov
jg
push
arpl
cmp
test
sbb
mov
cmp
repz
jns
ss
push
inc
pop
xor
sub
cmc
out
pop
mov
sbb
les
mov
sub
jge
imul
cmp
nop
mov
fstpt
dec
mov
cli
in
icebp
sbb
pushf
cs
mov
mov
mov
test
mov
popa
mov
sub
loop
ficompl
test
mov
loope
jecxz
rolb
xchg
lcall
jo
push
popf
cmc
aaa
pop
sub
scas
mov
rclb
fsubl
ret
imul
and
test
fisttpl
addb
stc
cmc
mov
rcrb
cmp
mov
pop
jnp
mov
xchg
icebp
nop
mov
sbb
stc
xor
xor
fisttps
add
sbb
test
aaa
fisubrl
ja
daa
stc
mov
push
and
movsb
or
add
mov
mov
sub
rolb
cmp
mov
push
rclb
or
xchg
pop
loop
dec
aaa
test
movsl
push
mov
mov
sub
xor
mov
loopne
inc
xlat
mov
mov
aam
imul
push
pop
repnz
and
fcmovnbe
les
hlt
rcll
mov
sbb
call
cmp
or
push
mov
ret
imul
mov
mov
mov
jmp
mov
push
cmp
in
insl
aam
jle
push
roll
lods
lret
hlt
daa
cmp
cmpsb
or
mov
xchg
sub
in
icebp
push
roll
lods
fcomip
daa
and
push
pop
pop
jle
seto
sub
idivb
jecxz
mov
or
imul
lea
imul
int
fldt
cli
sub
mov
rclb
clc
add
dec
push
shlb
mov
mov
scas
or
push
add
repnz
insl
mov
scas
or
sti
xchg
pop
lret
icebp
cmp
loope
out
inc
mov
mov
insl
mov
sub
dec
ficoms
mov
adc
call
mov
pushf
sub
test
mov
jl
jmp
pushf
hlt
pusha
mov
xor
loope
fcompl
jb
sub
mov
js
sub
loope
dec
cmpsl
push
mov
add
add
aaa
sti
fimuls
dec
insb
daa
cmp
in
sbb
clc
clc
xchg
addr16
sbb
outsb
clc
push
bound
mov
or
sbb
in
or
fwait
lret
out
mov
out
push
in
in
xchg
pop
imul
xchg
rcrl
mov
adc
cli
xchg
scas
rcrl
xlat
pop
addb
xchg
sub
jo
daa
ret
sahf
xchg
mov
xor
aaa
andl
in
nop
enter
lock
jno
jo
ret
rorl
sbb
testl
add
mov
bound
lods
adc
setnp
icebp
mov
add
add
daa
testl
sbb
mov
adc
mov
mov
lret
xchg
out
setne
inc
inc
into
stc
or
xlat
outsb
test
sbb
and
loop
int
xchg
sahf
dec
add
mov
aas
addb
dec
rcll
in
mov
je
push
loop
add
lret
inc
and
dec
fldt
mov
pop
hlt
xchg
ret
jp
sbb
mov
push
jno
out
add
cmp
stos
sub
cwtl
xchg
or
aas
inc
aam
aaa
cmp
mov
negb
das
sub
cld
push
xchg
insl
test
pop
adc
pop
in
cwtl
mov
cmp
add
pop
mov
and
mov
enter
pushf
outsl
aaa
or
addr16
outsl
loop
xor
xchg
cmpl
sub
mov
fstpl
xchg
xchg
cmp
mov
mov
pop
mov
shll
or
xchg
sti
and
sbb
xchg
js
jp
mov
adc
sub
sub
in
or
sub
cmp
fisttpl
imul
lcall
cmp
in
cmp
out
cmp
ficomps
inc
jnp
fldl
mov
fisubrs
loope
or
mov
mov
outsl
in
cltd
cmp
adc
fsts
mov
pop
pop
xchg
xor
ret
add
mov
pop
xchg
jg
xchg
out
arpl
sub
push
xchg
and
pop
push
rcl
enter
inc
sbb
hlt
cmp
setg
inc
stos
push
lds
ljmp
push
xchg
popa
cmp
imul
imul
lock
add
stos
negl
dec
in
je
jg
mov
or
adc
add
cmp
push
cwtl
lods
add
mov
test
mov
inc
data16
movsb
cmp
in
pcmpgtw
in
push
cmp
imul
fidivs
outsb
cmc
or
leave
cmp
insl
mov
push
mov
jl,pt
lea
fwait
call
pop
sarb
pop
das
jg
imul
cwtl
sbb
call
xor
mov
nop
xchg
mov
imul
lods
cld
xchg
adc
mov
ja
xchg
scas
imul
in
sbb
faddp
out
movsl
sub
test
stc
jbe
shl
fwait
push
mov
xchg
out
dec
movsb
push
cmp
shll
mov
inc
push
pop
inc
fcmovne
dec
or
sbb
scas
push
and
stc
fnstcw
push
rcrl
add
sub
test
in
pop
mov
rcrb
into
pop
push
rclb
bts
shll
mov
fs
push
aaa
lret
fimuls
aas
xor
cmp
inc
inc
into
das
cli
call
adc
sub
out
fistpl
sub
xchg
mov
repz
mov
arpl
xor
mov
mov
add
cld
in
hlt
jns
xlat
idivb
in
pop
mov
ret
and
mov
nop
test
ror
rep
or
mov
xchg
add
jp
outsl
loope
mov
and
imul
mov
psubsb
fsubrl
xchg
into
sub
fmul
xchg
loopne
xlat
ret
imul
sub
or
cmpsl
test
ds
adc
mov
es
outsl
rcrb
js
shll
ret
es
imul
mov
out
mov
and
lahf
jno
sti
mov
in
js
xchg
insb
add
and
xchg
inc
outsl
loope
sub
adc
xchg
dec
jnp
sub
jge
adc
loopne
imul
in
mov
into
xchg
sahf
xchg
push
push
pushf
jns
xor
sbb
inc
out
sbb
push
shlb
xchg
jge
sbbb
movq
mov
pop
std
ret
nop
push
lret
adc
inc
in
adc
sub
test
pushf
movsb
lcall
icebp
shlb
mov
adc
test
adc
sbb
jge
loope
lret
arpl
repz
pop
and
in
addr16
jle
inc
jp
pop
sub
aas
mov
or
jge
enter
mov
mov
es
adc
sahf
clc
sub
sub
popa
or
pop
xor
xor
les
jg
xchg
imulb
pop
dec
cwtl
bsf
outsl
loope
and
sbb
add
or
aas
scas
imul
pmulhw
xchg
icebp
mov
ret
js
xchg
push
xchg
lods
or
jmp
les
ret
push
xor
ds
outsb
xor
jecxz
dec
nop
aad
lahf
test
ret
and
popf
fisubs
popf
xchg
lret
pop
mov
lods
loope
xchg
mov
test
ret
sahf
gs
stc
ret
push
lcall
dec
inc
lock
test
shl
mov
pop
mov
mov
lret
loope
mov
add
push
rclb
jg
push
lock
push
cmp
xlat
popa
addl
ret
icebp
nop
addr16
cmp
push
nop
dec
int3
inc
mov
je
adc
jno
fstpt
pop
push
and
and
jecxz
mov
inc
rcrl
cmp
xchg
jo
orl
outsl
loope
mov
aad
js
lods
or
mov
hlt
jo
icebp
inc
jns
pop
pushf
mov
dec
sub
mov
cmp
sbb
xlat
clc
xor
mov
xchg
or
pop
mov
xchg
dec
insb
movsl
xor
rcrb
add
test
faddp
imul
mov
xor
pushf
js
repnz
scas
push
mov
loope
sbb
fldenv
cmc
pop
jecxz
xchg
aam
dec
aam
pushf
dec
sub
push
adc
push
xchg
arpl
jnp
push
fimuls
jmp
xchg
into
lcall
iret
xchg
mov
jg
bound
lds
shrb
lea
fsubs
mov
insb
mov
jmp
fabs
pop
jecxz
ret
mov
dec
out
xchg
jg
jp
push
jp
outsl
lea
cmpsb
or
mov
imul
stos
lock
jnp
popa
mov
scas
outsl
lea
fs
xchg
test
mov
ret
arpl
mov
pop
mov
into
outsl
or
adc
rcrb
js
daa
lret
xchg
fcomip
mov
jecxz
lret
pop
inc
sub
dec
push
mov
daa
and
clc
add
push
mov
fs
push
xchg
ret
jp
inc
mov
mov
pop
push
addb
ljmp
sar
add
push
mov
loope
fistpl
xor
rcll
inc
mov
in
sub
xchg
ror
or
jnp
dec
loope
mov
sarb
mov
xchg
ret
jnp
cmp
push
xor
bsf
outsl
loope
mov
shlb
hlt
xchg
leave
imul
pop
lock
pop
adc
or
jge
outsl
out
mov
sarb
js
in
hlt
xchg
ret
sbb
pmovmskb
clc
mov
arpl
loope
cmp
cmpsb
es
jnp
cmp
scas
in
ljmp
cwtl
pop
pop
ror
stc
pop
jno
cli
jb
testl
and
jmp
outsl
or
test
cmpsb
inc
in
cmp
sbb
mov
cmpsb
in
rcrb
jo
xchg
clc
or
cmovp
push
push
std
inc
mov
aaa
xlat
loop
and
mov
in
in
repz
push
insl
fsts
mov
pop
fincstp
pop
adc
rcll
dec
sub
xor
test
sub
mov
test
or
mov
movsl
lods
insl
out
cmpsl
adc
inc
sbb
adc
pop
pop
in
gs
lret
pop
mov
dec
cli
push
pusha
ljmp
and
mov
sub
cmpsl
sub
loop
xorb
cmp
je
inc
mov
mov
rclb
and
ja
xor
inc
mov
sahf
mov
lds
nop
in
aad
imul
jae
iret
or
pop
jle
shr
xchg
jle
jmp
std
repnz
sbb
jns
dec
andl
test
and
mov
cmpsb
sub
or
pop
adc
fnsave
dec
into
sub
jo
dec
push
and
enter
stos
or
xchg
push
cmp
dec
add
sbb
mov
mov
xor
int
jne
shlb
cmp
sub
add
fdivrl
xchg
inc
scas
mov
test
idivl
or
sbb
inc
dec
adc
cmpsb
jl
pop
jno
imul
cmp
lods
adc
sub
pusha
ret
or
insl
cmpsb
or
mov
cli
xlat
and
in
or
lods
rolb
sub
cmpsl
bound
and
dec
lock
dec
sbbb
or
mov
in
out
push
push
aam
xor
cmpl
or
add
sbb
push
mov
out
aaa
mov
push
mov
jp
mov
or
outsl
movsb
mov
pop
mov
jae
xor
inc
push
adc
cli
movsl
jp
shrl
cmc
fwait
cmpsb
cmp
sbb
mov
xchg
jle
enter
jge
add
mov
insl
mov
pop
lret
data16
test
cld
mov
xlat
jae
xchg
push
mov
push
fcmovnbe
jae
mov
inc
unpcklps
jg
lea
mov
mov
sub
test
lret
mov
inc
pop
jl
cmp
sbb
movsl
dec
xchg
stos
int
lea
sub
ret
mov
in
sub
push
cs
clc
sub
lock
jns
leave
jp
xor
fldenv
fs
lea
adc
mov
test
mov
lahf
jno
ss
stos
cvttps2pi
fistl
mov
int
lods
push
mov
jmp
int
iret
mov
leave
dec
roll
sub
dec
mov
cmp
jb
fxch
dec
xchg
add
shlb
sub
jnp
in
or
jo
aaa
in
jae
stos
int3
mov
std
dec
cmp
je
pushf
add
fisubrl
sbb
hlt
mov
sti
arpl
dec
mov
xor
push
cmp
fwait
dec
add
jb
addl
aad
addb
mov
dec
aad
adc
movsl
sbb
aam
shlb
or
fisubl
jl
push
adc
stos
pop
fxam
test
test
out
inc
sarl
jle
popa
clc
iret
sub
xchg
repz
roll
insl
sti
jno
stc
insb
mov
mov
popa
lahf
push
stos
je
pause
adc
inc
mov
lds
or
mov
jmp
and
out
inc
hlt
xchg
cmp
out
cmpsb
cld
add
mov
test
in
jae
scas
test
movsb
push
sub
sub
in
fcmovb
sub
or
test
lcall
fbld
movsb
testl
repz
sub
mov
test
in
xchg
daa
test
push
inc
imul
xor
stos
pop
add
push
loopne
add
lods
dec
adc
clc
aam
sub
loop
mov
lcallw
mov
inc
xor
lcall
mov
push
mov
ljmp
sti
or
sub
or
or
push
clc
fsubrs
js
or
int3
pop
jnp
mov
add
fnsave
xorl
xor
repz
jg
adc
sbb
cmp
lcall
push
clc
ljmp
xor
dec
sarb
sti
cmc
imul
out
dec
stc
mov
cmp
movsb
xchg
psrlw
push
inc
jp
add
out
shll
cltd
orb
aaa
and
shl
xorl
test
add
cmc
push
and
fiadds
cmp
add
addr16
imul
push
stos
push
adc
sbb
or
add
in
mov
mov
mov
stos
ret
aas
cs
aam
cmp
fiadds
hlt
cmp
bswap
adc
cmpsl
divb
imul
mov
xchg
fwait
pop
fucomp
movsb
rcrb
std
enter
adcb
cmc
lods
test
lock
popa
add
incl
pop
xor
and
xchg
in
dec
add
mov
xchg
jb
mov
out
pop
cmp
es
pop
pusha
fwait
xor
loop
push
mov
sub
les
ror
cwtl
nop
jge
add
inc
xor
dec
add
or
xlat
cmp
les
loop
aad
cmpsb
lock
mov
and
mov
pop
push
imul
pop
jle
sub
push
dec
and
mov
repnz
and
loopne
or
push
inc
xlat
cmovb
jge
aaa
push
xor
repnz
push
mov
popf
push
sbb
mov
rorb
adc
cs
enter
outsl
cmp
insl
pop
sbb
sub
fst
lock
sbb
iret
dec
int
stc
push
cmpsl
dec
movsb
js
ljmp
dec
cmpsb
jp
out
out
xchg
or
repz
mov
xchg
jnp
es
mov
imul
and
cli
sbbw
cmp
cwtl
cmp
pop
or
jecxz
pushf
cmpb
jbe
mov
jge
push
xchg
inc
out
aad
popaw
lods
and
hlt
out
mov
into
into
jmp
in
fcoms
inc
adc
xchg
imul
mov
push
or
jmp
js
pop
test
lret
cmc
popa
inc
mov
dec
sbb
shll
add
dec
sti
mov
in
je
ret
cmp
inc
in
dec
je
mov
xchg
ds
jno
push
pop
add
arpl
fwait
loopne
cmp
mov
xchg
addl
cmpsb
dec
test
pop
aad
enter
or
cld
add
insb
or
mov
test
mov
jb
jnp
subl
cli
pop
bound
ljmp
mov
movsb
mov
and
xchg
jl
icebp
pushl
cmp
sbb
add
fs
mov
iret
dec
repnz
shlb
xor
mov
mov
int3
xchg
fwait
push
jg
and
and
repnz
pop
out
cmpsb
aam
cmp
pusha
aad
cwtl
sbb
jo
pop
in
mov
mov
or
sbb
adc
adc
lods
jmp
popa
je
mov
pop
sub
scas
iret
cwtl
stos
inc
xchg
mov
add
push
add
mov
mov
xor
imul
popa
add
popa
dec
data16
cld
inc
je
rcrb
push
decb
in
mov
aam
push
jg
cmp
cld
sbb
rcrl
lahf
and
cld
xor
inc
xor
in
inc
test
inc
das
adc
gs
pop
fadd
ret
adc
xor
ss
adc
jo
lods
movsb
imul
xlat
fwait
mov
fdivl
sub
cmp
mov
or
and
jbe
xor
ficoms
push
sub
ret
mov
loopne
xchg
fistl
adc
sub
imul
ss
shrb
test
cmp
add
pop
pop
xchg
out
bound
scas
sbb
push
lock
mov
cmp
cmc
lock
push
ja
mov
out
leave
inc
es
jb
and
sbb
or
push
push
stos
xor
sub
push
cli
rclb
cmp
cwtl
add
jne
outsl
out
mov
ss
sbb
mov
fldt
popf
sbb
pop
xor
add
cmp
and
ss
jno
inc
push
dec
adc
aam
or
adcb
outsl
sbb
xchg
inc
je
mov
in
stc
mov
dec
lock
add
ljmp
jno
xchg
xchg
lea
jg,pt
sahf
notl
mov
fbstp
ljmp
pushl
sbb
mov
lods
and
jmp
mov
fisttpl
cmp
les
jmp
outsb
xor
ret
push
out
jg
fidivs
std
out
les
cwtl
pop
jbe
mov
mov
adc
sbb
dec
decb
xchg
add
cltd
sbb
test
fwait
cmp
pop
aam
push
cmp
adcb
loop
out
scas
lds
cmc
mov
push
scas
adc
bound
cmc
or
out
inc
iret
sub
mov
mov
mov
icebp
stos
cmp
sbb
sub
lods
bt
imul
divb
les
mov
popf
mov
adc
lahf
and
mov
rclb
mov
hlt
mov
inc
cmp
inc
cmpsl
jbe
pop
arpl
inc
pop
cmp
pminub
adcb
xor
in
fnstsw
pop
jns
or
jns
pop
pusha
imul
or
in
mov
imul
in
dec
cmp
loopne
sub
mov
loopne
or
popf
lret
mov
outsl
icebp
in
sub
cmc
cli
xor
mov
add
jle
inc
xor
ss
xchg
jns
ds
mov
adc
and
and
and
subb
in
jp
cmp
in
xor
inc
xchg
rcr
je
mov
int
or
iret
andb
int3
jb
or
sub
fcomp
xor
xchg
jmp
add
fdivrs
mov
stc
lea
push
add
mov
outsb
fstpt
ret
loop
data16
fistpll
repz
mov
loope
cmp
add
fnsave
jne
pop
fwait
enter
hlt
arpl
rcrl
mov
out
pusha
jp
das
nop
add
ja
js
inc
rcr
mov
aam
push
sub
push
xchg
outsb
idivl
test
pop
jecxz
push
in
sub
jecxz
xlat
or
arpl
mov
enter
xchg
xchg
or
das
fmulp
ret
subl
es
xor
mov
das
mul
test
push
sub
push
data16
push
lcall
or
xlat
ljmp
xchg
sbb
aad
outsl
push
ja
adc
lret
pushf
dec
push
rep
sbb
mov
idivl
data16
rcr
mov
push
scas
mov
sub
sub
into
mov
push
xchg
loope
adc
jmp
leave
mov
xlat
je
mov
fwait
dec
ljmp
adc
xchg
fisttps
xor
push
mov
fisttpll
gs
loopne
mov
shrb
sbb
dec
jecxz
mov
cmp
loop
dec
les
rorb
xor
or
imul
sti
pusha
fisttps
stos
cli
push
xor
stos
js
xchg
mov
loope
jnp
lods
lcall
xor
sti
nop
enter
leave
mov
mulb
les
push
fadds
jle
fstp
jns
hlt
clc
jp
lock
jl
dec
int
lods
xor
scas
mov
mov
cld
dec
addr16
lcall
aad
mov
pop
int3
mov
in
lea
push
mov
shrb
rorb
jbe
ret
jno
sub
mov
xor
pop
mov
jle
addr16
pop
call
fnstenv
es
jge
shrl
in
add
adc
icebp
sub
sti
and
in
lret
xchg
push
mov
mov
xchg
mov
js
in
rcll
ja
adc
inc
movsl
dec
stc
and
pusha
mov
fwait
cmp
xchg
add
in
in
icebp
popl
mov
pop
mov
arpl
pop
bound
stc
add
in
mov
and
pop
das
lret
repz
adc
push
cmp
jo
sahf
call
cmp
xchg
repnz
push
push
xchg
push
in
sbb
push
push
mov
jno
cs
icebp
and
xchg
loop
xchg
jg
imul
fcmovne
nop
clc
out
lahf
jp
mov
mov
sbb
mov
jl
xchg
push
hlt
into
jb
dec
stc
lock
faddl
jno
lahf
mov
sub
pop
data16
and
pop
mov
cmp
cmp
lods
int3
xor
mov
push
mov
xor
sbb
sahf
and
gs
push
push
add
ss
movsb
adc
js
je
xchg
stos
mov
xor
sbb
mov
test
lcall
or
lods
xchg
in
sub
cli
addr16
sub
shll
pop
xor
mov
fwait
repnz
into
mov
xor
jns
sti
jb
xor
lods
clc
and
loopne
sub
push
lods
das
cmc
xchg
jg
enter
in
mov
sbb
xor
nop
test
push
mov
inc
paddsw
sbb
adc
xchg
mov
cmp
ret
rorb
aas
or
jg
popf
push
dec
stos
or
mov
and
push
jne
stos
jno
into
mov
out
mov
xor
inc
pop
je
aam
stos
shr
push
mov
push
test
mov
call
jno
and
in
dec
rcl
in
or
in
pop
test
int
cs
cli
pop
scas
mov
xchg
fwait
push
gs
mov
insl
out
cmc
subb
cmpsb
push
pop
mov
fnsave
push
icebp
mov
shrb
xchg
pop
mov
dec
mov
ds
mov
lret
push
xchg
cmpb
mov
in
in
push
sbb
add
dec
cld
adc
cmp
mov
nop
je
shlb
or
jge
mov
aad
in
xchg
add
roll
and
mov
add
xchg
test
sti
test
insb
sbbb
dec
jmp
jbe
test
stos
fistpl
fistpl
subb
les
push
inc
jns
and
jmp
push
cmc
lcall
add
or
lock
test
stos
mov
cs
jnp
dec
adc
jo
push
sub
adc
xchg
mov
pop
sbb
xchg
push
fcomps
leave
incl
sub
fsubl
lods
jle
mov
aad
jae
fcmovne
lret
js
inc
ljmp
or
and
adc
xor
push
cmc
sbb
or
addb
inc
les
jle
sbb
inc
xchg
in
cmp
arpl
cmp
int3
test
fsubrl
add
scas
sub
mov
lock
lret
fld
mov
sbb
inc
adcb
int3
cmp
lock
cmp
imul
xchg
inc
shr
movsb
popf
push
inc
or
sbb
xchg
xchg
out
jae
repnz
pop
aas
add
sub
xor
adc
mov
jg
inc
aad
aad
sub
push
push
inc
in
mov
lea
pop
scas
sub
insb
fnstsw
adc
mov
pop
add
jge
fisttpll
stos
lods
orb
hlt
inc
xchg
mov
mov
dec
fwait
and
daa
xchg
xchg
add
push
mov
cwtl
xor
testb
jmp
movsb
jp
cmp
shrb
mov
fcoml
push
cld
jo
test
pop
std
sub
cmp
insl
push
push
sub
je
inc
xchg
dec
xor
push
xchg
aam
ja
pop
mov
shrl
cmp
subl
mov
xor
jns
and
outsl
inc
out
hlt
in
lods
mov
ret
faddl
sub
iret
mov
out
out
pop
jg
aaa
pop
out
addb
aam
fwait
nop
std
mov
fs
rolb
leave
ljmp
leave
mov
pop
arpl
movl
mov
push
out
adc
icebp
mov
xchg
test
or
dec
xor
in
cmpsl
xchg
sbb
int
dec
add
and
cmp
idiv
sbbl
std
adc
push
pop
fchs
ljmp
ror
stos
or
aam
pop
inc
mov
sahf
inc
dec
out
mov
sbbl
clc
out
pop
imul
insb
add
push
test
hlt
icebp
ret
in
pop
or
adc
add
xor
push
xor
xchg
mov
in
imul
nop
xchg
enter
popa
lock
pop
jbe
sbb
insl
aaa
cmc
lret
lods
loop
mov
data16
xlat
hlt
cmp
adc
dec
adc
dec
clc
xchg
mov
loopne
sbb
push
pop
pusha
loope
lds
xchg
mov
sbb
and
dec
push
dec
gs
mov
fs
jge
mov
nop
adc
mov
aas
or
gs
gs
mov
inc
sti
in
or
pop
mov
jae
jle
hlt
xchg
fs
add
leave
add
or
adc
push
mov
stc
loopne
icebp
rclb
xchg
sub
pop
out
mov
shl
adcb
cs
insl
xchg
sub
das
and
sbb
movsl
xchg
aad
filds
stos
jb
loopne
loop
int
push
popf
sub
and
jle
scas
int3
push
roll
cltd
aad
push
leave
xchg
stos
adc
pop
cmc
mov
inc
leave
sub
jl
imul
fbstp
lcall
pop
jmp
mov
xor
jmp
xor
inc
mov
cmp
xor
inc
inc
jmp
mov
adc
push
mov
mov
icebp
xor
mov
pop
mov
jg
int
hlt
xor
repz
jb
mov
mov
lds
cmp
sub
mov
inc
rcrl
das
sub
popf
add
ljmp
repnz
jnp
shrl
test
outsl
insb
dec
imul
sti
adc
lds
adc
mov
mov
cmp
cmpsl
das
add
ret
test
cmp
sub
push
fsubrp
mov
lods
jl
jae
inc
pop
mov
dec
push
push
jae
sub
push
add
notl
ss
xchg
pop
or
cmpsl
in
lcall
xor
shrb
mov
mov
test
mov
das
xchg
outsl
jnp
sbb
pop
arpl
push
cwtl
jmp
and
inc
lret
dec
xor
lahf
xor
shll
mov
cmpl
fucomi
test
cmpsb
mov
mov
sub
loope
cmp
clc
or
std
pushl
adc
daa
jbe
sbb
js
insb
jg
push
add
aaa
stos
xlat
push
adc
and
insb
daa
push
sub
rcrl
xchg
xchg
cmp
dec
mov
int
pop
push
push
je
mov
fmuls
add
arpl
jmp
or
stos
pusha
call
xlat
mov
xchg
push
das
outsl
push
xor
fsubrl
jno
les
push
les
pushf
pushf
sbb
sbb
jmp
imul
or
fs
mov
or
push
ss
mov
or
pop
aaa
stos
cmp
cmpsl
pop
loopne
or
loope
iret
xor
in
push
rclb
mov
xor
fidivl
fisubrl
pop
sub
lods
adc
orl
mov
fcompl
dec
cmp
negb
in
fwait
shlb
pop
gs
int
jle
pop
iret
popf
stos
mov
jne
ja
mov
push
in
add
ffreep
pop
popa
sub
mov
or
lcall
mov
adcb
cmc
push
jmp
ja
mov
stc
pusha
sarl
in
cmc
out
dec
pusha
out
or
inc
push
aas
cmp
lods
adc
testl
mov
aas
and
cltd
jb
js
out
push
jmp
mov
xchg
mov
das
xorl
adc
testb
xor
in
cli
notl
jns
jb
scas
mov
adc
dec
mov
fldenv
sbb
movsl
fiaddl
jp
int3
mov
pop
arpl
fidivl
stos
in
sub
lods
shl
or
mov
or
fs
iret
testl
pop
sub
stc
mov
xor
push
pop
jns
or
decb
sbb
test
mov
lahf
aam
out
xor
adc
fsubrs
repnz
cmp
and
cltd
push
pop
and
mov
out
cmpsl
fdivrp
adc
and
adc
push
ret
adc
testb
cmp
add
jl
sarb
add
loopne
mulb
jnp
icebp
pop
js
call
fsts
adc
cmp
loopne
add
sarl
loope
roll
cmp
int3
test
aad
orl
loop
imul
mov
in
pop
jno
dec
lret
inc
cld
inc
or
or
pop
sub
test
and
movsb
rcl
addr16
sub
test
aam
ljmp
movsb
mov
outsb
sbb
inc
push
test
scas
nop
cmc
negl
sbb
push
mov
dec
adc
mov
inc
inc
fisubs
cmp
push
out
data16
imul
in
jg
mov
push
nop
pop
xchg
mov
adc
insl
xor
lret
mov
movsb
enter
adc
xor
pop
push
jb
fcomip
mov
cmp
sti
pop
cmpl
popf
adc
fnsave
imul
and
fldt
imul
fwait
repz
inc
shll
imul
rorl
inc
dec
jnp
mov
xchg
out
dec
and
and
imul
xchg
test
lahf
jp
mov
mov
jo
stos
shlb
jl
stos
adc
sbb
insl
inc
sbb
adc
insb
push
sub
data16
movsb
rcrb
outsl
pusha
scas
mov
xchg
cmp
jmp
test
mov
dec
std
dec
out
es
push
add
sbb
push
lods
xor
cmp
aam
mov
dec
pusha
or
push
dec
sti
sbb
aaa
cmpsb
mov
outsb
add
nop
lret
clc
lret
xchg
jmp
jns
sub
fwait
scas
add
pushf
push
inc
clc
mov
dec
rol
cmp
insb
aaa
adc
lods
jecxz
or
add
sbb
js
insl
nop
cmp
rorl
push
inc
lret
aam
cmpsl
pop
sub
and
push
negb
jae
pop
loop
push
dec
pop
fmul
dec
dec
xchg
push
cmpsb
xchg
repz
ret
rcrb
and
xorb
popf
roll
mov
cmp
fdivr
cli
add
fstpt
outsl
nop
mov
xchg
and
sub
ja
movsb
xchg
cmpsb
cmp
data16
mov
sub
add
pop
pop
jg
pop
pop
or
adc
push
mov
clc
mov
push
mov
arpl
test
mov
adc
cs
dec
out
or
ret
sub
in
stos
loop
jns
push
mov
mov
fcomip
loope
lods
dec
dec
cld
cmp
dec
sbb
pop
fmuls
inc
shlb
mov
imull
outsl
out
jmp
jae
int
mov
jne
adc
xchg
decb
mov
mov
bound
and
push
clc
mov
insb
sbb
mov
add
inc
int3
mov
ja
jno
sub
pusha
cmp
gs
rcrl
nop
mov
push
xchg
push
mov
mov
jne
jns
cmpsb
push
adc
cmp
mov
cltd
fcoml
aad
inc
pop
pop
lods
shll
jl
mov
xchg
dec
xchg
jne,pn
in
dec
cmp
jge
jne
and
push
push
dec
repz
imul
daa
icebp
mov
or
add
shrd
mov
icebp
lods
xchg
hlt
sub
je
inc
bound
repnz
jae
mov
sub
addb
jbe
ss
inc
sub
les
ss
out
jle
mov
pop
stos
cmp
call
unpcklps
and
inc
and
pop
mov
sbb
xchg
xchg
lock
pop
mov
mov
mov
popf
mov
pusha
dec
iret
repnz
ja
push
mov
out
jne
fsubs
ja
sbb
ss
sbb
push
scas
test
aad
inc
lea
aam
invd
cmpsb
sbb
repz
cmp
ret
xor
pop
aaa
xchg
and
sub
pop
mov
mov
fs
inc
jae
dec
pusha
sbb
and
fcoml
adc
mov
sahf
sbbb
xchg
jnp,pn
lret
outsb
hlt
xchg
int
mov
out
cs
xchg
movsl
test
lret
cmpb
ds
xchg
movsl
and
arpl
mov
push
push
pop
cmc
jmp
jmp
mov
arpl
das
stc
in
inc
sbb
rclb
fsub
xlat
nop
mov
rcr
stos
cmp
dec
adc
les
jl
icebp
lahf
mov
dec
jecxz
xchg
call
int3
fsts
ss
data16
pop
sub
mov
in
jecxz
je
cs
push
ljmp
fcmovnb
and
arpl
cmpl
jg
test
jno
sub
inc
test
and
mov
int3
rdmsr
cs
sti
aas
xlat
dec
add
mov
or
ljmp
shufps
fisubrl
rolb
std
xor
imul
testb
lods
adc
call
jo
sub
sbb
mov
or
xchg
in
outsb
movsl
mov
and
mov
adc
mov
in
push
loop
fnstcw
sub
repnz
pop
add
fsubs
nop
cltd
icebp
stos
adc
mov
test
dec
insl
jb
xchg
ficomps
or
aam
test
pop
scas
jnp
cmc
addl
sbb
inc
cld
dec
cmp
xorl
fidivs
sub
js
jmp
aad
iret
sbb
push
mov
mov
mov
push
popf
add
push
ret
sub
xchg
mov
adc
sub
push
iret
icebp
dec
rcr
mov
adc
fs
test
xor
daa
addr16
scas
or
and
sub
push
fsubrs
fisubrs
xchg
pop
arpl
mov
pop
mov
add
frstor
int
daa
jae
push
sub
jnp
std
and
loop
jmp
push
and
idiv
movsl
jbe
or
out
stos
cli
fmuls
mov
outsl
mov
sbb
repz
xchg
ret
mov
nop
rclb
pop
mov
xchg
inc
sbb
pushf
add
pusha
xor
std
and
bound
cmp
orb
loopne
fsubl
loop
stc
lret
push
loopne
push
jnp
loop
rclb
call
rcrb
lock
xchg
inc
aas
jl
shlb
into
jnp
dec
add
push
lcall
mov
int3
js
mov
and
loop
add
and
xchg
add
mov
xor
test
into
push
dec
fstpt
fidivl
in
adc
je
xchg
movsb
xor
movl
inc
mov
sahf
adc
add
mov
cmp
fnstcw
orb
out
dec
xchg
mov
pop
icebp
lods
js
jmp
xchg
adc
int
pusha
addr16
add
cmpl
xchg
scas
mov
je
scas
mov
lahf
sub
mov
lea
xchg
sbb
or
push
sbb
icebp
pop
xor
insl
test
inc
sub
mov
test
push
push
xchg
xor
stc
jle
push
scas
mov
xorb
fs
sbb
sti
jmp
pushf
arpl
lods
bound
inc
clc
or
push
pop
idiv
push
leave
mov
dec
mov
push
mov
data16
insb
mov
stos
in
movsl
loope
cmp
mov
gs
mov
lds
and
push
mov
sbb
dec
cltd
popf
and
lret
xchg
sbb
and
dec
insb
xorl
add
jg
fucomip
loope
out
ss
mov
mov
ret
inc
mov
stos
push
fs
testl
aaa
xchg
pop
repnz
push
gs
dec
xor
sub
lods
mov
repz
and
and
mov
and
fistpl
orb
sbbl
dec
cmpl
dec
sbb
mov
rcrl
ss
mov
mov
add
inc
jns
stos
bnd
adc
xor
jae
movsb
dec
sbb
jo
scas
ds
addr16
fwait
mov
and
clc
mov
inc
in
mov
xor
jmp
xor
into
sahf
mov
dec
out
out
jb
dec
push
sub
sub
pop
jle
or
insl
sub
add
stc
aam
movsl
pop
add
int3
mov
imul
and
sub
lea
movsb
jl
sahf
push
imul
mov
bsf
mov
add
dec
cmp
out
add
dec
je
cmc
cli
rclb
xchg
push
int3
int
inc
push
mov
clc
jae
movsb
in
out
cmp
fsubr
dec
pusha
adc
scas
outsb
push
dec
in
inc
or
ret
mov
mov
push
fs
push
sub
pop
and
sub
add
sbb
jbe
out
je
push
nop
in
xchg
aad
inc
insl
mov
mov
adc
cmpsb
cltd
jecxz
mov
add
test
test
add
inc
jmp
fcmovnb
loopne
in
shrb
nop
adc
mov
add
jg
outsb
and
jecxz
popa
add
fstps
dec
shlb
aad
neg
fidivl
ficomps
movsb
sti
jmp
xor
aad
pop
lret
mov
js
lret
xchg
hlt
lods
cli
aaa
jb
pop
jne
aaa
mov
aas
push
jle
fisttps
lret
fnstsw
xchg
xor
ffree
mov
dec
bound
inc
es
sbb
ret
cmpsl
andl
or
dec
sub
xor
mov
dec
adc
icebp
and
mov
repnz
or
nop
pop
add
fcoms
lahf
add
pop
push
mov
std
or
loopne
sti
or
leave
dec
add
cltd
adc
int
inc
sbb
rcrb
outsl
or
xor
dec
add
push
outsl
inc
pop
xchg
pop
sub
jmp
cltd
daa
cmp
jg
add
mov
divl
dec
pop
adc
sub
popa
xor
mov
sarb
inc
dec
enter
push
mov
xlat
imul
add
les
ljmp
test
push
insb
loopne
push
push
mov
inc
test
cmpsb
shll
outsl
sbb
ljmp
adc
dec
jecxz
xchg
add
sub
clc
dec
jg
sub
jb
into
outsl
xchg
xor
sbb
xor
sbb
fcomi
jno
xor
in
inc
outsb
cmp
or
sahf
test
stos
pop
movsb
xor
nop
dec
dec
fsts
dec
sub
incb
std
pop
shr
and
ror
adc
in
dec
or
dec
aaa
pop
aas
les
jmp
loope
lahf
popf
sub
ljmp
mov
sbb
fistpl
jl
mov
scas
pushf
hlt
pusha
sti
sahf
jo
push
pop
jne
pop
and
aam
xchg
mov
pop
stos
pop
xchg
push
jns
mov
push
lret
sbb
dec
lahf
sahf
insb
mov
enter
fnstsw
sub
sbb
mov
fsts
aam
cltd
add
fists
loopne
into
sbb
and
aas
cltd
pop
sub
insb
adc
mov
data16
lea
dec
or
jo
fsubrs
adc
and
daa
mov
dec
mov
das
cld
and
ret
out
inc
mov
mov
cmpsl
repz
mov
jno
mov
hlt
add
or
xlat
xchg
pushf
outsl
cli
cmc
rcrb
inc
push
dec
fwait
stc
outsl
jns
sbb
mov
xor
xchg
xchg
loopne
sbb
jnp
call
push
add
in
repz
scas
decl
mov
sahf
inc
mov
loop
mov
or
xor
xor
enter
imul
repnz
jecxz
int
dec
cmpb
sbb
inc
add
je
pop
cmp
test
or
xorb
adcb
arpl
clc
out
notl
push
outsb
icebp
sub
dec
add
or
lds
cmpsb
stos
icebp
cmpsb
fmuls
imul
or
sub
dec
call
fidivrs
or
pop
sbb
stc
push
outsl
jb
in
add
mov
rcrb
inc
rcrl
xchg
push
mov
js
and
mov
stc
push
cmpsl
xchg
or
add
add
test
sub
leave
das
xchg
mov
xor
and
or
mov
outsb
mov
xchg
aad
cld
test
aam
push
add
mov
adc
mov
pop
insl
xlat
xchg
xor
out
adc
push
je
adc
fisubs
push
daa
sar
xor
lahf
lret
ds
stos
call
popf
mov
lret
dec
dec
in
arpl
jmp
clc
sub
push
mov
push
shll
add
add
jecxz
cmp
sti
aas
lods
fucom
sbb
sbb
dec
mov
xchg
inc
arpl
je
or
mov
adc
sbb
mov
jle
dec
cmpsl
jo
dec
mov
dec
and
or
loopne
arpl
xor
outsl
cs
mov
aam
push
and
mov
outsl
jle
mov
das
push
je
aam
sti
outsl
in
test
mov
xchg
popa
imul
adc
es
xchg
lret
xchg
sub
lahf
lock
lods
inc
es
nop
and
xchg
or
cmpsl
comiss
sub
lea
xchg
je
add
inc
lea
adc
pop
adc
jge
jg
mov
xchg
pop
js
mov
call
push
bound
pop
push
jne
or
jne
and
in
and
lcall
test
rorb
cmp
aas
sub
adcb
push
push
leave
fstps
movsl
scas
fldt
dec
into
ret
pusha
xchg
cmp
jl
call
and
hlt
push
cmpsb
dec
cld
fldpi
push
jb
jge
or
ja
push
lock
mov
jp
mov
or
inc
jae
cli
sti
cmp
xchg
mov
pop
pop
sub
lock
xchg
loop
aad
push
cmp
sub
loopne
insl
in
inc
inc
adc
stos
cmpsb
add
and
lock
add
mov
outsb
fnsave
xchg
jbe
imul
cltd
inc
or
lds
out
lock
movsb
and
loopne
inc
xchg
inc
sbb
jp
clc
cmpl
fcoms
rolb
mov
adc
cmpb
ficoms
xlat
repnz
and
movsl
jbe
inc
out
imul
dec
xor
movsl
dec
lods
sbb
repz
cmc
hlt
xchg
cmp
xchg
ficomps
push
cmp
scas
inc
shr
xor
or
outsl
mov
mov
jge
cmpsl
xor
ror
mov
outsl
push
or
lret
pop
xor
xor
fsub
xor
andb
add
enter
loope
xchg
xor
sub
mov
arpl
xor
pop
sti
and
inc
xlat
loopne
lret
dec
push
adc
sbbb
xor
int
xchg
insb
pop
jo
pop
jecxz
fs
dec
jne
fdivrl
cs
jle
sub
ret
cmp
push
pushf
aaa
xchg
sub
jg
pop
add
push
clc
aad
xchg
xchg
aaa
sti
stc
mov
imul
fdiv
pand
xchg
adc
les
sahf
es
dec
mov
mov
mov
mov
pop
stc
sub
xchg
leave
mov
sub
nop
jg
mov
movsl
dec
push
jo
test
push
lock
mov
mov
pop
imul
loopne
mov
clc
jae
scas
addr16
push
sti
or
jns
in
cmp
jmp
es
xlat
movsb
pop
sbb
iret
mov
xchg
outsl
xchg
rcl
std
or
dec
mov
test
jmp
movsl
outsl
fdivrs
sti
insb
add
rcl
in
adc
das
dec
sbb
mov
xlat
mov
or
jns
lret
jge
inc
imul
cli
dec
cwtl
and
popa
mov
xchg
xchg
adc
dec
lods
sbb
test
cmpsb
loopne
lcall
xchg
inc
mov
fimull
jg
int3
mov
mov
mov
sub
push
outsl
and
test
xlat
daa
aad
push
loopne
inc
pop
sbbl
aas
inc
loope
pop
add
cmp
jg
cltd
sub
xor
shrb
hlt
jg
rorb
pop
fs
pusha
jg
cmp
in
mov
out
fmull
pop
inc
xchg
call
inc
lcall
lret
outsb
adc
leave
fmuls
stc
imul
jmp
mov
ds
inc
sub
and
fnstsw
cmp
call
loopne
or
and
cwtl
and
prefetch
call
enter
daa
dec
mov
push
aas
lea
xchg
or
hlt
daa
lcall
std
inc
loop
dec
imul
mov
cwtl
mov
and
sbb
clc
test
jae
arpl
mov
dec
popf
mov
adc
xchg
pop
xor
jmp
jle
push
mov
notb
lods
in
xchg
scas
xchg
xor
repnz
adc
pop
and
adcl
xchg
movsl
dec
jmp
cwtl
aaa
rcll
ljmp
push
jle
in
pushf
xchg
rcr
push
das
pop
orb
rcll
scas
sub
xor
dec
sub
mov
xchg
jns
push
dec
jmp
mov
push
sub
aam
push
mov
push
and
das
or
cli
push
adc
sbb
imulb
out
push
push
xlat
push
push
cmpsl
xor
inc
inc
fildl
inc
push
or
xchg
enter
inc
jl
imul
movsl
mov
notb
shrl
lret
xorl
xor
or
ret
mov
dec
out
or
adcb
iret
jno
in
mov
xor
loope
mov
ret
sar
xchg
es
shlb
pop
sub
ss
insb
jmp
cli
xorb
push
mov
adc
pop
clc
ja
mov
icebp
out
inc
in
sub
imul
ret
lods
dec
add
popf
dec
shrl
loop
push
push
je
hlt
mov
push
cs
mov
dec
and
fistps
fwait
movsl
out
ret
and
shrb
lods
jecxz
cwtl
dec
jns
movsl
push
sub
add
adc
jbe
push
jo
iret
add
ret
jbe
loope
adc
push
mov
xchg
inc
cmpsb
rorl
sub
out
gs
gs
subl
mov
fdivrs
pop
out
push
pop
xor
iret
or
pop
mov
cmp
test
inc
icebp
mov
popf
or
pop
xchg
push
push
jbe
mov
clc
repnz
sbb
mov
cmpsl
into
dec
sub
push
mov
jg
sahf
adc
test
ret
push
cmpsl
mov
ret
sbb
or
popa
test
test
cmpsb
pop
dec
xchg
aad
in
cmpsb
mov
insb
add
lods
xchg
in
push
stos
test
xor
pop
lea
sub
inc
out
mov
pop
stos
and
std
ret
fimull
mov
stos
fildll
inc
pop
jno,pn
inc
or
imul
cli
adc
fisttpl
push
fldt
jmp
scas
pop
mov
fs
repnz
lret
mov
mov
inc
push
push
and
jmp
jle
lods
push
in
mov
outsb
aas
in
imul
xchg
sar
scas
sub
sub
outsb
adc
rorl
pop
adc
mov
mov
push
or
repz
add
in
cmp
mov
xor
push
icebp
xor
mov
das
mov
out
xchg
push
sub
mov
das
pop
pop
mov
shrb
and
xlat
pop
daa
out
out
fs
adc
out
fs
sbb
cmp
ret
out
jae
lcall
popf
rcr
cmp
push
cs
xor
pop
mov
dec
loop
sub
or
xor
dec
or
jnp
adc
jb
rcrl
lret
jnp
inc
mov
daa
xor
xchg
mov
inc
push
pop
bound
mov
cmp
inc
push
xor
sti
ljmp
mov
cmp
jg
jge
ds
cltd
insl
sbb
fdivr
int
fpatan
pop
out
push
push
or
and
push
push
std
sub
leave
push
jne
adc
lea
mov
pop
mov
adc
mov
lea
push
adc
int3
dec
mov
adc
inc
mov
xchg
rcrl
push
or
ss
repz
aaa
mov
mov
fidivl
shrb
stos
push
sti
mov
pop
lcall
int3
movb
jns
lret
aaa
test
pop
filds
sub
or
pop
mov
mov
loope
movsl
icebp
or
cmp
adc
mov
iret
dec
dec
mov
push
cmp
out
addr16
pop
daa
add
pushf
mov
push
out
nop
push
adc
push
clc
sbbl
push
popf
xor
push
lods
jne
sti
lret
sbb
into
jg
cmp
mov
add
ljmp
mov
inc
pop
dec
push
push
xchg
inc
or
cli
jne
cmp
mov
aas
mov
add
dec
mov
fs
xchg
push
test
and
ss
mov
push
jno
arpl
addr16
and
cmp
push
xchg
hlt
imul
jbe
jmp
repz
mov
in
pop
ret
aam
add
sub
mov
fsubrp
lahf
xor
add
int
and
ds
xchg
add
inc
mov
fucomip
std
xchg
rclb
mov
movsl
sti
sbb
sar
mov
scas
xor
xor
adc
push
mov
add
or
iret
sbb
lret
jno
aas
out
outsb
cmpsl
filds
out
mov
outsb
in
xchg
xor
idivl
cmp
adc
add
dec
insb
aad
add
jge
nop
inc
outsb
repz
cli
cs
and
js
jno
rcrl
or
in
jecxz
call
sub
cli
push
imul
ja
adc
xchg
fistpl
idivb
push
notl
dec
jmp
nop
shrl
fs
nop
les
mov
mov
mov
or
or
jmp
stos
lret
sarl
add
mov
push
mov
insb
je
adc
cmpsl
int3
movsb
and
dec
test
lea
iret
add
jecxz
addr16
scas
out
mov
or
jo
out
sub
cmp
filds
mov
ret
sbb
push
cli
movsl
pmaxsw
sbb
mov
jge
fdivrs
or
dec
popf
jmp
xchg
rolb
inc
ret
sub
popa
dec
or
sub
add
sub
fistpl
divl
das
mov
idivb
loopne
shl
sub
mov
mov
aam
test
mov
jae
pop
out
push
gs
les
lods
mov
push
sbb
jno
scas
pop
je
or
pop
inc
insl
adc
arpl
add
sarl
pop
je
pop
call
aas
test
fwait
cmp
aam
cmpsl
popa
hlt
sub
iret
cmpsl
daa
push
lret
mov
sarb
sub
mov
rol
xchg
push
gs
mov
push
das
add
les
push
push
pusha
aas
adc
cli
int3
xchg
jg
popf
loop
pop
sub
xor
sahf
xor
lock
mov
push
out
movsb
mov
add
stos
jp
sbb
loope
les
cmp
lock
or
push
mov
mov
rcrb
push
fnsave
ret
push
inc
mov
and
push
je
push
or
dec
xor
pop
mov
xor
repz
xchg
popf
push
lea
inc
adcl
cmp
fsubrl
sub
sub
daa
cmp
loop
js
mov
mov
jns
mov
mov
jae
call
imul
add
sub
int3
cmp
jecxz
das
daa
xor
pushf
jecxz
stos
push
push
popf
icebp
imul
push
jecxz
cli
in
xchg
mov
add
jmp
mov
les
pop
or
mov
dec
adc
pop
les
sub
lcall
shlb
es
shl
lods
sbb
push
pmulhw
stc
loop
dec
icebp
jns
add
adc
enter
push
mov
neg
dec
test
inc
cwtl
mov
sub
sub
mov
push
sub
in
mov
mov
jecxz
sbb
xor
addr16
stos
mov
test
mov
sub
pop
push
jbe
imul
push
push
cwtl
or
fldl2t
and
lahf
stc
xlat
pusha
pop
jecxz
sub
fisubs
mov
jns
movnti
mov
mov
pusha
pop
out
out
or
jno
negl
js
pop
jmp
add
repz
xor
mov
mov
push
or
inc
cltd
inc
jns
movsl
sahf
scas
pop
pop
mov
sub
jle
lock
fisubs
adc
popa
fmulp
add
jb
divl
in
arpl
xchg
push
cmp
sub
mov
scas
lcall
aaa
jp
inc
imul
mov
mov
call
pop
fsubrs
xchg
fnsave
push
adc
nop
cmpsb
repz
xor
outsl
add
xchg
xor
adc
outsb
jns
adc
ds
cmp
or
mov
adc
ret
scas
push
lock
shrl
dec
jne
icebp
mov
jbe
out
adc
or
addr16
dec
xor
out
inc
enter
test
mov
notl
push
test
jno
mov
orl
out
stos
fbstp
inc
dec
inc
into
sahf
ja
movsb
jnp
mov
inc
xchg
sbb
cmc
mov
jb
sbb
fwait
pop
pushf
cltd
push
push
dec
xchg
or
leave
out
fimull
sub
cmp
lret
inc
sbb
pop
icebp
adc
inc
fnstenv
mov
and
jecxz
shl
addl
je
mov
push
pop
leave
std
test
imul
negb
psubb
iret
adc
test
cmp
add
xor
mov
sub
push
es
movsl
addr16
or
push
jbe
lods
or
js
pop
xchg
jbe
test
pop
shrb
test
addr16
out
pop
mov
mov
lcall
fwait
in
fidivs
sahf
inc
cli
shrb
movsl
jbe
rcrl
pop
aam
lret
es
mov
add
test
out
fmull
lret
aam
and
mov
pusha
mov
sub
pop
xorl
shll
adc
or
je
sbb
mov
fldcw
xchg
add
sbb
jp
inc
ss
xchg
into
jge
stos
xchg
inc
inc
out
cwtl
icebp
cmpsl
adc
daa
ficoms
sub
jno
or
mov
les
xor
cmpsb
and
pusha
cmp
or
mov
inc
push
push
sbb
jno
add
sub
addr16
or
scas
mov
sbb
sti
push
or
inc
add
inc
insl
add
inc
jecxz
push
fcomps
add
rclb
movsb
inc
inc
mov
mov
mov
arpl
adc
insb
inc
or
dec
shlb
inc
outsb
lcall
mov
mov
rcrb
pop
dec
data16
lock
cmp
rcrb
or
and
jmp
sub
pop
sub
mov
mov
mov
leave
xchg
ljmp
xor
sub
shlb
adc
add
pop
cld
mov
insb
lods
shlb
je
sub
jge
loope
aad
cmp
bound
push
fimull
push
fistl
ljmp
push
int
inc
ret
jb
dec
or
ss
xor
testl
adcb
bound
outsl
int
sub
js
mov
movsl
notl
xchg
faddl
jecxz
es
mov
mov
jno
cli
lods
cmp
jne
into
jb
pop
sbb
push
jo
popl
gs
data16
imulb
or
insb
jo
js
flds
cmp
cmp
jmp
push
jecxz
and
fwait
or
jmp
xchg
ret
addr16
shlb
out
adc
mov
lods
call
addl
dec
mov
pop
sbb
inc
inc
rorb
inc
jno
shrl
fnclex
and
ret
or
mov
sbb
inc
out
push
dec
sbb
pop
mov
push
pop
push
loop
dec
push
lahf
ret
scas
repz
shlb
lea
mov
dec
outsl
je
in
loope
and
dec
nop
push
ret
lcall
ror
push
xchg
mov
call
push
fistl
mov
ret
mov
xor
loop
outsl
xchg
hlt
jp
push
sbb
in
xlat
idivl
mov
les
xor
mov
inc
cmovle
pop
rcl
xor
rdpmc
pcmpgtb
or
and
lcall
scas
mov
xchg
cmp
aas
sub
mov
pop
inc
push
lret
mov
xor
add
in
pusha
dec
dec
fwait
mov
aas
push
decl
repnz
fldenv
sub
lods
dec
sub
add
fadd
cs
dec
mov
sub
fimull
popf
daa
sub
inc
jmp
inc
and
push
outsb
ret
pushf
pop
mov
addr16
xchg
adc
jnp
jo
inc
test
sbb
cs
out
mov
stc
ficomps
or
jle
cmp
mov
jecxz
lds
test
cmpsb
shl
sub
enter
mov
jne
inc
loope
lock
cmp
ja
push
sub
addr16
xor
xchg
es
outsb
std
xchg
cmc
xchg
lret
sbb
fld
das
cmp
xor
push
les
lea
shlb
mov
and
push
push
add
sbb
mov
xchg
pop
test
ret
cmp
sbb
insl
shrl
mov
push
jg
mov
mov
mov
dec
test
aad
fildll
loopne
imul
or
mov
jae
inc
mov
or
sbb
das
jbe
adc
sti
sub
mov
add
pop
mov
add
cmp
dec
adc
rcrb
sarb
inc
or
iret
dec
sbb
jb
push
and
jo
push
mov
mov
push
fcompl
popf
js
and
xchg
xlat
pop
mov
push
jbe
sbb
inc
cmp
popf
mov
sub
xchg
stos
ret
imul
xor
mov
loop
xor
hlt
stos
pop
add
and
cmp
mov
mov
sbb
sbb
hlt
fxch
bnd
cmp
lret
adc
cli
mov
sub
pop
imul
cmc
je
lret
jb
sti
nop
icebp
dec
sub
fadds
mov
xor
test
fwait
notl
and
push
push
jnp
xor
test
cs
int
dec
mov
roll
mov
mov
in
add
xor
cmpsb
mov
sub
loope
pop
jns
ja
add
inc
pop
inc
imul
cmpsb
push
mov
aad
dec
sub
lahf
jle
cmp
inc
add
and
add
std
mov
test
fists
adc
stc
dec
jl
pop
and
aas
addr16
jb
inc
in
jno
data16
scas
out
loopne
seta
lds
jge
or
pop
inc
mov
xor
cmp
and
jo
mov
mov
adc
cmp
jbe
movsb
not
push
bound
out
daa
fistl
das
flds
pop
mov
nop
dec
push
adc
jb
fld
and
call
inc
outsl
ret
mov
mov
loop
lock
cmp
std
lret
pop
mov
std
fs
push
movsl
aam
les
push
push
int
push
hlt
xor
fimuls
and
xor
add
cmp
mov
xchg
addb
mov
sbb
add
add
pusha
fcmovu
jno
sbb
add
ss
les
fdivs
dec
test
dec
pop
das
dec
push
les
repz
xor
sub
push
mov
jg
inc
test
pop
sti
or
or
cmpsl
test
sbb
pop
test
ss
xchg
cmp
cmp
aaa
mov
mov
mov
aam
add
xchg
jne
ret
xorb
xlat
std
push
arpl
aas
ret
or
xor
xor
ljmp
stos
test
pusha
and
sub
cmc
icebp
icebp
pop
rcll
loope
int3
push
or
jmp
in
inc
mov
fdivrs
jo
jle
pop
inc
lods
mov
push
jne
dec
inc
adc
mov
and
mov
mov
int
push
mov
lods
inc
js
mov
and
mov
ds
pop
sub
in
push
jl
stc
push
imul
mov
movl
xlat
mov
testl
cmp
ja
or
sar
inc
gs
and
inc
stos
pop
mov
or
aas
sbb
jecxz
or
cmpsb
adc
lds
les
arpl
mov
fcoms
lahf
fcompl
je
std
fsubl
push
cmp
cli
gs
pop
ret
or
pop
out
xor
mov
or
jmp
stos
shlb
lahf
test
movsl
in
dec
dec
mov
xchg
add
sub
xor
jo
fwait
adc
jmp
in
rcll
insb
vmread
and
loop
mov
ljmp
loope
jl
dec
jae
mov
push
add
push
dec
dec
ds
lods
das
pop
shll
mov
pop
mov
jmp
cmp
mov
imul
inc
mov
mov
sub
xlat
stos
addr16
lea
scas
int3
call
pop
add
adc
fstpl
adc
inc
push
dec
mov
add
xchg
mov
push
mov
cltd
fs
jl
mov
hlt
push
fidivl
fwait
inc
dec
jmp
jge
or
dec
inc
inc
push
jmp
arpl
int
xorl
nop
push
mov
sahf
aam
ficompl
cmc
addr16
or
sub
inc
aad
inc
out
adc
cmp
xor
add
outsb
sbb
mov
dec
jae
xchg
sbb
stos
clc
test
cltd
sti
inc
or
fsts
mov
sub
dec
jmp
push
push
inc
and
rol
jns
icebp
or
add
sahf
mov
out
nop
xchg
out
daa
movsl
mov
out
ret
fisttpl
test
fsubl
imul
lods
aam
fists
push
push
sbb
mov
std
fidivrl
xor
mov
je
jae
sahf
xor
repnz
inc
aam
dec
stos
mov
mov
je
fstpt
sub
mov
mov
lds
or
xchg
enter
mov
mov
sbb
mov
xchg
adc
lock
arpl
outsl
mov
mov
push
xlat
cmp
jbe
adc
fisubl
cmp
lea
jne
xor
pop
pop
call
pop
add
mov
xor
xor
push
pop
push
aad
hlt
and
sbb
pop
fwait
incl
in
jbe
mov
clc
in
push
add
dec
sar
xchg
pop
xor
call
andl
insb
push
aaa
sbb
pop
inc
movsl
or
jl
lret
das
or
aaa
cmp
test
gs
js
push
std
add
ds
cmc
imulb
jp
pop
sahf
push
dec
sub
push
popa
xorl
mov
lock
js
dec
dec
fistps
rcll
cmp
out
cwtl
add
mov
mov
sbb
add
push
mov
mov
cmp
push
xor
adc
jne
int
aas
pop
fs
jo
fisubrl
loopne
push
test
xor
xchg
add
scas
lods
add
insl
mov
xchg
test
dec
enter
jecxz
jl
xchg
in
clc
jno
or
or
xchg
fwait
lcall
add
std
inc
adc
hlt
aad
lret
dec
xchg
xor
mov
scas
scas
orl
sub
push
mov
dec
add
mull
sbb
testb
and
cmp
push
xchg
out
mov
pushf
mov
aam
and
nop
inc
fs
jns
enter
aaa
xlat
in
jbe
lds
popf
or
mov
outsb
pop
data16
insb
jl
jnp
ja
mov
add
adc
popa
pop
repnz
pop
adc
adc
dec
add
dec
out
dec
mov
push
or
dec
or
cltd
insl
jo
pusha
fiadds
jns
adc
dec
adc
repnz
xchg
mov
xor
fs
cltd
push
push
out
jl
pop
dec
push
fldenv
dec
push
push
mov
loope
cmp
add
mov
sbb
lods
jmp
xchg
ret
dec
ss
ds
repnz
xchg
cmp
test
data16
jmp
or
lods
mov
cltd
xorb
out
lds
jp
cmp
dec
sar
push
repz
mov
in
arpl
sti
sti
fcmove
push
mov
sti
sti
imulb
mov
test
and
or
pop
enter
int3
hlt
mov
xor
in
add
ljmp
shll
or
jp
pushf
lret
push
jne
sbb
sbb
lods
rcrl
push
outsl
jbe
cmp
orl
pop
cs
out
cmp
daa
mov
test
aas
rcl
in
adc
push
and
test
mov
mov
lods
cs
movsb
daa
es
pop
imul
scas
aam
rcl
outsl
adc
test
pop
rcrb
les
jg
push
lret
xor
xchg
cmp
call
std
sub
mov
cmp
xchg
cld
sub
pop
mov
xor
stos
adc
inc
cmpsb
repnz
mov
jge
rcrb
cmpb
roll
js
jbe
cmp
lea
test
jle
xchg
addr16
sub
clc
pop
sbb
pop
flds
mov
filds
mov
fnstcw
inc
pop
sub
inc
popa
out
sti
mov
dec
mov
into
pop
rcl
dec
shlb
inc
push
jbe
pop
push
repz
lods
test
mov
mov
ljmp
jae
iret
fcom
sahf
mov
mov
lret
lret
mov
jae
mov
cmp
mov
jno
fstpt
and
adc
cs
xor
ljmp
pop
cli
cld
cli
and
int3
call
rorl
push
pop
xchg
imul
xchg
pop
les
xchg
mov
cmp
test
pop
jns
ds
mov
sub
cld
or
daa
clc
jle
pop
pop
mov
add
xchg
lods
xor
es
or
xchg
lods
push
xor
lods
pop
vmovaps
and
addr16
lods
dec
std
push
fmul
jl
aas
lret
lcall
sti
scas
aaa
sub
dec
mov
pop
pop
in
mov
dec
add
aaa
push
ret
in
dec
inc
pop
pop
rclb
mov
mov
sbb
mov
das
fidivrl
movsl
push
fistl
xor
push
cmp
push
fnstenv
lret
adc
cwtl
bound
cmp
adc
in
sub
xor
mov
and
xor
mov
push
adcl
push
les
sub
repnz
mov
aad
ja
pop
inc
sbb
aas
pop
adc
sub
pop
mov
shr
pop
outsb
ja
jno
and
jae
sub
pop
mov
cld
loope
test
mov
cmpsb
or
sbb
loop
adc
xor
lret
inc
lock
imul
cmp
orb
les
adc
add
push
sbb
xchg
pop
jg
adc
push
inc
xor
adc
cmp
loopne
es
js
sbb
xchg
les
nop
fstl
add
iret
pop
or
mov
push
pop
mov
push
jno
xor
push
sub
cltd
test
dec
push
out
and
inc
jnp
fwait
xchg
dec
mov
loop
scas
or
and
dec
fbstp
fidivrs
lods
jo
into
push
sub
pop
jns
xchg
mov
stos
outsl
xchg
and
xchg
aas
movsb
dec
lret
push
pop
sub
fwait
inc
insl
and
cld
jmp
mov
inc
xchg
bound
push
xorl
sub
rorl
dec
cmp
adc
sti
mov
out
and
push
xor
xor
mov
shll
jnp
test
mov
cmp
adc
or
nop
pop
fs
adc
mov
outsl
fisubs
add
mov
mov
shrb
ret
cmp
dec
jbe
lea
mov
cmpsb
ja
imul
push
int
mov
and
mov
or
nop
bound
lea
pop
hlt
sbbb
lods
xchg
notl
mov
scas
mov
jae
xchg
jne
cmp
or
push
imul
in
jg
pusha
pop
gs
mov
ljmp
mov
loop
jmp
in
jge
cmp
push
out
xor
gs
xchg
pop
test
pop
jns
rorb
mov
mov
lcall
idiv
add
inc
bound
cmp
stc
mov
roll
lods
and
xchg
xlat
data16
iret
pop
movsl
insl
cmp
icebp
sbb
add
cmp
xchg
xchg
jp
jp
or
or
jge
ljmp
data16
jbe
outsl
xchg
dec
mov
jne
xor
jecxz
lret
fcoml
sbb
mov
sub
inc
add
shll
mov
in
andps
pop
sbb
sub
mov
dec
dec
fidivs
inc
xchg
push
or
or
movsb
scas
mov
inc
out
xor
lods
fsub
adc
stos
inc
in
arpl
shlb
sti
jno
xchg
pop
fidivl
sbb
pop
bound
js
pusha
or
fdivs
clc
push
imul
lahf
gs
mov
add
mov
ja
cs
pop
dec
mov
push
fs
mov
outsl
mov
mov
mov
fidivrl
stos
and
push
jne
rclb
jg
mov
mov
call
fcomp
push
popf
insl
daa
int
fimuls
pop
insb
mov
jo
push
push
or
add
mov
mov
bound
sbb
rclb
fisttps
int3
dec
sub
adc
sahf
push
mov
inc
dec
outsl
cmp
aad
lret
mov
test
mov
imul
jmp
mov
add
das
mov
out
fdivl
xor
adc
insl
leave
cmp
and
mov
adc
dec
data16
in
mov
leave
jae
lods
and
fldl
or
xchg
in
dec
jmp
cmpsb
ljmp
xchg
xlat
out
add
js
lcall
push
jns
jmp
rcr
call
out
call
sbb
testl
test
pop
xor
inc
and
gs
xchg
mov
sbb
lock
mov
sub
push
push
daa
pushf
test
lds
lds
jp
mov
mov
mov
push
adc
pop
jns
sbb
mov
hlt
add
or
pop
loopne
jmp
and
dec
dec
mov
pop
jecxz
clc
lods
inc
adc
repz
push
push
pop
push
xor
mov
xchg
mov
in
pop
jne
cld
mov
cmp
arpl
and
mov
mov
pause
sti
pop
mov
pop
mov
repnz
push
cmp
pop
fstp
push
adc
inc
lock
les
and
adc
cli
xor
pop
out
lods
jl
jmp
testl
lods
pop
xchg
lds
test
lods
mov
mov
jbe
shl
xchg
sub
pop
ljmp
icebp
ss
dec
xlat
ror
ret
mov
shr
cmp
push
mov
adc
adc
popa
jmp
pop
ret
adc
scas
xchg
mulb
xchg
and
loop
jg
and
popa
shll
rorl
cwtl
fnstsw
mov
pop
inc
fwait
les
push
aad
adc
xor
dec
adc
cmp
out
push
inc
cli
ds
or
sbbb
xor
adcb
add
and
shl
std
ror
adc
scas
adc
loopne
mov
inc
and
xchg
xor
add
push
sub
push
push
pop
and
call
xchg
cmp
sbb
aaa
into
cmp
fisubs
clc
jl
aaa
mov
mull
inc
fadds
lea
in
inc
inc
das
xor
inc
movsb
loop
adc
and
xchg
sbb
jnp
enter
mov
add
cmp
mov
sbb
stc
xor
sbb
jmp
outsl
test
insb
das
testl
jo
mov
pusha
push
std
adc
imul
jmp
je
adc
movsl
out
movsl
imul
sti
mov
sub
or
inc
mulb
hlt
nop
sti
inc
dec
mov
fisubl
mov
scas
fidivs
imul
adc
mov
std
or
sbb
dec
mov
cmc
jns
pop
mov
cmp
repnz
sbb
push
fwait
inc
cs
jns
addb
cmp
xchg
int
mov
mov
js
lea
cmp
pop
sahf
sahf
jae
push
outsb
pushl
jb
jnp
orl
out
shrb
cmc
jne
dec
add
lock
sub
insl
pop
mov
mov
inc
lea
js
nop
ss
mov
ret
popf
sti
stos
xor
mov
fmulp
movsb
and
fcoms
rcl
sar
outsb
je
mov
lcall
data16
or
insb
daa
hlt
xor
insl
lret
mov
add
sbb
sbb
mov
cs
xor
or
dec
adc
ds
add
add
jbe
ds
bnd
inc
bound
mov
fstpt
mov
stos
jl
mov
inc
cld
mov
add
mov
test
and
push
pushf
and
das
xchg
sbb
xchg
fstps
and
push
inc
cmp
in
push
push
adc
test
scas
fsubrp
sbb
xchg
lcall
cwtl
insb
push
test
adc
pop
push
inc
movsl
iret
add
push
mov
fisttpll
push
pop
insl
mov
inc
mov
mov
popa
sub
in
mulb
cmpsb
sub
sbb
push
jecxz
push
pop
jno
aas
je
testb
or
dec
or
repz
in
dec
sub
faddp
jnp
leave
mov
inc
ret
cmpsl
cmp
test
subl
leave
push
cs
shl
add
or
lods
xchg
or
pop
jg
dec
leave
cmp
sub
cli
enter
jp
outsb
mov
push
mov
jmp
jle
aam
mov
push
lcall
cmpsb
pusha
shr
cmp
out
sahf
inc
sahf
test
fst
std
test
xorl
sub
dec
popf
ret
push
cmpsb
xchg
jbe
mov
test
pop
inc
std
pop
dec
jle
mov
and
dec
scas
das
aas
sbb
dec
lea
mov
fsts
xor
mov
rorb
mov
add
aad
dec
cmp
adc
push
sub
push
icebp
lahf
ljmp
int3
cld
fneni(8087
xor
pop
xor
xchg
fcomps
test
scas
fwait
pop
aas
stos
sub
clc
icebp
pop
int3
insl
stc
inc
xchg
orb
shrl
sub
xor
adc
rorb
jmp
mov
shll
ja
and
adc
adcb
and
xorb
xchg
repz
cltd
inc
and
enter
mov
outsb
xorb
push
lock
icebp
adc
adc
cmpsb
inc
ljmp
cmpsl
mov
pop
lret
cmp
ja
shl
test
cmc
bound
sub
adcb
aas
mov
pop
or
arpl
movsl
or
push
adc
xor
add
jns
popl
shll
lret
mov
aad
aaa
jns
adc
xchg
cmp
dec
loop
xor
rolb
adc
test
xor
out
or
and
outsl
mov
pushf
arpl
inc
cmpl
mov
jl
je
scas
insl
fmulp
dec
or
adc
fsubrs
add
adc
inc
data16
add
lcall
mov
sbb
int
or
iret
xor
jle
movsl
out
mov
mov
cmp
jecxz
fldl2e
sbb
or
xchg
add
aad
mov
xchg
sbb
fucomp
popa
aaa
fidivl
pop
pop
mov
ret
loope
es
add
adc
shll
in
pop
xlat
sbb
mov
or
das
inc
js
dec
nop
and
aaa
into
sub
or
jle
jbe
and
icebp
pop
add
sahf
cmpsl
cmpsl
out
xchg
sti
xchg
out
mov
lret
aaa
loopne
imul
jo
push
cwtl
rcl
mov
pusha
pop
dec
mov
das
cmp
cli
sbb
push
ljmp
cmp
jp
rorb
cmp
arpl
les
and
mov
pop
in
test
inc
test
sti
cmp
jg
xlat
out
add
xor
inc
pop
adc
ja
mov
scas
jle
into
ljmp
dec
or
leave
sbb
cmpsl
jnp
ret
push
call
mov
mov
adc
adc
or
gs
cmp
jb
rcr
bound
mov
cmp
imul
cwtl
dec
mov
mov
or
aam
mov
stos
xchg
add
es
cmpsb
sub
movsl
mov
inc
ja
xor
jbe
jae
call
jmp
fcom
cmpsl
leave
fists
jl
pusha
aas
pop
or
add
cmp
repz
adc
xor
jae
jl
dec
les
lods
adc
ss
mov
leave
dec
jns
pop
shrl
inc
shll
and
sahf
bound
pop
jno
out
std
repnz
bound
ja
mov
xlat
icebp
and
adc
cmpl
xchg
loope
clc
sub
fisubl
push
mov
jecxz
loopne
js
push
push
cmp
push
cmp
dec
int3
jle
int3
xor
xchg
pop
fisubl
sub
sub
xor
fsubs
mov
or
pop
mov
loopne
or
pop
and
cmpl
adc
repz
cwtl
push
sbbl
xchg
imul
mov
push
aam
mov
leave
into
in
sbb
push
shrl
push
and
push
std
sahf
std
es
lret
inc
xor
loope
imul
inc
jae
or
movl
sar
pop
push
mov
mov
jae
mov
or
sahf
or
inc
pop
lods
pop
loop
push
mov
and
stc
adc
test
movsl
jge
add
fs
shrb
pmaxub
ficoms
hlt
sub
jne
xchg
adc
das
shlb
inc
mov
repnz
xor
cmp
or
mov
xor
out
xchg
out
xor
ljmp
inc
cmc
pop
loopne
sbbl
cmpb
dec
ret
adc
pop
repz
push
cmpl
out
dec
pop
ficompl
adc
aas
mov
out
adc
xchg
mov
xor
adc
dec
xchg
or
sti
and
inc
mov
in
push
movsb
out
das
mov
cmp
cmp
test
adc
repnz
out
divl
lods
arpl
cmc
test
or
lods
insl
pop
mov
mov
fstpl
push
jno
in
loope
std
mov
orps
hlt
jno
pop
addb
sahf
push
jb
cltd
inc
mov
cmp
mov
jnp
js
sbb
xor
pop
mov
cmpsb
jle
cmpsl
push
cmc
outsl
in
xor
mov
lret
add
dec
fdivl
and
dec
cmc
fstpl
mov
mov
test
xlat
jo
gs
mov
sub
jae
and
pop
insb
mov
ja
ret
scas
andl
das
adcl
push
jno
clc
repz
lods
mov
cwtl
and
loope
out
testl
xorl
mov
push
mull
imul
flds
dec
shll
cs
jl
test
cmp
mov
stos
shrl
insb
sub
mov
push
cmp
xor
pop
xchg
push
mov
mov
push
ja
stos
dec
out
popa
scas
sbb
imul
pop
popf
adc
xor
ret
mov
xor
test
push
adc
test
pop
jecxz
insb
movsb
fisttpll
loopne
lods
inc
jmp
inc
dec
and
fadds
mov
out
jecxz
xor
call
xchg
repnz
stc
imul
sub
dec
sti
dec
mov
fisubs
into
jb
sti
xor
mov
jno
cmp
push
movsb
and
mov
adc
fwait
lds
notl
xchg
sub
cmc
adc
sti
pop
jnp
sbb
mov
jge
cmpsb
push
pop
test
scas
xchg
or
lock
pop
adc
scas
imul
jp
js
mov
sub
xor
pop
xlat
mov
mov
mov
push
jp
cmc
jno
push
stc
cwtl
lods
bound
and
add
xchg
sbb
insl
pop
pop
mov
pop
lods
xchg
mov
ficomps
or
in
pop
push
rol
xchg
addr16
dec
iret
pop
xchg
outsl
xor
ja,pt
cli
add
mov
xchg
mov
subb
add
push
xchg
lret
ss
adc
inc
fldcw
mov
loopne
xor
les
jl
cmpsb
xor
jnp
sti
and
cltd
out
les
and
dec
cmp
xchg
repz
shrl
movl
mov
pop
lea
inc
sub
push
aam
shrd
push
lret
jae
xor
fcomps
popf
fsubrs
jle
mov
add
dec
add
mov
mov
jne
lods
notb
pop
mov
clc
jmp
pop
pop
aad
lahf
fadd
pop
test
sub
inc
jnp
aaa
insl
sarb
ror
xchg
xchg
scas
jo
dec
outsl
push
fdivl
adc
push
sbb
clc
pop
sbbb
and
dec
sub
stc
mov
cmp
int3
ljmp
inc
adc
in
loopne
into
imul
dec
out
daa
cmc
pop
repnz
out
test
mov
or
and
pusha
lcall
xchg
mov
cmp
adc
xchg
mov
insl
inc
lahf
push
pop
rcr
and
and
imul
and
lret
repnz
cmpb
mov
loope
imul
aam
divl
jno
js
pop
cld
outsl
mov
jns
xchg
pop
sub
pushf
dec
sete
adc
movsb
sub
test
push
cmpsb
push
scas
push
lret
popf
mov
loope
enter
mov
fs
dec
push
xchg
xor
pop
roll
cmp
and
cmp
mov
sbb
sbb
outsl
sub
mov
or
pop
or
mov
bnd
rcll
int3
xor
mov
popa
mov
cwtl
mov
dec
in
aas
add
orl
dec
inc
mov
fcoml
sub
xchg
ljmp
push
pop
aad
popa
cmp
test
nop
enter
mov
fs
mov
xchg
popl
mov
mov
pop
jbe
or
cmpsl
repz
add
dec
lds
cmp
xchg
lahf
mov
jp
les
mov
iret
sbb
lods
mov
and
loop
adc
test
pop
out
pop
daa
lods
jmp
jnp
dec
xchg
lods
lea
fcomps
mov
cld
in
jae
cld
sub
iret
into
fidivrl
rol
fsubr
aaa
push
mov
mov
loop
stc
aad
mov
in
xlat
xchg
mov
sbb
mov
cmp
lret
dec
mov
sub
push
call
xor
mov
and
in
leave
shll
dec
jle
scas
sar
mov
sbb
push
adc
cmpsl
xor
lds
icebp
popa
loopne
pop
cmp
xor
test
arpl
ds
cli
and
aaa
in
push
das
in
test
fsubr
in
pushf
jo
adc
pop
and
hlt
push
add
ljmp
mov
sbb
fldl
lret
adc
push
cltd
mov
fldt
lahf
xchg
cwtl
setne
mov
add
mov
cltd
pop
repz
mov
or
dec
and
dec
paddusb
mov
add
andw
mov
test
shl
fwait
roll
sub
loope
adc
xchg
and
pop
icebp
imul
mov
movsb
lret
les
sub
push
adc
pop
sub
das
mov
test
push
jge
std
nop
sub
cli
mov
xchg
nop
or
imul
arpl
rclb
or
and
shlb
and
out
pop
or
inc
mov
add
sub
push
xor
aad
mov
sub
pop
mov
cltd
repnz
in
ffree
adc
push
xor
cmpsl
push
fstpt
das
mov
inc
loopne
hlt
sarl
adc
rcr
mov
sahf
insb
subb
mov
adc
dec
mov
pop
cltd
and
adc
mov
inc
stc
cmpsl
out
pop
mov
xor
xor
inc
sbb
mov
inc
into
push
fld
test
fs
stos
fmuls
imul
lods
test
push
stos
popa
jne
insb
jae
mov
dec
add
lahf
cmp
test
fwait
mov
push
jl
push
std
push
lds
or
push
es
jns
ret
mov
hlt
lret
daa
sbb
push
popa
and
and
out
mov
jb
leave
adc
add
iret
mov
jo
push
push
fldenv
and
ja
mov
jb
adc
lds
outsl
dec
pop
jecxz
jnp
fs
stos
test
sub
cmp
ljmp
push
outsl
jg
mov
xchg
or
loope
ss
scas
outsb
ror
jg
lahf
push
mov
out
adc
jno
xor
lret
ror
mov
pusha
fsubl
lea
dec
add
cmpsb
pusha
je
jns
ret
adc
es
or
push
fwait
imul
arpl
push
sti
sub
mov
xor
jbe
pusha
cmpsl
mov
mov
sub
sbb
xchg
sbb
cmc
ds
gs
cwtl
icebp
dec
add
inc
sarb
lds
repnz
lock
dec
addr16
push
mov
out
dec
mov
repnz
adc
stc
jns
xchg
pop
jl
pushf
or
fcomip
xchg
inc
mov
in
arpl
cs
mov
and
dec
insl
clc
xchg
imul
ret
fstps
mov
sbb
dec
mov
aaa
scas
and
jo
push
das
outsb
cld
out
sub
negl
outsl
jbe
stc
ds
xor
jno
inc
pop
sbb
outsb
sbb
sub
mov
or
mov
xor
sub
push
sub
sbb
jle
outsl
xchg
push
mov
sbb
into
sub
or
sub
and
outsb
adc
addl
test
jo
jle
sbb
roll
jno
bound
popa
test
dec
add
lea
cli
cmpsl
cmp
dec
pop
rclb
mov
and
adc
inc
jno
sbb
pop
push
jno,pn
push
fxch
into
enter
scas
sub
lea
cmpsl
je
pop
adc
jp
addb
fistpl
xor
aas
xchg
das
call
iret
dec
inc
mov
pop
mov
xchg
loopne
xor
or
and
mov
inc
neg
stos
mov
in
ljmp
pextrw
mov
dec
mov
mov
mov
mov
or
ret
sbbl
ror
sti
or
aas
mov
xor
xor
mov
xor
push
lret
ret
and
xchg
pop
aaa
pop
sbb
ds
dec
das
push
xchg
xchg
adc
mov
outsl
jbe
daa
pop
mov
sub
call
das
out
sbb
scas
inc
xlat
add
sbb
mov
pusha
popa
fwait
jecxz
and
mov
mov
lret
mov
mov
sbb
mov
les
add
leave
push
or
sub
inc
pop
out
addr16
or
or
enter
lcall
xor
fdivrs
xlat
repz
fstpt
or
std
dec
test
aam
xor
rclb
sbb
pop
and
enter
lds
mov
mov
loopne
mov
shr
push
clc
jge
lods
jb
inc
scas
add
data16
jns
cwtl
xchg
jp
arpl
xor
mov
mov
jns
cmc
outsl
or
stos
adcl
adc
lea
shll
jle
mov
jmp
mov
mov
scas
dec
ja
stos
mov
ud2
lcall
push
mov
mov
es
icebp
stc
inc
adcl
mov
or
mov
frstor
inc
cmp
mov
repz
adc
iret
dec
add
or
xor
or
xchg
jae
jo
jg
push
mov
loope
inc
add
xchg
push
mov
push
nop
mov
mov
dec
jg
mov
test
cmc
jecxz
sbb
sub
push
lret
pop
pmullw
dec
or
ja
ss
out
mov
stos
addb
scas
dec
cmp
insb
lret
add
lods
movups
sbb
jno
stos
sub
sti
xchg
mov
and
js
stc
xorb
jae
push
scas
inc
mov
xor
push
sbb
pop
mov
xchg
push
mov
inc
lods
jmp
or
and
mov
cmp
push
sub
dec
lods
dec
mov
mov
mov
out
xlat
mov
out
and
inc
rolb
push
cmp
movsl
mov
mov
add
test
or
rclb
lods
enter
jle
cmp
rolb
cwtl
cltd
arpl
lcall
push
in
adcl
add
hlt
fldt
sub
sub
mov
in
js
aad
xchg
push
lea
popf
subl
pop
scas
xchg
dec
or
pop
xor
push
xchg
add
aas
mov
ret
jns
arpl
scas
ret
ja
fcomps
jl
nop
std
bound
nop
ds
movsb
hlt
leave
add
pop
push
lds
jg
mov
addr16
addr16
outsb
les
std
fiaddl
rcl
nop
call
test
incb
movsl
pop
orb
mov
lea
sti
iret
or
adc
sbb
rorl
adc
imul
inc
mov
and
in
lcall
cld
xor
fwait
fwait
pusha
adc
xor
call
test
arpl
and
js
adc
cmp
adc
stc
shrl
aad
divl
cmpsl
in
mov
xor
ljmp
lahf
fcomp
push
cs
sub
test
emms
pop
mov
mov
push
pop
xor
jmp
test
lcall
sbb
dec
mov
ficoms
xor
mov
int
mov
adc
dec
jp
inc
add
jne
sub
arpl
divl
or
mov
ja
xchg
push
jns
repnz
lods
int
int
pop
shr
nop
fimull
jns
mov
push
filds
fcompl
notb
mov
negl
lret
insl
es
fwait
mov
mov
imul
add
and
cmp
add
adc
jnp
jl
sub
ja
out
mov
pop
inc
dec
test
out
sti
mov
xor
xchg
or
es
xor
aaa
aam
xchg
mov
sbb
cwtl
jl
test
les
subb
push
leave
aad
mov
xor
mov
stc
lahf
lret
dec
sub
adc
addr16
test
xchg
das
fstps
xor
xor
in
test
pop
subb
into
dec
mov
jp
cltd
push
enter
test
out
mov
sarb
push
xorb
movsl
cli
adc
sub
out
leave
negb
xchg
pop
adc
lcall
pushw
xor
mov
or
sub
rorb
fcomps
out
xchg
and
xlat
mov
pop
cmpw
cmp
lock
jg
push
jmp
sbb
inc
xchg
mov
out
call
jmp
xchg
add
add
pop
dec
or
shlb
sub
jge
in
ret
ljmp
std
xchg
mov
xor
ljmp
xor
xor
into
pop
or
ja
js
and
fwait
mov
cs
int
adc
sbb
mov
cld
xor
pop
aad
xor
fwait
cltd
xchg
jecxz
cld
scas
pop
push
loopne
out
push
sti
mov
and
push
xchg
hlt
add
adc
lahf
sahf
ss
ss
shrl
xor
outsl
ss
popa
jmp
mov
out
xchg
sub
dec
mov
xchg
les
cmp
ja
insl
call
inc
add
dec
mov
sbb
out
inc
push
adc
mov
jns
cmp
stos
cmp
mov
into
or
sbb
mov
shlb
fistl
mov
sbb
nop
push
pop
pop
dec
rolb
cmc
andb
or
pop
cmpsl
movsb
or
enter
popf
movsb
mov
addr16
movsl
dec
sahf
fwait
nop
scas
jg
out
mov
dec
xchg
xor
arpl
mov
shll
iret
cmp
xor
pop
mov
loop
cwtl
call
adcb
mov
jae
adc
jle
sub
aad
xor
jnp
inc
lock
cmp
jno
inc
jns
mul
or
stc
jbe
mov
out
daa
push
xor
das
pusha
in
arpl
incb
arpl
and
cmp
fwait
lock
xchg
mov
jecxz
sub
adc
jg
imul
jecxz
int3
ss
inc
cmp
sub
pop
xor
mov
and
or
xor
sub
or
ret
pop
jg
in
scas
jecxz
mov
lock
add
scas
push
xor
mov
sti
pop
cmp
fwait
adc
nop
and
xchg
cmpsl
cmpsb
or
adc
rol
lcall
fsubl
xor
mov
shl
popa
stc
roll
insb
cmp
outsl
xchg
mov
bound
jns
push
add
pushf
negl
adc
mov
sbb
and
andl
dec
fildl
clc
shl
or
out
jbe
xchg
rol
sbbl
push
inc
inc
push
pop
out
nop
dec
scas
inc
mov
jmp
sub
in
jne
shll
pop
lcall
fs
cmp
and
xchg
or
dec
xchg
iret
jg
test
jg
loopne
add
and
sub
inc
xchg
xchg
sbb
clc
scas
mull
cmpsl
mov
es
hlt
popf
fisubl
lea
mov
push
mov
rcr
int3
jns
fmul
xor
out
push
movsb
jno
in
hlt
push
xchg
mov
cmpsb
fstpt
mov
fimull
mov
and
dec
ja
enter
addr16
js
clc
sbb
jecxz
insb
or
jmp
inc
add
dec
jbe
cmp
leave
arpl
add
repz
mov
cs
pop
mov
aad
cmpsl
into
call
mov
ret
jae
add
ss
xchg
sbb
cmp
xchg
jl
or
adc
sbb
jno
sbb
orb
test
pushf
mov
sub
inc
cmp
and
divb
jns
fistl
loope
sbb
fcmovbe
push
in
add
pushl
popf
push
sub
mov
scas
sub
pushf
and
movsl
pop
movsb
push
or
lock
outsl
mov
inc
loope
adc
cld
mov
lcall
push
xor
mov
repnz
sub
insb
mov
enter
xor
or
insb
or
inc
adc
add
andb
cmpsb
lods
sarl
dec
pop
mov
jmp
xchg
sub
dec
sub
add
push
jmp
xchg
lock
and
out
test
pop
adcl
rol
sub
sub
sbb
call
and
in
mov
dec
ja
and
stc
inc
mov
fisubl
dec
clc
push
mov
xchg
fistpll
cmp
orb
pop
popf
cmp
js
push
adc
xor
in
xchg
icebp
inc
xchg
pop
test
imul
popa
pop
push
cld
xor
test
cltd
lea
push
mov
aas
mov
pop
mov
push
pop
push
sbb
lcall
and
shrb
in
clc
enter
push
adcl
xchg
cli
jge
cli
outsb
jns
sbb
push
jo
and
and
cmc
add
xchg
jmp
iret
mov
sbb
dec
js
sbb
inc
jns
mov
decb
xor
lcall
xor
lret
cli
hlt
pusha
lea
je
test
inc
pop
lahf
into
test
pop
inc
sbb
shrl
dec
sbb
aam
mov
repnz
xor
push
xlat
pop
xchg
jle
push
ja
pop
push
inc
addr16
sub
mov
fsubr
push
in
or
push
mov
cld
insl
jo
dec
or
out
out
in
cwtl
jg
cmc
sahf
les
mov
mov
cmp
fcoml
orb
add
sub
das
and
mov
icebp
add
cmp
jns
rcrl
jno
mov
out
mov
mov
imul
shlb
imul
and
insl
jns
call
jne
js
mov
test
pushf
fsub
inc
lods
ja
out
sbb
cmpsl
pop
or
xor
push
idivl
cli
push
pop
out
les
mov
mov
xchg
mov
stos
mov
and
dec
int3
pop
dec
in
mov
cld
in
movsl
and
lcall
dec
add
or
out
std
sub
movsb
into
aas
pop
aam
mov
mov
mull
jb
jl
insl
mov
dec
inc
push
push
out
aad
mov
aad
jne
lret
rolb
and
adc
bound
bound
insb
mov
mov
mov
pushf
push
cmp
jge
cmc
loop
pusha
pop
and
cwtl
jns
pop
insl
inc
lock
dec
jp
xchg
cmpsl
repnz
jecxz
push
dec
xchg
pop
repnz
nop
xchg
aam
stos
sbb
scas
scas
movsb
stos
or
mov
sahf
sbb
mov
mov
addr16
push
outsl
clc
push
adc
cmovae
testl
aam
xor
add
sbb
xor
jbe
bound
std
outsb
push
sbb
sbb
mov
aaa
cmpsl
rorb
push
js
sub
aas
ljmp
and
cld
xor
loop
or
cmpsb
stc
pop
mov
jmp
dec
popa
mov
push
mov
mov
dec
inc
fiaddl
push
or
les
aam
dec
cmpsl
inc
fldcw
es
xor
ja
add
or
jge
sbb
xor
adc
adc
inc
das
inc
xor
sub
int3
mov
sub
mov
lret
jnp
mov
stc
ds
orl
xchg
push
mov
clc
das
aam
dec
xor
dec
fldcw
cwtl
xchg
mov
in
cmp
dec
dec
arpl
pop
push
es
out
pop
push
xchg
sbb
pop
fs
adc
in
sub
push
mov
ret
mov
and
mov
js
xchg
sbb
and
or
add
or
rclb
ss
hlt
or
ret
or
cli
pop
xlat
repz
inc
in
mov
sbb
add
mov
int
sub
inc
mov
leave
mov
jg
hlt
mov
jnp
lock
js
lods
jno
sbb
push
dec
lds
lret
fsubrl
aam
popf
pop
fdivrs
cmpsl
pop
je
jp
fsubl
cmp
sbb
mulb
sti
xor
imul
mov
sub
mov
mov
aad
cli
mov
aam
push
xchg
jmp
test
pop
adc
cmp
icebp
icebp
enter
fwait
pusha
test
jecxz
push
inc
and
cwtl
scas
push
shrl
pop
push
sub
push
js
cmpsb
and
jmp
xor
jns
jle
jmp
xchg
jge
dec
jg
loope
test
lock
pop
ret
sub
sub
cmpsb
jle
repz
xchg
sbb
inc
and
or
fimull
lods
xlat
andl
mov
js
pop
ret
xor
pop
and
iret
adc
inc
mov
adc
leave
xor
jmp
push
cmp
add
inc
into
jno
xchg
mov
mov
or
xlat
xor
cld
mov
inc
sbb
fisttps
in
pop
pop
ret
cli
dec
shrd
xlat
pop
stc
or
stc
repnz
sbbl
jg
lret
xchg
xor
imul
ret
xor
inc
xor
sub
push
or
jge
jb
mov
movsb
lods
sahf
ds
xchg
or
cmpb
lret
push
repz
aaa
mov
out
cli
mov
cs
stc
imul
inc
sbb
add
pop
inc
idiv
cmpsl
addl
arpl
mov
and
sub
xchg
jp
test
repz
insl
js
repnz
push
inc
stos
sbb
je
xor
insb
imul
lods
mov
fsubl
ja
adc
fsubr
and
add
push
xchg
and
rcll
cmpsb
fmul
addr16
popa
add
ret
sbb
sbb
in
add
repz
adc
sub
push
mov
inc
jmp
je
inc
sbb
shrb
aam
lcall
xor
jbe
and
xchg
lock
add
pop
sub
fcoml
jp
testb
inc
cmp
push
aam
jp
push
std
pop
lret
add
pop
outsb
lcall
adc
adc
push
test
mov
lahf
std
adc
adc
inc
movsl
bound
xchg
mov
int
sbb
jmp
loop
sub
pop
xlat
es
pop
shlb
iret
xchg
and
popa
out
pushf
popa
stos
adc
mov
jmp
pop
jb
or
push
pop
add
cmp
pop
pusha
cmp
repnz
repz
dec
cld
das
sub
mov
and
repnz
lret
test
cwtl
outsb
inc
inc
sub
lahf
or
add
adc
rolb
out
test
fadd
pop
call
cmp
sbb
jle
lods
mov
jl
lret
ja
mov
pop
xchg
adc
add
or
add
xorl
in
stc
jns
paddsb
add
mov
sbb
add
sbb
js
sub
xor
fstpt
mov
imul
lahf
ljmp
sub
or
pop
push
into
ret
pusha
int3
lods
in
cmp
shrl
out
outsb
divl
jb
xchg
mov
aam
dec
xchg
mov
into
add
xchg
test
popa
gs
mov
ljmp
pop
pushf
fwait
mov
lcall
lds
cmp
stos
dec
stc
pop
xlat
jecxz
cs
movsb
subb
fld
cmpsl
roll
pop
xor
sub
push
idivl
push
push
leave
and
inc
sub
cmpsb
sbb
sti
dec
popa
cmp
lock
xchg
lods
cmp
dec
lock
out
stos
mov
pop
inc
aam
jne
add
and
fstl
or
inc
inc
ret
das
andl
and
icebp
sarl
data16
xor
in
mov
xchg
adc
rcrl
sbb
popa
adc
jns
add
mov
mull
xchg
mov
xchg
insb
mov
push
mov
cmp
flds
jmp
sarb
aaa
adc
pop
test
lock
mov
ret
or
adc
fisttps
insl
scas
adc
xor
outsl
test
push
movsl
icebp
mov
mov
cmpsb
xchg
shr
xchg
je
lcall
jb
add
rorb
inc
xchg
je
lock
lods
mov
lds
test
icebp
ljmp
inc
arpl
fs
mov
and
scas
cmp
push
clc
jecxz
ret
rcl
ljmp
movb
add
lahf
nop
and
cmp
testl
andb
inc
pop
test
pop
rcr
mov
int
mov
pop
mov
push
test
sub
xor
jle
fdivrl
push
out
add
repz
in
sbb
mov
cmp
lock
jo
cmp
sbb
xor
movl
lret
in
stos
repnz
add
jg
test
jl
adc
push
pop
adc
aam
dec
xchg
add
cmp
icebp
push
and
in
sub
sahf
or
dec
hlt
jg
ret
sti
addr16
dec
mov
insb
mov
pop
inc
pop
dec
push
adc
pop
outsb
cmp
mov
inc
sub
test
arpl
and
ja
clc
in
iret
adc
fdivp
or
neg
or
mov
stos
mov
int3
jg
lcall
push
xor
adc
lods
and
inc
enter
adc
call
js
ret
mov
sub
rclb
and
cmpsl
loope
les
xor
push
adc
in
fnstsw
aad
mov
ja
mov
jl
adc
inc
cwtl
jl
pop
iret
movsl
xchg
xlat
add
xchg
dec
lock
or
cmp
xchg
in
sub
fucomp
mov
out
addb
test
fsubs
pop
xchg
lock
xor
sbb
icebp
in
pop
lret
dec
xor
lds
loope
cmp
dec
movsb
pop
cmp
mov
mov
dec
rorl
jbe
cs
mov
adc
subl
mov
push
scas
ret
sbb
mov
mov
jle
std
enter
loopne
or
cmpsl
loope
mov
out
cmp
pop
das
or
and
into
jb
push
jp
rorb
add
aad
sub
push
push
scas
ss
xor
fnsave
sahf
sub
add
sbb
test
lahf
lahf
pop
xchg
sti
scas
and
mov
lret
mov
push
popa
shlb
pop
mov
imul
int
dec
sub
inc
adc
jle
movsb
in
mulb
imul
xor
mov
mov
test
xor
ret
cmpsl
es
fstpt
dec
sbb
xchg
sbb
movsb
adc
daa
into
cmp
cmp
adc
inc
add
lcall
push
lods
and
add
in
mov
in
or
popa
mov
and
adc
cmpsb
mov
jecxz
aam
pop
int
call
pop
pop
inc
mov
cmpsl
stos
lock
mov
outsb
stos
mov
pop
scas
sub
mov
pop
out
dec
push
mov
cs
xor
inc
and
test
dec
ja
sti
xchg
aas
mov
lahf
aad
loope
cmp
fbld
and
xchg
js
outsb
xchg
arpl
test
cmpsl
jmp
and
stc
cmc
mov
inc
cli
adc
add
stos
rclb
in
lret
or
push
cltd
popa
fs
lcall
pop
xlat
icebp
lods
and
out
lds
aas
adc
and
scas
adc
cli
mov
or
paddsw
cmpsb
pop
jle
cltd
int3
test
pop
jecxz
add
shll
push
sbb
sarl
cld
cmpsl
sub
into
fisttpll
pop
mov
adc
push
lods
cwtl
add
xchg
hlt
sti
xchg
jl
and
movups
cmpsb
jne
inc
add
stos
xor
dec
in
aad
jl
pop
fimull
sub
jecxz
movsl
jl
stos
jle
ds
jp
cmp
loop
pop
pop
add
loope
movl
mov
mov
dec
gs
or
xchg
or
stc
pop
push
add
pop
loope
ror
xor
in
pop
test
or
popa
inc
dec
add
jl
xor
inc
test
pop
sbb
movsl
inc
xchg
push
and
addr16
cmc
ja
jge
mov
mov
fwait
add
cmpsl
jae
fiaddl
stos
and
sub
test
stos
stos
xor
xchg
pusha
adc
mov
iret
std
push
pop
mov
adcl
sub
add
dec
or
push
sbb
sub
imul
xchg
ret
ficomps
xchg
lods
insb
pop
dec
lods
sbb
sti
adc
pop
leave
cmp
push
test
addr16
push
inc
mov
cmp
cltd
mov
movsl
sbb
in
cmp
jmp
mov
or
insb
inc
jns
push
push
ss
sarl
int3
xchg
mov
incb
mov
cld
pop
lret
jnp
outsl
sti
lea
xor
sub
xchg
repnz
pop
inc
add
mov
mov
push
dec
cmp
mov
cltd
es
inc
push
insl
jmp
xor
out
sub
lods
mov
ficompl
mov
scas
cmp
cmp
or
xchg
pop
fcoms
or
jp
or
aad
mov
and
mov
xor
push
lock
pop
in
push
jb
jle
arpl
dec
cmp
aad
outsl
xchg
fsubrp
xchg
negb
xor
cmpsl
inc
fisubrl
push
in
std
cld
mov
fs
sub
popa
inc
mov
inc
inc
mov
mov
movsb
test
in
pop
mov
push
add
pop
loop
and
or
jbe
leave
xor
iret
gs
mov
mov
cmc
fnsave
push
jmp
jle
mov
mov
aad
inc
or
mov
callw
sub
mov
sbb
outsb
sbb
in
hlt
ret
bound
out
rcl
pop
outsl
dec
stc
jo
rorb
insl
add
sbb
stos
xor
divl
mov
mov
or
dec
imul
mov
repnz
dec
dec
addl
pop
xor
je
inc
in
mov
mov
xchg
gs
pop
test
lods
ficoms
mov
pop
push
inc
clc
repz
sbb
mov
mov
and
mov
xchg
inc
ror
add
dec
cmp
subb
sbb
pop
jns
cmp
mov
shll
mov
xchg
into
out
push
jb
outsb
shlb
ss
lods
leave
repnz
mov
rcr
jae
sub
mov
jbe
mov
idivb
sbb
cmp
cs
cmpl
jle
dec
and
outsl
mov
and
inc
shrl
adc
fdivs
stos
cmp
inc
jecxz
mov
mov
or
arpl
mov
mov
ds
push
xchg
xor
jp
sub
aam
push
dec
leave
and
xchg
sbb
xor
cli
ss
push
mov
xorl
shrb
jns
inc
loopne
dec
std
fs
pop
adc
mov
es
pop
dec
sbb
sub
int
in
cli
dec
loope
xchg
popf
push
mov
xor
dec
add
xor
aam
cmp
pop
cwtl
jp
test
das
aas
and
lea
icebp
sub
je
aas
fistpl
push
enter
xlat
pop
cmp
push
dec
adc
mov
aad
jnp
loope
and
inc
sbb
int
aas
add
sbb
pop
push
and
add
jns
js
mov
cltd
shlb
xor
push
in
sarb
xchg
add
mov
es
pop
cmp
sub
arpl
mov
repz
cs
mov
insb
jge
aas
gs
adc
in
lea
imul
negl
jle
sub
inc
fs
push
insl
adc
or
aaa
pop
ljmp
xchg
xor
jp
gs
scas
lods
aam
fdiv
push
adc
xlat
scas
push
fs
xchg
push
or
pop
xor
inc
add
enter
and
les
sbb
fists
mov
loopne
je
test
jnp
jle
subb
ficompl
xor
sbb
inc
adc
scas
inc
jbe
ss
adc
jae
repz
fmulp
jle
frstor
pop
mov
push
push
jecxz
mov
inc
mov
cmp
sub
cld
xchg
leave
mov
stos
imul
lret
inc
pop
ret
and
or
test
or
imul
repnz
mov
pop
scas
inc
push
push
inc
fldt
mov
lcall
dec
out
pop
pop
and
mov
lea
mov
dec
mov
pusha
ret
pop
mov
xor
and
xor
xchg
insl
out
mov
movsb
xchg
incb
add
movsl
mov
jns
mov
mov
or
iret
adc
push
outsl
bound
fistpll
cmpsb
insl
repz
rorl
clc
wrmsr
and
ret
sbb
mov
cmp
arpl
jmp
push
dec
jmp
or
sbb
jge
out
popa
cmc
in
push
incl
mov
dec
dec
push
jecxz
test
aam
repnz
cmp
push
fimull
sub
icebp
mov
push
and
adc
imul
adc
xor
addr16
cmp
out
sub
and
push
cwtl
or
add
sbb
imul
popl
iret
dec
cmp
rol
xlat
mov
sub
and
das
sti
inc
pushf
jne
outsl
cmp
jge
cmpsb
ret
cmp
out
pop
mov
pop
and
jmp
adc
out
push
hlt
jno
adc
pop
add
nop
dec
push
add
and
xor
hlt
cmp
jno
cli
and
lock
iret
movsl
fs
jb
jle
movsl
int3
aam
xor
in
into
loope
repnz
mov
jp
nop
mov
stos
fisttps
imul
std
mov
pop
mov
fldcw
mov
nop
jecxz
xor
lds
xchg
cmp
mov
xor
fiadds
outsb
dec
jmp
xchg
movsb
mov
popf
aam
jb
mov
fwait
std
test
sub
gs
xchg
faddl
sahf
xchg
cli
in
aad
ja
mov
sub
in
out
sub
sbb
jp
ljmp
xor
inc
ret
ljmp
movsb
add
cld
hlt
jno
mov
arpl
aad
xchg
jns
mov
xchg
adc
rcll
xor
fimull
fsubl
xchg
sub
stc
int3
push
adc
pop
adc
adc
cltd
lret
pushf
inc
in
add
enter
xor
jmp
add
sbb
mov
popf
dec
or
jle
aad
sbb
lret
lret
xlat
adc
cmp
mov
and
lds
jae
xorl
lods
aam
adc
nop
aaa
xchg
xlat
outsb
xor
out
out
fsts
mov
addl
popf
mov
sub
sarb
mov
fdivr
out
adc
lahf
cltd
dec
orb
mov
test
add
divl
and
int
mov
xchg
xor
scas
jge
dec
cmp
out
loope
addr16
sahf
cmpsl
gs
cmc
pushf
aad
scas
dec
scas
push
lret
movsl
adc
movb
cmp
es
xchg
xor
xor
dec
pop
lock
xchg
jae
mov
lods
mov
dec
cltd
xchg
mov
ss
aam
dec
aaa
outsl
les
sub
xor
pop
adc
call
fwait
inc
out
inc
push
gs
ds
aas
rcr
sub
sbb
out
ss
mov
xorl
lods
pop
xchg
fidivs
repnz
leave
cs
data16
cmp
fisttpl
out
or
adc
xor
push
cld
roll
js,pt
ljmp
push
clc
ljmp
insl
or
aad
mov
mov
add
add
sbb
daa
push
lea
mov
inc
sbb
ja
pop
jg
pop
xor
xor
out
sbb
pop
mov
outsb
cli
movsb
add
daa
jecxz
mov
movb
icebp
iret
push
and
scas
enter
jnp
ja
lods
loopne
test
pop
sub
clc
cmp
jge
outsb
and
cli
das
dec
cmp
cwtl
jbe
pushf
dec
mov
or
testb
dec
das
jo
movsl
insl
push
shl
test
mov
es
push
ljmp
and
mov
into
loop
add
iret
or
mov
pop
sbb
xor
jns
fnsave
push
mov
lret
and
push
jae
rcll
adcb
mov
xor
sub
or
sbb
in
mov
movsb
in
cmpsl
push
data16
push
leave
out
cmpl
jmp
jnp
jg
mov
je
xor
mov
and
test
sub
xchg
sub
xor
inc
jle
mov
xor
mov
mov
sti
aad
imul
stos
mov
dec
jb
pusha
push
xor
nop
test
fisttps
imul
ja
push
or
ret
loope
jns
sub
or
mov
cltd
jns
jns
insl
in
stos
imul
test
adc
lock
pop
mov
or
aas
orb
ss
mov
pop
or
mov
adc
mov
push
and
xchg
gs
xchg
je
mov
and
pop
out
in
xor
add
mulb
or
push
pop
stos
mov
jns
jne
mov
aad
icebp
mov
xchg
int
ds
push
add
pop
and
pop
cmpsb
stc
pusha
adc
rorl
call
outsb
xchg
mov
inc
ja
or
std
lret
lret
and
mov
mov
leave
or
sbb
testb
dec
pop
jmp
jo
aaa
scas
dec
dec
mov
repz
out
sti
xlat
dec
push
in
dec
mov
push
mov
dec
in
cltd
es
push
jg
hlt
fnsave
in
std
cmp
ja
mov
pop
nop
push
jg
mov
mov
sbb
mov
sbb
lock
mov
test
ret
bound
xor
enter
in
pusha
jg
insl
test
lds
nop
popa
mov
pop
xchg
int
rorl
add
pop
sub
mov
pop
imul
sbb
xor
jne
frstor
mov
inc
inc
mul
divl
data16
jne
and
enter
sbb
aaa
xor
std
and
push
inc
mov
frstor
fadds
push
sbb
push
push
inc
out
mov
or
rol
push
in
mov
js
mov
lods
std
xor
mov
push
daa
jg
jg
lea
shrb
inc
inc
loope,pt
pop
cs
fiaddl
movb
cmpsb
int3
xor
popf
xor
push
lods
daa
xor
push
xlat
inc
pop
jns
xchg
xchg
mov
or
mov
xabort
pop
lret
aas
movsl
mov
xor
filds
inc
xchg
mov
lahf
daa
dec
fidivl
decb
cli
nop
or
bound
mov
dec
add
iret
clc
inc
gs
lock
cmp
incl
push
cwtl
sahf
rorl
cmp
push
xchg
mov
xor
loop
xchg
dec
sub
push
mov
and
rcll
rcrb
push
gs
test
rol
or
loope
dec
sbb
adc
movsb
xor
jmp
inc
ljmp
mov
sbb
push
outsl
cmp
mov
icebp
push
pop
sbb
push
mov
aas
mov
aam
cli
or
dec
repz
lock
loopne
inc
fcompl
into
jnp
test
ds
push
pop
sbb
sub
scas
test
icebp
jecxz
imul
mov
popa
in
cmp
cs
cmp
leave
add
mov
ror
jecxz
jne
pop
mov
jmp
arpl
adc
push
movsb
test
jle
sub
mov
dec
mov
jb
push
test
aad
inc
cmp
pop
and
adc
bnd
je
adc
rcll
xlat
cmp
aad
imul
dec
insb
loope
jl
xchg
push
cmp
div
test
xchg
xchg
sar
ljmp
pop
jno
cmp
pop
sub
push
leave
xor
insl
and
cli
jle
add
dec
insl
jno
shr
outsb
sbb
stc
xor
dec
and
es
mov
cs
stos
mov
push
mov
lahf
mov
cmp
sbb
xchg
ret
movsl
lahf
scas
mov
sub
xchg
push
test
cmp
jno
fidivrl
mov
cltd
mov
and
cmpl
repz
dec
add
out
popf
jl
mov
add
ror
movsl
lds
fnstsw
scas
jmp
mov
movsb
xchg
mov
push
test
out
and
sbb
or
pusha
call
jmp
and
sbb
xor
sub
pop
adc
xor
pushf
cmp
dec
push
out
cmc
stos
pop
in
inc
and
fisttps
jno
mov
sarl
rdpmc
in
add
ret
dec
xlat
ljmp
push
out
xlat
sbbb
dec
out
sub
add
inc
add
lret
rol
cwtl
xor
or
pop
or
sahf
push
lcall
cmp
test
jns
xchg
xor
or
cmp
jmp
jp
xor
mov
test
push
mov
mov
pop
push
aas
xor
outsl
mov
loop
push
mov
pop
mov
cmpsb
aad
mov
movsb
aam
out
sbb
stos
pop
call
mov
popf
clc
add
cmp
sti
mov
xchg
pop
stos
jp
sarl
outsl
cmp
stos
ret
fwait
cmp
stos
lea
xor
or
jne
jo
sub
and
push
in
out
daa
movsl
and
aas
lock
pushf
test
dec
in
enter
mov
dec
push
movsl
iret
mov
ss
sbb
out
ljmp
xchg
andb
push
mov
jle
enter
imul
jb
xchg
inc
xchg
mov
inc
inc
xor
xchg
adc
int3
jbe
xor
stos
cmc
inc
add
lea
lds
jns
sub
xor
repnz
mov
stos
popa
cwtl
pop
or
xor
and
mov
aaa
repz
scas
aad
sti
sti
pop
xchg
dec
xchg
shl
js
adc
jle
cmp
jns
push
loope
in
mov
cltd
sarb
testl
cmpsb
mov
out
out
xchg
jb
dec
xchg
mov
idivl
sub
and
mov
aam
xor
mov
push
dec
mov
pop
lods
je
mov
or
cmpsl
movsb
sub
xor
sub
jo
call
std
pop
icebp
addl
shrb
sahf
lcall
mov
xchg
fists
sub
sbb
test
push
add
mov
out
adc
and
aad
repz
repz
push
or
xor
cmp
out
fucomip
cmp
mov
in
insl
or
vmovupd
icebp
mov
cld
jnp
in
mov
dec
pop
xchg
push
mov
cmc
pop
dec
xlat
mov
push
inc
inc
jg
cs
sarb
push
mov
bound
in
push
jo
inc
pop
sbbl
sbb
xchg
push
push
gs
leave
arpl
push
in
and
mov
dec
jl
jnp
movsl
push
pop
mov
lcall
dec
pop
movsl
pop
mov
bound
sbb
fcomps
ss
lock
hlt
nop
pusha
das
push
mov
jecxz
test
pop
lcall
mov
and
jl
add
flds
iret
das
int3
or
mov
fs
pusha
jb
shrb
cmpsb
sarb
push
js
or
out
push
mov
jae
add
aas
sbb
call
push
mov
and
clc
mov
mov
mov
mov
mov
jmp
cmp
add
in
addr16
push
xchg
pop
dec
inc
xchg
bsr
aad
repnz
sti
jecxz
pop
push
in
jmp
daa
xchg
pop
mov
mov
in
adc
lock
sbb
push
mov
fnstenv
cs
loope
outsb
and
and
stc
jne
jl
daa
inc
adc
mov
fisubl
mov
adc
fcmove
sub
clc
cwtl
inc
dec
pop
ljmp
pushf
testl
add
ja
movsl
cwtl
out
xchg
ret
in
sub
aad
cmp
or
push
cmp
stos
sbb
pop
xor
mov
push
add
sub
mov
inc
lret
ret
loop
ja
cmp
daa
nop
push
lret
xor
in
pushf
add
jmp
mov
pop
clc
stos
inc
inc
paddsb
mov
nop
add
add
inc
leave
sbb
in
jecxz
fsts
inc
xor
das
push
push
cld
imul
repz
or
repnz
xchg
fwait
in
out
sbbb
mov
lcall
cmp
sbb
adc
mov
jp
cmp
stc
fs
lods
add
xor
sub
sub
xchg
push
arpl
mov
repz
pop
add
jb
mov
dec
lcall
push
adcb
xchg
push
adc
push
inc
int3
mov
les
mov
mov
inc
push
jbe
lds
cmpsl
ret
test
mov
push
aas
fstps
inc
les
cmpsl
pop
ljmp
sub
mov
sub
sub
imul
mov
mov
add
adc
push
mov
inc
fiaddl
mov
mov
popf
mov
xchg
ja
mov
push
push
push
ret
and
cmp
test
cmp
cwtl
push
dec
push
fsubl
pop
or
cmp
ret
xchg
mov
xchg
xor
dec
and
or
fwait
or
jmp
cmc
imul
xchg
push
ss
movsl
push
mov
mov
inc
bound
sub
pop
mov
fnstsw
repz
in
and
lock
insl
xchg
stos
movsl
adc
test
ss
mov
decl
add
and
les
ja
ljmp
imul
or
mov
idivb
sbb
mov
arpl
and
xor
and
and
cmp
lahf
xchg
sbb
fistpll
mov
loope
out
dec
jns
push
fstpt
cltd
loop
cmpsb
mov
dec
cmp
cmc
in
mov
dec
dec
mov
inc
ja
notb
cmp
and
cmp
push
fmulp
pop
adc
dec
mov
push
adc
pop
push
xchg
out
lods
mov
movsb
aas
repnz
sbb
cmp
and
adc
sub
fwait
sub
inc
sub
je
loopne
push
cmpsl
pop
cld
adc
mov
call
jmp
popf
jl
popf
mov
addr16
cwtl
sub
test
bound
xchg
mov
int3
dec
mov
jle
mov
lods
les
out
jbe
cmpsb
arpl
mov
punpckhdq
lea
imul
into
repnz
sub
insb
movsl
addr16
mov
cmp
ss
outsl
mov
iret
pop
stc
mov
lret
gs
imul
push
sbb
hlt
pusha
jg
orb
pop
lods
mov
mov
mov
out
popf
outsb
xchg
int3
xor
jle
cmp
lock
imul
jnp
loopne
inc
pushf
stos
push
pop
adc
push
and
or
adc
and
xchg
push
mov
jecxz
in
jae
fs
inc
aaa
or
xchg
push
call
adc
test
pop
xchg
pop
inc
add
lret
xor
jg
ret
xchg
insl
sbb
roll
cld
sarb
and
incb
lahf
sbb
mov
xor
pop
dec
add
sub
in
ja
push
adc
xor
inc
sbb
xchg
rorb
cli
lock
enter
insb
fmuls
sbb
out
inc
jmp
fcmovu
push
or
mov
mov
add
lods
iret
repnz
leave
cwtl
pop
mov
lds
pusha
jp
cmp
int3
sahf
adc
daa
add
mov
push
lahf
jmp
inc
dec
jae
call
push
enter
test
mov
das
or
sub
clc
push
test
je
movaps
push
xor
jns
leave
lods
jo
push
inc
in
xchg
cmp
xchg
xchg
mov
add
lock
inc
lock
push
cmp
fistps
lahf
imul
jb
xchg
inc
out
mov
ljmp
inc
inc
arpl
jle
pop
mov
push
cli
sti
xchg
inc
inc
filds
lahf
pop
fimuls
mov
into
pop
imul
or
push
pop
and
push
xor
in
jp
cld
cmp
push
mov
mov
repz
fldcw
movsb
fwait
xchg
lcall
push
sub
push
mov
stc
dec
ret
call
add
push
sbb
jg
in
test
test
ds
mov
mov
cmp
lods
cwtl
mov
rcrb
outsb
dec
loopne
leave
push
ret
pop
jb
xchg
sbb
jle
lcall
xchg
inc
rcl
or
fld
iret
jae
aam
outsl
mov
mov
mov
ss
getsec
dec
push
insl
lock
inc
addb
aad
push
jle
sti
popa
xchg
sub
jae
out
dec
ret
push
ret
sar
inc
ret
xchg
xchg
stc
movsb
bound
mov
push
aam
cmp
ret
xchg
subl
icebp
dec
push
loope
inc
test
jmp
test
rcrb
xchg
rorb
cmp
cli
enter
adcl
cld
and
xor
pop
add
jo
aad
xchg
sub
push
xchg
push
in
lret
mov
ljmp
loope
push
dec
dec
xlat
addb
pop
dec
ret
js
cmp
js
sbb
mov
mov
xor
cld
lcall
pushl
les
mov
out
ss
inc
pushf
mov
es
jle
pop
push
lcall
sbbb
adc
dec
mov
nop
movsl
sbb
xor
out
mov
sbb
inc
repnz
out
add
inc
sbb
mov
out
leave
cmc
push
aaa
cwtl
in
inc
push
outsl
inc
mov
fcmovnb
cwtl
ret
add
outsb
popa
repnz
push
call
in
fdivrl
xor
jg
mov
es
jo
shr
cli
insb
mov
lods
mov
inc
fs
sbb
jne
pop
imul
sub
and
inc
int
inc
aas
jno
xor
add
stc
sbb
jmp
outsl
aaa
out
les
inc
mov
loope
xchg
sbb
outsl
sbb
adc
xor
push
sti
bound
pusha
mov
mov
push
ficomps
iret
das
ljmp
test
xor
in
ret
dec
ret
jo
enter
fs
repnz
icebp
pop
jb
mov
sahf
sti
or
pshufw
and
sbb
loop
in
dec
inc
stc
mov
xor
lret
test
xor
lods
fists
jl
scas
mov
out
sarb
dec
pop
dec
cmp
adcl
fnstcw
adc
aaa
mov
sub
pop
xlat
pushf
jns
cmpsl
xor
mov
push
mov
push
jb
push
inc
and
push
lods
fnstenv
in
dec
xor
inc
fldl
andb
ljmp
sbb
ret
jno
mov
mov
xor
push
or
jp
inc
fs
repz
mov
mov
in
movsl
out
mov
out
inc
dec
mov
addr16
adc
push
stos
pop
and
clc
lods
adc
popf
sub
pop
inc
sbb
pop
nop
jge
and
inc
sub
sub
das
mov
loopne
mov
lods
lods
adc
lock
dec
jo
adc
test
rcl
inc
mov
rol
ficoms
test
sbb
jbe
push
int3
inc
xchg
and
mov
aas
cmp
xchg
rcrb
inc
mov
pop
inc
scas
sub
push
clc
add
testl
scas
mov
fsts
cmpl
jmp
nop
or
dec
pop
cltd
jb
jae
js
mov
cmpl
lods
mov
test
or
mov
cmp
sahf
mov
arpl
bound
fnstcw
push
ja
lret
cmp
pop
test
loop
mov
add
cmc
cmpb
es
push
add
ret
mov
lahf
and
repz
imull
ljmp
add
fcomps
cmc
pusha
mov
je
push
jnp
jb
xchg
add
xchg
rcll
mov
and
ficomps
adc
je
xchg
andb
mov
xchg
pop
aas
mov
scas
scas
push
push
adc
push
repz
ss
mov
inc
pop
in
mov
sub
cmp
dec
icebp
xlat
inc
inc
popf
into
cmp
cmp
jnp
shr
popa
ret
add
pop
pusha
cld
sub
and
sub
jb
clc
addr16
mov
pop
test
clc
xor
fdiv
mov
lds
xchg
sarb
mov
pop
adc
jle
inc
ss
and
shll
movsl
fstpl
stc
pop
adc
cltd
add
sub
fisttpll
push
xor
pop
std
add
add
push
or
or
xor
out
dec
xor
mov
sub
pop
mov
or
adc
jbe
shlb
push
scas
jecxz
or
cwtl
xor
xchg
sbb
std
dec
mov
pop
dec
sub
adc
push
cli
push
add
cltd
xor
cmc
test
sbb
negl
ja
cli
aas
imul
or
frstor
idiv
or
popf
add
cs
push
push
mov
lods
fsts
sahf
addl
sarl
shrl
pop
lcall
mov
test
sbb
das
bound
xchg
cld
fldenv
mov
ret
pop
pusha
xchg
mov
xchg
gs
pop
push
or
push
xorb
lret
shr
lea
inc
mov
pop
or
push
mov
in
jns
std
sti
fidivs
in
sub
mov
jbe
mov
inc
into
push
popf
enter
xchg
pop
or
nop
add
ja
push
sbb
cs
sahf
mov
repnz
test
mov
mov
lret
mov
movsl
mov
sbb
push
or
cmp
adc
pop
dec
lahf
dec
shll
xchg
insl
sbbl
sbb
aam
das
stos
jl
loopne
push
jp
dec
in
push
fs
loopne
jle
addr16
adc
xor
lock
mov
fwait
xor
shll
mov
rorl
imull
lret
pop
into
add
into
gs
xchg
inc
push
pop
mov
jg
add
aas
std
xor
adcb
dec
cltd
test
movsl
das
cld
pop
xor
test
pusha
inc
ds
xor
ljmp
call
inc
mov
add
popf
xchg
and
scas
cmp
mov
ja
fisttpl
mov
insb
xor
dec
lahf
sbb
call
pop
cmpb
enter
add
js
test
cld
bound
lds
gs
clc
cmp
jne
mov
push
out
or
sub
ret
nop
rclb
neg
lds
aam
xor
das
push
and
or
loope
push
cmp
pop
jbe
mov
test
dec
jmp
out
jno
pop
mov
fisubs
or
loopne,pn
pop
jb
icebp
xlat
jge
testl
cli
add
mov
fdivs
sub
scas
fs
lods
mov
lret
push
lods
cltd
inc
pushf
rcrl
ffree
cld
pop
inc
rorb
xor
ror
lcall
push
test
es
stc
sub
movsb
inc
ss
pop
mov
jp
inc
mov
mov
jno
leave
fcmovnb
jecxz
pop
jp
and
fidivrl
test
fcmovne
jb
pop
push
shrl
adc
paddw
adc
sbb
negb
add
sbb
inc
pushf
pop
inc
xor
add
daa
loop
nop
in
iret
cs
and
test
out
cmp
mov
mov
cltd
or
jge
pushw
in
in
scas
mov
dec
test
cmpsb
inc
les
repnz
cmp
xlat
xor
inc
cld
xchg
dec
fnsave
mov
xchg
pop
enter
push
idivb
adc
cli
jne
into
mov
dec
xchg
rolb
mov
movsb
sbb
and
imul
inc
scas
int
mov
pop
mov
xor
rcll
pop
or
ss
test
mov
sti
push
inc
mov
jae
add
mov
test
push
dec
lods
cmp
jle
and
sbb
push
dec
adc
mov
and
insb
enter
icebp
or
xchg
scas
jl
in
into
cmp
mov
mov
stos
aaa
lahf
gs
aaa
sub
rorl
jge
mov
test
cwtl
push
imul
stos
dec
inc
or
jp
jge
inc
iret
cmp
xchg
add
add
push
fiadds
daa
icebp
cmpsl
mov
insb
lret
out
fstl
mov
out
cmpsl
and
sub
aad
pop
das
mov
sahf
dec
pop
cmp
mov
push
mov
int3
subl
jnp
sahf
pop
out
lods
cmpl
mov
xchg
inc
inc
repnz
push
popf
clc
xchg
inc
jl
xchg
and
nop
fisttps
cmp
and
out
dec
loopne
fucomip
mov
rclb
or
push
and
xchg
add
xlat
mov
sub
mov
lahf
inc
xor
popf
mov
add
pop
add
sub
shrl
adc
add
test
lahf
mov
les
in
push
rolb
ljmp
out
add
shl
push
xor
push
ss
lahf
dec
jge
sbb
mov
add
add
int3
mov
rclb
mov
adc
call
mov
arpl
push
sub
imul
adc
sub
or
mov
les
push
fisubs
fldpi
cmp
shll
cmp
adc
cmpl
jae
outsb
or
dec
test
nop
pop
jle
dec
fcmovne
jecxz
inc
mov
inc
and
inc
or
or
pop
jb
push
push
clc
es
mov
and
xchg
inc
xchg
rolb
movsl
dec
leave
movsl
pop
test
pop
pop
mov
mov
int3
fmul
jnp
mov
jecxz
mov
dec
hlt
add
mov
sbb
xchg
inc
in
vmovsd
dec
leave
inc
aad
jo
in
and
std
cltd
adc
icebp
push
mov
stc
xchg
daa
outsl
sbb
add
inc
dec
jle
adcb
or
pop
xchg
or
repnz
sub
adc
stos
lods
lock
loop
icebp
cmpsb
mov
mov
adc
scas
incl
loopne
inc
sub
stc
mov
xor
cmp
jp
rol
inc
fwait
ror
hlt
jbe
test
movsl
push
jle
mov
mov
fcoml
andb
or
outsl
sbbw
jnp
push
dec
sub
push
xor
jne
data16
mov
mov
jae
and
push
cmpsl
or
out
mov
inc
adc
arpl
fnsave
out
nop
xor
flds
dec
ds
cmc
js
xchg
and
and
cmc
push
arpl
pop
inc
enter
inc
test
idivb
fmull
movsb
adc
xlat
cmp
stos
lret
mov
sub
cmp
mov
mov
pop
add
lret
mov
mov
fadd
ret
add
add
cli
push
imul
stos
jle
cs
lret
nop
or
sbb
mov
sti
fwait
pusha
mov
stos
adc
jg
arpl
dec
fcom
mov
or
sbb
inc
mov
sbb
cmp
cmp
sbb
test
in
imulb
add
pop
cld
push
jns
lret
shll
test
push
jno
repz
adc
shlb
ret
stos
sti
test
and
mov
xchg
mov
add
and
movl
jg
ss
fisttps
cltd
lea
adc
mov
push
pop
xor
pop
or
aad
mov
out
xor
push
test
icebp
sarl
xchg
xchg
inc
dec
jle
xchg
and
push
incb
lea
sahf
andl
cmp
bound
lcall
sub
stc
pop
jne
xorb
xchg
mov
cmp
pop
lock
repnz
frstor
jae
xchg
loop
dec
mov
xlat
push
jle
push
jmp
push
sti
add
push
sub
ljmp
jns
gs
dec
andb
cmpl
mov
pop
ljmp
lea
jno
jae
pushf
push
cwtl
mov
movsb
jno
pusha
mov
bound
and
in
jmp
jbe
mov
mov
outsb
jns
mov
push
xlat
xchg
adc
jnp
push
push
pop
inc
xchg
bound
inc
add
xchg
fsubl
es
shrb
xor
xchg
scas
and
adc
movsl
sbb
arpl
push
iret
sub
insl
cmp
xchg
cmp
roll
out
jge
ficoml
repz
push
addr16
pop
mov
rol
jle
cs
jno
and
ret
xchg
cmp
sbb
std
xchg
xor
sbb
jle
testb
mov
sbb
dec
mov
pop
dec
mov
mov
mov
cmp
xchg
or
jae
ss
jmp
jne
adc
add
dec
negb
sti
inc
aam
mov
fmull
mov
and
mov
lock
push
test
pop
addr16
in
punpckhwd
jo
sub
sbb
cmovle
int
shll
cltd
ret
xor
cmpb
je
and
popa
mov
inc
aas
jle
fildll
aas
pop
or
popa
fwait
pop
mov
xor
int
mov
hlt
call
push
cmpsl
add
je
jns
jne
add
addr16
clc
push
outsl
clc
out
lods
pop
inc
aaa
scas
mov
idivb
cmpsb
bndstx
mov
add
push
push
sarb
imul
repnz
ja
loopne
jg
shll
push
fwait
mov
addr16
sbb
fistl
jge
fiaddl
pop
xor
shlb
pop
mov
mov
mov
sbbl
lods
inc
mov
mov
xchg
lahf
adc
mov
je
subl
cwtl
cld
orb
sarb
stos
in
cmpsb
popa
adc
hlt
lea
mov
jne
ja
push
cmc
push
mov
loopne
mov
ret
mov
mov
or
dec
push
push
inc
inc
mov
fstpl
xchg
xchg
and
adc
pop
sahf
jmp
js
xor
push
pop
mov
xchg
cwtl
mov
adc
jns
push
aad
mov
mov
dec
pop
cld
loope
fwait
and
jb
pop
push
xor
shrb
sti
out
imul
add
loop
xchg
cs
jo
xor
xchg
dec
xchg
outsb
daa
xchg
ret
xor
scas
mov
outsl
stc
jl
jno
push
sub
popf
cltd
xor
dec
cli
aaa
fbld
cltd
sub
loope
pusha
sbb
jae
jge
jno
loope
into
fwait
or
and
mov
sbb
sahf
int
outsl
pop
push
loopne
pop
pop
fs
mov
cmpsl
insb
cs
daa
xorl
jb
fwait
clc
mov
dec
xchg
adc
cli
jge
jne
test
mov
mov
andb
jne
sbb
or
loope
sub
out
cs
push
push
xchg
ficoml
imul
orl
add
sbb
or
call
cld
cmp
aas
test
dec
inc
push
jae
sbb
icebp
and
mov
std
stc
sbb
mov
insb
cmp
dec
movsl
std
pop
mov
stos
bound
movsb
sbb
mov
test
xchg
adc
add
add
int3
dec
scas
imul
xchg
sahf
hlt
mov
sbb
push
add
push
adc
mov
mov
adc
jmp
lcall
cld
add
mov
push
mov
iret
or
dec
pop
sub
xor
or
inc
hlt
in
ja
mov
xchg
sub
dec
sti
jmp
in
mov
shll
pop
cltd
inc
xchg
fsub
mov
sbb
pusha
xor
cs
mov
pop
aad
push
arpl
mov
and
push
icebp
daa
pushf
fwait
push
sbb
stos
mov
mov
pop
mov
cltd
lea
push
insl
rol
pop
sbb
les
xchg
pop
sbb
int
jmp
jb
out
or
sub
int
fwait
stos
mov
dec
push
data16
arpl
aaa
add
and
mov
insl
sahf
adc
or
es
das
fisttps
cwtl
in
pop
imul
adc
mov
fstps
test
xchg
sub
into
push
add
nop
dec
inc
pop
lret
test
enter
push
mov
lahf
xor
ds
mov
fldpi
or
repz
inc
cltd
repnz
mov
add
pushf
sub
out
int3
dec
fnstenv
jb
lahf
mov
inc
dec
ret
dec
mov
sub
popa
sbb
add
popf
inc
mov
or
xor
pop
mov
and
push
scas
jecxz,pt
sub
pop
iret
add
out
lock
cwtl
push
lahf
or
push
dec
mov
cs
mov
jmp
xchg
xor
pop
ror
pop
in
or
idivb
shufps
push
push
add
add
cltd
mov
push
adc
inc
mov
cmpsb
push
and
xchg
pusha
es
das
call
adc
lods
int
jnp
enter
test
outsb
cmp
fwait
xor
mov
mov
sub
cs
and
js
movl
dec
ja
xchg
cmp
jmp
xor
dec
dec
fldt
test
cmp
cmp
jl
pop
sbb
arpl
inc
pushw
jb
cmc
cltd
inc
stc
aaa
adc
lcall
clc
subb
addr16
mov
loop
lea
loop
pop
stc
sbb
sarb
jns
data16
jp
cmp
fiaddl
or
or
jne
int3
add
sub
call
imul
fidivl
cmp
jmp
std
or
add
mov
and
push
add
test
xchg
push
pushf
or
movsb
mov
ss
add
stos
push
loope
fnsave
mov
cs
addr16
test
pop
sub
lods
pusha
jg
jbe
repz
in
js
dec
mov
dec
not
and
mov
scas
jp
icebp
and
shlb
cs
int3
shrl
jl
loope
add
shl
sub
scas
push
rorl
jge
sub
arpl
out
fnstenv
lahf
push
cmpsl
push
sub
pop
in
mov
dec
ret
daa
inc
sub
jae
enter
xorb
mov
repz
sub
mov
stos
adc
stos
ja
xchg
xor
mov
cli
sbb
js
sbb
push
ret
pop
sbb
pop
loope
std
jo
pop
sub
mov
adc
add
popa
lcall
xor
fimuls
enter
je
inc
xor
int3
popf
add
fcoml
call
and
add
push
xchg
stos
pushf
push
cli
xor
cmpsl
inc
mov
shll
inc
outsb
mov
lock
jbe
or
in
push
add
out
popf
ljmp
fcomip
add
sbb
mov
shll
or
jno
jmp
fiaddl
cmpb
adc
stos
test
push
adc
sar
jmp
out
fdivs
add
adc
adc
mov
cmp
mov
mov
test
not
sub
aad
int3
xor
addr16
push
and
sub
loop
adc
lahf
mov
xchg
mov
jnp
sub
mov
push
xchg
call
xor
or
or
cs
sub
mov
out
mov
ja
mov
movsl
outsb
mov
cmp
or
jecxz
xor
push
adc
cld
jae
mov
es
lahf
mov
mov
push
cmpsb
lret
sbb
inc
cs
pop
aad
aad
mov
shlb
push
cmp
pop
cmp
pop
cmp
push
sub
jp
sahf
mov
fisubrl
jge
sub
cwtl
push
jno
insb
call
xlat
jmp
cmc
popf
add
les
stos
pop
lods
cmp
cwtl
in
mov
pop
loope
cmpb
jg
inc
pop
sbb
xor
sbb
stos
mov
sahf
mov
mov
imul
pop
incb
enter
push
cmp
or
adc
jo
nop
mov
fisttps
enter
and
sbb
fdivp
hlt
xchg
sub
lcall
xchg
xlat
or
dec
in
mov
in
dec
lcall
sbb
ss
rcr
push
shl
ficoml
push
add
sub
xchg
push
fdivl
push
insb
adc
push
ljmp
jbe
dec
insl
pop
stc
push
jne
xchg
or
fnstenv
xchg
stos
pop
enter
subl
mov
leave
subl
push
ffreep
jne
iret
sub
cmp
repnz
xor
xor
cltd
call
inc
sbb
fidivrl
cs
xchg
shl
inc
cmp
test
lea
sub
mov
stos
orl
sbb
pusha
mov
fsubrs
pop
jmp
out
int
push
xchg
fs
pop
mov
data16
xor
std
mov
aam
sub
clc
cs
jg
jp
push
loopne
test
nop
jl
xor
cmc
iret
xlat
dec
fldcw
imul
jo
mov
mov
in
lret
aam
repnz
jecxz
or
xor
dec
pop
int
popa
sahf
add
sti
mov
dec
loop
or
xor
xorb
jge
jb
inc
arpl
pop
arpl
and
add
pusha
pop
insb
push
cmp
sub
xor
mov
add
in
cltd
test
push
or
and
inc
pop
push
sbb
into
rcrb
sub
idivl
aad
icebp
leave
mov
sbb
mov
or
dec
cld
adc
mov
dec
imull
andb
xchg
mov
outsl
or
dec
jp
cmp
shl
cvtps2pd
xchg
add
aam
int3
push
mov
mov
adc
xor
fwait
std
sbb
cli
sub
pop
test
mov
push
notb
sarl
clc
adc
outsl
sbb
jp
inc
push
or
push
aaa
inc
and
jp
and
je
adc
in
dec
mov
dec
sbb
cs
xchg
out
jmp
sub
out
or
lret
xor
mov
jg
daa
sahf
jae
push
mov
pop
mov
test
push
les
frstor
jl
push
mov
subb
jecxz
idiv
stc
ret
mov
dec
mov
cmp
lods
scas
xchg
pop
movsb
insl
xor
xor
mov
dec
mov
insb
xor
sub
mov
push
cmp
addr16
inc
cmp
scas
add
aam
push
jo
and
mov
popf
dec
adc
xor
insb
inc
fsubl
push
and
fldl
or
jge
cmpl
cli
mov
cmp
movsb
out
test
inc
inc
pop
imul
xor
xlat
mov
xchg
pop
rorb
jne
fadd
pop
dec
nop
popf
fldcw
cmp
sub
mov
inc
in
loope
sahf
cmpl
mov
in
jle
fbld
dec
enter
sti
mov
fwait
add
pop
jns
movsb
repnz
insb
mov
xchg
repnz
dec
jae
push
aaa
jl
aam
test
cld
mov
add
jo
dec
xor
lds
sti
add
push
mov
dec
in
sub
push
jle
in
mov
call
adc
xchg
ss
lds
sbb
imul
insb
lods
cmpsb
jnp
scas
or
popf
mov
mov
lds
leave
push
inc
std
jae
fidivs
popa
xor
neg
test
aad
mov
adc
mov
jp
and
repz
ret
mull
jg
into
stos
pop
aas
sub
xchg
sub
enter
sub
mov
cmp
mov
push
repz
cmpsl
xor
clc
in
int
stc
repz
das
pop
outsb
das
dec
in
push
sub
mov
xor
pop
push
cltd
mov
mov
fidivrl
pop
icebp
push
ja
jb
xchg
loop
dec
inc
in
lods
push
xor
fistl
call
cmp
je
pop
cmp
dec
fiaddl
and
movsb
adc
mov
push
scas
test
jl,pn
mov
inc
daa
sbb
int
es
into
push
adc
mov
sub
daa
adcl
sub
ret
out
pop
fdivs
test
jno
jnp
ss
rcrb
mov
sti
pusha
ljmp
int3
add
cmp
stc
idiv
nop
ret
push
daa
push
inc
cld
cmp
aaa
repz
stos
imul
int
add
je
pusha
xor
inc
stos
enter
call
aaa
xor
dec
lds
mov
pop
inc
test
sub
xor
xchg
adc
mov
stos
jmp
lret
cwtl
scas
leave
sti
cmp
mov
addl
faddl
lahf
insl
xchg
inc
pop
imul
in
into
addr16
daa
xchg
mov
cmp
lods
jno
cltd
jne
test
xor
test
enter
pop
xor
test
mov
pop
movsb
dec
lcall
or
xchg
movsl
jl
lret
or
lock
je
test
sub
fdivrs
xor
rorl
cwtl
adc
cltd
sub
movb
mov
pop
dec
mov
stos
or
jnp
iret
orb
sbb
out
clc
inc
enter
in
push
pop
push
cmp
jmp
out
sub
in
loopne
insl
lret
add
or
adc
sub
push
cmp
jge
sahf
jl
or
imul
mov
insb
push
and
push
sbb
pop
xchg
call
stc
ret
leave
sub
xlat
mov
mov
loope
test
cs
movsl
add
push
adc
cmp
nop
mov
dec
mov
jnp
ret
outsb
xor
outsb
xor
mov
mov
add
sub
shl
jecxz
popa
xor
add
roll
or
movsb
jmp
out
in
fwait
rorb
xchg
xor
or
cwtd
cs
dec
or
lcall
mov
mov
push
lods
jnp
cmp
xchg
popa
cmpsl
mov
sti
xchg
xor
gs
imul
xchg
in
es
fdivl
cmc
mov
pop
mov
and
inc
rcr
sbb
xchg
push
cmpsb
addr16
out
cmc
xor
pop
pop
cs
mov
jg
dec
cmpsb
iret
and
or
push
mov
adc
inc
xor
pushf
js
in
mov
ret
adc
mov
test
cli
jno
xor
jb
adc
and
fyl2xp1
es
movsb
pop
pmaxub
shr
sub
cld
outsb
xor
aam
daa
add
jns
pop
imul
int3
mov
sub
stos
repnz
and
cmpsl
nop
jnp
inc
add
aad
adc
popf
jmp
add
or
cmp
sub
jo,pt
pop
push
pop
push
mov
mov
cmpsl
aas
test
push
push
push
fmull
sarl
aam
jle
jne
xchg
aad
fbstp
mov
mov
cli
shlb
xor
inc
dec
adc
inc
in
and
xchg
aad
bound
mov
xchg
push
xchg
fbstp
pop
sub
mov
sbb
mov
dec
xlat
repnz
xor
loop
push
jle
dec
cld
out
out
xchg
mov
push
ja
test
cwtl
xchg
xchg
addr16
int3
shll
push
mov
sbb
sbb
jle
jne
fsubl
shll
sahf
sub
outsb
adc
orb
fisubrs
fmuls
adc
fwait
insl
repnz
mov
aas
xorl
xchg
mov
daa
adc
sub
sahf
cmpsb
jnp
lods
leave
lock
fwait
iret
loope
gs
xchg
cmc
test
and
arpl
jl
sar
push
icebp
shll
add
jp
xchg
push
mov
jl
cmp
xchg
sub
je
cmpsb
dec
mov
imul
xorps
sbb
stos
cmpsb
cwtl
enter
loop
add
sub
lahf
lahf
clc
shrb
cmp
dec
and
leave
daa
cmp
mov
pop
mov
sub
enter
mov
imul
les
in
jmp
pop
leave
mov
testb
jbe
sub
pop
das
sbb
inc
jno
sbb
mov
xchg
pop
jo
xchg
in
push
xor
jae
pop
add
fbld
mov
sub
xchg
xchg
inc
add
pop
push
shlb
sti
pop
pop
fwait
mov
inc
cs
and
dec
test
adc
lock
push
cmpsl
jnp
add
push
pop
stc
cmpsb
add
movsl
xchg
in
shl
shrb
cmp
std
xchg
add
shl
push
pop
test
add
fwait
stos
add
fstl
mov
in
loopne
mov
lcall
aam
jnp
jmp
add
cmp
loop
daa
adc
jl
xchg
mov
fidivs
mull
cmp
rcrl
xchg
xchg
jg
addr16
mov
push
pop
stc
loopne
and
or
sbb
iret
sbb
shrb
or
adc
push
xchg
inc
ljmp
int
adc
pop
int
je
adc
rclb
unpckhps
cmp
dec
sub
leave
and
mov
pop
pop
pop
cltd
int3
and
sbb
repnz
cmp
ret
lcall
fisubrl
mov
rclb
xor
sarl
outsl
lods
cmp
jno
loope
push
negb
xor
push
in
jbe
int
mov
es
add
or
pop
loope
jle
loope
daa
jo
mov
popf
jbe
push
xchg
add
add
pop
mov
jns
adc
imull
push
fwait
call
sbb
shlb
cmpsb
pushf
test
pop
shll
pushf
out
jmp
push
movsb
loopne
add
pminsw
bswap
inc
cmp
out
jl
inc
push
mov
mov
xchg
ret
cmpsl
stc
imul
fcomp
arpl
call
mov
dec
mov
iret
push
cmpb
outsl
add
cmp
add
xchg
xor
mov
cmpb
mov
add
jl
lahf
fisttps
xchg
cmp
pop
sbb
int3
popf
dec
pop
in
jbe
or
test
xchg
loope
aas
in
inc
push
or
repz
mov
mov
sub
shlb
and
adc
jmp
adc
pop
adc
push
xchg
add
xchg
mov
adc
sub
in
xchg
mov
jne
das
jo
aas
out
ds
and
in
mov
mov
xor
xorl
cltd
adc
pop
push
adc
xchg
adc
inc
push
sbb
adcl
lcall
adcl
fsubrs
cmp
sub
adc
loopne
popf
pop
das
add
lret
sbb
fcmovne
sub
dec
outsb
in
outsb
or
xchg
cmpsl
movl
xchg
ret
push
push
pop
fcompl
jmp
pop
fdivs
push
jle
js
insb
mov
lods
lods
ret
jp
les
pusha
add
popa
enter
sbb
ljmp
mov
js
shrl
sbbb
es
push
mov
or
push
adcl
push
insl
shr
xchg
and
jbe
push
lret
adc
mov
mov
aad
xchg
pop
mov
lea
xor
repnz
pop
je
test
xlat
xor
dec
mov
add
add
jge
and
out
test
and
dec
in
push
xor
into
or
jmp
lods
sbb
jno
cmp
mov
jp
rcrb
imul
daa
pop
in
shlb
fs
sbb
push
adc
and
aam
pop
adc
inc
rorl
in
into
sub
loopne
in
movsl
pushf
pop
ss
ret
aad
popf
xorl
sbb
ljmp
out
xor
jmp
loopne
loope
shrb
popf
xchg
sahf
repnz
xchg
inc
jbe
pop
out
xchg
ljmp
shl
aas
lcall
inc
imul
outsb
dec
cmp
inc
dec
add
jb
leave
out
in
push
rcll
ss
cli
mul
insb
sub
cmpsb
mov
rol
adc
mov
insb
incl
push
inc
mov
dec
test
fmuls
leave
adc
push
addb
mov
stos
jb
sarl
les
sti
xchg
out
fs
addb
popf
xor
sbb
inc
xchg
adc
xor
mov
or
orl
xor
dec
inc
jmp
repz
mov
les
adc
shlb
popw
je
adcb
push
lods
or
cmpsb
test
popa
rorl
or
dec
push
ret
sub
mov
push
lods
call
xchg
dec
loopne
test
cmp
xlat
popa
iret
dec
push
data16
enter
rcl
popf
sti
dec
push
pop
and
mov
popa
cltd
push
ljmp
dec
cmp
push
and
leave
idivl
mov
in
movsb
in
addl
push
cmp
mov
or
sbb
push
jo
xchg
insl
ljmp
cmpl
aad
ficomps
or
pusha
into
idiv
mov
sbb
ja
jge
mov
jge
cmpsb
rcll
adc
dec
mov
sub
sub
pop
fidivrs
pop
mov
popf
cmpsb
inc
jle
dec
iret
xor
adc
cmp
or
push
ljmp
fcoms
xchg
outsl
push
popa
incb
dec
int3
std
int
sbb
mov
lods
lock
aam
mov
sbb
jge
cmpsl
mov
and
sbb
or
mov
sbb
pop
lods
mov
xlat
insl
mov
jp
xor
stos
xchg
xchg
dec
add
cmovo
daa
fwait
inc
cli
fld
lcall
sti
sbb
test
sbb
add
mov
arpl
pushf
jns
jg
mov
xor
outsb
xorb
imul
clc
xor
out
inc
jg
rcll
repnz
repz
jo
push
into
in
insl
frstpm(287
jns
pop
pop
sub
call
pusha
cwtl
adc
mov
dec
push
or
das
scas
insb
fyl2x
negl
or
imul
out
inc
call
dec
and
enter
sub
shr
imul
sbb
test
xor
shl
fisubrl
out
dec
inc
push
xchg
fdivr
sub
or
movsl
dec
andl
mov
dec
les
into
xchg
sub
jbe
mov
call
movsl
mov
int3
jno
ret
push
cmpsl
sbb
andb
sti
call
and
lret
xchg
leave
fsubrl
jbe
lods
or
cmp
ja
in
inc
out
iret
ds
add
jns
daa
mov
inc
xchg
out
mov
fmull
out
sbbb
lcall
ss
ret
and
lcall
daa
sbb
mov
push
cmp
mov
or
rorl
pop
sbb
dec
push
pop
pusha
popf
aad
sbb
fmuls
mov
imul
adc
add
imul
hlt
jmp
jae
in
data16
pop
mov
repz
lcall
jno
rorb
push
xchg
stos
ss
xchg
lods
dec
pop
test
jno
dec
mov
sub
int3
outsb
hlt
jle
jmp
add
std
xchg
sbb
aaa
adc
js
mov
sub
cld
and
jecxz
fcomi
adc
inc
out
loope
dec
fildl
mov
insb
addr16
push
mov
and
nop
dec
push
lds
xor
mov
stc
mov
mov
aas
nop
sub
mov
pushf
imul
pop
xchg
decb
rorb
or
rcll
ljmp
mov
fwait
pusha
mov
aam
mov
inc
adc
movsb
push
xor
mov
icebp
cmpsl
jle
pop
pop
enter
push
iret
fmuls
pop
or
mov
xor
out
xchg
loop
mov
mov
call
sbb
add
jbe
out
daa
lahf
leave
ja
add
push
outsl
dec
jecxz
sbb
mov
dec
push
or
dec
inc
or
leave
jae
fdivrl
ret
je
inc
pushf
fucomp
pushf
scas
mov
xor
stos
das
adc
dec
inc
fsubrl
movsb
cmp
and
fdivrs
pushf
cwtl
cmpsb
cmpsl
bound
dec
syscall
das
aas
cld
decb
mov
push
aad
ss
cmp
xor
and
insl
pop
les
dec
jg
mov
or
cmp
xchg
xor
push
rcr
add
inc
pop
repz
lcall
popa
jo
popf
mov
dec
sbb
out
out
test
int
int
mov
cmp
fildll
out
dec
mov
cmpsb
jge
sub
mov
add
push
inc
inc
cltd
push
pop
addr16
push
lea
arpl
dec
mov
cmpsb
fisubrl
pop
dec
push
test
out
push
and
push
mov
jae
loopne
sarb
xlat
subb
mov
add
push
sub
cli
cld
jge
pop
lea
cmp
les
mov
pop
jae
out
xchg
push
mov
jl
sbb
sbb
push
popa
insl
daa
push
pushf
pop
push
sarl
mov
rolb
rclb
jae
outsl
or
xchg
cld
dec
in
fists
adc
or
es
push
ljmp
movsb
jle
sahf
mov
mov
adc
addl
pop
mov
cmp
cmc
jmp
sub
nop
hlt
mov
subb
cmp
rorb
mov
ja
into
xor
dec
and
test
and
xchg
mov
add
fisubs
xor
addr16
adc
fucom
dec
sbb
sub
mov
mov
xchg
popa
rcrl
cmpsl
sbb
cmc
pop
mov
movsb
sub
xchg
jmp
cmpsl
jbe
insb
ds
nop
mov
inc
test
enter
in
push
mov
in
pop
xor
cmp
movsl
lcall
out
pop
inc
sbb
je
popf
sub
adc
push
add
and
imull
add
sbb
lock
jnp
inc
jmp
xor
pop
scas
cli
inc
aam
sbb
sbb
mov
cs
jle
jnp
and
ljmp
xchg
das
roll
dec
jns
xchg
popa
sub
and
mov
stc
xchg
and
push
popf
add
mov
mov
pop
icebp
adc
mov
xchg
push
push
outsb
ret
sbb
adc
loope
loop
jae
stos
pop
and
or
add
sub
pop
popa
imul
pushf
add
test
test
aad
or
in
fisubl
rcl
inc
sbb
push
mov
scas
in
add
cmp
das
popa
push
mov
pop
into
inc
leave
mov
inc
sbb
dec
xchg
orl
icebp
dec
fsts
lcall
lret
or
ja
jp
xchg
sub
lods
into
mov
shl
adc
addr16
inc
xchg
sets
push
push
punpckldq
sbb
xchg
sbb
push
adc
adc
xor
dec
xchg
addr16
pusha
enter
add
lcall
fisubrl
dec
lock
sbb
fnstsw
dec
push
fcmovne
loopne
or
mov
popa
pop
das
ret
outsw
fs
cmp
aas
cltd
pop
ds
loope
fxch
pop
stos
pextrw
or
adc
ds
add
inc
nop
pop
push
jp
cwtl
test
jbe
stos
pop
enter
adc
je
sbb
or
mov
pushf
sarl
xchg
cmp
sub
jecxz
pop
bnd
jg
xlat
mov
cmp
cmp
stos
or
and
or
mov
pop
dec
insb
add
lods
adc
call
les
ret
es
sahf
pop
lock
adc
adc
xchg
sub
scas
mov
popf
xchg
adc
jle
add
dec
arpl
inc
cmp
loopne
push
sub
jae
cmp
clc
sarb
out
push
adc
bound
ret
sbb
das
jb
inc
lcall
push
pop
add
xor
fucomi
out
inc
rolb
inc
adc
xchg
int3
dec
adcb
out
push
jle
pop
mul
pop
xchg
mov
pop
inc
nop
dec
jbe
mov
pop
mov
push
js
mov
xor
ljmp
jnp
push
mov
mov
mov
sbb
sub
addr16
dec
ds
fidivs
cmp
push
push
pop
lods
cmpl
repz
fildl
rcrl
rcr
jl
cmc
mov
jle
sub
fmuls
and
sbb
push
mov
pusha
sbb
out
mov
lcall
jnp
mov
fldenv
scas
push
sti
test
inc
icebp
mov
imul
mov
add
push
sbb
fwait
mov
lds
sahf
test
mov
ror
daa
rclb
xchg
aad
iret
mov
push
mov
nop
lahf
hlt
out
ss
in
aas
push
mov
test
push
popf
js
daa
shll
insb
cmp
pop
mov
and
aaa
push
lds
pop
hlt
aaa
mov
clc
push
mov
fsubp
push
gs
xor
dec
nop
rcr
and
fwait
insb
push
hlt
into
dec
mov
pop
xchg
subb
push
out
push
dec
leave
fistpll
mov
push
hlt
push
mov
pushl
cmc
sub
fiaddl
stc
cmpsl
loop
mov
std
jle
or
test
mov
adc
imul
sbb
push
stos
sub
or
sahf
xor
push
std
mov
lds
neg
jecxz
add
sub
or
int
or
addl
push
shrb
inc
pop
jmp
addr16
xchg
cli
out
dec
orl
sbb
arpl
sub
cli
mov
aas
jmp
sbb
pop
pop
mov
ret
jae
in
aad
inc
je
mov
in
or
push
jmp
jle
push
or
ja
jbe
mov
mov
fidivrs
mov
int3
pop
ret
in
mov
loope
mov
pop
outsl
inc
inc
fbstp
cmp
out
mov
push
push
outsb
pushf
ret
stc
scas
out
pop
mov
mov
push
push
inc
sbb
inc
movsl
in
out
mov
mov
mov
jo
test
iret
jl
pushf
out
add
xor
les
fistpll
jns
dec
push
inc
fwait
arpl
cs
sarb
ud0
dec
mov
std
addl
push
add
xor
xor
push
and
in
sbb
push
mov
inc
jae
inc
and
iret
out
rorb
xchg
mov
sbb
push
mov
xlat
popf
mov
inc
cmc
in
aas
mov
jle
xor
fcoms
insl
lods
xchg
push
shll
inc
and
sbb
les
gs
inc
mov
movsb
mov
adc
dec
lock
xchg
aas
popf
cs
add
ss
xchg
sbb
test
mov
jl
or
cmp
or
imul
and
pop
ljmp
xchg
xor
cli
popf
iret
and
mov
push
jg
xor
int3
jp
cli
add
mov
aad
pop
fmull
add
mov
sub
sub
je
sarb
xchg
cmp
inc
notl
mov
imul
xchg
lock
addl
pop
jbe
inc
sub
jp
pop
lret
gs
or
das
scas
in
cld
or
cmp
andb
rolb
insb
aas
or
xchg
jecxz
fwait
cmp
out
jg
xor
mov
add
out
sbb
dec
inc
push
push
mov
dec
fmull
add
jne
orl
jle,pt
mov
jno
ss
xchg
subl
fwait
mov
mov
fimull
push
cs
push
aad
mov
jecxz
mov
loop
mov
fwait
outsb
xchg
mov
pop
je
push
xor
mov
add
sub
daa
xchg
xchg
xor
sbb
ja
lret
sarb
loope
mov
test
and
das
mov
mov
push
lods
or
fcos
jmp
mov
fldl
jo
rol
push
and
push
mov
sbb
mov
or
loopne
jp
test
mov
lods
push
cmp
mov
out
mov
xor
cmp
daa
mov
mov
sub
adc
loopne
and
mov
cmpsl
movsl
outsl
bound
xchg
fwait
pop
dec
mov
repnz
jae
xchg
push
mov
mov
call
mov
insb
mov
cmc
xor
push
inc
out
pop
mov
adc
test
adc
fs
xchg
loop
les
pop
cld
mov
xchg
cmp
xchg
lea
into
xchg
xor
xlat
fisubrl
and
jne
xchg
mov
or
adc
fwait
or
call
test
mov
adc
xor
enter
fs
cmpsl
lcall
adc
cli
pushf
pusha
inc
test
jge
jg
push
sti
pop
jg
jno
adc
cmp
or
or
push
insl
call
out
mov
inc
adc
adc
iret
ja
enter
adc
pop
jno
xorb
incl
cwtl
jmp
repnz
mov
add
nop
test
mov
ret
add
pop
sub
add
mov
int3
out
out
sub
data16
fidivrl
cs
daa
hlt
xor
loopne
int3
loop
pusha
sbb
cltd
pop
adc
sahf
bound
jns
stc
mov
xlat
call
jp
jecxz
rol
pushf
jo
jmp
sbb
sub
inc
add
imul
shll
jmp
jnp
cmp
icebp
repnz
add
cltd
popf
push
add
mov
or
pushf
cmpsl
lock
push
sbb
int3
inc
inc
testl
test
insl
pop
es
mov
std
cmp
inc
fisubrs
pop
mov
sbb
rorb
cmp
loop
dec
jp
adc
pop
mov
adc
lcall
loope
sti
in
div
and
mov
roll
test
enter
arpl
sbb
sbb
jp
adc
dec
or
mov
scas
movsb
push
movsl
or
pop
and
xchg
lods
lret
jmp
scas
cmp
jle
push
out
or
lock
ljmp
fs
gs
jnp
jmp
add
mov
pop
xor
add
sub
xchg
fwait
clc
inc
jmp
mov
jo
xlat
rcll
xor
ret
fisubrs
lahf
cmp
fs
aam
cmp
mov
in
pushf
sub
inc
pop
adc
ret
adc
scas
mov
sub
test
jecxz
lea
aaa
jno
dec
mov
pop
cwtl
dec
lret
insb
leave
push
fisttpl
scas
add
nop
out
mov
iret
cmpsl
mov
dec
addl
shlb
test
pusha
cmp
sbb
xchg
pop
xchg
xchg
sbb
lods
pop
icebp
lea
rol
clc
jmp
stos
inc
lahf
sbb
dec
outsl
mov
test
and
mov
mov
adc
sub
or
dec
sahf
mov
pop
in
or
adc
rclb
std
sub
imul
ret
je
cmp
ljmp
ljmp
push
push
adc
sub
sub
sub
scas
outsl
decl
pushw
inc
in
dec
iret
outsb
push
cwtl
ljmp
popf
out
dec
push
push
push
mov
lock
jp
cmp
or
xchg
xchg
push
and
inc
adc
stc
aas
aad
ja
sub
pop
cwtl
sbb
pop
mov
sbb
jg
mov
mov
mov
inc
fnsave
std
jge
push
dec
scas
dec
xchg
ss
sub
enter
jmp
repnz
daa
sub
xchg
dec
cmp
fbstp
jo
mov
dec
out
mov
fimull
js
push
shll
out
jbe
pop
in
sbb
dec
dec
call
test
jmp
bnd
add
push
push
pop
or
out
sub
mov
mov
jmp
pushf
es
cmp
scas
test
sbb
inc
jmp
push
mov
leave
fdivrl
mov
pop
scas
xor
scas
xchg
loopne
in
mov
cld
lret
pushf
fdivrs
iret
je
loop
push
jmp
mov
mov
xor
add
sbb
rcl
es
sarl
shl
xchg
ja
jne
cli
mov
inc
es
fadds
cs
pop
lock
call
or
push
rolb
ret
xor
out
adcl
mov
pop
mov
mov
mov
or
loop
scas
in
inc
xchg
idivb
pop
jle
repnz
testb
mov
fcomps
inc
je
push
aam
push
not
lahf
fcomip
scas
das
or
nop
mov
aaa
ret
mov
mov
add
sub
aaa
out
dec
or
lcall
sub
push
fisubrs
and
dec
rorb
sahf
ljmp
push
push
mov
sbb
int3
stc
sub
jg
iret
inc
es
sarl
jae
cmp
fstpl
sub
out
mov
ror
jae
sbbb
push
cmp
add
sub
or
pop
sub
imul
bound
out
loope
repnz
or
mov
addr16
sbb
pop
xor
sti
popa
mov
repz
cmp
or
adc
pop
aam
add
xchg
push
mov
sahf
ret
lea
cli
xchg
out
cmpsl
ret
aam
inc
jmp
in
jae
in
ret
outsl
out
test
cmp
mov
cmp
pop
test
out
std
push
sbb
xchg
cltd
mov
mov
cld
cmp
adc
hlt
dec
std
sub
dec
inc
arpl
xchg
mov
xor
push
packssdw
sti
mov
mov
ficompl
xchg
push
mov
add
in
data16
in
mov
mov
push
add
fst
insl
and
test
leave
inc
ja
add
cmp
gs
repz
add
out
dec
aaa
and
fcompl
out
cli
xchg
cmp
imul
mov
dec
jp
mov
cmp
pop
mov
mov
pop
xor
pop
mov
lods
jle
imul
jnp
test
push
cs
dec
inc
adc
out
jmp
fs
orb
inc
push
mov
fdivr
insb
pop
aad
cs
xchg
jge
cmpsb
mov
push
push
cmp
shrb
outsl
or
and
and
idivl
dec
pusha
jmp
in
mov
mov
mov
mov
sbb
mov
xchg
icebp
lods
push
repnz
outsb
in
mov
cmp
jnp
or
xchg
sub
repz
cmp
dec
ljmp
jp
test
inc
sbbl
test
fidivrs
push
pop
sbb
jecxz
into
jle
mov
cmp
sub
cmpsl
das
inc
sub
shll
push
mov
jg
pop
jecxz
cmc
insl
in
xor
js
add
test
xorb
and
lods
ficompl
lds
fsub
cli
push
dec
mov
sub
loop
ficomps
ds
dec
cmp
stc
inc
rep
jp
inc
push
test
sub
lahf
scas
add
jae
jl
and
inc
sbb
jns
dec
rorl
pop
popa
sbb
cmp
pop
xor
adc
lret
jle
sbb
outsl
dec
mov
xor
shlb
out
push
pop
leave
daa
xchg
jb
jno
out
or
sbb
cmp
mov
sub
ja
jbe
sub
sbbl
mov
aas
fs
dec
sub
xchg
xlat
out
pusha
lret
mov
mov
es
pop
in
xchg
push
insb
push
cmp
out
hlt
or
xchg
and
pop
lods
xchg
sbb
inc
fsubl
and
out
and
jae
stos
push
scas
lret
out
dec
jb
add
movsl
sbb
mov
in
icebp
insb
es
and
movsl
xchg
ja
mov
push
mov
leave
mov
mov
mov
and
out
dec
loopne
imul
fnstcw
imul
dec
dec
or
xor
filds
pushl
xchg
pop
mov
mov
mov
xor
jno
adc
aad
sarb
sti
leave
jecxz
ret
scas
mov
sahf
testb
out
or
and
mov
dec
aas
xor
nop
mov
es
pop
scas
loope
sub
pop
iret
mov
xchg
popa
fcoms
xchg
idiv
lret
xchg
popa
lods
pop
leave
sub
add
fldl
divb
testl
cwtl
shrl
jp
mov
out
ret
xchg
aaa
pop
inc
repnz
es
idiv
cmp
push
sub
sbbl
mov
loopne
or
and
xchg
sbb
mov
xorl
jo
or
or
test
mov
dec
jecxz
add
sub
and
out
mov
jg
mov
adc
adc
mov
mov
dec
fildll
cs
pop
dec
iret
pop
adc
es
mov
jb
pusha
push
icebp
es
ljmp
cmc
push
push
iret
bound
pop
inc
orl
xchg
adcb
or
cld
mov
xor
adc
dec
ja
in
or
je
outsb
or
ss
not
xor
and
mov
sub
cmp
out
test
pop
add
lods
and
add
scas
test
lods
mov
jnp
aas
fwait
fwait
xor
adc
test
inc
in
push
and
cmp
pop
mov
sbb
xchg
sub
pop
mov
jns
popa
cli
adc
jbe
pop
aad
loope
push
adc
dec
jg
gs
inc
sbb
fcmovbe
fbstp
imul
mov
lock
fmull
pop
xor
insl
int
sbb
jns
sbb
push
mov
ret
push
dec
cmp
xchg
fldcw
scas
addr16
loop
loopne
stc
fsubl
gs
cltd
adc
jecxz
flds
scas
aas
shlb
test
mov
aaa
push
mov
cmp
push
mov
popa
ljmp
sub
inc
xchg
stos
mov
js
outsl
fs
mov
pop
frstor
into
divb
std
insl
insb
xchg
push
int3
fists
push
loopne
cmpsb
xchg
push
pop
jl
decb
fs
xchg
popa
inc
lcall
clc
add
gs
push
push
push
popf
popa
lret
add
push
inc
sbb
fs
add
nop
jl
arpl
mov
or
stos
mov
xlat
in
jl
xchg
mov
pop
jbe
dec
les
outsb
sub
int3
cmpsb
lret
mov
fsubp
jbe
sbb
fsubl
fidivs
jg
or
push
in
jo
les
mov
cwtl
push
and
in
popf
add
lret
sub
pop
lock
mov
or
adc
mov
xchg
fisttps
popl
pushf
jl
mov
xchg
push
int3
dec
lods
div
fdivr
aad
ja
push
sub
and
mov
dec
loop
jb
inc
pushf
dec
or
arpl
rcr
pop
add
lods
imul
pop
imul
jbe
repz
dec
aas
push
sbb
xchg
hlt
or
add
xchg
popf
repz
xor
sbb
pop
adc
adc
repnz
xchg
ja
cmp
mov
mov
jle
xor
inc
cmp
pop
xchg
xor
jno
mov
int
inc
lock
mov
aas
or
stos
xor
fisubrl
cld
jnp
sahf
fsts
into
ret
lret
int
notl
push
xchg
outsb
jns
or
sbbb
test
inc
lret
or
pop
lahf
in
clc
cs
pusha
dec
ja
bound
lret
sub
movl
inc
jg
pusha
call
fmulp
add
adc
ficoml
mov
mov
mov
fnstsw
es
shll
lret
mov
cmp
in
push
cs
out
lods
repnz
int3
xlat
bound
test
mov
ret
repnz
mov
aaa
pop
jg
shll
xor
lods
add
cs
mov
jge
addr16
mov
outsl
adc
xor
cmp
es
xchg
inc
sub
popa
js
lea
jnp
cmp
jmp
or
out
mov
roll
loope
dec
and
adc
push
imul
dec
outsl
mov
xor
movl
stos
dec
out
push
mov
dec
sub
push
sbb
pop
enter
mov
lret
inc
sahf
dec
dec
jmp
incl
add
push
add
add
and
dec
lret
jg
adc
mov
cmp
pop
fcoml
inc
xlat
sub
sti
mov
push
fstps
cmp
mov
xor
iret
mov
cmp
pop
popf
ja
jle
popa
or
jae
inc
pop
xor
ret
imul
adc
cmpb
push
adc
mov
mov
inc
add
add
add
add
add
inc
adc
jp
les
int3
outsl
sub
push
je
add
mov
pushl
test
stos
and
ret
shlb
es
insb
inc
mov
insl
std
xchg
cmp
xchg
clc
push
inc
adc
sbb
call
jg
mov
push
inc
push
lret
adc
lret
jne
or
pop
sarl
xchg
sbb
adc
adc
xchg
loope
and
std
dec
pop
jl
mov
sti
lret
jg
in
insl
jns
pop
push
lods
xor
rcrb
jle
cmpsl
sti
lahf
xchg
in
or
clc
xchg
cmp
and
add
cltd
inc
loopne
loopne
add
ret
fldt
inc
fcmovnbe
dec
adc
sub
addr16
daa
xlat
xorb
and
pop
movsl
inc
test
add
sbb
fs
add
mov
stos
sub
in
dec
jns
xor
mov
in
mov
dec
ja
cmp
cs
or
out
mov
push
pop
stos
mov
cltd
sub
xor
jl
jmp
sbb
sub
jmp
loopne
lahf
das
ljmp
ror
pop
lds
pop
aaa
adc
adc
fbld
loope
cld
std
sub
adc
xor
popw
clc
popa
pop
cmp
push
aad
scas
pop
sub
rolb
xchg
add
and
inc
sub
test
in
jge
inc
daa
fcoms
jb
pop
sbb
lods
ficomps
jg
adc
mov
mov
jge
ret
pop
xchg
jl
add
out
cld
jo
fidivrl
xchg
sub
pop
xlat
pusha
call
mov
add
inc
sbb
xor
arpl
in
leave
push
sub
fdivrs
or
int3
cmc
lock
fidivrs
ss
push
fisubrs
sub
insl
jge
stc
xchg
xor
xlat
roll
outsl
lret
xchg
rolb
mov
cld
dec
fsubrl
lods
adc
fsts
add
cmpsb
dec
adc
or
mov
or
dec
pusha
js
xor
testb
and
pusha
pusha
cli
movsl
mov
push
fmull
push
push
test
cltd
icebp
add
in
mov
sub
mov
pop
jb
in
sbb
das
sbb
pop
in
std
sub
inc
in
xchg
aas
cmpsl
dec
add
or
push
adc
movsl
dec
std
outsl
inc
rcll
shl
mov
icebp
pop
xchg
inc
mov
xor
xchg
enter
iret
mov
mov
test
pop
loop
xchg
popf
jg
xor
or
jp
sbb
jnp
test
xchg
mov
frstor
jo
or
subb
add
int
enter
cmpsl
jo
cs
or
push
iret
dec
pop
xchg
cld
and
and
sub
jne
mov
arpl
sbb
sub
scas
pop
xchg
push
fmull
nop
cmpsl
test
mov
mov
clc
adc
ljmp
out
mov
add
sbb
lods
and
mov
pop
push
test
push
sbbl
test
clc
stos
or
cmp
mov
sub
dec
xchg
cmp
mov
jecxz
jecxz
sarb
lahf
stos
pop
mov
cmpl
pop
inc
mov
mov
xor
pop
int
std
mov
mov
fwait
xchg
cmp
stos
imul
add
pop
jmp
or
popf
jmp
pop
or
jmp
call
popa
or
mov
dec
rorl
pop
iret
aam
cs
je
push
std
pop
ret
imul
xchg
sbb
cmp
mov
mov
mov
into
mov
lock
int
mov
scas
xchg
jg
lahf
lea
scas
outsb
sbb
fldl
cwtl
pop
sahf
imul
cltd
outsl
add
adc
dec
fidivl
sub
lea
movsl
shll
fistps
push
cltd
mov
repnz
inc
mov
sub
push
mov
mov
into
into
pusha
dec
push
les
fmul
xlat
add
movsb
inc
sub
jno
test
pop
cli
xchg
ret
pop
inc
fstpl
loop
lret
movl
adc
addr16
ret
js
sbb
test
into
add
dec
mov
sbb
fldt
dec
out
sbb
mov
aas
fdivrp
mov
ficomps
xchg
add
fdivr
out
lcall
pop
pop
sub
out
pusha
pop
xor
lods
or
test
or
push
andb
leave
enter
pusha
xchg
sub
lock
lea
repz
xor
push
pop
cwtl
jno
inc
push
in
and
int3
lea
mov
in
and
pop
rol
int3
adc
push
lret
jns
mov
sub
inc
jnp
ffree
push
out
sub
iret
jae
sti
fsqrt
lret
mov
es
call
xor
int
aad
or
outsb
and
fs
sub
sub
call
xchg
cmp
sarl
xchg
push
cli
sub
stos
lcall
sbb
dec
sub
cmc
leavew
outsb
movsl
xchg
test
lcall
imull
pop
loope
test
push
push
push
adc
cmp
mov
fidivrs
adc
lock
cwtl
pop
dec
dec
popa
xchg
stos
jno
inc
and
xchg
dec
sub
push
movsb
call
mov
imul
adc
push
push
sub
xor
sbb
or
aaa
shrl
sbb
adc
mov
add
std
mov
jo
push
sti
or
insb
ficomps
and
nop
in
sub
jo
loopne
jg
push
xchg
movsl
repz
push
mov
mov
mov
pusha
test
outsl
insl
fadd
or
lahf
lret
test
fiaddl
or
divl
jmp
enter
push
nop
jns
and
out
mov
dec
jge
dec
xchg
mov
pop
clc
imul
xor
and
fisubrs
add
fmull
push
xor
stos
out
int3
out
xor
mov
xor
hlt
cld
pushf
je
cs
or
stos
xor
xchg
push
loope
sbb
jb
pop
or
stos
and
lahf
lods
fwait
lret
popf
xchg
mov
cmp
std
mov
mov
mov
adc
ja
sbb
rol
lods
icebp
decl
enter
sub
popf
dec
mov
push
mov
repnz
and
sahf
out
data16
jns
loopne
mov
xchg
jns
mov
xchg
push
lods
inc
jnp
mov
int3
rcll
push
inc
popa
mov
je
div
ds
xchg
jge
lret
mov
insl
cmp
ret
jb
xchg
shrl
out
cwtl
lock
test
nop
lods
enter
dec
jnp
leave
dec
out
stc
sub
lret
push
loope
in
in
insl
jmp
fildll
shl
stos
sti
add
jge
cmc
jo
and
mov
insl
sub
jp
stos
jnp
jb
xor
ret
pop
rolb
xchg
hlt
xchg
jne
push
cmp
dec
test
mov
mov
leave
enter
mov
gs
inc
flds
imul
jmp
jbe
jp
push
loopne
mov
pop
bswap
loope
pop
mov
daa
arpl
push
push
fsub
sti
out
popa
lahf
jle
push
loopne
xchg
push
inc
sub
sbb
pusha
pop
out
hlt
roll
cmp
mov
push
lret
pop
mov
sub
jg
stc
add
sub
scas
push
lahf
xor
adc
leave
adc
imul
jne
gs
adc
mov
jp
add
sbb
cmc
repz
mov
les
fistpl
sbb
jmp
sahf
lret
cmp
mov
sub
andl
adc
jmp
hlt
mov
cmc
cmp
popf
aaa
loopne
cmc
aaa
shrl
sbb
mov
andl
xor
test
sahf
mov
adc
hlt
lret
aas
adc
movsb
repnz
cltd
dec
mov
ja
and
loop
iret
iret
jp
dec
jne
jle
cwtl
roll
repnz
iret
cmc
fwait
leave
fcom
cmc
xorl
fistl
bnd
loope
jo
ficoms
and
fcoml
mov
push
mov
mov
fiaddl
xor
test
inc
aad
or
cmpsb
sbbb
arpl
lea
clc
lcall
ljmp
pop
lret
lods
ja
pop
inc
imul
mov
adc
sahf
adcb
jno
add
push
cld
fdivl
shll
jae
ret
scas
out
sbb
push
fdivrs
test
mov
dec
add
fprem1
scas
dec
enter
or
std
sahf
sbb
dec
adc
pop
sbb
xor
mov
rolb
mov
pop
int
mov
push
decl
aad
cmp
or
push
mov
leave
xchg
int3
inc
xor
cltd
gs
dec
sub
data16
mov
mov
fldl
jge
jne
add
xor
add
adc
push
xorb
and
xlat
sub
inc
pop
xchg
ljmp
xor
push
mov
xchg
scas
enter
std
push
adc
adc
xchg
aaa
jo
push
xor
and
dec
daa
shll
xchg
push
xchg
clc
js
jns
aam
insl
and
aas
sub
int3
push
cmpsb
sub
or
mov
clc
loope
seta
push
jg
and
adc
aas
sti
and
add
jbe
aam
addr16
mulb
leave
jecxz
mov
pop
adc
int3
int3
lds
fimuls
sbb
in
xor
notl
xchg
shll
and
nopl
or
xlat
and
into
or
cs
and
sub
push
jno
aaa
popf
mov
lret
mov
or
cmc
dec
pop
push
dec
mov
notb
dec
adc
xchg
js
jbe
and
pop
cltd
movl
jno
ja
inc
dec
jae
xchg
mov
mov
mov
xchg
or
loope
inc
stos
push
shlb
add
mov
iret
mov
push
ljmp
das
push
repz
aaa
out
mov
andb
testl
fadds
ficompl
dec
inc
adc
daa
ja
and
sub
je
pop
sub
mov
sub
out
mov
pop
xchg
sbb
shl
addr16
repz
or
shlb
adc
mov
adc
inc
or
cltd
out
xchg
cld
push
mov
mov
out
push
aaa
repz
and
or
hlt
jb
inc
idiv
dec
mov
test
imull
mov
and
or
popa
xchg
push
sub
jmp
sub
repnz
dec
movsl
mov
rclb
jmp
add
int
clc
inc
jmp
sub
movsb
or
push
inc
jmp
popa
dec
jecxz
push
mov
mov
fs
and
cli
je
jae
jns
dec
cmpsl
fsubr
nop
cltd
add
movsl
icebp
add
push
outsb
shrb
hlt
mov
mov
xor
add
cmp
push
test
movsl
mov
mov
inc
cmpsl
mov
xor
cmc
inc
adc
stos
jl
push
inc
ficompl
outsb
loopne
outsb
dec
lods
daa
dec
dec
jmp
adc
jmp
xchg
dec
into
or
pop
jno
mov
inc
in
repz
ja
or
addr16
inc
push
jbe
xchg
sarb
push
mov
repnz
jbe
aas
push
or
sbb
test
repz
in
aaa
dec
bound
mov
inc
cmp
enter
dec
inc
movsl
jl
xor
pusha
fwait
clc
rol
cli
popa
pop
push
outsb
mov
cmpsb
xlat
lcall
stos
lret
push
lds
ds
mov
repz
mov
fdivl
gs
cmc
adc
and
sub
jae
xchg
and
outsb
xchg
stc
movsb
cmpsl
inc
fstpl
mov
xor
scas
pop
bound
dec
pop
pop
and
mov
mov
ret
ficoml
pop
cmpsb
lods
stc
sbbl
push
xor
mov
cmc
popa
xchg
gs
sbb
test
and
pop
ss
leave
dec
mov
cmpsb
out
fiadds
xchg
je
mov
jle
in
loope
ja
bound
mov
mov
lods
xor
cmc
stos
sbb
mov
imul
ds
pop
pop
pop
leave
pop
loopne
jp
call
addr16
xor
ficoml
adc
and
sub
rcrl
xor
jne
jae
ret
adc
add
test
mov
jno
push
cltd
sarl
mov
mov
pop
xor
jmp
adc
je
aad
push
jbe
andl
shl
lea
mov
adc
mov
xchg
cmpb
cld
adc
dec
pop
mov
push
repnz
push
lock
cmp
mov
mov
and
shll
clc
push
cmovs
mov
mov
sub
stos
push
enter
jb
cwtl
aaa
or
or
clc
sbb
in
mov
cwtl
dec
ds
gs
ds
add
push
out
xor
push
jnp
aas
cwtl
clc
jp
movlps
pop
inc
mov
mov
inc
mov
add
jp
or
test
gs
push
inc
jbe
lods
xor
pop
fldcw
lea
xchg
sbb
test
xorl
add
ret
test
pop
cmp
pop
daa
mov
dec
inc
aas
loope
sbb
adc
jle
xchg
js
cmp
adc
in
sbb
inc
push
das
xor
mov
test
dec
add
sub
fadd
inc
inc
ljmp
dec
xchg
cli
inc
leave
lcall
in
cmp
adc
mov
and
xchg
repz
add
aam
jae
push
daa
adc
cmpsb
add
idiv
sbb
call
mov
std
jl
ret
xchg
iret
pushf
xor
push
push
movsl
pop
aad
xchg
jno
imul
sbb
sub
xchg
cltd
fcoms
pop
jmp
movsl
popa
popf
dec
loop
fstps
test
call
pop
dec
mov
sub
mov
xchg
fcompl
fwait
dec
repz
fyl2x
push
mov
pop
aad
jae
push
mov
scas
leave
jb
mov
popf
icebp
out
mulb
sub
je
jge
jo
sbb
test
jp
aam
jp
sub
cld
and
ret
loop
mov
sbb
subl
cs
ret
xor
ja
push
mov
dec
inc
mov
cmp
mov
div
cmp
push
mov
out
sbb
jae
lcall
movsb
jmp
mov
adc
out
and
inc
push
fimuls
fs
add
adc
imul
cmp
scas
add
dec
adc
fisttpl
jbe
xchg
cs
mov
xchg
push
out
test
mov
popf
xchg
and
call
pop
and
sbb
or
mov
loop
xor
notb
xchg
repnz
cmp
roll
push
push
repz
or
cmpsl
or
mov
pushf
dec
jns
mov
xchg
pop
or
adc
xor
mov
mov
icebp
sub
xchg
cli
pop
mov
pop
test
bound
stos
pop
dec
fwait
mov
fiadds
shrl
add
fs
dec
cmpsb
pop
fcoml
rorl
mov
push
repnz
dec
jno
repz
dec
cmp
add
cs
icebp
push
mov
jno
pop
fcoml
push
out
or
js
sub
lret
mov
adc
jl
xchg
aaa
and
arpl
cwtl
test
repnz
mov
jae
ds
sub
inc
addl
sub
sbb
add
int
mov
add
int
add
test
mov
push
fcmovb
dec
insb
jg
cld
adc
adc
mov
cmpsb
mov
enter
xchg
pop
in
xor
aad
mov
push
testb
adc
cmp
test
shlb
outsl
das
sub
test
inc
dec
ja
pop
pushf
mov
adc
push
jb
pop
xchg
add
inc
push
test
add
mov
push
pop
icebp
xor
sub
cli
clc
loope
inc
stos
sbb
nop
inc
sub
jmp
sub
shl
popa
std
shl
adc
pop
inc
shr
and
bound
xchg
mov
sub
call
ds
rclb
mov
mov
inc
push
or
adc
mov
leave
mov
jp
andl
sub
int3
fcomps
mov
sub
stos
stc
lahf
pop
cmp
push
lcall
xchg
pusha
xor
cmpsl
stc
test
pushf
inc
mov
add
push
xchg
cmpb
add
mov
fwait
adc
xchg
and
lret
xor
fcoml
mov
mov
xlat
in
mov
jo
cmp
mov
and
jmp
lods
rcrb
or
push
in
movsb
imul
pop
cmp
jle
cmp
jo,pt
addr16
and
sbb
jnp
mov
aas
hlt
test
sub
aad
lods
fsub
mov
push
imul
xor
and
loope
test
inc
add
pop
add
or
xlat
mov
cld
aaa
mov
hlt
mov
and
sbb
orb
test
jo
add
stc
push
lret
fdivrl
cli
imul
adc
xor
push
sbb
adc
sub
sbb
aad
sub
and
clc
push
push
sbbl
inc
iret
hlt
roll
dec
inc
dec
inc
dec
xorb
movsb
mov
dec
ds
repnz
jle
xor
sbb
scas
les
inc
xchg
not
cmp
stos
cs
xor
add
inc
in
lods
in
dec
lea
fimull
bound
inc
cmp
mov
mov
dec
push
dec
jge
clc
icebp
push
inc
mov
sbb
mov
or
push
lock
fs
push
pop
pop
in
arpl
ss
faddl
cmpsb
leave
xor
enter
dec
sbb
pop
sahf
xor
push
mov
movsb
push
mov
mov
outsl
mov
hlt
popa
clc
shll
push
mov
rorb
stc
dec
mov
xchg
popa
mov
jge
aas
shlb
and
or
in
mov
sub
sub
ljmp
push
xlat
jb
mov
dec
into
movsl
scas
test
pop
mov
not
dec
std
test
dec
xor
rolb
in
sub
xor
cmc
flds
inc
mov
mov
jbe
sub
dec
filds
push
insb
jns
popa
and
bound
sub
cmp
pop
and
insb
mov
shlb
push
mov
enter
popf
popf
pop
lahf
jno
repz
out
add
ret
cmp
dec
jecxz
inc
and
jae
das
mov
aas
sub
pop
clc
addr16
orl
mov
add
inc
cmp
sbb
test
rep
jnp
int3
inc
mov
rcrb
or
push
push
xchg
sahf
dec
pusha
mov
leave
jne
cmp
js
jge
mov
cmpl
mov
xchg
lcall
and
cmp
popa
out
mov
adc
add
sar
sar
fs
push
pop
jmp
push
shl
cltd
push
mulb
jp
or
inc
in
test
add
jmp
movsl
scas
jp
jb
in
inc
mov
clc
sbb
dec
pushf
xchg
js
jne
dec
mov
lea
lahf
and
mov
jo
pop
inc
arpl
outsb
lea
add
sbb
clc
mov
jns
stos
in
mov
sbb
movsl
pushf
and
cmp
fcmove
add
xlat
les
sub
sub
lock
pop
repnz
loope
push
push
in
js
dec
or
mov
adc
ja
sub
jb
add
pushf
and
jns
lock
into
loope
cmp
push
cwtl
lock
xchg
scas
xchg
push
mov
sbb
ds
xchg
lods
mov
and
aaa
or
incl
mov
or
xor
imul
or
hlt
xchg
sub
fidivrs
ror
cmp
icebp
je
push
xor
mov
jno
in
mov
inc
ja
seto
inc
push
adc
je
sahf
mov
xchg
sbbl
fistps
test
adc
jno
movd
add
xchg
popf
pop
push
and
xchg
xor
add
sbb
and
jp
lods
loop
repz
push
mov
fnstcw
jae
sbb
xchg
xor
nop
stos
rorl
ljmp
dec
cmp
mov
enter
adc
xchg
mov
inc
jae
lock
call
sub
fwait
inc
pause
dec
mov
ret
cmpsl
sti
addr16
jg
loopne
mov
pop
outsb
rorb
mov
xchg
inc
jle
mov
mov
sbb
push
daa
jbe
lea
lock
shll
add
add
push
fwait
push
std
sbb
cltd
sbb
sub
fidivs
testl
mov
xlat
shlb
jecxz
or
roll
jb
outsb
sub
out
jle
mov
es
pop
lret
cmpsl
mov
aam
stos
sahf
xchg
fcom
mov
sti
xor
xchg
adc
dec
into
cmpsl
sub
popf
lret
mov
mov
popa
in
leave
jno
fs
enter
clc
and
pop
sub
cmp
jmp
jo
push
cli
jecxz
sbb
sahf
jae
adc
or
pop
mov
out
out
fiadds
dec
xchg
out
mov
js
pusha
adc
ss
or
pop
movsb
mov
inc
lahf
popa
or
ficompl
fdivrs
xchg
bound
xchg
or
sub
loopne
mov
sub
fadds
xor
pusha
lea
cmp
and
ja
pop
cmp
fwait
xor
cmpsb
icebp
stos
xor
xchg
jle
adc
sub
test
xchg
xor
inc
stc
mov
sub
pop
sbb
or
mov
xchg
inc
sbbb
leave
jnp
int3
mov
test
ljmp
dec
lahf
cmpsb
in
xlat
mov
sarl
imul
cmp
sbb
jmp
lea
in
cltd
jmp
xchg
mov
ret
loopne
xchg
aam
ret
sbb
mov
xor
hlt
mov
xchg
movsb
pop
or
jecxz
adc
sub
fldl
aaa
xor
lret
sbb
notl
bound
jle
add
xchg
shll
repnz
push
xlat
adc
in
or
mov
xchg
and
jnp
icebp
inc
mov
out
mov
mov
or
xrstors
jge
fisttps
in
pop
mov
aaa
mov
or
leave
das
shrb
sarl
std
and
inc
ja
test
adc
ss
ljmp
or
cs
mov
iret
push
ss
out
iret
pusha
lahf
xchg
or
dec
cld
bound
hlt
imul
jle
or
cmp
shlb
out
dec
mov
stc
xor
jnp
nop
cld
ret
sub
out
inc
inc
xchg
push
int
xor
pop
aaa
xor
cmpsl
inc
push
jge
and
loop
cmpsw
cmpsl
mov
mulb
jno
xor
push
xchg
decl
push
mov
pop
ss
fists
orb
or
clc
add
mov
jb
push
mov
dec
addr16
pop
inc
loope
dec
cltd
jmp
es
ljmp
out
fwait
inc
xor
pop
push
jb
out
sbb
cmpsl
popf
loop
jns
push
test
lcall
in
mov
into
mov
jne
popa
pop
add
daa
fdivrs
jne
mov
xor
lods
sarb
lret
push
pop
cmp
mov
push
cmp
jnp
test
insl
into
lcall
sub
ljmp
xor
data16
or
inc
popa
push
test
leave
bnd
dec
nop
jmp
mov
jmp
sbb
ja
or
enter
mov
mov
mov
xor
pop
inc
mov
cmp
lahf
add
enter
pop
cmp
test
sub
lods
js
cli
cmp
sahf
dec
int3
stos
cmp
or
pop
aas
add
leave
into
dec
loope
push
lahf
cmp
sbb
test
fisttpl
bound
ror
or
test
jl
popa
mov
addl
repnz
ror
insb
mov
ret
repnz
stc
les
pop
incb
inc
jb
mov
adc
aam
add
adc
push
les
orb
lock
sbb
cmp
in
gs
inc
mov
rclb
inc
outsb
xor
or
jg
and
sub
mov
rcrb
popf
leave
imul
pop
icebp
arpl
lret
aas
sbb
sahf
sbb
adc
ror
xchg
jne
mov
push
sub
je
pop
adc
xchg
cwtl
scas
pop
stc
sub
inc
fimuls
ljmp
xchg
pusha
add
xchg
jnp
pop
xchg
daa
test
pop
mov
dec
lret
maskmovq
mov
in
test
mov
push
push
fbstp
call
inc
adc
mov
inc
adcb
mov
movsb
sbb
dec
adc
push
sahf
movups
mov
push
or
xor
or
jae
push
or
mov
shll
inc
xchg
enter
ja
fsubl
inc
jecxz
push
cvtpi2ps
mov
int3
js
ret
test
sub
jle
and
and
push
dec
sbb
sub
mov
scas
pop
or
pop
pop
lcall
add
out
dec
jle
pop
cwtl
call
sahf
adc
mov
insl
dec
mov
test
lret
add
out
out
pop
or
lock
or
hlt
dec
movaps
imul
sti
insl
cmp
sbb
shrb
scas
inc
sub
sbb
pop
nop
fprem1
adc
add
cld
mov
xchg
ret
rcr
notb
in
lock
xor
out
sbb
fwait
ret
jns
int3
pop
pop
outsl
mov
cmp
cmp
and
hlt
rorb
es
into
test
shrl
pusha
scas
xor
pop
fistpll
xchg
mov
cmpb
jbe
pop
mov
push
leave
inc
xchg
inc
dec
jecxz
scas
dec
mov
fwait
jp
add
js
mov
mov
mov
repnz
lcall
js
dec
je
es
aaa
lods
and
dec
in
or
test
gs
lea
jecxz
and
jmp
inc
push
inc
sub
pop
xor
add
pop
mov
mov
les
mov
out
int3
xlat
or
gs
int
sub
jmp
scas
fildll
pop
mov
ja
les
enter
shll
loopne
and
cmpsb
icebp
mov
lock
lcall
adcl
mov
xlat
nopl
pushf
pop
ret
jb
int3
loop
sahf
stc
pop
xor
int3
dec
stos
sahf
cmp
dec
shr
push
mov
orb
mov
sub
pop
jl
pop
push
dec
xchg
inc
inc
out
and
roll
or
lods
jae
inc
push
loop
outsb
lcall
daa
xchg
iret
xor
je
cmpb
nop
loop
or
cmp
sarl
xor
mov
in
inc
aam
mov
inc
and
test
and
mov
stc
test
les
add
pop
xchg
pusha
mov
jmp
fsubrs
ret
mov
lret
btr
or
dec
das
cwtl
daa
stos
push
and
dec
movsl
push
push
sbb
lods
pop
mov
xchg
test
and
mov
push
ds
inc
ret
pop
mov
ja
push
sbb
add
jl
stc
ja
int
pop
inc
in
in
pop
cwtl
popf
jp
mov
cld
les
aas
call
test
jae
ljmp
sub
nop
jmp
add
xchg
inc
out
push
pop
jnp
insl
xchg
push
stc
shl
xor
imul
adc
inc
or
or
test
icebp
or
lods
mov
or
lods
mov
loopne
pushf
jno
push
in
inc
and
inc
xor
cmp
pop
dec
fs
sbb
mov
mov
push
out
lret
loopne
test
stos
or
les
test
pop
sub
sub
jnp
or
or
mov
cmp
iret
lds
mov
cmpsb
in
pop
xor
fstl
xlat
and
mov
mov
cltd
pop
push
mov
jecxz
sub
and
repz
lock
pop
mov
mov
cld
cmpsb
push
pop
clc
loopne
loope
fisttpl
fwait
popa
adc
cs
clc
sub
repz
test
insb
mov
pop
dec
mov
stos
inc
and
push
data16
or
dec
mov
dec
mov
das
rcll
mov
add
fbstp
jecxz
je
dec
or
inc
out
mov
loope,pn
mov
sahf
mov
cmp
imul
stc
in
mov
lods
lods
jl
out
movsl
pop
add
mov
inc
int
push
lcall
dec
cmp
ja
fisubl
inc
pushf
add
mov
shll
cmp
inc
mov
pop
adc
pop
in
sub
adc
mov
fidivrl
rorb
dec
add
lods
add
clc
rcl
push
xchg
and
push
or
and
sbb
jp
fwait
pusha
stc
mov
pop
mov
cmp
mov
sbb
pop
pusha
cwtl
dec
mov
aam
xchg
inc
adc
add
pusha
xor
or
mov
sbb
fbstp
pop
pop
test
inc
fs
dec
mov
adc
add
jecxz
xchg
ljmp
cmp
pop
lods
shll
adc
nop
mov
mov
idivl
mov
mov
mov
clc
das
andl
enter
sbb
mov
std
loop
fld
jmp
dec
add
xchg
shrl
mov
test
ret
cwtl
push
push
aam
mov
cmp
cwtl
sbb
fsubs
jnp
cmpsb
movsb
outsl
aas
andl
inc
ds
loopne
mov
push
push
xor
decl
push
mov
pushl
jl
lock
in
dec
adc
jecxz
inc
test
or
and
mov
inc
cmp
adc
lret
mov
or
push
push
xchg
into
lcall
dec
ror
jmp
dec
jns
ss
inc
xor
out
addr16
push
cwtl
fisubrs
es
test
mov
in
in
lahf
pushf
fwait
cmp
xor
cmp
out
xchg
pushf
sbb
aaa
shlb
mov
jns
mov
pop
pop
pop
ss
mulb
cmp
pop
adc
test
imul
push
jge
in
aam
je
cmpsb
rolb
xor
inc
ret
jecxz
adc
dec
add
push
or
ljmp
jmp
hlt
push
nop
out
outsb
inc
pop
push
adc
fucomi
jns
mov
jp
add
orb
cmp
jmp
inc
adc
cmp
pop
push
loope
enter
int3
lock
in
cmpsl
push
dec
xchg
pusha
stos
inc
je
jae
and
filds
adc
lret
fdivrs
jmp
push
add
add
loop
mov
pop
ret
cmp
int
push
and
inc
dec
cmp
mov
pop
shrb
out
mov
inc
sub
sbb
add
xchg
xlat
into
sub
push
cmp
push
in
dec
mov
push
cmp
inc
fisubs
xchg
pop
sub
rolb
lods
sahf
mov
scas
mov
cmp
fcompl
dec
xor
jmp
mov
arpl
jno
jnp
xorb
call
sbb
mov
scas
addl
push
inc
mov
fs
lods
sbb
xlat
jne
mov
pop
push
mov
mov
lret
pop
arpl
testb
jmp
jae
dec
xlat
push
pop
pop
sarb
sbb
out
mov
dec
arpl
pop
push
and
iret
cli
sbb
filds
cwtl
cmc
jbe
out
dec
aam
ljmp
rcl
rorl
fwait
jge
stos
mov
mov
push
insl
loop
jge
add
sub
stos
insl
mov
pop
xchg
adc
gs
loope
leave
sbb
clc
cmp
js
popa
adc
add
negb
data16
adc
push
adc
inc
into
sbb
loope
add
and
fidivl
fisubs
dec
inc
pop
test
cmp
sub
inc
inc
jo
push
push
insb
stos
outsb
fmuls
jb
pop
xchg
clc
sbb
jae
mov
jp
lods
popa
mov
out
sbb
jnp
clc
push
lahf
test
push
lahf
out
popa
push
add
cmpsl
testb
je
stc
mov
sub
cmp
adc
ficomps
lahf
mov
out
outsl
mov
ret
jge
cwtl
les
out
jecxz
mov
adc
lds
pop
arpl
ret
call
and
and
outsb
inc
mov
mov
add
bswap
sub
inc
xchg
dec
popa
loope
rolb
adc
aas
int3
call
lar
adc
sub
cmp
shlb
push
dec
mov
jge
mov
ss
in
cli
pop
and
scas
aas
mov
popa
in
jb
cmc
xor
inc
add
adc
out
popa
es
lcall
pop
in
gs
insb
mov
ljmp
add
dec
jge
clc
adcl
xchg
in
shll
gs
mov
mov
xor
add
fimull
inc
not
lcall
repz
cmp
mov
cmp
push
jbe
aaa
and
sbb
mov
jb
mov
pop
cmp
movb
cmp
cmp
sahf
push
sbb
aas
pushf
imul
in
dec
pop
in
sbb
mov
in
jbe
out
popf
outsl
pop
cmp
mov
bound
push
and
stos
inc
adc
lea
jns
dec
cmp
xchg
sbb
hlt
daa
cs
std
inc
mov
je
pop
jmp
dec
mov
jge
or
xchg
jl
aaa
mov
or
rcrl
pop
arpl
push
xor
or
sbb
pop
addr16
push
sub
insl
mov
popf
xchg
rorb
test
adc
adc
ljmp
dec
lahf
pop
or
inc
jle
sub
lea
rclb
sti
lea
popf
adc
lds
sbb
pop
push
rclb
scas
scas
push
jb
out
xchg
and
pop
popf
jp
lods
dec
jnp
popa
mov
cmp
adc
dec
cmp
hlt
push
push
sbb
stos
icebp
add
jg
mov
mov
lret
fs
dec
adc
xor
sbb
out
push
fcomip
mov
loope
fmul
lea
and
jbe
inc
jb
int3
xlat
add
orl
bound
cmp
shl
ss
rcrb
sub
nop
mov
mov
jne
push
fdivl
mov
adc
cmp
xchg
popa
mov
loopne
inc
dec
cmc
jge
icebp
cmc
insb
or
ud0
mov
dec
cmp
mov
ret
xor
inc
test
mov
shrb
cmp
out
orl
xchg
insb
in
cltd
xchg
and
sub
stos
mov
nop
jo
std
cmpsb
scas
xchg
testb
xorb
lret
xchg
sbb
subb
dec
int3
lds
int
into
in
mov
mov
xor
movswl
stos
test
jae
clc
mov
cli
lds
jno
fdiv
out
loopne
mov
dec
into
mov
dec
in
imul
test
push
aam
stos
das
ja
popa
sub
sub
mov
pop
icebp
push
out
mov
pcmpeqd
cmpsl
cld
mov
jns
mov
cmp
xchg
mov
push
or
hlt
pop
or
xor
int
mov
mov
cltd
adc
fmull
sbb
sbb
popa
mov
push
mov
jecxz
mov
out
pop
sub
push
add
aas
jge
ja
push
sahf
cli
icebp
cwtl
inc
push
add
sub
fcmovu
sbb
add
orps
or
mov
push
jmp
mov
repnz
sti
sbb
mov
push
pop
pop
dec
fst
mov
movlps
xor
subb
cli
pop
adcb
cli
mov
jge
pop
xchg
repnz
add
imul
dec
dec
add
iret
das
mov
push
lea
lds
dec
add
and
in
xor
add
pop
push
test
mov
test
aas
stos
stc
mov
and
xchg
loope
gs
cwtl
aas
xchg
xor
insb
in
lret
pop
cmp
dec
xchg
mov
push
lcall
push
mov
sbbb
arpl
mov
daa
and
and
stos
jo
fsubrp
and
lods
adc
dec
sarb
pop
sbb
arpl
scas
cmp
jo
leave
orl
inc
mov
push
pop
xchg
sub
mov
mov
orb
mov
outsb
cmp
hlt
jg
aaa
pop
cmp
shrb
xor
pop
inc
decb
inc
in
not
pusha
mov
jg
dec
and
inc
lods
mov
xchg
fsubs
int3
mov
ret
std
adc
ret
sarl
sbb
push
mov
sbb
sahf
pop
or
movsb
rclb
insb
mov
xchg
mov
iret
in
mov
pop
in
loope
xchg
sub
aad
insl
sub
mov
je
xchg
pop
inc
ret
add
sti
xchg
cmpl
insb
aaa
adc
in
jl
cs
mov
push
push
cmc
ret
push
adc
add
pop
daa
js
sbb
les
test
cmp
int3
sbb
std
leave
jne
ds
push
and
xorl
hlt
icebp
cwtl
popf
lahf
les
enter
mov
xor
dec
cs
or
notl
push
mov
lea
mov
push
int
mov
adc
jle
xor
jnp
mov
ret
push
pop
jge
test
adc
xor
xchg
add
lcall
and
out
dec
mov
call
cld
imull
jo
adc
lods
stc
inc
fisttpll
adcl
sub
jb
pop
enter
mov
sbb
jns
loop
and
adc
inc
xchg
fbld
adc
mov
pusha
mov
add
xor
cmp
cwtl
ljmp
jb
mov
scas
enter
cli
pushf
loopne
cmpsl
sub
xchg
and
jae
push
jp
jg
sbb
bound
mov
cmp
inc
sbbl
pop
lcall
iret
call
push
cmp
pop
insl
test
orl
jb
jnp
mov
shl
mov
sahf
xlat
into
jmp
cwtl
daa
ds
pushf
mov
cmp
sbb
popa
dec
rcl
sbb
ljmp
scas
decb
mov
xor
sbb
ss
dec
mov
or
popf
shlb
lods
mov
jmp
jg
lahf
mov
fwait
push
repnz
xchg
push
out
sahf
lahf
movsl
mov
mov
movsl
sub
out
into
xchg
ja
adc
stos
roll
jmp
mov
inc
sub
inc
outsl
jo
xor
out
mov
cmp
sub
adc
jbe
pop
jns
jns
xchg
mov
add
inc
pop
test
push
cli
loopne
push
dec
jmp
insb
sti
in
ret
mov
pop
xchg
rcll
cli
xor
stos
mov
push
sbb
mov
sub
add
imul
mov
cmp
rorb
jmp
ja
icebp
push
pop
xchg
daa
xor
sub
pop
ja
sbb
adc
xchg
xor
xor
frstor
and
cmp
xchg
or
push
mov
xor
push
frstor
push
iret
insb
pushf
nop
out
in
imul
or
adc
sbb
and
icebp
aas
loope
mov
add
sbb
mov
insl
jb
inc
jg
fdiv
es
sbbl
sub
icebp
pop
xor
fiaddl
les
mov
xor
fsubrl
popa
xchg
xchg
into
shrd
adc
sbb
sbb
cmc
push
or
xchg
ret
cmpsb
pop
gs
pop
lea
push
inc
test
xor
lcall
mov
cltd
repnz
mov
xchg
inc
mov
loope
ljmp
add
mov
bound
mov
movsl
add
rorl
sahf
js
je
movsb
or
mov
shlb
lahf
xor
push
and
mov
pusha
or
pop
mov
xlat
aad
stos
jnp
loopne
push
jecxz
popf
xor
imull
fwait
fs
daa
cld
cmp
loop
jp
cmp
stos
or
jl
jne
aas
cmovnp
cltd
daa
xor
jnp
push
sahf
add
dec
faddl
dec
aas
pop
es
out
aas
xchg
fistpl
popf
test
lcall
jmp
xchg
or
mov
mov
insl
stc
scas
push
rcrb
xchg
cmp
inc
adc
hlt
lods
push
test
int
inc
push
jae
mov
adc
sti
cmc
push
lock
iret
divb
xor
decl
mov
and
mov
aaa
insb
add
test
inc
iret
outsl
and
inc
loop
lods
adc
dec
add
adc
cmp
inc
pop
vrsqrtps
dec
push
sub
aas
mov
mul
and
push
imul
dec
cwtl
pushf
loop
out
movsb
dec
sahf
mov
rclb
push
or
push
std
inc
or
jne
push
inc
in
pop
repz
das
sub
jmp
shrl
jmp
xchg
imul
cmpsb
int
dec
pop
pop
mov
out
scas
lods
mov
pop
jl
leave
push
ljmp
and
cmp
fcompl
aam
inc
pop
xchg
pop
sub
push
mov
sub
cmp
xor
out
ljmp
loope
mov
pop
mov
cmp
jnp
hlt
pop
imul
mov
sub
insl
clc
scas
call
or
lahf
sbb
jns
push
test
lret
and
sbb
cmp
faddl
mov
add
popf
and
insl
fst
outsl
repnz
or
popf
pop
arpl
inc
xor
sti
into
scas
lods
and
dec
movsb
hlt
xor
cwtl
dec
push
dec
in
std
jb
in
xor
dec
fcmovnu
sahf
cmp
aad
idiv
addr16
ja
neg
cmpsb
jg
adc
jb
push
lods
add
je
xchg
or
jno
popf
sbb
lods
sahf
in
popa
xor
lods
fsubl
mov
popa
sub
dec
cmpsb
pop
cmpsl
out
pop
test
into
test
test
mov
daa
mov
sub
mov
test
mov
mov
xor
iret
in
mov
fidivs
aad
xor
and
out
or
sub
xchg
dec
pusha
push
fcomps
movsl
add
push
mov
adc
outsl
sub
cmp
jno
mov
cmpsl
jp
sub
rcll
jmp
je
and
addl
js
in
cmp
lds
test
mov
bound
out
adc
sub
push
jle
dec
shlb
int3
mov
loopne
stc
das
hlt
in
rorl
and
and
imul
jge
dec
jb
push
xor
mov
fsubrl
lock
jno
in
lret
mov
sub
inc
dec
mov
gs
lcall
mov
xorb
imul
inc
aaa
inc
jb
orb
push
push
sub
mov
sub
mov
lret
int
scas
dec
jp
mov
int3
int
adc
dec
xchg
fwait
aam
lds
fwait
pop
cmp
andl
xor
mov
xor
jne
mov
test
mov
das
lods
sbb
xor
jbe
xor
push
mov
scas
pusha
and
inc
lret
pop
scas
ds
or
imul
daa
jmp
insl
xchg
inc
or
add
mov
sub
out
mov
xlat
out
jp
pop
mov
and
push
jae
mov
mov
mov
push
and
pusha
lods
cs
inc
fwait
lret
incl
push
shr
push
jp
ds
div
sub
mov
dec
jecxz
out
aad
push
lahf
dec
std
scas
ret
and
or
cmp
or
xchg
dec
out
je
cwtl
xchg
shl
data16
outsl
faddl
ret
fsub
dec
data16
sbb
push
or
gs
test
addr16
jecxz
push
adc
push
cmp
inc
ljmp
adc
adc
je
popf
mov
arpl
cmc
es
rcl
sbb
popf
push
and
pop
pop
and
cmp
notl
cmp
lds
fldcw
pop
fldt
mov
iret
shll
jb
sub
sbb
addr16
mov
sbb
or
addl
adc
push
mov
fisubs
out
add
sbb
call
in
adc
repz
dec
shrl
fldenv
xor
mov
adc
repz
lea
mov
xor
jnp
jecxz
xor
std
andb
xchg
xchg
outsb
test
inc
int3
xchg
dec
cmp
mov
shlb
mov
cs
cmp
dec
xchg
imulb
sub
jns
or
pop
mov
mov
lock
xchg
les
scas
mov
int
insl
jge
inc
pop
push
sub
and
lcall
jl
repnz
jmp
fists
pop
ret
and
jo
outsw
je
loope
subl
aam
inc
lds
and
stc
mov
fs
jno
adc
aad
and
dec
sub
push
fisubrs
xchg
sbb
lock
mov
icebp
fdivrs
adc
lods
pop
pop
icebp
or
jge
jp
push
lahf
mov
mov
mov
fsubs
cmc
fmul
fst
jno
adc
push
inc
jne
scas
jo
jmp
mov
xor
or
stos
sbb
loope
fdivrl
push
xor
dec
addr16
xchg
mov
arpl
aas
cmpsb
fs
push
cs
or
jecxz
clc
jmp
jb
xchg
xor
mov
and
pop
fdivr
xor
nop
pusha
movsl
mov
ds
push
mov
loop
add
mov
push
sbb
adc
loop
pop
outsl
popl
adc
std
dec
adc
pushf
sbb
popf
and
mov
rcrl
int3
adc
pop
push
je
ss
mov
adc
add
sub
outsb
fwait
xchg
jp
cld
or
es
mov
and
bswap
pop
inc
pop
lahf
or
mov
fs
imulb
fiadds
adc
mov
call
jb
mov
addb
lahf
push
lret
nop
mov
mov
pop
sub
es
pop
fimull
insb
stos
mov
sub
adc
pop
or
xor
fstpl
xor
jg
dec
xor
sub
fidivl
jle
sbb
mov
int
cltd
dec
cmp
pop
mov
jg
scas
jp
shl
jecxz
shrb
out
mov
cmp
mov
inc
pusha
ror
incb
push
push
stos
cmp
dec
lcall
imul
popf
mov
insb
xor
shlb
add
ret
das
jmp
mov
pop
push
adc
int3
mov
mov
andl
cmp
arpl
jno
test
jnp
test
pop
flds
jmp
les
scas
xchg
sbb
mov
mov
push
cld
fistps
mov
jns
les
mov
xchg
es
outsb
xchg
sbbl
insl
pop
sahf
jb
jle
jnp
mov
sahf
xchg
ds
lret
mov
xchg
jns
jnp
mov
xchg
lahf
jmp
xor
stos
hlt
cwtl
mov
lret
cmp
or
ret
fiaddl
les
pop
mov
pop
push
pop
or
add
in
fs
lret
test
jle
daa
out
in
mov
lret
fsubs
in
shrl
out
fsubrs
outsb
mulb
pop
mov
pop
push
jbe
sahf
jmp
jp
insl
imul
sub
jne
loope
popa
outsl
lcall
ja
lahf
and
les
sub
xor
jae
jae
pop
mov
es
jge
jb
inc
cmp
push
xchg
inc
loope
int
and
adc
int3
xchg
mov
jge
lods
mov
movsb
inc
pop
sub
scas
repnz
addb
jg
mov
repz
xor
push
decl
dec
sub
sub
mov
cs
mov
ret
mov
sub
test
rcrb
aad
fldenv
les
sbb
xor
call
lods
push
into
xchg
mov
pop
out
insl
out
aam
pop
xchg
sbb
dec
xchg
testb
fcmovu
cs
jb
in
dec
inc
icebp
aaa
inc
pop
inc
negl
dec
in
jbe
add
stc
dec
mov
idiv
daa
imul
je
in
in
mov
lcall
aad
xchg
and
inc
lods
fadd
xchg
imul
add
pop
xchg
jg
dec
dec
repz
push
push
xor
pop
fsubrl
scas
fwait
jno
bound
pop
fcmovnb
push
inc
push
mov
in
fiadds
js
inc
fwait
mov
sti
jne
movsl
dec
add
in
lret
iret
sub
arpl
pop
sub
inc
sahf
out
mov
push
int3
int
lret
adcb
mov
push
xor
adc
inc
adc
mov
pop
subb
mov
stc
out
mov
xchg
mov
push
test
clc
add
sbbl
jg
ret
jb
push
popf
push
shll
sbb
xchg
sub
sarl
and
xchg
adc
or
idiv
sbb
scas
mov
out
cmp
dec
lock
push
int3
add
adc
jg
addl
and
call
push
test
or
bound
jg
xchg
cmp
and
xchg
jecxz
xchg
iret
add
inc
lea
stc
dec
mov
or
mov
fs
insb
ljmp
xchg
testl
stc
movsb
or
push
stos
cmpsl
cs
mov
pop
add
or
mov
sbbb
jae
shl
aad
fistpl
and
mov
jecxz
and
mov
xchg
mov
enter
add
pushf
enter
inc
jbe
pop
and
bound
aad
pusha
xchg
push
xchg
push
mov
int3
add
mov
adc
sub
stc
sub
lret
mov
inc
loop
pop
clc
sarl
pushf
jo
fdivr
jp
mov
inc
mov
scas
sbb
sbbb
push
adc
divl
repz
sbb
cmc
aad
aaa
pop
dec
jge
pushf
mov
movsl
mov
sbb
cmp
push
cs
mov
mov
popf
dec
xor
xor
rclb
sbb
fs
and
aad
test
cs
or
xchg
rorb
xor
fwait
leave
lret
int
aad
xor
push
movsl
or
and
inc
push
mov
xor
daa
xchg
inc
dec
cld
jb
jb
jmp
mov
leave
jecxz
or
mov
adc
mov
push
addr16
xlat
out
lret
pop
stos
mov
mov
pop
mov
jb
jbe
cmp
loope
scas
int3
jl
aas
push
xorb
lds
aaa
push
cmc
cmpsb
loop
lods
lcall
mov
mov
and
mov
or
pop
jmp
push
rcll
push
xor
idiv
sbb
int
push
ljmp
les
lret
fildll
xchg
outsb
loop
in
notl
das
clc
mov
in
dec
cmpsl
fistps
mov
pop
inc
or
mov
lahf
pop
pop
dec
xchg
and
sti
popa
arpl
loope
xchg
jnp
add
stc
add
jmp
xchg
pusha
mov
aad
inc
fcoms
mov
cld
sbb
mov
addl
mov
xchg
xchg
pop
cmpsb
clc
hlt
jns
rcrl
xor
mov
mov
sub
add
arpl
push
mov
lret
int3
addr16
ret
inc
adc
add
dec
ljmp
dec
sbb
movsl
inc
and
push
push
sarl
sbb
adc
icebp
xchg
cmc
push
push
fisubrs
or
push
insl
pop
mov
xor
dec
aaa
test
icebp
mov
add
adc
pop
pop
add
xchg
xchg
xor
pop
adc
rcrl
sub
imul
fsubs
imul
arpl
push
aaa
fsubrp
imul
repz
push
fdivrl
push
in
insl
test
nop
mov
cmp
xor
lcall
addr16
mov
popf
fisttps
ror
dec
and
lock
xchg
mov
jno
jbe
xchg
or
sarb
fnstsw
xor
push
xor
ds
jne
inc
das
out
std
jb
dec
inc
jb
test
call
mov
push
jo
sti
aad
adc
sub
cmp
or
cld
cwtl
flds
adc
outsb
push
call
jl
push
and
mov
popf
inc
sub
jne
mov
sbb
xor
push
sahf
jle
mov
lods
pop
pop
add
jl
cwtl
sub
les
pop
popf
jmp
imul
sub
and
aas
imul
or
cltd
in
inc
add
out
out
ret
cmpsl
insb
xor
inc
fwait
and
outsl
xor
xchg
adcl
mov
cmp
test
mov
fwait
repnz
pop
call
lcall
jb
inc
mov
dec
sahf
in
shr
outsb
shlb
test
aam
shrb
xor
sti
and
mov
out
pop
les
aad
shlb
or
cmp
adc
aas
stos
stc
clc
xchg
repnz
jge
mov
lret
sub
xlat
out
add
scas
mov
icebp
xchg
pushf
adc
xchg
jbe
pushf
or
std
les
stos
dec
in
std
ret
ret
push
iret
pop
jae
inc
pop
or
test
lock
icebp
or
jle
dec
dec
out
shll
mov
fs
mov
add
in
or
sbb
xor
das
dec
cwtl
cmc
gs
adc
dec
jmp
cltd
dec
pushf
fcom
repz
dec
mov
nop
out
punpckhwd
cmpsb
mov
fisubrs
lods
sbb
mov
cmp
shll
mov
into
mov
into
clc
cmp
loope
ljmp
xchg
adc
xlat
xchg
arpl
leave
cmp
pop
dec
jnp
sbb
mov
xor
scas
lock
adc
push
lahf
movsb
fdivs
fldenv
add
fildll
xchg
pop
push
sub
arpl
icebp
mov
sbb
sub
xlat
movsb
lahf
mov
into
pop
inc
pop
ret
fisttpl
aas
push
mov
bswap
pop
jne
mov
add
std
dec
sti
pop
mov
jno
fdivrl
inc
sbb
mov
lods
dec
sbb
repnz
ja
mov
shrl
pop
xor
bound
xlat
adc
or
pop
add
dec
shrl
push
cmc
lret
sbb
push
xchg
push
xorb
mov
pop
sub
mov
xchg
jne
lret
xchg
fs
pop
jmp
adc
add
sub
js
dec
add
ja
push
add
sub
inc
pop
out
push
jl
out
cmp
xchg
cwtl
mov
xchg
incb
mov
mov
xchg
or
mov
sahf
push
mov
mov
dec
or
icebp
adc
xorl
adc
inc
leave
xchg
rcrl
inc
sub
push
xchg
mov
leave
out
and
lods
dec
mov
fcomi
cld
xchg
fucomip
jbe
push
dec
push
dec
mov
or
orb
subl
pop
mov
push
xor
lret
xor
mov
inc
sub
lds
rol
aaa
pop
mov
ja
cmp
in
dec
push
sub
pop
jp
fistpll
call
push
and
lock
lret
pushf
adc
push
mov
repz
mov
test
sub
or
xor
nop
pop
cltd
daa
inc
push
loope
jne
add
mov
sbb
adc
xchg
xchg
pushf
test
stos
lods
dec
jnp
push
mov
pop
and
lea
push
jno
pop
test
and
adc
in
or
jge
and
adc
sti
in
xor
std
mov
call
in
jl
ficoml
mov
adc
test
xchg
mov
sbb
orb
lods
inc
adc
ret
pop
push
mov
mov
mov
scas
jno
nop
adc
mov
aam
js
xchg
sub
xor
orb
aam
dec
repnz
aad
repnz
ds
sbb
push
inc
ljmp
mov
lods
mov
dec
dec
out
pop
int3
inc
mov
outsl
cmp
sbb
and
dec
std
mov
push
xor
sub
mov
jae
stos
ja
pop
xchg
test
das
adc
inc
arpl
fwait
stc
pop
xchg
bound
mov
and
stos
or
lcall
addr16
dec
pushf
mov
mov
mov
in
int3
cmpsl
dec
push
cmp
inc
dec
cmc
popf
adc
sarb
ja
adc
and
mov
mov
dec
fdivr
out
push
sbbb
repz
mov
popf
call
xchg
adc
and
mov
daa
sub
add
imul
mov
or
aas
cmp
mov
pushf
mov
sbb
inc
push
outsb
cld
push
mov
test
ret
pop
lret
loop
cmp
int3
idiv
test
mov
inc
pop
adc
lods
gs
lcall
rcl
insb
jmp
or
lods
lods
xor
rol
pop
push
adc
sub
outsb
sub
xchg
pushf
rcrl
mov
cmp
movsb
cmp
jb
pop
or
loop
push
mov
icebp
xor
mov
mov
mov
daa
dec
outsl
pop
xor
repnz
incl
xchg
push
or
mov
adc
xlat
add
inc
je
mov
jns
pop
push
js
dec
mov
cwtl
outsb
mov
and
stos
mov
jb
cmp
outsl
data16
push
imul
shrl
movl
fistpll
sub
out
shlb
mov
insl
subl
jle
mov
mov
imul
pop
nop
pushf
mov
adc
hlt
sub
sub
movsb
and
lahf
mov
sub
outsl
cmp
sub
in
push
lds
push
mov
xor
dec
adc
xor
daa
mov
test
mov
sub
jmp
fbstp
setle
rolb
mov
push
xor
nop
push
cld
icebp
insl
cmpsb
inc
flds
add
mov
clc
and
jbe
mov
jge
js
dec
inc
inc
out
and
sbb
dec
add
idivl
cmp
enter
lret
insb
aas
adc
xchg
popf
lds
xchg
cwtl
inc
jmp
lods
pop
add
fistps
cmp
lret
mov
jns
push
sub
xchg
xor
int3
loope
bnd
sub
aas
lcall
int3
dec
jge
mov
adc
cmp
nop
jmp
ret
pop
xchg
cld
add
jmp
fcompl
sub
xchg
sub
fwait
inc
and
pop
mov
lret
inc
sub
dec
loopne
shl
cmpsl
push
loopne
or
fst
ja
icebp
jecxz
push
jbe
imul
mov
pop
dec
lcallw
test
sub
insl
xchg
nop
push
inc
and
movsb
push
xor
cmp
cld
out
stos
add
dec
pop
inc
mov
jle
xor
add
imul
movsb
push
fistps
movb
jnp
mov
dec
pop
cmp
adc
cs
out
jle
cmp
iret
xor
jg
jbe
dec
adc
addr16
mov
loopne
out
and
jnp
loope
sti
pop
pop
or
imul
popf
mov
cwtl
adc
jnp
mov
popf
cli
sbb
lret
xor
jo
andl
in
lock
and
inc
lock
dec
mov
les
es
jecxz
std
lret
xchg
lret
jp
addr16
imul
xchg
iret
inc
or
movsb
pop
sbb
dec
dec
arpl
pushf
xorl
outsb
cli
cmpsl
pop
iret
loop
movsl
dec
ds
mov
cmpsl
add
mov
pop
pop
xchg
stos
scas
xchg
mov
jne
std
and
lock
sbb
ja
shll
mov
nop
int3
pop
imul
pop
iret
sub
fnsave
jns
sbb
ror
loopne
ja
mov
add
mov
mov
divl
push
movsb
loop
pop
sarl
xchg
mov
cmc
lds
call
daa
mov
add
out
bound
mov
mov
sbb
test
inc
pop
mov
lea
clc
pop
sbb
mov
lahf
addr16
rolb
mulps
push
rcrl
mov
jmp
popl
stos
pusha
mov
lods
mul
cmp
popf
in
push
sbb
into
inc
add
adc
ljmp
dec
es
in
out
dec
push
rcr
cli
scas
stos
adc
stos
adcl
popa
cmpsb
pop
mov
and
dec
cmpsb
mov
pop
decl
popf
addr16
fidivs
sub
aas
loop
mov
pop
pop
scas
iret
dec
pop
faddp
outsb
xchg
or
loope
push
mov
scas
adc
lock
pop
jne
xchg
pushl
pop
dec
add
pop
push
mov
xchg
aad
test
shll
push
pusha
call
shrl
hlt
cmc
pop
add
mov
or
jno
sub
pusha
leave
fidivrl
fdivl
stos
ss
rcrb
xchg
xchg
xchg
in
ja
test
int
fldenv
mov
dec
sbb
mov
sub
sbb
push
add
notb
add
xchg
mov
repz
and
xor
mov
push
sbb
jo
fwait
es
push
test
xchg
shlb
mov
test
mov
jecxz
xchg
xchg
xchg
and
cmp
aad
push
xchg
mov
xchg
sbb
jecxz,pn
or
push
sbb
add
inc
adc
pop
pop
in
lock
push
jb
ds
cld
sahf
js
stos
aas
cli
jle
gs
cli
mov
xlat
lods
jo
pushf
fwait
cs
leave
ret
data16
pop
mov
push
rorb
xchg
mov
sub
mov
fsts
mov
fs
ds
sbb
pop
push
inc
mov
lret
xchg
mov
js
xor
mov
aad
bound
cli
push
mov
or
jg
mov
and
insl
dec
dec
cwtl
rorb
popf
scas
push
push
inc
sbb
mov
pop
aam
icebp
pop
popa
shll
push
cmp
stos
cld
dec
sbb
rorl
subb
lds
push
lret
cmp
cwtl
scas
and
sarl
jecxz
sub
repnz
es
hlt
mov
addb
lods
dec
mov
insb
rcrl
out
out
insb
adc
stos
cld
loope
sbb
cmp
mov
mov
fs
loope
cmp
pop
mov
in
cmc
enter
mov
dec
pop
gs
mov
mov
les
sbb
decb
xor
mov
leave
outsl
out
add
add
jbe
pop
dec
sbb
das
rcll
lods
rol
push
xor
ljmp
mov
mov
js
cmp
mov
stos
mov
sbb
lods
mov
jle
int3
lahf
ss
dec
inc
push
inc
mov
inc
fildl
pop
gs
lock
out
popa
sbb
jns
cs
lock
into
push
adc
leave
daa
mov
dec
mov
mov
sbb
mov
dec
fiadds
adc
add
jecxz
rorl
ret
xor
or
inc
mov
push
or
mov
sbbb
mov
push
icebp
scas
mov
mov
std
sub
fbld
je
mov
das
shrb
daa
imul
or
std
fildl
mov
aam
dec
inc
aad
xchg
aaa
adc
pop
or
int
jo
mov
imul
cltd
fsubrs
leave
hlt
test
mov
pop
sub
mov
adc
negb
popf
es
mov
adc
push
addl
in
fdivr
repz
int
jmp
or
add
xchg
cmp
mov
mov
mov
and
inc
adc
inc
das
mov
mov
iret
pop
cld
or
out
add
push
mov
push
fidivl
xchg
push
ret
jae
aam
inc
mov
pop
jg
in
sbb
jae
stos
lret
fiaddl
loopne
in
pop
jae
ljmp
fadds
mov
push
mov
ljmp
mov
and
pop
dec
mov
scas
sub
ret
mov
mov
scas
in
inc
push
lods
movsb
cmpsb
lcall
icebp
aad
fdivrp
sbb
and
inc
nop
lcall
into
and
dec
fwait
pop
inc
loopne
pop
insl
inc
add
sbb
cli
and
in
adc
aaa
clc
roll
pop
push
mov
mov
jb
cltd
insb
das
and
popf
mov
pushf
sub
and
or
xchg
dec
inc
shl
xchg
lahf
sbb
jp
inc
ret
sahf
push
mov
xor
dec
addb
seto
cld
popf
mov
xchg
xchg
and
pop
pop
or
sbb
mov
mov
enter
mov
ja
adc
adc
ret
jge
dec
or
mov
and
cmpsl
and
popf
rcrl
loopne
xor
xchg
pop
cmpsl
ds
pop
ss
in
jns
dec
arpl
cmp
jns
pop
xchg
jnp
ror
stos
pop
push
push
shrb
cmp
jg
mov
int3
inc
push
mov
adc
sub
sbb
inc
inc
fisubs
fisttpl
in
push
aam
xorl
mov
xor
sbb
jns
xchg
pop
jne
add
aas
dec
sub
sub
adc
cmp
clc
leave
rorb
filds
pop
cmp
jp
mov
ret
cmp
stc
icebp
jmp
mov
xchg
hlt
fucom
addr16
outsb
leave
push
mov
pop
cmpsl
pop
xor
sahf
jb
jo
popa
dec
jmp
pop
add
push
xchg
loopne
jae
into
jmp
ficoms
jb
lds
popa
push
mov
repz
fucom
inc
arpl
aad
leave
push
jmp
aam
outsl
arpl
jmp
xorb
jae
arpl
into
insl
out
das
scas
and
hlt
dec
popa
pmaxub
ret
cld
sub
sub
mov
daa
sbb
jnp
cmp
out
testl
sbb
jno
lds
cmpsl
push
test
jb
out
xor
push
push
cmp
xor
sub
call
in
outsl
ss
cmp
mov
adc
out
fsubr
lcall
jne
aas
jae
ss
jnp
fsubrs
adc
cmp
mull
dec
mov
std
movb
sbb
lock
out
dec
cwtl
xlat
popf
insb
mov
inc
or
push
jns
sub
add
dec
xor
push
fwait
push
rclb
mov
adc
mov
inc
cs
inc
jge
xor
fnstsw
push
xchg
add
div
outsl
js
rcrl
push
push
lock
adc
mov
sahf
xlat
push
loopne
fstpl
ja
dec
xor
jmp
shrd
imul
popa
cmpb
push
sub
xchg
lahf
cwtl
das
push
xlat
mov
mov
lods
or
jge
mov
sub
or
movsl
sbb
lock
lret
add
adc
mov
and
dec
inc
jp
mov
add
dec
xchg
icebp
mov
test
push
dec
cltd
fsubrs
dec
gs
cmp
pop
leave
lahf
popa
inc
and
mov
notb
mov
cli
and
test
push
cli
les
inc
cmp
adc
scas
push
pop
xchg
mov
ja
or
jbe
ret
and
hlt
push
nop
inc
mov
pop
mov
ss
popf
fisttps
lcall
inc
xorl
test
adc
mov
aad
cld
insb
xabort
inc
ljmp
lds
jo
je
stos
sti
cmp
inc
fidivs
mov
dec
mov
pop
fimull
iret
out
push
daa
sbb
cmc
inc
xchg
fsub
jnp
mov
out
pop
cmpsb
imul
sub
mov
lret
jp
dec
addr16
aad
and
inc
in
and
popf
adc
rcl
movsb
inc
sub
cwtl
jnp
jmp
scas
call
push
cli
stc
dec
gs
mov
fstpt
bound
mov
orb
or
mov
xchg
or
test
andps
fisttpl
data16
lods
inc
jle
orb
out
shr
push
dec
test
cmp
enter
inc
fwait
psrlq
sub
outsb
sti
mov
cmp
dec
loopne
arpl
sar
in
movsl
rclb
and
imul
xchg
xor
pop
and
or
jno
xor
hlt
push
xchg
inc
push
xchg
sbb
js
cmpsb
xchg
paddw
loopne
in
xor
out
test
cmp
enter
int3
loope
or
in
sub
scas
ljmp
and
les
cwtl
popf
or
mov
mov
test
push
sbb
fisubl
testb
leave
call
inc
jnp
inc
in
pop
sbb
push
or
mov
enter
bound
fdivrl
scas
sahf
sbb
int
cltd
outsb
ss
push
xor
ret
jge
inc
lahf
icebp
jg
cmp
in
xchg
mov
roll
dec
mov
ret
movsl
aad
inc
cld
je
insl
dec
mov
push
daa
int
xchg
daa
or
cmp
and
cmp
test
popf
js
dec
rcll
mov
xchg
adc
cmp
fildl
les
add
mov
mov
scas
lahf
jmp
mov
mov
push
lret
movsb
imul
mov
mov
mov
arpl
ja
scas
mov
ret
outsb
cli
jge
fstp
jmp
hlt
adc
outsl
push
cmc
jmp
push
into
jmp
fisubs
dec
sub
stos
cltd
je
cs
sbb
jecxz
jl
test
add
xchg
adc
push
pop
dec
repnz
pop
lods
loope
mov
aam
adc
loopew
ret
sbb
mov
rcl
push
sbb
sbb
mov
pop
popa
mov
int3
lret
outsb
push
cmp
fdivl
add
sub
lea
call
push
inc
sahf
js
jl
xchg
int3
aam
xchg
loop
aad
cmp
xor
repnz
pop
push
out
mov
cmc
xor
push
aaa
in
into
pop
cmpsl
push
aam
in
sti
movsb
adcl
xchg
mov
test
div
scas
clc
fwait
outsl
pop
mov
jmp
sbb
imul
push
sti
sbb
push
clc
data16
mov
data16
mov
cmp
lock
sub
and
xor
repz
sub
stc
test
mov
orl
cs
sbb
movq
dec
ja
mov
outsl
dec
mov
pop
mov
xor
or
or
cmp
xor
dec
insb
movsb
xlat
ja
xor
and
fs
cmpsl
jge
xchg
aas
jle
cwtl
fwait
jae
cmpsl
fcmove
lcall
sub
ror
popf
inc
aam
mov
or
xor
repnz
fs
mov
fldenv
mov
and
sti
jnp
sbb
testl
push
nop
arpl
adc
gs
sbb
das
jae
imul
insl
mov
lea
loope
inc
add
lods
pop
lods
fistl
stc
mov
movb
jno
and
rol
push
int
jbe
addb
and
nop
dec
insb
js
aas
xor
adc
jp
das
movsl
adc
jecxz
xor
jg
shlb
arpl
dec
push
xorl
fsubrs
inc
sub
in
sbb
int
and
pop
ds
sbb
scas
mov
ss
into
mov
pop
addl
adc
sub
push
cmp
frstor
xchg
movsl
das
pop
mov
out
es
scas
test
pop
dec
scas
add
sub
sahf
push
lock
loop
jne
popa
push
inc
adc
add
sbb
int3
adc
mov
push
cmpsl
ret
movsl
lret
clc
test
xor
iret
adc
push
inc
xchg
idivb
js
mov
dec
or
pop
adc
cmp
shl
sub
and
push
mov
mov
lods
jecxz
pop
and
outsl
in
mov
inc
push
mov
sbb
add
aas
xor
push
cmpsl
movsb
jp
je
arpl
cmpsl
in
push
cmp
dec
imul
jg
pop
mov
popf
and
insl
jo
add
mov
shl
lret
movsb
inc
aaa
jmp
pop
fwait
push
scas
repnz
in
sahf
or
mov
mov
or
ja
les
jg
dec
inc
mov
push
and
dec
push
adc
sub
daa
movsb
inc
rorl
iret
add
repz
xor
mov
stc
cmc
ret
cltd
mov
sub
jno
inc
loope
sbb
loope
sub
jbe
push
xor
sbbb
xchg
cmpsb
dec
xor
inc
ficompl
mov
jbe
ds
sbb
fcom
jnp
pusha
push
adc
ss
mov
cmpb
sbb
stos
mov
sbb
mov
and
lret
adc
jle
mov
lock
fldenv
lods
sbb
jp
loope
rclb
lahf
les
adc
pop
faddp
std
mov
mov
sarl
js
jmp
repnz
je
lock
xchg
adc
or
call
jecxz
cmp
sub
or
inc
mov
outsb
lret
mov
hlt
pop
scas
or
popf
add
add
cltd
data16
es
push
ds
jbe
mov
dec
and
and
push
mov
xchg
les
mov
pop
jle
rcrl
push
fcmovnu
xchg
and
mov
jl
push
pop
lea
movsl
testl
ja
dec
sub
mov
ret
pop
loope
rclb
insb
and
and
xchg
out
pop
sbb
les
insl
adc
or
lret
out
inc
pop
in
jno
xlat
sti
cltd
fisttpl
andl
adc
xchg
dec
cmp
dec
fs
in
mov
and
xorl
mov
mov
inc
int3
jnp
xor
xor
test
movsb
inc
decl
out
rcrl
adc
mov
push
push
mov
jns
jp
inc
iret
sub
pop
pop
call
sti
inc
jmp
push
or
sbb
int
movsb
push
ret
ret
pop
cmp
bound
mov
pushf
or
fstl
imulb
dec
into
mov
ja
adc
cli
mov
ret
push
cmc
rcr
insl
jo
movsb
jmp
push
adc
cltd
mov
imul
fcoml
aad
aad
cmp
ljmp
add
jne
int
mov
push
and
ret
or
jmp
push
das
rcrl
lock
push
gs
sub
pop
insb
jno
cli
orb
sbb
sti
push
mov
inc
enter
add
pushf
sbb
gs
dec
push
jo
cmc
in
divps
xlat
lea
and
aas
in
adc
push
popa
int
cltd
or
mov
clc
test
js
adc
adc
movsb
call
lcall
shl
mov
addb
dec
pushf
outsl
sub
and
mov
fimuls
push
jno
lret
adc
sub
mov
fisubrs
out
or
add
incl
push
iret
adc
movsl
iret
mov
rcrl
pushl
sbb
jb
pop
push
ss
adc
enter
in
cmp
ss
xchg
sbb
jecxz
xor
les
stos
nop
out
mov
aas
jbe
pop
mov
getsec
outsb
nop
gs
jae
ret
jecxz
and
jo
or
mov
test
cmpsb
cmp
movsl
inc
cmp
sahf
cmp
aaa
and
push
pop
dec
cmp
pop
mov
outsb
pop
sub
cltd
add
rcrl
add
out
ljmp
cmc
std
and
pop
pcmpgtb
and
lds
insb
in
out
xor
movsb
and
pusha
rcrl
inc
mov
jnp
rcll
bound
int
outsl
jbe
pop
mov
jb
mov
xlat
sbb
cmp
add
cmpsb
in
push
fstps
sbbb
mov
bound
dec
daa
sbb
adc
jmp
out
pushf
adc
lods
add
fwait
imul
in
mul
dec
enter
adc
add
xor
jbe
cmp
jno
cmp
jbe
sbb
imul
inc
xor
fidivrs
std
xchg
rorl
jb
orl
sub
push
dec
mov
in
ret
daa
pop
sar
sahf
lods
sarl
add
mov
mov
cmpsb
test
in
faddl
and
fwait
jno
ror
das
push
fdivl
scas
jno
and
jne
in
adc
popf
push
rcrl
adc
lcall
loopne
mov
add
dec
mov
mov
sub
daa
nop
and
pop
xchg
rol
pop
test
call
mov
std
lods
ja
dec
push
or
std
jo
std
jle
sub
pop
xor
xchg
mov
fcmovb
jge
mov
outsb
mov
inc
lock
clc
ret
aas
addr16
popf
cld
aas
shlb
clc
daa
inc
addb
cmp
loop
and
adc
and
es
ret
jns
push
in
jle
ret
pop
shrb
fildl
out
nop
jmp
dec
dec
adc
mov
orb
std
stc
shrl
subl
sbb
mov
cmpsl
dec
and
inc
and
add
test
cs
aam
pop
pop
adc
push
mov
dec
cmpsb
shll
push
sub
pop
icebp
popf
and
dec
lock
pop
int3
mov
adc
out
test
outsb
or
loopne
jno
std
leave
mov
pop
add
add
imul
cmp
lods
movsb
jp
outsb
sarb
jmp
stc
mov
pusha
sbb
sub
sahf
pop
adc
out
and
jg
and
or
mov
jo
adc
into
aad
dec
jmp
sbb
setle
cld
cmpsl
hlt
dec
cmp
mov
mov
jae
inc
push
dec
fcmovnu
cmp
push
adc
push
mov
adcl
insb
in
mov
movsb
push
mov
sti
aaa
push
mov
fistpl
mov
adc
shll
fnstsw
out
fldt
xchg
inc
ljmp
ret
stos
inc
enter
fcoml
xchg
sahf
xchg
insl
xchg
mov
enter
aaa
xchg
lahf
and
leave
arpl
fdivrp
cmp
and
fistps
or
inc
lock
mov
call
sub
fistpll
adc
lcall
inc
call
jl
data16
pop
into
popa
xor
stc
cwtl
in
lret
and
mov
inc
inc
push
inc
and
mov
fnstcw
decb
sub
push
sbb
smsw
jmp
mov
fs
dec
js
insb
add
pop
popa
sub
jbe
jg
movsb
std
add
jo
sub
leave
cmp
outsl
jo
mov
or
push
sub
lock
push
sub
int3
pop
sarb
out
sbb
jbe
sarl
loope
addr16
xchg
sub
sbb
push
sub
rolb
inc
xchg
add
xchg
mov
push
sub
shrb
xchg
push
adc
and
fistl
popf
test
sti
outsb
shr
jbe
xchg
test
psraw
adc
test
and
test
adc
or
hlt
jb
adc
dec
sarb
movsb
adc
mov
das
jge
pop
out
or
lock
das
out
ret
add
dec
data16
je
mov
and
scas
inc
shr
fdivs
xchg
ds
imul
arpl
sub
lock
push
mov
sbb
xchg
cs
inc
add
in
mov
or
jmp
mov
jb
and
mov
cmp
and
iret
jecxz
dec
pop
xchg
ss
sub
scas
dec
sbb
mov
in
cmp
mov
daa
xor
mov
cltd
push
subl
add
cltd
add
xchg
in
movsb
adcl
in
xor
loope
xchg
xchg
stc
dec
sub
xchg
cltd
in
insb
repz
ficoml
pop
mov
aas
jecxz
dec
push
pop
cmp
jo
add
out
sbb
jae
lret
mov
adc
outsb
mov
stos
pop
call
out
popa
iret
mov
loopne
dec
std
inc
add
and
inc
adc
enter
pushf
xchg
push
loope
jge
dec
jnp
push
int3
loop
movsb
dec
sbb
shrd
dec
push
les
inc
sub
mov
add
inc
adc
jae
js
jb
xor
xchg
into
ficomps
sub
movsl
loope
pop
sti
push
or
lret
mov
xorl
sbb
insl
pop
jp
jl
jmp
xor
and
jl
popa
mov
pop
icebp
mov
icebp
sarl
sbb
xor
out
sbbl
int
outsl
mov
pop
inc
mov
cltd
addr16
imul
insl
cmp
or
lret
mov
mov
clc
nop
sub
xor
pop
xchg
fwait
or
pushf
nop
mov
push
mov
lcall
data16
push
pop
push
ret
inc
sub
inc
xchg
or
xchg
push
aas
mov
sub
pop
clc
sahf
mov
movsl
dec
cmpsb
gs
jmp
nop
enter
and
test
out
jge
stos
sbb
mov
sbb
iret
call
sahf
mov
inc
test
push
adc
ljmp
sub
jae
cli
dec
pop
cmp
movsl
mov
add
sub
ds
push
out
add
xchg
aad
dec
lcall
mov
clc
fdivs
xor
push
mov
adc
insb
fldcw
ss
fcmove
and
popl
notl
pop
xchg
mov
or
inc
popf
mov
jne
mov
nop
cmp
decl
xorl
mov
repnz
sub
cld
fcomi
ror
inc
sbb
jne
dec
je
andl
out
imull
jmp
dec
push
dec
mov
addr16
cld
mov
cmp
arpl
in
mov
out
arpl
scas
adc
push
mov
pop
adc
xchg
push
pop
mov
in
adc
sbb
jb
xchg
push
mov
aaa
mov
jo
jl
push
out
test
bswap
dec
or
dec
arpl
mov
fnsave
out
cmp
xchg
lds
arpl
xor
int3
negl
lods
inc
arpl
inc
pusha
xor
mov
add
lods
aam
sbb
and
fucom
mov
push
push
xor
jno
push
mov
mov
push
out
mov
jne
sar
shrb
sub
xor
jbe
and
lcall
cmp
xchg
mov
neg
leave
je
xchg
mov
sbbl
cmp
pop
call
mov
test
sbb
ffreep
or
push
addr16
fldl
jmp
jb
in
fiaddl
div
mov
and
shl
xchg
arpl
enter
xchg
push
pushf
push
je
adc
sbb
out
jl
loopne
cmp
and
into
push
rolb
sbb
cmp
cmpsl
insb
lods
mov
aam
xchg
shlb
mov
dec
sbb
adc
lret
xchg
push
and
imulb
jnp
rolb
js
gs
or
shrl
xchg
ss
loop
ja
mov
aam
jno
repz
or
xor
lock
jno
sbb
inc
or
lahf
xchg
push
xchg
ret
mov
iret
xchg
aad
ja
stos
les
lods
or
xor
xchg
out
pop
mov
lahf
stos
movsl
jnp
divl
rcll
icebp
pop
lods
fcoms
xchg
aad
iret
shll
add
stos
mov
sbb
popa
std
dec
jecxz
mov
out
inc
sti
popf
sbbl
adc
mov
pusha
stos
jmp
je
fisttpll
push
das
xor
inc
dec
push
mov
ja
daa
inc
adc
shl
scas
orb
addr16
pop
mov
adc
and
sub
loop
fistpll
pop
mov
pop
xchg
sbb
push
out
mov
addr16
jno
pop
test
test
les
int
out
pop
jno
lods
jl
jnp
lret
rclb
mov
sbb
jnp
xor
mov
fld
lret
jp
xchg
repnz
or
dec
mov
xchg
aad
or
xchg
test
scas
ds
jl
sub
test
xor
add
idivl
inc
mov
ja
pop
lret
mov
popa
inc
ja
aaa
inc
xchg
sub
mov
inc
push
cmp
cmp
loope
mov
jnp
lahf
inc
or
cmp
lea
or
dec
pushf
or
jmp
push
lcall
movsb
loop
icebp
mov
mov
dec
pop
into
xor
mov
xchg
jle
sbb
cmp
lds
in
fmull
fistps
icebp
dec
lahf
cmp
cmp
gs
mov
ret
imul
in
push
mov
loope
popa
xor
inc
cmpsb
imul
xlat
outsl
sahf
lods
inc
push
xor
cld
inc
imul
push
xor
sti
cmp
test
mov
mov
cmp
daa
ds
pop
inc
shlb
leave
cbtw
xchg
ss
add
push
call
orl
mull
push
outsl
lock
test
repnz
mov
and
out
xor
sarb
xor
lds
sbb
stos
mov
and
stc
sbb
sbbb
sub
add
test
xchg
lret
ss
aad
hlt
inc
sbb
push
adc
jmp
lret
dec
in
ret
xor
roll
lea
into
loopne
dec
or
mov
xchg
leave
das
shrb
adc
mov
inc
xchg
ds
and
sub
movl
lret
fs
cmp
loop
cmpsl
jnp
and
adc
jmp
sbb
xchg
mov
mov
lods
fwait
test
fstpl
jno
and
jo
or
adc
shrb
dec
pusha
lahf
push
rcll
das
dec
or
les
movsb
mov
adc
stos
scas
loopne
and
insl
add
test
loopne
fiaddl
insl
loop
test
outsl
inc
adc
icebp
mov
jb
push
sbbb
dec
ss
sub
mov
mov
scas
das
lock
je
stos
loop
test
aam
mov
push
bndldx
es
sahf
mov
sbb
mov
sarb
cmpsl
pop
pop
outsl
push
jae
jge
dec
pop
gs
inc
cmp
push
xchg
mov
aaa
dec
fs
ror
dec
das
outsl
addr16
hlt
cs
shrl
jbe
cmovb
jne
icebp
bound
cmp
inc
ret
xor
mov
sub
movsl
lret
cltd
cmp
in
out
dec
ds
data16
mov
and
sbb
stc
xor
nop
pop
cmp
pushf
gs
test
jns
in
lret
inc
aaa
pop
mov
xchg
ds
shll
or
and
sbb
xor
lods
jle
ljmp
dec
sahf
js
cmp
mov
js
adc
adc
sub
xchg
inc
icebp
push
xlat
or
lods
xchg
adc
stc
or
into
cli
hlt
pop
xchg
lret
mov
and
add
loop
inc
sub
pop
adc
cmp
xchg
xchg
pop
adc
ljmp
ds
pop
rcrl
lcall
sub
mov
adc
mov
popl
mov
pop
mov
sub
test
pop
adc
fidivs
dec
sahf
insb
mov
aam
idivb
fwait
add
adc
cmpb
adc
es
xchg
ja
in
stos
idivb
mov
cmpsb
cli
add
cs
in
jle
lcall
call
jmp
movsl
adc
es
rorl
dec
fldt
cmpsl
out
pop
das
lock
push
bound
push
inc
cmpsb
xchg
popa
add
adc
into
js
cmp
es
ds
inc
or
push
js
or
int
sbb
cmpsb
andb
cmc
or
jae
repnz
es
inc
push
jmp
mov
test
cltd
mov
mov
sti
mov
aad
cmp
or
dec
mov
ljmp
aas
inc
in
jns
cltd
dec
lahf
outsl
add
add
fidivrs
push
fcoml
sbb
stc
or
mov
inc
aas
popa
dec
sub
adc
pop
and
pop
subb
push
or
xchg
out
adc
push
add
lea
fidivl
add
pop
pop
jnp
push
mov
cwtl
adc
sti
inc
mov
add
lods
jmp
cs
cwtl
outsb
aaa
outsl
inc
mov
jle
push
add
mov
mov
sahf
or
adc
xchg
aas
aad
arpl
iret
shlb
fsubrl
bound
or
xor
sbb
or
or
xchg
cmp
sbb
sahf
jp
lret
cmpb
dec
jmp
dec
cli
xor
lods
lahf
dec
pop
cli
mov
mov
cld
xchg
lods
lock
push
cli
rclb
jg
lret
bound
mov
popf
inc
dec
push
push
nop
clc
pop
xor
lret
xor
loopne
dec
daa
add
dec
sbb
pop
mov
fwait
or
js
jmp
loopne
aaa
int
xor
and
mov
fdivl
cmpsb
mov
cmpsl
fnstcw
repz
pop
arpl
add
leave
mov
lret
loop
dec
ficomps
sbb
dec
sbb
jae
lcall
out
mov
out
xrelease
movsl
and
test
mov
leave
cltd
ds
pusha
sub
add
pop
out
inc
sub
mov
jge
ja
mov
add
xchg
insb
pop
dec
clc
jo
mov
inc
adc
stos
aaa
bound
cmp
call
popf
loop
or
sbb
inc
inc
mov
jge
shll
ljmp
push
outsb
xchg
or
lret
ljmp
mov
pop
imul
rcll
insl
pop
xor
cli
movsl
neg
addb
push
jl
popa
andb
push
lea
or
push
push
add
jb
dec
mov
aad
mov
das
fldenv
iret
push
cmp
mov
stc
add
mov
ret
clc
jmp
nop
add
mov
test
int3
leave
daa
popf
pop
fcomip
ljmp
mov
or
adc
jb
sbb
fs
movsl
loopne
in
cmp
sahf
jmp
inc
pop
les
scas
push
pop
stos
gs
test
stos
stos
pop
or
std
call
lahf
sub
in
loope
outsl
cmp
cmp
in
mov
or
xor
dec
popf
call
jnp
fwait
je
notl
mov
xor
lret
ret
inc
les
add
stos
add
xchg
movsl
cmp
hlt
data16
mov
jg
addr16
pop
loop
xchg
scas
cmpsl
xchg
imul
xchg
pop
mov
sbb
sbb
outsl
stos
ja,pt
dec
leave
test
fstpl
mov
sbb
mov
ds
loope
add
pop
pop
push
mov
lods
icebp
push
inc
pop
xchg
mov
mov
les
mov
cmp
out
pop
or
pop
adc
mov
dec
sub
xchg
push
insl
dec
std
fildll
sti
dec
inc
sbb
dec
rcl
fistpl
xchg
adc
jno
xchg
xchg
jne
adc
out
cmp
es
movsl
cli
pop
xchg
mov
adc
xor
add
mov
pusha
mov
mov
scas
cmpsl
jle
jbe
cmp
mov
adc
xchg
or
das
or
cmp
dec
push
stos
xchg
xchg
outsl
pop
jmp
mov
ret
movl
inc
xchg
xchg
mov
cmp
sti
shll
jns
ds
fs
loopne
adc
push
insl
mov
sbb
mov
fnstcw
dec
loop
dec
mov
sub
mov
in
lcall
adc
fiadds
xor
or
aas
mov
sbb
xchg
sbb
mov
add
push
xchg
testl
mov
and
cmpsb
or
cwtl
enter
cmc
vmovss
bound
movsb
stc
dec
dec
mov
sub
lahf
add
xlat
push
xorb
mov
in
inc
or
jmp
cld
imul
je
shl
mov
xlat
imul
xchg
or
mov
loop
fsubrl
mov
das
lods
add
lods
mov
clc
int3
sbb
stos
jmp
test
negl
sub
xchg
sbb
inc
out
inc
sub
fst
std
jns
or
call
enter
sarl
cmp
inc
dec
aaa
mov
xor
mov
cmp
cmovnp
insl
jnp
mov
jle
loopne
rcrb
inc
jmp
loop
popf
lods
fdivr
test
push
adc
es
popa
sahf
and
jp
inc
push
xchg
push
aad
pushf
aas
dec
mov
popa
fidivs
int3
in
ljmp
ds
pop
dec
ret
test
dec
popa
sub
inc
cmp
test
sti
outsb
mov
sub
mov
sbb
push
test
cmp
loope
pop
rorb
pushf
xor
pop
sub
xlat
mov
cmp
mov
lret
out
sub
les
push
cmp
xor
push
cmp
sahf
les
pop
mov
xchg
or
sbb
dec
mov
test
mov
mov
nop
das
mov
das
push
dec
leave
xchg
add
pop
jo
fldcw
mov
mov
popa
ficoms
scas
lods
fsub
pop
sahf
mov
add
insb
xchg
dec
xor
mov
sbb
in
outsl
jnp
inc
les
xor
mov
and
sti
cmp
adc
sbb
in
scas
cltd
loope
dec
bound
sarb
out
xorl
shrb
pop
sbb
shrl
les
xor
test
sarb
push
push
adc
mov
cmc
jecxz
imul
adc
push
cmpsb
fildll
das
icebp
jae
inc
jno
testb
jle
push
shlb
call
ror
fwait
sub
mov
into
jl
mov
mov
test
into
lcall
leave
test
cmp
ss
aaa
xorl
dec
pop
push
mov
cs
cli
push
fs
sub
push
pushw
mov
call
or
mov
cltd
inc
pusha
fildl
fisubl
xchg
mov
mov
cmp
jns
ret
inc
xlat
inc
imull
idivl
repnz
incl
or
imul
outsb
or
xor
or
into
mov
cmc
movsb
and
mov
mov
and
icebp
std
jo
and
mov
cmp
pop
into
mov
xor
in
or
into
jp
dec
in
mov
jmp
movsl
int3
ds
lds
clc
xchg
sub
push
inc
stos
dec
sub
outsb
xchg
popf
hlt
push
roll
ds
into
scas
sub
cmp
loope
inc
test
pusha
fwait
test
and
stc
dec
pop
pop
sub
jecxz
aad
push
ljmp
bound
fwait
dec
scas
add
push
dec
unpcklps
dec
nop
lods
mov
test
stc
ss
in
fimull
and
idivl
or
inc
jl
out
pushf
pop
jbe
ja
xchg
mov
lcall
cmpsl
sub
mov
jbe
lock
inc
rcrb
xor
jg
cwtl
xor
lret
jae
mov
mov
outsb
sub
insl
movsl
outsb
pop
push
pop
inc
sub
std
stc
or
xchg
popf
sub
cmpsb
aas
gs
jnp
mov
jo
mov
outsl
aas
out
pop
xchg
imul
sbb
ds
add
dec
out
dec
pusha
mov
rcl
inc
popf
adc
insb
push
out
mov
repz
xor
pop
es
push
enter
ret
js
rorl
xor
or
ret
push
lods
mov
mov
adc
or
lcall
pop
jns
push
movl
push
mov
jmp
and
inc
leave
mov
mov
pop
and
mov
mov
loop
mov
sti
dec
mov
movsb
dec
cltd
mov
xchg
out
dec
and
mov
lea
dec
in
divl
lahf
popa
dec
or
out
cltd
enter
push
sbb
call
outsl
push
and
cli
mov
lret
push
aaa
mov
aaa
mov
and
daa
sti
mov
or
test
and
je
pop
lea
out
mov
out
imul
pmuludq
cmp
xchg
xor
mov
mov
pusha
jge
cmp
pushf
mov
outsl
mov
mov
inc
jecxz
mov
inc
adc
adc
dec
sub
mov
sahf
cmp
es
dec
or
out
scas
and
adc
jbe
push
ljmp
sahf
mov
adc
lret
fcoms
inc
punpckhdq
cwtl
jge
and
int3
ja
out
mov
push
or
pusha
adc
mov
xchg
or
xchg
imul
xchg
ss
sbb
loop
xchg
js
or
lock
aaa
mov
add
mov
xor
add
sub
dec
sub
mov
sbb
cmpsb
enter
mov
jb
mov
jns
sub
scas
out
iret
cltd
sahf
ss
xchg
out
or
cwtl
pop
shlb
cmp
mov
cld
jg
clc
filds
inc
fptan
pop
inc
cmp
jb
std
addl
inc
sub
pushf
mov
or
jl
add
fisubs
xor
xchg
fidivrl
push
rclb
jae
or
mov
aaa
xchg
je
inc
sub
pop
mov
mov
add
inc
xchg
inc
bound
faddl
jns
stos
inc
mov
and
and
fldcw
in
sub
movsl
fdivrp
ss
lods
lret
jmp
inc
jne
or
int
popa
xchg
adc
aad
mov
add
mov
cmp
ror
es
dec
or
mov
cmc
mov
pop
sub
insb
daa
xor
dec
xlat
sub
push
lret
daa
and
xchg
rcrb
xor
adc
xor
dec
int
adc
loopne
xchg
or
add
and
fidivrl
or
lods
dec
jb
addps
adc
adc
or
dec
mov
fldl
imul
adc
dec
jle
xor
fnstsw
mov
mov
fsubrs
in
cmp
insb
imul
mov
out
popf
lret
in
pop
mov
cld
cli
pusha
mov
push
or
paddusw
out
jnp
add
shrb
adc
inc
and
insl
jae
mov
sbb
fldenv
pop
testl
aam
push
call
xchg
push
inc
popa
jmp
adc
mov
pop
jp
mov
es
push
adcb
insb
mov
cmpsb
push
rcll
lret
jbe
mov
xchg
outsl
adc
lds
mov
lret
mov
lods
jle
dec
xchg
sbb
jl
lahf
add
ja
mov
lds
nop
add
inc
loop
pcmpgtd
mov
adc
rorb
jp
sti
shll
or
sub
mov
mov
mov
fsubs
mov
in
jle
rep
xlat
in
lahf
out
xlat
push
add
inc
adc
enter
fidivl
stos
add
dec
mov
jl
movsl
dec
dec
fldl
fistpl
push
xor
push
xchg
lock
std
adc
loope
mov
pop
movsb
dec
stos
sub
in
and
push
mov
and
and
inc
push
int
dec
arpl
mov
sub
mov
in
aaa
inc
push
sbb
xchg
or
cmpsb
push
push
aas
jle
sbb
rol
pop
mov
xor
pop
adc
jae
test
sbbl
addr16
cmp
aad
adcb
or
std
mov
cmp
sbb
fwait
cmp
test
std
mov
pop
pop
adc
or
fdivrl
push
adc
test
mov
js
movsb
jne
xchg
ficompl
ljmp
xchg
mov
sti
das
in
rcr
xchg
and
sbb
js
test
in
cli
insb
mov
mov
lea
cmpl
mov
adc
leave
mov
inc
mov
mov
jne
sahf
lock
ljmp
sahf
mov
std
xor
pop
call
outsl
pop
andl
in
jl
jl
and
movsl
outsl
xchg
repnz
cmpb
mov
js
and
negl
add
aas
ds
xor
ret
repz
sbb
std
das
scas
stc
cmp
mov
xor
stc
call
jp
data16
out
and
lahf
in
inc
lea
or
arpl
movsl
mov
and
into
mov
mov
sbb
rorb
lcall
in
cwtl
jg
lret
or
xor
xchg
dec
add
xchg
cld
pusha
fists
xor
pushf
in
mov
mov
ret
rclb
or
shrb
cltd
inc
mulb
push
aaa
repz
ds
in
inc
mov
mov
inc
push
jge
popf
jg
mov
sub
cltd
pop
add
shlb
fcoml
jno
jl
out
mov
in
jmp
pop
outsb
popa
incl
in
sbb
mov
fildl
xor
xor
and
jg
cmpb
push
daa
mov
add
lods
repnz
push
cmp
or
or
stos
and
lea
pop
cmp
pop
push
inc
adc
pop
arpl
xchg
imul
pop
xchg
negl
test
ja
sarl
rcrb
mov
loop
loopne
xlat
lds
mov
loopne
mov
xabort
aaa
sbb
adc
mov
pop
lcall
jg
dec
lods
arpl
adcl
mov
dec
fsubs
ss
out
loope
popl
popa
xchg
fcomps
add
xchg
push
add
aas
jbe
inc
shrb
sbb
iret
xchg
icebp
jae
das
push
mov
ss
mov
clc
rorb
xchg
xchg
outsb
add
or
in
sub
xchg
cmp
xchg
mov
rorb
scas
xchg
xchg
jmp
rcpps
lret
pop
mov
scas
iret
xor
add
test
inc
cmp
into
pop
fiaddl
sti
or
xchg
movb
fsubrl
mov
lahf
mov
sarb
ss
push
xor
xor
xchg
pop
scas
adc
xchg
jle
lock
push
push
int
pusha
bound
inc
in
mov
aaa
call
lods
pop
or
cmp
in
jne
jo
jnp
mov
adc
mov
push
xchg
dec
push
pop
mov
xor
aad
push
xchg
xor
cld
les
push
inc
mov
fnstsw
sub
push
mov
xor
cld
mov
out
add
xlat
into
xor
and
xor
lret
mov
imul
add
dec
roll
arpl
jge
sti
enter
js
icebp
or
dec
jg
icebp
ret
xor
pop
jae
test
mov
dec
jg
sahf
aaa
pusha
pop
and
out
fwait
ds
xchg
push
push
mov
popa
jg
dec
popa
test
jp
popf
lcall
ljmp
dec
repnz
inc
pop
or
ret
out
icebp
aas
cmp
mov
jno
and
lods
sub
cmp
pop
inc
das
lahf
jns
add
adc
pop
sti
adcb
fimull
out
cld
leave
xchg
push
clc
add
test
aam
out
shr
inc
mov
add
pop
insl
inc
imul
xor
sbb
mov
mov
or
xor
sbb
dec
out
insl
xlat
xorb
push
mov
jbe
or
enter
pusha
scas
jmp
mov
enter
in
fmulp
loope
pushf
sub
and
leave
in
sub
out
and
arpl
pop
test
aaa
mov
push
push
mov
mov
jge
sahf
es
std
jl
jl
aaa
pop
xor
ljmpw
stc
pop
push
mov
stos
std
fbstp
fwait
repz
sub
sub
pushw
add
jo
ret
in
int3
lahf
scas
mov
jno
je
fisttpl
sbb
sub
mov
push
inc
add
mov
xor
les
adc
xchg
mov
loope
sbbb
or
adc
sub
out
jne
rcl
or
cli
sub
jae
and
mov
sub
bound
das
les
aaa
sti
pop
lcall
add
push
xchg
leave
pop
fcmove
pop
aam
outsb
fsubs
push
cmp
push
insb
pushf
mov
or
xchg
or
testl
clc
dec
insb
pop
icebp
and
lea
push
and
cwtl
in
pop
adc
add
rcll
pushf
gs
rcll
adc
jo,pt
sbb
dec
inc
mov
inc
in
inc
add
push
cmp
int
ss
mov
mov
push
test
enter
xchg
push
shr
jo
in
inc
ret
test
xchg
add
pop
scas
test
adc
push
pop
les
inc
sub
pop
outsl
mov
add
fcomip
xor
mov
ss
mov
push
xor
mov
and
mov
lods
jae
pop
pop
lahf
mov
push
std
stc
test
pop
je
cmc
pop
out
dec
es
add
in
mov
repz
lahf
loop
stc
adc
imul
test
sub
fstps
popa
push
pop
int3
mov
mov
or
adc
dec
shlb
icebp
sahf
pop
hlt
in
ret
xchg
js
jp
pop
test
xorb
mov
jmp
jg
jmp
sbb
jl
lcall
pusha
jnp
push
mov
ret
inc
outsl
jp
int
push
idiv
dec
icebp
sbb
fmull
dec
or
ret
mov
xor
mov
pop
daa
cmpb
leave
pop
adc
inc
adc
mov
imul
inc
pusha
fistpll
or
aam
push
adc
dec
std
pop
mov
push
cmpsb
ja
adc
sub
sahf
ja
enter
imul
cld
push
and
cmp
sub
fdivp
je
xchg
lret
das
mov
adc
push
push
sub
fs
icebp
push
add
adc
test
lcall
lahf
call
lret
add
sbb
dec
cmpsb
push
popf
imul
daa
xchg
shlb
testb
push
out
xchg
ret
sbb
jmp
test
movsl
loop
pop
inc
cmp
push
or
xor
dec
or
sbb
mulb
insb
movsb
pop
or
jnp
scas
rcl
pop
pop
pop
aas
dec
adc
push
mov
or
and
push
or
movsl
orl
mov
out
and
pop
cmpsl
leave
insb
pop
or
xchg
inc
dec
loop
imulb
rclb
cmpsb
int
push
dec
icebp
mov
mov
pop
sbb
je
mov
je
cs
lcall
dec
or
dec
subl
xlat
and
pop
sub
fisubrs
cmp
sub
clc
call
jmp
scas
push
les
pusha
mov
sbb
and
jmp
xchg
dec
cwtl
push
sub
pop
xchg
lret
imul
or
xor
jmp
fs
adc
arpl
xchg
pop
addr16
adc
sbb
enter
xchg
outsb
add
jge
lods
shlb
ljmp
movsb
push
mov
mov
loopne
xchg
push
loope
in
and
mov
outsl
int3
clc
aam
mov
sbbb
cltd
ficompl
mov
scas
movsl
push
add
and
xchg
stos
sub
stc
lret
xchg
xor
pop
jno
inc
pop
mov
sti
cmp
out
test
divl
mov
sub
arpl
inc
mov
inc
add
loope
lcall
ret
jne
jecxz
ljmp
stc
cmp
mov
cmp
mov
dec
testl
mov
insl
inc
add
lods
aas
shrb
xchg
mov
je
xor
out
mov
dec
mov
push
movsb
lds
fstps
cmc
icebp
std
clc
sub
sbb
stos
cmpsb
stos
out
lret
mov
aam
mov
ljmp
data16
arpl
sbb
and
push
sbb
adc
push
int3
in
jbe
loopne
or
popa
dec
cmp
ss
sub
push
push
pop
ljmp
loopne
jg
xor
lock
sbb
lret
push
jb
aas
imul
addr16
or
xlat
dec
jb
cli
sbbl
ja
push
xchg
mov
out
icebp
sbb
testb
outsl
xchg
data16
jo
jge
sbbl
sbb
loopne
inc
pusha
cmpsb
sub
cmp
lds
mov
jp
test
lods
jo
mov
xor
pop
clc
out
jns
divb
cmp
mov
lea
addr16
push
jle
shll
int3
sub
imulb
scas
sbb
jecxz
repnz
adc
popa
mov
jb
sub
sub
push
iret
cltd
fisubl
dec
mov
ss
in
add
mov
hlt
into
out
mov
mov
jecxz
xor
femms
adc
sub
adc
int3
pop
movsl
inc
cmp
inc
in
jb
add
shll
pop
xor
or
into
adc
jge
cmp
leave
adc
inc
aaa
imul
adc
adc
cmp
xchg
andb
into
pop
scas
adc
and
call
movsb
jp
popf
mov
fs
iret
aam
jns
mulb
adc
xchg
andb
dec
dec
call
jmp
mov
mov
jb
push
inc
xchg
mov
pop
iret
das
mov
fld
push
leave
sarl
decb
stos
imul
pop
pop
sbb
rclb
fwait
cltd
lcall
mov
ja
cmp
lahf
loope,pt
jne
push
dec
or
or
cmpsl
mov
js
rcl
cmp
push
mov
and
cmpxchg
inc
mov
or
add
mov
push
test
cmc
add
nop
hlt
push
inc
fs
daa
daa
in
insb
push
pop
mov
xchg
push
xor
inc
aas
mov
nop
sub
xchg
hlt
inc
xlat
push
in
or
mov
mov
cmp
dec
sub
mov
lea
pop
cld
mov
repnz
fyl2x
std
or
test
movsb
repnz
lods
in
push
or
or
insb
xor
xor
inc
icebp
and
imul
daa
push
test
mov
xor
inc
xchg
das
gs
jmp
jmp
imulb
sbb
aam
inc
cld
clc
lcall
in
sub
fisttps
jle
mov
sub
ja
out
pushl
addl
xchg
inc
mov
cmp
dec
mov
inc
push
mov
roll
pop
pushf
int3
push
pop
xor
pop
scas
xchg
and
ss
push
mov
mov
filds
add
jnp
mov
lock
jo
inc
test
push
shll
inc
and
cmc
push
popf
jbe
outsl
leave
fsubr
jge
dec
repnz
insl
outsb
imull
je
stos
pop
sub
jo
lds
lods
setge
xor
loop
daa
mov
aam
out
mov
mov
cmp
xchg
popf
sub
mov
or
and
sub
fstpt
insb
or
das
xor
inc
cmpb
push
sub
mov
imul
and
and
cmp
in
push
jns
pop
mov
xchg
sub
in
testb
rclb
sti
mov
andb
jmp
pop
mov
pop
mov
or
push
fldt
inc
inc
xchg
fdiv
testb
nop
subl
dec
inc
adc
push
cs
test
and
pop
testb
or
mov
testb
cs
jl
repnz
aas
stos
and
testb
push
xchg
sub
sbb
or
scas
xchg
cmp
cld
arpl
mov
xor
idivb
ficomps
xor
pop
inc
inc
jl
fdiv
orl
jno
outsl
mov
daa
or
scas
fmull
pop
sti
lcall
scas
loopne
push
rclb
out
sub
lret
out
mov
in
cmpsl
cmp
mov
jne
aaa
cmp
sbb
fwait
dec
fs
or
rcrl
sub
in
dec
pop
pop
stos
or
sahf
xchg
test
insl
add
add
inc
fistpll
or
shrb
push
sbb
mov
cmp
lret
lea
movsb
es
mov
mov
int
inc
jecxz
jnp
mov
icebp
rsqrtps
xlat
mov
and
lock
lods
mov
pop
das
push
xor
add
cmp
aad
fwait
lds
repnz
cli
cmp
lea
out
mov
adc
mov
shl
addr16
mov
jae
mov
aad
insb
test
mov
lods
push
xchg
jge
jg
or
adc
dec
icebp
in
ret
add
popa
adc
jnp
shll
xor
stos
xchg
cwtl
cli
pop
cmp
lock
xchg
push
jns
mov
lahf
movsl
sbb
cmpsl
push
xchg
jnp
add
push
mov
and
sbb
pop
ret
cwtl
or
mov
mov
pop
adc
push
addl
add
lea
mull
push
pushf
stos
xor
out
push
lods
jmp
adc
and
insb
test
test
icebp
dec
fcoms
cmpsb
je
out
add
xor
pop
sbb
sub
cmpsl
or
pop
pop
pop
fmulp
mov
fwait
xchg
dec
jl
cli
dec
outsb
iret
xor
push
jnp
ret
scas
pop
xchg
rcrl
adc
push
mov
iret
paddusb
ss
pushf
dec
loop
aam
clc
push
imul
mov
and
in
in
mov
leave
ftst
adc
pop
int3
xlat
adcl
or
loop
jle
in
lods
out
mov
mov
jle
sub
or
movsl
sub
call
mov
cs
lock
imul
push
fldl
mov
out
test
mov
fwait
ljmp
test
pop
push
inc
sub
iret
and
mov
dec
mov
xchg
mov
mov
sbb
mov
jle
movsb
mov
int
cmp
call
add
jge
add
sbb
pop
mov
fists
mov
and
in
adc
mov
out
mov
loopne
js
cld
js
add
fcompl
mov
mov
sub
lock
test
cmp
cmpsl
rcll
and
imull
or
bound
in
repnz
jns
mov
clc
add
shlb
dec
inc
ja
shl
lahf
sbb
gs
push
shr
sbb
cmp
push
pop
dec
jmp
fnsave
cmp
push
cmp
lret
push
push
daa
pop
call
mov
jle
push
mov
adc
fcmovnu
repnz
or
sahf
repz
cltd
nop
and
imul
leave
sub
push
cltd
mov
adcb
insb
ljmp
test
xor
inc
and
jecxz
push
push
arpl
push
sbb
pop
lret
movsb
mov
push
mov
pop
jg
cmp
mov
es
fdiv
imul
insl
and
sub
pushf
sti
add
repnz
sahf
jb
lcall
in
add
mov
inc
push
pop
inc
adc
cli
push
idiv
insb
xchg
pop
out
cmp
dec
fsubs
pop
out
les
stos
lods
sbb
mov
cltd
adc
mov
stc
push
or
ljmp
mov
add
pop
bound
inc
jle
bound
push
fsubrl
je
shrl
sub
cwtl
popa
loope
dec
dec
sub
or
cmpsb
mov
jb
jl
xchg
mov
inc
sub
test
es
push
pop
mov
cmp
sbb
sub
mov
inc
fs
adc
outsl
xor
pop
test
mov
dec
lea
insb
pop
outsb
pop
out
jne
scas
out
popf
mov
bound
adcl
out
inc
add
mulb
jno
icebp
out
mov
mov
ret
xor
mov
popa
xor
pop
shrb
pop
and
and
nop
lods
js
hlt
pushf
ficoms
adc
icebp
iret
notl
mov
dec
lahf
mov
ljmp
fcmovbe
dec
dec
sbb
push
xchg
jb
lds
lods
ret
int3
orl
leave
pop
mov
lea
lcall
insb
stos
in
lahf
mov
adc
cmovb
xlat
arpl
sub
mov
mov
or
addr16
pusha
bound
mov
cmp
jecxz
dec
sbb
inc
lahf
negb
nop
inc
jmp
ds
dec
mov
arpl
jne
mov
int3
cmp
popa
jecxz
pop
test
sbb
push
aas
outsl
adc
movsb
sub
test
ljmp
or
sub
xor
and
mov
jno
cmovb
xor
out
xlat
hlt
nop
arpl
divb
in
orl
aad
mov
push
add
mov
movsb
int
cmpsl
mov
jecxz
cwtl
mov
jno
cmp
lcall
out
and
pop
aaa
jl
inc
dec
xor
dec
out
pop
xchg
jbe
dec
fldt
and
cwtl
jg
jmp
test
packuswb
iret
iret
pop
mov
inc
pop
mov
push
xchg
mov
dec
mov
push
orl
mov
mov
les
int3
test
fidivrs
stos
sarb
add
cs
cmp
lds
cmpsb
aad
inc
cmpl
pop
fcompl
icebp
sbb
lret
mov
mov
dec
push
int3
jne
dec
iret
pop
lcall
int
leave
sub
sub
cld
sbbb
or
mov
out
mov
inc
lret
sub
enter
cmp
stos
stc
fistpll
lcall
dec
inc
ret
ficomps
dec
sti
cmp
cmp
ja
jmp
inc
push
mov
or
lahf
fwait
add
push
dec
adc
mov
daa
dec
int3
rorb
rorl
pop
test
xchg
and
cwtl
lret
sub
ja
roll
sub
xor
pop
mov
idivl
cmp
hlt
cwtl
test
mov
sahf
push
xor
imul
or
out
fdivrl
imul
dec
mov
cli
push
shlb
repz
clc
and
hlt
mov
push
cmp
cmp
jg
lds
adc
pop
jnp
adc
popf
adc
or
test
mov
bound
adc
sbb
push
ret
sahf
cmp
inc
push
xor
imull
sub
lods
jb
addr16
inc
dec
jne
and
fiadds
idiv
iret
ret
pop
lock
hlt
mov
mov
xor
xchg
mov
imull
sub
in
push
out
dec
clc
outsb
pop
ja
push
jge
inc
inc
add
pop
dec
das
push
iret
fstl
test
mov
mov
sub
or
fs
cmp
mov
adc
pop
pop
push
inc
ret
xchg
add
add
and
cmp
cltd
xchg
lods
and
loopne
out
dec
repz
pop
nop
cli
cmp
jae
pop
popl
cmp
paddb
ffreep
xchg
fnsave
jb
cmp
inc
fdivs
sub
push
jno
movsl
insb
or
mov
cmpsl
dec
addr16
lret
mov
push
sub
fists
cmp
mov
orb
pusha
mov
fnstsw
rol
les
and
subb
test
add
fistpll
mov
dec
repnz
add
std
xor
in
add
data16
mov
push
jmp
sbb
cs
or
psraw
xchg
les
mov
in
jnp
inc
fstps
dec
jge
lar
jbe
dec
inc
adcb
mov
dec
add
sbb
mov
lret
cmp
inc
mov
jge
stc
cmp
call
cmp
gs
mov
push
mov
in
scas
adc
mov
dec
sbb
inc
ret
lods
add
divb
adc
dec
pop
das
aaa
ja
int
loope
add
and
inc
jge
add
sbb
or
xchg
xchg
jge
mov
mov
and
lods
cld
jle
enter
call
dec
out
sbb
push
or
cltd
mov
sbb
inc
sahf
cld
iret
in
shlb
xchg
mov
je
fdivrs
jnp
js
dec
mov
mov
lret
xor
bound
mov
jecxz
push
xchg
outsl
mov
fcoms
fldcw
and
imul
mov
jbe
jg
fisubrs
lods
int3
in
rcrb
xchg
cmp
xchg
sub
dec
adc
int3
jle
mov
adc
js
jb
lods
lahf
mov
sub
clc
cmp
sub
xchg
pop
mov
addr16
in
add
mov
fnstenv
and
push
push
imul
push
push
shl
test
cmp
insl
int
dec
jo
mov
ja
mov
mov
push
dec
not
sarl
sbb
jbe
xchg
cli
lock
data16
and
daa
pop
xchg
adc
ret
es
pop
mov
pushf
sbb
pop
xchg
mov
testl
mov
das
sti
aaa
es
push
mov
icebp
sarl
pop
xchg
pop
ljmp
rcl
aas
lahf
or
jge
or
inc
inc
inc
sub
lods
and
in
shl
xchg
movsl
jle
dec
jbe
xor
lds
and
jp
and
and
xchg
mov
es
cmp
sarb
inc
call
sub
jg
ss
jns
jle
sti
hlt
inc
aas
aas
mov
push
inc
lods
js
arpl
sub
xchg
out
sub
jnp
lock
insb
addl
stos
adc
rorl
loopne
enter
insb
jno
jg
mov
push
xor
jmp
int
cltd
addb
mov
add
add
xor
add
cmpsb
push
xchg
jo
push
lock
into
push
sub
mov
fisubl
jbe
mov
hlt
popf
hlt
repnz
in
add
daa
repnz
repnz
das
cmpsb
outsl
add
sbb
ja
or
push
movsl
bound
lret
push
push
adc
sub
mov
cwtl
and
dec
inc
mov
test
jmp
pusha
add
neg
cmp
jl
adc
adc
push
fs
cld
cmc
fucomi
and
stos
mov
sbb
sarl
fmulp
or
test
and
jecxz
sti
or
lock
jp
inc
inc
in
daa
lods
repz
sarb
inc
pop
inc
dec
dec
cmc
cwtl
fcompl
imul
fdivrs
iret
lods
jae
es
xchg
and
inc
push
xchg
stc
cmpsb
mov
insl
xor
call
movsl
call
cmp
mov
rcr
push
push
xor
sarb
repnz
push
push
pushf
add
data16
push
cltd
sarb
push
push
xor
bound
cmpsl
add
test
sub
pushf
out
aam
xor
cwtl
pop
int
ds
cmpsb
shlb
jne
adc
adc
push
fistl
sbbl
add
push
ret
ja
jbe
and
mov
fildl
ret
js
mov
dec
dec
mov
pop
insb
sbb
dec
scas
movsb
divb
mov
in
sahf
int
and
lds
pop
in
inc
pop
hlt
xchg
mov
fs
mov
xchg
pop
push
dec
movsl
add
test
jle
out
and
aas
sub
leave
loopne
aad
inc
arpl
jae
rorl
fwait
mov
and
mov
mov
pop
ljmp
je
repnz
pop
jae
xchg
mov
clc
ljmp
btr
inc
mov
or
icebp
push
xchg
and
sbb
aaa
xor
pop
sbb
std
xor
mov
add
dec
mov
inc
xchg
ja
pop
loop
push
sbb
xor
or
stos
movsl
pop
sbb
andb
xchg
lods
dec
hlt
roll
cmp
sub
pop
int3
sbb
jbe
mov
and
cwtl
daa
sbb
sub
xor
fsubs
sahf
fcomps
loopne
rcrb
mov
push
fimull
adc
mov
push
scas
adcb
xchg
cwtl
jnp
push
mov
lods
out
xchg
mov
mov
dec
jge
cmp
mov
mov
pop
in
pop
stos
lods
popf
dec
shl
inc
loop
pop
sub
divl
xchg
pop
adc
xor
enter
sbb
imul
fwait
aas
incl
les
adc
mov
cmp
ds
scas
daa
jmp
ljmp
and
sub
push
and
rcrl
cwtl
scas
lcall
clc
data16
push
pop
stos
push
mov
jns
rorl
insb
ja
jl
popf
pop
lea
mov
adc
cmp
fidivrs
and
xlat
sub
push
sbb
mov
pop
gs
adc
mov
pop
loop
gs
mov
jecxz
mov
out
xor
addr16
sbbl
jl
mov
push
fbld
call
sahf
in
cmp
fsubrl
mov
repnz
pop
insb
jmp
je
aad
sub
and
push
and
andl
loopne
push
sbb
mov
pop
mov
mov
xchg
sub
pop
popf
jecxz
pop
subb
lret
addr16
jp
xchg
repz
outsb
jbe
inc
outsb
sbb
adc
cmp
iret
xchg
out
sub
xchg
pop
xor
lods
and
dec
mov
repnz
dec
jnp
push
sub
sti
adc
je
stc
mov
cmc
push
mov
and
sub
jnp
push
push
in
and
dec
mov
das
in
xor
and
mov
pop
mov
mov
adc
fimuls
daa
in
mov
inc
hlt
pop
iret
push
cmp
adc
push
es
repnz
jo
mov
int3
inc
lds
test
cltd
and
je
testl
mov
jo
xor
mov
push
lods
aaa
adc
inc
or
pop
inc
jge
fcmovbe
xchg
clc
push
jne
xchg
mov
dec
outsl
iret
and
je
pop
test
push
cli
int3
cmpsb
push
fistpl
ljmp
mov
xor
push
call
inc
pop
push
jnp
pop
mov
cwtl
in
sar
add
in
mov
rorb
cmp
orb
dec
dec
rol
lahf
inc
or
stos
mov
jnp
push
push
sub
enter
lds
xchg
push
in
jle
mov
adc
xor
add
lods
stos
dec
int
daa
inc
jmp
mov
jle
jmp
incb
mov
push
call
or
sub
loope
mov
mov
jae
pop
jno
inc
and
pop
push
add
fcomps
stos
mov
adc
adc
inc
or
dec
aaa
add
sbb
adcl
ja
mov
push
popf
decl
push
vmovupd
stos
mov
mov
xchg
adc
rcr
inc
mov
sbb
mull
addr16
sbb
adcl
and
pushf
adc
mov
lods
ljmp
cmp
cltd
divw
dec
add
ret
xor
les
xor
push
mov
sub
or
dec
xor
sub
mov
or
push
adc
jmp
js
insb
sarl
inc
jg
pusha
loope
push
pop
adc
add
icebp
sbb
loopne
cmp
mov
jo
mov
sbb
mov
push
ss
into
imul
test
and
inc
popf
mov
les
add
stos
repnz
sbb
mov
mov
les
pop
bound
sbb
into
mov
out
xchg
ficomps
lret
imul
mov
cmp
in
mov
jg
xor
aad
repnz
mov
mov
ja
fwait
xchg
addr16
push
aas
loop
imul
xchg
xchg
imul
movsl
leave
in
push
xchg
and
cmp
idivb
adc
insb
andb
aad
test
lods
fidivs
sub
imul
xorb
jmp
mov
pop
popf
into
and
je
xchg
lahf
push
xor
cmp
adc
xor
popa
pop
pop
jne
inc
or
inc
mov
cltd
pop
push
xlat
push
imul
push
and
mov
dec
std
inc
cmp
sub
inc
jge
aam
dec
pop
xor
push
and
sub
inc
lcall
xor
stc
cmp
sbb
lahf
add
stos
sub
or
ret
and
mov
mov
es
call
rorb
jo
pop
add
in
push
inc
mov
push
lods
xor
xor
jle
or
aaa
in
iret
dec
repz
add
outsb
jae
out
mov
add
sub
fstl
divl
enter
xor
sub
pop
loopne
mov
xor
add
dec
std
or
popf
inc
iret
mov
das
adc
je
fbld
jp
mov
jecxz
sbb
daa
cli
mov
lods
ficoms
adc
push
ret
inc
lods
and
imul
jns
stos
or
scas
mov
clc
mov
aad
lods
pop
sub
sub
mov
or
ja
fisubs
call
mov
aam
cltd
and
sbb
outsl
roll
and
ss
or
mov
inc
das
push
int
xor
imul
rcrl
decl
push
or
repnz
sahf
xchg
add
cmp
mov
daa
xchg
mov
mov
imull
pushf
xchg
sbb
xor
jge
movsb
or
or
pushf
test
mov
movsb
shl
lret
xchg
sahf
ret
sub
lods
cwtl
leave
dec
push
lcall
pop
pop
cwtl
add
inc
mov
inc
push
das
into
inc
addl
ja
int
mov
cmpl
stos
outsb
xor
pop
jb
push
mov
mov
cltd
pop
mov
push
int
int
dec
or
dec
ror
push
fwait
xchg
in
mov
push
addr16
repz
scas
loope
adc
cmpsb
jl
addb
xchg
jbe
xor
mov
scas
inc
dec
mov
lods
mov
jg
adc
and
pop
mov
cmp
sarl
into
mov
aam
enter
cmp
push
cmp
les
cmpl
repnz
lods
sub
fdivrl
insb
push
shrb
dec
mov
fldl
sti
iret
cmp
sbb
sub
jmp
dec
aas
ja
out
add
jns
and
lcall
xchg
xorl
xor
testl
mov
xchg
shr
imul
or
lea
xor
dec
mov
mov
sbb
jns
mov
cwtl
daa
or
cmpsb
jb
scas
popa
outsl
cs
push
pop
dec
xorl
adc
enter
or
test
ds
fcmovne
loop
sub
test
inc
repnz
mov
or
fdivs
fwait
int
enter
aas
scas
sbb
lds
mov
mov
ret
push
mov
ficomps
arpl
jo
or
fstl
fdivrp
jae
arpl
pop
loope
movsb
inc
loopne
cmp
insb
call
inc
lret
das
adc
jne
je
mov
test
mov
xor
ret
xor
sub
mov
sbb
hlt
cwtl
cmpsl
mov
fisttpll
stos
test
lret
push
mov
les
adc
sbb
sbb
mov
out
aaa
ret
dec
neg
jl
pusha
das
aas
pop
jnp
lods
xchg
dec
inc
bound
and
add
xor
jne
lcall
mov
ljmp
fldenv
push
mov
ret
loopne
mov
ret
push
jge
fdivl
notb
daa
cmp
cs
dec
les
xchg
les
or
mov
es
add
cmp
jl
cmc
addr16
aas
pop
cmp
decl
clc
ret
mov
xor
and
cmp
icebp
jmp
pushf
push
sub
loopne
pop
mov
movsb
mov
mov
push
or
stc
mov
add
scas
add
xlat
movl
inc
rcll
and
idivb
and
insb
movsl
cmp
js
lods
xor
push
xor
adc
leave
xlat
subl
pop
xor
mov
addr16
fadd
adc
mov
enter
ficompl
sahf
jb
repnz
cmp
pop
data16
dec
inc
jl
sarl
imul
mov
lea
jecxz
pop
push
adc
xchg
pop
rclb
divl
in
mov
pusha
cwtl
lea
jae
cmpsl
xor
jb
mov
fimuls
movsb
insl
bound
adc
pop
xchg
sub
imul
outsb
push
cmp
xchg
jge
jp
adc
and
cltd
ja
mov
sub
loop
into
adc
mov
out
pop
adc
ret
std
dec
cmp
lock
fistl
fstl
insl
scas
in
jnp
jp
das
xchg
sbb
leave
shlb
testb
push
into
sbb
xor
sbb
jbe
in
jg
lahf
cld
mov
repz
xchg
fsub
xchg
cmp
sub
mov
js
rcll
inc
movsl
sbb
pusha
jno
cmp
adc
mov
mov
push
repz
adc
add
sahf
pop
sahf
mov
mov
adc
jns
inc
pop
jl
cmp
pusha
add
jp
mov
sbb
mov
mov
cmc
sbb
add
push
or
fdivs
push
mov
js
add
jmp
int3
push
aas
cmpsl
mov
ss
add
imul
cmp
leave
mov
push
jp
aam
mov
cmc
stc
mov
mov
mov
scas
iret
and
add
cltd
aas
sti
or
addr16
mov
insl
mov
das
mov
into
xor
shlb
sub
clc
negl
xor
dec
mov
pop
adc
cld
mov
mov
mov
pop
rorb
push
cmc
enter
je
inc
gs
push
bound
dec
mov
lods
jno
sbbl
jg
enter
imul
add
mov
pop
sub
cmp
lock
pop
mov
in
pop
mov
leave
test
jg
out
inc
fiadds
add
repnz
nop
mov
outsb
imul
jle
sub
cmp
cld
or
shll
cld
ror
icebp
aaa
add
iret
sarb
insl
cmc
xchg
push
ja
and
mov
jmp
sti
and
jns
xorb
push
add
adc
add
rcrl
mov
je
sub
adc
cltd
rcrl
ljmp
inc
clc
int3
test
or
cmp
xor
pop
insl
loop
sbb
outsb
ret
fnsetpm(287
mov
adc
int
out
insb
movsl
adc
jne
shrl
add
xchg
jb
adc
jbe
xlat
sub
cmp
mov
lret
fnstcw
repnz
dec
mov
dec
stos
addr16
out
stos
mov
jb
lds
inc
dec
orb
sub
stos
jb
mov
or
jp
push
in
loope
sub
addr16
pop
push
add
add
jmp
mov
jne
sub
mov
fisubrs
pinsrw
gs
xchg
inc
push
and
dec
inc
int
push
jg
or
mov
dec
idivl
jle
loopne
cmp
or
in
cltd
sub
js
lods
adc
sbbl
jae
mov
sub
inc
mov
in
lea
and
jge
rdtsc
mov
test
inc
cmpsb
int3
mov
push
dec
mov
adc
test
insl
fdivrs
mov
shlb
and
sub
ljmp
mov
mov
sub
cmpsb
inc
xor
jae
push
or
xchg
leave
fadds
push
dec
push
push
loope
addr16
push
mov
in
rol
adc
add
inc
jb
xchg
cmp
sbb
popf
mov
sub
rorb
pop
push
push
mov
xchg
adc
jns
pop
jecxz
rcll
pushaw
jl
xor
movsb
fstps
jg
outsb
dec
loope
and
jnp
or
jmp
push
jno
push
sahf
xchg
jmp
push
mov
dec
clc
mov
data16
lret
decb
aad
mov
jae
dec
inc
lods
push
pop
loop
enter
fsubrl
adc
fwait
pushf
mov
mov
fdivrl
pop
mov
dec
pop
mov
neg
mov
add
jnp
sahf
sbb
push
aaa
sub
cs
incl
xchg
imul
mov
scas
xlat
out
nop
cmc
inc
clc
mov
sbb
lret
add
loop
lds
sbb
stc
mov
lock
push
loop
pop
adc
icebp
pop
add
push
mov
lret
out
nop
jge
pop
jae
loop
insl
clc
mov
fs
dec
mov
mov
fisubl
sbb
test
sahf
lahf
cmp
fwait
mov
pushf
ret
scas
push
and
pop
jg
inc
lahf
push
insb
imul
cmp
mov
dec
movl
imul
scas
fcoml
pop
das
fmul
shlb
sahf
inc
gs
jb
jnp
jns
cwtl
rcll
mov
mov
cmp
jecxz
add
xor
dec
into
dec
mov
mov
pusha
jmp
mov
cltd
and
aaa
loope
pop
jle
xor
rol
and
cld
fistpl
dec
push
js
mov
jp
repnz
inc
jne
lgs
inc
add
ds
ja
mov
mov
jp
mov
lods
aas
call
adc
pop
pop
adc
pop
mov
push
test
test
pop
notl
xchg
sub
xchg
fucomp
sbb
fwait
aas
jno
xchg
pop
or
sub
dec
sbb
ret
stos
sbb
cmpsb
jnp
mov
push
pop
test
mov
sub
inc
fcmovnb
int
sbb
fidivrl
jnp
imul
xor
jo
shl
push
gs
pop
fistl
int3
jns
sub
scas
in
stc
imul
lret
push
mov
loope
jns
cli
push
into
adcb
pop
test
mov
dec
mov
fwait
cmp
nop
xchg
sub
int
or
movsl
cld
aam
push
dec
or
mov
stc
jbe
xchg
pop
cs
mov
or
cld
adc
mov
hlt
imul
shl
into
das
pushf
mov
insl
movsb
in
andl
rol
jge
xchg
or
cltd
push
std
jl
xchg
scas
andb
outsl
xchg
dec
jno
push
popf
shrl
outsl
lcall
enter
or
js
int3
in
pop
pop
inc
pop
lods
fstl
leave
in
inc
movsb
mov
mov
sbb
outsl
cwtl
insb
cwtl
test
adc
pop
and
cltd
movsb
and
mov
fwait
insb
or
or
aam
mov
or
cli
popf
orl
and
adc
out
adcl
pusha
add
out
adc
ds
movsl
xor
fldl
fsubl
xchg
ret
sbb
jg
js
and
xor
push
jo
fs
and
cmpsb
sbb
mov
mov
jb
sbb
ds
xor
lahf
out
mov
inc
lcall
sti
jne
jge
call
push
lds
sub
mov
arpl
jns
dec
movsl
xorb
pop
xchg
adc
push
shll
xor
clc
hlt
sbb
adc
jl
jo
xor
mov
outsb
and
push
pop
out
push
push
add
enter
jno
nop
xor
and
xchg
cmp
pop
add
jg
mov
in
cmp
out
ja
mov
leave
movsl
sub
mov
mov
movsb
pushf
mov
sbb
mov
mov
mov
roll
je
inc
fsubl
ds
jae
mov
cld
lods
mov
popl
xor
cmc
aaa
call
mov
mov
push
xor
and
jns
movsl
data16
mov
dec
aaa
pop
push
push
inc
cwtl
pop
push
fs
xchg
pop
rcrl
xchg
xchg
adc
pop
and
pop
movsl
leave
ljmp
test
mov
sub
pusha
or
jge
xor
out
xchg
or
std
into
sub
sbbb
jg
jnp
add
insl
jns
fbstp
in
fimuls
mov
or
lods
add
fidivrl
adc
ja
or
or
sub
inc
out
es
inc
cmp
jmp
adc
in
and
jg
jmp
lock
adc
xchg
mov
rclb
add
push
call
js
fdivrs
daa
mov
js
sbb
jno
sbb
push
mov
push
or
jno
stos
jp
mov
lods
mov
jp
std
notb
push
add
mov
mov
xor
movsl
mov
mov
or
inc
push
pop
popa
push
push
test
xchg
insl
or
add
jecxz
cmpsb
mov
imul
mov
lods
orl
cmp
mov
jg
push
dec
js
mov
popf
insb
fcmovbe
pop
xor
or
stos
mov
inc
adc
out
clc
nop
jmp
mov
stos
shll
jmp
dec
in
add
lret
bound
xchg
pop
stc
sarb
mov
xor
data16
ljmp
sbb
xor
mov
mov
cmp
ljmp
hlt
inc
cwtl
sub
xor
mov
push
xor
js
das
in
shrb
mov
in
out
jb
fidivrl
std
mov
imul
xor
xchg
clc
testl
cmp
mov
js
fs
or
sub
movsl
push
divl
cmp
cld
test
inc
dec
roll
mov
js
mov
cmp
or
dec
mov
out
je
jecxz
movsb
cmpsb
scas
xchg
mov
sbb
sahf
jo
andl
out
ret
mov
or
lret
cs
mov
add
dec
lahf
add
add
insb
adc
repz
mov
bound
pop
mov
jae
and
cwtl
int3
out
loop
pop
or
and
pop
loope
mov
push
stc
stos
sti
cmc
mulb
es
jae
and
scas
cmp
fidivrs
or
cld
xor
nop
aaa
imul
les
push
in
adc
int
push
cs
pop
les
fdivl
daa
mov
and
pop
xchg
mov
imul
xchg
fsubs
scas
xor
mov
sub
xchg
ss
or
in
xor
out
dec
dec
push
jns
idivl
mov
cmp
pop
fstpl
xlat
psubd
mov
jno
ja
xchg
rclb
push
cmpsl
shl
and
dec
int3
addr16
leave
dec
cld
jns
dec
das
mov
cmpl
push
clc
mov
and
mov
ljmp
and
add
sbb
imul
mov
mov
lret
stos
jecxz
or
xor
or
mov
outsb
adc
sbb
add
mov
not
push
data16
int3
jge
lock
enter
scas
imul
cs
cmp
or
or
pop
bound
idiv
sti
push
fdiv
jmp
or
daa
sub
idiv
std
and
add
inc
cmp
inc
and
sbb
in
pop
enter
cmc
insb
and
fwait
rolb
cmpsl
sbb
les
jbe
outsb
enter
or
ja
push
fisttps
cmpsb
sub
push
and
inc
mov
data16
jns
rcrl
xchg
sbb
test
inc
sbb
xchg
and
push
inc
xlat
int3
test
loopne
repnz
and
test
loopne
ja
pop
adc
js
popf
mov
loop
dec
lock
out
xchg
xchg
xchg
sub
test
pusha
mov
xchg
in
push
lods
leave
loopne
and
pushf
leave
push
insb
fiaddl
xchg
xchg
div
scas
ret
and
pop
aad
test
mov
dec
lahf
xchg
push
push
push
insl
leave
fld
icebp
fdivs
gs
mov
mov
xchg
inc
push
repz
jns
mov
fisttps
repz
cwtl
mov
idiv
lods
pushf
jno
test
dec
push
mov
sti
shll
stos
out
mov
push
sarl
sbb
mov
bound
cmp
mov
mov
mov
test
jmp
inc
pop
mov
dec
fbstp
gs
shlb
and
out
sar
dec
pushf
and
jecxz
lahf
sti
sbb
lcall
push
movsl
nop
or
rcrl
push
jno
aad
shlb
jae
fistl
sub
popa
mov
mov
add
daa
movsl
mull
mov
cmp
ret
cmpsl
das
adc
jno
loopne
jle
adc
and
mov
cwtl
aad
pop
ret
aas
add
in
clc
push
lcall
fistpl
out
das
and
push
push
fs
or
scas
xchg
lds
cmp
into
pop
iret
mov
arpl
pop
les
je
xchg
aad
jmp
cmp
mov
adc
sahf
xor
out
je
cmpsl
mov
outsb
sbb
js
movd
push
sbb
lds
pop
push
sub
pop
cltd
in
mov
pop
popa
jbe
rcrl
push
xchg
push
cmpsb
adc
scas
dec
repz
mov
and
cmp
popf
loopne
or
cmp
inc
and
adc
cs
sti
cmpsb
jne
aas
sbb
jmp
aas
jecxz
lahf
xchg
xchg
sbb
jg
and
je
ljmp
pop
push
enter
mov
mov
pop
rclb
mov
je
fucom
ret
idiv
cs
xchg
iret
jno
repz
ss
jecxz
cmp
je
lods
lahf
xchg
pop
sbb
mov
mov
pop
pop
out
mov
dec
sub
in
or
test
cwtl
sbb
pop
rcrb
int
sbb
fmull
mov
jp
push
incl
ret
std
xchg
popa
inc
out
cmpsb
ja
mov
imul
imul
int
int3
or
lock
push
loop
call
mov
add
pusha
icebp
xor
mov
cmp
jmp
jg
insl
and
push
jp
fwait
mov
and
cmpsb
std
add
push
stos
int3
clc
aaa
push
inc
or
insl
sub
std
movsl
and
into
jecxz
sub
cli
push
sbb
into
out
sbb
add
adc
sti
pop
arpl
test
fnstcw
rorl
negl
adc
stos
mov
mov
shr
daa
sub
stos
je
sub
mov
pop
imul
test
sar
sbb
mov
xor
sbb
or
outsb
mov
and
jbe
sbbl
xchg
sbb
decl
jp
jb
in
pop
dec
repz
pop
sbb
out
rorb
jo
cltd
rclb
cli
and
pop
lods
mull
sbb
pop
jb
dec
xchg
mov
loope
int
sahf
or
inc
dec
push
pop
stc
pop
push
inc
and
mov
in
ds
imul
jbe
xchg
pop
mov
adc
repz
jg
in
inc
imull
nop
dec
int
std
jno
xor
xchg
scas
push
cltd
imul
mov
addr16
adc
push
pushf
in
dec
jp
pop
bound
out
adc
mov
in
add
pop
stos
mov
in
in
enter
std
fwait
mov
mov
pop
rorb
push
mov
xchg
das
xor
inc
test
xchg
cltd
bound
and
sbb
xorb
mov
inc
stos
cwtl
add
loop
add
jb
push
lret
mov
add
and
pop
cli
mov
adc
sbb
lret
sub
retw
popa
fsubs
fildl
out
sub
sub
push
scas
int3
dec
mov
ret
loop
push
jg
mov
push
pop
xor
pop
mov
popa
jne
and
mov
mov
fldenv
pop
shlb
jle
or
icebp
mov
push
aas
lret
cltd
cli
push
pusha
mov
sub
mov
and
jl
mov
int3
jg
mov
mov
mov
mov
insb
push
mov
arpl
xchg
imul
sbb
and
mov
inc
xchg
in
cmpsb
lret
sbb
movsb
idivl
jb
inc
push
pushf
mov
cmp
push
enter
jge
push
mov
mov
mov
arpl
in
mov
rcr
test
inc
sbb
or
jns
mov
fimull
sbb
add
adcb
pop
out
push
inc
adc
jmp
rol
add
fists
dec
rolb
pop
pusha
sbb
push
push
mov
in
cmpsb
or
cmp
fsubs
std
test
sbb
stos
xor
pop
std
mov
inc
mov
add
sbb
movsb
inc
divl
mov
jle
ljmp
lods
xchg
test
inc
ficoms
mov
push
lret
repz
hlt
sbb
add
add
frstor
pop
adc
or
dec
mov
or
dec
add
jae
mov
cwtl
fsub
xchg
jmp
pop
and
xor
xchg
addr16
iret
dec
sub
inc
xchg
and
sub
movsb
xchg
cmpxchg
int3
sub
inc
mov
test
sub
ret
das
icebp
les
mov
pop
xor
addr16
jb
sub
mov
aas
sbb
sub
xlat
push
jle
cmp
cmp
jecxz
xor
xchg
pop
push
or
dec
ja
loope
mov
test
dec
xchg
add
test
jmp
add
loope
out
cwtl
xchg
lods
mov
shl
lret
mov
fs
sbb
mov
inc
add
cld
and
test
mov
cli
and
xor
sub
adc
int
xchg
mov
leave
gs
push
inc
xchg
inc
cmp
pop
stos
sti
xchg
mov
fsubr
jp
push
pop
and
enter
sub
aad
fiadds
outsb
sub
in
push
adc
or
aaa
sub
adc
dec
inc
arpl
shlb
pop
daa
adc
or
ss
xlat
in
es
mov
add
lock
jbe
test
xchg
scas
pop
sbb
test
rcl
aam
push
je
js
add
imul
push
push
ret
daa
jne
nop
ja
rcrl
sti
mov
in
imul
mov
sub
jne
loope
fsubrl
fcomp
mov
and
cmp
decl
push
fnstcw
and
xor
or
mov
or
sbb
sbb
xor
and
popf
sbb
ss
mov
and
mov
sahf
rorb
sbb
fdivrs
sbb
insb
mov
mov
in
pop
xchg
mov
jmp
das
mov
mov
mov
lods
xor
push
popf
xchg
sarb
mov
pusha
fmull
lea
fisubl
cmpsb
pop
pusha
arpl
adc
sub
adc
sub
shlb
pop
xlat
push
lcall
sub
movsb
mov
jno
jae
cld
pop
daa
js
sbb
int
pop
push
dec
inc
in
fcmovnu
mov
js
adc
inc
pop
mov
mov
xchg
lahf
fcmovnu
sub
add
ficoms
inc
mov
aad
outsb
dec
nop
mov
xchg
fsubl
add
mov
fwait
aam
std
fwait
sbb
fisubs
fildl
pop
lods
shr
sbb
andb
das
sbb
cmp
mov
test
cld
mov
mov
sub
dec
pop
out
inc
push
lds
jmp
cmp
sti
push
scas
movsb
in
inc
lcall
dec
jae
sahf
push
fsubrp
test
aaa
dec
mov
push
hlt
dec
lahf
push
push
shr
scas
and
fwait
push
aaa
dec
sahf
fsubrl
cmp
ret
cltd
movsb
ss
jmp
sbb
imul
loope
js
push
test
push
push
inc
imulb
and
and
inc
sahf
or
dec
cmp
iret
push
fwait
mov
add
and
dec
aas
cs
push
mov
testb
lods
push
push
cmp
fimull
fldcw
and
lahf
loope
xor
and
inc
pop
push
cli
in
xor
fwait
sarl
sub
cmp
cwtl
mov
sarb
lahf
loopne
xchg
jns
lock
imul
bound
sbb
fsts
scas
data16
xor
rorl
cmp
clc
or
xor
call
jge
inc
out
out
mov
imul
jne
dec
jecxz
adc
dec
aaa
popf
cmp
jecxz
dec
cld
mov
jb
dec
gs
stc
fildl
push
hlt
daa
sub
xor
stos
in
xlat
jmp
pop
insl
daa
dec
fistpl
lods
bound
ljmp
aad
stos
or
xor
test
lods
outsb
xchg
shlb
aas
je
mov
hlt
add
loope
int
jb
rclb
adc
divl
xchg
push
xchg
aam
sub
mov
frstor
pop
xor
out
push
inc
popa
or
cmp
pusha
int
inc
jp
fcom
dec
scas
lods
inc
movsb
jb
adc
lock
outsl
jo
js
pop
push
push
pop
cltd
xor
test
in
testb
ja
dec
jmp
imul
out
or
jbe
jne
pop
jnp
fs
or
cmpb
sbb
xor
rcll
test
dec
int
pusha
cmp
cmp
fidivs
and
jne
and
mov
stos
sbb
sbbl
sub
sub
dec
push
cmp
les
fildll
call
imul
icebp
xor
andl
add
out
pop
sub
xchg
xchg
psadbw
fwait
test
sbb
stc
hlt
incb
scas
aas
xchg
or
mov
test
jbe
stos
jl
stos
or
mov
lods
jae
mov
out
xor
xor
addb
ja
aam
jns
mov
rolb
xor
push
std
jmp
xor
xor
dec
xchg
xor
pushf
fdivrl
mov
stos
mov
mov
sbb
mov
push
stc
or
mov
fildl
push
jp
pop
mov
xchg
out
dec
stc
mov
push
decl
imul
loopne
or
mov
mov
or
mov
xchg
dec
xor
cmp
ret
mov
cltd
mov
mov
or
mov
xor
sahf
xchg
xchg
push
dec
out
call
xchg
and
mov
stos
sarl
clc
pop
es
pop
pop
shlb
cmp
cmp
loopne
push
add
inc
clc
jb
imul
inc
dec
jns
mov
inc
loope
push
or
arpl
push
cmpsl
cmp
mov
fimull
inc
cmpsb
jmp
cmpb
test
out
lret
xor
dec
push
add
clc
popf
or
sbb
gs
dec
es
test
sbb
jb
cld
sub
add
cmpl
in
add
xchg
mov
pushf
frstor
sbb
insb
xor
inc
aam
ljmp
pop
adc
popa
mov
in
pop
xor
jp
pop
outsl
dec
xchg
into
dec
and
add
pop
dec
inc
ds
les
popa
imul
and
inc
mov
inc
mov
stos
out
add
xor
jne
aas
sbb
or
stc
mov
push
mov
xchg
lods
jecxz
cwtl
cmpsb
jmp
cltd
jp
pop
push
lods
out
lds
cmp
jbe
mov
lahf
sub
sub
test
pop
add
arpl
mov
jb
inc
push
sti
mov
cmp
out
xorl
pop
push
mov
and
fdivrl
lcall
lret
xor
sub
jge
jmp
sbb
dec
sbb
xor
add
cmp
lds
or
or
out
xchg
imul
adc
adc
ljmp
rolb
ja
sbb
shlb
mov
mov
lds
int
adc
xchg
clc
cmp
mov
pusha
inc
jecxz
mov
das
inc
arpl
xor
add
test
xchg
xchg
repnz
iret
in
arpl
aad
das
das
inc
xchg
pusha
jle
and
fmull
movsl
es
shlb
ret
mov
xchg
mov
adcb
gs
mov
adc
mov
adc
sub
fsubrs
mov
adc
cmp
cs
fs
std
dec
and
jno
pusha
pop
inc
mov
mov
mov
cmp
cltd
fdivl
inc
fs
or
or
xchg
lret
adc
lret
push
mov
jmp
xchg
xchg
mov
fnstenv
js
xor
mov
adc
fadds
cmp
inc
inc
cmp
int
push
out
cmp
lahf
pop
frstor
popf
pop
daa
xor
cmp
fnstcw
mov
pop
stos
add
aam
inc
stos
aam
lods
xchg
call
and
and
cmp
test
sub
mov
out
adc
jg
add
fildll
dec
push
pop
in
xchg
loope
lahf
loope
in
push
dec
jae
cmp
add
push
scas
leave
push
imul
cmp
repz
icebp
and
jecxz
jg
in
or
addr16
mov
and
imul
dec
cmc
sub
ds
aaa
cltd
push
ficomps
aaa
scas
push
imul
test
dec
stc
pop
cmp
fwait
pop
scas
mov
mov
movl
cli
repnz
dec
mov
cmp
push
movsl
push
pop
inc
and
stos
mov
jbe
stc
pushl
cmp
dec
lds
adc
sub
cmp
inc
inc
mov
pop
aam
jp
sti
popa
sub
add
scas
call
cltd
add
arpl
rclb
pop
cmp
dec
pusha
fwait
mov
xchg
inc
adc
fdivs
nop
ss
dec
movsb
xchg
xchg
in
cmp
imul
repnz
test
ljmp
add
jg,pn
push
in
push
mov
add
lret
and
cltd
outsl
xchg
pop
jle
sub
stos
mov
movb
ds
inc
pop
inc
lea
repz
lods
inc
js
and
fsts
and
mov
ss
cld
mov
imul
cmp
xchg
mov
jbe
and
bound
test
lret
lcall
or
fstpt
mov
pushf
cltd
adc
pop
test
subl
xchg
out
in
sub
loope
test
or
mov
cmpsl
mov
mov
inc
mov
xchg
stos
inc
adc
in
int
sahf
add
ror
lret
jmp
xchg
mov
add
xchg
jle
and
dec
fsubs
stc
xchg
out
lcall
aam
push
cmp
sub
sub
xor
mov
sub
daa
into
leave
mov
pop
mov
cmp
rcrl
pop
fnstenv
and
push
out
das
pop
data16
ret
push
cmp
ret
pop
push
and
sub
cmpsb
insl
loop
jb
or
cltd
idivb
inc
leave
push
cmpsb
fs
jno
fsubl
test
dec
aas
fidivrl
lods
and
cmc
lock
push
push
fst
pop
cmp
les
out
lods
fwait
mov
outsl
scas
int3
imul
icebp
xor
jb
jne
mov
mov
and
nop
sub
xor
rorl
jg
ja
out
sbb
mov
push
xor
xor
sti
sbb
ror
fcoms
fldl
jns
ljmp
xchg
cmpsl
lahf
pop
test
divb
mov
lcall
das
pop
sti
std
cmp
jecxz
inc
mov
jecxz
mov
jl
xor
outsb
push
add
adc
in
lods
add
jno
pop
mov
mov
fcompl
fwait
shll
mov
push
sbb
xor
aas
and
sbb
xor
cmc
mov
out
mov
call
xor
mov
rol
jne
movsl
pushl
jg
xor
jl
mov
jmp
aad
mov
and
jmp
jae
out
sbb
fwait
out
test
dec
ss
pop
fs
dec
pop
test
clc
dec
sahf
jecxz
inc
popa
adcl
std
add
lods
cmp
add
mov
push
sbb
push
mull
lret
cmpsb
sarb
dec
jns,pt
dec
xchg
loope
push
mov
rcl
dec
sbb
lods
jecxz
lea
sbb
sub
idivl
cmp
mov
cmp
aaa
add
inc
iret
add
and
pop
call
cmc
mov
dec
xchg
fmuls
repnz
push
push
push
xchg
jns
add
test
out
lods
push
cpuid
popa
dec
ret
adc
sub
repnz
push
sbb
faddl
mov
mov
leave
and
sub
xor
idivl
into
or
into
shrl
adc
stc
add
mov
mov
push
and
jbe
mov
shr
mov
lret
sbb
roll
push
mov
jle
jmp
mov
cmc
pushf
nop
or
push
pop
mov
xchg
pop
push
sbb
xrelease
xchg
je,pt
icebp
or
outsl
adc
sti
imull
or
sbb
mov
mov
stos
lcall
push
sbb
lds
push
add
cltd
insb
push
stos
mov
cmp
ret
lcall
lock
inc
push
cmp
add
mov
adc
aad
mov
aaa
rcll
adcb
outsl
je
inc
xchg
jl
fimuls
pushf
push
cmp
subl
cmp
mov
test
jns
xor
test
ljmp
jb
fstl
dec
xchg
arpl
ja
jecxz
mov
inc
jmp
lcall
out
pop
ficoms
arpl
orl
mov
xor
push
or
mov
fs
cmpsl
dec
inc
pop
js
cmp
jns
fmulp
xchg
shrl
loop
inc
int
daa
jbe
enter
xor
jae
popa
lea
decb
aaa
addr16
out
jno
daa
fstps
sub
push
aad
lods
bound
push
lcall
out
mov
into
add
in
insl
pop
jnp
mov
mov
icebp
shrl
lods
cmpsl
stc
test
rcl
adc
pop
aas
sbb
cmp
in
repnz
mov
pop
insl
test
out
dec
or
add
ror
push
dec
push
jl
outsl
rolb
sub
mov
into
jns
sub
cld
sub
dec
cli
mov
scas
std
xor
nop
or
mov
push
mov
sbb
lods
aad
push
ds
jge
dec
rcrb
mov
inc
push
push
clc
jno
mov
mov
outsl
into
sub
stos
decb
pusha
stos
dec
mov
addr16
inc
xlat
or
jb
andb
bound
sbb
sub
je
leave
cs
cmp
jno
int3
das
mov
clc
dec
inc
dec
ljmp
scas
dec
mov
cmp
mov
and
in
add
adc
in
setge
ljmp
lret
adc
xor
nop
repnz
xchg
dec
xorb
mov
push
loop
sbb
outsl
lods
xor
and
pop
mov
jecxz
insb
stc
hlt
out
inc
jg
popa
inc
mov
push
and
jbe
jae
je
or
lods
add
lcall
add
into
add
mov
ds
push
pop
lods
adc
inc
pop
sub
pop
pushf
jecxz
cmp
mov
cwtl
push
jnp
out
dec
adcb
rcrl
and
shrb
xchg
xadd
bound
sbb
outsl
or
lcall
xchg
cli
test
mov
add
in
cmpsl
and
sub
test
add
dec
aam
add
scas
pop
call
and
dec
fdivrs
popf
jo
mov
sub
fstps
add
outsb
add
adc
loop
ljmp
ljmp
clc
ret
mov
xchg
fstp
mov
loope
test
xlat
repz
push
test
add
clc
pop
mov
lds
es
push
inc
test
sbb
sbb
and
daa
cmpsb
mov
jge
into
shr
lods
jp
xor
out
add
ljmp
cmp
repnz
out
cld
pop
imul
movsb
out
fdivl
or
rcr
stos
sbb
in
jl
scas
mov
dec
add
adc
xor
roll
clc
iret
mov
stos
mov
pop
mov
push
sub
mov
sbb
std
jg
xlat
xor
add
scas
fcomps
jno
xchg
lahf
out
sbb
xor
mov
in
inc
pushw
push
std
add
mov
sub
ficomps
cmp
push
dec
das
test
shrb
pushf
and
arpl
js
push
sbb
sbb
fdivl
lock
popl
movsb
fdivrs
sbb
outsl
jnp
hlt
aam
enter
add
ja
dec
outsl
pop
pop
dec
icebp
gs
mov
xchg
sbb
ret
aaa
cmp
into
mov
inc
mov
adc
hlt
xchg
xor
mov
int3
popf
mov
jno
mov
dec
out
aad
dec
sahf
inc
ds
fistpl
mov
out
mov
push
or
inc
dec
sub
sbb
mov
in
cmp
cmpb
addb
sar
xor
fldl
dec
ret
pop
dec
xchg
loop
insb
sbb
xlat
sbb
xor
mov
adc
dec
adc
rep
cwtl
sub
lds
cmp
add
fldenv
jl
fldenv
ljmp
fnsave
cmpsb
jl
cltd
jns
call
fwait
xchg
xor
adc
enter
jns
add
aaa
fwait
aam
or
jp
incl
test
or
add
and
mov
lea
flds
mov
bound
outsb
popf
jne
and
inc
dec
inc
jo
out
movsl
cmp
add
mov
xchg
fimull
dec
lods
jo
mov
and
dec
dec
out
add
or
pop
adc
imulb
pop
jg
mov
aaa
jbe
inc
fistps
pop
bound
lret
adc
jmp
vmovdqa
adc
add
mov
rorb
movsl
shrl
popl
cmp
mov
sub
loope
inc
jbe
mov
add
push
popf
jp
ljmp
lcall
sub
leave
mov
mov
les
push
pop
sti
fcoml
aaa
popa
jns
rclb
mov
inc
mov
mov
les
js
aam
push
push
out
or
add
push
ret
pop
idivb
jb
push
cmc
mov
pop
into
stc
mov
jae
pusha
nop
mov
sbb
repz
ljmp
mov
popf
mulb
jle
rolb
in
adc
mov
loop
xchg
mov
add
out
cmp
and
jo
push
xor
dec
outsb
jbe
cli
into
into
shl
push
fwait
ror
mov
test
mov
jo
jecxz
xchg
in
dec
pop
push
pop
mov
out
andps
pop
das
push
popa
cmp
fisubl
das
mov
xor
push
pop
mov
adc
add
jg
adc
mov
ret
lock
bt
mov
clc
enter
stos
fldt
jo
cmp
mov
out
jno
push
cld
mov
xchg
mov
xor
adc
out
clc
mov
fs
pusha
jl
movsb
push
test
divl
cmp
lods
add
adc
out
je
push
adc
leave
fnstsw
jno
mov
fisubrl
repz
dec
dec
xor
fistps
ja
and
scas
outsb
or
jns
xor
mov
and
mov
idivb
sbb
lods
int3
mov
push
pop
cmpsl
loope
jp
test
imul
daa
mov
sub
jl
fcomip
sbb
adc
in
mov
sti
cmp
push
mov
mov
and
mov
jnp
pop
mov
dec
ljmp
or
aad
test
sub
popf
xchg
shlb
jae
in
ljmp
lods
adc
test
mov
or
pop
movsb
inc
jo
int
jmp
addps
push
push
repnz
push
xchg
lret
lods
cmp
mov
loopne
lcall
inc
loopne
push
adc
insl
cmp
in
mov
inc
je
jno
nop
test
jg
cltd
ficomps
add
cwtl
mov
pop
sub
arpl
inc
xchg
push
fisttps
add
jo
cs
sbb
lret
cmc
shrl
adc
notl
hlt
pop
rol
sub
enter
cmp
in
mov
dec
and
jns
inc
xchg
inc
jle
lea
fwait
pusha
movsl
fstp
stos
cmp
sbb
aam
rcrl
adc
mov
mov
cmpsb
push
ret
call
xchg
jl
adc
insb
sub
scas
or
aas
sbb
dec
arpl
je
xor
das
sbb
mov
out
or
and
xor
daa
lcall
mov
cmp
mov
add
push
insl
push
pop
jle
and
mov
pop
lods
dec
sbb
insb
xchg
cmc
and
adc
push
push
cmc
ret
insl
rolb
es
call
xchg
sti
xchg
repnz
sub
jae
in
pop
shlb
mov
xor
xchg
mov
add
inc
ret
popf
mov
sub
and
push
cmp
icebp
in
in
out
add
lods
idivl
mov
negb
aaa
add
mov
push
and
aam
mov
xor
add
mov
hlt
inc
xor
js
inc
fwait
inc
mov
std
mov
push
mov
sub
ss
and
stc
sahf
or
repz
frstor
pop
or
stos
insb
js
and
pop
add
scas
imul
cwtl
outsl
inc
addl
out
push
js
jmp
or
seto
pusha
les
push
adc
mov
xchg
pop
inc
jge
hlt
jmp
cmpsb
adc
call
pop
mov
adc
add
xchg
fwait
pop
mov
mov
xor
fmuls
aad
dec
push
out
push
stos
gs
jb
or
dec
mov
or
arpl
mov
inc
xchg
aad
sbb
enter
jecxz
inc
loopne
fsubrl
or
adc
mov
daa
into
sbb
sub
lods
adc
xchg
fildll
cmc
in
popa
cmp
clc
fwait
cltd
mov
push
insb
imul
xchg
stos
cmp
test
jge
jne
push
pop
js
sub
dec
dec
and
inc
in
test
cmpsb
scas
lods
lods
mov
test
leave
jmp
lret
push
and
out
xor
push
mov
push
dec
pop
and
pushf
insl
push
xchg
mov
iret
cmp
clc
push
lahf
sub
dec
mov
in
out
test
jg
loopne
movsl
inc
repnz
aaa
xor
sbb
lahf
je
mov
mov
imul
jp
fnsave
loopne
push
and
jne
sub
pusha
mov
cltd
sarb
xchg
hlt
in
std
outsl
xchg
mov
or
jno
aas
xlat
add
out
jge
cmpsl
gs
in
xchg
cmp
cli
add
fwait
dec
adc
popa
ljmp
cmp
mov
adc
and
mov
sub
test
pop
mov
in
cmp
cmp
inc
fildll
movsb
icebp
xchg
jbe
dec
movsl
mov
imulb
jne
dec
push
push
xchg
dec
ljmp
outsb
pop
jmp
jae
stc
inc
push
imul
sarl
push
ret
add
es
popf
std
mov
out
inc
int3
scas
push
lock
int
push
cmc
aad
push
mov
dec
or
repz
or
push
sbb
push
pop
aad
xor
mov
xchg
ret
shlb
and
scas
xor
inc
mov
xchg
lods
movsl
loopne
iret
dec
ss
xchg
fbld
fldt
cmc
or
mov
pusha
aad
bound
sub
cmc
pop
imul
and
iret
dec
shrb
les
je
divb
and
cwtl
mov
mov
movsl
bound
dec
inc
loope
mov
push
cmpb
insl
test
adc
loope
lret
cmp
mov
lds
jmp
movsb
dec
call
mov
sub
jae
mov
mov
shll
andl
cld
pop
mov
mov
or
jnp
jo
xchg
jg
dec
dec
outsb
xchg
rcr
and
repz
stos
dec
jecxz
mov
mov
jge
mov
sbb
in
addb
inc
inc
mov
repnz
push
mov
push
stc
pop
xchg
imul
add
mov
ficomps
and
push
and
inc
ret
daa
and
cmpsl
repz
jne
insl
jl
mov
cwtl
ljmp
mov
adc
mov
dec
add
fldcw
paddusw
sbb
add
mov
ljmp
loopne
negb
stos
xchg
sbb
mov
fdivl
outsl
in
adc
rcr
jmp
ds
sub
sbb
pop
into
sub
xor
sub
and
cmpsb
lahf
pushf
movsl
push
xor
test
inc
call
cs
in
adc
pusha
lret
cmp
gs
inc
and
aam
and
lods
lret
cmp
sbb
repnz
lret
sub
sub
nop
sbb
sub
add
pusha
test
test
push
loop
inc
adc
movsb
cmc
lea
xor
sarb
in
movsl
add
and
repnz
divl
jmp
addr16
aaa
inc
pop
jg
jp
cli
adc
push
cli
rorl
loope
sbb
loope
fmuls
pop
cli
insb
push
dec
mov
pop
inc
xor
jmp
jo
jae
cli
sbb
mov
shll
cmpsb
dec
xchg
hlt
dec
sub
mov
jmp
jg
xor
lret
jmp
daa
mov
xor
cwtl
cmp
icebp
adc
mov
push
test
mov
jns
subl
add
and
imul
in
test
or
mov
imul
mov
clc
sub
mov
xor
cmp
stc
xor
pop
dec
inc
mov
push
mov
arpl
xor
dec
js
add
push
add
xchg
js
and
xor
xor
out
pop
ret
fwait
out
popa
fstl
sub
jge
pusha
mov
cmp
jle
adc
mov
and
pop
fisttpll
cld
popa
lcall
pop
out
mov
or
dec
sub
pop
fcmovnbe
test
jno,pt
xor
mov
lret
push
xlat
in
loope
scas
push
ss
jae
insl
push
or
in
testb
lcall
mov
pusha
inc
gs
mov
int
mov
mov
hlt
cli
testb
orl
test
xchg
push
xor
xchg
inc
dec
cmp
movl
cmp
repnz
int3
ss
imul
out
movsl
mov
or
shl
cmp
ljmp
les
jns
out
pop
xchg
mov
xor
jge
push
xchg
fwait
cmpsl
mov
fisubs
mov
mov
mov
fs
mov
lea
stos
jb
ds
imul
push
insb
sbb
pop
cmp
sbb
dec
or
inc
xchg
dec
daa
push
addb
xor
pop
dec
mov
enter
sbb
cmp
sahf
inc
lret
in
and
sbb
push
jge
jo
sub
sub
outsl
test
out
push
rolb
into
pop
cmpsb
or
pop
mov
subb
lret
cmp
enter
loope
mov
mov
mov
lods
push
sarl
jne
mov
test
adc
and
xchg
test
mov
cmpsl
xor
jnp
pop
and
xorb
mov
es
inc
dec
jbe
jbe
mov
mov
mov
sbb
int3
rorb
aam
dec
jns
rcr
testb
mov
fwait
stos
xchg
insl
lods
ljmp
xchg
in
xchg
es
and
push
push
adc
add
loope
xchg
fs
test
jbe
push
sbb
pop
xchg
mov
add
repz
sub
adc
jge
hlt
pop
mov
fwait
popa
sub
and
adcl
or
leave
sub
jb
fisubrl
sti
cltd
lahf
inc
sahf
scas
jmp
jmp
mov
add
das
inc
jge
pushf
xchg
testl
fmul
or
flds
mov
mov
movsb
lods
dec
testb
aas
into
mov
jl
adc
pop
push
push
sbb
xor
fiadds
mov
idivl
das
adc
lcall
mov
add
pop
ss
lock
aad
adc
loop
mov
add
add
jne
ret
dec
hlt
in
or
jno
mov
mov
imul
xorb
fbld
mov
scas
lods
cmp
arpl
inc
jae
jno
pop
call
jns
sbb
fcmovnbe
push
neg
aam
outsl
iret
pop
out
jo
addl
xchg
dec
xor
sbb
repz
adc
jmp
push
fadds
lret
xor
arpl
fwait
xor
push
pop
mov
xchg
push
test
ja
pop
push
cmp
add
mov
mov
push
add
jne
adc
aad
pop
lret
out
dec
mov
xor
ja
and
adc
movsb
and
pusha
mov
