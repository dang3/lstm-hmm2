sbb
add
mov
int
push
dec
mov
push
pop
pop
pop
xor
or
shl
lds
xor
stos
jmp
pop
pop
aad
lcall
push
sahf
psrad
pop
int
into
addb
pop
dec
pop
repz
je
sbb
mov
insb
push
xchg
inc
xor
lods
jg
push
push
pop
ds
mov
xor
dec
mov
fs
movsl
dec
movsb
jbe
pop
sti
lods
xor
xchg
sbb
mov
adc
scas
popa
mov
inc
mov
lcall
repz
push
cmpsb
add
int3
imul
daa
fisubrl
mov
aas
addr16
psllw
movsl
sbb
int
mov
fstpt
push
lret
std
leave
orb
leave
loope
mov
cmp
test
mov
mov
movsl
sub
add
mov
fistpll
lods
inc
aaa
ret
fmul
add
test
dec
mov
xchg
test
cli
push
add
mov
jecxz
xchg
jbe
xor
xchg
leave
cld
test
punpckhwd
xchg
mov
cmpsb
imul
outsb
outsl
mov
push
jecxz
adc
jle
xor
data16
mov
unpcklps
shlb
insl
jecxz
push
mov
lahf
push
js
inc
std
insb
mov
jle
mov
fwait
adc
push
dec
ss
mov
test
jp
xchg
dec
cmp
imul
ret
mov
fwait
or
mov
xchg
inc
stc
insl
add
lret
cli
lret
enter
in
xchg
mov
mov
mov
shr
popa
and
jo
lods
mov
in
std
in
or
test
xchg
lds
popa
cmc
sbb
fwait
ljmp
xor
xor
cld
mov
test
fimuls
je
inc
lods
mov
mov
mov
dec
mov
push
aas
jmp
popa
push
dec
dec
sbb
hlt
cmpsb
add
pop
int
and
aaa
shll
insb
mov
inc
xor
das
hlt
mov
es
loope
aas
clc
mov
push
inc
aas
sti
shrb
mov
mov
stos
mov
mov
aas
inc
scas
out
jmp
adc
gs
popf
out
and
mov
imul
movsb
in
or
icebp
mov
or
or
mov
repz
jno
xchg
sahf
test
fwait
xor
pusha
daa
insb
jno
movsb
stos
bound
lahf
and
add
into
ss
jmp
mov
cmc
xor
dec
cmp
call
mov
mov
xchg
inc
dec
dec
loop
adc
dec
push
and
sbb
test
fidivrs
push
sbb
aam
mov
sub
xor
adc
arpl
int
cmpsl
fsts
out
inc
mov
test
mov
pop
mov
in
pop
pop
xchg
inc
sbb
mov
aam
or
mov
cltd
sub
lods
jle
xchg
inc
jg
fs
mov
mov
enter
in
scas
and
insb
jl
mov
jb
mov
fwait
pop
out
xor
mov
dec
ror
stos
inc
dec
dec
pushf
mov
pop
std
xchg
fwait
int
test
cmp
or
ds
cmp
sbbb
jg
mov
dec
sahf
xchg
inc
out
daa
mov
orl
sbb
sub
xor
mov
push
push
inc
sbb
add
jns
ret
sbb
aaa
adc
out
ljmp
jne
outsl
sbb
popf
arpl
adc
adc
fisubrs
dec
sbb
mov
lcall
mov
sbbb
lods
sub
mull
sub
xchg
or
js
sub
stos
sub
fbstp
mov
xor
dec
mov
test
pop
mov
sub
mov
jg
dec
xchg
cmp
push
ja
cmp
aas
roll
sbb
cmp
ret
scas
out
mov
hlt
mov
stos
adc
cmp
mov
xchg
xchg
pushw
jns
in
xchg
and
out
push
test
or
sub
scas
outsb
js
sub
rolb
int
fwait
sub
and
lea
dec
negl
leave
imul
repz
fs
cmc
out
mov
int3
call
fcomps
mov
fsubl
rcrb
mov
iret
mov
das
lods
push
outsl
fidivs
outsb
jp
mov
sub
pushf
pop
pop
push
lcall
iret
cmp
xchg
xlat
xchg
xchg
and
imul
cmp
push
iret
cmpsl
and
aam
adc
adc
pop
or
mov
or
or
clc
imul
xor
stc
xchg
movsl
mov
or
cs
xor
outsl
jle
xchg
or
pop
mov
int3
pop
sbb
stc
dec
sti
push
clc
loope
je
scas
dec
push
fmuls
outsb
mov
push
sbb
cmpsl
and
mov
pop
dec
pushf
inc
scas
daa
and
dec
mov
jl
sbb
cmpsb
jo,pn
adc
sbb
inc
aaa
out
fisubl
test
arpl
sbb
adc
xlat
test
pop
sub
aam
imul
fwait
arpl
cmpsl
pop
dec
cmpsl
fstps
mov
dec
jmp
aaa
pop
rcll
in
adcl
add
cmp
cmp
sub
adc
int3
dec
mov
jg
call
pushl
jmp
jmp
xor
xor
xchg
jae
fwait
je
adc
cmp
mov
sub
out
mov
pop
sbb
sub
enter
aam
mul
sub
xchg
popa
adc
ljmp
test
pop
add
add
sbb
push
xchg
cmpsb
jp
lret
pop
adc
insl
hlt
aam
jp
addb
mov
cmc
jecxz
and
loopne
adc
jbe
adc
fadd
pop
dec
sub
mov
mov
ljmp
mov
cld
in
movsb
ja
inc
mov
dec
push
sub
test
and
xchg
js
rcrl
inc
cmc
push
mulps
scas
mov
xchg
pushf
sub
mov
enter
xor
inc
cmp
xchg
mov
lahf
scas
jnp
add
fstps
mov
pop
mov
pop
aam
in
adc
push
or
xor
arpl
cld
sub
sub
inc
dec
pop
xchg
into
xor
pop
cmp
shl
cwtl
dec
jo
pushf
fwait
lea
or
pusha
and
movsl
stos
push
mov
jl
inc
mov
stc
ds
pop
sub
push
add
mov
stos
jnp
sbb
aaa
inc
cmp
cmp
sbb
sbb
push
int
adc
fs
xorb
sbb
jmp
mov
clc
je
bound
clc
pop
rcrb
test
aas
jnp
or
movsl
push
mov
cltd
xor
mov
pop
mov
rcll
and
jp
sti
jg
jg
sub
into
dec
test
cmp
fadd
mov
mov
lret
inc
mov
imul
aam
icebp
dec
cmp
jb
xchg
xchg
xchg
lret
inc
xor
xchg
iret
sbb
jg
sub
pop
add
fwait
pop
adc
call
push
mov
or
inc
cmp
sbb
push
sbb
push
push
das
ljmp
mov
xchg
dec
cmp
sti
out
cmp
insb
movsb
leave
mov
lea
add
add
mov
iret
lahf
cmc
or
or
clc
or
adc
adc
pop
lods
mov
nop
enter
stos
adc
int3
pop
sbbb
sbb
and
outsl
es
sbb
ret
xchg
cmpsl
iret
and
jbe
inc
xor
cmp
and
mov
in
xor
mov
fs
int
cmpsb
pusha
add
es
rclb
lret
jne
faddl
arpl
pop
insb
or
sub
popa
lods
push
pop
mov
arpl
iret
fstpl
lcall
or
or
cmp
jae
mov
orb
stc
sub
clc
pop
and
leave
adc
xchg
scas
ret
subl
seto
imul
pop
arpl
cmc
push
xchg
js
int3
dec
and
iret
out
sbbl
ja
xor
xor
test
and
inc
loopne
and
dec
add
data16
rorl
dec
cltd
lods
out
movsl
in
pop
xchg
mov
repz
pop
inc
leave
icebp
and
cmc
and
add
jl
icebp
push
insb
add
dec
adc
sarl
jb
xchg
ja
pop
jge
aas
pop
mov
push
pop
not
mov
arpl
inc
add
cmpb
scas
push
mov
xor
inc
adc
cmc
push
lock
sbb
pop
call
mov
hlt
negb
lret
fcoml
sti
cs
jnp
mov
inc
adc
mov
fldt
sub
cmp
mov
es
push
pushf
sbb
mov
pop
push
mov
inc
inc
lds
addr16
fists
push
cmp
cmp
push
fmuls
test
shll
cld
clc
lds
or
cwtl
jae
shr
stos
and
mov
xor
idivl
lret
and
jmp
pop
scas
mov
sub
pop
daa
fnstsw
xor
adc
dec
loopne
xor
cmp
lret
adc
push
jae
pop
mov
and
cmpsl
dec
push
push
push
add
test
sub
sbb
aas
sbb
xor
pop
adc
or
adc
adcb
hlt
cwtl
pop
mov
popa
int3
push
xchg
mov
ss
gs
out
sub
xor
je
pusha
jns
sub
fstpl
test
pop
pop
adc
test
popf
stos
jmp
sub
mov
add
xchg
push
jbe
push
test
sbb
xchg
add
or
xor
je
or
or
push
jmp
jnp
test
mov
mov
mov
jmp
cmp
fwait
mov
cmp
xchg
outsl
cmp
and
pop
mov
ret
out
jle
lcall
adc
das
stc
mov
push
inc
sub
sub
call
push
inc
popfw
insl
inc
push
test
cli
aad
cmpl
stos
ret
sub
adc
fwait
mov
insl
inc
inc
dec
ret
hlt
sti
jl
sub
mov
fcomi
cs
popf
mov
cmpsl
mov
push
pop
pop
or
hlt
mov
pop
icebp
out
xchg
and
xchg
jmp
les
and
movsb
xchg
je
aam
dec
out
jge
cmp
jmp
sbb
dec
cmp
pusha
pop
in
adc
arpl
and
repz
mov
aam
push
rorb
xchg
orl
sub
pop
xchg
and
sbb
add
mov
mov
pop
jge
pop
lahf
inc
push
jmp
jg
imul
cltd
in
xchg
and
pop
mov
cmpsl
mov
pusha
dec
dec
push
xchg
push
lret
cmpl
orb
and
cmp
mov
nop
mov
lods
mov
and
das
inc
jns
push
inc
fldl2e
dec
stos
fcoml
xchg
xchg
stos
mov
mov
mov
and
imul
pusha
push
flds
and
xchg
sbb
addr16
jne
cld
xchg
jg
sbbl
outsl
sub
xchg
nop
pushf
mov
jl
push
inc
sbb
icebp
ljmp
sub
jecxz
mov
mov
pop
cs
mov
mov
out
mov
xchg
xor
in
jns
sahf
add
popf
inc
xchg
sbb
bound
cwtl
loope
dec
enter
pop
xchg
xor
cmc
cltd
aaa
add
das
add
mov
orps
aam
mov
scas
mov
push
lret
jns
enter
lret
clc
jo
inc
pusha
ljmp
scas
aad
iret
sub
and
fistpl
pop
xchg
or
imul
stos
mov
push
cmp
insb
mul
adc
mov
je
cmp
jo
fimuls
lea
xor
inc
fstpt
mov
imul
mov
imul
pop
mov
sub
mov
push
enter
adc
jns
jae
and
imul
sub
add
sub
sub
addb
and
clc
mov
cmp
and
and
xchg
mov
jns
xor
inc
fwait
add
jmp
inc
mov
pop
int3
pop
cmp
repz
jno
popa
rolb
sub
pop
push
addl
push
stos
lret
lock
lret
push
test
cltd
scas
inc
xor
out
outsb
mov
das
or
cmpb
and
out
in
repz
cld
jb
mov
or
push
cmp
mov
leave
les
xlat
daa
xor
jnp
dec
call
dec
fcmovnb
out
xchg
test
fidivrl
pop
imul
dec
iret
sbb
add
jecxz
mov
mov
out
mov
ret
fs
push
clc
cmp
push
mov
ret
sub
ds
lods
inc
sub
xchg
inc
call
xor
arpl
inc
ja
cmp
jmp
add
sarl
roll
mov
fistpll
push
in
sarl
fcomip
xchg
movsb
int
mov
xchg
or
ror
cmc
jl
cmp
iret
sbb
imul
loop
sub
add
sahf
fstpt
xchg
negl
xchg
jo
popa
movsl
ss
ret
and
sbb
mov
movsl
std
sbb
cmp
adc
cwtl
dec
jno
and
and
or
stos
out
push
lea
xchg
aam
out
mov
pusha
and
add
mov
dec
jge
dec
adc
pop
add
aam
lock
mov
mov
cld
rorl
popa
push
or
mov
flds
es
jne
dec
sbb
in
mov
xor
xchg
cmpsb
std
mov
or
das
test
pushl
std
lahf
mov
fmuls
mov
dec
sbb
orl
rcll
mov
dec
sub
daa
out
int3
push
push
adc
je
dec
int
and
insl
push
jno
inc
inc
dec
in
mulb
xor
movsl
cld
mov
test
push
jb
sub
xchg
inc
push
int
inc
dec
add
hlt
hlt
movsl
jae
fistpll
lret
in
bound
xchg
push
pop
dec
add
jg
mov
inc
mov
adc
xchg
adc
leave
aam
nop
or
jno
inc
jecxz
adc
and
cmc
mov
jae
mov
rclb
mov
out
ljmp
add
pop
outsb
stc
mov
outsl
aas
adc
push
xchg
mov
gs
cmp
out
loopne
jg
pop
mov
icebp
push
scas
cmp
and
push
xchg
adc
or
xchg
jl
pusha
fistpll
lods
cmp
mov
pop
arpl
enter
cmp
inc
loopne
out
cli
dec
pop
pushf
clc
in
test
push
adc
outsl
cmp
sub
xchg
xlat
loop
mov
mov
nop
jg
rolb
push
stos
inc
popf
cwtl
or
sbb
add
mov
mov
lods
jne
jl
push
inc
mov
sub
loop
daa
repz
jne
and
and
orl
cmp
inc
inc
mov
and
movsb
and
dec
cmp
mov
mov
add
xchg
lahf
lret
lret
adc
and
es
in
call
pop
mov
jecxz
bound
push
lret
xchg
adc
insb
xchg
fimuls
mov
jle,pt
or
mov
adc
in
iret
and
mov
sbb
inc
adc
out
test
stc
and
data16
test
jb
out
daa
std
xor
adc
sub
into
add
add
scas
jmp
popf
aam
imul
movsb
dec
mov
mov
pushf
in
inc
add
cmp
inc
sarl
lea
inc
fdivp
jle
jae
lret
pop
xor
sub
add
fcomps
repnz
push
clc
xchg
xchg
in
rolb
fiaddl
inc
stc
stc
inc
test
mov
nop
les
jnp
cmp
js
dec
mov
paddw
repz
jge
xor
add
push
sahf
mov
dec
ss
or
cwtl
mov
jle
fdivl
test
or
mov
mov
cmp
aad
jns
and
inc
mov
stos
pusha
les
jg
sub
addr16
mov
test
xor
movsl
or
pop
mov
or
scas
inc
cmpsl
clc
div
lcall
mov
cli
sti
pop
lcall
mov
notl
add
xor
cwtl
push
test
icebp
lods
jp
es
vmovlps
icebp
pop
sbb
sub
data16
inc
mov
addr16
cmp
test
cmp
andb
and
xchg
lea
push
jg
mov
scas
jmp
add
pop
repnz
jbe
push
mov
loop
shl
mov
or
jmp
popa
popf
pop
nop
outsb
jae
fbld
in
dec
addl
push
addr16
xchg
and
mov
js
mov
outsl
lahf
lods
loope
mov
inc
ljmp
sahf
lock
mov
cld
sarl
loop
xor
lret
out
mov
aas
popf
adc
loop
das
and
push
loope
mov
mov
icebp
shll
lods
jne
out
mov
mov
lret
inc
das
scas
fwait
sub
cwtl
lock
mov
out
jo
jmp
nop
ss
insb
aad
sub
cmp
mov
rorl
movl
jnp
push
insl
pop
repnz
pop
pusha
fcomp
inc
jl
ret
roll
pop
pop
sbb
mov
jmp
push
lea
or
jmp
lahf
movsl
cmc
cmpsl
shll
cmp
test
pushf
sbb
testb
sub
stos
jp
sub
mov
mov
sbb
popa
lea
test
pop
and
in
call
mov
cmc
inc
xor
int
loopne
xlat
and
sbb
xor
lret
push
xchg
scas
lcall
mov
shll
pop
cmp
mov
into
inc
rolb
push
lret
sbb
stc
lock
mov
mov
mov
fdivrs
jl
dec
or
sar
int
jmp
jmp
test
xchg
cli
out
inc
fbstp
sbb
and
cltd
xchg
icebp
outsb
sub
fsub
adc
mov
nop
cmc
adc
pop
xor
add
aam
xchg
jbe
in
insl
aad
push
dec
repnz
adc
push
repnz
push
rcrl
int3
movsl
xchg
test
pop
repnz
sarb
lahf
leave
aad
rorl
jno
inc
push
add
dec
cmp
popf
add
std
dec
sbb
push
mov
mov
outsb
enter
jl
or
call
std
je
push
jbe
mov
mov
xchg
inc
incl
cmp
inc
je
mov
pop
aam
ss
in
jmp
mov
leave
pop
cmp
adc
adc
jnp
outsl
push
mov
aas
push
int3
fisubrs
xchg
lods
mov
shr
pop
sahf
call
mov
mov
dec
push
sbbl
push
dec
add
fbld
sti
push
popf
ret
mov
adc
or
dec
and
test
lds
adc
jno
pop
pop
je
adc
les
sub
leave
loope
sub
cmc
lret
xor
movsl
mov
sarb
imul
mov
sbb
add
ja
or
cmp
cs
jo
xchg
inc
in
mov
in
push
call
out
iret
lahf
rorl
lret
test
bound
sub
sub
xor
push
fstpl
mov
xchg
xchg
sub
cmp
push
int3
dec
add
mov
dec
jmp
sbb
int3
loope
fwait
xchg
fsubs
pop
lds
aad
incl
test
scas
sarb
cmpsb
shrl
lds
cmp
pop
xchg
ret
notb
das
call
sub
or
push
test
inc
dec
sbb
and
push
inc
adc
daa
fsin
fdivrs
mov
inc
mov
cltd
xchg
sbb
push
adc
es
jno
push
test
mov
scas
test
repz
jne
cmp
and
sub
into
sub
sub
aam
cmp
jae
movsl
jns
cmp
sbb
les
cmp
aas
int3
cmc
cmp
pop
les
pop
pop
sub
mov
cmp
mov
fs
fldt
in
imul
jg
or
pop
dec
adc
sbb
pusha
rcll
popf
push
cmpsl
cmpsl
pop
cmp
mov
mov
jp
mov
fistpl
cmpsb
je
add
xchg
or
loopnew
xor
adc
pop
xor
inc
fnstcw
xchg
add
rcrl
and
lea
mov
loope
cwtl
loope
dec
add
cmpsl
dec
cld
or
jmp
mov
xchg
mov
sti
mov
inc
negb
aam
and
mov
test
xchg
lret
lea
adc
pop
rolb
jae
mov
or
cmp
jle
or
stos
and
lock
add
cmp
out
scas
mov
data16
mov
nop
and
push
mov
loop
pop
ret
popa
ret
cmp
sub
pop
mov
stos
in
int3
movsb
jle
mov
pop
out
outsb
and
sbb
or
sub
mov
cli
je
push
push
rcrl
out
dec
push
sbb
push
xchg
adc
jns
xor
xchg
xchg
pop
pop
adc
scas
jecxz
push
cmpsl
cld
pop
xor
stc
or
mov
pop
pop
incl
inc
into
push
popa
ja
mov
xlat
mov
inc
fs
enter
shll
jbe
cmpsl
mov
jo
fistl
lret
add
push
imul
cmp
dec
pushf
mov
push
push
sbb
dec
std
cmp
mov
push
inc
sbbl
mov
adc
jmp
push
ret
dec
add
lds
sbb
sub
pushf
push
pop
cmp
daa
mov
mov
mov
test
int3
out
mov
xchg
jne
cmpsb
aaa
rclb
addb
jb
xchg
sub
adc
or
inc
pop
pop
mov
pop
test
cmp
les
mov
lcall
daa
or
pop
hlt
mov
mov
xor
sbb
adc
sub
xchg
add
fiadds
pop
andl
xlat
sub
lods
inc
aad
imul
movsb
pop
push
mov
mov
and
les
stos
add
sahf
push
call
jne
jb
hlt
mov
or
into
inc
gs
mov
ss
push
test
lock
gs
add
lret
sub
adc
push
movsl
dec
popa
insl
xor
negb
adc
mov
fcomps
insl
sbb
jle
sbb
inc
das
add
xor
andl
or
iret
int
xchg
js
mov
jg
pop
stc
in
insl
inc
sub
ljmp
rolb
inc
cwtl
pop
jae
xlat
sbb
pop
mov
adc
aad
movsl
into
mov
inc
dec
push
jns
xchg
hlt
in
aam
mov
jle
fsin
std
xorb
mov
sub
push
push
in
xor
or
inc
fs
jns
jge
lahf
mov
xlat
pusha
cmp
enter
gs
sub
fwait
jbe
pop
mov
pop
out
xchg
jge
inc
ljmp
bound
cmpsb
push
test
xchg
sbb
sub
inc
loop
fisttpl
xorb
cmpsb
and
ljmp
subb
ja
adc
cmp
cmp
push
mov
test
push
in
mov
push
ficompl
mov
mov
inc
enter
or
and
aas
and
cs
push
xchg
filds
jge
pop
mov
mov
fists
xchg
ffreep
adc
ficomps
xchg
push
mov
hlt
repz
xor
pop
sti
loop
mov
mov
mov
cmp
mov
fcmovne
test
frstor
cmp
sub
jmp
or
in
outsl
pushl
dec
ffreep
int
mov
mov
xchg
lds
cmp
jae
inc
push
andl
push
push
hlt
stos
nop
cli
cltd
mov
loope
mov
int3
mov
adc
int3
push
ljmp
repnz
ljmp
push
jne
test
sbb
xor
cmp
scas
cmpsl
cli
orb
pusha
bound
ja
call
push
std
xchg
ret
add
orb
cmp
fimuls
les
push
xchg
add
addr16
push
int3
pop
dec
and
repnz
xor
notb
in
xchg
or
rcl
inc
mov
testl
fstps
push
lods
fnsave
sub
into
andl
loope
mov
sbbl
add
mov
and
pop
rclb
pushf
jno
adc
add
stos
nop
mov
nop
add
and
rclb
xor
sti
test
and
ret
inc
push
lahf
sub
out
mov
arpl
mov
and
cld
dec
mov
lret
cmp
sub
aam
pop
cli
mov
jno
sbb
jbe
sbb
or
adc
add
dec
fwait
lcall
sbb
sbb
iret
sbb
filds
and
insb
mov
ss
popf
jmp
sbb
stc
pushf
inc
inc
pop
or
jno
test
pop
xor
addb
dec
sub
or
popa
add
cmp
ljmp
ja
out
nop
mov
fwait
les
xlat
mov
daa
aad
mov
mov
in
std
je
aam
shll
push
sbb
add
fwait
mov
inc
mov
push
stos
mov
mov
scas
xchg
js
ljmp
data16
jae
in
lahf
rcl
je
push
xchg
popf
jno
outsb
cli
sub
outsl
imul
sbb
shll
mull
mov
in
sbb
or
mov
pop
xchg
test
loop
push
out
enter
or
and
push
inc
inc
pop
jno
int3
enterw
mov
ja
and
xlat
mov
rorl
jmp
xor
mov
movsl
aaa
push
push
xor
clc
xor
inc
mov
ficomps
insl
cmp
out
mov
imul
adc
scas
addb
fists
push
mov
sti
sahf
outsb
push
into
adc
loope
cmp
into
mov
push
cmp
stos
lock
loopne
add
or
sti
ret
mov
pop
in
pop
es
scas
xchg
dec
cld
push
mov
jl
mov
aad
push
ret
icebp
push
pop
shll
sub
push
data16
mov
and
imul
ss
mov
push
cmpsb
jg
out
in
rcl
adc
mov
jl
outsl
fcomps
je
jl
out
in
mov
cmp
fisubs
and
in
imulb
mov
mov
lret
mov
lret
mov
inc
repnz
mov
lock
mov
xchg
and
ret
jns
xor
cmp
and
jne
cmpsl
dec
popl
aaa
fdivs
pop
dec
sbb
out
insl
aas
int
push
cld
mov
test
call
jne
mov
mov
add
dec
ja
and
push
dec
fs
js
pusha
sbb
pop
mov
dec
dec
mov
jle
jp
fmul
dec
push
cmp
jbe
and
mov
inc
sarl
fs
movsb
cwtl
push
pop
mov
loop
inc
gs
mov
bound
stos
mov
xchg
fistps
mov
test
out
adc
push
jl
xchg
mov
dec
xchg
in
cld
gs
into
test
in
sbbl
xchg
mov
mov
add
mov
aaa
movsb
ja
cwtl
pop
in
int
aam
xor
mov
mov
or
cli
dec
jo
add
mov
and
lret
lret
jecxz
mov
imul
lods
dec
xchg
in
push
f2xm1
pop
or
outsb
icebp
cld
inc
jae
stos
sub
push
jae
out
dec
or
out
aas
lods
inc
and
xchg
mov
rcrl
push
stos
insl
cmp
xlat
cwtl
hlt
test
adc
mov
stos
loopne
ss
jae
mov
gs
cli
pop
shll
nop
test
pop
cli
add
pop
adc
mov
mov
in
enter
into
pop
jnp
add
cmp
aas
aam
mov
es
ds
movsl
fiadds
or
or
jge
test
pop
cld
cmpsl
sbb
sub
and
out
push
bsr
lahf
push
xor
sbb
push
aaa
mov
inc
repnz
mov
adc
icebp
lds
mov
loope
loope
mov
mov
aas
mov
cmp
lods
test
dec
mov
sub
pop
bound
subl
jp
push
mov
or
pop
jo
jne
xlat
cmp
in
incb
sti
cmp
pop
movsb
sbb
push
fildl
xchg
and
sbb
testl
icebp
pop
jmp
xor
jge
xor
lcall
mov
xor
fcomp
enter
xor
push
cltd
hlt
and
shll
rcrl
mov
bound
aad
add
push
mov
aam
daa
shll
push
dec
in
lea
lea
push
mov
lret
mov
xchg
lea
inc
in
cld
mov
mov
mov
cmp
ret
les
sub
scas
sahf
cmp
roll
idivl
add
dec
pop
push
push
add
fdivl
popf
or
outsl
mov
shll
ret
cmpb
dec
aam
lahf
imul
lret
xor
outsl
push
fs
jl
sarl
fs
shlb
and
push
fnstcw
push
shlb
pop
mov
fbstp
imul
int3
jno
add
imul
loope
subl
in
mov
xor
aad
xor
daa
rcll
shll
lods
inc
mov
les
add
loop
dec
enter
dec
roll
mov
enter
adc
repnz
cli
mov
in
mov
inc
jnp
inc
fistpll
stos
dec
mov
testb
sub
mov
call
adc
sahf
sti
pop
dec
test
push
popa
rcll
mov
daa
mov
jp
aam
jo
iret
fsubrl
adc
lods
rolb
inc
mov
stos
ja
out
lock
cli
mov
mov
ret
filds
mov
stos
sbb
mov
addr16
aas
gs
dec
ret
in
out
scas
sbb
jb
and
jb
out
dec
jle
das
jbe
insl
arpl
push
mov
or
cli
pop
sahf
out
jmp
mov
jae
xchg
lock
xlat
jne
push
xor
setl
jmp
adc
and
dec
add
and
pop
js
inc
xchg
es
addr16
push
scas
and
pushf
outsl
std
out
xlat
adc
jns
or
adc
mov
adc
dec
cld
call
cmpsl
mov
ss
jbe
mov
xor
daa
nop
repz
jnp
sbb
adcb
jb
mov
sbb
xchg
dec
inc
mov
dec
mov
leave
shll
sbb
inc
mov
cld
inc
cwtl
mov
adc
jge
cs
mov
mov
inc
push
daa
inc
mov
sub
adc
sbb
add
mov
xchg
sahf
fldl
mov
loop
jae
es
add
cmp
and
add
cmp
xchg
jg
aam
fsubr
cmp
insb
jmp
inc
adc
bound
lret
call
mov
sahf
fisubrs
cltd
add
out
push
xor
mov
fisttps
clc
rcrb
ljmp
lret
sub
lahf
push
sbb
add
outsl
aaa
in
popf
dec
stc
lahf
dec
js
sahf
inc
mov
mov
adc
stos
and
mov
jmp
jp
mov
sbb
xor
arpl
xor
jne
filds
adc
and
rolb
scas
insb
out
cmp
inc
loope
shrl
inc
aaa
push
jbe
iret
rcll
add
test
mov
adc
lock
inc
push
pop
mov
and
movsb
pop
mov
adc
mov
je
das
or
mov
in
mov
das
out
sbb
ficomps
filds
sub
mov
std
inc
and
pushf
push
jecxz
jmp
jo
insb
cmpsl
adc
xor
add
cmc
push
add
push
or
mov
aad
pop
cmp
test
stc
adc
or
sbb
mov
xor
xor
imul
xor
mov
addr16
sbb
int
lods
ret
xor
dec
addr16
cmpsb
int3
lret
cmp
je
cltd
push
inc
push
insb
lcall
scas
mov
scas
mov
ja
int
jmp
and
sbb
in
pop
mov
mov
mov
jp
adc
dec
out
jb
pop
jnp
lds
push
in
xlat
fiaddl
ds
mov
inc
iret
rcl
xor
and
lea
stos
push
sahf
sbb
inc
xor
lret
cs
insl
leave
jp
mov
data16
pop
movsl
pop
negb
push
sbb
jnp
lods
movsb
and
divb
std
jmp
xchg
cwtl
pop
push
inc
inc
xor
adc
xlat
fcoms
jae
repnz
leave
pushf
mov
or
xchg
test
jg
pop
and
cmp
rorl
mov
adc
sbb
jnp
adc
xchg
fs
xchg
out
add
outsb
stc
icebp
mov
sbb
sub
fstpl
mov
push
ret
mov
dec
or
jge
idivl
loop
sub
cmpl
sub
and
dec
xchg
adc
das
fdivrl
ja
scas
mov
ret
mov
fsubrs
aaa
iret
jae
lcall
loopne
into
fcomi
aam
lahf
xor
xchg
inc
xchg
cmp
jmp
jp
icebp
lret
mov
jne
mov
movsb
pop
daa
sahf
arpl
dec
lahf
sbb
leave
mov
mov
fdivrl
les
lock
mov
testl
loopne
test
jae
mov
mov
jo
jbe
xor
push
call
pop
stos
fs
pop
xor
repnz
aaa
mov
inc
jge
ds
mov
hlt
ja
inc
jle
flds
jecxz
mov
cltd
psubq
cmp
cmp
mov
mov
pop
call
mov
daa
iret
cs
or
idivb
push
int
sbb
xchg
inc
ret
dec
xchg
loope
add
pop
lahf
push
adc
call
push
dec
pop
pop
sti
sti
adc
shl
arpl
fistpl
xor
or
inc
addr16
adc
dec
xor
movsl
cmpb
pop
add
mov
outsl
cmc
push
jne
jbe
pop
add
fwait
push
pop
adc
popf
in
loopne
cmp
out
cmp
sub
xor
and
and
jnp
out
jnp
pop
rcrl
stc
mov
fidivl
sbb
outsb
mov
jne
jge
ljmp
cltd
pushl
mov
jns
jbe
add
arpl
pushf
ror
xchg
mov
xchg
mov
or
aad
push
mov
dec
push
es
jns
lret
xlat
inc
mov
adc
jmp
mov
inc
mov
pop
jo
std
shrb
subl
xor
repnz
lahf
jge
out
mov
mov
adc
dec
and
pop
adc
inc
jae
js
and
ret
mov
pop
and
mov
repz
pop
cmp
dec
nop
imul
fcmovu
mov
jmp
test
push
gs
dec
outsb
cmp
addl
pop
xchg
imul
dec
lods
pushf
mov
pusha
jnp
sub
cwtl
movsl
sbb
scas
mov
fcompl
lds
mov
pop
imul
xchg
jns
insl
fnstcw
and
and
ss
loop
fwait
mov
add
and
sahf
mov
lea
pop
sarb
aaa
ret
les
mov
or
in
cltd
shrl
push
pop
mov
fsubs
or
cwtl
jecxz
fs
and
lea
sub
mov
adc
xlat
and
dec
mov
xor
xor
out
and
lock
pop
rcrl
cs
sub
test
xor
aas
jbe
cmp
flds
push
jnp
or
mov
imul
stos
xchg
push
sbb
mov
lcall
push
jp
push
ljmp
or
xchg
and
loope
xor
xor
mov
cld
sbbb
loopne
or
nop
cmp
sbb
aad
outsb
insb
movsl
mov
dec
bound
jno
adc
sbb
jno
jle
adc
out
adc
fsubrs
pusha
xor
jo
sub
push
push
and
mov
mov
iret
inc
rorb
cmpsb
adc
or
jo
insl
lret
push
or
cltd
js
push
pop
jb
xchg
aad
mov
inc
or
sbb
dec
mov
and
in
lods
lods
xchg
daa
mov
sub
jns
mov
insl
cmp
fwait
lret
push
fdivrl
hlt
jnp
das
cmpsl
fildll
or
int
jae
bound
into
ffree
cmp
inc
addr16
mov
pop
inc
jecxz
out
int3
je
push
jno
in
mov
xchg
xor
and
jmp
imul
ret
bnd
sub
stc
push
adc
int
cmc
ss
mov
loope
or
ss
xor
lret
stc
dec
add
pushf
pushl
jle
js
aas
pop
mov
mov
inc
pop
stos
iret
push
cmpxchg
hlt
mov
aad
or
xor
inc
push
jge
mov
mov
repnz
inc
jnp
pop
imul
cmp
dec
and
sbb
ds
loopne
shrl
mov
or
inc
int3
pop
sub
mov
push
mov
and
insl
cmp
cmc
enter
es
fs
cmpsb
cmovnp
mov
popa
pushf
pop
mov
xor
pop
or
adc
jecxz
xchg
xchg
lods
pop
add
mov
bound
xchg
lcall
into
aas
lods
pop
in
pop
roll
shl
jmp
push
pop
out
inc
and
iret
dec
jmp
xchg
mov
cmp
cltd
pop
movsb
xorb
cmp
cmp
aam
dec
jmp
mov
sub
out
sub
mov
push
xor
and
fsubrp
and
fwait
clc
jns
aaa
lret
xchg
ja
pushf
cs
out
cmp
dec
js
push
lea
mov
insl
nop
movzbl
jnp
call
adc
ja
sub
xor
or
loop
pushl
in
popa
mov
ljmp
out
sub
call
xchg
sbb
roll
add
mov
incb
test
pop
inc
stc
js
dec
push
les
cltd
shll
push
mov
add
imul
or
and
cmp
outsl
bound
jecxz
mov
aam
lahf
sbb
add
movsl
inc
mov
adc
adc
lahf
insb
aaa
aam
sti
ss
xor
ret
push
dec
inc
in
rcrb
icebp
in
js
cld
inc
xchg
scas
shrb
dec
push
mov
mov
cld
repz
popa
jno
fistpl
push
cmpsl
mov
pop
sbb
sbb
xorb
ret
test
fimuls
pusha
xchg
add
std
ss
in
movsl
sbb
and
push
insl
sbb
or
inc
dec
bound
dec
in
mov
adc
fsub
sub
in
gs
rorl
jne
jg,pn
mov
popa
xchg
subl
or
pop
jnp
hlt
push
cld
dec
pop
inc
repz
in
rolb
jbe
loop
test
leave
iret
mov
jecxz
rcrb
mov
roll
pop
mov
xchg
or
sub
jne
cltd
pusha
dec
addr16
and
pop
mov
push
adc
inc
into
std
jno
push
mov
pop
cmp
fldt
pushf
push
lds
sbb
sbb
adc
sbb
movl
int3
cmp
jl
or
les
aaa
pop
cmpsl
push
out
cmc
jbe
aam
push
stc
xchg
hlt
fdivrl
xor
dec
and
adc
add
xlat
arpl
in
hlt
add
mov
push
aas
pop
dec
daa
mov
adcl
out
pop
stos
mov
lret
mov
add
cmc
stos
jle
test
int
dec
stos
mov
or
jnp
inc
xor
test
mov
cs
inc
fdivrl
cmpsb
or
sub
out
pop
nop
mov
lds
push
sbb
outsb
data16
jb
mov
loope
jmp
rolb
test
mov
cwtl
pop
lahf
icebp
and
out
sahf
jb
inc
jge
cmpsb
repnz
pop
mov
pop
adc
mov
cmp
sbb
sahf
mov
rcr
out
gs
test
in
sub
jns
xlat
out
jnp
lea
test
nop
icebp
into
pop
or
and
pop
inc
sbb
pop
sub
movsl
sbb
aam
pushf
mov
inc
push
mov
xchg
sub
mov
adc
arpl
mov
xchg
adc
push
popa
std
inc
xchg
cmpsb
adc
push
lea
loope
ret
loope
mov
mov
std
pop
adcb
push
cmp
ret
mov
addl
jecxz
mov
mov
testl
mov
out
xchg
dec
fsubrs
jp
mov
inc
sub
nopl
bound
inc
cmp
mov
jne
push
fs
inc
push
cmp
les
inc
and
cwtl
mov
fsubrs
loop
dec
cltd
adc
popa
cmpsb
in
sub
testl
lods
mov
push
stc
inc
cmp
arpl
lcall
ficoms
and
test
lods
rclb
or
sbb
in
cmp
ds
lods
mov
and
movsl
and
inc
sbb
push
arpl
imul
nop
out
ss
daa
movsb
inc
mov
xor
in
pop
push
push
mov
fmulp
add
pop
sub
mov
shll
in
dec
adc
sub
lock
inc
aad
sbb
int3
push
sub
jecxz
ss
add
cwtl
push
nop
xor
or
das
push
mov
sbb
pop
mov
xchg
jge
cmp
cmpsl
loope
xchg
insl
mov
xor
fsubrp
repz
roll
jae
add
inc
sub
cmpsl
sbb
insb
add
fwait
pop
or
in
mov
mov
inc
enter
dec
daa
cmp
pextrw
inc
bnd
aas
into
mov
mov
cmpsb
ret
push
test
sub
aad
or
sbb
push
and
loopne
sub
adc
test
shlb
inc
push
lret
stc
std
scas
sbb
int
and
adc
out
arpl
cmpsl
push
jno
lds
mov
cmp
repz
inc
nop
ds
xchg
xchg
or
out
pop
sbb
push
dec
jo
lds
inc
out
insb
xchg
loopne
push
push
daa
arpl
xchg
xor
ret
xchg
cmp
out
adc
bound
jns
lds
cmp
xchg
xchg
addl
out
mov
push
cltd
sub
sbb
fs
mov
nop
xor
dec
lahf
das
outsl
adc
jnp
aaa
mov
jne
pusha
push
aaa
repz
daa
scas
aas
push
sub
or
and
scas
or
mov
mov
xor
xlat
bound
insl
out
ds
cmpl
jns
sub
addb
dec
std
sub
xchg
and
repnz
sbb
jo
cmp
push
imul
cld
das
jb
iret
neg
xor
push
test
in
out
mov
mov
jae
call
repnz
pop
pop
cwtl
int
xchg
roll
gs
or
adc
and
into
inc
jns
iret
dec
scas
xor
sar
test
mov
int
adc
fcoml
scas
pop
pop
aaa
pop
cld
int
cmc
int
movsb
test
dec
aaa
add
adc
sbb
xor
nop
mov
add
decl
clc
testl
lods
testl
cs
pop
nop
test
lcall
ljmp
jo
fsubr
aaa
cmp
pushf
xor
push
push
out
icebp
mov
push
call
sub
cmpsl
xchg
repz
lret
or
shl
pop
je
mov
pop
movsb
stos
outsb
enter
xchg
sub
in
mov
repnz
jnp
xchg
out
cwtl
scas
inc
dec
ficoms
movsb
andb
jle
fisubrs
pop
cwtl
xchg
int
pop
clc
cmp
add
jnp
xor
test
stc
mov
dec
xchg
pushf
mov
cmpl
xor
in
adc
mov
mov
bound
push
and
aaa
imul
mov
imul
dec
frstor
sub
jl
js
xchg
out
loop
or
xchg
mov
js
in
pop
mov
mov
pop
xchg
xor
repnz
popa
lods
test
bound
xor
sbb
mov
cmp
mov
repnz
mov
pop
lret
pop
dec
pop
fdivrl
cmp
add
lret
js
ss
mov
xchg
inc
and
rorl
and
stc
mov
push
lock
adc
add
dec
cmpsl
adc
jecxz
fistpl
xlat
sub
jbe
sbb
or
lods
xchg
xchg
js
adc
xchg
cmpsb
mov
push
js
mov
daa
ljmp
jl
push
dec
push
or
jle
ds
fsub
sbb
mov
ret
gs
mov
stc
adc
jmp
adcl
xchg
adc
cmp
xor
push
int3
int
sbb
cmpsb
jb
scas
adc
xchg
push
adc
cld
cltd
gs
sbb
test
stc
ss
pop
jecxz
push
adc
inc
stos
shrl
push
js
test
cmpl
cld
pop
addb
sub
rorl
or
dec
ret
ljmp
and
jmp
stos
mov
push
push
ja
insb
cs
xchg
in
mov
aam
inc
sub
cwtl
xchg
popf
and
push
sub
dec
inc
rcll
repz
incb
xor
inc
aaa
shrl
pop
ss
les
mov
push
jmp
jno
and
leave
mov
mov
sub
inc
sub
fwait
mov
insb
push
out
mov
jno
mov
jmp
jno
inc
dec
mov
push
rcr
sbb
xchg
sub
xchg
aaa
imul
mov
jae
xchg
mov
add
mov
addr16
fadds
outsl
adc
mov
das
into
push
pop
fs
mov
push
fdivrs
ret
scas
sbb
fdivrp
pop
xchg
jb
push
mov
and
xchg
push
imul
sub
push
imulb
add
dec
push
xchg
add
dec
mov
pop
pop
add
notl
xchg
insl
nop
dec
mov
sub
mov
cli
inc
pusha
jno
add
jo
fstl
movsl
test
lea
fiadds
stos
test
in
cmp
add
jle
popf
xor
or
jp
xor
out
loop
cmpsl
jmp
stc
fistpl
lret
mov
fidivrl
loopne
jecxz
inc
xor
jp
ffreep
in
xor
sbb
sub
jns
fdivrp
mov
insl
pop
fs
lea
xchg
xor
divb
aas
xorl
fisubs
add
popf
sub
lret
mov
push
xchg
out
and
jbe
push
stc
jbe
or
std
sbbb
lds
sahf
and
fildl
sbb
sarb
rol
fwait
mov
inc
loope
dec
jg
pop
adcb
pop
loopne
mov
and
xchg
xchg
je
jo
sahf
repnz
lret
or
addb
push
scas
gs
cmp
mov
repz
rolb
inc
insb
mov
addl
repnz
test
cld
mov
fwait
jb
in
cs
or
aas
push
or
cmp
cmp
xor
out
jae
outsl
xchg
movsb
orl
cld
sbb
in
xor
iret
mov
lock
leave
cwtl
icebp
mul
mov
hlt
mov
imul
mov
mov
inc
add
xor
dec
adc
pop
mov
add
bound
xchg
fwait
push
les
enter
add
fbld
scas
adc
das
into
add
rcr
adc
mov
ret
push
ret
push
lcall
xchg
loope
repnz
in
lret
jg
pushf
in
add
ficompl
xchg
aaa
jns
cmp
adc
sbb
jnp
or
jle
popa
xor
mov
int3
repz
movhps
push
out
repnz
repz
mov
inc
or
hlt
out
add
hlt
sbb
add
cltd
xchg
push
ret
test
out
inc
push
mov
neg
xor
mov
and
push
dec
out
aam
out
inc
orl
adc
sub
push
jno
mov
and
bound
mov
bound
push
rcll
and
mov
pop
cmp
out
mov
fbstp
dec
pushf
imul
cld
sub
pushl
lret
mov
jmp
int3
in
cwtl
jle
stos
pop
sbb
xor
jecxz
addr16
or
sbb
mov
repz
sahf
imul
loopne
aas
ficoml
sbb
jo
inc
mov
and
push
loop
jmp
sub
mov
xlat
pop
and
mov
add
pop
outsb
push
adc
cmp
dec
movsb
xchg
add
mov
nop
adc
movsb
mov
xor
ljmp
xchg
pop
inc
or
adc
roll
ljmp
adc
ljmp
insb
jmp
sub
mov
adc
movsb
stos
fsubrs
into
ljmp
pop
fsubl
cwtl
add
sub
movsl
jl
faddl
scas
das
mov
out
mov
push
sub
bound
out
mov
lea
or
xchg
dec
push
cmc
and
std
mov
cmpb
mov
into
out
xor
idiv
sbb
and
sbb
aam
lcall
jmp
icebp
push
push
or
adc
in
dec
sbb
jmp
loope
loope
sub
test
add
stos
cmpsb
icebp
dec
jne
pusha
jnp
iret
les
mov
mov
stos
sbb
sbb
and
pushf
mov
jmp
inc
and
xor
and
cmp
nop
das
inc
jl
inc
lahf
xchg
andb
test
fdivrl
imul
sub
jnp
inc
pop
xchg
incb
data16
add
testb
sub
and
adc
in
sub
dec
and
ds
push
push
ret
dec
jmp
fcom
adc
out
aam
sbb
push
mov
jg
paddsb
mov
and
push
in
call
jg
pop
hlt
and
sub
dec
jge
cmp
ja
cwtl
dec
inc
ds
mov
cmp
loopne
mov
lahf
push
dec
cmp
int
gs
rsm
ds
xchg
or
inc
push
or
test
adc
xchg
test
push
fnsave
xchg
pop
inc
push
dec
lahf
inc
dec
ficoms
push
xchg
jnp
xchg
mov
out
mov
add
rcrl
sub
dec
in
or
into
lock
inc
jno
pop
out
and
mov
shl
or
aas
push
fdivs
push
push
fwait
je
jmp
popf
lret
sbb
repz
adc
sti
adc
lret
jl,pn
stos
mov
mov
pop
lds
outsb
bswap
jb
mov
movsl
fyl2xp1
pusha
cmp
movsb
cmc
or
push
push
dec
dec
adc
aad
popf
loop
in
lahf
pop
fs
push
popf
push
divl
outsb
fmull
andl
xlat
in
dec
adc
xchg
mov
mov
lods
or
jecxz
xchg
xor
mov
cmp
mov
cmp
add
sbb
stos
stc
rolb
int3
jl
and
inc
addr16
out
inc
push
inc
dec
cmpsl
add
test
loop
aam
hlt
adc
test
mov
pop
jb
lret
lea
adc
pop
sbb
jno
mov
loopne
mov
in
jo
xor
std
mov
cwtl
out
shlb
adc
xchg
xchg
loopne
sub
cmp
int3
xchg
sbb
add
cmp
loop
inc
aaa
jbe
fwait
nop
pop
dec
test
test
lcall
cmc
push
ds
loop
mov
stos
sti
inc
cmp
dec
lods
xchg
lea
push
cmp
lcall
xor
aas
not
xchg
and
and
fstps
xor
iret
push
fists
test
sub
adc
cmpsb
pushf
testb
pusha
xor
jne
add
adc
push
push
pop
mov
xor
dec
mov
jge
xchg
and
cmpsb
lods
lahf
pop
movsb
jl
cwtl
dec
push
nop
add
idivb
mov
icebp
out
lods
in
fwait
sti
scas
mov
mov
addr16
lret
adc
inc
mov
mov
pop
jmp
fimuls
repz
push
ss
imul
popa
xchg
push
cwtl
mov
aaa
mov
icebp
fistl
mov
fdivs
lret
aam
aad
mov
sub
out
adcl
stos
ljmp
mov
test
jle
xchg
pop
negb
dec
pminsw
test
push
in
xchg
xchg
movsb
and
pop
scas
and
mov
mov
fildll
mov
dec
movsl
movsb
push
push
xchg
fadds
push
pushf
ljmp
mov
push
mov
sub
mov
sub
jmp
mov
mov
nop
jne,pn
sub
lahf
pop
mov
mov
fldl
les
xor
mov
cwtl
mov
and
rol
cmp
ja
lea
icebp
out
cmp
adc
sahf
dec
test
call
mov
mov
xchg
cld
push
rolb
adc
push
sub
mov
shrb
scas
inc
sbb
add
fimuls
jp
add
iret
jecxz
dec
call
inc
rorl
inc
popf
aaa
loopne
sub
aam
clc
imul
sub
sub
divl
cmpl
jne
icebp
ds
push
imul
daa
mov
outsl
pop
fisubs
xchg
dec
xor
imul
and
mov
inc
sub
push
add
jl
adc
insb
dec
js
inc
loope
sbb
movsb
xor
mov
fstpl
sub
fwait
sub
jge
call
mov
fsubrs
cs
test
push
mulb
cmpsb
adcb
inc
pop
out
lcall
push
out
aas
jb
ja
inc
xchg
aaa
pop
movl
xor
out
sbb
jb
lahf
rclb
inc
xchg
or
mov
cmp
data16
icebp
mov
xor
xor
or
bnd
adc
sub
rcrl
xor
xor
pop
out
xor
int3
movsl
pop
pop
lahf
std
push
aad
adc
repz
or
adc
imul
push
dec
into
addr16
adc
mov
cmp
repz
sub
bnd
andb
and
fistpll
into
dec
aaa
dec
mov
or
leave
leave
shll
sbb
decb
mov
push
dec
fcmovnu
dec
and
test
cmp
lods
imul
lcall
cs
rcl
ds
jmp
loop
sahf
sarl
mov
cs
push
ficoml
rcr
jae
jo
dec
std
lods
pop
mov
jecxz
mov
jnp
gs
cwtl
test
jne
test
sbb
movsb
push
push
push
fsub
pop
push
cmc
in
sub
mov
int
sub
cld
cmpsb
add
icebp
xchg
scas
in
bound
dec
push
lods
stos
fisubrs
mov
jbe
pop
cmpsb
gs
fisubrl
es
sub
sbb
sub
hlt
inc
dec
or
and
xlat
cli
inc
ds
fwait
xchg
and
stos
mov
sbb
jg
jle
aad
outsl
stos
nop
and
push
fld
mov
loope
jecxz
xchg
or
hlt
sub
lahf
call
adc
fdivrs
orl
mov
subl
and
int3
pop
inc
cmc
mulb
xchg
shlb
pop
addl
arpl
pop
xchg
rcrl
pop
xorl
sti
sub
movb
js
inc
subl
pop
icebp
add
mov
fcompl
xor
mov
je
js
pusha
scas
add
xchg
imul
aad
mov
xor
cmp
mov
xchg
loop
pop
lods
mov
aad
hlt
jmp
shll
or
sbbb
pop
lahf
add
or
adc
add
dec
hlt
imul
sarb
jle
lret
icebp
test
jl
fimull
cli
rolb
sbb
cmpsb
mov
xlat
lcall
xor
leave
call
adc
xchg
xchg
push
cmp
jmp
pop
mov
push
int
adc
addr16
add
adc
pop
aad
cmp
dec
xor
jbe
movsl
jmp
rol
aaa
sahf
ss
insl
mov
pop
cmp
xchg
in
cltd
inc
mov
loopne
scas
cmp
movsb
cmp
dec
sub
cli
mov
dec
xor
stos
and
icebp
inc
divb
inc
gs
cmc
pop
push
xlat
add
nop
pusha
dec
aad
cli
enter
sub
jp
xor
dec
cmc
insl
dec
out
paddq
insb
loop
cmp
pop
sbb
into
outsl
push
mul
sbb
sub
pop
cmpsl
jle
leave
mov
mov
dec
out
or
or
out
fsubl
xchg
jne
mov
loop
les
xor
jmp
sbbb
std
out
test
test
mov
mov
pop
js
negl
mov
push
jg
clc
add
lock
andl
leave
into
and
insl
lea
mov
push
imul
dec
jp
mov
pop
add
adc
fs
add
xor
addl
fisttpll
add
sub
or
bound
ja
out
add
shr
insl
ret
jp
jecxz
add
dec
jp
enter
mov
inc
andb
sub
dec
cmp
sub
mov
in
xchg
mov
jbe
popf
mov
mov
aaa
xchg
xor
negl
and
jmp
pusha
jge
xor
add
rcrb
xchg
xchg
ret
rcll
clc
sub
xchg
inc
cmp
decb
mov
fcomp
mov
fldt
daa
lods
enter
gs
jb
in
push
loop
test
int
fimull
push
in
mov
je
in
cmp
and
leave
mov
fildll
js
push
outsb
sbb
int
and
jle
out
push
mov
push
push
and
push
fmull
jle
aas
mov
sbb
xorl
mov
clc
adcl
or
aam
inc
pop
lcall
into
fmulp
lds
out
addb
lahf
mov
sbb
inc
cmp
shll
or
fisubs
loop
stos
nop
sub
xor
push
add
test
or
kmovd
out
mov
dec
adc
fsubrp
ret
outsl
das
popf
add
add
aaa
daa
sahf
or
dec
mov
mov
pusha
inc
jne
movsb
xchg
push
loope
cmpsl
sbb
popa
out
repz
enter
pop
loope
fisttps
inc
sbb
pop
mov
mov
dec
and
sahf
cltd
fisttps
sub
ds
mov
bound
and
fwait
pop
jns
aam
jno
es
dec
add
stos
js
dec
sbb
and
inc
sbb
mov
js
test
mov
and
loope
loope
insl
sub
mov
ret
and
fnsave
jle
daa
test
and
push
nop
bound
mov
aam
mov
fistl
and
and
arpl
sub
testb
mov
aad
movsb
xchg
aas
pop
adc
out
or
repz
inc
mov
jae
add
flds
mov
or
aad
jg
xor
inc
xchg
insl
andl
mov
jae
icebp
data16
jp
pop
pop
cwtl
mov
add
inc
fbld
sahf
xorl
and
cld
dec
aad
sbb
shrl
roll
lds
mov
fpatan
lea
sbb
cwtl
ret
test
addr16
jno
mov
inc
loope
xchg
outsl
jecxz
mov
xlat
inc
arpl
jae
lret
pop
jg
xor
push
jb
test
add
insb
xor
and
lcall
jg
loope
hlt
mov
dec
and
jmp
aas
ds
pop
and
dec
inc
sbb
aam
xor
xchg
add
xchg
xchg
lds
fildl
je
or
adc
inc
sbb
nop
add
lea
xchg
mov
pusha
subb
mulb
pop
xchg
mov
fists
adc
sti
add
push
shlb
dec
and
xor
dec
cltd
pop
pop
in
dec
ljmp
sar
fildll
cmp
jno
fbstp
mov
dec
xchg
nop
mov
dec
lret
xor
xchg
popf
xchg
dec
or
insb
out
repz
outsl
jg
push
dec
nop
lret
enter
pusha
xor
outsl
push
inc
sbb
pop
test
cmpsl
xor
push
mov
adc
add
jo
outsb
cmp
jmp
pop
outsb
in
in
jns
inc
dec
push
or
pop
mov
mov
es
cs
push
push
add
dec
cmp
in
loopne
fcoms
cmp
and
xchg
adc
adc
dec
fadds
xchg
push
xchg
jbe
test
jo
cld
xor
dec
cmp
repz
js
pushf
jno
arpl
mov
add
lock
push
shrb
es
cmp
subb
pop
outsb
imul
pop
mov
pop
outsb
xor
lea
jecxz
je
in
test
je
lods
jnp
push
subl
xor
pop
popf
pop
sbb
movsl
rorb
scas
push
stos
adc
pushl
das
movsl
mov
xchg
pushf
std
insb
fdiv
ret
xor
testl
insl
jno
push
jecxz
xchg
insb
loopne
inc
pop
cmpsl
es
or
pop
insb
sahf
push
rcll
ds
mov
xchg
insb
js
popl
pop
outsb
jo
jb
xlat
clc
loope
jo
enter
or
jmp
adc
dec
in
pop
shl
nop
adc
push
lcall
out
jmp
cwtl
cmp
or
test
and
sbb
std
popa
ja
lcall
movsb
pop
cli
movsl
clc
sbb
mov
fiadds
sbb
pop
mov
sbb
pusha
inc
xor
call
xchg
or
lahf
mov
cmp
add
xchg
cmp
pop
adc
sbbb
lea
mov
mov
stos
gs
inc
test
aad
mov
jno
push
cld
ds
xchg
and
jecxz
mov
push
popa
dec
test
fpatan
cli
lret
push
insb
mov
arpl
or
inc
fidivrs
and
shl
in
scas
lahf
loope
mov
scas
or
out
inc
out
daa
dec
or
pushf
sbb
dec
add
sub
xchg
dec
cmp
adc
pop
jge
sahf
mov
jg
push
cmp
dec
loopne
cmc
lea
sbb
push
xchg
jo
fdivrs
fcmovb
adc
leave
enter
cmp
shr
stc
mov
sahf
pop
cmp
pop
rolb
mov
jge
jmp
in
lea
sbb
push
cmpsb
subl
je
lods
sbb
lods
test
mov
cmp
sub
push
fnstsw
aad
mov
jecxz
pop
mov
pop
push
mov
or
dec
mov
test
cmp
mov
in
jae
pop
ffree
pop
adc
sahf
push
cmp
popf
pop
gs
jl
loope
sbbb
and
mov
inc
mov
lea
mov
xchg
cmc
mov
shll
dec
inc
dec
fs
data16
aas
jnp
mov
loop
inc
shr
lret
and
fistpl
mov
sub
pop
adc
xchg
pop
inc
jl
jo
aad
pop
fisubl
fwait
dec
xchg
ret
dec
in
rcrb
scas
cmp
mov
arpl
lret
lcall
out
movsl
sarb
fs
fdivrs
add
sub
mov
out
xchg
loopne
sbb
lods
mov
std
jbe
je
dec
jbe
push
add
push
daa
dec
mov
mov
f2xm1
xor
into
lcall
mov
cmp
aad
addl
xchg
push
mov
fsubs
rcr
nop
bnd
mov
test
and
adc
add
ljmp
repz
mov
addr16
xchg
mov
sub
out
and
fistpl
cmc
inc
scas
mov
repnz
pushf
cli
fnstsw
out
inc
aaa
mov
mov
aas
cmpsb
dec
jnp
adc
mov
popf
repz
cwtl
jecxz
fldenv
add
int3
sarl
mov
xor
shll
xchg
push
fldt
push
inc
mov
stc
outsb
add
cmpsb
or
inc
adc
fucomip
pop
sbb
jl
push
js
xchg
mov
test
xlat
notb
and
call
push
pop
or
call
inc
add
mov
mov
mov
cmp
dec
incl
jae
test
inc
mov
cmp
popf
pop
fbld
ds
icebp
add
xchg
test
imul
ficomps
sub
cmc
jno
add
in
mov
and
adc
dec
cmp
mov
aas
mov
xchg
xchg
mov
xor
mov
jmp
push
cli
shr
xchg
cli
fdivs
clc
jle
xor
sbbb
std
enter
xor
and
push
negb
pop
repnz
adc
mov
aaa
int
dec
cmp
sub
xchg
cltd
mov
lock
dec
jp
mov
or
cmpsl
or
insb
fidivs
mov
ret
mov
xchg
jge
ret
xchg
jo
cmpsb
add
call
nop
idivl
xchg
cmp
in
mov
push
imul
xor
inc
sbb
xchg
shl
mov
jne
mov
pop
dec
pop
cld
lds
es
xor
in
ljmp
in
pushf
cmp
decl
pop
jmp
clc
xchg
inc
stos
adc
mov
jmp
lock
xor
std
ds
sub
je
in
sub
push
lods
jge
repz
es
and
lods
enter
es
pop
xor
sahf
arpl
push
aaa
fdiv
or
mov
scas
push
cmc
and
adc
sub
int
jo
pop
or
inc
in
xchg
out
inc
dec
shll
pop
in
adc
mov
icebp
and
cmp
pop
add
mov
in
mov
xor
out
xchg
push
popa
pop
loopne
insl
pusha
les
shll
into
and
in
pop
aad
mov
cmpsl
outsb
cwtl
or
jg
iret
rcr
rcrb
xchg
mov
pop
je
les
lret
jge
dec
arpl
cs
mov
lds
shl
xchg
into
lods
test
out
xor
jo
popf
add
mov
popa
nop
pop
mov
scas
subl
jl
ret
lcall
aaa
mov
dec
addr16
push
loope
jmp
pop
ds
rol
les
or
rcrb
icebp
fsubrp
mov
scas
int
jns
xchg
pusha
jne
adc
fsubp
int3
xor
mov
pop
push
lods
out
pop
pop
lods
xor
mov
push
xchg
leave
pop
icebp
pop
push
in
adc
sbb
rclb
int3
push
adc
mov
repz
loope
xchg
movsb
jb
and
adc
and
test
loop
push
test
xchg
push
and
popa
scas
and
scas
movsb
mov
mov
std
inc
test
bound
das
and
pusha
jl
mov
and
sbb
sub
out
dec
nop
sbb
sbb
adc
add
mov
mov
adc
mov
sbbl
in
add
jo
jns
cmp
mov
or
xchg
data16
dec
adc
icebp
pop
inc
stos
iret
or
add
aaa
in
xchg
xor
fwait
es
mov
mov
mov
movsl
cmp
jecxz
dec
lahf
sbb
mov
ljmp
xchg
mov
andl
xor
fs
mov
cld
add
addr16
repnz
jge
std
or
push
add
adc
andb
iret
sub
js
mov
fcomps
loop
xchg
push
ss
popw
in
ja
int3
and
mov
scas
fsts
mov
ljmp
mov
xchg
ret
push
add
nop
popa
push
out
lahf
xchg
xor
and
orb
sbb
hlt
daa
lea
cmp
push
or
mov
sub
pop
sub
cwtl
jb
aad
decb
sub
inc
insl
push
fisttps
adc
pushf
dec
add
dec
sbb
imul
push
int3
jns
push
rorl
xlat
iret
pop
das
mov
int3
mov
pop
sub
pminub
xchg
js
mov
shl
mov
inc
imulb
rcrl
leave
loope
inc
adc
push
outsl
xlat
pop
adc
ja
ljmp
pushf
jg
andb
leave
xor
and
mov
in
xlat
rcrb
out
stos
mov
push
pop
sub
jae
int3
rcr
lcall
mov
test
and
inc
daa
mov
subl
and
rcll
dec
ret
int
out
imul
dec
adc
sbb
xsavec
dec
dec
and
mov
test
push
inc
mov
int
cld
fadds
hlt
mov
into
and
inc
jge
adc
in
xchg
rcrl
pushf
cmp
lds
int3
sbb
js
imul
push
dec
mov
mov
push
xchg
or
clc
ja
addr16
rcl
and
lds
xchg
ljmp
std
out
repnz
sbb
faddp
jns
add
loopne
mov
inc
inc
mov
in
xchg
cmp
mov
stos
jmp
and
push
jnp
and
out
int
cld
inc
mov
shlb
rol
jno
fbld
mov
and
mov
into
mov
mov
roll
cmp
xchg
mov
jne
repnz
mov
xlat
mov
imul
sbb
pop
bound
and
jmp
lcall
add
shlb
loopne
sahf
push
test
adc
push
lret
scas
sbb
add
popl
or
mov
add
pusha
push
add
aam
in
rcll
insb
cmp
cmp
aaa
addr16
leave
sahf
popa
push
dec
sbb
adc
movsl
jg
mov
mov
inc
out
adc
pop
sti
cmp
cld
cmp
jmp
mov
mov
testl
push
push
dec
mov
sub
das
pop
sub
jecxz
jge
mov
sbb
movsl
push
push
shrb
sub
sub
or
or
cmc
ficoml
fs
cmp
out
cwtl
mov
daa
jl
mov
or
pop
repnz
lods
xor
and
mov
xor
bound
xchg
fwait
xor
or
mov
fldl
test
out
dec
insl
outsb
xor
addr16
push
inc
mov
jbe
repnz
dec
adc
testb
sbb
add
cmpsl
aaa
aam
pop
or
xor
xchg
pusha
mov
pop
scas
xchg
adc
push
aaa
enter
inc
or
cmpsb
xchg
mov
lds
adc
pop
leave
imul
bound
ret
adc
mov
cmp
sbb
pushf
and
cmp
loop
add
in
icebp
imul
pusha
adc
mov
jo
je
in
cmpsb
ds
cs
inc
in
aaa
fidivrl
jns
xor
rcr
pop
inc
and
xor
cmpsl
scas
repnz
sub
mov
inc
out
inc
outsl
mov
push
testb
adc
cmc
jp
in
push
jns
mov
lods
into
dec
mov
pop
out
jle
jmp
pop
fldl
mov
clc
aam
stos
push
adc
js
dec
push
xor
cmp
les
jl
mov
xchg
rclb
rclb
aas
out
pusha
jl
fldcw
ja
sub
sbb
imul
pop
mov
cmpsl
push
cltd
cli
test
and
jnp
add
cs
push
ljmp
ret
stos
pop
inc
pop
lods
dec
in
xor
push
xor
cltd
sarb
jg
pop
xchg
xor
xchg
push
adc
sub
lcall
adcl
adc
xchg
jp
or
leave
mov
in
mov
push
pop
sarl
pop
rcr
loop
inc
mulb
and
jne
repz
loopne
sub
popf
push
push
lods
loope
xchg
aam
mov
sbb
les
insb
sahf
mov
out
and
lret
add
jecxz
stos
aaa
cmp
hlt
push
aaa
fsubrp
rcrl
rcrb
inc
jnp
dec
in
xchg
adc
hlt
jno
mov
and
fistpll
out
jge
cmp
push
cmp
shrl
ror
cmc
push
add
divb
ja
int3
push
fsts
popa
jno
imull
push
push
mov
mov
movsl
mov
test
in
xchg
daa
jo
outsb
mov
mov
test
arpl
pusha
sub
stos
cs
lahf
sub
lahf
xor
in
repz
js
push
push
adc
loop
add
or
jmp
and
cwtl
movsb
lods
add
lret
sahf
sub
dec
adc
fnsave
or
fucom
sbb
push
clc
sub
mov
mov
cmp
int3
push
mov
jns
sbb
pop
mov
mov
out
add
lods
sti
mov
outsb
bnd
fcoml
fsubl
xor
jae
shl
loop
push
repz
jne
out
gs
les
test
xor
cmpsl
aad
fnstsw
push
xchg
xchg
nop
cmpsb
bound
outsl
and
pusha
dec
insl
cmp
jb
aaa
and
lret
mov
add
scas
lret
jbe
or
std
gs
inc
mov
in
and
cld
inc
mov
lods
sbb
push
rorl
dec
aad
movsl
stos
movsl
cltd
push
dec
sti
scas
jmp
stos
adc
cmpsl
sahf
inc
cmp
xlat
movsl
das
xchg
adc
add
pop
xor
mov
negl
mov
pop
xor
cltd
mov
push
and
and
mov
xchg
lcall
inc
mov
inc
mov
out
mov
rolb
dec
cmp
pop
mov
fpatan
or
dec
ret
xlat
mov
xchg
test
add
push
jmp
lret
jp
inc
jg
add
jae
and
lods
pop
xor
and
dec
movsl
shrb
sub
pop
adc
ds
mov
pop
js
scas
mov
xor
ss
int3
les
dec
cmp
in
push
popa
mov
pop
mov
xor
lret
xchg
jno
out
lcall
adc
sbb
cmp
pop
sbb
push
xchg
sbb
or
icebp
scas
sbb
cmp
sbb
xchg
and
daa
loope
cmpsl
inc
sbb
icebp
push
ret
mov
mov
and
mov
stc
or
outsb
daa
sarb
scas
jnp
es
inc
mov
mov
leave
mov
jge
and
xchg
pop
push
ss
clc
mov
or
int3
scas
pusha
push
rcr
pop
cmp
cwtl
sahf
cmp
jmp
arpl
mov
or
jnp
fcoml
mov
push
in
cmpsl
addr16
mov
inc
out
jne
fmuls
push
inc
mov
xor
jb
fidivrs
mov
sub
sarl
lret
out
and
ljmp
rorl
inc
sti
mov
xchg
outsb
mov
mov
sub
sbb
sarl
xchg
es
pop
xchg
fcoms
and
jl
lods
loopne
data16
push
sbb
sbb
add
add
popa
and
dec
and
fwait
repnz
pop
and
out
loope
movsb
imul
cmp
sub
lret
add
push
and
mov
xchg
ds
lods
popf
jp
cmpb
jne
cmp
nop
cmp
lret
popf
cmp
cmpsl
ds
pop
sti
mov
cld
and
push
jle
fwait
les
inc
rcll
sub
add
pop
out
cmp
out
cmpsb
push
in
xor
test
ror
pop
push
mov
stos
dec
jp
cmpl
mulb
cmp
imul
mov
loope
mov
pop
mov
dec
add
stos
in
mov
out
mov
inc
jl
jecxz
inc
mov
add
outsl
mov
mov
adc
cmpsl
add
fcmove
sahf
data16
sti
nop
adc
cs
inc
push
rolb
inc
push
dec
mov
pop
mov
clc
icebp
mov
push
inc
inc
das
mov
cltd
into
xlat
out
lret
inc
cmpb
dec
push
sbb
imul
js
push
repnz
out
pop
cmp
test
xchg
jae
repnz
and
jo
aaa
int3
arpl
xor
mov
testb
xchg
arpl
inc
adc
mov
daa
dec
orb
add
les
pop
loop
fs
add
sbb
push
bound
cmp
push
mov
sub
outsb
inc
xor
push
decb
and
mov
divb
stos
add
dec
jne
lods
sarb
jp
cmp
pop
mov
pop
push
jns
lds
mov
or
mov
fadds
or
lahf
jmp
ret
or
aad
mov
xchg
test
xchg
mov
xchg
mov
inc
fisubrl
xchg
xchg
jg
jle
shll
push
pop
outsb
mov
mov
cmp
outsb
jnp
and
xor
jnp
in
cwtl
scas
cmp
xchg
sub
add
out
jno
mov
ret
je
jo
xchg
leave
dec
mov
or
lods
cmp
lret
mov
in
popa
mov
sarb
jb
mov
xchg
addr16
fwait
cmpsl
sarb
scas
add
js
lock
std
stos
and
movsl
outsb
mov
rorl
mov
std
xor
jecxz
arpl
pop
fmul
pop
jns
push
adc
mov
jmp
mov
imul
inc
inc
int3
int3
in
cmpsb
std
cs
popa
stos
je
cmp
int
daa
stc
out
or
rorl
jecxz
out
insb
add
dec
mov
and
shrb
repnz
xchg
js
subb
loope
mov
dec
lods
lods
cltd
push
lods
mov
rcr
or
mov
outsw
mov
nop
ja
cli
mov
sub
pop
or
outsl
cmp
lods
cwtl
mov
into
add
movsl
out
pop
hlt
add
mov
lock
sbb
xchg
push
imul
insl
imul
xor
xchg
mov
bound
add
fstl
mov
incl
sar
xchg
jae
aaa
cltd
stos
test
mov
les
and
xchg
sbb
cmpsl
sbb
loop
dec
in
ljmp
test
pop
and
enter
pop
sbb
xor
or
mov
loop
bnd
jl
pop
and
dec
mov
in
jmp
push
ss
arpl
loop
insl
cmp
std
iret
ja
xchg
das
fs
mov
push
out
jle
jno
mov
xchg
xchg
mov
adc
cld
call
lds
jmp
xchg
xchg
xchg
xchg
notl
scas
push
mov
mov
in
pop
push
cmp
mov
xchg
lock
in
mov
push
cmp
add
clc
and
inc
xchg
jge
call
in
movsb
cltd
mov
out
sbb
std
jbe
xchg
jl
mov
xchg
cmp
mov
mov
dec
sub
andl
inc
repnz
add
pop
mov
cmp
dec
cmc
mov
push
push
nop
sub
mov
mov
ljmp
push
fistpll
cmp
mov
cmp
pop
repz
mov
pop
xlat
mov
dec
stc
push
jne
cmp
dec
ljmp
pop
and
repnz
pop
dec
cmpl
decl
cs
jae
mov
testb
push
ja
cltd
xchg
clc
lds
ds
fsts
ficoml
sbb
push
pop
lret
es
jo
inc
inc
inc
xchg
je
push
cwtl
shll
inc
movsl
rol
cs
out
add
xchg
bound
or
xchg
pop
std
lret
cmp
mov
jo
mov
pop
scas
lock
jbe,pt
lahf
fwait
test
loope
dec
adc
or
add
fucomip
xchg
dec
subl
xchg
lret
cmc
pusha
push
fistpl
sbb
mov
clc
or
out
aaa
sbb
mov
cmp
sub
adcb
aas
cmpb
sbb
xchg
test
pop
hlt
mov
pop
dec
dec
xchg
pop
test
cmp
fcoms
jns
add
cmp
ja
xchg
int
pop
les
inc
test
stos
sub
mov
movsb
fcompl
in
pop
cmpb
xchg
out
inc
daa
idivl
leave
sbb
xor
loop
pushf
jge
mov
rcrl
jge,pt
fistpl
xor
icebp
mov
dec
mov
test
cmpsl
and
sbbb
add
dec
les
iret
mov
push
mov
jge
mov
bound
fdivrs
mov
and
je
or
adc
jne
mov
adc
pushf
jl
into
test
pop
or
repz
cmp
outsl
sahf
mov
or
inc
pop
and
sahf
les
cmpsl
and
cmp
ja
frstor
into
hlt
sub
movsl
or
icebp
push
adc
and
fdivrs
shr
js
xor
aas
and
add
in
das
sbb
pusha
out
mov
sbb
adc
mov
test
add
cmp
push
dec
pop
cld
xchg
pop
scas
inc
std
and
and
jbe
push
ja
push
mov
sbb
cmpsb
mov
orb
push
add
jg
icebp
push
mov
cli
pop
mov
mov
lcall
into
push
xchg
dec
mov
add
test
js
adc
mov
and
fisttpl
lea
fmul
loopne
or
leave
jge
xor
fdivrl
lods
ret
out
sbb
sbb
xor
jb
dec
mov
push
ds
mov
and
repz
dec
rclb
mov
pop
popf
sub
xchg
ret
stos
fstps
mov
sub
cld
xchg
mov
add
sbb
movsl
cmc
in
pop
enter
adc
orb
pop
pop
adc
addb
and
popa
jbe
or
mov
dec
or
loop
and
rcrb
pop
es
sbb
jg
aas
mov
add
hlt
lods
pop
cli
rorl
xchg
sub
cmp
xchg
mov
mov
daa
cwtl
push
and
outsb
orl
pusha
push
lds
bound
call
sti
xchg
and
cmp
flds
jl
sub
cmc
in
shl
or
add
pop
mov
or
mov
pop
inc
sub
jg
pop
mov
ret
xchg
adc
shrl
and
nop
cmp
ljmp
int
incb
mov
stos
push
int
shrl
xchg
xor
dec
xchg
jns
addb
data16
and
shll
arpl
ror
mov
ja
call
pop
jbe
mov
lods
aaa
popf
in
ror
and
cli
or
inc
sbb
inc
add
sbb
xchg
xlat
int
or
outsb
xorb
mov
mov
mov
inc
cs
jbe
jecxz
and
jg
cmp
insl
mov
push
adc
pop
jp
fnstsw
mov
clc
pop
and
push
dec
into
loop
mov
xchg
jle
lea
and
popf
pop
out
mov
jb
lock
test
xor
je
cmp
jae
popa
jp
invd
pop
cmpsl
jge
push
popf
pop
dec
test
xor
mov
mov
adc
xchg
push
and
push
aad
cmp
lods
lret
js
scas
add
movsl
inc
lock
and
dec
or
ficomps
negb
sbb
ss
movsb
subb
fwait
adc
lret
jp
push
adc
fmull
add
cmpsb
pop
dec
ss
fstps
mov
fwait
jb
mov
and
outsl
push
cltd
pop
and
popa
mov
add
iret
and
and
xor
mov
out
shlb
mov
mov
push
sahf
inc
popa
bsf
pop
push
movsb
pop
addr16
mov
xor
sub
inc
stos
pop
cmc
adc
mov
pop
test
pop
add
sbb
pop
xchg
lret
mov
add
in
sahf
lcall
or
enter
mov
test
adc
inc
xchg
sbb
pop
ret
sbb
repz
xchg
xchg
or
negb
lea
jmp
or
rcrl
mov
insl
add
mov
pop
in
pusha
cmp
pop
pusha
add
sub
fwait
rorb
pop
ret
addr16
scas
add
addr16
stos
dec
loopne
push
and
adc
mov
jae
mov
sti
je
cmp
int3
jle
rclb
xchg
cmp
cltd
rorb
call
sbb
int3
mov
push
lock
and
std
mov
cmp
sub
aas
mov
sahf
dec
adc
add
mov
pop
ret
jmp
inc
mov
and
mov
fnsave
fwait
push
xor
xchg
cmp
push
mov
add
mov
into
dec
xchg
mov
les
loope
jle
jns
lock
movl
je
add
ret
mov
xor
pop
jne
pusha
ja
mov
jne
cmp
addr16
inc
inc
pop
shll
xor
outsl
xlat
imul
jge
xor
inc
cmpb
cltd
out
mov
stc
hlt
jl
daa
sbbb
outsl
pusha
or
clc
dec
xor
int3
push
daa
pop
imulb
shl
test
rol
test
fdiv
push
mov
jp
or
or
xchg
pop
mov
add
cs
adc
add
adcb
inc
test
nop
clc
inc
adc
add
xor
mov
fisubl
out
int
sarb
in
into
cmp
stos
cmp
pop
test
add
mov
fwait
adc
fmuls
aam
sar
scas
push
cmc
jecxz
loop
pop
arpl
dec
sub
out
xor
or
mov
popf
imull
mov
pop
rorl
sbb
roll
fistl
sub
cld
sub
test
or
xor
cmp
pop
cmp
push
sahf
jb
movsb
dec
mov
mov
iret
lods
ljmp
adc
sbb
dec
mov
sbb
cmc
or
sub
fldenv
inc
adc
sbb
orb
pop
inc
lods
mov
jb
push
ret
sub
xor
call
pop
mov
orl
in
xchg
das
pop
and
out
in
push
inc
or
cmp
sub
inc
iret
adc
vcmpltps
rorl
or
mov
js
test
outsb
outsb
call
call
mov
shll
in
fucomp
xchg
adc
cmpsl
js
mov
jb
xchg
aam
and
shlb
pop
and
hlt
outsb
in
mov
jg
loopne
nop
dec
pop
xorl
sub
mov
inc
rcrl
stos
inc
push
pop
jb
or
mov
fdivrl
movsl
or
or
nop
xchg
bound
mov
enter
dec
ret
mov
jecxz
xchg
xchg
sbb
icebp
xchg
clc
les
test
pusha
cmpsb
mov
fdiv
bound
sahf
cmp
lret
out
and
jno
mov
or
lret
es
std
cmpsl
je
mov
fwait
stos
or
pushf
jmp
jne
jge
mov
dec
movsl
lahf
mov
jb
add
bound
ss
push
popa
jmp
mov
mov
inc
in
inc
add
icebp
daa
sub
sarl
dec
jg
sub
clts
repz
push
lods
cltd
sub
test
mov
hlt
xchg
stos
xor
add
jnp
mov
ja
int3
rcrb
gs
fsubrl
jns
lea
test
pop
ror
push
aad
xor
xor
jecxz
adc
lcall
pop
cmp
test
or
mov
test
xlat
test
add
push
dec
daa
lret
cmc
popf
jb
xchg
ds
clc
inc
xor
ret
dec
call
cmpsb
dec
rcrl
lea
repz
mov
jo
loopne
ja
jmp
imul
inc
sbb
push
sti
mov
and
repz
push
xchg
cmp
aaa
mov
aam
mov
inc
psrlq
rcrl
add
jmp
fdiv
push
jg
adc
sbb
mov
and
dec
dec
sbb
faddl
aas
mov
add
popf
pop
insb
ss
repnz
adc
out
repnz
push
lahf
test
and
mul
fs
sbb
popa
popf
dec
pop
test
cmp
rolb
push
in
mov
paddsb
fnstenv
add
lahf
jle
pop
scas
push
je
test
aad
mov
nop
dec
mov
fistps
lods
adc
pop
inc
gs
lcall
movsb
repz
jns
mov
inc
bound
mov
push
pop
out
fisttpl
add
xchg
jbe
push
cmp
xor
sti
fadds
outsl
insl
out
repz
hlt
jb
loop
add
push
xor
adc
jl
addl
adc
dec
movsl
mov
call
fs
popf
outsb
popa
inc
int
xchg
stos
pop
inc
push
sub
push
in
shll
shl
sub
xchg
stc
roll
adc
fimull
fsubrs
sbb
dec
mov
xor
xor
jb
daa
rolb
popf
pop
mov
frstor
xlat
jbe
mov
ss
jb
xchg
jae
in
stc
mov
mov
jle
addl
jnp
and
es
or
jmp
and
add
sub
jno
dec
and
and
or
inc
in
sub
stos
aas
rcrb
rep
in
fs
out
adc
inc
adc
xchg
ss
jle
xchg
inc
out
jp
xchg
sub
xchg
in
pop
rcll
in
mov
mov
adc
xchg
xor
add
loop
divb
dec
xchg
mov
push
inc
push
popf
sub
mov
dec
stc
jecxz
es
insl
rcrl
std
mov
and
fstpl
sub
pop
popa
xor
es
fnop
clc
mov
rcrl
loop
xchg
enter
and
shll
mov
scas
cmpsb
and
insb
pusha
int3
jnp
pusha
add
sarb
test
and
or
stos
lock
test
and
test
fsts
mov
mov
lret
dec
mov
in
pusha
push
mov
push
and
mov
out
pop
jmp
pop
jbe
subb
int
cmp
out
mov
call
setns
mov
push
test
jge
jmp
loop
pop
adc
sbb
dec
add
je
inc
mov
xchg
cmp
xor
xchg
pop
sub
and
xor
clc
fwait
lods
sbb
fsub
je
push
dec
mov
mov
jecxz
mov
dec
add
pop
fwait
enter
out
aaa
sub
subb
mov
aaa
icebp
jp
lret
mov
ja
mov
sub
mov
dec
stc
jl
popa
or
jne
bound
dec
pop
outsb
adc
pushf
inc
and
mov
adc
add
outsb
insl
add
fistpl
repz
and
repnz
imul
les
out
and
jmp
ss
mov
sahf
lret
inc
sub
xchg
cwtl
pushf
xchg
pop
fwait
clc
xlat
rorl
shll
ret
adc
cmp
fistl
jb
and
cmp
iret
inc
dec
push
pop
insl
sbb
mov
into
ja
mov
ret
adc
sub
int
jg
cmc
sarb
lods
fistps
pusha
mov
dec
mov
mov
xchg
fwait
push
test
mov
and
inc
mov
in
insb
cmpsb
sahf
cs
add
mov
sub
push
inc
stos
pop
jmp
sarl
int
dec
pusha
xlat
fs
mov
clc
stc
jns
lret
push
add
sti
xor
dec
bound
xchg
xchg
lock
push
aas
cmp
icebp
addl
in
fiaddl
mov
subl
call
repz
mov
or
push
sub
popf
mov
add
cmp
les
xchg
das
lret
sub
cmpsl
pop
cmpsb
and
fstpt
and
jns
out
sarb
jmp
mov
movsl
cmp
flds
lcall
xchg
cmp
fs
iretw
mov
jno
lahf
movl
lods
repnz
jbe
out
pop
lret
jnp
ljmp
movsb
mov
cmp
sub
out
xchg
push
xchg
mov
xchg
cmpsb
push
adc
imull
and
shrl
dec
pop
ss
and
fwait
popf
inc
adc
shlb
imul
inc
sbb
mov
push
cmp
mov
jae
inc
inc
mov
xlat
xor
xchg
leave
gs
cmpsb
mov
pop
into
repnz
jno
cmc
mov
sarl
call
ret
dec
out
push
push
decl
add
fldcw
stc
rcrb
arpl
std
push
xor
ret
cmpb
xchg
pop
js
orb
je
es
out
clc
sti
mov
gs
orb
jmp
mov
sbb
add
mov
xor
stc
adc
mov
xor
push
push
insl
ljmp
jmp
inc
das
mov
das
mov
jb
cmp
in
shl
dec
lods
sub
sub
sbb
pop
inc
fsts
inc
addr16
add
loope
inc
test
into
outsb
aas
and
stos
shl
sub
push
addr16
lds
push
xor
stos
testb
sbb
lret
fdivr
pop
pop
xor
xchg
jo
loopne
into
xor
jo
scas
fiaddl
mov
sub
mov
movsb
push
mov
jg
mov
in
pop
mov
pop
cld
cwtl
sahf
loop
insl
xchg
movsb
jno
scas
mov
aas
mov
icebp
mov
or
cmpsl
sti
mov
cmpsl
pop
sti
push
insb
jnp
imul
in
imul
imul
xor
gs
mov
jnp
sub
push
sysenter
das
pop
pushf
je
punpcklwd
test
fucomip
inc
cmp
lock
cmp
rcl
aas
idiv
idivl
add
ss
ret
push
cmp
aad
fcomp
sbb
dec
into
xchg
lret
xchg
hlt
jne
and
notb
jmp
xor
push
mov
and
or
les
inc
movsb
mov
imul
fsubrl
add
mov
push
lods
lock
inc
in
cmp
divl
add
push
or
lods
fstpl
ljmp
iret
sub
pop
adc
in
fisttps
cmp
jno
clc
push
mov
jns
dec
mov
into
loope
or
pop
loopne
push
orl
pop
sbb
sbb
outsl
out
maxps
and
mov
jle
add
fdivl
pop
enter
mov
push
xor
leave
lea
mov
jecxz
dec
gs
imul
push
jmp
mov
loop
push
xchg
loope
out
icebp
push
and
pop
pop
std
push
sbb
cmp
inc
xor
lods
cmp
jnp
sbb
icebp
test
jge
add
movb
jge
and
mov
add
sub
mov
and
and
and
repz
push
cmp
and
mull
in
jge
in
fs
fnstcw
adc
pop
sub
fisttpll
cmp
fwait
push
cmp
daa
dec
stos
scas
shll
push
shlb
mov
or
mov
sub
adc
cmp
pop
dec
dec
jno
mov
ret
adc
movsl
xchg
cmc
xchg
mov
mov
mov
lock
push
dec
add
jp
lds
shlb
out
aas
xchg
mov
and
icebp
cmp
rolb
mov
mov
and
add
inc
pop
lea
push
or
jno
imul
mov
fdivrl
mov
cmpsl
daa
sub
inc
jmp
jo
sbb
pop
into
mov
loop
ds
scas
imul
jl
inc
dec
mov
aas
lcall
nop
inc
insl
push
fiadds
std
push
sbb
cmp
repz
cltd
repz
jmp
ljmp
loope
pmulhw
inc
ficoml
or
sbb
js
dec
jle
sub
mov
sub
aam
les
adcl
dec
mov
negl
fs
add
pop
xor
push
aas
sahf
je
dec
test
fdivr
cmc
cwtl
test
in
cli
sub
sub
pop
push
aas
xchg
aas
mov
pop
or
add
inc
cmp
out
push
xor
pushl
mov
stos
rcrb
fldl
imul
out
sbb
inc
adc
ret
ret
inc
dec
stos
xchg
adc
xor
sbb
mov
xlat
daa
add
pop
xchg
mov
cmpsb
mov
jo
cmp
jbe
jecxz
inc
movq
dec
xchg
test
aas
js
ret
jge
test
cmp
out
mov
shr
jnp
outsl
mov
loope
lock
lcall
mov
pop
inc
insb
out
add
cmp
out
and
jnp
cltd
or
jns
into
inc
jae
rcrb
push
pushf
push
lods
push
cmp
repz
mov
call
fs
dec
sahf
data16
cmp
std
xor
and
imul
adc
lods
arpl
outsl
sbb
test
scas
jp
jae
cs
inc
sub
sbb
popa
and
cmp
sbb
adc
push
push
out
dec
mov
cmp
mov
sub
mov
push
add
inc
enter
inc
and
loopne
jge
mov
das
loope
test
stc
jecxz
cmp
push
jae
addr16
add
xchg
add
inc
scas
mov
push
test
adc
or
jp
shrb
mulb
push
mov
sbb
je
sahf
push
stc
lods
push
outsb
add
pop
mov
or
ret
push
into
imul
aam
scas
push
and
dec
fwait
push
pusha
test
xorl
and
pop
int3
sub
cmp
cmp
orl
push
xor
mov
mov
push
xorb
add
cmc
test
dec
dec
xor
sub
mov
sar
mov
mov
lock
sbb
jo
inc
xor
cmp
add
rcll
pop
insl
js
xlat
mov
mov
pop
idiv
ss
ret
leave
movsb
xchg
repnz
out
insb
movsl
adc
xchg
sub
inc
add
sbb
int3
mov
mov
mov
lret
adc
sbb
popa
jo
gs
sub
out
adc
pop
adc
or
xor
jb
xchg
lahf
mov
and
add
push
lds
out
inc
in
adc
fistpll
cmpb
xchg
or
adc
test
test
xchg
inc
mov
int
jb
andb
xchg
movsl
daa
jmp
js
adc
or
dec
xchg
shlb
dec
add
test
das
jmp
aad
das
es
jmp
dec
mov
lcall
jp
addl
cs
pop
imul
pop
push
cmp
orl
mov
adc
xchg
cmp
ret
xchg
push
adc
xchg
add
mov
adc
dec
sbb
mov
std
out
mov
sub
int3
adc
loop
xlat
sbb
out
cltd
clc
pop
or
pop
push
sbb
das
xor
pop
push
push
rol
out
inc
pop
scas
sbb
jecxz
movb
cmp
lret
dec
hlt
dec
int
rol
mov
fadd
test
pop
out
xor
xor
and
bound
icebp
or
in
mov
gs
or
arpl
cmpsl
jle
push
mov
pop
test
nop
lret
or
jbe
mov
jbe
fcoml
sub
mov
out
in
mov
mov
sub
repnz
testl
mov
out
xorl
push
daa
pop
dec
in
imul
jp
cli
in
jle
inc
sti
movsb
xchg
xor
jg
int
push
xor
xchg
mov
xchg
filds
sti
and
cmp
or
notl
xchg
mov
fld
cmc
test
mov
ja
push
aam
fdivs
loop
icebp
mov
bound
pop
pop
shll
add
jmp
push
sub
lcall
mov
adc
mov
insb
test
aad
fdiv
stos
push
mov
repz
mov
rcrl
jno
mov
incl
test
inc
mov
dec
enter
push
leave
mov
xchg
dec
test
in
jecxz
pop
icebp
cmp
test
push
pop
and
jo
je
into
scas
mov
pop
xor
jg
xchg
mov
arpl
pop
inc
pop
lods
ljmp
daa
dec
mov
mov
and
jmp
add
cmp
mov
sbb
dec
dec
loope
xchg
test
sub
push
les
inc
push
roll
cmp
shlb
inc
sbb
jae
dec
or
in
in
mov
dec
lods
roll
sbb
dec
lcall
out
push
fs
inc
cmp
cs
es
in
and
es
nop
push
aas
sahf
fistl
test
mov
inc
ret
lcall
loopne
cmp
jbe
inc
jp
in
pop
push
loopne
sti
mov
xchg
xlat
fwait
add
dec
cmpsl
sbb
jnp
mov
stc
lods
ljmp
cs
xchg
test
mov
cs
cld
pop
mov
mulb
pusha
movsl
addr16
pop
add
jmp
mov
dec
and
nop
or
jbe
xor
add
xchg
imul
add
xchg
sub
rol
and
inc
sbb
and
xor
stc
adc
sbb
mov
adc
xor
sbbb
dec
int
lods
xchg
or
adc
dec
xlat
gs
xchg
adc
bound
adc
mov
outsl
xchg
fcmovnu
inc
fmuls
sbb
dec
or
jae
jp
push
push
je
lods
pop
cmpsb
stos
outsl
adc
xor
es
rcrb
add
inc
or
or
ret
outsb
out
clc
ret
aas
fdivrs
mov
ficoms
mov
xor
mov
ret
rcl
imul
pushw
pop
lods
mov
inc
inc
cwtl
mov
ret
jg
ljmp
decb
aam
sti
loopne
lea
sub
fbstp
dec
popa
insl
adc
je
aam
aaa
jl
hlt
dec
sbbb
sbb
dec
jbe
aaa
adc
xor
stos
jl
sahf
mov
faddp
jmp
inc
sub
repz
jl
leave
bound
loopne
dec
xchg
js
and
mov
scas
lds
ja
mov
imul
pop
fwait
cwtl
push
cli
push
out
test
xchg
arpl
aaa
mov
xor
inc
cmp
mov
dec
test
scas
adc
xchg
neg
pop
leave
pop
ljmp
call
add
jnp
mov
hlt
jae
stc
imull
les
std
jle
repz
les
and
sub
xorl
mov
aaa
adc
sti
jmp
xor
fisubl
aaa
and
mov
sar
ja
mov
lcall
sbb
aad
inc
dec
lods
aam
pop
inc
in
or
xchg
call
nop
addr16
xchg
idivl
lahf
pop
sarb
push
mov
dec
flds
repnz
in
mov
mov
ljmp
cmpl
in
mov
dec
or
loopne
sub
cmpl
sbb
clc
sarl
aad
jge
sbb
pop
dec
cwtl
out
sti
out
mov
inc
jno
cltd
mov
iret
aad
cmp
sbb
stos
cmpsl
daa
jmp
lods
add
call
push
loope
sahf
xor
pop
aam
adc
push
add
jge
mov
repnz
insl
push
xchg
dec
out
imul
mov
mov
das
dec
cs
mov
inc
rcrl
xor
ret
in
mov
fistpll
dec
xchg
xchg
fisttps
dec
xchg
add
pop
add
add
out
inc
mov
xor
mov
add
xchg
in
adc
rcrb
mov
mov
xchg
sbbl
dec
cli
cwtl
pushf
pop
push
in
leave
inc
repz
mov
xor
or
icebp
adc
inc
cmp
cli
add
or
push
mov
adc
std
mov
lahf
inc
lcall
aaa
or
push
pop
pop
pop
cli
iret
scas
sbbb
ljmp
cwtl
leave
fists
fistpl
pushf
pop
sub
xchg
mov
repz
icebp
pop
push
jb
test
aas
xor
addr16
mov
pop
mov
jge
test
sbb
bound
or
mov
pop
adc
insb
pop
xchg
cmp
aam
cmp
mov
jge
xlat
push
leave
test
dec
lahf
pop
sub
stos
imulb
jl
fnstenv
push
fdivrl
mov
addr16
mov
mov
mov
adc
stc
loope
mov
movsl
jge
mull
cmc
sbbb
lahf
xchg
jae
insb
push
adc
sbbl
xchg
sub
and
push
jb
test
mov
xchg
sarb
loop
xchg
mov
stc
pop
push
inc
pop
ja
inc
push
sbb
cli
jmp
in
dec
adc
jge
mov
clc
xor
arpl
sbb
mov
sbb
mov
cmpsb
cmp
into
loop
inc
lret
jno
ret
loopne
push
add
dec
cmp
in
dec
cmovbe
and
outsl
jae
lods
outsl
dec
sbb
jp
push
sbb
push
xchg
adc
andb
movsb
addr16
hlt
test
cmp
scas
cmpsb
jo
cltd
mov
and
arpl
daa
inc
repz
push
pushf
cmp
mov
pop
das
xor
outsl
jns
xor
pop
fadds
in
push
aas
ret
mov
xchg
jmp
arpl
popf
add
push
data16
push
stos
scas
out
loop
jbe
pushf
cmc
bound
push
int3
cmpsb
scas
scas
in
adc
dec
data16
movsl
push
std
stos
mov
push
push
fimuls
sub
pop
jmp
adc
jmp
out
inc
cwtl
pop
mov
and
stc
xor
push
shrb
lods
js
inc
cld
sbb
inc
mov
test
ret
pop
push
fwait
xor
jl
sub
push
fwait
xchg
jns
push
xchg
or
out
imul
push
mov
fcomp
push
enter
fistpll
sub
icebp
and
ret
or
test
ss
jp
add
popf
imul
cmp
sarb
rclb
mov
lcall
gs
pop
jg
stos
in
les
inc
lea
fs
fsubs
imul
in
arpl
shll
js
call
fmull
daa
cltd
and
jae
add
push
inc
sbb
es
xor
pop
jnp
fadds
fdivrs
call
fsubr
pop
cwtl
popf
scas
pushf
decb
pop
aam
jae
xchg
xchg
jp
pushf
push
inc
xor
daa
push
xchg
into
cmp
cmovl
jnp
scas
mov
out
adc
stos
xor
pop
mov
xor
push
stos
push
popa
push
fs
fs
ja
flds
sbb
test
or
fnstcw
jmp
dec
adc
icebp
and
in
jg
inc
rcrl
xor
scas
punpckldq
fwait
inc
add
movsb
xchg
cmp
adc
bound
mov
test
add
sbb
jae
inc
loopne
push
mov
mov
xor
movsl
xchg
jge
cld
sbb
mov
pop
pop
fidivrl
sbb
mov
xchg
negl
mov
loop
mov
pushf
outsl
jg
lea
jae
fs
adc
xchg
pop
or
dec
pop
or
fs
xor
add
xchg
cmp
ja
shrl
push
rorl
add
rcr
dec
orb
jecxz
push
mov
dec
arpl
out
add
and
into
mov
xchg
movsl
adc
loopne
xchg
xchg
je
or
stos
popf
addr16
cmpsb
sarl
adc
sar
gs
jl
dec
fwait
adc
daa
or
out
lock
mov
es
cmp
sub
xchg
out
fisubs
xor
stc
repz
mov
sub
inc
dec
in
pop
rcll
push
cwtl
test
fwait
jnp
addr16
cmp
test
in
push
mov
dec
sbb
sub
inc
ss
mov
hlt
jo
fsubs
ljmp
mov
std
cmp
cmp
in
inc
dec
xchg
popa
in
insb
mov
jl
mov
mov
cmp
adc
mov
testb
mov
sti
jns
fnstcw
push
sahf
sub
mov
or
mov
cmp
adc
dec
scas
adc
adc
enter
sub
pop
loope
mov
imul
lods
rolb
cmpsb
cli
pop
fiaddl
xchg
imul
out
sti
or
cmp
mov
lods
mov
stos
clc
dec
stc
nop
and
pop
xor
jge
flds
dec
sub
push
xchg
lret
icebp
jns
mov
xor
int3
mov
push
dec
add
cli
xchg
add
repnz
pop
mov
mov
stos
movb
negb
push
jne
mov
popl
sbb
xor
out
out
repz
fisubrs
dec
repz
lea
scas
add
daa
cmp
jbe
pop
outsb
mov
ficoml
imul
shll
adc
sub
mov
or
jnp
pop
lds
mov
mov
repz
stos
mov
and
push
sarl
inc
out
push
icebp
shll
cmp
or
rcrl
hlt
aas
push
xor
stos
jge
and
andb
jge
dec
cmp
mov
push
cs
and
hlt
popl
test
fists
dec
xchg
ret
sbb
gs
imul
fimull
sbb
and
mov
mov
mov
sub
xchg
fcmovnu
cmpsb
sub
and
xchg
adc
scas
cmp
sbb
mov
push
aaa
mov
jb
xor
sub
sub
jno
sbb
lds
push
cli
stos
mov
dec
cmpsb
in
pop
int
test
sub
lock
xchg
sub
stc
mov
xchg
mov
bswap
cli
jg
icebp
sbb
andb
or
dec
inc
add
addr16
fs
sub
cmc
in
pop
dec
mov
mov
aad
sub
fwait
pop
xchg
dec
ret
pushf
and
and
dec
js
jno
or
pop
lahf
cmpsl
dec
mov
add
jno
test
decl
in
lret
push
xchg
sub
je
cmp
arpl
leave
mov
sub
push
scas
scas
fsubl
mov
outsb
pop
out
enter
fs
dec
xor
inc
fidivrs
adc
bound
jmp
outsl
cmpsb
sub
ss
faddl
mov
enter
add
out
cmc
test
mov
jge
jle
pop
dec
and
adc
pop
inc
ret
lahf
mov
in
dec
sbb
mov
mov
mov
movsl
stc
pop
test
fwait
pop
push
mov
test
punpcklbw
hlt
ret
ss
xor
xchg
xchg
push
pop
aad
and
rcl
ss
jmp
xchg
or
jno
mov
pop
fstl
and
sahf
adc
and
push
pop
pop
outsl
aam
inc
scas
pushf
jbe
insl
cmc
arpl
fisubrl
daa
mov
les
xor
enter
adc
std
sbb
pop
lret
pop
shrb
adc
enter
mov
daa
mov
mov
cli
xor
mov
cmp
dec
iret
insb
ja
ret
popl
dec
xchg
dec
leave
mov
mov
hlt
fistl
clc
int
test
fisttps
dec
jle
fcompl
jecxz
xchg
jmp
pop
jo
mov
push
ret
and
adc
out
jo
and
insl
out
xchg
aas
leave
jmp
dec
push
jns
lahf
and
sbb
cmp
outsl
arpl
cmp
mov
stc
lds
sub
adc
icebp
test
cmp
ljmp
dec
fdivs
daa
es
or
mov
ljmp
loop
or
push
repz
popa
inc
jno
aas
mov
test
movsb
mov
fisubs
pop
inc
mov
push
push
cs
xor
and
cmpsb
pushf
testl
rcll
and
shl
xchg
lods
aaa
mov
or
push
nop
cmp
add
inc
adc
lret
add
jmp
and
mov
test
inc
arpl
pop
jne
adc
aas
das
xchg
outsl
ja
loop
mov
pop
mov
int
lods
aas
out
pop
negb
test
cwtl
sti
mov
pop
lods
scas
in
decl
insb
mov
mov
ret
cmp
adc
jg
push
cmp
and
lods
jno
lods
addb
sarb
mov
mov
cmp
sbb
xchg
sti
mov
int3
sbb
repnz
inc
lcall
loop
and
add
movsl
and
push
mov
pop
repz
mov
fisubl
xor
add
push
ss
pop
mov
jle
dec
xlat
aaa
lahf
push
jp
mov
inc
pusha
adc
pop
das
mov
add
sub
dec
data16
out
push
pop
or
dec
cwtl
out
inc
inc
aam
idiv
xchg
add
push
scas
iret
idivb
aam
shlb
fnstcw
pop
mov
stos
divps
aad
lock
and
jbe
sbb
and
xor
xchg
adc
mov
xor
pop
inc
sub
xchg
dec
loope
jns
mov
call
push
dec
sbb
into
adc
sub
xor
divl
mov
flds
xchg
ss
lods
adc
aad
sub
push
std
and
lret
subb
lea
out
xor
sbb
sub
xlat
lcall
cmp
jae
repz
cmp
aas
fldenv
test
inc
pop
jo
ljmp
pop
addl
imul
cli
test
mov
aaa
fisttpl
lret
and
leave
push
out
pop
movsl
sbb
sub
sub
arpl
fnstsw
sub
fwait
xchg
push
dec
cmp
aaa
push
and
lahf
fmull
jecxz
test
ret
sbb
mov
xchg
das
jb
mov
pop
fmuls
js
pop
add
inc
jb
jecxz
dec
daa
jecxz
mov
rcr
pop
mov
nop
pop
jmp
adc
mov
xor
icebp
aaa
and
and
lods
subb
lds
addr16
jl
push
push
mov
ret
or
or
mov
rorl
in
inc
dec
mov
xor
gs
in
mov
test
mov
jbe
push
push
push
dec
divl
inc
mov
repnz
jne
push
pusha
push
push
pushf
mov
xchg
cmp
add
sub
test
enter
or
xchg
cmc
and
xor
mov
and
pop
pop
je
aad
pop
mov
shl
xchg
pushf
xchg
xchg
ljmp
shr
dec
cmp
add
xchg
das
flds
mov
outsl
xor
adc
push
loope
ficoms
jg
xchg
xchg
or
push
and
adc
inc
inc
or
push
dec
xchg
std
xor
sbb
sub
outsl
dec
lahf
push
stc
rcrb
inc
mov
imulb
push
data16
lcall
pop
cwtl
xchg
jbe
fs
push
sbb
sahf
ljmp
cs
sub
sub
clc
sub
mov
mov
dec
add
inc
push
sahf
cmpsl
adc
bnd
mov
adc
sbb
into
mov
out
cmp
insb
pop
cld
sbb
or
or
addb
jnp
jl
iret
dec
ja
cmc
mov
add
sbb
repz
pop
mov
cmp
mov
and
xor
pushf
inc
shrl
xchg
les
xchg
outsb
push
jl
clc
or
das
xor
lods
cmp
clc
mov
popw
les
stos
inc
dec
fimuls
and
pushl
add
xor
mov
icebp
cld
icebp
call
push
xchg
out
sbb
movsl
stos
stos
dec
push
and
mov
add
rorl
mov
dec
mov
pop
and
imul
test
and
test
or
push
or
loope
mov
cmp
imul
aad
and
repnz
fs
ss
add
mov
xchg
push
ljmp
xor
repnz
mov
xor
jge
mov
xor
xchg
hlt
mov
movsl
popf
outsl
xor
out
or
add
loopne
repnz
gs
ja
mov
inc
push
data16
dec
jmp
fxch
test
shl
addr16
mov
test
repnz
sbb
cmc
dec
dec
and
stos
or
sub
mov
inc
mov
in
insb
inc
fidivs
mov
push
sub
loopne
dec
inc
inc
imul
lods
out
or
popf
scas
jnp
sub
or
ss
cmp
cld
jg,pn
mov
cmp
or
loop
xchg
mov
addr16
mov
hlt
es
and
jns
ret
sub
lock
in
lahf
filds
loop
dec
lcall
je
dec
pop
pushf
sahf
mov
add
ja,pt
orb
cld
insb
sub
cmp
out
inc
jns
push
loopne
pop
iret
lods
mov
sub
sub
fsubl
ret
mov
clc
push
fsubr
pusha
into
jmp
clc
sbb
jo
jnp
jmp
aad
push
sbb
push
aas
and
or
pop
dec
push
cli
divl
push
in
or
and
lock
loope
imul
mov
nop
xchg
fnstenv
loopne
jae
inc
xchg
dec
incl
cld
shrl
sarb
hlt
addr16
sarb
inc
adc
scas
jp
push
xlat
inc
insb
test
push
mov
cltd
dec
fbstp
ja
testl
in
cmp
pushf
icebp
fimull
sbb
aas
ficompl
pop
and
ficoml
cmc
rclb
fwait
add
mov
mov
inc
fidivrl
out
xor
lea
popf
mov
out
fnstenv
sbb
sub
cli
cli
pop
inc
mov
fcmovu
fdivrl
sub
push
pop
mov
mov
or
es
lahf
rorl
mov
xchg
data16
in
cmp
cmpsb
inc
push
cmp
std
loop
ljmp
pusha
in
adc
loope
notl
scas
push
mov
adc
loope
dec
or
shl
cmp
jae
fiadds
pop
mov
jecxz
cld
lods
adc
daa
clc
ja
and
mov
sahf
mov
mov
in
sbb
jbe
push
push
mov
mov
mov
xchg
sub
mov
xorl
out
pop
out
sbb
sbb
mov
xor
push
or
push
xchg
inc
adc
fs
dec
leave
insb
jp
mov
mov
int3
dec
jbe
sti
icebp
ficoms
in
outsb
je
xchg
test
cld
xchg
aam
jns
data16
fs
orl
fs
push
ret
cmp
loop
es
gs
push
sbb
inc
add
pop
and
xor
ret
xchg
jmp
sarb
mov
xchg
inc
imul
pusha
cs
xor
rolb
or
or
gs
test
into
xor
mov
loopne
testl
xchg
lahf
jp
std
jb
dec
mov
adc
xor
mov
ja
lods
stc
jbe
pop
pop
clc
mov
arpl
int
cmp
int3
mov
jle
jns
sub
add
xor
push
test
test
jl
in
or
mov
outsl
daa
inc
cltd
pop
inc
in
jecxz
call
enter
mov
ss
xor
push
outsl
aad
adcl
movsb
cmp
fcmovu
add
mov
mov
xchg
loop
inc
pop
gs
fs
sbb
bound
inc
jae
cmp
cs
lahf
arpl
daa
mov
bound
mov
lods
je
stc
sbb
inc
outsb
iret
fisubs
sarl
xchg
add
fisubl
mov
push
mov
leave
cmp
lods
pushf
dec
cmp
mov
and
shll
rcrb
in
adc
shlb
add
call
insl
mov
lds
cs
pushf
inc
sbb
int
cmp
or
dec
xchg
fwait
dec
stc
subb
mov
inc
stos
in
daa
cli
shrb
mov
pop
outsl
pushf
pop
xchg
jb
inc
xchg
bound
push
mov
mov
push
nop
mov
sub
das
cltd
testl
and
gs
pop
xor
faddl
xor
repz
mov
dec
or
pop
loopne
scas
xchg
and
xchg
push
aas
aas
fcmovnu
inc
daa
push
mov
pushf
les
jmp
in
icebp
push
lret
sub
enter
lods
not
call
scas
dec
fwait
xchg
mov
lods
xchg
pop
test
test
cmpsb
fildll
cmpsl
inc
sahf
enter
cmp
and
push
cmp
fwait
jb
ret
dec
adc
dec
cmc
mov
icebp
cmp
adc
sbb
ljmp
jno
mov
test
dec
jae
mov
jne
sbb
sbb
pop
and
outsl
and
mov
pop
push
cmp
mov
xchg
popl
push
faddl
loopne
lock
stos
mov
outsb
push
clc
lea
xor
xchg
aas
repnz
and
add
mov
or
in
cmp
mov
gs
out
fcmovu
lahf
nop
sbb
out
lret
inc
icebp
in
pop
adc
pop
jge
sbb
test
testl
loopne
jecxz
lods
sbb
clc
shr
pop
inc
mov
loop
adc
aad
in
loopne
push
cs
icebp
mov
push
jp
cmpsl
int3
mov
mov
xor
lahf
iret
popf
je
sub
xchg
mov
in
push
mov
jg
xor
cmp
ret
fcmovu
add
push
inc
cmp
adc
cmp
out
out
scas
aam
ficompl
xchg
cmp
popa
lock
pop
lods
xchg
imul
addb
gs
es
cmpsl
inc
popf
je
enter
cmpsl
ljmp
adc
inc
xchg
mov
xor
nop
loop
andb
out
lcall
and
fildl
vunpcklps
mov
fcmovu
xor
xchg
ljmp
dec
pop
xchg
loopne
mov
aam
jl
test
bound
jb
lods
ja
adc
pop
lock
lock
dec
es
mov
push
jle
mov
mov
mov
rclb
push
sahf
and
or
dec
pop
dec
sti
out
add
pop
and
into
stos
fmuls
dec
test
cs
lds
icebp
fs
or
mov
in
out
out
push
loop
mov
lcall
cmpl
mov
jle
or
jne
subb
icebp
mov
cmp
js
lods
clc
int
mov
std
fsubrs
cmp
mov
pop
mov
shlb
jae
gs
arpl
sbb
test
sbb
shll
jle
xor
pusha
js
pop
out
push
pusha
ljmp
adc
aam
pusha
dec
sbb
test
inc
scas
sub
out
adc
test
pusha
mov
mov
mov
push
scas
push
and
dec
enter
in
out
push
ss
push
xchg
mov
nop
and
pop
mul
push
jp
push
cmp
xchg
pop
jb
mov
jle
addr16
dec
lds
xchg
inc
lea
nop
xchg
cli
lock
loope
repnz
mov
ret
shl
mov
jae
je
ss
mov
addr16
pop
inc
shlb
mov
and
in
and
loope
sarl
xchg
jne
dec
out
or
xor
xchg
mov
lcall
cmp
gs
test
shlb
aas
pop
or
imul
cli
in
inc
pop
jge
and
sahf
mov
sti
addr16
add
aas
pusha
pop
hlt
jnp
push
jo
cmp
jbe
repnz
jecxz
jle
into
mov
jle
xor
add
jnp
adc
push
push
nop
cmpl
data16
cmp
pusha
fdivrl
pop
movsb
adc
push
and
mov
add
or
mov
sbb
xchg
jo
sub
in
bnd
sbb
dec
push
mov
sbb
cmp
jnp
sub
mov
or
or
jno
ret
pop
mov
xor
sub
dec
sbb
cmc
fldcw
jno
mov
adc
movsb
fidivrs
push
dec
pop
jb
mov
pmaxsw
jmp
inc
pushf
dec
mov
push
ret
fsubs
mov
cs
dec
aad
es
scas
push
inc
xchg
mov
inc
mov
data16
mov
test
cmp
rcr
fistl
cmpsb
loop
xchg
and
or
jge
sbb
out
outsl
fldcw
stc
fldcw
jge
fwait
pop
mov
jno
nop
sbb
xlat
sahf
into
test
add
outsb
in
push
les
lret
mov
jecxz
push
sub
stos
pop
fwait
ret
xor
sub
addr16
xchg
loop
xorb
test
imul
adc
lret
pop
mov
out
add
lret
xor
pop
jle
repnz
pop
pop
pop
and
scas
inc
out
cld
push
stc
jb
add
aam
adc
or
push
mov
mov
es
leave
pop
cmp
cwtl
cmpsl
hlt
and
pop
inc
push
cmp
repz
or
outsb
les
push
insb
pop
push
lret
sub
mov
scas
mov
stos
adc
jae
jle
jno
fadd
xlat
push
in
adc
out
cmp
mov
sub
imul
pop
sub
mov
push
test
push
mov
xchg
jecxz
in
sarb
pop
pop
inc
xor
mov
cld
adc
push
outsl
rcl
dec
xchg
popa
lods
fisubrl
jp
cli
sti
inc
orl
mov
push
repz
mov
sbb
jmp
out
jge
leave
stos
xor
addr16
scas
int
adc
sub
hlt
cltd
rcr
push
adc
push
lea
push
int3
stos
pushf
stos
and
adcb
and
out
loop
mov
out
insl
sbb
jno
push
repz
mov
pop
mov
cs
mov
fidivl
in
xchg
cltd
xor
das
sbb
inc
sub
cs
add
pop
hlt
cmp
bound
mov
and
sub
shll
mov
push
mov
jnp
jp
pop
dec
cmpsb
dec
mov
cmp
or
cmpsb
xchg
test
int3
xor
lret
fsubrl
enter
cmpsb
cmc
xor
fucomip
mov
pop
or
adc
jle
enter
ss
faddl
sub
push
out
jno
mov
pop
pop
inc
push
add
push
std
hlt
hlt
mov
sbb
inc
andb
mov
fbld
dec
mov
pop
aas
or
xchg
adc
inc
sub
push
jg
jecxz
adc
loop
icebp
test
in
call
imul
push
or
pop
xor
lea
dec
iret
fisttps
out
mov
nopl
and
fildl
daa
test
sub
test
jbe
cmc
add
es
and
cs
xchg
dec
idivb
adc
add
and
push
stc
cmp
pusha
fwait
mov
pushl
or
push
mov
cmpsl
test
adc
out
jne
ficoms
incb
push
mov
dec
jg
or
pop
jp
cmpsb
pop
mulb
and
push
push
inc
jo
inc
adc
movb
sbb
jl
xchg
jbe
stos
cmc
outsb
pop
push
and
jo
rorl
imul
and
jae
sub
add
cmp
sbb
pop
inc
in
repz
dec
add
inc
cmp
int
lret
jmp
int3
cmp
les
or
sub
push
mov
mov
push
push
faddl
mov
pushf
adc
push
add
adc
movsb
or
sbb
aas
fldl2e
test
xor
push
aas
popa
add
sbb
xchg
in
test
popf
adc
aad
testb
jne
fucomip
or
pop
sbbl
sahf
jl
out
bound
mov
ljmp
or
jns
jge
and
aas
push
pop
aad
mov
fists
add
inc
stos
jge,pt
lds
mov
mov
add
mov
sbb
dec
xchg
jnp
push
mov
xchg
out
mov
cmp
inc
scas
cld
and
sbb
cmp
frstor
mov
in
jmp
xor
pusha
cmpsb
sarl
loop
mov
cmpsl
inc
mov
pop
jecxz
cmp
mov
mov
jo
aam
pop
push
jg
imul
ds
mov
xchg
repnz
sahf
imul
cmp
or
xor
xor
clc
in
stos
leave
mov
je
jb
adc
daa
sub
out
movsl
push
dec
imul
cmp
push
sti
xor
xor
mov
pop
cli
xchg
or
addl
mov
in
cmp
adc
inc
lods
cmc
lret
mov
or
xchg
xchg
cmp
mov
pop
add
and
imul
imul
lds
in
cmpb
mov
add
fwait
cli
cmpb
mov
push
mov
xchg
lcall
mov
mov
mov
or
mov
jnp
out
aaa
lock
and
push
and
xchg
pushf
cmp
mov
loop
pop
jns
pusha
inc
or
mov
xor
ja
roll
xchg
cmpsb
testl
sub
shl
in
jnp
mov
and
xchg
inc
jge
mov
sti
and
lcall
xchg
adc
cs
ss
xchg
sbb
jno
adc
jmp
or
jg
push
mov
insl
into
ret
mov
jmp
adc
add
sub
lahf
sub
jg
mov
pop
mov
fcmovne
sub
xchg
and
sub
adc
lret
arpl
adc
fistpll
lret
jmp
jno
jne
inc
dec
les
or
dec
mov
mov
sub
xchg
arpl
jbe
in
fadd
dec
jbe
ja
arpl
push
insl
jb
mov
rolb
sbb
dec
iret
sbb
adc
pop
jnp
xchg
scas
jo
pop
dec
cld
xor
mov
icebp
sub
mov
ror
fcompl
xchg
xchg
dec
fcmovnbe
ja
xor
mov
push
sahf
or
psraw
xchg
jb
xchg
stos
iret
mov
movsl
fwait
xor
lods
pop
xchg
dec
pop
dec
cli
mov
popf
data16
pop
addl
cmc
mov
imul
mov
sub
mov
ja
negb
loope
inc
in
push
and
and
jbe
xchg
inc
lcall
int3
addr16
dec
adc
insb
fwait
jecxz
cmp
in
ret
stos
inc
ds
push
pop
mov
mov
scas
pushf
cmc
xchg
mull
outsl
lds
push
ja
cmp
mov
loop
mov
push
push
xor
rolb
iret
ret
rcrb
pop
hlt
push
adc
rclb
cmp
cmp
lret
add
cmp
daa
ds
icebp
adcb
add
jae
aaa
in
stos
jno,pn
push
xor
mov
daa
mov
jecxz
daa
pop
out
or
jp
lret
jnp
clc
stc
rorb
mov
sub
lret
push
and
out
lods
mov
or
in
fcomps
jns
iret
and
insl
pop
ret
lock
pusha
scas
lock
adcl
sahf
mov
sbb
jle
insb
inc
ret
cmp
xchg
inc
mov
mov
push
jp
loopne
jbe
stos
divl
loope
fisttps
xor
out
adc
mov
lods
inc
xchg
dec
jo
imul
ljmp
inc
out
jbe
push
aam
fsubl
retw
cmp
sti
aam
mov
sbbl
and
mov
mov
jns
push
mov
xor
call
mov
lret
xor
fbstp
adc
xchg
sub
lret
cwtl
dec
inc
and
insb
es
xor
fstl
leave
xchg
repz
stos
jbe
fdivl
insb
stc
add
icebp
adc
adc
sbb
movsb
gs
rcrl
addb
in
cwtl
es
aam
mov
push
shr
or
js
repz
fists
sub
push
in
sub
xchg
cs
dec
push
sbbl
mov
out
das
lock
in
pop
daa
movlhps
xchg
iret
scas
aam
bound
xor
mov
in
out
idivb
cmp
jmp
cmc
out
sbb
xchg
fucomi
adc
push
clc
cmpsl
push
testl
scas
push
insl
scas
mov
aaa
push
push
in
and
push
push
icebp
lock
mov
pop
or
fldenv
mov
push
cmp
orl
sti
adc
aad
lahf
jb
in
inc
cmc
sub
cmp
shrl
and
sarl
dec
fisubrs
leave
inc
xor
scas
cmp
jae
pop
push
pop
loop
cmp
dec
ljmp
push
jmp
nop
dec
mov
inc
adc
aam
pop
mov
mov
call
loop
and
lods
cmp
cmp
adc
mov
cli
mov
test
xchg
add
push
inc
fistpl
mov
popf
sub
rorb
stc
sar
mov
push
repz
xchg
jo
addl
xor
mov
addr16
xor
cltd
fwait
jmp
xchg
dec
xchg
mov
daa
cmpsb
imul
inc
jo
in
xor
mov
mov
dec
inc
pop
inc
xor
ljmp
jb
mov
je
mov
jb
mov
fnstsw
inc
shlb
jg
fcompl
push
icebp
or
jns
dec
fwait
popf
sub
sub
jle
shrl
inc
jle
leave
jno
fwait
cwtl
pop
push
daa
femms
fildll
jo
lock
loope
jg
sub
push
jg
out
js
enter
je
rol
pop
les
pop
push
xlat
jns
sub
in
mov
mov
sti
lea
jl
pop
add
jo
xor
jo
sbb
lcall
dec
scas
dec
in
orb
and
and
sbb
bound
jnp
das
mov
add
mov
and
cli
leave
addr16
rolb
jl
push
or
out
cltd
ret
jnp
aaa
nop
orb
imul
insb
lea
in
insl
push
or
inc
mov
test
xlat
lahf
jo
dec
in
fs
test
mov
cs
mov
cmpsl
out
inc
push
outsl
add
sub
stc
xchg
cltd
std
fists
jo
adcb
enter
fs
imul
daa
cmp
xchg
fisttps
mov
push
lods
call
ds
fndisi(8087
in
rcll
outsl
ret
outsl
loope
in
xchg
sub
xor
sarl
daa
push
xchg
sub
lods
sub
aad
xchg
rclb
and
and
lea
mov
cmp
sbb
movsb
stc
jp
outsl
push
mov
lret
inc
mov
enter
pop
data16
pushf
lock
jns
xchg
pusha
outsl
mov
insl
lret
lea
lds
lret
insl
sbb
pushf
xor
dec
inc
pop
fmull
fs
jg
pop
insb
loop
hlt
lds
add
nop
aad
xchg
aam
lcall
push
stos
xor
or
loopne
lods
aas
cmc
leave
add
xor
ret
or
in
pushf
xchg
mov
jge
pop
fldcw
mov
mov
shll
inc
cmpsl
inc
adc
add
adc
pop
or
gs
cmp
popa
hlt
mov
xchg
pop
adc
pop
aas
cltd
std
test
sbb
jns
dec
mov
add
repnz
sahf
and
cmpsb
adc
inc
xchg
fs
shrb
insl
mov
jl
push
lds
int
mov
stos
xor
fwait
adc
test
insb
jns
mov
inc
mov
inc
aas
cmp
adc
sbb
lods
lods
lahf
ss
int3
or
in
push
push
fldl
sbb
mov
xchg
cld
sbb
incb
mov
adc
jne
mov
push
xchg
push
fdivr
dec
movsb
std
pop
shlb
pop
jae
xchg
xchg
outsb
insl
ret
add
pop
sbb
and
lcall
pushf
and
dec
mov
ljmp
insl
scas
push
add
dec
mov
jecxz
or
orl
fwait
inc
insl
mov
or
inc
cs
xchg
stc
pop
pop
mov
inc
and
decl
push
ss
pop
mov
rol
addb
lods
ds
loope
pop
inc
jl
add
cmp
jnp
jge
xchg
pop
xchg
xchg
add
arpl
and
mov
mov
stos
xor
pop
mov
insb
add
sbb
dec
jle
pop
imul
sbb
les
cmp
pop
cld
adc
mov
push
sub
and
xchg
rcll
and
or
cld
push
jb
pop
popa
push
negl
mov
pop
movb
cmp
cmpxchg
mov
les
mov
fcmove
push
mov
sub
and
mov
insb
push
jmp
out
into
fwait
inc
ficompl
mov
sub
xor
xor
jg
shrb
insb
lret
xlat
mov
push
push
dec
push
std
mov
pushf
mov
or
mov
hlt
sbb
dec
clc
adc
ds
loopne
pop
mov
sub
pop
mov
imul
inc
xchg
jae
jecxz
fisubl
mov
xor
mov
push
xchg
sti
cmp
and
jb
mov
insb
pop
in
cmpsl
les
mov
mov
cld
cmpsb
dec
in
cmpsl
lahf
frstor
scas
lahf
lds
adc
gs
sub
pop
dec
aas
adc
cli
mov
sbb
addl
loop
sbb
sbb
add
imul
cmp
rolb
xchg
push
mov
leave
push
mov
sbb
outsl
pop
out
mov
push
xchg
mov
daa
pop
mov
sbb
ror
cld
mov
sub
loop
mov
jle
leave
pop
lea
add
bnd
mov
push
cmp
sbb
xchg
roll
fbld
sbb
sbb
pop
ja
ret
or
bound
and
aam
xchg
xchg
mov
mov
cmp
mov
les
pop
outsb
pop
mov
sbb
mov
negb
adc
inc
cmp
in
notl
mov
dec
je
cmc
xchg
por
push
arpl
sub
sar
inc
pop
ljmp
adc
in
call
adc
cmp
xchg
insb
lret
inc
jo
add
mov
jbe
enter
mov
aam
in
pop
loopne
inc
inc
add
jnp
cmp
lea
xchg
bound
cmpsb
cld
mov
sub
mov
lods
inc
iret
iret
adc
shll
clc
std
xchg
addr16
xor
bound
and
loope
cmpsb
arpl
sbb
push
fcoms
call
xchg
notb
adc
popf
push
stc
stos
and
negl
or
lods
fcomps
cmc
test
repnz
pop
lahf
sbb
xchg
bound
xchg
aad
lret
xlat
hlt
and
clc
push
push
xor
pusha
daa
cmp
orb
into
mov
dec
sub
popa
pop
push
bound
outsl
jb
xchg
jnp
xchg
arpl
or
fidivrs
jb
aad
stos
xor
lcall
mov
mov
shrb
ss
push
inc
hlt
inc
mov
aaa
fwait
pusha
lock
pop
push
add
inc
mov
pop
aaa
cmp
fisubl
fisttps
pop
stc
lds
in
lea
adc
loopne
outsl
insl
fstenv
in
mov
call
push
fiadds
daa
int3
jle
xchg
dec
mov
fldcw
sub
jecxz
pop
aam
add
inc
pop
adc
xchg
or
push
popa
xlat
shrb
mov
test
ret
cmpsl
int3
jae
fnstcw
addr16
fs
into
xchg
inc
stos
insb
mov
push
inc
xchg
cmpsl
mov
add
mov
mov
scas
mov
pushf
scas
popf
cltd
pcmpgtb
lods
js
ret
pop
in
sbb
jmp
in
rcrb
adc
inc
stos
idivb
out
cmp
xchg
aam
je
test
in
add
addb
lret
sbb
mov
divb
adc
fwait
lcall
xchg
cmp
mov
or
bound
ficompl
popa
mov
mov
xchg
mov
cmpsl
xor
adc
cld
sub
xchg
movsb
push
pop
add
sub
mov
fsubrp
repz
mov
mov
mov
bound
or
test
push
loope
and
lret
cmp
and
ret
xor
dec
inc
imul
loop
jns
add
inc
cmp
jbe
mov
cld
cmp
pop
jp
sbb
adc
lahf
xchg
mov
jle
pop
jg
pop
scas
adc
mov
adcb
inc
loope
into
mov
and
rorl
mov
push
push
popf
enter
pop
sbb
push
cmc
call
cmp
shl
ret
aad
loope
mov
mov
loopne
dec
icebp
loop
xor
in
push
test
pushf
popf
mov
xor
push
push
pop
xor
insl
push
in
nop
lcall
mov
dec
into
add
xchg
push
in
push
stos
es
lea
cmp
iret
cli
lods
sbb
xchg
mov
outsl
pop
loop
mov
mov
cltd
bound
cmpsl
or
mov
shlb
lahf
insl
adc
loopne
push
jl
test
cltd
adc
ret
repnz
dec
jne
addr16
cmc
std
leave
jmp
mov
fs
mov
pop
and
and
xchg
stos
and
lock
and
cmp
sbb
mov
test
mov
and
dec
xor
pop
fsubrs
stos
lea
lcall
and
mov
inc
data16
push
adc
in
movsl
xchg
cmp
jl
jne
int
mov
bound
std
xlat
push
int3
clc
inc
jb
rcr
lret
test
icebp
mov
mov
ljmp
pop
sbb
mov
mov
mov
popf
aas
inc
das
sahf
mov
sbb
outsl
push
mov
pop
je
in
popa
mov
ja
lods
mov
pop
and
ljmp
push
mov
cmpsl
arpl
add
shrl
fisubrs
dec
hlt
cli
js
cmp
xchg
xchg
dec
sbbb
test
repnz
mov
rcrb
aaa
test
sahf
imul
sub
push
test
xchg
rol
sub
pop
sahf
adc
add
mov
rcrb
xor
dec
adc
ljmp
loopne
jb,pn
pop
fnstsw
jbe
sbb
or
jmp
aaa
in
mov
sub
call
or
push
cmp
ss
inc
cld
pushf
sub
add
sti
push
jge
fcomps
ja
cmp
ss
leave
or
repz
lods
pop
jge
cltd
or
movsl
push
mov
mov
call
aaa
pusha
loope
inc
mov
sbb
and
sbb
int
xor
test
push
xor
add
push
push
cmp
repnz
and
add
imul
mov
sub
mov
inc
jns
test
add
rcr
add
push
enter
lret
xlat
fwait
loopne
adc
mov
xor
mov
mov
stc
jnp
lret
stos
xor
mov
jl
negl
out
icebp
aas
cmp
push
sbb
jne
fnstenv
fisttps
mov
aaa
xor
call
std
mov
push
popl
push
mov
popa
call
add
ds
mov
pop
push
xchg
add
out
out
jb
notb
or
in
dec
in
and
or
pushf
xor
stc
push
xor
aad
pusha
mov
push
inc
lret
lret
imul
sbbb
sbb
xchg
sbbb
flds
fsubrl
insl
loopne
cld
std
bound
cmp
dec
jne
jle
inc
xor
pop
adcl
lret
idivl
jnp
dec
xor
mov
pop
insb
inc
mov
lods
add
dec
add
das
jb
push
fbld
pop
addr16
arpl
jl
enter
xor
push
sub
jne
adc
cmpsb
push
mov
shl
mov
lahf
mov
pop
cmp
jnp
mov
stc
xor
sub
inc
sub
fsubl
repz
movsb
pop
jle
pop
pop
xor
or
js
in
push
adc
scas
jo
jp
out
loopne
cmp
call
xorb
xchg
mov
int3
lret
pop
fsubrl
adc
push
sbb
inc
loope
mov
std
pusha
pop
idivb
fstpt
jb
in
sbb
xchg
mov
popf
mov
popf
bound
ffree
inc
and
and
or
pop
hlt
test
cmpsl
add
shlb
sub
jae
or
test
xchg
in
popa
loopne
mov
push
pushf
xorl
ljmp
xchg
insl
pop
cmp
lea
addr16
mov
clc
mov
scas
xor
inc
scas
jecxz
ss
ficoml
sub
das
fdivrs
rorb
xor
adc
or
pushf
outsl
push
cmp
sbb
adc
sub
leave
mov
test
bound
jno
or
test
jne
push
pop
inc
mov
mov
xchg
mov
movsl
jmp
icebp
aaa
fidivrl
cmc
sbb
std
xchg
mov
hlt
cmpsl
push
leave
jb
test
pop
sbb
int
in
cmpsb
push
mov
bnd
pop
jbe
sarb
inc
cmp
stos
out
xchg
pop
cmp
hlt
jp
data16
lods
enter
pop
inc
inc
push
jnp
bswap
xor
mov
xchg
add
dec
cmp
sub
jo
push
xchg
fists
inc
sub
dec
rcl
sbb
cmp
sub
cmc
pop
popa
inc
xor
push
out
push
mov
and
or
sub
adc
lods
cli
mov
lcall
sub
mov
pop
mov
push
mov
add
hlt
cmp
xchg
or
inc
adc
idivb
sti
js
jno
inc
xchg
push
cmp
leave
pop
stc
mov
jb
loope
arpl
ja
jecxz
push
mov
adc
stc
mov
mov
xchg
add
test
insl
inc
in
pusha
test
push
pop
in
dec
adc
repz
icebp
js
cmp
in
jo
fimull
mov
sbbb
dec
mov
out
clc
push
jecxz
inc
out
gs
jle
lcall
push
lahf
in
popf
shr
mov
xchg
sub
sub
push
nop
push
xor
adc
out
aad
pop
xlat
jecxz
pop
mov
adc
imul
and
ja
in
and
sbb
or
mov
cmp
and
fwait
mov
inc
mov
fisubrs
lcall
jmp
add
jno
add
and
jmp
pop
cmp
fstl
fistpl
push
clc
cmpb
lock
les
aad
mov
aam
and
xchg
imul
jecxz
repz
mov
pop
dec
call
mov
daa
jnp
lahf
inc
jne
mov
mov
mov
adc
aam
push
add
sub
aaa
stc
xchg
jns
push
loope
bound
inc
ret
js
jbe
ss
or
xor
or
pop
shr
mov
fsubrl
sub
add
mov
pop
lock
or
dec
push
rcrb
shrb
je
xchg
sub
sub
ja
cmpsb
lods
scas
jne
jnp
sahf
ret
inc
xor
sarl
fcoml
jno
adc
jp
add
jmp
or
push
or
sahf
mov
or
int
mov
push
aad
lods
fidivrl
pop
repnz
push
loopne
xchg
xchg
sub
xchg
pusha
add
fmulp
sbb
xor
dec
out
cmp
mov
lods
call
lcall
loop
lcall
sbb
jo
sub
sub
xchg
pop
add
sbb
cmc
movsl
stos
ret
add
xor
orb
test
mov
dec
mov
fwait
lods
popf
inc
out
call
push
or
shll
insb
aas
data16
xchg
js
test
xchg
jg
xchg
inc
fwait
ss
inc
jbe
cmpsb
xchg
mov
loop
pop
adc
scas
lret
ss
sbb
iret
cmpsl
les
in
fsub
mov
push
ljmp
mov
iret
or
xchg
lea
mov
cmp
cmp
sub
pop
aam
xor
pop
mov
sbbl
bound
pop
subb
sub
int3
iret
mov
test
xchg
sub
cmpsb
and
int3
sub
lock
mov
push
test
rcrb
imul
sbb
xchg
mov
jmp
push
pop
mov
ja
movsb
mov
xor
lods
les
repz
loop
insl
mov
push
ds
ljmp
jp
test
push
and
lret
jge
sbb
std
out
and
jno
outsl
fbstp
sub
stos
xor
dec
add
cld
cltd
shlb
cld
dec
pop
mov
mov
les
ret
sti
sub
or
fimull
fsubrs
insb
mov
adc
cmp
mov
sub
cmp
pop
xchg
and
sbb
adc
mov
nop
popf
dec
jnp
andl
test
and
ret
pop
pop
dec
sbbb
shlb
cli
jnp
ljmp
inc
xor
fisubs
dec
addr16
cmp
cmpsl
jo
int
dec
sbb
mov
stc
jl
pop
ljmp
push
test
imul
pop
outsl
inc
sbbl
push
jae
outsl
sahf
jge
xchg
push
add
notb
cwtl
popf
fsts
mov
lods
je
xchg
cmp
cli
mov
dec
push
jae
je
jge
jg
in
or
inc
repz
movsl
out
pop
push
lcall
inc
jmp
cmp
push
pop
push
adc
jg
or
jns
inc
mov
pusha
adc
clc
sbb
fsubrl
and
jge
das
pop
in
inc
out
jb
aad
push
aas
mov
dec
pop
jo
lcall
push
js
jmp
sahf
mov
movsl
cmp
mov
scas
xor
mov
in
inc
mov
cmp
pop
inc
divl
push
sub
push
cmp
sbb
sbb
sub
mov
cmp
push
or
push
push
or
pop
or
icebp
popa
les
out
test
xchg
fdivrl
pop
movsl
dec
enter
sub
lock
inc
outsl
push
mov
mov
popa
xchg
xchg
xlat
ds
cmp
aam
call
mov
subb
out
lds
insl
mov
sbb
roll
mov
dec
js
call
push
xchg
or
jo
fsubs
push
repnz
icebp
daa
imul
or
daa
out
in
lret
lcall
scas
insl
ret
jmp
push
mov
out
adc
or
scas
cmc
sbb
sub
aad
fsts
mov
or
push
mov
mov
sub
orb
pop
into
mov
mov
repnz
push
pop
ror
mov
out
in
subl
nop
sbb
dec
jnp
push
cmp
xchg
out
pushf
push
lret
rolb
mull
fs
xchg
in
test
test
jns
sub
ret
mov
sub
leave
mov
or
mov
add
and
into
gs
jg
push
lds
mov
out
ret
in
ss
xchg
daa
mov
xor
pop
lock
incb
mov
in
add
lret
pop
ret
mov
sbb
push
and
fidivrl
dec
jecxz
cli
fwait
xchg
loope
gs
cmp
ret
int
les
jbe
cmp
repnz
add
xchg
or
fcmovnbe
icebp
in
pop
fstl
push
dec
mov
aad
cmpsb
push
es
iret
xor
mov
dec
mov
xor
fdivr
sub
repz
popa
jl
sbb
test
std
imull
pop
iret
cmc
or
ja
xchg
cmp
or
nop
cmp
or
aam
and
mov
xchg
sbb
fnstsw
call
xlat
imul
adc
add
iret
xchg
or
dec
cmp
pop
insl
mov
je
cltd
sbb
and
stos
dec
lahf
fildl
sub
popa
pop
xor
fs
pop
xchg
xchg
sbb
jb
push
push
inc
mov
or
fildll
jge
jo
pop
stc
dec
aam
pop
es
mov
aaa
and
imul
cmpsb
xor
sbb
mov
jbe
lods
cmp
ss
xor
sbb
out
inc
xchg
or
push
loop
in
jl
cmpsl
inc
push
dec
xor
loop
jns
mov
aaa
sar
lods
inc
sbb
push
ljmp
mul
cmp
pop
loopne
mov
pop
inc
push
in
pop
mov
adc
imul
xchg
jg
imul
jecxz
mov
cwtl
popa
mov
fldcw
into
in
push
daa
pop
cmp
jae
gs
inc
rol
fwait
push
xchg
pop
sbb
leave
mov
jno
pop
out
dec
jo
ljmp
arpl
or
jns
sub
ss
xor
mov
int3
loop
xor
mov
and
mov
xadd
xchg
arpl
adc
mov
mov
cmp
push
pop
fisttps
mov
dec
adcb
push
aas
lods
jp
popa
lods
add
outsb
repz
jns,pn
cmpsb
cs
jecxz
mov
sbb
and
rorb
pushf
jge
clc
adc
mov
adc
inc
hlt
notb
xchg
lret
mov
and
rolb
xchg
lret
xchg
loop
xor
jmp
add
inc
mov
insb
mov
push
adc
test
and
mov
or
and
xchg
jl
and
sbb
xchg
pop
aad
mov
pushf
cmpsb
stc
cmp
std
jb
xor
divb
fiadds
je
shll
mov
mov
cmp
subl
imul
add
push
aas
cmpsb
ljmp
test
testb
sbb
sbb
jbe
cli
imul
mov
orl
inc
pop
stc
mov
and
das
dec
jl
fwait
dec
inc
and
loopne
into
xchg
mov
cmp
leave
mov
push
xchg
cld
inc
mov
fnstsw
jl
gs
pushf
hlt
and
jbe
dec
sarb
xchg
push
fnstenv
popa
sbb
loope
int
stos
jbe
lods
jo
out
sub
mov
adc
loop
mov
hlt
inc
sub
inc
pop
xchg
dec
push
xchg
aam
iret
push
data16
cmp
arpl
loop
cli
shl
push
or
arpl
in
and
xchg
push
cmp
fmul
mov
adc
inc
push
mov
ds
mov
fwait
sub
nop
pusha
rolb
lahf
sarb
sbbb
jp
arpl
imulb
mov
cltd
mov
mov
mov
stc
repz
lret
call
in
movl
add
push
push
aaa
scas
dec
sub
sub
shr
push
hlt
aas
jbe
pushf
nop
mov
mov
xor
scas
xchg
lret
in
xor
push
sbb
push
xor
shl
aaa
outsb
fdivs
mov
lds
hlt
adc
xchg
mov
out
jl
sbb
xchg
je
adc
and
test
jmp
ja
scas
js
mov
fildl
stc
mov
rclb
inc
xor
pop
out
in
adc
les
in
fs
mov
add
sbb
sub
sbb
jmp
hlt
pop
fcompl
leave
out
gs
rolb
aaa
fwait
mov
cmpsl
lret
lds
push
sbb
push
inc
jo
adc
jp
mov
or
mov
inc
cmp
sahf
jns
out
xchg
iret
jl
sbbl
jb
cmpsl
mov
iret
adc
mov
jg
pop
stos
lds
out
mov
sti
mov
mov
pop
ds
jl
into
dec
dec
adc
dec
outsl
adc
iret
mov
xor
cmp
xlat
push
push
jb
arpl
dec
ret
xchg
jl
jecxz
jge
pop
pop
test
insl
lea
mov
jl
push
mov
popa
add
ss
je
dec
pop
into
cmp
pop
push
push
into
mov
scas
jbe
shrl
int
les
jbe
cmp
int3
loopne
daa
aad
cmpsl
mov
mov
push
into
dec
cltd
mov
popa
pop
daa
push
mov
in
sbb
add
mov
outsb
mov
sbbb
add
inc
test
dec
adc
sbb
pop
fldt
out
cmc
int3
jb
iret
jmp
sbb
nop
je
int
xor
pop
pop
ja
ljmp
or
cmp
jge
addl
cli
daa
pop
mov
pop
das
mov
loopne
icebp
mov
jnp
inc
ret
pop
into
and
outsb
icebp
scas
pop
cwtl
repnz
je
add
imul
pop
xor
rorb
inc
mov
inc
and
dec
push
push
sub
xchg
pop
cmp
push
fbstp
cmpsb
test
sbb
fs
icebp
rcll
fadd
adc
test
ss
mov
lods
addr16
fisttps
stc
add
pop
insb
inc
mov
nop
sbbb
stos
or
xchg
repnz
shrl
fidivl
dec
jmp
stc
nop
xchg
sub
xor
sub
dec
inc
mov
cmpsl
jge
cmp
mov
int3
insb
inc
loop
loopne
enter
cli
lea
inc
out
cmpsl
sub
cwtl
ret
call
adc
shll
into
pop
inc
mov
sub
pop
jnp
jnp
in
inc
xchg
jno
jl
pop
xchg
push
sub
rol
mov
fbstp
adc
in
and
mov
mov
loopne
sti
jl
mov
ljmp
xorl
xchg
bound
pop
pop
sbb
pusha
pop
mov
mov
cmp
jp
mov
test
sub
scas
call
jae
jne
arpl
sbb
sub
notl
hlt
mov
mov
movsb
pop
xchg
lods
mov
mov
push
inc
stos
or
cmpsl
sti
lods
adc
sub
adc
xor
xor
insb
shrb
adc
in
mov
inc
xchg
xchg
dec
sub
pop
jge
popf
hlt
push
jnp
lods
or
xor
cmp
shl
jmp
cwtl
adc
cld
pop
pop
es
aad
or
jae
or
inc
cli
filds
movsb
mov
dec
and
jne
loope
jno
incl
inc
lret
dec
jl
push
aas
mov
ret
push
mov
andl
fidivl
dec
xchg
lds
cmp
jmp
lods
lods
mov
mov
lahf
jp
xor
mov
add
dec
and
lock
ss
arpl
mov
pop
dec
and
jae
mov
sbb
mov
add
cmp
sub
or
out
sti
sub
lods
loopne
repz
test
cltd
xchg
push
stos
jae
clc
shll
xchg
add
dec
ljmp
push
in
mov
rolb
cld
das
mul
lds
fs
sahf
pop
mov
jns
ds
push
pop
cmc
ret
test
xchg
cmpb
into
testl
mov
adc
xor
lea
inc
or
in
xchg
popf
xchg
cwtl
dec
fwait
fs
sahf
xor
test
or
and
mov
mov
pusha
jae
fwait
sub
sbb
mov
movsb
imul
xchg
scas
mov
pop
sbb
fisttpl
xor
andb
sub
mov
scas
sbb
data16
jnp
movsl
dec
arpl
addr16
add
shll
add
or
lock
push
push
or
andl
adc
lcall
fs
into
sub
sbb
mov
sub
pushf
push
xchg
test
jnp
ss
and
les
aad
sub
fwait
outsl
lahf
inc
hlt
sti
mov
cmc
sbb
cwtl
jg,pt
and
pop
repnz
ret
test
sbb
or
clc
mov
sbb
out
cmpl
lahf
shlb
mov
push
mov
test
xor
sbb
pop
cli
sbb
imul
lods
mov
dec
enter
clc
aas
push
sbbl
pop
mov
cli
dec
mov
mov
movsl
xchg
mov
mov
xchg
pop
inc
or
pusha
aas
mov
sub
sahf
lods
pop
arpl
cmp
rorb
ja
das
shrb
test
jle
ss
pushf
fadd
sbb
mov
pop
mov
mov
sbb
xchg
popf
sbb
or
jnp
cmp
mov
es
mov
test
jbe
ss
adc
mov
repz
test
xchg
xchg
mov
dec
lret
adc
lret
imul
daa
push
sbb
stos
sub
dec
hlt
leave
fstp
cli
cmpsl
and
pop
ret
je
sbb
jns
in
pushf
mov
pop
cmpsl
int
push
cmp
insl
addr16
mov
insb
mov
fldl
mov
sub
add
xchg
pusha
xchg
xchg
push
sbb
aam
add
cmp
pushfw
leave
es
adc
das
loop
lahf
fs
xchg
insb
popa
jb
xchg
fnstsw
loop
or
in
jp
pop
push
gs
scas
aam
fcompl
push
jb
sub
push
xor
pushf
add
loope
shrb
adc
mov
mov
xchg
adc
test
sub
cmp
add
xlat
in
or
stos
add
enter
sbb
test
icebp
mov
push
or
js
out
dec
mov
in
xchg
sbb
in
stos
sbb
xor
arpl
lcall
cli
nop
mov
iret
gs
xchg
rcll
aas
mov
sbb
pop
enter
mov
into
fwait
xchg
xchg
pop
push
sub
cmp
mov
dec
ret
mov
push
push
ss
cmpsb
lahf
test
fisubl
test
inc
xchg
lcall
mov
fidivl
lds
call
inc
pop
lret
lahf
fildll
cmpl
mov
xchg
push
mov
adc
sti
add
addr16
xorl
mov
andb
ja
push
xlat
mov
arpl
jae
xchg
aaa
push
outsb
pop
xchg
xlat
fidivl
call
mov
push
mov
and
xchg
test
jns
adc
xchg
xor
mov
cmpsl
push
ss
lock
ja
jl
push
inc
inc
adc
std
dec
jl
cmp
aad
cld
repz
adc
pop
mov
jb
inc
and
daa
scas
sub
inc
in
mov
and
fistps
jnp
sti
jmp
mov
xchg
xchg
adc
xor
xchg
inc
in
sub
xchg
or
mov
insb
shrb
ss
push
ljmp
iret
pop
push
add
sub
adc
add
repnz
adc
outsb
scas
xchg
es
repz
bswap
sti
mov
enter
adc
lcall
or
test
int3
and
fld
enter
ror
ljmp
mov
fistps
add
or
push
ds
pop
int
mov
outsl
xor
loopne
lret
mov
mov
xchg
sub
sbb
mov
mov
mov
adc
xor
lcall
sahf
xchg
jb
sbb
sbb
jae
adcl
push
inc
mov
push
mov
cmp
loope
or
jge
mov
inc
mov
jb
aad
sbb
pop
mov
jo
add
pusha
cmp
iret
push
popf
lods
adc
push
loop
xor
dec
std
into
sub
mov
mov
fsubr
lahf
aad
popf
xchg
mov
mov
add
aad
sub
pop
jne
push
mov
mov
sub
jne
mov
add
hlt
int
addl
ret
pop
mov
addb
rol
push
cmpl
test
and
inc
loop
and
fisttpll
pop
mov
mov
sub
in
cmp
sub
jb
mov
fldl
shll
jge
les
and
out
inc
xchg
setbe
dec
fidivrl
and
or
popa
xchg
add
fcoms
mov
mov
gs
data16
xchg
shlb
add
movb
mov
rcl
stos
loopne
and
push
lret
mov
xchg
jg
xor
icebp
ljmp
mov
arpl
xchg
clc
push
mov
inc
loop
jecxz
cmpsb
mov
xlat
jecxz
mov
mov
and
loop
aad
stos
jle
sub
push
xchg
and
nop
addw
fsub
jl
popf
push
lea
push
mov
lcall
das
sub
mov
fists
int3
sahf
mov
out
jmp
xlat
sti
icebp
inc
fsubl
or
dec
xchg
pusha
dec
mov
fnstcw
loopne
aaa
lods
pushf
xchg
sahf
and
icebp
in
add
lods
dec
in
xchg
out
jecxz
cld
mov
nop
jno
sti
popl
sti
stos
adc
mulb
ret
push
outsl
test
mov
loopne
ret
xor
int
mov
xlat
jmp
les
mov
sub
push
xor
lods
sbb
leave
push
bound
mov
scas
push
mov
xchg
adcb
fucomp
inc
sbb
mov
scas
xor
das
xlat
jmp
jle
push
and
inc
and
popa
sbb
inc
adc
jmp
pop
or
pop
push
imul
sub
add
jl
movsl
lret
push
cmpsb
dec
push
pop
hlt
insb
push
mov
es
push
jp
adc
sarl
dec
ljmp
ss
aam
pop
or
leave
xchg
adc
push
push
sbb
in
std
dec
dec
fistps
outsb
lea
ja
repz
jns
mov
and
jp
jl
in
gs
xchg
icebp
mov
cmp
scas
ja
shrl
sbb
xchg
outsl
cltd
in
movsl
dec
xchg
aad
dec
pop
cmp
sahf
xlat
ja
xor
adc
es
sti
rclb
mov
xor
dec
xchg
add
inc
xchg
jbe
data16
xor
dec
mov
aaa
stos
ret
das
inc
clc
mov
iret
jo
sbb
cmp
sub
insl
mov
nop
xchg
push
mov
push
js
xchg
and
in
call
call
push
ljmp
inc
fcoms
dec
aad
push
and
add
lcall
cmp
mov
out
ds
or
arpl
cwtl
add
dec
xchg
mov
dec
int
sar
ljmp
adc
mov
pop
popf
mov
adc
add
mov
addr16
or
andl
adc
xor
adc
aaa
fisttps
jno
xchg
jns
sahf
in
cmc
or
leave
pop
enter
adc
mov
mov
ljmp
int3
pusha
outsb
mov
lods
pop
jae
out
ja
cmp
dec
gs
add
push
sub
or
sub
sbb
clc
mov
test
outsb
adc
dec
mov
mov
ss
stos
in
outsl
ret
push
xor
dec
fimuls
lods
cmp
cmp
repnz
jb
xchg
fadds
ja
cmp
stos
inc
adc
ffreep
aam
fs
rclb
popf
inc
adc
pushf
int3
les
xchg
sbb
push
ljmp
push
negl
popf
in
call
orb
or
stos
lahf
or
icebp
movsl
jns
add
lock
or
in
lret
xor
test
fwait
jmp
sbb
cmpsl
jmp
sbb
push
sub
adc
pop
sub
test
lods
and
mov
mov
mov
mov
adc
adc
pop
jbe
jbe
add
cs
jg
dec
arpl
jb
cltd
lods
movsl
jl
jns
add
aas
cmp
divl
nop
pop
xchg
aaa
hlt
jmp
lret
or
rcl
sub
push
mov
sbb
adc
mov
jae
pop
js
subl
stos
xor
lcall
and
out
int
punpcklbw
sarb
dec
pop
pop
mov
outsl
adc
sbb
inc
int3
mov
test
mov
ljmp
outsl
cltd
dec
ret
pop
repz
js
fnsave
out
mov
fimuls
mov
push
jns
pop
inc
mov
scas
add
xor
add
mov
dec
lds
inc
cmc
in
jl
or
add
mov
es
mov
fnstsw
int3
xor
movsb
mov
lea
pop
add
aas
adc
adc
push
mov
enter
in
push
cld
pop
cmpsb
mov
lods
cltd
insl
jl
push
cmc
xchg
xor
pushf
orb
nop
pop
gs
pop
ds
sbb
js,pt
ja
xlat
push
ror
gs
push
mov
and
ret
cwtl
xor
pop
lds
add
adc
adc
repnz
xrstors
sti
push
test
adc
outsl
test
jns
fadds
fstl
test
aas
inc
jae
fmull
cmp
outsl
jmp
or
in
rclb
xor
push
cmpsb
sbb
lret
ftst
mov
std
jp
daa
test
je
cmpsl
mov
dec
cmp
and
jge
xchg
inc
pop
lret
pop
addr16
loope
icebp
or
xchg
les
loope
out
mov
adc
cmp
jns
jecxz
ret
cmp
roll
push
sti
movsl
inc
outsl
shl
sub
in
mov
pop
cmp
stos
pop
inc
sub
dec
pop
dec
add
pop
jbe
jo
cmp
adc
xchg
or
fdivr
sub
xlat
add
dec
ds
inc
mov
adc
xchg
stos
fwait
cmpl
mov
and
rorb
outsb
push
ror
repz
cmp
mov
mov
jae
adc
push
xor
sub
push
test
pop
mov
mov
cmp
sti
xor
inc
cltd
sub
ljmp
adc
icebp
inc
adc
jo
dec
cmovne
add
or
daa
push
leave
mov
call
aaa
test
inc
sub
lea
fists
mov
cld
gs
mov
mov
test
inc
push
add
xor
xchg
addr16
mov
lcall
test
fsub
sahf
inc
dec
and
inc
je
lret
jne
int3
loope
jge
sti
push
ds
int
add
lahf
out
hlt
jmp
xchg
cs
cmc
push
push
mov
xor
add
outsl
test
or
sub
test
mov
push
jp
xor
jbe
std
lret
push
jge
es
lds
popf
sub
in
rorl
fucomi
cmp
idiv
out
mov
xlat
data16
inc
mov
fnstcw
xor
fnstenv
fs
clc
ja
repz
or
mov
adc
lret
lret
rclb
outsl
dec
fwait
lock
adc
arpl
jnp
pop
imul
mov
jae
mov
gs
into
sbb
loopne
cmc
sahf
push
fsubr
xchg
daa
sbb
adc
mov
or
out
ja
mov
cltd
cmp
fldenv
fucomip
call
jns
mov
pusha
push
jle
and
std
stos
das
lea
mov
fildl
or
hlt
mov
mov
iret
jno
pop
shlb
ljmp
lret
sub
shr
rcr
mov
add
sub
jno
add
jne
filds
inc
fidivrl
aas
cli
push
mov
push
add
addr16
cmp
repnz
call
fiaddl
jg
mov
in
lea
leave
cmpsl
xchg
adc
mov
in
inc
or
popa
mov
and
out
or
mov
xchg
mov
std
inc
xor
jecxz
mov
sub
mov
mov
and
loop
out
xlat
rcll
inc
xor
pushf
inc
fbstp
xchg
jg
dec
lahf
cs
mov
es
push
mov
adc
test
add
and
cmp
cli
sub
inc
adc
sbb
jnp
add
out
or
inc
sbb
push
cmp
and
ror
push
test
mov
js
inc
push
sub
call
in
push
jb
int
inc
xor
and
shll
mov
mov
and
movl
jge
pop
mov
fdivrl
adc
push
jg
ljmp
cmp
in
xor
std
push
inc
test
or
subb
mov
xchg
mov
shl
rcrb
icebp
in
sub
inc
inc
push
mov
and
pop
fwait
loop
inc
jno
pusha
push
mov
fnstsw
dec
lds
or
xchg
es
and
ret
lods
sahf
jo
jle
sbb
sar
sub
pop
mov
or
dec
aam
in
jnp
fwait
out
jnp
push
movsb
push
jmp
inc
pop
add
imul
decl
xchg
cs
add
ss
push
jle
lcall
lea
subb
fistps
sub
mov
adcb
or
enter
fwait
push
xor
fisttps
add
imul
lea
push
ret
ljmp
adc
jno
jb
les
push
push
arpl
or
push
adc
aaa
movsb
add
shl
rol
in
test
push
fmuls
js
inc
ret
inc
sti
mov
jb
xor
adc
jb
cmp
cmp
faddl
pop
add
inc
test
mov
orb
cmp
icebp
inc
xchg
pop
inc
add
pop
jne
mov
mov
mov
mov
daa
pop
push
jmp
add
fs
xchg
cli
adc
adc
ja
push
ss
hlt
dec
fisttpll
mov
mov
pop
xchg
enter
outsl
push
adc
push
cmp
inc
subb
or
addr16
mov
xchg
pop
shll
cmpsl
push
lods
mov
mov
cmpsb
fwait
mov
outsb
mov
mov
jno
out
loope
mov
push
test
dec
fbstp
and
xor
cmpsb
std
ja
movsb
xchg
mov
nop
shrb
pop
mov
jae
pop
fmuls
ja
pop
icebp
push
dec
cmpsl
lahf
pop
sub
test
push
data16
leave
aas
lea
jo
mov
sbb
std
push
sub
les
mov
adc
rcrb
mov
sbb
lahf
test
inc
ds
inc
xor
leave
jae
pop
pop
sub
cmc
or
aam
pop
xchg
mov
scas
sub
je
dec
mov
out
pop
divl
cmp
cwtl
add
push
mov
fmull
fdiv
or
repz
push
mov
cwtl
inc
or
fildll
xchg
push
inc
mov
mov
and
ret
icebp
sub
jbe
mov
dec
btr
jecxz
shl
jb
mov
inc
inc
pop
lds
mov
pusha
les
test
pushf
das
add
jb
and
push
pop
mov
add
cmp
or
icebp
mov
pop
orb
mov
inc
jne
ret
icebp
addr16
lods
dec
dec
pusha
out
cmp
add
pop
mov
adc
inc
aaa
jmp
cmc
les
dec
mov
stos
call
nop
out
mov
mov
sbb
cmp
jecxz
ret
daa
loopne
mov
outsb
out
dec
push
jl
xchg
inc
fldenv
xor
mov
test
mov
cmc
cmp
push
fsubs
sub
sarb
dec
jle
insb
and
arpl
js
push
movsl
rcll
jecxz
ja
xchg
xchg
enter
dec
mov
pushf
pop
in
xchg
inc
and
ds
cld
int
xor
mov
out
inc
xchg
into
loopne
int
xlat
divb
push
xchg
adc
jbe
cmp
and
cmpsl
mov
or
repz
outsl
lahf
or
sub
inc
mov
sbb
lds
and
push
dec
fcoml
sub
repnz
push
sbb
cwtl
rolb
add
test
ja
cmc
arpl
out
jl
or
jge
jno
dec
or
sarl
das
mov
jge
inc
imul
jge
test
xchg
leave
mov
rorl
imul
mov
mov
mov
sbb
push
mov
push
jbe
mov
lahf
push
xor
loop
ja
in
xlat
push
dec
div
sarb
ret
sahf
loop
js
loopne
daa
flds
das
mov
inc
mov
notl
cld
fs
lods
sti
fmuls
mov
lcall
andb
lods
mov
jno
in
ret
les
add
cmp
mov
mov
or
sub
mov
pushf
adc
lret
int
add
mov
aaa
inc
and
jp
push
mov
and
js
cmp
aad
and
insl
cmc
sub
jp
pop
cmp
lahf
xchg
lods
mov
int
xchg
inc
and
xor
sbb
mov
inc
push
std
sub
xor
jge
iret
lods
out
sbb
out
fidivl
lds
div
lds
shrl
fiadds
out
and
into
xchg
push
mov
pop
ret
int3
stc
test
movsb
in
jae
mov
cmc
and
inc
ret
mov
divl
or
fsubp
enter
stos
sbb
bound
mov
pop
fs
mov
add
fnstcw
ja
mov
lret
xor
cli
jg
ds
iret
aad
sbbb
loopne
push
dec
imul
ja
mov
les
xchg
cmp
repz
in
cli
lahf
leave
mov
cmpsb
aaa
movsl
jmp
mov
cwtl
or
jg
sbb
mov
xchg
pop
push
mov
or
stc
gs
hlt
enter
dec
das
cli
mov
inc
lret
in
in
cmp
fsubl
shl
add
xor
mov
mov
fs
scas
inc
daa
outsb
out
lds
mov
sbb
dec
pop
mov
cmp
loopne
xchg
cmp
test
inc
pop
cmp
add
fnstenv
aam
and
and
enter
out
mov
xchg
popf
arpl
push
push
fwait
out
mov
fldenv
and
sub
xor
aad
mov
sub
arpl
stos
mov
mov
mov
dec
mov
movsb
mov
push
and
pop
cld
push
pusha
movsb
lea
test
cmp
sti
jge
cmp
mulb
bound
pusha
js
popf
pop
xchg
movsb
movsb
or
inc
or
int3
js
es
movsl
inc
out
jbe
cmpsb
out
dec
mov
mov
xchg
push
sbb
mov
mov
mov
fs
jmp
add
cmp
pushl
add
or
mov
lret
mov
and
pop
in
loopne
aad
inc
repz
mov
ficomps
loope
dec
sahf
into
add
icebp
jae
mov
arpl
lret
cmp
and
push
inc
ljmp
lods
lds
clc
je
aam
sbb
rol
out
cltd
xor
mov
mov
das
sub
add
sbb
ret
aas
or
push
mov
add
icebp
test
test
pop
xchg
pop
movsl
lahf
xchg
push
inc
fstpt
loope
ret
arpl
sub
daa
cmp
adc
adc
mov
hlt
mov
dec
loop
dec
in
xchg
add
lea
add
cli
lret
dec
movsb
enter
fs
cmpsb
mov
sub
xchg
loope
adc
ret
jmp
mov
sbb
push
pushf
leave
lods
jae
push
test
addr16
mov
jae
push
std
sbb
sbb
leave
out
sub
ds
nop
cmpsb
fwait
mov
outsl
ret
mov
jmp
push
add
cmpl
and
movsl
ret
or
fisubrl
cmc
fsubrl
dec
fwait
lcall
or
lret
out
adcb
dec
cwtl
add
push
pop
mov
movsl
loope
xor
dec
xor
or
out
mov
or
mov
add
sbb
cmpsl
out
leave
lahf
jo
add
lea
jecxz
nop
shl
or
inc
in
clc
addr16
mov
call
pop
dec
and
hlt
cmpsb
dec
xchg
cli
jmp
pop
ss
sbb
inc
pop
mov
leave
adc
jecxz
mov
jmp
enter
dec
lods
shl
cli
fs
and
int3
push
vpextrw
lds
sbb
push
dec
nop
xlat
add
ss
mov
cmp
in
xchg
fucomp
icebp
add
les
add
add
pop
in
fmulp
sahf
cmp
ret
sbb
mov
pop
mov
adcb
mov
into
pusha
inc
lret
stos
mov
mov
jnp
jne
dec
jmp
sti
dec
scas
push
inc
leave
inc
dec
lcall
or
xor
mov
jno
gs
mov
mov
xor
sub
ret
iret
pop
sub
inc
cmc
cmp
sbb
dec
orb
iret
cmp
push
jmp
jmp
jne
push
pop
adc
adc
and
dec
xlat
insb
notl
dec
in
js
mov
or
and
movsb
inc
mov
ljmp
jae
sbb
aad
scas
popf
lret
xchg
les
and
dec
arpl
fsubrl
push
and
push
aam
loop
sub
mov
mov
sub
fcomp
adc
mov
out
mov
rclb
push
fdivrl
movsb
inc
iret
and
addr16
ret
and
adc
mov
sbb
sarb
or
and
sub
in
ljmp
inc
sub
aad
inc
add
mov
cmp
inc
movsb
repnz
xor
dec
lcall
and
jo
sub
dec
iret
dec
sbb
pop
shlb
cmp
dec
pop
lcall
jmp
outsb
xlat
cmpsl
cmpsb
loopne
shll
mov
fildl
mov
outsl
add
ficoml
jecxz
icebp
loop
sbb
push
test
ja
pop
adc
xchg
dec
int3
pop
loop
jmp
sub
or
adc
add
and
aad
sbb
xor
dec
push
cwtl
out
stos
and
loop
das
aas
push
imul
idivb
fstl
shll
stos
push
and
add
pop
rcrl
jg
push
popf
jo
lods
inc
sub
jge
inc
and
testb
mov
imul
dec
inc
in
pop
and
dec
jnp
bound
fsubr
add
sub
pushl
push
xor
fidivs
push
shrb
push
cmp
dec
add
jb
ss
sbb
jmp
addr16
mov
dec
and
lret
sub
scas
ss
rorb
test
pop
jmp
aaa
cmp
or
rcll
in
fiadds
js
idivl
test
daa
mov
pop
inc
mov
jae
and
cmpsl
add
inc
hlt
adc
pop
jbe
mov
movsb
jno
pushf
pop
test
int3
lods
scas
inc
std
lcall
or
adc
xchg
lods
andl
fs
sarl
jl
dec
lret
inc
dec
xchg
and
jg
gs
jl
add
lret
fistps
xor
fsubrl
fimuls
xlat
adc
xchg
lods
mov
je
cltd
clc
or
icebp
mov
mov
fwait
ss
sti
jge
or
or
or
push
sbb
lcall
fstl
enter
add
push
cmpsb
mov
or
into
mov
pop
dec
mov
add
movsb
sbb
ficoms
call
or
cmp
cmp
aas
aaa
out
rorl
jl
scas
aaa
sbb
in
or
sbb
xchg
xchg
insb
scas
sub
add
subb
sub
lahf
out
dec
jb
add
inc
lock
or
mov
insb
popf
sti
sub
mov
call
adc
push
jmp
inc
clc
js
scas
addr16
cmpsb
imul
mov
stos
imul
push
hlt
and
cmpl
jnp
loop
outsb
inc
movsb
lret
adc
stc
sete
cmp
lret
js
jle
sbb
pusha
cli
dec
lcall
outsl
sbb
pcmpeqb
arpl
jae
or
cmp
add
and
pusha
fistpl
es
cs
insb
scas
sub
negl
jmp
repz
bnd
or
aad
in
push
icebp
faddp
mov
or
lea
out
sbb
cmp
mov
bound
sarb
or
and
aas
test
int3
rcl
inc
mov
ret
ret
xor
das
dec
ss
fistpl
int3
lods
dec
inc
in
dec
jo
int
jns
push
sub
int3
fidivs
mov
pop
pop
xchg
add
je
sahf
roll
in
sahf
clc
rclb
aaa
lods
xchg
lods
imul
push
fisttpl
jmp
mov
mov
test
xor
dec
xor
jnp
push
add
pop
lahf
int
mov
jns
insl
aaa
dec
dec
insl
fiadds
outsb
sbb
push
mov
push
xchg
jbe
mov
jno
aam
and
fistps
xchg
gs
mov
movsl
nop
mov
push
push
cmpb
in
sub
cmp
int3
cmpl
cmp
or
cmp
sarl
inc
int
aam
loopne
add
js
push
lret
pushf
adc
sahf
mov
ret
push
mov
fcoml
rcll
mov
mov
bound
mov
les
aas
bound
cmpxchg
dec
or
xchg
push
movsb
loope
xchg
addr16
jno
pop
jecxz
pop
popf
and
int
dec
lret
or
cs
in
jb
mov
in
scas
or
or
ss
sub
pop
test
bound
std
rcrb
inc
jb
sti
ds
dec
push
xor
icebp
mov
test
setno
add
xchg
mov
jo
in
push
xor
adc
sbb
add
dec
mov
lds
jp
mov
pop
inc
xchg
popf
push
xchg
add
rolb
mov
testb
out
lret
jno
shl
cmovge
mov
xor
add
repnz
lret
mov
repnz
push
leave
popf
mul
inc
fnsave
mov
jnp
arpl
sti
ljmp
shr
pop
mov
imul
std
dec
dec
dec
in
push
inc
cmp
mov
and
test
adc
mov
or
adc
or
test
sub
xor
sub
out
es
mov
pop
mov
outsl
cmpsb
xor
adcb
mov
jbe
out
and
adc
bswap
fisttpll
fistps
fsubrl
pop
push
mov
ficoml
divb
jmp
loopne
mov
std
ret
nop
mul
daa
mov
mov
or
mov
repz
jp
mov
mov
ja
jmp
out
mov
xor
scas
sti
dec
not
pop
je
jb
jmp
hlt
jecxz
mov
aas
sti
xchg
aam
orb
xchg
sub
mov
mov
pop
sub
xchg
je
subl
jp
sub
cmpsb
bound
cmp
lret
fs
push
mov
cli
cmpsl
dec
lcall
call
sub
mov
pop
fcoml
test
or
bound
mov
mov
mov
push
xor
cmc
push
adc
dec
insb
addl
dec
cmp
or
mov
call
test
sub
pop
mov
push
mov
popa
xor
mov
jecxz
loop
or
pop
push
mov
popf
xor
adc
dec
shll
mov
leave
es
adcb
push
add
mov
cmc
push
aad
jl
fsubl
jbe
mov
insb
lds
inc
mov
insb
das
mov
imul
lock
inc
xor
jmp
and
insb
in
pop
cli
and
std
cmpsb
addr16
jno
leave
pusha
pop
sbbb
inc
negl
cld
vmwrite
call
and
dec
inc
adcl
cmp
xor
inc
pop
jns
mov
pop
sti
dec
dec
movsb
xchg
out
mov
jae
xchg
sub
ljmp
outsb
cmc
xchg
aaa
cmp
or
rclb
das
adc
cmpsl
xchg
stos
xor
aam
movb
lods
xor
lods
push
inc
or
push
mov
fldt
xor
cld
outsl
cltd
sbb
xor
mov
aad
sub
lahf
cmp
ljmp
aaa
outsl
lods
scas
xlat
inc
mov
movsl
hlt
cs
test
sti
dec
movsb
push
aaa
shrl
movsb
ljmp
xchg
pop
mov
mov
inc
leave
or
pop
int3
inc
dec
pop
pop
jl
loop
rol
popf
dec
in
sub
les
xor
sbb
jmp
push
es
lret
pusha
xor
test
add
jo
mov
imul
je
int3
push
rorl
inc
push
mov
push
pop
out
das
xorb
jne
jnp
jbe
lods
dec
clc
mov
or
push
fs
shrb
cmp
ljmp
pusha
ret
arpl
subb
jno
pusha
adc
scas
mov
mov
sub
fidivrl
aad
push
inc
add
jmp
iret
call
adc
imul
cmp
mov
insb
mov
pop
arpl
or
scas
enter
sbb
lods
cmp
mov
push
mov
push
ss
insb
and
in
mov
adc
shll
jecxz
push
loope
pop
stc
hlt
fimull
pop
lahf
pop
popf
scas
cmc
xchg
sbb
lock
sbb
scas
or
push
movsb
push
ret
pop
es
push
loope
push
cltd
int3
std
fistps
outsl
or
mov
das
sub
mov
jo
sbb
cmp
cmp
pop
popf
lock
and
or
and
mov
push
lret
push
jae
jmp
outsl
lcall
dec
in
xor
jb
mov
xchg
ja
xor
call
rclb
mov
loop
xor
jmp
fstpl
mulb
mov
roll
mov
sbb
and
mov
cmp
les
js
sub
sti
mov
mov
push
xchg
xor
mov
cs
imul
icebp
test
ret
loopne
adc
xchg
mov
pop
test
xchg
lds
leave
scas
mov
aas
call
fsubp
lahf
mov
mov
into
and
or
mov
jge
mov
add
iret
bound
int3
out
shrl
and
adc
sub
jnp
adc
xchg
add
stc
lret
sub
leave
mov
xchg
pop
leave
lret
sbbl
es
sahf
inc
push
push
incb
push
add
mov
add
sahf
mov
sub
rclb
mov
shll
test
adc
pop
mov
mov
inc
inc
and
cmp
push
iret
aam
fnstsw
nop
mov
sbb
pushf
pop
jnp
sbb
mov
inc
jo
hlt
std
adc
fistl
sub
fsubp
fdivrs
sti
test
fs
mov
cltd
mov
jbe
into
int
rorl
xor
lea
inc
adc
outsb
push
jae
cmp
in
lea
pop
outsb
jno
pop
cmpb
sti
jmp
inc
adc
test
and
and
scas
sbb
add
push
daa
loop
rclb
pop
xor
aas
cmpsl
stos
popf
stos
add
mov
mov
into
out
mov
js
xorl
sub
adc
mov
popa
lahf
out
mov
inc
pop
or
inc
add
movsl
inc
lahf
lcall
xchg
ficoml
push
imul
push
and
pop
inc
lret
call
pop
aam
push
and
cmp
xchg
mov
lahf
sub
pop
push
and
stos
into
sti
xor
mov
jecxz,pn
sahf
fiaddl
ficomps
xor
add
les
jg
loopne
or
jo
and
imul
lods
cs
ss
sbb
sbb
xchg
sbb
fisttps
dec
cmpsb
sbb
enter
ret
lds
xchg
push
mov
mov
jne
jne
jmp
dec
add
mov
sbb
jl
and
into
in
xchg
int
enter
addr16
pop
and
daa
psubq
cmpsb
ret
stos
push
mov
lods
sbb
testb
xor
imull
add
outsl
jae
fists
ds
mov
pop
dec
sub
mov
jae
cmp
xlat
fidivrs
dec
sub
insb
aaa
xor
cmp
adc
scas
push
mov
aad
cmp
movsb
jl
fadd
jno
mov
sbb
jo
iret
gs
dec
ret
ror
nop
lods
push
shll
mov
cwtl
sbb
and
jns
lods
ljmp
add
xchg
aam
xor
adc
mov
or
out
and
mov
dec
fstps
or
mov
push
call
jne
rol
or
add
lods
xchg
lods
adc
test
pop
jbe
out
aas
and
out
into
aas
lcall
lods
add
ret
hlt
jae
sbb
clc
repz
mov
sar
and
inc
out
sbb
jp
add
lret
lar
sbb
fstps
repnz
or
daa
mov
mov
mov
cmc
ffree
and
lret
in
jnp
sub
mov
cli
paddd
shrl
mov
mov
shrl
or
mov
stos
adc
icebp
into
jae
add
mov
jbe
cmpsb
mov
test
adc
roll
sub
orl
mov
dec
in
mov
xchg
mov
cmpb
and
stos
fldl
inc
sub
sub
imul
dec
jno
lods
in
adc
cmpsl
pop
jle
jl
std
mov
sub
out
or
aaa
inc
cld
orl
xchg
or
iret
pusha
out
sbb
ss
mov
mov
xchg
nop
adc
mov
lea
lret
jp
dec
fs
test
sbb
cmc
lret
lods
xor
arpl
lock
int3
sbb
test
sub
fs
int3
cmp
pop
add
idivb
xchg
cmp
xor
mov
cmp
push
mov
mov
jmp
sbb
mov
xor
xchg
and
mov
loope
xchg
pop
dec
imul
jge
fwait
sbb
sbb
lock
fstpt
pop
insl
orl
mov
subb
mov
scas
jp
mov
dec
sti
pop
or
sub
sub
xor
ds
push
fdivr
jle
mov
rorl
or
jg
inc
popa
fnsave
pop
jmp
ds
push
das
sub
cmp
fdiv
or
xor
jae
sti
add
mov
cltd
jb
pop
and
fdivs
xchg
sub
aas
pop
push
sub
sarb
xor
xchg
jecxz
cmp
push
inc
mov
sub
mov
jne
adc
bound
cmp
std
sbb
mov
repz
aam
lret
in
sub
or
pop
lahf
push
nop
lea
out
xchg
push
sbb
insb
mov
xchg
adc
xor
rol
aam
aam
sub
lret
sub
xchg
dec
mov
stos
mov
lcall
outsb
inc
loopne
and
sbb
js
adc
bound
stc
sub
dec
cmp
mov
dec
hlt
add
pop
mov
sbb
into
add
int3
imulb
fdivrl
mov
mov
sahf
xchg
jmp
sbb
dec
add
outsl
pop
and
dec
movsb
jmp
xchg
push
incl
pop
mov
cwtl
popf
or
sub
push
cmpb
into
mov
xchg
inc
xor
cwtl
dec
adc
fdivl
mov
gs
dec
mov
aam
popf
loop
pop
push
cmp
stc
std
add
mov
addl
push
cwtl
mov
push
mov
sbb
sub
cmovl
mov
sub
repnz
in
dec
loope
insb
jmp
pop
mov
imul
pop
jecxz
inc
dec
mov
dec
or
ljmp
push
jl
xor
popa
push
cmc
or
mov
xchg
xchg
xchg
or
jns
fbld
icebp
xchg
mov
inc
fcmovb
xor
lret
adc
pop
adc
push
mov
clc
stos
dec
scas
cmovl
adc
dec
loop
pop
das
inc
mov
xor
popa
jl
add
dec
ror
jae
mov
add
fcmovbe
dec
punpckhwd
movsl
sub
mov
mov
lock
push
sub
mov
xchg
xor
cmc
jb
insb
lds
aas
shl
scas
lcall
sub
mov
xchg
test
adc
adc
inc
repnz
xchg
fdivrl
mov
int
and
pop
mov
sub
xchg
in
shl
xchg
push
fisttpll
xor
fadds
movsl
jae
mov
cwtl
pop
test
push
dec
pop
or
sub
inc
out
push
pop
push
loope
neg
div
das
mov
push
or
mov
adc
mov
mov
jge
dec
lret
rolb
ret
testl
fcoml
or
jae
repnz
mov
test
lods
sbb
stc
andl
or
lret
cmp
push
push
lret
push
jae
and
stc
push
hlt
sub
mov
shll
loop
adcl
cmpsb
push
pop
pop
pop
insl
jp
lahf
push
dec
add
notb
fldl
pop
fcoms
and
xchg
mov
mov
imul
pop
pop
call
ret
xchg
fwait
cmp
xchg
cmp
repz
cmp
push
push
mov
cmpb
fsts
xor
or
into
daa
sbb
stc
dec
lock
pop
out
push
cmp
ja
nop
or
lea
hlt
xlat
shlb
cmp
and
rorb
dec
jb
ret
pop
idivb
movsl
xchg
jae
ret
loope
adc
mov
jle
add
xchg
adc
in
mov
rcr
xlat
loopne
sub
cmc
into
lods
or
push
adc
ret
jecxz
adc
mov
dec
or
pop
jb
push
or
mov
and
dec
xor
andb
icebp
jno
lea
dec
fcmovu
ds
repz
dec
or
rcll
add
sbb
xorb
lock
push
pop
xchg
push
pop
cs
mulb
sarl
shrb
stos
mov
fimull
lods
fs
or
mov
push
stos
pop
jbe
push
xchg
pop
sti
xor
sar
add
je
pop
pop
pop
xchg
push
ror
add
fstpl
mull
dec
xchg
xchg
popa
test
jge
ss
bound
lret
adc
fwait
xlat
rcll
movl
push
mov
into
outsl
out
aaa
int3
test
mov
push
int3
lock
mov
sahf
inc
out
xchg
loope
and
mov
loop
js
sbb
lock
enter
not
ficompl
out
sub
push
adc
mov
xlat
push
sub
orl
fdivs
sub
lea
cmp
out
pop
outsb
in
into
xchg
mov
push
and
jnp
fsubrl
mov
adc
cld
fwait
ljmp
lea
stc
push
mov
mov
xchg
shll
xchg
clc
shrb
xor
pop
pop
int3
inc
repnz
frstor
jecxz
jle
vxorpd
jb
mov
and
ret
lret
aaa
inc
jne
fildl
movsl
mov
cmp
dec
lcall
shrl
cmp
je
and
mov
sarb
cli
xor
dec
pop
mov
cli
dec
rcrl
push
in
cmp
and
jo
out
inc
js
cmc
push
xor
add
adc
push
mov
and
lods
fs
xlat
pop
in
rcrb
pop
cli
insb
mov
scas
cmpsl
sarb
test
dec
sbb
jo
jle
xor
push
aaa
cwtl
push
jbe
lods
xchg
dec
enter
mov
or
out
je
mov
pop
sub
jbe
mov
jge
es
or
das
mov
pop
inc
xchg
mov
cmp
cmc
imul
jmp
and
fsubs
pop
sar
shll
cmp
dec
rcll
lock
mov
mov
js,pt
xchg
movsl
sbb
filds
arpl
out
dec
ret
mov
inc
inc
and
xchg
popf
aas
xchg
and
test
testb
fwait
jns
mov
sbb
and
mov
out
lcall
jecxz
scas
add
jle
cwtl
out
decb
dec
lret
cmp
mov
fisttps
push
shrb
cltd
rorb
or
dec
aas
sbb
push
mul
add
and
pop
inc
aas
stos
adc
hlt
lock
fildll
xchg
add
inc
sub
cmp
das
sub
jg
insb
int
fcmovnbe
jns
insb
sbb
xor
das
in
fwait
jbe
fadds
dec
pop
das
int3
cmpsl
imul
mov
or
int
mov
sub
mov
jno
lcall
inc
mov
cmp
lds
pop
jp
lods
std
fs
int
sti
mov
or
jbe
cmp
in
ja
imul
adc
test
cmc
repz
jb
adc
inc
repnz
jmp
xchg
mov
orl
dec
in
mov
cmp
std
xchg
cli
jae
aas
add
lods
jnp
outsl
orl
mov
lods
xchg
outsl
ss
pushf
mov
pop
les
cmp
icebp
cmpsb
sub
imull
fs
mov
hlt
sub
inc
cmpsl
test
out
fistpll
xchg
or
jl
or
shll
cmp
jnp
jo
scas
mov
jge
add
add
lds
ffreep
cmp
mov
jae
xor
lock
pop
cmp
pop
mov
sub
outsb
xchg
hlt
lret
dec
mov
and
lods
gs
pop
and
sti
xchg
into
mov
jns
cld
sbb
into
lahf
js
xor
pusha
jg
and
jecxz
or
cmp
sbb
jmp
jecxz
das
and
jge
mov
cmpsl
pop
mov
cmpb
sahf
mov
aaa
jnp
enter
rorb
dec
daa
xor
xchg
sbb
rorl
sub
adcb
cld
push
stos
mov
or
mov
sub
sti
je
mov
sbb
test
into
mov
dec
xor
pop
ja
jnp
dec
jnp
lret
ljmp
mov
push
mov
loop
xor
pop
flds
and
mov
leave
out
jl
cli
dec
ficoms
movsb
cmp
pop
mov
dec
xor
es
in
loopne
aaa
lds
push
mov
das
pop
and
shll
nop
out
inc
jae
rcl
dec
mov
cld
mov
lret
clc
fbstp
sub
jecxz
mov
fimuls
int3
mov
stos
jle
ror
jmp
repnz
test
push
outsl
mov
movsl
hlt
adc
popa
push
sub
fidivs
out
out
sub
jae
xchg
pop
test
add
aas
pop
dec
in
stc
xor
mov
cmp
test
movsl
jl
push
or
push
dec
fiaddl
loope
mov
sub
push
inc
xor
dec
xor
push
lahf
sbb
out
sbb
fmulp
arpl
xor
stos
jp
mulb
adcb
xorl
jmp
out
inc
sti
sti
loopne
mov
xchg
xor
sbb
jmp
xchg
in
push
sbb
in
xchg
sbb
inc
mov
mov
bound
rorl
sub
mov
mov
xor
lret
out
mov
cmc
mov
mov
push
inc
sub
sbbl
sbb
addb
daa
xor
repz
loop
test
xor
int3
jno
cmc
mov
rolb
mov
jns
sub
icebp
cmp
loop
cmp
dec
jne
xor
xchg
sarb
sahf
out
add
test
out
int
xor
jge
inc
push
das
xchg
sub
icebp
dec
lahf
cmp
in
test
fmul
add
out
gs
fisubs
add
pop
jae
xchg
cmp
ljmp
xchg
xor
pushf
arpl
loope
adc
xchg
cltd
push
nop
aam
test
cmp
push
div
ljmp
jge
or
fildl
jne
dec
lods
ret
js
sub
je
movsl
jg
pop
jb
push
push
popf
sub
push
pusha
lcall
xor
fimull
movsb
shrl
popf
maxps
stos
push
xor
scas
adc
cwtl
ds
into
sub
orb
cmp
mov
push
dec
mov
cmp
outsb
mov
dec
adc
or
sub
jl
xlat
pushf
mov
push
mov
or
rorl
pop
adc
adc
cld
xor
out
cmp
pop
jbe
cs
inc
sub
ret
mov
mov
ficoml
push
mov
or
mov
jl
inc
loop
mov
sbb
inc
mov
adc
jnp
test
mov
mov
stos
pop
repnz
aaa
or
shlb
xchg
popa
xor
jecxz
sahf
bound
sub
cwtl
or
ss
sbbb
and
loope
ss
mov
and
jmp
std
dec
push
push
test
sbb
fiaddl
cld
icebp
pop
pop
in
adc
inc
sbb
xchg
jne
imul
sbb
push
arpl
inc
or
adcb
adc
xchg
or
mov
jb
jb
fs
jne
jecxz
repnz
and
xchg
ja
cmp
sbb
loopne
mov
int
pop
mov
mov
or
call
scas
dec
mov
or
xor
cmp
sahf
dec
and
popf
mov
insb
inc
imul
cmpsl
mov
inc
fdivl
push
sbb
loope
pop
cmpsb
in
ja
loope
js
push
fdivl
pop
cmp
mov
sub
sub
das
stos
sub
push
cli
repz
jo
xlat
mov
shr
in
adc
xchg
jb
mov
ret
arpl
pop
jno
mov
pop
repz
decl
out
nop
sbb
in
out
sub
scas
mov
push
fisubrl
adc
aas
push
fldcw
and
jne
loopne
and
sahf
push
int
andl
les
pop
sbb
add
dec
inc
mov
push
mov
mov
mov
fistpl
sbb
xor
dec
out
inc
jg
cmpsb
cmp
into
adc
jl
xchg
xchg
jg
or
sti
adc
or
enter
sub
stc
mov
fildl
sarl
incb
jb
in
out
inc
mov
dec
cltd
push
push
xor
add
sub
push
push
sub
xor
fcoml
in
sub
cmp
fwait
and
orb
sbb
rcr
mov
jno
xor
es
das
sbb
adc
xchg
rcrl
shlb
pop
or
jl
mov
or
into
daa
and
xchg
cltd
add
add
push
fstpl
fcoml
mov
movsb
arpl
jl
sbb
sub
mov
or
or
fsts
test
mov
jno
shrl
mov
out
inc
orl
scas
adc
stos
jns
stos
sti
sub
mov
pop
pop
xor
jnp
dec
mov
in
add
cli
fwait
daa
adc
cmp
pop
fwait
retw
xor
imul
adcl
fmuls
xchg
mov
jbe
jbe
cli
gs
movsb
push
leave
or
ret
nop
lods
rol
aaa
es
push
daa
mov
fisttpll
stos
lcall
insb
inc
mov
lock
ret
jp
cmp
sarl
xchg
test
dec
push
aaa
imulb
lahf
mov
mov
mov
xchg
jle
into
and
js
lods
icebp
jl
jno
scas
add
push
fbstp
jmp
std
add
std
pop
loope
clc
xor
call
mov
sub
cmpsl
mov
push
pop
mov
pop
mov
test
inc
mov
push
push
fldl
cmp
arpl
jp
cmp
or
insl
ds
mov
jecxz
pop
fisubs
lea
sbb
sbb
and
pop
and
dec
mov
adc
icebp
cmp
sbb
dec
mov
xchg
ret
prefetch
inc
jmp
leave
mov
int
dec
aam
cld
and
sbb
stos
pop
adc
push
cmpsb
xlat
cmpsl
in
add
pop
roll
dec
mov
cmp
and
xor
enter
add
xor
into
jb
outsl
mov
cmp
dec
push
bound
into
cli
loopne
sbbb
cmp
jnp
adc
roll
push
dec
adc
idivl
inc
mov
mov
xchg
cmp
jae
cmpb
push
bound
mov
inc
pop
ja
jle
sub
adc
daa
movb
sbb
fisubl
out
test
sbb
aad
stos
or
mov
lret
dec
insb
push
add
data16
mov
outsl
shlb
jge
fwait
adc
jno,pn
mov
xorb
jno
and
sahf
adc
add
nop
scas
mov
out
ds
pop
fwait
inc
lds
arpl
fbstp
movsl
and
jnp
lahf
in
lret
popf
sbb
mov
mov
add
frstor
and
leave
pmaddwd
lods
mov
ret
jne
lcall
lods
and
rcll
pop
sub
movsl
mov
mov
ret
hlt
test
sub
idivl
adc
stos
cld
xchg
cmp
sbb
mov
pop
ret
mov
loope
ficoms
outsb
pop
incb
fisubs
bound
outsb
fsubs
andl
fstpt
es
rol
lret
push
lods
mov
inc
adcb
nop
in
repnz
xor
xchg
jecxz
inc
js
mov
jmp
xchg
jle
data16
jnp
stc
sbb
push
or
xchg
xchg
cmp
test
dec
jecxz
dec
sbb
stc
dec
jo
incl
cld
mov
lahf
test
pop
fadds
out
jne
sbb
mov
aas
xchg
stc
or
push
sub
xlat
insb
roll
dec
ljmp
test
fisubl
or
pop
mov
ss
sbb
ficoml
xchg
cmp
inc
pop
xchg
dec
mov
stos
mov
bound
test
jg
mov
push
repz
aad
out
xlat
add
shlb
sbb
mov
js
pop
mov
fildll
cmp
sbb
call
fldt
pop
mov
call
xchg
and
stos
inc
xchg
push
jge
insl
xor
cmp
pop
mov
subb
iret
iret
out
pop
inc
jnp
mov
lcall
ret
dec
cmc
mov
dec
lods
fwait
mov
leave
mov
adc
pop
jns
pop
subb
ret
cmc
shll
inc
and
mov
fdivrl
ds
mov
fldenv
xchg
jne
or
int
outsl
xor
loopne
inc
ja
in
testb
jmp
arpl
test
leave
ret
jnp
cld
mov
pop
lret
mov
outsb
adc
sbb
pop
or
fwait
cmp
std
icebp
es
jl
sbb
andb
jecxz
mov
cmpl
mov
sub
dec
in
jecxz
nop
inc
adc
std
out
enter
jecxz
pushf
outsl
sub
xchg
test
icebp
mov
mov
inc
gs
jno
lahf
xchg
pop
lret
cld
sahf
pop
jecxz
dec
cmp
sbb
push
ret
in
pushl
sbb
daa
push
cmp
dec
cmp
or
pop
call
jp
mov
jge
jl
fidivl
enter
jnp
sti
aam
lcall
jnp
sub
hlt
js
hlt
fldenv
adc
addb
pop
out
cmp
xchg
pop
xor
cld
inc
or
pusha
pop
repnz
sbb
jb
popf
mov
sti
mov
fwait
je
mov
fwait
lret
and
dec
fstpl
loop
or
mov
fwait
cmc
push
cmpsl
mov
fadds
ja
arpl
das
mov
jp
andl
out
fstpl
add
pop
push
std
adc
adc
jae
adc
and
idivb
push
ds
or
push
sub
and
mov
fs
jmp
push
xchg
jb
std
lcall
inc
imul
push
dec
lcall
es
adc
xchg
push
iret
lret
sbb
dec
leave
loope
and
xchg
lahf
int
icebp
mov
js
rolb
adc
pop
push
pop
mov
daa
push
jno
sbb
repz
push
fisubs
jo
test
loop
sub
jmp
sbb
clc
push
fisubrl
and
add
push
test
shll
js
and
dec
push
clc
pop
fsubrs
stos
repnz
xor
inc
or
pop
int
nop
aas
inc
mov
sub
les
mov
sarb
pop
sub
sub
xchg
and
jl
outsb
data16
or
dec
in
adc
add
add
data16
cmp
add
push
xchg
fldt
popa
dec
pop
sub
jb
cmp
pop
xchg
pop
andb
inc
shl
jp
or
add
pop
adc
movsl
mov
das
es
pop
push
aaa
xchg
aaa
xchg
sub
jg
push
ljmp
push
adcb
xor
or
mov
fdivrp
jge
enter
mov
lret
scas
adcl
xor
mov
mov
mov
cmp
xor
mov
mov
in
repnz
fs
aam
xor
gs
mov
es
sub
add
incl
daa
mov
bswap
dec
add
jecxz
shl
pop
push
xor
dec
js
iret
andl
cmp
lret
add
lock
ljmp
inc
dec
adc
mov
xor
loop
repz
and
add
gs
xchg
dec
jo
push
ljmp
test
or
loopne
fstpl
lods
faddl
cmp
jge
fldenv
js
push
adc
dec
jle
mov
inc
ja
repnz
in
imul
addr16
incb
xor
pop
lahf
enter
xor
inc
in
mov
es
mov
add
dec
push
mov
mov
ljmp
cmpsl
sbb
popf
cli
insb
mov
dec
lds
sub
out
ficoms
fcmovne
pop
imul
outsb
inc
mov
xchg
pop
out
lcall
and
pop
ficoms
cltd
out
pop
sahf
inc
push
mov
cld
mov
xorl
mov
add
mov
shlb
xchg
mov
dec
jae
lds
clc
lods
cmp
xor
gs
xchg
aas
xor
mov
repnz
leave
inc
addr16
js
mov
nop
cmc
mov
imul
push
adc
scas
cmpsb
std
inc
fstpt
sub
vmovmskps
fcomip
mov
data16
addps
inc
sub
cs
mov
scas
mov
lds
out
les
jg
stc
jg
xor
lret
into
xor
sbb
iret
out
je
jno
loope
in
repnz
xor
push
addr16
xor
cltd
pushf
jecxz
adc
pop
mov
or
add
cmp
pop
bound
test
sbb
clc
jbe
jne
mov
enter
push
arpl
nop
sbb
aad
test
push
stos
dec
rorl
push
and
into
data16
mov
pop
bound
dec
mov
mov
sbb
dec
leave
ja
iret
lock
outsl
inc
bound
mov
or
xchg
jb
mov
popf
comiss
cmp
adc
daa
pop
mov
lcall
ret
adc
ja
xor
mov
xchg
in
cmp
pop
xor
sbb
call
sti
cld
popa
or
fsubrs
mov
cmp
mov
sbb
jae
pop
cmpl
dec
xchg
cmp
push
outsl
scas
sti
mov
mov
mov
minps
inc
xchg
push
int
or
xchg
and
mov
jae
sbb
mov
in
out
daa
adc
cmp
pop
or
inc
pop
inc
jl
imul
fs
cmpb
inc
mov
mov
sub
inc
arpl
mov
roll
and
and
stos
mov
adc
or
addl
and
jnp
test
scas
xchg
movl
test
add
scas
in
cltd
inc
sub
inc
aaa
cwtl
add
out
lea
cwtl
addr16
mov
sub
jo
call
or
and
jp
fdivs
aas
out
mov
mov
nop
in
inc
mov
rol
shlb
fdiv
or
mov
and
jns
outsl
inc
pop
cli
jnp
neg
enter
sarb
insl
shll
ficomps
mov
into
mov
jecxz
stos
mov
iret
push
adcl
mov
mov
mov
out
ja
fnstsw
cmpsl
rorb
aam
inc
xchg
aad
sahf
fdivrl
call
sub
nop
inc
outsb
lcall
test
pop
xchg
add
aaa
and
push
xor
inc
inc
push
filds
fwait
jge
push
test
xor
mov
out
mov
push
ljmp
mov
jae
xor
call
dec
cmpsb
cmpsl
or
stos
scas
push
stos
fs
test
and
mov
mov
rorb
adc
pop
cltd
or
mov
pop
popa
cli
or
ljmp
test
dec
js
shll
out
cmp
jmp
movsb
jl
jl
push
outsl
in
fsts
cmp
pop
enter
xor
out
fldt
shlb
inc
idivl
dec
std
jg
cltd
mov
adc
sub
jns
cmpsb
xchg
lcall
and
ret
es
inc
cmpsl
mov
jb
dec
add
mov
fidivs
mov
out
push
cmp
fwait
pop
pop
fldt
jmp
das
push
sti
rclb
data16
xchg
inc
adc
jo
test
ljmp
pop
ss
jb
int
push
filds
sub
loop
cmpsl
vmovd
into
sti
inc
loope
and
ror
int3
pop
add
cmp
repnz
loope
mov
mov
cmp
pop
loopne
push
subl
in
bound
sub
mov
addr16
aaa
inc
sub
out
gs
sub
inc
cli
into
mov
cld
inc
mov
pop
lods
aas
lea
lock
sbb
inc
adc
rolb
jge
jbe
xchg
mov
xor
inc
mov
leave
dec
xor
inc
mov
loopne
and
jg
cli
fsubr
mov
cwtl
jle
imul
js
sub
sahf
cld
pop
push
loopne
mov
fisubrs
or
inc
popf
sbbl
andb
fs
mov
or
jecxz
cltd
cmpsl
stos
push
sbb
inc
loope
adc
add
xchg
mov
out
aas
lahf
ljmp
mov
lods
notl
xchg
iret
shl
sub
xchg
pop
mov
xor
js
loop
add
mov
cmpsl
enter
and
sbb
pop
aad
mov
lock
loope
jg
pop
xchg
das
add
cld
mov
sbb
lcall
dec
xor
adc
outsb
lea
aad
dec
inc
stos
test
and
jnp
push
mov
sbb
pop
mov
test
add
ret
xor
dec
repz
and
rcr
inc
inc
aas
sub
sub
bound
and
push
mov
sbb
or
mov
lret
jmp
cmp
data16
jmp
mov
scas
aad
cmp
mov
pmovmskb
je
add
inc
xchg
and
pop
aad
sub
popl
sub
xchg
insb
sub
xor
aad
mov
cmp
mov
loop
push
pop
add
cli
mov
test
or
movsb
pop
neg
subl
pop
leave
cmp
inc
push
mov
lock
sti
mov
pushf
dec
stc
mov
leave
push
mov
inc
adc
andb
jb
sub
and
mov
js
mov
fs
pop
adc
jg
rcrb
mov
xchg
push
inc
jle,pn
add
and
and
xchg
xor
out
test
daa
fwait
jmp
pop
iret
mov
fcmovb
or
mov
shlb
jg
pop
mov
adc
xor
ljmp
pop
xchg
mov
xchg
sbb
sbb
subb
lods
xor
test
jp
add
add
popf
add
mov
popf
out
aas
push
xchg
mov
cmp
xor
xor
cltd
and
insl
sub
pop
and
or
mov
sub
in
test
fdivl
or
add
xchg
repz
cmp
push
push
cmp
lods
cwtl
cltd
lahf
xor
fsubrl
mov
pop
out
arpl
or
mov
cmpsb
popf
and
or
mov
jmp
shrl
push
loop
mov
sub
ds
mov
push
sbb
and
pop
lret
sbb
dec
daa
mov
cmp
xlat
pop
mov
pushf
inc
aad
add
scas
int
fcomi
fldl
int3
adc
scas
bound
or
cmpsl
negb
data16
xchg
insb
inc
adc
sbb
cli
xchg
nop
jne
ficoms
pop
dec
es
jmp
lods
into
insl
xlat
inc
loope
js
iret
mov
sub
scas
cmpsl
xchg
inc
mov
pop
sbb
jp
cwtl
std
mov
iret
pushl
sub
stc
imul
dec
stos
cs
sbb
aas
stc
sti
pop
pop
xchg
aam
repnz
cmpsb
push
mov
or
adc
mov
jge
jno
shl
adc
leave
sub
xchg
stos
addr16
pushf
xor
dec
int
notl
lret
cmp
shll
push
dec
push
push
into
test
inc
mov
bound
daa
lea
leave
pop
ss
out
sub
pop
clc
cmc
subl
jb
mov
or
lods
lea
mov
sbb
mov
test
call
ficoml
clc
fnstcw
or
stos
mov
insl
push
nop
cli
fdivrp
test
hlt
popf
les
test
test
ss
push
or
jns
mov
cmp
cli
jnp
jg
inc
add
ret
adc
sub
push
cmc
ret
and
push
cmp
xchg
cmp
dec
cmp
popf
dec
xchg
jmp
mov
add
dec
xor
cld
or
add
aad
push
imul
clc
push
scas
ljmp
inc
sub
gs
stc
or
xchg
stc
outsl
pop
icebp
or
sbb
mov
or
ret
mov
dec
hlt
call
mov
and
jns
lcall
add
call
call
ja
js
push
and
repz
xlat
jmp
cmpsl
xor
ret
xchg
rcrb
std
enter
push
test
jecxz
pop
pop
aas
nop
xchg
ja
mov
jno
or
lds
xor
test
pop
cmpsb
daa
lret
nop
cmp
int3
push
inc
lret
repnz
sub
jno
push
mov
add
ret
sbb
inc
fimuls
push
sub
sub
pop
in
imul
leave
sbb
aaa
cli
movsl
dec
push
push
cmp
aaa
into
sub
inc
es
and
mull
push
stos
cwtl
xchg
or
cmp
jb
aad
mov
inc
fstpl
sub
scas
out
sbb
sbb
xor
and
adc
hlt
test
lahf
int3
push
mov
inc
out
pusha
mov
nop
push
mov
outsl
subl
add
stc
jne
jmp
mov
pop
ja
or
ret
or
cs
ljmp
push
ds
inc
lahf
xchg
mov
out
inc
cld
xor
lcall
ficoms
mov
mov
sub
adc
xchg
push
dec
out
xchg
xor
cmp
push
lcall
pop
insb
pop
sbb
test
int3
sbb
and
xchg
push
pop
cmp
adc
nop
ja
lds
lret
inc
aaa
mov
aam
fstpl
adc
push
out
stc
movsb
mov
push
sub
mov
xchg
mov
ljmp
insb
mov
imul
dec
sbb
cs
popf
movsb
xorl
jno
pop
push
mov
flds
enter
call
test
push
jbe
rclb
cmp
int3
dec
mov
inc
addr16
push
je
adc
dec
adc
or
pop
outsb
faddp
gs
cmp
mov
xchg
xchg
sub
cmp
pop
mov
cmp
pop
sub
jne
stos
adcb
mov
fs
icebp
fadd
cmpb
push
mov
cmpsb
call
movsb
cltd
xlat
mov
cmp
fcoml
sbb
insb
movsb
mov
add
loop
iret
mov
out
add
pop
jmp
pop
subl
and
sub
sahf
dec
or
mov
jb
sbb
lahf
pop
and
insl
je
mov
es
leave
mov
stos
test
jb
push
std
test
inc
cmp
mov
mov
lea
and
outsl
loope
and
adc
call
xor
jl
sub
xchg
loope
rcrl
push
xor
dec
mov
insb
xlat
stc
dec
sti
pop
pushf
std
push
pop
mov
push
adc
mov
push
repnz
push
in
mov
je
mov
jmp
xchg
cmpsl
inc
xchg
inc
ljmp
or
xchg
mov
cmpl
adc
mov
xchg
xchg
mov
lahf
push
fistps
and
mov
aam
sub
and
or
or
jge
adc
es
insb
xchg
jo
cmp
mov
rcrb
sbbb
xchg
ja
out
test
mov
dec
pop
shrb
mov
jp
mov
adc
pop
mov
scas
pusha
adc
daa
addr16
dec
lahf
mov
and
test
jg
and
mov
fstp
pop
jp
push
mov
xorl
movsl
and
inc
imul
sahf
sar
shll
stc
sub
sub
mov
scas
lahf
jge
out
jb
mov
stc
push
cmp
std
sbb
enter
lods
mov
out
mov
adcl
inc
and
sub
add
push
icebp
xor
sbb
nop
shrl
jbe
or
adc
push
sub
adc
fldt
push
push
adc
sub
les
inc
out
fcmovb
mov
loope
or
mov
mov
pushl
icebp
jb
mov
jne
push
test
sbb
mov
cmp
and
pop
pop
sub
aaa
lea
out
dec
cmpsb
fwait
inc
mov
push
iret
mov
imul
imulb
outsl
int3
stc
test
sub
lcall
cmp
mov
aas
in
outsl
adc
ljmp
shr
shr
insb
cmp
pop
add
jbe
jae
in
fisttpl
test
xor
cli
xchg
mov
xchg
push
push
cwtl
jmp
jp
or
test
cli
xchg
pushf
xor
sub
inc
imul
rorb
add
testl
out
ret
push
ss
js
stos
pop
xchg
jmp
movsl
or
movsb
aad
dec
popf
cmpsl
pop
push
pusha
pushl
xchg
and
popa
sbb
in
pop
jae
mov
scas
cltd
or
mov
mov
sub
insl
dec
xor
test
mov
loop
arpl
mov
sub
loope
add
orb
cli
into
pop
lret
mov
mul
cmp
jle
sarb
mov
js
dec
popf
or
cmp
push
jge
push
xchg
and
pop
lock
mov
testl
sti
shll
jne
adc
ret
mov
cmp
gs
push
and
push
lock
outsb
cmpb
jo
fiadds
or
jno
ss
mov
jg
clc
stc
nop
xchg
xchg
pushf
jns
into
fdivrs
imul
pop
aaa
scas
repz
popf
and
lds
xchg
pop
imulb
cmp
push
bnd
sub
pop
lock
ret
or
aam
mov
leave
add
stc
shrb
dec
in
lret
clc
or
aaa
loop
jae
loop
add
in
pop
cmpsl
ficoms
xor
and
popf
fcmovu
jne
lds
pop
jb
std
and
addr16
dec
jo
mov
and
push
stos
movsl
cmpsl
jmp
xchg
cltd
in
inc
mov
or
stos
mov
stc
arpl
mov
mov
jl
jb
cmp
ss
pop
movsb
xor
enter
add
lcall
mov
adc
out
jp
negl
cmpsl
xor
loopne
fwait
mov
xor
sub
push
test
insl
push
add
pusha
xchg
mov
mov
addl
jbe
mov
push
mov
jecxz
test
cmpb
inc
lahf
sub
sub
loop
push
jns
jno
inc
fwait
dec
fdiv
call
insl
cmpsb
push
icebp
fstpl
pop
shrl
movsb
shrb
bound
repz
adcb
cmp
xor
imul
push
test
push
clc
enter
cs
in
fcmovne
xchg
fimuls
test
dec
fwait
cs
nop
arpl
or
addr16
xor
lock
lahf
int
lods
mov
into
aam
mull
sahf
fs
mov
sbb
and
jp
loop
sarl
sbb
lcall
xlat
mov
mov
jl
enter
aad
lcall
jae
je
sbb
rcll
cmp
jno
stos
lretw
cwtl
in
fiaddl
jbe
arpl
mov
dec
mov
pop
lea
lret
jbe
or
inc
push
fs
jnp
mov
in
and
mov
ss
pop
repz
sbb
push
shlb
push
jle
loopne
aad
jbe
push
cmp
and
xor
fcoms
test
xchg
cmc
test
dec
daa
icebp
mov
sub
dec
pop
pushf
sarb
or
xor
pop
xor
pop
dec
sbb
jle
mov
xor
ja
adc
or
ja
callw
jo
sbb
fcmovbe
inc
shl
stos
hlt
pop
xor
pxor
adc
in
mov
cli
scas
mov
loope
mov
push
fs
cmp
sbb
lahf
adc
mov
jge
or
xchg
nop
cmp
xchg
outsb
iret
mov
pop
push
mov
fdivrs
xchg
dec
xchg
orl
xorb
adc
jl
icebp
sub
sub
pslld
push
dec
inc
ss
mov
icebp
jmp
jl
mov
inc
push
test
loope
mov
repz
push
inc
stos
adc
movsl
insb
ror
fistl
insl
outsl
std
cmp
sarl
pop
nop
push
or
xlat
jne
dec
popf
dec
imul
mov
sbb
test
divl
sub
fstp
jnp,pn
mov
jb
leave
push
push
lahf
xchg
add
pop
or
das
pop
or
push
js
insl
xor
push
mov
pop
inc
stc
jl
add
lahf
mov
sbb
xchg
pop
mov
and
push
lret
inc
outsb
lret
popf
daa
shl
stos
cmc
dec
fstl
inc
fsubs
mov
scas
jae
pop
push
push
lds
sub
psrad
mov
mov
jns
sbb
mov
adc
xchg
mov
mov
ficoms
xchg
popa
mov
aam
mov
or
gs
mov
xor
jl
das
push
mov
repnz
add
xcrypt-ecb
cmpsl
or
push
xor
leave
ret
adc
sbb
test
pop
movsb
hlt
xchg
jmp
jmp
jnp
adc
rclb
and
punpckhbw
out
cmpsl
mov
mov
or
in
mov
movsl
cmp
push
mov
in
scas
dec
pop
iret
je
out
pop
daa
pop
outsl
pushf
lcall
pop
sub
loope
mov
in
icebp
and
xchg
pop
and
fcmovnbe
rorl
adc
and
inc
push
fucomi
or
test
loop
jbe
jecxz
fsub
jne
scas
mov
push
jmp
in
mov
std
and
fadds
xchg
pop
rorb
mov
test
pushl
adc
or
jnp
data16
int
sbb
and
sbb
jmp
lods
cmpl
mov
add
mov
mov
cmp
outsl
cmp
dec
add
cmpsl
push
jecxz
setbe
fisubrl
lcall
sub
setl
and
adc
stos
inc
fstps
xchg
adc
xor
sti
repnz
sbb
test
fidivs
xor
js
mov
mov
cmpsl
cli
loope
rcr
inc
jecxz
mov
pop
and
cwtl
sub
xor
inc
mov
and
sub
lock
xchg
pop
xor
sbb
xor
arpl
insb
adc
inc
xor
and
mov
jge
adc
lods
xor
sub
jno
sbbb
pop
adc
test
xor
dec
adc
xchg
mov
mov
mov
out
sub
sbb
aam
jno
inc
mov
push
ss
shll
jae
test
inc
mov
aam
scas
lea
xor
not
arpl
dec
enter
inc
ja
test
loope
and
jo
adcl
pop
fisubrs
mov
adc
je
fs
lds
cmp
cld
and
xchg
cmp
add
jbe
inc
inc
mov
cmpsb
test
fisubrl
repnz
jl
neg
scas
push
sub
jb
cwtl
xor
cmc
cmp
clc
movl
fs
pop
pushf
loope
shlb
daa
aaa
sub
jmp
stos
movsb
loopne
std
imul
sub
ds
mov
insl
dec
mov
clc
das
das
clc
lods
cmc
jge
push
mov
cmp
push
fmuls
mov
dec
out
dec
cld
jmp
stc
push
ds
cld
daa
popa
pop
inc
pop
imul
xor
cmp
mov
inc
int3
fincstp
icebp
cmp
andl
or
cwtl
jb
and
xchg
xor
push
mov
cld
inc
pop
je
sbb
pop
jb
sbb
das
fisubl
adc
cmc
sub
jo
aaa
test
or
repnz
scas
mov
jmp
push
loop
pop
inc
push
mov
pop
and
aaa
mov
or
into
jo
addr16
adc
scas
idiv
xchg
inc
pop
xorb
dec
stos
orl
fldenv
fs
nop
icebp
sbb
xor
ficompl
inc
repz
mov
cmpsb
popa
xor
cltd
dec
loop
add
pop
push
add
cld
jmp
shl
sbb
xchg
mov
push
xor
mov
loop
mov
pop
xor
enter
adc
scas
pushf
movsb
adc
xchg
pushf
mov
mov
xchg
out
sarb
jp
cmp
loopne
xchg
fwait
rorl
jne
pop
cmp
cmp
or
push
das
mov
adc
sbb
subb
scas
ja
pop
dec
pop
or
sbb
pop
jns
lods
adc
inc
push
add
les
inc
and
inc
enter
add
rcrb
loop
lods
mov
cwtl
test
mov
or
and
insl
cld
push
lea
sbb
xor
mov
jns
adc
sbb
loop
jmp
sub
out
aam
dec
or
jmp
pop
ss
imul
jns
pop
int
out
xchg
lds
movsb
xchg
sub
in
jno
into
jle
fmulp
rol
xchg
mov
rcl
or
daa
call
mov
jl
push
adcb
in
loope
in
dec
fistl
xorb
mov
fimuls
sub
stc
adc
cmp
lret
int
stc
cmc
pop
les
sbb
cmp
sub
inc
int3
jnp
add
cmp
sbb
jno
sub
and
das
pop
cmp
pop
dec
cmc
not
inc
push
pop
mov
mov
mov
dec
dec
push
fcmovbe
push
jge
mov
push
or
and
pop
or
jb
pop
push
lds
mov
inc
fs
push
jge
dec
out
mov
stc
cmp
test
icebp
pop
push
or
push
loopne
xchg
xor
fwait
mov
pop
bound
xlat
outsb
push
ret
lcall
xor
mov
xchg
sub
inc
push
fprem1
insb
add
xor
hlt
lret
scas
jno
jecxz
int3
mov
inc
aaa
sti
vunpckhps
pop
aaa
insb
idivl
xchg
fidivrs
pop
sbb
push
xor
adc
jecxz
pop
cmp
mov
xchg
push
out
stc
outsl
sarl
outsb
xchg
test
mov
sbb
jns
cld
loope
cmpsb
enter
fstpl
sub
and
mov
pop
movsl
ja
cltd
sub
outsb
bound
push
cwtl
rorl
jge
xor
mov
test
mov
xor
jle
out
jle
insl
jle
lea
cmp
jecxz
add
mov
in
call
mov
ss
std
repz
xchg
xchg
dec
add
sbb
jae
cmpsb
int
mov
dec
sbb
dec
andl
push
outsl
lcall
int3
in
out
pop
in
xchg
shlb
push
mov
bound
ljmp
rclb
cmp
mov
rcll
mov
dec
scas
dec
popf
movsb
and
xor
xor
aad
mov
lods
push
imul
out
ss
popa
mov
mov
jp
call
ret
xorb
add
mov
push
std
mov
movsb
xchg
sbb
movsb
clc
xchg
test
pop
adc
mov
je
sbb
pop
jp
mov
push
adc
decb
add
jp
inc
jecxz
inc
jl
fdivrl
imulb
pop
pushf
cmpsl
cld
add
xchg
jg
xor
adc
sub
lods
shl
mov
mov
sbb
jo
ljmp
xchg
leave
ss
in
addb
mov
ds
xchg
cld
aaa
xor
or
push
push
dec
pop
fs
sti
or
and
divl
popf
xchg
loop
arpl
xor
rcll
lcall
test
or
movsb
test
dec
pop
nop
add
or
clc
dec
dec
imull
xchg
shll
push
outsl
in
js
mov
and
loope
addr16
xor
xor
mov
in
lahf
shrl
addb
xchg
xorb
adc
sub
shr
movd
jl
insl
push
mov
aad
jbe
shll
fs
inc
or
imul
daa
add
xor
jno
fldt
cmpsb
inc
stos
jecxz
xor
mov
aam
mov
pop
std
dec
fs
in
or
mov
leave
sbb
push
test
mov
xor
jns
in
aam
inc
ja
jge
cmc
push
push
add
jmp
jbe
andb
dec
xchg
notl
or
gs
xor
pop
add
sti
sub
add
pushf
andl
add
cmp
push
mov
jno
repz
test
fwait
or
mov
into
addr16
xchg
in
icebp
sub
stos
pop
iret
es
pusha
out
push
inc
xor
loop
loopne
into
pop
pop
inc
gs
repnz
inc
mov
jg
adc
mov
xor
jmp
in
jp
mov
jmp
xchg
cs
xchg
lret
adc
or
push
xor
mov
mov
or
pop
jl
mov
push
scas
fbld
jl
pop
xorb
pop
inc
or
pusha
out
shll
ret
mov
out
adc
jbe
gs
loopne
dec
iret
jne
push
scas
roll
decl
sub
sub
lahf
sub
out
and
inc
in
call
cmp
iret
adc
or
sarb
sub
xchg
mov
call
xchg
fsubr
and
scas
sub
std
add
xchg
cmp
movl
out
adcl
adc
jne
jmp
push
loope
pop
int3
inc
cltd
push
mov
out
add
and
cmpb
in
dec
adc
jmp
adc
cmc
mov
test
clc
lods
inc
lcall
and
stc
dec
inc
rorl
shl
movl
adc
daa
bound
hlt
call
cmpsb
in
sub
scas
and
inc
jl
shrl
jnp
ror
push
popa
in
inc
dec
rorl
push
cmc
jp
into
push
pop
xor
and
sbb
dec
dec
outsl
popa
jge
int
rorl
ret
movsb
outsl
mov
and
mov
shl
fstpl
inc
aaa
jmp
popa
adc
mov
testl
filds
jns
push
push
fwait
mov
xchg
and
adc
clc
xor
and
insb
xor
dec
roll
es
and
push
jle
enter
outsl
dec
jle
cmp
lds
insb
fmulp
shrb
mov
mov
fmull
aas
xchg
std
sub
dec
sub
fdivrp
pop
ret
lret
mov
jge
adc
icebp
addl
fiaddl
add
xchg
pop
cwtl
in
clc
or
popf
cmpsb
pusha
sub
in
inc
arpl
jb
imul
push
jno
xchg
shrl
adc
aaa
cmp
lds
in
mov
jnp
inc
mov
std
mov
dec
rol
pop
push
inc
lret
pop
in
or
push
jae
sub
ret
aad
popf
outsb
and
ljmp
inc
mov
aaa
jge
mov
in
js
mov
lahf
inc
lret
mov
into
dec
ds
inc
fnstcw
inc
orb
mov
lea
faddl
adc
or
jg
xor
xorl
scas
imul
mov
mov
or
dec
mov
imul
scas
pop
cmp
pop
inc
lods
loop
outsb
lahf
add
mov
nop
movsb
insb
and
or
sbb
inc
pop
or
and
mov
inc
sub
mov
lahf
add
xchg
or
lcall
dec
mov
pop
mov
adc
scas
adc
psadbw
pop
movsb
scas
out
rcrb
stos
arpl
out
js
pop
cmovbe
xor
aad
pop
aam
mov
push
mov
xor
inc
popf
out
pop
xchg
mov
xchg
loope
call
movsb
dec
aam
mov
or
ret
dec
dec
lds
pusha
and
jecxz
jno
daa
es
addr16
mov
push
outsb
mov
ljmp
and
push
sub
lods
fcomps
xor
cmp
inc
aad
das
adcb
out
shrb
sub
roll
fs
add
lret
jnp
aas
cmp
jmp
adcb
pop
popa
push
lock
cld
jle
sub
and
mov
lret
ret
cmp
add
dec
sub
cli
popa
int
loop
inc
inc
cmpsl
push
lock
adc
or
cmp
inc
mov
push
rcll
adcl
sub
cmp
test
cltd
pop
cmp
xor
movsb
adcl
enter
sti
je
sbb
cmp
and
and
leave
lcall
shll
hlt
mov
dec
hlt
in
or
jge
pop
push
mov
das
enter
pop
sub
dec
fs
mov
fwait
push
scas
xchg
mov
fwait
js
xlat
filds
xchg
sbb
inc
std
mov
sub
js
pop
inc
imul
push
jg
dec
push
fnstsw
imul
mov
fwait
jge
push
mov
adc
mov
fsubl
sub
ret
jl
push
out
popf
add
cmpsl
jmp
jne
pop
ljmp
adc
fstpt
sub
cmp
ror
push
outsl
xor
sbb
add
xorb
mov
outsl
sbb
push
jnp
das
aas
or
js
sti
pop
frstor
fwait
xor
cmpsb
repnz
pop
xor
mov
pop
std
call
sbb
adc
in
shrb
lret
js
sub
mov
adc
fidivs
dec
fsubrs
cmpsl
mov
push
dec
xchg
jge
inc
fsubrl
push
cmp
add
int3
jmp
inc
push
mov
imul
jne
out
mov
mov
mov
pusha
xor
fcom
icebp
mov
sub
jno
pop
cli
ds
mov
stos
outsl
cmp
push
mov
pop
add
and
fidivl
dec
cmove
mov
jmp
gs
leave
scas
dec
lods
aaa
pusha
aas
stos
sbb
push
andps
push
inc
dec
test
mov
fcmovnbe
fwait
mov
mov
dec
adc
pop
lods
add
dec
test
mov
aas
sbb
aas
sarw
pop
imul
cmpb
aas
push
arpl
push
adc
sub
adc
and
fadds
mov
lock
and
int3
xchg
push
pushf
sub
or
pop
data16
xor
movsl
fiadds
mov
cmp
bound
dec
mov
cmc
mov
mov
loop
push
and
ss
pop
test
fwait
pop
popl
movb
nop
jle
cmp
movl
fs
sarb
stos
xor
xlat
push
out
pop
in
mov
dec
adc
add
dec
fcoms
adc
mov
lret
ret
push
push
scas
je
or
imul
mov
xchg
mov
xchg
jns
adc
clc
mov
push
daa
imul
stc
or
insb
gs
or
xchg
dec
rorl
add
push
mov
add
cwtl
or
testl
jp
mov
push
adc
mov
lea
sbb
mov
adc
repnz
pop
push
pop
push
xchg
push
pusha
lret
loopne
imul
fcmove
xchg
mov
sbb
cmp
cltd
dec
test
mov
fucomi
xchg
adc
pushf
jnp
data16
iret
dec
cwtl
mov
and
adc
mov
stc
mov
pop
jno
xchg
push
jmp
cs
repz
movsb
pop
pop
out
xchg
xor
aad
fwait
scas
cmpsl
popf
and
aad
inc
add
cli
jnp
xlat
pop
sti
mov
push
mov
dec
ret
jne
add
loopne
jae
loop
sbb
xor
pop
popa
mov
and
dec
push
scas
add
outsb
mov
xor
xor
arpl
jbe
jle
shr
adc
sub
scas
inc
icebp
xor
xor
das
jbe
mov
adc
int3
cmpsl
test
sbb
adc
sbb
mov
dec
dec
inc
jnp
sti
sbb
inc
je
in
enter
xlat
fnstenv
je
mov
sbbb
fdivl
int3
cs
cli
cmpsb
xchg
add
sub
mov
mov
aaa
inc
cmp
add
sub
xchg
lret
popf
loope
inc
xor
cmpsb
mov
les
cmp
std
xor
dec
sub
in
insb
mov
jae
ds
dec
shrb
daa
xlat
cmp
and
xchg
fsubl
ds
les
lret
pusha
rorl
xchg
sbb
sbb
es
inc
fdivp
flds
int3
push
sbb
mov
dec
sub
movsl
inc
arpl
aad
scas
lahf
mov
adc
scas
ficompl
mov
mov
mov
aas
shl
jecxz
jl
dec
dec
xchg
sbb
pushf
cli
popf
out
orb
sbb
jmp
sub
push
lods
or
shll
adc
sbb
fucomi
nop
add
pop
dec
fisubl
test
fildl
jns
shl
loopne
mov
js
in
filds
in
fcmovne
jmp
add
in
pop
and
ret
or
pop
and
xchg
aas
dec
cli
cmc
xor
xor
pop
xchg
mov
inc
add
pop
aas
sub
xor
push
cmp
and
cli
outsl
loopne
lahf
rorl
shlb
imul
scas
sbb
mov
mov
test
test
mov
lock
test
rorl
data16
and
jmp
push
inc
sub
xor
shll
sahf
or
clc
call
enter
jmp
sbb
inc
rcl
xchg
pop
xchg
push
jmp
popa
jp
js
fwait
int
dec
push
xchg
dec
and
fistpll
mov
nop
aam
in
aaa
shrb
and
cmpsl
in
pop
inc
xchg
cmp
inc
out
pushf
pop
pop
push
int3
je,pn
lcall
and
cmc
cmpsl
mov
cmp
out
sti
or
dec
cld
sbb
or
xlat
in
dec
ror
scas
gs
push
cmp
insb
mov
cmp
je
or
mov
cmp
or
or
fcoml
fs
iret
mov
adc
cmpsb
test
or
dec
imul
invd
pop
cltd
mov
mov
aaa
or
insb
cs
mov
sub
pop
push
dec
ds
lcall
inc
aaa
jb
sbb
sbb
add
cmpsb
fsubl
inc
fisubrs
jmp
sahf
mov
xor
push
mov
xor
lods
das
inc
daa
rolb
daa
sahf
ljmp
sbb
sahf
jns
push
jno
negl
sti
icebp
xor
adc
inc
fidivl
ss
in
mov
jb
or
sub
dec
iret
jl
lods
mov
mov
adc
rcl
or
fisubs
xchg
sbb
ljmp
pop
lret
mov
cmp
xchg
push
add
aaa
pusha
mov
int
pop
xor
xor
sbb
pop
pop
lret
adc
repnz
push
scas
cmc
mov
aas
inc
fwait
cmpsb
mov
sbb
mov
xchg
outsl
int3
testl
adc
and
and
xor
pop
add
mov
jbe
dec
out
lods
fsubrs
fidivs
das
cmp
shr
push
dec
xor
push
xchg
out
inc
and
jle
sub
lcall
cmp
xor
scas
scas
push
fwait
mov
fisubs
nop
sbb
jno
in
adc
repnz
popf
xlat
add
popf
jne
sub
xor
roll
or
loop
dec
leave
je
adc
sub
ljmp
ds
dec
lcall
aas
test
mov
es
int3
fisubrl
addr16
lcall
stos
pop
aad
ds
cmp
mov
and
xor
xchg
xchg
stc
adc
push
aaa
out
popa
out
iret
notb
insb
sti
cltd
pop
inc
scas
mov
loop
push
jno
jne
or
enter
xlat
adc
in
imulb
insb
out
mov
pop
xchg
dec
jbe
inc
inc
mov
inc
rolb
xchg
mov
std
js
ljmp
mov
xchg
jbe
adc
arpl
std
push
add
cmp
nop
fnsave
adc
scas
cmpsb
shlb
xchg
xor
jns
bound
push
push
stc
aad
ja
mov
inc
pop
js
mov
dec
sbb
jmp
dec
pop
call
add
pop
in
cmpl
int3
jmp
pop
cmp
xchg
sub
sub
add
mov
sti
xor
mov
xor
pop
jnp
inc
or
fldt
popa
les
push
cmp
mov
sbb
test
mov
cltd
mov
out
sub
push
push
lods
into
cmp
mov
clc
jne
rsm
fisttpll
sbb
mov
call
xor
sbb
dec
cmp
xor
xor
xor
pop
cmp
movsl
push
test
xchg
add
lock
mov
into
pop
dec
mov
dec
into
pop
pop
mov
pop
ret
pushf
pop
imul
mov
jbe
idivb
sbb
inc
jge
cmp
xchg
xchg
inc
dec
aas
xchg
adc
sar
cwtl
mov
cli
pop
enter
jne
incl
ss
hlt
cmpsb
jbe
movsb
cmp
push
push
push
mov
sarb
or
inc
out
or
pop
mov
cli
mov
fidivl
faddl
add
arpl
add
cmpsl
in
adc
and
xchg
adc
xchg
mov
stc
mov
jbe
mov
daa
clc
sbb
scas
push
test
lret
and
xchg
inc
mov
mov
and
frstor
int
test
ss
or
lea
pop
lret
inc
jno
sbb
incl
mov
lods
pop
pop
fbstp
or
sbb
dec
in
js
inc
mov
test
jmp
fnstcw
mov
scas
xchg
xchg
pop
mov
hlt
aaa
pop
cwtl
xchg
xor
mov
push
fst
push
dec
sarb
cli
iret
decl
inc
add
aaa
add
testb
xchg
std
sub
nop
fsubrl
fildll
lcall
ret
jecxz
lods
pop
nop
xchg
xor
add
jo
cs
out
js
or
jbe
lods
stos
rcr
jns
lea
push
pop
pop
movsb
and
pop
xor
mov
dec
loopne
mov
lea
lods
push
mov
adc
loop
mov
hlt
mov
cld
xchg
nop
pop
scas
in
nop
xlat
xor
mov
pop
test
aas
and
jp
mov
ficompl
test
xor
mov
lods
sbb
and
mov
push
int3
ret
outsb
cltd
int3
fnstsw
xor
ret
lcall
mov
pop
int
adc
mov
push
es
movsl
das
cltd
xor
testb
es
repnz
out
arpl
enter
out
inc
push
jge
lcall
pop
dec
sarl
xchg
cmp
int3
xor
out
xor
pop
in
into
cmp
cmp
iretw
pop
in
imul
lods
adc
xchg
enter
sub
lock
or
push
sahf
xchg
dec
and
stos
xchg
stc
es
clc
jb
mov
idivl
ret
push
xlat
jae
inc
adc
and
jle
data16
int3
aaa
add
fcmovne
or
jnp
jle
xchg
ret
loope
adc
imul
mov
adc
lods
add
ja
cmp
je
cli
es
xor
sarb
repz
pop
in
repnz
xor
mov
xchg
aam
ret
std
out
cmp
sti
stos
ss
jp
adc
cmpsl
insb
sub
ss
ljmp
jb
mov
loopne
dec
mov
lret
mov
test
push
sub
pushf
int
cs
mov
fldt
cmp
out
mov
cli
dec
das
iret
or
sub
incl
popa
movsbl
out
pop
push
call
inc
sub
dec
push
cmp
mov
ss
pop
ljmp
xlat
or
mov
out
inc
add
out
mov
add
cmp
shufps
pop
ror
push
push
sub
push
mov
loope
and
dec
mov
fdivs
xor
jmp
jp
xchg
pop
mov
mov
repnz
outsl
fistl
stos
imull
ja
mov
add
movsb
aam
push
sbb
cmp
loopne
xchg
fdivr
aas
rcl
aas
push
stc
or
les
dec
adc
testl
mov
aam
adc
sub
sahf
jns
dec
mov
mov
mov
into
repnz
lds
inc
pop
dec
push
and
add
cmp
pop
mov
fldl
add
shl
and
add
pushf
sbbb
sbb
div
lret
sarb
scas
sbb
out
xor
flds
mov
cmp
adc
les
sarl
inc
loop
add
push
sub
add
push
cmpsb
js
les
movsb
iret
je
mov
jp
stos
mov
push
sahf
or
pop
xor
mov
push
cmp
and
dec
and
pop
mov
aas
ret
xchg
or
or
mov
fwait
cmp
xor
adcl
ds
pushf
cmc
fdivl
fdivrp
jno
mov
fcoml
sti
lcall
xchg
xor
fiadds
movsb
aad
sbb
or
mov
arpl
cmp
orl
ja
fisubs
adc
int3
inc
add
cmc
mov
pop
mov
sub
out
sbb
sub
ret
mov
push
movsb
jb
push
mov
ficomps
stos
mov
mov
loop
lret
lret
repz
faddl
dec
jecxz
call
hlt
mov
sub
or
mov
jns
imul
jg
fadd
push
push
adc
adc
mov
call
mov
push
push
or
xchg
jo
sbb
cltd
xchg
fcmovb
lock
xchg
sti
xor
cld
mov
jmp
mov
frstor
stos
test
jns
mov
sbb
hlt
lahf
fwait
mov
dec
stos
dec
lock
add
adc
add
jo
ror
sbb
xchg
jns
rcll
add
adc
data16
mov
cld
push
mov
dec
xchg
adc
xchg
popf
dec
mov
jae
xchg
insl
mov
mov
std
adc
les
cmp
xor
stos
mov
jae
test
push
sbb
out
mov
lret
or
fwait
adc
in
cmp
pop
push
or
inc
lret
int
bound
rclb
dec
pop
incl
or
std
xchg
sar
mov
sbb
lahf
mov
jns
jns
xchg
inc
dec
or
mov
ret
dec
pop
lea
rcrl
add
test
jge
mov
lds
jmp
fstps
test
mov
rcll
sub
push
iret
dec
movsl
imul
push
jbe
and
mov
arpl
lea
loop
inc
aas
inc
test
jg
add
nop
mov
ds
je
sbb
aas
call
add
imul
xchg
jl
sahf
dec
scas
sbb
mov
movsb
inc
sub
fstps
sub
js
cmc
inc
sub
dec
shlb
mov
ja
lret
mov
cmpsl
into
in
push
aad
clc
adc
push
inc
xor
fisttps
push
test
fists
and
dec
pop
loop
mov
xchg
add
icebp
dec
cmp
dec
jge
daa
sbb
lcall
shll
xor
jg
pop
leave
sarb
xor
cli
rolb
mov
enter
shr
mov
jnp
arpl
pushf
lret
xchg
imul
movl
addr16
add
cmc
mov
pop
inc
mov
push
xlat
lea
and
cmpsb
pop
stos
mov
inc
push
loop
xor
sub
jnp
lods
std
into
xchg
jne
scas
cmp
stc
xchg
or
pop
jmp
pop
add
adc
pop
or
mov
and
mov
icebp
imul
jecxz
jecxz
mov
stc
fdivs
push
mov
cmp
lods
vminsd
or
adc
out
mov
scas
and
xchg
or
ljmp
movsl
jb
xor
out
aam
loop
jbe
or
mov
lods
mov
es
mov
fcoml
ss
xchg
pop
dec
and
aad
jl
leave
dec
push
aas
lret
cwtl
pushf
dec
jne
scas
movsl
or
mov
xchg
into
inc
lods
aaa
jo
sarb
add
lea
fsubl
adc
in
cmp
popf
cltd
loopne
insl
loop
adc
ja
hlt
pushf
fcompl
jo
mov
pop
xorps
ret
pop
push
xor
fdivl
sub
xchg
push
movsb
ret
mov
dec
cmp
ljmp
sub
iret
pop
adc
insl
pop
fdivr
push
and
push
js
and
sub
adc
icebp
popa
scas
jno
sub
out
xor
popa
xor
mov
out
sbb
aaa
sbb
xor
int3
popf
idiv
inc
lcall
movsl
push
stc
ret
ljmp
inc
pop
imul
iret
xchg
mov
jne
adc
sbb
cwtl
cmp
out
pop
xor
xchg
enter
scas
adc
loopne
shrb
xor
jns
push
sbb
adcb
repz
shll
scas
jmp
dec
push
arpl
cmp
pop
sbb
ret
lods
inc
pop
in
jns
adc
sahf
xor
add
popf
cli
divb
jbe
fiaddl
stc
mov
lahf
jae
mov
mov
insl
push
push
fcmovb
cwtl
add
jg
sbb
jnp
adc
xchg
rolb
cmp
shll
pop
jae
scas
scas
push
add
inc
imul
xchg
add
or
mov
pop
xchg
into
or
push
in
loope
adc
into
jnp
sahf
pop
cmp
pop
or
daa
pop
pop
mov
pop
jp
pop
mov
xor
int3
sti
in
iret
and
jns
push
ret
pop
data16
gs
int3
and
ja
les
push
dec
push
or
cmp
sahf
sub
ljmp
pop
or
xchg
mov
insl
mov
aam
xlat
das
clc
mov
sar
and
mov
lods
adc
mov
xchg
xchg
dec
adc
xchg
sbb
aaa
sub
or
push
add
jne
inc
popa
test
or
out
xchg
popf
xor
in
inc
inc
repz
loop
push
repnz
sbb
xchg
lea
sbb
or
ret
dec
sbb
xchg
ss
int3
mov
push
rcl
dec
sbb
mov
loopne
loopne
push
mov
and
pop
popf
add
fbld
mov
mov
ja
push
mov
loopne
push
inc
daa
add
xchg
push
rorl
mov
mov
adc
dec
clc
mov
das
fcom
adcb
movsb
popf
imul
ret
add
cld
lahf
inc
mov
and
ss
sbb
hlt
jecxz
cs
sbb
clc
lea
inc
lea
aas
mov
into
adc
dec
stc
xor
adc
in
loope
icebp
cmp
rolb
add
add
insl
lods
test
xor
and
movsb
xor
ret
adc
xchg
push
dec
inc
lret
shlb
std
out
pop
pop
stos
dec
and
cmpsl
inc
das
ljmp
aad
lret
lods
jle
adc
ljmp
out
xor
popa
std
test
mov
pop
mov
mov
add
hlt
fists
bound
push
inc
mov
fdiv
cmp
stos
jmp
les
rcr
repnz
es
fidivrl
push
mov
push
jge
pop
andb
mov
push
mov
and
xor
fucomp
add
ss
xor
xor
jae
xor
js,pt
pusha
cmp
loope,pn
fistps
popf
jae
sub
mov
inc
inc
int3
imulb
ret
inc
or
outsb
aas
add
iret
xchg
push
adcb
push
jg
jnp
in
push
pop
fdivl
and
cmp
xor
lods
dec
xchg
ja
and
dec
sbb
adc
and
int
add
adc
loop
and
sar
enter
shll
jno
adc
inc
sbb
std
dec
push
ret
push
std
scas
or
or
jmp
lahf
lods
xchg
lods
mov
fidivl
xor
movsl
jbe
call
ss
mov
sbb
hlt
inc
icebp
mov
aam
inc
test
jne
pop
sub
cmp
add
scas
hlt
pop
jg
les
ja
sub
push
fdivrl
and
in
push
ffreep
es
mov
lds
stc
lock
mov
inc
xor
jns
mov
mov
mov
cmp
dec
sbb
fidivrs
add
out
outsl
pop
lods
nop
and
call
jp
fisubrs
push
movsb
push
cmp
mov
or
cmp
dec
fisttps
or
xchg
xchg
mov
outsl
out
xor
test
xchg
shll
dec
iret
push
or
int3
pushf
movsb
adc
xor
sub
pop
jle
mov
pop
jne
iret
pop
push
rorb
enter
hlt
test
mov
lea
loopne
aaa
add
xchg
sbb
mov
cwtl
shlb
pop
jne
xchg
and
aas
sbb
sub
call
ss
addr16
dec
fmuls
or
imul
loopne
in
ret
inc
add
js
imul
mov
push
loope
xor
jb
mov
jnp
pusha
mov
clc
adc
imul
or
dec
js
cmc
and
cmp
pop
push
mov
jnp
push
stos
inc
dec
and
cmp
fwait
xchg
xor
int3
jnp
dec
push
out
jmp
jnp
adc
adc
xchg
mov
dec
imul
cs
leave
push
mov
sbb
hlt
jnp
sbb
jb
les
mov
add
mov
movl
leave
mov
cmc
and
add
pop
js
icebp
pop
shrl
outsl
test
ficomps
mov
mov
cmpsl
xchg
addb
cmp
push
jge
es
xor
cmp
sti
mov
es
or
lahf
jg
push
outsb
scas
push
mov
movsl
or
sbb
hlt
aas
popf
out
bound
aam
sub
mov
mov
shl
rcrl
pop
xor
rcll
cmc
cmp
cld
cmp
push
xchg
popa
pushf
inc
jo
out
int
jp
mov
shl
mov
popf
je
xchg
insl
mov
hlt
faddl
repz
sub
clc
cmc
pop
xchg
orl
pop
mov
dec
jne
nop
cs
add
pop
jmp
jmp
lock
pop
add
mov
inc
xor
aam
pop
push
mov
incl
cmpsb
insb
test
popa
out
addb
cmp
cmpsb
xor
nop
in
adc
xorb
adc
mov
xor
rolb
xchg
cmp
pop
cmp
sub
dec
xor
and
cs
fsts
sub
xor
sub
cmpsl
push
inc
adc
jno
das
icebp
sub
xor
and
mov
repz
cmc
dec
stc
imul
cwtl
adc
xchg
push
xchg
mov
repnz
popa
xchg
lods
pop
xor
ljmp
fcoml
je
pop
jns
pushf
push
ds
pop
cmp
ret
add
mov
adc
outsb
cmp
sub
mov
inc
push
adc
push
xlat
adc
cwtl
mov
or
mov
jbe
rcrb
nop
rcrl
pop
adc
clc
push
scas
cld
rclb
outsb
sub
xchg
mov
cmp
in
pop
pop
mov
aaa
dec
cmc
inc
mov
adc
mov
cmpsb
clc
sahf
sub
pop
xchg
xchg
adc
popa
xchg
aam
scas
cmp
xor
imul
xchg
not
aas
cmp
xor
or
in
cmp
lret
stos
sahf
jg
mov
pop
hlt
jo
or
rcrb
add
std
push
into
adc
add
mov
inc
pop
ret
push
push
dec
and
inc
mov
scas
negb
ja
or
push
mov
push
jne,pn
outsl
mov
and
cmp
lret
mov
xchg
shll
mov
xchg
int
ret
fadd
xchg
inc
push
sahf
cmp
or
cmp
lret
out
xchg
js
sbb
outsl
jmp
pop
data16
rcr
xorb
cmp
sub
dec
fnstsw
cwtl
sub
mov
out
js
inc
mov
addr16
fs
pop
ficoml
or
test
xor
lret
insb
sbb
popf
dec
shrb
std
nop
pop
push
lods
mov
stos
ficompl
pop
cmp
daa
shl
js
sub
mov
mov
pop
add
sub
xchg
inc
sbb
add
xor
mov
das
sub
enter
mov
mov
xor
inc
aad
adc
in
mov
mov
sti
adcb
cmc
rep
ja
aad
xchg
rcrb
repz
add
nop
rorl
int3
sub
push
xchg
aaa
xor
add
xor
clc
pop
in
mov
cmp
xor
mov
pop
rorl
lret
mov
outsb
ficoml
popa
push
addl
imul
test
mov
xor
loop
icebp
movb
leave
arpl
inc
pop
cli
mov
jmp
cmp
inc
push
sti
bound
jns
testb
push
mov
movb
mov
fsubl
mov
mov
out
add
insb
sub
xchg
jmp
xor
xchg
mov
xchg
sub
out
arpl
inc
negb
imul
cmpl
cld
nop
in
push
mov
cmp
lds
ss
push
cmp
add
xchg
hlt
cmp
add
fcompl
out
mov
stc
push
push
movsb
in
imul
shl
mov
mov
fmuls
xor
rcr
daa
in
pop
xor
in
jg
movsl
mov
ret
pop
xor
cmp
and
mov
mov
sbb
xchg
fstl
loopne
mov
or
push
inc
mov
cli
mov
paddsb
add
or
mov
sub
xor
ss
xchg
push
repz
ljmp
dec
sbb
cs
aam
mov
mov
cmpsb
test
iret
xor
out
mov
mov
fisubrs
std
shrb
push
mov
jmp
aam
jnp
jo
addb
je
repnz
inc
clc
nop
dec
shl
pop
sub
addr16
adc
lock
mov
and
repz
nop
xchg
lret
insb
hlt
inc
mov
jae
shl
push
in
divl
mov
mov
inc
jp
ds
in
xchg
pop
mov
nop
arpl
loopne
xchg
xor
mov
xor
jecxz
cmp
inc
int3
cs
fnstenv
inc
xchg
mov
mov
add
jmp
call
xchg
push
mov
je
jp
xor
lahf
lret
adc
mull
push
inc
mov
ljmp
in
out
nop
leave
or
ds
cs
dec
aam
sub
push
stos
cmc
adc
inc
push
or
repz
mov
jns
dec
cli
insl
jnp
mov
or
pushf
sbb
hlt
cmp
dec
fdivrs
in
test
shll
xchg
pop
pop
sbb
leave
mov
xlat
pushf
ffreep
jbe
mov
sbb
loopne
ret
arpl
fstpt
jo
xchg
popf
rcl
out
inc
add
mov
mov
add
push
pop
and
mov
push
ret
out
js
add
pop
mov
jl
sub
push
mov
mov
adc
xor
std
and
gs
in
movsb
dec
pushf
icebp
sbb
pusha
out
repnz
dec
sub
inc
jns
push
or
adc
in
addl
stos
clc
adc
jge
cmpsb
fldt
fs
lds
enter
andl
mov
cmpsl
inc
lahf
cmp
outsb
xchg
out
push
loope
iret
data16
jg,pt
xor
sbb
and
pusha
insl
ja
xor
add
cmc
adc
cmc
int
adc
adc
push
movsb
xchg
fwait
push
dec
and
xchg
out
insl
mov
xchg
mov
jg
bound
cltd
inc
cld
mov
rolb
arpl
jle
outsb
xchg
jg
jae
push
sbb
xor
ret
and
dec
rorl
push
mov
nop
fst
mov
aam
jl
cmp
sub
cmpsl
insb
das
negl
into
lret
pop
das
xchg
idiv
mov
vmovaps
int3
out
dec
loop
insl
or
call
lahf
xor
test
pop
sti
inc
pop
or
test
nop
addr16
mov
xor
rcrb
pop
dec
outsl
mov
fs
xlat
mov
push
in
push
push
cmc
mov
jo
and
stc
mov
rorl
jbe
fildl
imul
shll
mov
rclb
xchg
aaa
enter
sbb
push
fldt
pop
and
out
mov
push
cli
pop
push
clc
xchg
outsl
push
in
scas
imul
xchg
xchg
pop
icebp
adc
aam
repz
jns
xor
add
mov
mov
pop
fsub
popa
fcmovb
das
add
ret
das
movsb
sbb
push
pop
or
test
mov
dec
cmpw
xor
rcr
push
sbb
cmpsl
mov
sub
cmp
adc
enter
fwait
adc
sbb
mov
add
jnp
pop
mov
movsb
mov
pop
repnz
add
jo
rol
outsl
cwtl
test
jp
ljmp
cli
mov
aad
adc
leave
sub
clc
call
inc
daa
mov
push
sbb
jne
rolb
repz
jo
test
rorb
cltd
lcall
scas
mov
jmp
aad
push
call
cmp
inc
adc
aaa
ja
outsb
fldenv
add
popa
in
adc
pop
sub
pop
inc
jmp
and
outsl
xchg
out
xor
enter
or
mov
icebp
cmc
jmp
outsl
test
dec
xchg
mov
out
bound
aas
mov
push
mov
mov
imul
push
cld
subb
or
inc
stos
pop
and
adcb
cmp
mov
outsl
loop
adc
mov
push
add
out
sub
stc
scas
fdivrl
pop
insl
out
aad
or
mov
jae
jmp
sarb
cmpsl
pop
xor
pop
jmp
adc
mov
in
mov
inc
mov
outsl
cwtl
sbb
xlat
scas
fildl
add
lcall
inc
imul
aaa
jmp
daa
repnz
inc
pop
pop
xchg
std
int
mov
pop
sbb
xorb
movsl
pop
dec
adc
jne
fistps
mov
add
push
mov
mov
jl
insl
push
into
popa
lea
dec
lret
push
mov
imul
mov
pop
stos
inc
or
ret
mov
movaps
jo
push
clc
dec
icebp
shlb
nop
and
sbb
loop
nop
push
repnz
and
movsl
jmp
shll
sbb
out
push
and
jmp
scas
or
jnp
scas
jb
or
xchg
mov
dec
or
push
sub
dec
enter
mov
sub
push
fidivs
aas
fstpt
daa
mov
in
xchg
dec
and
sbb
dec
andb
mov
ja
xchg
jae
jmp
sbb
pop
outsb
into
push
and
call
scas
ja
or
pop
addl
adc
data16
pop
sub
adc
aas
fsubrl
push
test
jne
in
aad
jle
test
es
xchg
xor
jns
inc
mov
lods
test
insb
in
pop
and
adc
lret
test
loopne
insb
xchg
nop
cmp
loopnew
scas
call
test
xlat
sub
pop
xor
iret
sub
mov
jecxz
xlat
in
mov
fwait
stos
xchg
mov
mov
jge
add
push
shrb
data16
push
bnd
test
mov
push
mov
inc
or
mov
test
lret
sbb
mov
imul
cld
lcall
xor
adc
xchg
addl
cmp
stos
loope
push
or
mov
aam
int3
out
in
daa
cmp
hlt
mov
push
ret
in
mov
mov
sbb
xchg
sub
xlat
add
cmpsl
sub
pushf
fs
jo
cmc
push
int
jge
insb
push
push
ja
ss
out
mov
mov
or
or
sahf
enter
sbb
leave
jbe
jmp
cwtl
cltd
aad
mov
rolb
xlat
sub
xor
mov
out
pushf
cmp
mov
arpl
pop
add
outsb
pop
mov
xchg
cmp
int
sbbl
inc
test
ficompl
rorb
lret
das
into
push
add
call
pop
out
imul
xchg
outsl
jne
repz
ljmp
sbb
inc
lret
cmp
pop
and
ret
ja
jge
test
in
adc
and
jg
xor
xchg
and
push
add
imul
mov
add
add
cld
xor
mov
out
cmp
jne
test
out
lock
cs
add
mov
xor
xchg
subb
push
icebp
mov
or
popa
cmc
pop
and
mov
mov
cmc
test
mov
or
mov
test
lcall
mov
sub
xor
add
icebp
jle
sbb
jmp
and
jmp
mov
pop
enterw
add
adc
or
dec
fisubl
mov
mov
lea
adcl
js
push
shlb
add
aad
pop
push
sbbb
and
adc
sbb
or
jbe
pushf
nop
jns
add
popf
movsb
xor
inc
hlt
or
insl
leave
arpl
mov
sbb
mov
iret
xlat
hlt
pop
sub
loope
or
and
sbb
clc
pusha
loope
int3
pop
xchg
rcr
push
scas
insl
int3
mov
xor
imul
ja
nop
sub
pop
mov
popa
repz
adc
pop
pop
les
or
xchg
mov
hlt
mov
sub
test
mov
sbb
movsl
out
mov
fs
fistl
cmpsb
popf
enter
fmull
push
push
test
roll
and
and
mov
sti
fidivs
inc
test
pop
mov
mov
fsubs
jns
lret
test
push
shlb
push
and
dec
xor
jbe
stc
aaa
push
sub
data16
xchg
das
pop
nop
lods
cmp
mov
jbe
fdivr
scas
and
cmp
sub
lahf
cmp
push
xlat
and
dec
test
lds
popa
inc
push
sbb
and
sbb
mov
loopne
pop
loop
lods
dec
mov
cmp
scas
subps
inc
std
xchg
cmp
clc
inc
jmp
mov
insb
mov
fbld
and
adc
adc
or
test
lods
and
imul
fisubl
jne
pop
rorl
lods
std
rorl
mov
arpl
mov
sbb
jne
rcrl
mov
add
mov
adc
add
push
iret
fwait
nop
shlb
xor
ficompl
add
ret
mov
pushf
adc
out
pop
jbe
jg
insb
test
fwait
aas
int3
sub
or
and
call
inc
mov
rcrl
popa
mov
test
lea
jno
out
dec
mov
aas
or
xor
cli
and
inc
addl
sbb
pop
cs
pop
inc
mov
adc
jge
aas
push
or
in
jecxz
or
push
push
mov
xchg
js
pushl
jl
xor
adc
insl
sbb
pop
jbe
shrb
sbbl
dec
inc
push
cmp
xor
adc
mov
xchg
mov
xor
and
pop
cmp
mov
xchg
adc
scas
add
jo
xor
mov
cmpsl
jne
outsl
clc
xchg
arpl
out
mov
sub
scas
xchg
sub
inc
mov
fdivl
push
mov
repz
cmp
lea
addr16
loop
movsb
add
sbb
cmp
add
movl
mov
and
jno
movsl
cmp
dec
xchg
divb
xor
sbb
cwtl
sbb
add
sub
loop
lea
dec
cmp
pop
aas
mov
decl
out
xor
or
push
sub
fnstcw
add
ret
stos
ss
jne
cmp
sbb
add
mov
fsubl
sbb
push
add
shrl
push
sti
sub
cwtl
xchg
xor
push
mov
or
mov
pushf
mov
test
mov
cs
insl
inc
inc
or
lds
and
dec
pop
sub
lods
inc
push
or
sbbb
jp
ja
pop
imul
jb
xor
mov
shll
les
insl
lret
dec
jmp
lods
cs
insl
movsb
dec
or
dec
mov
call
mov
push
ret
out
jge
pop
notl
in
xlat
call
add
mov
jb
in
push
push
cmpsl
and
imul
lods
mov
xor
dec
cli
cmc
cmpsl
push
fs
add
icebp
adc
lods
sbb
aaa
jp
imul
add
or
adc
add
mov
add
mov
mov
sub
enter
arpl
idivl
dec
cmpsl
adc
daa
sbb
pop
or
sbb
mov
les
clc
xchg
in
push
cmp
aaa
jo
adc
pusha
out
cwtl
ja
cmp
fs
ret
and
sub
mov
inc
push
fadds
pop
inc
sub
or
adc
jge
xor
jne
mov
jo
lret
push
push
dec
inc
or
jle
bound
aam
pop
inc
mov
dec
imul
cli
ss
inc
cmc
dec
mov
adcb
or
fmull
cmp
or
shll
jmp
in
jbe
adcb
shl
xchg
stos
xchg
dec
dec
dec
pop
out
data16
stc
xchg
jecxz
adc
add
mov
cmp
pop
pop
inc
mov
scas
jp
jb
scas
mov
adc
mov
pop
icebp
and
or
es
adcl
pop
frstor
mov
jmp
imul
cmp
inc
das
aaa
dec
fldl
or
sahf
pop
shrb
dec
xor
mov
addr16
call
in
in
push
pop
es
stc
and
test
adc
cs
mov
xchg
scas
and
mov
popf
roll
xor
scas
push
ja
pushf
cmpsl
jo
jno
imul
sbb
in
outsb
add
fdivs
mov
nop
dec
out
sbb
inc
pop
aas
decl
imul
cmp
mov
dec
pop
and
xor
imull
outsb
test
jne
lcall
jge
vmovntdq
ljmp
rorb
mov
packsswb
mov
add
sbb
stos
add
xchg
sub
mov
fnsave
push
pop
call
mov
and
sahf
jg
cmpl
mov
test
lahf
fstpt
popa
mov
push
in
xor
loop
rcl
addr16
insl
mov
sbb
or
addl
mov
movsb
dec
lahf
mov
lahf
ljmp
jmp
data16
insl
vmread
and
gs
pop
insl
mov
leave
jne
xchg
mov
orb
mov
jno
int
aam
or
ss
sub
push
pop
je
pop
addr16
xor
cltd
cltd
cmp
mov
cs
xor
push
xchg
hlt
scas
mov
mov
inc
fimuls
cmp
sub
clc
imul
mov
mov
xor
mov
sar
popf
xchg
adc
rcrl
xchg
sub
jl
mov
pop
jae
push
lcall
push
push
je
push
popa
inc
stos
rcll
inc
sbb
push
mov
push
mov
int3
xchg
or
test
lds
mov
fs
mov
aaa
adc
mov
sbb
mulb
into
leave
movsb
jb
xor
xchg
add
mov
fisubrs
repz
sahf
add
jnp
out
jne
outsl
insb
cmp
pop
out
ret
mov
inc
hlt
mov
cmc
pop
lock
iret
dec
inc
pop
mov
cmp
repnz
adc
inc
sub
das
inc
xor
add
mov
inc
repz
xor
push
in
popf
and
push
imul
adc
out
idivl
cmpsb
popa
jb
and
push
dec
push
dec
push
mov
xchg
inc
jo
stos
pop
cld
les
ret
add
fistpl
dec
sub
fsubrl
popa
hlt
push
mov
xor
inc
repnz
subb
xor
popf
dec
mov
jb
push
sbbb
idivb
sti
sub
dec
jns
js
daa
jl
adc
ret
or
pop
push
jno
fldt
mov
dec
lahf
jo
loope
arpl
cmp
jne
imul
imul
jno
loope
jbe
push
jp
cmp
movsl
mov
lea
jb
adc
and
jmp
push
or
pop
lahf
test
sub
adc
into
outsb
sbb
dec
repz
sbb
sar
inc
pop
addb
or
iret
inc
insb
rcrl
add
stos
pusha
jmp
cli
add
push
shl
out
cwtl
jae
cs
idivl
mov
test
pop
pop
imul
leave
push
push
pushf
lock
scas
ljmp
or
add
enter
push
out
aas
decb
lret
cmp
add
jae
xor
jg
sub
rorb
adc
or
mov
push
jno
ds
dec
sub
add
pop
addb
jl
push
xor
pop
inc
jmp
mov
mov
push
aaa
ss
inc
xchg
dec
mov
addr16
and
aas
xchg
lods
daa
cmpsl
cmp
imul
jecxz
cmp
popa
mov
stos
enter
jno
in
cli
jae
mov
out
pop
gs
std
clc
sub
cmc
inc
and
pushf
cmp
push
pop
aam
mov
push
mov
or
insl
jae
lds
ss
dec
adc
vpunpcklwd
or
fistpl
or
ss
dec
and
push
pop
jns
stos
push
and
and
scas
idivl
sub
jle
mov
jno
bswap
imul
aad
xor
cmpsl
mov
jg
ret
sub
or
or
rcrb
inc
cmp
xor
push
jmp
xor
mov
sub
jle
cmpsl
std
fwait
or
xchg
mov
jmp
sbb
pop
adc
add
ds
xchg
pop
sahf
in
into
icebp
pop
inc
lods
jle
andb
not
xchg
jne
mov
jne
cmp
and
inc
push
cmp
inc
push
int
arpl
pop
aam
sub
jmp
or
xchg
sub
ficoms
inc
cmp
jp
daa
lock
lret
ficompl
pop
adc
add
pop
out
push
sbb
into
mov
adc
mov
popa
mov
into
mov
adc
cmpsb
mov
ret
dec
inc
sub
add
aad
lcall
movsb
push
or
xor
cmpl
adcl
daa
imul
hlt
xchg
sub
call
pop
cltd
adc
popf
xor
xchg
push
lods
cmp
mov
inc
loopne
mov
fs
imul
fcmovnb
dec
push
ss
cmp
jl
pop
out
jg
push
push
push
xlat
mov
pop
shll
sarl
push
mov
addl
enter
pop
inc
loopne
sub
fidivrl
and
insl
xchg
repnz
in
loopne
sysret
inc
mov
add
pop
adc
sti
sbb
mov
repz
lahf
ljmp
stos
addr16
mov
cs
sub
cmp
dec
mov
bound
cld
pushf
xlat
push
pop
inc
bound
and
in
jnp
xchg
dec
adc
pop
sbb
lods
popf
jg
ja,pn
cmpsb
leave
jl
std
adc
sbb
fcomps
pop
fistpl
div
adc
pop
pop
fs
cs
pop
fldenv
inc
dec
xchg
pop
sbb
add
xchg
mov
xor
fsubr
cmp
sbb
stos
jle
bound
xlat
or
pop
jle
and
jl
jl
rorb
push
into
ljmp
mov
popa
ret
push
pop
push
or
dec
cmp
sbb
cmp
pop
mov
or
pop
xor
inc
or
es
ret
daa
add
xchg
cmovge
cmpl
dec
and
or
lods
out
cld
sbbl
sti
aas
sbb
aam
fiaddl
pop
repz
mov
int
out
and
inc
and
faddl
out
xchg
push
dec
adc
xchg
adc
je
inc
orl
pop
in
and
mov
shrb
add
xorb
lret
pop
aad
addr16
or
outsb
cmc
lds
inc
cmp
push
mov
dec
clc
xchg
or
and
mov
jne
push
lock
sarl
lods
pop
repnz
stos
call
stc
pop
int
mov
call
pushf
mov
jnp
push
adc
test
inc
aam
mov
cmp
jne
and
cmpsb
test
cltd
sbb
mov
mov
sub
iret
adc
lahf
cmpl
ret
aam
stc
cmp
sarl
mov
mov
cmpb
outsb
pop
and
xor
in
dec
into
mov
imul
aaa
cmp
ljmp
jnp
movsb
cs
pop
push
mov
jmp
mov
mov
dec
push
je,pn
sti
in
lods
mov
cmp
inc
test
nop
lods
faddl
in
daa
jne
lock
cltd
pcmpgtb
jmp
mov
sbb
adcb
popf
mov
mov
add
xorl
gs
aas
pop
sbb
jae
jb
pushf
outsl
add
sbb
das
sahf
jp
ds
stos
mov
push
xchg
mov
testb
inc
pop
jb
inc
xor
add
decb
pushw
test
lahf
adc
push
dec
xchg
mov
lods
push
cld
ret
arpl
ret
inc
testb
ja,pn
es
pusha
mov
in
mov
clc
push
push
cmp
jbe
jo
es
shll
inc
sub
mov
inc
fucomip
mov
fnstcw
dec
push
jb
into
jns
sti
or
imul
xchg
add
shll
adc
dec
xlat
and
iret
mov
dec
mov
jno
ja
ret
xchg
scas
xchg
pop
js
mov
pop
aaa
add
jno
or
mov
dec
lahf
mov
add
jns
or
cmp
pusha
aad
inc
cmp
mov
xor
in
loop
and
in
or
mov
add
inc
jb
dec
jp
push
or
inc
push
sub
imul
adc
shrl
lods
out
std
dec
xchg
dec
cli
mov
xchg
cmp
mov
fs
adc
push
pop
push
cmp
clc
leave
roll
dec
incl
sti
inc
insb
stc
popf
jmp
or
jle
mov
movb
sbb
stc
repnz
lret
dec
ja
cmp
test
sti
cmp
jge
data16
ss
aad
imul
and
mov
jno
or
xor
std
adc
stos
pop
and
int3
jae
fstp
sahf
mov
insl
int3
inc
pushf
jb
push
movsl
mov
scas
jo,pn
outsb
cs
in
push
scas
push
cmpl
mov
adc
dec
imulb
pop
aaa
rcrb
sub
mov
jecxz
and
xor
pop
add
cmp
cmp
cwtl
jo
lock
or
daa
inc
push
lods
xor
mov
insl
jp
sbb
mov
dec
mov
sub
test
sub
cld
cmp
dec
sbbb
popa
add
xchg
add
push
mov
jne
ja
call
jmp
in
addb
insb
mov
xchg
pop
insl
cltd
mov
rclb
repz
and
lret
xor
dec
mov
out
mov
dec
add
xchg
sbb
push
add
js
stos
or
ljmp
add
mov
pop
mov
outsb
out
xchg
scas
sub
mov
push
jns
icebp
jae
mov
jnp
iret
loop
xchg
outsl
cld
frstor
gs
pop
cs
xor
in
leave
ss
mov
sbb
mov
subl
jp
js
dec
jmp
push
mov
jbe
scas
or
add
lods
lret
fwait
mov
push
int
fs
cmpsl
aam
rcll
mov
outsb
stos
jne
pop
out
stos
pop
and
shlb
cs
mov
fs
popf
lea
push
mov
nop
cmp
aad
cmp
fmulp
inc
stos
lret
dec
repnz
popa
inc
ja
pop
mov
popa
test
add
flds
stos
dec
mov
and
jns
push
lods
subl
cld
leave
insl
jbe
push
jge
aaa
aam
and
sbb
aam
add
xchg
dec
mov
cmp
test
je
mov
int
xchg
in
adc
imul
iret
inc
sbb
dec
xchg
pop
imul
and
aaa
mov
insb
lods
sarl
ljmp
pop
push
xor
sarb
cmp
pop
mov
mov
inc
ret
mov
shll
mov
pop
pop
and
hlt
lock
clc
ljmp
repz
inc
mov
xor
push
and
ljmp
mov
sbb
push
sub
decl
mov
in
mov
lret
fidivrs
sub
and
movsb
and
shr
insb
scas
xlat
fldpi
adc
je
or
lds
xchg
xchg
inc
and
js
js
mov
sub
pop
mov
lea
lcall
les
pushl
push
mov
push
nop
mov
and
test
into
imul
push
pushf
xor
jg
dec
fcoml
in
pop
ret
ja
push
jmp
sub
adc
in
movb
dec
cmp
jmp
enter
pop
pushf
cmp
data16
sub
fucom
sar
pop
mov
jp
mov
std
andl
sub
push
ljmp
inc
orb
out
dec
dec
into
sahf
or
dec
pusha
negb
enter
push
jle
stc
lahf
or
pop
nopl
xor
mov
and
insl
fstpt
inc
ds
bound
cmp
mov
sbb
adc
iret
mov
loop
in
cmp
scas
and
dec
aas
out
sub
test
imul
xor
es
or
shrb
jae
cli
ret
in
cli
faddp
jecxz
aaa
or
std
mov
enter
in
shrl
inc
rcrb
push
lods
int
cmp
scas
mov
mov
adc
test
rcrl
dec
lcall
xchg
pusha
dec
cli
fstps
mov
enter
push
mov
push
sbb
push
stos
add
mov
in
adc
scas
xchg
add
jp
pop
add
std
mov
arpl
xchg
push
je
repz
insb
and
and
add
movsl
xchg
or
shll
out
lcall
mov
pop
bound
xor
sbb
inc
mov
rcl
rcrb
mov
aaa
hlt
rorl
mov
addr16
jg
jo
mov
int3
cmp
add
std
movsb
or
mov
adc
in
mov
fsubp
push
xchg
loopne
xchg
orps
mov
scas
mov
loope
pop
pop
out
gs
fs
push
orl
out
cltd
js
and
sbb
push
insl
stc
push
xor
push
pavgw
jno
xchg
mov
pop
add
add
and
rorb
subb
ja
hlt
ret
subl
push
enter
push
sbb
orl
ds
ret
mov
and
add
inc
fisttpl
jp
rcrl
pop
sbb
add
xor
pop
dec
and
xchg
and
push
int3
ret
in
mov
cmc
mov
mov
pop
shlb
fnstsw
out
lret
dec
jl
mov
sbb
push
jmp
xchg
xchg
mov
aam
mov
mov
fs
test
lea
iret
aam
push
pop
addr16
addr16
inc
inc
add
sbb
add
sub
fimull
mov
out
xchg
mov
adc
or
dec
pop
inc
adc
pushf
and
mov
or
cs
xchg
decl
sarl
lods
mov
sbb
adc
jnp
loopne
je
push
and
mov
jmp
or
inc
xchg
sbb
fcomps
push
dec
dec
add
mov
fisubs
jge
inc
jns
out
jae
rclb
mov
cmpsl
insl
cltd
in
in
mov
push
fwait
nop
int3
outsl
gs
cmp
lods
push
call
icebp
and
sahf
ja
in
pop
xor
les
stos
xchg
add
and
mov
mov
adc
xor
stos
and
outsl
or
iret
xor
hlt
and
cmp
ret
rcll
in
push
scas
cmc
sub
repz
sbb
xor
cmp
xor
in
mov
push
pusha
or
addl
pop
mov
cmp
push
cli
xor
adc
cmp
rorl
lret
out
fmull
out
xor
call
insl
pop
jb
iret
cmp
sbb
insl
lret
loopne
out
push
fadds
and
push
mov
cmpsb
xchg
mov
sbb
test
fsubl
mov
push
dec
pusha
sbb
sahf
fs
adc
pop
push
sub
and
das
inc
add
xor
xor
push
out
ret
inc
lock
jns
dec
fistps
mov
ret
push
aam
cmp
inc
aam
cltd
inc
push
cmpsb
fdivr
sub
ss
pop
inc
mov
test
xor
mov
adc
test
std
and
sbb
mulb
mov
push
add
dec
push
in
popa
mov
or
sub
cmp
or
xchg
mov
push
ficomps
jbe
sub
add
xlat
xchg
mov
iret
aad
pop
lcall
add
and
inc
shll
ret
mov
enter
mov
inc
push
fsubr
jmp
shrb
and
dec
frstor
adc
rcr
ja
lcall
stc
push
subb
cld
fmull
pop
and
adc
pop
mov
ret
clc
jne
scas
or
jecxz
pop
arpl
jge
mov
sub
mov
jb
test
outsb
pushf
jne
jnp
sbb
and
mov
outsl
sbb
cmp
xlat
xlat
loop
lods
and
mov
mov
xor
inc
push
popa
lret
adc
jl
leave
imul
pop
pushf
mov
push
jns
gs
cmp
and
xor
test
ss
sub
cmp
xchg
mov
loop
arpl
cmp
jno
adcb
jp
insb
and
out
mov
mov
mov
daa
jb
in
mov
lcall
push
jnp
into
sbb
mov
ja
rcll
mov
aas
cltd
cwtl
rorl
cmpsb
mov
jo
push
insl
aam
xchg
push
inc
cli
xor
adc
push
xor
push
fsub
dec
andl
xor
mov
and
add
rcll
push
ja
ja
rcrl
faddp
xchg
aad
jno
lea
popf
inc
das
pop
mov
popa
test
mov
adc
push
rcrl
sbb
cmp
test
dec
inc
jecxz
mov
cmp
enter
pop
sbb
add
lahf
je
mov
push
adcb
sbb
movsl
sub
sti
sahf
clc
out
clc
mov
stos
pusha
andl
pop
not
pop
pop
and
sub
sahf
mov
mov
je
push
repz
xor
push
cmpsb
push
imull
outsl
push
scas
jecxz
es
iret
push
add
arpl
jae
adc
in
jb
sbb
imul
movsl
sub
jle
pop
inc
xor
icebp
cmp
mov
cwtl
out
mov
hlt
insb
and
clc
fidivrs
pop
sbbl
fsubl
rcrl
hlt
pop
sbb
imul
sbbl
dec
das
xchg
push
jnp
sbb
int3
ficompl
cld
mov
das
sbb
adc
loopne
js
incl
sub
mov
in
xchg
fs
jge
sahf
mov
addr16
mov
mov
adc
ljmp
enter
pop
pop
mov
fsubrl
inc
xorb
xor
jae
mov
sbb
jnp
in
mov
in
pop
cmp
inc
and
adc
cmc
mov
leave
xor
xchg
inc
jno
cs
jb
or
dec
and
in
testl
imul
mov
jo
and
out
mov
inc
bnd
loop
xchg
xor
movsl
idivb
ret
lret
mov
daa
stos
push
daa
aam
loope
adc
ja
jo
mov
enter
loope
xor
iret
mov
test
ret
jns
lret
fs
dec
xor
in
daa
call
and
xchg
aad
mov
pop
test
mov
add
inc
xchg
roll
jle
add
shrb
fcoml
fimuls
test
imul
sbb
pop
and
dec
inc
xchg
push
shrl
test
lret
icebp
mov
cmc
arpl
push
push
daa
jns
mov
arpl
cmpsb
dec
nop
xchg
xor
mov
add
sbb
aad
inc
ja
inc
not
xchg
fmull
pop
push
hlt
inc
inc
addr16
nop
add
mov
sub
mov
push
push
cmpsb
push
repz
mov
and
nop
out
fadds
loop
popa
dec
arpl
aaa
xchg
outsb
das
xor
push
xor
test
and
mov
push
add
xor
lock
and
movsl
add
xor
inc
sarl
clc
adc
lret
inc
jp
rep
push
xor
faddp
idivb
out
push
xchg
or
xor
sbb
movsl
dec
pop
std
mov
pop
or
or
xchg
cmpl
rolb
cltd
int
or
xor
dec
dec
shll
test
and
inc
sbb
xchg
fdivl
mov
push
lcall
jecxz
enter
push
fbstp
je
sbb
aad
jno
mov
mov
jb
adc
adc
test
sub
xchg
into
shl
adc
dec
xor
out
or
testb
mov
cmc
push
stos
das
push
inc
dec
mov
pop
inc
jae
sub
dec
mov
mov
and
dec
xchg
push
cmovns
and
pusha
xchg
push
cmp
xchg
mov
sub
movsl
stos
xor
sub
fadd
jae
ss
mov
lahf
in
inc
add
push
in
fidivrs
mov
sahf
clc
or
ljmp
ljmp
sub
push
cmp
loope
leave
mov
push
pop
xchg
push
and
pop
mov
cs
xor
imul
lahf
mov
xchg
decb
movsl
pop
fcomps
sub
testl
loop
hlt
xchg
lcall
imul
add
mov
les
sahf
or
mov
pop
adc
mov
mov
pop
add
leave
mov
repz
std
out
addb
fmul
jno
movq
aas
lahf
stc
das
mov
in
shrd
jnp
mov
jle
jnp
dec
pop
fstpl
into
sub
lea
or
cmp
jg
inc
adc
inc
mov
pop
pop
test
pushf
dec
sahf
test
lock
ds
mov
int
mov
mov
lcall
mov
jmp
les
icebp
xchg
sti
out
inc
jge
incb
cmp
xchg
inc
pop
gs
add
sub
dec
fsubs
adc
or
pop
test
pop
fisubs
xchg
push
stc
dec
fwait
dec
scas
das
popa
les
mov
in
ret
dec
pop
out
ror
mov
mov
push
push
pop
notb
or
mov
mov
mov
pop
lea
cmpsb
arpl
ja
pop
and
mov
and
inc
int3
pop
sub
movsl
push
outsl
and
mov
cmp
mov
aad
clc
lret
shrb
addr16
movsl
flds
or
bound
xchg
add
pop
test
cmpsl
rcrl
mov
repnz
addr16
xchg
sbbb
inc
rol
add
pop
push
insl
sbb
int
shlb
loop
insl
lds
out
aad
push
xor
sub
mov
xor
cmp
cvtpi2ps
adc
push
jne
add
dec
test
aas
push
inc
bnd
xor
or
in
jecxz
pop
repnz
in
cwtl
mov
mov
int3
xor
xor
mov
call
fwait
pop
clc
dec
pop
sub
and
jge
and
rcr
out
insb
cs
arpl
fstps
sub
sbb
sbb
jne
out
sbb
xor
lahf
xor
lcall
jae
test
mov
cmpsl
imul
jl
mov
loope
sub
mov
test
lret
inc
shrb
sbb
hlt
das
ljmp
test
rolb
cmpsb
mov
pop
pop
lea
enter
xchg
in
in
mov
pusha
sub
repz
cmp
xlat
xchg
adcb
jbe,pn
xor
aaa
dec
in
fldt
ljmp
mov
add
dec
repnz
icebp
fnstsw
jmp
cmp
or
dec
movsb
jbe
fwait
je
fsubrs
loope
dec
leave
call
and
dec
iret
mov
popf
nop
popf
or
dec
dec
pop
jecxz
fwait
adc
hlt
add
push
sbb
lahf
add
dec
mov
mov
loopne
pop
xchg
or
xchg
ret
add
jle
dec
imul
jno
ret
inc
sub
mov
dec
xor
aaa
push
cmp
mov
ror
call
dec
or
enter
int3
test
aas
cmpsb
ficoml
in
out
or
push
lcall
daa
mov
pop
push
adc
xor
es
jno
push
push
add
cmp
incb
mov
jecxz
sbb
jae
jb
je
push
aam
mov
jo
mov
jmp
cltd
nop
push
jmp
xor
pop
or
rcr
outsl
cmp
sub
gs
psadbw
test
icebp
xor
dec
xor
pop
mov
xor
xor
xor
and
bound
ret
xor
xor
movsl
xchg
inc
sbb
adc
sub
pop
outsl
fs
and
push
pop
xchg
mov
push
cwtl
and
mov
cmpsl
ret
call
pushf
push
mov
cmp
sub
and
pop
xchg
scas
sti
das
scas
fs
jb
das
jl
in
cmp
mov
or
sbb
sub
pop
enter
leave
notb
aad
loopne
jne
mov
je
jo
and
jge
adc
adc
xor
loopne
int
dec
pop
jp
xchg
and
adc
jl
push
mov
int
pop
mov
outsl
inc
inc
jo
out
sarb
and
push
push
push
inc
mov
mov
push
sub
or
pop
insb
add
add
mov
das
dec
paddsw
loope
lds
call
fnsave
insl
mov
push
mov
jo
mov
popf
shll
jp
ficomps
gs
pop
sbb
test
fisubl
push
mov
or
cmp
rorl
out
movsb
insb
sub
cmp
cmpsl
loope
add
pop
adc
inc
leave
loope
mov
je
lods
dec
mov
popa
lods
mov
and
mov
mov
call
add
jb
lods
mov
je
dec
cmp
mov
pop
sbb
mov
cmp
cli
mov
roll
add
sbb
xchg
insb
aas
std
or
fwait
push
lods
and
jne
fistps
xchg
lret
dec
stos
adc
jg
imul
loope
nop
imul
or
add
divb
jbe
shlb
arpl
mov
je
lcall
stos
jle
xchg
cs
repz
inc
sti
inc
rclb
pop
dec
sbb
rcrl
fwait
adc
cmpsb
or
xchg
xor
in
xchg
or
mov
sbb
in
mov
inc
subb
repz
test
adc
adc
inc
ret
dec
push
push
xor
xor
stos
out
arpl
sub
mov
std
jnp
mov
pop
sar
je
dec
test
dec
mov
cmp
cs
mov
fbld
setne
cmp
stos
or
out
mov
scas
pop
sahf
ss
xchg
cmp
xor
sbb
fimull
mov
sbbw
je
cwtl
mov
xchg
sbb
cmp
jl
cwtl
jl
sti
repz
addr16
insl
test
fsubrp
jg
dec
loope
cs
jle
nop
xchg
xchg
pop
push
out
mov
push
jne
add
je
addr16
insl
sub
mov
shlb
mov
add
jmp
bnd
push
push
xchg
pop
or
adc
jae
mov
and
sub
lcall
pop
push
or
dec
popf
fbstp
orb
pop
pop
sub
into
into
mov
ja
aad
test
dec
scas
sbb
in
mov
xchg
xor
iret
icebp
out
xchg
xchg
inc
nop
lods
nop
hlt
cmpb
in
mov
fcomp
je
insb
sub
repnz
xchg
js
jecxz
sbb
cmpsl
push
cmc
sbb
and
mov
ret
add
mov
in
jo
and
pop
orb
outsl
test
adc
aaa
mov
fsubr
ret
jae
stos
and
in
xor
icebp
mov
mov
pop
pop
ljmp
jne
fistpll
in
shrb
les
pop
les
in
insl
lods
lods
in
out
dec
sub
cmp
mov
cwtl
dec
xchg
xchg
push
cwtl
sti
dec
inc
push
jmp
mov
pop
dec
cmp
push
sti
add
push
fs
out
cmp
pop
xlat
add
lea
push
dec
push
or
mov
mov
sti
cli
testb
daa
nop
ja
in
pop
daa
fnsave
mov
out
call
nop
test
mov
gs
inc
or
cmp
in
mov
jmp
pop
xor
cltd
mov
mov
out
gs
adc
stos
fdivrl
test
cmp
stos
pop
test
arpl
add
xorl
movsb
sbb
xor
xchg
loopne
cmp
mov
mov
into
sbb
mov
adc
cwtl
fldt
shrl
aas
jnp
cwtl
inc
cli
mov
leave
test
std
fsts
adc
push
jge
push
xchg
cmp
adc
fistl
ror
add
fsubl
and
ljmp
lock
shll
dec
pop
mov
insb
dec
dec
hlt
lods
fisttpll
sti
stos
ret
xchg
sbb
fcom
push
sbb
lea
movsl
sarb
sahf
sub
xor
testl
add
push
fdiv
xchg
rcrl
ret
sub
test
jns
push
scas
and
cmp
fmuls
adc
or
mov
add
push
mov
inc
pop
in
mov
fcoms
rcrl
cmpsb
mov
push
inc
adc
or
dec
loopne
xchg
mov
mov
cmp
xorl
push
imul
add
jmp
loop
lret
movsl
jecxz
xchg
fs
or
cmp
movsb
cs
ja
and
sbb
lret
fs
mull
xchg
sahf
or
hlt
push
inc
inc
sbb
inc
push
insl
fcoml
lahf
or
push
xchg
pop
ret
sbb
andb
sub
dec
subb
mov
mov
xchg
sbbb
mov
imul
mov
sbb
push
hlt
cli
daa
jo
pop
push
mov
lahf
ret
cmp
iret
repnz
dec
jne
int3
cli
pushf
bound
and
cli
mov
sub
inc
sub
ret
sbb
xorl
jl
sbb
xadd
mov
jo
add
rcl
or
stos
push
jb
cli
fcoms
ffreep
dec
xor
xchg
enter
inc
fidivrl
icebp
imul
outsl
ljmp
loope
sbb
frstor
ss
push
xor
loope
and
andb
call
inc
sbb
ss
lret
js
xchg
and
das
pop
scas
xor
xchg
jecxz
rcl
mov
pop
outsl
cmp
int
sbb
jecxz
das
insb
push
pop
out
or
pop
pop
aad
call
std
mov
xchg
push
mov
adc
cmp
jns
stc
loopne
test
fisubrl
push
fnstcw
shrl
xchg
dec
adc
push
mov
out
inc
movsb
dec
fmuls
lahf
xlat
int
into
sub
add
pop
sub
enter
push
ljmp
cmpsl
and
mov
jne
insb
mov
and
mov
loop
add
lds
xchg
subb
adc
insb
jg
jae
add
test
cld
mov
out
push
std
adc
int3
adc
cmpsb
jecxz
jne
enter
out
sbb
pop
popa
push
xor
inc
in
pop
pop
js
clc
push
mov
into
mov
push
xlat
pushf
inc
icebp
aam
mov
aad
add
fnstcw
stos
fists
xchg
mov
out
xorl
or
leave
ret
mov
pop
aad
das
lretw
cmp
cmp
cmpsl
ss
stos
es
adc
loope
pop
mov
sahf
rep
movsl
and
rcrb
add
mov
adc
cld
dec
stos
dec
icebp
into
nop
sbb
test
andb
adc
std
xor
cs
movsb
sub
add
or
sub
adc
mov
test
and
lods
mov
ljmp
rol
jmp
xchg
sub
fnstcw
lock
xor
or
popa
cmp
mov
mov
sbb
mov
cld
std
cmp
add
pop
dec
popa
dec
push
gs
xchg
sub
jb
push
mov
lcall
rol
mov
pop
scas
adc
aam
cmpsl
and
cmp
mull
push
or
cs
sub
mov
mov
dec
or
xlat
adc
dec
data16
out
dec
call
sbb
lods
adc
xchg
and
daa
stc
mov
sar
add
adcl
adc
sbb
jg
sbb
ret
mov
repz
into
and
mull
inc
orl
xor
mov
test
and
sbb
shl
in
insb
pop
and
or
adc
pop
mov
and
mov
mov
sbb
or
add
imul
sub
cmp
inc
and
jmp
or
rclb
pop
mov
shlb
lds
fs
mov
fsubrl
adc
inc
lcall
int
xor
repnz
pusha
sarl
mov
cmp
and
inc
xchg
pop
fwait
into
xchg
icebp
divb
xor
mov
lcall
orl
mov
ret
xor
das
adc
inc
pop
xor
leave
sahf
jmp
inc
cmpsb
lock
cld
push
and
ja
xlat
popa
push
sbb
add
sub
cmp
cmc
inc
out
outsl
mov
pop
lods
or
subb
mov
mov
pop
xor
jo
out
addr16
or
dec
lret
lea
out
sbb
push
jecxz
add
scas
movsb
ss
push
push
cltd
fmuls
cmp
iret
or
fidivrs
es
int3
nop
iret
int3
pop
ficomps
mov
sarl
je
mov
sub
inc
rcl
cli
cli
hlt
cmc
js
adc
sub
repnz
xor
push
or
enter
and
inc
movsb
xchg
fwait
lock
mov
jae
xchg
pop
test
xchg
rcrl
mov
xchg
in
jb
je,pn
incb
mul
pusha
in
addr16
cld
push
push
sub
jmp
sbb
dec
aaa
pop
or
cmp
icebp
jp
jl
inc
orb
mov
push
mov
aam
arpl
bound
leave
leave
add
add
adcb
mov
add
ret
pop
insb
adc
dec
inc
loopne
and
and
lret
xor
pop
sti
stos
or
xchg
mov
xchg
in
in
lock
leave
xchg
out
dec
add
inc
lret
outsl
and
add
jge
dec
pop
shll
out
aam
sub
pop
sbb
test
push
cmc
pop
insl
jnp
call
mov
or
cs
push
fldcw
mulb
rclb
mov
adc
xor
jle
cmp
adc
test
pop
lods
xchg
in
cmp
or
cltd
ffreep
xorps
clc
dec
andl
or
popf
cmp
fmull
jno
add
test
lahf
fisubl
xchg
js
cwtl
lock
push
and
idivb
ja
sbb
cmp
icebp
xchg
stc
movl
dec
mov
pusha
xor
test
pop
inc
or
jns
and
das
adc
aaa
inc
rcrl
std
stc
push
push
mov
cli
and
or
push
inc
inc
jno
dec
in
cs
push
mov
stc
test
mov
pusha
pusha
out
iret
inc
and
mov
jns
nop
mov
pop
lret
xchg
fwait
jge
xor
pop
jmp
xchg
mov
mov
mov
out
dec
insb
sub
jb
mov
mov
dec
leave
add
scas
fisubrl
repnz
loope
ss
and
mov
xor
jl
push
sbb
inc
pop
in
mov
xchg
push
call
mov
dec
test
adc
jne
mov
out
pop
xchg
pop
mov
fs
xor
cmp
mov
jl
ja
std
push
lods
add
cwtl
lods
xchg
test
xchg
inc
aam
push
icebp
shr
add
cltd
sub
in
mov
pushf
div
mul
and
negb
fstps
call
push
loop
push
mov
lea
xchg
push
dec
push
xchg
and
inc
lcall
insb
jae
or
cli
adc
in
shlb
shr
fst
lret
into
mov
ret
jecxz
les
push
mov
sub
pushf
scas
mov
cwtl
jns
repz
xor
orl
ja
mov
adc
stos
test
mov
mov
add
fdivl
or
test
adcb
sti
inc
xchg
fsubrl
mov
jge
push
daa
push
or
add
rolb
pop
sbb
out
jmp
dec
dec
sbb
dec
loope
jecxz
pusha
push
jle
xchg
stos
pop
xchg
mov
mov
lcall
dec
test
dec
hlt
inc
sbb
and
adc
mov
pop
jns
jecxz
pop
out
mov
fsubrs
mov
stc
repz
sbb
sti
lahf
sub
dec
les
outsb
dec
dec
push
mov
jo
movsb
pushf
add
ljmp
iret
fnstcw
test
ss
cmp
jb
mov
stos
mov
fsubrl
xor
xor
xor
xchg
xlat
icebp
cmp
xchg
mov
push
dec
xchg
mov
mov
fsub
test
enter
xchg
and
jmp
aaa
push
inc
aas
pop
sbb
inc
jecxz
inc
sub
scas
jo
je
add
xchg
or
outsl
inc
xchg
mov
xchg
and
mull
pop
adc
xor
pusha
decb
mov
mov
adc
test
mov
push
pop
cmpsb
aas
insl
pop
sahf
es
aam
lods
jge
out
arpl
jb
sub
insb
andl
out
repz
or
mov
mov
adc
iret
xchg
mov
cmpsl
in
mov
jmp
movsl
in
daa
inc
cmp
ljmp
xchg
aas
mov
add
jne
mov
sbb
adc
cwtl
xchg
stc
xchg
out
insl
sbb
repnz
es
cmpsl
inc
dec
mov
fwait
adc
ja
movsb
adc
imul
xchg
jg
dec
inc
xor
imul
mov
dec
push
xor
push
outsl
and
andl
and
jb
inc
jp
push
add
ret
xchg
insb
mov
sbb
aam
pop
mov
cmpsl
test
ja
xor
add
or
sub
nop
rolb
cmp
das
push
mov
jns
out
shr
mov
sbb
roll
or
fnstcw
fidivs
clc
das
push
xor
mov
roll
push
mov
cmp
push
out
int3
aad
push
pusha
and
add
add
aaa
aaa
ret
jb,pn
adc
jl
insl
add
push
sbb
outsb
mov
or
mov
popf
stos
out
aad
insl
cmp
fisubs
leave
add
or
or
int
jno
rolb
cmpsb
cmp
inc
movsb
jne
mov
imul
ja
jle
out
icebp
mov
lods
stc
sti
imul
fidivs
mov
repnz
fwait
cwtl
mov
mov
push
push
repz
mov
sti
test
test
cwtl
and
roll
fcmovb
cld
mov
mov
push
iret
add
mov
sbb
fisubl
dec
xchg
lret
xor
scas
test
lea
loope
xorl
cmp
ds
int
adc
add
cmp
stos
jb
sub
test
mov
in
in
or
addl
pushf
iret
idivb
mov
xor
adc
bound
test
enter
out
mov
push
roll
jae
lea
dec
loopne
pop
sbb
nop
addb
sbbb
sbb
jnp
cwtl
stc
mov
fistps
sbb
in
nop
push
sub
xchg
xchg
or
xor
cld
stos
xor
test
add
mov
mov
fcos
mov
inc
add
sbb
hlt
in
out
imul
lahf
jl
movsl
ljmp
pop
cmp
mov
sub
xchg
mov
insb
add
in
inc
pop
push
testb
jl
push
and
test
adc
dec
dec
sbb
arpl
dec
sbb
or
sub
int3
cmp
jmp
addr16
fistl
pop
ret
lcall
icebp
or
aad
ret
inc
stos
in
fcmovnbe
xchg
sub
dec
leave
les
jmp
test
xchg
xchg
outsb
sti
cmp
ret
stos
clc
add
xchg
adc
jns
xor
cmpsl
movb
mov
adc
movsl
xor
jmp
mov
lods
xchg
or
pop
add
mov
lahf
call
stos
mov
mov
jp
call
cmc
fnstsw
fisttps
xor
jns
mov
pop
add
pop
xchg
or
subl
nop
push
sub
aas
movsl
test
fidivl
lods
xor
lods
fcmovnu
popa
cmp
dec
sbb
test
shlb
aaa
xor
jle
lods
mov
push
je
cld
adc
and
adc
pop
sarl
cwtl
mov
lock
inc
movsl
movsb
lret
dec
xchg
push
mov
daa
fnstsw
mov
cmp
cmp
mov
shll
insl
push
repz
lcall
les
adc
pop
add
add
repz
imul
ret
hlt
dec
stos
into
iret
dec
add
xchg
sbbb
movsl
out
jno
test
mov
ja
cmp
out
sub
rolb
jle
jns
fcomi
aaa
sahf
insl
mov
add
lret
xor
std
mov
mov
fsubl
fldt
and
add
pushf
repz
pusha
outsl
mov
popa
shlw
mov
jmp
lcall
fistl
pop
push
or
push
mov
inc
adc
shlb
imul
push
push
pusha
jp
loop
cmp
inc
jns
stos
adc
lods
add
add
data16
mov
mov
lret
clc
shrl
pop
adc
add
sbb
mov
mov
push
hlt
mov
mov
xor
addr16
jae
int
aas
jmp
xor
xchg
mov
lret
push
mov
arpl
xchg
push
sub
ljmp
ljmp
push
xchg
incl
bswap
dec
ret
notb
hlt
adc
int
shlb
mov
cmc
clc
pop
mov
lret
jno
aam
mov
jne
pop
adc
sahf
and
aam
mov
sbb
addb
sarb
rcrb
sahf
xlat
jo
movsl
push
add
xchg
rclb
mov
scas
cmp
xchg
call
sti
mov
mov
or
ret
cmp
push
jge
xchg
je
mov
mov
aas
xchg
adc
adc
push
test
xchg
jno
stos
cs
xchg
xchg
push
mov
and
sbb
jb
sahf
jbe
dec
into
xor
dec
rclb
filds
jb
lock
sbb
out
scas
lret
jo
inc
ljmp
xchg
dec
jecxz
pop
push
pop
jmp
je,pt
pop
sbb
out
enter
mov
sbb
jbe
inc
inc
mov
cs
inc
mov
jl
popa
jmp
out
out
mov
sahf
and
daa
push
cmp
aas
cld
cmp
ficoms
ficoml
add
fisubrs
or
leave
dec
cmc
pop
mov
sbb
mov
mov
out
daa
mov
mov
aaa
mov
cmp
imull
inc
and
test
das
adc
imulb
pop
das
pop
and
mov
jae
fidivrl
in
in
sub
aas
add
mov
fldcw
dec
cmpl
push
mov
sahf
dec
jle
push
mov
adc
in
mov
pop
mov
sub
xchg
pop
out
std
outsl
fs
lahf
inc
push
mov
cwtl
into
or
pop
movsl
mov
imul
aas
jns
popf
mov
sub
mov
sbb
add
jno
add
mov
out
pop
push
shl
in
xor
out
je
decb
int3
pop
ds
adc
stos
cltd
lea
xor
aad
mov
sbb
jae
inc
movsl
les
cmp
pop
or
xchg
adc
jge
cmpl
dec
outsb
xlat
jb
jo
push
jnp
add
push
mov
mov
mov
push
decb
in
cmp
push
out
jae
aas
sbb
sbb
inc
imul
mov
cmp
shlb
xchg
fs
data16
push
imulb
fs
outsb
test
and
es
push
arpl
mov
sub
sbb
add
and
cld
mov
aam
stos
jb
fwait
sub
cwtl
fbld
inc
mov
mov
imul
ja
mov
and
cltd
aas
jp
mov
sub
mov
gs
je
mov
mov
fldl
daa
adc
pop
das
jbe
or
adcb
pop
and
sahf
push
sarl
popa
or
repz
xchg
insb
aas
push
hlt
sub
lods
adc
jmp
fwait
out
dec
or
out
das
mov
lods
cli
addr16
aam
xchg
nop
adc
sub
push
rcrb
push
mov
dec
rcr
push
sbb
movsl
test
sti
adc
fistps
lods
mov
cwtl
loope
rol
rcr
mov
ret
nop
push
xchg
add
mov
or
and
lea
or
xchg
mov
cmpsb
sub
call
leave
test
adcb
loope
arpl
sbb
std
inc
adc
adc
outsl
loop
in
mov
add
pop
sti
mov
xorl
xor
clc
scas
xchg
repnz
cld
adc
xchg
rcll
pop
xchg
xchg
test
mov
mov
xchg
cmp
push
js
orb
lret
push
testl
mov
fdivs
or
fldt
add
push
sti
dec
mov
addr16
jmp
in
and
adc
push
sahf
int
xchg
push
fwait
jno
loopne
negb
scas
mov
sti
add
stc
sbb
dec
out
xlat
sbb
outsl
arpl
lods
jo
push
dec
and
ret
insl
push
dec
xchg
push
cmc
xchg
xchg
enter
loopne
lods
lea
push
mov
pop
push
inc
and
out
movsl
lods
xor
rclb
dec
lods
jae
loopne
testb
in
jne
mov
insl
cmp
imul
add
stos
adc
jne
mov
xor
insb
xorb
fsubs
stos
jo
and
jbe
std
inc
andl
pop
xor
pop
aam
xchg
cs
pop
ja
push
frstor
mov
mov
jg
lods
xchg
out
mov
out
or
out
inc
mov
addb
cmpsl
xlat
fs
or
fisttpll
and
cmp
and
test
into
mov
sub
sub
cmpsl
xor
out
insb
xor
fwait
and
ss
mov
xchg
sbb
jbe
inc
pop
fs
sub
pusha
xor
push
leave
into
jbe
sub
push
or
dec
or
in
mov
idivb
jns
mov
cmp
cmpb
sub
xchg
rcrl
cmpsl
dec
repnz
fildll
jecxz
dec
or
pop
aad
leave
mov
in
pop
jne
in
cmpsl
pop
push
into
popa
pop
out
rol
and
cmp
in
movsb
ja
pop
cld
push
push
and
cmp
and
jo
fnstcw
push
sbb
stc
and
loope
pop
cwtl
cmpb
cmp
cmp
push
xchg
outsl
sbb
mov
and
cli
mov
jp
xchg
cs
xlat
jb
lahf
jecxz
mov
out
adc
iret
loopne
jecxz
popa
push
push
incb
mov
sub
dec
and
test
jbe
pop
clc
std
fdivs
xchg
stc
push
testl
or
pslld
jns
mov
pop
das
or
mov
mov
ja
and
gs
jae
leave
dec
sti
dec
movsl
xchg
jbe
into
stos
pop
mov
hlt
pop
sahf
mov
int
lods
aas
pop
mov
in
adc
fmuls
dec
dec
xchg
iret
fwait
mov
sub
lahf
cltd
inc
jo
call
dec
lret
push
jg
or
fstpt
adc
dec
dec
adc
mov
inc
xchg
sbb
enter
cmp
mov
subb
jae
imul
clc
scas
lds
push
ret
into
cltd
ljmp
iret
test
push
adc
ss
xorl
mov
dec
daa
mov
dec
mov
cmc
into
jle
lahf
mov
dec
popf
push
adc
pop
jno
push
sub
rcll
push
cmpsl
pop
fnsave
xchg
fcomps
fists
push
pop
cmp
adc
cmp
cmp
in
pop
cmpsl
add
adc
arpl
insl
lds
loopne
pop
testl
sbb
mov
rorb
mov
adc
inc
cli
push
stc
inc
pop
sbb
int3
xor
inc
inc
cs
std
fcmovbe
int
pop
fistps
jns
lds
sbb
push
xor
imul
inc
pop
cld
pop
dec
shlb
aam
lahf
mov
adc
xchg
add
and
xchg
jp
jp
push
push
lcall
or
adc
aas
jl
jo
push
les
sbb
pop
fistpl
leave
and
sub
or
ds
push
pop
sub
dec
fcomip
aaa
repz
push
cltd
xlat
pop
in
pop
gs
adc
sbb
sub
push
cmpsl
movsl
stos
sbb
mov
in
fnstcw
lahf
sub
mulb
inc
or
ds
movsl
and
daa
or
cli
jmp
repnz
dec
imul
dec
insb
adc
sbb
pop
aam
xchg
loope
push
push
lods
push
fsubs
loop
pop
jl
lahf
jg
mov
pushf
jns
mov
adc
pop
mov
push
inc
fmull
scas
dec
adc
aaa
dec
sbb
ljmp
xlat
js
insb
mov
fidivl
nop
call
bound
adc
xor
bound
into
add
push
inc
mov
pushf
xor
addl
inc
mov
out
loope
stc
or
jo
inc
push
icebp
sbb
pop
sub
xor
mov
cwtl
in
add
scas
pop
or
jne
mov
jns
jge
add
aaa
fwait
add
cmpl
cltd
cmc
lods
enter
in
aas
fcoml
cmp
xchg
cmpsl
shl
pop
sbb
push
loop
jg
push
jp
sub
add
pusha
stos
out
pop
or
addr16
ljmp
xor
mov
sub
andb
sub
fdivl
mov
mov
mov
in
test
outsb
xor
xchg
cld
mov
sarl
clc
and
icebp
sub
sbb
mov
lods
pop
mov
mov
cltd
jo
dec
mov
aas
push
loop
and
adc
push
xchg
pop
imul
sbb
gs
test
xor
ret
push
imul
cmp
lret
mov
dec
or
imul
push
in
shl
lret
mov
iret
xchg
xlat
stos
or
ljmp
push
psubsw
int
pop
fsubrs
jae
adc
cmp
scas
dec
push
adc
push
aas
and
adc
in
enter
mov
xchg
add
mov
and
jb
dec
cmp
xor
add
push
cld
fldl
adc
add
dec
repz
cmc
jp
mov
mov
in
jmp
data16
xchg
sub
in
mov
cmc
pop
xor
xor
hlt
and
inc
cli
iret
dec
mov
shlb
cltd
je
clc
and
mov
push
fbld
jmp
and
push
cld
popa
sub
loope
cmpsb
orb
adc
jle
pushf
enter
cmp
movsl
mov
mov
aad
mov
sbb
ja
adc
outsl
xchg
icebp
or
daa
test
jg
mov
jb
and
cmc
jle
lcall
jg
mov
jo
push
in
mov
jnp
push
data16
pop
xchg
test
pop
xor
jno
xchg
mov
adc
mov
cwtl
and
mov
fs
inc
xor
inc
mov
mov
sub
add
or
mov
shlb
mov
push
loope
or
fdiv
inc
insb
xorb
aad
jns
jnp
add
push
and
cwtl
push
lret
popa
cli
xor
add
pushf
aaa
xor
imul
inc
xchg
inc
ret
sahf
in
adc
pop
ficompl
int3
jns
xor
lcall
jae
adc
push
fistpll
mov
dec
movsl
dec
add
divb
mov
fs
je
pop
mov
fistps
xor
sbb
pushf
and
mov
test
dec
imul
jp
gs
outsb
popf
ret
mov
xorl
outsl
insl
lods
xor
movsl
inc
mov
mov
negl
jb
inc
add
jmp
sub
fucomp
hlt
cmp
or
popa
mov
addb
mov
inc
dec
push
mov
ret
inc
lret
das
bound
mov
call
sub
adc
outsl
dec
loop
xchg
stc
js
push
inc
imul
out
mov
or
outsl
fisttps
leave
ror
popa
mov
lock
jno
mov
xor
and
inc
inc
add
shl
push
lods
test
sub
fdivrl
xchg
mov
push
add
fwait
dec
iret
fisttps
shrb
popf
lcall
pop
xchg
xor
pop
into
mov
dec
xor
push
fsubs
mov
cmc
js
aam
push
stos
inc
popf
popa
mov
aaa
dec
daa
std
jae
lods
lret
popa
clc
ret
test
push
mov
mov
jnp
and
enter
sahf
sahf
gs
repnz
cmp
or
mov
mov
cltd
stos
repnz
shrl
cld
repnz
inc
jmp
dec
mov
and
jg
mov
add
and
mov
pusha
mov
ret
insl
rolb
mov
hlt
popa
aam
cli
and
adc
scas
aas
cld
shr
xchg
sbb
xorl
cmc
test
xchg
js
lds
jg
add
mov
in
xchg
out
mov
jge
or
push
xor
lret
pop
out
cmpb
iret
daa
add
std
call
pop
push
inc
aas
lret
xchg
cli
add
mov
or
arpl
sub
xor
add
nop
lret
mov
in
mov
shll
lcall
push
clc
outsb
push
pop
dec
jle
adc
lret
push
add
dec
es
stos
aaa
xchg
aam
sbb
xor
mov
xchg
leave
fs
jecxz
cmp
test
cmp
rol
in
jbe
mov
sbb
sbb
mov
xchg
xchg
rolw
and
sbb
les
cmp
inc
das
xor
imul
loope
xchg
sha256msg2
aas
or
inc
out
in
jbe
rcl
jp
scas
nop
pusha
jp
popf
mov
mov
or
sub
pushf
mov
scas
rorb
push
or
mov
push
ja,pt
push
sbb
data16
ret
pcmpeqd
inc
shrb
pop
jp
mov
jno
lahf
adc
int
pop
adc
push
stos
push
movsb
in
in
imul
cli
push
dec
jmp
xor
inc
mov
push
mov
dec
xor
add
mov
lods
ret
mov
sbb
xchg
hlt
imul
jb
aad
push
jle
push
pop
call
jno
je
push
and
lret
xor
inc
adc
test
fmuls
js
lret
subl
sub
stos
xor
call
xchg
lods
adc
cmpsb
inc
int
pop
repz
out
loope
mov
rolb
mov
std
arpl
and
xor
xchg
and
imul
or
adcl
fistpll
mov
repz
stc
or
sub
lret
lcall
add
hlt
icebp
mov
or
scas
jbe
push
mov
lahf
jge
lret
clc
xor
out
mov
add
push
jns
sbb
and
mov
mov
mov
divb
xor
std
ffreep
gs
add
push
push
and
push
pop
mov
ljmp
mov
mov
lcall
pop
push
ja
dec
dec
jl
sub
pop
sbb
cmp
inc
arpl
sbb
pop
mov
mov
cltd
in
push
sbb
cmc
mov
push
jp
mov
mov
andb
shlb
or
sub
test
jp
mov
dec
stos
and
lret
mov
adc
gs
hlt
xor
and
in
stc
mov
mov
fmuls
jp
dec
and
int3
mov
push
inc
xchg
fwait
imul
fdivrs
push
insb
jmp
cld
insl
dec
rcrb
or
popa
push
sti
bndstx
int
sbb
jo
jmp
roll
movb
mov
bnd
addr16
dec
xchg
dec
ret
dec
dec
bound
push
fdiv
mov
xor
repz
stos
lds
dec
outsb
lea
pop
lret
lods
into
or
xchg
or
add
loope
movsb
lahf
push
xchg
fcomps
xchg
xorl
xchg
insb
and
movsl
popf
cmp
add
xor
shll
sub
movsl
pop
pop
aad
shll
ja
mov
iret
jg
adc
stos
imulb
ljmp
cmc
add
jecxz
xchg
int
or
cmp
jp
xchg
enter
les
daa
push
das
std
arpl
jmp
cld
shll
sbb
sbb
stc
popf
push
out
cmpl
jnp
icebp
xor
test
mov
mov
stos
sub
nop
ds
fs
push
insb
out
std
in
sbb
jg
lds
popa
lret
or
js
xlat
cli
cltd
mov
xchg
in
push
mov
icebp
jl
into
sbb
pop
push
inc
sub
inc
aaa
pop
mov
xor
fs
cltd
inc
push
push
pop
ss
dec
sub
add
cmc
dec
negl
fisttpl
dec
push
mov
cltd
ret
dec
dec
sti
popa
adc
roll
jge
add
stos
rorl
pop
or
jp
cltd
iret
sub
cmpsb
lahf
cs
xchg
push
insb
adc
insb
iret
add
stos
push
movsb
xchg
fcompp
rolb
pop
jecxz
daa
fmuls
dec
fistps
imul
pop
shrb
adc
call
xor
mov
and
repz
pop
pop
fcomip
ficomps
mov
movsb
iret
lahf
and
jg
repnz
mov
jge
pop
mov
cmp
pop
jbe
push
jmp
mov
lcall
push
decl
cmp
lret
add
out
les
mov
mov
ss
mov
dec
mov
mov
mov
xchg
lcall
cmc
loop
int
mov
xchg
mov
fistpl
addr16
shlb
xor
jmp
fldenv
xchg
sub
mov
push
mov
sub
sti
in
cmc
xchg
jne
and
mov
insb
lea
and
and
or
xchg
nop
xlat
ficoml
lds
repnz
mov
mov
mov
xchg
das
xchg
faddl
dec
fsubr
pushl
out
jnp
insb
sub
test
rcl
bound
pop
add
mov
dec
rcll
mov
pop
loopne
dec
loope
xor
test
adc
dec
push
push
lret
mov
int
cmpsl
repnz
sub
dec
jns
movsl
push
cs
inc
arpl
pop
fs
xor
dec
lret
add
arpl
jns
cltd
icebp
cs
data16
les
movaps
pushf
ss
and
fs
or
scas
fucomp
jne
and
daa
repz
out
arpl
cmp
scas
mov
cmp
inc
xchg
subb
mov
mov
nop
mov
dec
push
mov
jns
xchg
push
pop
inc
push
test
jle
xchg
fsubp
sub
add
adc
lods
jp
mov
and
jae
sbb
xor
mov
dec
lmsw
rorb
mov
sbb
int
es
in
es
ret
push
inc
fisubs
xor
in
dec
mov
data16
adc
push
fwait
shll
ja
in
jns
push
loopne
iret
lret
or
das
ds
lea
sbb
testl
int
out
mov
addr16
cltd
loopne
insb
in
pop
jo
rcr
jp
push
xor
arpl
mov
shlb
or
xchg
int
cwtl
into
push
xchg
push
vpunpckhdq
jecxz
mov
andl
mov
cli
js
dec
add
xchg
mov
sbb
aaa
or
push
das
mov
and
and
std
int
pop
mov
mov
mov
mov
out
or
xor
mov
xchg
mov
sti
mov
notl
mov
dec
leave
inc
sub
out
pop
pop
inc
cltd
push
imul
cmp
adcb
sub
testb
and
fcompl
inc
push
into
dec
mov
push
repz
inc
mov
pop
inc
inc
fsubrl
cmp
je
movsb
lods
and
jb
ret
mov
mov
test
mov
or
add
mov
adc
ljmp
shll
jle
xchg
jne
dec
test
sbb
mov
fmull
bound
bound
shl
jb
and
shlb
xchg
loop
jno
and
push
jo
push
sbb
sub
mov
sub
loope
or
testl
sbb
neg
hlt
stos
pop
ret
dec
jmp
loope
jno
mov
mov
in
adc
or
das
mov
std
adc
popa
arpl
repnz
jle
ds
out
cmp
out
rcrb
addl
push
lds
or
aas
cmp
sbb
imul
and
push
xor
data16
pop
test
lret
xor
xchg
push
dec
jb
xor
pop
pop
mov
pop
stc
mov
movsb
jb
das
movsb
cltd
mov
dec
cld
fidivrs
adc
rorb
mov
cmp
rcrl
adc
jmp
push
outsb
sbb
mov
in
pop
hlt
xor
int3
mov
das
jb
cmp
int3
sbb
adcb
dec
xchg
dec
mov
fisubrs
ds
or
mov
mov
clc
xchg
jae
imul
mov
mov
mov
mov
addr16
pop
pop
mov
daa
rorb
lds
mov
mov
xchg
fucomp
cmpl
cmp
insl
and
pop
call
push
and
cmpsl
xchg
xlat
cs
mov
ficompl
adc
sub
ret
cld
jle
cmp
sub
sbb
outsl
add
mov
das
je
inc
adc
or
aad
pop
fisttps
ret
pop
xchg
and
cld
pop
cmp
dec
or
xchg
icebp
pop
inc
sbb
ds
mov
xchg
pushf
out
sarb
inc
jb
rcrb
movsl
jecxz
sbb
js
nop
pusha
fnstsw
test
stc
insb
add
jl
dec
cwtl
sbb
sub
mov
test
repz
and
xchg
jbe
leave
outsb
into
dec
dec
iret
jl
xor
mov
push
push
sahf
add
cwtl
insl
dec
jmp
int3
sbb
scas
jg
inc
sub
pop
dec
js
aaa
push
add
aaa
mull
ja
mov
xor
les
fmuls
or
pop
lods
mov
leave
sbb
pop
push
and
xchg
adc
mov
sub
test
jle
insb
pusha
or
mov
fcompl
push
sbb
in
scas
or
jo
aad
and
mov
out
dec
sbb
inc
pop
sbb
sti
ficoms
fstps
loop
sbb
xor
add
lds
push
clc
lods
data16
fs
std
pop
pop
mov
into
movsb
and
or
add
adc
ljmp
mov
loope
mov
ljmp
cmp
cwtl
leave
pop
push
pop
jb
mov
jno
jecxz
mov
pop
add
test
out
das
mov
push
push
arpl
add
addr16
dec
jno
or
outsl
rcrl
test
into
lahf
pusha
test
popa
pop
out
mov
lcall
fimull
lds
in
pop
inc
cmpb
les
xor
push
or
movsl
ret
xchg
or
fidivrs
cmpsl
es
aas
xor
jge
pushl
arpl
ja
and
addr16
stos
mov
mov
sbb
cmc
inc
or
pop
cmc
or
lds
jno
shl
lea
ss
rclb
adc
inc
test
push
ficoms
jp
xor
mov
leave
ret
sub
lcall
push
int
mov
rolb
popf
mov
shrl
ja
aaa
aad
sub
xchg
lods
outsb
xor
push
mov
push
jle
loop
pop
mov
mov
sahf
pop
sub
pop
adc
dec
shrl
adc
pop
adc
stos
fildll
sbb
lds
jae
push
outsb
bsr
mov
xchg
xchg
data16
aad
movsb
fildll
lods
mov
sbb
into
xor
add
out
std
lret
aad
mov
jmp
shrl
pop
mov
and
inc
pop
pop
push
mov
sub
sub
lea
out
out
mov
das
mov
cmp
ljmp
std
and
adcl
repz
jae
out
bound
add
pop
imul
push
mov
std
push
or
push
lock
iret
dec
data16
int3
lcall
test
icebp
sub
in
add
in
adc
mov
in
sbb
or
pushl
sub
outsl
es
xor
out
mov
add
jns
cltd
sub
xor
test
lds
xchg
shrb
lahf
cmp
dec
fwait
xor
push
sub
sub
lock
shll
and
xchg
mov
sbb
mov
shll
stos
int
xor
push
repnz
jmp
jnp
sahf
lcall
test
mov
popf
hlt
sub
lret
rcl
cmpsl
mov
inc
rep
sub
fbstp
xor
ja
mov
push
mov
sti
cmp
add
imul
out
pop
shlb
adcb
pop
cmp
imul
sbb
loop
ja
mov
lcall
ss
xchg
ret
jnp
push
repz
and
ja
fidivl
orl
stos
push
push
pop
adc
cmp
popa
nop
repnz
adc
js
int
dec
arpl
nop
lcall
mov
and
pop
rcrl
push
pop
jne
subl
lea
inc
stos
mov
cmp
sti
popf
push
loope
test
pop
inc
push
and
sub
or
sub
sub
pop
add
popa
cltd
push
and
les
adc
call
in
mov
scas
dec
icebp
in
mov
in
into
xchg
push
adc
iret
cwtl
mov
or
xchg
mov
fsubl
stc
adc
and
dec
jp
pushf
in
rcrb
or
nop
jb
xlat
push
mov
cmpsl
out
addr16
xor
xlat
popf
sub
add
jmp
xchg
aam
sub
fs
loope
jne
push
sub
sbb
in
mov
pop
sbb
push
repnz
shrl
push
and
cmp
pushf
mov
inc
mov
mov
pop
inc
or
andb
xor
data16
sbb
xchg
cltd
lret
out
pop
ljmp
in
imul
or
mov
scas
imul
cwtl
adc
orb
scas
sub
arpl
int
push
shl
adc
adc
push
dec
sbb
out
lahf
scas
mov
int
sbb
addr16
dec
movsb
stos
jnp
bound
xlat
mov
jb
sbb
cmp
or
imul
into
xchg
xchg
arpl
xchg
add
cmp
pop
flds
xor
fidivrs
movsl
ret
add
or
outsl
shlb
data16
ja
fisubl
in
mov
xor
dec
aaa
add
aam
and
adc
jae
xor
ficoml
push
imul
dec
rolb
jb
jbe
mov
push
or
add
sub
cmp
scas
je
xor
mov
test
jmp
push
dec
mov
std
insl
adc
jo
fdivl
adc
mov
testb
adc
shr
push
add
cmp
sub
xchg
pop
sbb
jp
ret
pop
test
sbb
movsl
xchg
cmp
pop
mov
fwait
mov
pop
sbb
imul
or
xchg
mov
mov
jb
push
inc
jb
mov
mov
sbb
and
xor
mov
insb
fs
addr16
fsubr
lahf
push
fstpt
push
mov
sbb
pop
bound
jecxz
out
dec
movsl
jns
scas
push
popa
repnz
mov
jge
xor
je
imul
sub
lret
scas
add
jle
jge
adcb
aas
inc
ret
lret
sti
repz
push
aad
cltd
mov
lcall
sub
mov
loope
and
inc
push
cld
or
adc
inc
pop
sti
in
popf
jno
and
test
or
xchg
mov
icebp
hlt
inc
mov
in
cmp
dec
adc
rclb
int3
cwtl
and
push
rcl
mov
cmc
sbb
mov
dec
mov
outsl
outsl
lret
push
insl
ret
dec
negb
jbe
aaa
jns
fs
mov
add
cmp
cltd
jnp
fninit
cmp
mov
imul
fucomp
fsub
mov
rorl
enter
pop
push
push
cmp
cli
fsts
fisttpll
ds
cmp
aam
adc
jo
inc
xor
fsubrp
mov
pushl
push
movsl
pop
adc
std
daa
lcall
xor
out
sarb
or
fs
lret
loop
imul
sub
cmp
sub
daa
mov
sub
cmc
dec
in
pop
dec
mulb
push
dec
cmpxchg
sti
inc
cmpsb
dec
push
outsb
mov
push
lret
push
inc
movsl
push
lea
sti
out
into
movsl
sbb
inc
aas
imul
das
pusha
leave
fidivs
jo
add
testl
and
mov
imul
lods
lahf
movsl
out
pop
mov
cmc
mov
lahf
rorb
add
cmp
in
cmpb
sub
or
lock
in
push
fcoml
lea
inc
pop
sub
mov
add
les
pop
adc
xor
stc
pop
pusha
mov
sbb
jmp
mov
cs
sbb
sahf
jae
movsb
cmc
jle
inc
add
sbb
scas
sub
out
inc
pop
xchg
roll
xor
push
or
gs
je
push
and
mov
sti
std
mov
inc
stos
or
jnp
sub
pop
xchg
test
and
lret
addr16
pop
or
push
outsb
adc
icebp
sahf
insb
ret
data16
dec
pop
mov
mov
mov
fs
sbb
fwait
mov
roll
pause
cmpsb
pop
sbb
jecxz
mov
pop
in
jbe
sahf
cli
mov
lcall
leave
sub
jne
test
and
pop
adc
adc
xchg
cmp
xorl
mov
sub
add
lods
sub
adc
push
pop
add
std
jnp
sbbb
sub
clc
sbb
das
hlt
aas
outsb
xchg
add
jo
popa
and
icebp
sub
stos
in
pop
push
jns
decb
or
xchg
or
shlb
aas
push
push
into
cmp
nop
test
xlat
dec
or
outsb
jge
lret
les
sti
and
idivl
scas
cs
cld
incb
or
inc
xchg
lret
in
push
scas
cld
xor
add
lea
lods
out
fwait
gs
enter
je
lods
or
mov
loop
mov
test
test
jbe
sub
mov
inc
and
into
xchg
jns
test
cmp
mov
fdivrs
rcrl
jg
pusha
sbb
mov
xchg
stos
movmskps
push
sub
sub
xchg
mov
loope
push
xchg
addb
loop
push
ja
out
jmp
mov
mov
int
or
add
mov
cli
addr16
cli
mov
nop
ret
sti
add
dec
sub
std
jns
cmc
imul
pop
loope
mov
nop
stos
sbb
dec
icebp
cmpsb
popw
mov
or
stos
das
insb
cwtl
fstl
addr16
popa
jle
sbb
ss
hlt
jae
shrl
andl
cmp
dec
jmp
xchg
sub
test
popf
sbb
push
fwait
cs
xchg
add
lods
pop
pop
iret
ds
into
or
cs
lds
call
ret
pop
addb
loope
add
xchg
xchg
cmp
inc
imul
push
jbe
xlat
gs
loope
pop
movb
adc
cmpsl
mov
shl
pop
sbb
xchg
shl
loope
mov
jo
sbb
inc
cltd
xor
fdiv
dec
jnp
addb
jge
sbb
sub
lds
cmpsl
test
cmpsb
pop
xor
xor
test
jp
xor
les
push
arpl
arpl
inc
jbe
loop
mov
xorl
loopne
aas
xchg
push
test
add
imul
xlat
filds
lods
xchg
sub
inc
pop
dec
push
inc
arpl
xor
dec
mov
xchg
test
inc
outsb
mov
nop
int3
cmpsl
adc
dec
stos
inc
lahf
add
or
sti
cmp
icebp
lock
fidivs
xlat
popf
aas
inc
in
push
xor
imulb
ja
lock
dec
popa
nop
nop
out
inc
and
mov
xchg
jns
mov
cmp
push
test
jnp
mov
xchg
mov
xchg
pop
fcomip
fsubrs
stos
int3
jae
sub
stos
cmpsb
test
xor
sub
in
mov
popa
adc
add
int3
push
push
push
or
mov
ja
imul
push
jne
pop
push
add
sub
xchg
mov
mov
inc
test
outsb
adc
mov
xor
pusha
movsl
mov
xor
cmp
icebp
sbb
mov
or
scas
outsb
jle
leave
shlb
pushf
jecxz
dec
lret
negl
das
sub
mov
les
xor
sbb
mov
aaa
pop
je
call
lret
add
outsb
in
movsb
jl
sahf
sub
ficompl
xor
dec
cwtl
push
inc
mov
shrl
gs
dec
push
pop
mov
test
sbb
mov
pop
sbb
shll
and
mov
mov
sbb
push
adc
sahf
mov
cmp
call
add
lret
loop
js
not
dec
out
sbb
push
shr
jo
or
hlt
xchg
cvtps2pd
roll
aas
mov
cmp
jo
add
add
pusha
ds
jmp
sub
imul
mov
in
stc
sub
xor
xchg
cld
mov
sub
enter
and
sub
int
adc
inc
xchg
sub
dec
adc
movsb
ret
insb
dec
mov
call
add
fnstcw
jg
xchg
lret
mov
mov
dec
pushf
xchg
addr16
or
jbe
push
push
mov
icebp
mov
out
jne
mov
shll
xchg
sbb
jnp
test
jae
into
ja
out
lret
call
mov
push
sbb
sub
jmp
popf
cltd
ret
shrl
ja
incl
das
mov
pushf
aad
cmc
inc
add
add
jmp
and
hlt
ficoml
nop
out
gs
bound
adc
mov
cmp
cmp
les
sbb
dec
mov
test
idivl
jg
js
in
gs
rclb
lret
cmp
iret
aas
and
sub
jmp
push
in
loop
pop
ret
jge
and
out
dec
data16
lret
cli
mov
mov
lock
out
cmc
test
std
js
push
mov
mov
popf
sub
daa
jnp
repz
lds
call
mov
jmp
bnd
cwtl
mov
inc
jne
loope
rol
sahf
mov
sti
and
fwait
lret
cld
mov
fdivrl
mov
fs
mov
mov
das
movsl
dec
mov
push
jb,pt
es
fisttpll
inc
mov
xchg
ljmp
mov
lret
push
inc
inc
mov
mov
dec
imul
aam
inc
ret
divb
sbb
in
mov
add
es
pop
cmpsl
insb
jp
js
pop
pusha
lods
ljmp
jae
mov
orl
fs
popf
scas
adc
xchg
push
std
or
and
int3
es
jge
adc
xor
stos
mov
aad
xor
repz
jecxz
not
addr16
adc
pop
xchg
pop
adc
fucom
neg
andb
lds
pop
inc
sti
dec
pop
cmp
scas
pop
js
xchg
lods
insb
jecxz
cmp
xchg
into
xlat
adc
lahf
imul
jb
addb
scas
repnz
push
sahf
xchg
ffreep
aad
test
orb
mov
ret
inc
dec
adc
push
add
and
cmp
lods
cmp
cmp
out
and
add
add
mov
cltd
fldenv
xor
mov
es
ds
mov
xor
xor
dec
or
adc
loope,pn
cld
into
popf
and
cmpsb
sub
pop
mov
clc
cli
mov
pop
mov
test
cmpsb
xchg
fistpl
repz
sti
rolb
mov
push
mov
pop
cmp
scas
in
fstpl
popa
lock
mov
sub
aaa
stos
lret
sub
sbb
mov
bound
cmp
jb
aam
aad
pop
and
sub
pushf
pop
sbb
rcr
jae
and
or
jmp
ret
jae
mov
mov
inc
add
mov
jge
add
int
popa
cmp
push
dec
out
add
movsl
push
cmp
or
clc
imul
xchg
orl
xor
ror
ret
aad
sti
mov
sbb
dec
inc
cmp
xchg
aas
jno
out
push
push
hlt
xor
icebp
repz
stc
mov
adc
stos
sub
dec
sbb
sub
popf
push
push
inc
repz
loop
pop
out
xchg
inc
adc
arpl
imul
dec
into
pop
inc
fsubs
icebp
push
lahf
leave
popa
sbb
adc
jo
jbe
inc
enter
push
shll
mov
mov
sub
data16
jnp
xor
xor
adc
lds
xor
sub
mov
cmp
add
je
xorb
popf
out
std
mov
addr16
les
popf
jb
or
push
fadds
in
insl
dec
mov
or
jmp
mov
scas
gs
ljmp
sbb
loopne
ja
pop
cmp
ret
pop
es
icebp
push
bound
xchg
fimull
sbb
das
mov
or
loope
gs
jns
or
fisubs
xlat
jg
pop
push
cld
mov
insb
jae
in
jae
rcl
xchg
mov
mov
or
das
in
sub
rcll
aas
pop
loop
dec
idivl
fs
adc
jecxz
xor
das
rorb
jae
sbb
adc
fcom
rclb
cs
adc
push
add
fs
xchg
dec
xorb
cmp
adc
mov
dec
stc
add
mov
ss
stos
sbb
or
incl
push
xor
fcmove
shlb
cmp
pushf
lods
test
dec
pop
mov
hlt
fdivrs
test
sbb
sbb
scas
mov
xor
mov
aaa
xor
jno
mov
jge
sbb
mov
push
pop
jo
test
xor
push
sbb
popf
das
cmp
mov
cltd
pop
push
mov
dec
repz
adc
sub
scas
adc
lods
push
inc
outsb
push
mov
xchg
lret
mov
arpl
sub
lods
scas
repnz
fwait
or
xor
mov
dec
clc
inc
mov
inc
mov
fcmovb
pop
sub
sarb
xor
dec
incl
xchg
pop
cmp
jmp
jl
aam
dec
push
lea
cld
repnz
mov
cmpsl
lret
push
mov
or
leave
mov
push
xchg
mov
fistps
mov
xlat
jp
daa
push
mov
and
mov
in
insb
or
cs
shl
out
jnp
cmp
fs
pop
ja
add
outsb
add
lret
mov
sbbb
out
sbb
es
mov
leave
xchg
int3
ljmp
xchg
push
pushf
adc
vmovdqa
lret
fwait
aas
into
jge
pop
fadds
inc
mov
xchg
mov
cwtl
pop
push
push
add
sub
xchg
clc
lea
jg
cmpb
repz
fcmovnbe
ljmp
mov
pop
xchg
pop
add
xor
addr16
sbb
xchg
pop
mov
push
mov
mull
sub
jnp
xor
mov
pop
sbb
xor
clc
ficomps
mov
mov
and
sbb
jae
arpl
xlat
loope
xchg
cmp
stos
lea
add
push
jg
cltd
fwait
testl
push
test
aaa
std
dec
ja
xor
cltd
mov
mov
lret
cltd
cmp
mov
lods
test
dec
leave
idivb
push
sti
pop
ja
hlt
insl
push
mov
icebp
in
inc
pop
daa
out
mov
test
adc
xor
and
ljmp
lods
negl
jecxz
push
pop
insl
push
cs
cmp
std
pop
pop
cmp
mov
inc
test
ds
mov
jp
addl
sbb
cmp
fucomp
cmp
fs
pop
xor
call
fucomip
icebp
les
fldt
je
mov
subb
lods
dec
inc
comiss
cmpsl
stos
cs
add
out
pop
cmpsl
dec
or
cli
inc
xor
aad
jo
pushf
pop
lock
js
add
jge
jns
jae
jmp
aam
sahf
enter
mov
outsl
shlb
xor
xor
mov
popf
cli
cmp
sbb
mov
inc
ret
adc
push
xchg
dec
enter
int
aas
sbbl
ljmp
ds
stos
imul
adc
sti
inc
lods
in
pop
sub
scas
dec
mov
mov
sub
cs
into
out
iret
xchg
push
jmp
lock
fisttpll
ds
je
mov
in
cs
into
imul
sarb
sti
jmp
inc
jne
pop
je
cmp
cmpsl
mov
in
test
pop
push
gs
int
fwait
xor
icebp
push
add
gs
jno
inc
insl
ret
ret
cli
cmp
cwtl
out
fists
adcb
xor
xchg
push
stc
push
clc
mov
jbe
andl
out
imul
arpl
xchg
fdivs
popf
mov
push
jecxz
cmp
daa
inc
dec
jle
in
out
scas
aaa
jg
mov
leave
stos
cwtl
cwtl
sbb
insl
loope
lea
das
mov
dec
sbb
mov
xor
xchg
call
rcrb
push
pop
mov
xchg
pop
out
idivl
addr16
push
xor
mov
cmp
xchg
rol
lcall
test
inc
xor
fcmovb
cmova
dec
cmp
and
jne
outsl
jne
pop
sti
imul
test
sub
cmpsb
dec
dec
add
leave
in
ds
mov
xlat
jle
xor
inc
adc
sbb
or
out
mov
add
sahf
mov
in
imul
icebp
and
loop
into
xor
in
mov
xor
pop
sbb
daa
sahf
dec
lcall
call
mov
ror
loope
mov
sub
jo
sbb
or
aad
add
push
dec
pop
aad
sbb
movsl
imul
lods
xor
add
icebp
push
in
dec
pop
loop
lahf
incl
mov
xchg
mov
push
mov
and
aad
icebp
xchg
fnstenv
sub
dec
xor
je
adc
push
in
cmc
test
divb
pop
nop
lea
push
scas
es
xchg
mov
nop
mov
test
pop
mov
mov
fwait
and
jle
lret
xlat
mov
ds
out
orb
adc
stos
cmp
push
mov
in
out
mov
fisttps
stos
mov
pop
mov
leave
iret
fdiv
loope
mov
sbb
xor
jg
add
lret
pushf
inc
nop
dec
lods
les
imul
out
pop
outsl
mov
xchg
xor
shll
jle
cmc
mov
jno
aad
repnz
sbb
scas
cmp
aas
mov
notb
add
push
iret
push
xorl
jnp
pop
dec
movsl
lahf
inc
scas
xchg
sbb
lcall
jo
repnz
mov
mov
and
ss
das
aas
int
int3
repz
push
mov
sahf
ficoms
or
bound
dec
add
decl
xchg
js
and
pop
add
cmpl
jg
fdivrs
cmpsl
sub
inc
dec
enter
lahf
scas
mov
cld
or
cs
pop
xchg
push
fs
and
push
ja
fldl
sbb
dec
ficoms
daa
les
fwait
insl
addps
pop
sub
and
into
adcw
push
aaa
mov
or
fcompl
push
lahf
loop
mov
sub
mov
cltd
test
xor
mov
jns
int3
adc
sub
aam
dec
call
mov
frstor
mov
push
addr16
cs
sub
cmp
mov
std
cltd
xchg
pop
mov
fcom
dec
adc
push
aas
stos
xor
sub
frndint
jl
cli
addb
xchg
add
clc
ja
pop
call
loopne
lods
sbb
fnstsw
add
das
mov
lcall
and
push
sarl
mov
push
pop
in
mov
cltd
push
mov
push
icebp
cmp
lahf
xchg
cmp
inc
sbb
add
xor
stos
dec
or
aad
imul
push
dec
xchg
in
add
mov
xor
iret
inc
cld
stos
or
sub
adc
cmp
fisubrl
mov
popa
or
clc
arpl
inc
xchg
xchg
daa
dec
mov
ljmp
out
jne
jb
inc
xor
mov
inc
mov
sub
xchg
test
inc
push
or
pop
fidivrl
dec
cmpsb
mov
sbbb
insb
mov
sub
in
sbb
stc
filds
pop
pop
add
cmpl
dec
mov
aad
ret
cld
jge
xor
xor
aas
rcll
and
sahf
fwait
adc
cli
sub
xor
pop
jp
and
mov
mov
cmp
xor
jns
mov
cmp
push
test
xchg
sbb
sub
stos
mov
aaa
pusha
jge
push
adc
insb
js
rcl
or
dec
mov
popl
sub
int3
push
pop
rcll
xor
cltd
mov
sarl
jb
adc
dec
sub
dec
out
fadd
cwtl
sbb
sub
xlat
iret
and
sub
and
add
stos
pop
mov
fsubrs
add
orb
in
sbb
ss
in
sub
lock
inc
mov
lods
aam
dec
adc
stc
and
push
insb
pop
int3
or
rcll
mov
data16
push
notl
push
aas
sub
inc
and
fstl
cmpsl
jp
fcomps
mov
test
push
sarb
mov
lcall
cmp
dec
fdivrs
pop
sbb
xchg
pop
outsl
cs
popf
aam
shll
fidivl
mov
js
and
jns
xchg
lret
dec
jae
cltd
pop
loopne
add
xor
fstps
outsb
loop
mov
add
inc
add
pop
push
mov
cmpsl
out
push
in
or
das
into
pop
and
fldt
or
nop
push
sbb
pop
push
jmp
in
push
sbb
xchg
xchg
mov
sbb
aas
aam
stos
in
xchg
je
xlat
push
adc
jge
xor
lock
lock
sub
cmp
and
adc
divl
fiadds
jo
or
adc
or
sahf
jmp
lahf
popf
clc
mov
out
jb
test
sarl
mov
inc
mov
fidivrl
scas
pop
jbe
pop
shll
jmp
cmp
xor
sbb
pop
inc
loopne
shlb
push
xchg
outsl
arpl
aad
mov
outsl
dec
pop
mov
dec
daa
pop
rcr
aad
or
nop
xor
jns
rorl
sub
jo
cmpl
cmovl
rolb
int
xor
or
sub
hlt
adc
roll
loopne
cmp
ror
adc
inc
mov
xchg
subl
fidivrs
hlt
mov
add
shl
xor
cmp
inc
sub
dec
xor
addr16
fstpl
pop
lret
jb
add
int
stos
sbb
lret
push
and
negb
pop
addr16
and
jecxz
jae
dec
sbb
push
xor
jp
pop
adc
dec
cs
sub
aam
fstpl
aad
or
arpl
push
pusha
jo
dec
mov
rol
fistpll
leave
fs
shl
cmp
adc
clc
inc
and
or
mov
in
loop
adcb
mov
push
fwait
sub
dec
and
inc
lcall
sub
sbb
loopne
mov
lea
leave
and
mov
push
jge
add
cmp
test
mov
adc
rcrb
popa
or
mov
js
imul
pop
iret
dec
aad
loop
clc
xor
stos
gs
mov
out
lret
mov
xor
lcall
out
or
jge
je
aas
or
addr16
push
dec
test
sub
inc
xor
jg
mov
sub
sub
mov
sahf
fwait
push
mov
in
xchg
iret
je
dec
popa
shll
pop
add
loope
jns
daa
andl
push
cmpsl
jns
std
cmp
mov
mov
shlb
stc
mov
das
add
cmp
cmp
arpl
jge
test
test
and
xor
pop
xchg
mov
mov
sub
imul
mov
imul
icebp
and
inc
sbb
add
sarl
aam
and
mov
jle
call
sti
sbb
rclb
mov
not
ret
xchg
push
lock
movsl
insb
pop
or
xlat
lahf
int
jmp
addr16
in
or
ljmp
jbe
sub
pop
test
or
aam
mov
push
insl
shl
pop
xorb
jb
mov
sub
adc
dec
cltd
xchg
loope
shl
adc
es
cmp
push
enter
daa
push
pop
xchg
aaa
cmp
sbb
sbb
loope
jne
pop
mov
clc
stc
mov
push
dec
subl
jp
push
inc
mov
dec
pop
push
mov
cmp
scas
sbb
loope
lock
xorb
roll
inc
and
mov
mov
jp
jns
movsb
inc
mov
aas
xchg
jle
xor
mov
mov
imul
push
inc
pop
out
pop
lock
sbb
add
mov
dec
adc
mov
xchg
jge
adc
or
add
pop
or
stc
fistpl
es
adc
movsb
adc
mov
cmp
push
inc
push
jns
cmc
add
fwait
dec
rcll
xchg
lods
adc
lds
jae
int3
push
adc
push
stos
mov
es
fadd
lret
cld
xorb
ret
pop
sbb
jnp
fildll
popf
out
outsl
inc
out
jb
shr
pop
jle
mov
cs
xor
icebp
and
hlt
sbb
xor
sti
push
lret
pop
push
in
rorl
inc
pushl
sti
xchg
ror
fnsave
repnz
inc
mov
inc
and
and
adc
push
sti
rorl
push
mov
scas
shr
scas
or
and
repnz
in
in
inc
push
aad
or
sub
mov
cmpsl
adc
mov
push
mov
push
or
xor
imul
sub
or
stos
add
jg
je
fnstcw
bound
stos
aam
sbb
ja
rcrl
push
ss
cwtl
mov
add
inc
push
inc
and
pop
adc
jno
stos
int
fbstp
and
mov
xor
adc
jmp
mov
mov
sti
aaa
aas
sbb
cmp
ljmp
or
insb
cli
bound
mov
xchg
add
pushf
jae
filds
or
jg
sbb
aad
sub
cli
xchg
sbb
enter
hlt
adc
bound
aam
sub
clc
jno
cmc
stos
jecxz
add
fbstp
fstpt
outsl
dec
push
xor
mov
lock
loop
push
lods
sub
mov
jg
cmp
addr16
push
popf
arpl
and
outsb
push
cmp
lods
sbb
push
pop
inc
pop
pop
sbbl
fwait
sub
push
sti
lods
ret
in
xchg
popl
leave
ja
sahf
in
cmpsl
and
mov
dec
mov
or
fstp
icebp
push
mov
repz
vpunpckhwd
movsl
xor
test
or
dec
dec
nop
test
pop
xor
add
test
push
jne
cmp
cmp
mov
sbb
push
aaa
arpl
pop
nop
push
dec
jne
int3
adc
outsb
xchg
xchg
xor
or
loop
adc
xor
rcrb
inc
hlt
out
mov
sub
enter
sbbb
imul
jne
clc
jl
mov
imul
jnp
push
rcrl
in
out
pop
or
sbb
arpl
enter
inc
cwtl
mov
pop
cmpsl
lahf
repz
push
test
sahf
xor
sti
and
subl
inc
jb
rcrb
mov
rorl
imul
mov
adc
and
cltd
daa
out
push
mov
pop
sub
aam
sahf
movsb
inc
aam
subl
add
fistl
xchg
mov
aam
xchg
dec
fs
push
sub
adc
push
scas
enter
in
adc
lock
dec
repz
hlt
push
push
mov
adcl
jmp
insb
js
xlat
popf
test
arpl
fmulp
into
pop
fildll
rorb
mov
push
and
jle
pop
dec
xchg
xor
pop
pusha
fcomps
test
push
sar
push
sbb
inc
jecxz
dec
out
push
adc
jg
lock
push
or
or
mov
hlt
lahf
mov
xchg
mov
push
adc
mov
imul
pop
dec
add
mov
adc
or
insl
sahf
cltd
mov
stos
push
mov
addl
add
ljmp
fisubs
popf
popf
dec
clc
pusha
aad
push
dec
mov
mov
mov
pushf
lods
rolb
jnp
xchg
dec
add
out
cli
mov
outsl
scas
in
adc
mov
outsb
pop
jnp
dec
jns
les
xchg
out
daa
adc
xlat
cltd
bound
lret
aad
jne
jp
add
cld
pusha
cmpsb
pop
mov
pushf
inc
mov
loop
or
adc
int3
push
je
mov
pop
stos
stc
clc
pop
add
or
fxch
inc
std
mov
jno
shlb
les
sahf
xchg
fwait
shrl
aam
pop
cmpsl
mov
incl
jae
mov
xchg
js
mov
mov
cltd
stos
add
negb
and
orb
pop
add
jo
jbe
mov
popl
inc
mov
pop
aas
push
inc
xor
jns
out
adc
js
xlat
das
out
xor
push
mov
outsb
inc
andb
adc
cmc
inc
sub
addr16
or
mov
les
icebp
lret
and
out
xor
mov
enter
bound
sub
mov
mov
push
addr16
xchg
fildll
dec
dec
lcall
ret
out
inc
and
pop
mov
fimuls
push
loopne
out
insl
pushf
imul
je
ds
xor
pop
push
sahf
adcl
ja
xchg
push
sub
push
sbb
dec
fsub
clc
sbb
js
dec
push
js
sub
dec
rcrl
inc
jge
pop
mov
xchg
pop
orb
dec
add
aad
dec
iret
in
mov
sahf
jle
xchg
stos
lret
sbb
mov
jb
nop
adc
mov
jbe
mov
sbb
sarl
cmp
in
xchg
pop
mov
clc
push
enter
andb
xorl
orl
ffree
mov
sub
std
std
ficoms
cmp
adc
sub
test
test
sbb
cmp
cltd
loopne
rol
cwtl
adc
cmpsb
popf
sbbb
lea
push
test
dec
xor
cmp
mov
rorl
xor
arpl
adc
cmp
jg
pop
subb
jne
clc
dec
cmpsl
add
mov
sub
out
in
repnz
xchg
adc
or
jns
and
xchg
add
push
aad
pop
ret
les
das
mov
in
mov
and
xlat
push
out
jno
aaa
sub
inc
xor
pop
xlat
test
lods
push
add
ja
lea
call
enter
fildl
rol
adc
mov
adc
mov
js
mov
add
mov
and
dec
xor
aas
and
and
ret
and
push
fcomps
jge
cs
jno
sub
push
push
mov
pusha
subb
jp
inc
xchg
lcall
subb
loop
jecxz
pop
stos
mov
pushf
push
jb
adc
jmp
sub
mov
adc
inc
inc
icebp
pop
loopne
xor
mov
add
mov
shrl
dec
pusha
or
adc
push
in
ss
rcl
rcrb
pop
jmp
add
xor
lock
fwait
push
lret
lods
xchg
faddp
push
nop
cmp
xchg
mov
flds
mov
rorb
gs
rorl
sub
dec
cmp
inc
iret
pop
mov
jg
leave
hlt
call
lock
out
aam
popa
sbb
cmp
push
jno
movsb
sarb
scas
mov
pop
mov
mov
adc
mov
hlt
or
xor
cmpsb
and
out
insb
jne
push
std
stos
mov
lea
dec
sbb
mov
jecxz
mov
push
fnsave
mov
mov
negb
cwtl
js
and
sarb
outsb
mov
inc
add
ss
mov
cmp
ss
addr16
cmp
sub
jae
sbb
lods
out
imul
nop
mov
daa
test
or
lock
popa
mov
les
or
fwait
pop
and
in
inc
or
cmc
in
push
inc
aad
test
sub
sbb
imul
mov
loop
lods
mov
out
movsl
mov
fisttps
xor
pushf
jno
leave
in
cmp
mull
cmc
xchg
xor
cmp
adc
lock
leave
sub
insb
scas
mov
mov
movsb
ja
sahf
js
mov
stc
outsb
jmp
movsb
out
test
in
push
ret
mov
push
in
cs
std
and
ljmp
in
insl
push
inc
xchg
push
sbb
insl
je
or
sbb
sahf
xor
push
ljmp
push
jmp
xorl
rclb
lods
ret
shrb
jle
inc
fidivs
nop
xchg
lret
pushf
cmp
mov
cmpsl
addl
daa
inc
inc
jp
mov
ficomps
lret
leave
adc
stc
jns
push
cmp
add
adcl
pop
xor
push
inc
push
ss
adc
or
jecxz
jno
sbb
and
js
and
and
add
fnstenv
inc
cmp
xor
aad
adc
ret
sbb
shrb
inc
sbb
mov
nop
cwtl
pop
jl
xchg
mov
push
xor
out
mov
and
push
xor
imul
pop
mov
mov
xchg
fiadds
ja
call
dec
jae
push
xor
fucomp
dec
pop
push
fnstenv
into
mov
in
xchg
pop
xor
and
pushf
mov
mov
ds
sti
xchg
add
dec
jge
inc
push
loop
imul
cmc
add
je
mov
jle
cmp
ja
xchg
pop
mov
leave
cltd
mov
sub
sbb
ficoms
push
push
and
lock
push
fmuls
lods
lret
inc
ss
add
lds
mov
push
xor
dec
xchg
aaa
dec
xor
clc
push
add
out
inc
or
leave
fbstp
jp
sahf
ffree
dec
mov
decl
sar
popa
movsl
mov
mov
loope
xchg
and
pop
aam
dec
dec
or
lret
outsb
add
mov
cmp
xchg
sub
jle
inc
sbb
xchg
xchg
aas
inc
divl
dec
and
jp
mov
mov
addr16
les
in
mov
fs
jg
addr16
and
dec
dec
sub
shlb
imul
xor
adcl
les
push
sub
pop
aaa
xchg
sbb
jnp
jbe
mov
push
aam
repz
cmp
inc
sub
mov
sub
push
mov
mov
jle
inc
cmp
cs
jp
rcr
xchg
clc
xchg
js
adc
mov
into
jmp
cmp
or
in
lods
add
insl
sti
pop
fisttpl
xchg
insb
jle
negl
cmp
into
xchg
outsb
jecxz
ljmp
cwtl
clc
xor
xor
lahf
cli
dec
addb
push
or
dec
pop
jle
or
js
stos
fstpt
stos
xchg
pusha
mov
jae
jge
fwait
lret
ljmp
insb
pop
or
andb
sub
or
jle
je
fnstsw
inc
dec
test
sti
test
sarb
rolb
or
test
sub
mov
call
int3
cmp
insl
or
xlat
imul
mov
test
add
pop
jp
mov
mov
lea
cmc
pop
sub
push
adc
or
pop
jb
in
frstor
idivb
fs
repz
mov
push
into
or
push
cmpsl
jmp
pop
inc
cli
mov
push
inc
es
testb
imul
jne
aad
das
ja
mov
into
ljmp
out
jno
xor
fisttps
xor
and
sbb
test
sti
arpl
jle
fwait
icebp
into
inc
stos
and
andb
mov
aam
mov
jo
add
pop
sbb
mov
movsl
orl
or
add
lret
in
aas
push
and
mov
fstps
stos
iret
push
xlat
in
call
sub
and
in
inc
and
xchg
sbb
movups
inc
adc
imul
ja
mov
mov
mov
xlat
cwtl
xchg
push
or
imul
xchg
bound
and
and
fsubr
rcll
sbb
pop
iret
je
inc
sub
xor
inc
sbb
mov
mov
push
mov
in
call
sub
mov
xor
mov
sub
loop
lods
das
add
mov
xchg
adc
xor
mov
lods
mov
push
dec
insl
pop
daa
repz
cmpb
ljmp
and
cmpl
xchg
xchg
scas
inc
inc
mov
adc
insl
jge
push
jl
imul
adc
add
insb
insb
jl
xor
test
jno
sbb
out
mov
mov
fidivrs
push
push
frstor
sub
adc
orb
cmp
fbld
fidivrl
adc
xchg
or
jle
add
dec
sahf
out
and
sahf
out
jmp
ret
data16
repz
inc
mov
mov
or
loop
push
push
je
cwtl
add
xlat
pavgw
xor
or
aas
jmp
and
subl
loop
fisubl
jg
divb
xor
aaa
inc
jecxz
lods
push
iret
dec
jb
adc
subb
lret
lods
scas
shl
or
jge
push
loope
xor
xchg
push
add
gs
enter
test
pop
xor
cmp
sahf
and
pop
ljmp
stc
mov
jmp
mov
mov
lcall
mov
sub
insb
dec
xchg
stos
je
rorl
mov
xor
movsl
mov
nop
adc
mov
out
or
dec
sbb
add
pop
inc
sbb
mulb
ret
hlt
lahf
movsb
cmpsb
pushf
rorb
push
imul
sbbl
out
fstl
pop
or
adc
jl
data16
in
insb
insb
sbb
jne
divb
push
pop
pop
shl
into
lret
pop
or
stos
out
mov
mov
inc
mov
ficomps
rol
aam
icebp
pop
push
cmp
into
rep
jns
test
push
ljmp
or
jb
push
adc
and
cwtl
inc
mov
ja
xchg
cmpsl
mov
mov
mov
or
lahf
jnp
mov
pop
mov
popa
lock
xchg
adc
push
dec
inc
repz
mulb
mov
sub
ret
cltd
pop
push
mov
sub
shll
in
adc
push
into
std
jae
jae
jno
and
cmpsl
call
or
mov
fnstenv
and
lea
adc
sub
call
dec
dec
cmc
xor
pop
dec
cmp
insb
cmpsb
pop
fwait
mov
adc
out
mov
subl
or
popf
sti
insl
test
or
mov
pop
push
add
xchg
mov
and
rcrb
and
xchg
pop
xor
adcl
inc
pusha
mov
xor
mov
aad
mov
push
test
popf
rcl
pushw
jns
iret
push
dec
push
jecxz
sti
mov
sbb
mov
jp
in
stos
mov
test
scas
daa
add
push
call
xchg
jne
push
imul
in
xor
jo
add
rcr
faddp
cmp
fiadds
loopne
out
inc
fcomi
in
xchg
int3
ret
sbb
sbb
fcoms
aaa
or
fdivr
jnp
mov
inc
mov
cmp
mov
jo
std
mov
je
sub
xorb
into
jo
adc
gs
dec
in
bound
movl
stos
add
mov
dec
stos
inc
inc
mov
xlat
inc
cmpsl
jg
je
lcall
cld
cmp
dec
push
cmp
inc
cmp
shlb
adc
cmc
lock
add
out
pusha
clc
mov
stc
or
iret
adc
pop
cli
pop
inc
shrb
mov
inc
push
dec
or
ljmp
inc
aad
push
int3
fidivl
rol
jae
and
and
int
xchg
add
mov
adc
cmp
cmp
fstpl
mov
rcrb
and
add
push
mov
incb
inc
insb
movsl
int3
popf
sar
std
pop
ljmp
inc
pop
into
lret
push
cmp
in
sub
shlb
aad
cmp
jno
sub
cli
cmc
fdivr
xchg
imul
out
ds
ret
lcall
rcl
ljmp
scas
in
loope
sbb
mov
outsl
inc
out
jne
cmp
push
pop
pop
hlt
inc
aaa
fcmovu
out
pop
lret
pushf
or
test
andb
std
sub
mov
movsl
test
xor
fcmovnb
cmp
mov
js
fistpll
jbe
sahf
jbe
pop
dec
mov
jb
mov
cli
outsl
add
xchg
cld
ffree
push
imul
jae
mov
movsl
cmpsl
jnp
cmp
inc
ljmp
push
push
sbb
xchg
push
xor
andl
insl
pop
cmp
xchg
out
gs
out
out
sbb
push
mov
dec
enter
ret
cmp
xor
mov
xchg
push
int3
outsl
loope
xor
dec
fwait
stos
loope
adc
or
mov
cltd
xor
xchg
daa
push
xchg
and
addl
mov
adc
sub
pop
sbb
mov
gs
sbb
pop
ret
iret
jmp
add
xor
mov
or
sub
inc
mov
psllq
mov
or
xchg
idivl
push
inc
adc
xor
mov
sub
add
push
sbbl
pop
xor
cmp
aam
ret
cmp
or
sub
insl
jae
xchg
push
mov
xchg
fldl
arpl
lret
dec
mov
enter
pop
xorl
cs
ja
adc
dec
fcoms
test
test
ret
sub
jle
inc
cltd
inc
scas
inc
std
cltd
jmp
out
nop
popf
lock
dec
ja
sbb
in
clc
ja
jl
inc
adcb
sbb
mov
cmp
cmp
mov
cmc
ss
mov
add
add
mov
pop
outsb
test
pop
in
fstpt
cwtl
jnp
int3
ds
adc
out
add
sub
cmpsb
scas
ja
xchg
lahf
pop
add
fwait
jns
cmp
sbb
dec
adc
pop
mov
mov
push
inc
add
ss
jmp
loopne
push
or
cwtl
pusha
jne
xchg
fldt
in
mov
inc
test
adc
loopne
cld
out
jbe
sub
push
or
sub
push
or
movsl
int3
mov
xchg
push
mov
call
mov
jb
sub
inc
es
aaa
xchg
cwtl
sub
add
imul
call
test
roll
xlat
pushf
cmpsb
mov
dec
int
cmp
cmc
cmpb
pop
mov
lcall
xchg
fstps
cld
std
imul
add
mov
cmp
rcl
pop
je
cmp
xchg
fbld
pop
ficomps
inc
out
fnstenv
mov
scas
pop
mov
sbb
lcall
lock
out
and
mov
fs
cltd
and
pop
test
nopl
retw
mov
fldcw
shrb
mov
lock
jbe
push
aad
pop
jp
lds
mov
add
or
int3
xchg
adc
arpl
fxch
lret
mov
loopne
jb
adc
jle
add
add
in
push
jp
and
mov
pop
sub
jl
cmpsl
repz
cwtl
fidivrs
mov
inc
xchg
sbb
xor
xor
movl
adc
mov
rclb
out
jo
mov
call
and
mov
loop
xor
decb
inc
xchg
xor
xchg
out
push
popa
push
pop
mov
xor
add
leave
push
pop
mov
cmp
std
or
loop
mov
imul
nop
push
movsb
test
test
ret
add
xchg
jnp
and
imul
cmp
sbb
and
mov
cmpsl
mov
add
call
add
in
cmp
push
jmp
xchg
test
insb
mov
rorb
cmp
xlat
mov
lret
sub
jne
cmpsl
aad
lea
sbb
sbb
or
pop
adc
dec
xor
inc
loope
push
push
xorl
dec
out
into
mov
repz
popf
xor
fstl
icebp
cmpsl
scas
pop
add
xor
pushw
xor
roll
cmp
outsl
mov
std
push
mov
aam
pop
ds
jno
sub
push
mov
lock
popf
lret
cmpsl
mov
mov
jae
xchg
aas
mov
add
shrl
inc
lds
lods
das
into
jbe
fldenv
dec
mov
ja
push
pop
out
je
test
or
xor
ja
and
pop
lods
enter
cmp
out
sub
les
fisubrl
jmp
dec
das
jge
sub
dec
mov
jns
shll
push
mov
lds
xchg
in
mov
mov
lods
or
repnz
jno
mov
push
jae
repz
shll
fwait
inc
lods
out
insb
or
bound
fbstp
in
mov
sti
pop
or
add
enter
shl
cmc
cmp
out
mov
ja
or
cli
mov
mov
aaa
jne,pn
test
lahf
test
add
popa
fisubrl
adc
inc
orl
inc
push
adc
push
aas
xchg
cmp
in
pop
mov
mov
pop
je
nop
gs
pop
push
lret
in
add
pop
icebp
fnstsw
ret
mov
bound
xchg
dec
xor
jns
in
mov
and
sahf
fists
in
bound
imul
add
fucomp
mov
and
and
push
inc
fsub
mov
sbb
sbbb
adcl
cli
adc
aaa
mov
sbb
or
es
loop
lock
cmp
mov
insb
and
in
xor
hlt
add
sub
testl
jae
in
cmpsl
xor
shll
je
sub
jmp
ds
sbb
mov
aaa
cmpsl
add
xor
pushf
cltd
fcoml
daa
dec
xchg
push
loopne
xor
jecxz
pop
mov
or
movsb
push
pop
jp
jae
notl
loop
sbb
mov
fsubrs
shlb
pushf
fmul
cmp
rcll
pop
sub
mov
dec
lods
mov
negl
and
or
sub
call
jbe
cmc
cmp
jae,pn
mov
pop
and
test
in
call
test
pop
push
sub
xor
lock
insb
lahf
clc
mov
push
arpl
int3
pop
mov
dec
fstpl
aam
enter
adc
scas
jae
sahf
push
es
lret
loope
lock
fdivl
sub
movsb
sti
lds
pop
lock
sub
cmp
xchg
in
xchg
mov
adc
lahf
push
loopne
and
mov
adc
or
mov
or
cmp
jle
jns
sbb
dec
adc
add
xor
call
cwtl
add
mov
mov
stc
xchg
jle
inc
mov
pop
sti
dec
ds
or
out
int3
aas
push
mov
dec
xchg
orb
ljmp
dec
mov
adc
pop
fucomp
ficoml
cwtl
in
sbb
call
out
mov
pop
xor
push
sub
xor
or
and
mov
pushf
in
sub
popf
adc
jne
icebp
pusha
or
enter
xchg
fwait
mov
les
loope
jmp
mov
out
outsl
xchg
hlt
and
jecxz
fs
mov
ficomps
fldenv
dec
dec
and
int3
push
push
stos
lock
xchg
aas
fwait
xchg
add
inc
mov
xlat
xorb
cs
cmpsl
pop
sbb
iret
xlat
frstor
jo
jnp
or
sub
addr16
lock
pop
xchg
fdivl
xor
dec
test
pop
xor
cld
test
dec
fwait
adc
fidivrl
adc
xchg
dec
fwait
cmp
add
fsubrs
ret
lock
sbb
roll
test
mov
inc
mov
es
mov
cwtl
imul
lods
xchg
dec
in
mov
adc
hlt
mov
mov
fisttpl
lea
push
xchg
sub
mov
sub
adc
mov
push
sbb
movsb
int3
mov
test
add
jae
ss
mov
hlt
das
ljmp
mov
shrb
inc
fisttpl
cmp
ret
mov
lock
fisttpl
xlat
pusha
sub
pop
mov
test
cmc
pop
jns
mov
lea
fcomp
or
push
cmpsl
ret
sub
xor
ja
push
in
hlt
lds
push
dec
sub
push
aaa
cmp
cmp
jb
das
cwtl
scas
add
out
ja
xchg
inc
dec
lcall
stos
dec
ja
aam
fnstenv
inc
push
addr16
adc
mov
dec
adc
and
loopne
push
in
mov
out
in
bound
xchg
sti
mov
mov
mov
lahf
jae,pt
mov
mov
and
in
or
jo
mov
or
jmp
frstor
push
in
sahf
inc
mov
rorb
daa
xchg
add
pop
push
das
lods
inc
insl
mov
daa
loope
pop
jle
push
test
jp
xchg
mov
pop
ss
adc
dec
jg
add
inc
jmp
xchg
ret
in
pop
pop
gs
inc
repz
sbb
jge
mov
mov
push
dec
or
sbb
cmp
mov
lahf
jecxz
movsl
adc
dec
xchg
pop
cld
jp
in
fildl
add
sbbl
pop
push
callw
loopne
out
mov
pop
push
push
push
int3
fiaddl
hlt
adc
aaa
loop
pop
jmp
stos
shlb
mov
xor
dec
mov
addl
add
out
shrl
icebp
fnstsw
or
mov
or
stos
or
es
mov
or
scas
scas
and
cld
outsl
movsl
xchg
xor
xchg
xor
repnz
mov
cmp
push
cmc
jle
mov
repz
xor
aas
insb
xor
jae
jl
jo
pop
lret
hlt
mov
mov
inc
jbe
mov
test
adc
loopne
mov
adc
cmpsl
push
xlat
pushf
clc
in
jbe
call
sub
addr16
cmpsl
aaa
inc
lret
sahf
or
rcrl
add
mov
addr16
pop
xor
jnp
testl
dec
das
je
or
sub
js
xchg
or
fistps
ds
fwait
imul
xchg
pop
dec
dec
popf
clc
aam
or
jnp
sbb
fimuls
stos
pusha
icebp
jns
xorl
aam
sub
pop
add
out
lock
repz
xchg
testb
leave
fidivrs
sbb
jecxz
jp
add
int
pop
mov
or
inc
add
test
fnstsw
xor
ds
imull
add
mov
jbe
bound
lods
cltd
out
pop
jbe
fimuls
mov
fcoms
mov
dec
jns
mov
gs
pop
stos
iret
ljmp
andb
movsb
inc
pop
sub
call
rcl
out
movsb
xor
xchg
sti
call
mov
mov
pop
scas
inc
les
fsubl
mov
andl
stos
mov
in
lret
add
and
das
pop
jl
sub
and
and
lahf
inc
xor
or
sbb
and
pop
xlat
sub
dec
mov
xor
mov
sub
fsub
fisttpl
lock
mov
fstpt
push
sbb
outsb
add
fs
pop
xlat
dec
frndint
imul
mov
sbb
imul
out
mov
xchg
or
bound
jmp
jecxz
pusha
and
adc
jmp
sahf
dec
cmp
lods
jp
push
mov
in
mov
mov
loope
inc
sbb
nop
mov
add
int3
and
sahf
jl
add
xor
jnp
cmp
dec
inc
ret
fidivrl
inc
sub
in
fdivr
mov
jns
adc
lock
loope
mov
and
test
lcall
push
fmuls
adcl
push
jl
mov
bound
cmp
adc
outsl
fdivrl
mov
sti
pop
xchg
sti
xlat
pop
inc
fdivrl
in
sarl
mov
xlat
adc
cltd
jmp
ret
ret
adc
pop
push
in
sub
ds
push
jg
sbb
adc
mov
jecxz
mov
aaa
fmull
push
push
pop
ds
jbe
mov
xor
lidtl
sarl
or
pop
aad
fldt
and
inc
sahf
sbb
sub
les
cmc
sub
pusha
push
int3
push
inc
in
in
cmpsb
cwtl
xchg
push
ret
fbld
repnz
sub
and
pushf
insb
adc
jge
lods
sahf
mov
cwtl
fmulp
ret
mov
lds
loopne
insl
bound
adc
scas
and
xor
sbb
int3
xchg
inc
cmp
xlat
jb
das
nop
mov
movsb
rcrb
movl
xchg
adc
sub
outsb
or
jae
xor
jns
lock
cmp
adc
stos
add
cmp
xor
mov
out
sbb
shrl
cmp
mov
das
adc
or
std
test
push
cmc
enter
pop
sbb
sub
cmc
orl
int
lahf
nop
pop
test
inc
ret
pop
inc
mov
xor
imul
dec
cmc
dec
imul
ret
push
addr16
sar
mov
dec
cmc
xchg
xchg
repz
inc
sub
push
jb
aad
push
jnp
pop
lahf
xor
push
dec
inc
iret
sbbb
test
int
lds
loop
ret
pushf
jmp
pop
mov
fs
push
das
sbb
aas
ret
add
add
or
cmp
and
pop
sbb
faddl
shlb
and
mov
mov
js
push
mov
ja
add
mov
xchg
loopne
xor
adc
cwtl
out
adc
loope
pushf
fists
int3
stc
ret
jno
in
and
xchg
add
and
rclb
add
testl
dec
fldenv
mov
xlat
pushf
dec
in
add
popa
test
and
ret
xorl
scas
jbe
fcomps
jl
mov
stos
int3
jno
xor
insl
test
mov
jmp
addr16
pop
mov
mov
xchg
jnp
jmp
dec
sub
repz
in
jecxz
sbb
jns
mov
popa
xchg
dec
xor
xor
mov
xchg
ds
jb
call
push
jle
add
xlat
sub
inc
and
sbb
fldl
mov
pushf
sub
xchg
push
fidivl
inc
aas
mov
inc
jb
cmp
dec
adc
sub
push
subb
sub
sarb
sarl
mov
cmp
mov
outsb
jmp
cmp
adc
jecxz
mov
sub
idivb
sbb
mov
iret
xorl
inc
and
mov
sbb
les
lahf
xchg
int3
pop
sbb
das
mov
rclb
ss
jo
jne
inc
cmp
jns
out
mov
adc
cmp
insb
lock
inc
sub
sub
cmc
mov
jmp
repnz
cmp
and
fidivrl
or
daa
in
stc
daa
xchg
stos
mov
jp
sub
inc
push
dec
jmp
xchg
pop
xchg
add
push
into
and
mov
scas
push
adc
cmp
push
mov
scas
or
xchg
mov
push
lea
test
pop
and
jmp
out
sub
pop
jo
cmp
mov
nop
sbb
fmul
ret
std
es
xor
mov
scas
jle
jo
scas
nop
jns
test
xchg
repz
adc
jp
stc
out
addr16
inc
dec
insl
sbb
int
adc
mov
sahf
sub
or
cli
mov
pop
cmpsb
aas
out
xchg
sbb
and
inc
mov
dec
inc
push
jge
loop
sbb
dec
adc
js
pop
scas
lret
add
popf
insl
add
leave
cld
xor
add
mov
sbb
movsl
xchg
dec
push
xor
lcall
xorb
or
scas
mov
dec
push
jae
pop
push
fistpll
ds
hlt
aas
rorb
outsb
andl
std
mull
add
sub
shrb
leave
test
into
jne
cltd
addr16
or
arpl
add
lret
or
jns
push
add
push
sti
dec
xchg
sar
scas
adc
mov
xor
fisubl
inc
lods
add
mov
fnsave
pop
mov
mov
cmp
sbb
cmp
aad
mov
xor
inc
inc
jle
insl
repz
cltd
test
ret
or
push
sub
fisttpll
test
pop
xchg
mov
cmp
out
mov
adc
dec
pusha
mov
cmp
sbb
mov
push
pop
out
mov
les
sbb
xor
adcb
dec
pop
mov
adcb
mov
inc
sbb
mov
xor
adc
loope
out
cmp
stos
dec
daa
out
jb
stos
cld
pop
mov
shrl
push
inc
mov
das
xchg
pop
mov
and
cmpsl
gs
cmpl
add
xor
inc
or
cmp
movsb
pushf
jb
mov
add
sbb
ficoml
shlb
pusha
pop
out
lret
test
mov
in
jg
ja
pop
dec
pop
cwtl
adc
test
push
pop
js
xchg
jl
dec
pop
jns
jg
mov
hlt
inc
pop
adc
adc
cmp
popaw
add
icebp
lret
iret
outsb
pop
xchg
sarl
int
mov
faddp
xor
ret
inc
cmc
aas
push
faddl
inc
sbb
test
mov
jns
inc
pop
xor
mov
popa
ret
or
add
jmp
push
xor
daa
into
in
push
xlat
or
in
shrb
inc
adcl
mov
loope
iret
mov
out
ror
jmp
push
and
inc
daa
repnz
pop
ret
pop
mov
fistpl
cmpsb
ret
inc
clc
inc
or
dec
cmp
inc
jns
add
jne
das
aaa
sarb
xor
pop
mov
cmp
movsb
lret
adc
out
iret
mov
je
ds
mov
filds
sbb
xor
sti
inc
cmp
dec
dec
dec
pushf
aad
cmp
aad
loope
ds
cwtl
data16
in
and
call
push
jb
in
outsl
mov
jno
lods
sahf
adcb
inc
cmp
adc
inc
fimull
mov
or
adc
decl
ret
push
dec
sbb
fstpl
shlb
xor
ja
jne
or
mov
stos
imul
jecxz
adc
test
inc
aad
hlt
out
test
pop
pop
fdivl
jbe
mov
xor
fisttpll
adc
inc
push
mov
or
sub
adc
mov
push
in
or
or
jae
jno
cmp
fwait
jb
std
mov
inc
fisubrs
lds
dec
iret
imul
leave
shll
push
sub
mov
jnp
or
dec
inc
mov
sbb
sub
sbb
scas
or
mov
call
inc
jle
inc
cld
mov
fcmovnbe
lock
push
ds
adc
sbb
or
pop
cmp
mov
jp
scas
or
sarb
jmp
test
sub
xor
in
sub
out
pop
pop
mov
ret
pop
mov
mov
xor
mov
mov
filds
mov
roll
push
in
cs
mov
gs
fistpl
push
aaa
lock
push
add
jb
pop
pop
mov
jnp
push
in
sub
cli
iret
and
sahf
mov
xchg
and
sbb
mov
mov
and
aas
ds
dec
or
adc
inc
test
cmp
push
xlat
leave
popa
xor
lahf
lods
out
adc
sbb
psubsw
repnz
in
mov
in
adcb
mov
pop
aam
sub
iret
sub
xchg
vpsllw
cmp
stos
cmp
ret
jnp
fnstenv
ret
cmp
lret
xchg
pop
mov
test
and
lock
pop
shl
shll
sub
pop
daa
cmpsl
pop
jmp
xor
dec
int3
js
sbb
cmp
mov
pop
xor
popf
lcall
sub
sbb
hlt
jge
movsl
xchg
in
xor
adc
adc
inc
and
mov
push
sbb
inc
xor
in
addr16
scas
adc
xchg
clc
sub
xchg
nop
mov
xor
ret
outsb
push
ss
pop
sub
xchg
inc
and
pop
fisubrl
xchg
cmc
push
fbstp
jmp
fcoms
push
fdivl
ficomps
cmp
or
imul
sub
xchg
pop
out
lock
xchg
sub
push
pop
repnz
jne
out
xchg
dec
imul
cmp
inc
pop
add
add
out
cmpsl
sahf
jno
out
addr16
or
pop
mov
mov
adc
mov
in
fbstp
in
cmp
lods
and
fisttpll
leave
icebp
xchg
les
cs
mov
repnz
and
cmp
stos
addr16
sbb
ret
push
ret
jp
lds
xchg
leave
or
stos
cmpsb
jbe
fwait
sbb
dec
inc
push
or
dec
fisttpl
loop
mov
mov
into
addl
pop
mov
subl
ficoml
call
out
mov
jmp
pop
sub
or
inc
fldcw
push
rol
and
sub
loop
sbb
xchg
pushf
jo
ret
movsl
pop
mov
xchg
leave
xlat
mov
sub
mov
xchg
imul
cltd
clc
mov
das
insb
push
iret
dec
add
mov
fstp
lock
push
adc
fstps
dec
sbb
jle
mov
and
inc
rcrb
shl
call
lret
push
push
ret
mov
mov
bnd
and
aaa
div
shrb
dec
movsb
sbb
add
adc
mov
dec
sbb
cltd
icebp
negb
shlb
pop
push
add
fisubrl
subb
enter
and
cli
dec
test
xchg
and
lods
pusha
popa
xchg
jg
push
cmp
test
pop
ficompl
mov
xchg
mov
jle
pop
lods
xchg
push
int3
xchg
into
fstpl
inc
ds
push
and
fcmovnbe
and
ds
cs
dec
movsl
mov
fisubs
aam
push
hlt
pusha
cmc
xlat
inc
xchg
sub
les
ss
inc
test
push
iret
scas
test
pop
fdivp
and
xchg
sbbb
fidivs
push
out
xchg
push
mov
push
pop
mov
mov
insl
enter
into
stos
pop
loop
jp
repnz
or
push
iret
jmp
mov
pop
imul
cmpsb
ljmp
xchg
repz
lahf
int
jp
cltd
add
sub
roll
leave
jl
inc
push
out
hlt
adc
xchg
jle
fs
in
push
xlat
mov
stos
std
xor
lahf
wbinvd
push
jo
and
add
sub
cmp
not
or
cmpsl
mov
mov
arpl
inc
lret
hlt
aam
loope
repz
xchg
test
enter
adc
ljmp
xor
mov
sahf
rcrb
xchg
imul
repz
inc
lret
scas
add
sbb
jae
mov
sub
stos
std
dec
lret
or
dec
fisubrl
imul
mov
stos
lcall
out
jp
and
daa
out
lret
jns
sub
scas
pop
loopne
das
or
push
mov
int3
negb
call
xchg
rcrb
rclb
cmp
fisttpll
xchg
mov
outsl
mov
jp
jns
fisubs
test
pop
mov
std
jnp
lods
pop
adc
and
outsb
pusha
adc
xchg
xchg
loope
sub
sub
xor
jmp
and
outsl
hlt
inc
fadds
or
shl
cmp
pop
call
mov
xchg
mov
push
mov
mov
lds
es
and
push
mov
fsubl
and
scas
lret
sarb
notl
push
and
cmp
xchg
jns
and
adc
pop
fcmovb
xchg
ficompl
add
sbbl
xchg
mov
roll
je
mov
or
orl
cld
sahf
in
cwtl
frndint
lcall
in
lock
mov
jl
fcmovu
fmul
bound
jae
lcall
ret
data16
scas
out
dec
add
and
int
adc
mov
clc
xchg
push
add
sbb
adc
in
inc
pop
orl
inc
or
mov
stc
fistpll
push
cli
xor
xchg
loope
rclb
adc
test
addr16
fldl
mov
mov
cmp
addb
and
or
sub
jg
orl
push
dec
and
jae
sub
testl
aam
nop
stos
imul
xchg
mov
inc
mov
inc
addb
insb
mov
inc
inc
jbe
std
jle
sub
lahf
std
mov
push
and
pop
push
int
movsl
in
sbb
mov
ljmp
stc
mov
mov
xchg
enter
das
ljmp
xor
mov
std
adc
pop
push
mov
cmpl
stos
int3
test
pusha
sbb
push
push
stc
dec
push
mov
stc
dec
jbe
mov
mov
jp
outsb
ss
in
stos
loope
lahf
push
mov
movsl
xor
scas
sbb
arpl
xor
pop
mov
notb
gs
es
cmp
jae
push
pusha
cmc
cmp
js
out
mov
cltd
ljmp
push
ds
jge
enter
leave
add
adc
pushl
pop
ljmp
pop
inc
das
cmp
sbb
xor
and
mov
ljmp
test
sbb
outsb
or
mov
xchg
mov
aaa
jp
aam
adc
repz
dec
adc
je
or
clc
inc
out
faddl
lea
add
jbe
or
push
pop
pop
xchg
xchg
pusha
sub
shll
or
mov
mov
mov
fstpt
out
ja
subb
mov
xor
or
xor
mov
outsl
add
loope
fcomi
xor
push
jmp
fstp
or
xchg
push
mov
cmp
imul
jl
jecxz
stos
xlat
cltd
aam
inc
sub
in
inc
ds
icebp
cmp
inc
push
mov
push
add
jns
imul
push
xor
pop
bt
decb
cmp
gs
cli
push
imul
cli
lret
popa
xchg
mov
mov
pop
out
or
push
xchg
dec
jno
insl
andb
jae
cmp
daa
andl
jecxz
test
push
add
repz
aad
push
jg
in
and
mov
popf
repnz
inc
pop
mov
movsb
add
pop
xor
mov
lcall
and
je
pusha
xchg
into
add
nop
or
pop
jno
push
dec
insb
pushf
test
cli
fnstenv
inc
mov
lock
or
pop
lret
push
mov
repz
cmc
jg
push
bound
adcl
xor
sbb
orl
imul
mov
js
mov
outsl
jge
aaa
orl
loope
mov
ljmp
mov
xchg
out
int
bnd
mov
and
gs
jno
adc
shl
and
scas
mov
xchg
mov
push
mov
dec
add
out
rclb
cmp
into
sub
mov
dec
sub
pop
lcall
dec
movsl
movsl
and
mov
sub
inc
pop
ds
movsl
cmp
test
cli
in
daa
cmp
les
fimull
pop
mov
aad
in
clc
cld
dec
dec
pop
cmp
das
aam
xor
aas
add
dec
push
popa
mov
sbb
stos
adc
add
jp
mov
aam
mov
lods
sbb
jmp
in
mov
sahf
and
jl
out
mov
inc
pushf
xor
add
add
mov
movsl
or
insb
fidivs
lret
inc
fsts
lea
push
fdivs
rorb
shll
push
std
and
xlat
mov
push
loope
shll
leave
mov
cmp
xor
orl
dec
xorb
ss
shll
jbe
add
les
jae
imul
shll
imul
mov
sub
and
repnz
daa
cltd
and
sahf
sbb
cmpsb
pop
xchg
push
cmp
test
lea
and
pop
and
fcomps
pop
mov
stos
out
xchg
mov
clc
jae
sub
aaa
int3
ret
lea
nop
loope
rorb
hlt
jle
sub
lahf
das
xor
mov
mov
rcrb
jns
enter
push
jno
mov
push
inc
jns
jns
test
add
add
jp
and
mov
inc
stc
fcmovnbe
in
sbb
sub
push
xchg
mul
xchg
imull
lahf
lods
or
mov
sahf
mov
lret
adc
mov
jp
movsl
popf
sbb
pop
jns
ja
jle
lahf
xchg
roll
aad
popf
mov
inc
dec
lret
mov
inc
sbb
push
repz
push
mov
xchg
push
jl
movsl
sbb
in
sub
xchg
out
mov
lods
jp
xchg
sbb
push
mov
idivb
xor
mov
mov
mov
mov
loop
cmp
lcall
out
cmp
cmp
xchg
mov
or
rcl
adc
jg
dec
dec
jmp
movsl
push
mov
jmp
jle
adc
mul
ja
push
icebp
jno
push
xchg
loop
mov
jns
jno
loope
sarb
add
cmp
cmp
jno
push
in
inc
into
scas
pop
jae
mov
push
xchg
andl
das
jb
bound
fwait
iret
pop
pop
cwtl
xor
cmp
jecxz
imul
popf
inc
psadbw
cmp
sub
sub
or
out
cs
xor
push
and
xorl
mov
push
fdivs
mov
and
add
push
insl
or
mov
mov
dec
or
lahf
cld
mov
xchg
add
imul
cmp
cld
pop
adc
add
jnp
outsb
ds
xchg
dec
xlat
adc
cmp
push
xchg
jmp
sbb
jmp
outsb
stc
dec
mov
pop
lcall
inc
icebp
fadds
sbb
pushf
dec
jg
hlt
movsb
xor
mov
frstor
jmp
leave
jg
shlb
dec
dec
ror
mov
fdivl
ljmp
and
data16
sub
out
add
movsb
mov
or
inc
jl
js
adc
dec
shrl
in
arpl
ret
cmp
leave
daa
and
dec
rcr
jb
js
or
imul
fnstsw
and
dec
cltd
sbb
cmp
jnp
add
fcmovbe
stos
shll
aad
adc
dec
nop
imul
cmp
movsb
jno
fstpl
aaa
fistps
sti
sti
fisttpl
xor
jg
push
icebp
add
bound
lds
out
leave
mov
subb
mov
cmp
je
push
vmwrite
icebp
fwait
pop
or
adc
dec
test
mov
inc
ja
mov
fwait
sbb
loope
loopne
or
push
ret
cmp
jbe
sub
scas
and
and
js
xlat
jl
inc
jl
call
sbb
mov
fldt
pushl
lahf
imul
mov
lea
setns
jno
sub
imul
dec
jns
lcall
mov
and
popa
fdivrl
out
out
mov
loopne
filds
push
imul
jmp
jmp
cmp
arpl
insb
call
push
jno
xor
xchg
mov
test
ja
mov
pop
dec
inc
mov
xchg
xchg
out
lock
lods
jbe
mov
lea
faddp
lock
or
ret
das
in
popf
add
inc
jl
lret
testl
loop
sbb
push
lret
stos
leave
sahf
das
lea
xor
lea
xchg
cmp
pop
pop
xor
jmp
cs
out
xchg
clc
cs
rcrb
mov
jmp
pop
sbb
scas
iret
movsb
mov
add
push
sub
insb
incl
push
pop
pushf
add
mov
ret
std
jo
pushf
xchg
lret
fwait
adc
imul
xor
add
ljmp
ret
cltd
xlat
xchg
adc
int
leave
cld
mov
or
push
sbb
sarl
and
out
ficoms
call
aas
or
loopne
xor
pop
pop
cmc
out
mov
test
cli
loop
cmp
jne
xor
mov
nop
xchg
sbb
xchg
and
sbb
std
jo
jge
jl
in
add
imul
stos
fs
enter
scas
adc
mov
jns
xor
ficompl
jno
aas
cld
cli
icebp
iret
or
adc
lahf
and
xchg
sbb
push
add
ja
pusha
jo
mov
add
jae
mov
jns
adc
stos
jp
cmp
iret
mov
iret
jbe
xor
dec
es
xlat
xchg
popf
or
stos
pushf
cmp
dec
lea
or
push
sbb
pusha
cmp
xor
and
mov
cmp
and
imul
adc
in
ret
dec
dec
xor
mov
pushf
xchg
mov
lahf
pop
push
into
xchg
stos
push
dec
jns
rcrl
cmp
lahf
cs
mov
push
pusha
jg
sbb
sbb
pop
jmp
out
sahf
jne
mov
out
int
cmpb
xchg
dec
mov
sbb
lret
test
jge
test
cmpsb
jns
inc
sahf
sahf
mull
dec
aam
xchg
fs
dec
add
xchg
out
pop
ja
pop
cmp
pop
xchg
pop
mov
mov
in
sbb
js
mov
push
mov
lea
test
leave
lret
and
div
or
cmp
frstor
inc
cmpsl
xchg
sub
jbe
xor
cmp
inc
mov
dec
inc
push
lcall
or
test
inc
sbb
mov
lock
and
xchg
inc
xor
mov
dec
sbb
sbb
push
pop
pop
subl
xlat
sbb
or
sahf
dec
in
pushf
push
push
xor
xchg
inc
push
sub
pop
subl
push
xor
add
push
mov
xchg
adc
ret
cmp
sub
jnp
outsb
xor
bswap
inc
xor
push
adc
aam
stos
test
iret
mov
iret
mov
push
movsb
and
xlat
sbb
and
shlb
rorb
int3
ljmp
popfw
loop
adcb
mov
in
push
int
sub
and
adc
ret
test
mov
test
jnp
mulb
mov
clc
or
repz
in
sub
pushf
ret
mov
pop
jle
les
in
inc
xor
in
arpl
mov
adc
xor
add
in
fs
jle
inc
sub
and
mov
pusha
outsl
adc
xor
jmp
iret
les
ljmp
loop
sbb
sbb
push
sub
pop
cmp
adc
aad
add
imul
into
mov
xor
shll
sub
lock
arpl
fmull
ret
imul
aas
popf
or
shlb
shr
es
mov
cmp
repnz
jl
or
and
mov
hlt
jne
sub
lret
scas
xchg
sti
dec
jle
test
aad
pop
add
and
sub
or
ror
dec
stos
pop
push
in
out
pop
xor
icebp
fisubrl
sbb
pop
push
pop
je
in
mov
dec
jmp
popf
push
fiadds
dec
test
insl
nop
cmp
mov
pop
pushf
xchg
sbb
pop
into
jecxz
outsb
in
or
inc
ret
or
mov
push
push
lods
mov
mov
aad
aam
mov
inc
inc
je
gs
adc
stc
dec
mov
jae
mov
dec
jp
sub
inc
orl
out
insl
pop
stc
outsb
inc
movsl
sub
adc
mov
daa
xchg
loop
or
shrl
xchg
dec
stos
cmpl
outsb
or
mov
std
sarl
sub
add
push
enter
lea
sub
mov
push
outsb
push
in
lds
movsb
popf
aam
mov
icebp
pop
ds
ds
loop
push
clc
in
shrb
loop
adc
lcall
ds
pop
cld
xchg
shrl
lock
mov
jecxz
iret
sbb
xchg
ja
jmp
insl
mulb
pop
xor
push
pop
cmpsl
sub
outsb
nop
push
adc
xchg
mov
out
mov
stos
inc
aas
orl
lds
pop
outsl
push
push
jmp
or
jno
imul
mov
jle
dec
mov
add
movsb
mov
xchg
out
loopne
pop
sbb
push
dec
loop
inc
sbb
sti
cmp
dec
dec
push
push
xchg
ljmp
fldenv
push
movsl
jle
scas
std
sub
pushf
mov
mov
dec
fildll
and
fcomi
sub
sbb
stos
fwait
mov
xor
mov
fadd
stos
cmpsl
das
add
std
negb
lret
push
test
push
dec
pop
std
push
ds
adc
rolb
xor
push
int
stc
pop
add
pop
push
inc
std
pushf
jp
bound
fcoms
inc
lea
sub
nop
ret
mov
mov
dec
cmpsl
sbb
sbb
xor
pop
or
sbb
iret
cs
cmp
pop
adc
repnz
fisttpll
inc
enter
les
lret
test
fsubl
inc
enter
dec
repnz
pushf
icebp
mov
pop
leave
jge
movsl
push
addr16
add
and
ror
fwait
sub
xchg
dec
loopne
clc
in
dec
cmp
outsb
mov
movsl
fs
dec
dec
pop
aad
inc
aaa
xchg
jle
and
lahf
push
dec
mov
jo
andl
inc
jle
int3
pop
xlat
cmpb
sub
lods
sti
jbe
xor
inc
sub
mov
imul
jmp
mov
or
icebp
mov
push
cld
mov
adc
cmp
add
add
aam
mov
insl
xchg
cmp
inc
cmpsl
cwtl
ljmp
push
imul
add
sbb
dec
cli
fs
jge
add
add
xor
das
stos
jno
add
xor
insb
pop
pop
add
fimull
and
push
daa
ljmp
push
rcrb
inc
jp
mov
adc
shrl
sub
mov
dec
add
jecxz
outsb
cmpsb
jae
shll
xor
sbb
mulb
xchg
rcrl
pop
idivl
int
rolb
outsb
xchg
sub
push
movsb
dec
pop
lds
xchg
jbe
into
into
cmpb
divb
movsb
jns
or
data16
jbe
out
mov
cmp
ljmp
cwtl
int
adc
jg
lods
int
add
mov
sub
sub
clc
jae
or
push
outsl
push
lret
lods
out
pop
dec
out
jns
imul
jle
pop
pop
gs
dec
insb
mov
or
mov
sub
std
xor
cld
aaa
push
pop
fisubrs
cmp
pop
pop
sbb
mov
xchg
in
mov
in
mov
xchg
loopne
cld
mov
add
dec
in
xchg
fstl
pushl
cmc
adc
pop
cmp
fiadds
jo
int3
xchg
aaa
dec
out
out
lahf
rclb
pop
inc
flds
fs
outsb
xchg
shlb
push
test
outsb
adc
mov
cltd
pop
cld
popa
pop
ret
lea
inc
mov
fsubl
jmp
js
loope
arpl
notl
add
sub
mov
inc
int3
iret
inc
sub
cwtl
in
mov
jnp
out
enter
xchg
add
movsl
into
inc
jg
inc
xor
or
add
sbb
jne
jnp
adc
add
insb
jae
sbb
cmp
sub
stos
stos
je
jecxz
imul
adc
xchg
inc
mov
scas
lea
scas
repnz
mov
mov
jno
in
movsb
pop
inc
cmp
leave
xchg
jo
loopne
jae
cs
xchg
xchg
xchg
mov
push
mov
mov
fsub
adc
add
stos
outsl
int
repz
dec
push
stos
loope
fists
pop
xlat
outsl
arpl
jb
mov
or
outsb
lds
insb
daa
out
add
or
jp
cmpsb
test
sbb
mov
push
cmp
mov
je
in
ret
pop
push
fwait
lds
cmpl
stc
mov
int3
xchg
or
sbb
in
das
inc
xor
scas
xchg
push
pop
or
std
loop
es
xchg
arpl
movsb
lahf
stos
rolb
insb
pop
sub
xchg
insb
cmp
cmpsl
ja
movd
repnz
in
mov
test
push
cmp
mov
fucomp
inc
sbb
jae
fildll
jge
shl
dec
jg
les
or
xor
mov
popa
test
or
adc
add
shll
iret
xor
xlat
mov
dec
pop
or
shl
adc
mov
xor
divb
mov
movhps
dec
jns
push
ret
mov
pushf
jl
lret
push
pushf
iret
mov
sbb
push
lods
sti
add
das
shlb
pop
pop
add
stc
adc
mov
into
cmc
cmp
jno
add
cmp
pusha
sahf
das
mov
push
adc
fldt
negb
push
cmp
push
stos
mov
ficomps
mov
cmp
int3
imul
xor
push
stos
notb
pop
and
lods
movsl
push
jns
and
jmp
pusha
negl
mov
loopne
scas
jae
sbb
mov
in
push
sbb
dec
mov
push
movsb
fdivr
or
xchg
push
cmp
mov
mov
fcoml
cmc
mov
jns
cmp
loopne
adc
or
out
in
ljmp
inc
xor
fwait
outsb
dec
int3
mov
insl
xor
shrl
pop
mov
dec
scas
cltd
outsb
sbb
jne
fstpl
push
or
jns
and
subl
push
mov
testl
cmc
sbb
mov
outsl
das
lcall
jmp
xor
icebp
lods
rolb
xorl
cltd
mov
movsl
loopne
lods
cmp
in
or
jp
cs
inc
and
cmp
aad
sub
js
test
xchg
dec
js
clc
stos
add
sbb
mov
jp
lcall
mov
fsubr
mov
mov
into
xrelease
xchg
shlb
div
add
int3
xor
xchg
imul
mov
sub
iret
mov
push
popf
aas
or
pop
mov
loop
xor
stos
cmp
shlb
ja
xchg
fsubl
outsl
mov
dec
mov
loope
shll
fdivrl
add
jle
add
jp
sbb
cltd
dec
or
popf
pop
pop
mov
movsl
rolb
xchg
stc
mov
inc
gs
xchg
xchg
pop
push
decb
es
pop
js
aaa
ret
push
sub
aam
xor
out
sub
jl
jno
sub
inc
or
push
push
sub
push
sub
cmp
rcrb
ss
add
sar
icebp
std
xchg
in
popa
mov
pushl
push
adcb
lock
push
bound
jo
xor
mov
scas
fbld
cmp
xchg
push
lahf
movaps
jne
jg
or
pop
jbe
adcb
mov
jp
lret
jne
fcmovbe
push
mov
mov
or
pop
adc
dec
push
nop
fnstcw
fldenv
sub
dec
xchg
sarl
xchg
aad
mov
push
lret
in
mov
xor
daa
or
insb
rolb
push
popa
movsl
ja
xchg
lahf
cltd
push
jecxz
fnstcw
int3
cwtl
lcall
push
mov
and
xorl
outsb
add
mov
call
xchg
pop
inc
mov
adc
mov
insb
inc
jb
bound
out
mov
push
xchg
wbinvd
cmp
adc
cltd
or
pop
ret
xor
xchg
out
outsb
xchg
aas
cmp
lock
xor
lods
test
push
jp
mov
aam
add
jp
and
lock
shll
into
data16
mov
xor
loope
imul
fcoms
xchg
out
je
pop
lret
insl
add
sbb
mov
mov
sub
sbb
xchg
test
loop
mov
cli
dec
lcall
int
xchg
add
cmc
inc
inc
sub
sarl
pop
jns
js
in
lahf
mov
xchg
jmp
hlt
sbb
stc
push
dec
jne
mov
lock
dec
or
test
adc
cltd
xor
push
bound
ljmp
out
adc
sub
mov
adc
xchg
das
push
jno
mov
mov
roll
setno
fcoml
test
mov
sub
push
mov
jbe
cli
mov
xchg
adc
jns
sbb
out
cmp
fnsave
data16
loopne
mov
hlt
int3
jns
push
mov
inc
pop
dec
std
cmp
imul
xor
mov
in
ljmp
inc
insl
xchg
jmp
push
cmc
inc
pop
fnstsw
sub
fwait
sbbb
adcl
rcl
mov
pop
ljmp
lahf
icebp
sub
and
in
xchg
adc
int
lret
stos
addr16
lret
ret
jecxz
mov
aad
int
lahf
out
add
push
nop
scas
sbb
mov
pop
fcmovnb
jmp
iret
stos
repz
sub
inc
or
sub
adc
push
pmaddwd
loopne
mov
mov
pop
fldcw
lock
xchg
push
xor
xor
orl
dec
jae
data16
test
mov
subl
add
mov
cld
sti
lods
cmpsb
and
jmp
mov
mov
sbb
xchg
shlb
mov
bswap
sub
xor
pop
test
aam
cmp
jns
xchg
iret
scas
fidivrs
mov
or
xor
push
jno
and
sbbl
add
cmp
mov
popa
mov
fbld
jno
cltd
stc
add
mov
in
sub
out
imul
mov
push
data16
mov
jle
flds
dec
iret
lds
push
cs
add
daa
shrb
mov
push
cmp
xor
test
mov
cmpsb
cmp
call
in
push
lods
jbe
ror
pop
push
cli
in
dec
or
gs
sub
dec
mov
ja
xor
jg
lret
fidivrl
loopne
and
push
cld
jg
xchg
stc
stos
testl
xchg
out
mov
bound
xor
int
dec
xchg
and
sbb
push
rclb
or
shll
hlt
subl
xchg
sbbb
jp
push
call
cs
or
sub
in
push
adc
dec
cli
dec
inc
sbb
dec
test
and
bt
adc
fdivrl
adc
dec
stos
shrl
decb
fcompl
push
aas
cmp
ret
inc
shl
movsl
or
lock
nop
dec
fistps
pusha
scas
lock
xlat
rorl
stc
cmp
clts
inc
jl
call
mov
push
fiadds
adc
ja
xchg
jl
test
push
negl
enter
inc
cld
test
outsl
adc
mov
lret
add
mov
pop
sbb
cltd
sub
jle
test
or
movsl
call
movsb
leave
movl
xchg
mov
xlat
fwait
or
jmp
xor
jecxz
out
out
push
imul
push
jmp
call
or
mov
xchg
call
mov
sbb
lods
and
repnz
pop
push
shl
aam
fcom
push
sti
inc
and
pop
call
out
inc
lahf
clc
fldcw
leave
scas
pop
movlhps
popa
add
dec
sbb
dec
out
in
mov
sub
shlb
enter
add
jg
in
jge
xchg
stc
out
mov
test
int
xchg
add
sbb
mov
mov
lds
lcall
jmp
jmp
in
or
fadds
int
cwtl
sbb
sti
cli
movsl
add
xchg
pop
mov
mov
dec
jnp
lea
nop
daa
and
ja
push
push
ret
lods
and
out
xchg
mov
or
insl
jle
gs
push
int3
push
sub
sub
cmp
enter
or
gs
inc
add
lea
shll
jge
nop
sub
into
test
lcall
jecxz
adc
add
in
or
add
stos
test
fstpl
and
loopne
jmp
xor
call
or
movsb
or
int
cmp
shrl
ud2
adc
lcall
scas
mov
ret
sbb
mov
cs
mov
jmp
push
jno
cmovns
and
data16
push
xchg
test
pop
add
into
pop
inc
pop
pop
mov
fildl
jnp
lcall
ljmp
lods
and
mov
dec
insl
call
ss
cmpsl
xor
push
sar
xchg
pop
pusha
and
mov
mov
xchg
adc
popa
xchg
or
mov
pop
in
pushl
inc
xchg
shll
add
xchg
outsb
call
icebp
out
fadd
in
sti
lret
adc
popf
mov
mov
mov
cmpsb
fs
xlat
cltd
adc
popa
mov
jbe
push
fdivrs
add
inc
sbb
int3
dec
loopne
pop
shll
div
imull
sub
faddl
sbb
mov
xor
mov
mov
push
jbe
in
jp
or
fwait
pop
jp
pop
lods
inc
cmp
mov
cbtw
and
repz
mov
in
rolb
test
jl
mov
jnp
add
pop
mov
push
fsubr
inc
shrb
frstor
pop
movsl
mov
xor
movl
dec
xor
add
and
and
aad
mov
xchg
bound
and
jg
aam
js
std
pop
jae
repz
inc
add
pop
out
jp
sti
lods
cmp
ds
xchg
push
cmpsb
dec
inc
jle
pop
aam
push
push
aam
leave
outsl
in
cli
mov
popf
es
dec
leave
mov
lret
fidivs
lds
jne
das
test
push
push
les
jns
xchg
bound
repnz
xchg
inc
or
mov
mov
mov
lods
mov
daa
ret
jo
enter
mov
pop
and
fiadds
jle
pusha
into
mov
decl
jge
test
inc
xchg
jp
dec
push
jg
xlat
inc
repz
inc
cmp
cwtl
test
dec
aas
aam
xor
inc
shll
aaa
test
cli
cmc
fwait
ja
jp
jne
out
out
dec
lahf
adc
inc
bound
mov
leave
or
pop
mov
sub
sub
mov
stos
jbe
sahf
test
adc
insl
push
cmp
cmpsb
nop
mov
xchg
mov
rorb
pop
iret
fwait
inc
mov
dec
sbb
dec
cmp
in
fsubr
out
mov
dec
ja,pt
push
pop
out
aaa
scas
les
add
and
push
bound
sahf
pop
xchg
dec
test
outsl
adc
mov
fiaddl
pusha
mov
cmc
js
dec
sub
dec
inc
push
mov
dec
jb
roll
sbb
sub
add
mov
push
sbb
push
jg
pop
stos
lea
push
int
xor
push
mov
dec
jne
mov
xchg
mov
push
cmp
out
jl
cmpsl
stc
lahf
rcll
roll
push
aas
les
xlat
sbb
hlt
dec
sbb
add
cmp
mov
stos
or
cld
jo
aad
and
test
outsb
mov
int
enter
sub
or
outsb
mov
pop
cmp
test
push
rorl
js
lret
jmp
adc
icebp
outsl
pusha
popa
push
inc
jno
ficoms
cmp
xchg
iret
push
mov
ljmp
pop
cmp
je
mov
shl
cmc
jno
adc
sub
loope
pop
jb
cmp
pop
mov
leave
gs
and
push
pop
and
pop
in
xor
faddp
adc
cmpsl
loop
push
sub
sub
gs
inc
xor
inc
shld
loop
test
jb
mov
aas
and
fdivl
fcmove
mov
push
xchg
ljmp
sbb
arpl
push
mov
mov
push
aas
adc
push
das
fwait
push
out
xor
incb
xorb
mov
ja
fnstcw
ss
test
sub
jmp
cld
nop
push
jecxz
repnz
pop
fcmovne
add
pop
and
mov
fwait
popa
dec
popa
test
in
test
pop
inc
movsl
add
sub
cmp
aaa
xchg
ret
arpl
es
mov
or
imul
in
enter
ljmp
orl
xchg
xchg
loopne
inc
stos
xchg
push
test
fadd
icebp
idivl
mov
cmpsl
push
pop
ret
in
rclb
mov
movsl
int3
in
repz
jnp
loope
adc
push
or
outsb
mov
xchg
pop
sarl
xchg
push
xchg
jno
in
sti
mov
aad
cmp
outsb
pop
inc
xor
cmc
dec
jg
movsb
fistpl
orb
push
cmc
jne
sub
or
sbb
adc
jl
mov
testb
enter
jmp
jo
ret
cmpsl
dec
sarb
fistps
stos
sbb
es
out
cmp
mov
inc
rclb
mov
js
dec
adc
testl
stos
sub
and
pop
pop
inc
mov
xlat
jno
push
dec
dec
es
rol
push
dec
dec
aaa
xor
mov
fs
enter
stos
xchg
mov
test
cmp
mov
jecxz
xchg
cwtl
lock
movsl
sub
mov
and
push
and
dec
jecxz
outsb
shrb
push
pop
inc
jl
mov
test
xor
cmpsl
or
cwtl
pop
cmp
fnsave
or
test
mov
ds
xchg
mov
jno
icebp
jp
int3
sub
outsl
dec
test
mov
fwait
or
adc
cli
mov
sbb
out
mov
repnz
mov
sbb
mov
sub
mov
xchg
jbe
mov
mov
ret
push
fwait
cmpsl
push
pop
jne
jmp
int3
rorl
cmp
inc
mov
aas
lods
push
dec
imull
fidivrs
aad
sub
mov
aaa
jo
lret
xchg
imul
and
push
sbbl
test
pop
xor
sub
xchg
jb
sub
fs
jns
ja
mov
inc
xchg
add
mov
outsb
ret
mov
out
lock
pop
divl
sub
mov
mov
xor
into
push
hlt
cmp
and
sub
jg
insl
lcall
sbb
ret
xchg
cmp
movl
mov
pop
call
jmp
jp
jo
xor
mov
scas
jo
lret
push
mov
jl,pt
cld
mov
pop
fbstp
add
es
cmp
out
stc
adc
cltd
mov
inc
pop
inc
scas
int3
lds
mov
xchg
xlat
enter
push
int
rclb
in
cwtl
jp
or
dec
mov
addb
mov
mov
dec
xor
push
push
push
movsl
xchg
xor
clc
mov
mov
aad
sub
pop
das
adc
mov
adc
sub
xchg
dec
mov
repz
mov
out
movsl
movsb
ja
jmp
jge
add
into
lahf
aad
out
nop
pop
mov
jnp
sub
cmp
xchg
cli
push
jecxz
loop
mov
fstl
and
movsb
xor
inc
cmp
data16
fidivl
lea
test
xchg
ret
shrd
sbb
lock
repnz
pop
cmp
clc
test
je
mov
adc
add
inc
add
inc
popf
xorb
call
sub
lock
frstor
hlt
or
inc
lret
lock
sbb
push
mov
daa
adcl
gs
inc
mov
dec
arpl
jae
or
rcr
mov
out
int
pop
cmpsl
andb
ror
shlb
data16
and
rcrl
cltd
jae
sub
xor
mov
sub
dec
inc
jne
lock
inc
loopne
insl
cmp
mov
daa
adc
subb
loop
cwtl
inc
in
pop
pusha
inc
in
pop
sti
cmpsl
jge
push
adc
xor
pop
out
out
mov
dec
out
adc
pop
test
jbe
roll
push
inc
cmp
in
xor
repz
imul
jge
xor
or
lods
lcall
ja
sub
jbe
mov
xchg
or
repz
or
scas
add
cmp
push
test
popa
mov
nop
pop
movsb
sub
mov
fists
fucomp
push
adc
lock
xchg
cs
mov
divl
sahf
std
cmpsb
loope
movsl
xor
icebp
mov
data16
jecxz
sub
jno
lahf
jns
ljmp
jl
mov
shrb
lret
xchg
or
mov
decl
xchg
cmpsb
divps
out
shrb
loope
jb
push
aam
imul
in
xchg
bound
xchg
js
mov
mov
pop
sahf
add
repnz
xchg
jg
adc
xchg
lret
push
dec
or
call
scas
or
add
jo
lcall
mov
xchg
out
push
fsubl
test
and
leave
xchg
mov
repnz
jae
adc
cld
lret
ljmp
pop
scas
push
dec
push
insl
push
push
pop
ret
outsb
push
test
cmp
fstpl
cmpsb
addl
jno
push
mov
shl
lahf
cmp
adc
rcrl
sub
rcr
xor
lods
add
adc
mov
xchg
add
inc
push
rcr
jns
xchg
jb
mov
jge
shll
ljmp
pop
sarl
out
iret
jg
hlt
push
push
sub
das
adc
clc
or
mov
jne
sub
dec
adc
popa
xlat
mov
insl
pop
mov
lahf
adc
out
shl
aad
sahf
jmp
movsb
mov
shr
ja
sahf
sbb
pop
in
data16
mov
cwtl
repz
or
sub
sbbl
das
inc
add
fcoml
arpl
push
sbb
dec
shlb
xor
push
cmp
je
sub
xchg
lahf
or
in
push
hlt
je
cmc
addl
test
int3
mov
je
lods
push
mov
js,pn
addr16
cwtl
cmp
sub
jle
aas
sbb
lret
add
mov
xchg
lods
xchg
je
sub
mov
push
pop
mov
sbb
xor
add
lret
jp
cmpsb
ret
dec
or
popa
add
mov
lahf
or
and
dec
sub
cltd
mov
insb
jecxz
jle
dec
ljmp
loop
ljmp
xor
sti
fwait
mov
xor
popa
mov
and
pusha
or
popa
pushf
es
sub
enter
and
jae
xor
outsb
push
sub
xor
mov
dec
or
fwait
push
lods
cmp
push
adc
cmp
clc
dec
pop
dec
sbb
js
and
mov
clc
imul
es
fs
sub
into
mov
aad
mov
cld
es
testl
sub
or
fildl
push
dec
call
push
leave
and
cmp
es
mov
les
mov
outsb
xor
dec
dec
cmp
popf
jecxz
loope
dec
fld
push
cmp
lock
and
xor
jno
cli
in
xchg
push
or
dec
or
fs
mov
insl
das
jnp
call
lret
mov
push
fisubrs
ljmp
pop
pop
repz
mov
popa
ja
push
fmuls
bound
insb
dec
sbb
daa
jmp
sbb
shrb
cmpsl
push
aam
add
loopne
xchg
fnsave
inc
sbb
xor
and
fiadds
mov
cmp
xorb
loope
add
or
mov
jo
push
lds
cwtl
pop
fidivs
dec
inc
mov
push
dec
dec
cmp
incb
subb
adc
mov
data16
loop
gs
mov
inc
sub
rorl
shrb
adc
sbb
pop
dec
sbb
into
jae
xor
imul
loopne
mov
mov
xlat
push
inc
push
loopne
and
mov
push
add
ss
push
aaa
cmc
notl
cmp
add
cmp
cmpsb
push
xor
pop
mov
js
sahf
and
add
call
push
lcall
sbb
jb
xor
popf
int3
rorl
insl
dec
push
cs
xchg
es
inc
and
in
cmpsl
push
xchg
jmp
stos
adc
or
inc
add
gs
push
mov
lock
push
inc
pop
push
sbbl
cmpsl
cltd
adc
adc
cltd
and
movl
cmpsb
sub
mov
popf
sbb
fnsave
or
lods
jnp
jg
shrl
daa
popa
ja
mov
insl
pop
scas
xchg
xchg
sbb
mov
pop
inc
jns
push
and
dec
lret
mov
jmp
loop
ror
fs
out
and
movsl
and
repz
adc
call
sub
pop
mov
cmc
xor
insb
dec
sbb
mov
cli
test
loop
lods
sub
mov
inc
nop
ss
push
mov
pusha
or
mov
sahf
xchg
push
mov
mov
out
inc
sub
add
inc
sbb
push
and
or
push
outsb
xchg
imul
cli
jnp
sbb
push
sbb
ret
lds
inc
fwait
cli
dec
fdivl
and
repz
movsl
pushf
jnp
inc
jl
pushf
mov
push
sub
sbb
iret
in
sbb
push
das
sbb
xor
jge
movsb
xor
jae
iret
mov
pop
xchg
xlat
test
mov
mov
sbb
in
pop
repnz
rcrb
jg
dec
add
or
sbb
pop
and
ja
js
and
test
dec
xor
fs
jne
pop
sbb
lret
jno
jns
pushf
rcrb
cmpsl
testb
rcll
inc
sbb
aad
fnstenvs
clc
xor
inc
pop
imul
xchg
jne
daa
pop
and
lcall
sti
xor
pop
inc
shrb
jp
out
icebp
sub
jmp
push
lcall
test
out
imul
mov
cmp
dec
pop
adc
aas
sbb
sbb
and
or
mov
push
fbstp
jb
sti
loop
or
add
jge
dec
scas
idivb
pop
lret
xchg
jno
out
dec
mov
loope
iret
pop
dec
testl
test
out
outsl
aaa
pop
mov
loope
add
jb
jns
xchg
dec
push
cli
sub
pop
push
lea
xchg
enter
lret
jae
mov
push
jecxz
cmpsb
imul
inc
lods
push
push
lret
lea
popf
movsl
xchg
xor
mov
pop
xchg
cmpl
pop
fsubl
jecxz
ja
and
repnz
sahf
xor
jmp
cmc
jnp
jns
aad
aad
int
les
sbb
fsubrs
test
xchg
cmp
out
mov
sub
push
hlt
sbb
mov
ja
xchg
in
ljmp
popa
mov
or
ljmp
cmp
dec
xlat
rcrl
cmc
call
xor
ds
sbb
call
mov
mov
jns
dec
pushf
push
dec
mov
leave
bound
adc
mov
sub
mov
jb
mov
sbb
mov
mov
sub
popf
ss
pop
xchg
cmp
sub
sub
lret
add
and
sub
or
sub
and
pop
ficompl
test
lods
or
push
inc
mov
insb
test
inc
out
fisubrs
pusha
mov
cmp
pusha
push
xchg
aaa
jg
mov
cmpsb
jecxz
addl
lods
cwtl
push
cmp
mov
sbbl
mov
arpl
cli
stc
in
and
mov
out
push
xor
pop
out
cs
inc
push
mov
inc
dec
push
movsb
pop
out
push
jle
mov
inc
mov
sbb
mov
stos
jns
dec
divb
scas
xor
aas
mov
mov
repnz
dec
pop
ret
mov
sbb
in
lds
pop
mov
ljmp
add
xor
jg
push
nop
loop
adc
loop
rcll
cmp
ljmp
data16
push
push
jmp
fdivl
xchg
add
add
insb
ljmp
push
adc
push
clc
sahf
mov
loope
jae
push
add
xchg
and
jg
leave
mov
cmp
mov
fcoms
lods
in
jecxz
cmp
cmp
pop
xor
jl
add
repnz
inc
push
dec
mov
xchg
in
cmp
cmp
or
insl
and
sub
dec
imul
lods
jnp
xorl
imul
pop
or
adc
lret
jle
in
in
sub
push
or
xor
xchg
dec
stc
sub
fisubl
pop
mov
mov
ficoms
pushf
enter
lods
jp
movnti
fdivr
cmp
js
ljmp
mov
mov
jge
add
repz
or
xor
jl
pop
dec
pop
roll
clc
push
jp
mov
popa
mov
mov
push
push
add
outsb
les
xor
mov
adc
leave
js
sub
or
div
mov
or
dec
xchg
ret
xchg
sub
lods
notl
ja
mov
gs
jnp
add
mov
outsl
lods
and
cmpsb
xor
in
sub
movsl
and
inc
and
pop
call
outsl
push
je
xchg
pop
or
sbb
sub
leave
pop
ret
daa
and
and
sahf
outsl
pushf
popl
out
sub
sbb
or
and
pop
inc
cld
cmp
loop
xlat
and
and
and
jge
jbe
daa
in
sahf
mov
adc
cmp
jo
mov
xor
mov
inc
mov
adc
gs
and
xchg
mov
mov
cmpsl
fsubr
pusha
icebp
loopne
pop
jmp
push
imul
and
or
mov
mov
rcrl
or
sub
lods
jae
movsb
push
mov
cmp
cmc
mov
jmp
xlat
pusha
mov
idivl
lahf
imul
inc
icebp
dec
jbe
dec
xchg
mov
cmp
add
ficomps
lods
dec
fdivrs
bound
data16
mov
push
inc
push
mov
fnstsw
ret
pop
out
sarb
ljmp
in
xchg
xor
aam
mov
aam
jne
repz
imul
cmpsb
sub
and
fists
xchg
sahf
decb
in
xor
mulb
hlt
xorl
enter
dec
jae
mov
lret
dec
mov
addr16
inc
fstpl
cmp
pop
mov
push
jbe
clc
insb
push
mov
leave
insb
inc
jge
or
push
pop
jecxz
dec
stos
mov
stc
jecxz
push
inc
loopne
push
pushf
push
call
cmp
pop
out
out
repnz
rolb
aas
ret
dec
int3
xchg
or
mov
pusha
mov
aad
orl
sub
sahf
inc
jmp
pop
incb
dec
add
pop
and
stos
push
lret
sbb
mov
inc
in
push
leave
sub
mov
sarb
inc
dec
scas
sbb
hlt
ret
lret
jnp
repnz
ret
push
cmp
mov
fs
push
xchg
push
movsb
adc
inc
fstpt
sub
sbb
mov
das
mov
xor
cmc
adc
clc
shr
sub
stos
stc
sub
dec
test
loop
dec
outsl
mov
cmp
sbb
sbb
repnz
adc
repnz
idivl
out
je
inc
popf
das
add
nop
shrl
add
and
sub
cltd
cmpsl
push
mov
sub
lret
mov
mov
pop
xlat
pop
stc
sahf
mov
add
mov
loope
cmpsb
dec
ror
popa
imul
pop
js
jne
clc
mov
mov
ret
xchg
xchg
inc
loopne
sbb
dec
dec
xchg
int3
push
dec
sahf
inc
pop
jp
inc
sbb
mov
sbb
or
lds
push
xor
pop
rcrb
imul
out
out
pop
ja
jo
std
xor
add
and
push
nop
xor
add
adc
adc
fstl
mov
orb
lock
fwait
mov
add
test
lcall
jp
jo
adc
js
sub
jmp
in
or
daa
mov
shll
test
adc
loope
xchg
cmp
add
outsb
xchg
insb
jmp
pop
test
xor
lahf
lahf
cltd
sti
inc
popa
adc
out
mov
adc
faddp
clc
sub
out
mov
rolb
icebp
mov
sub
fidivl
push
jg
xchg
negb
lret
sbb
int3
or
inc
in
movsb
fs
push
aam
imulb
pop
ror
sbb
scas
pop
mov
stc
cmpsb
or
and
push
adc
xchg
xlat
mov
lods
dec
cmpsb
decl
stc
xor
rorl
decb
lds
fwait
outsb
dec
mov
and
xchg
add
mov
pop
push
inc
inc
lfs
arpl
addl
push
pop
pusha
outsl
jp
push
sbb
inc
ficomps
daa
push
pop
les
subb
enter
jp
mov
out
divl
js
sbb
lcall
adc
movsb
shrd
cmpsl
adc
addl
mov
jo
xor
xchg
loope
negl
mov
imul
dec
outsb
leave
pop
push
cwtl
add
mov
adc
cli
mov
add
push
sbb
dec
stos
jp
jp
cltd
in
push
cld
aas
push
out
int
push
sub
mov
int
aad
jp
leave
push
aad
bound
cs
inc
lahf
sub
sbb
add
sub
jg
pop
call
iret
xor
xor
in
ss
mov
pop
xor
push
cmc
add
aad
and
pop
xchg
das
and
addb
ja
andb
add
pop
in
ljmp
sub
mov
inc
mov
xor
add
mov
jne
movsb
jbe
ds
scas
pop
push
push
jl
lock
or
add
std
pushf
out
gs
sbb
fwait
jb
stc
lcall
mov
or
cmp
cmp
loopne
mov
cmpsb
sbb
lcall
dec
pushf
enter
stos
nop
pusha
into
jg
test
sbb
xchg
jne
mov
push
loopne
jg
push
lret
out
xor
pop
sbb
cmp
testb
cmc
sti
pop
cmp
add
sar
sti
mov
and
shll
aaa
add
movsl
test
push
rclb
fs
aas
gs
pusha
test
pushf
dec
dec
xchg
xchg
sbb
and
int
call
xchg
xchg
sbb
sbb
push
sub
pusha
lock
sar
mov
add
lods
sbbb
mov
add
fcompl
in
sbb
in
xchg
arpl
inc
inc
in
push
mov
out
in
sar
push
jno
fdivrs
mov
ljmp
sub
inc
testl
les
inc
pop
adc
aam
pop
leave
sbb
fsubl
mov
mov
lods
and
jae
nop
into
push
fdivp
push
int3
xchg
insb
mov
sahf
into
dec
mov
sahf
push
inc
lahf
lret
lea
xlat
lock
inc
pop
enter
xor
in
xlat
and
aaa
mov
lahf
mov
das
negl
es
rcrb
jb
in
lea
mov
mov
sbb
ja
add
mov
sbb
jg
sub
out
push
testl
ret
inc
inc
loop
das
imul
mov
ret
adc
cld
arpl
jmp
leave
inc
test
std
rolb
in
shrb
in
andb
repz
mov
loop
fisubs
das
pop
ja
movsl
mov
jno
loop
aad
push
popf
jmp
pusha
add
decb
std
cmp
pop
fstpl
ds
testb
jl
in
ljmp
bnd
push
shrl
push
mov
sub
xchg
jne
aas
inc
ss
mov
inc
inc
repnz
daa
push
scas
mov
pushf
dec
movsb
shlb
mov
out
add
xor
mov
lods
outsb
jo
push
sarl
lods
push
mov
out
cld
test
mov
shlb
ret
mov
in
xor
mov
mov
lds
mov
xor
sub
rcrb
repz
sahf
leave
or
mov
fs
or
out
and
ljmp
mov
movsl
ret
mov
inc
test
inc
sub
and
jge
into
bound
out
je
sbb
das
out
push
jno
rorb
fidivl
sub
dec
ret
mov
adc
outsl
sbb
cmp
pop
sbb
aaa
cli
out
and
hlt
mov
dec
sub
std
xor
and
fcmovb
inc
sub
mov
test
cmpsb
je
pop
rclb
jecxz
push
mov
push
rorb
sub
cli
xor
insl
outsl
jmp
cwtl
jb
xchg
int
imul
push
mov
adc
lahf
fisubl
mov
mov
sbb
in
addb
push
push
push
sub
lret
and
movsb
pop
xor
std
cmp
aaa
sub
int
sbb
pop
pop
pop
xchg
cmp
rorl
je
out
clc
mov
in
xor
xor
xchg
test
sub
cltd
imul
mov
repnz
mov
push
sbb
push
adc
cmp
xorl
jecxz
adc
mov
mov
mov
addl
push
push
fdivl
test
sub
adc
ja
sbb
ficoms
addr16
push
adcb
movsb
xchg
inc
stc
mov
or
jmp
xchg
iret
pop
sub
movsb
and
mov
pop
loop
jle
cmp
jmp
and
pop
cmp
push
push
scas
hlt
mov
sub
fidivs
scas
movsl
or
in
mov
out
xor
adc
sub
shrb
jecxz
xchg
cltd
adc
sub
mov
mov
bound
testl
push
sbb
lock
pop
or
nop
arpl
xor
mov
jne
ror
movsb
cmpsl
and
xchg
out
inc
mov
mov
add
js
fmulp
dec
add
adc
ljmp
mov
pop
push
int
add
dec
pop
data16
into
roll
mov
push
xchg
xorb
jns
sub
movsl
xchg
jle
mov
jge
dec
xor
jno
xor
dec
bound
lret
out
in
lahf
xor
popa
outsb
xor
pop
into
or
fldenv
jle
ficompl
fldt
iret
sbb
in
stc
pop
mov
ss
jo
aas
lret
or
cltd
call
out
das
test
mov
add
in
andl
lock
push
cmpsl
lea
popa
movsb
mov
xchg
push
or
jmp
aas
dec
pop
dec
rorb
or
repnz
jae
scas
mov
call
jecxz
in
adc
push
mov
mov
xor
lret
test
sbb
jecxz
xchg
mov
push
out
testb
pop
xchg
pop
sub
and
aaa
mov
and
cmc
popa
ret
push
fsubs
sbb
push
jns
sbb
dec
xchg
lea
test
push
test
xorl
pop
es
push
orl
insb
sub
dec
div
mov
bound
jge
mov
imul
int
jae
cmpsb
dec
add
push
das
cli
inc
inc
enter
subl
outsl
or
push
xchg
jmp
cmpsl
pop
push
mov
and
sbb
pop
pop
xor
fisubrs
cmp
ds
jo
ret
popa
add
out
pop
mov
cmp
mov
sub
xchg
pushf
sub
sbb
cli
test
fs
arpl
cmp
mov
cmpsb
icebp
lcall
push
addr16
push
lea
dec
scas
or
les
mov
sub
mov
pop
jb
mov
mov
into
fs
inc
out
jge
cmp
test
lret
xchg
popf
cltd
insl
int
pusha
mov
cmp
xchg
stos
add
mov
add
jl
rcrb
or
ss
ficomps
leave
movsl
push
and
mov
xor
mov
mov
loop
mov
arpl
mov
faddp
mov
bound
xchg
mov
ret
scas
xor
jbe
notb
cmp
cmc
or
test
es
pop
sub
dec
cli
xchg
push
mov
cli
mov
dec
xlat
fs
or
icebp
push
adc
divb
xchg
mov
pushf
enter
xchg
rcll
jae
jp
inc
fcompl
push
imul
test
sub
js
rcll
adcb
test
test
in
imul
loope
aam
inc
test
out
push
jmp
xor
fwait
test
ja
lock
jmp
pop
and
jns
xchg
or
rclb
add
mov
add
icebp
pop
adc
lock
insb
dec
fcompl
aad
data16
inc
jle
push
xor
arpl
sub
js
add
cmpsl
cmp
mov
pop
jl
aad
out
push
lret
test
xor
mov
sub
shrl
enter
repz
rorb
sub
test
adc
out
lcall
pushw
bound
jbe
or
mov
and
stos
rcll
or
mov
pop
lock
popf
jbe
pushf
jp
mov
pop
ds
faddl
call
insl
ret
lcall
lods
xchg
stos
add
and
cwtl
pop
mov
cli
lds
xchg
sbb
or
mov
mov
ret
int3
sbb
jl
xchg
mov
imul
mov
mov
cmp
push
jnp
jno
xchg
les
push
and
add
dec
aaa
cmp
mov
jmp
dec
mov
cmp
mov
rorb
mov
jb
dec
jmp
inc
mov
mov
sbb
inc
popf
test
rcrl
inc
pop
xor
nop
pop
sahf
sub
sub
jl
push
mov
mov
pop
pop
sar
daa
scas
jbe
stos
leave
punpckhwd
int
and
stc
decb
mov
outsb
aas
jl
out
inc
rcll
mov
jmp
pop
test
shll
mov
mov
repz
cmp
jno
cmp
es
popf
fdiv
xchg
mov
in
stos
out
or
or
xchg
inc
stos
lds
cmc
or
rclb
in
sbb
adc
mov
pop
loopne
sahf
xchg
popa
xchg
push
aam
test
dec
jle
mov
jmp
sub
and
ror
dec
xchg
push
push
scas
movsb
lock
jecxz
inc
addr16
push
pop
jno
xor
adc
cltd
push
dec
jbe
test
inc
int3
cmp
test
cmp
imul
bound
gs
xor
xchg
mov
andb
or
or
xlat
scas
leave
js
or
mov
sarb
pop
loopne
mov
adc
cmp
outsl
test
xchg
xchg
adc
mov
jge
cmp
dec
out
leave
aam
daa
add
dec
out
dec
pop
sub
in
bound
fs
jle
push
cwtl
or
adc
jne
or
arpl
xor
add
movsb
leave
jmp
cmp
adc
lahf
push
pop
push
pop
arpl
xorl
shlb
mov
mov
divl
mov
adc
sub
mov
testb
mov
cld
int
mov
push
lds
sub
outsb
pop
push
sahf
mov
repnz
mov
dec
fmull
icebp
jae
rcr
push
adc
int
pop
mov
fdivl
cmp
push
test
sub
rorl
xor
js
dec
loopne
dec
pop
push
and
push
mov
and
and
inc
push
test
xchg
aaa
jle
fldcw
in
xorl
dec
ss
aas
je
pop
mov
pop
inc
adc
jno
stc
rolb
test
daa
les
fwait
mov
inc
scas
imul
int3
adc
inc
bound
mov
enter
stos
mov
lahf
in
lret
lock
fnstcw
mov
and
in
add
testl
inc
mov
fwait
mov
jl
mov
ret
popa
imul
xchg
lods
mov
xchg
jno
test
jno
dec
and
lret
mov
jae
je
or
cmpsb
and
test
inc
cmp
clc
push
in
sarl
mov
and
mov
test
rorl
sub
out
mov
mov
scas
call
sar
inc
mov
cmp
push
inc
pop
pop
or
mov
jno
cld
xor
inc
dec
mov
test
xchg
add
add
dec
outsb
push
aas
aas
jno
and
gs
and
cli
or
add
ret
adc
sbb
nop
sub
inc
cwtl
aaa
inc
xor
xor
aas
das
out
cwtl
cmp
js
fsts
clc
repnz
imul
or
xor
xchg
aad
jbe
bnd
sub
mov
movb
sub
inc
xchg
je
aas
or
mov
sub
bswap
xchg
cmp
insb
add
nop
add
stos
fwait
xor
mov
or
xor
push
pop
adc
cltd
pop
imul
cmp
popa
in
stc
out
test
mov
aas
add
mov
and
aad
mov
in
jne
in
mov
mov
pop
push
cltd
stc
out
dec
or
push
pop
aaa
mov
call
test
pop
mov
fisubrs
es
cmpsl
or
cmp
mov
xchg
stos
test
cmp
in
sbb
lea
out
insb
iretw
mov
lret
pcmpeqb
or
popa
das
xor
mov
inc
xlat
sar
enter
sub
stos
pusha
repnz
ja
and
out
scas
int3
dec
xor
xchg
or
mov
into
mov
out
jl
pop
mov
jmp
mov
jne
adc
push
jne
mov
movsl
and
mov
jns
out
cli
adc
inc
fidivrs
js
cs
lock
xchg
je
sub
loop
insl
inc
sub
scas
or
push
iret
inc
mov
jmp
ja
adc
xor
jns
xor
mov
add
lea
pop
fisttps
mov
pop
stos
ficoms
jge
jb
iret
sbb
int3
int3
je
lods
outsb
rcll
mov
ret
push
add
leave
and
ja
shlb
xor
or
ror
stos
loope
ret
test
mov
and
imul
or
aas
cltd
fsubrs
pusha
mov
cmpsb
popa
sbbb
mov
sub
nop
xor
push
addr16
inc
fwait
frstor
sbb
mov
into
jns
adc
sub
sub
xor
mov
push
mov
das
movsb
dec
and
jg
add
rcrb
xor
adc
out
enter
add
fdivp
cmp
int
lods
mov
cwtl
adc
cs
pop
cmp
stos
mov
and
mov
jp
mov
sub
adc
jb
or
mov
or
and
movsb
push
sarb
mov
push
test
mov
into
xchg
push
mov
jnp
and
mov
test
add
mov
sub
les
pop
aaa
shr
idivl
out
and
inc
jg
cmc
adc
lock
cmp
lds
loop
out
xchg
ljmp
bound
or
jae
fsubr
jmp
mov
jl
xchg
sbb
add
jl
mov
push
xchg
into
fsubs
lret
push
fisubs
dec
aad
das
addr16
lahf
out
fs
movsl
stos
mull
adc
addr16
cmp
enter
jl
lahf
jle
sub
inc
add
icebp
xor
lods
xchg
cmpsb
out
test
lea
fldenv
aam
outsl
jmp
xchg
imul
dec
fwait
sub
ja
jnp
dec
mov
and
movsb
lret
push
and
cli
lea
dec
inc
add
mov
jnp
push
cmp
jg
aad
push
inc
into
popa
cmp
int
call
cmp
cmp
bound
xchg
shl
dec
addr16
or
push
sub
cli
mov
push
lahf
or
popl
adc
or
sub
add
mov
fcoml
iret
repz
add
pusha
movsl
fidivrs
mov
pop
orb
in
insl
jo
cmp
cmp
or
fidivrs
fwait
outsl
inc
out
jl
scas
dec
pop
xorb
inc
mov
movsb
xchg
je
rclb
lods
out
xchg
mov
add
inc
mov
xor
je
xlat
adc
insl
dec
negb
push
iret
repz
jge
pop
mov
test
or
xchg
enter
mulb
movsb
inc
into
sub
pusha
xor
cli
jmp
loope
mov
push
cwtl
dec
dec
pop
mov
xor
pop
adc
mov
add
je
cmp
and
xchg
jne
je
jns
inc
ret
out
scas
dec
cmp
shrl
popf
gs
inc
xchg
loopne
aam
push
mov
pop
sub
shll
cmp
pop
push
loop
cmpsl
sub
xchg
add
stc
jmp
pop
jno
stos
lods
into
sbb
sahf
outsl
add
fcomps
inc
outsb
lcall
jae
stos
aas
pop
mov
sbb
lcall
cmc
loop
sahf
sbb
add
in
xor
test
fwait
jb
cs
jnp
mov
mov
subl
push
xor
sbb
sarb
sahf
sub
add
inc
shlb
sub
push
xchg
jle
loop
imull
mov
les
cmp
mov
add
shlb
ficoms
dec
adc
and
and
scas
sbb
bound
mov
call
shrl
loop
incl
jnp
out
testl
rol
jne
lock
dec
lock
cmp
sub
sub
or
adc
icebp
jl
sbb
fsub
xchg
shlb
in
clc
fcoml
mov
pushf
jle
and
notl
rorl
jb
mov
gs
in
dec
out
mov
test
xchg
lds
mov
push
lahf
dec
mov
add
pop
inc
and
je
cmp
xchg
and
push
inc
cmpsb
push
sbb
xlat
fwait
xchg
jns
jo
inc
mov
xor
mov
fildl
rcll
test
cli
daa
jb
mov
dec
xor
pop
dec
call
jmp
inc
pop
pushf
mov
or
mov
je
jo
jmp
xorl
leave
push
adc
out
cmp
add
cmp
inc
xchg
mov
add
or
icebp
ja
jg
jmp
mov
sub
jb
adc
lds
lcall
inc
mov
dec
or
dec
mov
ja
ret
cmp
xchg
js
cmp
dec
mov
jl
fs
inc
push
pop
aam
fcompl
or
in
stc
je
pop
push
std
fdiv
js
adc
mov
adc
pop
jnp
xor
es
lea
push
mov
das
nop
int3
aam
push
mov
icebp
insl
clc
mov
pusha
int3
cmp
dec
adc
dec
inc
outsb
xor
push
mov
pop
cmpsl
movaps
dec
dec
rcrl
sahf
xor
adc
mov
add
sbb
mov
fildll
insl
sub
add
or
out
mov
insl
fisubl
ljmp
push
imul
loope
ficoms
cwtl
xor
cli
lock
mov
adc
sahf
lahf
jp
xchg
test
icebp
push
sahf
jge
jle
cmpsb
fisubrl
mov
push
daa
es
jecxz
test
adc
jmp
das
rorb
xor
mov
mov
insb
mov
scas
adc
jge
out
scas
orb
movsl
addr16
mov
pushf
rclb
sbb
mov
je
dec
and
mov
sub
test
jle
ljmp
dec
lea
xor
int
pop
mov
cmp
or
dec
mov
pop
push
fmuls
loop
imul
adc
push
out
pop
cmpsl
xchg
adc
movsl
adcb
dec
push
iret
pop
stos
jl
jnp
cwtl
outsl
std
mov
mov
sti
aas
mov
sbb
test
sahf
fildl
dec
popa
mov
jo
out
add
mov
inc
jge
mov
aas
ss
jo
xor
sub
call
loopne
cli
mov
rcrb
inc
add
jmp
inc
test
xor
pop
push
xor
mov
fildll
sarb
fimuls
or
das
out
sub
dec
pop
repz
xor
dec
sarb
sub
int
inc
cwtl
pop
pop
pop
test
in
sub
repz
fsubrs
cmpsb
movsb
mov
jecxz
lods
aad
adc
pop
inc
or
or
dec
aam
cmp
adcb
enter
xor
mov
aam
rorl
imul
mov
repz
jno
iret
push
mov
jmp
push
xlat
jns
add
test
mov
pop
sub
or
aam
or
jo
sti
jne
arpl
iret
lahf
fcomi
mov
xchg
sbb
lods
cmp
jns
int
mov
mov
sarb
jecxz
out
mov
xchg
mov
cmp
jg
cmp
xchg
into
xchg
dec
jnp
divb
adc
inc
lods
test
sbb
push
fisttps
sbb
xor
cmp
lock
fmuls
imul
adcl
add
jp
call
popa
negl
mov
push
mov
aas
cmp
idivl
jmp
inc
popf
or
sbb
inc
in
iret
jmp
roll
rorb
or
or
rcrl
shrl
adc
test
jmp
imul
dec
insl
dec
inc
movsb
es
pop
rol
mov
jge
hlt
repz
xchg
push
cmc
mov
test
cmpb
mov
test
mov
jl
loope
jae
inc
sub
sbb
das
xchg
mov
mov
lahf
xlat
mov
test
sub
insb
fsubl
sub
leave
addr16
xor
ljmp
jnp
pop
ljmp
dec
mov
mov
or
test
ucomiss
and
push
fnstcw
add
mov
push
push
mov
push
cmp
iret
repnz
mov
sti
mov
jge
mov
testb
gs
mov
adc
mov
inc
jns
xor
rorl
jle
rep
mov
aad
nop
call
xor
adc
cmpb
repnz
mov
sbb
arpl
mov
mov
jecxz
movd
cmp
mov
inc
pop
mov
and
not
mov
repz
fsubp
test
fisttpl
sub
and
sub
adc
push
orb
insb
jecxz
dec
insb
push
stc
xchg
mov
incl
lock
rcll
cmp
pop
xchg
arpl
and
and
inc
shll
and
cmp
fmuls
jl
jg
lock
test
in
jmp
decl
sub
imul
xor
repz
loopne
jmp
in
mov
lods
jle
test
pop
scas
sub
adc
dec
inc
mov
and
test
pop
pop
lret
pop
ss
or
or
fld
jmp
inc
cld
imul
insb
lds
adc
movsb
out
sub
lahf
int3
xorb
xchg
jb
add
jne
inc
ret
int3
jno
sub
andb
jge
add
mov
lods
div
mov
aad
and
mov
pop
lcall
loopne
nop
sbb
jne
jp
loop
sub
pop
mov
mov
popa
ret
xchg
adc
xchg
jg
ja
pop
dec
or
cmp
in
dec
in
popf
test
rcr
mov
fmull
addl
add
shll
dec
xchg
lret
sub
aaa
push
and
dec
nop
mov
dec
inc
push
in
mov
dec
loope
add
scas
inc
jmp
mov
adc
imul
jb
aas
nop
shlb
sti
out
xor
xor
jecxz
xchg
jnp
icebp
pop
lock
mov
xchg
push
stc
lahf
xor
movsl
inc
pop
pop
adc
jae
pop
cmp
push
rcl
loope
das
aam
in
inc
fcmovnbe
xchg
sbb
call
xor
jne
xor
xchg
xlat
inc
sbb
sub
js
push
insl
sbb
sbb
inc
push
subl
mov
xor
sbb
cmp
mov
sahf
sahf
movl
rolb
xor
testl
mov
lock
cmp
lcall
data16
xchg
in
aas
cmpsb
psubd
jne
out
shll
call
jmp
stos
ficoml
outsl
cmc
out
cmc
or
or
push
or
stc
outsl
je
rol
insb
inc
mov
stc
adc
icebp
mov
roll
pop
leave
and
inc
dec
push
fwait
jp
bound
mov
shrl
aad
in
fisttpll
xchg
mov
test
cli
out
call
icebp
sbb
stos
mov
jne
push
add
ror
sbb
in
fcmovnb
pop
fwait
xor
xchg
fiadds
in
faddl
push
mov
inc
das
sahf
cmpsl
xor
sbb
fwait
xchg
outsb
test
cwtl
mov
and
and
push
adc
or
js
xlat
sbb
lea
popf
out
les
loop
cli
fwait
cwtl
lods
sbb
bound
mov
out
lahf
mov
mov
mov
xchg
inc
xor
fdivl
clc
fnsave
sbb
lret
push
dec
pop
dec
repz
cwtl
jbe
push
in
pop
lahf
mov
adc
inc
dec
sub
sbb
sub
xlat
sbb
cmpsb
negl
jae
mov
into
mov
jecxz
or
ss
pop
outsl
insl
push
mov
jns
notl
lods
outsb
mov
mov
mov
into
movsl
mov
or
push
ja
mov
sbb
push
cltd
inc
popf
rol
add
jae
add
fisubs
push
iret
sub
mov
xchg
outsl
fidivrl
sahf
fisubl
mov
imul
int
dec
push
aaa
shrb
test
xor
jg
outsb
and
jl
and
inc
push
mov
pop
cmp
lock
xor
xchg
out
mov
inc
cmp
add
mov
shll
cs
add
nop
xlat
jp
lds
in
rcrl
inc
push
ss
add
push
sbb
int
mov
xchg
shlb
mov
mov
push
and
pop
scas
gs
jmp
mov
ffreep
scas
mov
or
add
lock
ljmp
cmpb
xchg
nop
cwtl
clc
xor
filds
and
inc
cmp
loope
xor
dec
pop
push
xchg
iret
dec
mov
stos
add
xchg
jb
sbb
popf
je
jg
movsb
mov
cmp
xchg
lock
xorl
dec
xchg
aam
xor
rcrb
fstps
sti
push
sub
and
push
mov
mov
sub
ljmp
pop
scas
pop
cmc
xchg
repnz
mov
mov
adc
inc
dec
test
mov
lahf
xchg
ja
imul
push
mov
sahf
xchg
inc
jns
int3
cld
or
cltd
mov
fsubr
je
bound
pop
pop
and
jne
xchg
ja
xor
jge
dec
mov
lock
push
ret
testl
int
orb
dec
insl
pop
sub
mov
add
push
mov
mov
setbe
scas
fcoms
push
xchg
sahf
pop
in
rclb
mov
lods
add
addb
push
in
dec
mov
daa
pop
in
insb
pop
iret
cmp
test
xchg
int
arpl
adc
loopne
stc
pop
or
dec
mov
xor
aaa
push
lods
test
jecxz
jg
mov
fstps
int3
je
xchg
mov
adc
inc
and
mov
xchg
cmp
inc
cmpsl
in
inc
loopne
aam
mov
sti
cmp
pop
xchg
addr16
jbe
cmp
mov
shll
mov
movsl
add
and
ret
outsb
aad
jne
call
fadd
test
sbb
xchg
repz
mov
negb
sbb
jge
cmc
mov
leave
mov
mov
jno
ficomps
dec
pop
dec
mov
rcrb
dec
leave
int
mov
lods
dec
popf
addr16
inc
mov
scas
cmp
xor
lret
loop
stc
in
xchg
loopne
xor
mov
pop
cmp
pop
pop
stos
test
pushf
pop
sbb
and
das
repz
outsb
cmp
cld
fld
aaa
sub
or
mov
in
mov
sbb
adc
sahf
into
lret
sbb
fwait
mov
cmp
shrl
mov
js
jo
mov
sub
mov
cmp
inc
dec
xchg
xchg
test
cmpsl
add
mov
inc
outsb
xchg
int
xor
cmpsl
cmpb
pushf
fistpl
jecxz
nop
adc
roll
xor
xor
xchg
stc
rorb
sub
hlt
xchg
jo
divb
and
repnz
cli
pop
test
mov
fildl
dec
sbb
fnstcw
fsubrl
aad
loopne
daa
shlb
push
jne
scas
push
dec
sbb
fs
incb
mov
rcll
fmull
mov
mov
pop
xorps
xor
jp
mov
dec
sub
test
or
mov
hlt
out
fsts
add
pusha
sahf
cmp
popa
aaa
hlt
mov
mov
popa
cmp
sbb
out
sti
outsl
popa
inc
mov
fwait
pop
hlt
mov
out
adc
sub
mul
adc
jecxz
and
add
sbbl
push
lods
mov
mov
mov
sub
stos
inc
jmp
xchg
lock
push
jecxz
or
outsb
enter
push
jns
lret
jae
into
add
fwait
arpl
push
adc
jle
mov
mov
lods
les
lret
cmp
aad
pop
pminsw
pop
add
popl
dec
xlat
push
inc
idivl
push
je
mov
jecxz
int3
ljmp
and
cmpsb
ds
push
aas
sbb
icebp
dec
pop
rcll
sub
popa
push
push
pop
ja
xchg
fldl2e
or
fnsave
arpl
push
std
mov
jb
sahf
into
mov
lds
jmp
jmp
ret
cmpsb
popf
inc
push
add
mov
in
mov
or
pop
jno
out
cld
cmpb
mov
mov
mov
push
aam
aas
and
mov
sarb
mov
mov
faddl
add
ror
mov
rclb
andb
stos
into
push
ljmp
cmp
mov
pop
mov
lock
sbbb
mov
loopne
cmp
aaa
cmp
arpl
clc
push
xor
dec
xlat
cmp
push
or
lcall
mull
sub
mov
xchg
negb
cmp
xchg
pop
jae
lret
mov
cmpsl
stos
movsl
arpl
movq
fildll
bound
sbb
adc
imul
std
mov
xchg
inc
mov
xchg
push
inc
test
mov
cld
jmp
sub
movsl
mov
jae
stos
xchg
sbb
out
xchg
int
icebp
mov
les
mov
arpl
dec
scas
mov
mov
call
sub
mov
dec
jecxz
add
mov
leave
push
lods
xchg
push
iret
lret
sti
jo
cld
inc
cmpsb
mull
out
sbb
test
ss
cmp
nop
ds
aas
adc
mov
jl
gs
jno
jecxz
jae
leave
filds
sub
in
pushf
repz
adc
sti
dec
flds
adc
inc
fprem
out
pop
aas
mov
scas
mov
cmpsb
lock
mov
shrl
imul
in
adc
movsl
jmp
popa
push
push
mov
ficomps
and
mov
pusha
jecxz
arpl
add
mov
push
mov
fs
sbbl
push
mov
mov
ss
jo
mov
or
adc
and
mov
faddl
dec
and
popf
fs
inc
popa
xchg
dec
in
daa
clc
push
lret
sti
jae
loope
cld
ret
lcall
push
pop
mov
add
mov
cmp
sbb
xor
xlat
hlt
fcoms
push
mov
mov
push
out
clc
movsb
cwtl
data16
push
cli
sub
lea
and
stos
adc
cmpl
cmpb
mov
mov
push
xlat
stc
mov
inc
idivl
inc
outsl
mov
xchg
es
jae
cmc
pop
inc
jno
imul
aaa
mov
iret
or
fdivp
dec
inc
js
lcall
fcomip
add
mov
les
js
push
popf
cwtl
lock
xlat
lret
jo
cmp
in
loop
popa
xor
jge
imul
cmc
dec
push
cwtl
fsub
pop
stos
mov
sbb
xchg
sub
add
cld
jns
dec
add
imul
xchg
add
inc
mov
lcall
xlat
mov
jl
stc
inc
aaa
sub
dec
das
mov
mov
push
sbbb
push
mov
lods
in
push
cld
movsb
cs
outsb
dec
in
movsb
in
les
jae
out
lods
nop
add
scas
inc
pop
push
imul
adcb
hlt
xor
push
dec
push
mov
popa
rcrl
bound
je
and
je
pop
imul
test
imul
jno
xor
or
pop
in
stc
adc
loope
int3
cpuid
xor
ret
out
clc
aaa
mov
push
jb
xor
mov
frstor
repnz
xchg
push
jg
inc
pop
mov
mov
push
popa
mov
mov
cmc
fs
dec
rcrb
add
pop
inc
inc
lcall
cld
sub
loope
scas
adc
hlt
push
pop
rol
pop
icebp
loope
xchg
popa
test
add
sbb
or
pop
and
jb
faddp
ds
outsb
push
call
push
mov
iret
sub
sub
jmp
imul
and
pushf
pop
pop
cmp
pop
add
cli
jae
mov
ret
mov
lret
movsl
mov
push
xor
fsubs
popf
scas
inc
cmp
dec
movsb
sahf
out
mov
out
in
jl
cwtl
or
pop
inc
sbb
xchg
fwait
aad
bound
mov
sbb
test
jbe
aad
les
leave
mov
fstpt
scas
pop
out
fcoms
imul
sub
pop
jmp
cmc
and
mov
lret
fldt
sub
test
inc
xor
add
inc
mov
loop
sub
push
adc
sbb
outsl
fcmovnbe
pop
mov
push
xor
sub
mov
ret
cmp
roll
arpl
cltd
cmpsl
fs
add
ret
xchg
neg
repz
pop
lret
mov
and
outsb
lcall
sub
jno
mov
sahf
lcall
xchg
jp
fcoms
pop
mov
inc
icebp
xchg
mov
pop
jge
cli
sbb
es
sub
push
movl
gs
sti
faddl
lock
pop
sub
ljmp
mov
and
sahf
aam
daa
xchg
stos
xchg
mov
add
push
inc
and
push
or
orb
push
ds
mov
js
dec
ds
stos
cs
fistpl
sub
sti
dec
jbe
cmp
xchg
cmpsb
lods
mov
xchg
dec
loopne
mov
lahf
mov
mov
adc
dec
popa
jae
jnp
pop
push
mov
xchg
movsl
push
jg
outsb
imul
pushl
test
pop
cmp
adc
lret
sbb
fildl
clc
les
ss
pushf
push
in
mov
ja
mov
pop
ja
lcall
mov
jo
adc
jp
jmp
jno
inc
mov
stos
jg
sbb
out
jo
loope
xchg
xchg
imul
mov
ror
push
nop
jle
hlt
pop
aas
push
cmpsb
pop
push
mov
push
pop
sub
cmpsl
stc
adc
cli
xor
dec
cmpsb
divb
sahf
and
mov
enter
icebp
sub
inc
pop
imul
adc
and
mov
repz
fcmovb
xchg
dec
add
cmp
mov
aam
std
jle
mov
jmp
test
std
addr16
fdivrl
xchg
push
xor
cmp
mov
dec
add
xchg
cmovg
out
pop
bound
dec
hlt
inc
jg
popa
mov
xor
or
outsb
jle
std
sbb
imul
sbb
adc
mov
xchg
dec
pop
sub
push
and
or
enter
jne
icebp
repnz
aam
inc
mov
scas
inc
pop
sbb
fsubrs
loope
insb
xchg
jge
arpl
cmp
scas
nop
stc
and
rol
insb
lods
test
scas
je
fimuls
inc
cmp
mov
fcmovbe
sub
fisttpll
push
adc
or
les
xlat
and
clc
and
jo
push
insb
aam
pop
in
lods
pop
lahf
pop
push
push
out
adc
clc
dec
xchg
sub
pop
sub
cwtl
lea
and
movsl
ja
das
xchg
pop
xor
gs
add
ja
shr
xchg
dec
cmp
adc
movsb
jl
mov
lock
jecxz
xor
sub
or
cmpsb
dec
push
jno
mov
lods
dec
popf
fistl
mov
js
aaa
cmp
fisubrl
mov
clc
or
sbb
int3
push
lahf
jb
scas
imul
xor
cmp
dec
call
or
pop
add
push
xor
or
andl
es
lret
xchg
jmp
outsb
ljmp
mov
and
jb
or
jbe
push
gs
sahf
repnz
roll
out
cmpsl
out
mov
xchg
cmpsb
lds
loop
les
mov
add
push
orl
pop
rcrb
inc
and
push
cmp
scas
lock
cmp
por
call
push
inc
inc
fidivl
pushf
xor
in
and
xchg
loopne
mov
adc
nop
and
jo
inc
and
xchg
mov
shl
inc
mov
mov
xchg
pushf
mov
mov
and
jnp
xchg
inc
sti
rolb
mov
push
or
xor
orl
ret
cwtl
lea
xor
adc
fwait
or
insb
jns
daa
stos
out
mov
outsb
and
shr
add
dec
add
or
push
filds
mov
or
test
fldl
mov
ror
mov
mov
cwtl
mov
ds
xchg
aad
test
frstor
fwait
mov
lods
push
lret
push
cli
dec
fsubl
push
outsb
and
push
xor
mov
pxor
lcall
lea
cmp
ret
mov
jno
pop
mov
mov
movsb
mov
xor
xor
pop
mov
inc
sbb
dec
icebp
adc
mov
or
push
adc
mov
cmpsb
fwait
xorb
das
mov
shrl
or
ja
lock
mov
popf
lret
daa
pop
outsl
ficomps
mov
add
pop
cmp
dec
or
mov
add
ss
andl
leave
push
jno
and
mov
out
call
imul
out
pop
movsl
xchg
inc
iret
xor
test
repz
jp
int
add
push
outsl
xor
mov
add
cmp
enter
push
adc
jl
fisubrl
mov
in
aam
shrl
xorb
imul
xchg
mov
std
aam
fbld
movsb
imull
jno
dec
xchg
xor
sub
arpl
bound
mov
lahf
pushf
sbb
mov
pop
imul
movsl
or
rolb
and
movl
pushf
lea
mov
cmpsl
and
negl
ds
push
inc
adc
xchg
adcb
or
shrb
aas
pop
ds
add
xor
popf
mov
xorl
pop
cmpsb
das
dec
mov
mov
scas
scas
mov
mov
adc
jne
add
inc
ret
repnz
cmc
fs
fistps
sub
mov
aam
inc
ja
cs
pop
int3
nop
js
sub
imul
pop
xchg
xchg
mov
xor
jo
push
and
add
cmovge
std
xchg
mov
cmp
xor
mov
mov
mov
push
mov
popa
test
imull
imul
mov
pop
repnz
addr16
add
adc
mov
xchg
lods
pop
jge
add
test
sbb
add
push
mov
dec
cmp
loopne
mov
cmpsl
test
shlb
leave
add
add
sub
and
shrl
vmovntps
loop
out
stos
mov
cmp
xlat
dec
fildl
push
out
mov
in
out
adc
and
xlat
cmp
add
pop
notl
sbb
add
and
fcmovnb
or
cmp
test
push
cmpsl
xchg
jnp
jo
outsb
addr16
jmp
idiv
int3
mov
in
in
out
ficompl
test
popf
repnz
aad
dec
imul
scas
mov
repz
test
fs
dec
sbb
and
sub
xchg
mov
in
test
mov
out
cmp
mov
ret
cmp
iret
adc
xchg
test
mov
sbb
jo,pn
out
je
mov
mov
or
xchg
sbb
and
or
mov
in
ret
and
leave
inc
xchg
pop
ret
in
roll
cmp
ja
jp
test
and
outsl
data16
mov
mov
sub
push
popw
adc
lret
loop
push
ret
pop
push
mov
jns
ret
jne
dec
fistpll
fstpl
xchg
mov
enter
cmp
repz
and
or
movb
in
cmp
fcmovnu
pushf
cmp
xchg
cltd
jb
addr16
iret
push
push
jg
and
mov
or
in
mov
push
xchg
mov
mov
xchg
scas
add
push
dec
pop
sub
xor
outsb
add
pop
pop
xchg
hlt
aad
gs
ret
fisubl
and
add
fisttpl
lea
pop
fs
mulb
add
lods
push
int
rcll
fmulp
push
outsb
aad
push
and
jo
cmp
jg
sti
pop
mov
mov
movsl
cli
sahf
cmp
test
fneni(8087
stos
rclb
stos
insl
and
out
cmpsb
xchg
ja
rol
sti
fs
jne
int
add
cmp
mov
les
adc
ficoml
jp
stos
push
push
xchg
push
xlat
testl
add
fiaddl
lods
fisubrs
add
mov
std
fst
push
dec
pop
lds
andb
inc
xchg
adc
jnp
outsl
inc
pop
outsb
add
push
push
xor
dec
outsb
jbe
dec
cmpsl
or
gs
jge
dec
clc
mov
rcrl
nop
jne
movsl
cmp
fxch
insb
repz
imul
inc
sub
mov
test
or
jle
addr16
pop
sub
nop
adc
lahf
inc
pop
aad
xlat
addr16
push
dec
inc
jbe
dec
sbb
dec
mov
push
cmp
stos
push
pop
mov
jbe
mov
pop
insl
sub
fwait
pusha
mov
js
inc
push
imul
repnz
ficoml
and
jo
fcmovne
insb
stos
dec
mov
fwait
push
xchg
call
movsb
out
movsb
xchg
xor
gs
or
mov
or
in
ret
mov
cmp
bound
push
mov
sub
jmp
dec
add
dec
cli
fistl
mov
mov
cmp
arpl
incl
jmp
rcrl
push
jl
test
cmpsl
pop
enter
aad
xchg
jle
cmp
ljmp
pop
enter
enter
xchg
pop
popl
dec
dec
das
mov
roll
out
in
xchg
jmp
jmp
iret
and
xchg
mov
gs
movsb
inc
xor
movsb
push
dec
loop
dec
mov
jmp
mov
push
fcoms
int
mov
sahf
sbb
xchg
sub
jmp
in
in
shr
mov
sbb
mov
xchg
mov
jp
mov
pop
cld
loop
jns,pt
lds
push
xchg
xchg
mov
sbb
cmp
dec
jae
adc
jbe
adc
loop
repz
pop
inc
lods
inc
out
pop
add
jb
mov
adc
push
mov
into
leave
cmp
and
fstl
stos
push
mov
lcall
nop
addr16
cltd
das
aas
loopne
or
or
fcoml
or
fldt
xchg
fstp
mov
jns
pop
jle
sbb
mov
inc
dec
sbb
add
shl
inc
push
sub
xor
pushf
push
and
push
push
insl
arpl
xor
andl
mov
xor
mov
mov
add
and
dec
in
mov
push
sub
cltd
fdiv
lea
sbb
xchg
es
jbe
out
xchg
sbb
in
jo
mov
out
aam
xor
lods
push
lock
icebp
cmp
lret
hlt
pop
sub
int
loope
dec
sbb
mov
adc
loope
and
sub
lods
outsb
js
mov
out
sbb
push
jmp
xchg
popf
aam
sahf
cltd
fcompl
or
mov
andl
sbb
mov
lods
mov
add
mov
loop
or
and
push
mov
out
mov
icebp
filds
outsl
roll
sub
jbe
cmp
loopne
outsl
mov
mov
xor
pop
fcoml
mov
shll
fstl
in
cmpsl
jmp
push
inc
cmp
scas
inc
xchg
ret
stos
push
xchg
mov
bound
stos
dec
mov
pop
pop
inc
nop
ficoms
pusha
mov
popf
and
sub
imul
sahf
sbb
icebp
fmull
cmp
mov
dec
lds
pop
outsb
jge
add
cmp
fildl
jnp
cmp
add
nop
gs
arpl
push
jo
pop
das
cmp
pop
xor
rcrl
mov
into
jbe
sbb
daa
cmp
add
ja
push
xchg
mov
mov
mov
aam
mov
loop
sti
js
adc
or
imul
scas
fistps
andb
test
out
xchg
leave
push
sub
add
or
fldl
cmp
ss
inc
xchg
sub
mov
cmpsb
mov
aaa
dec
das
sbb
xor
lahf
sub
in
xchg
arpl
inc
xchg
xor
lret
pop
aas
stc
int
sti
in
push
aaa
orb
popa
mov
adc
and
xchg
in
cmp
mov
cld
sahf
std
mov
ret
xchg
and
imul
call
rorb
outsb
ficoms
or
pop
lret
adc
inc
test
sbb
lcall
push
sbb
lcall
sbb
push
xor
addr16
fwait
jmp
mov
in
fdivr
in
outsb
xchg
sti
xchg
clc
filds
jae
dec
popa
sbb
add
dec
sbb
sub
adc
adc
add
dec
and
sahf
push
and
pop
mov
sub
push
cli
ret
adc
mov
aas
into
scas
xchg
inc
adc
xchg
cli
or
xchg
jge
or
rorl
inc
into
test
lods
pop
test
jns
int3
rorb
rsm
addl
negl
ljmp
arpl
shrb
xchg
pop
cltd
sbb
sbb
ss
stos
mov
lea
mov
ret
dec
clc
les
and
xor
inc
push
arpl
sub
mov
es
sub
cmp
into
mov
mov
mov
in
or
in
pop
sbb
xchg
movsl
cltd
add
or
shrl
lock
adc
leave
jae
rorl
xchg
mov
dec
jp
das
into
xchg
add
inc
pop
sub
mov
mov
mov
adc
je
xchg
inc
lods
jp
or
xor
fwait
mov
jecxz
mov
inc
inc
in
out
sbb
clc
or
dec
inc
pusha
mov
jl
test
es
dec
icebp
cli
and
mov
ja
push
sub
std
mov
cmp
nop
in
jmp
cmpsb
xor
outsl
sbb
or
mov
dec
repnz
mov
iret
rcll
jne
sub
std
int
adc
xchg
push
or
mov
aas
push
adc
out
cli
or
adc
test
xor
jp
xchg
inc
movsl
cs
inc
mov
dec
pushf
into
adc
xchg
or
or
and
push
ret
fprem
mov
js
xor
call
inc
mov
in
cmp
call
dec
dec
sub
cli
ffreep
inc
fstps
push
cmp
add
insl
fmuls
sbb
dec
imul
mov
imul
ret
mov
call
leave
and
sbb
and
and
lret
xchg
sbb
stos
stos
in
stos
xor
cmpsl
mov
lea
inc
jne
sbb
jle
pushf
jno
out
push
mov
cmpsl
out
jae
and
andl
ljmp
mov
lret
sub
popa
stos
mov
incb
dec
stos
xchg
jle
dec
jo
inc
pop
cmp
dec
add
test
sub
hlt
in
pop
mov
inc
fisttps
cwtl
aas
loopne
cmpsl
sahf
divb
mov
sub
sub
lahf
sbbl
pop
sub
jle
mov
pop
ficoms
cmp
mov
mov
jae
jg
jp
xchg
pop
cmp
sbb
xlat
mov
xchg
aad
ret
sti
inc
xchg
pop
pop
outsb
mov
mov
mov
inc
and
pop
stos
fwait
cs
pop
and
fisttps
mov
lds
mov
push
cltd
mov
fs
jae
pop
add
and
fldt
test
xchg
jae
sbb
and
dec
hlt
pop
mov
add
mov
cmp
pop
jle
data16
movsl
jne
lds
mov
movsb
mov
fldt
lods
scas
mov
scas
jae
and
imulb
xor
sub
repnz
cmp
mov
jge
mov
mov
std
stos
dec
sub
or
shrl
stos
adc
hlt
cmp
mov
inc
mov
sub
inc
inc
shlb
push
inc
mov
jns
dec
frstor
push
repz
jle
adc
fmull
ficoms
mov
out
mov
jb
outsl
call
mov
les
cmpsb
fnsave
cli
jp
lcall
out
xor
adc
mov
arpl
mov
into
rclb
adc
shll
xor
ss
jo
std
mov
cli
shl
and
mov
xchg
stc
mov
int
push
pop
insb
mov
int3
jl
outsb
sbb
sub
lahf
dec
sbb
es
sbbb
sahf
and
movsl
cmpb
push
sub
jo
xlat
bound
ss
sbb
sbb
sti
sub
or
stos
jno
orb
or
sbb
xchg
cwtl
xor
ror
cli
into
inc
sbb
jmp
je
sbb
pusha
cltd
insb
and
mov
ss
push
xchg
pop
loop
loopne
push
inc
jmp
sbb
cmp
xchg
sarl
lret
push
daa
test
outsb
xorb
cmp
int
cmp
xchg
push
in
pop
push
les
dec
or
jno
jmp
dec
ljmp
loope
roll
sub
lret
and
subl
jp
xchg
int
add
in
cmp
mov
jns
pusha
xchg
stc
sbb
stc
and
add
push
ljmp
add
mov
xor
int
fisubrl
sbb
nop
test
sub
outsb
int3
pop
jge
inc
lret
test
dec
adc
fcmove
std
or
jge
jnp
mull
aam
pop
jge
cltd
jbe
sbb
xchg
jmp
pop
in
mov
sbb
ret
mov
test
dec
jg
jecxz
mov
cli
sbb
xchg
mov
jbe
lea
out
sbb
add
mov
leave
mov
mov
xor
mov
fcomip
pop
hlt
shlb
adc
and
xor
mov
sub
decb
shlb
mov
sub
cvtpi2ps
out
xchg
and
add
adc
dec
testl
adc
pop
fsts
push
pop
cmp
and
aas
push
rcl
aaa
repnz
jp
push
mov
xorl
xchg
stc
jo
testl
in
in
dec
orb
push
aam
lret
jmp
push
in
dec
stc
sbb
dec
jne
dec
jge
push
cwtl
lea
jne
imull
sub
andb
fnstsw
push
mov
fiadds
push
aaa
hlt
fs
cmc
in
negl
push
sarl
mov
imul
mov
imul
xchg
test
pop
cli
hlt
in
inc
cmp
fisubs
subl
sub
das
aam
mov
sbb
and
push
lret
ds
mov
adc
or
rclb
mov
js
loope
in
fstpl
xchg
loop
les
movsb
dec
inc
sbb
rcll
add
scas
inc
pop
inc
jb
jle
sbb
js
adc
push
inc
addr16
enter
fidivs
and
sbb
out
sub
popf
cmp
pop
mov
aam
pop
loop
addb
mov
sbb
mov
ret
js
xlat
cmp
call
mov
loope
repz
fisttpl
xchg
leave
dec
gs
imul
nop
repnz
xchg
imul
daa
xchg
xchg
xchg
pop
pop
mov
push
mov
pop
jnp
pop
fcom
test
adc
push
or
sub
sbb
xchg
cmp
mov
sbb
lahf
test
and
jg
movsb
mov
cmpsl
aaa
jge
pop
pop
push
movsl
cwtl
outsb
pusha
cld
inc
mov
or
ss
cltd
pminsw
inc
cmp
sbb
xchg
jg
push
loop
cmpsl
testl
push
movsl
sbb
insl
sarl
mov
inc
test
fisubrl
push
icebp
loope,pn
repz
push
fmull
inc
lret
jbe
adc
cmp
push
fst
lds
mov
cmpsl
es
icebp
hlt
pop
mov
jno
add
mov
loopne
loopne
lods
jp
es
mov
mov
pop
in
int3
aaa
pusha
shrl
jecxz
sti
dec
mov
cmp
int
call
popf
movsb
repz
cld
sbbb
cli
aam
bound
cmp
popf
add
jbe
mov
loopne
sbb
lods
ja
inc
js
test
test
mov
scas
testl
jbe
repz
scas
add
push
jmp
out
add
iret
mull
stos
rcrb
nop
xor
out
scas
cs
xchg
rorb
pop
mov
lods
cmp
leave
fnstcw
testb
daa
xchg
inc
cmpsl
int
mov
repnz
hlt
cmc
test
xor
and
mov
je
pop
loop
xlat
stos
inc
jbe
ja
dec
aam
repz
mov
jno
imul
aaa
xor
outsb
xchg
jge
inc
or
cld
inc
xchg
mov
ja
jno
stc
loope
dec
ss
int3
out
dec
movsb
xchg
lods
sub
push
sub
test
add
jge
pop
cltd
in
add
mov
shr
jg
aas
clc
push
arpl
sub
out
and
push
sbb
mov
xchg
dec
cld
jbe
repz
pop
rcrl
cmp
xchg
sub
out
mov
hlt
movsb
fistps
sub
or
sbb
popl
xor
jnp
aas
mov
int
or
pop
jl
gs
aad
jae
cmp
push
cwtl
shl
or
inc
jecxz
lds
jmp
movl
jbe
dec
lods
push
sbb
subb
test
push
xor
mov
cs
aam
test
stos
pop
iret
xchg
xor
mov
imul
iret
sbb
and
push
mov
insb
lcall
arpl
dec
push
adc
adc
das
push
fcos
and
xor
xrelease
or
ds
test
mov
imul
fbstp
sbb
cwtd
mov
sbb
cmp
aam
popf
mov
stos
popa
inc
std
sub
insl
pop
pop
ret
repnz
sbb
cmc
jle
mov
dec
daa
jmp
mov
xchg
push
cmc
outsl
fs
cmp
imul
add
out
aad
pop
cmp
icebp
fcoml
mov
jmp
mov
dec
aas
mov
xchg
jae
movsb
scas
adc
popa
cmp
lods
pop
mov
popa
in
xchg
mov
jb
jp
inc
jns
mov
in
or
sbb
xchg
in
test
lock
mov
fnstsw
xabort
cmp
imull
or
aaa
cmp
call
mov
lods
mov
mov
mov
sti
hlt
aaa
inc
and
jp
enter
jge
shrb
push
and
in
jle
in
jp
in
adc
dec
les
mov
add
cmp
popf
pop
add
aas
mov
popf
aas
mov
outsl
aaa
out
pop
imul
iret
inc
std
mov
add
jb
adc
es
movl
loop
push
push
stc
movsl
ljmp
inc
mov
dec
xchg
or
lea
sbb
stos
popa
sbb
rcl
int
mov
sub
mov
sub
fdivrs
call
mov
sbb
adc
out
sub
std
lods
stc
out
aaa
xlat
mov
jp
fistpll
sbb
inc
cmp
mulb
push
xchg
xchg
aas
test
insb
mov
xor
and
sub
idivb
dec
pusha
pop
int3
cmpsl
mov
into
pushf
insb
jmp
aam
jns
adc
jg
xlat
pop
pop
mov
pop
push
fnstsw
push
inc
mov
mull
sbb
push
data16
mov
in
add
mov
inc
pop
dec
aad
icebp
out
mov
mov
enter
sbb
push
pop
mov
sbb
enter
pop
mov
adc
push
push
rol
addr16
rcrb
or
cmpsl
jnp
cmp
mov
pop
jb
rcl
cmpsb
xor
testl
xlat
popa
insb
idiv
test
repnz
cmpsb
adc
test
push
cmovle
and
aaa
aaa
int
mov
clc
xor
imul
or
cltd
rorl
mov
sbb
jns
inc
sahf
and
mov
pop
xor
imul
shl
jle
aas
aaa
cmc
pop
push
inc
xchg
jns
leave
jbe
jmp
rcl
mov
imulb
sub
jne
and
push
aam
test
mov
pop
rolb
rorl
mov
push
mov
out
js
out
dec
mov
rol
jns
outsb
mov
iret
js
pop
mov
push
pop
mov
inc
movsb
out
push
lds
aas
loopne
add
jmp
and
popf
imul
add
jl
xchg
jo
dec
sub
push
ljmp
iret
cmp
xor
setno
test
ds
mov
sahf
sbb
es
inc
sub
jle
adc
xor
daa
popa
and
data16
mov
inc
int3
cmp
lods
sub
arpl
and
movsl
lds
js
jecxz
out
divl
sub
ja
sbb
jbe
xchg
in
xor
je
fildl
sub
ret
adcl
add
push
push
pop
mov
jecxz
sub
pop
nop
adc
mov
cmc
or
mov
xorb
mov
cld
jo
movsl
add
lahf
xor
adc
pop
shll
test
xor
int
adc
or
jno
je
jne
fdivl
jbe
pop
repz
jae
xchg
pop
cmp
pop
inc
adcl
pop
fdivl
push
dec
jae
adc
xlat
mov
inc
dec
cmpsb
xlat
add
in
cmp
sub
lds
insb
dec
mov
repnz
sbb
mov
jl
ss
pop
jns
test
leave
or
in
xor
and
std
mov
sbb
sbb
xchg
test
aam
rcll
out
jle
testb
lods
aad
inc
jg
cmp
lret
xchg
mov
pop
in
and
push
out
add
sahf
test
ds
dec
pop
fucomip
sbb
mov
jg
cmp
add
dec
mov
fwait
pop
in
subb
imulb
jle
or
mov
jmp
cmc
orb
lahf
ffreep
movsb
mov
sbb
and
mov
lds
mov
inc
insl
outsb
sub
fistpll
decb
cltd
popa
dec
aam
jo
sti
pop
stc
and
dec
dec
stos
mov
xchg
lods
insb
les
and
jne
scas
rcrb
cmp
jae
out
arpl
inc
leave
jg
fldcw
inc
repz
std
pop
add
push
add
pop
or
sub
mov
pop
icebp
jnp
cmc
lods
pop
push
mov
push
cmp
cs
cmp
jg
pushf
mov
push
loope
in
pop
add
dec
xlat
popa
jbe
cwtl
cwtl
mov
cmpsl
xchg
mov
stos
jb
ja
jp
rorl
push
dec
cmp
fcompl
add
cwtl
mov
and
xchg
adc
cmp
inc
mov
je
mov
es
sbb
mov
push
js
arpl
jb
jne
sbb
mov
sub
push
loopne
inc
ss
ja
add
xchg
and
clc
sub
sbb
jns
repnz
lds
xor
mov
sub
ljmp
popf
cmp
adc
push
aaa
imul
push
repz
popf
lds
cmpsl
push
pop
xlat
jle
sub
andl
data16
repnz
cli
fiadds
push
iret
mov
jle
mov
inc
lahf
inc
testl
xor
lcall
xchg
mov
mov
cmp
add
adc
cwtl
sbbb
ret
pusha
xor
or
sti
fs
lock
aad
movl
cmp
mov
mov
stc
pop
jl
movsl
mov
imul
sarl
and
lahf
xchg
adcb
or
aad
stos
pop
sbb
mov
xchg
bound
ja
sbb
xchg
push
jnp
out
pop
in
xchg
inc
push
gs
addr16
das
pusha
lods
fcompl
adc
pop
jmp
mov
xor
xlat
dec
sbb
or
jbe
call
pushf
inc
jecxz
mov
lea
xor
dec
push
push
sub
jnp
scas
call
insl
jmp
dec
mov
pop
push
fdivs
jae
dec
lahf
jno
or
fstpl
sbb
faddl
mov
xchg
pop
shll
xchg
cmp
mov
jbe
mov
leave
add
push
push
ds
cmp
ret
push
aam
mov
test
pop
popf
test
sbb
outsb
aam
xor
sub
ljmp
inc
shlb
outsl
pop
gs
pop
and
popa
ret
or
movb
jno
or
fcomp
shl
incl
xor
mov
rolb
and
in
add
adc
add
xor
mov
pop
jnp
push
popfw
pop
loopne
xor
sbb
sbb
pop
stos
pop
jb
add
popf
inc
iret
aad
adc
cmp
js
add
adc
leave
icebp
ja
shl
aam
aaa
or
sahf
mov
lret
cmpsl
stos
scas
shl
stos
rclb
jge
icebp
add
stos
jae
clc
adc
xchg
idivl
dec
in
or
mov
in
cmp
nop
into
arpl
out
sub
cmp
loope
push
jmp
enter
fldl
mul
andb
xchg
xchg
test
push
mov
mov
ja
repnz
mov
xchg
dec
loopne
inc
pop
pusha
sub
loope
push
pop
pop
xor
jo
jle
pop
hlt
clc
inc
cld
or
push
and
movsl
lret
lds
cmp
mov
pop
sbbb
aas
aam
arpl
dec
jns
in
test
add
jno
hlt
inc
lock
xchg
push
mov
mov
test
push
gs
jecxz
or
cmpl
adc
int3
fcoml
aam
inc
test
sub
mov
add
xchg
popf
pop
sbb
cs
pop
adc
insb
sbb
push
mov
test
mov
inc
icebp
pop
push
mov
scas
pop
lcall
fwait
popf
mov
les
add
mov
cmp
fisttpll
or
lcall
scas
hlt
inc
inc
add
imul
lods
jl
jbe
add
and
ret
ja
add
fistpll
dec
stos
adc
lahf
lods
dec
hlt
sub
or
jno
scas
dec
xor
dec
xchg
stos
test
test
or
xor
aad
pop
cld
fdivrl
lret
sahf
sub
mov
dec
andb
sub
or
movsl
mov
mov
xor
fmull
stc
adc
icebp
add
jb
out
scas
cmc
or
bound
lds
xor
arpl
pop
jae
or
inc
je
fstpt
jmp
lods
ret
mov
push
jae
in
div
aas
jns
adc
mov
push
hlt
or
xlat
stos
insl
iret
pop
int3
je
or
mov
cmp
out
scas
sbb
ljmp
xchg
fsubl
scas
idivl
adc
pushf
lods
jnp
dec
pop
jg
or
sub
add
mov
add
inc
mov
decb
mov
jecxz
sub
xchg
push
jbe
pop
iret
shl
push
push
fsubr
out
mov
lret
popf
inc
adc
outsb
out
leave
int3
aas
les
sti
lea
fwait
loope
test
mov
or
push
sub
add
inc
gs
inc
mov
or
adc
scas
ds
adc
lds
mov
dec
rorb
cmpsb
dec
nop
data16
andb
cmpsl
mov
fdivrl
invd
sub
sbb
mov
aad
pop
fucom
lods
cld
movl
mov
in
ss
sub
test
pusha
out
xchg
jno
ds
fisttpl
int
fistpll
jns
pop
js
icebp
pushf
push
push
rorl
xorl
cld
or
push
sbb
mov
and
cwtl
and
mov
mov
or
mov
test
or
out
in
sbbl
iret
arpl
mov
sub
or
xchg
out
xchg
sbb
ljmp
popf
jge
fstps
sbb
fcomp
mov
in
cli
xor
add
movsl
push
sbb
std
xchg
pop
andl
jno
test
cmp
mov
cmp
mov
jae
inc
dec
xorl
push
sarl
cli
int
xor
lret
sbb
fdivs
xor
jno
bound
xlat
fadds
scas
mov
cmp
aad
in
adc
test
or
fcomip
fs
mov
adc
adc
xlat
jno
xchg
inc
dec
mov
pop
sbb
mov
out
test
lock
or
jmp
cltd
ljmp
and
mov
lret
mov
insl
ljmp
jne
pop
push
sbb
sub
test
mov
push
cmp
mov
sbb
cmp
inc
scas
test
stos
sub
xchg
scas
xor
sub
movsb
movsl
out
jge
sbb
aad
and
cmc
out
push
iret
dec
lret
test
push
pop
jae
fwait
mov
cmp
loop
mov
mov
repnz
in
or
sbb
cmp
jae
nop
adc
movsl
push
pop
daa
arpl
fptan
pusha
imul
jae
inc
adc
movl
lret
jmp
mov
out
mov
rorl
stc
subl
adc
dec
in
fcoml
mov
push
sub
rcll
pop
inc
mov
ficoml
dec
mov
mov
and
xor
lahf
stos
push
jb
aaa
mov
pop
mov
mov
pop
hlt
leave
shrl
cli
fsubl
add
add
in
in
les
outsb
push
ret
sbbb
iret
scas
outsb
insl
std
jae
into
jb
and
sti
jno
in
lret
popf
enter
fidivl
pop
lods
divl
jle
lea
adc
jne
aam
mov
shlb
pop
inc
repnz
push
jae
test
imul
outsb
leave
dec
inc
adc
cld
dec
xchg
jmp
push
cli
pop
push
ds
mov
and
jp
mov
ret
sti
pop
and
enter
insb
outsb
mov
inc
push
stc
cmpl
rcrl
xor
pop
xor
dec
mov
cmp
lret
cmpsl
daa
mov
lods
ja
scas
dec
mov
enter
imul
mov
ficoml
sbb
push
jnp
dec
outsl
xor
int
push
lcall
int3
pop
cmp
sbb
es
aad
xor
push
fsubrl
loope
out
fwait
add
cmp
or
xchg
repz
sub
lcall
adc
js
mull
or
mov
add
push
movsb
sbb
pop
adc
add
int3
fwait
imul
adc
cmp
mov
lahf
jnp
outsb
mov
mov
and
push
push
add
shlb
lcall
sbb
outsl
hlt
mov
mov
fnsave
imul
lret
lea
adc
andl
jnp
nop
sub
mov
aad
adc
push
xor
mov
rcl
cmpsl
adc
xor
push
inc
cli
rorb
test
gs
sub
adc
jo
inc
imul
cld
jmp
call
cmp
push
int3
nop
mov
lods
es
sbb
adc
adc
js
cmc
idivl
loope
incl
jbe
jg
out
jge
sti
push
jne
fists
sub
mov
out
inc
jo,pt
leave
sahf
fcmovbe
cmp
mov
cltd
shrw
sub
insb
jp
jb
out
jo
loop
sbb
xchg
insb
shrl
lcall
mov
shrl
mov
cmpsl
call
jle
inc
sbb
ret
sbb
cli
dec
cwtl
lods
jae,pt
popf
jp
nop
sub
popa
xor
add
flds
add
arpl
or
lahf
imul
cmpsb
push
loope
add
sub
mov
xor
aam
ja
xchg
jne
in
jecxz
loop
mov
lods
movl
fadd
cltd
dec
arpl
imul
into
pushf
jae
or
or
pop
sub
cli
out
cmp
pop
pop
or
je
lret
mov
fwait
lods
jo
std
mov
loopne
pop
pop
mov
push
push
xor
lock
cltd
mov
lds
mov
rorl
mov
adc
popf
mov
push
mov
jb
sbb
mov
pop
sub
jge
sbb
mov
xchg
dec
dec
outsl
push
cld
call
dec
in
mov
push
inc
inc
inc
jg
pop
xchg
cmpsb
mov
push
fadds
and
mov
imul
es
out
dec
cmp
inc
push
push
mov
cmpl
outsl
sbb
add
fistpl
cmp
cmp
test
lods
xchg
dec
xchg
adc
aad
daa
int3
dec
inc
jno
mov
mov
cwtl
push
bnd
je
and
xchg
sbb
insb
sub
aad
and
rcl
inc
push
sub
xchg
test
adc
insl
ja
ficoms
xchg
xor
inc
xlat
push
cmp
adc
push
stos
inc
stos
adc
ficoms
fwait
xchg
int
cltd
insb
sbb
mov
aam
movsl
fdivrl
into
loope
or
dec
test
imul
ret
call
and
inc
out
test
cmp
jge
adc
scas
sub
iret
and
fadd
test
pop
push
mov
add
inc
mov
stc
or
scas
js
mov
xor
push
out
and
out
loopne
in
mov
lcall
xor
and
mov
repnz
std
dec
movsb
addr16
xchg
pop
cmp
movsb
int3
insl
int
cmp
aad
movsb
roll
push
dec
repnz
push
push
pop
jne
jle
mov
cld
dec
test
push
adc
aaa
xchg
add
sub
notl
testb
jno
leave
xlat
pop
ss
push
rcl
ds
push
test
mov
cmp
das
int
mov
xchg
sub
fidivl
xchg
dec
sbb
or
push
loope
fsubs
popa
call
mov
xchg
pop
cmc
pusha
mov
push
add
add
cs
test
int
jno
leave
call
sub
test
rolb
mov
mov
sub
lret
xchg
sub
rcrl
push
dec
jmp
mov
xor
inc
jae
in
or
fmull
ret
out
je
xor
movsl
adc
inc
mov
sub
push
in
jmp
jnp
das
lods
imul
jg
xor
ficomps
or
mov
sarl
fnsave
xchg
mov
mov
sarb
out
mov
out
push
push
mov
mov
ljmp
shl
push
or
and
out
xchg
ljmp
hlt
push
mov
lahf
xor
dec
xor
popa
lret
mov
push
xchg
scas
aas
push
xor
inc
dec
ss
and
mov
sub
jb
aas
adc
pusha
mov
xchg
mov
or
and
mov
adc
push
repz
mov
cmp
push
add
xchg
add
xor
mov
int
sub
out
sbb
ljmp
mov
xchg
sub
scas
inc
and
dec
mov
or
out
in
inc
mov
and
push
out
out
mov
mov
loope
push
ret
addb
mov
jno
mov
adc
pop
sbb
inc
imul
sbb
mov
out
pushf
movsl
les
jmp
or
push
out
outsb
and
into
cmp
jle
fsub
xor
push
mov
push
pop
pop
push
imul
xor
fidivs
in
aam
out
lahf
xchg
and
lea
pop
ja
xchg
lods
sub
sahf
sbb
enter
loopne
push
push
jmp
fisubl
mov
and
and
and
punpckhbw
adc
or
mov
pop
add
rclb
aam
inc
dec
cmp
icebp
push
xor
add
rcl
xor
mov
imull
and
lahf
subl
test
loope
xchg
add
ret
les
repnz
mov
xor
sbb
pop
in
xchg
out
aas
pusha
sbb
jmp
sub
cmp
popa
inc
cmp
and
add
pop
push
jbe
and
js
mov
pop
mov
in
sbb
dec
sbb
lds
jb
adc
je
pop
sti
mov
add
inc
roll
test
cmc
xor
fcmovbe
test
popa
rolb
xor
mov
stos
jo
sub
cwtl
push
aam
inc
mov
cmp
push
ret
mov
add
rcl
andl
outsb
pop
push
icebp
imul
xor
cmpsb
test
and
xor
jg
frstor
cmpsl
push
mov
cs
icebp
push
mov
mov
test
xor
dec
fucomi
pusha
jge
add
std
push
cmpsb
repz
sahf
insl
rcrl
in
xor
in
dec
add
and
dec
rcrl
test
push
fdivr
lods
iret
or
sbb
pop
sub
sarl
lcall
stos
loope
push
mov
push
lock
cli
stos
in
cld
mov
hlt
xchg
js
mov
cli
rol
sbb
ret
mul
inc
mov
fsub
push
out
aad
hlt
fisttpl
roll
xchg
xchg
adc
lahf
push
push
adc
mov
cmp
les
mov
mov
repnz
roll
outsl
in
and
in
adc
add
inc
xor
pop
mov
pop
pop
ret
int
in
sub
pushf
adc
movsb
aam
mov
mov
sbbb
jo
imul
testb
aad
mov
es
das
bound
out
xor
out
mov
in
inc
ret
sub
inc
jle
insl
in
jg
pop
or
mov
das
popf
xchg
icebp
push
mov
push
push
call
sub
fstpt
or
dec
jo
inc
int3
fstpl
xor
es
imul
xor
jmp
cmpsb
cmp
cltd
icebp
daa
outsl
xor
push
vcvttss2si
nop
dec
mov
push
push
call
sbb
inc
mov
jno
pop
mov
jp
fidivrs
rcll
adcl
mov
arpl
add
add
and
cmp
xchg
es
add
fwait
call
das
movsl
mov
xchg
into
cwtl
sbb
pusha
push
insb
sarl
xor
cld
roll
jl
mov
call
dec
xor
mov
push
mov
test
mov
daa
js
movsl
lcall
fbstp
xor
mov
gs
stos
dec
loope
dec
jmp
repnz
xor
pusha
push
sub
mov
xor
daa
or
xchg
test
pop
jbe
mov
bound
dec
cmp
mov
add
sub
dec
sbb
xchg
jl
mov
push
inc
je
nop
push
fs
jb,pt
jmp
sbb
inc
or
adc
sbb
adc
cmp
ffree
push
pusha
jl
jl
cwtl
hlt
outsl
or
jle
lahf
mov
pop
mov
cld
fcompl
fstl
mov
stos
mov
pop
rcr
testl
gs
dec
std
mov
and
mov
sbb
pop
js
js
cld
repz
dec
cld
mov
neg
sub
loop
inc
pop
repnz
xlat
mov
sbb
adc
in
shlb
cli
ss
loope
subb
dec
sbb
fnsave
lret
testb
cli
dec
xor
jo
in
or
adc
dec
fprem1
iret
mov
cmp
mov
sbb
mov
mov
lcall
and
jne
jo
lahf
xchg
out
inc
cwtl
je
adc
pop
push
dec
adc
bound
dec
mov
fistpll
xchg
or
jmp
ss
adc
sub
das
jl
cmpsl
pop
repz
sub
cmpsb
mov
popa
cli
sub
push
jnp
and
pop
aas
xor
ret
cld
popf
mov
imul
inc
fimull
pop
jbe
xchg
mov
gs
xor
push
xchg
mov
sahf
add
clc
add
cmc
out
push
inc
adc
loopne
mov
push
jecxz
outsl
rcrb
sbbb
or
arpl
lea
mov
dec
in
mov
aad
xchg
push
dec
mov
sbb
push
sub
in
scas
mov
outsb
xchg
cmpb
cld
mov
push
idivb
xor
mov
xor
or
jp
mov
inc
add
push
in
sbb
mov
clc
enter
mov
push
gs
sahf
pop
xchg
out
in
insl
or
negb
test
cmp
and
push
inc
mov
dec
fcmovu
daa
sub
adc
mov
dec
cmp
dec
push
loop
sub
hlt
add
pusha
or
push
mov
std
imul
jg
dec
jae
push
sub
scas
inc
adc
imul
int
subl
xchg
dec
test
leave
sahf
pop
and
add
das
xchg
lahf
jle
inc
or
aaa
sub
sti
imul
clc
cmpb
rcl
andb
insb
stc
movsb
pop
mov
idivb
mov
in
jns
sub
mov
mov
cli
and
pop
aad
icebp
fiadds
mov
out
xchg
orb
jge
lds
fldcw
testb
mov
xchg
push
or
stos
movsl
adc
roll
lods
inc
test
add
daa
sti
pop
mov
jecxz
xchg
dec
xchg
cmp
cmp
sahf
js
popf
push
scas
ret
mov
or
sbbl
pop
inc
push
cwtl
xchg
mov
jmp
adc
pminsw
add
inc
lea
out
in
jbe
mov
lods
enter
mov
add
ret
mov
int3
aaa
xor
les
jns
push
jl
lret
lfs
daa
jmp
jmp
out
pop
rorl
clc
pusha
dec
push
cvtpi2ps
lock
adc
insl
frstor
xchg
nop
dec
stc
pop
inc
scas
push
sbb
push
test
xchg
xchg
pop
fmull
loopne
adc
mov
fstl
icebp
cltd
add
jmp
push
mov
jle
icebp
mov
cmp
movsl
cmp
call
add
pop
adc
daa
fwait
popa
addr16
mov
jl
jo
inc
cmp
xchg
and
sbb
push
mov
mov
aaa
shll
call
or
cmp
idivb
add
ds
fiadds
mov
push
cwtl
ljmp
mov
xor
sbb
add
rcll
xor
scas
movsl
clc
lock
aam
frndint
out
insl
cltd
test
cmp
or
idivl
xor
inc
xor
leave
push
ficomps
pop
negb
test
jo
mov
mov
sbb
pop
fistl
mul
pop
push
sub
adc
arpl
xor
inc
xor
or
lret
ss
lahf
push
and
sub
adc
cld
push
negb
lahf
or
dec
imul
sbb
dec
xor
and
pop
ds
jg
cmp
or
loop
xchg
inc
and
cld
mov
or
dec
lds
jle
mov
jbe
fwait
stos
sub
cld
mov
enter
ret
or
rcrb
cmp
dec
dec
mov
sbb
or
sub
xor
loop
push
push
imul
sub
inc
cmp
adc
movsl
mov
stos
add
sbb
dec
mov
sar
addb
setnp
adc
xchg
pop
sbb
fidivs
pop
fiadds
scas
ljmp
stos
test
aad
clc
push
push
dec
ljmp
cmp
inc
sbb
cmp
pop
into
pop
xor
xchg
movsb
xor
rcll
xchg
in
xor
out
das
jbe
dec
fisubs
scas
xchg
fs
cmp
or
adc
test
adc
in
push
icebp
xchg
xor
pop
rorl
jns
jmp
xchg
mov
mov
loop
inc
movsl
cmpsb
in
mov
cltd
add
sbb
shll
cmp
xchg
ss
mov
or
xchg
out
lods
int
es
adc
push
clc
cmp
ds
jns
pop
add
loopne
sub
nop
sub
repnz
lret
idiv
ret
mov
test
inc
add
fadds
mov
mov
aam
test
aaa
out
add
mov
dec
jle
lods
imul
pushf
int
jp
and
and
pop
jb
sti
mov
mov
push
inc
movsb
lcall
es
sar
aam
test
fsts
pop
and
and
and
dec
vcvttpd2dqx
mov
repnz
xchg
sbb
in
mov
icebp
cmpsb
jecxz
mov
sbb
inc
pop
fcomi
xor
jg
xor
mov
mov
mov
and
or
or
and
int3
fsubrs
or
in
into
xor
sub
loop
cmc
rorb
ja
cwtl
inc
iret
inc
sub
add
mov
pop
cmp
cmpsl
pop
scas
xchg
int
sub
or
incl
cmpl
mov
cmp
mov
pop
int3
cltd
xchg
push
or
cmpsb
cmp
mov
loopne
paddw
sub
stos
sbb
push
push
pop
loop
pop
stos
xlat
scas
mov
and
loopne
cld
push
fcomip
idivl
mov
adc
mov
enter
inc
mov
shrb
aad
test
sahf
fldcw
push
dec
in
xlat
outsb
imul
rcrl
add
sub
mov
scas
xor
mov
dec
and
sub
test
or
leave
in
mov
mov
in
mov
sub
data16
jge
push
cmp
dec
adc
dec
cmp
add
mov
inc
push
andb
dec
cwtl
push
inc
fwait
sbb
sbb
mov
add
xlat
mov
movsl
adc
cs
sub
dec
jg
and
dec
dec
popa
pop
out
ds
jp
pop
out
xor
fiadds
lahf
lcall
adc
mov
movsl
xchg
push
pop
inc
lock
xor
movsl
inc
fsts
sub
mov
dec
mov
faddp
mov
and
sahf
push
pop
inc
scas
add
lods
mov
sub
data16
lods
scas
aam
mov
push
lods
mov
add
ret
sarl
sbb
add
insl
add
std
mov
int
mov
xlat
or
fdivrs
pop
jb
pop
insb
imul
inc
pop
shrb
popa
jg
sbbl
push
pushf
mov
pop
xor
mov
xchg
test
test
pop
cs
rorl
cli
jns
mov
jns
mov
out
sbb
mov
mov
lock
sbb
cmp
test
out
add
fwait
sbb
call
scas
mov
lds
push
dec
or
lcall
xchg
js
clc
lods
jge
cli
xor
cmp
bts
adc
or
adcb
clc
das
jns
shrl
pushf
cmp
in
jns
mov
fdivl
xchg
mov
or
in
in
pop
xchg
inc
sti
push
mov
sub
std
mov
and
stos
pop
pop
add
pop
mov
pop
fisubrl
scas
stos
fidivrl
ja
hlt
data16
jp
rorb
fistpll
fadd
in
xchg
mov
fwait
push
shlb
out
adc
insl
lcall
mov
xor
pop
out
idiv
sarb
sub
enter
mov
push
jbe
icebp
sbb
mov
xchg
test
inc
fwait
dec
pop
xlat
adc
movsl
adc
add
imulb
iret
and
shlb
movsl
stos
scas
fwait
sti
daa
je
call
scas
adc
and
jl
das
mov
mov
push
inc
cmp
clc
out
movsl
mov
out
outsb
and
inc
ljmp
push
xor
pop
in
flds
pusha
ret
jbe
bound
lret
dec
inc
cmp
mov
in
aam
dec
xor
mov
adc
je
add
idivb
gs
mov
jb
enter
mov
inc
sbbl
jmp
and
adc
push
and
jbe
cli
dec
adc
out
cmp
mov
enter
xchg
stos
adc
mov
repnz
push
call
lods
adc
out
les
addr16
adc
adc
dec
adc
std
cmpsl
popa
loop
push
rol
cs
stc
test
jecxz
fldt
fldlg2
mov
fildll
fldcw
cmp
aas
int3
cmpl
andl
pusha
jnp
sbb
mov
incl
or
inc
lods
shll
repz
mov
std
jbe
inc
fldt
in
or
jo
sub
aam
sbb
mov
jle
pop
repnz
sbb
mov
mov
fisubrl
fs
cmc
dec
mov
scas
sub
add
pop
dec
fiaddl
xlat
sub
adc
gs
ja
mov
dec
xchg
lock
repnz
inc
sbb
pop
add
xchg
or
cmp
daa
push
xchg
sbb
test
outsl
sbbb
cmp
cltd
lock
test
or
cmc
loope
lret
das
clc
push
inc
sti
or
xor
cmc
in
notb
mov
int
push
xchg
mov
mov
fwait
out
lcall
ficompl
cwtl
pop
xor
rorb
mov
mov
and
xchg
sti
fmul
leave
pop
cmp
jmp
std
fiaddl
clc
gs
rolb
push
lods
jge
cmc
or
iret
ficomps
sub
mov
sbb
les
out
dec
repnz
xchg
dec
mov
xchg
aaa
mov
test
jo
dec
aam
xchg
ljmp
lahf
jmp
add
inc
jae
into
pop
popf
dec
ds
fsts
xchg
push
xchg
jmp
lods
mov
roll
or
sub
nop
push
in
adc
jmp
in
cmp
fwait
js
sbb
fistpll
cmpsb
add
fcompl
push
aad
jg
adc
push
clc
or
ja
inc
jb
setb
addr16
sub
negb
mov
push
pop
fucomi
fiaddl
inc
lret
into
ror
cltd
or
bnd
cmp
add
loopne
sub
xor
inc
es
cmpsl
xlat
pop
imul
sub
js
add
xor
dec
repnz
xchg
stos
mov
mov
loop
mov
jae
loope
cmc
xor
cli
bound
roll
test
jns
jmp
shlb
out
push
jl
and
mov
pop
jg
lcall
sbb
sub
cmp
xchg
sbb
pop
mov
xchg
mov
clc
xchg
sti
lret
mov
inc
imul
lods
stc
int3
xor
ror
stos
pop
or
cmpsl
loope
mov
push
popa
lods
add
cltd
cs
cmpsl
test
nop
or
mov
pop
lret
sub
push
dec
sub
call
stos
sbbb
cmpsb
loop
or
adc
nop
in
pop
repnz
rcrb
xor
pop
sub
aaa
and
ja
out
nop
cmp
mov
cli
push
pop
adc
arpl
test
rcll
rclb
add
movsb
push
adc
andb
adc
dec
js
mov
subl
push
push
mov
psrad
jmp
sbb
push
andl
std
xchg
mov
cld
out
shlb
daa
out
subl
push
fwait
jbe
cmp
ret
ds
test
addl
mov
sub
mov
mov
outsb
inc
js
aas
xor
sub
leave
sbbb
insb
inc
hlt
loop
add
cmp
pop
sbb
pop
sub
cmc
mov
insl
repz
jge
enter
out
test
dec
sub
dec
fsubs
je
xor
leave
xchg
dec
insl
xlat
and
cmp
jae
mov
cli
push
adc
jbe
jae
inc
sub
mov
xor
rcr
faddl
or
out
outsb
pusha
jae,pn
jmp
sbb
add
mov
mov
jmp
cmp
and
lret
pop
jo
les
lock
popf
pop
sub
push
dec
mov
lods
dec
mov
test
iret
int
cmp
lahf
ljmp
test
jle
loop
jne
mov
cli
pop
mov
ret
in
insb
icebp
add
popf
mov
mov
adc
mov
inc
inc
xor
stos
cmpsb
mov
test
fisubrl
mov
push
pop
rolb
mov
and
jo
xor
das
sub
xchg
inc
fldenv
xchg
sbb
dec
call
and
jns
ja
js
popa
xor
pop
mov
subb
and
add
fiadds
orl
out
mov
leave
lret
xchg
pop
stos
int3
sbb
ss
sbb
repnz
push
push
or
into
shrl
out
test
cmp
pop
and
jno
cmp
lock
cltd
adc
mov
add
xlat
and
inc
sbb
repnz
leave
mov
bound
mov
sub
clc
fwait
inc
daa
icebp
cmp
mov
js
lahf
scas
inc
aaa
sbb
ljmp
mov
push
push
je
push
icebp
or
das
stos
mov
dec
inc
dec
mov
push
loopne
cmp
xchg
dec
xchg
out
mov
jo
into
aad
pop
loopne
arpl
enter
scas
jle
lret
mov
mov
ss
fsts
push
aas
aaa
and
cld
mov
cmp
mov
int
inc
arpl
ficomps
es
jecxz
in
test
cmp
mov
and
das
pop
into
rorb
adc
pop
mov
and
jns
cli
enter
fs
inc
lods
dec
orl
out
and
out
or
mov
jbe
dec
dec
mov
jo
popa
pop
pop
jne
sbb
xor
gs
test
mov
and
sbb
popf
mov
fcomp
iret
fdivrs
lret
dec
jnp
jno
out
cmp
xor
sub
pop
in
jnp
adc
sarb
js
mov
sub
sbb
mov
ret
inc
xchg
push
fstps
sti
mov
adc
cmp
push
mov
jp
jle
js
loope
sbb
test
xchg
stc
lret
and
push
cmp
sub
je
xor
adc
pushf
push
jo
mov
inc
push
sbb
and
call
pop
out
int3
shlb
inc
jge
iret
pop
cmp
sbb
or
xchg
pop
nop
xorl
dec
adc
inc
cmpl
pop
mov
lds
aad
jbe
repnz
cmc
aad
ds
pop
xlat
imul
imul
shlb
add
test
fbld
inc
lods
lock
cmp
std
jecxz
cmp
in
cmp
xor
cmpsb
fisubs
jle
in
pop
dec
add
adc
or
dec
inc
in
das
cmc
xchg
loope
pmaddwd
faddl
icebp
ret
sbb
movsb
inc
dec
outsl
adc
gs
cmpsb
mov
std
aaa
fmuls
mov
adc
and
mov
imul
lret
bound
xchg
rcrb
lret
xor
mov
cmp
add
data16
mov
xchg
add
mov
es
or
fisubs
mov
jecxz
jnp
lock
push
pop
dec
out
int3
je
mov
into
xchg
test
mov
imul
sbb
int
mov
mull
mov
imulb
pop
fndisi(8087
push
dec
jno
or
mov
fiadds
pop
popf
fimull
jo
dec
test
cwtl
test
in
mov
daa
fbld
sbb
add
aad
dec
push
mov
ficoms
push
lods
inc
in
inc
gs
loop
inc
push
ds
imul
mov
jg
mov
mov
rol
mov
or
xchg
test
cltd
es
mov
dec
adc
aad
out
dec
push
orb
jae
pop
mov
cwtl
ljmp
scas
addr16
out
push
lods
mov
and
xor
xchg
lock
push
jmp
jp
push
or
lahf
cs
std
js
adc
jns
lods
es
cmpsl
mov
cmp
leave
faddl
sbb
pop
mov
dec
xchg
xor
push
aam
stos
subb
pop
in
popa
ljmp
sbb
sbb
pop
dec
jmp
aad
bound
mov
inc
in
mov
push
lret
cmp
pushl
cmp
mov
sbb
lods
stos
mov
cmpl
test
jno
je
mov
xchg
fidivrs
sub
sbb
or
ja
mov
pop
dec
test
stos
insb
and
jbe
imul
xor
fwait
orb
push
fsubl
clc
pop
add
repnz
ret
push
cmp
andl
and
adc
push
jns
nop
mov
shrb
fdivrl
push
push
mov
notl
push
inc
push
loopne
out
fcomps
std
scas
xchg
lret
adc
and
and
add
test
mov
mov
gs
jecxz
fwait
dec
fldenv
in
rcrb
sbb
loop
aas
push
mov
fistps
nop
test
adc
sub
jae
std
negl
push
and
inc
xor
fwait
sbb
enter
dec
mov
repz
repnz
test
xor
and
xchg
cmp
mov
mov
lcall
inc
mov
and
addl
lds
push
add
int3
jne
add
inc
lods
sbb
or
stos
push
lds
das
aaa
jne
pop
scas
push
pop
into
notb
out
insb
sbb
or
addr16
sub
dec
xchg
fiadds
add
cli
outsl
jbe,pt
add
adc
dec
cmp
arpl
stos
push
push
lret
inc
lahf
mov
popl
inc
popf
fnstcw
jecxz
jb
inc
movsl
pop
jp,pt
loop
mov
mov
add
in
cmc
add
pop
call
xchg
push
test
cwtl
sahf
mov
andb
fs
in
xchg
mov
rclb
push
mov
aas
in
xchg
sbb
fmuls
cmp
jp
lds
sub
faddl
push
pop
dec
pop
or
addr16
or
mov
push
fsub
cld
jecxz
loope
mov
pop
in
clc
sub
pop
cmpsl
imul
sbb
movsb
xchg
mov
sbb
stc
xorl
js
iret
mov
test
je
sahf
xor
cs
dec
pop
cmp
in
xor
or
add
in
adc
out
xor
pop
loope
add
xchg
or
and
ficompl
cltd
jae
sbb
inc
pop
lds
ss
cmp
xor
xor
xchg
ljmp
scas
int3
push
push
jg
dec
adc
add
xor
or
mov
ja
in
es
pop
jmp
notl
mov
cmpsl
mov
push
inc
das
sub
daa
mov
std
jno
mov
pop
mov
mov
dec
call
scas
shrb
rcll
push
and
jp
pop
movsl
mov
js
ja
mov
fs
scas
mov
mov
jne
ret
push
mov
cmp
loop
inc
ret
and
jne
and
data16
cld
jg
sub
sbb
outsl
cmp
cmpsl
jl
icebp
addr16
jb
jecxz
aaa
cmp
xlat
loop
fdivrs
repz
loop
outsl
xchg
jecxz
pop
inc
call
js
xlat
sub
cmp
out
push
push
cmp
mov
pop
adc
testb
outsb
shrl
sub
mov
int3
imul
sbb
std
mov
sub
sbb
push
rolb
jnp
aam
lds
sub
push
imul
cwtl
out
inc
out
inc
ja
hlt
fldt
fisubs
push
int3
loope
hlt
in
sub
inc
aad
int
xor
adc
aaa
data16
jne
push
int
mov
add
lock
mov
xchg
sahf
das
das
adc
mov
cwtl
ss
cmc
jno
mov
cmp
pop
ljmp
add
in
xchg
cs
inc
addr16
inc
cli
insl
notl
xchg
mov
fisubl
movsb
popa
jge
mov
loop
ficoml
loope
xor
out
daa
cs
mov
stos
les
pop
clc
addr16
cmovg
xor
fwait
test
add
stos
lcall
daa
subl
lea
push
mov
push
fsubs
and
sbb
call
mov
or
fmuls
adc
adcl
mov
ja
subl
imul
icebp
lahf
imul
push
mov
pop
daa
pusha
daa
pop
hlt
or
sbb
ret
lahf
add
push
ljmp
lret
ret
outsb
or
push
mov
stc
and
shlw
dec
les
mov
adc
mov
ror
pop
ret
mov
test
aam
cmpsl
cmc
mov
xor
bnd
xchg
mov
fistps
repz
addl
ret
scas
fs
adc
mov
jecxz
fcoms
lods
ss
mov
inc
mov
cmp
lds
int3
lcallw
clc
in
popa
ret
in
lods
push
push
daa
mov
sbb
jle
les
cs
imul
inc
test
and
jnp
cld
xchg
xor
sbb
and
lahf
xchg
push
push
sti
mov
test
call
xchg
pop
xchg
stc
pop
out
int3
mov
call
outsb
repnz
stc
mov
sub
pop
in
roll
sbb
outsb
pop
fidivrl
pushl
stc
mov
subb
pop
inc
pop
cmp
pop
or
pusha
sbb
jb
std
add
or
lods
mov
lods
in
xchg
mov
rcrb
mov
dec
fdivrl
lret
mov
jmp
xchg
and
and
lods
ficoms
mov
sub
push
pop
cmp
rorl
pop
incl
mov
sub
mov
mov
mov
mov
sti
xchg
cltd
cmp
scas
mov
mov
push
cmpsb
jbe
pop
dec
mov
sbb
insl
icebp
mov
xor
testl
cmpsl
sti
shrb
js
and
dec
xadd
mov
push
xchg
and
std
sub
push
repz
jge
mov
sbb
jns
dec
adc
lea
stos
xor
dec
pop
or
jle
shl
cmp
xor
pop
xchg
xlat
mov
sub
iret
adc
jnp
outsb
sbb
in
arpl
ss
cmp
sbb
imul
scas
clc
xchg
and
push
mov
xor
shlb
mov
shlb
out
popf
mov
mov
into
sbb
jl
pop
jns
cmp
pop
xchg
mov
mov
mov
add
adc
jnp
fwait
movb
popa
sub
adc
mov
adc
rorl
add
mov
int3
fistl
inc
mov
and
or
push
shl
pop
pushl
repz
adc
into
stos
pop
lods
mov
xchg
mov
sahf
enter
pop
pusha
sub
jecxz
inc
sub
sbb
push
iret
inc
pop
js
arpl
sbb
push
mov
push
or
lods
xchg
jl
mulb
jg
loop
movsl
cmp
jns
es
lea
shrl
or
cltd
pop
push
mov
outsl
dec
xchg
dec
or
pusha
add
mov
arpl
sub
mov
jge
in
leave
repz
push
mov
icebp
xchg
jge
mov
enter
xor
adc
idivl
add
subl
sub
push
push
mov
mov
jns
rcll
out
lret
stc
lods
rcl
jne
cmp
mov
stos
xchg
sub
leave
stc
outsb
or
jmp
cmp
outsb
sti
mov
stc
loopne
fsts
jne
jbe
mov
mov
outsb
lret
adc
inc
es
negb
lcall
mov
addr16
add
addb
sub
cltd
or
dec
push
add
pop
and
loop
leave
jge
into
jbe
lea
adc
push
push
cltd
pop
xchg
dec
add
xorb
lahf
loopne
xor
data16
jle
sub
push
lret
hlt
mov
fdivrl
fisubrl
rclb
add
lahf
xchg
lods
jp
out
fwait
js
adc
jmp
or
cli
ss
iret
insl
shrl
jg
fbstp
inc
add
stos
mov
mov
test
push
sub
sbb
jno
sbb
idivl
addb
sbb
mov
pushf
inc
pop
gs
roll
fs
sub
mov
mov
cmp
sbb
jnp
dec
and
adc
sbb
pop
inc
loope
imul
aad
lods
lret
jne
sbb
jmp
ret
out
sbb
lods
clc
or
or
dec
xchg
movsb
mov
movsb
daa
inc
jns
cwtl
inc
fwait
sub
fcoms
pop
mov
pop
test
or
sti
loope
jnp
loop
mov
sbb
jmp
cmp
pop
inc
fidivs
enter
inc
push
loopne
xor
lock
jnp
out
inc
fwait
cwtl
fdiv
inc
or
std
pop
aas
mov
push
jp
mov
inc
clc
pop
jno
in
mov
push
dec
into
pushf
fldenv
xchg
shrb
loope
ljmp
xor
add
in
in
mov
mov
pusha
push
mov
cltd
inc
fmul
sbb
jae
adc
or
xchg
adc
ljmp
xlat
mov
or
imul
clc
cmovg
sub
int3
in
stc
xor
xchg
shrb
add
adc
shlb
dec
mov
sub
jne
incb
sub
lret
call
addb
mov
mov
mov
je
repz
mov
mov
push
insb
movsl
sub
lods
pop
adc
repnz
mov
cmpsb
xlat
jle
cli
inc
insl
mov
and
in
or
inc
push
jno
inc
cmp
std
jne
sbb
inc
xlat
or
mov
or
movsl
sbb
xchg
adc
insl
std
push
nop
bound
mov
or
adc
mov
or
std
arpl
ja
stos
out
out
loope
adc
sub
mul
mov
mov
mov
sahf
inc
sub
int3
jae
loop
leave
inc
sbb
insl
or
mov
cmp
fisubrs
es
inc
sub
iret
and
aad
cmpsl
xchg
adc
aad
outsb
xor
sub
pop
decb
out
movq
fwait
clc
imul
xchg
dec
cli
shrb
imul
and
inc
pop
and
add
jnp
loope
jp
cld
test
and
je
out
ret
out
or
imul
sti
cmc
test
and
jg
inc
push
cmp
mov
lea
adc
inc
xor
mov
clc
cmp
or
xor
into
dec
out
cmp
xchg
adc
aad
cwtl
cmp
add
pop
test
idivl
sbb
xor
and
mov
pop
and
adc
imul
setg
dec
mov
mov
xor
outsl
fdivp
mov
mov
loope
int
xor
pop
cmpsl
xchg
pop
and
mov
shlb
addb
call
mov
xchg
sub
insb
push
mov
es
xor
ret
jae
outsb
pop
inc
jns
outsb
sbb
inc
lods
or
ds
cmc
mov
add
out
shrl
fsubrs
pusha
and
dec
adc
fdivr
outsl
add
cmp
cmp
aad
mov
fstpl
cmp
add
fcoms
adc
popf
int3
test
ficoml
mov
sub
fwait
sub
into
mov
lcall
loop
dec
adc
stc
adc
sub
out
test
xchg
adc
xchg
aam
xchg
outsl
xor
lret
icebp
sar
xchg
pop
mov
pop
mov
out
push
dec
add
adc
adc
and
inc
sbb
mov
mov
in
lret
dec
ljmp
inc
sbb
mov
decb
js
dec
enter
aas
mov
popf
inc
mov
insb
pop
sub
cmpsb
addl
mov
lahf
sub
iret
out
jl
aas
es
mov
ds
mov
out
push
jmp
and
sbb
dec
cwtl
imull
jmp
cmp
mov
or
pop
cmc
xchg
aam
adc
pop
sub
sbb
sbb
andb
pop
sbb
bound
jno
in
fwait
jecxz
push
or
ret
dec
pop
repnz
stos
movsb
mov
xor
repz
fincstp
add
das
lea
inc
xlat
jb
pop
xchg
cmp
frstor
mov
inc
cld
jmp
mov
sahf
and
xor
dec
pop
cmp
filds
push
sbb
inc
std
or
hlt
jle
or
jo
call
clc
jne
out
cltd
fisttpll
fcoms
out
clc
cltd
sbb
add
daa
clc
es
movsl
std
fmuls
adc
in
mov
sbb
xor
insb
jle
lea
cmp
out
xchg
xchg
gs
lods
xor
iret
mov
inc
mov
out
mov
adc
jo
call
loop
jg
and
mov
pop
inc
ret
in
jo
mov
add
pop
jno
stc
movsl
std
std
inc
jecxz
insb
adc
jne
fbld
push
shlb
insl
sbb
nop
inc
mov
mov
jecxz
push
out
in
aam
push
mov
in
ss
stos
sbb
dec
inc
repnz
lret
pop
mulb
addb
mov
popa
sbb
je
jecxz
sub
pop
loope
setnp
cld
cmpsl
fistl
stos
inc
xor
icebp
jne
loop
cmp
xchg
xchg
insl
repz
popa
add
rorl
dec
scas
dec
ret
and
insl
loope
xchg
insl
mov
push
clc
push
push
inc
insl
out
mov
lcall
jnp
pop
es
inc
icebp
cs
je
push
mov
insl
adc
push
mov
and
bound
xor
adcb
cmp
adc
sub
dec
cmp
add
stc
cmp
mov
jmp
and
loope
lock
ret
dec
in
cmp
dec
dec
sub
iret
push
sbb
adcl
jae
sbbb
sbb
ds
daa
or
push
cmp
adc
pushf
roll
popa
push
mov
push
adcb
cmp
testb
inc
pop
xor
lret
cmp
add
or
sbb
imul
pusha
arpl
jns
add
repz
sarb
inc
jmp
cmp
movsl
pop
sti
int
add
pop
hlt
push
sbb
inc
dec
scas
es
xchg
mov
imul
add
push
cltd
shll
push
inc
push
sarb
inc
and
scas
test
test
daa
add
sbb
mov
lods
aad
mov
inc
test
mov
inc
xchg
out
mov
incl
mov
inc
sbb
hlt
ret
pop
movsb
xchg
imul
or
fs
xor
popf
add
push
sub
cwtl
cmp
mov
shrb
rcll
lar
test
add
out
cmpsb
movsb
sti
xchg
in
push
daa
xchg
icebp
test
cmpsb
frstor
mov
push
mov
lret
in
packsswb
ret
scas
pop
and
adc
xchg
xchg
fdivp
in
fnsave
or
iret
xchg
jge
sub
or
push
addr16
iret
fists
jns
pop
inc
out
jae
cs
mov
das
in
add
push
xor
enter
mov
lods
fwait
addr16
xor
pop
mov
inc
fwait
pusha
add
les
jle
rolb
mov
outsb
jae
bound
stos
scas
xchg
add
cld
jg
in
sub
mov
or
js
and
sbbb
pop
dec
out
sub
push
cwtl
pusha
mov
scas
gs
mov
mov
pop
push
jae
fcoml
inc
lret
add
sub
sbb
lea
add
or
sbb
xor
push
imul
add
add
xchg
lods
adc
and
xchg
lahf
inc
add
sbb
fdivl
pushf
dec
mov
jg
int
fwait
push
mov
mov
push
xor
mov
insb
push
mov
add
or
sub
or
lods
push
addl
inc
adc
xor
push
xor
add
mov
ret
mov
cmp
mov
jecxz
xchg
shrb
sarl
lock
mov
mov
pop
push
stos
insl
or
xchg
xchg
mov
in
in
cmp
jnp
pop
adc
push
stos
fcomp
ds
xlat
mov
and
xchg
fsubr
xchg
or
or
jae
mov
insb
dec
xchg
xor
pop
shrl
lds
out
aas
push
rcrb
jnp
push
push
fwait
dec
loopne
test
push
xor
sub
mov
jl
and
xlat
or
adc
cmpsl
jne
xchg
test
push
inc
cmpsb
or
cmp
in
ja
and
mov
pushf
xor
cltd
bound
mov
and
adc
cmp
sbb
mov
adc
ret
mov
pop
pop
fmull
sub
pop
aaa
movsb
cmp
das
filds
loopne
adc
sbb
or
lods
jge
push
mov
lea
loop
mov
clc
not
lcall
mov
ja
loope
mov
mov
mov
loop
fsubs
mov
cmp
mov
stc
jmp
push
int
ds
inc
mov
pop
push
and
ljmp
push
mov
jmp
ja
or
fstpt
lods
rcrb
mov
arpl
jne
adc
jae
aad
or
lar
mov
adc
imul
mov
pushf
rol
xlat
mov
cmp
pop
pusha
sbb
pop
jecxz
rorb
cmpsb
push
ss
sbb
test
out
adc
push
dec
aad
and
mov
testl
cli
sub
xchg
push
outsb
xor
into
into
das
and
out
rorl
pop
fsubrs
jno
test
jo
mov
inc
movsb
pusha
sbb
dec
hlt
add
push
lods
shll
cmp
rcrl
cmpsb
fwait
jmp
pop
push
lret
in
inc
test
stos
mov
stc
sbbl
pop
nop
ret
inc
mov
xor
ss
sbb
and
and
rcrl
add
popl
jno
into
jo
and
jg
inc
add
rcll
jbe
test
sbb
mull
lret
sub
mov
stos
sbb
jae
mov
int3
or
jmp
daa
pusha
jo
out
aad
aad
or
test
aad
pop
adc
push
pop
adc
shrl
iret
es
call
lods
inc
std
xor
push
dec
test
push
orb
clc
jns
mov
adcl
dec
jge
dec
out
cmpsb
push
dec
jl
push
pop
arpl
ror
movsb
inc
or
push
add
sub
dec
outsb
fbstp
or
xor
fwait
or
sbb
stos
fsubrl
sahf
push
xor
jmp
mov
stos
sbbb
inc
fst
clc
push
cltd
shll
outsl
push
cwtl
inc
loope
es
ds
cltd
rcrb
push
push
push
or
clc
aas
repnz
inc
xor
mov
dec
sbb
xchg
pop
lahf
sbb
jbe
cmp
xor
mov
into
xchg
sbb
push
ljmp
add
lods
aas
add
mov
dec
mov
cmp
jbe
popf
lods
sbb
repz
or
adc
inc
push
popl
loop
sbb
ljmp
js
or
adc
push
les
adc
fiaddl
mov
jg
xor
cmpsb
repz
push
out
mov
sarl
out
push
push
sbb
add
test
jg
mov
mov
roll
int
aad
fstl
pop
or
out
into
fwait
out
fs
lcall
mov
mov
cmc
mov
mov
inc
sbb
xlat
movb
adc
mov
sbbl
mov
pop
lret
or
call
testl
add
int
mov
enter
mov
sub
xor
into
mov
cmp
pop
lds
cwtl
jae
pusha
dec
jo
mov
push
add
xchg
jmp
std
dec
repnz
imul
aaa
xorb
test
leave
mov
aam
pushl
mov
push
inc
in
or
in
das
pop
sbb
gs
ds
aaa
mov
ss
xchg
inc
cld
inc
jp
mov
leave
sbb
aad
aad
dec
popf
sarb
fs
arpl
inc
mov
outsl
inc
add
test
and
lods
insl
dec
sub
jne
xor
mov
jne
jb
push
and
jge
mov
sub
sub
daa
pop
lahf
mov
xor
fistl
ja
popa
fisttpl
inc
dec
imul
push
int
rorb
dec
add
mov
mov
add
mov
push
cmp
adc
mov
fisubs
mov
jb
les
jb
pop
mov
movsl
les
lock
movsb
fidivrl
dec
addr16
push
fmull
inc
repnz
inc
sahf
jl
dec
mov
sbb
faddl
mov
mov
test
mov
aam
arpl
pop
aaa
add
xchg
test
dec
sub
aad
icebp
shl
lret
mov
daa
scas
insb
cmpl
and
lahf
sbb
mov
inc
lret
sahf
mov
fmuls
imul
mov
mov
les
cmp
push
testl
push
inc
mov
xor
es
mov
lock
sarl
cmpsb
xchg
in
inc
jmp
popf
call
in
mul
in
jmp
in
jecxz
pop
mov
int
add
xchg
out
fcmovnu
mov
shl
out
jmp
sub
inc
aaa
pop
test
and
mov
push
testl
lods
out
faddl
jle
out
mov
aaa
cmpb
cld
imul
push
nop
and
cld
push
mov
pop
mov
jnp
in
stos
sbb
imul
stos
inc
add
test
cmpsl
call
repnz
sahf
add
test
add
xor
xchg
xchg
shr
inc
and
das
push
scas
or
hlt
rclb
or
adc
test
push
pushf
inc
imul
xor
mov
loop,pn
sti
cmp
push
ss
movsb
xchg
mov
stc
jg
cmp
pop
jle
cmp
enter
adc
add
dec
lcall
das
lret
mov
lcall
ds
xchg
stc
mov
mov
sub
dec
add
mov
mov
or
jb
sub
mov
dec
lds
jl
clc
or
xchg
xchg
mov
cli
loope
and
or
inc
pop
jp
cmpsl
pop
xchg
cltd
adcb
adc
mov
cmpb
mov
jo
jno
fs
push
mov
fs
arpl
popf
nop
lock
stc
inc
lods
xchg
cmp
aad
mov
dec
cmpsl
and
mov
lods
and
xchg
xor
sti
shll
dec
lods
adc
pop
push
cld
insl
imul
movsl
inc
loop
cmp
push
ja
mov
add
pop
xchg
inc
les
aaa
data16
clc
or
sub
out
data16
roll
data16
pop
dec
sub
cmp
imul
mov
bnd
pop
pop
aaa
ret
in
cmp
lea
add
sbb
pop
je
sub
imul
mov
fists
push
lock
add
icebp
push
inc
loop
test
add
pop
fistps
xlat
jae
rcr
mov
das
les
int
pop
xor
aaa
mov
daa
sbb
xlat
xor
mov
cmp
and
dec
lds
cld
xor
dec
inc
std
sbb
test
xor
scas
pop
jo
das
fidivrl
jns
inc
or
rdpmc
sub
adc
xchg
mov
aad
or
fiaddl
cmpsl
fcoml
inc
in
testb
loopne
inc
jp
inc
mov
add
pop
loop
int
cmp
jb
xchg
out
addr16
mov
cltd
cwtl
in
aad
popa
data16
fstpt
xor
inc
daa
adc
testb
sarl
cld
dec
aad
sbb
mov
aam
dec
and
cwtl
xor
jb
pusha
push
test
jg
retw
outsb
popa
pusha
sub
dec
pop
repz
jp
add
cltd
imull
out
jg
xor
or
into
into
push
mov
loopne
xor
push
rolb
rcll
jmp
negl
inc
fbstp
cltd
scas
push
cwtl
mov
adc
add
movsb
xor
mov
xchg
push
or
cmp
rcrl
pusha
call
and
sbb
jl
or
jno
add
push
pusha
pop
mov
or
jge
push
mov
fcoml
pop
mov
pusha
lahf
add
lret
loopne
push
shrb
subb
sub
dec
push
jo
stc
push
mov
scas
lcall
iret
inc
or
mov
mov
sub
sti
rcll
xchg
dec
repnz
pushf
mov
cmp
pop
jmp
mov
test
aas
sti
shrb
adc
je
pop
and
mov
fwait
mov
cli
xchg
lds
push
gs
cli
mov
into
jne
pop
ret
and
ss
dec
sbb
inc
imul
jnp
lods
addr16
shlb
xor
ja
xchg
sbb
dec
dec
int3
icebp
sub
xor
hlt
out
fs
cmc
jae
movsb
ficompl
or
dec
jnp
pusha
leave
gs
sub
jge
and
out
scas
dec
dec
sbb
lahf
and
add
mov
stos
add
inc
fists
repz
mov
adc
int
xlat
lods
push
jge
inc
cmp
xchg
xchg
sar
adc
mov
loope
pop
sbb
dec
sbb
xchg
jge
mov
outsb
incl
mov
idivl
cmpb
jge
mov
xchg
mov
and
or
inc
test
das
inc
xor
sub
icebp
and
aaa
cmp
mov
adc
aas
movsl
popf
xchg
sbb
cltd
lret
add
popf
lock
mov
jge
xor
aad
or
ficompl
cmp
add
add
arpl
push
mov
sub
xor
or
fidivrl
jp
sbb
pop
add
out
cmpsb
jmp
popf
sub
mov
mov
popa
push
and
push
cmpsl
inc
mov
std
nop
cmp
cwtl
jecxz
jle
out
cmpsl
addr16
les
in
mov
icebp
jmp
mov
movsl
sti
xchg
cmp
mov
xchg
lds
add
mov
shlb
pop
cmp
mov
iret
ja
test
or
adc
and
jbe
cwtl
sbbl
cli
fsubrs
shrb
pop
add
pop
xchg
insl
in
stos
xchg
xchg
movsb
sbb
fildll
sarl
sub
lock
scas
cli
lret
aas
sub
mov
xor
incb
xchg
xlat
pop
push
jo
mov
push
xchg
dec
popa
jne
sti
enter
or
js
and
aas
ret
inc
call
jbe
and
ss
popa
sbb
icebp
jnp
stos
pop
xchg
mov
pop
push
jl
int
idivl
aaa
pop
out
xchg
sahf
jnp
ja
nop
in
mov
cli
js
xchg
int3
pop
imul
repz
out
mov
lret
daa
negl
movsb
cmp
ret
outsb
xchg
sti
imul
xor
loopne
mov
dec
fisttps
mov
fcomip
loopne
mov
xchg
stos
pop
and
xchg
and
mov
xor
mov
out
jl
mov
lds
jno
or
mov
dec
or
dec
cmp
hlt
cltd
leave
es
and
mov
jno
sub
adc
scas
dec
clc
movb
pop
cld
adc
or
sbb
inc
in
pop
out
out
xor
mov
andb
or
notl
mov
and
and
loop
sarb
stos
and
pop
xlat
jg
push
bound
lock
inc
push
jnp
jbe
cltd
lods
xchg
gs
std
cs
ss
dec
call
rorb
lds
dec
cmpsb
test
daa
pop
cmp
pushl
xchg
xchg
cli
push
and
fsubrl
je
and
outsl
adc
fwait
pop
inc
movsb
movsl
dec
lds
inc
cmp
push
push
ljmp
sub
cmpsb
repnz
sub
hlt
or
sbb
push
in
push
sahf
pop
xor
inc
dec
les
adc
in
insb
rcl
cs
cltd
inc
lock
rorl
shll
stos
jae
mov
lods
int3
addr16
stos
add
scas
push
and
dec
push
add
push
add
pop
adc
xor
xor
sub
testl
aaa
out
fwait
lret
jge
repnz
aam
stos
add
xchg
sbb
and
add
cmpsb
xchg
pop
sub
or
out
aas
test
aaa
xchg
push
sahf
sahf
sbb
mov
pop
push
and
fwait
push
mov
xchg
sub
rcrb
cwtl
mov
and
push
sub
aad
in
sub
rcrl
movsb
out
xchg
lret
and
dec
sbb
push
mov
repnz
sub
outsb
or
rorl
push
scas
movsl
mov
jle
or
add
testb
mov
sub
mov
xchg
mov
inc
enter
jmp
loope
js
ficoms
pop
imul
andl
xchg
pushf
rorl
or
pop
js
adc
adc
adc
arpl
movnti
lret
lret
push
inc
pop
aam
sbb
and
inc
shlb
sbb
shrb
mov
sbb
sub
ret
push
jecxz
mov
jmp
stc
inc
jbe
data16
and
sahf
mov
inc
repnz
mov
adc
sbb
pop
pop
push
cld
dec
popf
jne
fimull
rcrb
mov
je
in
inc
push
cmp
pop
and
sbb
das
stos
mov
outsl
sti
mov
jmp
xchg
adc
pop
jmp
ret
or
sub
push
aad
into
cmp
test
xlat
ret
out
sbb
mov
ret
rcr
sub
adc
inc
decl
ss
unpckhps
idivl
adcb
and
enter
xor
inc
sbbb
lock
aad
cmp
stc
pushf
lahf
sub
in
mov
jp
push
test
mov
test
mov
dec
bound
mov
in
pop
push
lret
iret
mov
je
stos
pop
jne
or
insb
jno
repz
sub
inc
fsubl
insl
inc
pop
jae
or
pop
sub
jns
or
test
mov
aad
and
hlt
repnz
mov
jge
inc
jns
inc
pop
adc
lds
xor
cmp
push
dec
or
or
ss
jne
add
or
pushf
xchg
in
cwtl
ror
lds
insl
inc
add
jae
cwtl
loop
jge
or
not
scas
adc
loope
call
push
push
and
xchg
leave
push
pop
repz
out
outsb
dec
cltd
mov
repz
dec
mov
inc
cmp
push
and
jmp
push
or
lret
lahf
pop
shr
or
cmpsb
cmp
popa
or
sub
xor
inc
stos
jmp
and
fldt
push
jae
jecxz
xchg
sub
pop
cmp
lahf
sbb
aaa
ret
pop
inc
cld
ljmp
add
mov
out
inc
push
xor
jmp
stc
fwait
xor
loop
mov
or
es
cmpsb
push
pop
xorl
and
mov
push
sub
cmc
mov
fisubs
sbb
push
sub
xlat
shlb
or
fidivrs
dec
dec
sub
std
inc
fwait
xchg
mov
xchg
ds
test
ss
nop
pop
fdiv
inc
insb
pop
xchg
mov
fs
outsl
mov
addb
sub
sbb
in
addb
push
mov
test
lock
repz
mov
ficompl
insb
sbb
repz
test
mov
cwtl
outsl
sbb
out
daa
xor
jnp
xchg
jbe
adc
pop
jl
and
scas
xor
insb
aas
cmp
xchg
push
or
sar
push
xchg
cmp
push
add
xchg
push
scas
ftst
mov
fiaddl
or
clc
inc
movsl
outsb
stos
mov
leave
push
gs
cs
cs
lods
hlt
jecxz
shrb
mov
adc
sub
loopne
jo
sbb
add
into
sub
mov
push
pop
mov
pop
xlat
add
jmp
add
add
add
mov
shlb
lock
stc
lea
in
xor
adc
jp
lock
lcall
repnz
push
aas
shrl
fdivl
out
pusha
sarb
lods
and
testb
cmc
push
mov
test
movsb
or
repnz
test
pop
test
jae
sub
loop
adc
fs
inc
sbb
inc
cmp
lock
xchg
sahf
dec
xlat
fmulp
adc
mov
or
call
lea
inc
mov
hlt
in
popa
insb
mov
mov
sbb
idivl
mov
adc
mov
scas
add
xlat
sbb
pop
pop
das
xlat
mov
mov
imulb
lahf
ret
mov
shlb
mov
jne
into
stc
inc
mov
push
push
and
dec
push
cmp
inc
jb
cmp
lock
pusha
push
dec
scas
dec
int3
pop
mov
lods
sub
lret
stc
push
fbstp
pusha
lds
popa
shl
push
imul
rorl
dec
out
cmc
test
cld
lods
xor
push
mov
adc
push
dec
push
and
pop
pushf
adc
mov
std
test
cwtl
mov
or
lea
hlt
in
popa
cmp
add
push
jg
loopne
push
xchg
mov
arpl
xlat
insl
bound
xchg
or
popf
inc
jle
pop
cmpsl
iret
cmp
mov
cs
xchg
mov
mov
fwait
jl
std
int
out
push
loopne
clc
and
addr16
cmp
addb
dec
push
adc
add
imul
push
jns
stos
lods
sbb
cmp
jmp
jge,pt
add
adc
sbb
mov
scas
jo
int3
jnp
mov
fnstenv
fcomi
std
adc
fwait
dec
rorb
cmpsl
fwait
and
mov
pop
loop
aad
cltd
push
push
cli
imul
pop
call
ret
adc
in
mov
frstor
inc
or
dec
in
pop
shll
aas
push
das
mov
mov
stos
inc
sub
jae
out
mov
adc
inc
jle
leave
inc
loop
gs
test
mov
stos
shrb
push
inc
es
js
rclb
arpl
ds
jae
and
push
mov
roll
cmp
fs
add
ja
lret
push
adc
push
imul
inc
std
das
repnz
add
ret
pushl
xchg
mov
insb
xorb
lock
cmp
loopne
mov
cmp
fdivrl
dec
jnp
mov
lahf
ret
aas
xchg
stos
mov
pop
mov
mov
pop
outsb
inc
mov
pop
je
repz
inc
inc
sbb
mov
adc
inc
adc
lods
xchg
cwtl
inc
pop
sbb
mov
cmc
ja
loope
lcall
push
sub
adc
seta
mov
cwtl
scas
pusha
loopne
insb
or
jmp
neg
push
ss
cmp
mov
roll
mov
or
pop
cwtl
and
cmp
mov
pop
dec
jmp
repnz
mov
cmp
das
rorb
cmp
fs
push
std
push
cwtl
out
jns
rolb
stc
pushw
in
dec
fnstsw
xorb
cmp
ja
inc
push
test
shl
lods
mov
out
lret
popf
push
mov
or
push
pusha
adc
movl
pop
sbbl
popa
lret
out
add
fmuls
mov
shll
adc
stc
inc
sbb
jmp
mov
add
push
out
add
push
adc
test
and
aaa
out
lock
add
call
roll
or
jl
jbe
jge
fwait
sbb
sbb
add
jne
bswap
ja
repz
orb
rcl
mov
xor
cltd
pop
fwait
xchg
scas
imul
nop
push
cmp
faddl
dec
adc
nop
iret
jecxz
enter
outsb
insl
ljmp
daa
outsl
mov
fidivrl
add
adc
dec
int
mov
int
test
mov
repnz
fs
xor
pusha
addr16
dec
int3
jecxz
dec
mov
imul
cmp
adc
int3
leave
xchg
cmp
outsb
ret
lea
test
scas
pop
xchg
les
ja
jo
xchg
sub
mov
insl
adc
cmp
adc
es
mov
testl
or
jbe
xor
rclb
stos
mov
dec
test
sbb
cld
pusha
outsl
mov
rorb
xchg
insl
das
cmp
enter
gs
mov
aam
lret
mov
pop
sub
adc
add
lahf
inc
sub
mov
add
movsb
daa
pop
or
adcl
hlt
mov
loope
xorl
loopne
lea
insl
and
push
adc
jle
sbb
lea
jmp
cltd
fs
jne
enter
nop
jo
push
imul
mov
fcomp
lcall
push
stc
adc
push
sbb
mov
insb
clc
adc
gs
mov
dec
sti
or
mulb
fs
adc
daa
rclb
cld
int3
cwtl
push
sbb
push
in
bound
int
out
lret
stc
inc
rcrl
add
insb
xchg
repz
dec
out
cmp
mull
push
add
mov
iret
xlat
pop
inc
leave
repz
test
pushf
jo
sbb
cmp
out
dec
pushf
xchg
xor
mulb
dec
sub
mov
pop
or
lea
rorl
sub
stos
jg
mov
cmp
xchg
jge
or
jbe
insl
fildll
sub
sub
test
bound
jp
outsl
inc
std
into
lock
xor
inc
xor
inc
mov
sbb
push
sub
xor
jg
add
jmp
mov
sahf
test
sbb
pop
sub
adc
add
aaa
xchg
test
mov
lock
cmp
test
sub
in
dec
pop
jmp
mov
gs
mov
xor
sbb
stos
orb
mov
add
mov
hlt
jo
cld
add
scas
fdivs
xor
jne
hlt
xor
imul
sbb
cmovnp
mov
leave
aam
and
inc
lcall
sub
fldcw
enter
out
jb
jno
jne
cmp
mov
xchg
cwtl
mov
mov
push
inc
std
insb
fmull
popf
ss
adc
aaa
lret
stos
push
pop
shrl
sub
xchg
mov
dec
in
and
add
xlat
mov
outsb
and
sbb
das
jbe
sub
and
fucomip
fwait
iret
loop
push
add
fwait
stos
jecxz
hlt
popf
push
std
out
xchg
jle
sub
ret
adc
and
aam
gs
pop
pop
jmp
pop
pop
mov
push
push
pop
pop
sub
xor
call
and
cld
inc
aad
int3
dec
push
movsl
pop
out
shlb
xchg
data16
push
call
sarl
adc
mov
subl
mov
or
xchg
mov
sub
mov
xchg
push
in
xlat
mov
cmpsb
stos
fxch
xorl
pop
outsl
stos
dec
nop
std
mov
stos
mov
imul
adc
inc
jne
pop
xor
cs
mov
movsb
sub
pusha
jge
imul
mov
cli
setp
test
into
inc
cwtl
incb
aam
out
adc
ret
popf
cmp
scas
jg
or
stos
adc
sub
lods
loope
sbb
sbb
cmp
leave
mov
jg
cltd
std
add
movsb
mov
imul
sub
pop
clc
or
out
popf
push
dec
ss
out
test
loopne
jns
sbb
popl
add
inc
in
fistps
mov
pop
loope
stos
push
xor
insb
dec
push
mov
dec
xor
jl
stos
cmc
inc
pop
mov
mov
sbb
pop
in
les
and
cmpsb
mov
dec
fldl
cs
push
jb
sti
rcl
loope
ret
popf
fldt
fdivr
pop
pop
pop
repnz
jge
sbb
in
divps
sbb
es
insb
mov
xor
das
cmp
outsl
cmc
repnz
dec
or
cmpl
cs
adc
dec
xor
push
pop
test
ja
adc
mov
sub
push
stc
dec
insl
jae
add
or
iret
das
or
cltd
dec
lret
popf
jle
out
cmc
mov
and
pop
xchg
mov
notb
stos
xchg
fmull
mov
sbb
xor
out
cmc
jbe
aad
std
jnp
insl
aaa
lret
or
sub
adc
lds
dec
xchg
xor
daa
push
fwait
xchg
in
ret
cmpsl
lds
cwtl
jl
repnz
fwait
cs
stc
inc
stc
mov
das
adcb
lcall
repz
mov
push
outsb
out
fstpl
sti
mov
and
in
and
mov
mov
xchg
or
mov
pop
push
lcall
jno
mov
push
sahf
ror
mov
jg
fwait
in
push
and
cmp
or
cmpsl
add
cmp
mov
outsb
das
sub
cld
fwait
mov
jbe
pop
xor
fisttpll
dec
pop
mov
aad
push
cltd
dec
in
leave
fcoml
cmp
xchg
mov
push
hlt
or
jmp
push
es
xchg
in
sub
dec
ljmp
cwtl
mov
mov
je
das
or
push
push
and
leave
cmp
sub
mov
lret
and
sti
call
mov
adc
add
xchg
ljmp
jmp
js
dec
xor
mov
fdiv
and
mov
push
bound
imul
shlb
int3
mov
loopne
ljmp
dec
lds
xchg
out
icebp
jb
xchg
jecxz
mov
int
push
mov
xor
popa
mov
adc
ret
or
repnz
jge
lods
and
jb
outsl
add
jmp
jge
sub
xorb
cli
pop
out
aam
inc
sub
xchg
pop
push
xorl
push
hlt
shl
jg
mov
cmp
push
addr16
movsl
jo
push
inc
dec
xor
fcmovbe
sbb
mov
das
and
adc
cmp
js
outsb
sub
jbe
jne
mov
mov
xor
adc
lock
mov
mov
shl
jo
aad
pop
sbb
loop
lods
enter
push
xor
mov
pop
lock
push
mov
dec
and
addr16
xchg
std
icebp
push
into
mov
mov
sbb
orb
xchg
push
dec
sub
sub
aaa
xor
sbb
or
mov
xchg
out
idiv
out
or
mov
aad
mov
lods
jae
cmp
inc
or
ret
mul
or
int
add
imul
mov
sbb
mov
popa
decl
rclb
dec
fwait
jb
scas
pop
mov
mov
out
dec
jecxz
sbb
cmp
andb
into
sbb
add
call
aad
dec
outsb
out
jbe
pop
adc
mov
out
cltd
dec
scas
add
push
aas
push
pop
pop
fdivs
pop
or
sbb
push
lcall
outsl
lret
fimull
mov
cld
stos
jl
ss
aad
int3
out
sbb
cld
sbb
jmp
movsb
in
mov
xor
pop
push
jns
pop
dec
aad
mov
cld
arpl
ljmp
xchg
mov
call
xchg
imul
ljmp
cmp
jb
jne
cmp
mov
movsb
clc
push
dec
or
mov
cld
inc
repnz
mov
push
fiaddl
shrl
cltd
sub
inc
das
jno
imul
pop
arpl
lods
call
repnz
xchg
jnp
add
rorb
sub
add
cmp
cmp
jae
xchg
ret
and
mov
pusha
or
insl
adc
push
insl
cmpsl
xor
mov
pusha
inc
dec
mov
int
sub
cmp
aam
ja
ja
xchg
add
dec
push
out
stc
push
mov
dec
inc
push
xor
xchg
mov
pop
push
in
sbb
push
cmc
imul
mov
leave
lock
mov
mov
or
ss
mov
outsl
das
cmp
outsb
cmp
daa
and
and
sarl
sbb
movl
and
push
das
cmc
sub
mov
fwait
ja
gs
fs
mov
pushf
mov
push
add
addr16
and
inc
pushf
std
shlb
loope
mov
loopne
inc
push
dec
inc
pop
push
and
roll
or
int3
mov
es
sub
and
faddl
lods
pop
idivl
adc
loopne
add
int
xchg
test
test
lds
leave
jno
dec
test
fsubs
sbbl
arpl
pop
ret
xchg
shlb
bound
and
adc
int
or
ret
js
mov
or
fidivs
jne
add
push
adc
scas
mov
insb
mov
fmuls
cltd
lds
pop
arpl
call
pop
call
aas
sub
pop
ret
in
gs
xlat
ret
fwait
xor
iret
push
insb
sbb
cmp
pusha
gs
stc
cmp
jae
mov
ret
shlb
cmp
xor
aas
mov
jns
cmp
adc
scas
xor
insl
or
xlat
xor
inc
sbb
mov
xorb
int3
dec
sub
mov
mov
call
push
inc
sbb
or
pop
or
lahf
xor
test
dec
jne
dec
and
xchg
xchg
cmp
sub
mov
xchg
aas
xor
inc
jne
and
inc
out
jl
test
cwtl
push
add
fcomps
out
inc
icebp
fs
adc
jle
pop
push
leave
cltd
or
pop
psraw
in
leave
jecxz
mov
and
loope
cli
add
jne
ljmp
inc
outsb
pop
adc
insl
lds
call
cwtl
mov
cmp
cmpsl
inc
sahf
fadd
sar
inc
xchg
cmp
f2xm1
aaa
insb
loopne
push
and
lock
lret
bnd
inc
sbb
mov
rol
pop
sarl
popf
pop
xor
jnp
jmp
sbb
outsl
push
sbb
or
mov
mov
jecxz
mov
out
xchg
cmp
xlat
cltd
repnz
jbe
add
inc
bound
adcl
inc
inc
into
pop
pop
idivl
add
adc
jp
maskmovq
imull
pop
fld
rorb
addl
dec
lret
aam
sbb
xchg
sub
xlat
dec
and
out
lods
fwait
lahf
and
iret
cmp
int3
inc
jmp
fnstenv
push
shrb
or
call
sub
pop
ficoml
mov
rcrl
loop
sbb
and
lret
in
ret
insb
int3
add
jp
imul
lock
xor
rorl
scas
and
dec
mov
pop
stc
int
int
xor
mov
mov
rclb
jo
xor
les
push
call
or
xor
ret
es
shll
xor
jl
call
lea
jae
mov
sub
leave
xor
pop
pop
inc
daa
push
fwait
push
sub
repnz
test
addr16
cmpsl
js
enter
icebp
or
xchg
and
loop
pushf
cmpsl
std
mov
imul
out
popa
jl
xor
js
push
or
dec
jnp
outsb
imul
pop
insb
push
popa
cmpsl
jg
arpl
andl
jmp
testl
push
insl
fwait
mov
aad
mov
in
and
lods
imul
mov
add
pop
movsl
ficoml
mov
push
jne
mov
xchg
and
xchg
pushf
and
repnz
jno
mov
adc
loope
sub
fimull
inc
mov
xchg
enter
mov
popf
or
and
sub
push
repz
mov
mov
mov
pop
cld
loop
push
arpl
cmp
pop
loopne
idivl
stos
dec
cmpsl
push
jbe
dec
incb
jne
sbb
jbe
and
add
out
xchg
mov
andl
clc
shl
push
iret
and
xor
mov
in
mov
call
push
mov
fldt
js
xor
adc
ljmp
iret
sti
das
or
sbb
adc
cmp
arpl
pushw
test
inc
lds
cmpsb
jne
mov
leave
outsl
add
add
xchg
jo
lret
gs
sbb
in
jbe
movsb
jnp
fmull
xor
das
icebp
testb
mov
xchg
jno
iret
xchg
mov
test
mov
inc
push
lods
inc
mov
mov
notb
dec
cmpsb
iret
pushf
adc
push
adc
pop
mov
mov
stos
add
jae
outsb
xor
in
and
dec
cmp
push
dec
rclb
lret
adc
pusha
or
jp
pop
leave
xchg
aaa
sbb
enter
pusha
dec
xor
xchg
dec
and
xchg
add
mov
nop
xor
cs
or
xchg
sbb
jecxz
fs
or
xorb
in
cmp
inc
sahf
fxch
scas
aad
imull
and
mov
or
xlat
push
sbb
lds
sub
lock
out
lock
loop
push
insl
dec
data16
push
jb
cmpsb
outsb
pop
lods
mov
cmp
pop
adc
enter
lea
dec
cwtl
lods
fcmovb
sub
cltd
sub
cmp
xor
popl
mov
lahf
mull
sarb
jne
cli
addr16
dec
popf
sbb
dec
cmp
jge
std
or
xchg
push
in
jg
and
pop
adcl
add
xchg
sub
icebp
popl
cmp
jecxz
fstpt
daa
scas
jbe
mov
pop
test
sbb
xlat
xchg
lahf
inc
or
shll
cld
lock
jae
loopne
aad
xchg
movsb
icebp
popa
ja
insb
mov
cld
and
cmp
mov
mov
das
aad
rcl
inc
ficoml
outsb
je
sub
mov
outsb
rcll
xchg
sbb
or
mov
nop
cmp
je
int
fbld
add
inc
sbb
sarb
adc
sub
les
xor
js
insl
inc
jge
rcr
adc
xchg
push
cmpsb
sbbb
cmp
lcall
rcll
hlt
orb
push
outsl
testl
shrb
xlat
call
jno
stos
push
mov
mov
mov
pop
rolb
loopne
ret
pushf
jae
mov
js
int
es
in
xchg
push
xchg
je
fildll
cmp
push
xchg
add
inc
cmp
lds
icebp
mov
jo
in
cmpsb
ret
imul
mov
dec
lret
or
cwtl
inc
lcall
push
sbb
and
in
sub
fxch
dec
mov
sarb
int3
cmp
cmpl
push
stc
jbe
pop
cmpsl
aas
xchg
mov
or
lret
and
pop
int
jne
iret
jle
xor
jmp
arpl
push
imull
jo
pusha
inc
jno
and
mov
push
xchg
cmp
pop
repz
dec
inc
dec
nop
dec
push
in
fwait
aam
push
xchg
xor
sub
pop
mov
mov
push
fadd
stc
pop
sbb
int3
insb
movsb
in
mov
adc
mov
mov
pop
sub
pop
push
inc
mov
mov
xchg
pop
lods
repz
lcall
int3
push
hlt
cmpsb
pminub
mov
repnz
mov
aas
inc
aas
xchg
sub
or
mov
xor
bound
sbbl
inc
dec
movsl
inc
scas
fidivl
sub
mov
sahf
push
dec
push
outsl
das
icebp
test
push
rcrb
mov
add
pop
or
add
adc
push
popf
jecxz
popa
push
push
mov
mov
adc
jnp
scas
mov
fists
js
push
test
bound
ljmp
push
mov
cmpb
add
faddl
xor
pop
lds
and
pop
xchg
cmc
mov
scas
jae
xlat
sbb
repnz
inc
pop
mov
cmp
jle
cmc
sub
cs
jmp
nop
jl
jae
adc
or
stos
dec
inc
cld
xlat
shlb
clc
push
xchg
lea
ds
cmp
jle
pusha
sti
mov
xor
mov
int
test
push
ret
mov
repz
lret
push
ja
sti
cltd
adc
in
adc
xchg
xchg
and
xor
fisttpl
jmp
addl
dec
aas
rcrl
sbbl
ret
sahf
inc
or
sahf
push
mov
sbb
in
sbb
mov
into
pop
lahf
push
add
imul
notl
sbb
decl
and
fsubrs
jno
push
push
jne
mov
cs
mov
cmpsl
sysenter
mov
ja
pusha
les
movsl
nop
hlt
push
push
leave
mov
addl
pop
xor
rcrl
lcall
mov
dec
pop
por
scas
jbe
dec
jmp
mov
adc
rorl
mov
fptan
fsubs
notl
mov
or
insl
pop
cltd
rcrl
push
sbbb
shlb
sbb
cmpsl
stc
sub
aaa
cmp
aad
inc
adcl
lock
xchg
out
sbb
repz
cmp
xor
jnp
pop
roll
lcall
mov
or
sbb
movsl
and
movsb
in
in
jl
iret
mov
cmc
loop
jbe
pop
loopne
push
hlt
leave
mov
scas
jno
lock
dec
aam
and
inc
out
pop
jecxz
mov
mov
jmp
dec
pop
test
xor
sbb
outsl
cs
pop
inc
add
push
data16
lret
and
mov
jo
sbb
test
lods
test
movsb
enter
int
inc
sbb
sbb
pushf
inc
out
add
pop
xor
cltd
push
lcall
pop
out
sbb
adc
cli
notl
xor
pop
inc
shr
cmpb
and
fnsave
mov
mov
aam
sbb
scas
call
sub
das
ret
inc
sbb
repnz
dec
outsb
mov
adc
adc
cld
fildll
js
mov
pop
and
pop
cmp
xchg
cld
jg
mov
shll
mov
stc
in
sub
inc
enter
push
cmp
and
push
call
pop
test
nop
cwtl
inc
and
or
pusha
adc
aam
pop
adc
mov
dec
xchg
loop
and
fcomi
add
icebp
mull
mov
push
das
xchg
sub
aad
jge
xchg
jnp
jecxz
out
popf
leave
mov
pop
pop
cmp
xchg
xor
imul
icebp
jecxz
push
pop
and
fdivrl
xor
add
cmp
adc
xchg
pop
mov
ret
repz
sbb
xchg
dec
insl
mov
pop
or
andb
fidivl
fadds
hlt
sbb
cmp
adc
rclb
insb
jg
pusha
xchg
loop
mov
and
pop
inc
je
hlt
and
pop
sbb
lret
push
inc
jmp
pop
jecxz
popf
repnz
movsl
clc
std
inc
pusha
xor
pop
sbbl
pop
dec
xor
mov
mov
gs
jmp
mov
ret
rclb
push
pop
jb
xor
dec
jge
outsl
fwait
xchg
dec
push
hlt
leave
mov
inc
sub
cmpsl
mov
and
mov
fstpl
movsl
jno
imul
repz
les
jmp
daa
ror
imul
in
xchg
std
mov
out
mov
js
or
xchg
mov
mov
mov
pop
popf
mov
jns
mov
jge
insl
mov
adc
and
lahf
jno
jge
test
out
lahf
jnp,pn
dec
mov
lret
mov
mov
dec
out
add
lods
fnop
sbbl
fmull
cltd
das
jae
pusha
scas
or
test
push
jbe
cmp
add
add
insb
cmc
out
imul
je
dec
or
sub
dec
xchg
sub
mov
inc
cld
aad
pop
or
jne
shlb
sub
sub
jbe
xor
add
cltd
pusha
movb
stc
and
pop
mov
in
cwtl
or
mov
movsb
push
mov
and
jecxz
adc
and
push
inc
adc
icebp
arpl
inc
sbb
mov
in
popa
lret
orb
sbb
jns
sbb
pushf
ss
xchg
inc
ds
sub
xchg
mov
js
mov
add
push
sbb
addr16
in
mov
scas
repz
adc
arpl
cmp
out
mov
xchg
fdivl
jns
enter
jae
repnz
push
push
data16
or
test
punpckhbw
mov
push
xor
fcompl
add
add
sbb
pop
or
into
inc
inc
or
cmp
filds
jo
pop
xlat
xor
enter
and
push
mov
add
das
cld
add
subl
sbb
xor
int3
inc
mov
jecxz
and
cltd
push
fcmovne
lret
sub
adc
mov
jno
and
aas
or
data16
es
push
or
add
shr
rorb
movsb
nop
iret
or
mov
or
imul
jge
bswap
sub
mov
fidivl
add
out
adc
jnp
cmpsb
pop
jb
xor
dec
xor
mov
mov
push
fcomp
hlt
push
lds
outsb
int3
aas
and
jno
mov
sub
mov
scas
into
lea
mov
jb
push
cltd
dec
test
xor
mov
jb
outsb
pop
stos
cs
decl
add
and
sbb
das
mov
mov
mov
xor
pop
ret
inc
fsubr
cli
lea
or
jmp
out
lcall
cltd
insl
shl
hlt
mov
mov
jb
jmp
cmp
dec
add
add
mov
mov
xor
shll
aam
add
jbe
mov
test
jne
mov
sarb
push
and
loope
jp
push
cld
ret
arpl
movsl
stos
int
jbe
mov
daa
fucomip
and
push
add
mov
int
mov
lret
movd
mov
fbstp
testw
stc
sub
inc
jae
xchg
mov
adc
lock
sbb
call
xchg
sbb
in
sbb
ret
dec
pop
shlb
lahf
jns
cmp
mov
xchg
inc
mov
call
lea
lods
lret
or
scas
dec
sbb
aaa
in
push
mov
jle
or
popa
pushf
and
cmp
fs
sahf
stos
push
inc
xlat
cmp
xchg
pop
xchg
scas
mov
fisttpl
sbb
out
addr16
dec
dec
ss
jmp
mov
or
push
and
add
lods
scas
mov
inc
stos
sbb
add
mov
mov
jge
cmpsl
cli
repnz
cmp
pop
lcall
arpl
or
cmp
ja
rcll
or
sbb
push
dec
push
stos
fs
and
add
cmp
mov
inc
sub
call
and
dec
lret
insb
add
xor
mov
mov
decb
pop
dec
ljmp
sbb
pop
mov
mov
or
or
mov
push
cmp
adc
int
rcr
inc
inc
adc
pop
mov
outsl
mov
xchg
addr16
loop
xchg
frstor
or
add
mov
push
mov
mov
dec
out
xlat
push
pop
add
repz
mov
jbe
ret
inc
cmp
mov
cmp
ss
mov
insl
mov
sub
pop
push
add
sbb
outsb
inc
mov
xchg
fsubr
push
cltd
enter
movsl
cs
mov
mov
xchg
sbb
mov
enter
lret
mov
flds
addr16
inc
fistpl
insb
div
mov
hlt
sbb
icebp
out
insl
aad
cmpsl
lcall
push
push
imul
bnd
pop
fiadds
orl
sub
and
sbb
push
mov
jle
lret
mov
ljmp
inc
xchg
inc
jne
pop
dec
je
ja
sub
sti
push
mov
push
imul
add
inc
psllw
test
shrl
inc
inc
mov
out
and
or
mov
sbb
pusha
in
cltd
inc
insl
call
popl
cmpsl
in
hlt
lret
jmp
adc
jle
cmpl
movsb
iret
and
int
scas
cli
fs
inc
pop
pop
movl
xchg
stos
mov
ss
arpl
pop
sub
and
das
mov
push
xlat
movsl
mov
adc
mov
iret
jl
lds
addr16
xchg
mov
sub
je
jge
lods
sbb
mov
or
fildl
xchg
ljmp
imull
fadd
push
lods
and
les
sbb
adc
pop
xor
xchg
mov
mov
orb
cmp
jg
mov
test
cmp
jae
sti
add
or
sbb
pushf
cmp
lcall
add
add
push
add
hlt
sub
inc
cmp
arpl
lret
add
subl
or
jmp
aaa
loop
outsl
cmp
cltd
inc
jle
ret
pop
lahf
les
pop
inc
lds
ss
push
popf
mov
xor
push
and
pop
add
mov
shrb
xchg
pop
xchg
add
inc
jno
or
lds
std
mov
jnp
cltd
cmpsb
push
testl
lcall
xor
jo
cmp
int3
pop
lock
pop
inc
insl
daa
clc
stos
in
test
divb
roll
mov
in
cmp
sub
fstpt
jl
sbb
loope
inc
mov
add
clc
cwtl
out
pop
lahf
mov
cmp
jge
lret
das
xlat
fstps
or
mov
in
cmp
cwtl
lods
or
repnz
and
pop
inc
and
pop
lcall
lret
and
dec
add
jmp
cmp
lds
fmul
ja
mov
jne
sub
mov
les
xor
mov
inc
dec
pop
cmp
jo
adc
pop
jns
adc
ficoml
stos
shlb
outsl
test
cmp
sti
roll
bound
rcrl
or
pop
repnz
es
fnsave
xor
nop
push
ret
or
lret
arpl
aad
nop
stc
mov
jnp
fiadds
adc
dec
int3
pop
in
leave
bound
jmp
repz
pushf
sub
or
in
and
cwtl
push
fistpl
lcall
sub
dec
sub
int3
les
sarb
dec
or
dec
clc
cmp
shrl
sarl
cwtl
xchg
lods
sub
adc
leave
insb
add
mov
xchg
int
jmp
cli
add
ja
cmpsl
xor
aad
je
pushf
pop
or
pop
in
or
jl
out
stc
aas
sub
sbb
xchg
or
and
cmpsl
dec
sahf
add
push
repnz
or
outsb
pop
dec
and
pop
add
gs
outsl
insb
shlb
imul
cltd
pop
inc
popf
sti
test
push
mov
and
xorb
cs
dec
sub
sbb
loope
sub
lret
sbbl
popa
js
cltd
cmp
xchg
dec
mov
in
pop
inc
or
dec
lds
mov
test
jae
lods
bound
jg
and
mov
mov
and
cwtl
dec
hlt
in
out
and
fbld
or
popa
repnz
mov
add
mov
inc
push
mov
cmc
pop
and
push
scas
daa
fs
popf
xchg
and
jle
jp
inc
push
mov
fsubrs
lret
jg
rorb
xor
add
inc
dec
rolb
pusha
and
ffreep
popaw
jmp
leave
xor
jg
movsb
movsl
mov
orps
daa
mov
fcmove
das
mov
sbb
shll
out
push
test
jne
or
and
jl
push
dec
pop
cmpsb
popa
mov
andb
cld
mov
add
movsl
xlat
out
cmp
adc
jns
or
adc
js
repnz
mov
mov
inc
xchg
shrl
add
mov
fcmovb
incl
or
sbb
jno
popf
out
and
loop
push
shlb
movsl
jns
adc
or
orb
lahf
dec
ret
sahf
dec
xor
jge
sub
rcrl
jl
fbld
leave
aaa
dec
nop
mov
jnp
cmpsl
jo
bound
dec
sub
push
dec
mov
movsb
or
inc
call
out
mov
push
mov
inc
xor
add
enter
loope
cmp
data16
mov
or
sbb
dec
jbe
insl
sbb
or
or
fsubrl
xor
pop
push
sbb
cmp
mov
inc
and
cli
shlb
jb
inc
mov
xor
xor
in
lret
pop
sarl
in
jecxz
ss
ja
xchg
xchg
out
add
push
outsl
xor
xchg
jge
mov
js
daa
movsb
xchg
aam
pop
fisttpl
jmp
lods
sti
xchg
mov
push
out
adc
push
in
iret
fcmovu
inc
shrb
cmp
into
mov
sbb
mov
les
stos
pop
dec
out
insl
cmpsb
stos
loope
sub
xor
pop
stos
std
test
addr16
mov
pop
or
cmpsb
push
cmpsb
push
out
mov
cltd
add
pop
stc
fucom
in
cwtl
mov
in
push
lods
cmc
jbe
xchg
incb
push
jmp
fwait
mov
fldz
popl
cmp
xchg
ficoml
mov
cli
das
cltd
addr16
cmp
xchg
into
out
dec
test
cmp
mov
daa
out
add
pop
mov
in
and
icebp
leave
adc
popf
sbb
shlb
xchg
mov
push
aam
mov
lea
and
ja
jno
das
cmc
fdivs
mov
faddl
fiadds
cltd
jne
mov
and
sbb
dec
dec
cmpsb
aas
mov
cmpsl
lret
in
jmp
sti
fiadds
sbb
jmp
dec
in
jne
xlat
adc
ja
mov
sbb
xor
adc
jge
test
stos
popa
xor
outsl
jbe
clc
sbb
into
fbld
dec
jo
jecxz
lahf
pop
ja
pop
outsl
rol
jmp
dec
cld
in
fs
mov
mov
mov
add
insb
les
xchg
scas
cli
punpckhbw
cli
or
rolb
add
jecxz
cwtl
pop
dec
mov
cmp
inc
insb
in
pop
fs
jp
loop
xchg
mov
add
push
jb
fdivl
loop
adc
test
push
mov
push
sub
xor
aam
lods
xchg
cmpsb
negl
push
out
sti
jbe
into
outsb
daa
aad
mov
sub
dec
insl
inc
jns
into
scas
xor
push
push
xchg
lds
loope
js
sub
mov
mov
aas
fcmovnb
sub
xchg
push
idivw
fstl
into
dec
mov
jl
outsl
lea
ds
xor
sahf
mov
hlt
out
xor
inc
cmp
mov
mov
cwtl
inc
pop
dec
outsl
sub
aam
cmp
xlat
insb
xor
add
lcall
popf
sub
adc
leave
add
or
ret
jo
inc
lahf
mov
xor
lret
push
push
and
jmp
cmp
in
and
pop
jp
cmp
and
sbb
pop
mov
scas
test
test
inc
jp
or
or
xchg
ja
sub
aas
shll
out
push
jno
sub
lock
sub
icebp
dec
jns
cmc
hlt
out
jo
pop
lods
sub
inc
push
or
dec
push
xor
mov
pop
mov
ret
cmp
push
out
xchg
dec
cwtl
jns
xlat
stos
and
adc
sub
or
mov
std
push
sti
sarl
adc
testb
sub
pop
jb
jge
dec
mov
dec
notb
leave
xlat
call
sarl
sbb
ss
nop
mov
jp
scas
adc
icebp
and
cmpl
and
inc
push
sub
adc
shlb
mov
cmp
xor
mov
fbld
jae
mov
jnp
sti
das
in
repz
inc
shl
jp
inc
push
imul
push
xrelease
shr
cmp
cmp
cs
in
push
les
jo
shll
pop
cmpsl
fstpt
test
ja
pop
rcrl
andb
scas
mov
iret
test
inc
popa
push
pop
int3
inc
dec
sbb
sbbl
in
int
rcrl
inc
call
arpl
push
lock
loope
pop
arpl
mov
into
pop
xorb
orb
pop
jns
fcompl
pop
adc
push
inc
add
cli
dec
les
mov
and
adc
jbe
adc
je
scas
jb
ds
int
push
mov
ret
mov
out
icebp
xor
sub
inc
xchg
insb
lea
out
popa
test
xchg
pop
cmp
lahf
lds
and
inc
bound
stos
mov
sahf
mov
mov
and
loop
outsb
insl
nop
test
dec
je
mov
mov
adc
lret
add
testb
mov
int
push
push
push
pop
adc
es
dec
mov
dec
adc
xor
mov
cwtl
sar
adc
cmpl
js
loop
jo
pop
pop
inc
data16
ret
imul
daa
pop
mov
rcl
sbb
xor
outsb
pop
fwait
add
je
outsb
cltd
inc
inc
stc
addr16
daa
jge
test
cmovb
test
dec
add
jb
push
fdiv
inc
leave
pop
adc
mov
sub
cs
add
je
int3
mov
sahf
out
push
cmp
jb
xor
sbb
add
mov
mov
lods
mov
std
mov
dec
pop
mov
rclb
stos
imul
jbe
loope
sbbl
pop
jge
push
sub
xchg
xor
xchg
iret
cmp
jge
mov
dec
push
add
mov
mov
fdiv
xor
das
loope
out
repz
sbbb
cmp
jb
mov
scas
xchg
fnstenv
movsb
pusha
out
jge
mov
jns
outsl
out
mov
hlt
stc
pop
mov
sbb
jo
cmpsl
ja
ret
bnd
lods
gs
ret
shll
out
nop
ret
into
inc
jg
popa
mov
fildl
or
dec
or
in
pop
add
sbb
lret
mov
adc
mov
add
mov
push
dec
lcall
sub
repz
or
lock
jg
push
cmp
mov
xchg
aam
sbb
std
out
inc
xchg
adc
mov
test
push
jno
rolb
jecxz
lcall
aad
and
mov
jecxz
dec
fscale
xor
mov
stc
cmpsb
pop
je
mov
push
push
push
push
xor
ds
out
cwtl
js
cmp
mov
pop
cmpsb
xor
lahf
in
or
cmp
cwtl
inc
rcl
in
adc
jns
cmpsb
aas
lahf
addr16
arpl
mov
push
cmp
and
lock
inc
mov
addl
jp
and
repz
aam
push
cmp
sub
xchg
ss
into
jne
adc
into
lea
or
rorl
add
sub
sbb
fstpt
xor
ret
fs
jno
cmp
mov
outsl
nop
outsb
pop
icebp
and
lcall
xchg
dec
sub
int3
in
int3
or
cltd
xorl
xchg
adc
pop
push
inc
or
push
jb
mov
lods
push
jp
ficompl
pop
jp
insl
pop
mov
xor
stos
sub
jb
rolb
into
jne
mov
mov
xchg
push
or
push
lds
xchg
ror
lock
sbb
inc
jecxz
xchg
mov
pop
mov
add
mov
add
push
scas
xlat
loopne
add
ja
cmp
mov
cmp
xor
pop
cmp
xor
sbb
dec
movsb
out
sub
in
popa
mov
push
lret
cmc
pop
fsubrs
sbb
ss
xor
cmpsb
xchg
shll
jnp
cs
push
movb
mov
add
pop
xchg
cs
push
push
mov
cmp
int
sarl
xor
cmp
mov
xor
sbb
out
inc
adc
mov
push
dec
push
sub
shl
xchg
mov
jge,pt
fwait
jp
push
test
mov
adc
mov
shr
in
gs
jg
std
jge
imul
les
xor
and
es
sub
add
stos
push
repz
data16
repz
cltd
sub
jbe
sbb
jne
sub
inc
pusha
dec
inc
sahf
dec
negb
xlat
or
sub
clc
dec
lds
std
sub
jle
xor
cmp
or
fstl
adcb
cld
add
dec
iret
out
jo
and
adc
lds
das
jl
pop
in
push
test
sub
jl
pop
pop
cmc
shrl
inc
xchg
fwait
lods
mov
ret
test
and
ficomps
add
dec
push
push
adc
fsts
gs
jecxz
mov
adc
push
mov
dec
lret
js
xchg
xchg
dec
add
pusha
dec
pop
push
mov
pop
jae
cli
cld
fs
out
stos
jl
xchg
mov
ljmp
loope
fmull
lods
or
dec
inc
lcall
push
dec
jns
xchg
xchg
pop
cmp
mov
or
adc
add
imul
xchg
inc
call
and
xor
neg
outsb
std
lsl
adc
and
sbbl
insb
jo
fisttpll
and
lahf
ret
cmp
clc
iret
fldenv
xchg
add
fidivrl
shl
and
insb
fstl
in
pop
in
inc
iret
sbbb
cmp
shrl
cmp
fs
fmuls
lret
sarb
int
and
mov
ffree
imul
jg
shr
mov
enter
sbb
decl
ds
loopne
ret
inc
jbe,pt
pop
pusha
outsl
out
out
ss
mov
sub
out
jg
sbb
pop
pop
testb
enter
jg
pop
lock
fnstenv
pop
xor
mov
xor
mov
push
dec
imul
add
push
pop
je
decl
add
fbld
and
out
push
in
and
sti
lea
bound
mov
mov
sub
loopne
or
jecxz
gs
xchg
push
sub
and
sbb
outsl
pop
pop
setnp
cmpsl
aas
hlt
divl
cmc
repz
movsl
fists
sub
je
mov
pop
cld
push
negl
add
sbb
or
cld
push
jmp
add
fwait
stos
outsl
mov
pop
loop
popa
lahf
in
aas
mov
sbb
daa
clc
mov
sti
inc
inc
xor
repz
in
mov
pop
das
loopne
mov
daa
inc
or
lcall
and
add
pop
pop
dec
aaa
fisubs
nopl
cmp
mov
push
ja
dec
rcrl
xchg
addr16
adc
inc
pop
sbb
mov
mov
mov
adc
jmp
fwait
pop
mov
aaa
repnz
roll
inc
pop
ret
lret
cld
xor
and
push
sbb
sti
hlt
popa
push
les
push
lods
in
jbe
fcmovnbe
xchg
fstpl
sbb
push
fcmovbe
andb
scas
aad
pop
jno
sub
stos
out
adc
cmp
jl
xorb
xor
scas
into
jg
and
mov
inc
daa
mov
xor
ss
call
pop
std
fldl
inc
adc
mov
cwtl
aaa
mov
mov
incb
xchg
lds
xchg
repnz
jnp
add
and
int3
pop
pop
pop
mov
pop
push
pop
mov
xchg
loop
sub
xor
mov
arpl
pop
push
dec
mov
add
cmpsb
xor
jecxz
mov
mov
or
out
les
cmc
lock
inc
sbb
push
ret
es
mov
sub
sub
xchg
mov
jnp
pop
fistpl
sar
push
or
pop
cli
stos
mov
jno
xchg
and
fsubrl
sub
fnstsw
add
ja
mov
add
pop
fistl
dec
adcl
mov
xchg
xchg
push
rolb
loopne
xchg
push
sti
push
lret
hlt
shll
sub
and
gs
cmp
pop
dec
outsl
ret
icebp
xor
gs
scas
push
out
scas
add
pop
lods
mov
sub
add
aad
or
jbe
jno
imul
xor
or
shr
sbb
sbb
cmp
popa
xchg
mov
loop
mov
loope
lods
das
cld
add
ret
fisubs
add
xchg
adc
mov
xchg
fimull
lret
jp
dec
adc
dec
pop
lods
sbb
imul
int3
movsb
imul
jns
sbb
pop
repnz
outsl
xor
xor
dec
stc
sbb
push
xor
mov
mov
call
xor
shrb
shl
and
xchg
xchg
int3
jne
fwait
adc
pop
inc
jne
outsl
pop
gs
loop
iret
cmpb
push
rclb
sub
push
lock
rsqrtps
xchg
cli
mov
test
inc
daa
cmp
inc
fsubrs
push
call
inc
add
fmul
fwait
icebp
sti
mov
dec
loop
mov
fbstp
dec
cmp
divb
push
sbb
dec
dec
or
xor
mov
xchg
xchg
imul
rolb
dec
and
flds
xchg
add
dec
outsb
inc
push
add
std
mov
add
xor
repnz
adc
adc
sub
xor
test
loop
push
mov
sbb
push
adc
stc
jb
sub
jg
xchg
pop
push
in
mov
popa
and
sar
pop
mov
push
pop
sub
xchg
mov
and
mov
xor
lods
and
pop
push
adc
sbb
adc
pop
cmpxchg
and
inc
lds
push
jecxz
mov
lret
mov
mov
cmp
and
dec
add
orb
sarb
out
push
inc
cs
jno
popa
mov
bnd
mov
mov
xchg
push
pop
inc
fwait
add
xchg
mov
xor
or
movsb
dec
cmp
ja
imul
mov
add
sub
xor
int
xlat
aas
mov
xlat
and
jg
pop
push
jo
sub
xchg
sbb
int3
sub
dec
int3
dec
sbb
add
mov
out
pusha
sub
arpl
dec
jnp
lock
mull
loop
jbe
mov
xchg
jg
jo
aad
jnp
jns
adc
fs
mov
lock
test
jae
push
ret
insl
lret
or
ja
push
in
mov
fwait
fwait
mov
xor
xor
pop
push
in
into
fadd
push
dec
aas
pop
in
jmp
add
xor
sahf
pop
mov
cmp
nop
push
pop
rclb
stc
inc
push
push
lahf
push
sub
push
mov
jecxz
lds
les
es
and
inc
jecxz
sbb
ret
lock
aas
aam
daa
mov
cmp
loopne
arpl
pushf
lock
fistl
pop
dec
lods
int3
mov
fadds
shlb
inc
mov
loop
add
out
mov
mov
or
loopne
xor
je
cld
movsb
push
leave
mov
push
mov
inc
rclb
fidivl
cmc
outsb
arpl
das
dec
mov
hlt
lahf
push
out
mov
mov
cltd
push
xchg
cmp
adc
mov
jp
in
imul
pushf
ljmp
cs
leave
jge
sysenter
xchg
pop
xchg
push
andl
aas
sub
pop
arpl
cmp
ja
dec
mov
arpl
inc
cmpl
fldl
mov
and
push
fldt
mov
in
addb
mov
lahf
cmp
mov
cli
add
push
sub
addr16
outsl
pop
es
aad
das
sub
data16
inc
leave
cmpsb
jge
add
jo
roll
movsb
mov
es
in
or
iret
push
rcr
nopl
repz
xor
xchg
inc
nop
dec
xor
jo
adc
inc
mov
fistpll
out
out
mov
fmul
lods
cltd
out
in
or
push
cmp
adc
je
mov
mov
and
fucomip
push
or
lea
into
sbb
maskmovq
testl
les
fsubr
adc
mov
rol
scas
ds
jge
maxps
out
fiaddl
aaa
loope
dec
xchg
add
cmp
sub
push
fwait
hlt
jp
push
dec
adc
cmp
leave
andb
push
or
test
dec
mov
jns
pop
and
mov
inc
lods
inc
loop
inc
cwtl
and
clc
xchg
cwtl
mov
and
ficoml
arpl
add
jge
cmp
sbb
rcrb
add
inc
mov
cmp
lods
cmp
xor
mov
xorb
and
leave
jl
xchg
mov
out
les
mov
std
rolb
dec
xchg
insl
in
movsl
push
lods
mov
psrld
fnstsw
inc
imul
cmp
stos
out
add
cmp
jg
jno
and
jmp
cltd
dec
push
add
daa
xchg
and
dec
cmp
jns
popa
std
inc
pop
lcall
pop
test
sbb
xchg
sbb
sbb
sub
movsb
fs
push
add
lods
sbb
sbb
test
add
test
push
sti
pop
bound
cwtl
fildl
inc
xchg
ja
mov
fs
mov
jmp
sbb
cmp
inc
inc
pop
enter
lea
jg
push
and
and
adc
imul
jle
sub
or
lahf
mov
jle
in
sub
jge
and
jb
sub
jo
lea
jo
addr16
or
movsb
bound
mov
mov
pop
xor
stc
or
jns
mov
mov
add
dec
mov
xchg
les
fimuls
mov
mov
fwait
lret
arpl
in
jecxz
stos
out
leave
jge
mov
xchg
mov
clc
mov
sub
xchg
aaa
cmp
or
sub
xchg
pop
popa
jne
icebp
pop
jo
and
lcall
sub
pusha
lret
es
testl
jmp
fcoms
por
adc
in
mov
fildll
push
mov
adc
mov
add
aad
mov
jno
jg
test
aaa
cmpl
or
dec
sbb
sbb
adc
cs
sahf
xlat
jl
lock
xor
sti
sarl
xchg
mov
push
test
xor
pushf
jmp
mov
sahf
enter
adc
pop
jmp
mov
lock
enter
dec
inc
stos
popf
int
jl
cmp
add
aam
js
cmp
out
outsb
outsb
pusha
outsl
pusha
cmpsb
pop
xchg
bound
mov
ljmp
dec
mov
xor
int
sbb
jmp
inc
out
and
and
call
inc
push
inc
cmp
std
add
add
decb
dec
dec
push
cmpsb
dec
cltd
dec
or
pop
mov
push
mov
out
mov
xor
cmpsl
xchg
sti
scas
jb
test
cmc
adc
mov
xchg
add
cmp
insl
dec
jno
push
and
aas
inc
shll
loopne
outsl
push
inc
loop
aad
add
loop
and
mov
stc
bndldx
fcomip
push
sti
mov
mov
outsl
pop
aas
pop
xor
lds
add
sub
jp
mov
push
pop
int3
rolb
fimull
cmp
mov
pushf
sub
jne
xor
mov
das
pop
mov
xchg
sbb
pop
xchg
xchg
stc
lock
lret
and
fists
ljmp
out
insl
dec
sbb
fisttpll
add
inc
mov
xchg
mov
loope
jl
and
jnp
stos
lock
pop
and
iret
and
cmpb
xchg
xor
rcr
push
adc
jmp
jmp
push
pop
fsub
adc
subl
icebp
xchg
push
push
jl
gs
and
xorl
loope
cmp
add
pop
test
repnz
xor
push
daa
js
fcmovnb
mov
arpl
lcall
xchg
and
mov
inc
mov
sbb
repnz
cmp
fstp
sbb
sub
dec
jge
sbbb
in
mov
dec
std
into
dec
aad
mov
adc
ret
inc
adc
xchg
or
add
stc
ljmp
test
dec
imul
cmpsl
loop
pop
test
xor
sbb
mov
push
jno
mov
and
xchg
inc
mov
aaa
jo
adc
rorb
pop
jnp
xchg
push
notl
lods
fisttpl
xor
les
push
dec
pop
dec
int
arpl
mov
xor
jnp
or
movsl
mov
lods
pop
lret
pop
sbb
repz
test
clc
xchg
sub
and
sarb
mov
test
loopne
push
xchg
int
pushf
mov
mov
inc
adc
dec
arpl
adc
add
clc
daa
adc
insb
xor
xchg
fwait
movsl
inc
xchg
in
push
stos
xor
pusha
or
mov
adc
lods
popf
jl
pop
dec
jl
mov
repnz
or
xchg
pop
lods
roll
sub
fimuls
pop
push
jo
pusha
movsb
jo
xor
rolb
pop
jno
xchg
shll
xchg
data16
ror
lret
pop
push
jno
popf
mov
ss
inc
or
pop
movsb
ret
loop
jg
popf
sarb
imul
inc
lods
xchg
flds
fcmovu
test
popf
leave
mov
and
and
cmp
xchg
mov
adc
std
push
cli
loop
pop
jg
cmp
mov
mov
aaa
jne
fcomip
add
insb
sti
inc
cmp
and
loope
add
movsl
imul
push
mov
mov
or
dec
dec
sbb
xorl
cmp
sbb
and
push
add
mov
or
shrl
add
inc
call
loope
sahf
nop
lea
jb
jmp
cmp
push
fisttpll
sub
aaa
or
lcall
repnz
jge
inc
repz
std
repz
sbb
pop
pusha
ret
cltd
pop
inc
cmc
xor
jl
push
pop
add
in
in
mov
inc
ds
in
mov
cmp
call
mov
aas
jno
xor
sub
stos
mov
in
or
lret
mov
popf
mov
std
lret
pop
add
add
dec
leave
shlb
jbe
mov
js
int
jno
add
ret
aad
stos
lret
mov
dec
adc
inc
sbb
sbb
xlat
loope
popa
adc
pop
mov
out
sbb
inc
cmc
add
lock
aas
xchg
xor
aam
shl
mov
mov
imul
xor
pop
jle
loop
dec
fidivrs
push
xchg
mov
int3
add
data16
jbe
outsl
jl
cmp
out
sti
fs
push
mov
cmp
out
mov
and
inc
jnp
add
mov
mov
out
aaa
mov
or
sub
faddl
jb
fdiv
shlb
pop
mov
dec
adc
enter
rorl
jbe
outsb
sub
xchg
je
decl
lahf
xchg
inc
bound
pop
and
outsb
ftst
mov
loope
in
cmpsb
test
mov
inc
movsl
ds
addr16
pop
lret
adc
outsl
and
cwtl
stos
fcomip
jl
cli
mov
and
ss
xor
and
loope
jp
mov
movsb
xchg
pop
xor
insb
cwtl
push
xrelease
sbb
xor
adc
jo
mov
jecxz
cmp
out
aad
xor
cltd
fwait
repz
popa
push
test
mov
mov
xchg
or
mov
testb
roll
cmp
repz
sbb
mov
aad
and
mov
jle
dec
fadds
jmp
notb
mov
sbb
test
pop
pop
dec
rorb
dec
mov
push
xorl
jge
pop
dec
fwait
lret
nop
adc
leave
dec
pop
inc
sub
fistpl
loopne
js
xchg
sub
or
push
addr16
lcall
jo
add
xchg
daa
xchg
test
cld
xor
rol
push
int
cltd
cmp
jp
jne,pn
push
add
jno
jmp
or
vpavgb
repz
cmp
inc
xor
cmp
lret
cmpsb
call
rcrb
jns
lret
mov
cmpsb
inc
mov
jp
inc
sbb
xorb
out
out
out
out
mov
aaa
das
xchg
pop
sbb
test
dec
clc
mov
outsl
xlat
xchg
in
shlb
mov
stos
fsubs
dec
cmp
scas
adc
rcrl
je
dec
add
jle
sti
push
mov
pop
pop
dec
jl
push
rorl
aaa
arpl
test
pop
or
lods
imul
and
notl
push
dec
xlat
xor
and
mov
jmp
movsl
in
mov
iret
dec
mov
stos
ret
pop
add
dec
cmp
dec
cmp
scas
iret
insb
mov
aam
jno
adc
rcr
adc
xorl
das
cmp
mov
das
insl
adc
popa
enter
mov
cmpsl
daa
iret
ret
jle
enter
xchg
jne
push
xchg
cmc
xchg
ficomps
out
add
das
into
dec
sbbl
jae
pushf
lahf
fs
push
xor
negl
adc
pop
cli
stc
pushf
push
add
push
push
mov
movsb
pop
dec
add
lahf
dec
push
pop
mov
jge
jmp
lods
nop
mov
add
dec
movsb
mov
cmp
in
mov
in
das
out
jne
jmp
mov
jo
out
icebp
loopne
adc
push
shrb
rcl
sub
push
in
push
stos
or
in
mov
xchg
mov
xor
inc
dec
dec
bound
mov
jle
mov
mov
mov
mov
je
outsb
lods
sbb
and
fs
jb
mov
dec
push
push
adc
in
inc
mov
add
stc
or
cmp
cmc
stc
rorb
lods
pop
addr16
dec
subb
js
pop
stos
mov
jne
std
dec
push
cwtl
faddl
pop
jl
jb
mov
outsb
outsb
sbb
arpl
fstp
das
scas
js
add
aad
fisubl
dec
subps
or
sahf
pop
adc
hlt
loop
jne
xchg
add
ds
mov
addr16
inc
jecxz
das
adc
test
nop
int
dec
pop
les
repz
jns
push
mov
push
push
mov
fwait
scas
push
fcmovne
fs
pop
es
jne
push
push
fmull
stos
pop
lds
adc
push
xchg
enter
xor
rclb
xchg
mov
lds
mov
xor
daa
pop
mov
insl
fdivrs
dec
cmp
add
fcoml
and
adc
outsb
mov
mov
jle
push
xchg
dec
cmp
and
pop
push
push
lods
adc
push
push
pop
jno
dec
movsl
test
dec
xor
popl
and
sar
push
fmull
cli
pop
xor
das
lahf
sub
or
cmp
adc
fs
lock
jnp
arpl
mov
mov
repz
in
xchg
xor
stos
leave
inc
pop
in
mov
pop
pop
pop
arpl
sbb
mov
mov
xchg
stos
cltd
decl
shl
xchg
xor
scas
mov
and
xor
or
xchg
pushf
in
out
ror
cmpsb
fidivrs
imull
inc
sbb
fcmove
or
mov
inc
inc
sub
leave
pop
inc
pop
sub
sub
xchg
push
cltd
shlb
inc
mov
hlt
adc
dec
inc
mov
pop
jo
fistl
mov
enter
cmp
lcall
mov
sarl
and
aad
dec
push
test
jns
insl
mov
push
lret
mov
or
push
cmp
adc
xchg
pusha
inc
sub
push
and
mov
in
loope
popf
and
cmp
xchg
cmp
rolb
rorb
pop
adcb
mov
jne
addr16
cmpsl
adc
ss
dec
test
jne
push
jg
out
ret
pop
pushf
jg
stc
fnstsw
jg
xorb
jle
dec
rcll
inc
push
push
popf
fwait
stos
in
sub
idiv
mov
push
data16
std
cmc
or
pusha
bound
adcb
and
lret
pop
sub
pushf
push
xchg
imul
lds
push
test
add
mov
xchg
inc
adc
xchg
push
lods
shrl
iret
stos
push
jb
cmpsl
testb
dec
in
push
xchg
outsb
push
mov
jbe
cmp
sbb
mov
or
aas
pop
lret
hlt
not
xchg
add
sub
and
xor
add
sub
sub
or
and
dec
xor
push
mulb
ror
lahf
mov
xlat
xor
enter
mov
mov
mov
and
rorb
mov
jecxz
pop
fistpll
mov
add
aam
rcrl
pop
cmp
fwait
jge
lods
lahf
loop
test
aad
sbb
mov
dec
mov
xor
add
sarl
xchg
out
jp
sbb
lret
mov
cmp
mov
cmc
dec
jo
push
nop
mov
cmp
sub
test
in
jb
cmp
aam
stos
push
push
sub
mov
pop
jne
xchg
push
aam
xor
aam
jp
jb
lods
sub
jno
cmp
xchg
xchg
mov
pop
mov
and
push
mov
lret
aas
add
ret
loope
sbb
test
lods
adc
movsb
cltd
xchg
test
mov
negb
push
push
xchg
xor
sbb
cmp
ss
leave
jl
notb
fcmovnu
insb
pop
inc
les
pop
mov
push
stos
cmpsb
adc
dec
push
jge
imul
cltd
sbb
and
nop
push
adc
rcr
xchg
pop
mov
cwtl
test
ret
inc
ret
jecxz
out
mov
or
clc
or
jle
bound
xchg
and
add
push
adc
xchg
push
test
sbb
mov
xchg
xor
sahf
push
dec
inc
inc
or
orb
enter
mov
lcall
push
sub
movl
pop
in
loope
nop
mov
test
ficompl
push
das
icebp
lret
cmpl
sbb
pop
pusha
lcall
push
pop
aas
sbb
sub
out
dec
sti
rolb
loope
mov
inc
push
subb
mov
dec
or
rcr
sbb
mov
or
xchg
or
cltd
mov
fisubrl
add
std
xchg
push
mov
dec
mov
inc
btr
or
imul
aam
dec
push
ror
adc
or
jecxz
cli
dec
jae
cmp
out
dec
push
jns
loope
pop
cmp
mov
call
andb
scas
pop
jo
jbe
push
clc
push
gs
inc
jne
nop
add
std
mov
mov
jbe
insl
in
mov
mov
mov
cmpsb
int
pop
lcall
mov
scas
aam
jge
popf
cmpsb
and
push
popf
sub
cltd
sahf
fdivs
pop
iret
push
or
movsl
push
xchg
mov
es
cmp
leave
les
xlat
mov
mov
loope
outsb
xchg
mov
rcl
mov
out
mov
ss
shrb
push
out
in
pop
setno
fidivs
xor
sbb
sub
mov
adc
lret
mov
lods
or
mov
jns
cmc
xchg
or
cmp
jno
shll
mov
xchg
xchg
lds
inc
mov
scas
push
imul
sbb
cmp
shr
mov
cmp
scas
lea
aaa
bound
or
mov
pop
test
lods
fsubrl
pop
mov
xchg
movsb
mov
ret
mov
int3
jnp
call
lcall
xor
sub
sbb
leave
into
mov
push
cwtl
or
xchg
xchg
and
subb
sub
adc
cmp
pop
xor
cmc
es
repnz
loop
and
gs
fmulp
sub
aam
fisubs
xchg
in
sbb
sub
or
filds
inc
pop
xlat
sub
out
lods
sub
fcomps
xor
mov
rcrb
sub
popf
push
and
lods
pop
xlat
in
addr16
add
ret
es
movsl
mov
fildl
lods
mov
dec
push
sahf
add
mov
xchg
cmpsb
jle
in
test
jnp
add
xchg
jb
jae
jg
push
aad
mov
sub
js
jp
gs
jbe
lods
jmp
cmpsb
lods
sub
push
addr16
xor
mov
sbb
mov
add
xlat
pop
movsb
xor
or
adc
ret
jmp
lods
aaa
dec
mov
sub
add
and
imul
andl
inc
fwait
xchg
popa
sub
sub
cmpsb
xor
push
shrl
or
push
pop
ret
dec
jnp
push
fldt
lahf
jae
gs
sub
adc
icebp
push
stc
push
or
jmp
xchg
cmp
jmp
and
sbb
sbb
sub
mov
lods
in
ja
sub
mov
mov
arpl
adc
fmull
xchg
push
into
fdiv
scas
xchg
xchg
mov
out
add
mov
pop
sbb
nop
mov
es
add
sub
das
movsl
cs
nop
scas
and
dec
pop
push
test
scas
pop
mov
outsl
aas
inc
lods
pop
mov
pop
xchg
fsts
mov
std
decl
fwait
stc
fisubrs
imul
sarb
mov
xchg
sub
flds
hlt
lret
test
cmc
ret
inc
imul
stos
addb
pop
pop
sahf
lds
mov
subl
push
sub
jno
mov
sarb
xchg
dec
sub
add
fidivl
out
fnsave
lret
sub
xor
adc
loope
sub
xchg
dec
and
fisubrs
in
mov
push
or
jge
mov
dec
shr
lret
nop
push
scas
lods
imul
add
cltd
add
mov
and
jp
fnstcw
ret
ret
rcll
call
outsb
jl
enter
pop
xor
out
and
outsl
mov
in
or
adc
xor
fucomi
sbb
mov
jle
xor
daa
nop
xchg
movsl
rclb
or
into
adc
inc
aas
std
mov
fsubrl
add
aas
std
adcb
cmp
mov
hlt
mov
push
movsb
jmp
fsubrs
jb
sbb
sarl
mov
jae
fistps
outsb
jmp
mov
ficoms
mov
jle
jno
in
cmp
das
hlt
lods
mov
cmp
sub
mov
mov
inc
mov
add
push
lahf
xchg
call
out
xchg
cmp
popa
test
stc
xor
lea
int3
test
pop
ret
outsb
cmp
jns
mov
in
mov
or
jecxz
fsubrs
into
scas
mov
jae
and
ljmp
jecxz
std
test
lcall
push
xchg
scas
cmp
inc
mov
pop
testl
mov
sub
repnz
push
jp
push
add
cwtl
dec
loope
inc
pop
lods
sub
insb
aaa
fadds
lods
mov
loopne
cmp
gs
adc
push
mov
test
jl
pop
or
lret
cmp
xor
js
sbb
mov
movsl
jmp
jae
fiadds
pop
adc
xchg
jno
cmp
sti
xchg
inc
fsubr
notb
fnstenv
imul
mov
cmp
outsb
lret
pop
inc
cli
adc
das
loope
mov
xor
push
adc
dec
fcomip
outsb
push
cltd
push
jne
gs
mulb
fnstenv
xchg
inc
data16
inc
cmp
es
and
dec
pop
jl
shl
test
cli
pop
sub
jle
icebp
sbb
aam
xchg
addr16
lret
jp
inc
clc
jae
xor
mov
loop
push
dec
adc
inc
call
stos
and
sbb
cmp
mov
mov
shll
roll
ss
jecxz
cmp
add
jbe
dec
insb
pop
mov
pop
cwtl
ret
inc
adc
xchg
push
pop
rcl
mov
stos
int3
icebp
std
and
jg
jo
lods
or
push
cmp
jbe
fmull
jmp
bound
iret
dec
addr16
jmp
mov
jge
mov
mulb
pop
pushf
out
fistl
mov
add
aaa
add
scas
cmp
jecxz
xor
inc
repnz
jmp
sub
lds
pop
scas
inc
mov
jmp
fdivrs
daa
int
xor
xchg
mov
jg
fwait
popf
nop
pop
pusha
lret
xchg
fiaddl
fldcw
stos
loop
aaa
push
in
jge
add
sti
cmp
add
dec
adc
imul
jp
lret
movsl
loop
loop
andl
movsl
pushf
jae
rol
and
xchg
dec
mov
mov
cmc
lret
xchg
adc
xor
icebp
jp
jb
aas
adc
in
sub
pop
dec
push
and
pushf
sbbb
int3
mov
stc
ret
ja
xchg
push
test
mov
cmpsl
shlb
in
dec
outsl
push
sbb
pushf
mov
push
or
mov
movsb
pop
mov
inc
adc
jo
es
scas
fcompl
jo
sbb
fstpt
iret
push
pop
inc
movsb
test
and
cli
andb
jbe
mov
add
lret
mov
js
aaa
or
shlb
andl
sahf
and
fdivrp
push
or
repz
sahf
jl
out
sub
out
negl
outsb
push
mov
xchg
add
push
clc
inc
cmp
cmp
mov
daa
int
mov
je
mov
in
in
sub
mov
push
aad
sub
push
int3
pop
out
xchg
xchg
adc
lods
xorl
bsr
mov
fildll
fstpl
xchg
aad
insl
add
stc
movsb
leave
mov
xor
mov
mov
or
jbe
xchg
jb
and
and
jnp
in
jle
arpl
idivb
adc
jne
sbb
push
sbb
fistpll
in
sub
xchg
dec
mov
mov
jnp
popf
pop
daa
cmp
idivb
inc
xor
push
jl
pop
push
dec
add
inc
lcall
or
ret
shlb
int3
pop
cltd
lcall
sbbl
cmp
lock
jp
addr16
mov
addr16
loop
mov
adc
and
dec
loopne
pop
jns
sbb
test
adc
les
and
xor
cld
lods
dec
lea
and
jne
daa
movsb
pop
pop
loope
push
push
scas
shrb
xchg
push
pushl
ljmp
lods
jnp
dec
adc
std
and
dec
movsb
jmp
adc
inc
inc
cmpsb
xor
pop
push
and
mull
ja
adc
dec
mov
xor
xor
xor
mov
orl
mov
push
iret
imul
nop
lcall
adc
push
fwait
addr16
scas
mov
outsb
iret
hlt
xchg
adc
mov
rcl
outsl
jmp
xor
aam
cmp
outsl
negl
push
in
mov
lock
jge
and
add
lock
sbb
dec
dec
push
imul
jmp
push
call
repnz
jns
mov
jno
jbe
stos
pop
andl
bnd
and
cmp
push
es
or
popa
push
lret
mov
fcoml
mov
sbb
jg
shrb
andb
sub
adc
pop
shl
cmp
dec
push
iret
jb
pop
scas
dec
jecxz
test
fmuls
cmp
cltd
or
lods
or
rcll
cmp
shr
dec
dec
loope
cmpsb
mov
lea
mov
out
cli
cwtl
jmp
out
hlt
fucomi
xchg
or
sbb
sub
cmp
cli
out
outsl
pop
mov
jbe
and
jae
and
pop
or
push
enter
dec
aad
imul
fisubrs
and
cmpsl
push
mov
dec
mov
mov
xchg
stc
andl
rcll
mov
lock
adc
sbb
mov
xchg
arpl
cwtl
mov
lods
cltd
test
popf
cmpsb
and
mov
cmp
in
cmp
les
and
and
das
lcall
mov
insb
aad
mov
mov
scas
scas
xchg
imul
jl
cmp
jge
push
idivb
jp
movsl
divb
subb
mov
cwtl
cmp
jns
loopne
and
inc
stos
pop
push
ja
repz
cmp
arpl
and
lods
push
roll
dec
lds
push
fs
mov
divl
popf
mov
sbb
xchg
adc
xchg
xchg
or
rol
xchg
stc
loop
adc
sub
inc
movsb
in
shrb
clc
inc
in
shll
out
xchg
pop
mov
lds
xchg
movsl
imul
jae
cwtl
mov
ficomps
outsl
out
sub
ret
pop
out
jnp
add
je
cwtl
adc
outsl
xor
push
loop
and
fwait
cmp
xchg
ret
stc
cmp
insb
jo
push
outsb
push
clc
adc
cmp
xor
fidivl
call
into
or
fs
popf
aas
jb
add
add
push
iret
fidivrs
xchg
mov
xor
cs
xchg
cmp
or
dec
leave
lcall
dec
cmp
icebp
push
mov
inc
fs
push
sbb
add
imulb
shl
add
lods
push
mov
push
push
push
mov
lea
push
arpl
ret
xor
ljmp
or
sub
stos
jg
loop
dec
jns
pop
pop
daa
xchg
ljmp
pop
nop
and
ret
xchg
jle
lods
pop
jecxz
ss
cld
adc
jle
outsl
jae
xor
arpl
lahf
loop
ja
add
in
insl
lret
icebp
fimull
inc
and
push
push
adc
push
out
stc
fwait
mov
shl
xchg
xor
fwait
mov
cmp
js
cmpsb
push
cmp
add
fwait
xchg
gs
out
jo
sbb
in
xchg
cmpb
and
cwtl
xor
push
in
pop
outsb
ds
mov
xor
int3
sbb
in
add
sub
rclb
jns
adcl
rol
iret
and
loopne
pop
and
sub
push
fld
icebp
jle
cmp
outsl
dec
inc
xor
pop
lahf
std
pop
dec
inc
pop
hlt
cli
push
xchg
test
push
repz
in
ljmp
pop
stc
mov
das
mov
pop
inc
dec
pop
add
call
push
or
adc
imul
mov
loop
xor
jmp
hlt
fbstp
pop
and
jb
jecxz
addb
je
jp
sub
or
out
mov
in
jg
jmp
jne
aam
ret
or
test
sub
popa
rorl
lods
fnsave
lds
dec
cmp
movsl
ret
adc
fbld
cmp
in
pop
cmp
fdiv
out
arpl
mov
ret
jae
jo
add
push
mov
jp
jecxz
stc
iret
dec
pop
insl
jns
sbb
je
jbe
push
or
repnz
andl
mov
adc
lods
cmc
or
mov
xchg
sub
sbb
into
sub
xchg
sub
shlb
or
ja
and
push
fstpl
gs
xor
in
ljmp
push
pop
adc
sub
pop
sbb
cmp
in
sbb
and
repnz
data16
mov
or
imul
std
pop
mov
aaa
and
je
pop
cmpsb
lea
mov
dec
push
pop
jmp
pop
mov
sbb
mov
mov
adc
push
add
sbb
out
mov
cld
adc
xlat
pop
cmp
mov
lock
inc
and
les
test
ljmp
adc
insb
or
pop
adc
scas
out
and
ret
add
xor
xchg
jae
out
std
je
sub
jae
adc
mov
out
dec
xchg
pusha
fdivrs
lods
repnz
aaa
mov
arpl
movsl
test
mov
xchg
ret
xchg
xchg
repnz
push
add
mov
pop
xorb
pop
ret
and
hlt
int
notl
mov
nop
fwait
popf
xor
outsl
lock
pop
push
and
test
lcall
bound
and
test
dec
js
push
xor
xor
pop
mov
enter
push
pop
rclb
cmpb
fistpll
fimuls
and
jb
insl
dec
lods
inc
push
fisubl
mov
xor
inc
in
cmp
cmp
popa
lea
mov
clc
scas
mov
aas
pusha
sbb
fsubr
test
mov
and
adc
lea
dec
xchg
push
lock
andb
les
adc
test
mov
dec
pop
xor
and
in
movsl
add
movsl
xor
adc
cld
xor
xchg
pop
jo
xchg
adc
addr16
cmp
sub
xor
inc
inc
lret
jp
xchg
push
adc
hlt
in
js
and
movsb
aaa
or
inc
mov
add
xchg
pushf
mov
adc
sub
mov
out
sub
xchg
test
xor
dec
iret
adc
gs
cwtl
sbbl
popf
inc
les
push
mov
in
arpl
jmp
out
or
push
int
fsqrt
push
mov
ja
jge
jnp
lahf
mov
cwtl
int3
and
push
sbb
loope
push
aad
dec
and
xchg
in
mov
das
mov
jns
roll
push
testb
aam
pushf
sub
mov
xchg
es
sub
cs
jg
ja
rcrl
sti
or
pop
or
inc
sti
push
or
dec
xor
push
pushf
dec
cmc
lahf
push
add
sbb
in
pop
cltd
stos
mov
outsl
xchg
jae
out
or
inc
push
sbb
rol
pusha
pushf
mov
test
lretw
cmpsb
je
inc
jns
outsl
xor
xchg
test
inc
test
xchg
jge
add
pushf
rorb
idivb
mov
push
xchg
bound
call
mov
mov
scas
adc
mov
mov
or
lods
mov
pop
add
xchg
stos
or
or
adc
sub
xchg
in
jo
loope
jle
out
and
jnp
clc
jp
xchg
pop
out
or
popa
hlt
xor
lret
mov
aam
and
mov
dec
lret
or
lret
push
lods
aas
fs
fs
pusha
aas
or
add
fs
aaa
jl
aam
cltd
scas
mov
sahf
inc
lods
pop
shl
cmp
jg
inc
outsl
shl
imul
aad
pop
cltd
cmp
movsl
and
or
dec
mov
insl
pop
cmp
movsb
ret
pusha
out
lea
jecxz
sub
js
lods
jp
mov
push
jl
fwait
push
ret
push
jl
mov
push
push
pop
xor
push
lods
rorb
mov
adc
in
outsl
stos
aaa
mov
imul
int
je
mov
pop
int
push
unpcklps
xor
sub
daa
inc
popf
dec
jns
jmp
stos
andl
cs
roll
jbe
popa
test
lret
mov
pop
xlat
add
dec
mov
scas
in
push
shl
push
mov
arpl
xor
lret
inc
call
inc
stc
ja
nop
mov
aas
mov
sub
pop
loope
insl
ret
xor
into
or
loop
pop
ljmp
pushw
jns
fisubl
lods
jge
lods
jmp
mov
mov
xlat
xchg
in
arpl
stc
push
rol
xchg
je
push
cmpsl
shrl
mov
in
sahf
jecxz
xor
mov
dec
cmpsl
gs
jno
cmp
icebp
pop
xor
jecxz
nop
movsl
dec
das
imul
jmp
out
cmp
mov
rol
mov
mov
stos
fs
or
and
push
nop
je
add
xchg
lret
mov
sub
rorl
das
inc
jmp
leave
mov
xor
inc
mov
mov
in
dec
pop
stos
out
inc
mov
and
iret
mov
push
mov
popa
daa
or
iret
loopne
fmul
ss
push
sbb
and
jge
pop
insb
aaa
sbb
mov
cld
or
lods
push
call
xor
adc
inc
jecxz
rcr
out
cmp
aaa
mov
and
jg
out
negb
pop
scas
jne
dec
sub
pop
hlt
stc
xor
cmp
dec
xchg
rclb
psubb
data16
xor
dec
push
out
repnz
fiaddl
inc
mov
add
push
lcall
call
add
jle
xchg
pop
or
fiadds
jge
sarb
cltd
and
inc
aaa
iret
into
mov
lret
sub
inc
cmpsl
arpl
fs
dec
mov
sub
je
jg
inc
mov
std
or
cmp
movsb
inc
scas
xorl
or
test
mov
bound
add
sbb
shll
mov
cmpsb
call
dec
cmc
test
xor
pop
enter
dec
sbb
stos
jp
inc
cmpsl
in
push
mov
cwtl
or
roll
jl
adc
or
clc
sbb
daa
jns
adc
shlb
cli
test
bound
ljmp
mov
std
or
aad
inc
lret
lods
or
mov
pop
shl
xor
pushf
ss
subb
stos
xlat
loop
dec
inc
orb
stc
add
out
and
lret
aam
adc
rcrl
je
rorl
pop
cmc
fsubrp
loop
cmpsl
pop
movsb
sar
std
fs
cmp
andl
pop
ret
and
cmpsl
mov
call
and
and
pushf
inc
repz
loop
jne
cmp
ss
adc
les
push
gs
adcb
outsb
lds
dec
xor
imul
jne
pop
push
cmp
mov
and
xor
and
jno
pop
jo
or
sar
insl
jecxz
jns
cmp
ret
sub
je
adc
pop
jp
popl
out
mov
pushf
pop
imul
pop
ds
mov
int3
movsl
or
jae
jp
push
xorl
arpl
xor
sar
shll
or
ja
sub
adc
nop
aaa
xor
clc
push
dec
mov
mov
popf
cwtl
mov
inc
jle
pushf
sub
dec
pop
aam
xchg
cld
sbb
sbb
jae
or
subb
lods
push
mov
fdivl
andb
subb
ds
cs
cmpsb
cmpsl
inc
addr16
jb
push
jne
and
hlt
mov
shr
jne
mov
add
add
out
jmp
xchg
icebp
or
fldl
or
dec
stos
jb
ret
cs
setle
inc
nop
mov
repz
xchg
iret
mov
fnstcw
movsb
xlat
fwait
outsl
xor
in
loope
add
pop
push
cwtl
mov
xchg
add
cld
insb
lret
es
mov
imul
mov
ja
arpl
jns
adc
mov
lret
repnz
adcb
mov
pop
loopne
inc
mov
js,pt
sarb
hlt
mov
pop
or
cmpsb
pop
cmpsl
and
pop
dec
fwait
mov
xor
test
stc
pop
testl
jmp
and
fcmovu
int
cmp
lret
push
pop
lret
xchg
add
mov
testb
cmp
xchg
mov
stc
push
push
loop
push
cmc
shll
mov
insl
mov
inc
imul
lcall
and
xor
lahf
lahf
xchg
adc
ret
mov
push
inc
fsubrs
mov
mov
ljmp
scas
ficoms
dec
cli
loop
dec
cmp
fstpt
add
negl
es
lret
nop
add
in
rol
adc
or
sub
sahf
mov
jmp
aam
clc
xor
lea
dec
es
out
shrb
jne
sbb
sbb
mov
fldl
adc
outsb
dec
jnp
out
lods
cmp
dec
insb
into
push
shll
std
mov
pslld
cld
cmc
arpl
ja
and
out
push
and
dec
dec
add
mov
mov
cmp
xor
push
mov
insl
mov
jmp
xchg
push
int
lods
inc
pusha
xchg
lods
mov
jmp
lret
cmp
mov
enter
xor
mov
leave
pop
pop
mov
hlt
or
decb
movsb
repnz
pushf
xchg
add
cld
test
cld
pop
pop
push
cmp
adc
lods
push
push
add
loop
inc
addl
fs
jnp
mov
sbb
sbb
mov
insl
xor
pop
loope
clc
adc
inc
pop
and
xor
jmp
mov
fwait
into
insl
mov
xchg
dec
xchg
pop
cwtl
cmp
ret
adcb
bound
xchg
inc
int
mov
lods
lods
pop
nop
push
and
arpl
mov
mov
in
bound
lods
xor
mov
inc
mov
popf
jnp
xchg
nop
mov
dec
cli
shlb
fwait
pushf
inc
add
aaa
inc
mov
mov
ljmp
sbb
sub
cmp
gs
pop
inc
xchg
add
or
ficoms
xchg
fmulp
repz
int3
fcompl
xchg
loop
jmp
push
bound
cwtl
orl
test
xchg
pop
adc
mov
pushf
adc
jg
adc
sbb
push
decl
pop
mov
call
notb
bound
es
cmc
dec
jecxz
inc
popa
push
push
outsl
cld
jecxz
adc
test
mov
std
in
shr
push
sub
xor
inc
xchg
or
cmp
aad
mov
inc
mov
js
xchg
adc
cmc
inc
popa
jnp
fidivs
fwait
adc
pop
imul
add
inc
hlt
xchg
pusha
cmpl
test
insl
inc
mov
leave
in
and
pop
mov
fcomp
sbb
pushf
mov
or
mov
and
cmpsl
cmp
adc
mov
inc
dec
cs
jnp
mov
sbb
aas
inc
mov
jmp
sub
pushf
lcall
inc
andb
lcall
mov
iret
cmpl
scas
mov
dec
or
mov
inc
mov
push
and
subl
cmp
orb
xor
popa
sub
push
loop
xchg
mov
test
out
cmp
and
lods
mov
arpl
fwait
test
adc
out
cltd
inc
mov
push
xor
jge
push
inc
testb
pop
insl
jle
xchg
mov
and
xor
or
cmovnp
mov
andb
out
mov
xor
xor
push
iret
and
punpckldq
ljmp
out
jbe
les
or
inc
shll
pop
dec
inc
fidivs
mov
and
pop
fistpll
adc
sbb
mov
adc
lods
cltd
scas
mov
xchg
std
jecxz
lock
and
sub
nop
loopne
or
loop
movsl
xchg
jl
jge
jno
jne
mov
lea
es
lcall
std
push
repnz
mov
cld
in
mov
addl
cmpsb
mov
mov
jb
pop
xor
xchg
enter
and
out
mov
out
movsb
sbb
cmpsl
inc
and
filds
outsb
or
xor
rcl
movsl
gs
push
shrb
scas
dec
add
or
fdiv
cmc
stos
mov
inc
sbb
ret
movsb
cmp
sub
jmp
adc
scas
adc
outsb
xor
mov
push
lahf
shrl
add
test
cmpsb
mov
and
aam
xor
aas
mov
cmp
pusha
outsb
mov
xchg
add
xor
ljmp
aaa
fsubrl
loop
dec
cmpsb
inc
jb
cmp
test
push
pop
pop
adc
cmp
pop
xor
mov
inc
ds
addl
xchg
mov
icebp
movsl
mov
bound
in
jp
inc
lea
mov
out
cmp
scas
cmp
cli
cmp
jnp
mov
pop
out
movsb
inc
pop
mov
loopne
fsubrs
fildll
mov
mov
aaa
push
mov
lods
call
fwait
add
pop
pop
aaa
rorl
jg
popa
sti
sahf
mov
mov
mov
push
xchg
test
push
std
xlat
stc
lcall
mov
mov
jmp
pop
sbb
mov
mov
lods
xchg
loopne
jmp
dec
xchg
arpl
mov
lcall
jbe
or
mov
mov
je
sub
outsb
push
subb
insb
mov
popa
insl
pop
cmp
or
cwtl
cmp
pop
cmp
subl
mov
xchg
jnp
pushf
fisubrs
out
popf
inc
add
loopne
xor
dec
dec
sahf
movsl
mov
pop
xchg
test
insb
dec
push
sub
adc
push
out
add
jmp
rcrb
outsb
inc
cmpsl
push
dec
add
decl
and
mov
in
hlt
int3
inc
sub
std
enter
mov
sub
push
cmp
and
popa
movsl
cmp
mov
mov
mov
xchg
out
pop
ds
sbb
push
rcl
adc
inc
ret
jg
push
js
fldcw
mov
push
movsb
data16
shlb
inc
jo
xor
xchg
push
mov
jb
xor
out
enter
das
fcmovb
out
dec
xor
cmp
ret
icebp
sub
push
lods
push
aas
jg
mov
or
out
test
inc
fistpl
mov
movsb
sub
imul
xor
or
shlb
data16
push
sbb
cmpsb
mov
xorb
fmuls
iret
xchg
jo
mov
sub
xchg
aam
mov
dec
ds
cld
and
pop
sbb
arpl
dec
sub
rcrb
in
in
int
dec
mov
std
mov
js
sbb
loopne
icebp
mov
push
lock
arpl
cmp
jno
jle
data16
xlat
iret
cltd
dec
adc
aad
xchg
push
test
mov
sub
icebp
leave
fisubl
dec
jle
decl
ficoml
shrb
fwait
adc
inc
js
xchg
ljmp
mov
iret
xchg
out
leave
and
add
nop
in
nop
clc
jg
imul
dec
and
stos
sub
imul
mull
int3
mov
mov
pop
into
cmc
arpl
and
push
hlt
and
sub
adc
pop
divps
and
sbb
dec
loope
dec
out
fwait
js
sbb
cmp
adc
ficompl
mov
sbb
xchg
icebp
orb
adc
idiv
jne
jmp
bound
sub
test
xor
lcall
mov
jmp
or
mov
mov
lock
insl
mov
mov
movb
sub
mov
addr16
lods
lahf
adc
pop
dec
push
fisubs
mov
cmp
cld
sub
scas
push
les
xor
out
dec
push
test
xor
and
dec
pop
pop
inc
mov
and
mov
sub
shl
xor
mov
les
rcrl
jae
addr16
xchg
sub
pop
and
inc
xchg
xor
jle
xlat
in
in
mov
cmp
popa
ret
cmp
or
push
or
push
jnp
mov
jecxz
or
mov
jmp
arpl
xor
adc
out
push
jle
cmpsb
jl
mov
int3
xlat
and
xlat
lea
repnz
pop
stos
jno
push
push
sbb
mov
in
adcb
dec
jno
and
push
scas
mov
popa
cmp
int
aad
shl
cmp
pop
cs
test
clc
add
fnstsw
sub
popa
roll
mov
fstpl
lea
sub
insl
movsb
in
cmp
inc
dec
int
inc
int3
jae
and
xor
sbb
pop
insl
xor
mov
and
mov
loope
test
repnz
or
ds
mov
cmc
mov
in
cmp
pusha
outsb
mov
iret
mov
outsl
sti
cmp
mov
sti
push
fisttpl
cli
cmpsl
outsl
xor
iret
cmp
jge
test
pop
lret
pop
lret
mov
dec
inc
mov
add
cmc
adc
in
idivl
repnz
mov
lods
pop
add
lds
dec
add
push
dec
dec
sarb
popl
dec
sub
inc
dec
pop
and
fmuls
xchg
mov
cmp
and
std
je
adc
cltd
fs
andb
xchg
and
test
dec
ret
rcl
mov
add
in
mov
lea
adc
les
mov
jbe
test
ror
popa
out
mov
xor
dec
sbb
loop
into
sub
xchg
arpl
push
ja
jnp
cld
adc
xor
shr
fisttpll
out
movsb
pop
loopne
push
or
adc
jnp
mov
cmp
leave
stos
fstpt
pop
call
testl
sub
jl
fsubl
inc
scas
loope
movsb
movsl
pusha
mov
mov
dec
aas
aas
push
outsb
xor
test
mov
popf
int
popa
cmp
popa
push
cmp
push
imul
insb
and
mov
adcb
enter
ljmp
or
xchg
movsb
ljmp
push
out
cmc
push
cmp
mov
mov
fidivrs
outsl
and
out
iret
add
mov
pop
call
pop
pop
lea
hlt
xchg
dec
pop
rolb
xchg
mov
sbb
add
cltd
add
mov
add
mov
pushf
pop
cmp
lahf
sub
sbb
add
sub
movsb
mov
icebp
dec
jle
aam
icebp
repz
movsl
xchg
mov
outsl
and
lds
mov
add
test
gs
shrb
popa
insb
sub
ds
sar
or
cld
jbe
push
xchg
xor
adc
pop
sti
jle
cli
pop
xchg
mov
push
sbb
nop
xchg
adc
xchg
inc
adc
cmpsb
mov
imull
jg
fisttpll
out
jns
sub
stc
sbb
je
mov
loope
or
push
jo
mov
fnstcw
xor
cmp
fiadds
jae
pop
sti
and
in
ds
fldl
imul
inc
loope
sbb
cmovo
mov
xchg
sti
ficoms
testl
sub
jo
sub
imull
loope
dec
out
jnp
enter
pusha
fmuls
xchg
sahf
fisubrs
jno
mov
or
push
cmpsb
inc
das
repz
push
or
pop
push
add
cs
sysret
std
es
push
popa
push
pop
pop
sub
jae
cmp
popf
xchg
enter
sbb
rorl
cmpsl
sti
xor
push
arpl
inc
jmp
into
mov
out
dec
andl
inc
int3
mov
inc
lock
sbb
pop
clc
sbb
mov
out
rclb
pop
popa
imul
xchg
or
call
xlat
lcall
dec
mov
sbb
scas
add
mov
leave
icebp
pop
pop
movsb
push
loop
cmp
or
push
adc
scas
fwait
sbb
jecxz
mov
mov
pop
aam
lock
roll
sub
mov
add
sub
idivb
pop
repz
push
sub
jno
mov
sub
cmpsl
push
daa
jbe
fdivr
fucomi
incl
ljmp
and
pop
mov
sbb
rolb
pusha
cmp
xor
xorl
test
mov
inc
push
popa
inc
sbb
dec
dec
push
push
or
sub
pop
pop
jge
rcll
ljmp
hlt
aam
popa
xor
movsb
dec
push
fsubrp
xchg
loopne
jo
sbb
out
sbb
das
je
mov
mov
jb
or
xchg
mov
mov
pop
sub
repnz
add
jge
fiaddl
test
mov
push
jp
rcrb
pushf
ret
sub
fisttps
mov
xchg
cld
sbb
xchg
or
fwait
mov
ljmp
fwait
mov
popa
xchg
rcl
scas
lcall
stos
mov
adc
pushf
dec
mov
out
call
cli
outsb
mov
xchg
sbb
jnp
add
iret
ret
push
and
xchg
adcl
jge
sub
xchg
int
xor
add
lods
cmp
ret
mov
adc
icebp
jg
dec
movsl
pop
arpl
inc
idiv
in
add
add
fdiv
push
rcr
and
shll
adc
dec
popf
sarl
xor
sub
push
jg
call
mov
sarb
cmpsl
lods
inc
push
inc
not
push
push
hlt
repnz
xchg
bound
pop
mov
add
cmc
xorb
in
lea
ss
mov
pop
push
mov
fwait
mov
addr16
xchg
arpl
cmp
jle
xchg
jbe
fstps
mov
mov
clc
addl
cmp
int
iret
xor
adc
pop
push
cmpsb
adc
insl
test
or
mov
push
xor
mov
xor
pop
cmp
ret
test
aad
push
sub
push
add
dec
push
xchg
fldt
xchg
xchg
push
xor
dec
cltd
xlat
fstps
daa
or
push
mov
jbe
test
cmp
addr16
mov
jnp
scas
dec
lahf
add
movsb
pop
dec
add
in
testl
test
popf
bound
push
push
lock
jbe
je
jne
jl
daa
mov
add
xchg
jns
sahf
push
rcrb
add
lcall
aaa
jp
aas
aas
lcall
je
lods
add
xor
fstpl
ljmp
jle
scas
enter
sub
xor
fs
sti
push
mov
and
std
call
call
int3
fdivrl
bound
dec
ljmp
stos
sbb
ja
add
addr16
iret
mov
int
or
jae
mov
ja
fidivl
dec
cmp
xor
pop
jb
bound
push
jl
mov
pop
fisttps
mov
fs
pop
in
mov
mov
rclb
mov
jae
mov
shl
add
or
hlt
jns
fs
push
cmp
lahf
xor
orl
inc
imul
fs
cli
mov
push
ja
std
movsb
das
push
inc
cltd
cmp
sbb
dec
pop
fsts
stc
or
cld
cmp
fimuls
cmp
and
out
dec
fcomi
repz
push
jmp
test
dec
inc
cmp
jmp
outsl
es
inc
mov
psrld
int3
addr16
sahf
pop
test
add
mov
aas
lret
enter
mov
out
fadd
imull
das
jns
push
mov
sbb
pop
iret
mov
mov
call
fdiv
rcrl
xlat
push
stos
nop
mov
addr16
mov
jmp
cs
sbb
and
out
aas
dec
ss
nop
or
sbb
pop
lock
roll
xchg
xor
push
sbb
lret
xor
cmpl
jb
adc
lahf
mov
xor
in
movsb
ss
sub
andb
aas
addb
cmp
int
out
es
jnp
jns
sub
xor
cld
js
push
scas
xchg
in
adc
sbb
sub
ret
push
inc
jge
data16
aam
shr
jg
and
and
cld
fs
cmp
or
sahf
pop
xor
mov
push
pop
mull
cmc
shll
aaa
mov
inc
mov
sub
jecxz
lcall
ja
out
jecxz
mov
ljmp
mov
sahf
xor
mov
lret
adc
push
pop
cmp
test
and
pusha
add
sti
mov
push
xchg
mov
and
xchg
mov
outsb
and
lahf
lret
add
xor
test
repnz
dec
and
movsb
dec
icebp
repz
outsl
dec
inc
stc
mov
mov
mov
loopne
inc
lea
loope
push
add
js
sub
aaa
xchg
or
jmp
cmp
je
xchg
in
dec
adc
lock
add
fstpl
lea
lods
xchg
mov
jg
cmc
pop
shlb
fldt
adc
jb
add
xor
or
cmp
loope
push
aaa
jg
mov
nop
and
mov
daa
inc
inc
pusha
pop
sbb
lret
dec
mov
mov
adc
or
cld
pop
dec
jg
mov
mov
in
push
popf
flds
int3
dec
fistpl
dec
cmpsb
pop
adc
fadds
jns
push
ljmp
dec
and
inc
xorb
mov
bound
xchg
mov
inc
and
mov
out
jns
je
call
js
push
call
in
lds
adc
xor
sub
test
add
push
inc
fnsave
push
in
add
dec
mov
insl
adcl
in
lea
nopl
adc
push
or
dec
ljmp
inc
ss
cmp
gs
adc
mov
out
or
test
leave
xor
adc
mov
cmp
or
cwtl
and
clc
sbb
and
inc
in
shlb
int3
js
pop
xor
in
xor
fsubl
ja
pop
adc
bnd
mov
ret
dec
enter
cli
jg
cli
mov
out
xchg
sub
shrb
loopne
mov
xor
lcall
adc
jmp
push
clc
data16
adc
mov
cmp
mov
mov
dec
sbb
sahf
into
das
jns
mov
xchg
cs
mov
jne
icebp
lahf
in
inc
neg
pop
pop
pushf
cmc
mov
sti
push
stos
fisttps
jns
lahf
cmpsl
xor
and
adc
sti
movsl
mov
mov
add
push
out
sub
dec
out
pop
out
pop
jo
cwtl
js
or
shl
into
jns
test
sbb
sarl
andb
loop
mov
data16
and
push
inc
repnz
sbb
outsl
lret
lods
jmp
dec
test
xlat
sbb
push
sub
or
dec
jo
adc
fistpl
xchg
arpl
inc
sbb
pop
adc
push
or
sbb
test
enter
push
push
ds
insl
mov
stos
inc
xor
repz
cmp
test
dec
xor
pop
lods
mov
outsl
inc
mov
adc
mov
mov
neg
insl
sbb
pop
arpl
mov
mov
pusha
dec
clc
jne
jle
jb
jnp
mov
pop
addl
mov
xchg
aas
nop
and
dec
and
push
xchg
xor
jae
cwtl
lcall
lcall
pop
outsl
leave
shrb
hlt
jns
das
inc
jmp
into
outsb
dec
jle
mov
mov
mov
xchg
pop
pop
call
dec
dec
mov
push
cmp
sbb
mov
jnp
mov
mov
cs
xorb
and
push
cmp
fisttpll
cld
pop
inc
jns
adc
add
jg
sbbl
pop
out
jnp
je
mov
or
jno
filds
xchg
lret
and
stc
cli
lea
dec
jno
mov
leave
mov
bound
dec
sub
xlat
testl
stos
sbb
jne
loopne
xor
loope
inc
xchg
cmpsl
or
test
sbb
ss
mov
xchg
repnz
loope
mov
xchg
or
call
lods
imulb
mov
shrl
aaa
add
jae
leave
pop
divl
imul
aas
cltd
repz
in
loopne
mov
cli
out
dec
scas
fwait
push
pushl
or
bound
pop
out
and
push
xor
dec
icebp
dec
incb
adc
clc
dec
pop
outsl
push
jne
ljmp
add
jbe
push
addl
add
inc
lcall
lea
aas
mov
mov
outsb
push
addl
push
mov
and
addr16
leave
lret
xchg
cmpsl
mov
iret
jl
pop
lret
cs
xchg
adc
jb
cmp
xchg
aaa
cmp
or
out
stos
push
cmpb
cmpsl
orl
lods
cli
pusha
mov
in
jno
add
js
sub
add
out
dec
test
fs
pushf
xchg
subb
xchg
sbb
xchg
mov
and
leave
jecxz
insl
push
mov
jg
xor
in
out
dec
cmc
std
inc
cmc
mov
fadds
rcr
pop
jg
test
xor
sbb
insl
arpl
ret
adc
std
cmc
lahf
jge
xchg
add
mov
xor
and
sub
add
fsts
ss
inc
rorb
aam
insb
ds
or
popf
push
gs
and
mov
test
out
inc
jo
cmp
lahf
pop
xor
nop
push
mov
lret
cmpsl
in
in
mov
cmp
out
or
movsl
sub
jns
lret
mov
cmpsl
mov
call
nop
fmul
fsubrs
cmp
lock
jl
in
shl
add
sub
jecxz
pop
gs
nop
loop
gs
out
test
xor
or
or
popa
xchg
ljmp
iret
je
mov
hlt
repz
fstpl
repnz
add
fdiv
mov
jno
movsl
cmp
jne
imul
xlat
fidivs
iret
mov
repz
push
sub
popf
jae
into
pop
sbb
aam
insl
push
outsl
subl
pop
sub
push
ja
xchg
out
repz
dec
and
popf
sbb
cwtl
sub
insb
bnd
pop
dec
int3
out
push
out
dec
lods
push
movq
dec
out
insl
cld
and
or
loop
mov
js
int
cltd
xchg
arpl
push
stos
xchg
jmp
xchg
mov
stc
cltd
inc
jns
jle
pop
dec
mov
in
sub
xchg
cld
fistpll
out
clc
and
add
pop
cld
adc
mov
je
lods
or
lods
call
ret
hlt
inc
sub
das
pop
jle
push
push
loopne
ds
xchg
stos
shlb
repz
stos
add
lahf
jnp
push
dec
je
xchg
xchg
cmp
mov
sbb
negl
xlat
icebp
test
mov
test
daa
fistpl
lret
imul
jecxz
xor
add
and
nop
rol
mov
push
xchg
and
push
ljmp
es
je
jbe
and
jmp
dec
jg
push
icebp
roll
js
mov
icebp
rolw
mov
popf
mov
cli
stos
add
out
adc
cmpsb
aad
cltd
repz
pop
inc
les
out
mov
push
fs
icebp
imul
aam
mov
mov
sub
repz
outsl
loope
into
fiaddl
int3
sbb
jle
push
jo
inc
rcr
cmp
fadd
imul
mov
mov
lret
lods
cld
add
dec
jmp
jmp
push
mov
dec
xchg
pop
rorb
outsl
stos
xchg
testl
mov
xchg
mov
mov
retw
pop
lea
test
and
inc
cmp
or
pop
rcrl
nop
aam
int3
loopne
loopne
test
in
dec
xlat
dec
ret
mov
cmp
dec
xor
insl
pop
arpl
arpl
cltd
movsb
dec
loopne
shrb
pusha
shlb
test
cld
mov
sbb
or
and
mov
iret
push
in
leave
testb
xchg
sub
ret
ljmp
lcall
mov
adc
add
imul
jae
jns
sub
repz
pop
mov
sbb
push
adc
loop
add
add
dec
push
fistl
idiv
lahf
mov
sub
push
pop
push
rclb
mov
loop
outsb
test
les
int3
xor
sti
test
adc
adc
adc
mov
call
mov
xchg
add
int
enter
inc
mov
adc
adc
int3
adc
stos
dec
xrelease
pop
in
lea
xor
call
bound
sbb
pop
adc
inc
inc
mov
test
in
lods
cmc
adc
lcall
xchg
loop
data16
and
cmpb
arpl
dec
ror
xor
push
adc
scas
add
pop
and
cs
jge
sbb
das
arpl
inc
leave
push
orl
adc
negb
cmp
inc
fisubs
xlat
ret
cmp
out
pushf
inc
inc
loope
add
pop
lret
in
mov
or
outsb
jb
inc
pusha
add
fucomi
fsubl
cmp
clc
cltd
fdivrl
pop
subl
mov
rcrl
pop
stos
outsl
mov
adc
outsl
outsl
arpl
xchg
imul
pusha
lea
in
xor
add
call
jmp
pop
xchg
repz
lods
std
call
sub
xor
ljmp
and
sbb
in
push
int3
ja
pushl
mov
jo
adc
mov
add
mov
popl
repz
adc
rol
add
sbb
mov
leave
mov
fnsave
das
dec
ljmp
and
jae
lret
pop
stos
push
lcall
add
adc
cld
cmp
ret
arpl
in
js
out
cs
push
stc
in
stc
cmp
cld
inc
fwait
aaa
nop
pop
in
lret
sarb
imul
mov
ret
lea
gs
cs
cmp
icebp
or
mov
push
xor
int3
scas
repnz
xchg
xchg
jecxz
mov
cmp
shll
movsb
notl
jecxz
fsts
xchg
test
scas
sub
aad
add
xlat
sbb
and
jo
dec
enter
jmp
jnp
inc
test
pop
and
sahf
lods
ljmp
mov
or
jge
xor
shll
aam
test
xor
mov
movsl
ds
push
shlb
dec
xor
pop
push
push
add
pop
cmp
add
adc
lcall
imul
scas
stc
adc
mov
adc
in
pop
adc
out
aas
cli
pop
xchg
inc
pop
ljmp
sub
cltd
push
cmp
jnp
fadd
iret
pushf
mov
pop
mov
inc
lret
dec
pop
mov
cmpb
inc
mov
shrb
add
and
sub
xor
gs
aad
ja
inc
je
pop
or
aam
xchg
aam
mov
mov
add
out
pushf
je
into
scas
insl
out
adc
dec
mov
add
dec
aaa
loop
cmp
mov
cld
rol
xor
mov
lods
push
lds
push
or
jl
ss
fistpll
aam
xlat
js
sub
xlat
and
incw
aaa
mov
rcll
sub
add
pop
leave
jnp,pt
andb
imul
mov
pop
cmpsb
lock
pushf
je
cltd
xchg
adc
xchg
lret
outsb
fwait
mov
lods
xchg
inc
icebp
sub
fldcw
jecxz
inc
lret
outsb
or
hlt
cmp
ljmp
jmp
arpl
cld
and
sahf
mov
mov
pop
push
inc
leave
paddsb
aad
int3
in
and
push
out
mull
dec
or
xchg
jo
fwait
pushl
ficompl
mov
lds
btr
add
mov
enter
add
insl
or
jo
or
sbb
ret
and
fmul
sbb
fs
into
mov
int3
mov
jae
sbb
sbb
inc
je
adc
push
fdivr
mov
jnp
xchg
shl
cli
inc
stc
sub
add
insl
or
add
out
outsb
sub
data16
or
pop
shrl
lods
xorb
dec
mov
or
test
dec
imul
test
fisttps
pop
xchg
cmpsl
rcrl
cmpb
fnstenv
push
jp
xchg
cltd
aaa
inc
fsubs
cld
setge
lods
and
lret
insl
roll
add
ret
les
inc
sbb
dec
mov
clc
push
aaa
xchg
pop
adc
out
lds
mov
sub
mov
jns
adc
add
mov
push
jg
mov
xchg
pop
adc
es
jmp
push
mov
cvtpi2ps
mov
adc
jl
sub
xchg
sub
insl
idivl
sar
and
js
dec
add
jbe
inc
andb
mov
loop
test
mov
insb
dec
add
adc
sbb
inc
jae
pop
fsts
stos
dec
push
xlat
or
jne
inc
inc
pusha
pop
mov
cmp
xchg
lods
dec
jne
std
icebp
rcrb
in
sahf
std
jge
jo
outsb
ror
xchg
xchg
mov
aaa
push
and
cmp
xchg
or
inc
or
movsb
ljmp
inc
add
jecxz
push
adc
fidivl
lods
xchg
push
mov
icebp
push
jnp
and
xchg
cltd
dec
es
or
jae
imul
fisubs
jle
add
inc
sbb
cmp
pop
jmp
sub
push
sbb
inc
jo
movsl
ret
sbb
in
popa
pop
xor
sar
mov
inc
adc
je
cli
sub
mov
push
jne
jne
mov
mov
pop
sbb
pop
pop
loopne
int
xchg
sub
movsb
mov
test
fldenv
mov
in
cwtl
in
in
pop
fildll
repz
rcll
movsb
fists
inc
lea
mov
out
xorb
dec
mov
jle
push
add
test
pop
xor
mov
or
xchg
jbe
xor
xor
jns
dec
fldenv
lods
inc
jp
and
lret
ja
inc
cmp
push
rcrb
ret
loop
cmp
inc
mov
outsb
test
dec
xor
and
xchg
xor
push
add
xchg
xchg
sbb
inc
insb
scas
rcrl
mov
sub
push
movsb
cmp
and
dec
loopne
ds
repz
pop
addr16
push
xor
idiv
dec
mov
push
mov
xchg
es
rcll
dec
inc
or
jnp
dec
adc
lcall
in
sub
andl
stos
leave
stos
mov
push
mov
int3
arpl
dec
cld
pop
out
cwtl
adc
xor
iret
dec
pusha
mov
js
mov
ja
adcl
leave
jb
cmpsb
nop
in
add
dec
jge
dec
shll
cmp
pop
ret
pushf
lods
clc
fucomp
ss
xchg
inc
mov
cmpl
adc
mov
adc
popf
cmp
rolb
rol
xchg
inc
and
aas
inc
test
in
xor
loopne
cmpsb
mov
iret
or
lods
or
push
sub
int
js
movsb
int3
call
sbb
aad
lea
xor
std
mov
mov
aam
jo
push
push
in
push
out
subl
and
mov
bound
adc
and
add
scas
inc
sub
in
mov
sbb
sahf
xchg
mov
dec
pop
lea
ljmp
rolb
jecxz
lcall
insl
jge
add
ss
xchg
mov
sahf
push
mov
sarb
movsb
rcll
mov
mov
or
jmp
lahf
rorb
in
pop
sbb
cmpsl
fdivr
fldenv
lods
or
loopne
stos
lret
shll
and
add
loop
mov
jno
push
cltd
sbb
es
dec
push
mov
stos
int
jl
pop
pop
xor
inc
ljmp
push
add
stos
cmpsb
and
adc
inc
stc
fcoms
scas
add
cmpb
mov
lods
ljmp
cmp
sbb
ret
xor
xor
mov
test
jge
fisubrl
icebp
fs
jmp
js
test
std
shrb
dec
ja
dec
and
fmull
rcrb
aas
mov
pushf
mov
leave
lcall
into
pusha
in
dec
hlt
fists
mov
cmp
and
push
clc
push
js
shl
sub
xchg
mov
loopne
aas
test
sub
arpl
pop
or
pop
ja
mov
push
cmp
jle
aaa
push
andb
lahf
cmp
mov
xor
xchg
pop
and
cs
sub
incl
mov
call
add
adc
mov
jge
fstpl
jne
test
aas
leave
popf
cltd
andnps
cmp
or
addr16
lods
pop
adc
cmpsb
fstpt
adc
fcmovbe
jge
arpl
cmpb
pop
aas
xchg
sbb
pop
imulb
fsub
test
pminsw
cmpsl
lret
mov
idivb
fidivrl
push
cld
jno
sub
push
sbb
pop
mov
arpl
fisttpll
lcall
test
xlat
imul
hlt
sub
cmp
push
add
hlt
mov
rcrl
adc
mov
cmc
rorl
sbb
out
mul
testb
pop
or
and
inc
xchg
lret
rol
xchg
cmp
sbb
loop
loope
jnp
lea
mov
js
gs
mov
jmp
daa
rcl
mov
repz
lods
mulb
shll
jae
leave
mov
mov
cmc
fwait
mov
leave
jp
or
add
mulb
sbb
jge
xor
cmpsb
fldcw
imul
mov
int
cmp
pop
add
pop
mov
shr
in
dec
pop
lods
popf
in
repz
add
stos
push
lods
in
les
pop
xchg
cmp
xlat
cmp
xor
mov
jp
push
mov
lods
fcoml
hlt
addr16
dec
xor
and
mov
addr16
push
incb
add
xchg
sbb
shrl
add
fstpl
mov
lcall
mov
sarb
push
loopne
push
scas
hlt
mov
iret
sbb
gs
shll
push
adc
add
fimuls
mov
pushf
jmp
add
ljmp
in
insb
test
cmpsl
mov
lock
mov
mov
cli
mov
hlt
int
and
xor
add
and
push
or
jl
mov
adc
add
adc
repnz
or
jecxz
pop
or
aaa
xchg
push
mov
int
pop
dec
jno
xchg
xchg
xchg
mov
jbe
inc
notl
std
mov
les
sbb
mov
cmp
mov
out
jmp
insl
icebp
inc
sar
test
xchg
inc
mov
shrl
and
push
mov
mov
inc
push
lods
gs
push
pusha
hlt
test
sbb
sbbl
cmpsb
xchg
in
mov
pusha
nop
repnz
leave
mov
lods
mov
aad
shr
mov
jne
cmpsb
add
arpl
mov
into
insl
into
add
or
pushf
mov
xor
inc
sbb
or
jb
cmc
divb
mov
mov
fdivr
ljmp
iret
imul
sahf
xchg
data16
jmp
adc
mov
sbb
and
cmpsb
lods
inc
negl
sarl
leave
stos
les
inc
jo
cmp
sub
ljmp
rcr
mov
or
push
adc
pop
sahf
jp
int
adc
sbb
inc
je
and
push
inc
xchg
add
or
jne
or
dec
loop
imul
mov
dec
xchg
movsb
add
lret
pushf
pop
jbe
inc
fsts
inc
inc
gs
adc
xor
jb
add
dec
mov
insb
pushf
popf
cli
ljmp
sbb
fidivrl
ret
les
xor
aam
dec
cmc
sub
sbb
push
inc
push
mov
mov
mov
lock
xlat
pop
adc
insl
adc
xcrypt-cbc
cmpsl
adc
push
jb
xchg
or
jo
inc
clc
dec
ret
pop
mull
mov
dec
push
push
les
ss
js
or
leave
xchg
and
jno
imul
jl
add
sbb
jae
ret
mov
mov
hlt
cmp
cmp
popf
jne
pusha
or
in
mov
icebp
stos
outsb
sbb
in
inc
popf
or
clc
mov
pop
dec
or
sub
pop
mov
movhps
xlat
iret
mov
dec
adc
and
xchg
stos
inc
stos
sub
jns
mov
mov
int
pushf
ds
pop
inc
pop
pop
add
aad
rclb
insb
pop
je
nop
je
fmulp
pop
xor
push
cmp
xlat
xchg
fisubrs
lcall
stos
sti
mov
xchg
in
out
imul
fistpll
fstps
and
iret
stos
pop
and
sahf
in
ret
imul
cmc
sbb
cld
xlat
mov
add
push
jbe
dec
cmc
jecxz
lcall
push
dec
idivb
and
push
pop
pop
popf
and
dec
add
ljmp
xor
addb
pop
sub
cmc
jmp
jmp
leave
sub
scas
or
fsubs
xchg
push
mov
enter
mov
mov
divb
stos
jns
push
cmp
packssdw
sbb
int3
daa
pushf
xor
psrld
push
and
cld
sub
fs
lret
inc
cmp
cvtps2pi
clc
lock
jg
push
rcrl
adc
cmpsb
lds
movsb
inc
scas
mov
jle
push
sbb
ret
jl
mov
dec
xchg
xchg
mov
jp
mov
mov
cmpb
cld
ljmp
inc
ja
mov
leave
lcall
push
cwtl
pop
stc
push
jb
cltd
lahf
hlt
cmp
jl
pop
or
jp
testl
daa
jmp
mov
ficoml
jne
pop
and
sbb
xchg
out
sarb
negb
pop
xor
out
ffree
fiadds
ret
in
lds
dec
pushf
mov
rclb
push
inc
je
jne
push
push
lock
sbb
lods
cwtl
push
iret
call
jle
cltd
movsl
mov
gs
inc
sarb
fyl2x
cmp
push
mov
and
bound
adc
lahf
mov
call
and
popf
mov
enter
add
mov
or
dec
pop
mov
lock
cmp
xchg
dec
cmp
or
jmp
cli
fldl
push
ja
xchg
bound
icebp
sbbl
xchg
push
aam
daa
add
fld
out
aas
ds
and
push
lea
sub
mov
lea
inc
jo
xor
or
repz
jge
bound
fldl
dec
lock
push
jne
int3
mov
movsl
int3
xchg
lcall
imul
pop
dec
add
stos
push
repnz
aam
repz
xchg
push
and
clc
das
cmc
inc
cld
stos
gs
ljmp
mov
inc
xchg
sbb
out
scas
dec
lea
mov
mov
jns
jmp
es
stos
test
xchg
pop
and
arpl
mov
bound
and
push
iret
stos
mov
pmuludq
mov
sbb
test
xchg
jg
adc
jae
in
xchg
lods
mov
loopne
out
cs
push
testb
lock
mov
sub
hlt
jo
outsl
cmp
xor
xlat
jp
mov
sub
mov
mov
cmpsb
cmpsl
shl
mov
lret
jle
and
mov
stc
scas
xlat
lock
aaa
es
iret
out
daa
mov
push
rol
xor
dec
aad
test
and
mov
arpl
mov
in
sub
hlt
into
xor
aad
mov
fisttps
and
rcl
cmp
pop
in
subb
xor
movsb
icebp
jl
sub
mov
imul
lret
je
fwait
and
jle
lcall
hlt
dec
repz
inc
dec
add
int3
cld
pop
mov
add
push
jne
loop
gs
mov
dec
ss
xor
std
mov
jmp
push
adc
dec
out
mov
add
cli
out
out
icebp
jne
add
dec
inc
xor
orb
push
pop
lret
cmpsl
cmp
adc
in
sbb
inc
mov
mov
aaa
push
bound
lea
cmp
or
lret
pop
in
dec
inc
cmp
ss
add
lods
push
inc
shll
pop
mov
pop
pop
or
out
push
sub
leave
mov
testb
inc
int3
jb
addl
imul
cmpl
adc
sbb
out
xor
outsl
mov
lret
and
or
ja
and
cmp
dec
inc
add
cmpsb
pop
cmpsb
cmp
shr
adc
xlat
mov
push
popa
pusha
push
dec
and
in
negw
xor
call
mov
push
or
dec
ds
sbb
test
inc
fistpl
call
jmp
loope
sub
daa
mov
rclb
loopne
xchg
push
push
gs
lahf
sbbl
and
dec
jp
imul
outsb
pop
mov
icebp
call
xor
fistps
out
or
stos
xchg
cmp
mov
inc
dec
mov
or
aaa
xchg
movsb
call
xchg
fnstenv
sub
xchg
mov
aaa
sbb
pop
iret
xchg
leave
rol
out
sar
push
push
lcall
cmp
bound
jmp
shlb
sbb
nop
jb
dec
out
sbb
sub
imul
ret
cmp
shl
mov
in
cmp
mov
or
xchg
sarb
sbb
mov
jbe
or
insl
std
sub
add
inc
push
or
xor
addb
adc
and
test
fsubr
clc
xor
fsubrp
out
pop
add
es
add
sbb
ret
nop
jb
mov
into
inc
pop
xchg
ret
or
subl
dec
inc
cmc
add
pop
cmp
mov
ds
fs
fstl
sbb
xor
lahf
xchg
leave
cs
in
fwait
shlb
jnp
out
xor
xchg
mov
jnp
xor
out
add
push
pop
cmp
testl
jns
mov
mov
xchg
mov
shlb
xor
inc
int
add
adc
adc
push
je
fsts
fimuls
cmp
adcb
jecxz
call
icebp
loop
mov
and
xor
scas
mov
push
hlt
fistpll
inc
push
filds
xor
daa
addb
int3
mov
xchg
xchg
cmp
into
fimull
loop
test
pop
mov
xor
loopne,pn
imul
xor
fnstenv
sti
out
cmp
enter
subl
les
cmpsl
repz
out
rclb
dec
into
incl
pop
addl
mov
pusha
nop
pop
dec
icebp
sbb
sbbl
and
adc
scas
mov
mov
and
fcmovnbe
pop
cmp
fldl
jle
jne
fldcw
jno
es
decb
fsubrl
daa
pop
jle,pn
pop
pop
dec
movsb
sbb
movsl
stos
xchg
repz
mov
shl
stc
jns
and
clc
inc
aam
fidivs
pusha
jl
imul
mov
enter
adc
sbb
add
xchg
mov
cmpb
dec
inc
idivb
xchg
repnz
add
addb
sbb
ret
dec
mov
cmpsl
cmpsl
pop
mov
inc
mov
jmp
push
sbb
ljmp
fmuls
jp
xchg
sub
gs
dec
lret
lret
inc
adc
xor
test
jmp
cli
pop
sub
cmc
sarl
loopne
push
fwait
jns
sub
adcl
jmp
xchg
fstp
rcr
mov
inc
inc
mov
cwtl
mov
outsb
iret
push
mov
sbb
sub
push
pop
push
push
cmc
loope
jge
add
andb
cmp
cmp
dec
pop
pop
jo
jmp
cs
cltd
arpl
loop
in
fisubrs
sub
je
or
add
int
xor
clc
push
ret
add
iret
dec
scas
es
xchg
sbb
ds
cwtl
mov
pop
dec
int
xlat
out
xchg
and
pushw
fistpll
add
mov
std
add
fwait
cwtl
sub
insb
and
sbb
push
imul
sub
push
pop
mov
xor
lret
ja
ljmp
push
cmp
idivb
ja
das
adc
cld
adc
movsb
fcmovnu
add
mov
jb
aam
fistl
pop
loope
mov
adc
dec
sbb
dec
mov
jle
repnz
cmp
cmp
and
rcrl
les
xchg
out
xchg
mov
aas
sbb
arpl
test
dec
orl
mov
cwtl
fwait
xchg
xchg
jl
lcall
pop
mov
lock
mov
das
int
xchg
into
gs
mov
cwtl
rcl
scas
cmp
pop
scas
adc
xor
dec
fidivl
daa
aam
mov
push
aad
gs
dec
xchg
mov
push
mov
push
and
adc
rcrb
sbb
jle
nop
into
scas
mov
and
dec
mov
ret
rcrl
mov
dec
add
or
popf
orl
outsb
mov
popf
jmp
jecxz
pop
jecxz
mov
aaa
roll
sub
add
xchg
xor
cmp
sbb
in
mov
mov
gs
clc
repz
lcall
jecxz
push
arpl
sar
dec
mov
dec
ss
fs
cmpsl
fists
in
cmpsb
mov
insl
dec
mov
addl
mov
movsb
jg
aad
pop
push
outsl
pop
sbb
or
lods
adc
pop
ja
insl
fists
add
pop
xchg
inc
rcrl
jo
data16
push
adc
xchg
in
jge
fcomps
adc
cmp
dec
mov
shll
lock
iret
xchg
hlt
push
daa
jg
pop
inc
mov
cli
fdivrl
inc
iret
pop
bound
mov
loop
dec
or
xchg
arpl
in
push
xor
loopne
and
ljmp
or
push
sub
add
dec
push
pop
cmp
orb
popf
inc
push
loope
inc
call
inc
mov
not
or
mov
mov
in
mov
sbb
cld
jnp
xbegin
shrb
mov
repz
mov
outsl
scas
sbb
repz
and
xchg
decl
xorb
cmpsb
xchg
adc
sub
xchg
flds
sbb
sbb
scas
fisttpll
xchg
in
test
push
sub
mov
cmpb
stos
loop
pop
movb
les
mov
pop
inc
sbb
lods
mov
fmull
mov
pop
ja
dec
popf
lcall
fs
fidivrs
mov
imul
movsl
jl
sbb
or
jns
and
adc
in
call
stos
mov
xlat
fwait
mov
mov
lods
xlat
dec
lock
mov
mov
test
sub
inc
xchg
add
js
negl
setno
mov
xor
push
out
into
sahf
cmp
iret
adcb
scas
inc
dec
xchg
adc
pop
and
xchg
movsb
push
push
mov
int3
in
cltd
mov
push
mov
dec
pop
mov
fcompl
push
xchg
xor
ret
call
jle
stc
xlat
gs
xor
aad
out
jmp
pop
scas
dec
pop
mov
add
dec
insb
insb
gs
bound
or
shl
or
stc
mov
or
sub
mov
xchg
sub
sbb
das
scas
pop
mov
movl
lock
inc
mov
lcall
xorl
pop
inc
and
in
jecxz
cmp
and
das
inc
clc
ja
push
inc
push
iret
pop
jecxz
lods
push
mov
jmp
into
and
or
xlat
lcall
outsl
cmpsb
lods
mov
and
mov
add
xchg
arpl
mov
hlt
and
popa
xor
push
and
movsb
bnd
sbb
lret
fidivrl
dec
les
lods
testb
push
shlb
lret
add
push
adc
push
enter
or
inc
sbb
xchg
fisubrs
cmp
arpl
aad
ficompl
daa
int3
jle
insb
icebp
lahf
ja
int
jb
adc
stc
fmull
pcmpeqd
outsb
das
je
js
addl
sub
lahf
es
jle,pn
lods
push
cltd
movsb
clc
mov
sbb
jecxz
outsb
and
mov
ja
adc
sarl
mov
stos
jle
les
in
sbbb
or
aad
movsl
lret
mov
or
aam
movsb
jnp
in
mov
lret
xor
xor
xchg
in
sahf
mov
iret
std
aad
cmp
testb
popf
inc
mov
push
push
inc
mov
pop
mov
loope
sub
push
repz
jle
pop
aas
scas
xchg
mov
or
inc
dec
pop
or
icebp
outsl
movsl
mov
out
mov
xor
test
scas
sub
cmp
push
movsb
xorb
jg
jge
jg
sti
or
sbb
jp
test
mov
test
es
add
xchg
adc
push
lods
push
lret
mov
xchg
xchg
push
and
xlat
gs
xor
sbb
arpl
mov
sub
repnz
xchg
add
sub
and
mov
mull
aad
out
in
mov
jnp
and
enter
jle
and
enter
rclb
jb
sub
repz
add
fldt
cmpsl
push
lahf
das
xchg
or
sub
out
test
and
nop
xchg
cmp
aam
add
jle
inc
mov
pop
and
test
xchg
sub
addb
js
stc
inc
mov
fucom
xor
pop
mov
dec
push
add
cli
push
dec
sub
jg
jg
test
sbb
lret
cs
iret
mov
popa
int3
adc
push
dec
in
shlb
outsl
push
gs
ljmp
xor
mov
fisubl
test
sbb
out
insl
mov
enter
flds
pop
xor
ljmp
mov
clc
lea
movsb
inc
out
loop
std
in
and
dec
loope
dec
push
lock
add
jle
dec
cmp
int
cmp
adc
xchg
jg
stos
lock
jnp
add
or
mov
jecxz
and
cmp
fisttpl
les
mov
std
loope
push
jbe
loop
xchg
xchg
jmp
fmul
jne
imull
dec
nop
lea
adc
cmp
fisttpl
cmp
pop
mov
inc
mov
leave
mov
aam
aaa
xor
shlb
dec
lds
ja
cwtl
fcmovu
call
push
xchg
pop
pop
ret
mov
imulb
adc
daa
insb
sbb
mov
popa
mov
sub
cli
jb
xchg
dec
or
pop
sub
das
xchg
mov
out
dec
fdivrs
clc
test
popa
or
push
int3
orl
sbb
test
cld
mov
mov
or
aam
inc
inc
mov
mov
push
inc
int3
pop
rclb
jle
in
sbb
dec
mov
lret
push
mov
leave
aad
sub
cmp
or
hlt
stc
ja
popa
sbb
cli
and
pop
dec
mov
int
mov
cltd
or
pop
sbb
push
shlb
arpl
jmp
lret
jae
out
cmpsl
sbb
inc
xchg
mov
cmp
mov
ret
sub
adc
jg
arpl
pop
es
xchg
ret
pop
movsb
mov
loope
shl
mov
add
subb
gs
sbb
movsb
lcall
repnz
popa
add
sub
cmp
push
lods
push
dec
xchg
and
pop
xor
dec
js
lods
ja
sub
lock
inc
or
mov
aam
pop
icebp
rcrb
js
dec
rcrb
pop
cmc
add
and
adc
sbb
mov
sub
sti
addr16
push
sbb
aam
pop
in
stos
cwtl
cmp
xchg
out
iret
ss
lods
sar
adc
stc
and
cmp
cmp
mov
and
pop
push
out
or
pop
lods
jns
repz
mov
lock
ds
nop
rep
adc
xchg
jle
mov
shlb
scas
movsb
pop
bswap
xchg
lret
scas
insb
loope
push
iret
pop
jl
sub
test
mov
xchg
shrb
enter
loope
rcr
in
push
loop
inc
jl
in
ret
loop
xchg
cs
and
jecxz
xchg
scas
loop
idivl
xchg
dec
add
scas
outsl
cmpsl
lods
mov
mov
ret
cmpsb
mov
lods
addr16
les
xchg
imul
mov
mov
pop
xor
push
mov
pop
and
int3
fwait
daa
adc
adc
mov
pop
sbb
loop
xchg
std
xor
jl
cmp
adc
clc
and
sub
xlat
lret
js
sub
fstpt
sysret
push
iret
stos
lods
shl
loope
mov
jmp
mov
jo
sbb
jg
loop
shrl
pop
nop
iret
jb
mov
loop
or
int3
stos
pusha
aas
call
mov
mov
and
fimull
sub
cli
into
jae
jmp
test
fstl
je
ret
push
clc
mov
iret
lret
and
aas
jl
push
pop
xor
adc
push
inc
sarl
inc
jecxz
pop
push
inc
fstp
or
hlt
mov
sahf
ljmp
cs
adc
pop
and
sbb
pop
mov
loop
daa
mov
dec
sbb
mov
and
push
lea
add
adcb
cmp
mulb
xor
and
xchg
cmpsl
in
sbb
push
loopne
repz
dec
add
sbb
dec
dec
fbld
sahf
insl
test
push
pop
ss
or
pop
maskmovq
imull
push
int3
in
cld
pop
movsl
mov
sbb
jno
push
add
gs
sub
mov
mov
xchg
ficomps
movsl
jnp
sbb
fwait
mov
jbe
cwtl
cld
add
cwtl
movsl
jmp
notb
arpl
movsl
xchg
jne
xchg
push
out
mov
sahf
lods
xchg
xor
xchg
or
nop
rcrb
mov
in
arpl
or
fsubs
call
xor
outsl
jbe
loop,pn
mov
adc
push
sbb
jmp
cwtl
push
flds
and
aas
mov
lret
push
das
outsb
leave
dec
enter
push
xchg
sarl
int
bnd
movsb
or
cld
dec
sub
jbe
imul
sbb
dec
out
repz
cmp
clc
xor
movl
icebp
lds
dec
aaa
add
ror
mov
xor
jle
call
or
mov
sti
fsubs
mov
outsb
outsb
jge
lods
or
mov
fistpl
jne
mov
add
out
pushf
jbe
nop
hlt
mov
jp
sbb
out
xchg
sub
rorb
pop
inc
adc
mov
out
std
add
mov
push
cmp
mov
sub
stc
jne
cmp
movsb
mov
adc
push
test
rolb
inc
or
adc
daa
in
pavgb
imul
mov
fs
decb
ficomps
xlat
adc
sbb
ds
xchg
cmc
xor
inc
jbe
jge
lcall
push
sahf
rep
outsl
jle
test
cmp
sub
test
pop
repz
cmp
jp
lods
pushf
mov
test
add
aam
loop
ds
adc
das
mov
mov
mov
xchg
movsb
and
push
push
mov
push
int3
push
daa
rcrl
add
jns
add
leave
mov
xchg
adc
lcall
repz
hlt
and
aas
or
jbe
imul
mov
test
pop
mov
arpl
cmp
scas
add
test
stc
and
mov
pop
pushf
xor
mov
cmp
ljmp
and
or
test
sbb
sbb
sarl
cmc
adc
jg
mov
addr16
push
xchg
pop
in
pusha
repnz
xchg
dec
leave
cmpsb
and
outsl
push
push
ja
mov
adc
insb
out
and
fidivrs
inc
jns
mov
jmp
cmp
icebp
jge
popf
push
enter
daa
mov
mov
aam
sbb
pop
div
call
xor
scas
adc
test
mov
rcl
in
xor
pop
loop
icebp
sbb
inc
pop
mov
mov
pop
jle
jl
dec
jno
pop
pop
ds
scas
aaa
cwtl
mov
je
popf
fwait
inc
mov
movsl
sub
and
xchg
and
lahf
pop
cmc
inc
mov
test
les
lret
pop
cltd
hlt
dec
cmp
mov
mov
test
jp
cmp
and
push
cmp
cld
sub
outsl
lods
hlt
cmp
sub
xchg
addl
stos
int
or
std
mov
mov
dec
xorb
lcall
xor
outsl
sbb
cmp
jno
ss
das
inc
mov
push
cld
inc
arpl
sub
adc
push
mov
test
add
cmc
cmpsl
stos
and
test
notl
jne
and
jb
inc
dec
pop
imul
cmp
mov
and
push
ds
mov
pop
xor
lret
sarl
dec
dec
push
fiadds
jbe
in
mov
jbe
jne
xchg
xorb
repnz
iret
sti
mov
rcrb
add
inc
cmp
loope
mov
test
sub
jno
jmp
xchg
fs
mov
add
pop
or
sbb
pop
popa
jp
mov
mov
dec
add
jge
mov
push
pop
and
and
bound
xor
fimull
rolb
fucomi
fcmovne
cwtl
fildll
cmp
sub
pop
and
sbb
inc
pusha
or
jnp
and
pop
dec
or
bnd
inc
call
pop
and
mov
fs
call
cmc
mov
test
sbb
and
mov
les
leave
and
jecxz
xchg
lcall
ds
inc
fwait
pop
mov
push
and
pop
or
xor
gs
inc
pop
mov
and
xchg
jle
test
fisttpll
aad
ret
sub
cmc
nop
test
adc
es
adc
test
sti
test
ja
std
jae
test
out
push
xchg
test
es
inc
jmp
inc
rorl
inc
das
mov
out
push
int3
pop
lret
nop
ljmp
xor
mov
cmp
xchg
cltd
cmp
dec
xor
push
rcl
mov
fsubrl
push
jge
mov
inc
or
pop
int
outsb
xchg
and
xor
mov
or
fwait
cmp
cli
mov
inc
and
mov
data16
int
mov
dec
ret
fwait
and
push
mov
scas
mov
cmp
push
cmp
pop
dec
decb
jns
cmpsb
iret
nop
pop
les
sub
stc
add
pop
out
int3
lret
mov
cs
add
sbb
mov
cwtl
enter
cmpsb
leave
jo
fcoms
negb
sbb
out
jbe
cmp
es
fnstsw
mov
shlb
out
lret
cwtl
leave
out
outsb
mov
ret
repz
in
out
ss
or
adc
mov
popa
dec
cwtl
outsb
mov
jmp
outsb
call
popa
push
pusha
adc
sub
aam
popf
pop
aas
jp
mov
cmp
fdivrs
ret
movsb
push
pop
mov
cmc
cltd
dec
in
xchg
sub
mov
leave
shl
xor
mov
test
daa
ljmp
xchg
mov
int
fisttpll
add
xlat
mov
dec
xor
hlt
or
ror
or
stc
jle
jge
imul
insl
mov
push
test
cmpsb
mov
xchg
fiaddl
mov
shl
imul
fstpl
jg
sub
notl
pop
xlat
imul
cs
mov
xor
xor
fnstenv
jns
inc
pop
pop
mov
xacquire
stos
imul
cmpsl
out
mov
repz
fsubl
inc
add
push
cmp
xchg
imul
and
ss
mov
pop
stos
sub
adc
sub
or
mov
fsubl
movsl
mov
xor
sub
sahf
jbe
cmp
sub
clc
lds
mov
aam
dec
dec
dec
xchg
xchg
daa
xchg
mov
outsl
inc
inc
push
aad
ja
sub
dec
or
xor
es
pop
jnp
xor
xor
xchg
fadd
and
add
fisubl
xor
inc
add
push
stos
mov
mov
in
cwtl
xlat
sbb
test
jecxz
popf
xor
outsl
clc
dec
test
or
or
mov
xlat
sbbl
fadd
rcl
fistpl
ds
mov
iret
inc
shrb
cmp
sub
fidivl
push
pop
loopne
iret
pop
push
js
jmp
dec
lret
sahf
push
sub
cmp
sbb
xchg
hlt
mov
mov
incl
inc
xchg
rcll
mov
in
enter
jo
mov
insb
pop
lea
insb
rorb
inc
js
das
add
jmp
push
out
ja
ja
mov
mov
addr16
mov
xlat
aam
lahf
and
out
mov
fisubrl
stos
imul
push
out
addr16
enter
jne
dec
ret
push
jle
push
lcall
in
cltd
aad
cmp
in
or
lock
mov
call
in
in
add
inc
jno
inc
push
shll
fmuls
ror
cs
or
mov
out
sub
mov
pusha
xchg
cli
or
push
adc
insl
xchg
xor
in
mov
dec
pop
addr16
ret
pop
inc
scas
push
lods
xchg
mov
sar
gs
test
loop
jmp
sbb
mov
fsubl
jns
and
mov
mov
popa
dec
jp
data16
rsm
add
jmp
js
jg
rcrb
testb
ret
push
test
out
mov
pop
into
in
mov
js
repnz
mov
loop
jb
mov
mov
into
add
ljmp
popf
mov
test
inc
jnp
inc
add
push
cmp
imul
cmp
out
ds
mov
cmp
cmc
scas
ja
push
lods
mov
jp
loop
out
test
lret
loope
mov
mov
sub
sbb
xchg
dec
int3
fsubrp
cmp
sbb
jae
in
mov
loopne,pn
fsub
jmp
scas
loopne
int3
xor
mov
adc
pop
cmc
je
jmp
mov
call
insl
shll
jo
inc
xchg
add
notb
adc
pusha
ss
test
xchg
mov
xchg
lock
jo
xchg
mov
and
lcall
daa
leave
pushf
shll
in
lods
outsl
sbb
adc
or
sti
enter
push
cwtl
add
into
and
push
pop
or
push
cmp
push
test
aaa
dec
pop
ret
loopne
lahf
int3
js
outsb
test
push
cmpsb
push
in
xorb
add
adc
rcll
stc
movsl
sub
test
shll
fsubrs
push
jbe
sub
add
aaa
pop
stc
in
cwtl
lahf
sub
int
fsubs
add
mov
jb
jbe
mov
clc
icebp
outsl
enter
leave
mov
dec
and
xor
test
lcall
cld
ja
or
mov
jns
push
sub
lds
aas
dec
daa
addl
notb
aad
fs
pop
mov
into
icebp
ljmp
stc
stos
rorl
les
push
movsb
out
pusha
enter
inc
mov
xor
pusha
mov
daa
inc
dec
push
mov
mov
repnz
and
pop
lods
mov
outsb
mov
dec
stc
cmpsl
setns
push
jp
rcr
pop
dec
fadds
mov
add
mov
mov
push
add
fstpt
jbe
lods
cmpsl
jae
std
mov
inc
pushl
mov
inc
cmp
aas
lods
jno
mov
push
sub
xchg
loop
dec
mov
dec
cmpsb
dec
setge
imul
aas
pop
jecxz
jge
dec
das
push
jo
pop
dec
lahf
cmpsl
xor
jecxz
jb
mov
push
add
ds
sub
pop
push
jae
jl
dec
repz
pop
xlat
push
js
cmpsb
cmp
in
jae
ljmp
ret
add
outsl
or
rol
mov
loope
sarb
fmull
sub
out
push
inc
or
dec
rcrb
test
mov
xlat
xchg
test
mov
mov
cmc
jmp
and
xchg
sbb
cmp
cmp
adc
jmp
repnz
popa
ja
je
push
addr16
aas
fwait
bound
or
mov
adc
gs
aaa
or
test
push
mov
popa
xchg
jl
mov
mov
jl
mov
xor
jge
decb
inc
icebp
sbb
mov
sbb
shlb
mull
ja
movsl
fcompl
icebp
ja
pop
add
sbb
fxch
xchg
cmp
inc
dec
jb
js
in
dec
scas
sub
aaa
lahf
loope
popf
daa
mov
mov
mov
loopne
enter
jl
jle
pop
fwait
pop
push
into
fsubs
mov
dec
mov
cmp
cmp
xchg
sub
push
adc
and
add
out
dec
xor
mov
adc
mov
rep
sub
stos
iret
cli
enter
shll
sub
mov
lds
mov
adc
and
repnz
out
mov
aaa
mov
orps
out
sbbl
inc
dec
pop
jl
dec
mov
sbb
inc
xchg
add
in
adc
iret
cli
inc
cs
fcmovu
mov
and
mov
xor
dec
cs
sub
mov
int
mov
in
insl
push
std
into
inc
out
in
dec
in
jno
push
outsb
push
cld
push
jae
shll
pop
and
push
lahf
imul
aaa
je
fiadds
mov
lea
sub
pop
sti
jge
pushl
lret
jmp
fists
push
jns
or
mov
xlat
or
and
jb
cmp
sub
inc
cmp
fiaddl
xor
mov
in
adc
cmp
dec
push
or
cmpsb
fs
stos
test
sub
std
jne
inc
mov
and
and
pop
adc
fadds
xor
lds
xchg
pop
inc
das
repz
ret
mov
sub
sub
andl
leave
jns
fistpl
mov
addr16
out
jge
xorl
hlt
adc
push
movsl
stc
jo
cmp
add
xchg
ljmp
data16
pop
sub
sahf
xchg
out
cltd
mov
cmp
idivb
scas
add
cmp
enter
add
cmp
aas
jmp
cld
cltd
sbb
cmp
jecxz
lcall
xor
cld
jno
adc
sub
xchg
nop
enter
sbb
sahf
inc
lods
xchg
leave
push
jbe
pop
mov
mov
adc
daa
xor
mov
cmpsl
pop
idivb
clc
xchg
mov
push
adc
mull
jp
in
jae
sub
jge
das
sti
pusha
and
mov
push
imul
and
addb
mov
adc
lds
pop
pop
mov
dec
sbb
js
adc
ret
jbe
iret
arpl
out
jg
mov
sub
in
pop
jecxz
dec
adcl
into
cmp
je
fimull
faddl
mov
push
sub
mov
cmc
adc
aam
call
mov
das
insl
leave
call
ja
rorl
sti
mov
iret
cli
add
ja
push
xchg
pop
out
cmpsb
fldcw
in
adc
iret
icebp
arpl
scas
test
push
pop
out
dec
test
and
pop
mov
push
out
hlt
aam
and
in
inc
push
lahf
cli
jle
inc
fidivrs
push
iret
mov
into
and
jle
sub
cmpsl
js
jbe
mov
push
lea
cwtl
in
jne
xchg
xor
mov
cli
inc
nop
mov
add
loop
push
xor
js
cmp
mov
sbb
dec
aam
icebp
xor
and
dec
faddl
pop
sbb
in
cmp
sarl
mov
js
mov
jns
push
aaa
jecxz
idiv
sarl
je
lods
dec
pop
repz
mov
mov
add
sub
daa
or
mov
mov
pop
add
sub
pop
sub
outsl
nop
mov
lods
push
push
push
repnz
cmp
adc
mov
fstl
inc
or
int
int
cmp
pop
gs
jb
dec
jbe
and
cltd
cmpsl
cmp
arpl
xor
and
jo
stos
aaa
jb
lcall
pop
arpl
push
fmul
out
popl
shrl
stc
in
jecxz
iret
push
push
pushf
sub
adc
sbb
aad
or
cltd
xchg
repz
xchg
dec
es
push
fldt
dec
add
and
std
push
gs
jae
sbb
pusha
insb
mov
imul
cmp
mov
ret
stc
cmpsb
popa
pushf
ljmp
scas
aaa
cmp
mov
lret
mov
sbb
push
jle
add
mov
shr
or
cwtl
dec
xor
mov
fistps
orb
cmp
into
cmp
cltd
lods
hlt
mov
test
sbb
pop
iret
mov
dec
int
and
cli
cmpsl
jg
sbb
ficoms
add
leave
cmp
ds
aas
jle
inc
and
adc
dec
into
lea
push
and
cltd
sbb
ret
jnp
xchg
dec
faddl
inc
mov
and
inc
pop
and
adc
es
xacquire
movsl
xor
vmptrld
jns
ret
mov
fidivl
mov
jmp
test
stos
nopl
adc
adc
mov
pusha
in
lods
or
push
sbbl
je
cmpsb
xor
gs
inc
mov
fstps
sbb
dec
cmp
movsb
loop
ret
out
and
fsubr
mov
cwtl
addr16
loop
sahf
rorl
mov
sub
ret
rcr
test
mov
loop
les
icebp
and
mov
in
movsl
and
enter
xor
seto
cmp
lret
popa
mov
popf
or
mov
add
push
pop
int
adc
mov
xchg
rcrl
push
scas
shlb
fcompl
jb
mov
cltd
out
nop
lock
imul
inc
xchg
add
ss
jae
lret
cs
sar
mov
scas
movsl
in
mov
outsb
xor
add
repz
jle
iret
vpmacssww
out
daa
in
pop
popf
fs
dec
fdivrp
add
popa
scas
aas
stos
jl
pop
mov
test
adc
insb
test
ds
push
lret
inc
xchg
mov
mov
lods
mov
lcall
xchg
jbe
mov
and
ret
lods
push
movsl
movsl
loope
loop
xchg
mov
in
add
cld
sahf
pop
and
mov
mov
nop
int3
push
int
std
ds
minps
dec
adc
sbb
jno
mov
push
pop
aas
jbe
mov
jge
negb
fadds
jnp
pop
adc
adc
push
mov
and
adc
sbb
daa
pop
test
aas
arpl
mov
sbb
xor
lret
and
xorps
adc
jmp
sub
and
mov
push
test
roll
push
and
xor
cmp
mov
adc
push
adc
pop
pop
in
cmc
movsb
dec
in
inc
mov
int
icebp
bswap
or
xlat
and
jge
or
insb
jmp
rorl
mov
lods
flds
int3
push
addl
jno
cmp
mov
adc
hlt
xchg
fmul
fldcw
or
adc
push
push
leave
or
adc
mov
adc
aad
popf
mov
pop
fistpll
pop
jmp
ss
popf
push
push
jle
hlt
jecxz
or
dec
dec
cld
jnp
idiv
jecxz
xor
test
out
sbb
repz
adc
je
daa
push
xchg
call
test
adc
insb
leave
incb
inc
gs
sub
pop
inc
dec
xor
xlat
and
imul
enter
push
cld
inc
decb
roll
popf
jns
xchg
outsl
scas
sarl
mul
cwtl
inc
out
and
cmp
xchg
xchg
sub
jmp
push
adc
je
filds
hlt
nop
dec
push
lods
mov
stos
mov
iret
push
xchg
mov
jg
cmc
in
push
in
incb
stos
or
cmp
mov
push
jge
lods
fs
sub
out
xlat
jae
cmp
pop
cmp
dec
into
cltd
push
mov
add
ja
cli
xlat
popf
xchg
jnp
xchg
call
sbb
xor
push
les
enter
mov
dec
inc
movsb
add
add
daa
fistpl
aaa
call
sub
ss
jmp
or
sbb
mov
cmp
aaa
subb
outsl
xchg
or
dec
loope
mov
mov
les
aad
sbb
dec
lret
pop
xchg
popw
dec
sbb
pop
push
ret
xchg
sub
cmp
jge
repnz
xchg
push
adc
dec
testw
in
jne
in
mov
and
out
fmulp
mov
pop
int
gs
lahf
mov
sub
test
sub
scas
jg
cmpsl
out
adcl
iret
jns
jl
jbe
pop
sub
dec
pop
rorl
lcall
sbb
ret
pop
cmpsb
cmp
rcl
push
xchg
popa
pop
mov
ja
je
movsb
test
int
sub
fistpl
imul
stc
pop
insb
pop
decb
enter
jno
mov
jg
sub
pop
fldcw
dec
sub
stos
int
imul
add
jns
pop
mov
cwtl
mov
pop
and
repz
addl
sbb
and
test
or
add
and
push
jmp
and
push
jle
fimuls
outsb
mov
xor
das
add
inc
cmpsl
call
out
sbb
mov
cwtl
sbb
jb
pop
inc
ljmp
lock
aam
or
and
adc
cltd
cmp
loop
fbstp
mov
xor
int
jns
dec
dec
out
mov
sbb
sahf
ljmp
or
int
cld
addl
lret
dec
lret
push
subl
xchg
mov
out
aas
aaa
add
add
jg
or
mov
hlt
fstpl
shll
insl
and
jo
push
xchg
mov
out
mov
sbb
inc
pusha
jae
lds
add
dec
xchg
ja
and
and
test
push
jo
repnz
cmp
fdivr
sbb
nop
fcompl
jmp
int
pop
jnp
out
and
insb
add
cmpsb
xchg
or
mov
hlt
roll
mul
push
push
adc
outsb
test
not
inc
mov
dec
jp
push
stos
cltd
and
mov
rcrl
mov
xlat
das
lods
pushf
pop
ficoms
or
jb
daa
enter
add
scas
aas
iret
sti
xor
les
xchg
stos
nop
inc
rclb
jne
mov
jnp
xor
pop
arpl
mov
xchg
mov
dec
pop
pop
int
mov
cmp
adc
dec
adc
fldenv
dec
mov
jae
inc
sbb
pop
aam
and
addr16
mov
xor
mov
jg
bound
and
xor
jae
cli
jecxz
sar
fiaddl
pop
dec
mov
lret
adc
adc
mov
mov
push
cmp
or
sub
jmpw
pop
xchg
adc
sbb
jbe
mov
inc
cs
xchg
cld
cmp
sahf
ljmp
pop
mov
rcr
pxor
adc
mov
mov
hlt
cmp
repz
test
fdivs
movsl
jmp
or
ret
ds
jg
inc
and
out
add
inc
xchg
hlt
push
loop
mov
xchg
std
mov
sbb
popa
inc
jnp
pop
mov
rcrl
icebp
leave
pop
insw
xchg
cmp
mov
pushf
inc
lret
add
lahf
outsl
sbb
push
shlb
pop
mov
rcrb
jle
cmc
imul
imul
jo
lock
in
mov
add
adc
push
sahf
pop
mov
push
sbb
jno
xchg
and
clc
out
rorb
fsubrs
insl
sbb
lret
jle
lock
lds
sbb
es
mov
lock
push
shll
dec
xchg
pop
inc
daa
dec
repz
das
sub
inc
mov
mov
cs
and
push
jmp
add
loop
insl
cmp
and
cmp
jp
push
mov
popa
dec
mov
cmpsl
test
push
add
addl
cmp
mov
aad
nop
xchg
fdivrl
add
lret
in
imul
pop
dec
dec
into
push
pop
test
sbb
cltd
jmp
mov
add
xchg
push
pop
mull
mov
mov
pop
in
inc
jns
aas
test
jne
arpl
xor
inc
imul
xor
fwait
test
aaa
daa
insb
xchg
jns
rcrb
sahf
scas
rorl
nop
dec
cmp
mul
dec
add
adc
or
mov
aaa
add
xor
xor
jo
fistpll
sub
or
cmpsb
cmp
sub
or
sub
stc
fwait
out
mov
mov
inc
or
nop
sub
movsb
lods
pusha
pop
xchg
shr
cmp
cmpsb
dec
idiv
lret
pop
test
mov
and
orl
loope
mov
cwtl
push
aas
push
sete
bound
sti
mov
loope
mov
sub
movlps
daa
xchg
add
inc
cli
push
sbb
clc
mov
outsb
sub
scas
inc
mov
andb
dec
jl
cltd
push
insb
inc
out
into
jg
inc
add
cmp
xlat
cmpsb
xor
and
lret
pop
dec
ja
mov
add
inc
jle
test
movsb
out
test
push
jo
mov
imul
fiaddl
mov
mov
ja
fstl
fadds
push
test
dec
stc
pop
negb
sub
jne
fbld
js
xchg
cmp
mov
std
cwtl
mov
push
stos
and
ss
cmpsb
xchg
decl
cmp
mov
add
loopne
dec
cli
es
pop
or
movsb
aaa
cmp
mov
scas
mov
shl
add
fdecstp
scas
push
fidivrl
outsb
leave
sbb
add
xor
add
and
addr16
stos
push
lods
mov
push
mov
andb
outsb
mov
dec
push
aas
ss
pop
jecxz
add
pop
fs
cmp
outsb
sub
mov
mov
stos
mov
add
pop
aaa
jne
or
dec
and
jge
cmp
jo
cmc
xchg
fistpll
and
into
cwtl
dec
je
leave
lods
mov
ret
stos
call
andl
xchg
scas
add
fsts
jl
jge
push
jge
popf
push
push
inc
jl
inc
xchg
jecxz
mov
es
cmpsb
movsb
and
jns
add
push
xchg
adc
repnz
hlt
add
rol
lahf
pop
xor
mov
pop
or
les
popa
in
and
or
popf
xchg
fldenv
pop
outsl
gs
xchg
xchg
and
adc
shrb
fldt
add
jle
push
or
pop
adc
inc
xlat
js
iret
xor
xchg
inc
mov
imul
mov
push
sbb
mov
xchg
xor
sub
cmp
adc
aad
sbb
incl
lods
test
jl
hlt
add
test
ds
sarb
jae
pop
lock
lds
into
rcll
adc
jle
stc
sar
pop
mov
out
movsb
jo
mov
repz
and
jb
or
mov
adc
mov
fwait
jl
pop
mov
test
je
punpcklwd
movsb
aad
push
fistpll
data16
add
in
repz
sbb
push
cmp
mov
xchg
mov
jmp
inc
outsl
dec
lods
sub
lcall
pushf
stc
cmpsb
jmp
shl
sub
add
cmpb
call
or
insb
das
mov
push
push
rorl
mov
push
mov
outsl
push
sbb
inc
stos
xchg
push
cs
in
jg
or
movsb
dec
hlt
int
xchg
ficompl
pop
cs
test
out
jnp
jle
adc
ljmp
lods
lods
popf
call
mov
loopne
div
dec
mov
mov
loop
enter
imul
pusha
jge
ja
popa
in
fistl
mov
fisttpll
das
ljmp
jl
or
lock
jo
repnz
ljmp
jne
push
es
inc
cld
fimull
cli
xor
dec
testb
dec
mov
mov
sbb
cmp
filds
lock
cmc
sub
sub
xchg
push
jno
pop
lret
inc
ficoms
repz
aaa
fisubrl
negb
shl
mov
enter
daa
push
and
and
jae
pause
mov
shll
lret
mov
shrb
sub
sbb
xor
mov
jae
inc
or
inc
insl
aas
and
lret
dec
pop
push
push
add
out
ret
mov
xor
adc
or
sahf
cli
cmpsl
sbb
dec
orl
movsl
push
xchg
inc
fxch
lea
call
das
mov
or
out
insl
ficompl
xor
je
ljmp
popf
mov
pop
sub
jecxz
dec
jg
shrl
or
xor
mov
push
lret
shll
mov
inc
icebp
insl
add
dec
cwtl
push
fcomps
jo
outsb
pop
aad
mov
jnp
mov
fmull
or
rcll
scas
test
pop
lret
mov
inc
fnsave
jmp
sti
lock
arpl
push
sbb
shl
aas
mov
xor
push
pop
adc
test
inc
jge
mov
ljmp
stos
cltd
roll
pushf
dec
insl
xor
sub
fbld
hlt
sbb
inc
pop
xlat
jb
pop
test
cld
cmc
pusha
pop
cli
sbb
insb
or
mov
loope
filds
xchg
adc
cmp
inc
dec
sti
mov
sahf
jno
fcompl
lods
lret
fs
inc
pop
in
movb
inc
lds
jae
xchg
and
cli
lea
sti
cwtl
cmp
in
sbb
dec
pop
push
inc
stos
sub
jnp
xchg
sahf
clc
cmp
mov
enter
subb
mov
pop
decl
adc
mov
inc
mov
insl
adc
mov
xor
sub
push
jg
jmp
ror
dec
pop
int3
loop
int3
addb
fcmovnb
xchg
or
jmp
std
cmp
fabs
lods
outsl
fisttpll
sbb
mov
xor
sub
sbb
cwtl
xor
ret
aam
iret
nop
sub
jl
jnp
push
out
in
xchg
dec
sbb
and
mov
int
jne
adc
imul
sti
pop
pop
cs
push
test
sub
sahf
cmp
movsl
lret
mov
cmp
repnz
push
push
xor
pop
inc
mov
test
sub
mov
bts
add
jmp
stos
mov
mov
jge
pop
repnz
das
sbb
decb
and
movsb
cmpsb
sub
ret
cs
dec
scas
lods
dec
and
push
mov
in
iret
xchg
jb
sbb
sub
leave
xor
cmp
add
mov
subb
or
jg
arpl
xlat
rclb
test
and
push
pop
shll
cmp
orb
dec
xchg
out
pop
neg
dec
inc
cmp
test
push
push
pop
or
and
mov
inc
add
leave
out
movsl
dec
ret
pop
adc
mov
insl
adcb
call
xchg
hlt
add
ljmp
iret
fs
push
sub
or
gs
loope
icebp
fcoml
fwait
outsl
push
jg
adc
and
inc
test
fbstp
pushf
mov
pusha
mov
negl
insb
cmp
xchg
sbb
jp
fnstenv
jnp
aam
and
stos
imul
jo
pop
subl
icebp
sub
roll
inc
lret
lods
test
out
cmpsl
push
std
leave
cmpsl
inc
cmp
xchg
daa
sti
cmp
push
xor
sar
or
and
into
xor
adc
mov
insl
adc
inc
insl
rclb
or
inc
in
stc
xorl
sub
sbb
xor
mov
scas
cmp
cmp
sbb
invd
xchg
inc
ss
xor
adc
or
ret
pop
aad
shrb
mov
sub
push
dec
xor
pop
and
push
xchg
stos
testl
pop
xchg
sub
pop
or
data16
jmp
adc
and
push
out
loope
jns
or
test
stc
outsl
lock
mov
rcrb
jmp
and
out
pop
mov
or
and
lock
jl
mov
lea
dec
or
xor
dec
sbb
mov
pop
ret
sbb
mov
stos
and
in
lods
fidivrl
cmp
mov
sbb
fldcw
or
ss
shrd
jle
rclb
popa
add
hlt
jnp
xchg
push
aas
lcall
out
cs
add
pop
shlb
mov
outsb
adc
xor
sub
ljmp
stc
pushf
adc
je
stos
rolb
cmp
lret
or
xor
ret
and
sub
jb
push
pop
mov
fstpl
mov
jl
inc
je
les
xchg
bound
or
push
test
mov
std
and
stos
push
fistpl
sbb
add
call
ds
jae
ljmp
adc
cs
in
es
int
int3
cmp
mov
and
xchg
test
repnz
loope
popa
adc
out
in
dec
mov
adc
lds
shrb
push
aad
dec
in
pop
adc
pop
mov
paddsb
outsb
jo
jle
ret
xor
ss
fs
movsl
enter
mov
sub
jl
std
lahf
and
test
enter
adc
ss
loop
cmp
jge
push
xorl
incb
std
mov
xchg
inc
mov
xchg
leave
sbb
nop
clc
in
pop
test
mov
mov
sub
jno
mov
hlt
cwtl
int
ja
int
xor
inc
adc
imul
aas
xchg
idivb
dec
pop
dec
xchg
mov
popf
mov
add
dec
xchg
dec
hlt
lods
or
jns
rclb
or
dec
dec
pop
cmp
push
mov
inc
and
mov
sub
push
std
leave
mov
int
cmc
or
int3
ficoms
test
je
in
mov
cmpsl
pop
jle
test
jg
std
lods
pop
inc
add
ds
pop
add
movb
movsb
notb
lods
mov
aam
xchg
in
pusha
sbbl
adc
add
cld
fsts
jmp
pop
call
jbe
addl
mov
jbe
mov
cmpsb
pop
hlt
xor
jmp
cs
or
out
ror
mov
or
shrb
pop
int3
test
clc
xchg
stc
out
jnp
or
or
sbbl
xchg
and
lret
cmp
lock
cld
in
enter
lock
lret
pop
in
jl
push
xchg
jecxz
jg
movsb
fcmovnbe
mov
out
sti
je
dec
mov
imul
pop
std
sub
cmp
cmp
repnz
cs
adc
adc
jae
test
inc
out
orb
imul
jae
or
xchg
sbb
xchg
test
rcrl
in
pop
push
mov
gs
xchg
sbb
cmp
add
mov
jle
push
mov
cmc
inc
ljmp
in
cmp
dec
movsb
stos
ljmp
arpl
sti
mov
xchg
les
out
cltd
mov
hlt
dec
ret
pop
not
flds
rclb
xchg
cmpsl
add
jno
int
call
mov
pop
pop
daa
inc
jno
push
sarl
icebp
cmpsl
lcall
xchg
cmpb
mov
mov
lcall
add
cltd
int
adc
or
xchg
test
sahf
ja
fists
or
xor
lods
fsubrs
jge
push
jbe
in
and
xchg
jl
bound
xlat
or
ss
dec
and
xchg
jmp
cmp
push
sbb
mov
cmp
push
jno
rcrl
dec
xchg
add
sarb
enter
xchg
xorl
repnz
add
bound
decb
cmpsb
gs
insl
out
lock
mov
cmp
lahf
fisttps
imul
mov
mov
lock
imul
mov
aas
lock
outsb
lea
add
mov
ja
scas
in
aam
mull
lret
lret
xchg
fldenv
xor
mov
adc
push
push
jle
or
xchg
adc
xchg
aas
jb
cmp
je
and
jns
xor
daa
stos
int3
ds
push
test
mov
sub
or
mov
push
adc
cld
cwtl
nop
in
pop
add
mov
fisubrl
cmpsb
jp
jge
push
mov
mov
lods
sbb
sub
cli
repz
int3
mov
aas
jb
inc
push
scas
sti
les
in
das
icebp
adc
adc
mov
add
pop
push
dec
into
lret
sbb
jnp
jne
fsubp
fmuls
pusha
or
sbbl
movsb
pusha
mov
sbb
jb
gs
test
xchg
jae
push
sahf
push
jmp
popf
mov
lret
cmpsb
outsl
sbb
adcb
xchg
add
jae
imul
in
popa
sub
sahf
lret
mov
pop
push
and
sbb
pop
ljmp
xchg
xor
popa
or
test
push
push
fldcw
repz
rcll
inc
pushf
mov
sarl
or
or
pop
repz
and
add
out
mov
lcall
loope
push
test
in
sti
and
aaa
jge
or
pop
out
cmp
repz
and
jge
std
stos
adc
test
daa
add
and
adc
mov
and
skinit
pop
inc
cmp
fdivrl
jp
imul
ss
dec
inc
dec
repnz
xchg
insl
or
mov
add
mov
mov
xorb
mov
jge
or
inc
xchg
hlt
inc
ds
pop
test
push
adc
add
into
cmp
hlt
test
push
les
inc
cmpb
xchg
sub
js
scas
jno
imul
mov
add
and
add
add
stc
pushf
aad
vhaddpd
mov
js
scas
repnz
push
roll
pop
shlb
out
shll
stos
or
mov
push
jns
rcrb
or
sarl
xchg
int3
repz
inc
movsl
mov
add
sub
mov
jo
xchg
in
out
sbb
mov
and
lahf
push
xchg
roll
and
aaa
push
jb
pop
pop
pushf
and
jb
or
out
cmp
add
stos
mov
das
aas
stc
fwait
and
ret
enter
loopne
xor
jge
mov
inc
push
push
lods
inc
mov
lea
aam
lods
stos
out
leave
jp
push
adc
data16
mov
mov
dec
jno
sub
cmpsl
lods
mov
imul
push
aaa
repz
mov
xor
in
shll
mov
std
insl
cmp
jno
lret
adc
inc
fisttpll
cltd
idiv
mov
arpl
lods
addl
aaa
es
cmp
out
mov
cmp
pusha
xchg
pop
decb
icebp
hlt
jmp
xchg
loop
jl
mov
scas
mov
jmp
stos
mov
fsubr
jmp
jae
test
pop
mov
push
jge
and
xchg
dec
mov
jle
loop
negl
test
jae
inc
add
lock
mov
mov
testl
hlt
hlt
insl
lods
pop
aaa
mov
pop
fsubrl
adc
push
andb
popa
add
jp
into
xchg
jmp
dec
pushl
lret
mov
pop
insl
push
push
das
dec
enter
adc
test
xchg
xor
xchg
in
pop
mov
insl
xor
xor
fs
cmp
adc
cmpsb
xchg
shll
fwait
ret
xchg
aas
mov
or
ret
movsl
js
adcb
xchg
repz
pop
dec
ret
mov
and
mov
dec
and
repz
mov
mov
mov
mov
push
add
add
xchg
cmp
mov
dec
test
stos
scas
jecxz
inc
arpl
popf
fcmovnb
ret
push
fwait
pushf
jbe
or
sub
sub
in
mov
fidivs
iret
arpl
inc
mov
outsl
mov
popa
addr16
xor
pop
xchg
push
fiadds
add
pop
push
dec
test
jnp
sbb
sti
push
pusha
mov
test
adc
adc
jge
jne
cmp
stos
loopne
xchg
jns
sbb
fs
cmp
fchs
push
dec
add
icebp
mov
scas
mov
les
std
cld
pop
loopne
inc
adc
aas
lods
jmp
xchg
lods
mov
xor
adc
movsl
sbb
lret
mov
sbbl
lods
adc
mov
xor
adc
aas
inc
sbb
call
pop
jmp
bound
mov
lcall
mov
sbb
push
daa
lret
ret
out
es
pop
mov
ds
lea
inc
hlt
xchg
lock
push
out
xor
das
mov
xor
sub
push
outsl
fmulp
mov
cmpb
cmp
fnstenv
pop
jbe
pop
pop
addr16
lds
sar
sub
cli
into
sub
or
inc
jo
cmpsl
lods
inc
adc
cli
xor
pop
jg
mov
xchg
sbb
fwait
add
insl
or
adc
stc
inc
cmpxchg
push
ss
mov
and
push
pop
ss
clc
fstl
mov
sbb
sbb
aad
xor
sbb
icebp
bound
ljmp
mov
ds
ret
insl
xchg
pop
std
insb
dec
push
sub
fcoml
in
sub
icebp
outsb
les
lcall
call
pushf
dec
mov
jge
fiadds
pop
fucomi
data16
rol
out
ret
push
je
jg
pop
jl
mov
dec
mov
xchg
or
xchg
dec
lea
stos
stos
push
cmp
push
pop
out
and
inc
mov
in
ret
mov
mov
mov
dec
xchg
jle
scas
and
mov
cmp
jmp
mov
and
xchg
or
sub
mov
pop
out
sbb
pop
jne
push
cmpsl
sbb
mov
outsb
popf
in
outsl
xor
sbb
adc
test
push
lock
mov
repnz
pusha
out
es
lahf
inc
and
ss
mov
inc
movsb
testl
inc
stos
mov
push
ljmp
jle
xor
cmpsb
adc
mov
rcpps
loopne
ds
sbb
rcrb
mov
jb
push
inc
bound
xor
mov
loope
jb
xor
push
test
sarb
cmp
jae
aas
loop
clc
inc
push
xchg
fs
shll
aaa
insl
ljmp
mov
pop
sti
mov
mov
rcll
lret
dec
scas
out
xor
dec
sub
pop
popf
test
mov
mov
iret
test
mov
sub
pop
add
daa
mov
mov
lock
cmp
fstl
and
jmp
test
lods
scas
lea
pop
lea
pop
pop
cmc
into
add
push
xlat
shll
scas
cmc
das
imul
jecxz
bound
mov
xchg
sahf
pop
pop
int
inc
push
jne
jnp
adc
mov
std
arpl
cmpsb
xor
sub
test
lea
cmp
adc
xchg
roll
cld
mov
stos
cltd
je
pop
iret
outsb
pop
call
ss
les
in
inc
lahf
add
cmp
dec
gs
inc
ret
cwtl
out
into
xor
test
scas
cmp
jb
push
pop
fdivl
dec
cmp
pop
pop
ljmp
int3
and
jno
cmp
fstpl
idivb
or
cmp
fidivl
gs
fistpll
ja
sub
aam
xor
jno
jmp
mov
cli
sub
pop
mov
push
adc
fcomi
mov
pop
adc
fsubp
sub
xchg
repz
mov
rcr
mov
dec
imul
dec
dec
and
mov
out
inc
add
push
imul
sahf
in
addr16
ret
xchg
fwait
sbb
pop
out
imul
std
sub
dec
sub
lret
mov
jb
fisubrl
mov
shrl
xchg
or
mov
fstl
inc
cmp
into
push
test
call
repz
mov
push
out
jnp
xchg
stos
and
daa
inc
pop
pushf
pop
out
mov
frstor
movsl
out
xor
push
bound
inc
out
inc
insl
sub
inc
xchg
loop
pop
adc
arpl
mov
movsb
in
jp
test
jmp
or
inc
push
inc
sub
loope
add
popa
dec
sti
fcoms
sub
pushf
add
push
mov
or
das
sub
xor
cmp
xchg
loop
sub
sbb
push
jns
dec
jmp
je
stc
lret
into
jmp
add
into
add
dec
add
shrb
addr16
loop
call
decb
add
add
jnp
lods
push
mov
dec
sub
sub
stc
mov
sub
cmp
pcmpeqd
leave
cmp
addb
pop
loopne
mov
lock
and
add
and
sub
test
and
insl
sbb
pop
pop
and
or
repz
push
lcall
lock
pop
cmp
sbb
add
cli
cmp
push
mov
sub
aam
push
pop
insl
scas
cmp
pop
inc
or
xchg
xchg
jmp
inc
adc
mov
push
pusha
mov
popa
xchg
call
sub
dec
cwtl
push
lock
jmp
mov
outsl
je
ja
in
jge
hlt
xchg
xchg
in
mov
mov
mov
jae
mov
testb
adc
sbb
jmp
mov
sarb
and
sti
dec
lea
into
mov
push
rcr
stos
xchg
inc
and
add
and
add
imul
in
lods
lods
stc
mov
mov
test
imul
ss
mov
sub
imul
inc
test
in
mov
loope
icebp
adc
shrl
xor
imul
mov
cmp
andb
fld
sti
add
inc
jmp
cwtl
ret
mov
shlb
pop
add
pop
popa
push
frstor
add
lahf
jb
or
jo
mov
cltd
mov
flds
jmp
in
ret
jbe
pop
test
iret
mov
or
cmp
add
sbb
popf
jmp
mov
int
mov
repnz
ret
insb
sbb
xchg
stos
stos
pop
jno
movsl
sahf
cmpsl
std
sbb
or
sub
xchg
out
jns
mov
push
les
mov
mov
jge
stc
push
imul
stc
into
nop
sub
rcl
ja
or
or
enter
pushl
jbe
dec
fiadds
add
int
rcll
add
fnstsw
out
nop
mov
jp
pop
sub
loopne
mov
and
ficoms
std
lds
fbld
add
cltd
and
cld
add
sti
xchg
cltd
lcall
aam
in
or
and
jp
icebp
popa
mov
xor
mov
push
xor
dec
test
inc
rcll
mov
faddl
and
sbb
add
jmp
push
inc
nop
sub
xchg
mov
popf
pop
push
aaa
andb
jno
mov
jge
std
jae
ds
cmpsb
push
femms
inc
lds
mulb
bound
mov
inc
loope
in
and
jecxz
mov
icebp
cmpsl
inc
out
ficompl
out
xorl
add
lret
and
notb
sbb
xor
xor
or
out
sbbl
lret
mov
mov
out
mov
fwait
lods
cmp
xchg
push
inc
xor
push
and
ja
repnz
xchg
mov
add
cwtl
mov
mov
cmp
jbe
inc
xor
xchg
adc
repz
xchg
cmp
dec
dec
add
imul
pop
pop
and
sbb
push
sbb
pusha
jg
std
mov
imul
jb
mov
nop
imul
into
imul
add
fwait
cmpsl
mov
adcb
jl
dec
xchg
jno
lds
push
dec
arpl
jae
loop
add
scas
and
pop
pop
and
test
xchg
inc
cwtl
notl
mov
push
pop
pop
push
aaa
cli
dec
jecxz
push
clc
lods
scas
cli
pop
inc
xlat
fwait
popl
aas
scas
pop
outsl
out
aad
xlat
arpl
sub
ss
imul
cmp
shll
adc
out
outsb
icebp
sahf
sti
jbe
mov
and
xchg
imul
testl
les
mov
xor
bound
rorl
and
lock
jno
sub
xor
ljmp
std
fisttpll
out
cltd
in
ss
sbb
pop
mov
or
and
fmull
insl
pop
clc
lret
call
sahf
cli
cmp
adc
mov
imul
in
dec
jg
scas
scas
scas
add
lock
fs
popa
pop
xchg
cwtl
xor
xchg
icebp
into
ficomps
ss
mov
sbb
push
mov
ss
push
hlt
push
fstps
test
add
dec
and
jmp
push
shlb
aaa
mov
fsts
ss
pushf
mov
jb
js
mov
mov
mov
js
test
int
lcall
sbb
and
pop
mov
cmp
inc
shll
mov
incb
mov
cmp
stos
andl
push
fbstp
jmp
jae
xlat
insb
jns
stc
lcall
in
rolw
movsl
or
cmp
pop
fs
and
sub
pop
inc
fldenv
sahf
jb
pop
sbb
fs
test
lods
roll
xchg
or
dec
mov
fsubrs
outsb
cwtl
out
cmp
in
cwtl
adc
push
test
or
shlb
imul
into
dec
jns
lock
mov
push
fnstsw
xor
cld
add
lods
inc
clc
scas
xor
sbb
jb
adc
xchg
in
pop
addr16
push
jno
fists
outsb
fisubrs
adc
cmpsb
xor
cmp
xchg
js
int3
inc
push
lret
jo
call
add
xor
incb
xor
es
out
jbe
or
iret
sub
pop
jnp
pop
mov
or
les
stos
insb
dec
sub
mov
enter
ret
or
lea
jb
in
cmp
inc
lods
pusha
mov
addb
lods
shl
pop
mov
stos
mov
adc
popa
lock
mov
dec
and
test
mov
out
xor
add
push
das
mov
cmp
mov
ret
xchg
mov
inc
push
lea
mov
sub
stos
scas
jns
shrl
test
jge
ds
mov
in
dec
xor
aas
jle
mov
jge
dec
sbb
test
in
loope
xor
jmp
push
cmpsl
mov
xchg
stos
or
iret
xor
push
pop
inc
fidivrl
push
sub
mov
jne
jb
sbb
push
jle
out
lret
and
lahf
push
negl
or
or
xchg
lret
testb
out
imul
and
jbe
cld
sbb
pop
and
ret
rclb
cli
fcom
aam
push
pop
adc
daa
xchg
mov
mov
adc
out
mov
sbb
ss
dec
and
pushf
clc
jns
mov
data16
out
sub
inc
jmp
push
je
movsb
std
mov
testb
xchg
pop
imul
insl
sbb
int
dec
fcmove
mov
daa
dec
cmp
loope
sarb
aas
je
jmp
ss
pop
sub
dec
mov
out
mov
fimuls
pop
inc
or
cmpsl
jb
or
das
pop
sub
dec
mov
lret
std
adc
imulb
xchg
sbb
jle
push
ds
mov
or
fwait
jo
xchg
stos
push
jno
inc
fistpll
jno
lcall
mov
pop
pop
mov
push
or
push
lds
iret
and
std
outsl
jb
adc
orl
adc
sbb
ljmp
jg
or
test
mov
dec
xacquire
cltd
popa
idivb
dec
xor
or
cli
testb
clc
mov
mov
aas
pop
cli
add
scas
movl
scas
jae
ds
dec
icebp
ss
cmp
jp
fldt
sub
loop
das
call
mov
das
addr16
push
jl
push
int
sarl
sub
outsl
jo
mov
ja
dec
inc
dec
inc
popa
lods
mov
add
adc
in
ja
pop
sub
cwtl
aaa
jle
push
scas
addl
adc
sub
shlb
or
cs
enter
cmp
fmuls
pusha
rep
xchg
push
hlt
imul
mov
adc
and
sarl
or
movsl
xchg
push
test
stos
test
mul
mov
sbb
rorl
iret
call
pop
dec
mov
shlb
imul
test
xchg
push
fwait
repz
scas
jmp
or
pop
xlat
pop
sub
ss
rclb
add
sbb
sub
insl
fstl
adc
mov
xchg
push
mov
xchg
cmp
push
loop
jne,pn
stc
sar
sarl
push
adc
xchg
cltd
sub
add
in
dec
dec
stos
push
mov
sub
orl
mov
inc
mov
mov
arpl
pop
jmp
pusha
clc
imul
xchg
xor
mov
mov
call
and
mov
sub
daa
cmp
and
adc
xor
in
sub
fcompl
lret
jg
mov
inc
xor
out
outsl
ss
jb
daa
pop
pop
xchg
lods
sub
cmpsl
call
hlt
mov
das
fdivl
xorl
pop
je
jmp
insl
adc
mov
inc
mov
mov
xchg
mov
sti
rcl
xor
cmp
adc
mov
pop
cmp
lcall
mov
ret
dec
notl
pop
inc
out
insb
aad
pop
pop
add
cmp
xchg
and
push
lds
push
adc
mov
icebp
orb
les
mov
cmp
pop
and
filds
mov
sbb
movsl
fisttpll
pusha
add
ficoms
pop
adc
repnz
jns
sbb
bound
rorb
out
cld
ret
bound
pop
arpl
sbb
add
push
cld
out
aad
jecxz
xor
xchg
jp
adc
pop
fsubl
mov
adc
fs
insb
and
cli
sub
push
rolb
out
inc
pop
inc
icebp
arpl
push
sub
inc
and
add
jg
call
fcom
lods
je
push
cmpsl
pop
xlat
mov
pop
push
pop
fldcw
or
xor
sbb
push
sub
and
push
int
ss
xlat
inc
mov
movsl
dec
inc
add
imul
inc
push
cmc
or
mov
sahf
inc
enter
aaa
arpl
mov
das
jb
loope
enter
jle
pop
movb
lea
movsl
scas
xchg
mov
fimuls
jp
and
add
jb
outsl
out
adc
push
cltd
xchg
in
fcomi
loope
addr16
sub
and
nop
cltd
inc
adc
cmp
and
inc
adc
mov
push
dec
call
int3
and
cltd
xchg
enter
mov
mov
into
and
out
push
sbbb
dec
pop
adc
ret
subl
sbbl
inc
pop
or
pop
out
and
orl
and
fbstp
add
aaa
enter
fadds
and
faddl
leave
inc
pop
dec
mov
push
or
push
sub
loopne
xor
les
xor
sbb
sub
pop
inc
sbb
dec
xchg
std
inc
addb
int
pop
add
outsb
std
fldl
lret
outsb
dec
ja
mov
rol
loope
cmp
pop
lret
pop
fsubp
data16
cmp
leave
xchg
jnp
fisubrl
rcll
mov
or
call
push
lahf
xchg
push
xchg
dec
movsl
arpl
roll
fistps
repnz
jne
sahf
andl
push
outsl
ficoml
shlb
xchg
enter
adc
sub
mov
dec
xchg
mov
push
pop
mov
sahf
mov
ss
and
and
mov
and
jle
adc
test
repz
into
mov
push
mov
dec
lock
outsb
pop
jp
shll
push
jl
sti
ret
gs
in
test
jmp
cmpl
flds
rcrb
testl
pop
nop
add
out
add
sub
push
call
and
mov
inc
insl
push
jl
arpl
out
lcall
dec
stos
loop
rcr
jle
mov
inc
cmpsb
aas
mov
loopne
xchg
es
jno
jno
dec
fbstp
imul
data16
aam
xor
mov
in
jle
mov
call
lods
je
dec
lahf
lods
jmp
pop
mov
leave
jns
mov
push
add
jb
into
push
lahf
mov
and
scas
in
daa
cmp
jecxz
dec
inc
cli
lcall
pop
push
hlt
int3
mov
jo
sarb
or
loope
push
push
and
xchg
cmp
jae
imul
in
incl
mov
inc
lret
mov
pop
in
push
insb
mov
pop
mov
fldl
and
push
inc
fs
outsb
pop
fs
jnp
pop
or
test
dec
xchg
sub
sub
lods
lea
fimull
pushf
in
jbe
or
sub
push
notb
lods
push
popa
add
into
imul
pop
lret
mov
loope
and
ret
test
shlb
or
adc
rcr
shlb
imull
jecxz
fists
lcall
aaa
mov
pop
outsl
in
bound
or
mov
mov
lcall
mov
data16
es
mov
pop
add
into
out
fiaddl
inc
call
mulps
pushf
bound
mov
ret
add
push
lret
mov
adc
push
aas
add
adc
cmpl
sbb
stos
dec
mov
inc
andb
inc
arpl
sub
stos
clc
xor
aad
rorl
and
xor
mov
add
or
enter
popl
and
fcomp
cmp
jmp
fimuls
fldt
xor
pop
lods
sub
push
imul
sbb
pop
test
enter
fldcw
in
je
dec
add
mov
lea
add
in
rorb
or
in
mov
fsubl
mov
add
cmp
ret
xor
sub
cmp
push
mov
add
mov
imul
jecxz,pt
push
dec
pop
enter
push
adc
dec
cmp
repnz
cmp
cli
js
mov
mov
sar
orb
ficoml
daa
movsb
mov
lea
xchg
xor
and
xor
dec
push
mov
cld
insl
insl
repz
mull
outsl
sub
aas
in
jae
lret
jp
les
pop
pop
popl
xor
dec
mov
add
push
push
xchg
jne
sub
notb
or
cmp
sub
mov
jge
cs
fwait
jb
cs
push
imul
push
and
pop
and
dec
icebp
fcompl
imul
rcrl
push
mov
sbb
push
xchg
sbb
int3
out
mov
cltd
lods
sbb
les
enter
jns
jmp
mov
daa
mov
prefetch
dec
or
mov
in
es
cwtl
jb
sub
rorl
xchg
into
insl
pop
mov
and
rcrl
cli
ret
mov
movsb
mov
mov
je
fimuls
push
repz
in
in
stc
loope
cmp
shlb
jmp
inc
mov
fdivl
in
mov
and
insb
add
pop
or
in
scas
loope
and
cmpsb
aad
pop
fistl
dec
dec
fcmovnu
rcrl
fwait
mov
nop
adc
cli
adcl
mov
mov
out
inc
mov
inc
cltd
clc
mov
push
push
and
sub
out
cmp
shlb
lock
push
push
xchg
andl
cmp
or
repnz
and
das
pop
test
inc
inc
xchg
dec
pop
cmp
push
sbbb
mov
pop
fs
add
mov
adc
rolb
inc
add
or
aaa
xchg
lcall
sbb
sub
hlt
push
std
std
cmc
mov
cmp
inc
pusha
iret
sub
cmp
addl
scas
jl
pop
enter
test
sbb
arpl
imul
stos
imul
push
ds
mov
mov
jbe
shrb
fs
sbb
pop
in
in
std
dec
shlb
add
xor
dec
sbb
xor
fcomps
addr16
push
jecxz
test
sbb
cltd
push
inc
mov
lock
jl
fsts
mov
fdivrl
cmp
jae
sbb
sbb
or
lret
inc
enter
cmp
shl
rcrl
push
pusha
ss
push
iret
xor
mov
xchg
or
add
data16
xchg
cwtl
test
mov
clc
cwtl
inc
and
pop
in
cltd
ror
mov
mov
insl
inc
int3
adc
mov
lods
leave
iret
pop
mov
out
mov
sbb
xchg
and
add
jnp
cld
stc
push
loopne
outsb
mov
movsb
movsl
xor
mov
arpl
pop
mov
push
pop
out
fdivrl
sarb
sub
xlat
mov
out
enter
mov
inc
pop
cld
mov
dec
push
cmc
neg
testb
fwait
jge
inc
push
dec
cmp
jg
aam
or
push
sub
add
mov
pop
sub
inc
std
rep
mov
sti
daa
leave
cld
mov
jne
adc
cltd
and
rol
sub
testb
ss
repnz
ja
sub
pop
jnp
and
adc
loopne
mov
movsl
inc
clc
mov
iret
push
mov
mov
jge
pop
adc
mov
lds
dec
out
es
fwait
scas
inc
sar
cmp
adc
or
out
pop
add
test
mov
dec
out
imul
cli
cmc
pop
movsb
outsl
xor
push
pop
xor
inc
fdivp
jnp
cmpsl
in
add
or
push
pop
dec
sbb
pop
mov
insb
lret
inc
jnp
cmpsl
push
lock
xchg
pop
es
mov
sbb
xchg
xor
stos
jae
jmp
jl
mov
mov
jbe
in
or
in
rcrb
mov
push
mov
mov
fld
ret
hlt
or
aaa
out
test
pop
jecxz
movsb
rcll
aad
es
adcl
xchg
xlat
or
push
xchg
add
lods
cmp
mov
pop
dec
scas
mov
je
or
mov
and
fnstenv
test
pusha
sbb
or
or
cmpsl
cmp
xchg
jae
pop
jae
adc
dec
mov
inc
daa
icebp
inc
mov
cli
mov
push
pusha
cmpl
dec
mov
fildl
mov
cmp
in
lds
fsubl
jl
das
mov
or
nop
aas
and
lret
int
jbe
dec
pop
inc
jo
popf
shrb
pusha
addb
pop
fadds
lods
sar
pop
aaa
mov
cmp
xchg
jle
iretw
xor
mov
cmp
push
pop
pop
subb
xor
rcrb
xor
jg
popa
inc
or
jmp
fisttpl
xchg
stos
pushf
popa
scas
mov
or
pop
gs
xchg
dec
fsts
mov
mov
inc
clc
lret
lcall
rol
mov
add
mov
mov
mov
mov
pop
mov
testl
loop
cmp
mov
cmp
xor
cmp
mov
adc
shlb
pop
mov
clc
stos
cmp
daa
push
adc
mov
cmp
gs
and
clc
cwtl
pusha
mov
fcomp
movsb
es
mov
adc
push
stc
mov
cld
cmc
lahf
add
sbb
cmp
xor
insb
mov
insl
and
jge
and
cmp
jecxz
inc
xchg
jl
and
jbe
or
inc
push
mov
std
shr
mov
popa
sarl
in
pop
enter
mov
icebp
xchg
xor
idivl
sbb
add
mov
push
mulb
xlat
and
out
jg
iret
std
push
out
jno
mov
cs
or
hlt
dec
gs
jae
and
cmp
jnp
cmpl
mov
insl
in
jge
aam
bound
out
push
push
push
enter
push
ja
mov
dec
ret
add
es
js
fwait
sub
xor
fimull
push
cmpb
in
ss
pop
fcmovnbe
movhps
arpl
mov
out
sahf
mov
mov
aaa
dec
lahf
int
push
loop
sbb
orb
inc
push
mov
xchg
mov
shrb
lods
dec
es
sbb
mov
stos
cmpsb
dec
lds
fs
mov
mov
sbb
pop
mov
xor
jg
sub
adc
mov
sub
pusha
pop
jg
imul
sbb
lds
sti
out
sub
and
nop
sti
mov
outsl
lret
or
pusha
pop
mov
outsl
or
sub
mov
jne
lcall
jae
xor
or
aas
popa
xor
dec
dec
xlat
addl
jl
pop
xchg
xor
bound
roll
pop
and
xchg
aam
push
xchg
pushf
out
lock
fsubrs
xor
iret
movsb
mov
inc
adc
fisttpll
mov
in
xorl
cmpsl
hlt
lret
movlps
mov
mov
neg
aad
sti
in
je
pop
jmp
aam
fisttpl
movsl
push
aad
pop
repnz
mov
pop
or
loop
push
jcxz
pop
jb
sbb
inc
rorl
sbb
fs
push
outsl
incl
sub
insb
es
inc
xor
mov
xchg
out
jge
call
sbb
aaa
repz
dec
and
push
add
push
xor
outsl
repnz
push
xchg
repz
ljmp
sbb
dec
movsl
jb
in
cmp
xchg
inc
in
push
popa
fidivrs
jecxz
push
pop
stos
rcrb
and
lahf
push
in
sbb
jns
inc
push
mov
xchg
push
jmp
sbb
test
inc
lock
movsl
icebp
dec
xchg
inc
mov
and
hlt
testl
xchg
aam
mov
insb
jmp
adc
js
loope
xchg
cmp
call
jg
gs
scas
sti
test
lret
cs
fisubrs
call
scas
sbb
mov
ljmp
adc
mov
loop
adc
cmpsb
sub
mov
test
dec
sarl
or
pop
stos
enter
push
das
xor
fnstcw
ret
jnp
sub
lahf
cmpsb
mov
sbb
movsl
adc
rorl
push
mov
lods
mov
dec
jge
push
dec
xlat
inc
mov
inc
stos
jle
cmpsb
jg
mov
jmp
xchg
mov
cmp
dec
jl
mov
mov
add
lahf
hlt
push
push
mov
push
and
mov
pushf
jbe
fwait
inc
add
jmp
jl
jmp
cltd
pop
cmc
fbstp
or
pop
push
pop
stos
mov
xlat
insb
inc
aas
adc
fs
cmp
rol
xor
popf
mov
inc
mov
adc
mov
outsb
adc
add
test
xchg
std
adc
pop
pushf
mov
dec
dec
mov
pop
lea
add
data16
add
adc
lods
jae
mov
stos
push
xchg
lcall
mov
pop
pop
rcrl
into
icebp
cs
pop
pop
popf
add
je
inc
scas
cmp
jae
push
in
js
push
sbb
gs
in
out
mov
xchg
xchg
stos
jecxz
jl
dec
adc
addb
mov
notl
in
cmp
mov
aad
addr16
out
sub
fstpl
int
enter
ss
xor
bound
daa
pop
mov
test
fadds
stos
cmpsl
loopne
xor
shr
mov
insb
testl
js
lret
jg
cmpsb
jge
shr
movsb
dec
shll
icebp
ficoml
inc
mov
add
movsl
inc
cmc
lods
sub
mov
aam
and
scas
ret
xchg
and
sub
std
dec
nop
incb
dec
jge
nop
mov
jp
xlat
add
or
dec
fbld
mov
out
add
in
jle
jp
inc
std
rclb
inc
ret
scas
mov
inc
mov
aam
testl
mov
push
enter
mov
cwtl
pusha
dec
mov
add
nop
mov
aad
cmp
flds
out
mov
mov
orb
inc
xchg
test
pushf
xchg
cmc
dec
jae
ret
add
jo
jecxz
jne
ret
loopne
cs
out
pop
dec
inc
hlt
adc
subl
and
bound
stc
cmpsb
in
xchg
jo
pop
push
cs
dec
xor
mov
adc
inc
dec
pop
lcall
sbb
lds
pop
test
sbb
xchg
mov
rcl
xor
adc
add
pop
leave
sub
imul
add
lret
pusha
scas
pop
xorb
or
inc
pop
xchg
pusha
push
add
mov
ds
fcoms
jmp
push
jb
or
hlt
pop
mov
rcrb
insl
das
push
push
pop
jecxz
popa
mov
sub
pushf
sub
movb
jne
lret
adc
dec
push
mov
insb
xchg
mov
pop
fidivl
cs
out
out
xchg
cmc
or
call
inc
mov
pushf
shlb
and
daa
pop
xor
leave
mov
push
mov
cmp
and
xor
inc
push
mov
inc
and
shll
sbb
rcrb
iret
adc
push
cld
jne
pop
sbbb
adcl
mov
popa
jno
mov
outsl
rcll
lea
xchg
shrb
push
ret
pop
pusha
lret
hlt
lret
add
je
daa
jo
imul
xor
test
inc
test
imul
divl
fdivp
jecxz
js
testb
sbb
jecxz
sub
std
test
and
imul
pop
das
adc
and
and
push
mov
outsl
push
push
inc
or
xchg
mov
cmp
and
mov
xlat
xor
or
dec
imul
push
sar
and
mov
sub
mov
cmpsb
insl
sti
out
stc
lret
mov
popa
sbb
rcrb
lock
dec
ss
xchg
dec
mov
mov
jno
mov
popa
sub
mov
notb
js
lods
jge
stos
ljmp
xlat
ljmp
ficoml
in
js
inc
fdivl
inc
adc
push
jl
xchg
popf
hlt
loopne
or
mov
jg
mov
mov
bound
pop
and
fistpll
xor
fidivrs
mov
pop
mov
lret
nop
dec
or
inc
iret
fwait
sbb
xchg
movsl
fmuls
push
std
mov
mov
add
xchg
jo
and
add
add
sub
lahf
rcr
pop
inc
sub
fsubrl
lahf
pop
aaa
or
inc
js
push
xor
or
jbe
dec
cli
gs
mov
sbb
lods
sarl
mov
int3
fsubr
cmp
cwtl
cmp
dec
nop
in
into
adc
int3
test
out
nop
adc
pop
xor
in
adc
int3
cmp
adc
stos
test
pop
enter
mov
cli
add
pop
xchg
mov
xor
pop
mov
sub
insl
mov
mov
pushw
notl
fs
out
fsub
lcall
add
mov
leave
lods
xor
js
repz
mov
fistl
mov
out
icebp
dec
sahf
pop
dec
insl
fdivr
popa
fstps
test
cmpsl
lods
out
cmp
lock
and
ljmp
lock
bound
and
inc
movsb
lahf
popf
pop
call
cwtl
addr16
sub
int
mov
fdivrl
mov
cmc
mov
std
inc
sub
sbb
andl
icebp
bnd
sub
dec
in
or
aaa
pop
sub
lods
xchg
sub
dec
stos
xor
lds
inc
cld
test
adc
xchg
xchg
pop
flds
cltd
push
mov
fldlg2
xor
lcall
pushf
out
mov
bnd
cli
adcb
mov
add
xchg
mov
mov
jmp
subb
jmp
adc
inc
das
imulb
add
jmp
xchg
cmp
aad
jae
xorl
pop
xchg
int
mov
push
add
mov
xor
imull
add
testb
mov
imul
sub
cltd
dec
int
dec
out
imulb
jge
stc
xor
mov
mov
and
bnd
dec
rolb
xchg
insl
ds
lahf
pop
add
mov
push
jg
push
xchg
pushf
dec
fistpll
pop
inc
and
pop
push
dec
in
cli
add
fstl
loope
pop
cmpsb
test
dec
outsl
mov
stos
xchg
mov
mov
push
in
push
cmovnp
xchg
jp
ss
fcmovnu
loopne
cld
pusha
xorl
mov
cmpsl
aas
hlt
movsb
rcrb
movsb
ror
cmpsl
lock
sbb
aaa
xchg
adcl
idivb
xchg
popa
mov
scas
repnz
mov
xor
ror
lahf
jns
cmpb
cmp
mov
addr16
je
popf
or
cmpsb
js
mov
bound
iret
imul
adc
stc
out
adc
push
cmpsb
push
test
cld
nop
or
xchg
into
mov
cmp
mov
add
loopne
outsb
stos
cltd
and
push
jbe
jmp
jae
adc
and
mov
shl
mov
mov
daa
scas
rolb
mov
in
cmp
popf
and
add
repnz
push
mov
mov
ja
test
xlat
shl
stc
add
jb
inc
mov
sbb
sub
pop
rcll
xor
mov
inc
pop
jle
mov
mov
insl
repnz
inc
pxor
push
push
dec
push
sarl
mull
orb
test
mov
xchg
jb
testl
test
test
sbb
fwait
test
rcll
sahf
ret
or
in
cmp
jp
inc
cwtl
sub
stos
ret
pop
arpl
sbb
sar
mov
lock
xchg
addr16
inc
cltd
cli
icebp
dec
lds
cmpsb
sbb
nop
lock
cmpsl
cmp
push
jb
xchg
daa
mov
jnp
inc
stos
lss
int3
xchg
mov
pop
cld
test
scas
lret
dec
add
cmc
dec
pop
ljmp
adc
pop
out
cmpb
lds
mov
aad
mov
mov
lcall
stos
inc
mov
sub
cmp
dec
cmpb
popa
xor
push
dec
inc
and
inc
cmc
call
out
jae
insb
fnsave
push
rorb
cwtl
cmp
push
xor
pop
jbe
not
jns
cwtl
adc
add
mov
insl
mov
rol
add
popf
mov
pop
cmp
cmpsb
out
jnp
daa
enter
insb
mov
inc
pop
dec
mov
add
dec
pop
dec
jns
cmc
pop
and
pop
pop
adc
shll
int
ret
int
clc
jg
mov
add
and
into
cmp
aad
cs
inc
add
jmp
adc
rcr
ss
mov
or
push
inc
cmp
dec
sbbl
dec
pop
lea
pop
xor
icebp
mov
loope
xchg
mov
push
push
std
jp
icebp
out
jae
mov
test
cli
mov
pop
mov
xor
mov
adc
sub
cwtl
shrb
inc
pop
jg
loopne
imul
in
int3
nop
cmp
xchg
imul
mov
gs
add
cmp
test
js
daa
js
mov
adc
adc
sbb
ss
cmp
dec
push
cmp
add
xchg
sarb
dec
sbb
pop
cmp
loopne
dec
loop
pushf
sarl
loopne
or
jl
jb
dec
insl
sti
mov
xor
pop
cmc
mov
xor
jl
cmpsb
or
and
rcrb
lea
jle
mov
pushl
inc
loopne
mov
movsl
inc
pop
sbb
xor
xor
pop
loope
mov
xchg
mov
jns
and
mov
jb
mov
popa
push
dec
test
test
adc
cmp
xor
fs
xchg
xchg
popf
jecxz
les
pusha
aaa
fs
mov
push
fstp
addr16
push
fdivrl
jns
push
pop
negl
lret
inc
or
loopne
out
push
dec
jl
decl
or
in
cli
jns
mov
mov
aaa
or
test
cld
popa
push
scas
out
pop
into
rcll
sbb
dec
popf
das
sbb
cmp
push
adc
xchg
jbe
adcb
jne
test
jmp
sahf
jle
test
fbld
testl
clc
and
mov
mov
sarb
data16
pop
mov
cld
scas
xchg
xchg
shll
xchg
xchg
jnp
movl
imul
aas
adc
jb
test
test
repz
jecxz
in
mov
test
push
xor
aas
mul
fsubl
addr16
daa
jns
and
loop
inc
dec
outsl
in
dec
and
ret
icebp
popa
lret
ret
adcb
inc
xor
cmp
or
lcall
outsl
adcl
insl
adc
mov
mov
sub
iret
jns
inc
inc
jne
stos
stos
and
rcll
pop
add
daa
hlt
cs
dec
push
and
push
jle
cltd
insl
cltd
adc
mov
push
xchg
push
cmc
fisttpl
cmp
sbb
stos
adc
outsl
jmp
fsubs
cmpl
xchg
push
pop
cmpsb
xor
inc
cmpb
stos
add
sub
sbb
std
pop
or
fbstp
or
je
mov
xchg
pop
push
lods
inc
js
ss
pop
push
add
mov
cmc
lock
notl
pop
cmp
xchg
imul
mov
cmp
inc
mov
or
in
xchg
cmpsb
clc
int
push
in
in
mov
test
cld
jno
lods
mov
xchg
sbbl
out
dec
aad
inc
sbb
pop
dec
or
jp
mov
mov
dec
pop
sbb
jp
cmp
scas
adc
or
imul
jne
pop
sub
mov
jge
add
or
xchg
mov
inc
stos
fdivr
cltd
insl
out
or
mov
stc
inc
sub
push
dec
xchg
lods
pusha
imul
out
jmp
push
push
sahf
lcall
push
jo
lods
pop
sub
ljmp
push
push
ds
sbb
je
insl
cld
out
jb
sbb
popa
and
nop
hlt
or
jo
push
enter
mov
sub
xor
dec
cli
fsubs
sbb
fcomps
or
pop
stos
loopne
lods
add
jo
push
push
popa
add
jno
xorb
outsl
iret
xchg
rcr
insl
adc
xlat
leave
aam
rep
sbb
lcall
addr16
ret
pop
and
or
mov
scas
adc
pop
stos
pop
aam
mov
mov
adc
inc
shl
movsb
stc
mov
cmp
inc
xchg
push
lahf
rcll
push
mov
mov
mov
mov
sbb
xchg
cld
xor
or
adc
or
hlt
inc
fldlg2
mov
and
pop
in
ficoms
push
orl
inc
scas
gs
adc
mov
mov
push
and
imul
addb
test
dec
not
mov
or
push
stos
sbb
mov
xchg
and
cmpsl
out
sbb
push
inc
add
scas
inc
in
pop
adc
js
fisttps
and
test
stos
mov
mov
add
fildl
xchg
inc
out
loop
mov
jmp
adc
adc
sbb
inc
xor
pop
fsubl
repz
xor
repnz
sbb
popa
subl
ss
cmp
jo
xor
aam
xchg
loopne
insb
inc
cmpsb
std
jae
rcr
xchg
lods
lcall
push
push
jecxz
sub
add
repz
rolb
mov
movsl
mov
and
mov
std
repnz
mov
mov
mov
sbb
inc
test
decb
sub
push
arpl
or
mov
or
xorl
mov
mov
aas
test
daa
lret
aas
push
mov
jp
popa
and
mov
es
insl
das
pop
mov
inc
push
imulb
rclb
enter
inc
xlat
mov
clc
cwtl
cltd
daa
add
mov
leave
ljmp
sub
arpl
lds
fistpll
lcall
leave
push
mov
pop
pop
cltd
je
into
jg
sub
adc
aas
mov
mov
arpl
push
cld
dec
push
cs
pushf
add
out
adc
adc
sbb
pop
stos
roll
push
cmp
pop
xchg
rolb
dec
xor
mov
mov
fidivs
jle
mov
rol
cli
stos
xchg
iret
rcrl
jle
xchg
xor
shl
jae
cltd
lret
lds
or
add
mov
sahf
cmp
xor
sub
xchg
lcall
lds
imul
ja
jmp
bound
mov
mov
loop
add
mov
idiv
lock
mov
stos
imul
push
fildll
xor
mov
insb
lret
mov
xchg
out
aad
mov
fmull
pop
in
mov
cmp
lods
xchg
push
and
mov
shl
adc
mov
in
stos
and
xchg
pop
cmp
gs
pop
gs
jno
dec
lcall
jmp
loop
mov
dec
icebp
push
outsl
pop
and
push
pushl
cmp
mov
scas
divb
mov
mov
pop
sbb
jl
and
inc
outsl
and
mov
mov
fisubs
dec
sahf
xor
or
lods
dec
fnsave
pop
popa
ja
cmp
stc
inc
cmpsl
add
clc
jo
int
sbb
in
pop
inc
lcall
insb
loop
mov
pop
sahf
push
jnp
push
repnz
aam
outsb
pop
sub
mov
js
mov
cltd
xchg
adc
push
into
imul
les
inc
pop
lds
std
ss
ss
xchg
sub
mov
cmp
lods
lret
es
lahf
pop
imul
adc
popf
jmp
call
dec
pop
cmpsl
fmuls
iret
adc
fdivrl
jbe
rolb
xchg
sti
mov
and
mov
addr16
jb
pop
clc
xor
std
cmp
into
dec
das
mov
pop
lock
adc
mov
push
xlat
push
xchg
je
repnz
xor
mov
mov
out
enter
es
pushf
mov
stc
fldenv
cmp
lret
inc
push
and
mov
jle
movsb
mov
movsl
xorb
pop
jecxz
sub
add
pop
adc
cmp
cmp
mov
int
adc
movsb
addr16
sbb
cmp
jmp
daa
cli
push
and
and
xor
movb
je
call
loop
aad
cltd
mov
out
push
pop
fcompl
inc
xchg
adc
cs
adc
pop
lock
fwait
xor
ret
mov
xchg
fucomp
xlat
jmp
jle
mov
aad
pop
aad
pop
push
imul
or
cs
jecxz
imul
sub
popa
dec
jecxz
enter
mov
xchg
dec
stos
xor
inc
lock
int
mov
testb
ja
sbb
scas
pusha
mov
ljmp
mov
push
movsl
pop
sahf
nop
out
sbb
pop
pop
sub
out
jl
mov
addr16
inc
xlat
fsubr
sahf
out
xchg
jbe
and
iret
test
pop
mov
orb
fmull
iret
dec
in
add
mov
mov
mov
rol
ljmp
mov
mov
jne
xchg
ret
js
cmpsl
push
or
adc
jle
xor
push
pop
mov
and
movsl
aad
or
jge
icebp
or
xchg
mov
jnp
push
pop
dec
cmpsb
pop
loop
in
jmp
jmp
cmp
arpl
fisubrl
adc
and
pop
fnstsw
mov
pop
mul
es
lahf
adc
mov
cmp
hlt
movsb
repz
fs
movsl
mov
jg
imul
pop
mov
mov
mov
or
fmuls
xlat
xor
cmpsb
adc
sbb
or
push
push
enter
lds
rcrb
or
xor
push
xor
imul
scas
es
sahf
cmp
cld
daa
push
test
cmpsl
mov
leave
out
jge
and
sub
das
hlt
incb
out
cmp
shlb
xchg
cli
out
pop
mov
hlt
pop
xor
dec
nop
mov
xchg
lahf
in
shlb
mov
int
lret
ret
fwait
push
cltd
in
pop
push
loope
aam
push
push
test
pop
inc
sti
int3
jmp
cmp
and
int
in
outsl
sub
stc
call
lods
pop
sar
fbstp
or
inc
pop
adc
ljmp
fadds
pushf
dec
fbstp
js
mov
cld
pusha
std
imul
cmp
call
sbb
inc
fidivl
out
adc
mov
and
insb
mov
fisubs
sbb
les
icebp
xchg
mov
mov
test
dec
mov
ds
xor
push
call
jb
add
shlb
xor
inc
and
sbb
jmp
adc
stos
jmp
fwait
ds
repz
dec
dec
or
ja
lea
mov
mov
test
test
mov
out
shlb
xchg
add
xchg
sbb
loope
test
xchg
or
aam
scas
push
scas
mov
cmpsb
filds
push
aam
cmp
das
xchg
xchg
mov
div
cmp
jmp
sbbb
mov
push
cmp
or
xchg
into
jo
pop
add
imul
mov
sub
lods
daa
push
sub
ds
fdivs
mov
and
xor
aaa
daa
mov
addb
dec
jns
flds
icebp
mov
xor
fidivrs
addr16
in
cld
xchg
push
jb
pop
push
fs
in
mov
cmp
mov
jb
gs
xchg
shll
fimuls
cltd
inc
xchg
xor
shlb
xchg
jp
push
push
pop
add
add
push
sbb
frstor
mov
pop
js
movsl
in
inc
dec
jp
les
loop
sbb
and
and
sub
fsub
pop
loope
addr16
pop
mov
enter
dec
popf
js
jae
add
xor
aaa
xor
sti
popf
push
outsb
add
aam
ja
push
cmp
inc
mov
popa
jnp
outsl
dec
addb
fucom
in
xor
add
mov
mov
xor
and
fnsave
mov
out
and
mov
jmp
lods
sbb
mov
call
repz
add
xchg
inc
add
and
xchg
outsb
pusha
iret
push
and
mov
hlt
mov
inc
hlt
pushf
les
cs
aam
orb
jl
xchg
jp
mov
in
xor
sub
ja
jge
mov
inc
sub
sar
testb
mov
sbb
and
push
mov
dec
scas
aas
addr16
subl
pushl
out
outsb
xor
scas
notb
ds
jg
push
pop
adc
jg
lock
movsl
out
icebp
add
or
jns
jmp
mov
je
fnstenv
lods
div
jbe
rorl
test
mov
pusha
cmp
xchg
icebp
test
dec
scas
add
mov
jae
out
pop
dec
imul
cmpl
cld
test
adc
jb
or
jge
sub
jg
cmp
lods
xchg
sub
pushf
xor
cmpsb
sub
stos
mov
and
sbb
jo
cmpsb
xlat
xlat
sbbl
pop
testb
pop
call
icebp
out
insb
sti
leave
fsubrs
gs
dec
cmp
aad
in
scas
pop
stc
adc
aas
ret
adc
in
jp
cmp
mov
sub
cmp
xchg
xchg
fwait
mov
clc
add
xchg
inc
pop
and
mov
lahf
stc
mov
pop
lods
inc
stc
mov
xchg
popa
shll
ja
data16
das
andl
scas
inc
mov
jno
sti
push
fucom
jns
cmc
insl
and
mov
stc
test
dec
sbb
lock
push
cmpsb
sub
mov
mov
fistpll
in
sahf
out
call
xchg
je
cmp
ret
push
inc
jecxz
and
jmp
inc
stos
jb
cmp
mov
xchg
mov
pop
in
or
push
enter
imul
jmp
jmp
sarb
jecxz
jle
xor
insl
sbbb
clc
jns
pop
xchg
gs
cmp
or
or
mov
dec
and
mov
aad
dec
or
out
cmp
xchg
or
and
add
es
loop
push
jecxz
mov
adc
jge
les
xchg
cmp
pop
in
mov
cmpsb
dec
hlt
out
sbbb
fcmovne
fcom
addr16
mov
jae
int3
leave
cmp
mov
mov
leave
rcll
jb
xor
mov
std
les
in
ja
pusha
out
pop
adc
dec
cmp
pop
push
popf
push
cmp
add
push
jle
imul
jp
push
xor
jae
imul
push
dec
mov
xor
lods
call
jle
mov
adc
mov
out
add
jmp
test
ja
mov
lret
div
or
sbb
in
shl
fcmovnbe
ds
and
add
mov
push
cmp
out
xchg
cmp
mov
xchg
mov
fwait
pop
xor
test
dec
pusha
inc
aas
and
cltd
add
sti
mov
pop
inc
xchg
mov
inc
and
out
shll
push
arpl
clc
cmpsl
pop
jge
xor
dec
cmpl
in
aam
xchg
nop
daa
push
inc
arpl
or
daa
repz
shll
dec
imulb
mov
push
or
lods
mov
xor
pop
sub
jmp
pop
push
and
sub
lret
into
mov
outsb
pop
in
out
shll
shrl
xchg
dec
cmp
and
test
jns
xchg
add
mov
add
push
lds
mov
jg
or
mov
sti
dec
shlb
pop
add
mov
cmc
sbb
icebp
mov
add
inc
mov
insb
enter
insl
mov
lea
xor
xlat
outsb
nop
cmpsb
es
bound
dec
cmp
cmp
scas
lock
lcall
add
fstpt
add
cmpsb
decl
inc
xchg
and
aaa
pop
ret
sbb
flds
xchg
sub
stos
popa
lock
cmp
adc
jbe
stos
in
jecxz
cmpsl
xchg
rolb
dec
cmp
gs
repnz
test
sbb
loop
out
aas
lahf
sub
and
mov
pop
insl
jo
xchg
xchg
js
push
mov
adc
popf
je
or
push
test
push
xor
cmp
lds
add
stos
push
add
mov
pop
xchg
mov
jno
sahf
lods
and
xor
cmc
inc
lret
mov
push
push
sub
sbb
into
ret
leave
xchg
and
pushf
test
mov
inc
jge
cltd
cmpsl
repnz
sub
sbb
mov
cltd
inc
iret
mov
fists
or
fistl
cld
movb
cmc
lods
in
pop
ficoms
rcrl
or
dec
mov
or
js
jo
dec
sarl
push
push
ja
inc
sti
int3
or
and
mov
pop
ss
xor
adc
addr16
into
sarl
sub
in
pop
pop
divb
jg
out
xor
mov
pop
fdiv
cwtl
in
bnd
bound
mov
mov
mov
cmp
loop
mov
sti
sub
popa
mov
int
jbe
dec
mov
mov
sbb
arpl
insb
cmpsl
pop
cmp
push
inc
mov
push
push
cmp
js
ljmp
mov
call
add
and
xor
int3
dec
nop
repnz
jne
adc
jp
inc
pop
fsubs
subb
out
stos
push
movsl
addr16
push
outsl
mov
loope
leave
mov
pop
lds
lds
push
loopne
insl
push
mov
cld
xchg
iret
add
int
inc
sub
xchg
cmp
into
xchg
inc
mov
in
out
pop
es
pop
dec
lock
dec
jl
cmpsl
cmp
xlat
pop
pop
mov
aam
lods
push
fldl
dec
xor
cltd
xchg
dec
arpl
dec
jae
xchg
sub
sub
xchg
in
mov
cmp
fildl
inc
aad
xor
inc
sti
fmulp
xor
push
cmp
add
cmp
sbb
jge
sbb
ja
pop
in
mov
testl
xchg
jg
push
mov
xor
sbb
arpl
scas
lahf
cli
scas
cmpsb
arpl
mov
dec
lret
lock
out
push
pop
fnstsw
gs
xchg
lea
icebp
hlt
push
out
or
mov
into
pusha
test
lds
adc
js
push
das
push
dec
add
add
aas
mov
mov
sbb
lret
fucomip
dec
test
push
mov
movsb
mov
mov
xchg
out
je
repnz
fbstp
rcr
push
xchg
popa
dec
adc
stc
leave
pop
loopne
lahf
loope
in
movl
jle
xchg
cbtw
fcoms
divb
jl
aas
xchg
daa
sub
mov
into
mov
jl
leave
out
lock
out
adc
adc
mov
fstpl
push
div
fsubrp
and
loop
jo
fcomps
or
jae
cmpsl
mov
arpl
lret
nop
loopne
adc
inc
push
adc
mov
add
ja
xchg
lahf
add
dec
ret
pop
cmc
pusha
push
les
xlat
or
sub
jl
lcall
jne
xor
push
lret
inc
les
or
outsl
clc
add
adc
pushf
push
pop
mov
dec
push
pop
inc
jne
cmc
dec
cmpsb
sbb
and
xor
inc
dec
mov
out
inc
in
lret
and
orl
add
inc
pop
mov
dec
adc
fcoms
push
stos
jns
int3
jne
xchg
sbb
inc
lods
sub
ds
adc
fimuls
or
loope
jb
mov
popa
sbb
jg
cs
or
xchg
add
cltd
nop
and
fisttpl
sub
and
data16
jo
cmp
mov
lods
mov
ds
lea
sbb
sub
mov
fwait
mov
cmpsl
inc
adc
mov
pop
movsl
out
mov
jg
jae
into
adcb
sbb
dec
xor
rcrl
fimull
fildll
mov
xchg
sbb
push
cli
inc
packuswb
fidivrs
xchg
cmp
mov
mov
pop
gs
cld
cwtl
mov
repnz
xchg
int
push
xchg
pop
inc
add
lods
sub
lods
push
rorl
scas
ret
jmp
add
mov
mov
mov
cmp
movsb
xor
sti
mov
clc
lods
mov
mov
sub
mov
add
imul
dec
and
movsb
pop
sub
dec
stc
push
xlat
or
test
sbb
lret
xor
je
ja
dec
add
adc
fwait
sub
xor
cs
dec
call
iret
cld
repz
pop
or
cs
std
clc
jp
ficompl
rclb
arpl
es
fisubl
push
gs
pusha
std
movsb
jecxz
call
test
shrb
push
mov
pop
mov
cmp
sbb
mov
mov
lcall
mov
arpl
push
les
adc
inc
dec
out
ljmp
out
jae
xchg
push
fstl
mov
pop
pop
add
lret
mov
xor
dec
aad
imul
leave
dec
jnp
mov
rcrb
in
adc
test
fbld
lret
scas
push
mov
add
aaa
fmulp
push
sub
and
mov
inc
inc
hlt
idivl
aad
or
xchg
inc
incb
mov
inc
mov
data16
push
imul
arpl
cmc
das
add
iret
or
add
arpl
je
leave
shrl
jns
icebp
je
rol
add
es
fcompl
leave
arpl
dec
push
lds
mov
fwait
dec
roll
andb
and
loop
hlt
jbe
stc
add
dec
mov
mov
bound
adc
out
jnp
sahf
movsb
subb
repnz
add
inc
xorw
pop
mov
fisubrs
shrl
stc
xor
sbb
aam
sub
idiv
rolb
mov
add
test
inc
pushf
push
ss
insl
cltd
dec
jbe
sar
push
mov
lock
xchg
outsl
or
and
fsubs
mov
hlt
push
mov
mov
push
ja
push
or
adc
out
xor
rorb
xchg
sbb
mov
or
in
movsl
xor
addr16
pop
addl
push
sahf
adc
or
push
lock
pop
rcr
stos
push
lcall
ficoms
je
jecxz
aas
sub
scas
stc
pop
in
lcall
cmp
adc
jnp
sbb
stc
iret
out
xor
jns
ficomps
jbe
ss
xchg
stos
lods
add
pushf
cmovge
sub
lock
das
add
aam
jns
inc
xor
in
loop
test
sti
cmp
lods
mov
insl
ficomps
inc
or
cwtl
add
enter
inc
inc
jle
imull
mov
xor
bnd
fistpl
loopne
cld
inc
push
inc
pop
leave
adc
clc
cld
xor
inc
outsl
movsb
or
push
les
pop
bound
jge
fstl
rcll
xchg
out
sarb
xchg
cmp
mov
cwtl
fistpll
or
sub
lods
cmovae
movsb
sarl
mov
aad
inc
pop
jge
rorb
xlat
xchg
adc
movsb
lret
pop
xlat
int
js
adc
ret
fcomps
push
push
cwtl
adcl
add
dec
sbbb
in
jmp
call
cmp
outsb
mov
test
adc
adc
mov
jmp
std
xor
mov
mov
add
fldl2t
xchg
or
sub
int
and
int3
arpl
pop
sqrtps
test
xor
jns
cmp
movsl
mov
fdivs
sbb
push
mov
push
sbb
data16
loope
xorl
pop
jnp
sub
gs
test
mov
mov
sbb
sahf
add
cld
jge
divb
lret
lock
popa
inc
cs
enter
pop
pop
insl
inc
adc
lcall
dec
push
lods
je
incl
adc
sub
cmpsl
cs
or
sahf
pushf
scas
in
sub
scas
sbb
jl
ret
xor
imul
lcall
out
pop
cmc
pop
loop
or
or
adc
add
or
xor
mov
jge
movsb
pop
cld
test
in
daa
imul
sub
pop
push
sti
shll
ror
ss
jg
mov
cwtl
jg
jno
test
xchg
hlt
mov
inc
daa
lret
loope
push
out
scas
xlat
dec
adc
mov
adc
cmp
fistpl
inc
or
stc
ret
neg
inc
jo
add
cmp
iret
inc
push
scas
mov
ss
in
ret
dec
pop
push
repz
mov
ffree
stos
fnstenv
sub
call
sahf
loope
adc
lcall
aad
fnstcw
fadd
adc
xor
dec
mov
xchg
out
addr16
cmpsl
leave
mov
std
jb
in
inc
dec
mov
fwait
mov
fs
dec
sbb
scas
loop
rcll
jnp
mov
ficomps
in
push
xorl
adc
paddd
jnp
pop
fimull
test
xchg
mov
fiadds
sub
jae
cmp
mov
fisubrs
pusha
arpl
insb
adc
push
add
xchg
inc
in
add
mov
je
xchg
mov
mov
adc
or
pop
scas
popw
sbb
cmp
out
sti
lahf
or
pop
clc
mov
loopne
nop
sbb
push
jbe
mov
ja
dec
fwait
jb
repnz
jg
mov
pop
insb
adc
pusha
test
int3
ljmp
cmp
sub
push
movsl
mov
stos
and
xor
xor
mov
mov
sub
ds
sbb
xor
lea
and
in
sub
je
movsb
and
mov
push
adcb
cmp
repz
jg
jecxz
and
nop
push
push
test
pushf
or
inc
dec
mov
dec
inc
daa
cmc
xchg
cmpsl
cld
or
push
cmc
ret
xor
enter
test
pop
fs
xchg
sti
xchg
popa
insb
roll
lods
or
mov
add
inc
lretw
int
push
mov
cwtl
xchg
or
test
mov
xor
loopne
add
cmp
and
cmp
je
cmc
lock
nop
pop
jns
push
add
adc
mov
js
cmp
jl
mov
mov
jns
aaa
xchg
jbe
add
pop
add
mov
or
fsubrl
dec
mov
or
xchg
sbb
cmp
imull
das
cmp
test
push
push
fimull
into
fcoms
xchg
push
mov
arpl
imul
inc
movsl
mov
mov
cltd
push
mov
pop
sbb
xor
ret
xchg
mov
test
jge
loope
cwtl
jbe
pushf
jp
outsb
scas
push
mov
popf
sahf
mov
or
and
ret
test
fs
outsb
mov
fwait
in
mov
sti
icebp
jmp
lock
leave
test
xchg
add
scas
nop
imul
test
mov
icebp
mov
cmpsl
mov
add
test
notb
xchg
loop
insb
jne
outsb
lahf
outsb
bound
mov
ljmp
movsl
and
cmc
shrl
dec
les
jae
icebp
cmp
movsl
arpl
dec
push
xor
mov
mov
dec
test
push
cmovge
xchg
cmpsb
sbb
test
push
lahf
adc
push
movsl
cmc
lcall
scas
or
mov
movsl
mov
push
cmp
nop
movsl
or
mov
dec
xor
mov
les
int
mov
stos
adc
leave
negb
das
cmp
insb
mov
out
stos
or
ret
lods
pusha
push
sbb
lds
push
jge
out
negb
sub
popl
push
popa
sti
push
xchg
lea
adc
inc
sub
jmp
fs
cmpsb
and
push
dec
js
fisubl
xorb
sti
sar
shll
jne
hlt
or
jl
xor
cs
ds
repnz
mov
cli
lcall
lock
xchg
push
mov
cltd
cli
mov
les
jb
into
add
js
notb
lret
inc
out
or
and
aam
int
pop
pop
mov
jp
xor
cli
push
aaa
les
jg
repnz
les
jo
cld
push
or
pushf
gs
rorl
adc
mov
xchg
imull
sbb
mov
cld
push
data16
into
mov
adc
push
jl
imul
das
mov
sub
mov
mov
mov
insl
rorb
or
sarl
repz
loop
test
pop
sarl
les
rclb
inc
xchg
pop
mov
jb
mov
xor
ret
inc
repnz
test
sub
fmuls
sub
or
add
lock
dec
adc
lahf
scas
pop
jo
test
mov
shr
mov
daa
jmp
mov
mov
popa
pop
fisttpll
mov
xchg
jmp
rcr
mov
sub
push
es
fistl
sti
les
and
mov
loopne
out
xchg
add
dec
orb
jecxz
popa
iret
jge
imul
imul
fwait
ror
daa
cmp
pop
jmp
and
loopne
mov
mov
mov
sub
idivb
xchg
sbb
or
lds
cwtl
add
xchg
adc
fidivl
jp
ror
lahf
imul
shrl
test
inc
and
mov
mov
xor
or
fisubl
or
sbb
and
int3
cmp
cmpsl
pop
mov
scas
pop
add
sub
sub
sbb
int3
out
push
pop
mov
gs
xchg
jp,pt
dec
cwtl
push
mov
cmpsl
xchg
and
aad
add
fxch
popf
test
bound
and
xchg
arpl
mov
pop
mov
fwait
leave
dec
mov
popf
fstpl
mov
adc
or
pop
cmp
int
sbb
aam
out
neg
les
mov
sub
jp
ss
pop
fsubrs
test
adc
mov
loope
push
add
xor
scas
cmp
cli
xchg
jmp
popf
pusha
sahf
sbb
mov
jno
pop
jo
jae
mov
imul
cmc
mov
test
inc
inc
adc
ret
inc
cwtl
pop
fcom
fwait
lahf
mov
or
push
mov
scas
js
inc
cwtl
adc
and
ret
in
lcall
popa
sti
sti
xchg
sbb
adc
jmp
icebp
test
call
sbb
add
and
lahf
in
scas
rcrb
and
scas
add
js
mov
into
popf
in
sti
xchg
outsb
adc
xchg
jmp
imul
pop
fsubp
mov
js
push
test
std
pop
pop
icebp
add
mov
mov
sub
jg
xchg
orl
mov
ret
jo
xor
les
mov
movsl
push
movsl
mov
pop
pop
in
cmp
outsb
out
daa
sub
push
je
cmp
cmpsb
jmp
sub
and
cmp
lret
sbb
gs
mov
pop
out
insl
sub
push
pop
push
into
adc
rclb
and
insb
push
cmp
sub
fldt
adc
sub
mov
xor
sub
fwait
sbb
movsb
inc
push
sub
scas
cmp
mov
scas
push
inc
mov
dec
int
xor
push
fiadds
mov
call
xor
popf
mov
cmpsl
and
std
stos
fs
cmp
stos
mov
jle
test
stos
cmp
icebp
les
imul
push
sar
cltd
lea
popf
mov
fwait
bound
outsb
cmp
gs
pop
outsb
test
pop
fisubs
xor
in
dec
push
jns
outsb
pop
jl
ss
pop
add
shlb
xor
push
xlat
cld
or
or
addr16
push
lods
mov
pop
and
pop
xchg
fwait
pop
or
xor
cmpsb
mov
pop
repz
scas
xchg
mov
iret
xchg
mov
mov
xlat
dec
push
or
in
dec
inc
bound
fsubrl
pop
mov
mov
adc
fistl
xor
push
ljmp
or
cmpsl
mov
mov
jmp
test
in
loopne
loope
lods
jb
out
pusha
mov
mov
xchg
adc
mov
and
fmull
movsb
add
or
mov
mov
pop
loopne
and
mov
orb
sbb
and
ret
sub
out
out
std
xor
and
aam
xchg
dec
sub
dec
pop
push
pop
imul
cmp
and
mov
fidivrl
popf
dec
xchg
scas
lahf
shll
enter
pop
push
jle
mov
call
cli
jle
sbb
leave
mov
mov
leave
addr16
pop
sub
pop
in
movaps
push
loopne
cs
nop
xlat
inc
pop
pop
repnz
sub
setle
fsts
std
or
sbb
sub
sbb
sbbb
pusha
dec
inc
sub
fsubrs
xchg
adc
call
inc
out
mov
scas
cli
sbb
clc
out
repnz
leave
mov
pushf
int
data16
pop
inc
js
xor
cmc
mov
adc
mov
fsubrs
testb
ss
cmp
jb
clc
daa
xchg
jg
bound
add
push
mov
mov
xor
mov
test
inc
mov
mov
dec
repz
testb
out
mov
idivb
pop
fisubs
add
jo
fidivrl
mov
pusha
icebp
rorb
repnz
mov
inc
xor
or
add
arpl
int3
aam
lahf
or
cmp
test
sub
fcomi
in
jb
cmp
pop
jnp
jp
pop
push
adc
lahf
dec
mov
jmp
ja
mov
mov
mov
and
mov
mov
pushf
aaa
scas
jg
in
push
outsl
ja
cwtl
add
jbe
mov
sub
movsl
xor
adc
adc
jg
and
iret
mov
icebp
stos
mov
test
testb
loopne
push
mov
nop
out
push
jbe
inc
mov
xlat
xor
jecxz
lret
aas
mov
push
outsl
add
inc
scas
add
sbb
in
negl
stc
nop
push
js
mov
ds
adc
jns
cmp
popf
inc
sti
cmp
pop
lahf
mov
divb
mov
cs
ret
fdivrl
out
dec
and
out
je
sub
test
ret
enter
jb
pushw
test
cmp
pavgb
clc
dec
es
mov
je
or
in
data16
fistps
xor
lock
dec
stc
cli
xchg
dec
xor
cmc
jae
push
lea
sqrtps
inc
out
fistl
push
mov
push
loopne
lea
jp
adc
and
mov
dec
inc
stos
orb
fwait
xchg
das
lcall
and
push
mov
mov
pop
and
cld
pinsrw
aam
mov
inc
jge
xchg
push
js
into
adc
add
into
dec
lahf
test
and
cmpsl
adc
pop
daa
repnz
imul
je
imul
xor
push
cmpsl
repnz
cmpsb
jb
mov
fadds
into
jge
or
out
jo
push
sbb
frstpm(287
mov
imul
aad
int3
and
jno
movl
loope
jecxz
and
pop
mov
ss
cs
push
leave
into
stc
rcr
pop
mov
ret
mov
xor
addb
in
sti
test
lds
sub
xlat
mov
scas
shrl
ja
lahf
cmpsl
and
inc
add
mov
cmp
std
fcmovu
xor
mov
jns
cmp
inc
push
sub
and
hlt
shrl
in
jmp
divb
out
dec
mov
mov
adcb
jo
cld
shll
add
je
sub
dec
or
cmp
xor
push
loopne
int
inc
or
mov
scas
ljmp
scas
fnsave
pop
outsb
pop
cmp
sub
inc
inc
push
sbb
rorl
popa
cli
imul
lcall
bound
dec
jge
and
out
or
shlb
or
xchg
stc
jno
ret
adc
insb
repz
mov
imul
pop
movsl
lock
pop
in
aaa
movsb
rorb
add
jo
ljmp
inc
mov
dec
je
call
out
xchg
xchg
in
or
add
xchg
fwait
jns
lock
mov
pop
rcll
iret
fidivrl
cmp
imul
enter
int3
daa
jp
lods
dec
xchg
out
inc
mov
out
push
mov
mov
mov
ret
in
aas
and
mov
sub
mov
xchg
pusha
mov
adcl
adcl
je
sub
cmpsl
or
sbb
out
pop
pop
movb
dec
setle
dec
push
adc
adc
fistps
or
mov
cmp
sub
inc
pop
xchg
lock
push
hlt
mov
stos
sbb
push
femms
out
push
hlt
xor
andb
bswap
out
inc
negb
or
sub
adc
mov
lock
sub
mov
shlb
pop
scas
lock
movb
into
mov
es
adc
inc
mov
push
std
jno
push
cmp
jl
or
or
add
and
push
popa
add
addr16
cmpsb
fwait
dec
xchg
iret
jno
cmp
int
cmp
hlt
sahf
sti
push
daa
outsb
orl
xchg
or
lods
sbb
sbb
dec
jle
jle
xchg
pusha
jg
clc
es
lret
pop
mov
rcrl
int3
add
pop
out
int3
decl
test
insl
adc
inc
fs
add
jecxz
xlat
push
inc
cmpsb
push
enter
movzwl
inc
push
in
insl
xor
mov
adc
test
ljmp
adc
das
jg
mov
test
jl
adc
gs
push
popa
and
shl
pop
aas
adc
push
xchg
int
or
mov
fwait
push
pop
inc
mov
int
push
mov
mov
imul
stc
gs
push
mov
es
leave
jge
mov
cli
test
xchg
fcmovne
mov
xor
xchg
das
std
push
adc
shl
add
cmpsb
jle
dec
aas
pop
ljmp
push
addb
arpl
jge
inc
sahf
add
push
or
adc
shr
push
int
enter
aam
jnp
mov
mov
rcrl
les
enter
cmp
stos
ret
mov
push
in
cmp
lret
xor
in
inc
xchg
out
mov
mov
push
mov
pushf
js
cltd
mov
mov
fsubl
sahf
lret
insb
or
xchg
in
pop
mov
outsb
cmp
stos
dec
push
fwait
mov
iret
outsl
or
push
out
lea
icebp
mov
mov
and
sti
mov
jae
jmp
dec
fisubs
add
cmp
imul
dec
in
xor
in
test
push
jl
jno
inc
push
data16
fwait
push
cmp
int3
jb
xchg
cwtl
shll
sbb
in
mov
pop
fwait
adc
jne
mov
fisubl
sarb
arpl
rcrl
pop
xchg
lret
adc
inc
fnstenv
and
add
sbb
mov
les
add
fmuls
lahf
pop
testb
pop
mov
pop
sub
ss
xchg
inc
imul
and
pusha
mov
in
fisubs
fisttpl
push
pushw
xchg
inc
push
sbb
popf
imul
les
pusha
push
dec
rclb
xor
lea
stos
mov
imul
xchg
xchg
test
jnp
push
or
xchg
movsl
imul
pop
fdivrl
sub
js
arpl
loopne
aas
mov
repnz
cld
jp
add
les
jbe
push
subl
sbb
xor
xchg
add
add
or
cwtl
and
js
out
xchg
inc
repnz
iret
lahf
xchg
sub
orl
mov
pop
mov
sbb
cltd
mov
setne
inc
aaa
adc
mov
and
adc
dec
pop
jmp
repnz
push
ret
pop
test
fsubrp
inc
insb
stc
fstl
mov
pop
addb
lods
xor
jnp
add
mov
pop
call
adc
mov
mov
clc
je
mov
aad
xchg
lret
jge
or
adc
jb
adc
mov
mov
popa
scas
addl
roll
cwtl
lea
add
jecxz
inc
push
cmp
cltd
icebp
incb
aas
jg
in
jmp
std
fwait
cld
ljmp
jno
pop
inc
cmp
test
in
lret
dec
stos
cmp
adc
outsl
inc
jle
popf
inc
push
lods
popf
nop
je
jge
pushf
ret
cmp
mov
aaa
or
adc
add
aam
mov
cwtl
mov
and
mov
dec
scas
das
jecxz
lcall
test
cld
pop
inc
es
cmp
fs
push
push
jno
loop
stos
aam
out
mov
ja
out
int
jle
inc
jmp
lcall
outsl
pushf
jg
xchg
adc
push
jns
add
mov
cmpsb
xchg
mov
jmp
fdivrs
cmpsb
xor
add
bound
sbb
stos
mov
push
jecxz
ljmp
xor
divl
cmp
paddd
mov
xchg
dec
push
jmp
and
jl
cltd
pop
out
nop
xor
push
loop
sti
cmp
test
jno
lea
push
movsb
inc
insl
fs
push
dec
dec
jae
ja
mov
jecxz
lea
addr16
aad
and
sub
jle
or
imul
dec
sti
cmp
data16
cmpsl
jns
adc
cwtl
adc
sbb
pop
inc
cld
add
push
dec
and
imul
rolb
jmp
inc
xchg
xor
fdivrl
pop
ja
sub
pop
mov
pop
or
aaa
jo
jno
cmpsb
rcrl
addb
xchg
in
lds
cmp
inc
cli
jno
add
daa
outsb
in
punpcklwd
push
in
pop
nop
inc
or
fst
mov
sahf
cmpsb
das
sub
imul
ljmp
popf
push
into
push
inc
mov
call
and
mov
daa
aam
jle
sar
push
mov
mov
test
push
lret
push
dec
pop
add
inc
movsl
lds
fucom
imul
popf
mov
aam
loopne
out
aam
cwtl
sbb
out
dec
stos
cmp
enter
or
pop
lahf
push
or
cwtl
jo
fisttpl
adc
lret
xchg
dec
push
dec
scas
test
sub
adc
fchs
push
jne
cld
insb
ret
scas
roll
jp
push
sbb
hlt
mov
mov
adc
add
ds
sub
and
ud2
push
lret
movsl
fucomi
mov
mov
dec
push
fst
fucomp
outsb
cltd
xorl
enter
and
add
out
adcb
dec
push
hlt
xchg
out
stos
xor
aaa
cwtl
inc
or
daa
jle
nop
fstl
test
inc
sahf
dec
cld
dec
cld
mov
imul
and
jo
xchg
aad
xor
xchg
out
testb
mov
xor
inc
jp
push
xchg
std
and
inc
or
xor
fdivrs
std
pop
push
lds
dec
pushf
leave
lret
or
mov
pusha
add
sahf
out
mov
push
inc
push
stc
mov
imull
sbb
out
pop
xchg
pop
jg
add
cld
stc
arpl
sahf
lods
daa
jns
jmp
mov
jmp
adc
imul
mov
sub
ficomps
lods
mov
push
scas
dec
or
xor
cmp
jg
addl
jp
or
fsubs
and
adc
inc
out
jo
data16
data16
out
cwtl
push
sbb
mov
mov
sbb
arpl
pop
shlb
iret
fisttps
pop
xchg
sbb
daa
add
add
sub
js
mov
cli
mov
mov
stos
in
inc
dec
lret
loop
xor
push
scas
push
idivb
add
fcoml
data16
adc
xchg
sbb
jg
or
xor
push
int
test
mov
nop
jg
ret
or
sbb
pop
sbb
ror
nop
fwait
repz
add
mov
aam
fs
jmp
hlt
imul
nop
sbb
pminub
pop
and
mov
xchg
jecxz
mov
dec
lcall
rcrb
std
out
mov
js
in
sub
jno
data16
imul
xchg
pusha
xchg
stos
ja
dec
cmp
icebp
and
scas
out
cmp
pushl
and
cwtl
dec
outsb
out
and
pop
and
mov
inc
leave
xor
sbb
insb
mov
mov
cmp
lret
and
les
add
iret
ret
outsb
push
imul
loop
bound
mov
push
adc
adc
aam
outsl
push
loope
mov
lds
mov
aam
cmpl
cmp
mov
adc
js
sbb
fsubrl
sbb
or
das
sub
dec
sub
add
fidivs
es
mov
dec
ss
mov
fsubs
jp
or
adc
fwait
pop
push
orl
ljmp
adc
jle
push
cmp
adc
test
mov
rcll
repnz
and
dec
mov
jle
cli
dec
js
xlat
jae
jle
mov
lcall
lods
divb
in
dec
cmp
das
lods
or
sti
and
mov
jecxz
adc
add
cwtl
hlt
jo
sbb
or
aas
jecxz
loop
das
cltd
fsubs
inc
pop
mov
and
or
out
mov
sbb
jecxz
jle
sti
add
out
and
push
dec
stos
sub
dec
jno
mov
push
jb
push
lock
aaa
xchg
sub
in
pop
fwait
popf
mov
mov
or
add
outsl
xor
mov
cmp
iret
pop
dec
scas
mov
push
push
int
cs
roll
push
xlat
xor
mov
sbb
loop
ljmp
pop
and
cli
jns
sub
jmp
mov
fcomps
and
sbb
inc
xchg
add
data16
fsubr
aas
xor
test
lods
jp
jmp
into
and
sbb
test
push
jns
jae
jo
mov
inc
nop
mov
lcall
addr16
mov
xchg
and
cmp
xchg
roll
out
les
and
mov
lret
fstpl
xor
imul
nop
dec
mov
push
repz
xor
pop
xchg
adc
les
push
push
sub
mov
das
lds
hlt
sub
cmp
scas
mov
xor
iret
xor
cmp
and
sti
aam
and
push
rorl
fadds
cwtl
xchg
roll
std
call
pusha
adc
jp
pushf
add
jmp
xchg
stos
hlt
pusha
lret
movb
pop
mov
sub
mov
in
repnz
jge
sub
mov
repz
inc
push
xchg
out
lret
fldenvs
addr16
jo
dec
out
xchg
lcall
repz
mov
lea
jg
xor
dec
sbb
pop
jp
xor
lret
push
stc
mov
dec
aam
inc
mov
xchg
imull
xchg
xor
dec
push
mov
sbbl
and
popl
mov
jo
xchg
push
ret
xchg
loop
sbb
hlt
clc
mov
sub
sub
int
sbb
xchg
rcrl
cmp
push
test
push
lret
loop
jge
mov
fdivs
dec
in
rcrl
adc
fs
lods
mov
test
inc
sahf
lods
in
addr16
xchg
testb
add
popa
lahf
xchg
daa
shl
jne
jmp
sub
mov
lret
fimuls
out
filds
jbe
xor
hlt
jmp
jmp
sbb
nop
jns
pop
testb
mov
test
sbb
roll
mov
and
push
add
mov
cmpsb
push
mov
or
rclb
push
addb
inc
and
jmp
popa
and
cmp
jl
pop
clc
dec
xor
mov
scas
aad
xchg
imull
cli
les
jp
mov
cmp
adc
jae
test
pop
inc
inc
jns
jle
mov
cmpsl
loope
jns
cmpl
xor
lods
mov
lods
add
fsubl
add
std
mov
cmpsl
lock
push
ret
inc
push
imul
aam
leave
mov
ret
rcl
shlb
and
xchg
fisubrl
push
and
insb
ret
bound
bound
shl
jns
add
mov
dec
xchg
add
loope
cmp
and
push
fldt
mov
aas
push
push
repz
mov
dec
and
mov
scas
imul
mov
mov
xchg
push
cltd
mov
adc
and
ret
jmp
sti
lahf
jg
mov
aaa
cld
dec
push
insb
and
cmp
lret
xchg
into
xor
insb
sub
loopne
pop
mov
cmp
mov
fwait
or
stos
adc
xchg
dec
and
pop
movb
mov
pop
xorl
adc
ja
fnstsw
repnz
xor
inc
mov
xor
push
sub
or
punpckhwd
mov
gs
loop
add
inc
push
popa
aam
fbstp
xor
scas
out
mov
mov
std
repnz
push
push
loop
inc
stos
and
mov
adc
es
or
push
jns
push
loopne
mov
jp
jns
mov
mov
dec
fisttpll
testl
das
dec
inc
js
and
adc
or
mov
dec
jne
sbb
cmp
test
push
jmp
sub
mov
sbbb
mov
xchg
add
pop
jecxz
adc
and
cmp
add
aaa
outsl
gs
cmp
sahf
push
in
bound
dec
test
js
cmc
jmp
inc
mov
mov
and
sub
inc
push
push
xchg
fs
stc
std
mov
repnz
xchg
ss
mov
out
fsts
out
jge
or
loopne
call
dec
shlb
ror
jp
dec
inc
or
in
sbb
lds
inc
insl
adc
andb
pop
adc
aaa
iret
ljmp
stos
xor
xor
jo
adc
mov
or
shlb
dec
push
fisubl
mov
xchg
mov
cmp
or
mov
sbbl
aad
mov
mov
xor
jp
nop
and
adc
dec
fisubs
mov
sbb
das
adcl
sti
int
mov
pop
int
movsb
sbb
sahf
loop
imul
push
fnsave
mov
arpl
dec
inc
lods
fdiv
dec
fcmovbe
pop
sti
xor
mov
aad
jp
cltd
jns
jnp
sti
std
and
pop
xchg
lds
out
mov
xchg
outsb
lcall
out
pusha
sbb
bound
mov
sub
mov
mov
lods
psubusw
xchg
inc
jo
dec
cmpsl
mov
pusha
in
in
test
adc
outsb
mov
lret
sahf
mov
lock
inc
mov
pop
push
lret
cltd
fwait
int3
jno
rcrb
repz
lahf
mov
pop
ja
adc
add
in
xchg
fdivl
jle
leave
bound
adc
fnstsw
pop
adc
xchg
add
push
roll
stos
fsubs
xor
outsb
sub
mov
es
cld
push
mov
inc
scas
sbb
enter
das
div
mov
pushw
pushf
scas
scas
push
ds
sub
int3
pop
sti
stos
std
faddp
mov
mov
push
fbstp
das
and
jbe
fnstcw
mov
loopne
sahf
sub
arpl
aam
dec
mov
iret
inc
pop
sub
sbb
fs
sbb
adc
jns
outsb
mov
pop
std
mov
clc
imul
data16
scas
icebp
jmp
shlb
inc
imulb
jo
addr16
inc
popaw
adc
je
rcl
mov
mov
insl
shlb
xor
neg
push
jnp
loopne
lret
pop
cmp
xchg
stos
push
dec
and
orl
test
int3
outsl
cmc
or
jle
shll
xor
or
push
push
mov
mov
cmp
rep
sbb
lods
mov
lret
xchg
xor
popf
out
fs
pop
sub
push
or
mov
jnp
jl
bound
stc
push
xor
repz
mov
xchg
in
bound
popa
pop
and
sbb
adc
popa
mov
jno
aaa
js
cmp
sbb
xor
sbb
insb
decb
ret
hlt
inc
adc
rcrb
push
lock
lock
ret
negl
xchg
js
lods
mov
pusha
popf
or
lock
sub
mov
inc
and
or
fdivrp
jb
dec
add
in
popf
enter
faddl
or
sub
jecxz
int3
push
out
pop
cmpsb
xor
push
fwait
sti
inc
icebp
out
lds
cmp
outsb
inc
test
shll
fists
stos
dec
mov
stos
pop
sbb
aam
mov
lock
cmp
ficoml
aas
xor
dec
cmp
test
jl
ret
inc
pusha
mov
ljmp
push
loopne
mov
shld
mov
imul
andl
sbbl
adc
or
lods
stos
pop
sbbl
loop
mov
imul
add
iret
es
test
sbb
in
and
jb
mov
jmp
imul
push
cmp
cld
push
fs
dec
xchg
add
lods
movsb
aas
xor
xor
xchg
mov
fnstenv
adc
adc
pop
and
push
dec
sbb
push
cmpsl
and
fistps
xchg
int
inc
lds
mov
out
mov
push
or
clc
fldcw
icebp
mov
push
cmp
xchg
xor
inc
cwtl
and
mov
idiv
push
dec
mov
ja
mov
jmp
sub
xchg
sub
mov
pop
mov
sti
xor
cmc
icebp
xor
mov
in
push
sub
push
xchg
jae
std
fnstcw
add
jmp
fiadds
nop
push
fwait
aaa
lcall
cmp
jnp
repz
stos
rcr
mov
clc
out
push
xor
pop
rclb
in
adc
stos
cwtl
mov
dec
xchg
push
inc
jns
xchg
push
inc
lea
repz
mov
or
adcl
mov
pop
xor
shll
subb
cmpsl
push
xlat
pop
jns
test
mov
lods
sub
mov
lds
xlat
cwtl
inc
clc
and
or
dec
aam
cmc
jnp
pusha
xchg
leave
lret
cmp
xor
stos
mov
sbb
in
ret
in
xorb
adc
pop
sub
jo
leave
push
shrl
iret
mov
loopne
inc
cwtl
test
jge
inc
int
bnd
sub
scas
into
cmp
movsb
dec
lds
cmp
pusha
or
jae
sbb
lahf
enterw
sub
dec
int3
nop
ret
sub
ljmp
sbb
or
cmpl
lock
enter
andl
aas
jle
sbb
xchg
jo
mov
enter
inc
jmp
or
lahf
or
sbb
jne
cmp
add
xlat
movsl
mov
inc
lret
std
in
jmp
xor
outsl
imul
adc
mov
je
cli
jl
push
xchg
fwait
enter
fistps
dec
fsubrl
clc
aam
inc
loope
and
outsl
ljmp
movsb
jmp
loopne
insl
push
iret
hlt
mov
dec
mov
add
daa
mov
pop
xchg
jae
nop
out
in
mov
mov
sahf
xor
lret
lea
adc
cmpsl
daa
mov
in
hlt
pop
jecxz
bound
in
test
nop
sti
rclb
jbe
mov
dec
popa
mov
pop
mov
icebp
aad
sbbb
repnz
imul
sbb
int
test
je
add
push
ss
orb
adc
push
add
lcall
popa
shlb
aam
enter
mov
cmp
push
ret
in
add
cltd
mov
negb
lods
lahf
nop
adc
sbb
push
mov
lock
jne
inc
fists
jo
cli
js
dec
add
out
outsl
stos
mov
out
sti
cltd
addr16
sbb
lcall
xchg
icebp
in
cmpsb
pusha
mov
sub
cmp
add
std
es
dec
add
mov
xor
repz
sub
add
roll
loop
scas
js
xchg
pop
test
je
mov
pop
out
xchg
mov
lock
push
pop
je
fnstsw
mov
inc
test
jl
es
push
push
inc
in
mov
pushf
insl
and
lock
orl
cmpsl
leave
std
scas
es
je
mov
lret
into
cltd
cmp
sbb
lods
mov
jnp
mov
js
ljmp
out
and
faddl
cs
outsl
mov
loopne
xor
hlt
xchg
aaa
mov
rcr
mov
inc
xlat
call
enter
fcoml
popa
shrb
push
cmp
out
int3
jg
mov
sbb
stos
push
push
mov
mov
mov
inc
pop
hlt
or
lds
shll
adc
mov
cmp
sahf
outsb
pop
or
std
mov
jecxz
fld
mov
mov
roll
sub
pop
pusha
cmp
mov
sti
testl
xchg
clc
or
scas
cmp
clc
xchg
dec
pop
int
xchg
lock
dec
fwait
or
leave
jb
aaa
test
and
hlt
imul
push
jns
mov
dec
push
sub
shrl
push
mov
outsl
stc
and
test
push
je
js
mov
fmulp
pop
and
add
repz
fimull
adc
rcrb
jb
insb
data16
sub
xchg
push
push
stos
jo
xor
cmpsb
stos
in
mov
cmp
rep
sbbl
pop
push
push
jl
sahf
jne
mov
mov
add
loop
cmp
xlat
sub
fimull
or
push
cli
out
dec
push
jno
cmp
repnz
push
leave
cmp
inc
xchg
cmp
push
jp
pop
outsl
rorb
add
jle
cmp
and
scas
jge
xchg
aas
sbb
or
repz
sub
imul
loope
mov
outsb
push
xchg
shll
dec
cmp
add
dec
jns
mov
and
repnz
in
mov
pop
jg
adc
je
nop
and
in
jmp
pop
jecxz
adc
push
mov
outsl
mov
data16
into
loope
fsubs
pop
aam
adc
outsb
mov
push
sbb
daa
xor
mov
popf
xorb
dec
es
xor
mov
mov
push
icebp
movsl
sub
mov
push
into
xor
ss
mov
cmp
mov
pop
push
fwait
adc
mov
dec
fdivr
rorl
shlb
and
and
aam
fscale
cmp
mov
inc
mov
movsl
shll
in
xor
cmp
notl
jns
xor
sub
cwtl
lea
xchg
lret
cli
mov
popa
xor
xor
es
xchg
rcr
lods
ljmp
pushf
sbb
jb
shlb
out
cmp
sub
mov
loopne
push
pop
lahf
xor
push
fwait
jne
pop
mov
cmp
jmp
sub
pop
cmpsl
lock
xchg
mulb
fisttpl
inc
push
divb
dec
fidivl
mov
popa
pop
mov
popf
in
add
stos
call
mov
pusha
sbb
xchg
neg
ror
push
nop
inc
inc
outsl
mov
inc
cmp
loopne
negb
xlat
cwtl
sbb
mov
int
xlat
cmpb
and
arpl
out
mov
rcll
daa
xchg
xchg
xor
shrl
xchg
dec
outsl
and
mov
add
jp
and
jge
shl
inc
lcall
insb
pop
push
int
mov
mov
cmc
pop
out
test
aam
inc
add
inc
mov
test
push
xchg
xor
cmpsl
mov
mov
push
imul
or
xor
pop
call
lcall
in
add
pop
pop
adc
adcl
cmp
cmp
push
push
ds
pop
mov
cmp
imul
pop
int
sbb
xor
clc
or
sub
xchg
mov
imul
adc
push
rorb
shl
fadd
fcmovu
aaa
stc
aad
push
push
outsl
ds
and
lcall
lock
subl
and
mov
insl
dec
mov
lret
lahf
es
pop
and
and
mov
mov
pusha
cld
xchg
inc
fsts
adc
inc
jns
ja
js
gs
jmp
movsl
dec
push
ficompl
fnstenv
mov
pop
sbb
pop
mov
cmp
and
dec
lcall
adc
inc
shrl
int
sbb
xchg
rclb
test
xchg
insl
adc
in
jmp
icebp
call
iret
xchg
rcl
mov
fisttpll
pop
jne
lea
lods
and
inc
xchg
jmp
inc
mov
and
mov
je
test
add
nop
dec
std
sub
xchg
dec
mov
iret
jecxz
xchg
in
xchg
testb
push
pop
mov
sub
sahf
inc
adc
sti
sbb
xchg
out
sbb
shrb
ret
jbe
or
fisubl
into
xor
jg
std
mov
cli
push
jp
lret
pop
repz
stos
mov
mov
xor
mov
jo
nop
cmc
xchg
adc
xchg
pop
lock
data16
cwtl
stc
mov
pop
mov
dec
fs
data16
xchg
adc
mov
add
cmp
mov
adcb
xchg
sub
lret
push
mov
fistps
arpl
sub
test
mov
ds
addr16
sub
lods
jnp
xor
push
inc
mov
mov
dec
sahf
outsl
loope
xchg
xchg
sbb
aas
outsl
ja
subb
shll
push
stc
orb
dec
rcrb
dec
sbb
flds
iret
and
cmp
mov
arpl
xor
repnz
mov
lret
push
icebp
xchg
repz
ss
into
or
rorb
push
call
sbb
insb
jecxz
cmpsb
cmpsb
cmp
out
cltd
repz
and
mov
stc
dec
push
fstps
pop
fwait
adc
and
mov
mov
add
add
jl
addr16
into
test
adc
push
jg
push
xor
push
adc
std
sbb
mov
ja
xor
dec
je
push
data16
and
std
adc
jmp
scas
dec
mov
mov
test
or
jae
sub
push
mov
cli
xor
js
scas
mov
test
aaa
jbe
icebp
std
push
test
add
cmp
xchg
mov
shll
xor
outsb
xor
fcmovne
cmp
fmull
add
xor
add
lds
rol
das
jmp
js
adc
lods
jo
pop
out
shlb
std
es
sub
std
mov
push
jns
push
outsb
andl
adc
sbb
jae
adc
aam
mov
mov
pop
sub
cs
or
mov
sbb
xchg
xor
sbb
inc
in
arpl
mov
inc
dec
push
fidivrl
xchg
sbb
xchg
adc
cmp
inc
movsl
inc
scas
dec
sub
xchg
or
inc
ss
es
adc
inc
out
ja
clc
cmpb
shl
mov
add
insl
cmpsl
push
or
and
mov
add
lds
insb
imul
cmpsl
jnp
mov
dec
jbe
mov
cmp
cmp
loopne
mov
jecxz
sub
ret
jo
mov
pop
out
jb
les
jmp
inc
push
adc
das
and
mov
insl
jmp
dec
xchg
movsb
mov
xchg
test
icebp
lea
clc
jno
aad
sahf
xchg
fdivl
pop
repnz
fstpl
dec
add
pop
add
into
dec
push
mov
pop
out
into
repnz
iret
add
out
leave
std
jne
or
add
mov
dec
mov
push
xor
loop
sub
mov
xor
inc
cmpsl
rclb
scas
mov
push
mov
mov
icebp
or
or
scas
movsl
cmp
xchg
or
cli
test
sub
sbbl
call
sarb
cmp
add
pop
fsub
mov
add
scas
mov
push
pop
pop
aam
repnz
sbbl
ja
orb
dec
pop
mov
mov
and
fs
mov
sub
inc
dec
notb
dec
jo
icebp
jno
outsl
mov
ret
push
pop
push
test
fbstp
lcall
jg
dec
pop
mov
or
pop
jmp
pop
jno
pusha
fcoms
jge
popf
sarl
inc
arpl
shlb
jl
and
and
pop
inc
fists
xchg
xlat
imul
scas
test
in
xor
mov
add
shlb
or
push
cmpsb
dec
js
cwtl
hlt
mov
iret
mov
pop
push
out
jae
in
push
test
imul
fistpll
inc
dec
mov
loopne
ljmp
sahf
xchg
ja
push
shll
jns
pusha
pop
fstpl
mov
lock
rorb
sbb
incl
inc
sahf
imul
rcrb
jae
pop
inc
jns
lret
cld
mulb
adc
add
imul
sahf
cmpsl
adc
lret
popf
dec
jg
mov
push
sbb
call
mov
aad
ret
add
push
mov
sbb
hlt
push
add
jae
mov
ds
and
ljmp
mov
pop
adcl
dec
in
in
ficompl
cmp
pop
dec
and
sti
sub
dec
sub
pop
pop
jns
out
mov
jns
inc
mov
movsb
nop
sub
pop
flds
jg
cmc
cwtl
pop
scas
insl
adcl
jae
inc
ret
ja
sub
adc
mov
mulb
fisubl
scas
pop
pushf
pop
cmp
push
push
test
sub
mov
outsb
mov
int
inc
fists
into
fst
pop
mov
cmpsl
lret
out
out
or
mov
lret
push
xchg
inc
cmp
sbbb
test
cmpsb
xchg
out
xchg
push
nop
mov
mov
sbb
out
mov
jae
or
jmp
mov
add
dec
jmp
int3
movsl
cmpsl
inc
sbb
xorl
cmp
pop
pop
sbb
cwtl
fstpt
xchg
inc
outsl
pop
mov
jbe
dec
sbb
lahf
in
insl
rcrl
lret
inc
mov
mov
popf
add
cmp
and
pop
inc
xchg
dec
pop
aas
sbb
mulb
jl
adc
mov
test
sub
push
out
sbb
pop
in
adc
sbb
sbb
sbb
jae
mov
fbld
push
or
pop
inc
repnz
loope
and
inc
loopne
sti
cmp
ss
mov
clc
aas
test
xor
mov
jae
jle
mov
popf
cmp
mov
mov
push
ret
out
mov
push
lods
orl
or
xchg
stos
stc
out
mov
cmpsb
push
jge
xor
push
movsb
imulb
fdivl
out
daa
roll
xchg
cmpsl
push
mov
es
dec
test
mov
movsb
jecxz
add
fcoms
mov
mov
outsl
push
pop
addl
in
jl
ret
aas
sub
adc
push
and
idivl
xchg
or
push
adc
or
push
int3
test
mov
adc
loop
mov
ret
jo
je
loop
or
dec
roll
dec
in
imul
cmp
fdivs
mov
arpl
xchg
fiaddl
rcr
add
jns
adc
push
push
stc
or
mov
jbe
neg
lret
mov
cmp
mov
sub
pop
negb
sub
sub
adc
and
adc
std
cmpsb
mov
add
aam
jns
sub
cmpsl
mov
xor
pop
pop
cmpsl
inc
or
iret
popf
outsb
mov
or
push
lods
out
xchg
xchg
jle
lcall
push
or
adcb
sub
adc
sbb
cmc
jecxz
in
or
rcl
xchg
sbb
and
cmp
sub
movsl
mov
xlat
sub
xor
rclb
xorb
and
sub
jo
cmp
stos
inc
xchg
mov
sbb
xor
testl
pop
xchg
test
push
adcb
outsl
ljmp
sub
lret
or
mov
stos
adc
hlt
rorb
jmp
push
ljmp
mov
sbbl
jno
jne
aam
js
addr16
push
pusha
call
popf
iret
pop
test
orl
jnp
add
mov
roll
fwait
imul
and
xchg
ja
pusha
cmp
lea
mov
repnz
jo
push
mov
and
frstor
leave
mov
inc
xchg
cmp
sbb
imulb
mov
adc
xor
jl
xlat
pop
mov
adc
pop
in
xor
fnstenv
xchg
arpl
sub
adc
and
fmull
mov
addr16
and
dec
mov
lods
or
push
mov
inc
ret
cmp
popf
sbb
into
and
or
dec
dec
clc
sti
cwtl
mov
sbb
inc
mov
sub
inc
out
xor
sbb
rcl
add
clc
push
test
and
into
test
int
lods
mov
add
testl
ds
mov
scas
mov
lods
cmp
inc
das
fs
mov
push
fsts
sbb
or
jge
lcall
mov
leave
scas
push
xchg
sti
daa
pop
loope
stc
sub
movb
imul
mov
mov
sbb
fimull
pop
pushf
sub
push
das
cmp
sbb
xchg
aaa
or
dec
mov
in
jmp
outsb
loope
sub
xor
sbb
lret
and
push
inc
dec
jl
lret
pop
lret
mov
movsl
mov
daa
cmp
scas
inc
movsl
test
mov
es
xor
pop
cmpsl
xor
jmp
leave
je
sub
in
fnstenv
inc
jno
jne
insl
inc
pop
and
sbb
pusha
leave
in
pop
mov
push
mov
ret
in
mov
or
xor
aaa
push
and
jmp
adc
jb
cmpsl
adc
outsl
dec
aam
lods
jnp
sub
jnp
mov
scas
jmp
insb
test
mov
xchg
ja
xor
mull
aad
inc
out
mov
xchg
adc
push
sub
mov
mov
imul
mov
aad
jl
outsl
mov
and
shl
outsl
pop
xor
xor
xor
ss
rolb
pop
xor
push
pop
mov
sbb
sub
inc
mov
adc
cmp
jmp
mov
sbb
ror
push
or
test
mov
icebp
mov
sarb
xor
ja
cmp
loopne
cmp
mov
and
outsl
cmp
in
or
imul
loopne
xchg
aas
aam
mov
jp
and
hlt
push
shll
jl
in
pop
popa
int
pop
push
inc
and
sbb
xchg
lock
and
ja
pop
loopne
cmp
rorb
pop
sbbl
and
test
dec
lahf
and
insl
enter
hlt
dec
xlat
loop
pop
cmpsb
std
add
inc
sub
xbegin
cmpsl
add
and
ror
fs
test
jge
in
outsb
stos
adc
sub
pop
push
subb
xchg
adc
mov
sub
push
mov
lcall
lods
sbb
jae
out
lret
orl
adc
sub
mov
cld
addb
lock
and
push
xchg
mov
sbb
cmpsl
enter
xchg
xchg
dec
pop
cmp
mov
sub
stc
pop
mov
imul
test
loope
in
jb
es
out
cmovns
cs
and
push
testb
ljmp
push
je
ss
and
scas
and
push
adc
adcl
dec
jbe
or
push
sbb
popf
jp
test
mov
lds
cltd
add
push
mov
lods
data16
xchg
gs
out
mov
imul
addb
stos
es
mov
push
sarb
fsubs
mov
sub
pop
adc
mov
sahf
mov
sub
xchg
and
jae
enter
sti
mov
popf
push
out
int3
jo
sub
dec
mov
cld
cmp
out
rorl
fcmovne
push
test
leave
adc
iret
mov
insb
mov
push
pusha
stos
out
addl
icebp
fcomi
data16
stc
fistl
das
jg
xchg
inc
push
push
in
mov
stc
mov
sbbb
fsubrp
mov
push
jbe
aam
lds
or
cmp
and
push
mov
mov
xchg
xchg
cmpsb
stc
lret
xor
add
dec
mov
cmp
xchg
pinsrw
jno
xchg
int
push
aaa
notl
mov
jbe
pop
ret
aam
pop
aas
inc
mov
enter
adc
jmp
ret
xchg
adc
sete
cmp
xchg
mov
mov
jae
mov
lds
into
not
fcom
push
lret
mov
sbbl
lret
gs
sti
pop
int3
testb
jae
pop
mov
push
out
ss
cs
arpl
cmp
mul
loope
das
sbb
pop
sbb
dec
dec
xor
icebp
mov
jle
jno
inc
sub
jp
sbb
mov
adc
rcrb
adc
js
sub
pop
sbb
addr16
dec
pop
cs
pop
mov
hlt
dec
jns
scas
add
pop
inc
cmp
dec
es
mov
pop
addr16
test
in
fwait
aam
sbb
mov
pop
jnp
sbbb
mov
ja
sbb
scas
push
jb
xchg
jmp
ds
shlb
and
je
xchg
dec
push
jp
fistps
aaa
insb
ret
leave
lock
rorl
push
add
mov
fistps
mov
call
aad
popa
js
cmp
mov
dec
clc
inc
xchg
mov
mov
popa
jbe
addr16
fcoml
lds
or
push
pop
addr16
ss
mov
mov
push
mov
fstp
pop
popa
pxor
iret
loope
int3
scas
push
sub
fs
dec
in
aad
inc
stos
mov
sub
bound
sub
push
push
jns
pushf
pop
push
xor
out
xchg
cmp
out
mov
data16
xor
mov
inc
mov
push
test
or
xor
mov
out
mov
out
pop
jg
jns
pop
mov
pop
push
adc
dec
lea
dec
ds
stos
inc
mov
pop
pop
cmp
push
xchg
push
in
dec
sub
xor
inc
inc
and
and
paddsb
xlat
insb
aad
inc
leave
sbb
mov
add
mov
mov
int3
push
xchg
mov
ret
or
mov
jmp
mov
mov
test
sub
sbb
push
pop
leave
roll
adc
push
push
mov
or
mov
es
cmpsb
or
mov
dec
pushf
sti
out
rclb
lret
scas
in
in
push
lods
push
mov
or
test
sbb
int
les
inc
jl
or
inc
dec
repz
push
outsl
test
mov
push
out
mov
lret
imul
add
repz
add
and
out
fwait
and
mov
dec
mov
push
es
mov
adc
xor
data16
dec
test
mov
sbb
repz
inc
push
mov
dec
test
aam
insl
sbb
test
fwait
cmp
ljmp
sti
jp
stos
push
js
cmp
mulb
sbb
cmp
dec
mov
or
rclb
test
mov
cmp
jnp
adcl
sarb
mov
les
ds
fwait
dec
lret
cmpsb
sub
sahf
dec
mov
xchg
and
sahf
sbb
lret
jo
aas
mov
xchg
inc
xchg
or
jno
xchg
in
lea
pop
mov
in
adc
cmp
xchg
fldenv
push
scas
fs
pop
insl
into
daa
jle
iret
jb
addr16
lods
cwtl
xchg
pop
push
dec
xchg
fucom
js
push
les
jle
or
stos
jae
movsl
cmpsb
repz
rcll
lea
into
not
push
fimuls
pop
in
test
fstl
jl
inc
inc
iret
movsl
and
adc
xlat
xlat
or
or
xchg
repnz
push
sbb
fcmovnb
ret
adc
sti
int3
push
push
nop
cld
iret
pop
mov
in
divl
or
test
mov
or
sub
es
inc
ja
push
sbbb
mov
pop
xchg
orl
jae
sub
and
imul
call
push
clc
add
push
lea
gs
xor
xor
jg
mov
es
cmpb
xchg
sti
jle
mov
xchg
push
sbb
pop
xor
aam
mov
push
ljmp
push
pop
mov
out
push
into
test
sbb
mov
insb
adc
hlt
test
jmp
arpl
outsl
ficomps
outsb
mov
inc
push
clc
sahf
mov
mov
rorl
and
mov
icebp
int
icebp
and
xchg
mov
or
add
lret
sub
out
or
aad
fnclex
xor
loope
adc
and
loopne
bound
jbe
scas
aaa
push
mov
xchg
repz
lret
dec
jb
lock
fcmovb
inc
jle
push
push
sbb
lods
in
jge
rclb
mov
xor
xor
xchg
psubd
repz
xchg
idivb
popf
push
dec
out
ds
cmp
out
lea
jge
lods
inc
jmp
mov
hlt
push
adc
test
cmp
add
lock
pop
fidivrl
leave
stos
loope
sub
sbb
adc
push
fs
mov
mov
js
add
ret
andl
pushf
dec
push
jmp
jnp
push
lock
pop
mov
adc
or
sahf
dec
pop
pop
push
in
mov
imul
push
idivb
nop
xchg
repz
sub
adc
and
inc
cli
mov
mov
lret
into
subb
sbb
lret
mov
sub
testb
cmp
xchg
ds
aam
xchg
jle
sbb
popa
sub
pop
push
xchg
movsb
data16
jae
fs
cmp
push
dec
xchg
shlb
sbb
cld
imul
std
cmp
into
xor
hlt
cmpsb
lock
dec
jne
add
jge
mov
lret
enter
adc
scas
adc
mov
jg
arpl
imul
mov
fwait
jae
outsb
sub
mov
cmpsb
scas
cmp
imul
xor
or
pop
data16
inc
loope
fxch
xor
mov
dec
jae
and
sbb
sub
outsl
xor
add
dec
mov
xor
gs
push
in
dec
fmuls
and
hlt
shrb
or
sbb
imul
sub
dec
mov
icebp
or
mov
and
cli
sbb
push
je
mov
pop
jno
mov
lea
js
lret
lret
mov
ret
push
adc
ret
xchg
mov
lea
pop
mov
xchg
shl
pusha
mov
sbb
in
subl
insl
sbb
shlb
jl
or
add
je
mov
loop
int
outsl
adc
inc
mov
mov
push
mov
and
push
ja
lods
test
addr16
pop
mov
sub
cmp
mov
add
movsb
adc
xor
jb
fcomps
xchg
icebp
jl
mov
push
mov
iret
inc
andb
hlt
cmp
pushf
and
loopne
dec
mov
popa
xchg
jge
and
push
push
test
dec
sahf
fstps
in
jne
orl
loop
mov
push
cmp
xorb
add
movsb
pop
or
lods
rolb
sub
out
mov
test
movzwl
jmp
dec
dec
sbb
repnz
cmpsb
pop
scas
int3
cmpsb
mov
mov
subb
shll
xor
inc
lock
je
fcmovbe
jns
sbbl
cwtl
dec
dec
enter
mov
push
and
out
movsb
xchg
shl
sbb
lea
push
mov
add
push
popa
das
stos
sbb
in
cmpsl
and
stos
fs
fbld
outsl
mov
stc
int
aad
mov
popf
mov
fsubrs
cmp
adc
xchg
sub
cmpsb
call
push
fists
mov
pop
push
xor
sub
mov
lock
sbb
jb
daa
and
mov
mov
pop
mov
sub
data16
cli
jbe
in
lahf
mov
mov
and
add
jo
sub
jecxz
lret
int
add
pop
mov
pop
loopne
adc
push
adcl
cmc
scas
xchg
loop
sbb
and
cmc
imul
popa
in
sbbl
mov
mov
dec
dec
dec
and
pop
mov
int3
pop
or
stos
push
dec
lods
fistl
fwait
and
push
sbb
mov
xlat
imul
sti
push
mov
je
mov
mov
jno
sub
push
push
in
popf
lock
shll
mov
push
add
and
dec
pushf
mov
or
xor
in
sbb
filds
push
xchg
inc
push
dec
ret
lea
fwait
xor
sbb
gs
cmp
test
test
adc
lds
and
dec
jg
push
stos
in
popa
and
sbb
popa
mov
or
stos
lret
test
roll
pop
fwait
mov
test
lea
int3
icebp
pop
arpl
ror
orl
and
test
pop
mov
lret
push
negl
cmp
xchg
aas
imul
jae
add
mov
data16
xchg
clc
jg
mov
add
lcall
fisttps
aam
in
and
clc
pushf
mov
and
mov
jg
outsl
rolb
incl
mov
adc
jecxz
sub
vpshlq
mov
push
out
mov
pushf
sub
es
jae
push
insl
loope
xorb
mov
in
push
clc
pop
xchg
pop
daa
and
jnp
test
jnp
sahf
mov
jge
cs
in
mov
in
inc
ret
pop
repnz
jb
push
or
popa
adc
push
inc
xor
sub
test
sub
jo
call
lret
add
repz
das
std
lahf
mov
and
mov
mov
fdiv
arpl
fidivl
subb
inc
xchg
inc
inc
or
cmp
inc
in
mov
push
sub
add
shll
or
push
sti
mov
arpl
push
jo
mov
inc
rol
sub
jge
sub
stos
and
in
inc
or
loopne
inc
cltd
dec
and
mov
sbb
push
mov
pusha
cmp
jg
inc
cmp
push
and
les
std
pop
xor
xor
arpl
cmp
out
lcall
push
mov
pop
push
adc
in
jne
inc
nop
iret
gs
cwtl
test
stc
adc
cmp
rolb
and
fnstsw
icebp
or
outsb
and
imul
imul
add
aaa
js
fstpl
outsl
sbb
adc
aas
pop
sub
pushf
push
xlat
dec
or
mov
push
imul
cmp
push
cmpsb
cmpsl
inc
xchg
ficoml
iret
enter
pusha
push
out
pushf
xor
stos
mov
mov
or
push
inc
or
push
sub
jns
out
lret
cmpsl
lret
adc
sbb
cmc
ja
dec
sub
rcll
or
rclb
xchg
sbb
shrb
push
add
aad
lret
xlat
jne
mov
inc
sub
sbb
sbb
faddl
mov
das
xchg
push
jmp
call
mov
movsl
inc
push
add
or
je
mov
aad
aad
loopne
xchg
xor
fwait
cmpb
mov
mov
or
mov
mov
imulb
xchg
pusha
int3
jno
push
push
mov
in
jg
push
pusha
mov
int3
inc
cltd
xor
hlt
mov
std
addl
adc
scas
xor
add
dec
cmp
add
sbb
or
sbb
rcl
mov
add
in
cli
int
repz
mov
adc
std
jb
into
aaa
jae
sub
jbe
or
mov
idivb
jnp
adc
fdivrs
sub
jge
sbb
imul
dec
cmpl
movsb
adc
xchg
jecxz
and
or
cmc
add
repnz
in
imul
push
cmp
insl
mov
mov
ret
sbb
jle
std
jo
inc
repnz
sub
call
xchg
movsl
mov
es
jp
push
das
in
jp
addr16
jns
cmp
jmp
mov
add
push
aaa
fdivs
les
sub
lret
adc
inc
fstpl
xchg
call
or
js
gs
xchg
mov
sbb
movsb
fstl
ljmp
adc
jno
loopne
out
jl
icebp
or
sub
jge
inc
ret
scas
shlb
fs
xor
aaa
stos
fs
mov
in
sbb
mov
pop
pop
xchg
test
lods
add
ljmp
in
or
imul
and
adc
mov
dec
push
fistpl
adc
xchg
cwtl
sbb
ljmp
inc
dec
push
mov
cs
out
daa
jl
cmpsl
leave
fisttpl
sub
shlb
leave
roll
outsl
and
bound
shl
adc
xchg
andb
add
jge
popa
lods
dec
nop
and
out
rorb
sbb
push
jne
ss
mov
cmp
push
adc
dec
enter
nop
dec
lahf
sub
and
mul
jl
sub
out
xorl
pop
push
and
int3
test
mov
mov
sub
push
lcall
loopne
pop
cmp
rcrl
mov
pusha
in
dec
mov
mov
shll
push
pop
in
mov
dec
mov
ret
loope
fsub
jbe
aad
outsl
movsb
xchg
cmp
shrl
test
inc
xchg
gs
fmull
mov
in
enter
int3
test
into
je
add
sub
movsb
inc
jne
pop
inc
stc
cmp
dec
popa
xchg
ret
test
incl
jo
jge
dec
icebp
ljmp
cmpl
cltd
and
jecxz
mov
push
dec
xor
leave
mov
mov
dec
inc
or
into
cmpsb
xchg
fcomps
xchg
sbb
repz
inc
nop
pop
push
daa
ret
addl
sarb
dec
subb
mov
lds
pop
scas
ds
mov
lock
andb
mov
aas
fnstenv
push
fwait
sub
sbb
sti
test
sbb
xchg
mov
mov
push
adc
out
dec
fcomp
cmp
mov
std
cmp
sub
test
jno
mov
outsb
xlat
shlb
jg
mov
mov
daa
dec
lret
dec
andl
fcomip
cmp
mov
cmpsb
mov
add
insl
push
loopne
cmp
int
fxch
enter
mov
fdiv
pusha
add
rcr
push
cmp
aas
jae
xchg
mov
jno
mov
inc
stos
loopne
fildll
outsb
mov
push
inc
into
mov
xchg
xchg
or
and
int
mov
add
fwait
int3
xchg
and
sub
add
insl
dec
cli
push
sub
jne
inc
jb
push
xchg
cmp
mov
scas
push
jae
mov
mov
fdiv
mov
rcl
push
jbe
xchg
dec
xor
dec
shlb
popf
dec
fstp
cs
dec
xchg
mov
enter
cmpb
in
je
mov
inc
xchg
dec
mov
cwtl
sbb
cmc
sub
add
hlt
push
jns
incl
sbb
aas
jbe
daa
addr16
ret
push
and
jb
jne
fistl
dec
dec
push
dec
rcr
pop
into
sub
mov
stos
sbb
lret
popf
mov
hlt
push
imul
fdivp
shll
adc
adc
and
ret
outsl
test
xchg
je
stos
pushf
xchg
push
icebp
add
sarl
xor
pop
loope
mov
inc
add
inc
pop
mov
test
xchg
sbb
dec
mov
mov
push
mov
jo
pop
rcll
mov
ljmp
xchg
cmc
push
cmpsl
rcl
test
mov
dec
adc
pop
push
mov
lds
call
xlat
xchg
xor
push
cmpsl
cli
mov
subl
fnop
mov
inc
dec
sub
sbb
push
push
jle
lret
hlt
jo
jg
iret
xchg
iret
repz
int3
adc
mov
jmp
in
or
pop
or
cmp
fnstcw
pop
mov
mov
in
int3
push
and
ss
push
shufps
xchg
jmp
pop
xchg
xchg
mov
and
sub
add
clc
inc
pushf
xor
mov
pop
add
sub
fs
in
cmp
push
sbb
xor
push
push
cmpsb
fistl
mov
iret
clc
fmul
cmp
bound
pop
mov
adc
lds
push
roll
xchg
push
js
xchg
and
clc
xorb
push
sti
xchg
mov
cld
or
jbe
add
mov
push
dec
shlb
and
stos
loope
pushl
aaa
loop
sbb
cltd
leave
insl
push
xor
lret
xchg
xchg
adc
jge
repz
push
inc
cs
icebp
movsb
inc
daa
push
sub
mov
adc
add
inc
cmpsl
inc
leave
sub
sbb
movsb
ret
mov
movsb
rclb
lea
jge
jl
mov
and
pslld
lret
outsb
jmp
add
sub
push
push
scas
popf
ljmp
imul
mov
lock
hlt
and
sbb
nop
adc
subps
popa
std
mov
fbld
test
xchg
and
dec
stc
loopne
ret
mov
jno
or
sbb
push
iret
push
imul
dec
cmp
mov
es
push
jle
cmp
jbe
and
sbb
ret
push
fidivl
pusha
pushf
sub
popa
orb
sbb
sbb
xor
addr16
fnsave
lea
sbb
push
sub
add
or
mov
int
popf
push
test
scas
insb
shlb
idivl
push
xchg
push
icebp
cli
icebp
es
nop
cli
push
dec
leave
lods
push
jb
xchg
sahf
ja
inc
pop
lret
subb
jae
das
fdivl
iret
adc
xor
inc
xchg
push
fcomps
fldcw
cmp
es
incl
enter
aam
mov
aam
dec
repz
mov
dec
and
fcmovnu
add
fisttpl
hlt
pop
xchg
dec
leave
pop
dec
cld
jns
mov
nop
mov
fisubs
out
cmp
in
adcl
in
add
scas
popf
stc
dec
aas
ljmp
mov
sahf
pushf
je
cli
xchg
fcoml
mov
jnp
ret
and
ljmp
jne
inc
insb
mov
mov
cmpsb
aad
push
je
ja
push
push
jbe
test
cmp
scas
cmp
xchg
xor
inc
push
pop
out
jo
pop
lcall
ljmp
inc
bswap
cli
push
scas
ror
das
pop
push
sbb
cmp
and
sbb
movb
cmpsl
rcll
imul
pop
mov
sub
rdpmc
gs
fsubs
pop
bound
jb
ret
sarb
and
movsl
mov
xchg
pop
cmc
sbb
pop
xchg
adc
dec
aad
add
nop
xchg
lret
mov
mov
test
rclb
sbb
aad
leave
div
call
ljmp
xchg
daa
movsl
xchg
out
sub
pop
adc
ds
in
mov
push
xchg
adc
loopne
mov
push
mov
stos
stos
xor
jp
jg
push
push
and
jg
or
int3
sbb
jmp
outsb
mov
lcall
xor
pop
jecxz
repz
ja
sbb
and
inc
jmp
mov
movsb
daa
sub
sub
icebp
or
imul
repnz
les
call
js
stc
cmp
lods
dec
cwtl
mov
ffreep
call
add
add
sbb
sub
jmp
hlt
dec
jnp
xor
test
or
movsb
jmp
fimuls
and
jno
mov
mov
repnz
insb
in
jecxz
dec
mov
shl
dec
in
pop
pop
outsb
inc
cmp
inc
push
lods
push
sub
loop
stos
dec
push
pop
cmp
in
and
jg
fcmovnu
inc
lods
dec
and
clc
jecxz
pop
nop
xlat
sti
inc
inc
cmp
test
loope
sub
and
fwait
inc
daa
hlt
jmp
fmuls
imul
loopne
jmp
push
xor
jnp
addl
lahf
mov
clc
in
push
mov
lret
enter
call
dec
cmp
inc
dec
mov
xchg
cmc
fisubrs
add
outsb
mov
or
cmp
addr16
pop
call
sarl
jmp
push
popl
xor
repnz
mov
movsl
shll
xchg
jae
cmpsl
xor
scas
jno
stos
insb
test
jnp
mov
jp
adc
and
dec
scas
mov
sbb
cmpl
mov
xchg
sub
in
jne
xchg
mov
sbb
or
jg
pushf
mov
idivl
dec
in
sbb
arpl
xchg
loop
sbb
pop
adc
add
hlt
orl
sub
sbb
jo
incl
inc
jmp
xchg
pop
adc
frstpm(287
pop
imul
sbb
dec
xchg
mov
jp
dec
std
mov
aam
xor
mov
jmp
adc
mov
sub
sub
jle
push
pop
in
aas
add
pop
xor
loop
cmpsl
and
sarb
repz
sbb
fadds
add
fwait
xchg
inc
mov
add
fisttpl
sbb
add
out
push
xor
inc
incl
popa
push
add
mov
out
cmp
mov
pop
pop
andb
xor
sti
push
push
inc
aad
push
mov
or
adc
lods
mov
test
and
jb
scas
aas
or
incb
or
add
sub
nop
cmp
andb
jge
push
sbb
sti
call
inc
sbb
mov
in
or
push
sub
cmp
aaa
mov
add
push
ds
es
mov
es
adc
ja
pop
jo
cmpsl
lret
sbb
arpl
test
inc
inc
inc
mov
enter
add
popf
and
or
add
mov
pop
fsubp
fldt
cli
cmpsb
jnp
mov
jl
scas
push
or
pop
jne
cmc
push
subl
push
std
rclb
cltd
adc
cltd
cmpsb
xchg
pop
dec
subb
adc
data16
into
scas
mov
and
lds
xor
std
dec
rcrl
jle
scas
mov
pop
jo
lods
fcomip
push
mov
fsubr
xor
inc
sahf
jne
cmp
ja
aam
daa
mov
repz
pop
lcall
movl
ljmp
xor
pop
ret
gs
mov
in
into
mov
cmp
dec
adc
push
mov
addb
sbb
int
enter
cmp
jmp
loop
or
imul
fimuls
mov
dec
push
adc
or
data16
movsl
lock
dec
daa
xchg
out
popf
popa
pop
add
shll
push
xchg
adcb
sub
cmp
mov
popf
das
xchg
sub
add
loopne
leave
mov
pop
xchg
ds
bound
jp
push
mov
lock
cs
mov
xor
daa
leave
or
xor
mov
cmp
repnz
mov
stos
adc
adc
or
dec
in
pop
lret
xor
sub
inc
aad
pop
push
mov
sti
push
mov
jae
inc
mov
lea
mov
adc
cmc
loop
inc
xchg
test
cltd
jg
popf
movsl
out
fmul
mov
sub
jle
fists
or
bswap
adc
pushf
fwait
push
out
jp
mov
pop
fstps
dec
jl
jge
jmp
pop
insb
testb
push
inc
outsl
pusha
out
jae
cmp
lock
xchg
xorl
mov
iret
shl
loop
lea
insl
cltd
xor
sbbl
int3
sub
add
pop
fldl
outsl
jb
out
jp
sbb
sbb
jo
hlt
push
mov
mov
ficoms
mov
dec
cltd
hlt
push
pop
cs
jno
jp
push
jl
mov
shl
push
int
inc
mov
adc
jmp
ds
faddl
sub
mov
popf
cld
dec
xchg
sbb
js
sti
sbb
mov
les
push
push
fildll
sub
mov
xchg
leave
mov
shr
out
out
stos
fcmovu
dec
mov
push
popf
test
mov
mov
push
xchg
lods
test
pop
sarl
mov
js
push
and
sbb
gs
js
inc
mov
and
xor
nop
aam
xchg
and
iret
push
clc
adc
cld
xor
iret
inc
add
test
loop
gs
das
push
call
test
bound
into
and
outsl
inc
into
ss
stc
dec
ljmp
lcall
jl
es
xor
lods
mov
mov
iret
jge
jmp
push
pop
and
jbe
aad
xor
mov
lret
mov
inc
add
test
lods
inc
xchg
jb
aaa
scas
add
lret
mov
into
sbb
aad
mov
incl
pop
cwtl
and
das
lods
cs
jb
sub
mov
push
lea
mov
lea
cmpsl
add
inc
pusha
outsl
and
icebp
mov
jb
je
mov
xchg
ljmp
sahf
cmp
jns
test
popa
lcall
ret
mov
aaa
insl
jle
adc
sub
or
mov
add
lds
iret
push
jo
dec
sbb
or
push
xchg
xor
rcrl
dec
xchg
mov
jo
ja
pop
add
in
jno
ror
push
sub
jmp
cmp
cmp
out
imul
stos
out
pop
pushf
fiadds
mov
rorb
enter
aam
xchg
leave
xchg
xchg
cmp
lods
lea
shlb
pushf
cmp
pop
push
cltd
ficompl
pusha
int
inc
and
push
je
inc
sbb
shll
les
push
psrlw
sub
xchg
mov
mov
bound
bnd
cmp
shlb
out
mov
inc
call
addr16
sub
sub
sbb
das
out
add
sarb
hlt
aam
xchg
fldt
fwait
mov
pop
lods
movl
cmc
enter
test
test
js
push
fcmovnu
cmpsl
mov
xchg
scas
xchg
add
dec
or
pop
cmpsl
ljmp
nop
scas
xchg
dec
repnz
in
fcompl
sbb
stos
jns
les
jae
cmp
adc
jnp
scas
adc
push
push
mov
xchg
es
rcrl
jns
sub
jb
dec
xor
jnp
dec
int
out
rorl
xchg
jnp
push
push
in
test
iret
outsl
sbb
in
push
push
jp
cmp
sbb
rcll
and
jae
push
sbb
jbe
mov
cmp
mov
mov
add
scas
jge
push
sub
in
xlat
jle
dec
callw
mov
mov
xor
popa
xor
lcall
rsqrtps
or
lea
jge
pop
notl
fsts
divl
arpl
ret
xor
repz
or
out
fstps
stc
icebp
sbb
insl
push
mov
fmull
xchg
jne
imul
lahf
jns
pop
mov
dec
dec
push
aad
out
mov
inc
jb
jne
in
enter
mov
mov
or
pop
int
xchg
clc
sub
jg
push
les
daa
and
sbb
mov
cltd
popa
jne
cmp
adc
sub
and
push
push
rol
js
arpl
xor
or
and
mov
mov
push
lds
xchg
dec
pushf
xchg
sub
hlt
icebp
int
fisubrl
push
push
fwait
or
mov
ret
push
cmp
ret
jl
bound
and
aaa
stos
mov
mov
jmp
jb
dec
repnz
jbe
stc
pop
sbb
cwtl
popf
out
stc
mov
xor
push
xchg
and
imul
aas
mov
jns
hlt
out
cmc
mov
mov
lods
imul
js
idivl
repnz
stos
adc
rclb
mov
add
xor
out
and
xor
xorl
mov
mov
ret
or
push
imul
or
push
jmp
cmp
mov
add
and
xchg
gs
cld
lret
fwait
adc
addr16
mov
jne
lcall
jmp
pop
repz
and
pusha
shlb
inc
dec
dec
or
popf
enter
push
rorl
pop
mov
lret
jae
test
xchg
mov
jne
out
push
xchg
xor
outsl
scas
call
and
sub
or
jb
pop
jmp
mov
inc
in
push
icebp
mov
fdivs
lds
push
mov
loop
or
xlat
iret
pop
pop
popf
mov
mov
add
jno
lahf
mov
aaa
ror
shll
sbbb
pop
xor
cld
mov
jne
int
mov
fmull
pop
mov
mov
sbb
xor
xchg
push
fcmovu
adc
shll
push
cmp
xor
cs
rcrb
in
dec
pop
cmp
imul
jle
jnp
movsb
add
lcall
dec
fldenv
jp
pop
dec
xchg
or
pop
int
and
sbb
jno
pop
and
xor
jnp
sub
stos
and
imul
das
fisttpl
scas
test
push
mov
aaa
push
sub
js
jge
mov
push
push
push
push
ljmp
pop
push
xor
mov
push
addr16
sbbb
in
cmp
and
ret
mov
xchg
pop
dec
out
sbb
pop
loope
fmull
loope
cmp
int3
mov
pushf
sbb
push
sub
jecxz
pop
xchg
cmpsl
sbb
shll
sub
sub
mov
sbb
push
jb
daa
xor
in
xchg
dec
je
outsb
iret
xor
fcompl
cmc
lds
pop
lret
fisttpl
mov
shrl
jge
xchg
add
jp
insl
mov
cmp
or
and
xchg
pop
sti
adc
bound
shll
xchg
arpl
jg
mov
data16
inc
cltd
sarb
mov
inc
sbb
sahf
call
mov
ficoml
mov
adc
jbe
jbe
in
mov
mov
dec
nop
call
mov
add
arpl
mov
sahf
lahf
adc
jecxz
in
lahf
jp
mov
fxch
xlat
imull
sbb
dec
dec
or
mov
xchg
scas
jp
adc
loope
addl
sbb
ret
aam
in
push
jne
mov
and
inc
pop
cli
ljmp
out
outsb
imul
mov
push
roll
jle
fcoms
loopne
enter
aad
pop
push
cmp
std
xchg
imul
jbe
xchg
mov
jmp
imul
push
xor
push
out
mov
ffreep
xlat
sub
adc
pushf
mov
or
popa
int
mov
not
xor
or
xchg
pop
out
enter
push
negb
out
je
mov
cmp
ds
push
int3
pop
cmp
test
filds
add
jne
xor
mov
dec
mov
xchg
popa
jmp
test
das
popa
and
push
mov
int
and
jle
mov
xchg
mov
je
jne
lock
std
xchg
pop
mov
out
icebp
cmp
add
in
push
insl
lret
call
cmpsb
cmp
shl
out
in
rolb
mov
dec
lods
or
in
movq
and
scas
jbe
pop
mov
aaa
pop
xchg
mov
add
scas
imul
fisubs
popl
or
xchg
push
cwtl
scas
call
lcall
sub
notl
sub
imul
test
sbb
js
gs
filds
inc
sub
in
mov
push
push
cs
push
inc
add
jecxz
cmp
jg
and
stos
xor
xor
je
mov
fucomp
xchg
stos
sub
dec
mov
pop
imul
add
inc
mov
jg
inc
xlat
lret
push
cmc
push
cld
sub
stos
inc
insl
in
lret
imul
stc
xor
jg
in
jp
inc
data16
jge
jb
les
das
push
inc
cwtl
hlt
ret
sub
dec
repnz
loopne
mov
ret
and
push
jp
sbb
lock
mov
jle
jecxz
mov
pushf
and
insb
test
push
jecxz
call
xchg
sub
push
xchg
adc
inc
ret
xlat
pop
add
jl
mov
and
in
lods
insb
add
push
push
insb
stos
dec
xlat
icebp
mov
add
and
xchg
stos
mov
test
sahf
adc
push
leave
int
add
aaa
addr16
cld
inc
outsl
loope
mov
ret
or
inc
daa
jg
mov
xor
pop
or
mov
stc
iret
mov
and
int
into
push
push
sub
clc
int
nop
dec
dec
xchg
idivb
and
inc
xor
pop
and
movsb
mulb
stos
fsubrp
mov
add
jl
loopne
fistl
popa
pop
xchg
push
mov
clc
cmp
mov
cmp
jge
imul
xchg
fildll
jmp
xchg
stos
aad
mov
cli
out
pop
cli
sub
test
add
pop
int
shrl
pop
mov
mov
stos
push
fs
dec
cmpb
cmpsl
dec
adc
enter
adc
mov
fcmovnbe
xor
aad
jl
movsb
cwtl
xchg
das
push
movsb
push
add
push
repnz
jge
fiadds
xor
jge
push
jl
mov
adc
xchg
xchg
mov
mov
fnsave
movsl
adc
cli
cmp
rol
shlb
in
notb
insb
fldcw
inc
lret
addr16
movsl
fs
mov
push
inc
pusha
inc
loopne
pop
js
xchg
cwtl
add
je
xor
xor
dec
pop
adc
in
shll
sbb
icebp
aad
cmc
xor
pop
out
rorl
stos
xchg
jne
fwait
adc
fcoms
or
stos
lahf
xor
push
push
push
xchg
add
call
cmp
mov
push
ficoms
cli
aas
sti
add
cmp
cmp
les
and
sarl
out
lcall
test
pop
pop
cli
sahf
int
arpl
idivb
sub
fistl
jno
inc
xchg
adc
ror
add
xchg
cmp
pop
aas
mov
or
loope
int3
push
sub
es
fldenv
lock
push
out
stc
add
sbb
push
sbb
test
outsl
insl
jbe
jp
xorl
gs
dec
jl
jne
test
std
stos
mov
fstpl
pop
das
mov
fcomi
mov
adc
cmp
adc
jne
mov
int3
test
mov
mov
arpl
push
adcl
ljmp
jo
iret
stos
mov
pop
fcomps
adc
scas
inc
enter
aam
or
es
jnp
test
lret
sbb
ljmp
jns
sbb
in
sbb
pop
les
sbbb
fchs
scas
push
inc
aaa
and
popf
xor
xchg
iret
xchg
sarb
addr16
jne
cmp
sete
pop
imul
push
paddq
ds
add
iret
xor
cmp
mov
xchg
lret
xchg
jmp
jp
push
mov
and
into
mov
jmp
mov
imul
xor
orb
jbe
sub
in
push
fidivs
jmp
jnp
mov
cli
mov
cmp
daa
mov
out
inc
dec
inc
insb
dec
sub
dec
je
icebp
call
sub
xor
lds
call
es
pop
cmpb
movsb
cld
cmp
inc
dec
dec
scas
scas
aas
shrl
sti
fwait
xchg
xchg
mov
fisttpl
jg
outsl
lcall
add
cmp
shrl
fadds
bound
lahf
call
fnstcw
out
add
jg
sarl
stos
sahf
dec
outsl
xchg
jnp
mov
cmp
dec
mov
fdivs
int
adc
call
adc
lds
repz
mov
insl
sub
cltd
jae
pop
push
js
outsl
in
lods
xchg
stos
push
in
mov
or
or
and
mov
xchg
mov
sahf
int3
and
stos
sti
pop
mov
aad
push
sub
jle
add
mov
mov
stos
add
sub
sbb
jne,pt
int3
inc
inc
lret
xchg
rolb
cwtl
repz
inc
xchg
fwait
leave
add
xor
fstps
inc
mov
nop
fidivrl
push
push
movsb
or
xor
lods
hlt
xchg
repz
movsl
dec
and
and
sub
adc
ficoms
dec
sub
stos
sub
pushf
das
xchg
xchg
fildl
pop
cmp
out
mov
incl
leave
pop
out
fildll
je
aaa
inc
aas
mov
push
lahf
pop
cmp
callw
gs
popf
sub
lods
pop
push
xor
cmc
and
mov
push
ljmp
inc
jmp
fisubrl
addr16
loope
repz
into
mov
imul
int
pop
mov
pop
in
jmp
and
lods
add
xchg
push
imul
inc
jb
sbb
outsb
daa
jmp
jnp
pop
pop
mov
into
add
arpl
sbb
ret
mov
inc
roll
imull
andb
lahf
jbe
ja
pop
test
mov
movsb
cmp
fdivl
jo
push
push
pop
add
jo
stos
mov
loope
jnp
sbb
xor
out
stc
cld
test
inc
cmpsl
pop
add
out
js
enter
leave
mov
popf
jo
es
int
test
cmp
xchg
loope
jae
daa
scas
sub
or
mov
xor
or
data16
lret
lcall
fs
jg
dec
popa
int
mov
ffreep
push
push
jl
or
scas
lea
mov
nop
add
push
fucom
in
and
int
adc
sahf
inc
dec
flds
add
hlt
shll
xor
mov
int3
add
cmp
sbb
jo
xlat
daa
adc
in
je
cmpsl
bound
xor
lea
outsb
xor
js
sbb
fadds
push
add
sbb
scas
bound
push
mov
push
jns
ss
add
aaa
push
cltd
insl
mov
jl
gs
add
insb
jo
nop
cmp
fcomps
mov
std
sub
arpl
fsubrp
xor
and
cs
push
mov
adc
dec
imul
add
dec
pop
lods
cmpsb
push
sub
xchg
movsb
and
xor
and
mov
pop
and
mov
cmp
and
jp
dec
adc
add
jns
dec
mov
xchg
popl
iret
push
int
dec
outsl
xor
jecxz
int
fnsave
jge
inc
mov
or
add
fs
mov
pop
ret
add
sbb
test
mov
dec
je
scas
scas
xlat
pop
xor
in
mov
push
les
js
cld
int3
cmp
sub
andl
test
jno
mov
cmp
xchg
std
repnz
stos
lret
mulb
aad
and
iret
cmp
test
sbb
sbbb
scas
pop
dec
out
rsm
mov
fsubs
push
dec
hlt
rcl
out
negl
aas
js
push
pop
leave
push
mov
lret
mov
incb
pop
test
push
fs
adcl
and
and
mov
mov
idivl
fs
push
jg
sub
popf
cmpl
lods
push
nop
sbb
das
int3
xchg
pop
jae
xchg
ss
in
in
movsl
mov
inc
aad
clc
sub
fucomi
sarb
loop
fistpll
jmp
or
fstpt
ljmp
lahf
add
dec
dec
pop
dec
dec
mov
aas
or
movsl
shrl
or
xchg
sub
cmp
std
nop
sub
cltd
data16
mov
loop
stc
xor
push
add
mov
add
je
idivl
popf
out
xor
xchg
incb
mov
shlb
lods
inc
adc
ljmp
das
mov
push
jnp
jecxz
jecxz
cmp
push
sub
sub
enter
adc
mov
popf
jg
jnp
shl
gs
insl
jl
loopw
mov
cmp
dec
je
out
xchg
mull
sbb
int
lock
xchg
out
stos
shlb
jo
jne
jge
adc
jmp
push
jg
pop
clc
cli
cmp
dec
mov
sbbb
fmul
scas
and
dec
daa
scas
jg
in
int3
add
test
aam
mov
jmp
pushw
cmpsb
xchg
shlb
aas
inc
das
scas
stc
pop
xor
test
push
dec
sub
ds
idivl
sub
cld
subb
in
jp
dec
sbb
xor
or
or
push
mov
nop
mov
mov
xchg
or
mov
push
cmp
addb
cmp
lret
ss
movb
inc
mov
sbb
test
push
cmp
aad
push
and
pop
sbb
xchg
push
es
scas
inc
xor
stc
stc
arpl
in
add
arpl
dec
cli
cmpb
andb
cmc
push
jne
gs
cmp
push
mov
insb
xor
jl
push
lock
add
sub
cmp
xchg
inc
sbb
dec
xchg
pop
fldt
fsubr
cli
xchg
sbb
cmp
rorl
rorb
push
outsb
mov
xchg
cmovnp
icebp
cmp
inc
push
push
sbb
adc
mov
and
les
arpl
jle
cli
add
and
daa
outsb
in
in
adc
jbe
shll
outsb
scas
call
stos
xor
cmc
pusha
xchg
aam
cwtl
repnz
sarl
pop
or
xor
adc
sbb
cld
jl
arpl
stos
push
dec
xchg
scas
ljmp
pop
and
jno
pop
xchg
adc
adc
mov
lea
jno
push
dec
cwtl
dec
lret
mov
mov
lret
arpl
loope
je
arpl
leave
inc
sub
outsb
leave
pop
sub
dec
nop
push
data16
push
cmc
pop
mov
sbb
cmp
xchg
fadds
test
stos
mov
add
loopne
das
add
sub
push
movsb
popf
movsl
mov
in
ljmp
push
jb
pop
sbb
pop
rcrl
stos
xchg
dec
loope
mov
xchg
mov
scas
loope
stc
enter
icebp
dec
out
loopne
mov
push
pop
mov
movsl
add
pop
frstor
rcrl
loope
sbbb
daa
xchg
cmp
ljmp
or
pop
enter
aam
mov
xlat
sbb
cltd
cmpsb
incb
sahf
stos
cmp
dec
call
xchg
adc
adc
pop
and
add
mov
xor
cltd
enter
cmpb
leave
in
mov
sbb
xchg
inc
imul
add
xchg
xor
loopne
or
jne
sbb
mov
mov
pop
pop
mov
push
push
or
jge
scas
in
dec
add
adc
xchg
mov
jge
push
adc
call
pop
and
gs
aad
setbe
sbb
mov
pop
jmp
pop
mov
sbb
adc
gs
mov
test
shlb
call
pop
sbb
or
ss
movsl
inc
test
aas
bound
das
sub
popf
mov
jle
fcmovnb
mov
and
jae
ret
cmpl
xor
xor
dec
es
lret
cmp
mov
jno
in
stos
xchg
sbb
je
mov
xchg
dec
add
adc
js
shlb
int3
cs
cmp
test
or
xor
fists
je
xlat
in
xchg
mov
adc
and
mov
xchg
jae
test
negl
mov
mov
push
repz
cs
imul
push
jae
or
imul
stos
roll
cli
cmp
in
adc
xor
xchg
push
xchg
pop
das
and
inc
fucomip
test
pop
mov
pop
add
movsl
dec
mov
out
aam
inc
loop
hlt
insb
int3
fwait
xchg
inc
sbb
add
aas
movsl
cmpsl
or
int3
pop
sub
imul
mov
mov
sub
cli
push
movsb
adc
iret
jl
pop
push
sarb
push
dec
jecxz
dec
jp
jp
and
and
push
xor
pop
dec
fsubr
aam
cmp
into
insl
sbb
idivb
pop
sub
xchg
cltd
testb
pop
pop
pop
cmc
hlt
lds
ret
dec
jns
xchg
xor
daa
rorl
mov
mov
shrb
cmp
mov
xchg
add
mov
or
and
in
add
mov
rcll
and
inc
sbb
dec
push
push
enter
push
mov
sub
pop
and
xor
pop
pop
jns
movsb
cmp
fcomps
iret
repz
into
ret
inc
shrl
mov
sub
cmp
cmp
lock
pop
movsb
push
aas
and
cmp
pop
sbb
mov
cld
xchg
in
fidivrl
push
enter
sub
lahf
xchg
xchg
rorl
jae
lahf
mov
ret
add
or
mov
mov
xchg
data16
pop
xchg
pushf
repz
fnstsw
mov
ficoml
lret
out
clc
addl
scas
clc
in
sbb
lcall
mov
dec
jecxz
ja
mov
push
mov
adc
popf
popf
shlb
jge
and
push
mov
iret
imul
sahf
call
pop
es
sub
mov
loop
outsl
cmpsl
jp
mov
cmc
sbb
and
sbb
pop
inc
movsl
push
pusha
or
call
das
jmp
mov
stos
jae
jae
leave
inc
xchg
jns
sub
in
cltd
sti
es
mov
pop
iret
movsb
adc
inc
call
mov
and
sbb
inc
push
out
js
add
cmp
dec
sbb
jp
ret
dec
mov
inc
cltd
or
and
loopne
cmp
adc
pop
push
fistpll
cli
push
pop
pop
mov
jle
or
push
inc
sub
mov
addr16
push
lock
jbe
nop
sbb
and
xchg
int
insl
sbb
bound
sub
mov
call
or
lea
push
outsb
pop
inc
mov
mov
add
cmpsb
cmp
dec
aad
inc
mov
or
xchg
insl
add
mov
jnp
xchg
and
inc
repnz
mov
fisubs
xchg
sti
aad
out
push
in
shl
sub
bound
xor
inc
mov
shlb
mov
jne
mov
dec
fisttpll
xor
xchg
mov
int3
mov
or
mov
cmovno
pop
loopne
insl
andl
mov
enter
cmp
stc
aad
leave
jmp
iret
or
cmp
fwait
and
or
jb
or
in
sbb
push
aaa
and
dec
mov
cmp
pop
jle
mov
xchg
cmc
xchg
pop
adc
scas
lret
jno
cmp
jne
dec
lcall
and
outsb
add
push
insb
fcomi
cmpl
int3
pop
rclb
push
lahf
fdivl
loope
test
aam
imul
lds
dec
sti
dec
mov
out
mov
cmp
fistps
fadd
sub
xor
cmpb
hlt
lock
call
mov
shrl
aaa
cmp
cmpb
out
lret
movsb
outsl
inc
push
test
roll
pushf
sbb
es
and
inc
cmpsb
popa
mov
dec
mov
iret
sub
xchg
daa
dec
pop
and
shlb
gs
xchg
pushf
aam
fs
add
pop
jle
popa
add
je
sbb
movsl
call
xor
jne
enter
or
push
mov
pop
sarl
sbb
xlat
or
cmp
dec
add
and
jae
notb
lods
mov
fxch
lock
call
insl
daa
iret
sub
lods
repnz
test
int3
cmpsl
push
sub
pop
or
pop
test
cmp
negl
imul
sub
int3
pop
decb
xor
sti
or
cltd
jnp
mov
leave
push
out
mov
lock
les
or
jg
pop
pop
adc
jmp
dec
repz
insl
xor
call
cmp
sbbb
enter
mov
mov
loop
mov
and
inc
sub
xor
jo
mov
out
dec
popa
gs
cltd
mov
pusha
ret
mov
nop
in
cmp
movsb
and
jp
xrelease
jns
int
add
aas
test
scas
sar
jg
iret
sahf
pop
inc
mov
push
nop
scas
clc
push
cli
test
icebp
cmpsl
loopne
mov
push
int3
ret
add
push
les
sbb
mov
mov
or
bound
enter
lcall
sarl
push
push
jnp,pt
add
or
adc
lret
xchg
cmpb
fwait
cmp
enter
js
into
in
adc
mov
aaa
push
loop
pop
mov
into
adc
fiaddl
aaa
dec
repnz
clc
mov
out
fisubrs
lods
pop
jg
xchg
loop
pop
push
adc
mov
xchg
pop
popf
push
sarb
xor
ret
ja
mov
pop
pop
and
sbb
filds
mov
ljmp
sub
data16
dec
and
push
repz
loope
jmp
jbe
or
sub
out
gs
mov
cmp
out
mov
sahf
push
int3
outsl
enter
lds
sahf
xor
aas
xor
in
popf
sbb
and
pop
mov
add
xchg
mov
outsl
pop
nop
xchg
insb
outsb
and
incb
jp
add
mov
lods
movsb
cwtl
loopne
pop
push
inc
inc
jns
and
loopne
leave
inc
mov
arpl
enter
arpl
cmp
ret
add
movsl
lret
sbb
fs
add
dec
dec
adc
jb
and
loopne
cmp
fistpll
jmp
or
data16
imul
rorb
and
mov
stos
iret
mov
lods
xchg
iret
mov
scas
or
test
sub
aaa
cmp
jle
pop
lahf
mov
aad
cmpsl
stos
popl
std
jne
dec
dec
mov
sbb
cltd
dec
xchg
loop
dec
sub
mov
bound
jg
cmp
out
ss
test
inc
push
sti
or
test
inc
lea
fwait
jne
mov
xor
jle
sub
sub
mov
inc
leave
arpl
pop
mov
cli
outsb
les
dec
inc
ret
fwait
and
in
mov
fcoml
sbb
pop
mov
iret
es
add
xchg
inc
push
lods
rorl
aas
push
int3
mov
jne
xor
add
out
and
test
sarl
sti
fisubrs
imulb
mov
cmpsb
sbb
ficoml
lret
jl
cwtl
outsl
aas
pusha
mov
sub
push
dec
jl
shll
data16
sbb
shlb
mov
push
inc
insb
in
pop
addr16
and
adc
cltd
lds
jecxz
ss
dec
sahf
add
lock
mov
cltd
outsl
movsl
sbb
jne
lds
int
cld
sbb
data16
dec
mov
dec
or
sbb
xor
iret
or
cld
insl
fwait
jmp
lret
es
repnz
push
sbb
dec
jae
out
mov
jp
popa
fdivs
les
sub
bound
jns
xchg
cmp
xor
mov
mov
dec
and
and
add
jns
inc
sub
decb
inc
mov
repz
push
pmulhuw
leave
lock
mov
pop
in
mov
push
fucomip
jbe
mov
cmpsb
sub
pop
imul
addl
jnp
filds
jns
adc
pop
adc
ret
and
dec
pop
icebp
jle
cmp
jmp
std
pop
sub
mov
and
pop
and
pop
loopne
pop
ljmp
leave
scas
stos
lahf
and
xor
add
push
cli
pusha
arpl
xor
aaa
mov
lock
ss
push
out
in
lcall
push
mov
aaa
sub
or
mov
cwtl
pop
xchg
pushf
out
adc
inc
mov
insl
push
ja
jmp
ss
or
sarl
mulb
das
mov
pop
sar
xchg
shlb
sbb
sub
add
test
data16
pop
loopne
out
cmpsl
inc
inc
scas
adc
push
mov
push
push
mull
sbb
ds
mov
lds
and
mov
add
or
pop
aad
test
mov
mov
in
or
jecxz
add
aas
clc
loope
leave
ret
ret
in
xor
sbb
cmpsl
shrd
sub
mov
sbb
push
and
in
mov
or
sbbl
repz
stos
sarl
mov
in
int
pushf
mov
xchg
es
ljmp
sub
out
pop
aaa
es
hlt
rdtsc
pop
dec
adc
fdivr
shlb
xchg
lea
scas
adc
inc
aam
jbe
or
adc
mov
push
jge
repnz
add
inc
mov
jb
jge
sti
add
mov
xor
push
les
hlt
mov
lds
stc
push
repnz
rol
jbe
fwait
xchg
jo
push
pop
insl
jmp
fidivrs
pop
adc
inc
lret
lret
cmpsl
lcall
daa
repnz
mov
pop
inc
xor
imul
mov
push
mov
jae
rdmsr
xchg
shrl
lea
je
int3
jne
mov
stos
lock
cmpsl
inc
shll
imul
dec
popa
sbb
cs
mov
dec
pop
leave
fldl
cltd
jne
fcomps
clts
mov
leave
mov
jbe
cmc
divl
sarb
and
sahf
shl
inc
jmp
sbbb
lcall
xchg
in
es
push
lods
dec
pop
jae
push
push
jae
fbstp
clc
es
stc
lods
data16
sub
fnsave
in
fbstp
out
call
lret
hlt
insl
lret
cmp
or
popa
mov
sbb
xchg
pop
sbb
and
aas
scas
push
xchg
call
jge
cmp
test
inc
mov
mov
xchg
loopne
insb
cwtl
xchg
jecxz
sub
or
out
add
aad
cwtl
jl
popf
bound
adc
hlt
clc
lret
scas
cmpb
lret
sahf
or
fmuls
mov
push
jge
xchg
insl
pusha
fstpl
and
add
sbbl
insl
lock
imul
lret
repnz
mov
push
add
dec
stos
xchg
xor
out
and
mov
stos
js
push
inc
mov
int3
lahf
scas
scas
jns
xchg
xorl
lahf
les
cmp
cwtl
ljmp
out
and
dec
popf
cmp
cmp
sbb
pop
nop
inc
inc
push
dec
aaa
int
or
fcmove
testb
sub
mov
mov
adc
inc
sti
xchg
push
cmp
inc
jne
shlb
ljmp
ds
jl
sarb
mov
add
sbb
xchg
cmp
and
adc
out
sbb
add
test
cmp
in
adc
into
and
push
and
hlt
mov
pop
cmp
dec
adc
adc
aam
jmp
push
lds
pop
iret
fidivs
cmp
leave
mov
sub
test
ret
jmp
cmp
repz
in
in
scas
gs
jmp
jp
jo
inc
inc
xchg
xor
iret
pushf
pusha
mov
dec
jae
leave
lods
jbe
es
ja
iret
or
mov
xchg
pop
push
shlb
add
mov
outsl
push
jmp
lahf
xor
adc
mov
mov
jle
daa
xorb
cmpsl
insl
pop
cld
dec
pop
addr16
cmp
out
pusha
mov
mov
fnstcw
cs
in
sbb
insl
jae
mov
outsb
lock
mov
pop
cmp
jo
jg
scas
stos
rol
cmp
mov
xchg
stc
jg
mov
sahf
test
ljmp
sbb
notb
or
cmc
push
xchg
out
addb
cli
ss
adc
imul
addr16
xlat
mov
or
add
ds
adcb
lea
mov
dec
shrl
sbb
outsb
ja
mov
std
sbb
fidivl
shrl
test
push
ljmp
push
mov
cmp
pop
pop
addl
fldt
enter
mov
add
loope
sbb
les
fcoms
out
je
add
nop
pusha
push
jnp
xchg
in
vorps
pop
cmp
neg
scas
dec
jl
push
sbb
push
or
pushf
push
imul
fadds
mov
out
fnsave
add
cmp
sub
aaa
add
adc
loopne
mov
mov
cmp
xchg
mov
in
lods
cli
or
xchg
xchg
int
cmp
adc
and
insl
les
jae
add
lock
push
jne
pop
call
shl
pop
pop
shlb
fstpt
das
dec
jmp
adc
sbb
scas
mov
dec
fstl
outsb
lods
or
mov
mov
sub
or
or
and
out
es
xchg
push
fmuls
cmp
inc
adcl
lods
dec
out
xchg
stc
in
push
scas
fisttpll
pop
inc
mov
sbb
push
push
mov
or
imul
gs
aam
push
cmp
push
xor
dec
insl
fsubs
repz
popa
fnstcw
mov
aas
pushf
sub
jnp
or
jns
rol
or
mov
mov
mov
xchg
sbb
orl
lahf
push
jno
push
adc
inc
js
sbb
push
aas
sbb
mov
es
xor
mov
mov
sbb
inc
xor
pop
out
shlb
loopne
adc
and
loope
call
pop
mov
outsl
adc
into
mov
mov
adc
cli
fs
sub
pop
xchg
dec
xchg
and
push
je
mov
popa
push
dec
out
mov
jp
lock
mov
loope
das
fcomps
lock
rcl
xchg
push
loopne
xlat
pop
add
cmp
add
dec
imulb
outsb
stc
lahf
xor
mov
sbb
mov
sahf
rol
les
jp
pop
inc
stc
and
out
cmc
loop
jmp
cmp
daa
sbb
mov
adcl
dec
sti
iret
cmpl
xchg
aam
jge
cmpsl
xor
ret
mov
sub
loopne
inc
push
cwtl
add
push
cmc
add
dec
mov
and
mov
mov
push
ja
mov
push
cmp
add
or
mov
cmp
mov
daa
addr16
adc
xor
outsb
cld
in
and
inc
mov
imul
mov
daa
aam
stos
push
cmc
cmp
outsl
add
leave
out
dec
jp
insb
out
jb
leave
in
into
sbb
movsb
in
ret
xor
pop
adc
jae
mov
pushf
cmp
mov
daa
jmp
push
add
pop
mov
xchg
jg
stos
loop
cmpsb
cmpsl
xor
mov
inc
mov
push
imul
sarl
mov
mov
cmp
loop
fsubs
aad
pop
jmp
lods
test
adc
pop
sarl
pop
hlt
and
mov
sti
stc
je
cmp
cmp
sti
jmp
pop
jo
cmp
popfw
mov
lret
mov
sub
divl
pop
inc
std
adcb
xchg
rorb
insl
push
push
sub
les
push
mov
jo
fwait
dec
mov
add
in
fists
adc
xchg
stos
mov
or
sahf
pop
cmp
inc
cmpsb
rclb
or
sbb
push
lods
add
mov
lock
cmp
xchg
lods
outsb
in
push
pushf
test
lods
addr16
sub
fildll
addr16
add
lock
pop
jo
imul
pop
jb
jecxz
add
push
inc
cmc
hlt
sub
ficompl
mov
fs
jmp
flds
subb
sar
ror
xor
or
je
jns
lods
or
loope
and
cmp
dec
jmp
imul
push
aam
call
mov
adc
push
sbb
ss
jge
jnp
xor
sbb
arpl
iret
xlat
stc
cmp
dec
fstps
insl
xor
or
imul
lock
mov
pop
notl
jbe
sub
mov
and
sbb
pop
inc
jle
clc
test
cmp
cmp
push
and
cmp
or
sbb
push
cs
push
outsb
adc
or
aas
rcl
cmp
and
mov
test
xchg
cmpl
mov
movsl
xor
cli
mov
insl
cwtl
and
pop
test
jne
jl
lock
cmpsl
add
sahf
sub
imul
int
mov
rcl
sub
es
sub
sti
nop
mov
add
in
xchg
nop
cmpb
inc
pusha
test
pop
stc
sbb
out
lds
jl
and
jge
scas
test
pop
or
repz
leave
popl
cs
clc
hlt
jb
test
icebp
xchg
push
add
repz
xor
dec
xorb
cmpsl
pop
ror
aaa
pusha
push
lea
insb
mov
cmp
xor
cmpsb
sub
push
loope
cmp
push
ret
dec
bnd
rol
imul
push
or
xor
pop
jb
sbb
decb
or
push
std
scas
jp
mov
mov
scas
pop
or
adc
dec
popa
and
rcl
and
insb
jae
jne
jp
int
dec
jno
xor
ret
push
mov
loop
dec
outsl
fistl
sahf
fs
mov
and
fwait
in
jp
repnz
js
arpl
pop
dec
sbb
cs
add
test
outsb
idiv
lcall
inc
ja
cmp
imul
mov
push
adc
jl
fsubs
jge
mov
lahf
jbe
orb
sbb
lock
dec
test
or
icebp
scas
lret
adcb
inc
fs
adc
cli
lods
pop
adc
mov
xchg
ljmp
xchg
jae
call
push
dec
dec
repnz
shr
or
pusha
int
sbb
das
jo
cltd
sbb
movsb
dec
dec
lock
outsl
sub
leave
hlt
pop
and
daa
pop
aad
clc
enter
nop
aad
sbb
sub
add
jp
push
mov
fcomi
or
stc
nop
fwait
js
scas
out
dec
inc
rorb
stos
cld
movsb
push
jge
in
add
ja
xchg
xchg
rcrl
mov
xorl
repz
sub
pop
imul
sbb
jmp
xor
and
inc
into
jge
adc
out
mov
jp
or
and
mov
mov
in
insl
sbb
adc
mov
xor
rcll
adcb
mov
cmp
stc
jmp
loop
addr16
fists
fdivl
rolb
inc
data16
imul
mov
mov
inc
lods
arpl
jbe
jno
frndint
and
enter
in
adc
lds
adc
mov
in
cmpsb
fwait
inc
xchg
push
fildll
push
pop
inc
movsl
hlt
stos
nop
jnp
out
push
inc
loopne
aas
scas
fsubr
icebp
or
xor
dec
rcrb
mov
adc
or
add
cmp
mov
ret
push
xchg
inc
jo
fidivrs
scas
fcompl
and
inc
jl
fwait
push
out
mov
adc
cmp
enter
inc
mov
mov
and
jg
add
lret
xchg
sarb
mov
mov
fimull
outsb
iret
loope
xchg
clc
jle
push
cmp
aad
sarl
lods
or
in
outsl
fidivl
lds
pop
mov
sti
gs
pusha
cmp
div
pop
ljmp
bound
int
xor
into
mov
cmp
shrb
inc
inc
rcrb
dec
and
fs
iret
sahf
daa
lcall
lret
xorl
fisubs
out
xor
push
sti
dec
icebp
mov
mov
dec
dec
mov
jecxz
jg
or
pushf
cmpb
mov
jo
dec
dec
fcoms
lahf
sub
lea
mov
xor
or
sub
call
fiaddl
sub
cltd
add
xor
inc
dec
daa
or
sub
push
repz
mov
gs
pop
shl
xchg
shl
out
pop
push
test
stos
popf
popa
faddp
into
scas
jl
cmpsl
sub
dec
xchg
das
popa
push
mov
adc
loopne
jp
fmul
xchg
lcall
dec
push
pop
mov
ja
negb
mov
sbb
mov
fucomp
add
fidivl
mov
repz
sbb
adcb
test
inc
or
adc
shlb
adc
sti
loope
push
xlat
sahf
or
cmp
gs
lcall
pop
mov
jl
fidivrl
jmp
shll
dec
pop
mov
orb
shlb
mov
jb
mov
pop
and
or
movaps
fwait
jns
jg
pop
pop
jl
push
dec
lods
or
test
jg
into
add
inc
rcr
xor
push
pop
xchg
mov
outsl
cwtl
mov
mov
inc
push
lods
loope
cmp
rclb
ss
je
idivb
push
or
cwtl
lods
xlat
in
sbb
das
bound
lods
pop
gs
add
sbb
push
outsb
xor
scas
dec
dec
mov
push
in
pop
je
sbb
pop
sub
int3
mov
pop
fadds
adc
push
pop
in
adc
out
add
jg
and
into
in
ds
jmp
stos
sti
and
sub
pop
hlt
cwtl
and
mov
sbb
fdivrl
dec
mov
stc
pop
fbld
push
add
push
xchg
divb
jmp
outsb
nop
int
test
into
jno
repnz
aas
fidivrl
repnz
xlat
jp
xchg
inc
popf
inc
imul
or
fstpt
jnp
rol
ds
fnsave
xorb
fimuls
sbb
shrb
adc
mov
adc
out
xchg
fisttpll
ljmp
xchg
cmpsb
adc
mov
dec
mov
popf
mov
fisubrl
ja
xorb
adc
out
subl
sahf
inc
pop
pop
mov
adc
cs
cmpsb
mov
clc
pop
inc
inc
je
outsb
push
mov
es
and
cmp
mov
fpatan
push
lods
xchg
out
stc
push
movsb
jne
sbb
test
out
call
mov
push
mov
loope
sub
in
mov
jns
mov
push
into
fadds
cmp
inc
push
lds
jmp
insl
nop
sub
or
scas
adc
push
push
fwait
xchg
or
cmpb
outsb
mov
pop
adcl
out
adc
xor
sti
es
ja
maskmovq
movsl
xchg
jecxz
std
inc
stos
push
out
iret
mov
shrb
add
lahf
pushf
xlat
xor
cmp
std
aas
lahf
pusha
dec
inc
aad
mov
xchg
or
sub
outsl
pop
shll
mov
and
mov
dec
in
lcall
cwtl
sub
sti
cld
mov
xchg
pop
mov
popa
jge
inc
or
mov
xchg
xchg
call
aas
adc
push
adc
popf
lahf
sub
sub
cmp
stos
xchg
ds
imul
xchg
seta
cmpsb
push
xchg
cmpsb
insl
push
push
scas
adc
aas
add
sub
loope
ss
sbb
int3
jnp
mov
cs
cld
ja
xchg
lea
or
mov
inc
jge
sbb
xchg
and
jmp
out
pop
pop
and
jg
push
pop
fidivl
dec
icebp
adc
ret
pop
hlt
enter
rorb
mov
subl
jbe
int3
push
add
jne
dec
cmc
inc
pop
lods
fsubrp
stos
lret
push
outsl
mov
jne
jg
sbb
movsl
ja
add
dec
inc
popl
adc
jmp
push
mov
jg
shrl
or
and
gs
xchg
shl
shlb
das
pop
dec
rcr
lods
inc
mov
clc
int3
jbe
fyl2xp1
or
test
enter
lods
push
jnp
cmp
imul
in
pop
mov
push
je
jnp
fisubs
sbb
mov
aam
ret
repz
ss
movsb
rclw
imull
pop
pusha
and
mov
sti
pop
out
movsb
sub
outsl
add
lds
adc
pop
ljmp
add
test
leave
pusha
cmp
sbb
arpl
movsb
jle
cltd
xchg
out
inc
pop
icebp
jg
mov
sbb
les
aas
lods
loop
sbb
jbe
test
repnz
jmp
lds
mov
jne
cmc
test
pop
push
mov
loopne
cltd
cltd
xchg
andb
loope
pop
imul
cmp
and
cmp
repnz
mov
in
sub
mov
jmp
loopne
loope
lret
ficomps
inc
hlt
out
dec
lds
inc
or
bound
or
and
mov
insl
sbb
mov
jb
xchg
mov
xchg
xchg
jb
xor
jecxz
and
xchg
popa
adc
lahf
lock
int
cmp
sbb
pop
mov
inc
adc
push
outsl
add
nop
jns
or
mov
or
inc
idivl
pop
inc
add
pop
jmp
stos
cmp
mov
or
dec
ret
ljmp
notl
int3
or
jmp
pop
in
mov
out
jb
pop
or
pop
and
dec
xor
arpl
push
fsts
inc
mov
lahf
push
add
mov
sub
aam
mov
shl
fstpl
loopne
stos
jns
push
and
mov
sbb
xchg
fs
mov
mov
xchg
jno
jo
mov
or
mov
data16
or
xchg
and
xchg
mov
push
sbb
mov
cmpsb
push
pop
ds
gs
insb
adc
xchg
mov
out
jb
xor
jge
sbb
mov
sub
mov
push
scas
dec
inc
sbb
stos
js
scas
sbb
test
imul
sub
mov
xor
xlat
xlat
mov
test
lret
pop
mov
test
ja
mov
push
ljmp
xlat
push
cmpb
jecxz
push
xlat
dec
jle
inc
fisttpl
shll
push
xchg
nop
sub
and
repnz
adc
inc
popa
xor
hlt
out
ret
lods
int3
pop
mov
push
xchg
repnz
insb
lcall
mov
movsl
xchg
rclb
pop
call
and
inc
clc
into
ret
mov
sbb
nop
inc
es
into
jae
mov
xor
into
mov
pop
cmp
pop
mov
mov
movsb
stos
out
scas
push
add
loopne
fldcw
scas
pushf
fs
aad
cs
fstpl
xchg
push
inc
push
mov
jl
popf
and
cwtl
js
mov
dec
repnz
push
ljmp
push
mov
add
cmp
pop
jge
adc
mov
sbb
into
maxps
in
add
xchg
inc
dec
nop
addr16
xchg
jle
inc
jp
xchg
pop
pop
inc
inc
cmpb
push
mov
xor
xlat
xchg
enter
jp
bound
mov
inc
into
lcall
ss
mov
push
lds
ljmp
imul
stc
fidivs
jno
push
ficompl
push
inc
cli
sub
insl
add
fists
pop
cmp
outsb
mov
dec
test
fsubrs
and
add
inc
dec
mov
ds
call
sbb
icebp
push
adc
push
xor
mov
jecxz
or
add
lds
lcall
mov
xor
jo
pop
or
icebp
dec
js
test
mov
and
mov
push
pop
imul
das
sbb
or
leave
and
pop
and
dec
in
jnp
lcall
pushw
rcll
cld
ret
xchg
jnp
push
jnp
lahf
fcmovnu
testl
sub
sbb
jecxz
gs
pop
push
and
rol
addr16
cltd
fs
sbb
lcall
xor
lahf
lret
dec
out
mov
movsl
scas
daa
jno
ja
scas
bound
inc
push
inc
js
xor
mov
fucomi
sbb
pop
stos
icebp
subb
mov
lret
out
fisubl
test
pop
lods
mov
js
sub
loope
bound
stos
sbb
test
xchg
mov
cmp
xchg
sbb
lods
rorl
mov
and
pop
and
call
inc
jnp
outsb
ja
sbb
mov
aaa
repz
arpl
mov
test
xchg
js
mov
mov
pop
adc
push
jecxz
inc
aaa
dec
cmp
add
sbb
scas
subb
loop
jne
cmp
cmp
jb
inc
jmp
incl
xor
ja
lods
cmpsb
push
aas
mov
pop
sbbb
mov
adc
js
dec
push
mov
loopew,pn
out
xchg
ss
or
je
mov
in
jbe
lods
hlt
and
dec
mov
adc
cs
pop
cli
insl
mov
pop
scas
and
lret
sub
sbbb
and
push
xchg
ljmp
cld
xchg
inc
lods
fcmovne
jb
xor
mov
add
stos
xlat
adc
jbe
cmp
scas
pushf
frstor
insb
in
mov
mov
outsb
cmp
pushf
mov
dec
popf
js
pop
add
push
lret
stos
out
mov
sbb
stos
dec
das
push
xchg
test
push
fstps
in
es
pinsrw
nop
shr
lcall
cmp
inc
mov
pushf
mov
out
cltd
lret
test
sarl
fmull
leave
stc
ljmp
jg
cmp
dec
and
and
xchg
shll
lods
stos
roll
mov
test
fdivrl
xchg
outsb
stos
and
shrb
jo
fcomip
jp
cs
icebp
lock
adc
mov
pop
mov
xchg
imul
and
xor
xchg
xor
arpl
sbb
clc
push
xchg
clc
jp
jne
lds
push
or
sahf
insb
nop
outsb
int
popf
inc
dec
add
mov
pop
test
test
arpl
addr16
mov
inc
sub
sarl
jnp
mov
xchg
or
pop
pop
pop
cld
roll
sbb
xor
push
xchg
ds
sub
dec
mov
jno
mov
leave
aad
xor
adc
ja
jbe
outsb
mov
stc
xchg
push
jg
mov
or
dec
ret
mov
in
outsl
pop
sbb
mov
dec
xchg
out
sub
xchg
mov
iret
test
push
adc
and
int
aas
enter
and
adc
sub
int3
es
mov
les
jl
mov
cld
ret
jnp
push
enter
stc
hlt
out
orl
and
lret
add
loop
imul
xchg
mov
mov
or
fstp
jmp
jmp
add
icebp
or
neg
cwtl
mov
and
ret
add
pop
fsubl
jmp
aaa
addr16
adc
ds
int3
test
xchg
shrb
testl
test
pop
decl
sbb
into
rcll
popf
push
icebp
aas
cs
iret
rcrb
mov
jb
push
and
push
insl
dec
jo
nop
sbb
call
dec
mov
aad
insl
shrl
sarl
add
cmp
es
gs
fcoml
mov
cmp
add
push
bound
mov
add
cli
pop
inc
xor
dec
in
int
xchg
sub
dec
arpl
sbb
push
or
dec
lds
and
fiaddl
cmp
push
and
mov
and
xor
push
adc
xchg
lock
cltd
fldcw
push
ljmp
lods
add
dec
rorl
sub
test
xor
cmpsl
xchg
fnstenv
scas
mov
out
fcmovb
cmp
adc
cvtdq2ps
sbb
inc
adc
sub
in
xchg
or
add
push
add
ror
ret
bound
xchg
mov
mov
mov
push
test
xor
in
sbbl
cld
fwait
int3
mov
lods
out
mov
mov
sbb
mov
cmc
inc
stos
hlt
dec
insb
mov
cld
mov
ror
fidivl
jmp
cmc
jno
lods
mov
sub
dec
pop
or
insl
movsb
cwtl
dec
mov
sbb
and
rcrb
push
popa
ret
inc
dec
adc
xor
add
cwtl
lods
int3
test
or
push
rcr
inc
inc
popf
pop
cltd
sub
pop
or
pusha
mov
adc
sub
iret
jl
insl
pop
push
pop
fstps
pushf
xchg
int
je
xchg
ds
cmp
rorb
xchg
fcoms
in
jne
xchg
cltd
fcmovne
mov
jl
jb
mov
pop
pop
icebp
pusha
psraw
mov
cld
fs
cmp
jb
xlat
add
cmpl
and
out
into
fisttpl
jecxz
mov
pushf
cmp
in
inc
pop
stos
cltd
stc
bound
xor
stos
das
ss
mov
add
cmp
cwtl
and
lahf
arpl
or
js
adc
fbstp
cmc
dec
cmc
out
sahf
shll
mov
inc
insl
loop
das
push
repnz
int3
decl
dec
scas
jo
or
mov
jmp
lea
jp
cmp
sbb
dec
rcll
mov
mov
pusha
loopne
xchg
pop
xchg
jmp
dec
test
dec
inc
pop
js
std
daa
inc
push
aam
lds
jge
xor
pop
popa
cwtl
push
test
aaa
iret
adc
jmp
sbb
cmpl
cs
mov
xor
mov
mov
or
jno
rorl
lea
mov
push
inc
cmp
sub
dec
jp
stos
inc
adc
push
add
and
aas
movl
movsl
dec
imul
pusha
fs
hlt
and
sub
adc
push
daa
push
call
loopne
or
fstpl
xchg
sbb
sbb
pop
ljmp
ret
sbb
xchg
fistpll
jp
in
call
pop
or
loop
xchg
mov
test
in
or
mov
mov
and
fwait
into
fcoms
les
lods
aas
pop
dec
ds
xor
pop
add
pandn
testb
mov
repnz
jmp
lock
and
sti
jecxz
add
adc
push
sahf
out
les
lret
dec
mov
jnp
and
mov
fnstsw
testb
jecxz
and
repnz
call
movsl
stos
ss
or
rorl
jns
mov
ret
outsl
jecxz
jmp
push
cmp
shrb
sbbb
pop
cmp
lret
daa
js
cmc
xor
inc
pop
aas
pusha
ja
aaa
xor
mov
push
inc
shll
bound
mov
xor
mov
pop
inc
pop
rcl
lret
cld
xor
sub
inc
sbb
out
push
mov
jl
pop
pop
adc
push
cld
insl
inc
pop
cmp
lock
pop
inc
bound
mov
bound
xchg
rcl
inc
lea
sub
es
pop
arpl
in
add
xor
or
daa
repz
lea
or
inc
xchg
aam
jne
xor
ss
aad
inc
enter
or
lock
push
and
or
stc
lret
adc
mulb
xorb
inc
lods
mov
adc
leave
fimull
or
fmul
test
pop
cmp
and
call
sar
mov
mov
and
jb
xor
and
mov
mov
sbbb
std
loopne
jnp,pt
xor
stos
jo
jge
dec
dec
js
mov
or
in
or
dec
lods
cmpsb
cmp
sbb
sti
mov
mov
cld
xchg
xor
xor
mov
insb
jmp
or
shrb
mov
add
and
inc
push
in
stos
and
push
dec
xchg
xchg
xchg
stc
or
adc
fcmovbe
stos
movsb
addr16
push
mov
dec
push
fs
mov
in
jge
shlb
clc
pop
jl
lret
inc
jns
sbb
test
rcrl
imulb
js
popf
push
scas
mov
out
dec
jno
inc
sahf
or
and
and
ss
sar
lahf
push
imul
cmc
push
subb
insb
xor
pop
xor
into
icebp
enter
mov
sub
adc
push
push
pop
xor
inc
fcmove
test
dec
int
shlb
fwait
ss
mov
or
scas
lds
dec
inc
andl
adc
maxps
dec
js
addr16
test
pusha
jbe
aaa
stos
shll
mov
out
fwait
jnp
out
lret
adc
out
stos
jmp
add
outsl
je
add
and
es
aas
cmpsl
dec
out
sbb
out
gs
xchg
or
ljmp
lods
popf
push
jae
icebp
lea
icebp
aaa
lds
add
andl
or
or
jne
lahf
jmp
inc
dec
movsl
xor
and
xchg
and
adc
daa
jo
icebp
or
adc
into
adc
xor
xlat
jnp
push
mov
jge
jae
xchg
cmc
test
pushf
rcr
dec
icebp
inc
xchg
xchg
jmp
aad
push
js
cltd
sbb
stos
movsb
pop
and
adc
mov
pop
mov
xchg
rolb
mov
orb
jbe
sti
jnp
cmc
or
imul
out
xchg
mov
push
jnp
fisttpll
loope
js
cltd
cmc
movsl
lret
stos
sub
mov
adc
cmp
imul
push
ljmp
movl
bound
sbb
stos
enter
imul
outsb
icebp
jb
cli
mov
mov
fstl
jne
xchg
aas
or
data16
das
mov
sti
push
mov
pop
xor
addr16
inc
ljmp
cli
dec
xchg
into
fdivs
adc
int3
inc
mov
test
lods
int
inc
lea
addr16
sbb
mov
mov
roll
sbb
push
push
and
dec
cmpsl
enter
mov
pop
cmp
jne
fiaddl
sub
push
xchg
loope
lahf
divl
cmpl
test
flds
imul
jo
mov
mov
subw
lahf
adc
out
inc
mov
pusha
mov
push
jp
jp
repnz
dec
mov
cmp
bound
fstps
cmp
or
jne
scas
mov
inc
fisttpl
cltd
mov
cltd
fs
and
fwait
mov
add
or
or
and
inc
dec
mov
push
mov
mov
scas
sbb
inc
add
mov
cmc
insl
mov
enter
push
imul
or
mov
pop
push
ljmp
loop
test
jb,pt
xor
xchg
test
jb
leave
adc
add
aaa
sahf
ret
cld
stos
xlat
out
test
jae
stos
mov
int
jl
lods
mov
mov
aas
mov
jge
sbb
pop
rcrb
clc
add
leave
jp
add
mov
sub
mov
xlat
sub
dec
mov
jno
lods
and
scas
mov
pop
xchg
cmpsl
adc
ret
les
cmp
pushf
jnp
outsl
pop
and
rorl
rcr
fwait
dec
stos
add
cld
jnp
data16
shl
sbb
inc
std
push
sub
repnz
aam
jmp
xor
scas
jnp
out
adc
cmp
scas
cmpsl
sahf
rclb
outsb
cmc
jle
call
cmpsb
cmpsb
and
out
sub
in
cmp
cmp
xchg
enter
repz
sti
inc
mov
mov
rolb
adc
xchg
shll
repnz
cwtl
xchg
loopne
sbbl
cmp
sbbb
lods
adc
fucomip
pushf
out
lahf
xchg
nop
shll
out
stos
in
pop
loope
mov
jmp
rcr
jae
fdivs
and
mov
es
add
sub
xchg
es
mov
js
inc
inc
push
or
inc
lret
or
inc
xchg
pop
sar
daa
dec
and
sar
inc
cld
push
mov
xchg
jno
or
add
popa
punpckhwd
xchg
sub
jns
sub
outsb
sahf
mov
jno
sahf
loope
dec
cmpsb
les
cltd
pop
xchg
icebp
adc
ljmp
sarb
cmp
in
lds
jg
push
and
xor
ds
insb
idiv
lret
add
pop
jge
sbb
adc
jecxz
cwtl
in
xchg
xor
cli
fnstcw
or
dec
pop
xor
xchg
cli
fdiv
xchg
cmp
les
lret
push
loop
push
sub
loopne
rcl
mov
outsb
arpl
lock
jge
aas
insl
xchg
dec
sbb
sbb
daa
jl
data16
orb
push
pop
xchg
inc
jb
shll
jno
mov
sahf
cmc
push
std
fdivrs
pop
cmp
rorb
cld
adc
sub
sbb
ret
inc
jmp
push
xor
xchg
jg
mov
xchg
add
and
aas
push
or
push
push
dec
inc
and
call
fistpll
sti
gs
loope
adc
ror
in
fcmovne
mov
ds
dec
pop
jecxz
iret
std
jmp
cmpsl
sbbb
push
fyl2x
jge
mov
and
gs
mov
mov
push
scas
adc
or
and
and
lds
adc
into
out
jg
ja
push
inc
data16
outsb
xor
cmp
out
jne
and
ja
aam
scas
in
inc
mov
icebp
jae
in
rcr
push
ss
jno
lahf
push
push
pop
cmp
xor
mov
test
jmp
mov
jmp
push
int
ljmp
ret
notb
cmc
loopnew
mov
lea
xchg
jno
mov
les
or
outsl
adc
inc
adc
scas
pop
dec
out
cli
mov
in
xor
pushf
fwait
pop
dec
imul
xor
jecxz
or
outsb
test
cmp
rorl
pop
test
inc
jmp
lds
ds
jge
popf
or
shlb
cltd
rcl
push
xchg
aad
imul
loop
xchg
les
inc
js
ret
jl
outsb
mov
ljmp
mov
push
nop
jecxz
xor
sub
push
cmpsl
and
jp
out
jle
add
mov
nop
and
sub
addb
in
adc
movsb
lds
push
dec
mov
inc
jmp
jecxz
call
jns
loopne
inc
xor
cmpsl
int3
and
xchg
fdivs
xor
mov
jge
and
daa
and
shl
mov
fwait
in
stos
cmpl
add
fists
test
les
lock
push
inc
fsubrp
inc
mov
push
daa
mov
jle
xlat
mov
repnz
or
movsl
daa
arpl
call
mov
testb
xor
pop
int3
adc
cmp
add
xor
arpl
fisubl
popa
loope
in
mull
inc
out
inc
jne
cmp
mov
gs
sbb
pop
inc
xor
insl
inc
les
push
idivb
aas
sti
ja
sti
jl
push
sub
repz
cmp
fstpt
mov
mov
adc
jb
stos
ret
push
pop
xchg
enter
sbb
mov
dec
jp
xor
mov
insl
in
rolb
cmpsb
jecxz
les
xchg
pusha
pop
xor
or
std
push
add
imul
inc
add
inc
dec
mov
out
mov
fdivr
inc
test
arpl
fstpt
or
xchg
and
cmp
adc
sub
pop
fsubs
lods
jp
add
sbb
push
jb
xchg
call
xchg
mov
adc
aad
mov
sub
ja
imul
mov
loop
psubusb
mov
push
pop
or
movsl
adc
fistpll
xor
push
adc
dec
inc
ljmp
cmc
add
aaa
cld
xchg
inc
push
fmuls
lcall
test
mov
gs
push
or
mov
sub
out
jo
inc
mov
pop
push
push
enter
loop
mov
fdivrl
jb
leave
pop
xor
loope
mov
sahf
dec
in
xchg
shlb
test
xor
push
stos
out
sbb
and
push
sahf
mov
xchg
pusha
pushf
sti
ja
nop
sub
xchg
pop
icebp
lods
jb
mov
fidivrs
shll
sahf
movsl
pushf
fistps
in
cmp
push
insb
adc
cmp
movsb
das
rcrb
loope
and
mov
iret
pop
adc
mov
mov
push
jns
sahf
lds
fisubs
ja
sarl
sub
xor
cwtl
insl
pop
sub
add
fs
inc
repz
or
xchg
sbb
test
ja
inc
movsb
xchg
int3
pop
in
in
inc
xor
inc
push
fimull
jl
jl
mov
jo
mov
cmp
lods
in
xchg
or
xlat
jle
mov
mov
pop
addl
pushf
jg
sbb
adc
jl
mov
cwtl
stos
pop
add
jae
enter
mov
scas
pop
test
add
sbb
lds
lret
mov
orb
pop
and
popa
js
daa
stos
adc
mov
movsb
test
fbstp
cmp
sbb
mov
inc
adc
popf
aas
sbbb
mov
sub
js
push
inc
popf
rcr
lcall
loop
push
int3
pusha
orl
cld
movb
je
xor
jp
sub
or
into
push
jg
inc
sub
cmpsl
dec
mov
aas
cmpsl
dec
mov
xor
mov
loop
lods
xor
and
mov
sub
or
sub
push
sub
pushf
out
sub
or
sub
pop
lret
xchg
push
outsl
sub
xor
and
ret
les
clc
pushl
dec
mov
jecxz
push
and
scas
push
or
jp
std
or
test
mov
cltd
jg
jmp
cmc
cmp
mov
stos
in
call
mov
ret
xchg
fwait
outsb
bound
or
inc
iret
pop
fsts
lea
mov
xor
adc
dec
clc
mov
push
js
test
pop
dec
adc
add
and
ljmp
enter
dec
cld
or
sub
jg
int3
push
and
repnz
rolb
ret
cs
sbb
scas
sub
adcl
imul
scas
fwait
or
loop
add
push
inc
nop
fstl
and
cmc
cmp
sbb
push
stos
clc
imul
nop
pop
jl
pusha
lods
pop
movsl
inc
xor
adc
orb
or
rcpps
and
pop
cmp
jo
inc
orb
and
cmp
and
push
jmp
jge
fwait
mov
jecxz
fstl
leave
jmp
jae
pop
cmp
test
push
or
fcoms
add
out
mov
sub
lcall
jne
out
sbb
sarb
dec
inc
pop
xor
cltd
add
or
mov
jno
sbb
mov
dec
std
mov
addr16
and
testb
or
cmp
dec
and
stos
mov
mov
xor
xchg
xchg
ja
mov
enter
pop
es
push
xchg
lock
mov
push
jmp
stc
gs
push
xor
insw
aas
aaa
mov
shrl
gs
xchg
bound
fnstcw
fwait
adc
fisttpll
cs
lods
pop
repz
sarl
ss
fnstcw
inc
add
cmp
shll
jne
ljmp
sbb
ss
pushf
mov
popf
mov
imull
xor
scas
js
int
imul
inc
shll
sub
adc
push
std
scas
into
hlt
jl
loop
xchg
add
aaa
sbb
or
pushf
mov
fsubrs
jle
dec
jnp
ret
idiv
adc
and
sub
or
lret
mov
int3
sbb
fwait
cs
ja
mov
stc
popa
imul
dec
je
push
shl
xor
out
scas
sbb
sub
pop
sbb
pushf
gs
jns
add
jmp
mov
fnstenv
gs
mov
ret
push
in
mov
add
dec
divb
add
xor
lahf
or
std
adcl
popf
push
mov
repz
repz
pop
fistpl
loop
xchg
inc
pop
hlt
inc
popa
cs
add
repnz
movsb
and
add
xchg
or
cmp
sub
pop
mov
xor
cltd
pop
jle
inc
in
cmp
addl
outsb
dec
jecxz
jnp
je
mov
gs
inc
cmpsl
stc
dec
push
jl
call
mov
mov
xor
mov
sub
in
ret
cmpsl
cwtl
jle
mov
inc
mov
and
push
test
pop
add
shl
xchg
or
push
sub
rcrb
and
pop
add
pushf
or
jnp
cli
xchg
addr16
push
inc
and
push
stos
mov
and
mov
xor
ss
fsubr
jecxz
hlt
fstl
and
xchg
cmp
jbe
jne
add
loop
out
decl
mov
inc
lods
call
ds
mov
mov
leave
outsl
nop
jo
lock
push
mov
clc
or
scas
les
jge
dec
out
pop
and
out
popa
fnsave
packsswb
fstps
outsb
scas
or
aam
and
pop
stc
out
mulb
test
mov
hlt
cs
roll
inc
loope
xchg
lea
sahf
xchg
xor
cld
test
xor
fistps
jne
push
test
xor
or
or
test
add
sbb
rcll
repnz
adc
scas
sahf
stc
scas
mov
mov
pop
dec
sub
aad
mov
rorb
sub
test
adc
imul
xchg
xlat
addr16
rorb
fiaddl
pop
in
incl
jb
push
in
sub
in
or
cmc
mov
adc
rol
cld
sbb
xor
pop
cmpl
ror
lods
xor
push
test
insl
mov
lods
cld
mov
or
shrl
add
sti
insl
orps
pop
jnp
and
xorb
mov
fdivrs
stos
jle
daa
or
mov
jne
xor
lcall
int3
outsb
mov
fmull
lds
inc
in
loop
jbe
out
pop
push
xor
mov
sub
add
add
in
js
adc
push
xor
and
jbe
dec
pop
shrb
cmp
cmp
mov
sbb
pop
arpl
std
adc
pop
jb
ret
pop
loopne
xchg
rclb
pop
mov
imul
aas
and
push
stc
or
ret
or
pop
sub
stos
mov
nop
stos
and
and
mov
int
insl
lret
stc
mov
lds
popf
and
lds
stos
inc
outsl
xor
nop
pop
push
jae
test
scas
dec
cmp
xchg
cwtl
pop
addr16
inc
dec
xchg
jne
out
mov
mov
fmul
mov
and
jb
add
es
xchg
lock
cld
mov
dec
js
addr16
ja
and
sarb
mov
xchg
lods
popa
scas
pop
jb
xchg
fidivl
dec
cwtl
fs
mov
pop
scas
cmc
dec
fbstp
dec
mov
xchg
sti
loop
and
imul
jo
mov
mov
test
jns
push
push
jne
sbb
outsl
xor
push
out
ss
push
push
sbb
inc
inc
xchg
cmp
inc
out
lock
sbb
bound
daa
mov
cltd
xor
ja
mov
lahf
push
or
xor
imul
xchg
mov
cmp
mov
cmovo
insl
jp
adc
cmc
popf
sbb
push
arpl
mov
xchg
pop
mov
xor
into
sbb
mov
xchg
jl
sbb
cli
in
fsts
push
and
jne
loopne
or
icebp
and
psraw
fwait
adc
cmp
inc
cmp
sbb
push
imul
popa
leave
pop
push
jge
std
fildl
cmp
shrb
divb
cmp
push
cmpsb
mov
cmp
and
cmpsl
jo
jae
subl
xor
adc
sub
popf
xor
sub
ret
sbb
cwtl
inc
iret
push
sbb
xchg
jne
pusha
push
push
pop
add
js
test
mov
xor
xor
gs
pop
mov
lcall
rorl
mov
test
xchg
jno
xor
push
jb
outsb
or
xchg
inc
nop
dec
sub
out
scas
pusha
loope
jle
lcall
repz
testl
imul
cs
mov
movsb
pop
movsl
sahf
sub
cwtl
or
mov
test
sub
lret
cmp
rcr
lock
pushl
push
sub
fsubr
or
pushf
mov
dec
cwtl
cld
pop
outsl
xchg
mov
push
and
fs
and
sub
cwtl
and
cli
stos
pop
fwait
rorb
cwtl
jns
mov
arpl
scas
ljmp
push
loop
ret
push
fwait
adc
pop
fdivrl
add
das
out
inc
popa
and
pop
push
xor
mov
mov
and
cltd
repnz
in
mov
rorb
aaa
cmp
jg
pop
aam
stos
sbb
pop
mov
dec
fstps
jge
jge
sbb
mov
lret
sbb
leave
popf
or
cmc
aaa
pop
or
jo
div
shl
fucomi
lods
gs
inc
and
jl
mov
test
dec
xor
xchg
aaa
std
stc
scas
pop
dec
and
repnz
dec
inc
ljmp
cld
lods
push
cli
scas
dec
add
fisubrs
and
aam
or
adc
xorl
inc
push
fbld
mov
cs
xor
jae
adc
push
in
in
or
bswap
add
inc
push
stc
lahf
dec
lods
push
das
push
mov
lock
mov
movaps
lods
mov
test
aas
sbb
xchg
or
cmp
neg
outsb
jns
aad
enter
add
sub
xchg
pop
test
leave
adc
xchg
testb
hlt
xlat
dec
cmp
mov
sbbb
test
mov
test
fstpl
mov
mov
inc
fbstp
push
jmp
jnp
dec
lcall
loopne
xchg
repz
inc
pop
mov
lds
cmpsl
test
cmp
repz
mov
test
inc
cmp
and
xchg
and
xor
popa
push
cwtl
fwait
test
xor
sbb
lret
rcll
icebp
les
xchg
lahf
or
dec
mov
out
dec
xchg
daa
xchg
inc
xor
xchg
lret
xor
sbb
stc
jmp
xor
and
inc
xchg
jge
insb
sbb
popf
and
lahf
mov
pop
sbb
xor
add
mov
mov
imul
xor
repz
movsl
mov
xchg
adc
push
lret
mov
inc
inc
lods
sahf
cmp
push
lods
jmp
mov
shrl
and
xchg
cmpsb
js
aad
movsb
and
addr16
jb
or
jns
mov
insl
and
jo
sub
or
aaa
sbb
inc
xchg
sbbl
enter
ficoms
ds
mov
pop
fisttpl
mov
push
push
movsb
push
sahf
cli
rol
test
xchg
cmp
clc
cmp
dec
inc
test
pop
pop
sub
pop
iret
pop
mov
test
mov
adc
into
scas
ss
cmpsl
dec
addb
fwait
cld
loopne
outsl
sahf
mov
xor
cmp
sti
jne
icebp
mov
push
in
ds
inc
xorb
fbld
xorl
and
pop
dec
jmp
jo
lcall
mov
fcoms
and
clc
ret
sub
xor
in
push
rol
mov
inc
out
movsb
daa
sbb
cmp
adc
push
jnp
mov
mov
test
xor
mov
imul
lcall
pop
cwtl
adc
pop
rolb
and
add
inc
addl
iret
inc
cmp
mov
iret
cmp
mov
mov
jbe
insb
dec
cmp
insl
xor
pop
jo
adc
sbb
stc
stos
ljmp
or
cmp
mov
stos
or
add
ljmp
mov
sarl
cmp
adc
test
bound
stos
subl
lahf
pop
add
jns
jb
mov
lods
rcrb
fcmovnbe
jno
jbe
mov
push
jl
imul
ficompl
aaa
test
in
jnp
inc
call
clc
sbb
cmp
mov
cmp
scas
loope
sbb
add
dec
push
fistpl
test
test
jb
cmp
inc
dec
mov
out
and
xor
adc
sbb
add
mov
add
shlb
or
or
mov
pop
push
add
leave
in
mov
ja
mov
adc
xor
pop
jbe
jecxz
shlb
cmpsl
inc
std
push
lods
test
in
mov
lods
sbb
pop
mov
les
pop
cmp
adc
mov
aad
subb
mov
popa
xor
sub
xor
ret
subb
test
push
jnp
jg
pop
les
sahf
xchg
mov
fwait
jne
sbb
in
cmp
cmpsb
dec
insl
cmp
cmp
xchg
shrl
mov
mov
jno
adc
std
xor
cmp
lret
mov
js
pusha
gs
xor
rol
and
fdiv
fisttpl
mov
mov
sbb
iret
pop
xchg
cwtl
dec
sbb
add
aaa
cld
arpl
popa
movsl
leave
adc
sbb
mov
daa
ret
imul
sbb
mov
adc
mov
jecxz
idivl
test
jno
outsb
outsb
cmp
leave
lcall
enter
push
pushf
addl
or
clc
dec
mov
jecxz
mov
push
add
fisttpll
jno
cli
in
or
mov
repz
push
lret
cmp
jl
mov
inc
ror
loop
pop
daa
jns
mov
bound
mov
add
sub
adc
sub
fstpt
stc
add
dec
dec
mov
push
ljmp
insb
dec
push
gs
adc
jle
aaa
repz
xor
jnp
pop
sbb
cli
mov
lods
inc
ret
jl
inc
divb
pop
outsl
sarl
push
jnp
and
or
mov
ss
imul
mov
pop
cld
les
je
push
cltd
icebp
pop
push
xor
leave
int
aad
add
iret
addb
dec
lret
or
fmull
and
imul
and
ja
insl
jns
add
and
pop
fwait
out
mov
cltd
call
iret
and
mov
or
jo
movsl
ror
sti
int
inc
or
and
orb
mov
mov
xchg
cmp
lret
adc
sbb
xchg
in
aas
cli
jp
in
orl
out
inc
cld
cmp
sub
sbb
stos
adc
fiadds
sbb
inc
daa
mov
in
aam
clc
add
std
shrl
or
add
jmp
movsl
push
aad
add
push
hlt
inc
call
xor
and
cld
sub
in
ss
and
xchg
sbb
mov
test
popa
imul
test
loopne
mov
sbbl
xchg
shl
lock
or
or
mov
mov
shl
fnstenv
rcl
cmp
lret
add
adc
mov
jl
out
push
xchg
xorb
nop
mov
mov
add
add
push
cmp
incb
gs
enter
or
cmp
lds
inc
push
stc
or
sub
add
jns
or
arpl
and
loopne
jo
sub
bound
das
mov
xlat
aad
mov
push
adcl
dec
xor
adc
xor
lahf
jno
fistpll
jno
pop
shlb
mov
cmp
adc
shr
push
fwait
ror
push
push
repz
arpl
sub
jcxz
sarl
jb
pop
daa
mov
dec
mov
popa
out
lods
add
in
mov
mov
ja
jnp
sbb
and
rcr
cmp
inc
mov
inc
pop
adc
sub
xchg
push
loopne
sarb
push
mov
dec
dec
gs
xchg
stos
rcrl
cmc
test
adc
mov
mov
addr16
lods
ficomps
xor
out
inc
inc
mov
test
xor
adc
je
dec
loop
mov
aad
hlt
mov
movsl
and
in
ficoms
hlt
sbb
jne
jnp
adc
jle
lea
lahf
sbb
mov
inc
sbb
test
xor
add
pop
xor
sbb
fldt
out
iret
test
mov
xor
lock
xor
xlat
packssdw
jecxz
dec
loope
aaa
fnstenv
lea
faddl
cmp
lcall
sub
movsl
fcmovne
pop
push
cld
lea
test
pop
cmp
xchg
out
sarl
sub
mov
mov
or
pop
mov
pminub
add
dec
mov
decl
outsb
lds
mov
or
push
pop
lods
inc
cwtl
add
cld
xchg
jo
arpl
notb
jo
sub
cs
fidivl
xchg
jmp
jno
imul
into
inc
in
popf
sbb
rorb
imul
imul
xchg
adc
pop
les
cltd
cmp
daa
xlat
add
and
xchg
sbb
pop
push
cli
inc
adc
pushf
mov
mov
ljmp
inc
and
loopne
nop
in
dec
lods
sarb
outsb
notl
cmpsl
lcall
xlat
loopne
cmp
inc
dec
cmp
loopne
mov
test
sbb
adc
fxch
jns
jmp
add
out
ror
push
dec
and
cltd
add
push
cmp
iret
out
add
xor
lea
pop
xchg
push
or
rcrb
cmp
mov
mov
mov
call
outsb
enter
and
add
mov
sub
lret
lretw
loope
test
or
adc
sarb
inc
aad
mov
push
ret
push
lea
xor
dec
pop
out
jnp
xor
cmp
and
pusha
and
cld
mov
loope
mul
cmp
xchg
cmp
mov
popa
pop
xchg
push
int
popf
push
orl
clc
sub
out
les
jno
pop
pop
fidivs
fs
js
push
cltd
xor
lcall
in
mov
je
stos
int3
push
or
push
movsb
and
xor
imul
jg
stos
xchg
ss
mov
cltd
insl
pop
dec
aam
outsl
or
mov
or
lret
lock
pusha
xor
mov
inc
js
arpl
test
adc
jns
or
jno
push
mov
outsb
mov
adc
xor
xor
rorl
ret
out
stos
mov
cmpsl
stos
cltd
mov
cld
cmc
outsl
mov
and
dec
or
daa
dec
xor
and
inc
aad
mov
mov
mov
loop
sbb
jne
pop
mov
xor
cmp
mov
and
dec
dec
pop
lahf
and
mov
sub
in
test
iret
or
cmp
and
daa
sbb
sarl
test
pop
pop
or
cwtl
lea
inc
sarb
cli
and
mov
jae
xchg
and
movsb
stc
jmp
loope
cltd
sbb
insb
mov
aad
xchg
adc
ds
sbb
lock
jle
inc
out
cld
dec
fimull
inc
loope
sub
out
aad
push
rclb
scas
jg
test
shlb
fwait
notb
pop
mov
add
js
sbb
iret
shl
xchg
testb
jmp
mov
sbb
roll
in
negl
sub
add
dec
fnstcw
adc
sbb
dec
jne
andl
stos
mov
out
in
xchg
sub
je
push
rolb
inc
sahf
xor
cmp
adc
outsb
push
dec
xorb
mov
lock
xchg
lods
jno
cmpsl
adc
popa
out
mov
ljmp
adc
xor
in
adc
push
xor
jne
mov
adcb
sti
mov
fwait
jae
outsb
aam
sbb
cmp
aad
and
imull
loop
gs
out
xor
or
fs
xor
into
fldl
adc
aad
sbb
push
bound
lcall
dec
test
add
rcrl
xchg
inc
fsubp
dec
mov
jno
pfmax
shrl
rorb
mov
in
xor
inc
cmp
out
enter
xor
push
xchg
xor
lock
pop
mov
dec
add
mov
fdivs
mov
mov
cmpsl
mov
imul
xor
in
sbb
dec
cmp
mov
pop
or
fsubs
nop
fstps
jne
jbe
add
mov
sub
push
push
das
fisubrl
jge
cmp
and
push
lock
out
add
das
in
in
xor
pop
cmp
mov
inc
test
outsb
cmpsb
xchg
mov
ret
and
pop
adc
pop
lret
add
loopne
jnp
pop
mov
outsb
jne
inc
cmp
out
xchg
psubw
sub
mov
inc
push
dec
arpl
or
mov
mov
arpl
lea
cmpsl
clc
rcrl
mov
push
cmc
in
adc
sub
je
push
shlb
clc
push
arpl
and
pop
data16
pop
mov
loopne
fldt
xchg
cli
js
xchg
inc
clc
cmp
ljmp
and
push
mov
jnp
xchg
push
push
fnstsw
and
sbb
lret
addb
push
clc
jne
shrl
stos
fwait
lahf
and
loope
add
repnz
bound
push
cmc
rcl
xchg
mov
sub
loop
and
pop
and
jnp
adc
lods
int3
fcoms
testl
std
xchg
cld
lds
lcall
movsb
or
mov
ret
mov
sbb
ds
cmp
pop
fdivl
cwtl
sub
adc
sbb
pop
mov
jae
int3
jbe
daa
aam
push
jecxz
fwait
loop
stos
cmp
in
add
dec
inc
pushf
repnz
test
into
fucomip
pop
or
or
aas
push
loope
cwtl
int3
stc
xor
mov
in
pop
lods
sub
notb
loop
in
xchg
nop
mov
add
repnz
aas
ss
jmp
pop
xor
fdivr
dec
test
enter
mov
fldcw
jns
clc
jle
hlt
out
mov
mov
or
fstps
fcoms
pop
gs
loopne
inc
jo
add
lds
pop
in
push
cmc
dec
lods
add
mov
add
push
lods
push
clc
or
cmp
cmp
rol
movsl
cmc
andl
xchg
or
jne
jns
bound
adc
fldt
mov
xor
aas
sub
loop
pop
mov
xlat
call
cld
fmul
out
pop
xchg
jle
imul
aam
jo
or
xchg
jp
pop
repz
mov
daa
imul
push
fiaddl
add
jno
xor
imul
testl
pop
add
mov
xor
es
cmpsb
std
sub
xlat
sbb
cmc
inc
push
sub
lds
and
pusha
push
push
push
mov
decl
in
lock
add
xchg
cwtl
push
sarb
pop
jno
jae
pop
insl
sub
cmp
dec
in
mov
xorl
pop
ror
jle
aad
js
mov
fucomp
xchg
and
pop
rorl
push
xchg
clc
and
mov
and
cld
lods
and
push
clc
xor
mull
jecxz
dec
data16
movsb
fiaddl
cld
sbb
dec
jae
imul
or
addr16
pop
das
in
xlat
int
imul
jb
adc
xor
icebp
mulb
test
pop
mov
ljmp
sbb
xor
ret
addr16
enter
adc
scas
out
push
xchg
test
xlat
aas
sbb
sub
push
rorb
cmpsl
jg
adc
lds
dec
cli
pop
ficomps
push
xchg
cs
stos
test
cmp
ljmp
and
mov
lret
mov
mov
sbb
add
dec
lods
mov
mov
mov
aaa
jno
je
push
jg
sbb
push
pop
pop
xlat
adc
mov
mov
loopne
xor
outsb
mov
xchg
in
xor
cmp
cmpsl
xchg
idivb
add
enter
pushf
pop
sahf
jmp
add
cmp
xchg
data16
mov
int
cli
cltd
xchg
mov
jg
cmp
roll
movsb
test
arpl
add
daa
inc
ja
push
gs
jmp
je
pushf
sti
pop
mov
mov
pop
ret
pop
test
movsl
rolb
xchg
cmpsl
fldt
adc
push
fcmovnu
cs
dec
outsb
or
jne
dec
push
lea
fisubrl
aaa
sbb
lock
sbb
mov
inc
fsubrl
cmp
xchg
mov
or
in
xchg
fiadds
adc
mov
cmpsl
mov
push
pop
daa
mov
fwait
cld
xor
insb
or
stc
sub
xchg
fs
es
push
xchg
xor
test
xor
ljmp
outsb
out
mov
hlt
xor
aad
inc
sbb
or
aas
xor
sbb
mov
mov
pop
movsl
mov
jg
sub
mov
or
mov
push
cmpsl
sahf
dec
cmp
mov
pop
sub
into
ss
push
es
mov
shr
inc
test
mov
jp
add
jnp
ret
fsubr
jl
shlb
xchg
andl
shlb
fisubrl
sbb
data16
pop
decl
es
inc
clc
adc
test
add
pop
lret
imull
les
test
pop
jno
cmp
test
pop
ficomps
sbb
mov
jecxz
shll
mov
sub
mov
je
out
xchg
pop
pop
cli
xchg
rcl
xchg
mov
cmp
or
das
rcrl
ret
mov
jo
sub
xchg
pop
scas
dec
movsb
aaa
jmp
cmpsl
mov
dec
std
add
xchg
inc
enter
iret
mov
sub
movsl
sub
shrb
inc
sti
xchg
cmpsl
mov
daa
lods
lock
xor
into
rcl
sub
push
hlt
sarl
add
out
cmp
cli
xor
dec
pushf
mov
xor
lret
xor
add
dec
mov
mov
insb
adc
and
cmp
push
nop
xchg
sti
mov
push
and
sub
and
jnp
adc
adc
mov
xorb
nop
jae
in
mov
cmp
out
jle
add
dec
and
mov
lods
call
std
add
iret
cmp
pusha
push
into
enter
pop
mov
cwtl
inc
int3
inc
sti
pop
out
lcall
into
or
ficomps
imul
in
sub
mov
icebp
xor
notl
out
int3
in
ja
or
repnz
mov
int3
int
fsub
in
push
xchg
out
pop
sub
sarb
cld
add
rolb
dec
mov
jo
xor
fucomp
jnp
jecxz
rcrl
shlb
cmpsb
jmp
mov
sbb
paddd
mov
out
push
lret
roll
dec
je
outsb
rcrl
jo
pop
xor
add
sub
mov
and
in
shl
shlb
test
lods
call
push
hlt
adc
inc
jo
xor
mov
pusha
icebp
bound
xor
in
and
or
jb
leave
jb
call
imul
adc
xor
iret
fwait
inc
cltd
mov
push
xor
jbe
pop
test
test
pop
xchg
and
jg
divl
inc
nop
pop
mov
repz
mov
mov
out
jp
je
mull
lock
lods
jmp
jmp
into
xchg
ss
cmp
cmc
into
movsl
sub
shlb
sahf
xchg
add
mov
je
adcl
das
nop
push
pop
scas
mov
je
sub
subb
adc
cmp
jle
inc
lcall
mov
loop
sub
ds
dec
lret
fwait
pop
push
jbe,pt
test
mov
icebp
xchg
inc
pop
testl
jo
sbbl
inc
xchg
xor
jns
pop
pop
mov
jmp
lret
adc
neg
sbbl
lret
rcrb
and
jecxz
repz
inc
push
mov
sahf
aam
popa
cmpsl
test
cs
jg
call
mov
loopne
fidivs
fdivrs
gs
sbb
fwait
pop
cwtl
lahf
cmc
adc
scas
mov
push
push
lods
out
ja
stc
pop
movsb
movaps
xchg
cmp
xor
inc
fs
mov
cmp
mov
sbb
cmp
inc
and
sahf
mov
inc
test
sti
jge
push
dec
js
xchg
repnz
pop
popa
ret
movsb
rol
sbb
cmc
rcrb
mov
or
stc
fbld
ss
popf
push
sti
jnp
cmpsb
adc
cmp
out
aam
dec
adc
jge
jbe
fdivrl
cmpsl
push
xchg
in
cld
and
into
loopne
jle
mov
dec
and
mov
mov
jle
fldt
das
inc
aam
jno
sub
mov
and
xchg
sbb
inc
inc
loopne
fisttps
bnd
xchg
cmp
fcompl
imul
fdiv
gs
cmp
inc
xor
cltd
in
leave
push
aaa
mov
pop
jp
popa
insb
fisubrl
test
and
dec
mov
xor
push
stos
clc
xor
or
sbb
adc
mov
push
pop
sbbl
pop
frstor
test
int
es
mov
dec
xchg
add
stc
fcmovb
xor
sub
lea
stos
sbb
es
popl
in
loop
jns
adc
scas
mov
mov
xor
fwait
cmc
loope
aaa
cltd
or
cwtl
enter
stos
sahf
repnz
std
mov
jmp
pushf
outsl
xchg
dec
cld
cltd
sbb
call
lods
xchg
add
loope
bound
mov
mov
add
and
mov
jl
push
inc
push
push
test
repnz
and
and
aad
mov
xchg
scas
mov
push
repnz
stc
xor
pop
mov
fbld
mov
hlt
and
mov
xor
xchg
jnp
fldt
jp
out
lret
mov
jo
sub
mov
pop
es
push
mov
mov
leave
les
scas
dec
fmul
test
out
fisubrs
ljmp
pextrw
jae
push
arpl
pop
dec
movaps
sti
loop
push
mov
dec
cmp
cmp
mov
rorb
mov
sbb
cmpsb
push
push
xorl
fsts
fbld
pop
mov
stc
pop
movsl
hlt
daa
sbb
inc
xchg
mov
xlat
std
out
or
dec
or
xchg
fisubs
repnz
xor
ret
pop
insb
lock
scas
shrb
bound
inc
mov
and
dec
in
outsb
ja
push
pop
mov
sub
push
pop
push
push
insb
push
fildl
inc
cmc
dec
jb
pop
stc
or
mov
fstpt
xorb
test
push
negl
hlt
mov
sbb
ljmp
filds
add
mov
xchg
push
ret
lahf
push
cmpsl
xor
arpl
insb
jp
in
pop
iret
je
movsb
cmp
sbb
dec
adc
jns
nop
push
pop
lret
js
mov
fstp
ficoml
pop
jmp
dec
loopne
lret
sarl
cwtl
ss
add
pop
jle
mov
stos
xor
mov
mov
jmp
data16
pop
sbb
loopne
add
sbb
adc
sbb
pusha
cmp
and
lcall
clc
xchg
dec
in
sbb
arpl
sub
dec
scas
cld
les
cmp
popa
mov
scas
leave
repz
sbb
sbb
cmpsl
jmp
bound
jge
shll
fldenv
call
inc
and
xchg
popl
out
push
adc
scas
pop
rorl
in
call
in
fsts
jp
aam
test
lods
cmp
dec
push
inc
jne
stos
stos
pop
out
push
mov
pop
cltd
fsubrp
mov
push
sbb
stos
iret
jb
xchg
mov
movsl
push
pop
andl
lea
in
jbe
js
fsubp
faddl
pop
mov
imul
cmp
insb
cmpl
jge
dec
adc
fdivs
movb
or
mov
ret
sbb
mov
lret
xor
das
lods
sbbl
or
bound
aaa
stos
fst
dec
lret
addb
or
dec
inc
loop
aad
arpl
sbb
ds
ja
mov
add
testl
call
shlb
sbb
testb
xor
sub
xchg
mov
inc
and
addb
mov
pop
inc
repz
es
clc
push
push
cmpsb
mov
imul
cmpsl
add
jb
jmp
or
jge
and
test
lahf
int3
arpl
dec
mov
in
xchg
imul
mov
jno
or
imul
out
sarl
rclb
imul
pop
enter
pop
bound
jp
mov
inc
jne
jmp
jb
push
mov
mov
cmc
mov
cmpsl
sub
or
adc
push
push
push
dec
jmp
mov
push
addr16
push
push
ja
xor
sub
daa
mov
lea
mov
lods
mov
cmp
lds
out
or
jns
or
jbe
imul
and
mov
ds
into
jne
mov
dec
test
mov
inc
and
js
inc
add
rorl
repz
and
nop
mov
push
scas
inc
outsb
push
or
mov
sub
ret
inc
pop
stc
std
fcmovb
dec
xchg
comiss
inc
jnp
sub
shrl
sbb
ja
stc
push
pop
adc
icebp
es
sub
mov
mov
mov
add
sbb
cmp
xchg
xchg
or
cs
in
push
test
inc
jns
loope
sbb
scas
icebp
mov
popf
das
aas
jmp
mov
fidivl
stos
xchg
repnz
rcl
mov
jae
or
xchg
bound
stc
mov
cli
inc
lahf
outsb
in
nop
out
mov
iret
mov
popa
sub
jae
movsb
gs
push
dec
xchg
in
fdivrl
jmp
loopne
mov
imul
adcl
xor
shlb
push
lret
popa
ja
and
enter
pop
xor
test
ret
imul
mov
ret
add
cmpsb
add
adc
mov
sahf
inc
dec
lea
inc
in
push
cmp
xchg
pop
aam
daa
out
push
mov
dec
and
repz
loope
aas
push
push
mov
imul
mov
mov
ret
hlt
add
enter
jo
shl
inc
out
sub
xor
and
adc
mov
inc
xchg
aad
add
xor
or
push
shll
fwait
mov
fwait
call
or
in
add
pushf
divb
xor
sub
cmpsb
ja
popa
or
hlt
insl
cltd
mov
inc
mov
mov
push
xlat
clc
add
call
sbb
mov
push
rclb
cmc
push
xchg
xchg
pop
fists
out
jbe
mov
test
sub
rcl
outsb
fmul
aad
and
and
inc
pop
test
push
test
sub
push
fs
xchg
jno
jbe
rcrb
scas
out
sahf
in
adc
scas
xchg
lds
xor
icebp
cmp
notb
sarb
scas
mov
popf
mov
test
pop
inc
mov
dec
ljmp
das
push
jb
leave
push
aad
sti
or
out
rclb
inc
movsb
das
sbb
and
xor
jle
and
cli
push
mov
jl
xor
push
loop
sub
adc
mov
fwait
sbb
repnz
sub
daa
push
mov
xchg
sbb
mov
test
xchg
push
aaa
mov
testl
pop
test
adc
sbb
xchg
hlt
lods
jns
mov
mov
inc
divl
in
loopne
clc
adc
pop
nop
pusha
mov
cmp
push
jne
xor
fldcw
stos
gs
and
push
xchg
xchg
dec
stc
inc
jmp
icebp
inc
das
push
outsb
out
fsts
out
hlt
add
adc
out
push
pop
dec
sub
xchg
sub
aas
cmp
fnstcw
mov
or
insl
dec
sbbb
in
fxch
xchg
daa
sbb
loopne
shrb
and
mov
iret
fstp
lahf
outsl
cld
int3
cmp
jno
insl
loop
or
dec
out
mov
icebp
mov
jge
sbb
jne
mov
xchg
pusha
sub
out
dec
jbe
mov
test
inc
aaa
jge
into
mov
fsubrl
ficoms
pop
mov
cmp
fwait
push
mov
add
push
shrl
sub
cmp
scas
pop
jl
fcoml
setnp
and
fdivl
lea
and
rcll
push
repz
into
and
push
sub
add
xchg
push
jg
xchg
mov
xchg
jle
add
push
add
insb
leave
scas
sbb
push
xor
popa
fsts
cmpsb
sahf
lock
xchg
popf
jl
cmp
call
loope
pop
mov
inc
sahf
push
outsl
sub
jecxz
in
or
cmpsl
movsl
jge
int3
push
mov
in
cmpsb
icebp
leave
ds
das
jmp
xor
adc
jne
inc
repnz
mov
sbb
cmpsb
movsl
pop
sbb
add
fsubs
sub
fldenv
or
mov
adc
rcl
pop
xchg
pop
and
movl
and
cli
addr16
stos
jmp
adc
and
mov
dec
iret
loop
data16
ss
pop
movsl
into
repz
call
out
repnz
lcall
imul
mov
out
sub
cmovbe
dec
in
int
call
insb
mov
jmp
inc
cmp
mov
arpl
or
xchg
push
mov
cmp
xchg
mov
adc
shrb
test
scas
xchg
mov
jmp
sti
je
jb
jl
fdivl
js
fadds
xor
jle
outsb
pop
daa
enter
xor
push
rol
push
sbb
dec
inc
xchg
vpshufd
jno
ljmp
mov
fisubl
sahf
inc
ss
cmpb
xchg
or
mov
scas
repnz
call
sbb
add
and
sub
or
std
jle
sub
imull
int
jmp
arpl
add
or
or
lcall
mov
jb
lret
xchg
pop
xor
xor
loop
dec
stos
sti
cmp
je
lods
xor
push
aas
into
js
pop
addr16
xor
and
dec
inc
jnp
sti
jg
in
sar
std
jb
push
or
ret
cmpsb
xchg
mov
mov
cmp
xchg
icebp
push
cmp
and
or
lea
jne
scas
inc
ret
pushf
pop
popf
jno
mov
cmpsb
mov
jge
or
or
adcb
je
push
inc
push
cmp
push
mov
adc
leave
mov
push
mov
and
inc
or
jge
in
mov
addb
add
mulb
aaa
pop
push
jmp
pop
jo
stos
xchg
jg
shrl
jnp
icebp
push
rorl
pop
dec
clc
in
mov
mov
mov
sbbl
mov
loopne
xchg
lock
or
pop
and
push
scas
jae
sbb
ljmp
mov
mov
mov
fwait
ljmp
xchg
cmp
xor
je
jge
es
add
popf
jl
je
jecxz
cmpsb
daa
jmp
and
pop
test
inc
mov
fistpll
outsb
cmp
inc
imul
cli
in
push
int
mov
inc
popa
xor
cmpsl
aas
mov
test
outsl
push
mov
cmpsl
lds
cwtl
pop
aam
jmp
dec
xchg
scas
cmpsl
in
gs
cmp
mov
divl
pop
jnp
imul
mov
scas
ljmp
stos
adcb
jl
xor
cld
push
rcll
push
dec
inc
and
test
mov
mov
pop
daa
push
test
cli
in
mov
or
sbb
stos
jb
jmp
lret
into
jp
fs
adc
pop
enter
cmp
jge
sarb
mov
loop
fwait
dec
lods
pop
lds
jb
push
enter
int3
sbb
fcompl
jmp
push
hlt
mov
dec
lods
out
daa
lret
xor
cltd
cmpsb
inc
push
bound
subb
and
fdivp
or
cs
mov
rcrb
enter
std
outsl
lcall
mov
testb
mov
inc
iret
mov
mov
cwtl
jne
lcall
insb
popf
shlb
icebp
inc
insl
call
cli
push
and
cmp
push
lods
rcll
scas
adcl
fisubrs
push
push
cmp
pop
mov
hlt
xchg
dec
cmpsb
ja
mov
push
ret
into
mov
xor
xor
aaa
mov
daa
cmc
push
pop
loope
dec
ret
push
sub
cwtl
incb
dec
sub
sub
js
dec
aad
nop
roll
int3
mov
cmp
pop
push
sbb
scas
mov
mov
es
add
testl
adc
fmuls
cmp
sbb
sbb
popf
jmp
cmp
inc
dec
out
jae
jo
sub
sbb
mov
xlat
cld
and
cmpsl
jae
pop
fdivrs
ficomps
mov
mov
xchg
lea
jecxz
popa
mov
les
and
xor
ret
dec
mul
mov
jae
in
test
jae
sbb
lods
xchg
mov
mov
repnz
lods
repz
mov
leave
pop
push
lea
jns
out
stos
and
mov
loope
int3
loop
rolb
add
sbb
test
push
sti
in
aam
sub
repnz
icebp
xor
sub
adc
data16
incb
imulb
jg
xor
mov
xor
pop
pop
cmp
push
pop
fnstenv
pop
push
push
and
nop
imul
notl
mov
push
nop
aas
mov
mov
inc
lret
repz
push
fdivl
lcall
hlt
push
xchg
cmpsl
filds
xor
loopne
jno
lea
add
stc
test
mov
pop
inc
pop
push
insl
mov
mov
mov
mov
add
loopne
ficompl
jecxz
jmp
sbb
sub
jo
push
repnz
imul
inc
ljmp
and
les
push
sarl
xor
in
insb
xchg
cmpsl
lods
orl
xor
jecxz
aam
mul
loope
mov
lock
in
xchg
es
inc
lahf
mov
fsubrl
push
or
in
push
push
add
dec
ret
je
cwtl
add
fcmove
incl
roll
aas
sarb
or
add
cmp
mov
lret
inc
in
fidivrs
repz
jmp
xchg
popa
insl
adc
bound
and
mov
aam
mov
cmpsb
jg
call
xchg
xor
sbb
jae
icebp
aad
sbb
mov
cmc
into
lock
out
and
dec
jle
sub
stc
sbb
xchg
xor
add
sbb
icebp
cmc
dec
ficoms
cwtl
cmp
and
ja
loopne
push
pusha
fcom
cmp
and
je
jg
dec
je
lock
es
push
mov
in
xchg
out
mov
inc
fldcw
sub
push
or
mov
inc
call
ja
mov
imul
push
pusha
pop
push
xchg
or
add
cmp
test
in
test
jns
dec
data16
imul
lcall
in
insl
sti
mov
nop
rclb
adc
aam
add
mov
mov
in
in
pmaddwd
or
sub
mov
loope
in
xor
cmp
sti
mov
je
or
stos
jl
jbe
mov
loope
cmpb
movsl
bound
imul
xor
je
sbb
mov
rcr
push
mov
jo
xor
cmp
in
dec
fsub
sub
add
loope
mov
adcl
jno
cmp
push
jmp
inc
mov
mov
test
cmp
xor
idivb
dec
imull
lods
inc
inc
xchg
adc
mov
adc
outsl
mov
push
mov
incb
jae
imul
or
fmull
cmp
fnsave
jmp
xor
test
mov
aad
test
adc
mov
or
test
mov
inc
in
popf
ficompl
loope
mov
sub
pop
ret
mov
add
mov
lret
out
jecxz
dec
aad
outsb
into
push
cmpsl
xlat
adc
jmp
stos
inc
loope
mov
addr16
lcall
pop
adc
push
add
push
or
dec
sub
sub
adc
or
mov
pop
ss
stc
inc
inc
sub
je
outsl
add
mov
je
xor
push
pop
add
push
das
sarb
aas
mov
nop
sub
and
mov
out
push
and
mov
jbe
aaa
call
into
xor
bound
out
and
inc
testl
mov
push
jmp
ret
fsubp
out
dec
add
and
clc
cltd
outsb
xor
jnp
dec
sti
int3
cmp
push
fstl
dec
je
js
xor
cmp
clc
adc
mov
or
inc
fiadds
jg
lods
loope
pop
and
mov
jne
movsl
fnstsw
sahf
mov
cmpl
pop
push
mov
adc
push
jecxz
mov
ficompl
adc
mov
andb
out
add
outsl
add
fcompp
pop
ret
sub
dec
cmpsb
adc
fsub
or
jge
fs
les
icebp
lahf
jmp
subl
cwtl
sub
cmpb
pop
or
leave
dec
mov
push
daa
mov
loope
je
push
cmpsb
jns
jo
jne
call
xor
add
sti
jbe
inc
addr16
enter
int3
mov
pop
pop
add
data16
mov
ja
dec
clc
out
pop
mov
shll
mov
in
cwtl
add
les
or
inc
lods
aam
out
push
add
pop
xchg
fildl
pop
pop
stos
fldl
test
sti
int
or
imul
insl
inc
push
cwtl
cmpl
in
adc
icebp
hlt
cmp
xchg
or
mov
leave
mov
jb
mov
out
sub
js
mov
adc
out
adc
sub
dec
mov
pop
inc
sbb
stc
mov
lds
dec
jbe
xor
and
fildl
movsl
push
test
cmp
xchg
jae
jg
sbb
in
dec
lret
cli
insl
outsl
mov
imul
pop
xor
mov
pop
loopne
sub
push
lret
push
inc
sbb
dec
out
xchg
push
fisttpll
push
test
fcomps
jnp
mov
cltd
push
adc
pop
jo
add
cli
push
int3
cmc
mov
fs
inc
aaa
or
fcomip
mov
shrb
movsl
lods
mov
hlt
mov
rolb
push
mov
mov
je
cld
cmp
xorl
icebp
scas
push
cmpsl
inc
xor
cmp
cmp
or
inc
and
or
lret
nop
inc
in
pop
test
cmpsl
stc
cmp
jns
mov
or
leave
jbe
mov
jne
pop
fwait
and
popf
mov
jge
jmp
cmp
call
sti
movntq
out
rolb
pop
and
xchg
dec
es
in
dec
adc
jp
add
mov
test
ss
mov
pushf
jno
inc
pop
mov
mov
add
orl
mov
jne
or
sub
repz
pushf
adc
inc
stc
mov
rcll
rcll
enter
xchg
fsts
push
sbb
mov
outsl
inc
adc
stos
jecxz
cmc
mov
lods
or
cmpsb
push
loop
mov
push
pusha
cmpb
ds
jp
outsl
mov
push
mov
sti
add
mov
push
mov
dec
dec
jne
cmp
adc
push
data16
test
lret
inc
js
fisubl
cmp
les
fisttpl
cwtl
cmp
inc
mov
fistl
shrb
addb
sti
xchg
inc
pop
jns
ja
rolb
mov
or
pusha
or
insb
mov
sbb
cmpsb
push
pop
xchg
ds
cmpl
mov
pop
rcrl
lds
jnp
bound
pop
mov
int3
mov
xor
cmp
xchg
in
sub
imul
adc
mov
sbb
rclb
or
ja
js
enter
jecxz
pop
add
jmp
in
int
mov
mov
pop
es
inc
mov
sarb
sub
dec
pop
cmc
gs
jle
out
loopne
bnd
jle
addb
push
es
or
call
mov
push
sbb
cmp
pop
jmp
lret
xor
fs
in
ret
pop
push
mov
xor
scas
xchg
push
fildll
stos
sbb
in
xor
xchg
mov
ljmp
scas
push
shrb
aam
call
notb
ficoml
add
sbb
cmpsb
dec
push
sbb
cmpsl
rcll
sbb
adc
fists
jno
loop
loope
imul
iret
or
sub
andl
lods
fwait
rcll
fstp
push
test
lcall
cmp
inc
adc
mov
add
xchg
push
in
sbb
push
inc
cmp
int
mov
mov
jae
sti
jecxz
mov
fists
mov
mov
imull
pop
and
pop
outsb
adc
pop
jp
cmp
cli
xor
cli
movsb
and
xchg
sub
repnz
mov
inc
xor
scas
test
sub
jno
lods
shl
inc
pop
arpl
mov
adc
add
mov
dec
popf
outsb
rcll
sahf
cwtl
mov
sar
js
pop
fsub
sahf
mov
inc
fildl
or
int3
dec
cmp
cli
popa
dec
int
mov
pushl
push
cmpsb
outsl
fs
jmp
push
mov
sub
inc
push
push
lahf
xchg
pop
pop
ret
jl
dec
shlb
mov
gs
into
movsl
rorl
iret
les
int3
sub
test
xor
mov
cmp
jmp
fmuls
sub
stos
notl
mov
mov
pop
mov
xchg
pop
pop
and
jns
mov
cmp
and
dec
push
mov
jge
test
add
and
jo
ds
into
add
jne
cmp
aaa
test
fsubrs
mov
popf
xchg
push
sbb
dec
sbb
push
and
into
lods
dec
test
mov
arpl
inc
sub
hlt
inc
sub
adc
cmp
shll
cmpsl
aaa
sub
scas
or
jg
pop
sahf
pop
shrb
scas
in
pop
cmp
cmp
cmp
jge
mov
mov
shrb
lcall
jge
sbb
aaa
call
stos
cli
icebp
xor
dec
sub
add
xorb
and
fstl
insl
or
push
cmpsl
sbb
bound
out
js
std
sarb
stos
pop
ljmp
mov
cmpsl
cmp
imulb
jbe
aas
push
jge
in
jns
jl
jle
pop
push
fists
jg
mov
lret
rol
std
mov
xorl
fiadds
ror
popf
iret
mov
mov
fcompl
and
dec
xchg
dec
push
out
push
out
pushf
push
add
in
push
or
icebp
in
inc
xor
mov
inc
divl
sti
xor
sub
inc
adc
xlat
dec
repz
mov
sub
pop
cwtl
stos
mov
sbb
ds
pop
jbe
inc
ret
jecxz
sub
adc
test
xchg
test
loopne
mov
int3
dec
pop
fidivs
push
mov
in
mov
mov
add
sbb
sbb
dec
dec
sub
iret
int3
ret
mov
out
ja
int
test
mov
movsb
mov
sbb
xchg
dec
fsubl
inc
cmpsb
aam
mov
cltd
sbb
inc
add
xor
inc
and
fnstsw
testl
push
fnsave
jbe
add
jo
pop
dec
sahf
inc
xor
mov
clc
lcall
and
jbe
mov
cmp
in
cwtl
jge
jo
inc
lret
insb
test
add
mov
dec
std
sbb
push
adc
jge
flds
or
sub
setl
jo
xchg
mov
xchg
pop
out
mov
jmp
pop
das
in
sbb
dec
adc
or
insl
or
lahf
mov
pushf
movsl
cmp
fisubrs
push
mov
sahf
cli
in
lret
jo
add
rcl
mov
add
divb
jg
cmpsb
and
add
mov
loopne
aam
dec
xchg
add
xchg
jp
fists
adc
in
rolb
or
rolb
inc
test
out
outsb
dec
dec
pop
loope
and
pop
je
pop
stc
add
lods
es
or
or
xlat
push
sar
lahf
loopne
add
aas
add
jl
in
notb
xlat
lock
aam
push
pop
push
jle
cmp
addl
into
dec
into
and
outsb
inc
lcall
stc
and
rclb
dec
leave
sbb
mov
mov
xchg
out
sbb
dec
add
push
lret
fdivrl
popa
mov
inc
movsl
or
mov
ja
push
sub
fiaddl
mov
mov
movsl
rcrl
push
ja
scas
sbb
mov
nop
add
rol
mov
nop
add
inc
outsl
testl
insl
dec
jl
mov
push
xchg
loope
jo
adc
repnz
jns
testl
scas
dec
xchg
dec
pop
packuswb
fidivl
inc
clc
sbb
imul
push
mov
inc
aam
popa
mov
daa
arpl
lahf
sub
fiadds
fucomi
mov
cmp
adc
cs
dec
shll
insb
cmp
mov
add
imul
jae
daa
popa
jns
fwait
jns
jge
mov
sub
in
repnz
sbb
pop
xor
mov
dec
mul
dec
movsl
popl
sbb
loopne
call
sahf
adc
xchg
mov
jo
xchg
mov
jo
and
mov
push
repnz
inc
or
shll
pop
mov
gs
lret
arpl
or
jg
sarl
rclb
ret
ficoml
add
push
inc
mov
loop
pop
inc
push
shll
cs
subb
inc
clc
mov
repz
shll
xchg
pop
fsubrl
pushf
mov
fsubs
popa
scas
or
mov
jl
jmp
xor
sbb
or
imul
sbb
mov
inc
mov
pop
dec
sbb
xchg
ret
xchg
push
cmc
sbb
sbb
mov
aaa
das
and
pop
lret
cwtl
inc
test
push
or
jae
sbbb
inc
cmp
xchg
push
mov
adc
cmp
nop
xor
out
adc
cmp
pop
dec
push
out
add
dec
fdiv
xchg
jo
lds
sbb
push
in
dec
adc
lea
in
mov
out
in
push
push
in
add
add
inc
cs
int3
sbb
mov
xchg
sub
arpl
into
sbb
fs
outsb
cs
out
sbb
sub
cmp
jns
mov
pop
mov
and
mov
mov
jecxz
sub
xor
pusha
popa
or
in
mov
inc
inc
hlt
pushf
insb
adc
inc
add
enter
mov
mov
cmp
or
dec
cs
and
sub
sub
pop
movsl
or
leave
mov
stos
ljmp
ja
mov
mov
lret
xchg
push
xor
shll
into
push
call
testb
mov
dec
pop
shlb
hlt
push
insb
lods
push
sbb
pandn
cmp
xor
stos
fbld
imul
pop
je
jo
push
jmp
cwtl
loopne
out
push
add
popf
lods
loop
loope
mov
xor
or
cmpsl
data16
jb
repnz
pop
es
incb
aaa
or
push
orl
lret
iret
mov
std
pop
mov
jbe
ljmp
xchg
mov
mov
dec
lods
sbb
cmpsb
sbb
pop
int3
adc
hlt
xchg
xchg
jbe
push
lret
rorl
lea
xor
pop
nop
fimuls
push
int
push
cmc
cmc
push
mov
out
jns
and
stos
insb
mov
nop
or
xchg
negl
mov
subb
xchg
insl
push
xchg
loopne
push
ss
adcb
imul
dec
and
shr
jle
pop
insl
pop
adc
scas
insl
mov
adc
push
adc
xor
aaa
mov
imul
pop
inc
add
std
dec
jnp
push
ret
or
loop
inc
dec
add
xor
or
stos
push
inc
sti
push
addr16
call
or
sti
inc
shll
sahf
push
lods
push
cmpsb
rcrb
or
cmpsl
push
xor
int
push
mov
add
aam
pushf
xchg
cmp
sbb
xor
adc
push
icebp
idivl
cmp
lcall
and
mov
inc
cltd
dec
sbb
fistps
jl
cmp
sub
lods
cmp
roll
mov
div
scas
insb
push
xchg
push
das
dec
sar
mov
sarb
xchg
push
jge
inc
sbb
mov
test
hlt
xlat
or
movsb
leave
sbb
insl
jae
outsl
pop
lret
ret
js
xor
push
mov
jp
jg
lret
in
iret
fsubr
push
shrl
stos
and
mov
xchg
mov
xchg
mov
ss
aas
rolb
xorl
sub
pop
sbb
sub
in
das
add
lods
enter
imul
aas
jp
imul
pusha
or
xchg
lods
test
xchg
aas
xchg
mov
negl
repz
or
int3
nop
aas
pop
jnp
clc
nop
imul
movsl
mov
out
js
repnz
icebp
pushf
repnz
push
and
and
xor
ss
rclb
push
ljmp
inc
mov
add
cli
test
lock
jo
nop
jnp
das
enter
jno
jmp
xchg
mov
push
fmull
sbb
push
mov
loope
inc
pop
mov
adc
and
jb
pop
or
ret
mov
xchg
mov
cwtl
push
pop
aaa
aam
mov
add
les
fwait
jbe
dec
aas
push
in
push
push
dec
fwait
xchg
inc
xchg
push
cltd
adc
jle
cmp
push
pop
stos
mov
mov
jmp
aam
xchg
inc
pushw
xor
push
and
cmp
push
mov
add
cmp
push
jl
sbb
ror
fisubrs
mov
shrl
sub
das
and
pusha
test
xor
fst
cmp
shrl
repnz
ds
mov
subl
sub
outsb
push
fld
or
xor
jl
loopne
or
jns
rorb
and
filds
inc
xlat
imul
popf
pop
inc
mov
ds
aas
cld
push
xlat
mov
dec
and
dec
bound
out
shlb
jbe
sbb
sbb
das
xor
dec
fs
mov
or
sti
cmpsl
rcrl
lahf
mov
mov
or
jns
loop
and
mov
stos
cmp
shlb
push
mov
je
rcrb
sbb
and
mov
das
mov
jb
ds
adc
mov
xorb
pop
push
xor
add
add
int3
shll
sarb
xchg
shll
push
mov
fcompl
mov
aaa
inc
sti
pop
les
xor
cmpsl
push
ret
cmp
pop
arpl
dec
add
fs
mov
cmp
cmp
imul
or
sub
push
sub
test
xlat
adcb
mov
mov
arpl
mov
pop
dec
scas
clc
dec
sarb
cmpsb
lds
jno
mov
jmp
pop
iret
xor
xchg
ret
pop
pop
pop
and
mov
lahf
lds
aaa
rep
enter
cld
lods
pop
inc
cld
sub
and
call
xor
mov
pop
cld
xchg
inc
fbstp
dec
movsl
int3
pop
in
jae
push
mov
imul
iret
add
enter
xchg
ljmp
bnd
mov
lret
adc
inc
aas
xchg
jecxz
adc
add
add
ror
push
fsubrp
loopne
mov
mov
sub
div
sub
or
ret
lcall
loope
jp
lahf
push
or
sti
sbb
mov
outsb
cmp
cmp
dec
andl
movsl
loopne
add
call
dec
jae
cmc
xor
cmp
cmp
xor
jg
xchg
cli
adc
pop
pop
sahf
mov
pusha
outsl
xchg
mov
data16
jecxz
ret
insb
mov
lcall
cmp
add
ss
xchg
and
and
push
fwait
cmp
lcall
push
xchg
in
push
mov
add
std
jecxz
leave
xchg
test
in
jo
cs
jnp
in
addr16
inc
movb
jl
daa
mov
mov
ret
es
push
les
push
ds
shlb
popa
xor
int
xchg
push
inc
je
mov
jmp
je
test
fimull
je
jg
mull
pop
loop
mov
int3
push
push
loope
and
in
lahf
mov
push
dec
mov
pushl
add
mov
cmp
push
mov
pop
pop
and
rorl
cmp
jecxz
insb
test
mov
or
xchg
dec
inc
xlat
xor
loopne
push
xor
inc
hlt
int
jp
out
into
ret
and
jle
int
dec
pop
add
push
mov
je
or
jb
dec
loope
insb
imul
add
imul
fisttps
sub
add
dec
fbstp
aaa
jo
loope
loop
and
cmp
inc
data16
lret
jne
cmpsw
mov
xor
adc
xchg
or
cmp
stos
jl
lods
dec
lret
icebp
dec
cs
xchg
aaa
add
inc
push
add
rol
sub
mov
imul
dec
in
adc
inc
nop
jmp
addl
mov
loope
ret
inc
push
xor
lret
mov
sub
cmc
push
loop
lret
les
sub
popf
adcl
mov
loope
add
scas
dec
adc
div
push
test
cltd
cmp
nop
lret
jg
cltd
cs
rorb
xor
xchg
sar
fsts
in
xchg
push
add
sahf
sub
fwait
fs
jnp
jbe
mov
mov
xchg
mov
test
xchg
test
sti
out
push
scas
fs
imul
push
rep
jns
push
dec
xchg
xlat
lds
and
or
out
mov
lcall
mov
loopne
lods
push
ja
pop
je
out
push
add
aas
mov
cmp
sbb
in
push
test
mov
cmp
mov
mull
xor
loope
sahf
jle
cmp
push
pop
dec
rcl
roll
and
fmull
mov
pop
xor
and
add
xorl
test
and
scas
cmc
cmp
lea
mov
js
icebp
and
outsb
subb
cld
mov
aaa
push
fs
jge
and
sub
lret
dec
fs
mov
jo
mov
mov
pop
fdivrs
mov
rclb
dec
fnstsw
or
mov
inc
push
jb
js
pop
in
adc
push
pop
inc
cmpsb
cmp
push
inc
sub
filds
push
cwtl
imul
jp
insb
sbb
cltd
adc
mov
movb
cmpsl
and
pop
sbb
stos
in
cmp
enter
fxsave
into
ljmp
ss
xor
inc
rol
mov
mov
mov
out
movsb
aas
test
decl
imul
iret
daa
and
sti
fdivl
imul
push
jl
mov
daa
inc
in
mov
shlb
mov
mov
xchg
cmpsb
movsl
lahf
scas
mov
mov
push
jo
es
sahf
mov
in
mov
and
aam
pop
xor
test
ficomps
addl
stc
shll
push
hlt
test
inc
cmc
ret
lret
xchg
sbbb
mov
pop
outsl
sub
clc
insl
stos
jo
jno,pt
adc
arpl
stos
cs
in
in
push
mov
or
mov
out
inc
or
dec
mov
jb
sub
sub
jge
fwait
mov
nop
mov
in
xchg
int
insb
iret
scas
outsl
rcll
in
out
jns
jp
fwait
ja
lret
rcrl
and
xor
mov
cwtl
das
jle
dec
imul
push
jg
mov
pop
xor
xor
xchg
in
call
inc
lcall
aaa
cmp
jne
xor
inc
mov
pop
lock
lods
sub
cmp
jecxz
push
add
xor
cltd
orb
movsl
dec
inc
shll
cmp
pop
push
mov
xchg
sbb
push
std
jo
hlt
mov
orl
pop
lds
sub
aas
xor
andl
sbb
mov
int
or
ret
cmp
xchg
cmpsl
pop
inc
das
mov
aaa
mov
hlt
popf
mov
pop
xchg
dec
push
xor
sbb
mov
ret
imul
pop
je
add
gs
mov
push
adc
loope
imul
les
cmp
or
cmpsb
das
pop
outsb
push
insb
enter
dec
gs
dec
push
pop
bound
mov
movsl
add
pop
stos
sub
jmp
mov
jg
dec
lret
and
xchg
adc
ret
or
cmp
xchg
mov
cmpsl
leave
jecxz
push
xchg
mov
mov
xchg
out
push
mov
sbb
mov
pop
add
lds
add
out
lods
or
in
stos
scas
out
mov
push
stc
add
int
mov
in
sahf
outsb
push
ljmp
rcll
inc
and
pushf
xchg
jnp
es
sub
insl
push
jnp
lcall
pop
or
loope
inc
sbb
iret
mov
rolb
popl
mov
stc
dec
mov
scas
dec
pop
add
cwtl
faddp
mov
iret
es
sti
cmp
test
test
dec
sbb
mov
lds
inc
push
ljmp
xchg
xchg
pop
dec
adc
and
mov
sub
or
adc
pop
fsts
or
test
sub
testl
sbb
sub
je
sub
mov
fsubp
lods
mov
into
enter
xchg
sub
and
xchg
xchg
int
fildl
jae
dec
jne
lods
pushf
and
add
ret
inc
nop
mov
repz
dec
jo
fistl
mov
ficoml
xchg
mov
jmp
test
mov
inc
mov
nop
jp
call
lcall
rolb
popa
inc
jle
xchg
dec
jns
pop
aaa
add
push
and
aaa
flds
sbb
pop
movsl
mov
push
xchg
test
or
push
bound
cld
ljmp
jle
inc
or
pushf
pusha
insl
or
mov
sub
push
addr16
sbb
lea
dec
movsl
lret
adc
cmp
pmulhuw
aad
mov
fidivrl
subl
adc
jg
movsl
and
ret
loop
sbb
cmp
dec
in
inc
nopl
xchg
daa
dec
out
shrb
cmp
ja
inc
imul
add
xlat
test
int
fiaddl
mov
loop
inc
in
imul
xchg
inc
sti
add
mov
pop
sbbl
es
iret
cmp
jge
push
mov
and
sbb
lahf
les
xchg
aaa
sbb
cmp
out
sti
clc
mov
stc
shrl
in
arpl
push
mulb
test
insb
mov
cmpsb
imul
rcrb
pushf
ret
mov
popf
in
mov
mov
rclb
cli
push
inc
xchg
mov
xor
stos
or
pop
sbb
pop
int
push
aas
outsl
jnp
clc
add
push
inc
fisubrl
lret
ret
xlat
outsl
sub
sbb
into
sub
jecxz
lea
xor
outsb
add
jg
push
inc
in
push
and
jno
jo
shl
leave
scas
or
push
add
xchg
sub
xor
or
xor
test
jmp
jnp
xor
cltd
mov
push
mov
jg
cwtl
xchg
and
insb
or
add
dec
xorb
pop
add
fnstcw
lea
js
push
fidivrs
add
jo
repz
push
bound
aam
repnz
mov
mov
pause
movsl
into
or
dec
xor
rcrl
push
iret
stos
push
lods
cli
outsl
test
xlat
into
and
das
sar
pop
sbb
mov
into
mov
leave
js
cld
xor
dec
testl
and
push
dec
pop
adcl
mov
cwtl
cltd
sbb
cmp
test
lcall
sbb
jnp
mov
cmp
jae
sub
pop
ret
mov
lahf
cmpsb
fsts
ds
test
mov
mov
ja
cmpsl
mov
cld
mov
mov
sbb
daa
jl
mov
or
pop
js
lcall
aam
jnp
mov
aam
dec
insb
imul
popa
ljmp
xchg
inc
pushf
jmp
dec
xchg
lahf
dec
gs
cmp
xchg
push
push
push
add
xchg
xor
clc
dec
jg
adc
and
mov
sub
pop
xor
add
adc
pop
jl
pushf
aam
xor
aaa
dec
dec
ljmp
xlat
mov
ret
pop
cmp
addr16
add
add
aaa
xchg
jmp
cmp
and
and
mov
aam
and
mov
sbb
or
push
adc
sub
arpl
mov
push
clc
mov
xchg
sbb
add
mov
pushf
enter
or
mov
ljmp
dec
aas
mov
pop
test
pop
mov
mov
test
scas
int3
lret
outsl
mov
dec
nop
cmpsb
fdiv
cmp
daa
xor
and
popa
xchg
aam
loopne
sbb
xor
das
or
lret
dec
lods
pop
in
or
std
jg
pusha
fwait
mov
out
push
add
scas
push
xchg
rcl
arpl
fcmovnu
pop
dec
gs
dec
sub
sbb
clc
push
push
mov
sub
push
mov
outsb
mov
mov
pop
xchg
mov
outsb
and
movsb
add
lret
inc
in
mov
fidivl
cld
jb
adc
pop
xlat
mov
fdiv
adc
jmp
into
divl
movsb
sub
shl
adc
imul
push
dec
mov
mov
pop
enter
inc
xor
xor
mov
add
adc
pop
test
in
or
inc
add
inc
jb
mov
push
in
dec
mov
xor
shll
mov
sbb
lahf
cmp
mov
test
sbb
dec
xchg
imul
in
adc
lods
sub
loop
shlb
in
pop
fisubs
push
mov
data16
je
xor
int
jns
dec
xor
mov
mov
mov
and
popa
sti
pop
insb
movsl
push
cwtl
sarb
movlhps
cmpsl
pushf
minps
gs
jmp
xchg
push
or
aam
fstpt
push
faddl
push
push
mov
xchg
cmp
fdivr
xchg
sbb
mov
movb
dec
dec
out
in
and
xor
jae
int
rcrb
int3
int
push
outsl
in
jp
adc
ljmp
int
gs
dec
xor
xchg
sbb
aam
sub
in
xor
cltd
sbb
cs
jmp
cmp
xor
pop
xchg
out
mov
adc
cmp
mov
stos
imul
fistpl
dec
cltd
loopne
adc
mov
add
repz
imul
scas
lods
mov
decb
and
mov
mov
fwait
push
jge
jo
jo
mov
fsubrs
iret
push
imul
xchg
cmp
je
xor
gs
cmc
ret
fsubrl
outsl
aaa
pop
jo
mov
rcll
mov
mov
mov
inc
xchg
aad
test
cmp
out
mov
cmpsb
jge
cli
dec
cmpsl
xchg
adc
adc
testb
andl
sbb
pop
cmp
scas
mov
inc
dec
xchg
inc
pop
shrb
mov
pop
dec
fimull
pop
jno
xchg
fs
and
mov
icebp
add
cmp
clc
ret
mov
mov
enter
lcall
xchg
cmp
mov
shll
ss
adc
sbb
push
jg
pop
fdivrl
xchg
or
add
sbb
dec
pop
sub
or
lods
xchg
and
in
cld
xor
xor
out
adc
loopew
add
pushf
jns
xor
pop
jae
mov
shlb
popa
mov
mov
outsl
and
jl
xor
in
bound
shr
and
mov
lods
adcl
cmp
loop
push
cmp
dec
mov
ss
in
and
imul
push
dec
inc
outsl
fcoms
hlt
xor
jge
int3
fmuls
das
add
scas
xchg
jnp
jno
fcmovu
lret
push
icebp
push
das
or
fsub
xor
scas
add
adc
ljmp
and
aad
sti
jbe
mov
sub
fs
repnz
inc
out
and
mull
cmp
fistpl
inc
ret
lret
mov
push
loope
cmpsl
mov
mov
xor
rorl
pop
scas
sbb
jecxz
movsl
mov
push
push
sub
ret
arpl
in
pop
hlt
mov
aad
lds
mov
xchg
xchg
and
xor
mov
cmc
jmp
xlat
std
andb
in
add
inc
call
repnz
or
cmp
test
out
add
sar
and
and
pop
push
jmp
jns
je
mov
out
dec
sbb
aam
mov
add
mov
sarb
iret
mov
cmp
or
push
sub
inc
jae
aad
shlb
rorl
ds
mov
mov
repz
mov
or
pop
scas
clc
mov
inc
sub
jmp
lea
rcrl
xlat
mov
sti
sbb
xor
ror
pop
xchg
mov
ret
in
jb
pop
sub
mov
jo
mov
xchg
fdivrl
push
sti
push
mov
adc
add
ds
xchg
xchg
cmp
fsubl
insl
sub
sbb
mov
fstl
out
adc
mov
push
jle
lods
outsb
arpl
lock
add
pop
push
sbb
stos
xlat
jb
int3
rolb
adc
push
or
push
push
mov
sub
repnz
addb
jp
jo
and
sub
jns
stc
jne
jne
loope
ds
mov
cmp
int3
xor
lret
dec
ret
je
mov
push
jp
mov
pop
scas
push
xor
sub
sub
es
movsl
sub
dec
sub
adc
fsubr
cmp
daa
push
out
inc
adc
clc
es
jno
cmpsb
arpl
and
fwait
push
jo
das
dec
inc
insb
fcmovb
push
lods
popa
lea
and
repnz
and
and
test
iret
leave
popa
std
xchg
adc
ret
addr16
addr16
inc
mov
dec
andb
dec
add
out
or
ret
mov
adc
add
xlat
mov
jbe
sbb
arpl
fisubs
mov
or
adc
mov
pop
ret
inc
ja
inc
mov
popa
sbb
dec
mov
dec
jmp
pop
dec
inc
sub
mov
lahf
fs
push
jns
jmp
lahf
dec
xchg
xchg
add
scas
cmc
test
aam
shl
enter
leave
std
adc
daa
mov
mull
addr16
lea
xor
xor
dec
and
bound
fucomip
dec
popf
repnz
mov
out
push
mov
xchg
sbb
ret
shrl
aas
lock
out
iret
mov
test
xlat
call
movsb
test
sahf
lock
mov
loopne
imul
je
sbb
lahf
mov
add
sahf
shlb
jbe
dec
ljmp
inc
pusha
pushf
popa
in
loop
xorb
fsts
stos
sub
loope
mov
inc
cli
sub
sbb
loopne
jmp
out
leave
mov
rcrb
je
pop
jb
lods
int3
lahf
mov
fdivr
mov
pop
mov
mov
jp
daa
fidivrl
stc
incb
mov
xor
in
in
outsl
push
insb
xor
add
fidivs
mov
jmp
ret
mov
pop
mov
pop
int
scas
std
push
jno,pn
leave
fsubr
xor
adcb
push
mov
stc
add
add
and
mov
popf
mov
in
mov
jnp
inc
pop
xchg
jp
daa
xchg
xor
mov
fwait
xchg
adc
mov
push
adc
fs
in
and
mov
inc
xlat
lods
xchg
cli
ret
imul
and
pop
add
xchg
leave
xor
les
adc
cmp
test
hlt
clgi
jno
lock
jo
mov
imul
xor
fs
or
cmp
lahf
mov
add
ficoms
outsb
xchg
or
test
jo
jae
mov
pop
add
jbe
clc
dec
imul
push
push
jnp
aam
fists
mov
stc
notl
aas
in
pop
shlb
clc
ret
ret
test
fld
mov
mov
imul
lods
in
pop
int
test
pushf
dec
dec
mov
scas
jnp
aad
cmp
scas
cmp
loop
lret
mov
push
test
cmp
popf
outsb
add
sahf
aaa
mov
dec
pusha
mov
pop
jmp
mov
jp
loop
aaa
mov
lcall
xchg
lret
adc
xchg
aad
in
sbb
xor
pop
jns
out
adc
mov
imul
mov
js
add
sub
sti
sub
push
sbb
cs
xor
xchg
mov
icebp
hlt
stos
xor
mov
in
jmp
bound
mov
lahf
adc
push
decb
pop
mov
dec
mov
test
add
loope
adcb
out
jmp
test
push
xorl
dec
push
inc
mov
xchg
lahf
push
mov
out
cwtl
jae
mov
aad
cs
ss
les
enter
jb
pop
scas
outsb
xor
and
aam
addl
out
loope
cmp
jo
outsl
xchg
in
or
mov
in
push
dec
rcl
sbb
popf
int3
adc
lods
cmp
lods
lds
insb
cli
cwtl
js
adc
pop
dec
cmpsb
nop
xchg
or
mov
xchg
flds
ret
sbb
fiadds
jmp
xchg
and
es
stos
movsl
sub
mov
js
loop
subl
jbe
rorb
shrl
push
xchg
push
jp
fs
push
scas
cltd
mov
or
cmp
mov
mov
cltd
lret
cmp
ret
inc
jo
rcrl
push
jno
sbb
adc
mov
xchg
push
aas
or
dec
sarl
aaa
jnp
cmp
movsb
daa
xchg
fmuls
lret
lods
mov
lret
out
pop
push
add
sbb
fistl
pop
push
ret
icebp
je
xchg
mov
fsts
push
sbb
pop
push
out
int3
rorb
sbb
jmp
xchg
xchg
popf
dec
mov
ljmp
test
loope
sub
jl
imul
imul
jp
pop
push
sarl
jno
xchg
lret
lods
push
jo
cs
fldenv
cmp
lea
stc
xlat
mov
aad
gs
lds
test
shll
push
pop
iret
push
xchg
and
jmp
and
mov
xor
stc
cmp
xor
sbb
pop
sbb
add
arpl
mov
and
mov
insb
pop
sti
jg
jnp
sub
ss
jp
xchg
jnp
mov
add
sti
mov
test
add
xorl
enter
fldl2e
jo
nop
push
inc
mov
or
jp
mov
js
cld
pop
icebp
mov
jb
cltd
mov
insl
xchg
mov
pusha
mov
mov
xor
subl
dec
fwait
push
pop
xchg
aaa
sbb
int3
pop
mov
cmpsl
pop
xlat
cmp
mov
and
xor
stos
hlt
popa
jp
mov
dec
push
lret
push
in
popf
int3
mov
inc
push
jge
push
push
outsl
iret
push
call
or
mov
jecxz
mov
rclb
in
js
imul
call
jb
inc
in
push
lds
out
repnz
adc
inc
outsl
and
sub
jae
jmp
addr16
lods
adc
inc
add
inc
and
sbb
xor
testb
mov
icebp
jp
mov
arpl
shll
lods
mov
dec
xchg
dec
ja
aas
and
jle
push
imul
xchg
cltd
sbb
icebp
xor
fs
shrl
idivl
div
arpl
pop
lcall
fcompl
shrb
cmp
xchg
imul
mov
push
mov
push
pop
pop
iret
jge
mov
out
adc
dec
xor
push
cltd
fwait
mov
aad
and
add
roll
or
inc
jb
gs
inc
mov
adc
cmpsl
lcall
cli
sub
data16
hlt
lcall
pop
iret
jl
mov
lds
gs
aam
aas
xchg
arpl
pop
outsl
call
pop
and
les
mov
out
fisttpl
movsb
ja
push
imul
xor
sub
fwait
movsl
dec
cld
mov
sub
sbb
clc
inc
xchg
mov
imul
cwtl
lock
adcb
stc
cli
add
lcall
push
fists
lock
pusha
test
popf
arpl
scas
pop
or
movb
and
push
inc
cmp
push
addl
mov
mov
or
cmp
movl
cmp
fwait
sub
orl
insl
out
test
sbb
mov
fdivl
das
insl
xchg
push
cmp
outsl
in
or
pop
loop
jp
in
jl
movsb
xchg
xor
aaa
mov
jb
or
in
popf
movhps
sbb
sub
pop
xor
pop
in
jno
scas
test
fwait
push
cmp
jnp
mov
std
xor
cmp
idivl
adc
cmc
mov
dec
adc
fiadds
insl
add
cwtl
xchg
fwait
xor
mov
add
and
icebp
aaa
mov
mov
lds
dec
aaa
inc
cmp
adc
sbb
arpl
and
fimuls
inc
sub
pushf
mov
sbb
push
mov
cmp
jmp
cmpsb
adc
cmp
or
in
or
sahf
stos
fistpl
inc
sbbl
push
fidivs
ljmp
rclb
inc
or
add
or
imul
lock
mov
pop
popf
icebp
lahf
test
jecxz
test
jbe
cmp
lahf
stos
data16
std
jmp
leave
mov
in
cwtl
sub
cmp
add
mov
pop
inc
ret
jle
jmp
mov
jle
rorl
cmp
aad
mov
jge
popl
jle
int3
scas
pop
jno
mov
fdiv
mov
jb
sub
fdivr
movsl
pop
mov
pusha
stos
das
sbb
pop
aad
jecxz
and
clc
sar
notl
mov
add
xor
pop
out
sahf
loopne
loop
mov
push
xchg
aam
inc
push
sbb
xor
out
xchg
iret
xor
lret
negb
arpl
push
cmpsl
adc
jo
mov
mov
lods
and
xor
mov
or
mov
xchg
xlat
inc
or
pop
inc
inc
push
test
inc
aaa
add
hlt
test
jne
xlat
push
mov
fisttpll
pop
leave
or
sbb
stos
lods
jp
and
roll
inc
mov
int3
aad
int
xor
pusha
mov
xchg
imul
cmp
add
or
scas
xor
add
pusha
and
sbb
jno
xchg
ds
jp
sbb
cwtl
or
popf
into
imulb
cmpl
das
out
arpl
pop
xchg
mov
mov
jg
add
and
add
mov
sahf
lcall
pushf
outsl
or
push
mov
inc
lea
aam
push
jge
push
lcall
push
cmp
jns
out
jns
out
jne
xor
mov
les
mov
fidivl
lahf
jge
dec
lcall
inc
lods
ljmp
aad
lret
sbb
mov
stc
in
pop
xor
jg
lcall
stos
mov
pop
repz
jns
cwtl
mov
jge
sbb
sub
jg
add
loope
jo
enter
out
movsb
jns
add
pusha
out
imul
fldt
cmp
pop
sub
loopne
ja
ja
jge
mov
jo
pop
fdivs
dec
and
sbb
leave
and
push
cld
roll
lahf
inc
imul
mov
jl
mov
jae
push
cmp
repnz
repz
mov
push
jns
jne
pop
cmp
sbbl
jns
dec
ror
add
bound
aaa
dec
stc
mov
xchg
sbb
push
jns
arpl
mov
or
pop
adc
inc
idivl
xchg
jmp
pop
cmpsb
insb
mov
out
lret
jp
push
sub
add
push
push
xchg
push
stos
push
push
mov
gs
xor
pop
stos
xchg
bound
mov
inc
nop
in
repz
fwait
scas
mov
inc
outsb
std
mov
push
lods
jae
xor
addr16
call
sbb
jecxz
cwtl
push
mov
js
scas
in
jns
imulb
fstl
fnstenv
sarb
cmpl
cmp
stos
cmp
dec
push
and
ret
test
fcoml
sub
addb
icebp
jae
enter
pop
sbb
movsb
int3
ret
push
jl
mov
pop
insl
outsb
mov
repz
push
call
cmp
or
xor
add
jle
scas
inc
lahf
dec
adc
adc
sbb
dec
outsl
adc
push
ret
iret
xlat
leave
push
mov
dec
mov
out
cmpsl
aam
insl
push
cmpsl
or
daa
and
rcl
call
push
lret
cld
and
mov
cmp
inc
push
shl
pop
cld
mov
lret
mov
rclb
sbb
ja
pop
repnz
jle
fs
mov
cld
push
cli
mov
inc
xlat
out
pop
xchg
orb
cmpsl
xchg
stos
xor
outsb
dec
mov
pop
sub
inc
inc
mov
popf
frstor
insb
dec
das
lds
and
in
jg
inc
dec
sub
fbld
les
xchg
mov
jbe
mov
xor
pop
push
sahf
lcall
xchg
inc
add
cmp
push
rol
jl
ss
inc
xor
push
and
dec
dec
xchg
rclb
add
daa
xchg
daa
adc
add
xor
fists
sbb
and
push
xor
jecxz
icebp
dec
aad
fisttps
lods
push
sub
ret
rclb
loop
out
pop
fsubrl
js
pop
mov
adc
fmuls
fcmove
jmp
and
pop
pop
loope
sbb
in
mov
lock
pop
jp
xor
aad
sub
cmc
and
pop
das
lahf
test
xchg
nop
inc
inc
inc
push
adc
ficoms
ret
xor
push
add
sti
hlt
lea
sub
inc
mov
or
mov
rcr
push
mov
cmp
addr16
imul
inc
push
pop
push
xlat
sbb
cwtl
ja
inc
cmp
movsl
pop
or
lds
push
int
push
popa
cld
idivb
cltd
xchg
inc
insl
xor
lret
cmp
dec
aad
test
lods
jmp
jl
out
dec
and
call
mov
push
call
arpl
pop
jae
inc
aam
daa
movsl
xchg
and
sbbb
sbb
xor
popa
mov
repz
in
pop
pop
call
sub
out
dec
subl
cmp
or
adc
cmp
mov
adc
xchg
rcll
movsl
imul
je
faddl
dec
in
inc
loop
jbe
movsl
pop
sub
xchg
cmc
or
insl
mov
sub
pop
into
push
fsub
lret
ret
lods
popf
mov
lods
jge
cltd
fsts
js
icebp
inc
pop
sarb
jle
repnz
adc
jbe
shlb
sahf
les
sbb
lret
sbb
inc
pop
mov
enter
add
jns
mov
div
js
and
std
pcmpgtd
ja
or
and
sti
fstpl
filds
mov
push
push
pop
inc
mov
jns
dec
orb
or
pusha
out
mov
push
jmp
rdtsc
and
cmc
sub
jnp
leave
jmp
and
ret
mov
fcmovbe
jp
jl,pn
fwait
xor
aam
sub
mov
es
test
inc
jo
push
mov
andl
push
cltd
test
clc
dec
add
mov
bound
mov
cld
nop
cmp
fsubrs
or
movl
shrb
xor
mov
push
sti
outsl
push
push
push
push
imulb
xor
push
repz
iret
mov
sbb
sbb
test
ja
pop
mov
pop
gs
rorb
mov
repz
and
xchg
sarl
xchg
shl
arpl
sbb
mov
mov
mov
push
xor
popf
lods
repnz
jbe
adc
sbb
xor
dec
call
inc
pop
out
outsb
dec
xor
cmp
or
jmp
jp,pt
rcrb
shr
cmpsb
test
or
in
in
clc
push
ret
fsub
cli
ficoms
sbb
fdivl
in
subb
xor
jb
adc
pusha
negb
add
jne
loope
mov
pop
mov
stos
inc
repnz
nop
mov
push
shll
xchg
movsb
pop
or
dec
cmp
cs
out
lahf
fneni(8087
sbb
push
mov
nop
loopne
jmp
mov
push
fcoml
jg
and
movsb
aam
xor
adc
adc
inc
fwait
push
fdivl
div
out
stc
js
sub
cmpsl
je
das
xor
jno
lahf
cmp
inc
xor
into
add
out
hlt
cmp
in
aas
adc
pop
push
xchg
ds
xor
mov
sbb
mov
std
rcrl
xor
int
push
leave
aas
test
pop
push
rcrb
pop
imul
adc
inc
flds
inc
out
cmpsl
dec
pop
sub
cmpsl
shll
lret
bound
inc
pushf
or
xchg
icebp
push
sub
scas
xor
xor
pop
aad
jb
push
divb
jo
xchg
arpl
add
fwait
sbb
add
mov
sbb
cmp
mov
lret
inc
in
sbb
mov
fxtract
pop
jns
not
or
insl
fimull
iret
xchg
jmp
cli
insl
sbb
mov
mov
push
pop
aad
ss
test
and
sbb
jle
cli
mov
xchg
lret
mov
aas
shr
or
sbb
push
mov
or
out
ja
cli
fwait
xchg
fisubl
mov
fucomip
and
xchg
mov
add
adc
gs
push
fwait
sbb
push
pop
push
scas
ja
lcall
lock
pop
pop
pop
dec
add
add
mov
push
pop
pop
pop
les
fwait
xchg
or
cmp
mov
pop
mov
pop
cli
cwtl
mov
dec
xorl
ljmp
sub
sarl
lahf
mov
outsb
fisubrl
rcll
es
in
in
adc
rol
mov
lock
hlt
das
out
repnz
in
test
mov
push
inc
push
cmp
bound
mov
cmpl
in
popa
cmp
sbb
mov
in
orb
xchg
cltd
sbb
mov
js
sbb
xchg
hlt
in
hlt
xchg
loope
push
loopne
push
xchg
inc
jnp
and
mov
and
mov
pop
adc
jnp
sub
into
dec
adc
cmpsb
mov
mov
test
lcall
mov
xchg
or
mov
icebp
jg
mov
jne
xchg
pop
fdivr
lds
mov
arpl
cltd
lods
dec
mov
or
in
mov
jnp
outsb
or
pop
in
xchg
test
xchg
outsb
fistpll
sbb
cmpsb
in
punpcklbw
xor
jecxz
imul
jge
insb
sbbl
mov
or
mov
ja
adc
stos
sbb
mov
inc
fs
rol
jne
or
mov
xchg
mov
outsl
add
cwtl
or
ret
jp
fdivp
icebp
daa
adc
sub
lret
push
loop
add
int
jp
pop
jae
cmp
shll
pushf
into
push
push
cmp
or
out
in
jecxz
ret
jecxz
mov
popf
fwait
fwait
pop
adc
dec
dec
sbb
mov
ja
repz
or
jle
pop
dec
and
imul
out
js
into
push
sbb
orl
jno
push
mov
pop
pop
cmpsl
insb
pop
leave
jnp
adc
cli
mulb
icebp
adc
stos
add
jge
jbe
sbb
lock
sub
jnp
aas
sub
fdivrl
lahf
iret
add
daa
out
fwait
and
inc
mov
lds
data16
pop
dec
fistl
mov
jl
dec
fstl
scas
sub
inc
into
add
mov
jg
loope
mov
jo
int3
test
jne
lcall
imul
jbe
mov
xor
add
and
shl
cmp
xchg
xchg
mov
pop
lcall
jb
cmp
jbe
insl
push
jl
pop
inc
or
pop
mov
mov
std
adc
in
and
push
or
test
js
es
inc
and
movsb
out
push
cmp
mov
jp
mov
jae
lea
stos
cmpsb
xchg
or
push
enter
push
sbbb
push
daa
add
out
sarl
imul
inc
cmp
xchg
sbb
push
adc
fwait
xchg
and
jo
xchg
icebp
scas
iret
mov
sbb
out
shrl
xor
jmp
outsb
lcall
fwait
pop
adc
ret
adc
lahf
mov
lock
mov
adc
or
adc
iret
mov
cmp
xchg
sbb
mov
jmp
ljmp
iret
imul
and
or
fldcw
data16
adc
cmp
mov
mov
nop
cmp
fisubl
add
jae
push
enter
call
es
sahf
mov
daa
or
movsl
xor
or
mov
cld
and
enter
cmpsl
push
lods
int
cmp
fwait
push
mov
sahf
mov
xor
aad
push
and
and
pop
and
sbb
mov
call
imul
loope
aam
xchg
repz
arpl
jmp
inc
imull
adc
out
jl
aas
mov
add
cmc
mov
insl
xor
ficoms
test
sbb
push
in
or
sti
inc
insl
lea
ljmp
sahf
sub
xor
out
cltd
cmp
pop
pop
push
adc
mov
sbb
or
adc
xor
pusha
shl
mov
xor
adc
mov
test
sub
inc
aas
out
lods
loopne
cmp
scas
clc
adc
aas
add
mov
xchg
fdivp
rorb
out
mov
test
jb
cld
sar
adc
out
cs
sub
addr16
in
lea
popa
sbb
jnp
xchg
jno
xchg
mull
lds
decl
dec
xchg
jae
sub
sub
dec
xor
test
sbb
adc
sahf
pop
popa
test
cltd
gs
jno
bound
pusha
dec
lods
pushf
jbe
adc
lret
lds
jg
movsl
cmp
sahf
xchg
bound
jg
jb
aas
and
fdivs
cli
rclb
repz
jl
inc
iret
sub
out
xchg
insl
dec
aad
mov
in
push
and
orl
ljmp
rcrb
cwtl
dec
dec
ret
xchg
jle
arpl
dec
popl
push
sub
cld
lahf
pop
pusha
je
mov
stos
rol
add
jecxz
pop
rcr
jle
cmp
sub
cli
mov
push
adc
outsl
les
cli
ret
insl
cli
insl
mov
pop
int
mov
ja
inc
rolb
or
xor
ja
je
jmp
add
mov
sbb
sti
mov
roll
movsl
adc
jle
mov
mov
bound
mov
xorb
rcl
scas
ss
clc
and
shll
mov
xor
or
aaa
rol
sahf
jmp
test
rcrl
movsb
cmpsl
mov
add
xchg
repz
addr16
cltd
test
pop
pop
push
lock
loop
pop
jle
test
rcrl
pop
add
lahf
lock
cmpsb
push
pusha
cs
sub
hlt
mov
inc
cmc
and
jecxz
dec
lds
roll
or
outsb
stos
sub
loope
sti
jl
rclb
adc
mov
dec
loope
or
mov
dec
arpl
fwait
push
int
fstp
jnp
lods
lahf
inc
sub
dec
out
dec
int3
fsubs
in
ds
push
push
sub
stc
adc
push
mov
imul
inc
jp
mov
nop
outsl
insb
cwtl
sar
xor
push
mov
jb
sbb
aad
xchg
test
sub
xchg
loopne
loopne
stos
and
add
push
mov
adc
dec
and
repz
mov
inc
and
mov
clc
ss
pop
ret
inc
push
lret
std
mov
pushf
mov
mov
and
cmp
sub
scas
rorl
add
xor
cmp
shll
addr16
adc
inc
xchg
xchg
push
add
imul
fisttpll
scas
mov
xchg
mov
pop
pop
cltd
dec
add
or
scas
lret
mov
notl
push
cmp
repnz
mov
das
jg
in
pop
movsb
movsl
and
sub
dec
sahf
inc
xchg
movl
ficompl
mov
mov
cs
jle
cmp
mov
cmp
push
ret
mov
xor
dec
xor
cmp
mov
push
bound
sub
inc
pop
inc
adc
les
jns
outsb
or
inc
enter
nop
push
add
imul
mov
clc
sbb
inc
sbb
sub
icebp
cmp
mov
mov
cwtl
mov
sub
je
add
sub
stc
shll
push
gs
mov
push
in
int
out
xchg
sbb
xor
mov
out
shrl
sbbb
shlb
and
add
pop
add
xchg
push
mov
cmp
fucomi
pop
jle
bound
or
sti
shrb
mov
lea
mov
sarb
and
hlt
dec
mov
adc
dec
sbb
imul
cmp
sub
fisubs
icebp
shl
test
cwtl
jge
daa
in
cmp
cmp
mov
outsb
testl
pop
cmp
out
mov
imul
mov
mov
sbb
in
insl
adc
adc
ret
sub
out
inc
incl
or
mov
dec
fcomip
ljmp
arpl
push
add
lods
mov
sti
adcl
loop
pop
xchg
adc
pop
or
cli
push
fidivrs
fadd
or
inc
scas
xor
jae
shlb
scas
and
mov
pop
dec
dec
xchg
adc
mov
in
fstpt
ret
lods
mov
mov
mov
push
push
das
pop
fisttpll
push
xchg
xchg
outsb
dec
xor
out
mov
add
push
pop
sub
add
scas
jne
in
sarb
and
jns
cmp
lods
outsb
addr16
jmp
push
jnp
inc
mov
mov
and
jle
lcall
sti
xchg
xor
or
or
mov
pop
iret
mov
in
add
loope
dec
imul
mov
fxch
or
fcomps
add
in
dec
mov
fwait
mov
push
out
int3
out
pop
pop
iret
mov
call
xchg
loope
xorl
dec
cmp
rorb
jecxz
fdivrs
sar
cmp
fisttps
xor
insl
ror
sbb
mov
xlat
repnz
aam
jg
inc
xor
leave
mov
mov
aad
fldcw
inc
inc
push
push
iret
adc
or
imull
xchg
nop
stos
push
clc
inc
lret
adc
cmp
push
cltd
xchg
cltd
jle
insl
push
mov
sbb
fstpt
inc
sbb
pop
fisubrs
sub
dec
js
jo
cld
cli
xor
xchg
loope
fistpl
dec
hlt
or
stos
dec
flds
xor
lea
pop
push
push
jge
add
sbb
pop
xchg
and
xchg
add
pop
push
fldt
pushf
or
add
push
roll
repnz
addr16
pop
adc
outsb
popa
push
push
lret
jae
dec
rcrl
xchg
adc
cld
lretw
out
stos
adc
popa
in
icebp
or
sbb
icebp
cmpsb
xor
lods
push
addr16
test
test
fs
dec
jl
pop
dec
push
lcall
fisubs
sahf
sbb
cmp
rcrl
into
dec
ror
inc
pop
jns
mov
pop
mov
or
push
jg
out
jnp
jbe
sub
mov
sub
sbb
push
add
lret
aad
dec
dec
or
adc
aaa
mov
popa
inc
leave
add
mov
cmp
pop
lret
fisttpl
pop
or
int
insb
aas
mov
lcall
jge
cwtl
xor
pop
jne
aad
add
or
xorl
xor
aad
cmp
push
mov
dec
popf
out
push
notl
test
dec
pop
mov
pop
daa
mov
mov
aad
add
push
adc
jns
arpl
ret
or
jp
sub
mov
dec
out
and
mov
jecxz
aaa
popf
jecxz
add
xchg
sbbl
sahf
mov
leave
jno
push
adc
adc
out
push
jl
call
inc
daa
mov
sbb
push
enter
mov
sub
cmp
fs
ficomps
adc
imul
ljmp
xchg
or
rcll
rolb
mov
inc
jnp
or
and
jae
add
adc
sbb
jnp
and
xchg
ret
and
ret
xchg
dec
jb
push
add
out
sub
sbb
es
insl
es
adc
icebp
mov
lock
in
bound
pop
pop
xchg
pop
dec
adc
in
jnp
push
popa
xchg
adc
mov
jge
mov
inc
in
mov
pop
pusha
inc
daa
sbb
or
dec
sbb
push
fsts
lret
push
outsl
dec
rorb
xchg
js
adc
mov
cli
jnp
mov
sub
movsb
xchg
dec
xchg
subl
arpl
mov
jmp
fsubr
pop
and
mov
decb
cs
push
mov
jb
push
xchg
adc
pop
jnp
xor
add
enter
mov
test
loope
mov
xchg
xlat
mov
add
pop
lret
cmp
pushf
jmp
outsl
cmpsl
mov
push
or
jo
or
mov
cmp
rolb
aam
ljmp
mov
out
pushf
jmp
sahf
cmp
push
mov
ret
inc
inc
sbb
ror
push
xchg
adc
pop
pop
inc
andl
jmp
sub
pop
add
sub
stos
and
inc
stos
lcall
pop
dec
cmp
sub
mov
cmp
into
pop
subb
push
dec
pop
sti
mov
mov
daa
or
loop
aas
mov
jnp
pushf
data16
pusha
xlat
mov
mov
push
jle
bound
pop
sbb
dec
sub
jl
jne
adc
sub
fildll
std
cmpsb
sarl
les
push
jecxz
adc
push
lahf
ret
lea
mov
inc
adc
je
and
shl
or
orl
push
jle
aaa
sub
insb
fs
cmpsb
movsl
pushf
mov
pusha
out
pop
mov
repnz
dec
das
ret
adc
lahf
jg
cmp
mov
ret
mov
cmp
das
fsubr
push
pop
or
jmp
cmpsl
jb
sbb
push
xchg
pop
fstpl
sar
sbb
push
jecxz
sbb
inc
rorl
in
aaa
jbe
repnz
icebp
in
push
push
push
jge
pop
int3
dec
xchg
xchg
aam
dec
sti
out
outsl
pusha
out
iret
pushf
adc
rcl
xor
call
adc
repz
out
ss
and
daa
aam
xchg
dec
sbb
pop
ljmp
dec
mov
xor
mov
pop
aad
fsubr
jae
fists
mov
sub
lret
pop
ficomps
dec
mov
test
flds
push
dec
andl
inc
jbe
dec
push
jmp
mov
je
jne
leave
mov
cmp
gs
gs
or
stc
pushf
adc
stc
mov
mov
add
leave
xor
pop
cltd
lock
sbb
pop
out
inc
pop
push
outsl
jae
xchg
dec
dec
int
pop
stos
sbb
dec
push
cli
xchg
cwtl
inc
and
or
push
jg
push
rclb
les
stos
sub
mov
dec
and
dec
xchg
adc
test
add
inc
sbb
ret
inc
test
jge
mulb
pop
cmc
aas
movsl
mov
pop
mov
mov
add
mov
leave
add
or
andl
ret
stos
movsl
pop
imul
repz
les
int
data16
jmp
loop
or
push
mov
popa
in
mov
lahf
pop
jg
int3
mov
dec
adc
sbb
fistpll
mov
inc
aad
jg
insl
jl
adc
mov
sbb
subl
popf
jbe
stos
ljmp
mov
push
int
fwait
pusha
sbb
ret
cld
adc
addr16
pop
mov
out
push
pop
jne
cmc
pop
or
sarb
popf
arpl
sbb
insl
aad
add
fcompl
ljmp
dec
popa
mov
test
out
cmc
push
mov
movsb
stos
mov
add
shl
ja
pop
mov
sub
pop
push
lcall
mov
xchg
inc
loope
into
jge
filds
sbb
mov
mul
or
xchg
and
push
mov
mov
inc
jo
cmp
lret
mov
cmp
repnz
add
adc
cs
lret
jns
lods
fstpt
cmp
icebp
pop
push
inc
aam
jg
roll
cmp
inc
xchg
push
ljmp
mov
pop
cs
nop
push
out
es
idivl
js
cmp
pop
mov
dec
inc
scas
mov
fsubrs
popf
cld
jmp
out
shrl
sub
fadd
stos
cmpsl
push
mov
sub
mov
push
mov
mov
dec
sub
stos
push
int3
cmp
daa
movsb
xchg
jle
adc
xor
in
adc
push
lock
fsubp
out
enter
and
ret
ljmp
xchg
sub
data16
lock
mov
pushf
push
test
in
pop
lds
imul
test
push
ss
sti
or
add
stos
stc
or
mov
mov
jmp
xlat
or
cltd
sarb
loope
push
mov
ret
sti
shr
outsb
xchg
mov
out
cmp
xor
fidivrl
sbb
mov
mov
add
jae
bsr
je
or
xor
pop
pop
xchg
movb
sub
jmp
aas
jge
jb
sub
pop
addb
pop
mov
jp
jg,pt
in
add
mov
shll
dec
cmp
sub
jl
repnz
or
jns
loope
mov
pop
gs
arpl
fists
movsl
cmp
xchg
jb
adc
sub
xlat
dec
mov
or
mov
sub
test
loope
addl
in
adc
push
sar
sbb
or
in
sbbl
xor
mov
leave
rcll
jo
clc
daa
pop
imul
sbb
cmc
xchg
lret
lea
loope
arpl
cmp
mov
sahf
mov
xchg
into
mov
cmpsl
adc
insl
dec
or
stos
int3
test
jo
cwtl
shrl
sbb
iret
inc
adc
mov
jmp
push
pop
inc
sub
sahf
es
push
and
jmp
mov
loope
or
xor
dec
adcb
int3
cmp
out
lods
push
je
mov
adc
pop
jnp
xor
jge
mov
xor
mov
mov
aam
cmp
out
add
sbb
lods
dec
mov
xchg
or
movaps
inc
gs
and
mov
adc
cmp
inc
ds
xchg
xchg
xchg
pop
cmp
cmp
mov
lods
jo
dec
andb
mov
lock
mov
ret
shll
xchg
inc
andl
imul
and
test
push
in
or
xchg
add
bound
mov
adc
inc
and
adc
nop
ss
mov
xchg
or
jnp
dec
mov
mov
push
mov
xchg
jno
out
mov
movsb
arpl
and
adc
rorb
pop
mov
adc
ret
pop
add
lea
in
sbb
in
ficomps
ds
je
add
fbstp
ja
sub
cmp
ja
dec
insb
test
jo
cmp
mov
cld
mov
cmp
fidivl
scas
ds
pop
and
jg,pt
cmpsl
lock
pop
fmul
xor
adc
cmp
cmp
pop
or
les
aad
mov
adc
cmp
adc
xor
dec
jnp
xchg
and
mov
xchg
xor
pop
ja
mov
orl
pop
incl
mov
repz
xchg
testb
mov
fstps
mov
push
mov
call
jo
sbb
leave
das
dec
sub
inc
or
aam
mov
into
out
sub
roll
mov
and
lahf
push
imul
add
mov
jl
rcll
stos
pop
pop
testb
cmpsb
repnz
pop
dec
xor
pop
or
add
xchg
xchg
aaa
jmp
mov
dec
inc
cli
andb
adc
sbb
clc
cmp
stos
out
inc
jbe
jg
fs
stc
xchg
push
mov
or
dec
das
xlat
cmp
sub
cmc
mov
inc
push
lcall
outsb
mov
ss
adcb
sub
xchg
xchg
clc
inc
sti
sub
xor
xor
imul
jle
nop
testl
in
loop
nop
jp
or
push
cmp
push
dec
loope
xchg
call
movsl
mov
or
jp
cli
push
rolb
enter
add
add
jp
pop
cmp
jmp
movsl
mov
jmp
jnp
lahf
mov
push
mov
andps
mov
ja
mov
dec
outsl
inc
les
pop
pop
add
test
movsb
orb
pop
or
dec
decb
aaa
mov
out
cmp
adc
ljmp
cmp
call
xor
fcoms
add
xchg
stc
cmpsl
int
inc
mov
movsl
xchg
mov
addl
add
jno
push
adc
sarb
ret
es
fistpl
mov
push
push
xor
inc
mov
fiadds
bound
pop
js
sub
xor
das
out
into
lret
jge
sbb
jo
mov
icebp
adc
push
sbb
xor
xchg
add
test
or
mov
fcoml
inc
fisttpll
insl
sbb
stos
aad
mov
or
fists
fmull
mov
push
notb
sbb
cs
repz
sbb
and
mov
mov
sbb
aaa
stos
loop
xbegin
or
mov
mov
bound
adc
or
lds
repz
cmp
dec
inc
adc
cmp
mulw
test
or
insl
lods
cmp
stos
sbb
xchg
cmp
adc
adc
mov
pop
and
mov
push
rorb
inc
inc
inc
pop
or
add
sbb
or
lds
movsl
adc
push
xchg
sbb
cmpsb
dec
js
mov
sub
mov
mov
testl
cmc
xchg
and
test
inc
mov
adc
and
mov
cmp
es
mov
or
jle
dec
mov
gs
fisttps
and
aas
xor
scas
sahf
xor
pop
in
out
popa
xchg
in
sub
addr16
jno
mov
adc
push
sub
mov
inc
xchg
inc
ret
rcrb
dec
cmpsb
pop
mov
iret
ret
addr16
out
mov
mov
outsl
lea
or
pop
dec
lahf
adc
bswap
cmpsl
pushf
lea
mov
dec
into
inc
jbe
inc
ljmp
jne
repnz
pop
xchg
sub
inc
dec
cmp
cmpl
fs
loopne
js
fcomp
roll
je
pop
xor
addr16
icebp
psrld
push
gs
and
push
jne
adc
sbb
dec
fcmovne
into
mov
lods
movsl
ljmp
push
xor
lret
add
pop
push
xchg
in
jmp
xchg
inc
add
push
ret
inc
jmp
sbb
les
rcll
notl
mov
xchg
jo
sbb
aam
push
in
lcall
lods
mov
loop
int
or
mov
repz
jg
aam
imul
sub
pop
lds
out
insl
push
sbb
mov
sbb
loop
sbb
cs
sub
add
dec
es
add
pop
scas
ret
adc
into
mov
add
fwait
jle
pop
jmp
xchg
into
scas
lret
jp
and
sbb
test
repnz
shll
mov
sub
jecxz
pop
outsl
lea
push
aaa
mov
mov
imul
jg
mov
mov
push
pop
std
cmpsb
sub
push
cmc
in
cmp
fs
xor
jle
mov
jbe
mov
dec
ret
imul
inc
pushf
xor
mulb
mov
in
ficoml
dec
cmp
sbb
out
pop
jnp
das
outsl
jb
test
mov
sub
mov
outsb
jecxz
scas
jl
and
arpl
adc
aaa
jle
out
arpl
sbb
or
lcall
outsb
or
adc
jmp
call
shrl
inc
sahf
lret
lods
and
adcb
jo
hlt
daa
sub
test
add
fildl
test
xchg
cwtl
data16
clc
lds
xchg
cwtl
dec
xor
test
sub
clc
imul
dec
ja
or
cmp
adc
movsb
aad
stc
out
add
xchg
ret
xorb
or
add
les
rol
mov
pop
jp
gs
and
mov
jae
jns
add
pop
push
mov
inc
outsl
dec
mov
or
mov
sbb
pop
test
cmp
std
lret
inc
repnz
xchg
mov
inc
iret
cltd
inc
lahf
imul
addr16
and
xor
in
and
jp
dec
in
sbb
xchg
inc
add
ret
jne
dec
clc
stos
imul
dec
int
sub
adc
lret
or
xchg
xchg
fidivrs
fsubl
xchg
std
cmp
daa
in
mov
int3
mov
ud1
ret
mov
lods
das
or
data16
call
das
push
cmpsl
bound
xchg
lret
jecxz
xchg
dec
mov
fsubrs
push
push
sysexit
mov
sub
xchg
arpl
ds
push
jmp
jbe
hlt
imul
pop
add
jb
mov
sub
js
leave
xor
and
and
pop
out
imul
lock
out
int3
movsb
push
sbb
outsb
jnp
xchg
pop
das
and
sub
shr
add
stos
in
fdivs
adc
hlt
out
cmp
int3
es
pusha
sub
ss
mov
out
popf
sbb
jg
decb
pop
subb
pop
out
cmp
shll
jmp
lahf
loop
xorl
sub
jns
aas
je
in
test
imul
std
fnstsw
adc
push
dec
and
sbb
or
pop
push
std
xor
jbe
ror
incl
cmpsb
push
pop
xor
xor
or
cmpsl
clc
mov
test
js
rcr
xchg
mov
lret
mov
sbb
sti
repz
push
flds
rcl
jnp,pn
outsl
xchg
lahf
jge
test
pop
sbb
in
imul
cld
add
aam
jns
adc
daa
mov
jae
test
cmp
filds
repnz
and
jmp
int3
jbe
mov
popf
test
push
add
insl
pop
adc
mov
sbb
pop
out
les
push
jne
cmp
mov
sub
stos
aas
int3
push
popa
jecxz
ror
sahf
jbe
repnz
test
lcall
scas
sub
lret
mov
outsb
lds
popa
sbb
dec
repnz
adc
or
pushl
push
dec
push
mov
xor
dec
ret
inc
jae
cmp
adc
inc
xor
mov
and
out
or
jp
inc
xor
test
pop
cmp
xchg
jp
not
repnz
repnz
test
inc
push
fstl
popa
adc
sub
lods
lods
popf
and
xor
xchg
and
mov
xchg
cmp
or
inc
loope
iret
and
lret
cmp
sbb
jp
push
mov
inc
sub
mov
or
sub
mov
adc
mov
in
lods
loope
out
jo
mov
jmp
dec
mov
pop
loope
sbb
cmp
loope
lea
movsl
jmp
or
jae
dec
subb
sti
fcmove
in
push
test
mov
mov
repnz
sarb
xchg
stc
cmpsb
pop
movsl
cltd
add
pextrw
imul
loope
mov
xchg
mov
loope
test
or
gs
xchg
sbb
xchg
imul
mov
sub
jns
scas
cmpsb
cmp
roll
add
pinsrw
jb
mov
jl
imul
stos
sub
or
push
mov
nop
sbb
jge
cltd
jg
outsb
lcall
pop
mov
mov
lret
or
mov
in
pop
je
and
repnz
xchg
test
jo
cmp
lods
hlt
mov
xchg
int
sub
jo
push
loop
int3
sbb
mov
push
cli
fst
mov
cli
add
int
addb
nop
jb
mov
add
pop
xchg
notl
and
imul
or
shll
and
scas
jecxz
movsb
lds
or
mov
sbb
mov
add
or
call
lret
test
jnp
stos
mov
adc
lock
sbb
sub
test
lret
fs
mov
dec
cli
lret
cmpsl
cwtl
jae
test
stc
and
jl
aad
pop
mov
and
das
movsl
or
shrl
pop
lds
sbb
mov
mov
inc
cs
ret
pusha
adc
inc
jl
push
outsl
cmp
addr16
cmp
jmp
cmp
movsl
int
jnp
inc
or
test
test
imul
xorb
ds
stos
repnz
mov
hlt
sbb
pop
sub
ds
out
jg
fsubrp
fadd
outsl
fcoml
cwtl
inc
dec
jno
outsb
mov
inc
sbb
lret
mov
leave
repz
and
dec
loopne
stc
push
push
pop
shrb
lcall
dec
mov
loope
pop
aaa
push
cmp
out
addr16
mov
dec
and
dec
pop
xchg
xor
mov
xchg
add
outsb
push
xchg
or
mov
es
mov
and
in
outsl
pushl
adc
add
jns
sub
adc
aad
add
test
dec
sahf
cmpsl
mov
jmp
lcall
adc
ja
js
in
incb
dec
fldenv
loopne
mov
lds
or
mov
decb
ret
add
fimuls
add
xor
subb
jns
les
and
sti
cmp
dec
inc
imul
scas
out
fisubrs
mov
iret
and
insl
inc
jne
mov
ds
sub
lods
shll
xor
xchg
push
aam
jbe
into
push
sti
mov
cwtl
cwtl
sbb
int
xor
loop
add
ret
test
scas
lahf
mov
mov
jmp
push
jno
ror
mov
dec
pop
jge
stos
pop
dec
dec
lahf
movsl
jnp
xchg
aad
cli
hlt
dec
mov
in
loope
ret
push
jns
fadds
mov
icebp
enter
ds
push
pop
jbe
sbb
mov
fld
mov
mov
int
add
aad
lret
and
adc
cmp
mov
std
xchg
mov
jmp
int
inc
ds
cmp
push
adc
jae
cmpsb
mov
cmc
xchg
and
fimull
sub
mov
shr
fistps
cltd
pop
test
add
mov
mov
push
or
jne
dec
mov
jg
lahf
jb
add
flds
jl
cmp
dec
add
xchg
scas
sahf
pop
add
adc
mov
or
negl
les
imul
sub
fildl
inc
lods
pop
leave
xchg
jnp
mov
insl
sbb
push
inc
movsb
cmc
dec
and
adc
push
fisttpl
bound
xchg
sub
sbb
outsl
mov
out
inc
dec
arpl
pusha
insb
xchg
testb
jmp
mov
jne
nop
adc
sub
mov
cmpb
nop
je
lahf
sub
add
insl
pop
sub
test
adc
push
in
orb
dec
mov
rcll
lret
or
cmp
fstl
cmp
fs
outsb
xor
arpl
jb
inc
xchg
jae
icebp
or
pop
adc
pusha
call
stos
mov
mov
and
cmp
aaa
out
cs
mov
jnp
je
scas
scas
jmp
subb
int
data16
jno
icebp
dec
xchg
lds
ljmp
ljmp
jmp
loope
pop
add
inc
fisubs
fptan
jmp
sbb
imul
shrl
shrl
adc
sets
cmp
jno
xchg
testl
lcall
pop
jns
xor
pop
ffreep
add
je
sub
dec
pop
mov
adc
xor
mov
das
jge
enter
ret
das
jo
test
xchg
mov
cmp
and
xchg
inc
xlat
jge
xchg
loopne
add
lea
inc
and
jne
scas
fmull
inc
insb
rolb
popa
jno
outsb
mov
nop
lcall
aaa
jnp
cs
loope
cmp
dec
jno
mov
push
dec
outsb
mov
jb
aas
fidivs
push
xchg
pop
jns
jmp
loop
inc
aas
dec
ljmp
push
xchg
jecxz
xchg
sbb
lret
out
stos
lret
or
jns
jle
loopne
scas
push
adc
pusha
add
mov
jnp
cmc
jnp
orb
test
sub
dec
lds
scas
outsl
cltd
mov
dec
jo
xlat
xor
pop
xor
cwtl
adc
push
outsl
ss
add
cmp
hlt
mov
push
jle
movsb
rcll
mov
jae
cmc
movsl
cmp
call
jmp
fidivrl
fwait
cs
push
les
pop
fsubs
test
add
lock
push
sbb
xchg
pusha
fcompl
xchg
orl
add
or
inc
adc
push
xor
sti
xlat
clc
popf
mov
cmp
add
add
jecxz
sbb
neg
shll
adc
bound
in
inc
test
push
mov
mov
add
idivb
xchg
pop
mov
push
notl
std
push
or
push
jmp
dec
cwtl
mov
push
ja
xchg
push
inc
test
push
out
bound
ss
lret
jae
out
jp
dec
sti
std
cmp
inc
lahf
mov
outsb
xor
inc
pop
lods
jne
push
pop
dec
push
mov
and
mov
jmp
jge
lret
mov
int
addr16
mov
push
or
mov
mov
mov
inc
jg
mov
mov
push
mov
mov
cwtl
mov
xor
mov
mov
and
or
dec
add
sub
mov
ss
iret
addl
scas
sbb
pushw
sub
test
daa
sbb
test
fcomps
push
out
xchg
mov
jne
dec
mov
inc
daa
aam
pcmpgtd
mov
mov
sbb
mov
mov
jo
xchg
sub
shlb
incl
lahf
in
sar
push
mov
cmp
mov
pop
xchg
lods
or
push
mov
and
mov
pop
push
xchg
sbb
enter
xor
push
mov
inc
adc
rorl
outsl
dec
into
movl
cmp
scas
push
lods
jecxz
pop
mov
mov
xchg
inc
lods
mov
int3
xchg
xchg
jns
orl
andl
imul
popf
jle
cli
inc
pop
arpl
in
outsb
fildll
movsb
mov
sub
sbb
icebp
sbb
dec
mov
or
insb
sub
adc
mov
inc
and
in
sub
rcl
movsb
pop
cld
rclb
imul
xor
pop
push
push
mov
pop
jns
sub
mov
pop
popf
cwtl
add
cs
pop
fstpl
and
ja
jecxz
lods
cmc
jne
pop
std
popf
mov
scas
mov
les
out
popf
out
xor
fs
and
pop
xor
inc
faddl
cmp
es
push
xchg
and
shl
mov
and
aam
and
pop
jecxz
daa
jg
jecxz
pop
nop
mov
mov
jae
mov
loopne
cmc
in
push
addl
mov
xor
or
ficoms
push
fwait
ja
push
cs
mov
jb
insl
lret
test
std
mov
dec
sbb
xchg
cli
insl
and
and
lds
xchg
loope
mov
jb
daa
jmp
outsl
rcrl
in
cmp
jl
jp
push
jg
sbb
mov
cmp
mov
outsb
sub
div
clc
bound
xor
xchg
pop
mov
fadds
mov
and
addb
xor
mov
jle,pn
outsl
jbe
sub
ret
clc
cwtl
into
js
js
mov
jne
fisubs
aam
sbb
xor
adcb
test
pop
xlat
iret
mov
loop
jne
scas
dec
rcrb
daa
mov
movsb
mov
cltd
jl
js
pop
dec
lret
mov
cli
lea
or
sbb
mov
and
xchg
mov
imul
aad
dec
and
jp
sub
lea
mov
sti
jmp
lret
push
jne
out
mov
push
jnp
jmp
jecxz
ret
popf
inc
ficoml
mov
loope
daa
xor
cwtl
into
in
sub
cltd
in
repz
imul
push
rorb
mov
mov
or
fsts
push
inc
xor
dec
adcb
sub
imul
das
push
lea
and
pop
in
cmp
add
inc
mov
mov
bound
idivl
pop
mov
mov
or
inc
and
mov
leave
loope
sbb
cmpsl
mov
mov
jne
pop
or
cltd
mov
push
call
cmp
pusha
pop
mov
or
fwait
xor
mov
dec
lock
imul
inc
lock
int3
ja
cmpb
pusha
loope
int3
or
jbe
mov
stos
jl
frstor
jecxz
repz
js
je
into
xor
lods
outsl
jns
xor
mov
out
pop
xor
or
adc
movsl
popa
ja
test
add
mov
fdiv
bound
in
xor
rcl
hlt
and
xlat
xchg
fcoms
aas
out
or
inc
aad
std
and
lods
test
jns
outsl
into
pop
aas
inc
push
sub
stos
sub
aas
out
aaa
pop
pop
or
cmp
mov
pop
mov
push
out
seto
test
mov
mov
jle
out
call
scas
and
push
fldt
in
jb
in
out
push
nop
fs
imul
mov
test
out
in
mov
push
jae
inc
lcall
push
pushf
jp
lret
add
imul
adc
xchg
push
inc
rcrb
icebp
fwait
and
dec
cli
test
mov
popf
inc
cmp
sbb
imul
cs
inc
lcall
pop
fiaddl
out
cli
mov
shlb
push
clc
jo
sbb
ret
test
push
ja
mov
xchg
mov
addr16
push
pop
shll
jno
pop
lret
inc
nop
jmp
ljmp
imul
pop
jl
and
or
jb
popa
push
mov
sbb
das
sbb
fsubs
cli
roll
daa
push
dec
mov
cmp
inc
xchg
and
popa
movsb
inc
xchg
inc
adc
lock
add
insb
jne
scas
xor
mov
add
dec
mov
mov
cmp
adc
imulb
cmp
sbb
sbb
sahf
jle
sub
rcr
adc
into
mov
dec
dec
mov
into
or
ljmp
test
bound
mov
cli
out
mov
sbb
inc
je
xchg
dec
out
lods
test
jg
cmp
or
stos
fdivr
cli
jo
mov
xchg
es
sbb
inc
push
push
inc
int
data16
sub
ret
cld
xchg
mov
stos
xor
sti
mov
gs
in
sub
mov
rolb
or
sbb
cmp
fwait
or
daa
mov
rorl
cld
xchg
inc
mov
adc
inc
in
sahf
push
fildll
mov
jno
inc
pop
enter
or
stos
jp
pop
push
fnstsw
int3
xor
repnz
ret
cmp
jb
loopne
jns
add
mov
or
xor
pushf
dec
ss
or
out
add
sub
inc
hlt
cmpsb
mov
and
push
dec
andb
push
push
fidivrl
xchg
aas
add
push
adc
pop
adc
lahf
dec
pop
std
jne
test
xor
mov
data16
std
dec
pinsrw
cmc
mov
mov
xor
xchg
mov
push
js
fsubrs
rorl
push
push
pop
xor
cli
rol
mov
sub
inc
xorb
pop
mov
cmpsl
or
addr16
fs
or
fisttpll
fwait
out
mov
popa
xchg
orb
adc
lret
stos
jne
xchg
or
sbb
pop
aad
ljmp
sbbl
les
cwtl
sub
sub
mov
dec
insl
lret
cmp
mov
adc
cwtl
sub
loopne
rolb
ret
sbb
orl
and
inc
nop
in
cltd
mov
sahf
nop
aas
pop
cmc
cmp
mov
xor
into
sbb
stos
jmp
or
xchg
imul
stc
cmp
mov
and
jbe
sub
leave
adc
int3
cmpsl
std
lods
and
xor
xchg
int3
int3
dec
mov
ret
fsubrl
xchg
std
addb
xchg
sti
add
sahf
repz
sub
pop
or
outsl
cmp
mov
inc
cld
pop
xor
ja
inc
das
mov
out
mov
xor
jmp
je
sub
inc
inc
push
pop
in
or
xorb
push
es
dec
xchg
pop
xchg
jg
mov
sarl
loope
push
dec
out
cmp
das
mov
aas
aaa
call
in
xor
push
sbb
mov
and
xchg
push
add
xchg
ss
pusha
jns
cmpsb
inc
cmp
inc
out
xchg
dec
inc
mov
sub
and
ja
add
stc
add
adc
mov
sti
icebp
jmp
mov
mov
xchg
std
sti
fimull
mov
jecxz
std
scas
mov
and
mov
pop
pop
sub
pop
and
xor
dec
cli
cmp
sbb
or
std
jg
cmpsb
in
in
stc
add
sub
cmp
movsb
and
mov
jns
addb
icebp
cmc
ja,pn
fcomps
dec
mov
int3
jae
xchg
fcoml
inc
dec
or
jae
cmp
jmp
mov
subl
icebp
jne
and
mov
sbb
cwtl
ds
xchg
inc
sub
lods
jl
jno
push
pop
imul
in
cmp
jmp
add
sbb
cmp
dec
int3
inc
stos
push
in
push
int
sub
pop
sub
pop
jb
push
aas
fimuls
gs
lcall
fists
cld
out
cltd
jne
jl
pop
inc
jo
pusha
bound
cld
mov
pusha
mov
dec
push
lret
jne
cli
inc
cmp
arpl
push
mov
fcmovbe
std
mov
ret
jae
xchg
dec
aaa
push
xor
ucomiss
ss
push
punpckhbw
push
leave
sub
fistpll
xor
stos
pop
outsb
pop
je
scas
pop
sub
xchg
sbb
scas
pop
loop
inc
pop
out
push
add
ret
clc
or
ret
mov
das
ja
push
ja
cmp
add
push
ljmp
stc
enter
mov
push
aam
and
aam
test
xchg
movsb
adc
in
jae
mov
mov
pusha
pop
call
xchg
js
sub
addr16
or
push
jnp
sbb
dec
mov
mov
test
adc
in
loopne
int3
mov
xchg
inc
jnp
aas
dec
scas
sub
ficomps
mov
lcall
and
movsl
imulb
movsl
mov
sub
fnstcw
cmp
jb
jno
test
sub
int
fimuls
in
inc
mov
or
js
pop
loope
jle
cmp
pop
mov
mov
cwtl
jmp
scas
leave
ljmp
insl
add
cmp
jne
scas
das
cs
mov
or
dec
jcxz
int3
shl
outsl
iret
divl
mov
jae
sub
sub
pop
add
mull
in
lcall
outsb
inc
pop
test
scas
lret
sbb
fisttps
ljmp
in
aad
insl
sbb
sahf
test
pop
jo
andb
mov
pmulhw
std
xchg
fcomp
gs
dec
and
lea
cwtl
aad
mov
in
or
mov
ja
pusha
outsl
dec
mov
cs
add
orb
je
push
outsl
in
jnp
cmp
fbstp
jp
lret
bound
sub
shl
jg
std
cmp
pushf
fistpl
sti
shl
pushf
inc
es
mov
pop
das
mov
push
nop
int
jne
adc
adc
outsb
cmp
lods
dec
lret
dec
lret
mov
jno
adc
push
pop
mov
mov
sub
push
xchg
ss
mov
movsl
repz
imul
das
inc
mov
adc
hlt
sub
or
push
mov
jecxz
repz
jp
push
jne
xchg
pop
fs
xor
in
pop
mov
dec
fdivrp
jae
loop
mov
inc
gs
aad
pop
xchg
cmpb
inc
sub
pusha
repnz
and
outsl
ljmp
add
sti
sub
ja
jle
jl
fstpl
dec
push
dec
add
sarb
sarb
in
mov
loope
pusha
push
add
xchg
lock
ljmp
fwait
hlt
mov
aad
pusha
push
xchg
ja
out
and
daa
xchg
or
movsb
jmp
jl
jge
add
shrb
stc
fucom
mov
and
addw
nop
pop
test
pop
out
clc
sbb
fs
lock
mov
les
scas
lods
dec
inc
das
sbb
sbb
mov
inc
and
pop
adc
mov
pop
out
test
cmp
repnz
mov
add
and
mov
nop
cmp
es
sbbl
lods
scas
test
cmp
sbb
ret
mov
or
or
lahf
xor
xor
roll
aaa
sub
decl
bound
add
call
jmp
inc
pop
xchg
pop
jo
pop
pop
dec
add
sub
inc
xchg
or
decl
fistpl
in
lret
and
cmc
daa
pop
orb
scas
fists
pop
loop,pt
jecxz
aas
outsb
mov
lods
xchg
sti
mov
jo
lock
dec
jae
inc
adc
fistps
lock
and
or
sub
mov
push
jge
jp
or
gs
lock
dec
popa
add
jle
pop
loope
fldt
mov
fimuls
push
fisttpl
fldl
leave
loope
fcoms
push
xchg
fsts
mov
stc
pop
cmp
mov
mov
in
xor
mov
jle
xchg
cmp
mov
jns
dec
inc
repnz
add
mov
enter
lahf
push
roll
mov
ret
loopne
jle
jecxz
in
xchg
dec
add
xchg
mov
stos
mov
lcall
pop
outsl
test
fwait
sub
pop
add
push
imul
and
mov
dec
jmp
insl
mov
lods
pop
fsubs
test
test
sbb
arpl
xchg
push
mov
sub
pop
std
mov
pop
mov
or
dec
cmp
cmp
push
or
shrb
iret
add
ret
movsb
loop
sub
add
mov
add
adc
mov
aaa
rorb
mov
fidivrl
sub
into
mov
rep
ja
cltd
dec
mov
xorb
shl
mov
lahf
mov
pop
adc
pop
cld
inc
mov
sbb
xor
fwait
daa
cmc
mov
and
jb
inc
jmp
pop
xor
mov
push
sub
jmp
add
enter
push
insl
movsb
pop
insl
jle
cmp
add
lods
ds
sub
adc
stos
or
ljmp
shlb
xor
jmp
xor
xchg
push
inc
imul
je
stos
test
cmpsl
adc
outsb
pop
inc
fsts
jbe
add
or
cmp
cmp
cmpxchg
jmp
mov
arpl
lds
cmc
loope
ret
sub
inc
or
inc
data16
cltd
lea
cmp
push
popf
push
mov
jae
aam
stc
inc
add
mov
inc
and
pusha
add
repnz
out
leave
lret
push
arpl
adc
pop
mov
xor
clc
popf
mov
or
lcall
mov
ret
add
leave
mov
adc
xchg
or
sub
add
push
cmp
js
sub
sbb
add
fisttpl
dec
lock
xchg
loop
mov
arpl
sub
andl
pushf
les
daa
push
jne
ds
addl
test
push
shll
fisubrs
inc
sub
out
gs
into
movsb
ds
pop
mov
pop
lcall
xor
add
xorl
mov
loope
adc
test
sbb
pop
jge
inc
jg
call
adc
std
add
lock
test
push
cmp
out
push
and
jne
pop
or
or
mov
mov
lods
in
repz
cli
mov
xchg
dec
xor
fldl2t
sub
pop
ja
push
pop
mov
shr
sbb
cmpsb
pop
add
int3
repz
push
inc
stc
lds
lods
push
mov
imulb
cmp
mov
mov
adc
into
jg
popf
lods
cs
clc
ljmp
jb
sbb
cld
jb
aaa
ds
pop
sub
mov
repnz
jmp
addr16
pop
and
pushf
xchg
lret
xchg
and
jne,pt
movb
lock
push
pop
mov
xchg
adc
cmp
jp
lods
shlb
xor
aaa
clc
insl
insl
sub
subb
jge
sub
xchg
mov
ljmp
mov
lock
push
out
jecxz
sahf
jge
xor
dec
cmp
jns
sarb
lock
mov
mov
push
mov
pop
subb
pop
arpl
sbb
lds
aad
push
push
stos
cs
daa
repnz
imul
jl
push
xor
cmpsl
stos
mov
in
sbb
mov
push
adc
lds
movsb
sti
push
mov
cwtl
lahf
mov
mov
pop
inc
xor
jl
pop
sbbb
arpl
pop
rcrb
jns
lds
jne
repnz
in
fstps
lret
in
fidivrl
mov
hlt
cltd
test
es
aas
scas
mov
and
jg
int
cmp
jne
cmp
jns
in
pop
clc
lcall
jp
cli
dec
sbb
inc
jmp
jmp
or
adc
pop
mov
dec
test
push
adc
lret
dec
jmp
cmp
cmc
inc
popa
sub
enter
fs
movsb
bound
lds
mov
hlt
pop
out
jp
adc
dec
add
loope
jl
in
xlat
pusha
roll
push
sbb
add
lahf
inc
lea
icebp
sub
aam
or
sub
icebp
lock
or
in
leave
lea
lock
mov
add
jno
and
inc
mov
adc
jns
rcll
push
inc
push
js
into
shlb
pop
adc
sbb
nopl
insl
xor
lcall
push
push
push
xor
test
dec
lods
pop
cmp
pop
sub
sbb
or
jns
cmpsl
or
cmp
jnp
xchg
movsb
popa
or
gs
xor
inc
out
pop
fs
sbb
repz
push
mov
jmp
arpl
ljmp
shr
out
push
js
rcll
xor
ret
movsb
rorb
adc
clc
inc
lret
xchg
xor
mov
popa
ror
sbb
or
test
cmc
movsb
cld
xchg
add
cld
jecxz
push
test
dec
leave
pop
xchg
dec
std
and
jbe
aad
sti
lcall
pusha
mov
jg
popa
arpl
loope
out
lds
mov
pop
cmp
dec
mov
in
dec
lods
out
mov
xchg
jle
pop
outsl
jo
icebp
mov
sub
lahf
sub
cmc
dec
andb
cmp
cmp
data16
loop
cltd
push
lds
cmp
lea
lcall
jl
sbb
test
mov
push
filds
mov
xlat
loope
test
sub
js
fnstenv
clc
push
dec
mov
push
dec
sti
fidivs
pop
bnd
mov
sub
mov
mov
mov
fwait
mov
orb
sbb
adc
xor
inc
das
or
pop
test
ss
mov
pop
pusha
clc
adc
orl
in
inc
add
jnp
andb
jne
in
addl
filds
inc
push
jcxz
inc
xlat
push
push
cld
stos
les
xchg
outsl
ss
pop
or
arpl
ja
add
jle
mov
test
call
push
mov
push
fimuls
test
sbb
out
cld
test
mov
pushl
out
sbb
cmp
insl
fs
xchg
push
push
xor
cwtl
pop
sbb
or
mov
jo
fidivrs
xor
sbb
and
aam
imul
loopne
dec
xor
dec
outsl
adc
or
shrb
mov
imul
inc
fidivrs
xlat
in
pusha
and
les
test
cwtl
addl
das
sbb
mov
mov
push
call
mulb
ret
loopne
jle
out
inc
cs
inc
out
sub
jns
inc
or
push
nop
iret
repnz
fs
or
push
add
jo
insl
or
mov
xlat
popf
rcll
rcr
mov
inc
in
je
mov
int3
push
fcmovnbe
mov
inc
jp
mov
icebp
pop
mov
mov
push
jmp
scas
push
ljmp
jno
imul
cmp
imul
sarl
jbe
pushf
loopne
pop
icebp
test
add
mov
fcmove
or
aas
cs
les
fstps
lret
scas
pop
push
and
dec
add
out
xorb
js
das
push
sub
insb
jge
mov
adc
pop
xlat
push
cltd
mov
pop
push
jns
jle
xchg
pop
pop
cmp
in
pop
sub
sbb
movsl
sbb
out
and
fdivl
in
sub
push
and
sbb
add
jp
inc
jg
jmp
push
rolb
loop
mov
mov
sbb
xorl
cmc
or
xchg
pop
icebp
dec
std
inc
loope
test
and
mov
mov
mov
imul
pop
test
inc
inc
cmp
and
shlb
adc
jno
fldt
cmpsb
int3
lret
enter
fnsave
mov
xor
inc
pop
inc
jo
pop
or
mov
imul
push
add
mov
jmp
push
add
cmp
pop
jbe
jne
dec
je
popa
dec
mov
into
pop
iret
add
addl
ss
fistpll
inc
popf
pop
notb
mov
mov
pop
push
into
clc
sbb
push
into
jl
and
stos
imul
shll
sbb
or
or
push
sub
fdivrl
mov
ret
xchg
arpl
in
insb
clc
inc
add
mov
dec
and
lods
icebp
sbb
xor
pop
fmul
pushf
mov
out
add
fs
or
jne
popa
dec
cwtl
es
in
jns
in
ja
aam
xlat
insb
das
insb
dec
subb
mov
fistl
cmpsl
mov
std
sbbl
aaa
movb
mov
cmp
push
sub
cld
popf
inc
cmc
loop
mov
jmp
mov
in
call
mov
mov
aas
loop
xchg
sub
nop
add
lret
push
fldcw
sbb
cltd
sub
adc
pushf
dec
push
dec
or
gs
jecxz
jo
ds
mov
jg
inc
dec
xchg
mov
aaa
addb
lods
in
rolb
push
loop
not
push
and
rolb
add
or
cs
or
push
insl
scas
xor
xchg
test
jno
aaa
dec
loopne
hlt
jl
mov
cmpsb
sbb
int
push
mov
or
mov
addr16
and
mov
jle
or
xor
xor
push
imul
mov
cmp
xor
and
inc
xchg
mov
lret
ret
inc
fwait
bound
pop
es
jo
das
push
xor
addr16
scas
leave
fsubrs
shrl
mov
mov
mov
inc
push
arpl
adc
cmp
mov
das
mov
or
sub
adc
mov
out
cli
mov
fs
mov
ficoms
insb
popf
movsl
movsb
fisttpll
repz
pop
xchg
fs
adc
and
stos
push
aad
loopne
ret
call
out
lea
nop
fdivrs
lods
xor
mov
loop
addr16
out
lea
test
jecxz
call
mov
sbb
or
fwait
mov
jmp
mov
das
sbb
stc
sbb
mov
sub
adc
popa
jge
in
das
mov
sbb
sub
or
xor
fsts
in
scas
scas
or
loope
inc
mov
sub
push
adc
cmp
movsl
or
inc
jl
ret
sbb
jle
dec
jmp
out
in
ret
insl
out
fisubrs
cmc
mov
or
std
jp
jae
movsl
add
push
enter
xor
sbb
xlat
sbb
sbb
jo
lods
aaa
and
xor
sarb
addr16
inc
cmp
rcrl
jmp
andb
inc
mov
pop
fsubrs
nop
ds
push
jge
bnd
faddp
sbb
ror
push
xchg
es
fs
mov
inc
out
lock
pop
fidivl
push
inc
pop
xor
arpl
fstpl
out
pop
call
jmp
inc
ljmp
and
loop
pop
fldl
sbb
mov
mov
sbb
cmc
add
dec
iret
sub
lds
add
sarb
decb
out
cmp
aaa
out
or
mov
add
mov
div
and
rolb
pop
mov
cs
in
dec
push
leave
sbb
loop
popa
push
xchg
out
xchg
and
xchg
or
jp
fmuls
add
push
or
in
shrb
into
insl
sbb
or
lahf
push
scas
in
sub
cli
cs
jne
aam
mov
jno
or
sbb
and
std
sbb
stos
hlt
rcrb
jmp
shrl
mov
lods
mov
lret
int
inc
outsb
sahf
repz
mov
pop
pop
push
rorb
xor
lds
mov
fdivrl
in
pop
cwtl
shll
xor
dec
mov
aad
and
sub
xchg
adc
mov
jae
xor
sbbl
aam
aaa
push
ret
sbb
inc
adc
imul
dec
inc
cld
xchg
loope
jge
or
jo
jg
and
mov
js
mov
pusha
or
in
or
pop
adc
pop
aaa
xlat
hlt
pop
ret
es
pop
jb
insb
sub
inc
inc
scas
pushl
loopne
test
icebp
mov
sub
ret
dec
fstl
cs
jne
or
cmpsl
sub
jp
add
mov
or
loop
aas
sbb
or
pop
mov
mov
mov
inc
mov
adc
cmp
adc
fldl
mov
test
mov
ss
mov
dec
jl
fdivrp
dec
lods
sub
mov
push
sub
and
or
pop
test
sbb
mov
ljmp
test
enter
int
inc
lea
sbb
pop
fstl
loop
push
dec
jmp
les
or
out
rol
fwait
pop
cmp
lock
jno
pop
or
or
dec
pushf
scas
sbb
adc
clc
fcompl
inc
or
fimull
push
pop
cld
adc
mov
aam
lods
sarl
mov
clc
and
incb
mov
insb
mov
loopne
ljmp
ret
ud1
mov
jb
repz
mov
dec
pop
les
hlt
das
mov
aad
insl
and
mov
fmulp
cltd
arpl
push
xor
push
or
and
inc
jno
jae
jno
jbe
hlt
leave
mov
lods
repz
pusha
jecxz
mov
pop
out
cmp
iret
and
inc
shl
jle
test
test
sub
sub
mov
cmpsl
aaa
lret
sub
or
push
mov
push
push
add
xor
xchg
jnp
pop
adc
inc
mov
or
dec
pop
mov
iret
clc
inc
sub
cltd
adc
push
cmp
or
sbb
pop
dec
icebp
or
sub
cmp
sub
xchg
ret
inc
ficoml
or
or
pop
in
cvtdq2ps
add
mov
push
mov
lods
pop
sbb
sbb
leave
pop
loope
fs
addr16
xor
dec
icebp
jbe
dec
xchg
xor
test
mov
pop
add
jns
inc
test
fnsave
ret
or
movsb
inc
adc
cwtl
rcll
fistl
imul
sti
repz
cld
lret
jb
jecxz
mov
into
daa
jmp
leave
fistl
leave
mov
fcoml
add
mov
inc
push
adc
jle
lods
std
std
sti
pop
add
orl
jne
aad
addr16
iret
mov
mov
jg
jae
cli
xor
scas
hlt
dec
fists
inc
dec
jge
xchg
int3
mov
enter
sbb
sub
outsl
cs
lcall
mov
sbb
cmp
in
test
movsl
js
pop
decl
and
or
hlt
pop
jp
notb
push
popf
cmp
pshufw
popa
adc
in
inc
mov
ret
ret
pop
cld
cmp
or
ljmp
xchg
add
mov
ds
cmp
jge
xchg
mov
hlt
cld
jge
loopne
sbb
rcr
mov
mov
stc
xchg
les
rcrl
out
inc
dec
mov
push
dec
lods
xor
jmp
aaa
sub
mov
ljmp
scas
xor
int
inc
int3
mov
in
imul
sub
pop
xor
ret
loop
xchg
jnp
add
and
cwtl
pop
sbb
mov
cs
sbb
pop
out
hlt
jo
mov
push
test
out
and
jle
and
or
test
sarb
test
lret
cli
icebp
les
pusha
lods
xchg
jnp
or
adc
push
sbb
push
mov
inc
sbbl
xchg
mov
dec
lret
nop
das
shrl
push
fbld
xchg
cmp
push
sahf
ret
mov
jge
imul
sarl
sub
out
clc
cltd
add
jp
and
popa
sub
addr16
psubb
inc
adc
adc
lods
scas
sub
js
imull
mov
jmp
mov
test
cmp
test
test
and
rorb
stos
cmp
out
push
inc
sub
cmp
dec
or
jae
push
fldcw
fcomps
jns
pop
stc
jmp
repz
dec
inc
data16
mov
mov
mov
cmpsb
pop
add
xor
es
rorl
and
xor
daa
jne
jp
fwait
stos
pop
mov
fadd
in
mov
scas
lods
loopne
mov
aas
test
ficompl
and
inc
jnp
cmc
sub
dec
pop
xchg
test
cld
ficompl
in
inc
mov
jo
and
rclb
or
jg
les
xchg
sbb
out
sbb
dec
cmp
in
fistps
in
mov
cli
repz
test
or
mov
pop
jge
jge
pushf
push
inc
fildll
pop
fs
pushf
mov
jle
enter
sbbb
jle
dec
sbb
es
sbb
jmp
scas
adcl
inc
outsb
sbb
xor
xor
fidivs
sbb
mov
push
jge
insb
jp
int3
jg
cmpsl
shlb
or
das
mov
sub
inc
push
jb
sti
mov
sahf
pushl
outsl
mov
mov
pop
mov
dec
cwtl
adc
scas
in
sbb
lea
cmp
cmp
fstpt
jp
nop
xorb
and
inc
shl
jb
or
and
cmpsl
xor
cmp
jb
and
mov
jno
pop
movsl
ja
push
adc
push
rcr
in
xor
push
dec
icebp
adc
bound
out
loope
data16
sub
dec
lret
pushf
clc
jb
push
inc
lock
add
and
xchg
aad
mov
pop
mov
jbe
outsl
rcll
push
fs
adcb
or
mov
mov
fstps
mov
xor
pop
gs
pushf
or
push
sub
jnp
mov
dec
xlat
xchg
jb
scas
call
fcoml
insb
jl
sub
pop
mov
add
cmp
mov
dec
adc
mov
mov
imul
jmp
mov
ret
cmpl
cmp
mov
lock
lret
movsb
mov
das
stc
pushf
and
jne
inc
xor
sbb
into
ds
sarl
test
cmpsl
int
dec
jle
in
lods
dec
daa
imul
or
cmpsl
js
pop
ret
popf
pop
fsubs
pop
inc
imul
repnz
test
sarl
ja
push
iret
inc
cmp
lahf
ficompl
and
and
dec
sbb
adc
dec
jno
sub
cltd
sbb
out
mov
lcall
loop
cmp
xor
js
push
std
lret
std
ret
xor
pop
and
mov
stc
dec
adcb
ret
adc
sub
js
pop
cmp
sbb
push
dec
xchg
shrl
mov
push
fwait
mov
jle
mov
ror
sub
jp
rcrb
addb
pop
or
sbb
adc
pop
inc
inc
jmp
fcom
sub
push
mul
jno
sbb
xor
lods
or
xor
lods
cs
pop
pop
data16
cmp
fwait
cmc
aaa
cmp
add
cmpsb
pop
cwtl
cmp
sub
cld
hlt
fdivrs
or
mov
shlb
lea
in
hlt
cmp
or
and
cmpsb
out
shll
xchg
test
adc
mov
sbb
jnp
punpcklbw
mov
jle
sahf
xor
mov
dec
mov
pop
loope
jns
mov
lods
xor
jne
push
lea
fldenv
xchg
xchg
insb
jno
cwtl
aaa
stos
add
mov
jmp
loop
les
das
insl
or
sub
mov
in
test
aam
jg
aas
cmp
gs
inc
push
add
or
enter
pop
fisttpl
pop
fstl
mov
mov
test
bound
std
push
loopne
leave
inc
or
inc
xchg
out
sub
sbb
fists
mov
and
dec
flds
inc
test
data16
ja
movb
mov
mov
push
lcall
add
pop
lds
inc
mov
sub
mov
testb
dec
loop
ret
mov
cmp
push
mov
das
xor
lret
sbb
push
add
mov
mov
mov
cld
je
test
mov
and
icebp
xchg
lds
push
in
lret
jl
xchg
fcmovbe
mov
subl
jb
push
imul
cmc
dec
insl
and
out
aas
es
lret
add
adc
xor
or
mov
xor
movsb
scas
ds
and
orl
mov
lret
push
cmp
lahf
add
je
add
mov
xchg
cmp
push
sahf
mov
jns
test
mov
inc
add
in
mov
rcrl
fidivrs
sbb
inc
sti
loop
std
aam
mov
pop
sbb
call
sub
xchg
push
lods
push
push
sub
mov
cs
adc
xlat
rcl
cmp
add
push
push
rolb
in
cmpsl
cmp
mov
mov
rcrb
aaa
in
push
push
dec
nop
pop
test
inc
stos
rorl
fnstsw
ljmp
jo
cld
and
cmc
jmp
mov
pop
addr16
inc
add
jo
xlat
into
jge
nop
push
dec
sarl
jnp
mov
xchg
out
subb
shlb
xchg
insb
insb
dec
mov
out
fmulp
sbb
and
jns
adc
jmp
pop
add
iret
xchg
jmp
daa
sti
inc
push
out
or
cmp
xchg
clc
roll
pop
fwait
movsb
mov
jg
lea
jp
or
xchg
out
mov
outsb
and
imul
es
fcoml
addr16
enter
adc
mov
xor
mov
pushf
jg
pop
pop
cmp
stc
push
push
inc
imul
pop
inc
lock
mov
int
sbbb
mov
mov
jne
jecxz
add
sarl
and
adc
mov
jp
scas
xchg
std
mov
adc
mov
daa
jbe
gs
cmpsb
pusha
or
push
mov
xchg
les
std
adc
or
xor
inc
mov
in
hlt
aas
xor
xor
adc
into
mov
int
pop
dec
jg
shll
bound
lahf
fildl
out
leave
push
xchg
std
lret
lret
inc
cmp
daa
jo
cld
rcll
sub
cmpb
repnz
cltd
mov
arpl
lods
pop
mov
push
pop
in
fadds
or
sahf
dec
push
daa
pusha
pop
fcompl
std
push
mov
test
pop
sbb
sbb
aam
fisttpll
stc
push
pop
leave
inc
nop
mov
pop
dec
lods
lahf
out
mov
fldenv
push
xlat
iret
test
add
mov
insb
mov
sub
out
mov
ss
movsb
pop
idivb
mov
or
add
add
int
imulb
push
test
sub
incb
mov
in
lret
insl
pop
stc
lret
inc
mov
mov
inc
sbb
out
cli
mov
ja
stos
cmp
sbb
add
lods
push
int
mov
fistpl
add
sbb
jns
sub
and
and
mov
jnp
mov
mov
fwait
mov
lret
cmp
div
xor
into
inc
dec
add
mov
mov
fisttpll
adc
mov
pop
testw
mov
or
pop
in
push
xchg
xor
orb
inc
fildl
and
sub
pop
out
add
out
and
les
or
lock
xor
push
push
aas
ljmp
and
scas
stos
call
jle
cmp
mov
imul
dec
ret
aam
jb
shlb
aaa
lret
ja
pop
dec
repnz
mov
lret
bound
adc
mov
sub
fnstcw
call
loope
mov
les
clc
hlt
in
mov
sbb
or
movsl
int3
dec
lds
test
and
xchg
mov
push
add
js
ficomps
pop
or
jnp
aad
iret
sarb
mov
pop
jge
out
jg
pushf
es
cmp
cwtl
add
cmp
pop
popa
push
xor
pop
addr16
fisubl
sub
cmc
adc
or
in
push
inc
jns
ret
shl
and
dec
cmp
pop
out
leave
mov
fwait
sub
jl
add
jp
outsb
lahf
push
out
or
stc
popa
stos
test
jge
xchg
adc
mov
mov
loopne
nop
loope
and
inc
mov
xchg
iret
inc
movsl
adc
es
fnstcw
pop
mov
xchg
push
cmp
mov
mov
jo
cs
fwait
push
sti
fwait
adc
pop
lods
dec
fsubr
mov
sbb
ljmp
rol
xor
xor
call
mov
add
cmp
fwait
sub
insb
sub
outsl
xchg
adc
xchg
cli
test
pop
xchg
aad
sub
xor
sbb
inc
add
xchg
xchg
add
loop
fsubrs
jecxz
cmpsb
sbb
cmc
nop
pop
lcall
hlt
cmp
bound
mov
std
shrb
repz
std
adc
lea
int
shll
jns
addr16
mov
loope
mov
adc
incb
hlt
insb
mov
add
jae
pop
xorl
cmp
jns
rorl
lcall
sbb
push
clc
decl
xchg
or
mov
xlat
loope
mov
pop
mov
push
out
mov
pop
mov
cmp
lret
mov
fstps
pop
push
stos
push
imul
mov
imul
insl
in
mov
sbb
fsubr
lods
xor
cli
test
sbb
mov
nop
arpl
popf
out
pop
into
push
mov
or
insl
lea
pop
pushf
jge
int
mov
jb
inc
ja
std
lock
jae
or
dec
xchg
es
pop
xchg
pop
subb
mov
jmp
sbb
jl
xor
xchg
jge
adc
cmc
pop
data16
scas
lea
mov
pop
imul
xor
xor
mov
sub
and
pushf
loopne
repz
daa
adc
mov
and
jns
push
rcll
les
scas
outsb
pop
pop
lahf
hlt
xor
movsl
inc
xor
int3
jae
pop
stc
filds
insl
int
push
and
jmp
mov
fs
add
nop
mov
shll
dec
mov
inc
int3
mov
inc
stos
mov
or
call
cltd
inc
in
push
movsl
xlat
imul
push
xor
adcl
cmp
cwtl
mov
mov
call
inc
cs
mov
push
xor
or
out
mov
les
xorb
aam
in
push
les
pushf
imul
add
fcomip
jecxz
cltd
leave
cmp
stos
test
aad
pop
insl
cmp
cs
enter
pop
push
fistpl
mov
scas
popa
inc
nop
push
icebp
adc
clc
push
jmp
push
insl
fnstcw
sarb
hlt
fisubrl
mov
rcl
pusha
add
out
repz
imul
push
lret
mov
bound
ljmp
mov
adc
dec
mov
adc
mov
scas
mov
inc
jne
xor
imul
scas
fwait
push
mov
pop
std
fdivr
dec
fnstsw
dec
sahf
inc
ret
jae
faddp
xchg
clc
mov
mov
inc
add
test
adc
and
das
icebp
mov
std
mov
cwtl
lcall
daa
inc
fwait
xchg
add
xchg
push
dec
test
xor
mov
xor
fdivs
inc
cwtl
out
pop
call
jno
ja
sbb
jno
movsb
insl
movsl
mov
or
push
ret
loope
data16
scas
and
and
cmp
inc
in
jmp
mov
jl
xchg
ljmp
cmp
int
pop
sub
fnsave
push
mov
fidivrs
xchg
filds
stc
fnstsw
add
mov
xor
push
lahf
jbe
roll
das
push
pop
jecxz
dec
andl
idiv
push
mov
addl
jns
divb
iret
sub
outsl
jne
push
loop
hlt
lods
and
adc
in
push
sub
out
cwtl
add
push
xchg
push
adc
or
dec
xor
pop
mov
notl
xchg
mov
sub
dec
xor
ret
enter
ss
jne
test
inc
pop
jmp
lods
or
xor
stos
not
xchg
xor
rolb
or
mov
inc
mov
js
xor
pop
push
sub
mov
pop
sar
xor
sahf
pop
fiadds
nop
ficoms
jecxz
lea
mov
pop
mov
out
sahf
xor
push
test
movsl
and
flds
mov
push
xchg
jmp
pop
mov
push
jmp
sub
test
sbb
mov
mov
lcall
es
cmp
ret
add
mov
out
ljmp
scas
xchg
cmpsl
and
lret
sub
je
sbb
arpl
xchg
out
mov
add
out
pop
pop
cmp
and
or
movsb
rorl
push
adc
pop
je
adc
mov
mov
push
cmp
pop
loopne
in
dec
mov
xor
out
add
les
push
mov
in
loopne
and
sar
shlb
mov
xor
and
int
xchg
inc
jmp
es
aad
add
loope
xchg
dec
setl
arpl
jecxz
movsl
and
adc
out
aad
cmpsb
subl
jle
sub
xchg
or
out
push
push
movsb
xor
rorl
fadds
xchg
stc
adc
mov
fistl
push
mulb
jmp
outsb
ljmp
pop
int
cmc
xchg
imul
jno
cld
or
add
cmp
imul
ss
inc
and
sbbb
sbb
mov
push
test
mov
add
popa
aaa
mov
js
inc
jne
push
push
orb
sub
xchg
insl
xlat
fldt
or
jns
sub
clc
cmp
dec
enter
dec
xchg
sti
ret
pop
pop
pop
aaa
push
xlat
negl
test
sbb
in
push
leave
addr16
or
jne
fsubl
and
lea
pop
and
in
and
iret
xor
sbb
test
fdiv
xchg
jnp
mov
jmp
mov
mov
jp
jp
pop
mov
adc
jne
push
dec
xor
or
mull
popf
lds
pop
cltd
xchg
ss
ds
push
je
iret
mov
add
push
les
cmp
lds
ret
cmc
mov
sbb
not
out
or
in
aas
in
pop
aad
loopne
cld
pop
and
pop
fucomp
or
and
xchg
pop
repz
sub
dec
jge
loopne
jp
push
adc
pop
xor
jnp
or
std
test
or
xor
ja
mov
lods
pop
or
mov
pushf
ret
mov
dec
and
or
std
jae
shl
push
test
xchg
push
iret
lea
into
cs
xchg
rcrl
adc
cwtl
jp
outsl
mov
dec
data16
stos
enter
in
mov
and
push
cmp
es
icebp
mov
aad
mov
push
hlt
sti
xor
ficompl
push
lods
add
or
xchg
mov
dec
test
fistps
aad
mov
das
xor
add
add
sbb
and
fld
xchg
pop
stos
xlat
out
pop
mov
jle
outsb
and
rcr
test
data16
adc
or
movsb
imul
xchg
inc
xor
dec
aas
mov
jnp
cmp
pop
or
leave
fldenv
lret
pop
push
xchg
lahf
hlt
sti
lea
fsubr
call
mov
mov
mov
mov
cmc
js
mov
sahf
lods
pop
pop
and
jno
daa
cltd
mov
sub
sti
das
outsb
out
in
mov
ret
jmp
sbb
das
mov
ja
and
cmp
ret
xchg
jecxz
jns
lock
mov
insb
push
adc
lds
cmpsb
dec
mov
ss
fs
adc
ljmp
cmp
lcall
lods
inc
xchg
mov
mov
repnz
dec
sub
scas
lods
xchg
outsb
sbbb
movsl
sti
clc
xor
or
add
stos
or
hlt
mov
in
mov
push
mov
popf
dec
inc
arpl
and
fwait
inc
test
fcomps
xchg
and
mov
lea
dec
aad
aad
sahf
push
xchg
daa
cmp
jb
pop
add
test
xchg
mov
sbb
pop
mov
fadds
dec
nop
scas
dec
pop
xchg
sub
xor
into
mov
adc
pop
scas
ficomps
movsl
gs
dec
pop
ljmp
fstp
mov
shr
in
sbb
in
movsb
mov
jg
mov
loop
jecxz
dec
and
gs
push
push
cltd
out
push
xchg
fmulp
lahf
dec
in
sbb
jmp
mov
add
pop
cmp
dec
mov
fsubrs
fmull
jo
mov
push
movsl
add
mov
cli
into
adc
jp
push
dec
aad
or
push
push
xchg
ja
push
out
imul
pop
int3
stos
jae
je
sub
out
push
mov
int
jle
jge
pushf
mov
push
dec
xor
ret
js
lock
ljmp
mov
xchg
das
push
lcall
mov
pminsw
in
rcl
hlt
inc
cwtl
into
xchg
stos
add
mov
inc
das
xchg
test
push
add
push
ss
insb
push
push
call
fisubrs
outsb
sub
sub
stos
les
mov
mov
and
sti
dec
mov
mov
sub
loop
push
fs
mov
pop
inc
scas
xchg
and
in
jmp
mov
and
nop
shll
lcall
jbe
faddp
or
push
sbb
jmp
scas
mov
popa
gs
mov
fbld
aam
cmp
mov
push
xchg
mov
mov
xor
in
iret
popf
or
xor
mov
cltd
jnp
mov
mov
dec
mov
fcompl
rcl
leave
std
into
inc
std
hlt
sub
lcall
and
leave
rcll
fwait
pop
mov
push
fdivl
add
and
add
pop
outsb
out
shll
xchg
daa
mov
dec
out
xchg
xchg
inc
mov
icebp
mov
push
out
adc
mov
and
orb
addl
pop
sbb
xchg
jns
pushf
sbbl
xchg
in
xchg
int
jmp
pop
cmp
jle
dec
push
pop
lahf
adc
push
mov
mov
or
orl
aad
mov
arpl
test
jmp
daa
fstps
jecxz
add
jb
out
xchg
cld
mov
xchg
sbb
jbe
out
adcl
fldenv
xor
leave
xchg
add
mov
xchg
mov
xlat
push
cmpsb
sub
or
je
inc
enter
mov
xor
jbe
or
pop
inc
mov
and
mov
mov
fbstp
mov
mov
dec
lock
int
insl
das
jge
add
mov
mov
mov
enter
gs
nop
and
xor
dec
in
scas
icebp
aaa
pop
or
mov
pop
jl
mov
sbb
aam
pop
lret
sti
xlat
outsb
or
pop
cmpsl
inc
repz
shl
inc
int
sbb
insl
ret
shrl
dec
push
mov
pop
idivb
in
cmc
fisubl
push
fcomi
push
loopne
pop
jno
add
mov
andb
std
ret
testl
or
sbb
xchg
push
jo
insl
mov
pop
add
push
das
call
aam
daa
adc
dec
sub
mov
sub
adc
in
cmp
cltd
adc
push
pop
insb
mov
cmp
addb
pop
testb
inc
adc
dec
out
lds
and
divl
adc
je
shrb
dec
dec
sahf
int3
dec
xchg
pop
cli
mov
fs
scas
dec
or
cli
cmpsb
fs
push
stos
xor
aam
lock
in
mov
iret
lods
sbb
icebp
pop
pop
leave
je
in
and
out
mov
jecxz
xchg
and
aam
jmp
fisttpll
sbb
jmp
mov
leave
push
stc
pop
in
jge
inc
jmp
add
mov
inc
push
sti
fists
hlt
xor
ds
subb
dec
mov
cwtl
in
dec
mov
hlt
xchg
pop
movsl
sub
pop
movsb
fsubs
leave
rcr
inc
stc
loope
lret
cmc
mov
jb
pop
sub
dec
and
mov
and
pop
aaa
cmp
or
cmp
cltd
shrl
mov
pop
sub
pusha
mov
xor
add
and
inc
into
popa
sbb
fnstcw
int3
add
xchg
fst
fsubrl
loop
leave
shl
or
lcall
push
in
or
lcall
jnp
nop
mov
clc
mov
outsl
mov
andb
and
mov
push
push
dec
sub
inc
scas
mov
mov
incb
push
sbb
cli
and
jns
movsb
sahf
insb
sarl
jno
dec
cli
mov
fs
lahf
ss
test
sbb
mov
in
pop
cli
dec
dec
pop
cld
inc
add
sete
loop
mov
cli
mov
test
sub
ss
mov
repnz
ljmp
jmp
mov
test
sub
out
push
mov
dec
lahf
lock
sarb
push
pop
jge
in
jge
das
xor
out
cmp
js
call
pop
nop
inc
jecxz
lret
pusha
ja
mov
pusha
stos
and
pop
and
insb
cwtl
sahf
pop
inc
mov
mov
or
fwait
lret
cmpsb
sbbb
or
fstpl
rcrl
fldt
lret
movaps
inc
adc
push
jns
cmpsl
out
cwtl
adc
out
test
aad
jmp
mov
push
cld
jne
mov
nop
adc
repz
lcall
mov
fbstp
stc
sti
lock
mov
pop
xor
xlat
fdiv
sarl
jne
pop
inc
mov
pop
scas
lcall
dec
insl
stc
into
in
es
call
test
pusha
mov
pusha
shlb
stc
dec
repnz
jge
push
xor
stc
or
pop
xchg
cmpsb
enter
or
iret
xor
stos
mov
aaa
inc
daa
xlat
das
shll
jae
or
aaa
bound
mov
sbb
jp
cmpsl
xchg
movsl
xchg
push
test
test
test
aas
sub
outsl
pop
xchg
and
lock
out
sbb
leave
sbb
popa
int3
sbb
pop
push
cmp
xor
push
dec
xchg
cmp
xchg
pusha
adc
mov
adc
xor
icebp
mov
push
and
out
sub
or
aas
insb
insl
jns
lcall
inc
push
push
leave
insb
rolb
cs
ja
pop
in
sar
jo
clc
inc
shl
mov
bound
jne
jbe
or
ss
and
call
push
out
sahf
jne
xchg
imul
outsl
enter
daa
xchg
dec
lock
cld
pop
add
js
mov
insb
dec
mov
mov
jg
imul
sbb
mov
cmp
sub
pop
das
popa
add
es
repz
adc
dec
aas
or
cmpb
in
or
mov
scas
scas
sahf
pop
dec
push
push
les
mov
adc
xchg
pop
daa
xchg
clc
lods
pop
pop
push
adc
hlt
sbb
add
iret
hlt
push
mov
mov
ljmp
sahf
pop
or
es
xchg
pop
insl
or
cmpsb
lods
pop
loopne
ret
aaa
mov
mov
iret
xor
lods
bound
out
sbb
popa
ss
gs
movsb
or
or
mov
lahf
gs
cld
mov
daa
mov
mov
cmpsl
xchg
dec
inc
xchg
clc
and
icebp
int
test
jmp
in
lea
cmpb
ds
mov
out
jge
mov
in
dec
xchg
inc
push
clc
repnz
cmp
sbb
push
add
fisubrl
lods
in
data16
out
push
sar
pop
imul
aam
mov
out
cwtl
ficoms
mov
cmp
lock
stos
or
es
xchg
sbb
mov
test
jecxz
in
sbb
icebp
and
pop
mov
sbb
in
fs
jae
lods
call
jae
lock
loopne
int
sbb
orl
mov
or
cmp
gs
mov
and
inc
jne
repz
adc
neg
test
adc
cmp
sbb
aad
ret
dec
clc
adc
dec
sbb
push
mov
pop
cs
fsubr
int3
cmp
shrb
insl
repnz
pop
aam
adc
or
pop
dec
stc
loope
lock
pop
mov
ljmp
inc
test
lcall
add
shlb
push
gs
popf
loop
mov
xchg
clc
notb
out
or
out
out
and
into
dec
in
inc
sahf
mov
jmp
mov
mov
in
repz
mov
or
mov
cs
inc
xchg
push
stos
in
mul
les
jns
pop
ret
adc
data16
std
sub
sahf
mov
or
sub
out
sbb
in
rolb
adc
lds
fsubp
fldenv
stos
or
adc
cmp
and
stc
jle
and
pop
cmp
xor
loopne
das
pop
outsl
xchg
outsl
aam
push
xchg
lret
int
imul
ret
sbb
mov
stos
inc
jmp
in
sbb
popf
push
outsl
xchg
mov
fcompl
and
in
jns
mov
repnz
ret
dec
js
stc
bound
mov
pop
addr16
push
roll
sbb
xor
decb
mov
pop
cmp
xchg
dec
xchg
sti
push
fisubl
std
push
fdiv
jns
xchg
adc
call
mov
jecxz
dec
mov
mov
mov
js
pushf
adc
ds
xchg
adc
outsb
test
loope
sti
ds
data16
jg
dec
lret
popf
inc
pop
cli
cltd
sub
sahf
mov
mov
int
fstl
jmp
mov
mov
mov
pop
rol
out
jle
lahf
sbb
add
arpl
xor
iret
cmp
push
mov
cltd
or
cs
test
adc
fisttpll
fcompl
into
fidivs
pusha
or
cli
xor
mov
jno
and
fiaddl
stos
enter
call
sbb
sub
inc
lea
mov
aaa
lahf
popa
xor
orb
pop
xchg
aam
lods
sub
test
jmp
ljmp
fadds
push
fwait
movsb
xchg
xor
inc
sub
fildll
mov
shr
or
inc
in
stos
aam
mov
pop
and
data16
sbb
xor
popf
and
inc
sarb
jecxz
movsl
les
cmpb
fwait
cmp
ret
ds
sbb
out
xchg
xchg
ficoms
add
not
add
mov
pushf
sub
movsb
sarb
dec
ljmp
clc
push
scas
xchg
mov
mov
ret
jp
in
add
scas
dec
vpmovdw
pop
hlt
xor
icebp
fs
mov
pop
call
and
gs
xor
xor
cli
adc
xchg
inc
cmovne
adcl
inc
stos
pop
js
mov
cwtl
adc
inc
fildll
or
push
sub
or
sub
pop
push
lcall
push
sub
sar
dec
mov
lea
dec
add
jmp
ret
mov
or
lock
mov
mov
xor
add
push
leave
ficoms
and
mov
or
jge
js
mov
leave
pop
fidivrl
fcoms
add
subl
popa
mov
push
pop
sbb
cltd
adc
jns
and
jns
test
repz
in
in
popf
jo
add
fs
lret
lcall
push
push
xchg
add
aaa
in
xchg
fisubl
dec
pop
jb
je
je
sub
test
sbb
ds
jmp
xor
imul
jg
roll
cmc
sbb
repnz
cld
add
xchg
sub
push
js
jb
or
cmc
push
sti
lods
das
mov
and
bound
jno
xor
xchg
mov
repz
lcall
dec
cmp
fmull
mov
std
mov
xchg
jbe
jo
stc
pop
xlat
repz
xchg
cmp
popa
es
dec
cmp
jno
pop
div
das
adcl
nop
mov
loopne
push
es
outsb
inc
clc
cmp
ja
pop
cs
sbb
lds
ret
loop
sbb
clc
mov
sub
loop
aam
jo
lock
push
or
inc
and
add
inc
push
adc
mov
mov
outsl
cmovg
enter
jmp
je
loopne
mov
ret
jl
arpl
mov
daa
lds
mov
jmp
adc
popl
fisubl
sub
xor
cmpl
and
xchg
scas
stos
cld
gs
xor
add
mov
adcl
sbb
fists
xor
loopne
xor
push
and
mov
jecxz
jae
fistps
ficompl
xchg
out
iret
sbb
in
arpl
fisttps
dec
into
cmp
mov
inc
cmp
enter
mov
std
push
mov
fnstsw
movsb
mov
test
adc
xchg
fdivrs
movsb
or
jg
add
inc
add
fsubs
repnz
add
rcrl
in
aam
ret
sub
dec
stos
add
cmc
shrb
dec
lahf
sub
mov
jne
dec
dec
movsl
jne
aas
pop
sbbb
add
std
mov
loop
rclb
enter
cmp
jmp
loope
and
ret
std
xchg
stos
subb
into
lock
dec
iret
test
cli
insb
mov
and
adc
xorb
jl
lcall
mov
push
repnz
aaa
les
popa
sub
test
and
ja
add
cmc
inc
insl
mov
fistps
aas
pop
dec
movsl
and
cmp
pop
push
mov
cwtl
lret
test
out
add
fs
or
mov
pop
fdivrs
dec
xor
push
dec
push
test
dec
jb
pop
pushf
fmulp
ljmp
dec
in
aaa
rol
sub
xchg
sub
test
cli
loopne
jne
jae
sbb
inc
push
lahf
or
negb
pushf
pop
adc
jmp
lret
fcoms
dec
adc
mov
mov
cltd
pushf
daa
mov
cmp
daa
inc
cmpsb
jae
imul
xor
dec
mov
das
mov
fcmovnb
shll
push
add
mov
sub
cmc
pop
sub
jle
inc
mov
in
sub
or
mov
xor
push
push
cmpsl
add
mov
sub
aad
fnsave
hlt
mov
pop
es
loopne
int
mov
push
mov
xchg
sti
loop
mov
fneni(8087
sahf
xchg
pop
push
mov
pop
mov
fstl
sub
insb
sub
add
jle
jns
xlat
xchg
cs
daa
pop
mov
lret
mov
in
jg
sbb
outsb
out
xchg
push
insl
nop
faddl
fiadds
sub
dec
cwtl
xchg
cmp
mov
popa
and
fadd
lcall
sbb
inc
repnz
sbb
cmp
loopne
or
shr
xchg
das
imul
sub
mov
int
push
out
xchg
call
imul
lret
das
jge
icebp
lds
arpl
inc
inc
inc
and
adc
mov
pop
inc
sbb
sub
sbb
decb
enter
push
inc
je
cmp
rcll
insb
testl
push
sub
push
sub
bound
in
lret
jl
nop
mov
mov
pop
jge
shlb
and
mov
mov
adc
sbb
pop
inc
repnz
in
and
aam
sbb
mov
mov
mov
mov
int3
stc
mov
ljmp
pop
xchg
xor
and
in
push
lock
sbb
cmc
jno
jecxz
mov
cmpsb
pop
inc
inc
mov
inc
mov
ret
xchg
mov
shll
pop
and
ja
loop
cs
fs
pop
push
jmp
pop
sub
fstpl
or
mov
mov
push
jo,pn
aas
les
cli
cltd
aam
out
xchg
xchg
scas
cmpsl
jbe
rcr
sub
push
xchg
dec
and
ja
loope
lods
or
sti
mov
mov
fwait
scas
fcoms
cmp
movsl
push
xor
int3
xchg
fimuls
xchg
jae
insl
bnd
test
stos
inc
rcrl
push
jbe
and
adc
negl
scas
cld
pop
or
push
and
mov
repz
and
or
push
jns
int
stos
arpl
adc
ljmp
sbb
cwtl
repnz
jg
sbb
push
sub
pop
loope
push
mov
jecxz
sub
in
addr16
ss
sbb
xchg
lret
rclb
push
adc
idivb
jp
daa
inc
hlt
pushf
sahf
push
popf
add
jns
push
dec
adc
jg
shlb
and
push
insb
sub
jne
test
repnz
in
clc
ds
push
sub
jg
sbb
xchg
sub
scas
lahf
add
and
sbb
or
cmpsl
cmp
scas
dec
xchg
out
cwtl
jmp
jae
pop
std
sbb
ljmp
push
mov
mov
pushf
push
cwtl
adc
fidivl
pop
jb
push
test
fs
push
call
xor
iret
inc
xor
jnp
cmpsl
cmp
and
xchg
sbb
xor
cmp
lret
mov
fdivrs
push
mov
xchg
jp
mov
dec
test
or
pushf
pop
mov
fstpl
insb
push
sbb
shll
mov
inc
je
jecxz
adc
inc
jge
dec
adc
jns
dec
cmpsb
ds
imul
sbb
loope
aam
int
inc
push
mov
mov
ds
add
cwtl
jno
cmp
addb
mov
push
into
ss
sbb
je
dec
cld
fmul
in
xchg
xchg
pop
push
dec
cmp
adc
sti
jns
lock
cmp
pop
mov
xchg
mov
sub
inc
hlt
inc
jmp
out
inc
pop
out
outsb
sbb
pop
mov
mov
stos
mov
std
sti
push
or
lock
cwtl
mov
mov
pop
sub
push
pop
fmull
pop
ret
in
xchg
ss
or
pushf
or
mov
pop
push
push
fistpll
inc
frstor
sub
aam
lds
inc
xor
aad
jp
shlb
inc
push
or
and
add
pusha
fwait
test
lcall
push
dec
cmp
add
imull
das
mov
push
push
xor
dec
ja
mov
sti
ds
mov
xchg
add
mov
and
aaa
in
inc
cmp
out
dec
and
or
jmp
adc
or
jbe
cmp
mov
mov
repnz
cmp
jge
mov
iret
imul
je
popa
iret
jbe
xor
in
in
cltd
inc
xor
mov
cmp
sbb
xchg
in
jmp
aad
lahf
jno
inc
sbb
fldenv
jge
stc
je
push
xlat
emms
aam
jp
clc
iret
pop
pop
xchg
mov
loopne
cs
jns
or
outsb
sub
out
and
mull
lcall
add
scas
movsl
divl
pop
cmp
jg
jle
push
fnstsw
stc
jbe
mov
lcall
xchg
jge
xor
pop
cmpsl
sbb
fdivs
push
ret
xor
sahf
pusha
fwait
pop
cltd
or
inc
mov
nop
xor
mov
mov
loopne
xchg
sub
and
adc
jmp
adc
stos
rcrl
rcr
pop
push
lea
repnz
pop
test
sbb
xor
push
movsb
das
test
sbb
std
in
stos
inc
adc
sub
add
sbb
jno
dec
pop
arpl
lea
sub
not
xchg
sbbb
clc
push
scas
cmc
sahf
outsb
aas
into
add
push
adc
pop
jns
aam
or
mov
jb
push
push
dec
mov
ja
xor
insl
int
push
in
sahf
hlt
mov
call
add
sarb
cmp
subb
mov
sbb
ja
rcrl
out
pop
mov
pop
or
pop
fisttps
pop
in
sub
rcrl
loopne
pusha
dec
int
sbb
rcrb
jb
push
jne
xchg
loope,pn
ljmp
and
sbb
dec
stos
cmp
xor
mov
and
pop
push
and
cmp
inc
pushf
enter
lret
sti
adc
flds
enter
or
pop
cmpb
nop
out
imul
cwtl
fisubrs
out
sub
cmp
int3
pop
int3
jecxz
xor
inc
jo
stos
imul
adc
sbb
stos
xor
cmp
ja
xchg
inc
xor
add
and
call
inc
arpl
pop
loope
pop
addr16
cld
add
jnp
xchg
mov
stos
push
rclb
jg
sbb
sbb
hlt
jne
ffree
pop
pop
insb
and
out
test
adc
sub
cmpsb
and
test
mov
push
cltd
sbb
xchg
dec
stos
test
jne
dec
jne
js
mov
cltd
shll
pop
mov
scas
adc
outsb
in
cmpsb
push
mov
xor
mov
loop
ret
leave
mov
scas
pop
pusha
cmp
cli
xor
mov
pusha
rol
pop
shll
daa
inc
xchg
rorb
xchg
mov
or
sbb
pop
jmp
sbb
xchg
push
xchg
rclb
and
leave
and
cmpb
inc
pop
sbb
add
cli
inc
add
mov
inc
hlt
cmpsl
or
mov
lds
fsubs
xchg
add
inc
sbb
jge
mov
lock
popa
insb
scas
loop
test
test
push
jge
test
cmpb
mov
outsb
in
outsb
add
mov
adc
ret
sub
sbb
jnp
sti
mov
mov
jmp
xchg
ljmp
push
cmp
push
insl
xchg
xor
xor
sbb
mov
dec
scas
cmp
cmpsb
mov
inc
mov
mov
push
enter
or
movaps
in
pop
push
popf
fiaddl
xchg
hlt
sti
and
jne
adc
and
cwtl
repz
sbb
jnp
jae
ret
aaa
push
mov
call
cmp
cltd
shr
add
mov
push
or
pushf
cmp
adc
lods
jne
rcrl
sahf
dec
fistpll
fsts
fcoms
pop
sahf
idivb
loop
push
inc
in
cmp
push
sti
lret
xchg
and
mov
and
fs
in
incb
mov
in
stos
jns
jg
and
fidivrl
or
fwait
pop
xor
sbb
dec
dec
imul
push
fimuls
adc
xorl
adc
in
or
fisttps
cmp
leave
add
jle
popa
push
mov
pop
and
jno
jb
faddl
pop
mov
xchg
mov
lret
lock
mov
ret
adc
ja
fs
jns
in
or
pop
xor
mov
ret
fwait
out
push
loope
rol
arpl
pop
mov
sbb
scas
xchg
or
push
and
add
nop
pop
cmpsl
xchg
adc
aam
pushf
push
fdivl
clc
jo
jnp
xchg
mov
jns
lret
test
mov
in
daa
push
ss
or
sbb
or
push
aam
in
mov
pop
cmp
std
cmpsb
cmp
shrl
rorb
jo
mov
insl
out
xor
sahf
loopne
cmc
js
jno
sbb
mov
or
imul
push
in
adcl
outsl
sub
fwait
in
in
and
pop
aas
in
sbb
sbb
pop
push
mov
push
add
cmp
push
add
mov
jns
or
dec
mov
and
popf
inc
repnz
cmp
cmpsl
pop
lds
add
and
cmpsb
jbe
fwait
sti
or
in
dec
mov
loope
fsubrp
xchg
inc
and
push
gs
xchg
or
icebp
mov
loopne
test
js
mov
mov
movsb
aas
in
es
dec
aaa
inc
lock
jnp
push
jecxz
push
jmp
and
negl
mov
inc
shr
dec
jge
icebp
push
sub
mov
jp
out
xchg
fadds
sub
jp
sub
ss
adc
shlb
ljmp
cmp
jno
push
push
add
xchg
aam
sbb
mov
sub
leave
inc
std
or
xor
sub
sbb
pop
idiv
pop
lret
mov
sbb
cmp
popa
mov
outsb
mov
fstl
int
push
jl
roll
xor
int
pusha
pop
test
jmp
fs
xchg
fistl
inc
sbb
xor
and
or
shl
fwait
sahf
fwait
lret
jbe
jecxz
sti
sbb
or
test
sti
cmpsl
repz
ljmp
jecxz
inc
push
repnz
js
jge
bound
lcall
fsubl
mov
popa
xor
out
out
xchg
push
pop
movb
and
test
imul
add
fstpt
sbb
lds
push
push
add
out
or
push
cmpsb
xlat
push
xor
jge
jb
pop
dec
shlb
inc
pushf
dec
pop
jl
loope
push
icebp
jno
xor
sahf
cmp
aaa
int3
scas
call
fidivrs
sbb
dec
mov
repz
mov
enter
inc
fistpl
scas
call
xlat
cwtl
mulb
pusha
and
rcl
pop
sub
stos
mov
dec
inc
gs
test
roll
inc
mov
cmpsb
jg
sbb
mov
dec
dec
xlat
jno
lock
fidivs
push
or
dec
mov
shlb
jecxz
test
mov
jle
xchg
call
dec
dec
fwait
push
les
jl
movsb
sbb
test
mov
mov
std
fwait
pushf
xor
push
fwait
pop
dec
sarw
jp
and
jp
jnp
mov
and
das
mov
or
aaa
popa
mov
clc
into
shll
ja
push
pusha
sub
push
mov
and
cmp
lods
cmpsl
insb
cli
sub
ret
in
cmc
xor
stos
xchg
popf
pusha
gs
mov
loop
test
ret
addr16
icebp
dec
lods
outsl
sbb
test
add
lahf
dec
inc
add
in
or
bndldx
cmp
push
sub
mov
push
std
ljmp
fucomp
xor
enter
add
out
orl
scas
outsb
iret
lret
dec
popa
push
fstl
pop
nop
cmc
fmull
insl
ds
mov
iret
stc
jno
mov
pop
stc
cmp
push
fldenv
divb
rorb
iret
in
mov
mov
js
in
test
xchg
loope
repz
jecxz
loopne
push
push
add
adc
out
aaa
pop
sbb
daa
push
shlb
sbb
dec
je
outsl
cmp
or
repz
lock
pop
jmp
loope
jnp
mov
xorb
mov
clc
sbb
inc
cmp
push
addr16
cmpsl
dec
ret
mov
sbb
inc
fsubp
sbb
sti
and
jb
mov
jmp
dec
je
xchg
pop
std
movsb
sub
in
lds
inc
popf
lret
or
lea
repnz
push
mov
sar
outsl
mov
loop
cmpsb
xchg
iret
in
pop
jnp
movsb
bound
xchg
adc
or
push
cmp
pop
and
adc
mov
repz
add
jb
outsb
push
shll
add
out
pcmpeqd
arpl
jecxz
jns
push
aad
pusha
jb
xchg
fstpl
notl
push
pop
iret
aaa
adc
xchg
cs
les
orl
ja
mov
and
unpckhps
jnp
rcl
lods
xor
jl
xchg
pusha
loop
push
cmp
cmc
jnp
clc
test
xor
fcomi
aam
leave
pop
outsl
jp
repz
call
sti
es
mov
pop
sahf
and
icebp
clc
out
leave
sbb
push
xchg
aaa
pushf
inc
movsl
and
dec
sub
in
mov
js
pop
call
idivl
dec
sbb
dec
cmp
mov
clc
in
dec
nop
sbb
push
les
and
mov
bound
mov
or
pop
pop
repnz
sub
jecxz
scas
inc
xor
lea
pusha
xchg
and
pop
xchg
dec
movsb
out
sbb
sbb
repz
int3
inc
adc
xchg
mov
ljmp
idiv
add
xlat
xlat
sbb
add
jp
movsl
xor
cmp
mov
mov
aam
in
xor
xor
shll
add
lahf
mov
mov
mov
dec
push
int3
into
insl
addb
aam
xchg
push
loop
sub
addl
mov
nop
add
or
aaa
insb
sbb
ja
jmp
push
cmpsl
push
ret
dec
lods
mov
cltd
out
or
test
pop
imulb
cmp
sub
pop
enter
daa
and
pop
andb
push
pop
xchg
cltd
cs
inc
and
jns
xchg
push
push
addr16
inc
mov
push
loope
ss
stc
aaa
popa
in
xlat
sbb
insl
icebp
jecxz
and
test
fistps
xor
in
adc
push
inc
imul
int
bnd
adc
pop
es
add
jne
add
int
pop
jno
xor
lret
add
adc
mull
dec
sbb
inc
das
sbb
test
and
loope
and
sub
das
pop
dec
rorb
cmc
loope
sbb
and
jl
jmp
jnp
data16
dec
jg
push
movsb
pop
in
or
add
stos
aas
icebp
dec
push
call
test
push
lods
adc
mov
js
xlat
pop
inc
out
aad
in
push
insb
scas
add
sbb
outsb
jnp
loop
icebp
jns
xchg
mov
pop
dec
mov
hlt
or
adc
loop
pushf
dec
pop
ret
rorb
cmpl
dec
or
adc
adc
clc
xchg
insb
aaa
push
pop
aaa
sbb
stos
push
je
jo
push
shll
jge
jo
mov
add
arpl
mov
sbb
andb
mov
rcll
insl
std
icebp
insb
pushf
cld
push
les
push
fimull
fistl
pop
cmpl
mov
pop
mov
push
push
pop
es
inc
cld
cmp
add
cmp
mov
mov
iret
stc
fabs
int
dec
inc
ljmp
adc
lcall
pushf
xchg
in
mov
xchg
mov
inc
pushf
ss
into
lock
mov
fsubrs
and
push
xchg
popl
push
out
xlat
loope
add
push
xor
sbb
sub
fwait
inc
dec
aas
add
xchg
dec
add
mov
jle
sub
pushf
out
sahf
jo
xor
pusha
cmpsl
push
scas
pusha
test
lahf
sbb
ret
mov
sahf
cmc
sbb
or
aad
outsl
loopne
testb
sbb
dec
fildll
sbb
ja
subb
outsb
insl
iret
or
or
jp
fbstp
addb
sbb
xor
adcb
pop
add
adc
outsl
jnp
mov
add
or
gs
scas
fwait
and
sbb
mov
pop
enter
das
push
orb
or
cs
xchg
sti
cs
int
pop
leave
in
fidivrs
outsb
negl
mov
push
lahf
push
add
mov
popa
in
hlt
stc
mov
jbe
add
xchg
sbb
insl
xchg
mov
cmp
les
sbb
xor
add
mov
mov
xchg
cmp
out
divb
mov
jbe
cmp
jae
in
test
adc
sahf
xchg
jns
pop
lock
push
cmp
cmp
scas
inc
cwtl
scas
fcomip
jp
xchg
nop
sbb
pop
js
fs
test
pusha
xor
cs
ret
jp
out
mov
dec
or
les
insl
sbbb
adc
sub
pop
mov
or
aas
pop
push
das
aaa
adcl
push
scas
jmp
test
xchg
dec
cmpsl
xchg
lock
push
loop
jno
andb
les
addb
mov
repz
fstps
sbb
outsl
sti
repnz
lret
cmpsl
mov
mov
movsl
push
sub
mov
fdivrl
pop
ds
jecxz
ds
inc
int
in
dec
leave
mov
jbe
cltd
jg
adc
push
int
aas
arpl
cld
movsl
push
int
inc
adc
iret
leave
cltd
push
lcall
cmp
jp
add
outsl
pop
inc
xor
sub
jo
icebp
sub
jge
add
mov
pop
movsb
ret
fstps
int
pop
aad
addl
or
shrl
pushf
fs
cmpsl
push
xchg
lods
mov
rcl
idiv
movsl
add
and
or
xor
imul
lret
scas
out
out
cld
push
es
adc
das
pop
shll
mov
adc
inc
mov
rcrl
sbb
fsubr
out
sbb
and
ds
in
xchg
xchg
stc
xchg
mov
aam
cltd
mov
inc
rolb
dec
pop
mov
sub
repnz
cmpsb
in
cmp
sbb
sub
pushf
js
dec
push
or
and
pop
mov
scas
lds
pop
push
or
jo
out
add
outsl
pop
std
push
pop
xchg
push
in
rorl
push
adc
fneni(8087
shll
xor
push
sub
and
mov
push
icebp
lods
les
xor
cmpsl
or
pop
sbb
fdivrs
loop
int
clc
push
rolb
mov
lea
mov
inc
out
sub
or
xchg
les
xchg
pop
imul
decb
pop
mov
vxorpd
pop
stos
push
mov
add
adc
pop
jbe
sti
push
pushf
pusha
stc
push
mov
lret
jmp
push
pop
xchg
mulb
fsub
pop
and
lret
add
pop
clc
xor
iret
pop
sbb
jecxz
pop
add
daa
popa
jbe
jg
dec
mov
test
lea
mov
dec
lods
jmp
fsubs
enter
mov
inc
nop
xor
jp
repnz
add
or
cmp
sarl
jb
pop
mov
lcall
adc
addr16
dec
add
adc
push
cmpsb
out
jb
adc
adc
outsl
jns
add
fbld
mov
push
stos
loope
xchg
aas
cmp
cld
xchg
divl
push
into
out
lock
int
and
add
imul
xchg
aaa
sbb
pop
or
dec
sbb
fistpl
fidivs
sti
and
loope
mov
mov
dec
dec
jle
jg
cmc
cwtl
cld
sti
inc
aaa
imulb
cmpsb
jmp
mov
sub
mov
mov
xchg
adc
outsl
jmp
inc
xor
bound
add
mov
inc
stc
adc
test
fwait
cld
push
cli
fwait
mov
lock
pop
mov
sbb
and
mov
in
roll
mov
sub
sbb
loope
mov
inc
xor
push
ss
test
fxch
cmp
lea
or
mov
or
and
and
adc
inc
mov
vshufps
mov
scas
data16
push
mov
dec
cmpsw
inc
xchg
fnstenv
hlt
stos
out
nop
and
test
arpl
sub
in
outsb
aam
fldt
push
mov
cmc
scas
push
ljmp
cmp
xor
adc
push
enter
leave
jmp
rcrl
les
lock
lret
xchg
xor
scas
lret
addr16
jno
jo
mov
sbb
insl
cli
fsubrl
push
pop
sbb
shrl
pop
in
mov
mov
in
push
or
insb
xchg
add
lcall
push
fldt
out
mov
into
adc
mov
pop
and
cmp
xchg
insl
aaa
aad
insl
cs
mov
rorl
popa
ss
cmp
push
enter
addr16
pop
call
loop
mov
popa
xor
sbb
mov
inc
mov
out
mov
jp
lahf
test
andb
push
std
mov
cmpsl
xor
jne
lret
movsl
mov
sti
lock
add
stos
ret
mov
mov
hlt
sarl
jecxz
outsb
fildll
insl
pop
call
inc
jb
add
popl
mov
adc
enter
jecxz
daa
mov
mov
cmp
xchg
in
popf
sub
sbb
insl
and
jecxz
and
jb
push
xlat
xor
ss
cmc
cmpsb
jno
int3
lcall
mov
rcrb
push
dec
mov
push
fisubs
add
mov
pop
outsl
or
and
dec
dec
mov
call
pop
dec
mov
pop
sub
cmc
jae
shrb
test
in
icebp
jo
inc
imul
xchg
popa
mov
rcpps
repz
xchg
mov
push
push
sbb
and
imul
mov
out
out
push
pop
es
cld
insb
fs
pop
mov
cmp
popa
sub
popa
sbb
leave
or
scas
ret
mov
outsl
jns
shll
out
push
inc
mov
push
xor
dec
shrl
lds
jge
jecxz
test
popf
or
cmpsl
jmp
mov
lea
push
add
adc
pushf
push
pop
arpl
cmp
lahf
leave
jl
movsl
add
cmp
xchg
stos
cli
sarl
cmp
mov
sbb
dec
ret
sub
inc
push
mov
fwait
adc
xor
cmp
xlat
dec
xor
test
sbb
pop
pushf
mov
or
sub
xchg
rorl
push
xorl
cmp
inc
mov
int
cmp
test
jns
dec
jo
and
test
rol
lret
nop
jns
dec
inc
fildl
pop
push
jne
jge
imul
cld
sbb
inc
jns
hlt
repz
incb
sub
movsb
jmp
xchg
clc
push
mov
pop
pop
jle
push
insb
push
loope
push
push
xor
std
mov
dec
cmp
pop
jb
or
lret
repz
jo
clc
fs
inc
push
mov
xlat
mov
or
mov
adc
jl
out
mov
push
sahf
sti
mov
mov
mov
and
ds
cmp
popf
ret
pop
xor
cld
orl
pop
add
pop
push
inc
ljmp
cwtl
movsb
mov
dec
push
stos
rol
inc
jae
leave
push
pop
adc
cmc
clc
or
push
mov
mov
pop
cmp
push
cmpsb
insb
lea
movsb
lret
xlat
shrl
add
xor
sub
xor
or
ffreep
arpl
xor
or
mov
jp
adc
out
es
les
pop
js
push
lret
add
push
add
cld
sbb
mov
pushw
rcrb
jno
jo
dec
jmp
pop
xor
dec
adc
out
nop
clc
rcrb
sub
in
sbb
pushf
out
dec
inc
pop
enter
and
loopne
xchg
pop
outsl
data16
mov
bound
pop
mov
inc
cmp
inc
rsm
push
loopne
cmp
and
repz
in
push
mov
pop
jb
mov
repnz
daa
sti
pushf
fsts
lret
push
push
enter
popf
sbb
push
inc
jne
fiadds
mov
jno
stc
push
into
dec
popa
arpl
imul
addr16
cmp
or
jb
push
add
shlb
xor
popa
rorb
ss
js
movsb
mov
sahf
icebp
test
push
lret
daa
iret
jle
data16
xchg
hlt
dec
outsl
mov
and
xchg
jae
fdivl
rcrb
popf
xorb
dec
test
inc
andl
jmp
loopne
pop
jle
add
test
mov
or
stc
pop
lcall
push
mov
mov
stc
cltd
jns
and
fstpt
lret
mov
sbb
mov
aam
add
sarb
repz
xor
mov
popl
adc
cld
stc
icebp
movsl
psubw
out
in
scas
mov
cwtl
fwait
inc
imul
mov
nop
out
dec
iret
jmp
pop
notl
adc
mov
imul
ja
sbb
fwait
pop
sub
in
std
cwtl
mov
dec
xchg
cli
pushf
shlb
xchg
mov
and
pop
test
jle
jg
je
rclb
xor
test
ret
adc
push
adc
int
popa
and
stos
push
push
ss
jle
jns
int3
dec
jb
dec
pop
mov
lock
inc
push
aam
jae
ss
mov
push
aaa
in
and
adc
push
cmp
and
mov
scas
mov
inc
and
lahf
leave
movsb
cmp
sub
push
mov
sub
lcall
ud1
or
mov
rcrl
xor
aam
dec
pop
sub
mov
scas
add
cwtl
add
lods
sub
add
mov
movsb
xlat
pop
cmc
in
dec
xchg
adc
enter
mov
adc
sbb
fisubl
pop
mov
mov
and
cld
lret
sbb
loopne
popa
xchg
stc
lods
fs
popf
cmp
popa
mov
dec
jle
mov
mov
ljmp
cmp
outsl
push
xor
out
gs
jp
lahf
adc
cmp
aas
out
hlt
shlb
xchg
les
test
mov
add
enter
out
cmpsb
adc
adc
mov
addb
mov
pop
cmp
mov
call
mov
fs
sbb
test
add
cmp
insb
or
inc
pop
and
xor
aas
aam
push
pop
xor
dec
cmpsb
mov
int
shll
push
push
movsl
in
cmp
xchg
xchg
pushl
jnp
es
inc
imul
dec
arpl
or
rorl
popa
test
mov
inc
lret
or
mov
lods
cmp
and
adc
xor
or
jecxz
or
addr16
sub
sub
mov
mov
or
jge
sub
or
mov
in
pushf
push
daa
sarb
lcall
or
lods
jbe
xor
xor
ljmp
sbb
repz
pop
mov
das
mov
sub
mov
dec
pushf
push
cmp
xchg
test
call
xor
test
jle
xchg
mov
stc
cmpsl
push
xlat
inc
jns
imul
enter
andps
xchg
sub
or
daa
cmp
dec
fmull
xchg
adc
mov
out
les
into
lret
jmp
pop
in
mov
idivw
pop
xchg
cwtl
inc
xchg
mov
mov
orl
shrl
cwtl
push
push
or
mov
daa
cli
or
adc
adc
test
jae
sbb
movsl
sub
sub
adc
push
sub
xchg
xchg
sub
repnz
cwtl
mov
daa
adc
movsl
dec
pusha
pmulhuw
pop
lods
roll
xlat
pop
lret
shlb
inc
xchg
xor
inc
push
jp
bound
lahf
rcrb
pop
dec
mov
repnz
xor
sub
das
jo
fistpll
ror
lahf
iret
ljmp
cld
mov
cmp
add
lcall
xor
aas
movsw
adc
aaa
mov
mov
repnz
mov
inc
pop
push
jno
pop
fsubrl
movsl
clc
shll
pop
dec
dec
clc
out
sub
lds
les
aas
cltd
sbb
sti
mov
push
js
enter
pusha
js
fistpll
aam
lret
leave
jecxz
mov
xchg
rolb
clc
scas
loopne
push
pushf
dec
daa
movsb
leave
hlt
ds
pop
ljmp
push
mov
add
and
cmp
aas
mov
loopne
and
hlt
pop
xchg
cmp
sub
xchg
shrb
pop
pop
cmpsl
pop
mov
and
jp
inc
jo
mov
inc
test
mov
cmp
cmp
out
pushf
inc
cmpsl
dec
push
into
add
popf
xor
lods
jecxz
sbb
jae
and
jne
insb
movsb
out
jbe
sub
bound
rolb
or
xor
mov
in
mov
imul
jns
out
xchg
cmp
mov
ret
adc
pop
shlb
icebp
mov
cld
xchg
jae
xchg
cs
lahf
out
mov
or
or
xchg
push
xchg
jp
jne
mov
pop
dec
loope
push
ljmp
test
add
jno
push
pop
cmp
inc
aad
das
mov
sub
mov
ljmp
lret
xchg
mov
inc
lahf
jle
or
pop
dec
or
mov
lods
mov
leave
sub
je
ss
jecxz
je
dec
mov
jo
stc
lahf
mov
jns
mov
cltd
mov
mov
dec
dec
dec
add
or
iret
pop
push
jmp
rolb
es
add
test
aad
repnz
mov
push
push
arpl
push
sub
icebp
addr16
pop
in
mov
add
jmp
inc
sbb
into
fdivrl
inc
cmpsb
cmp
or
aaa
mov
rolb
push
dec
mov
xchg
jns
fwait
cmp
jne
adc
scas
ds
inc
aad
mov
mov
das
mov
lods
dec
sahf
jo
je
es
xor
pop
sbb
cli
cmp
jns
mov
pop
cmp
mov
cmp
cld
pop
pop
cmp
subl
pop
or
pop
add
mov
inc
addr16
stos
xor
cmpsl
sbb
loope
sbb
sbb
divb
push
push
scas
shll
add
adc
ljmp
jecxz
incl
movsl
mov
xchg
into
lods
lods
arpl
cli
mov
in
mov
jno
pop
je
test
popa
cld
incb
enter
pop
in
fs
sbb
decb
repz
mov
das
mov
xor
adc
dec
in
mov
mov
xchg
clc
repnz
lock
jb
and
mov
gs
loopne
rclb
sbb
mov
jne
mov
push
xchg
popf
lahf
or
in
in
insb
cmc
cld
shlb
mov
mov
dec
sub
decb
mov
loopne
out
pusha
scas
lea
movsl
dec
dec
push
int3
pop
rorb
adc
shrb
xor
push
addb
xor
js
jb
or
sub
xor
cmp
pop
cmp
ficoms
mov
scas
mov
insl
cmp
sti
clc
popa
imul
add
mov
into
fnstsw
mov
and
pop
popf
jne
xlat
repz
shrl
mov
popf
pop
push
repz
jge
popl
inc
into
xorb
incb
cwtl
pop
adc
dec
mov
xchg
in
mov
data16
xchg
movsl
mov
fildl
inc
cli
lods
pop
loope
push
mov
push
jmp
cmp
cmp
cmp
jmp
pop
pop
sahf
out
inc
sbb
cmp
subb
aaa
push
or
or
dec
popa
mov
cmp
mov
or
ret
adc
jno
movsb
adc
ja
int
fwait
xor
repnz
pop
fbstp
fisubrs
in
shll
inc
push
xor
popf
movsb
and
outsb
cmp
incb
into
adc
icebp
adc
aad
loop,pn
out
jecxz
cltd
mov
dec
cmc
xchg
dec
inc
cmp
push
sbb
call
push
dec
mov
lds
inc
push
sub
fdiv
jo
notl
fwait
inc
add
pushf
ljmp
rcl
push
xchg
xor
cmc
pop
jae
and
sub
xchg
xchg
and
rolb
rcrl
push
dec
iret
mov
xor
or
ret
aam
pop
push
inc
mov
lret
mov
cltd
leave
jg
shr
mov
lods
dec
shl
loopne
out
or
bound
inc
pop
xor
push
aas
mov
fisubl
imull
inc
pop
out
in
push
mov
mov
push
or
aas
mov
jmpw
ret
sub
lock
roll
mov
movsl
loopne
mov
mov
xchg
inc
dec
xchg
lds
xchg
mov
or
mov
in
mov
cmp
cmp
sahf
into
lods
test
cmp
pop
leave
movsb
mov
jbe
xor
into
sub
jbe
push
je
or
adc
sahf
mov
mov
push
aad
rcr
shlb
call
rcll
in
mov
fidivrl
repnz
lcall
sti
jmp
and
inc
out
fs
jno
pop
mov
movsl
mov
insl
out
cmc
jecxz
push
and
je
js
xchg
fdivp
jl
push
xchg
ds
in
push
sub
and
pop
and
sub
xchg
daa
pop
movsb
mov
es
cmp
sbb
xchg
xchg
lods
stos
cmp
arpl
dec
movsb
stos
lds
jp
in
test
mulb
subl
push
repz
pop
xor
pop
cs
lcall
xor
add
push
jecxz
ja
aam
ret
mov
sti
scas
push
das
mov
ja
xchg
lock
sahf
loopne
rorb
and
imul
push
push
xchg
mov
fdivs
jns
jb
in
jmp
adc
mov
loopne
jle
mov
lods
xor
cmp
sub
addr16
mov
jg
or
jmp
and
jns
sub
out
mov
mov
andl
cli
jge
aam
insb
cmpsb
pop
aam
mov
inc
and
mov
les
inc
pop
push
shl
call
das
jmp
pcmpgtd
mov
xchg
test
or
or
or
lods
cs
loopne
loopne
push
mov
out
test
mov
ds
cmpsb
pop
jge
inc
add
xlat
pop
mov
xchg
sbb
mov
nop
mov
decl
jp,pn
sbb
push
xchg
or
mov
insl
add
add
cli
cmp
aad
shlb
sbb
sti
mov
sbb
adc
xor
sbb
fisubs
mov
xchg
es
dec
push
sti
aad
mov
dec
sub
lock
iret
imul
lret
fmull
jne
sbb
mov
mov
cmc
mov
sub
and
jp
dec
mov
jns
daa
int3
push
out
ljmp
data16
ror
xchg
sub
dec
repnz
mov
add
cld
mov
fimull
xlat
cmpsl
lahf
pop
jp
pop
dec
dec
inc
sbb
xchg
and
or
jl
add
or
pop
es
cmp
ret
inc
pop
int3
jle
sub
aas
and
dec
data16
and
rol
jle
add
js
scas
imul
in
inc
and
lcall
mov
out
pop
out
inc
xor
lods
push
cmp
mov
dec
mov
inc
lahf
popa
lret
add
adc
mov
int
es
mov
and
push
fcmovnu
dec
fadds
sarb
push
aaa
enter
push
add
cmp
adc
xchg
inc
or
jae
pop
or
ret
and
add
adc
dec
or
mov
iret
mov
and
int3
rclb
pushf
push
pop
fiaddl
test
roll
jl
sar
mov
sbbl
or
les
and
outsb
adc
mov
rorl
hlt
jno
or
pushf
into
test
push
ret
push
stos
adc
stos
dec
push
jo
mov
pushf
or
mov
daa
push
mov
mov
fadd
push
xor
cmp
adc
lahf
jecxz
cwtl
jo
sarl
cmp
stos
movsl
mov
adc
js
push
xchg
inc
xchg
outsb
xchg
inc
scas
mov
xchg
insb
xchg
and
sub
nop
lcall
lahf
cmpsb
nop
cmp
aad
nop
or
lret
mov
hlt
push
pop
push
jge
rclb
mov
push
push
loopne
cs
leave
mov
push
add
cmc
sbb
pushf
xchg
mov
mov
push
xchg
jl
scas
mov
stos
mov
pushf
cmc
lods
sub
sbb
jb
xchg
testb
enter
fidivrs
inc
callw
mov
sti
cs
test
mov
cmp
or
jge
dec
cli
gs
mov
inc
add
cld
lret
fs
fidivs
pop
or
jge
ficomps
out
cli
inc
cmc
das
jmp
jg
movsb
jp
jns
push
sahf
stos
push
aam
mov
pop
inc
adc
test
lds
jae
cli
inc
sub
and
xchg
pop
sahf
iret
sub
int
rclb
das
inc
nop
and
cmpb
clc
or
inc
aam
cmpsl
cld
or
sub
add
mov
mov
mov
mov
loope
jne
aam
or
adc
inc
inc
cmp
jns
xchg
add
xor
inc
pop
xchg
out
cli
ror
lret
in
xor
scas
cmpsl
sbb
popa
shlb
jae
mov
mov
inc
ja
fildl
xor
arpl
fnstsw
sti
cltd
insl
test
in
repnz
jle
push
aad
jno
into
xor
out
inc
out
insl
inc
inc
ds
std
mov
in
cwtl
mov
daa
adc
mov
and
or
xchg
loopne
or
mov
stos
addr16
dec
popf
shr
test
mov
mov
mov
lock
pop
xlat
push
dec
sti
mov
pop
and
out
in
outsb
movsl
push
and
and
je
dec
lds
loope
repz
and
and
lock
jbe
mov
call
and
xchg
fs
or
lock
jle
push
xchg
gs
insl
jecxz
mov
cld
insl
xchg
mov
jns
xlat
cmc
scas
and
mov
jbe
inc
arpl
push
scas
test
ret
xor
lds
mov
dec
cmp
pop
es
popf
xchg
ljmp
addr16
mov
sti
inc
pusha
inc
adcb
mov
loop
scas
sbb
lock
xlat
pop
mov
xchg
adc
push
scas
xor
add
jmp
jecxz
jnp
jge
lds
movsl
out
hlt
outsl
test
or
mov
fwait
add
add
addb
sbb
lret
lds
incl
call
sub
in
outsl
push
xchg
inc
pop
fldcw
gs
sbb
add
cmpsb
jae
inc
inc
movsb
adc
ljmp
lods
mulb
jne
jne
pusha
outsl
dec
pop
mov
sbb
bound
mov
aad
mov
jbe
out
sbb
rcrl
lahf
rorb
cmp
mov
pop
cmp
jle
lahf
jl
ret
sbb
cmpsb
or
aad
add
enter
arpl
mov
out
pop
xor
adc
xorb
jns
pop
pop
call
and
add
flds
popf
add
dec
inc
lea
aad
xchg
loopne
mov
imul
xchg
out
sub
pop
dec
push
nop
cld
pop
dec
dec
inc
inc
inc
xlat
movsb
je
nop
jmp
ja
loop
sub
jecxz
aam
dec
aam
ficomps
inc
push
or
nop
jo
pop
cmp
inc
repz
bound
loopne
gs
add
xchg
jae
movsl
test
pop
or
icebp
cli
fdivrp
mov
jp
sub
sbb
imul
cmp
out
mov
adc
stos
push
cwtl
push
mov
enter
test
sbb
xchg
loop
les
sbb
pop
pop
push
cwtl
dec
aaa
aas
rcrb
sub
icebp
lcall
rclb
or
xor
adc
gs
push
scas
push
xchg
mov
sbb
fisubrs
fldcw
bound
cltd
xchg
insb
lahf
add
jg
insl
push
mov
xchg
add
or
sbb
ja
ja
pop
inc
jbe
pop
sub
pusha
jecxz
xchg
xchg
xchg
shll
nop
ja
loope
repnz
mov
sbbl
inc
or
mov
adcb
xchg
pop
fstl
xchg
mov
inc
or
es
lock
lods
and
leave
loopne
movsl
stos
out
fbld
pop
jl
add
jmp
mov
out
outsl
ljmp
std
in
jnp
mov
xchg
jl
mov
lcall
xchg
inc
test
xchg
sub
sub
iret
mov
jne
inc
ret
cmpsb
mov
or
mov
or
cmp
mov
loope
loope
mov
shrb
int3
xor
sahf
leave
sbb
add
mov
clc
dec
push
mov
cmpsl
pusha
sti
push
push
push
xchg
sub
imulb
imul
push
xchg
mov
cmp
lods
mov
jno
cmc
push
mov
jmp
jae
and
std
lea
addb
jecxz
nop
popf
popf
cmpsl
movsb
inc
jge
inc
adc
shrb
mov
sbb
ss
shl
int
sbb
out
in
cmp
dec
cmpsl
sbb
mov
and
sub
in
and
into
pop
movsb
orl
js
xor
jge
stos
inc
out
js
jns
cwtl
insb
or
bnd
pop
fldcw
mov
je
jge
outsl
outsl
push
outsb
jge
lods
pop
xchg
sahf
lret
sbb
shlb
mov
aam
dec
test
mov
out
cmp
test
shll
cmpb
dec
aam
loope
or
rcrl
add
testl
movsb
int3
sbb
daa
jge
add
sub
adc
popa
mov
lahf
push
mov
sub
mov
mov
mov
sbb
cmp
pop
xchg
xlat
cld
mov
outsb
dec
cmp
cmc
inc
lds
inc
push
mov
xchg
sbb
jl
xchg
gs
pop
sbb
adc
je
rcrl
and
pop
xor
fidivrs
pop
outsb
js
sarb
mov
ljmp
and
xchg
adc
xchg
cmp
orb
sar
push
mov
shrb
mov
arpl
push
dec
call
loop
ret
rcrl
inc
pushf
sub
in
xchg
pop
popf
pop
xchg
jo
rorb
mov
mov
stos
jmp
cli
mov
or
mov
add
jg
mov
xor
mov
push
jmp
dec
cmp
sub
add
push
dec
clc
push
mov
ljmp
imul
or
out
sub
xor
push
and
jno
das
scas
ja
sbb
mov
lret
sub
repnz
adc
hlt
stos
popf
xchg
nop
inc
adc
push
sbb
insl
lea
push
cmpsb
cmc
shl
hlt
pop
mov
out
sarb
sub
add
shlb
and
test
and
mov
sahf
sti
lock
mov
cmp
mov
mov
fwait
in
loop
jp
pop
xorl
xchg
and
pusha
jnp
test
int3
pop
and
sbb
outsb
decl
mov
inc
jb
arpl
out
call
jl
lea
and
sub
cmp
add
add
jo
pop
lock
sub
pushf
in
push
jb
sbb
jge
inc
mov
push
pop
idivl
lods
orb
daa
mov
xchg
mov
inc
rclb
add
push
mov
call
xor
xchg
outsb
and
test
enter
mov
xchg
xchg
fwait
or
inc
fsts
out
fsqrt
lods
lret
scas
dec
mov
cmp
pop
mov
test
push
jmp
inc
jle
adc
les
mov
pop
scas
pop
aaa
mov
pop
in
mov
into
inc
cltd
xor
loope
mov
mov
or
xor
ret
add
mov
add
mov
xor
divl
cld
ds
pop
out
inc
push
addr16
incl
pop
lods
sub
xlat
or
jecxz,pt
std
sbb
dec
lret
adc
mov
nop
add
adc
cmp
mov
dec
xor
push
cmp
jp
sarb
or
xlat
cwtl
pop
adc
hlt
daa
arpl
mov
or
lods
arpl
push
push
nop
jl
cltd
jl
inc
and
lods
mov
sti
stc
je
daa
ja
mov
pusha
xor
outsb
shlb
movsb
data16
or
dec
in
mov
sbb
sbb
inc
call
push
adc
sub
rcrl
add
jbe
cmp
lret
in
mov
lock
mov
adc
add
pop
scas
scas
lods
popf
sbb
fcompl
pusha
pop
test
mov
jne
sub
test
outsl
mov
push
into
cmp
mov
sbb
add
xor
push
ffreep
push
xchg
test
pop
adc
cmp
push
inc
cmpsb
xor
iret
adc
mov
push
pushf
xchg
call
and
sbb
sub
pop
faddp
push
or
adc
dec
gs
ja
loop
icebp
insl
lret
mov
loope
mov
faddl
pop
movsl
jle
and
sub
mov
mov
xchg
test
mov
in
jns
add
jne
mov
mov
mov
cltd
lcall
push
dec
aam
insb
sub
lahf
inc
iret
xor
psubq
inc
in
cmpsl
xor
mov
out
and
add
insb
mov
inc
popa
inc
movsl
pop
test
out
aad
shll
or
sub
subb
xchg
add
add
cmp
nop
fdivrp
adc
mov
outsb
push
xchg
mov
add
cltd
mov
movsb
pop
push
xor
mov
sbb
movsl
ss
outsl
xlat
push
fsqrt
cli
cld
mov
in
and
ljmp
dec
out
xchg
pop
add
cmp
sub
jp
iret
sbb
xchg
mov
xor
or
hlt
mulb
pop
cmpsl
bound
cltd
sti
adc
stos
xchg
push
or
push
lods
mov
xchg
clc
orb
mov
mov
xor
dec
jo
jle
leave
movsl
push
mov
sbb
lahf
or
cmp
pop
sti
icebp
andl
icebp
lds
cmp
std
cmp
rorb
mov
pop
icebp
fwait
leave
imul
inc
push
test
sbb
or
sub
je
insb
cwtl
push
lods
hlt
pop
mov
leave
jge
pop
lret
sbb
rcrl
aam
mov
mov
xor
insl
dec
mov
adc
dec
xor
popf
and
mov
enter
mov
inc
aad
push
push
and
sub
inc
stos
jmp
das
nop
mov
add
pop
out
inc
mov
push
cmp
out
jae
xchg
adc
pop
mov
or
mov
int3
sbb
ljmp
push
push
add
daa
adc
sbb
add
rolb
pop
mov
fidivrs
nop
ret
mov
fwait
xchg
andb
pushf
push
sub
dec
push
push
and
sub
pop
push
imul
xchg
sub
xchg
mov
scas
xchg
fwait
jg
int
out
mov
subl
add
fistps
rorb
lcall
scas
int3
or
lock
mov
pop
ret
decl
test
pop
outsb
add
ljmp
packsswb
addr16
push
test
sahf
dec
sub
cmp
outsl
and
out
rcrb
test
lcall
push
leave
movsl
insl
inc
jge
fsubs
mov
scas
add
jnp
pop
inc
decb
add
fcompl
cmpsl
sub
sahf
stos
dec
mov
out
jns
loopne
stc
imul
mov
mov
jnp
mov
mov
scas
int3
imul
push
out
je
jmp
fisubrs
xchg
aad
add
in
push
dec
inc
inc
push
pop
daa
fdivrl
adc
jne
add
jmp
jb
jmp
sbb
icebp
xchg
loope
mov
repnz
jl
hlt
mov
xchg
mov
out
xor
aad
popf
aad
mov
in
jl
into
lret
push
fadds
rcll
jnp
das
dec
cmc
sub
lret
clc
xor
push
xor
xchg
addb
add
dec
test
repz
jbe
or
ud1
adc
pop
into
dec
cmp
in
mov
jbe
mov
es
flds
test
add
push
mov
push
ds
push
pusha
aad
mov
scas
inc
popa
add
sub
dec
push
mov
sahf
dec
cli
push
push
nop
test
test
jae
jns
push
stos
push
mov
insl
imul
imul
in
imul
out
mov
inc
lret
scas
adc
cmp
mov
fadds
inc
cmp
vpsubw
int3
cld
fcom
pop
stos
dec
cmp
cwtl
lock
add
scas
rclb
int3
xor
xchg
cmpsl
fnsave
sti
fst
ret
and
lods
icebp
cmp
fdivl
dec
xchg
sahf
je
sbb
loop
jne
mov
sahf
pop
mov
insb
xor
sub
loopne
aaa
mov
fs
lret
mov
cmpsb
push
mov
jo
adc
fwait
push
xchg
lds
mov
sbb
xor
shlb
pushf
repz
xor
push
cmpsb
pop
mov
sbb
mov
sarl
xchg
push
push
jp
cmp
test
dec
int3
pop
lods
jmp
dec
pushf
ljmp
test
mov
es
jmp
mov
cltd
icebp
adc
mov
inc
and
and
cs
lahf
jge
leave
adc
movsb
shll
mov
pusha
xor
jp
arpl
push
push
test
mov
xor
and
and
movsl
jmp
xor
sub
fisubl
xchg
adc
inc
jle
pop
pop
test
mov
sub
and
test
push
jle,pt
scas
cmc
movsl
mov
inc
add
pop
cltd
sarl
orb
stc
out
gs
mov
enter
dec
mov
arpl
cmp
movsb
jo,pt
jb
jae
cmp
inc
divl
or
ds
jp
and
sub
daa
fists
push
cli
sbb
adc
and
push
dec
cmp
jns
jne
xor
sti
jb
daa
fmul
cmp
and
jp
lahf
or
or
push
inc
bound
clc
pop
or
or
addr16
push
aam
or
and
lahf
cmp
das
pop
ret
es
shrl
jl
sbb
pop
gs
adc
add
push
sub
dec
xchg
add
cmp
loop
pusha
cmp
xor
fidivrs
cmp
lods
das
hlt
dec
inc
push
mov
stc
pop
and
cmp
jb
dec
cmp
in
std
jnp
or
mov
sar
or
mov
mov
xor
frstor
jb
add
test
fisubrl
and
mov
fildll
jae
jbe
pusha
add
pop
pop
xchg
mov
or
ja
mov
lret
jmp
sub
push
or
mov
out
push
dec
je
iret
stos
ss
imul
pusha
add
jmp
fmull
mov
mov
sub
inc
daa
out
lock
mov
je
fnstsw
adc
adc
and
fs
daa
sbb
fdivp
sub
enter
subb
push
adcb
mov
push
add
xor
mov
ret
or
sti
pop
pusha
xchg
adc
call
popl
jnp
movsb
jle
ljmp
fnstenv
in
fcoml
stc
xchg
test
push
xor
fsub
scas
xchg
in
hlt
imull
pushf
cmp
ret
or
push
add
push
mov
lea
imul
lahf
xchg
and
push
out
loopne
jo
int3
sub
and
fidivs
add
push
lret
add
mov
movsb
out
sarb
rol
push
hlt
cmp
xlat
inc
sbb
out
dec
inc
cmpsb
push
jecxz
sub
das
rcrb
repz
gs
lret
and
data16
mov
lock
leave
jne
or
mov
or
aaa
sub
mov
and
xchg
cmp
out
pop
push
jge
mov
jno
and
push
mov
push
push
int
xor
adc
insl
pusha
nop
pop
lods
clc
sbb
jno
push
push
jle
lahf
das
loop
push
add
rclb
xchg
imul
insl
and
out
sub
in
or
daa
lods
cltd
mov
add
loop
or
inc
jp
fdivs
je
or
mov
shrb
scas
in
lods
mov
stos
xor
out
adc
arpl
and
push
mov
out
inc
mov
push
mov
cwtl
pop
test
int
adc
xor
insb
arpl
sub
addr16
sbb
jecxz
xchg
in
shr
into
lret
dec
and
mov
adc
sbb
mov
jo
inc
pop
movhps
in
pop
sahf
mov
loope
out
pop
std
push
in
push
lret
cli
jns
xlat
adc
cltd
stc
cmp
nop
dec
mov
xchg
insl
adc
push
je
jmp
mov
iret
pop
addl
popa
or
add
pop
mov
ret
or
mov
lock
lock
mov
and
das
mov
sbb
js
cld
fsts
adc
xor
pop
dec
scas
jbe
popa
adc
bound
loopne
add
push
ror
sbb
dec
lcall
stos
das
les
add
pushf
xor
mov
push
lods
andl
sub
js
cmpl
pop
push
pusha
and
xchg
mov
jge
jno
adc
ss
out
es
dec
push
sub
inc
sbb
call
xchg
sbb
out
into
pop
pop
sbb
xchg
dec
pop
lret
dec
pop
call
das
and
pop
sub
mov
std
sub
fidivrl
aas
and
inc
add
xor
adc
into
inc
lret
mov
lret
outsb
push
dec
gs
repnz
aam
stos
test
ss
sarb
mov
cli
sub
jge
or
mov
lds
and
cmp
inc
cltd
loop
jo
push
jecxz
nop
add
les
pop
lret
cmp
mov
jae
cmp
sbb
popa
mov
inc
lock
lds
or
push
jecxz
push
pushf
push
rcrb
orl
sbb
ffreep
jge
mov
aad
cmp
jmp
aad
cltd
push
jge
push
mov
xchg
sbb
insb
and
sbb
inc
out
jg
ss
cmp
das
cwtl
mov
xchg
pop
inc
repz
xor
jbe
inc
mov
pop
and
mov
aad
es
cmp
jg
add
fbld
dec
push
lock
and
out
xchg
mov
jg
mov
loop
arpl
loop
in
sub
add
add
repz
orl
sbb
mov
js
pop
push
sub
stos
pop
lret
mov
push
lods
jmp
loopne
lea
leave
shrl
inc
aaa
xor
xor
insb
mov
fcompl
push
in
mov
jmp
pop
fldt
insl
mov
add
outsl
sti
cmpsl
jo
mov
or
loop
imul
jae
imul
bound
and
mov
lcall
jle
insl
cmc
or
xchg
or
sti
inc
in
arpl
shll
pusha
lods
out
add
test
fwait
mov
cmpsb
ss
popa
scas
cmp
pop
jge
ds
jbe
jg
stos
fwait
ja
imul
or
jne
bound
outsl
std
mov
push
mov
lcall
inc
loope
icebp
push
adc
ret
jne
adc
mul
inc
sbbb
adc
neg
daa
in
mov
xor
push
mov
mov
adc
jae
xor
xchg
xchg
or
add
cltd
test
xchg
mov
mov
mov
cmpsl
fdivl
dec
mov
repz
dec
outsl
fs
out
arpl
dec
xchg
adc
jg
pop
push
sub
jnp
push
mov
stos
or
inc
les
xor
inc
pop
jg
sbb
or
mov
dec
dec
xchg
dec
or
dec
jo
aad
subb
sbb
lret
xor
leave
or
fwait
inc
dec
sbb
xchg
cmpsb
add
cmp
and
mov
cmp
js
xchg
in
cmp
xor
xor
adc
and
mull
enter
push
inc
mov
repz
popa
mov
adc
add
movsl
mov
push
subl
loope
loop
adc
jo
aas
mov
mov
adcl
cs
clc
inc
cld
lods
mov
pop
data16
jge
push
pop
mov
adc
mov
push
cmpsb
lahf
aas
movsl
push
cli
cmp
xchg
sarb
mov
mov
popa
jns
sub
fisubrl
dec
xor
jp
rorl
xor
or
popf
mov
mul
loopne
mov
stos
js
xchg
pop
cmp
pop
repnz
ud1
arpl
push
xchg
insl
pop
jecxz
subb
shrb
rorl
jae
pop
push
loopne
inc
add
xor
lock
push
fstp
popa
inc
pop
mov
lcall
jg
lret
mov
jns
mov
sub
fbld
mov
dec
sub
xlat
mov
notl
sub
pop
or
insb
inc
es
mov
inc
in
or
in
mov
inc
cwtl
inc
add
jb
pop
push
mov
mov
adc
cmc
je
add
rclb
mov
jbe
paddusw
push
pop
je
pop
inc
mov
mov
push
or
aas
cmp
stc
push
aam
test
add
xor
addr16
dec
pop
icebp
jl
sub
rcrl
fsubl
xchg
push
popf
sbb
and
push
mov
int3
push
xor
fwait
dec
mov
fnstenv
sub
ja
xchg
sub
push
mov
fxch
and
aad
mov
sbb
push
sbb
push
inc
aad
or
jne
inc
mov
fadds
in
jmp
mov
sbb
icebp
pop
mov
fldl
lret
or
jp
jp
repz
test
sub
xor
add
aas
pop
and
stos
je
sub
shrl
inc
xor
stc
pop
push
jb
xchg
dec
xor
mov
add
lret
push
int3
loopne
inc
and
xchg
mov
movsb
xor
je
push
cmpsl
andl
test
sub
and
sbb
pop
mov
hlt
rcl
jle
xor
call
xor
ret
fxch
test
sub
jp
jle
pop
imul
adc
jl
ret
mov
insl
sub
xor
loope
outsb
out
dec
cmc
pop
mov
adc
mov
xchg
shlb
push
inc
mov
cmp
and
pop
andl
lea
sbb
das
pop
pop
je
push
mov
imul
inc
mov
in
popa
in
popf
sub
jl
aad
es
inc
lock
and
les
jae
loopne
out
and
inc
jbe
rcrb
inc
lahf
leave
add
fists
int3
lret
ljmp
movsl
andb
sahf
add
dec
xchg
in
pop
xchg
mov
sti
mov
xchg
popf
sbb
inc
ret
lret
mov
pop
and
fidivs
add
xchg
mov
je
pusha
mov
push
jbe
xchg
movsb
jmp
mov
inc
xor
and
mov
dec
xor
cmpsl
cmp
push
inc
pop
call
clc
sub
roll
dec
mov
xor
dec
xor
sbb
add
mov
and
divl
aaa
sub
mov
mov
xor
out
ljmp
jl
out
inc
push
loopne
loope
ljmp
add
pop
mov
punpckldq
mov
add
movsb
cmc
adc
push
mov
in
out
inc
das
pop
test
and
and
lret
jmp
cwtl
pop
pop
cmp
movsb
push
push
pop
int3
cwtl
out
cmpsl
movsb
loop
testb
mov
inc
in
and
std
push
mov
pop
pop
lds
fdivs
sub
stos
or
xchg
adc
stos
pop
cs
aaa
pop
scas
sub
push
dec
fcoms
lahf
jg
push
mov
daa
or
mov
jle
cmp
arpl
aad
bound
mov
and
in
ss
xchg
js
mov
push
shr
xchg
mov
insl
jns
push
or
call
add
add
pop
cwtl
xor
jo
push
push
inc
loopne
dec
pop
mov
les
jae
in
das
pusha
fildl
leave
inc
clc
lods
int3
scas
test
das
subl
inc
mov
iret
adc
inc
ret
out
adc
push
imul
xchg
add
icebp
sbb
mov
scas
fdivs
lahf
repnz
int3
mov
loopne
jl
orl
cli
cli
out
ss
jnp
add
cmp
xchg
adc
xor
lods
test
fdivs
or
pop
in
adc
sbb
and
push
pop
jnp
jno
mov
xor
dec
adc
sahf
andl
xchg
lds
cmp
imul
dec
or
sub
loopne
sbb
pop
add
scas
mov
sbb
adc
iret
jno
rol
fwait
cmpsb
addb
clc
stc
mov
fisttps
mov
inc
inc
loope
xchg
adc
or
push
push
test
adc
jne
call
leave
cmp
jmp
or
cmp
mulb
push
call
cmc
stc
aas
push
push
xchg
lods
aas
mov
test
push
fwait
addl
movsl
pop
xor
sbb
mov
in
jo
out
in
adc
loop
or
adc
push
int3
stc
xor
arpl
data16
add
sarl
jno
jno
pop
pop
inc
push
sub
cmp
dec
dec
fabs
jae
and
fnstenv
fs
sub
inc
lea
sbb
xchg
mov
and
xlat
stos
dec
call
mov
dec
push
rcl
dec
mov
ds
push
rol
pop
enter
xor
notb
inc
jg
pop
push
mov
dec
cmp
enter
xor
mov
not
aaa
adc
shl
cmp
mov
fidivrl
movsl
stos
lret
sub
cs
leave
repnz
cli
test
xchg
out
pop
inc
arpl
xor
xlat
dec
jmp
and
mov
pop
movsl
notb
test
jg
nop
shl
ret
push
mov
ljmp
insb
sub
xchg
mov
call
xchg
or
leave
push
dec
pop
clc
add
sar
sub
mov
das
push
or
cmpsb
xchg
sub
add
into
mov
mov
mov
das
jae
inc
es
xchg
les
mov
idivl
mov
or
enter
and
xchg
mov
pushf
add
add
clc
test
adc
cmpsb
cli
lods
hlt
add
sbb
sub
sbb
xchg
cwtl
and
test
jns
bound
mov
jno
pop
rcr
push
mov
jno
lods
arpl
cmpl
movl
int
or
inc
bound
cmp
dec
lret
xchg
mov
jo
jnp
mov
add
test
xorl
mov
mov
mov
xor
repnz
test
pop
push
aaa
fs
mov
bound
cmpsw
aad
pop
push
and
notl
icebp
aas
mov
add
das
fsubs
xor
xor
ret
ss
push
jmp
pop
int
in
int3
and
je
mov
xchg
xlat
cmpsl
dec
lahf
movl
enter
je
mov
mov
push
xor
sub
push
loopne
and
mov
int
insb
add
cmp
inc
xor
mov
xchg
jle
mov
or
xchg
mov
add
jnp
pop
mov
sub
pop
and
push
movsb
ret
push
xchg
sbbl
mov
popa
xchg
inc
loope
sub
mov
pop
mov
mov
xor
les
mov
lock
mov
push
pop
push
loopne
xchg
mov
das
pop
push
adc
mov
icebp
sarl
insb
inc
inc
cld
push
mov
mov
pop
lahf
dec
addl
xchg
outsb
jns
bound
out
mov
pop
mov
dec
roll
pushf
mov
and
pop
aas
repnz
lret
lret
gs
popf
and
clc
int3
int3
cs
jno
addr16
das
sub
int3
lret
outsl
jle
popf
aam
xchg
push
lahf
adc
dec
int
cmc
or
pop
fidivs
mov
adc
loope
shr
cs
sbb
fcompl
pop
out
lods
mov
cmp
fstpt
xor
outsb
sbb
jo
lods
inc
fnsave
or
xor
mov
xchg
cli
bound
dec
adc
jl
lret
push
bound
jle
lret
fisubl
data16
adc
add
fisttps
cltd
aam
call
jge
xor
adc
ret
cwtl
data16
pop
adc
jae
xchg
ds
push
push
mov
ret
sub
movb
mov
mov
push
test
inc
pop
fwait
cltd
fcomip
or
or
div
push
or
out
jge
sti
insl
ret
stos
mov
aaa
jle
jecxz
cmp
sbb
mov
push
dec
jo
mov
bound
outsl
addr16
jno
and
jns
mov
mov
scas
and
xchg
lds
mov
cwtl
xor
call
fstpl
mov
fnstsw
xchg
outsl
push
mov
int3
adc
mov
insl
adc
out
cmpsl
aaa
or
inc
jb
cmp
or
inc
sbb
push
jnp
out
into
test
inc
fwait
xor
pop
jo
mov
jb
ds
dec
imul
test
jno
or
jb
lods
jae
lret
pop
cmc
lret
sub
dec
dec
add
hlt
std
or
push
int
cs
pop
adc
aad
mov
fcmovne
inc
or
das
cmpsb
mov
ja
in
mov
inc
xor
xlat
lods
mov
addr16
in
mov
or
xchg
mov
lds
sub
push
pop
lds
or
adc
pusha
std
cmp
aas
mov
mov
in
pop
mov
xor
hlt
leave
cmp
mov
mov
into
jo
sbb
and
xchg
inc
rcr
stos
decl
psllq
or
cmp
jle
movsl
pop
jno
fst
xchg
cld
stc
push
arpl
aad
mov
pop
in
mov
jecxz
ds
cmp
xchg
and
or
inc
sbb
js
sub
pop
push
sarb
icebp
icebp
add
mov
lret
imul
lahf
inc
mov
aas
cli
and
add
cmp
inc
aas
dec
movsl
push
xlat
stos
adc
int3
testl
push
in
outsl
pop
or
out
inc
xchg
and
loopne
lcall
add
je
hlt
cmpsb
xor
mov
int3
push
dec
das
cmp
xchg
sbb
test
mov
shrb
cmp
jg
lods
mov
popa
mov
mov
mov
aaa
pusha
js
jb
fldlg2
mov
fadds
xchg
ss
out
mov
pop
xor
popf
in
or
xor
ds
push
xchg
inc
mov
mov
push
icebp
fadd
or
fs
aad
jo
push
icebp
and
jno
testb
inc
cmp
pop
mov
iret
add
xchg
cmc
sub
or
push
fldl2e
sub
ja
or
mov
repnz
jb
je
jmp
ljmp
adc
lahf
inc
ds
and
pushf
loopne
es
pop
fnstenv
jne
mov
imul
inc
xchg
adcl
inc
cmp
repnz
jb
mov
lods
popf
out
test
negl
mov
sub
or
pop
test
ss
xor
sub
das
dec
idivb
adc
xchg
fwait
sub
xchg
cltd
subb
adc
pop
bound
loop
rorb
pop
push
inc
aaa
test
fsubp
ljmp
or
rcrl
pop
push
mov
or
ljmp
imul
lods
cli
addr16
xchg
jae
lock
std
es
lret
mov
add
sbb
dec
or
sbb
push
jle
lahf
notb
mov
dec
sub
adc
push
and
in
sbb
sbb
cmp
dec
mov
lock
push
test
sbb
cmp
inc
out
pop
mov
adc
jo
shlb
cmp
test
jno
xor
lcall
mov
ret
ret
pop
in
push
out
dec
pop
mov
push
stc
data16
mov
sbb
repz
pop
pop
insl
adc
loopne
ja
add
fcoms
push
sub
push
lds
inc
or
lahf
xlat
cwtl
rcrl
repz
aad
test
mov
ljmp
pusha
sbb
ret
inc
rcr
or
pop
insb
fdivrs
or
pusha
je
pop
or
sub
sub
inc
arpl
lods
mov
mov
mov
jp
fadd
scas
jbe
ds
fldenv
jae
dec
adc
jb
mov
dec
inc
mov
shlb
je
jge
out
cmp
enter
cld
clc
repnz
push
idivb
jo
lock
mov
loopne
cmc
push
ret
lock
sbb
mov
aas
outsb
fsts
scas
into
push
dec
fs
scas
mulb
call
leave
inc
popa
cli
mov
jmp
mov
divb
inc
rorb
mov
cli
cmp
inc
les
jnp
loope
cld
rcl
mov
je
pusha
adc
cmc
adc
jnp
cli
sub
fidivs
sbb
popa
lock
jnp
pop
dec
addb
scas
pop
push
cs
xchg
push
je
push
inc
jecxz
pusha
inc
into
loopne
aad
lahf
xchg
fsub
xor
movsl
xchg
sbb
dec
inc
mov
or
loop
clc
inc
jp
divl
std
enter
xor
or
cli
push
mov
bound
cli
adc
pop
adc
push
cmp
lcall
push
pop
iret
add
aad
ss
xchg
xor
iret
cmp
in
icebp
xor
insl
aaa
nop
insb
dec
adc
mov
and
call
scas
xchg
push
dec
xchg
imul
dec
sbb
push
pop
test
xchg
push
xor
cmp
scas
in
sbb
mov
sbbb
and
subl
mov
xor
pop
divb
pop
movsl
push
adc
pop
fistpl
les
dec
std
xlat
inc
les
repz
jge
or
and
push
jg
addr16
inc
loope
inc
sub
mov
aam
imul
or
shrb
scas
mov
xchg
jb
stos
adc
mov
sbb
pop
jle
jnp
movsl
push
inc
pop
lods
xchg
mov
xchg
inc
or
jp
sub
sbb
dec
insb
or
adc
aam
aas
ret
mov
pop
pop
lods
subl
lock
sbb
mov
fnstcw
xchg
gs
lret
roll
pop
pop
xlat
or
jecxz
mov
jecxz
loopne
int3
shr
and
and
jne
jne
fs
push
lods
pop
push
mov
and
push
xchg
cmp
xor
xchg
push
imul
repnz
push
insb
loope
cmpsb
dec
pop
inc
pop
inc
sub
pop
movsb
add
js
cwtl
inc
push
cld
es
push
sub
int3
pop
out
push
cmp
scas
add
adc
outsl
inc
cltd
sbbb
sub
inc
stos
mov
fmull
mov
scas
xchg
jecxz
sbb
stc
or
mov
jns
imull
sub
sti
push
and
push
lods
and
cmp
idivl
dec
sub
mov
push
jb
out
pop
bound
fsubs
add
adc
je
xor
sub
mov
mov
pusha
push
xchg
add
out
adc
scas
xrelease
ficompl
cwtl
pop
push
ret
mov
jge
mov
leave
lcall
icebp
movsb
pop
sbb
loop
jnp
dec
mov
pop
xor
sub
std
fimull
outsl
push
aaa
icebp
out
shlb
dec
pop
imul
loop
or
arpl
mov
mov
icebp
jmp
arpl
dec
xchg
ss
std
xor
pop
repnz
roll
xchg
iret
mov
hlt
dec
inc
outsb
pushf
faddp
and
cmpsb
cld
xor
adcl
mov
xor
arpl
mov
xchg
or
sub
cwtl
adc
testl
pop
push
pop
dec
ljmp
pop
hlt
xor
sbb
lahf
push
loope
xchg
mov
jecxz
mov
pop
roll
adc
and
mov
mov
in
cmpsb
in
mov
mov
fsts
cmpsb
cmpl
lahf
jo
xor
sub
and
push
or
xchg
call
repnz
mov
push
xor
push
pmaxub
mov
fs
push
mov
cs
inc
push
inc
push
sub
stos
mov
es
sub
inc
in
cmpsb
push
es
mov
out
cmp
rcrb
add
outsl
xor
lea
cld
cmp
jno
leave
jo
jns
push
insl
testb
inc
xchg
dec
imul
in
outsl
into
lret
inc
rorl
mov
or
mov
mov
push
loope
push
mov
std
or
out
inc
sbb
dec
add
sbb
test
lea
xchg
in
xor
pusha
test
mov
int
sbb
mov
xchg
stos
jg
in
pop
mov
jae
sbb
mov
sub
sbbl
lcall
lret
dec
jns
mov
sbb
in
add
lods
rolb
repnz
lahf
dec
cwtl
imul
jns
bound
mov
jno
test
cld
mov
aas
mov
dec
jle
stos
fs
std
in
add
xor
lods
push
and
int3
or
pop
cmp
in
addr16
clc
xchg
dec
adc
and
lea
or
cltd
inc
sub
xchg
inc
fiadds
cmp
cs
in
pop
scas
xor
sti
cmc
in
lcall
cltd
arpl
subb
jp
pop
push
sbb
mov
sub
inc
pop
jl
fs
xor
subb
xorl
xchg
iret
push
jge
and
rcll
mov
cmp
imul
jbe
pop
cwtl
mov
daa
push
fidivrs
dec
int
push
push
jno
pop
fnstsw
insb
jns
icebp
int3
xchg
cmp
adc
imul
arpl
aam
jge
cmc
mov
jnp
xor
xchg
lods
xchg
xor
xchg
and
pushf
pop
sub
push
sbb
lods
je
les
lea
push
mov
incl
push
mov
mov
jb
and
and
xchg
stos
lret
std
mov
lahf
jnp
xor
pop
js
push
fsubp
jecxz
loope
xchg
repnz
push
pop
in
lahf
mov
lret
loopne
jmp
out
jnp
pusha
adc
inc
mov
xor
into
dec
es
call
out
ja
push
rolb
ja
in
popa
and
dec
xor
sub
push
fisubs
pop
mov
cmp
and
lock
xchg
call
mov
pop
adc
int3
inc
push
jne
mov
sub
jne
cmp
int3
adc
or
cltd
ret
sbb
mov
std
cmp
xchg
lock
add
sub
cmp
imul
push
mov
xor
and
and
jle
imul
cld
push
or
movsb
sbb
add
mov
adc
mov
addr16
int
cmpsl
mov
ds
lods
mov
mov
int
mov
push
mov
cltd
int3
adc
jge
mov
mov
sbb
lretw
pop
stos
in
push
ss
xlat
out
aaa
mov
dec
xor
insb
add
sbb
lahf
xor
sbb
and
dec
xor
sbb
sub
mov
adc
notb
mov
push
icebp
sub
negb
cmpl
adc
das
jae
dec
fidivl
pop
xor
pop
and
jecxz
test
lods
mov
push
in
mov
outsl
insl
jle,pn
pop
jae
in
loope
loopne
cmp
sub
dec
inc
jbe
inc
arpl
push
je
test
xchg
cmp
sahf
sbb
and
es
loopne
out
ss
inc
lods
stos
test
clc
push
pop
test
scas
js
push
ja
sahf
cmpsl
mov
sbb
sub
repnz
xor
inc
xchg
sub
loope
and
xor
xchg
dec
mov
cwtl
rclb
es
lods
inc
div
adc
cli
jbe
je
inc
and
jo
js
stos
pop
sahf
pop
stos
femms
mov
cmp
sbb
repnz
xor
punpckhdq
xlat
and
xchg
movsb
into
sbb
in
lds
mov
dec
arpl
jno
and
cltd
dec
or
test
push
fistpl
js
jle
jne
dec
ss
into
int3
das
ljmp
inc
fldt
loopne
xor
lret
daa
inc
or
dec
xchg
roll
sub
pop
xlat
repz
cmp
and
out
mov
stos
or
inc
jnp
test
lret
xchg
fdivs
push
xchg
ror
mov
enter
xlat
out
add
stos
mov
ss
mov
mov
test
mov
popf
pop
mov
sbb
adc
aas
xchg
cmpl
cmp
mov
cmp
and
adc
pop
lcall
test
jnp
push
mov
mov
pop
stc
cmp
and
push
sub
jmp
ret
sbbb
fwait
js
mov
shlb
scas
rcl
les
xor
in
mov
sbb
ret
or
or
push
hlt
mov
adc
inc
pop
add
xor
lock
jle
cltd
cmp
xchg
scas
dec
loop
arpl
push
and
cltd
mov
aad
cmp
fildll
insb
sbb
adc
cmp
xlat
out
out
or
loope
adc
mov
call
or
push
jno
xor
mov
pushf
pop
insl
loop
jae
push
xor
je
fisubrs
mov
jecxz
adc
ret
adc
jg
iret
lcall
andnps
jmp
push
push
xlat
cmp
push
aas
adc
cmc
es
dec
add
fmull
xchg
mov
xchg
fsts
rcll
pop
push
cmp
or
loope
sbb
mov
cmp
movsl
cmp
out
fs
clc
cli
dec
iret
ja
fildl
sub
add
in
addl
popf
adcb
jno
add
xchg
fwait
xor
cmc
iret
xor
push
pop
mov
or
addl
jg
or
cwtl
andl
jae
loope
jbe
jmp
loopne
in
sub
incl
xchg
insb
incl
lcall
mul
addr16
sahf
mov
adc
mov
inc
jne
jb
sub
scas
shll
das
or
scas
pop
xchg
sbb
sub
add
jle
sbb
push
xor
jmp
push
mov
lock
push
in
pop
pop
push
out
dec
aas
jb
inc
int3
pop
and
pushf
ret
cmp
loop
js
leave
js
lahf
and
jp
addr16
sbb
dec
out
sti
mov
repz
inc
jp
call
insb
addl
xor
fisubrl
cmc
add
fldenv
pop
cli
ds
cmpl
in
lock
daa
jle
pushf
push
sub
bound
or
bound
add
shl
mov
lahf
dec
jge
nop
sub
inc
dec
mov
adc
adc
and
push
pop
xor
sub
test
mov
fldenv
or
movsb
cltd
adc
fsubrl
ret
mov
push
divl
push
loop
or
cmc
or
ljmp
pop
xor
pop
jns
inc
cli
adc
int3
out
mov
dec
insb
jae
mov
lds
mov
fnstcw
pop
ret
jns
sub
mov
mov
stc
imul
test
and
imul
les
xchg
xor
out
xchg
int
pop
mov
xchg
dec
cmp
xchg
nop
jp
pop
or
scas
jle
flds
mov
push
shl
cmp
inc
mov
aam
cwtl
xor
pop
cmc
test
stc
fdivr
jmp
pop
fistpl
add
pop
faddl
lea
mov
jo
sub
pavgw
shll
fdivp
int
mov
pop
je
enter
xor
or
in
ret
imul
xchg
jb
mov
mov
stos
shlb
aas
hlt
push
push
cmp
dec
popf
and
ljmp
mov
das
cwtl
mov
loope,pt
je,pt
xchg
lods
mov
pushf
in
mov
add
test
int3
out
sahf
push
and
mov
jge
test
je
hlt
daa
jge
fnsave
mov
add
shll
lods
adc
test
leave
dec
fnstsw
stos
popa
inc
popf
ds
ja
or
out
inc
fldcw
pop
cmp
ss
inc
fst
xchg
enter
add
cld
mov
mov
lret
mov
ds
stos
adc
jns
negb
adc
sbb
sub
pushl
xlat
addr16
dec
mov
adcb
mov
popa
mov
lret
lods
jmp
and
lock
aaa
jbe
push
je
mov
push
lds
je
and
pop
lahf
orb
stc
xor
add
daa
cmp
add
imul
pop
fisttpll
popf
lods
and
aad
sti
xor
lods
addr16
jle
in
jl
ja
and
jns
xchg
pop
mov
push
imul
lret
ret
mov
sub
shrl
cli
iret
cmp
sub
lods
mov
insl
adc
mov
pop
inc
scas
cmc
fsub
mov
int
sarl
insb
cmp
test
push
outsl
rcrb
popa
loope
popf
inc
jge
xor
sbb
popa
into
push
sarl
mov
mov
inc
out
xor
into
sbb
lcall
jmp
xchg
sbb
imul
das
mov
add
rorb
inc
sub
add
push
in
ljmp
push
xor
test
cmp
sub
stos
adc
pop
cli
pop
rcll
js
das
or
js
inc
aaa
jno
jno
popa
aad
xchg
cs
or
test
sub
mov
jb
fdivs
add
adcl
cmc
sub
sub
pop
pop
mov
andl
push
scas
jecxz
sti
and
sub
dec
adc
sub
loope,pn
mov
add
jmp
imul
mov
xchg
push
ret
sbb
lock
pop
addb
sub
scas
xor
out
sbb
mov
scas
mov
sbb
ja
inc
addb
sarl
jecxz
sub
in
ljmp
push
inc
cwtl
stos
inc
fmuls
int
movsl
sbb
nop
repnz
xor
mov
in
mov
cmp
rcrb
cmp
negl
rolb
lret
movsl
stos
xor
shl
cld
out
xchg
or
jnp
mov
inc
and
push
mov
mov
dec
cmp
xchg
gs
ret
pop
scas
xchg
pusha
inc
jno
or
xor
push
jnp
and
pop
loope
fisttpll
test
dec
lds
je
inc
xchg
arpl
movsl
fnsave
mov
mov
nop
mov
jecxz
add
push
or
lahf
xlat
sub
iret
rclb
movsl
pushf
jbe
mov
dec
cmpsb
dec
mov
pop
mov
inc
push
test
shrb
xor
pushf
fwait
ds
or
xor
shrb
in
pop
fs
in
dec
push
out
lea
dec
divl
movsb
rorl
push
das
inc
sbb
outsl
mov
xchg
dec
dec
cmp
dec
jo
pop
out
orb
xor
in
dec
sub
mov
iret
je
ffree
inc
fidivrs
iret
hlt
test
sarb
hlt
xchg
fildl
dec
test
arpl
decb
or
or
push
ja
and
inc
test
hlt
fstpt
mov
or
mov
sub
cmp
das
cltd
popa
std
xor
decb
dec
fimull
or
mov
lret
cli
popf
push
sarb
cli
and
icebp
add
pop
jle
xchg
sbb
fstpt
sub
adc
xchg
call
cli
mov
fdivrl
xlat
fldt
jp
ffreep
stos
push
stc
cmp
pop
int
sbb
ret
jecxz
cmpsb
push
xorb
popa
and
jle
roll
lods
es
cmp
xor
iret
push
push
into
out
das
leave
sbb
xor
cmp
iret
insl
push
pushf
sbb
push
dec
mov
and
fstps
fwait
pop
xlat
dec
icebp
pop
mov
adc
xor
or
lock
push
loopne
sub
mov
cwtl
lods
or
loope
insl
fnstenv
dec
inc
fadds
rcrb
cli
pop
sbb
push
xor
in
stos
and
roll
fidivs
sub
sbb
fistpl
sub
sbb
sub
bnd
ss
pop
xor
std
enter
sub
or
aaa
inc
mov
int3
jge
sub
push
testb
aas
mov
cmp
mov
fsubs
push
paddw
bndldx
loopne
push
stos
scas
mov
lea
insb
sahf
push
arpl
data16
cmp
lret
sbb
or
push
cld
enter
jae
inc
push
scas
shrl
stos
repnz
add
mov
mov
out
outsb
iret
mov
mov
jne
jle
mov
sbb
sbb
pop
xchg
xchg
adc
lret
fwait
jmp
sahf
dec
adc
mov
sub
aam
dec
push
std
mov
sub
dec
lret
repnz
pop
mov
cmp
lcall
sub
push
imull
jge
xchg
push
test
shlb
mov
movsl
adc
nop
sub
lea
sbb
mov
pop
jbe
jmp
pop
in
mov
fidivs
sbb
arpl
push
push
sub
jmp
loope
jmp
mulb
jge
cmpsl
mov
lret
jno
insb
cmpsb
cld
sbb
push
jp
xor
add
mov
jae
jge
sti
sub
popa
pushf
rcll
sub
icebp
clc
push
sub
ja
stos
test
xchg
push
lret
mov
fxch
sahf
loope
mov
out
xchg
cld
or
or
mov
mov
pusha
fs
call
test
or
cs
mov
adcb
sub
xchg
dec
push
mov
imul
jmp
int3
jbe
movsl
movsb
mov
inc
mov
mov
mov
inc
push
lds
fsubrl
or
pushf
jge
lret
mov
repz
mov
lcall
inc
call
jo
push
cmpsl
xor
cli
fs
add
aad
test
rcll
pop
xlat
mov
pushf
xchg
das
lret
iret
push
imul
cmp
sbb
in
aad
lock
lds
xchg
push
loopne
nop
mov
arpl
repz
push
jmp
ficoms
rcrl
jb
cli
mov
pop
xchg
ss
stos
ficoms
fisttps
shll
push
sahf
cmpsb
or
and
pop
jo
jle
ja
arpl
sbb
scas
xlat
mov
mov
adc
in
jmp
insb
lods
dec
les
aaa
cmpsl
mov
or
inc
inc
outsb
hlt
sbb
inc
sbb
add
jb
xor
xor
lock
into
sbb
sbb
xchg
cmp
pusha
icebp
in
mov
sti
mov
hlt
cmp
dec
rorb
mov
shll
or
dec
int3
jnp
pop
inc
les
mov
jbe
cmp
mov
and
mov
mov
mov
xchg
push
mov
shrl
lods
pusha
push
pop
ret
int
cmpsb
cmpsb
sbb
aaa
push
scas
fldl
in
inc
and
testl
dec
sub
loop
cld
ror
mov
movsb
mov
test
fildll
popf
cltd
adcl
stos
lods
and
xchg
rolb
and
repz
and
cli
mov
sbb
dec
xor
mov
jmp
push
nop
leave
fcmovnbe
aad
icebp
out
mov
enter
ja
or
fscale
iret
repz
xor
adc
mov
repz
or
sbb
mov
xor
lret
cmpsb
mov
and
fyl2xp1
mov
mov
outsb
xor
add
sub
jle
cltd
stc
cltd
jbe
mov
aam
out
les
test
mov
stos
fldenv
dec
or
jmp
mov
and
adcl
in
dec
mov
repnz
leave
fbstp
jmp
cmp
push
pop
sbb
jg
dec
jmp
and
inc
aam
xchg
jo
arpl
dec
add
adc
push
scas
std
outsb
xor
in
adc
add
fldl
movsb
fcomip
stc
jmp
sub
cwtl
faddl
push
sbb
test
and
movsl
aad
nop
loopne
fimuls
push
lods
dec
lea
push
push
sbb
push
push
mov
jb
xor
jns
rcll
jne
inc
stos
mov
sbb
sub
outsb
dec
test
mov
sub
and
leave
inc
mov
lock
lock
in
jnp
push
test
cs
std
fsubrl
leave
jmp
imul
inc
mov
test
aaa
sbb
mov
xchg
mov
pusha
pop
or
cmpsb
mov
jbe
sahf
dec
movsl
xor
jnp
gs
sbb
xchg
xchg
push
mov
xor
push
lcall
pandn
aam
inc
adc
sbb
fdivl
xor
xchg
add
jmp
inc
fdivrs
push
adc
dec
xchg
mov
pusha
add
push
add
cwtl
rclb
xchg
gs
mov
mov
sbb
push
cli
cmp
push
lods
or
test
addr16
jnp
jmp
stc
pusha
nop
jp
sbb
xchg
gs
test
repz
test
push
jnp
es
inc
pop
imul
push
mov
sbb
hlt
mov
out
mov
xchg
push
imul
sub
lret
jns
rep
loopne
jb
xor
mov
jbe
lods
xchg
pop
ss
aaa
and
les
sub
test
xor
pop
adc
xchg
cld
xchg
or
sub
mov
je
arpl
pop
imul
aaa
cwtl
or
push
sbb
cmp
jbe
mov
xchg
fcomps
pop
sbb
dec
cltd
push
cmp
mov
sarb
pop
jp
jb
jge
dec
in
jo
adc
xchg
dec
clc
xchg
mov
inc
sbb
imul
mov
sar
fcomps
lahf
sbb
mov
jle
imul
pop
mov
out
mov
xchg
lea
mov
sbb
xchg
push
popf
imul
fldenv
int3
cmp
mov
ficomps
xor
mov
xlat
dec
loopne
mov
cmc
std
xchg
repz
jecxz
mov
frstpm(287
jecxz
push
js
test
mov
add
jo
jae
adcb
add
cmc
cmpsl
shlb
jg
lret
ffree
sub
inc
dec
nop
pop
add
sub
fcompl
lds
inc
incl
xor
aas
inc
mov
xchg
cwtl
cmp
push
xchg
dec
filds
sti
mov
jnp
lret
or
fidivrs
and
or
in
cmp
add
or
das
and
daa
cwtl
stos
mov
dec
cmpsb
jnp
mov
pop
adc
cmc
fdivl
pop
add
outsb
xor
mov
sub
shll
dec
imul
popa
add
xor
jne
sti
mov
cltd
out
xchg
push
insl
and
push
fcmovnbe
or
lods
lret
popf
cld
fdivs
inc
aam
jg
xor
jne
jno
cmp
cltd
ljmp
into
xchg
sbb
adc
sub
lret
sub
pop
mov
fcoms
shrl
cmpsb
or
cmpb
xor
ds
scas
pop
and
mov
xor
mov
in
fidivl
repnz
jmp
bound
push
push
je
mov
push
xor
in
imul
inc
mov
pop
sub
or
stc
and
sub
jae
sbb
scas
xor
jmp
xchg
xor
shl
imul
pushf
jae
cwtl
in
pop
pop
or
cli
xchg
mov
cwtl
mov
std
in
cmp
fbld
out
pop
fs
mov
sbb
lahf
sbbl
loopne
ficoms
outsb
or
adc
inc
adc
mov
adc
push
or
or
sub
xor
add
inc
je
pop
addr16
jecxz
scas
sbb
bound
dec
pop
inc
xor
inc
mov
mov
pop
std
stos
addl
mov
and
addr16
fimull
sahf
adc
ds
mov
sub
sub
sbb
shlb
sahf
mov
imul
int
mov
filds
jbe
adc
cmpsl
add
imul
lock
les
enter
xchg
cmp
or
inc
mov
xor
in
dec
insb
in
into
dec
ret
push
lods
mov
pop
lea
cmpsb
sub
popf
pop
pop
loop
and
cli
ja
push
mov
fsubs
dec
push
and
or
cmp
std
dec
adc
xchg
push
iret
add
bswap
mov
sbb
mov
scas
push
mov
xchg
enter
sbb
ret
clc
jno
xchg
sbb
fiaddl
add
sub
xchg
mov
mov
out
cmp
xor
divb
mov
inc
mov
stos
push
inc
test
sub
xchg
xchg
adc
hlt
mov
fstpl
repz
cld
in
cli
fcomp
sti
mov
cli
xlat
cmp
sti
cmp
push
pop
std
adcb
sbb
stc
mov
or
lds
or
add
pushf
adc
jb
mov
pop
sbb
sbb
or
mov
cmp
ja
mov
dec
lods
dec
jo
inc
into
dec
mov
or
lahf
inc
pop
xlat
insl
mov
pop
call
stos
mov
xchg
bnd
dec
mov
cld
and
xor
pop
push
mov
xor
mov
xchg
repz
jecxz
sub
push
jl
jb
aas
es
enter
stos
enter
inc
hlt
and
lock
dec
stos
lret
or
mov
cmp
repz
mov
push
inc
push
in
popf
pop
mov
xchg
imul
cmc
jae
add
iret
inc
loop
stos
dec
jge
lret
push
rclb
sub
jbe
repz
mov
jbe
fiadds
ljmp
push
and
fmull
lcall
clc
xor
aam
out
xchg
mov
xchg
xchg
lods
outsl
cmpsl
fcmovu
xchg
das
testb
jmp
mov
fstpt
pop
mov
lea
cmp
cmp
pop
lock
aam
lret
add
das
xor
ds
mov
dec
pop
ss
mov
cmpsl
jne
mov
push
in
push
cmp
cltd
inc
js
in
adc
push
lods
mov
mov
movsb
dec
xor
cli
cmpsb
jns
stc
lock
fists
adc
dec
lret
jmp
shr
stos
bnd
dec
dec
nop
call
jle
cwtl
mov
push
rcrl
cmp
popf
xor
movsb
loop
and
repz
imul
xchg
in
mov
jne
adc
adc
stc
ljmp
mov
mov
and
xchg
add
call
sub
in
jl
mov
and
xor
sbbb
and
jno
and
mov
mov
add
lea
pop
xchg
lret
dec
and
gs
es
cwtl
lods
out
out
xor
int3
lea
aaa
popa
adc
cmp
dec
add
dec
int
dec
mov
adcl
sub
mov
inc
sub
dec
jne
mov
xchg
push
sbb
dec
fsubrs
push
jns
add
shr
add
mov
iret
cli
xor
fldcw
pop
enter
lahf
fisubs
dec
jae
sbb
mov
fsts
jno
mov
xor
imul
inc
sub
mov
sti
ss
sub
fldt
arpl
test
jge
or
dec
and
stos
lods
test
dec
inc
xor
lea
std
sti
ljmp
data16
xor
mov
cmp
inc
jns
sbb
mov
insl
jb
dec
movsb
repz
adc
orb
push
cld
mov
iret
and
sub
repz
mov
ret
xchg
xor
sub
adc
stos
sbb
pushf
or
addr16
adc
or
aaa
fdivl
ss
iret
lret
dec
inc
call
sahf
fucom
mov
mov
fistpll
sarb
cmpsl
dec
dec
cwtl
mov
adc
aam
xor
push
repnz
push
push
das
mov
or
repnz
or
sub
ret
bound
jecxz
nop
ljmp
cli
xchg
xchg
cwtl
mov
insl
cmp
mov
mov
loop
dec
in
movsl
xor
cs
push
pop
pop
pop
test
repnz
add
mov
inc
push
cwtl
int
pop
inc
and
mov
mov
in
xor
cmpsb
mov
ficoml
mov
rcrb
decb
dec
dec
inc
adc
mov
in
sub
xchg
pop
or
stos
mov
into
stos
xchg
fnstsw
or
ficompl
push
ret
test
js
shll
add
test
mov
stc
push
in
imul
loop
push
lret
stos
ja
adc
mov
sub
movzbl
out
xchg
outsl
push
bound
mov
add
push
dec
pop
push
ljmp
lahf
push
mov
test
cli
mov
movsl
jle
mov
adc
pop
cmpb
cltd
sahf
push
sahf
adc
xor
sahf
adcb
fstp
push
sbb
imul
add
test
push
or
bound
push
push
add
mov
fstpt
dec
or
lods
add
jg
sbb
and
pop
mov
jp
shrb
gs
mov
imul
jmp
lods
daa
add
pop
sub
shlb
mov
jl
pop
xor
outsl
lret
aaa
jbe
mov
xchg
adc
mov
shll
dec
and
popa
add
fcom
jo
and
add
test
loope
cmp
leave
xchg
out
in
dec
and
cmp
jno
mov
cmpsl
mov
loopne,pt
lods
mov
orl
xor
arpl
fisubs
dec
jns
mov
out
cs
cmp
call
inc
lock
push
shl
and
lret
fmul
sub
jecxz
inc
in
sbb
mov
cmp
popf
push
in
or
cmp
cli
cmp
stc
sbbl
xchg
xor
movsl
test
out
test
sbbb
cmp
mov
addr16
sbb
rcrb
bound
in
idivb
xlat
lods
jg
adc
mov
cmp
addr16
cltd
mov
sub
push
adc
jg
xor
cs
movd
outsb
inc
dec
push
fnstcw
fwait
add
pusha
popa
jecxz
add
mov
das
pop
inc
lea
jp
dec
leave
mov
repz
leave
dec
push
mov
xor
loop
xchg
pop
insb
pop
bound
xor
jns
mov
icebp
jo
shl
mov
xchg
int
push
xchg
lods
mov
int
push
test
mov
xor
roll
aad
pop
xor
enter
mov
cld
and
sti
into
xor
mov
imul
imul
dec
shll
xchg
pop
rclb
lods
mov
xchg
mov
xchg
ljmp
mov
stos
push
rol
and
cmp
fucom
mov
mov
loopne
mov
rol
mov
xchg
jae
mov
and
xchg
xchg
pop
cltd
insl
jno
xor
and
adc
stos
jne
pop
jp
sub
pop
inc
add
fildl
cmp
sarb
iret
fs
mov
repnz
cmpsb
jp
mov
in
and
xchg
lods
lcall
mov
bound
sbb
inc
iret
sub
and
push
xor
jecxz
fucomip
lcall
sub
mov
cmp
pop
mov
inc
fldt
arpl
cmp
lds
xchg
xchg
sub
cmp
pop
jge
mov
gs
cmpsb
sub
clc
pop
jl
mov
add
in
cs
rolb
ljmp
sbb
push
cli
cmp
outsb
test
jl
inc
shr
jp
xchg
in
mov
dec
out
cmp
sti
sbb
sbb
nop
cs
xor
and
in
dec
in
add
in
movsl
popa
add
cmc
or
fiadds
or
xor
lret
xor
scas
and
sbb
dec
jae
loope
mov
push
cmp
out
inc
popf
cmp
pop
in
sti
or
push
es
shll
xchg
nop
xchg
in
and
loope
lret
outsl
cltd
rorl
and
inc
test
cmp
insb
scas
ret
mov
pop
lcall
push
and
in
repz
lret
add
iret
or
mov
xchg
push
or
lods
xor
mov
pop
and
incb
or
sbb
call
dec
in
ds
jb
mov
cmp
pop
cmp
push
stos
mov
sbbl
adc
push
xchg
jae
das
xchg
xor
test
and
outsl
mov
lahf
jg
cmpsl
inc
dec
gs
sbb
scas
mov
pop
pop
or
loop
mov
adc
and
testb
sub
decl
insb
and
mov
jne
pusha
and
pop
out
hlt
and
dec
scas
into
ffree
out
jbe
cmp
repnz
adc
adc
out
nop
data16
sbb
mov
lret
dec
add
cld
pop
scas
sarl
push
das
rorl
out
jae
mov
mov
lret
push
pushf
popf
cmpsl
or
popa
push
decl
imul
lods
shlb
mulb
sbb
jo
mov
push
ss
push
sub
jl
push
add
xchg
lcall
jnp
lahf
sbb
repz
jno
mov
out
mov
cmp
sbb
lcall
test
sahf
ja
xchg
mov
cwtl
push
cmpsl
iret
xchg
or
outsb
pushf
ds
ja
fadds
xchg
dec
jns
aas
int
dec
and
aaa
cmp
jge
lahf
sti
dec
mov
and
imul
and
lods
xor
mov
xor
push
lcall
test
xchg
adcb
adc
xor
jle
lock
int3
xorl
cld
xor
addl
fdivs
ja
imul
fs
sahf
jp
lock
mov
bound
or
jg
pop
out
mov
rol
test
inc
dec
fs
pop
dec
push
leave
outsl
add
pop
mov
aad
mov
aam
push
test
dec
cs
pop
add
push
pop
xchg
ds
loop
sti
pop
jp
push
jo
push
andl
sti
mov
out
repnz
mov
mov
cwtl
adc
push
adc
jns
out
movsb
xor
xor
push
add
sbb
xor
push
lods
xor
mov
jle
mov
lahf
stos
outsb
cmp
dec
gs
repnz
cmp
jns
int3
rolb
daa
mov
sbb
sti
pop
push
mov
fstpt
movl
insb
fisttpll
shll
add
mov
mov
mov
mov
mov
mov
push
pop
inc
fwait
pushl
inc
jp
clc
cli
or
inc
outsl
mov
xchg
mov
pop
add
xor
mov
lods
pop
fnstcw
add
cmp
aam
add
fstl
jbe
add
dec
das
aaa
iret
fs
xchg
testl
scas
rcl
add
xor
cltd
or
mov
scas
pop
enter
sbb
mov
popf
int
and
pop
jmp
int3
cmp
ljmp
sbb
lds
enter
mov
push
aas
fdivs
mov
das
push
notb
sbb
ljmp
out
inc
in
pop
or
inc
cmp
popa
or
add
dec
icebp
dec
xchg
lret
pop
ja
push
mov
je
test
repz
inc
mov
fcompl
pop
ja
scas
adc
sar
std
or
lret
jp
mov
add
xlat
add
adc
adc
dec
pop
mov
dec
adc
mov
xchg
arpl
or
rcl
jne
out
cli
ss
mov
mov
ffree
in
imul
pop
xor
pop
stos
arpl
jg
jmp
outsb
push
cmp
sub
js
decb
xchg
fpatan
lahf
cwtl
aas
in
lret
push
int
pusha
pop
out
xchg
clc
js
ret
jns
stc
mov
outsb
enter
loopne
xor
lret
mov
add
test
sbb
les
mov
add
mov
loopne
imul
sbb
sub
sbb
mov
ret
pop
cld
cmp
bound
notl
imul
fbld
mov
and
xlat
mov
jbe
fnstsw
jmp
shrl
xchg
shld
in
xor
scas
pop
mov
xchg
xchg
lret
push
add
and
mov
push
orl
push
mov
popf
and
rep
push
cmp
lds
shrl
mov
scas
cmp
inc
jns
mov
xorl
nop
sbb
ret
stos
test
cmp
cmp
or
loope
sbb
repz
fwait
sahf
cwtl
sub
adc
in
mov
mov
js
nop
movsb
mov
pop
mov
push
mov
enter
call
xor
xlat
orl
mov
ds
dec
cmp
mov
adc
popf
and
rcl
fsubl
rsm
es
aad
add
pop
lods
add
pop
inc
bound
mov
and
push
enter
or
into
mov
imul
sahf
add
pusha
lahf
in
push
arpl
or
dec
jb
movsb
sub
int
mov
negl
xchg
or
adc
test
pop
add
les
push
lods
popf
push
cmc
lahf
mov
loope
xchg
mov
mov
dec
sahf
int
iret
sbb
or
xchg
mov
div
adc
rcr
xchg
adc
nop
fldcw
das
cmp
pop
roll
movsb
mov
and
scas
scas
gs
outsl
mov
in
ljmp
in
dec
insb
iret
fidivl
dec
xor
jle
mov
jbe
xor
lods
das
aaa
popf
enter
add
mov
mov
nop
hlt
fwait
and
fdivrl
pop
sub
and
mov
aam
iret
dec
add
push
mov
ficoms
push
sbb
int
xlat
mov
push
xchg
ja
xchg
xchg
mov
dec
outsl
adc
push
dec
adc
icebp
lods
test
es
sub
push
inc
xor
adc
pop
sarl
push
dec
or
into
lock
pop
dec
mov
data16
test
pop
jmp
dec
ds
jmp
hlt
jg
adc
mov
jg
or
repz
mov
cmpsl
mov
pop
and
in
cs
fldenv
call
sbb
lods
or
popa
icebp
and
mov
pop
repz
push
in
mov
addr16
mov
repnz
dec
outsb
mov
lock
flds
cmp
mov
dec
push
lcall
test
jnp
into
inc
lock
lcall
lahf
cmc
cmp
cld
outsl
sbb
ffree
jg
sub
jo
mov
shrb
stos
ret
fdivl
out
outsb
jl
out
mov
jae
fcmove
rcrl
sub
imul
pop
rcrb
fwait
out
dec
dec
mov
push
fimuls
pushf
ljmp
pop
jmp
inc
xor
mov
insb
mov
test
int
xor
jmp
jp
js
mov
pop
subl
mov
gs
shrl
sub
cwtl
mov
jo
pop
cmpsb
es
push
iret
mov
std
aas
loopne
dec
int3
push
xlat
pop
insb
sbb
push
rorb
cmp
lahf
dec
cmpsl
or
lds
adc
xchg
and
daa
sbb
fistpl
imul
mov
repnz
lret
cmc
loopne
and
das
sti
push
adc
and
outsb
loopne
popf
push
in
scas
push
mov
in
dec
adc
cmpsl
dec
in
and
mov
js
in
mov
mov
aad
fiaddl
sub
mov
jle
pop
sbb
mov
mov
inc
xor
and
mov
data16
push
je
sbb
pop
cltd
fwait
sbb
fs
pushf
js
xchg
ss
test
popw
xor
pop
in
xor
gs
or
out
xchg
pushf
xadd
xchg
shrb
add
dec
test
jg
adc
std
movsl
fistpll
ret
das
fisubl
push
xchg
xchg
fs
xor
pop
inc
stos
ja
xchg
inc
flds
xlat
sbb
mov
lods
mov
adc
and
dec
xor
cmp
psubusb
movaps
pop
pop
fiadds
pushf
arpl
mov
je
popf
cmp
loope
divl
lret
and
negl
call
shl
sbb
ja
sub
xor
in
jbe
xchg
mov
rorb
mov
test
stos
mov
cld
in
inc
iret
or
hlt
xor
or
sbb
push
pusha
rcrb
pop
xor
sti
mov
xlat
jne
adc
inc
adc
push
aas
sarl
push
mov
mov
pusha
push
push
push
addl
xchg
jne
into
push
sub
mov
int
xor
jno
cmpsl
sahf
xor
out
jo
pop
or
xchg
pusha
negb
mov
dec
ja
movsl
mov
mov
push
sbb
cs
hlt
inc
sbb
or
dec
outsl
adc
sbb
jge
fwait
xchg
fidivrs
adc
out
dec
mov
push
push
jae
and
lret
push
mov
mov
gs
fmull
xor
popl
scas
jmp
sub
and
xchg
mov
xchg
or
push
out
jge
or
sbb
pop
fnstcw
lock
sti
cmp
aam
cmp
mov
mov
je
mov
xor
stc
xor
stos
mov
and
or
je
ss
mov
iret
out
mov
test
and
stc
lcall
cmp
js
and
and
das
scas
adc
sbb
jbe
es
inc
cmp
xchg
aam
cltd
insl
out
pusha
mov
and
movsl
mov
mov
xor
sbb
push
pop
les
jg
or
loop
fisttps
xchg
pop
out
jge
push
imul
lahf
inc
nop
inc
add
push
iret
jp
movsb
lcall
xchg
ficoms
pop
push
push
or
add
jne
mov
mov
pop
add
jbe
pop
mov
int
jbe,pn
popf
mov
inc
or
imul
push
mov
imul
rol
push
and
or
cld
or
xor
pop
mov
cmp
or
and
loop
mov
pop
sub
xor
test
or
and
lods
addr16
jns
aas
aad
pop
fs
mov
icebp
dec
pop
int
push
mov
or
mov
out
sbb
or
jno
test
iret
mov
jge
or
ret
dec
push
daa
lcall
cwtl
add
or
dec
cmc
sbb
dec
ror
xor
stos
fnstenv
insb
jmp
push
fldl
mov
fcoms
sub
lahf
inc
add
cmp
cmp
and
inc
push
mov
mov
mov
mov
lods
call
inc
add
lock
cs
pop
inc
pop
mov
cmp
xor
loop
or
push
sbb
testb
xor
ja
popf
jp
loop
jno
pop
jne
aad
push
or
inc
mov
cwtl
cltd
lods
jge
ljmp
lcall
repz
sub
dec
add
mov
imul
push
mov
xchg
xchg
and
clc
add
mov
popa
push
pushf
int3
xchg
imul
psraw
xorps
sbb
jno
jecxz
sbb
sbbb
out
in
stos
daa
ljmp
mov
stos
pop
jl
push
stos
pusha
pop
add
insb
sbbl
add
inc
nop
hlt
shll
xchg
aam
mov
jbe
movsb
out
xor
pop
jl
out
mov
push
ret
stos
das
sub
loope
int3
jnp
gs
mov
sub
jne
icebp
insl
push
lds
adc
and
mov
cld
inc
jmp
or
push
mov
in
jle
pop
push
cmp
jns
sub
pushf
subb
sub
mov
push
xor
arpl
pop
pop
aam
push
cli
aam
cmp
mov
fsts
mov
xchg
subl
out
or
mov
loopne
sub
stc
gs
loopne
lret
sti
test
int3
mov
rol
or
pmaddwd
mov
pop
and
lahf
ret
lods
mov
lods
mov
sbb
push
fstps
addl
adc
sub
xchg
sub
cltd
shll
stc
pop
icebp
mov
repz
jle
xlat
xlat
push
cmp
in
cltd
in
mov
ja
rolb
sahf
aad
ret
nop
pop
cmp
add
mov
cmp
push
daa
cld
add
fstps
sbb
cmpsl
fbstp
or
jb
rcr
xor
jo
pop
inc
xchg
out
lods
sub
decl
adc
fwait
jo
es
sub
test
fstps
xchg
ljmp
stos
call
mov
sub
shl
fbstp
popa
ficoms
jb
sub
jne
cli
pop
sbb
or
and
repnz
das
mov
dec
xor
pop
jno
cmp
dec
stos
test
daa
mov
not
ja
outsl
dec
lahf
cli
adc
dec
jg
pop
idivb
cltd
push
mov
xchg
jl
scas
push
dec
insb
mov
sbb
and
mov
and
aas
sbb
into
inc
jnp
repz
clc
mov
push
imul
fstpl
rcll
loopne
pop
xchg
or
out
loope
loope
pop
or
loopne
ds
sbb
adc
mov
stc
mov
cmp
loopne
adc
pop
mov
push
rcll
aam
pop
jecxz
test
cltd
sbb
cmp
stos
out
fistl
addr16
adc
mov
icebp
pop
sbb
xor
movsl
scas
dec
lahf
mov
sbb
cmpsl
sbb
push
push
lods
inc
repz
test
mov
pop
aaa
stos
popf
test
inc
xchg
mov
fstps
lds
popf
pop
xor
sub
jge
cmpsl
out
scas
fadds
dec
sbb
push
sahf
out
fistl
loope
pop
mov
cmp
stos
sbbl
add
addr16
mov
xor
andb
mov
leave
xor
sub
mov
aad
out
cltd
insl
test
scas
mov
mov
xorl
mov
sqrtps
dec
pop
out
pop
cli
mov
jbe
jle
dec
test
xchg
cmpsb
cmp
pop
lods
jbe
inc
test
jae
and
lahf
dec
jecxz
mov
aad
jae
sub
cmp
push
xchg
sbb
inc
lods
add
out
mov
sbb
ja
cmc
lret
cmp
int3
or
jmp
mov
dec
adc
push
leave
adc
xchg
mov
movntq
into
mov
adc
cli
test
jg
pop
push
pop
cmp
adc
cltd
sbb
add
cli
dec
pop
ret
das
mov
sbb
pop
xor
int3
cmp
fdivr
bound
stos
pop
enter
jo
dec
jns
jae
cmp
inc
mov
icebp
adc
js
xchg
xor
pop
xor
lret
push
popf
push
or
push
jns
sbb
es
adcb
movsl
divb
lods
xor
xchg
scas
and
pop
add
cld
mov
lea
jecxz
lcall
rcll
adc
mov
jmp
pushf
lods
adc
outsl
out
insl
cwtl
jmp
das
dec
aaa
ljmp
cmp
dec
and
and
movsl
push
and
icebp
xor
mov
out
out
bound
shr
sub
mov
movsl
dec
movsb
xchg
push
into
mov
int3
push
les
in
lock
adc
cli
stos
sbb
lock
xchg
scas
inc
pop
and
xchg
jl
cmp
leave
pop
inc
mov
insb
jbe
push
fs
aad
stos
xchg
sbbb
lods
iret
pop
mov
ds
sub
push
and
repnz
or
nop
sub
sbb
rcrl
shlb
mov
filds
add
dec
mov
pop
push
xchg
lcall
fcmovnu
push
test
or
and
add
inc
cmp
aam
leave
scas
jmp
ret
dec
push
cld
and
xlat
ret
iret
add
mov
push
jb
jle
or
lahf
aam
cmpsb
adc
pushl
add
je
testl
adc
inc
aaa
sub
test
fmul
cmp
incl
test
push
inc
xlat
adc
jns
mov
aam
push
mov
jl
loopne
jne
xchg
imulb
inc
fs
cld
inc
push
mov
lret
xchg
fildll
jge
xchg
fcmovnu
je
outsb
adc
adc
mov
mov
test
cmp
pop
int
shll
and
fwait
dec
and
pop
std
inc
movl
js
sbb
outsl
or
and
cmc
fwait
mov
jle
test
pop
ss
psllq
pushf
aad
jg
shlb
xchg
test
jge
in
pop
sbbl
fstpt
std
lahf
mov
test
pop
cmpsb
repnz
pop
add
ficoml
pop
lods
add
out
inc
and
dec
stc
sbbb
popf
es
cmpsl
cmp
test
add
sbb
movsl
inc
shlb
stos
movsl
jb
je
divl
cmpsb
loope
arpl
add
cs
mov
push
insb
loop
lods
add
sub
scas
jecxz
jae
mov
sub
subb
lahf
call
cs
and
jle
lahf
icebp
pop
push
cld
dec
lret
rorl
negb
sub
jo
lahf
xor
popf
push
out
test
jle
jne
data16
and
loop
in
mov
rcr
xor
mov
in
dec
fsub
jno
xor
dec
shl
xorl
mov
rorb
jns
inc
sbb
gs
inc
es
inc
mov
ss
sbb
icebp
ljmp
mov
jmp
sbb
mov
dec
dec
rcll
repz
cld
inc
pop
arpl
aad
mov
adc
pop
mov
test
jbe
imul
cs
xor
mov
sub
cmp
mov
std
and
adc
fdivrp
scas
xchg
mov
imul
test
jns
addr16
lock
test
jns
cmp
shrl
cmp
or
shlb
push
and
daa
cmp
push
mov
inc
in
mov
xchg
mov
mov
sub
addr16
jns
mov
push
aad
pop
adc
out
loopne
repz
and
int
shll
pop
ss
dec
inc
sub
adc
cltd
sub
or
das
jl
imul
popl
ss
cmp
cmp
inc
mov
cs
mov
into
sbb
push
test
sub
cmpsl
adc
add
sahf
jl
lret
fiadds
or
jne
adc
cmp
sbb
fs
ljmp
push
mov
dec
sub
scas
and
pop
dec
lret
pop
bound
repz
dec
stc
adcl
lret
xlat
movsl
adc
ret
dec
mov
dec
insb
mov
dec
stc
xchg
fadds
or
pop
stc
mov
fidivs
cmp
testb
xchg
jns
mov
pop
add
sbb
out
add
adc
out
arpl
push
scas
mov
xlat
rol
jp
shl
and
push
arpl
cmp
cwtl
inc
adc
jl
cwtl
les
outsl
mov
in
sub
loop
test
ss
popa
movsb
into
xlat
mov
xor
cmpsl
push
pop
xchg
mov
inc
push
sbb
jo
mulb
punpckhbw
rcr
add
or
cltd
pop
test
lea
in
cmp
xlat
std
gs
gs
push
mov
push
ret
cli
jle
ret
xchg
adc
sbb
adc
dec
cs
addb
aaa
xor
add
adc
orb
lods
add
pop
pop
mov
lret
cmp
loop
dec
insb
sub
ljmp
and
adc
cmc
pushf
jno
or
and
insl
mov
jb
std
dec
aad
jns
push
mov
shll
call
mov
adc
mull
leave
aas
inc
adc
add
movsl
adcl
ret
ljmp
mov
or
lods
and
call
iret
jmp
movsb
mov
pmullw
cmc
lcall
and
add
aaa
das
pop
int
inc
test
std
jecxz
pushf
es
or
test
mov
adc
dec
loopne,pt
push
arpl
mov
aas
push
xchg
bound
shrb
dec
add
cli
fdivl
pop
xor
out
mov
pop
xchg
lock
es
fdivr
ret
mov
mov
cld
sub
out
scas
in
mov
lods
or
outsl
jmp
std
sti
mov
cmpsl
pop
jbe
mov
shlb
xchg
sub
inc
ljmp
das
mov
pop
push
cmpsb
mov
sub
lods
pop
sbb
push
ss
or
adc
push
sub
lock
std
adcl
bound
inc
in
iret
pop
bound
mov
ss
pop
les
and
sbbb
adc
gs
sbb
push
aam
xor
cmp
sarl
and
repz
test
cltd
pop
dec
push
push
fldcw
sbb
xlat
mov
push
inc
mov
mov
popa
sub
sbb
push
mov
mov
adc
dec
pop
or
fucomp
shll
xrelease
ret
das
pop
stc
pop
xor
sub
adc
and
scas
pop
xor
sub
sub
jb
dec
sbb
insl
ljmp
add
aam
jge
in
es
and
dec
mov
daa
mov
imul
lahf
and
pop
mov
jl
repz
xor
test
dec
loop
dec
sahf
les
lret
into
iret
xchg
cli
jae
xchg
lret
inc
imul
inc
cmp
popf
xchg
mov
cmc
mov
add
inc
sub
push
test
dec
inc
jo
clc
test
lock
inc
pop
mov
lcall
icebp
inc
dec
mov
mov
mov
pop
call
int
mov
es
bound
xor
jle
rcrb
hlt
cli
in
sbb
pop
sub
insl
js
pop
and
add
je
movsl
sbb
js
sbb
stos
adc
add
stc
arpl
test
iret
bnd
mov
pushf
push
sahf
lahf
jmp
rolb
dec
rol
xlat
fwait
je
xor
ja,pn
sub
inc
daa
les
loop
jmp
lahf
xor
aam
popl
cmpl
ds
mov
adc
cmp
adc
and
mov
or
mov
mov
loopne
jae
cli
sbb
or
imul
lods
data16
mov
pop
push
fdivl
xor
dec
adc
test
fbstp
and
and
jns
inc
fcoms
dec
mov
pusha
cmp
adc
fdivrs
movsb
dec
or
jecxz
ffreep
mov
scas
inc
push
outsl
subb
or
jp
cwtl
add
aam
xchg
hlt
pop
out
pop
jle
xor
pop
cltd
fisttpl
cmp
in
mov
aad
inc
int3
sahf
mov
pop
arpl
pusha
mov
adc
sbbl
xchg
dec
lds
movsb
cmp
mov
adc
and
fsub
aam
jne
dec
dec
mov
and
mov
in
jmp
mov
cmp
fcmovnbe
inc
pop
mov
xor
inc
sub
sbb
fwait
pop
nop
pop
or
or
or
ret
mov
push
fidivrs
sbb
fwait
dec
jp
jbe
and
and
lods
or
pop
movsl
stos
push
outsl
pusha
dec
dec
cmp
dec
stos
das
or
pop
lahf
ljmp
mov
test
movsb
sbb
xchg
push
xchg
and
test
js
push
orb
cmp
loope
and
xchg
dec
lods
les
or
dec
push
sub
mov
push
inc
jbe
repnz
cmc
mov
sbb
add
das
sbb
mov
adc
inc
adc
jns
inc
ja
enter
movsb
ds
push
push
scas
jbe
pop
movsl
fwait
xchg
jg
lock
xor
pop
js
outsb
flds
dec
lods
cmpsb
std
insl
movsb
cmp
push
jl
rcrl
ja
cmc
mov
scas
pop
cmc
xchg
cmp
lret
mov
push
xlat
fnstsw
rolb
stos
sbb
ljmp
shll
inc
xchg
push
nop
test
jno
push
js
lcall
stc
and
sbb
cmp
insl
pop
cwtl
sub
jecxz
pop
cmp
lock
mov
movsl
out
mov
icebp
jns
xor
push
imul
pop
aad
pop
sbb
aaa
push
fdivs
adc
aad
cmp
dec
jns
stc
test
push
mov
decl
inc
adc
sbb
frstor
imul
jno
or
insl
add
int3
out
jecxz
push
pop
mov
cmp
int3
aam
add
lret
outsl
fimuls
pushf
pop
and
gs
shll
add
loope
cmp
jae
sub
addr16
mov
js
add
xor
lahf
data16
arpl
fistl
cltd
mov
add
hlt
adc
in
xchg
add
xchg
jae
dec
into
pop
loope
jbe
push
cmp
cmp
adc
arpl
xchg
pop
inc
cmp
adc
mov
movsb
adc
jecxz
in
call
jp
cli
popa
or
out
sbb
mov
mov
mov
xor
arpl
jnp
popa
mov
sub
outsb
into
push
inc
imul
loopne
dec
sbb
or
lock
inc
xlat
jl
mulb
inc
decl
push
jb
fidivl
out
mov
cmp
pusha
scas
jnp
and
ror
nop
insl
pop
push
sbb
push
bound
lahf
sub
jns
cmpsl
pop
pop
gs
loop
dec
push
test
mov
fstl
rcrb
stc
cmpb
adcl
gs
and
fisubrs
movsl
mov
and
ja
lds
sbb
in
cltd
mov
test
pop
dec
adc
add
mov
ficoms
pusha
jg
test
mov
sub
push
xchg
xchg
lret
mov
repnz
das
test
and
fisubl
jne,pt
in
sub
insb
icebp
mov
mov
scas
push
lock
xor
lea
mov
add
push
sbb
mov
cld
test
aad
test
mov
add
sbb
xor
mov
stc
pushf
addr16
or
dec
sub
mov
outsb
sbb
push
adc
outsl
fnstenv
jg
adc
cli
ss
pop
leave
int3
sub
xor
cmpsb
add
test
jns
cmc
add
pop
in
jbe
push
ror
ljmp
stc
sbb
sub
clc
subl
inc
icebp
pushf
mov
iret
mov
mov
mov
push
or
push
lea
out
int3
ss
stc
addl
mov
pop
loop
aas
leave
test
pop
xor
xor
mov
fldt
xchg
rcrb
mov
push
shlb
and
in
mov
jg
movsl
out
negl
mov
push
fisubrs
test
add
pop
popa
push
add
jle
and
call
test
dec
cmp
popa
push
and
push
jmp
jno
pop
lret
adc
into
loop
xor
dec
inc
jbe
or
mov
push
in
inc
in
cmpsb
lret
imul
jl
and
pop
xchg
adc
inc
dec
hlt
ljmp
test
or
mov
lods
push
imul
iret
dec
jmp
jbe
dec
adc
mov
add
push
cmp
add
xchg
sub
scas
sub
mov
js
sbb
jmp
or
jmp
mov
ljmp
cwtl
pop
test
fdiv
jnp
std
inc
and
int3
cmp
and
test
fildll
stos
stc
ror
pop
cmp
mov
inc
xor
cmp
notl
pop
or
mov
out
push
repnz
lcall
lds
outsl
jp
js
and
adc
movl
test
dec
jle
inc
adc
sbb
clc
mov
mov
lock
jae
xlat
mov
add
xor
insb
into
sub
leave
cmpb
pop
insl
sub
xchg
mov
inc
orl
mov
and
popa
adc
in
in
sub
xor
sbb
iret
jg
arpl
aad
dec
ss
xor
mov
add
nop
imul
fnstsw
cwtl
call
add
sub
je
fbld
repnz
lea
sarb
add
cmp
pop
out
in
dec
sub
scas
fs
bound
lahf
clc
test
popa
frstor
add
repnz
push
jmp
mov
sub
shll
xorl
xchg
icebp
movsb
push
rorl
test
and
in
into
les
jae
call
mov
mov
daa
and
jne
inc
subl
mov
cmpsl
and
cltd
mov
repnz
jno
shlb
mov
and
ja
jg
imul
lods
enter
stos
hlt
fiaddl
lock
or
cmp
aas
shll
or
les
std
orb
add
add
mov
inc
lods
gs
sub
lods
jge
push
or
xorb
notb
jmp
lcall
mov
clc
jns
cmp
xor
iret
fs
push
pop
arpl
in
jo
cmc
sbb
ds
or
arpl
rolb
pop
outsb
cmp
inc
nop
cli
xor
lods
xchg
icebp
nop
repz
sahf
data16
in
adcl
jns
mov
in
rorb
mov
cmp
mov
jnp
sub
xor
jnp
push
in
test
ljmp
pop
lcall
or
es
add
btc
fstl
lsl
test
and
pop
daa
pop
daa
mov
xor
nop
fwait
stc
addr16
xor
push
mov
adc
stos
pop
cmp
loope
neg
dec
cmpsb
inc
mov
cmp
push
loopne
shlb
cmp
imul
jp
pop
aas
and
push
cli
xlat
fucompp
xchg
pxor
fstl
dec
jb
nop
mov
ret
ja
movsl
adc
add
xchg
dec
daa
xor
and
data16
mov
out
cltd
xor
sub
cltd
mov
jo
idiv
cmpb
lcall
dec
push
xchg
adc
inc
mov
gs
xor
iret
pop
inc
movsb
jmp
ja
xchg
fldcw
pushf
xchg
sbb
xor
aam
add
mov
jmp
xor
daa
lods
jge
or
stos
and
dec
inc
aaa
mov
pop
push
and
jns
dec
test
mov
idivb
cmpsb
push
add
xchg
lcall
jecxz
adcl
mov
aas
xor
xor
sbb
cmp
daa
sarl
mov
orl
data16
cmp
mov
cwtl
mov
adc
ja
scas
add
and
push
adc
add
sub
push
or
jo
fs
stos
jmp
sbb
cmp
sbb
ror
pop
inc
nop
inc
ljmp
cmpsb
cs
push
or
enter
sub
jecxz
sub
xchg
xchg
adc
call
cltd
iret
inc
jne
mov
shl
mov
je
mov
loope
shlb
xor
mov
aam
and
dec
shlb
lret
sbb
mov
rorl
pop
add
in
inc
popf
leave
into
aad
mov
stc
and
push
or
mov
push
cmp
jb
mov
loopne
pop
js
xor
pop
sbb
addr16
pop
push
dec
push
sti
dec
sub
subb
cmp
shll
test
insb
jg
iret
in
xchg
addr16
xchg
or
fwait
ret
scas
nop
sbb
dec
mov
push
insb
iret
sbb
lcall
out
or
mov
into
mov
fnstcw
add
sahf
cli
xor
dec
dec
mov
int
mov
xchg
ja
add
mov
repnz
rclb
mov
cwtl
hlt
mov
test
sub
sub
push
inc
stc
aas
inc
sbb
bound
push
adc
ret
out
mov
ja,pt
pop
jmp
loop
arpl
fucom
sbb
mov
push
xor
and
jecxz
imul
aad
cmp
fwait
outsb
je
jnp
bound
in
std
mov
cs
dec
add
mov
xchg
daa
mov
add
jmp
dec
sbb
pop
jl
push
jbe
scas
cmp
push
dec
in
pop
fdivl
cmp
cltd
adc
xchg
outsb
shll
dec
pusha
jb
sbb
lahf
push
mov
pop
jne
add
shlb
in
xlat
inc
mov
pop
outsb
addr16
cmp
jp
rcl
mov
stos
push
cmp
leave
mov
in
in
jb
push
sbb
out
and
push
shlb
int
in
push
pop
dec
cli
pop
fistpl
and
outsl
insl
call
mov
ret
pop
cmc
xchg
pop
and
xchg
lods
arpl
cltd
cmpb
popf
push
fdivl
pop
adc
xchg
lea
sub
push
or
in
into
mov
lcall
mov
mov
xchg
repz
push
repnz
movsb
xor
pop
aam
mov
and
or
adc
dec
adc
fcomp
popf
sbb
stos
mov
jecxz
jp
jle
cmp
push
and
imul
enter
insl
xorb
dec
sub
js
fwait
dec
xor
jo
aam
mov
cmpl
jg
call
shlb
pop
mov
call
out
mov
jbe
mov
cmc
mov
mov
mov
int3
cltd
dec
xorb
lock
xacquire
sub
cmpsb
fsubrs
js
xchg
pushf
lds
loop
fwait
adc
div
jae
pusha
sti
enter
inc
fwait
lea
mov
mov
mull
pop
outsb
popa
adc
test
lods
mov
push
out
or
flds
mov
hlt
fildll
pop
dec
call
xchg
scas
push
nop
push
stos
mov
pop
xchg
push
sysret
jl
dec
outsl
rorb
test
nop
fs
xchg
fs
add
inc
mov
popf
repnz
in
negl
sbbb
xchg
push
xor
lcall
xchg
ret
mov
mov
pop
pop
mov
insl
and
adc
xor
pop
cwtl
dec
cmp
fisubs
mov
add
add
insl
pop
cmp
adc
lret
mov
dec
inc
orl
sbb
xor
mov
jl
in
sub
sbb
fcmovbe
movsb
mov
mov
jg
hlt
add
or
hlt
jle
das
add
pop
and
mov
pop
in
in
push
lahf
sub
dec
xlat
inc
cmpsl
fbstp
test
or
sbb
sbb
inc
lret
xor
je
xor
outsl
dec
insb
pop
in
or
fisubs
jns
iret
xchg
movsl
or
sahf
lds
cmp
jecxz
clc
movsl
mov
pop
adc
aad
xchg
lods
cmp
push
jo
cmp
dec
cmp
rolb
lret
out
incb
cmp
jo
out
hlt
xchg
dec
ret
scas
mov
adc
addr16
leave
xchg
cmp
xchg
les
jg
or
push
push
test
and
xor
popf
pop
dec
ljmp
sub
fwait
mov
cld
fs
inc
inc
pop
sahf
mov
mov
dec
jnp
push
out
mov
imul
cmp
mov
imul
pop
inc
stos
mov
dec
ja
shl
pop
lret
jl
adc
mov
jns
insb
push
or
cltd
mov
xchg
pop
scas
in
cmp
cmp
cmp
mov
xchg
and
cmp
mov
outsl
xchg
loope
mov
or
test
and
or
mov
cs
xchg
addl
stos
mov
fs
in
mov
xchg
mov
push
fwait
jbe
sub
dec
stc
dec
test
repnz
je
adc
pusha
or
sbb
je
and
cmp
push
add
mov
xchg
fldl
ljmp
aad
push
dec
insl
loop
push
jmp
push
cltd
xor
jb
cmpsb
pop
or
test
mov
xchg
xchg
mov
adc
lock
dec
mov
aaa
lcall
ds
mov
popa
sahf
cmc
sub
sbb
mov
idivl
add
test
jo
dec
cltd
pop
js
iret
mov
ret
push
adc
cmp
je
cmc
aas
mov
jecxz
roll
or
in
stos
daa
dec
leave
mov
mov
movsb
push
xor
jmp
jecxz
xchg
scas
xchg
cltd
iret
push
int
mov
in
mov
cmp
in
aam
and
out
test
aam
push
adc
xchg
pop
cmp
out
insb
sub
and
repnz
mov
ss
data16
test
jp
add
sbb
xchg
cmp
jno
lods
loopne
add
daa
repz
cli
xor
cld
psubq
jb
push
hlt
pop
movsl
sub
and
mov
cmpb
mov
mov
sub
lcall
cmp
mov
data16
ja
xor
mov
nop
jae
pop
pop
jo
inc
int
mov
or
push
adc
and
fsts
and
fs
jg
leave
xchg
pop
cli
push
sbb
dec
stos
dec
stos
xor
leave
loop
ret
fnstenv
mov
mov
jp
outsb
add
mov
subl
push
xchg
lea
cld
hlt
adc
aad
call
jg
push
dec
test
cmp
fdivl
xchg
pop
cmp
stos
fisttpl
shll
mov
repz
push
push
jmp
out
push
fstl
out
cmp
pop
fwait
cmp
aaa
push
and
rorb
push
xchg
jo
pop
pop
mov
leave
sbb
dec
dec
ds
scas
aas
dec
cmp
into
or
pop
lahf
mov
adc
jmp
test
fs
cmp
push
in
push
fnsetpm(287
mov
aas
sub
sub
call
test
dec
mov
pop
pop
jge
dec
inc
mov
hlt
xchg
lods
mov
cmp
xor
les
xor
and
mov
sbb
in
mov
jle
leave
stos
stos
pop
sbb
imul
add
or
sbbb
das
mov
dec
psubusb
addr16
sbb
and
mov
add
fsubrl
stos
in
adc
dec
mov
fstl
mov
dec
out
cmp
sub
ss
fsub
mov
sub
lods
xor
popa
jge
loope
les
cmp
dec
stos
pop
imul
and
stos
and
shrb
push
ja
push
out
out
imul
and
js
dec
js
cltd
test
xchg
ret
pop
test
add
xor
xlat
cmpb
cmp
call
sbb
cmp
push
pushf
imul
push
inc
cmc
icebp
jns
mov
out
sub
cmp
add
cmp
negl
xchg
lret
fnstsw
mov
rcrb
add
adcl
fwait
adc
out
xor
imul
xor
inc
mov
cltd
push
cli
sub
fmuls
push
aas
int3
jle
je
jp
push
inc
test
xchg
cmp
push
inc
inc
imul
mov
sub
sbb
sub
js
mov
push
or
ljmp
iret
push
cmpb
lret
stos
add
sar
add
call
xchg
daa
into
hlt
dec
push
mov
loop
xchg
movsb
mov
mov
je
rorl
out
int3
movsb
jecxz
push
dec
push
pop
dec
into
sub
cld
fcoml
icebp
mov
push
cmp
dec
or
dec
mov
in
cld
push
cmc
pusha
icebp
cmpsb
lock
aaa
or
movsl
mov
xor
lods
mov
and
mov
dec
jle
mov
jmp
adc
add
hlt
jge
sbb
inc
aaa
xchg
mov
pop
or
cwtl
test
out
adc
jmp
xchg
data16
into
mov
inc
lods
cltd
push
sbb
ffree
cmp
mov
xor
dec
shlb
sub
insb
jae
sub
pop
sub
aad
outsb
out
mov
mov
test
dec
inc
xchg
rorb
jg
rcll
or
inc
gs
and
lcall
jg
lods
leave
push
mov
cli
dec
sarl
std
inc
add
cmpsl
xchg
scas
dec
mov
xchg
sub
mov
adc
pop
punpcklwd
movsb
gs
push
xor
push
pop
mov
mov
push
and
dec
dec
add
mov
iret
add
stos
adc
mov
push
lret
outsb
in
scas
dec
hlt
jnp
repnz
adc
or
mov
jno
in
mov
fadds
cmp
mov
jns
movsl
pop
inc
lea
lds
lret
xchg
sub
mov
ret
mov
dec
test
fdivp
and
pop
in
xchg
xlat
out
fisubrl
arpl
loope
xor
rcll
das
in
popa
cmp
push
mov
inc
bound
pop
xchg
pushf
dec
mov
push
add
adc
enter
int3
push
pop
sbb
xchg
inc
stos
ljmp
xchg
mov
std
in
push
cmovae
lea
movsl
xchg
imul
fs
inc
std
repz
mov
fadd
movsl
jb
scas
lds
out
mov
pop
jg
sub
jl
sbb
test
fnstsw
fdivl
add
add
xchg
xchg
sub
rcrb
rorb
insl
xor
inc
push
fsubrs
idivb
fnsave
jmp
icebp
pop
jg
push
hlt
lea
and
repz
or
scas
push
fnstcw
sbb
data16
sbb
mov
popw
je
sti
jmp
jo
push
test
dec
pop
hlt
dec
dec
les
fidivrs
fdivs
std
xchg
repz
out
pop
sbb
pop
dec
or
gs
mov
in
mov
or
inc
je
mov
or
xchg
fdivl
sub
sbb
push
jmp
cwtl
loopne
stos
or
out
mov
lret
insl
xor
out
hlt
mov
or
lods
cmp
movsl
push
les
outsb
push
adc
push
dec
loop
lds
shlb
in
movsb
cmp
std
out
fbstp
xor
or
jo
sbb
bound
cmpsl
and
inc
out
dec
or
bound
or
enter
pusha
adc
data16
es
dec
ror
outsb
pusha
sbb
or
jo
imul
push
push
jmp
lea
and
jb
inc
pop
push
mov
cmp
jae
adc
enter
mov
push
jg
sahf
sbbb
out
notb
sbb
leave
mov
aad
dec
add
mov
sub
sub
popa
loope
inc
les
adc
cld
scas
cli
mov
rorb
ret
outsl
xchg
sub
sbb
or
push
insb
cmp
lcall
mov
rol
sub
xor
xor
pop
lock
and
popf
in
jge
mov
mov
movlps
aam
ret
aas
sub
push
aad
loopne
inc
pusha
repz
xchg
scas
in
xorl
push
xlat
push
sbb
and
mov
out
and
mov
stos
jbe
test
jge
dec
popf
repnz
addb
xor
adc
mov
nop
testl
lock
inc
jb
mov
stc
lret
push
cmp
cmc
fs
test
insb
movsl
dec
loope
gs
sub
popa
or
push
int
sub
mov
mov
adc
mov
xchg
and
cmp
sahf
mov
sbb
or
insb
mov
inc
pop
scas
mov
xorl
adc
sbb
lds
pop
loope
ret
xor
mov
lret
imul
xor
cld
pusha
shrb
into
push
add
cmp
sub
pop
jg
fiadds
and
pcmpgtw
cmp
jo
dec
int3
pop
addr16
rclb
adc
cmp
shlb
in
addr16
xor
mov
sbb
push
xor
jp
adcl
or
xor
addb
fstpt
dec
fwait
cmc
cmp
push
mov
out
andb
clc
cmp
data16
push
or
imul
jl
jl
dec
cmp
push
scas
and
sub
xchg
ds
jl
data16
mov
movsb
push
cmp
movsl
mov
aam
inc
fsubl
xchg
jne
xorl
mov
bswap
and
bound
jge
fsubrl
jg
movsl
mov
pop
jl
jns
rorl
les
add
mov
sub
in
pushf
mov
mov
mov
addr16
jae
test
xor
add
ret
sub
decl
test
into
mov
fcomi
int3
push
xorb
test
scas
aaa
mov
insl
or
imul
ret
xchg
aaa
dec
int
shrl
mov
les
mov
jno
hlt
and
adc
into
decb
mov
pop
pushf
stos
and
mov
xor
mov
mov
mov
fstpt
stos
or
push
int3
xchg
mov
inc
daa
xor
out
ss
inc
mov
cltd
aas
jecxz
adc
sbb
mov
fisubrs
das
xchg
xor
arpl
jecxz
insl
loopne
lods
hlt
je
mov
cmp
and
dec
outsl
xchg
mov
popf
sbb
push
test
cmpsl
test
adc
inc
inc
push
cld
push
inc
mov
inc
hlt
outsl
mov
inc
pop
aam
cmpsl
js
lret
shrl
shlb
shl
sub
lret
mov
dec
fimull
loopne
jmp
cltd
add
mov
push
sbb
mov
imul
fwait
mov
dec
sub
and
sar
xor
jge
push
repnz
add
pop
sahf
mov
outsb
fdivrs
sti
push
addl
movsl
dec
lcall
inc
push
xor
fwait
sbb
popa
pop
jo
jno
rcrb
call
nop
push
cmp
ds
gs
scas
jae
inc
add
iret
xchg
jp
test
fnstcw
inc
dec
arpl
stos
pop
xchg
loopne
mov
aas
mov
fiadds
mov
jp
mov
pop
sub
jg
out
faddp
sbb
or
es
push
fld
push
jge
and
cmc
sub
sbb
movsl
loope
andl
loopne
inc
mov
cmpsl
xchg
stc
sbb
aas
mov
insb
pushl
inc
orl
lret
sbb
sbb
outsb
in
or
aad
pop
cmpl
leave
dec
jp
arpl
adc
and
xchg
mov
cmp
or
push
pop
ror
sbb
repnz
sub
repnz
out
or
push
hlt
and
xor
aas
adc
enter
hlt
push
cmp
mov
push
dec
stc
inc
pop
mov
jmp
sub
push
shrl
es
mov
out
xor
or
jge
mov
jae
mov
test
out
inc
sub
ljmp
pop
push
popa
xor
lret
mov
adc
ss
fmul
int3
xorl
xor
or
je
test
inc
dec
xor
or
sbb
xlat
or
adc
out
xchg
sti
in
xchg
jo
cmp
shl
pop
jecxz
jae
dec
inc
movsl
ret
lock
mov
in
lock
movsl
mov
lcall
mov
mull
jne
jo
jae
cmp
aaa
mov
out
cmp
cs
das
add
shlb
dec
mov
and
rcll
imul
jg
xlat
rcl
jge
fcoml
imul
adc
mov
cmpsb
insl
sbb
mov
xchg
lock
sub
mov
xchg
push
adc
cmp
fsubrl
gs
inc
leave
mov
mov
cmpsb
imul
add
lods
inc
cmp
insl
out
lret
orb
call
push
imul
mov
dec
inc
mov
in
mov
xchg
pop
mov
imul
xchg
jge
sysret
test
or
mov
test
movsl
dec
aaa
fs
cli
fists
push
or
mov
mov
int
dec
mov
cmp
addr16
sbb
adc
jp,pt
and
ret
cwtl
cmpsb
aas
inc
cmp
add
jle
jg
push
data16
sahf
mov
add
test
test
and
adc
adc
inc
push
cltd
insb
data16
cmp
leave
pop
iret
ljmp
or
arpl
outsb
pop
insb
nop
stos
fistpl
sbb
lcall
imul
in
or
jnp
popf
jno
sbb
cmpl
jl
lock
push
sub
in
cmp
dec
lock
inc
insl
mov
outsb
push
aam
ret
xor
pop
pushf
stc
stos
add
js
dec
xchg
pop
fistl
rcll
lods
add
shrl
adc
shl
xor
loop
sub
jns
xchg
data16
std
and
mov
jge
jl
and
sbb
mov
rcrb
int
dec
cld
xorl
jae
incb
imul
aaa
fs
cmpl
outsl
inc
xor
cld
cs
sub
cmc
jg
jmp
outsl
add
jne
mov
mov
mulb
ja
or
aad
cmp
inc
jno
mov
cmp
or
loopne
dec
popf
pop
rcrl
jno
xor
pusha
cmpl
add
jge
nop
ret
and
dec
call
pop
int
xor
gs
push
adc
jno
mov
push
adc
lret
adc
jle
mov
int3
and
imul
mov
cli
pop
jmp
mov
push
mov
fisubs
mov
cmc
mov
lret
xchg
or
pop
aas
cmp
arpl
add
popa
mov
out
daa
loop
or
lret
inc
in
int3
pop
sahf
inc
fwait
std
mov
dec
sbb
cs
xchg
cmp
stc
out
ja
lock
mov
aad
loopne
cmp
jnp
cmp
dec
adc
add
pop
adc
sbb
subl
repnz
dec
shll
sbb
push
mov
cli
lret
pop
loopne
mov
lret
stos
inc
cmc
push
cmp
enter
sub
hlt
scas
fsubrp
aad
mov
mov
and
pop
add
mov
inc
jl
fcompl
push
bound
inc
std
or
loopne
loope
shr
mov
andb
xchg
pop
sbb
mov
lods
icebp
sub
push
adc
sti
inc
xchg
sahf
into
cld
sbb
or
loopne
inc
rorb
adc
mov
sub
cmp
fiaddl
jmp
push
xor
and
xor
sub
mov
xchg
mov
inc
adc
inc
add
or
mov
test
das
xor
shr
mov
pop
push
es
ljmp
fs
call
test
aad
lcall
mov
sub
and
clc
inc
cmc
or
sub
in
jg
adc
pop
and
or
data16
sub
jmp
and
push
out
lcall
add
jnp
or
push
push
test
hlt
xchg
pusha
push
test
pop
xchg
arpl
mov
mov
mov
fs
fwait
mov
repz
xchg
pop
or
lret
xchg
adc
mov
lret
int3
dec
adc
adc
add
cwtl
cmp
dec
pop
dec
mov
mov
scas
adc
idivl
mov
rcrl
dec
lcall
cltd
sub
fucom
xlat
ret
cmp
ds
xchg
sbb
inc
cs
frstor
cmp
clc
adc
mov
rcll
jle
push
mov
add
sbb
sbb
xchg
loopne
adc
add
add
leave
faddl
jmp
push
push
xchg
lcall
out
adc
cld
inc
jno
popa
dec
pop
dec
scas
sub
push
xor
lods
or
and
sbb
pop
cmc
test
and
adc
xchg
test
imul
loope
adc
xor
dec
pop
mov
fcoml
adc
xor
mov
cmp
stc
xor
pop
mov
fs
test
bound
or
xlat
mov
jb
push
lds
aaa
dec
add
push
mov
out
repnz
addb
div
and
dec
movsb
pop
mov
cs
cmp
sub
xor
popa
push
je
aaa
dec
dec
into
jmp
xchg
sub
xor
stos
push
dec
ficoms
xorl
or
pop
or
sub
jmp
xlat
ja
jl
clc
push
hlt
push
out
adc
mov
mov
stos
mov
xlat
xor
push
add
in
cmp
cmp
sbb
cmpsl
stos
orl
xor
insl
fcoml
xchg
inc
mov
xchg
lods
popa
pop
gs
in
push
xchg
xchg
pusha
mov
addl
imul
xchg
std
cli
mov
mov
lods
jp
arpl
sti
jle
mov
dec
scas
data16
and
xchg
fstps
ja
lcall
rorb
hlt
addl
das
cmp
pop
cmp
adc
fildl
mov
jo
xchg
jmp
into
loop
imul
xor
andb
imul
leave
fidivl
sub
jae
xlat
das
xor
adc
and
lods
out
mov
lret
mov
repz
cmp
sbb
prefetch
mov
shrb
in
inc
add
xchg
push
jg
mov
push
mov
mov
and
fldt
sub
subl
repz
sub
loope
jl
aam
aaa
inc
sub
jle
and
cmp
imul
pushf
push
add
test
repz
push
negl
xor
andl
push
adc
das
xchg
inc
rcrl
lock
insb
pop
push
das
inc
and
pop
cwtl
fst
sbb
sub
inc
nop
imul
sub
inc
push
divl
mov
shlb
dec
enter
cli
nop
dec
inc
fstl
test
hlt
das
ret
inc
jo
lods
ret
jg
packsswb
and
mov
lea
and
xchg
xchg
mov
testl
or
sahf
mov
insb
cld
iret
cs
outsb
and
out
mov
inc
test
stos
lods
neg
push
fisttpll
fdivl
out
pop
in
adcb
xchg
xchg
push
pop
jae
xor
xchg
jb
in
mov
in
add
test
dec
mov
xor
push
mov
out
flds
popa
cmp
add
inc
int
cmpsb
int
or
or
adc
sbb
push
xchg
test
les
jnp
push
and
addl
lea
adc
stc
push
or
xorl
jl
setns
lea
movsl
mov
movsb
or
insb
mov
mov
adc
pop
sarl
cmc
xchg
popf
test
push
pop
scas
lret
lock
out
cs
jnp
je
inc
xchg
sti
cmpsb
pop
test
pop
jmp
cmc
push
in
mov
inc
xlat
pop
rdmsr
cmp
popf
ss
ja
cld
mov
pop
mov
icebp
sti
xor
sarb
mov
hlt
mov
test
inc
ret
nop
pushf
aam
dec
mov
and
shrl
jmp
dec
aad
pop
fdivrs
or
mov
xchg
add
scas
mov
mov
cs
shl
or
fldcw
cmp
ret
xchg
cwtl
addr16
push
mov
xorb
adc
inc
loopne
pop
mov
mov
mov
iret
push
jl
sbb
ja
push
adc
jne
test
push
sbb
inc
test
sub
lea
je
mulb
sbb
inc
sub
jno
dec
inc
xchg
scas
mov
or
jmp
int
cmp
test
xchg
inc
mov
xlat
add
cmp
out
enter
repz
add
scas
loop
mov
dec
loop
mov
out
inc
xlat
loop
sbb
xchg
adc
mov
imul
and
add
dec
cmp
loopne
pop
aaa
hlt
or
mov
std
or
insl
icebp
sarl
mov
lods
xlat
push
mov
repnz
sub
mov
jmp
in
std
dec
and
sub
hlt
mov
imul
mov
mov
dec
cld
lds
jne
lret
movsb
les
or
loop
jge
jne
and
lock
mov
sbb
bound
sub
add
cmpsl
sbb
xchg
fildl
sahf
jmp
and
leave
mov
push
nop
dec
mov
add
mov
push
and
push
pushf
popf
int3
jmp
xchg
and
movsl
cmpsb
add
mov
sbb
mov
shrl
aaa
cmpsb
cmp
adc
test
stos
inc
pop
arpl
dec
leave
xchg
mov
cmp
std
mov
xchg
push
push
push
mov
call
xorb
xor
add
push
out
or
stc
movsb
push
push
pop
add
out
out
mov
mov
mov
mov
fimull
ret
nop
xor
adc
dec
mov
cld
imul
cmc
cmp
or
pop
fimull
scas
test
movsb
mov
and
or
sub
add
in
or
xchg
std
dec
je
mov
push
mov
ffree
jecxz
sbb
loopne
fsubs
addr16
jae
lcall
adc
mov
pushf
dec
pop
push
dec
scas
mov
push
lock
dec
idivb
fadds
les
addr16
mov
xchg
adc
out
cmp
mov
mov
or
mov
out
enter
push
and
arpl
jb
mov
adc
mov
addr16
mul
sbb
jb
mov
or
aaa
lcall
inc
xchg
or
cli
jb
in
cmp
push
popa
fcomps
mov
jl
fisubrs
cli
sbb
into
out
test
sbb
sbb
out
js
or
xchg
inc
fiaddl
xchg
fnstcw
outsb
fists
jg
shll
and
aaa
nop
fstpt
fldenv
mov
adc
jge
pop
sub
dec
nop
or
xchg
lock
std
jp
or
lahf
mov
push
mov
pop
std
and
jbe
xchg
mov
sbbb
inc
and
clc
adc
pop
xchg
or
jae
inc
jbe
jno
xchg
int
imul
aad
push
push
sahf
into
repz
jl
nop
mov
mov
cltd
inc
frstor
notb
and
fiaddl
shll
shlb
pop
pop
adc
adc
or
and
pusha
jno
out
push
mov
cmpsl
mov
hlt
inc
and
psubd
sarl
cmp
das
sub
or
mov
inc
sbb
fistl
fdivr
lock
adc
sub
movsl
fwait
cmp
popf
imul
inc
les
fidivrl
pop
mov
nop
mov
mov
xlat
push
mov
sbb
je
cmp
push
nop
leave
iret
and
xchg
jnp
mov
les
push
mov
jnp
adc
xlat
arpl
sub
out
mov
jle
fwait
mov
out
or
jecxz
xchg
insl
repnz
bnd
bound
stc
add
xor
mov
scas
push
inc
cmpl
pop
adc
les
jecxz
clc
pop
out
pushf
push
fistl
cmp
sbb
sub
stos
push
fs
out
push
iret
mov
aad
mov
xchg
into
cmp
or
aad
imul
addr16
es
push
or
arpl
cmpsb
adc
or
jl
and
clc
cltd
mov
dec
add
iret
push
fstpt
cmpsb
fwait
icebp
iret
enter
add
fld1
or
divb
imul
sub
jnp
movnti
sti
mov
adc
mov
roll
xchg
and
int3
adc
mov
jg
fwait
add
cmp
push
fildll
push
aaa
cli
ret
jbe
loope
movsb
mov
sbb
jne
jmp
rolb
loopne
mov
sub
jmp
push
test
mov
imul
pushf
pop
nop
je
jns
out
ss
pop
iret
and
jnp
ss
mov
or
jae
inc
out
sub
scas
mov
jge
movsb
aaa
sbb
rcr
out
push
inc
mov
out
jecxz
xor
mov
xor
repz
cltd
je
or
pop
jbe
loope
aas
jne
xor
xor
sbb
rol
cmp
rcrb
push
mov
xchg
mov
test
stos
shrl
sub
in
shll
sub
pop
cltd
bound
bound
jo
inc
pop
dec
aaa
pop
sub
cmp
les
xchg
jmp
jl
mov
sub
in
or
pop
fcoml
loope
push
scas
dec
out
test
dec
mov
sub
xor
sti
and
ja
jne
nop
jnp
cmp
cmpb
sti
xor
push
sbb
mov
aad
mov
repz
jns
jmp
push
sub
pop
shlb
hlt
popa
sbb
jge
ja
or
mov
xlat
jnp
rcrl
stos
pushf
sub
mov
mov
data16
or
pop
fs
ret
aas
push
imul
jno
mov
xor
jno
pop
idivl
xlat
jns
aam
jg
stc
fisubrs
cmpsl
push
shr
aas
addl
cmpsl
inc
add
xchg
jne
xchg
sub
cmp
rcrl
push
xchg
clc
sub
rorb
lea
inc
mov
mov
pop
rcrl
push
xchg
add
add
inc
add
and
sub
pop
add
push
cld
cmp
das
fnsetpm(287
adc
jo
xchg
xchg
js
inc
lods
insl
xor
jmp
push
pop
pushf
sbbl
adc
pop
dec
add
ret
repnz
mov
fiaddl
jns
dec
movsl
mov
flds
mov
aaa
scas
flds
or
sub
xchg
inc
sbb
lea
mov
pop
clc
addr16
xor
aas
imul
in
push
dec
insl
aas
daa
aaa
mov
divl
clc
adc
add
xlat
sbb
mov
cmp
sub
add
mov
into
leave
das
mov
add
add
aas
xor
push
add
adc
push
and
aam
pushf
and
mov
lret
push
sub
push
push
inc
mov
inc
xor
cmp
mov
sbb
sbb
ret
cmpl
mov
in
pop
aaa
shl
push
clc
inc
jecxz
jo
aas
test
rorb
pop
add
mov
or
pop
sub
repz
mov
push
dec
add
rcl
popa
cmp
cwtl
push
mov
fadds
jns
mov
fdivrl
loop
or
fadds
adc
jecxz
inc
dec
pop
je
mov
fldl
nop
int3
push
mov
adc
cmp
notb
pop
mov
lret
xchg
aas
ret
movl
sbb
pop
cmp
out
cmp
stc
xor
fsub
in
imul
mov
scas
fstps
or
mov
cmc
mov
jg
aam
and
ret
add
and
xchg
mov
imul
ret
xor
cmp
std
fistl
mov
repnz
scas
test
sbb
push
movsl
fwait
pop
sub
add
pop
enter
das
inc
adc
cmp
dec
ljmp
cmc
xor
and
imul
stos
jecxz
std
mov
or
mov
push
xchg
fwait
adc
sub
les
in
ds
xchg
in
dec
adc
gs
fnstenv
xchg
mov
xchg
adc
xchg
inc
data16
mov
add
and
hlt
and
and
mov
sub
cmp
add
inc
jecxz
popa
shll
push
aad
mov
inc
push
pop
inc
arpl
sub
aaa
cmpsb
jmp
in
jo
fwait
ja
fiaddl
pop
adc
push
mov
dec
and
adc
dec
push
mov
push
test
xchg
jo
pop
cltd
test
das
test
test
add
dec
das
repz
in
add
stos
xchg
icebp
jns
inc
cmp
out
shrb
pop
inc
iret
sub
add
sub
stos
add
xchg
xchg
pusha
pop
xchg
in
adc
adc
jecxz
sbb
aam
testl
add
push
fsubrs
lock
push
sub
mov
pop
mov
iret
rolb
xchg
notb
mov
mov
nop
mov
repnz
add
stc
pop
cmpsb
test
insl
fstl
movsb
add
test
push
jp
fildl
shlb
in
sbb
sub
ror
mov
and
xchg
mov
sub
iret
pop
mov
enter
sbb
adc
test
push
mov
sbb
sar
pusha
repz
mov
movsb
and
cld
lret
jle
cmp
scas
test
fcmovbe
movsb
in
std
loop
xor
jg
push
cmc
jbe
cmc
dec
ja
loope
clc
test
sbb
cmp
jmp
es
mov
jno
out
mov
xor
mov
pop
scas
or
enter
inc
hlt
jle
icebp
in
clc
mov
inc
inc
xchg
es
mov
mov
cmp
outsl
or
cmp
mulb
scas
xorb
loop
mov
xchg
lret
mov
add
mov
popa
cmp
insb
loop
add
lret
es
mov
imul
inc
popf
cmp
and
fwait
or
jae
lret
or
popf
jne
push
lahf
cmpsl
dec
mov
out
cmp
jecxz
jecxz
sub
imul
inc
lahf
xlat
jns
adc
aad
mov
mov
xchg
int3
lds
jnp
scas
push
aaa
add
dec
sahf
sub
loope
outsl
cmpsb
jbe
mov
or
dec
dec
leave
mov
fucomip
mov
in
out
push
mov
pop
cs
stos
push
and
int3
sub
andl
fldcw
inc
mov
adc
inc
lock
add
fists
or
pop
sbb
pop
jo
mov
cmpsb
rcl
incb
pushl
push
push
leave
idivl
pusha
fwait
movsb
push
and
fisttpll
push
cmp
call
add
inc
mov
dec
xchg
and
adc
loopne
hlt
jge
jl
call
mov
out
pop
sahf
imul
dec
adc
sarl
loopne
inc
repnz
stos
jmp
lret
xchg
fwait
arpl
push
stos
lock
pop
xchg
sub
clc
ja,pt
mov
sarb
mov
data16
ss
je
icebp
fs
mov
jmp
cmp
pop
decl
mov
test
pop
and
inc
ror
xor
or
insb
pop
dec
and
mov
xchg
push
jmp
ja
push
bound
pop
movsl
iret
frstor
xchg
push
mov
mov
lock
mov
aaa
movsl
je
push
push
notl
push
ret
in
fbstp
xchg
sbb
sub
inc
mov
mov
or
cmp
add
notl
jno
inc
xchg
pop
mov
stos
inc
loop
adc
cs
adc
out
dec
lret
and
add
push
adcb
adc
imul
imul
sbb
lock
jmp
lcall
adc
cmpsl
jge
imull
stos
cmp
or
push
scas
mov
pop
aaa
lea
jmp
fisttpll
cmp
lret
nop
pop
dec
push
mov
push
stc
add
sqrtps
push
jb
xlat
mov
and
mov
add
les
fwait
aad
add
outsl
and
sbb
inc
mov
xchg
lret
cwtl
je
mov
notb
adc
push
je
es
adc
pop
out
dec
jp
pop
sti
mov
rorl
sarl
push
jb
cmp
loop
in
jge
in
jecxz
stc
mov
mov
xorl
jp
push
cmpsl
push
lahf
mov
repz
cmp
repz
jecxz
push
enter
mov
popa
addr16
jno
mov
in
out
or
push
into
xor
scas
jmp
jecxz
mov
mov
ret
out
inc
dec
push
int3
rclb
insb
or
dec
cmp
push
adc
aas
stos
ror
sbb
mov
int3
pop
and
popa
push
sbb
or
loope
shrb
xchg
hlt
lea
push
and
stc
inc
xor
pop
addl
loop
les
ds
xchg
jne
clc
adc
mov
adc
rorb
adc
pop
inc
mov
lods
xchg
pop
sbb
lea
fcoms
mov
xchg
sub
sbb
jno
lret
or
aam
rcl
imul
dec
push
push
cltd
js
dec
xor
sub
fdivs
mov
push
xor
xlat
cmp
scas
adcb
mov
jae
adcl
lock
sbb
xchg
fadd
faddp
sahf
out
ret
test
push
popf
lea
sub
imul
les
mov
lcall
xorl
sbb
iret
or
add
or
mov
std
cwtl
ss
bnd
sahf
cmp
out
test
pop
in
dec
sbb
cmpsl
lea
push
jo
sbb
popf
add
mov
jle
lahf
mov
push
adc
add
xor
pop
dec
pop
fwait
mov
sub
shrb
jb
subl
lods
cwtl
adc
mov
cmpsl
popf
pop
in
mov
sbb
cwtl
mov
lock
mov
cltd
insl
inc
mov
xor
jnp
sub
push
sbb
jnp
lret
mov
out
idivb
lret
test
cmp
cmpsb
leave
mov
les
arpl
pushf
adc
mov
sbb
and
int3
stc
imul
fs
popf
or
jne
add
add
pop
mov
out
call
inc
sahf
mov
lahf
aam
xlat
mov
in
lea
mov
aam
loope
sti
xor
mov
ss
stos
add
movsb
ficoml
xchg
xchg
xchg
popa
clc
or
nop
mov
sub
adc
in
jl
xor
sub
mov
adc
das
adc
or
negl
xchg
in
stc
adc
mov
es
xor
shl
test
cld
call
xchg
or
mov
push
dec
jg
mov
sub
rorl
ja
cmpsl
mov
scas
fsubrl
aad
mov
push
push
movsl
cmp
not
clc
push
push
jne
jge
ret
imull
xlat
push
cmp
gs
jno
test
out
push
pop
inc
xor
aas
and
mov
leave
push
mov
adc
out
aad
sub
dec
out
aas
push
cmpsl
push
lods
sub
xor
mov
push
iret
jne
xorb
in
data16
adc
int3
push
or
mov
cmc
addl
aam
cmp
xchg
test
int
fiadds
pop
pop
mov
lock
mov
push
xor
nop
xlat
iret
push
insl
or
movsb
pushl
mov
imul
sub
adc
push
xorb
mov
outsb
dec
cmpsb
mov
xor
je
xor
sub
movsl
xchg
fdivl
or
sub
movsl
adc
popf
and
mov
sbb
pop
jmp
fnstcw
lods
dec
push
add
xchg
daa
imul
pop
aaa
rcll
repz
mov
adcb
mov
lcall
lods
test
sbb
rolb
lret
mov
xchg
movsl
jbe
pop
dec
repz
loop
push
push
lret
mov
sub
adc
or
dec
pop
jle
mov
rol
aad
fdivrl
insb
jmp
aas
push
stos
mov
data16
pop
gs
push
sub
inc
ljmp
push
jmp
jecxz
pop
inc
sub
mov
inc
ds
outsl
mov
das
inc
add
scas
mov
pop
inc
jp
outsb
addr16
push
ret
jnp
xor
ljmp
push
aad
xchg
push
sbb
add
outsl
sbb
add
js
fnstenv
cmp
subl
push
cmp
or
in
frstor
sub
pop
push
out
daa
fldt
mov
lods
out
mov
clc
adc
jmp
jl
arpl
scas
dec
inc
inc
inc
mov
sbbb
in
in
jg
mov
fidivs
rep
daa
lret
lea
xchg
cwtl
cmpsb
xor
adc
sub
pop
sbb
add
scas
icebp
jne
out
outsb
ss
daa
xor
test
mov
addl
sti
orl
stos
in
aas
jge
push
mov
dec
ret
jle
call
outsl
repz
sub
mov
xor
pop
out
insb
arpl
popf
sbb
sbbb
pop
mov
mov
mov
js
sub
mov
repz
mov
outsl
sub
jne
xchg
cmp
arpl
jbe
out
mov
scas
test
inc
xchg
mov
andb
ret
dec
inc
cwtl
pop
xchg
pop
inc
dec
cmc
fldenv
xchg
mul
pop
aas
ljmp
jo
stos
movsb
movsb
or
adc
dec
outsb
jge
mov
repz
inc
xchg
sbb
adcl
add
mov
aaa
mov
sbb
popa
mov
ljmp
dec
cmpsb
push
mov
inc
push
xlat
dec
dec
jnp
aam
cmp
in
ljmp
out
aam
or
pushf
inc
fldln2
shlb
and
pop
cmpl
sbb
push
rolb
adc
sub
dec
jge
stos
mov
inc
sbb
xchg
test
xor
imul
jae
jmp
xchg
stos
jecxz
insl
sub
mov
xor
and
mov
push
pop
inc
and
jp
dec
inc
push
or
cmp
in
ja
and
rcll
and
adc
jmp
mov
sub
fxch
cmp
mov
aam
adcb
add
cmp
mov
sub
test
jbe
es
xor
lods
sbb
rep
xchg
pop
loope
xchg
addl
cwtl
imul
dec
sbb
cmp
sbb
cmp
scas
mov
jecxz
xchg
aad
cwtl
mov
popf
sbb
std
ljmp
xor
xor
stos
xor
push
out
orl
or
cmp
or
and
pop
lods
in
insl
mov
add
pop
loop
shrl
xchg
lods
and
mov
dec
outsl
xchg
jecxz
push
cmp
dec
shrb
insb
pop
mov
loopne
mov
fisttpl
cmp
test
sbb
dec
sbb
sbb
fsubrs
mov
jge
cmp
nop
shrb
fs
inc
fisubl
jno
imul
test
hlt
ljmp
scas
into
sbb
ret
and
arpl
popa
loop
push
mov
xchg
js
lods
mov
loopne
rclb
aas
cmpsb
test
adc
jmp
imul
pmulhw
mov
fs
mov
mov
out
loopne
mov
ret
ret
sbb
cmp
loope
cmp
pop
shrl
fistl
mov
ss
insl
add
fs
aam
pushl
in
lahf
xlat
es
sarl
lahf
fld
pop
inc
cmp
and
inc
gs
hlt
add
xor
adc
sbb
push
and
out
movsb
sarl
fcmovbe
xor
cwtl
jp
pop
fstps
out
movsb
outsb
or
xor
sbb
fs
cmpb
je
outsb
add
rorb
adc
adcb
out
dec
fidivs
mov
mov
loope
out
data16
loopne
jo
in
je
rcl
movsb
cmp
aam
lahf
pop
jae
addl
cmp
jl
rcll
mov
stos
jno
add
cmp
je
out
outsb
or
mov
popa
jnp
sub
dec
pop
mov
in
pop
mov
popf
in
add
xchg
icebp
mov
jecxz
out
jae
xchg
scas
sti
int
mov
sbb
sahf
jnp
fldenv
dec
inc
sbb
loop
mov
cmp
cmp
cmp
mov
cmpb
stos
mul
loopne
mov
jno
daa
sub
ljmp
adc
push
clc
lret
mov
mov
sbb
xchg
xor
mov
in
xchg
xchg
or
call
xor
adc
stos
fnstenv
lahf
or
and
je
sub
mov
xchg
xchg
mov
add
cmp
stos
adc
pop
fmuls
lods
xor
add
outsl
scas
dec
inc
pusha
dec
inc
or
jmp
lret
insl
xchg
test
inc
or
xor
pop
popf
and
adcl
pop
fsubrl
imul
stos
jecxz
xlat
fisttps
sub
push
push
cmp
xchg
push
fwait
mov
sbb
das
pop
and
nop
mov
or
or
adc
mov
jg
frstor
ljmp
je
inc
pop
clc
daa
stos
stc
pusha
mov
mul
xchg
cmp
mov
in
push
das
jnp
pop
xchg
inc
lock
cmc
aam
popf
cltd
add
pop
xchg
jmp
mov
sub
mov
out
jg
pop
xor
add
xor
sbb
xchg
and
adcl
ret
push
and
enter
scas
and
movsl
test
lret
cmp
pop
dec
scas
mov
inc
xchg
or
fsub
movsl
cmp
enter
js
or
rcrl
and
ret
add
pop
and
arpl
cwtl
inc
movsb
push
mov
jle
add
mov
outsb
cs
mov
mov
cli
leave
out
pop
mov
inc
push
cmpxchg
adc
ja
iret
xchg
idivl
or
push
ss
pop
or
cmpsl
lret
in
pop
out
aas
or
xor
lret
mov
mov
arpl
aaa
adc
ret
cmp
hlt
idivl
inc
notl
jno
xchg
ret
fsubrl
pop
push
lods
mov
push
insl
in
aad
cmpsl
add
mov
sub
push
out
push
sub
mov
mov
sbb
std
xchg
es
leave
mov
gs
scas
cmpsb
fisttpll
and
jmp
and
lock
rcrl
sbb
push
mov
fs
sbb
les
cmpsb
push
sub
lods
adc
jmp
outsl
cmp
cs
daa
add
jp
lahf
addb
mov
leave
mov
mov
shlb
adc
lods
lock
or
loop
imul
jp
lods
insb
jmp
jbe
inc
outsl
mov
stos
js
adcb
inc
dec
and
test
imul
jb
into
out
leave
pop
in
add
sbbl
push
mov
pop
clc
or
sub
jmp
or
std
scas
jno
stc
cltd
add
pop
int3
fisttpl
jg
je
xchg
lds
mov
imul
inc
cmc
js,pt
fwait
pause
pop
pop
pop
adc
xchg
pop
out
out
mov
dec
fwait
jnp
add
mov
and
mov
mov
orl
pop
test
out
add
pop
test
cmpl
les
mov
push
dec
xor
mov
pushf
aaa
mov
mov
lret
jb
ss
sub
loope
sbb
or
mov
pop
lret
add
es
mov
aam
inc
xchg
jne
ja
fnsetpm(287
insb
loop
test
or
dec
pop
cmp
push
sbb
jbe
mov
stc
pop
movsb
and
cld
xchg
loope
fsubrl
ret
lods
push
or
jge
ja
jl
push
loope
fs
push
enter
lds
mov
pop
daa
gs
jl
and
dec
imul
xor
jbe
push
repnz
and
xchg
lods
pop
adc
fdivr
subl
rorl
inc
xchg
addl
cmovg
in
in
das
jle
test
out
mov
dec
cmp
or
mov
int3
aas
ficoms
mov
movsb
fimull
adc
negb
std
push
dec
jns
dec
jb
ljmp
lods
fs
int3
push
inc
pusha
cs
lcall
arpl
push
inc
gs
jo
lea
test
lds
test
add
dec
jge
jp
sbb
lret
das
movsl
cmp
mov
fmuls
fldenv
scas
subb
xor
jbe
decl
or
mov
cmpsl
pop
push
lock
aad
dec
mov
pop
cmc
or
add
aaa
xchg
sbb
jbe
fst
mov
xlat
fnstenv
cmc
xor
inc
cmp
cmpsb
pop
pushl
or
sbb
stc
cmp
mov
inc
push
enter
ja
cmp
xchg
adc
xor
sub
lea
ficoml
adc
adc
loop
add
insb
inc
xor
mov
cltd
inc
push
dec
lods
xlat
iret
push
sahf
dec
call
je
dec
fistps
adc
insl
lea
adc
insl
xor
sub
xchg
xor
add
cmp
in
adc
push
and
testl
sub
out
xchg
stc
xor
adc
or
pop
scas
sub
ret
add
pop
in
and
dec
stos
stc
pop
mov
clc
into
adc
repz
add
repnz
insb
ret
sbb
xor
dec
or
test
repz
lock
xlat
xor
add
cwtl
pop
xchg
lock
mov
xor
jnp
in
std
lret
int
hlt
mov
pop
popa
push
dec
mov
call
insl
inc
lcall
repz
sarb
and
scas
mov
xor
lahf
mov
lcall
push
std
cltd
in
mov
pop
lods
add
sbb
jp
js
dec
mov
add
loopne
push
mov
scas
outsl
ret
lods
and
cmpb
fdivp
cli
or
and
pop
xchg
ss
gs
clc
push
or
push
jle
or
cmp
dec
mov
cli
ss
pop
scas
add
daa
jmp
jge
les
inc
sub
inc
lcall
push
jge
outsl
add
shlb
clc
push
jg
sub
pop
cmc
stos
push
nop
movsb
out
cmp
ds
addr16
lds
pop
sub
sarb
movsb
pop
outsb
lret
sub
out
repnz
les
imul
outsb
cmp
aam
gs
push
adc
bound
repnz
jle
dec
rcrb
xchg
lea
sub
or
pop
mov
aad
fwait
sbb
int
xor
sti
add
js
dec
cmp
ret
cwtl
mov
jl
mov
or
and
and
xchg
push
adc
dec
aaa
lea
mov
leave
lds
xchg
stc
cmp
push
fimuls
sbb
imul
mov
push
fnstcw
pop
ret
sti
sub
mov
shl
xor
push
icebp
sbb
or
adc
jle
cli
push
pop
gs
sub
mov
cmc
sub
mull
sbb
mov
outsb
rcll
push
das
sbb
and
lods
add
incl
or
mov
adc
or
ljmp
mov
leave
push
scas
test
das
fmul
mov
imul
es
mov
arpl
and
enter
or
dec
out
xchg
lahf
mov
lock
in
lret
mov
inc
inc
mov
pop
xor
xchg
repz
dec
das
add
hlt
add
imul
dec
jmp
cmpsb
inc
aad
es
dec
lret
into
test
push
movsl
outsl
shrl
xor
fbld
addr16
inc
in
fs
inc
dec
xchg
test
cmp
push
fs
je
ljmp
cmp
ss
shl
roll
es
push
mov
hlt
xor
sub
andb
rcrl
or
xchg
xchg
push
arpl
mov
add
sbb
push
push
inc
sub
test
pop
fsubrl
cmp
sbb
or
fidivrl
test
test
les
or
mov
cs
jg
cli
shrl
das
push
sbb
fwait
jg
clc
sbb
sbb
gs
out
loope
mulb
sbb
xchg
incl
lahf
mov
mov
test
mov
sub
sub
pop
mov
dec
adc
cld
push
push
mov
int3
arpl
jae
movsb
mov
fdivs
add
insb
sub
or
dec
mov
pop
movsl
jle
aam
jle
dec
or
pop
mov
je
dec
neg
jne
pop
inc
pop
rcr
xchg
loope
dec
inc
sarl
push
add
cmp
ss
mov
cmp
sbb
subl
movsb
dec
jge
mov
stc
push
repnz
ljmp
aaa
inc
movsb
imul
pop
cmp
jle
dec
movsb
ficompl
and
or
pushf
adc
icebp
add
daa
fisttpl
inc
inc
movb
shll
inc
fdivl
mov
stc
mov
mov
lock
test
mov
notb
sbb
push
mov
xchg
pop
mov
inc
adc
lock
sbb
sbbl
js
cld
push
jae
jg
aaa
or
aad
fmuls
loop
shl
xchg
add
mov
dec
or
xchg
mov
dec
mov
mov
jmp
outsl
inc
jnp
stos
mov
outsb
imul
fstl
hlt
ljmp
pop
sahf
stc
or
std
sub
fsubl
sub
inc
in
test
fisttpl
mov
dec
decb
pop
sbb
aam
mov
ja
mov
cld
in
push
cmp
das
push
xchg
push
sub
dec
pop
xchg
xchg
xchg
push
fcmovbe
push
out
loope
stos
iret
mov
nop
add
inc
lahf
or
add
out
pop
cmp
sti
out
sbb
inc
stc
lods
or
cmc
sub
push
push
popf
test
pop
or
shr
sbb
push
mov
sbb
lcall
into
add
sub
inc
hlt
imul
gs
test
addr16
and
push
ret
insb
sbb
cmpsl
loopne
ret
adc
xchg
fucomip
sarb
into
loop
stos
and
dec
aad
test
leave
push
addr16
sti
jmp
inc
leave
mov
adc
and
xchg
pop
pop
mov
pop
das
pop
mov
jmp
inc
adc
xor
mov
je
and
cli
je
inc
xorl
lret
ljmp
cmp
aaa
push
pop
bound
add
xchg
and
repnz
repz
add
push
sahf
fimuls
jmp
in
rorb
dec
add
fsubp
ret
xor
out
sub
xchg
fwait
lea
adc
pushf
cmp
push
or
xchg
xchg
pop
and
mov
push
call
xchg
ficomps
jmp
push
jg
std
sub
xchg
xorb
push
cmpb
mov
pop
test
jne
imul
scas
fisubrl
ret
rcrl
pop
shl
dec
frstpm(287
cmpb
dec
out
je
push
adcb
test
fucomi
xchg
mov
or
push
inc
mov
xchg
gs
jp
out
pop
rorb
adc
pusha
int
fldcw
sub
mov
shr
int
sahf
adc
insl
push
es
dec
mov
xor
mov
mov
lods
sbb
js
xrelease
pop
js
xchg
cmc
cmc
jecxz
xchg
or
loopne
inc
cmpsl
rolb
dec
inc
out
ds
xchg
loop
cmc
aad
dec
insb
lcall
mov
test
pop
push
adc
mov
rcrb
roll
sbb
hlt
clc
push
pop
jle
adc
mov
insb
popa
sbb
out
pop
gs
lods
test
pop
pop
mov
enter
in
sar
pop
pop
aad
scas
dec
sbb
sahf
cs
mov
jb
pop
cmp
cld
test
shlb
pusha
xorb
sub
and
fs
sti
fwait
loope
adc
ret
push
fsubs
shlb
sbb
xchg
daa
fs
add
fnsave
mov
loop
subb
addb
mov
imul
enter
xchg
xchg
mov
jp
mov
sbb
stos
pop
adc
ss
out
fcoml
popl
insb
dec
call
movsl
cmp
pushf
ret
les
or
or
sub
lods
xor
sahf
int
jle
mov
sub
and
sub
or
dec
in
stos
popa
or
popf
push
adc
shl
mov
scas
cwtl
mov
scas
mov
xchg
sub
mov
dec
and
nopl
out
test
out
enter
inc
rol
aam
ja
rcrb
call
and
cmp
fdivp
cmpsl
pop
cs
cmp
inc
pop
mov
xor
test
xchg
out
dec
cmpl
dec
lahf
push
cmpsb
in
lahf
dec
xchg
xchg
sahf
cli
xchg
ss
data16
inc
add
cmp
mov
and
mov
cmpsl
sub
sbb
adc
lcall
mov
sbb
fcoml
addl
push
scas
jp
pop
iret
mov
push
push
rclb
enter
loope
jl
in
addr16
ret
in
je
loop
in
cwtl
mov
stos
cmpsb
arpl
rep
in
jae
jmp
adc
nop
mov
jl
idivb
fdivl
addr16
imul
dec
mov
jae
repz
iret
inc
fidivrl
push
xchg
jge
and
pop
xchg
jmp
popl
push
test
sbb
loopne
jle
in
and
xor
sub
mov
int
fmull
xchg
call
or
dec
xlat
addr16
mov
rcl
inc
daa
cs
dec
insb
fcmove
loop
lods
dec
insl
xor
inc
sub
push
mov
mov
mov
insl
xor
pop
das
cltd
mov
ja
in
cmp
outsb
js
jmp
addr16
test
pop
mov
cmpl
pop
adc
out
push
cwtl
adc
push
sub
push
clc
pop
add
sub
subl
or
mov
hlt
icebp
in
shrl
aas
jae
je
add
imul
test
pop
cli
fwait
adcb
xchg
xchg
cs
pushf
xchg
push
stc
or
or
add
stos
sbb
sub
lock
push
mov
push
loope
enter
in
insb
loopne
fwait
sub
add
adc
ficoms
pop
pop
lock
sti
or
add
lret
adc
stc
xchg
push
bound
ret
xor
sub
test
lcall
cld
hlt
mov
lods
add
int
and
xor
or
inc
xor
cmp
and
lcall
jge
cmp
sub
push
mov
arpl
xor
add
dec
mov
mov
cmp
andb
mov
mov
cmpsb
fmuls
scas
popa
dec
xor
lds
scas
int3
mov
fsubrs
insb
repnz
cltd
inc
rcr
pop
and
fdivr
or
mov
clc
adc
sti
xchg
aas
pop
xchg
clc
mov
cld
mov
iret
push
shrl
jp
sbb
test
mov
cmp
clc
dec
push
outsb
mov
and
loopne
ret
ss
inc
and
sahf
out
scas
lret
mov
xor
push
cmc
pop
cmp
cs
jp
lea
fstps
scas
and
sub
jmp
rorl
dec
lock
fs
push
sub
pop
mov
lcall
outsl
xchg
movb
lock
sub
mov
je
pushf
jmp
xlat
insl
dec
fbld
xor
cmp
lret
mov
or
gs
fildll
adc
mov
mov
stc
scas
pop
add
mov
mov
jns
in
push
sbb
stos
cmpsb
scas
inc
mov
adc
lcall
dec
je
pop
fwait
scas
lods
adc
aas
and
rcrl
fdivrs
cmp
fidivl
push
mov
adc
push
or
insb
ja
add
xchg
ljmp
sub
int3
push
sbb
cmp
adc
outsb
and
xchg
notb
sbb
sbb
std
jp
push
mov
and
scas
pusha
fwait
add
nop
cmp
mov
jecxz
lods
and
push
add
xor
cld
mov
mov
les
sbb
xor
xor
pop
xor
jmp
lds
mov
pop
mov
ljmp
dec
xchg
in
insl
cwtl
sub
hlt
inc
adc
frstor
xchg
mov
cmp
test
loop
dec
scas
xchg
rep
push
or
push
push
or
sbb
xchg
mov
scas
adc
scas
ds
fsubrs
jecxz
push
pushf
or
push
xor
push
push
ss
add
and
sarl
cmp
inc
mov
xor
sub
imull
in
fcomps
adc
mov
mov
ret
mov
lcall
outsw
mov
push
sbb
cli
pop
cmpb
dec
movsl
cld
xchg
mov
push
int
pop
hlt
loope
jno
inc
pop
movsb
cli
push
or
pop
and
ljmp
negb
ja
sub
mov
pop
dec
xchg
dec
lret
movsb
sbb
mov
push
mov
out
sub
add
cmp
repnz
add
aas
ret
push
or
add
int3
in
lahf
ja
call
sarl
sbb
adc
iret
mov
stos
pushf
mul
jp
int3
rorl
jecxz
pop
filds
ja
jecxz
mov
dec
adc
dec
pop
and
leave
loopne
movsb
mov
push
mov
or
loop
addr16
cmp
icebp
fisttpl
orl
adc
sbb
push
pusha
push
in
mov
out
push
movsb
idivb
push
call
lret
lds
int
mov
xor
inc
lret
jnp
mov
adc
add
or
loopne
or
icebp
arpl
pop
insb
pop
call
dec
and
pushf
daa
es
popf
xchg
ja
adc
xchg
mov
mov
test
das
sub
lcall
imul
push
inc
mov
shl
out
adc
int3
cmp
cmpl
jnp
and
xor
test
out
pop
call
hlt
fisubs
shll
call
xor
cmp
jmp
lods
cmp
out
cmp
int3
mov
cmc
les
mov
dec
adc
pushf
add
out
push
xor
push
icebp
lods
or
ja
mov
out
outsl
and
push
adc
inc
xor
test
mov
loop
push
scas
sub
or
pop
decl
sahf
cmp
cmc
cmp
imul
test
movl
jne
jp
lret
or
in
xor
repnz
mov
pushl
cs
xor
and
mov
repz
mov
or
lret
hlt
test
or
sbb
add
adc
or
jge
mov
push
test
sbb
sub
push
mov
add
inc
pushl
and
adc
xchg
adc
rorl
mul
adc
loope
pop
pusha
loope
xor
call
push
pop
jmp
xor
push
jae
dec
icebp
jge
lds
aad
mov
xchg
jl
es
adc
mov
test
mov
in
test
jmp
xor
lds
mov
pop
inc
or
mov
daa
dec
test
jbe
rcrl
dec
xchg
xlat
sbb
mov
dec
dec
in
and
rolb
rol
iret
sub
shrl
insl
std
adc
fldcw
sti
aas
daa
in
jl
sub
ffree
sub
push
jo
jg
addl
xor
bound
scas
pushf
cltd
lock
jb
add
rorl
inc
mov
sub
pusha
mov
pop
aad
icebp
sbb
mov
cmp
adc
cld
jecxz
cli
or
mov
push
daa
sarb
cmp
pop
shrb
inc
sbb
lahf
mov
xor
sbb
cmpsl
in
xchg
rcr
sbb
sbb
mov
rclb
jae
stos
test
fwait
clc
fwait
out
lahf
out
stc
std
lds
jo
dec
fcmovnb
sbb
in
jo
xor
add
dec
fs
mov
std
les
shll
jp
xor
mov
lods
adc
mov
gs
mov
cmp
add
jge
push
ficomps
mov
add
xor
mov
subl
shll
stos
pop
das
jo
adc
xor
clc
and
ret
out
xchg
mov
dec
jnp
stos
testb
mov
xchg
cmp
repnz
adc
pop
leave
mov
or
mov
xchg
ret
and
mov
stos
pop
jae
push
adc
fnstenv
popf
gs
pop
or
mov
pop
and
addr16
cmp
jno
mov
mov
pop
cmp
push
push
push
insb
pop
add
push
jecxz
sbb
jne
xchg
incb
fwait
les
push
aas
and
test
push
pop
int
das
aam
aas
jle
push
xlat
xchg
jae
shlb
outsb
xchg
test
lret
sbb
or
and
sbb
jmp
pop
sbb
insb
adc
out
iret
inc
out
rorl
aam
mov
dec
ror
sbb
cmp
dec
aaa
inc
pop
lret
mov
lods
stc
xor
cmpsl
mov
mov
and
cwtl
sub
cmp
cmpsb
shll
les
ljmp
adc
sbb
aaa
mov
mov
add
dec
xchg
cwtl
adc
jge
xchg
sub
and
nop
jne
sbb
xlat
mov
xor
xor
push
jo
jp
out
cmpsl
movsb
subl
pusha
incb
ret
dec
iret
push
push
cmp
cmc
inc
mov
mov
sub
out
outsb
add
or
cmp
mov
pop
jno
lds
fldl
andl
out
ss
rcrl
bound
dec
leave
dec
sub
and
addl
outsb
pop
fwait
outsl
or
pop
je
or
cmpl
mov
nop
dec
xchg
jl
sub
inc
inc
aaa
std
xchg
repnz
add
fisttpl
sub
push
in
cmp
adc
push
cmpsl
jp
ret
in
push
push
xor
push
sub
cmp
push
cmpsb
dec
push
addr16
jmp
push
lcall
aam
dec
imul
clc
xlat
negb
push
pop
or
pusha
mov
pop
sub
inc
cmpsb
popa
sbb
aam
push
outsb
fwait
lea
mov
push
sub
sub
fwait
adc
jmp
mov
subb
jmp
js
outsl
repz
call
shr
mov
inc
mov
lock
inc
pop
int
stos
jbe
cld
fisttpll
in
int
mov
clc
aad
sarb
xchg
push
mov
push
das
stos
mov
or
cmpsb
mov
mov
sbb
std
xchg
and
xchg
add
cmpsl
subl
sbb
adc
xchg
push
lret
fdivrl
insl
test
xchg
push
addr16
cltd
lahf
fsubrs
mov
outsl
test
push
xor
dec
enter
pop
movsl
cwtl
or
add
push
xchg
nop
aam
call
cwtl
iret
ds
mov
clc
sar
rclb
notb
lret
std
stos
ret
mov
aam
std
fimull
loopne
jge
push
mov
push
xor
mulb
fucomip
and
lahf
loop
pop
dec
sti
shr
xchg
packuswb
inc
cwtl
sbb
fs
mov
add
push
in
lret
call
mov
popf
loop
inc
cmp
push
jbe
sbb
cli
scas
or
aaa
mov
add
cmpsl
pop
cld
popa
shl
sbb
lret
add
sahf
push
jno
std
jle
insb
or
push
imul
adc
adc
hlt
fdecstp
jge
xlat
lock
jno
out
cmp
sbb
xor
mov
mov
insb
sub
or
mov
call
xor
jl
sbbl
or
std
cmp
loope
js
mov
leave
int3
js
sub
cmpb
addr16
mov
jecxz
punpckhdq
lret
bound
lahf
jbe
in
out
gs
dec
jno
sbb
ret
xchg
rcr
inc
scas
add
push
sbb
xchg
cld
sahf
andb
mov
fbld
imul
arpl
dec
inc
pop
mov
jecxz
sub
repz
mov
dec
and
jno
scas
sub
push
popa
mov
add
mov
adc
clc
enter
or
pop
pop
test
mov
dec
cmp
loope
lret
clc
mov
jb
xchg
into
push
jmp
xlat
int3
mov
sub
data16
adc
jge
xchg
lods
xor
cmc
jnp
imull
movsb
jle,pt
mov
inc
ret
roll
mov
test
aad
adc
xchg
mov
dec
in
cli
cmp
xchg
jl
mov
mov
adc
pop
test
in
test
xchg
sub
jecxz
stos
lret
push
aad
dec
mov
movl
scas
pop
ljmp
repz
mov
scas
ja
xor
jmp
mov
das
dec
push
xor
jne
jmp
sub
push
into
lds
inc
adc
or
mov
cmp
and
sbbb
push
mov
sbb
pop
push
xchg
fstps
loopne
cmp
lcall
hlt
mov
andl
test
mov
stc
data16
fisubrl
jae
imul
call
mov
sbb
repnz
ljmp
out
fisttps
lods
mov
xchg
pop
hlt
sub
cmpsb
inc
pushf
cmp
jp
push
in
ds
outsb
test
mov
mov
fmuls
mov
aaa
cmp
adc
adc
ss
cmp
sub
mov
pop
mov
ret
mov
pop
mov
lea
popa
dec
sub
imul
leave
xor
pop
mov
add
das
rol
jmp
mov
add
adc
jo
loopne
jle
dec
or
call
cmpsb
xor
cmp
and
idiv
hlt
movl
or
sahf
sub
je
mov
test
lret
jo
xor
insb
pop
rcr
popa
lret
data16
sub
add
sahf
jnp
add
adc
loope
das
rcrl
repnz
sub
test
shl
leave
inc
push
or
pop
mov
dec
pop
in
mov
add
sahf
fistl
cmpsb
popa
imul
mov
nop
xor
daa
mov
xchg
mov
ret
lcall
shrl
push
xchg
adc
push
push
jg
call
in
imul
sbb
repnz
push
js
inc
sub
mov
cmp
mov
or
loopne
mov
or
mov
sbb
mov
insl
fwait
loop
adc
add
add
mov
mov
stc
sub
cmpsl
int
and
push
adc
scas
mov
scas
jmp
lock
jle
mov
dec
push
loop
inc
js
jmp
jne
pushf
xchg
pusha
cmp
adc
inc
pusha
dec
mov
sbb
jne
insl
xor
test
cmp
repz
push
mov
sahf
push
stc
cmp
inc
sahf
adc
test
inc
pop
rolb
mov
pop
ljmp
outsb
sub
out
outsl
clc
call
jl
add
out
das
loopne
cmp
fiaddl
xor
cltd
cmp
out
xchg
pop
add
push
jbe
ljmp
out
aaa
loop
sbb
in
sub
ljmp
mov
lods
dec
cmp
or
aaa
pushf
in
jg
mov
imulb
adc
push
fidivl
mov
xchg
pop
outsb
inc
xchg
adc
push
pop
pusha
mov
jae
cmp
je
jno
idivb
pop
int
std
xor
outsb
icebp
sub
mov
mov
dec
push
xor
mov
lock
enter
inc
out
jle
pop
mov
sub
call
pop
mov
mov
ja
scas
std
jge
jo
sub
cmp
pop
mov
inc
xchg
sub
mov
push
sbb
xchg
sti
pop
mov
and
std
popa
lock
pop
fistl
adc
jb
pop
sub
add
cmp
cld
cli
in
adc
push
cmpsb
arpl
pop
push
ss
adc
fnsave
lcall
ffreep
outsb
ljmp
stos
xor
sbb
in
or
mov
loop
inc
xor
fildl
es
pop
arpl
shll
add
fimull
gs
iret
sti
cs
and
in
push
pop
jp
mov
jbe
sahf
sahf
movsb
int3
shlb
repz
inc
sbb
test
cmp
movsl
iret
outsb
adc
mov
jmp
pushf
and
xor
xchg
inc
inc
ljmp
jmp
enter
mov
push
insl
push
outsl
cmp
mov
pop
xor
ljmp
into
icebp
out
iret
dec
sbb
and
pop
jnp
rcrl
xor
scas
inc
leave
mov
mov
adc
test
and
add
mov
xor
out
in
xchg
adc
lcall
fdivl
mov
fisubrs
cmp
sarl
adc
imul
stc
leave
cmp
imul
pop
cmp
dec
dec
subl
outsl
adcl
loop
movsb
loop
pop
inc
xchg
das
mov
test
mov
fcomps
cltd
mov
bsr
jb
jmp
lahf
lcall
lahf
xchg
xchg
arpl
push
pop
dec
sub
bound
push
mov
push
or
into
fistpl
mov
pop
jl
pop
sub
popa
lcall
xchg
push
decb
lret
sub
sub
ficoms
lea
adc
or
pop
adc
dec
mov
jo
and
les
outsl
adc
pushf
or
push
jp
mov
pop
pop
pop
jp
loop
out
add
push
fnsave
fsts
scas
sti
cmp
add
jmp
push
les
ret
dec
adc
aaa
loopne
inc
iret
jge
fcom
and
iret
outsl
fwait
stos
adc
test
lcall
popf
jns
std
es
pop
add
push
roll
fwait
into
sarb
or
ficompl
mov
adc
adc
mov
mov
sbb
in
mov
jecxz
jnp
adc
jbe
fsts
xchg
mov
mov
sub
clc
int3
js
shr
je
pop
push
or
inc
cli
mov
lock
mov
cs
fsubrp
lods
xchg
popf
cmp
rorl
mov
or
nop
jl
loope
lods
aas
dec
xchg
mov
mov
sbb
dec
or
inc
insb
int3
es
mov
sbb
in
fnsave
popa
mov
ret
nop
cmp
out
dec
pushf
pop
jmp
or
pushf
popf
insb
arpl
add
fcmovne
loopne
dec
adc
bound
xchg
std
adc
and
rcrl
pop
test
shll
lods
insl
pusha
xor
ret
xchg
cmp
xchg
fwait
cld
pusha
scas
addl
sbb
dec
adc
pop
psrad
mov
xchg
dec
insl
sbb
cmp
xor
sub
test
fs
adc
lock
sub
add
push
nop
dec
xlat
pop
pop
cmp
sbb
lret
test
imul
andb
mov
in
mov
orb
mov
cmp
xor
add
out
jge
outsb
out
adc
jnp
adc
ljmp
stos
cs
sub
scas
popf
mov
mov
data16
pop
int
inc
repz
hlt
inc
and
cwtl
jge
inc
fsubrp
call
std
repz
jecxz
and
and
addr16
adc
cld
es
rorb
ficoml
push
xchg
dec
les
cmc
jnp
outsb
jg
sahf
in
pop
cmp
xlat
push
das
ja
push
jl
xor
or
ss
sbb
das
and
rol
add
nop
pop
out
push
xchg
int3
or
or
mov
dec
cs
leave
mov
nop
fwait
add
jno
add
adc
or
out
pushf
mov
leave
and
out
outsb
ret
mov
mov
cmpsb
gs
add
pop
fidivrl
inc
stos
cmpl
jmp
jo
in
rorl
icebp
lcall
in
aad
jmp
je
mov
fwait
mov
cmpsb
pop
mov
add
xchg
push
fimuls
lock
cmc
frstor
das
int
add
xchg
lret
pop
fwait
mov
dec
pop
arpl
pop
push
push
shrb
popa
jbe
xor
sub
xlat
cmc
cmp
push
jg
mov
lret
bnd
inc
in
push
xor
cmc
les
or
inc
mov
popa
mov
movsb
or
stc
push
movsl
jl
arpl
gs
popf
xlat
mov
and
popf
fs
popl
insb
add
cmc
pop
out
lret
mov
and
imull
dec
ret
shrl
add
shl
push
addr16
cmp
xchg
test
xor
sub
and
movsb
in
mov
jge
mov
pop
ficompl
popf
test
stos
sbb
clc
sbb
sub
movsl
das
mov
dec
mov
mov
fwait
imul
cmpsl
inc
adc
sbb
sbb
or
dec
xorl
lods
cmp
push
call
ret
or
mov
cmpsl
jg
aam
lret
jnp
xchg
call
lds
sbb
in
cmp
inc
sub
xor
imul
cmp
jns
pop
cmp
fwait
jecxz,pt
mov
pop
dec
push
sub
outsb
ret
cld
jbe
mov
push
addr16
push
push
in
jae
mov
rcrb
loop
sbb
mov
mov
pop
push
hlt
mov
jne
sbb
mov
fidivs
xchg
in
pop
pop
or
adc
inc
enter
add
jo
sub
push
fwait
in
jle
xchg
xchg
je
aad
xor
insb
cmp
or
push
xchg
add
xchg
pusha
lock
loope
fwait
ljmp
rdpmc
cmp
push
mov
xlat
pop
jo
rol
mov
push
adc
test
je
jnp
sub
in
mov
push
hlt
push
inc
aas
ret
mov
adc
and
xchg
aaa
or
inc
iret
sub
dec
pop
aaa
ljmp
or
roll
pop
xor
cmc
mov
xchg
dec
mov
mov
push
adc
mov
inc
mov
shll
stos
test
inc
loopne
and
repnz
and
sub
sbb
mov
mov
rclb
rorb
lods
cmp
addr16
test
inc
inc
mov
dec
repz
pop
rolb
mov
add
pop
or
jae
xor
movsl
adc
dec
push
ljmp
jmp
xor
sub
jns
xchg
sarl
int3
out
hlt
jge
jge
int
shll
xchg
dec
xchg
push
fsubr
packuswb
mov
lds
xchg
inc
adc
jp
cmpl
lds
jp
or
push
cmpsl
xor
ds
and
stos
push
jb
ljmp
inc
movsb
sbb
pop
inc
mov
rol
adc
scas
subl
sahf
xor
dec
sub
arpl
cmpsb
lods
dec
cld
mov
pop
stos
mov
xor
ds
mov
or
mov
mov
push
or
xor
add
ljmp
xchg
insb
jg
add
xor
dec
fdiv
push
pop
ret
divb
sub
xchg
in
pop
stos
js
jnp
je
imul
into
dec
mov
adc
cli
add
push
call
daa
dec
mov
out
pusha
int3
scas
lcall
aad
push
addr16
aas
mov
add
and
mov
les
sub
loope
xor
add
or
sbb
inc
or
repnz
cmp
test
imul
cltd
cs
push
push
mov
push
rcl
aad
push
addr16
xchg
adc
and
inc
arpl
jl
shrb
int
test
cmpl
sbb
mov
mov
scas
or
mov
mov
fwait
pop
sbb
add
inc
adc
ret
jno
push
sbb
xchg
rclb
mov
call
out
adc
add
popf
add
pushl
xlat
je
add
fidivrs
mov
hlt
add
ds
fwait
jns
inc
or
push
xor
and
mov
pop
test
lock
popf
or
push
jno
das
add
sbb
call
ljmp
push
jnp
mov
and
mov
mov
mov
dec
xorl
xchg
repnz
mov
inc
scas
pop
xchg
sub
jno
push
and
sbb
pop
rcl
add
jae
push
ficompl
add
and
xlat
icebp
pushf
push
xorl
inc
push
lret
add
fdiv
jb
cmp
testb
cli
pop
xor
adc
and
in
test
cli
mov
xor
mov
inc
icebp
push
bound
int3
pop
push
lock
fsubl
xchg
or
fbld
stos
mov
loope
insb
mov
ret
pushf
sbb
or
cmpb
jecxz
divl
stos
mov
and
jbe
imul
mov
aam
lret
fcomps
ret
xor
mov
lea
xchg
data16
bound
jecxz
pop
add
nop
push
mov
ficomps
sbb
push
or
test
insl
push
jg
add
push
cld
mov
xchg
lcall
bound
dec
and
fdivrl
jno
mov
inc
xchg
fwait
add
movsb
loopne
add
dec
inc
or
outsl
ficomps
scas
sbb
jne
stos
adc
pop
enter
or
pop
rcrl
xchg
lods
push
adc
sahf
mov
xchg
push
movsl
adc
cld
sbb
jle
int
repnz
clc
sub
xor
out
add
and
xor
and
int
int3
lods
push
sti
or
push
push
xlat
xchg
jecxz
push
ljmp
dec
mov
clc
jmp
jns
xchg
xchg
adc
mov
fsts
xchg
cmp
push
fsubrs
dec
fs
insb
jo
std
cld
pop
sbb
push
adc
loope
insb
xor
repz
cmpsb
push
pop
push
pusha
lods
xor
lret
push
pop
mov
lret
jbe
lods
test
frstor
in
sbb
aaa
ss
jae
aam
adc
xchg
inc
cld
es
xchg
jo
mov
inc
mov
mov
rorb
fcompl
push
mov
mov
std
inc
popf
lcall
cmpsl
in
pop
ret
add
dec
adc
popa
aaa
cwtl
insb
fidivrl
adc
or
movsb
pop
add
xor
fidivl
xchg
dec
pop
push
dec
in
cmc
push
jo
popl
sbb
ljmp
mov
pop
xchg
in
pusha
inc
rorb
inc
lock
jmp
into
lods
outsl
inc
jg
lds
and
push
adc
dec
mov
jne
mov
ljmp
push
xor
ds
pusha
lahf
enter
adc
ret
or
dec
clc
xchg
dec
jp
std
and
push
pop
push
push
add
sbbb
aad
pop
inc
and
xor
flds
mov
dec
and
shrl
lret
push
negl
sbb
stos
test
int3
stos
or
add
jo
fimuls
mov
enter
push
jle
mov
and
movsb
sbbl
dec
ds
cmp
push
sbb
mov
jns
mov
xchg
out
mov
push
data16
xchg
jmp
inc
lock
mov
es
dec
lret
popf
subb
fldt
inc
arpl
add
movsl
jb
lods
jp
lcall
xor
cmpsl
or
xchg
fdivr
dec
add
add
fists
fsubrs
fidivl
pushf
sbb
jne
add
adc
mov
ret
or
adc
ljmp
adc
lea
in
dec
and
fisttpll
jecxz
fstps
mov
xchg
inc
fiadds
cmp
push
inc
jecxz
test
lahf
es
xchg
or
push
xchg
add
dec
sbb
pusha
outsb
cmc
out
fstl
add
sub
adc
scas
fisttps
sbb
nop
call
dec
jp
push
ja
xchg
pop
cmpsb
dec
sbb
das
adc
push
pushl
test
orb
adc
subb
in
push
or
ror
in
repnz
aas
cmp
stos
in
mov
jecxz
sbb
mov
std
into
dec
mov
cmpps
mov
push
imul
mov
and
test
scas
mov
lods
pushf
mov
or
xchg
inc
cmpsb
notl
iret
push
push
push
out
out
jno
fnstsw
and
scas
adc
sbb
mov
add
xor
mov
sub
pusha
jns
sarl
xchg
cli
jne
sbb
xor
xor
sahf
fcmovne
cmp
push
mov
push
cltd
fsubl
scas
mov
jl
or
mov
jns
lcall
jno
loop
cmp
jne
loop
test
push
and
divl
movsb
jae
cli
xchg
roll
and
scas
jo
push
add
sbb
leave
dec
outsl
out
push
jg
push
fwait
ret
mov
arpl
js
movsb
jae
outsl
push
loopne
inc
js
push
testb
loop
add
call
and
or
mov
push
inc
pop
pop
out
stos
fstl
sbb
mov
idiv
push
les
cmpsl
insl
gs
stos
fcomps
or
mov
cmp
push
dec
sub
shlb
test
pop
pop
push
jno
clc
ljmp
pushf
in
adc
jl
xchg
jmp
sti
xchg
or
inc
xor
cmc
inc
push
fisubl
mov
nop
add
dec
mov
imul
inc
pop
add
pop
dec
xor
xchg
test
adc
push
add
sub
in
or
out
fisttpl
insl
lods
mov
sub
xchg
sar
ja
jb
movsl
dec
test
les
repz
pop
xlat
movsl
jmp
xchg
pop
aas
lods
dec
out
push
dec
jo
enter
dec
int
jge
mov
leave
ja
icebp
add
mov
add
pop
cmp
cmp
fdivp
inc
mov
test
jge
dec
nop
loopne
pushf
mov
adc
fptan
rcr
dec
inc
dec
adc
idivl
in
pushf
mov
imul
test
pop
outsl
leave
hlt
stc
push
test
mov
mov
lock
arpl
push
push
add
test
jecxz
xor
mov
jp
stc
cld
movsl
stos
fistpl
repz
inc
mov
pop
inc
sbb
lods
xor
pop
test
fidivs
aam
hlt
mov
pop
or
popa
dec
iret
xlat
and
sub
js
cmp
aaa
inc
lock
jp
mov
cs
xchg
inc
stos
addr16
cli
ja
xchg
lahf
jg
sti
push
outsb
ficoml
inc
pop
popa
shl
adc
scas
pop
inc
push
int
inc
pop
icebp
cltd
fisttpll
in
mov
xchg
mov
pop
sbb
or
cmpsl
mov
pop
and
in
lahf
mov
icebp
cli
lds
in
int
insb
icebp
mov
fninit
cmp
dec
mov
push
jo
loopne
jbe
out
into
in
xchg
add
movsb
aam
or
icebp
imul
out
call
push
or
enter
in
sub
rolb
push
push
popf
and
cs
mov
je
cwtl
push
lcall
jmp
cli
jno
sub
repnz
mov
mov
xor
cmp
je
in
movsb
ret
sbb
imull
sar
sbb
push
imul
aam
add
push
mov
mov
add
add
sar
jmp
nop
adc
xchg
clc
pop
mov
ldmxcsr
xchg
cltd
lods
stos
mov
sub
loope
ljmp
push
jmp
jb
sbb
push
sti
sbb
adc
bound
and
push
rcll
outsl
mov
popa
pop
jno
inc
jmp
xchg
out
xchg
pop
dec
shlb
inc
pop
mov
jae
call
pop
jg
push
int3
cmp
mov
xor
fcoms
out
xchg
jp
js
mov
adc
loopne
cltd
es
test
or
loope
mov
push
sbb
cltd
fwait
mov
sbb
push
or
and
mov
push
xor
cltd
inc
stos
sub
ret
ljmp
mov
jl
xor
cmp
sub
pop
repz
notb
testl
popf
mov
push
xchg
lret
addb
mov
into
xor
sub
dec
lret
mov
push
ret
push
movsb
push
test
push
jge
clc
mov
or
je
push
pop
inc
loope
adc
bound
inc
lahf
movsb
test
cmp
out
mov
and
add
xchg
gs
cmpsl
inc
das
xchg
imul
fwait
into
push
mov
mov
out
add
push
in
in
adc
cld
cmpsl
popf
fistps
sub
fadds
push
repnz
xor
jb
scas
mov
mov
pop
mov
cwtl
dec
scas
pop
fldl2t
fucomp
xor
repnz
cmpsb
lahf
pop
mov
lret
dec
mov
jne
add
adc
pavgb
mov
mov
mov
ljmp
mov
movsl
mov
dec
jge
adc
jecxz
sti
inc
rorb
scas
xor
icebp
fsubrl
xchg
pop
adc
in
movsb
inc
fistpl
aam
unpcklps
xchg
jbe
pushf
popa
push
in
push
stc
cmp
fstpl
addr16
inc
pop
loopne
imul
cwtl
nop
test
lds
popl
in
repz
dec
pushf
and
icebp
insl
sub
sbb
xor
aas
fwait
dec
push
loopne
jae
lretw
xchg
mov
imul
cmpsl
xor
shrb
out
je
repnz
lcall
lahf
lret
inc
mov
or
sub
js
or
pop
xchg
cmc
push
dec
dec
mov
push
iret
dec
jecxz
inc
fidivrl
push
ss
push
frstor
xchg
cmpsl
add
xchg
scas
imul
fildll
and
cmpb
out
js
jne
dec
mov
aad
jmp
aad
es
xor
movsb
icebp
sbb
mov
push
testl
pop
shll
push
or
ja,pn
mov
or
jnp
lods
dec
mov
push
xor
and
es
loop
add
add
mov
mov
mov
pop
daa
mov
mov
and
mov
in
rcrl
ret
push
cmp
sbb
jg
xchg
in
inc
add
pop
in
clc
mov
popa
jns
adc
or
icebp
xor
int
xor
addr16
negb
mov
cltd
jo
dec
add
mov
inc
frstor
addr16
sub
les
dec
sarl
adc
dec
cs
mov
push
mov
repnz
xchg
test
sbbl
fwait
icebp
jbe
outsb
pop
adc
ja
das
into
mov
insb
or
fadd
int
fadds
cmpsl
mov
orb
daa
xor
sbb
ja
out
sub
mov
rcrb
xor
popf
xchg
push
loopne
dec
add
sbb
mov
movb
sti
mov
lods
orb
cmp
pusha
inc
mulb
aam
jne
and
dec
mov
les
and
jecxz
hlt
xchg
cmpsl
pop
sbb
push
pop
leave
push
jns
xor
sbb
cld
fimuls
push
outsb
clc
roll
add
inc
jmp
mov
dec
xchg
push
in
movsl
jle
repnz
mov
adc
cwtl
pop
es
mov
and
cmp
rorl
mov
add
mov
dec
das
fnstcw
int
cmc
mov
mov
pop
lods
divl
das
pushf
pushf
sbb
andl
aaa
movsl
lret
call
sbb
enter
and
aas
pop
sbb
push
std
rol
inc
pop
cmp
mov
cmpsl
push
mov
jle
test
cwtl
inc
push
loope
jmp
jecxz
leave
jns
jl
sub
lods
imul
push
cmp
lods
icebp
dec
retw
callw
mov
xor
xor
xchg
or
or
mov
xchg
in
loope
sbb
mov
or
sbb
loopne
mov
inc
xchg
std
mov
pop
add
and
call
mov
dec
scas
decb
sahf
jae
sub
jg
dec
movsb
call
ja
clc
scas
imul
xchg
mov
mov
pop
pop
mov
jge
fists
pusha
repz
insb
jo
push
jns
js
cmp
mov
xchg
mov
popf
arpl
mov
insl
ja
sub
cmpsl
xor
xchg
icebp
xchg
push
lcall
pop
ficomps
xlat
out
add
icebp
jb
push
mov
insb
push
fldcw
sarb
nop
xchg
add
xor
adcb
inc
dec
or
dec
sbb
push
pand
lahf
xchg
repz
jne
fcoml
leave
cli
daa
aas
or
mov
cmpsb
ret
ficompl
aas
aam
xchg
aaa
adc
cmp
jo
out
ss
fwait
push
cmp
push
loop
cmp
or
push
ja,pt
inc
sbb
pop
and
xorb
mov
lcall
adc
cmpsb
xchg
ljmp
fcomp
out
jp
ret
ja
xchg
cmpsb
loope
sub
xchg
and
cmp
ret
sahf
outsb
cli
adc
pusha
mov
mov
insb
pop
ja
shlb
add
loope
mov
and
push
arpl
add
mov
pop
cmpsb
or
dec
mov
xorl
mov
fnstsw
sub
daa
add
sbb
or
enter
fcmovnbe
or
jge
mov
cmp
inc
pusha
jnp
decb
dec
shl
js
or
inc
pop
pop
pop
cmp
mov
mov
sbb
fs
sub
popf
jnp
pop
pop
and
push
lret
jmp
fnstenv
int
into
push
test
lods
loop
and
push
fiadds
mov
adc
cli
cmp
lret
xchg
rclb
fwait
xlat
clc
lret
mov
je
jae
mov
xchg
push
fldcw
dec
adc
push
out
lods
or
lcall
cs
jno
xchg
int3
out
test
loopne
es
lea
sti
divb
push
dec
xor
jbe
push
cwtl
adc
mov
dec
mov
mov
mov
rcr
popa
stos
out
cld
inc
and
jmp
movsb
jp
mov
insl
mov
outsl
cwtl
repz
and
pop
add
loopne
cli
push
daa
ret
jne
cld
xchg
cmp
movsl
ljmp
cmp
mov
lock
repz
in
shlb
pop
pop
push
mov
test
movsl
stos
and
ffree
xor
mov
or
push
adc
hlt
out
and
mov
mov
mov
stos
int
repz
jns
sarl
bound
lahf
in
xchg
and
dec
mov
mov
addr16
mov
xor
scas
push
pop
inc
sub
xor
cmp
inc
fisttpll
fs
and
or
mov
clc
xchg
mov
cmc
jo
int
pushf
and
add
pop
pop
lcall
ljmp
imul
movsb
aam
pop
scas
fldenv
xchg
xchg
inc
sub
sbb
in
jg
adc
loop
pop
pop
testb
icebp
mov
mov
testb
leave
fdivl
cmp
or
insb
jmp
lods
ja
push
lret
int
sbb
xchg
mov
pop
inc
mov
lret
dec
out
adc
and
mov
push
jno
out
add
adcb
call
mov
inc
mov
jp
sbb
sbb
pop
xlat
or
cmp
fnstcw
into
jg
popa
sub
jb
push
clc
xchg
ret
popa
sbb
cltd
dec
xchg
leave
mov
mov
and
inc
mov
mov
push
jbe
js
int3
int
mov
adc
jno
nop
fimull
adc
sbb
mov
adc
sub
cwtl
push
sub
inc
jg
pop
aaa
fimuls
fldt
ret
cltd
out
test
dec
fsub
fmulp
mov
lcall
pop
inc
imul
roll
mov
pop
es
cmpl
xor
sub
jb
cmp
add
pop
push
out
or
out
movsl
pop
dec
xor
js
out
aas
pop
pop
sahf
add
adc
lds
std
aam
sub
cmp
andl
test
fildll
cmpl
loope
fldt
js
aam
sub
subl
ret
sti
and
adc
fisttps
enter
das
sbb
and
loopne
outsb
in
xchg
pop
adc
cmp
popa
and
in
orb
mov
mov
outsl
clc
in
out
daa
data16
jl
jo
fsubrs
rcl
jo
dec
xorb
call
jae
add
inc
sbb
add
jp
push
add
jne
mov
cmp
bound
sbbl
jmp
adc
ljmp
xor
or
stos
cli
mov
or
push
test
jl
cli
das
data16
jmp
or
mov
bnd
xchg
sti
sahf
add
stos
and
mov
dec
je
orl
or
pop
mov
cmpl
imul
xor
xor
fdiv
dec
aam
fwait
lahf
aam
push
xor
lods
cwtl
fwait
stos
cmp
gs
sti
mov
sbb
or
add
cmp
rcll
jbe
stos
xor
lret
cmpsb
push
cmp
mov
fs
pop
scas
jb
dec
push
movsl
pop
add
push
setno
fpatan
jmp
jge
push
adc
out
and
push
out
pop
xchg
inc
jecxz
pop
negb
int
out
shlb
pop
and
fimull
add
sub
jle
dec
adc
mov
mov
mov
ret
push
lods
gs
je
je
sub
cmc
fmull
mov
rcll
xchg
pop
cmp
mov
call
psubsb
sahf
inc
push
dec
add
lods
inc
addb
add
popf
or
inc
sbb
adc
mov
xchg
rorb
in
ficomps
js
mov
jae
stos
add
lret
stc
mov
stc
rcll
lods
faddl
fisttpl
pop
jge
mov
add
and
imul
ret
sub
add
rorb
ret
iret
leave
loop
call
push
int
push
xor
fsubl
pop
clc
jg
mov
ljmp
sbb
out
ds
mov
xchg
ds
add
sbb
mov
fcomps
fwait
imul
in
out
arpl
pop
push
cmp
ret
outsl
nop
in
or
repnz
lea
push
sbb
push
lcall
icebp
pop
dec
out
and
test
aaa
sub
xchg
int
out
aam
pop
arpl
jae
add
xor
sbb
cmp
aaa
aad
cmp
cltd
and
push
push
cld
test
add
push
das
aas
fnstenv
ret
mov
sahf
dec
fs
cmp
cmpsl
testl
inc
mov
call
push
jmp
push
lahf
ljmp
aaa
jle
push
ret
jno
out
xchg
lret
add
xor
pop
mov
push
test
lahf
jmp
mov
out
adc
sbb
aad
test
in
xor
std
test
pop
pop
imul
jp,pn
mov
or
scas
int3
pop
lcall
mov
mov
outsb
xchg
or
lret
fiaddl
outsl
jo
imul
data16
in
inc
mov
sbb
adc
test
jns
push
xchg
gs
pop
out
pop
sub
mov
push
shrl
dec
ret
jmp
sub
lahf
sub
in
insl
imul
fisubs
fcomps
insb
mov
test
adc
jbe
movsl
xchg
lods
lret
adc
mov
idivb
jo
pop
jbe
outsb
iret
loope
test
and
jle
jge
mov
fsubrl
inc
outsl
jbe
je
dec
cmp
xor
cmp
xor
ss
aad
mov
popa
sub
jb
fisttpll
test
mov
pushf
pop
xor
je
pop
imul
movsb
xchg
jae
and
or
cli
push
push
pop
clc
repnz
cmc
or
inc
test
addr16
addr16
add
js
sbb
mov
mov
dec
sub
dec
pusha
pop
and
out
clc
dec
mov
outsb
jae
jle
fiadds
mov
imul
nop
lds
inc
lock
movsb
cmp
in
aam
scas
mov
movsb
jnp
out
adc
add
insl
leave
and
aas
data16
sbb
lcall
push
mov
outsb
push
shll
mov
push
loop
insl
push
mov
test
adc
add
fcompl
cmpsl
das
mov
pop
and
pop
cmp
pushl
jb
insb
pop
arpl
pop
fldenv
ss
xchg
pop
js
fsubl
mov
ret
and
push
lods
mov
jecxz
adc
sbb
jl
pop
aaa
mov
test
mov
or
dec
push
cs
in
lret
out
sbb
mov
jbe
sbb
mov
aad
pop
out
and
sbb
mov
por
inc
push
jle
test
subb
dec
pop
adc
aad
shlb
cmpsb
mov
sub
adc
shl
cmc
pop
mov
pusha
cmc
lcall
xchg
pop
lea
or
shlb
cmp
roll
arpl
mov
add
inc
or
fiaddl
push
jle
cmpsb
dec
test
divb
lret
cmp
aam
inc
inc
jmp
ret
sbb
cmp
push
pop
sub
enter
mov
andb
filds
pop
cmp
mov
xor
pop
inc
icebp
test
push
xchg
mov
mov
cmp
daa
sbb
inc
or
and
cmp
jge
inc
or
mov
inc
and
dec
into
adc
and
stc
gs
sbb
insl
add
stc
jae
sbbl
addb
and
sbb
cmpsl
pushf
stos
mov
push
and
insb
imul
inc
icebp
aam
mov
mov
xor
stc
in
push
popf
imul
push
pop
sub
data16
scas
xchg
mov
push
loop
and
cwtl
imul
xchg
dec
out
out
push
mov
adc
lea
jg
mov
cmpsl
add
leave
xor
add
mov
scas
xor
mov
and
jg
jno
or
cmpsl
sti
mov
mov
testl
sbb
xchg
or
sbb
pop
mov
push
shll
int
jo
adc
inc
es
leave
pop
and
imul
popa
xchg
mov
pop
mov
sub
sti
stos
pop
mov
aas
dec
leave
xchg
sub
lcall
pop
mov
jle
xor
ss
fidivl
mov
lret
lahf
push
adc
jge
repz
adcb
push
fnsave
jb
clc
cwtl
mov
and
mov
gs
lock
sub
movsb
lods
jae
movsb
cmp
or
loopne
dec
leave
inc
pop
inc
outsb
jno
add
push
xchg
rcrl
imul
mov
stos
mov
fwait
push
inc
dec
sbb
je
ja
sarl
gs
pop
in
fstpl
ret
cmp
push
jns
sub
arpl
pop
data16
popa
scas
test
sub
sub
and
std
inc
in
push
jl
clc
xchg
mov
ss
mov
mov
fistl
jmp
or
cli
dec
jmp
dec
out
fidivs
shrb
insl
or
add
push
xchg
test
in
aam
and
cs
ret
dec
and
lret
pop
and
enter
call
mov
rclb
in
jbe
leave
mov
test
orl
fucomi
jb
cmp
dec
mov
adc
pop
mov
fisttpll
aaa
or
add
scas
inc
mov
enter
out
xorl
pop
aam
jb
cmp
mov
adc
call
popa
and
maskmovq
notl
push
hlt
or
lret
sub
xor
test
add
sbb
popf
dec
stos
popf
idivb
mov
jl
repz
sahf
or
push
add
jp
sbb
repz
mov
or
adc
cs
cmp
out
into
addr16
jg
enter
fisubrl
and
lods
icebp
sti
cmp
jle
insl
idivl
sbbb
xor
cmp
push
lds
cltd
popa
in
push
dec
xchg
cmp
out
loopne
and
rcll
adc
sbb
xchg
jg
popl
mov
fisttps
pop
pop
loope
nop
mov
js
dec
sarb
scas
sub
fmull
shll
xchg
mov
dec
adc
xor
jge
inc
xor
push
pushf
nop
inc
jge
pop
in
sar
jl
ret
add
lahf
imulb
sub
bound
jae
pop
enter
mov
inc
mov
fnstenv
jnp
add
std
out
das
movsb
shrl
cmpsb
sub
out
cmc
mov
and
imul
mov
clc
and
insb
mov
pop
pop
call
cmpsl
repnz
pop
dec
andl
rcrl
daa
cwtl
mov
jns
les
xchg
stc
loop
sarb
mov
ficoms
les
and
mov
mov
inc
flds
mov
outsl
rorl
mov
inc
push
push
nop
mov
lret
scas
xchg
addl
das
in
push
stos
push
mov
icebp
add
sbb
jns
cmc
sbb
xchg
cmpsl
sub
pop
stos
scas
movsl
pop
sbb
shlb
stc
sahf
mulb
movsb
pop
aaa
push
cli
leave
sub
bound
sub
sahf
push
sbb
insl
dec
xchg
jecxz
and
cmp
jmp
dec
mov
or
adc
lock
dec
in
rcr
xchg
push
and
test
cmc
aas
lahf
jge
inc
mov
dec
movl
pop
sub
jne
and
call
out
es
add
imul
daa
cmc
xlat
enter
xchg
fsubrl
mov
mov
aaa
pop
fimuls
idiv
mov
add
mov
scas
add
ja
mov
shlb
mov
or
repz
test
xor
xchg
andb
xchg
dec
mov
sti
jmp
jno
aad
test
pop
add
or
or
jo
fucomp
addr16
jge
dec
mov
xor
ljmp
icebp
jle
push
push
clc
adc
aas
aam
push
xlat
cli
mov
ret
in
clc
push
fnstsw
add
or
popa
mov
push
mov
rcrb
loopne
pushf
movsl
mov
les
int3
lods
and
clc
call
cmp
jmp
xlat
mov
mov
in
rcrb
xchg
cmpsl
in
mov
sub
ljmp
jnp
mov
mov
and
adc
mov
mov
lcall
pop
lret
test
cmpl
repz
dec
lret
mov
lcall
xor
pop
push
jno
push
std
xor
xchg
mov
leave
ret
aaa
inc
cmp
pop
push
dec
ds
sub
stc
push
sbb
xor
or
repnz
jne
ffree
out
outsl
addb
fwait
test
jbe
or
xor
cmp
jl
jo
iret
cli
cmp
adc
pop
sub
pop
sahf
leave
xor
inc
mov
inc
stc
xor
js
mov
xor
add
test
cs
and
fists
mov
dec
sbb
nop
sub
mov
push
push
aam
in
and
mov
inc
mov
popf
roll
js
jo
xchg
add
aas
movsb
xchg
and
pop
add
jg
jbe
enter
push
lcall
jae
hlt
jno
jae
cmp
lea
mov
add
xor
mov
icebp
fdivs
imul
sbb
sbb
lods
out
fcompl
xchg
adc
mov
or
jnp
sbb
imul
or
push
sahf
inc
or
adc
xchg
enter
xorb
call
je
jmp
xchg
je
push
in
arpl
gs
out
jne
cmp
pushf
push
dec
mull
subb
fimuls
vpsllw
filds
dec
ret
testl
lods
xchg
sub
mov
in
outsl
jecxz
ret
inc
scas
icebp
nop
jp
ljmp
cltd
les
lods
scas
sbb
fwait
mov
test
jns
pop
push
in
fwait
insl
hlt
mov
dec
xor
lret
ljmp
icebp
cmc
add
pushf
aaa
cmpsl
mov
mov
fs
pusha
dec
and
js
inc
das
mov
ds
stos
es
popf
cld
pop
jo
stos
and
xor
pusha
cmpsb
pop
lret
push
dec
sarb
out
cmp
add
mov
pop
mov
mov
push
nop
adc
in
push
mov
mov
jmp
or
pop
mov
push
out
lock
sub
lcall
fwait
out
call
ds
ret
inc
lock
sbb
cmpsl
xchg
imul
lock
sti
xchg
jp
adc
pop
leave
add
hlt
mov
push
adc
push
sub
inc
dec
js
nop
bound
xor
lahf
pop
or
mov
leave
enter
sbb
cmpsb
lcall
dec
push
ret
cmp
cli
in
pop
and
mov
and
cli
xorl
in
jb
ret
pop
das
sub
pop
adc
pop
ret
ja
dec
outsl
flds
add
cmp
ss
adc
or
cmp
xchg
je
jp
sbb
int
clc
jl
xchg
mov
pusha
xchg
outsl
das
mov
out
cli
inc
push
mov
mov
lret
imul
push
fs
adc
mov
sarb
rcll
test
push
sar
inc
dec
std
cmp
jnp
sub
jnp
lret
push
lods
dec
lods
arpl
aaa
mov
mov
push
testl
adc
jmp
movsl
inc
dec
add
and
ds
xchg
sarb
in
in
clc
repz
mov
sub
pusha
xchg
cmp
jle
cli
lods
clc
xchg
push
pop
rcrb
ret
pop
add
pop
xchg
adc
cmp
jecxz
cmp
leave
lret
push
and
jmp
xchg
mov
cltd
adc
es
loopne
mov
add
loopne
test
sbb
test
mov
das
sub
and
xorb
ss
sub
leave
cmpsb
std
aad
lods
adc
cli
out
call
add
in
jmp
movsl
push
cmc
or
and
adcl
aad
mov
jmp
adc
inc
cmp
pop
aas
xlat
mov
adc
gs
xchg
mov
shrb
je
mov
test
jno
roll
jae
add
inc
daa
jmp
push
and
cltd
and
shr
int3
mov
fwait
mov
int
pusha
fmull
inc
xchg
xor
mov
xchg
cwtl
lods
rcrl
aam
mov
dec
jo
shlb
xor
or
and
imul
out
jmp
push
xor
sbb
jo
nop
push
adcb
cmp
sbb
sbb
sti
cmpsb
jae
out
inc
pop
sub
stos
fxch
rclb
popw
dec
jb
jae
mov
xor
xchg
imul
int3
int
out
pop
adc
cld
addr16
mov
add
adcb
jl
mov
pop
dec
dec
xchg
and
sti
push
imul
loope
push
cmp
mov
pop
ret
mov
jmp
and
mov
inc
push
scas
and
leave
push
flds
xlat
pop
fnstenv
fs
lock
arpl
and
in
pop
nop
enter
imul
mov
dec
mov
jle
aas
incb
int3
and
pop
and
faddp
pop
dec
test
test
loope
cs
inc
mov
mov
mov
push
inc
stos
and
ficoml
jno
clc
or
add
mov
imul
ret
rep
inc
int3
mov
orl
adc
cmpsb
js
lods
std
pushf
cmc
ret
stos
ret
push
addr16
aaa
data16
in
cmpsb
lcall
pop
xor
and
gs
iret
out
mov
xchg
xchg
jae
push
push
adc
fdivrs
out
inc
fld
daa
test
pop
jmp
jg
popl
adc
int3
inc
cmc
push
test
fsubl
mov
jae
mov
cmpsb
and
or
pop
jbe
or
xorl
dec
das
xchg
and
adc
cmp
pop
adc
sbb
mov
inc
es
pop
lahf
mov
popf
leave
xchg
jl
fdivp
das
popf
ljmp
nop
or
inc
imul
scas
mov
mov
movsl
cltd
mov
mov
inc
sbb
pop
inc
fcomi
mov
fnstsw
mov
mov
lock
es
jl
ret
push
mov
push
jbe
and
rcll
push
or
sbb
jp
iret
nop
mov
leave
mov
call
jl
orb
je
in
mov
or
adc
mov
sub
cli
inc
push
sbb
inc
inc
jns
mov
push
jle
adc
pusha
jo
dec
aas
data16
test
adc
mov
adc
xchg
sahf
xchg
aaa
pop
stos
test
push
es
das
hlt
and
inc
into
jg
stc
mov
mov
or
std
sbb
cwtl
sbb
and
jbe
mov
sahf
adc
cmpsb
dec
pop
stos
push
jp
das
cmp
mov
cmpsb
push
push
fnstenv
repnz
in
std
addr16
jbe
decb
jne
and
testb
movsb
pop
jle
dec
xchg
pop
adc
in
mov
inc
add
loope
mov
pop
jl
push
cmp
aaa
out
sub
cmp
and
inc
and
stc
inc
add
xchg
sub
movl
test
sbb
pusha
adc
mov
lods
es
pop
mov
stos
xchg
mov
mov
push
jge
fistpl
jle
std
out
out
dec
rcll
xchg
adc
dec
mov
repnz
pop
push
stos
rcll
lahf
mov
xchg
pusha
cmpsl
and
in
ret
sahf
inc
aaa
ret
sub
pop
lods
sbb
push
push
ret
insb
xchg
pop
sbb
jle
push
int3
mov
mov
fbstp
adc
add
or
fisttpl
xchg
shlb
push
fsubr
fstp
repnz
es
and
xchg
test
push
adc
fsub
xor
push
sbb
add
pop
mov
imull
xor
filds
das
sub
sbb
or
mov
ljmp
xlat
les
sti
loop
mov
fcompl
mov
mov
jmp
ss
push
cmpsl
out
sub
push
inc
add
iret
lea
sbb
push
ljmp
sbb
xchg
rcl
xchg
pcmpgtw
sahf
xor
int3
movsb
xchg
dec
out
adc
enter
jnp
pop
jno
daa
pop
fsubr
mov
mov
lahf
std
adc
outsb
adc
ljmp
adc
or
loop
adc
mov
inc
mov
adc
daa
push
lret
mov
mov
insb
cmpsb
pop
std
je
stos
fndisi(8087
fldt
cmp
cld
mov
mov
rol
add
in
and
cltd
jno
nop
xchg
xor
aad
lcall
clc
lods
daa
hlt
loopne
push
xor
push
and
inc
call
pop
push
dec
inc
fstpt
cmp
sbb
in
push
adc
imul
sbb
sbb
push
imul
mov
test
push
bound
dec
popa
xchg
movsb
loope
mov
mov
lcall
jle
jle
xchg
lock
in
fdivrs
aad
pop
insl
mov
or
cmp
mov
lods
in
stos
lods
dec
jnp
repnz
or
das
insl
pop
sub
xchg
dec
push
cld
popf
cli
daa
lea
aaa
pop
jb
dec
ret
aas
addb
push
pop
fwait
lret
test
mov
insl
xor
sub
rolb
pop
dec
in
and
ret
test
lret
insl
push
lea
dec
shlb
inc
cmp
cmp
and
mov
mov
jge
xor
das
dec
push
add
adc
pop
cmc
add
cmp
lods
mov
jnp
and
in
xor
mov
and
out
mov
cmpsl
mov
jg
stc
adc
and
idiv
fucom
lods
rcll
cltd
ljmp
rcll
xlat
sub
and
cmp
pop
xor
shl
mov
mov
mov
dec
outsb
in
sub
scas
je
pextrw
cmpsl
test
rorl
fsts
xor
scas
jp
cmp
scas
mov
push
add
cmc
rorl
leave
and
lock
or
scas
pop
vmwrite
inc
stc
test
mov
jb
pop
xchg
mov
jmp
outsl
push
mov
jnp
nop
leave
out
stos
add
cwtl
stos
mov
jno
insl
xchg
test
cmpxchg
rolb
dec
movsb
dec
adc
cs
mull
out
je
sub
data16
xor
cmpsl
outsb
push
icebp
jecxz
mov
je
cwtl
xchg
xor
inc
cld
leave
pop
dec
mov
fcomip
add
mov
xor
repz
pushf
sbb
mov
fmuls
add
jge
sbb
push
and
cmp
mov
cmp
pop
jmp
or
sbb
cmp
out
push
fisttps
lret
cld
filds
stc
mov
mov
and
int
mov
cmp
lret
fstp
and
cmp
pop
into
fcoml
in
jmp
xchg
xchg
test
repz
push
add
mulb
xor
ljmp
ficompl
push
xchg
xlat
jo
lds
rorl
xchg
push
inc
jecxz
xchg
xchg
lea
adc
or
pop
lea
sti
xchg
xchg
and
sbb
popf
dec
out
add
and
test
or
sub
inc
xor
dec
cld
and
test
cmpl
add
cmp
loopne
pop
fadd
add
mov
adc
gs
pop
sub
fisttpll
scas
xchg
jnp
loop
or
mov
jo
cmp
insl
daa
sbb
testb
ds
icebp
leave
das
shlb
jmp
sub
imul
inc
xchg
fidivl
cs
ss
push
dec
jg
lds
sbb
sbb
ja
xor
add
into
mov
rcl
lahf
or
ret
jg
fisttpl
xchg
xchg
mov
add
jp
pop
mov
inc
inc
arpl
fidivrs
jg
test
das
xchg
in
sub
roll
mov
jl
test
jge
ret
cmp
jne
push
push
pop
mov
jg
dec
out
mov
popf
jmp
xor
jb
movsb
aam
aaa
jb
inc
ljmp
push
jae
and
xchg
into
mov
and
and
aam
outsb
inc
or
aaa
icebp
mov
in
mov
jp
or
inc
fists
or
ja
mov
lds
scas
cli
pop
pushf
mov
adc
jg
or
mov
cmpsb
cmp
lods
ja
push
push
mov
std
pop
fimuls
dec
pop
mov
and
xor
ljmp
jg
jbe
lcall
mov
aad
jg
mov
xchg
and
dec
xlat
in
inc
pop
outsl
mov
jecxz
inc
jl
fsubr
call
or
imul
pop
fs
pop
push
rorl
popf
dec
mov
push
lods
ljmp
icebp
xchg
adc
inc
pop
mov
inc
popa
stc
lret
lea
inc
nop
shl
mov
mov
push
int
fwait
add
sti
out
and
xchg
insb
adc
imul
xor
and
pop
push
jno
ljmp
jnp
test
mov
mov
mov
and
pop
add
fwait
mov
xchg
sar
test
hlt
mov
popf
outsb
out
ficomps
inc
movsb
push
les
jl
and
push
stc
into
fisubrl
pop
xchg
leave
jmp
sub
fisubrl
and
or
hlt
dec
sbb
into
xor
cmp
rcll
int3
js
mov
inc
adcb
pop
int3
daa
lret
pop
push
mov
push
jl
cmc
lods
pop
sub
stc
xchg
cmpb
aaa
mov
stc
daa
outsb
lock
dec
add
imul
sbb
dec
divl
cmp
or
cmpsb
mov
jl
cmp
ljmp
lea
inc
loop
mov
mov
ret
mov
mov
mov
repnz
mov
add
addb
test
pop
sbb
cmp
mov
lcall
xorb
dec
mov
int
dec
sbb
pop
out
pop
push
bound
or
cmp
push
dec
lcall
push
loopne
in
add
sub
fwait
imul
das
shl
pop
lret
adc
fsubrs
jns
mov
lods
leave
sub
dec
jno
outsl
and
aaa
mov
xor
repnz
sub
xchg
mov
xor
cmp
in
movsl
mov
mov
ss
sbb
sub
popf
mov
pop
mov
jnp
dec
sbb
pop
mov
aam
push
or
aad
mov
ds
mov
nop
push
sahf
rcrb
mov
fldl
inc
test
and
mov
enter
dec
jecxz
popf
mov
outsl
aad
adc
mov
loope
mov
in
les
enter
popf
je
roll
cmp
test
or
inc
setns
xchg
xchg
cmp
jmp
ljmp
add
in
cli
nop
in
ret
adc
or
push
mov
les
movsl
sub
cs
call
dec
shlb
mov
jmp
mov
scas
popf
and
sub
dec
vcvtps2pd
xor
les
and
push
arpl
mov
or
add
lahf
ds
pop
inc
lock
incb
stos
mov
scas
cmpsb
cmp
dec
repnz
stos
pop
mov
push
mov
lcall
std
fwait
pop
add
icebp
lods
or
pop
ds
fists
xlat
pushf
adc
iret
aas
fs
ds
test
xchg
mov
les
test
jg
pop
insl
pop
outsl
ja
aam
add
mov
jnp
int
fdivl
pop
pop
je
arpl
gs
lcall
add
mov
test
xchg
shrw
or
cld
adc
mov
test
pop
sub
jmp
sub
lock
flds
adc
pop
mov
push
or
cs
sti
dec
inc
sbb
sub
push
or
mov
or
add
mov
pop
dec
dec
je
mov
aaa
xor
pushf
jecxz
cli
mov
pop
mov
nop
jmp
xor
cmp
daa
sub
out
rclb
pop
dec
jle
in
xchg
add
inc
push
out
insl
scas
cmp
mov
mov
sub
stos
mov
xchg
das
jno
jbe
sub
sub
ljmp
lds
je
push
xor
icebp
xor
push
push
adc
movsb
mov
and
dec
je
ja
into
adc
arpl
in
xchg
mov
adc
stos
push
sbb
xchg
jne
orl
dec
cli
gs
fs
sub
fstps
pop
rcrl
aaa
data16
fmull
jne
das
add
pop
push
es
js
mov
mov
add
adc
jmp
je
pop
lods
push
mov
mov
dec
jecxz
push
roll
xchg
ja
fscale
sub
jnp
jo
dec
fdivrl
push
in
aas
add
sbb
cmovnp
dec
test
push
pushf
cmp
mov
sub
xlat
outsl
cmp
out
add
cmp
fldenv
popf
or
mov
xchg
insl
sbbl
out
out
nop
sbb
xchg
add
les
push
xor
dec
lret
pushf
mov
outsb
adc
shll
adc
je
push
mov
imul
sub
sub
hlt
call
in
icebp
lea
divl
adc
loopne
mov
or
das
jge
lret
shll
sbb
sub
dec
outsl
jae
fbstp
aam
pusha
sbb
xchg
mov
pop
mov
pop
je
fidivs
jns
xchg
cs
int3
enter
inc
or
imul
push
xchg
inc
pushf
outsb
inc
inc
add
jo
cmp
cmp
xchg
fnsave
jbe
or
mov
jle
popf
insl
fistpl
sbb
outsl
cld
xchg
sahf
sbb
jbe
nop
mov
jge
leave
das
add
xor
fcomps
fwait
and
hlt
push
das
data16
int
out
cmpsb
adc
loope
mov
shlb
pop
ljmp
cli
jecxz
jne
jns
push
push
hlt
lahf
jns
cmc
dec
or
adcl
roll
fcomps
fwait
call
cmp
jno
shrl
gs
les
xchg
or
rcll
push
insw
nop
cwtl
add
mov
xacquire
mov
in
jmp
sar
cmpsl
roll
sub
adc
call
xor
mov
pushf
lahf
jge
notl
rcrl
enter
imul
adc
fsubrl
pop
popa
xor
jl
pop
mov
mov
subb
pop
inc
ret
popa
or
lret
in
pop
cmp
dec
sub
movq
cmp
adc
mov
out
lods
cmpsl
xlat
loope
pop
loope
mov
test
dec
pop
out
test
xchg
push
sbb
outsb
clc
sub
mov
xor
fdivl
dec
pop
jle
push
out
cmp
add
ss
cs
ljmp
jmp
jg
xor
insb
pushf
add
or
movsl
insl
out
sub
iret
scas
js
orb
sbb
js
push
mov
mov
pop
fwait
mov
sub
aad
dec
adc
mov
xchg
xchg
push
add
cld
inc
enter
leave
cmp
adc
popl
hlt
mov
mov
sub
push
leave
jp
push
es
pop
out
sbb
mov
or
fistpll
or
loop
cmp
cmp
outsl
mov
sbb
mov
imul
sbb
mov
inc
lods
sub
fildll
jmp
or
cli
sti
xchg
push
or
ret
aaa
shrl
ljmp
orl
push
ss
add
push
rcl
sbb
mov
stc
in
mov
jmp
and
pop
inc
or
lds
shlb
xor
sub
lret
daa
stos
arpl
pop
inc
mov
jl
adc
imul
subb
pop
push
insl
inc
xchg
xor
fadd
xchg
shll
pop
jg
pop
cmp
stos
and
inc
pop
in
pop
inc
dec
adc
repnz
out
push
add
mov
dec
jecxz
repz
dec
jle
or
jno
push
sbb
sbb
in
shrl
pop
and
cld
sbb
aad
push
mov
xchg
bound
mov
lea
ret
hlt
sbb
nop
mov
mov
mov
aad
dec
inc
int
add
push
lods
add
es
sti
cmp
ss
mov
sub
sub
mov
dec
jg,pn
mov
stos
outsl
fcoml
and
push
pop
das
movsb
adcb
push
sbb
scas
in
inc
test
int
stos
mov
js
sti
mov
inc
dec
xor
in
xchg
xchg
repz
bound
mov
mov
pop
dec
ror
pusha
push
pop
mov
mov
push
mov
pushf
ret
push
ja
and
adc
adc
je
pop
cld
cltd
or
movsb
dec
fistl
mov
or
data16
xlat
push
cmpsb
mov
cmp
fnsave
inc
sti
std
jmp
mov
mov
pop
into
rdpmc
sbb
cmp
bound
mov
mov
push
cmp
xlat
jb
and
pop
push
adcb
fsubs
enter
pop
mov
mov
es
in
sub
sbb
dec
mov
sbb
insb
hlt
or
clc
das
xor
scas
push
sbb
imul
out
popa
xchg
call
outsl
loop
je
je
dec
mov
jge
mov
pop
mov
push
jbe
xchg
inc
test
orl
pop
push
mov
movb
pusha
mov
mov
cmp
sbb
out
xor
insb
loopne
cmp
mov
shll
sbb
out
sbb
or
adc
ret
sti
jo
stos
aas
push
sub
stos
out
outsl
or
sub
cltd
inc
dec
popa
in
cmpsb
cmp
testb
cld
popa
xchg
push
pop
fs
imul
xchg
pop
and
rcr
inc
repz
jne
xchg
fwait
negb
mov
hlt
xor
cld
addb
aas
push
jae
jb
sarl
scas
dec
jnp
or
sarl
pop
lock
sub
jbe
cltd
icebp
in
mov
pop
or
mov
mov
or
test
leave
insb
mov
fcoms
and
test
mov
sub
xchg
mov
and
cltd
icebp
pop
subl
jb
adc
jp
sti
mov
cld
js
add
test
inc
adc
and
cmp
stos
dec
jo
or
dec
mov
sub
out
ss
adc
push
addr16
mov
and
imul
or
dec
imul
mov
std
insb
mov
insl
cli
and
imul
and
mov
cmc
hlt
push
nop
xchg
dec
movsb
in
mov
or
imul
adc
mov
mov
mov
lods
lcall
xchg
xlat
insb
mov
es
xchg
mov
int
lds
int
insl
shll
dec
push
arpl
sahf
ficompl
test
mov
aas
sbb
push
loope
mov
inc
loope
stos
negb
adc
jne
adc
adc
xor
call
mov
dec
inc
xor
sub
xchg
push
loopne
push
sbb
es
cli
sub
xlat
es
insl
je
push
inc
leave
mov
sbb
xor
jns,pn
xchg
test
jecxz
push
pop
jge
add
push
movsb
cmp
cmp
push
mov
enter
inc
hlt
mov
into
clc
sub
mov
call
shrb
jo
mov
mov
mov
cwtl
inc
and
shl
gs
mov
dec
enter
lcall
out
test
in
mov
xchg
xchg
inc
pop
into
hlt
in
pushf
jb
in
es
inc
sub
xchg
call
inc
imulb
mov
sub
pusha
int
xchg
rorb
and
in
and
ret
inc
or
outsb
jno
popf
jns
push
or
mov
and
sub
jl
xchg
sub
inc
inc
call
sbb
out
lods
enter
arpl
sbb
xchg
in
add
pop
xchg
fs
inc
ja
aaa
popf
lahf
ret
mov
pop
lock
jmp
inc
test
cld
cmpsl
inc
sahf
in
arpl
xchg
mov
xorb
push
mov
stos
or
aad
xchg
add
xchg
rcrl
push
mov
xor
push
and
and
xor
mov
nop
in
push
ss
aas
or
xchg
xor
and
cld
and
adcl
lods
xlat
sbb
ret
cld
jmp
and
aam
cli
mov
mov
repz
push
cmc
repz
jo
pop
test
imul
inc
or
or
ret
scas
add
dec
push
and
cwtl
pop
pop
jg
jmp
push
or
sub
pop
shrb
pop
adc
cld
mov
aas
mov
push
add
cltd
lock
inc
xchg
push
out
fisubrl
lods
int
mov
fistpl
shl
aaa
out
xchg
arpl
add
pop
and
int3
sub
ds
fstpl
mov
fimull
adc
sbb
push
mov
xor
arpl
mov
or
mov
test
leave
sbb
mov
fs
mov
imulb
sub
cmp
cmp
dec
mov
and
bswap
cli
adc
ret
imul
dec
xchg
add
mov
loopne
nop
mov
xchg
addl
out
stos
dec
ljmp
or
ss
push
icebp
push
loope
cmp
out
js
push
sbb
aas
aad
cwtl
pop
mov
add
and
add
jno
jns
and
imul
call
push
jle
mov
dec
lea
sbb
push
jecxz
push
xchg
mov
jmp
inc
sbb
loop
andl
cmp
push
pop
sbb
or
dec
mov
loopne
jbe
frstor
xchg
in
pop
sbb
imul
cmp
ret
shlb
into
mov
aas
loopne
jbe
jmp
inc
sarl
test
jnp
jno
dec
scas
mov
push
adc
inc
sahf
sarl
sbb
mov
jo
call
sbb
pop
fadd
push
xadd
push
pusha
adc
xor
mov
dec
shll
push
cmpsl
mov
xchg
test
cli
pop
js
and
sbb
dec
insb
lds
inc
inc
mov
lock
jb
loop
arpl
inc
fwait
out
pop
push
mov
cmp
and
sbb
div
es
out
mov
pusha
pop
inc
repz
jbe
mov
dec
sarb
idivb
mov
mov
scas
push
sub
das
outsl
mov
sub
mov
test
xor
in
pop
in
movsb
out
out
dec
inc
test
xchg
inc
lock
jo
sahf
mov
lret
test
popf
popa
test
adc
imul
inc
jnp
popf
scas
mov
cmp
lock
or
gs
mov
lret
push
mov
shrl
sahf
xor
rcl
rolb
sti
mov
push
insb
mov
xchg
repnz
pop
stos
xor
popf
cs
lret
in
and
and
pop
lahf
pop
and
mov
andb
push
dec
xchg
pop
push
xor
mov
mov
jge
cwtl
or
cmp
push
lret
gs
adc
mov
xchg
out
enter
fwait
popf
jae
rorl
mov
pusha
fs
jl
ret
daa
ljmp
ret
popa
ds
and
sahf
xor
cmp
mov
mov
test
hlt
cmpsb
ret
loopne
cld
sarl
inc
insl
push
xchg
push
fs
in
mov
nop
mov
aad
add
clc
repnz
mov
into
das
or
ficoml
push
cmc
or
daa
adc
in
mov
push
jae
cmp
iret
data16
arpl
mov
jmp
mov
cmp
cwtl
mov
mov
xor
hlt
mov
mov
hlt
or
mov
or
add
das
mov
mov
sahf
shlb
jae
inc
jmp
enter
jl
pop
lret
mov
hlt
movsb
ficompl
jge
aas
ret
add
push
cmp
int3
jns
cmp
pusha
ljmp
xlat
ja
scas
aam
arpl
mov
sahf
jp
out
cmp
test
mov
sub
aam
mov
pop
adc
xchg
add
or
shll
pop
mov
dec
sti
mov
pop
out
xchg
fldcw
sub
add
movsl
push
pushf
push
aaa
dec
out
adc
cld
or
rol
mov
xor
and
test
pop
ja
inc
add
mov
std
cmp
leave
adc
clc
insl
inc
xchg
arpl
pop
outsb
and
int3
jge
push
imul
aas
fucomi
mov
sub
lahf
in
cmp
sub
cld
and
fnsave
arpl
pop
add
loop
sbb
pushf
lret
icebp
mov
mov
mov
mov
jl
push
mov
outsl
stos
in
add
mov
insl
pop
les
pop
scas
mov
mov
enter
data16
ss
cmp
add
jnp
mov
push
adc
jbe
in
xchg
mov
stos
adc
lcall
dec
pop
es
xchg
cwtl
out
pushf
sarb
out
cmp
testb
iret
pusha
inc
dec
je
mov
loop
adc
mov
jo
fcoml
jne
sub
sbb
lods
push
enter
add
adc
stc
sub
mov
negl
mov
scas
xchg
clc
cmp
push
jne
push
stc
sub
andl
inc
sbb
stos
xchg
je
mov
sbb
xchg
xchg
ss
inc
pusha
jnp
xchg
mov
mov
inc
imul
and
push
fisttps
ss
mov
movsb
xlat
jne
cmc
mov
and
popa
incl
xor
mov
das
jno
inc
dec
mov
sub
dec
shr
xchg
mov
jnp
mov
mov
xorb
or
ds
xchg
pusha
stc
stos
sbb
mov
pop
popf
or
out
ror
repz
push
in
fsin
test
icebp
lahf
jns
mov
sbb
jb
cli
cli
repz
insb
es
and
mov
jmp
imul
testl
loop
outsb
push
pusha
rorb
jnp
pop
lods
xor
adc
lret
add
jne
outsl
jmp
cmp
icebp
mov
sbb
and
push
cmp
repnz
cmp
inc
mov
lods
push
jmp
sahf
ret
lret
das
js
rol
addr16
cmpsl
ja
sbb
ss
cld
adc
mov
jmp
inc
lock
leave
lcall
dec
icebp
mov
fidivrs
std
push
adc
and
orl
adcb
mov
or
mov
sbb
mov
hlt
or
mov
sahf
ss
shrb
iret
sti
cmp
pop
sbb
lea
mov
lcall
sbb
lea
movsl
stc
jb
push
sub
dec
jmp
fnstcw
lods
sahf
int
icebp
mov
mov
scas
loop
jbe
sub
lds
mov
mov
pop
cmp
cs
add
ja
outsb
data16
jl
xor
stos
adc
jl
shlb
nop
sbb
into
dec
or
cld
orl
aas
add
ss
xor
test
mul
dec
pop
jp
sarl
fwait
dec
mov
lret
aaa
adc
fmull
movsl
cmpsb
repnz
leave
mov
pop
push
outsb
push
cltd
jg
cmp
enter
cli
clc
or
jge
jmp
inc
adc
xor
add
mov
xor
loopne
adc
lret
sbb
outsl
mov
sbb
frstor
adc
addr16
or
jno
and
push
pop
data16
in
push
mov
mov
in
sub
ret
push
mov
sbb
jae
inc
stos
mov
fsubl
inc
add
push
or
sub
add
scas
loopne
sahf
or
flds
adcl
lret
sbb
mov
lock
push
mov
or
or
sub
loop
adc
loopne
jmp
pop
and
lcall
push
inc
sbb
lcall
sub
shlb
pop
push
fdivp
shl
sub
mov
out
repz
mov
jp
push
push
lcall
jbe
popf
setge
sbb
sub
jnp
mov
cmp
jbe
mov
stos
xor
loopne
aam
sub
aaa
mov
cmp
cmpsl
sub
clc
mov
jmp
add
loope
lret
clc
cmc
inc
add
cmp
add
cmp
mov
dec
mov
jmp
pop
out
inc
popa
pop
push
fucomp
push
arpl
pop
cltd
sar
pushf
shl
sbb
repnz
popf
test
or
outsl
ss
popa
inc
push
shrb
jne
cltd
jl
out
sub
xchg
push
jg
cmc
cmp
bound
call
add
lahf
sbb
incb
push
repnz
sub
xchg
or
test
imul
daa
xor
out
test
outsl
enter
sbb
xor
movsl
idivl
xor
and
inc
xor
fucompp
cmp
clc
decl
scas
xchg
pop
mov
dec
add
push
push
pop
xchg
nop
ret
mov
dec
in
ret
push
mov
cmpsb
sbb
pop
dec
sbbb
in
push
sub
or
add
dec
iret
sub
std
test
mov
mov
std
cmc
sbb
fstps
imul
out
pop
das
push
cmc
push
fmul
mov
daa
pop
jno
out
cmpsb
ss
gs
mov
enter
sbb
add
or
loop
xor
sbb
sub
xor
ret
test
dec
fldenv
dec
adc
mov
mov
jb
sbb
sahf
inc
test
jmp
dec
out
dec
lock
inc
popf
push
cmp
mov
adc
cmpsb
xchg
sbb
insb
push
aam
sbbl
xor
cltd
sbb
fwait
repz
or
and
and
out
fs
inc
add
inc
push
and
adc
cmpsb
ja
mov
xlat
test
gs
ljmp
ljmp
aad
push
jp
fdivl
push
sahf
pop
push
outsl
cmp
std
out
cmpsb
shlb
orl
pusha
mov
and
mov
add
mov
xlat
add
jno
cmc
pop
pop
push
pop
push
fwait
push
jmp
lds
mov
cmc
push
pop
clc
inc
out
xchg
stc
aad
xchg
stos
mov
adc
enter
mov
outsl
aas
daa
icebp
orb
ja
mov
mov
iret
jns
shrl
fwait
pushf
jne
push
addl
xor
push
pop
out
xor
es
je
in
js
enter
mov
cmp
fdiv
cmc
andl
add
jns
mov
rclb
addr16
std
add
cmpl
rcll
stos
cmp
jmp
or
fs
leave
cmp
hlt
ret
push
ds
je
inc
stos
mov
push
rclb
inc
mov
add
stos
scas
push
cld
xor
pop
pop
add
push
mov
or
xor
ljmp
orl
jne
testl
fdivl
cld
lret
or
lret
sahf
ss
pop
and
jno
mov
out
xor
cli
lahf
dec
and
cmp
es
xchg
xchg
lock
pop
push
inc
pop
scas
inc
fcmovbe
test
xchg
add
jecxz
adc
or
mov
or
pop
jmp
push
sti
or
out
imul
lock
xlat
cmp
xor
cli
inc
jne
subl
sub
jl
xor
push
inc
pop
jg
mov
push
and
jmp
icebp
pop
or
out
jno
dec
std
jae
imul
xlat
inc
icebp
pop
bound
fs
cmp
and
jns
cmp
mov
xchg
subl
test
call
repz
sub
xchg
js
ljmp
aas
jl
testb
sbb
mov
je
mov
subb
lock
jecxz
imul
daa
int
icebp
dec
push
hlt
push
fisttps
fimuls
rcrl
inc
iret
cs
sbb
orl
in
ss
orl
clc
adc
sbb
mov
div
jmp
push
imul
dec
idivb
xchg
pop
iret
fistpl
clc
mov
mov
mov
pop
je
sahf
stc
daa
mov
fs
mov
jb,pn
sbb
jae
insb
add
adc
pop
in
ret
mov
lcall
test
and
es
dec
sub
mov
adc
push
adc
lahf
cs
cld
adc
cmp
mov
mov
fisubrs
inc
shl
sbb
and
jecxz
lock
adc
movl
add
std
mov
mov
fstl
mov
sub
pop
aas
and
push
enter
fadds
dec
dec
cmp
dec
out
fwait
push
mov
in
and
in
mov
popa
xchg
mov
dec
dec
test
enter
sahf
push
dec
sbb
daa
fnstcw
scas
xchg
inc
out
jecxz
xor
mov
stos
mov
mov
out
cmp
mov
repnz
movsb
xor
rcl
add
and
push
sbb
int3
aas
xchg
ljmp
repz
xchg
jo
jno,pt
es
dec
xchg
arpl
or
add
lock
sub
sub
sub
dec
jbe
or
jno
ror
mov
in
jns
mov
inc
pusha
lds
adc
enter
fwait
mov
dec
mov
push
lret
outsb
push
sbb
jns
gs
test
sub
scas
mov
in
jmp
push
add
push
mov
sets
js
jle
pop
mov
pop
mov
popf
or
imul
jl
pop
movsl
sub
sbb
scas
sub
mov
pop
mov
jp
sbb
inc
pop
mov
fwait
mov
push
adc
loope
out
mov
or
add
and
mov
cld
pop
addr16
sarb
inc
jg
mov
cmc
jecxz
cmp
cmpsb
adc
clc
add
add
mov
and
mov
adc
out
mov
std
dec
sbb
enter
adc
jb
icebp
int
rolb
mov
popf
ret
test
xor
sub
sub
sub
inc
rolb
popf
frstor
pop
jne
pop
ficomps
addr16
inc
xchg
outsl
pop
pop
aaa
rcll
xor
inc
ja
mov
sbb
inc
hlt
cs
and
inc
or
ja
mov
sbb
jecxz
je
mov
mov
stc
arpl
jge
sahf
xchg
mov
and
or
adc
sti
jb
out
inc
pushf
jmp
pushf
pop
call
mov
xchg
data16
mov
in
xchg
push
jno
fsubrp
pusha
mov
xor
pop
xchg
xor
xor
lock
test
xchg
mov
fndisi(8087
adc
add
mov
in
lret
pop
cld
jmp
mov
jle
pop
pop
dec
sbb
loop
je
xchg
clc
cmpsl
inc
xor
sbb
fisubrs
std
mov
inc
jl
sub
adc
test
inc
lret
xchg
rorb
ret
xchg
push
lds
sbb
lcall
jle
cli
xor
fwait
stos
jae
arpl
imul
aaa
mov
or
jg
test
mov
mov
es
fwait
pop
cmp
lods
xlat
loope
aad
inc
ljmp
shlb
je
inc
cmp
scas
cwtl
xchg
shll
shr
dec
add
je
daa
add
repz
jae
jecxz
cmpsl
inc
mov
scas
push
sub
adc
mov
jmp
mov
popa
or
or
lods
pop
sahf
mov
cs
xchg
dec
mov
repnz
popf
mov
add
fwait
xchg
js
jl
repnz
mov
cltd
pop
hlt
jecxz
mov
inc
xchg
and
pop
mov
leave
aam
scas
lock
sub
call
repz
adc
adc
cmp
insl
out
data16
into
dec
or
pop
xor
xor
fcmovne
xchg
addr16
mov
fucomp
repnz
jmp
push
sti
lahf
add
ds
gs
cmpsb
push
and
dec
cmpsl
cmp
shll
xor
mov
cmp
lock
jp
loop
xchg
mov
jnp
adc
dec
jecxz
leave
and
mov
in
xchg
mov
jge
bound
ss
mov
sub
arpl
not
or
ret
add
shlb
popf
cmp
xor
mov
push
cmp
fadd
jbe
fcmove
add
mov
ds
mov
xchg
push
add
clc
xor
push
sbb
xchg
fwait
hlt
lret
add
mov
fsubr
ds
cvtpi2ps
in
shlb
shl
mov
jl
jl
or
ficoms
out
call
xchg
jae
xchg
lcall
dec
jb
adc
aas
ds
pop
sahf
fiadds
jecxz
or
xchg
test
scas
or
mov
xchg
mov
cltd
mov
cmc
bound
nop
xor
dec
insl
dec
mov
inc
icebp
ja
sub
scas
pop
mov
mov
pop
out
or
and
adc
enter
sti
sbb
mov
ds
loopne
int
fidivrl
cmp
rclb
adcl
aaa
add
sar
scas
jg
popa
test
shrb
cmpsl
out
test
add
pushf
stc
xchg
shlb
mov
rcrl
and
mov
lret
mov
in
cmp
xor
mov
dec
out
push
mov
cmc
out
mov
pop
jge
pop
xor
jmp
pop
sahf
insb
icebp
xchg
push
xchg
push
pop
jmp
lds
dec
dec
or
fwait
subb
inc
mov
pop
ret
cli
jno
jle
push
or
lret
xchg
sbbl
fdivs
and
fs
sub
mov
mov
gs
push
mov
cmc
shrb
jb
xlat
bound
fistpl
and
movsl
add
inc
adc
dec
test
sbb
mov
int3
add
loopne
push
arpl
clc
push
xchg
inc
fwait
sbb
out
mov
xor
imul
adc
xor
sbb
xor
fisubrl
sahf
mov
adc
sub
test
aam
sbbb
in
dec
aam
hlt
ja
xchg
push
cmp
repz
and
xchg
push
push
cld
shll
dec
jg
mov
mov
sti
fmuls
sub
xor
adc
es
shrb
push
mov
mov
xor
pop
ds
sbb
cmc
mov
jne
cwtl
or
adc
cmp
mov
inc
mov
mov
sub
dec
jge
pop
add
and
push
add
jns
icebp
xchg
dec
adc
mov
cmpsl
and
fdiv
fnstsw
or
test
xchg
outsb
fs
sbb
pop
into
js
push
xor
es
mov
and
aam
xchg
shrl
fcoml
jmp
xchg
popf
repz
inc
in
push
daa
lret
pop
sbb
stos
mov
pop
cmp
lock
add
inc
movsl
mov
pop
mov
sub
pop
push
jbe
push
or
mov
push
bnd
mov
sbb
pop
xchg
add
aas
lods
test
push
insb
nop
or
fs
rolw
adc
push
pop
cmp
nop
ja
pop
pop
iret
mov
or
pop
fnsave
insb
inc
jmp
cmp
xorb
movsl
pop
inc
and
mov
jnp
mov
mov
xchg
imul
xor
xorl
cli
sub
ret
out
arpl
into
mov
pop
xor
xor
in
fidivs
mov
push
dec
movsl
ss
mov
bound
test
jl
xor
mov
mov
xor
inc
nop
jb
dec
pop
stos
inc
mov
shl
push
fndisi(8087
or
jnp
imul
mov
add
sbb
sub
add
popf
stos
mov
jle
imul
stos
mov
fs
xchg
bound
push
xor
popa
add
data16
jmp
es
jg
mov
orl
xchg
xor
add
lea
loopne
inc
push
jl
dec
xchg
ret
pop
dec
mov
sub
and
and
aaa
movsb
nop
fwait
xchg
ja
xchg
movsl
mov
aam
test
je
mov
pop
dec
roll
test
jg
bound
decb
pop
scas
test
jle
mov
mov
aad
call
arpl
push
and
xor
gs
mov
and
inc
ss
push
dec
adc
mov
repz
lcall
xor
lea
jb
in
shll
lret
in
inc
popf
orb
mov
ljmp
xlat
dec
fmuls
ja
jne
jmp
mov
in
xorb
jb
fsts
push
pop
mov
sbb
popa
adc
sbb
imul
fwait
inc
mov
std
ss
vgetexppd
fucomi
cmc
xor
sarb
inc
cltd
mov
insb
adc
xchg
add
clc
and
fbstp
aas
pop
jmp
or
popa
inc
aam
sbb
loope
push
rcrb
jnp
fwait
mov
loopne
mov
cmpsb
cmp
pandn
mov
mov
insb
arpl
es
loopne
lods
xor
adc
jle
addl
fdiv
jl
add
ja
arpl
in
push
add
cmp
into
cmp
int
insl
mov
clc
sub
dec
call
repz
mov
lods
or
imul
sahf
fiaddl
lods
lods
push
cmp
rol
push
add
in
jmp
mov
test
fistpl
push
sub
or
mov
cmp
nop
mov
insl
pop
add
lret
fmuls
dec
aaa
mov
fnstenv
ds
cmp
nop
mov
dec
jne
in
shrl
daa
add
cmpsl
mov
adc
scas
jmp
pop
popa
sti
pop
popf
xor
les
xlat
pop
inc
ljmp
rcrb
mov
add
mov
out
push
mov
inc
or
push
lea
mov
adc
add
fs
push
dec
shrb
mov
sahf
data16
or
arpl
xchg
add
add
inc
jne
pop
and
or
mov
add
jmp
push
aam
loopne
mov
xchg
jne
stc
jno
out
pop
jbe
inc
xchg
adc
mov
inc
sub
cmp
jne
mov
jmp
into
add
jmp
jmp
shrl
lock
das
cwtl
insb
insb
clc
dec
pusha
orl
dec
mov
mov
lret
out
mov
jmp
xor
xchg
testb
or
enter
sub
add
insl
sbb
pop
cltd
inc
adc
out
jle
add
dec
push
pop
popa
push
mov
daa
jecxz
movb
imul
mov
pop
inc
mov
mov
je,pt
mov
mov
pop
jns
rcll
xorl
push
int
ret
xor
cmp
mov
ret
addb
pop
xor
sub
cmpsb
xchg
iret
sub
xor
das
or
insb
cmp
out
inc
test
aad
jp
mov
lods
hlt
loope
enter
mov
mov
out
sbb
jo
inc
ja
sbb
arpl
fidivs
mov
sub
cmpsl
imul
mov
js
and
pusha
pop
rorl
xor
xchg
jb
mov
xchg
cwtl
xchg
mov
pop
pop
mov
and
fistl
mov
inc
data16
cvttps2pi
or
cli
mov
sbb
xchg
lret
sub
dec
mov
outsl
and
dec
inc
adc
or
and
scas
mov
mov
out
dec
daa
and
repnz
dec
sbb
pop
cwtl
push
mov
inc
jne
dec
hlt
xchg
cmc
jle
jb
sbb
mov
cld
fwait
mov
test
cmpl
cs
outsb
hlt
mov
call
in
lods
dec
fcoml
pop
mov
movb
aas
nop
sahf
scas
mov
push
ja
shll
rcl
mov
xchg
fwait
addb
insl
xor
mov
sbb
jmp
pop
loope
jnp
pushf
push
outsb
mov
mov
leave
xlat
jns
xor
jecxz
cld
jns
std
jl
and
test
or
out
rolb
ja
push
lds
dec
inc
inc
cmc
lds
lods
fistpl
mov
adc
int
xchg
or
jbe
mov
cwtl
mov
std
mov
add
and
ja
mov
adcb
sub
repz
push
dec
test
mov
adc
lds
jb
test
icebp
mov
and
cmp
jns
jl
sbb
xor
jns
int3
outsl
dec
jmp
call
mov
lods
mov
xchg
lds
out
aad
add
mov
mov
jl
inc
mov
pop
roll
clc
shlb
push
mov
dec
adc
xchg
sbb
push
andb
pop
sub
es
mov
xchg
leave
mov
jb
push
les
je
dec
mov
inc
pop
pop
les
dec
pushl
mov
push
adc
mov
flds
test
mov
dec
xor
add
cld
sbb
out
negb
mov
mov
jbe
pop
stos
xchg
mov
scas
loope
cmp
push
shll
scas
sbbl
gs
push
cs
sbb
jbe
pushf
ss
mov
jb
mov
ljmp
add
push
mov
ds
mov
clc
push
fadd
aam
xchg
mov
out
insb
and
hlt
sub
insl
mov
outsb
mov
lods
scas
sub
and
sbb
jno
in
fld
mov
fists
out
stos
fldt
test
imul
fldcw
pop
and
mov
sbb
mov
push
jle
mov
inc
push
mov
jmp
enter
sbb
inc
subl
mov
pusha
xor
lds
cld
jnp
std
add
xchg
mov
inc
jbe
add
or
mov
sahf
movsb
jae
cmp
call
inc
incl
jge
dec
xlat
dec
mov
xchg
fidivs
push
mov
xchg
or
into
std
insl
jno
imul
jl
push
negb
mov
sti
add
lock
mov
aas
jp
or
dec
mov
ficoms
pop
add
mov
jb
cmp
pop
xor
aam
inc
cmpsl
mov
iret
and
mov
adc
lcall
mov
dec
hlt
jnp
fimuls
cld
cld
inc
adc
ljmp
pop
shll
push
adc
mov
lret
mov
int3
and
xor
push
jp
dec
insb
push
sbb
shll
mov
and
or
xor
push
sbb
and
pop
mov
push
ds
xor
fnstsw
pop
cmp
imul
sahf
test
scas
insb
mov
jns
cmp
or
pop
fdivrl
adc
lcall
push
push
mov
xchg
inc
scas
call
sub
outsl
out
mov
cli
xor
gs
test
mov
jmp
or
enter
cmp
adc
and
cmp
inc
test
add
lahf
lea
lret
jne
sbb
rclb
add
out
mov
fildl
pushf
clc
fxch
iret
sub
dec
cmc
dec
movsb
je
testl
aaa
out
pop
and
addb
mov
gs
call
int3
xor
leave
sahf
in
mov
push
jle
clc
sub
lret
lea
add
cmp
sahf
dec
add
sbb
sbb
shlb
jg
add
and
fidivs
test
repz
daa
out
xchg
jle
xchg
loope
pop
jbe
sub
pop
mov
ror
cmp
push
mov
in
addr16
xchg
fcmovnb
cwtl
int
jnp
adc
mov
cmp
popf
shrb
xchg
outsl
ficomps
mov
into
dec
mov
push
sti
out
xchg
insb
dec
shll
mov
into
lea
lret
xor
or
mov
enter
sub
cs
sti
test
jne
fistpl
shll
jae
dec
push
mov
adc
sub
jmp
test
bound
call
shll
and
xchg
mulb
lods
push
out
divl
pop
dec
repz
lods
dec
sub
push
mov
jl
in
test
push
mov
rolb
mov
and
rep
jecxz
jae
leave
insb
loop
jmp
and
jne
pop
movsl
xor
pop
mov
test
xlat
sbb
push
adc
mov
or
inc
ss
xchg
aad
and
sub
movsl
and
pop
adc
push
sbb
inc
enter
mov
jnp
xlat
sub
pop
add
mov
sub
and
jg
jmp
inc
inc
loop
push
cmp
out
pop
push
rcl
or
iret
bnd
insl
mov
clc
lea
mov
lds
cwtl
mov
andl
je
dec
fwait
lods
insl
jecxz
test
enter
jae
loope
pop
jl
pushf
punpckldq
dec
xchg
inc
xor
lea
fmuls
mov
adc
aas
mov
js
mov
out
dec
enter
ja
shll
lea
shrl
mov
xor
std
fwait
ja
cld
cli
jae
pushf
std
push
add
in
roll
das
push
outsl
and
test
add
cmp
aaa
out
push
sub
pop
xchg
call
mov
stc
add
cmc
insl
pop
pop
nop
testb
cmp
pop
mov
test
mov
ret
pop
or
push
mov
pusha
inc
xchg
test
bound
or
lock
addr16
das
xlat
dec
mov
sti
js
arpl
lret
stos
push
adc
lahf
test
push
enter
xor
das
lcall
std
pop
test
pop
shrl
xchg
and
push
or
movsb
cli
jne
push
imul
bound
gs
int
inc
sub
add
cmp
sbb
jbe
xor
mov
jno
dec
sub
dec
scas
gs
mov
pop
sbb
jno
cmpsb
pop
mov
arpl
les
jae
and
pop
arpl
xchg
sbb
or
mov
fs
movsl
jp
or
jecxz
in
je
jp
test
jmp
jae
call
ret
jno
jae
in
mov
mov
inc
scas
and
mov
call
mov
call
jno
sahf
ret
out
scas
ret
push
sub
jbe
adc
orl
pop
int
adc
jl
inc
daa
mov
bsr
mov
dec
mov
push
js
xchg
orb
jbe
adc
or
fdiv
cli
sbb
lods
lret
sub
jbe
push
loop
push
xor
incb
jae
mov
inc
lock
and
dec
sub
xchg
push
repnz
subl
mov
cmc
mov
xor
out
ljmp
int3
or
dec
movsl
arpl
dec
push
or
scas
idivl
xor
lods
pop
jns
xchg
mov
addl
dec
pop
jnp
cmp
add
cli
push
fsubrs
scas
sbb
mov
int
stos
push
movsb
adc
enter
push
push
dec
pusha
or
cld
in
xchg
cmpsb
jmp
pop
in
and
inc
mov
xor
push
cld
imul
xchg
enter
and
pop
lods
adc
or
mov
out
leave
lahf
sub
mov
xchg
incb
or
mov
lds
jo
jecxz
pop
fs
fisubrs
xor
int3
in
outsl
in
invd
add
movsl
xlat
sbb
inc
pop
sbb
xchg
cmp
push
dec
push
adcl
xchg
add
cmp
mov
and
in
inc
mov
fbstp
or
mov
nop
jns
fwait
js
dec
mov
jle
jne
dec
xlat
push
mov
insb
xchg
call
add
ret
ja
test
sub
mov
flds
shr
xor
jg
daa
push
mov
and
push
push
cmp
xchg
and
les
stos
cmc
dec
or
dec
leave
ja
xchg
lea
je
movsl
push
pusha
mov
das
ss
in
jno
sarb
inc
sha1msg1
cmpsb
or
push
or
or
push
push
imul
pushf
push
pop
jo
mov
xchg
mov
adc
adc
mov
sbb
fucomp
orb
aad
repnz
mov
test
test
xor
or
dec
add
push
je
aad
das
das
pop
fs
test
xchg
dec
or
stos
loopne
test
lock
cmpsl
sbb
jmp
test
orl
inc
mov
cli
in
scas
pusha
mov
les
or
mov
ds
ss
les
aas
ljmp
sbb
stos
jge
popf
cmp
mov
fcoml
mov
stc
xchg
cmp
dec
das
and
sbb
jl
lods
insb
mov
adc
cwtl
lods
mov
or
mov
stos
test
xchg
add
jns
jns
add
adc
and
sub
jnp
inc
mov
je
outsl
stc
add
inc
bound
mov
outsb
outsl
jns
lods
fld
mov
aad
sbb
sub
and
test
xchg
pop
xor
push
insb
adc
jge
xlat
mov
jecxz
add
cmpsb
inc
xor
lcall
ds
fwait
pop
sbb
add
jnp
aas
outsb
xchg
jo
jbe
notl
nop
sbb
bound
loopne
cli
jmp
pop
inc
gs
dec
loopne
adc
in
outsl
adc
sub
mov
jns
xchg
clc
int3
rol
and
mov
push
jle
inc
and
pop
loope
sub
sub
divps
fcomi
cmp
fstl
fsubs
xlat
sbb
mov
push
divl
mov
cwtl
addr16
sahf
movsb
jp
pop
in
adc
in
pop
cwtl
sub
lds
into
icebp
je
cmp
jmp
add
sti
or
pushl
xor
sbb
cmc
push
inc
push
add
or
mov
dec
dec
cmp
ss
jne
sarl
nop
add
cld
sbb
dec
leave
fmull
ja
xor
inc
test
mov
push
mov
faddl
daa
lcall
inc
inc
popf
inc
mov
mov
or
and
dec
jns
ret
xchg
xor
xlat
mov
pop
in
repz
das
out
enter
out
pop
ss
shll
int
mov
outsl
jb
xor
loop
sbb
push
mov
fstpt
pop
pushf
push
mov
into
push
into
add
xor
loope
jbe
movsl
int3
xchg
mov
shll
jno
fsubrs
and
cli
mov
in
mov
sub
icebp
lret
in
arpl
sbb
push
iret
in
sbb
lret
out
cs
lea
adc
sahf
imul
lds
cmp
push
int3
push
outsl
ja
mov
movsl
add
in
xor
mov
xor
mov
adc
dec
fsubr
and
rcrl
push
lahf
inc
rcll
fwait
pop
lcall
mov
cmp
mov
pop
jb
dec
cmp
outsb
sub
mov
out
fs
pop
mov
xlat
dec
xor
mov
lea
mov
movsb
inc
sub
push
xor
xchg
pop
xor
cmpsb
cmp
xor
leave
push
cmp
pop
sbb
push
fstpt
push
test
cmp
hlt
loopne
or
insb
mov
adc
call
test
cmpsl
xchg
sbb
adc
xor
addl
mov
cmp
mov
jns
mov
insb
push
lret
data16
popf
fldz
pop
idiv
sub
adc
dec
test
out
fcomps
adcl
or
xchg
dec
sbb
or
ret
or
lods
xchg
loop
jge
outsl
mov
jecxz
imul
popf
sarb
iret
cmp
pop
add
aas
je
xchg
cmp
outsb
in
jmp
stc
test
divl
jl
lods
xlat
inc
inc
ljmp
adc
pop
test
clc
lcall
mov
data16
orb
push
nop
mov
cmp
and
nop
cld
in
rorb
iret
cmc
adc
add
scas
jge
add
es
out
dec
or
repz
ret
int3
inc
mov
leave
and
add
lods
adc
fisttpll
push
lret
dec
xchg
push
lods
mov
cmp
icebp
cmp
mov
insl
leave
and
sub
inc
out
push
add
cmpsl
and
or
sbb
pop
cmpsl
push
je
xchg
jne
and
popf
fiadds
jecxz
cli
ljmp
rclb
nop
jecxz
cmpsl
xchg
mov
out
push
inc
pop
in
testl
scas
test
pop
jecxz
jae
pop
and
mov
mov
xchg
movsl
les
ror
out
cld
mov
cli
push
mov
iret
movsb
jl
add
pop
adc
push
inc
or
cmp
test
in
lret
addb
add
sub
scas
cmp
push
leave
adc
pop
xor
ret
rcrb
test
pop
lea
push
push
jl
pop
fildl
or
cmp
jp
je
pop
sbbb
adc
icebp
pop
adc
push
inc
lret
fsts
popa
jp
cmpl
pop
mov
push
push
mov
faddl
xchg
rcll
fcoml
xor
mov
sbb
xchg
mov
and
out
mov
cmp
lcall
add
mov
add
ljmp
xlat
xchg
ljmp
mov
and
pop
arpl
mov
or
test
out
mov
adc
mov
pop
loope
outsb
and
add
add
cmp
and
call
stc
xchg
and
incl
sub
and
dec
pop
jae
fnsave
outsb
jmp
or
jno
mov
dec
mov
xlat
xchg
shlb
sbb
adc
fsubrl
cmp
test
mov
insb
push
add
flds
gs
hlt
dec
data16
pop
mov
mov
jge
or
hlt
call
and
and
enter
inc
pop
scas
ja
aaa
cmp
jmp
rcl
and
mov
rcrl
maxps
stos
scas
mov
adc
fidivrs
inc
or
dec
or
cltd
sbb
sbb
sbbl
out
cmpsl
icebp
psubb
ds
push
or
ja
out
repz
pop
add
push
mov
push
pop
mov
push
sahf
pusha
in
push
push
cmpl
jmp
jo
inc
inc
mov
cmp
shll
inc
push
and
or
mov
cmp
pop
or
rorb
mov
mov
push
orl
insb
dec
gs
ss
into
xchg
xchg
and
test
sbb
stc
adc
push
and
fstps
push
dec
fs
pop
daa
stc
test
ds
scas
push
hlt
fisubrs
ret
xchg
lret
clc
and
int
outsl
aaa
cltd
popf
js
cld
dec
addr16
cli
in
lret
mov
add
into
call
pop
mov
xor
fs
pop
xor
mov
imul
push
cs
lahf
jmp
mov
iret
jle
mov
push
hlt
sbb
pop
xor
enter
mov
add
mov
xorl
out
cs
jbe
jp
mov
inc
test
cmp
hlt
xchg
sub
ljmp
or
ss
cli
mov
es
imul
fistl
push
jmp
jnp
stos
cmpb
pop
cmp
stos
xchg
xor
lret
in
aas
arpl
ja
imulb
inc
rolb
mul
std
test
push
ret
adc
cmp
cmp
fwait
adc
add
cld
or
lods
dec
sub
or
aaa
dec
and
mov
xlat
movsl
xchg
call
imul
pusha
inc
push
xor
nop
scas
add
lods
push
add
xchg
test
jbe
sahf
popa
xor
sub
dec
in
mov
inc
fisubrl
mov
adc
xor
pop
dec
xchg
out
inc
xor
mov
sub
push
jl
pop
lret
fwait
leave
jae
xchg
inc
xchg
jae
insb
sub
mov
pushf
sub
jo
test
sub
ljmp
jle
cmp
pop
lcall
mov
test
out
pop
fwait
add
pop
aam
xor
cmpsb
pop
fwait
mov
and
pop
xchg
push
outsl
fyl2x
mov
cli
sbb
shrl
les
xor
cli
imul
sub
jbe
push
jmp
push
xor
mov
mov
or
sbb
je
pushf
xchg
js
cmpsl
pop
out
arpl
arpl
mov
je
lret
gs
ds
and
cmpsb
int
sbbb
test
or
lds
je
bound
jecxz
inc
clc
int3
lds
js
hlt
lret
or
jne
jbe
pop
and
fdivrl
cltd
sbb
cmp
xchg
je
in
xchg
pop
pop
out
test
pop
add
das
das
mov
shlb
add
dec
fisubrs
sub
movsl
int
or
dec
stc
or
and
or
pop
pusha
lock
fmuls
test
cmp
dec
or
cld
repnz
out
mov
icebp
ljmp
inc
in
cmc
xlat
and
imul
or
pop
js
add
and
into
lea
pop
add
mov
pop
sbb
xchg
scas
sub
in
push
mov
test
mov
add
jne
mov
jnp
dec
sahf
pop
jbe
loop
test
test
stos
aam
dec
scas
into
jno
push
mov
aas
das
stos
stos
ljmp
sbb
add
pop
jle
or
or
pop
pop
mov
out
sbb
xor
dec
dec
out
jmp
scas
and
add
fisubs
inc
flds
stos
pop
jno
pop
and
sbb
add
mov
sti
xchg
daa
adc
repnz
nop
ja
jmp
xchg
shrl
mov
das
insb
insl
sahf
ret
mov
imul
or
xchg
xor
int
icebp
push
inc
add
push
xchg
xorb
dec
ds
dec
push
mov
out
and
xchg
mov
and
pmaxub
inc
sub
jne
mov
ss
jecxz
pop
xor
sbb
dec
scas
jmp
hlt
xlat
pop
mov
cltd
push
icebp
ljmp
xor
adc
lock
shrl
jge
xchg
sub
mov
inc
pop
inc
frstor
sub
in
testl
daa
std
inc
in
leave
mov
bound
inc
and
outsb
test
enter
xor
dec
fdivrl
sahf
sti
mov
pop
mov
dec
sbb
push
push
cwtl
jae
push
sub
in
es
lods
mov
pop
cmp
pushf
outsb
mov
xor
push
inc
aam
jno
loop
pop
push
xor
repnz
mov
push
aaa
insb
int3
add
loope
mov
sbb
sbb
mov
jle
inc
jno
dec
nop
dec
lcall
or
jmp
fcoms
add
xor
sti
jle
pop
pushf
lret
fwait
xchg
bound
imul
and
dec
int3
mov
sbb
jl
out
mov
adc
repnz
xchg
shrl
movsl
sbb
mov
push
daa
mov
test
pop
shll
and
test
loopne
mov
insb
ds
mov
testl
nop
mov
jl
clc
in
mov
sbb
in
add
and
inc
in
mov
loopne
ret
leave
lods
cmp
inc
popf
push
mov
sbb
popf
and
pminsw
js
test
adc
ljmp
imul
fimull
loopne
jp
out
mov
movsb
test
push
lcall
adc
push
pop
cmp
push
out
cld
xor
xchg
test
mov
mov
and
jecxz
add
xor
pop
dec
dec
mov
sbb
and
xchg
push
push
mov
mov
jg
jle
lods
out
mov
adc
push
rolb
push
jnp
jle
add
inc
mov
mov
push
arpl
xor
daa
and
jne
push
test
sbb
pop
adc
test
push
idivl
imul
fisubrl
adc
mov
xchg
cmpsb
dec
jno
repnz
aaa
sub
lods
or
out
xlat
xlat
mov
sub
sub
sahf
dec
addr16
lret
jmp
scas
sub
pop
les
hlt
imul
outsb
in
sahf
sbb
sahf
aam
mov
dec
test
test
add
jmp
push
inc
roll
mov
andb
mov
add
std
loope
jle
mov
icebp
jnp
loopne
mov
pushf
xchg
add
dec
mov
add
jle
sbb
jl
jl
addl
push
pop
mov
add
or
dec
sbb
ljmp
shlb
jns
loop
aad
subb
out
jmp
and
cs
or
jecxz
lret
lret
out
cli
xchg
fs
cli
xchg
inc
jge
fldenv
fidivrl
jae
rcrb
inc
xor
cmp
push
sbb
cltd
and
cmp
rcll
mov
jo
inc
adc
in
sub
out
push
fisubrl
cmp
mov
insl
mov
add
test
fwait
test
js
ss
pop
es
dec
or
jle
jl
into
or
repnz
cwtl
out
mov
icebp
outsb
add
ljmp
arpl
push
cmp
repz
sbb
cmp
mov
pop
add
mov
rclb
mov
adc
push
mov
push
inc
xchg
cmp
or
inc
adcl
scas
mov
cmp
les
imul
daa
xchg
or
dec
or
shrl
lea
jl
lahf
mov
fiadds
mov
loopne
lahf
shrl
imul
popa
pop
leave
jecxz
xchg
negb
cwtl
pop
sbb
loopne
pop
subb
xchg
das
xchg
shll
push
jb
inc
movsb
mov
bound
cld
outsb
adc
pusha
mov
outsb
arpl
stos
mov
or
fcmovne
mov
fcom
addr16
imul
add
outsb
test
sbb
cmp
xor
cltd
lods
je
inc
jae
loope
inc
inc
sar
cld
add
inc
fwait
inc
sbb
ret
lods
into
or
loopne
push
push
pop
nop
xor
enter
xor
xchg
push
fstps
outsb
fcmovne
in
movsl
xor
mov
push
gs
push
xor
lods
push
lock
repnz
fnstcw
inc
lea
sbb
cli
repnz
adc
jns
dec
inc
jnp
inc
popa
clc
test
sbb
lret
add
cli
and
data16
or
cmpsb
pop
xor
lods
rclb
add
je
ds
fsubs
jmp
push
cmp
in
jae
test
in
jnp
mov
mov
loopne
pcmpgtw
pop
push
in
sahf
mov
pop
mov
jecxz
inc
inc
iret
iret
dec
adc
push
sbb
lret
nop
aas
sbb
jl
dec
pop
int
out
mov
movsl
notl
lock
and
ljmp
lods
push
cmpsl
repnz
int3
mov
ficoms
out
movsb
dec
mov
add
xchg
arpl
addr16
add
lock
and
sbb
mov
and
outsl
sub
aam
arpl
mov
cs
jmp
shlb
lea
xchg
in
push
lcall
ja
jnp
jbe
sbb
sbb
aam
mov
xchg
inc
mov
out
pop
fs
sbb
es
les
je
outsl
mov
or
inc
fisubrl
pop
push
ljmp
mov
int3
mov
pop
es
je
loopne
pop
jne
pop
icebp
add
ljmp
or
xlat
sbb
pop
and
or
cmpsl
mov
aad
loopne
std
scas
inc
jno
cmp
mov
pushf
out
pushf
mov
or
add
push
scas
gs
stos
mov
out
xor
repnz
cwtl
pop
arpl
sarl
cltd
mov
jo
push
scas
xchg
xchg
inc
cmp
or
add
mov
inc
sbb
inc
pop
notb
adc
loop
cmpsl
ret
aas
sbb
cmp
xor
mov
fbstp
imul
mov
cmp
mov
pop
push
test
mov
xchg
pop
call
dec
jno
mulb
ds
lods
faddl
cmp
test
xor
notb
cmp
popa
scas
or
jns
push
lds
mov
lods
pop
xchg
insb
push
sbb
pop
xchg
jne
leave
cmp
push
out
inc
dec
lea
mov
repz
xchg
mov
mov
push
add
fidivrl
push
xchg
or
rcll
mov
dec
xor
repnz
ja
or
mov
outsb
hlt
rcl
sub
gs
inc
inc
incl
mov
lret
adc
pop
pop
cwtl
mov
insb
mov
das
pop
test
push
je
lcall
iret
std
incl
jo
push
adc
cmc
test
and
inc
sbb
shl
sub
in
dec
cwtl
xor
out
aaa
lock
push
jecxz
shll
mov
cmpsb
addb
stos
sbb
dec
ds
subl
popa
sub
aaa
or
fists
movsl
jb
xchg
mov
push
jne
bts
inc
dec
or
xchg
pop
fldcw
cmc
lret
push
pop
xor
or
xchg
and
push
cmp
and
in
mov
es
cli
add
mov
mov
scas
pop
cwtl
push
sub
sar
jecxz
lock
cmc
ljmp
xchg
test
or
ss
pop
es
adc
les
es
adc
ja
test
push
rorb
pop
jmp
adc
je
in
je
ljmp
dec
adc
loope
jmp
xchg
xor
inc
repz
pop
jae
sti
push
ljmp
push
push
iret
mov
cmp
loop
js
cmc
stos
cmpsl
xchg
inc
mov
dec
jmp
sbbl
cs
gs
mov
push
popf
iret
add
mov
mov
in
add
rol
adcb
push
pop
mov
cmc
ja
je
into
cltd
cmc
lret
mov
dec
popa
hlt
test
aad
out
lods
cmp
or
dec
stos
out
lcall
or
lea
cmpb
sbb
int3
mov
test
add
adcl
arpl
adc
addr16
or
mov
xchg
push
mov
inc
mov
xor
sahf
pop
popa
cmp
enter
test
repnz
pusha
scas
hlt
sub
dec
mov
or
jle
js
jecxz
pop
add
jo
cwtl
das
js
outsb
clc
nop
mov
lret
jle
add
lret
inc
leave
repnz
pop
jle
fbld
dec
jbe
shrl
mov
mov
addr16
lea
push
pop
mov
push
push
xor
sbb
push
sbb
lcall
das
jo
bnd
cmp
jle
xchg
dec
or
mov
dec
xchg
shrl
scas
in
adcb
dec
ss
push
outsb
add
jge
loope
dec
idiv
faddp
pop
gs
sbb
jl
mov
lods
scas
add
xchg
aam
mov
outsb
mov
and
or
bound
pusha
mov
xchg
push
push
jmp
fcom
scas
dec
adc
div
mov
fisubl
adc
je
cltd
mov
mov
and
cmp
pop
clc
push
aad
pop
and
xchg
enter
xchg
jmp
clc
xchg
pop
pcmpeqw
loope
icebp
stc
in
and
scas
add
cmp
add
das
lods
mov
std
adc
js
test
aad
call
outsb
pop
or
or
clc
xchg
mov
into
loope
add
inc
insl
outsl
add
jb
sub
xor
cwtl
xlat
inc
xchg
out
or
stos
adc
xor
or
xchg
lock
pop
mov
cmp
dec
movsl
push
mov
xorb
movl
lcall
adc
fs
test
mov
insl
mov
ljmp
cmp
mov
xchg
push
out
ljmp
mov
fcmovnu
mov
je
push
mov
adc
into
pop
loop
popa
dec
fucomip
inc
adc
ret
mov
fwait
imul
inc
pop
imul
lods
sbb
movsb
pop
je
adc
inc
dec
lds
pusha
push
int
fidivl
inc
jg
push
xchg
inc
adc
jb
and
in
imul
inc
pop
sbb
jge
xchg
or
pop
lahf
push
bound
imul
or
lahf
adc
mov
push
cmpb
cld
cld
xchg
pop
aad
or
insb
inc
cltd
addr16
and
out
mov
xor
cwtl
push
je
dec
and
sbb
stc
inc
cs
movsb
call
out
mov
and
cli
add
test
push
test
icebp
cmp
inc
jg
push
fiadds
and
sbbb
stos
mov
sub
inc
ret
push
insb
jp
pop
fimull
leave
in
icebp
mov
incl
xor
ljmp
movsl
mov
xchg
aad
les
fs
flds
jae
loop
and
and
mov
out
sti
mov
lret
xchg
and
and
cld
sbb
and
mov
out
jmp
push
dec
lcall
cmp
mov
popa
mov
mov
jns
and
sti
and
popf
cmp
inc
jb
iret
mov
paddb
ljmp
dec
ret
push
adc
pushf
pop
pop
lret
cmp
test
cmp
fnstcw
out
mov
negb
and
sti
pop
imul
sub
jae
pop
ret
add
mov
fcoms
iret
mov
add
scas
xor
xlat
mov
or
arpl
lock
fsubrl
mov
xchg
jg
push
out
adc
xchg
or
inc
sub
fwait
sub
or
into
and
mov
sti
stc
test
in
aam
sub
in
in
scas
add
into
inc
adc
or
and
xlat
pop
jo
sahf
out
pop
lahf
and
int
mov
aaa
ret
in
mov
jmp
aaa
testb
lahf
sub
inc
xlat
movsl
subb
mov
sub
cmp
push
and
pop
jl
scas
mov
sbb
sarb
xchg
int
push
pop
fst
outsl
loopne
and
testl
loope
push
arpl
sbb
ret
gs
dec
popf
ret
fwait
xchg
xlat
mov
mov
or
xchg
or
jg
adc
aam
dec
add
mov
icebp
jb
outsb
add
xor
fmuls
mov
test
sbbb
adc
arpl
add
xor
sbb
aas
aas
mov
xor
mov
js
lock
mov
vmwrite
xchg
cmp
or
loope
sti
jg
mov
outsl
xor
jge
iret
loope
fmul
push
ret
jno
xorl
xadd
jge
mov
ja
push
jle
sub
push
arpl
je
mov
call
dec
pop
jnp
shlb
movsb
ss
in
mov
stos
xchg
or
xchg
xor
sub
sbb
inc
mov
daa
push
and
jae
cmpsl
js
lret
int3
or
xchg
imul
ja
ret
and
push
scas
loope
mov
push
movsl
int3
cmp
in
sbb
jge
out
sbb
xor
scas
pop
call
loope
adcb
xchg
adc
lcall
and
les
bound
test
mov
sub
push
fimuls
icebp
dec
ljmp
add
push
mov
out
out
adc
sub
icebp
mov
arpl
jg
outsl
mov
sarb
jmp
and
push
mov
std
rcrl
inc
jge
xor
stc
mov
cmp
shl
dec
shr
fstpl
insl
scas
pop
jmp
jl
mov
popf
push
dec
mov
jo
push
es
jle
enter
jbe
push
mov
cwtl
xchg
mov
jb
or
xchg
jle
cmc
add
sbb
xchg
mov
cltd
lret
mov
inc
push
das
inc
dec
fiaddl
andl
xor
sub
rcr
sub
out
sub
or
loope
xchg
into
pushf
imulb
inc
jle
movlps
popf
outsl
mov
xor
int
pop
mov
sub
sub
push
cmpsb
nop
and
shrd
out
xor
mov
clc
notb
repz
sbb
mov
inc
outsb
nopl
lahf
mov
push
inc
orl
sub
xchg
in
push
lods
add
aaa
inc
or
fwait
lock
sub
insl
and
lea
dec
add
in
pop
fstl
pusha
jo
mov
dec
mov
pop
pop
daa
adc
xchg
cmpsl
pop
xor
adc
sub
sbb
mov
sarb
mov
lcall
dec
shl
popf
mov
aas
nop
cmp
ret
faddl
fdivl
ja
sbb
cli
mov
popf
jle
icebp
xorl
aam
imul
fcoms
in
loope
iret
outsb
jge
arpl
shll
iret
loopne
fs
push
dec
jmp
mov
ljmp
mov
jecxz
jo
nop
cld
rcrb
scas
stos
push
adc
scas
fstpl
pop
mov
clc
pusha
jle
js
es
push
xchg
pop
dec
scas
cmc
xchg
dec
jno
ror
fcmovb
lds
jb
stos
sbb
ljmp
rol
push
cmpsl
fisttpl
sub
aam
insb
mov
icebp
adc
mov
or
lcall
cld
xchg
stos
add
push
aad
shrb
fcmovu
jl
jl
test
mov
dec
insl
xchg
out
mulb
iret
mov
mov
in
repz
testb
jp
mov
adc
jno
xor
xchg
inc
xchg
mov
bound
jae
nop
stos
lods
sbb
sbb
jno
jb
mov
gs
push
fwait
sub
sub
and
test
jne
subl
fs
outsl
addl
xchg
ds
sbb
cwtl
fisttpll
into
or
or
mov
std
push
loopne
and
lahf
aad
xchg
jne
std
fwait
xor
rclb
and
mov
mov
insb
and
mov
leave
dec
mov
cld
push
xor
inc
cmp
push
sbb
aad
jo
xchg
dec
push
insb
sbb
push
or
jbe
insl
setnp
push
ret
mov
mov
mov
scas
testb
dec
fucomi
pop
and
test
daa
test
sub
cmp
fdivl
jnp
dec
inc
cli
pop
outsb
mov
paddw
inc
mov
sbb
inc
clc
test
cltd
gs
cmpsl
xlat
push
adc
jge
int3
add
nop
orl
out
sub
pusha
jae
pop
popa
out
push
and
aam
out
mov
push
mov
jg
pusha
hlt
pop
xchg
or
push
cmp
es
inc
pop
loopne
sbb
adc
dec
push
xchg
adc
jno
mov
push
pop
fdivl
push
ret
jns
push
lea
inc
xor
addb
ss
cmp
ss
xor
fiaddl
out
in
sub
bound
pop
mov
jecxz
pop
adcb
add
pop
or
test
adc
ret
std
ds
repz
adc
pop
push
fisttps
mov
je
lahf
lods
cs
ficomps
icebp
das
jo
xor
jmp
repz
out
sbb
inc
outsl
xchg
lcall
and
pop
sbb
mov
cmpsl
out
in
sti
jmp
add
cmp
pop
or
dec
shrb
or
add
dec
xchg
push
pop
adcl
or
out
icebp
into
lods
sub
or
shl
je
mov
cmp
mov
add
aam
sbb
mov
and
scas
inc
ret
xor
mov
testl
jle
je
xchg
inc
sbb
loope
or
mov
push
shlb
shll
adc
cmpsl
cltd
scas
ljmp
ret
and
insb
ljmp
iret
aaa
xor
fistpl
or
sub
sti
lahf
ja
inc
push
or
out
xchg
pop
and
aam
push
push
test
mov
fwait
loopne
adc
mov
xchg
and
movsb
sub
sti
jmp
stc
out
es
aam
cmpsb
xor
add
inc
loopne
pusha
add
int
mov
mov
mov
mov
aaa
rcrb
xor
adc
push
cmp
mov
js
xchg
jae
xor
xor
stos
and
jo
jg
push
dec
cltd
mov
repz
pop
pop
jno
lds
ret
hlt
in
xor
dec
mov
out
pop
loop
xchg
cmpsl
and
xchg
cmc
hlt
or
lret
adc
xchg
cmpsb
xchg
inc
mov
lods
jl
push
xchg
out
adc
lock
repnz
pop
addr16
ds
aam
mov
ljmp
ret
das
push
or
imul
andl
jl,pt
cltd
cmp
frstor
lcall
out
or
and
lods
xchg
sbbb
stos
out
mov
jg
jg
lret
bound
imul
add
icebp
add
cld
lahf
in
mov
popf
xor
push
sbbl
cmp
sahf
pusha
mov
repnz
stc
dec
xchg
inc
not
imul
cltd
ficoms
sbb
xor
cmpsl
and
test
push
push
pop
sbb
sub
push
pop
cmp
iret
dec
daa
sahf
inc
je
fcom
sbb
fistpll
fisttpl
jno
or
test
fwait
push
mov
xchg
xchg
jecxz
test
lret
sbbl
adc
mov
pop
xchg
mov
ljmp
rol
call
notb
xor
pop
fcmovnu
and
inc
sub
rcrb
or
test
mov
mov
into
cmpsb
cld
mov
sub
xchg
mov
cmp
aaa
pop
into
ss
mov
aaa
cmovl
sub
xor
or
mov
xor
and
mov
adc
jno
cmc
in
in
add
xor
fcompl
in
dec
cwtl
lods
pop
pop
repnz
mov
jnp
xchg
push
and
add
add
xor
sbb
xchg
add
js
sti
inc
mov
popa
ja
lret
and
cmp
adc
push
adc
mov
mov
xchg
in
mulb
fs
lret
gs
cltd
fcoms
cmp
mov
scas
jae
aas
ja
adc
mov
test
pop
cs
insl
sbb
lods
jo
lahf
leave
lods
ss
xchg
mov
shll
inc
mov
hlt
xchg
xchg
addr16
sbb
cmpsb
and
pushl
lret
push
loop
in
nop
shrb
mov
push
jo
or
and
mov
push
nop
call
xor
add
jnp
pop
cmp
ljmp
xor
sub
shlb
xor
dec
sub
int3
popf
mov
out
push
lret
lahf
cmp
rcll
jecxz
or
data16
jae
das
pop
sbbl
push
dec
sbb
push
shll
cmp
not
jae
mov
add
push
hlt
and
mov
lret
fdivs
xchg
xchg
std
adc
xor
lret
jge
stc
pop
cmpsb
loop
and
mov
in
daa
cmp
test
outsl
sbb
je
jo
out
pop
mov
insb
mov
into
loopne
push
add
into
ret
inc
enter
push
mov
test
push
test
les
divl
outsl
sub
fcoms
inc
loope
daa
bnd
push
call
mov
add
and
pop
mov
lcall
loopne
or
add
rcl
adc
mov
mov
lret
pop
xchg
jne
call
push
xor
leave
push
lods
xchg
iret
xor
js
inc
repz
xchg
aaa
and
out
rclb
and
cwtl
inc
test
dec
mov
mov
fimull
push
dec
aaa
lock
push
mov
ret
cmp
xchg
or
jge
out
or
mov
sub
add
cmpsl
filds
mov
cld
push
lret
or
push
sub
cmp
decb
jne
sbb
rol
mov
jnp
jmp
pop
mov
jb
notl
out
dec
dec
jb
sbb
xor
enter
inc
idivb
mov
mov
mov
in
lcall
imul
andb
and
loope
orb
shll
aad
repnz
mov
fcmovb
push
fnsave
fisubrs
ret
nop
jmp
imul
and
sahf
mov
xchg
lret
inc
ja
inc
mov
sbbl
jbe
push
popa
push
xchg
sub
mov
in
mov
js
clc
add
pop
rcrl
mov
aas
xor
inc
outsb
in
cwtl
mov
xlat
ljmp
add
and
outsb
and
sub
clc
nop
cld
cmpsl
sbb
mov
and
inc
adc
inc
dec
gs
fistpll
xor
outsb
jne
sbb
ja
mov
xorb
xchg
icebp
loop
outsl
pop
rorl
mov
mov
popf
mov
jge
sbb
test
insb
and
lods
pop
sub
scas
in
dec
arpl
jge
arpl
xor
divb
cmp
pushf
ret
or
enter
lea
mov
cltd
add
icebp
or
jge
cmp
cmp
js
add
mov
inc
rcrb
and
push
inc
mov
sub
nop
sub
js
xor
das
loopne
or
mov
mov
cmp
fcoml
loopne
xchg
sysexit
notb
pop
push
push
loop
sarl
xchg
sub
inc
fcmovu
and
jge
stos
xor
or
pop
fmul
dec
ficoml
sarb
mov
pop
cmp
dec
xor
add
cmp
insl
lods
adc
jnp
in
fs
loope
mov
pusha
lret
sub
cmp
cli
mov
push
shl
cmp
push
ljmp
sub
add
pop
lods
lds
cmp
cmpsl
insl
testl
push
pop
lahf
inc
insl
rcl
popa
jl
nop
inc
lds
push
gs
pop
adc
cmp
orb
add
mov
out
sub
pop
rclb
sbb
add
xchg
pop
test
popa
xor
stc
mov
dec
in
xchg
lods
pusha
and
ljmp
cmp
or
subl
loopne
cld
stos
jo
xor
jnp
xor
push
jmp
repz
jbe
clc
es
inc
stos
mov
adc
fsts
sub
xchg
jb
out
cmpsb
cltd
loopne
insb
dec
cld
pop
dec
aam
sub
add
pushf
xchg
and
imul
scas
jecxz
ljmp
inc
mov
or
mov
loopne
cmp
repz
daa
pushf
test
or
and
test
aam
or
sbb
mov
jnp
cmp
push
sub
jmp
push
sahf
or
or
jbe
xor
shlb
inc
sub
stc
movsl
jae
sti
sub
testb
pop
mov
pop
imul
rorb
call
push
mov
cmpsb
test
mov
push
sbb
vcvtps2pd
or
outsl
xchg
cltd
enter
xor
mov
mov
andl
insl
cli
mov
cltd
pusha
sbb
xchg
mov
in
ss
movsl
inc
mov
cmp
mov
mov
cmpsl
xchg
push
xchg
jnp
vmovd
push
enter
mov
mov
jl
xlat
stc
sbbb
inc
cmp
nop
xchg
decl
cmp
orl
or
pop
arpl
push
mov
test
lods
popa
push
lret
loope
outsb
pop
xor
mov
pop
push
std
stos
das
scas
jecxz
test
adc
jbe
inc
fimull
and
or
sahf
popf
mov
xor
cmpb
push
hlt
rcrb
clc
push
movsb
movsb
stos
inc
mov
xor
or
lcall
mov
out
sahf
mov
sub
mov
pusha
xchg
ret
cs
cwtl
mov
out
dec
xor
fnstsw
mov
push
and
push
test
cmc
mov
mov
pusha
lcall
sub
xchg
daa
sti
mov
stos
hlt
xchg
and
stos
fwait
rcl
das
jmp
jo
mov
mov
xor
adc
fistpl
shlb
sbb
cmpsl
xor
roll
imul
xchg
and
lods
icebp
in
push
adc
jne
dec
orb
clc
xlat
adc
test
imulb
cs
inc
xchg
icebp
pop
mov
in
cmp
rcr
iret
lds
dec
insb
ljmp
fldcw
inc
add
mov
sbb
and
test
add
sub
mov
out
inc
push
mov
leave
inc
jo
add
xor
mov
mov
mov
jnp
pop
jb
movsb
mov
hlt
cmp
and
lahf
or
mov
xor
cmp
fistpl
cmc
pop
mov
xor
xchg
inc
sahf
sub
cwtl
sahf
enter
xchg
and
outsl
ret
fwait
dec
sti
mov
or
rcrl
cltd
movsb
lock
cmp
scas
les
adc
adc
rol
js
test
inc
repz
insl
sbb
fwait
dec
ja
mov
test
adc
jno
mov
out
inc
es
sti
pop
pop
outsl
movl
adc
imul
or
mov
mov
test
xor
dec
fisubrs
addr16
pop
popa
stos
fisttps
mov
mov
ja
xor
sub
std
jae
cltd
js
adcb
sub
mov
idivl
adc
pop
mov
sbb
xchg
lret
adc
jle
jle
mov
or
jns
sub
mov
cwtl
ss
loopne
pusha
inc
xchg
icebp
push
enter
hlt
mov
xor
push
fstpt
jb
test
add
mov
fldcw
aam
je
inc
or
jp
pop
push
fimuls
mov
ds
les
mov
dec
loopne
jo
clc
sbb
out
test
imul
jp
sub
pop
cli
insb
add
pop
mov
cmp
xor
out
outsb
fldt
stos
sti
cs
push
push
call
xchg
addr16
and
xor
mov
loopne
mov
or
push
mov
xor
mulps
gs
push
adc
mov
shll
call
data16
ja
or
mov
stos
xor
inc
ficomps
fstpl
mov
aaa
inc
out
and
pop
adc
out
sub
xor
mov
adc
add
adc
test
lahf
movsl
cmpsl
in
popf
or
repnz
pusha
push
mov
out
sbb
std
aam
orl
pop
jo
rcll
sbbb
out
cmc
pusha
sub
inc
into
addr16
movq
loope
sbb
aad
cltd
add
mov
lahf
andl
pop
jne
out
cs
lods
cmp
pop
and
pop
xchg
ja
pop
push
cmp
xor
mov
subb
sarb
jae
pop
jmp
test
mov
shll
ret
xlat
daa
mov
push
mov
inc
xchg
dec
prefetch
or
out
arpl
sub
jbe
jmp
mov
es
sbb
lock
pop
inc
cmc
mov
fsub
aam
jecxz
dec
ljmp
xor
and
popf
add
xlat
xor
int
xor
rcl
ret
xor
xchg
xor
mov
movl
rcll
jnp
push
addr16
mov
push
add
xor
and
push
inc
cli
jge
dec
add
les
in
xchg
loope
dec
xchg
faddp
icebp
xor
mov
jnp
es
pop
push
aaa
adc
jge
dec
andb
add
int3
sbb
pslld
jnp
aas
cmp
mov
jecxz
mov
mov
icebp
mov
loop
and
add
dec
inc
loopne
mov
push
xor
adc
inc
jl
mov
cmp
testb
out
or
mov
in
sbb
popf
jmp
cmpsl
or
ret
lock
fidivs
push
add
scas
adc
dec
movsl
mov
sbb
in
sbb
call
mov
jb
adc
sub
adc
clc
dec
mov
cs
xchg
imul
lret
std
push
inc
sub
push
mov
xlat
psubd
jns
imul
xchg
jl
mov
push
jp
inc
mov
insl
std
mov
int
push
pushf
cld
dec
and
loop
outsl
movsb
and
dec
and
xchg
lcall
repnz
ljmp
and
push
xor
fcomi
cmc
dec
ss
scas
jg
push
jae
mov
mov
int3
push
movsl
mov
loopne
testl
hlt
adc
pop
cmp
xor
pusha
mov
fs
mov
aas
lcall
or
icebp
bound
xchg
mov
sub
test
jg
xor
inc
fdivl
aaa
jmp
sti
in
popf
mov
pop
roll
pusha
nop
jecxz
jnp
rsm
xor
es
jnp
and
add
inc
xor
mov
or
jp
and
lds
push
loope
hlt
mov
loopne
xor
lret
mov
addb
in
movsb
call
lods
sub
es
shrb
shrl
int
add
pushf
adc
in
dec
psraw
cld
pop
mov
inc
inc
jp
int
lcall
sbb
dec
sub
ja
or
pop
das
sahf
sbb
xor
dec
inc
out
add
push
iret
add
mov
jg
and
pop
push
aad
ja
in
or
sub
sub
mov
adc
je
or
push
pop
mov
sub
ret
in
scas
push
rcrl
nop
pop
sub
add
mov
pop
push
cld
fimull
xor
and
sti
lret
lods
dec
adc
pop
xchg
ds
push
addr16
or
fisubrs
stos
das
fstl
adc
mov
cld
push
int3
out
adc
sub
cltd
or
out
stc
and
mov
outsb
xchg
int
out
xchg
cmp
cmp
inc
test
pop
xor
push
stos
adc
mov
add
push
cmp
repnz
push
push
popa
pop
repz
xor
in
cmc
push
imul
adc
xor
shlb
addr16
and
fcompl
pop
test
pop
fnsave
imul
pop
add
fs
or
aaa
xchg
adc
dec
lods
and
mov
pop
lea
xchg
shrb
xchg
sahf
imul
addb
adc
sub
sub
mov
inc
out
ss
mov
lods
mov
test
aas
jno
imul
jae
pop
xchg
in
mov
cmp
int3
int3
inc
scas
insl
decl
dec
or
daa
push
lods
cli
or
enter
cltd
fwait
jbe
out
jmp
fs
sub
loop
fidivl
mov
test
aam
or
rorl
push
mov
jl
aad
pop
data16
adc
ljmp
js
pop
in
scas
dec
test
inc
orb
add
inc
xchg
and
sbb
jbe
addr16
jp
cmp
xorl
je
adcb
xor
out
mov
xor
push
and
fistpll
mov
movsl
test
sbb
jbe
out
xchg
addb
lea
dec
jne
sub
mov
sbb
in
scas
test
push
xor
xor
pop
push
push
lods
or
cli
inc
and
fsubrp
adc
int3
dec
sub
insl
movsl
pop
push
lods
pop
leave
or
push
mov
jns
ja
xor
mov
xchg
inc
xchg
aam
mov
dec
mov
mov
jno
roll
js
test
push
sarb
popf
adc
xor
cmp
bound
inc
fs
jne
xchg
int
jno
popf
dec
leave
lret
mov
cli
mov
adc
mov
movsl
mov
push
lods
pop
sub
jns
mov
addb
iret
push
cmp
xchg
or
pop
jmp
push
jno
addr16
add
push
xchg
sbbb
jae
std
es
lea
inc
mov
sahf
rcr
insl
das
pop
testb
aas
inc
jle
add
jp
daa
inc
pushf
sub
rcrl
aas
jl
inc
ja
sbb
mov
in
mov
and
pop
and
or
xor
hlt
aad
sub
out
nop
fxch
aad
clc
push
xchg
adc
popa
and
xchg
add
mov
add
sahf
fdivp
cmp
jb
jp
xchg
jge
xor
test
sbbb
lods
movsl
aas
cmp
mov
push
xchg
in
pop
xlat
out
xchg
adc
xchg
mov
test
mov
adc
push
aam
cmp
divl
inc
pop
lock
cld
push
test
pop
cli
push
push
sub
imul
enter
mov
sahf
int
sub
out
xchg
mov
adc
dec
jo
lcall
sahf
mov
mov
mov
inc
adc
std
sub
mov
fwait
sub
xchg
or
inc
shll
int
and
sub
adc
xchg
inc
enter
insl
pusha
in
nop
mov
repnz
pop
dec
sbb
or
mov
cld
out
pop
pushf
sbb
push
popa
pop
mov
push
leave
and
sbbb
jno
mov
stos
push
jo
test
xor
fdivl
pop
pop
jecxz
push
add
mov
xorl
loop
sub
sub
inc
lcall
cmp
cmpsb
add
filds
inc
and
add
mov
adc
jns
xor
sbb
imul
push
jge
fisubrl
jle
idivb
cmpsb
mov
xchg
repnz
push
ds
push
and
jno
jne
pop
leave
int3
add
sahf
sub
xchg
imul
je
les
push
test
cmc
int3
scas
cltd
fxam
jle
adc
xchg
mov
out
ds
dec
cmp
js
adc
cmp
pusha
icebp
enter
push
js
insb
shll
mov
jnp
pushf
mov
aaa
xchg
push
xchg
mov
pop
mov
and
jmp
xchg
xor
jbe
add
lods
pop
rcll
dec
lret
inc
js
fimull
or
push
push
idivl
in
push
sub
mov
and
xchg
hlt
push
pop
loope
inc
and
loopne
in
test
and
adc
adc
ljmp
jb
addr16
jmp
mov
cmp
mov
in
xor
out
push
in
jecxz
xchg
jle
jbe
into
xor
push
aam
subl
outsb
int3
lods
push
push
inc
movsb
mov
add
xchg
lret
testb
sbb
sub
pop
jmp
mov
sub
test
and
mov
lds
std
lods
push
into
pop
sub
out
pop
flds
lahf
lods
dec
push
jns
leave
inc
jnp
add
add
stc
fimuls
cmpsl
dec
aaa
gs
cli
ss
cmp
pop
imul
shlb
push
in
ja
xor
jmp
xchg
dec
out
rcrl
push
unpckhps
xchg
mov
gs
dec
mov
add
stc
call
or
xchg
jmp
jg
sahf
lea
arpl
cmp
add
sahf
xchg
lahf
addr16
nop
pop
test
push
lcall
sbb
mov
cmp
push
or
xlat
xor
jb
fnstenv
test
push
mov
jno
ret
pop
imul
dec
test
lods
icebp
stc
sub
mov
in
setnp
jns
pop
add
inc
sub
aas
daa
pop
mov
adc
lds
push
fsts
adc
repnz
in
push
push
loope
sub
push
gs
mov
aad
xchg
adc
cmp
adc
push
adc
jmp
xor
aas
adc
test
push
pop
mov
imull
sub
in
push
sub
push
in
dec
cmp
mov
sub
stc
mov
lds
mov
add
push
adc
ljmp
lea
jbe
stos
jp
sbb
push
mov
ds
call
js
mov
pushaw
xchg
sbb
clc
cmpsb
int
mov
jno
outsl
sbb
inc
out
mov
mov
lret
xchg
push
je
cli
pop
push
mov
sbb
pop
sbb
jbe
dec
cmpsl
sahf
cmp
dec
std
dec
or
insl
jne
loop
das
sub
cs
cwtl
lahf
call
lret
fcmovb
fxam
and
in
ja
inc
das
dec
mov
scas
call
lock
or
jb
dec
pop
add
aam
int3
mov
sub
push
in
mov
jecxz
jnp
xchg
loop
pushf
imul
scas
sbb
inc
or
inc
testb
mov
in
ret
sarb
jno
cmp
andb
push
les
lods
xchg
movsl
pop
mov
lods
and
xchg
push
in
xchg
jp
pop
or
pop
sub
and
ds
cmc
inc
jge
mov
call
push
or
cs
pusha
notl
xchg
gs
in
enter
sti
lret
repnz
mov
dec
add
pushf
repnz
adc
mov
cmp
mov
cmpsb
fstps
mov
loopne
frstor
jg
jb
jge
pushf
out
pop
dec
and
inc
mov
out
xchg
fcomps
mov
fucomp
adc
scas
sub
scas
inc
popf
jnp
pop
push
test
sbb
pop
loop
or
push
and
lods
mov
mov
cmp
test
add
repz
jo
add
mov
push
pop
adc
stos
scas
mov
mov
dec
or
insb
sbb
dec
or
add
lock
pop
fcmovnbe
shlb
pusha
outsb
dec
dec
adc
fwait
xchg
fstpt
std
imul
into
ret
jmp
pop
mov
add
lea
mov
cs
push
mov
mov
and
xor
adc
fsubrl
iret
mov
and
scas
push
imul
sub
xchg
and
add
pop
sbb
pop
out
sbb
es
xchg
stos
les
popa
ja
je
nop
pop
xor
inc
out
fidivl
add
sub
dec
pop
aad
mov
jp
lcall
dec
nop
fistps
scas
int3
jecxz
jmp
shll
mov
lds
pushf
sub
and
push
js
mov
pusha
mov
push
ror
dec
push
loope
or
nopl
push
jno
mov
ss
jne,pn
out
xor
nop
fisubrs
push
lods
lods
mov
mov
cmp
fnsave
cltd
mov
add
mov
fistpll
lds
inc
dec
pop
or
cli
sub
dec
lret
xor
sbb
lods
push
lods
orb
dec
cld
popa
push
outsb
in
aad
sub
jae
jg
sub
adc
mov
cmpsb
and
fmul
lds
fnstsw
and
pop
inc
mov
out
push
ret
sbbb
or
xchg
push
sub
outsb
push
cs
out
push
mov
mov
pop
and
scas
mov
sbb
fdiv
jnp
mov
outsb
das
pop
mov
push
int3
loopne
mov
mov
insb
pusha
pop
xor
inc
sub
mov
add
push
lahf
xor
addr16
xchg
icebp
inc
and
inc
dec
dec
aam
sbb
jo
std
xchg
adc
jne
pop
adc
fdivp
and
pop
xchg
dec
mov
daa
add
cmp
shlb
movsl
or
cs
push
jo
out
pop
push
fsubr
jp
mov
das
inc
popf
out
xor
lret
push
mov
mov
xor
outsl
loop
int3
dec
mov
dec
mov
dec
inc
add
fnsave
imul
cmp
push
push
into
and
add
inc
out
ljmp
pushf
xchg
lock
jno
sbb
out
mov
movsl
rorl
push
leave
ja
push
leave
orl
and
mul
push
pop
jp
push
xchg
fldcw
inc
mov
pop
push
jo
adc
mov
lret
mov
stos
enter
xchg
in
out
leave
pop
jo
pop
stos
stc
addr16
xor
push
movsb
sub
cmp
fsubrl
sub
fadd
xor
mov
imul
lods
mov
mov
pushf
jo
push
cmpl
or
mov
out
jp
and
mov
outsl
mov
cmp
push
mov
or
testb
test
push
jne
loop
mov
ror
out
sbb
push
out
mov
fldt
push
push
into
lea
jmp
cmc
mov
orb
fwait
pop
mov
add
shl
jne
int3
mov
inc
cmc
sub
imul
cli
sub
imul
arpl
pop
jle
insl
or
xchg
add
lret
mov
cmp
jnp
mov
jge
push
xchg
cmp
xchg
test
pushf
pop
stc
mov
cs
cs
pop
jne
cwtl
popa
imul
mov
cmp
pop
mov
jmp
ret
cs
aas
cmpsl
push
in
lock
lods
das
aaa
addl
leave
pcmpeqw
je
dec
add
pop
jns
xor
outsl
mov
pop
pop
leave
in
add
fs
aam
fdivl
sub
jb
shrb
xor
cli
mov
xchg
mov
inc
mulb
or
repnz
xchg
negl
pop
in
int3
adc
jle
rolb
rcrl
outsl
inc
push
pop
stos
pop
jno
cmp
xor
push
xor
cli
jnp
notl
mov
pop
fs
sub
sbb
push
push
cli
push
sti
xchg
sub
mov
mov
sbb
adc
fdiv
mov
xchg
cmp
int3
xchg
pop
pop
andl
rcrl
dec
add
enter
ljmp
xchg
adc
pop
mov
in
ss
out
dec
jp
xchg
out
rcl
fsubrs
jp
sub
xor
pop
mulb
jae
cli
mov
pop
inc
cwtl
mov
xlat
das
call
std
sbb
and
xchg
jb
jl
cli
mov
ret
repnz
mov
jg
jp
cld
push
cmpsl
adc
ds
es
add
jno
inc
aaa
xchg
sti
js
or
es
jmp
loopne
popa
and
icebp
cmpsb
loopne
push
fistpl
dec
dec
cli
pop
bound
add
shll
pop
sbb
shl
mov
cmpb
adc
test
lret
lods
push
gs
jle
push
aam
mov
xlat
jns
lret
loope
pop
dec
cmp
in
in
clc
fisubs
aam
fnstenv
push
lods
xor
movsb
nop
cmpsl
inc
in
into
xchg
pop
sub
mov
fdivrs
and
jne
and
rolb
sbb
lcall
test
mov
inc
jo
in
repz
mov
loope
sbb
pushf
add
mov
icebp
and
int
stos
stc
fcmovb
adc
xchg
test
sbb
dec
xchg
jnp
pusha
add
lods
mov
in
sahf
fsubrs
enter
push
in
lea
or
push
data16
jb
iret
inc
xchg
adc
or
pop
daa
cmpsb
pop
adc
adc
inc
mov
push
test
js
pop
fistpll
icebp
stc
jb
jbe
into
cmp
xor
movsb
sub
push
call
lods
push
js
cmp
ret
xchg
dec
into
enter
int
addr16
xchg
mov
in
pop
jbe
add
jns
icebp
es
clc
testl
push
stc
andb
and
and
mov
in
ret
adc
dec
xchg
mov
inc
lret
push
in
inc
popf
mov
test
mov
add
push
arpl
and
inc
outsl
mov
je
cltd
mov
mov
adc
je
addb
cmp
enter
xchg
jb
fwait
inc
sbb
call
cmp
xor
nop
push
xor
adc
dec
pop
inc
jno
or
sti
inc
xchg
push
sbbb
fcom
test
add
sahf
fsubrl
and
mov
loopne
jg
shr
je
xor
pop
add
sahf
sbb
movsl
bound
test
mov
and
fs
inc
and
mov
mulb
xchg
adcb
fildl
add
push
lret
sbb
xor
push
mov
leave
ja
mov
sbb
scas
xor
mov
and
gs
icebp
mov
mov
cmp
fsubl
jae
jmp
and
mov
aas
adc
cmc
xchg
xchg
inc
pop
ret
inc
inc
mov
jge
movsl
fmul
push
das
test
sub
mulb
icebp
int3
out
fiadds
pop
or
mov
push
adc
stos
daa
arpl
addb
push
and
insl
fdivl
cmp
stos
int3
or
outsl
xchg
cld
cltd
sbb
adc
sub
xchg
repnz
and
mov
cmc
jbe
aam
pop
mov
jl
mov
mov
inc
xchg
testl
fwait
dec
lods
xchg
mov
add
adc
push
insl
push
jmp
and
mov
mov
mov
insb
jbe
dec
ljmp
cmp
pop
inc
sarl
or
dec
xor
cmp
arpl
push
xchg
jecxz
push
sbb
imul
and
fadd
mov
cmpsb
movsb
shlb
inc
dec
and
das
mov
mov
push
add
xor
inc
mov
dec
push
adc
cld
mov
testb
pop
popf
cs
push
movsl
xchg
cmp
xchg
arpl
lds
movsl
lcall
shlb
loopne
into
and
clc
or
push
lock
push
aam
pushl
lahf
push
scas
cld
or
rcr
ret
pop
pop
nop
divb
rcl
int
and
pop
mov
sbb
mov
outsb
or
mov
test
and
pop
mov
mov
imul
adc
xor
neg
mov
jmp
mov
icebp
jecxz
mov
inc
cmp
aam
jmp
mov
and
testb
jae
aam
mov
ffree
jmp
add
cld
xchg
shll
xor
inc
mov
cmp
fiadds
and
lods
cli
push
lods
cmp
add
pop
and
sarl
sbb
cmpsb
dec
dec
cmpl
in
addb
loop
or
jbe
add
in
xchg
mov
pop
jmp
pop
rclb
test
push
or
sbb
imul
sub
mov
push
add
xchg
cmpsl
subl
add
ret
ds
fwait
xor
incb
inc
jp
std
ljmp
in
xor
mov
sahf
cld
aad
sbb
ret
scas
jmp
xor
mov
xor
push
jmp
mov
enter
fistpl
dec
cwtl
fidivs
mov
dec
nop
xor
jbe
cmpsb
les
fstl
mov
cmp
aad
inc
loop
xor
movsl
push
test
pop
bound
pushl
lret
lea
push
cmc
cmc
push
dec
and
aas
addr16
fists
cltd
sahf
dec
addr16
mov
shr
ds
pop
movsb
or
mov
loope
xor
adc
bnd
xor
fldt
repz
rorl
sti
inc
push
lahf
sti
mov
in
test
outsl
mov
xlat
and
xchg
leave
sub
xlat
push
lock
jecxz
or
cmp
repnz
lret
pop
inc
lret
push
jmp
in
cmp
mov
push
lret
pop
je
jge
jg
sbb
into
adc
inc
insl
hlt
fs
clc
xor
jmp
or
xchg
jle
pushf
sbb
dec
cli
adc
lret
add
xlat
inc
mov
pop
lcall
and
repz
adc
in
mov
pop
mov
sbb
jge
ds
mov
sbb
xchg
dec
sub
push
mov
sbb
xchg
cmp
pop
test
lock
movsl
pop
mov
iret
xchg
rcrl
adc
xor
inc
inc
dec
xchg
add
xor
cld
outsl
sub
pop
or
push
mov
ss
jecxz
add
push
dec
imul
pusha
lds
into
push
mov
popa
addl
inc
pop
loopne
push
in
add
stos
ljmp
adc
push
or
inc
es
outsb
outsb
mov
mov
mov
xor
or
sti
xchg
push
push
dec
nop
outsb
adc
mov
enter
mov
enter
scas
rorb
dec
jmp
jle
xchg
mov
sub
hlt
xchg
xor
lods
mov
int3
insb
xchg
gs
cmp
inc
rcll
xlat
repnz
les
jo
jmp
gs
mov
inc
loopne
and
dec
stos
add
pop
insl
fistps
shrb
lods
mov
cmp
into
jne
xor
cmpsb
add
rcrl
dec
pusha
jp
aas
nop
gs
loop
and
cwtl
push
adc
je
pop
icebp
cmp
int3
sbb
jnp
xchg
clc
mov
fbstp
aas
ficoms
xchg
icebp
push
iret
lahf
std
add
jmp
xor
ret
movsl
xchg
or
ret
into
out
xchg
in
iret
imul
test
sbb
stc
loop
inc
add
stos
incb
gs
je
sub
icebp
jge
aaa
mov
mov
dec
nop
dec
sbb
jo
imul
test
mov
outsl
test
jle
mov
sti
dec
out
xor
add
aad
push
dec
ret
or
out
push
inc
ja
mov
sub
jle
adc
rclb
xor
xchg
das
repnz
pop
rcll
dec
popa
jmp
outsb
mov
mov
xor
adc
dec
push
sub
andl
jle
aas
out
insl
or
xor
test
ret
mov
jo
mov
scas
dec
jno
inc
inc
xor
push
loopne
sti
cmp
or
sub
pop
inc
mov
sarb
xor
arpl
xorl
hlt
pop
lcall
es
shll
cmp
pop
cld
int
adc
mov
rcrl
push
sbb
in
fs
mov
enter
sub
and
jae
out
cmp
jae
ret
push
repnz
xor
push
popa
lds
scas
cmpsl
cmpsl
push
repz
mov
jnp
rolb
sub
or
sti
and
push
lahf
mov
test
adc
pushf
or
mov
push
les
mov
push
repz
rcr
sub
rcr
insl
jbe
fdivl
dec
push
pop
clc
sbb
in
test
fsub
shrb
daa
jecxz
popf
or
jecxz
mov
fidivrl
in
test
fcompl
test
sbb
sub
movsw
divl
aas
sahf
dec
les
inc
add
popf
mov
shl
push
jb
shr
sgdtl
ficoml
and
jp,pt
push
scas
xor
mov
stc
fistpl
or
data16
mov
sbb
into
test
sub
push
fnstenv
xor
cwtd
inc
mov
lods
add
scas
bound
dec
sub
pusha
jle
push
test
pushf
lock
lea
test
cmp
cmp
add
pop
loopne
mov
fists
ljmp
ds
dec
push
nop
jl
dec
sub
div
push
aad
data16
dec
pop
enter
icebp
mov
in
mov
and
cmp
xor
dec
orb
out
insl
mov
cmp
cltd
lock
mov
xor
test
sti
mov
fs
pop
mov
loop
pop
add
pushf
mov
sub
roll
fs
popa
and
and
inc
std
stos
xchg
inc
dec
dec
xchg
inc
test
cltd
inc
daa
cmp
dec
mov
add
push
add
fnstenv
stos
pop
sub
dec
pop
inc
fadds
and
sbb
out
out
sub
outsb
loope
in
mov
jecxz
pushf
icebp
aas
imul
stc
adc
rcll
mov
inc
jp
sub
mov
push
adc
test
test
add
fidivl
shll
test
into
mov
push
xchg
adc
or
mov
cs
inc
xchg
in
stc
arpl
iret
cmp
icebp
ss
adc
das
sbb
and
test
xchg
adc
mov
mov
jge
cmpsb
adc
icebp
adcb
adc
cmp
test
dec
pop
and
push
cmc
popa
imul
xchg
aaa
or
xor
mov
mov
jns
jbe
mov
push
ds
fcmove
cs
stc
popf
insl
dec
push
pop
xor
hlt
mov
inc
popf
repnz
pop
push
fsubr
or
ret
jge
and
bound
sbb
push
pushf
aas
inc
cmp
pusha
push
jle
and
test
lds
js
sub
jnp
mov
test
insl
pop
and
test
pop
or
movaps
or
imul
leave
fldenv
jne
aam
out
test
inc
sub
outsb
ljmp
in
sbb
jae
test
aas
pop
xchg
shr
fstpl
es
popa
mov
movsb
mov
pushf
inc
mov
xchg
xchg
xchg
sahf
aaa
xchg
mov
fnstsw
cli
orl
jg
pop
sub
popa
call
cli
dec
or
mov
out
lock
out
fmull
pop
push
fstl
and
test
pop
gs
jns
inc
inc
cmc
xchg
sbb
sub
xchg
iret
ljmp
mov
or
add
stos
scas
inc
repnz
mov
shrb
or
inc
mov
jns
stos
dec
call
mov
movb
jl
outsb
shll
repz
dec
dec
sbbb
jmp
js
dec
cltd
sbb
push
push
or
jle
sbb
lods
cmpsl
cmpsl
bndldx
pop
jl
sub
xor
inc
rclb
jbe
or
adc
mov
adc
mov
xchg
or
mov
cltd
shr
aas
lds
incl
faddl
ret
aad
cli
mov
sub
pop
adc
dec
dec
or
or
jl
cld
mov
add
loop
in
cmpsb
aaa
aam
xchg
inc
push
ss
push
dec
xor
lret
sbb
lahf
test
test
mov
js
xor
mov
faddl
pop
dec
xchg
insb
daa
fisubrl
bound
ffree
mov
mov
dec
icebp
shll
movsl
mov
fnsave
jg
negb
ret
lds
test
xor
mov
jns
test
out
adc
cmp
scas
inc
sahf
cmp
jmp
cli
cld
je
outsl
addl
ret
or
mov
push
divb
out
jae
test
push
adc
xchg
shlb
mov
xchg
cwtl
inc
add
cmc
nop
dec
mov
test
xchg
scas
fsub
inc
jb
sub
fildl
push
testb
inc
xchg
in
mov
addb
int
lods
shll
aas
scas
sub
dec
loop
xchg
adc
mov
xchg
mov
fisubl
cmc
imulb
dec
ja
xchg
lods
jo
pop
rolb
dec
inc
loop
inc
movsl
loop
lea
sbb
imul
mov
sub
mov
mov
aam
frstor
mov
popa
int
add
aas
cli
lods
cmpsb
shrb
call
stos
lds
lods
pop
testb
jbe
aaa
adcl
lea
jle
cmc
cmp
out
mov
adc
pop
lods
cld
ret
insb
das
xchg
add
aas
cmpl
adc
in
dec
xlat
jge
and
push
pop
daa
and
xor
cltd
mov
iret
iret
jne
dec
inc
std
fstpt
fbld
into
xor
sahf
lret
sbb
mov
fwait
push
mov
popl
stc
cmp
hlt
adc
loopne
lods
mov
inc
cmp
je
and
cmp
comiss
sbb
cwtl
sub
xchg
lods
movsb
testb
outsb
adc
leave
dec
push
pusha
ljmp
mov
and
shl
psadbw
dec
xchg
negl
lds
into
lods
pushf
outsl
cs
int3
jns
xor
mulps
daa
sbb
loopne
mov
sbb
mov
sub
daa
testb
mov
add
into
mov
cmp
cs
jnp
test
or
in
daa
and
sub
jb
pop
dec
jo
xor
or
jmp
scas
cmp
mov
cmp
addr16
testl
roll
dec
andb
cmc
xchg
ror
aad
push
pop
dec
add
mov
jmp
or
inc
sahf
pushf
xchg
push
loop
pop
xor
dec
add
dec
jne
add
jno
or
ja
out
int
sub
inc
int3
das
std
xchg
xor
loop
dec
stos
loopne
add
or
scas
sub
jl
dec
inc
addr16
int
push
xchg
mov
inc
adcb
sti
stc
add
mov
and
pop
adcl
jg
push
out
repz
rclb
xchg
cmc
dec
xchg
sbb
out
stos
stos
jo
dec
ja
clc
fsts
cwtl
lcall
and
test
mov
jae
in
push
lods
repz
sub
push
ljmp
sti
fmull
or
push
dec
jae
sahf
cmp
push
rolb
clc
scas
adc
jbe
cmpb
lahf
outsb
call
and
inc
nop
add
push
lods
aad
push
std
mov
movsl
push
je
int3
lret
xchg
ss
nop
push
test
inc
and
xchg
mov
cmp
mov
fdivrs
fisttps
push
pop
mov
movsb
and
mov
jge
repnz
pop
loop
lahf
xchg
sbb
pushw
xor
lods
or
mov
cmp
adc
test
dec
sbb
fnstsw
jg
mov
push
mov
sarb
fisttpll
aam
xor
out
lds
sti
frstor
mov
pop
jae
sbb
cmovl
sub
cmp
loope
stos
mov
lret
xchg
fcoml
lahf
das
mov
popa
mov
cmc
mov
insl
push
popf
push
pusha
enter
scas
pop
ljmp
into
cs
mov
sti
daa
xchg
icebp
cmpsl
dec
movsb
addr16
pushf
nop
mov
std
adc
inc
icebp
stos
cltd
ret
cmp
cwtl
xchg
loopne
and
aad
test
int
in
and
fstl
sbb
mov
das
xchg
xchg
data16
mov
addr16
fcmove
mov
rolb
movsl
mov
out
inc
int3
mov
out
xor
xor
inc
lods
aam
inc
lods
out
movsb
jecxz
mov
insb
jb
fsubrl
jbe
adcl
mov
movsb
mov
dec
mov
mov
jp
rorb
in
xor
frstor
sbb
hlt
jg
nop
dec
test
mov
divl
sti
test
insb
and
xor
int
sub
ds
js
and
sub
mov
out
fsubrl
jl
cmpb
mov
ss
es
outsb
mov
mov
cltd
pop
fcom
cltd
jmp
cmp
push
xlat
mov
jmp
loopne
bound
insb
mov
stc
scas
mov
fiadds
and
les
sbb
cwtl
icebp
add
or
cltd
in
mov
cmpsl
js
mov
dec
aad
xchg
ret
mov
xchg
dec
aam
ds
xchg
int
test
mov
sbb
inc
js
jbe
mov
je
fildl
movsb
dec
push
jno
shll
fiaddl
cmpsw
and
rclb
in
push
adc
mov
lods
jno
jo
adc
out
out
mov
in
add
push
cld
test
mov
mov
push
add
scas
mov
sub
cli
mov
jmp
adc
sbb
xor
ss
pusha
cmp
ss
xchg
cmp
insl
sbb
je
pop
lret
data16
jb,pn
lods
cmp
movsb
cmp
jbe
xchg
cmpsb
mov
add
outsl
stos
add
mov
ret
cmc
ret
jns
loope
lcall
lods
mov
cmp
jle
js
and
test
movsb
ds
cld
lods
je
xlat
fstpt
mov
fdivrl
add
loop
or
cltd
sub
rorl
jnp
sub
pop
sub
hlt
push
shll
fnsave
and
jns
enter
ds
imull
lahf
ljmp
popf
or
mulb
loop
lea
ljmp
inc
adc
mov
insl
push
cli
mov
lahf
mov
add
jp
mov
pop
out
es
add
fisubrs
sahf
sarb
shll
fildl
aaa
cld
adc
sbb
cmp
outsl
pop
pop
inc
addr16
int
add
pusha
sub
inc
out
fcmovbe
insb
popa
jecxz
fldenv
jae
dec
loopne
repz
aad
outsb
jmp
rorl
stc
cwtl
loop
mov
jecxz
sub
pop
xchg
xchg
and
xchg
int
inc
mov
mulb
sub
in
lods
mov
fmulp
or
scas
and
and
inc
call
rcl
dec
dec
repnz
xlat
pusha
out
or
cli
mov
sub
dec
jge
xchg
aad
in
push
jns
sar
mov
adc
inc
fnsave
imul
fmuls
adc
dec
cmpsb
add
mov
jmp
sbb
fwait
mov
adc
mov
xchg
mov
pop
jne
pop
ror
mov
leave
cwtl
cs
outsl
pop
subb
sub
jns
lret
into
mov
xor
xorb
pop
mov
cmp
imul
mov
das
aas
dec
inc
mov
inc
mov
and
jp
ss
adc
daa
or
test
add
cmp
mov
aam
jne
add
in
jl
xchg
lret
iret
jmp
pushf
fisttps
inc
inc
mov
sahf
push
push
xorb
and
adc
inc
ret
xor
mov
loop
mov
fldl
inc
stc
out
xchg
fsubrs
jns
in
push
xor
out
dec
sbb
and
ret
pushf
xchg
jae
repnz
fs
fistps
sub
mov
sahf
std
pop
dec
mov
push
sbb
mov
test
inc
pusha
pop
outsb
pop
push
jge
idiv
jbe
inc
cltd
cmpsb
out
pusha
mov
xor
daa
sarl
in
adc
sarl
dec
and
mov
pop
push
sbb
ss
push
jmp
insl
sub
or
bound
enter
push
mov
loop
nop
sti
push
loop
cmpsb
adc
and
icebp
std
jecxz
fdivr
mov
in
xlat
inc
popf
cmpl
popf
sub
mov
pop
test
cmp
addr16
or
xchg
push
inc
andb
push
mov
shl
xor
outsl
mov
and
loope
imul
adc
and
stos
std
jl
clc
ljmp
mov
add
xor
test
push
leave
sub
cmpsl
test
subb
jne
scas
or
sub
inc
fwait
mov
in
repnz
insb
dec
pop
pop
xchg
mov
push
stc
and
ss
xor
dec
sbb
mov
mov
sub
sahf
push
clc
push
lret
adc
arpl
divl
mov
insl
sub
push
dec
inc
iret
sub
mov
nop
mov
add
and
xchg
test
jecxz
clc
cwtl
xrelease
dec
out
and
cmp
notb
pusha
loop
fld
inc
push
out
arpl
lret
xchg
inc
cmc
and
push
in
jp
nop
or
hlt
dec
popf
adc
xchg
les
std
pop
cmp
clc
enter
adc
loope
cmp
stc
test
mov
mov
in
fildll
push
aaa
xchg
test
or
js
or
pushf
clc
mov
ss
fisttpl
xchg
inc
push
xor
add
mov
lahf
jge
dec
cmpsb
fisubrs
pop
fstl
sub
xchg
insb
pop
xchg
cmpb
mov
cmp
int
adc
adc
popa
add
push
sti
daa
icebp
dec
or
mov
jo
sub
dec
jbe
pop
xor
xchg
rolb
and
sahf
adc
adc
stos
lds
daa
xchg
cmc
mov
lea
mov
jae
shll
inc
ljmp
mov
sub
xor
cli
dec
testb
mov
jle
roll
ret
mov
sub
add
jnp
push
in
mov
imul
sti
jg
inc
dec
mov
sbb
mov
mov
xchg
push
dec
fisttpl
leave
outsb
push
loope,pn
ds
cmc
adc
insl
xor
imulb
dec
xchg
fs
pop
jbe
sbbl
pop
ret
inc
fdivl
mov
sahf
arpl
fstpt
ss
js
mov
aam
inc
or
or
test
mov
dec
mov
push
mov
mov
pop
scas
int
loope
out
js
pop
out
std
mov
sbb
xchg
add
popl
test
fs
cmovl
ds
fxch
and
push
mov
sub
sub
xchg
leave
rorl
and
inc
mov
lahf
subl
std
push
aas
push
ss
iret
xchg
hlt
outsl
jmp
sub
sbb
js
xor
jg
fsts
adc
inc
jge
lods
push
adc
insb
jnp
js
sahf
jp
mov
mov
loope
mov
inc
stos
fnsave
xchg
or
scas
push
test
rclb
dec
jae
fisubl
mov
sbb
gs
push
rsqrtps
xor
push
inc
bound
cs
push
xchg
xchg
popf
dec
jne
idiv
shlb
mov
mov
push
jnp
sahf
sbb
mov
addr16
das
sub
aam
lcall
adc
add
rorw
dec
insl
dec
movsl
push
arpl
rcrb
jg
sar
js
xor
add
or
mov
in
fildl
fcmovb
pop
shll
jle
mov
out
lret
jg
jecxz
and
aaa
push
sbb
mov
imul
xchg
out
inc
pop
jne
loopne
popa
push
jae
cmpl
cmpl
inc
jns
push
push
in
mov
and
addb
movsl
jne
inc
and
movsl
orl
popa
cltd
or
testl
movsb
bound
out
lods
add
cmp
mov
push
dec
stc
das
cmp
sub
repz
aam
mov
cmp
popa
dec
imul
mov
pop
inc
xor
stos
mov
shl
sbb
gs
dec
sub
cli
adc
mov
popa
inc
jbe
test
jmp
push
ficoms
and
add
je
pop
or
stos
sbb
sbb
sbb
push
cs
mov
or
clc
jbe
mov
or
mov
pop
stc
ja
pop
push
iret
cmp
call
pextrw
aas
cmpsb
subb
sbb
popf
xlat
pushf
mov
jae
int3
or
mov
pop
ja
sub
imul
leave
rolb
pop
or
stos
dec
in
jbe
mov
shrb
clc
repnz
mov
pop
cli
push
and
xor
or
push
xor
inc
out
outsl
dec
and
xchg
pop
pop
nop
rep
ficompl
pop
imull
dec
push
scas
jge
add
lea
jecxz
xchg
leave
xchg
cmpsb
pop
jge
daa
loop
inc
out
xchg
jle
std
pop
insb
lret
pop
out
mov
int3
push
push
fstp
add
and
fidivrl
sub
dec
out
seto
mov
stos
popa
push
sub
mov
pop
xor
sbb
orl
cmp
stos
xor
xor
adc
sti
add
iret
or
fst
cmp
fisttpl
add
mov
add
xchg
xor
push
out
lods
mov
popf
mov
test
add
mov
inc
mov
ja
sbb
jnp
adc
sub
clc
iret
lods
movsb
out
pop
mov
and
insb
dec
pop
mov
mov
sub
hlt
in
jge
xchg
bound
adc
lock
or
or
sbb
aas
adc
push
xchg
cli
push
mov
push
out
stos
cmp
mov
xchg
sbb
nop
imul
fistps
fyl2xp1
mov
fchs
repnz
mov
inc
int3
xlat
pop
ljmp
ljmp
adc
js
das
cmpsl
and
enter
dec
dec
or
cld
in
or
roll
cwtl
sub
popf
outsl
push
ret
outsb
and
scas
imul
jp
aaa
inc
test
mov
jge
call
rorl
and
or
mov
adcl
lods
push
dec
jo
in
adc
ret
frstor
inc
inc
sbb
cli
fsubs
add
stos
pop
adc
inc
cmp
and
add
movsb
push
das
push
add
sub
ds
adc
mov
jmp
into
out
outsl
in
daa
icebp
roll
into
fwait
sbb
sbb
sbb
and
cmpsl
repnz
insl
add
mov
nop
mov
in
push
mov
daa
aaa
nop
dec
pusha
xor
fwait
dec
mov
jae
mov
inc
addr16
cmp
push
dec
les
push
or
inc
cmpb
cmpsb
dec
arpl
push
idiv
push
lret
aaa
std
cwtl
pop
xor
ja
or
es
insb
add
out
sbb
cs
push
in
jge
rcr
or
and
inc
jle
fimull
movsl
pop
ds
add
or
icebp
gs
arpl
leave
mov
imul
mov
sub
push
ljmp
outsl
ret
adc
sbb
lahf
mov
push
nop
shrl
loop
stc
fs
xchg
js
sub
lea
aam
in
adc
jno
mov
neg
test
jbe
dec
je
xchg
lret
aam
cmpsl
mov
fs
repnz
push
or
test
addr16
mov
lods
sbb
out
and
jg
sbbl
ret
push
movsl
xlat
push
sti
pop
fwait
or
sub
xor
pop
xorb
mov
inc
dec
in
add
rclb
mov
mov
adc
and
mov
inc
mov
ljmp
sub
mov
inc
lret
xchg
test
adc
mov
dec
jno
pop
dec
hlt
mov
sarb
ds
pop
cltd
inc
push
fimuls
and
loopne
jb
push
sbb
cmc
sbb
and
push
aad
or
ja
dec
pusha
fs
scas
call
fs
mov
dec
fwait
out
lods
and
sub
dec
xchg
cld
lods
add
outsl
cli
ss
in
or
outsl
pop
or
mov
jns
add
sbb
sbb
jp
dec
add
mov
arpl
add
and
lock
cmp
stc
or
call
cld
les
mov
dec
hlt
jg
sbb
mov
dec
push
mov
mov
jns
jge
add
cmpsb
dec
fucomip
pop
stos
data16
lods
data16
push
adc
mov
adc
lods
ret
rclb
add
push
js
inc
sbb
insb
or
or
push
lods
pop
dec
adc
movsb
dec
mov
repz
popa
adc
mov
lret
lock
test
push
int3
test
test
inc
popf
add
push
add
add
xchg
dec
repz
dec
cmp
pop
stos
fwait
inc
fwait
dec
out
jne
push
dec
mov
sbb
pop
shrl
ja
cmp
sub
cmp
test
enter
out
mov
fidivrl
or
scas
jecxz
jnp
mov
lds
push
and
inc
repnz
inc
fildll
ss
mov
inc
dec
jle
insb
pop
jle
sti
add
lret
adcb
daa
mov
push
repz
mov
rol
sub
inc
pushf
jecxz
movsb
jg
cmc
and
sbb
xchg
mov
jb
mov
out
rorb
lock
into
and
sbb
adc
inc
iret
ret
stos
orb
adc
adc
loop
or
push
xor
add
or
mov
das
in
push
pushf
fistpl
lock
std
in
iret
push
leave
or
jle
push
hlt
inc
pop
fnstsw
mov
imul
cmp
scas
adc
adc
sahf
movsb
adc
lret
and
jmp
inc
repz
loop
lret
pop
add
in
jl
mov
lods
lea
push
loopne
movsb
jo
dec
cmpb
sub
in
and
fwait
loopne
xchg
orb
or
jmp
mov
jg
test
dec
js
clc
sub
lods
sub
inc
roll
or
das
push
fistps
icebp
js
jle
xor
movsl
pushf
xlat
call
mov
xor
enter
mov
ljmp
cltd
xchg
ret
pop
test
aaa
dec
aam
push
dec
stos
xchg
stos
stos
add
and
inc
xchg
xorb
xchg
popa
cld
mov
push
and
fmull
jmp
cs
sahf
sub
addr16
mov
pop
jne
fmuls
mov
mov
mov
pop
and
xchg
jp
push
repnz
or
in
cltd
lock
cwtl
pop
sub
sbb
cld
or
adc
mov
jns
orb
lea
cmp
fisubs
xor
sub
add
clc
cmpsl
push
xlat
cmpl
rclb
scas
ficompl
out
pop
inc
xor
mov
sub
inc
test
push
and
and
mov
clc
cmpsl
rcr
jecxz
jne
pop
test
cmp
imul
add
push
mov
inc
imulb
pop
dec
ret
les
les
fidivs
ret
flds
sahf
aas
lods
mov
hlt
adc
pop
add
inc
jp
fadds
stos
or
addr16
lret
adc
das
cmp
lods
jno
pop
mov
outsb
jo
pop
fstpl
sbb
ficomps
test
shrd
mov
lds
and
iret
pop
xor
data16
push
aad
ljmp
dec
hlt
out
hlt
roll
and
in
lret
mov
push
enter
add
sbb
mov
xchg
sbb
or
cmpl
push
out
out
xchg
lcall
dec
push
out
jno
or
sbb
mov
adc
rcrl
outsb
shrb
and
inc
loop
mov
xchg
je
lea
xor
shll
push
push
mov
pop
sub
adc
and
cmp
aad
jb
adc
orl
fsubrs
adc
das
mov
push
mov
jno
dec
pop
les
loope
dec
push
push
leave
leave
ret
call
cld
mov
shrb
or
push
jl
insb
sub
pushf
xor
push
cmpsl
mov
sbb
add
shrl
or
pop
sbb
pop
jge
stos
adc
xchg
ljmp
or
insb
adc
mov
add
mov
cltd
sbbb
rorl
addl
sub
popw
loop
adc
ret
movsb
adc
and
sub
sahf
mov
lcall
mov
xor
jns
leave
push
adc
int
or
push
adc
and
sub
sub
pop
gs
jecxz
xchg
negl
push
jle
inc
inc
xchg
sub
je
ljmp
pop
sub
sub
xchg
fstpl
icebp
aad
sub
xchg
into
jnp
mov
ficoms
mov
dec
pop
movsb
sub
or
mov
js
testl
or
cld
push
jnp
or
sarl
mov
aaa
mov
dec
fstpl
xchg
dec
arpl
mov
mov
xchg
cmp
pop
fsin
sub
cmp
xlat
mov
mov
rcrb
sbb
lods
in
push
lret
inc
mov
fwait
aaa
and
jmp
mov
insb
push
mov
cs
in
pop
or
sub
scas
loop
mov
lea
dec
inc
pop
and
inc
cmp
aaa
data16
mov
xchg
mov
mov
insb
push
int3
aaa
jge
push
pop
test
xchg
aam
je
mov
cmc
mov
lahf
daa
cmp
gs
fildll
in
rcr
sahf
cmpsl
cmpsb
dec
leave
out
es
mov
hlt
dec
jno
pop
cli
sti
push
ja
pop
push
mov
fistl
add
or
loop
loopne
outsl
in
pusha
inc
pop
data16
lea
or
mov
ret
jmp
enter
pop
cmpsb
fisubs
outsl
ror
sub
jmp
sbb
cmp
add
cmp
addr16
mov
dec
mov
dec
jg
and
pop
mov
sbb
out
cli
push
cltd
xor
jns
lea
inc
jo
sbb
les
std
mov
xor
jnp
xchg
or
pop
or
cltd
out
pusha
scas
movsl
pop
inc
ret
ss
sti
sbb
pop
add
sets
jl
cmp
inc
mov
mov
pop
inc
std
fidivs
enter
and
jbe
or
cltd
outsb
mov
ja
in
popf
adc
ds
rol
jecxz
movsb
add
xorb
ds
repz
push
mov
out
xchg
mov
jo,pn
dec
repnz
pop
inc
je
dec
push
push
jnp
push
xlat
jecxz
fistpl
sti
adc
pop
popa
sub
pushf
in
in
mov
xchg
popa
in
cmp
call
or
imul
inc
inc
popf
cmp
insl
pusha
and
push
cltd
mov
icebp
sub
mov
repnz
mov
or
adc
fsubrs
mov
jae
repnz
pop
and
cmp
or
mov
imul
shrl
cmpsl
outsl
add
bnd
pop
lea
rolb
mov
test
add
mov
xchg
sbb
enter
sub
inc
pushf
into
mov
adcl
flds
xor
inc
enter
test
idivb
xor
cmpsb
cli
and
jp
xchg
jmp
pop
jp
mov
popf
jecxz
mov
es
cs
das
clc
sub
xchg
pop
mov
rep
fistpl
divl
ljmp
and
nop
or
xchg
mov
mov
dec
xor
pop
lea
pop
notl
repz
nop
adc
or
sbb
imul
inc
repnz
rolb
icebp
mov
inc
cmp
cmpsl
bsr
add
adc
push
or
jp
adc
movsb
fisubl
test
or
add
mov
je
cltd
push
lahf
popf
lret
or
loopne
and
jno
mov
aam
and
mov
cli
dec
push
clc
push
sbb
inc
call
lock
pop
and
sub
or
xchg
dec
popa
mov
sbb
ret
out
cli
mov
mov
mov
jnp
push
aaa
out
push
sub
adcb
sbb
out
push
pop
in
push
pop
sbb
push
jmp
idivl
inc
outsb
cs
popa
lea
add
mov
add
or
out
xchg
add
jge
fs
dec
pushf
movsb
sub
pop
sub
rol
mov
das
addr16
loopne
fmul
test
pusha
xlat
and
das
dec
mov
pop
pop
pop
fwait
lds
inc
lret
lahf
xor
insb
mov
ss
cmc
lea
fsub
or
xor
aas
sbb
iret
jp
push
std
cmp
or
repnz
mov
je
and
sub
mov
xor
pop
lret
test
pop
or
std
and
adc
sbb
xorl
mov
inc
cmp
test
push
in
hlt
jns
hlt
cmp
jb
jle
mov
adc
test
std
loop
dec
mov
sbb
andb
mov
orl
lea
cvtpi2ps
push
addr16
dec
add
dec
cli
lods
es
sbb
xor
mov
ja
mov
pusha
xlat
or
xchg
lret
popf
push
aaa
and
scas
pusha
xchg
shll
push
call
rolb
lods
fsubl
dec
aas
pop
aaa
xor
fstpl
jne
xor
stc
push
mov
mov
mov
movsl
stc
add
adc
jae
into
out
fbld
or
push
sub
dec
xor
jle
insb
cmp
push
sbbb
movb
inc
lea
mov
cmp
movb
test
cld
and
adc
int
je
jns
sub
jo
lret
push
adc
ret
sub
add
pushf
mov
lret
dec
ljmp
cmp
xchg
popa
inc
shl
lret
in
mov
add
jno
xrelease
ficomps
or
xchg
fwait
popf
jge
in
daa
stc
cmp
scas
gs
hlt
dec
flds
jp
mov
fdivs
sarl
xchg
sub
adc
cmp
lods
dec
out
inc
xchg
push
mov
scas
sbb
mov
adc
cmp
sub
rcrl
mov
pop
push
mov
fwait
inc
cwtl
mov
and
xchg
mov
cmp
pop
popa
mov
pusha
adc
cli
xchg
jns
sub
js
or
xchg
das
into
popf
pushf
loopne
out
jmp
cmp
xlat
lds
test
lret
clc
les
scas
and
adc
lret
pop
cmp
xchg
mov
cwtl
push
push
aas
xor
xchg
out
add
sarb
jge
and
fcmovbe
mov
xor
sub
call
jbe
pop
std
jno
and
test
loopne
cltd
mov
or
add
jne
je
jns
lds
fwait
ss
push
push
std
cwtl
jb
enter
xchg
add
sbb
mov
adc
insb
test
inc
movsl
xchg
js
jbe
jbe
jbe
popf
pop
gs
popf
loop
push
sbb
lahf
xor
ret
dec
arpl
xchg
repnz
cmpsb
std
adc
paddsb
and
mov
ja
mov
sti
pop
imul
rcr
mov
es
adc
adc
cmpsl
stos
adc
push
or
push
mov
jge
fwait
sbb
push
cmpsb
xchg
sub
push
jl
sahf
mov
mull
shlb
repz
js
dec
jmp
cmp
iret
loopne
add
cmp
mov
dec
jbe
pop
sub
outsb
icebp
push
mov
adc
mov
dec
iret
ds
ret
pushf
and
pop
shrb
rcl
cmpsl
sub
aad
jne
inc
cwtl
mov
xor
xor
jb
pop
push
aad
js
pop
jle
jl
shlb
mov
adc
inc
xor
push
sahf
pop
out
rep
lahf
fwait
sbbl
push
adc
jmp
imul
and
push
iret
shrb
mov
dec
fwait
nop
int3
push
and
jmp
adc
xchg
dec
sub
mov
lahf
xor
cmpsb
pop
cmp
sbb
imul
pushf
mov
jg
dec
push
mov
mov
cmpsl
pop
js
fucom
lret
lret
push
out
xchg
rcrb
sub
call
into
in
std
add
jb
aas
cmp
lcall
mov
lea
add
jns
mov
add
idivl
pop
jmp
add
sub
mov
insb
jge
loopne
dec
inc
sbb
aaa
or
lret
orl
jo
inc
mov
fsubs
sbbl
mov
jmp
ljmp
or
icebp
jmp
outsl
fnstenv
and
add
lahf
mov
jne
xor
lods
cmc
clc
sub
mov
in
xchg
scas
mov
or
mov
xlat
cmpsl
jle
push
push
jl
jg
popa
jl
xor
addr16
dec
dec
popa
stos
ds
pusha
bound
dec
push
and
sti
in
fidivrs
inc
add
lods
mov
pop
inc
mov
pop
jg
ficomps
xor
int
and
dec
pop
dec
scas
xorl
mov
sub
stos
add
aam
cmp
cmpsb
rol
jbe
fnstsw
xchg
icebp
ret
cmp
int
jb
cmc
in
cs
movsb
fiadds
push
push
test
add
dec
cli
mov
cmp
pusha
sbb
inc
adc
sub
jbe
enter
mov
adc
cli
jg
and
mov
sbb
leave
cwtl
mov
in
enter
sub
jns
mov
jle
add
mov
icebp
outsb
sbbl
daa
js
sbb
xor
aas
pop
mov
je,pt
mov
leave
pop
and
pusha
fs
sub
mov
xchg
xchg
add
rol
icebp
jo
sub
pop
test
dec
std
jns
mov
std
movsb
shrl
hlt
lcall
mov
cmp
push
inc
mov
mov
enter
xor
ja
out
lods
pushf
mov
inc
outsl
repnz
or
inc
mov
and
ljmp
mov
mov
ret
jb
add
inc
lds
jo
int3
movsb
inc
and
insl
sbb
mov
dec
jne
sub
jb
lods
and
out
sub
or
jnp
add
fldenv
mov
add
xor
mov
mov
mov
or
sub
fcmovne
push
push
push
popw
xchg
loopne
xchg
inc
xchg
or
decl
testl
adc
aas
ret
sbb
cmpsb
inc
or
inc
jns
mov
push
stos
out
push
daa
inc
add
mov
nop
pop
stos
lds
shrb
inc
outsb
cmpsl
and
pop
mov
cmpsl
xchg
dec
daa
ficompl
jp
loop
insw
repz
sbb
or
xchg
push
cmp
mov
jge
iret
sbb
xor
mov
mov
inc
mov
sbb
bnd
lods
adc
mov
lahf
or
xor
dec
imul
test
dec
addr16
xor
enter
push
popf
jns
fidivs
ja
inc
daa
push
ret
stos
stc
out
ja
xor
xor
and
gs
cmp
mov
mov
test
add
decl
das
xchg
mov
lahf
icebp
and
and
cld
sar
aad
push
inc
movsb
dec
pop
cmp
movsb
js
add
dec
jg
stc
cld
or
xor
mov
bnd
in
adc
fmuls
out
rorb
sbb
ljmp
cmc
sub
or
lds
cmp
pusha
inc
mov
xchg
push
stc
xor
cltd
inc
and
or
mov
cld
cmp
inc
sahf
push
pop
dec
adc
cwtl
xor
cmpsb
sbb
rcr
lock
or
mov
jge
pop
inc
js
daa
mov
jo
shl
lods
movsl
cli
popa
xchg
and
cmp
jge
sbb
fiadds
rcl
mov
add
ss
aas
ljmp
dec
aas
sub
xor
testl
inc
inc
loop
sub
std
test
roll
pop
push
jb
movsl
jp
mov
pop
mov
outsl
clc
jge
and
cltd
mov
xchg
mov
xchg
in
stos
sahf
mov
in
push
cli
loope
je
out
icebp
in
xchg
xlat
and
ds
cmpsb
mov
inc
pop
fstps
push
aas
sahf
fisttps
loope
dec
test
mulb
jo
popf
dec
mov
outsl
push
push
xor
adc
jbe
jo
jecxz
mov
pop
inc
add
fsubs
push
es
or
inc
pop
jp
mov
or
loop
mov
js
dec
dec
xlat
adc
pop
add
mov
mov
loop
lret
insl
sbb
and
call
sub
out
in
mov
xlat
jnp
insl
mov
dec
jnp
xchg
insl
add
push
sub
popf
or
inc
imul
push
notb
rcrl
repz
ds
lret
and
scas
dec
dec
sar
out
jo
cld
pop
xorl
add
arpl
dec
sahf
sahf
out
or
data16
lods
addr16
leave
mov
and
mov
subb
xchg
or
mov
or
sbb
mov
dec
aam
jg
fidivrl
inc
or
pop
pop
lods
xor
out
hlt
mov
outsl
test
sub
and
jb
cwtl
rcrb
fisubrs
sahf
add
sahf
or
jecxz
mov
mulb
mov
inc
sbb
stc
in
xlat
xchg
and
mov
xchg
mov
push
sub
leave
pop
lea
mov
inc
cld
mov
int
push
scas
cmp
imull
nop
test
outsl
cmp
cmp
imul
xchg
pop
sub
jge
loopne
mov
sbb
mov
lock
push
es
unpcklps
push
cmp
xchg
jno
sbb
push
fidivrs
jbe
sarb
or
adc
test
lods
sub
outsb
sub
mov
mov
ret
sahf
mov
sub
pop
fsubs
lea
mov
in
ds
pop
xchg
xchg
pop
cs
ret
lcall
imul
movb
pop
inc
dec
lods
cmp
in
rcrb
xor
cmp
adc
dec
das
add
xchg
jno
lret
cmp
aam
push
inc
dec
daa
aaa
lock
aas
or
out
imul
jg
scas
mov
dec
aad
test
push
mov
imul
jb
pop
sbb
inc
xchg
lea
aam
sub
dec
imul
out
fsubs
cmp
pushw
jge
pop
dec
std
fpatan
adc
xorl
jecxz
ljmp
mov
pop
loopne
imul
pop
cmc
out
fisttpll
into
ret
mov
adc
adc
test
lea
adc
int
mov
and
lock
add
lea
loopne
pop
stc
push
dec
int3
stos
in
pop
xchg
pop
jl
es
and
dec
sub
and
lret
subl
jp
stc
xchg
cli
cmpsb
in
fldl
jg
jae
jecxz
xchg
rcl
mov
sbb
movsl
arpl
sub
pop
int
popf
jo
rclb
es
shl
inc
add
out
push
fiadds
add
icebp
negl
adcl
mov
cld
cmp
push
nop
sbb
test
mov
adc
fs
jno
loopne
push
fidivs
cmp
insb
sahf
test
negb
repnz
mov
or
sub
xchg
std
out
xor
dec
arpl
mov
les
cltd
lds
sub
sbb
pop
push
fidivs
xchg
inc
fnstcw
mov
cmp
add
or
push
or
mov
cmp
lds
pop
call
xor
push
sbb
xchg
jecxz
jo
lret
aam
jle
movsb
data16
pop
loopne
mov
shr
sub
mov
fildl
pop
sbb
xor
pop
jnp
ds
jne
mov
movsl
stos
cmp
xchg
pop
fildll
and
sbb
bswap
pop
outsl
dec
cld
repnz
vpmullw
int3
push
out
lock
xlat
jp
sbb
jbe
or
adc
push
rclb
mov
and
lret
clc
mov
sbb
cmc
imul
lret
inc
cmp
add
lea
notb
cmc
movsb
rcll
loopne
mov
adc
pusha
sbb
scas
sub
push
loopne
mov
or
or
adc
cmp
lar
cmp
push
and
aad
jb
or
das
fists
repz
andl
jno
pop
nop
mov
cmc
aas
pop
lcall
and
inc
mov
pop
fiadds
sub
pop
js
ljmp
fists
xchg
mov
xlat
adc
push
inc
pop
rcrb
in
jns
ja
pop
pop
sbb
int3
mov
and
lea
test
lahf
xchg
mov
add
jns
std
xchg
scas
mov
pop
push
and
mov
hlt
popa
lcall
aas
rcll
gs
push
pusha
cwtl
lods
mov
cmp
addb
adc
test
jecxz
add
ret
sahf
mov
popa
int
mov
xor
mov
iret
out
xchg
fstl
push
jne
mov
mov
mov
add
repnz
jecxz
adc
lret
int3
mov
aaa
mov
mov
std
fdivrp
add
xchg
jge,pn
pop
push
or
repnz
push
lahf
mov
xlat
pop
clc
aas
cwtl
xchg
adc
jp
xor
imul
cmpsb
or
sub
sub
scas
shll
and
sub
lidtl
call
test
adc
push
add
stos
clc
sub
fsub
stos
push
leave
push
mov
sahf
shl
push
lret
sub
push
fwait
push
cltd
adc
xchg
mov
insl
pop
hlt
enter
adc
cmp
test
push
xchg
dec
pushf
sarl
mov
mov
rcl
mov
pop
icebp
xor
cmp
jle
mov
fistl
sbb
jg
sub
or
ss
fxch
fimuls
sbb
or
pop
xor
adc
mov
inc
sbb
fs
orl
mov
test
push
inc
leave
sub
pop
add
sbb
popa
sbbl
inc
pop
fs
aam
xlat
negl
lret
test
repnz
insb
push
scas
lods
addr16
cwtl
faddl
xor
call
sub
cltd
in
jno
and
xchg
in
or
aam
testb
sub
int
adc
sbb
cmpb
and
shll
mov
insl
dec
inc
aaa
popa
sub
add
lods
sti
outsl
cmp
push
add
add
movsb
jne
call
mov
mov
sub
mov
and
and
mov
cmp
daa
inc
and
jae
mov
lret
mov
loop
xlat
scas
jp
push
test
popa
shll
movsb
sbb
pop
jl
push
insb
sbb
inc
or
lahf
push
in
and
sub
xchg
or
movsb
inc
ds
fcoml
pop
jb
sub
int
pop
je
adc
dec
rcll
jno
mov
das
fucomip
adc
sbb
ljmp
ja
xlat
xchg
pop
into
outsb
stos
mov
int3
pop
call
in
in
or
addps
popf
sbb
or
mov
adc
jmp
cmp
loopne
dec
lods
iret
es
mov
mov
cwtl
push
inc
fidivs
push
add
and
sbbl
repnz
das
and
iret
test
mov
test
aam
push
xchg
xchg
nop
sahf
xchg
outsl
lea
fldt
sbb
outsl
pop
es
jne
pop
cmp
dec
frstor
jp
arpl
stos
mov
in
mov
rol
std
lret
pop
or
or
rcr
in
fcoms
sub
lea
loop
inc
dec
les
adc
cltd
imul
mov
cld
mov
mov
cmc
adc
shlb
fwait
out
imul
and
lahf
mov
adc
jl
cmp
jnp
mov
add
mov
fmull
push
adc
mov
out
icebp
aad
or
cmc
push
and
cltd
xchg
mov
xor
imul
dec
jne
stos
sub
mov
mov
xchg
push
negb
imul
test
inc
push
cmp
aam
cld
push
les
clc
jno
repnz
ficomps
jbe
orb
lea
inc
xchg
mov
mov
add
or
ja
daa
mov
jbe
jle
cld
scas
adc
jl
jmp
fisttpl
jbe
fidivs
add
test
pop
pop
in
inc
ret
loop
jo
cs
cwtl
scas
icebp
push
cmp
adc
out
into
mov
add
or
mov
xlat
rcll
mov
rorl
hlt
lods
cmp
lcall
dec
into
jo
dec
cmp
pop
xchg
nop
lret
sub
push
cltd
or
es
jl
movsb
fisttps
cmp
xchg
lods
xchg
sub
jb
pop
mov
filds
sti
jns,pn
cmp
mov
fsubp
enter
jne
jp
std
loopne
in
aaa
dec
dec
pushf
dec
add
xor
outsl
cld
jbe
push
jge
xchg
ficompl
sbb
movsb
xchg
pushf
cltd
sahf
add
movsb
jecxz
jmp
mov
repnz
xchg
add
cli
call
sbb
movsl
pop
and
add
movsl
data16
leave
fwait
ret
scas
subb
cmp
loop
inc
mov
add
ret
inc
mov
xor
iret
pop
clc
jle
fistpl
scas
lock
mov
out
adc
pop
pop
cmpsl
lods
ds
fwait
orb
repz
xor
mov
xchg
xor
cs
rcrb
js
mov
xor
sub
test
push
into
sub
lods
dec
mov
addr16
adc
js
pop
in
inc
das
dec
xor
push
xor
or
and
jbe
cld
test
shrb
insl
sub
rolb
popf
rorb
cs
punpcklbw
mov
ret
sahf
std
xor
lods
sbb
sub
and
test
in
in
es
and
cli
addr16
jmp
xchg
mov
dec
sub
outsl
pop
or
push
andl
int
scas
icebp
inc
pop
int3
inc
sub
loop
lcall
hlt
cmp
leave
lock
ss
add
ficompl
popa
lahf
push
imul
notl
jge
add
divb
jo
imul
cld
outsl
inc
xchg
push
pushf
addb
fwait
cbtw
push
imul
sub
das
sbb
sbb
mov
sbb
loopne
ret
in
push
dec
dec
rol
fidivl
pop
scas
test
jnp
xchg
cld
cmp
dec
xor
fwait
and
std
cwtl
lret
repz
xchg
cwtl
adc
dec
mov
ret
fld1
cld
std
stos
jle
shrb
mov
cmp
aam
mov
xlat
outsb
mov
out
jae
xor
pop
hlt
fidivl
insb
sub
mov
repz
sbb
sub
jmp
out
mov
ret
jno
adc
cmp
sti
add
push
sub
or
lds
cwtl
movsl
inc
std
jp
jl
add
loopne
pop
aam
imul
in
push
dec
call
dec
das
repz
mov
jno
out
movsb
sub
ret
and
rsm
cmpb
daa
test
fs
or
xchg
jecxz
mov
xor
orb
int3
xor
test
lods
scas
or
inc
pusha
mov
cmp
pop
xlat
cmpsl
outsb
in
jb
testb
push
icebp
and
push
inc
lds
pop
sti
mov
test
pop
mov
aaa
loope
cltd
sbb
and
cwtl
cmpsb
jno
popf
jns
cmpsb
stos
fcoms
nop
mov
in
push
push
jecxz
xchg
lods
cld
xlat
jp
andb
pop
dec
mov
call
ss
enter
in
cmpb
or
dec
xor
rorl
or
push
ret
push
insl
insb
jno
repnz
movsl
jne
sbb
fcmove
pop
pop
or
ljmp
cmpsl
fnstsw
pop
shr
sub
xor
lea
mov
mov
cmp
jo
mov
sbb
je
fdivrs
jae
dec
mov
jl
outsb
xchg
call
dec
dec
or
mov
cld
lcall
fdivp
pusha
pop
mov
icebp
pop
dec
xchg
sti
aad
in
cmpsb
xor
loop
dec
xchg
pop
leave
cli
mov
cmp
or
push
xchg
push
pop
lret
idivl
gs
fidivrl
dec
cmpsl
incl
inc
dec
inc
das
jno
aad
xchg
dec
mov
push
in
mov
push
pop
sub
addr16
mov
fidivl
xchg
sub
aaa
xor
jns
mov
cmp
hlt
and
jns
xor
jns
lret
into
dec
jl
pop
pop
mov
mov
add
push
push
or
subb
nop
xchg
jp
lret
cmp
divl
jne
imul
add
iret
push
decl
pushf
ss
inc
and
lret
shrl
jbe
sub
les
fwait
fs
ret
dec
cmp
iret
loope
sarb
mov
push
dec
std
jns
rclb
mov
pop
and
xlat
sbb
js
jle
test
mov
fwait
sub
xchg
push
filds
pop
xchg
dec
jl
mov
pop
loope
sub
gs
or
fidivl
out
shrl
xchg
sbb
or
jno
mov
push
out
dec
fcmovnu
aam
cmp
dec
mov
add
inc
int3
mov
movl
fiaddl
inc
jb
ss
jle
dec
xchg
rcrb
sarl
hlt
lahf
divl
sarl
cmp
outsl
mov
push
adc
push
cld
mov
lcall
jp
into
adc
out
and
cld
adc
cli
cmp
je
add
imul
cmp
push
push
std
lret
add
stos
fucomp
mov
ss
pushf
jbe
out
movsb
add
push
push
xor
lods
dec
in
test
jge
sub
jle
fcmovu
cmp
adc
lcall
pushf
ret
insl
sahf
sub
iret
push
int
in
and
jno
scas
xor
xor
loopne
xchg
adc
add
test
popa
call
addr16
test
mov
jbe
in
mov
sahf
shl
subl
push
xor
cmp
dec
xor
fwait
pop
out
xor
mov
add
and
push
push
dec
ljmp
into
imul
cmpl
push
pop
pop
dec
cmc
addr16
test
je
ja
mov
scas
push
inc
jecxz
mov
ficomps
lea
cmp
adc
sub
jbe
mov
sti
je
pop
jge
mov
or
pop
fmull
out
div
scas
pop
std
stos
or
and
into
push
or
jb
aaa
adc
sbb
out
call
pop
cmpsl
mov
cmpsl
shl
psllq
jp
dec
and
ja
jne
mov
xlat
in
dec
mov
fwait
bound
pusha
lea
push
mov
mov
push
mov
sbb
and
adc
add
popf
cwtl
sarl
pushf
dec
push
dec
sbb
lea
aad
bound
mov
push
or
xor
add
sbb
rcl
inc
mov
pushf
push
lcall
adc
enter
or
fucomi
testb
or
sbb
inc
and
rorb
mov
add
add
dec
popf
cltd
loopne
mov
das
iret
outsl
add
cld
stos
fwait
test
xor
out
addr16
mov
icebp
cli
dec
popa
pop
bound
add
jns
loop
jg
lret
jge
add
dec
ljmp
leave
cltd
mov
mov
loopne
std
mov
and
jge
jne
mov
roll
jnp
das
fdivrl
jmp
inc
and
test
jmp
std
mov
jne
xchg
mov
pop
fdivl
dec
mov
out
hlt
jnp
cmp
sub
outsb
xchg
jmp
nop
jl
div
and
sub
mov
mov
push
les
xchg
ret
sti
cmp
in
std
mov
mov
imul
mov
leave
movsb
sbb
sub
mov
rcl
lods
sbb
sbb
pop
and
scas
cmpsl
sahf
popf
in
push
xor
fstcw
pop
into
push
aam
mov
out
aad
icebp
out
int
inc
out
lods
div
outsb
mov
dec
add
test
mov
mulb
inc
stc
cmp
sbb
xchg
xchg
stc
sub
xor
movsb
jl
cmpsl
addr16
out
jge
lret
jno
xlat
push
xor
or
nop
test
sbb
in
loope
sub
xchg
xchg
push
scas
sub
fmuls
std
pop
jno
icebp
fnstenv
jle
loope
jge
xchg
push
scas
push
test
mov
push
inc
sub
jge
popf
cmp
mov
jge
cmpsl
ljmp
mov
inc
wbinvd
jge
sub
and
xchg
ljmp
mov
mov
or
sub
int3
adc
ljmp
push
dec
cmp
imul
push
xchg
sbbb
pop
out
mov
xor
mov
mov
xchg
loopne
mov
aas
cmpl
or
outsb
sahf
or
and
sub
mov
mov
inc
xchg
in
mov
cmp
xchg
jbe
loope
jne
pop
mov
mov
inc
outsb
mov
lcall
mov
inc
rclb
lret
les
lods
xchg
jae
mov
roll
inc
movsb
jl
out
scas
popa
or
mov
sbb
xor
xor
jns
adc
addr16
test
out
sbb
ja
fsubrl
jmp
icebp
jmp
incl
adc
cld
int
out
movsb
jno
push
mov
shll
repnz
xlat
outsl
or
push
jne
nop
inc
icebp
xor
pop
notb
push
popa
popf
lret
repnz
pop
add
xor
sub
jp
mov
mov
lds
cwtl
lcall
jae
imulb
jg
leave
insl
mov
push
xor
push
iret
sub
push
push
enter
jecxz
pusha
xchg
mov
xor
imul
stos
loope
jb
aad
pushf
lds
add
addr16
xchg
mov
lretw
push
ret
arpl
in
add
sub
sub
mov
cltd
jg
mov
inc
pop
xor
push
sti
jnp
mov
sbb
enter
adcl
xor
adc
frstor
call
pop
out
cmc
jbe
cmpsb
xor
or
pop
and
test
cltd
aam
or
addr16
inc
inc
xchg
pop
xchg
jp
dec
arpl
jecxz
sub
xor
mov
inc
jae
dec
ja
xchg
inc
cmc
or
dec
push
outsb
and
fdivs
lods
mov
lea
dec
pusha
mov
popa
subb
jo
xor
lods
aaa
cld
mov
mov
lock
hlt
mov
push
or
mov
sub
mov
cmp
jp
adcb
xlat
mov
jns
adc
aam
cmp
sti
loop
fadd
test
inc
xchg
jle
sarl
inc
addps
pop
mov
in
mov
lcall
bound
test
xor
jge
adc
das
and
aad
xchg
aaa
paddw
aas
jecxz
es
rep
sti
jge
pop
xchg
mov
push
and
push
mov
imul
into
push
data16
idivb
mov
or
sti
add
sti
stos
mov
mov
inc
bound
or
cmp
mov
cmp
mov
into
adc
jp
loopne
add
lea
inc
fwait
ljmp
lcall
cmp
sub
aam
xor
sarl
adc
rol
aas
push
fstpl
add
cmp
pop
lea
test
mov
jg
lods
push
mov
fcmovb
hlt
scas
sahf
mov
mov
rcl
add
inc
mov
cwtl
lods
adc
jb
ljmp
or
cmpsl
sub
ret
mov
xchg
test
pop
push
xor
dec
scas
scas
test
adc
out
out
ret
lods
xor
add
adc
fldt
xor
enter
adc
js
cs
push
arpl
sahf
aas
xchg
test
or
sbb
repnz
aas
lds
mov
mov
movlps
in
xchg
mov
cmp
out
iret
loop
jb
push
les
pop
movsb
nop
lret
dec
add
and
push
test
xor
call
xor
xchg
je
popf
pop
mov
mov
in
mov
lahf
ja
aas
add
mov
adc
jo
sti
mov
arpl
test
clc
int3
mov
incl
movsb
into
call
popa
out
repz
insl
int3
push
or
pusha
testl
sbb
sbb
test
and
pushf
xor
cwtd
sbb
pop
jo
gs
jb
cltd
cld
cmp
cld
xchg
push
push
aam
orl
movsb
adc
pop
mov
or
mov
cmpsl
pop
mov
int3
pop
gs
adc
out
inc
nop
mov
jp
push
mov
mov
jae
lea
jge
jb
je
push
sbb
test
xchg
rolb
xchg
pop
xor
jp
aad
pop
mov
xchg
lahf
pop
cmpsl
arpl
xchg
pop
xchg
and
sub
or
shll
test
jbe,pt
dec
lahf
stos
mov
push
fidivrl
and
dec
sahf
stos
shrb
mov
bnd
cld
lds
mov
mov
sub
pop
ss
xchg
dec
push
pop
push
sbb
sti
fwait
in
fsubr
in
and
dec
or
mov
jo
dec
das
lods
xor
repnz
mov
sbb
popf
bound
stos
scas
and
pop
add
ror
xchg
gs
lds
sbb
pop
mov
sbb
fsub
imull
loop
push
mov
cmc
push
push
jns
mov
mov
adc
lods
jmp
dec
lret
outsb
out
adc
jg
jg
push
and
insb
les
ret
mov
push
ljmp
idivl
daa
push
std
mov
cmpsl
jo
hlt
fidivrl
sub
in
mov
or
mov
out
insb
loop
push
xor
test
shrb
data16
ret
pop
cmp
pop
jge
mov
les
cmp
and
lds
fsubr
pop
jne
jae
push
sub
push
jns
fcmovnu
mov
mov
cmpsl
add
jbe
sub
imulb
mov
jmp
ficomps
divps
pop
add
or
push
adc
sbb
inc
iret
xchg
data16
lds
push
inc
pop
and
mov
mov
es
inc
lea
ss
add
inc
jle
stos
out
jmp
xor
imul
cmp
mov
mov
movsl
cmp
mov
mov
scas
sti
test
incl
es
cmp
lcall
jle
movsb
pop
lock
jg
pop
test
inc
and
inc
mov
fistpll
mov
leave
ds
sbb
mov
es
mov
fsubr
popa
cli
mov
dec
mov
lds
cwtl
fimull
jge
lock
mov
outsl
pushf
push
push
xchg
sub
addr16
or
and
fwait
mov
ja
or
clc
insb
push
repz
fldenv
lret
lea
cwtl
lods
pop
test
push
fchs
stos
mov
addb
push
pop
inc
std
cmpsb
lock
jecxz
or
or
cmpsb
gs
xor
divb
mov
push
sub
popf
xchg
lods
ja
ret
ljmp
cmp
and
sbb
xchg
jmp
das
pop
lret
fcmovnb
jo
ret
aaa
fimull
cmp
pop
popf
in
andb
pop
or
and
popa
pop
mov
enter
jl
bound
jmp
mov
cmp
scas
jmp
xor
in
add
nop
cmc
push
repz
jmp
sub
or
gs
dec
jbe
cmc
lret
xor
xlat
pop
call
mov
push
mov
sbb
dec
inc
test
mov
adc
std
pop
pop
push
popa
mov
mov
jge
pop
bound
mov
cmp
test
dec
rcll
ss
lock
popf
dec
stos
dec
es
fdivr
loop
adc
cmp
nop
fstp
add
pusha
cltd
fwait
sbb
inc
cmp
or
xchg
adc
rcrb
jno
xor
push
into
jnp
xor
cmc
mov
inc
cwtl
dec
push
mov
aaa
mov
push
sahf
mov
or
add
lods
xor
inc
add
xor
inc
inc
addr16
and
es
cmp
mov
jl
adc
cltd
or
xchg
fldt
sub
mov
jne
sub
xor
pop
lods
push
mov
out
stos
xchg
pop
and
lds
mov
or
popa
xchg
or
xchg
repz
cmpsb
cmp
pop
lock
jnp
mov
hlt
stc
dec
inc
inc
insb
and
addr16
cld
jg
xchg
loopne
push
mov
sbb
pushl
fs
adc
sarb
mov
cmp
mov
popa
jl
addr16
rorb
jle
shlb
xchg
push
icebp
pop
lods
pop
xchg
addr16
mov
push
inc
sti
js
hlt
sti
addr16
sti
pop
sub
sub
jo
and
or
lods
add
mov
add
xchg
push
add
enter
out
adc
insb
mov
js
jno
add
pop
shr
and
pop
mov
into
adc
cmp
xchg
adc
mov
mov
sbb
cmp
jge
mov
pop
xchg
jne
xchg
inc
mov
cli
add
jnp
cmc
js
rolb
ror
mov
bound
loopne
mov
fisubl
prefetch
mov
popa
add
scas
loope
out
addr16
or
push
int3
cmp
push
mov
jne
mov
std
aad
sarb
bound
push
hlt
lret
jmp
xor
js
mov
mov
fstpl
push
jo
call
lahf
aam
push
push
mov
xor
fisubs
push
mov
scas
mov
cs
mov
mulb
call
repz
aas
xchg
cmc
out
mov
inc
mov
push
test
or
push
lods
in
inc
jle
jmp
and
int
cmc
add
xor
pop
lods
and
pop
adc
dec
jo
lcall
jmp
pop
inc
xor
frstor
mov
fwait
lcall
mov
sub
pop
lea
popa
les
dec
cld
les
mov
jmp
push
notb
icebp
scas
dec
idivl
adc
mov
mov
lret
out
cmp
xchg
pop
out
out
imul
sbb
int
push
ja
add
icebp
icebp
stos
std
mov
sti
pop
jl
jmp
push
js
sub
das
data16
popf
js
cs
mov
insl
jne
mov
in
ja
rcl
xchg
cmp
pop
jbe
jle
jb
jne
mov
inc
mov
insl
scas
stos
cmp
push
mov
sub
es
les
or
stos
fnstenv
ja
stc
nop
mov
dec
cmp
stc
cwtl
push
sbb
out
insb
ljmp
cmp
sbb
mov
out
push
push
in
push
pop
inc
lret
ljmp
shrl
jne
xor
add
xor
out
mov
fwait
sub
mov
add
jle
sub
push
dec
mov
lahf
jp
fldcw
xchg
iret
test
cmp
fldcw
testl
sub
es
pop
mov
or
movsb
cmc
mov
pop
sar
push
jmp
xchg
add
or
cmp
xchg
stos
mov
jmp
mov
out
mov
stc
or
pop
ret
popf
sub
arpl
fwait
mov
int3
sbb
adcb
inc
por
scas
add
push
clc
cwtl
ret
sub
xor
or
xchg
mull
mov
loope
insl
loope
fiadds
out
rcll
jo
lea
push
imul
cs
and
fcomps
filds
outsl
fistps
inc
sub
es
lret
mov
xlat
pop
jb
inc
out
scas
loopne
or
fldt
stos
repnz
jg
outsl
push
movl
xor
jbe
xchg
movsl
sahf
je
add
xchg
push
das
aam
mov
cld
push
mov
jb
pop
mov
xchg
lods
lock
test
test
xor
test
test
je
and
idivb
push
fsubl
xlat
jno
pop
imul
pop
es
or
pop
push
jle
notl
mov
ljmp
lret
mov
push
xchg
imul
mov
pop
mov
jne
and
mov
sbb
adc
ljmp
push
mov
push
fisttps
ss
mov
xchg
adc
mov
cltd
sbb
lret
sahf
and
pop
repnz
jb
mov
mov
shll
push
add
or
hlt
dec
push
mov
sti
mov
int3
push
inc
and
loop
add
fbld
jge
lea
mov
cld
das
push
cmpsl
pop
icebp
stos
dec
lock
push
popa
rorb
add
movsl
dec
xchg
arpl
mov
dec
mov
jbe
inc
mov
lock
pop
ret
jns
mov
push
nop
in
push
les
test
ret
sldt
xchg
pop
or
cmp
andb
cli
push
cmp
push
dec
mov
mov
aam
int3
fs
in
cmp
sbb
jl
xor
and
jo
mov
jle
repnz
add
push
mov
pop
jg
aam
outsl
insb
leave
mov
lods
add
nop
lods
cwtl
fwait
mull
imul
daa
into
movsb
add
inc
and
mov
push
dec
fnstenv
outsb
pop
imull
mov
sbb
mov
and
inc
nop
sbb
jne
mov
sub
outsl
sbb
insl
mov
and
push
or
pushf
xchg
outsl
int
in
fs
cmc
xor
or
xlat
dec
jns
loopne
hlt
xor
addr16
mov
or
xchg
ja
popf
pushf
mov
inc
or
movsl
add
aam
iret
fmuls
xor
loopne
mov
in
lcall
xlat
outsb
xor
loope
sbb
ljmp
add
mov
jl
jg
mov
pop
mov
xchg
push
pop
ficomps
mov
popa
and
push
sahf
or
add
or
push
mov
xorl
jb
in
and
xchg
fstps
das
inc
movsl
rclb
pop
fnstcw
sbb
inc
sub
movsb
lea
jo
mov
pop
cmp
jno
loope
mov
sub
mov
test
pop
dec
mov
cwtl
and
push
jb
scas
cmp
fisubl
mov
shll
inc
adc
fs
fisubrl
mov
lea
call
jge
jbe
dec
lock
movsb
jo
fdivs
sahf
xor
pop
dec
adc
in
int
xchg
jg
mov
imul
ljmp
push
jecxz
gs
mov
insb
jo
push
mov
pop
subb
cmp
mov
adc
neg
sub
xor
push
popa
fsubrs
jno
mov
xor
sbb
jp
dec
dec
movsl
push
add
mov
dec
cmp
insb
fisttpll
push
in
inc
mov
jecxz
adc
push
repz
pop
push
jnp
outsb
in
sub
rcl
stc
adc
imul
in
pop
stos
or
jno
lock
adc
lods
sub
cmpsb
cs
gs
sti
outsl
lods
cmp
dec
roll
jnp
repnz
bswap
data16
outsl
fwait
scas
repnz
mov
imul
cmp
gs
jl
aas
pusha
pop
das
sbb
cmp
out
xchg
ficoms
in
divl
les
sbb
jbe
imul
adc
pop
push
push
xchg
ljmp
fwait
rorb
stos
or
pop
push
xor
inc
and
pop
incl
icebp
sub
loop
sbb
add
xchg
push
out
leave
sahf
fs
stos
lds
mov
arpl
xchg
jp
test
or
stos
jge
fildll
adc
xchg
mov
add
lret
jne
les
shrl
push
push
mov
xchg
movsb
mov
add
cltd
cmp
int3
or
dec
pop
cltd
mov
dec
pop
xchg
or
sarl
xor
xchg
arpl
popa
fidivrs
push
shrl
inc
mov
cmpsl
rol
xor
or
sbb
push
xor
pop
int
push
stc
mov
jmp
imul
jle
push
and
pop
cmc
clc
push
fbld
in
repnz
cmp
aad
xchg
mov
int3
mov
outsb
int3
stos
mov
fadd
adc
cmpsl
or
push
mov
inc
cmpsl
pop
imul
mov
loop
cwtl
xchg
jp
int
and
iret
mov
sbb
int
fisubrs
cmc
divb
sub
fs
popf
leave
shr
sbb
xor
mov
popa
lods
scas
jmp
daa
rcl
stos
mov
or
jb
es
fstpl
or
inc
fdivr
icebp
shll
dec
adc
int
cmp
or
cwtl
and
lcall
pop
adc
dec
push
jmp
xchg
mov
mov
mov
xchg
std
xor
inc
stos
outsb
sahf
in
adc
pop
pop
adc
mov
xor
sbb
xorl
cs
popa
clc
push
dec
xchg
clc
sub
sahf
das
in
cmpsb
sub
cmp
mov
or
xorl
cwtl
and
and
idivl
pop
gs
cs
insb
xor
imul
xchg
imul
cmp
mov
in
fbld
arpl
sub
push
jl
and
loop
fisttpl
ja
inc
imul
add
pop
imulb
xor
xchg
lds
jae
rclb
in
xchg
leavew
push
lret
in
testb
in
call
jp
mov
sub
fmull
cmp
bound
jnp
fs
rcl
dec
fsincos
sarb
ficompl
ret
repz
cli
scas
andb
cmp
lcall
sbb
es
nop
cltd
lods
je
mov
sbb
pop
dec
xchg
add
mov
call
int
es
bound
adcl
cmp
loope
mov
ljmp
pop
mov
pop
adc
test
loop
dec
scas
jmp
das
mov
xor
lea
mov
les
xchg
cmp
or
xchg
cmpl
test
cmpsb
sub
lahf
pop
jp
ja
pop
push
pop
cld
ss
mov
mov
jmp
mov
cmp
xchg
pusha
cwtl
js
test
cli
xchg
inc
daa
mov
push
sub
dec
ja
and
test
xchg
or
cmc
outsl
aas
push
sub
xchg
stos
pop
xchg
imul
push
or
xor
stc
mov
mov
jb
pop
ja
inc
int
cmc
mov
movsb
jne
mov
lds
sti
fnstsw
mov
scas
jl
fs
add
ret
add
das
xchg
push
adc
mov
add
iret
icebp
iret
lret
add
dec
into
loopne
xchg
sar
cmp
push
stos
mov
roll
cmc
lret
xlat
data16
jb
xchg
dec
cmp
testl
jae
mov
ds
dec
jg
or
lahf
es
daa
push
jmp
sub
fiadds
push
jae
test
cmp
xor
add
dec
std
scas
xchg
jp
add
hlt
pop
dec
mov
xchg
sbb
rclb
dec
dec
faddl
inc
addl
add
push
ja
jg
pushf
fcomps
jge
stos
adc
jmp
xchg
mov
mov
test
xchg
imulb
test
jo
movsb
add
hlt
rolb
test
movsb
adc
sub
ret
shll
dec
repz
pop
jle
jmp
loope
pop
xchg
lret
lock
mov
cmpsb
test
jne
mov
and
or
push
fldcw
jle
cmp
adc
lds
push
movsb
pushf
test
roll
rol
push
or
sbb
sub
xor
fwait
xor
out
inc
movsb
adc
aam
insl
sub
stos
cmp
jno
and
push
ds
sub
shrl
loope
mov
and
cmc
add
cmp
mov
stc
adc
sti
cmp
jne
imul
xchg
or
fmuls
test
sub
mov
cmp
jge
jp
fbld
push
jmp
pop
enter
jae
pop
out
cmp
lret
pop
add
popa
popa
mov
xchg
mov
and
mov
inc
out
imul
pop
imul
xchg
rsm
loope
xor
test
and
mov
and
inc
popa
dec
incb
pop
adc
pushf
hlt
sub
xchg
subl
shr
sahf
lcall
out
pushf
test
or
aaa
outsb
jp
pop
mov
ds
hlt
xor
movsl
xor
fisttpll
mov
loope
mov
shll
fmulp
and
jl
in
adc
sub
push
in
push
jns,pn
add
xorb
jo
adc
scas
mov
push
and
mov
das
or
stos
ljmp
mov
outsb
call
cmc
les
pop
popa
push
dec
int3
aaa
andl
clc
mov
xchg
fsubs
test
sbb
xor
cmpsl
testb
loope
orl
jne
outsl
mov
pop
xchg
pop
aaa
xor
pop
xor
aaa
popa
loopne
xchg
mov
pop
ja
dec
and
push
ja
shrl
lea
pushl
cltd
dec
lcall
xchg
cs
mov
and
fistpll
enter
mov
sub
adc
jg
adc
dec
enter
mov
adc
fs
call
pop
mov
dec
movsb
fstpt
sahf
cmc
xchg
popf
xor
and
mov
out
sub
jp
iret
xchg
daa
stos
inc
mov
imul
inc
lea
fidivrs
cld
cmpsl
and
mov
scas
sub
xchg
push
pop
add
pop
xchg
mov
xlat
loope
flds
lock
ds
jecxz
xor
sbb
outsl
dec
aaa
ficoml
jb
push
jle
aaa
xchg
mov
inc
cmc
mov
mov
xchg
pop
mov
shrl
sbb
mov
jge
inc
test
rcll
push
cmp
xchg
add
pop
and
dec
push
cmp
addb
in
pop
hlt
mov
out
adc
loop
std
cmpsb
popa
shrb
test
adc
lret
fisttpl
mov
and
adcb
fucomp
loopne
jnp
pop
adc
fsubrs
xor
push
add
xor
jge
dec
in
jae
xor
sti
imulb
fisubl
fs
and
push
in
into
js
push
stos
pop
cld
stc
mov
mov
lods
jnp
add
rclb
scas
aaa
pusha
call
insb
data16
call
std
inc
sbb
test
cli
xor
and
push
cmp
in
in
shll
je
mov
jle
in
lret
mov
xchg
dec
jmp
sub
push
aas
call
enter
jo
lds
rorl
gs
pop
mov
daa
fists
std
aam
push
movsb
cmp
adc
in
loop
pushf
pop
mov
pop
ja
sub
rclb
mov
inc
jecxz
mov
add
pop
subl
jnp
js
inc
jl
pop
jge
fisttps
cmc
sbb
movsb
sarl
popf
fnstsw
leave
or
inc
out
push
xchg
out
imul
mov
push
cwtl
dec
add
lods
add
jmp
or
sub
adc
jge
and
popf
fcmovnb
lret
fcmovu
mov
lea
in
push
adc
mov
cld
pop
dec
pushf
xchg
repz
inc
jae
lods
cmpsl
xchg
hlt
cwtl
imul
push
push
faddl
les
dec
pop
and
ja
or
out
test
add
int3
ret
mov
ret
push
and
jno
mov
aas
jg
leave
mov
stos
or
xchg
pusha
cmpsl
ret
inc
xor
les
imul
fs
xor
je
jns
lcall
out
sbb
mov
or
mov
out
fists
mov
xchg
xchg
adc
pop
cli
push
mov
inc
inc
sti
lea
cli
jmp
pop
lods
dec
mov
or
cmp
into
push
lahf
xor
xlat
ljmp
test
lea
ret
into
enter
bound
cli
fisubrl
test
aad
pusha
mov
stos
mov
and
add
mov
addr16
call
lods
jle
js
dec
lcall
push
mov
roll
cmp
xchg
sub
mov
xor
inc
inc
mov
adc
or
shrl
xchg
iret
fldt
cmc
out
mov
repz
ret
sub
insl
pop
fldl
lahf
enter
mov
iret
repz
add
in
mov
add
xchg
cmpsl
mov
and
fisubl
inc
enter
dec
mov
adc
jne
adc
je
in
daa
pop
lret
pop
inc
and
lods
sbb
in
sti
data16
sbb
lods
mov
dec
cli
fisttpll
insl
addb
and
sub
push
push
pop
ljmp
fiadds
sbb
push
rcrl
push
dec
xor
and
fstpl
movsb
xor
inc
push
push
fcoml
sub
jecxz
sbb
sub
fs
call
mov
cld
or
pop
or
mov
xchg
cs
adc
inc
bnd
or
out
iret
mov
xchg
mov
dec
repz
int
add
loop
cmpsb
adc
lea
adc
insl
cmp
es
or
por
dec
stos
sbbl
adc
pop
mov
jecxz
popf
mov
adc
xchg
mov
add
psrad
mov
test
xor
icebp
cld
or
mov
call
add
xor
icebp
mov
jno
in
push
mov
test
mov
outsb
outsb
ja
xor
jno
mov
adc
test
enter
push
insb
dec
adc
mov
push
shlb
inc
ret
cmp
mov
adcl
and
dec
dec
inc
xor
inc
push
int3
adc
hlt
mov
andl
lods
push
mov
mov
mov
sbb
sbbb
jmp
jo
cli
pop
mov
iret
lret
inc
pop
pop
adc
xchg
shll
cmc
fs
jae
dec
aaa
sbb
popf
in
push
inc
js
inc
mov
sbb
push
cmp
repz
movsb
les
mov
je
jno
sahf
in
ljmp
in
mov
adc
add
shl
xor
sub
sbb
enter
addr16
jae
cmp
sarl
xchg
fwait
ret
sahf
je
shll
add
or
inc
pop
xor
movsb
movsb
stc
xor
lcall
imul
movsb
cltd
pushf
fsubl
jnp
xchg
sub
bound
out
pop
jl
add
pop
mov
rcr
mov
add
fstps
mov
adc
sbb
push
pop
pop
loope
pop
bound
leave
int
push
adc
push
fwait
cmpb
and
insl
mov
or
xchg
xor
mov
pop
negl
push
fdiv
mov
adc
int
xchg
fidivs
inc
test
mov
mov
add
fildl
ja
inc
or
rcrb
add
jns
pop
stos
and
outsl
add
es
sub
rolb
mov
les
mov
scas
jo
js
jns
adc
xlat
js
dec
fistpl
leave
push
outsb
xchg
insb
imul
sbb
aas
enter
ret
cmpsl
mov
pop
pop
outsb
loop
fstpl
jle
les
or
mov
mov
jbe
dec
aas
imul
pminub
aad
nop
adc
pop
test
aam
arpl
mov
mulb
and
std
sub
in
ljmp
stos
fstpl
cmp
adc
fs
lret
imul
jno
scas
pushf
mov
js,pn
push
fnstcw
jp
mov
sarb
xor
mov
ds
jecxz
push
leave
mov
in
aad
push
xorl
fcompl
fwait
mov
test
xor
add
mov
dec
call
test
mov
pop
mov
jne
es
fldenv
push
lret
loopne
cld
xor
xchg
clc
scas
inc
ret
mov
lcall
daa
insb
test
inc
movsb
rolb
or
adc
xor
jle
pop
pushl
aas
loope
xchg
hlt
sub
and
test
lock
jns
je
jecxz
out
jl
or
adc
loopne
mov
jmp
mov
test
jmp
mov
jo
push
ret
push
ret
shl
xor
mov
jb
add
cmp
jle
sbb
pop
sbb
inc
cli
xlat
lahf
fcmovbe
test
inc
out
je
nop
mov
fldenv
inc
cli
adc
sub
sub
jno
xchg
sarl
jl
pop
loop
jp
inc
fldcw
mov
xchg
jecxz
mov
mov
and
clc
fsub
sahf
push
int3
inc
push
je
lock
inc
into
add
mov
aam
xchg
cld
sub
lods
shlb
filds
jecxz
ds
into
xor
mov
hlt
or
mov
loopne
pop
cmp
push
out
hlt
mov
jns
dec
mov
outsb
inc
outsb
cli
xchg
and
sbb
lahf
mov
mov
movsl
mov
loopne
xor
push
jl
xchg
cli
shll
push
xor
outsl
pop
incl
mov
test
cmp
repnz
xor
inc
scas
iret
addr16
jg
cmpsb
fnstsw
in
lods
cld
jl
jbe
jbe
mov
lret
jg
jl
fs
inc
mov
outsl
xchg
js
jl
sahf
jns
adcb
jmp
stc
ret
push
add
jecxz
xchg
in
adc
out
push
push
fdivl
jae
aas
mov
movsb
xchg
dec
sbb
add
ds
xchg
mov
cmp
mov
xor
cmc
xor
mov
adc
add
cmp
mov
es
push
je
inc
and
std
aad
inc
mov
dec
jb
popf
clc
inc
dec
into
loope
add
cpuid
sbb
sbb
mull
out
jp
test
popf
mov
adc
dec
add
lret
hlt
jns
dec
test
pop
mov
repz
rcrb
dec
xor
stc
fists
sub
and
xchg
and
dec
insb
scas
repnz
xor
cmc
fisubrs
pop
mov
pop
orl
fists
dec
adc
and
jnp
xchg
and
sahf
sub
insb
enter
or
sub
out
mov
test
mov
pop
lea
and
js
push
lods
xor
ficoms
mov
push
or
dec
adc
mov
pushl
adc
dec
cmp
fldcw
enter
sarb
sub
subb
dec
in
es
xchg
test
negl
cmp
or
push
cwtl
cmp
popf
dec
mov
or
jp
dec
ret
into
arpl
test
out
mov
cmpsb
in
in
mov
jne
xchg
lea
and
xlat
movsb
popf
push
aaa
lea
jecxz
push
add
mov
fs
pop
pushf
popf
pop
inc
in
stos
mov
and
jl
mov
cs
fadds
addr16
mov
sub
aad
into
gs
jb
mov
jno
push
and
inc
sbb
push
arpl
mov
xor
sub
aam
outsl
mov
pop
lret
rcrb
pop
fwait
fwait
and
mov
sbb
inc
mov
mov
add
pusha
out
test
fs
stos
push
and
jmp
push
repz
lret
in
dec
lds
cltd
cld
inc
mov
mov
or
adc
jecxz
jg
adcb
arpl
add
sub
mov
mov
dec
cmp
lahf
shll
stos
adc
fists
sbb
xor
mov
inc
call
cmpsb
aas
in
mov
pop
sbb
pop
inc
imull
stos
pop
jmp
dec
push
mov
ficomps
add
cld
cwtl
mov
into
ss
jecxz
data16
mov
mov
inc
loope,pt
jnp
xor
cmc
xchg
addr16
rcl
fsubs
pop
cmp
jg
scas
lea
cwtl
inc
cmp
repnz
dec
and
push
enter
aad
mov
xor
fsubs
push
and
adc
out
sub
xchg
imul
and
int
cld
outsl
or
imul
jl
and
mov
popa
pop
test
mov
aad
jg
inc
adc
push
popf
sbb
push
push
dec
mov
pop
leave
xor
bound
add
ficompl
inc
xlat
out
pop
pop
mov
pop
rorb
inc
popf
lret
data16
xor
mov
pop
xor
leave
xor
mov
test
jecxz
repz
add
add
xchg
sbb
jb
pop
mov
dec
pop
add
pop
inc
mov
out
inc
shrb
or
sbb
mov
je
sarl
or
ucomiss
mov
sbbl
pop
int
ljmp
adc
cmp
into
outsl
std
sarl
ss
repz
sub
mov
and
repnz
rcl
je
popa
hlt
mov
icebp
stc
mov
xor
std
mov
sub
mov
sub
mov
sahf
hlt
ss
dec
or
loop
jge
insb
cmpsb
mov
loop
icebp
mov
push
enter
pop
adc
cmpsb
addr16
jecxz
shrl
aas
pop
xor
push
idivb
std
mov
sti
push
xor
xchg
xor
ja
mov
int3
mov
cmp
xor
add
call
adc
sahf
mov
stc
icebp
jg
dec
mov
push
and
mov
mov
sub
jmp
push
xchg
mov
mov
and
add
mov
dec
adc
pop
push
inc
cmp
nop
and
jg
add
pop
and
cmp
fs
inc
loop
mov
cmpsl
lods
push
data16
add
push
addb
dec
mov
in
xchg
xor
or
jg
lods
int3
mov
cltd
mov
adc
dec
jmp
pop
mov
notb
inc
push
mulps
lret
mov
das
dec
adc
mov
inc
dec
lods
xlat
push
lret
iret
ret
movsb
test
sbb
cmp
xor
cli
pop
sahf
fcomp
out
fists
push
mov
popa
dec
jb
std
cmpsb
ds
add
sub
stc
xchg
addr16
push
pop
pop
jecxz
aas
shlb
out
scas
adc
insb
xor
shrl
xchg
fnstsw
add
mov
or
in
adc
sbb
sbb
inc
inc
mov
aaa
adc
mov
push
test
or
cwtl
sub
xor
mov
mov
and
push
sub
outsl
movsb
inc
pop
mov
jg
orl
add
xor
mov
xchg
rcrl
rcrb
sbb
add
ficoms
dec
outsl
lahf
cmc
lea
sub
push
mov
ja
cmp
out
stc
iret
mov
mov
aas
sbb
xorb
pushf
push
punpckldq
push
add
add
aaa
pop
xchg
pusha
mov
xchg
in
sbb
sbb
clc
loop
jle
lods
into
push
mov
mov
xor
xorb
and
jo
outsl
daa
add
imul
and
push
xchg
push
or
mov
ret
les
pusha
std
jge
and
adc
and
adc
nop
repnz
fs
mov
sub
mov
scas
push
dec
cmpsl
repnz
movsl
jmp
adc
push
cmp
xor
addl
pushf
lret
xor
sub
mov
sub
in
and
imul
clc
sbb
fidivl
insb
cmp
sub
pop
fldl
add
outsl
sub
imul
mov
dec
pop
push
cmc
sub
or
inc
fistpl
aaa
pop
add
mov
enter
inc
aam
testl
ljmp
idivl
cmp
mov
push
mov
push
cli
jecxz
in
lcall
mov
leave
xor
aaa
je
fisttpll
in
mov
adc
cmp
cmp
test
inc
das
jecxz
adc
les
sbb
ss
shr
xor
or
mov
mov
cli
xor
les
lods
sbb
add
inc
ret
jmp
outsl
sbb
dec
inc
pop
sub
nop
pop
mov
mov
xor
lods
ja
lcall
jns
dec
jg
push
fwait
mov
pop
sbb
testl
cmp
xor
xchg
imul
rcrl
cltd
pusha
imul
mov
out
in
testb
xor
pop
out
pop
dec
xor
sbb
add
movsl
jo
jnp
inc
and
cmpsl
inc
icebp
aam
fnstsw
mov
stc
cld
push
lods
pusha
out
xor
and
pop
dec
sub
inc
icebp
hlt
and
fisubrl
push
dec
mov
or
or
je
fs
testl
jne
inc
lret
inc
inc
in
repnz
xor
leave
fstps
popf
lods
mul
das
andb
sub
mov
xor
pop
cmp
ret
pop
mov
movsb
mov
inc
sahf
mov
adc
fldl2t
pushf
mov
sahf
stc
imul
sahf
incl
into
fwait
bound
xchg
mov
mov
popa
shll
push
xor
inc
or
test
jns
and
sub
sub
jne
popa
fistpll
push
mov
pop
mov
dec
dec
or
xchg
cmp
lcall
lock
jecxz
pop
ficoms
push
fdivr
cwtl
jnp
test
lods
pop
add
inc
and
cwtl
cld
ret
mov
adc
inc
in
out
stos
rorl
mov
test
out
cmpsl
int3
push
sub
pop
in
mov
jns
add
and
test
push
outsb
jge
mov
fiadds
sbb
adc
mov
xchg
out
repnz
adc
pop
sbb
push
enterw
loop
and
cmp
cmpsb
movsb
push
cmp
push
cld
mov
cwtl
std
popf
or
call
pusha
push
mov
adc
xchg
fdivrl
pop
int3
or
stos
jge
inc
test
mov
inc
stos
mov
cmpb
mov
pop
dec
mov
je
mov
arpl
cli
dec
pop
aas
rcl
jge
js
xchg
and
jo
and
or
mov
lock
mov
sub
xchg
repz
xlat
sbb
rcrl
fwait
dec
push
inc
dec
gs
mov
fidivrs
outsl
jbe
jle
jl
push
mov
incb
lcall
mov
mov
out
jg
sbb
cwtl
jle
inc
inc
test
mov
push
scas
lahf
or
pop
jecxz
int
xor
fs
cmp
dec
ret
movsl
mov
pop
jnp
addb
loop
out
push
add
cmp
lods
mov
pop
mov
and
dec
cmpsb
push
pop
jno
push
lret
insb
xor
jo
es
mov
lretw
or
repz
jl
and
mov
dec
scas
inc
dec
push
cwtl
and
pop
xor
and
hlt
shr
adc
adc
xor
jno
sbb
push
mov
cmpsb
adc
ds
inc
inc
push
ficompl
fcompl
mov
sub
loopne
push
data16
insb
pop
jns
pop
stos
jecxz
mov
pop
pop
mov
cmp
inc
out
add
bound
jecxz
xor
in
decb
fwait
push
gs
inc
repz
xchg
dec
les
push
ljmp
mov
push
ja
dec
stos
xlat
inc
sub
dec
xchg
push
repz
fcmovu
jle
mov
int
push
in
fistpll
jbe
cs
hlt
cmpsl
push
dec
dec
call
std
mov
xor
jno
sti
pop
mov
cmp
pop
mov
pop
in
std
xchg
pushf
dec
jg
cmc
imul
pop
je
fcomps
rorb
aas
loop
fsubrs
push
shll
scas
push
pop
fisttpl
dec
cmp
into
sahf
sbb
movsl
add
loope
mov
jmp
mov
insl
daa
cmpb
das
cltd
addl
lods
pop
mov
iret
rcrl
inc
pop
imul
push
push
jne
cmc
dec
hlt
sbb
xchg
into
mov
stos
add
daa
cmp
sahf
dec
inc
cmp
stos
ret
int
push
stc
sbb
loop
cmp
insl
rcr
dec
sti
cli
lahf
push
fwait
push
mov
adc
rcrl
pop
push
shrb
and
lret
push
inc
add
xor
lahf
addr16
icebp
cli
pop
mov
push
mov
movsl
movsl
sub
inc
hlt
aam
or
sbbb
mov
dec
push
pop
mov
sbb
in
mov
ljmp
fisttpl
or
cmp
jge
je
pop
pop
ss
bound
movsl
add
push
andb
addr16
push
lods
mov
out
jnp
or
cmp
movsl
lods
sbbl
test
or
std
inc
ret
cld
insl
fisttps
mov
lahf
and
and
push
rcrb
lahf
fs
repnz
push
movsl
fistpl
mov
aaa
add
add
fimull
ror
imul
gs
push
les
cli
adc
pop
fcoml
push
and
xor
inc
aas
mov
stc
or
int
ljmp
xchg
and
xchg
pop
xchg
or
mov
mov
add
sar
ds
inc
ja
and
push
popa
add
mov
ds
sbb
sahf
inc
cmc
stos
and
idivb
and
and
outsl
dec
lahf
dec
rcrb
cmpsl
mov
inc
sbb
or
movsb
and
push
jge
scas
mov
pop
icebp
sub
adcb
lods
sbb
in
adc
into
les
xor
inc
adc
in
leave
inc
or
push
movsl
jge
aaa
hlt
add
add
jp
push
and
lods
popa
inc
ret
or
aam
ret
and
adc
mov
fwait
mov
or
jecxz
aaa
repz
inc
or
fs
pop
mov
iret
cmpsb
cli
call
repz
dec
mov
push
dec
je
mov
imul
jg
jnp
orb
jecxz
push
xchg
iret
repnz
and
dec
mov
jmp
test
pop
insb
mov
jo
stos
stc
mov
jnp
rolb
mov
xlat
cwtl
xchg
negb
rclb
repnz
lcall
jnp
loope
xchg
fisubrs
loope
dec
in
add
scas
jb
cli
push
mov
pop
add
call
mov
adc
bound
and
stos
push
jge
pop
push
mov
adc
adc
mov
and
jae
call
mov
rorb
cwtl
xor
mov
inc
pop
push
push
negb
lahf
jae
pop
xchg
test
mov
mov
ficomps
add
sub
clc
xor
sbb
and
cmp
and
idivl
fucomip
shr
sbb
ret
mov
or
and
popf
mov
subb
or
ficoms
and
add
loopne
adc
fldenv
test
cwtl
push
lea
xchg
js
jle
fistpl
test
push
repz
dec
int3
inc
jecxz
lcall
mov
sub
lods
int
dec
shlb
movsb
jp
cmp
mov
fsubrs
ds
inc
cli
pusha
psubw
popf
xor
lods
jp
ja
or
push
mov
and
pusha
cli
mov
sahf
xlat
jns
adc
inc
pop
rolb
sub
dec
jns
jb
mov
sbb
inc
scas
outsl
fmuls
dec
sub
sub
cmpsl
fnstenv
pop
push
pop
shr
mov
jl
mov
js
jb
pop
add
in
pop
mov
pop
jp
sti
mov
pushf
inc
aad
int
loope
out
cmp
mov
mov
pop
inc
fnsave
or
xchg
sbb
loopne
test
inc
add
sbb
pusha
out
rolb
shrl
cmp
shll
inc
shrl
pop
scas
mov
xchg
sub
mov
aam
mov
inc
into
sub
out
lcall
into
cld
loope
js
pop
repz
push
add
bound
pop
lahf
xchg
dec
sub
mov
repnz
cli
insl
jmp
add
loop
dec
nop
mov
int3
int3
xchg
call
xor
popf
in
xlat
outsl
push
push
jne
sarl
add
imull
lahf
pop
pop
stos
cmp
sub
adc
shr
and
pop
insl
mov
xlat
pop
stos
xchg
daa
ss
sti
cmc
mov
xchg
or
mov
dec
inc
push
lret
cmp
sub
ja
add
add
cli
in
jecxz
pop
xor
inc
dec
xchg
and
aad
shlb
shrl
sub
xchg
call
jg
shlb
add
lcall
push
into
test
or
paddb
in
jmp
jo
xchg
and
daa
aam
jmp
push
enter
jnp
dec
mov
cmp
cld
mov
and
ss
inc
lcall
mov
pop
js
cmpsb
addr16
repnz
or
push
daa
cltd
pop
daa
cs
mov
mov
je
sbb
adc
xchg
push
shl
jb
stos
dec
pop
hlt
mov
push
or
popf
into
xor
or
cli
mov
rcl
fwait
adc
jne
lahf
pop
clc
cmpsl
int3
test
mov
cmpsl
sbb
lods
enter
xor
jne
xor
pop
cld
inc
aam
das
pop
pop
lret
fimuls
lea
scas
mov
inc
insb
mov
or
std
pop
dec
jb
cmp
gs
insl
in
out
div
repz
push
add
and
push
jecxz
add
js
add
andl
mov
les
push
or
popf
shlb
pop
cmp
add
in
sbb
rcl
or
sub
fstpt
cmpsl
push
mov
rolb
cld
dec
and
jnp
jg
and
fstpl
cmp
inc
imul
mov
jmp
lcall
adc
pop
xlat
movsb
shrl
jnp
push
pop
sub
stos
push
inc
ja
aas
ja
movnti
lds
adc
jnp
lea
int
mov
icebp
sbb
rolb
push
out
adc
scas
sbb
push
xchg
movl
cli
adc
imul
pop
fidivl
stos
ds
push
xchg
jmp
jecxz
loopne
add
sbb
or
insl
sbb
xorb
or
dec
add
push
jmp
popa
pop
mov
bound
aaa
push
push
nop
sub
or
xchg
shl
lcall
fdivrl
arpl
push
adc
or
inc
dec
ja
inc
inc
inc
xchg
cli
jo
dec
and
andb
cmp
mov
pop
loope
push
adc
nop
or
in
ljmp
xchg
repnz
lods
in
cmc
std
lea
mov
xor
cmp
sub
and
movsl
mov
cmpsb
cld
dec
rcrl
add
movsb
imul
sbbb
mov
in
les
arpl
add
adc
sub
fisubrs
adc
xor
inc
imul
mov
test
inc
cmc
mov
mov
add
loope
outsb
iret
push
jl
push
daa
inc
popa
add
sub
dec
mov
int
sbb
pop
fldl
aad
sahf
dec
stos
mov
mov
jg
es
fnstenv
clc
xchg
dec
fsubl
dec
or
cmp
lock
ljmp
adc
pop
inc
dec
in
inc
test
adc
xchg
divb
mov
dec
jl
js
lret
mov
sti
sub
lock
mov
push
adc
pop
xchg
xchg
movsl
xchg
xor
popf
dec
and
push
xlat
sub
mov
filds
add
dec
sub
or
in
int3
lods
dec
sub
mov
jbe
stos
rcr
daa
jg
imul
lods
mov
pop
std
cld
cmp
test
add
lds
ret
xabort
sbb
dec
and
xchg
aam
or
add
or
ret
inc
mov
mov
ljmp
mov
mov
pop
xlat
cwtl
jge
or
jns
dec
adc
movsl
fnsave
or
repz
and
sbb
mov
push
pop
sub
and
mov
sbb
loop
stos
mov
in
movb
mov
inc
ja
xlat
lods
push
mov
jg
scas
xchg
inc
out
sub
les
rcll
jns
aas
cmpsb
jge
xchg
sub
lea
push
int
dec
shl
xchg
inc
or
mov
or
rorl
sbb
in
and
inc
insl
test
inc
ficoms
add
push
imul
andb
mov
dec
jmp
mov
fdivp
insl
xchg
pushf
fisttps
cmp
cs
int3
mov
sbb
test
inc
jl
mov
mov
mov
inc
lcall
les
std
sbb
popf
xchg
lea
sbb
jae
cmp
daa
mov
dec
icebp
sbb
std
inc
ror
lods
mov
sbb
pop
gs
shlb
jmp
jle
int3
lret
stos
push
leave
call
pop
out
lds
rcrb
lods
sti
inc
test
inc
jg
nop
mov
ror
decl
adc
in
movsl
push
jge
stos
and
lahf
or
test
fucomp
rcll
in
enter
or
fisttpll
sub
int3
cli
cwtl
dec
push
in
sar
inc
sarb
push
cld
or
sbb
dec
dec
push
jb
push
fwait
pop
loopne
sub
push
push
xor
adc
push
notb
fidivl
popa
jne
push
inc
push
mov
jbe
mov
divb
cmp
sti
rcr
xor
enter
fwait
mov
cmpsl
inc
fisttps
cltd
mov
and
psignw
das
xchg
loope
call
sbb
and
xor
jb
loope
test
popf
arpl
test
and
loope
adc
insb
xor
repnz
pop
jo
mov
jp
test
push
adc
int3
push
jmp
push
and
loop
leave
push
stc
sti
xchg
inc
lods
push
scas
jl
imul
cmp
sub
cld
mov
xor
ja
outsl
int
je
hlt
xor
add
sub
fdivs
or
sbb
pop
mov
ds
insb
repz
popf
adc
in
mov
add
xchg
mov
iret
pop
scas
or
sub
mov
jp
imul
paddsb
std
in
test
mov
and
test
outsl
mov
in
fcompl
ds
fnsave
xchg
sbb
cwtl
sbb
adc
filds
ret
xlat
cltd
insb
imull
fidivs
xchg
cmpsl
lods
fcmovb
dec
lea
fcmovu
adc
out
mov
dec
and
repz
hlt
and
add
add
mov
jae
jns
rcrb
mov
cltd
xor
cmpl
adc
js
in
inc
mov
inc
leave
jle
sbb
subb
in
jg
mov
adc
jl
adc
xlat
pop
jmp
jl
push
sbb
or
push
pop
xor
cmc
ret
mov
pop
jle
stos
xchg
pop
shrb
adc
hlt
mov
cmp
cs
pop
pop
sti
out
in
fwait
inc
jnp
add
test
mov
mov
jnp
insb
ret
ljmp
xor
inc
test
ret
sbb
iret
out
pcmpeqb
ret
das
sbb
jg
xor
out
cmp
jmp
xchg
and
mov
loope
into
xlat
rcll
and
loope
sbb
push
aas
fcoml
jo
movsb
enter
mov
decb
data16
aad
pop
fsubl
nop
aas
pushw
add
insl
dec
jno
xor
stos
xlat
testl
jmp
mov
cwtl
dec
dec
xchg
jg
fcomps
clc
and
outsl
xor
movl
outsb
iret
inc
jg
and
push
mov
sub
sbb
sahf
pop
pop
xor
sti
cmp
popa
out
les
inc
mov
push
cmpsb
jb
dec
imul
sub
mov
test
aas
inc
test
sbb
add
jmp
or
adc
pop
push
subb
dec
jo
add
xchg
sub
dec
jbe
push
jne
cmp
pop
add
mov
adc
fcomip
shl
out
arpl
ret
xchg
inc
cld
ds
dec
mov
test
lods
sbb
jbe
push
ror
stos
push
cmp
and
jg
xor
and
rolb
mov
sbb
or
mov
negl
ja
and
mov
fs
arpl
cmc
ret
ss
clc
dec
mov
cmpsb
sbb
push
inc
or
divps
sub
push
mov
mov
push
out
mov
rcrb
xchg
jle
mulb
sahf
mov
xlat
push
mov
dec
out
movsl
movsb
std
add
arpl
cmp
xor
fisubrl
repz
int3
aaa
cmc
pusha
lods
outsb
mov
xchg
dec
mov
dec
insb
dec
test
add
arpl
dec
xlat
inc
add
je
ss
fbstp
and
mov
cmc
pop
dec
mov
and
arpl
mov
imull
adc
push
adc
inc
inc
dec
cmp
outsb
mov
sbb
dec
mov
mov
int3
pop
int
mov
or
ret
xchg
jnp
shr
mov
sahf
test
insl
sub
jle
sahf
sub
push
adc
lret
push
mov
jns
lret
sbb
mov
and
scas
sahf
push
lds
mov
or
fidivrs
push
and
adc
scas
mov
jl
call
dec
lods
add
iret
fisubl
jbe
pop
push
cmpsl
test
test
mov
push
adc
shrl
inc
jns
jnp
in
iret
add
gs
push
push
jae
rorl
shrb
or
fxch
aas
push
test
je
sbb
inc
into
push
lods
arpl
arpl
push
and
sti
jp
adc
out
adc
inc
lods
lods
nop
mov
jno
fildll
add
mov
mov
xor
or
and
popa
inc
and
shll
ljmp
out
mov
add
jp
mov
call
mov
xor
es
movsb
in
add
mov
loopne
ds
jecxz
stos
or
push
dec
loop
cmp
frstor
mov
cs
out
stos
lret
pop
xorb
jl
add
fildl
nop
test
dec
shl
mov
addr16
cmp
pusha
xor
pop
in
sub
lret
xchg
out
imul
mov
pop
cmpps
cmpsb
js
cs
mov
xchg
dec
lock
test
mov
cmp
in
dec
ja
mov
test
ds
test
jne
mov
lcall
fsubrl
adc
push
arpl
aas
adc
sti
arpl
and
movsb
xor
dec
out
pop
lods
xor
js
dec
xchg
push
stos
ljmp
sub
jb
cmpsl
cmp
js
std
sub
idiv
cltd
xchg
mov
push
sbb
pop
cmpl
lods
dec
ret
cld
xor
das
repz
or
insb
push
pop
cltd
xor
mov
ret
clc
mov
mov
ja
mov
jecxz
cwtl
jl
cmc
sahf
enter
aad
push
jb
mov
push
xchg
xorl
mov
or
out
stc
inc
jo
ret
add
rol
jge
in
and
jne
pop
movsl
jle
pop
in
xchg
lds
mov
jnp
or
xchg
push
int3
loop
mov
rcl
push
jo
icebp
ret
xchg
push
insl
cmp
lret
jo
jl
outsl
aam
leave
dec
mov
xor
decb
mov
push
mov
in
xchg
iret
ljmp
cmpsl
adc
sti
xchg
mov
movsb
and
ds
scas
push
lods
lock
pop
jmp
dec
mov
mov
sub
push
add
fdiv
sub
mov
lret
lcall
mov
ds
outsb
shrl
push
lcall
test
push
adc
fst
xchg
pop
ret
std
push
mov
rcrl
pop
hlt
jno
mov
enter
fildl
push
bound
xor
divb
hlt
stos
lods
nop
mov
popa
hlt
adc
and
sarl
pop
out
dec
mov
push
adc
out
mov
push
mov
cmp
ret
mov
movsb
mov
mov
jnp
outsb
mov
test
mov
in
mov
ljmp
xchg
clc
add
aad
xor
sub
imul
adc
shl
fistps
cld
rcrb
and
mov
dec
addl
jp
mov
mov
loopne
mov
sahf
inc
dec
out
and
inc
dec
aad
imull
sub
or
xor
fsubl
jp
jge
lock
mov
sub
inc
dec
sarb
mov
or
add
pop
sbb
sub
dec
xor
cmp
pusha
lret
dec
inc
mov
push
jns
jnp
or
cmp
adc
push
inc
addr16
mov
jmp
xor
jecxz
cmp
mov
mov
cmpb
in
fnstenv
jnp
push
jno
fwait
movsb
sbb
test
sbb
stos
and
jmp
sbb
je
test
pop
stos
test
mov
das
or
enterw
orl
jecxz
inc
ret
pop
jno
add
dec
or
jne
outsb
ror
mov
mov
lcall
loope
mov
jmp
ret
cmp
sub
fisubrs
push
jns
outsb
imul
push
xchg
pop
popa
adc
jmp
mov
sub
cmp
pop
mov
push
cmpl
aaa
sahf
mov
xor
xchg
mov
cmp
sbb
cli
jae
std
loopne
imul
push
mov
arpl
fistpll
pop
lds
popa
data16
push
or
mov
cli
in
rorl
lods
enter
mov
aaa
cmpsb
sarb
inc
add
or
and
call
dec
jo
adc
aas
xchg
mov
stc
xor
cltd
jl
addr16
sub
hlt
mov
pushf
aam
lds
js
lds
mov
loopne
jae
sbb
pushf
sahf
inc
jnp
sahf
sbb
mov
nop
xor
add
sub
jp
cmp
lret
gs
xor
mov
cmp
push
mov
test
in
fwait
lods
sub
clc
test
jnp
sbb
test
repnz
pop
xor
es
cmc
test
jecxz
lret
xlat
rolb
pushf
pop
aam
add
stos
pop
jle
adc
pop
sbb
jbe
in
fs
loop
cmp
rcll
lret
mov
push
or
dec
shrl
lock
mov
mov
xchg
push
ss
lahf
sub
fcomi
adc
mov
inc
push
jno
mov
mov
jge
dec
xor
imul
mov
or
pop
sahf
ja
sbb
aad
in
inc
add
add
stos
andb
inc
adcl
sbb
mov
shl
sub
test
dec
outsl
shlb
shll
sub
cmp
mov
dec
fs
mov
das
scas
inc
in
out
dec
adc
fmul
test
gs
iret
push
push
in
addr16
lret
mov
jl
sub
xor
shrl
jb
xor
sub
pop
pop
std
mov
sub
xlat
or
add
push
jbe
dec
lsl
or
push
mov
jle
or
xchg
aad
sbb
lods
outsl
in
dec
out
push
hlt
fdecstp
scas
shll
lcall
lcall
popa
call
inc
cmp
push
mov
test
push
popa
rcrl
mov
sub
xchg
xchg
lods
pop
inc
ret
in
mov
fstpt
int3
fwait
xor
mov
shlb
inc
jbe
icebp
jmp
outsb
loop
mov
orb
mov
bound
sbb
popf
jle
jne
inc
mov
aad
fstl
xchg
sahf
jle
dec
push
sahf
xor
sbb
loopne
leave
in
iret
adc
mov
sbb
lcall
aas
push
pop
enter
mov
push
sbb
roll
int3
inc
hlt
sub
testb
pop
pop
dec
test
xchg
mulb
and
dec
stos
adc
push
pop
cmp
inc
xor
or
adc
pop
fs
mov
cmp
leave
jne
xor
lods
dec
sbb
outsb
lods
mov
imul
mov
xlat
pop
test
xchg
sahf
stos
inc
iret
jecxz
stc
sub
jbe
sbb
ja
add
mov
aam
mov
jp
xor
adc
push
stos
jb
out
inc
sbb
ds
test
jp
mov
mov
repnz
and
into
gs
dec
ret
stos
pop
or
dec
loop
sub
xchg
sbb
fwait
and
or
nop
mov
or
test
sub
lock
dec
test
idivl
lods
xchg
inc
test
and
arpl
fcomps
ds
sti
cmpsb
int
insl
or
and
jecxz
push
mov
in
pop
ja
gs
xor
xchg
mov
mov
mov
and
sbb
pop
lea
push
ss
pop
mov
test
lods
fistpl
and
push
mov
or
mov
add
fs
sub
jnp
movsb
icebp
sub
ds
outsb
fcmovu
repz
xchg
cmp
mulb
rcrb
xchg
xor
mov
jne
cltd
and
jl
cmp
icebp
dec
jmp
sub
lea
lret
cs
aam
mov
xlat
lods
cmp
icebp
xor
dec
daa
js
push
mov
or
xchg
sbb
movsb
xchg
mov
mov
cmp
into
outsb
cli
cmp
mov
pop
add
cmp
jb
sti
mov
dec
push
or
xor
mov
cmpsb
stc
sub
repz
mov
pop
repnz
sbb
cs
pusha
xchg
lock
add
out
cld
jo
ss
out
xor
sub
xor
mov
shrl
rcl
mov
mov
mov
stc
xor
ljmp
xchg
rcl
pushf
dec
xchg
mov
in
xor
or
lods
mov
jne
lret
cmp
fnstenv
adc
adc
lret
cmp
aad
lods
cmp
sbb
arpl
add
or
mov
decb
jp
imul
xor
mov
mov
aas
mov
jo
testb
in
dec
push
mov
push
mov
cs
mov
rcrb
push
push
movsb
jl
addl
jecxz
mov
jnp
imul
xchg
in
lret
add
pop
int3
loope
push
cmpsl
jo
jg
mov
adc
pushf
sbb
std
dec
jo
jecxz
xlat
and
pop
sub
out
enter
xchg
int
lea
mov
push
aaa
sbb
call
enter
pop
movsb
mov
inc
xchg
xchg
inc
mov
lods
iret
xchg
mov
sbb
sbb
sar
in
stos
jp
push
clc
aaa
sub
cli
push
inc
jns
add
dec
mov
divl
xchg
xor
ljmp
push
and
pop
sbbb
mov
mov
xchg
pop
add
push
jns
imul
and
inc
icebp
dec
mov
test
lcall
shll
xchg
insb
daa
pop
pminsw
lock
ret
les
cmova
jmp
jno
pop
movsb
inc
xor
xor
bound
push
out
into
jo
xor
xlat
shrl
cmpsl
lahf
out
shlb
mov
fst
mov
mov
scas
lods
jecxz
mov
lods
jbe
mov
push
mov
js
out
cmpsb
pop
fdivrs
test
outsl
outsl
jne
xchg
pushf
divl
jmp
xor
mov
rclb
std
sbb
adc
push
xchg
cs
add
not
pop
ljmp
mov
mov
popf
xlat
rorl
imul
ret
out
movsb
jge
faddl
pusha
mov
lods
inc
shll
scas
push
jmp
jae
fstps
lret
dec
cmpsb
lahf
adc
lcall
mov
cmp
jae
push
lds
push
lock
shll
int3
popa
push
inc
shlb
call
out
pop
mov
xor
sub
faddp
fwait
xor
jns
jb
jne
mov
jbe
shlb
dec
mov
dec
mov
dec
sbbl
cmpsl
je
in
mov
sahf
mov
divb
out
inc
inc
addr16
pop
inc
negb
sub
push
repz
jg
fistpl
stos
les
test
int3
add
fs
int3
mov
scas
das
dec
inc
iret
test
in
imul
ret
ss
or
iret
push
pop
jbe
jne
dec
xchg
lahf
xchg
jmp
sub
enter
inc
mov
int3
xchg
imul
loope
aam
rorb
jp
movsb
leave
cwtl
mov
cmp
repnz
fs
out
xchg
ss
dec
xchg
es
and
lock
jl
bnd
hlt
pop
andl
pushf
dec
stos
mov
popa
aas
push
xchg
rcrl
fsubrs
jle
xlat
sub
xor
faddl
add
xlat
ljmp
mov
mov
inc
jp
sbb
hlt
lock
int3
loopne
xchg
sar
jge
into
cmp
popf
imul
imul
xor
imul
lcall
scas
jecxz
mov
mov
aad
xor
js
fsub
mov
xor
mov
clc
push
push
repnz
inc
pop
mov
jg
dec
gs
xchg
xor
adc
jnp
mov
popf
dec
xchg
mov
adc
cmp
mov
mov
inc
or
pop
fistpl
outsl
adc
and
push
in
dec
adc
sub
sysexit
dec
fmull
cmpsl
push
xor
xlat
mov
jmp
hlt
int
ss
dec
mov
ret
fst
or
push
push
inc
jg
adc
dec
fiadds
dec
cmp
or
add
jbe
pop
jg
adc
push
dec
fldcw
outsl
xchg
test
je
jbe
add
sbb
in
lock
loop
mov
jg
push
lret
test
cmc
mov
cli
mov
rcrb
incl
and
pop
ja
dec
jl
adc
xchg
mull
aam
pusha
into
jle
dec
mov
jmp
fadd
xor
outsb
push
fidivl
push
jo
mov
ja
mov
xchg
jbe
outsb
mov
hlt
adc
push
lods
mov
clc
popa
in
and
popa
sbbl
jns
push
mov
std
imul
or
cmpsb
pop
sahf
mov
sbb
es
cmpsl
loope
lahf
mov
push
movsb
lds
mov
outsl
pop
cmpsl
jbe
jae
lock
stos
call
enter
lea
rcl
push
xchg
repz
test
shrb
rolb
fmuls
mov
daa
and
icebp
push
outsl
imul
stc
cwtl
sub
int
lds
pop
dec
push
in
clc
inc
pop
imul
mov
push
mov
jg
mov
inc
or
stc
fstps
lret
ret
xchg
sahf
add
pop
scas
push
sti
frstpm(287
int3
mov
jo
pop
sub
js
push
inc
fisubrl
sbb
and
iret
mov
sub
pop
mov
pusha
add
sub
aad
mov
xor
jmp
jae
pop
out
cmp
test
or
jbe
je
cs
add
sub
mov
dec
add
xor
mov
pusha
pop
mov
test
ja
jle
leave
leave
cli
sti
ret
stos
ss
std
sbb
cmp
inc
xor
mov
imul
push
push
add
popl
pop
xor
or
add
cli
inc
cmp
aad
inc
sti
mov
pop
divl
mov
pop
cs
and
gs
mov
fxsave
ss
rorb
scas
call
dec
addr16
cmpsb
dec
mov
cmp
mov
lcall
jl
lock
add
sti
testl
inc
insl
std
movsb
push
shlb
adc
inc
xchg
in
pop
out
push
out
rorb
jne
jg
test
cmc
scas
and
adc
int3
sarl
push
xlat
and
cli
jle
clc
mov
cmpsl
bound
jecxz
pop
adc
xlat
popf
or
cmp
add
dec
mov
cs
push
cmp
mov
mov
popf
loop
dec
mov
int
into
adc
pop
xlat
sbb
push
test
sub
cmp
ret
cs
rclb
stc
jbe
lcall
arpl
out
stos
inc
jge
hlt
sbb
inc
pusha
push
jecxz
pop
insb
in
enter
xchg
mov
ljmp
mov
sub
pop
sub
pop
out
decb
das
data16
mov
out
mov
push
arpl
sbb
imul
xchg
sbb
adc
cwtl
or
rcrl
pop
sti
fistps
sub
movsl
fsubrp
or
std
sbb
nop
insb
mov
cltd
addr16
dec
dec
sub
jae
jl
mov
dec
sub
mov
mov
dec
add
or
insb
mov
rol
test
scas
popa
xchg
pop
popl
or
out
jne
cmp
shl
xchg
cltd
popf
inc
mov
gs
lea
lahf
nop
pop
inc
cmp
push
xor
int
xor
addr16
push
cmpsl
out
lods
pop
sbb
fxch
mov
or
cmp
and
ss
into
jo
out
pushf
mov
sar
xchg
xlat
loope
sub
pop
aas
mov
sbb
or
cmp
ss
cli
jno
add
testl
dec
sub
insl
lret
push
test
sbb
iret
and
shl
es
repnz
loop
pop
jo
push
loop
inc
mov
push
lods
jb
add
js
jno
popf
movsl
addr16
mov
cmpb
or
adc
insl
nop
cmp
sbb
dec
or
push
popf
adc
add
mov
xor
add
orb
lcall
mov
xchg
jae
cli
ret
into
call
inc
rcll
dec
inc
add
hlt
add
mov
xor
mov
push
jb
and
imul
pusha
inc
or
adc
pop
cmpsb
imul
cmc
adc
push
xchg
in
adc
xor
inc
cwtl
mov
loopne
jbe
in
push
or
iret
push
roll
leave
out
scas
push
dec
sub
mov
pop
xor
sub
shl
scas
or
pop
push
loop
or
cmp
lcall
lret
insb
inc
mov
lahf
push
dec
les
push
ret
jno
adc
sub
aaa
xchg
out
shll
cmp
push
push
mov
pop
adc
pop
or
outsb
or
jo
mov
add
adc
dec
cli
inc
in
inc
enter
cli
shlb
sar
lods
cmp
cmp
pop
mov
in
insb
mov
sbb
iret
mov
jae
test
std
mov
fwait
pushf
inc
adcb
adc
jg
in
js
mov
sub
mov
in
fmuls
push
lret
mov
push
in
mov
fildl
movsb
jmp
mov
addl
xor
bound
add
mov
rcrl
mov
fsts
popf
fsub
pop
iret
cmp
pop
pop
leave
jb
std
sahf
xor
cmp
dec
mov
xor
ljmp
sbb
sub
mov
xor
fdivr
mov
imull
scas
add
or
lds
pop
les
jp
pop
mov
scas
outsw
pop
mov
fsubrs
in
insl
lcall
xchg
jns
pop
cmc
repnz
jge
hlt
mov
jbe
je
mov
je
lods
test
sub
inc
mov
cmpsl
pushf
loope
cmp
outsl
adc
sub
push
and
xchg
jae
dec
fbstp
mov
call
jmp
mov
and
sub
aas
xor
insb
mov
lods
mov
dec
sub
sbb
es
sub
xchg
xor
push
pop
jg
repz
bound
in
or
addr16
in
push
push
outsl
mov
jae
out
cmpb
out
fwait
loopne
inc
and
loop
lret
jp
mov
gs
out
clc
cmpsb
inc
push
pop
adc
lret
xchg
in
lock
fs
ja
fdivrs
jne
clc
jnp
inc
cs
xchg
out
pusha
ficoml
test
out
adc
mov
call
cmp
inc
addr16
aam
xchg
aad
mov
sbb
adc
jmp
outsl
call
or
pushf
cltd
mov
cld
lret
mov
xchg
mov
loope
inc
mov
or
inc
jo
cli
jns
xor
outsb
stos
lret
mov
dec
jns
popa
arpl
jno
ja
inc
cli
cmp
xor
xchg
cmpsl
mov
xchg
push
add
outsl
pop
arpl
lds
mov
mov
jne
pusha
fisubs
push
cmp
mov
cmp
dec
and
imull
jb
xchg
cmp
sub
xor
pop
pop
adc
jb
mov
adc
sub
inc
sti
repz
cs
aaa
dec
shrb
dec
sti
adc
xchg
sahf
xchg
xchg
dec
mov
shlb
fs
inc
and
pop
xor
cmp
insl
jmp
stc
pop
add
inc
adc
aam
jo
cli
lret
mov
lea
jb
in
lock
dec
pop
sub
out
fisubs
out
inc
nop
negb
sbb
pop
popf
ficompl
jmp
inc
mov
push
ljmp
nop
mov
mov
jge
xchg
mov
les
pop
mov
popl
pop
fnstcw
push
sahf
jmp
push
lods
out
mov
or
and
test
mov
outsl
sbb
in
dec
fdivrl
ret
lock
xchg
mov
in
add
add
loope
cmp
fs
nop
and
mov
int3
fsts
std
xor
fs
pop
jnp
inc
jp
jbe
pop
shll
aas
mov
jae
or
pusha
and
sbb
cmp
adc
xorl
jge
daa
lock
add
add
sbb
push
sar
push
scas
pop
scas
stos
lret
nop
out
cmc
frstor
mov
std
mov
sbb
jns
push
xchg
repz
ds
sbb
push
daa
test
decl
and
jle
pop
aad
sbb
jg
std
jmp
ret
shl
ret
mov
lods
fs
pop
inc
cwtl
mov
leave
cltd
sbb
inc
push
sub
fs
lods
push
mov
lods
loop
add
cmp
in
in
fisubl
pop
stos
pop
adc
add
pushf
dec
mov
jo
inc
cmpsb
leave
ds
sub
cmp
xor
push
aaa
sub
rorl
lock
rorl
mov
gs
out
movsl
inc
ljmp
push
je
sub
push
mov
adc
jae
sahf
jae
in
andb
popw
gs
rcrl
data16
jbe
push
stos
movsl
ds
inc
pop
sahf
mov
cmpl
mov
add
rcr
cld
mov
dec
jecxz
jae
xchg
sub
outsl
movsl
in
adc
lcall
dec
or
mov
lods
dec
and
adc
pop
stos
mov
cwtl
add
push
push
xchg
dec
mov
scas
lods
out
xchg
fnsave
out
gs
test
add
add
std
adc
fsts
cltd
pop
cli
mov
test
dec
mov
mov
movlps
shrb
das
sbb
cmp
mov
sahf
jmp
aad
scas
stos
jg
add
aad
test
and
sbbb
inc
xor
cmp
cmpsb
scas
out
std
pop
push
subb
into
push
and
inc
xor
lcall
or
test
add
aam
ds
repnz
mov
jns
cmp
test
out
stc
jb
push
lods
call
movsb
mov
adc
shlb
mov
sub
fmul
shrb
sub
nop
inc
into
inc
cmp
mov
aaa
insl
test
hlt
push
mov
sub
jns
jbe
mov
push
lcall
mov
icebp
sbb
rolb
inc
jmp
jne
sti
addr16
lds
cltd
aas
cmp
out
test
lcall
adc
cmpsl
cli
lcall
adc
mov
lods
xchg
pop
fmull
mov
mov
push
dec
jmp
adc
xlat
mov
xor
dec
flds
push
add
scas
inc
cld
popf
test
ds
out
fbld
stos
jnp
adc
dec
adc
hlt
push
fisubs
cli
jl
in
push
testb
pop
sbb
call
fldenv
dec
ds
rcrl
xor
subb
xchg
pop
xor
stc
mov
cmp
sub
in
sbb
mov
push
or
lret
sbb
mov
test
mov
or
movsb
fistps
into
into
xchg
andb
xor
dec
mov
subb
faddl
leave
inc
lea
subb
call
xor
jns
adc
adc
jno
push
jns
daa
gs
insl
leave
cmpl
cld
mov
sub
add
push
adc
aam
pop
or
ficoml
add
aad
test
mov
out
jae
adc
jecxz
mov
fimull
pop
sub
in
mov
adc
sbb
xlat
pop
jne
insl
mov
push
ds
jl
sub
mov
pop
jge
fadd
push
out
mov
cmp
ss
xor
shll
inc
fwait
sub
push
cmp
jecxz
jnp
fcmovbe
sbb
clc
pop
mov
add
xlat
sbb
inc
popl
adc
scas
xor
sub
mov
mov
outsl
jae
mov
and
fistps
sub
and
xchg
cmp
std
mov
add
pcmpgtb
add
pop
out
or
inc
stos
adc
push
cmc
mov
cmc
out
or
cmpsb
mov
das
movsb
sbb
mov
sahf
outsl
xchg
mov
jle
pop
jno
cltd
inc
movsb
movsb
fs
popa
scas
sub
xchg
dec
test
filds
fisttps
hlt
mov
ret
sbb
mov
jp
sub
nop
lods
pushf
movsb
insb
jmp
movsl
jb
inc
dec
mov
mov
gs
xchg
jns
push
inc
adc
or
xor
loopne
add
push
push
cli
lds
ret
or
sahf
adc
jecxz
arpl
push
pushl
push
je
mov
push
shrl
adc
cli
and
xchg
icebp
or
pop
rolb
sbb
and
ret
loop
push
jmp
cmp
mov
test
xchg
mov
adc
ficoms
mov
sub
xchg
jg
gs
and
jno
add
ds
add
push
stos
mov
je
pop
ret
in
mov
leave
mov
or
int
lea
dec
xchg
xlat
ud0
ret
cmp
add
sbb
xchg
mov
shr
cmc
mov
icebp
xchg
and
add
xchg
aam
dec
fcmovnu
movb
mov
les
dec
nop
mov
jne
pop
push
add
in
or
xchg
call
xor
or
ljmp
and
sub
mov
lret
dec
jbe
or
lret
xchg
mov
jg
fstpl
lret
inc
aad
cmc
aam
push
xor
sub
sub
sub
movsl
add
dec
or
rcrb
test
daa
mov
mov
cmpsl
addb
push
das
sti
dec
out
outsb
push
xlat
jne
jb
imul
sbb
pop
push
fiadds
sarb
loope
add
xchg
jmp
popf
cmp
imul
ss
stc
pop
outsl
stos
mov
pop
inc
sub
adc
repz
push
xor
push
sbb
ficoml
inc
dec
mov
fistpll
imul
pusha
dec
sbb
int3
aas
lock
mov
adc
sahf
in
es
jmp
push
lods
jae
cmp
inc
mov
mov
rol
test
shll
scas
and
ret
arpl
xor
aas
fdivrl
outsl
neg
insb
in
lds
cmp
nop
inc
push
xor
clc
jno
out
xchg
push
mov
or
test
cmpsb
mov
mov
in
xchg
sbb
cmp
shll
sub
imul
int3
ss
sbb
mov
xlat
jp
movsb
jecxz
and
test
jge
cmp
sahf
movsl
movsb
dec
dec
add
sbb
loopne
pusha
pop
fisubrs
adc
add
test
in
jecxz
and
jns
add
cmpsb
cltd
cmp
outsl
insl
adc
into
orb
sub
jecxz
dec
shrl
in
mov
mov
mov
cmp
or
mov
inc
mov
testl
mov
xor
inc
mov
mov
or
push
mov
xchg
iret
hlt
roll
xlat
sarb
mov
push
xor
loope
push
adc
ficomps
jno
xlat
imul
andb
pop
les
lcall
lods
inc
or
leave
mov
test
test
mov
sbb
stos
pop
pop
popa
dec
imul
push
scas
pop
sbb
lods
ss
mov
out
push
test
adc
mov
push
loope
push
mov
neg
pop
je
mov
jmp
jno
mov
mov
cmp
sbb
fsubr
in
xchg
das
out
xlat
xor
push
roll
aas
out
mov
mov
ljmp
pop
dec
cmp
mov
inc
cs
dec
dec
inc
rep
adc
xor
and
mov
inc
aas
mov
xchg
sub
mov
loopne,pn
mov
daa
sbb
jge
jl
xchg
xor
mov
jp
daa
or
in
adc
rcll
aas
cwtl
push
mov
push
popa
enter
imul
adc
push
cld
loopne
shl
push
bound
mov
inc
nop
pop
adc
and
ret
xlat
mov
mov
add
xchg
imul
hlt
orl
pop
add
xchg
jb
dec
jl
ja
outsb
dec
imul
mov
shl
and
adc
add
scas
cli
mov
movsl
mov
mov
mov
sub
jmp
out
rcr
nop
jo
inc
mov
dec
xchg
and
jb
and
or
pop
test
sbb
sbb
aas
fs
lahf
lret
les
cvtdq2ps
movsb
mov
mov
mov
ficoms
push
imul
xlat
pop
xor
call
in
bound
addr16
xchg
add
addr16
icebp
int3
cmp
cmp
test
dec
push
mov
shll
jb
xor
mov
clc
scas
insb
mov
inc
out
adc
test
incl
inc
mov
mov
pop
pop
jbe
mov
dec
test
mull
mov
dec
jl
dec
cmp
into
mov
xor
movsl
sarl
jnp
or
out
push
lahf
cmp
xor
ljmp
nop
icebp
pop
iret
mov
andl
cmp
shrb
pop
or
and
sbb
aad
es
dec
into
iret
pop
adc
adc
push
jns
mov
mov
mov
fs
xorl
fcomps
rorl
enter
pop
mov
loop
and
dec
inc
lock
add
fldt
xor
sub
lods
add
jns
or
sub
cld
rep
pop
jmp
pop
inc
or
cmp
inc
xchg
jno
mov
mov
mov
sbb
mov
fdivrl
inc
add
popa
lret
sbb
lret
fwait
mov
fcmovnbe
and
push
push
dec
mov
shr
mov
idiv
int
shr
mov
pop
xor
add
and
clc
enter
xchg
scas
mov
cmp
xor
lcall
sub
fwait
aad
lret
nop
jns
lods
push
out
mov
cmp
inc
daa
mov
dec
xchg
out
loope
add
popf
xlat
out
jno
push
pusha
sbb
add
add
pop
push
xchg
sub
xchg
std
xchg
loop
jmp
dec
sub
pusha
jns
sub
sar
pop
mov
pop
mov
into
add
adc
adc
mov
stos
or
gs
mov
orb
sub
mov
sub
mov
push
sarl
or
scas
bt
mov
jno
xor
aas
loope
fsub
leave
jno
jl
pop
lret
or
sbb
push
mov
sbb
popa
xchg
rorb
ja
jmp
ss
cld
call
sbbb
add
nop
ljmp
jbe
rcrb
sub
lcall
ret
sub
or
inc
push
cmp
lcall
pop
sbb
fadd
lock
adc
xchg
lds
fadds
lods
test
rcrl
jbe
or
mov
dec
fistpll
xchg
hlt
dec
jmp
xor
fidivl
js
and
divl
push
add
add
xor
sbb
jg
mov
out
ss
sbbl
and
stc
imul
mov
movl
mov
fnsave
jno
cmp
adc
arpl
lret
xor
jp
and
sbb
mov
jnp
ja
sbb
xor
lret
test
dec
sbb
out
adc
jo
sbb
mov
aam
icebp
fidivl
cmc
jmp
popa
inc
ljmp
repz
shll
pop
mov
xor
ljmp
pushf
mov
sub
push
jo
xchg
or
mov
dec
adc
mov
pop
mov
adc
sub
out
add
mov
xchg
mov
pushf
jns
inc
push
mov
rclb
add
push
sar
shlb
add
mov
gs
jo
xchg
pusha
bound
add
daa
mov
pop
int
mov
std
mov
pop
jp
mov
pop
sar
pop
repnz
sub
pop
hlt
push
adc
jnp
fs
les
sbb
pushf
or
inc
jnp
or
adc
or
add
add
scas
jmp
int
js
int
mov
in
inc
fistl
inc
cmpsl
fstps
packssdw
and
xor
shll
push
mov
xchg
pop
flds
lock
adc
mov
jge
fstps
and
mov
xchg
mov
aaa
xchg
sti
sub
mov
dec
xchg
fstpl
in
push
das
sahf
xchg
and
dec
sbb
jb
bound
sti
loop
mov
mov
add
pushf
xchg
js
add
aaa
sbb
dec
in
mov
adc
pop
pop
and
adc
shrl
fs
adc
add
push
mov
clc
call
inc
dec
xor
mov
inc
adcb
or
pop
xchg
lret
mov
and
jg
mulb
xor
mov
push
dec
xor
mov
pushf
shrl
push
jns
mov
popf
lods
mov
int
jne
xchg
popa
add
repz
in
mov
mov
and
sahf
subb
repz
inc
push
cld
sbb
int
mov
test
mov
pop
push
add
fists
test
in
clc
mov
mov
and
xchg
rcrb
add
out
shll
push
cs
cmp
xchg
pop
jg
jb
or
adc
mov
push
pop
mov
mov
insb
jge
pop
dec
add
xchg
push
movsb
add
push
in
jbe
sbb
mov
hlt
cmc
sti
rcl
mov
jmp
rcr
loop
cltd
aas
mov
mov
fsub
sbb
dec
aam
gs
cmpsb
fs
pop
out
aas
cs
fwait
push
es
mov
mov
adc
inc
mov
pop
int
cmc
jne
nop
ficoms
pop
andb
test
mov
push
lret
xor
xor
popa
aaa
fiadds
loopne
cmp
mov
and
call
cwtl
xchg
jle
mov
clc
lret
and
sbb
ja
testl
cmp
jge
jns
sbb
sub
out
mov
jno
outsl
add
sub
jp
and
xor
mov
repnz
or
pushf
in
insb
push
mov
jmp
std
jmp
stc
mov
out
out
jnp
int3
mov
mov
lods
fucom
xor
dec
xor
sub
push
sub
lret
in
rcr
ja
ds
out
icebp
xor
mov
mov
lods
inc
decl
dec
jp
ja
fwait
out
daa
fninit
sbb
sahf
std
shrl
jp
dec
or
sub
rcrl
fisubs
lea
orl
out
sbb
push
jnp
daa
sahf
je
dec
outsl
pop
sti
mov
outsl
loopne
lods
pop
mov
ret
mov
jl
xor
cmp
xchg
mov
lret
xor
repz
push
adc
jns,pt
jecxz
test
scas
aas
adc
xlat
dec
adc
dec
jo
or
mov
enter
mov
mov
fs
scas
in
pop
mov
or
insb
xlat
hlt
push
cmp
loope
sub
pop
dec
icebp
pop
pop
pushf
ret
jle
pop
sti
int3
push
jecxz
std
insl
xchg
lcall
pop
jno
adc
data16
jne
mov
ret
subl
cmp
push
fadds
inc
pop
and
lods
mov
sub
clc
or
sub
sahf
fbstp
imul
push
movsl
and
dec
add
jne
mov
lcall
xor
lods
in
pop
rclb
das
sbb
stc
and
test
adc
lods
jmp
js
dec
pop
test
xor
xor
add
int
add
add
sbb
imul
inc
mul
xor
fs
cmpsb
and
nopl
das
fucomi
mov
arpl
shll
addl
out
adc
dec
sti
ds
xchg
imul
leave
shr
fsub
fs
out
cmpsb
inc
dec
and
xchg
int3
repz
xor
fs
sbb
jecxz
mov
sti
xchg
mov
repnz
jae
push
daa
push
mov
imul
push
fabs
mov
adc
ret
dec
push
sti
in
mov
into
dec
je
fstpl
push
push
mov
jp
jmp
jnp
dec
js
inc
jbe
lret
pop
leave
or
push
daa
xor
sbb
ljmp
dec
xor
scas
cltd
push
jecxz
or
ljmp
xlat
dec
imul
test
jo
cld
aam
xor
shrl
into
jbe
lods
xchg
sbb
cmp
fcomps
inc
cli
mov
inc
jp
in
mov
add
sbb
out
sub
lret
popf
in
filds
les
add
inc
out
xchg
std
sbb
push
pushf
dec
fidivs
pushl
xchg
push
xchg
mov
jb
pushf
jmp
mov
pop
sub
js
outsb
inc
scas
xchg
pop
jo
ficompl
jb
test
and
or
add
or
push
jae
add
pushf
pop
mov
in
cmp
out
lahf
cmpsl
pop
xchg
out
daa
dec
jns
and
dec
inc
mov
mov
lods
es
cmpsb
xor
xlat
cmp
aaa
mov
dec
movsb
test
push
pusha
push
fldt
adc
cmpsl
rcll
rol
popf
and
lock
es
cltd
iret
add
mov
pop
fiaddl
pop
scas
aaa
mov
push
mov
xor
cmp
insl
xchg
rcr
out
mov
sbb
mov
sbb
pop
mov
dec
and
movsb
and
ljmp
push
lahf
sub
mov
dec
movsl
adc
scas
scas
leave
test
add
mov
cmp
adc
sbb
popa
f2xm1
insl
mov
xchg
call
jb
mov
inc
adc
dec
jge
dec
mov
cmc
xchg
stos
scas
pushf
hlt
scas
push
mov
call
xchg
sbb
adc
dec
xor
sbb
lock
cs
out
cli
mov
mov
xchg
xchg
push
xorb
pop
sbb
add
lock
jnp
in
xor
xor
fstpl
insb
pop
ja
adc
mov
ret
lret
cmc
add
mov
add
xchg
or
sahf
lods
in
in
lret
dec
aas
dec
cmc
outsl
jmp
mov
mov
es
adc
jle
dec
push
leave
dec
rcll
es
rorb
sbbb
jo
ds
push
push
orb
inc
mov
jmp
pop
mov
pop
mov
loop
inc
nop
je
addr16
fwait
sub
jo
and
xchg
pop
dec
in
dec
jle
lahf
jnp
popf
push
icebp
sub
cltd
aam
push
mov
xchg
cs
add
fsubl
shlb
cwtl
mov
adc
mov
fs
push
cmpsb
mov
icebp
sbb
fcompl
rorl
test
or
sub
mov
rcll
jae
mov
cmp
dec
pop
cltd
mov
rclb
std
dec
imull
ss
mov
int3
jne
test
shll
xchg
mov
imul
sar
loopne
es
mov
psubsw
push
test
inc
mov
jle
cmp
adc
pop
sti
jecxz
xor
daa
std
fisttps
pop
data16
sbb
dec
xorl
pop
mov
mov
pop
xor
dec
inc
lcall
sub
xor
das
call
cmp
int3
addr16
add
insl
popa
hlt
push
ja
xlat
xor
add
lods
push
aas
dec
fbld
mov
test
bound
mov
cwtl
mov
out
jmp
push
mov
sti
mov
inc
bound
das
pop
or
fisubl
mov
sti
mov
stos
mov
lods
adc
push
fsubrl
fnstenv
xchg
xor
push
mov
imulb
or
mov
xor
add
rclb
in
push
repz
xor
lcall
jmp
test
stos
sub
xchg
dec
add
enter
mov
jg
mov
loopne
inc
scas
fiadds
popf
inc
lret
mulb
push
push
je
pushl
andb
movsb
pop
push
and
rcrl
ret
cmpb
clc
sqrtps
pop
cld
pop
jbe
cmpl
scas
jge
je
jecxz
decb
aam
in
sub
arpl
mov
cmp
out
adc
xchg
mov
jg
ja
jae,pt
or
pushf
iret
add
and
xchg
les
repz
add
push
sub
out
sub
push
shl
lcall
mov
loopne
inc
cmpsb
or
pop
lods
xor
or
mov
mov
imul
inc
and
jg
mov
push
mov
inc
or
shrb
popf
inc
aas
dec
sarb
mov
mov
push
fsubl
icebp
insb
pop
sbb
rcl
mov
cmp
arpl
dec
sub
pop
jecxz
movsb
scas
in
mov
dec
add
rorl
sub
mov
ljmp
xchg
repz
jb
bound
pop
or
cmc
jle
cmp
shrl
adc
jmp
jb
repnz
cmpb
in
adc
sahf
sub
cmpsl
push
bound
mov
sbbl
pop
fisubrs
xchg
push
repnz
in
cmpsb
jae
xor
dec
into
cmp
and
in
ficompl
and
imul
movsb
imul
dec
cmp
fistpll
repnz
dec
adc
jge
jns
mov
sbb
mov
mov
scas
fadds
mov
push
mov
inc
insb
popa
jnp
mov
out
stos
jecxz
stos
mov
pop
or
pop
cmp
add
push
dec
sbb
jmp
mov
sub
jg
outsb
lods
mov
leave
mov
mov
push
push
cmp
stc
loopne
scas
and
hlt
cs
sbb
fistps
outsb
jmp
inc
dec
push
daa
call
lods
xchg
push
mov
ds
adc
jl
mov
xlat
fisttps
mov
inc
cmp
bound
mov
sbb
add
aaa
push
xchg
nop
jmp
subb
icebp
iret
adc
xor
mov
push
jbe
xchg
xchg
xchg
push
mov
adc
jecxz
daa
loopne
sbb
insb
pop
mov
jmp
fwait
loope
lcall
cmp
jmp
sub
add
fs
shr
lret
inc
inc
pop
push
in
cmp
cmpsl
push
lret
sbb
adc
push
xchg
push
xor
and
sbb
insl
ljmp
ds
bound
jns
jl
insb
addr16
loop
sub
add
pop
test
cmp
pop
dec
sub
or
push
jo
test
test
push
cmp
in
fistl
sahf
adc
lcall
push
ss
pop
sub
popa
int3
andl
dec
orb
jge
movsb
fisttps
shll
mov
fsubl
add
sbb
fidivs
and
or
adc
leave
ds
cmpsl
mov
sub
pop
clc
pushl
mov
mov
js
xor
sbb
push
subl
xlat
sarl
inc
popa
sub
shufps
xor
jmp
adc
push
sarl
js
test
shl
and
jno
decb
insl
and
xor
mov
in
stc
cltd
pop
xchg
popa
fs
out
nop
xchg
fs
pop
sbb
out
or
mov
xchg
adc
insb
pop
ja
dec
jl
inc
rcr
mov
jge
adc
mov
and
jnp
loope
xlat
mov
jl
iret
fisubs
lock
inc
mov
sahf
mov
mov
adc
mov
push
fcomps
adc
sub
push
mov
out
pop
mov
jmp
jl
or
push
xor
jl
xchg
and
add
jne
and
and
and
pop
les
shll
sbb
dec
mov
mov
xor
aam
aaa
inc
sbb
push
jecxz
test
orl
ss
dec
test
movsb
mov
inc
add
ss
push
push
mov
imul
leave
and
rcrb
and
push
mov
rcrl
mov
mov
xchg
lret
sbbl
and
lds
es
xchg
fnstsw
lock
and
mov
enter
js
push
imul
movsb
cli
leave
xchg
dec
inc
jmp
xchg
dec
xchg
repnz
jne
int
mov
cwtl
or
das
out
loopne
xchg
cmpsb
and
or
push
dec
cs
clc
or
lds
lahf
dec
sarl
rcrl
add
xchg
setns
push
iret
and
pop
gs
or
out
xor
jge
popa
mov
push
out
pusha
pop
js
cwtl
idivb
clc
lret
stos
or
dec
add
xor
sbb
clc
inc
add
sub
mov
sub
xchg
or
push
push
fcomps
lcall
mov
lea
xor
xchg
and
outsl
scas
sub
popf
sbb
cltd
jmp
cmp
adc
sub
jnp
sub
push
nop
xchg
aam
add
iret
rcll
sbb
daa
ss
jne
inc
cmp
xacquire
cmp
xchg
pusha
cld
or
aam
mul
push
imul
movsbl
cmp
xor
add
es
hlt
fidivrl
pop
ficomps
inc
sahf
fisubs
sahf
popa
mov
mov
jno
leave
js
sub
sub
xchg
movb
iret
dec
in
insl
and
add
pop
and
inc
cmp
mov
xor
fistl
ss
xlat
mov
add
rcrb
dec
ja
sbb
mov
pop
and
sbb
adc
cmp
mov
lock
mov
cld
pop
in
fwait
mov
hlt
addr16
xor
std
push
mov
mov
hlt
out
pop
cmp
shr
mov
repz
aam
sub
xchg
mov
sub
mov
outsb
outsl
and
add
fs
and
hlt
push
cwtl
test
adc
mov
xchg
popa
jne
out
rclb
or
dec
out
fucom
int
loope
lods
mov
push
fistps
ss
sahf
push
shlb
mov
xchg
xchg
push
mov
jp
push
add
int
xor
sub
cmc
addr16
mov
lea
sub
jmp
icebp
pop
mov
in
cmp
mov
sub
pop
dec
out
dec
pop
int
inc
mov
inc
aad
mov
lret
mov
xor
fs
test
stos
push
inc
push
push
imul
minps
in
inc
popf
in
sahf
mov
ja
jge
sbbl
jmp
loopne
lock
icebp
sbb
loop,pn
push
js
insl
adc
jge
push
pop
cs
xchg
add
mov
out
flds
out
cwtl
mov
stc
dec
cmpsl
roll
pop
dec
or
pop
fadds
in
jl
divb
arpl
inc
or
data16
rcrb
sub
fs
pop
pop
dec
dec
push
in
sub
in
and
cmp
pop
adc
adc
jne
mov
movsl
dec
stos
push
sub
test
dec
mov
jp
in
mov
xchg
mov
bound
jns
cltd
xchg
es
std
dec
mov
das
inc
cld
stos
and
jecxz
pop
je
out
icebp
daa
and
xchg
movsl
xor
adc
fsts
mov
xchg
or
push
add
mov
orl
stos
xor
adc
dec
aaa
pop
arpl
sub
adc
inc
or
sbb
mov
pushf
or
dec
push
and
push
push
pop
push
dec
xlat
mov
xchg
inc
scas
imulb
mov
pusha
subb
jne
dec
dec
jno,pn
jo
push
andb
ficoms
bndstx
loopne
dec
pop
jb
and
inc
hlt
xor
mov
test
push
cld
mov
xor
stos
jmp
dec
cld
movsb
fwait
dec
mov
data16
jb
and
aaa
sbb
fisttps
dec
test
bound
pop
loop
cld
cmp
cwtl
mov
fsubrs
mov
subl
and
fiaddl
fimuls
jb
in
pop
aas
push
push
pushf
std
ljmp
pop
jb
jns
popl
bound
and
fmuls
mov
test
dec
pop
cwtl
pop
sbb
xlat
sbb
cmc
sub
adc
faddp
cmpl
push
or
xchg
or
test
call
mov
dec
push
movsb
cmp
sar
outsl
scas
shll
push
sahf
ljmp
push
fs
test
xchg
popa
inc
mov
mov
aam
shl
sub
xchg
nop
gs
xchg
mov
clc
pop
sub
stos
jp
xor
mov
mov
adc
and
ret
dec
addr16
ficoml
add
mov
mov
orl
int3
lods
push
loopne
and
icebp
lock
mov
push
rorl
out
addr16
cwtl
jle
xor
jp
fcoml
cmpsl
into
push
adc
inc
pop
adc
lods
into
cmp
mov
jb
push
into
or
xchg
jo
mov
into
cltd
clc
pop
imul
fists
sub
lea
lret
fmuls
aaa
lahf
inc
xor
pop
jl
mov
jge
test
into
into
sub
std
in
inc
jno
and
dec
push
add
xor
jbe
mulb
pop
cmp
ret
mov
mov
int3
mov
inc
push
mov
mov
pop
adc
inc
int
dec
movsb
mov
aaa
addr16
push
add
mov
jg
dec
lods
cld
mov
popf
or
repnz
jb
jecxz
lcall
repz
adcb
adc
scas
mov
test
push
dec
test
push
cs
push
sti
les
push
mov
out
ret
or
div
dec
repz
mov
pop
xchg
lret
mov
les
jle
neg
popa
js
sti
sbbl
call
hlt
fsubrl
jns
aas
add
shlb
fsubrs
adc
dec
push
sub
shll
mov
cwtl
repnz
xchg
mov
push
xchg
inc
shll
sub
xlat
add
lcall
scas
fsubrs
sub
les
stc
mov
sti
add
mov
loopne
adc
push
out
add
lret
push
mov
inc
lcall
and
std
or
in
pop
fildll
icebp
sbb
xchg
and
dec
xchg
and
jge
sbb
adc
mov
lret
push
sub
xchg
xchg
push
adc
add
pop
pop
mov
push
aad
test
repnz
push
push
push
and
jae
mov
mov
and
movsb
scas
pushf
xor
leave
xchg
jg
sub
sti
aas
xchg
add
leave
add
push
out
mov
cmp
dec
add
scas
and
imul
imulb
ret
data16
xchg
xchg
cmp
mov
into
movsl
pushf
sbb
leave
cli
pop
sub
outsb
rcrl
popa
mov
and
mov
cmpsb
pop
inc
fisubrl
or
adc
xchg
movsb
popa
shll
popf
add
int3
arpl
push
mov
out
inc
mov
ror
addr16
pop
or
clc
out
iret
imul
sahf
sbbb
mov
pushf
stc
outsl
in
stos
int
or
ss
lds
mov
jmp
xchg
cmp
pop
les
jecxz
jns
push
ss
stos
sbbl
loopne
cwtl
pop
int
das
jne
jne
pop
xor
ficoms
je
dec
jecxz
mov
push
add
arpl
inc
jno
pop
dec
movsb
ljmp
cmp
sbb
jl
lock
sbb
or
addr16
in
fwait
jmp
and
pop
lea
adc
movsl
sub
stc
push
imul
dec
push
fcompl
hlt
sub
mov
dec
cmp
pop
or
inc
add
adc
fbstp
xchg
or
push
inc
sbb
loope
xchg
into
loopne
in
add
decl
out
or
push
int
sahf
loopne
sarl
sbb
push
xchg
add
adcb
mov
enter
and
or
mov
ja
cli
dec
stos
rcll
add
jg
mov
stos
stos
daa
mov
xchg
push
imul
cmpb
push
int3
mov
not
addb
leave
mov
ficompl
push
cld
sub
sbb
inc
xchg
adc
cmp
rcrl
mov
sti
out
mov
ljmp
mov
out
push
insb
out
and
cwtl
add
jecxz
testl
or
mov
test
divl
jecxz
jo
xchg
test
out
lea
ja
ror
sbb
outsl
rolb
pop
mov
out
enter
jne
movsl
and
xchg
cmp
mov
xor
pop
and
xchg
inc
dec
int
test
lock
inc
ret
sub
mov
lret
or
orl
add
cwtl
out
je
arpl
cmc
sub
sub
jge
fidivs
inc
das
add
scas
mov
fstpl
xor
pop
jecxz
mov
cmpsb
cmp
cmc
dec
jg
repnz
mov
bound
cmp
addr16
jecxz
fldt
cs
fidivs
push
sbb
scas
push
loope
cmc
cmp
leave
test
jns
pop
xchg
inc
inc
xchg
outsl
fwait
push
push
repz
fcompl
jns
push
or
sbb
stos
push
add
mov
mov
movsb
mov
jns
cmp
pop
popf
stos
loop
and
cmpsb
lahf
stos
mov
ds
lods
adc
roll
pop
ss
lcall
push
pop
and
bound
outsl
or
idiv
push
mov
inc
rol
jo
ret
sub
test
pop
inc
arpl
jmp
cwtl
push
stc
rcrl
sbb
js
pop
push
and
in
rcrl
inc
sbb
inc
jecxz
dec
stos
fisubrs
filds
stos
iret
mov
dec
xor
int3
sub
xor
inc
in
xchg
lcall
sub
jge
stos
fsub
fistps
xchg
add
stos
shrl
mov
cmp
push
push
adc
lock
ret
lret
lret
xor
mov
std
and
add
add
insl
outsb
push
pop
imul
push
inc
xor
mov
xchg
fisttpll
inc
pop
and
inc
les
movsl
pop
fidivrs
nop
pcmpgtd
addr16
xor
xchg
stos
cwtl
or
iret
in
pop
cli
sub
jle
mov
mov
pop
xchg
and
xchg
dec
stos
and
xor
repz
stc
repnz
mov
test
leave
jns
int3
xor
cmp
adc
xorb
std
push
repnz
pop
mov
sbb
imul
xorl
dec
test
cli
enter
sub
les
arpl
sub
adc
dec
xchg
jae
repz
cld
sahf
into
outsb
pop
je
mov
ficoml
pop
cmp
pop
jg
push
lcall
mov
jg
inc
loopne
call
push
pop
add
adc
pop
mov
mov
lahf
jecxz
into
nopl
ffree
push
popa
sbb
int
jns
and
dec
jmp
sti
xor
push
addb
mov
jnp
stos
rep
rcr
cmp
fmull
aaa
push
push
jg
fildll
aad
fs
xchg
dec
mov
mov
je
std
clc
dec
test
das
xchg
lcall
inc
dec
lods
pop
fwait
aad
mov
inc
xchg
sbb
dec
or
fistpll
sub
mov
and
adc
mov
pop
dec
imul
insb
inc
dec
dec
push
iret
aaa
and
dec
adc
mov
popa
dec
pop
sub
adc
int3
xor
aaa
xor
adc
xor
xor
imull
insb
mov
lods
shrb
faddl
int
adc
mov
pop
fbstp
dec
ds
cmpsb
andb
stos
movsb
out
int3
sub
inc
mov
jmp
mov
loopne
mov
data16
pop
addr16
test
je
xor
pop
dec
frstpm(287
lahf
sbb
jb
mov
cld
inc
insl
mov
jp
adc
mov
rcl
or
jecxz
cltd
scas
dec
adc
mov
cmp
and
push
jmp
insl
add
push
push
out
out
xchg
lret
jmp
pop
pop
xchg
jno
mov
inc
adc
cmp
icebp
out
push
pop
shl
xchg
loope
aas
cmp
enter
and
ret
or
jnp
mov
push
movhps
inc
sub
dec
pusha
xchg
and
fnstcw
leave
adc
pop
das
xlat
ror
push
stc
sbb
rorl
stc
testb
out
ficompl
xchg
xor
and
push
out
or
aam
nop
jbe
pop
push
sbb
imulb
push
or
add
add
fs
pusha
stc
cltd
mov
push
out
lods
jecxz
xor
mov
enter
aad
test
fmull
int3
inc
add
roll
cmp
adc
xor
mov
sbb
push
xchg
out
or
rcl
jg
test
daa
stos
fisubl
jnp
cmpsl
sti
push
outsl
add
pusha
mov
mov
and
mov
repnz
int3
clc
xor
je
inc
repnz
lahf
cmp
stos
gs
dec
ficomps
lock
ss
ja
mov
jae
xchg
mov
notb
mov
xchg
jb
gs
cmc
call
inc
in
jbe
dec
fistps
cmc
xchg
pusha
sub
cmc
or
mov
dec
mov
mov
aad
xlat
xchg
pop
push
xchg
imul
and
inc
bound
arpl
dec
mov
in
repnz
or
mov
xchg
push
inc
xor
repz
sbb
ret
filds
jns
jno
movsl
insb
inc
or
adc
xlat
ja
dec
jae
in
sbb
mov
dec
xchg
push
loope
mov
fdiv
and
imul
sub
imul
pusha
fstl
mov
gs
ss
jno
es
push
aam
xchg
mov
or
shll
ds
fdiv
fildll
xchg
pop
scas
sub
popf
mov
mov
andl
mov
xor
int3
inc
push
sbb
call
ficomps
mov
xchg
int3
mov
fdivrl
dec
fnstsw
inc
dec
cmpsl
mov
out
or
stos
xor
xchg
fcompl
xchg
dec
xchg
test
in
mov
and
mov
xchg
adc
jmp
pop
fildl
mov
lods
lds
add
sbb
push
jecxz
in
xor
sbb
int3
adc
out
sub
shll
inc
aad
stos
sub
sbb
ror
mov
ficompl
jnp
movsb
mov
pushf
mov
push
scas
adc
pop
xchg
dec
std
mov
mov
pop
pop
aaa
inc
roll
repz
pop
scas
test
or
pop
mov
mov
sub
lods
fwait
sub
nop
mov
stos
mov
sub
cmpl
in
xchg
add
inc
in
adc
mov
cmpsl
xor
scas
call
jb
xchg
mov
xchg
arpl
addr16
add
sbb
push
push
out
orb
call
mov
xchg
incl
cmp
bound
push
xor
jecxz
je
dec
mov
pop
inc
jo
shlb
mov
mov
loope
pop
or
nop
imul
pusha
add
das
div
xor
mov
cmp
push
gs
filds
mov
call
les
popa
xor
sti
cld
inc
aaa
das
jg
lds
xor
sub
jnp
push
add
outsb
or
cmp
add
inc
mov
jmp
leave
or
loop
and
icebp
lcall
mov
inc
insb
pop
sub
lret
add
xchg
retw
adc
cwtl
jl
xchg
into
jb
mov
xchg
testl
xchg
enter
lret
js
cmp
cmp
xchg
bnd
mov
mov
mov
sub
push
cld
xchg
mov
test
aam
test
mov
mov
enter
sub
adc
es
packssdw
inc
mov
inc
sub
mov
pop
icebp
nop
movsb
cmpsb
xchg
jmp
sub
sbb
repz
mov
lods
mov
loop
mov
sub
push
repz
push
lcall
scas
cmp
pop
ret
xchg
psubusw
xor
push
cmp
scas
adc
xchg
js
mov
pop
iret
loopne
mov
fmull
jne
insb
mov
divl
xchg
and
sub
add
mov
push
rcrl
repz
dec
add
cmp
sub
or
xchg
popf
push
movsb
xchg
aad
inc
mov
cmp
cmp
pushf
test
imul
les
mov
cmp
jb
dec
cmp
mov
int3
repnz
stc
jns
shll
sbb
aam
mov
jmp
insb
mov
in
lds
stos
mov
push
loop
jae
ret
mov
cmp
aad
push
or
inc
or
sarb
sbb
movsl
push
arpl
je
ror
das
xor
jo
test
lock
andl
add
adc
clc
mov
mov
or
aaa
mov
scas
inc
popf
jp
mov
xchg
daa
xchg
cld
dec
or
or
jp
es
and
mov
dec
inc
lods
loope
or
cmp
stc
mov
in
sbb
out
imul
fistpl
sbb
rorl
mov
insl
dec
ja
inc
aam
sub
pop
push
ljmp
scas
out
mov
xchg
cmp
mov
pushf
xchg
jmp
imul
scas
dec
shl
in
push
xchg
dec
push
adc
or
fsubr
adc
js
xor
jae
iret
mov
fsubl
aad
push
mov
repnz
adc
leave
xor
sub
add
out
enter
cmp
fld
cmp
clc
cs
out
sbb
out
out
xchg
out
fsubp
adc
pop
loop
icebp
jb
enter
xchg
sub
enter
xor
jae
lock
jle
shrb
push
add
sbb
jp
dec
xor
lds
jle
popa
scas
jge
mov
sub
bound
dec
lahf
push
sub
mov
jbe
jbe
mov
ja
mov
push
test
push
cmp
sbb
cmpsl
mov
jg
popf
mov
pop
inc
repz
xlat
push
into
icebp
or
inc
jne,pt
loop
fldenv
fmuls
push
push
add
push
xchg
enter
or
push
push
lret
mov
sbb
repz
loop
jl
adc
and
lret
or
adc
push
fwait
xor
jmp
and
cld
cs
pop
xor
mov
lahf
stos
leave
test
sbb
xchg
ds
mov
decl
sti
sti
je
pop
and
adc
inc
sub
test
xor
sahf
rcrb
jno
lahf
shll
leave
push
pop
popf
push
cmp
xor
es
xchg
and
add
imul
rcl
int3
sub
inc
or
adc
and
jle
cli
jno
sub
push
sub
ficomps
cmp
cmp
addr16
fiadds
leave
hlt
lds
ja
dec
jbe
in
pusha
xchg
in
imul
jl
pop
pop
or
jno
or
jae
popa
dec
or
and
std
jb
mov
outsb
dec
orl
pop
mov
jb
sbbl
push
aam
cmpsb
loopne
xlat
mov
mov
mov
shrl
daa
mov
jnp
jnp,pt
js
sub
jecxz
dec
pop
in
lahf
cmpsl
pop
mov
inc
add
insl
inc
pop
inc
shlb
mov
fsts
jno
in
pop
mov
ss
jbe
jne
xchg
repnz
xchg
les
dec
pop
test
subl
ret
sbb
pop
mov
rorb
sbb
iret
xor
push
xor
xchg
or
inc
clc
and
mov
out
dec
jl
dec
into
jne
out
stos
dec
dec
sub
xor
add
stos
mov
call
jp
mov
add
insb
movsl
aaa
or
aaa
loopne
mov
outsl
aad
sub
xor
incl
addr16
inc
xor
jae
pop
popf
filds
add
insl
fistps
ja
push
jb
jno
mov
mov
jno
xor
jl
jp
jns
ljmp
jge
mov
cwtl
sarb
nop
scas
cmp
adc
xlat
push
push
out
xchg
shll
imul
movb
dec
popf
scas
lds
pop
imul
movsb
lods
dec
jae
dec
push
lods
aaa
xor
fbstp
stos
lods
push
cmpsb
outsb
mov
lock
js
js
data16
std
or
aaa
mov
sbb
out
shrl
xchg
ss
outsb
cld
mov
out
outsb
add
mov
xchg
sbbl
and
ficoml
dec
lock
mov
adc
xchg
sub
dec
stc
and
std
mov
lahf
adc
mov
jl
and
gs
or
rcr
xorb
aas
scas
outsb
xchg
add
rcrl
test
jae
shl
sbb
mov
mov
or
xlat
or
jl
ficompl
les
repnz
call
sub
out
xchg
arpl
pop
xor
sub
sbbb
sbb
ds
in
push
inc
shll
arpl
scas
adc
or
popf
pop
popf
addl
lcall
movsb
inc
cmp
adc
dec
mov
sub
push
aaa
jne
cmp
cmpsb
pop
rcr
push
mov
int3
test
dec
shlb
xchg
mov
lret
inc
outsl
jle
xchg
xchg
loopne
in
nop
sbb
push
pop
fdivs
mov
in
push
testb
dec
mov
dec
pop
icebp
adc
sbb
imul
mov
cld
push
sub
scas
cmp
std
xchg
shrb
inc
jbe
jmp
daa
push
leave
xor
inc
dec
movsb
rcr
sub
rolb
adc
loope
jl
add
sbb
xchg
sub
inc
mov
pop
lea
negb
std
data16
repnz
in
xchg
push
sbb
sbb
repnz
hlt
loope
fimull
js
jg
popf
push
pop
jge
cmp
pop
add
jle
stos
mov
xchg
dec
sbb
jecxz
imul
and
push
in
jb
dec
repnz
xchg
aas
pop
dec
mov
inc
jmp
xchg
rol
scas
loop
jp
pop
fs
sti
inc
xor
xchg
and
adc
push
jle
arpl
imul
std
mov
imul
clc
rclb
add
dec
jl
gs
ljmp
call
outsb
xchg
and
sbb
sbbl
clc
int
pop
popf
mov
adc
cmc
pushl
jnp
sarl
sbb
ljmp
jo
imul
mov
xchg
inc
les
into
mov
data16
sbb
outsl
pop
jae
out
cmp
lods
loopne
ss
icebp
inc
shll
jge
ss
mov
or
inc
into
notb
push
add
push
pop
ss
je
and
jmp
xchg
add
pop
mov
ja
ja
pop
cmpsb
lea
loop
lret
subb
sbb
mov
std
stc
mov
leave
mov
pop
pop
sbb
pop
jnp
cld
hlt
push
lods
jge
jns
rclb
sti
rclb
call
insl
add
adc
insb
xchg
lea
mov
cmp
dec
sub
jmp
cmp
rcll
adc
mov
jp
shlb
cld
mov
aas
adc
jnp
lods
gs
outsb
xchg
mov
insb
xor
or
add
xchg
xor
fcomp
cmp
gs
cmp
jp
mov
sbb
jle
mov
ljmp
pop
sbb
movsb
jmp
add
aas
xchg
rcrb
ja
mov
jbe
xchg
arpl
idiv
push
movsb
lock
dec
pop
mov
sub
les
sub
mov
arpl
push
xchg
sbb
lret
or
ds
mov
lods
add
sbb
and
adc
int3
xor
and
inc
pusha
cs
test
mov
add
andl
xchg
test
in
xchg
xor
cltd
push
aas
repnz
sti
scas
subl
clc
cmpsl
je
js
subb
inc
mov
loope
or
sub
jne
sub
bound
popa
pop
dec
stos
mov
es
popf
cltd
daa
pop
rolb
arpl
push
xlat
jl
adc
aas
mov
and
push
aam
adc
adc
cmp
pop
rcll
jmp
sub
repz
add
cmc
sar
cs
in
push
in
sti
jl
imul
lret
filds
or
jae
sub
aaa
push
xchg
test
pop
mov
or
loope
repz
dec
out
sbb
jnp
mov
sub
jmp
inc
sub
lods
jmp
add
in
and
sbb
sbb
cli
pushf
in
adc
rcl
sbb
jns
dec
push
mov
repz
cld
push
add
adc
or
jmp
adc
pop
sbb
jge
cltd
xor
ret
cmp
hlt
add
ljmp
and
pop
fsts
bswap
aas
xor
pop
mov
add
push
xor
dec
adc
mov
insb
sbb
mov
aas
repz
divb
jl
rorl
xchg
je
leave
repnz
icebp
dec
lds
pop
int3
gs
out
out
jb
jl
sbb
lds
cmp
xchg
mov
mov
push
and
clc
ret
inc
jo
mov
cmc
push
pop
pop
gs
push
xchg
outsb
cmc
out
inc
jg
scas
push
les
xor
sbb
int3
les
mov
xor
xchg
cmp
inc
jno
test
mov
mov
vunpckhpd
out
repnz
stos
testb
pop
mov
push
lods
daa
rolb
shrb
or
movsl
pop
data16
pop
ficoms
and
int
out
stos
and
jl
loopne
aam
pop
out
loope
mov
mov
jae
mov
gs
pop
lret
popa
stos
icebp
pop
mov
adc
leave
adcb
mov
and
sbbb
mov
or
pop
add
lcall
int
and
or
jmp
push
cmc
xor
test
or
mov
pop
push
xlat
clc
addb
daa
add
pop
cmp
xchg
enter
imul
shr
bound
andb
push
and
push
jnp
jmp
mov
aad
mov
push
xchg
test
mov
daa
add
lret
out
jb
cmp
mov
add
roll
add
mov
out
add
les
push
leave
and
test
mov
leave
sbb
mov
mov
mov
xchg
pushf
adc
pop
popa
mov
call
mov
add
push
repz
adc
or
dec
push
in
pop
or
dec
xchg
adcl
lods
sbb
mov
adc
lret
hlt
sahf
bound
enter
mov
add
jo
jmp
sahf
insl
and
je
xor
xchg
std
mov
lods
jb
roll
lcall
or
into
xor
lds
push
dec
sbb
repnz
out
mov
imul
movsl
ds
insl
sub
negb
hlt
je
xor
out
popf
mov
mov
pmulhuw
sub
sbb
jmp
ss
and
cmp
int
test
ror
fwait
sbb
sbb
jecxz
push
mov
clc
pop
mov
push
cmpsb
pop
in
and
and
iret
jbe
dec
insb
pop
lret
inc
jg
inc
mov
adc
dec
jge
or
fdivl
loop
sub
inc
leave
and
lret
adc
jecxz
fsubl
shr
dec
lcall
or
fwait
lcall
into
inc
inc
imul
and
and
pushf
loop
jns
nop
das
pop
adc
jge
sbb
mov
mov
popa
imul
fcoms
inc
rolb
dec
mov
xchg
aam
loope
mov
fwait
les
dec
into
outsl
rorb
push
stos
jbe
ljmp
imul
pushf
xor
push
aam
mov
cli
fistpll
sahf
hlt
dec
ret
and
inc
das
ret
inc
dec
out
fidivs
and
in
xchg
sahf
cmp
sbb
clc
jecxz
adc
aaa
movsb
repnz
dec
and
cmp
xchg
lahf
push
xchg
xchg
mov
out
cmp
call
pop
sbb
jo
bound
bnd
test
fwait
jno
out
pop
sub
add
fcomps
jbe
fwait
or
in
ficompl
jge
aam
mov
clc
loop
jl
cld
outsb
enter
add
xorl
je
mov
daa
orl
loope
or
ss
out
mov
ds
pop
sub
push
movsb
fistpll
daa
popw
push
stos
movl
mov
flds
mov
dec
jge
aaa
jl
push
popa
lods
imul
dec
inc
sub
ss
jb
add
mov
sbb
jg
pop
mov
shl
sbb
cltd
stos
cmp
mov
das
dec
dec
jge
orl
ret
mov
xor
data16
inc
cs
aam
or
inc
mov
cmpsb
xchg
mov
pushf
sarb
notb
dec
dec
mov
xor
mov
in
imul
in
pop
adc
add
es
pop
jge
lcall
stos
mov
rolb
rolb
out
imul
pop
mov
mov
test
sub
ret
cwtl
subl
ret
loope
sarb
dec
mov
xchg
je
lods
shlb
cmp
pop
push
fisttps
xchg
mov
push
mov
push
pusha
jo
add
stc
jg
mov
xchg
ljmp
mov
pop
jo
icebp
mov
ds
pop
mov
lret
or
jmp
mov
fists
and
cmp
or
rclb
mov
sahf
in
in
scas
mov
cmc
std
scas
push
lods
jecxz
arpl
mov
or
pushf
mov
mov
push
sbb
lahf
jle
loope
stc
enter
out
test
movsl
and
sub
int3
inc
cmc
xchg
aaa
jle
inc
mov
loopne
call
jno
mov
adc
inc
add
leave
nop
sbb
outsl
xchg
mov
int3
sub
mov
jne
loope
test
in
or
aam
jp
loopne
insb
jne
stc
or
cmp
cmpsl
repz
mov
pop
pop
mov
xchg
pop
mov
insl
mov
outsl
fsubl
cmpsb
test
mov
xlat
add
stc
out
add
push
movsb
fisubrl
sti
lock
xlat
je
outsl
iret
xor
in
aad
je
sbb
in
and
stos
cmp
jmp
and
jmp
in
and
fs
lahf
andb
iret
jns
adc
pop
push
adc
test
cmp
cmp
lock
pop
arpl
or
rolb
dec
push
or
ss
push
ds
mov
push
dec
xchg
std
and
into
mov
xchg
mov
jne
xchg
pop
fisubs
mov
mov
cmc
mov
into
sbb
pop
and
xchg
call
outsb
fnstcw
jle
and
jg
clc
cs
xor
jno
jne
addl
mov
loop
pop
or
xchg
rclb
cmp
mov
mov
xor
ja
sarl
fsubr
daa
cmp
std
inc
mov
and
imul
aam
fdivp
aam
dec
movsl
lods
mov
fsubrs
pop
xor
xor
cmc
aaa
lods
mov
stos
jmp
jnp
add
cmp
arpl
dec
pop
js
in
inc
push
pusha
les
xchg
mov
sub
in
xchg
add
pushf
das
and
pop
push
scas
add
jp
and
jle
push
fwait
or
mov
leave
insb
mov
jg
push
imul
adc
pop
jae
mov
mov
push
cli
flds
dec
jecxz
cmp
ss
jle
cmp
xchg
adcl
mov
push
pop
data16
or
jmp
std
jno
xchg
shrb
inc
mov
mov
mov
ret
push
jg
sub
lods
hlt
and
rorb
call
inc
pop
fimuls
sbb
enter
test
sub
ds
add
pop
mov
mov
dec
movsb
in
lods
fwait
cmpsb
mov
cmpsb
scas
cmp
sub
mov
mov
sub
lahf
mov
push
je
mov
ror
bound
movsb
repz
dec
and
clc
fincstp
mov
xor
pop
or
lea
lahf
mov
mov
jecxz
enter
cmp
aaa
add
negb
xor
imul
and
sahf
popa
out
add
sbb
cmpsl
pop
movsl
mov
jno
sub
sbb
iret
in
mov
jnp
push
or
cmpsl
adc
xchg
push
addb
pushl
lds
xchg
mov
push
xor
cmp
pop
cmp
test
adc
mov
lahf
pop
sti
cwtl
movsl
cmp
mov
rcrl
bound
mov
gs
mov
mov
mov
loopne
xor
sbb
insl
push
loopne
loop
mov
cli
dec
mull
rorl
xchg
rorl
cmp
jl
sbb
fistpll
pusha
lret
je
and
inc
ss
ds
daa
inc
idiv
add
movsl
aad
popf
imul
mov
fiaddl
inc
in
mov
out
sub
dec
nop
aam
xor
mov
aaa
std
push
cmp
repnz
popa
or
scas
jecxz
lea
mov
ljmp
in
xchg
sbb
insb
cmp
jp
test
xchg
jle
lea
pop
sbb
xchg
push
mov
ret
lcall
xor
call
js
inc
mov
add
insb
sub
inc
cmp
scas
jg
ficoml
je
ss
and
out
in
xor
fucomi
rcll
cmp
in
sti
js
add
mov
inc
xchg
and
mov
or
xor
mov
mull
mov
pop
in
add
insb
mov
pop
adc
jg
daa
fsubrl
rcl
add
xchg
rcrl
sahf
dec
ds
inc
subb
dec
call
insl
xchg
add
pop
outsb
shlb
xchg
jo
and
roll
fbstp
mov
testb
inc
dec
cmp
lock
inc
bound
inc
out
push
xchg
gs
jno
mov
jo
and
int
dec
mov
mov
lahf
loopne
in
les
xor
xor
loop
push
sub
cmpsl
add
or
cmp
mov
mov
mov
and
mov
cmp
dec
ficoml
int
out
push
mov
mov
test
jnp
idiv
dec
dec
xchg
adc
mov
and
ja
xlat
mov
mov
or
lock
xchg
sub
and
mov
movsb
pop
int3
jnp
clc
movsb
inc
lret
int
cmc
out
pop
xor
mov
sarl
aas
enter
add
arpl
jl
and
xor
faddl
data16
movl
leave
push
cltd
xchg
movsb
cltd
cmp
lods
push
int3
mov
aad
addb
scas
cmp
cbtw
sbb
mov
insl
push
jne
enter
push
cmp
lret
xchg
or
mov
mov
icebp
lods
jo
xchg
in
shlb
pop
popa
or
add
ret
cmp
movq
nop
scas
psubb
xor
or
leave
nop
inc
cmpsl
dec
rcll
int
inc
mov
out
les
data16
sub
cmc
sub
pop
mov
mov
mov
cmpsl
sub
sub
push
movsl
cmp
jne
inc
vucomisd
or
cltd
lahf
arpl
ds
jbe
sbbl
loopne
inc
adcb
or
mov
dec
inc
xchg
push
mov
pop
fwait
orl
es
popa
ljmp
sbb
arpl
orb
pop
popf
pop
rolb
pop
add
je
daa
mov
je
inc
call
mov
xchg
fldl
cmpsb
out
bound
or
adc
outsl
neg
scas
cmp
sbb
cmpsl
dec
adc
add
jns
lahf
fldl
push
jp
push
inc
mov
mov
jne
dec
push
mov
test
test
mull
inc
test
repz
out
scas
mov
sbb
je
pusha
outsl
cltd
xchg
sub
sub
lods
cmp
add
leave
add
xor
shll
das
sub
and
std
sub
adc
xor
mov
sub
es
dec
mov
ljmp
mov
pop
add
fnstcw
nop
and
cltd
mov
sti
sub
cld
xor
cwtl
call
push
movsl
ja
cmpsb
das
iret
pop
pop
pop
push
mov
and
insl
ljmp
pop
push
cmpsb
and
adc
pop
add
adc
bound
inc
adc
mov
stc
call
mov
repnz
rcrl
imul
sbb
inc
hlt
xchg
cmpsb
fmuls
cltd
movsb
inc
das
pop
push
or
cld
or
pop
cmc
ficoms
dec
or
mov
jns
add
in
mov
sbb
xchg
mov
xlat
adc
mov
lahf
inc
out
je
cld
cmp
in
xchg
xchg
pop
js
push
dec
sub
clc
es
jmp
dec
push
cmpsl
arpl
into
ds
daa
and
jae
fdivr
xor
add
mov
jle
std
jge
icebp
cmp
dec
insl
insb
push
sub
push
fs
cwtl
jno
lds
dec
xorb
in
daa
lcall
push
jmp
cmp
cmp
cmc
popa
mov
sub
aas
push
adc
mov
fidivs
fmull
lods
and
fadds
mov
mov
nop
cmpsb
or
jl
cmpsl
or
fbstp
sub
mov
xor
fimull
fcmovnb
xchg
mov
fwait
and
imul
xor
push
ret
imul
push
jg
aam
add
mov
adc
leave
icebp
pusha
or
lods
xor
sahf
mov
mov
adc
nop
adc
popf
movl
inc
mov
and
loope
jo
jbe
mov
nop
lods
int3
fs
adc
hlt
cs
adc
xorb
loop
cwtl
sub
adc
loop
aas
mov
cwtl
jbe
lcall
push
imul
push
mov
xchg
fidivl
jge
push
mov
sbb
insb
jne,pn
shl
mov
lahf
lock
out
mov
shlb
and
sahf
sbb
jl
inc
arpl
dec
cmp
movsb
dec
fistps
cmc
adc
dec
mov
mov
testb
fisubrl
scas
test
arpl
popf
jo
adc
mov
xorb
inc
fsubr
jmp
lret
fwait
and
push
nop
cmp
mov
adc
mov
jge
fwait
push
dec
mov
dec
in
pushf
arpl
jge
xchg
adc
add
cs
scas
ss
dec
inc
fucomip
sbb
mov
test
sbb
icebp
leave
xchg
push
icebp
aas
cli
and
mov
sbb
sbb
jnp
enter
out
sbb
fdivrl
xchg
mov
inc
test
fcmovne
xchg
orb
jmp
scas
iret
filds
movsb
pop
xchg
stos
push
dec
jp
xor
sbb
jg
shll
sub
rcrb
lret
aaa
ljmp
xchg
push
push
jnp
pop
adc
ds
ja
mov
dec
sub
orb
fldpi
movsl
and
lret
adc
pop
in
fisubrs
and
or
cli
add
sbb
int
fimull
inc
jnp
dec
jb
xchg
pop
hlt
and
xchg
xchg
imul
mov
repz
in
adcb
out
hlt
testl
dec
add
fisttpl
mov
mov
pop
das
dec
xchg
in
xchg
jg
sub
jbe
mov
jge
outsl
scas
xchg
inc
leave
xlat
xchg
roll
pop
cmp
jo
sar
jo
rorb
clc
inc
insl
mulb
call
sbb
out
cmc
or
cltd
mov
jne
iret
sub
es
mov
ror
ret
jmp
dec
lret
mov
mov
pop
in
dec
mov
mov
mov
sbb
sub
sub
je
pop
iret
lds
xchg
icebp
push
fcoms
aad
jne
xchg
cmp
cmpsb
adc
jp
pushf
xchg
adc
add
inc
sub
add
stos
xor
inc
mov
cltd
add
pop
xor
mov
dec
add
icebp
inc
mov
or
jge
xor
push
out
aad
outsb
pop
hlt
loop
jae
mov
setne
inc
in
and
test
call
adc
mov
test
arpl
mov
dec
sub
dec
jge
inc
out
mov
xchg
cmp
cmp
mov
lds
loop
jg
cmp
dec
movsb
and
paddq
movsb
inc
cmp
or
rcrb
cwtl
add
hlt
lods
adc
testl
push
mov
xorb
pop
jp
jmp
fwait
jno
outsl
pushf
fcmovne
mov
nop
add
rclb
mov
xchg
sbb
out
ret
and
jl
cmp
mov
and
int
xchg
pop
mov
jge
jp
dec
xor
test
xor
loopne
call
cmc
or
mov
cmp
dec
pop
and
movsl
pop
sahf
cltd
add
filds
aam
data16
mov
mov
lods
andl
and
ret
or
shll
repz
sbb
mov
dec
push
sub
aad
cmp
int3
inc
inc
pop
test
ret
xor
pop
stc
js
sbb
push
xchg
ret
call
sahf
lods
ja
popf
stos
pop
dec
fcoms
sub
shrl
cmc
sub
test
dec
ja
inc
icebp
lds
or
cs
rclb
cmp
adc
movsb
popa
sub
xchg
or
jbe
lcall
pop
mov
mov
or
cs
xor
add
jecxz
adc
push
in
dec
jecxz
testl
mov
adc
clc
adc
jo
cmpsb
sarb
adc
pop
popf
cwtl
je
mov
jns
lods
sub
jbe
sub
cmp
adc
pop
push
xor
sbb
push
xchg
push
mov
jge
jb
push
pop
jmp
and
leave
mov
inc
inc
jo
sub
or
pop
gs
daa
movsl
stos
bnd
sbb
fildl
xchg
adc
xchg
inc
push
test
xor
enter
call
push
es
lods
jne
jp
add
and
leave
cld
inc
jo
cmp
cmpsb
sub
fstl
in
dec
pop
nop
sbb
jbe
jo
shll
je
adc
sbb
sub
ror
or
js
jae
mov
sbb
lret
mov
sbb
js
sarl
repnz
jo
outsl
xchg
out
mov
add
aaa
mov
xor
xor
jb
mov
arpl
adc
fsubl
pop
imull
push
mov
mov
and
in
enter
aaa
mov
in
jl
mov
xchg
lcall
xchg
cmp
outsl
shrl
xchg
shrb
pop
mov
sub
aaa
xor
mov
and
jo
push
std
pop
ret
ja
lret
sub
test
call
or
movsl
fs
mov
repnz
push
int3
mov
popl
aad
xor
add
decb
sbb
cld
jb
pusha
ret
cli
add
push
adc
add
sbb
iret
inc
aaa
jno
lock
pop
or
hlt
mov
call
fisttpl
pusha
xor
lcall
mov
xchg
sub
dec
imul
filds
jmp
icebp
aad
mov
mov
aad
pop
lcall
pop
and
loopne
pop
js
add
pop
push
xchg
mov
jo
nop
sbb
push
sbb
loope
mov
sbb
pop
es
stc
sub
push
int
cmp
mov
dec
lock
xchg
aas
dec
sub
dec
mov
inc
out
cmp
cmp
fnstsw
xchg
mov
sysexit
bound
addl
dec
pop
xor
shl
cmpsb
stos
inc
push
jnp
cmp
popf
sbb
pusha
mov
psrad
repz
inc
xchg
adc
int3
xchg
aad
nop
ja
int
popa
ret
add
xor
or
std
adc
xchg
orl
push
or
inc
mov
shlb
out
cs
add
pop
mov
push
mov
or
in
add
jg
imull
pop
jne
dec
rcrb
mov
test
lock
js
jno
subb
mov
loop
test
in
mov
jae
push
les
adc
lret
in
dec
fisttps
fs
or
sbb
clc
xchg
int3
push
std
rcl
mov
cmp
mov
out
xlat
push
pop
cwtl
stos
or
mov
sub
lods
clc
mov
xor
cld
imull
cwtl
frstor
dec
mov
subb
es
stos
imul
aas
repnz
add
fxch
and
sti
jge
lds
mov
inc
mov
ret
loop
outsl
enter
popa
clc
push
mov
in
js
and
xor
lods
pop
mov
inc
bound
mov
hlt
ffree
int
sti
mov
std
cmp
xchg
fucomp
repnz
push
jno
jae
xchg
in
into
imul
lods
test
popf
jecxz
mov
inc
pmulhw
ljmp
jne
les
iret
pop
cmp
fcoms
xchg
pop
xchg
sub
daa
xchg
push
mov
dec
mov
sub
mov
subl
xor
jmp
mov
cli
inc
mov
sub
add
mov
nop
aam
jbe
pushf
lret
cmp
imul
push
mov
fiadds
mov
xor
ja
sbb
push
cmpsb
cli
hlt
loope
hlt
ds
lea
mov
push
push
mov
pop
insl
movsl
xor
dec
das
lret
mov
rolb
xor
in
popf
clc
jo
adc
pop
or
negb
es
mov
jae
mov
icebp
adc
lret
lret
sbb
subl
and
outsb
adc
test
fs
jnp
mov
mov
gs
mov
in
fists
jecxz
add
pop
aad
insl
mov
pop
mov
push
inc
bound
pop
loop
pop
mov
jno
pop
add
movsl
sub
adc
jmp
bnd
mov
sbb
cmc
mov
add
mov
mov
and
scas
fmulp
dec
fwait
orl
sahf
push
stos
call
loop
sti
or
add
mov
call
out
mov
add
int3
pop
mov
fwait
pop
xchg
jl
ja
pushf
mov
ja
mov
or
mov
ja
aam
sbb
int
loopne
outsb
adc
cltd
fwait
repz
cmp
pop
nop
movsb
pop
or
add
pushf
inc
ss
bound
add
cmp
out
or
fsubs
mov
cli
roll
mov
fsts
pop
fists
iret
popf
push
pusha
inc
mov
test
popf
adc
cmp
fisttps
inc
das
mov
test
xchg
fstps
inc
push
je
ja
and
divb
subl
aaa
adc
sbb
jnp
psllw
pop
orb
in
rcrb
les
pop
stos
mov
ret
xlat
fmuls
jmp
movsl
add
popf
push
jo
mov
stos
call
shlb
fistpl
sbbl
bswap
jp
pop
int3
inc
popa
jp
adc
mov
sahf
jae
popa
jp
addb
fisubrl
or
insb
enter
es
ret
pop
popf
jne
mov
scas
lret
sub
lret
mov
dec
roll
mov
testl
daa
pop
lock
sahf
ror
and
loopne
dec
faddl
push
sub
enter
mov
lea
fildl
mov
stc
subl
mov
push
xchg
out
shl
mov
add
nop
and
cmp
or
shll
add
scas
mov
int
ja
and
popa
pop
clc
xchg
jo
insl
mov
mov
fildl
pop
inc
aas
ss
mov
xchg
fucomp
stos
rcrb
in
xchg
aad
sti
rcll
fidivl
add
adc
into
jecxz
pushf
lods
int
push
xor
jmp
inc
ja
and
adc
das
mov
in
addr16
jp
fs
lcall
mov
jns
inc
out
int
adcb
mov
cmc
outsb
test
push
jns
fldt
cld
push
aaa
mov
cmpsb
xchg
notl
mov
aas
jo
in
outsb
aas
jae
xorb
das
sbb
std
stc
inc
out
xorl
pop
test
fdivrl
lcall
fstpl
ret
dec
xor
cmp
in
imul
mov
ret
cmpsl
mov
adc
mov
adc
and
call
repz
xor
xor
jmp
leave
mov
pop
cmp
fdivrp
push
in
xchg
pusha
cmp
data16
mov
dec
jbe
je
adc
ljmp
stc
lds
push
leave
iret
jle
push
rcll
cmp
mov
arpl
dec
adcl
enter
cli
leave
leave
int3
out
out
jmp
mov
cmp
movsb
mov
xor
cli
push
dec
sbb
nop
jae
cmp
dec
cmpsl
inc
pop
leave
sbb
fsubr
call
mov
popf
jno
leave
lret
jg
lock
arpl
insl
lods
mov
scas
mov
fcmovb
test
imul
mov
xchg
add
cmp
stc
pop
cmovs
sarb
mov
dec
mov
fcmovb
pop
push
mov
push
sub
push
mov
adc
mov
cmc
stc
into
lret
adc
sarb
push
bnd
pusha
cmp
lret
std
inc
xor
aad
mov
je
inc
cmpsb
sub
mov
mov
or
push
fistpl
cmpl
lret
jne
mov
xchg
sbb
inc
pop
ljmp
xor
iret
fucomi
nop
das
ss
sub
imul
aad
sub
popf
daa
arpl
fcoms
cmp
lahf
push
jle
cmp
fisubrl
cmpsl
loop
lds
rclb
ljmp
sub
in
lcall
arpl
add
pop
std
mov
fdivs
xchg
bound
lock
cmc
out
jl
movsl
out
mov
lds
or
outsb
sub
xor
mov
gs
jecxz
rcrb
mov
aam
pushf
add
pop
mov
adc
xor
sbb
xchg
je
ja
clc
in
xchg
stc
in
fwait
dec
outsl
fsubrs
lcall
lret
cmc
mov
incl
leave
filds
add
cmc
arpl
mov
xlat
jmp
test
jns
stos
sarb
sbb
rorl
aad
inc
outsl
psubd
push
add
fwait
pushf
fdivr
jb
mov
mov
or
aas
sbb
mov
xchg
add
dec
call
inc
add
inc
sub
fwait
cmp
mov
xchg
adc
jo
in
cld
lds
out
lods
daa
mov
mov
dec
cmp
and
fistl
xchg
xchg
mov
in
xor
xchg
add
cwtl
inc
lret
cmpb
jecxz
xor
mov
shll
lret
scas
add
pop
popf
add
lahf
test
mov
cwtl
jecxz
popa
push
dec
pop
jae
stos
sub
jns
xchg
je
cs
xor
insl
dec
add
mov
cli
mov
mov
jl
in
mov
jmp
rdmsr
icebp
adc
cmp
jp
popa
xchg
mov
dec
mov
rcll
mov
repz
sbbl
sub
or
pop
cs
push
cmc
es
sbb
mov
adcb
jle
sub
xchg
icebp
dec
push
cmp
inc
int
xor
cmpsb
mov
popa
div
cmc
testl
and
out
jb
iret
mov
xor
fstps
ljmp
sbb
mov
cwtl
into
adc
lea
mov
push
out
xor
shrl
cld
stos
mov
leave
cltd
ss
push
hlt
push
repz
dec
das
push
loopne
xor
sub
jns
sbb
adc
ds
and
in
iret
out
hlt
cli
repz
jecxz
gs
jge
es
loop
jnp
inc
scas
ret
scas
push
jae
insb
fimull
mov
push
es
pushf
sti
enter
add
sarb
fistl
mov
daa
jp
lods
xor
jbe
and
sbb
jbe
or
icebp
shrb
or
int3
push
in
lods
shll
sub
and
mov
in
subb
mov
decl
rcl
je
lock
add
adc
sbb
adc
pop
push
les
les
cwtl
fwait
into
divb
leave
rol
popa
add
clc
aaa
imul
sbb
shlb
pop
and
fwait
mov
jecxz
in
fst
mov
test
lds
lcall
push
daa
lret
cmp
adc
lahf
mov
add
in
cwtl
jb
mov
in
or
les
ret
xchg
loop
pop
stos
fdivrs
mov
les
mov
push
sub
mov
fbstp
testb
jge
mov
pop
mov
xchg
fwait
mov
sbb
fsubr
mov
es
lahf
xor
iret
repnz
jle
into
fistpl
mov
movsb
xchg
fnstcw
ret
jbe
jge
scas
sbb
mov
jmp
jae
popa
jge
push
jae
ret
mov
xor
cmp
xor
sub
sbbb
test
loopne
clc
es
add
push
out
les
lea
dec
sub
insl
cmpb
stos
push
addr16
cmp
mov
je
subb
test
jb
push
push
pop
loope
lds
mov
dec
das
mov
inc
dec
xchg
cmp
mov
jmp
mov
and
clc
xor
stos
mov
movsl
dec
xor
push
pop
dec
inc
scas
dec
clc
daa
jno
fwait
jbe
scas
xchg
and
leave
jne
mov
cs
imul
test
push
pop
insb
stos
dec
stos
lods
pop
pop
iret
out
sub
pop
mov
fidivs
testl
lds
pop
xchg
cmp
stc
jae
out
and
dec
push
or
mov
fadds
mov
jns
scas
addl
dec
popa
or
fcoms
sbb
mov
pop
dec
les
push
xchg
sub
add
roll
add
mov
cwtl
lret
mov
add
into
mov
negb
or
inc
aad
lods
and
aaa
sbb
sub
gs
or
or
xchg
imull
adc
gs
repnz
leave
sarl
loope
insl
inc
push
add
lods
pop
add
bound
fists
je
ja
and
mov
iret
lods
mov
xchg
mov
mov
sahf
out
imul
push
and
out
call
inc
push
rolb
push
scas
ret
imul
or
xchg
push
cmp
add
popf
mov
les
out
pop
jp
lods
xor
add
jle
pusha
aad
dec
popa
mov
sub
xor
dec
arpl
dec
cmc
in
loopne
and
xchg
adc
adc
test
cmp
cmpsb
add
or
xchg
xchg
pusha
mov
in
mov
push
scas
and
sub
mov
cmpsb
arpl
es
xchg
cs
jbe
xor
xchg
mov
fs
or
xchg
imul
xchg
push
stos
ja
into
adc
daa
popa
push
in
sbb
rolb
outsl
fildl
xchg
cmpsl
xor
fsubr
mov
mov
sub
mov
outsb
mov
cmpsl
sub
jo
mov
jnp
jns
dec
pop
xchg
push
outsb
cmpsl
into
jo
sbb
mov
inc
adc
lea
call
add
jne
sti
add
dec
dec
cmp
in
idivb
pop
dec
mov
data16
scas
xchg
mov
and
sub
lret
adc
add
scas
xchg
lods
cwtl
lret
xchg
inc
jp
mov
fwait
inc
add
push
mov
fbstp
mov
mov
sbb
xchg
stos
lds
pop
push
push
cmp
lods
hlt
cli
inc
imul
add
pop
add
push
mov
call
shld
push
inc
cmpsl
adc
jns
aaa
and
stc
inc
mov
adcb
rclb
push
mov
xchg
sti
mov
vpcmpgtd
xchg
pusha
aad
into
call
dec
mov
or
imul
mov
call
add
scas
and
dec
push
xor
test
mov
fisubrl
jmp
push
jb
lret
leave
orl
mov
inc
into
pusha
pop
in
push
cltd
lret
ret
popf
fwait
adc
aaa
xchg
mov
inc
xchg
mov
lods
xor
out
lods
scas
sbb
push
jae
inc
adc
or
cmp
sub
or
stos
pop
dec
push
cli
pop
sub
leave
addr16
js
mov
mov
jbe
aam
lods
jnp
shrl
xor
test
movsl
imul
mov
xchg
cmpsb
add
and
daa
push
xor
aas
xchg
in
leave
pop
sub
int3
mov
sub
bound
push
sbb
sub
push
or
mov
out
mov
sahf
jbe
or
pop
sbb
cltd
xchg
imul
cli
adc
andl
cmpb
mov
out
and
nop
divl
lcall
and
test
sbb
lret
gs
mov
loop
bound
mov
adc
addr16
rcll
out
movsl
push
mov
add
incb
push
ds
add
xchg
pop
lcall
push
push
aas
sub
icebp
rcll
lcall
mov
insl
popa
mov
sub
pop
cld
jecxz
mov
jo
aas
gs
cmpsb
push
aam
sbb
dec
push
mov
sub
aas
pushf
stc
lds
push
stos
fbld
inc
call
mov
stos
out
mov
xchg
mov
in
adc
mov
jecxz
mov
and
ret
pop
adc
ja
dec
jno
add
mov
push
in
bound
xor
mov
in
adc
test
or
or
das
sbb
pop
cmpsl
push
icebp
jno
data16
push
subb
xor
shrd
fisttpl
add
mov
out
xor
add
mov
sub
pop
js
aam
je
adc
inc
cli
lods
ljmp
push
pop
imul
pop
outsl
fildll
cmp
pop
push
out
push
into
push
imul
jecxz
xchg
mov
jo
cmp
jle
mov
lret
insb
adc
test
xchg
push
xchg
shll
shll
mov
cltd
pop
mov
jle
inc
mov
stc
inc
dec
pop
push
sbb
inc
sarl
imul
pop
add
xchg
xor
popa
xor
xor
xor
sub
nop
and
outsb
je
sbb
jge
jle
push
mov
into
mov
sti
negb
pop
cmc
push
scas
cs
lock
push
dec
outsb
xor
push
lret
jmp
lods
mov
aaa
adc
insl
aam
mov
xor
mov
mov
push
sahf
cmpl
push
lds
stc
cmp
aas
dec
jne
and
fldt
hlt
jo
mov
and
push
and
clc
test
out
push
mov
cmp
pop
cmp
fisubs
inc
ret
xlat
sti
jecxz
jnp
mov
lds
xorb
rorl
lock
sbb
xor
xchg
ret
fs
iret
jle
push
test
icebp
jo
movsl
cmp
pop
test
rcl
test
add
inc
dec
dec
fmuls
stos
aad
xchg
mov
in
lods
mulb
shrl
pop
cwtl
adc
jns
cwtl
test
pop
sub
cld
pop
sbb
add
mov
sbb
inc
enter
arpl
mov
enter
and
cmp
and
loop
leave
inc
aas
inc
push
scas
sub
pop
mov
mov
gs
cmp
mov
icebp
jmp
fisubs
popa
mov
xchg
mov
ficoms
dec
rcll
sti
outsl
std
jge
xor
lds
imul
dec
xchg
xor
rcrl
xchg
jmp
out
pop
je
xor
iret
or
pop
scas
loop
and
stos
mov
ja
jecxz
jge
dec
enter
sub
jle
push
pop
cli
adc
out
xor
out
lahf
pusha
lahf
je
pop
mov
adc
mov
inc
sub
lods
push
inc
insb
into
mov
loop
pop
xor
sbbb
pop
movsb
xchg
sarb
movsb
add
popa
loop
mov
fisttps
icebp
ss
pop
add
rcrb
mov
inc
or
test
xlat
orps
sbb
imul
push
fs
add
imul
ds
unpckhps
fdivrs
ja
dec
ljmp
jecxz
clc
sub
pop
dec
add
mov
fldl
aam
mov
mov
lock
lods
jnp
aad
xor
mov
js
xor
xchg
fcompl
out
push
cmc
pop
push
int
xor
pusha
jo
xor
rorb
and
adc
decb
roll
into
fisubrl
sub
mov
adc
dec
fisttps
push
pop
sbb
sbb
dec
aad
setns
xor
jbe
data16
add
or
fistps
fisubrs
enter
pop
adc
add
xchg
mov
pop
xor
outsl
shlb
fst
mov
mov
and
push
hlt
dec
push
or
or
xlat
inc
lea
fwait
xor
lods
lcall
fbstp
into
arpl
dec
arpl
mov
jnp
adc
mov
test
dec
mov
and
sub
push
rol
sti
or
mov
jb
fsubrs
fstps
cmpsl
jg
adc
js
ss
or
addl
lods
ds
arpl
and
adc
lahf
es
push
fsubl
ljmp
pop
addl
adc
out
cld
adc
xchg
push
dec
cmp
jge
add
jmp
test
sbb
mov
imul
sub
lret
mov
sub
or
mov
jns
mov
in
scas
inc
das
fnstenv
sti
pusha
loopne
inc
dec
outsb
mov
mov
xchg
and
call
or
xchg
in
shll
stos
mov
cwtl
sub
pushf
out
data16
cltd
jmp
xor
sbb
shld
or
subl
shll
and
gs
sbb
xlat
dec
sbb
jne
bound
fstl
mov
popf
out
and
out
push
movsb
mov
loopne
dec
jp
fcmovu
test
stc
or
fcmovne
loope
inc
test
add
out
cmp
out
mov
pushl
call
xchg
xor
aad
dec
inc
pcmpgtb
adc
sub
rorb
mov
push
xchg
xor
test
mov
xor
push
push
mov
or
add
sub
add
or
ficoms
dec
jg
push
aad
rcl
push
jle
inc
fstpl
jl
sub
push
pop
rcll
mov
and
test
jbe
or
clc
ret
xor
inc
lret
sbb
cs
outsl
sub
xchg
inc
test
and
lds
xor
add
jp
inc
stos
addr16
std
cmpsl
in
aaa
std
mov
rcrl
cwtl
daa
leave
mov
stos
jae
pop
dec
dec
push
or
aas
scas
adc
popf
hlt
aaa
ss
mov
jno
cs
imul
jb
xor
icebp
mov
fldcw
inc
repz
adc
mov
jl
aam
ret
nop
push
jno
jp
jb
std
fwait
outsb
dec
popa
sahf
mov
add
les
cmc
or
pop
out
scas
mov
aad
enter
test
and
pop
test
lret
pop
jne
iret
add
into
jge
bound
inc
outsb
pop
xchg
movsl
imul
cmp
mov
cmc
rcl
push
movsl
repnz
cmp
adc
jp
mov
pop
repnz
add
call
mov
stos
push
inc
dec
xchg
xor
push
adc
sub
xlat
adc
inc
cmp
popf
das
mov
imul
iret
test
aam
adc
cmp
rol
cmp
fcomip
lods
mov
inc
cltd
jg
mov
xchg
push
xchg
or
or
and
rcl
xor
and
inc
cmc
jmp
xchg
or
inc
pop
mov
mov
pop
rorl
xor
outsl
lret
movsb
js
nop
mov
xchg
adc
lret
test
lret
or
mov
iret
fsubr
je
and
mov
iret
xor
mov
je
push
fsin
or
enter
mov
push
into
les
sbb
mov
jne
sahf
shrb
test
mov
xchg
adc
repz
mov
test
dec
sub
aas
stos
in
lahf
arpl
icebp
cmp
call
inc
mov
mov
in
pop
inc
mov
insl
cli
push
xor
inc
dec
adc
js
addl
cmp
loop
fisttpll
movsl
hlt
sub
lds
jl
mov
mov
push
repz
cmpsb
jne
xchg
cmp
mov
and
cmpsb
loope
mov
jmp
cld
cmpsl
push
lea
push
mov
lods
jo
jg
cmp
mov
mov
mov
test
lahf
inc
cmp
mov
fadds
push
out
sbb
aam
pmulhuw
cmpsb
jle
ret
sar
inc
iret
and
dec
and
inc
imul
cltd
mov
cmpsb
es
add
and
xor
pop
and
cmp
lock
jmp
push
dec
jne
xchg
rorl
pop
sub
adc
shrl
into
mov
enter
xor
js
ja
stos
push
push
fnstcw
xor
aad
and
cmpsl
out
shll
inc
inc
add
fisubrl
cmp
cmp
fwait
mov
mov
cmp
enter
test
pop
cmp
inc
push
jb
and
cmc
ja
or
sub
sub
ljmp
lea
push
mov
scas
jg
mov
jns
mov
mov
mov
dec
lock
fisttps
and
lahf
and
popf
into
pusha
pop
lahf
addr16
push
mov
dec
pop
mov
xor
push
sub
and
jp
sbb
cmpsl
aad
gs
shlb
mov
daa
aad
mov
pushf
sbb
dec
jg
aad
dec
inc
repz
outsb
cmp
je
ret
xor
add
lock
jmp
mov
bound
scas
push
sbb
leave
inc
test
lahf
cli
ss
inc
or
daa
rorl
xlat
xchg
fcomps
mov
or
std
lahf
mov
stc
inc
in
adc
lahf
ret
dec
andnps
add
loop
fcomp
rorl
pop
sti
dec
xor
dec
xchg
dec
adc
clc
outsb
mov
push
arpl
gs
fstpl
int
jno
dec
lret
cli
mov
cmpsl
ljmp
mov
cli
xor
fcmovnb
push
pop
scas
dec
mov
ss
sub
shl
or
iret
lret
outsl
lcall
das
cmpsb
dec
popa
mov
sub
leavew
dec
cltd
fisubs
sar
dec
movsb
nop
dec
pop
push
scas
sub
fistpll
lea
pop
xchg
ret
adc
fwait
or
push
aas
stos
outsb
xor
clc
test
into
jo
imul
dec
fs
sub
popf
lock
rcrl
je
jb
add
add
xchg
jns
mov
rclb
lods
lods
cmp
inc
sarl
fstps
mov
jp
pop
call
das
xor
add
inc
rcr
imul
test
nop
sub
lds
cmpsb
mov
add
notb
insl
mov
xor
mov
and
out
clc
pop
pushf
into
addr16
sbb
sub
lcall
mov
ds
or
fwait
mov
push
sub
popf
out
aad
jge
cmp
push
inc
test
push
add
das
cmp
push
mov
pop
or
icebp
aam
and
add
mov
or
pop
daa
fbld
push
sub
jmp
in
adc
test
mov
leave
mov
test
repnz
xor
test
repnz
out
loope
xlat
das
mov
out
mov
nop
sub
shrl
cmp
pop
mov
mov
jecxz
xorb
adc
daa
std
scas
mov
mov
mov
imul
out
push
les
mov
addr16
jge
inc
xorl
lret
sbb
adc
cld
pop
rcll
cltd
popa
imull
test
cli
mov
mov
idivb
insb
mov
inc
out
pop
imulb
mov
xchg
xchg
sub
jecxz
insb
or
lock
jae
jae
jge
mov
test
mov
pop
push
cmp
out
ss
dec
or
adc
divb
push
add
sub
bound
ret
loopne
mov
movsl
nop
scas
out
shl
jp
out
je
pop
lcall
ds
movsb
roll
test
xor
push
dec
and
and
mov
iret
in
enter
insl
fs
cmp
sub
and
adc
bound
jmp
mov
stos
shrl
mov
mov
push
lcall
fcmovbe
mov
js
jl
sub
cmpl
jecxz
inc
and
mov
in
xchg
dec
xor
adc
ja
rclb
jne
out
pop
push
inc
lcall
jl
or
test
dec
ror
cs
ret
sbb
jns
mov
fisttpll
add
xchg
aaa
push
test
imul
adc
inc
out
mov
cmp
inc
inc
push
mov
ja
mov
inc
xchg
notl
and
popa
je
and
push
xchg
fsubs
xchg
in
cs
mov
push
sbb
int3
xlat
orl
mov
push
shlb
data16
pop
push
mov
into
push
fwait
mov
adc
pop
push
add
xor
int
or
push
jb
and
and
bnd
test
int
xor
jmp
sbb
dec
mov
cmp
ret
cmp
inc
out
cmpsl
add
cmp
ret
pop
xorb
out
add
add
push
adc
xchg
mov
cli
arpl
lods
das
daa
fists
xlat
mov
xchg
pop
sub
adc
xchg
rcrl
imul
iret
xchg
ss
loope
pop
stos
fbstp
xorl
stos
shll
inc
outsb
jmp
cli
mov
mov
or
xchg
arpl
out
outsl
cmp
hlt
xchg
and
sbb
ds
add
push
test
std
jecxz
dec
sub
pop
add
in
arpl
sbb
pop
inc
push
out
cmp
pusha
test
imul
and
or
adc
sub
dec
pop
inc
fs
push
iret
sbb
fs
dec
and
fldenv
push
push
mov
mov
ss
add
or
push
fsubl
mulb
aam
lea
jl
out
sub
pop
xchg
inc
pop
mov
push
jno
push
or
repz
jns
call
sbb
lea
or
insb
idivl
nop
shrb
jl
and
push
pop
adc
popf
cmp
shl
mov
mov
stos
or
or
mov
imul
adc
adc
dec
movd
sti
xchg
in
lahf
sub
mov
xchg
andl
aaa
pop
movsl
das
lods
sahf
aaa
bound
and
add
pop
fsts
mov
inc
popa
dec
cmp
bound
mov
test
lret
popf
push
aad
mov
dec
mov
push
dec
mov
inc
lods
xchg
out
mov
arpl
outsl
xor
and
notl
sbb
outsl
out
xor
push
incb
and
div
lahf
movl
cmp
ret
ret
sbb
adc
adc
jge
je
icebp
sti
call
mov
mov
mov
push
pop
aam
repz
popf
push
or
nop
mov
fcmovnb
pop
mov
adc
xor
loopne
inc
rcr
repnz
push
and
repnz
inc
mov
pop
mov
les
jecxz
cld
push
aam
jg
std
mov
lds
outsb
ret
and
sub
test
jl
jo
lods
adc
out
lods
out
cmp
inc
mov
shld
mov
loope
mov
push
mov
and
lret
leave
xchg
mov
mov
mov
sub
lret
mov
mov
call
xor
cmp
inc
gs
sarl
imul
xchg
nop
sub
and
in
xchg
mov
jno
mov
ffree
sbb
jge
mov
gs
push
aaa
cmp
jne
lea
das
cmpsb
in
add
movd
ret
pop
mov
das
hlt
ja
add
cwtl
jl
push
adc
jmp
hlt
fstpt
popf
sub
and
jl
imul
ja
dec
dec
dec
xchg
push
jb
mov
enter
mov
ja
out
or
hlt
aaa
in
ds
movsl
add
mov
push
sbb
or
xchg
jae
xor
je
or
addr16
shlb
out
cld
inc
push
leave
out
or
xor
and
pushf
fsubl
push
cmpsl
lock
pop
imul
into
sbb
in
rorb
sarl
pop
stos
inc
sbb
lcall
cmp
inc
loop
cmpsb
movups
fsubrp
pop
and
popa
insb
inc
ljmp
int
out
inc
test
ficompl
pusha
dec
mov
mov
mov
popa
mov
add
cmpsb
imul
pop
cmp
nop
pop
cmp
mov
lret
cmpb
hlt
repz
rorb
xor
sub
cwtl
sub
mov
lods
loopne
add
xor
push
and
mov
mov
xchg
ljmp
insb
add
inc
ja
je
sarl
push
lcall
sub
adcl
push
mov
push
stos
stos
add
pop
enter
fisubrs
xor
js
aaa
cltd
push
lahf
dec
movsl
mov
push
sub
jnp
popf
adc
sub
mov
loope
cmp
jns
jle
cmc
enter
pop
fwait
jmp
cmp
add
insb
in
cmpsb
cmp
hlt
faddl
push
cwtl
jl
pcmpeqb
or
out
jg
jl
jmp
pop
jae
into
or
pushf
jge
mov
enter
push
repz
ljmp
arpl
sub
ja
pop
xor
adc
adc
or
lods
and
mov
into
je
adc
mov
icebp
sbb
mov
fistl
jno
aam
push
les
push
jg
sti
lret
fcmovne
outsl
shll
adc
mov
dec
cltd
jne
and
aam
adc
sti
lret
xlat
inc
adc
push
test
paddq
sbb
xchg
iret
mov
icebp
jne
pushf
lods
mov
repz
xchg
insb
enter
jge
bound
jne
jp
popa
mov
xor
mov
iret
xchg
jbe
inc
int
sub
clc
mov
pop
mov
push
loope
xchg
push
pusha
sub
pop
mov
scas
js
dec
jmp
divl
mov
lret
or
xor
fwait
mov
movsb
pusha
or
pop
sub
pop
mov
lock
sahf
cmp
inc
xchg
push
adc
xor
push
jno
mov
sbb
and
imul
outsb
loopne
popa
in
push
leave
or
stos
int
cmp
stos
imul
lahf
cmp
mov
push
out
mulb
sbb
mov
pop
test
mov
pop
jae
repnz
mov
sbb
aas
shlb
jle
dec
std
xchg
lods
std
ret
test
push
pop
cmp
or
std
mov
xchg
and
mov
fdivl
cmp
inc
inc
popf
iret
cmp
in
nop
or
jge
mov
hlt
fsubrp
dec
sub
out
cmp
push
add
out
mov
push
xor
leave
jne
xor
jno
pop
fnsave
add
xchg
push
pop
inc
add
ljmp
add
test
out
sbbb
fcompl
fldt
fadds
pop
mull
pop
push
push
push
xchg
adc
cmp
inc
lret
mov
test
pop
jno
in
das
insb
fidivs
mov
iret
and
pop
addr16
push
fnsave
dec
test
movsb
cmpl
call
in
imul
cmp
stc
stc
arpl
lock
push
repz
push
fld
cmc
adcl
jnp
pop
shll
sub
and
or
ficoms
je
xor
or
ss
notl
jp
insl
test
int
xor
js
xor
jnp
psrad
bound
out
adc
dec
test
outsb
ja
mov
mov
pop
into
jl
xor
sbb
leave
xchg
repz
xchg
mov
pop
dec
adc
mov
pop
dec
das
out
inc
test
lods
pushf
aaa
add
sub
fs
xor
outsb
addr16
fimuls
movsl
mov
pushf
mov
mov
mov
adcb
adc
xor
and
xchg
xchg
cmp
decb
nop
sahf
adc
or
sbb
scas
xor
fimuls
push
scas
mov
cmp
icebp
mov
dec
lock
push
or
fisttps
test
ret
rcr
sbb
lret
jge
lea
sub
jle
mov
push
pop
mov
dec
xchg
orl
jb
pop
inc
push
cld
xor
push
jmp
xchg
add
or
pop
ds
iret
sahf
cwtl
sbb
rcl
mov
pop
xchg
loopne
pop
aaa
or
lret
push
hlt
pop
xchg
push
int3
add
fs
mov
cwtl
mov
mov
rorb
add
das
repz
jnp
push
push
mov
insl
jmp
and
jle
and
add
out
cwtl
sbb
xor
cmp
mov
dec
mov
jb
pop
cli
testb
mov
cmp
and
jns
seta
add
lea
pusha
jge
loope
mov
ss
and
pop
or
jmp
in
or
inc
sub
cs
ss
push
push
jmp
fcomi
stos
arpl
int
mov
mov
jo
cwtl
icebp
mov
pop
pop
testb
negb
mov
incl
lcall
aad
and
clc
dec
stos
loopne
es
jle
je
scas
sub
add
int
mov
iret
in
pusha
xchg
push
adc
adc
jo
and
stos
lret
in
jns
mov
sbb
dec
test
stc
adcl
es
cmp
dec
call
jl
jmp
cli
lret
mov
mov
mov
pop
jmp
add
ret
aad
icebp
in
roll
ljmp
iret
inc
add
mov
pop
sub
inc
scas
dec
pop
xor
push
out
mov
jg
gs
lcall
jle
and
cmp
jno
inc
test
pop
sbb
fidivl
mov
lret
cld
inc
pop
pop
mov
push
sarl
jo
imul
or
xchg
jb
adc
inc
das
mov
push
repz
and
pop
inc
icebp
sub
das
filds
out
imul
test
mov
or
mov
add
inc
xchg
ja
fsubl
jl
dec
push
sti
xor
xchg
fisubl
fistpll
sbb
jmp
xor
enter
mov
int3
xchg
sbb
ljmp
pop
iret
mov
cmp
pop
inc
and
cld
popf
mov
int
roll
in
pop
inc
in
iret
aad
lret
mov
cmp
rcr
push
nop
mov
ja
lods
inc
hlt
les
popa
lods
lock
je
ficoml
cmp
cmc
sub
shll
or
cltd
icebp
cmp
add
or
dec
inc
add
addr16
sbb
dec
outsb
inc
sbb
mov
mov
inc
pop
leave
out
xlat
lds
jae
jo
adc
into
cmpl
fs
scas
inc
push
and
adc
leave
or
test
clc
lcall
xchg
dec
rolb
jno
cld
insb
sub
inc
dec
sbb
jne
ss
add
loope
movsl
jno
repnz
jg
insl
mov
mulb
inc
scas
call
insb
imul
xchg
xor
cmc
dec
movsb
cmpsl
out
test
lock
sub
mov
dec
je
and
jns
or
enter
sbb
xlat
imul
mov
jns
push
cwtl
pop
fstps
push
adc
push
lock
push
jo
push
and
push
adc
repz
out
ja
pop
push
mov
movsl
mov
fmull
xor
xor
fisubs
addr16
xor
sub
pop
mov
sahf
bound
loop
jo
mov
popf
dec
jmp
adc
cmp
stc
mov
xor
cltd
mov
je
outsl
cmp
mov
mov
push
add
mov
pusha
cltd
addb
mov
cli
mov
mov
test
jo
push
sarb
out
shrb
cli
sub
cld
mov
mov
testb
test
pop
ret
insb
mov
sub
dec
out
xor
push
insb
jbe
shll
dec
test
out
cmpsb
xchg
in
sub
xchg
jnp
in
or
jl
sub
fmuls
push
push
jmp
xchg
stos
push
arpl
mov
pop
jg
pop
test
mov
sub
xchg
not
shl
aas
xor
add
aas
jno
xor
call
in
insl
pop
jns
push
mov
imul
js
add
mov
or
test
fsubp
cmp
push
xchg
mov
les
and
outsl
cmp
std
lret
push
sub
xchg
cmpsb
mov
ss
jecxz
subl
subb
push
je
inc
inc
imul
mov
outsb
xchg
sbb
inc
setb
fsubr
mov
hlt
push
sbb
cmp
push
sahf
inc
movsl
pop
jb
jne
mov
jle
sub
add
out
xchg
clc
sahf
sqrtps
rol
pop
mov
sub
jnp
sbb
sbb
push
fidivs
arpl
add
loopne
cli
add
mov
sbb
or
aam
jb
pop
mov
fimull
pop
mov
mov
sbb
adc
jne
add
fs
mov
add
mov
xchg
or
and
mov
sbb
jp
mov
outsl
out
scas
pushf
jb
inc
add
cli
movl
ficomps
data16
lock
ljmp
jmp
and
data16
das
sarb
addr16
fldcw
mov
mov
gs
ficoml
xchg
and
dec
shll
mov
les
incb
jmp
mov
mov
mov
push
jmp
jbe
inc
lock
or
and
mov
daa
fdivp
push
inc
arpl
push
sub
aam
adc
xchg
lods
std
sahf
lcall
and
xchg
sbb
cmp
mov
push
cmp
xor
push
lret
pop
or
sbb
cmp
add
dec
mov
out
mov
push
fwait
adc
xchg
lcall
xor
fwait
loop
mov
loop
iret
test
repnz
out
jg
fsubs
add
bound
sub
dec
sub
arpl
in
in
addb
popf
fidivs
mov
aam
int3
dec
mov
mov
ret
in
popf
je
push
es
cwtl
test
shrb
lds
clc
and
mov
outsb
push
sbb
out
or
cltd
sub
je
cs
inc
out
inc
dec
fs
mov
xchg
add
mov
push
movsb
mov
sbb
aam
mov
mov
in
stos
pop
repnz
and
mov
stos
and
adc
pop
xchg
mov
int3
push
mov
aas
divps
jecxz
cmpsb
sub
sbb
adc
aaa
popa
cmc
push
psrad
call
test
call
push
mov
ret
sbb
xchg
or
dec
rolb
jmp
sub
mov
mov
mov
lea
xchg
js
ss
dec
fsubr
jge
cmpb
in
stos
dec
dec
stc
add
sbb
xor
sbb
shlb
lahf
push
ljmp
sub
mov
cmp
sub
sbb
cmp
and
sub
jle
imul
and
push
cmc
lock
push
cmp
dec
jno
arpl
inc
rcr
add
inc
mov
daa
stos
dec
repnz
mov
cli
lahf
call
mov
pop
test
sub
mov
iret
cmpsb
lock
and
and
jle
lcall
add
jmp
mov
add
stos
popa
or
call
stos
es
rorb
repz
sub
test
int
mov
cmpsl
es
lods
cmpsl
bnd
cmp
jns
aaa
mov
xchg
out
push
leave
popa
sahf
jo
stos
lcall
addl
dec
fndisi(8087
jecxz
ds
ficomps
mov
mov
inc
xchg
int3
aas
cmp
sub
push
sahf
push
push
push
sti
fldenv
jmp
jne
inc
xor
inc
mov
popa
xor
enter
xor
cmp
xchg
test
int
adc
lret
js
sahf
shrl
push
add
add
das
adc
dec
mov
jmp
xchg
scas
cmp
test
push
push
clc
arpl
push
popa
adc
adc
adc
lds
mov
lock
and
ret
or
pop
push
sub
cmp
inc
mov
dec
fimuls
add
out
sbb
xchg
xchg
out
stc
pushf
pop
mov
nop
imul
xor
dec
inc
pop
es
add
pop
dec
popa
lock
insb
jge
lock
add
dec
xchg
or
shrb
popa
cmp
and
jle
fdivp
xchg
cmp
or
daa
mov
fimull
loope
lcall
mov
xchg
xchg
test
rol
call
adc
add
mov
mov
xor
push
adc
or
or
sub
jecxz
movsb
std
and
or
mov
testl
dec
es
lds
jmp
jb
iret
add
ja,pn
mov
adc
pop
and
fcom
jns
jnp
inc
adc
mov
ret
lret
andl
pop
lock
leave
pushf
movsb
jle
lods
pop
dec
jp
mov
add
fsubrs
lret
cmp
push
add
sarb
jmp
das
cli
cltd
rcrb
add
pop
push
neg
sahf
mov
sub
xchg
lahf
test
inc
cmpsb
lret
testl
mov
sub
ret
imul
mov
nop
jp
pop
cwtl
lock
orb
ret
les
pop
jb
fsubrl
nop
add
adc
movsl
mov
push
sub
mov
mov
xor
mov
lods
add
mov
in
repnz
stc
and
movsb
adc
mov
orl
cmp
dec
pop
lea
push
add
jle
aam
sub
enter
cmp
xor
arpl
pop
push
aam
sbb
pop
les
xchg
push
mov
xchg
outsl
dec
sbb
push
aaa
test
and
nop
in
mov
pop
xor
sbb
ja
sbb
xlat
hlt
add
ja
pop
imul
inc
jb
push
loop
pop
mov
xor
inc
inc
mov
movsl
mov
popf
xchg
push
xor
imul
int3
js
push
insb
mov
pop
mov
sbb
sbb
dec
push
push
mov
les
mov
or
stc
adc
mov
xchg
aam
lock
xchg
repnz
sbb
mov
inc
lahf
mov
call
xchg
stos
icebp
xchg
jmp
popf
inc
aaa
and
inc
nop
aaa
push
repnz
sub
sub
aas
jecxz
call
push
jg
mov
mov
adc
pop
jl
lea
push
pop
and
mov
lock
bound
pop
add
inc
mov
lods
call
push
mov
add
ret
into
mov
or
push
imul
pop
pop
js
xchg
xor
bsf
mov
sbb
lods
dec
pop
int
cmpsl
xor
adc
jge
xlat
lcall
adcl
mov
or
sub
inc
or
dec
test
pop
movsb
shrb
pop
insl
mov
push
or
sub
aam
mov
xchg
dec
sbb
in
mov
popf
jecxz
pop
xorl
inc
mov
clc
sbb
mov
jno
les
push
jno
lahf
rcrl
out
shll
lea
lds
out
fildll
cmpb
dec
add
loope
subl
gs
imul
mov
loop
pop
sbb
rol
jnp
mov
cmp
rorb
inc
adc
push
scas
mov
jno
clc
cmpsl
jecxz
shll
sub
imul
add
jo
adc
add
mov
rcrb
xor
push
das
and
arpl
les
ljmp
out
mov
adc
jae
push
inc
pop
or
mov
xchg
sti
cmp
sbb
sbb
lcall
jnp
fnclex
inc
pop
xchg
andb
in
cltd
push
in
add
pop
or
jecxz
out
push
test
cmp
call
dec
hlt
sub
fdivrp
jmp
mov
sbb
int3
inc
and
cmp
lret
xchg
fnstcw
dec
pop
push
stc
jecxz
push
out
bound
nop
js
andl
push
jbe
fsubrl
movsb
push
stos
pushf
and
dec
mov
ret
mov
cld
push
cmpsb
repz
and
mov
inc
adc
scas
jl
cltd
call
lods
popf
out
std
xchg
dec
inc
jecxz
inc
lcall
xor
daa
in
add
icebp
xchg
adc
jmp
cmpsb
or
movsb
lods
rcr
out
pop
cmp
xchg
jae
xor
repz
repnz
pop
sub
scas
mov
ret
jl
pop
fcomp
cmpsb
add
inc
push
cs
xor
in
lods
je
aaa
jae
jmp
roll
sbb
or
sahf
cmp
jo
daa
mov
dec
out
flds
sbb
hlt
jg
mov
fldcw
xchg
jmp
inc
outsl
nop
jecxz
stos
xor
out
inc
xchg
sbb
and
cmc
pop
add
xor
pop
sbb
lea
mov
outsl
mov
or
int3
cmp
decl
cmp
push
rolb
lea
xchg
push
cmp
or
push
int3
icebp
xlat
jmp
std
negb
dec
push
fs
fdivrl
cs
pop
xor
xchg
xchg
lock
xchg
adcl
andl
lds
pop
loopne
or
xlat
dec
cmpsb
add
enter
outsl
mov
jp
pop
rorl
fsubr
mov
jl
xchg
add
xor
cmp
lods
movsb
push
daa
cs
mov
push
mov
jo
decl
lock
mov
fmuls
insl
in
xchg
call
mov
aaa
popa
es
fsts
idivb
pop
cmp
jl
adcl
outsb
jmp
cmp
dec
bound
shlb
and
iret
fwait
jae
pop
ret
aaa
dec
je
sub
jl
push
rcl
filds
mov
and
imul
jg
sbb
sahf
mov
sbb
push
pop
adc
in
hlt
fldcw
push
pusha
mov
out
icebp
inc
pop
adcl
mov
arpl
mov
iret
cmp
inc
jmp
ja
int3
or
push
orb
mov
push
ss
hlt
push
testb
push
sahf
popa
or
rcr
sbb
sub
jae
and
addb
testl
mov
adc
push
movsl
jle
out
leave
mov
adc
dec
or
call
mov
mov
gs
or
jecxz
loopne
roll
sbb
sbb
mov
insb
lcall
lcall
outsb
jecxz
push
enter
sub
insb
xor
imul
xor
pop
adc
aad
add
xor
and
add
mov
cli
jecxz
xchg
out
stos
and
cmc
inc
sbb
mov
iret
and
out
insl
shl
repnz
es
mov
sub
push
push
adc
or
loopne
fmull
push
repnz
cmpsb
in
loope
and
rcrl
ds
sbb
mov
ljmp
push
cs
out
and
push
enter
jo
add
adc
sarl
pop
cmc
add
dec
dec
mov
xor
pop
or
enter
in
fiadds
sub
and
jae
bswap
cmp
pusha
aam
in
push
cmc
popa
or
or
xchg
enter
fstps
sahf
ret
add
cmp
scas
in
aas
shr
and
and
popa
mov
pusha
xchg
aam
dec
sbb
xchg
sbb
cmpl
push
xor
mov
aaa
xlat
xchg
and
sub
jno
sub
jmp
jne,pn
mov
jecxz
hlt
iret
jl
jg
jb
or
mov
xor
jl
cmc
scas
mov
imul
pushl
negl
jge
add
lahf
dec
mov
xorb
push
in
jmp
push
inc
add
subl
xor
or
sub
cwtl
or
jne
pushf
sub
fisubrs
sub
and
ret
dec
pop
xchg
sub
jg
mov
sbb
pop
pop
mov
test
pop
outsb
fs
shrb
or
dec
je
fxch
ficoms
adc
jns
mov
fwait
les
push
mov
mov
cltd
movsb
iret
mov
inc
ja
add
orb
test
lea
sbb
jno
pop
fwait
in
sub
jl
gs
lret
or
fsubs
fwait
inc
inc
xor
enter
xchg
std
or
xchg
mov
daa
cs
fstpl
sbb
gs
mov
and
mov
mov
jne
addl
jmp
movsb
or
aad
pop
push
scas
scas
sbb
adc
cmc
mov
es
sti
jne
jecxz
push
xorl
pop
cmc
scas
mov
pop
or
sbb
mov
hlt
push
cmc
mov
push
pop
jp
adc
sub
push
addr16
pop
dec
test
mov
xor
push
dec
add
xchg
shl
mov
aad
sbb
aas
adc
inc
inc
out
jmp
mov
jno
mov
jmp
ss
jnp
iret
loope
or
fs
push
add
fstpt
add
stos
sti
and
les
dec
add
jnp
sbb
jno
push
nop
cmc
xor
adc
mov
movsb
xor
ja
test
xor
pushf
xor
aaa
xchg
popa
cmp
add
add
push
out
repnz
dec
ret
sub
into
xor
lahf
add
loopne
les
cmp
int3
mov
fmuls
cmp
xchg
pop
jl
fdiv
xor
mov
jnp
data16
clc
outsb
outsb
push
les
int3
push
fnstenv
and
std
sub
mov
jne
xchg
mov
pop
inc
push
or
jl
cmp
pop
push
xor
dec
mov
jne
adc
js
cmp
mov
mov
dec
imul
outsl
inc
enter
lock
cmp
ds
lock
cli
dec
push
push
adc
xchg
adc
sub
pop
jo
loopne
int3
adc
cmpsb
dec
mov
jbe
insl
test
out
loopne
pop
inc
and
out
mov
cmp
cmp
dec
jp
inc
mov
hlt
add
add
dec
jns
fdiv
jmp
lret
out
in
mull
aas
sbb
xor
scas
or
add
loop
lea
dec
out
sbb
sbb
aad
fiadds
repnz
sbb
movb
js
mov
xchg
cmc
test
es
data16
xchg
iret
dec
lret
imul
gs
inc
mov
jb
fidivl
test
lret
sbb
add
aam
ja
imul
mov
inc
xchg
mov
xchg
lock
sbb
sarl
sbb
sub
and
aaa
outsl
dec
pop
mov
mov
ss
jb
out
fucomp
mov
sbb
cmp
jno
or
inc
cli
loopne
or
stc
pop
pop
inc
incb
test
mov
stos
lret
and
ljmp
in
xor
fwait
pop
dec
sbb
fdecstp
nop
sbb
xor
adc
xor
xchg
sti
push
nop
stc
push
aaa
ds
mov
aad
pop
lea
test
xchg
cmp
pop
into
aam
xchg
or
xchg
sbb
test
loopne
clc
pusha
cs
addr16
pop
mov
push
dec
cmp
js
xchg
xchg
subl
out
pop
pop
in
in
jg
or
push
inc
test
sub
mov
mov
mov
mov
fildll
xor
push
mov
dec
mov
lret
mov
or
in
lret
cmp
xchg
sbb
add
push
pop
and
jno
int
push
rcl
lea
and
inc
sub
orl
mov
movl
push
imul
ret
add
lcall
push
sub
shrl
sbb
xchg
pop
fwait
loopne
add
aam
jae
adc
jl
push
dec
ret
cwtl
setg
mov
mov
ret
jne
pop
or
mov
cmpsl
iret
push
xchg
gs
mov
ret
sub
jno
icebp
scas
sub
jb
adc
sub
ret
je
jbe
push
dec
push
daa
mov
dec
mov
xchg
jg
mov
int3
jle
dec
mov
gs
mov
add
insb
xchg
rcll
in
repnz
dec
and
mov
shl
shrb
out
xchg
pop
icebp
inc
test
pop
in
pop
ficomps
jg
rcrb
sub
or
xor
ss
emms
mov
lahf
push
mov
mov
fnstsw
shrb
fdiv
cmp
sbb
inc
jg
xor
inc
xchg
dec
mov
mov
cmp
xor
xor
shr
dec
scas
mov
mov
lds
xchg
sub
sub
or
mov
cmp
je
or
adc
int3
and
add
push
fcmovne
adc
clc
pop
pop
and
jmp
insl
in
test
pop
xor
ljmp
out
or
lcall
mov
stos
rcr
lahf
movsb
pop
xor
xlat
ljmp
add
sbb
mov
call
mov
into
das
test
cltd
push
fxch
jb
adc
push
int
pop
jg
pop
lcall
and
add
movsb
subl
xorl
int3
and
fidivs
inc
push
cmpsb
cli
pop
push
mov
int3
jp
fdivs
cmp
or
adc
in
pop
mov
leave
sarl
inc
sub
cmp
lods
mov
aam
jmp
subl
clc
scas
push
pop
popa
test
aad
int
sbb
aad
repz
cs
imul
mov
dec
jns
ficoms
ret
push
push
sbb
insl
ret
popa
mov
mov
enter
adc
fwait
clc
cmc
lds
adc
icebp
push
call
popa
loope
push
jno
daa
push
out
mov
fistpl
cwtl
push
sub
push
test
jle
sub
pushf
in
xchg
and
pop
xor
xchg
cmp
test
fldcw
mov
mov
xchg
lret
loop
sbb
xchg
cmp
dec
lret
push
mov
or
loopne
out
xchg
cli
loope
push
inc
repnz
xchg
xor
sbb
cltd
adc
and
fldenv
pop
push
cmpsb
cmpsl
repz
mov
pop
sub
and
cmpsl
cmp
and
and
mov
loopne
mov
lahf
adc
lods
push
test
out
idivl
cmp
and
in
jle
aam
ret
in
hlt
jp
scas
mov
lock
inc
gs
xor
scas
adc
clc
mov
xor
xchg
popl
and
js
lock
jecxz
lods
es
lret
cltd
stos
rcrb
mov
xorb
push
aas
aaa
jno
aaa
movsb
in
out
sbb
xor
aas
je
jg
iret
shr
add
repz
add
das
mov
mov
lods
xchg
pop
xchg
daa
lahf
cs
es
sbbb
sbbb
orl
mov
pop
shl
pop
xor
inc
pop
sbb
mov
lcall
xchg
repnz
mov
mov
push
lods
dec
and
out
sub
shl
adc
pop
insb
mov
adc
int3
mov
clc
ljmp
mov
mov
sti
imul
shll
lahf
mov
xor
sbb
pop
jl
ljmp
or
out
inc
rcrl
dec
lret
in
mov
cvtpi2ps
push
sub
sti
inc
push
ljmp
pop
push
or
dec
mov
cltd
cmp
and
mov
les
pop
out
inc
ja
movsb
jae
hlt
sbb
dec
sub
xchg
and
pop
cmp
test
movsb
adc
movsl
and
push
fldt
outsb
in
shll
adc
fsubrl
stos
dec
rcll
xlat
xchg
hlt
xor
in
sub
popf
enter
pushf
cs
dec
mov
cld
lret
pop
addr16
ja
into
dec
into
jge
outsb
adc
jbe
ret
subl
mov
pop
dec
pop
test
adc
xor
movsl
push
mov
cmp
adc
or
daa
sbb
outsl
xchg
lret
shrl
movsb
lret
sbb
mov
cmp
lods
and
shrl
data16
scas
filds
mov
pop
add
jecxz
sbb
push
adc
sti
xchg
jmp
jmp
icebp
fsubp
loopne
mov
xchg
xchg
mov
mov
out
cmpsl
arpl
push
gs
and
dec
mov
out
es
adc
xor
xchg
notl
sbb
jnp
sub
dec
stos
jb
xor
sbb
dec
sub
pop
ja
call
test
sbb
es
inc
rorl
cmp
lret
inc
push
cmpsb
divps
push
jnp
stos
rcrb
jns
mov
cltd
in
popf
popf
int3
int3
iret
iret
lret
jnp
addr16
lock
daa
in
jp
sbb
aaa
sbb
mov
and
mov
data16
xor
jecxz
inc
out
out
or
out
stos
cmpsb
xor
push
or
add
add
xor
loope
test
xchg
add
xchg
pop
mov
jp
and
jne
jp
push
cmc
sti
hlt
inc
test
sbb
insl
adc
dec
popw
outsl
mov
hlt
xor
sbb
push
mov
xchg
adc
inc
div
jbe
jbe
push
ljmp
jnp
mov
ret
jg
stos
lret
sub
rcll
stos
in
jo
sub
push
and
adc
push
jae,pn
arpl
and
ds
cmp
fwait
or
das
fistl
pushf
add
mov
sub
dec
fstl
cmp
xchg
push
and
sbb
mov
in
inc
mov
jo
pop
and
lods
nop
mov
cltd
fsts
pop
pop
jb
sbb
pusha
sbb
inc
lods
dec
in
sbb
outsb
repnz
xchg
je
mov
outsl
outsb
xor
inc
shlb
daa
call
dec
and
insl
int3
mov
mov
xchg
add
mov
ds
jb
enter
aad
lock
sub
data16
outsl
subb
jbe
sub
inc
pop
mov
cli
inc
adc
and
in
sbb
loop
call
addr16
mov
push
sub
adc
mov
mov
in
sub
mov
mov
ljmp
inc
test
stc
xorl
je
push
ds
or
cld
dec
add
push
inc
push
in
adc
faddp
lret
adc
arpl
int3
mov
cmp
pop
pop
cmp
xor
rcrb
mov
ret
sub
and
ret
adcb
out
dec
out
lds
cmp
cmpsl
pusha
xchg
out
inc
scas
out
pop
int
fidivs
repz
sarb
add
xchg
sub
es
notl
or
inc
mov
fcmovnb
mov
xor
adc
cld
mov
push
fdivl
cmp
mov
xchg
mov
push
pushf
insb
mov
rorb
cli
notl
stos
sti
pusha
es
movsb
xchg
test
aas
iret
push
les
xchg
jne
pop
jno
test
iret
push
xor
mov
std
sbbb
fwait
xor
mov
and
or
outsl
stos
jnp
fld
test
and
add
mov
outsl
mov
nop
icebp
or
dec
loopne
aaa
scas
dec
mov
pop
inc
pop
mov
jne
pusha
pop
fdivrl
subb
loope
jb
imul
cmp
fildl
lock
jg
out
add
mov
add
hlt
rep
iret
mov
pop
add
sarb
fcoms
leave
cltd
insl
push
cmp
sbb
enter
imul
dec
iret
into
ljmp
popa
cmpsl
roll
add
test
push
lods
outsl
add
insl
cmp
dec
add
bound
sub
iret
outsw
adc
add
out
inc
inc
pop
push
pushf
ret
push
and
jae
mov
js
cmpsb
bound
shrb
enter
mov
imul
jb
jae
add
arpl
and
xchg
sbb
popa
cwtl
arpl
test
out
int
int
mov
dec
ljmp
cmpb
mull
lret
xchg
dec
pop
repnz
gs
cmpsb
push
jg
inc
sub
in
mov
stos
sahf
fildll
push
inc
mov
inc
mov
dec
out
sbb
gs
xchg
adc
js
push
xchg
test
lcall
xor
or
mov
jns
loopne
or
xor
inc
fists
dec
add
pop
lea
scas
jb
fimull
notl
jns
xor
cmp
push
outsl
sub
jns
mov
mov
xchg
loope
cmpsl
inc
lahf
aam
cmp
cltd
mov
loope
inc
out
adc
xor
sar
xor
add
nop
mov
push
jbe
push
test
sahf
imul
clts
sbb
inc
int
nop
pop
inc
add
mov
out
pop
pop
subl
mov
shl
leave
jmp
sahf
fistpl
enter
in
ret
movsl
stos
das
fdivs
popf
lods
lock
test
cmc
test
outsl
imul
insb
pusha
mov
push
and
push
mov
inc
mov
mov
pusha
and
or
ret
jmp
mov
push
push
cmp
outsl
ret
test
pop
pop
dec
sbb
mov
fistps
mov
stos
loop
movsl
push
ja
jno
cmp
xor
cmp
ss
out
mov
loopnew
fdiv
ds
xchg
aam
xchg
and
mov
es
or
or
and
imul
sbb
lods
movb
cmc
ds
xor
sub
and
data16
cmc
in
stos
popf
bound
test
dec
shl
mov
insb
mov
add
fstpt
push
repnz
push
and
popf
mov
cltd
mov
adc
inc
push
movsl
dec
fcoml
fistpll
lcall
sub
outsb
je
jno
xor
mov
test
sub
std
icebp
sbb
cmpsb
mov
dec
das
cmpsl
pop
sub
cmpsb
inc
mov
insb
sarl
sub
imul
pusha
dec
xchg
lcall
xchg
mov
sbb
inc
sbb
push
mov
inc
pop
mov
pop
add
cmpsb
js
test
push
and
int
aas
cltd
or
xor
add
cmp
add
cmovns
and
fsubrs
fwait
mov
cmp
cmp
aam
xorb
or
int
and
inc
mov
mov
mov
clc
cmp
pop
jo
dec
jp
jo
pop
cmp
push
jp
xchg
mov
add
cmp
testb
mov
pop
ds
ds
je
xchg
add
mov
push
jns
sub
ss
and
push
or
lea
jl
cmp
repz
icebp
xchg
mov
add
mov
dec
ja
jno
xchg
push
or
mov
fimull
or
movb
fstp
scas
push
pop
xchg
dec
pop
cli
sbb
test
add
inc
add
cmpsb
xchg
out
icebp
adc
cmpsl
push
imul
test
dec
xchg
adc
out
in
sub
ja
and
and
fidivrl
jb
daa
push
jecxz
aaa
cmp
cmp
leave
mov
insb
rcrl
ret
sub
mov
sub
fisttpll
fisttps
xorb
cltd
and
sub
pop
gs
rcl
push
lds
push
xlat
adc
fwait
mov
mov
mov
pop
push
add
mov
add
jne
jge
sbb
push
lods
fisubl
pushf
aaa
imul
add
xchg
mov
imul
scas
clc
or
mov
push
sahf
movsb
mov
stos
push
loopne
cwtl
sub
cmp
lock
sub
push
mov
icebp
adc
clc
lea
repz
iret
lret
push
sbb
mov
fsubl
or
push
adc
inc
inc
shll
mov
pop
jns
daa
test
loopne
dec
pop
xchg
pop
cs
out
adc
cmp
popf
ja
dec
and
outsb
popa
pop
lds
mov
ret
push
sub
movsb
add
mov
es
xor
pop
scas
xchg
jns
jns
xchg
in
xchg
adc
into
xlat
push
gs
mov
mov
xchg
inc
lahf
mov
adc
lret
movl
out
and
inc
je
xor
pop
cmpsb
scas
and
das
jp
shrl
mov
jns
sub
mov
sub
into
inc
pop
inc
add
pop
ror
dec
mov
cmp
bound
loop
imul
dec
mov
inc
sbb
out
pushf
leave
pop
movsb
in
addr16
or
out
in
jl
fisubrs
inc
sub
xor
mov
out
and
xor
std
xlat
and
out
or
jmp
mov
out
xadd
cmp
call
ficoml
add
jge
jns
clc
inc
sarl
test
fwait
and
push
add
mov
dec
xchg
fwait
dec
aas
jnp
arpl
add
in
fisubs
movl
push
cs
pop
dec
pop
dec
mov
std
add
addb
jb
dec
sbb
movsb
or
cs
dec
inc
push
xchg
and
sahf
mov
ja
mov
pop
push
outsl
test
mov
or
pop
adc
or
jmp
sub
push
decl
inc
sub
stc
bound
inc
jg
mov
jb
loop
lods
shrb
imul
mov
sub
sti
mov
pop
addr16
test
push
xchg
in
iret
addr16
sbb
popf
test
pop
mov
push
ja
ficoms
stc
es
inc
mov
cltd
sub
fcomi
mov
loopne
mov
inc
mov
rorb
mov
outsb
xor
add
popa
push
fs
mov
inc
fldcw
inc
loopne
pop
fyl2x
xchg
xchg
es
mov
mov
add
insl
rep
add
xlat
adc
rcrb
xor
testl
loop
add
mov
sbb
aas
sbb
hlt
aaa
in
dec
loop
stc
mov
inc
cltd
pop
lods
icebp
pop
andl
mov
push
lock
movsl
cli
jb
add
xchg
jg
push
dec
cld
pop
jge,pt
cld
sbb
ja
cmpsb
inc
sub
insb
pop
mov
add
fldenv
out
dec
rorl
dec
inc
icebp
test
mov
iret
push
sti
imull
shrl
adc
fs
dec
xor
loopne
aad
xchg
and
fs
xor
mov
pop
push
mov
mov
vsubpd
pop
gs
or
add
cmpsb
mov
inc
jae
jle
leave
repz
cmp
test
orb
add
cmp
mov
lods
xor
cmc
jno
xor
add
pushf
add
or
leave
and
and
sti
stos
cli
push
mov
dec
push
ss
cmpsb
mov
mov
repnz
push
or
push
clc
jne
loope
adc
cmp
out
and
or
push
nop
adc
add
push
xor
aaa
xlat
ds
add
pop
enter
adc
je,pt
add
mov
vpcmpgtb
sbb
pusha
jg
ret
jecxz
je
sti
mov
dec
adcl
sub
movsl
mov
mov
mov
in
test
ss
into
sbb
popa
mov
repnz
in
xchg
and
int
stos
movl
cmp
mov
cmp
jb
in
sbb
test
shlb
aaa
icebp
pop
into
scas
jmp
adc
rcl
insl
stos
adc
pop
cmp
sbb
cmp
mov
int3
or
lds
and
lds
pushf
or
cs
dec
dec
jp
std
push
inc
gs
pop
adc
sbb
sahf
lret
push
jo
sub
xchg
mov
scas
pop
lea
mov
stos
lahf
andl
notl
pushf
or
pop
lahf
xor
mov
fst
sub
mov
ss
cmp
pop
mov
xor
inc
adc
imul
jnp
scas
loope,pn
pushf
dec
push
cmp
push
sbb
jl
fs
dec
fildl
cltd
mov
mov
cmp
dec
sub
aaa
cmp
dec
and
pop
cmpsl
iret
xchg
and
lods
jg
stos
sahf
add
fsub
cmp
add
inc
lret
jmp
divb
xor
adc
sub
pop
daa
or
mov
jne
shlb
scas
inc
jno
cld
sbb
mov
xchg
xor
and
sahf
sbb
fstps
movsb
mov
add
fwait
inc
adc
shlb
das
out
xchg
mov
popf
add
fs
xor
cld
imul
aaa
pop
fsub
and
and
cmp
lods
gs
movsb
add
hlt
cmpsl
sub
and
stos
imul
stos
ja
ljmp
xor
fadds
adc
test
xor
adc
insl
ret
pop
inc
add
inc
mov
sub
fidivs
ret
xor
iret
lods
and
sbb
pushf
hlt
dec
add
rcll
sbb
or
xor
cmpsl
mov
daa
repnz
dec
inc
js
shl
push
sbb
sti
es
pop
cmovle
push
cwtl
jl
popf
cmp
shr
xor
cld
shll
outsl
xchg
pop
loopne
pusha
dec
dec
cmp
lret
mov
dec
mov
add
xchg
fcomp
jp
sbb
pop
in
sub
in
mov
ljmp
xor
jmp
ret
vsubss
ficoms
lret
or
add
sahf
lds
adcl
inc
and
pop
mov
jb
mov
or
lds
cli
sbb
mov
dec
fwait
jmp
int
sbb
mov
mov
sub
jp
adc
idivl
mov
dec
lock
cltd
cli
les
inc
dec
nop
push
das
add
cmp
push
in
lods
xor
daa
lret
and
add
or
roll
nop
repz
add
imul
pop
outsl
pop
dec
inc
xorb
decl
lret
sub
xor
inc
lods
inc
push
add
lcall
mov
mov
movsl
lahf
xor
mov
sub
dec
data16
push
adc
pop
pop
inc
push
pop
xor
fwait
shrl
mov
add
dec
mov
pushl
shll
fisubs
mov
dec
popa
jns
aad
sub
inc
div
rolb
imul
sbb
mov
popf
adc
and
push
dec
fmulp
xchg
in
xor
push
testb
ljmp
and
ds
outsl
test
pop
loope
sub
pop
sahf
aad
add
xchg
shlb
test
xchg
mov
addl
jl
cld
inc
mov
sub
xor
test
pop
jnp
dec
clc
fnstsw
test
dec
or
movsb
movl
outsb
ret
and
daa
mov
dec
inc
icebp
jl
push
jns
into
xchg
push
jns
jle
jge
sbb
cwtl
leave
add
push
pop
sub
js
inc
and
jmp
mov
pop
xor
lret
push
sbb
ret
fistpl
jmp
rcll
cmp
test
cmp
gs
lret
stos
cmp
mov
inc
xchg
or
lods
mov
xchg
aaa
sub
repnz
aaa
inc
in
out
es
xchg
mov
lods
imul
scas
inc
push
enter
sub
mov
nop
sub
inc
lods
js
adc
fistps
scas
movsl
mov
scas
push
notb
cmpsl
pusha
stos
ds
imul
add
jb
jle
fwait
push
sub
cmp
shll
xchg
fwait
popf
ja
jae
push
adc
cmp
mov
push
xchg
fcomip
sub
jl
xlat
sub
cmp
fisubrl
movsb
pop
sbb
adc
mov
dec
pop
ret
xor
insb
mov
push
dec
jmp
push
mov
out
shl
cltd
pop
insl
mov
jge
sbb
cmp
in
fucomi
xor
push
mov
xchg
xor
lods
rorl
mov
fs
stos
mov
mov
cmc
out
pop
stos
and
out
sbb
call
push
popa
pop
push
jno
ret
addl
sub
ja
inc
pusha
mov
stc
inc
mov
les
clc
or
pop
pushf
ljmp
daa
add
push
xchg
sub
pop
xchg
inc
icebp
pop
call
xlat
jl
dec
inc
shr
and
repz
dec
cltd
out
adc
iret
stc
cmp
sbb
loop
insl
inc
rclb
lea
aam
cs
shll
mov
movsb
stos
popa
add
jecxz
int
std
addr16
call
rol
sahf
push
fimuls
jp
or
and
loop
xlat
or
int3
mov
out
push
cmp
shl
inc
mov
jb
adc
dec
and
leave
xchg
mov
notb
xchg
adc
cs
xchg
pop
fidivrl
jmp
icebp
out
test
rcrl
xor
ficompl
adc
sub
movsb
xchg
mov
xchg
scas
in
push
push
dec
adc
int3
out
imul
stc
lock
fsubs
or
lret
xabort
stos
cwtl
rol
dec
xchg
shll
out
sbb
and
lea
ret
imul
sbbb
into
inc
and
roll
jp
rolb
js
adc
adc
sarb
nop
jae
xchg
lea
fbstp
cmp
in
pop
mov
sarl
pusha
lahf
pop
pop
ret
cmpsb
and
into
daa
imul
fmul
into
mov
ficompl
in
or
sub
mov
add
cmpsb
inc
movsl
add
mov
stc
dec
lods
mov
popf
cmp
dec
xor
int3
stos
ljmp
xchg
lcallw
stos
mov
or
lret
sbb
repnz
pop
cmp
and
xchg
sbb
pop
fsub
adc
fcmovnu
inc
mov
push
xor
xlat
jmp
jp
cmp
movsl
xchg
mov
push
mov
nop
js
loopne
push
cmpsb
jns
mov
mov
xchg
scas
out
fsub
push
push
das
pop
sbb
enter
dec
aas
mov
cmc
xchg
test
shrb
cli
loopne
jmp
movsl
xlat
push
out
xor
xrelease
inc
push
pop
cli
jns,pn
pop
lret
add
out
xchg
sub
inc
jnp
cwtl
push
loop
push
out
ds
mov
push
ljmp
xchg
or
xor
aas
movsl
jb
dec
xchg
inc
aam
push
scas
fstps
add
inc
rclb
in
fcomi
loope
imul
mov
in
xchg
out
aas
adc
ljmp
cli
ja
mov
dec
inc
mov
dec
inc
lods
inc
xchg
aaa
ret
dec
rol
sbb
xor
or
outsb
xor
push
faddp
ss
lahf
lret
je
outsl
mov
ss
jnp
xor
nop
movsb
insl
popf
sub
rcrl
aas
jne
in
stos
cmp
imul
and
fdivr
push
cmp
push
lods
aad
call
add
jge
mov
xchg
or
cwtl
push
fnstenv
aaa
lahf
pop
or
pop
dec
xchg
lret
pop
rcll
pop
sub
sbb
pop
out
and
mull
sbb
push
fs
repz
shl
pop
add
or
out
or
data16
xor
adcb
adc
repz
nopl
ret
xchg
cmpb
fwait
cmp
mov
fistpl
lret
or
loopne
shll
test
cmpl
pop
mov
jo
mov
xchg
or
inc
push
fcomps
scas
sbb
mov
pop
dec
jecxz
mov
imul
jns
and
imul
sti
sahf
push
stos
and
scas
xor
sub
jb
into
xchg
and
iret
cwtl
mov
jno
fnstenv
xchg
mov
ret
mov
jae
stc
into
jecxz
or
in
ret
cwtl
rcr
scas
arpl
jl
cmp
sub
push
loop
insl
flds
or
lcall
cmp
dec
pushf
sarl
fnstenv
push
dec
shrl
addb
std
add
mov
push
call
ret
xchg
jns
dec
fisubrs
aaa
inc
inc
ja
mov
inc
shlb
sarb
pop
and
mov
jae
in
pushf
mov
stos
loop
xchg
test
jne
das
mov
lcall
dec
push
lret
aam
insl
or
shll
cmp
push
sub
mov
jle
pusha
dec
clc
mov
cmp
jcxz
sub
outsl
inc
adc
xchg
mov
js
pop
cmpsl
arpl
jg
scas
and
das
jno
inc
inc
out
jmp
inc
and
mov
data16
data16
add
adc
out
outsl
pusha
outsl
add
add
dec
sbb
imul
lret
push
pop
mov
jae
pop
fwait
mov
hlt
mov
loope
adc
jbe
in
mov
mov
sahf
fistpll
jmp
jns
movsb
imul
std
mov
sub
jge
arpl
sbb
push
push
push
xchg
iret
loope
jbe
sbb
outsb
adc
out
loope
outsb
sahf
xor
mov
add
xor
dec
cmp
hlt
jns
xchg
sub
cmpsb
pop
aaa
cmp
ja
and
movsb
xor
popa
insl
xchg
stos
repz
mov
bound
and
push
test
push
xchg
xchg
in
bound
adc
rolb
orb
or
mov
repz
or
mov
arpl
xor
inc
repnz
repnz
cmp
pop
int3
loopne
and
ret
inc
xor
mov
jecxz
mov
scas
daa
cmp
fwait
arpl
mov
adc
or
insl
mov
aaa
adc
inc
fadd
mov
jmp
mov
mov
sub
pop
sub
fldl
adc
shl
jae
cwtl
xor
jl
outsl
sub
roll
sbb
in
xor
xor
inc
adc
das
insb
sbb
imul
inc
clc
add
inc
fcmovb
cltd
clc
sub
mov
mull
jecxz
int
rcrl
add
jmp
mov
jbe
push
mov
xchg
pop
and
jbe
icebp
jg
sub
and
js
leave
pop
stc
cld
data16
fs
insl
lret
andb
cmp
mov
leave
insl
icebp
mov
fistps
cmp
movsl
inc
push
mov
jno
loope
stos
lods
popa
inc
lcall
aas
cmc
out
cld
xor
mov
repnz
sub
test
iret
cmp
mov
jecxz
and
and
or
mov
rorl
mov
outsb
insl
gs
aad
push
inc
dec
int
nop
cmp
dec
lahf
ja
cli
fs
push
jb
test
and
cmpsl
cltd
ret
sahf
out
dec
outsb
adcl
pop
jae
in
xchg
xchg
xor
jp
add
lods
mov
pushw
or
mov
sub
sub
pop
fs
loop
cmp
pop
mov
les
cli
lea
ds
mov
mov
pop
fsubl
jnp
and
data16
mov
xchg
xchg
lock
rcrl
push
jns
adc
xchg
es
gs
insl
daa
mov
push
xchg
ss
scas
in
cld
adc
add
arpl
and
scas
dec
dec
add
ret
mov
cmpsb
mov
mov
stos
mov
adc
jle
mov
cmp
mov
mov
dec
test
loop
push
mov
leave
es
xchg
insl
dec
scas
fdivrs
in
loope
pushf
add
xchg
dec
fcom
ret
adc
jmp
pop
mov
mov
or
push
and
push
dec
test
test
xchg
and
add
pop
fs
add
push
pop
adc
adc
jl
cmpsb
jnp
mov
dec
loop
in
jno
push
inc
icebp
mov
lret
dec
jno
fstpt
pop
or
outsb
stc
xorl
shlb
push
xchg
mov
xchg
adc
subl
pop
cwtl
fwait
outsl
shl
xor
addr16
aaa
ret
in
add
sbb
push
push
adc
les
pop
push
sbb
int
lods
mov
mov
xlat
fwait
das
inc
lods
incb
push
aam
jae
push
shll
jns
jp
daa
sbb
cs
fcoml
lods
add
cmp
in
pop
imull
xor
dec
notl
out
push
pop
imul
sub
ret
enter
ret
jae
mov
iret
icebp
fwait
sub
mov
mov
xor
sbb
mov
ss
xor
je
inc
dec
dec
aaa
jnp
and
pushf
ljmp
test
in
xchg
outsb
stos
sbb
in
movsl
movsb
mov
test
pop
addr16
lds
or
and
pop
add
inc
imul
mov
xorl
xchg
pop
cltd
std
jbe
push
pop
fwait
jae
xchg
adc
test
popa
sbb
jmp
mov
xor
inc
mov
or
scas
adc
ss
inc
xchg
sbb
scas
sub
call
iret
mov
xchg
call
add
scas
int3
and
or
jo
stc
mov
pop
outsb
hlt
ljmp
fildll
push
mov
pop
dec
shrb
repnz
and
in
cmc
sti
ds
adc
decl
dec
cmpsl
jl
push
mov
subl
jl
bound
mov
pop
push
cmpsb
pop
dec
xchg
jp
enter
pop
add
mov
cmpsb
out
push
xchg
adc
mov
xchg
jb
data16
dec
xchg
xlat
nop
push
sbb
pop
push
sub
sub
inc
jbe
cmp
movsl
mov
jo
je
loopne
add
inc
pop
pop
cmp
fs
mov
call
jne
lods
shlb
jg
push
stos
enter
fists
ja
adc
repz
lods
sub
scas
push
jl,pt
mov
icebp
imulb
stos
add
mov
leave
jo
add
xor
jmp
mov
test
pop
insb
add
push
jne
pop
rorb
push
jg
mov
lods
push
ljmp
mov
sbb
ljmp
ds
scas
jecxz
sbb
je
popf
lahf
push
xchg
push
mov
in
ljmp
popa
xor
jbe
aam
push
mov
cmpb
movsl
pop
shr
rcll
lret
inc
test
leave
popa
scas
jae
cmp
fistps
bound
push
pop
mov
push
jo
sar
or
jg
ret
das
ret
jbe
pop
cmpsl
fisubs
lock
inc
cwtl
pushl
add
lcall
andb
or
xor
cmp
ja
aaa
js
xor
clc
mov
scas
movsl
mov
hlt
mov
sub
and
xchg
push
jnp
pop
pop
shl
push
int3
push
push
pop
xorb
pop
cmp
imul
adc
mov
jb
aad
push
xchg
cltd
push
in
jmp
out
jnp
sti
mov
cmpsb
adc
out
les
gs
gs
stc
ljmp
or
repz
in
xchg
vunpckhpd
add
xor
lahf
mov
loope
push
xlat
sub
sar
xchg
pop
or
mov
andb
jp
push
inc
mov
xor
or
jp
mov
in
lret
movsl
dec
dec
pop
idivl
jge
xor
jae
jge
clc
pop
cmp
push
subl
fsubrs
pop
fnstenv
sub
cs
jl
popa
mov
push
das
sti
std
pop
aaa
mov
push
je
stos
push
daa
ficoml
sbb
inc
iret
and
pusha
push
fwait
and
fdivrs
loop
loope
cmp
roll
xchg
sbb
xor
xchg
fistl
movsb
out
mov
ljmp
stc
pop
mov
call
sbb
xor
cmp
into
stc
loopne
dec
mov
add
sub
sub
cmp
pop
cld
jmpw
cmc
inc
pushf
push
jl
and
stos
jne
mov
fwait
daa
shrl
mov
dec
xor
pop
nop
cmp
inc
mov
int
data16
mov
sbb
jae
enter
mov
jmp
in
cs
push
inc
hlt
incb
cltd
leave
call
xchg
stos
stos
fs
rcll
mov
aaa
mov
cmpb
and
test
sbb
clc
jne
push
call
popf
add
inc
aaa
and
sub
sub
sbb
sub
fmuls
clc
jno
pop
pop
and
jno
clc
outsb
mov
dec
sbb
out
dec
cmp
ret
loopne
in
jno
das
sahf
lock
pushf
out
add
cmc
in
das
push
jne
adc
adc
pop
dec
push
xchg
fmull
nop
out
push
ret
test
push
cmp
push
add
jbe
mov
subl
lcall
stc
adc
das
mov
pop
pop
int3
xor
mov
popf
or
dec
xchg
mov
adc
sub
cmpb
push
pop
adc
mov
push
sbb
lds
insb
pop
scas
pop
mov
rcrb
movsl
adc
jno
imul
mov
in
lret
enter
xchg
in
divl
repnz
cmp
mov
jns
clc
or
data16
insb
aas
xchg
mov
leave
xor
xchg
mov
dec
les
sti
popa
jmp
jne
loopne
jge
sbb
loop
nop
or
jbe
aas
sarl
cmp
test
xchg
lcall
jp
pusha
push
loopne
and
adc
loop
out
mov
jo
outsl
cmp
shlb
and
sub
dec
adc
push
stos
cwtl
lret
scas
loop
ss
ret
lret
pop
mov
cwtl
push
pop
outsl
sti
in
mov
adc
popa
or
test
fcmovnb
iret
sbb
movsl
cmp
inc
sbb
das
cmp
mov
shlb
addr16
sbb
jl
out
pushf
sahf
inc
js
movsb
jnp
mov
ljmp
inc
mov
sub
int
push
adc
push
mov
dec
or
hlt
pop
cltd
outsl
or
sbb
jg
xchg
ret
rcl
sbb
sbb
pop
and
lahf
xchg
mov
fisttpl
test
jle
mov
aam
in
enter
std
pushf
mov
data16
xchg
xchg
xor
int
add
inc
dec
stos
dec
mov
hlt
inc
xorb
mov
push
stos
aad
pushf
data16
insb
pusha
out
lods
out
pop
mov
cli
test
mov
fwait
cmp
testl
adcl
stc
iret
pop
es
inc
push
leave
add
and
adc
pop
jle
sub
loope
dec
pushf
faddl
push
xor
shll
inc
jnp
idivb
mull
sub
pop
jg
push
mov
aam
jecxz
push
mov
imul
xor
cwtl
je
xchg
aaa
sbb
fidivs
into
mov
sub
ja
and
dec
fwait
arpl
mov
in
imul
xchg
or
sub
xor
and
les
mov
pop
in
pusha
add
push
scas
mov
cmpsl
mov
xchg
sub
xor
js
jne
push
outsb
lret
and
xchg
or
roll
jge
aas
xchg
js
or
lds
adc
std
popf
out
shl
dec
sahf
lods
aaa
sbb
add
fwait
cmp
inc
xchg
movsl
pop
shr
clc
das
sbb
lds
mov
xchg
cmp
mov
imul
lcall
insb
jne
mov
test
inc
mov
inc
mov
sbb
orb
xchg
cmc
aas
sub
rclb
insl
cmpsl
shll
jns
add
loop
jnp
punpckldq
and
sbb
cmc
mov
lret
pushf
movsb
or
mov
ss
popa
push
popf
lea
add
adc
jo
xor
testb
jmp
mov
sub
test
enter
hlt
add
xorl
jecxz
xor
sbb
add
jb
call
dec
mov
push
push
add
popf
dec
xchg
mov
popa
mov
out
jle
nop
xor
rcr
mov
insl
out
or
lea
push
loopne
jge
lea
aad
and
rcrb
stc
xchg
incl
push
inc
sub
mov
jg
mov
shrd
insb
and
sub
rclb
je
pop
sbbl
sbb
imul
aaa
fadds
lods
rol
cmp
nop
mov
aad
fs
mov
push
pop
lock
pop
fwait
fwait
sbb
bnd
mov
jae
aaa
push
insl
or
aas
sbb
fdivl
inc
jb
scas
adc
mov
mov
std
nop
jmp
hlt
dec
bound
arpl
nop
dec
mov
clc
cmpsl
nopl
xor
out
jle
rcrl
std
sbb
inc
cli
cmc
inc
mov
sub
push
sti
es
out
popf
mov
test
repz
aaa
mov
or
divps
pop
mov
lcall
cmpsb
cltd
dec
nop
sbb
ja
aad
sub
stos
loope
mov
dec
inc
or
push
cmpsb
icebp
sti
popa
pop
inc
push
fwait
jecxz
mov
popf
adc
popf
adc
hlt
rcr
push
mov
jecxz
jo
push
fcmovnu
inc
fadd
enter
in
std
xor
clc
ds
add
cld
push
int
arpl
inc
dec
xorl
mov
stc
in
cmp
dec
sti
adc
jbe
lret
cmpsb
shrl
scas
fisubl
lcall
add
inc
loope
mov
lock
repnz
and
outsl
sub
les
mov
icebp
dec
mul
sbb
scas
pop
lret
and
push
pop
call
int3
mov
lahf
cmp
jno
pusha
test
test
movsb
xor
fdivrs
mov
sbb
add
xor
dec
cs
in
jne
adc
mov
jae
pop
call
fldcw
imul
ljmp
dec
fs
test
outsb
xchg
add
out
loop
jl
lahf
in
sbb
mov
daa
cld
das
andl
roll
xor
loope
sbb
sub
jno
dec
out
inc
lahf
cmpsl
push
ja
push
lret
stos
call
xor
jle
dec
test
jno
int3
fwait
rcrb
out
xchg
stc
xchg
sbb
fmuls
mov
ret
pop
insb
movsl
pop
push
in
push
mov
mov
sbb
xor
test
aas
insl
ror
ljmp
pop
jl
stos
fiaddl
mov
sub
iret
cs
mov
icebp
lahf
test
push
xor
lret
cmpsl
jo
hlt
jnp
fisttpll
push
insl
pop
jmp
shrb
xchg
sbb
fdivr
mov
outsb
enter
inc
xlat
sub
mov
popa
sub
mov
cmp
imul
cmpsb
push
test
add
mov
pop
stc
sub
lahf
lock
cmpsb
push
xchg
fnsave
popf
mov
movsl
xchg
fwait
iret
dec
sbb
aad
aad
fcmovne
mov
mov
std
stos
mov
nop
mov
sub
hlt
mov
adc
pop
cwtl
mov
je
add
mov
lods
jle
cmp
mov
mov
ds
imul
dec
enter
out
out
mov
inc
nop
xchg
testb
xchg
ffree
pushf
sbb
and
fcoms
aad
cmpsb
adcl
mov
lahf
mov
ja
push
cmpb
push
or
loope
dec
lods
mov
inc
lret
ror
in
cmp
rclb
arpl
mov
sub
or
mov
push
add
popf
inc
adc
leave
fs
jae
in
pop
aam
pop
push
pop
mov
dec
jns
lods
add
loopne
mov
sbb
jmp
jle
popa
pushf
mov
ret
add
xchg
decl
inc
inc
pop
jnp
lret
rolb
mov
outsb
xchg
lock
out
rcrb
loopne
out
sbb
das
pop
dec
rep
xchg
xor
mov
out
js
insb
daa
cmp
icebp
jae
outsb
jnp
test
jp
nop
mov
dec
mov
sub
mov
les
mov
push
adc
cmp
imul
push
in
daa
jge
popa
cmp
mov
push
and
dec
fdivs
adc
push
mov
jno
mov
xchg
inc
adc
jo
push
pop
pop
or
addr16
movsb
sbb
xchg
jb
dec
pop
mov
js
out
movsl
or
push
int
in
popa
xor
push
sar
js
fimull
add
movsl
jae
std
lock
fs
bound
pop
jge
dec
xchg
sub
incb
or
add
imul
adc
add
jp
push
push
lea
jo
cmp
lret
mov
pushl
dec
jmp
in
jle
ficoml
je
rcrb
flds
int
dec
lds
cmp
push
fmul
pop
mov
loop
pop
sub
cmp
jae
test
xor
cmp
jae
repnz
out
or
insl
mov
or
sub
inc
idiv
add
pop
rorl
push
and
enter
stc
sbb
lods
in
test
push
cmp
mov
pushl
add
js
imul
inc
js
inc
out
push
and
cmp
inc
notb
push
mov
xchg
pop
push
jg
inc
inc
sbb
pop
dec
pop
mov
arpl
sbb
sbb
stos
jno
xchg
repz
add
jae
inc
neg
gs
test
call
fwait
add
pop
push
mov
jp
pop
jbe
das
jnp
jno
aas
sub
lea
cs
mov
loopne
cli
adc
sbb
fbstp
jp
push
arpl
repnz
jl
mov
xchg
arpl
add
push
movsl
ret
int
pop
xor
popa
push
sbb
pop
pop
sti
inc
adc
stc
lds
and
adc
test
in
xchg
les
jle
data16
and
dec
and
push
test
pop
mov
faddp
inc
les
xchg
adc
inc
cmp
fstl
add
daa
push
data16
adc
jge
outsl
or
lods
out
adc
call
pusha
jmp
mov
faddp
repz
dec
or
movsl
cmp
adc
mov
xor
jp
dec
ljmp
cltd
cmc
inc
pop
cmp
aaa
dec
jnp
shll
sub
mov
mov
xchg
in
fs
add
adc
testl
sbb
iret
lods
adcb
mov
jmp
arpl
es
sbb
icebp
jnp
push
or
adc
jnp
mov
gs
xor
test
int3
imul
ret
add
adc
and
das
sub
into
sub
arpl
lcall
or
push
pushf
cld
add
and
sub
ret
mov
stc
dec
jno
and
scas
mov
fs
out
clc
sbb
mov
jg
ss
daa
mov
push
pusha
in
jns
leave
pop
leave
jp
push
ds
xchg
pop
inc
dec
cmc
pop
jo
push
mov
xorb
out
ja
cltd
aam
inc
fildl
lds
add
mov
adc
imul
push
inc
jg
inc
stc
scas
pop
cli
sub
mov
test
push
imul
bound
push
push
inc
addr16
sub
nop
std
mov
xchg
orb
push
pop
stos
cli
icebp
mov
mov
mov
jg
lret
lods
leave
test
gs
stos
mov
in
out
dec
fs
test
stos
es
dec
lds
fisttps
xor
sbb
sti
pop
es
lds
mov
in
sahf
in
dec
fbstp
inc
enter
push
fsubr
mov
je
jp
aam
js
nop
test
mov
xchg
xchg
loope
in
adc
leave
test
cmp
jecxz
idivl
repz
out
push
inc
clc
divb
sub
mov
outsb
mov
push
add
pop
pop
inc
int
inc
test
mov
dec
fdivl
lret
sub
jecxz
mov
lahf
xor
adc
lock
sbb
repz
and
mov
or
adc
push
push
vpandn
adc
dec
mov
mov
add
cmpsb
lds
cmpsl
lcall
test
sub
insb
pop
push
lcall
out
rcr
ret
mov
add
jl
sahf
subb
inc
pop
push
cmp
ja
mov
int3
fstpl
xchg
adc
adc
push
pusha
or
je
jno
or
mov
ja
aam
ja
enter
push
push
lods
mov
es
jb
icebp
je
cmp
sbb
xchg
dec
cmp
repnz
sahf
loopne
or
sub
push
popf
sub
out
outsb
xchg
inc
test
mov
in
push
ret
popa
movsb
imull
out
or
and
repnz
dec
mov
mov
roll
fsubs
rolb
cmpsl
rclb
popa
pop
lea
addr16
xchg
insl
iret
jg
aaa
mov
mov
pop
jmp
int
add
nop
roll
mov
push
pop
cltd
jp
test
loop
or
loope
mov
jns
fnstsw
std
jge
adc
loopne
rcrb
insl
lea
cmpsl
mov
out
and
mov
movq
into
int3
jle
sbb
mov
mov
lcall
nop
cmc
mov
mov
repz
and
imul
jmp
pop
test
jmp
add
stc
xor
int
roll
enter
sti
fwait
xchg
imul
mov
ljmp
test
mov
inc
aad
sbb
mov
ljmp
mov
fsubs
stc
sub
imul
jb
cs
xor
pop
dec
imul
mov
jg
mov
xor
mov
pop
bound
arpl
or
js
and
data16
test
jae
lods
scas
mov
jmp
ret
xlat
mov
jecxz
lcall
or
or
pop
aas
pop
pop
out
imul
sub
imul
fnstcw
cmp
jecxz
dec
fucomip
xchg
lods
cmpsb
jb
sub
rorb
inc
cmp
cmp
imul
sub
and
or
loope
rclb
push
jbe
adc
cmp
mov
push
ret
mov
cmc
jbe
jns
mov
in
enter
xchg
mov
mov
xchg
sbb
and
mov
insl
popa
repnz
sbb
jl
add
stos
test
mov
popa
sub
fsub
into
dec
andb
fadds
and
cwtl
push
dec
out
or
in
pop
jno
or
repnz
xor
gs
gs
or
nop
xchg
push
nop
iret
cli
or
sub
cmp
xor
mov
stos
mov
mov
pop
inc
push
pop
xor
js
sub
sti
dec
mov
pop
add
xchg
rcrl
jns
cmp
sub
inc
jb
imul
divl
stos
test
xor
scas
fiaddl
ret
mov
push
xchg
dec
or
sbbl
cmp
jae
xor
jne
mov
cmpsb
out
jnp
push
daa
lods
repz
lcall
push
sbb
xor
aas
inc
rcll
outsb
cmp
popa
jp
mov
fsubl
mov
repz
xlat
dec
fistpll
xchg
xor
xchg
dec
movsl
inc
adc
out
and
push
cwtl
jecxz
push
pop
sti
insb
pop
jl
push
push
jns
xchg
xchg
xchg
push
sub
popa
ret
pop
dec
mov
fcomps
popa
inc
adc
mov
push
jmp
inc
sbb
jbe
and
shll
std
mov
push
or
aam
xchg
rol
xchg
hlt
pop
leave
repz
mov
fists
lahf
rcl
roll
push
leave
aas
mov
mov
mov
arpl
mov
inc
xchg
xchg
cli
fsubl
mov
lock
sub
xchg
and
movsl
daa
push
cli
imul
add
rcrb
sbb
mov
jl
pop
or
mov
lea
adc
inc
mov
mov
out
mov
dec
add
pop
mov
lds
xor
in
xor
pop
or
sub
sub
push
push
dec
mov
enter
test
and
ja
into
in
adc
xchg
cmc
stc
iret
add
mov
imul
cltd
sbb
add
xchg
add
inc
sub
xchg
nop
adc
decl
mov
cmp
adc
mov
add
inc
sbb
ret
cli
jg
clc
push
inc
ret
ret
mov
pop
in
jl
pop
fisttpll
push
jge
idivl
mov
xchg
ss
out
mov
jl
scas
jno
ret
or
xor
pop
sbb
pop
mov
int3
dec
scas
add
pusha
push
xor
mov
pop
ds
rcll
test
imul
bnd
mov
sub
in
xor
mov
add
inc
cmc
mov
xchg
mov
lcall
std
lods
adc
ljmp
aad
push
aaa
in
lret
sti
jp
cs
adc
test
fwait
adc
pop
outsl
std
and
aas
mov
xor
scas
ret
sub
icebp
out
lea
adc
and
inc
fimuls
insl
loop
and
lods
mov
rcl
dec
mov
fcmovnbe
sub
scas
jecxz
fabs
mov
xor
imul
mov
shlb
xchg
mov
pop
cmp
imul
xor
cmp
sbb
lods
or
mov
dec
add
lret
inc
xor
push
pop
hlt
and
push
xlat
arpl
jb
outsl
jmp
jle
cltd
mov
jg
adc
inc
daa
rclb
sub
lahf
jmp
xor
add
jl
inc
in
add
xchg
jnp
pushf
loope
movsb
mov
inc
sbb
adc
movsl
pop
cmp
subb
mov
sub
andb
imull
adc
xchg
loope
jmp
gs
xchg
int3
cmp
cmc
pop
divl
xor
mov
hlt
addr16
in
jns
jbe
mov
adc
mov
sbb
sti
lret
lea
push
push
sysenter
sub
loop
in
ja
sti
jnp
mov
imul
psubusw
stc
mov
push
adc
cmp
add
icebp
inc
mov
inc
cmp
cmpsl
popl
xor
inc
pop
data16
jo
fdivr
cld
dec
je
xor
xchg
fistpl
cwtl
mov
aaa
pop
and
xor
add
mov
mov
pop
loopne
or
shrl
rorb
push
lock
stos
push
rorb
pop
loop
in
cmp
mov
jae
out
push
sbbl
mov
cmp
sbb
inc
jno
fadds
in
pusha
adc
in
mov
nop
inc
xchg
cltd
in
jb
jle
and
rclb
mov
test
mov
mov
aaa
ljmp
test
cltd
and
mov
jb
aad
jo
aam
mov
lahf
imull
inc
sti
cld
jnp
mov
push
cmp
in
or
repnz
call
add
gs
int3
add
jle
and
jle
daa
dec
sti
lock
xchg
pop
stos
lcall
mov
popf
mov
jnp
rorb
inc
push
lahf
cmp
pop
lds
outsl
inc
inc
hlt
inc
loop
test
add
lea
lcall
aas
cmp
mov
lds
add
push
adc
jbe
sbb
jb
mov
push
lods
add
stc
push
js
push
and
test
lea
cmp
stos
inc
xchg
ss
and
out
movsl
popa
push
pop
aaa
jbe
add
cltd
add
in
addr16
addr16
xlat
sub
test
rcrb
daa
scas
mov
out
push
adc
adc
sbb
sbb
pop
mov
xchg
mov
cmp
aad
lret
imul
xchg
scas
xchg
test
mov
inc
cmp
hlt
nop
out
dec
cmpsb
adc
fs
addr16
mov
ss
daa
cmpl
out
aad
movsb
lret
subl
dec
mov
dec
sbb
cmp
fisubrl
movsl
push
mov
rcll
xchg
imul
mov
dec
adc
fistpll
push
mov
mov
push
mov
sbb
aad
loop
addl
pop
int3
insl
outsb
or
inc
inc
sbb
add
jne
lret
push
jne
loope
mov
in
mov
fcmovu
out
das
mov
xchg
nop
mull
stos
fwait
push
jmp
cmc
pop
insl
call
mov
xchg
pusha
out
mov
push
jo
sub
jnp
les
or
repnz
cmp
sub
iret
sub
shlb
push
dec
lcall
mov
sub
adc
jnp
dec
xchg
std
fdivs
ficomps
ret
jnp
push
iret
mov
and
add
xchg
notl
out
dec
xor
lea
out
cld
shll
scas
cmp
and
addr16
clc
std
pop
inc
not
mull
bound
jmp
mov
pop
cmp
std
mov
js
mov
and
push
xor
push
add
inc
pop
movsl
or
jnp
aam
inc
cmp
imul
mov
aam
es
fwait
push
data16
sbb
lret
fs
cmp
aas
mov
pop
jge
xor
pop
add
push
mov
mov
cltd
pop
mov
sub
sub
mov
cwtl
jbe
cmp
lahf
pop
sub
add
sub
pop
in
mov
testl
inc
mov
pop
loope
loope
xorl
xor
pop
aad
imul
xlat
scas
push
cmp
daa
xchg
arpl
add
sbb
mov
sbb
mov
icebp
jno
cmpl
stos
aaa
xor
add
jecxz
stc
push
and
and
in
dec
pop
sbb
push
das
add
test
mov
cld
pop
jbe
inc
mov
xchg
js
cld
fucom
rcll
or
int3
pop
loopne
cmc
mov
pushf
js
xchg
loop
pusha
sbb
jp
clc
cld
dec
sti
ja
inc
jne
inc
lret
cmpl
sbb
add
xchg
arpl
adc
testl
mov
or
fld
mov
inc
sub
add
xchg
aad
test
fwait
insb
mov
adc
or
mov
dec
jle
out
add
mov
mov
add
fcmovb
jne
insl
adc
out
cmpsl
xchg
inc
jl
mov
ljmp
xor
jbe
mov
jmp
mov
xor
rcrb
test
into
cmp
in
ret
cld
push
cmp
add
mov
sbbb
icebp
xor
push
ficompl
lret
ffree
loope
xchg
nop
lods
jne
cwtl
and
fs
xchg
jp
pop
loopne
or
push
cmp
imul
inc
xlat
mov
stos
dec
pop
test
shr
sar
ja
cli
mov
xchg
dec
gs
mov
pop
cwtl
and
mov
int
jne
and
push
aad
bound
pushf
mov
mov
sbb
mov
mov
jne
aad
cltd
push
cmp
jo
pushf
push
push
aad
lea
inc
push
subb
mov
xor
adc
divb
mov
lds
cmp
hlt
and
sti
decb
pop
andb
inc
les
xchg
pop
inc
sar
jle
inc
jmp
dec
sbb
and
cmpsb
leave
jns
je
push
inc
and
xchg
ja
sbb
loopne
push
dec
pop
jl
daa
aas
cwtl
inc
gs
push
mov
jge
pop
mov
sbb
test
pop
loope
inc
fidivs
mov
push
lret
aas
add
xchg
pop
stos
jg
cld
add
out
cmp
lcall
ret
in
mov
leave
pusha
mov
push
out
or
pop
add
leave
xchg
int
sub
jecxz
or
mov
cwtl
shlb
adc
pop
mov
ss
andl
xlat
jmp
pop
scas
jg
adc
adc
movsl
jle
mov
les
xchg
push
cmp
adc
jecxz
fisttpl
adc
sar
sbb
jg
dec
mov
mov
js
mov
enter
ret
jno
rclb
subb
daa
mov
ret
lock
bound
mov
sub
aaa
in
pop
dec
xlat
cwtl
xchg
inc
imul
xchg
loope
test
inc
fcomps
test
fwait
std
xchg
add
das
sbbb
rol
leave
or
decl
sub
scas
jnp
or
arpl
push
jne
aam
imul
subb
insl
and
sarb
out
and
cmp
rcrl
mov
xor
xchg
mov
or
push
push
sub
dec
mov
daa
lea
ja
data16
push
add
push
adc
lret
filds
pop
adc
inc
pushf
cs
sub
inc
sbb
pop
pop
outsb
sub
cld
jge
and
sub
xchg
inc
lock
cmpsl
or
rcrb
imul
outsb
sbb
or
sbb
sbb
ds
insb
out
mov
push
aaa
cmpsb
in
mov
push
cltd
push
push
enter
out
mov
daa
push
push
push
scas
mov
cvtpi2ps
sbb
xor
push
aad
inc
test
nop
dec
and
push
sbb
jmp
dec
push
sbbl
dec
loopne
add
insl
sub
mov
andb
lret
fisubrl
sub
inc
lret
sti
jo
dec
cmp
in
push
xorb
pop
push
sbb
bnd
ja
push
mov
pop
cli
sub
mov
inc
in
nop
lods
jo
adc
pop
icebp
idivb
icebp
and
mov
mov
out
out
cmp
mov
fcoms
dec
push
add
insl
mov
in
out
ret
cmp
daa
sbb
aam
xchg
mov
into
or
push
sbb
mov
inc
cmp
or
adc
push
cmpsb
mov
call
pop
xlat
push
scas
push
pop
dec
lcall
fs
movsb
dec
add
icebp
es
adc
cwtl
mov
mov
push
pop
lahf
andl
pop
and
test
sub
data16
sbb
pop
fs
lret
stos
and
into
push
dec
dec
and
sbb
xor
xchg
rorb
xchg
in
bound
orb
cmp
or
push
test
cmp
push
fs
cmp
movsl
out
enter
or
mov
in
jne
cmp
cmp
leave
pop
fmul
add
mov
fildll
mov
fistl
xchg
add
mov
mov
rclb
std
popa
mov
movsl
jg
or
mov
jns
cmp
fstps
sbb
sbb
inc
push
int3
stos
add
mov
lret
repnz
mov
and
sarb
and
fldenv
into
stc
mov
into
les
mov
jnp,pt
addb
shrl
aam
ret
or
cli
sti
scas
je
lret
imulb
lcall
xorb
and
dec
mov
xor
and
repnz
jns
je
cmc
mov
xor
jp
xchg
fucomp
add
and
int3
mov
sbb
dec
cmpsb
cmp
fstl
push
loopne
les
sub
adc
les
cmp
mov
int
cltd
das
or
popw
pop
inc
pop
push
je
xchg
scas
cvtps2pd
ds
shlb
mov
test
popf
jno
mov
out
and
and
jo
pop
pop
adc
or
cmpsl
lock
mov
sar
incb
add
and
xchg
sbb
jmp
cmpb
in
mov
gs
scas
jmp
and
pop
or
jl
or
xor
inc
ja
mov
loop
xchg
lahf
sub
and
leave
push
sti
mov
loopne
jae
mov
xchg
pop
aaa
movb
sub
mov
xchg
push
out
call
sub
pusha
gs
dec
mov
repnz
into
aaa
mov
xor
adc
jmp
jnp
out
or
fdiv
adc
aaa
mov
push
push
pop
fimull
xchg
sbb
dec
lock
sar
mov
mov
sbb
rcrl
icebp
fs
out
inc
aad
or
popa
sub
jns
lcall
push
in
shlb
or
jmp
xor
and
dec
cmp
xchg
jne
push
orl
cltd
cwtl
cmpsb
sbb
mov
insl
lea
jns
pop
lods
xchg
int3
or
cmp
jns
nop
repz
jno
xchg
outsb
mov
insb
aaa
gs
cmc
ja
sub
loop
push
push
sub
inc
mov
testl
andb
mov
out
stc
dec
push
test
mov
xor
leave
les
pop
shll
dec
cmp
sub
sahf
loope
ss
adc
and
xor
mov
test
scas
rcl
aad
xchg
mov
mov
out
fwait
insb
pop
mov
invd
cltd
fwait
xor
and
imul
jecxz
cmpsb
jno
mov
dec
push
mov
cmc
pop
popa
adc
psadbw
scas
loop,pt
fldt
and
popf
in
mov
ja
ret
inc
inc
sub
shr
and
sbb
sar
push
lret
popa
ja
mov
fimull
pop
leave
pop
jns
push
dec
jecxz
pop
int3
cwtl
dec
mov
hlt
xchg
or
dec
bound
imul
ja
mov
pushf
add
cwtl
call
addr16
sub
sbb
dec
sub
mov
push
sahf
movl
xor
pop
jl
mov
aaa
sub
lret
imul
xor
dec
mov
or
add
adc
scas
mov
adc
adc
mov
push
cmp
sbb
sahf
jp
adc
imul
cmp
dec
ret
hlt
lods
and
test
and
sbb
pop
push
mov
out
ret
out
ds
leave
movl
xchg
mov
pushfw
dec
xchg
data16
jmp
mov
cltd
out
out
test
lret
addl
or
mov
xchg
jno
inc
mov
push
iret
mov
je
inc
aad
xor
test
cmp
mov
lea
das
pop
sbb
jp
movsl
mov
cmp
adc
xor
push
js
or
xor
xchg
in
jb
mov
hlt
xor
shrb
sahf
loopne
jecxz
push
and
lds
pop
jmp
stos
and
xadd
mov
addr16
jg
out
mov
xor
mov
clc
fstpl
not
mov
loope
fisubrl
adc
mov
fsubs
sbbl
jmp
jg
test
sbb
popa
lcall
add
aas
xor
mov
mov
and
das
mov
cmp
inc
cmpsl
mov
cmp
filds
mov
pop
xor
dec
fsts
aaa
leave
mov
mov
nop
pop
data16
add
repnz
push
sub
or
repnz
pop
je
pop
outsb
push
and
add
loopne
js
sbb
sub
cltd
jb
sbb
fucomp
les
shrb
xchg
int3
test
pushf
shll
or
or
fs
jge
mov
cmpsl
jns
enter
cmc
adc
sub
pop
push
inc
rorl
rcrl
fcmovnbe
hlt
pop
arpl
add
push
dec
adc
mov
jg
cmp
and
fsubl
or
inc
out
ss
adc
xchg
pop
jge
in
addb
mov
fcomp
jo
dec
idivl
or
cmc
jl
add
xchg
add
push
pushf
scas
dec
xor
push
sub
xchg
and
lret
fisubrl
jg
cmpsb
xor
fwait
pop
iret
repnz
push
lock
jmp
imul
jp
push
movsb
sbb
stos
repz
movsl
mov
add
scas
loop
or
cs
mov
pusha
imul
lods
add
sbb
xchg
pop
xchg
lcall
in
jmp
inc
jmp
or
test
mov
out
pushf
mov
or
jmp
add
repnz
sbb
fisubl
adc
in
adc
std
add
cmp
add
jns
int
lahf
xchg
in
cmp
leave
add
addr16
cmp
ljmp
bound
vpsrlw
jmp
adc
sbb
inc
sub
push
jl
add
xor
jl
inc
and
test
jne
add
xchg
incb
sub
das
into
cltd
mov
data16
push
iret
orb
in
loopne
mov
call
xor
jbe
movsb
xchg
mov
scas
and
cmp
xor
pushf
mov
mov
bound
testl
std
sub
repnz
pop
mov
dec
sub
pop
lea
jae
cld
mov
adc
sub
mov
sbb
pop
xor
push
cmp
outsl
sbb
mov
shll
jnp
scas
pop
pop
push
mov
addb
jns
dec
cmp
sbb
fists
jmp
mov
inc
scas
and
add
sahf
fmuls
idiv
jecxz
mov
movsb
int
cmp
fsub
fsub
addr16
add
fmuls
mov
adc
xchg
add
outsl
bound
mov
test
loopne
jbe
or
mov
outsl
mov
sub
jno
push
adc
stos
insb
mov
xchg
mov
jne
out
adc
mov
jbe
imul
aad
pusha
mov
fdivs
outsb
shrl
mov
mov
sbb
mov
rol
add
mov
fidivrs
sbb
mov
add
xchg
call
test
pop
int3
sbb
rcll
call
icebp
movl
or
and
js
add
daa
fxch
test
sub
add
inc
stc
iret
aaa
mov
mov
and
mov
jae
jecxz
cmpsl
xor
stos
cmpsl
or
and
jl
in
shrl
mov
test
dec
push
ret
push
in
jg
setbe
jmp
add
dec
div
add
mov
cmc
jb
jmp
push
inc
dec
mov
xchg
add
lret
xor
cmp
jae
mov
fwait
add
mov
mov
lahf
bound
out
sub
mov
movsl
cmp
jo
fistpll
lret
and
mov
insl
adc
push
loopne
ret
ds
subb
aas
lcall
clc
add
and
cmpsl
dec
pop
pop
push
mov
mov
or
mov
addr16
addr16
mov
push
jle
mov
fs
jge
dec
out
test
sbb
inc
adc
mov
or
and
push
or
test
jne
push
pop
mov
pop
sbb
js
bnd
mov
add
xor
inc
sbb
lock
and
dec
js
jecxz
mov
daa
push
and
imul
mov
outsl
fdivrs
push
int3
xorb
scas
and
add
into
or
out
push
fiadds
jne
jp
adc
mov
sub
pop
push
cmp
data16
bnd
rcll
sbb
out
xchg
pop
popf
mov
cmpsb
dec
jbe
cmp
push
lcall
mov
int
loopne
push
add
scas
xor
push
fcomps
fistps
xchg
insb
lahf
lods
jge
dec
sahf
jp
icebp
mov
inc
xchg
push
pusha
jg
jno
push
pop
ficoml
in
cltd
movsb
sbb
add
mov
pop
xchg
jb
cmpsl
leave
pop
xchg
mov
or
daa
lock
adc
shrb
mov
call
cld
not
andb
cmp
mov
jae
add
lcall
mov
aas
mov
sub
or
pusha
into
xchg
insl
dec
and
lahf
lahf
mov
jno
add
fidivrs
in
jbe
cs
rcr
sub
adc
sbb
cmp
jns
gs
test
push
test
push
addr16
sbb
dec
js
js
cltd
xorl
mov
out
adc
mov
pop
cmp
test
es
push
sbb
pusha
push
sahf
xchg
or
inc
dec
outsl
adc
hlt
mov
cmc
adc
or
addr16
inc
and
pop
mov
stos
sbb
rolb
rcrl
mov
outsl
bound
shrb
add
cmp
mov
sti
aam
aam
xlat
pop
mov
stos
test
cld
mov
into
jb
outsb
test
jle
ret
outsl
sub
jl
imul
pop
dec
jnp
xor
movsb
repnz
sub
ficomps
mov
gs
xchg
outsl
dec
clc
pushf
popf
xor
dec
dec
xor
mov
pop
fadds
sahf
push
sub
aaa
inc
xlat
xor
loope
pop
sti
sbb
or
cmp
pop
xor
jecxz
add
fildl
fs
lret
in
pop
imul
sub
mov
jle
out
ljmp
lcall
add
inc
dec
js
jb
inc
nop
sub
fcmovb
lock
les
mov
insb
xchg
mov
sbb
lret
xor
mov
and
movsb
inc
and
pusha
xor
iret
or
cmpsb
and
pop
rorl
jmp
cmp
dec
sub
shlb
test
aas
push
pop
daa
mov
jnp
sub
daa
test
ret
rcrl
push
test
jb
inc
add
notl
in
loop
mov
push
cmpsb
jecxz
xchg
mov
out
das
cld
repz
out
lods
cmp
lods
pop
movsb
inc
sti
or
lahf
jge
add
push
int3
mov
sub
or
dec
mov
mov
mov
out
adcl
call
adc
xcrypt-ofb
cmpsl
lods
out
dec
inc
push
cmpsb
pop
or
sarl
arpl
mov
popa
xor
adc
cmp
jl
dec
cmpsl
sbb
adc
xor
mov
mov
jmp
add
jl
aam
inc
push
scas
lcall
in
cmp
xor
jo
mov
sbb
ds
mov
pop
jge
cli
add
fsubrs
pop
jnp
adc
xor
and
cli
inc
faddl
mov
mov
arpl
test
repnz
or
push
jl
in
pop
icebp
and
lret
ror
mov
icebp
jo
add
rol
iret
inc
mov
in
pop
jecxz
and
xlat
fcmovnbe
fisubrl
cli
push
cmp
test
dec
or
js
fcoml
or
imul
jns
sub
mov
mov
js
int3
out
jecxz
lods
sub
cmpsb
lea
stos
jecxz
and
sbb
inc
ss
mov
insb
jbe
adc
jne
mov
adc
jne
clc
push
scas
cld
cmpsl
fiaddl
cmpl
inc
mov
stos
and
out
jp
fdivrp
addl
sub
in
xchg
mov
inc
lret
mov
cmp
cmp
insb
leave
adc
out
pop
ljmp
in
push
fsubs
test
in
mov
out
pusha
xchg
adc
add
divl
leave
push
jo
cmp
sarb
es
pop
popa
xchg
push
push
je
adc
cmpsb
ljmp
into
aam
dec
xorl
cmpsb
adc
xor
pop
imul
and
mov
ret
out
int3
out
pop
mov
push
call
jge
or
nop
sti
test
test
and
rolb
mov
push
mov
and
jecxz
int
mov
adc
popa
clc
sti
cmc
push
sar
pop
cltd
test
ljmp
sbb
adc
fwait
xchg
and
das
cmpsb
mov
data16
xchg
jo
dec
or
pop
out
sub
xchg
rorb
fcompl
fwait
jo
mov
and
push
cmc
push
and
aas
add
push
cld
mov
iret
lea
or
shrb
les
add
mov
mov
jle
xchg
push
scas
mov
or
mov
adc
into
sbb
lods
out
jp
outsb
pop
xor
sub
add
xor
jnp
movsb
mov
in
outsb
ret
lock
lea
xchg
dec
cmp
insb
addr16
nop
sub
lret
in
das
add
out
test
sub
jbe,pt
out
sub
repz
shr
imul
sub
rcll
fcomp
push
bound
mov
cmp
jecxz
out
push
dec
test
pusha
add
clc
inc
sar
outsb
inc
or
fbstp
pushf
clc
add
imul
and
mov
test
mov
push
scas
je
xchg
lods
and
shll
les
push
lret
out
sbb
ret
xchg
faddp
pop
sbb
stos
and
in
inc
dec
jg
pop
inc
mov
jecxz
scas
and
jg
cld
mov
stc
or
mov
out
and
dec
sub
pop
and
movsl
xor
ret
enter
jmp
mov
xor
mov
leave
inc
jns
cltd
add
sub
test
xchg
sub
rcrb
mov
dec
out
xor
insb
xchg
iret
push
xorb
insb
pop
mov
mov
movsb
int
adc
mov
sub
jp
dec
inc
dec
stos
adc
dec
mov
in
es
das
jge
mov
push
mov
or
lret
js
or
adc
fdivs
jbe
aas
movsb
mov
nop
jno
popf
xchg
setne
movsl
fldt
and
xchg
jp
movntq
lcall
pop
icebp
arpl
or
pop
sahf
pop
dec
cmp
push
fistl
lock
mov
aas
test
mov
lods
repz
mov
es
sub
adc
int
mov
enter
stos
xor
add
das
lods
das
push
sbb
inc
insb
ljmp
adc
sub
imul
dec
imul
mov
in
jge
sub
aam
out
cwtl
or
lock
cmp
dec
sub
push
push
call
or
pop
inc
pop
cli
inc
fwait
or
shll
imul
pop
cmc
scas
jbe
std
adc
std
lret
push
adc
call
loopne
mov
dec
icebp
inc
xchg
sbb
and
jae
push
lods
mov
scas
les
dec
pop
iret
inc
cmp
jne
pop
in
and
out
gs
mov
mov
cmp
std
jb
arpl
fldenv
movsl
sbb
gs
ret
sbbl
pop
sahf
mov
das
pop
sahf
nop
test
lcall
dec
js
nop
sbb
mov
add
flds
or
fnstcw
es
xchg
push
in
popa
imul
nop
pop
push
xor
or
fndisi(8087
stos
xor
sahf
popf
popa
dec
movsb
jo
aaa
arpl
cld
setbe
mov
pop
xchg
cmp
and
jno
jo
loop
mov
sarl
mov
cld
out
xor
jnp
fidivl
sahf
xchg
stos
in
mov
dec
pop
mov
push
call
pushf
cmp
push
std
mov
jg
shrb
add
jl
das
push
ret
ret
mov
jge
das
adcl
pop
adc
xchg
fcmovu
out
lock
push
dec
mov
pop
sbb
test
or
mov
arpl
xor
js
insb
js
cld
mov
sti
push
call
inc
push
ret
andb
mov
pop
xor
mov
add
test
sbb
dec
sub
repz
lahf
push
dec
bnd
pop
cmp
pop
xchg
in
mov
adc
jo
dec
or
pop
mov
mov
lcall
es
int3
fnstcw
mov
mull
jl
fcomp
dec
mov
sub
push
fs
imull
sbb
mov
ret
testl
mov
pop
mov
mull
or
shrl
mov
fnstsw
stos
and
adc
aas
cmpsl
inc
js
xor
outsl
and
test
add
jmp
out
inc
pushf
sahf
add
cltd
jle
std
mov
mov
push
xorb
cltd
arpl
int3
or
xchg
nop
and
loop
mov
mov
int3
inc
jle
out
add
fs
cmc
dec
in
mov
mov
cmpsb
mov
movsb
mov
and
outsb
jp
test
outsl
xor
dec
gs
fst
xchg
lea
dec
movzwl
or
mov
adc
aam
pusha
in
sbb
mov
jnp
scas
xlat
das
outsl
mov
fdivr
xor
stos
rcll
movsb
bound
adc
aam
pop
mov
es
mov
cli
ds
jns
or
jne
xchg
fwait
into
adc
pop
in
xchg
jne
outsl
push
outsl
mov
pusha
ds
mov
push
mov
outsl
shlb
ret
in
int
push
jmp
scas
and
jo
stc
sbb
insl
xchg
cmpsl
xor
clc
mov
sbb
imul
mov
pop
ljmp
outsl
sub
and
xor
push
test
push
in
push
mov
add
aam
mov
fmull
cli
mov
sahf
push
xchg
les
and
mov
hlt
pop
add
jb
in
mov
sub
pop
movsl
xchg
sub
xchg
xor
insb
fbstp
mov
mov
mov
jae
fs
pop
mov
mov
jge
stos
fs
inc
inc
xor
adc
fldt
in
pop
clc
xchg
jle
adc
push
jbe
jb
nop
push
jo
pop
add
rolb
pop
dec
out
pusha
and
repz
sbb
inc
inc
cmpsl
xchg
push
mov
fimuls
add
and
xchg
inc
xor
add
add
movsl
and
or
mov
cmpsb
repz
cwtl
leave
mov
inc
jle
cld
ljmp
xchg
xchg
mov
push
or
mov
push
lret
mov
sbb
daa
sbb
hlt
enter
fcompl
adc
dec
push
rorl
pop
loope
inc
in
mov
sbb
pop
iret
outsb
popf
ret
jmp
xor
es
inc
lahf
add
push
clc
scas
loope
mov
mov
je
fistps
or
mov
movsl
dec
xchg
xchg
sbb
mov
push
js
mov
nop
subl
insl
cmp
out
sub
test
mov
lea
jns
cmp
mov
pop
cli
inc
outsl
adc
fsts
mov
dec
jbe
pop
stos
inc
sarb
fsubr
icebp
inc
jbe
insl
sub
je
dec
lret
test
or
cltd
addl
cmp
cli
subb
adc
push
js
inc
lahf
mov
out
scas
scas
addr16
cwtl
in
xor
sahf
lock
jo
fdivs
inc
mov
jge
cmp
lcall
stc
xor
or
adc
shrl
mov
mov
mov
rcrl
push
dec
popa
fchs
aam
loopne
jns
mov
fmull
aas
insl
mov
lret
inc
rclb
popf
jmp
cmp
adc
xchg
add
mov
shr
lock
push
cmp
rorb
fildl
insb
jp
add
or
adc
lahf
xor
pop
pop
out
sbb
xchg
push
scas
jge
or
pop
adc
adc
xchg
fadd
jbe
add
sub
fldenv
das
jle
fistpl
or
cld
sbb
adcl
mov
jle
dec
cltd
dec
push
inc
std
stos
push
push
rcrl
loope
adc
insl
mov
pop
sbb
out
cmp
push
mov
fs
add
mov
jns
jo
jne
xor
mov
lods
lock
add
mov
sub
pop
cmpsb
push
mov
mov
cmp
clc
stos
fnstenv
mov
mov
stc
inc
scas
nop
cld
mov
int3
js
mov
xchg
test
std
scas
clc
dec
stos
add
add
enter
sbb
es
stc
mov
addr16
imul
ret
adc
cmp
push
and
cld
inc
add
shll
push
jae
push
cmp
adc
stos
push
ds
mov
push
lret
push
or
fistpll
add
sub
cli
andl
les
xchg
fs
loop
loopne
cmpsl
mov
or
clc
test
lods
mov
lret
nop
push
xor
xchg
xchg
shlb
mov
je
pop
jne
pusha
inc
lods
pop
pushw
lret
lods
and
add
les
inc
and
push
dec
scas
inc
mov
xchg
shl
xor
push
call
and
movsb
rcrl
pop
scas
lret
jno
fisubrs
xor
pop
mov
cmp
cwtl
dec
popa
jnp
push
jl
push
sub
pushf
lds
test
jg
aaa
cld
push
pop
sub
mov
rol
ds
js
xor
add
insb
filds
mov
hlt
int
pxor
test
adc
push
mov
rcll
arpl
fists
pusha
lods
adc
sub
jo
iret
aam
repnz
insb
mov
ftst
push
push
xchg
xchg
test
out
mov
and
adc
das
into
mov
pusha
insb
mov
sub
pop
xchg
inc
push
inc
lcall
and
or
push
push
sub
inc
mov
shl
mov
subl
sub
sub
cmp
dec
mov
jns
inc
sub
inc
inc
mov
sbb
int
jb
mov
or
stos
movsl
mov
push
push
adc
adc
popf
sbb
fdivs
ja
mov
pop
adc
ljmp
and
mov
push
lret
call
repz
shll
in
es
sbb
insb
sub
xor
test
jnp
fstl
and
sbb
inc
arpl
push
pop
ljmp
dec
lret
jns
and
out
mov
roll
cmp
sarb
dec
inc
adc
jle
push
xchg
push
pusha
fiadds
sbb
inc
adc
push
out
pop
roll
mov
in
adc
mov
push
jge
repnz
add
push
lock
shlb
push
jp
pop
jg
mov
jl
adc
or
fs
lods
or
out
mov
in
out
and
outsb
inc
push
ds
and
mov
daa
test
in
push
mov
pcmpeqd
cmp
sahf
lock
popf
stos
xchg
stos
push
push
aas
fwait
dec
push
mov
stc
divl
movsl
int
jge
mov
jnp,pt
or
ss
xchg
je
adc
outsb
aas
iret
adc
add
insl
fwait
jl
insb
les
mov
inc
xchg
mov
dec
cmc
push
shlb
test
inc
inc
cmp
cwtl
cmpsl
inc
addr16
jns
sarb
fsubrl
loop
addl
test
sti
xchg
ficomps
cmpsb
mov
add
subl
jmp
fxch
pop
test
movsb
pop
adc
mov
lret
or
push
lods
arpl
flds
mov
adcl
leave
cltd
push
and
jne
jb
pop
fwait
imul
js
xchg
xchg
inc
cmp
jbe
sub
fidivrl
jg
mov
push
mov
jb
sarl
pop
dec
sub
movl
xlat
ficompl
sarl
mov
outsb
or
adc
adc
sub
adc
add
jns
les
mov
pusha
xorb
mov
gs
setge
test
dec
mov
cmpsl
inc
jmp
enter
or
add
loop
pop
imul
inc
mov
inc
rcll
test
adc
and
push
outsb
xlat
jmp
fists
push
push
xlat
fistpl
int3
repz
dec
adc
push
insl
inc
pushf
mov
dec
gs
int3
fstl
or
in
or
fisttpll
sbb
mov
insb
and
push
aad
setg
imul
dec
jmp
push
xchg
push
dec
fistl
and
shr
push
lret
ja
imul
and
jnp
xchg
dec
pop
push
ss
pop
pop
daa
xor
test
insl
push
ret
hlt
push
xchg
and
fildl
sarl
sahf
jns
xchg
dec
pusha
inc
jne
and
insb
testl
mov
lods
cmp
fdivl
adcb
push
jbe
outsl
mov
std
inc
sbb
ss
and
cltd
movsl
test
inc
sbb
rol
mov
test
add
dec
movb
xchg
xchg
or
fcoml
and
xchg
lahf
rcl
nop
jb
ljmp
test
inc
lods
test
pop
adc
xor
test
dec
scas
push
aam
popa
jp
xchg
jb
ret
dec
leave
addr16
pop
lods
pop
loopne
jmp
pushf
out
mov
xchg
push
fnstcw
jbe
jb
arpl
repnz
std
cwtl
xchg
adc
push
xor
aad
add
jb
test
or
aad
dec
jmp
movsb
out
icebp
pop
addr16
scas
mov
pop
xchg
sub
movsl
aam
push
test
cmc
shlb
and
inc
push
shlb
data16
jnp
pushf
adc
push
gs
inc
es
lcall
stc
adc
fwait
cs
or
gs
mov
fcoml
mov
jno
dec
bound
shrl
inc
loop
xor
dec
mov
nop
xor
aas
sub
scas
xchg
jle
mov
mov
outsb
in
sub
inc
mov
mov
je
add
jmp
stos
enter
out
jb
cmp
insl
or
test
push
ficoml
sbbl
lret
cmpsl
jecxz
fs
push
faddl
mov
xor
dec
subb
aam
xchg
dec
les
lock
inc
adcl
sub
mov
push
fstps
in
xchg
arpl
sub
sub
xchg
in
int3
rolb
or
imul
fs
sub
les
add
pop
dec
in
mov
ficoms
inc
insb
hlt
push
arpl
inc
push
mov
sbb
push
mov
xchg
je
adc
inc
push
pop
push
in
mov
jl
lret
mov
mov
mov
or
hlt
outsb
push
iret
add
repnz
jle
sti
mov
ret
sub
push
inc
or
sub
inc
outsl
stos
add
adc
and
out
sbb
imul
sbb
adc
lret
adc
lret
push
clc
scas
je
rcr
ds
lcall
sarb
or
ds
lock
jmp
pop
pop
or
cld
loopne
pop
add
sbb
adc
adc
clc
cs
test
shll
mov
aad
fwait
mov
in
and
cmp
ljmp
push
aad
push
js
pushf
ror
sti
shlb
sub
jb
outsb
xor
lods
jns
mov
popa
adc
test
idivl
sub
mov
or
leave
push
mov
and
mov
push
pop
addb
and
mov
icebp
into
fwait
mov
hlt
negl
push
int3
daa
decl
pop
inc
cmp
dec
push
dec
mov
add
loop
jmp
jae
push
mov
rcr
add
scas
xchg
jge
add
outsl
adc
dec
or
dec
dec
fstps
out
dec
mov
inc
shr
std
mov
int3
sub
push
jo
pusha
xchg
xchg
pop
push
adc
cmpsb
mov
xchg
push
inc
fwait
aad
bound
inc
inc
pop
repz
xchg
lret
aad
shl
xor
jnp
mov
push
icebp
xor
shll
sti
dec
icebp
push
or
inc
mov
jb
add
dec
pop
sbb
sbb
inc
sub
xor
inc
jno
inc
ds
enter
mov
jge
sti
push
rorb
arpl
pop
outsl
es
shll
lock
inc
xchg
inc
dec
push
addr16
ljmp
push
mov
pop
bound
mov
cmp
sub
mov
and
pop
sbb
pusha
xor
mov
jecxz
je
std
sbb
das
sbb
inc
clc
cld
and
inc
in
int3
push
or
mov
jbe
call
mov
std
int3
rclb
jae
test
pusha
add
clc
jl
mov
outsb
jno
out
xor
and
xchg
jmp
lahf
cmp
inc
mov
cmp
popf
xchg
jg
inc
mov
and
fcomip
lods
jns
mov
iret
shrb
mov
inc
popa
jae
push
mov
push
sti
push
mov
adc
fidivrl
cmp
ss
out
lods
icebp
out
pop
insb
enter
xchg
ja
mov
scas
sbb
xor
mov
xchg
test
cwtl
mov
jo
jo
dec
cmp
push
xchg
adc
pushf
mov
and
adc
add
ljmp
adc
pop
dec
or
mov
xlat
sti
xor
cmp
mov
cwtl
pusha
xchg
outsb
fldpi
movb
mov
hlt
xor
idivb
data16
xchg
nop
inc
jae
rol
ds
imul
int3
repz
out
and
push
loopne
popw
sbb
and
movsb
mov
ss
out
sub
xor
ja
aam
shr
inc
pushf
push
push
repz
push
or
fisttps
loopne
repz
xchg
pop
xor
sub
pushf
lret
mov
dec
or
mov
pop
loop
dec
jno
dec
and
mov
sub
into
push
and
js
rorl
cmpsl
repz
mov
cld
fpatan
push
ja
jno
xorb
insl
mov
rcll
inc
mov
mov
jbe
popf
and
or
mov
pushf
sbb
repnz
aas
adc
int3
test
jecxz
lods
xor
popf
popa
pop
push
add
pop
in
sub
ret
sti
push
pop
sbb
pop
cwtl
sub
outsl
sti
push
ja
fcmovnbe
jle
rorl
jno
movsl
fsubl
cltd
pop
fwait
pop
cltd
mov
dec
lret
sub
mov
mov
inc
aaa
cmp
cmc
cmpb
or
and
xor
movsl
repnz
cmpsl
in
mov
xor
loopne
lret
sarl
ret
rcll
stos
xlat
mov
and
xchg
call
xchg
cmpsl
loope
icebp
or
cmp
cmp
add
and
icebp
inc
pop
dec
inc
ret
and
mov
mov
adc
mov
add
mov
jl
movsb
mov
pop
xor
aas
lahf
rcr
xlat
divb
bound
lds
cmp
push
mov
clc
lods
sahf
adcl
sub
push
adc
or
adc
das
pop
ficoml
cmp
mov
div
movsl
in
dec
into
movsb
cmp
lds
out
mov
notb
adc
mov
push
mov
inc
mov
outsl
pop
loop
jge
and
push
jne
mov
ret
pop
dec
aas
cmpsb
inc
iret
out
adc
mov
dec
pop
pusha
aas
sub
leave
test
fnstcw
dec
outsb
and
mov
mov
inc
fwait
jns
aam
inc
adc
icebp
and
xchg
testb
ljmp
das
insb
adc
lret
sub
inc
out
fisubs
xor
jne
ret
mov
xchg
repnz
pxor
add
mov
pop
mov
test
cmp
jmp
sbb
jle
mov
data16
xchg
loope
rcrl
mov
mov
sbb
push
xor
int
mov
cmp
test
mov
into
insb
popf
sbb
pusha
mov
push
sub
and
movsl
push
repnz
je
push
ljmp
insl
dec
cmc
jno
rorb
repz
filds
stc
ds
mov
push
leave
mov
bound
mov
fisubs
in
dec
pusha
push
andb
xchg
mov
xchg
fdiv
sbb
or
shlb
test
jle
dec
gs
push
dec
push
stos
vpmacswd
mov
dec
sub
ds
jns
outsb
inc
sbb
jno
adc
add
inc
mov
insl
aas
mov
sbb
divb
pop
arpl
sbb
hlt
jns
add
popa
fcoml
jo
das
lret
xor
ja
jns
dec
add
js
mov
cmpsl
cmp
fnstenv
add
mov
aas
pop
cmpsb
sub
jno
mov
push
cmpsb
pop
pop
push
insb
int
mov
dec
mov
push
mov
inc
cmpsb
pop
push
inc
mov
mov
lret
popf
jnp
mov
and
or
out
rcrl
adc
mov
mov
scas
pop
out
shll
rol
xlat
addr16
cmp
sub
pop
loopne
or
add
jecxz
data16
jnp
cltd
adc
pop
add
and
dec
imul
fldenv
ret
repnz
clc
mov
cmp
out
mov
add
mov
lods
iret
testb
test
shrb
cmp
ja
ss
cs
in
jb
les
addl
inc
clc
mov
out
mov
cmp
and
fwait
xchg
push
add
inc
xlat
cmp
js
fs
lods
pop
jae
scas
jno
cli
jb
jae
aaa
add
lods
inc
mov
in
arpl
aas
sub
repz
into
lahf
sub
xorb
je
repz
in
imul
xchg
cmp
mov
fisubrs
shr
sub
out
cwtl
cmp
push
addb
add
sub
pop
mov
and
mov
inc
fs
sub
mov
push
mov
push
mov
inc
shl
push
jne
aaa
push
loopne
sub
int3
mov
decl
jno
repz
lds
pop
shrb
ficomps
mov
repz
je
jnp
inc
imul
dec
jns
andb
cmp
ds
ret
cli
inc
call
lods
int
cmc
push
incl
fsubrs
cmp
adc
mov
mov
imul
ja
or
push
outsl
mov
xchg
arpl
xchg
jecxz
and
adc
fdivl
push
xchg
repnz
je
push
adc
aas
xchg
and
adc
jae
push
clc
sahf
pop
dec
sbb
movsl
adc
adc
or
and
mov
bound
faddl
out
mov
mov
mov
xlat
jg,pn
adc
shlb
arpl
test
push
shll
push
sbb
mov
ret
scas
daa
test
mov
mov
imul
sub
pop
add
popf
inc
pop
push
std
mov
mov
push
xor
push
sti
aad
daa
sti
xor
or
jecxz
sbb
ss
or
push
shrl
cmp
inc
arpl
xor
outsb
pusha
mov
andl
mov
and
ljmp
adc
add
mov
jp
repnz
mov
loopne
out
sub
daa
test
or
cmpsb
and
or
inc
jbe
sbb
movswl
jecxz
and
iret
xor
inc
xchg
test
out
mov
gs
insl
push
pop
xchg
aam
repz
divl
ret
outsl
or
mov
popa
aas
sub
or
lods
cld
dec
jl
dec
cmp
jge
jne
imul
sbb
mov
and
pop
cs
in
mov
dec
daa
loopne
inc
pop
fbstp
pop
ljmp
adc
fisttpl
pavgw
push
int3
push
sbb
mov
pop
mov
cltd
pop
shrl
ja
inc
dec
test
fs
add
outsb
mov
stos
sub
or
pop
or
ss
or
in
je
imul
sbb
add
aad
xchg
and
mov
imul
mulps
cmpsb
pop
jecxz
cmp
ret
loope
cld
sub
jmp
add
movsb
push
push
add
cmpb
jnp
jb
in
push
out
push
push
pop
outsl
mov
aas
sbb
leave
dec
mov
push
adc
sub
fs
sbb
lods
in
adc
in
jmp
arpl
mov
mov
add
es
lods
jno
sysret
mov
add
fwait
xchg
pop
push
lock
mov
int
fbld
fcmove
lahf
xchg
xor
test
inc
push
mov
push
shr
pop
imul
mov
jb
fnsaves
clc
lods
mov
daa
dec
pop
pop
bound
scas
mov
jo
les
push
xor
mov
pusha
sbb
scas
filds
inc
aaa
xor
das
sub
mov
ret
xchg
jnp
cmp
xor
scas
mov
roll
cmp
into
imul
inc
mov
cmp
push
xor
popf
insl
add
xor
lret
bound
mov
adc
repz
xchg
sti
ja
xchg
pop
int
pop
jge,pn
push
push
push
mov
xor
lds
xor
in
jmp
xchg
scas
in
xorl
pushf
popf
stc
pushf
xchg
xor
inc
lahf
mov
lret
dec
sbb
mov
pand
pop
cltd
pop
jno
leave
jne
dec
nop
enter
add
mov
movsb
jns
stos
pop
inc
imul
and
movsl
add
and
addb
and
lcall
cld
fbld
sbbl
out
adc
sub
outsb
xchg
out
mov
stos
cmpsl
ds
or
fildll
pusha
fbstp
testb
int
mov
jns
int3
adc
insl
outsb
inc
xor
sbb
lret
push
pop
into
pop
pusha
je
ds
outsl
sub
pop
std
push
movsl
std
enter
adc
inc
shll
addr16
pop
and
xor
lahf
icebp
mov
add
or
cltd
mov
mov
xchg
in
jecxz
push
clc
push
dec
pop
or
lahf
mov
stc
loopne
outsl
mov
in
imul
mov
pop
insb
ljmp
dec
notb
push
repz
mov
ficoms
lds
int3
outsb
loope
mov
dec
xor
lock
xchg
jmp
ret
add
push
popa
xchg
xchg
adc
in
push
pop
aad
iret
mov
add
rcrl
call
lret
insl
jmp
and
mov
xchg
repnz
stos
loop
insb
jecxz
sbb
aad
inc
loope
cmp
xchg
sub
movsb
int3
cs
push
loope
rclb
pop
in
jns
outsl
scas
push
jne
jle
push
lcall
mov
and
dec
jo
lods
popf
scas
loope
std
cmpsb
xor
pop
push
cwtl
sbb
shll
jnp
inc
and
push
testb
daa
rorl
popa
adc
aad
lahf
and
test
xchg
inc
repnz
mov
rcrl
xchg
pop
or
sbb
xor
shlb
xor
out
cmpl
push
xchg
sbb
jo
fistpl
out
aam
add
xchg
icebp
cmpsb
aaa
and
adcb
adc
out
sub
xor
push
pop
neg
test
je
ljmp
mov
dec
sbb
inc
pop
or
stc
xor
pop
mov
lret
in
xchg
sbb
cld
sub
xor
mov
sub
sub
aaa
fwait
movsb
inc
mov
popf
push
jp
loopne
inc
inc
gs
je
or
push
cmp
xor
mov
aam
jecxz
and
out
mov
inc
imul
das
adc
jns
sub
pop
xchg
mov
cmpsl
mov
pop
and
enter
xchg
aad
movsb
orl
inc
xor
cs
cmp
sti
sti
nop
mov
imul
movsl
or
fldenv
jae
mov
test
rcr
mov
das
jmp
out
sahf
mov
mov
lock
push
dec
clc
shr
into
es
or
jo
popf
or
mov
mov
scas
xlat
mov
pop
mov
mov
int3
mov
cwtl
add
push
ljmp
dec
dec
out
adc
popa
pop
dec
adc
vcvtps2qq
pop
cld
mov
inc
jb
mov
popa
leave
adc
pop
sarl
scas
mov
xor
dec
jae
gs
mov
lods
sarl
sub
mov
lcall
mov
mov
jmp
stc
cmpb
test
xchg
jne
popa
adc
push
xchg
test
mov
xor
jecxz
pop
push
imull
mov
pop
push
sbbb
mov
movsl
mov
and
aaa
add
adc
add
mov
mov
cmpsl
cmove
imul
movsb
popa
insl
sbb
fsts
dec
mov
mov
dec
and
fabs
jb
or
mulb
and
push
je
mov
push
insl
adc
in
inc
repnz
dec
mov
dec
fcompl
bound
shll
shll
fmull
test
aad
jne
orb
ficomps
cmpsl
shrl
incb
lock
sub
popa
je
mov
mov
cltd
clc
aad
or
lahf
sbb
or
or
sub
frstor
loopne
and
push
into
icebp
fisubrl
push
addl
mov
xchg
das
sub
fsts
shlb
hlt
adc
jg
andl
fistpl
imul
cli
mov
mov
shl
xchg
in
fcoms
daa
sahf
sti
xor
mov
cmpsb
stos
inc
cltd
repnz
mov
out
loopne
test
dec
mov
movsl
es
stos
sub
test
dec
leave
adc
cmp
dec
inc
sub
ljmp
loop
out
mov
push
xor
xor
or
popf
push
sbb
sub
popa
cmp
jns
lcall
xor
and
pop
fists
mov
mov
cmpl
das
mov
sub
aad
mov
aam
addr16
orb
imull
or
into
cmp
arpl
sub
popf
push
add
and
sub
mov
mov
or
leave
jle
adc
inc
loopne
cltd
push
jns
mov
mov
jb
cmp
jb
loopne,pt
dec
out
ljmp
insb
lock
push
popf
push
enter
js
inc
sahf
icebp
mov
jmp
ret
adc
cs
mov
ja
sbb
mov
popf
add
ja
lds
dec
mov
icebp
insb
mov
mov
aad
clc
and
fstl
mov
add
mov
cs
or
dec
jns
stos
mov
inc
cwtl
cmpl
fcmovne
add
movsl
cmp
push
mov
repnz
es
inc
mov
pop
aam
or
into
fsubl
xchg
push
out
les
test
dec
inc
pop
leave
pop
adc
call
test
frstor
and
hlt
mov
cmp
addr16
mov
fsubrl
cmpxchg
add
jo
pop
add
pop
inc
ficompl
xor
pop
loope
arpl
cmp
loopne,pt
or
mov
lea
sub
in
daa
test
push
cmpsl
cld
xor
out
movsb
push
mov
aas
fstl
movsl
jnp
xor
push
insb
dec
jno
or
out
sbb
cs
mov
mov
xor
addr16
jmp
push
sub
pop
movsl
insl
aas
js
or
into
adc
loopne
repz
movsl
xchg
loopne
rcr
iret
imul
ja
mov
movsb
mov
mov
xchg
and
nop
jnp
daa
push
or
lea
rclb
push
xchg
jmp
pop
imul
sbb
icebp
mov
cwtl
insl
ret
ljmp
xor
mov
stc
pop
and
inc
popa
sbb
hlt
or
lds
cmp
adc
lds
setnp
ficoml
lock
cs
dec
rcl
mov
leave
test
adc
xchg
jb
mov
fcompl
cmpsl
daa
mov
adc
xor
shlb
in
cli
mov
lret
mov
sub
mov
ds
pop
loopne,pt
cwtl
int
mov
sbb
incb
mov
dec
push
gs
inc
mov
adc
mov
or
lock
and
sbb
sbb
lret
dec
mov
addr16
xchg
push
inc
add
int
pushf
add
fstpt
xor
sub
das
lods
in
pop
mov
sahf
sbb
divb
call
dec
int
and
lods
cmc
lds
push
daa
jne
aaa
fisubrs
or
push
rcrl
cmpb
out
jae
push
and
push
sbb
cmp
int3
insl
je
cmp
popf
dec
or
imul
dec
xchg
scas
adc
push
or
test
js
push
testb
stos
dec
jns
jge
pop
ret
jns
and
rolb
xchg
sbb
sbb
sbb
dec
fcomp
sub
clc
shlb
pop
outsb
js
mov
fs
in
add
cmpsb
xchg
xchg
pop
movsl
add
sub
xchg
fcomps
dec
fs
test
lea
inc
sub
jecxz
rclb
aam
jb
mov
xchg
out
fcomi
cmp
or
cltd
loope
aas
xchg
das
aad
iret
jne
pop
pusha
fwait
jae
aas
nop
pop
movl
shl
inc
cs
gs
and
loope
hlt
dec
lods
test
cltd
add
arpl
les
addr16
daa
mov
xor
sub
inc
out
ror
lret
popa
xor
test
jmp
loop
cmp
sub
fmul
cld
and
mov
add
loop
mov
push
pop
ja
cmp
out
in
lods
mov
fs
sbb
mov
jl
sbb
subb
test
in
push
pop
sahf
sbbl
dec
or
push
jge
add
mov
int
mov
pop
iret
xor
dec
or
cmp
out
fisttpll
push
outsl
out
inc
cmp
testb
cmp
enter
sbb
nop
or
hlt
add
dec
dec
cmp
push
pushf
xor
popa
pop
jg
cli
push
lds
mov
repz
sbb
inc
cli
or
fidivrl
ud0
push
fwait
and
inc
xor
fs
dec
xchg
cwtl
dec
inc
sub
mov
daa
inc
movsb
push
mov
out
xchg
sub
test
out
pop
gs
sbb
jg
fs
push
dec
jo
sbb
mov
or
aam
cmc
cmp
xabort
mov
addl
jge
out
lahf
jmp
ss
adc
loopne
sbb
fcomip
daa
jns
and
or
pop
lahf
outsl
insb
lret
lret
jmp
xchg
dec
outsb
and
push
outsb
loopne
push
ror
mulb
les
enter
and
imul
cmpb
dec
inc
movsb
or
mov
pop
and
adc
inc
outsb
ficomps
push
sub
movsl
sub
nop
cli
adc
xor
add
fs
lock
imul
mov
mov
cltd
pop
test
in
and
scas
out
stos
inc
nop
xor
mov
sbb
ret
out
add
test
mov
or
dec
lds
aas
add
jle
jmp
stos
scas
xchg
mov
mov
in
es
ret
shlb
loopne
and
adc
clc
pop
ret
push
or
sbb
repz
mov
add
out
or
repz
test
dec
mov
mov
test
cmp
cmc
dec
xor
cmpsl
xchg
cmp
mov
mov
xchg
xlat
or
xor
jbe
repnz
outsl
pop
dec
add
movsl
roll
bound
hlt
or
xchg
mov
jl
cmp
lods
in
lcall
lahf
aam
arpl
jmp
jmp
jno
mov
rol
push
jns
jp
les
dec
outsb
hlt
or
fnsave
idivb
mov
add
lahf
scas
adc
rolb
lock
outsb
xor
addr16
jmp
xchg
jbe
mov
xchg
ret
into
fcmovnu
xorl
jmp
out
mov
movsb
sbb
nop
jge
xor
jle
lcall
sbb
bswap
dec
lea
sub
imul
sti
adc
inc
push
out
cmc
imul
fstpt
cli
hlt
pop
pushf
mov
mov
push
dec
and
aad
ret
pop
sbb
mov
inc
fsubs
loope
andb
or
pop
aaa
cmp
sahf
incl
dec
jae
in
push
and
xchg
out
ja
ret
idivb
insb
dec
stc
xor
rcrb
jo
das
stos
shrl
imul
test
dec
sub
ljmp
leave
push
aas
ret
pop
push
dec
in
icebp
out
jne
sub
sbb
sbb
cs
addr16
push
outsl
xchg
dec
lock
xor
push
add
leavew
pop
xor
mov
sub
fsubl
pop
push
jl
std
in
pop
popf
int
ficompl
dec
xchg
xchg
lret
jmp
pop
std
add
sbb
xchg
icebp
popa
add
in
daa
std
loopne
pop
push
xchg
and
xchg
aam
sub
out
dec
dec
pop
inc
hlt
push
cmp
xchg
outsl
jle
push
outsb
pusha
push
inc
push
and
cmp
insb
iret
rcr
and
filds
lods
mov
inc
cld
push
sti
pop
enter
inc
mov
sbb
lods
push
pop
dec
cli
inc
bound
bound
test
shrb
dec
fisubl
xchg
pop
mov
dec
aaa
test
js
hlt
pop
cmpsl
push
mov
aam
dec
add
arpl
adc
mov
mov
push
xor
inc
les
xchg
sub
lock
xchg
out
sti
xchg
mov
jno
movsl
push
mov
push
push
ds
sub
jns
pop
xchg
jmp
xor
out
bound
push
movsb
cmp
cmpsb
lcall
sbb
ljmp
cmp
pop
stos
push
xchg
jns
subb
mov
pop
pop
jo
out
mov
andl
inc
adc
inc
adc
add
pop
fcmovnu
jns
mov
mov
test
fisubrl
rorl
xchg
pop
out
cmc
pop
repnz
and
enter
inc
ja
or
insl
lods
inc
jp
test
sub
pop
mov
jmp
sub
xlat
sub
lcall
out
es
lods
push
mov
dec
daa
dec
lds
out
ss
dec
pop
pushf
pop
addr16
add
and
jo
pop
pop
add
in
or
or
bound
lods
dec
scas
xchg
inc
faddp
rcrb
add
sbb
negb
call
mov
dec
sbb
xor
lret
fwait
push
xchg
addl
sub
int
lds
inc
pop
or
rcl
stos
stos
and
xor
fstps
cmp
dec
cmpsb
jno
bound
mov
int3
sub
dec
lds
scas
add
fwait
mov
scas
and
ret
xor
out
or
insl
cmc
cmpsl
cld
inc
add
fldl
push
mov
pop
orb
jno
mov
aaa
xor
aad
sti
imul
mov
test
aad
sub
jno
sbb
push
jl
sbb
push
decb
adc
add
ds
test
pop
pop
dec
add
push
jo
dec
ret
sti
data16
cmpsb
es
or
mov
inc
mov
sti
in
mov
add
daa
xchg
movl
xor
mov
push
mov
fisubrs
enter
xor
loope
lcall
inc
or
in
js
jb
pop
mov
cmp
xchg
pop
fmuls
loop
sbbb
dec
lea
jae
pop
imulb
sbb
sub
in
movsb
dec
cmpxchg
dec
push
in
aam
nop
push
sbb
push
imull
cltd
sbb
push
jp
fildl
jnp
or
push
inc
inc
adc
int
sahf
sub
mov
ret
push
shlb
nop
dec
loopne
xchg
mov
test
jae
dec
loopne
jbe
loope
xor
scas
mov
jg
push
adc
in
mov
cwtl
jg
inc
scas
loopne
jge
mov
psrlq
adc
mov
pop
sub
in
mov
out
adc
jns
cmpsb
push
push
sarb
cmp
mov
jb
ffreep
xchg
push
pop
push
and
mov
xchg
nop
add
xor
sub
int
call
mov
outsl
push
clc
push
out
sbb
adc
adc
cmp
scas
jl
xor
rol
dec
cmp
push
jle
xchg
ficoml
std
pop
push
movsb
add
scas
cmp
or
movsl
cmpl
lds
mov
insb
or
add
push
cmpsb
pusha
sub
jae
dec
inc
inc
pop
inc
jno
loop
sub
ja
sub
nop
scas
xorl
mov
pusha
and
jbe
dec
test
leave
mov
les
or
dec
cld
mov
fsubrl
jge
test
xchg
loopne
mov
cld
cwtl
test
push
sbb
leave
pop
sub
adc
popa
cld
and
xchg
test
sbb
in
sti
orps
stos
cmp
out
icebp
inc
lods
js
mov
int
sbb
push
push
and
push
xchg
enter
das
mov
push
leave
out
xchg
repz
cmpsb
push
cld
pop
test
xchg
inc
cmp
leave
int
mov
push
nop
rcr
dec
pusha
pop
mov
mov
js
movsb
scas
int3
cmp
sahf
test
dec
imull
sbb
pusha
sbb
fstl
popf
push
mov
push
sub
addr16
inc
mov
add
jne
fldcw
mov
push
mov
xor
in
stos
mov
es
jbe,pt
mov
push
cmp
sbb
mov
jecxz
pop
inc
frstor
jns
mov
lods
lret
sbb
mov
dec
jnp
adc
out
lods
xchg
mov
jbe
jns
fcomip
das
into
lcall
mov
cmp
mov
ss
push
push
shll
lods
inc
mov
xor
int3
push
imul
jb
jle
dec
sahf
call
push
out
lret
loop
shl
adc
and
in
mov
xchg
sbb
cmp
outsb
jb
xor
jg
dec
and
xor
dec
mov
jp
int
clc
lret
ficoml
divl
dec
xlat
xchg
sbb
mov
xchg
dec
out
pop
lahf
or
jo
push
dec
sbb
push
loop
cwtl
subl
fcmovnu
pop
popf
add
jb
cmp
jp
jge
adc
mov
cwtl
xor
pop
shll
push
addl
mov
fsts
stos
rcrl
dec
jo
scas
test
rol
jns
lea
adc
push
scas
lret
mov
lahf
sbb
add
sub
aaa
leave
in
loopne
imul
addr16
in
sub
mov
lds
fldenv
aas
data16
popf
addr16
test
fldenv
jmp
cmp
cli
mov
mov
add
arpl
add
movsb
mov
and
cmp
pusha
mov
sub
cld
ds
int3
xchg
daa
repnz
push
mov
dec
mov
test
lds
pop
push
mov
loope
stos
sbb
aaa
loop
mov
dec
push
adc
inc
repnz
mov
xlat
adc
cmp
cmp
decl
js
and
fs
add
dec
movsb
jno
xor
popa
or
mov
fmuls
inc
xor
and
insb
pop
xor
cmpsl
fnstsw
xor
stc
sub
mov
inc
sbb
pop
test
xor
xor
in
ret
fldenv
pop
insl
push
fisubrs
pop
inc
jns
inc
je
fisttps
in
mov
sbb
jmp
mov
sub
and
dec
sbb
mov
ja
push
cwtl
daa
sub
dec
mov
pop
push
in
clc
pop
js
pop
shlb
test
sti
xchg
rcrb
ror
sbb
mov
and
outsl
xchg
out
fwait
mov
test
roll
mov
adc
repnz
imul
add
jb
inc
shrl
fldenv
mov
shr
sbb
scas
pop
inc
inc
test
outsl
int3
aaa
mov
pusha
in
out
daa
sub
push
jle
lahf
mov
lret
inc
sbb
dec
fdivs
inc
fwait
lea
std
xorl
daa
xchg
movsb
pop
xchg
imulb
call
loop
xchg
fs
cltd
pop
aam
pushf
aaa
push
lock
mov
sbb
cmp
lds
inc
ficoml
jmp
mov
sub
lods
andb
xor
adc
shl
pop
cmp
dec
sahf
sbb
push
dec
int3
lods
cmp
fwait
test
dec
and
dec
mov
cmp
insl
xchg
andl
movl
lods
xchg
push
rolb
xor
pop
cmp
sbb
sub
mov
mov
or
in
add
lahf
test
aad
std
push
mov
stos
push
cmp
jmp
dec
daa
in
mov
lods
inc
inc
movsl
jmp
jle
sbb
sub
ds
xorb
adc
jg
push
xor
push
and
sub
mov
in
gs
testb
outsb
call
adc
leave
fdivp
test
mov
cld
mov
jp
push
ret
inc
jne
js
test
sbb
pusha
sub
insl
incb
pop
popa
rcl
inc
xchg
pop
or
test
aas
mov
int3
test
push
je
stos
lret
lea
mov
push
scas
adc
push
ds
sub
gs
jge
in
stos
lds
imul
xchg
push
xor
sbb
in
stos
out
and
dec
and
loop
int
mov
insb
enter
add
jnp
in
std
add
cltd
imull
popa
xor
cmp
and
xor
cmp
repnz
insl
and
aaa
inc
ljmp
into
scas
cmp
cltd
and
xchg
in
mov
sub
daa
iret
dec
adc
pop
push
lock
fucomi
jnp
sahf
xor
sub
push
jle
scas
cmp
add
test
xchg
mov
mov
loopne
add
adc
mov
and
imul
rclb
mov
das
fwait
adc
xchg
add
push
sarw
repnz
add
addb
push
out
sub
pop
ss
insb
push
mov
or
cmp
jmp
fsubrs
andb
rcrl
jp
mov
rol
xchg
cmp
dec
sahf
repnz
mov
mov
lcall
es
mov
leave
pop
push
pop
and
icebp
jae
pop
cli
or
outsb
mov
std
mov
mov
fdiv
cs
dec
cmp
repnz
test
cltd
xorl
push
dec
push
repnz
mov
adc
fmull
xor
loopne
mov
orl
lods
test
pop
sbb
and
andb
push
xchg
mov
scas
lea
leave
xorl
inc
mov
add
mulb
loopne
jns
imul
aad
mov
fsubrs
mov
jg
cmp
clc
fistl
enter
pop
test
fsubl
ds
pop
rorl
or
pop
dec
cmpl
test
mov
rclb
sub
cmpb
xor
arpl
jecxz
sbb
dec
mov
insb
test
sub
xor
imul
xor
loope
xor
and
cld
popf
mul
pop
or
sbb
mov
stos
cmp
push
ficomps
and
iret
hlt
push
adc
mov
jp
lock
xchg
or
stc
mov
pop
xor
and
hlt
je
push
test
das
enter
jb
out
out
add
repz
dec
pop
repnz
push
xor
push
dec
xchg
aas
xlat
xor
cltd
js
xor
sbb
das
sub
scas
cmpsl
data16
aad
pop
lods
mov
icebp
fiadds
fs
push
inc
xorl
subl
jp
or
xchg
push
lret
sbb
adc
mov
add
add
cmp
lea
or
jge
arpl
into
inc
aad
cwtl
stos
xchg
clc
jb
icebp
add
cmp
insl
std
mov
sbb
stos
insl
xchg
xchg
xchg
mull
push
cmp
sti
xor
cmpsb
lret
das
pushf
adc
dec
or
mov
xor
pop
mov
sti
jns
pop
mov
popa
in
das
flds
rorb
mov
dec
inc
pop
xchg
lahf
gs
jno
dec
add
jl
imul
inc
pop
push
mov
mov
outsl
mov
cwtl
sbbl
fmull
adc
mov
stos
lea
inc
dec
mov
fwait
jg
mov
dec
push
mov
xchg
daa
mov
outsl
or
mov
outsb
aam
repnz
outsl
xor
divl
add
inc
inc
clc
int3
sahf
pushf
in
jb
and
lcall
mov
mov
adc
push
cli
xorl
and
lea
xchg
scas
xor
xlat
and
push
inc
je
xchg
popa
insb
movsb
into
adc
andb
stc
fucomp
or
cmpl
sub
pop
mov
popf
mov
icebp
hlt
xchg
sub
sarl
xor
mov
das
out
jmp
sbb
dec
sbb
mov
bound
or
mov
jno
filds
add
pusha
in
into
pop
shrl
stos
add
sti
push
rclb
push
jb
cmpl
cwtl
loope
shl
sbb
fmul
fs
ds
les
xchg
dec
mov
lcall
sub
cwtl
push
test
je
jnp
xchg
pop
mov
in
pop
pushf
enter
sub
hlt
arpl
or
pop
mov
inc
jmp
jno
and
fidivl
mov
cltd
inc
and
sbb
mov
and
mov
lds
ret
push
sbb
dec
out
dec
mov
push
je
and
xchg
add
jg
push
das
popf
xor
and
inc
movsb
ljmp
pop
push
xchg
imulb
das
inc
sub
mov
ret
push
sbb
push
mov
sbb
jle
sbb
ret
arpl
or
popf
cltd
mov
bound
popa
in
xchg
xchg
scas
pop
inc
jg
out
inc
movsb
sub
push
push
jo
cwtl
add
cmpsl
ljmp
mov
sti
dec
mov
inc
rclb
adc
or
jo
jnp
cmpsb
dec
aas
cmp
jnp
pop
mov
fldenv
flds
mov
jle
std
sbb
push
and
test
test
imul
jnp
loop
fstp
or
cmpps
push
push
sub
adc
push
cli
int3
and
adc
xchg
xor
shrb
rclb
push
xchg
push
mov
pop
lock
lcall
int
mov
in
adc
sub
pop
cld
outsl
sbb
adc
sub
sbb
push
add
push
push
and
jns
gs
test
es
clc
dec
and
icebp
paddd
xor
lock
mov
jmp
push
ret
mov
pop
inc
in
jns
sbb
mov
lea
jne
add
sub
ja
cltd
adc
cmpsl
push
insl
adc
mov
popf
rolb
jecxz
sub
test
pushf
iret
jmp
test
xor
hlt
test
mov
mov
imul
xchg
ret
adc
inc
outsb
and
mov
inc
lock
pop
push
shr
lods
fsubrs
fwait
lret
lods
jbe
mov
fsub
jno
fldt
push
inc
cld
test
mov
mov
push
jecxz
fcomps
inc
jbe
les
mov
cld
insb
adc
addr16
scas
cmp
sub
push
mov
inc
rolb
ss
test
mov
shlb
add
push
sbb
and
mov
jnp
call
sub
arpl
enter
push
daa
or
testb
cmp
fnstsw
js
mov
aaa
dec
pushf
loop
push
and
into
les
lahf
testb
aas
ret
mov
push
ret
mov
pop
mov
fstps
shll
xchg
js
sub
xchg
push
int
lea
std
xor
mov
jae
pop
jl
cmpsb
pop
imul
lods
in
jo
mov
mov
lcall
adc
shlb
fbstp
pop
jecxz
lret
push
xchg
cmc
ds
pop
jge
insb
add
in
inc
mov
inc
push
cmp
ds
negb
test
mov
ds
int
les
xor
movsb
and
test
xchg
push
dec
adc
add
mov
and
or
dec
repz
jl
sahf
cmp
out
mov
dec
ss
mov
jge
push
mov
dec
movsl
lret
dec
bnd
inc
insb
mov
mov
cmpsl
ds
into
adc
jecxz
loope
jns
frstor
stc
ja
xchg
push
popa
js
pop
cmp
je
jbe
cmp
jmp
es
lea
pop
sahf
js
movsb
pop
cs
add
mov
aad
or
push
lock
stc
xchg
push
cmpsl
divl
hlt
mov
and
mov
mov
xchg
test
sbb
popa
cmp
clc
push
dec
lahf
push
sbb
loope
or
ficomps
inc
mov
loop
mov
pop
push
in
imul
and
pop
fdivrl
mov
pusha
jns
or
sbb
xlat
or
push
repnz
cwtl
cmp
mov
pop
bnd
les
cli
scas
or
or
mov
xchg
or
in
pop
cmp
push
scas
pop
sub
in
pusha
dec
mov
adc
pop
fmulp
xlat
das
cmp
mov
std
jp
and
xorb
sub
cmp
xor
push
stc
xchg
test
repnz
addl
or
out
inc
push
sbb
pushf
sbb
adcl
jae,pt
pop
testl
leave
jno
mov
push
xchg
sub
sbb
test
shl
cmc
inc
add
je
add
pop
push
and
mov
dec
mov
xor
lods
leave
cmp
fs
jmp
jge
adc
enter
and
mov
add
inc
add
cmp
lret
jg
das
sub
jmp
daa
xchg
movsb
and
jne
lcall
test
jno
cmp
push
jb
push
add
or
adc
in
out
or
push
cmp
test
xchg
in
sbb
mov
filds
xchg
sbb
pop
xchg
adc
mov
sub
cmp
mull
add
inc
and
aas
mov
pop
pop
dec
into
jnp
cmp
sbb
pop
jmp
fstps
divb
rcrb
iret
stc
sbb
scas
mov
jmp
add
pop
pushl
dec
mov
xchg
mov
lds
ss
jp
pop
lea
mov
lock
testl
scas
pushf
adc
sbb
push
js
push
dec
xor
or
mov
clc
mov
out
rcrl
inc
add
cltd
xchg
mov
mov
xor
xchg
xchg
loop
fs
sahf
daa
adc
pop
sub
or
xor
fldcw
clc
mov
test
xchg
pop
leave
sub
adc
sub
fwait
xor
shlb
push
xchg
push
pop
xchg
xor
outsb
xchg
stos
stos
lock
fisubrs
or
fsubrl
cmp
jns
in
out
mov
imul
je
push
adc
jno
cmp
add
enter
repz
xchg
push
ss
inc
mov
xor
push
push
movsb
rorl
push
pusha
je
pop
lock
mov
sub
mov
hlt
dec
clc
arpl
jae
dec
push
inc
xor
mov
xor
xor
je
cs
bound
insl
test
sti
mov
xchg
lods
cltd
dec
adc
aas
jle
mov
pop
test
sbb
push
scas
add
cmp
dec
mov
mov
fwait
lock
aaa
scas
and
ret
cli
pop
cwtl
into
sub
or
xchg
mov
cmp
imull
shl
pop
out
mov
sbbl
pop
xchg
lods
dec
out
dec
jb
jmp
or
and
adc
scas
add
sbb
ds
push
dec
test
ficomps
xor
jl
mov
or
out
in
mov
cmp
mov
xchg
ss
xchg
cmp
pop
mov
and
pushf
orl
stc
lcall
xor
into
inc
test
inc
xlat
cmp
push
data16
std
mov
les
cli
int3
push
cmp
adc
into
dec
mov
icebp
dec
movsb
mov
shr
icebp
fsts
out
mov
lods
xchg
popf
xor
cmp
sbb
in
dec
loope
sahf
enter
test
inc
imul
adc
sbb
xor
mov
clc
addl
mov
and
jnp
dec
push
in
jmp
sbb
xor
fists
mov
inc
popl
fs
dec
popa
ret
inc
imul
sahf
mov
pop
cmp
jnp
or
test
mov
adc
outsl
or
mov
lods
jnp
xchg
push
call
jp
push
jo
jmp
mov
adc
or
subb
xchg
pop
add
cmp
jbe
sbbl
movsl
jmp
fiaddl
sbb
cs
daa
test
sub
cltd
cmpsb
adc
dec
jno
das
scas
push
and
push
daa
icebp
into
mov
adc
enter
insl
dec
dec
xchg
ret
mov
fbstp
cld
xor
sub
sbb
xlat
filds
lahf
mov
xor
jnp
iret
jb
subb
movsl
out
jns
cwtl
not
dec
jg
mov
xlat
cmp
rorb
xor
scas
outsl
cmpsl
leave
push
dec
maxps
mov
es
lret
and
pop
lahf
loopne
out
jb
mov
or
push
movsb
push
pop
les
xchg
movsl
fsubrs
aam
push
lahf
ret
mov
mov
cld
sub
jmp
rcr
dec
cmp
aam
sbb
inc
mov
testb
cmp
loop
fidivrs
lret
mov
push
mov
lcall
push
inc
pop
inc
inc
jb
fisubs
or
xchg
loopne
int
lds
dec
jb
cmp
dec
pop
popf
mov
cltd
pop
add
add
subb
lds
cmp
std
aas
shr
push
bound
or
test
push
aaa
add
mov
mov
mov
cmpb
and
ds
lret
decb
mov
out
shlb
mov
mov
pop
repz
push
inc
xor
jb
or
push
mov
push
pop
adc
rcrl
xor
icebp
mov
fsub
push
jle
mov
mov
push
sub
xor
mov
jmp
int3
inc
add
mov
and
jbe
divl
mov
icebp
cmp
aad
push
icebp
pop
pop
mov
mov
and
xchg
imul
ds
mov
push
cli
pop
in
repnz
imul
push
xlat
pusha
dec
xadd
test
ficoms
or
mov
insb
scas
push
push
outsl
daa
push
dec
pop
sbb
les
js
push
pop
push
push
sbb
in
int
dec
adc
dec
cli
inc
data16
dec
ds
lret
mov
inc
adcb
push
sub
call
inc
mov
xor
sti
mov
or
lods
inc
xor
inc
sub
jge
or
jo
sahf
in
and
jb
movsb
int
rolb
xor
call
pop
and
and
xchg
push
lds
mov
mov
std
push
arpl
mov
scas
pop
lock
lcall
or
or
es
adc
cwtl
imul
cmp
adc
add
push
testb
mov
jno
fdivr
fisttps
fsubs
fmul
add
into
jne
or
mov
jno
mov
aam
in
cmc
cmpsb
and
sbb
xor
lea
inc
sbb
pop
rorl
cmc
and
mov
daa
test
cmc
mov
orb
mov
lcall
insl
or
mov
jge
dec
mov
adc
stos
fadds
mov
call
rcrl
sub
loope
xchg
sbb
mov
sub
fucomp
dec
je
lahf
dec
mov
xchg
leave
clc
gs
cwtl
test
adc
loopne
sub
les
jns
cmpsb
sub
gs
adc
add
sub
or
mov
mov
dec
js
call
cmp
jge
ja
movsl
rorl
adcb
xlat
lods
pop
lock
es
or
jae
xor
fimull
add
jge
out
aam
xor
fs
xlat
repnz
addr16
dec
outsl
cli
out
push
xchg
mov
push
pop
movsb
mov
test
adc
mov
jmp
mov
and
add
cmpsl
neg
mov
pusha
ja
arpl
dec
and
mov
jb
push
loop
pop
insb
jg
fsubrp
les
mov
inc
and
mov
fcompl
sbb
stos
mov
mov
or
movb
fimull
sbb
mov
out
mov
mov
pop
and
shll
mov
and
pop
pop
sub
dec
or
lcall
jl
adc
mov
sti
test
xchg
lea
inc
add
es
and
lock
jb
call
into
dec
in
or
mov
enter
dec
dec
add
sbb
or
ds
imulb
insl
xchg
push
xchg
addb
add
flds
ss
stos
clc
je
and
negb
psadbw
mov
lea
aad
xor
pop
push
mov
sti
in
out
and
jmp
add
jb
and
movsl
int
negl
or
jmp
movsl
loop
push
mov
cwtl
inc
sbb
fsub
mov
inc
ret
test
mov
ljmp
inc
adc
push
jecxz
dec
xor
mov
popa
push
xorl
sub
cmp
scas
aam
mov
or
sub
idivb
insb
cmp
dec
out
and
lea
insl
icebp
int
mov
add
and
out
dec
push
push
xor
dec
sahf
mov
xor
xchg
mov
jmp
bound
das
pop
mov
stos
bound
push
mov
and
loop
cmp
outsb
inc
fisttps
sbb
jnp
cmc
lret
mov
fsubp
mov
jl
inc
xchg
pop
adc
daa
mov
or
jae
sbb
aaa
push
mov
rolb
mov
std
gs
cmp
enter
add
push
sub
add
enter
leave
inc
xchg
jo
js
fildll
pop
gs
xor
mov
adc
and
mov
aaa
add
fimull
int3
mov
sahf
inc
jle
ret
or
pusha
sbbl
sbb
ds
aas
pop
ficompl
push
xor
mull
mov
mov
cs
jno
dec
stc
movsl
jl
mov
movsl
jg
nop
dec
pop
scas
jnp
jo
push
pop
xchg
pop
popf
shll
int3
pop
in
push
mov
mov
out
and
cltd
dec
lahf
xor
push
push
fstl
and
addr16
inc
lds
incb
divl
pop
pop
xor
pop
inc
andl
push
or
in
xor
xchg
sti
addr16
sub
call
push
loopne
daa
jle
jno
mov
je
scas
xlat
add
roll
repnz
inc
mov
sub
lahf
in
in
cwtl
mov
mov
sti
mov
shl
shr
mov
pushf
hlt
stos
in
fwait
das
inc
je
loope
pushf
or
and
mov
xor
xchg
idivb
scas
movsl
pop
cwtl
dec
popf
outsl
jb
cwtl
sub
inc
pop
dec
fcom
std
mov
add
sahf
inc
lods
pusha
js
inc
les
sbb
pop
lret
inc
outsb
mov
mov
push
jb
mov
and
add
xor
ds
je
inc
ror
testb
lea
add
inc
int3
inc
push
xchg
fcompl
mov
pop
jo
jo
pop
movb
jmp
inc
add
pop
and
out
pop
jns
subb
cmp
sti
rolb
or
das
icebp
std
dec
and
sbb
imul
push
sub
das
stos
dec
jge
in
dec
cmp
push
dec
movsb
mov
std
push
xchg
inc
mov
into
aas
pop
test
ret
imul
fsubl
xor
push
and
add
or
xchg
mov
pusha
or
mov
jno
ds
xlat
mov
rcll
cld
inc
repz
and
add
add
data16
aam
into
add
es
rcr
and
outsb
sub
push
mov
mov
sub
in
jae
mov
push
sbb
subl
adc
mov
mov
nop
sti
cmp
ljmp
sub
lret
jae
cmp
test
daa
pop
mov
stos
dec
push
xlat
mov
mov
fiadds
and
cmp
mov
aam
lds
add
lea
lock
dec
xchg
leave
cmc
sahf
inc
mov
and
pop
dec
jle
push
xor
or
lret
push
lock
bound
decl
lock
push
pusha
outsl
mov
loopne
dec
loop
cmpsb
in
jp
jno
cld
pop
pop
cwtl
xchg
xor
push
pop
adc
andl
imul
lret
xor
sbb
out
outsl
rorl
cs
inc
xor
into
rcr
push
mov
lods
push
sbb
inc
pop
shrl
jp
outsb
sub
push
adc
xchg
dec
mov
dec
jmp
xchg
dec
in
scas
dec
xor
outsb
ss
xorl
xchg
ja
xlat
jno
adc
mov
jle
jb
fnstenv
lcall
add
sub
or
leave
inc
pop
sub
es
xor
xor
add
fstl
inc
ret
push
cli
mov
dec
add
inc
rcrb
jno
and
lret
ss
or
in
adc
inc
ss
negb
cmp
xor
lahf
cmp
xchg
jb
push
xlat
inc
test
push
mov
adc
sti
push
mov
loope
iret
mov
adc
lret
inc
mov
repz
push
jp
lods
popf
jne
enter
sbb
dec
mov
pop
pop
insl
insl
mov
push
sarl
icebp
ljmp
fwait
fwait
or
aad
mov
jge
les
xchg
int
mov
sbb
je
scas
fistps
nop
mov
add
dec
or
je
mov
inc
add
xor
jo
cli
sbb
xchg
in
sbbl
loope
sbb
mov
cs
mov
mov
into
sbb
sub
jge
add
mov
aaa
push
sub
fwait
mov
cmpsb
jbe
jnp
cmpsl
popa
lock
dec
cs
aas
aas
cmc
jmp
inc
sarb
cmp
adc
clc
pop
rorb
lahf
cmc
push
repnz
or
jle
cmpb
sub
cli
push
addl
inc
test
inc
std
subl
sbb
adc
fcomip
aam
sub
pop
in
dec
push
shrb
cs
out
cld
popf
icebp
imul
xor
mov
ss
sbb
cmpsb
daa
pop
add
cmp
mov
jnp
aas
movsb
inc
js
clc
mov
incl
dec
inc
mov
and
mov
pop
test
mov
jb
add
imul
cmc
popl
mov
adc
xchg
xor
les
je
addr16
std
imull
or
inc
shlb
cltd
adc
es
test
scas
or
fld
incl
jne
or
add
add
dec
stc
push
xor
enter
jl
imul
iret
xchg
insb
fistpll
jno
movsb
xchg
repz
or
xchg
shlb
inc
mov
mov
out
pmulhw
sbb
sbb
cltd
sahf
adc
into
mov
addr16
rclb
jl
xchg
ret
aas
pop
dec
push
push
dec
sbb
inc
aam
dec
addr16
mov
push
jbe
or
aaa
jmp
sbb
in
sub
mov
push
outsl
push
xchg
fisttps
jae
mov
or
and
jg
jb
out
out
outsl
enter
mov
add
or
aam
in
add
sub
inc
push
decb
push
ret
ljmp
inc
mov
je
daa
movsb
pop
inc
lods
mov
loop
andl
xchg
push
and
pop
adc
mov
dec
and
aad
dec
shll
xor
inc
pushf
adcl
or
loop
jne
test
push
cmp
jge
xchg
cli
shl
and
ja
add
pop
dec
push
mov
push
sbbb
mov
add
xchg
aam
cltd
sahf
lds
lock
sarb
orb
push
rcrb
mov
sub
stos
lods
mov
adc
notl
dec
and
dec
jge
sbb
lahf
mov
mov
js
mov
stos
cli
dec
xchg
iret
imul
or
mov
aaa
dec
mov
pop
das
and
popf
push
jno
cli
das
push
loope
mov
mov
xchg
dec
roll
cs
push
jp
pop
adc
insl
movsb
stc
outsl
push
js
push
mov
push
mov
cld
loopne
lea
ffreep
enter
lcall
popa
mov
jecxz
mov
daa
outsb
cs
cmpsl
test
xchg
hlt
jnp
cld
aad
pop
push
cld
repz
lds
pop
jl
mov
std
stos
rcrw
or
xlat
cmp
adc
roll
adc
mov
aaa
fcomip
dec
sti
or
fstp
rcrb
cmpsb
ficoms
adc
nop
lret
pop
mov
shll
push
inc
inc
jle
or
xor
sub
test
dec
jecxz
push
mov
push
mov
inc
mov
test
push
adc
fcomps
sub
insl
lcall
xor
in
xchg
xor
and
stos
les
pushf
mov
dec
inc
and
push
test
inc
pushf
push
adc
fsubrs
push
ljmp
scas
movsb
arpl
mov
pop
jp
into
adc
divl
jb
adc
and
dec
jmp
test
sub
fs
fmull
push
dec
adc
pop
and
repnz
fcompl
pop
popf
test
shrb
stos
cs
add
mov
jmp
sbb
jp
movsb
mov
mov
dec
fmuls
inc
add
sub
xchg
and
pop
imul
or
dec
call
push
or
cmp
cmp
test
sbb
ja
dec
mov
jg
lods
inc
dec
and
xor
in
out
fisubrl
adc
mov
lea
cli
xchg
mov
hlt
jecxz
cmp
jb
dec
push
cmpb
fiadds
mov
xor
mov
or
aad
adc
mov
mov
pop
flds
enter
pop
jg
fwait
xor
je
mov
add
sti
sbb
cmp
push
cmp
mov
xchg
sbb
jne
mov
lods
xor
aad
sub
cmpsl
push
icebp
mov
jae
je
pop
out
mov
pop
push
pop
pusha
subb
cmpsb
jg
xchg
mov
jnp
lret
xchg
test
sub
fildl
mov
outsl
mov
stos
mov
inc
jo
dec
or
push
clc
stc
mov
out
mov
lret
jecxz
mov
fmulp
scas
sub
sbb
test
aaa
aaa
pop
repz
lods
popa
mov
cmp
mov
fimuls
sub
out
mov
mov
push
pushf
jg
pop
ljmp
or
mov
cmp
xor
mov
scas
jae
cltd
jmp
and
out
subl
movsl
fildll
pop
inc
jo
pop
imul
lahf
scas
push
cwtl
repz
push
lock
pop
bound
subl
cwtl
xchg
dec
jle
in
xor
mov
addr16
stos
push
sbb
cmp
adc
xchg
mov
mov
cli
andb
jle
sbb
aam
jno
fs
or
mov
aam
leave
cmpsb
in
fcomip
add
out
out
sub
std
lret
mov
lods
sbb
ss
adc
icebp
sbb
lcall
mov
stc
add
in
fcmovnu
mov
cmp
cmp
dec
aam
pushf
js
lcall
jno
or
jne
push
shrl
mov
lret
fs
lea
cwtl
jge
je
rclb
or
into
mov
pop
dec
les
insl
xchg
shl
lcall
stc
jge
lcall
mov
mov
and
mov
and
hlt
jl
pop
pusha
repnz
and
jl
dec
cmp
adc
add
sti
adc
xchg
jmp
mov
mov
aaa
lahf
adc
gs
and
xor
inc
xchg
sbb
dec
out
mov
sub
add
cmp
lret
push
lret
add
xchg
mov
ret
fwait
mov
aad
nop
fwait
sar
test
fstpt
je
scas
in
test
pusha
aaa
stos
xchg
xor
iret
fisttpll
pop
loopne
int
xchg
out
and
loope
cmp
pop
shl
push
fidivl
or
lahf
jo
outsl
fldt
or
into
fwait
arpl
jmp
test
bound
mov
bound
sub
fs
in
dec
idivb
je
xchg
insl
xor
outsl
ds
mov
jmp
adc
stos
or
inc
pop
mov
cwtl
add
adc
sbb
dec
add
iret
push
bound
jp
leavew
add
ds
jge
in
repnz
enter
dec
stc
push
psrad
push
pop
jns
mov
push
out
into
rcr
push
je
in
and
testl
pushf
int3
mov
icebp
mov
rolb
push
sbb
imul
adc
xlat
pop
shll
leave
fdivp
sbb
lea
loopne
stos
daa
sub
mov
lods
mov
fnstenv
neg
sub
and
mov
cli
je
cmp
push
and
push
insb
jae
addr16
mov
jle
push
aaa
pop
jb
mov
mov
out
dec
cmp
into
dec
movsl
pop
movsl
pop
dec
or
addr16
jo
adc
pop
push
cld
fdivs
mov
aas
enter
inc
fcoms
arpl
out
dec
sti
add
daa
sbb
xlat
fistl
mov
mov
std
scas
add
jb
std
pop
mov
int
jmp
mov
sub
ret
je
addr16
mov
fistpll
outsl
out
call
push
inc
cwtl
cmp
sbb
imul
jno
pop
add
mov
les
mov
push
aam
add
repnz
std
pop
or
xor
mov
cmp
sub
call
sub
push
pusha
into
mov
push
adc
add
lahf
dec
adc
pop
or
testb
mov
pop
jp
adc
jg
push
or
push
cmp
push
fwait
xor
inc
inc
aaa
les
mov
sbb
sbb
or
popa
aad
mov
idivl
pop
adc
sbb
xchg
cwtl
sbb
mov
les
insb
pusha
lcall
dec
pop
cmpsb
xchg
inc
pop
jecxz
lea
xchg
mov
loop
mov
fwait
shl
sbb
je
jle
inc
insl
popa
mov
push
stc
push
dec
imul
fstpt
leave
jl
sarl
dec
mov
inc
cmp
loope
or
std
mov
fcomp
jns
loopne
jle
rcrb
fs
dec
or
rcrl
inc
pop
fidivrl
arpl
push
loopne
outsl
or
ljmp
test
cmp
sahf
incb
sarl
sbbb
mov
jns
lock
mov
cmc
and
addb
push
inc
and
dec
sti
xor
pop
push
aad
outsl
jnp
pop
jnp
xchg
add
loope
out
call
lahf
pop
sbb
arpl
insb
pop
data16
sarb
pop
dec
push
dec
ljmp
sbb
xchg
nop
insb
xor
lds
incl
ret
aam
mov
adc
add
jns
mov
adc
xchg
es
sub
jmp
dec
dec
repz
push
inc
sar
lcall
mov
push
iret
push
jge
xchg
imul
test
cmp
aaa
inc
je
mov
xlat
hlt
clc
test
mov
mov
leave
pushf
lea
stc
or
data16
cmpsl
lds
mov
imull
das
mov
bound
loope
lods
shrb
inc
addl
mov
sbbb
nop
pop
dec
out
in
fdiv
mov
push
ud1
out
sti
cmp
pop
pop
or
sahf
int3
pusha
pop
pop
cmc
mov
add
mov
inc
lcall
lret
dec
int
mov
mov
cmp
mov
xchg
pop
loope
sbbl
int3
pusha
adc
sahf
repz
push
and
in
jnp
leave
xchg
jno
js
inc
shrl
addb
push
push
push
ror
or
les
push
fcomps
test
sbbb
les
jg
or
sti
jmp
lahf
xor
adc
test
cmp
mov
push
lcall
mov
leave
mov
fimull
adc
stos
stos
loop
orb
stos
sbb
mov
outsb
jbe
xchg
dec
ss
fsubrs
movsb
adcl
sbb
les
bound
in
pop
ja
mov
insl
clc
dec
rcll
imul
or
cmp
jnp
push
mov
ljmp
addr16
jno
movsl
push
dec
js
mov
xor
in
xchg
int
adc
pop
cli
out
pusha
mov
mov
and
loope
hlt
xchg
daa
enter
addr16
in
int
add
loop
jge
mov
lcall
jo
mov
repnz
das
jmp
ljmp
in
les
popa
pop
sahf
dec
out
lret
cmpsl
sub
xor
popf
sti
fldenv
fstpt
sbb
shlb
mov
sbb
int
aad
pusha
sub
xor
frstor
repz
out
xor
out
mov
sub
jl
and
cmp
fimuls
dec
cmc
scas
push
jo
push
sbb
leave
inc
stc
xchg
jo
add
fdivl
loop
outsl
stc
cwtl
pop
hlt
sbb
out
xchg
push
sbb
jnp
sub
xchg
jae
lahf
inc
pop
ds
imull
ss
adc
mov
fdivr
fcomp
pop
nop
cmpsl
and
mov
sarb
sbb
mov
mov
call
mov
or
add
or
gs
xchg
je
mov
out
xchg
movsb
test
adc
mov
stos
push
xor
loop
xchg
mov
xchg
pusha
push
dec
pop
mov
loope
cmc
pop
into
xchg
out
push
jle
adc
xor
push
enter
lcall
lods
scas
cltd
movsb
dec
jbe
clc
icebp
cmp
and
cmp
jo
mov
or
js
mov
fimull
les
sub
cmpsb
xlat
imul
in
fxtract
xor
imul
mov
inc
adc
adc
mov
add
xor
pop
xchg
fisttpll
ret
or
shlb
pop
stos
push
fcoml
or
dec
fildll
sbb
movsb
adc
mov
dec
jmp
hlt
cmc
pop
in
dec
stos
and
jecxz
arpl
mov
fisubs
shr
pusha
rolb
ja
shlb
je
add
iret
inc
pop
fdiv
lret
divb
or
rcr
xchg
xchg
icebp
out
jmp
sub
jl
ret
or
adc
in
sub
pop
repz
jns
hlt
dec
jnp
je
out
mov
test
xor
movsb
sub
sbb
into
mov
sub
sahf
nop
aas
cmc
mov
xchg
insl
lret
movsl
out
in
or
popf
call
andb
lock
imul
or
lahf
inc
sub
adc
shll
lods
int3
mov
popa
loopne
neg
mov
lods
lret
sub
dec
cli
enter
jmp
add
sti
push
adc
inc
mov
ljmp
push
mov
add
ss
mov
cmp
cli
fs
jns
stc
sbb
stos
pushf
pop
xor
inc
into
cmp
inc
fs
enter
jle
push
lods
push
pop
ss
mov
push
sub
stos
rcll
inc
int
add
mov
fisttpll
mov
fisubrs
add
add
sbb
cltd
sub
push
imul
sbb
xchg
into
adc
in
mov
inc
sbb
mov
es
les
outsb
rcll
xlat
dec
pop
mov
or
dec
ret
sti
sahf
fs
pop
sahf
in
scas
imul
lea
and
add
cmpsb
xor
push
and
movsb
iret
mov
lret
push
iret
lahf
outsb
movsb
movsb
enter
ljmp
arpl
mov
gs
xor
lret
cmc
pop
jo
imul
je
add
and
push
fs
scas
pop
or
in
pop
adc
fs
subl
lcall
insl
fs
enter
popf
cmpsb
orb
ret
add
cld
in
adc
jl
xchg
mov
lcall
mov
scas
in
fstl
sub
sbb
ljmp
hlt
dec
jo
aam
inc
dec
imul
into
loop
xchg
cmp
mov
inc
pop
stos
les
cmc
popf
popa
aad
or
xchg
repnz
inc
jae
push
xchg
inc
mov
dec
adc
adc
add
pop
mov
test
jo
inc
gs
pop
mov
cltd
rcll
mov
sub
cmp
pop
rolb
and
ret
add
jbe
outsl
rcl
das
sahf
mov
pop
xor
inc
jl
cmp
jnp
sub
in
jne
pmullw
aas
flds
add
bound
dec
or
ret
pushf
stc
xchg
test
outsb
adc
and
test
jp
jmp
in
push
sti
adc
pop
sbb
cwtl
clc
ljmp
and
push
stos
lods
jno
das
pop
cmp
push
xor
hlt
or
faddl
add
mov
jb
adc
jne
sti
pop
dec
movsl
cmc
mov
jo
sub
sbb
addr16
std
fisttpl
cmp
pop
orl
test
pop
or
push
aas
or
sahf
jge
out
mov
push
sar
pop
fucomip
aaa
jae
jbe
adc
mov
mov
mov
mov
adc
jle
loopne
cmpsb
jne
ss
and
shl
or
push
bound
mov
mov
js
int
stos
mov
pusha
push
pushf
mov
sub
xchg
add
loope
push
mov
mov
inc
mov
mov
sarl
adc
push
sbb
lret
aas
test
cmpsb
shrb
xor
out
in
pop
iret
and
or
jo
mov
xchg
adc
imul
je
aas
mul
adc
sahf
adc
cmp
mov
sub
inc
mov
lds
and
mov
stos
hlt
les
stc
andb
inc
popf
dec
in
sahf
gs
aad
inc
xor
loop
shlb
out
jecxz
jne
cmp
sub
in
cmp
dec
cmpsl
insb
xchg
ret
popf
xorl
pushf
push
dec
jnp
lock
mov
popa
mov
inc
clc
add
lock
das
mov
dec
out
add
lret
leave
mov
sahf
xlat
xchg
or
adc
or
dec
popf
jl
and
jl
fs
call
mov
outsl
outsl
stos
cli
dec
push
push
ljmp
ja
daa
cltd
insb
jnp
cmp
adc
loop
add
jb
loopne
dec
notb
into
in
sub
sahf
push
aam
out
int
jecxz
mov
jmp
in
icebp
jp
daa
dec
lret
add
inc
cmp
leave
test
dec
mov
pop
cmp
jmp
sub
jmp
mov
lock
sub
sarb
mov
in
popa
es
inc
js
lcall
mov
push
pop
mov
js
out
test
pop
out
repz
mov
and
mov
mov
fdivrs
mov
mov
pop
rcll
mov
mov
add
or
dec
cmpsl
add
icebp
lods
in
sahf
push
popf
test
int
push
test
js
enter
jne
xor
lock
sti
jp
jp
sub
sub
jle
iret
ficoml
xor
das
dec
fisubl
icebp
mov
lret
lds
sub
std
pop
lret
xchg
lret
sbb
aas
in
fisubl
adc
and
ret
sub
cmpsb
xlat
mov
aad
cmpsb
inc
mov
xor
lock
fs
je
mov
jbe
ja
insl
in
dec
xchg
pop
cli
add
mov
shld
xor
mov
and
jmp
shll
cmp
js
outsl
sti
leave
sahf
in
repz
xorb
mov
push
sbb
jo
adc
dec
cs
mov
xor
inc
sub
aas
mov
imul
dec
stos
adc
xor
js
ljmpw
cs
xchg
and
xlat
mov
pop
mov
fldcw
xor
inc
lcall
adc
mov
cwtl
inc
cmp
pop
mov
fcompl
icebp
in
or
cwtl
movsb
in
leave
sub
push
xchg
out
lods
sbb
sub
sbb
cmp
sti
cmp
or
sbb
gs
inc
or
mov
xchg
cmpsl
icebp
inc
inc
lock
push
add
cmp
pop
or
sub
push
out
addb
and
push
fstpt
ds
jnp
pushf
dec
mov
ficompl
out
cmp
ljmp
inc
loope
ret
pop
out
mov
fnstsw
fidivrs
jl
cmpsl
xchg
stos
stc
ljmp
cmp
add
sbb
ret
dec
mov
shlb
cmp
mov
cmpb
jne
jmp
ja
imull
adc
push
dec
inc
xchg
push
lods
sub
sbb
jmp
in
push
ret
sub
mov
popf
mov
push
adc
test
stc
dec
pop
sub
sbb
adc
inc
xchg
fwait
xor
xchg
adc
xchg
shrl
repz
jae
or
mov
lds
or
sbb
lods
cmc
sub
push
ss
lea
push
gs
xchg
xor
mov
test
mov
js
int3
cmp
test
rorb
dec
wrmsr
lock
mov
adc
adc
mov
mov
clc
popa
insl
cmpsl
pop
inc
mov
fwait
mov
adc
xchg
mov
repnz
lahf
dec
cs
cltd
mov
aaa
or
movsb
jae
inc
arpl
mov
cmpl
cs
rorb
mov
push
mov
and
mov
jns
inc
fs
dec
clc
dec
lret
push
pop
push
lds
push
dec
sub
outsb
inc
repz
and
or
lea
pop
hlt
stos
mov
repnz
or
fsubl
out
orb
sub
inc
movsl
ds
adc
jmp
shlb
mov
ja
imul
add
jecxz
dec
pop
mov
out
ja
enter
arpl
test
enter
imul
flds
arpl
bound
movsl
adc
adc
xchg
adc
ds
idivl
adc
add
mov
imul
cwtl
adc
scas
je
mov
call
data16
es
imul
push
sub
mov
outsl
mov
sbb
sub
jp
inc
rcr
xorb
fildll
out
lcall
sbb
pop
loop
mov
ljmp
add
push
inc
pop
pop
into
jmp
or
cld
push
cwtl
int
test
add
dec
inc
ljmp
sbb
test
test
sarb
mov
sub
lock
loop
imul
xlat
cwtl
insl
pop
cmp
aad
pop
addr16
push
loop
cli
imul
push
pop
arpl
dec
or
cmp
shrl
fisubrl
shl
xchg
xor
das
popa
sub
add
sar
dec
jne
adc
shll
in
aaa
std
bound
stos
movsl
cmp
mov
xlat
out
icebp
push
mov
push
dec
shlb
inc
sub
test
mov
mov
jb
jae
mov
loope
insb
mov
call
push
sbb
shl
mov
jbe
add
lahf
fdivl
mov
pop
sbb
imul
and
fs
cld
je
mov
maxps
xor
jno
adc
lret
imul
fcmovu
pop
int3
mov
out
push
sub
and
fcoms
es
lret
jo
inc
popf
sub
sub
mov
push
inc
or
sub
add
and
into
push
subl
push
test
mov
rcrl
pop
les
dec
pop
aaa
lahf
scas
adc
jnp
repz
imul
mov
xchg
daa
mov
lock
dec
std
sub
out
mov
scas
rcrb
inc
jb
roll
xor
mov
imul
pop
push
jecxz
sub
daa
cmp
inc
cli
jecxz
mov
cmpsb
out
cld
ljmp
mov
or
push
lods
and
xor
and
jge
mov
es
jge
sub
lock
jle
aad
mov
pop
mov
lea
movsl
sahf
mov
repnz
jo
dec
addr16
cmp
adc
icebp
out
cltd
and
lods
mov
sub
push
in
cltd
sarb
xor
ljmp
fwait
cmp
or
pop
dec
and
orl
sbb
rep
cld
leave
mov
fs
js
bound
xor
dec
add
mov
push
call
fcomps
jns
dec
out
add
add
sub
pop
test
push
mov
jae
fucomi
scas
scas
xor
ror
dec
bsr
lods
aam
xlat
and
rcll
mov
rcll
les
push
push
movsl
xor
mov
stc
scas
mov
andl
frstor
push
lds
mov
insb
dec
cmp
mov
add
mov
dec
add
inc
adc
hlt
cmp
push
mov
int3
mov
sub
or
or
xor
ja
jns
int
xchg
std
push
add
sub
testl
dec
lods
loopne
inc
sub
test
addl
fisubrs
inc
outsb
mov
mov
and
lock
adc
add
mov
push
movsl
scas
mov
loope
pop
cmpb
sub
iret
mov
sbb
mov
jl
push
fcompl
int
push
dec
bound
test
and
xchg
rorb
mov
addr16
je
imul
dec
das
pusha
mov
cmp
call
sub
jg
xchg
push
xchg
mov
ss
in
scas
call
rclb
aad
dec
mov
sub
add
daa
or
mov
dec
jge
inc
or
mov
mov
mov
aad
cmp
cmp
imul
cmpsl
hlt
sbb
stos
pop
gs
dec
push
push
cmpl
cmpsb
cli
pop
push
hlt
cs
sub
add
hlt
sbb
ja
daa
cmpsl
add
lods
int
xchg
cmp
push
insb
arpl
pop
mov
push
sbb
jle
push
pushf
cmpl
dec
inc
mov
xchg
filds
clc
jbe
cmp
rcrb
xchg
pop
push
cs
xchg
outsl
jnp
adc
fsubrl
and
shll
jne
mov
xchg
hlt
andb
fisubrs
out
xor
lds
pop
or
movl
push
fwait
jp
aad
xlat
mov
pop
lret
dec
mov
das
and
lret
stos
xor
incb
mov
jnp
mov
mov
fwait
sub
cltd
xchg
repnz
cmp
icebp
cmp
xorb
loop
sbb
add
mov
aad
jo
das
orl
lock
mov
cli
fstl
push
lods
fdivp
cmp
std
aaa
das
jp
pop
cmpsl
lock
cmpsl
lods
add
add
shrl
sub
rcll
frstor
ja
out
sub
push
jmp
cmp
add
test
imull
dec
popf
add
add
loope
jge
rolb
jmp
fwait
push
pop
lcall
dec
cmp
pop
jnp
clc
cmp
nop
mov
or
pushf
out
mov
gs
cmpb
shll
and
adc
sub
sub
rcr
test
movsl
push
adc
psrlw
out
mov
and
sub
mov
pop
stc
mov
test
mov
ja
mov
out
jnp
clc
jae
cvtpi2ps
push
mov
jp
mov
sub
jbe
mov
test
enter
jl
insb
pop
push
ret
xor
jo
add
pop
mov
push
out
ss
inc
out
lods
xlat
cmp
cmc
sbb
lds
push
outsl
dec
add
xchg
push
mov
and
adcl
aas
sub
or
push
cmp
dec
arpl
sahf
jp
push
ljmp
mov
sub
push
or
inc
jecxz
cltd
pop
fmul
stos
add
sub
xor
push
xor
push
cmpsb
push
xchg
sub
jo
sbb
cmp
pop
xor
and
xchg
rcrl
sub
mov
xor
fimuls
lahf
mov
xor
dec
dec
pop
daa
mov
dec
push
mov
popa
dec
cltd
pop
ficoml
cmc
add
sbb
shr
xchg
inc
stc
jmp
dec
push
rcll
add
push
or
icebp
sbb
push
xchg
scas
divl
push
cmp
xchg
mull
lock
push
adc
mov
fwait
movsb
int
bound
mov
je
movsb
or
stos
xchg
cmp
push
iret
testl
inc
push
mov
scas
fs
or
cmp
mov
jae
cmp
xchg
sahf
std
push
or
mov
ds
filds
movsb
outsb
iret
cmp
hlt
or
loope
jmp
pop
scas
inc
mulps
stc
mov
lret
ja
ficoml
jbe
jle
ret
int3
add
mov
je
xchg
lahf
scas
mov
ret
or
mov
cmp
dec
loope
movsl
aas
xchg
xchg
outsl
lret
jle
ffree
or
add
shrd
sub
popa
dec
xor
pushf
dec
sbb
sub
sub
hlt
jle
loopne
adc
mov
mov
pop
adc
or
lods
add
cmpsb
lock
mov
out
push
adc
clc
sub
cltd
lods
jbe
mov
fsts
xchg
mov
cmp
nop
dec
jmp
fldt
test
imul
insb
fisubs
push
or
pop
and
sbb
mov
hlt
mov
push
xchg
stos
add
jp
lret
sbb
pop
out
inc
mov
aam
cmpsl
mov
and
cmpsb
lods
xchg
jo
je
jae
add
std
ret
outsl
xchg
xchg
fnsave
mov
pop
fcomps
xchg
push
jbe
js
movsl
mov
push
cmp
rorl
lds
inc
jecxz
sbb
and
jge
and
scas
xchg
pushf
mov
rorl
cmpsl
sbb
xor
sarl
out
sbbl
dec
inc
in
outsb
or
mov
out
jg
int
pop
inc
add
or
push
cmc
ds
mov
jnp
dec
aas
push
movsb
lods
add
xchg
aad
sbb
lret
mov
or
stos
and
xchg
push
adc
jo
add
lret
js
mov
mov
jle
lods
repnz
lahf
das
xchg
mov
outsb
in
adc
lret
pop
push
cmp
xchg
sbb
push
cwtl
push
aad
ret
pop
mov
sub
scas
sub
mov
xor
shr
popf
dec
ret
aam
lods
sub
loop
sbb
mov
xchg
roll
lds
out
adc
mov
mov
add
sub
mov
pop
add
sub
push
es
cmp
cld
sub
arpl
test
nop
aaa
ds
es
lds
clc
add
testb
sahf
and
test
pop
xor
scas
out
mov
call
dec
enter
popa
lock
mov
fnsave
and
out
movl
mov
sub
loope
xchg
scas
adc
les
popa
scas
mov
jnp
mov
mov
das
mov
jp
mov
jmp
cli
sub
xlat
and
test
jno
and
mov
pushf
sub
sbb
repnz
hlt
jno
shlb
sub
mov
dec
adcb
or
add
das
lds
cmp
sub
out
push
gs
jle
lods
lahf
orb
cmpsb
mov
ret
and
adc
rcl
add
fistpl
sub
ja
pop
mov
bt
mov
or
and
test
jl
mov
arpl
int
push
sub
loopne
pusha
mov
cld
into
fildl
mov
fisubl
jl
flds
push
jnp
in
cli
xchg
or
shlb
fst
popa
out
mov
cmpsl
xor
int3
add
push
jmp
notl
fistl
loop
pop
mov
lret
gs
pop
xlat
push
cmp
mov
add
std
xor
push
cmp
lods
jl
jle
dec
mov
sbbb
imull
and
sbb
adc
sbb
inc
mov
sub
mov
outsb
fists
dec
cmpsb
mov
pop
mov
push
push
in
inc
movsb
movsl
xchg
push
scas
xorl
inc
sub
push
ret
cmpsl
add
dec
int
ret
pop
inc
sub
add
jne
xchg
push
and
scas
imul
cmp
and
jl
and
mov
fwait
int
hlt
push
pusha
xlat
hlt
pop
in
rorb
call
inc
sahf
ljmp
std
inc
xchg
movl
pushf
mov
lods
pop
and
and
inc
std
cmp
push
fwait
dec
fwait
scas
adc
ret
movsl
sub
movsl
pop
mov
pop
pusha
dec
push
push
mov
loop
xor
cwtl
add
cwtl
fwait
sub
sub
xor
out
add
or
mov
inc
in
pop
cmp
adc
xor
pop
clc
inc
movsl
mov
ja
aaa
and
dec
popf
addr16
call
jo
in
std
and
test
lret
fisubl
mov
jp
inc
out
dec
jle
adc
sub
inc
and
adc
out
pop
int
pop
jno
nop
shl
loopne
adc
pop
shlb
pop
imul
call
test
sbb
pop
cltd
lds
ret
sahf
sbb
cmp
lcall
mov
jo
fcmovnu
adc
leave
pop
jae
jl
and
ljmp
rolb
daa
dec
mov
fisttpl
testb
or
xlat
push
mov
mov
push
leave
xchg
fmuls
call
pop
push
insl
cld
mov
les
mov
mov
lret
or
push
test
ss
mov
mov
enter
sbb
jb
jmp
test
aam
xlat
negl
insb
rolb
mov
lea
popf
sbb
sub
in
xor
mov
sub
out
stos
pop
ja
sbb
or
cwtl
pop
loopne
sub
mov
das
and
sub
pop
dec
xor
push
ret
sbb
jg
lods
xor
and
int
mov
pusha
mov
or
lcall
lret
lock
scas
xor
push
push
pop
movsb
adc
mov
xor
xchg
xor
stc
enter
imul
mov
call
dec
pop
adc
stos
lahf
pop
cmpsb
out
xor
fsubs
aad
pop
push
gs
in
out
mulb
mov
mov
into
imul
iret
sub
jns
scas
xor
sbb
fiaddl
insl
movsl
inc
repnz
sub
push
cmp
fs
das
dec
and
or
cmp
jnp
adc
stos
mov
scas
lds
jl
pop
mov
mov
movsb
sarl
in
stos
dec
sub
jae
icebp
jp
add
mov
cmp
xchg
aad
mov
sbb
push
gs
or
test
inc
negb
mov
enter
sub
xorb
xor
pop
mov
and
imul
sub
gs
hlt
cmp
leave
mov
jnp
test
mov
add
push
data16
sub
mov
clc
jae
inc
enter
or
inc
xor
and
fldcw
aas
and
inc
js
sub
ficomps
pushf
sahf
bswap
dec
fnsave
jb
jnp
lret
lods
lds
stc
data16
rclb
pop
pop
roll
xor
sub
imulb
dec
rcll
dec
stos
jl
xchg
push
sbb
jo
loop
pop
loopne
mulb
adc
xchg
add
int
in
aad
stos
adc
ret
inc
jnp
xchg
stc
jnp
shl
mov
pop
dec
aad
xorb
adc
imul
sbb
cltd
lods
jo
xchg
outsb
ret
jle
out
icebp
dec
mov
xchg
lock
pusha
sbb
outsl
jmp
mov
fidivrl
mov
cmp
add
test
cs
mov
out
outsb
lret
pop
mov
sbb
add
fisubrl
mov
pop
inc
je
shrb
in
rorl
ja
push
xchg
hlt
jnp
addr16
iret
data16
aaa
test
in
xor
xor
jle
shrb
pop
shrb
xchg
stos
adc
mov
sbb
rcr
mov
lods
add
cmp
jl
test
mov
dec
int
in
jnp
dec
pop
stos
jmp
add
jns
jnp
ret
mov
add
dec
imulb
adcl
pop
sub
jns
mov
pop
lret
mov
ret
das
sahf
adc
adc
jo
gs
and
and
cmp
cli
or
les
faddl
imul
push
and
and
cmc
cs
mov
ss
je
xchg
adc
push
pop
pop
xchg
push
in
lods
mov
mov
pop
push
fisubs
adc
andb
int
sbbl
rol
push
sarb
insb
jbe
pop
jge
add
mov
xchg
and
pusha
cmp
lds
sahf
enter
inc
add
push
dec
mov
pop
cwtl
push
and
cmp
cs
adc
add
or
xor
loop
jmp
popa
or
xor
fimuls
movsl
jno
sub
xor
sahf
cmpsb
pushf
fnstcw
add
fdivs
popf
sub
sbb
xchg
cs
mov
pop
call
mov
xor
push
sbb
inc
fwait
cs
sbb
outsl
dec
int3
arpl
pop
rcrb
adc
cmp
pop
data16
pcmpgtd
cmpsl
aas
jo
clc
aad
shll
jl
mov
sbb
inc
pop
js
adc
test
out
fdivrs
cmp
rcrb
mov
xor
inc
add
and
xor
cmp
movsl
loop
call
xor
addl
call
mov
push
inc
clc
sbb
push
jmp
dec
mov
sbb
stc
into
test
test
lods
inc
addr16
cmpsl
stc
daa
mov
push
mov
sbb
xor
mov
ret
push
subl
sub
clc
pop
stos
mov
in
repz
ja
ja
in
adc
aad
pop
cwtl
icebp
popf
jl
xchg
aas
dec
out
mov
js
push
and
dec
shll
lds
add
dec
dec
add
cmpsl
mov
out
loope
jnp
outsb
mov
das
lea
xchg
loopne
fwait
out
cld
and
mov
fmul
aad
xchg
pusha
cmc
adc
sbb
or
jl
mov
into
aaa
jle
int3
cltd
ljmp
mov
stos
adc
mov
pop
ret
ret
mov
arpl
and
jne
mov
cltd
pusha
xchg
pop
dec
stc
xorl
add
roll
pop
insl
xor
shll
xor
mov
sub
or
orw
xor
clc
and
sbb
jb
sbb
nop
in
movsl
stos
es
xchg
push
sbb
in
aas
pop
popa
insb
js
dec
aam
add
lods
and
shll
lea
mov
jns
cmp
inc
and
testl
add
pop
js
ljmp
adc
mov
addb
inc
sbb
jl
xchg
inc
mov
xchg
ror
ret
inc
popa
mov
aad
sbb
sub
test
xor
mov
jb
in
pop
xchg
stos
scas
ss
stos
shll
cltd
int3
clc
mov
mov
push
mov
jno
lock
push
test
sbb
fsts
jmp
inc
repnz
pop
and
les
stc
mov
gs
iret
repnz
ljmp
cli
mov
pushf
push
aaa
loop
mov
fcoms
outsl
jo
pop
mov
lret
inc
imul
popa
pop
mov
sbb
sub
sbb
or
sti
dec
fcompl
add
ret
cmc
and
gs
sub
popf
cltd
ffreep
push
ret
push
xchg
add
dec
ret
fmul
popa
pop
test
xor
jge
fwait
in
clc
add
popl
ret
aas
and
or
or
jp
loopne
mov
imul
repnz
and
xchg
add
jns
and
mov
jmp
call
pushf
sub
fsubl
sub
push
in
jl
fwait
repnz
movsl
fcom
inc
loop
ds
leave
cmp
xchg
push
test
idivb
cmp
div
jmp
fidivrs
cltd
jg
jo
mov
xor
pop
repz
mov
jge
mov
cwtl
cmpl
pop
push
je
ja
movsl
popa
stc
xor
stos
cltd
sti
jl
sbb
add
sub
mov
pop
and
adc
pop
mov
push
test
mov
add
js
mov
adc
or
mov
xchg
jge
popf
jp
rol
cmp
and
push
cltd
nop
xchg
repnz
sarb
and
dec
dec
mov
mov
mov
mov
xor
shl
sbb
mov
inc
rclb
inc
xchg
sub
mov
decl
push
cmp
or
ljmp
mov
es
push
push
dec
push
cmp
cmp
pop
bound
pop
jecxz
lods
dec
push
test
push
mov
mov
mov
add
sbbl
jmp
gs
fsub
push
pop
inc
in
pop
shll
dec
and
loopne
dec
xor
jmp
or
cltd
xor
pop
jle
xor
testb
push
xchg
ret
or
lcall
pop
outsl
cltd
inc
mov
xor
add
dec
xchg
cltd
add
xor
lock
inc
int3
sub
into
cmp
xor
repnz
jecxz
jno
xor
xchg
add
repnz
jge
jo
rcll
notb
pop
and
outsb
test
aaa
sub
in
les
lods
jnp
pop
adc
and
repnz
movsl
inc
loope
dec
imul
hlt
out
test
inc
cmpsl
sub
mov
inc
clc
daa
mov
sti
dec
and
mov
mov
test
add
adc
mov
inc
cmp
rcrl
divl
cld
sarl
xor
inc
arpl
mov
mov
cmp
loope
imul
add
pop
shlb
add
leave
pop
pop
fists
mov
mov
jp
js,pn
shrl
push
mov
into
data16
adcl
inc
adc
hlt
xchg
push
test
jb
jb
lods
adc
add
loop
and
mov
add
enter
lcall
cmp
gs
cmpl
xchg
in
sub
inc
cmc
fimuls
cmp
dec
push
sbb
nop
dec
mov
leave
addr16
data16
mov
xor
mov
push
add
inc
stos
scas
or
movsb
ljmp
out
and
lds
add
pop
xchg
or
add
dec
add
fdivs
mov
add
and
or
and
das
test
test
fwait
lods
vminpd
add
inc
xor
add
std
loop
mov
adc
mov
data16
ret
sub
mov
sbb
mov
push
jae
jecxz
or
jae
push
cmpsl
aad
pop
lret
adc
add
cwtl
jno
movlps
sub
and
inc
daa
mov
aas
mov
xchg
sarb
adc
leave
mov
or
cli
add
aas
gs
dec
xchg
add
jg
and
sub
fwait
popa
stos
dec
jno
stos
stos
jle
sbb
and
sbb
outsb
xchg
test
or
roll
xchg
scas
adc
mov
pop
outsl
mov
int
dec
fildll
mov
in
mov
push
outsl
enter
lds
dec
push
mov
dec
push
sub
in
mov
pop
idiv
rol
sub
int3
icebp
loop
sbb
or
push
mov
popf
fwait
and
dec
in
daa
or
pop
pop
out
mov
jb
jge
stos
nop
test
mov
cli
cld
insl
inc
jg
rcrb
xchg
push
lahf
into
addb
mov
fcmove
test
xlat
mov
mov
cmp
aam
popa
addl
xchg
and
gs
std
sub
popa
add
or
add
pop
xchg
xor
push
sub
sub
jp
pop
out
das
outsl
nop
outsb
and
cmp
jg
sbb
movsl
scas
add
mov
fs
xchg
inc
dec
sbb
ljmp
mov
daa
es
sarl
inc
lods
jmp
push
mov
sub
push
loop
adc
and
popf
clc
jns
and
shll
dec
or
xchg
rorb
stos
push
dec
dec
movsl
pop
push
aaa
push
mov
dec
mov
jmp
pop
mov
mov
inc
lea
sub
enter
adc
xor
in
loope
out
mov
mov
leave
add
add
fcoms
or
pusha
stos
scas
lods
mov
into
sub
jg
outsb
and
into
lods
es
jo
and
adc
cwtl
stos
jmp
push
stos
out
push
mov
or
jns
mov
push
jp
movb
call
xorl
inc
push
pop
mov
add
jmp
adc
sub
pop
xchg
mov
mov
lcall
or
nop
push
xchg
aaa
sub
cmp
or
push
punpckhdq
push
inc
out
arpl
movsl
test
jle
mov
addb
mov
fisubrs
imul
gs
pop
pop
pop
mov
ret
cmp
pop
mov
push
ret
inc
je
push
jl
jmp
lea
jmp
lods
outsl
sbb
mov
cld
jl
jae
push
inc
fidivrs
shll
ret
inc
out
mov
dec
pushf
hlt
leave
clc
push
add
pop
add
loope
call
jb
int3
dec
mov
adcl
out
dec
out
fcoms
int
cld
in
pop
ljmp
adc
call
inc
addb
and
xlat
jae
lcall
les
test
lret
jecxz
sub
push
push
xchg
mov
xchg
cli
gs
fldcw
fisubrs
jge
jnp
aad
inc
cmpsl
push
addb
insb
iret
mov
std
and
or
sbb
cmp
cltd
test
xor
and
or
pusha
adc
or
hlt
lret
xchg
sti
in
mov
and
sahf
imul
xchg
mov
or
cld
xchg
and
lods
cmp
fisubs
or
loopne
jge
dec
xchg
add
fisubs
stos
sbb
xchg
jl
dec
xor
adc
insb
inc
ss
pop
mov
jnp
mov
orl
add
jg
out
and
stos
cmp
sti
shr
jmp
cmp
adc
lods
call
xchg
add
jecxz
push
and
jl
ja
pop
inc
sahf
inc
out
aad
in
test
cmc
pop
jnp
inc
and
popf
inc
cld
xor
pop
in
mov
or
mov
fcoml
xor
outsl
jb
mov
inc
ja
mov
add
aas
push
lcall
dec
movsl
push
rol
sbbb
cltd
dec
adc
stos
mov
inc
scas
int
repz
popf
ljmp
lar
pushf
js
or
stos
inc
in
aas
popa
push
dec
into
les
mov
pop
lods
mov
dec
mov
mov
jno
jne
push
rcrb
mov
mov
jle
pusha
ret
stos
test
mov
mov
loop
xchg
mov
sbb
sti
test
lahf
jg
add
loop
outsl
push
fstps
fcomps
shll
dec
mov
push
cmp
xorb
xorb
sbb
adc
jg
adc
cwtl
in
adc
neg
invd
mov
leave
imul
mov
and
sahf
pop
dec
sub
scas
in
adc
pop
lock
repnz
inc
into
mov
jns
push
fldl
add
call
cwtl
and
mov
inc
subb
xchg
inc
pop
cmp
aas
mov
and
adc
gs
mov
imul
jmp
leave
ror
push
pop
sub
dec
push
or
fsubrs
outsb
jp
add
daa
mov
stos
negl
pushw
movsb
in
xor
jbe
inc
pop
xor
insb
mov
mov
jg
xor
in
adcl
jns
adcb
mov
adc
insb
mov
xchg
sub
aaa
mov
shll
sbb
divps
inc
sbb
jmp
popf
adc
sbb
jns
cwtl
cmp
jbe
iret
or
cmp
fbstp
mov
dec
adc
push
inc
lahf
std
xor
inc
std
cmpsl
push
or
out
dec
std
hlt
neg
or
cli
mov
out
adc
or
out
mov
mov
dec
dec
mov
mov
jb
loopne
bound
cmp
push
mov
cmp
fdivl
pop
flds
xor
add
and
push
jg
lret
clc
inc
les
cs
adc
push
lcall
adc
xchg
dec
and
pop
push
mov
pop
pop
pop
push
or
sub
fisttpl
xchg
cmp
jns
xchg
add
stc
and
std
shll
pop
jmp
rcrb
cltd
sub
insl
cmp
xor
jbe
int3
jmp
aad
es
sbb
or
mov
stos
sbb
in
aad
lock
outsl
repnz
pop
dec
add
icebp
push
imul
scas
push
jmp
out
cmp
ds
xchg
lock
cs
test
jne
ljmp
xor
icebp
push
sbb
bound
cmp
jns
xchg
pop
mov
push
cmp
dec
xor
popa
pop
std
xchg
lock
push
aad
mov
into
shlb
movsb
test
mov
mov
pop
jmp
mov
sbb
popf
fadds
movsl
fsubrs
dec
mov
adc
xchg
jbe
push
ds
rcrl
out
es
test
mov
orb
xor
or
aam
stos
mov
xor
dec
jo
in
xchg
imul
sbb
cmpl
xchg
lret
xchg
pop
mov
ljmp
in
pop
add
test
inc
scas
leave
mov
pop
and
cltd
adc
popf
int3
popa
cs
pop
test
stos
jns
popf
lahf
pop
or
mov
pop
or
xchg
mov
outsb
sub
add
in
arpl
mov
xor
sbb
mov
jne
inc
cmp
inc
hlt
aaa
aad
in
xchg
jo
cmpb
or
mov
sub
inc
aad
inc
push
mov
add
cld
fwait
push
jae
mov
mov
out
pop
xor
jg
je
jp
mov
xor
inc
dec
inc
sti
imul
and
adc
mov
push
fidivrl
out
xor
mov
mov
xchg
cltd
mov
outsl
mov
je
popl
jmp
stos
mov
cmp
addr16
arpl
jno
mov
dec
cmp
leave
je
lret
stos
movsl
addr16
int
xchg
lods
cltd
sbb
or
in
pop
and
cmp
add
cli
inc
lret
or
stos
repz
fldt
fyl2xp1
ja
mov
hlt
xchg
pop
inc
push
push
or
cmc
mov
mov
xchg
push
loop
and
xor
lds
dec
outsl
outsb
sub
jmp
xchg
mov
sbb
or
cli
push
std
jecxz
sbb
and
fidivl
cmp
aad
mov
daa
cmc
es
pushf
gs
mov
and
jo
pop
les
adc
stos
aaa
addb
pop
push
xchg
add
pop
inc
test
sub
lods
dec
std
jmp
iret
lods
push
mov
addb
adc
sbb
in
or
ret
jp
xor
adc
lds
lahf
repz
pop
sarb
cwtl
je
outsb
aad
fwait
call
dec
sub
and
push
lahf
pusha
inc
and
pop
js
lea
repz
lret
cmp
aaa
scas
xchg
push
adc
sbb
mov
mov
pop
and
pop
fwait
inc
test
inc
jns
add
sub
mov
sub
inc
add
ret
push
hlt
lahf
int
in
cmp
data16
cltd
mov
sbb
jne
jbe
in
leave
and
inc
test
sti
pop
mov
sub
mov
add
testb
adc
aaa
in
dec
or
stc
stc
xorb
inc
jnp
hlt
and
sub
dec
push
arpl
bswap
dec
outsl
mov
fstps
outsb
ficompl
shll
adc
jmp
into
cmp
inc
mov
and
js
scas
movsl
fiaddl
sarb
lcall
int3
push
je
ret
push
outsl
lret
and
jo
idivl
mov
sbb
addr16
aaa
outsl
dec
movsb
aad
push
xchg
imul
enter
jmp
dec
mov
xchg
sarb
cwtl
inc
push
dec
inc
lds
xchg
enter
cmp
enter
lcall
imulb
inc
outsb
mov
and
test
cmpsb
pop
shr
test
or
xor
lods
mov
bound
fisubs
out
dec
and
or
repnz
stos
enter
roll
xlat
scas
push
repz
dec
sti
in
mov
pop
dec
mov
cld
push
sti
shl
inc
dec
mov
cmp
mov
xor
and
je
mov
mov
test
pop
pop
fists
and
insl
rcl
and
aad
pop
sbb
push
jno
enter
and
in
cmp
lret
and
xor
sub
mov
jmp
or
xor
imul
mov
inc
xchg
repz
push
push
cld
xchg
lcall
cmc
std
loopne
testb
cmpsl
in
movl
jbe
outsb
pop
cmp
insl
xor
dec
hlt
lock
jo
adc
loope
or
or
outsl
ja
jmp
mov
jns
int3
cs
imul
adc
push
insl
mov
mov
pop
adc
mov
gs
mov
mov
xchg
std
jbe
dec
fsub
sti
outsb
ret
shll
mov
mov
push
push
xchg
push
stc
mov
shll
xchg
cmp
test
push
xchg
movsb
aas
mov
ljmp
inc
mov
xchg
add
in
inc
xchg
jle
mov
mov
mov
xchg
fs
and
push
or
mov
movsl
add
push
jl
lods
pop
lret
mov
ja
pop
rcll
mov
outsb
sbb
jl
sbb
jmp
sbb
out
ja
scas
mov
repnz
jae
cwtl
adc
lcall
mov
cmpsl
xchg
imul
xor
out
rolb
mov
cltd
sub
cmp
pop
scas
andb
push
xchg
push
cli
decl
ss
addr16
lahf
jo
or
test
mov
sarl
push
lahf
movl
loop
lcall
xor
inc
movsl
or
inc
or
fldl
add
xchg
iret
dec
out
je
jecxz
mov
test
imul
jge
je
cld
pop
cltd
push
push
in
push
xor
testl
sti
xor
xor
sarl
in
jno
and
push
lods
mov
cmpb
sbb
imull
mov
sarl
sub
xchg
mov
ret
mov
mov
lret
inc
insl
inc
cli
push
in
mov
lods
aaa
add
aas
inc
pop
je
mov
sti
jecxz
adc
loop
mov
cmp
rcl
push
adc
and
sbb
jbe
xchg
mov
mov
ss
setns
std
mov
stos
sbb
jnp
dec
scas
jb
arpl
jp
xor
push
dec
pushf
and
mov
popf
jl
pop
xor
mov
xchg
bound
adc
scas
sbb
inc
movsb
mov
popf
xchg
iret
je
xchg
cmp
mov
adc
pop
xchg
in
add
mov
and
adc
pop
and
push
pop
frstor
cmpsl
lcall
ret
add
fildl
push
cmp
call
stos
xor
push
in
jmp
cmp
cmp
jp
add
fwait
push
in
and
push
cmp
imul
push
ret
cmp
cmpsb
idivl
in
stos
adc
push
loopne
jp
xchg
orb
icebp
imul
lea
push
xchg
outsb
dec
mov
xchg
xor
xor
out
jmp
pop
nop
in
pop
pop
xchg
and
pop
ret
push
shl
into
xorl
mov
std
mov
mov
repnz
add
in
and
dec
cmp
adc
inc
into
stos
push
mov
pop
mov
ljmp
int3
jmp
aam
mov
fdivr
jge
or
cltd
pushf
sbb
mov
rorl
push
push
dec
cmp
cli
push
pop
call
xor
lds
mov
push
jp
repz
mov
and
icebp
movsl
and
sub
lea
mov
stos
je
push
jl
enter
jae
out
sbb
mov
iret
xor
cld
fimull
call
rclb
loop
insl
mov
loope
popa
sbb
pop
das
mov
fildl
std
mov
aas
xchg
fcomps
into
push
jbe
push
ret
mov
adc
cmpsl
lcall
aam
test
mov
les
stos
and
fiadds
stos
sti
xor
ljmp
sbb
sbb
and
xchg
leave
cmp
stos
rcrl
and
jo
inc
or
jne
rcll
ret
ret
pop
loopne
adc
push
pushf
push
mov
push
mov
roll
js
fstl
test
test
sbb
xor
push
sbb
ljmp
out
push
jp
jge
test
push
mov
xchg
and
in
sbb
mov
outsl
jp
mov
or
mov
pushf
pop
lods
lods
cmp
mov
test
sub
pop
xchg
repz
add
lds
imul
lret
pop
and
or
fldt
inc
clc
loop
mov
inc
ret
bound
or
loop
adc
lods
xor
mov
pop
std
mov
xor
out
sbb
out
and
ret
mov
xchg
stos
add
sbb
fildl
addr16
scas
sbb
lods
cs
aaa
or
add
loop
movsb
int
ret
adc
out
pop
xchg
hlt
xorl
int3
cmp
add
jne
inc
lret
repz
out
lret
lcall
imul
or
das
cmpsb
lret
pusha
loop
sti
push
inc
ret
sub
dec
jle
ss
mov
adc
mov
lods
or
add
mov
pop
aaa
fstps
mov
push
gs
insl
push
mov
fucomi
std
test
xchg
adc
add
insl
loope
imul
aam
mov
das
in
push
addr16
dec
loop
jecxz
testb
mov
mov
or
loope
lods
sbb
pop
pop
pop
inc
dec
imull
cld
jmp
push
daa
in
jne
dec
inc
rcrb
dec
faddl
xchg
adc
insb
je
push
mov
xor
loop
cltd
inc
adc
cmp
nop
mov
mov
inc
or
out
enter
sub
xor
xor
ljmp
aaa
aaa
lret
xor
imul
andb
jae
ljmp
jb
int3
fwait
dec
jmp
cwtl
fbstp
test
das
prefetchwt1
and
dec
xchg
repnz
jae
test
mov
mov
inc
jnp
pop
popa
pushf
loopne
sahf
jo
adc
jl
jmp
adc
cltd
push
data16
jmp
and
mov
imul
mov
mov
adc
stos
inc
rcl
test
adc
les
call
es
loopne
push
xchg
and
scas
mov
xor
sub
sub
pop
and
sbb
pop
jecxz
scas
push
xchg
sbb
out
mov
lods
rcl
cmp
lret
sub
jns
fwait
jl
les
xchg
sub
fimull
add
loopne
dec
or
test
pop
loope
fisubs
pop
in
in
inc
push
adc
cmpl
into
dec
int3
clc
sub
inc
push
pop
lds
das
in
jns
pusha
hlt
pop
sub
or
pop
sub
inc
dec
add
push
test
xchg
push
fnstenv
in
mov
cmp
mov
mov
sub
xchg
stos
daa
fstl
sub
mov
jae
cld
and
or
lods
pop
jmp
push
and
pop
xchg
xchg
and
rcr
mov
imul
cli
outsl
movsb
movsb
jnp
ds
cmpsl
cmp
sbb
dec
hlt
xor
iret
jp
inc
out
xor
add
orb
popl
mov
adc
xor
out
add
fcomps
xlat
das
shll
js
lock
stos
pop
outsl
pop
inc
push
fwait
mov
push
mov
inc
iret
or
mov
jae
ljmp
stc
gs
sahf
or
mov
cs
xchg
xchg
shlb
stc
xlat
xorl
adc
or
or
popf
push
addr16
add
dec
sub
fstpt
cmc
pop
pop
int
ret
add
sbbb
add
andl
in
xor
cmp
jp
mov
mov
xlat
int
pushf
xchg
push
nop
mov
es
mov
neg
jge
mov
and
mov
xor
enter
mov
sub
adc
inc
fwait
jecxz
xor
dec
mov
jecxz
cmpsl
nop
push
lea
and
bndldx
xchg
pushl
pop
mov
fimull
stos
cwtl
rcrl
cmpsl
inc
sbb
inc
sub
popa
popa
jl
sbb
pusha
das
fs
sbb
xchg
rep
ret
inc
mov
mov
dec
mov
inc
mov
ja
sbb
or
std
fwait
mov
mov
sahf
mov
and
outsl
lods
or
daa
mov
jnp
mov
lods
popf
rorl
mov
push
xor
loope
xor
cld
cmp
lcall
pop
pushf
in
filds
cmp
int3
std
mov
iret
sti
dec
imull
ljmp
dec
dec
lods
push
iret
push
mov
fsubrl
cmp
stos
psubusb
xchg
inc
lods
dec
xchg
cmp
scas
add
xor
and
gs
jb
and
push
jno
movsb
ss
adc
rorl
xchg
out
outsb
jno
push
xor
dec
fldenv
jle
sub
adc
mov
test
mov
flds
mov
xchg
mov
jle
push
pop
sbb
mov
add
jbe
mov
and
pop
add
incb
push
mov
adc
push
bound
mov
sar
faddl
jns
cmc
and
sbb
decl
dec
mov
or
repz
fiadds
divl
test
not
cwtl
pop
stos
lret
jge
out
cli
xchg
roll
jns
stos
stos
sbb
sahf
add
or
mov
cmp
push
mov
out
or
sub
test
add
subl
outsl
cmp
out
dec
out
mov
jb
lods
and
push
lret
outsl
js
shlb
or
repz
mov
fs
adc
out
pop
cmpsb
and
cmp
mov
dec
mov
sub
enter
fstpl
cld
cmp
ljmp
xor
xchg
pop
adc
mov
cld
fidivl
insb
dec
int3
jmp
shll
lcall
cmpsb
pop
jnp
pop
nop
out
ds
lods
sub
and
xchg
movsl
lcall
mov
ror
mov
push
cmp
cwtl
mov
fiaddl
lods
inc
gs
sbb
sbb
sbb
imul
cmp
push
fld
mov
jo
mov
pop
sbb
int
or
push
mov
pop
test
dec
jmp
adc
inc
cmp
fadd
push
je
imul
sbb
push
push
loopne
cli
jp
enter
jmp
popl
push
mov
jecxz
jns
xor
push
mov
leave
das
enter
pop
sarb
dec
popf
es
push
pop
or
xchg
sub
rorb
fsts
jno
sbb
arpl
pop
jo
fs
inc
push
sub
mov
add
sbb
cld
repnz
push
push
jb
push
cs
lea
xchg
fmuls
push
mov
ss
das
daa
rcr
test
ret
shl
xlat
push
mov
subl
mov
mov
inc
popa
std
pop
addb
jb
shlb
test
inc
dec
scas
pop
cmp
adc
dec
lret
lea
cmp
pop
mov
sub
dec
popf
jns
pop
xchg
test
xchg
adc
adcb
adc
ljmp
lret
into
xor
ljmp
or
sbb
mov
cmp
daa
rclb
lea
xchg
fisubs
ja
imul
into
daa
popa
cmp
add
popa
outsb
das
movsl
adc
lret
imul
imul
scas
pop
fadds
jns
sub
xor
in
cmpsb
cwtl
mov
mov
fadds
xchg
outsl
sub
xor
pop
and
mov
imull
idiv
dec
xor
fisubs
sub
pop
shll
inc
adc
push
inc
mov
insl
fnstsw
rcl
lret
adc
mov
push
pop
mov
mov
ja
push
test
pop
push
inc
fbld
dec
cmp
in
and
or
insb
call
xchg
jnp
lods
cmp
cmpsb
daa
mov
jnp
inc
lea
aas
mov
stos
lahf
ja
pop
cli
ficoml
loop,pn
xor
popa
mov
stc
daa
enter
addr16
outsw
cwtl
shl
push
mov
push
je
xor
xor
or
adc
inc
mov
fdivl
je
mov
dec
ret
push
mov
cs
popf
pop
adc
popa
loopne
out
hlt
pusha
ja
imul
jmp
lret
fidivrs
adc
fwait
je
push
bound
mov
les
iret
arpl
scas
dec
pop
fstpl
and
enter
mov
inc
sti
cmp
mov
jg
ss
imul
rcrb
xor
and
shll
push
shrl
mov
sbb
adc
dec
aaa
pop
jo
mov
sbbb
dec
xchg
push
lret
xchg
push
jmp
addr16
jge
lahf
cltd
addl
sahf
dec
mov
and
mov
jb
shlb
popf
and
cmp
sub
fcmovnbe
cmp
stos
imul
mov
hlt
mov
mov
inc
sbb
adc
xor
mov
adc
push
aad
ret
mov
in
stc
push
dec
inc
leave
inc
sub
fwait
xchg
xchg
add
xchg
lret
adc
lods
or
filds
ljmp
cltd
out
aaa
adc
fldcw
dec
int3
cld
movsb
ja
pop
lahf
sub
insb
push
fisttps
lods
jl
rcrl
push
cmpl
cmpsl
sbb
stos
xlat
cmp
in
mov
rcrb
jae
movsb
adc
loopne
pushf
ljmp
mov
scas
imul
or
jmp
add
or
in
je
arpl
mov
mov
cs
mov
jle
inc
sbb
in
jb
repnz
fwait
int
pop
pop
dec
repz
ret
cmp
push
mov
arpl
xor
jbe
addb
mov
mov
and
mov
stc
sub
and
inc
outsl
ds
mov
fstp
test
lcall
xchg
pop
cmp
mov
xchg
fidivl
stos
cmpsl
sbb
les
aam
jbe
dec
out
add
sbb
mov
push
lds
add
xchg
xchg
aaa
cmpsl
sbb
insl
ds
pushf
out
jg
mov
fimull
ret
add
inc
out
mov
xor
xchg
dec
scas
fstpl
dec
mov
stos
xchg
icebp
push
dec
lret
ss
scas
mov
inc
pop
jle
and
inc
push
cmp
mov
dec
add
inc
cmp
stos
xchg
in
xchg
aas
ffree
and
adc
add
push
cmc
jg
nop
dec
jl
js
mov
fldenv
inc
pop
push
nop
mov
pop
mov
iret
fiaddl
push
adc
dec
mov
xchg
out
pop
dec
and
jno
pop
faddp
xchg
adc
or
bound
lcall
jne
and
or
in
xor
xchg
jo
lcall
push
aaa
pop
lret
fwait
sti
movd
xchg
in
sar
nop
push
call
jmp
mov
je
cmp
add
rcrb
jbe
sub
adc
bound
scas
sbb
test
stos
and
lods
and
pop
push
xor
adc
mov
jno
pop
flds
addr16
mov
fldl
and
jg
lods
iret
mov
push
fwait
loopne
icebp
popf
mov
int
cmpb
pop
pop
lock
sbb
push
mov
fwait
mov
roll
pop
and
mov
add
out
cmpsl
sub
les
xchg
mov
sbb
fldenv
add
mov
test
sbb
stc
xchg
mov
jb
in
jae
push
ds
cmp
and
testb
sub
jge,pt
push
adc
test
xchg
aam
dec
and
inc
add
sti
insb
push
rcrb
mov
stc
push
sub
call
mov
sub
push
xor
je
lcall
les
pop
sub
ja
push
jl
sub
imul
out
ljmp
rclb
aaa
sub
inc
inc
push
addr16
fwait
jmp
jnp
bound
enter
cmp
push
ljmp
insl
bound
testl
fninit
popf
popf
jecxz
mov
push
dec
jnp
jp
mov
in
shrb
pop
es
cmp
clc
sbb
pusha
xor
cli
xchg
rorl
jmp
shlb
pop
pop
scas
popf
scas
mov
xchg
popf
add
sub
xchg
and
std
pop
pop
mov
sti
js
lock
or
push
mov
daa
xchg
mov
cmpsb
xchg
or
jns
rcl
jns
stos
xchg
shll
cltd
pop
jno
and
cmp
cld
xchg
cmp
lods
fcoms
jmp
jl
into
cmp
popf
mov
ja
aaa
fimull
dec
cs
daa
int3
adc
nop
dec
jmp
dec
or
dec
test
lock
fisubrs
clc
push
test
ss
sbb
push
inc
add
mov
in
hlt
int3
leave
iret
inc
pop
or
add
daa
pop
lock
rcrl
shlb
adc
rorl
mov
lock
fstp
dec
jg
dec
test
xchg
push
push
jae
cmpsb
ljmp
mov
popa
xor
loopne
mov
sbb
sub
adc
es
inc
leave
adc
mov
add
jge
xchg
pop
xlat
nop
pop
xor
cmp
mov
int
pop
adc
cltd
sbb
outsl
hlt
in
mov
das
fnsave
inc
xor
pop
push
adc
mov
jb
dec
pop
out
stc
aaa
jae
lea
add
outsl
sbbb
notb
xor
jp
sub
mov
outsl
sub
pop
clc
adc
push
mov
mov
aas
loop
out
push
xchg
js
or
subl
shlb
movsl
mov
inc
adc
hlt
cmp
cmp
mov
cmpsb
inc
cltd
xchg
fists
loopne
push
lcall
js
sti
adc
inc
je
lods
icebp
jge
test
cmpsl
xchg
sub
cmp
fwait
int3
stos
out
ds
and
mov
inc
mov
sub
adc
cmpsb
inc
dec
push
pop
sahf
push
mov
jae
sbb
and
lea
movsl
or
and
push
lea
dec
testb
movsb
adc
jnp
fucom
xorb
jmp
lods
sub
setno
xor
or
add
push
add
adc
sbb
pusha
inc
loop
mov
popa
icebp
xchg
fisttps
fwait
xor
sar
pop
cmpsb
sbb
push
movsl
aam
jl
sahf
ret
mov
push
push
cmc
adc
lods
inc
push
das
or
push
loope
dec
outsl
jmp
xchg
and
and
add
mov
hlt
test
dec
mov
or
and
inc
and
xchg
or
hlt
fisttps
mull
repz
inc
out
ja
mov
push
loopne
and
add
fdivrl
loopne
out
cld
movsb
xchg
sub
stc
pusha
inc
pop
lods
xchg
or
fsubl
inc
stc
mov
sbb
out
and
push
lcall
movsb
add
push
std
fwait
xor
lret
scas
adc
push
xor
sub
dec
sbb
mov
jno
jle
mov
cmc
xor
jne
xchg
sub
sbb
jne,pt
pop
sub
adc
adc
xchg
xchg
add
mov
xlat
sbbl
jnp
mov
jl
ljmp
cmp
lds
pop
into
lahf
inc
push
inc
cmp
add
int3
in
clc
addr16
imull
lea
cmpsb
adc
mov
sub
xchg
cmp
adcb
repnz
cmp
mov
stc
xchg
andl
mov
ret
cmpsl
xchg
mov
lahf
push
sbb
push
subl
mov
cld
inc
jnp
dec
dec
test
cmp
mov
test
sub
popf
outsb
bound
mov
push
cs
cmp
iret
dec
push
arpl
xor
xchg
mov
mov
mov
fnstcw
addr16
call
scas
push
shrl
cmp
sbb
sbb
cld
clc
mov
or
push
lock
test
pop
shlb
jne
mov
or
jp
daa
mulb
jo
xchg
test
xor
mov
mov
jnp
cmpsl
sti
adc
add
push
xchg
pop
es
ljmp
push
into
jecxz
adc
mov
decb
cmp
jle
fbstp
mov
sub
xchg
mov
and
push
or
cmc
sub
dec
test
cmp
fnstenv
test
sarb
rcll
adc
jge
pop
loop
fstps
pop
jns
scas
imul
push
adc
xor
pushf
jnp
stc
movsb
push
fld
pop
sbb
cmc
aas
xchg
or
sub
adc
je
mov
push
push
xlat
lcall
mov
scas
insl
sbb
cs
cli
jnp
pop
adc
mov
ds
gs
pop
and
mov
cld
cmpsb
lods
or
xor
pop
jnp
int
sahf
push
andl
push
nop
movsb
mov
scas
push
dec
repz
jno
and
mov
mov
cli
mov
stc
pop
aad
or
add
add
sub
adc
nop
aam
cs
aam
and
ret
and
popf
pop
and
add
sub
push
in
dec
xor
pop
lahf
loop
cmp
mov
stos
in
out
cwtl
mov
xor
dec
ss
rcrl
mov
mov
lret
and
lods
jmp
aad
adc
pop
lods
jmp
push
cmp
jle
jl
cmp
dec
push
int3
pop
dec
mov
xor
mov
mov
sub
insl
daa
in
add
mov
aaa
call
mov
outsb
ss
jmp
xor
scas
and
es
or
mov
lock
stos
test
jne
jae
mov
push
cmp
adc
pop
xor
and
mov
dec
ja
push
mov
ljmp
mov
mov
jne
xor
ret
test
int
mov
dec
sub
or
mov
adc
mov
xchg
cmpsl
cmpb
xor
popa
cmpsl
mov
outsb
cmp
out
test
sub
jge
cmpsl
fists
ficoms
inc
inc
jl
hlt
add
xchg
jae
push
and
sub
in
test
in
lcall
xchg
pop
sbb
mov
sbb
mov
mov
rclb
std
push
adc
jns
push
push
push
repnz
and
lret
jecxz
or
fisubs
adc
fisttpl
dec
repz
ds
mov
fs
adc
ret
dec
fcmovb
pop
loop
or
or
sub
aaa
cwtl
cwtl
and
sub
pushf
leave
ret
icebp
jmp
lods
mov
xchg
and
ja
jno
fimuls
or
das
test
push
xor
enter
cli
adc
pop
addr16
jnp
jno
ficoml
rol
sub
jle
sub
inc
sbb
pop
aaa
sub
or
les
repz
mov
outsl
push
push
xor
push
cmp
rolb
cwtl
iret
mov
scas
cmc
lods
xor
ret
or
sub
lret
xor
inc
fnstenv
inc
fstps
repz
jl
lea
mov
sub
pop
leave
mov
xor
and
or
pop
pop
inc
dec
stc
sub
xchg
pusha
jle
sub
pushf
push
inc
inc
stos
mov
fiadds
fsubr
cwtl
mov
mov
scas
push
sub
inc
test
inc
xchg
mov
out
scas
jae
shll
sub
adc
mov
add
pushf
or
xor
push
test
mov
loop
and
out
pop
add
mov
sar
cmp
fcmovu
gs
adc
or
es
push
in
adc
stos
cmp
lods
pop
outsb
xchg
add
fcmovnb
sub
xchg
ss
iret
hlt
pusha
popf
pushf
outsl
adc
test
xor
pop
fbld
mov
repnz
enter
push
jne
mov
dec
mov
jmp
push
dec
ficompl
in
pop
jne
stc
sbb
stos
push
mov
outsb
out
pusha
or
jns
rcrl
fstpl
addr16
and
or
mov
imul
inc
loop
pusha
cmp
inc
pop
jle
dec
cmpl
lret
cltd
cmc
cmp
push
cmp
dec
xor
icebp
or
xchg
rolb
mov
fdivl
enter
mov
ss
repz
test
arpl
ret
inc
pop
push
in
push
inc
mov
pop
jmp
popa
dec
sbb
jns
sbb
sbb
stos
cli
mov
xor
hlt
test
fisttps
loopne
das
sahf
lods
dec
add
adcb
xchg
jns
pop
jns
mov
mov
add
aam
movsb
loop
es
lcall
xchg
mov
mov
outsl
dec
push
sti
imul
lret
lahf
jp
xor
lcall
in
and
xor
fs
int3
scas
or
jae
lcall
icebp
jge
sbb
cmpsb
or
pusha
pop
imul
ret
pop
mov
push
fcom
mov
inc
cmc
pop
xchg
fs
adcb
inc
adc
rorb
push
sbb
sti
mov
andb
sbb
and
jl
dec
jae
adcl
xchg
or
push
pop
out
cltd
mov
hlt
outsl
lock
dec
xchg
imul
or
sub
nop
pop
ret
cs
fs
cmp
mov
testb
scas
or
cmp
sbb
sub
lret
mov
aam
dec
push
cli
inc
stos
in
add
clc
push
xchg
sbb
outsb
dec
fdivrl
dec
adc
negl
adc
mov
xchg
in
sub
fisttpll
push
dec
out
cmpsl
push
lods
ror
cltd
ret
or
sub
dec
cmp
fwait
cmp
mov
dec
sbb
sbb
push
or
mov
cli
jne
add
loopne
inc
push
nop
cmovbe
or
sub
sub
mov
dec
je
dec
sub
jo
scas
loope
mov
and
dec
jge
mov
sub
xchg
push
and
lds
out
in
bound
stos
mov
lahf
cmc
add
jl
cwtl
incl
cmp
pushf
not
cmc
pusha
and
mov
scas
fwait
add
stos
pop
jo
mov
sub
addl
lods
cmpsl
mov
xor
ss
ljmp
push
imul
xchg
fs
mov
push
xor
pop
xor
pushf
js
cmc
cmc
stc
mov
pop
loop
loope
xor
xchg
xor
movsl
rorb
outsb
sbb
sub
push
pop
out
xor
inc
pusha
out
rorb
mov
sarb
lret
inc
fldl2e
std
arpl
jp
loop
incb
test
dec
cmp
xchg
dec
jecxz
pop
jmp
jmp
adc
add
jmp
adcb
faddl
inc
sub
ljmp
add
nop
and
iret
push
xorb
or
loope
and
pop
push
inc
mov
fisttpl
pop
loop
cmpsb
dec
cmpsl
rol
jp
jl
je
adc
adc
and
mov
lock
enter
rep
mov
ja
pop
jp
jno
adc
andb
lret
jo
movsb
inc
inc
das
cs
movsl
sbb
or
xchg
hlt
inc
xor
push
pop
enter
aad
sbb
mov
mov
push
call
stc
mov
cmp
inc
add
pop
inc
repz
jbe
into
push
pop
hlt
sti
loop
dec
jnp
sbb
sub
mov
fistps
lahf
dec
and
sti
imul
dec
fistl
sbb
pushf
mov
sub
jmp
fcoms
enter
mov
sub
add
adc
pop
enter
mov
mov
pop
or
hlt
cli
jbe
dec
arpl
mov
iret
dec
adc
add
xlat
cmpsb
pop
cld
cmp
xlat
shrb
mov
aaa
aas
xor
scas
addr16
clc
lock
cmpsl
int
inc
xor
sbb
test
mov
insb
cmp
out
jne
add
sbb
rol
adc
jmp
in
fstps
xchg
adcl
xor
popf
adc
jb
mov
mov
pop
inc
insl
test
lock
orb
clc
insl
fstpt
clc
movsb
pop
in
add
and
pushf
dec
daa
push
imul
cli
sar
push
test
adc
xchg
cmpsl
xchg
mov
pop
popa
in
inc
push
dec
jle
mov
test
es
ficoml
jb
out
mov
adc
xlat
fwait
aam
ficompl
push
xchg
dec
dec
pop
and
inc
jo
xchg
push
fs
shrl
lods
jmp
sbb
pusha
cmp
pop
out
or
xchg
adc
dec
jp
popa
jno
fdivl
mov
fld1
lret
mov
or
jmp
push
bound
and
inc
cltd
mov
call
aam
dec
cmp
in
lock
cwtl
es
pop
dec
pop
mov
cmp
inc
mov
enter
fidivrs
mov
sub
lahf
adc
sti
hlt
aad
pushf
fmull
ja
xchg
inc
mov
enter
fistps
sti
add
add
mov
jo
iret
cmp
loope
add
rorb
sbb
neg
ret
jle
pop
sub
iret
xchg
sti
mov
mov
int3
dec
inc
jecxz
cmpsb
xchg
adc
jb
mov
addr16
dec
mov
ficomps
dec
jb
out
shlb
pop
lcall
dec
jo
pop
pop
mov
adc
dec
ja
or
lods
mov
jmp
push
test
outsl
xchg
or
mov
cltd
dec
lahf
pop
pushf
add
int3
dec
pop
rclb
and
fsubs
sbb
les
iret
cmpsb
out
mov
push
mov
aam
push
pop
mov
mov
imul
sti
xchg
popa
lahf
fwait
fs
push
arpl
or
clc
movsb
xor
stos
xchg
notb
pop
shl
xor
fbld
loop
lahf
add
or
xchg
adc
push
lods
adc
movsl
and
add
testl
inc
test
cld
pop
cmpsl
lods
or
mov
inc
enter
cli
pop
sub
stc
dec
mov
cmp
jb
mov
cld
mov
xor
rolb
das
push
aaa
cltd
xor
loopne
push
lcall
add
dec
pop
lea
gs
push
adc
imul
scas
addr16
mov
test
sbb
push
fistpl
outsl
cmpsl
xchg
cmc
jns
adcb
clc
cmpsl
mov
or
dec
lret
test
stos
or
fcomip
mov
pop
pop
out
js
scas
xorl
jg
das
stc
outsl
leavew
shr
in
ret
vxorps
cmpsb
out
jg
loopne
and
adc
mov
incl
xchg
lea
punpckhdq
pop
sarl
inc
into
rcrl
cmp
idiv
jno
loope
rcll
ret
aam
inc
dec
enter
jecxz
sub
pop
inc
dec
test
adcb
fnstsw
mov
fisttpl
mov
pop
std
insb
aad
xor
cmp
dec
jge
jmp
adc
stos
sub
or
pushf
inc
inc
sub
push
jcxz
sub
inc
push
hlt
das
in
jnp
hlt
inc
mov
sti
xchg
sub
cmp
xor
sub
movsb
outsb
push
sub
jge
mov
sbb
jg
and
fisubrl
jl
sub
dec
es
movsl
adc
xchg
xchg
inc
jae
stc
xchg
lods
add
add
mov
pushl
popa
nop
pop
leave
stos
icebp
jno
ror
pop
popf
orb
ret
inc
popf
scas
fstps
lahf
out
push
scas
cmp
xchg
jo
cmc
dec
jns
mov
loopne
mov
jle
add
das
cmp
mov
aaa
sbb
mov
push
into
jecxz
es
mov
ret
adc
outsb
and
fisttpl
inc
cltd
mov
test
mov
pusha
scas
cld
dec
fs
repnz
xor
fiadds
dec
push
dec
push
pushf
xchg
ljmp
push
jnp
clc
nop
sub
int
ret
or
jbe
cmp
and
clc
ror
pop
jg
lods
mov
adc
fisttpll
ja
push
adc
cli
hlt
ret
xchg
mov
popf
sub
shlb
mov
mov
insl
xchg
int
dec
jb
mov
cmp
shl
ja
pop
aaa
loopne
sub
add
mov
or
in
mov
xchg
lods
xchg
adc
or
out
sarl
xchg
mov
inc
call
or
fmuls
jle
mov
adc
sbb
cmp
cmp
ja
inc
sbb
cmpsb
movsb
mov
sahf
inc
aas
lcall
or
xchg
push
cli
push
ljmp
int
out
loope
testl
insb
mov
test
cltd
jg
nop
and
dec
pushf
or
ds
int
fucomi
sub
mov
or
xor
xchg
inc
fsubrp
add
nop
sub
mov
mov
test
lahf
inc
stos
hlt
gs
mov
push
int3
loopne
out
mov
fdivrl
or
mov
movl
sub
les
push
or
pop
repz
out
in
cmpsb
ret
jnp
test
push
xchg
lahf
mov
scas
in
out
aaa
shll
into
addl
inc
adc
push
or
pop
cmp
push
clc
test
std
je
mov
addb
xlat
lods
xchg
loop
rcr
xchg
notb
out
fiaddl
dec
sub
push
ret
pop
xchg
xchg
push
push
sub
out
xchg
mov
jle
xor
lret
ja
and
lret
jno
scas
pop
ss
icebp
add
cwtl
mov
mov
fdivr
arpl
and
mov
mov
or
sbb
jno
xchg
inc
mov
adc
cmp
sbb
cli
lea
jmp
mov
movsl
inc
or
mov
sbb
fistps
cmp
loope
paddd
cmc
ljmp
and
mov
xor
mov
fs
in
rcll
in
lds
call
stos
jg
lret
push
icebp
pop
and
xchg
rcrb
mov
mov
mov
sarl
add
pusha
adc
enter
add
subb
jmp
jbe
mov
insb
sbb
int3
add
shrl
cmp
es
insb
repz
rorb
and
jbe
mov
inc
aad
cmp
xchg
mov
cmp
lods
jbe
cmp
aaa
call
cmpsb
pop
mov
lret
out
outsl
dec
ret
dec
cltd
scas
arpl
in
repz
mov
jg
push
or
and
mov
dec
ret
cmp
push
mulb
in
cmp
lds
mov
mov
lahf
aas
loopne
cmp
mov
rclb
test
incb
mov
mov
dec
pop
aaa
mov
xchg
xchg
rclb
sbb
mov
cmp
lods
xor
mov
jge
add
inc
jo
adc
mov
push
cwtl
out
outsb
int
mov
bound
mov
in
mov
outsl
jbe
push
inc
dec
out
pushl
cld
jp
xchg
dec
pop
ret
mov
movaps
jl
shl
xchg
jno
xchg
jbe
xor
jb
je
outsb
sbbb
jno
sub
lcall
or
mov
xchg
jnp
add
push
lods
sbb
sbb
jmp
loop
or
enter
cmc
inc
andb
push
mov
cli
les
out
testb
daa
dec
inc
and
sbb
xchg
mov
mov
mov
push
inc
pop
lock
ficoml
cmpsb
mov
out
mov
jne
fcomps
mov
mov
jl
mov
mov
mov
fwait
add
sbb
mov
or
mov
in
aam
insb
sarl
cli
leave
pop
inc
scas
cld
sbb
loop
add
lret
jne
adc
inc
xor
int3
jg
pusha
dec
add
mov
mull
jb
push
out
add
clc
dec
mov
push
testl
mov
jbe
jmp
jne
adc
imul
cltd
jp
and
lods
aam
jno
or
lcall
test
xor
push
int
jbe
hlt
out
pushf
pop
and
jno
xor
loop
mov
mov
pop
jp
insb
adc
or
sbb
fidivl
fsubrs
push
cli
pop
xchg
mov
mov
outsl
push
jle
xorb
imul
jl
push
push
push
test
xorb
mov
lock
arpl
ds
dec
loopne
daa
sbb
dec
imul
addb
mov
jp
sub
imul
cmp
jle
lret
cmpsl
cmp
inc
jne
cmp
icebp
xchg
pop
xchg
jg
xor
add
push
rorb
dec
clc
loop
mov
loope
jnp
add
mov
lods
ffreep
push
sub
and
xor
scas
cmp
push
xor
lret
add
pop
pop
js
divl
imul
mov
adc
xor
fwait
test
mov
setae
lcall
adc
pushf
test
mov
aad
push
loopne
cmp
push
cmpsl
and
imul
xchg
pop
sti
pop
sti
icebp
insl
mov
adc
mov
add
aaa
insb
mov
jge
test
mov
inc
mov
lds
push
lret
stos
push
jp
pusha
rcrl
sub
add
jne
or
and
mov
or
lret
mov
je
cmp
fiaddl
mov
add
es
adc
gs
and
sbb
mov
sbb
sbb
sub
fisubrl
pop
push
icebp
add
mov
and
mov
dec
jp
clc
daa
roll
push
movsb
int
push
mov
aaa
xchg
les
es
ret
pop
jge
jns
cwtl
dec
popf
sub
add
mov
jl
push
mov
lcall
push
sarb
add
cmpsl
xor
push
sbb
mov
or
adc
jno
lods
jg
cmpl
loope
pop
pop
mov
fwait
out
mov
test
xchg
out
xor
lods
add
mov
pop
imul
or
or
je
xchg
sahf
mov
add
mov
frstor
inc
insl
std
inc
lock
xchg
andl
xchg
clc
rcrb
dec
out
stc
shll
adc
enter
mov
je
out
pop
std
mov
mov
jno
jg
iret
stc
push
insl
mov
in
mov
or
jmp
daa
and
test
xchg
arpl
shl
mov
mov
xchg
in
jmp
mov
push
mov
or
xchg
movsb
and
or
es
popa
adc
adc
imull
inc
push
out
jmp
adc
shrb
inc
daa
adc
push
jmp
jno
pop
pop
push
pop
lcall
sub
test
repnz
jno
or
sub
jo
and
les
sti
int
mov
stc
lcall
xchg
sub
sub
xchg
loop
scas
jae
sahf
bound
pop
in
or
sti
lds
notl
data16
inc
dec
testb
cvtps2pi
pop
ds
dec
push
into
cwtl
in
or
adc
jnp
daa
pop
lret
inc
mov
pop
or
jmp
mov
mov
into
mov
mov
aaa
stos
and
xchg
cli
mov
mov
sbb
cmpsl
outsl
and
add
push
lock
inc
test
sbb
sti
aad
imul
dec
add
enter
js
in
mov
jge
and
xor
mov
dec
stc
ss
in
js
or
pop
icebp
sub
fs
stos
stos
in
movsl
add
scas
mov
mul
inc
push
subl
xchg
inc
aas
ret
and
fwait
mov
int3
aaa
data16
in
pushf
push
push
repnz
sbb
outsl
push
push
or
sbb
bound
jl
jge
cmp
out
ss
inc
dec
push
dec
stos
adc
xlat
imul
jl
aas
sub
pop
inc
adc
test
xchg
js
mov
mov
jge
addl
rcr
fistps
push
loopw
inc
push
cmp
sarl
in
push
mov
adc
andb
jns
scas
testl
cmp
jmp
jnp
xor
ss
jl
lcall
push
call
flds
sbb
adcl
add
xchg
frstor
ja
aad
adc
sti
xchg
bound
test
test
xchg
mov
repz
and
sub
scas
dec
iretw
scas
popa
jae
xchg
pop
pop
pop
mov
rolb
adc
inc
mov
adc
repnz
leave
add
mov
inc
pop
adc
aam
sbb
pop
icebp
sub
stos
lds
cmpsb
pop
cmp
mov
shll
xchg
or
pextrw
mov
cmp
arpl
movsl
dec
mov
scas
lret
lret
pop
add
mov
nop
lods
dec
xchg
lahf
jg
pop
shlb
cmpl
lea
xchg
fwait
nopl
and
and
cmpsb
jp
xor
call
or
or
mov
pushf
cli
mov
leave
jne
fisubrl
fildll
enter
idiv
push
dec
sbb
mov
and
pop
sti
in
pop
sbb
out
aaa
cmpsl
inc
dec
sub
pop
inc
popf
ljmp
and
int
xchg
xchg
mov
inc
cmp
ja
mov
jecxz
cmp
iret
frstor
stc
cmpb
xchg
int
mov
xchg
fisubrl
jno
leave
cmc
mov
cli
pop
add
push
loop
sahf
push
jge
scas
cld
arpl
dec
loop
bound
xchg
hlt
adc
fldl
ljmp
cmpsl
mov
push
movsl
pop
pushf
lods
push
addr16
pop
and
adc
cmp
imul
dec
push
pusha
in
lahf
xor
xchg
dec
fisubl
pop
xchg
jae
sub
pop
lcall
divl
cmpsl
test
cltd
fmuls
fstpl
popf
dec
fisubrl
cmp
xor
mov
outsl
rcl
in
push
aam
in
and
jnp
shlb
cmp
xchg
mov
inc
cmp
cltd
pop
ret
lds
xchg
or
and
mov
or
xor
test
and
scas
jmp
jne
xchg
fbld
jo
aam
test
sbb
mov
hlt
insl
imul
je
cmp
scas
and
sub
push
shrl
mov
mov
out
pop
rolb
lcall
xchg
cmp
push
push
popf
xor
sahf
adc
pop
popf
pop
call
sbb
lock
jp
pushf
add
ja
cltd
push
lock
loop
push
dec
pop
in
mov
ficoms
inc
into
insb
int
hlt
jns
das
adc
inc
sbb
std
fistpll
cltd
sarl
and
fildl
cmp
mov
pop
adc
nop
shrl
xchg
les
or
arpl
popa
push
and
mov
insb
aaa
adcl
jecxz
pop
loopne
shlb
loopne
lods
aam
popa
xchg
xor
inc
repnz
xchg
push
clc
or
inc
pop
mov
dec
repnz
pop
pop
jo
pop
push
es
out
mov
fdivrl
mov
mov
sbb
jo
dec
popa
fwait
add
outsl
aaa
arpl
jg
ljmp
mov
ljmp
addr16
in
and
out
jb
xchg
mov
ret
popa
cld
cli
push
jno
repnz
mov
or
pop
adc
and
inc
mov
push
cltd
aas
stos
in
sub
je
jno
aaa
add
mov
or
or
adc
mov
test
jmp
movsl
iret
lret
imul
shr
xchg
and
lods
in
mov
mov
add
cwtl
popa
mov
out
adc
hlt
sbb
test
pop
fcoms
ss
dec
sarb
ds
shl
pop
pop
xchg
or
in
sbb
push
jmp
movsl
xchg
sub
cmp
or
daa
gs
stos
cmp
cmp
mov
ret
ljmp
jmp
sbb
mov
daa
pusha
sub
and
popa
cmpsl
xchg
jmp
and
pop
add
jno
and
out
stos
mov
mov
repnz
stc
xchg
sti
jb
loopne
or
add
int3
and
test
xlat
push
lock
sub
sarl
test
fwait
xchg
sahf
repnz
sub
push
jp
push
mov
movsl
inc
fwait
lret
loop
mov
leave
mov
aaa
mov
inc
dec
pop
js
pop
push
negb
mov
dec
in
sbb
fists
lahf
cli
jne
loope
pop
lahf
arpl
scas
push
cmp
repnz
adc
push
xor
push
xchg
jmp
lods
xor
int
jle
cmp
test
dec
jo
outsl
scas
enter
jo
repz
and
inc
imul
jge
or
dec
popf
aam
cmc
add
fldl
out
decl
sub
mov
xchg
adc
stc
pop
adc
xchg
fnstcw
call
sti
sahf
div
mov
sbb
cmpsb
test
or
aas
mov
stos
mov
in
jnp
mov
push
sbb
aam
sbb
mov
mov
inc
xchg
popa
jmp
popf
jg
scas
push
mov
ja,pn
fnstsw
mov
cmp
fildll
js
mov
xchg
and
iret
fsubl
pusha
popa
jmp
add
inc
pop
cmpsl
int
sbb
loop
mov
pop
pop
subb
ret
push
add
inc
xlat
pop
sub
shl
arpl
loope
xchg
pop
sbb
icebp
dec
dec
sbb
scas
mov
inc
pusha
lahf
in
clc
sub
add
and
fmul
mov
mov
add
outsb
inc
mov
dec
mov
bound
test
lods
sub
sti
nop
mov
inc
jmp
je
pop
inc
inc
jb
fidivl
inc
jne
je
mov
cld
ret
and
aas
mov
test
dec
adc
sbb
dec
cmp
push
sti
cmp
mov
pop
jg
mov
lcall
mov
movsb
pusha
push
fldl
pushf
inc
jb
cmpb
pop
incl
cld
add
sub
out
mov
pop
in
lcall
xor
pop
or
jg
jle
mov
add
add
push
sub
inc
sahf
pushf
xchg
mov
pop
out
pop
out
cmp
popa
stos
jne
ljmp
les
jg
xchg
or
lret
adc
ja
aas
jmp
push
add
sbb
mov
mov
sub
xlat
jnp
mov
jge
sbb
aas
dec
imul
cltd
cmp
fwait
mov
inc
test
pop
mov
lea
cwtl
mov
dec
mov
sub
xchg
cmp
fisubs
and
pop
mov
insl
and
arpl
mov
push
stos
add
xchg
mov
xchg
push
push
push
lock
leave
lahf
mov
xchg
subl
sub
push
pop
insl
je
jne
shrl
roll
sub
jb
repz
leave
sbb
ss
aaa
call
je
lret
sub
adc
adc
lahf
sub
pop
push
subl
sbb
push
mov
mov
sbb
cmpsb
push
push
jl
jns
adc
popf
shlb
movsl
xlat
mov
sub
test
dec
mov
testb
or
mov
adc
push
add
out
roll
fadd
popl
jb
cmp
xor
ja
mov
call
push
call
mov
cmp
loop
mov
sub
cs
jne
sub
outsl
push
loop
and
daa
bound
pop
jne,pn
jnp
sbb
pop
mov
xlat
into
push
in
mov
pop
and
int
out
sbb
push
inc
xchg
mov
fists
out
xchg
mov
hlt
lahf
inc
movsb
data16
or
lods
insb
pop
js
stc
and
xchg
pop
xchg
inc
or
scas
push
fistpl
enter
aad
mov
aam
ss
outsl
js
arpl
sub
or
add
sarb
pop
xchg
lcall
out
xlat
mov
fisubl
ss
sti
sub
adc
movsb
les
lods
and
inc
sub
mov
push
push
mov
push
fyl2x
push
dec
sbb
pop
sbb
cmp
out
adc
mov
fisttps
fildll
fidivl
sub
and
mov
ficoml
out
and
xchg
lock
xchg
push
xor
stc
sahf
out
aaa
iret
mov
insl
lcall
pushf
inc
xor
cli
push
ds
push
pop
aam
adc
fcom
push
fisubrl
mov
in
daa
jecxz
repz
insb
sub
xchg
or
push
jg
xchg
and
cmpsl
mov
int3
imul
cmp
arpl
mov
rcll
inc
stos
repnz
ds
jnp
mov
adc
enter
fistl
xor
cmp
int3
xchg
cmpsl
xor
mov
popf
sub
jp
adc
xor
or
jb
xor
cwtl
shll
cmp
pop
dec
mov
cli
cmp
fisttpll
repz
movsb
dec
addr16
sub
inc
cmp
rcrl
mov
dec
jg
mov
push
xchg
pop
push
mov
scas
into
inc
mov
pushf
and
add
rol
cmp
movsl
das
inc
and
sarb
mov
bound
std
adc
xlat
or
scas
ja
mov
call
test
ds
aas
repz
xchg
mov
xchg
cmp
cmp
out
cltd
scas
mov
mov
jo
in
nop
outsl
cltd
out
or
push
mov
test
or
xor
and
jo
push
bound
sub
daa
popf
mov
out
out
sbb
cli
push
jmp
and
jmp
mov
les
sbb
int3
adc
popa
pop
mov
xchg
fcoms
sub
arpl
js
jns
aad
jns
scas
icebp
mul
cli
xlat
sarb
rclb
pop
jmp
cmp
aam
out
dec
cwtl
dec
popa
push
fwait
jb
outsl
and
sbb
dec
test
mov
data16
push
sbb
ffreep
lods
jecxz
push
in
rolb
cmp
into
push
je
pop
jae
test
in
out
jmp
sbb
lret
int
and
and
pop
insb
fstpl
mov
pop
jnp
pop
and
call
sbb
xchg
ja
lret
iret
mov
sub
punpckhbw
lds
les
dec
jle
outsb
and
fcoms
mov
incl
push
cmp
xchg
icebp
daa
inc
shr
call
adc
fisttpll
test
xlat
shll
shrb
mov
repz
ror
icebp
push
shrl
imul
adc
fmul
inc
push
jne
std
mov
test
ret
dec
popf
mov
mov
testl
jno
add
sub
mov
add
test
stos
xor
sahf
mov
enter
mov
stos
sahf
loope
dec
aam
movsl
aam
sbb
lahf
test
jmp
insb
fcmove
dec
scas
adc
iret
cmp
jns
cmpsb
pop
push
jle
push
mull
mov
pusha
inc
mov
xor
movsb
into
ss
pop
lret
loop
mov
rolb
dec
mov
sub
iret
popa
inc
adc
iret
loope
cmpsb
dec
ds
push
push
sbb
or
adc
add
test
call
add
cmp
sbb
xchg
repnz
call
mov
outsb
in
mov
cmp
dec
arpl
les
xchg
adc
lret
aam
mov
in
mov
cmp
lock
jge
sbb
lcall
mov
mov
aam
jp
cmpsl
loopne
ficoms
add
out
bound
repnz
fcomip
or
mov
push
fsubs
sub
and
aas
jge
cs
jg
mov
sbb
mov
xor
popa
lret
cmpsl
jecxz
lea
cmpl
cmp
inc
sub
cs
je
mov
fdivs
repnz
mov
hlt
cmp
jmp
jbe
fsubrp
xchg
out
push
push
mov
pop
in
or
mov
mov
and
shlb
and
pushf
xor
ret
sub
cmp
xchg
xor
dec
cmpsl
cmp
decl
xchg
or
movsb
and
xchg
or
cmp
enter
orl
mov
or
dec
mov
mov
xor
inc
xlat
mov
std
mov
lods
push
xor
int3
mov
and
xchg
in
push
bound
push
xlat
lea
sub
jae
scas
lods
xchg
cmpsl
jae
xchg
mov
mov
dec
jne
or
mov
xchg
hlt
xlat
lods
pushf
rcr
sbb
cli
jno
hlt
ss
sti
xor
rorb
or
cmp
mov
sbbl
gs
cmp
mov
mov
mov
scas
mov
jno
push
cmp
fstpt
mov
test
out
or
jns
popa
mov
leave
outsl
popa
xlat
enter
les
jb
int
jae
push
mov
cltd
mov
ljmp
lds
mov
push
and
sub
out
loope
test
sub
dec
mov
lret
ret
out
xchg
cs
pushf
inc
mov
js
xchg
mov
mov
mov
cmp
add
out
fs
mov
imul
pop
aaa
mov
fcmovnbe
enter
mov
inc
loop
inc
into
xchg
neg
jbe
xchg
cmpsb
push
fdivrl
pop
je
dec
stc
or
push
ret
mov
xor
shr
ss
hlt
cmc
jo
ror
pop
imul
ds
inc
and
hlt
mov
std
and
xor
add
mov
imul
push
std
pop
test
adc
pop
sub
and
push
pop
outsl
ret
mov
outsb
push
mov
testl
pop
stos
mov
and
add
test
push
lret
xor
xor
and
call
out
sahf
push
jno
add
jl
arpl
mov
test
xchg
sti
imulb
sbb
and
add
push
iret
enter
scas
arpl
out
adc
jnp
sti
mov
mov
icebp
push
ss
clc
out
sbb
xchg
jne
es
into
push
sbb
mov
mov
push
fsubr
add
outsl
jg
fistl
xlat
sub
pop
out
je
rolb
xchg
jecxz
cmp
les
mov
jb
push
enter
es
pop
mov
xor
fsubs
jmp
jns
lcall
jno
aam
sbb
sbb
shrl
xchg
add
cmpsl
loope
dec
push
mov
cmp
iret
cmc
leave
dec
sbb
nop
mov
cmpb
mov
data16
jp
notl
imul
push
lahf
leave
lea
or
adc
in
cmpsl
lcall
cmp
mov
dec
icebp
jecxz
push
push
xorl
imul
subb
outsl
popa
pop
push
xchg
in
inc
mov
cmp
pop
das
mulb
jns
xor
sub
cmc
push
jo
shlb
mov
sub
repz
add
js
setae
cli
jne
movsb
sub
or
popa
push
cmp
jns
jb
push
addl
nop
fisttpl
notb
sub
clc
push
mov
test
dec
insb
orb
jmp
push
push
and
lahf
lea
jmp
leave
mov
aaa
cld
scas
fs
adc
sbb
dec
xor
jno
inc
mov
rolb
add
dec
mov
sbb
push
imul
dec
lret
hlt
out
adc
and
mov
xchg
pandn
dec
adc
or
lcall
or
mov
ja
pop
cmp
icebp
inc
pushf
shl
push
xchg
in
pop
and
inc
mov
shlb
and
stos
mov
mov
sti
cmp
ret
or
pop
cmp
pop
mov
mov
mov
pop
mov
loope
stc
in
lods
repnz
pop
adc
inc
jg
mov
es
jb
dec
adc
cltd
or
daa
loope
mov
xlat
and
cmp
cmp
mov
lea
mov
jg
jnp
sbb
loop
and
icebp
inc
fildll
mov
mov
test
push
pop
xlat
and
xchg
outsb
push
movsb
in
out
and
mov
cmp
nop
lea
xchg
lcall
cld
xchg
test
mov
sub
dec
in
dec
outsl
and
xchg
add
outsl
mov
sub
mov
scas
sbb
int
or
std
sahf
test
loop
inc
jns
sbb
adcb
cmp
pop
cmp
jns
mov
mov
insl
lret
jns
jl
or
icebp
lods
pop
jmp
outsb
mov
jecxz
dec
pop
push
dec
pop
clc
sahf
pop
sub
pop
xchg
mov
stos
jle
or
jp
test
int
fdecstp
cmp
push
or
in
mov
mov
dec
adc
loop
iret
cmpsl
leave
push
mov
mulb
mov
clc
and
lret
push
js
cmpsl
nop
ret
sbb
popa
pusha
sbb
or
adc
lods
aaa
mov
adc
out
xor
jo
adc
adc
in
push
inc
lods
aam
das
fadds
xor
loop
pop
je
push
mov
es
sub
jp
mov
push
dec
enter
ja
in
inc
mov
es
lds
adc
ss
scas
addr16
push
js
or
or
or
push
in
lea
mov
sbbl
xor
in
lods
dec
dec
xor
fld
adc
and
lods
and
insl
jbe
mov
stos
or
test
loope
sub
test
and
rolb
lods
cmp
mov
jmp
mov
sbb
cmpsl
sti
jbe
cltd
out
imul
aad
add
insb
pusha
xchg
cmpsl
scas
scas
sub
xor
dec
repnz
inc
jl
pusha
pop
ret
sbb
addb
loope
fwait
xor
adc
loope
cmp
imul
jbe
test
xchg
je
xor
iret
je
pop
or
dec
mov
lcall
or
push
pop
orl
or
loopne
popa
dec
xchg
in
pop
rorb
cmc
sub
sahf
sbb
or
push
push
mov
and
push
fwait
xor
stos
mov
outsl
aad
aad
or
cmp
daa
divb
test
sahf
add
aam
outsb
mov
jne
stos
mull
pop
or
jae
and
pop
mov
iret
sarl
mul
jae
leave
popa
lret
lret
lds
mov
cmp
fsubp
subl
xor
imul
lahf
out
test
jge
lahf
mov
push
rorb
jno
pop
in
xor
sub
sahf
sub
lds
mov
int3
and
jnp
jecxz
xchg
add
cld
pusha
push
test
rep
mov
cli
push
pop
imul
or
push
clc
push
pop
lret
dec
dec
and
cmp
inc
jbe
lret
popa
and
jae
add
push
sbb
mov
pushf
pusha
ljmp
jp
imul
sbbb
aaa
or
push
ret
adc
sti
mov
arpl
jp
pop
jg
sbbb
cltd
ret
shlb
mov
dec
xchg
push
fcmovnu
xlat
xor
mov
inc
pop
jbe
enter
std
out
xchg
or
test
out
and
push
fstp
sysret
dec
pop
push
test
jnp
jp
pop
inc
mov
push
aaa
fcom
xor
push
jl
jecxz
mov
sti
ljmp
shr
and
pop
fsts
dec
jg
xchg
lods
cmpsb
addr16
and
pusha
dec
bnd
popa
and
jle
lret
push
sub
lea
mov
mov
or
shlb
inc
jb
mov
out
arpl
aaa
aas
jbe
pop
rcl
adc
je
sbb
dec
pop
aam
jnp
imul
mov
imul
and
out
push
enter
jp
cld
push
in
dec
test
pop
hlt
pmullw
jl
or
cmp
movb
xchg
addr16
adc
cmp
loopne
inc
jnp
leave
stos
movsl
add
or
fistpl
add
lods
out
cli
addl
pop
repnz
pop
jbe
mov
lahf
push
add
jmp
stos
and
arpl
call
fisubl
or
mov
lret
pop
sub
jb
ss
stc
adc
data16
mov
and
lods
dec
mov
cmp
pop
pop
lock
push
cs
ja
aaa
mov
cld
ffree
jae
xor
shl
xchg
and
mov
xor
dec
inc
or
jl
cmc
sub
inc
fistl
in
pop
cmc
cmpsb
mov
aad
pop
pop
sahf
xchg
push
pop
mov
ret
test
loop
in
lret
ss
sub
dec
repz
or
push
jmp
in
cmp
xor
lods
cmpsl
inc
add
jns
sub
mov
test
xlat
push
cwtl
cmpsb
andb
jae
sarl
or
arpl
dec
sbb
xor
pop
mov
or
sub
push
adc
jns
enter
inc
stos
mov
dec
addps
aas
cmc
xor
xchg
push
mov
icebp
or
sbb
mov
rcrl
stos
stos
insb
ja
adc
out
xchg
inc
fucomip
adc
mov
pop
loop
in
push
mov
int3
push
hlt
dec
fwait
xchg
ret
jo
push
xor
fstl
inc
or
push
ljmp
cmp
mov
lods
loopne
push
adc
js
movsl
push
lods
xor
insb
test
mov
sti
int3
mov
mov
aas
mov
ss
cld
xchg
mov
loop
lods
lcall
out
mov
loop
sbb
lds
adc
push
mov
xchg
out
mov
scas
xlat
in
sti
mov
sub
sub
adc
or
jp
cmp
jnp
xchg
imul
stc
cmp
xchg
iret
repz
pop
aam
bound
and
mov
sub
inc
xchg
pop
jns
push
dec
jmp
dec
jbe
mov
dec
xor
xchg
pop
lcall
mov
mov
jge
incl
pop
add
out
pop
test
pushf
sub
notl
add
rcr
mov
push
fiaddl
cmpsl
or
scas
xchg
arpl
inc
jnp
push
movb
nop
lods
leave
fwait
sub
mov
call
lods
sbb
das
out
jmp
cmpsl
insb
jg
cmp
cs
or
mull
mov
push
xor
add
fcoms
push
outsb
fwait
pusha
stos
dec
adcb
jmp
pop
cmp
inc
stos
clc
sbb
mov
or
jge
mov
repz
mov
dec
sbb
lret
imul
jge
arpl
in
popa
adc
cmp
xor
incb
jecxz
subl
sbb
xchg
xor
xor
mov
sbb
mov
add
xchg
sub
cs
xchg
sub
dec
stc
or
out
cmp
push
sub
dec
jp
jbe
xor
scas
cmp
cmp
fists
jo
push
push
push
add
sbb
sahf
imul
addl
cltd
cmpsb
xor
add
mov
inc
cmp
shlb
bound
int3
data16
dec
test
std
cmp
cmp
dec
jg
in
push
jns
push
xlat
sub
rclb
das
popf
mov
mov
mov
test
mov
inc
or
inc
mov
mov
adc
lret
imul
sbb
lea
mov
push
mov
pop
stos
jg
mov
add
xor
adc
cs
add
push
and
dec
add
mov
push
ret
mov
lret
mov
sbb
insb
pop
mov
add
iret
push
cmpsb
movsl
push
mov
pop
push
lods
dec
aad
icebp
dec
mov
fisubrl
add
and
dec
inc
jge
ret
xchg
sbb
mov
sub
mov
in
fdivrs
test
sbb
test
lahf
fcompl
arpl
adc
mov
mov
lea
xchg
iret
pop
xchg
add
int
adc
ljmp
jo
ds
scas
out
push
and
xor
and
adc
cmpsb
inc
inc
incl
bnd
push
enter
cs
pushf
icebp
ljmp
jle
das
push
jbe
fsub
push
pop
dec
ljmp
pop
push
roll
sbb
cwtl
in
into
xchg
out
subl
ficomps
fdivs
lahf
cmc
dec
inc
jns
jae
and
mov
lret
jae
add
jmp
jecxz
or
js
fbld
les
cmp
sarb
and
xchg
dec
push
sbb
mov
push
jle
add
pop
js
ficompl
and
arpl
lods
pop
jne
ficoms
sbb
je
cmpsl
ret
repz
lock
aaa
sub
push
sub
mov
sti
lods
dec
or
xchg
jno
cli
je
mov
push
sub
push
test
mov
sbbb
cmp
pop
outsb
xor
mov
repz
inc
iret
xchg
mov
mov
lret
sbb
adc
jne
call
cmpsl
jp
lcall
and
scas
mov
mov
scas
xor
test
mov
mov
inc
mov
dec
push
repnz
pop
movsl
or
loope
mov
inc
pop
das
and
cmpsb
pop
push
sub
fucom
mov
lea
mov
ja
lretw
dec
ja
push
mov
jmp
fisubrl
sbb
mov
adc
mov
sub
loope
aas
aas
pop
inc
cmp
fsubrs
aas
js
mov
aas
repnz
hlt
lea
or
addr16
sbb
hlt
add
and
lahf
sub
lds
sub
jns
mov
outsl
jle
xchg
push
xorb
push
jo
sub
or
add
cmpsb
cmpsl
test
fs
cld
xchg
rcrl
and
xchg
mov
mov
lods
aas
mov
loopne
inc
cmp
sbb
fs
add
dec
mov
push
ss
ss
lahf
add
iret
pusha
and
mov
test
jb
mov
loop
iret
inc
lea
aas
xlat
mov
stc
sub
mov
jo
mov
or
in
sub
in
fnstsw
bnd
cli
test
or
or
mov
ds
int3
cmp
fcmovnbe
aaa
fwait
mov
xchg
iret
xor
addr16
daa
mov
cli
hlt
cmpsl
ss
fidivs
in
sarl
ss
fisttpl
inc
fistl
loop
pop
sbb
sbb
lods
adcb
push
cli
push
push
xchg
ja
mov
mov
shlb
fimuls
ljmp
ss
jno
xor
sbb
pop
push
fdivrl
push
data16
pop
insb
mov
loop
mov
scas
rolb
push
pop
mov
es
push
aam
js
adc
mov
addr16
cmp
sbb
rcrb
xchg
cmp
xor
dec
cmp
fsts
mov
stos
lahf
adc
pop
sub
pop
jnp
lds
enter
mov
fiadds
sbb
loop
out
sbb
add
fwait
das
stos
popf
xor
std
mov
xchg
mov
in
adc
aam
mov
sub
ret
dec
sbbb
pop
cmp
lss
push
dec
call
repnz
imul
stos
sub
mov
mov
shlb
rcrl
jp
mov
mov
or
aas
add
cld
xor
aam
pop
jno
dec
cmc
pushf
fs
mov
mov
push
jle
sub
fsubs
stc
js
shlb
dec
or
jno
mov
pop
ss
inc
fwait
push
push
mov
xlat
inc
pop
mov
inc
jle
pop
pushf
or
xchg
mov
negl
xchg
sub
sahf
push
sub
push
scas
das
icebp
mov
mov
adc
movsb
fidivrl
sub
push
mov
lret
ljmp
shll
inc
mov
cmp
aam
movsb
pop
jbe
out
outsl
mov
sub
fsubs
pop
sub
subb
outsb
outsl
mov
mov
hlt
push
cld
mov
pushf
call
mov
adc
rol
rol
aaa
dec
and
fisttpll
add
cmp
out
xchg
fsubp
xchg
sub
jns
push
jns
push
and
inc
lret
push
lret
pop
mov
clc
add
clc
adc
addr16
ffreep
xor
cmpsl
hlt
stc
loope
daa
aad
inc
nop
jecxz
dec
jecxz
sbb
push
int
mov
dec
pop
push
and
jo
arpl
mov
outsl
mov
inc
idivl
lahf
pop
insb
pusha
cmp
jns
outsb
out
cmpsb
sti
adc
ds
mov
shlb
lds
jne
adc
repz
pop
cmp
rcr
movsl
shll
or
dec
xchg
sub
dec
and
push
gs
fdivrl
cmp
mov
in
or
rclb
cmpb
jns
mov
jo
cld
xchg
in
add
dec
or
into
push
movsl
adc
xor
mov
pop
mov
cwtl
imul
cs
sub
mov
xchg
fiadds
in
aaa
xchg
push
dec
out
pop
push
add
cmpsl
and
mov
fildll
inc
sbb
inc
pop
repnz
push
lea
arpl
add
push
stos
stos
aad
stos
xchg
test
loopne
inc
enter
push
fdivrs
test
sub
nop
mov
sub
aad
jo
popaw
lds
ja
aam
pop
mov
ret
cs
out
loopne
lods
jne
mov
sub
or
das
shll
stos
inc
test
leave
cmp
daa
jge
leave
mov
mov
jmp
pop
popf
gs
js
test
test
lahf
push
mov
cwtl
mov
mov
es
ret
insb
jns
arpl
pop
xor
sub
mov
xchg
mov
sbb
lahf
and
adc
into
adc
cmp
mulb
inc
cmpsl
inc
jle
pop
pusha
xorb
pusha
add
ja
inc
add
adc
inc
or
ret
sbb
test
addr16
add
ljmp
rcr
in
pushf
bound
and
cmpsb
hlt
pop
clc
cmpsb
cmp
xlat
aaa
std
les
adc
test
movsb
jnp
ss
and
ret
es
and
icebp
stc
gs
dec
push
fs
jae
mov
sar
add
loopne
push
add
ja
mov
mov
xchg
mov
cld
dec
add
xchg
dec
je
loopne
jp
into
sahf
lcall
sbb
inc
jne
xchg
mov
xchg
mov
mov
out
loop
fs
pop
and
cwtl
inc
add
pop
sar
outsl
and
outsl
stos
jge
pop
loop
mov
mov
sarl
shll
in
sbb
fs
push
es
mov
jne
or
test
jp
fsubp
jns
xchg
aaa
fcoms
out
or
sbb
adc
jns
xor
push
adc
cmpsl
scas
in
dec
add
and
jl
lea
mov
push
push
and
daa
lods
in
dec
shl
stos
addr16
stos
mov
repz
sub
bound
movsl
xor
test
in
push
scas
insl
xchg
mov
idivb
jge
shlb
jge
and
lds
das
mov
lods
inc
and
aas
sbb
clc
push
and
jnp
pop
sahf
jmp
insl
jmp
scas
aam
xchg
out
add
clc
dec
loope
out
adc
pop
ror
out
shl
sub
add
aaa
roll
mov
push
fistpll
or
test
dec
fisttpl
test
mov
lahf
sub
jb
pop
pop
out
adc
arpl
mov
push
cmp
loope
js
leave
imul
pop
lea
xchg
out
shlb
inc
jg
xor
rcl
inc
lods
pop
lock
cmpsl
lods
movsb
gs
enter
in
mov
imul
mov
mov
sub
mov
dec
sub
xor
out
fbld
out
inc
mov
xchg
cmpsb
movsl
push
and
out
cmp
lods
jmp
xchg
std
fldcw
pop
mov
mov
xchg
aam
jne
jle
sarl
les
xor
insl
push
mov
adc
das
icebp
mov
push
ljmp
and
lods
cwtl
sub
imul
out
aas
mov
fldenv
hlt
push
and
xchg
fwait
rol
aad
fdivs
cmc
adc
jecxz
add
ds
imul
sti
inc
dec
and
pop
pop
xchg
push
fidivl
sub
imul
test
push
das
add
xchg
mov
aam
add
and
loop
xchg
aaa
mov
pop
pop
mov
jb
insl
negl
xor
jo
sbb
jns
jbe
dec
mov
xchg
sti
sti
push
push
adc
dec
inc
mov
outsl
out
adc
and
mov
shll
iret
mov
fnstenv
jl
je
lock
gs
push
rcrl
icebp
rclb
mov
inc
shll
sub
sbb
sub
fidivl
rcr
push
push
je
mov
stos
jmp
sahf
xchg
enter
sahf
xor
adc
xchg
sahf
gs
and
mov
inc
push
mov
jp
je
add
cmp
icebp
cmp
clc
adc
cmp
testl
xorb
mov
pop
sbb
mov
outsb
aad
out
aad
ficomps
dec
adc
in
outsl
dec
dec
and
fcomp
test
aas
ficomps
bound
add
sbb
xor
in
sahf
int3
out
out
mov
in
lret
popa
xchg
ja
std
mov
and
test
in
addr16
add
movsb
inc
int
or
iret
test
mov
cmc
mov
xor
sbb
jp
fstps
std
es
jne
ss
mov
pop
jp
jg
cmpsl
das
orb
lods
out
and
push
dec
pop
xor
test
pusha
dec
xchg
ret
lret
sbb
cbtw
or
gs
aaa
push
sub
mov
insb
jl
je
nop
ret
inc
sbb
popf
xchg
std
ds
jae
dec
stos
xchg
nop
or
add
inc
inc
std
jle
adc
movsl
and
and
inc
in
adc
repz
xchg
lods
add
fs
scas
pushf
jg
daa
in
popw
xor
sub
leave
jbe
inc
movsb
inc
jno
mov
cmpsb
cmp
jno
adc
subb
int
dec
push
sub
out
test
mov
sbb
mov
xor
fs
dec
dec
jmp
out
sar
lahf
orb
lds
fldt
dec
jae
cmc
int3
push
xor
lahf
faddl
push
mov
dec
and
ss
push
adc
js
test
rorb
mov
adc
and
popf
xchg
outsb
movl
jge
push
cli
push
fadds
cmp
cmp
mov
inc
mov
pop
cmp
movsb
cmp
xchg
inc
adc
jne
or
ja
push
add
mov
sbb
int
jne
mov
int
daa
das
cmp
ss
pop
in
mov
adc
adc
xchg
ret
lock
aam
fwait
jle
and
scas
jb
out
mov
mov
fimuls
inc
loopne
dec
mov
js
enter
jnp
out
jnp
test
scas
inc
in
mov
pop
dec
or
sbb
pop
mov
jle
int
adc
push
fisubrl
ljmp
sbbl
cwtl
imul
loopne
add
mov
cld
xchg
rorb
pop
and
divl
addr16
sub
xchg
out
scas
dec
aad
pop
xchg
js
stos
dec
stos
cmp
add
mov
sbb
popf
adc
aad
mov
cli
leave
mov
sbb
dec
xchg
adc
dec
pushf
scas
pop
into
loope
sub
push
in
add
xchg
pop
dec
mov
sbb
nop
pop
dec
xchg
mov
int3
jb
sahf
push
cmp
test
cmp
data16
sti
dec
in
sub
xor
inc
repnz
dec
mov
cld
mov
mov
loop
mov
loope
xor
insb
inc
pushf
stos
jecxz
loope
nop
das
xchg
push
push
pop
jns
mov
xor
inc
mov
inc
mov
call
movb
lods
dec
mov
jb
mov
mov
dec
mov
bound
mov
mov
pusha
xlat
adc
addb
test
fwait
cmp
jae
mov
mov
push
nop
daa
fcomi
mov
in
adc
lock
fs
repnz
andl
dec
out
ret
pop
subb
push
pushf
sub
add
sub
push
jg
testl
xchg
push
adc
cwtl
or
or
in
into
jbe
inc
jb
stos
rcl
test
and
and
dec
iret
sbb
in
stc
es
jo
aas
lret
fsubs
sbb
xor
jnp
push
sbb
pop
xchg
sub
fcomps
sub
sahf
lcall
fnstenv
test
pop
and
popa
mov
jecxz
shlb
push
ret
mov
out
add
push
movsb
push
movsl
fst
dec
mov
jb
sbb
cli
jmp
andl
adc
jbe
outsl
mov
daa
mov
jmp
and
mov
push
dec
sub
je
lret
addr16
adc
and
pop
les
pushf
sub
mov
rclb
ja
repnz
mov
mov
test
push
adc
lret
jae
jecxz
cmpsl
aam
jo
push
adcb
jecxz
push
pop
lds
ljmp
iret
inc
lods
es
imul
lock
mov
sub
jg
jmp
jecxz
push
inc
movsb
inc
inc
adc
jmp
rcr
dec
pop
loope
jg
push
xor
cld
jbe
add
andb
test
or
xchg
sbb
push
cmp
out
inc
inc
dec
push
loope
jae
fmull
adcl
push
cmp
leave
insl
dec
mov
daa
stc
test
mov
loopne
rcll
cmpsl
dec
jmp
lret
push
addr16
push
jo
adc
pusha
mov
cmpsl
pusha
inc
adc
gs
je
xorb
inc
cld
mov
sub
sbb
sbb
out
dec
mov
push
inc
jmp
push
sub
mov
mov
xchg
rcl
dec
test
test
sub
aad
add
cmp
popf
jno
lock
mov
xor
fiaddl
sahf
jo
push
cli
push
shll
xchg
shrd
ficomps
notl
jecxz
xchg
in
push
jno
cmp
rclb
push
scas
cmpsb
inc
and
loop
arpl
rcrb
out
into
dec
dec
fldt
pop
test
mov
mov
push
ja
in
push
cmpsb
push
lret
xchg
and
movsl
push
sbb
jle
repnz
or
xor
gs
xor
sti
fcoml
nop
dec
cld
jmp
cs
mov
dec
mov
adc
push
xchg
es
mov
icebp
jns
xchg
jmp
xchg
test
or
sbb
and
or
sbb
cs
icebp
push
jb
das
test
xchg
je
inc
push
jnp
iret
sbb
loop
icebp
mov
psadbw
or
inc
cmp
jge
popa
loop
pop
xor
ret
jl
lds
call
xchg
xor
cmc
dec
and
mov
fmuls
dec
mov
stc
sub
movsb
jp
xchg
adc
dec
pop
mov
cmp
jle
xchg
mov
adc
lock
inc
add
xchg
test
sub
pop
idivl
out
aad
jmp
clc
jge
cld
or
fists
adc
and
sarb
xchg
mov
daa
inc
cli
push
stos
inc
inc
and
sahf
loope
adc
mov
mov
push
lret
pushw
iret
push
movsb
sub
xor
mov
lea
pop
mov
inc
add
into
sar
ds
das
enter
sahf
mov
call
jge
clc
mov
in
outsb
jae
decl
add
sarl
push
push
jecxz
inc
rep
lods
mov
adc
cltd
push
roll
cwtl
loop
sar
sbb
sbb
shr
mov
cmpl
leave
imul
pop
shll
out
and
cmp
test
sbb
cmpsl
xor
jo
pop
sub
aad
das
pusha
jb
xchg
sbbb
jge
divb
add
add
pop
sbb
clc
jb
push
lods
xchg
insb
adc
jno
ret
cmpb
std
xor
ljmp
xor
and
arpl
das
pop
into
sbb
adc
jne
sbb
ja
cmp
mov
nop
sbb
jb
sub
cmp
mov
mov
adc
insb
sub
xor
xchg
repnz
xchg
out
fdivrs
push
rolb
add
out
cmp
std
and
jbe
leave
fildl
mov
fs
stc
aaa
icebp
sti
jge
aas
fstpl
popf
shlb
mov
cmpl
adc
push
and
repnz
leave
imul
mov
xchg
dec
pop
cli
lods
cld
mov
orb
loope
repnz
in
and
jl
and
pop
sti
out
in
addb
add
jp
addl
cltd
xchg
or
stos
fiaddl
aas
imul
das
and
sbb
jo
call
stc
lret
and
std
fbld
adcb
and
mov
shll
movsb
push
and
inc
arpl
repnz
fs
lods
mov
cwtl
dec
and
add
stos
dec
adc
out
cwtl
mov
in
dec
sbb
lcall
insl
push
scas
mov
jmp
jnp
jecxz
xchg
dec
notl
xor
jae
xchg
push
daa
enter
sub
pop
lahf
sbb
loop
mov
push
xchg
mov
dec
popa
adc
nop
xor
mov
adc
in
test
push
dec
test
dec
mov
dec
fbld
js
push
jle
inc
mov
cli
stos
mov
popa
shll
cs
add
mov
stc
negl
test
jp
or
or
xchg
fwait
inc
cli
push
ljmp
rcll
fcompl
push
test
fcoms
outsb
fs
into
loopne
cs
lea
cmpsl
imul
pop
cwtl
xchg
pop
mov
ret
push
inc
push
jmp
mov
cltd
add
movb
call
or
popa
arpl
test
xchg
pop
jle
adc
mov
les
xchg
or
shrl
ret
stos
jmp
cld
push
loop
mov
and
add
iret
in
insb
mov
or
ret
je,pt
decl
lret
jg
subb
les
pop
pop
mov
test
cmp
jecxz
cmpl
je
in
cwtl
outsb
add
lahf
arpl
inc
popa
push
aam
insl
cmp
imul
push
adc
out
jns
sub
lea
aam
lahf
int3
push
pop
adc
fnstenv
push
ror
bound
loope
aam
mov
stos
mov
mov
nop
outsl
pop
das
daa
push
icebp
jmp
mov
xchg
mov
hlt
push
mov
mov
test
iret
dec
popa
aam
push
dec
idivb
insb
dec
sbb
adc
mov
mov
push
movsl
negb
xchg
mov
cli
in
add
rcll
mov
fidivrl
dec
add
sbb
js
loopne
cmp
add
loopne
sbb
lcall
mov
push
push
cmc
mov
dec
lods
mov
adc
push
or
sub
dec
das
mov
xchg
adc
mov
push
cli
das
push
and
lock
icebp
lock
enter
push
cltd
push
jmp
adc
out
mov
ss
jl
sahf
mov
fildl
sahf
repnz
arpl
jno
aas
adc
cmp
push
xor
pop
or
ljmp
inc
mov
pop
mov
shlb
lahf
and
in
repz
lods
mov
lret
int
ja
xchg
xor
imul
mov
add
test
cwtl
inc
jle
sub
imul
mov
jno
sub
ja
jg
ljmp
inc
pop
mov
cmpsb
aaa
dec
aaa
xchg
pop
add
xchg
sbb
jbe
insb
mov
pop
add
ret
fists
jo
outsb
mov
mov
mov
xchg
fisubl
sub
fbstp
iret
stos
push
rorb
xor
xorb
push
and
insl
pop
scas
xchg
ret
mov
fimuls
cmp
mov
xrelease
cmp
sub
and
rcl
or
scas
out
inc
xor
push
popa
xor
lods
shr
add
cmp
adc
sbb
lea
mov
pslld
incb
or
sbb
pop
ljmp
pop
lcall
enter
out
daa
xor
inc
mov
outsl
cmp
xchg
aad
popf
in
jnp
scas
mov
cmp
inc
push
imul
push
pushf
adcb
incb
mov
loopne
sti
jbe
push
ljmp
add
cmp
insb
aas
mov
clc
add
adc
or
xor
and
mov
mov
pop
imul
fstl
into
push
and
incl
jne
stos
flds
scas
fisubl
adc
dec
mov
adc
pop
out
or
movsb
cmp
jecxz
mov
popa
fistl
inc
and
rclb
enter
inc
cld
sbb
push
sbb
les
add
pop
outsb
xor
mov
mov
pop
hlt
push
jnp
leave
rolb
lock
pop
outsb
dec
inc
sbb
sahf
xor
in
movsb
leave
or
add
or
pop
mov
jg
mov
cmpb
xlat
addb
sub
pop
xor
push
sub
or
xor
inc
mov
dec
fcmovb
mov
sub
adc
out
push
shlb
in
pop
pop
adcb
ljmp
mov
enter
mov
xor
xor
addr16
push
or
movsl
cmpsb
inc
data16
xchg
scas
stc
pop
push
or
gs
cltd
iret
repz
cld
jno
mov
xchg
sbb
enter
jbe
jne
rcrl
andb
lret
int
fcom
pop
add
dec
push
pushf
mov
xchg
jb
icebp
sbb
pop
cmpb
mov
mov
ret
frstor
cmpsb
pop
andl
fidivrl
stos
dec
lods
jb
imul
dec
mov
mov
xlat
mov
mov
test
push
lock
ffree
mov
in
jbe
jle
jle
inc
dec
incl
mov
ja
mov
mov
clc
or
pop
sbb
inc
negb
outsl
mov
jns
lret
imul
roll
bound
ss
insb
push
cmpb
cltd
cmp
push
scas
push
jp
imul
pop
jne
push
add
xchg
popa
lret
je
movb
and
mov
sub
icebp
xor
push
cmpsb
lods
adc
rclb
sbb
das
sbb
loop
ds
fsubs
adc
aaa
movsb
jge
scas
mov
ficompl
push
mov
pop
xor
dec
scas
and
iret
inc
stos
frndint
lock
test
cs
femms
pop
cs
movsl
imul
pop
stos
and
imul
addr16
mov
adc
ds
shll
les
loop
push
stos
leave
mov
cltd
mov
mov
adc
xchg
jge
andl
jno
fwait
outsl
shrl
lret
mov
adc
lock
js
or
adc
push
adc
push
or
test
fisttps
cmpsb
sub
lea
mov
aas
gs
jae
jmp
pop
icebp
jge
push
xor
insl
jne
subb
jb
add
orb
sahf
rclb
or
arpl
cmpsb
movsb
notl
lea
cli
out
jge
mov
jmp
jge
addr16
xor
dec
and
pop
sbb
loope
adc
mov
pop
pop
or
jo
or
repnz
xchg
enter
hlt
test
orb
mov
in
aas
pop
fstl
lcall
fwait
xlat
lahf
push
xor
dec
xor
cld
in
icebp
cld
mov
sub
sub
and
repnz
fidivl
jno
fsubrl
je
mov
cmp
arpl
arpl
movsb
test
outsl
push
sbb
mov
test
test
out
loop
push
fiaddl
dec
cs
cmpsb
inc
pop
int3
inc
cmpsl
mov
and
inc
hlt
xor
fidivrl
mov
jne
pop
cmc
out
cmc
jecxz
mov
sub
cmpsl
aam
rcrl
cltd
leave
sbbb
xor
jmp
in
mov
and
fiaddl
std
push
subl
sar
dec
fwait
lahf
push
mov
push
fsubp
sbb
push
jns
push
cs
rcr
arpl
xchg
sub
pop
insl
fnstcw
scas
push
mov
and
mov
or
fsubrs
dec
sbb
test
hlt
cmp
cmp
xchg
incl
mov
cmp
out
cmc
mull
inc
dec
inc
lods
jecxz
mov
inc
aas
aam
xchg
dec
fwait
into
adc
mov
adcl
or
rcr
or
out
cmpsb
sbb
jns
repnz
bound
aas
clts
in
sub
jns
adc
cmp
pop
dec
cli
inc
xchg
fstpt
imul
and
lods
cmp
add
add
mov
mov
xchg
adc
sub
fdivl
mov
cmp
xchg
mov
loop
pop
mov
push
cmp
jno
xchg
sub
pop
je
mov
push
push
mov
mov
lock
xor
es
mov
hlt
mov
push
adc
pop
dec
out
mov
repnz
repz
push
leave
pop
inc
aas
adc
fsubr
mov
or
pop
mov
add
dec
xchg
jns
test
pushf
mov
sub
push
lods
xlat
pop
test
test
lods
jmp
scas
dec
and
movsl
push
fstps
movb
cmp
xor
mov
sub
out
dec
lret
pop
sbb
adc
xchg
stc
fidivrl
ljmp
sbb
insl
adc
ret
enter
test
add
mov
lods
dec
jg
ljmp
shr
js
sti
lea
adc
clc
jae
pusha
stos
inc
xchg
xchg
ret
xchg
test
adc
in
push
andb
inc
rorl
mov
lret
mov
ret
fnstsw
fiaddl
dec
or
add
and
add
adc
lea
aaa
das
mov
inc
sub
sbb
out
ljmp
frstor
mov
add
push
movsl
cld
ret
ret
jg
out
mov
lret
cmp
enter
push
test
daa
mov
andb
test
shll
cmpsb
fcompl
mov
lods
into
jle
push
fcmovnbe
insl
cmpsl
push
call
test
pop
subl
cmpsl
jl
adc
jp
mov
inc
mov
hlt
int
aad
cs
fisubl
sub
gs
hlt
pop
aas
das
push
ja
push
or
xor
ss
std
push
iret
test
sti
mov
lods
or
inc
dec
ja
mov
cmp
aaa
mov
iret
xor
fwait
cmpsb
inc
insb
or
push
stc
dec
push
addr16
fisubrl
bound
push
sub
les
cmp
pushf
push
imul
mov
sub
cmp
xchg
mov
push
icebp
xchg
loope
in
rep
int3
add
test
rcrl
inc
cmp
loopne
stos
adc
add
dec
push
add
out
fwait
das
sar
adc
iret
mov
test
fimull
xor
and
pop
loope
pop
sbb
push
sub
xchg
or
sub
movsl
cli
mov
inc
ret
js
std
stos
mov
test
jle
pop
jnp
pop
scas
mov
pop
add
push
xchg
cmp
pop
imul
push
xchg
inc
or
mov
test
ja
cwtl
and
push
and
cmp
imul
ret
arpl
sbb
push
aad
pop
inc
mov
dec
xchg
pop
or
and
xor
mov
cwtl
jl
mov
sarl
stc
adc
out
mov
das
cmpb
ficoms
cld
jnp
pop
aad
cmp
faddl
mov
mov
mov
insb
test
jo
sbb
mov
arpl
icebp
inc
jge
and
nop
inc
rclb
xor
repz
add
shrb
mov
ja
push
and
jl
fstl
mov
and
push
popf
inc
or
lcall
mov
ret
mov
sub
dec
cmpl
jp
push
scas
lcall
ror
arpl
int3
xor
xor
outsl
sbb
mov
fxch
pop
insl
jnp
andl
mov
test
dec
popf
or
inc
cmpsl
inc
into
cltd
inc
fldenv
test
incb
mov
or
push
xchg
cmc
adc
xor
pop
test
shll
mov
push
scas
lret
shlb
je
xchg
leave
arpl
mov
je
stos
int3
xchg
jmp
xchg
into
shll
cmpsb
fisubl
scas
push
iret
shll
aas
add
nop
jae
imul
push
jl
in
subl
push
push
dec
in
lea
int3
and
sbb
mov
mov
mov
add
test
jg
aad
mov
mov
insl
cmp
pop
dec
into
inc
jmp
sub
xchg
and
loop
enter
dec
in
cmpsb
rorb
insl
xchg
sbb
push
int3
xchg
bound
inc
or
push
adc
in
mov
jp
popa
sub
jecxz
mov
scas
xchg
cld
lods
xchg
dec
in
and
scas
mov
fsubl
movsb
sar
jle
xor
aad
sbb
test
cmpsl
rclb
movl
and
cltd
leave
xor
xor
enter
lock
outsb
add
test
cmpl
jae
cmp
ret
pop
in
add
jbe
cli
jge
adc
adc
pop
icebp
cmp
in
jle
aas
std
in
movsb
mov
dec
dec
jns
aaa
mov
mov
mov
jge
enter
dec
mov
sbb
hlt
add
fistps
jmp
fs
xchg
in
push
pop
repnz
jbe
loop
test
vmwrite
dec
shlb
je
inc
fidivrl
sub
outsl
xchg
aad
mov
fldt
dec
pop
or
cwtl
in
pop
cmp
add
fstps
stc
push
jno
pop
push
cltd
mov
xchg
mov
loope
adcb
out
bsf
das
icebp
jae
dec
sub
add
int
popf
in
loopne
insb
xor
and
mov
movsb
scas
aam
mov
sbb
leave
dec
das
sub
lret
and
pop
sbb
bnd
mov
outsb
outsl
inc
mov
adc
dec
push
and
out
psrad
popf
mov
ret
pop
cmpsb
dec
add
push
vpcmpgtw
mov
mov
lret
pop
xchg
mov
cmc
popa
rcl
ss
mov
cli
data16
push
inc
aas
sub
inc
push
inc
imul
fistl
lea
mov
sub
or
xor
jge
xchg
das
and
mov
and
popa
or
xor
xlat
packuswb
pop
mov
cld
dec
clc
jl
ret
imul
lock
shlb
hlt
cmp
cld
pop
aas
mov
stc
jae
dec
pop
or
cmp
decb
mov
jl
mov
repnz
call
adc
dec
and
sbb
mov
xchg
inc
inc
icebp
inc
xchg
jbe
or
xor
inc
fsts
add
xchg
into
in
insb
frstor
rclb
test
adc
lock
subb
inc
sub
cltd
push
inc
out
mov
aas
push
push
sub
sbb
mov
sbb
xchg
imul
test
out
icebp
or
loope
addl
mov
or
mov
xchg
cmp
xor
addr16
cli
adc
lock
or
or
jb
adc
icebp
add
repz
sbb
push
sar
dec
pop
in
mov
ret
add
loop
and
inc
lahf
in
test
mov
repz
xchg
lock
imul
xor
and
scas
daa
gs
mov
mov
das
jbe
inc
xchg
shll
adc
popa
push
sbb
sbb
sub
ret
mov
jecxz
jno
xchg
sarb
daa
in
cmp
aam
stos
je
incl
mov
out
inc
inc
mov
rcrb
mov
hlt
push
cmpsl
sbb
lahf
test
adc
fdivl
in
jae
sub
mov
clc
enter
cmp
pop
enter
sub
inc
fwait
mov
push
mov
mov
pushf
mov
int
cwtl
dec
pop
xchg
clc
out
and
test
fs
cmp
pop
xlat
mov
xchg
out
xchg
pop
mov
cli
aad
inc
out
test
push
add
xchg
nop
out
jmp
fsubrs
aad
inc
and
inc
hlt
sbb
sti
popf
inc
pop
popf
test
xchg
ds
xchg
mov
jp
cmp
jl
ret
addl
and
or
xor
sbb
ljmp
stc
xchg
aas
into
jb
jae
fnstenv
jmp
fstps
sbb
out
cmp
test
xor
mov
in
cmpsb
inc
out
and
cwtl
xor
lcall
daa
pop
aad
push
push
gs
stos
cmc
into
mov
loop
loope
cmp
imul
add
mov
fcmovnu
mov
cmp
adc
mov
enter
pop
mov
cmpsl
cli
addr16
mov
rcrb
jb
js
in
out
and
xchg
int
pusha
mov
nop
cmp
mov
repnz
dec
xchg
jg
mov
push
lock
ret
pop
jp
popf
xchg
inc
pusha
popa
stc
sbb
inc
addr16
test
xor
adc
add
or
jno
sti
xchg
jo
push
adc
xchg
xor
mull
aam
sbb
imul
popf
inc
cmc
mov
add
ljmp
cmp
lods
mov
adc
shll
xor
add
adc
cwtl
cmc
imul
sbb
jg
lods
mov
movsb
push
sti
adc
mov
inc
inc
les
jmp
imul
stos
and
and
jge
mov
xor
xchg
push
test
fadds
test
ss
fldl
gs
aaa
dec
inc
or
clc
fistpl
jp
popa
lods
jp
lcall
test
dec
push
jmp
movsb
pop
ss
sub
xlat
jle
clc
repnz
gs
dec
addr16
inc
loope
pxor
scas
scas
cmpsb
sbb
repz
push
mov
icebp
xchg
repnz
xchg
imul
cmp
add
push
ror
repnz
out
in
xlat
in
aam
sbb
inc
imul
in
loopne
pop
popf
pop
cmp
mov
xor
mull
mov
leave
jno
cwtl
jg
in
sub
push
fucomip
mov
pushf
lret
pop
mov
xchg
mov
enter
sbb
aad
mov
fistpl
inc
adc
repnz
mov
scas
jmp
pop
mov
insl
test
fcoml
mov
sub
pop
xchg
out
push
shlb
ficomps
popa
stos
sahf
stos
pop
int
cmp
jg
xchg
testl
jb
into
cs
stos
stos
or
cmp
inc
inc
repz
push
push
jne
or
int
rorb
lret
xchg
cmp
pushl
xlat
test
hlt
subl
inc
insb
and
mov
mov
in
mov
movsl
push
xrelease
add
mov
xor
adc
xchg
xchg
pop
or
push
sub
inc
mov
leave
hlt
sub
lcall
dec
mov
pop
cmpsb
sbb
adc
dec
scas
dec
sub
stos
fistpl
sbb
mov
fdivrs
mov
jmp
call
inc
test
inc
loop
pop
fucomip
ja
rcrb
aam
adc
jb
hlt
and
mov
push
sbb
sub
or
sti
adc
fisubs
fdivrs
mov
mov
test
jmp
push
aam
ret
push
add
mov
and
shll
cmp
cmp
les
inc
xchg
out
ljmp
mov
xor
insb
sbb
loope
pop
or
push
jecxz
test
jne
popa
push
mov
push
cmp
add
jnp
in
push
push
pushf
sub
mov
xchg
lds
add
ds
sbb
js
fistpll
push
faddl
mov
add
iret
movsl
add
int
adc
and
loope
adc
sbb
add
dec
js
mov
movhps
sbb
movsl
jae
sahf
cltd
jmp
adc
mov
pop
mov
cs
rclb
testb
lret
cmp
movsl
sti
rcr
test
push
xor
inc
jns
dec
dec
sbb
push
jecxz
sbb
pop
mov
cmc
xchg
rolb
adcl
repz
stos
aad
sbb
jno
pop
add
leave
adc
fucomp
inc
test
xlat
in
dec
xchg
test
xor
inc
stc
xor
mov
dec
jp
mov
push
mov
mov
add
dec
push
inc
add
jno
or
jmp
aaa
sti
cli
sub
movsb
ror
dec
dec
push
pop
pop
lret
jp
lret
gs
scas
xchg
sub
push
into
mov
test
xor
push
and
and
fsubrs
shl
aaa
fisttpl
testb
test
lret
add
enter
imul
hlt
add
cwtl
lea
mov
test
xchg
jle
mov
cwtl
dec
ror
sahf
cmp
andl
lret
movsb
xchg
xor
ds
sbb
scas
orb
add
shll
mov
fcompl
js
fbld
add
aad
jb
and
push
repz
adc
das
imul
xchg
test
sbb
je,pn
mov
sbb
inc
xor
fnstenv
out
and
sbb
jne
in
cli
inc
xor
xor
add
cwtl
inc
lcall
std
mov
iret
andl
mov
int
mov
pop
outsb
clc
add
repz
orl
sub
in
lods
pop
mov
push
or
push
mov
imull
subl
stos
mov
fdivs
push
mov
push
les
add
mov
jge
stos
pop
outsb
movzwl
lea
mov
mov
jecxz
gs
dec
adc
int
int3
pop
cmpb
xor
sbb
mov
in
xor
add
adc
popa
jae
or
jle
sbb
push
xor
aas
xor
arpl
xor
push
int
cwtl
leave
popf
daa
cld
xchg
push
inc
jmp
pop
mov
lea
jg
dec
lods
push
push
cmp
cmpsb
dec
insl
pop
xor
dec
jo
or
movsb
add
xchg
loop
xchg
fwait
cltd
push
xchg
cmpsl
dec
ljmp
enter
mov
push
jmp
push
mov
xor
jnp
xor
sbb
insb
iret
dec
dec
mov
mov
push
jp
mov
push
fs
push
cmc
arpl
pop
mov
or
pop
jnp
je
cmp
fnstcw
sahf
and
add
sbb
mov
or
fs
add
dec
popf
int3
sbb
out
ret
and
pop
mov
lods
cli
adc
je
mov
mov
cmp
inc
inc
mul
loope
sub
push
cmp
pop
shl
inc
mov
in
mov
jb
cwtl
lock
repnz
test
mov
insl
sbb
pop
icebp
dec
push
mov
dec
inc
nop
sub
pop
mov
iret
mov
inc
lret
nop
outsb
daa
orb
sbb
mov
sbb
fnstcw
int3
cltd
cmc
aam
stc
jge
es
das
call
sub
mov
icebp
inc
cmp
sub
pop
iret
call
add
je
loope
icebp
xor
jae
adc
inc
inc
mov
cmpsb
dec
mov
ret
mov
dec
aam
pop
pushf
mov
mov
jnp
mov
data16
dec
js
jns
sub
push
xchg
mov
cmp
arpl
stos
and
jle
lods
mov
aad
cli
dec
xor
mov
or
sbb
ret
adc
xchg
sub
dec
mov
aad
ror
ja
mov
pop
lods
xchg
sti
icebp
jb
fidivrs
dec
test
xor
adc
mov
sub
xor
inc
dec
cld
inc
pushw
out
cmpsl
xchg
dec
aaa
sbb
inc
cmc
fs
pop
icebp
push
pop
sbb
mov
push
fwait
cmp
repz
pop
cmp
inc
mov
mov
push
icebp
fcomip
arpl
jb
dec
dec
push
not
xor
loop
movsb
mov
jmp
in
mov
push
ljmp
addr16
dec
das
and
jp
shr
ficomps
repz
cmp
je
sbb
or
push
push
pop
inc
lret
adc
movsl
jmp
adc
jle
jp
enter
fstl
ror
fistl
sub
mov
dec
out
lods
xchg
movsl
stos
repnz
lock
rol
cs
test
test
xor
and
jmp
scas
clc
xchg
jecxz
sbb
std
mov
int3
pop
insb
sbb
or
push
cmpsb
pop
popf
out
aas
push
call
sbb
shl
leave
es
or
seta
adc
or
je
cmc
repz
in
sahf
cmp
dec
in
daa
mov
iret
cmp
ds
jbe
dec
add
jle
cmp
pop
xor
mov
scas
and
sub
xchg
jb
mov
imul
inc
cmp
movsl
cmp
mov
mov
in
int
stc
cmp
jle
fisubl
jl
add
dec
pop
mov
or
mov
mov
and
je
xchg
inc
mov
loop
bswap
aas
mov
test
je
adc
jns
cmp
push
fst
js
jo
sti
xchg
leave
mov
call
sbb
and
xor
push
cmp
data16
popa
and
mov
xchg
ljmp
pop
and
and
lods
and
js
mov
jbe
loope
xchg
cmp
fisubl
negb
mov
and
inc
pushf
in
pop
xchg
add
cmp
in
lods
bound
xor
xor
mov
imul
push
xchg
and
int
cld
jp
out
xor
arpl
adc
add
into
adc
dec
xchg
sahf
inc
popl
xchg
mov
and
add
inc
inc
push
test
dec
xchg
roll
pusha
cltd
inc
inc
xor
adc
pushf
shlb
pop
rol
dec
sub
pop
shlb
lahf
popl
shrl
push
mov
sub
popa
mov
std
push
push
dec
sub
out
js
sub
sub
xlat
repnz
fidivrl
int3
lret
mov
push
nop
in
push
inc
stos
shufps
imul
fs
xchg
xor
and
cmp
scas
fiadds
pop
les
aam
cli
movsb
inc
mov
fs
mov
int3
loope
enter
cs
in
sbb
inc
aas
repnz
idivb
adc
jle
sbb
jle
push
movsl
in
jmp
adcl
pusha
push
add
aaa
out
scas
cmp
mov
xchg
mov
adc
addb
orb
mov
mov
into
jbe
rcl
push
lods
sub
leave
pop
xor
push
push
mov
loopne
jp
ret
xchg
daa
das
cmp
mov
pop
ljmp
adc
xor
push
xchg
sub
lret
xchg
addb
sub
inc
je
xchg
sbb
jbe
xchg
test
lds
cmc
pop
pop
test
pop
xorb
inc
sti
push
xor
mov
mov
lds
pushf
dec
icebp
scas
mov
jle
jge
cmp
mov
mov
into
sbb
push
fmull
decl
arpl
push
lea
add
and
adc
pop
in
mov
mov
xchg
cwtl
pushl
adcb
push
adc
add
xchg
shl
sbb
ret
test
int
fcompp
push
xor
outsl
leave
fisttpll
pusha
popf
iret
aam
mov
std
fs
push
stc
jns
mov
movsl
arpl
shlb
mov
adc
or
push
outsl
and
mov
int3
div
rclb
adc
scas
sub
mov
pop
out
cmc
xchg
mov
rcl
inc
ja
jno
int
cwtl
mov
sahf
repnz
mov
xchg
add
add
lods
or
mov
shll
pop
inc
inc
jne
pusha
dec
xchg
addr16
sbb
jl
mov
cmp
fwait
call
sub
push
sarb
adc
cmpb
lcall
fnstsw
sbb
add
mov
adc
cmc
cli
add
mov
or
das
xor
xor
pop
dec
mov
loope
subb
adc
add
insb
mov
cmp
sub
jg
inc
pop
and
iret
mov
decl
loopne
xchg
popa
shrl
mov
cmpsb
xchg
decb
lods
ffree
stos
add
pop
mov
sbbl
lods
bound
ds
pop
lods
xchg
and
mov
or
cmp
inc
aad
mov
mov
shlb
dec
mov
popa
pop
in
shl
mov
jg
inc
add
pop
adc
mov
and
xchg
shlb
mov
or
mov
lret
fwait
loopne
pop
out
xorl
mov
jb
fisttpl
cld
mov
cmc
xchg
lds
and
fsubl
daa
mov
inc
adc
adc
push
data16
jp
xor
jne
and
xchg
mov
pusha
mov
or
or
xor
jne
subb
sti
jae
cmc
int3
cmp
xchg
hlt
push
mov
inc
inc
cmp
sti
pop
sbb
out
mov
fcoml
fimull
mov
shrb
jnp
insl
mov
xor
or
pushf
movsb
js
sbb
mov
push
mov
cmpsb
sbb
stos
icebp
cmp
cmc
mov
add
aam
cmp
mov
test
pop
xchg
jb
imul
adc
lcall
arpl
fwait
cmpsl
mov
std
movl
mov
inc
aad
test
xchg
sarl
sub
jbe
das
jge
pop
and
ja
xor
call
and
dec
push
out
lods
push
out
mov
and
int3
sbbb
cwtl
add
pushf
mov
cmp
in
dec
sahf
dec
xor
mov
adc
jmp
jnp
inc
fisubrs
dec
xor
aad
xor
or
test
adc
fldcw
stos
mov
mov
lods
sbb
jbe
adc
mov
mov
cs
sub
aam
and
sub
sub
and
scas
scas
adc
into
shlb
outsb
mov
das
add
cmpsb
shr
fiaddl
xchg
scas
pop
outsl
cmc
popf
sub
dec
popa
dec
je
andb
dec
sti
push
inc
dec
je
ja
pusha
or
adc
ret
cmc
test
xorl
and
clc
scas
outsb
or
int3
mov
aas
sbb
pop
fbld
jle
popa
out
xchg
cltd
ljmp
adcb
fs
pop
xchg
dec
pop
idiv
stos
mov
sbb
arpl
imul
mov
pop
inc
push
dec
jle
pusha
mov
fldcw
sub
inc
mov
pop
scas
loop
lds
dec
outsl
adcb
ljmp
ljmp
mov
leave
imul
add
sub
mov
sbb
hlt
das
aad
inc
xor
jmp
add
mov
enter
cld
jo
xchg
xor
add
sub
or
or
addl
insb
push
mov
sahf
add
add
frstor
push
xchg
shrb
loop
inc
xchg
xchg
repnz
mov
sti
insb
aam
mov
mov
shll
sub
adc
test
mov
cmp
cld
cmpsl
pop
push
bound
xchg
jne
or
push
aam
cli
lret
call
jno
add
jmp
mov
sahf
mov
scas
pusha
jb
or
push
inc
aam
and
and
mov
pusha
ja
out
pushf
cltd
arpl
repnz
cs
mov
mov
dec
mov
test
jp
dec
ret
cmpsb
dec
dec
test
enter
and
addr16
enter
and
mov
fmuls
xchg
cltd
jl
fnstcw
or
sbb
mov
nop
test
pop
inc
push
sbb
jae
cli
mov
sbb
inc
jbe
cmc
addl
inc
adc
int3
add
ljmp
movsl
cmpsb
push
mov
lds
add
push
das
pop
roll
hlt
push
pop
inc
mov
jg
movzbl
das
stc
vunpcklpd
pusha
mov
stc
aaa
sbb
loopne
sub
and
xor
mov
xchg
adc
test
cli
lcall
xchg
inc
cs
xor
xor
mov
mov
lret
push
cmp
push
xchg
push
and
mov
xchg
into
sub
loop
push
scas
insl
aaa
popa
add
and
push
clc
ja
and
and
add
popf
add
dec
and
cli
sub
icebp
inc
popf
add
jmp
ljmp
int
cmp
aad
cmpsb
out
aad
out
pushl
clc
xchg
sbb
dec
push
pop
insb
sbb
jne
ret
add
xchg
adc
xor
jp
aaa
pop
fimull
xlat
test
inc
inc
mov
orl
push
orb
dec
or
inc
lods
xchg
mov
jecxz
mov
push
in
test
cld
jbe
std
mov
loope
scas
cs
dec
cld
jp
inc
iret
iret
idivb
sub
stos
insb
xor
or
jp
or
notl
jne
lock
daa
mov
frstor
jb
pusha
lahf
loop
add
cld
cs
mov
mov
mov
addr16
clc
dec
rcrl
lret
ja
cmp
xchg
sub
mov
fsubl
aad
inc
lds
adc
mov
pop
inc
and
inc
adc
stos
adc
inc
addr16
cmpsl
das
call
fcmovnbe
cmp
stos
or
cld
mov
push
je
loope
sbb
int3
repz
adc
sbb
fcmovb
push
std
clc
idivl
aaa
pop
je
call
sub
pop
fs
out
sub
test
cmp
pop
cltd
xchg
test
sub
xchg
and
xor
fnstsw
stos
xor
add
adc
sbb
push
push
mov
out
aad
and
cmpsl
or
out
loope
cmp
call
xor
jle
fisttps
ljmp
adc
sub
xor
lods
das
das
pusha
push
push
rcll
popf
mov
and
xchg
cmpsb
lret
ret
lock
das
pop
aam
mov
xchg
imul
add
insb
and
call
add
pop
jmp
cltd
push
daa
scas
xor
lret
clc
cmpsb
arpl
mov
aam
or
das
test
jp
pop
lcall
movsl
and
imul
aaa
fsubrp
adc
rcrl
fldl
push
mov
rcl
add
stc
shlb
push
add
rcll
dec
loopne
sub
dec
pop
out
inc
lea
adc
pop
stos
push
jg
dec
jecxz
xchg
outsl
xchg
xchg
xor
and
ljmp
add
gs
gs
movsl
movsl
cli
mov
mov
lock
leave
cld
mov
xor
or
out
or
jge
mov
pop
test
jb
loop
jno
stos
push
sub
mov
lea
add
mov
dec
push
int
nop
sub
ljmp
xor
lds
xor
leave
sbb
lret
dec
call
xor
pusha
orb
adc
pushf
push
add
inc
loope
and
push
pusha
pop
or
dec
or
sub
pop
out
iret
sti
cmp
out
enter
pop
test
loopne
cmp
out
dec
es
aad
ljmp
mov
or
mov
shll
push
pusha
icebp
hlt
dec
fstpt
pushf
mov
add
mov
add
pop
out
das
mov
ds
repz
adc
pop
xor
dec
imul
shl
stos
pop
xor
imul
jns
push
sub
imul
xchg
pop
pop
iret
je
adc
add
xor
dec
dec
xchg
inc
imul
xchg
addr16
sahf
and
mov
inc
mov
inc
pop
sbb
testl
and
jae
and
shr
clc
rcrb
inc
repz
movsl
cmp
clc
push
add
mov
js
xchg
in
add
dec
jae
hlt
push
cld
cli
pop
fwait
cmp
mov
pop
gs
xchg
sub
scas
in
push
and
mov
inc
jle
rcr
lret
stos
cltd
push
pop
sub
fs
jmp
ss
xchg
push
cld
cmp
aam
xchg
jmp
movsb
and
jo
test
add
or
mov
or
js
push
addb
push
or
jg
jb
xchg
mov
sar
das
pop
xchg
cmp
stos
mov
inc
adc
sbb
repnz
mov
sbb
daa
mov
inc
je
out
addr16
cmp
dec
adc
imul
xchg
xor
dec
imulb
jmp
dec
or
mov
xor
jecxz
jle
es
sub
stc
and
push
jl
fsub
xchg
pop
cmp
enter
pop
dec
adc
and
lds
out
add
fdivl
mov
mov
popf
pop
add
lods
xor
or
int
les
lcall
mov
cmp
pop
push
rolb
jle
rcrl
or
cwtl
dec
lds
sub
pop
dec
inc
ds
xchg
cmp
pop
mov
lea
cmc
stos
pop
inc
pop
imul
mov
loopne
decl
ljmp
fdivr
sbb
test
pop
xor
gs
scas
and
push
pop
pop
ss
xor
mov
xchg
iret
ljmp
gs
cld
xchg
fadds
dec
and
inc
shll
mov
and
lds
and
out
xchg
and
cwtl
rcrl
popf
xchg
jmp
xchg
mov
ss
mov
bound
data16
xchg
push
inc
lcall
dec
ja
inc
pop
cli
mov
pop
push
sbb
pop
inc
xchg
push
jecxz
loop
pop
add
out
pop
lcall
pushf
xchg
sbb
rcr
shl
test
sub
or
add
adc
leave
pushf
aaa
dec
repnz
sbb
call
add
mov
mov
imul
mov
sub
sub
and
in
or
imul
mov
fldt
push
sbb
dec
mov
jno
xchg
imul
fcmovb
mov
pop
mov
inc
scas
sbb
cmp
loop
lods
sbbb
jg
mov
movsl
mov
test
into
push
xchg
push
pop
in
int3
test
roll
jnp
cmp
dec
sbb
jl
bound
insl
ficomps
inc
movsl
mov
sbb
and
test
jp
clc
add
ret
stos
sub
pop
subb
stos
test
mov
scas
cmp
adc
xlat
lret
jmp
stos
jp
rcrb
ljmp
inc
insb
xchg
jmp
int
inc
cltd
jecxz
pop
adc
sub
orl
lret
lret
mov
xchg
adc
iret
sbb
flds
es
jmp
jo
insl
out
xor
outsb
cmpsb
fsts
sbb
xlat
fstpl
dec
or
cltd
jmp
mov
sub
sti
inc
rorl
cwtl
rcrb
xchg
insb
pop
jmp
push
mov
sub
mov
adc
stos
out
dec
mov
jmp
fidivrl
inc
std
shll
sub
dec
loop
shlb
shl
adc
clc
pop
inc
add
mov
test
hlt
mov
or
enter
faddl
mov
sub
call
and
dec
repnz
xchg
call
pop
jb
dec
inc
push
mov
mov
inc
ja
xor
dec
rorb
mov
inc
pop
int3
insb
pop
mov
and
mov
dec
mov
mov
mov
imul
cld
icebp
into
test
xlat
sub
pushl
test
mov
negl
rolb
jbe
pop
push
sub
mov
cmp
and
addb
jbe
push
dec
cmpsb
pusha
fs
aam
icebp
rorb
pushf
jae
enter
pusha
cmpsl
push
add
in
test
lock
sbb
jns
cld
pop
fwait
gs
push
or
sarl
repz
rcrb
xchg
mov
call
cmp
mov
ret
mov
sub
hlt
test
sbb
gs
xor
mov
cmp
add
or
ret
mov
int3
xchg
clc
mov
pop
jno
mov
fidivrl
enter
aas
adc
negb
popfw
ret
sub
hlt
push
or
pop
out
mov
dec
sbb
xchg
fcomps
inc
xchg
or
lea
ret
xchg
dec
mov
mov
divb
imul
jg
or
aaa
loope
mov
lods
inc
mov
mov
inc
lcall
insb
mov
or
fnstsw
sbb
mov
mov
in
xchg
dec
jl
push
outsl
call
out
jbe
popf
push
xchg
aam
adc
loope
xor
mov
mov
dec
mov
or
xchg
xor
push
mov
sbb
sub
or
fwait
sub
xchg
pop
call
sub
pop
sub
cmc
dec
enter
add
jge
mov
pop
repnz
es
das
xlat
cltd
int
stc
xchg
pusha
pop
scas
adc
push
rcrb
mov
inc
jbe
mov
mov
push
adc
lcall
cmp
pop
and
cli
stos
mov
mov
pushf
cmp
ljmp
xchg
js
fcmovnb
imulb
jmpw
mov
and
pop
sub
mov
sbb
dec
mov
sbbb
jg
xchg
sahf
fidivs
mov
fistpll
repnz
jnp
adc
xchg
in
negl
push
test
dec
jecxz
and
xorl
xchg
or
flds
adc
mov
add
jge
mov
scas
les
mov
mov
in
cmpsb
jbe
or
xchg
jae
ds
sub
mov
ror
sub
sbb
xor
ja
dec
aam
jo
jns
pushf
int
push
cltd
xchg
daa
xchg
lods
cli
lock
lds
cwtl
adc
push
adc
inc
aam
mov
mov
inc
jns
cmp
fs
xchg
test
xchg
push
jns
xchg
cmp
xchg
int3
mov
popf
fsubrp
testb
dec
pushf
or
sub
xor
mov
or
xlat
dec
call
lods
leave
jo
repz
jne
mov
call
xchg
in
mov
lahf
out
in
jmp
add
insl
inc
jno
sbb
ret
adcl
mov
lock
xlat
into
dec
fidivrl
int
mov
sbb
adc
sbb
sbb
cmovae
out
lcall
fldenv
adc
inc
xchg
mov
adc
movl
sub
and
xchg
mov
nop
jae
add
fidivs
cmc
jae
or
mov
push
stos
add
shrb
dec
jne
jg
aad
sti
orb
mov
lret
div
push
in
icebp
call
lcall
and
icebp
xor
test
adc
xchg
faddl
pop
jge
sahf
xor
cmp
test
adc
icebp
sti
mov
push
push
pop
jbe
jge
jle
push
push
mov
push
mov
popf
mov
call
sti
xor
and
movsb
mov
les
daa
xor
or
rcrb
push
adc
cld
fadds
sbb
cld
mov
pop
xchg
jmp
ljmp
sbb
leave
data16
popa
testb
mov
lock
and
cmp
cmp
xchg
mov
iret
mov
call
fs
lret
mov
adc
push
add
add
cld
jp
aas
adcl
inc
xor
popa
test
pop
out
push
mov
mov
cmp
mov
xchg
add
sbb
inc
data16
lods
and
cli
rol
scas
ss
xchg
jne
out
stos
daa
adc
or
xchg
sbb
cmp
mov
mov
mov
iret
fdivs
jg
dec
jne
ret
std
inc
pushf
jp
pusha
push
adc
dec
xor
jmp
jb
movsb
mov
aad
sbb
call
xchg
dec
xchg
xchg
add
rcll
rorl
and
xor
shl
int
shl
cmp
faddl
iret
stc
xor
add
pop
arpl
cli
jnp
jg
mov
arpl
pop
andl
add
std
or
mov
mov
dec
sub
push
inc
lods
xchg
cmpsl
or
sar
notl
shrb
outsb
pop
das
mov
inc
scas
push
les
dec
je
test
call
dec
mov
xchg
pop
sti
hlt
outsl
jns,pn
test
aad
ds
mov
cmp
push
les
imul
repnz
fs
inc
pusha
pushf
shll
nop/reserved
xor
push
xchg
pop
push
xor
mov
int
mov
outsb
or
adc
shll
out
mov
and
rclb
mov
or
shll
in
cmp
add
js
xchg
mov
jb
mov
insl
and
inc
notb
pop
ret
dec
je
sub
into
into
hlt
out
jb
jb
sbb
mov
cmc
dec
fs
push
scas
arpl
data16
mov
sbb
push
je
inc
mov
pop
adc
inc
jp
loop
fisubrl
and
push
sub
sbb
xor
stc
imul
in
mov
rorl
jno
add
std
push
mov
sbbb
pop
mull
mov
test
out
lock
sub
imul
out
inc
daa
or
or
mov
jbe
add
fdivrp
cmp
jl
insl
rorb
hlt
ret
dec
sahf
adc
movsbl
fsubrs
add
cmpb
fcom
movl
xchg
cmp
or
je
test
sti
test
mov
sub
iret
and
lods
jb
test
ret
int3
mov
mov
push
sahf
cs
test
mov
inc
xchg
push
aad
or
adc
sbb
outsb
stc
lcall
adc
cmpsb
push
out
add
dec
in
lods
int
push
stos
dec
push
or
push
arpl
push
in
bnd
repnz
shll
aam
scas
scas
cli
push
lods
fcomps
fsubrs
and
push
sbb
in
push
pop
push
xor
mov
or
adc
dec
cwtl
cmp
ficomps
sub
in
notb
mov
mov
shll
mov
jmp
fnstsw
js
push
out
push
outsb
ficoms
in
cmp
mov
test
jo
hlt
lahf
sbb
and
pushf
inc
out
cld
sbb
mov
push
cmpl
cmpsb
push
adcb
setae
in
adc
std
mov
push
xor
xchg
fstpt
enter
xlat
les
inc
insl
cli
xor
loope
xchg
in
or
jmp
iret
fsubr
cmpsb
mov
fldl
addl
add
pop
pop
lds
or
cmp
mulps
pop
jb
jne
sub
shlb
mov
lret
out
pop
xchg
cli
cmpsb
lods
pop
test
adcb
pop
inc
in
jl
aas
xchg
daa
daa
mov
add
jp
frstor
in
loop
push
lahf
test
nop
pop
rcr
adc
sbb
lds
push
pop
pop
jle
aas
xlat
iret
mov
cltd
in
lret
pop
das
in
pop
or
cltd
arpl
in
adc
cwtl
in
cmc
mov
bound
cmp
push
rcrb
aad
test
sbb
into
lret
push
sub
xchg
xchg
sub
push
cmp
cli
inc
xchg
imul
loope
add
and
aaa
sbb
std
pusha
popl
adc
jo
dec
insb
popl
cltd
movd
xor
push
out
and
bound
push
adc
push
test
inc
or
iret
addr16
movl
push
sti
push
jg
xchg
push
and
subb
adc
push
mov
lds
pusha
jbe
sbb
cmp
inc
xor
into
mov
es
mov
pmulhw
push
cmpsb
add
loope
xchg
pop
pop
or
or
mov
sub
and
inc
push
fnsave
ret
push
test
fmull
cmpsb
mov
lahf
aam
hlt
or
and
add
insb
push
popl
mov
dec
inc
pushf
enter
aaa
jl
fwait
push
addr16
aam
leave
add
sbb
les
mov
push
cmpsb
stos
cmp
sbb
xor
loope
fs
incb
pop
ja
sbb
mov
mov
ljmp
lret
adc
fildl
push
add
cli
jge
cmp
sbb
push
jae
jl
mov
repz
in
jbe
jp
outsb
outsl
jno
cmp
les
lock
das
pop
ss
cli
mov
imul
mov
or
cld
stos
add
incl
out
les
pop
imul
push
sti
ret
xlat
pop
jmp
add
loopne
jg
mov
les
or
and
adc
jnp
lret
inc
cltd
mov
nop
mov
aad
mov
mov
lods
inc
add
adc
sti
fwait
scas
out
add
adc
ss
mov
mov
neg
ja
jno
push
mov
lret
or
adc
adc
in
dec
dec
cmpsl
xor
mov
in
jmp
sbb
mov
mov
sbb
cmp
mov
iret
pop
jnp
bound
sub
mov
gs
mov
mov
xor
cmpsb
pop
jne
jp
jnp
cld
cmp
jmp
movsb
sbb
outsb
jno
add
rcpps
hlt
test
insb
sub
repnz
inc
mov
adc
cmp
sbb
pop
push
rcrb
or
cmpsb
das
pushf
mov
test
and
imul
or
cmp
sbb
loop
addr16
xor
call
and
repnz
pop
loopne
mov
push
jbe
dec
stc
outsl
dec
push
loop
jmp
in
add
xchg
fidivrl
jg
adc
xchg
rorl
adc
cwtl
adc
jp
bound
inc
jmp
jecxz
aas
sub
test
adc
orl
gs
lahf
push
ja
push
cmp
mov
and
and
ds
dec
pop
adc
or
lods
sbb
inc
mov
daa
dec
mov
and
push
fs
dec
mov
gs
inc
jl
mov
and
adc
mov
je
ja
repz
aas
fldcw
xor
insl
xchg
ret
hlt
push
stos
xor
jno
and
or
push
cmpsb
clc
pop
pop
xor
imul
out
mov
dec
fisubrl
or
xor
lods
push
sub
inc
xor
sub
loop
and
stc
and
gs
es
mov
jle
push
movsb
dec
icebp
push
adc
lret
sbb
jo
or
ret
repz
dec
out
pusha
mov
mov
mov
push
lods
filds
and
lock
sarl
jg
mov
in
icebp
test
jno
loope
jne
sub
and
loopne
mov
cmp
add
sbb
nop
add
mov
cld
sti
insb
and
into
cmp
jne
cmc
inc
pop
or
or
or
adc
sbb
or
mov
mov
clc
out
test
ret
ss
mov
mov
insl
push
cmpsl
sub
ret
cwtl
dec
pop
aad
or
cmpsb
je
jno
leavew
sti
jle
cmp
in
out
bound
xor
cmp
mov
push
jl
je
fwait
jmp
sbb
lcall
jge
pop
mov
jp
lods
sub
mov
loopne
inc
in
leave
mov
lahf
cmpsb
pop
inc
aas
rclb
sub
mov
or
cmc
fnstcw
ds
sbbl
gs
cmpsl
cmp
test
mov
xor
jno
pop
nop
inc
xor
daa
pop
jge
add
in
loopne
jle
rorl
inc
lea
inc
cmp
int3
inc
popa
sub
sub
outsb
xor
scas
sbb
inc
and
push
or
inc
add
xchg
cmp
lods
and
inc
mov
das
fidivs
lods
addr16
xor
sarb
push
mov
sub
mov
std
aam
in
xor
mov
dec
lds
test
sub
push
sbb
cmpsb
pop
push
es
dec
push
test
pusha
sarb
arpl
lret
ja
in
adc
jl
pop
inc
jnp
pop
sub
popa
daa
call
dec
mov
enter
mov
push
xchg
cli
add
add
pop
pop
fldl
into
daa
mov
push
das
xchg
xor
int3
pop
mov
movsb
lods
cmp
and
and
stc
sub
or
pop
sbb
mov
call
adc
mov
mov
mov
aaa
mov
imul
lret
jbe
fstl
cmp
scas
fs
rclb
pop
xlat
cwtl
imul
pushl
add
loope
pop
sti
cmp
cmpsb
push
inc
in
leave
in
push
sbb
mov
dec
jno
ja
out
mov
pop
push
inc
sub
in
jge
loop
xchg
movsl
jmp
jb
dec
shlb
cmp
fnstsw
stos
cmp
push
push
mov
aas
mov
jne
loop
ret
and
lret
adc
loop
std
adc
pop
xchg
sbb
xchg
andl
mov
ljmp
in
addr16
fs
pusha
mov
sub
mov
js
dec
sti
es
adc
xchg
sub
clc
jg
mov
mov
aas
push
inc
mov
leave
mov
inc
dec
cmp
lcall
aas
lds
jbe
bnd
stos
push
insl
scas
or
data16
dec
jns
adc
jmp
fisttps
inc
js
mov
add
pop
aaa
andl
inc
xor
ja
jo
out
mov
dec
daa
dec
dec
aaa
add
jo
sahf
jle
rcr
dec
decb
mov
mov
mov
in
aaa
iret
mov
xor
xor
push
repz
pusha
sub
mov
xor
mov
arpl
sub
aas
sbb
and
pop
pop
lods
or
xlat
xchg
inc
int
push
ljmp
lret
xchg
cli
test
fcompl
push
imul
mov
and
adc
divb
dec
mov
std
inc
xchg
dec
push
push
and
lret
jmp
inc
sub
movsl
mov
stos
inc
cld
xor
sub
xchg
out
rep
hlt
nop
adc
mov
push
cmp
or
xchg
mov
cmp
jb
xchg
cmp
loop
mov
fs
dec
loope
push
das
push
mov
add
jl
dec
pop
mov
dec
popa
pusha
es
mov
pushf
cmpsb
roll
dec
aad
js
mov
sub
arpl
ds
jns
pushl
shrl
cld
cmp
repz
jo
js
push
js
xchg
xchg
imul
mov
imul
mov
cmp
decl
jg
adc
aad
enter
into
lahf
xor
sbb
inc
orl
fisubl
lcall
aam
call
scas
lock
dec
add
fst
sahf
push
iret
mov
sub
xchg
adc
stos
cmp
scas
jo
lret
movsb
jo
imul
aaa
mov
popf
mov
movsl
dec
push
clc
repnz
xchg
ss
jp
repnz
iret
xchg
cmpsb
stos
dec
or
push
push
and
xor
ror
mov
dec
jp
outsb
pusha
mov
add
inc
and
mov
fwait
clc
jb
shrb
leave
push
jg
inc
mov
and
dec
push
push
jmp
fistpl
xorb
adc
jnp
aad
cwtl
or
jo
add
dec
pop
hlt
and
pushf
add
mov
and
aad
cmp
xchg
sub
adc
adc
stos
jp
ja
loopne
mov
std
daa
cld
loope
repz
cmp
push
inc
jl
adc
mov
and
pop
in
and
add
dec
std
ret
sub
shl
data16
pop
mov
pop
fimuls
in
cmp
sbb
push
pushf
lock
loopne
in
scas
mov
into
jns
ss
adc
jno
or
leave
push
or
in
sub
cwtl
rdpmc
insl
into
pop
lds
scas
loopne
sbb
push
xchg
out
inc
lock
mov
fninit
mov
mov
push
push
pop
xchg
sub
inc
sbb
fldl
mov
xor
jno
and
and
ret
mov
mov
push
jl
out
xchg
jae
jo
xchg
out
ss
pop
es
adc
ja
addr16
jo
cld
cmp
cmp
adc
mov
push
lret
ficoml
sti
fldl
sub
mov
outsb
js
je
ret
dec
fptan
stc
ja
ficompl
adc
ja
cmp
sar
mov
mov
push
mov
aam
mov
inc
mov
fcom
inc
mov
lods
mov
inc
inc
xchg
mov
inc
testl
fcomi
jle
hlt
ss
pop
test
out
stos
pusha
sti
lea
js
ffreep
shll
cmp
mov
pop
mov
cmpsb
addr16
addb
and
imul
xchg
dec
subb
or
imul
popl
test
clc
xor
les
xchg
je
cmp
stc
mov
dec
push
pop
jmp
in
loope
movsb
subl
mov
xchg
fdivl
lcall
jp
mov
scas
mov
stos
test
inc
arpl
xor
cmp
and
add
fxch
test
mov
ss
jns,pt
jns
sahf
decl
into
push
adc
movsl
out
andb
jp
loopne
data16
mov
dec
or
adc
fsubrl
and
daa
xchg
jg
popf
call
lcall
sbb
subb
ret
fiaddl
stc
jae
mov
xchg
xor
jbe
movsb
lcall
lahf
or
dec
mov
js
imul
jo
int3
int
inc
popa
cli
out
xor
push
pop
movsb
aad
pusha
jle
sahf
adc
in
or
mov
mov
repz
push
and
aaa
bound
pop
mov
in
movsl
int3
mov
sahf
adc
or
cmp
pop
mov
dec
outsl
pop
or
push
push
or
sub
leave
ret
test
stos
xchg
gs
shrl
dec
adcl
loope
and
hlt
push
cmp
inc
sbb
jl
lea
cmp
pop
les
lret
mov
jo
pusha
lods
pop
dec
les
pop
xor
adc
cs
out
lahf
pop
arpl
xchg
adc
or
es
dec
xor
inc
scas
mov
adc
in
pop
jecxz
add
pushf
adc
sub
enter
mov
cmp
and
add
aad
leave
ds
mov
mov
or
out
add
mov
fstcw
mov
inc
in
ja
mov
jmp
leave
adc
xlat
test
dec
dec
sbb
mov
cmp
mov
adc
in
sub
push
adc
push
jp
cmp
arpl
push
out
std
sub
adc
movsb
push
push
xchg
sti
mov
sub
stc
je
pop
cs
adcl
mov
xor
cmovl
and
mov
stc
mov
mov
dec
jae
cmpsl
add
push
cwtl
test
ja
mov
or
adc
mov
mov
fisubrs
jns
rep
pusha
push
testl
and
scas
loop
dec
sti
lcall
in
leave
std
push
les
mov
aaa
mov
out
pop
inc
jp
sbb
lods
and
das
add
movsl
mov
ja
dec
ja
lcall
stos
stos
scas
dec
mov
push
test
lahf
rorb
flds
mov
rorb
add
jne
jecxz
mov
pop
push
pushf
fst
and
mov
mov
pop
pusha
rclb
add
hlt
sub
loop
push
and
push
jno
add
adc
mov
cwtl
ljmp
dec
sub
in
cmpsb
loop
and
jecxz
in
push
pusha
mov
dec
test
dec
imul
lods
cmovb
mov
scas
xor
cmp
rol
or
pop
or
push
xchg
stos
stos
loop
cli
inc
ret
repz
pop
out
pop
dec
fbld
scas
sar
jae
popf
mov
inc
dec
fbstp
cmp
addl
cmpb
imul
in
repz
movsb
pop
or
aam
in
int
test
sbb
add
fisubrs
ret
xlat
addr16
cli
mov
pop
dec
outsb
fmuls
or
cmpsl
sbb
dec
jo
mov
push
fstp
insb
insb
jmp
jo
adc
adcl
fbstp
inc
popa
xor
test
adc
out
sub
aad
inc
or
fcmovnb
int3
dec
cli
pop
or
jle
xor
or
jno
outsl
stos
mov
out
idivl
jl
cmp
push
push
inc
out
inc
neg
cltd
test
addr16
xor
je
add
out
cmp
dec
mov
mov
xlat
inc
pop
and
mov
sub
das
aad
aad
pushf
mov
shrl
xchg
inc
into
inc
rcrb
mov
mov
out
dec
out
push
inc
nop
sub
or
cwtl
xor
in
or
fdiv
sub
or
cld
mov
orl
int3
xchg
dec
or
outsb
cwtl
mov
dec
mov
add
cwtl
enter
mov
add
jmp
cmp
cld
xor
xchg
sub
out
es
js
mov
jo
repz
mov
das
and
cwtl
sbb
out
or
stc
or
shlb
inc
fists
adc
sub
enter
imul
enter
xchg
loope
adc
pop
repnz
das
cmc
idivl
cmp
and
pop
out
ret
jecxz
lock
int
jg
mov
or
cli
mov
dec
push
cmp
cmp
cld
or
shrb
into
or
iret
cmc
daa
add
mov
test
dec
out
test
repz
lret
xor
xor
enter
out
xchg
push
popf
test
sbb
mov
push
cmp
int3
addb
outsl
pop
int3
out
sub
and
adc
mov
dec
stos
inc
dec
push
add
mov
push
roll
shl
ror
pop
and
fisttpl
mov
popa
mov
inc
frstor
std
mov
inc
jno
mov
in
mov
lret
cmp
sub
dec
fdiv
inc
jp
loop
sbbl
ret
xor
lods
jmp
repz
mov
shl
push
sbb
test
pop
xorl
jge
or
jns
xchg
std
push
sub
dec
dec
push
popf
andb
fdivs
sahf
jnp
nop
gs
mov
lds
mov
cmp
mov
pop
push
popa
pop
xor
cli
negl
push
push
cmpsl
hlt
inc
stos
dec
sub
lret
or
dec
inc
inc
cltd
push
xor
dec
fiaddl
mov
fdivr
gs
adc
rcll
pop
mov
push
jno
mov
sub
fsubrl
scas
xlat
pushf
cmp
inc
pushf
push
je
xacquire
xlat
mov
inc
or
ja
fs
out
out
xor
pop
loopne
lock
stc
inc
faddl
sbb
jne
icebp
mov
loop
mov
ret
jle
bound
icebp
outsl
fmull
sbb
cmp
mov
add
push
jl
inc
xchg
cmp
push
or
xor
nop
cmpps
adc
insb
xorb
cmp
mov
cltd
inc
mov
mov
xor
jg
cmc
movsb
mov
cmp
jle
and
xchg
mov
mov
fcoms
fmull
jle
rcr
push
lcall
sub
rorb
push
jp
dec
lcall
adc
loopne
jg
enter
jb
add
xchg
and
or
inc
mov
mov
mov
shl
popf
loopne
inc
jo
push
push
sbb
insb
ljmp
mov
imul
mov
sbb
inc
pop
jle
jns
outsl
in
clc
popa
mov
dec
pop
cmp
xchg
movb
nop
mov
mov
clc
mov
fsubs
sti
fistps
add
jg
push
rcr
repz
dec
dec
sbb
dec
in
adc
mulb
sub
cmp
fildl
hlt
ss
mov
xchg
cwtl
ds
insb
and
hlt
inc
mov
mov
mov
dec
insl
gs
push
push
decb
subb
push
out
fdivl
gs
jnp
iret
pop
test
or
sbb
fbstp
ret
add
xor
xor
repnz
sbb
repz
adc
fdivrs
xor
jno
sbb
jg
stos
push
lods
lcall
roll
mov
mov
lret
into
xchg
jno
sbb
ret
je
enter
les
mov
into
push
mov
sbb
push
sbb
push
pop
xchg
jno
cmpsb
lcall
cmpl
or
sub
sbb
sub
lcall
sbb
icebp
and
push
xchg
arpl
push
fistl
outsl
jnp
repz
jg
pop
add
add
mov
jecxz
pop
jno
int3
jno
and
jb
loope
insb
fadds
out
xor
in
pop
mov
lret
cmp
push
jnp
xchg
negb
leave
sbb
pop
dec
add
xchg
pop
lods
fistpll
sti
pushf
sub
sbb
outsb
loopne
jg
or
jp
and
push
loopne
iret
leave
dec
xchg
sbbl
pop
push
data16
ss
pop
aam
cwtl
pop
dec
outsl
pusha
outsb
cli
xchg
leave
imul
cmp
push
je
xor
rcl
and
dec
imul
xchg
xor
in
cmpsl
pop
or
mov
mov
inc
into
pop
loope
xchg
je
insb
sub
cli
xchg
inc
push
pop
aad
xchg
sub
dec
nop
fcomps
sbb
imul
fidivl
jmp
push
cwtl
loopne
push
nop
sub
cs
leave
lock
lea
add
xor
stos
pop
and
in
cltd
pop
sub
lods
insl
fcmovnu
fldenv
xchg
fnsave
dec
ja
sub
ja
out
rcr
adc
fwait
xchg
add
imul
scas
pop
data16
shlb
cmpsb
adc
xacquire
ficompl
adc
into
insb
xchg
test
xor
jb
sbb
test
sub
mov
ljmp
push
jl
addr16
cltd
out
cli
stos
dec
cmp
ljmp
into
orb
sbb
pop
inc
xor
ds
mov
mov
or
add
inc
sub
inc
mov
in
mov
jns
aam
push
push
inc
stos
ffreep
cmp
lea
jo
addr16
out
jle
inc
and
sarb
mov
rorb
add
pop
jge
fdivl
aad
ljmp
ficoml
fildll
out
dec
daa
jle
push
dec
jp
les
ret
lret
or
stos
push
cli
cmp
out
sbb
scas
mov
loopne
test
pop
push
imul
mov
mov
dec
xor
adc
mov
sbb
inc
add
cli
and
sbb
inc
call
scas
adc
xor
jp
cmp
movsb
push
sub
jb
inc
adc
test
dec
mov
bound
outsl
sub
ds
push
test
xchg
push
cmc
addr16
sbb
dec
lock
adc
dec
ljmp
sbb
xor
add
icebp
cmpb
pop
cmp
aaa
xor
jg
scas
dec
mov
hlt
add
daa
icebp
loopne
repnz
rolb
mov
pop
sarl
pop
dec
mulb
pop
ror
or
inc
in
scas
pusha
rcll
xchg
cwtl
lods
and
mov
adc
dec
stos
int3
pop
adc
lcall
mov
dec
je
add
mov
sub
pop
es
shll
inc
cmp
fldenv
int3
mov
mov
xlat
divb
subb
jmp
inc
adc
test
fwait
push
dec
lock
int3
imul
pop
inc
or
mov
icebp
mov
daa
cmpsl
pop
outsb
xor
test
or
aas
js
test
int
cltd
ret
negl
cmp
ret
mov
inc
movsb
cmp
mov
sbb
jge
lcall
inc
pop
leave
or
lods
nop
xchg
dec
out
and
lds
xor
imul
subl
xor
in
sbb
adcb
loope
out
mov
mov
je
imul
cmc
das
stos
cmp
push
xchg
sub
and
sub
mov
test
push
cwtl
in
std
jmp
sar
sti
mov
inc
push
push
lds
sub
jo
mov
xor
pop
mov
inc
pop
inc
andb
push
push
test
push
cmc
inc
loopne
cmpsl
fisubrl
aaa
mov
sahf
dec
mov
add
out
xor
ljmp
and
dec
jmp
sbb
and
sub
pop
das
and
adc
sbb
sub
mov
cli
dec
dec
daa
xchg
pop
xchg
insl
adc
pusha
in
pop
imul
xchg
lret
negl
ret
test
iret
and
push
push
popa
out
cli
mov
ss
mov
sti
jp
mov
ds
inc
aaa
xor
jp
int
nop
xchg
shrl
dec
jl
cmc
sbb
movsb
xor
mov
adc
sbb
imulb
lea
mov
inc
xchg
mov
int
add
bound
and
or
sub
mov
push
mov
mov
cmpsl
das
mov
cli
aaa
ret
xchg
lret
sub
iret
push
push
iret
push
movsl
dec
in
pusha
call
push
xor
inc
out
cld
sub
sbbl
or
push
stos
lahf
mov
enter
fdivl
mov
fcmove
bound
cmpsb
loope
imul
jmp
lds
cmp
jge
dec
fcoms
aam
imul
sub
and
mov
push
xchg
push
adc
cmp
sbb
jae
pop
scas
jbe
cs
popa
das
cwtl
fcoms
rol
fdivrs
in
xchg
idivl
cmc
sbb
jnp
push
cmp
pop
out
outsb
dec
cmp
test
loopne
sahf
sbb
inc
lods
add
xlat
sub
adc
add
movsl
call
cmc
lcall
leave
fdivl
sub
js
xchg
fdivrs
daa
and
dec
mov
mov
dec
cltd
or
or
lret
insb
mov
aam
cmp
shl
inc
dec
inc
subb
pop
sub
in
push
popa
mov
movsl
cli
cltd
inc
aam
pop
fsubs
cmp
mov
arpl
pop
xchg
cli
cwtl
mov
lods
push
imul
xchg
mov
pop
push
pop
add
int
repnz
sbb
pop
into
dec
daa
xor
or
mov
or
dec
mov
call
sbb
arpl
mov
push
fdivr
xchg
push
mov
pop
xchg
mov
stc
jne
mov
xchg
stos
inc
add
adc
push
mov
out
mov
mov
xor
aaa
stc
push
ret
and
cmp
enter
repz
jns
adc
mov
fisttps
sti
movsb
mov
sub
call
mov
inc
leave
pop
mov
mov
sub
fildll
pop
jne
adc
adcb
cmc
icebp
jmp
cmc
xor
add
gs
cmp
sub
cmp
or
sahf
cs
mov
rolb
adc
adc
jmp
jae
cld
mov
push
cmpb
in
lret
stc
popa
imul
or
jmp
push
inc
xchg
mov
xchg
push
push
aas
push
sbb
pop
sub
dec
pop
inc
fnsave
xchg
fsubr
sbb
jo
setg
push
sbb
push
lock
or
std
push
cli
and
sub
mov
xor
loope
cli
out
dec
push
push
and
dec
adc
int
add
into
xor
jae
pop
loop
repnz
and
mov
inc
imulb
jle
call
pop
js
movsl
mov
hlt
cmp
decb
push
stc
adc
int3
mov
and
pop
dec
into
popf
add
movsb
cmp
aaa
xor
push
jmp
les
jne
imul
fcomps
fstpl
pop
or
enter
dec
fistps
or
pop
cwtl
or
mov
ret
outsl
in
test
cld
mov
test
int
fistps
inc
push
ljmp
dec
cmp
pushf
pop
inc
sarb
xchg
inc
pop
push
lret
add
and
pop
sbb
insl
insl
and
add
stos
movsb
push
shll
add
scas
inc
pop
mov
clc
lret
xlat
bound
ret
pop
das
push
out
in
in
rcll
inc
aaa
es
lock
aaa
xor
mov
dec
sub
xor
mov
pop
mov
cmp
add
cmp
outsb
add
pop
jl
es
mov
js
stc
cltd
cmpsl
lea
sbb
cmc
xchg
push
xchg
jmp
inc
hlt
or
dec
in
mov
mov
jl
btc
pop
sbb
pop
mov
pop
aaa
or
sub
jb
lea
pop
lods
mov
outsb
push
xchg
out
sahf
inc
sahf
xor
jle
outsb
fistps
aas
idivl
fidivs
sub
xor
and
mov
out
jl
popl
jns
in
xchg
in
sub
ds
fsubr
ja
in
pop
xor
bound
sahf
loope
in
cmp
and
imul
packssdw
cli
rclb
ffree
push
lret
aad
dec
push
mov
jmp
test
and
mov
xchg
jl
pop
test
ja
sbbb
mov
xchg
add
pop
das
ret
dec
stc
cmp
fs
lods
sub
mov
inc
mov
xchg
mov
adcl
and
iret
ja
in
stc
sbb
std
arpl
jae
aaa
sub
nop
mov
push
pop
push
mov
int
rclb
inc
loopne
jge
ljmp
push
fistl
push
jae
mov
push
pop
pushf
dec
hlt
sub
xchg
in
jnp
adc
lds
mov
and
stos
in
test
push
push
add
jmp
mov
fimull
add
cmp
push
cmp
or
mov
or
popf
shrl
js
cmp
and
push
call
sbb
dec
mov
inc
jg
sar
cmp
mov
cmp
jne
pushf
outsb
pop
sbb
add
xchg
jb
xor
mov
pusha
call
lods
sbb
mov
adc
test
push
add
pusha
xor
mov
mov
test
ret
mov
rcrb
jle
pop
jle
in
pop
mov
sub
stc
les
jae
lcall
out
nop
cwtl
cmp
fxch
mov
pushf
xor
out
subb
popa
in
stc
xchg
dec
inc
pop
dec
shlb
mov
loopne
jge
in
mov
lret
sarb
call
push
mov
xor
fcoml
and
paddw
xchg
cmpb
sub
mov
sbb
push
inc
mov
fcmovu
or
enter
repz
mov
mov
mov
or
lret
divl
inc
jns
pop
das
add
shll
mov
cmp
mov
rcrl
mov
push
push
fidivs
mov
cmp
push
jae
adc
ja
or
push
icebp
sarb
or
lock
dec
mov
adc
movsl
cmc
mov
cmp
jbe
mov
in
loop
outsb
push
mov
mov
mov
xchg
lahf
aam
stos
add
movsb
sub
xchg
cmp
std
int
lahf
insb
mov
test
jle
jns
ficoml
arpl
mov
mov
sbb
pop
test
sbb
sbb
scas
sbb
jns
inc
jno
mov
lods
aam
test
cmp
popa
push
xchg
cmp
outsl
mov
stc
dec
adc
fs
rclb
dec
ret
fiaddl
sub
paddb
cmpsb
add
adc
sti
mov
xchg
mov
push
sub
xchg
popf
fnstsw
cmp
ret
dec
mov
xchg
es
fsts
and
push
mov
mov
gs
les
in
xchg
das
jmp
cltd
scas
nop
mov
enter
jno
and
adc
out
push
jg
push
sub
xchg
lock
repz
and
gs
ret
mov
es
stos
lods
dec
daa
scas
int3
mov
imul
and
pop
aam
pop
test
mov
sahf
stos
jmp
mov
mov
push
dec
or
flds
shl
mov
in
ret
and
into
icebp
jne
dec
push
xor
lret
cwtl
cmpsb
repz
mov
loope
rorl
cs
lret
adc
insl
push
dec
add
sub
or
aas
in
adc
jne
xchg
cmp
std
outsl
fwait
dec
sub
xor
in
dec
in
and
or
in
js
pop
clc
mov
push
fs
jmp
scas
cli
xlat
or
fdivl
stos
shll
cmp
in
outsl
cmpl
or
std
stos
lret
ja
sbb
hlt
idiv
pop
mov
inc
pop
popf
repnz
cmpsl
out
and
and
xchg
lods
ret
dec
cmp
mov
pop
in
insb
xchg
sbb
push
and
lcall
mov
adc
and
push
pop
sub
cs
jne
lods
arpl
push
jg
inc
outsl
fsubrp
leave
ror
cmp
or
into
sahf
aam
std
movsl
in
sbb
int3
ret
cmp
mov
fldt
dec
sub
movsl
pushf
push
loop
mov
lods
jbe
pop
and
pop
mov
lea
pop
test
cmpsb
adc
fwait
jle
jle
in
xchg
std
dec
nop
stos
je
xor
fdivrl
ljmp
mov
cmp
lahf
add
jle
sbb
sub
pop
ja
mov
cmp
sbb
cmc
loope
ljmp
fisubrl
js
xor
dec
cmpsb
popa
je
cltd
jle
and
push
dec
or
dec
jl
dec
rcrb
inc
push
push
pop
cld
mov
pextrw
sbb
loopne
outsb
pop
xchg
sbb
jle
jl
add
cmpsb
dec
cwtl
mov
push
jge
push
cmp
test
mov
adc
fsubp
xor
test
and
or
jg
sbbl
pop
jmp
arpl
cmp
daa
test
push
adc
in
push
lds
aad
outsl
mov
cmp
push
ss
leave
shlb
sub
adc
cmp
or
test
js
js
orl
push
divps
jae
stc
out
lahf
add
clc
subl
mov
jmp
sahf
pop
loopne
cmp
and
jnp
int
data16
add
ss
jge
add
xor
cli
inc
nop
xor
jno
push
inc
mov
cmp
inc
jl
popa
out
sub
scas
inc
mov
fiadds
int
mov
push
mov
mov
ret
mov
shrb
inc
push
cvtps2pd
imul
push
fisubrl
popf
rol
lahf
inc
lahf
xor
or
xchg
bound
dec
cmp
push
mov
outsl
lret
inc
and
mov
into
subl
jb
xchg
xor
pusha
jnp
jnp
pushf
data16
mov
xor
sbb
lahf
outsb
mov
xchg
adc
fbld
sbb
setle
in
push
out
pop
adcl
inc
scas
lret
push
add
push
in
and
int3
inc
repz
xchg
aas
adc
sbb
adc
sbb
or
cmp
popa
xor
mov
sub
pop
jg
icebp
dec
into
stc
mov
dec
out
lahf
push
xchg
out
stos
dec
cmp
les
cmpl
mov
call
sar
mov
sub
mov
in
jecxz
or
aas
divb
inc
pop
ret
push
movsb
pop
cmpsb
xchg
jl
ss
das
insl
pop
fcomps
lea
imul
int
cmp
lds
out
mov
into
jns
das
cs
pop
rcl
movsl
cmpsb
adc
mov
mov
int3
mov
and
mov
xchg
mov
mov
pop
sub
popa
mov
scas
push
push
and
fnstcw
std
xor
outsl
add
mov
mov
cmp
jns
jmp
lret
sbb
sbb
push
fdivrl
test
inc
push
pop
mov
lock
es
dec
arpl
sbbl
or
enter
pop
in
das
pmuludq
pusha
inc
fisubrl
hlt
push
inc
xor
lret
fimuls
shl
xchg
mov
jge
aam
out
cmpsl
xchg
push
popa
out
sbb
mov
int
movsb
pop
ficoml
jnp
cli
and
nop
imul
ljmp
es
sbb
and
jns
inc
fimull
out
dec
xchg
mov
ret
lds
add
or
jle
and
jl
sbb
cmp
jbe
out
stc
loopne,pt
push
test
daa
out
push
dec
ljmp
subl
lods
fwait
or
mov
ss
lods
adc
lret
andl
fsts
add
mov
mov
ficomps
jge
mov
lcall
push
and
mov
mov
add
sti
fisubl
cwtl
sbb
call
or
jns
shlb
jo
pusha
cmpb
fsubrp
dec
sub
mov
mov
nop
jne
adc
daa
outsl
jecxz
rorl
or
test
xchg
sub
les
loop
xor
dec
and
push
hlt
cmc
aam
inc
jp
xchg
cmpsb
xor
pop
das
mov
xchg
pop
lock
in
into
neg
insb
pop
mov
movsb
pop
push
vpunpckldq
stc
or
gs
mov
arpl
cltd
inc
push
xlat
mov
adc
das
sub
pop
icebp
inc
addr16
push
xchg
fcomps
xlat
sub
xor
jp
sub
inc
jne
mov
lcall
call
mov
dec
test
mov
call
sbb
daa
in
in
cmp
in
fildll
mov
outsl
sbb
sar
dec
fstl
or
or
or
mov
das
mov
aam
aam
xor
jo
mov
push
loop
je
lahf
lds
clc
lock
aam
jae
jp
mov
jg
shlb
push
jne
inc
adc
xor
xchg
cmc
loopne
push
sub
adc
mov
mov
sub
jg
lcall
cmp
jle
into
or
mov
rclb
flds
popa
aam
out
adc
dec
xchg
push
jnp
movsb
mov
insb
dec
xchg
mov
mov
pop
push
sub
jg
cmp
add
mov
sbb
mov
jmp
push
popf
xor
sbb
repz
fwait
and
push
pop
pop
int
into
pop
rcr
insl
pop
je
add
fdecstp
pavgb
imul
jge
sub
and
push
lret
cmp
popa
pop
xor
pushf
mov
inc
xchg
jecxz
or
idivl
out
mov
mov
pop
popa
mov
mov
popf
imul
mov
dec
es
bound
nop
push
inc
in
ljmp
xchg
lock
jns
mov
jbe
or
dec
cmp
jecxz
xchg
pop
adc
sub
lock
dec
sbbb
push
enter
call
lods
mov
adc
xor
pushf
xor
ret
jo
add
test
loop
sbb
bound
inc
ftst
adc
sub
cmp
pop
ror
lea
mov
sub
fcomip
push
mov
or
jae
mov
xchg
jne
pop
add
adc
mov
incl
cli
lret
dec
add
adc
jnp
pushf
mov
fmulp
test
or
orb
arpl
cmp
jp
and
insb
dec
dec
insb
mov
jle
lcall
sbb
add
mov
cmp
xchg
xlat
mov
frstor
pop
jne
cmp
mov
push
out
dec
xlat
xchg
or
imul
ds
popfw
or
xor
xor
add
cmp
mov
lret
and
rclb
cmp
and
scas
mov
es
cwtl
xor
xchg
xchg
pop
cld
and
clc
mov
inc
dec
cli
je
mov
loope
sbb
cltd
pop
dec
pop
outsl
or
push
xor
mov
inc
aaa
jns
add
inc
xlat
xchg
jb
movsl
or
int
mov
xchg
and
sub
out
cmp
sti
lahf
jno
push
mov
cmp
pop
jmp
gs
add
add
rclb
inc
mov
popf
cmp
sbbl
mov
dec
aad
test
jnp
popa
sub
and
xor
scas
cmp
add
or
dec
mov
adc
loop
xchg
xor
test
xchg
cld
push
pop
aas
xor
lods
cmp
pop
or
add
dec
dec
aad
or
cli
jns
cmp
pop
jecxz
cmc
sbb
mov
rorl
arpl
fnstcw
and
das
jecxz
jl
cli
mov
fstpt
out
test
mov
or
sbb
and
in
subb
enter
sbb
push
inc
and
imul
xor
loopne
rorl
iret
xchg
mov
das
out
loope
rcrb
mov
xchg
push
cli
mov
fistpll
add
sub
jg
fadds
jecxz,pt
cmp
sbb
decb
add
mov
sub
nop
loopne
jbe
je
jno
sub
mov
jnp
cmp
dec
push
mov
fcmovnb
dec
shl
xchg
mov
mov
sub
mov
pop
nop
gs
dec
movsb
fidivs
sbb
dec
jne,pt
pop
inc
sub
jmp
addb
js
adc
test
imul
add
cmpsb
hlt
fwait
clc
pop
arpl
jp
lods
and
pop
cmpsl
lret
mov
and
jmp
xchg
stc
hlt
in
sub
pop
pop
xor
and
bound
xor
cmp
jg
icebp
xchg
sub
shlb
xor
adc
pop
shlb
negb
push
in
in
in
xor
test
push
cmpsl
pop
pop
adc
push
int
outsb
lds
jo
pop
lea
xchg
mov
shrl
scas
mov
clc
fdivrl
sarl
push
sub
scas
and
or
out
sbb
stos
jle
call
push
icebp
das
pop
repz
push
jo
rorb
jae
addr16
int
rclb
mov
hlt
popf
je
and
and
mov
adc
mov
mov
jae
lods
xchg
fisubrs
and
fst
xorl
push
adc
add
sub
outsl
dec
lret
popa
outsl
orb
insb
mov
int3
mov
call
mov
scas
dec
test
lds
push
dec
dec
and
fmull
das
fs
xchg
mov
sub
stos
aaa
push
imul
repnz
mov
iret
cld
out
in
bound
adc
dec
sbb
fisttpl
and
ret
and
cmc
dec
in
inc
rorl
rcll
adc
jge
and
jg
rcr
mov
pop
lahf
clc
addr16
xchg
push
xor
out
adc
or
insl
cli
ss
jo
xchg
int
scas
mov
pop
jg
ss
or
cmp
rorb
pop
pop
inc
pop
mov
push
sahf
dec
out
je
or
jle
shlb
cmc
ja
fs
mov
or
mov
xor
pop
out
xor
xchg
cmp
sub
in
xor
jg
cs
jp
pop
ficoms
jns
lret
in
adcb
movsl
popf
outsb
push
sbbb
popa
test
sub
int
cwtl
xor
lret
popf
test
xchg
or
push
psubusb
xchg
cmpsl
xchg
jb
loope
cmp
sti
jo
repz
mov
lods
push
add
inc
inc
or
leave
insb
lods
insl
mov
xor
into
lret
rcl
pushf
add
pushf
adc
in
jecxz
dec
fbstp
xlat
cmp
adc
jle
or
adc
out
fwait
popf
mov
loopne
xor
std
inc
data16
mov
or
push
xchg
cmpl
rcrl
pop
cmp
xchg
cmp
sub
inc
rorb
movsl
ficoms
mov
in
xlat
xchg
int3
xor
dec
push
adc
lret
lds
push
call
bound
pushf
into
mov
lahf
or
push
js
in
push
imul
ret
or
xor
cmpsl
aaa
pop
int3
push
pushf
fmull
and
and
push
aas
out
ficoml
jns
sbb
mov
pusha
movsl
jge
push
sbbl
bswap
mov
cld
or
repnz
xlat
or
popa
pop
lds
jbe
xchg
mov
fdivr
sbb
xlat
dec
xor
sub
jp
mov
mov
cltd
xor
add
mov
pop
cs
mov
mov
lret
cmpsl
pop
inc
les
xchg
outsl
popf
inc
in
add
add
mov
scas
test
std
cmp
movsl
insb
mov
test
dec
sti
push
jns
jmp
jo
xor
fsubr
mov
out
out
pop
pop
and
sub
adc
cmpsb
cli
xchg
nop
loopne
mov
test
mov
dec
fnsave
mov
jp
mov
sahf
out
mov
jl
pop
push
mov
dec
dec
cs
test
hlt
imul
es
cmp
stos
lea
mov
xchg
sub
xor
clc
sub
fiadds
movsb
test
jns
add
jo
sahf
gs
mov
popf
sbb
mov
in
xor
xchg
cmp
insl
cmp
cmp
jg
cmc
cmp
dec
cld
inc
nop
push
dec
aas
inc
adc
sub
sar
push
enter
jbe
gs
add
idiv
mov
push
xor
into
adc
dec
loopw
sarb
mov
mov
pop
and
or
dec
and
sbb
xchg
loopne
popf
lea
fsub
jmp
or
mov
test
sub
jb
mov
sahf
int
and
mov
or
mov
clc
loop
dec
mov
dec
sbb
jno
insl
push
ljmp
repz
fidivs
testb
sbbl
iret
out
out
dec
icebp
jns
lds
fimuls
jp
orb
xor
arpl
sbbb
imul
ds
adc
xchg
fdivrp
ficomps
xor
adc
subb
inc
inc
xor
jb
sub
pop
push
mov
adc
cmp
nop
and
and
cmp
pop
loop
clc
or
fwait
pop
das
xchg
dec
clc
and
jle
rcr
mov
push
andl
test
mov
sub
jmp
pop
xchg
popf
in
int3
push
stos
xchg
push
push
psubsw
cli
jo
lahf
sbbl
lods
mov
in
xchg
inc
data16
int
das
out
jecxz
inc
aam
test
fnstenv
mov
lods
rclb
psrlw
cld
stos
inc
push
inc
cmp
cmp
dec
outsl
inc
mov
sub
fsub
push
movsb
ljmp
jle
ret
adc
xor
sbb
adc
jns
mov
lahf
or
xor
and
sbb
in
movsl
mov
adc
nop
test
jge
jg
cmp
sub
dec
inc
ja
cmp
mov
push
mov
or
jmp
pop
or
push
cwtl
bound
pop
sub
push
test
inc
rorl
cmp
clc
jns
sbb
or
mov
idivb
clc
or
lods
dec
outsb
add
ret
add
or
sub
mov
inc
fdiv
add
pop
mov
popf
push
jno
cmp
sub
mov
xchg
cmp
mov
mov
xchg
and
cmp
pop
outsb
xchg
inc
loopne
mov
xor
test
jge
xor
push
add
mov
outsl
push
fwait
sub
add
pusha
fcomps
mov
jp
cmp
inc
add
out
pop
mov
sbb
sarl
daa
ja
mov
insb
pop
cwtl
mov
cli
cmp
mov
mov
mov
test
sarb
and
adc
dec
fdivrs
inc
test
fldcw
or
int
mov
mov
js
stc
mov
jne
rol
out
jbe
sbb
xchg
loopne
mull
sbb
mov
loope
aas
mov
js
shlb
mov
gs
imul
je
sbb
mov
insl
add
sbb
and
ds
or
or
add
push
add
jno
fdivrs
push
jmp
pusha
sbb
push
sub
or
in
aas
ja
sbb
xlat
insb
mov
or
jmp
mov
test
push
stc
push
fwait
inc
lea
inc
xchg
dec
sarl
pop
out
pop
lcall
in
sub
lea
or
mov
sti
mov
gs
push
in
jge
xorl
rorb
push
or
mov
jns
test
pop
jp
sub
mov
jl
imul
ljmp
add
enter
adc
loope
sahf
je
add
pushf
dec
nop
mov
outsb
hlt
ret
add
pusha
mov
loope
mov
ficoml
and
cmp
fsubrs
sbb
rcll
jmp
cmp
add
mov
test
out
idivl
pusha
inc
sbb
pusha
sbb
lea
arpl
fdivl
inc
fldt
pop
jl
add
dec
xor
rcrb
or
adc
mov
cwtl
pop
shrl
push
das
jns
jge
dec
insb
in
pop
les
ds
xchg
out
cs
ror
fsubr
mov
mov
mov
scas
nop
pop
loopne
int3
xchg
pop
mov
and
les
insl
push
lds
mov
mov
loope
pop
xor
fidivrl
lahf
and
iret
outsl
sbbb
add
push
jmp
or
dec
into
sbb
addb
push
aas
dec
add
mov
mov
jecxz
pop
sbb
xchg
pop
into
sub
pop
adc
dec
xchg
repz
insl
mov
mov
daa
arpl
lret
cmp
pop
aas
cmp
mov
mov
lahf
mov
popa
stos
mov
sbb
mov
mov
into
aad
push
jnp
fsubrl
cli
push
mov
mov
fnstcw
mov
push
mov
jg
repz
jge
xlat
inc
jp
stos
dec
testl
lods
and
andb
das
jno
repz
push
or
sub
imul
mov
xchg
xor
test
xlat
cmc
lahf
loopne
enter
cld
lods
add
pushl
in
pop
pop
or
mov
xchg
scas
sub
mov
out
xor
inc
xor
lretw
push
in
cli
jnp
test
ror
dec
adc
hlt
inc
je
fisubrl
inc
xchg
rolb
mov
in
dec
xchg
mov
mov
int3
cmc
cmp
push
into
jnp
adc
or
dec
in
pop
jecxz
xor
les
repz
jb
loopne
in
mov
int
sub
sbb
lret
xor
adc
mov
imul
rcl
lods
push
xor
push
dec
int3
sti
sbb
roll
rcll
imul
inc
in
cmpsb
stos
sbb
out
shl
fs
jbe
jbe
jnp
sub
and
xor
mov
bound
inc
movsb
fmuls
xor
and
ret
xor
in
out
js
mov
das
sub
pop
push
or
adc
pusha
mov
mov
add
dec
imul
dec
pop
cmc
xor
and
sbb
adc
sbb
inc
arpl
jl
ret
sub
movsl
mov
aam
adc
cmp
jne
push
mov
aad
loopne
or
mov
popa
pop
jp
or
aas
jp
pop
addr16
lods
dec
pop
mov
and
andb
pushf
cwtl
sub
jne
xor
imul
shrl
jns
mov
xchg
ljmp
lcall
add
xor
movsb
repnz
lock
enter
jmp
mov
xorl
cmp
or
bt
scas
xchg
xchg
flds
jns
cmp
cltd
addl
popf
adc
mov
xchg
or
aad
inc
cmp
pop
xchg
add
fwait
sub
das
xchg
push
ret
cmp
stos
loope
cld
addr16
repnz
push
addr16
popf
shll
cmc
loopne
pop
jo
fs
hlt
nop
xchg
daa
pop
pop
cmpb
xor
mov
out
rcrl
lock
bound
in
and
std
jno
divl
sub
pop
addl
in
ret
jnp
pop
jle
and
lret
andb
pop
out
cmp
sahf
xor
push
push
ret
test
jne
xor
mov
sub
adc
inc
lock
clc
stc
jnp
push
mov
ja
rcr
out
aam
ja
das
jmp
addr16
sbb
orl
cmpsl
and
or
or
push
and
xchg
loop
or
pop
adc
add
or
and
sub
jle
mov
js
mov
loope
pop
iret
rcl
scas
inc
dec
cmp
mov
jns
mov
scas
dec
sub
adc
mov
push
iret
shrb
sbbl
jp
inc
pop
cwtl
stos
push
das
outsb
xchg
sub
pop
iret
xchg
popa
notl
bound
jecxz
mov
xchg
into
test
pop
ljmp
sahf
or
mov
adcl
js
xlat
xchg
dec
dec
cmp
push
pop
hlt
add
push
mov
push
sub
scas
lret
aad
stc
push
int3
data16
outsl
pop
adc
inc
push
inc
aaa
cs
sbb
sbb
dec
cmc
mov
push
pop
cmp
xchg
es
fisttps
sbb
aad
jb
pop
ret
dec
les
scas
mov
pop
xchg
fs
push
mov
lds
out
sahf
mov
bnd
addr16
inc
inc
push
xor
mov
mov
pop
std
mov
xchg
push
jmp
cli
dec
arpl
adc
les
jge
aaa
pop
psrlw
imul
neg
mov
adc
jnp
fsin
sbb
imul
les
push
iret
dec
aad
dec
inc
les
xchg
data16
add
cmp
cmp
rcll
xchg
push
mov
shlb
int
fistl
shrl
inc
pop
mov
jg
mov
lods
pop
notb
push
and
jp
push
rol
push
stos
push
cmp
sub
leave
es
mov
dec
out
inc
xorl
xchg
xor
mov
fdivl
rorb
xchg
stos
pop
push
dec
sbb
pop
dec
dec
lods
add
adc
loop
andl
daa
mov
fistpl
push
pop
pop
rcll
repz
xchg
adc
mov
rcrb
rcrl
inc
test
ja
mov
test
vcmpss
mov
out
xor
test
mov
lds
dec
push
jge
fnstcw
sbb
mov
ds
push
adc
push
lahf
jnp
and
mov
lds
scas
push
xor
adc
cmpsl
int3
pop
add
sub
andb
lock
ds
fisubrs
mov
or
test
enter
shll
push
test
mov
add
dec
cld
sub
rcrl
xchg
das
mov
aam
insb
mov
not
and
adc
enter
aam
ret
mov
mov
scas
lock
xchg
icebp
inc
adc
divl
and
xor
sbb
cmp
jns
cld
and
sbb
push
mov
xor
push
mov
loop
jmp
mov
xchg
mov
out
fcoms
add
mov
mov
cmp
dec
ds
aas
cld
push
pop
xchg
or
icebp
repz
jg
xchg
fnsave
push
int3
test
imul
cmp
xchg
fistl
frstor
stc
sbb
vhaddpd
sbb
and
dec
ja
mov
aas
daa
lahf
dec
imul
and
mov
pop
xchg
xchg
fnstenv
mov
cmp
stc
lea
add
pop
jne
test
push
arpl
sbb
idivl
int
pop
cli
jb
insl
mov
add
mov
push
cwtl
mov
js
cmpsl
and
stc
das
es
cltd
scas
mov
sbb
dec
pop
clc
add
xchg
mov
adc
inc
mov
daa
mulb
fldenv
aas
xchg
out
movsb
jge
outsb
jo
pop
hlt
jo
or
popl
push
inc
iret
icebp
mulb
in
std
push
and
in
and
mov
ds
sub
cmp
push
cli
cld
ljmp
xchg
add
push
ds
into
pop
xor
mov
ffreep
mov
outsl
and
xorl
mov
pop
or
repnz
lret
xchg
lahf
sbb
mov
xor
cmpsb
out
orb
sbb
cwtl
inc
movsb
sub
dec
and
or
call
movb
hlt
in
mov
lock
popa
dec
cmpsl
enter
leave
scas
mov
push
subl
aaa
jg
mov
cmp
frstor
mov
movsl
sti
and
cmpb
stos
inc
loop
push
les
jnp
push
fwait
fcom
sub
notl
ss
popa
jo
aaa
mov
and
mov
dec
jmp
pop
test
xchg
pusha
xlat
sub
int
cmp
inc
mov
cltd
mov
push
rcrb
sbb
adc
inc
mov
js
xchg
adc
leave
or
test
add
test
and
jb
sub
mov
icebp
ds
dec
jns
outsl
mov
rcrb
mov
lds
pusha
icebp
sub
mov
lcall
jecxz
ds
sbbl
push
pop
push
out
sub
jle
mov
mov
negb
mov
shlb
cli
cmp
mov
daa
dec
aam
pop
add
and
fs
lret
or
push
jb
stos
xchg
adc
dec
push
jle
bound
and
xchg
adc
xor
cmp
and
xlat
mov
xor
jp
xor
mov
shll
insb
sbb
movsl
sub
in
xchg
aas
mov
push
jg
sub
adc
jno
add
jo
push
test
fisttps
mov
test
mov
shlb
xor
fdivrs
sarl
push
pop
sbbb
sbbb
push
ss
rcrl
lock
sub
mov
shlb
cmp
mov
ds
push
xchg
mov
addr16
jnp
int
mov
imul
mov
dec
fidivrl
pop
pop
dec
aaa
data16
fdivp
fwait
pop
jns
inc
and
fisubrl
cmp
pop
xor
dec
imulb
in
cwtl
mov
or
addl
jne
xor
aas
fldcw
sub
inc
rorb
imul
ljmp
repnz
pop
mov
fwait
imul
push
aad
outsl
add
mov
aad
mov
lds
push
rcrl
imul
pop
popl
loope
push
test
daa
dec
sbb
je
les
popa
sbbl
jl
mov
ss
jo
shl
push
mov
jb
inc
cli
loop
rorb
cmpsl
insl
inc
ret
mov
inc
clc
les
test
lret
add
sahf
cwtl
mov
push
es
xchg
mov
jmp
jg
movsb
and
cmp
sub
or
cmc
mov
int3
fmuls
jbe
sub
inc
dec
imul
pop
jg
sbb
push
je
popa
cmpsb
adc
loope
lret
pop
pusha
sub
dec
popa
outsb
xchg
push
cmp
idivl
jp
out
xor
inc
sahf
pop
enter
ljmp
push
or
add
mov
fwait
cmpsl
jg
fists
movsl
ss
fdivrs
cmc
push
mov
mov
scas
push
sub
call
in
pop
inc
push
adc
loope
dec
out
sbb
sarb
iret
jb
push
push
and
lahf
rclb
test
cmpsb
cld
fisubs
jg
inc
mov
add
repnz
pop
jns
pop
add
repnz
xor
pop
sub
ljmp
enter
push
adc
push
repnz
add
iret
out
repnz
sub
inc
scas
push
or
or
sub
fsubrs
ljmp
cmpsl
and
out
mov
cmpsb
add
in
addl
les
push
and
adc
cmp
xchg
daa
push
in
jno
fwait
sub
mov
inc
mov
xor
xchg
ljmp
outsb
push
sbb
ret
mov
in
sub
lea
dec
dec
mov
scas
stos
mov
cmp
std
in
imul
in
call
inc
pop
movsl
aam
adc
cmp
xor
in
insl
mov
mov
pop
mov
in
rolb
xchg
mov
or
lods
insb
or
mov
cmpsl
mov
ret
cmp
shl
jbe
and
cld
in
test
test
push
stos
mov
push
pop
leave
mov
bswap
enter
pop
dec
pop
idivl
mov
inc
cmpsb
lret
into
jmp
mov
xlat
mov
mov
mov
dec
sub
adc
popf
mov
sub
and
es
jge
popa
leave
scas
and
mov
loop,pt
inc
xchg
mov
loopne
sbb
int
sub
pop
xchg
inc
pop
dec
imul
mov
mov
mov
ljmp
xor
sbb
negb
shll
push
sbb
adc
sbbl
shr
mov
mov
insb
sub
aad
xchg
ret
dec
cmp
xchg
data16
lret
pop
sbb
ret
popa
add
mov
nop
fstpt
jnp
cmp
xor
mov
out
add
mov
xchg
xchg
repz
sahf
shll
add
lds
mov
fistl
mov
cs
jecxz
cmc
sub
xlat
mov
sbbl
lret
xor
sbb
xlat
in
xor
mov
push
jge
push
pusha
inc
pop
cmpsb
test
movsb
xchg
mov
jmp
sbb
addb
stos
js
xor
push
xchg
add
mov
insl
les
popa
or
movsl
inc
xorl
popa
mov
test
add
dec
cmp
aad
mov
dec
je
pusha
aaa
push
enter
data16
mov
ja
pop
sarb
int
pop
xchg
lret
pop
cwtl
dec
imul
imulb
cltd
or
test
mov
mov
ret
cltd
jae
lods
icebp
das
mov
lcall
sbb
and
or
in
add
outsb
call
in
jle
in
gs
pushf
push
imul
jmp
test
cltd
mov
fidivrl
sahf
ss
cwtl
cmpsl
sbbb
cmpb
jge
sbb
ret
jmp
adc
movsl
push
lea
data16
mov
fprem
or
cmp
scas
sub
fisubrs
pushf
addb
out
and
xor
xor
lret
std
stos
push
es
xchg
mov
pop
sarl
sahf
mov
push
mov
sbb
and
pushf
stos
sbb
push
add
mov
and
lods
ss
add
and
xor
add
sbb
jno
sbb
fisubrl
add
xchg
mov
mov
lahf
fnsave
jne
aas
adc
fidivrl
outsb
push
dec
xchg
jns
dec
lea
les
lret
int3
out
push
mov
xchg
iret
mov
test
dec
loop
and
mov
adc
into
pop
pushf
repnz
dec
push
and
ficoml
scas
add
subb
adc
mov
cs
xchg
xor
xchg
ljmp
add
sbb
mov
call
imul
xchg
ffreep
push
scas
loop
xchg
xchg
out
add
arpl
stos
dec
and
mov
mov
xor
xchg
cwtl
jmp
mov
bound
xlat
andb
add
pop
push
push
inc
jge
add
xor
xchg
xchg
cli
filds
sub
dec
leave
and
and
imul
adc
pusha
pop
sbb
push
das
insl
fwait
js
lds
insl
rcll
xchg
mov
push
jle
ficomps
cmc
mov
orl
xor
push
fdivp
mov
sub
mov
jno
das
xchg
mov
cmp
push
mov
dec
lahf
lods
jnp
mov
out
fldt
or
cmp
jge
enter
aaa
popa
mov
out
sub
inc
sbb
lret
fcomps
test
fsubrs
adc
insl
outsl
cmpsl
inc
insb
adc
incl
pop
lret
xchg
mov
mov
ret
out
jecxz
loope
into
cmp
mov
or
mov
sbb
sbb
test
xchg
sub
pop
mov
sub
mov
scas
lods
ret
arpl
and
mov
mov
enter
inc
inc
aam
dec
mov
in
test
ja
mov
scas
stc
inc
inc
daa
adc
mov
add
js
enter
sbb
addb
mov
inc
pusha
push
mov
dec
push
enter
pop
mov
or
jle
loop
mov
fnstcw
insl
push
insl
pop
jle
xchg
push
mov
icebp
jle
out
cli
hlt
imul
add
lret
aam
stos
mov
xchg
mov
or
inc
ja
scas
xor
cmp
int
xchg
es
lods
in
pushf
movsb
je
inc
fcomp
cmpb
jl
and
xchg
rorb
pop
xchg
push
insb
and
sbb
lret
push
pop
sub
inc
mov
sub
xor
rcrb
arpl
int3
cmp
int
negb
enter
pop
daa
xchg
jl
sbb
jbe
pop
adc
sub
shrl
xchg
arpl
push
xchg
pop
sbb
es
mov
sbb
cmpsl
adc
or
push
and
call
mov
mov
int3
cmp
loop
fs
fisubrl
movsl
cltd
in
pop
push
jecxz
stc
xor
sbbb
sti
out
pop
rorl
mov
rcrb
push
inc
push
and
mov
mov
loop
xor
pop
lret
or
jae
pop
pushf
cli
mov
bound
aad
movsl
mov
mov
xlat
ret
add
mov
dec
icebp
or
add
mov
aas
insl
bound
pop
xor
call
xor
pop
sarl
dec
cmp
add
inc
bound
mov
les
jb
add
jo
push
dec
mov
dec
stc
lret
pop
and
sub
nop
fwait
pushf
loopne
jecxz
cmp
jl
mov
sub
daa
xchg
ds
xor
cltd
shl
fsubrs
incb
adc
aam
lea
fisttpll
cld
adc
mov
fwait
mov
clc
sub
push
aad
pop
mov
mov
push
lcall
add
fsts
loope
push
call
and
mov
or
xchg
pop
inc
es
mov
xchg
xchg
data16
cmpsb
les
jmp
and
and
movsl
data16
cmc
stos
bound
jo
mov
addr16
ds
lret
xchg
test
pusha
lahf
cld
cmp
cli
or
imul
rorl
rcr
scas
incb
outsl
sub
jb
in
jb,pn
decb
push
dec
imul
mov
movsl
clc
stos
dec
insb
outsb
cltd
enter
xor
fwait
dec
or
mov
adc
in
and
repnz
adc
push
stos
les
sti
pusha
jo
or
xor
aam
adc
pop
fisttpl
adc
xchg
movsb
or
adc
andl
test
jg
dec
addr16
lret
pop
inc
sbb
mov
mov
push
mov
movsl
inc
cmpsl
mov
pushf
jmp
ret
out
push
aad
arpl
push
pop
jmp
jo
sbb
jnp
insl
push
int
ficompl
jmp
inc
pop
sbb
adc
pop
dec
sub
lock
sahf
push
push
jp
movsb
sub
or
add
outsl
fsubrl
add
nop
sub
in
das
xorl
add
rolb
jg
sbb
std
scas
or
dec
or
adc
and
sub
jg
ljmp
test
adcb
push
cs
lock
pop
inc
xor
sbb
cwtl
cmp
outsl
mov
sarl
inc
mov
cmp
dec
sub
call
sub
outsl
or
out
mov
ljmp
and
adc
pop
int
push
and
aas
cmp
jp
jb
jne
ja
ficoml
xchg
pusha
adc
fadd
jle
addb
pop
addr16
jo
dec
fbstp
decl
das
lods
testl
jo
fimuls
jp
lahf
sub
js
mov
shll
mov
dec
fistpll
ficoms
insb
push
push
lcall
lock
fists
jmp
cmc
fwait
cmpsl
jb
cmp
sahf
mov
mov
inc
cmc
lahf
fld
scas
shrl
mov
xorb
pop
xor
fdivrs
jge
pop
pop
int3
inc
loop
movsb
xchg
cmp
mov
leave
xor
cmpsl
and
in
loope
test
and
dec
sub
incb
out
iret
stos
stc
cmpsb
jg
int3
mov
mov
push
and
mov
fmull
inc
fcoml
lods
pop
xchg
pushf
sub
into
insl
mov
repz
adc
imul
sub
rcrl
sub
inc
add
mov
loop
fs
out
lcall
hlt
inc
and
xchg
inc
test
xor
cmp
sub
xchg
scas
mov
jns
jb
adc
mov
test
repz
mov
dec
out
xchg
xlat
cltd
ret
sub
sub
mov
add
ftst
mov
mov
push
gs
stc
cmp
insl
fcomp
scas
pop
mov
lret
mov
fisttps
mov
push
movsl
jmp
mulb
out
inc
push
movsb
mov
mov
lods
and
nop
insl
fwait
inc
dec
inc
shrb
shrb
xchg
iret
xchg
dec
lret
mov
jns
cmpsb
dec
in
insl
push
shrb
cmp
cmp
jns
fwait
mov
andl
mov
cld
adcl
pop
dec
push
icebp
or
mov
sbbl
xor
dec
jmp
mov
icebp
pop
mov
or
stos
sub
dec
add
pop
inc
xlat
orl
out
stos
cmp
rcrb
in
xchg
adc
imul
or
inc
jecxz
xchg
xor
es
mov
mov
std
ja
das
inc
push
test
pop
mov
xlat
pop
gs
cmp
shl
jge
sti
lahf
jne
in
insl
inc
xchg
push
imul
mov
mov
adc
pop
inc
into
jb
gs
dec
jb
fs
cld
dec
shl
jae
shll
pop
adc
jbe
sbb
data16
stos
nop
shll
xor
adc
test
xchg
pop
decl
cmp
cmpsl
outsl
inc
inc
shrb
push
loop
pop
push
out
or
dec
mov
adcb
sub
mov
jbe
dec
sbb
lods
cmp
pop
fwait
xchg
jl
daa
sub
jae
addr16
push
push
and
arpl
rcl
lea
mov
shl
add
add
cli
add
addr16
xchg
xchg
inc
ss
adc
jb
mov
pop
shrl
les
xor
pop
pop
mov
inc
xchg
repz
mov
and
or
sub
daa
mov
notb
clc
push
testb
ds
dec
js
xchg
mov
dec
ret
mov
mov
mov
jl
mov
or
mov
cmp
aad
dec
mov
lcall
arpl
pop
hlt
pop
scas
sub
inc
lret
call
stc
lock
imul
push
add
hlt
or
fadd
mov
adc
and
loop
stos
sbbl
jne
mov
pop
dec
sahf
pusha
mov
sarl
mov
in
aam
sbb
rep
mov
pop
push
mov
adc
mov
mov
aaa
and
add
pop
ja
xor
lahf
xchg
xchg
dec
xchg
fdivl
dec
inc
xor
ja
or
adc
shl
sti
xor
sub
fucomp
push
xchg
idivl
mov
lock
test
fcoml
mov
fistl
stos
js
sbb
dec
mov
or
iret
cmp
imul
xchg
out
fwait
xchg
push
sar
push
mov
push
pop
test
movsb
push
cmp
es
inc
add
cmc
push
mov
je
sbb
out
mov
mov
push
push
addr16
sbb
fwait
stos
loopne
mov
shlb
pop
loopne
mov
or
out
sub
inc
data16
pop
xchg
or
outsl
in
cmp
or
cmc
clc
mov
imul
push
movsb
out
and
sbb
incb
fildll
add
out
call
dec
pop
sbb
adc
xor
sbb
cld
lds
cmp
push
lock
xchg
mov
lods
xor
gs
lods
add
adc
add
ret
dec
jne
dec
frstor
out
xchg
or
pop
sbb
xor
inc
mov
aaa
div
push
dec
ret
sbb
sub
pop
cltd
push
sarl
cmc
push
pushf
or
sub
shrl
jmp
outsl
xor
jnp
and
int3
cmc
push
in
daa
hlt
in
cwtl
hlt
mov
gs
xchg
std
pop
cmp
jo
jecxz
dec
or
fmul
jge
rclb
fadds
rclb
inc
mov
adcb
mov
inc
xchg
cmp
dec
mov
jge
xlat
jmp
xchg
pusha
cmp
adc
fisttpl
in
out
in
orb
push
mov
xchg
fistpl
jae
lret
and
and
adc
add
xor
mov
filds
movsb
mov
cwtl
inc
int3
repz
fstps
mov
lea
fucomp
xor
iret
mov
call
or
mov
mov
push
jge
mov
inc
cltd
aam
mov
sub
das
lock
sub
repz
or
jl
inc
and
cmpsl
ja
cmp
mov
jno
jl
push
add
rcll
sahf
dec
inc
or
inc
xchg
mov
mov
iret
adc
daa
std
jl
push
inc
lods
aaa
ds
mull
and
shll
loope
mov
mov
push
jno
push
push
cmc
in
inc
jecxz
or
jle
or
pop
jl
repz
pop
ret
ljmp
mov
outsb
xor
mov
test
mov
jmp
call
je
sub
cld
xor
mov
pop
jecxz
sbb
cli
adc
jns
dec
inc
ret
mov
pop
xchg
addr16
xchg
ret
inc
out
pop
adc
mov
sub
addl
jno
mov
lds
fnsave
lahf
or
adc
movl
out
enter
shrl
inc
inc
cltd
dec
cwtl
sub
pop
and
xor
xor
ja
xchg
dec
mov
outsl
cmp
ss
inc
pop
stos
xlat
ror
pusha
mov
add
bound
shlb
push
call
repz
cmp
mov
xor
es
ljmp
or
xor
ljmp
jbe
mov
lock
push
cmp
insb
sub
imul
test
xchg
or
push
push
call
mov
mov
jmp
icebp
pop
cmpb
mov
rorb
add
pop
fwait
mov
imul
xchg
clc
adc
pop
sahf
movsl
cltd
cmp
jne
pop
jne
nop
mov
mov
push
pop
inc
das
sti
in
insb
stc
cmp
push
sub
stos
cmc
push
jo
dec
push
cmp
fistl
scas
das
fsubrl
scas
mov
fs
push
or
xchg
inc
or
fcoms
mov
push
movsb
push
push
and
ljmp
inc
clc
sti
out
rcll
push
mov
jecxz
jne
push
mov
loope
pop
dec
shll
sbb
data16
cmp
sub
sarl
sbbl
jns
sub
adc
and
push
fnstcw
inc
xchg
cmp
push
pop
fs
sub
jnp
add
cwtl
and
jbe
xor
fdivr
mov
movsl
lret
xchg
push
cmp
call
cltd
xlat
sbb
imul
sbb
mov
or
scas
xor
loopne
jecxz
mov
fdivrl
clc
int
lret
mov
sub
mov
in
scas
mov
movl
cmpsl
pushf
adc
sbb
or
push
dec
push
add
xchg
jno
ss
dec
adc
cmp
call
int
cli
std
mov
or
push
and
bound
sbb
lods
test
mov
nop
int
sub
or
pop
divb
leave
out
lods
mov
xlat
cmp
aas
lret
outsb
out
les
pop
loopne
jge
call
pop
mov
mov
call
outsb
sbb
inc
xor
ss
mov
mov
pop
mov
push
repnz
lods
jnp
dec
dec
jecxz
adcb
xor
js
movsl
mulb
mov
xor
pop
cs
xchg
cld
adc
xchg
adc
adc
lret
out
ss
mov
aad
mov
mov
cmp
cmp
roll
pop
pop
or
push
test
lcall
jns
je
pop
cltd
mov
adc
cwtd
test
pop
jns
add
or
sub
aaa
shrl
pop
add
fcmovnb
out
sahf
xchg
cmp
mov
fnstenv
enter
cs
add
jns
fld1
testl
xchg
out
xchg
jb
daa
lcall
call
xchg
push
jbe
subl
pushf
or
sub
sbb
add
daa
into
imul
sbb
test
lods
test
outsl
adc
test
sahf
sbb
jl
add
lcall
leave
mov
ror
test
push
nop
mov
rep
cmpsl
sub
pop
rol
lds
ss
xchg
call
imul
push
xchg
jmp
ret
mov
jg
lods
cli
jno
push
out
dec
sbb
add
or
loop
out
adc
mov
movsb
sub
jmp
push
stos
xor
xchg
cmp
pop
cs
in
or
mov
adc
pop
rorl
cmpsb
sbb
hlt
fldl
adc
popf
fsubr
jge
dec
int
clc
xchg
xchg
lret
dec
loop
xchg
ja
daa
orb
jb
or
sarl
dec
test
ljmp
enter
rorl
nop
add
lea
shll
in
sub
pop
cmp
arpl
adc
nopl
cmpsl
fiadds
lret
adc
sbb
imul
scas
inc
xlat
dec
fstpl
int3
xchg
fbld
jo
pop
imul
mov
xchg
jb
jb
pop
pop
fldenv
adc
ret
in
mov
and
les
sbb
or
shll
xchg
add
and
pushf
movsl
add
sarl
pushf
sbb
mov
std
mov
mov
pop
push
aaa
pop
in
in
xor
add
sub
outsl
sub
loop
add
sub
imul
dec
jmp
scas
sub
js
fadds
mov
xorb
mov
out
es
es
outsl
outsb
adc
pusha
hlt
lcall
cmpsl
mov
inc
dec
pusha
cmp
rcll
or
cmpsb
mov
pop
stos
jecxz
sbb
cli
imul
jb
or
xchg
xchg
movsb
shl
xchg
ret
sub
mov
in
adc
fmuls
inc
lret
push
sub
fwait
adc
xchg
int3
cmpsb
push
scas
mov
adc
sub
mov
inc
add
out
ret
jno
inc
int
or
movsb
xchg
pop
out
inc
loope
leave
repnz
loopne
test
fxsave
sub
stos
bound
movsb
mov
in
test
popf
ret
push
cmp
enter
test
inc
int3
sbb
mov
xchg
push
loop
mov
shrb
adc
adc
and
adc
xor
mov
push
cmc
mov
inc
cmpsl
push
gs
cltd
xor
xor
jg
in
pop
stos
cmp
out
aas
movsl
sbb
jae
dec
cmc
call
sbb
les
jecxz
add
aad
movsl
aad
xor
in
cltd
sub
repz
cmp
sub
test
mov
xchg
in
sbb
loopne
test
out
xor
pop
sub
xorb
out
xorl
cmp
cs
xor
imul
mov
jge
fs
add
ljmp
int
scas
shll
cmp
lock
add
sub
and
cmp
adc
ret
ret
js
jns
loope
outsl
push
xchg
imulb
das
sahf
cs
xchg
or
roll
cmc
ret
mov
popf
sbbl
aam
dec
hlt
clc
lcall
sbb
pop
hlt
jae
scas
nop
sbb
pop
test
sbb
addb
jae
or
fildl
jns
sbb
sub
mov
xor
out
adc
sub
rorb
icebp
out
call
fnstsw
pushf
in
imul
aad
out
mov
or
hlt
and
or
and
push
shl
xor
mov
push
xchg
and
repz
fnsave
pop
pop
push
lahf
test
mov
lcall
lock
inc
mov
ja
or
ja
enter
push
and
sahf
add
jne
out
mov
sub
push
mov
iret
mov
adc
stos
aas
cmp
test
xor
jecxz
jbe
call
imul
pop
in
push
sbb
sub
imul
jbe
inc
mov
pop
push
loopne
add
icebp
ljmp
shrb
loope
push
mov
movsl
clc
pop
pushf
lea
popa
mov
cltd
push
outsl
test
iret
mov
subb
addr16
lret
das
add
jmp
test
add
movsl
cmc
add
dec
add
fdivr
sarl
sbb
inc
sti
sub
mov
in
xchg
data16
inc
int
pop
sbb
dec
jno
or
push
xchg
add
arpl
rcpps
push
inc
jb
adc
std
pop
gs
mov
pusha
and
inc
stc
push
inc
cwtl
adc
jns
jns
ja
sahf
es
mov
jmp
popa
jo
cli
aam
or
out
ja
and
loop
orb
lea
arpl
dec
push
jl
movsb
pop
lods
and
and
xchg
jo
jne
adc
xchg
mov
pop
in
into
out
mov
sub
movsl
sarl
test
mov
jge
dec
add
stc
les
mov
fstpl
mov
dec
hlt
jp
dec
ds
pop
jle
int3
lock
sub
testb
dec
bound
test
pusha
clc
jg
sbb
pop
lock
cmpl
roll
lahf
incb
sti
push
jb
popa
jecxz
xchg
pop
cmpsb
pushf
icebp
dec
jnp
popa
xor
fcmovbe
sbbl
mov
mov
or
std
scas
xchg
push
mov
lods
fisttpll
insb
scas
xchg
inc
stos
daa
mov
lods
ret
test
sub
xchg
dec
lods
add
lahf
cli
and
aas
cmpsb
ret
ss
xor
in
insb
mov
push
insb
mov
data16
mov
adc
adc
insl
mov
rcll
mov
cli
cmp
lods
mov
ret
jge
xchg
mov
ja
cli
sbb
xor
cmp
jbe
xchg
scas
cmp
repz
mov
push
std
in
pop
shrb
out
cmc
pop
out
mov
xchg
int
mov
insl
outsl
outsb
rorl
jo
orb
adc
mov
es
loop
adc
ljmp
cmpsl
outsl
dec
jl
sub
jp
dec
pop
jnp
icebp
dec
inc
daa
fs
int3
enter
add
and
cmp
mov
pop
or
fistl
push
sub
mov
xchg
ds
test
and
lock
test
jns
xor
test
sub
mov
mov
out
negl
sbb
ljmp
fs
add
jle
dec
sub
push
addr16
or
mov
mov
jecxz
xchg
sti
pop
mov
ljmp
mov
adc
xchg
std
fimull
pop
movsl
sbb
mov
add
cmp
or
mov
imul
jmp
mov
and
aad
push
andb
dec
cmpsl
mov
inc
mov
fs
xchg
imul
lods
imul
ja
aaa
cltd
jge
je
loope
aam
arpl
fbstp
sub
inc
and
psrad
clc
aas
push
inc
add
ljmp
pop
or
ret
movsb
mov
pop
outsb
xchg
xorl
scas
cmpsl
outsl
dec
push
scas
fimuls
fstpl
into
dec
pop
jp
jmp
jnp
aas
ds
into
popf
cltd
aas
jae
mov
fisttps
aam
mov
hlt
out
adcb
cmc
adc
int3
jo
jo
adc
in
mov
sub
adc
cmpsb
add
mov
adc
adc
aam
cmp
daa
cltd
test
xlat
push
enter
mov
xor
mov
loop
addr16
adc
sbb
xor
out
fistps
ljmp
fwait
int3
mov
cmp
sbb
scas
iret
sub
xor
cmp
push
aad
repz
ljmp
imulb
outsb
inc
pop
adc
fs
xlat
xchg
cli
dec
and
sub
test
mov
sub
mov
or
jp
push
or
mov
pushf
inc
sahf
xchg
lods
call
in
sub
rorb
adcb
in
fucomip
xchg
pop
cs
xchg
popf
loope
sbb
sarl
pop
jge
fsubl
jns
cs
xor
sub
and
int3
and
outsl
sub
movsl
insl
in
push
popl
fwait
int3
aas
lea
lods
xlat
ljmp
pop
or
cmpsb
dec
add
loopne
scas
mov
clc
cmp
jecxz
sub
mov
daa
ja
andl
faddl
mov
loopne
or
add
pusha
jecxz
inc
fistps
mov
scas
mov
adc
nop
sbb
aas
cmp
sub
ror
mov
inc
sbb
cmp
mov
mov
mov
push
mov
rcll
ret
push
movsl
mov
test
pushf
in
push
mov
sub
pop
sbb
mov
dec
cs
stc
xor
jb
push
sub
or
cmpsl
lock
push
stc
out
cmpb
push
or
pop
mov
jge
out
sub
mov
test
and
push
clc
pop
popa
iret
out
rcrb
mov
add
mov
mov
sarl
dec
pop
outsl
cmp
ficompl
sbb
icebp
dec
sbb
xor
sbbb
sbb
mov
sub
clc
mov
out
lret
in
test
and
xor
push
ja
xchg
ret
mov
xor
pop
je
test
cmc
loope
sub
mov
push
fwait
jge
inc
mov
stc
loopne
xchg
ss
push
pop
pushf
xor
jg
movswl
jmp
xlat
insb
pop
sbb
xchg
rcrb
adc
push
testb
xchg
sub
xor
loope
sub
and
mov
cmp
push
inc
lret
ror
mov
adc
mov
fwait
jle
es
cmp
in
sti
jle
out
scas
push
sbb
xchg
cli
inc
out
fs
jg
mov
leave
loope
std
mov
add
sbbb
lods
or
stos
and
mov
add
mov
ds
sbb
mov
sbb
pop
aaa
and
mov
bound
aam
dec
fistpl
inc
dec
aad
cmc
lret
outsb
cmp
andb
int3
cmpsb
mov
or
idivb
pop
enter
jno
xor
and
or
ret
jl
fcoms
jb
mov
imul
xlat
ficomps
dec
ljmp
cmp
cld
lahf
adc
sarl
adc
test
pop
inc
test
adc
cmp
addb
xor
loopne
lods
test
pop
das
rorb
sti
jg
je
pop
fdivr
nop
popa
dec
inc
dec
xor
push
mov
jno
aam
jbe
shrb
scas
jle
negl
repnz
cmp
mov
aas
stc
xlat
rcl
mov
pop
inc
xchg
movsl
inc
sti
inc
push
pop
mov
stc
mov
insl
pop
cld
jecxz
add
dec
xchg
add
lret
push
repz
cmp
mov
leave
adc
mov
je
aas
mov
mov
inc
inc
add
lods
cmp
and
mov
sarl
in
inc
mov
mov
test
cmp
gs
inc
mov
insb
xor
add
push
push
test
fcoms
or
sub
icebp
jbe
sbb
adc
xor
xchg
mov
inc
mov
dec
fdivrs
roll
inc
mov
roll
jl
dec
inc
jo
fwait
dec
sub
or
adc
popf
pop
sbb
insl
and
lcall
dec
and
xchg
pop
sbb
repnz
insb
es
sbb
cmpl
add
loop
mov
idiv
faddl
int
or
cmp
ljmp
jmp
dec
push
imul
xor
adc
mov
inc
pop
push
insb
mov
insb
sub
les
stos
dec
jmp
rcl
sbb
dec
insl
mov
pop
in
in
loop
in
int3
pop
xor
div
mov
push
stos
adc
xchg
jmp
filds
sbb
push
add
test
stc
fiaddl
out
adc
push
sbb
les
sbb
cltd
test
pop
lahf
lahf
orb
mov
jg
loope
sbb
gs
out
scas
cmpsb
ror
aam
mov
inc
mov
movsl
fmulp
push
bound
scas
fstl
sbb
mov
adc
loopne
xor
mov
and
cwtl
lods
pop
pop
sbb
jge
add
mov
mov
push
add
rcrb
xchg
fistps
xorb
repz
gs
pop
mov
loopne
iret
movsl
js
lods
js
rclb
popf
push
stos
int3
push
or
leave
xchg
push
in
sbb
test
mov
fisubrl
lods
inc
pop
std
lods
sub
push
jge
jno
loope
lcall
nop
adc
mov
insl
jno
dec
mov
aas
loop
mov
pop
sahf
and
shrb
sub
std
adc
pop
add
mov
leave
mov
pop
adc
mov
es
xlat
movl
jmp
dec
jne
sub
hlt
test
sub
lods
repnz
jecxz
sub
xchg
and
xchg
sbb
out
xchg
ljmp
ret
mov
cltd
inc
mov
testl
mov
mov
pop
dec
iret
lahf
mov
xchg
clc
cmp
out
dec
xchg
sbb
sbb
test
add
fsubrl
jl
mov
int
or
pop
dec
jbe
push
fcoms
push
xchg
fiaddl
and
rorl
xchg
rorl
aas
xchg
mov
sub
scas
adc
test
cltd
ret
dec
mov
js
sahf
daa
imul
movb
push
cmp
sub
add
stos
add
xchg
fstpt
pusha
fidivrl
pop
sub
stos
cmp
push
sbb
daa
in
pusha
js
and
pusha
jns
adc
shl
jns
aas
pop
inc
stos
jns
into
add
inc
cmpl
cmp
aaa
loop
loopne
fstl
inc
adc
pop
iret
repz
mov
dec
movsl
arpl
mov
xchg
cli
sub
es
dec
sbb
xchg
xchg
adc
sbb
mov
stos
leave
gs
cmp
in
dec
insl
mov
dec
inc
push
out
ret
sub
mov
cmp
or
add
jo
bound
xchg
movsb
ljmp
add
scas
les
es
je
add
mov
aam
jo
xchg
mov
scas
push
push
loop
mov
xor
pop
mov
jbe
mov
mov
rorl
loop
push
xor
push
mov
repz
xchg
stos
adc
jo
insl
jae
stos
push
popa
pusha
fdivrs
mov
mov
and
cld
add
into
sub
shll
and
stc
lret
push
lahf
das
add
jo
subl
popa
or
cmpl
jb
or
mov
in
xchg
or
or
les
mov
pusha
ss
test
mov
pop
mov
dec
cld
gs
popf
in
pop
in
ds
repnz
int
out
imul
pop
adc
dec
ficoml
fs
and
pop
rcrb
rorb
fs
add
movsb
mov
jge
adc
out
xor
add
mov
shll
xorl
xor
pusha
xor
mov
loop
sbb
or
int
fmull
ljmp
mov
mov
jns,pt
lcall
lret
mov
cmpsb
mov
jae
sbb
dec
in
ja
xor
imul
lock
std
mov
sub
inc
jo
adc
jo
repnz
int
lds
scas
jbe
pop
gs
lcall
mov
test
sub
stc
insl
ds
mov
pop
ret
dec
icebp
xor
fs
repz
leave
mov
mov
add
xor
and
pop
sar
pop
cmp
push
xchg
sbb
dec
sbb
sti
jnp
mov
js
pop
push
aaa
lcall
ljmp
sbb
jbe
gs
xor
adc
push
das
mov
lds
push
inc
jnp
fcomps
xlat
sbb
mov
xchg
mov
xor
jbe
mov
std
xchg
cmp
ret
data16
or
pop
lock
in
in
push
dec
in
mov
outsb
nop
mov
cmpsb
sbb
lret
jmp
loop
lods
fistl
add
aam
in
cmp
adc
adc
aaa
sbb
fstl
rcr
sbb
pushf
fnstsw
shrl
jle
xor
xor
setb
dec
sbb
and
movsl
mov
pop
and
shll
loopne
cli
xor
rorb
out
test
das
xor
dec
popl
pop
jbe
loop
mov
adc
and
dec
mov
inc
out
xchg
push
lret
jbe
mov
add
fs
dec
mov
push
hlt
orl
dec
les
cli
rolb
add
repz
adcl
push
popf
jp
adcl
out
push
pop
mov
mov
mov
adc
mov
loope
sub
out
movsb
insw
stc
and
out
and
add
cli
adc
xchg
loopne
jno
cmpl
sub
or
mov
aaa
jb
repz
out
mov
jl
hlt
adc
inc
and
leave
and
push
mov
inc
repnz
and
inc
or
mov
movsb
cld
sbb
sub
add
ss
loop
neg
jmp
divb
pop
or
push
sarl
pinsrw
push
mov
xchg
out
mov
sbb
xchg
mov
stos
pop
pop
lret
fmul
aam
mov
fiadds
icebp
sahf
or
fcoml
sahf
pop
pop
fldl
lock
mov
sbb
sahf
scas
jp
cmp
add
into
or
stos
push
mov
add
mov
dec
sub
mov
add
cmp
div
dec
sub
push
xchg
stos
add
xchg
outsb
es
cltd
sbb
push
fs
adc
adc
fcmove
sbbl
addr16
sti
push
fldt
pop
daa
push
fistl
dec
xchg
ds
jae
adc
xchg
sub
push
mov
sbb
cmp
testl
cli
shrl
rol
push
hlt
adc
arpl
or
lret
mov
pop
add
add
mov
push
xor
fwait
pop
pop
xchg
cmpsl
test
push
add
fdivr
popaw
fnstsw
inc
ja
ljmp
scas
andb
inc
rcrb
mov
mov
or
in
mov
cld
add
mov
inc
mov
cli
jo
xchg
xchg
mov
aad
popf
push
imul
dec
mov
push
loope
fadds
and
sahf
sub
push
rcr
and
fmul
fstpt
sub
pop
in
jno
int3
hlt
mov
lods
mov
les
insl
les
xlat
or
mov
xor
or
push
sbb
xlat
jle
enter
fildll
stos
pop
out
xor
test
jp
sbb
jns
movsl
pop
dec
adc
and
sbb
dec
sbb
aas
aaa
mov
pop
xchg
insb
xlat
cmpsb
pop
jnp
jbe
cmp
stc
inc
and
cltd
sbbb
sbb
pop
add
cli
cs
aas
shll
mov
add
pop
pop
loope
jnp
cmp
cltd
push
inc
pop
add
call
xor
xor
jns
cltd
insl
add
cmpsb
add
mov
sub
lcall
jl
int
push
mov
mov
mov
jne
mov
inc
or
pushl
push
adc
into
inc
sahf
in
fst
sub
fucomi
shlb
push
aam
adc
cmp
inc
mov
arpl
mov
lahf
lods
jecxz
je
add
sbb
ss
outsl
shll
mov
incl
push
ret
mov
fsubrl
scas
fdivrs
data16
pop
cwtl
xor
out
cmpsb
mov
mov
add
sbb
adc
dec
xor
aas
testb
shlb
add
adc
movsl
jns
sarl
outsl
jb
outsl
mov
sub
mov
fs
les
jp
clc
in
mov
dec
mov
mov
outsb
mov
mov
or
fisubrl
loop
pushf
adcb
loopne
jnp
cmp
leave
and
rcrl
mov
and
ds
cmpsl
jb
cmp
int3
xchg
daa
loopne
les
inc
cmp
adc
test
jmp
mov
sbb
sub
pop
hlt
cmp
sbb
fs
cli
add
xchg
sbb
repnz
cmp
gs
cmp
and
jmp
and
mov
mov
pop
lcall
nop
inc
push
mov
jmp
popf
ficompl
or
mov
xor
mov
jl
mov
clc
ret
xor
les
stc
clc
popf
inc
mov
mov
fs
mov
pop
sub
es
sbb
xchg
aam
clc
push
or
cwtl
in
jbe
dec
insb
cmpb
stos
mov
jle
rcl
and
adc
sti
aas
in
dec
pop
lea
jge
push
add
xor
fsubrl
data16
xchg
inc
ds
pop
jp
dec
pop
push
mov
pop
push
inc
sub
push
mov
jbe
nop
test
pop
bound
push
sbb
in
push
inc
daa
and
xchg
test
add
sbb
xor
daa
xchg
outsl
jo
dec
in
out
pusha
cltd
inc
fisubrs
rclb
es
inc
cwtl
decl
dec
lods
xchg
sahf
fs
sbb
cli
inc
mov
mov
popa
mov
bound
push
mov
sub
fisttpl
icebp
test
jecxz
jne
aas
mov
idivb
rcrl
lds
repnz
sbb
mov
sbb
mov
pop
in
popa
push
xor
aam
mov
xchg
cmc
mov
push
mov
ss
int3
inc
movsl
mov
rclb
add
leave
sbb
pop
and
xor
movsb
inc
and
lea
cmpsl
pusha
loope
lret
fs
xchg
mov
cmp
jl
and
loop
inc
sbb
fs
mov
dec
leave
movsb
bndldx
xchg
out
ss
shlb
xchg
dec
push
adc
daa
ret
sbb
nop
and
add
outsl
ret
insl
cmpsl
sub
jle
push
sbb
inc
rol
push
cmp
push
dec
fidivl
leave
or
data16
pop
ja
mov
in
push
data16
mov
mov
popa
aaa
es
and
ja
push
jno,pt
and
test
xor
sub
jnp
insb
push
les
fwait
sub
or
mov
push
xchg
gs
notl
add
mov
pusha
xchg
mov
xorb
cmp
lcall
xor
outsl
movsl
mov
and
adc
sbb
mov
leave
loop
add
pop
mov
bnd
cmp
les
insb
les
pop
arpl
and
add
inc
and
gs
xor
jmp
push
add
je
mov
and
shlb
pop
jnp
aam
sbb
bound
jne
aas
jge
imul
xor
pop
lret
push
mov
in
add
xorb
loopne
xor
inc
and
sbb
inc
in
inc
jge
and
fldl
and
popf
mov
aas
rolb
xlat
cltd
pop
test
mov
leave
test
dec
lock
pop
cli
push
or
inc
inc
inc
push
add
inc
cmp
stos
push
push
pop
pop
outsl
pop
cmp
pop
mov
inc
cmp
shrb
jp
das
ss
add
aad
and
xlat
adc
imul
push
inc
and
sub
cmpb
stc
repz
sub
divb
mov
fs
pop
jne
lea
jg
cmc
andl
mov
bound
test
testl
arpl
orl
push
cli
dec
push
dec
jo
jge
lea
lea
clc
loop
add
into
in
sub
cld
mov
xchg
movsb
dec
mov
std
scas
mov
cli
add
cmp
movsb
jmp
lds
sbb
and
call
adc
pop
fisubrl
or
jmp
scas
jle
xchg
fs
jp
jns
hlt
test
jge
sub
push
imul
push
jae
xchg
or
xchg
rcl
test
pop
sbb
or
push
cli
shlb
hlt
mov
cli
mov
fisubrs
mov
pushf
dec
jge
imul
lea
mov
pop
jmp
sbbl
jne
fsubs
dec
push
mov
xor
rol
notl
das
mov
jp
xchg
push
jae
insb
std
ja
inc
mov
adc
dec
daa
pusha
xchg
mov
mov
outsb
gs
test
iret
jmp
push
mov
jb
pop
add
push
or
stos
xor
push
mov
push
dec
jle
iret
int3
rclb
xchg
mov
in
or
cmpsb
adc
jnp
mov
sbb
mov
cltd
pop
mov
and
pop
adc
push
or
add
out
cmpb
sub
jle
sti
rcl
imul
push
push
mov
sbb
push
push
sub
das
insl
push
jl
outsb
inc
rcrb
cli
mov
or
jmp
std
inc
mov
mov
sub
adc
xchg
cmovns
pusha
or
lahf
sbb
sbbb
mov
or
ret
call
mov
sbb
btr
sub
subl
je
rep
xor
mov
jp
aad
push
imul
nop
pop
mov
or
mov
imul
scas
pop
xchg
in
add
mull
and
sti
out
cld
dec
movsb
imul
sub
imul
ret
sbb
sbb
add
inc
jbe
cmpsb
and
add
jg
jp
pop
jecxz
dec
test
popa
sti
inc
add
in
aam
xor
es
loope
imul
rolb
mul
mov
dec
mov
out
sahf
push
jg
addr16
mov
fwait
shll
sub
sbb
xor
out
or
jno
mov
xor
adcb
scas
negl
or
or
es
test
pop
testl
sbb
push
sahf
stc
sub
sahf
xchg
stos
es
sbb
iret
sahf
int3
rcl
int3
repnz
adc
lods
insb
mov
idivb
sbb
repz
adc
insl
adc
or
das
and
or
dec
out
adc
or
xchg
ljmp
out
lods
outsb
ror
mov
cmpsb
icebp
push
outsl
jecxz
test
nop
xchg
popa
or
fstp
pop
insl
xchg
jl
fstl
mov
xchg
or
mov
call
mov
in
flds
popf
jle
dec
test
mov
popw
inc
sti
cmpsl
cwtl
les
pop
scas
mov
jecxz
out
xchg
sti
gs
lret
sub
jno
enter
in
out
scas
pop
aam
jle
ja
pushf
outsl
arpl
cmc
mov
cmp
inc
and
lea
jne
mov
adc
out
pop
mov
dec
xor
iret
cmp
out
bound
cmp
lock
xchg
add
repz
lods
mov
mov
loope
and
and
or
jl
or
inc
and
insb
pop
xchg
mov
pop
clc
lcall
std
stc
mov
lods
sbb
xlat
or
and
popa
push
mov
hlt
sbb
sbb
sbb
mov
sti
xchg
rol
into
xchg
pop
inc
adc
dec
xchg
mov
ja
and
scas
mov
dec
cmp
xlat
push
cmp
shr
daa
enter
push
jge
dec
inc
pop
stos
int3
jecxz
mov
stc
push
inc
lahf
mov
rol
sub
ds
mov
add
std
lds
test
lret
test
inc
out
cmpsb
xchg
or
push
addr16
stc
ret
hlt
out
and
dec
repnz
xchg
xchg
xchg
call
jo
pushf
xchg
jne
push
inc
jnp
mov
inc
pushf
mov
add
sbb
lcall
stc
jno
dec
and
adc
daa
in
sbb
xor
je
mov
adc
inc
xor
sub
lcall
cmp
shl
into
mov
mov
aam
repnz
cmp
mov
pop
cmp
rcll
xor
cmpsl
out
sbb
adc
inc
add
push
xor
nop
fsts
pusha
hlt
outsb
inc
cmp
ljmp
push
in
mov
fs
mov
fmuls
mov
shrb
aas
sbb
imul
mov
push
xchg
lcall
iret
xchg
jo
nop
or
shll
xchg
inc
or
int3
xchg
nop
loope
push
inc
lret
sbb
mov
lcall
ss
xor
into
cwtl
xorb
fimull
pop
cs
cmpsl
add
cmp
loope
jg
cmp
mov
clc
cmp
mov
fstl
into
lahf
testl
test
insl
test
movsb
int3
dec
js
hlt
push
inc
and
mov
ret
fstpl
int3
xchg
sub
cmp
mov
cmp
sbb
mov
mov
int
dec
pop
inc
cmp
scas
rcrb
push
rorl
mov
and
pop
pusha
inc
movsl
negl
outsl
pop
sahf
daa
rorl
hlt
lods
fstpt
pop
dec
aaa
daa
stos
scas
imul
pushf
pop
outsb
mov
popa
mov
pop
enter
cs
xor
jg
mov
xchg
adc
jge
gs
mov
aam
push
fidivs
jle
push
pop
xor
add
mov
mov
inc
sub
test
push
lahf
lock
fstps
xchg
pavgb
les
cmpsl
lret
sbb
add
pop
bound
jle
mov
jp
or
imul
and
hlt
mov
xchg
mov
sub
pop
insl
add
nop
dec
mov
xchg
lock
gs
andl
test
mov
sbb
jnp
sbb
and
cmp
cmp
sahf
inc
movsl
jns
cs
sub
xchg
out
xchg
lret
pop
clc
xor
stc
or
test
mov
push
hlt
and
in
push
loop
loope
and
cmp
test
xor
push
mov
adc
add
jae
ss
cwtl
jmp
inc
sub
daa
inc
mov
push
add
jnp
adc
call
notl
jmp
sbb
aam
mov
insl
imulb
fisubs
and
jae
test
mov
testl
xlat
scas
pop
cmp
dec
loop
popf
cmpsb
stos
xchg
cmp
ret
in
or
cmp
inc
dec
enter
pop
lock
test
or
and
cmp
or
cltd
imul
cmp
loop
add
mov
mov
jmp
fwait
adc
add
pop
pop
xchg
inc
mov
mov
ror
pop
aad
xchg
dec
into
enter
sbb
ljmp
pushl
bound
adc
sbb
rcr
leave
lret
mov
xor
call
pop
cmp
mov
incl
pop
dec
rdpmc
and
and
mov
lea
sub
jb
int3
test
movsb
dec
in
test
je
stc
and
push
xchg
add
imul
data16
mov
andb
adc
inc
das
hlt
cmp
mov
adc
pop
pop
test
aam
dec
popf
jnp
lods
mov
adc
or
adc
in
cmpl
pop
fcoms
push
scas
lods
divl
or
out
dec
xor
repz
fcomps
pop
movsb
sbb
add
inc
push
mov
pop
test
lahf
jecxz
rolb
sbb
filds
mov
ret
pop
push
mov
xor
movsl
inc
and
fstps
pop
fldcw
int3
mov
stos
sub
iret
xchg
jle
movsb
int
jle
mov
xor
add
jle
xchg
addl
adc
aam
sub
sbb
fists
addr16
pop
movsl
cmpsl
cmp
mov
addb
imul
divb
add
pop
mov
cmpsb
jae
xor
loope
out
incb
mov
dec
lahf
pop
add
stos
pop
stos
push
xchg
and
out
std
mov
mov
or
mov
out
subl
inc
insl
sub
jb
negl
into
and
push
sub
inc
loopne
or
cltd
xchg
insl
fldcw
pop
and
lock
cmc
imul
fstps
imul
or
or
out
dec
jo
shrb
jae
xor
in
repz
jp
fs
cmp
lahf
aad
sub
fnstenv
push
shrb
loope
fadds
in
stos
ret
shlb
or
ret
repz
mov
adcb
stos
push
and
ds
sub
dec
xchg
fldcw
dec
inc
shrb
sahf
and
mov
cmpsl
cmpsb
ja
mov
push
leave
xchg
aas
mov
jge
into
inc
push
lock
outsb
fcmovnb
shlb
adc
testl
fsts
adc
out
movsl
xchg
cmc
gs
add
outsb
ret
mov
push
shlb
xor
adc
xchg
xchg
jmp
and
in
jmp
fildll
cmpsl
sahf
inc
leave
mov
ja
xor
xorl
and
movsl
aaa
xchg
leave
push
and
daa
or
shll
and
pop
cmp
shlb
pushf
push
insb
mov
daa
into
xor
dec
mov
lahf
adc
push
js
dec
cmp
aam
insb
mov
clc
xchg
cmp
push
insl
outsb
mov
ret
add
dec
shl
adc
xor
fwait
push
xchg
and
or
jge
or
push
xchg
mov
popl
and
xlat
jecxz
rorl
sub
scas
sub
fs
or
test
in
jmp
mov
ja
and
or
incb
dec
clc
dec
inc
xor
cld
sbbl
out
data16
pop
icebp
inc
lret
cmpb
pop
repz
push
xchg
push
mov
add
ret
xor
cld
and
enter
ds
mov
dec
dec
jbe
mov
adc
xor
in
adc
xchg
clc
jnp
clc
test
ljmp
lret
sbb
pop
jo
pop
hlt
cmp
push
sbb
pop
ja
add
pushf
cmp
xlat
mov
xor
out
mov
popf
call
stc
ds
ja
leave
inc
out
ljmp
ss
mov
lret
cmpsb
pushf
jmp
mov
mov
mov
mov
sbb
insl
sub
ret
pop
xchg
mov
data16
xor
pop
mov
imul
xor
in
pop
pop
push
arpl
popa
fcmovne
aad
push
cmpsl
jmp
in
ljmp
inc
lea
mov
mov
push
and
add
lds
jns
imul
cmpb
cmp
dec
aad
loop
push
jl
inc
in
lds
cmp
nop
loopne
or
test
orl
imul
add
pop
into
test
imul
add
cwtl
lret
fdivp
aas
lea
lret
xchg
lret
jmp
mov
or
aaa
les
xchg
imul
lahf
push
mov
sbb
mov
test
orb
into
pop
lods
fsubl
ss
sahf
inc
insb
repz
iret
add
stos
xchg
and
stos
adcb
jns
push
push
mov
insb
pop
add
inc
ljmp
out
mov
mov
rcll
push
sbb
cmp
sbb
adc
test
arpl
std
or
js
sub
fnstenv
mov
adc
out
xchg
mov
xchg
pop
dec
scas
add
xlat
xor
enter
fcmovnb
or
into
pusha
sub
xor
scas
repnz
std
xchg
imul
dec
sbb
xchg
int
js
mov
shll
mov
popa
jne
push
frstor
popf
lahf
sbb
movsl
and
cld
jne
xchg
cli
pop
adc
iret
lds
jbe,pt
or
addr16
pop
stos
adc
test
movsl
pop
lea
pop
cmp
fmul
jmp
test
push
or
pop
mov
out
mov
in
jmp
mov
xchg
cmp
shld
xchg
cmpsl
fnstcw
dec
mov
cmp
pop
or
rclb
sahf
pop
mov
fcompl
lret
iret
mov
mov
xorb
es
inc
mov
dec
movsl
cmp
cmp
lods
outsl
insl
sti
pusha
lds
popf
scas
arpl
test
lea
aad
xlat
in
pop
and
lret
or
in
cmp
jbe
sub
cmc
push
fcomi
dec
xchg
adc
xchg
iret
sub
push
scas
dec
dec
mov
mov
sbb
movsb
lods
std
pop
movsb
aam
sub
fstpt
ss
jp
arpl
cmpsl
lea
cmc
dec
imul
xor
adc
inc
mov
cmpsb
cmpsb
lret
pop
jmp
push
mov
imulb
icebp
inc
add
xchg
mov
xchg
ficompl
arpl
jg
stos
fcmovnu
and
mov
mov
jg
jmp
dec
cvtps2pd
fs
test
jnp
cmp
inc
inc
cltd
dec
jl
cmp
jbe
inc
fiaddl
inc
jmp
and
sbb
xor
push
jge
adc
repnz
and
incb
subb
xor
pop
push
stc
pop
int
cmpsb
gs
and
repnz
add
adcb
dec
xlat
cmp
fistpl
fcoms
fs
dec
xlat
or
mov
push
dec
pop
jae
stos
cmc
scas
dec
es
ja
lahf
aad
sbb
std
int3
or
cli
testl
adc
loopne
dec
dec
daa
in
or
es
imul
pop
xchg
enter
jno
enter
sbb
aad
jbe
mov
inc
in
push
push
jne
jne
mov
hlt
inc
sbb
ja
fildl
xchg
fildl
pop
xor
xchg
xchg
ret
or
mov
inc
aam
pushf
lds
or
in
adc
push
jne
add
icebp
test
push
icebp
in
add
xor
fisubrs
xor
out
jb
cmp
inc
dec
dec
pop
jne
dec
mov
aas
lcall
inc
cmc
add
ret
cmpl
fnstsw
and
dec
jmp
sbb
inc
xchg
xlat
add
cli
scas
mov
outsl
repnz
sti
cmp
mov
in
cwtl
sahf
mov
popf
cmp
push
dec
cltd
pop
fnstsw
ja
jo
push
dec
paddsb
xor
testl
push
fldenv
xchg
leave
pop
pop
mov
sub
mov
pop
or
mov
push
cmc
or
mov
jo
cld
inc
repnz
inc
push
imul
addr16
push
jle
inc
jae
cltd
mov
lcall
and
hlt
cmpsl
lahf
jge
jg
stos
mov
and
cmc
cli
mov
call
mov
push
test
fnsave
outsl
jb
mov
jns
push
add
and
or
loope
cmp
and
cmp
mov
mov
add
adc
xor
xor
cmpsl
lret
push
cld
inc
cmp
xor
imull
out
xor
aam
iret
or
adc
loope
adc
fsubr
xchg
jne
xor
shlb
xchg
mov
bound
mov
dec
adc
sahf
insl
push
cld
pop
jmp
inc
mov
xlat
lds
int
leave
jg
ret
push
mov
xchg
xor
es
in
xchg
lret
xor
ret
hlt
add
cmc
popf
outsb
or
mov
test
movsb
push
mov
xor
sub
mov
mov
mov
dec
out
out
xchg
add
jp
pop
enter
and
pop
out
push
stc
in
dec
pusha
push
daa
xor
xor
insl
sahf
add
inc
fnstsw
xchg
mov
cs
es
add
add
popf
jo
lret
xchg
xor
int
or
mov
imul
dec
in
xlat
mov
lret
mov
cs
into
je
jg
sbb
les
or
icebp
jge
mov
int3
or
cmp
push
dec
xlat
je
mov
push
dec
ret
push
lods
mov
scas
add
jl
or
stos
iret
cmp
cmp
mov
cmp
pushf
mov
xor
aam
push
pushf
test
xlat
int3
repnz
test
sub
or
sbb
aaa
dec
aas
sti
add
aaa
jno
jge
pop
or
sub
jb
cmpsb
js
icebp
jecxz
push
jl
push
inc
out
pop
lret
dec
push
hlt
or
lret
and
mov
je
adc
pushf
into
stc
test
mov
fidivl
cmc
cmp
sub
jns
leave
cmpsl
movsb
pop
pop
leave
inc
aaa
or
repnz
push
nop
cmp
lock
in
sub
adc
push
mov
inc
lock
add
push
mov
cld
out
lret
test
pushf
out
mov
out
test
or
xchg
movswl
in
clc
add
gs
pop
dec
dec
add
sarb
cmp
inc
enter
sbb
inc
les
jle
fidivrl
je
pusha
test
xor
pop
mov
pusha
popf
inc
or
push
incb
pop
cmpsb
lahf
jae
push
subb
adc
cmp
jo
xchg
ljmp
pusha
push
jecxz
pop
push
mov
xor
out
lcall
js
daa
es
aaa
inc
lods
in
cmp
sub
outsb
cmp
iret
adc
jnp
inc
mov
jl
rol
cmp
fsubrs
sbb
jns
popa
mov
pop
cmp
inc
push
fmul
jbe
test
adc
cmp
jge
push
loop
cmp
xor
stos
or
ljmp
mov
sub
in
out
das
xchg
adc
lea
clc
jmp
lret
pop
inc
sub
cmpsb
push
imul
popf
outsb
push
add
fwait
lock
jnp
mov
inc
dec
loope
test
mov
or
push
push
pop
dec
or
les
call
dec
fldcw
mov
jb
and
mov
mov
xchg
fcoml
add
mov
add
sahf
mull
sub
xor
mov
ss
fildl
lcall
push
inc
cmp
adc
adc
sub
cli
cld
scas
loope
enter
repnz
xchg
gs
cltd
imul
inc
jno
adc
pop
adcl
push
pop
sbb
pusha
mov
lods
cmp
add
dec
jle
adc
jno
insl
pop
aaa
fs
mov
repnz
jp
nop
aad
push
mov
stc
mov
pushf
out
adc
mov
jp
arpl
out
xlat
cmp
sbb
jmp
mov
inc
push
insb
xchg
push
sbb
xchg
xor
or
pop
mov
sub
mov
push
inc
aad
call
and
mov
xchg
addr16
add
add
test
cvtps2pi
sub
push
out
add
test
dec
fnstsw
ret
ja
inc
jge
lea
rcrl
or
or
push
push
add
sarl
jnp
fucomi
nop
cld
and
mov
cmpsl
hlt
lcall
cmpsb
neg
jns
fldt
dec
jl
hlt
mov
sbb
lods
fs
scas
pop
loop
movsl
repz
xchg
stos
ret
sub
cmp
fsts
adc
push
sbbl
movsb
add
or
mov
mov
sbbl
push
fwait
icebp
scas
mov
xchg
mov
dec
push
jge
js
popa
sub
ljmp
vmwrite
add
adc
inc
mov
enter
sub
daa
stc
lea
inc
adc
xlat
add
push
outsb
pop
imul
je
nop
dec
ret
out
es
mov
xchg
xchg
das
mov
in
mov
add
stc
addb
jge
rcl
notb
aad
and
mov
jp
jmp
inc
push
outsl
ret
cmp
jge
or
inc
mov
push
mull
mov
xor
popf
push
inc
sahf
jb
mov
jne
adcl
xor
dec
add
inc
dec
sbb
outsl
sub
subl
sahf
inc
shlb
push
jle
lret
push
or
insl
xchg
iret
out
ffree
mov
xchg
adc
xchg
inc
movsl
xorl
mov
push
add
cmc
push
dec
divl
adc
dec
and
fnstcw
lock
lret
popf
popf
imul
std
movsl
ja
jns
jmp
xor
jle
fsub
sub
in
fldt
fmull
iret
out
push
aam
std
je
aaa
aaa
jl
pop
xchg
push
setae
jecxz
inc
push
test
or
in
loopne
adc
mov
push
add
pusha
inc
mov
jo
pop
cmpsl
cmp
mov
jp
popf
adc
ss
cmpsl
loope
lock
and
or
mov
push
out
pop
test
push
leave
fwait
int
test
aaa
mov
inc
lret
sarb
sbb
je
push
stc
or
xor
jo
pop
dec
lods
dec
test
xchg
and
paddusw
lret
mov
fcoms
lret
adc
decb
mov
popa
ret
pusha
sub
imul
jmp
fs
lea
mov
stc
and
ret
lods
cmc
jg
fwait
rorl
dec
sub
fisubrs
jmp
mov
xchg
mov
sub
inc
mov
ret
decb
out
xchg
mov
xchg
loopne
jb
or
imull
stc
out
mov
mov
scas
sub
and
pop
test
mov
and
cmp
ja
test
sarl
and
aas
cmp
jae
lret
xor
xchg
xchg
xor
les
and
lds
cmp
push
scas
sbb
movsb
push
xor
movsb
icebp
add
pop
pop
arpl
dec
ds
adc
mov
adc
mov
mov
scas
lahf
stc
add
out
pop
sbb
rcrl
mov
sbb
mov
pop
insl
jb
test
loopne
sub
lods
pop
repnz
loop
xchg
test
xlat
jge
aaa
roll
cli
pop
xchg
je
testl
sub
pushf
adc
sub
mov
push
aaa
push
or
dec
popa
jmp
clc
arpl
test
mov
and
dec
mov
arpl
dec
xchg
stos
inc
scas
dec
lret
cmp
rcrb
pop
aaa
int3
insl
rcrb
push
push
fs
dec
je
adcb
mov
or
iret
es
jg
das
loop
das
mov
push
cli
or
pop
xchg
and
mov
outsl
fildl
dec
int
ss
or
add
pop
sub
and
mov
inc
jge
jb
loop
jmp
es
jbe
inc
add
jns
nop
xchg
xchg
fs
test
xchg
popf
cmpl
push
insb
repnz
cli
psadbw
mov
ss
cmp
out
jb
pusha
inc
pop
push
add
mov
leave
lods
stos
push
xor
popf
sbb
cmc
xor
and
sub
repnz
in
dec
dec
dec
outsb
icebp
outsl
or
dec
or
push
mov
jns
aaa
mov
cmp
bound
adc
mov
cmp
sbb
sets
inc
lret
xor
cmpsl
nop
psubb
imull
rclb
and
hlt
xorl
mov
lock
fldt
lods
aad
popf
movl
psadbw
push
sub
sub
fisttps
inc
xor
cvttps2pi
in
mov
adc
xor
mov
aaa
int
not
sub
mov
xchg
jmp
out
fists
aam
xchg
out
jmp
cld
mov
gs
out
pop
pop
dec
stos
mov
movsl
mov
and
cli
fsubl
les
dec
xor
pcmpgtd
inc
xor
or
xchg
cmc
pop
push
jecxz
andb
ret
mov
sub
stc
ffreep
xor
fmull
jge
cmp
cmpsl
mov
adc
mov
push
xor
iret
lret
les
pop
cmp
mov
into
xchg
push
add
ret
cld
xlat
push
jo
lret
push
mov
push
cltd
fcompl
cli
adcl
lods
addr16
lcall
and
mov
das
les
adc
lods
mov
daa
mov
and
mov
sbbl
test
leave
sub
jle
hlt
sub
out
aad
adc
frstor
jecxz
xor
mov
loop
je
mov
sti
adc
inc
inc
push
jb
and
stos
movsb
repz
insb
pop
pusha
mov
stos
add
xchg
or
icebp
fcoms
aaa
dec
mov
mov
and
xor
lret
aad
jae
cmp
outsl
rcll
sbb
lret
pavgb
adc
push
dec
repz
mov
lock
dec
repz
xchg
jne
leave
pop
mov
xor
mov
xor
adc
rolb
lahf
data16
dec
call
test
inc
rcrl
sbbb
xchg
shl
jno
adcb
push
push
out
out
arpl
insl
cwtl
and
add
orl
mov
xor
pop
pop
lea
jp
int
push
jne
or
in
mov
dec
or
out
loopne
lret
sti
aad
insl
daa
mov
ret
inc
jns
push
or
adc
aad
adc
data16
lock
inc
loope
jl
sarl
jl
mov
and
sar
aaa
scas
sar
rcll
or
ja
xlat
addr16
lcall
xor
cli
nop
lret
int3
push
jg
testb
push
fisubrl
xor
ret
adc
pop
adc
cmpsl
xchg
mov
mov
mov
push
adc
sahf
adc
pop
mov
and
fstps
ret
sub
arpl
imul
and
adc
mov
scas
xor
repz
pop
jge
stos
mov
cmp
sahf
sbb
jmp
and
push
jb
insb
push
scas
add
push
adc
xchg
in
push
adc
sbb
add
and
iret
shll
cwtl
call
ja
addl
xor
enter
or
jp
jb
sahf
inc
icebp
push
jecxz
lods
andl
and
mov
xlat
mulb
mulb
xor
hlt
cmpsb
imul
mov
int
lcall
ds
jo
sahf
js
cmp
fistpl
mov
into
xor
in
xchg
inc
or
sbb
jle
inc
jl
or
cmp
arpl
mov
inc
sub
cltd
push
and
hlt
push
mov
mov
push
int3
push
mov
sub
mov
das
xchg
cltd
xchg
push
inc
jb
hlt
icebp
jno
add
out
test
clc
xchg
push
ljmp
xchg
bound
gs
psrld
sub
mov
lea
or
sub
mov
jmp
bound
aas
mov
mov
sub
shll
jp
enter
stos
jg
mov
jge
std
or
sub
in
in
and
inc
rolb
push
xchg
mov
dec
add
mov
and
add
in
pop
lahf
test
out
pop
iret
push
stos
cwtl
xor
enter
jno
mov
cmp
orl
cld
adc
xchg
xchg
add
jns
xchg
test
xorb
dec
or
dec
jae
repz
xchg
not
adc
xchg
or
out
mov
dec
repz
mov
sbb
lahf
mov
pop
sbb
sub
xor
movsl
sbb
cwtl
pop
sub
pop
sar
rclb
cltd
inc
imul
outsb
dec
bound
jecxz
xor
or
insl
pop
int
js
pop
and
push
add
xorl
xchg
pop
loopne
inc
sub
mov
push
xor
sbb
in
jb
and
aas
test
das
mov
push
inc
sub
or
rclb
stos
subb
js
xor
mov
push
mov
jl
ds
jns
loope
stos
add
imul
ja
sub
lods
into
push
leave
aaa
mov
push
hlt
jge
jecxz
sub
sbb
mov
inc
xor
sub
xchg
lods
sub
les
mov
inc
pop
jbe
xchg
mov
mov
push
jmp
ds
in
sub
mov
mov
loope
mov
mov
xor
mov
xchg
bound
and
pop
sub
cmpsb
movsl
clc
packuswb
push
mov
in
and
lahf
pop
cwtl
pop
stc
popa
pop
push
lahf
pop
cmp
rcrl
out
fs
inc
jl
or
fmull
lahf
and
bound
icebp
cmp
pop
jbe
or
cmp
jno
fnstenv
fcmovb
ret
sti
mov
push
outsl
movsb
bound
mov
lods
jnp
push
sbb
inc
les
es
cmp
pop
nop
mov
lds
adc
pop
mov
clc
pop
cmc
xor
jp
jne
sahf
push
dec
adc
daa
leave
popf
sub
and
out
add
lret
or
sti
out
aaa
bound
in
ss
push
insl
mov
fyl2x
jnp
dec
dec
jno
pop
subps
add
roll
fcoml
sbb
xchg
addl
adc
cmc
mov
push
loopne
sbb
add
push
push
in
xor
aas
cli
aaa
xor
inc
out
loop
add
or
les
add
inc
mov
add
in
popf
or
outsb
xchg
sub
jle
pop
or
push
dec
jb
jle
insl
xchg
dec
inc
pop
dec
mov
sahf
adc
sti
xor
clc
iret
sub
mov
ja
ja
aam
clc
in
fnstenv
gs
push
bound
jo
cmpsl
mov
xchg
add
mov
cmp
sbb
pusha
cmp
call
out
hlt
lret
lahf
rolb
rolb
jp
xchg
jle
test
mov
in
int
push
arpl
sbb
cmp
jle
push
inc
add
fisubs
jecxz
pop
xchg
mov
subl
push
inc
stos
stos
call
and
fistl
mov
add
out
bound
ret
rolb
imul
cmp
out
popa
push
xor
adc
loope
jg
out
sbb
out
shlb
test
out
xor
imul
pop
rclb
dec
mov
mov
pop
clc
fwait
add
das
movsl
xchg
cltd
jge
and
stos
and
jecxz
jo
sub
outsl
in
into
sti
out
mov
mov
and
adc
js
or
sarb
xchg
das
mov
outsl
shr
adc
sbb
cs
ja
aad
mov
or
xor
negb
in
loope
add
cmp
addr16
fiaddl
or
mov
mov
xor
in
cld
pushf
xlat
in
fs
xor
or
mov
mov
jno
loope
xor
and
cmpsl
cmp
std
ds
ret
enter
inc
int
or
lods
inc
lods
lods
cmp
mov
arpl
in
mov
pop
inc
ss
mov
sub
inc
repz
fdivrl
out
inc
adc
mov
pop
pop
hlt
mov
fwait
mov
adc
cmp
mov
adc
pusha
xor
mov
mov
adc
test
dec
rclb
loope
xorl
sti
push
mul
enter
mov
inc
aad
in
bound
dec
jns
loop
dec
xchg
lret
mov
inc
int
xor
dec
adc
push
xchg
sbb
bound
mov
push
data16
rcl
les
adc
mov
or
testb
icebp
jmp
cmp
in
mov
iret
mov
ja
ljmp
fbstp
jg
mov
daa
out
js
sub
inc
fildll
dec
imul
mov
fnstsw
mov
pop
enter
xor
lahf
adc
cld
pusha
popf
mov
sbb
out
int
loope
xlat
push
repnz
jne
cmpsb
and
aas
es
daa
divl
int
dec
xchg
out
inc
negb
push
inc
mov
mov
fimull
pop
sbb
add
inc
ljmp
inc
lret
xchg
fcmovnbe
cs
dec
js
pop
es
test
adc
mull
add
inc
mov
push
sbb
test
enter
xchg
xchg
pushf
inc
pop
or
xor
xchg
mov
mov
ljmp
in
ficoml
push
xchg
test
mov
lret
fsubr
xor
push
xchg
test
pushf
pop
sub
add
sbb
shl
inc
pop
lahf
sub
and
test
mov
in
rcrl
mov
sbb
ret
pop
lea
or
add
xchg
lret
jle
sub
mov
ja
fldl
mov
and
div
fsubp
divb
ret
mov
iret
fsubr
mov
fisttps
nop
outsl
repz
xchg
pop
or
stos
fldenv
push
rcll
jnp
sub
enter
imul
sti
into
jp
movsl
or
loope
jns
sub
cmpb
pusha
fdivl
mov
sub
or
mov
xor
addr16
inc
push
out
dec
into
pop
cli
push
mov
stos
pop
aad
pop
fidivl
loopne
inc
and
add
nop
mov
out
imul
mov
dec
imul
rol
lods
or
gs
sbb
add
or
lahf
out
jne
aam
push
popa
ljmp
and
call
test
cmpsb
test
sbb
mov
iret
stos
sub
mov
mov
jge
adc
data16
mov
inc
pushl
aaa
adc
nop
out
mov
loopne
lea
scas
xchg
scas
sbb
dec
push
jp
test
fs
add
push
int
dec
das
test
xor
add
fdivs
mov
aad
lahf
pop
pop
cs
es
mov
mov
xchg
insb
xor
subb
xor
mov
push
js
aad
fnstenv
and
pop
jle
mov
xchg
lret
sahf
adc
mov
shrl
nop
mov
std
xchg
mov
fwait
jg
jecxz
mov
pop
push
mov
dec
insl
adc
popf
lret
mov
pop
xor
shlb
xor
cmc
push
fmull
cmp
shlb
push
rorb
js
je
add
fdivr
mov
lret
push
arpl
xchg
outsb
xor
rol
enter
sub
push
mov
pop
mov
sbb
dec
addb
shl
sub
sub
mov
sub
sub
pushf
or
insl
addl
lcall
das
mov
cmp
mov
das
xor
adc
mov
imul
cmpsb
fnstsw
test
inc
call
stos
and
lea
fidivl
dec
inc
adcb
or
xchg
adc
jle
cltd
sti
and
cmpsb
outsb
jae
imul
ret
mov
popa
neg
push
insb
adc
add
inc
mov
mov
cmp
in
mov
shl
mov
cmp
xor
xor
test
sub
stc
sbb
or
mov
mov
movsb
push
xor
push
xchg
sub
stc
or
sbb
cmc
xchg
insb
push
sbb
dec
pop
mov
jns
xchg
dec
mov
fscale
fimull
out
jmp
daa
popf
call
mov
inc
sarl
xchg
shlb
jp
popf
mov
adc
in
mov
sbb
xor
push
pop
pop
cmp
scas
pop
dec
jl
add
mov
insb
shll
push
fdivs
stos
add
jmp
nop
addb
xchg
scas
fstl
mov
adc
cmpsb
inc
rcl
test
xor
and
sbb
xchg
shrb
or
dec
lods
pushf
pop
dec
add
push
aaa
in
or
dec
mov
pop
mov
push
lcall
pop
or
rcrb
or
push
mov
imul
lea
pushf
or
pop
mov
jl
out
and
lock
mov
outsb
jno
rcrl
sbb
xchg
lock
dec
dec
adc
or
pop
ret
pop
dec
in
pop
clc
or
push
cmp
pop
mov
push
cmp
pop
out
jbe
xlat
stc
push
push
imul
jae
adc
and
ja
or
pusha
arpl
std
mov
movsb
mov
fiaddl
add
sub
out
fmuls
pop
arpl
dec
aas
test
mov
xchg
or
adc
jae
pop
xchg
xor
addr16
cmpsb
shlb
mov
mov
jmp
in
movsl
pop
mov
negl
mov
push
movsb
lds
or
idivb
orb
xor
inc
rorl
jno
mov
pop
repnz
dec
adc
js
andl
fs
addr16
imul
lret
fldt
pop
cmp
or
std
rep
sub
lods
je
jno
jnp
stc
dec
mov
mov
inc
out
fwait
sahf
push
scas
js
daa
lret
scas
mov
pop
cmp
push
cmp
sub
in
sarl
inc
inc
in
push
mov
mov
rep
mov
insl
xchg
outsb
sbb
mov
imul
shll
and
mov
ret
xchg
jno
mov
xchg
mov
adcb
shlb
dec
sbb
mov
adc
dec
inc
pop
gs
push
fsts
pop
mov
xchg
or
int
pop
add
dec
adc
sbb
xor
dec
inc
and
push
mov
mov
xlat
movsl
cli
adc
or
clc
popf
sub
add
mov
lea
xchg
stos
pop
stos
movsl
or
aam
shrb
pop
xchg
xor
jl
aaa
jae
adc
je
scas
xchg
out
xchg
sbb
xchg
jg
out
adc
sbb
sbb
pop
inc
out
xor
sbb
rcrl
cs
inc
adc
aas
mov
loop
movsl
and
aaa
adc
aas
add
cltd
cwtl
outsl
cmp
mov
das
and
sub
xor
stos
xor
sbb
std
dec
sub
movsl
rcrb
ficoml
xchg
pop
lcall
pop
clts
mov
in
mov
xor
inc
sub
jle
pop
sub
inc
andl
push
inc
or
imul
popf
arpl
mov
jmp
push
lahf
rcrl
mov
shlb
pushf
xor
xlat
in
mov
jle
test
xchg
rorl
lahf
int
xor
out
rolb
xor
pop
mov
lock
orb
es
mov
xor
xor
repnz
cs
mov
pop
push
push
mov
dec
adc
iret
xchg
mov
pop
sbb
xchg
repnz
and
mov
mov
movsl
stos
jl
cld
dec
mov
mov
add
out
inc
cs
cmp
lcall
call
mov
push
hlt
cwtl
gs
inc
xor
nop
mov
int
lods
xchg
bnd
jge
test
rorb
cmp
mov
imul
lahf
push
pop
mov
ret
stos
dec
in
pop
inc
mov
shlb
std
out
in
es
popf
jecxz
sti
mov
cld
add
fwait
and
mov
int3
and
out
test
jg
lcall
dec
shl
fadds
add
je
sbb
repz
lcall
jno
inc
clc
inc
mov
scas
call
aaa
addl
add
and
mov
es
push
xchg
adc
lock
add
scas
orb
fwait
and
push
xor
stc
jne
sbb
out
pop
test
fisubl
cmp
call
repz
scas
push
and
lret
stos
push
adc
mov
mov
leave
test
pop
or
add
jb
popa
dec
aaa
dec
xchg
xchg
mov
pop
sub
aad
push
add
pop
add
or
jae
inc
in
addb
xor
loope
cltd
sub
cmp
mov
in
mov
push
push
or
and
cli
sub
mov
cmpsb
das
insb
leave
xor
fs
movsb
lea
into
or
neg
and
mov
push
ss
or
cmp
adc
loopne
xlat
cs
movb
es
dec
push
jbe
lahf
dec
cmpsb
loop
and
jnp
test
in
jb
push
fst
mov
and
scas
mov
push
cmc
jnp
test
andl
rcr
or
scas
mov
dec
in
add
insl
fcomp
lret
dec
test
jns
pop
jns
arpl
in
dec
mov
sbb
out
mov
loopne
add
call
rolb
xchg
je
add
nop
pop
adc
pop
jg
jns
ljmp
and
lret
in
or
sub
pop
outsb
out
outsl
inc
mov
sahf
arpl
lcall
arpl
xor
mov
jge
xchg
aas
jg
jne
lahf
pop
outsl
push
mov
sbb
int
xlat
ljmp
dec
sub
pop
push
lds
and
adc
xchg
add
or
mov
shrb
cmc
push
arpl
and
jbe
imul
cmp
repz
inc
out
outsl
mov
jne
dec
push
cmp
inc
inc
adc
push
pusha
jecxz
repz
cmpsl
push
add
jecxz
pop
xor
add
jp
mov
or
iret
rorl
mov
std
arpl
outsb
pop
pop
and
jae
xlat
test
cmpsl
xchg
pop
inc
sti
or
sub
cwtl
arpl
loop
je
ljmp
cmp
aas
out
cmp
cmpsb
pop
pop
test
sbb
mov
out
mov
adc
push
pop
mov
dec
mov
push
mov
enter
pop
enter
stos
xor
jecxz
stc
test
push
mov
outsb
stc
fdiv
mov
inc
movsl
sbb
xchg
jns
shrl
pop
adc
inc
jmp
mov
xchg
adc
push
mov
add
fs
adc
push
sub
adc
adc
outsb
imul
ds
adc
popa
add
xor
jnp
mov
jmp
sub
xor
cmc
mov
dec
sbb
movsl
jns
push
or
hlt
int
mov
ja
mov
daa
mull
imul
and
inc
mov
jl
lods
das
sub
in
adc
or
sti
sub
bound
stc
scas
jp
add
push
jno
leave
adc
cwtl
fisubrl
movsl
sbb
arpl
out
int3
adc
pop
sahf
xchg
xor
xchg
imul
mov
mov
insb
cmc
pop
iret
stos
inc
enter
or
outsb
dec
pop
and
push
mov
scas
inc
mov
mov
lret
dec
jo
xchg
mov
push
and
add
sbb
inc
ficoms
mov
lea
insb
sub
sub
xor
aas
repz
adc
lea
jne
sarb
insb
aam
sub
aam
das
test
fisttps
fdivs
cmp
sbb
ss
bound
xor
inc
movsb
mov
mov
in
jmp
push
mov
pop
ja
cmp
push
sbbb
loope
adc
push
lods
jae
mov
daa
push
popf
pop
cmpsl
rcrb
pusha
pop
test
xlat
and
jl
daa
in
dec
fmull
pusha
mov
xlat
mov
pop
xchg
dec
lret
movsb
push
hlt
pushl
das
jnp
dec
sub
cmp
xor
scas
mov
aas
pop
sub
mov
or
dec
das
lock
or
iret
xchg
repz
push
in
stc
inc
jnp
dec
sub
data16
fidivrs
jg
push
jnp
inc
dec
jae
ss
push
orl
test
dec
enter
cwtl
daa
das
mov
adc
adc
pop
push
xor
jb
jmp
stos
cs
or
pushf
or
shll
and
iret
mov
mov
xchg
int
fimuls
adc
loopne
in
test
jle
mov
inc
push
jg
sub
mov
push
inc
adc
out
ret
lock
adc
sahf
push
cwtl
adc
jns
jbe
dec
add
fbld
cs
stc
loop
fstpl
cld
shlb
jno
push
ds
fadd
insl
lret
push
push
in
test
rorb
scas
cmp
mov
stos
pop
mov
pop
mov
stos
xchg
pop
push
add
adc
dec
pop
lret
pop
hlt
lea
pop
or
popa
mov
pop
adc
mov
daa
in
pop
roll
or
sbb
sarl
xchg
inc
sbb
or
cltd
out
add
mov
add
and
mov
jmp
lods
push
lds
lods
jmp
mov
jb
mov
pop
out
lock
mov
in
or
mov
pushl
cltd
sbb
cmp
shrl
frstor
mov
out
shrl
xor
sbb
sahf
and
adc
popa
shrl
das
stos
insb
lock
stc
lret
pop
xor
mov
xchg
mov
xor
sar
std
cs
pop
mov
and
mov
inc
pop
int
rcr
mov
popf
dec
mov
cltd
sbb
sub
lcall
add
sub
xor
sub
inc
add
dec
lock
mov
in
mov
jo
pusha
int3
and
pop
lret
cmp
cmp
fwait
lea
bound
jl
loope
shl
sub
jns
mov
sbb
sbb
jle
cmp
mov
sbb
xorl
ficoml
nop
sub
in
scas
gs
jne
ror
push
into
dec
jp,pt
out
jns
push
mov
xor
xor
push
scas
lret
add
xchg
sahf
push
adc
sahf
stos
mov
test
dec
xor
sub
xorb
push
fidivs
cmp
stos
repz
enter
jg
push
xchg
dec
hlt
and
mov
fldl
adc
mov
outsl
mov
call
inc
imul
cmpsb
and
ljmp
xchg
enter
in
push
cwtl
adc
inc
fmulp
shl
jnp
lret
mov
mov
xchg
pop
daa
dec
cmp
xchg
jno
mov
add
imul
cmp
cmp
aaa
mov
jecxz
sti
mov
in
stos
inc
cmc
pop
cmp
lret
or
mov
sbb
mov
insl
push
int3
stos
push
stc
dec
add
inc
push
in
mov
lcall
std
jecxz
mov
xchg
sbb
loopne
push
dec
cmp
xchg
and
cli
rcll
adc
add
jmp
mov
sti
mov
inc
mov
pop
inc
aad
push
test
sub
add
cmp
sbb
in
cmpb
repnz
mov
jge
and
fsubrs
cmpsb
mov
mov
add
push
test
add
mov
or
nop
sbb
sbb
jl
push
pop
mov
xchg
jae
jl
xchg
bound
xor
cmp
sub
int3
iret
or
sub
inc
mov
inc
std
mov
ja
out
lcall
cltd
xchg
mov
outsl
shlb
int3
loope
sub
and
xor
push
pop
sub
and
sbb
push
add
dec
push
sbb
xchg
sarb
pop
sbb
gs
mov
mov
outsb
add
mov
cltd
cli
divl
sub
out
jmp
subb
popf
clc
xchg
test
adc
mov
aas
and
outsb
push
sbb
inc
add
push
inc
jmp
out
pop
cmp
std
xchg
xor
je
and
mov
insl
fwait
lcall
gs
cmpb
int3
int
iret
jg
xlat
test
in
cli
bnd
jne
in
in
nop
dec
adc
fidivrs
lcall
jbe
into
into
shll
or
cmpsl
pop
stc
popa
enter
fstp
pop
popa
mov
xchg
and
jle
add
aas
das
in
xchg
shr
inc
scas
dec
or
fcoms
inc
pop
das
xor
mov
push
mov
imul
call
adc
ljmp
add
or
cmp
outsl
in
insl
ror
mov
pop
cli
popa
jnp
cmp
cli
clc
jne
movsb
sbbb
and
test
jae
pop
cmp
adc
rorb
mov
adc
add
adc
inc
sbb
add
subl
rcr
adc
idivl
dec
pop
adc
inc
into
and
jns
mov
fbstp
mov
xchg
cmp
adcl
repnz
add
test
imul
addb
or
cmp
pop
ss
jae
addb
cwtl
nop
mov
dec
mov
mov
shl
mov
jo
xor
mov
pop
add
incb
or
mov
roll
sub
addr16
data16
mov
cmp
out
sub
stos
shrl
and
mov
fcmovu
fidivrs
subb
and
adc
or
mov
dec
std
scas
pop
push
jge
in
or
cmp
mov
iret
pop
cmp
movsl
dec
rcrl
and
inc
cli
or
xchg
insb
nop
adc
add
lds
test
jge
jg
fistps
aam
into
xchg
or
mov
loop
or
xor
inc
clc
stos
in
add
sbb
int3
jmp
inc
pop
shll
imul
imul
xor
test
aad
cmp
and
js
pusha
jp
icebp
push
jne
sarb
stos
mov
jno
add
adc
cmp
ja
and
and
add
mov
cmp
jmp
stos
sbb
in
test
mov
jmp
fimuls
lret
clc
jnp
cmpsb
mov
gs
inc
push
push
pop
inc
cmpsb
in
push
call
jle
outsl
jo
jle
inc
frstor
repz
loopne
mov
nop
fildll
int3
imul
dec
mov
xchg
jae
xor
cld
cltd
fdivr
scas
outsl
test
adc
mov
and
jle
gs
mov
inc
or
rcrb
sahf
sub
inc
sarb
sbb
shl
pop
aad
and
jae
xchg
rcrl
call
or
das
mov
loopne
fidivs
dec
pop
int
insb
in
fsub
lahf
jmp
and
mov
xchg
popa
jl
out
pop
cmp
ljmp
hlt
jle
jo
lods
inc
and
inc
imul
sub
mov
push
lahf
mov
iret
flds
cmpsl
dec
push
mov
test
mov
ss
aad
add
pushf
fistpl
add
test
xlat
dec
es
nop
push
test
pop
test
mov
xchg
inc
jmp
fildll
push
wbinvd
sub
pushf
loope
mov
hlt
jo
lds
or
mov
cmp
inc
mov
js
fbstp
and
nop
push
ljmp
push
mov
inc
and
jl
inc
cmp
fsubl
int3
pinsrw
xor
in
mov
arpl
bound
sarb
sbb
out
push
mov
xor
adc
add
dec
or
sbbb
jl
mov
out
fsubrs
dec
push
mov
repnz
int3
repz
mov
out
mov
jae
or
push
mov
pop
add
hlt
push
jo
rclb
mov
or
shlb
xlat
mov
in
cmp
int
xor
inc
mov
int
pusha
inc
sub
jecxz
pop
ret
in
movsb
fcom
lods
lea
pop
lret
bound
mov
adc
mov
pop
lds
das
loope
test
mov
or
push
andb
xchg
sbb
nop
dec
je
loopew
das
jle
push
adc
ror
dec
lods
adc
sarb
pop
add
movsb
dec
inc
mov
ret
loope
insl
enter
aas
mov
cmp
insb
push
sub
xor
fwait
outsb
hlt
insb
lret
pop
add
dec
mov
sub
sbb
fisubs
push
pusha
sbb
and
inc
fneni(8087
out
add
add
popf
scas
inc
or
lahf
test
inc
cmp
fsubrs
roll
bound
mov
and
pop
cmp
adc
jae
inc
cltd
mov
mov
xchg
xchg
adc
jmp
loop
cmp
adc
and
test
adc
icebp
movsb
stc
aad
mov
sub
lods
cmp
mov
dec
lock
rcll
ljmp
xchg
mov
stc
dec
and
lcall
sarl
ret
je
jl
jns
sub
sub
sbb
mov
fwait
sub
add
das
sub
add
add
sbbb
popf
rcll
fsts
repz
and
sbb
add
rcrb
add
pusha
add
cmp
xchg
fsubs
xchg
mov
int
jno
shll
repz
dec
cs
inc
ss
sbb
call
push
imul
mov
jecxz
push
xor
mov
lods
push
test
mov
xchg
fidivl
jns
or
jge
sbb
add
xchg
lldt
sbb
inc
test
loope
sbb
cli
adc
insl
mov
cld
jmp
dec
addb
mov
cs
xchg
jecxz
jbe
cmp
incb
jae
push
and
movl
sub
lods
pop
add
xchg
jbe
outsb
popa
scas
mov
mov
sbb
xchg
mov
mov
pop
insb
test
sahf
pop
subl
mov
adc
aas
jp
hlt
bound
add
jns
insb
pop
aaa
xchg
movsl
sbb
rol
xchg
adc
add
cli
mov
and
lods
push
push
xchg
and
enter
aad
adc
std
xchg
sub
add
scas
fdivl
je
aam
push
faddl
cmp
inc
cmpsb
shr
mov
or
push
jge
sbb
in
into
push
sbb
mov
and
mov
imul
inc
mov
xor
mov
jmp
es
outsl
jl
popa
es
sub
and
push
mov
mov
and
push
bound
add
xorb
out
out
mov
mov
aas
fsubl
pusha
jne
insl
jne
fstps
jo
in
hlt
and
xchg
mov
jmp
mov
aad
pop
mov
mov
js
jne
mov
fdivl
pop
sahf
cmp
mov
outsl
cmc
pop
outsl
push
cmpsl
dec
pop
jg
loopne
fs
icebp
enter
out
push
mov
idivb
mov
arpl
inc
mov
lods
inc
popf
jecxz
divl
das
xchg
loope
inc
fwait
mov
stc
fmuls
and
xlat
sub
xchg
lcall
iret
jns
mov
dec
stc
mov
test
outsb
or
imul
push
jecxz
js
push
cmp
movsb
push
int3
sub
sbb
adc
jp
push
jo
mull
mov
cld
int
pop
xchg
xor
cmpsb
xchg
xor
je
mov
sbb
or
mov
cmp
icebp
shrl
cmpsb
jp
sarl
pop
cli
and
xchg
or
iret
sbb
adc
pop
out
hlt
ljmp
test
inc
inc
sbb
stc
jmp
jg
dec
adc
ret
push
repnz
sub
bound
je
or
cmp
int3
and
int3
fmuls
pop
mov
inc
aam
pushl
out
sub
ret
pop
nop
jl
dec
lcall
out
pop
mov
push
dec
xor
subb
jmp
xor
rcl
inc
push
sub
fs
aaa
jne
pusha
mov
pusha
mov
pop
cmpsb
iret
adc
inc
mov
aam
mov
or
pop
and
adc
mov
inc
pop
lds
lock
roll
push
addb
inc
sub
jl
dec
loope
out
cmpsl
mov
popf
cmpsl
cmp
pop
push
in
push
lret
sbb
pop
pop
xor
loope
jp
mov
jnp
in
push
inc
dec
cmp
xchg
sti
push
mov
aam
mov
jg
ret
rclb
xor
xchg
cmc
out
jecxz
stc
xchg
mov
mov
shll
pusha
out
mov
xchg
lods
fwait
push
mov
xchg
add
mov
cli
or
mov
pop
push
mov
xchg
inc
in
fiadds
gs
xchg
mov
ret
push
mov
int
add
pop
popf
fiaddl
mov
adc
popf
in
shrl
mov
dec
cld
xor
and
pop
rcrl
outsb
mov
daa
add
orb
push
cmp
test
in
fdivp
ss
cmpsl
and
dec
lods
dec
push
mov
outsb
flds
cmc
sub
and
mov
cmp
cltd
movsb
movsl
jne
subb
cltd
mov
mov
jge
out
test
clc
and
adc
popf
in
push
jb
sub
push
sub
ja
aaa
dec
dec
lock
add
add
push
push
gs
mov
push
out
repz
js
mov
cltd
sarb
pop
inc
nop
dec
adc
ljmp
movsl
leave
das
jp
or
xchg
dec
repz
cmp
mov
sub
loope
xchg
jnp
mov
ficoms
and
and
xchg
pop
outsl
cmp
in
jp
push
add
cmp
xchg
xchg
cmc
xor
sub
popf
xlat
enter
lods
cmpl
xchg
mov
jae
packuswb
lcall
lods
mov
loopne
jg
inc
fwait
or
mov
fisubrl
ljmp
dec
or
vcvtss2sd
jecxz
repz
mov
jle
cmp
lock
xor
mov
into
ret
cmp
dec
sbb
xchg
aas
mov
fimuls
shlb
cld
sbb
addl
push
pop
bnd
dec
xchg
and
arpl
jmp
lret
inc
fmuls
test
inc
mov
inc
aas
xchg
cmp
push
cmpsb
lret
leave
xchg
outsl
xor
add
mov
jl
mov
pop
jecxz
outsl
or
jbe
xchg
add
adc
int
cs
mov
jp
arpl
mov
xchg
mov
jbe
test
outsb
add
push
data16
jnp
push
xor
dec
xchg
repnz
fstl
cld
xchg
pop
and
xor
push
mov
sub
mov
and
mov
sub
into
sub
inc
js
notl
pop
rcr
or
xchg
and
jbe
rcrb
loopne
cmp
hlt
push
jg
inc
mov
sub
ret
mov
cld
rcr
sbb
addl
xchg
addb
add
xor
mov
jg
adcl
call
jnp
push
xor
cld
out
xor
xlat
jo
and
imul
test
mov
cmpsl
sub
push
cmpsl
andb
lds
imul
jl
in
imul
lret
lcall
jl
mov
cwtl
pop
in
cmp
nop
stos
adc
mov
pusha
mov
imul
movsb
sub
and
test
push
pusha
push
int
je
inc
push
pop
xchg
pop
pop
cli
cwtl
pop
ret
xlat
cmp
dec
ror
outsb
mov
fcmove
cld
les
hlt
pop
cmp
jg
mov
nop
nop
fisttps
mov
jae
mov
jp
imul
pushf
add
daa
mov
xlat
jne
pushl
mov
fistpl
or
mov
add
mov
fidivs
jge
sahf
xchg
push
add
aam
clc
push
ss
cmp
push
inc
cmpsb
inc
fs
lret
adc
sub
or
bound
pusha
inc
mov
lds
inc
sti
out
mov
mov
iret
cmpsl
adc
mov
in
in
aas
jb
pop
lcall
test
lret
daa
add
leave
xor
stc
sub
mov
xchg
out
mov
out
dec
hlt
sbb
in
in
sub
xchg
push
enter
xor
mov
int
enter
push
adc
mov
mov
or
mov
sti
in
ljmp
loop
sti
xchg
pushf
adc
repnz
scas
in
pop
mov
cmp
out
cmp
ret
and
jg
jno
nop
push
pop
cmp
mov
push
dec
cmp
xor
iret
pop
mov
xchg
lea
adcl
int3
push
ret
cmc
loope
sarl
data16
es
lcall
cmp
cmp
jo
lods
xor
mov
dec
cmpsb
mov
sbb
xor
pop
ds
movsb
mov
stos
pop
iret
loopne
adc
inc
aad
lds
lock
add
dec
cmp
lcall
lahf
int
lret
lcall
sbb
add
out
iret
insl
mov
xor
into
movsl
push
push
jno
and
in
sub
cmpsb
add
arpl
int3
gs
mov
call
xchg
sub
mov
or
ret
aaa
cmp
sar
push
push
out
daa
enter
fdivrl
mov
lcall
bound
add
hlt
pop
ficomps
enter
push
inc
mov
aas
mov
rcr
dec
dec
mov
stc
test
cs
lock
xor
jl
xchg
mov
popa
nop
inc
inc
in
or
mov
and
adc
lret
mov
pop
dec
inc
cmp
cltd
adc
xchg
inc
pop
scas
repnz
pop
cli
fdivrp
in
iret
nop
pop
ds
xchg
loopne
insb
push
test
into
mov
adc
mov
leave
jne
pop
push
push
or
mov
fmuls
arpl
dec
scas
shrb
mov
xchg
testb
push
mov
rcl
inc
fisubrs
shll
inc
daa
mov
jnp
adc
or
in
inc
test
mov
ss
fistpl
and
in
aaa
cmp
or
xor
dec
int3
inc
hlt
test
sarl
int3
enter
mov
mov
adc
jl
sub
and
adc
das
nop
cmp
enter
xchg
aas
dec
mov
xor
mov
outsb
xchg
mov
pop
outsb
ret
popf
lret
or
fs
sbb
add
jnp
cltd
loop
out
mov
or
daa
mov
cld
xchg
push
add
mov
jb
push
loopne
mov
lret
mul
stos
movsl
leave
rcrl
enter
out
in
or
fs
mov
movsb
mov
mov
sahf
test
flds
dec
adc
xchg
sub
sub
cli
xchg
cmp
clc
sbb
push
pushf
ficoms
dec
push
mov
jno
add
dec
inc
scas
and
jbe
mov
fnstenv
cli
mov
push
mov
fwait
sbb
and
sbb
xor
mov
pop
mov
into
daa
mov
cwtl
push
lcall
and
lret
std
push
jp
xchg
loope
xchg
and
daa
dec
mov
adc
fcmovne
scas
mov
jnp
addr16
fildl
jne
ret
loope
sahf
fs
inc
aas
outsl
sti
clc
sahf
mov
je
sbb
push
fwait
mov
xchg
and
add
subl
mov
ret
fdivrl
int
jno
push
aaa
cmp
inc
shlb
int3
imul
sbb
insb
mov
fimull
fcomps
and
int3
dec
mov
lods
mov
fistps
idivb
mov
mov
jp
xchg
cmp
xor
stos
gs
fnsave
inc
faddl
rorb
ror
jbe
in
fldt
mov
adc
andl
fs
orl
cmp
int3
in
jbe
mov
sbb
lcall
xchg
xor
sub
jns
xor
mov
xor
mov
mov
mov
insl
cltd
stos
lock
cld
cwtl
pop
int3
fisttpl
lock
pusha
sub
jae
xor
decb
xor
xchg
jg
jmp
pop
pop
mov
pusha
push
dec
sub
dec
mov
dec
cwtl
das
push
ja
mull
push
and
mov
or
or
cmp
add
bnd
xor
in
fdivrs
out
xchg
stos
lods
pop
sbb
xchg
adc
out
mov
mov
mov
mov
test
mov
fcompl
in
es
aas
out
push
or
xor
jge
lcall
or
sub
into
in
mov
divl
add
rol
or
cmp
adc
lods
pushf
add
mov
sahf
sub
sar
mov
int
xchg
mov
sub
setb
jb
sarl
xor
cmp
test
cmp
loop
mov
std
mov
ffreep
adc
loope
add
jle
insl
je
outsb
or
adc
push
ss
packsswb
idivb
sbb
iret
mov
push
mov
insl
ds
test
rcrl
mov
dec
clc
and
push
mov
push
repz
or
cmp
adc
or
xor
jmp
stos
jl
xchg
inc
push
scas
and
and
mov
idivl
mov
popf
and
fidivl
mov
fsubrp
or
or
lret
fmul
mov
lock
decl
ljmp
in
popf
loope
xchg
out
data16
xor
das
cmpsl
jo
ja
add
inc
out
gs
pop
jmp
and
imul
jmp
pushl
push
jno
adc
mov
cmpb
adc
cmpsb
fadds
add
sbb
adc
pop
pop
stos
ret
jmp
mov
hlt
cmp
enter
xchg
sbb
or
push
ljmp
pusha
je
hlt
loope
js
loopne
loop
push
xchg
int3
sbb
jae
adc
call
lcall
xor
test
mov
add
jl
mov
ja
lods
mov
jge
popa
imul
mov
pop
ss
mov
and
push
movsl
loope
jno
sub
movsl
adc
clc
cmp
ds
pop
scas
xchg
add
mov
test
push
sti
fidivl
push
stc
ds
mov
sbb
repnz
int3
lahf
xchg
cld
lret
sub
pushf
fmull
into
sti
in
and
xchg
pop
addr16
mov
push
les
cmp
xor
fnsave
push
inc
and
mov
adc
add
dec
mov
add
jmp
ds
fldlg2
push
dec
imul
inc
push
pop
bound
lea
and
mov
fsincos
fsubrp
stos
inc
mov
scas
sub
dec
xchg
enter
pop
nop
pop
cli
mov
dec
out
cmp
or
sub
sub
push
adc
testb
mov
movsb
sahf
popa
inc
xor
adc
and
sahf
cmpsl
mov
repz
push
popa
daa
cs
fwait
add
js
mul
scas
mov
gs
mov
jmpw
testl
mov
pop
fs
fs
jg
pop
inc
clc
mov
push
fsts
js
xor
push
sbb
lods
rcl
inc
out
data16
sbb
or
jle
mov
fisubrs
rcrl
cmc
je
ljmp
pop
mov
es
dec
outsb
sbb
push
xchg
fidivrs
and
mov
int
and
sbb
xchg
scas
clc
ret
xchg
clc
insl
aad
std
xchg
sbb
xchg
fcmovnbe
push
ds
scas
pop
nop
fs
pop
mov
mov
and
pop
cltd
ds
lock
into
push
out
cmpsl
pop
cltd
push
mov
out
cmpsl
or
pop
fadds
pop
shlb
int3
into
xchg
unpckhps
add
mov
jo
push
or
sbb
xchg
adc
mov
xchg
mov
cltd
jns
or
fnstenv
out
insl
or
mov
adc
jo
xchg
pusha
push
jo
xor
mov
hlt
stos
mov
pop
movsl
cmp
popf
test
push
mov
and
ja
xor
add
pop
fisttpll
or
inc
pop
jp
adc
sub
cmpsb
fs
inc
insb
outsb
mov
stc
and
jae
stc
negl
mov
fwait
lret
cmc
push
sarb
dec
mov
out
flds
insb
std
cli
add
or
fisttpll
xor
xchg
leave
pop
jno
in
ja
jmp
out
dec
rcrl
push
out
push
sahf
cld
xor
fnsave
inc
lret
pusha
jle
xchg
xchg
cmp
inc
je
lret
xor
icebp
mov
mov
dec
pop
jae
aam
fildll
jle
in
js
pusha
mov
adc
push
insl
aad
shl
add
cwtl
testb
mov
sub
adcl
fs
sub
fimull
call
test
xchg
imull
lcall
imull
rcr
mov
repz
mov
xor
insl
inc
roll
push
cmp
subb
in
xchg
xor
fsubl
adc
inc
lock
repz
pop
enter
stos
addl
cmpsl
cmp
mov
dec
push
dec
cmpb
and
pop
popa
arpl
mov
xorl
scas
push
pop
and
mov
lea
imul
pop
fwait
jecxz
mov
pop
aam
mov
in
mov
cld
and
add
into
cmp
stc
push
cmp
xchg
cld
sbb
into
iret
lahf
mull
sbb
stos
ret
fildll
js
inc
fistpll
push
xchg
xchg
push
mov
out
into
mov
inc
xor
daa
inc
int3
fwait
aaa
mov
orb
fwait
mov
dec
inc
push
cmpsl
jl
sbb
push
mov
cmp
ljmp
rol
sbb
jle
mov
jle
ds
or
lahf
shlb
arpl
mov
or
inc
dec
jecxz
mov
loop
jns
std
cmp
dec
or
ss
insb
push
sub
int
popf
lds
pop
mov
pop
mov
data16
in
push
fisttpl
cmpsb
push
jg
int
ljmp
push
movsb
mov
mov
xchg
xor
mov
push
mov
std
add
or
mov
lods
jmp
lret
es
jae
fcmove
xor
inc
iret
sarl
or
cmp
mulb
pop
fsubs
js
inc
es
jg
xchg
pusha
fcompl
push
out
or
xchg
lods
data16
dec
sub
xchg
or
and
sbb
imul
sbb
test
negl
in
and
fsubs
pop
mov
sbb
enter
lret
sub
adc
mov
sbb
xor
sub
mov
mov
out
push
inc
xor
fsubs
out
loope
push
jno
cmp
jle
inc
mov
mov
sbb
xor
xor
aas
cmp
je
sbb
or
fcomps
rorl
rorl
cmpsb
stc
mov
sub
mov
mov
xor
rcll
clc
cli
outsl
out
movsb
decb
pop
rcrb
cmp
lds
lret
jo
lret
push
in
push
div
loope
clc
les
testb
xlat
lcall
lock
in
sub
cltd
mov
mov
adc
xchg
into
fistps
int3
jo
sbbl
out
gs
scas
imul
ret
rcrl
leave
mov
repz
pop
push
scas
sub
mov
jecxz
mov
sahf
inc
pop
mov
sbb
push
aam
adc
out
js
popa
aaa
out
mov
jle
out
mov
sar
hlt
sub
movsb
fisttps
int3
pop
mov
sub
loop
jg
cmc
int
popa
sti
arpl
lea
xor
and
mov
mov
ja
lahf
ret
sbb
inc
cwtl
test
stos
int3
scas
enter
call
inc
in
testb
mov
insl
push
add
mov
adc
repnz
in
mov
mov
repnz
sbb
and
xor
mov
jbe
bswap
sub
sbb
mov
sub
sub
mov
sub
push
in
dec
pop
ficoms
push
mov
loope
push
mov
mov
test
mov
sbb
daa
repz
xchg
cmpsb
int3
punpckhbw
cmp
lahf
pop
enter
sbb
idivb
cld
loope
fs
add
push
scas
fiadds
xor
aam
xchg
mov
cmp
sub
sbb
dec
pop
movsb
or
mov
mov
inc
scas
xchg
pop
mov
jl
ret
push
add
fnsave
xchg
hlt
mov
cmpb
inc
dec
out
insl
mov
hlt
sbb
mov
add
cmpsl
dec
into
pop
inc
imul
push
lock
out
shrb
or
inc
mov
inc
cld
adc
pop
sbb
inc
loope
xor
loope
insl
adc
fcomip
hlt
ds
xlat
scas
insl
leave
inc
mov
out
xchg
jl
arpl
push
outsl
out
je
clc
out
mov
mov
andb
dec
shlb
jns
dec
xor
fcomps
mov
xor
jg
ss
push
xor
cli
pushf
push
imul
lcall
mov
das
or
arpl
xchg
pop
pop
xor
icebp
sbb
fcoms
jecxz
mov
sti
sub
clc
popf
adc
mov
fistl
mov
stos
test
and
lods
outsb
cmc
popf
ds
jno,pt
ss
pop
xor
or
mov
pop
cmp
mov
mov
fbld
xor
pop
enter
arpl
mov
push
mov
inc
inc
jnp
rcll
notb
mov
and
lds
test
sbb
dec
and
loopne
ds
mov
in
sub
pop
cli
mov
andb
cmp
incb
lcall
loopne
das
jmp
dec
fsts
jns
loopne
or
incb
jne
xor
sub
push
aaa
pop
gs
icebp
adc
add
out
dec
je
mov
aam
movsb
aas
mov
pop
jmp
roll
cmp
pop
mov
jo
and
stc
stc
or
mov
stc
outsl
mov
sub
repz
xor
imul
mov
or
xlat
mov
xor
mov
add
add
lea
or
ljmp
mov
leave
inc
js
pop
scas
mov
pop
stos
push
mov
adc
aaa
and
fstpl
mov
les
pop
gs
loope
xlat
dec
rcl
repz
mov
adc
loopne
lods
lahf
movsl
mov
xchg
push
iret
leave
in
leave
leave
int3
jns
sub
mov
fiaddl
imul
ja
loop
shrl
add
add
sbb
dec
mov
hlt
push
jae
test
dec
insl
xor
lods
loope
mov
mov
push
dec
cs
ret
int3
pop
push
rcll
test
out
jge
in
cmc
stos
lahf
lock
mov
ss
fwait
popa
add
xlat
cld
or
mov
and
int3
xchg
mov
std
or
movsb
pop
adc
andl
dec
add
push
cmc
lret
push
and
rcrl
fisubrl
outsb
addr16
arpl
mov
add
fucomp
in
pushf
imul
and
aad
jbe
add
xor
xchg
iret
adc
out
out
dec
xchg
mov
dec
icebp
dec
mov
test
xchg
mov
sub
shlb
bound
sbb
sbb
and
sbb
or
mov
sbb
outsb
mov
mov
pop
cmp
leave
push
add
clc
shl
dec
or
or
imul
fisubs
push
test
int3
jae
stc
pop
popa
dec
sti
and
push
test
sub
pop
mov
add
sub
xchg
xor
mov
xchg
mov
jae
imul
fdivs
repz
inc
lds
dec
mov
mov
xorb
test
push
icebp
or
xor
lea
cmp
and
inc
adc
outsl
cli
push
adc
mov
in
inc
cmp
aad
mov
jecxz
cmp
repnz
cli
push
subl
jo
roll
sbb
push
sbb
lcall
gs
xor
ret
dec
or
pushf
dec
mov
mov
xchg
dec
sub
dec
movsl
sti
inc
add
ficoms
cmp
mov
push
xchg
scas
insl
pop
fnstsw
rolb
jle
test
inc
in
ds
mov
mov
mov
call
push
aas
pop
jecxz
loope
aad
ret
cwtl
jecxz
xchg
sbb
xor
cmp
sub
mov
sbb
mov
jecxz
sarl
cmp
loope
jnp
sbb
adc
sbb
scas
push
sbb
dec
cli
sbb
mov
sub
mov
mul
or
jb
or
fwait
pop
dec
fisttpl
cmp
jb
nopl
jmp
fstpl
xorl
pop
mov
mov
in
dec
lcall
fsubrp
es
js
or
iret
push
inc
dec
cltd
cmp
xchg
mov
xchg
and
aam
sub
fstl
sub
cli
popf
add
push
push
xor
or
push
out
jecxz
stc
and
push
shll
shlb
sahf
data16
mov
jmp
xor
fcom
add
les
adc
clc
push
adc
mov
pop
jbe
data16
xchg
inc
outsl
inc
jg
aaa
es
cmp
and
pop
push
pop
xor
pushf
xor
inc
into
and
sub
or
push
xchg
jno
adc
jle
dec
shl
xchg
xchg
fwait
jnp
pop
leave
jp
jnp
mov
and
ljmp
cli
cmpb
lahf
test
ljmp
sbb
andb
or
xchg
outsb
mov
dec
flds
adc
pop
je
aad
adc
jle
fidivrl
xchg
push
jb
pop
pop
push
ljmp
mov
or
stc
dec
xchg
fcoml
cmp
inc
pop
and
movsl
rolb
adc
sub
mov
test
push
sbb
shl
push
lcall
mov
adc
and
lahf
sbb
mov
int3
mov
pop
sbb
xor
sbb
jb
push
lcall
lret
pop
cwtl
fisttpll
and
and
adc
lahf
mov
loopne
aas
mov
int3
jl
xchg
popa
test
int3
loopne,pt
loopne
shrl
mov
loop
push
sti
pop
inc
add
xchg
xor
arpl
packssdw
pop
cli
dec
mov
loop
xor
ret
gs
pop
or
push
shll
in
xchg
js
inc
xchg
sub
mov
popf
lret
push
mov
add
aaa
inc
ja
xor
in
inc
popa
jmp
out
insl
lret
nop
dec
mov
test
repnz
and
or
nop
xchg
movsl
sti
fcompl
in
sub
nop
cld
pushf
ds
jae
rolb
cmpl
aas
scas
and
jmp
fmull
jmp
fstpt
or
iret
push
clc
in
and
mov
dec
or
aam
ret
mov
daa
jge
fs
rclb
cmp
imul
pop
shll
and
repnz
iret
mov
int
and
cmp
inc
xor
pop
insb
push
sub
sti
lods
push
sub
push
add
pop
mov
xchg
out
movb
xchg
jno
ret
movsb
xchg
call
cmc
fwait
pop
adc
xor
fiaddl
loope
mov
cmp
jne
ret
or
and
xor
push
jnp
fdivrl
mov
cld
ljmp
mov
mov
sbbb
cmp
repz
daa
repz
cmpsb
or
popl
scas
mov
bound
dec
movsb
movsb
ret
adc
mov
fimuls
sbb
insl
mov
mov
mov
jno
jle
fcompl
xchg
push
mov
pop
das
cmpsl
movsl
sub
xor
pusha
adc
dec
scas
dec
xchg
jge
iret
jb
sub
testl
push
mov
sar
jns
xor
test
or
jmp
fstl
push
add
scas
push
popa
dec
cld
sub
jbe
xor
xchg
add
cli
faddp
adc
clc
lods
test
pop
filds
out
ds
scas
stos
cs
aas
push
mov
xor
sub
gs
pop
push
jecxz
popa
fcoms
adc
test
jmp
inc
and
arpl
mov
cmp
jge
mov
pushf
add
sbb
jo
xor
or
test
inc
cmp
sub
and
and
test
je
orl
iret
mov
fldenv
dec
xor
cmp
cwtl
sti
lcall
cmp
scas
pop
sub
jl
dec
or
cmp
and
jbe
loopne
ficoml
daa
sub
cmp
ficomps
xor
mov
ja
enter
out
popa
inc
addr16
das
std
mov
add
push
pop
fsubr
arpl
pushf
in
push
fdivr
sub
dec
jl
sar
cld
ret
aaa
cwtl
enter
xor
cmp
in
push
clc
jp
clc
scas
in
mov
popf
addl
in
pop
loop
and
or
out
mov
test
pop
sub
or
inc
insb
int3
mov
fisubrs
inc
andl
lea
mov
sahf
shrb
movsb
in
test
roll
cmp
fdecstp
jne
cs
mov
mov
repnz
jnp
xor
add
pop
lods
mov
sti
pusha
or
jbe
add
std
fimull
pop
data16
ret
mov
arpl
xchg
ficompl
std
mov
jp
add
out
popf
xchg
ud1
in
loopne
inc
xor
sti
mov
loop
xchg
cmc
popf
sahf
add
jae
push
sub
push
out
das
out
movsb
mov
pop
dec
pushf
loop
and
mov
mov
sbb
in
xchg
imul
and
xchg
fsub
ljmp
dec
out
jg
fnsave
mov
scas
jp
inc
test
rcrb
jmp
pop
xor
cmp
or
xor
xchg
or
or
out
mull
addl
inc
ljmp
pop
in
xchg
mov
adc
test
lcall
sbb
push
orb
mov
inc
sahf
aas
pop
adc
jg
xchg
adc
jp
aam
ss
lret
mov
test
bound
int3
jg
imul
ss
xor
jno
out
cmpsl
jl
xlat
js
jbe
jae
push
xchg
pop
and
xchg
sbb
loop
cmp
js
in
movsb
outsl
pop
stc
loope
mov
fs
xor
sbb
dec
push
pushf
jle
or
xor
xchg
push
pop
js
cmc
jo
mov
cs
imul
xlat
mov
mov
sbb
xchg
scas
mov
orl
jns
dec
arpl
outsl
ljmp
xchg
out
fsubrl
std
push
adc
jecxz
lea
icebp
bound
mov
push
aaa
jnp
cmpsb
pop
scas
insl
mov
cwtl
sub
decb
jns
in
outsb
push
icebp
fcoml
or
or
adc
push
int
add
lahf
xchg
xchg
and
aad
cltd
push
dec
loopne
rclb
xor
je
add
lcall
lcall
lcall
nop
xchg
daa
mov
mov
mulb
sar
or
popa
roll
mov
mov
lret
mov
int
xchg
mov
mov
rcll
cmp
add
iret
inc
lods
add
or
subl
cli
popa
movsl
mov
add
fdivp
sbb
test
push
bound
sbb
mov
mov
mov
adc
cmc
jbe
add
dec
mov
test
push
xor
and
sub
shlb
mov
fcomps
iret
fistpl
cmc
push
mov
and
aad
mov
adc
sub
repnz
aad
movsb
jecxz
sbb
mov
mov
cld
sbb
cmp
adc
add
das
lret
rcll
enter
jg
cwtl
inc
mov
mov
ret
dec
cs
mov
outsb
cmp
clc
outsl
aad
pop
dec
sbb
aas
jge
sbb
outsl
fstpl
mov
lds
test
xchg
inc
cmp
dec
loop
sbbl
mov
test
and
or
pushf
mov
mov
ficoms
xor
jp
jge
hlt
adc
xor
inc
in
sahf
mov
sbb
cs
insl
out
in
or
pushf
mov
mov
xor
mov
arpl
push
xchg
and
add
ja
mov
testb
outsl
and
or
and
cli
or
lmsw
arpl
int
jl
or
add
mov
in
mov
xchg
mov
shrl
loope
jne
lock
pop
pop
clc
lock
popf
les
push
shll
push
gs
xor
cwtl
xor
jo
mov
inc
dec
daa
push
test
inc
aam
inc
jle
shl
pop
test
push
pop
aad
mov
mov
jbe
in
nop
sbb
ja
push
mov
cmc
sbbl
or
lods
dec
rorl
mov
add
pushl
fstp
mov
xchg
or
movsl
inc
aam
insl
xchg
test
sub
enter
shll
aaa
or
dec
les
and
mov
rorb
mov
mov
push
jmp
outsl
insb
xchg
xchg
stos
les
loopne
inc
daa
movsb
or
aaa
orb
inc
cmp
popa
and
push
pusha
inc
aaa
adcb
or
mov
mov
bts
mov
jge
or
dec
push
pop
pop
xor
mov
mov
push
xchg
std
pop
jp
aad
or
test
cltd
push
dec
mov
movsl
xor
mov
and
sub
mov
test
xlat
bound
sbb
add
dec
push
aas
enter
rcrb
cmp
adc
jnp
lahf
lods
insb
xchg
push
inc
lcall
js
jle
xchg
push
ret
sub
push
mov
inc
inc
push
inc
pop
rorb
scas
fs
repnz
loope
cmpsl
nop
adc
xchg
add
cs
push
js
dec
outsb
data16
inc
xchg
imull
cwtl
xchg
js
or
dec
xor
and
mov
mov
sbb
adc
iret
xchg
out
imul
push
iret
dec
inc
adc
xchg
ljmp
dec
ljmp
loope
jg
dec
sahf
sbb
mov
sbb
add
cmp
lods
inc
dec
nop
pop
iret
pop
insl
int3
frstor
mov
insl
mul
inc
shlb
in
push
inc
jns
cmpb
test
rorw
repz
ljmp
pop
int3
push
push
outsl
inc
mov
or
mov
sbb
mov
fwait
xchg
push
cld
mov
fidivrs
mov
pop
inc
gs
mov
sahf
pop
lods
mov
ljmp
call
push
lods
jecxz
mov
push
jmp
lahf
lock
int
shrl
ret
mov
and
subl
into
mov
fildll
sbb
test
mov
adc
dec
leave
or
aad
pop
push
in
or
dec
aad
or
add
xor
lods
dec
mov
jno
imul
push
gs
mov
mov
aas
sub
rcll
dec
xor
mov
push
popf
test
mov
pop
push
cld
fidivl
push
popa
dec
clc
int
inc
mov
mov
aam
pop
lock
or
xchg
cmpsl
pop
out
jg
and
cmp
das
jae
in
or
icebp
icebp
adc
in
test
lods
es
dec
loopne
out
cli
cmp
in
and
pusha
fidivl
adc
in
test
jg
lods
flds
jnp
inc
mov
fs
movsl
hlt
movsb
fadds
sbb
adc
rcrb
or
mov
mov
jge
adc
loope
js
pop
lret
cmp
mov
movsb
mov
rcrb
xor
rcl
cltd
mov
adcb
les
repnz
fs
xor
shr
sbb
add
jns
cmpsl
jae
in
jle
shl
jmp
lahf
movsl
and
clc
imul
sbb
scas
and
sub
dec
jb
mov
in
dec
push
sbb
cs
test
dec
test
push
sbb
fmulp
pop
int3
lock
sub
loop
push
cmp
xor
sub
test
cltd
out
fidivrs
test
packuswb
lea
sub
jecxz
cmp
call
jg
lea
xchg
aad
fmull
mov
call
cmp
sub
shlb
fistpl
inc
jns
movsb
push
loop
cmpsb
fstps
pop
hlt
shrl
add
xchg
in
dec
jbe
cmp
jg
sbb
pop
and
bound
jnp
mov
xchg
mov
int3
addr16
jne
movsl
pop
int
cmc
mov
sarb
add
imul
cmpsb
aad
in
sub
sti
out
stos
cmp
inc
lcall
mov
jo
jno
dec
aam
sahf
dec
es
rclb
xchg
cmp
cmp
push
testl
mov
pop
cmp
cmp
mov
in
mov
lret
sub
adc
mov
sbb
xor
push
mov
jbe
movsl
test
adc
xor
leave
scas
pop
dec
test
cmpl
dec
out
ljmp
pop
outsb
popf
loopne
or
xchg
sbb
sub
fcoms
mov
lock
xchg
movb
xchg
and
daa
inc
lea
fcompl
mov
jne
outsw
cmp
cmpsb
outsb
int
in
mov
outsb
lds
adc
mov
in
push
mov
hlt
inc
mov
lods
push
add
jbe
or
sbb
je
sbb
push
addr16
jg
cld
inc
imul
jno
inc
mov
sbb
xchg
jno
push
subb
sub
pop
les
filds
add
rorb
mov
mov
mov
xchg
push
xchg
orb
arpl
sbb
orl
std
aas
inc
daa
outsb
mov
cmp
xor
add
pop
scas
out
pop
ret
sub
sub
dec
cmc
mov
repnz
xlat
cli
lret
sbb
maskmovq
mull
cmp
mov
cmp
push
shrb
sbb
lock
push
mov
fimuls
mov
cltd
fld
mov
movsb
rclb
or
imul
xor
pop
pop
jbe
lea
jae
sub
je
xchg
cmpsb
in
pop
and
movsb
je
ljmp
int3
cmc
cmp
pop
mov
cmp
inc
out
pop
stos
cmp
xor
dec
je
lock
inc
into
in
inc
leave
xchg
adc
aad
cmp
push
shr
sbb
lahf
adc
inc
inc
icebp
xor
loope
bound
sub
sahf
ss
arpl
dec
fcmovnb
repnz
aam
call
mov
testl
lods
dec
mov
cltd
push
xchg
lods
rolb
mov
jg
loop
jns
or
orl
insb
push
add
add
jo
cld
in
bound
sbb
cmp
jbe
std
mov
or
mov
jo
push
out
test
test
test
inc
test
pop
mov
into
adc
aam
iret
add
xlat
aam
add
dec
sbb
js
or
dec
push
adc
mov
or
les
dec
inc
and
dec
mov
mov
mov
loope
cmpsb
inc
add
push
clc
out
loope
bound
outsb
jle
sub
or
mov
sbb
pop
jbe
xor
xor
push
fprem
aaa
sub
loop
sub
fsubp
add
pop
push
mov
stos
pop
cmpsb
dec
push
mov
and
push
push
adc
ja
jl
es
hlt
xchg
mov
cli
push
and
sbb
call
jns
stos
ljmp
jb
push
jbe
icebp
faddl
or
icebp
lret
add
clc
push
xchg
sbb
cwtl
adc
pop
xor
add
pop
push
add
enter
mov
push
test
fimuls
sahf
push
aaa
fwait
pop
xor
lods
test
sub
pop
dec
pop
cmp
jp
arpl
mov
adc
xchg
dec
dec
in
push
mov
ret
and
sub
add
imul
and
leave
decl
xchg
int
sbb
ja
adc
out
out
xchg
pop
out
repnz
sub
hlt
cmp
jecxz
je
cmp
jg
testb
arpl
addb
mov
fwait
int
push
pushf
pop
add
mov
fucom
into
lahf
push
xchg
sti
pop
sarb
add
mov
cwtl
adc
pop
ficompl
push
jle
stos
push
lea
testb
repnz
cmc
jo
outsl
daa
nop
pop
dec
in
sub
mov
pop
hlt
add
testl
pop
mov
and
lahf
lcall
mov
cmp
inc
cmp
push
push
in
movsl
cld
pop
inc
or
fs
push
xor
jge
adc
cmc
sbb
push
xchg
insl
inc
movsl
mov
ds
pop
outsb
stos
xchg
arpl
loop
shlb
jle
cmpsl
into
mov
mov
mov
add
xlat
cmp
outsl
adc
lods
repnz
arpl
mov
dec
xchg
cmp
jo
xchg
add
insl
or
push
fwait
jl
xor
sub
cli
nop
push
scas
test
int3
sbb
pop
fstl
call
mov
add
xchg
lahf
shlb
cld
mov
insb
fsubs
inc
cmp
pop
pop
lods
rcr
ret
inc
cmp
cmp
cmp
lret
hlt
lock
mov
movsl
add
divl
ljmp
inc
lret
jge
mov
xchg
lahf
pop
dec
clc
adc
sub
cmpsl
in
aad
push
jg
and
push
repz
xchg
sti
dec
lret
xchg
inc
inc
dec
or
lock
sahf
jecxz
add
add
mov
pop
les
scas
test
xorl
imul
les
rcl
repz
cmc
or
nop
lock
testb
stos
jne
in
add
mov
mov
pop
addl
rorb
xchg
outsb
mov
and
dec
dec
call
sub
jb
xchg
out
incl
mov
push
adc
aam
clc
pop
push
fucom
aad
lock
clc
clc
mov
addr16
in
test
inc
mov
pop
imul
inc
in
jmp
xchg
iret
add
push
or
jns
and
out
fs
movsl
addr16
inc
loop
xchg
sar
xchg
push
or
imul
into
fs
lahf
iret
or
js
jno
adc
mov
movsl
xlat
jno
nop
fisubl
stc
jns
adc
dec
push
shll
push
ja
jb
mov
dec
addl
fs
inc
int
data16
dec
pop
sbb
lcall
add
scas
push
scas
jecxz
dec
xchg
or
fnstenv
in
xchg
not
inc
and
ljmp
mov
mov
out
outsl
repnz
pop
inc
mov
es
adc
mov
mov
mov
sbb
jo
mov
lock
jbe
int
dec
test
fsubs
nop
rcl
mov
test
aas
mov
or
and
lret
jge
mov
and
adc
stos
or
andl
pop
cld
add
adc
sbb
push
lea
sub
adc
or
ss
adc
cmc
jo
es
test
pushf
fcompl
stc
and
dec
push
rcl
shrb
jb
mov
dec
shl
inc
push
sub
shlb
and
cmp
cs
sbb
pop
or
xor
push
mov
xlat
push
out
test
sbb
outsl
or
ljmp
inc
lret
mov
add
cld
pop
jbe
ss
insb
push
fstpt
orl
or
mov
cmovs
mov
cli
sbb
xchg
push
pop
arpl
loope
xor
mov
in
sbb
lret
dec
mov
loopne
es
dec
push
in
jg
mov
or
sbb
cmp
pop
jecxz
out
cmc
fisttpl
jmp
pop
and
adc
and
cli
rol
sbb
inc
inc
jge
xchg
xorl
mov
pop
and
inc
push
inc
mov
in
int
ds
iret
stos
adcb
mov
adc
dec
rorl
push
push
pop
mov
jns
sbb
scas
fdivs
fbld
cmp
nop
rorl
gs
xor
or
in
cmp
adc
nop
sti
xchg
jne
sbb
dec
arpl
std
sbb
cmp
sub
add
mov
cmp
call
mov
pop
sbb
inc
fsubrp
hlt
nop
lret
adc
add
pop
xchg
lret
add
sbb
adcl
xchg
adc
sbb
and
and
adc
loopne
dec
dec
sti
mov
mov
mov
scas
push
pushf
lahf
outsb
stos
es
loop
rcll
outsl
cmp
jno
sbb
push
jbe
add
loopne
xchg
mov
inc
test
cltd
add
push
xor
add
pop
divb
add
ljmp
pushf
xchg
aam
sarl
inc
or
ss
loope
xchg
dec
dec
imul
adc
mov
push
out
push
dec
ret
xor
ja
and
mov
inc
dec
fcompl
gs
jmp
andl
xchg
out
or
sahf
mov
loopne
or
dec
imul
call
sub
or
jmp
xor
add
xchg
sbb
mov
das
sbbl
imul
iret
xchg
jge
scas
lds
jecxz
je
dec
inc
je
ss
push
mov
or
mov
push
or
xchg
mov
jae
cmpsl
jge
cmp
mov
cmp
xchg
loop
push
xor
dec
mov
shll
imul
inc
clc
mov
adc
xor
outsl
cmp
bnd
fists
lds
jbe
pop
fs
iret
sbb
out
push
sahf
fwait
and
ja
js
mov
outsb
in
push
mov
xchg
adc
pop
mov
lret
and
mov
aad
adc
jmp
aaa
shl
xor
jb
popf
cmpsb
cmp
ljmp
loope
inc
mov
test
fstl
into
fs
rolb
fsubrl
adc
shrb
pop
push
and
aad
and
ja
loopne
out
stos
test
roll
lcall
les
cmpsl
fdiv
push
stc
sub
icebp
outsb
pop
push
mov
subb
popf
je
addr16
out
movsb
mov
sahf
jge
ljmp
mov
addr16
int3
push
outsl
fucomip
dec
lahf
mov
jne
xor
lods
insl
dec
sub
or
or
mov
mov
mov
push
push
xchg
lea
ljmp
sub
repnz
dec
out
insl
pop
jno
dec
fmuls
scas
cmp
ljmp
jo
aas
xchg
push
test
xchg
jg
push
add
repz
xchg
in
icebp
sti
shrd
out
sbb
mov
movsl
or
mov
mov
add
or
mov
into
or
in
daa
adc
mov
fisubs
lret
fsubrl
xchg
es
into
add
pop
test
lret
fnstenv
mov
sub
xchg
nop
test
out
or
es
fs
mov
ss
mov
gs
add
movsb
cs
jl
add
inc
js
es
popf
mov
roll
insl
inc
xchg
mov
pop
sbb
lret
xchg
imul
cmpsb
ss
mov
push
jg
int
jmp
adc
adc
in
push
sub
sub
addr16
mov
enter
dec
ljmp
aam
pop
xor
mov
ret
loopne,pt
mov
repnz
movsl
and
mov
rorb
dec
mov
leave
fstpt
cld
inc
fwait
push
test
cmpsl
cmpsb
push
aad
shll
and
mov
fbld
aaa
jne
lahf
mov
cwtl
inc
or
loope
je
fisubrs
sub
xchg
scas
add
inc
adc
movsl
mov
stc
dec
pusha
xor
mov
mov
loop
addl
imul
fdivs
lea
dec
stos
lret
fstps
cmc
mov
fisubl
enter
cmc
mov
pop
push
ss
sub
in
inc
adc
fwait
add
mov
or
sbb
inc
jecxz
lahf
fsts
fdivrl
imul
jne
jp
mov
in
incl
and
mov
sarl
clc
push
sub
cmp
cli
dec
mov
pop
cmpsl
out
jp
add
push
mov
negl
and
xchg
cwtl
aas
insb
test
cmp
ficoml
pop
insb
pop
test
cmp
jl
lods
mov
sub
xchg
dec
stc
jo
sbb
fisubl
lret
es
ss
sub
out
cmc
ds
xor
enter
jo
scas
adc
fisttpll
xchg
mov
mov
es
and
jns
jecxz
lahf
sbb
shr
mov
or
rcrb
arpl
jmp
movsl
mov
mov
push
pop
out
sbb
shlb
add
test
adc
cmc
nop
lret
push
mov
rcr
mov
push
loopne
mov
mov
jb
xor
mov
or
mov
aas
scas
mov
lahf
aam
mov
adc
jle
xchg
js
das
cmovb
xchg
or
les
xor
pop
movsl
repnz
sbb
push
lock
ret
sti
push
lahf
jns
sub
les
mov
sub
add
mov
lret
sbb
enter
addl
push
iret
fucomi
push
popf
mov
mov
push
push
stc
je
inc
loopne
stos
out
sbb
mov
sbbb
js
pop
adc
sub
xchg
jp
cmp
push
in
xchg
ljmp
cli
jle
jne
lea
mov
js
dec
cwtl
cmp
pop
js
push
cwtl
dec
mov
pop
out
test
jns
orl
inc
js
sub
arpl
in
push
cmp
xchg
or
add
sahf
lock
in
test
cld
or
sti
add
mov
outsb
sub
pusha
dec
fs
inc
insl
push
lods
adc
jge
cld
in
dec
and
into
nop
jns
ds
test
es
xchg
xor
scas
ja
sub
repnz
and
es
pop
repnz
fldcw
push
aam
insl
xchg
pop
jne
cmp
insb
jmp
iret
loop
push
push
add
or
test
movsl
andl
xchg
cmp
cwtl
repnz
jecxz
into
fdiv
push
xchg
mov
fildl
pop
fldcw
or
outsb
jo
jae
xchg
jns
xchg
sub
adc
aam
sbb
outsb
sub
or
call
adc
repnz
xor
enter
jnp
into
scas
cmpsb
adc
sub
mov
call
jmp
push
cmpsl
or
push
pop
sub
fmull
in
cmp
mov
mov
jnp
mov
sbb
push
jbe
lahf
adc
out
dec
sbb
sbb
adc
daa
aad
mov
xor
icebp
sbb
mov
enter
stos
dec
sub
mov
into
insl
lea
scas
add
popf
or
int3
sbb
xchg
adc
daa
and
cmpsb
mov
jge
stos
cwtl
adc
fwait
mov
cmc
xchg
mov
push
rorl
push
enter
scas
pop
xchg
sbb
popa
xchg
xchg
sbb
xchg
dec
pop
fidivs
xchg
jge
fsub
xor
inc
cmp
cmp
shrl
scas
xchg
loope
arpl
cwtl
stos
lret
pop
sub
xchg
xor
or
jge
pop
std
or
fsts
mov
popf
insl
stos
inc
xor
mov
ja
xor
loop
ficoml
leave
cs
ret
adc
popl
test
icebp
push
sub
push
sbb
dec
push
jl
pusha
pusha
in
lea
dec
push
cwtl
jo
xchg
mov
pop
sbb
and
lret
pop
mov
out
sbb
stc
stos
idivl
scas
sbb
push
dec
xor
add
and
push
push
sub
ljmp
pop
xchg
nop
pushf
test
sbb
dec
jmp
js
lret
mov
dec
and
add
sbb
add
and
mov
pop
add
stos
in
call
sub
data16
jns
jnp
jne
out
pop
frstor
incb
jns
xchg
or
popa
leave
stc
jp
jge
xchg
shrb
push
movsl
mov
push
xor
sbb
rorb
mov
pop
sub
fists
decb
cwtl
pop
mov
inc
ds
inc
cwtl
ret
negb
and
andl
mov
fcoms
and
and
sub
or
inc
inc
push
aaa
loop
scas
sbb
or
addb
leave
icebp
sbb
jg
and
mov
xchg
stc
push
mov
fldl2e
xchg
enter
pop
imul
sbb
outsb
jecxz
and
dec
add
test
or
add
shll
jne
mov
inc
stos
popaw
sbb
inc
or
popa
subb
mov
movsb
mov
and
add
mov
push
xchg
cmpsb
pop
sbb
pop
mov
jns
fists
add
aam
test
add
jecxz
sbb
inc
mov
cmc
mov
xchg
add
pop
mov
mov
sbb
cmp
in
ret
cmp
clc
or
mov
push
xor
or
inc
lds
mov
jae
xor
mov
jge
sti
or
cwtl
mov
xchg
pop
push
jns
cltd
lods
scas
dec
sub
out
pop
pushf
jb
pop
xor
pop
pop
and
dec
loopne
push
or
bound
arpl
jnp
push
sahf
cwtl
dec
jmp
sahf
lods
push
in
outsb
popf
outsb
xor
cld
jecxz
in
pop
mov
loopne
adc
push
dec
adcl
fists
pop
mov
adc
jle
mov
xchg
sbb
cmp
adc
out
adc
or
xchg
je
mov
dec
add
or
inc
rorb
nop
lea
push
ss
mov
stc
lea
sub
jg
xlat
cmp
aas
xchg
cmp
sti
sahf
dec
movsl
es
movsb
mov
arpl
and
mov
mov
cwtl
bswap
pop
jns
dec
in
je
xchg
out
insb
nop
shl
cltd
cs
loopne
bswap
sub
sbb
xor
jns
sub
pushf
int
and
insb
push
in
adc
dec
sub
xor
add
pop
dec
sub
clc
dec
stos
div
and
pop
mov
mov
subl
xor
jmp
xchg
adc
sbb
std
and
jnp
mov
rcr
or
idivb
mov
clc
mov
ret
fcmovb
mov
mov
add
pop
pusha
shrb
rorl
enter
xchg
icebp
mov
mov
push
rorb
repz
mov
jne
mov
shll
out
out
loope
std
popa
xor
mov
and
cli
and
add
icebp
adc
mov
add
ja
adc
cs
jge
jne
pop
or
dec
mov
outsl
cmp
push
mov
and
fadds
ss
ret
fs
loopne
xchg
movsl
or
inc
mov
dec
cli
and
mov
pop
mulb
mov
cmc
push
das
stc
xchg
sub
stc
adc
push
or
int
stc
jp
push
sbb
and
scas
and
mov
aad
fnstsw
aas
inc
add
jg
xlat
and
mov
mov
xlat
jecxz
jnp
aas
cs
aaa
push
or
mov
and
out
dec
aam
inc
adc
xchg
inc
outsl
push
or
mov
adc
mov
or
std
xchg
ss
rcll
push
mov
jg
fisubs
hlt
addb
testb
mov
jno
leave
xchg
std
xor
lods
mov
mov
fs
imul
sbb
xor
std
idiv
jle
dec
ret
je
and
cmc
sub
test
or
xor
sub
jmp
inc
jmp
mov
mov
aas
xchg
dec
xchg
fcompp
inc
stos
aas
mov
cs
push
fimuls
pop
xorl
pop
adc
nop
adc
push
xor
movsl
frstor
inc
arpl
push
orb
sbb
pop
pop
sub
pop
pusha
jle
or
push
ljmp
das
xor
out
shrb
cmpsb
mov
xor
pop
imul
es
adc
dec
pop
xchg
mov
push
lods
and
xchg
subl
daa
ret
and
add
adc
jnp
outsl
andl
pop
out
jae
and
aad
mov
inc
adc
lods
sti
fdivrl
push
sub
cmp
jnp
sahf
sub
adc
mov
cld
in
bound
mov
push
in
mov
cmp
pop
out
xchg
subl
cli
cmp
xor
shr
aad
adc
dec
inc
adc
inc
cmp
lods
int
addr16
mov
mov
inc
enter
les
cli
mov
cmp
je
ljmp
lods
xchg
negb
ret
mov
movsb
ljmp
cltd
lods
sub
xchg
sti
add
add
mov
ljmp
mov
cmpsb
cmp
sub
call
sub
mov
xor
xor
add
jg
fldt
cmp
xchg
xlat
testl
shl
xchg
adc
add
jp
fs
outsl
movsb
inc
dec
sbb
rcll
into
pop
push
cmp
fcomp
imul
jbe
sbb
arpl
mov
clc
out
xor
shlb
cltd
sbb
shl
popf
data16
cmpsl
and
or
pop
inc
or
push
popf
out
shrl
dec
test
fmull
jns
inc
stos
mov
stc
fstps
mov
push
cs
mov
fmuls
jo
xchg
test
loopne
orl
pusha
cmc
mov
or
icebp
xchg
cltd
push
out
xchg
sbb
fstpl
int3
pop
and
aad
sbb
lds
adc
ficoml
jp
mov
push
jmp
outsb
xchg
sbb
decl
mov
inc
out
enter
faddl
dec
shlb
push
mov
stos
pop
sbb
adc
repz
frstor
mov
push
subl
jmp
add
mov
push
insl
push
repz
sub
sbb
mov
and
pop
negl
movsl
bnd
xor
aaa
fsts
test
push
dec
rorb
out
xchg
jg
inc
je
mov
jl
mov
das
in
jbe
inc
jecxz
dec
pop
in
add
jge
adc
cld
scas
jnp
mov
push
xchg
pop
fbld
and
xchg
adc
pop
sub
pop
mov
or
add
pop
test
gs
je
lcall
jle
jmp
cltd
rolb
les
jae
sbb
mov
dec
xchg
and
inc
nop
mov
jecxz
dec
inc
fldt
mov
loopne
push
movsb
add
rolb
bound
popf
testl
mov
jl
je
add
test
int3
ljmp
mov
xchg
mov
add
cmpsl
dec
jle
mov
rorl
dec
push
loop
cmpsl
pop
roll
cmp
sub
pop
lds
fbstp
mov
faddl
ja
adc
sub
aaa
adc
mov
jns
sbb
rdmsr
cwtl
ret
xchg
jno
jne
mov
or
arpl
add
xor
cmpsb
sbb
pop
mov
xor
ja
icebp
ljmp
jl
jecxz
test
cltd
aad
mov
mov
push
push
fdiv
mov
jecxz
sbb
xchg
std
movsb
dec
pcmpgtw
push
mov
adc
daa
sub
push
xlat
cli
add
movsb
adc
xor
js
lea
scas
cmp
divb
insb
jne
jle
ret
in
aaa
push
xor
adcl
pop
in
and
jecxz
loopne
adc
lea
add
repz
ljmp
lahf
fdivrs
cwtl
cli
and
fdivp
mov
mov
mov
mov
xor
in
cltd
mov
adc
dec
mov
arpl
cmp
mov
dec
cmc
lcall
push
pusha
out
xchg
add
outsl
scas
loop
push
out
jl
mov
cld
sarb
lods
rcrl
cmc
adc
ret
mov
xchg
rorl
mov
xor
mov
sahf
out
movsl
insb
add
fcomp
jns
in
shll
push
jns
pushf
push
xchg
jb
loopne
insl
push
jbe
add
js
mov
xor
stos
inc
scas
repz
push
clc
mov
mov
pop
into
clc
xchg
fs
inc
mov
xor
xchg
lahf
insl
push
les
xor
adc
mov
mov
fdivs
dec
call
push
mov
imul
loop
adc
loope
and
adc
jnp
sarb
xchg
push
jb
jg
or
popa
dec
push
mov
push
xchg
dec
mov
and
and
push
add
xlat
jecxz
test
xchg
mov
jae
sahf
mov
popf
sbbb
sbb
jb
adc
sub
xchg
inc
inc
sub
in
cmp
pop
push
scas
xchg
jae
add
sbb
shr
xor
bound
pop
out
fnsave
out
cld
xchg
in
inc
inc
ds
fwait
loope
sbb
jp
idiv
and
sti
jg
testl
aam
lcall
movsb
xchg
xchg
shrb
add
pop
mov
mov
sarb
iret
xor
add
orl
mov
test
loopne
cmp
sti
cmc
lods
push
test
ret
mov
xor
insb
fcmovbe
enter
push
or
sub
into
cmp
xor
sbb
add
or
dec
lret
and
orb
sub
cld
test
sub
cmc
push
xchg
repnz
out
pop
test
mov
repnz
adc
mov
pop
dec
jmp
push
ficomps
lock
fldt
push
mov
mov
insl
and
cmp
or
sbb
mov
int
mov
les
xchg
mov
sub
fcomps
or
sub
xchg
fcomps
leave
inc
mov
jmp
mov
inc
jae
cmpb
adc
cmp
xor
ret
xor
push
pop
sti
cmp
mov
jl
pop
insl
aaa
imulb
inc
lods
adc
and
sbb
jno
cmc
add
and
enter
scas
stc
aam
xchg
stos
in
repnz
cltd
pop
or
sub
sub
scas
icebp
cmp
sbb
mov
lods
lea
cmc
icebp
ficompl
daa
push
mov
sbb
jp
xor
sub
out
in
jo
jns
xor
add
aaa
jle
adc
add
inc
gs
add
and
inc
dec
aam
das
jne
adc
sbb
lods
test
gs
ja
push
fwait
mov
jmp
push
add
repnz
enter
test
push
out
sarb
mov
punpckldq
inc
imul
cmp
in
xor
pushf
push
ret
in
cli
sbb
dec
repz
repnz
bound
addb
pop
or
adc
or
or
mov
dec
rolb
mov
mov
insb
and
mov
call
int
sbb
inc
mov
cwtl
or
mov
pop
xlat
xor
jg
je
or
scas
sbb
inc
dec
inc
imul
and
roll
cmc
pop
test
dec
shrl
andl
stos
cwtl
or
push
or
clc
mov
aad
aad
test
lahf
push
sarb
cwtl
mov
je
adc
fwait
and
cmp
pop
jns
mov
popf
ret
sbb
aam
outsb
xchg
mov
or
xchg
jmp
pop
in
ljmp
popa
or
cld
sub
jb
fisubs
inc
mov
addr16
sub
jne
push
lock
sbb
or
or
mov
sbb
shlb
push
cld
cmp
cld
add
push
push
fiaddl
add
into
fisttpll
cmp
xor
daa
lock
lods
ja
rolb
mov
xor
std
inc
add
in
add
and
dec
mov
push
jae
addl
sub
das
pop
dec
js
ret
mov
in
shl
lret
mov
mov
mov
mov
sub
subl
insl
jl
push
test
sbb
iret
addr16
les
cwtl
test
aam
jl
ja
xor
sbb
inc
push
and
notl
mov
pop
lods
in
pop
mov
adcb
xlat
adc
mov
popa
ret
or
hlt
mov
mov
cmpb
sub
cmc
cmp
dec
lock
shl
sub
outsb
mov
or
fisubs
push
fcmovb
cmpsl
aaa
pop
or
xor
cmp
std
cltd
dec
lods
jb
push
jno
ret
call
pushf
xor
or
sbb
aas
adc
add
dec
pop
aas
sub
enter
ret
cmc
dec
insl
sbb
lret
add
pop
mov
js,pt
test
pushl
das
roll
clc
mov
adc
sbb
fsubl
mov
mov
cmp
jae
lea
adc
pop
and
sub
cmp
jl
daa
cwtl
sub
int
loope
push
fstl
jle
mov
push
inc
mov
mov
push
pushf
and
les
cmp
cmp
cmp
jle
jge
mov
bound
adcl
cmp
mov
scas
test
push
adc
or
mov
push
mov
in
aad
rcrl
mov
sub
jl
sub
xchg
dec
pop
pop
xor
pop
push
je
hlt
xor
mov
push
inc
lcall
jo
push
adc
es
mov
jb
jle
cwtl
cli
or
sub
mov
push
push
leave
jnp
xlat
xchg
dec
pop
mov
outsb
es
mov
push
pop
scas
adc
shrl
hlt
mov
pop
inc
jnp
mov
xlat
jl
mov
push
imul
pop
loope
adc
fidivrs
xor
cld
shll
or
xchg
movsl
sbb
call
push
jg
mov
es
or
stos
jo
divl
movsl
ret
jmp
xchg
xor
movl
pop
int3
dec
je
dec
cwtl
into
xchg
les
inc
fimuls
je
iret
cmpsl
das
sbb
out
and
push
movsb
mov
jne
cmp
fs
aas
testl
pop
push
and
push
pop
jbe
xchg
jnp
imul
push
mov
pop
addr16
jp
test
cmp
call
pushf
dec
and
fbld
pop
movsb
dec
mov
cs
incb
int3
int3
and
inc
sub
mov
in
xchg
adcl
cmc
subl
rolb
call
fidivrl
mov
movsb
sbb
push
jne
iret
lahf
dec
mov
lods
cli
dec
push
out
lret
mov
sahf
lods
pop
or
cltd
mov
cltd
mov
and
shr
out
jno
popa
push
jecxz
adc
mov
and
lcall
lret
fcoml
and
in
lcall
jmp
inc
pop
fmuls
dec
mov
mov
mov
lahf
inc
adc
sahf
and
out
nop
loop
int
andl
scas
dec
arpl
jns
in
bound
ljmp
icebp
pop
cli
sahf
inc
movsb
xchg
jae
pop
jge
cmp
jge
mov
mov
repnz
pop
cld
adc
sbb
sbb
dec
fwait
or
sbbb
loopne
movsb
dec
xchg
lds
sbb
inc
pop
inc
cmp
test
hlt
sbb
pop
sub
push
lods
inc
scas
dec
popa
mov
xorl
xchg
out
rorl
mov
mov
cmp
fisubrs
cs
pop
push
mov
sbb
enter
jl
inc
imul
inc
dec
nop
inc
rorb
cmp
andl
pop
in
lea
dec
jne
cwtl
pushf
cld
repz
lret
repnz
xchg
inc
jbe
dec
sub
negb
xor
mov
jmp
mov
push
mov
lahf
iret
jne
je
movsl
addb
dec
cmp
jl
ficoms
or
in
cs
fcoms
adc
or
lods
fsts
inc
in
mov
sub
sub
rcrb
or
adc
popa
fstpt
add
pop
in
cmp
cmpb
sub
faddp
jge
mov
mov
cmp
and
push
push
xchg
xchg
ss
xchg
mov
test
adcl
das
push
sbb
xchg
and
sti
xorb
mov
insl
arpl
inc
mov
and
ror
push
shr
xchg
inc
fdivr
popf
ds
loopne
ja
insl
or
inc
dec
and
nop
and
dec
mov
adc
xor
jge
mov
mov
xlat
pop
fildl
or
fdivr
pop
mov
stos
aam
jbe
adc
add
dec
mov
mov
inc
cwtl
xor
int
stc
push
fidivrl
and
cs
add
in
push
lcall
and
lock
dec
ficomps
repz
lea
loop
cmc
sub
adc
dec
pop
xor
or
inc
and
jge
data16
fmuls
stc
mov
inc
xchg
in
sub
mov
dec
xlat
cmp
fwait
out
gs
push
pushf
fisttps
out
rcll
lea
xlat
mov
push
loop
cwtl
lds
push
or
nop
test
xor
ret
xor
push
cmpsb
add
or
push
test
pusha
sbb
scas
and
andl
xchg
pushf
cmpsl
mov
mov
jle
sub
xchg
clc
cmc
xor
pop
add
xor
hlt
fwait
push
dec
fcoml
pop
insl
pop
and
mov
dec
push
test
shl
popa
xor
mov
jb
xor
std
mov
pop
push
incl
sar
movsl
mov
dec
xor
daa
mov
inc
in
nop
adc
push
fiaddl
push
jp
jbe
cmp
ljmp
push
pop
fcomp
out
xor
jae
jb
into
outsl
aad
mov
push
cmp
out
cmp
dec
pop
xchg
clc
add
adc
sub
pop
and
sub
dec
sbb
jp
pop
inc
ficompl
in
mov
fdivrl
push
gs
movsb
inc
jle
divb
xchg
leave
dec
mov
hlt
pop
inc
adc
into
in
out
mov
inc
inc
jl
adc
or
lock
lods
mov
dec
inc
jl
mov
fsub
xchg
divb
pusha
jo
in
jnp
shll
jbe
in
mov
popf
inc
das
lret
add
jne
je
mov
pop
mov
shlb
pop
lcall
out
push
out
jecxz
push
xlat
sti
mov
mov
shll
addr16
add
dec
outsb
int
jbe
jmp
in
adc
leave
and
xor
ss
jne
imul
mov
gs
inc
cmc
xchg
aas
adc
pop
inc
mov
mov
sbb
fadds
xor
cltd
xor
xlat
pop
pop
movsb
pop
mov
push
push
loope
loope
daa
arpl
in
sbb
push
xor
loop
xor
dec
adc
stos
andb
sub
sub
mov
lea
add
pmaxub
push
js
fsubl
sbbl
push
bound
push
dec
fdivs
or
push
gs
mov
adcl
sbbb
push
adc
xor
push
mov
fnsave
mov
pop
adc
nop
inc
sbb
dec
in
inc
xor
fstpl
mov
inc
xorb
cld
add
fadds
iret
jl
in
mov
pop
xor
lds
xor
jno
sub
inc
or
shrl
inc
add
jne,pn
sbb
mov
dec
cmp
jg
inc
les
inc
inc
mov
loop
sbb
aaa
mov
push
xor
jae
inc
pop
ljmp
jle
sub
daa
xor
inc
test
push
lret
scas
cld
dec
outsl
push
into
sbb
dec
insb
test
imul
stc
add
rcrb
mov
push
dec
jo
jle
push
in
lret
mov
push
cli
mov
add
adc
scas
mov
jge
imul
push
inc
xor
cs
sarl
stos
ljmp
clc
imul
inc
inc
push
cmp
push
xchg
sbb
dec
dec
pop
dec
pop
mov
inc
mov
adc
mov
jb
nop
cs
aad
into
fsubs
shlb
inc
lret
sbb
jmp
mov
pop
xchg
int3
ret
mov
inc
adc
xor
jecxz
insl
sub
cmp
inc
inc
inc
xchg
aam
popf
das
lret
xor
jg
ror
inc
in
jecxz
dec
jbe
cld
js
and
adc
fisttpll
test
aas
in
or
xor
inc
movsb
dec
dec
fidivl
mov
sti
iret
sub
test
cmp
xchg
repnz
dec
push
mov
jecxz
pusha
push
xor
cld
push
lods
insl
sbb
xor
cmp
jne
jno
mov
xor
pop
fistps
xor
shrb
shll
adc
mov
movsb
xchg
test
adc
mov
mov
cmp
jns
mov
aas
inc
out
pop
sub
adc
jle
roll
push
mov
jb,pt
xor
mov
mov
inc
ljmp
add
mov
loop
call
dec
jmp
pop
rol
xor
ljmp
test
pop
cs
jmp
cmp
std
shll
ret
jo
add
dec
pop
imul
jne
and
gs
inc
mov
ret
mov
test
mov
int
add
icebp
jnp
ss
mov
xchg
cmp
fstl
test
xor
subb
jno
int
dec
cmpsb
sub
xchg
popa
pop
xlat
stos
mov
ds
mov
or
xlat
mov
fs
shll
popf
das
js
rclb
neg
negl
cld
outsl
enter
add
push
sbb
cmp
nop
adc
cmc
inc
xor
cmp
inc
lods
sbb
testl
imul
cmp
ficoml
mov
cmp
daa
dec
lret
mov
sti
add
mov
mov
gs
inc
mov
xchg
iret
xchg
mov
hlt
nop
dec
xor
mov
push
mov
out
jo
pop
dec
es
clc
and
js
mov
jmp
mov
pop
mov
lods
fistps
xchg
xor
clc
stc
pop
daa
or
ljmp
test
dec
jl
cwtl
shrb
xorl
push
dec
xor
inc
xchg
jae
or
jmp
dec
xchg
mov
xor
inc
insb
movsl
aaa
sti
push
pop
pop
dec
ret
in
or
jge
loope
lcall
push
and
sub
mull
pop
mov
inc
clc
loopne
ja
in
pop
xchg
rorl
push
jp
mov
fimull
icebp
dec
adc
or
pop
mov
frstor
push
add
pop
addl
es
push
or
lea
popf
mov
idivb
jbe
sbb
pusha
fwait
in
add
and
mov
bound
add
orb
add
mulb
das
add
jecxz
push
adc
push
and
sbb
inc
aam
xchg
mov
insl
mov
icebp
jg
rcr
push
bswap
sbbl
popf
scas
pop
in
cltd
sub
mov
shll
outsl
mov
in
and
sub
jl
rolb
pushf
arpl
pop
mov
ret
bnd
mov
lea
sub
push
push
pop
and
sti
add
pop
dec
lock
ficoml
xchg
scas
xchg
loope
push
xor
test
mov
dec
pusha
dec
and
jno
mov
or
dec
int
cwtl
int3
xor
clc
or
lret
sbb
mov
gs
popf
setg
jns
enter
daa
mov
arpl
adc
scas
fnsave
fsubs
stos
js
add
add
sti
enter
mov
mov
orb
dec
push
xchg
ret
push
fists
cmpsl
inc
jno
das
test
mov
repnz
mov
outsb
pop
dec
out
push
pushf
push
dec
cmp
mov
aad
pushf
push
jle
imul
dec
shll
cmp
xchg
and
jmp
pop
sbb
mov
insl
sbb
dec
add
jle,pn
js
test
loopne
mov
insb
pop
push
jge
or
pop
add
aas
adc
jecxz
add
sub
xchg
je
sbbb
inc
cmp
hlt
sbb
cld
cli
and
lcall
mov
shrb
sbb
aam
pushf
dec
xchg
addb
in
repz
lahf
jmp
aam
mov
adcl
into
outsb
pop
xchg
test
clc
aam
add
cmp
mov
std
jp
adc
push
js
mov
adc
nop
push
cmpsb
ftst
loopne
push
leave
or
jo
inc
lret
into
outsb
push
jle
mov
sub
mov
pop
das
int
clc
or
cmp
out
xor
xchg
xlat
fildl
pop
mov
bound
roll
out
out
inc
xchg
mov
cmp
dec
mov
dec
sub
mov
jmp
mov
mov
adc
jecxz
daa
inc
jp
add
movb
xchg
xor
lock
jl
or
xor
in
cmp
xchg
mov
lahf
jns
mov
add
imul
arpl
sbbl
push
xchg
push
adc
roll
add
in
ds
add
jecxz
xchg
or
push
lock
or
cmc
xchg
push
xchg
push
mov
in
movsl
mov
mov
sbb
xor
mov
push
and
movsb
stos
dec
loope
push
jne
pop
hlt
jp
and
push
bound
xor
push
sub
pop
inc
movaps
pushf
and
repz
sub
jmp
mov
out
xchg
add
add
mov
mov
lret
aaa
jns
and
cmpsl
aam
in
push
jne
or
outsb
jmp
inc
add
pop
adc
pop
lret
fildl
adc
jmp
repnz
jo
fsub
cwtl
push
mov
pop
xchg
mov
into
out
jl
mov
in
iret
mov
out
xchg
xor
andnps
imul
sub
mov
je
aas
cmp
test
insl
adc
push
mov
mov
int3
push
das
push
mov
icebp
or
dec
sarb
outsl
lods
fmulp
cmpsb
mov
or
adc
mov
pop
inc
inc
xor
or
xchg
notl
test
shlb
icebp
pop
or
test
xor
xchg
fldt
jns
xchg
addl
flds
push
add
icebp
pop
lods
ljmp
xchg
lock
test
icebp
rorb
ljmp
xchg
inc
jp
mov
xchg
stos
and
daa
icebp
fdivs
inc
fdiv
pop
imul
inc
std
out
jle
out
sar
sahf
divb
dec
fidivl
add
js
lock
xchg
movsl
jl
mov
andl
punpckhbw
xchg
mov
lahf
sarl
xchg
int
inc
mov
in
lods
idivw
jmp
cmp
loop
fucomip
jns
add
push
mov
xchg
cwtl
jbe
nop
jb
jbe
xor
pop
lock
inc
lret
out
inc
inc
or
outsl
insb
lret
mov
push
jge
sbb
fs
sbb
addl
mov
testb
and
jg
xor
mov
inc
loop
fmuls
popf
cld
push
push
daa
cmp
shrb
lcall
pop
jecxz
mov
enter
repnz
aam
jne
pop
rcll
stos
xor
movsl
sbb
call
mov
sbb
ret
sbb
and
dec
xchg
jbe
jle
jge
rolb
jge
xor
ret
mov
or
push
sub
aas
dec
jl
sub
pushf
jbe
aaa
mov
cmp
mov
lods
push
sarb
jnp
mov
push
paddusb
sub
jo
pop
mov
out
jge
test
push
movsl
mov
pop
test
in
mov
gs
mov
loope
sbb
mov
cwtl
repnz
or
lcall
cmpsl
sub
dec
rcrb
lds
iret
das
xchg
mov
ja
in
jo
xchg
add
or
xorps
jbe
mov
rcr
fisubl
aaa
cmp
loop
or
mov
dec
repnz
arpl
or
pop
pop
fnsave
jle
sbb
xchg
push
jnp
jae
jo
jp
cwtl
push
and
clc
scas
repz
sbb
inc
xor
ljmp
pop
orb
jnp
sub
xchg
jg
cmp
push
fidivrs
and
nop
clc
push
mov
aam
je
rorl
and
jl
in
mov
pop
out
popf
cmpsl
mov
mov
mov
shr
push
bnd
mov
rcr
and
hlt
nop
pusha
out
jmp
loopne
ret
pop
cmpsl
mov
scas
inc
pop
inc
shrb
push
dec
lahf
adc
int
pop
mov
mov
pop
add
mov
int
cmp
push
or
adc
js
dec
dec
sbb
pop
sbb
loop
xchg
icebp
in
imul
aaa
push
aam
movsl
add
jle
push
lods
out
incb
cwtl
and
cmpsl
imul
jmp
or
mov
jbe
out
xchg
pusha
inc
lods
ror
les
dec
xchg
push
aaa
lahf
out
into
or
test
mov
stc
test
xchg
sti
mov
scas
cmp
mov
aam
pop
xchg
xor
sbb
call
push
xor
adc
cmp
mov
dec
aam
sub
inc
pop
inc
cli
xor
outsb
sahf
lods
dec
cltd
push
adc
loope
into
xor
loope
push
into
and
inc
jle
sbb
sub
mov
and
cmp
pop
xchg
xchg
std
jg
xchg
test
fwait
xchg
push
fists
out
dec
xor
add
enter
sub
scas
sahf
jno
addr16
push
in
jle
sbb
mov
repz
in
aad
or
push
fs
es
icebp
iret
xchg
dec
pop
xlat
loope
gs
les
jl
ds
jbe
lea
pop
push
test
negl
call
pop
xsha256
cmpsb
adc
and
xor
and
stos
or
and
and
movsb
jnp
je
test
or
xlat
mov
dec
mov
xor
mov
mov
jmp
aam
movsb
ficomps
stos
aaa
int3
mov
divl
iret
add
out
push
nop
dec
into
jb
jb
jp
xchg
push
sbb
imul
push
jmp
xor
lcall
insl
push
ja
jns
fcmove
lahf
sahf
sarl
lods
cltd
ja
test
pop
int
lret
mov
into
repnz
or
loopne
adc
cmp
fildll
dec
out
pop
clc
fstp
jno
fmuls
fwait
dec
into
cmp
add
and
gs
ficompl
adc
jmp
aas
in
loop
stos
das
pop
insl
pop
xchg
pop
push
adc
xchg
mov
mov
jo
mov
fcoml
jne
mov
lcall
shl
and
pop
cld
adc
ficoms
cmpsb
add
das
push
mov
mov
mov
sahf
xor
mov
or
mov
xchg
xchg
bound
adc
notb
std
mov
dec
mov
and
lea
ror
push
orl
mov
pop
nop
sub
out
pop
pop
mov
push
mov
push
push
jnp
dec
push
jae
jl
push
add
inc
inc
shl
xchg
adc
jp
stc
xor
mov
clc
cmp
mov
aas
sahf
jge
insb
jnp
neg
add
in
pusha
mov
data16
aam
jle
inc
fistps
jno
xor
gs
inc
call
mov
push
loop
push
push
sub
rorl
pushl
fcompl
fbstp
ds
or
pop
pop
jg
rcll
sub
or
cmp
sbb
jno
jno
mov
das
mov
add
andl
mov
lock
adc
xor
mov
rcl
aaa
out
sbb
aaa
in
dec
or
js
adc
shll
ficompl
std
test
or
sub
stos
stos
cli
jnp
sub
jp
fwait
adc
scas
and
sub
push
lods
cmp
sbb
cli
mov
push
lea
pop
xchg
pop
data16
pop
fdivrs
out
rorb
dec
add
xor
jmp
int3
dec
pushf
xchg
stos
mov
stos
sub
mov
mov
inc
xchg
out
sbb
mov
dec
xchg
or
and
inc
fbstp
inc
es
jno
push
addl
and
mov
icebp
add
mov
xlat
mov
andb
push
lret
adc
push
out
and
loop
cli
loopne
decl
mov
xchg
call
aas
repz
mov
sub
cmp
clc
icebp
fstps
dec
sub
mov
sbb
sahf
cmp
test
jnp
dec
sbb
ljmp
sbb
pop
mov
jae
stos
lods
cmpsb
fcoml
ret
jge
adc
subl
out
mov
jb
lret
mov
pop
imul
ljmp
int3
sub
lret
adcb
cld
stos
mov
sbb
rclb
add
and
mov
pushf
add
xchg
shll
loop
std
fstpl
mov
push
mov
or
popa
jg
sahf
repz
nop
cmc
fildll
jecxz
shrb
inc
inc
mov
pusha
and
xor
pusha
loop
add
cmp
sbb
cmpl
fdivrl
mov
fcmovnbe
sbb
mov
aas
sbb
adc
add
bound
pushl
sub
mov
or
sti
pop
mulb
and
pop
pop
pop
mov
pusha
mov
adc
lcall
mov
push
push
pop
xor
push
pop
inc
mov
jbe
xchg
notb
pushf
and
in
xchg
mov
jle
inc
test
lahf
lcall
out
or
aad
outsl
andl
and
ljmp
dec
mov
daa
pop
data16
dec
daa
pop
inc
addr16
cli
repz
pusha
outsb
add
cmp
pop
dec
pop
scas
inc
cmpsl
lods
mov
xor
push
jns
lret
adc
fwait
pop
lea
xchg
aas
xor
mov
loopne
push
es
xor
cwtl
popa
mov
mov
dec
lods
fs
and
push
sub
mov
ds
movb
ja
imul
push
add
pop
xchg
mov
adc
xor
cmp
outsb
pop
add
int3
add
out
in
jnp
push
ja
xchg
mov
ficompl
loope
sub
pop
xlat
or
and
jp
cmp
jnp
push
out
aas
xor
jp
and
mov
dec
adc
mov
mov
sbb
stos
sbb
cwtl
outsl
push
lea
imul
jo
sar
mov
clc
mov
icebp
cmpl
or
inc
pop
jnp
cld
and
rorb
mov
and
outsl
mov
sbb
out
mov
outsl
lret
mov
push
movb
testb
xor
fcmovu
cmp
cld
and
ja
rclb
insb
inc
test
adc
sbb
mov
xor
js
stos
xchg
lds
jb
cmp
ja
mov
dec
nop
repnz
jns
mov
test
cmp
pop
xchg
lock
pop
mov
xlat
movsl
xchg
jns
cmpsb
mov
pop
sbb
clc
lods
lods
std
sbb
fs
insl
and
inc
popa
xlat
cltd
push
mov
mov
inc
or
pop
loop
xor
dec
mov
icebp
pop
fxch
fwait
jge
movl
xchg
je
data16
cwtl
in
bound
cwtl
push
mov
scas
mov
xor
sahf
fmull
inc
xchg
dec
inc
adc
mov
daa
adc
repnz
pop
lcall
inc
or
adc
jns
ds
sub
into
sbb
scas
test
add
xor
nop
push
mulb
cmp
movsb
push
xor
divl
into
imul
pop
xchg
pop
or
mov
or
add
xchg
cmp
add
or
imul
push
adc
ret
jae
inc
jo
icebp
mov
subl
mov
sbb
fwait
cmpsl
std
mov
push
cmc
out
mov
xchg
out
add
jne
jge
das
push
inc
mov
pop
jnp
pop
jo
sub
repz
in
jbe
cmpsl
add
push
cmpsb
pop
in
mov
jne
mov
fs
dec
pop
into
addl
ja
ret
pop
mov
test
popa
cmp
enter
inc
add
in
or
aam
pusha
pop
scas
shll
mov
out
push
xchg
adc
mov
and
adc
push
xchg
cmp
jge
cli
pop
and
push
xlat
or
movsb
push
ret
cmc
xchg
jmp
jmp
and
sbb
cmp
mov
cmp
inc
or
inc
inc
lcall
inc
xor
push
xchg
rcr
adc
cmc
cld
sahf
inc
add
addl
fbstp
cld
lret
mov
jle
dec
scas
frstor
pop
cld
fildl
enter
in
sbb
sahf
push
negl
out
dec
xor
jge
xor
hlt
sbb
popf
cmp
fistpl
test
ss
xor
repz
sbb
xor
sub
lods
pop
xlat
cmp
scas
gs
into
sbb
push
js
in
sbb
sbb
push
mov
or
or
xchg
inc
mov
in
das
jl
nop
push
jge
lds
outsb
pop
push
add
pop
mov
adc
inc
mov
sbb
cmp
inc
cld
adc
ficompl
test
jae
adc
test
push
aam
jb
lock
ss
jnp
sbb
inc
mov
ret
pop
pop
xchg
movsb
jmp
pop
sub
js
jecxz
xchg
negl
leave
add
jle
loop
xor
je
mov
nop
adc
movsl
xchg
push
xchg
outsl
popa
dec
push
mov
dec
fdivrp
add
out
dec
lret
in
or
dec
je
and
push
push
cltd
cli
dec
lahf
fcmovnbe
sahf
test
insb
out
xchg
mov
mov
jle
addr16
movsb
insb
dec
lret
inc
cmp
xchg
or
in
cwtl
bound
les
adc
push
aam
nop
fbld
mov
inc
nop
in
sbb
cld
ds
adc
in
nop
ja
pop
call
sbbb
xchg
ja
test
dec
lods
mov
cld
adc
sbbb
cli
jl
and
rol
test
mov
and
fwait
sti
ret
or
adc
dec
mov
push
mov
or
mov
iret
lret
jno
cmp
aam
sahf
xchg
aas
fcmovnb
sti
je
cli
inc
in
jnp
mov
inc
insb
cld
add
dec
inc
test
das
je
loope
push
mov
sub
push
push
dec
shlb
jb
jbe
dec
in
push
xor
imul
push
rorl
data16
into
popa
hlt
fidivrl
subl
xor
push
test
cltd
xor
mov
mov
xor
cs
mov
lret
mov
aad
pop
adc
add
and
push
add
jnp
mov
lret
sahf
fcoml
push
das
push
std
stc
pop
adc
push
cmp
push
call
cmp
mov
mov
push
test
dec
mov
sahf
inc
std
xchg
rcrl
push
pop
sub
fistl
xchg
in
add
jne
aas
cmp
call
stc
push
scas
cmp
ret
shr
adc
mov
cmpl
adc
sbb
jnp
cmp
cmp
cmpsl
inc
call
lods
inc
leave
les
outsb
jo
jbe
add
mov
push
mov
pop
mov
jo
push
jge
mov
cmp
jl
test
push
xor
fwait
mov
test
jg
test
out
and
xlat
std
inc
fcomp
pop
inc
and
dec
out
ret
insl
or
push
in
sub
ret
aam
add
and
das
inc
sub
inc
lds
dec
test
stc
lock
orb
mov
lods
jne
fs
cmp
mov
dec
into
cli
in
mov
mov
mov
fcoml
lcall
int
pop
test
or
xchg
lods
mov
ds
mov
and
fsubp
and
or
add
into
pop
xchg
sub
jge
xor
xchg
inc
nop
xor
xor
and
mov
imul
jp
cmp
jnp
dec
mov
stos
mov
xchg
push
jbe
into
cmp
movsb
mov
mov
dec
mov
cltd
insl
pop
add
fdivr
lods
jne
jg
or
sahf
ret
std
repz
jg
or
mov
mov
in
mov
call
mov
jecxz
sbb
out
fmuls
and
mov
out
dec
push
cmp
push
pop
into
and
das
add
mov
jb
mov
mov
jno
inc
loop
shl
sub
sahf
ss
stos
ljmp
push
ja
insl
mov
mov
aas
dec
and
push
jl
or
push
iret
pushf
sbb
push
adc
jmp
pop
push
imulb
mulb
pusha
sub
sub
lock
ret
mov
test
lret
sbb
cmp
cwtl
xchg
jb
orl
inc
dec
test
outsb
sub
dec
push
jb,pt
jno
negb
aam
flds
jmp
add
fisttpl
dec
in
enter
xchg
ljmp
pop
jge
sub
imull
lret
push
lahf
sub
daa
ffree
mov
mov
add
ss
fcoml
cmpsb
sub
ss
sub
fdiv
mov
add
test
or
cmp
outsb
fdivr
xchg
pop
mov
rolb
mov
pusha
cmpsl
lds
push
mov
sub
mov
cltd
fisttpll
ja
xlat
inc
mov
nop
jecxz
mov
cmpsl
fildll
out
ljmp
ret
sbb
mov
rcr
mov
pop
xchg
dec
adc
aas
mov
pop
test
pop
add
jbe
pop
mov
lret
xorl
xor
test
ret
push
jb
sti
call
mov
ljmp
cmp
jg
push
dec
cld
into
mov
mov
mov
cli
pushf
xor
imul
xchg
aad
ss
or
jl
xchg
mov
mov
mov
mov
inc
scas
pop
cmpsb
imul
or
cs
push
into
scas
sbb
in
mov
imul
scas
xchg
cmp
lahf
filds
add
cmp
in
jmp
push
lock
lea
cmp
cmovns
inc
je
lcall
orb
ds
push
ja
mov
sbbl
and
and
mov
roll
push
lahf
sahf
subb
ljmp
hlt
mov
mov
int
and
xor
jb
pop
mov
push
or
pop
sbb
out
in
insb
sti
and
loopne
ror
cmpsl
xchg
push
adc
or
pop
and
push
popf
loopne
repz
ja
xchg
xor
mov
cli
test
dec
xor
push
lret
out
inc
leave
test
loop
insb
mov
push
mov
push
loope
pop
push
cs
les
sar
orb
add
inc
sub
xchg
and
jno
jne
jae
mov
mov
sti
filds
mov
jae
xor
leave
in
jne
icebp
sarb
push
addr16
test
daa
xor
adc
and
or
add
inc
or
subb
or
in
stos
pop
testb
jg
or
enter
rol
cltd
ret
dec
dec
adc
sahf
mov
adc
cmp
out
popf
jns
outsb
scas
mov
cmp
adc
lods
adc
subb
and
in
daa
mov
mov
cmp
push
inc
test
aaa
loope
std
jae
inc
xlat
cld
clc
testl
add
jle
out
daa
divb
lret
je
or
fdivl
or
mov
in
enter
cmp
packuswb
das
shlb
jmp
mov
sub
push
mov
cmpsl
aas
and
sbb
sub
adc
imul
imul
cmpsl
mov
push
in
inc
shlb
push
insl
push
scas
adc
popf
loop
stos
rclb
inc
xchg
inc
cmp
add
scas
inc
lahf
mov
imul
xlat
sub
adc
es
push
ror
adc
add
lret
in
or
aaa
cld
mov
xchg
and
sbb
out
test
mov
xchg
sarb
fdivrs
pop
jb
mov
notb
cmp
pop
sub
ja
jp
mov
cmp
or
pop
sub
sbb
or
xchg
movsb
inc
mov
out
pop
popf
mov
sbb
jmp
xor
mov
xchg
xlat
frstor
test
in
mov
and
dec
lcall
sub
pop
leave
ja
imul
shl
dec
ret
inc
call
mov
nop
movsb
fisubrl
mov
add
pusha
cmp
and
mulb
pop
bound
test
mov
subb
xchg
jg
inc
lcall
adc
pop
inc
fstpt
cmp
push
ds
push
cmpsb
and
addb
cmp
or
push
lcall
mov
fs
fisubrs
mov
aaa
or
in
lahf
test
cs
xor
in
jne
sbb
and
outsb
loop
lahf
xor
dec
gs
mov
in
sub
mov
into
ljmp
add
mov
lea
sarl
pop
ja
and
pop
dec
or
push
adc
add
push
mov
mov
ffreep
mov
mov
outsb
sub
add
xchg
and
and
mov
test
mov
sbb
sub
mov
leave
jne
es
push
loopne
cli
shl
std
es
dec
xchg
or
fiadds
in
xor
adc
das
xchg
rcrl
sub
mov
outsb
or
and
pushf
es
push
adc
orl
add
jle
push
xor
xor
enter
mov
sbb
pop
add
mov
and
push
or
dec
jne
loope
sarb
scas
mov
push
and
jmp
pop
loopne
xchg
push
pusha
push
adc
sti
add
sahf
movsb
neg
call
add
clc
jns
pop
inc
cmp
shll
popf
movsl
mov
xchg
sub
fimull
or
cli
pop
hlt
mov
sbb
sub
inc
jmp
sub
lcall
push
das
or
movsb
pop
pop
push
push
loop
loopne
rcr
add
xor
les
xor
loope
std
jbe
out
call
movsb
call
jmp
in
mov
lret
out
push
mov
mov
scas
rorl
jecxz
ljmp
mov
adc
inc
cld
test
cmc
jle
pop
out
sub
fisttpl
pop
xlat
sbb
fbld
adc
sub
push
xchg
fadds
arpl
into
test
xchg
cwtl
jae
mov
fidivl
adc
movsb
loope
out
leave
adc
fcoml
mov
rorl
add
sub
mov
dec
push
dec
test
xor
mov
imul
pop
arpl
in
loopne
sti
fcompl
repnz
cltd
andb
ret
mov
js
mov
test
adc
insb
lods
pusha
xchg
daa
adc
xchg
in
daa
xchg
xlat
je
jns
dec
rol
lahf
mov
mov
loopne
js
or
xchg
xor
push
mov
outsb
arpl
jge
sub
rorl
and
ss
adc
mov
pop
bound
add
mov
sbb
xor
mov
and
lahf
fwait
ja
insl
mov
cmpsb
push
fscale
ret
push
xlat
ds
xchg
ret
es
sbb
and
push
xchg
scas
aad
aaa
popf
ret
mov
iret
fistps
cmc
fldcw
aad
scas
pop
aam
sbb
jbe
mov
cmp
lret
cmpsb
add
dec
std
cli
or
xor
add
lcall
loopne
loopne
mov
dec
js
mov
adc
lret
enter
dec
test
cltd
pop
adc
cltd
stos
sarb
call
arpl
add
push
test
sarb
ss
lcall
stos
clc
pop
fimuls
push
pop
stos
out
hlt
ja
sbb
mov
mov
mov
pop
jno
mov
adc
or
adc
stos
mov
mov
add
add
scas
xor
out
xlat
mov
cmp
popa
movsb
push
sbb
jo
stos
or
xchg
lcall
aaa
jp
repnz
outsb
xlat
xchg
xlat
cmc
xlat
sarl
in
lds
sbb
cmpsl
ror
adc
loopne
sub
xor
std
sbb
adcb
mov
fsts
jo
sub
mov
xor
in
cmp
test
fwait
mov
or
inc
xchg
mov
test
xchg
icebp
xor
mov
stos
movsl
jns
push
xor
out
push
or
scas
ret
mov
sub
ds
pop
out
lret
pop
mov
xchg
xchg
mov
andl
pop
dec
in
outsb
aad
ss
and
mov
cmp
pop
xchg
jle
fs
pop
xor
push
cmc
movsl
adc
call
adc
fcompl
push
push
jb
insb
or
int
or
adc
and
mov
addr16
movsb
jnp
jge,pt
jl
or
ror
movsb
cld
mov
lea
inc
sahf
cmp
and
dec
outsl
or
movl
mov
sbb
rcrb
mov
into
movl
nop
add
fnsave
jns
call
add
xchg
jo
ficomps
pop
and
mov
ja
inc
push
adcl
xlat
mov
pusha
daa
cmp
push
or
jecxz
mov
xchg
ds
lds
fists
pop
pop
dec
loop
shll
mov
xchg
mov
sarb
andl
sbb
or
mov
jae
cmp
scas
aaa
inc
xchg
sahf
jecxz
pop
push
push
or
push
ret
sub
pusha
stc
sbb
mov
arpl
ficomps
pop
fwait
dec
popf
ljmp
push
repz
or
mov
imul
out
pop
or
pushf
lds
and
push
addl
mov
mov
dec
jbe
iret
inc
cmp
testl
stos
ds
inc
sbb
add
jb
jae
mov
insl
xor
movsl
adc
mov
in
stc
rclb
and
jbe
test
fldenv
jge,pt
pop
rorb
pop
sti
cmpsb
sub
imul
movsl
jp
inc
popf
fdivs
imul
mov
inc
imul
mov
xor
cmp
idivb
add
fidivrs
mov
cmc
lahf
mov
add
lret
aaa
mov
jne
add
or
call
add
jecxz
mov
pop
out
add
inc
mov
aas
xor
add
decl
sti
adc
mov
xchg
xchg
and
jno
adc
mov
jmp
or
mov
adc
push
push
inc
jle,pn
call
addb
sub
mov
sub
out
outsb
jne
pop
aaa
insb
sbb
mov
repz
dec
outsl
hlt
pop
enter
daa
push
dec
test
movsb
lret
cmp
xchg
and
or
ds
sub
fidivrl
or
movsl
fldt
pop
shrb
mov
mov
and
andl
fists
ficoms
rclb
sbb
out
cmc
int3
hlt
loopne
mov
popa
aas
mov
and
mull
pop
push
mov
and
mov
loopne
imul
pop
lods
pushf
cmp
cmc
movsl
add
and
and
outsb
arpl
js
test
jbe
or
pusha
xorl
shll
add
mov
stos
cmp
add
mov
fcmove
mov
sub
cs
dec
loop
sahf
icebp
mov
out
mov
jl
rclb
shrb
popa
out
push
mov
pop
jae
sub
mov
adc
xor
push
ret
pushf
hlt
cmp
mov
mov
iret
add
nop
mov
flds
aas
loope
jae
jb
and
lds
add
push
or
and
mov
insl
jg
mov
fdivrl
divb
sbb
cwtl
jecxz
mov
negl
xchg
cmp
jmp
lock
push
jae
xor
adc
cmpsl
mov
adc
fimull
adc
and
outsb
sbb
subl
adc
add
shlb
cmp
push
jp
and
lods
dec
ret
cltd
ret
mov
mov
push
mov
in
xchg
adc
enter
adc
xchg
subl
pop
sub
sti
pshufw
jp
outsl
jnp
xchg
sub
outsl
insl
and
lcall
mov
out
jns
jno
dec
mov
idivb
hlt
daa
xchg
aam
jmp
xorl
mov
dec
xchg
leave
stc
bound
das
and
ss
movsl
inc
es
xchg
stc
in
dec
mov
inc
js
or
adcl
xor
mov
pop
shlb
repnz
sar
popa
sub
mov
call
test
sbb
scas
cmp
inc
rcrb
daa
inc
jne
sbb
les
out
je
addr16
sub
pop
jb
outsl
sbb
leave
or
or
cmp
popa
sub
mov
insl
mov
mov
cmpsb
paddw
repnz
jmp
icebp
outsb
jo
pushf
jns
and
cli
movsl
jae
inc
xor
pop
xchg
sbb
orb
sbb
rcr
movsl
dec
mov
and
popf
pop
shll
lds
andl
adcl
pop
loop
adcl
ljmp
mov
add
test
mov
jp
icebp
and
fistpl
dec
xor
mov
or
cmp
inc
adc
sbb
scas
xor
int
pop
imul
lods
roll
mov
push
add
movsb
inc
loopne
imul
outsl
adc
inc
add
adc
mov
mov
pop
mov
incl
inc
movsl
pusha
fs
testb
adc
sbb
out
inc
cwtl
mov
cmpsb
inc
dec
ret
adc
jmp
aad
cmp
in
mov
cld
add
mov
daa
mov
adc
cs
cmp
xorb
outsl
xor
or
xchg
xor
xlat
test
inc
sub
enter
out
cmpsb
ljmp
mov
cmp
mov
push
mov
mov
adc
std
xorb
or
sub
icebp
push
fimuls
call
notl
xchg
cmp
sub
ss
orl
mov
test
cmp
leave
sbb
mov
popf
clc
ret
push
hlt
leave
dec
out
insl
jae
or
add
fstpl
cs
outsl
movlhps
icebp
out
insl
mov
sub
aad
aam
mov
leave
rclb
in
inc
ficompl
sahf
push
mov
insb
clc
aaa
inc
and
jg
cmp
call
xchg
lcall
das
lcall
mov
mov
out
bound
out
mov
mov
xchg
push
sub
xlat
mov
loopne
fs
addb
jge
cmpsb
sbb
test
into
out
sbb
adc
ljmp
outsl
sbb
iret
cmp
leave
jle
push
cmp
in
push
lcall
les
jns
daa
adc
les
mov
pop
adc
pop
lods
mov
pop
leave
dec
rcrl
or
jne
imul
sahf
pop
dec
ret
jl
sbb
xchg
negb
rolb
and
pop
sub
xlat
cltd
jbe
jge
push
insb
push
jmp
loopne
cmpsl
mov
add
pop
jge
mov
cmp
pop
xchg
leave
xor
cmp
or
out
pushf
arpl
mov
mov
inc
push
xchg
lea
jae
sahf
jmp
pop
sbb
std
dec
xchg
xchg
push
test
push
sub
lock
jbe
sbb
xor
bound
jns
fisubrs
inc
rcr
stc
repz
faddl
adc
xchg
popa
xchg
cmp
push
push
es
dec
push
dec
cwtl
inc
push
fstl
jno
pop
loopne
out
sbb
std
adcb
xchg
mov
and
or
pop
fbstp
adc
dec
xchg
mov
sarl
bound
mov
inc
dec
in
or
cmp
and
lods
dec
add
dec
sbb
xor
mov
dec
fxch
sbb
xchg
repz
mov
nop
dec
les
nop
or
adc
xchg
je
xor
inc
imul
or
hlt
in
xchg
loope
pop
jbe
ljmp
push
jle
jae
push
cmp
cmc
add
sbb
hlt
out
sbbl
xchg
addr16
aam
inc
rorl
jp
lcall
jg
pop
outsb
push
sbb
push
leave
or
dec
nop
mov
xlat
test
int
dec
pop
mov
mov
and
and
lret
inc
test
add
les
fiadds
and
and
leave
inc
cmp
addr16
data16
mov
jne
std
xor
cs
mov
mov
mov
das
and
mov
sbb
fsubrs
shlb
movsb
lock
and
dec
fldt
test
imulb
dec
je
mov
inc
xor
aad
xlat
cmp
jle
sbb
mov
mov
mov
mov
movsl
xchg
mov
mov
dec
cwtl
add
lea
repnz
jp
lahf
mov
jno
es
les
cmpsb
int3
imull
mov
dec
and
shlb
push
adc
lret
adc
js
inc
out
fmull
or
jae
xor
and
test
bound
cmp
pushl
pop
inc
notb
lock
pop
imul
push
pop
call
jge
or
das
loope
outsb
jo
xchg
pop
xchg
fmul
sub
sbb
adc
jg
jns
sahf
aam
xor
pop
pop
xor
lock
xchg
or
add
push
inc
in
shll
stc
jp
outsb
push
sbb
cs
cmp
sub
push
lods
mov
inc
xchg
mov
fsub
rcrl
mov
xor
lret
out
sbbb
mov
or
jb
push
ret
daa
bswap
enter
pop
or
cmp
sbb
inc
mov
or
inc
popa
int
pop
mov
das
data16
fcomps
fisttps
mov
sbb
lea
insb
mov
inc
subb
test
add
add
inc
inc
gs
pop
lret
pop
mov
aad
loope
pop
jg
xor
add
push
and
into
movsb
inc
pop
loopne
jno
shll
insb
mov
ljmp
cmp
mov
xchg
into
rorb
mov
aas
or
movsl
mulb
es
sbb
jge
sub
cltd
pop
cwtl
lret
push
mov
roll
inc
mov
mov
addr16
repz
push
arpl
jecxz
insl
test
cmp
das
jae
insl
mov
lds
addb
sahf
lea
mov
push
insb
nopl
cmp
add
mov
mov
fwait
push
mov
xlat
sub
add
cltd
dec
stos
ret
jno
or
cmpsl
and
push
mov
fistpl
xor
jp
push
mov
xor
cmp
jp
loope
cmp
fwait
or
dec
lock
sub
xor
lret
mov
cmp
loop
sbb
pop
mov
cmp
xchg
movsl
aas
sti
jmp
adc
mov
je
mov
testb
in
orb
cli
mov
pop
jbe
pusha
or
cs
xor
test
lret
pop
fidivs
imul
into
shlb
js
add
sub
pop
fs
gs
ret
push
inc
jae
sbb
or
pop
xor
sbb
es
inc
mov
leave
push
pop
ljmp
mov
insb
aaa
add
jecxz
sub
mov
lods
sub
lea
push
lds
pop
mov
fcompl
mov
in
aad
pop
pop
aaa
jnp
mov
xchg
jb
cmpsb
xchg
fisttpll
and
jmp
lods
ljmp
push
lds
in
push
xchg
jo
pop
pop
lds
aam
xor
pop
pop
repnz
mov
sbb
cmp
loopne
mov
jl
xchg
les
lds
push
dec
lock
orb
sti
jp
xchg
fistpl
mov
insb
inc
fwait
inc
cli
sbb
repz
adc
js
popf
scas
or
decl
sbb
insb
or
fidivrl
adc
push
clc
xchg
and
push
sub
mov
adc
adc
xor
leave
jmp
jle
lds
mov
push
pop
test
or
sti
dec
xchg
adc
jnp
jbe
dec
mov
jecxz
mov
mov
ds
sbbl
dec
sbb
or
sbb
lret
add
adc
sub
jge
pop
lock
jo
insl
dec
xor
sbb
xchg
or
jns
mov
push
ret
roll
sbb
aad
sbb
cmp
or
mov
or
inc
mov
inc
or
in
jb
sub
out
outsb
or
pop
aad
sub
outsl
jg
cmc
imul
loop
sbb
test
rolb
shrl
xchg
xlat
mov
out
test
jmp
inc
in
test
subb
out
mov
mov
das
pop
dec
andl
pop
mov
ds
fbstp
dec
out
mov
sbb
imul
jb
and
xor
daa
and
in
lcall
scas
push
jmp
jae
sub
lret
pop
mov
sub
xchg
mov
stc
pusha
pop
lahf
jae
jb
xor
cld
sbb
test
hlt
int
inc
hlt
ja
fcompl
dec
rolb
pop
icebp
xlat
xchg
mov
inc
xchg
bound
add
sarl
mov
es
and
adc
stos
mov
les
add
stos
out
cwtl
cmp
ret
decb
les
mov
sarl
sub
out
bound
push
popa
jle
out
xchg
mov
out
lea
jmp
inc
inc
out
sahf
cmpl
or
push
mov
xchg
mov
jne
mov
jae
shlb
pop
xchg
je
xchg
push
sbb
ret
mov
xchg
fildl
mov
push
aas
mov
mov
shll
mov
cmpsl
pop
push
and
imul
cwtl
adc
scas
mov
jp
add
rol
xor
inc
fstps
add
jae
inc
movsl
aas
cmp
std
mov
xor
ret
cmp
add
dec
xor
into
nop
xchg
mov
nop
mov
xor
cmc
out
push
test
clc
arpl
xchg
xor
sub
fisubrs
push
pop
std
mov
fdivrs
int3
in
inc
mov
inc
and
push
add
jg
mov
sub
pop
xor
inc
repnz
xchg
dec
push
negl
lcall
dec
xor
jo
orb
cmc
sbb
sub
jae
adc
cmp
test
xor
adc
stos
out
out
pop
subb
push
into
aad
fnstsw
mov
decb
push
jbe
jnp
cmp
mov
sbb
les
pop
dec
push
add
adc
jmp
cmp
cmc
push
or
bound
fs
push
int3
sub
popa
iret
mov
outsb
lock
inc
inc
sti
cmp
jne
xor
jle
or
std
and
test
dec
jbe
mov
in
outsl
cmp
xchg
orb
and
addr16
jbe
xchg
push
in
or
movsb
ret
lods
shlb
rorb
imul
xchg
aaa
sti
add
jns
rcll
pop
orb
and
xlat
lea
xor
mov
aas
int
in
stos
out
movsl
adc
pop
mov
and
push
jmp
out
cmpsl
xor
xor
jb
in
xor
or
cli
popa
mov
and
pushf
jp
lret
aam
lcall
sub
scas
fimull
add
jl
mov
mov
inc
call
xchg
inc
xchg
push
lcall
sbbb
stos
xchg
cmp
orl
shr
inc
mov
jns
cld
pop
andl
stos
lods
cmpb
cmpsl
mov
fisttps
nop
divl
dec
mov
adc
addr16
popf
xchg
roll
daa
repz
add
xor
xchg
jecxz
inc
shlb
shlb
pop
adc
ljmp
mov
out
repnz
xor
mov
adc
mov
ljmp
inc
inc
and
gs
addr16
mov
push
repz
or
mov
ds
jno
adc
adc
andl
aam
lods
js
bound
xor
ret
sbb
aas
jge
mov
and
cmp
sub
ret
jae
push
inc
cmp
adc
test
mov
shlb
inc
jle
or
outsl
fs
imul
cltd
pusha
shll
jl
lahf
jecxz
sub
cmp
jge
mov
test
stc
sbb
jb
ds
lea
cld
shrl
mov
cmp
call
lods
jl
fwait
dec
aam
es
cmp
jl
clc
sbb
adc
sarb
insb
mov
or
jmp
mov
lds
sub
add
movsb
or
mov
fimull
divl
mov
sbbl
cmp
inc
mov
sub
enter
xor
mov
adcl
insb
push
mov
jg
fmul
xchg
xlat
inc
cmc
icebp
pop
shrb
outsb
ret
sub
in
jge
and
in
or
dec
mov
jns
push
movsb
add
mov
test
lock
xor
fs
dec
adc
xchg
fbstp
push
push
ja
ja
inc
push
popf
xchg
test
out
mov
addr16
mov
xchg
mull
mov
popa
arpl
xchg
sub
mov
lods
subl
push
es
xor
stos
or
sub
out
lret
inc
cmp
xlat
fmuls
add
stc
push
mov
shlb
test
push
testl
cmp
xlat
fstpl
sub
dec
mov
incl
cmp
aas
mov
das
add
push
pop
roll
in
xlat
movsb
pop
mov
xchg
ljmp
lcall
and
dec
pushf
push
in
pusha
pop
xchg
mov
mov
lock
std
bnd
fs
arpl
daa
xchg
add
sbb
sahf
sarl
dec
sub
pop
rcrl
loopne
cmp
cmpsb
dec
jmp
add
daa
and
arpl
scas
mov
push
inc
push
sub
cmp
dec
arpl
xor
cmpsl
out
das
inc
imulb
cmp
push
mov
pop
lcall
aad
inc
sbb
jno
andb
jp
or
mov
mov
out
jae
jne
or
ds
cmp
xor
mov
cmpsb
push
daa
sbb
and
in
ss
push
mov
jae
inc
into
xor
adc
sbb
adc
nop
icebp
jo
movsb
pop
pop
mov
in
sbb
push
add
add
fbld
adc
pusha
xchg
mov
out
fistpl
mov
cwtl
mov
pop
add
xchg
inc
inc
fiadds
es
sti
test
repz
sbb
inc
call
stos
cld
dec
lret
or
mov
mov
cmp
movl
scas
mov
cmpsb
mov
inc
pop
xchg
in
cmpl
mov
out
loop
cmp
sarb
stos
fistl
jmp
ret
cwtl
jne
repz
sbb
sti
ret
out
and
int
mov
dec
loop
xor
inc
dec
dec
cwtl
imul
sbb
push
fiadds
test
icebp
notb
xor
frstor
hlt
insb
push
jmp
fstl
test
fcmovnbe
push
test
rorb
mov
decb
je
mov
fdivrl
cld
jae
ss
int
stc
stc
lahf
subb
adc
xchg
push
dec
push
adc
push
out
popa
lock
sbb
aas
mov
push
lahf
xchg
pop
xorl
cmpsl
jne
mov
jle
sbb
mov
int
cmp
dec
dec
jae
imul
inc
sbb
sbb
js
mov
mov
jb
pusha
push
fdivrs
sbb
outsl
dec
xor
outsb
push
out
jne
nop
mov
aas
aam
scas
test
sbb
mov
add
mov
ss
inc
sub
fbld
xchg
mov
xor
mov
shl
add
sbb
aad
mov
pop
jmp
movsl
push
ja
inc
cli
cs
popa
cmpsb
sti
das
xor
mov
sub
adc
push
shrb
mov
sbb
mov
loopne
or
and
movsl
jne
xor
sub
pop
inc
scas
les
loope
push
xorb
rclb
scas
fmulp
mov
sbb
in
addr16
and
aam
and
mov
enter
sarb
adc
pop
aaa
jnp
mov
mov
addr16
mov
rcrl
mov
and
add
inc
rcrl
pop
loope
pop
int
scas
push
pop
xor
test
mov
fimull
add
mov
int3
push
xor
add
mov
loopne
lods
or
sub
cmpb
cs
cmp
jnp
lahf
movsb
and
mov
cmp
fcomp
shrb
or
out
ss
push
fdivrl
or
inc
movsb
shrb
pushf
sahf
xchg
xor
xchg
jle
iret
and
jl
repz
ret
sub
test
fwait
cmpl
inc
cwtl
or
into
in
pop
mov
push
negb
pop
xchg
outsl
add
lods
or
bound
dec
js
test
adc
bswap
inc
xor
dec
pop
notb
inc
fcompl
add
jnp
jle
inc
cmp
ret
xchg
adc
cmc
jns
jns
jns
test
roll
xchg
ficoml
test
pop
int
dec
adc
and
mov
mov
adcb
stc
pop
ret
sysexit
mov
adc
or
and
mov
shl
mov
pop
push
xchg
bound
ds
aad
mov
push
xchg
test
nop
sbbl
cmp
jae
adc
and
lock
inc
mov
pop
adc
inc
push
and
push
inc
test
pop
cli
outsb
fs
xchg
sub
mov
out
or
xor
fisttpll
rolb
pop
in
add
xor
jb
sub
pop
sti
sbb
ja
stos
inc
xor
lock
or
adc
adc
or
icebp
aaa
sbb
mov
rcr
imul
push
test
jbe
mov
loope
jecxz
sub
stc
loop
jnp
mov
cmpsl
and
xchg
sub
lods
xchg
ret
in
out
iret
xor
dec
cmp
arpl
jg
popf
stc
addr16
iret
and
das
out
sub
push
dec
mov
frstor
sbb
pop
dec
inc
xchg
ss
out
test
mov
jno
dec
popa
sub
rcrb
shlb
adc
mov
jecxz
movsb
rorb
in
and
push
mov
les
jp
inc
roll
sub
push
mov
xorb
lods
mov
adc
add
inc
sub
add
iret
cmc
pop
outsb
or
jns
xchg
xchg
push
mov
mov
cmp
sti
xchg
jp
lret
test
sbb
out
leave
stos
out
add
add
and
insb
cmp
xchg
flds
add
insb
into
lods
sub
inc
clc
jg
adc
mov
sub
dec
fwait
jne
out
jno
lods
sbb
sbb
pop
les
je
scas
add
movntq
sub
xchg
mov
mov
js
or
stos
xchg
je
jbe
punpckhdq
insl
dec
dec
and
push
loop
mov
add
cmp
xchg
jl
xor
jne
int
inc
and
popf
repnz
xor
es
movsb
and
or
jno
mul
mov
cwtl
push
push
and
int
pop
mov
ljmp
and
mov
jmp
push
lea
or
push
pop
xchg
fwait
or
outsb
fmul
repnz
mov
xchg
dec
testb
sbb
pop
sub
mov
xchg
fnstcw
add
shlb
sub
call
mov
sub
mov
sub
shl
fld
add
scas
and
add
add
pop
insb
movl
out
mov
stc
cmc
mov
mov
pop
fbld
aas
pop
xchg
lods
mov
adc
ljmp
sbb
xor
sahf
xchg
mov
mov
shrl
mov
lcall
or
insb
add
out
mov
into
xchg
mov
xchg
jmp
stos
arpl
not
ljmp
jnp
testl
insl
xchg
mov
mov
scas
stc
pop
push
inc
dec
sub
sub
or
iret
mov
sbb
mov
xchg
ja
call
inc
mov
jnp
mov
loopne
xchg
scas
fbstp
pop
cmp
loop
in
repz
pop
jge
stos
ja
xlat
dec
cmp
iret
xor
and
fdivl
pusha
push
stos
icebp
test
les
fs
mov
divl
sub
mov
jae
out
insl
bnd
sbb
insl
mov
fisubrs
int
bound
out
shll
xchg
lock
call
dec
cmp
cld
xchg
jmp
mov
add
imul
pop
sub
xor
adc
push
fisubrs
sbb
jle
xor
test
dec
jae
data16
and
sbb
fmuls
out
xchg
and
fstpt
sub
xor
popl
xlat
insb
enter
xor
push
mov
out
movsl
dec
ror
mov
popa
inc
fnsave
ss
mov
sbb
push
insl
in
fcoms
mov
aas
imul
push
dec
fisubl
pop
movsl
sub
lahf
lods
push
fs
pop
mov
divl
jno
add
pusha
push
outsb
pop
xor
mov
and
mov
and
fisubs
jb
mov
lret
insb
sbbl
push
pushf
mov
cmp
pop
fld
pop
sbb
call
dec
imul
mov
arpl
xchg
lret
jae
xor
ja
test
xchg
bound
mov
sbb
add
mov
gs
or
dec
mov
iret
adc
dec
xchg
mov
in
test
repnz
fists
mov
add
out
incb
sbb
loop
jns
sarl
mov
in
xor
cmp
ss
inc
leave
pop
aad
cs
pop
fs
mov
mov
inc
inc
dec
clc
push
lahf
xor
test
aaa
inc
cmc
ds
and
add
mov
jg
mov
imul
add
jne
ja
or
inc
popf
dec
push
mov
jno
mov
repnz
dec
fidivrs
cmc
mov
hlt
das
rorl
fxtract
jbe
lahf
xchg
je
js
add
mov
sahf
shlb
leave
dec
xor
leave
xlat
push
in
pop
adc
inc
shrl
mov
int3
fidivrl
fdivr
jmp
test
jbe
loope
push
ja
mov
in
subb
dec
mov
fs
loopne
cmpsl
or
push
adc
mov
mov
mov
lahf
faddp
testb
lret
leave
xor
outsb
lret
and
sbb
pop
adc
mov
and
in
repnz
outsl
lret
push
adc
push
shll
cltd
lret
sub
mov
adc
cmpsl
in
jb
sub
adc
lock
sbb
test
xchg
jae
leave
insb
hlt
dec
lret
js
aad
lcall
dec
imul
pop
add
sbb
ss
xchg
and
mov
push
mov
into
mov
ja
jle
ss
jbe
xchg
xchg
fwait
mov
xor
adc
fbstp
das
rcr
cltd
add
into
pop
jbe
adc
add
xor
pop
fisttps
sbb
dec
push
unpcklps
fildl
dec
in
sbb
data16
push
int
ljmp
aad
cmc
daa
outsb
xlat
push
and
das
pop
push
jmp
sub
in
not
int3
in
dec
cli
cli
movsb
and
and
mov
sub
jns
ss
mov
arpl
xor
iret
cmp
and
call
ret
push
out
inc
popa
and
in
xchg
addr16
daa
jns
push
dec
xor
xchg
pop
xlat
pusha
daa
mov
inc
add
sbb
cmpsb
loop
or
cld
mov
rol
mov
movsl
int3
and
mov
into
cmp
mov
or
stos
mov
sub
test
xchg
mov
jae
sbb
xor
mov
frstor
in
adc
pop
cwtl
adc
fimuls
or
sub
addr16
stc
jne
addr16
ret
push
pop
adc
inc
sub
out
pop
jle
jne
or
shll
mov
mov
mov
fists
das
cmp
gs
adc
adc
sbb
xor
xor
enter
adc
adc
xchg
push
jo
mov
mov
ja
jmp
out
in
jg
fstpl
inc
mov
test
pop
dec
loope
xor
test
xor
xor
mov
or
stos
je
mov
scas
inc
cmpsl
mov
leave
xorl
sub
aas
add
out
fdivrs
cli
popa
ja
mov
scas
cmc
xor
enter
inc
movsl
add
sub
subl
icebp
scas
jnp
push
inc
sti
inc
jecxz
pop
jns
data16
mov
in
jnp
das
jno
cmp
pop
cwtl
or
sti
add
fsts
pop
sbb
leave
mov
jno
jl
dec
sbb
pop
mov
out
lock
mov
hlt
das
adc
or
scas
daa
cmp
stos
cmp
sbb
jae
push
sub
ficomps
inc
mov
jge
or
push
and
icebp
sub
out
fists
xor
cmp
jecxz
insb
roll
popf
out
adc
sub
mov
jmp
lahf
fucom
pop
dec
mov
push
aad
sub
aam
lods
shl
mov
mov
sbb
outsl
jge
mov
mov
sbb
mov
scas
je
cltd
mov
sub
mov
dec
stos
jbe
pop
pop
cmp
cmpsl
imull
rol
jl
lahf
pop
fsubl
int
ljmp
sahf
or
inc
sti
mov
xor
mov
sbb
xchg
out
stos
mov
stos
lahf
iret
mov
fwait
mov
iret
push
insb
enter
nop
xor
jmp
push
imul
xor
js
lret
pop
push
adc
aas
sub
fmulp
int3
jmp
mov
lds
sub
mov
cmc
dec
dec
cmpsl
loop
push
lahf
inc
cmp
dec
stc
lock
mov
mov
std
and
xchg
lods
pop
mov
cmpsb
movsb
mov
pop
in
gs
and
push
imul
xchg
je,pn
mov
pop
xchg
dec
addr16
fstps
mov
test
jns
adc
mov
es
test
xlat
in
pushf
mov
sbb
add
and
cmp
mov
mul
xchg
pushf
in
pop
aad
ret
incl
cmp
gs
jbe
int3
lods
or
xor
push
add
mov
out
xchg
mov
loope
insb
mov
sbb
pop
rclb
jno
or
add
js
lds
cmp
add
imul
rep
dec
inc
xchg
xlat
jo
pop
stc
add
scas
xor
test
jecxz
lret
jae
mov
inc
cmp
fucomip
test
sahf
mov
sub
insb
and
adc
movsl
jl
lcall
pop
into
jns
pushf
js
inc
stos
or
gs
cli
orl
dec
movsb
add
pop
push
jne
call
lods
or
in
outsb
ret
cmp
dec
jnp
dec
lods
ss
jae
ss
aas
push
inc
divb
test
popa
adc
int
adc
mov
mov
mov
sahf
adc
imul
loope
ficoml
daa
lock
js
scas
push
jecxz
dec
mov
jl
cmp
mov
fwait
inc
jecxz
loopne
xchg
mov
pop
movsb
jno
das
mov
mov
int
cmc
xlat
mov
call
cli
push
aaa
out
mov
mov
sbb
adc
std
cli
or
loopne
imull
lds
fnstcw
dec
inc
pop
sbb
loope
mov
mov
repz
mov
fldt
notl
imull
lock
dec
mov
scas
jmp
push
jns
mov
mov
mov
push
sti
imul
push
or
or
into
pop
fwait
jmp
or
das
sbb
test
pop
add
test
lret
inc
sub
movb
push
and
loop
push
inc
and
add
sub
ja
mov
xor
inc
mov
roll
or
inc
adc
inc
xchg
jmp
mov
shlb
outsb
pop
pop
push
sbb
insb
movsb
leave
mov
mov
rcll
std
xor
outsl
lds
mov
outsl
xchg
and
imul
scas
xor
lahf
pusha
cmp
cmpb
mov
aam
outsl
pop
mov
pop
lds
xor
mov
inc
jmp
outsb
mov
call
and
imul
mov
lcall
aas
in
jae
or
and
lock
clc
fscale
push
test
in
xchg
mov
gs
imul
dec
pusha
je
stos
lea
jnp
mov
std
ljmp
and
es
repz
cmpsb
xchg
pop
pusha
nop
xor
mov
xor
call
adc
add
mov
push
aas
and
adc
cmp
push
add
sbb
sub
jno
scas
adc
lods
mov
mov
jne
mov
fsubp
mov
jl
icebp
fldt
pop
push
pop
xchg
xor
cli
jno
das
jle
lret
jmp
outsb
je
xor
cmp
in
fnsetpm(287
scas
inc
sbb
sub
pop
lret
mov
jae
jns
pop
jbe
out
adc
cli
and
or
jmp
out
test
inc
fisubrs
xor
daa
ja
ds
pushfw
cld
adc
pop
lahf
mov
inc
ds
xor
pop
sbb
stc
leave
pop
mov
addr16
dec
push
jmp
mov
mov
jp
test
mov
and
scas
fnstsw
lods
arpl
es
or
lock
mov
shl
sub
nop
add
mov
inc
lret
sub
or
mov
cmp
dec
out
cmp
mov
mov
popa
test
std
mov
xchg
sbb
cmp
aas
repz
aam
fcomps
repnz
inc
sahf
and
push
adc
repz
cs
ret
sbb
push
pop
add
cwtl
stc
fs
push
mov
sahf
js
or
aam
or
add
or
push
cmp
out
jl
and
mov
scas
shlb
cmpsb
inc
das
adc
cmp
or
xorb
jae
lret
loopne
cmp
popw
dec
pop
rol
add
mov
sub
dec
cmp
push
shr
jbe
leave
dec
int
rclb
int3
bound
pop
sub
xor
addr16
mov
xchg
sub
sub
shl
decl
and
jnp
add
jmp
loop
and
adc
mov
sub
cmp
cli
addl
cmc
mov
mov
repnz
pop
neg
sbb
ret
jmp
jno
push
push
pusha
push
inc
sti
jp
mov
sahf
ss
nop
popw
mov
dec
cmc
mov
jmp
lods
push
fcompl
push
adc
or
pop
lcall
xchg
and
jmp
xlat
or
movsb
dec
cmp
pop
jmp
movsl
inc
arpl
test
adc
jge
ret
imul
xor
cmp
push
adc
outsb
inc
sub
and
cmpsb
jge
pop
int3
sbb
lds
rclb
je
out
sbb
sub
push
std
js
pop
loopne
or
push
xchg
jg
jecxz
jae
fldl
jno
mov
mov
push
cltd
aaa
mov
xchg
jle
pop
sbb
pop
push
and
push
jnp
mov
add
pop
cmc
fs
jl
xorl
push
cmc
ret
xor
loop
mov
dec
or
fcomps
and
icebp
jne
mov
das
out
or
mov
xchg
ret
adc
sbb
or
dec
repz
push
or
add
push
lods
out
pusha
les
sbb
xchg
in
insl
std
bsf
ljmp
clc
add
pop
in
js
xchg
es
push
jmp
sbb
cmp
push
outsb
mov
adc
cmp
mov
xor
out
sar
imul
xchg
xchg
inc
ss
add
lods
push
mov
fisttpl
cmp
gs
jnp
and
orb
aad
xor
xchg
test
mov
jae
test
jo
pop
jle
mov
ds
cli
inc
dec
or
jnp
cltd
scas
and
adc
in
in
int
rclb
test
push
shll
lret
xchg
in
jge
cmp
loope
nop
dec
jo
std
or
jmp
loop
les
mov
mov
adcl
pop
lret
add
or
outsl
test
adc
add
inc
loopne,pt
pmaxub
mov
fisubl
add
aas
fs
lret
dec
fsts
je
dec
mov
push
ds
sti
cmp
out
push
adc
push
mov
or
ja
sbb
scas
xor
mov
lret
pop
dec
pop
shr
pop
cmp
arpl
xchg
repz
xor
sbb
xchg
lret
mov
repnz
pop
sarl
pop
fisubrs
sbb
lods
cwtl
jecxz
inc
mov
call
pop
inc
xchg
cmpsl
arpl
mov
pop
or
loope
sbb
adc
pop
out
test
mov
addl
mov
not
push
jb
push
movsl
faddl
jmp
and
and
and
lss
fstl
xor
arpl
mov
mov
push
xor
es
push
and
pop
mov
and
mov
dec
pop
hlt
into
mov
mov
stos
out
sbb
sbb
lods
jge
xchg
push
fnstsw
icebp
stos
cmp
and
loope
lret
pushf
adc
mov
shrl
push
or
adc
fsubrl
pop
push
pop
push
and
mov
pop
pop
push
mov
jbe
jge
cli
jo
add
jp
inc
fsts
sti
add
push
cmpl
jnp
lcall
movsb
movsl
jp
rol
iret
aaa
mov
add
dec
jl
pop
nop
loop
and
add
pushf
out
push
bound
xchg
sub
mov
inc
dec
fsts
stc
lcall
pushf
cmp
pop
fsts
xchg
jne
jecxz
je
mov
ljmp
inc
arpl
jns
sbb
mov
xchg
rcrl
cld
mov
add
out
push
ja
lret
mov
mov
aas
loope
iret
iret
sahf
mov
cmp
dec
dec
cmp
jecxz
fstpl
test
aam
adc
fists
ficoms
imul
xor
jnp
aam
int3
xchg
call
insl
out
inc
into
mov
negl
push
cltd
xchg
scas
dec
int3
pop
mov
daa
cmp
jae
xor
sub
mov
ret
fwait
xor
cli
addr16
js
ret
sub
fdiv
xchg
add
test
xor
inc
xor
iret
popf
push
sbb
dec
test
rcrb
lock
sub
sbb
mov
dec
mov
and
arpl
shrb
add
scas
mov
roll
ljmp
dec
cli
outsl
addr16
cmp
mov
jns
and
mov
push
lahf
ja
bound
stos
push
movsb
dec
pushf
push
test
mov
and
dec
ds
iret
js,pt
test
das
shll
clc
aam
and
push
xor
or
fs
addr16
mov
push
inc
test
xor
pop
arpl
int3
xchg
int
jb
xor
dec
mov
idivl
sbb
xor
cmp
sbb
or
imul
xor
ss
jne
jb
or
cmpl
fstps
dec
xor
mov
std
aam
inc
mov
scas
dec
mov
adc
not
shll
or
sbb
jno
inc
subb
mov
mov
lret
pop
scas
dec
sti
sti
dec
outsl
sub
mov
inc
filds
mov
or
repnz
stc
jbe
pop
pop
and
loope
iret
sbb
mov
mov
push
sbb
arpl
sbb
lods
add
or
mov
mov
scas
mov
xchg
fwait
mov
dec
mov
js
mull
lock
push
or
jge
add
push
xor
mov
mov
or
daa
enter
adc
mov
incb
lea
dec
frstor
push
outsb
lahf
cmp
jmp
sbb
pop
sbb
cmp
xchg
cltd
lods
ds
cmc
or
pushl
xchg
leave
dec
ffree
mov
mov
xor
std
icebp
cmp
cmp
xchg
ret
jg
mov
es
xchg
shrb
lods
pop
rol
arpl
cld
dec
sbb
int3
dec
sbb
jge
or
cld
pop
in
push
pop
mov
pop
xor
test
hlt
xlat
stos
imul
enter
cmc
pop
shr
sbbb
mov
xor
pop
stc
lret
lods
loopne
lahf
push
add
xchg
mov
jge
hlt
fnstsw
pusha
mov
dec
pusha
mov
lcall
adc
cmp
push
mov
jg
mov
xchg
sbb
cmp
inc
je
mov
adc
ja
movl
xchg
lods
lds
mov
int3
mov
fdivrp
std
mov
xlat
jo
sti
adc
and
std
imul
and
cltd
pop
dec
in
pop
xchg
int3
ss
ret
mov
imul
mov
in
pop
dec
mov
stos
and
mov
mov
cmpsl
nop
roll
mov
ret
ds
jmp
inc
xchg
hlt
sti
mov
fs
dec
into
lea
jg
insl
push
rep
iret
pop
int
test
push
inc
push
scas
vcvtps2dq
inc
mov
mov
push
xor
lret
popf
cmp
mov
divl
sbb
sbb
insl
push
mov
jne
in
xchg
push
push
and
out
imul
sbb
je
icebp
jae
adcl
xchg
rcl
ljmp
ds
mov
lcall
and
mov
mov
pop
lock
es
sub
hlt
gs
mov
inc
xor
out
mov
and
jge
and
jnp
lcall
sub
aam
pop
xlat
mov
pop
xchg
cwtl
ret
clc
mov
jg
subl
adc
out
adc
stos
jl
cs
out
shr
sbb
dec
into
mov
xor
jno,pn
setp
rcl
rep
mov
andl
imul
out
push
je
or
pop
and
mov
lahf
xchg
inc
or
mov
mov
in
scas
roll
mov
push
shll
mov
xchg
push
ret
xor
mov
daa
mov
js
flds
fs
andl
js
lret
std
sbb
xchg
pop
push
in
adc
mov
int3
pop
pusha
xlat
mov
and
cmp
and
pop
xchg
shrb
cmpsb
push
dec
xor
stos
lock
dec
daa
xchg
adc
push
pop
push
int
fisttps
pushf
pop
xor
mov
or
cmp
jne
cltd
jmp
fldt
mov
lods
add
xchg
lock
push
jns
leave
jbe
fdiv
xor
push
xchg
iret
or
mov
dec
pop
pop
int3
inc
mov
dec
pop
mov
inc
in
mov
ret
lret
aam
enter
cltd
jo
pop
movsb
add
xchg
cmp
cmpsb
fsubrs
dec
jns
fwait
out
jge
ftst
aas
int3
pop
in
arpl
lret
adc
es
and
repnz
push
enter
cld
cmp
mov
adc
and
push
pop
dec
ja
or
xrelease
and
in
pushf
js
hlt
push
mov
hlt
push
add
lds
ror
sub
mov
out
jne
fbstp
cwtl
dec
cmpl
jp
jg
lahf
push
jecxz
subl
fcoml
icebp
mov
sbb
push
ss
or
ret
or
imul
mov
jmp
dec
cld
popf
xchg
push
test
cmp
out
pusha
insb
mov
enter
push
mov
xchg
lock
and
adc
or
js
lods
fs
faddl
mov
mov
or
faddl
cmpsb
xchg
jmp
leave
inc
xchg
jge
pushf
sbb
push
or
ret
mov
xor
dec
js
mov
lcall
dec
inc
push
jb
cmc
fldl
xlat
arpl
dec
push
stc
sbb
ret
js
ret
test
pushf
shll
xor
mov
xchg
mov
repz
rorl
ljmp
mov
cmc
adc
into
mov
pop
push
xchg
ret
rol
dec
and
xor
into
sbb
jnp
sbb
fcmovnu
rclb
jl
cs
out
fwait
js
or
scas
jnp
mov
clc
aad
add
push
dec
sbb
mov
cmp
les
repz
dec
cld
outsl
data16
add
push
aam
lods
mov
mov
dec
stos
in
dec
in
xor
mov
leave
sbb
stc
scas
inc
cltd
cs
scas
loope
mov
bound
pop
imul
addr16
inc
arpl
xchg
push
ret
data16
insl
in
js
and
sub
xchg
add
pop
stos
int3
or
pop
pusha
add
cmp
jp
ficomps
fcoml
lods
xor
or
fcoml
leave
inc
fisubrl
lds
fsubrp
mov
inc
sahf
int
rcrl
jecxz
sti
sbb
test
negl
test
mov
push
cwtl
xor
aaa
lahf
mov
mov
xor
xlat
std
cmpl
out
xchg
ljmp
mov
adc
sarb
sub
cmp
movsl
push
xor
jbe
imul
adc
mov
popf
loop
arpl
out
jb
test
es
test
leave
insb
das
cltd
movsl
enter
cmp
mov
push
push
push
adc
mov
pushf
xor
cmc
pusha
fbstp
xor
cmpsl
out
out
jns
xor
insb
idivb
xor
mov
mov
and
sbb
test
dec
fcmovu
sub
jmp
lahf
push
push
xchg
out
lret
scas
loopne
cmp
jecxz
or
enter
lods
outsl
ja
out
mov
ret
clc
leave
loope
mov
push
cmc
inc
mov
pop
xor
adc
ret
xchg
mov
adcl
jge
add
xchg
pop
mov
add
lock
mov
push
xor
dec
orl
mov
lret
loope
inc
adc
mov
push
push
pop
aad
into
testb
jmp
int
xchg
push
xor
xchg
mov
stc
addr16
xchg
mov
bound
inc
lods
pop
mov
movsl
test
add
es
ret
push
add
flds
sti
call
mov
push
lret
aam
cmp
inc
pusha
mov
shrl
test
pop
ja
scas
shll
and
xor
mov
sub
loopne
inc
jp
mov
movsl
adc
sub
push
icebp
dec
push
pop
call
mov
push
jp
iret
movsl
test
xchg
inc
dec
insb
mov
rcll
or
enter
div
push
ja
inc
or
outsb
adc
mov
jl
imul
inc
adc
and
mov
or
lahf
xchg
push
dec
fsts
aas
vpminub
pop
push
scas
imul
shlb
jl
test
mov
or
sub
or
jmp
jle
cmp
shll
dec
jae
test
sub
ja
cs
push
fstps
jl
push
sub
lods
add
insl
sbb
sub
in
adc
ret
mov
rorb
pop
loop
sub
movsl
sub
cmp
jecxz
add
dec
jmp
mov
pop
ljmp
ljmp
jge
cli
mov
roll
mov
ret
jecxz
inc
loopne
sarl
adc
cli
cmp
iret
xor
pop
lods
ss
xor
push
dec
andl
pop
cmpsl
aaa
dec
mov
sbb
xor
or
cmp
add
xchg
cmpsl
push
daa
sub
xchg
adc
pop
pushf
repz
lods
sub
mov
scas
lock
rorb
inc
mov
out
jecxz
shrb
out
sub
bnd
cmp
rcrb
fs
in
out
xor
xchg
movsb
mov
fistl
inc
sub
adc
cmp
mov
push
xchg
lret
sub
mov
jo
and
lods
or
push
lea
mov
pop
push
fistpl
int
push
pop
xor
ljmp
adc
popa
mov
fdivrl
push
repz
sub
push
adc
ds
dec
stc
dec
out
and
jg
sub
call
xor
sbb
inc
jg
ret
in
dec
jnp
lods
inc
mov
loope
aas
xorb
jl
pop
aam
loope
mov
repz
xchg
push
pushf
mov
mov
repz
mov
xchg
pop
enter
enter
mov
jg
cltd
ja
outsb
sbb
jle
ljmp
xchg
es
jl
stc
xor
mov
push
cmovbe
in
clc
cli
mov
mov
add
imul
testb
insl
popf
adc
or
mov
push
push
pop
mov
mov
jg
push
lock
subl
xchg
jmp
fcomps
adc
pop
je
or
shl
bound
dec
sti
in
pop
in
clc
adc
test
repz
pop
clc
std
push
mov
pop
xchg
lods
fnstsw
cltd
adc
loopne
lods
mov
notb
movsl
inc
mov
aaa
adc
push
daa
inc
pop
mov
or
mov
sub
add
mov
cmc
adc
insl
jp
jae
sbbb
inc
xchg
mov
scas
mov
insb
pop
xlat
pop
pop
push
out
fwait
mov
xor
and
jl
mov
push
scas
out
mov
lds
shl
add
test
pop
cmc
jae
pop
jp
sbb
enter
sub
rclb
xchg
loop
xor
push
test
adc
mov
data16
pushf
in
movsl
pop
mov
cmp
cmp
jae
test
popa
sub
mov
add
mov
movsl
xchg
js
arpl
mov
dec
push
js
mov
or
xadd
std
or
dec
call
ret
lea
clc
ret
push
shll
bound
mov
sub
inc
loop
and
lods
lods
xor
lret
mov
sub
out
mov
ret
dec
test
insb
jecxz
iret
or
rol
ss
call
jae
push
cmp
movl
outsb
shll
dec
into
lock
pop
stos
mov
insl
xchg
mov
mov
push
push
sahf
stc
and
mov
fisttpl
sbb
cmp
jnp
sbb
in
push
fs
pop
js
dec
add
cmpsl
xchg
sub
cld
jo
ss
add
adc
pop
mov
sbb
xchg
mov
hlt
jnp
push
icebp
push
fldt
inc
stos
xor
inc
imul
fistl
mov
inc
fimuls
xchg
sbb
jmp
nop
add
iret
xor
inc
cmp
xchg
mov
test
shlb
jge
cmc
sbb
sub
les
in
jns
mov
testl
mov
sbb
jg
lret
dec
cwtl
mov
lahf
aad
addl
movsb
push
loopne
mov
lret
in
xor
into
mov
pop
std
loop
daa
xchg
push
add
out
jp
and
cmp
sbb
cld
cli
add
ljmp
lods
push
push
xor
cli
in
cld
adc
aas
inc
xchg
call
jne
in
cmpsb
push
pop
cwtl
repnz
jnp
push
sub
inc
mov
ss
mov
or
mov
int3
mov
sub
fxch
cld
and
mov
lea
cmp
jne
cmp
dec
mov
and
pop
add
pop
dec
es
xorb
rcrl
jge
jmp
add
push
loopne
inc
mov
gs
fnsave
cmp
call
cmc
cmp
repz
out
cmc
xor
repz
push
mov
nop
cwtl
pushf
xor
mov
jns
and
leave
jmp
dec
and
push
push
xchg
subb
fs
popf
xor
xchg
lahf
mov
shl
cs
cld
xor
xor
jns
pop
mov
loop
jo
jns,pt
and
cmc
xchg
je
std
js
dec
out
mov
stos
fisttpl
dec
test
repnz
lock
enter
incl
xchg
jae,pn
popa
jmp
or
jle
ljmp
fwait
push
jne
lret
in
dec
insl
xchg
dec
xlat
int3
xor
sub
xor
subb
jp
jnp
sahf
push
popl
cmp
es
shlb
add
std
ljmp
mov
testb
and
imul
pop
mov
add
or
jmp
cmc
orl
lret
xor
dec
push
iret
jns
sahf
inc
xor
pop
and
popa
adc
sti
sbb
pop
fs
shr
lret
sub
mov
ret
xlat
arpl
or
dec
cmp
sub
sub
cmp
mov
and
int
mov
mov
push
cli
sbb
and
nop
cli
jno
mov
ljmp
imul
push
push
aad
nop
out
imul
or
int3
mov
clc
into
test
cmpsb
sbb
mov
pop
pop
sahf
push
push
or
cltd
insl
pop
fcomi
xchg
lcall
out
adc
mov
xor
and
cmp
rclb
aaa
cmc
es
xchg
mov
in
push
sub
test
enter
std
jp
xchg
mov
fists
cld
popa
push
sbb
lret
out
dec
fimull
je
jb
int
add
mov
std
mov
xlat
int
outsl
mov
lret
cli
popa
mov
xor
cltd
dec
dec
mov
test
jmp
decb
jnp
pop
fwait
in
fwait
mov
cmpsl
push
leave
inc
sbb
xorb
cmpl
pop
adc
loope
lahf
cli
stc
pop
cmp
jae
xchg
mov
mov
mov
stos
out
mov
or
sbb
xchg
or
cmc
pop
jle
mov
out
xor
sbbb
andb
jo
repnz
push
fwait
push
and
sti
dec
mov
cld
loopne
cmp
fsubr
mov
out
adc
or
mov
cmp
or
sub
jne
sbb
aaa
sbb
jmp
out
mov
add
or
out
movsl
dec
in
jnp
cwtl
sub
add
addr16
mov
sbb
xchg
fldenv
popa
loop
inc
jp
sahf
rcll
cld
mov
hlt
mov
add
lds
sub
jb
jmp
enter
out
sahf
mov
push
rolb
cmp
sbb
out
sti
daa
dec
repnz
pop
pop
out
pop
xchg
iret
mov
dec
cmp
mov
or
imul
daa
je
imul
sbb
mov
rolb
jns
inc
fisubs
add
adc
and
mov
mov
test
fdivs
add
out
lret
mov
mov
mov
adc
pop
loope
dec
int
stos
stos
lret
aam
xor
clts
aam
imul
xor
cli
inc
ds
pop
pop
popf
icebp
mov
jne
fstps
pop
scas
fldl
sahf
jecxz
gs
jmp
std
sub
bound
mov
jecxz
jne
stc
bound
push
sub
pusha
test
in
movsb
jbe
xchg
cmp
jno
cwtl
adc
bnd
dec
clc
data16
fstl
hlt
dec
xor
rolb
rcll
repnz
js
movsl
sbb
push
xor
add
sub
sbb
push
mov
mov
lret
sbb
cmp
insl
xor
and
fstpt
adc
pop
pushf
mov
vpmaxub
mov
cmp
jg
aaa
xchg
and
xchg
repz
jecxz
inc
inc
cmc
mov
fstpt
jns
frstpm(287
push
mov
cmpsb
adc
shl
push
fidivs
mov
xor
cmp
sub
ljmp
pop
hlt
push
adc
popa
into
popa
mov
rolb
mov
adcl
test
cltd
add
or
cmpsl
mov
jne
mov
jnp
outsb
scas
ds
pop
inc
and
popa
or
ja
test
inc
and
ret
sub
xor
jp
int3
jg
xlat
sub
aad
test
fwait
hlt
xchg
xchg
xchg
xor
imul
push
hlt
push
jnp
push
xchg
cmp
mov
pop
shll
push
pop
jg
test
aaa
xlat
cld
mov
xchg
mov
and
jecxz
jo
xchg
mov
add
pushf
inc
out
cmp
mov
pop
rsqrtps
jbe
jp
adc
dec
addr16
rclb
repz
hlt
fst
lahf
xchg
fstps
xor
push
or
jne
sub
inc
scas
pop
cmpsb
sbb
mov
lods
ss
movsl
dec
ss
xchg
fdivl
or
cmp
jmp
ljmp
dec
push
add
or
mov
dec
cmp
clc
das
cli
mov
and
scas
inc
add
cs
adc
das
inc
cmc
xor
sub
lock
gs
addr16
mov
and
xor
adc
ljmp
dec
mov
aad
fs
jmp
and
inc
imul
pop
mov
ds
or
mov
aam
push
cmp
aam
arpl
iret
scas
mov
movsl
jb
in
push
daa
mov
lret
jae
test
adc
or
shrb
add
dec
pop
lods
xchg
push
lcall
fs
lcall
and
push
or
repz
add
mov
shrl
mov
pop
jbe
pop
ss
test
xor
popf
imul
flds
out
fmul
xor
ljmp
pop
push
push
stos
sahf
jmp
jno
das
mov
mov
add
push
int
test
ja
ds
ds
orl
out
scas
shrl
or
lods
jmp
fldcw
add
lret
mov
sub
mov
ljmp
jno
sbb
sbbl
jge
in
out
mov
hlt
jno
pop
idiv
push
jl
negb
mov
mov
mov
mov
stc
icebp
pushf
sbbl
lcall
pushf
lcall
jmp
scas
in
xchg
sbb
push
jns
push
xchg
mov
out
and
std
lea
xchg
add
sbb
mulb
faddp
test
repz
int3
mov
inc
mov
xchg
pop
add
aas
sub
clc
fadd
sub
cmc
aas
aad
fsts
push
mov
insl
sbb
int3
adc
iret
inc
aas
divb
pop
jnp
mov
iret
je
sub
js
push
fstps
inc
lret
das
and
xchg
enter
cmc
cltd
push
mov
mov
cmp
stos
sub
out
pop
push
mov
mov
mov
movsl
push
inc
insb
jp
icebp
jp
aam
test
push
mov
xlat
popa
cmp
lahf
insl
clc
lods
cmp
test
add
addb
adc
jl
push
es
imul
mov
loopne
jae
or
mov
sbb
aam
loopne
daa
cmpsb
add
rol
scas
adc
xlat
cmp
sbb
rcrb
loop
add
sub
rolb
cmp
push
subl
push
sbb
mov
movsl
lcall
mov
cltd
xor
lods
and
mov
pushf
adc
fisubs
arpl
dec
rclb
div
sbb
mov
jmp
popf
pop
push
sbb
sahf
ret
es
testb
arpl
push
int
in
cwtl
out
mov
sbb
push
adc
push
loope
pop
out
sub
pop
jge
hlt
jg
xchg
pop
fsub
loop
xor
mov
adc
mov
pop
cmp
cmp
sti
pop
or
sbb
and
jbe
lock
pop
sbb
add
sub
pop
cmp
add
movsb
outsb
or
js
fcoml
andb
cmp
inc
out
cmpl
mov
push
aaa
rol
stos
push
pop
cs
jmp
mov
popaw
xchg
mov
cmpsl
shrl
test
clc
add
fimuls
ja
fwait
add
addb
add
lahf
popf
nop
jmp
movsb
insl
mov
mov
mov
jecxz
and
insb
xchg
and
loopne
fdivl
insb
test
push
inc
push
pop
mov
xor
cmp
test
cs
or
into
push
sbb
ja
lcall
xchg
push
jbe
mov
ss
clc
cmpl
dec
repnz
xchg
lret
js
sbb
rcr
popa
int3
mov
xor
dec
pushf
pop
scas
sub
or
out
mov
xor
pop
int3
ljmp
adcb
cmp
xchg
push
outsb
add
popa
jns
push
add
outsl
cmp
push
mov
or
cli
jge
int
sbb
jns
add
mov
sbb
gs
jo
loopne
xchg
mov
repnz
mov
es
int
dec
es
xor
xchg
arpl
test
sub
aam
loopne
inc
xchg
xchg
out
clc
push
and
mov
mov
mov
sbb
leave
or
testl
push
loop
cmpb
bound
rcll
dec
or
dec
daa
adc
sub
loope
test
neg
and
adc
mov
pop
mov
hlt
out
mov
xchg
xor
adc
xor
dec
in
push
jnp
sahf
sahf
jp
rclb
addl
orb
xor
mov
xorl
adc
mov
cmc
and
dec
pusha
sub
jg
add
sub
mov
icebp
jmp
mov
fldenv
into
push
adc
xchg
ret
sub
mov
inc
fs
jp
add
dec
jp
add
xchg
icebp
rorl
dec
push
dec
jle
or
in
fs
mov
stc
add
jno
xor
pop
out
lret
cmc
xchg
cmp
lret
enter
ret
sub
iret
mov
cmp
pop
call
cmp
jno
sbbl
nop
scas
xchg
addb
enter
ficomps
in
inc
xchg
jb
les
sub
mov
jne
mov
push
or
xor
std
fdivrs
psubd
pop
in
xor
dec
pop
add
std
jns
xor
fld
aaa
mov
outsb
push
flds
out
mov
or
cmpsb
and
and
jmp
adcl
pop
mov
xchg
lods
pop
rorl
stos
xchg
ret
out
add
push
xor
std
xchg
inc
imul
movsl
rcl
icebp
popa
inc
dec
push
movsl
sub
sub
dec
pop
push
mov
xchg
inc
mov
jecxz
lret
push
xchg
test
iret
push
and
xor
jge
ljmp
mov
es
dec
mov
xchg
in
xor
mov
loopne
subb
insl
jle
push
push
adc
popa
or
ret
mov
rolb
xchg
stos
mov
adc
int
dec
pop
mov
jnp
fst
push
scas
mov
sbb
adcb
std
adc
ss
aam
mov
call
std
cwtl
cld
sub
sysexit
push
mov
cmpsb
adc
dec
outsl
adc
sbb
out
insb
shll
jne
rorb
adc
or
repz
dec
sbb
outsb
mov
push
and
sub
add
mov
jo
mov
test
pop
rcr
mov
shll
sbb
dec
data16
cmp
and
addr16
mov
fnop
inc
xchg
fs
sti
into
test
pusha
add
push
sbb
outsb
pusha
repnz
ja
adc
loope
test
cmp
fs
inc
push
mov
jne
inc
ret
jge
inc
mov
test
and
pop
fsubrs
cli
sub
sub
and
lahf
push
movsl
jbe
fwait
repnz
clc
or
dec
mov
mov
mov
dec
dec
test
xchg
repz
hlt
jae
mov
cmp
shlb
jge
xchg
sbb
iret
das
das
mov
pop
cmovns
cmp
in
jle
add
xchg
add
cs
mov
sbb
icebp
and
roll
jp
popl
jp
push
mov
into
jbe
cmp
sbb
call
fidivs
mov
lahf
jo
sub
jo
lds
stc
xor
call
and
mov
inc
inc
and
inc
aad
lock
or
int3
jge
push
ret
ljmp
push
sarl
jae
movsb
adc
insl
clc
xchg
xchg
push
nop
shlb
leave
inc
cs
std
mov
push
mov
xchg
cmp
repz
or
std
rorl
sub
push
adc
cli
adc
shlb
dec
push
mov
out
arpl
cmp
bnd
push
repz
dec
std
adc
cli
push
adc
out
cmp
xor
dec
pop
mov
mov
clc
cmovge
push
out
jl
fs
mov
popa
fbstp
mov
cmp
in
fidivrs
outsb
or
aaa
cli
mov
mov
add
daa
addr16
inc
fs
jp
pop
hlt
or
fisubrl
pop
ret
xor
mov
jnp
cmpsl
push
dec
xor
inc
and
xor
or
scas
mov
mov
loopne
test
push
xor
leave
addr16
mov
mov
mov
lds
sti
xor
cmpsb
mov
fcoms
adc
jge
jns
filds
xchg
inc
loope
std
pop
mov
enter
push
mov
fadd
and
gs
add
add
es
sbb
out
nop
es
jnp
or
add
lods
movq
out
push
xor
adc
fisttpl
cmp
aaa
shrl
outsl
fdivrs
inc
pop
add
or
push
pop
icebp
xor
cmp
sar
push
cmp
push
push
push
aas
and
in
negl
push
xor
cmp
dec
push
movsl
cmp
fstps
dec
daa
icebp
je
ljmp
and
jo
cmp
lea
push
add
movsb
stc
pop
mov
lods
sbb
fs
mov
sti
and
xor
mov
jmp
cmpsb
addl
mov
pop
and
mov
cmp
pop
outsb
test
push
inc
push
test
push
mov
xor
sbb
adc
xchg
dec
test
je
imul
fadd
ja
xchg
mov
xchg
xchg
clc
pop
push
sbb
js
test
test
jne
stc
or
push
scas
call
xor
cmc
xor
test
adc
movsl
adc
xorb
pop
lret
rcl
inc
ljmp
pop
cmp
movsl
mov
js
fwait
adc
daa
push
or
cs
mov
dec
sbb
mov
and
mov
dec
sub
je
jno
pop
and
adc
sub
cmp
or
cpuid
lea
sub
movsl
mov
nop
lcall
inc
adc
xor
and
inc
jle
loopne
xchg
mov
pop
out
out
cmp
adc
lahf
clc
popa
out
mov
push
jne
mov
mov
cmpl
loop
push
mov
xchg
pop
mov
push
mov
stc
fcmovb
mov
fisttpll
mov
lods
sbb
cmpsl
out
sub
xchg
stc
xor
fwait
bound
cltd
je
sbb
clc
out
xor
mov
jno
xor
xchg
insb
ss
mov
push
repz
stos
popf
in
pop
pop
mov
mov
add
adc
mov
sub
adc
pop
add
outsb
mov
out
lret
fs
movsb
adc
rclb
cmp
arpl
icebp
stos
cmp
fidivrl
bound
adc
sbb
mov
insb
js
pop
xchg
cltd
std
shr
push
push
pop
mov
outsb
pop
mov
or
clc
sub
in
inc
mov
imul
pop
arpl
cwtl
outsl
dec
mov
dec
test
ljmp
in
mov
mov
ret
aam
adc
out
and
incb
dec
or
fwait
lds
jb
mov
xchg
xchg
iret
xor
movsb
cmp
dec
test
mov
sub
mov
daa
adc
test
push
in
pop
mov
mov
mov
xchg
out
and
in
clc
mov
sbb
nop
movsl
imul
test
push
lock
leave
repnz
lret
inc
sub
and
pop
mov
dec
xor
hlt
inc
jbe
or
mov
push
je
repnz
mov
mov
mov
inc
dec
stos
xchg
push
aaa
in
jecxz
jg
out
bound
sbb
stc
add
xchg
arpl
mov
sahf
cltd
xor
sub
enter
loop
jl
and
pop
aad
cmp
ret
jle
sti
xchg
in
add
aaa
cmp
ret
mov
ja
pop
mov
out
out
add
sbb
rcl
xor
mov
dec
cmpsb
sbb
outsl
clc
mov
pop
cmpsl
negb
xor
mov
dec
arpl
sbb
stos
test
ja
jno
push
mov
dec
lcall
sub
push
adc
sub
jp
dec
lea
jb
mov
xchg
xchg
in
xchg
add
inc
mov
mov
inc
dec
pushf
icebp
mov
dec
mov
cmp
mov
push
xor
inc
push
repz
cli
and
sub
dec
ja
lock
dec
or
in
jg
lcall
js
inc
lret
dec
sbb
gs
xor
pop
lds
cmp
push
adc
outsl
nop
pop
jle
repnz
in
fisubrs
dec
stos
mov
push
pop
imul
scas
pop
dec
mov
cmp
lds
sarl
ret
stos
fnstcw
push
add
fisubl
test
mov
mov
jg
push
loopne
adc
mov
or
orl
lods
jo
cwtl
pop
lods
sbb
adc
mov
aam
mov
addr16
or
hlt
int
jbe
movsl
mov
mov
lods
jns
ffreep
pop
fwait
add
sbb
push
mov
mov
xor
sub
pop
nop
lds
js
hlt
lcall
out
enter
fcom
lods
cwtl
and
lds
in
cmp
adc
aas
pop
jb
icebp
fstl
jp
lds
xchg
and
lods
mov
icebp
fwait
pop
cmc
or
xchg
inc
rcrl
lods
lods
in
push
sub
andb
lods
or
jb
gs
mov
stos
inc
mov
jno
mov
repnz
and
xchg
push
xchg
lret
dec
jmp
add
or
xor
dec
mov
ljmp
ja
jl
push
xchg
imul
and
pop
popa
mov
adc
mov
sbb
mov
add
in
adc
inc
sub
lcall
mov
adc
sbb
push
dec
das
dec
and
mov
mov
enter
andb
mov
mov
dec
push
aam
inc
mov
ljmp
pop
fisubl
inc
add
cmpb
add
inc
or
inc
rcl
repnz
fiaddl
and
or
lock
jecxz
mov
jp
jmp
cwtl
or
pop
push
pop
loop
cmp
add
call
dec
and
inc
push
inc
movsl
push
cmpsl
in
xor
enter
mov
push
fsubl
push
test
adc
fisttpl
cmpl
jbe
dec
cli
icebp
out
cld
pushf
sub
aam
mov
mov
and
sub
pop
sub
and
inc
inc
pushw
lock
dec
push
pushf
ja
aam
mov
dec
push
sahf
inc
in
stos
push
pop
mov
inc
pushf
mov
xchg
push
add
inc
and
lods
or
out
cmp
je
insl
in
push
cs
sbb
shrl
cltd
in
and
mov
repnz
in
shufps
add
aad
jle
rcl
int
inc
cmp
out
pop
in
aad
std
pop
inc
das
clc
dec
mov
std
dec
and
cltd
dec
mov
jmp
mov
mov
mov
inc
bound
xor
repz
cmpb
dec
movsb
test
icebp
fnstcw
fldl2t
or
push
int3
cmp
lods
enter
sub
inc
lret
fidivl
pop
stc
jb
cwtl
and
push
cmp
mov
aam
cmp
clc
bnd
inc
sbb
jns
cwtl
outsl
daa
movsb
adc
xchg
cltd
and
mov
rcll
stos
pop
je
add
pushf
or
dec
ja
pop
xchg
test
or
arpl
arpl
lret
xchg
xor
xchg
push
pop
stos
pop
jns
push
loopne
dec
fsubs
call
stos
lret
mov
inc
vmovaps
xlat
sti
jo
cmp
nop
cmc
push
ds
popf
addr16
mov
sub
xchg
ljmp
mov
pop
out
sarb
cmp
cmc
enter
jmp
inc
xorb
push
cmp
jne
orb
imulb
gs
dec
and
enter
daa
lret
adc
sub
pop
arpl
ja
ja
test
lea
stc
out
fsubs
loopne
pop
pushf
inc
lods
pushf
lret
lea
mov
fsubr
sbb
insb
dec
rorb
addb
shll
mov
inc
sbb
jae
ror
ljmp
pop
xchg
pop
ja
xchg
jbe
leave
insb
test
sahf
dec
out
adc
pop
pop
in
ljmp
je
movsl
push
push
mov
ljmp
push
sbb
leave
es
xor
fsubrs
sbb
jno
cmc
not
inc
jge
push
fdivrl
mov
or
jb
sahf
cmp
shlb
push
inc
lods
ss
xor
dec
sbb
cmpsl
cmp
xor
inc
imul
cld
aam
cmp
cld
pop
lea
mov
insl
add
push
pop
test
pop
sub
pop
loop
and
arpl
cmp
hlt
pop
cwtl
mov
test
clc
fcmovne
loopne
pop
movsb
mov
pop
in
xchg
adc
mov
sub
aas
ss
cmp
inc
pop
and
shr
imul
dec
jle
mov
add
imul
sub
inc
repnz
or
inc
sbb
loope
lock
xor
adc
test
push
xor
or
stc
ljmp
add
dec
xchg
mov
add
testl
outsl
push
pop
xor
sub
dec
inc
mov
jnp
popf
cmp
aam
bnd
stos
fists
add
lahf
repnz
cmp
and
sahf
aas
sbb
ljmp
inc
pusha
and
xor
arpl
int
xor
out
push
mov
sbb
pop
lea
std
test
cmp
test
mov
mov
mov
je
mov
loope
mov
out
mov
scas
lods
pop
gs
aas
inc
xchg
filds
xor
stos
push
arpl
mov
shr
sbb
stos
out
xor
pusha
test
mov
jb
fbstp
jg
test
pushf
sub
or
inc
mov
imul
mov
movsl
subb
add
aad
mov
inc
inc
mov
cmp
sbb
enter
fsubs
lds
mov
xlat
cltd
loop
pop
cld
shrl
pop
push
and
add
cmpsb
into
imul
sar
scas
andb
and
rcl
mov
ss
fildll
mov
or
movsl
dec
sub
fistps
or
xchg
cmp
leave
ret
adc
pop
or
aaa
es
test
sub
sbb
xor
sub
test
call
pop
sub
pop
pop
es
lret
fisubl
or
stc
mov
mov
pop
xchg
dec
push
jae
add
xor
mov
mov
sbb
adc
iret
lahf
pushf
cmc
push
loopne
fidivs
icebp
adc
lahf
enter
xor
jmp
inc
std
pop
js
push
push
sub
cmpsl
ret
push
in
xchg
adc
in
out
mov
lds
cmp
mov
mov
mov
fstl
cmp
mov
push
pop
je
mov
mov
ret
mov
or
mov
pop
push
adc
sbb
pop
add
xlat
push
test
xor
pop
pop
dec
aas
xor
popf
mov
shll
mov
out
adcb
call
js
lret
mov
es
jnp
dec
icebp
icebp
shll
mov
lahf
sub
sbb
add
dec
xorl
xchg
andb
imul
popa
xchg
loope,pn
mov
dec
inc
pop
mov
cmp
into
out
fprem
into
faddp
mov
bnd
jne
cltd
cmpsl
clc
lret
rorb
icebp
jb
inc
add
pusha
scas
pop
mov
dec
push
add
aaa
jb
jge
shlb
pushf
push
sbb
cmp
imulb
mov
jae
mov
clc
mov
xchg
dec
mov
xchg
inc
push
and
fisttpll
mov
lcall
sub
pop
pop
popf
inc
and
push
in
movsbl
jecxz
push
test
xlat
mov
xor
adc
and
push
ja
in
sbb
and
jg
pop
arpl
dec
cld
sti
in
insb
pop
fidivrs
mov
leave
fsubrl
mov
adc
pushf
xchg
jmp
aam
inc
aam
movsl
mov
mov
mov
inc
cmc
pop
push
inc
xchg
mov
add
popf
inc
or
mov
push
repnz
lds
lahf
xlat
cld
rorl
out
inc
cs
cli
inc
dec
rcrl
sub
cmpsl
fistps
into
rorb
or
push
ror
movsb
cmpsl
xor
and
xchg
push
xchg
fwait
or
imul
or
jne
std
cmp
mov
pop
push
push
cmp
mov
ljmp
pop
cmp
xor
inc
jecxz
jmp
push
mov
das
mov
jnp
cld
adc
mov
stos
faddp
adc
ret
sbb
add
data16
js
stos
inc
aam
and
aad
xor
xor
aad
or
lods
and
mov
outsl
imul
addr16
jmp
es
lret
mov
cld
pop
sbb
pop
jmp
popf
lret
fcom
popa
into
dec
dec
jno
jl
je
jo
fidivl
pop
inc
or
pop
insb
inc
or
imul
and
adc
jnp
pop
mov
popa
lret
test
testb
push
xor
pop
or
push
std
scas
and
int3
imul
add
imul
iret
insb
in
je
push
mov
cwtl
cmpsb
mov
mov
outsb
cmc
inc
int3
or
and
adc
push
shll
lock
add
cli
lret
or
push
sbb
sbb
arpl
sub
inc
sub
jecxz
paddusw
decb
sub
sbb
or
out
loope
inc
jb
mov
sbb
fstl
cmpsl
jne
pusha
jb
pushf
imul
jno
jo
inc
aas
inc
xor
gs
pop
insl
push
sub
lret
xorb
test
xor
jecxz
test
rcrl
ficoml
xor
pop
ss
js
cmp
cltd
or
fcomps
pop
lods
add
ja
loop
shlb
adc
push
shl
xchg
stc
arpl
iret
xchg
dec
adc
jle
imul
jmp
xor
add
imul
add
lcall
mov
adc
or
jl
aaa
stc
push
xchg
inc
xchg
jo
cmp
cmpsb
sub
adc
and
mov
icebp
xor
mov
imul
leave
loope
mov
mov
sub
hlt
push
cld
push
pop
call
pop
divb
dec
xor
fbstp
mov
push
jbe
fcoml
fldcw
pop
out
ds
mov
clc
and
iret
xchg
mov
push
shrl
xor
in
push
mov
cmp
jb
movsl
sub
dec
mov
outsb
sti
lret
and
or
dec
mov
push
out
insb
ds
xchg
push
push
pop
fdivr
mov
mov
sbb
mov
push
test
mov
add
xchg
scas
enter
enter
jnp
pop
push
pusha
mov
jbe
lds
sub
notl
fwait
test
sub
xchg
out
lahf
lret
andl
sub
jecxz
mov
pop
pop
push
sub
notl
sbb
stc
imul
xchg
mov
outsl
outsl
out
cmpsb
pop
add
xchg
mov
add
popf
push
and
divb
cmp
adc
push
push
pop
in
sub
in
and
xor
das
xor
mov
inc
xchg
sbb
iret
fsubs
sbb
imul
and
cmpsl
inc
xchg
fisubl
fidivrl
push
sub
sub
les
mov
mov
cwtl
lods
int
pop
rcrb
fs
lds
test
ja
lods
and
xchg
cmp
stos
inc
jge
neg
pusha
rep
rcrl
dec
lahf
push
sbb
push
pop
das
aaa
gs
mov
je
ffree
out
xor
or
fcmovbe
mov
mov
mov
add
rclb
loopne
mov
dec
cmp
sub
or
xlat
mov
inc
sti
or
mov
pop
ss
cmp
stos
imul
sub
pop
popa
xor
and
in
push
jg
scas
xor
lcall
push
pop
stos
mov
sti
mov
pop
sbb
gs
fs
stos
mov
fstpl
add
or
xchg
shlb
rclb
js
pop
dec
push
and
loopne
inc
cmpsb
add
xor
jns
icebp
outsl
nop
mov
fisttpll
push
push
inc
mov
add
paddsb
stc
cld
jecxz
pusha
push
das
pop
cwtl
add
push
jmp
pop
fcmovne
add
dec
lods
andl
rcrl
call
sbbb
add
push
push
pop
mov
add
jge
cwtl
mov
rolb
xchg
js
insl
shl
fstl
out
push
insl
fiaddl
xchg
inc
push
cli
out
iret
jp
sbb
aas
jbe
push
inc
pop
insb
or
inc
stos
testb
adc
push
shlb
cmp
adc
mov
leave
mov
push
push
adc
jecxz
bound
cld
and
rep
or
xchg
incl
das
mov
push
cmp
inc
push
jnp
fs
or
loope
mov
xor
fadds
mov
push
lods
pop
fadds
inc
nop
xchg
push
mov
mov
repz
mov
jg
dec
iret
aad
fnstenv
cmc
aad
mov
ds
mov
xor
subb
or
ja
cs
sbb
xchg
push
adc
jnp
fs
adc
movsb
xchg
mov
and
jno
das
inc
push
pop
adc
jbe
push
in
cmp
sbb
mov
cmp
arpl
sub
add
in
push
das
dec
fnstenv
es
insl
fsubl
rorb
je
or
test
arpl
add
inc
or
mov
xchg
cmp
jecxz
movsb
mov
mov
clc
loope
inc
pop
ret
mov
adc
shl
cmpsb
insb
inc
call
in
clc
cmpsl
push
push
and
push
fiadds
push
sub
inc
and
mov
mov
arpl
ret
xchg
jge
gs
in
or
mov
sbb
das
mov
mov
stos
aad
jo
int
test
clc
dec
mov
jmp
xchg
test
or
sbb
idiv
dec
addr16
push
leave
cmpsl
mov
aaa
jge
lret
fcomp
and
xchg
out
or
imul
mov
test
popa
out
pushf
fnstcw
mov
aad
int
lret
xlat
xor
sarl
sbb
imul
mov
call
scas
gs
stos
pop
ja
divb
mov
sbb
cmc
sbb
scas
mov
mov
and
je
pop
lea
ret
add
cmpsb
out
jnp
dec
cmp
dec
pop
and
ret
sub
mov
adc
add
pop
out
fstpt
stos
push
push
inc
fdivs
or
pop
sahf
aam
adc
int
les
insb
iret
push
in
sbb
pop
add
fcomps
jl
adc
mov
lea
mov
pop
rclb
mov
jmp
push
sub
or
sarl
cmpsb
sahf
mov
fldl
sbb
out
hlt
cwtd
jne
fstps
inc
out
mov
jb
jle
outsl
shlb
jp
lcall
xor
inc
adc
scas
add
outsl
fdivrp
mov
pop
lea
pusha
scas
leave
jge
xchg
mov
jp
and
push
gs
movsb
ficoml
sbbb
movsl
gs
mov
iret
mov
icebp
jg
push
push
scas
and
out
je
jmp
inc
sub
orb
push
stos
into
cmp
add
movsb
sbb
add
mov
jns
xor
or
inc
gs
imulb
add
lret
xor
js
mov
nop
mov
mov
mov
ja
fisttpl
ret
mov
mov
mov
adc
dec
pop
cmpsl
push
nop
mov
pusha
es
cli
adc
mov
adc
dec
and
cwtl
lcall
mov
ret
or
sub
push
aas
mov
lret
rolb
pop
scas
pop
fadds
mov
mov
bound
mov
pushf
mov
cmp
nop
jmp
add
inc
fisubrl
sbb
cltd
jns
in
fistpl
lock
add
jmp
loope
mov
sub
repz
dec
pop
loope
in
push
inc
push
cld
or
xor
add
xlat
jp
in
lods
ja
int
xchg
adc
loopne
dec
lods
jb
shlb
fwait
dec
dec
aas
xchg
push
cli
and
out
push
mov
test
adc
dec
adcb
ljmp
add
sbb
pop
lds
in
dec
mov
stc
sub
test
loope
fwait
sbb
add
loop
fidivrl
dec
mov
or
inc
icebp
adc
mov
dec
inc
push
cmp
dec
add
nop
adc
xchg
push
sbb
jno
lret
mov
ret
scas
jo
push
pop
xchg
in
push
sub
int3
mov
xchg
mov
stc
test
jne
pop
and
sarb
in
lret
stc
dec
push
pop
mov
jecxz
jns
jnp
pop
es
mov
lods
movsb
mov
je
mov
iret
imul
fs
cmp
lret
mov
dec
shrl
shll
imul
and
jne
and
loop
push
lods
fstps
dec
aaa
jge
rorb
push
inc
or
lcall
sub
or
and
lret
mov
pop
inc
enterw
mov
shrb
or
dec
xchg
es
imul
imul
or
ftst
cltd
mov
jp
sbb
fld1
mov
inc
push
push
jbe
arpl
sarl
inc
jl
loop
in
fadds
adcb
push
sub
mov
dec
sub
xor
sub
cmc
mov
xchg
mov
lods
push
out
adc
or
test
repnz
popa
stos
fisubs
inc
inc
sar
add
movl
add
stos
mov
jge
cmc
mov
add
dec
fldcw
inc
daa
mov
mov
push
in
lret
xchg
cmp
mov
pop
mov
mov
mov
adc
xorb
cmp
or
sahf
sbb
call
push
or
aad
add
xchg
nop
aam
lcall
dec
lahf
xor
lret
push
or
or
aam
dec
aas
or
dec
pusha
sub
fsubs
imul
lods
popf
mov
cltd
dec
daa
scas
cmp
mov
loope
sbb
mov
cltd
mov
rcll
jp
loopne
test
movb
jb
lret
imul
mov
stc
mov
xlat
xchg
aam
mov
mull
insb
xchg
js
fcmovbe
insl
xchg
repz
push
cld
cmpsb
inc
cmp
jl
dec
cmp
sub
push
jp
sub
ja
shll
dec
pop
inc
movsl
mov
scas
add
in
dec
ja
push
repnz
gs
aad
cmpsl
filds
fwait
xchg
sub
xor
repnz
or
test
xchg
enter
add
inc
inc
push
shll
xchg
xor
sub
push
aas
loope
adc
mov
lret
xchg
xchg
daa
push
xlat
sub
mov
mov
mov
cwtl
mov
add
xchg
jmp
ja
ret
xchg
mov
icebp
mov
jge
and
push
xchg
jnp
sbb
jo
pop
rcr
jl
dec
lods
repz
mov
pop
aam
xchg
fnstenv
xchg
mov
popa
sub
leave
sbb
es
jns
in
or
popf
sahf
jecxz
invd
in
push
test
test
aaa
mov
inc
fistps
mov
xlat
sub
lea
aad
js
iret
dec
fucom
adc
pushf
insl
pop
lods
into
sub
jnp
repz
imul
add
mov
sbb
xchg
xor
jle
mov
fwait
and
popf
lods
cmpl
rorb
rcrl
jbe
or
andb
dec
jl
fwait
mov
mov
xor
xor
pop
test
dec
xor
shrb
mov
jg
or
insl
mov
popa
xchg
jo
loope
nop
pop
loopne
jp
outsl
xchg
pop
pop
das
adc
or
lock
push
in
subb
cmpsb
and
pop
mov
dec
cld
mov
and
imul
sarl
mov
xor
clc
cmp
je
mov
ficoms
mov
inc
je
test
xor
mov
out
imul
push
inc
dec
lea
pop
mov
jecxz
rcrb
jmp
pusha
sbb
fs
sbb
rol
jnp
imul
outsb
inc
push
mov
mov
inc
dec
test
scas
gs
lea
ficomps
cmp
pop
aad
cmp
push
mov
xchg
arpl
mov
xor
testl
shl
dec
mov
jne
dec
mov
int3
gs
dec
mov
adcb
popf
ficoms
pop
xchg
inc
ss
jbe
pushf
push
push
enter
adc
popf
js
mov
and
int3
inc
repz
pop
fucomip
jge
mov
dec
lcall
dec
xor
cli
ja
push
movsl
cmp
push
scas
dec
clc
adc
add
ss
cld
pop
pushf
sub
dec
rcll
ljmp
push
outsb
stc
mov
movsl
cmp
jge
test
aad
xchg
sti
mul
aad
cmp
push
loope
xlat
into
add
lret
jnp
inc
cmp
and
add
leave
scas
push
mov
hlt
cmp
cld
aas
mov
push
sub
cmp
push
aas
mov
sbb
inc
or
sub
jecxz
movb
ret
sub
cmp
imul
movsb
mov
sub
int
and
pop
lret
mov
cmp
rsqrtps
xchg
out
ljmp
mov
dec
inc
adc
subl
mov
adc
cmc
push
inc
int3
mov
out
adc
out
outsl
dec
adc
pusha
data16
outsb
aam
jnp
das
mov
xor
mov
mov
rclb
sbb
sti
cwtl
lret
sub
hlt
cmp
dec
js
xor
push
xchg
mov
push
inc
xor
fidivrs
mov
test
aaa
jae
pop
pushl
lds
pop
mov
mov
mov
fwait
push
sub
push
out
mov
movsb
cltd
sbb
sub
pusha
jbe
shl
and
rorl
repnz
decb
xchg
scas
shll
frstor
sbb
jb
fsubrp
scas
scas
xor
cmp
popw
inc
cmpsl
pop
sub
fwait
jmp
push
clc
inc
faddl
stos
inc
js
roll
add
jo
lahf
lds
negb
pop
xchg
out
sub
shll
rorl
addr16
stos
movsl
jp
cli
rcrl
sub
lret
push
jmp
pusha
push
jg
int3
stos
rcr
into
push
sub
stos
push
xor
andb
mulb
inc
inc
stc
aad
inc
adc
inc
pop
jno
lods
xchg
das
xchg
adc
add
ljmp
in
std
mov
inc
cmp
movsl
cli
ja
in
add
jge
aaa
aam
add
or
into
cld
cmc
hlt
xorb
out
pop
repnz
and
ficompl
ljmp
jnp
sti
mov
xchg
mov
dec
icebp
ja
mov
jecxz
mov
mov
add
insl
hlt
fnstenv
lea
inc
adc
xlat
dec
fwait
push
lods
outsl
or
mov
imul
sub
jnp
aad
mov
jbe
add
ret
insl
mov
pop
xor
mov
outsl
xlat
pop
inc
mov
jg
outsb
xor
fs
mov
movsl
js
sub
aam
and
xchg
mov
push
push
xchg
mov
xchg
lock
mov
rorb
shrb
outsl
in
pop
pushf
lea
xlat
lds
test
enter
cmc
data16
push
sbbb
shlb
adc
add
fucomp
in
push
jp
dec
sub
test
mov
cmp
int3
out
cmp
decb
adc
std
lea
call
out
pop
mov
cld
or
add
pop
adc
cmpsb
jmp
dec
xchg
push
sbb
das
sbb
pop
rol
cmc
scas
sbb
cmp
and
out
out
cmp
pop
roll
xchg
aaa
fnsave
mov
repnz
in
cmpsl
mov
pop
fsubrs
mov
test
es
enter
call
pushf
xor
mov
lods
lcall
sbb
pop
pusha
xor
or
xlat
data16
insl
int
add
imulb
adc
clc
xor
imul
jno
and
out
out
sub
sti
push
and
lahf
repnz
mov
repnz
ja
ja
stos
loope
fs
jecxz
inc
jae
xor
mov
bound
aam
push
cwtl
lret
push
cmp
inc
xor
aad
les
lret
scas
dec
cmp
cld
js
push
add
mov
sarl
sbb
pusha
rcll
movsb
loopne
dec
ljmp
xchg
cmp
loop
les
dec
pop
mov
fisubrl
outsl
mov
jp
jo
les
imul
stc
mov
fwait
les
in
lods
or
mov
adc
sbb
add
fcmovbe
arpl
loope
jecxz
fcomps
and
subb
inc
sbb
pop
shlb
mov
call
fisubl
push
loop
dec
jno
cmp
cmc
push
mov
cmpsl
stc
mull
rcll
inc
pop
idivb
or
push
mov
xchg
adc
int3
jle
inc
popf
test
xchg
sbb
sub
inc
pusha
adcb
add
addr16
push
lods
sbb
cmpsl
int3
sub
clc
push
ljmp
mov
add
in
adc
push
js
mov
or
sbbb
leavew
sbb
fcoml
mov
jb
std
lds
loop
js
sbb
lcall
pop
dec
push
xchg
mov
scas
add
ds
test
ficomps
inc
xchg
fcoms
scas
les
lea
or
loopne
insb
lods
loop
adc
dec
dec
test
es
cmp
pop
cmp
adc
imul
addr16
test
mov
enter
andl
scas
xor
pop
jle
mov
pop
scas
ss
sbb
ds
sbb
cld
jp
adc
xchg
mov
mov
sbb
xor
rclb
xchg
lret
lods
scas
je
push
pop
rcrl
jl
mov
pop
inc
ss
cltd
adc
pop
bound
add
leave
add
test
scas
or
pop
ret
jo
or
nop
sbb
jnp
popa
sbb
xchg
jno
and
in
mov
lahf
and
cmp
sarb
aaa
mov
and
scas
jmp
jo
dec
leave
adc
push
adc
mov
dec
pusha
rorl
faddl
out
xchg
sub
cltd
outsl
xchg
fsubr
insb
jne
and
pop
subb
std
dec
lods
add
repz
push
push
cli
div
jle
testl
popf
sbb
in
dec
mov
inc
dec
arpl
inc
push
and
pop
movsl
sbb
hlt
outsb
xchg
inc
cmp
sbb
sbb
sbb
orb
jcxz
jmp
push
hlt
lds
adc
mov
in
pop
mov
cmp
cli
mov
dec
sub
sub
push
notb
mov
ss
js
add
dec
je
outsb
cmp
or
jae
in
aad
notb
mov
jb
scas
dec
mov
pop
xchg
xor
or
add
movsb
sub
jp
outsb
out
jl
xchg
mov
sub
gs
test
jle
sti
sbb
mov
pop
jge
cmp
mov
lret
out
mov
aaa
js
lods
and
lock
mov
stc
inc
push
in
repz
into
arpl
sbb
adc
jmp
pop
sbb
cwtl
aam
pop
add
mov
shl
lret
sub
nop
mov
in
sub
shll
cmp
ret
mov
xchg
dec
out
fcoml
sahf
movb
lds
mov
clc
xchg
cli
loopne
sub
push
dec
aam
lods
enter
pop
nop
mov
into
jns
bound
mov
movb
and
and
test
mov
cli
sbb
movsb
insl
daa
scas
flds
cmp
rorl
sbb
cmp
cs
loope
inc
fs
ret
sub
insb
lock
imul
aas
stc
and
push
pop
pusha
push
out
shll
pop
test
jo
pop
cmc
xchg
cmp
jge
mov
pop
xchg
jno
lods
rcl
cli
cmpsl
and
jmp
push
cmp
aad
mov
lds
jb
xor
aad
je
push
inc
faddl
push
movsl
aaa
pop
mov
pop
sbb
out
xchg
icebp
leave
leave
mov
mov
push
and
cmpsb
lret
adc
dec
scas
xchg
sbb
stos
jecxz
mov
icebp
mov
mov
sahf
xchg
add
test
push
je
dec
dec
jbe
add
xor
lcall
jno
dec
lahf
mov
je
lea
cmp
pop
mov
cvtps2pi
mov
lret
hlt
adc
sahf
push
roll
pop
sbb
pop
cmp
cmpb
enter
lret
xor
js
jl
xchg
pushl
lea
jmp
jae
mov
jmp
xchg
lret
subl
loop
out
pop
dec
mov
std
adc
comiss
mov
and
test
test
lock
sbb
stc
jl
xor
adc
pop
outsl
fiadds
shlb
jae
sub
pop
mov
movsb
inc
gs
out
in
or
int
inc
push
jno
and
addr16
mov
adc
push
dec
cmc
test
cli
mov
pusha
mov
xor
in
pop
adc
push
xor
xor
loop
pop
add
mov
imul
or
repnz
sbb
je
aas
add
xor
jnp
fildl
mov
xor
sub
or
loop
inc
sbb
rcrb
ret
and
xchg
stc
xor
mov
and
roll
or
or
sbb
push
push
test
imul
mov
dec
gs
out
jle
incb
jl
loope
fs
or
or
cmp
sub
shrb
fwait
rorl
push
loop
mov
jno
adc
and
add
jl
push
inc
cvtps2pi
dec
pop
pop
add
jp
sbb
sahf
mov
mov
push
pop
push
sahf
daa
sub
mov
mov
lea
fiadds
pop
or
or
fs
mov
mov
xchg
lahf
mov
icebp
dec
xchg
shlb
bound
inc
or
push
jne
mov
mov
cli
jo
dec
test
cmc
push
mov
xchg
addr16
sub
add
arpl
lcall
data16
movsl
sbb
sub
jg
jg
cmp
outsb
mov
xchg
xchg
cmp
xchg
sbb
add
jg
in
dec
adc
gs
inc
sbb
jle
adc
daa
pop
cmp
mov
or
out
adc
hlt
xlat
xor
aas
jp
inc
daa
out
mov
inc
mov
jo
and
dec
cmp
jno
xor
mov
inc
lret
cmpsb
jl
push
cs
aas
mov
shrl
sahf
pop
cmp
das
fwait
add
adcl
jno
lds
popa
dec
shrb
scas
xchg
pushf
mov
mov
aas
int3
imul
loopne
lods
jmp
iret
xchg
addr16
das
clc
in
mov
jge
cmpsl
adc
xor
cmp
pop
fwait
pusha
or
dec
lds
notb
push
aad
dec
les
lock
insl
push
adc
xchg
call
cmp
push
ffree
xrelease
loope
sti
mov
je
ss
dec
pop
fs
jae
and
andb
adc
shlb
ljmp
sbb
and
std
ss
sbb
mov
xlat
rorb
popf
lods
xor
jae
sub
sbb
fistps
lods
push
add
je
imul
pop
shlb
cmp
and
scas
inc
push
fdivr
or
cs
inc
xchg
mov
cmpsl
xchg
adc
mov
imul
and
xor
cmpsb
push
mov
xor
popa
push
jns
ds
roll
js
loopne
in
in
test
ja
lods
sbb
jb
imul
std
shlb
inc
mov
push
add
mov
cli
push
adc
xor
jecxz
aad
xor
push
cli
insb
addr16
push
nop
clc
push
popf
stos
addr16
inc
aaa
jecxz
dec
or
pushf
pop
xchg
fbld
and
add
mov
enter
xchg
ret
adc
mov
stc
nop
mov
je
adc
add
inc
dec
push
and
pop
mov
pop
in
sbb
xlat
lcall
mov
mov
or
hlt
popf
adc
pushf
push
adc
push
mov
fwait
add
xor
mov
cmp
aam
mov
jmp
pop
cs
push
loope
jno
enter
jae
insl
call
lcall
and
fistpll
lcall
cwtl
in
mov
dec
jb
aam
cli
clc
add
leave
xchg
incl
jnp
xchg
addr16
mov
fcomi
and
imul
mov
incl
cmp
pop
test
mov
dec
dec
icebp
mov
arpl
shlb
dec
pop
sub
fisttpl
fnstsw
push
loopne
inc
jmp
ss
imul
xchg
adc
mov
jae
scas
ja
fldcw
icebp
or
inc
das
cmp
pop
cmp
sahf
gs
dec
loopne
cmp
insb
xchg
sbb
clc
sti
popf
out
std
mov
mov
aam
ret
cmp
sahf
icebp
addr16
xchg
cmp
scas
add
rolb
xchg
jne
lsl
sub
cli
dec
test
scas
daa
mov
mov
mov
xchg
cmpl
xchg
pop
stos
cli
mov
lock
jae
js
fiadds
push
pop
sbb
mov
dec
inc
mov
cmp
inc
jge
lds
jmp
lods
fstps
ret
mov
mov
adc
scas
leave
and
data16
cmc
add
dec
js
je
push
jmp
dec
mov
js
ret
sbbb
gs
jp
pusha
arpl
dec
adc
mov
mov
inc
sub
push
mov
inc
cmc
dec
scas
adc
rcrl
jp
clc
insl
sbb
addl
and
and
mov
daa
insl
int
jl
into
hlt
lock
xchg
inc
daa
pop
push
cmp
and
cmp
jo
mov
ret
jecxz
jl
mov
mov
jge
add
out
lcall
xchg
xchg
jmp
pop
sbb
mov
or
roll
xor
scas
setp
add
pop
imul
push
mull
push
sbb
test
xchg
int3
ljmp
mov
pop
or
call
xlat
push
jnp
push
pop
jae
pop
mov
repz
jne
in
call
inc
in
xor
cmc
jae
and
sub
or
sti
xchg
scas
mov
enter
test
adcb
inc
sarl
ljmp
ja
sbbl
decl
imul
mov
push
in
fcoms
xchg
cmpsb
lahf
cmp
cs
scas
adc
dec
and
lock
fcom
and
rcrb
mov
sbb
inc
into
orb
popa
jecxz
jp
aad
add
xor
imul
cwtl
cwtl
leave
sbb
push
shl
mov
mov
jnp
andl
inc
sub
loopne
pop
inc
cmc
jecxz
cmp
ljmp
mov
outsl
outsl
dec
pop
xor
sbb
scas
adc
hlt
inc
xchg
scas
inc
xchg
xlat
sub
inc
es
jnp
push
fadds
jl
int3
leave
es
mov
push
and
xchg
shrb
mov
scas
dec
add
stos
add
adc
cmp
push
xchg
loop
repz
arpl
jbe
inc
mov
pop
cld
cwtl
push
sbb
cs
mov
aam
mov
lcall
out
mov
int
sbb
mov
cmpsl
jecxz
sti
sahf
sbb
mov
fs
repnz
clc
int3
popa
add
or
push
es
mov
pop
lock
rorb
xchg
pop
jbe
push
cmp
leave
rcll
lock
cmp
loopne
push
jo
int3
adc
out
cld
xor
lret
fadds
mov
sbb
cmp
ret
adcb
inc
mov
cltd
add
cwtl
cmp
int
lahf
adc
int
inc
jne
test
inc
xchg
sbb
andl
mov
cmp
mov
mov
xor
dec
cmpsb
je
xchg
inc
xor
add
jae
ljmp
lcall
repz
inc
push
push
std
dec
aas
sahf
aas
push
cld
sub
cmpsb
test
and
mov
push
cs
mov
mov
iret
fdivs
mov
prefetch
or
dec
add
xchg
dec
pop
ret
frstor
ss
inc
ffree
out
jb
push
mov
imul
in
scas
imul
and
ret
inc
xor
cmp
xor
sbb
pop
ss
repnz
jb
and
xor
pop
repnz
lods
cmpsl
ss
pop
ds
les
aaa
test
xor
adc
and
and
imul
andl
lods
dec
mov
lcall
neg
jl
in
xchg
jg
mov
test
andl
jnp
daa
push
mov
clc
mov
insl
mov
or
in
sti
inc
pop
daa
aam
in
inc
push
pop
inc
pop
aas
divb
or
fdivrp
push
inc
test
sbb
mov
sbb
add
data16
sub
fbstp
sbb
mov
imul
cmc
adc
hlt
mov
test
lods
push
loop
dec
insl
add
lret
pop
mov
inc
or
jb
aaa
xchg
dec
enter
cmp
cmp
inc
inc
cld
xchg
add
pop
icebp
sub
xchg
push
adc
imul
subl
lds
cmp
cmc
out
cmp
push
push
aaa
jns
jno
mov
adc
inc
mov
ja
and
scas
or
sahf
ret
adc
and
sbb
adc
mov
ss
aad
jns
sbb
push
and
nop
cmp
sub
dec
lret
arpl
sub
push
mov
inc
call
xchg
ret
mov
loop
and
repnz
mov
loope
xor
cltd
pop
sub
sbbl
cs
xchg
mov
aas
xchg
shlb
xchg
push
arpl
mov
inc
or
sub
sub
sbb
inc
call
jb
in
jg
add
and
or
or
repnz
jecxz
loop
add
push
inc
outsl
cli
mov
cmp
out
add
sub
stos
daa
dec
xor
les
nop
sub
or
es
dec
inc
test
les
scas
sbb
in
cmp
xchg
lahf
mov
shrb
shrl
jecxz
pop
inc
outsb
dec
or
in
mov
xchg
pop
aad
int
jo
and
mov
mov
mov
push
adc
pop
mov
sbb
jbe
aas
inc
mov
xchg
inc
out
add
je
and
mov
dec
lret
jae
jo
inc
les
mov
test
jnp
adcl
cmc
mov
dec
sar
call
stos
and
mov
jle
sbb
jno
cmc
lahf
inc
mov
scas
into
sahf
cmp
push
inc
sub
inc
shrb
daa
sbb
push
xchg
push
imul
mov
inc
lcall
lcall
in
or
sbb
shll
mov
push
sbb
ljmp
xor
xor
mov
daa
push
add
pop
xchg
outsl
mov
mov
mov
in
faddl
jae
dec
enter
insb
push
jmp
add
push
pop
sti
sbb
ret
pop
push
pop
fs
sbbl
add
inc
mov
imul
test
imul
push
rclb
cmc
cltd
test
das
neg
ljmp
adc
rcll
outsb
or
cmpsb
push
xlat
inc
sub
stc
jb
in
lods
dec
cmc
pop
repz
sahf
sbb
sub
sub
mov
cmc
out
out
dec
push
cs
aas
daa
cmp
mov
shr
mov
shlb
lret
out
cld
es
xchg
andb
sbb
xchg
dec
sub
sbb
lods
xchg
in
scas
das
cmpsl
cmp
imul
lret
mov
jge
inc
inc
xor
mov
scas
pop
sbb
cmp
movsl
xchg
add
in
add
add
rorl
sbb
popl
xor
rol
jne
and
xchg
cmp
push
adc
jo
mov
imul
and
mov
mov
arpl
bound
push
sbbb
or
mov
sub
dec
pop
popf
jg
inc
push
jbe
jl
sbb
xchg
pop
sahf
mov
andb
lcall
outsl
cmp
imul
xchg
jecxz
push
adc
cmpsb
sti
cmp
imul
inc
adc
jbe
loope
icebp
out
fdivr
daa
pop
mov
sub
aam
xchg
lcall
mov
stos
shrb
xchg
lcall
cmc
sahf
inc
pop
adc
xchg
js
stc
add
call
daa
pusha
push
loop
jp
and
lahf
dec
flds
gs
push
and
jnp
jno
fidivrl
sbb
push
mov
push
rorl
or
sahf
fisubrs
xor
xor
cltd
in
mov
movsb
shr
clts
data16
ja
mov
adc
icebp
nop
fs
add
jo
dec
imul
imul
xchg
out
mov
nop
cmp
adc
mov
ljmp
pop
in
fimuls
mov
mov
dec
mov
in
jle
inc
add
ret
jo
xor
sti
sbb
scas
shr
and
cltd
push
add
and
aam
in
add
mov
lods
pop
and
sub
mov
fsubrs
xlat
push
push
cmp
mov
mov
mov
push
stos
xchg
mov
jl
xchg
sbb
push
sbb
mov
pop
or
xor
add
flds
in
xor
jmp
push
xor
push
fwait
mov
shrl
cmpl
iret
daa
arpl
cmp
mov
shr
adc
dec
stos
cmp
mov
pop
out
push
orb
gs
aas
cmp
mov
mov
xchg
loopne
jns
mov
sub
push
push
jl
sbb
jo
es
repnz
mov
mov
dec
aad
outsb
xchg
mov
or
inc
adc
pop
and
xor
mov
xchg
jns
mov
mov
sbb
idiv
repnz
aas
mov
jle
pop
ja
or
inc
adc
imul
loope
into
mov
inc
mov
ja
xor
aaa
mov
push
imul
pop
push
push
mov
lahf
mov
jo
lock
xor
fdivr
dec
idiv
aaa
insb
or
inc
repz
lret
lcall
outsl
addr16
fists
notl
sbb
jp
faddp
pop
insl
or
jp
push
mov
rcll
cmpsb
inc
iret
test
sbb
in
sbb
imul
cmpsb
ret
sbb
mov
pop
jns
aaa
and
lea
fs
push
inc
cmpsb
dec
xchg
ja
adc
jmp
push
mov
je
sbb
daa
push
pusha
mov
pop
pop
ror
mov
test
lcall
inc
lahf
xchg
fucomp
into
sbb
jb
sub
ss
mov
mov
out
leave
sbb
mov
decb
arpl
and
arpl
ds
pop
movsl
aaa
leave
and
dec
push
jge
push
mov
aaa
mov
repnz
cli
lea
dec
and
pop
fwait
dec
inc
add
dec
in
cmp
pusha
push
in
cmp
cmp
daa
mov
pop
sbb
cs
mov
xchg
mov
aas
cmp
cs
sub
lods
in
in
jnp
not
repz
push
inc
cmpsb
mov
leave
popf
std
in
test
daa
mov
cmp
dec
popa
mov
inc
push
loop
inc
lahf
fistpl
mov
push
popf
mov
push
mov
pop
mov
inc
jmp
incl
enter
jbe
mov
rcll
cmc
inc
jbe
lfs
dec
mov
add
push
js
addr16
lds
lds
out
mov
fmuls
add
xor
pop
lock
lret
hlt
fs
out
xchg
mov
insl
movsb
jmp
pop
out
in
ret
jae
sub
mov
shll
fwait
std
into
inc
xorl
std
leave
arpl
nop
loop
or
and
fprem
aad
mov
xchg
mov
je
dec
jnp
divl
nop
das
inc
pusha
pushf
push
test
lea
mov
adc
or
sbb
in
stos
push
jb
test
adcl
or
fildl
pop
data16
loopne
in
test
repz
ljmp
sub
inc
mov
in
mov
xchg
cmp
and
sbb
mov
mov
jnp
bound
lds
adc
adc
lock
lret
es
adc
jno
data16
pop
mov
push
xchg
cmp
push
pushf
pop
addr16
and
jbe
fistps
cmp
rorb
imull
sbb
add
mov
test
or
testb
das
stos
enter
inc
pushf
mov
xlat
imul
in
jmp
adc
xor
pop
and
pusha
cmp
nop
in
pop
or
adc
cmp
jge
outsl
roll
mov
stos
outsl
xchg
data16
sbb
xor
or
call
fsubr
in
adc
test
xor
pop
ret
arpl
icebp
mov
jbe
std
cmp
notl
and
push
mov
std
pop
dec
push
mov
repz
adc
mov
out
subb
imul
jmp
lock
repz
data16
das
xchg
cmp
push
imul
pushf
mov
cwtl
push
cs
dec
mov
fdivp
mov
jbe
call
and
xchg
bound
fsubrs
push
mov
pushf
es
mov
fdivl
out
fdivp
mov
mov
push
jnp
pop
sti
dec
in
fwait
xchg
pop
sbb
iret
push
ret
fisubrl
outsb
xchg
mov
xor
add
pop
pop
repz
lock
ljmp
cltd
imul
mov
call
jg
pop
ja
dec
ljmp
mov
shlb
jnp
cltd
mov
mov
jbe
mov
pop
subb
inc
xchg
movsl
sub
cmp
scas
mov
movd
sahf
jmp
out
inc
mov
jne
fists
iret
jns
in
test
mov
jge
out
ret
xchg
clc
sbb
sub
out
pop
xor
xchg
xchg
movsl
adc
pop
cs
or
imul
mov
mov
sti
call
mov
movsb
sub
lahf
repnz
pushf
xchg
inc
dec
sbb
lods
mov
sbb
in
imul
stc
and
add
adc
lret
iret
add
pop
mov
into
and
jno
mov
jne
adc
gs
dec
ss
sub
andl
xorb
loop
fxch
sahf
add
sub
mov
enter
jp
mov
aaa
loopne
dec
outsl
adc
popf
imul
daa
sbb
jmp
xor
insb
pop
mov
lret
divb
xor
aad
nop
scas
pop
daa
inc
imul
imul
or
push
mov
xor
gs
loopne
fs
in
adc
imul
dec
bound
out
mov
and
bound
sub
dec
cmc
scas
lods
xchg
lds
scas
push
pop
in
lret
xchg
rcll
jae
mov
xor
imul
nop
push
ds
xor
dec
daa
sub
fidivl
sub
xor
shrb
loope
sbb
inc
adc
imul
add
pop
pop
lock
fiaddl
pop
mov
push
ret
int
push
sub
imul
sub
push
shlb
inc
xchg
add
inc
subl
jbe
or
jbe
xor
hlt
push
sub
aam
cmp
lcall
dec
pop
cmpsb
xchg
mov
dec
mov
aas
mov
dec
push
enter
bswap
mov
add
inc
leave
into
sahf
mov
js
or
cmp
pusha
sbb
in
jle
inc
add
sub
pop
or
add
je
lret
in
inc
mov
or
dec
xchg
and
mov
icebp
push
sub
mov
mov
xchg
sbb
push
aas
mov
mov
mov
nop
stc
add
push
dec
clc
xchg
and
rol
or
inc
push
dec
or
cmp
mov
dec
leave
dec
sub
add
cmpsl
jno
jne
mov
xlat
ja
cmp
dec
jae
jmp
mov
mov
jmp
mov
adc
aaa
mov
push
push
loope
lahf
ljmp
adc
ds
jmp
pop
pop
ret
push
fs
arpl
sub
jb
mov
or
mov
pop
jge
jge
or
nop
jae
mov
jae
mulb
icebp
pop
test
popa
push
and
and
mov
scas
cs
daa
enter
sub
ficompl
jb
mov
inc
and
or
and
push
imul
das
movsl
fcoml
add
sub
jb
xchg
loop
jnp
idiv
mov
push
dec
fwait
push
sbb
lahf
pop
push
mov
inc
and
out
decb
sub
scas
leave
cmpsl
stos
test
cltd
sbbb
push
lds
mov
sub
mov
fisttps
add
dec
mov
pop
out
xchg
or
xor
mov
fwait
lods
add
mov
dec
cld
je
fbstp
dec
loope
lret
or
xchg
adc
lret
mov
inc
adc
movsb
cltd
data16
mov
jno
sahf
lods
cmp
cmpsb
cld
aaa
mov
dec
icebp
mov
imul
add
xchg
dec
xchg
in
ret
test
mull
cltd
inc
stos
test
aam
shl
inc
push
mov
aam
nop
lods
sti
loope
push
iret
pop
mull
mov
and
in
mov
ss
mov
sbb
fiaddl
iret
imul
dec
bndldx
adc
mov
arpl
mov
sub
sbb
inc
dec
cs
lock
aad
jmp
mov
xor
test
imul
cld
in
rcl
jns
inc
pop
test
mov
test
xchg
xlat
out
and
push
outsl
ja
mov
jg
outsb
or
jmp
push
les
lds
shll
sub
dec
xchg
and
or
or
pop
add
mov
jmp
cmpsl
adc
xchg
xor
or
cmp
adc
lahf
sti
fists
dec
inc
mov
shrb
and
or
mov
mov
mov
pushf
out
cmp
imull
or
loope
pop
inc
in
mov
repnz
rorl
addr16
mov
xor
add
xchg
jp
inc
ret
push
mov
pop
and
dec
clc
push
jbe
movb
xchg
shll
mov
dec
pop
jmp
add
pop
mov
xor
push
sub
movswl
in
xor
dec
jae
cmc
ret
call
cvtps2pd
imul
inc
addb
and
xor
cmp
jl
xorl
sub
into
jnp
rorb
xor
repz
div
sbb
and
mov
das
in
lret
ljmp
imul
out
adc
xchg
shrl
jmp
and
je
mov
add
daa
int3
pop
sub
sbb
lea
jg
xor
rolb
roll
jmp
fdivrs
idivl
es
cmp
mov
pop
jbe
insb
nop
jne
push
and
jmp
adc
inc
mov
xlat
std
inc
mov
dec
mov
or
loope
std
sti
adc
inc
addr16
int3
arpl
nop
dec
out
outsb
rolb
adc
lahf
inc
adc
repnz
divb
mov
ss
and
add
add
ror
insl
xchg
or
cmpsb
test
imul
clc
idivb
and
pushf
movsb
push
pinsrw
nop
xchg
mov
repnz
and
lretw
clc
ror
adc
mov
add
jno
jns
sbb
add
pop
hlt
fistpll
push
push
cmpsl
jbe
xor
aad
rcr
out
push
dec
jb
mov
fcmovu
dec
jne
xchg
pop
jp
and
sbb
sub
dec
ds
incl
jns
lret
stc
mov
imul
aaa
imul
cmp
call
xlat
push
jne
fdivl
inc
mov
testl
xchg
shll
vorpd
and
mov
mov
lds
xchg
adc
and
andb
andl
andl
xlat
xlat
sub
pop
into
nop
fistpll
mov
and
ret
popf
mov
lret
js
lcall
sub
stos
loop
lods
jecxz
movsl
pop
and
jle
jp
pop
in
ja
dec
xor
ljmp
das
mov
fisubrs
pop
mov
mov
lds
adc
mov
adc
jae
inc
sub
sahf
fstl
lret
dec
mov
and
rcrb
clc
xchg
scas
insb
mov
jge
push
popf
mov
jge
es
push
cmp
aad
insb
adc
jae
xor
pop
mov
frstor
cmp
imul
inc
or
rorb
imul
jbe
fimull
repnz
insl
bound
sub
adc
fistl
add
inc
ret
mov
es
jmp
cmp
ret
adc
pop
aad
insl
xchg
pop
cwtl
dec
mov
xorb
push
sti
repz
cmp
cs
lods
mov
outsl
add
loopne
dec
mov
faddl
add
push
clc
ret
push
mov
lds
dec
push
rol
dec
push
sub
push
outsl
xor
cmp
cmp
out
jmp
sub
or
adc
add
xor
leave
or
loope
hlt
clc
rolb
xchg
jecxz
xchg
sub
mov
lahf
insb
popa
mov
stos
sub
sbb
push
insb
fldt
icebp
popf
cmc
sbb
pusha
icebp
jbe
into
cmp
addl
and
add
push
xor
xor
lock
lahf
xor
inc
mov
out
or
sub
ret
popa
mov
arpl
adc
sub
outsl
mov
jae
pusha
out
sub
leave
in
test
adc
imul
push
mov
xchg
hlt
and
rolb
in
icebp
push
test
xor
mov
jmp
sub
sbb
adc
aad
sub
daa
xlat
aas
div
push
aas
lods
ret
adc
insl
pop
inc
popa
lods
pop
sub
test
out
jnp
push
das
lea
hlt
dec
enter
aas
aam
adc
insb
into
push
lds
cs
and
ret
inc
icebp
rcll
shrb
mov
nop
lods
insl
or
fidivs
out
and
xchg
mov
cmp
lcall
inc
jnp
lds
sbbl
outsl
js
sbb
and
adc
dec
pop
test
lea
repnz
jl
insl
xchg
fisubl
xchg
pop
or
add
sub
inc
mov
sbbl
cmp
cwtl
cld
xor
dec
je
rolb
out
add
imul
xor
xchg
mov
arpl
jge
movl
jmp
les
jne
mov
mov
icebp
sub
out
hlt
adc
add
popa
cmp
fs
or
in
jmp
int
imul
sbb
mov
negl
mov
cmc
repnz
cld
loop
mov
ret
inc
dec
jmp
xor
popa
out
stc
sbb
int
shl
clc
cmp
pop
mov
inc
gs
mov
pop
jg
mov
cwtl
mov
repnz
xchg
fstps
stos
shrb
mov
mov
sbb
lret
mov
sub
sub
or
mov
xchg
scas
mov
mov
or
jbe
xor
sbb
icebp
jle
dec
lret
imul
xor
in
inc
iret
sti
push
sub
iret
in
jb
stc
aam
push
pop
pop
or
icebp
xor
std
jge
lahf
jb
pop
mov
mov
pop
lahf
and
and
xor
bound
lret
incl
adcb
arpl
cmp
jecxz
jbe
adc
shlb
or
inc
lock
add
out
dec
add
mov
popf
std
lds
leave
cmp
mov
mov
negl
setp
jmp
cli
setae
loop
push
cmp
ret
fisubl
cmpsb
pop
sbb
mov
sub
inc
mov
cmp
push
xor
adc
stc
lcall
inc
push
pop
and
movsl
aam
jge
sbb
lea
out
xor
mov
fcom
jb
pop
mov
mov
les
fistpll
mov
add
add
cmp
xor
pop
arpl
ds
xchg
lds
or
scas
jnp
push
push
xor
lock
jns
mov
add
pushf
pusha
sbb
push
sbb
scas
mov
or
arpl
dec
in
loope
add
test
cmpsl
into
in
cmp
xchg
rcll
ret
insl
mov
sub
xchg
loop
mov
mov
scas
add
in
fsubrl
aas
cli
enter
fsubl
pusha
xor
dec
sti
cmp
dec
les
add
orl
roll
inc
les
shl
out
mov
xchg
cld
mov
int3
bound
repz
outsb
add
rorl
insb
and
dec
mov
cwtl
add
jbe
je
aam
ficomps
imul
in
pop
mov
outsl
push
cmpsl
mov
je
or
lea
test
push
or
loopne
mov
pmulhw
xchg
push
and
mov
or
loop
lahf
stos
pop
xchg
inc
imul
aaa
loop
dec
popa
mov
push
cmpsl
push
stc
inc
or
popl
rcll
and
lret
movsb
imul
test
adc
or
inc
dec
mov
push
inc
mov
shl
clc
imul
mov
add
pop
sahf
jg
dec
jnp
stos
rolb
mov
mov
cwtl
mov
pop
pop
frndint
mov
mov
sbb
inc
cmpsb
xchg
out
xchg
or
or
fcoml
pop
and
sub
xchg
inc
push
mov
insb
in
and
test
sbb
jg
jge
xor
aas
mov
dec
pusha
add
dec
adc
lods
daa
sub
ja
insb
mov
rorb
bound
scas
daa
dec
ds
and
or
addr16
popf
adc
mov
scas
adc
jg
cmp
in
lahf
out
ss
jge
sub
das
pop
lods
pop
mov
add
add
fidivs
xor
test
mov
xor
inc
xchg
add
icebp
aaa
add
cmp
xchg
cmp
ret
cmp
stc
or
lret
push
adc
jmp
xchg
jb
push
push
addr16
push
pop
dec
inc
les
add
test
cli
addr16
xchg
pop
sbb
fsubrp
jp
pop
mov
sub
push
mov
mov
add
imull
sti
xlat
fs
add
xor
out
sub
fildll
in
rol
or
test
sub
cmc
and
dec
jno
int
mov
lock
pop
sbbb
cli
in
dec
enter
jmp
lahf
jb
jle
pop
icebp
pusha
sub
adc
fsubrl
sub
scas
mov
jbe
mov
jb
and
dec
call
js
iret
loope
and
push
jle
pop
lahf
testb
loope
rcll
neg
xor
mov
js
stos
scas
push
fdivl
push
jo
sti
insl
fs
or
adc
sbb
js
pop
mov
repnz
sbb
in
aas
ss
fistl
pop
jb
bound
pop
push
pop
loop
sub
push
sbb
jno
aam
dec
movsb
call
jmp
es
push
jg
insb
loope
jns
lds
gs
out
xor
repnz
out
adc
cmpsl
stos
das
int
xchg
push
and
in
sbb
dec
aaa
popa
add
std
icebp
mov
mov
mov
mov
jne
nop
push
cmp
sbb
jge
pop
mov
aas
mov
dec
push
pop
sub
xchg
mov
pop
sbb
insb
shlb
mov
mov
rcll
inc
pushf
cmpsb
clc
hlt
pop
pop
in
call
test
sbb
jecxz
fs
push
jo
lods
push
in
mov
or
pop
int3
pop
mov
inc
scas
pop
shlb
nop
adcb
insl
sbb
and
lds
cmp
pop
fsubp
or
out
sub
push
add
dec
push
xor
addr16
xchg
jb
mov
or
das
fs
pop
cmp
incl
daa
test
aas
stc
dec
mov
movsb
or
and
dec
cli
dec
xor
pusha
call
std
inc
ret
in
xchg
int
enter
aad
test
mov
sbb
push
mov
push
or
xor
fsts
cmp
or
fildl
outsl
xor
fwait
push
imul
das
mov
adc
mov
inc
xchg
sbb
test
sub
scas
das
in
enter
pusha
dec
push
push
mov
cmpsl
enter
into
addr16
popf
nop
lods
lods
adc
int3
sahf
mov
push
xor
roll
sahf
aad
adc
and
jne
sub
les
sub
ficomps
lcall
fidivl
into
aaa
loop
roll
xchg
test
dec
lock
inc
jne
xchg
add
pop
es
jl
mov
stos
sbbl
cmp
lock
jo
shr
icebp
cmc
test
roll
push
xchg
add
inc
dec
mov
xchg
or
or
mov
mov
movsb
jle
pop
sub
inc
xchg
ret
xchg
sbb
cmp
enter
cmp
das
jle
popf
cld
or
imul
xchg
sub
pop
das
xor
fstl
xor
out
movsb
stos
outsb
lret
aam
popa
mov
and
ja
xchg
stc
jbe
ret
daa
pop
mov
lcall
adcl
cwtl
outsl
xor
lock
fwait
enter
ss
inc
dec
leave
roll
mov
xor
inc
lods
test
cmpsl
pusha
mov
pop
ds
push
popf
dec
gs
or
outsl
sbb
xor
add
mov
inc
fincstp
and
xchg
sti
cltd
jno
jne
pop
aad
out
adc
repnz
adc
or
fdiv
cli
cwtl
cmp
push
je
cmpsl
xorl
push
push
jmp
aad
cmp
jle
fwait
out
outsl
pop
xor
or
or
cmc
test
in
pusha
inc
leave
add
mov
jb
arpl
inc
repnz
aaa
sub
and
ret
push
test
test
lret
std
fdivl
cli
repnz
cld
inc
xor
je
and
add
cmp
pusha
test
fidivs
cwtl
imul
and
sar
lock
insl
fisubs
dec
arpl
mov
sarb
push
pop
orb
int3
xlat
mov
jne
cltd
fsubrs
sbb
jecxz
mov
aam
and
xchg
dec
imul
mov
test
mov
cmp
or
jg
cmp
and
pop
icebp
cmpsl
lea
lds
cwtl
pop
mov
in
mov
leave
xlat
push
stos
fnstenv
sti
push
fs
inc
in
lock
push
sub
insl
rolb
lret
push
xor
lods
mov
aam
dec
push
xchg
cmp
shll
inc
mov
lahf
xchg
mov
jne
add
es
idivb
mov
dec
push
mov
jecxz
test
imul
push
jo,pn
jecxz
mov
mov
frstor
and
rcrl
dec
out
or
cmp
add
ret
loopne
insb
xlat
push
hlt
jecxz
xchg
cmp
mov
dec
es
mov
mov
aas
inc
shll
jnp
shlb
jae
push
jns
jecxz
mov
insb
mov
sub
arpl
push
pop
mov
mov
and
jno
or
sti
cwtl
cmp
test
enter
sub
jge
and
jo
or
xor
je
sub
leave
imul
faddl
insl
std
das
push
fdivs
cltd
movsl
dec
cwtl
sub
cmp
sbb
xor
xchg
adc
mov
bound
mov
outsl
push
popa
sub
test
mov
dec
sub
loop
in
jmp
adc
pop
pop
sahf
jb
dec
jge
shll
call
lock
xchg
or
dec
out
push
mov
in
adc
push
pop
add
fsubr
dec
frstor
adc
imul
or
mov
outsb
loopne
out
fdivp
cld
cmpl
test
pop
sbb
push
cwtl
shll
and
sub
fidivrs
cli
scas
call
xchg
pop
sub
loop
mov
add
mov
xorb
and
ud1
call
fwait
xor
loop
jge
outsb
ficomps
popa
mov
or
mov
aad
adc
sbb
scas
add
jne
call
xorb
je
js
mov
fcompl
dec
outsb
mov
mov
cmp
cs
aas
std
out
xlat
rcrl
pop
cmp
or
jl
pop
sub
int
adc
mov
stc
xchg
add
cmp
xchg
ja
and
lret
inc
sahf
xchg
bound
dec
mov
out
pop
je
ja
inc
pop
inc
push
jmp
cmc
mov
xchg
pusha
imul
or
imul
ja
jecxz
jg
rcll
jbe
dec
xor
adc
push
clc
arpl
into
add
cmp
cwtl
pushf
sbbl
push
sub
cmpsb
movsl
leave
push
or
aaa
lahf
mov
test
jle
xchg
movsb
lea
loop
pop
pushf
loopne
jno,pt
mov
mov
xor
xchg
nop
pop
mov
cltd
push
pop
push
lahf
into
and
js
mov
cmc
out
scas
push
cmp
lcall
xor
mov
scas
and
sahf
icebp
mov
dec
imul
jno
push
push
psraw
jbe
pop
mov
sti
nop
mov
adc
sti
mov
cmp
jge
xor
sahf
xchg
fbstp
inc
ror
mov
push
push
or
ret
cltd
sbb
xor
lds
push
ss
call
mov
push
jb
ja
mov
pop
sti
mov
inc
xor
sahf
inc
cmp
hlt
rcr
mov
rcr
mov
push
shll
sub
in
scas
jae
push
ss
pop
pop
pop
cmp
repnz
sub
sbb
sbbl
shrl
push
gs
jbe
lods
addl
cwtl
mull
dec
xor
mov
leave
push
sbb
xchg
xor
data16
cmp
add
out
clc
and
int3
int3
add
insl
xchg
or
mov
dec
ss
popa
pop
adc
rorb
xchg
addr16
push
into
iret
jnp
shll
jge
push
mov
inc
arpl
sbb
xchg
jge
pushf
push
mov
mov
pop
cmpsb
daa
scas
mov
outsl
les
xchg
jmp
fdivs
pop
fldt
sbb
aas
mov
mov
js
inc
dec
iret
jge
pop
push
ret
xchg
sbb
or
sbb
hlt
das
xchg
insl
xchg
out
gs
std
dec
inc
mov
icebp
sub
cmc
cmpsb
add
into
sbbb
lods
es
xor
or
xor
jno
mov
shlb
stos
and
scas
mov
xor
dec
popa
loopne
ror
pop
fdivrs
dec
mov
imul
scas
xlat
jmp
xorb
dec
test
mov
ja
and
popa
aam
aas
test
pop
sub
out
gs
jmp
add
movsl
stos
adc
sbb
adc
xor
ds
pop
divl
test
sub
xchg
dec
pop
sub
std
cli
xor
xor
xor
pop
andl
movsl
sub
sub
push
xorl
shll
jns
jecxz
mov
test
xchg
jbe
rcrl
jecxz
testl
jle
or
cmp
out
lret
aad
adc
jbe
xor
pop
imul
cmp
imul
incb
pop
jp
test
rol
push
fwait
push
xchg
add
adc
jbe
into
inc
gs
or
pop
fxtract
adc
push
lret
idivb
mov
mov
lcall
sub
xor
pop
scas
hlt
out
add
xchg
insb
aaa
mov
cmp
ljmp
mov
mov
iret
jae
mov
rol
jo
push
mov
rorl
and
imul
add
ficoms
cmp
rcl
pop
fcompl
mov
lcall
imul
ljmp
cmp
cmpsb
mov
lock
fisubs
pusha
bsr
dec
adc
mov
loope
sti
insl
test
pop
push
in
mov
data16
jmp
cwtl
gs
icebp
mov
es
pop
pusha
jge
xchg
jbe
mov
cmpsb
jg
adc
pushf
adc
pop
dec
or
jns
add
push
push
cmpsb
mov
sbb
push
cwtl
jge
in
sub
mov
pop
mov
scas
add
fnstcw
data16
pop
cmpsl
in
add
stc
cmc
add
cs
dec
jno
out
les
gs
faddl
and
dec
repnz
cmp
adcb
in
xchg
es
pushf
jmp
faddl
and
pop
xlat
mov
adc
cmp
cmp
cmpl
es
rol
sbb
adcb
cmp
imul
js
insb
outsl
inc
pop
repz
add
mov
inc
xchg
push
mov
lret
mov
leave
or
enter
mov
xchg
dec
xchg
jo
xchg
sbb
mov
insl
jb
cmpsl
inc
xchg
xchg
sub
das
fistpl
dec
stc
je
or
fisttpll
jge
mov
mov
nop
dec
test
out
ds
imul
int3
sarb
aaa
pop
jl
iret
int3
xor
lods
jg
int3
mov
sbb
or
mov
cld
lret
push
sti
and
arpl
jno
loop
pop
mov
push
nop
scas
in
adc
adc
icebp
fwait
setnp
into
loopne
xor
sti
cmp
mov
and
cmp
out
pop
mov
insl
sbb
pop
stc
lret
or
inc
inc
pushf
push
mov
or
jnp
test
push
fisttps
loope
lea
dec
push
movl
jbe
pop
lock
addr16
cmp
sbb
pop
fcoms
cmc
mov
push
pop
push
adc
sbb
je
lea
jae
fsubl
mov
bnd
in
push
jle
gs
or
add
push
test
adc
sbb
out
mov
shlb
add
fcoml
repz
or
push
xchg
xchg
insb
xchg
aad
add
and
pop
mov
cmpsl
int
add
clc
cmc
jp
mov
sub
outsb
xchg
loope
cmp
cltd
or
pop
xor
mov
cmp
arpl
sbb
call
add
mov
shlb
out
cmp
sub
push
xor
lods
mov
fsubs
add
icebp
adc
rorb
ss
push
lods
popf
int
push
jo
or
sbb
test
rorb
and
pop
and
imul
mov
test
out
mov
rcr
mov
cmp
mov
leave
jl
xchg
dec
xchg
pop
pop
mov
push
pop
js
xor
movsb
xor
mov
es
mov
fs
stos
out
sbb
je
je
inc
ret
fstpl
xchg
shrl
push
cmp
add
pop
out
inc
ds
loop
mov
in
loop
jnp
jno
sbb
xor
icebp
dec
js
pop
rclb
mov
sbb
sub
rcr
push
dec
daa
inc
iret
out
pop
cmpsb
data16
push
sahf
aam
mov
popf
xchg
pop
add
pop
xor
dec
jg
jmp
in
push
mov
aaa
lods
jne
jmp
ljmp
f2xm1
or
pop
xor
es
outsl
imul
push
lcall
mov
out
mov
dec
insl
and
and
shr
rol
push
cmpsb
pop
and
ja
andl
ljmp
je
fimuls
jbe
daa
jbe
sub
rolb
add
sbb
or
pop
fsubr
in
jle
push
and
ret
jge
xor
push
mov
cmp
jp
stos
insb
jb
adc
cwtl
sub
mov
fsts
sbb
out
sbb
xchg
insb
push
lret
rcrl
not
push
xchg
mov
add
adc
pop
pop
in
mov
jbe
lcall
adc
add
add
lods
out
shrl
dec
mov
push
push
cltd
shlb
aad
ret
add
mov
sub
movsb
jmp
ror
push
mov
mov
aad
mov
shlb
sahf
dec
or
push
xchg
jbe
mov
push
ja
jae
xor
dec
dec
jbe
dec
pop
hlt
fsubrl
xchg
jl
andb
je
in
in
xchg
dec
imul
push
sahf
les
xorl
inc
push
mov
pop
scas
add
ja
mov
mov
mov
or
aas
loopne
or
pop
sbb
shl
retw
repz
sbb
imul
pop
aaa
pop
imul
adc
jmp
nop
xor
mov
movsl
pop
cs
data16
fsubrl
outsl
mov
ss
lods
push
outsl
sbb
out
dec
je
mov
in
and
fcmovbe
imull
inc
cmp
rcll
mov
popa
and
call
lea
das
imul
pusha
sub
jne
mov
jecxz
sbb
sub
jnp
mov
xor
inc
movsb
mov
insl
lods
adc
jb
shrb
add
in
jno
aas
rorb
mov
pop
test
ds
sbb
roll
lret
fwait
adc
mov
sub
fstps
add
adc
ret
dec
andb
and
push
push
sub
push
mov
adc
pushl
cmp
mov
lret
ds
and
faddl
mov
mov
ja
push
push
loopne
cli
ss
jbe
std
jmp
jge
mov
arpl
sahf
or
dec
shl
dec
or
add
xchg
sub
xor
pop
pushf
loopne
adc
clc
xchg
popf
cmpsb
clc
in
stos
mov
sub
mov
repnz
int
repz
mov
loope
mov
mov
ljmp
imul
imul
stc
mov
shl
jne
shrl
or
test
jo
or
add
int
xchg
xor
adc
jbe
xor
xchg
jo
mov
ds
data16
rcr
dec
andps
mov
popa
adcl
das
int
or
out
add
and
lret
xor
aas
mov
xchg
jmp
fnstenv
xor
lret
xchg
ss
push
repz
adc
or
push
sub
lods
jl
jnp
sbb
push
and
rolb
push
jns
frstor
mov
pop
insb
in
adc
xlat
repz
sti
leave
xor
fdiv
pop
pop
lea
mov
cmp
mov
insl
mov
push
inc
fildl
add
loop
pushf
xchg
cmpsb
jne
and
loope
es
movsb
testl
sbb
xor
fistl
add
inc
lods
cmp
push
js
inc
jno
fmuls
adc
in
add
enter
xchg
call
in
test
andl
xchg
and
xchg
dec
std
add
movsl
mov
push
sbb
jmp
xchg
mov
xor
rcll
ss
jnp
out
or
das
push
mov
pushf
xor
je
and
jo
test
outsl
das
xor
imul
shrb
loope
insb
in
pop
fmuls
adc
in
jno
rol
or
lahf
movsb
jnp
out
ret
push
push
jmp
sbb
clc
inc
pushf
fwait
daa
xchg
inc
aam
jbe
lods
pop
idivl
imul
xchg
or
cltd
xchg
scas
mov
xor
shufps
dec
jb
push
mov
xor
shrb
mov
cmp
jae
decl
dec
roll
repnz
popf
jl
icebp
js
cmpsl
jmp
sbb
inc
xor
or
cmc
mov
fistpl
addr16
jl
fmull
negb
jmp
sub
jle
stos
pop
sub
cwtl
fwait
pop
dec
sti
int3
mov
jae
mov
push
xchg
add
cld
push
ss
pop
jb
and
jg
aam
inc
sbb
dec
xchg
cmpsl
jecxz
mov
jecxz
popf
push
push
or
jle
mov
jecxz
jmp
in
in
mov
cmp
pop
sub
mov
ljmp
insl
popf
mov
adc
call
scas
fstps
inc
cli
inc
das
inc
stc
mov
mov
enter
push
mov
getsec
int
cmpsb
leave
lahf
lea
push
mov
cmp
push
cld
dec
aas
mov
cmp
and
or
mov
bound
sub
push
mov
mov
cmp
insl
add
mov
add
cld
outsb
jge
adc
les
dec
out
int3
cmp
or
adc
fst
shr
or
jne
jne
sbb
add
imul
sbb
test
fisubs
shl
and
jbe
pop
xchg
push
ret
aam
cwtl
movsl
and
xlat
aaa
les
sub
test
lea
inc
addr16
adcl
test
int3
pop
fsubs
nop
xchg
test
pushf
ss
addr16
sti
add
aas
and
out
loop
mov
push
arpl
hlt
subl
xor
movsb
push
fs
add
aad
mov
loope
xor
mov
xchg
mov
shrl
addr16
jle
push
mov
xchg
push
fwait
cmp
test
sbb
fsubrs
data16
jb
dec
and
lds
push
xchg
leave
gs
fstp
jnp
jmp
xor
cmp
clc
lods
cs
dec
into
aad
push
test
cmp
out
test
jns
add
cwtl
add
inc
xchg
inc
push
lds
sub
inc
fnstenv
or
cli
dec
in
inc
mov
mov
popa
xchg
test
je
rolb
xchg
int3
pop
push
scas
insl
iret
stc
cmc
fldl2t
fists
pop
jae
fisubrl
add
aaa
cmc
pop
jnp
repnz
adcb
push
nop
stos
popl
mov
fimull
xor
cvtdq2ps
js
andl
and
adc
repz
jb
out
mov
faddl
push
adc
and
push
sub
addr16
stos
inc
jp
adc
das
dec
xchg
mov
inc
sar
aam
add
hlt
cmp
lds
jnp
cmpsb
push
xor
sti
cs
pop
push
xor
push
out
jo
inc
outsb
xor
stos
or
jno
sbbb
gs
push
mov
call
add
std
sub
mov
jae
xor
pop
bound
or
sub
mov
mov
xchg
mov
test
xchg
dec
sti
sarb
sub
mov
shl
movsl
mov
dec
xchg
ret
aas
out
andl
add
enter
sbb
rcll
mov
pop
stc
stos
push
jg
cwtl
cmp
push
lock
sbbb
sbb
xchg
sbb
test
int3
adc
fidivrl
mov
push
dec
ja
test
push
fidivl
test
sti
jae
pusha
fimull
pop
imul
add
dec
gs
insl
into
push
outsb
push
into
adc
mov
cmp
cs
enter
movsl
sbb
mov
push
and
inc
sbb
sbb
fdivs
push
aam
sti
lcall
adc
mov
cwtl
mov
jbe
xor
inc
sbbb
std
xor
or
and
decl
cmp
rcrl
adc
or
lods
je
inc
loope
aam
pusha
fdivs
out
pop
cltd
lea
pop
sbb
jmp
scas
xor
cwtl
inc
push
inc
pop
rcl
stos
sub
pop
sbb
insl
sub
push
push
pop
dec
push
jae
mov
jl
shlb
sub
cltd
lods
pop
cmp
cmpsl
repz
jl
add
pop
sub
mov
xchg
jle
xor
and
outsb
mov
les
sub
mov
mov
mov
and
fwait
inc
inc
inc
es
popf
or
push
js
push
adc
and
mov
scas
popl
stc
push
negl
mov
js
movsb
scas
mov
and
icebp
fcomps
lock
sbb
mov
xor
cmpl
jg
cmp
arpl
loope
in
cmp
dec
xor
shrd
cmp
jne
mov
mov
sbb
out
ja
mov
jmp
in
ds
jmp
inc
fs
pop
movsb
call
mov
jno
insb
imulb
dec
lods
cli
mov
dec
imul
jg
mov
ss
lods
lods
jl
rcr
xchg
test
inc
test
mov
mov
dec
mov
ja
mov
xchg
jg
rcrl
out
jp
or
repz
mov
push
jecxz
lret
push
ds
enter
pop
std
mov
notb
ljmp
repz
sbb
cmpsb
sub
push
pop
inc
adc
mul
scas
and
xchg
dec
int3
mov
jb
sub
fldt
mov
mull
std
call
sbb
mov
dec
repnz
push
or
int3
aad
movsb
sbb
sub
es
sub
je
fidivrl
lret
rcrb
inc
pop
sti
dec
ret
int
shll
sbb
out
add
int3
aad
push
out
mov
mov
jae
adc
rorb
mov
addr16
and
or
push
inc
aaa
mov
xchg
jg
mov
or
pop
jmp
mov
out
ss
daa
repz
popa
cmp
in
adc
aas
lret
push
sub
inc
dec
push
xchg
ret
int
mov
inc
add
mov
cmc
scas
add
add
fldenv
loope
dec
mov
movsl
xor
ja
pop
mov
dec
cli
lret
fcoms
jns
push
adc
sub
pop
xchg
icebp
add
lret
add
aas
outsb
loop
jg
sarb
test
mov
sbb
xchg
int
iret
inc
les
or
dec
pop
loop
sti
clc
popa
inc
fmuls
mov
stos
jo
or
push
add
sbb
lea
or
test
mov
push
dec
jmp
in
pop
bound
cmc
cltd
mov
add
dec
ficoms
inc
addl
sbb
ja
or
sbb
fnstcw
mov
fisubl
enter
jnp
push
add
dec
out
mov
lock
jmp
repnz
push
sbb
mov
int3
daa
popa
nop
je
enter
in
stc
orb
sahf
jns
push
push
dec
xchg
pop
les
data16
push
push
ds
push
push
pushf
adc
jne
subb
lret
test
mov
test
insb
dec
out
in
push
enter
hlt
movsl
cmc
pop
mov
pushf
loopne
mov
or
sbb
mov
scas
cmc
out
sub
mov
pushf
cmp
mov
jmp
inc
loope
movsb
cmp
rorl
mov
cmc
cmpsb
mov
push
out
push
in
mov
or
dec
add
add
push
int3
and
notb
xor
pop
cmc
jns
push
test
dec
divl
mov
nop
xchg
enter
shll
add
sbb
mov
pop
outsb
mov
pop
sub
jno
in
dec
xchg
popf
shll
cmpb
push
inc
xor
mov
sbb
mov
and
sbb
cmp
push
mov
sbb
lods
push
mov
fldenv
out
and
mov
adc
mov
cmpsb
add
rclb
dec
movsb
adc
mov
je
mov
dec
loop
cmc
test
leave
mov
ror
cmpsb
aad
pop
mov
jmp
mov
out
aaa
mov
lret
cmp
mov
test
fwait
icebp
mov
jbe
test
mov
push
inc
pop
or
push
paddd
sbb
mov
aad
call
das
rcrl
dec
xchg
xchg
jg
outsb
push
ficoms
jle
mov
fldenv
or
test
cmp
sbb
sbb
in
js
ja
int3
mov
call
adc
sub
xlat
aad
jnp
mov
jmp
push
jg
pop
mov
cmp
dec
inc
cli
cmp
rcr
aad
xchg
push
or
push
sub
or
jo
pop
loopne
sub
rcl
fidivrl
push
in
jecxz
inc
stos
in
sub
in
mov
mov
in
dec
jmp
add
cli
enter
sahf
pop
xchg
sub
cmp
xchg
sbbb
loope
jno
arpl
cmp
jae
xlat
daa
xor
cld
ss
sub
outsl
push
jle
sub
lret
xchg
test
aad
xor
cmp
sahf
loopne
testb
notb
xchg
hlt
test
cwtl
addr16
aad
pop
add
mov
pop
jae
test
cmc
add
nop
xchg
xor
push
pop
vpdpwssds
jnp
jmp
dec
popa
mov
insl
mov
or
jmp
es
xchg
in
shll
inc
outsb
out
mov
pop
ljmp
xchg
ret
in
sub
fisubl
inc
or
in
dec
lret
lcall
leave
mov
popf
cs
out
mov
sub
pop
xor
dec
int
repnz
cmp
bound
push
xor
sub
mov
inc
or
push
movlps
cltd
imul
das
xor
jp
leave
jnp
and
imul
test
std
adc
mov
pop
jl
sbbl
cmp
inc
lods
aaa
pusha
in
cmp
clc
shlb
mov
lock
mov
push
scas
outsl
push
mov
cmp
hlt
std
stc
add
repnz
sub
insl
mov
jmp
jne
jae
xor
jae
incb
or
imul
sahf
and
and
mov
imul
xlat
and
dec
xor
dec
lods
mov
add
fistl
sub
aam
popa
or
mov
into
adc
dec
pop
xor
push
sbb
test
leave
pop
xor
stos
lock
jbe
pop
lds
lahf
cs
popf
cmp
inc
pop
les
dec
sbb
cwtl
cwtl
outsl
outsb
pop
loopne
cmp
lock
iret
icebp
ja
stc
push
push
jle
ret
sbb
adc
ljmp
stc
sbb
in
or
adc
in
dec
mov
cmp
sub
ljmp
lods
mov
xor
jmp
mov
movsb
push
add
mov
xchg
mov
push
repz
mov
sub
cwtl
jecxz
lods
popa
nop
push
bound
fistps
push
cmpsl
iret
ss
fbstp
inc
or
xor
cltd
pushf
loopne
dec
xlat
inc
inc
jge
add
push
hlt
into
stc
fdivrs
fnsave
insb
iret
xchg
mov
adc
in
jne
xchg
dec
pop
mov
push
call
insb
pop
nop
in
mov
or
lahf
push
js
mov
pop
ss
call
jp
mov
xchg
jmp
xchg
mov
jo
adc
fistpl
or
nop
repz
mov
mov
push
and
dec
xchg
mov
popf
jmp
pop
sub
ret
ja
mov
sub
push
xchg
jge
movsl
jb
push
stos
push
mov
and
lret
xchg
xor
cli
ljmp
cmp
xlat
mov
vpsubd
push
add
lret
push
adc
out
test
movsb
js
imul
and
lods
lods
pop
fisubl
xor
mov
jns
pop
dec
jecxz
pop
test
icebp
jne
nop
hlt
xchg
push
decb
jae
fcmovne
push
xor
cmp
in
or
fiadds
in
shll
cmc
dec
push
push
int3
add
mov
fnstenv
push
aaa
lret
stos
dec
das
mov
hlt
pop
pop
fiadds
repz
adcl
push
cli
sbb
xor
push
lods
xor
ss
popf
punpckldq
jns
mov
cld
scas
icebp
fimuls
pop
loop
shrl
mov
jle
shlb
dec
frstor
jg
push
ficompl
push
repz
fcmovne
mov
push
mov
cld
fdivs
and
cmpsb
ds
rolb
jg
int
into
loop
and
jb
mov
mov
pop
movsl
das
push
loope
jg
hlt
inc
adc
and
mov
arpl
pop
xchg
shrb
call
mov
push
push
xchg
cwtl
stos
pop
daa
cwtl
mov
xor
pop
hlt
mov
in
loop
pop
pop
jns
loop
stos
fcoms
mov
and
dec
push
fmul
and
mov
call
pop
inc
out
mov
push
sbb
rcrb
mov
push
cmc
mov
test
inc
cli
xor
push
sub
mov
imul
daa
cwtl
jp
mov
in
mov
test
jecxz
lret
cmp
sbb
mov
sbb
xchg
pop
loop
or
pop
lret
jmp
aam
std
lods
orl
push
inc
mov
xchg
out
push
fisttpll
int3
repnz
addr16
jmp
cmp
lds
andb
or
inc
iret
push
jne
dec
std
fistpl
dec
lea
aad
inc
xor
imulb
adc
mov
fstpt
cmp
mov
cli
aas
and
insb
loop
jno
addr16
inc
fistl
or
movsb
or
push
loop
push
sbb
mov
leave
loope
repz
mov
or
ljmp
pop
xor
pop
xchg
cmp
inc
jae
sub
mov
sbb
xchg
push
add
cmp
inc
cmc
pop
pop
push
mov
sub
and
or
dec
or
jb
xorl
jle
fcoms
adc
ja
cwtl
leave
mov
fwait
jne
xor
push
bound
test
mov
sarb
out
or
pop
pop
push
and
cmpsl
or
int
movsb
lahf
les
repnz
aad
mov
scas
jns
aaa
lock
sarl
out
inc
pop
push
cmpsl
sar
fs
lods
pop
jl
pop
imul
in
sbb
or
xor
inc
dec
cmp
dec
inc
push
out
or
bound
ret
cmp
test
xchg
orb
mov
insl
cltd
les
inc
dec
push
movsl
xor
add
movsl
rorl
adc
mov
int3
jmp
enter
lcall
push
leave
shrl
xchg
test
add
push
mov
sub
ret
push
sahf
imul
ss
jns
mov
pop
xchg
inc
xor
fiaddl
xchg
add
ss
mov
aas
xor
and
or
cmp
lods
hlt
popf
mov
or
lea
in
xor
imul
xor
hlt
fsubrl
loopne
imul
shll
cmp
into
scas
push
xor
lcallw
movsl
pmaxsw
rorb
pusha
mov
mov
dec
mulps
jb
les
mov
jb
cmp
adc
push
andl
lock
mov
sbb
dec
jp
js
mov
add
das
and
adc
cmp
mov
mov
mov
mov
push
inc
jp
and
inc
imul
adc
xor
mov
or
mov
or
cwtl
pop
push
adc
and
pop
rcrb
mov
mov
xchg
out
hlt
and
mov
cmc
cmpl
lds
test
mov
scas
sub
dec
lods
popf
push
pop
orb
sub
xchg
test
pop
rorb
and
sbb
push
test
ljmp
cmp
push
fsubl
sub
test
xchg
mov
xchg
mov
stos
int3
ja
sbb
inc
ret
mov
mov
mov
sahf
inc
aam
cmp
loop
xor
cmp
imul
and
adc
mov
out
xor
inc
mov
mov
aaa
jnp
pusha
pop
scas
dec
mov
call
xor
pop
into
lds
es
hlt
pop
push
dec
jl
fmuls
enter
fsts
dec
jnp
movsl
xor
jecxz
push
sbb
and
mov
sub
and
push
fcoml
repnz
dec
xchg
xchg
pushf
mov
pusha
pop
jbe,pt
xchg
insl
xor
cld
push
inc
push
loop
ret
mov
pusha
icebp
and
pop
jns
aad
shr
inc
dec
xchg
or
addb
sub
inc
dec
mov
rolb
pop
leave
subb
mov
loopne
loopne
mov
or
lods
in
pop
mov
loopne
mov
push
in
xchg
xchg
sub
lods
movsb
mov
fisttps
iret
push
adc
lcall
mov
aas
cmp
aam
mov
and
aaa
push
add
pop
pop
mov
inc
push
xchg
outsb
std
or
cmp
test
clc
mov
mov
sub
mov
mov
jbe
mov
dec
adc
inc
test
and
pushf
imul
imul
subb
notb
cmpsb
push
ds
cmp
jg
into
pop
iret
push
jg
fcomip
xchg
gs
pop
xor
imul
idiv
pop
mov
or
and
addb
ret
jl
jmp
lods
sub
clc
dec
test
popa
push
or
xchg
sbb
call
shll
ss
dec
shl
mov
jbe
dec
mov
adc
rcrl
call
adc
sub
sub
repz
shl
imul
minps
mov
lea
cmc
lods
adc
and
sub
mov
fmuls
push
mov
insb
inc
cmpsl
gs
cld
sahf
jnp
ret
out
adc
jbe
stos
jecxz
and
mov
or
test
in
repnz
jecxz
shll
ficompl
pop
hlt
mov
jmp
push
push
and
xor
roll
imul
xchg
dec
inc
fwait
mov
cltd
imul
push
loopne
adc
add
cmp
mov
push
push
loopne
bound
push
repz
fdivl
inc
ja
movsl
ret
int3
mov
pop
cmp
out
adc
stos
pop
ljmp
ret
aam
movsl
mov
inc
or
sbbl
orb
das
repz
mov
adc
inc
push
pop
sbb
ret
out
gs
test
sbb
sbb
mov
aaa
pop
aaa
sbb
pop
mov
out
pop
es
shl
into
xlat
pop
in
mov
mov
or
sub
xchg
pop
jo
orl
imul
jp
xor
imul
jp
outsl
lods
mov
out
xor
push
push
pop
dec
jnp
fists
movsl
mov
fdivrs
loope
imul
into
int
inc
mov
jle
icebp
cmpb
cmpsb
cmp
inc
loope
fbstp
inc
pop
out
push
push
add
pop
xchg
outsl
jbe
hlt
stos
cmpsl
hlt
cmp
fidivs
fsubrs
inc
sbb
mov
bound
xor
repnz
mov
jb
xchg
shlb
stc
es
inc
cmc
shlb
jnp
das
jge
lods
push
cmp
push
xor
orb
ss
dec
test
mov
pop
push
cmp
popf
xchg
mov
xor
sub
mov
xchg
rol
lret
xlat
and
add
sub
test
loop
cld
rclb
xchg
insl
pop
sub
es
pop
shlb
sub
aad
push
mov
mov
or
push
in
iret
jg
sub
ja
dec
sbb
and
mov
jno
in
push
or
jmp
push
jecxz
cmp
into
jle
mov
rolb
stos
das
push
idiv
fsubr
jl
adc
adc
fwait
dec
out
enter
mov
lods
push
cmp
sub
addr16
inc
dec
outsl
adc
fs
add
outsb
int
lods
mov
jno
imul
mov
mov
or
cmp
mov
outsb
mov
ret
sahf
repz
imul
push
xchg
add
inc
xchg
call
pop
pop
movsl
insb
mov
shll
sbb
mov
lret
jne
clc
rorl
pop
std
jl
in
push
call
inc
and
jns
rol
adc
mov
stc
inc
in
cmp
loope
outsl
add
stos
ret
mov
mov
fs
cmpsl
jno
sbb
hlt
in
test
out
aaa
pushl
dec
incb
fldenv
adc
mov
sub
cmpsl
test
stos
les
xlat
shlb
xor
mov
sahf
lcall
mov
mov
cltd
xor
inc
xchg
pop
sbb
hlt
loopne
cmova
mov
cld
mov
add
outsl
dec
add
dec
inc
orl
dec
dec
xor
adc
push
sub
sbb
gs
mov
lods
mov
jl
jg
or
imul
xchg
icebp
les
inc
insb
int3
jno
dec
xchg
sub
sub
roll
mov
fisttpll
lcall
add
mov
push
push
out
jmp
dec
inc
adc
ds
mov
push
ficoml
call
in
sti
and
gs
cmp
pop
iret
mov
imul
pop
xchg
or
in
sbb
pop
dec
cs
stos
mov
inc
loopne
out
inc
movb
mov
mov
add
cmp
rcll
inc
test
xchg
push
or
lahf
icebp
mov
push
addr16
mov
push
outsb
xchg
push
aaa
jl
jge
dec
popf
cmp
mov
test
lds
movsl
push
inc
shlb
pop
xor
leave
jmp
cmc
sbb
push
fs
fnstcw
cmp
rcrb
xchg
bound
loope
inc
ret
bnd
xchg
sub
mov
and
cmp
push
in
and
scas
mov
pop
and
xchg
xlat
adc
imul
mov
daa
pusha
mov
aaa
rorl
jmp
jbe
mov
test
int
lods
mov
xlat
ss
or
lods
push
pop
cli
dec
and
shrl
aas
add
mov
pop
push
xor
xchg
add
add
ret
jmp
jmp
int
sub
or
loop
pop
shrb
mov
lahf
addr16
cmp
jle
xchg
std
xchg
push
into
cwtl
push
mov
dec
or
adc
add
loop
adc
xchg
jns
cmp
movsb
orps
fcoml
pop
dec
loop
cltd
out
mov
push
inc
dec
jo
mov
sbb
insb
pop
inc
sbb
inc
add
dec
iret
fdiv
push
mov
ficomps
xor
test
push
mov
fwait
out
cmc
sub
xor
mov
jl
daa
lods
in
add
addl
dec
aas
enter
xorl
jl
addr16
lahf
lret
imul
lahf
shrb
mov
fwait
int3
rorb
fidivl
lods
pop
in
mov
mov
mov
fwait
push
mov
test
push
and
fsubrl
je
sub
and
and
push
pop
faddl
mov
or
jecxz
stc
push
or
in
and
ret
notl
push
or
dec
pop
lahf
movsb
sbb
repz
xchg
push
mov
and
inc
mov
or
fdivrl
adc
jnp
push
pop
lret
shr
sub
outsb
je
xor
out
push
fdivs
xor
xadd
xchg
sbb
enter
bound
push
lret
mov
fdivp
mov
or
adc
jb
stos
add
push
out
ss
and
gs
fsts
mov
mov
push
jns
push
xchg
test
ror
subl
addr16
insb
inc
sbb
mov
pop
and
cmp
mov
aaa
scas
xchg
cmp
mov
mov
mov
cli
xchg
into
shlb
cmp
lods
xchg
jmp
push
jle
int
inc
jne
pusha
adc
xchg
sbb
outsl
cltd
mov
rol
add
shlb
cltd
mov
jb
xor
cmp
sbb
mov
sarl
movsb
push
inc
daa
test
adc
dec
or
cs
mov
inc
js
loop
dec
fsubr
cmpsb
inc
add
and
sar
jnp
xor
shll
cs
dec
xlat
mov
imul
pop
push
leave
int3
icebp
sbb
movb
jnp
cld
ficompl
insb
adc
out
shrb
movsb
stos
inc
jp
hlt
adc
fstpl
push
mov
inc
scas
xorl
outsl
push
jmp
jae
jl
mov
ret
lret
jg
clc
aam
pop
popa
lea
pop
jae
movsb
frstor
and
scas
pusha
sbb
push
sub
inc
or
dec
mov
cld
cmp
gs
lahf
add
out
inc
push
icebp
out
push
test
adc
jne
idivl
outsb
ljmp
pusha
sub
adc
xrstors
jns
stc
fldenv
cmpxchg
push
xlat
iret
gs
jno
lahf
imul
sti
subl
xchg
mov
inc
mov
in
test
fdivrs
adc
push
adc
leave
stos
out
ja
imul
ret
test
mov
and
fsubrs
and
sub
jbe
push
jnp
in
xor
lock
loop
je
mov
ret
push
sub
xchg
aad
cmpb
mov
fwait
int
pop
loope
in
jns
cmp
in
push
push
cmp
aad
or
daa
test
and
rcrb
push
sbb
scas
lahf
push
sbb
or
loopne
jne
mov
mov
idivb
inc
lcall
push
cltd
mov
test
std
pop
xlat
pusha
scas
clc
stos
int3
movsb
shrl
jecxz
push
or
inc
dec
subb
pusha
fwait
pop
fs
sbb
inc
dec
push
std
sub
or
mov
aaa
daa
outsl
xchg
iret
and
push
out
jno
rorb
xchg
insb
pop
cmpb
add
cmp
shll
mov
xchg
es
loope
arpl
jmp
ja
or
stos
dec
aad
pop
pop
mov
loop
out
loop
xor
mov
movsb
xor
loope
das
mov
hlt
sbb
mov
xchg
inc
loopne
adc
sbb
in
push
cmp
cmpsl
arpl
repz
ljmp
cmp
in
daa
in
push
inc
mov
or
push
stos
mov
xor
ret
cs
xlat
inc
xor
cli
cld
jecxz
push
scas
outsl
xchg
pop
ret
mov
mov
loopne
dec
das
cmpsl
movsb
xor
arpl
dec
lret
inc
mov
inc
iret
jns
out
or
nop
push
hlt
rol
cltd
enter
add
push
pop
mov
inc
xchg
and
shll
imul
push
cmpsb
mov
adcb
jmp
dec
cmp
aaa
xchg
mov
adc
adc
xor
repz
test
into
jecxz
aas
shlb
mov
bound
or
in
sub
lds
mov
cld
adc
movl
xor
add
mov
enter
test
xchg
into
cmpsb
rolb
mov
push
lret
push
xchg
mov
clc
loope
and
movsb
outsb
inc
shll
stos
in
test
add
roll
imul
call
and
and
mov
mov
movsb
pop
sub
mov
sbb
sub
push
sbb
popa
mov
shll
or
loop
xchg
and
mov
loope
pop
and
out
lahf
fwait
cmp
add
and
outsl
xchg
xor
jecxz
ja
xchg
mov
leave
mov
inc
pop
ja
xor
push
mov
dec
and
push
cmp
ja
out
cmp
enter
push
pop
shll
sub
mov
inc
lahf
cmpsb
hlt
xlat
pop
xchg
rolb
xchg
pop
fisubrs
outsl
push
pushf
mov
xchg
es
and
or
dec
out
sti
pop
xlat
mov
or
sub
pop
stc
push
shrl
sbb
adc
lock
jne
cwtl
cmp
mov
sarl
je
negb
outsb
lcall
push
int3
cmpsb
fistpll
ss
rcrb
adc
inc
pop
mov
mov
lods
es
xor
pop
je
dec
in
std
rcll
cmp
jb
loope
xor
repnz
push
or
cmc
mov
push
and
jecxz
pop
inc
push
movsb
inc
repnz
or
fists
in
jbe
idivb
adc
adc
cmpsb
cmp
es
xchg
ret
in
imul
mov
scas
ss
jbe
aaa
push
in
xchg
mov
faddl
out
imul
inc
and
les
fs
inc
xor
and
xchg
in
sub
movsl
cmovnp
xchg
popa
inc
jo
cmpsl
lahf
movb
inc
push
xor
pop
jecxz
lret
push
pushl
and
sub
gs
in
daa
in
imul
pop
das
es
shlb
and
std
imul
ss
and
test
scas
mov
jb
xor
into
test
iret
enter
movsl
add
inc
shr
cwtl
dec
loopne
icebp
push
cmp
inc
in
scas
mov
sbb
imul
dec
mov
mov
movsb
fs
sub
inc
es
xchg
fistps
adc
fwait
std
testl
add
adc
sub
cmpb
shl
sti
fisubl
arpl
mov
and
inc
and
outsl
loop
call
test
pop
test
mov
lcall
shlb
mov
xchg
mov
push
cmp
xchg
iret
movsb
icebp
mov
inc
xchg
jne
aaa
clc
ds
adc
pop
fs
push
fidivrs
cmpsb
test
insl
loope
popa
in
shll
pop
cmp
push
xchg
push
in
xor
ret
dec
popf
add
insl
dec
rcrl
pop
inc
imul
pop
dec
aad
stc
jnp
mov
nop
insl
call
add
sub
mov
je
cltd
mov
jp
xchg
sti
mov
jno
inc
mov
sub
aam
jb
dec
jne
push
imul
je
adc
ljmp
arpl
lods
inc
and
fdivrl
outsb
jb
xchg
addr16
psrld
mov
adc
loope
insb
sbb
mov
mov
push
and
adc
mov
xchg
adc
test
mul
inc
inc
ljmp
lcall
fstpl
popf
push
mov
mov
dec
pop
mov
lcall
leave
bound
fnsave
or
loop
mov
ret
cmc
cmc
out
filds
cmp
rcr
mov
cmp
scas
mov
daa
add
leave
xchg
fimuls
mov
icebp
mov
lock
out
pop
iret
daa
dec
push
imul
pop
xchg
xor
and
cmp
mov
xor
xchg
pop
lcall
mov
sti
lock
popa
out
imul
icebp
xor
call
sub
and
stos
sub
inc
fbstp
and
pop
es
pop
add
testb
xchg
adc
fs
mov
jecxz
mov
rcrl
icebp
cmp
ret
push
cltd
cmp
pop
sub
test
jecxz
icebp
mov
movsl
iret
inc
pop
push
push
mov
and
dec
lret
mov
mov
push
pop
cmp
inc
clc
lock
jmp
insb
jge
lods
les
xchg
dec
in
cmp
pop
movsb
lods
mov
dec
mov
filds
dec
out
mov
jge
sub
iret
xor
mull
iret
inc
ss
sub
xor
dec
mov
int
fldt
and
adc
mov
pop
les
movsb
ljmp
adc
cmp
xchg
cmp
imul
scas
loop
sbb
sarl
lahf
call
xor
push
push
sbb
int
jae
bsr
cmp
sbb
xor
jmp
out
or
mov
insb
cmp
dec
cs
icebp
dec
jae
jb
add
fcoms
jns
cmp
aas
push
sub
roll
xchg
jae
add
rcrb
mov
data16
out
cmpsl
push
pop
dec
in
and
xchg
leave
push
leave
loope
mulb
test
subl
lcall
mov
shrl
je
push
pop
push
and
push
push
mov
mov
in
mov
sub
or
test
rep
or
pop
inc
les
in
adc
sbb
jge
and
xchg
mov
inc
ljmp
mov
or
cmp
arpl
test
lcall
js
sbb
mov
clc
push
inc
pop
and
lret
jmp
mov
mov
mov
sahf
add
dec
lods
lret
lahf
mov
mov
out
jl
cmp
or
dec
jl
mov
xor
sub
inc
sub
cmp
popa
xor
sub
xchg
mov
sti
sbb
adcb
mov
sbb
sbb
xor
sub
lahf
mov
jne
cmpsb
daa
mov
out
int
leave
or
fcompl
ret
lock
rcrl
pause
xor
xchg
jge
jbe
or
clc
jmp
incl
jl
sar
sti
scas
rcrb
mov
daa
xchg
repz
pop
int
sbb
lret
xchg
cli
cmp
in
pop
addb
xchg
mov
jb
cmp
mov
push
sbb
sahf
sub
mov
lods
xor
mov
out
ss
out
iret
cmpsl
dec
data16
adc
add
fldln2
push
js
jle
test
adc
aam
adc
stos
je
pop
sti
mov
lret
aam
cwtl
bound
outsb
movsb
cld
cmp
inc
iret
mov
push
enter
in
adc
cwtl
mov
movsb
inc
sbb
cmpsl
loopnew
loopne
pop
das
outsl
pop
jne
cwtl
rcrb
pop
xchg
mov
push
and
sbb
jle
mov
fstp
lret
mov
and
stc
cmp
pop
fcmovbe
loop
int3
inc
arpl
cmp
dec
sub
push
jae
mov
inc
mov
test
in
jp
insl
data16
cmc
ret
test
out
xchg
mov
jecxz
adc
add
mov
jb
in
mov
adc
mov
dec
fistpll
inc
sub
scas
mov
imul
ds
dec
and
out
iret
scas
cmp
jb
xchg
mov
incb
jnp
movsb
jl
stos
or
mov
dec
mov
xchg
fldenv
jmp
imul
gs
push
imul
pop
or
pop
cld
fmull
push
push
push
and
imulb
mov
insb
sub
in
xor
into
sti
in
addl
cmp
mov
sub
pop
repnz
bound
pop
cmp
jecxz
dec
dec
nop
lods
push
inc
ret
lds
inc
or
test
sbb
or
iret
pop
lret
hlt
in
mov
mov
movl
xor
pop
mov
push
inc
and
adc
pop
push
inc
mov
jl
insb
lods
pop
scas
lods
add
xor
push
jp
mov
adc
fsubr
aas
mov
into
rorl
lret
out
outsl
fdivrs
fsubs
adc
adc
loope
xor
xor
xchg
jae
inc
ret
rcr
jp
xor
xchg
or
jae
pop
fs
js
stos
imul
adc
popf
adc
mov
test
popf
insl
sub
mov
cld
add
inc
jne
sbb
cmp
add
cwtl
adc
mov
xlat
pop
aam
out
fwait
jg
or
inc
filds
aad
stos
pop
add
sbb
int3
js
sbb
cli
outsl
gs
leave
adc
jnp
ret
out
addr16
adc
xchg
insb
cmp
xor
pop
fstpl
jg
pop
adc
cmp
movsb
push
jnp
adc
xor
push
inc
inc
sub
or
xor
cmp
aas
iret
pop
mov
pop
cmp
jno
jge
loope
pop
mov
push
lcall
push
pusha
fs
fsubrp
aam
mov
sbb
xor
fnstcw
pusha
insl
fwait
dec
cltd
mov
cmpsb
cmp
out
aaa
pop
repz
ja
inc
aaa
mov
rcll
pop
dec
xorl
sbb
addr16
sbb
push
jp
ret
adc
cmp
cmp
sbb
mov
addr16
pop
inc
push
pop
sbbl
adc
cmc
and
lcall
mov
pop
dec
jns
ljmp
mov
stos
jnp
aam
push
mov
outsb
or
lahf
push
test
dec
shrb
dec
ficoml
vcvtsi2sdl
ja
adc
adc
sar
test
fld
bound
push
pop
sti
in
ficoml
inc
pop
scas
lret
fnsave
xor
pop
sahf
in
fdivp
fs
xchg
push
sbb
lea
dec
and
in
insb
sbb
std
test
sbb
add
cmp
es
loopw
das
out
femms
scas
mov
mov
pop
push
mov
pusha
adc
and
test
inc
lret
insb
enter
xchg
jb
xchg
pop
push
and
push
std
movsb
add
pop
jbe
inc
ret
loopne
pop
push
scas
ret
subb
mul
imul
mov
in
or
add
pop
dec
push
rorb
hlt
and
xabort
xchg
stos
xchg
dec
xor
push
jbe
repnz
jne
inc
and
fisubrl
shrb
loopne
mov
pop
stos
test
or
sbb
dec
idivl
push
jle
cmp
xchg
int3
icebp
xchg
pop
and
cmp
repz
aaa
movsl
cmp
cmp
int3
fbstp
sbb
imul
push
cmp
add
or
add
aaa
xlat
add
jno
jle
inc
push
enter
les
fwait
mov
jo
mov
jmp
popa
cmp
ret
sbb
test
dec
push
adc
mov
push
loopne
pop
jno
push
out
aad
lea
addr16
fdivs
xchg
ja
loope
test
out
jbe
sbb
jl
inc
jge
sub
ja
push
or
cmpsl
inc
cli
outsl
jns
add
sub
xchg
cmp
inc
push
mov
outsb
cmp
sbb
out
mov
mov
jmp
jnp
iret
pop
push
popw
out
dec
dec
out
daa
jb
push
cli
ljmp
int3
pop
les
jne
or
popf
ljmp
rcrb
dec
aad
add
pusha
sbb
jns
ffree
and
xor
aas
or
into
loop
fs
lcall
sub
xchg
aas
and
mov
cmp
out
sbb
movsl
lods
shll
add
stos
pusha
lods
in
lods
cmp
jmp
pop
shll
xchg
push
pop
or
in
outsl
xchg
int
fldl
fists
sbb
pop
cmp
pop
loope
aam
jmp
adc
jecxz
dec
inc
dec
int3
stos
clc
pop
out
aad
and
and
pop
and
jb
jmp
xchg
add
dec
push
sub
pop
cmpsl
jbe
test
sbb
inc
push
and
mov
dec
cmp
int3
lahf
gs
loop
repnz
xchg
cld
cmpsb
arpl
in
jmp
or
mov
in
sub
jg
jns
gs
je
popa
daa
adc
pop
pop
nopl
pop
mov
push
sahf
cmp
lret
clc
stos
es
push
or
mov
and
xchg
push
imul
push
dec
pop
ss
jb
test
jl
icebp
push
pop
test
dec
push
std
inc
cmp
dec
addr16
xchg
mov
or
cmp
xchg
xor
scas
inc
lock
sbb
ret
add
push
sub
daa
adc
dec
ret
faddl
mov
add
and
aam
icebp
inc
adc
inc
in
lcall
stc
or
imul
lret
xchg
cmp
rorb
mov
pop
jno
push
jp
repz
cwtl
les
xchg
xchg
dec
ljmp
inc
sub
xor
dec
xchg
adc
mov
cs
mov
xchg
and
or
js
xchg
lock
bound
movsl
push
cltd
jb
mov
xor
out
mul
sbb
dec
ds
adc
adc
movsl
sahf
xor
add
addl
hlt
xchg
xor
mov
cld
xor
ds
and
imul
shl
adc
mov
ds
xchg
xchg
and
ja
lret
push
sub
and
mov
add
lret
aam
inc
outsb
imul
dec
pushf
out
mov
and
mov
or
pop
jne
xchg
xchg
fnstenv
xchg
and
fbstp
sbbl
dec
jmp
pop
loopne
dec
les
push
in
adc
fstl
and
push
sub
cmp
dec
mov
adc
xchg
ds
inc
add
mov
push
inc
insb
fcompl
or
outsb
cmp
push
pop
and
and
mov
dec
fidivrl
add
fldt
aad
pop
fnstsw
adc
push
gs
add
shl
mov
test
sub
cmp
pushf
mov
mov
js
popf
popf
jle
adc
imul
rcrb
inc
mov
mov
push
cmp
out
sub
inc
js
push
lods
iret
pop
or
jnp
mov
rolb
add
push
push
scas
jbe
scas
filds
stos
pop
inc
lcall
xlat
mov
cli
pushf
test
lret
cmpsl
cltd
sarb
cmp
push
adc
out
jne
xchg
mov
aam
cmp
gs
loop
dec
cs
rorl
xor
mov
je
aas
xchg
sbb
xor
lcall
xchg
stc
cltd
mov
fs
push
mov
popf
push
lret
jl
scas
mov
pop
leave
stos
and
mov
sti
and
outsl
std
push
mov
insb
shl
ljmp
mov
xor
mov
adc
arpl
and
bound
and
jl
push
into
std
or
push
sar
and
test
lcall
fldcw
xchg
pop
mov
jo
mov
ret
imulb
pop
jl
pop
mov
fdivl
subb
mov
sub
pop
and
push
arpl
jnp
push
inc
pop
mov
dec
mov
jb
jmp
in
dec
pop
inc
mov
fwait
cmc
xchg
mov
mov
inc
mov
jnp
pushf
int3
sbb
lods
gs
fisubl
out
sti
test
fsub
enter
mov
jle
test
push
jge
pop
ds
jns
sub
jmp
rolb
mov
imul
xchg
dec
andb
insb
mov
push
inc
sbb
add
mov
pop
add
in
xor
mov
lret
sbbb
mov
mov
movsb
dec
adcb
scas
idivl
push
loop
inc
mov
std
add
mov
je
mov
mov
sub
or
xchg
xchg
stc
pop
aad
mov
ds
sbb
xor
aaa
cmc
in
jnp
push
push
in
adc
mov
sbb
mov
mov
adc
jbe
jmp
dec
daa
insl
or
adc
jle
shlb
xlat
cld
int
mov
insl
pop
loop
js
mov
cmpsl
xlat
mov
test
test
movsb
push
pop
movsl
push
mov
pusha
cwtl
out
ss
inc
push
inc
fildll
pop
push
scas
mov
push
push
xchg
jp
ja
es
jle
and
sbb
pop
or
xchg
push
dec
adc
gs
push
and
call
push
mov
mov
dec
bound
xor
sti
pop
sub
shld
jnp
sub
outsb
xchg
mov
cs
int
clc
scas
int
out
ljmp
or
ror
adc
mov
push
cmp
les
xlat
xchg
cmp
pop
push
addr16
ret
dec
int
test
ror
xchg
out
push
aam
xchg
adc
call
out
loop
sub
pushf
out
sar
dec
pop
and
scas
sahf
shll
mov
fcoms
sbb
fs
dec
shrl
repz
ljmp
icebp
xchg
add
inc
adc
test
xchg
call
jb
jecxz,pn
gs
sahf
jnp
mov
and
repnz
mov
sub
cli
leave
add
dec
pop
jnp
jecxz
pop
add
xchg
call
stc
cmp
loope
fisubrl
mov
pop
push
sbb
xor
dec
popa
push
out
cmp
or
and
data16
mov
aaa
cld
add
adc
mov
aaa
outsb
int
andb
cmp
jmp
jae
dec
and
lods
jnp
mov
push
push
dec
repz
xor
pop
mov
adcb
inc
in
imul
hlt
negl
dec
jno
fmuls
cld
jg
call
in
iret
pusha
js
and
xchg
out
add
pop
dec
movsl
pop
add
js
mov
lods
in
push
sbb
cs
xlat
icebp
fucomip
int
test
xchg
out
push
addb
xor
mov
sarb
test
xor
ss
not
movsl
fs
subl
mov
sub
loopne
add
imul
mov
mov
es
sub
adc
cmp
mov
out
xor
hlt
in
dec
cld
sub
jne
add
in
insl
mov
add
aam
jb
test
mov
mov
cmp
cmp
iret
cld
push
in
in
lahf
pop
dec
jne
sbb
xchg
mov
and
jbe
lds
push
test
pop
dec
dec
jmp
sub
fnstenv
mov
rcrl
sbb
jb
push
dec
enter
mov
xchg
enter
cmp
pop
iret
pushf
andl
cmc
or
mov
inc
jge
push
adc
pop
xchg
cwtl
xchg
shrl
out
enter
mov
pop
pop
fadds
mov
imul
pop
mov
pop
std
in
and
jge
pusha
scas
sahf
cmpb
lock
cwtl
movsb
add
xchg
lret
sti
std
js
or
fs
jns
ret
jecxz
mov
in
dec
sub
mov
pop
sbbl
lahf
or
loop
hlt
imul
cmp
dec
jae
push
fistps
aad
je
sti
inc
xchg
stos
sahf
mov
stos
add
mov
fisttpll
das
mov
aas
mov
push
add
adc
addr16
sbb
push
movsb
ljmp
imul
xor
cmp
out
xor
pop
cld
mov
mov
mov
sbb
mov
nop
xor
loopne
cwtl
lret
int3
fwait
jnp
les
lods
mov
lahf
inc
or
cltd
push
fistps
mov
mov
jne
gs
addr16
mov
pop
loop
sub
push
jl
adc
push
mov
xchg
sbb
cmp
enter
das
push
jno
leave
jl
rep
hlt
jle
jmp
fistpll
repz
and
nop
cltd
out
bound
add
ficoms
cmpsl
sub
enter
mov
inc
cmpsl
jns
xor
rorl
in
test
pop
aam
in
xchg
add
repz
cli
xchg
inc
loop
jnp
cmpsl
or
popa
les
xchg
mov
lods
test
jecxz
loop
adc
mov
or
out
add
dec
lock
in
or
hlt
push
cmp
adc
test
mov
rcrl
outsb
sbb
outsl
call
adc
mov
pop
pop
cmc
roll
gs
inc
xchg
addr16
out
stos
es
ja
ss
loope
dec
js
stos
mov
sar
mov
loopne
fwait
daa
pop
mov
aas
mov
jg
xchg
aam
xchg
dec
mov
add
xchg
loop
xor
fmull
sub
mov
pop
mov
mov
adc
jge
popf
jg
mov
mov
loop
lds
scas
xchg
stos
adc
jns
jecxz
xlat
bound
or
mov
fdivl
mov
lahf
test
lea
leave
cmp
sahf
jmp
xchg
sbb
adc
jne
jns
pop
or
xorb
sub
cmp
shrb
lret
ret
outsb
es
loopne
in
pop
movsl
jno
test
mov
mov
notb
mov
adc
or
push
cmp
rclb
mov
jg
push
push
aam
adc
inc
xchg
jl
xchg
pop
test
popf
jno
pop
or
or
ss
jle
repnz
std
in
mov
dec
movsb
mov
xchg
mov
xchg
mov
and
loopne
std
jns
mov
pop
cli
sub
mov
repz
je
scas
push
sbb
cmpb
pop
cmp
xlat
dec
fstl
push
sub
loopne
rcrl
outsl
xchg
test
pop
adc
stos
pop
int
xchg
and
sub
dec
subl
lcall
stc
push
mov
pop
fwait
inc
loopne
int3
xchg
aaa
call
xlat
adc
lcall
mov
sti
inc
adc
jge
and
ret
push
movsl
mov
scas
xor
or
into
imul
and
cs
push
imul
arpl
add
xchg
inc
imul
mov
xchg
prefetch
and
pop
adc
xchg
adc
mov
pushf
ret
aaa
lods
push
outsl
test
xchg
push
jecxz
fcompl
mov
je
inc
enter
add
out
int3
pop
xchg
call
pop
mov
test
mov
add
sarb
mov
sub
je
jmp
imulb
nop
sbb
ror
sti
mov
adc
adcl
pop
sub
fcoml
jae
addb
repz
sub
dec
scas
lret
mov
jp
insb
popf
cmpsb
cmpsl
stos
out
or
mov
xor
add
data16
bound
ja
or
dec
cli
jl
push
negb
inc
mov
mov
xchg
dec
cmp
test
hlt
into
lods
scas
jae
xlat
movsl
or
pop
rclb
sub
pop
mov
adc
rcll
mov
xchg
inc
xchg
out
cli
push
and
and
jecxz
xchg
dec
add
lret
movsl
repz
and
sbb
pcmpeqb
js
dec
into
xor
cmc
ret
mov
adcl
test
fs
in
jecxz
ret
aaa
add
dec
sub
jnp
int
repz
mov
les
addl
inc
mov
js
jbe
and
stos
or
in
jge
clc
test
fcomps
pop
pop
adc
arpl
push
jbe
dec
das
addr16
mov
cmp
jg
pop
mov
push
insb
mov
scas
arpl
loope
mov
or
mov
lods
js
sbb
inc
xor
bound
enter
into
add
jge
add
and
js
stc
cltd
es
dec
notb
lcall
mov
inc
push
popa
dec
xor
xor
das
pop
scas
sbb
repnz
push
in
out
lcall
fisubrs
aas
test
lock
std
jmp
mov
adc
fadds
cmp
in
sbb
mov
repnz
dec
cmc
push
ljmp
test
or
push
aas
mov
add
outsl
aam
cmp
push
stos
push
lret
rorb
lea
mov
jns
lret
out
sarb
sahf
cld
xor
js
push
clc
push
lret
jge
je
mov
inc
push
mov
rcr
xchg
sub
pushf
in
in
into
ja
aaa
stos
sub
ror
cs
adc
mov
mov
ret
fisubrl
sbb
cltd
clc
cmpsl
sti
lret
scas
sub
and
jle
outsb
cmp
sbb
cs
loopne
sub
cltd
movsb
out
jge
iret
test
inc
jo
xor
xor
push
sbb
or
aaa
xor
shl
mov
mov
mov
into
loopne
push
rolb
mov
or
jae
in
icebp
rclb
jno
adc
push
xlat
pop
xor
clc
mov
mov
adc
fidivrl
xor
frstor
fisubrl
popa
adc
adc
mov
jl
push
js
mov
pop
sbb
rcrb
hlt
dec
cld
das
movsb
ja
xchg
aam
cmpsb
cmpsl
repz
pop
int3
iret
jg
xchg
fldt
stc
mov
fbstp
in
mov
jl
cmpsb
sbb
pop
cmp
sub
cmpsl
repnz
popf
ffree
cmp
jo
adc
jp
sbb
stos
jge
sub
insl
popf
mov
xchg
out
xchg
push
in
cmp
icebp
mov
jns
out
stc
int
pop
movsl
sti
sub
and
pushl
pusha
adc
test
ret
mov
pushf
push
pop
jnp
loop
sub
movsb
idivl
push
and
jge
fwait
aaa
sbb
je
push
jne
in
and
adc
xor
aaa
jns
shll
xor
xchg
or
add
jo
jmp
cmp
sbbb
adc
out
inc
test
sti
testb
enter
repnz
loopne
cmpsb
push
test
mov
cltd
test
testl
sub
pop
pusha
lret
cmpsb
or
lods
into
xor
or
ds
scas
lods
inc
add
test
mov
sub
mov
sti
rclb
es
xor
test
pop
fnstsw
push
lea
adc
mov
lods
fidivrl
loope
xor
mov
addr16
ds
mov
jbe
dec
and
lea
out
pop
sbb
push
mov
in
dec
dec
out
mov
mov
bound
add
clc
pop
pop
roll
js
gs
xor
mov
mov
add
mov
adc
jmp
call
lods
rcrb
mov
leave
ret
sub
sub
subb
mov
aam
mov
cltd
test
mov
pushf
and
xchg
pop
gs
loopne,pn
shll
shrb
dec
inc
inc
insl
mov
add
inc
js
dec
or
xlat
clc
fists
int3
das
out
push
filds
inc
sbb
inc
aas
push
aam
and
pop
cmp
ret
ljmp
jnp
mov
es
mov
sbb
repz
in
mov
push
inc
inc
push
shlb
inc
add
sbb
ds
negl
mov
xchg
or
adc
sub
leave
lea
jle
push
test
test
fldl
iret
and
xor
xor
dec
add
jmp
mov
pop
mov
ret
pop
or
int
mov
xor
xor
fsubs
or
jne
mov
and
leave
fsubl
stos
ss
sub
test
or
pmovmskb
clc
push
and
jnp
stos
popa
adc
sub
push
fcomi
repnz
dec
pop
gs
pop
or
in
lret
test
test
mov
addr16
in
movsb
adc
ret
dec
jbe
sahf
mov
xchg
int3
and
mov
xor
sub
sti
push
movsl
fstpt
test
sti
data16
cmp
jge
sub
dec
dec
add
test
inc
push
dec
pop
dec
ror
out
pushw
inc
fimuls
aam
pop
sbb
cltd
test
leave
aam
cmp
fsub
mov
cmp
daa
cmp
add
test
loop
or
mov
shrl
test
jmp
rorl
sub
leave
jge
adc
cmp
loopne
repz
out
inc
ret
jle
xor
fstpl
outsl
inc
adc
cmpsb
jno
adcl
jne
icebp
mov
mov
pop
or
and
test
push
stos
mov
jne
dec
adc
pop
fld
adc
dec
push
es
insb
xor
iret
sbbb
inc
fisttpll
pushf
clc
push
into
jnp
mov
idivb
sbb
pop
mov
pop
mov
cmpsl
mov
jno
adc
mov
mov
push
or
mov
or
fwait
leave
loope
cwtl
ja
mov
sbb
mov
mov
ss
lret
sub
adc
je
mov
pop
dec
mov
jg
aam
lods
les
cmp
mov
pop
mov
xlat
cmp
add
jns
inc
pop
dec
mov
js
ja
pop
sbb
pop
cmp
lods
sbb
xchg
and
lret
adc
adc
popl
sbb
add
mov
insl
jnp
bound
aad
out
xchg
rclb
push
mov
loopne
mov
nop
pusha
adc
jb
sub
jno
into
dec
stc
xchg
test
out
pop
xchg
and
fs
rcrb
xor
cmpsl
js
call
aaa
dec
inc
xchg
mov
xchg
into
mov
clc
out
mov
mov
mov
sahf
dec
inc
push
sarb
ja
out
mov
addr16
movsb
dec
outsb
lock
jns
out
fdivl
xchg
jo
add
in
xchg
adc
dec
aas
aaa
es
adc
data16
xchg
push
jno
mov
dec
lret
orl
push
in
sbb
mov
push
xchg
adc
or
dec
loopne
orb
pop
cmpsb
jo
popf
pop
popa
xor
xor
inc
cld
and
push
incb
pop
into
inc
ss
lods
lret
fnstenv
dec
cld
ficoms
xchg
ret
mov
xor
leave
jno
push
pushf
lock
dec
test
cmpsb
cmp
mov
outsl
std
adc
sub
hlt
sbb
and
mov
jecxz
add
dec
add
sbb
insl
push
push
scas
jns
xor
test
or
cmc
lods
inc
xchg
jno
aad
xchg
test
dec
imul
xchg
sub
xchg
jmp
loopne
xor
add
jmp
pop
mov
sbb
scas
inc
popl
xchg
add
adc
add
fucomi
js
or
xor
fmuls
xor
das
sbb
mov
clc
cmp
sbb
pop
xchg
insl
int
push
popf
in
mov
pop
mov
das
mov
enter
sbb
cmp
mov
mov
sbb
stos
lds
mov
add
cwtl
leave
shl
movsb
dec
pop
push
mov
xor
imul
mov
fistpl
movl
xor
pop
pop
and
daa
jnp
mov
push
icebp
fsubs
mov
dec
fbstp
sub
ja
lods
pushf
out
arpl
stc
dec
das
jge
fmul
call
jb
adc
gs
ljmp
xor
xchg
orl
js
int3
adc
imul
inc
xor
inc
jae
cmp
mov
and
out
rdtsc
mov
xchg
out
jg
dec
fs
jno
jge
add
pop
jno
cli
lea
sahf
inc
xchg
mov
into
sahf
insb
dec
addb
xchg
addb
clc
sbb
xchg
inc
imul
jmp
or
in
jge
or
cmovg
cmp
dec
movsl
test
sbb
cld
subb
stc
xor
push
scas
imul
mov
call
fisttpll
out
sbb
inc
fldl
ja
fs
out
std
jmp
dec
aad
sub
jp
push
or
loop
mov
testl
lods
pop
lcall
mov
fcoml
sub
lret
pushf
pusha
movsb
loop
jne
out
jo
jg
jecxz
movsb
cmpb
add
pop
std
fs
sbb
aas
mov
adc
sub
out
add
lahf
xlat
and
ljmp
es
lret
pop
clc
aam
lods
orb
in
xor
dec
or
or
mov
sbb
or
stos
dec
in
lock
jmp
mov
scas
dec
pop
subb
test
ficomps
xor
setle
in
flds
jb
decb
cmp
outsb
sub
es
xorb
lret
inc
mov
or
inc
add
push
out
fwait
fwait
icebp
push
nop
cs
xor
sub
sub
xchg
push
xchg
sbb
or
adc
fdivr
pop
mov
or
aad
and
push
dec
loopne
pop
mov
dec
fmul
out
cmpsb
or
out
pop
ret
sbb
fnsave
std
cmpsl
js
inc
adc
scas
jo
negl
pop
repnz
or
push
mov
dec
mov
orl
rcrl
cltd
pop
das
js
push
subb
cwtl
roll
cmp
pop
leave
imul
cmp
push
push
jl
rcrb
out
jp
aad
mov
negl
inc
push
pop
pusha
xchg
es
cwtl
xchg
mov
cmp
mov
and
setp
inc
mov
pop
push
scas
in
stc
dec
xorl
in
fwait
jbe
scas
jo
adc
cwtl
lea
mov
aad
dec
ret
mov
sti
and
ljmp
loope
mov
mov
adc
or
sar
aad
add
inc
fisubl
sbb
push
loopne
lods
aad
inc
std
dec
clc
int3
loop
push
call
push
sub
lock
repz
jmp
sbb
ds
test
jmp
pop
dec
aam
or
arpl
dec
mov
mov
or
out
or
repnz
jns
push
push
push
iret
jbe
jl
mov
pop
mul
ds
dec
jne
mov
iret
outsb
fistps
jns
push
pop
pop
and
jge
ret
test
xchg
stc
lock
add
xchg
xchg
push
dec
outsb
insb
repnz
push
repnz
inc
and
mov
test
mov
int3
or
fisttpl
mov
es
out
lcall
int3
mov
pusha
fcom
and
jo
ja
stos
add
in
mov
add
fptan
cmc
and
pop
push
add
jecxz
jae
xchg
rorl
inc
hlt
and
cmpsb
dec
and
dec
dec
jns
je
xor
or
jnp
roll
ds
fs
push
mov
jge
add
test
sbb
inc
test
jmp
ds
or
sub
and
xchg
dec
pop
xchg
or
lret
jge
fcmovnbe
jp
test
nop
mov
sub
sti
add
xchg
adc
subl
aam
mov
es
mov
xlat
push
gs
pop
inc
mov
ljmp
scas
jmp
clc
dec
xor
clc
xchg
fdivs
mov
or
jl
sub
rclb
sarb
cltd
in
stos
lods
js
mov
sub
lahf
icebp
push
mov
or
sbb
test
sbb
sub
push
xchg
mov
xchg
mov
aaa
sahf
rclb
pop
fdivr
mov
in
mov
xlat
in
insb
cmp
cltd
push
adc
dec
jb
and
push
nop
xor
test
xchg
icebp
cmpb
adcl
aad
sbb
orl
ja
adc
jle
mov
out
and
mov
adc
lods
adc
popl
sarb
sub
test
inc
insl
data16
scas
dec
sbb
inc
push
inc
addr16
and
mov
inc
xchg
add
out
sub
sbb
adc
int3
in
push
jne
xor
dec
popf
fidivs
jl
xchg
mov
sbb
or
mov
pop
fdivrs
inc
mov
xor
int3
mov
testb
andl
or
push
aam
xchg
xor
push
cmpsl
mov
not
shlb
scas
mov
pop
xchg
testb
push
mov
mov
sti
xchg
mov
pop
pop
testb
pop
loope
cmpsb
push
dec
stc
into
mov
shlb
mov
jae
adc
icebp
mov
fwait
xchg
ret
arpl
incb
sbb
dec
inc
jmp
jnp
fst
les
and
pop
outsb
fwait
xor
shr
adc
xchg
add
ds
and
popa
lods
popa
out
loope
sti
shlb
jb
pop
mov
sti
and
fsts
mov
mov
cmp
push
and
ljmp
pop
mov
in
pop
pop
ret
addr16
outsl
movntq
or
cmp
je
lock
push
xor
sub
cmp
push
push
add
mov
xchg
and
rolb
add
fdivs
mov
push
insl
lds
lds
adc
jmp
dec
pop
xchg
aaa
loopne
jg
xchg
mov
jecxz
mull
push
enter
pmulhuw
stos
lods
pop
int3
dec
adc
cmp
adc
mov
scas
pop
or
movsl
daa
xor
imul
cld
jbe
mov
sbb
movsb
adc
roll
cltd
sub
sbb
sbb
jbe
jns
sbb
pop
mov
out
xchg
iret
outsl
inc
jne
in
jmp
cld
scas
popf
arpl
mov
jno
mov
jbe
xchg
xchg
add
loop
nop
jno
loope
xor
xor
lret
shll
sub
jp
cmp
add
mov
shlb
mov
cmc
lret
jb
push
lret
lcall
push
xchg
cmp
test
cmp
push
sub
sub
xor
fmuls
cmp
xchg
mov
bound
mov
in
push
fnstsw
add
jb
jb
shlb
data16
adc
lods
roll
insl
inc
cmp
jge
push
pop
bound
inc
mov
in
fadds
mov
cltd
add
fiadds
mov
pop
rolb
in
xchg
insb
mov
pop
imul
mov
mov
negb
mov
adc
inc
rcll
xchg
xor
hlt
aam
push
cmp
mov
push
js
inc
ds
pop
psrlw
mov
cmp
dec
or
subb
mov
pop
or
inc
inc
imul
or
popf
out
pop
rol
rcll
xor
sbb
pop
and
pop
xchg
lret
aad
rolb
jo
jnp
inc
in
rclb
dec
xor
dec
push
add
dec
sub
roll
push
pop
xchg
xor
inc
and
incl
xchg
jne
movsb
dec
inc
add
adc
mov
and
or
jle
in
pop
imul
xor
enter
js
data16
add
inc
mov
jno
dec
movsl
rcrl
aam
sbb
mov
aas
movsb
sub
aaa
sbb
pop
adc
test
iret
add
loopne
movsl
fdivrs
bound
xchg
mov
int
roll
popa
dec
jno
adc
cmpsb
scas
lds
xor
inc
sbb
sbb
mov
enter
fsubs
int
test
xor
loopne
push
orb
into
out
xlat
mov
inc
push
imul
xor
mov
or
rorl
js
in
dec
adc
cmp
loop
pcmpgtb
stos
sti
cmp
mov
mov
dec
push
adc
repz
xchg
pusha
xchg
cltd
cmp
or
insb
icebp
popf
rcl
inc
lods
dec
or
iret
lcall
jecxz
loop,pn
xlat
fs
gs
daa
push
mov
sub
push
pop
and
out
jb
mov
test
dec
imul
xchg
rdmsr
ss
adc
push
adc
rcll
jg
push
jns
adc
ljmp
add
sbb
push
xor
adc
mov
out
ret
popa
adcb
movsb
cld
in
mov
incb
push
xor
xchg
mulb
addr16
aas
sub
popa
enter
mov
add
insb
xchg
mov
dec
xchg
mov
outsb
fwait
scas
and
movsl
outsl
mov
xor
jae
insb
es
jns
push
xor
or
mov
rclb
push
mov
mov
dec
or
push
pop
scas
sub
add
lret
insl
lret
sbb
adc
in
mov
pop
dec
and
xchg
pop
arpl
insb
cltd
enter
lcall
mov
fs
outsl
xchg
insb
pop
sbb
mov
and
mov
cmp
dec
add
in
mov
xchg
jo
mov
push
out
in
add
sar
in
and
orl
addr16
sub
ljmp
push
insl
sti
mov
push
mov
mov
xchg
ss
les
sub
xor
cmp
or
int3
mov
xor
out
clc
inc
dec
fisubl
mov
ficoms
mov
dec
adc
adc
mov
ljmp
out
xor
fiaddl
and
lcall
stos
das
inc
repz
loopne
dec
xchg
pushf
inc
loopne
xorb
inc
pop
xchg
push
das
mul
mov
push
dec
rcrl
dec
lock
dec
mov
ja
iret
data16
jmp
in
inc
jmp
lock
xor
scas
shrb
into
mov
cs
stc
push
je
dec
jo
dec
mov
sbb
rcr
add
sbb
xor
mov
movsb
or
iret
sarl
xlat
xor
cmp
inc
mov
shr
push
mov
dec
mov
cmpsl
idivb
sbb
cmc
and
cmp
dec
mov
cmpsl
jae
cmp
ret
dec
or
cmp
imul
arpl
lret
cli
pop
jns
jno
add
push
leave
cmp
jl
fdivl
mov
leave
ds
test
jne
scas
mov
ds
sti
jns
in
rcll
xchg
mov
andb
mov
enter
push
ja
ret
adc
jl
ret
mov
sub
fisubl
pop
testb
sub
fsts
popa
adc
jl
daa
mov
pop
sub
lds
iret
mov
jbe
mov
fbstp
cmp
sar
das
and
cmp
lds
adc
jb
std
jb
stos
xor
mov
xor
push
call
mov
fnstcw
out
mov
ja
ret
or
cmp
mov
ss
xchg
std
xlat
push
push
aaa
out
sbb
cwtl
cmp
test
mov
xchg
das
and
mov
das
lahf
xchg
es
dec
movsl
and
or
mov
adcb
out
xchg
lods
xor
fcmovb
jge
dec
xchg
scas
cmp
push
loope
or
daa
sub
xor
mov
push
data16
clc
jnp
sub
push
cmpsl
ror
cmp
mov
pop
push
push
jnp
inc
out
and
idivl
rcrb
subb
push
out
xchg
mov
dec
adc
test
addb
iret
adc
push
push
and
jge
xor
cmc
jp
int3
push
or
xchg
out
mov
lcall
sub
pop
sti
xor
xchg
or
inc
mov
adc
ret
data16
hlt
mov
in
sbb
sub
mov
incb
mov
or
imul
rcrl
addr16
jmp
push
aam
jp
call
xor
orb
cmpsl
fisubrs
mov
and
inc
mov
pushf
cmp
outsl
gs
cmp
push
cli
push
fs
clc
dec
sub
mov
dec
ret
cs
out
pop
test
pusha
and
dec
mov
rclb
inc
call
cli
or
mov
mov
imul
scas
cmp
lock
mov
ljmp
xchg
aaa
cltd
out
push
cltd
fwait
andl
jecxz
jnp
mov
mov
stos
std
inc
ret
pop
sub
sub
xor
sub
or
test
and
imul
sub
inc
sub
pop
cmp
cmp
mov
rolb
add
push
cmp
dec
lahf
outsl
dec
xchg
nop
or
jo
cmp
imul
cmc
inc
pushf
fcompl
les
lcall
into
adc
push
hlt
xor
lret
push
divl
pusha
dec
mov
push
adc
cmp
adc
popa
flds
push
sub
daa
jle
pop
jp
addr16
scas
or
out
and
out
cmc
jae
or
in
test
inc
adcl
mov
pop
mov
in
ljmp
leave
pop
adc
ds
inc
sbb
pushf
add
sahf
mov
pop
test
sbb
rorl
jl
sarb
mov
dec
xchg
gs
xor
ficoml
mov
mov
les
aas
adc
push
dec
mov
push
inc
jnp
push
lret
in
mov
adc
in
mov
test
pop
sub
cmc
push
pop
mov
inc
push
jne
mov
push
sub
pop
and
repnz
push
adc
sbb
sbb
cmp
pop
adc
mov
testb
cwtl
nop
mov
pop
dec
mov
or
jmp
inc
xor
jb
push
sbb
jne
out
sahf
std
mov
mov
ds
jge
out
add
fcompl
enter
push
pop
push
xchg
leave
out
fidivrl
cmc
add
pop
push
std
jp
inc
pusha
jne
sub
movsl
pop
mov
and
sub
lods
imul
or
and
data16
int3
iret
shll
dec
sub
xor
mov
stos
movsb
xchg
cmp
sbb
xor
stc
sbb
pop
sbb
pop
iret
sub
test
pop
imul
mov
aas
jg
aas
mov
cmp
movsb
jnp
icebp
stc
xchg
notb
ret
and
ds
mov
popf
pop
std
mov
cld
insb
mov
shrb
in
insb
rcl
inc
ror
inc
add
xchg
lret
imul
movsl
ret
dec
mov
push
xchg
aam
out
push
jns
jle
and
popf
shl
cmp
dec
cmp
scas
xor
mov
lock
add
push
fisttpl
test
lods
jg
repnz
test
jnp
cmp
add
inc
jbe
mov
ds
jg
les
mov
mov
jge
call
pop
and
fs
rcl
lds
or
sub
aam
arpl
shl
mov
or
or
popa
xor
imul
out
sbb
push
je
call
inc
iret
jmp
and
sbb
pop
imul
lea
inc
sbb
and
and
aaa
xchg
lock
sahf
push
push
xchg
icebp
sub
lahf
stc
bound
push
repz
test
mov
xchg
int
imul
std
mov
jne
pop
jge
push
pop
mov
inc
xchg
movsb
lahf
sub
jo
mov
cmp
cmp
adc
inc
inc
jbe
outsb
and
aaa
shrb
mov
adc
in
dec
imul
push
or
mov
inc
pop
addr16
imul
insb
jle
sbb
ds
and
enter
xor
mov
iret
inc
icebp
repnz
jbe
into
js
jl
data16
and
shlb
push
jno
ret
pop
fildll
lods
add
push
rcrl
lock
mov
aaa
cmp
outsl
dec
mov
packuswb
and
es
into
cmp
rol
xchg
sbb
les
and
mov
cmpsb
mov
ret
dec
cmp
dec
shrl
fldt
xlat
mov
je
mov
in
fwait
lret
out
out
fs
loop
inc
std
push
out
fadds
mov
jns
sub
inc
inc
xchg
jle
and
add
dec
add
int
cmp
sbb
nop
push
sub
test
xor
out
add
into
int
add
stos
xlat
in
dec
mov
clc
xchg
inc
icebp
jle
popa
mov
jge
rcrb
add
adc
cmpl
push
inc
enter
mov
pushf
daa
mov
insb
icebp
push
add
inc
mov
rclb
mov
enter
lret
cmp
pushl
movsb
or
scas
xchg
dec
inc
cwtl
push
or
mov
mov
stos
push
popf
mov
cmpsl
pop
xor
mov
inc
xchg
mov
xchg
mov
into
push
cmpb
lahf
push
ds
es
aam
dec
adc
ljmp
jl
mov
mov
and
jge
jecxz
add
scas
push
cs
int3
xchg
mov
sarl
gs
insb
jbe
stc
xchg
push
mov
adc
ja
aam
cmpsl
leave
push
icebp
cli
mov
pop
cmp
sub
or
adc
mov
push
xchg
push
addl
mov
scas
pop
test
out
cmc
mov
pop
fldl
or
lret
mov
outsb
mov
mov
mov
jbe
notl
mov
sbb
sbb
test
mov
loopne
and
lahf
fsts
sbb
repz
int3
icebp
sub
sub
xchg
sbb
add
lahf
add
pop
ja
push
test
pop
mov
sbb
mov
mov
mov
push
rclb
inc
jge
adc
mov
jmp
mov
scas
inc
mov
adc
dec
push
pop
daa
or
call
outsb
popa
daa
add
mov
mov
inc
stos
outsl
mov
in
scas
cmp
jg
pop
inc
lret
dec
inc
shll
push
adc
xchg
pop
jl
inc
xchg
push
mov
lock
xchg
xor
outsl
insl
andl
pop
xchg
shlb
adc
push
lret
pop
rorb
repz
xchg
fidivrs
movsb
fcom
rcrb
insl
mov
fisubrs
out
aad
int
dec
inc
inc
mov
or
mov
scas
ja
pusha
pop
add
in
or
dec
adc
outsl
cmp
lds
sbb
lret
push
push
and
stos
dec
das
xchg
cmpsl
push
push
or
leave
call
scas
inc
ret
mov
in
mov
pop
xchg
ror
add
hlt
fbld
lea
daa
dec
shl
js
jae
cmpsb
xchg
sub
cs
cwtl
adc
inc
testl
mov
push
outsl
sar
hlt
xor
scas
in
inc
cmpsb
cmp
pop
cs
mov
scas
divb
jnp
push
ds
pop
arpl
or
lahf
ret
aam
cmp
push
cmp
ljmp
popf
testl
hlt
out
mov
hlt
mov
mov
sahf
ret
mov
daa
push
test
mov
push
stc
jne
push
aas
xor
cmc
inc
gs
mov
inc
shrl
out
sahf
std
cs
lret
mov
adcb
xor
sahf
fs
pop
sbb
repnz
sub
cmpsb
cmp
mov
ret
rolb
subl
mov
dec
cmpsb
dec
ret
dec
test
lret
push
rcll
adc
sub
and
insb
and
lahf
jne
cmp
lahf
mov
add
cmpsl
dec
icebp
rclb
aas
call
es
jne
mov
mov
out
mov
push
into
pop
aad
in
hlt
mov
test
adc
arpl
xor
mov
and
push
loopne
cmp
inc
pop
stc
push
xchg
int
test
lret
adc
mov
jbe
imul
movsb
sub
dec
push
mov
pop
es
cmp
iret
and
or
add
dec
lahf
addps
movsl
cmp
insl
aam
aad
add
cld
movsb
jo
imul
cmp
decb
mov
mov
ret
push
test
adcb
or
pop
and
pop
ret
push
ds
sub
addr16
sbb
call
les
mov
aam
adc
jle
andb
not
cs
ss
xor
lcall
out
je
push
js
ja
fldcw
or
std
iret
push
shrb
dec
or
add
xchg
jo
mov
jl
push
mov
cld
jl
inc
add
aad
ljmp
jb
xor
aaa
pusha
leave
push
push
xor
jmp
ja
and
dec
jle
fld
in
add
mov
dec
outsb
in
in
mov
out
loop
sbb
lock
push
sbb
mov
shlb
inc
xor
or
dec
mov
add
or
jle
sub
clc
in
push
and
adc
dec
nop
xchg
aaa
loop
adcl
aad
xlat
int3
lods
or
das
clc
out
loopne
xchg
lods
outsl
xor
cmpl
test
xchg
inc
sbb
mov
mov
les
mov
jmp
xchg
pop
idivl
mov
dec
mov
add
jae
fcmovbe
popa
aam
mov
push
sub
je
fnstcw
and
sahf
mov
cmp
cmp
sbb
xor
test
push
sub
xchg
shl
cltd
xchg
jnp
mov
or
popaw
jp
mov
popf
cmc
mov
adc
loope
pop
popa
es
mov
mov
shl
rcl
fcomp
aas
push
repnz
mov
mov
mov
jle
add
pop
mov
clc
xor
repz
cvtpi2ps
test
push
out
cmp
les
dec
stos
cli
fnstcw
and
mov
jle
sbb
xchg
cvtpi2ps
pop
cmp
aad
pushf
push
fldenv
fisubl
fmull
stos
push
das
jle,pn
mov
mov
clc
sub
cmp
lret
xchg
roll
sub
hlt
imul
jecxz
xchg
ja
fidivrs
pop
jne
cmp
pop
xchg
inc
fmulp
mov
sbb
loop
xor
and
push
cwtl
dec
xchg
mov
dec
mov
fdivrp
sbb
shlb
les
mov
idivl
or
lcall
xchg
mov
push
int
lea
xchg
dec
lret
mov
and
xor
imul
fadds
push
mov
and
mov
pusha
add
and
cmp
push
cmp
stc
lock
mov
push
hlt
out
push
into
push
scas
pop
dec
mov
sbb
xor
xor
out
test
xchg
or
jbe
icebp
sti
push
es
pop
jl
xchg
xchg
mov
cmc
repnz
orb
and
addr16
inc
cld
lahf
pop
sar
loope
and
mov
int3
out
add
lock
cmc
adc
mov
add
push
sahf
sub
cmp
mov
push
loopne
icebp
rcrb
push
jle
push
sub
jmp
out
insb
inc
mov
cmpsl
xchg
lcall
lea
inc
loop
imul
test
ljmp
arpl
lods
shrl
ds
and
call
xchg
jno
push
pop
mov
cmp
inc
dec
pop
mov
sbb
pusha
ret
mov
cmp
in
stos
ljmp
sar
loopne
insb
ret
push
sub
sub
xchg
xorl
xor
mov
ss
xor
out
lea
xchg
or
adc
inc
nop
sbb
and
cmp
mov
and
imul
pop
sub
dec
out
pop
and
and
pop
push
jmp
fsubrs
mov
adc
test
cmp
ret
addr16
pop
adcl
sbb
jge
lahf
lods
icebp
outsb
jno
sbbb
and
in
sbb
sar
pushf
fists
mov
dec
popa
mov
and
mov
mov
add
lock
cmpsb
loop
sahf
fdivrp
aas
mov
cmpsl
mov
add
xor
mov
xchg
mov
sub
inc
xor
jae
jge
dec
daa
insb
xor
sub
ficoml
mov
sti
pop
mov
lret
sub
mov
add
dec
xchg
sub
push
sbb
dec
imul
add
std
xchg
xchg
push
in
xchg
cmp
pop
mov
test
cmp
test
push
adc
mov
call
mov
push
mov
or
pushf
mov
jl
adc
xlat
mov
repnz
xchg
sbb
fisttps
cmp
mov
add
or
push
movsb
into
push
lret
repz
xchg
mov
out
and
or
sub
in
out
mov
cmp
fnsave
inc
fldl
movsl
add
jl
xchg
cmp
and
mov
lahf
xor
dec
nop
or
xchg
add
insl
add
ja
or
call
scas
andl
lds
cmp
jg
iret
cld
lods
stc
inc
jg
and
push
lcall
push
jnp
jg
pop
std
mov
test
push
xchg
nop
faddp
les
loop
lcall
xchg
lret
insb
jl
dec
cmp
daa
faddl
mov
and
push
inc
or
rolb
add
jbe
jmp
iret
xchg
lods
xchg
rolb
shl
cwtl
and
scas
push
mov
sti
cmc
cltd
pop
repz
xor
mov
push
push
sub
fwait
xor
mov
stc
loopne
nop
xor
cltd
insb
cmpsl
sub
fdivr
lret
sbb
mov
jo
push
fisubrs
aaa
adc
dec
push
lods
mov
fbstp
add
outsb
shlb
and
xor
mov
sti
out
enter
or
leave
dec
ljmp
mov
mov
push
clc
scas
sub
dec
push
roll
add
fldl
nop
inc
mov
inc
sbb
fdivrs
pop
sbb
call
fmull
aas
adc
std
sbb
aaa
rcpps
fs
scas
sub
dec
lea
mov
or
cmp
push
enter
outsl
add
adc
testb
out
mov
sbb
inc
nop
andl
jne
cld
daa
out
out
sbb
std
mov
jg
xchg
mov
notl
mov
inc
test
lods
xchg
insl
insl
xchg
int3
cmpsb
or
sbb
das
jle
imul
adc
test
mov
fwait
mov
mov
sub
daa
inc
daa
fcomps
cmp
adc
mov
xchg
mov
sub
mov
lods
imul
xchg
add
mov
jecxz
cmp
aad
subl
cmp
xchg
leave
sbb
pop
lahf
js
pop
mov
loope
cmpsl
mov
leave
iret
jo
sub
mov
adc
xchg
mov
fadd
and
adc
bound
popa
add
adc
jb
mov
fwait
cmp
pop
fcoml
inc
fstpl
in
push
imul
jne
test
int3
jbe
out
xor
mov
add
repnz
mov
imul
pop
jmp
out
jns
jecxz
cli
or
insb
out
rcrb
stos
cmpsb
jae
ret
test
nop
fwait
les
sar
dec
mov
dec
pop
xchg
mov
mov
mov
aaa
cs
std
fimull
mov
sub
cld
cmc
sub
inc
das
and
push
ret
xor
pop
icebp
cs
faddl
jmp
xor
js
add
xchg
loopne
jnp
sti
mov
insb
testb
inc
sbb
push
or
js
dec
cmp
or
in
jle
jl
or
push
push
lret
shlb
ds
ljmp
jne
mov
ja
sub
inc
lods
sahf
mov
and
mov
mov
jnp
aam
ret
xchg
and
mov
cmpsb
or
push
int
popf
rcr
scas
call
pop
cmc
cwtl
call
inc
mov
loopne
cmp
push
int
sbb
lcall
push
mov
add
dec
adcl
negb
jns
stc
push
out
mov
dec
mov
inc
jmp
pop
mov
push
rorl
pop
iret
clc
xor
jmp
inc
mov
rolb
jns
popl
inc
sbb
orl
lcall
xor
push
dec
loope
cmp
pop
movsl
inc
push
mov
cmp
cmpsb
bound
daa
repz
mov
test
sbb
das
mov
cmp
jl
lock
sbb
ret
insb
jb
pop
nop
mov
xorb
cmc
push
lcall
fwait
sbb
ret
ret
push
call
jmp
nop
sbb
mov
mov
rolb
and
mov
in
and
and
mov
jp
les
xchg
jecxz
or
jmp
jp
clc
bound
sbb
xor
mov
add
je
sbb
lods
gs
aas
in
iret
xchg
cmp
mov
rcll
arpl
in
sbbl
loopw
in
shll
dec
insb
pop
jle
clc
loope
sbb
cmpb
fsqrt
fisubs
cs
lcall
movsl
xor
or
roll
sar
mov
add
loop
out
dec
leave
add
push
push
in
data16
ficoms
jp
mov
jb
adc
call
xchg
stc
mov
mov
mov
mov
mov
pushf
mov
jg
ret
xor
pop
in
scas
data16
adc
cmp
adc
scas
mov
negb
mov
dec
adc
cmp
mov
adc
roll
enter
mov
cmpsb
lods
sbb
inc
sbb
fcomps
jge
ret
xchg
jo
pop
shlb
xchg
lods
ret
cmp
lret
mov
jbe
out
push
pop
lcall
in
pop
int
mov
and
jecxz
lret
sahf
pop
mov
mov
adc
or
lock
repz
push
or
icebp
cmp
adc
out
sub
and
pop
iret
jnp
dec
leave
loope
call
adc
jecxz
xchg
mov
mov
cmpsb
jl
adc
pusha
sub
cli
sub
insl
dec
out
cmp
icebp
shll
mov
cmp
add
dec
and
in
xor
dec
daa
fstps
popf
lds
mov
jle
fistpll
testl
mov
rolb
dec
push
jle
adc
ret
push
popf
sbb
dec
outsb
cld
and
push
add
cmpsb
inc
or
mov
aam
push
pop
cmc
jae
stos
dec
dec
add
loop
cltd
xchg
push
push
xchg
push
pop
popa
dec
popf
insl
cmp
lret
repz
mov
and
cwtl
js
inc
lret
adc
cli
and
add
in
adc
inc
jmp
negb
leave
xor
pop
push
sub
inc
add
xor
outsl
mov
lods
std
inc
popf
push
pop
loope
xchg
inc
popa
adc
dec
inc
xchg
es
mov
inc
out
cli
into
test
call
int
outsb
fsubp
mov
or
in
int3
rclb
push
je
sub
pop
jmp
call
sub
das
dec
sbb
pop
pop
sub
lods
cli
dec
das
lods
dec
aad
add
jmp
in
out
pop
ret
adc
call
and
addr16
xor
or
scas
dec
jo
cmp
cs
xchg
sahf
xor
dec
cmp
xchg
or
adc
xor
sbb
cmpsl
jbe
push
sub
dec
out
adc
mov
insl
mov
sub
ss
adc
fldt
jmp
dec
sar
sub
int
mov
dec
mov
xchg
cmp
adc
rcrl
mov
xchg
jb
cmp
cmp
mov
out
mov
cmp
push
inc
cli
adc
push
xor
inc
mov
xchg
call
gs
bound
adc
add
push
fistpl
nop
pop
scas
lds
push
test
fstp
dec
pop
mov
xchg
shrl
ljmp
rcrb
mov
mov
pop
push
call
lahf
pop
jno
sahf
adc
dec
fs
test
ret
mov
add
lods
mov
stos
mov
lret
stos
loopne
dec
addb
dec
adc
mov
dec
cwtl
mov
mov
out
sbb
pop
xor
ljmp
out
pusha
xor
jge
pop
cld
add
add
aaa
sahf
jo
lret
into
aad
mov
cmpsl
xchg
push
sbb
add
and
mov
pusha
ret
outsl
or
cmp
or
push
pusha
ret
pop
scas
xor
aaa
pop
lret
cs
fstl
bound
iretw
mov
adc
movsl
or
mov
out
inc
mov
repnz
mov
xchg
add
push
fsubrl
mov
stos
sbb
adc
inc
jae
pop
mov
in
cwtl
ret
xorl
jl
sbb
mov
mov
jne
sub
jae
push
push
sahf
mov
test
jb
mov
out
mov
bnd
roll
fiadds
push
aad
pop
loope
add
and
mov
xchg
out
xor
movsb
scas
in
in
out
pop
outsl
jns
gs
std
bound
ret
mov
aad
sbb
lock
jl
loopne
xor
xor
mov
fistl
int
xor
aas
dec
lea
pop
xor
js
jmp
mov
pop
sbb
push
sub
xchg
rcll
not
mov
sub
push
gs
std
add
pop
dec
and
sub
push
arpl
dec
leave
mov
xorl
cmpb
or
mov
xlat
pop
rcr
out
mov
pop
mov
adc
and
in
jge
js
test
jne
cmpsl
jnp
ret
cltd
stos
pop
sbb
aas
test
fidivrs
bound
clc
push
xchg
jo
movsl
dec
sahf
ss
cmc
mov
inc
or
lret
cmpsl
mov
int
rol
jge
sbb
pop
and
or
push
outsl
aam
sub
loop
test
ret
mov
inc
inc
push
fisubrs
or
add
int3
fidivs
mov
fs
sbb
mov
add
mov
cmp
pop
movsl
and
add
push
inc
jl
daa
xchg
sbb
or
fimuls
lea
mov
xor
jmp
pop
movsb
decb
rolb
push
movsl
dec
std
push
jmp
dec
clc
push
mov
dec
jg
pop
fiaddl
jno
psubsw
cmpsb
popa
jno
subb
mov
xchg
cs
ss
aaa
ss
lret
lcall
aaa
xchg
pop
aad
jo
jmp
enter
dec
mov
cmp
lds
in
mov
sub
stos
inc
ret
mov
mov
mov
inc
pushf
pop
pop
std
cwtl
arpl
mov
mov
jb
fmul
jnp
sbb
sbb
push
int
and
andl
inc
aam
mov
test
adc
cmpsb
pop
mov
jne
or
jge
mov
jo
cmpsb
insl
cmpb
add
dec
cli
pop
sub
sbb
outsl
stos
sti
cmp
cmp
mov
mov
iret
pop
out
in
fbld
push
xor
fldenv
mov
mov
dec
mov
lock
addl
and
add
mov
xchg
jl
jecxz
fisttpl
fucom
xchg
mov
xchg
sub
xchg
dec
in
pop
mov
inc
cmp
mov
mov
aad
mov
ja
enter
jo
mov
inc
dec
mov
lods
aad
xchg
ljmp
pop
adc
and
adc
xchg
dec
dec
jbe
and
mov
mov
or
lods
js
or
fwait
int3
insb
fwait
test
mov
mov
cmp
bound
or
cli
sub
add
dec
mov
push
into
mov
xor
movsb
lcall
push
loope
sub
xchg
scas
or
in
push
inc
cmp
inc
mov
jbe
sub
mov
push
pusha
pushf
test
mov
aam
fdivs
mov
xchg
movsb
cld
add
ja
inc
and
lea
sub
repz
fwait
adc
inc
lds
mov
mov
jmp
lahf
or
mov
mov
sub
imul
lock
lret
pop
push
lahf
pop
ja
add
jmp
vxorps
jbe
xor
sbbb
jge
xor
popf
push
dec
sbb
mov
neg
les
add
pop
and
cmp
insl
dec
enter
sbb
mov
and
addl
and
clc
rcrb
and
iret
out
mov
inc
dec
mov
fsts
adc
xor
add
insl
lcall
fsubs
es
mov
xchg
test
fistpl
imul
lret
subb
jg
sti
inc
cs
je
icebp
ja
push
loop
cltd
cld
jmp
cli
push
fs
inc
repz
mov
lds
adc
rcrl
push
repnz
movsl
sub
pop
imul
pop
enter
jecxz
enter
xchg
inc
mov
push
loop
adc
in
ljmp
outsl
mov
mov
and
out
sub
mov
cmp
pop
cmp
push
movsl
sahf
lods
pusha
in
lods
and
pop
jns
jp
jno
stos
add
mov
stos
dec
add
aam
mov
lahf
push
imulb
xchg
or
xor
mov
push
cmpsl
pop
dec
in
clc
sub
sub
int
aad
lcall
sub
in
sub
lock
push
xchg
das
fstl
lret
xlat
and
jl
mov
fs
outsl
rol
insl
sbb
leave
push
dec
mov
pop
clc
pop
xchg
add
negb
fwait
adc
pop
ret
in
ret
cmp
addb
xchg
push
int3
adc
jnp
push
roll
outsb
xchg
in
pop
iret
jp
sbb
xchg
andb
ret
out
sbb
scas
jmp
ss
push
jecxz
and
mov
pop
cmp
aas
xor
out
push
stc
and
xor
xchg
adc
fwait
gs
and
ret
xor
lret
test
xchg
adc
mov
push
mov
loope
enter
jo
int3
mov
cltd
sbb
and
loop
inc
lahf
sahf
mov
dec
rol
stos
push
pop
fildl
aam
sub
bound
ret
sti
insb
bound
imul
dec
mov
ss
sysret
test
lret
xchg
lahf
in
lahf
test
mov
clc
decb
test
xchg
out
imul
mov
mov
ja
lods
pop
dec
inc
jne
jo
mov
daa
fs
leave
jmp
or
iret
ret
jmp
xchg
sub
movsl
mov
sbb
lcall
dec
cmpsl
daa
iret
inc
dec
movsl
mov
dec
pop
dec
iret
mov
xlat
jno
out
into
pop
lret
jecxz
dec
sub
popf
addr16
das
xchg
leave
jne
add
xchg
scas
push
lock
stc
sbb
out
mov
cmovno
xor
jecxz
fbstp
push
lods
or
idivl
mov
movsb
inc
pop
and
mov
outsl
aam
pusha
into
clc
int
cmpsl
pop
scas
lock
mov
in
lret
iret
stos
pop
iret
leave
sub
push
add
mov
push
or
fmul
dec
and
ret
fstpl
adc
jl
subb
sbb
adc
dec
fdivs
test
in
test
sub
jae
sub
mov
cmp
lock
xchg
sbb
mov
icebp
cmpsl
popa
lcall
sar
inc
or
in
sbb
sbb
loopne
pop
sbb
fwait
out
jl
push
dec
and
lret
push
xorb
or
popa
lret
xchg
das
jno
mov
add
adc
dec
inc
jne
fdivp
sub
stos
lock
movsl
or
out
push
pop
ficoml
inc
sahf
mov
push
pop
mov
leave
cmp
shrl
mov
lods
or
shl
inc
lock
aam
pushf
adc
fimull
jecxz
or
popf
add
loopne
les
mov
mov
xchg
push
leave
inc
mov
popf
mov
mov
popf
sbb
es
push
out
std
ret
cmc
inc
outsl
stc
test
popf
xchg
pop
les
mov
jg
lret
cmc
scas
insl
clc
mov
xchg
xchg
movsl
dec
mov
rcrl
roll
in
ss
call
out
call
test
inc
jmp
loope
sti
stos
out
xchg
ds
clc
addr16
jle
orl
loope
xor
clc
sub
arpl
shll
sub
mov
jnp
lret
adc
in
push
sub
lret
add
jnp
icebp
push
xchg
dec
push
mov
icebp
sub
push
lcall
jg
call
push
rep
xorb
daa
std
xchg
lcall
push
sti
push
adc
sbb
lea
adc
lds
jle
out
pop
mov
adc
mov
sub
test
push
mov
and
mov
movsl
push
testb
out
mov
lahf
mov
inc
dec
and
mov
cmove
shrb
mov
mov
jae
pop
insl
aaa
sahf
cmpsl
loop
sbb
xor
mov
mov
pop
dec
cmp
or
jmp
rcr
and
push
push
subl
lret
sbb
popf
das
mov
stos
cmp
push
adc
xorl
stos
enter
fcom
jecxz
adc
pop
inc
test
cs
push
xor
es
push
mov
repnz
jl
add
push
negb
xor
adc
and
mov
fwait
fcompl
shl
dec
mov
pop
or
test
test
sbbb
xchg
loopne
shl
ss
test
jecxz
xchg
ror
call
sbb
es
call
jb
cmp
push
mov
out
pop
je
dec
test
and
jb
and
mov
push
ret
cmpsl
push
cmp
add
mov
rcrl
iret
jb
sti
dec
lds
push
int3
add
inc
ret
addb
movsb
icebp
fwait
sub
adc
fsubrs
sub
aaa
aas
test
sub
sbb
or
mov
hlt
dec
jae
and
aam
jns
test
sahf
sbb
inc
fists
mov
sarb
icebp
movsl
fadd
jbe
cld
out
jne
mov
xchg
xlat
test
call
push
mov
rcl
sub
push
inc
xchg
xor
xchg
mov
into
jmp
icebp
xor
jno
insl
ljmp
movsb
push
nop
add
push
lock
mov
pop
fcmove
gs
dec
xorl
mov
sub
push
fidivs
dec
ret
xchg
dec
mov
mov
aaa
sbb
pop
mov
xchg
mov
sub
loopne
flds
jb
jb
xor
xchg
iretw
out
dec
mov
sahf
push
sub
mov
leave
and
sbb
sbb
mov
xchg
jns
mov
mov
test
cwtl
add
lds
outsb
das
jg
lods
das
jl
je
fisubrl
mov
xor
stc
adc
movsb
and
xor
mov
add
pop
mov
sbb
daa
ljmp
test
hlt
aad
push
ret
lods
rcl
divb
or
adc
dec
orb
nop
lock
push
xor
dec
pusha
cli
sbb
mov
insl
pop
sbb
jmp
push
fmuls
push
pusha
mov
out
lea
sbb
leave
mov
rclb
or
lds
out
pop
je
ss
lret
shlb
rcll
mov
mov
xchg
ljmpw
inc
xor
into
inc
leave
and
es
call
jo
cltd
add
dec
add
insb
ret
and
in
adc
nop
xor
dec
cmp
mov
xor
pop
lds
and
loope
push
inc
pop
xchg
imul
push
inc
movsl
les
jae
ret
ds
xlat
pop
inc
lods
mov
mov
xor
cmp
ss
loope
cli
inc
addr16
hlt
dec
jnp,pn
rcrl
jl
cmp
arpl
shrb
dec
add
loope
loop
sbb
scas
leave
mov
xor
testb
and
sub
push
push
es
das
sbb
xor
dec
mov
mov
dec
ja
fcmovnu
push
mov
cmpsb
mov
adc
push
rcrl
push
push
pop
test
ret
pop
test
icebp
or
outsb
mov
mov
mov
shll
rclb
popf
cmp
pop
mov
sbb
jl
push
push
xchg
adc
lds
leave
test
filds
rclb
sbb
inc
jns
insb
push
xor
jmp
pop
int3
push
addb
scas
add
cmp
jbe
out
push
jno
addr16
sti
push
jle
nop
lods
shl
lea
in
cmpsb
xor
fbld
cli
jl
out
dec
lcall
ss
mov
or
xchg
xor
sub
inc
mov
xchg
enter
test
leave
ret
adc
lcall
jmp
jg
xor
pop
pop
xchg
mov
mov
lock
sbb
cltd
jae
insb
jmp
fcomi
test
mov
pop
inc
pop
mov
ret
sbb
inc
les
sti
sarl
xchg
dec
pop
and
jl
jmp
and
test
lock
gs
cli
das
mov
or
mov
popa
jecxz
xchg
and
jle
xor
aas
mov
adcb
xor
xchg
fists
sbb
test
push
dec
dec
scas
test
dec
hlt
repz
mov
or
aam
or
insb
std
cmp
jg
sbb
cmc
fistpll
jo
jbe
in
pop
mov
inc
test
jecxz
and
insl
add
pop
mov
push
xchg
lea
in
cmp
aaa
push
aad
sbb
xchg
dec
add
fistpl
in
mov
std
push
cmpsb
test
outsl
or
ja
cmp
mov
fwait
push
gs
jmp
jge
xor
lods
inc
inc
in
pop
cmpxchg
mov
fisttps
push
xor
mov
cmp
dec
dec
inc
mov
enter
mov
cmpsl
out
xlat
inc
scas
xchg
adc
and
xchg
ror
jmp
sbbl
cmp
call
lods
lock
pop
gs
push
cltd
movsb
mov
mov
sbb
sub
orb
inc
and
adc
lds
jbe
into
cmp
sarb
mov
and
dec
push
adc
sbb
jno
mov
xorl
push
pop
test
mov
xor
repz
mov
dec
xor
xchg
add
pop
push
out
pop
insb
sbb
cmp
inc
dec
out
mov
mov
mov
stos
movsl
into
out
std
rorl
cmp
add
push
and
inc
dec
int
mov
or
jmp
jbe
lahf
in
pop
fnsave
xlat
data16
rclb
pop
gs
jmp
in
mov
jb
jne
cmp
push
inc
stos
sub
add
and
add
sbb
lahf
fldl
clc
bound
xchg
dec
jo
xchg
popf
movl
ss
outsl
sbb
divb
nop
inc
arpl
scas
push
jg
xor
jge
daa
sub
inc
movb
daa
cmp
mov
roll
fimull
out
js
aaa
shl
rcrb
mov
mov
adc
out
jle
inc
inc
xchg
ret
scas
adc
cmc
inc
mov
push
ret
int
pop
stos
int
sub
adc
ja
mov
js
push
icebp
ja
das
xor
inc
rorl
mov
insb
in
aad
movb
or
scas
or
addr16
jle
sbb
cld
jp
push
dec
xchg
adc
call
aas
iret
or
pop
movsb
dec
out
int3
das
les
xchg
lock
mov
adc
pop
cmovne
adcl
repz
jl
loopne
aaa
mov
cmpsl
stos
cmc
jns
cs
ljmp
or
data16
and
repz
mov
movl
adc
cwtl
mov
or
push
cmpsb
pop
insb
cmp
jae
push
test
mov
js
mov
xor
pop
mov
out
enter
mov
pop
or
fdivrl
mov
adcb
push
sbb
mov
bound
mov
jbe
dec
mov
dec
ficoml
loope
mov
cwtl
out
popf
std
out
and
cmp
mov
push
aaa
ja
jmp
sahf
gs
xchg
aam
or
push
stos
push
andl
xchg
inc
addb
out
data16
nop
add
in
and
inc
imul
cmp
push
in
cmp
cmp
and
movsb
inc
dec
pop
sub
into
fidivl
mov
inc
scas
mov
cli
test
and
cli
xor
in
pop
andl
lods
cltd
push
jl
ds
out
gs
sbb
cmp
incb
sti
push
leave
push
rcr
xorb
dec
andl
iret
xchg
ds
mov
pop
push
femms
add
arpl
pop
cmp
das
adc
mov
mov
loop
cmp
xlat
mov
cmpb
stos
fstl
ret
out
mov
ret
rol
adc
out
adc
cmp
sub
jbe
mov
push
repz
pushw
push
dec
test
stc
enter
lds
orb
xlat
sahf
dec
mov
loopne
push
mov
xchg
mov
lret
jbe
mov
add
cmp
sub
cmp
insl
setbe
or
cli
adc
mov
push
rolb
xor
mov
into
test
sbb
xlat
or
cmpsb
bnd
xor
jge
test
jns
mov
nop
adc
pop
sbb
push
mov
movsb
fimuls
rcrb
daa
inc
fmul
push
dec
lea
dec
mov
ficoms
out
pop
cltd
push
add
jno
imul
fwait
dec
jne
icebp
mov
xchg
mov
jbe
add
and
out
add
loop
rorl
or
lcall
jl
and
popf
aaa
cmpsb
push
pop
pop
xchg
jmp
insb
push
pop
add
sub
mov
mov
les
jecxz
into
movl
add
lret
push
cmp
std
cmpsl
jnp
inc
push
inc
push
mov
pusha
pop
add
mov
sub
imulb
mov
imul
out
jbe
into
iret
addr16
std
shrb
inc
js
dec
sbb
mov
test
jb
pop
jnp
inc
daa
push
pop
leave
iret
pop
js
adc
xor
sub
mov
int3
jns
pushf
push
inc
fcompl
rcrl
in
mov
jno
pop
mov
push
shll
pushf
loope
imul
leave
hlt
sbb
jnp
imul
rdmsr
jge
cmpb
inc
dec
lahf
jns
jno
scas
adcb
xchg
xchg
imul
cmp
mov
into
leave
ja
daa
push
xor
dec
cmp
pop
mov
dec
sbb
mov
dec
push
imul
inc
push
jl
ljmp
sbb
xor
jae
aam
sub
and
xlat
mov
mov
cmpsb
jge
pop
mov
xchg
add
and
xor
mov
sbbb
xor
dec
mov
lfs
push
ret
pop
scas
pushf
fistl
xor
loopne
mov
sub
daa
aaa
ja
cli
jl
pop
or
inc
pop
jl
mov
aas
mov
mov
mov
sub
ljmp
pop
aam
push
or
cmp
mov
cmpsb
or
lock
cmp
jb
xchg
mov
or
mov
sbb
call
cmpsl
mov
iret
scas
and
pop
add
in
out
inc
lret
pop
mov
js
jae
fsub
adc
out
mov
xchg
repz
iret
in
in
xchg
stos
fldcw
das
adc
or
add
xchg
sbb
or
mov
xchg
inc
sarl
xor
dec
pop
aaa
call
scas
lret
pop
xchg
inc
push
sub
mov
push
lret
sub
movsb
push
jmp
adc
cmpsl
cltd
mov
xchg
jb
jne
add
pop
in
data16
in
push
test
int3
pop
es
push
fisubrs
test
cmp
jecxz
ucomiss
andl
testb
pop
lea
test
jo
cmp
and
setns
xor
nop
dec
lods
and
lret
in
jae
inc
or
and
mov
and
push
jmp
xchg
sub
cmc
adc
bound
mov
push
dec
js
lret
es
fistl
xor
lret
hlt
lcall
mov
lret
inc
mov
js
xor
pop
aas
sub
and
or
adc
jp
scas
rcrl
push
pusha
xor
mov
jge
inc
loop
jmp
pop
loop
sbb
rcrb
aad
mov
pop
fs
push
sbb
add
xor
jl
cmp
cmpsb
rcl
lea
arpl
jl
divb
sbb
lea
mov
in
lods
dec
imul
sahf
roll
int3
ss
push
clc
out
inc
adc
fwait
cld
fs
cwtl
xchg
and
mov
or
insb
stos
inc
popa
iret
cld
xchg
es
xchg
out
ret
popf
pusha
fstpt
shlb
inc
xchg
push
loop
aad
push
int3
push
test
daa
jb
jae
pop
in
and
cmp
sub
jb
jmp
call
into
outsb
lahf
xor
pop
push
pop
lds
add
orl
or
xchg
cmp
pop
in
and
push
push
loop
jge
repz
aas
enter
dec
ror
ljmp
and
cwtl
sub
nop
or
pop
ds
scas
pop
jge
aam
jne
pop
adc
outsb
cwtl
out
sbb
les
fwait
cmp
xor
movsl
adc
cmc
jno
orl
add
loope
or
adc
aas
fsubr
push
inc
inc
mov
jecxz
iret
lods
push
outsl
mov
mov
les
das
add
aaa
sbb
divl
outsb
pop
pop
push
push
and
and
adc
xchg
icebp
jne
loopne
test
lods
jl
lock
in
push
add
jne
jo
ja
xor
inc
shrl
xchg
popa
and
mov
jle
adc
mov
inc
mov
sbbb
jb
push
andb
lret
test
xor
les
ret
fldlg2
in
js
popa
andl
mov
and
sbb
fs
sar
adc
xor
adc
sub
cmp
fsubrl
xchg
push
orl
push
cmpsb
pusha
mov
call
scas
mov
insb
sbb
pop
das
mov
adc
out
add
pop
or
andl
dec
sbb
or
jbe
int3
xchg
fldenv
push
lahf
mov
push
push
mov
dec
mov
fisubs
lods
test
cmpsb
movsl
shrb
mov
lcall
jnp
clc
xchg
sub
shrb
cmp
sub
pop
mov
adc
adc
sahf
fcmove
sbb
and
lods
das
mov
add
sub
std
cmpl
shll
and
mov
fildl
or
aam
aam
clc
ja
xchg
bound
push
add
mov
xlat
hlt
std
scas
or
cmc
movsl
stos
daa
cmp
lock
add
popf
xor
sub
sbb
xorb
sbbb
ds
loope
rolb
lock
movb
mov
xlat
jo
dec
je
rorl
aaa
dec
mov
sub
or
jo
dec
into
mov
and
xor
das
and
out
aaa
lcall
scas
lcall
or
ret
and
imul
js
push
outsb
sub
mov
or
imul
adcl
test
popa
mov
pop
jnp
dec
outsb
popa
in
movb
lds
sub
or
icebp
es
icebp
int3
add
mov
lcall
adcl
sub
pop
jp
psubusw
mov
in
xor
into
or
out
mov
dec
mov
inc
or
push
test
call
subl
stc
jle
and
pop
iret
mov
ljmp
cld
lods
jae
sahf
dec
sbb
cmp
push
jb
sbb
mov
cld
outsl
mov
inc
mov
popf
aad
sbb
out
cmp
fildl
nop
jnp
push
jne
xchg
dec
outsb
or
hlt
or
rcrl
mov
call
lods
fs
add
push
inc
stos
dec
js
lods
xor
addr16
and
jmp
out
mov
sub
clc
mov
or
xchg
imul
inc
divb
sbb
fptan
lods
loop
cmpsl
cmp
mov
stos
dec
aaa
cmpsl
insb
add
ret
jb
or
cmp
inc
in
int3
dec
es
and
mov
dec
cwtl
scas
imul
sub
std
add
out
cmp
or
test
xchg
jge
imul
stc
and
movsl
rcrl
fs
dec
test
add
jae
pop
repz
cmp
pop
into
xor
cltd
subl
xor
mov
cld
xor
in
clc
popf
or
lea
mov
sub
int3
add
aam
rcll
aas
loop
mulb
cmp
add
and
mov
jne
add
xchg
iret
movsb
mov
or
in
pop
scas
addl
sar
cli
or
loopne
mov
sbb
cltd
add
sbb
dec
int
inc
dec
aas
fcomps
repz
outsb
in
cs
mull
fiadds
pop
imul
movsl
jecxz
cmpsb
pop
jl
fldenv
ds
pusha
pop
insl
jge
insb
jle
shlb
inc
fsubs
lcall
stos
scas
mov
loopne
popa
mov
xor
or
mov
lret
lds
jae
pop
lods
mov
mov
cmpsl
adc
xchg
popa
mov
jg
test
in
pusha
dec
lock
xchg
ret
maskmovq
xchg
les
cld
es
add
add
add
cmc
sbb
and
std
shl
mov
fnstcw
xchg
xor
mov
push
dec
cmpsb
hlt
push
test
cmp
insl
and
xchg
stos
push
daa
dec
es
in
or
idivl
lret
out
gs
in
xchg
test
cmp
sbb
or
mov
pop
mov
inc
or
mov
pop
lods
xor
mov
in
insl
decl
inc
ret
sbb
aaa
fwait
in
aas
adc
cmp
insb
add
test
repz
and
ss
inc
ret
push
adc
in
or
jg
inc
push
and
repz
negb
fwait
dec
xor
cs
dec
sti
sarb
xchg
sbb
stos
lret
sub
aad
lahf
repnz
xchg
or
fildll
out
scas
fimuls
xor
mov
loopne
loope
fs
ds
cmp
das
data16
cmpsl
pop
ja
mov
es
mov
mov
rorb
lret
cmp
jge
movsl
cld
ret
lret
xor
loope
lret
enter
daa
cmpsl
jae
cwtl
jno
and
inc
ret
int
hlt
imul
dec
dec
and
push
push
xor
xchg
add
data16
or
std
mov
leave
ret
movl
xor
aas
xchg
icebp
int
call
mov
lahf
adc
das
or
inc
push
pop
mov
ja
out
mov
fnsave
popa
push
or
jns
sahf
or
xlat
jge
stc
mov
sbb
aam
fwait
push
mov
xchg
mov
sbb
sbb
sbb
in
sub
inc
scas
xchg
inc
push
repz
and
mov
cmp
mov
push
arpl
xor
mov
into
inc
xor
xchg
sub
xchg
ss
xlat
dec
mov
cmp
push
sub
or
mov
xchg
push
repz
xor
and
cmp
add
imul
sbb
repz
xchg
xchg
cltd
sub
adc
int
jae
adc
xlat
decl
pop
int
test
push
pushf
mov
out
jns
mov
mov
push
xor
int3
pop
pop
movsl
xor
push
inc
mov
mov
dec
psrld
jmp
outsl
or
mov
loope
pop
outsb
orb
add
mov
test
loope
jbe
xchg
xchg
shll
xchg
mov
daa
mov
clc
repz
xor
inc
test
add
push
outsb
call
or
out
clc
jg
dec
add
ljmp
pushf
lcall
jne
imul
insl
cld
pop
movsb
icebp
fwait
push
gs
inc
insl
push
movsb
rcl
inc
movb
cs
sub
popa
xor
add
mov
xchg
xchg
jo
iret
hlt
xchg
fisttps
inc
scas
faddl
push
ficompl
rorb
insl
mov
jnp
sbb
imul
loopne
outsl
pop
pop
jl
fwait
dec
lret
jmp
cmp
fisttpl
icebp
sub
mov
sbb
xchg
push
test
lret
jo
pop
pop
jle
mov
sti
pop
inc
fdivrl
les
pusha
push
lret
dec
jns
aad
sahf
sub
or
push
into
xchg
cmp
lods
pop
mov
nop
cs
popf
cmp
test
xor
nop
mov
lcall
lcall
add
cmp
dec
lret
mov
into
or
jns
sbb
out
lods
jno
cmpsl
sbb
push
cmp
or
lods
and
ljmp
adc
ret
inc
push
call
pop
pop
test
push
icebp
push
ljmp
faddp
daa
mov
xchg
enter
mov
inc
aas
cmp
popf
ss
andb
loop
cltd
mov
inc
out
add
cli
jne
ret
movsl
ret
icebp
daa
popf
fsubrp
jl
or
sub
fs
xchg
xor
scas
cmp
jl
inc
push
add
cwtl
arpl
ds
nop
test
xchg
pop
push
xor
js
pop
mov
xchg
pop
daa
pop
push
pop
push
test
dec
lret
addr16
insb
movsb
push
ret
sub
mov
in
nop
loopne
pop
shrb
jle
es
mov
inc
out
stc
subb
in
inc
imull
mov
cmpsb
mov
adc
sbb
in
lods
xchg
jns
mov
xchg
adc
or
bound
cmp
ljmp
gs
xor
loopne
repnz
je
sbb
mov
add
lods
mov
pop
mov
ficoms
shr
mov
filds
inc
call
push
cmc
jmp
mov
mov
negb
aas
mov
mov
push
int
dec
test
or
mov
mov
aaa
push
cld
xor
mov
and
push
into
arpl
mov
sub
outsb
jnp
mov
cwtl
jne
pop
xchg
push
jbe
mov
push
xchg
test
jb
fbld
inc
adc
popa
cmpb
ds
stc
or
push
ret
xor
cmp
iret
sub
fwait
mov
enter
out
test
xor
test
aaa
push
out
xlat
rcll
dec
ficompl
jg
cmp
sub
cmpsb
mov
cmp
and
imul
mov
xor
out
out
push
jmp
mov
rcr
cli
insb
mov
xchg
arpl
insl
inc
ss
aaa
rorb
add
sub
or
inc
popa
xchg
data16
out
mov
dec
pop
addr16
lods
arpl
sbb
fwait
repz
call
pop
adc
int
xlat
insb
sbb
or
cmp
or
xor
push
sbb
neg
fucompp
nop
lcall
push
mov
sahf
mov
inc
add
and
sub
fidivs
dec
inc
push
sbb
fnstenv
mov
mov
lcall
jns
sahf
scas
sub
imul
mov
stos
mov
movsl
aas
movsb
xor
nop
xor
adcb
pop
out
inc
icebp
push
lret
fcoml
xor
test
mov
cli
dec
jnp
imul
add
xor
test
shll
iret
inc
sub
cmpsb
mov
imul
nop
push
adc
mov
fnstenv
mov
je
sbb
into
jmp
push
or
sbb
mov
inc
pop
fnsave
popa
xchg
mov
adc
adc
dec
loope
and
adc
ret
jmp
lods
inc
es
aam
cmp
ljmp
test
pop
dec
mov
aas
jns
push
adc
mov
test
cmp
fstpl
movsl
mov
jmp
xor
repnz
xchg
out
xlat
daa
test
pop
pop
xor
inc
xchg
sbb
je
popa
out
inc
cmp
push
stos
push
stos
adc
ret
data16
test
adc
ss
iret
adc
sub
pop
sahf
xor
popf
cmovg
clc
xchg
movsl
out
movsb
cli
lods
jno
filds
dec
or
cli
test
or
xchg
ret
cmp
adc
push
inc
movsl
or
test
jo
movsb
mov
imul
pop
and
out
sub
test
out
shlb
sub
enter
movsb
aad
jmp
xchg
mov
and
dec
inc
stc
inc
aas
push
or
popa
jecxz
push
sub
out
mov
stc
ss
clc
ja
adc
mov
movsl
or
sbb
lahf
mov
rorb
loope
imull
ds
adcl
jmp
xchg
jae
cmp
popa
aas
xlat
stos
and
inc
adc
xchg
shl
icebp
and
push
add
mov
lea
fidivrs
cwtl
or
or
fs
inc
add
imul
into
mov
stos
xor
leave
jle
fdivr
cmp
int3
dec
and
inc
xor
adc
pop
or
cli
mov
mov
push
mov
in
mov
or
out
mov
cmp
popf
push
xlat
test
xor
adc
rorl
dec
push
jno
aad
inc
dec
icebp
in
pusha
push
shl
adc
mov
sub
test
imul
in
mov
mov
jecxz
mov
inc
push
decb
ljmp
xchg
ds
mov
cs
xchg
loopne
lds
loop
sbb
jecxz
cs
incl
mov
dec
sbb
movsb
es
cld
xchg
dec
scas
add
dec
les
dec
out
mov
xchg
lcall
mov
repnz
jge
jb
cltd
fldt
ret
aaa
stc
int3
sub
pop
xor
call
daa
sbb
ret
xor
pushf
hlt
mov
add
subb
addb
xchg
and
or
cmpsl
clc
add
xor
stos
mov
arpl
ss
lea
mov
jg
xor
dec
out
pop
dec
sub
mov
dec
push
repnz
fs
push
pusha
cmp
mov
stos
shrl
jmp
mov
fidivrl
test
dec
or
pop
sub
mov
fwait
sub
ljmp
mov
orb
fstpl
mov
dec
pusha
int3
jge
test
cmp
mov
movsl
sub
sub
push
push
sub
mov
aam
fdivrl
add
int
clc
addb
mov
mov
or
lods
add
pop
sahf
pop
mov
mov
int3
iret
lahf
mov
mov
push
imul
adc
push
cmpsl
xlat
sbb
test
mov
mov
shll
outsl
gs
call
test
mov
push
imul
arpl
cmc
jns
and
sub
xchg
popl
and
and
bound
adcb
and
outsl
pushf
xchg
inc
ss
xor
fimuls
movb
jl
mov
cli
sbb
mov
or
je
mov
mov
xor
pop
lock
nop
pushf
rcrb
aam
and
add
stos
jae
lea
pop
dec
or
imul
scas
xchg
movsb
dec
testb
sbb
sub
orb
xchg
add
or
orb
sarb
add
add
std
push
xchg
xchg
mov
out
repnz
sahf
imull
popa
and
daa
sbb
stc
ss
daa
cwtl
and
pop
pop
mov
mov
icebp
add
xchg
mov
xor
push
sti
cmp
shll
push
out
pop
jge
mov
pop
pop
mov
dec
mov
jp
and
lds
addr16
pop
dec
cmp
xor
push
fwait
loopne
and
sub
stc
dec
xorb
mov
stos
pop
dec
mov
shrl
out
cmpsl
pop
notl
add
xor
sbb
push
mov
popa
mov
stos
fildll
lds
ljmp
adc
jle
inc
ljmp
mov
scas
jns
mov
inc
push
jno
mov
fmull
gs
adc
addr16
xchg
testb
mov
mov
mov
jb
mov
out
fst
jge
inc
or
icebp
sbb
jl
jbe
imul
or
sbb
jnp
mov
dec
adc
mov
lods
inc
sub
lret
and
inc
inc
imul
leave
jle
inc
inc
jbe
fcoml
sub
jb
sub
push
pop
mov
fisubrl
mov
xor
sbb
repz
pushf
call
mov
test
dec
mov
mov
ds
addl
roll
add
lds
inc
fisttps
mov
add
loope
imul
cmpsb
and
jge
push
cmc
adc
call
xchg
push
jne
fildll
lods
adc
jg
dec
ds
sar
xor
imul
xchg
and
jnp
into
and
mov
loope
aad
jo
cli
cmp
lock
add
adc
outsb
cmp
cmpl
xor
pusha
das
push
xchg
imul
iret
outsl
lods
mov
mov
cld
adc
sahf
imul
pop
jns
mov
orb
mov
loop
movsl
pop
or
pop
lret
xor
inc
mov
data16
cmpsb
fcomps
aaa
mov
or
jle
bound
sub
lahf
imul
test
add
out
add
clc
pushf
cmp
sbb
addb
xchg
push
mov
aad
in
rol
pop
ja
int3
mov
lock
pop
jl
jo
sub
ffree
dec
mov
mov
push
push
jno
inc
push
dec
dec
mov
fdivr
cmp
inc
sub
sub
add
addr16
test
ret
cmp
int3
mov
or
jae
lds
sub
addb
int
pop
not
hlt
sub
jge
or
or
or
and
idivl
push
fbstp
mov
jne,pn
movsb
nop
sub
mov
mov
outsl
sbb
pop
out
mov
pop
movsb
jl
cs
les
out
or
in
mov
mov
push
add
xor
lock
mov
js
cmpsb
mov
jnp
es
cli
rcl
aad
icebp
jecxz
pusha
push
xchg
int3
imul
jno
cmp
fmuls
out
ds
std
loope
sbb
jnp
push
fwait
and
stos
mov
mov
mov
jge
sub
cwtl
loopne
int3
imull
xor
out
push
cltd
lret
scas
data16
mov
inc
stos
mov
lcall
push
rol
mov
into
and
jmp
or
iret
stc
je
cmp
out
cwtl
mov
inc
adc
data16
mov
xor
push
in
fisubrl
pop
into
imul
pushf
insl
cmp
push
adc
push
fbld
roll
cwtl
fdiv
or
mov
add
loope
xchg
mov
inc
ja
mov
daa
dec
and
call
xorl
pop
xor
add
dec
mov
mov
and
addr16
ljmp
inc
jns
int
out
daa
pop
pop
mov
imul
jne
cli
popf
outsb
js
ret
imul
cmpsl
stos
fmull
and
push
pop
incb
insl
into
fsubs
mov
imul
push
cmpsl
test
adc
sbbl
mov
movsb
and
cmpsb
push
jle
dec
jg
push
out
fbstp
or
push
outsl
push
dec
call
push
xor
add
push
inc
push
leave
mov
sbb
repz
jnp
int3
in
jae
clc
out
data16
sbb
rcll
add
ret
mov
push
mov
xchg
loopne
inc
xor
xor
or
xchg
pop
sub
pop
insb
push
jp
arpl
adc
sbb
and
test
mov
test
loop
lahf
loop
lock
hlt
sbb
in
pop
fsubrs
mov
je
jns
cmpsb
aaa
mov
and
xchg
fucomip
cmc
int3
imul
sbb
int
adc
in
hlt
dec
and
repnz
sbb
push
sarl
xor
push
ficoms
jnp
cltd
jnp
and
mov
adc
and
cli
adcl
pop
sbbl
out
scas
mov
addb
push
pop
fsub
ret
cmp
mov
and
cld
inc
pop
lds
movsl
xlat
push
repnz
jle
stos
jae
aam
add
sub
pop
out
pop
pop
ret
ret
and
rcr
sub
jne
xor
js
pop
sub
pop
in
ss
popa
dec
xchg
loope
repz
retw
shll
cmp
popf
sbb
in
xchg
mov
push
cli
sbb
xchg
dec
jge
test
adc
xor
daa
xor
cwtl
test
xchg
jb
or
addl
add
dec
xchg
cmp
mov
sbb
lea
jecxz
pop
dec
xchg
std
push
cmp
mov
jle
jle
adc
mov
dec
mov
inc
or
push
outsb
mov
xchg
jbe
daa
ja
lea
inc
clc
in
mov
lods
popf
scas
inc
loope
movsl
lods
sbb
adcl
xchg
out
or
add
dec
cwtl
jbe
xchg
stc
and
divl
scas
in
push
call
repnz
repz
lret
leave
jl
les
and
shll
ret
fisttps
ss
pop
test
xchg
imul
xor
mov
stc
xor
xchg
mov
inc
lcall
jnp
xor
popf
pop
cld
adc
xchg
lds
xchg
test
jmp
or
inc
rcll
into
addr16
fdivrl
sbb
pop
mov
test
adc
ljmp
popf
mov
cmovg
insb
lea
sbbl
fwait
mov
sub
pusha
cmpsb
inc
mov
sti
loop
mov
mov
aam
daa
add
mov
out
aam
pusha
faddl
push
cltd
shlb
aam
push
adc
jb
mov
cmp
push
jb
pop
lods
mov
push
jne
ficompl
add
fdivp
jge
cltd
jb
shll
outsb
push
pop
fsts
cmp
and
daa
dec
inc
fwait
outsb
out
push
out
sbb
in
movsb
cmpsb
mov
cmpsb
negb
push
movsl
out
jp
ja
push
or
jg
shrl
repnz
xor
dec
and
sub
jg
mov
test
test
outsb
inc
push
dec
adc
xchg
rcll
gs
cli
daa
inc
push
gs
inc
add
cmpsl
and
mov
test
insl
lods
mov
leave
xchg
xchg
sbb
sub
loopne
fistpll
jns
jmp
adc
adc
dec
insl
pop
lods
mov
push
rclb
sub
xchg
inc
or
mov
mov
fcomps
xchg
mov
pop
inc
repz
mov
adc
jnp
jnp
pop
mov
cmp
fistps
notl
ljmp
cmp
icebp
sub
hlt
sbb
dec
stos
orb
mov
xchg
xor
jmp
jne
adc
or
aam
xor
xchg
insb
fwait
popa
std
sbbb
xchg
movsl
ds
inc
lds
adc
inc
cs
cld
psubq
mov
adc
mov
in
sahf
ds
loop
mov
lock
push
rcrb
ss
lret
mov
imul
xchg
outsb
xor
xchg
xchg
sub
cmp
lahf
cltd
push
xchg
cmp
cwtl
sub
add
xchg
ret
cwtl
js
mov
stos
push
outsl
mov
cmp
mov
daa
out
mov
mov
add
jmp
int
dec
mov
inc
sbbl
pop
daa
cwtl
pusha
sub
jge
cmpl
xor
mov
lret
pop
subl
push
popf
aaa
inc
jg
fnstcw
mov
xchg
push
cmc
cmp
jge
mov
js
int3
or
mov
mov
xchg
or
mov
std
push
lods
filds
roll
adc
sub
jb
lock
fcoml
popa
loope
jmp
or
or
lods
rorb
mov
insl
sbbb
lahf
mov
sbb
mov
lea
cmp
mov
cmp
mov
push
fisttpl
iret
into
xor
push
cmp
sbb
notb
dec
xchg
out
jmp
sbb
mov
jg
or
jle
jns
notl
ds
lret
insb
addb
cmp
test
fsubrl
scas
out
hlt
xorl
lock
add
push
mov
mov
sbb
cmpsb
push
mov
repnz
js
jl
sahf
mov
pusha
pop
xor
int3
sub
or
inc
cmpsl
mov
xor
inc
inc
push
jne
out
jbe
jmp
insb
jnp
repnz
mov
lock
dec
inc
fs
xchg
or
clc
pop
push
ds
push
jmp
fistpl
add
and
lahf
adc
data16
xor
adc
push
cmc
push
sar
push
test
mov
punpckhdq
cmp
aas
inc
lret
cmp
cld
outsb
outsl
out
inc
ret
mov
or
mov
jle
dec
loop
xor
ret
clc
call
fimuls
push
cmp
jb
dec
push
test
and
add
scas
addr16
lods
fcom
inc
xlat
sbb
fcmovnb
push
mov
push
dec
adc
sbb
test
add
push
sbb
fucomip
out
jo
or
mov
jmp
dec
mov
bound
lahf
imul
shlb
mov
jmp
enter
incl
jno
bound
mov
mov
mov
lods
addr16
lods
push
lods
cli
movl
push
lea
jg
js
bound
jo
pop
jle
cmp
mov
and
dec
rcll
ja
and
icebp
mov
jp
jnp
loope
daa
pop
sahf
adc
jl
mov
dec
divl
adc
sub
dec
nop
ficomps
test
out
in
movsb
outsb
dec
aas
repz
dec
insl
or
movsb
addb
testb
insb
push
push
pop
cli
mov
pop
lret
cmp
mov
and
lret
cmpsl
jns
lds
popf
jmp
fucom
adc
cmpsl
mov
jno
cmpsl
mov
mov
inc
sbb
outsl
mov
shlb
jge
cmp
test
dec
addl
push
xor
jb
mov
pop
dec
xchg
ljmp
xchg
jge
jl
or
mov
sub
ret
add
test
pop
mov
test
jb
xchg
mov
xorb
push
in
adc
in
xchg
ret
lock
aas
lret
pop
mov
mov
fsubs
jbe
mov
ds
dec
not
jl
dec
adc
cli
xchg
mov
das
sbb
mov
out
pop
xor
inc
addr16
aad
int
adc
or
sbb
int3
add
icebp
push
jle
adc
imul
mov
pop
fcomps
sub
cmp
sub
cwtl
into
fdivrp
rcr
lock
pop
sub
scas
int3
aad
test
pop
mov
push
iret
addr16
cmp
movb
call
dec
cmp
or
sbb
adc
in
arpl
push
push
adc
mul
push
test
push
dec
inc
mov
negb
icebp
sbb
repz
fidivl
pop
inc
rolb
push
jnp
mov
jg
movsl
mov
stc
jnp
leave
addl
rcrl
sbb
mov
pop
dec
stc
in
enter
sbb
ss
pop
add
aam
cmp
mov
jmp
dec
jae
pop
mov
jns
in
or
or
mov
push
mov
xchg
cmp
lea
dec
gs
outsl
and
cld
mov
subb
xchg
pop
ss
aad
pop
popf
xlat
add
in
or
fs
and
inc
sbb
pop
popf
aaa
adcl
ret
pop
mov
aad
aaa
fildll
ficoml
jl
push
orl
bound
cli
stc
shrl
aad
and
mov
ficoms
dec
fimull
pop
shl
and
inc
inc
and
lret
fs
or
std
lret
sbb
xchg
cwtl
add
mov
lret
sub
xorl
pop
or
push
ljmp
out
push
xchg
mov
lret
imul
cmp
dec
sub
pop
mov
adc
mov
mov
and
aam
mov
mov
pop
mov
loop
fcmove
add
xchg
mov
mov
cwtl
push
push
pop
out
test
pop
out
add
sub
je
push
mov
repz
jns
mov
test
fdivr
movsb
push
xor
mov
dec
cmp
jge
sbb
xchg
xor
ja
test
int
rclb
add
mov
fstpl
iret
pop
nop
xor
nop
adc
insb
outsl
in
arpl
ljmp
popa
dec
xchg
cmp
push
or
js
stos
mov
mov
sbb
popa
cltd
push
ljmp
sub
or
xchg
jle
movsb
inc
je
les
addr16
xchg
popf
cmp
mov
cli
scas
push
loop,pt
fbld
pop
sbb
xor
push
scas
fwait
dec
xchg
adc
ja
mov
test
pop
fildll
fistpl
int
test
cs
ss
sarl
inc
lcall
mov
jbe
inc
mov
and
sbb
push
es
xchg
repz
into
xchg
cmc
int
cmpsb
pop
pop
pop
std
incb
sbb
dec
jno
push
sub
or
pushf
mov
inc
push
sub
mov
movsb
test
sbb
pop
jecxz
push
jecxz
icebp
inc
mov
xchg
push
cmp
dec
mov
addr16
test
jno
dec
push
psllw
adc
aas
sub
clc
call
arpl
sub
js
mov
pushf
shrb
outsl
pop
inc
jnp
cli
fmuls
sbb
jge
rcr
ftst
rdpmc
icebp
mov
int
and
pop
insl
or
popf
add
xor
adc
test
sbb
jbe
cmp
and
mov
test
pop
pop
inc
push
pop
inc
test
mov
xchg
mov
mov
pop
and
mov
fs
gs
push
insl
adc
fisttpl
jne
add
push
push
shll
sub
out
jne,pn
std
sbb
fisttpll
or
out
leave
daa
aam
nop
xorb
out
mov
je
bound
adc
jmp
mov
decl
jo
lcall
mov
icebp
xor
cli
clc
jnp
mov
xchg
sti
adc
outsb
adc
or
aaa
ds
adc
mov
mov
mov
ret
aam
leave
inc
xchg
jle
jge
fistl
mov
call
incb
lea
nop
shlb
or
mov
push
rorl
xchg
test
push
pushf
adcb
adc
into
push
xchg
jae
xchg
loop
inc
loope
pop
outsl
xchg
xchg
pop
data16
ja
inc
push
mov
das
lret
xor
cli
dec
lods
sub
cmp
leave
es
xor
mov
mov
sbb
dec
pusha
mov
push
pop
rol
sarb
ret
cmp
sub
scas
mov
cmpsb
jmp
call
jo
xor
repz
addr16
cld
test
scas
inc
out
cwtl
dec
jle
nop
adc
jmp
mov
jge
repnz
iret
test
fwait
mov
loopne
test
mov
fidivs
dec
xchg
or
dec
ds
outsl
pop
shll
xor
lods
jp
sarb
pop
dec
push
aas
adc
xlat
fdivrs
and
push
cltd
dec
jge
adc
mov
dec
idiv
testb
lods
subl
arpl
xchg
inc
out
cmpsb
cmp
pusha
and
cld
jle
xor
adc
fcmovb
rorl
sub
or
bnd
mov
ja
inc
mov
sbb
xchg
push
aaa
pop
add
dec
sti
fisttps
fstl
repnz
cmpsl
lea
sbb
daa
sub
shll
jb
jmp
sub
dec
pop
fmull
mov
fldl
outsl
inc
cmpsb
aam
in
cmp
sahf
cmpsb
in
int
push
fcmovbe
int
shlb
stos
test
inc
mov
mov
pop
ss
dec
lods
sub
push
mov
lcall
cmp
mov
adc
faddl
push
out
fildl
push
jge
out
cmpsb
and
xchg
imul
pop
add
adc
in
and
js
sub
xchg
ds
jmp
push
mov
psubb
movsl
lds
xchg
jo
test
neg
arpl
out
add
xchg
movsb
mov
xchg
iret
insb
arpl
aad
xor
sbb
jmp
dec
inc
push
pusha
push
inc
aas
and
hlt
das
je
adc
mov
cmp
cwtl
cmp
push
jge
ret
jb
xor
add
xchg
fdivrl
in
adc
lea
inc
and
mov
mov
jno
test
xor
mov
lods
addr16
pop
je
mov
jbe
lods
das
inc
filds
mov
xor
push
jne
loope
xor
dec
mov
and
fcmovnb
lahf
cmc
lret
or
aas
cld
add
repz
cmp
jecxz
dec
aam
add
or
mov
je
sahf
jl
jge
inc
notb
xor
cmp
sbb
insb
cmc
cmp
fistpll
outsb
stos
xchg
cmc
sahf
mov
fisttpl
xchg
pop
cmp
push
xchg
mov
test
mov
cs
cmc
fs
inc
xlat
push
mov
add
add
dec
stos
mov
movsb
sbb
or
dec
rcrl
arpl
add
test
cltd
push
in
sbb
xchg
dec
mov
mov
pop
xor
xor
mov
lcall
idivb
mov
cld
jg
push
repnz
sahf
pop
xor
adc
lods
add
das
mov
ja
test
jb
add
idivb
arpl
popa
sbb
outsl
movsb
loopew
sub
mov
stos
cmp
dec
jle
mov
xchg
popl
sub
pop
int
sbb
cmpsb
nop
and
mov
scas
or
and
cmpsb
mov
cltd
sbb
repz
pop
sbb
ja
subb
mov
mov
iret
and
and
stos
lea
add
loop
mov
loope
lcall
in
sbb
sarb
pop
lods
dec
or
pop
inc
shlb
mov
pop
out
or
mov
dec
mov
add
into
lods
mov
incb
ja
cmp
pop
mov
push
mov
xchg
sub
loop
inc
mov
leave
add
push
cmp
dec
scas
pusha
dec
jl
add
inc
sahf
out
mov
scas
xor
cld
jl
sbb
lcall
hlt
xchg
cwtl
mov
lock
ret
xor
aam
fninit
fisubrs
imul
mov
mov
cmp
pushf
cmp
paddusw
fstp
push
xchg
inc
lods
push
in
jl
int3
inc
data16
mov
jl
jl
pop
lcall
testl
xadd
std
mov
decb
imul
clc
ljmp
mov
iret
jbe
stos
ret
lods
int
movsb
mov
jo
test
imul
push
repnz
fnstsw
push
xchg
add
inc
lea
mov
inc
pusha
xor
outsb
xchg
test
jl
lahf
jl
jmp
aas
xorb
lea
jecxz
leave
add
repz
into
repnz
jl
adc
inc
loope
pop
pop
jno
mov
mov
mov
ds
shll
or
into
adc
stc
jmp
sbb
test
xorl
loop
das
inc
loope
loop
jo
add
xchg
testl
aam
sub
je
cmp
das
push
xchg
ljmp
hlt
insl
fmul
mov
fucomip
pop
fwait
xchg
out
mov
into
fs
cmpsl
loop
jmp
repnz
pop
mov
mul
in
hlt
mov
rclb
jnp
es
shll
fs
adc
xor
xchg
inc
push
stc
fs
out
ret
cmpl
xchg
mov
add
sbb
mov
or
pop
and
cld
out
fstps
lock
adc
stc
in
aad
lds
rcll
fs
cmp
xchg
xchg
dec
lea
lret
add
ljmp
xor
lcall
clc
jl
fwait
enter
and
je
sbb
inc
dec
out
movsb
cmc
pop
cltd
popf
xchg
inc
popa
movsl
or
das
ret
ret
sahf
lds
push
xchg
pop
adc
adc
fstl
or
ret
std
and
mov
test
sbbl
sbb
pop
mov
dec
jg
rclb
subb
xchg
scas
inc
cmp
xchg
mov
int
xor
ds
sarl
xchg
xchg
call
add
xchg
lds
gs
sub
dec
sbb
sub
scas
gs
push
add
push
ret
scas
push
pop
cli
orl
bound
or
mov
xor
outsl
xor
jb
rorl
pushf
test
push
xchg
cs
mov
repnz
sub
mulb
mov
push
mov
jmp
lcall
test
jg
daa
mull
lock
int3
aad
out
cmp
lcall
mov
mov
lea
xchg
adc
std
dec
dec
sub
inc
fisttpll
sbb
lahf
push
mov
data16
jo
inc
add
cmp
imul
les
out
sarl
jmp
adc
cmp
mov
xacquire
mov
fisttpl
int
xor
jge
dec
enter
mov
ror
std
scas
leave
push
and
push
mov
mov
pop
mov
mov
add
lahf
cwtl
sub
sbb
mov
jmp
mov
pop
add
ds
cmp
test
mov
sti
cmp
jno
add
outsb
mov
cmp
xorps
in
int
inc
jle
loop
dec
push
imul
mov
sbb
mov
call
aaa
and
je
mov
imul
jl
push
lods
nop
lock
gs
js
ret
out
pop
ja
adc
aad
cli
rcrb
faddl
out
jl
push
push
int3
jb
or
dec
push
sub
xor
out
std
stos
jl
imul
dec
add
ret
push
mov
add
push
or
push
cmp
cwtl
stc
jg
repz
push
adc
mov
jb
add
xchg
stc
cwtl
hlt
and
adc
adc
test
jp
int3
enter
rorl
fdivrl
cmp
cmp
jnp
clc
aad
jns
mov
mov
mov
cmp
mov
xchg
insb
mov
and
xchg
loop
push
pop
int3
in
dec
lods
pusha
aaa
push
rorl
push
movsb
ljmp
add
or
arpl
and
cmpsl
cmp
stos
nop
jae
scas
lods
mov
scas
sbb
xchg
int
and
cld
cmpsl
jae
jno
adc
inc
scas
scas
lcall
out
jns,pn
addb
ss
lea
jae
push
dec
stos
shll
adc
into
and
xchg
dec
mov
dec
push
mov
out
pop
ret
push
int
cmp
push
dec
pop
loope
jl
pop
push
sub
pop
addl
js
loop
sti
fistpll
xor
dec
stos
movl
push
jae
mov
push
sbb
rolb
push
xor
ljmp
pop
cli
clc
pushf
mov
ret
jmp
mov
loopne
or
inc
xchg
xchg
mov
sbb
mov
xor
mov
lods
jns
mov
cmc
sub
outsl
and
push
out
jg
xor
push
out
cmp
jge
dec
scas
push
add
and
push
inc
jmp
pop
sbb
fdivs
sbb
push
inc
test
cmp
jns
std
add
jg
icebp
data16
inc
sub
cmp
xor
dec
mov
pop
imul
int
cmp
std
out
ret
out
jmp
pushf
in
lcall
sahf
lock
jo
loopne
gs
sti
ja
js
loopne
dec
stos
pop
sbb
xchg
inc
in
dec
sbbb
lock
xor
out
imul
xchg
adc
insl
iret
dec
mov
iret
fwait
xchg
jo
enter
lock
adc
and
sub
nop
xchg
rclb
incl
xchg
es
mov
stos
xor
push
in
imul
pop
push
and
sbb
fucom
lcall
insb
xlat
enter
stos
jo
pop
cmpsb
pusha
lock
lcall
add
mov
shrb
loopne
sub
repz
movsb
xor
in
cmc
iret
pop
mov
imul
push
pop
cltd
ret
jae
lds
mov
insb
js
cld
sub
xchg
int3
adc
data16
xchg
fsubl
mov
jle
push
jl
xchg
push
xchg
ss
insl
out
jns
mov
and
jecxz
stos
cmp
jo
xor
les
aam
test
gs
inc
push
add
nop
shll
and
sbb
push
rorb
jns
add
inc
or
call
xor
shrl
sbb
loope
mulb
js
pop
cmpsl
loope
ret
lods
int3
ret
push
call
mov
dec
addb
fst
ss
sub
add
cmp
fsubr
pop
cmp
mov
dec
int
pop
hlt
xor
orb
cmp
cmpsl
inc
int
insb
adc
jmp
xchg
jmp
pop
insb
cmp
cmp
xor
add
lods
outsl
xor
or
push
mov
or
test
or
mov
pop
or
sub
push
dec
mov
mov
xchg
mov
mov
iret
sbb
ret
add
pop
xchg
push
xchg
ret
adc
aam
add
cmpl
push
lea
mov
lds
add
xchg
sbb
mov
lret
daa
scas
mov
and
mov
bound
cmp
dec
xor
inc
gs
cmc
and
imul
mov
pop
imul
popa
jl
lock
inc
enter
in
das
fwait
scas
out
sub
xor
sbb
pop
sti
cmpsl
shrl
int
xor
dec
out
cmpsl
and
inc
ds
jno
pop
andb
roll
push
fists
dec
push
add
int
cwtl
out
sbb
sarb
out
xor
pusha
mov
mov
pop
scas
mov
out
es
stos
add
out
xchg
and
push
jns
mov
and
cli
sti
loope
mov
clc
loopne
inc
adc
popf
stc
in
push
ficoms
adc
cmpsb
call
scas
xchg
pop
push
adc
add
xchg
mov
adc
xchg
xchg
adc
outsl
jge
sbb
rcrl
xchg
cli
iret
fistpll
sbb
push
add
cmpsl
jl
leave
add
jns
mov
stos
mov
jo
xchg
mov
xor
push
push
sbb
in
pop
inc
add
jmp
lret
call
or
mov
mov
and
push
insl
das
and
mov
inc
xor
idivl
lock
add
outsb
lahf
sahf
rorl
aaa
mov
test
insb
cs
push
push
jns
addr16
mov
bound
jb
test
mov
or
repz
adc
dec
pop
and
sub
mov
es
jno
inc
out
clc
adc
hlt
mov
out
outsb
xlat
and
push
push
jle
andl
loopne
xchg
sarl
sti
fidivrs
stc
mov
add
pop
jmp
mov
in
adc
lret
jp
mov
bound
fs
rclb
fistl
pop
leave
pop
mov
lret
dec
aas
stc
int3
loope
and
das
mov
sub
and
push
and
xchg
repz
lock
enter
fs
inc
popa
insb
test
and
jnp
xchg
pop
sub
or
push
sbb
ret
repnz
push
xor
outsb
dec
stos
test
stc
loop
sbb
or
icebp
mov
mov
mov
sub
loopne
stos
jo
push
aad
fsts
dec
push
test
mov
dec
aaa
lds
call
andb
int
das
bound
cmp
or
inc
or
cmp
push
push
inc
std
imul
mov
or
pop
loope
sub
xor
push
adc
andl
push
or
cmp
lea
mov
fmul
movsl
xor
cmpsl
jbe
stc
fwait
push
dec
add
jmp
fwait
push
aam
cmpsb
jbe
pop
and
imul
mov
enter
das
mov
les
fmulp
faddp
popf
imul
in
jecxz
mov
leave
cli
add
dec
adc
xlat
test
and
jecxz
shlb
dec
aam
pop
mov
inc
add
in
mov
js
push
mov
mov
mov
xor
adc
xor
test
xchg
gs
push
jne
int3
nop
mov
outsb
cli
movsb
add
cmpl
jb
inc
push
jp
pop
ss
push
or
das
jne
sub
shrl
arpl
jge
xor
ljmp
and
out
sbb
mov
pop
mov
dec
adc
sub
xor
rol
jmp
dec
ret
dec
dec
push
sbb
popa
add
pop
das
push
mov
add
and
icebp
mov
fs
mov
les
dec
aaa
sbb
icebp
ror
loope
dec
gs
scas
outsb
stc
xchg
pop
push
pop
mov
dec
or
pusha
sbb
mov
cmp
cmc
and
add
push
sbb
inc
push
aad
call
cli
xchg
call
inc
negl
dec
pop
adc
xorb
jp
push
push
jecxz
mov
shlb
mov
movsl
mov
xchg
cmp
out
fldl
push
pop
jp
push
lods
push
into
popl
push
imul
adc
xor
movsl
les
popf
orb
in
mov
jb
js
in
in
orl
repnz
adc
pop
cs
xchg
movsl
js
pushf
dec
mov
orl
out
push
jne
mov
push
add
inc
movsl
int3
jbe
ljmp
pop
mov
adc
pop
orb
int
jge
mov
cmp
ljmp
imul
mov
mov
sahf
push
jecxz
mov
cwtl
push
and
sbb
das
dec
pop
cwtl
jecxz
lds
inc
jnp
xchg
jle
loope
xor
leave
sub
loopne
mov
mov
inc
jns
nop
in
fnstenv
test
in
xor
xlat
sarl
daa
lods
sub
mov
movsb
push
mov
pop
inc
pop
xchg
pop
sbb
push
add
outsl
sti
cmp
and
push
ret
and
xchg
call
jge
fwait
adc
scas
shlb
jecxz
jp
dec
or
lods
jo
push
jmp
cmpsl
add
mov
out
popa
outsb
cwtl
test
push
outsb
shll
xor
dec
push
add
jl
clc
daa
lret
sub
mov
sbb
mov
inc
stos
aam
push
mov
sbb
xchg
mov
push
cmp
sub
mov
fdivl
test
dec
jmp
loope
rcl
sti
icebp
xor
repz
lahf
loop
push
add
je
std
xchg
adc
jo
add
add
iret
adc
mov
mov
xchg
popf
ljmp
sub
push
mov
sbb
mov
dec
lods
es
notb
xchg
cs
mov
add
std
into
mov
or
dec
jno
in
outsb
js
nop
cmp
fstl
mov
push
xchg
loopne
mov
popf
mov
mov
xlat
out
leave
test
dec
call
adc
fucomp
dec
push
lea
ret
ljmp
xor
pop
jns
push
adc
incb
cwtl
pushf
lock
jl
dec
subb
adc
imul
scas
cli
inc
dec
pop
cmpl
in
jb
icebp
sub
lds
adc
dec
add
jg
es
fs
cmp
mov
or
loop
insb
adc
imul
lcall
pusha
sbb
stos
xchg
scas
mov
les
in
adc
out
xlat
cli
inc
pop
gs
and
les
xchg
jecxz
inc
xchg
lret
mov
and
ljmp
rcll
xchg
aam
inc
scas
mov
push
pop
push
cmp
inc
iret
cmpsb
addr16
or
lock
in
sub
rcll
test
pop
fistpl
adc
repnz
push
mov
jl
lahf
dec
mov
call
mov
push
xor
inc
cmovo
jl
or
cs
jmp
mov
ficomps
mov
cli
mov
inc
mov
xchg
ds
clc
jmp
xchg
gs
xchg
cmpsl
lock
mov
adc
push
je
popf
sahf
mov
dec
pop
pop
shlb
push
mov
repnz
lea
cmp
sbbb
test
lods
test
jp
push
out
mov
dec
mov
repnz
repnz
adc
pusha
movsl
in
mov
mov
inc
dec
enter
stos
fcmovu
add
lret
sbb
dec
cld
sub
out
test
or
andb
ret
ljmp
out
add
xchg
stos
popa
or
mov
jge
loope
outsb
data16
popa
inc
pop
fsubs
fst
adcb
pop
lea
mov
push
mull
icebp
xchg
ds
sub
jge
jg
in
shll
cld
enter
xchg
popa
sub
jne
js
adc
add
jge
pop
stos
fwait
jno
cs
aam
in
cmp
mov
xlat
add
popf
xchg
adc
mov
dec
enter
sub
mov
and
jg
sub
or
divl
inc
addr16
and
fidivl
divb
mov
sbb
xchg
jle
loope
xchg
cmp
pusha
stos
das
lods
sarb
ja
jge
call
repnz
js
test
xor
out
aaa
adc
popf
arpl
sub
sbb
hlt
aam
adc
hlt
stc
idivl
popf
shrl
pop
stos
add
movsl
in
decb
fs
ret
jo
outsl
mov
and
sub
popf
or
stos
popl
out
bound
and
aaa
dec
ret
mov
out
ja
loopne
fsubl
cli
sbb
mov
sti
mov
lods
test
hlt
or
mov
loop
add
out
mov
ret
and
int3
imul
mov
js
xor
mov
jnp
bound
mov
movb
fadds
dec
mov
mov
into
out
or
adc
mov
loope
insb
sahf
fnstenv
cmpsb
xor
fcoml
test
add
fisttpl
xor
clc
jl
jne
sbb
lea
cwtl
xchg
arpl
jge
lods
loop
cmp
gs
and
shlb
push
dec
aad
cmp
es
push
xchg
push
mov
int3
or
mov
lcall
in
xor
cmp
rcl
loop
clc
fnsave
adc
xor
pop
mov
cmp
adc
fwait
adc
push
push
pop
jecxz
mov
mov
pusha
add
xchg
mov
popa
jg
push
xchg
mov
pop
xlat
push
mov
repz
xor
hlt
hlt
add
mov
mov
stc
mov
out
jae
cli
dec
pop
subb
into
addr16
inc
loope
jb
inc
lods
jmp
dec
cmpsb
jae
mov
pop
inc
mov
repz
aam
in
ret
imul
mov
xchg
loopne
invd
add
repz
js
and
mov
and
xchg
sbb
scas
insb
clc
movl
scas
testl
cli
clc
pop
insb
jg
cwtl
sub
mov
xchg
or
fidivrs
out
push
aaa
int
push
xor
popa
inc
pop
and
xor
stc
cmp
xor
push
and
add
sbb
arpl
pop
xchg
mov
sub
push
rclb
and
push
mov
dec
fsubl
mov
outsl
cwtl
push
out
mov
fldenv
jl
push
mov
sbb
add
imul
xchg
out
out
aad
xchg
call
cmp
fwait
je
mov
lahf
adc
push
push
ret
mov
lret
stc
insb
ja
filds
adc
mov
sbb
sbb
test
and
inc
jecxz
loopne
xchg
adc
sbb
add
das
outsl
adc
lcall
rcr
mov
lret
or
movsl
lock
mov
add
add
and
xchg
lcall
pop
lret
stos
sahf
cli
inc
jp
xchg
ja
push
jo
shlb
add
push
xor
xchg
shlb
dec
mov
jmp
insb
sahf
mov
fiadds
call
fistps
icebp
test
sub
sub
and
inc
mov
popa
or
es
out
mov
inc
jp
test
adc
mov
sub
mov
push
jmp
ss
pop
pusha
pusha
in
pop
jne
mov
jmp
std
mov
or
mov
sbb
mov
lcall
cmp
rcrl
movsb
scas
mov
add
jb
lods
sti
push
or
cmpsb
xlat
mov
notb
push
fcmovne
mov
js
xlat
lock
lcall
std
outsb
dec
or
movsl
mov
dec
xchg
add
jb
mov
out
jmp
mov
ret
negb
pop
sbbl
fwait
add
pop
lret
sahf
pop
xor
jnp
pop
test
jno
leave
pop
inc
pushf
mov
sahf
adc
out
lret
test
or
popf
cld
loop
mov
xor
pop
bound
mov
lea
js
outsl
dec
pop
push
out
push
fwait
sbb
mov
cli
out
mov
jge
adc
sbb
jmp
jb
push
sub
mov
inc
sbb
sub
scas
push
notb
add
test
adc
ret
pop
add
sub
adc
jmp
sahf
sbb
push
pop
pop
sub
push
push
pusha
sbb
inc
fsubs
shlb
dec
sub
mov
push
cmp
mov
cmp
xor
mov
mov
in
cmp
imul
fnstsw
sub
inc
or
xor
or
test
imul
adc
out
cmp
out
out
test
mov
fnstcw
ret
outsb
sub
add
and
mov
fistl
inc
daa
dec
scas
jne
loope
aam
mov
mov
push
ja
stc
popf
xor
enter
pop
mov
fs
and
mov
enter
popa
out
or
xor
mov
and
mov
mov
mov
pushf
jo
xchg
lods
filds
sub
mov
sub
aam
nop
xchg
sub
pop
pushf
movsb
push
test
ret
push
dec
xlat
or
mov
and
loopne
mov
sbb
sub
adc
sub
int
in
dec
cld
mov
aam
pop
xor
fstps
pop
sti
jb
in
daa
mov
mov
call
shrb
adc
push
push
pushf
pop
or
pusha
xchg
mov
mov
mov
jnp
jns
into
cmp
dec
mov
inc
mov
push
xchg
xor
sbb
mov
cli
out
mov
xor
xchg
push
mov
lods
pop
inc
mov
inc
cmp
or
mov
or
or
loope
push
xor
imull
jb
fimull
xchg
adc
jbe
xchg
xchg
add
adc
ljmp
ljmp
sub
fucomi
and
pop
loopne
mov
adc
divl
fmull
mov
dec
mov
cli
notb
push
daa
sti
mov
pop
adc
ljmp
xor
aas
or
stc
loopne
jne
in
lea
imul
mov
and
pop
shll
adc
xor
out
mov
gs
xlat
mov
sbb
add
jae
sbb
adc
popa
or
rcrl
les
jp
icebp
adcl
sub
fdivr
and
dec
push
or
inc
call
repnz
sbb
mov
jmp
add
sarb
popf
pop
mov
or
int
adc
push
inc
adcl
and
popf
add
sub
jmp
xchg
sahf
inc
lock
jne
mov
test
sbb
cmp
aam
int3
add
inc
mov
jl
adc
pushf
xchg
mov
stos
inc
adc
data16
nop
shll
out
shll
out
inc
cmp
push
mov
dec
out
jnp
outsl
shlb
fists
dec
sub
mov
loope
mov
mov
sub
sarb
push
test
stos
enter
push
clc
testb
hlt
fs
inc
int
add
lods
adc
mov
add
movl
xor
add
in
fwait
inc
fwait
mov
inc
ljmp
xlat
mov
adc
adc
mov
xchg
cmp
sub
pop
out
hlt
loope
sti
lcall
les
push
dec
jo
sub
dec
cmpsl
pop
lret
push
cltd
iret
jns
les
or
aam
jl
ss
out
je
and
lret
cmp
push
mov
push
adc
loop
mov
adc
lahf
dec
fcmovnu
mov
add
dec
sbb
adc
ja
insl
gs
xor
lea
sub
or
test
push
push
and
mov
je
cltd
xchg
popa
xorb
cs
sahf
or
inc
insb
push
dec
add
mov
rcl
and
daa
aaa
xchg
test
fmuls
shr
insb
leave
cmp
sbb
cmp
ss
je
push
xchg
imul
sbb
int3
outsb
fsubrs
iret
jo
arpl
or
lcall
and
out
push
sti
or
jnp
ds
and
int3
les
enter
stc
sub
dec
into
or
ret
push
jg
pushf
jo
out
xchg
cltd
into
imul
leave
xor
mov
je
repz
nop
sahf
lock
aad
cmp
lock
mov
mov
xor
push
loope
fmull
or
shl
pop
adc
enter
xor
sahf
jg
addr16
sub
fnstenv
mov
imul
mov
int3
xchg
out
mov
fisttpl
dec
cmp
test
nop
mov
adc
inc
jge
cmp
imul
shrb
jno
rolb
cmp
scas
xchg
xor
icebp
mov
mov
les
lcall
push
inc
punpckhwd
pop
push
clc
xor
pop
addl
ljmp
lret
lock
inc
test
out
mov
cmp
mov
rcrl
dec
and
aas
pop
movsb
pop
adc
aaa
pop
jae
xor
ds
mov
cmpsb
jle
cwtl
lods
sub
inc
add
xlat
dec
jnp
mov
and
cmp
repnz
pop
or
bound
push
lret
fucomip
mov
jl
mov
adc
and
ljmp
or
cs
and
push
mov
dec
ss
into
iret
inc
clc
cli
cmp
fnsave
ds
push
push
mov
push
inc
dec
mov
xchg
dec
push
scas
sub
std
bound
mov
mov
dec
or
ja
out
pusha
pop
sbb
jl
mov
inc
mov
shrl
lods
cwtl
add
imul
pop
test
jle
mov
ljmp
les
mov
add
movl
ds
out
or
std
xor
loop
dec
jle
xor
cmp
pushf
xchg
lods
insb
jmp
popf
movsb
sbb
pop
out
mov
loop
sub
call
call
pop
inc
or
cmp
in
test
popa
xchg
cmp
pop
xchg
adc
hlt
fs
into
out
notb
int
sbb
mov
dec
jnp
or
and
sbb
inc
add
in
mov
or
andb
sbb
fidivl
mov
rdpmc
lock
call
pop
filds
cmpsl
adc
cld
test
xchg
clc
outsl
ljmp
cmovnp
sti
push
jle
mull
sub
xchg
jl
xchg
jle
es
ret
xor
imull
imul
std
les
inc
jno
adc
pop
push
push
push
imul
adc
loope
jg
das
jg
lock
xlat
pop
jecxz
repz
and
jg
sub
movsl
rol
inc
push
adc
cld
push
aas
call
or
pusha
dec
inc
out
mov
ds
sub
repnz
pop
dec
ret
xor
jo
inc
out
cmp
mov
jl
rorb
lret
out
jmp
xchg
push
jge
in
jb
xor
mov
mov
jne
sub
loop,pn
js
cltd
cli
into
jle
sub
cmp
dec
push
in
push
stos
insb
sti
and
leave
stc
jne
shrb
sbb
sbb
inc
in
lea
sbb
mov
mov
rorb
in
mov
jno
mov
adc
and
in
fwait
and
jl
xlat
inc
mov
cltd
pop
cli
pop
push
xchg
lea
sarl
and
addr16
push
imul
add
stos
es
pop
das
jmp
int
ret
outsb
sbbl
mov
mov
xchg
insb
add
divb
jmp
inc
push
push
fs
mov
gs
xchg
loope
out
fmuls
or
in
dec
dec
adc
adc
add
repz
shrl
mov
testb
jle
leave
cltd
push
xlat
or
mov
sub
mov
ss
dec
stc
mov
sbb
xor
cmpsl
jge
imul
xlat
out
mov
lcall
xchg
or
fwait
mov
roll
push
lods
es
repnz
cmpsl
fsubl
jmp
gs
cltd
sti
inc
pop
test
dec
push
hlt
push
icebp
data16
imul
loop
es
dec
xchg
mov
mov
ret
jge
pop
arpl
fnsave
lret
or
inc
adc
push
lods
testl
fwait
enter
sbb
arpl
xor
push
cmpsb
push
pushf
test
jno
and
mov
gs
insl
ret
ljmp
notb
imul
fs
pop
mov
or
out
dec
jne
mov
std
ret
aam
mov
lahf
and
scas
adc
mov
push
out
int3
dec
aas
cwtl
testl
dec
mov
ja
cmpsb
mov
mov
movsb
mov
xor
push
or
xchg
scas
loope
sahf
popf
mov
mov
rorl
sbb
push
mov
sbb
mov
jg
pop
xadd
fs
cld
in
mov
and
cmp
in
adc
pusha
sarl
dec
lret
or
lcall
inc
add
dec
mov
out
adc
push
ljmp
fldl
lds
push
add
movsb
fnsave
dec
das
call
mov
push
or
outsl
mov
loope
stc
test
push
outsl
scas
push
sbb
or
gs
movsb
sub
pop
js
add
lret
inc
pop
and
flds
adc
inc
xlat
aaa
in
fsubl
enter
rcr
stc
lods
add
pop
add
inc
or
xchg
mov
or
lahf
xor
sbb
mov
roll
ret
push
in
scas
dec
movsb
int3
push
into
mov
adc
in
lret
orb
mov
repz
les
imul
lods
jle
and
nop
fadd
cmp
fldt
jp
xchg
cmp
sbb
pushf
adc
adc
push
push
andb
mov
jg
in
xor
adc
cmpsl
mulps
shll
xchg
in
dec
mov
loopne
xchg
sub
movsb
mov
inc
in
mov
adc
jae
in
insl
pop
int3
ljmp
rclb
mov
int
fildll
dec
push
mov
mov
or
xchg
test
xor
or
and
sub
into
and
dec
ja
xlat
and
add
or
mov
loopne
and
adc
sbb
mov
cmp
and
outsb
or
mov
pusha
js
repz
cmpsl
mov
add
fbstp
clc
in
jle
imul
dec
leave
sahf
dec
mov
scas
or
xchg
ss
sahf
push
push
lret
xor
sub
cs
std
scas
fs
inc
add
out
dec
test
daa
jb
pop
dec
ja
xlat
xchg
xchg
addr16
icebp
adc
addr16
outsl
xor
pop
loop
lret
cmp
aad
adc
pushf
sub
adc
pop
mov
xchg
jg
and
jp
ja
xor
sahf
pop
shlb
sbb
xchg
sbb
cmp
in
jecxz
addr16
pop
push
je
dec
mov
mov
ret
adcb
stos
in
ds
test
test
mov
rcrl
call
sub
and
mov
sub
add
arpl
jp
adc
addr16
pop
jl
bsf
add
subb
loope
cwtd
sti
bound
imul
and
mov
push
rcll
fcoms
test
test
subb
pop
vmread
jae
pop
xor
sarb
adc
xor
int
cmp
cmpsb
lcall
test
xlat
mov
scas
add
push
ficomps
jmp
loop
mov
mov
dec
and
lods
add
insl
jb
nop
xor
add
pop
in
mov
int
testl
fmuls
xor
add
hlt
nop
pop
aaa
and
add
das
push
out
imul
xlat
dec
or
into
adc
std
cmp
jmp
jbe
cmp
bswap
sbb
xchg
fistpll
iret
mov
sub
rorb
cmc
and
mov
in
cmp
pop
outsl
mov
std
jge
movsl
mov
js
mov
fisubrs
pop
out
jb
test
popf
cmpsb
xor
push
dec
int
jmp
inc
mov
and
mov
mov
push
sbb
test
aad
std
fisubrs
loop
jmp
adc
dec
sub
push
in
in
icebp
idivb
sbb
mov
lahf
inc
mov
repz
mov
sub
mov
sub
or
lods
pusha
in
jmp
sub
and
lret
add
int
shlb
out
jecxz
fisttpl
mov
addr16
imul
out
cmpsb
add
je
outsl
add
loop
repz
inc
sahf
push
jp
and
cli
hlt
dec
daa
insb
stos
or
xchg
dec
imul
mov
jno
and
lods
mov
mov
xchg
cli
mov
test
sbb
rcrb
sub
scas
lock
iret
jno
or
sbb
aad
cmc
into
imul
ds
cmp
js
scas
int
push
ds
mov
mov
lea
or
fmuls
loope
sub
lahf
sbb
out
pop
into
jle
inc
jecxz
mov
data16
mov
push
dec
es
push
sub
mov
test
pop
scas
cmpsl
or
inc
adc
fistpll
xchg
ror
dec
fcmove
icebp
and
movsb
sti
inc
dec
leave
lahf
or
call
pop
or
mov
dec
scas
mov
push
xchg
fisttpll
jmp
sbb
push
push
inc
repnz
pop
cmp
daa
xchg
fsubl
scas
add
dec
mov
loop
sub
lcall
outsb
daa
loopne
leave
ss
orl
mov
out
repz
mov
fstpt
ljmp
and
mov
inc
out
push
jns
rcr
out
outsl
jmp
push
repnz
cmovg
inc
sbb
dec
cmp
mov
adc
repnz
leave
push
faddl
vpavgw
imul
xor
loopne
cmpsl
pop
mov
loope
xchg
mov
js
imul
mov
aam
xor
aaa
loopne
mov
jg
jecxz
movsb
and
es
addr16
add
inc
and
sub
or
jmp
xchg
lds
filds
outsl
jnp
dec
sbb
dec
lcall
adc
xchg
shll
or
pop
pop
xor
loope
outsb
outsl
lock
xlat
dec
add
jg
mov
mov
sbb
addr16
add
jle
push
div
push
fsubr
push
xlat
jmp
bndstx
push
pop
inc
xchg
andl
xchg
pop
pushf
mov
sub
mov
test
add
pop
mov
outsb
imul
lods
pushf
and
sbb
pushf
sub
aas
rcrb
inc
imul
pop
mov
mov
jnp
cltd
insb
mov
test
mov
imul
lcall
std
es
cmp
test
in
inc
test
jecxz
jbe
mov
ja
bound
cmp
dec
mov
adc
arpl
out
add
adc
ljmp
cmp
out
ret
movsl
bound
lahf
nop
fistps
fnstenv
pushf
out
aam
mov
jle
add
jmp
push
and
sub
add
cmpsl
sbb
outsb
or
sbb
ja
nop
addl
jbe
add
mov
jmp
in
dec
ds
and
aas
push
outsl
es
pop
and
jp
in
push
mov
dec
lahf
mov
jo
lods
minps
mov
xor
shl
lds
test
clc
lcall
sti
movsb
xor
push
popf
cmp
xor
mov
mov
dec
stc
lock
jb
pop
mov
dec
push
xchg
nop
scas
xor
jle
repnz
std
mov
mov
insl
jns
fwait
ret
cmp
in
sub
sarb
xor
pop
pop
stc
lods
subl
xor
hlt
test
add
jmp
add
cltd
pusha
outsl
into
fisubrs
fstl
jno
inc
cmp
cmp
out
and
in
loopne
adc
sbb
out
or
out
cmpsl
lret
jb
or
cmpsb
xor
clc
loop
jns
xchg
das
shrb
popa
jo
mov
outsl
and
lret
jp
cwtl
arpl
mov
and
dec
jns
cmp
mov
fcoms
push
mov
lret
jb
aad
mov
add
into
jno
add
aam
lods
add
or
fisubrs
pop
cmp
cltd
inc
fsts
push
stos
pop
mov
jge
insb
shrl
sub
call
clc
sbb
xor
mov
and
inc
outsl
bound
pop
call
aas
stos
insb
in
fwait
pop
jbe
aam
push
cmc
mov
push
xchg
mov
fisubl
push
push
repz
sub
mov
pop
scas
jne
gs
insl
xchg
test
lods
jl
mov
or
or
ljmp
arpl
les
cmp
shlb
loopne
dec
pop
dec
sub
ja
shll
sarl
push
test
xorl
pusha
xor
inc
idivb
fwait
cwtl
cmpsb
adc
pop
scas
xor
cmc
jle
mov
repnz
leave
bnd
mov
jnp
pop
arpl
lock
fs
lds
test
mov
adc
cmc
ljmp
sahf
add
ds
mov
fwait
jo
jge
insl
arpl
cmp
sub
xor
push
or
jmp
mov
cli
mov
adc
mov
test
imul
std
aad
gs
mov
in
jnp
fsqrt
dec
movsl
in
xor
sub
test
dec
jecxz
jae
in
push
mov
enter
mov
dec
orl
inc
lds
negl
lahf
scas
cmp
ret
das
jp
sbb
shlb
imul
cmpl
movsb
adc
int
dec
sub
lods
iret
arpl
shlb
out
int
addr16
pop
xor
fnsave
loopne
mov
mov
in
add
xchg
pop
insb
mov
in
fucom
xlat
lods
in
lcall
mov
icebp
mov
adc
push
inc
mov
push
or
dec
js
mov
imul
sub
and
repz
jl
les
mov
lea
es
js
cmc
jb
lret
pop
jmp
dec
mov
or
fmul
aam
int3
lcall
inc
sbb
xor
stos
jg
into
repz
fidivrs
dec
mov
xor
inc
out
in
fildl
scas
popa
cmp
test
mov
fwait
stos
push
pop
in
mov
push
mov
push
int3
xchg
mov
insl
pop
sub
xor
mov
lret
rol
pop
ds
out
cmp
insl
fwait
call
fwait
push
fdivs
inc
cmp
push
inc
sbb
fs
imulb
cmpsb
into
rolb
iret
fwait
mov
nop
insb
push
xchg
lcall
push
fwait
lock
fistl
leave
into
cltd
repz
repz
fst
sbbl
jns
add
ja
inc
pop
xor
fldcw
cmp
les
paddb
ds
xor
lea
adc
cld
mov
in
sbb
das
int3
and
lds
ja
xorb
push
fadd
adc
push
and
inc
mov
lret
in
push
lcall
in
push
dec
cmp
cmpsb
mov
call
or
jo
cld
pop
lds
pop
jbe
pop
scas
mov
dec
repz
les
repz
fwait
dec
or
inc
rol
xor
mov
pop
pop
movsb
fwait
sbb
mov
mov
fs
stc
jle
mov
inc
pushl
in
sti
or
test
jp
mov
mov
jl
rcrl
sbb
shr
cmp
in
imul
arpl
push
mov
icebp
pop
rol
xchg
outsb
cmp
inc
fs
cmpsl
push
or
stos
jo
mov
jnp
mov
pushf
stos
out
push
mov
mov
and
mov
mov
cmp
lock
xchg
and
sbb
or
stos
inc
mov
mov
inc
arpl
addr16
fwait
shll
imul
les
xchg
pop
mull
xor
push
xor
ja
mov
push
loopne
inc
add
push
rcrb
xchg
or
and
out
xchg
outsb
push
es
aam
or
mov
cmpsb
push
jp
push
push
lret
mov
xlat
iret
sbb
jg
fsubl
xchg
stos
push
leave
arpl
enter
and
xor
femms
pop
mov
shll
jb
add
xchg
or
mov
xchg
add
lea
xor
jae
sub
and
jp
sar
outsb
rclb
cmp
sbb
rcrb
inc
or
call
push
sbb
mov
adc
pusha
mov
dec
sar
xchg
sub
xchg
push
jecxz
enter
cmp
jnp
clc
je
xor
mov
xor
movq
int3
aad
sbb
inc
shll
jbe
xor
leave
mov
jns
stos
lahf
mov
mov
mull
outsb
sub
in
jle
icebp
xor
outsb
idivl
push
sbb
dec
fstpl
lods
syscall
or
je
call
cltd
pop
and
pushf
mov
push
scas
sti
in
pop
mov
sti
jl
sbb
push
insl
sub
cltd
fisttpl
adc
gs
cmp
push
jne
scas
adc
test
aaa
cltd
mov
fsubl
rolb
ja
bound
mov
push
jns
stos
je
cmpsb
pop
jae
or
out
clc
out
std
and
in
sbb
xor
icebp
cwtl
icebp
mov
mov
jno
and
pop
pop
lds
pop
sub
insl
imul
orl
hlt
xor
out
cld
add
cltd
pop
popa
dec
loope
cmp
stos
lea
in
fists
iret
dec
push
pop
adc
into
iret
adc
loop
xor
dec
mov
int
lret
orl
or
leave
js
rcl
add
scas
int
popa
pop
lcallw
pop
imul
mov
fistpll
fbld
jo
mov
aaa
sbb
mov
or
fisttpl
sub
mov
push
repnz
xor
mov
jne
cmp
movsb
sbb
xlat
clc
xchg
xchg
inc
mov
out
or
pop
mov
adc
shrl
pop
dec
add
imul
scas
daa
push
aaa
mov
enter
mov
je
push
int
sub
lods
or
test
xor
pop
jp
mov
aas
cmpsl
sbb
jb
push
rcr
cmp
push
and
sub
out
jo
dec
ja
jecxz
sbb
lods
lock
sub
sub
dec
and
cmpsl
subb
mov
fs
pop
jl
insb
lcall
mov
out
addr16
aaa
int
insl
in
mov
orl
xchg
sbb
add
dec
inc
iret
push
dec
jl
add
loop
or
out
ret
push
add
es
and
or
pop
mov
xor
mov
sub
xor
dec
push
les
jp
nop
mov
pop
mov
stos
jns
inc
fisubrs
jo
sar
xchg
mov
insb
lcall
xorb
cmc
test
das
mov
pop
mov
push
sbb
pop
adc
enter
icebp
dec
repz
push
ret
outsl
pop
pop
testb
ret
push
dec
sarb
jno
and
dec
sbb
jge
jmp
shl
fldenv
enter
and
outsb
sbb
inc
push
xor
hlt
inc
les
cmp
dec
outsl
mov
mov
xchg
nop
mov
sbb
sub
xchg
sub
jecxz
pop
adc
stc
push
iret
mul
xchg
xor
call
stos
clc
lods
movsl
out
add
jno
lock
and
mov
stc
dec
out
dec
inc
dec
int3
jl
jecxz
ljmp
sbbb
icebp
sarb
adc
pop
push
inc
and
js
jns
cmp
ljmp
cmp
xor
fcoml
add
mov
rcrb
cmp
loope
adcl
je
dec
out
xchg
or
lock
repz
arpl
xchg
mov
cltd
js
pop
inc
sbb
sbb
sbb
jle
cmp
xor
mov
out
hlt
shrl
aad
out
leave
lcall
rorl
mov
mov
and
lret
sbb
and
cmp
jl
or
push
add
test
pusha
fisttpl
cmpsl
pop
xor
inc
test
loopne
xor
mov
jbe
xorw
inc
dec
push
inc
xor
jbe
mov
mov
lahf
es
jne
or
cld
shll
sub
les
cli
fisttpll
fsts
mov
jae
out
lahf
std
inc
and
adc
jae
loop
mov
jae
xchg
jecxz
stc
es
jb
sbb
pop
pusha
fildll
fidivrl
out
push
mov
sub
inc
ljmp
mov
test
daa
enter
sbb
dec
pop
inc
adc
or
add
or
fxch
mov
cmpl
jle
jmp
push
adc
insl
mov
cmp
and
repz
les
adc
or
mov
adc
xchg
xchg
nop
ja
popf
loope
mov
or
inc
les
ror
mov
mov
inc
sub
add
cmc
pop
push
add
rcrb
xchg
sbb
stc
je
rclb
push
xor
shrl
dec
lea
mov
xor
xchg
fwait
loop
add
pop
jns
shlb
pop
sub
pusha
xlat
mov
sbb
call
lods
shrl
lods
cmpsb
out
mov
sub
stc
ds
daa
and
mov
inc
jo
xchg
cmp
sbb
outsb
add
push
cmp
xchg
out
push
mov
add
lock
cmpsb
push
xchg
lods
sub
cmc
pop
xchg
popf
popf
mov
hlt
testl
jne
push
add
sbb
or
loop
in
xchg
setp
pop
gs
sti
shlb
cmp
or
push
add
pop
inc
lods
mov
add
fisubrs
adc
jbe
rcr
push
push
and
ret
imul
push
cmpsb
xchg
aad
adc
hlt
jb
push
daa
push
sti
mov
imul
sbbb
sbb
sti
add
and
in
mov
fcoms
sub
cmpsb
rolb
loope
cmpsl
std
sub
cmc
mov
adc
xor
insb
push
movsb
inc
ret
add
ret
mov
xlat
in
dec
dec
mov
fisubl
imul
xlat
cs
subl
pop
pop
cmp
in
loopne
inc
mov
dec
cld
repnz
cmp
sbb
inc
jmp
push
and
lods
mov
hlt
pop
fs
push
mov
lods
lret
inc
pop
mov
lods
clc
pusha
dec
fisubrl
leave
or
insl
xor
test
js
movsl
mov
jg
sbb
orl
ja
stos
cld
push
push
pop
adc
pop
sub
pushf
fstps
sbb
jmp
inc
sbb
add
insb
pop
fcomip
subl
push
popa
and
aam
sbb
outsl
int3
sbb
mov
mov
cld
cmpsl
sbb
outsl
dec
push
or
fs
sub
xchg
lahf
or
test
inc
xchg
add
stc
cmpl
mov
mov
pushl
sbb
divl
and
add
pusha
enter
sar
sbb
mov
mov
and
jp
fsubs
jae
adc
mov
adc
repz
xor
push
popa
xlat
imul
inc
ret
mov
push
sarl
dec
mov
mov
enter
insl
pop
pop
stc
js
jge
mov
mov
packssdw
repnz
xlat
lahf
flds
push
pop
imul
loop
imul
test
xchg
aas
popf
adc
addr16
jne
mov
testb
dec
jle
ss
inc
ret
mov
or
adc
lods
mov
sarl
jecxz
adc
pop
pop
pop
xor
pop
cmp
cmpsb
cld
jno
adcb
mov
fcoml
cwtl
iret
out
ret
stos
lods
lret
arpl
cmp
fimuls
pop
mov
sbb
jl
mov
push
test
adc
inc
fs
lahf
idivb
inc
cwtl
pushf
mov
add
das
push
mov
data16
nop
das
loope
xchg
or
xchg
pop
dec
int
decl
push
fsubr
adc
fldcw
loop
cmp
inc
sub
jecxz
or
test
jbe
adc
fdivrl
stos
cmp
mov
jp
pop
das
sbb
out
out
sub
pop
faddl
mov
push
xchg
push
jge
ret
stos
repnz
and
cmp
mov
cs
mov
add
sbb
mov
decl
ret
add
xor
xchg
xchg
leave
and
pop
std
add
std
ror
test
dec
or
sub
daa
jne
cmp
xchg
shlb
lock
test
insl
xor
mov
add
and
lds
pushf
ret
sub
mov
lret
loop
jl
push
sbb
pop
cmp
cmc
push
adc
mov
mov
jbe
imull
ja
lods
jl
in
jb
rorl
fwait
rep
xor
pop
xchg
push
sbb
imul
jecxz
lea
mov
jle
dec
mov
out
xchg
bound
leave
add
sti
les
cmpsb
add
loope
fisubl
mov
cmp
push
xor
mov
ret
mov
hlt
xor
cmp
inc
sub
hlt
sbb
and
fwait
mov
ljmp
pusha
loope
mov
popf
dec
subb
cmpsb
mov
sbb
mov
stos
mov
test
sbb
sub
int
clc
adc
pop
pushf
icebp
faddl
mov
pop
add
jle
push
lcall
jbe
rcrb
je
pop
adc
or
dec
inc
or
inc
cmc
push
std
jnp
jecxz
add
movsb
xchg
loop
ja
mov
pop
scas
idiv
pop
in
pop
into
mov
fstpl
test
in
fidivs
sbb
testl
imul
fwait
jle
cmpsl
sarb
add
leave
xchg
and
mov
pop
pop
aad
negl
lea
std
lock
enter
es
or
decl
mov
jge
loop
xchg
fldenv
sub
pop
add
in
dec
icebp
outsb
pop
sbb
jns
fcmovnb
jmp
int
bound
sub
pop
aad
xchg
or
sbbl
lret
or
icebp
icebp
xchg
xchg
shlb
lret
cmpsl
ret
inc
push
orb
aas
in
sbb
cmp
adc
cld
clc
mov
subl
xchg
xchg
xlat
xlat
adc
or
loop
aas
or
in
int
sbb
call
leave
jne
fcmovnbe
in
cltd
jno
cmp
inc
inc
nop
cmp
psubb
arpl
inc
inc
push
mov
mov
xchg
lods
adc
add
pop
push
xor
and
push
mov
cli
cld
jecxz
gs
and
int3
cmpsl
clc
mov
imul
adcl
lahf
xchg
mov
movsl
cmp
negw
dec
push
adc
and
scas
mov
mov
mov
mov
push
lods
ret
pushf
xchg
jl
fstps
adc
push
mov
mov
orb
push
add
daa
cmp
clc
sbb
push
sub
test
fsubl
and
test
repz
aad
xor
ds
into
iret
rclb
shl
popa
cli
jle
xor
cltd
aaa
lret
pop
push
std
xor
mov
ret
or
cs
sbb
pop
nop
fwait
mov
fisubs
xchg
mov
mov
icebp
pop
test
sti
movsl
lcall
insl
and
sbb
inc
lret
fcmovbe
or
push
aam
icebp
arpl
or
jbe
inc
dec
inc
rcl
push
aaa
call
mov
into
adc
loope
out
mov
int3
xchg
jg
pop
test
pop
xchg
xchg
mov
rcrb
movsl
lds
xor
insb
cwtl
push
iret
add
pop
pop
or
jp
insl
mov
pop
scas
push
fisubrl
and
pop
call
add
js
arpl
and
mov
jo
leave
scas
cmp
or
cmpsb
inc
std
fdivrp
loopne
pop
je
mov
add
mov
fstpt
pop
push
js
cmpsl
and
movsl
xor
scas
xchg
faddl
addr16
fs
pusha
roll
dec
fcom
repnz
jno
cmpsl
mov
je
shrl
mov
mov
arpl
cltd
out
add
jecxz
lcall
jle
push
jle
push
cmp
or
or
rolb
xchg
dec
sahf
repz
mov
outsl
push
jle
adc
mov
mov
adc
out
pop
dec
pop
mov
xor
lret
xchg
push
in
sbb
outsb
loopne
mov
enter
ds
cmp
stos
push
xor
fiadds
dec
iret
psraw
imul
mov
pop
xor
jns
pop
cmp
iret
jp
popf
icebp
nop
sub
and
xchg
inc
popf
nop
mov
or
sbb
shrl
xchg
pop
aas
mov
pop
add
xchg
pop
arpl
mov
sbb
xor
add
fdivrl
rcrl
xchg
adc
mov
fistps
cmp
aas
scas
sbb
jbe
push
dec
push
dec
jg
and
cmp
pusha
xchg
cmp
fisubl
push
loopne
lcall
inc
or
sarb
sub
int3
mov
pusha
pop
sti
push
xchg
stc
movl
outsl
call
insb
jb
popa
notl
lods
adc
sbb
add
into
test
pushf
sar
mov
mov
ds
jae
pop
cltd
mov
xlat
fwait
pop
push
pop
rorb
push
jae
fcmovbe
pushf
xchg
push
xor
xchg
or
popa
jns
adc
bound
lahf
push
out
xchg
xorb
cltd
cmpsl
je
aas
mov
jl
fwait
daa
sub
or
pop
mov
loope
jo
push
cwtl
add
mov
outsb
cmp
fwait
lods
pop
or
int
imul
xor
ljmp
sbb
imul
mov
cmp
in
pop
dec
inc
ss
in
pop
fwait
addr16
imul
idivl
inc
stos
scas
jecxz
xchg
sbb
pop
out
gs
mov
sub
ficoml
add
mov
in
les
push
scas
jb
orl
jb
dec
inc
and
mov
lods
and
fs
in
enter
pop
push
add
pop
loop
fidivl
daa
push
push
adc
imul
sbb
pop
jle
scas
hlt
pop
mov
sbb
pop
inc
jae
lods
inc
or
mov
pop
mov
shlb
and
hlt
lcall
fiadds
and
inc
lock
psubusw
adc
cmp
add
stos
movsl
or
mov
ret
and
pop
fsubrl
pop
aaa
mov
inc
or
xchg
rcrb
in
xchg
sub
mov
je
ja
sarl
roll
adc
xchg
pop
pusha
cmp
arpl
jb
xor
in
fcomps
adc
sbb
inc
cmpsb
and
fsubl
addl
shll
jecxz
inc
aas
rol
scas
out
dec
jmp
stos
out
add
sti
or
mov
inc
sbb
ljmp
cmpl
pop
xlat
ds
movsb
or
push
inc
mov
sbb
mov
and
inc
add
out
arpl
rcr
call
lea
rep
out
mov
push
push
mov
xor
repz
adc
fildll
and
out
dec
ljmp
stc
fucom
inc
push
out
jmp
idivl
xor
pop
and
push
mov
sbb
sti
mov
pop
and
adcl
or
mov
js
adc
rcl
pop
out
insb
jne
dec
sub
cwtl
in
xchg
dec
cmp
mov
and
nop
xchg
xor
lahf
xchg
add
test
mov
daa
sub
dec
adc
and
sub
jl
sbb
ljmp
jmp
mov
insb
lock
pop
fisttpll
mov
push
mov
aad
lds
jne
mov
test
daa
popa
mov
pop
or
test
mov
jns
inc
std
inc
dec
cmp
xchg
pop
add
adc
xchg
mov
sarb
stc
repz
in
pop
out
adc
adc
and
mov
aam
movsl
test
push
and
jmp
test
mov
iret
mov
pop
mov
dec
fnsave
jp
je
int3
fs
imul
mov
outsl
leave
fsubl
or
or
mov
xlat
bound
js
lods
lods
sbb
mov
mov
add
inc
mov
cwtl
cmp
int
lods
fcomi
sub
ret
repnz
imul
cs
inc
push
xchg
sub
adc
lods
sti
xor
xlat
inc
mov
lret
xchg
pop
mov
cs
and
fimuls
lods
fcmovnbe
ficompl
xlat
lea
xchg
jmp
push
jb
mov
bound
push
add
pop
push
mov
gs
orl
push
xor
jge
rorl
mov
pop
shlb
insl
rorb
das
mov
add
imulb
ret
push
and
outsb
scas
push
xchg
stos
arpl
sbb
shrb
jg
nop
stos
jnp
jae
sbb
leave
fcmovnb
lret
jo
sbb
scas
das
mov
insb
push
push
mov
xchg
dec
or
add
mov
sub
and
ds
or
mov
adc
sbb
shrd
cmp
fidivrs
inc
xchg
outsb
and
lahf
xchg
mov
test
cmp
in
cld
push
add
dec
cld
addl
jbe
push
out
xor
cld
xchg
lcall
push
jp
sbb
and
ror
push
insb
movsl
popa
cmp
lea
adcb
xor
insb
decl
fwait
cwtl
mov
adc
adc
sarl
sbb
movsb
ljmp
ja
mov
add
cwtl
popa
jecxz
pop
addl
roll
inc
sti
sbb
cli
shll
sahf
add
cmp
insl
les
test
outsb
xchg
cmc
mov
mov
push
and
mov
nop
data16
xchg
xor
std
js
pushl
pushf
loope
xchg
or
add
pop
lock
imul
imul
mov
imul
cmp
loope
je
out
loop
cmp
clc
inc
pushf
enter
insb
lret
lods
cmp
ret
in
cmp
adc
sahf
pop
insb
sub
adc
mov
pop
enter
adc
mov
out
enter
sub
int
test
xor
orb
pop
fisttpl
jne
arpl
cmp
mov
lcall
bound
fsubs
iret
cltd
loope
and
decb
mov
jge
xchg
mov
test
and
pop
push
lods
loope
or
or
dec
cmpsl
hlt
push
in
mov
add
clc
stos
and
fistpl
pop
mov
xor
push
xchg
js
cwtl
pop
adc
xchg
push
sbb
rcr
daa
push
stos
or
push
adc
mov
pop
out
mov
or
adc
mov
sub
inc
lds
cmp
xlat
out
mov
push
and
jnp
xchg
mov
fnsave
push
roll
inc
cmp
push
xchg
out
xorl
and
fs
gs
sti
loopne
adc
je
leave
cmp
sar
sarb
rol
clc
inc
cmp
and
dec
inc
cmp
repnz
sbb
inc
xchg
jecxz
pop
jle
cmc
xor
repz
bound
jo
and
imul
testb
inc
cmc
fdivrs
push
pop
dec
pop
jp
xchg
dec
adc
addr16
outsl
ja
clc
je
push
xchg
push
push
xlat
rclb
push
inc
adc
pop
sbb
sub
pop
pop
fmuls
inc
mov
mov
xor
xchg
push
out
and
movsl
in
mov
popf
int
das
push
test
or
repnz
frstor
stos
into
cmovge
dec
jae
in
mov
ss
push
mov
ret
inc
and
lods
mov
push
fadds
inc
jne
fcos
sbb
clc
mov
incb
jbe
jg
outsl
rcl
lahf
pushf
jae
mov
adc
dec
xchg
dec
inc
dec
inc
sub
push
shll
dec
imul
cld
pop
mov
adc
inc
jmp
adc
mov
out
xchg
jp
icebp
push
cli
mov
mov
add
pushf
lods
fistl
and
pop
test
dec
fldt
test
popa
jle
aam
pop
stos
scas
cli
cli
vpsubusb
inc
pop
adc
sbb
sub
fsubl
stc
pusha
loope
sti
in
xlat
dec
sub
lds
jecxz
mul
js
pushl
pop
imul
mov
push
pop
inc
and
adc
or
lret
ljmp
mov
inc
mov
jbe
call
xor
xchg
lock
bound
sahf
enter
int3
sub
fwait
loopne
xor
jae
pop
dec
mov
dec
inc
lret
add
jp
jns
inc
cmpsl
jge
lds
jbe
pop
mov
or
call
loop
xchg
repnz
arpl
std
in
sub
iret
or
int3
inc
push
hlt
lock
loop
shll
aam
fwait
xor
lods
jmp
adc
push
push
aaa
iret
push
push
and
mov
fidivs
adc
jbe
mov
mov
pop
and
jg
mov
rclb
pop
pop
pusha
sbb
pop
jmp
mov
sahf
jmp
inc
dec
ffreep
fldl
cmp
hlt
sarl
push
std
jbe
loopne
jno
iret
sbb
mov
cmc
jo
std
pushf
and
or
mov
pop
out
popa
or
call
adc
pop
fxch
test
inc
inc
std
dec
adc
stos
ljmp
adc
push
xchg
sub
testl
jle
add
push
imul
push
inc
cs
push
sub
add
xor
ret
icebp
pop
push
repz
cmp
push
aas
xchg
fisttpll
loope
andl
xchg
shlb
push
adc
cmp
mov
cld
mov
mov
sarl
in
aam
fidivs
pop
aad
xchg
es
rcrl
mov
adc
rorl
jle
inc
sub
jnp
jae
movsl
notl
pop
mov
int
data16
movsl
and
ss
cmp
lahf
dec
cli
dec
xor
and
in
or
fcom
jne
mov
rolb
cmp
repnz
loopne
sahf
scas
and
leave
rclb
mov
mov
movsb
dec
xorl
rcrb
fbld
jnp
int
push
and
mov
ljmp
mov
inc
ret
pop
and
stos
sbb
lock
jmp
mov
std
add
addr16
fimull
mov
adc
inc
push
int
pop
mov
xchg
push
fistpl
outsl
idivb
aas
mov
add
push
andl
inc
inc
repnz
sub
xchg
ds
shlb
inc
push
std
mov
mov
aas
add
sbb
in
lret
cmp
repnz
mov
inc
aas
push
or
adc
jle
scas
add
pop
aad
adc
add
in
arpl
fwait
jo
mov
pop
aam
cmpsb
aaa
std
fwait
lcall
sbb
inc
pop
cmc
sub
fcompl
sbb
loope
test
out
imul
inc
push
push
jo
cmp
into
push
ss
sub
mov
jo
out
jbe
ljmp
cmpsl
jae
fistl
sub
aam
add
dec
dec
push
xor
xchg
push
mov
mov
pushf
xchg
cmpsl
movsl
xor
lahf
int3
mov
es
sbb
cmp
insl
mov
adc
enter
jns
xchg
cmp
xor
jnp
fiaddl
fwait
push
and
in
aaa
fmull
pusha
mov
mov
push
insl
mov
scas
imul
in
in
cmp
cmp
xchg
cltd
in
outsl
push
cmp
aam
repnz
adc
pop
mov
int
jecxz
loopne
and
movsb
fmulp
mov
nop
cmp
push
mov
scas
fists
movsl
and
or
lds
ss
fcmovnb
mov
test
mov
add
add
xchg
and
sbb
sar
stos
xor
pop
out
and
or
cmp
fwait
std
insb
jne
das
mov
push
dec
sub
jae
fstpl
xchg
cmc
cmp
pop
lods
daa
arpl
and
daa
fwait
mov
xchg
push
dec
sbb
je
lahf
mov
sahf
jns
inc
pop
sub
dec
and
and
pop
inc
pusha
cmc
insb
fsts
mov
or
xchg
iret
icebp
push
ret
cmpsl
mov
mov
outsl
push
inc
cvtps2pi
cs
fidivrs
add
mov
add
or
sbb
leave
addb
inc
xor
and
inc
push
clc
test
sub
ret
jbe
das
push
out
gs
mov
mov
aam
pop
pop
pop
addl
or
inc
sbb
mov
mov
sbbb
push
int
mov
jns
lret
aaa
push
mov
or
repz
adc
shrl
lock
pop
nop
push
stc
cmp
pop
out
clc
push
add
and
cmpsb
jo
fidivrs
xchg
hlt
shll
ret
test
adc
jae
xor
inc
sub
push
and
and
push
stc
lds
xchg
test
std
mov
cmpsl
xchg
clc
testl
mov
sbb
add
adcb
int3
in
js
lret
mov
jp
out
pop
mov
and
lods
fisubrl
mov
mov
lea
pop
shll
out
fwait
in
sub
mov
fnstcw
ficoml
ljmp
ss
xor
mov
mov
out
nop
ja
sbb
into
pop
fmull
popa
ljmp
dec
pop
cmp
pop
sub
mov
add
clc
jmp
add
lods
call
push
enter
rorb
xchg
loop
nop
je
xchg
cmp
xor
cltd
sbb
or
in
frstor
lods
lret
cmpsl
ljmp
add
dec
xchg
dec
and
mov
daa
imul
or
add
test
jnp
inc
pop
pop
aad
sub
cmp
cmp
and
push
mov
lahf
ja
insb
addr16
and
repnz
sbb
dec
jb
enter
mov
into
fisttps
jecxz
rorl
adc
or
add
adc
cmp
adc
sbb
imul
push
sub
mov
fiaddl
push
cs
int
rcl
lret
add
sti
jbe
jbe
in
lcall
xor
stc
sub
jns
xchg
dec
adc
popa
test
popf
lcall
movsl
arpl
mov
jmp
inc
insl
or
arpl
aam
test
xor
dec
lea
leave
addr16
add
add
mov
dec
inc
dec
push
icebp
insl
and
dec
pop
push
jbe
sub
orl
sub
subl
adc
mov
inc
jno
sub
jmp
mov
icebp
ljmp
adc
dec
mov
inc
add
push
or
xor
inc
mov
cmpsb
mov
loope
inc
mov
pop
push
loope
cs
je
loopne
mov
repnz
cmp
mov
aad
push
cli
jno
repz
jecxz
push
adc
mov
adc
push
push
jp
notl
push
fadds
hlt
mov
clc
outsl
sahf
push
data16
xchg
rcrb
pushf
jmp
push
sub
ss
loopne
xorl
ss
fscale
mov
push
inc
jecxz
incl
enter
loopne
scas
push
cmp
or
aaa
pop
fcoml
out
adc
inc
andl
loope
or
daa
xchg
and
jg
mov
mov
repz
mov
pop
mov
in
stc
ljmp
popf
mov
xchg
dec
das
lcall
aas
and
sbbl
rcl
and
pop
xchg
ja
add
out
bound
int3
and
mov
in
repnz
stc
imul
fidivrl
push
adc
dec
jp
aaa
cmp
cmp
insb
mov
mov
fdivrl
fidivs
test
mov
shll
cmpsb
out
adc
mov
push
enter
xor
mov
in
sbb
or
and
in
mov
mov
out
push
hlt
dec
xor
or
imull
pxor
adc
mov
mov
jo
jne
imul
dec
xor
out
repnz
sbb
stc
and
mov
push
fisubl
push
out
out
xlat
pop
push
mov
cltd
cltd
xchg
fidivrl
xchg
not
fcomip
dec
xchg
cmpsl
shll
and
xor
stos
mov
test
mov
ret
addr16
enter
mov
xchg
xlat
fiadds
sar
mov
fs
pop
xor
bound
repnz
mov
rolb
aam
movsb
mov
in
mov
lock
xchg
or
icebp
sti
sub
push
mov
je
leave
mov
stc
cmp
xor
cltd
sbb
jb
mov
pop
mov
movsb
mov
leave
push
xchg
mov
inc
lret
ret
insb
sub
std
mov
jae
and
dec
jecxz
mov
inc
mov
sub
movsb
mov
push
rcr
pop
jb
lods
mov
adc
jo
fcoml
jae
cmpsb
roll
sbb
jecxz
inc
ret
cli
push
xchg
xchg
mov
int3
sbb
sub
xor
adc
sbb
mov
out
adc
fmuls
mov
push
mov
iret
test
out
jmp
rcrb
test
inc
add
push
mov
xchg
movsl
es
adc
inc
mov
dec
les
jp
aas
sub
mov
fildll
mov
xchg
fwait
jns
arpl
sarl
inc
or
mov
mov
das
pop
mov
in
dec
pop
xor
jno
insl
lret
pop
ret
jns
mov
inc
jb
mov
shl
aaa
mov
jnp
aaa
adc
push
pop
lods
mov
pop
popa
imul
mov
loop
sbb
movsb
aaa
loope
inc
je
lcall
push
or
sbb
or
pop
adc
daa
fsubp
imul
cmpsb
mov
sbb
daa
call
add
dec
jae
scas
loope
add
dec
push
lock
mov
pop
mov
xor
int
enter
movsl
je
inc
and
lcall
xchg
leave
xchg
cmp
cmc
xor
sahf
scas
xchg
cmp
aaa
ret
lods
test
fmull
push
fmul
fdivr
idivb
movsl
in
xchg
xchg
push
es
es
in
add
into
fimuls
pop
xchg
pop
push
adc
ret
imul
mov
clc
mov
xor
pop
roll
sahf
jp
sbb
sti
jecxz
leave
jge
or
data16
mov
or
shll
fisttpl
cmp
inc
outsl
popf
lret
ss
inc
xor
imul
adc
jl
int
dec
add
lods
mov
mov
xchg
fucomp
jnp
mov
and
push
lods
mov
adc
mov
gs
inc
xchg
push
mov
out
pusha
test
adc
xchg
mov
jmp
aas
lea
sbb
and
cwtl
cmp
cli
and
js
push
sti
lahf
mov
mov
jp
dec
jmp
sti
cmp
movsl
xchg
mov
jne
sub
movsb
stos
sub
mov
jnp
negl
xor
jmp
sub
xchg
dec
push
pop
repnz
add
das
jp
lods
enter
pop
out
and
pop
daa
adc
inc
sti
rcrl
inc
mov
lods
xor
out
add
test
xchg
icebp
mov
push
inc
inc
bound
imul
daa
shlb
mov
iret
les
mov
loop
ret
outsl
jp
push
bound
xchg
test
adc
notb
xorb
cmpsl
mov
dec
push
cmp
fstpt
dec
mov
and
inc
or
mov
inc
and
decl
das
imul
scas
mov
sub
mov
jp
or
lret
jns
pop
js
or
fucomi
mov
pusha
test
addr16
shr
cwtl
in
and
cmpsl
xchg
mov
jge
sti
mov
jo
pavgb
in
outsl
adc
or
repz
cmpsb
loopne
inc
dec
inc
and
ret
push
inc
je
xor
or
xor
imul
outsb
xchg
sbb
scas
push
mov
pop
xorl
rol
pop
sub
xchg
insb
enter
inc
scas
sbb
andl
prefetch
pushf
stos
ret
fsub
mov
repz
outsb
mov
push
cmp
mov
out
scas
insb
cmpsb
and
xor
jne
mov
popf
or
xchg
mov
movsb
xchg
int3
xchg
push
ficoml
mov
cli
mov
ja
inc
shll
mov
jns
mov
leave
fistl
into
or
pusha
das
std
cmp
aad
add
scas
lret
test
ja
repz
mov
dec
pop
and
js
cmp
pop
adc
push
jp
in
mov
fwait
inc
pop
xchg
test
lods
cmc
xchg
loopne
shll
jnp
cmp
or
sub
adc
test
loope
sub
pop
aas
dec
mov
sub
and
rclb
sahf
xorps
repz
adc
jle
je
ror
cmp
test
and
sub
in
in
call
sbb
outsl
ljmp
ljmp
stos
bound
push
jae
scas
into
sbb
scas
jle
out
mov
subl
cmpsl
dec
cwtl
push
fdivrl
fwait
mov
jbe
sub
pop
inc
sahf
cltd
mov
out
sahf
out
test
jne
xchg
pop
aas
dec
add
push
adc
cld
inc
xchg
bnd
dec
cmp
xchg
jbe
push
out
xchg
adc
fs
cwtl
jno
repz
xlat
mov
sub
xlat
and
cmp
stos
aad
jae
aad
stos
mov
das
int3
mov
push
scas
jno
sub
inc
add
push
and
mov
jmp
jle
xor
into
mov
lods
push
pop
stos
rcrb
lods
aam
or
push
xchg
cld
mov
or
inc
ficompl
xchg
add
inc
mov
movsb
popf
daa
push
xor
fbstp
mov
imull
inc
loopne
addr16
jp
nop
xor
cmc
pop
and
jns
mov
jecxz
fsubrl
adc
es
adc
jbe
sub
insb
pop
mov
mov
adc
int3
leave
sahf
dec
sub
sarb
push
out
pushf
xchg
mul
cld
mov
cmp
jo
aas
test
dec
sub
enter
lock
mov
scas
ljmp
lahf
and
fs
sbb
rorb
ljmp
dec
mov
jg
xor
lcall
sahf
xor
sbb
push
popa
insl
out
scas
mov
and
outsl
cmc
jb
mov
imul
inc
lahf
push
mov
popa
sbb
push
loope
outsb
mov
lret
or
mov
mov
push
insb
push
jae
xchg
fdivrs
icebp
mov
dec
int
inc
mov
out
xchg
mov
test
div
mov
sti
inc
sub
dec
mov
push
es
in
jl
fwait
int
dec
mov
sub
push
call
push
frstor
mov
inc
xchg
daa
adc
loopne
jecxz
int3
adc
imul
xor
xchg
imul
add
lret
adc
xor
fmull
cmp
jecxz
roll
lock
out
aas
cmpsl
jne
subl
int
or
jecxz
push
addb
outsb
subb
jecxz
incl
adc
and
xchg
loope
or
fldenv
inc
out
insb
or
cmpsb
les
test
dec
cmpsl
and
sub
clc
mov
jle
inc
jb
mov
jne
push
cli
scas
insl
shll
shrl
mov
cmp
lds
hlt
jmp
and
sahf
ljmp
xor
sbb
sub
sbb
shlb
jp
or
mov
dec
in
dec
pop
scas
mov
outsl
int3
xchg
inc
insl
jle
xchg
bound
sbb
lock
xchg
out
leave
jg
inc
xchg
cmc
push
jl
imul
lods
insl
jo
pop
vmovups
jmp
loop
fiaddl
sti
cmp
xchg
lock
jbe
out
dec
out
addr16
je
jg
lods
mov
adc
test
adc
ds
pop
int3
sub
add
frstor
cwtl
push
cmp
dec
cmp
cld
into
daa
sbb
loop
jge
xchg
std
in
jle
cs
iret
inc
frstor
lret
and
push
or
xor
repnz
das
jge
repz
aas
inc
cwtl
sbb
or
fildl
xor
mov
adc
mov
lods
movsl
fnstcw
test
sub
dec
cmp
test
push
add
mov
push
jle
lods
mov
jbe
pushf
and
mov
jns
insl
or
mov
pop
cltd
mov
lds
sar
js
jb
mov
cmp
push
sub
ss
pop
xor
mov
daa
jne
mov
inc
cltd
aas
jnp
rcrl
push
jge
dec
pop
jl
sub
jbe
cli
faddp
jo
out
mov
repnz
pop
mov
cwtl
shrb
lods
xchg
sahf
pop
cmpsb
inc
jmp
loope
cmpsb
dec
xor
mov
fiaddl
dec
movsl
out
fidivrs
jp
or
jns
lahf
sub
mov
adc
jg
sub
insb
mov
addb
call
push
mull
cmp
imul
lds
je
cmp
cmc
mov
dec
mov
daa
xchg
mov
push
push
lds
mov
fdivs
xchg
mov
pop
test
push
sbb
rorb
cld
jns
mov
add
xor
sbb
push
cmp
push
mov
in
filds
cmp
lock
xor
shrb
ljmp
cltd
movsl
clc
aaa
mov
sbb
xlat
mov
test
push
loope
jmp
add
inc
rcrl
add
inc
adc
jle
adc
adc
xlat
outsl
push
sahf
loope
inc
test
mov
and
lret
xchg
cwtl
and
inc
push
push
clc
lock
ss
loop
cmp
cmp
rorl
cs
sub
mov
gs
jne
rcl
shrb
and
add
sarb
xor
rclb
fmull
notb
or
nop
into
scas
mov
icebp
or
jp
jecxz
stos
inc
pop
call
arpl
adc
rorl
push
lcall
mov
cli
mov
cmc
in
push
dec
inc
push
fdivrl
jp
out
cmp
pushf
and
sub
je
insb
and
mov
movsl
adc
and
xor
mov
jl
lahf
sbb
stos
pop
adc
mov
ret
pop
insl
and
aas
and
lret
testb
lds
idivb
movsl
mov
clc
jno
pop
das
gs
test
jmp
sahf
pushf
rclb
or
psadbw
pop
call
pop
push
xchg
enter
mov
pushf
push
inc
push
jle
or
xor
xor
sub
stos
repz
vfrczpd
fdivrl
sub
sbb
gs
nop
pop
andl
iret
jne
xchg
leave
push
xchg
pop
movsb
in
sarl
pop
lds
lret
xor
popf
adc
xchg
or
mov
dec
das
adc
sbb
mov
adcb
idiv
and
ret
sbb
xchg
std
aam
jmp
jl
aad
fnsave
lret
lcall
movsl
mov
movsb
jns
push
pushl
ret
aam
push
sahf
out
dec
es
inc
repz
roll
push
in
inc
sub
ds
lods
jns
adc
pop
rorl
push
mov
lret
mov
ljmp
xchg
mov
pop
xchg
out
sbb
jle
fbstp
xchg
mov
lret
mov
sub
in
inc
subl
fidivrs
pop
imul
jb
pop
and
mov
stc
mov
xor
pop
popf
jmp
lret
inc
or
inc
shrb
gs
iret
and
sub
test
rcrb
outsl
xor
sbb
lds
popf
jbe
xchg
sbb
jl
mov
mov
in
sar
jnp
xor
jb
pop
das
pop
repnz
xchg
and
mov
mov
adc
dec
sbb
cwtl
rcrb
ret
mov
cmp
cld
loop
mov
je
or
arpl
cwtl
mov
cmp
sti
push
adc
push
enter
imul
pop
gs
or
sub
cmp
sub
clc
icebp
sub
scas
and
or
add
adc
mov
nop
mov
pop
jne
pop
stc
mov
rcll
fildll
movsb
sbb
mov
icebp
xchg
pop
out
lds
cli
out
cmc
jg
repnz
insl
dec
dec
push
push
push
push
cmp
mov
pop
psubusb
xor
xchg
xorb
cltd
sbb
mov
loopne
jl
fadd
ja
fidivrl
jp
mov
pop
cwtl
shrb
mov
push
sbb
sbb
jo
mov
aas
lds
push
cwtl
inc
push
pop
push
sub
testb
pop
add
cmp
orl
xor
rolb
push
fldl
clc
sbb
adc
jo
and
pushf
popa
and
push
push
jno
je
in
ja
inc
xchg
sbb
xor
jge
call
clc
sub
cmp
loope
sarl
jb
lea
sahf
xchg
jge
jmp
lahf
in
add
popl
imul
push
aaa
loope
scas
pshufw
ret
nop
jo
rorb
push
pop
addb
inc
sbb
into
test
xchg
bound
and
les
sbb
je
jb
fsts
ret
and
mov
mov
mov
lcall
jmp
fs
xor
incb
movsl
jno
adcl
jns
bound
fldcw
das
imul
in
das
in
lds
out
mov
pop
sub
push
jmp
popl
pop
push
imul
and
xlat
xchg
mov
aam
lods
fnsave
dec
pop
out
push
aam
fiadds
xor
or
inc
adc
sbb
aam
sub
xor
cmp
scas
mov
xchg
or
js
or
lods
jle
mov
testl
pop
int3
mov
pushf
lss
or
or
push
stc
insl
cwtl
sbb
movsb
inc
enter
out
rorl
daa
icebp
sbb
lret
popf
jl
inc
mov
add
sub
insb
add
test
jnp
mov
loope
mov
bound
mov
jnp
pusha
jge
add
pop
xor
inc
mov
jp
scas
mov
ret
push
dec
push
jg
cmp
mov
push
push
or
mov
jge
out
sub
jmp
and
jns
xchg
stos
add
xor
push
pop
cld
imul
push
test
mov
ror
test
test
cli
mov
rcrb
push
push
push
mov
jl
hlt
push
leave
lret
mov
sar
mov
inc
lea
mov
xor
push
dec
mov
push
out
or
addr16
popf
popa
popa
mov
inc
out
or
scas
xchg
or
dec
jnp
idiv
add
fcmovbe
or
push
dec
pop
push
loop
shld
sahf
inc
fisttpll
cmpsb
loop
or
push
arpl
xor
cmp
test
jp
jne
add
mov
fwait
lea
dec
in
shl
mov
sub
mov
pop
sbb
or
sub
pushf
neg
mov
and
jmp
or
ret
mov
xchg
jge
insb
inc
vmovaps
xchg
add
xor
lret
push
push
scas
mov
dec
jne
xlat
fiadds
dec
daa
mov
lock
pusha
dec
shrl
pop
popf
shll
shlb
xchg
fnstenv
and
int
and
jecxz
fiadds
sub
cs
mov
mov
pop
push
cmp
rolb
fcoms
pop
loopne
or
xchg
fildl
sub
sbb
adc
jmp
adc
mull
jl
lds
mov
pop
add
es
lret
loopne
lds
jge
sarb
frstor
out
js
xor
mov
lods
cwtl
test
andl
or
imul
xchg
sti
adc
ret
in
sbb
pop
add
xor
lret
rcll
or
cmp
sub
xor
sub
push
lea
ss
cltd
mov
add
fcomi
std
push
pop
and
lock
jo
lock
pop
or
push
jge
xchg
jns
mov
rolb
xor
pusha
pop
push
sti
xor
loop
inc
cmp
or
jmp
int3
in
out
jb
sbb
daa
jae
ss
add
les
js
hlt
js
mov
jp
fdivl
ljmp
inc
fs
cmc
bound
inc
add
jnp
rorb
lods
inc
rcll
xchg
mov
sub
nop
inc
mov
dec
xor
pop
out
jae
sub
frstpm(287
sub
scas
js
in
push
addr16
or
push
adc
mov
sub
inc
insb
ljmp
ljmp
push
out
and
mov
daa
add
and
imul
mov
xor
shrl
fisttpll
pop
aas
xchg
shr
dec
call
iret
pop
push
sub
lahf
test
arpl
stc
dec
pop
mov
jge
jl
or
mov
lods
push
cmpsl
inc
mov
stc
stos
sbb
hlt
push
shr
xchg
jnp
enter
push
dec
inc
data16
sbbl
dec
inc
jae
cmp
cltd
xor
adc
jb
test
inc
mov
mov
jle
push
inc
pop
jle
outsb
outsb
sbb
addb
xchg
sbb
or
inc
cwtl
repz
repz
cmpsl
jne
push
movsl
and
movsb
mov
test
lock
nop
dec
or
nop
or
mov
xor
pop
xor
push
inc
outsb
gs
stos
leave
sub
iret
movsl
pop
lahf
sahf
out
inc
mov
out
addr16
mov
mov
and
mov
out
mov
cmovp
iret
test
cmp
or
cli
mov
mov
repz
xor
or
mov
jnp
pop
and
jl
add
adc
push
imul
add
fld
push
lahf
popl
mov
loopne
dec
push
fcmove
in
dec
xchg
jns
adc
in
cmpsb
fisubrs
xor
jbe
call
outsb
pop
aad
mov
sbb
cs
mov
cmp
outsb
or
xchg
lods
pop
scas
push
jnp
lret
xchg
in
mov
sti
pop
addr16
sarl
cltd
pop
dec
cmp
mov
xor
pop
loop
cltd
nop
mov
fwait
into
cmpsl
rclb
jns
rcrb
sub
cltd
lret
sbb
inc
sahf
sbb
ja
jge
mov
cmp
cmpsl
out
inc
sbb
push
mov
test
fidivrl
mov
jge
and
mov
add
into
scas
xchg
nop
inc
mov
xor
cli
jge
inc
mov
jg
stos
jle
pushf
leave
xchg
in
adc
movsb
push
add
out
xor
aaa
cwtl
shlb
jp
xchg
mov
cli
cmp
das
pop
lods
movsl
ret
add
dec
cmp
leave
out
fldln2
int
sub
xchg
pop
sub
loope
push
enter
add
jb
je
mov
arpl
xchg
les
enter
cmp
or
test
jne
xchg
xchg
pop
xor
loop
xchg
mov
sub
ljmp
dec
adc
jecxz
lds
popa
imul
jbe
rclb
xor
or
stos
mov
fmulp
orb
cmp
push
das
sbb
lret
pop
addr16
cltd
push
jno
rorb
adc
lds
mov
aas
fsts
pop
gs
inc
mov
fwait
cli
ja
fadds
inc
je
decb
inc
xchg
mov
xor
rclb
cmpsl
call
and
std
lods
and
fldt
fmul
out
les
fcom
adc
pop
push
cwtl
pop
pop
jmp
ret
test
jecxz
xchg
mov
mov
idivb
sar
ljmp
jmp
lahf
sahf
pop
iret
mov
leave
out
or
out
jo
sub
arpl
clc
std
push
lods
mov
xor
push
cmp
fdivrl
popf
scas
test
enter
je
test
rolb
sbb
scas
xor
xor
test
leave
mov
mov
cmp
out
sets
cmp
iret
xchg
out
bound
mov
mov
mov
cmpsb
jb
lcall
nop
inc
pop
or
or
imul
enter
cmc
icebp
imull
loope
sub
jg
insl
hlt
lods
and
inc
sub
xor
sti
pop
arpl
arpl
inc
dec
xchg
sbb
test
cmpl
ret
fsubs
push
cld
mov
add
sar
adc
stos
scas
adc
mov
leave
push
lea
je
movsl
jecxz
jno
ret
and
mov
and
or
xor
movsb
fsubp
stos
pusha
cld
push
imul
test
das
push
hlt
adc
ret
jcxz
xor
pop
dec
mov
push
popf
not
push
pop
mov
pop
testb
scas
cmp
cs
xchg
les
js
orb
icebp
cwtl
loop
jl
push
mov
loopne
add
scas
psadbw
mov
or
inc
sub
xchg
xchg
addr16
es
fwait
add
mov
fsubrs
daa
push
jg
repnz
jl
sub
push
iret
mov
loope
dec
mov
fnstcw
jmp
push
xchg
das
std
sub
sub
jg
mov
jle
pop
int
sub
adc
popf
out
add
into
sub
push
mov
nop
dec
rclb
fs
sub
or
popf
lods
fisttps
sub
movaps
xchg
pop
lock
das
jge
cmp
out
in
das
dec
jns
lret
icebp
push
push
test
jg
inc
lds
fldcw
jns
or
ret
jae
sti
js
xchg
and
xchg
cli
pop
jo
pop
cmpsl
jg
leave
lea
mov
cld
or
inc
sub
stc
adc
rcll
ret
jmp
es
inc
dec
xor
iret
hlt
pop
push
addl
hlt
dec
pop
daa
xchg
repnz
mov
sbb
mov
cltd
test
std
pop
mov
inc
stc
call
nop
pop
stc
add
inc
mov
jecxz
rcll
mov
les
cld
cmp
bound
fidivl
inc
sub
push
aas
callw
in
mov
jmp
faddp
and
add
test
mov
leave
sbb
xchg
xchg
sarb
dec
sbb
jns
aam
into
sbbl
adc
mov
jne
add
cltd
pop
sti
shrl
push
push
insb
mov
mov
pop
cli
pop
repnz
cmpsl
iret
mov
mov
orb
into
repnz
xchg
add
out
adc
inc
movsl
dec
add
aam
pop
mov
mov
jbe
mov
cwtl
adc
test
je
mov
repz
or
xor
add
es
imul
fistpl
pop
or
aaa
lcall
lods
std
sbb
rolb
lret
pop
bnd
loop
add
insb
cmpsl
mov
lret
sbb
pop
jno
cmp
xor
fsubrl
inc
aam
xchg
add
call
push
pop
pop
cmp
inc
arpl
rorb
js
mov
mov
xor
adc
mov
inc
inc
nop
push
push
mov
cmovnp
pop
sub
push
data16
push
shlb
lret
mov
jge
xchg
xor
cmp
es
xchg
movsl
jecxz
add
mov
repnz
and
aas
hlt
mov
fcmovnbe
mov
add
push
xor
mov
clc
mov
xor
dec
sub
jecxz
dec
xor
sbb
fsubp
xlat
push
movl
das
in
je
enter
cmp
adc
pop
sub
scas
mov
cmc
xchg
fadds
jne
in
fmull
sub
xchg
inc
fisubrl
cwtl
and
cmp
jmp
mov
xchg
insl
pop
push
aam
inc
sbb
pop
dec
add
rorl
adc
xchg
push
cltd
adc
repnz
mov
pop
imul
sub
or
mov
mov
aaa
push
fcompl
sti
rcl
divb
decb
mov
adc
cmp
fcomip
adc
inc
fbstp
leave
call
xchg
shl
sbb
xchg
leave
push
inc
adcb
lcall
jg
in
hlt
fs
loope
mov
and
out
cmpsl
fdivs
sti
arpl
int3
mov
push
sub
mov
loop
insb
fprem1
mov
arpl
mov
lret
xor
cltd
add
cwtl
sbb
jg
repnz
add
ljmp
sbb
pop
ja
fnsave
repz
adc
mov
cmp
loopne
fidivl
loopne
femms
xchg
jmp
lock
inc
fistps
insb
mov
pop
lea
and
gs
cli
adc
data16
adc
cmpsl
mov
sarl
jl
xor
in
mov
loopne
vpsubsb
sub
mov
cltd
out
mov
xchg
sti
sbb
mov
sub
and
stc
and
ljmp
xchg
or
in
rorl
or
scas
repz
or
jo
mov
pop
pop
fidivrs
and
fcompl
add
adcb
or
sbb
add
cmp
push
push
sbb
call
in
roll
xor
adc
daa
outsl
add
mov
in
addl
jmp
daa
or
daa
cmp
fimuls
sbb
cs
push
push
mov
fld
rcrl
mov
sub
push
shr
icebp
in
aam
jg
clc
je
mov
test
loope
mov
or
cmp
mov
call
lods
and
mov
dec
sahf
inc
push
lds
fucomi
push
loop
cmc
xchg
jbe
mov
stc
push
jns
adcl
repnz
push
lock
inc
dec
adc
adc
mov
arpl
pop
push
mov
test
cld
out
orl
scas
loop
fnstenv
sahf
int
pop
or
push
and
dec
add
or
aas
std
inc
test
add
xor
and
cmpsl
in
out
das
lods
in
in
jle
inc
add
dec
cmpsb
adc
sbb
mov
lcall
movsb
popf
scas
in
cmpsb
inc
sub
sbb
xchg
into
mov
sub
ss
loopne
mov
cwtl
sti
sbb
xchg
fcmovb
shrb
cmp
fs
movsl
or
fiaddl
xlat
les
insb
fistpl
mov
jb
lods
push
mov
shl
inc
cmpsb
int3
insb
inc
nop
and
js
and
aas
test
inc
test
sub
mov
outsb
inc
mov
mulb
nop
mov
mov
sarb
pop
pop
push
jle
sub
test
cmp
push
xchg
jnp
es
cmpsb
push
ficompl
mov
cmp
mov
add
cmp
mov
push
push
inc
xlat
push
pushf
out
xchg
add
jns
movsb
je
xchg
mov
aam
cs
add
jg
in
sti
rcr
mov
adc
dec
mov
arpl
xor
or
pop
add
xchg
in
jae
jmp
sbb
push
mov
sub
scas
and
xchg
or
mov
add
gs
cld
cmp
stos
je
not
adc
xor
jnp
mov
sub
aam
mov
lock
pop
sub
stos
sbb
cs
mov
jmp
or
stos
mov
cmp
push
push
add
in
ror
sub
jne
cld
lds
jmp
jnp
xor
adc
mov
scas
adc
vcvttsd2si
sbb
xor
test
add
jns
and
sub
add
and
and
mov
sbb
push
jp
jne
sub
jbe
mov
pop
jmp
jo
push
or
dec
clc
into
jnp
dec
fidivs
push
pusha
shlb
cmp
fstl
mov
lret
jnp
sub
push
push
mov
xchg
mov
mov
jge
test
scas
cmp
sarl
fsubrs
stos
sbb
sub
xlat
fdivrs
pop
fwait
push
dec
sub
pushf
push
daa
push
mov
test
loopne
lahf
stc
vphaddbw
aad
mov
gs
sub
popa
sub
cmp
cmp
bound
and
movsl
jo
out
xchg
mov
imul
cmpsl
mov
cli
loopne
jo
jg
aam
xor
sbb
lret
push
sbb
and
std
loope
add
lsl
jne
dec
imul
sbb
fwait
add
sub
dec
icebp
mov
pop
push
dec
iret
mov
pop
push
adc
aas
out
aad
movsl
pop
ret
cmp
aam
add
push
lods
out
jmp
in
data16
mov
aad
mov
inc
test
orb
cvttps2pi
mov
std
clc
cmpsb
fidivrs
lods
ret
push
imul
mov
imul
cmp
inc
out
ss
xchg
xor
dec
mov
dec
ds
das
les
daa
adc
jns
and
cltd
xchg
pop
je
cmpsb
or
push
jmp
pop
jb
pop
mov
or
mov
push
mov
shll
dec
inc
cmp
fisubrs
mov
and
jno
popa
mov
es
mov
push
icebp
aam
sbb
sbb
push
dec
inc
ret
mov
scas
scas
lret
and
rclb
pop
jge
mov
mov
ds
aaa
add
lock
xchg
pop
stos
push
push
les
push
mov
lret
xor
mov
cmpsb
push
jnp
outsb
sahf
test
xchg
lret
or
pop
sub
or
or
out
inc
es
shrb
mov
stc
ja
stos
sub
ds
jmp
mov
div
sub
ja
sbb
cmpsl
xchg
das
inc
or
push
and
je
push
lods
sbb
int
pop
xor
fcompl
add
mov
mov
je
push
aaa
jle
rcl
incb
hlt
imul
add
pop
jl
jecxz
popa
ja
jl
cmp
insl
imul
fnsave
adc
pcmpeqd
mov
or
call
aam
mov
adc
lea
out
and
in
icebp
ja
pause
lea
fcmovbe
scas
pop
cld
cltd
incb
int3
loope
lahf
rcrb
int3
mov
and
insl
mov
dec
notb
jae
mov
adc
icebp
xchg
data16
jnp
ja
cmp
fsubr
cwtl
xor
xorl
or
shrl
lcall
dec
mov
in
shlb
pusha
sahf
in
imul
data16
dec
sarl
mov
jno
adc
cli
mov
shl
imul
push
xor
inc
ds
xchg
mov
add
pop
cmp
and
rclb
mov
ficompl
clc
loope
pop
movsb
dec
jnp
shr
cmpsl
dec
icebp
inc
sbb
into
add
cmp
iret
in
sbb
das
or
lock
movsb
cmp
dec
lods
outsb
mov
test
lcall
rcl
push
loop
out
sahf
mov
xchg
and
shlb
es
lret
jg
pop
sub
pop
rcl
aas
push
shr
mov
inc
outsl
jns
aad
inc
fsubrs
push
and
pop
in
mov
xchg
call
sub
aad
sbb
dec
lods
stos
testb
cmp
cmpsb
or
das
push
sub
outsl
aas
sti
into
in
shr
mov
xchg
jge
lret
pushl
pop
adc
mov
push
in
sti
test
in
mov
pop
je
insb
jp
and
xor
cmpsl
test
popf
movsl
test
xchg
cltd
pop
fsts
pop
pushf
jmp
pop
pop
mov
outsl
arpl
push
adc
adc
mov
adc
out
jl
pop
daa
lahf
ret
sarb
ds
jmp
cmp
xor
imul
popf
sub
popa
ret
push
push
xor
outsb
in
test
gs
and
jo
in
out
cmp
mov
aaa
inc
inc
lock
js
ret
pop
cmpsb
dec
lahf
sarl
push
rclb
mov
push
scas
push
sbb
in
ret
cld
pusha
adc
or
mov
out
stos
ficoml
in
xchg
jb
repz
in
xor
jno
mov
inc
fwait
out
dec
mov
add
lods
pushf
mov
adc
inc
scas
cmp
clc
pop
pusha
lods
pop
push
jne
gs
jmp
insl
std
push
xchg
push
leave
sbb
test
jecxz
dec
call
pop
call
push
mov
addr16
sti
sbb
mov
push
out
mov
sub
repnz
jno
add
shlb
stos
add
mov
lock
pushf
cmp
aas
les
jecxz
push
pop
mov
popf
jp
test
push
test
or
int3
repz
sahf
lahf
imul
sub
out
pushl
dec
ja
mov
jg
repnz
jp
ds
stos
or
and
dec
cmc
adc
lahf
mov
cmc
push
mov
sub
jnp
dec
fcmovnu
shlb
repz
pop
cs
shr
jg
mov
js
jbe
adc
cs
cwtl
push
cli
mov
jp
push
cmp
js
mov
testb
or
movsb
mov
les
clc
test
pop
les
loop
clc
cs
cld
jecxz
das
imul
test
sbb
fisttps
out
mov
and
jb
movsb
stos
push
mov
stc
sbb
jmp
loop
push
sahf
mov
mov
in
pushf
filds
cli
gs
dec
call
mov
push
dec
xchg
inc
or
sar
push
sbb
and
jne
hlt
jno
int3
mov
cli
mov
mov
sbb
in
sub
mov
rcl
jo
xchg
dec
jl
pusha
int3
jp
push
outsb
fbld
outsl
incb
and
xchg
mov
pusha
stos
decl
dec
aas
sub
fidivrs
repz
outsb
out
cmpsl
adc
push
adc
xchg
cmp
leave
dec
mov
push
mov
xor
pop
bound
out
les
std
fwait
pop
mov
int3
xor
add
pop
shrl
dec
cmp
sub
jo
int
dec
inc
mov
sbb
imulb
inc
adc
sbb
dec
jecxz
push
xor
call
lcall
and
xchg
jg
insl
sub
nop
mov
dec
xor
lods
cmp
scas
add
dec
int
cltd
lods
sub
lock
stos
jae
cmp
imul
mov
xchg
lods
push
repnz
or
js
jo
push
cmp
flds
push
clc
mov
rcrl
test
sgdtl
popa
mov
xchg
outsb
jl
cmpb
aaa
sub
dec
xchg
cmpsl
cmp
int3
xlat
iret
pushl
pop
out
mulb
mov
punpcklbw
jne
loopne
fwait
or
lods
loop
imul
xchg
out
adc
sbb
and
rcll
jg
pop
in
sub
xor
xor
imul
cld
ljmp
lods
jp
int
add
push
insl
clc
xorb
std
insb
and
bound
add
cmp
movsb
inc
add
rorb
movsl
mov
int
and
mov
repz
jmp
xchg
add
stos
in
insb
mov
into
mov
dec
in
push
adc
repz
xchg
add
cli
sbb
clc
xor
int
mov
mov
dec
insl
pop
rol
mov
jns
stc
pop
mov
cmpsb
ljmp
lds
repz
adc
pop
or
mov
jecxz
add
fldcw
call
enter
jg
aam
pop
test
push
mov
pop
testl
dec
jb
out
pop
mov
iret
sub
orb
or
imul
test
jnp
outsl
sub
stos
mov
xor
xor
jbe
movsb
dec
fdivrl
xor
cltd
lods
fwait
movsl
rolb
mov
mov
in
fldl
cmpsl
fadd
pop
and
cmp
pop
lahf
pop
or
xor
push
xlat
cmc
pcmpgtd
cmpb
test
out
popa
jae
jge
xchg
and
mov
cli
cltd
lea
lret
push
pop
je
mov
mov
loope
pop
rorb
xor
xchg
pop
push
jle
nop
iret
pop
rcrl
mov
mov
push
les
daa
cli
call
mov
outsl
movsb
inc
stos
pop
cwtl
mov
inc
aaa
cmp
mov
ds
mov
dec
jmp
mov
sub
xor
dec
ljmp
add
ret
adc
sbb
mov
mov
out
aam
pop
shll
xor
add
shll
outsb
es
adc
lock
inc
sub
mov
repz
push
fmulp
ret
lret
push
cwtl
dec
lret
inc
mov
push
xchg
lret
imul
mov
inc
mov
mov
scas
jns
xchg
aam
sub
sbb
popf
xchg
lcall
pop
shl
cmp
into
push
pop
mov
or
jg
sbbb
sarl
jmp
dec
ss
adc
mov
push
add
mov
sub
ja
cmp
jnp
push
pop
cmp
popf
in
xor
vcvtdq2pd
stos
xchg
stc
icebp
dec
in
les
dec
std
push
out
pop
add
add
cmp
cmp
inc
pop
jb
and
pop
sbb
fsubl
add
xchg
pop
pop
xlat
test
pop
dec
xor
cmpsl
mov
inc
or
mov
xchg
push
call
test
loopnew
jo
lock
aad
mov
jle
lock
gs
adc
pushf
lret
lret
dec
les
cmc
cmpsb
sub
lret
jne
xor
sbb
cmp
cmc
add
in
arpl
imul
adcb
insb
jo
lock
in
sbb
popf
in
fs
int3
jl
fsubs
sar
les
insb
mov
shll
je
lcall
jnp
je
orl
loope
outsb
ja
std
or
lahf
or
sbb
pop
std
lcall
mov
lcall
scas
leave
cmp
mov
pusha
inc
and
insl
xchg
insb
push
insb
jmp
or
add
sti
iret
lahf
sbb
mov
jmp
mov
jb
jae
push
mov
pop
pop
es
sahf
jmp
pop
or
sub
sbb
mov
pushf
pop
add
cmp
adc
pop
dec
inc
loop,pn
cmovne
jbe
bnd
icebp
dec
jecxz
icebp
and
add
aam
rol
mov
push
xchg
fwait
sbb
pusha
enter
adc
cltd
add
cli
lods
popa
mulw
aas
mov
in
aad
sti
add
fadds
and
xor
loop
push
dec
loop
mov
dec
dec
das
icebp
cmpl
inc
fs
push
mov
stc
lret
mov
mov
ss
in
inc
and
push
jne
ds
inc
les
dec
or
jns
test
outsb
mov
inc
fadd
insb
mov
push
cld
cmp
adc
gs
jge
scas
jne
movsl
push
insb
add
data16
mov
xor
mov
movsb
mov
hlt
push
push
dec
inc
rorb
test
faddp
pop
mov
mov
pop
jp
cmp
dec
pop
mov
mov
mov
xor
aad
push
fdiv
sub
inc
sbb
mov
xchg
ret
jmp
xchg
icebp
jnp
pop
push
jmp
pop
insb
ror
push
xor
push
lock
pop
enter
sahf
mov
fisubs
hlt
jmp
sti
cmp
loopne
ficompl
jne
push
add
les
cltd
repnz
or
insb
mov
pop
test
jae
mov
pop
je
sahf
dec
loop
and
lret
inc
ja
leave
dec
mov
pop
xchg
mov
push
and
fnstcw
mov
adc
pop
dec
dec
cmc
mov
aam
icebp
xchg
aas
movsl
out
lds
stos
pop
push
push
inc
movsb
je
push
push
stos
adc
add
lret
cmpsb
cltd
cli
pop
ds
loopne
je
mov
daa
call
outsl
mov
xor
and
movsl
xor
or
or
or
leave
out
outsb
xchg
push
sbbl
add
mov
xor
jne
pop
mov
push
ds
and
and
and
mov
pop
mov
jb
pop
int
adc
mov
insl
sub
pop
movb
outsl
hlt
out
pop
push
dec
lods
shl
into
dec
movsl
sbb
aam
mov
cmp
outsb
push
dec
loopne
jmp
loopne
cwtl
imul
cli
gs
daa
add
mov
imull
popl
ret
ss
arpl
sbb
aad
clc
sahf
popa
decb
lods
popa
jbe
pop
ljmp
das
and
lahf
lods
pop
dec
insb
xchg
mov
mov
sub
cmpsl
xor
mov
push
jne
or
pop
test
cmc
xchg
insb
xchg
lods
lods
data16
xchg
std
pop
mov
mov
inc
mov
xchg
cs
iret
dec
test
pop
push
gs
sub
or
and
cmc
pop
andb
sbb
mov
fucomp
fcomps
sbb
mov
scas
fistl
pop
gs
jo
sti
addl
push
mov
add
outsb
xchg
ret
and
jo
push
pusha
icebp
lcall
les
mov
or
cli
mov
adc
nop
pop
mov
je
jl
daa
adc
sbb
cmc
rcrb
dec
movsl
dec
xor
mov
test
or
jle
std
pop
mov
cmpsl
and
movsb
imul
or
repz
outsb
int
adc
addb
push
out
icebp
in
mov
push
movsb
pop
xchg
pop
jg
sbb
ja
test
sub
mov
mov
add
out
das
shrb
std
stos
pop
add
aad
dec
xor
pop
cltd
in
fstps
inc
mov
scas
aad
jmp
mov
or
int
inc
fisttpll
or
das
or
bound
mov
daa
dec
sbb
shlb
test
ret
arpl
and
inc
push
bound
xor
loopne
jle
sar
xor
push
mov
jns
sub
xchg
aaa
mov
adcb
iret
xchg
inc
loopne
sub
xchg
lods
rclb
popf
out
ret
mov
mov
fdivrl
in
xor
push
mov
adc
js
cmp
dec
test
jno
jbe
mov
inc
lock
aad
inc
mov
test
push
cld
ds
gs
int
push
enter
push
pop
dec
mov
or
cmp
pop
cmp
movsb
fcomp
out
or
mov
lock
xor
push
stos
sbb
push
jge
cmp
int3
lret
mov
shl
adc
jl
or
dec
movsb
inc
ljmp
adc
push
out
cld
jg
repnz
jne
mov
jnp
or
cmp
idivl
dec
sub
xchg
jp
int
or
lods
xchg
rcrb
and
mov
leave
int
mov
into
ret
jmp
popa
cmp
add
add
and
xor
jmp
lahf
mov
popf
pop
lcall
sbb
sub
or
mov
data16
push
stos
fstpt
cli
dec
pop
lahf
pop
mov
test
and
xchg
negb
mov
inc
lods
lahf
adc
pop
dec
jl
addr16
negb
lds
xchg
adc
jno
sub
lds
add
out
repz
dec
fcoml
push
sub
pop
loopne
or
cmp
xorb
push
jno
and
imul
dec
xchg
inc
hlt
inc
ljmp
or
inc
sbb
mov
sub
push
jne
mov
cmp
pop
cmp
in
in
subl
imul
xchg
int
sub
inc
or
pop
out
ljmp
aas
out
addr16
push
fisttpll
in
or
ficomps
jo
jge
loopne
xor
mov
pop
insl
ror
ja
mov
jle
mov
and
ss
lret
xchg
sub
dec
or
cltd
mov
mov
xor
bound
mov
jnp
mov
insl
jl
ret
add
sub
pop
and
sbb
sahf
sub
xchg
pop
add
dec
psubsw
inc
cmp
arpl
xor
in
ror
mov
test
xchg
mov
cwtl
into
cmp
es
mov
pushl
mov
sar
shrb
xchg
in
add
mov
xchg
lret
out
sahf
sbb
push
testl
ret
repz
mov
adc
out
xor
mov
adc
int
mov
sbb
add
inc
shrb
inc
leave
mov
xchg
lret
scas
pop
push
sub
xchg
inc
xchg
stc
ret
sub
push
jb
repz
mov
rcrl
adc
ja
jnp
add
addr16
push
fbld
pop
and
jp
mov
outsl
push
or
js
leave
imul
push
pop
or
sub
addr16
add
mov
xor
cmpb
lret
pop
stos
das
data16
fdivl
jno
jecxz
pop
mov
cld
xchg
and
dec
jle
in
push
mov
and
insl
inc
xor
in
sub
out
neg
mov
lds
pop
jle
enter
inc
addb
repnz
adc
adc
arpl
fsubr
or
outsb
push
je
dec
je
add
pusha
test
icebp
imul
inc
xor
enter
mov
in
cltd
xchg
hlt
sahf
scas
mov
ret
mov
nop
sarl
jno
mov
and
stos
xchg
cmp
mov
sbb
loop
fnstenv
adc
or
cmp
adc
sub
and
jnp
adc
aad
fdivr
out
insb
and
mov
fsts
jmp
mov
cmp
fisubrs
aaa
xlat
ret
jae
sbb
mov
es
adc
movsl
sbb
xchg
adcl
cmp
xchg
sbb
fwait
xchg
adcl
add
into
lcall
mov
xor
and
mov
ljmp
cmp
pop
out
outsl
push
xor
mov
pop
in
jge
cmp
adc
shll
jo
in
and
arpl
call
jae
stc
sarb
aaa
movsl
or
aad
stc
or
cmpsl
fistl
daa
add
sub
xor
cltd
je
hlt
jmp
xor
jp
jecxz
inc
scas
fwait
add
mov
aam
jae
test
mov
xor
or
hlt
in
in
add
push
shll
adcb
jl
xchg
xlat
ficomps
data16
in
cmc
add
pop
sub
mov
fdivs
les
jns
cmp
pushf
add
inc
sbbl
fmulp
xor
xchg
jle
ljmp
sub
or
pop
mov
out
cmpsb
shlb
mov
push
rcl
jle
ds
ja
lods
sbb
pop
mov
jge
pop
push
int3
sub
sub
add
dec
xchg
jns
ljmp
inc
popa
and
out
jecxz
pop
adc
jmp
dec
lahf
xor
orl
push
dec
leave
mov
stos
and
pop
or
adc
outsb
fnsave
push
push
test
ret
push
or
adc
pop
test
mov
mov
icebp
addr16
dec
gs
mov
sbb
mov
sbb
sbb
adc
jmp
xor
sti
dec
add
popa
and
xor
negl
insb
cmpsb
jne
cmc
xchg
and
stc
out
fnsave
rep
add
push
stos
enter
ret
sub
das
es
lock
or
out
scas
daa
or
scas
xchg
mov
stc
xchg
and
inc
sub
jl
int
jbe
mov
fstl
mov
or
repz
leave
addb
and
repz
sahf
ret
mov
sub
sarb
arpl
inc
cmp
lahf
jno
test
stos
fwait
push
movsl
mov
inc
and
clc
adc
add
cltd
test
push
js
jb
imul
xchg
cld
pop
and
insb
fildll
imul
xchg
mov
mov
enter
sti
and
in
pushf
rolb
ljmp
mov
out
jns
xchg
dec
or
push
jb
and
andb
loope
cmpsl
add
ret
mov
sub
jle
sub
test
mov
cmp
fstl
fucomp
subl
cmp
push
inc
jae
scas
repnz
cld
pop
lock
xchg
add
lods
jmp
add
mov
in
jno
mov
arpl
adc
aad
sbb
jg
js
dec
mov
cmp
ja
lcall
aas
adc
pushf
outsl
dec
cltd
iret
or
add
mov
jge
mov
out
or
mov
cld
dec
push
cmp
push
and
mov
jbe
jnp
sbb
into
sar
adc
xchg
test
in
or
lret
push
and
arpl
inc
sbb
stos
insb
ljmp
cli
popf
jmp
push
out
inc
mov
outsb
iret
adcl
test
cmp
push
dec
or
push
and
jb
mov
lods
push
inc
jg
inc
pop
inc
push
jecxz
adc
faddl
push
fnstenv
add
push
stos
jmp
push
js
incb
cmp
rcr
cltd
push
jl
out
pusha
dec
xor
jge
je
sub
fsubrp
jg
enter
repz
in
inc
push
dec
cmp
jp
inc
push
orl
push
cld
gs
clc
and
cmpb
mov
lock
adc
jno
pop
dec
mov
cld
cmpsl
mov
enter
or
xchg
adc
xchg
in
stos
jnp
dec
mov
cmpsb
lock
loope
es
push
or
add
mov
add
fucomi
jp
xor
lods
cmp
shrb
repnz
push
pop
ret
or
mov
xchg
or
add
sub
aas
js
ret
xchg
jle
lret
sub
rcl
wrmsr
inc
lret
pushf
or
or
jnp
cmp
sbb
jp
xchg
mov
cs
mov
xlat
mov
add
das
jg
and
mov
enter
out
inc
lods
jge
cwtl
mov
or
pop
rolb
adc
test
aam
push
cmp
or
sbb
inc
inc
push
imul
sbb
int
add
js
jl
ret
lret
or
push
je
pop
insl
push
sub
dec
pop
insb
ret
imul
enter
int3
cs
mov
jl
pop
cwtl
lods
loopne
push
pop
sub
xchg
pop
or
nop
jb
inc
in
pop
pop
out
into
insb
js
adc
int3
and
cmpsb
pop
into
mov
aam
xchg
daa
in
jnp
mov
pop
cwtl
push
test
mov
xor
pop
mov
jb
sub
out
out
fwait
cmp
pop
or
or
add
lods
fcoms
push
and
push
xor
stos
xchg
movsb
xchg
fucom
add
dec
sbb
push
xor
jne
cli
push
push
jno
fsubl
mov
sbb
push
les
mov
in
and
test
stc
pop
mov
jae
cmp
inc
sbb
pop
cltd
push
jne
sub
scas
pop
inc
cmp
mov
cmp
je
sbb
pop
jb
fidivl
push
sub
mov
jo
sbb
push
les
fidivl
mov
mov
xor
lock
xorb
ja
test
pop
add
loopne
mov
inc
or
xchg
mov
jg
pop
ds
clc
fstl
sbb
xchg
jb
xor
jne
jp
add
fistps
testl
jle
push
js
pop
adc
mov
lret
jns
sub
lods
popf
xor
sbb
mov
adc
and
movsb
test
rol
gs
setae
loopne
imul
leave
and
cs
mov
movsl
test
jge
dec
enter
rclb
roll
push
jnp
pop
and
xchg
out
ljmp
cmp
cs
cltd
and
out
push
loopne
aas
jmp
jge
data16
ja
adc
cmc
fs
sub
loop
adc
cmpsb
call
cmp
adc
xor
hlt
out
jb
jae
pop
xchg
scas
mov
xchg
inc
imul
mov
lret
sbb
mov
ljmp
mov
add
mov
js
sub
cmp
shr
ja
mov
inc
loop
loop
les
push
push
fneni(8087
and
in
ja
pop
push
loopne
inc
push
fdivrs
adc
dec
rol
jle
loop
dec
mov
fisttpll
inc
dec
lret
cmp
aad
pusha
mov
imul
mov
xor
jbe
inc
lcall
mov
dec
adc
cmpsl
fcmovnbe
jmp
clc
test
xor
xor
inc
aam
jl
cmpsl
daa
sbb
arpl
sbb
inc
in
xor
arpl
pop
cs
fsubr
jp
jns
adcb
mov
sbb
into
mov
mov
and
outsl
cld
dec
push
jp
push
jae
dec
mov
jle
out
call
out
sbb
jno
xchg
je
push
imul
and
shll
mov
js
sbb
ficoms
rcr
fnstenv
sbb
push
adc
jecxz
fstpl
mov
in
and
and
std
insl
iret
shlb
dec
ljmp
pop
cmp
ret
xchg
jecxz
and
fisttpll
repz
dec
scas
test
ret
in
jnp
adc
xchg
out
jecxz
aad
mov
mov
clc
faddl
fldt
pop
pop
movl
cmp
adc
mov
hlt
jae
leave
lret
jae
mov
mov
jno
cmc
push
or
andl
cmp
loope
and
push
sub
and
fwait
sahf
mov
mov
jbe
sbb
lods
pop
xchg
add
stc
mov
pop
fsubl
repnz
imul
dec
in
rolb
jnp
jno
das
stc
pop
jno
lret
out
jns
pop
pop
sahf
mov
cmp
xchg
and
inc
mov
out
arpl
in
pop
or
addl
clc
pop
insb
cmc
pop
test
mov
adc
xchg
mov
mov
pushf
test
inc
pop
sbb
adc
mov
add
sub
mov
gs
sahf
popf
movsl
jmp
sub
cmp
pop
stc
scas
filds
jnp
rcrb
aam
call
lea
icebp
mov
movsl
add
in
or
out
out
jg
in
adc
in
or
cmp
xor
add
mov
xchg
aad
ror
mov
and
andb
in
push
jl
lock
je
dec
rcrl
pusha
xchg
popa
mov
insl
xchg
mov
fwait
imul
fsubrs
mov
shll
dec
ss
aas
lea
jo
jmp
fwait
jb
data16
xchg
lret
and
mov
mov
xor
cwtl
ficomps
mov
cmpsl
and
xchg
jecxz
push
or
mov
push
sbb
adc
popa
and
and
inc
lods
and
std
mov
xor
enter
aam
lock
mov
popa
pop
out
xchg
movsl
inc
xor
dec
xchg
enter
rolb
mov
jge
out
inc
movb
sub
xor
adc
addr16
subb
mov
cmc
jl
adc
negl
ljmp
movsl
repnz
xor
xchg
pop
insl
adc
push
xorl
or
dec
fwait
or
push
lods
neg
mov
ret
pop
adc
aaa
jo
loopne
pop
add
adc
mov
inc
mov
stc
pop
add
mov
sub
sti
xchg
dec
add
cs
in
into
xchg
push
fldenv
cmp
out
mov
xchg
aas
dec
jmp
push
sub
jno
rorb
scas
das
subb
sbb
cmp
inc
jp
insb
xchg
faddp
inc
xor
popa
add
cmp
nop
dec
out
in
mov
mov
sbb
jno
jbe
push
sub
push
jne
cmp
decl
inc
inc
mov
inc
mov
les
je
popa
push
aaa
fstpl
push
cld
repnz
call
push
lds
sahf
orl
pop
das
loope
xor
les
jae
gs
push
mov
in
mov
push
dec
mov
mov
pop
xlat
inc
inc
pop
data16
ss
inc
xchg
addr16
in
mov
pop
inc
sub
les
lock
repnz
mov
jp
stos
in
push
out
in
mov
fiadds
push
and
jmp
add
ffree
shlb
imul
mov
fisubrl
and
in
cs
into
movsb
addr16
shrl
addr16
mov
stos
sbb
into
mov
sbb
push
cmp
sahf
sub
js
js
in
add
lret
xchg
jl
pop
push
insl
push
lcall
loope
setge
pop
popf
jbe
sub
push
jno
into
loop
jmp
loope
stc
adc
xor
in
jne
sbb
pusha
dec
pop
mov
fcoml
cmp
pop
inc
cltd
sub
je
sub
clc
lahf
mov
daa
mov
out
rorb
dec
lcall
bound
push
rorb
xlat
rcrl
test
test
pop
pop
jns
jg
xor
data16
adc
push
hlt
movsb
xor
aaa
aam
stc
dec
mov
mov
dec
imul
dec
mov
mov
enter
lret
out
movsl
or
test
mov
jmp
iret
fistpl
sub
push
mov
inc
dec
xor
or
scas
movsb
jecxz
pop
pusha
rep
arpl
into
aam
test
jo
pop
fiaddl
test
xor
cli
and
aas
pusha
pushf
or
aam
scas
aaa
decb
adc
test
xchg
xchg
test
xlat
iret
jmp
lret
push
adc
cmpsb
test
jae
in
fwait
out
jbe
loop
add
enter
jge
dec
mov
sti
jb
xchg
lea
lret
sbb
or
jmp
pop
push
aaa
scas
mov
push
fs
scas
xlat
out
out
and
int
inc
sub
add
xlat
add
jle
xchg
std
loopne
mov
popf
and
mov
pop
mov
push
xor
shrb
sbb
pop
in
adc
loop
xlat
repz
loop
popa
xchg
clc
cmpsl
bound
lret
or
pop
jge
xlat
lahf
mov
out
lods
mov
outsl
js
cmp
lods
flds
fnsave
mov
andl
xchg
cmpsl
imul
cmp
sbb
ds
lock
fistl
sti
xor
push
inc
addr16
lret
add
ja
lock
ret
ss
daa
sub
sahf
rcr
jb
sbb
insb
xor
sub
mov
jbe
out
xchg
pop
sub
and
pop
inc
fs
mov
cmc
js
sbb
jnp
test
sbb
mov
xorb
mov
mov
loopne
mov
sbbb
fwait
lcall
cmc
push
inc
fidivl
popa
cld
outsb
arpl
mov
mov
add
hlt
cmp
xchg
pusha
fiaddl
xchg
mov
in
sub
fnstenv
lea
and
push
ss
insb
mov
lock
inc
xor
imul
mov
inc
mov
mov
ret
sti
pop
mov
popa
pop
fcomps
and
jg
mov
push
jnp
iret
dec
push
mov
leave
inc
fwait
shlb
popa
xchg
add
adc
mov
sbb
push
ljmp
leave
les
leave
lds
sbb
test
pop
mov
jne
enter
jl
lock
or
in
pop
xchg
inc
mov
adc
jmp
inc
jno
stos
pop
push
pop
cltd
xchg
loop
mov
or
inc
aas
pusha
cltd
ror
incb
mov
mov
sub
push
pop
cmp
mov
mov
mov
mov
pop
pop
pusha
arpl
or
lods
mov
mov
pop
push
push
push
loop
sbb
out
or
jle
std
xor
xor
or
cmp
pop
jbe
inc
pop
fildl
lcall
inc
sub
lcall
inc
lds
fdivrl
sahf
xchg
mov
cli
lret
inc
add
iret
icebp
push
pop
dec
push
xchg
fcmovne
test
mov
arpl
mov
or
jge
mov
mov
das
clc
add
push
adc
inc
pop
adc
jae
inc
and
mov
add
insb
bound
fstl
xor
pushl
lea
and
push
jnp
jnp
jmp
ret
add
add
cmp
mov
iret
not
loopne
pop
pop
ds
and
xor
divb
lret
flds
inc
cwtl
not
cmp
inc
sarb
insb
repz
mov
cld
aas
leave
out
scas
sub
fmul
sub
and
cwtl
clc
jae
jmp
xchg
sbb
stos
sub
xor
out
mov
inc
lods
insl
xchg
rclb
sub
cmpsb
or
test
pop
mov
pushf
loopne
test
jno
lahf
fwait
sub
pushf
and
addl
push
lock
cmc
rcrb
lret
roll
int3
jmp
sbb
cmp
js
daa
adc
cmp
sbb
hlt
cmp
lods
jns
insl
jmp
mov
lcall
xlat
pop
pushf
mov
mov
and
push
fwait
in
movsb
xor
sub
sbb
cmp
cmp
push
mov
call
cmpsb
sbb
adc
cmc
das
mov
mov
scas
mov
outsl
add
dec
push
sar
mov
das
mov
in
bound
test
test
xchg
adc
dec
ds
xor
andl
repnz
adc
mov
dec
jecxz
xchg
loop
ds
inc
inc
aam
xor
inc
idiv
outsl
out
and
dec
mov
xor
adc
sub
mov
les
xchg
nop
xor
je
stc
fyl2xp1
pop
and
mov
scas
sbb
inc
xor
imul
in
pop
andb
cmp
pushl
fwait
push
add
or
pop
or
adc
mov
out
std
add
idivb
insl
push
cmc
fbld
or
add
stos
add
inc
mov
les
notb
movsb
stos
inc
xchg
dec
hlt
jle
xchg
add
push
sub
iret
cs
sub
and
pop
jne
ljmp
jne
shrb
and
cmp
stos
jne
push
mov
pop
xchg
fisubrl
pop
dec
mov
xor
pop
out
cwtl
push
stos
ss
outsl
adc
loopne
filds
jge
imul
and
mov
or
fcomps
idiv
or
mov
or
adc
je
cltd
xchg
sarb
std
xchg
fildl
add
movsb
cmp
cs
sarb
cmp
push
dec
push
loop
and
aas
xchg
cli
pop
push
xor
push
xor
sahf
mov
cmp
jno
lods
cmc
daa
das
mov
enter
cltd
jg
sbb
pop
jno
pushf
dec
xor
mov
dec
and
jno
push
add
mov
lds
ds
int3
sbb
sbb
inc
push
jno
push
std
nop
movsl
jb
lock
addr16
pop
iret
enter
sbb
and
push
pop
lret
rol
cmp
pop
pop
dec
iret
out
xor
ja
rcr
ret
fists
in
mov
push
scas
fildll
push
or
stos
jo
push
ret
push
xor
push
mov
and
ffreep
xor
scas
sbb
fs
rcrb
sbb
mov
fdivr
xchg
cltd
addr16
adc
cmc
orl
fwait
stos
sub
mov
dec
and
and
push
fdivrp
pushf
movsl
rcll
in
shll
add
or
in
pop
cmpsb
push
aaa
cmovs
cli
out
insb
pop
lcall
bound
hlt
das
or
test
mov
mov
fwait
xlat
push
xchg
lea
loop
ds
sarb
dec
pop
mov
popa
dec
fcmovnu
cmp
sti
out
scas
shr
pop
cmp
sub
push
cli
js
sahf
sahf
inc
sub
push
rclb
xor
pop
lock
xor
enter
mov
add
xchg
inc
sub
push
dec
sub
cwtl
loope
inc
adc
das
xchg
mov
push
ljmp
dec
fiaddl
inc
pop
iret
xor
ja
shll
lds
fldl
test
xchg
hlt
std
dec
and
cmp
pusha
xchg
scas
push
and
xor
jg
ljmp
pop
add
mov
int
xor
mov
jns
jmp
mov
rcl
and
push
dec
cld
stos
inc
mov
xchg
cmp
add
iret
mov
cwtl
push
es
in
dec
xchg
mov
xor
pushf
mov
fiadds
mov
jge
popa
jne
lods
out
xor
insl
adc
mov
sbb
fwait
call
pop
jmp
sub
push
pusha
arpl
inc
in
test
xor
or
frstor
icebp
in
dec
dec
leave
cmp
sub
cwtl
js
cltd
dec
sahf
add
mov
pop
pop
and
push
pop
add
mov
enter
pop
test
cs
cld
pop
inc
push
xor
les
mov
es
roll
scas
xchg
mov
mov
inc
xchg
push
fsub
inc
clc
pop
mov
sub
pop
jae
xchg
mov
stos
fwait
pop
push
ret
dec
add
dec
xchg
fmuls
cmp
pop
push
dec
fadds
aaa
sub
mov
leave
xchg
pop
inc
testb
fcomip
dec
and
hlt
xor
mov
sbb
in
add
stos
pop
data16
xor
dec
fstl
cmc
push
jle
sub
add
daa
sub
std
aaa
repz
pop
pop
jns
int3
aam
stos
ja
jb
xor
pop
dec
das
sub
sti
call
pop
adc
imul
idiv
pop
inc
pop
xchg
dec
mov
and
cmp
out
push
adc
push
aaa
stc
outsl
in
xor
loopne
stc
or
lods
fimull
push
xchg
cwtl
push
lds
jmp
jecxz
insl
fcoml
pop
mov
psadbw
or
or
dec
int
repz
test
push
int
mov
int
jb
add
dec
test
loopne
stos
imul
dec
ret
lret
jo
pop
ret
push
je
aad
push
fisubl
push
xchg
pop
shr
and
lret
test
and
repz
rcll
pop
dec
lcall
mov
sub
cwtl
in
movsb
sub
mov
movl
dec
fidivs
pop
push
mov
mov
xor
pop
xor
loopne
fisubs
sbb
test
popa
mov
push
cmpb
sbb
out
gs
add
lret
add
and
fisubs
or
add
aad
and
rorl
pop
loop
cmpsl
in
add
aad
push
cli
cli
popf
inc
outsl
pushf
sahf
push
aas
lock
dec
rcr
out
sub
mov
push
cwtl
nop
repnz
adc
mov
lock
add
sti
lret
nop
lods
mov
dec
movb
mulb
sbbb
xor
xchg
xchg
add
mov
mov
hlt
adcl
popa
enter
cmp
gs
lahf
cld
mov
push
sbb
stos
dec
movsl
imul
dec
das
add
loop
mov
sbb
xor
mov
movsb
or
decb
outsb
sub
pushf
jl
loopne
adc
adc
pop
cmp
les
push
dec
rclb
mov
dec
orl
xchg
jo
push
mov
mov
pushf
std
xchg
clc
bound
add
dec
fstl
mov
cmpsb
dec
push
inc
in
push
pop
mov
mov
dec
das
out
adc
cmp
dec
pop
rorb
out
sub
jecxz
fs
mov
dec
jle
sbb
mov
or
mov
push
hlt
adc
cmp
mov
mov
scas
mov
dec
mov
dec
jle
add
int
lods
add
test
dec
cmp
mov
and
inc
sar
mov
data16
sub
movsb
sbb
mov
cmpsb
std
js
dec
imul
mov
lahf
jo
or
int3
lock
mov
jo
jns
and
sub
mov
sub
xorl
add
mov
pop
pusha
inc
lea
fiaddl
mov
mov
and
jnp
pop
leave
add
lds
mov
addr16
js
cmp
dec
in
ss
loopne
arpl
sbb
addr16
xor
jne
cld
pop
fcomps
push
add
sub
es
lcall
out
xchg
std
pusha
jae
ret
mov
movsl
adc
jecxz
arpl
fldcw
pop
loopne
aad
push
icebp
mov
jle
xchg
and
mov
or
pop
jmp
push
jmp
mov
dec
sub
stc
push
add
adc
dec
in
repnz
lods
add
jb
jae
push
xchg
adc
pop
jg
arpl
mov
and
jne
cmc
popf
inc
fildll
stos
fiadds
push
jmp
and
jmp
int
mov
cwtl
fimull
lcall
adc
xchg
imul
flds
inc
fwait
and
mov
push
shrl
comiss
add
adc
xor
pop
mov
iret
nop
movsb
call
call
loope
fisubrl
and
aam
fs
lahf
sahf
xchg
sub
sub
mov
mov
lds
push
rcll
sub
xchg
clc
mov
xchg
sbb
adc
idiv
pop
shrb
xor
cmp
in
sbb
repz
pop
iret
je
sbb
mov
iret
dec
rorl
movsb
cmp
fcoml
orb
add
fstp
sub
mov
iret
mov
shlb
rol
mov
sub
daa
mov
push
xchg
jae
sbb
imul
daa
jge
test
sbb
mov
ret
xchg
mov
sbb
fnstsw
jbe
dec
add
bound
fsubp
cmc
dec
imul
jb
mov
or
jnp
js
scas
loopne
push
cmp
into
popf
dec
xchg
enter
xor
ss
cmp
loope
dec
imul
jg
xchg
test
jns
and
sbb
rorl
stc
dec
sti
outsl
pop
in
jns
loopne
adc
ja
or
sbb
fnstsw
sub
lds
fstps
scas
sbb
mov
lahf
pushf
xchg
js
test
into
xor
pop
jge
mov
aas
out
fsubs
cmp
clc
and
xchg
inc
inc
inc
rorl
mov
push
divl
ret
pop
xor
loope
cs
sbb
pop
vpmadcswd
loopne
ljmp
mov
cmpsl
fs
inc
out
hlt
roll
sub
pop
adcl
fs
les
xchg
outsl
sub
pop
mov
subb
ficoml
insb
add
mov
js
xbegin
fidivl
movsb
xchg
fldt
cmpsl
jns
stos
jnp
jo
icebp
cmp
pusha
mov
jo
test
adc
pusha
stos
dec
jb
add
mov
jnp
adc
repz
cmpsl
nop
insb
sbb
stos
cmp
xchg
je
add
subl
mov
arpl
sbb
push
cs
cli
push
int3
loopne
fsubr
cwtl
sti
adcb
pop
dec
jno
mov
sub
xor
jle
std
clc
lds
enter
cltd
fldenv
outsb
and
xchg
xor
lds
mov
jl
mov
push
cli
mov
scas
sarb
xchg
push
push
hlt
cmpsl
push
jmp
cmp
pop
mov
add
and
stos
sub
lret
adc
xor
repz
in
sub
jnp
mov
movsl
movsl
sahf
inc
jecxz
lds
std
loopne
inc
push
push
pushf
add
pop
enter
lds
imul
mov
mov
push
pmaddwd
sti
xor
and
mov
scas
push
and
and
mov
inc
dec
rorb
das
sbb
clc
push
in
inc
pop
and
push
loopne
scas
xor
jmp
pop
arpl
xor
add
push
les
jo
sbb
loope
insb
add
inc
das
in
ja
std
rolb
or
inc
sahf
push
sbb
mov
sti
pop
lret
jb
cmp
xchg
adc
fstps
sarl
rcrl
push
jbe
shll
out
push
sbb
cltd
in
das
mov
sahf
mov
add
push
push
inc
jle
pusha
adc
push
int
roll
adc
mov
xorb
jbe
pop
and
fstps
out
shl
xchg
movsl
adc
dec
bound
jnp
pop
mov
dec
jne
scas
iret
std
jp
fisttps
dec
jno
fistps
push
es
pop
push
js
fwait
mov
xchg
pop
test
adc
jecxz
pop
inc
adc
lahf
add
lahf
in
jle
leave
push
dec
inc
sbb
fisttpl
push
into
rclb
repnz
jb
add
pushf
xlat
add
popa
cmp
out
push
xchg
xchg
into
push
jmp
dec
popf
jmp
scas
rorb
add
dec
or
addr16
fs
lret
ljmp
fisttpll
lods
ss
sub
imul
xor
mov
push
adc
cwtl
imul
cmpsb
pop
mov
or
out
iret
and
inc
das
icebp
and
loop
xor
add
nop
ss
cmpsl
mov
outsb
mov
aad
into
pop
jno
mov
xchg
inc
aas
test
enter
push
fadds
and
in
xor
xor
jne
out
out
push
cli
xchg
dec
add
addr16
or
fisubrl
jne
add
cwtl
xchg
addr16
std
pop
jecxz
and
loopne
fwait
mov
loopne
pop
lea
lock
sub
addb
mov
fsts
stos
int
xor
jbe
outsb
dec
jne
std
jp
movsl
xor
popa
sub
mov
fnsave
push
cltd
push
and
jecxz
daa
ret
add
ds
jg
ret
in
add
inc
jmp
fsubs
dec
mov
sub
xor
lret
imul
jmp
adc
xor
and
shlb
mov
mov
push
jp
pop
dec
je
cli
mov
cmpsb
addr16
aaa
lock
and
adc
fsubrl
jbe
daa
testb
jecxz
int3
aas
test
mov
jns
outsl
adc
mov
sbb
cmpsb
stos
pop
inc
jle
jb
mov
xchg
and
aaa
mov
lods
lret
sti
xchg
out
mov
mov
jmp
cltd
scas
xlat
adc
test
pop
pushaw
fiaddl
push
pop
mov
mov
jno
xor
mov
jb
mov
dec
pop
and
xchg
shll
dec
push
andl
dec
les
jge
fidivrl
popf
scas
ret
adc
sti
lods
pop
fstl
jmp
rsqrtps
ficomps
mov
jns
lods
scas
into
cs
inc
push
mov
in
cmp
sarl
aad
mov
sub
push
jbe
add
aad
test
loopne
mov
sub
xchg
clc
adc
arpl
sub
mov
xor
mov
lods
sbb
cld
xor
mov
mov
xchg
aad
mov
js
test
xchg
mov
unpckhps
inc
mov
push
and
fwait
ss
xchg
fisubrl
pop
xchg
adc
or
in
xchg
or
ss
push
ss
sbb
mov
or
out
movsl
faddl
jge
ficoms
jno
push
mov
jo
add
or
pop
jbe
add
cmc
popf
jo
mov
mov
adcb
pop
inc
sub
mov
jb
xchg
stos
sarl
mov
add
cmp
mov
xchg
cld
sarl
xchg
lock
adc
mov
shll
and
jecxz
sub
outsl
or
pop
jl
jno
push
loope
dec
repnz
and
out
das
lods
xor
dec
mov
dec
test
leave
sub
insb
jmp
pop
enter
xor
lds
xchg
pop
arpl
jo
test
pushf
sub
xor
rol
fisttps
stos
sbb
int3
hlt
jae
adc
rcll
icebp
stos
mov
dec
mov
imul
imul
lea
or
lods
mov
test
xor
inc
xchg
adc
fcoms
ret
inc
xor
cli
outsl
xchg
sub
outsb
sub
mov
sub
hlt
push
cwtl
sbb
repnz
pop
sti
xchg
adc
dec
and
xchg
ljmp
lods
std
pop
pop
inc
sbb
push
inc
ds
shlb
pop
push
cmpsb
aam
mov
jno
and
and
dec
inc
and
outsl
test
jge
push
das
mov
fisubs
mov
mov
aad
pop
cmp
sbbb
adc
adc
outsl
mov
or
jg
fwait
orl
jecxz
sub
pop
mov
loopne
pop
cli
xchg
lahf
or
sub
or
ss
movsb
fs
xchg
mov
outsl
repnz
clc
pop
out
data16
outsb
mov
jge
or
lds
cmp
pop
call
jb
pop
cld
sub
and
cmp
int3
aas
das
stos
mov
or
inc
push
push
jns
fldt
arpl
sub
js
or
cwtl
loop
add
call
sbb
lock
sbb
lcall
stc
xchg
out
jno
dec
xor
mov
jbe
inc
jne,pt
test
test
mov
jg,pt
push
cmp
sti
jns
or
loope
cmp
mov
call
pop
jno
dec
sbb
aas
push
data16
or
movsb
sub
fisubs
repnz
cmp
mov
push
lret
push
mov
subl
ss
lea
aam
adc
es
in
rcll
imul
sub
inc
clc
inc
das
sbb
nop
push
jb
ds
xor
into
test
in
pop
movsb
fldenv
dec
pop
inc
shr
mov
lods
pop
jl
jnp
scas
das
es
into
adc
mov
sbb
fs
mov
jl
testb
lret
lods
add
insl
inc
aaa
in
scas
cs
lods
sbb
add
xchg
shlb
xchg
adc
mov
mov
sub
dec
rcrb
sub
mov
into
add
or
sub
mov
sub
sub
adc
push
jmp
flds
cs
push
fwait
loop
sarb
lods
rcll
mov
repz
fwait
dec
mov
jns
push
mov
or
into
in
aas
shrb
pop
mov
sbb
aaa
adc
adc
stos
arpl
or
lcall
lret
dec
sbb
gs
pop
fs
rclb
mov
jp
adc
lret
stos
xchg
test
adc
cltd
into
out
sbb
xchg
dec
lods
mov
pop
pop
adc
mov
out
ljmpw
ljmp
push
data16
in
push
inc
inc
lods
sub
cmp
sbb
xchg
popa
inc
pop
mov
lods
add
pusha
cli
pop
fcoml
jne
inc
rcr
popa
xor
jo
stos
push
loop
lret
js
test
test
in
cmc
pop
adc
xor
push
sub
inc
fcom
push
jl
cli
fcmovu
mov
ja
inc
insb
or
push
push
adc
rcrl
or
or
inc
stos
pop
xor
data16
stos
ds
dec
rcrl
ja
jp
ret
mov
or
inc
orb
loop
jb
mov
pop
nop
ds
sbb
mov
pusha
cli
daa
lea
sub
pop
add
stos
xor
call
add
cs
jno
daa
mov
mov
add
lret
jge
test
out
aad
pop
mov
xor
sub
mov
mov
cmp
fdivs
and
test
jl
rolb
xor
frstor
push
add
inc
ljmp
push
aas
dec
jecxz
jge
out
push
cmpsb
or
rclb
scas
enter
sbb
fsts
shll
cmp
insl
mov
pop
jo
jbe,pt
call
pop
aam
outsl
dec
data16
shlb
loop
fcoml
inc
insb
stos
scas
pop
arpl
daa
lea
adc
mov
pop
xor
jg
pusha
jb
cmp
pop
sub
sbb
popa
mov
insl
sub
push
loopne
sarb
arpl
sub
and
push
insl
jbe
pop
mov
push
movsb
test
clc
out
sbb
jbe
call
in
push
pop
inc
jmp
xor
fdivl
iret
inc
inc
jbe
aam
inc
mov
loopne
sub
stos
inc
xor
push
imul
sbb
and
hlt
push
pop
mov
lds
xor
inc
jmp
repnz
test
adc
fcomps
sub
aad
add
bound
aaa
sbb
nop
sbb
fadds
cmp
pop
xlat
sbb
cmp
lret
shrl
movsl
aad
push
scas
out
adc
push
cmp
ja
jbe
add
imul
xor
mov
inc
xchg
int3
xor
fcomps
jecxz
loope
cld
stos
mov
popf
sub
data16
cmp
mov
icebp
mov
mov
cmp
and
test
mov
int3
push
add
sub
xchg
xchg
adcb
pusha
adc
sbb
mov
das
dec
inc
ficoms
jg
or
mov
adc
lds
shrb
xchg
retw
mov
push
lods
pop
iret
sub
push
mov
into
pop
or
push
or
lret
je
cwtl
mov
or
push
ss
mov
push
jne
cmpsb
and
pop
sbb
xor
adc
jbe
fstpt
vmaskmovpd
rclb
jbe
and
jmp
shlb
xchg
mov
in
add
and
inc
xchg
inc
lea
aam
sysenter
jg
jecxz
pop
jbe
or
stos
hlt
mov
xchg
sbbb
and
mov
ljmp
ljmp
mov
stos
outsl
fcomip
movsl
inc
cld
cmp
out
xchg
sub
xchg
repz
testl
fildl
xor
push
pop
je
dec
xchg
popa
pop
cs
jle
mov
add
xchg
inc
and
roll
inc
inc
std
popl
and
push
lret
cmp
sub
or
rcrb
jo
dec
rcrb
arpl
scas
orb
mov
push
jne
mov
jp
insl
ret
dec
enter
add
cwtl
test
sbb
imul
xor
call
fs
mov
cmp
mull
jp
jno,pn
stos
lock
fildll
sbb
popf
xchg
setp
jb
dec
fs
adc
cmp
inc
push
sbb
inc
cltd
cld
loope
fisttpl
mov
int3
or
loopne
sbbb
lcall
decl
and
pop
add
lea
lret
mov
pop
pop
enter
mov
cs
popa
or
mov
lahf
iret
int3
les
cmp
dec
ss
scas
popa
shll
mov
aas
xor
std
pop
mov
cmp
pop
lcall
fwait
iret
loope
iret
add
aad
test
fs
jp
cs
and
shrb
inc
data16
fstps
or
jg
cmpsb
or
rorl
and
clc
cli
sbb
shl
add
xchg
cli
jno
mov
add
and
mov
push
sub
inc
incl
rolb
imul
dec
shlb
mov
js
lods
push
aas
subl
movsb
jp
or
cmp
or
fcmovbe
fdivrs
into
or
jno
fadds
push
mov
adc
mov
inc
or
lods
push
add
rcrl
ja
test
xchg
jmp
out
xchg
jbe
mull
inc
jl
push
pop
cwtl
adc
sub
adc
mov
mov
push
xorb
inc
out
jne
jg
in
dec
adc
pushf
aam
dec
std
sub
pop
sbb
push
xchg
jle,pn
xor
cmc
xor
mov
fisubrs
sbb
pop
sbb
mov
sbb
and
jp
popa
les
fstpl
shrb
mov
mov
aaa
sti
out
icebp
push
stos
popf
add
lea
inc
dec
mov
add
jo
jg
jmp
rolb
push
les
lea
dec
jno
push
jae
cli
loopne
adc
mov
push
mov
push
dec
mov
add
and
out
and
inc
xchg
call
addr16
push
push
mov
jo
in
pop
je
inc
mov
xchg
out
movsb
dec
sub
jmp
dec
mov
jae
push
inc
movsl
jbe
test
imul
sbb
push
fdivs
jae
push
out
andb
jmp
xor
pop
andl
out
in
mov
sub
sbb
pop
lret
pushf
pop
movsl
pop
mov
cltd
rorl
notl
inc
iret
adc
mov
or
scas
inc
cltd
in
xchg
push
ret
pushf
cltd
jge
sub
sbb
adc
xor
mov
xchg
mov
sbb
in
push
lahf
mov
sahf
sub
xchg
fistpl
pusha
jp
scas
std
cltd
ret
mov
inc
lahf
es
xor
add
testb
leave
fdivl
aaa
inc
dec
pop
push
jecxz
out
loopne
sub
cmp
and
jp
jns
cmp
pushl
jnp
mov
and
mov
cmpsl
mov
lods
mov
cmp
dec
imulb
jmp
cltd
jle
rcll
cmp
roll
cmp
stos
jae
jmp
mov
pop
xor
push
out
xor
addr16
sbb
dec
call
push
ds
mov
jb
and
outsb
shrl
movb
and
scas
ja
mov
mov
outsb
loope
rcr
xchg
mov
fwait
das
subl
in
mov
sub
mov
and
or
pusha
ja
sahf
outsb
sbbl
int3
adc
insl
call
pop
rcl
fcomps
jnp
xchg
pusha
fistpl
cmp
cmp
pop
jbe
dec
movb
push
add
and
cmp
incb
imul
les
or
addr16
push
sbb
nop
mov
add
scas
movsb
pop
pop
push
adc
popa
push
shlb
aam
or
mov
or
in
push
pop
cmp
dec
push
xchg
push
and
insl
xor
cwtl
es
and
lock
lds
hlt
cmp
or
xchg
cmp
repz
mov
inc
popf
mov
jmp
mov
lret
sub
insl
lahf
stc
and
adc
cmp
adc
or
ret
mov
adc
dec
jg
into
mov
je
mov
enter
mov
outsl
pop
mov
in
lahf
cli
and
sub
and
jne
stos
jne
jecxz
or
je
pop
adc
push
ret
cmc
adc
sub
sbb
decb
int
adc
icebp
stc
xchg
subl
fcom
sbb
dec
jbe
adc
stos
mov
test
dec
cmp
mov
xor
test
aas
add
mov
imul
gs
jg
mov
pop
ja
pop
cmp
jmp
add
dec
push
std
rcrb
inc
pop
dec
dec
cltd
mov
out
or
mov
push
aaa
add
nop
pusha
popf
jmp
in
add
aam
out
cmpsl
bound
dec
test
sbb
or
test
movsb
pop
push
call
aad
mov
cmp
sub
cli
into
sub
fsub
outsb
daa
sub
hlt
hlt
aad
fmul
jnp
or
jno
sbb
mov
testl
shll
je,pt
push
pop
adc
mov
fisttps
xchg
or
and
add
push
xchg
adc
jo
movsl
xor
fwait
mov
push
xchg
aam
sub
mov
enter
and
mov
xlat
pusha
xchg
dec
out
sub
jbe
outsl
mov
sahf
sub
push
psubd
bound
jo
es
xchg
fs
sub
je
cmc
icebp
lret
cmp
lret
add
out
and
test
mov
mov
mov
imul
stos
lock
roll
pop
cmp
inc
lea
pusha
enter
jecxz
push
mov
pop
cmpsl
shrl
xchg
adc
andb
push
and
sbb
sub
jno
xor
outsl
sub
pop
aaa
inc
scas
test
cli
pop
sub
outsb
cltd
mov
mov
pushf
int3
mov
mov
fcomps
mov
mov
xor
bound
pop
pop
pop
nop
xor
add
cltd
or
push
cmc
jo
xor
lret
dec
clc
jle
call
push
punpcklbw
daa
xchg
adc
addl
in
popa
jae
pop
cwtl
or
dec
add
nop
push
rorl
sbb
cmp
pop
mov
pop
popf
adc
inc
out
inc
stos
in
pop
das
cmp
nop
repz
das
add
dec
stos
mov
jecxz
loop
xchg
pop
fstpl
mov
or
pop
jnp
aas
out
add
pop
cltd
xor
lret
dec
mov
and
mov
adc
mov
stos
inc
jns
dec
jge
rep
pop
shl
outsl
jecxz
mov
cmp
fcmovnbe
and
iret
rclb
mov
pop
xchg
and
inc
or
add
jne
lock
ja
jg
pop
cmpsl
inc
sbb
arpl
xor
adc
mov
cmp
jbe
xor
popf
xchg
mov
loopne
inc
je
mov
test
hlt
dec
mov
jns
aas
sbb
test
nop
ljmp
xchg
dec
adc
pushf
into
repz
mov
sti
enter
aad
push
scas
mov
sbb
jecxz
xor
pop
faddp
test
stc
mov
push
fnsave
mov
and
cmp
cmp
fimull
pop
sarb
arpl
pop
pop
lods
cld
out
cmp
sub
hlt
mov
pop
ljmp
mov
cwtl
xchg
mov
jle
rolb
mov
mov
xchg
dec
jnp
aaa
dec
sbb
mov
je
fistl
cmp
or
cmp
xor
push
insb
lahf
fistpl
mov
pop
mov
hlt
es
xchg
inc
lock
adc
mov
jl
xor
test
adc
and
mov
in
movsl
mov
mov
shll
mov
ficoms
push
mov
inc
stc
fwait
outsl
sub
es
aaa
cmc
jb
leave
filds
imul
pop
fs
dec
test
mov
mov
lcall
pop
cmp
adc
sub
push
incl
pause
adc
jl
cmp
jne
sbb
xor
jg
xchg
ljmp
pushf
stos
jo
subl
cwtl
out
and
or
cld
aam
dec
cmp
xor
loopne
fbld
xchg
or
xchg
outsl
mov
pop
add
push
and
xchg
in
ss
jb
xor
cwtl
push
adc
push
sarl
mov
movb
jle
pusha
mov
je
sarl
das
pop
adc
rcll
popa
gs
sub
sbb
sub
pushl
push
mov
shlb
sahf
mov
jo
push
fucomip
stos
ss
inc
add
sbb
hlt
mov
scas
cld
movntps
add
mov
pop
inc
mov
fucomi
inc
or
test
repnz
jp
and
jl
ja
xchg
and
pop
cmp
loop
fldt
clc
sbb
mov
sbb
cmp
jne
imul
inc
test
jnp
sub
xchg
xchg
sub
or
les
aad
add
cli
sbb
mov
or
jecxz
xchg
pusha
push
aaa
sbb
push
adc
movsb
push
pop
test
testb
cmp
cmp
dec
adc
jle
das
fistps
and
test
call
mov
adc
jne
fnstenv
jl
push
inc
push
inc
push
aaa
xor
cmc
xchg
and
jns
fildl
jnp
push
pushf
mov
test
scas
lods
mull
push
popa
mov
fdivs
insl
xor
outsb
or
cmpsl
and
jno
inc
mov
cld
aas
and
imul
scas
xor
push
data16
lret
outsb
mov
mov
loopne
filds
test
or
cld
xchg
js
jle
mov
pop
in
push
clc
mov
mov
mov
add
pop
jl
fwait
mov
sub
imul
jno
pop
mov
stos
idivl
nop
sbb
mov
jb
cmpl
push
gs
outsb
adcb
fcmove
lahf
push
out
cwtl
sub
mov
fadd
shlb
mov
dec
cmpsb
in
movsl
arpl
mov
sbb
popa
aas
push
lock
add
push
rcrb
out
add
shll
test
out
clc
fs
xchg
and
fsubs
ja
mov
mov
adc
outsl
stos
sbbl
je
in
mov
push
out
push
sbb
divl
in
sub
push
cmc
pop
arpl
dec
shll
mov
insb
test
fnstsw
pop
testb
sbb
push
ja
scas
out
es
push
in
outsl
sbb
xchg
xchg
rolb
and
inc
adc
out
pop
sahf
popl
mov
stos
jmp
dec
inc
mov
dec
int
jns
push
pop
cmp
gs
shrb
loop
movsl
push
xchg
xchg
push
sub
stc
push
pop
aas
add
sbb
cmp
dec
add
mov
hlt
jno
ljmp
js
xchg
stos
scas
mov
sar
cmc
add
loop
xchg
fisubs
aad
shll
mov
or
xchg
add
sub
xor
xchg
and
pop
rcl
pop
and
pop
nop
repnz
imul
in
mov
mov
fimuls
fdivs
sbb
dec
enter
pop
mov
mov
push
or
push
pop
add
lea
icebp
add
mov
nop
fstps
vpcmpgtw
cld
dec
push
mov
sbb
mov
in
xor
mov
mov
jle
mov
gs
inc
mov
push
mov
repz
in
test
cmp
mov
adc
clc
test
cmp
mov
in
scas
dec
into
scas
jl
cwtl
fisubrs
mov
inc
fs
fchs
mov
push
rcrb
mov
dec
in
or
push
test
push
stc
adc
pop
mov
push
sbb
clc
cmpsl
cmp
cmpsb
inc
mov
mulps
dec
xchg
mov
jmp
or
xchg
pop
add
popa
movsb
inc
daa
xchg
cli
lret
xchg
mov
or
scas
loope
add
adc
jno
or
sub
xchg
aad
sub
sbb
sub
loopne
dec
jge
repnz
lahf
inc
out
and
ret
sbb
jbe
dec
mov
jns
push
xchg
mov
pushf
daa
sahf
cmp
mov
into
inc
fistps
jns
xchg
mov
nop
int3
cwtl
enter
or
xchg
test
outsl
jns
ss
or
sub
pop
lahf
stc
mov
arpl
hlt
or
scas
mov
xlat
mov
mov
shll
push
cltd
sub
cwtl
ficoml
ret
out
fimuls
push
les
jno
movsb
ja
int
es
mov
mov
push
dec
jno
mov
adc
aas
mov
test
pop
sbb
jbe
cmpsb
pop
dec
mov
cmpsb
xchg
in
lret
movb
mov
lret
add
mov
add
mov
shll
pop
pop
lret
pop
xor
xchg
mov
je
mov
sub
mov
sbb
adc
and
pop
in
in
pusha
push
push
aam
arpl
xchg
sub
outsl
sarl
add
pop
hlt
stos
and
mov
pop
scas
or
mov
dec
push
mov
xor
sbb
int3
sub
jecxz
and
imul
xchg
push
dec
stos
dec
pop
dec
push
js,pn
push
push
rcl
loopne
or
add
or
pop
pop
push
shrl
sbb
sti
jge
ja
lret
mov
inc
mov
sub
test
mov
mov
mov
and
mov
pop
xchg
lcall
mov
fwait
xchg
push
testb
and
mov
cltd
dec
or
roll
mov
dec
scas
pop
imul
cmp
das
cltd
jnp
mov
pusha
xor
movsl
stc
xor
rclb
push
mov
pop
cmp
pushf
rol
jmp
int
or
mov
xor
xor
xchg
jg
rcrl
ds
pop
inc
ss
into
repnz
jecxz
mov
mov
inc
aas
in
mov
pop
ficomps
jnp
into
jo
mov
sbb
xor
mov
dec
in
push
mov
das
stc
mov
or
loopne
cs
shll
jbe
push
jl
jmp
invd
add
fs
das
sbb
push
je
mov
jne
adc
popf
pop
xchg
jecxz
push
sbb
pop
push
push
data16
push
rcrl
cmp
push
in
cs
lods
push
pop
fwait
xchg
fdivl
lret
adc
js
xchg
mov
les
frstor
add
lods
push
pop
ljmp
xchg
rorl
mov
and
in
mov
xor
int
scas
jae
jo
xchg
das
repnz
repnz
sub
fs
mov
mov
test
cmp
iret
fidivrs
add
add
sub
push
inc
movsl
je
ljmp
rolb
mov
in
mov
mov
dec
pop
out
push
add
inc
out
fstpl
cmp
mov
sbb
lret
adc
clc
or
call
dec
aas
xchg
push
xchg
xlat
cmp
das
mov
push
dec
inc
clc
adc
popa
jg
pop
pusha
arpl
arpl
outsb
cmp
or
jmp
lahf
fldt
jmp
test
sub
fidivs
dec
cld
jecxz
arpl
inc
cmp
inc
aas
enter
xchg
movsb
stos
cli
xor
xor
mov
mov
add
out
sbb
sbb
out
push
cmp
scas
daa
icebp
or
sbb
jae
movsb
loopne
cmpsb
daa
repz
push
addr16
das
fsubrs
ljmp
inc
fidivl
mov
xor
fmull
add
mov
fs
mov
enter
sbb
in
inc
shll
adc
sub
mov
adc
sbb
cltd
push
loop
mov
push
orb
aam
add
sbb
filds
lods
subl
mov
push
push
pop
xor
sbb
mov
sbb
xor
enter
movsl
adc
mov
das
xchg
pop
sbb
cmp
jae
jp
or
jge
mov
or
jle
aam
in
and
int3
in
hlt
jnp
or
adc
ds
in
jle
cli
inc
push
dec
lods
and
push
lret
call
xor
dec
xchg
scas
pushf
out
pop
push
jmp
add
sub
adc
mov
into
lods
add
lret
xchg
stos
aaa
jno
dec
add
lods
test
push
dec
fcoms
adc
les
xchg
je
sub
pop
inc
jb
ret
imul
dec
nop
mov
jno
aaa
pop
jle
push
and
or
push
mov
cwtl
test
rclb
daa
adc
pop
sbb
mov
stc
out
jecxz
cmp
adc
popl
ret
out
rcrl
push
rcrl
mov
xchg
into
mov
adc
sbb
popa
add
lahf
xor
cmp
lret
xor
fsubrs
aaa
add
dec
enter
mov
scas
lea
jg
adc
mov
leave
xchg
mulb
fdivr
jae
or
inc
dec
add
adc
mov
lods
sahf
fsubrp
neg
ja
or
pop
or
jmp
subb
insl
hlt
or
andl
imul
aaa
pop
mov
cs
xchg
outsb
inc
in
inc
sbb
or
mov
xchg
or
mov
ja
mov
mov
push
push
mov
xchg
and
rclb
shlb
pop
rcrl
pushl
sub
dec
inc
arpl
ret
pop
mov
mov
mov
add
mov
pop
cmp
pop
dec
jmp
sar
and
fwait
or
test
je
adc
rcrb
mov
ret
cmp
imul
xor
mov
test
sbb
sub
jge
pop
outsl
push
mov
mov
ret
and
mov
out
mov
sbb
ret
nop
push
mov
sub
push
fstps
xchg
ja
push
icebp
dec
pusha
lds
xchg
cmpsl
test
pop
and
sti
js
pusha
lods
iret
scas
fwait
and
jecxz
xchg
jmp
jns
inc
filds
gs
test
xchg
lock
ret
rol
fbstp
insb
xor
xchg
jns
mov
insl
movsl
outsb
int3
fstpt
xchg
or
in
repz
insb
fcoms
cmp
inc
into
jne
mov
outsl
mov
aaa
inc
mov
js
mov
sub
mov
xchg
add
adc
mov
xchg
jb
fisubrl
jge
ret
in
dec
loop
in
std
mov
rorl
insl
push
mull
loop
mov
dec
adc
ss
add
mov
scas
cwtl
subb
shlb
xchg
subb
das
arpl
sub
test
loopne
jmp
mov
fwait
sti
xor
test
jge,pt
pop
xchg
dec
xor
mov
shrl
and
cltd
cs
mov
add
mov
shll
sbb
daa
inc
insb
dec
stc
lods
enter
inc
sub
xchg
sbb
pop
mov
jne
pushf
sbb
lret
lods
sbbl
out
jmp
sbb
cmc
pop
mov
mov
cwtl
aad
sub
subb
fwait
sbb
ficompl
push
stos
mov
jns
pop
or
sahf
and
lahf
rorl
loope
stos
stos
js
lcall
and
lods
and
sub
mov
outsb
xor
pushf
lds
punpcklwd
mov
push
ja
outsl
sub
ret
cmpl
cmpsl
mov
mov
pop
stos
out
xchg
pop
loopne
jns
loop
mov
push
insb
mov
xchg
adc
or
and
jb
mov
clc
out
leave
cli
inc
pusha
fdivp
inc
adc
sbb
and
enter
pop
mov
jno
adc
inc
sub
jg
push
sub
iret
fldt
fcoms
adc
or
mov
add
or
add
push
scas
neg
fs
push
adc
out
ja
es
mov
jp
pop
mov
or
cmpb
xchg
icebp
sub
push
popa
push
dec
aam
sbb
fisubrl
cmp
dec
cmp
mov
stc
shll
cld
lea
sub
leave
adc
mov
lock
ljmp
mov
inc
sub
adcb
jmp
inc
inc
xor
je
sub
test
bound
cld
mov
stos
jmp
jl
push
lea
orl
sbb
mov
jbe
pusha
push
fisttps
mov
xchg
lods
loopne
enter
cld
arpl
pusha
in
and
fs
push
cmp
nop
out
or
lods
xchg
mov
adc
cmp
insl
mov
xchg
or
fmull
imul
inc
dec
les
sarb
and
jge
inc
mov
pop
popl
pop
sti
inc
jge
push
pusha
sahf
aad
daa
push
ficoml
mov
dec
adc
add
fld
xchg
popf
cld
pop
daa
cmp
shlb
test
movlps
imul
dec
leave
push
mov
jno
filds
sub
sbb
inc
mov
push
cmpsb
jae
dec
cmp
adc
popa
dec
cmpsl
lods
insl
hlt
stos
loope
add
push
lcall
popf
cmp
cmp
xor
sbb
push
or
push
and
sub
out
shll
imul
fdivs
adc
inc
ret
mov
lret
cmp
jne
push
cmp
fadds
pop
adc
shl
sub
sbb
cmp
or
wbinvd
sbb
cwtl
into
ss
leave
or
dec
add
mov
mov
inc
or
leave
cmpsb
push
and
loop
push
stc
mov
cmc
or
aaa
test
sti
xor
cmp
inc
mov
push
inc
sub
sub
ja
lret
jg,pt
ja
adc
mov
pop
cs
pop
int3
gs
test
mov
push
fiaddl
cmp
imul
pop
dec
out
xchg
int
loop
daa
das
bound
sarl
fs
lcall
daa
adc
jecxz
sbb
lds
test
in
cmpsb
xchg
pop
sub
das
popa
mov
dec
ljmp
ret
sar
bnd
stos
or
scas
popf
push
xor
jmp
aad
fcoml
ja
loope
cmp
push
bound
lock
inc
stc
xchg
out
cld
cwtl
mov
mov
scas
and
dec
push
dec
in
test
xor
insb
and
addr16
mov
mov
mov
xchg
inc
or
mov
sub
imulb
aas
xor
inc
cli
in
xor
mov
push
pop
jge
cmp
mov
sahf
test
sbb
dec
jecxz
push
pop
mov
int
dec
lcall
lock
mov
mov
or
imull
xchg
outsl
insl
cwtl
bswap
mov
mov
cs
enter
test
push
fstpl
in
xchg
mov
xor
movsb
mov
popf
lret
push
loopne
cmpsb
and
mov
inc
outsl
jne
shll
xor
and
imul
pushf
jg
sbb
push
mov
mov
stos
mov
fsubrs
aad
jnp
or
jg
add
mov
or
iret
xchg
rcll
dec
mov
push
or
sub
andl
int
std
loope
jge
mov
cmp
inc
and
outsb
adc
pop
push
cmp
inc
cmp
xchg
xor
mov
repz
push
pop
lods
fisubs
ljmp
cmp
sbb
dec
sub
jb
cli
xchg
dec
or
mov
int3
cmp
int3
inc
xchg
and
or
xor
inc
jno
pop
jne
adc
push
test
jmp
xorb
insl
add
sbb
adc
jno
stos
neg
push
aad
jmp
push
dec
popf
dec
jg
rorb
push
ljmp
and
xchg
clc
dec
je
in
aaa
sub
pop
jecxz
jmp
and
fsubrs
inc
xor
lcall
inc
jecxz
test
mov
sti
inc
dec
adc
stos
push
mov
and
outsl
fxtract
stc
push
push
rclb
sbb
shrl
push
and
jg
sub
inc
xchg
jmp
xchg
lret
mov
dec
loope
popf
nop
rcrb
pop
into
mov
popf
jb
push
pop
sbb
loopne
ret
sbb
sub
push
and
pushf
or
mov
add
fsubs
xchg
les
jb
inc
aas
cmc
aam
xlat
sarb
push
scas
sub
lahf
inc
inc
mov
sub
jg
inc
ds
stc
and
push
stc
add
push
es
add
in
cmp
arpl
pusha
daa
lods
adc
inc
and
mov
pusha
pop
gs
aas
mov
outsl
jg
aad
pop
test
scas
xor
ficoml
inc
xchg
mov
popa
add
adcl
loope
cld
mov
mov
sti
dec
sbb
pushf
mov
add
js
dec
repnz
mov
mov
mov
or
jbe
mov
push
push
cli
jmp
and
sbb
cld
sbb
in
adc
mov
pushf
sub
sub
jp
divl
fs
push
frstor
sbb
sbb
nop
pop
cmpsb
sbb
test
fmull
rcrl
add
cld
addr16
aad
aam
xor
adc
out
sbb
inc
orl
xchg
inc
mov
pop
or
jp
sbb
xorb
jae
out
adc
mov
loope
xor
imul
call
xchg
mov
xchg
and
es
jnp
jnp
iret
ljmp
das
pusha
xor
stos
nop
iret
jge
movsb
cmp
mov
add
pop
div
sahf
ljmp
push
fsubrl
mov
and
pop
lahf
jp
xor
sbb
add
imul
jo
push
jmp
sbb
orl
in
jecxz
xor
xchg
popf
hlt
fnstenv
sub
fs
in
mov
pop
and
sub
cld
cmpsb
mov
stos
notl
cmp
mov
lahf
sub
mov
std
cmp
arpl
insb
pop
mov
iret
int3
mov
jns
inc
xor
hlt
dec
lock
int3
std
je
mov
jle
jbe
test
imul
js
lea
mov
repz
mov
test
push
or
dec
out
addl
push
pop
push
in
out
inc
pusha
or
or
cmp
add
dec
pushf
jg
inc
cld
jecxz
cli
inc
out
inc
enter
lret
insl
xchg
addr16
aas
sub
iret
les
dec
call
cmp
push
mov
gs
mov
movsl
or
test
or
pop
popl
jl
fistl
fnstenv
jp
sbb
sbb
push
dec
into
sahf
add
leave
jb
adc
daa
in
aas
cmc
mov
in
xor
pop
push
lahf
mov
inc
fidivl
mov
pop
xor
xchg
mov
mov
test
hlt
cmc
aam
dec
in
push
dec
and
add
shlb
jno
cmpsb
movsl
pop
lret
js
popf
and
enter
and
jmp
sbb
adc
jno
loope
lahf
xchg
rcrl
xchg
int
test
int
push
pushf
xor
aaa
push
ret
fildll
jbe
test
rclb
push
loope
pop
sub
and
pop
cli
push
loopne
test
xor
call
out
add
or
js
bound
xchg
sbb
lea
mov
push
dec
cmp
add
jg
negb
lret
aad
push
push
ds
cmp
or
fwait
call
xor
xchg
add
mov
jmp
xchg
mov
mov
jne
cmp
pop
xlat
or
mov
push
fcoms
test
fmull
dec
pusha
lret
mov
icebp
repz
dec
xchg
mov
push
push
xchg
out
outsl
es
sub
pop
imul
int3
pop
push
adc
aad
xor
pusha
sbb
out
adc
je
xchg
mov
sbb
lret
fldenv
pop
xchg
test
push
adc
and
push
ret
cmc
push
pop
pop
cltd
inc
es
imul
and
ret
inc
sub
clc
sub
lds
dec
out
jno
mov
out
push
popf
or
cmp
imul
lods
adc
lret
iret
pop
nop
cmpsb
sbb
xor
or
shl
inc
inc
icebp
xchg
in
out
cltd
test
negl
fadd
cmp
adc
ds
adc
push
cwtl
jecxz
xchg
jns
in
push
movsl
fidivrs
mov
push
mov
cltd
lret
sub
fists
push
outsb
int3
lcall
add
push
xchg
loopne
pushf
add
mov
sub
insl
pop
ja
test
test
inc
insb
jnp
sbb
jno
fisubl
loop
addr16
mov
sbb
subl
push
and
scas
xor
out
mov
push
pop
adc
and
sbb
ficoms
and
ret
xchg
jnp
mov
push
lods
push
sub
pop
mov
inc
inc
dec
mov
arpl
mov
fbld
int3
lahf
or
jbe
xor
daa
push
or
mov
ljmp
leave
jno
ds
jle
imul
movsb
mulb
jne
fwait
cmp
xchg
lods
mov
mov
cmpb
mov
roll
mov
mov
fsubs
jp
or
ljmp
in
lret
sub
insl
xchg
test
ja
cltd
popf
mov
push
div
xchg
shll
or
das
or
pop
mov
insb
xchg
or
lods
rcll
xor
xor
adc
mov
int3
es
add
mov
pop
or
addr16
jne
xchg
orb
mov
out
add
ja
or
test
stos
je
ljmp
popf
push
popa
mov
sub
scas
lock
mov
cmp
in
testb
adc
add
jg
jle
hlt
jo
xor
cmp
in
or
fidivrl
jb
mov
or
mov
push
lret
sub
outsb
push
or
roll
jne
jne
negl
add
daa
stc
ljmp
int3
jne
test
movsb
adc
push
add
xchg
movl
mov
or
jl
mov
and
out
stc
push
mov
cmp
repnz
lods
and
inc
or
push
orl
jnp
arpl
ljmp
cmpsl
ja
fsubs
fsubrs
xchg
adc
dec
icebp
inc
adc
mov
xchg
sbb
imul
pop
xchg
dec
xorb
sub
jb
f2xm1
inc
fsts
adc
sub
lahf
add
lods
pop
gs
mov
jbe
jns
and
shl
inc
pop
mov
lods
sub
in
cmp
jb
sbb
or
lods
rcl
push
xchg
add
sahf
sbb
xchg
dec
aas
jno
dec
sbb
imul
lods
mov
jge
pop
dec
or
mov
xchg
shr
jle
rorb
mov
sahf
push
out
mov
jle
cmp
mov
aas
stos
addl
mov
into
push
imul
adc
out
sbb
mov
hlt
sbb
call
es
jecxz
lea
xchg
stc
jl
pop
push
movsl
scas
push
data16
in
adc
jg
xchg
lea
dec
xor
jno
pop
shl
in
cmp
add
enter
mov
stos
loope
and
sub
test
pop
inc
repnz
es
bound
sub
add
pop
roll
and
inc
push
test
jmp
cli
sbb
sub
inc
lds
sub
jae
call
or
xor
and
das
dec
push
push
sar
scas
or
and
fstps
push
add
mov
push
lcall
sbb
mov
int3
and
pop
aaa
xchg
mov
out
push
jp
cmpsb
out
test
sahf
dec
pop
in
dec
shlb
lods
movsl
mov
pushf
fstl
sub
out
addb
test
test
addr16
daa
addl
loopne
aam
fistpl
jle
aas
vmread
jb
ret
rorb
addb
out
outsl
enter
add
mov
push
lds
mov
mov
xor
mov
outsb
jle
sbb
psubusb
roll
sub
and
stos
jle
ljmp
fs
loop
lock
jno
sti
push
push
clc
jno
pop
inc
add
jb
push
outsl
adc
pushf
sub
xchg
lods
add
mov
dec
out
adc
sub
je
or
call
shlb
push
mov
dec
in
pop
and
cld
lahf
cmp
aam
cmpl
xor
sbb
in
mov
xchg
xlat
gs
stos
int3
mov
sbb
rorl
cmp
decb
push
push
push
insb
cmp
mov
lods
sbb
adc
pop
lcall
sbb
into
sbb
mov
out
cmpsl
fsubs
jle
sarb
and
loope
movsb
mov
lds
sub
dec
bound
cs
js
ret
push
loop
movsb
cmc
push
xlat
push
aas
enter
add
cli
fst
ljmp
cwtl
or
mov
cmp
insb
push
mov
subl
xchg
lock
push
fisttps
xchg
shl
aaa
pushf
mov
sbb
mov
aam
and
inc
add
lea
lock
mov
fcomps
or
xor
add
hlt
adc
test
mov
push
adcb
and
popf
jb
inc
sub
ja
and
sub
or
jno
and
cli
lods
xchg
icebp
dec
iret
pop
pop
loopne
sbbb
inc
mov
cmp
mov
xlat
sub
jno
std
dec
pop
mov
pushl
mov
inc
xchg
xchg
int3
imul
mov
imul
mov
or
sbb
cmp
in
cld
adc
jl
or
int3
popf
fwait
inc
jecxz
add
dec
xchg
sahf
xlat
imul
push
leave
mov
sub
ja
insb
insl
dec
cmp
in
pusha
arpl
mov
fbld
arpl
outsb
das
fwait
or
mov
add
sub
dec
scas
aas
push
or
mov
std
mov
es
out
add
jp
xchg
push
fiaddl
fisttps
addr16
add
aas
imul
dec
sbb
leave
mov
insb
adc
orb
or
fwait
lahf
push
aad
pop
in
jb
inc
stos
bound
sbb
pop
sbb
jmp
ror
pop
jnp
push
jno
jmp
cld
arpl
lahf
stos
stos
or
pop
test
test
or
and
bound
popf
arpl
cmp
push
jbe
jns
mov
mov
sbb
popa
mov
test
call
mov
shlb
push
add
and
adc
or
rcr
in
pop
shl
jo
in
and
dec
adc
inc
cmp
mov
cmc
mov
fiaddl
mov
shr
xor
inc
mov
mov
scas
cmpsl
xchg
dec
arpl
or
rorb
enter
mov
int
cmp
jmp
aas
mov
lahf
or
inc
imul
push
or
and
cli
xor
adc
mov
out
lahf
jmp
jge
sub
repz
out
call
dec
sub
mov
fnsave
lahf
pop
push
imul
and
fdiv
inc
cmp
push
imul
cwtl
and
imul
sbb
inc
adc
insb
jnp
mov
pop
nop
insl
and
dec
jne
push
sub
pop
into
jge
mov
push
pushf
out
fwait
popa
rcrl
inc
xchg
inc
int3
sbb
pop
inc
mov
cmp
dec
das
push
dec
sahf
subb
repnz
add
lahf
add
aam
mov
rclb
push
pop
in
sub
aas
jmp
sbb
push
inc
or
add
std
add
push
pop
rclb
sub
mov
sbb
lods
adc
stos
and
int
imul
vsqrtps
jb
mov
push
data16
jo
sub
mov
dec
mov
jbe
mov
test
cmp
movsl
lods
andb
jl
insb
add
flds
sbb
inc
jl
cmp
add
jnp
lods
adc
jp
nop
sahf
pop
int3
and
or
xor
fildll
cmp
xor
jp
adc
fists
lods
inc
sar
fcmovbe
and
mov
pop
mov
mov
data16
xchg
sbb
pop
push
pop
mov
inc
jl
xchg
mov
dec
adc
xor
dec
mov
int
push
xlat
rclb
mov
inc
mov
jo
aam
pusha
add
ret
shll
insb
xchg
in
lods
lods
xchg
mov
aam
int3
pop
aam
xor
or
data16
out
and
xchg
xor
sbb
and
dec
out
call
jmp
add
inc
sarl
cmp
movb
imul
aaa
leave
pop
and
mov
add
add
xchg
lods
loopne
call
shrl
mov
stc
add
stos
lcall
jle
sbb
lcall
sarb
mov
mov
repnz
mov
push
roll
dec
insb
add
or
mov
int3
imul
mov
data16
dec
pusha
stos
or
daa
clc
popa
ss
mov
lods
sar
testb
sub
add
fisubrl
dec
mov
push
js
cwtl
push
xchg
mull
ds
jg
or
mov
sbb
mov
popf
adc
in
sub
les
inc
and
loopne
ret
cli
lret
aaa
cltd
mov
lock
sahf
clc
push
fldenv
or
mov
into
outsl
scas
aam
lods
aad
dec
dec
in
mov
cmp
cmp
scas
jne
or
push
aas
sarl
mov
cmp
insb
es
out
xchg
lret
push
mov
js
pop
or
cwtl
jl
out
xor
cmp
sub
test
mov
rolb
jle
insl
sbb
dec
jmp
dec
sbb
scas
aam
mov
loop
sbb
xchg
and
or
insb
jg
sbb
lods
adcb
dec
in
lahf
adc
es
add
mov
mov
and
jl
int
iret
stos
in
cmovl
pop
in
fdivrs
xchg
mov
sbbb
and
out
pop
out
lods
and
push
daa
movnti
addb
adc
lock
xlat
cmp
pop
sub
lret
inc
data16
sub
sbb
out
push
push
dec
push
jmp
jmp
fstps
arpl
in
data16
sahf
xor
push
cmp
test
div
sti
sbb
jge
xor
mov
imul
pop
aam
fnstsw
cs
lea
mov
inc
dec
jns
ss
mov
push
aaa
call
lret
movsl
cmpb
xchg
dec
lcall
out
push
fisubrs
enter
dec
jg
push
xor
gs
mov
aam
add
adc
xor
lcall
decl
push
push
outsl
mov
mov
mov
xchg
sub
popa
xchg
mov
sub
pop
ror
sbb
inc
icebp
cli
addb
lahf
adc
push
push
pop
sbb
mov
inc
je
pop
sub
ret
aaa
cmp
test
lahf
mov
arpl
jle
fldl
testl
jns
pop
test
aam
add
call
and
int3
scas
add
addr16
mov
sbb
jnp
aaa
popf
subb
imul
inc
dec
or
push
scas
cmp
idivl
or
or
mov
hlt
es
mov
cmp
jne
enter
popf
loop
and
ja
leave
pusha
jno
rorl
sarl
lea
pop
divps
sub
push
add
rclb
mov
inc
fdivl
xchg
push
mov
jae
sarb
or
addb
push
jno
push
out
xor
add
ljmp
popf
sbb
dec
or
mov
into
sbb
iret
fistps
xchg
sahf
mov
jmp
sub
add
xchg
aad
sub
stos
push
in
xor
shlb
push
mov
or
sbb
fsubl
xchg
fldcw
and
jl
dec
fdivs
mov
nop
mov
xchg
mov
ja
xchg
xor
xchg
sub
dec
push
sbb
mov
jae
lahf
cli
sub
cmp
add
in
push
aaa
mov
mov
and
test
mov
imul
ds
adc
lods
inc
shrb
roll
mov
pop
test
test
ja
jl
pusha
push
and
mov
test
mov
adc
adc
jge
xor
out
dec
outsb
inc
push
inc
inc
int
adcl
jl
pcmpgtw
ds
sub
lret
leave
push
lods
dec
repnz
sti
xchg
jae
imul
std
jnp
into
xchg
push
pop
fbstp
or
xchg
sub
inc
cmp
adc
orl
jge
ret
xchg
sub
and
in
mov
cmpsb
out
imul
mov
adc
fstpl
jl
xor
std
adc
mov
roll
jge
push
jo
mov
push
lods
ss
sti
xchg
mov
cli
lahf
fsubrl
in
test
dec
out
pop
xchg
add
dec
rorl
cli
xor
fnstenv
imul
mov
mov
push
add
sub
dec
shlb
pop
int3
mov
test
pusha
mov
push
sbb
push
call
lret
xlat
adc
popa
incb
add
mov
xchg
push
daa
mov
add
xchg
jnp
jns
inc
mov
xchg
push
test
or
or
push
and
sub
cltd
pushl
add
and
jbe
fcoms
push
iret
inc
out
lods
fisubrs
and
ds
mov
mov
mov
xor
je
mov
cmpsb
insb
xor
sub
rorb
rcrb
mov
ds
xor
mov
xchg
fsubrp
and
test
add
out
push
push
loop
jae
test
pushf
add
sbb
pop
out
pusha
push
push
pushf
xchg
stos
cltd
loope
jge
mov
jle
sub
loopne
cli
mov
mul
mov
mov
jecxz
shlb
pop
xchg
leave
jl
xor
mov
sub
pop
sub
and
insl
add
xchg
and
add
aaa
jge
mov
pop
mov
and
call
xor
adc
cmpsl
and
lock
outsl
fcoms
jle
inc
dec
xor
shlb
fstps
dec
movsl
inc
loope
add
jp
out
dec
icebp
pop
lcall
ds
nop
xchg
dec
mov
cmp
adc
lea
das
out
xor
adc
aas
cli
fyl2xp1
jecxz
cmp
and
pushf
cs
inc
and
pop
adc
out
shr
or
xchg
les
dec
mov
stc
aaa
lds
ljmp
outsb
rcll
push
jns
push
pop
sbb
push
and
fisubrs
adc
sti
popa
inc
push
pop
push
dec
sub
loope
lahf
int3
out
in
pop
jo
jg
cltd
mov
aas
aad
aas
nop
lock
enter
cmp
adc
lock
mov
in
fcmovnu
rolb
lret
test
fs
bound
push
or
mov
movsb
and
mov
cmp
fists
imul
xchg
test
inc
mov
das
mov
adc
sub
mov
loop
mov
inc
dec
xor
and
loop
mov
xor
gs
mov
or
lcall
sbb
addr16
cmp
dec
adc
iret
push
dec
cmpl
xchg
jo
int
push
jle
jae
jecxz
nop
daa
pop
lock
in
xor
clc
loopne
repz
jnp
push
fdivrl
xchg
mov
std
and
out
clc
stos
nop
lea
xchg
cmp
loope
cmpb
add
ljmp
aam
test
jmp
sahf
mov
mov
xchg
rolb
cli
leave
adc
xor
pop
and
ds
inc
jle
jecxz
adc
mov
sbb
dec
icebp
gs
or
sub
mov
fnstenv
loopne
fmull
stos
add
cmp
pop
add
in
mov
and
cltd
fildl
jne
ret
insb
inc
xchg
dec
fwait
call
and
push
es
cwtl
fisubl
call
divb
divb
rorl
stc
jno
adc
xchg
sti
push
sbb
adc
jle
mov
push
and
xor
mov
cmp
inc
insl
int3
mov
push
mov
mov
pop
in
xchg
or
mov
jle
and
imul
mov
int
jle
cwtl
or
fisttpl
ficoml
pop
jne
sbb
fildl
push
mov
jno
add
shlb
dec
into
cld
sub
or
jae
pop
popa
loope
inc
jecxz
jecxz
mov
xor
lret
in
xchg
pushf
fistpl
rcl
fists
add
ja
and
lds
outsl
imul
ficompl
test
std
dec
rorl
aad
incb
rclb
test
push
sahf
and
jle
mov
stc
push
shrb
loopne
jge
insb
or
clc
in
fs
cltd
testb
inc
dec
or
and
ja
mov
jle
aam
inc
fisubs
cmp
popa
jbe
mov
adc
mov
push
mov
inc
pop
jmp
scas
inc
fdivrs
ds
xchg
xchg
adc
mov
mov
ss
js
pusha
ds
adc
out
xchg
decb
inc
cmc
or
stos
orl
and
jge
fxch
fs
mov
jno
aad
adc
mov
sbb
loop
pop
cs
add
cmp
jmp
cmpsl
pop
lea
popf
and
roll
dec
add
mov
sbb
cli
pop
movsb
popf
out
test
sbb
lea
es
int3
sbbl
ds
inc
adc
pop
clc
mov
jmp
sahf
ret
xor
shll
and
sbb
in
sahf
outsl
jae
cs
frstor
and
push
mov
sbb
andb
sbb
and
mov
adc
fdivrs
std
es
jmp
mov
movsl
sbb
fcoml
xchg
cwtl
aam
fmuls
aad
push
mov
jg
cld
cmpsl
fiaddl
fsub
outsb
sbb
cmc
or
jns
sbbl
sbb
mov
sbb
aad
lds
dec
and
pop
pop
test
add
adcb
stos
imull
std
mov
jmp
dec
add
into
mov
jmp
mov
mov
mov
adc
scas
jne
or
outsl
and
dec
dec
and
mov
add
xchg
push
lock
popa
xor
inc
movsb
push
push
pop
inc
lods
fwait
sbb
cmp
push
fs
fs
cmp
lcall
mov
inc
clc
jb
pop
or
sbb
ja
mov
ja
inc
add
test
fs
cmp
jo
es
jo
int3
sahf
pusha
bound
std
shll
arpl
repz
fiadds
jg
jae
leave
adc
xor
mov
cld
insl
dec
jnp
pop
iret
jl
inc
nop
insl
xchg
test
or
inc
xor
repz
push
xchg
xchg
sbb
test
popf
jle
adc
cmp
push
test
pushf
add
mov
inc
lret
in
sub
push
inc
sub
dec
and
jge
movsl
pop
lcall
cltd
gs
stos
scas
and
out
fs
mov
mov
dec
push
call
loopne
xlat
mov
sbb
ss
inc
stc
adc
lods
fcoms
int
cmp
ret
aam
jno
mov
push
fsubrs
adc
pop
xchg
outsb
fs
cmpsb
stc
jae
mov
loopne
or
imul
mov
dec
ret
insb
aaa
sbb
mov
add
cltd
mov
ljmp
jge
cmp
enter
cmp
push
shl
ljmp
add
mov
lock
inc
into
rcll
lds
cmp
add
rol
enter
fldt
outsb
pushf
jnp
fnstcw
notb
mov
and
das
pop
add
int
mov
adc
aaa
lahf
ja
xlat
aaa
add
imul
mov
adc
add
gs
mov
jge
enter
jae
out
xchg
and
call
ret
dec
stos
rorl
insb
mov
xchg
pop
mov
sar
aas
jecxz
arpl
lds
mov
pop
inc
fisubrl
and
jo
loope
cs
fsubrs
pop
mov
adc
mov
cltd
in
push
jns
imull
pushf
inc
ss
stc
pop
jo
das
push
int
cmp
xchg
pop
mov
aaa
jnp
cltd
leave
mov
mov
dec
cmp
repz
pop
cmp
int
mov
mov
bound
mov
flds
outsb
scas
lods
adc
int3
test
mov
subb
test
aad
dec
inc
cs
jns
mov
je
addb
cmp
mov
cli
iret
and
in
dec
lcall
ret
mov
xor
inc
stos
fcmovne
lret
pop
inc
and
rorb
dec
xor
jmp
sub
adc
out
out
sbb
jns
pop
sti
lret
repnz
cwtl
rcl
dec
gs
sbbl
pop
aam
lock
inc
imul
xchg
xlat
outsl
addr16
stc
adc
adc
xchg
jle
cwtl
sbb
fdivs
stos
cmp
shrl
ret
test
fmulp
push
stc
jg
insb
es
std
sbb
mov
ljmp
adc
mov
and
or
mov
loopne
fs
jae
int3
fsub
fwait
sub
outsb
lods
inc
mov
xchg
in
pop
inc
jl
adc
cmpsb
rcll
xor
leave
pop
inc
push
push
cmpb
push
jmp
les
sahf
xor
ljmp
fcomps
mov
clc
jle
rcll
xchg
aas
gs
xlat
in
sbb
test
mov
outsl
sahf
jp
jmp
mov
xor
ficoml
stos
inc
lret
fwait
out
inc
cltd
test
rcrb
dec
je
lods
fs
movsb
mov
xor
dec
jecxz
cs
xchg
mov
mov
scas
ficoml
xor
imul
dec
cs
test
pushf
scas
sbbb
and
or
mov
dec
adc
scas
jns
or
inc
inc
jle
cmp
lods
arpl
idivb
push
movsl
out
rcrl
and
in
out
mov
popf
aaa
add
cmp
shrl
stc
dec
sbb
jmp
mov
pop
mov
in
hlt
lods
sub
insb
mov
mov
fmuls
dec
push
push
rolb
mov
dec
sbbb
fisubl
dec
sub
sbb
bound
inc
sub
rclb
ja
pop
clc
cld
sbb
jle
data16
leave
fldenv
les
ror
outsb
dec
movsl
in
xor
nop
testl
dec
out
pop
mov
push
jl
dec
movsl
mov
mov
add
and
xor
push
ds
sub
sbb
cld
data16
sbb
mov
dec
movsb
js
imulb
test
lret
and
insl
int
out
fisubs
addr16
mull
repz
jle
movsl
pop
mov
sbb
rcrb
loopne
lock
mov
mov
data16
mov
dec
inc
pusha
clc
add
int
insb
jb
aas
xor
cmp
cmpsl
sub
orps
sub
cmpsb
xchg
fcompl
loop
adc
negb
mov
xchg
rorb
leave
xor
scas
pop
sub
nop
call
cmp
pop
xor
std
inc
pop
sbb
add
mov
cmpsl
pop
loope
inc
loopne
add
imul
sti
arpl
sub
arpl
mov
sbb
inc
push
sarb
pop
xchg
push
add
rol
and
daa
mov
pop
cmpl
xchg
mov
mov
pop
scas
jge
add
dec
fs
mov
outsb
incb
inc
jbe
mov
je
pop
scas
dec
in
push
mov
lret
add
pop
mov
pusha
or
sbb
push
sub
fbstp
inc
push
enter
xchg
push
adc
repnz
xchg
enter
xchg
clc
call
dec
cs
pop
xchg
and
in
out
idivl
icebp
xchg
xchg
xlat
and
repnz
fcoml
jmp
inc
pop
sti
cwtl
insb
dec
cmpsb
lcall
dec
xor
sti
adc
jp
and
ds
adc
cmp
pop
xor
mov
repnz
lret
pop
adc
loope
aad
and
pusha
popl
xlat
adc
rcll
fsub
sub
sbb
test
js
xor
xchg
pop
out
aas
jo
sub
lods
stos
push
fcompl
shlb
fxch
inc
push
mov
push
adc
out
jo
cltd
outsl
jns
stos
fistl
out
dec
sub
mov
pushf
pop
jge
or
fsubl
jle
jns
pop
cmp
adc
popl
shrl
and
idivb
movsl
je
add
loopne
mov
adc
sbb
je
mov
xor
pop
repnz
ret
sub
mov
inc
sbb
inc
mov
sbb
jmp
in
enter
pop
xchg
xchg
pop
add
test
cmp
int3
xchg
push
sti
jg
stos
add
mov
xor
sub
mov
cmpsb
pushf
push
pop
or
in
ss
jmp
out
adc
or
adc
cmp
dec
jbe
cld
pop
add
xor
lcall
xchg
xchg
in
test
jno
ficoms
shll
daa
test
into
sbb
pop
int3
mulb
xchg
popa
je
iret
ja
cmp
imul
inc
loop
pop
push
adc
nop
pop
out
sub
push
push
push
mov
jo
xchg
scas
cli
stos
lret
pop
js
inc
int
sub
popa
mov
jmp
jno
in
lds
sahf
xor
adc
mov
and
aaa
test
add
stos
std
mov
cmp
ss
pop
cltd
sbb
adcl
aaa
jne
ds
subb
mov
cli
inc
hlt
bound
adc
xor
std
imul
sahf
fmull
icebp
arpl
sub
mov
mov
test
or
pop
xlat
mov
iret
ret
js
mov
mov
daa
sbb
out
push
sbb
popa
dec
sbb
fdivs
mov
lock
rolb
cmp
pop
sbb
pop
fwait
cmp
inc
outsl
xchg
imul
add
fimuls
push
imul
push
xor
sti
negl
in
add
int
push
fdivs
dec
or
push
or
push
adcl
sbb
das
sbb
lahf
idivb
lds
sbb
in
jmp
and
dec
jecxz
mulb
je
out
jecxz
mov
sbb
inc
ss
xchg
push
sub
jae
repz
mov
stos
lods
in
es
gs
and
jnp
repz
xor
adc
lcall
lods
dec
enter
add
scas
nop
jl
pop
jmp
insl
sbb
lret
clc
aaa
mov
test
adc
loopne
cmp
mov
aas
addr16
daa
jb
xor
std
sti
cwtl
mov
push
js
mov
add
xchg
cmp
jns
or
and
scas
xor
sub
scas
mov
cli
push
cs
hlt
dec
mov
mov
mov
inc
sbb
loop
into
mov
jmp
sbbb
mov
fnstcw
push
gs
pop
mov
sbbl
mov
roll
jmp
pop
push
jge
add
scas
jno
aaa
jns
call
or
sbb
pop
inc
cmc
jge
sbb
or
push
jl
cs
xchg
addl
mov
add
inc
nopl
notb
mov
cmp
rcl
push
adc
push
rcrl
jnp
ljmp
mov
lea
mov
fst
insb
sbb
in
cli
pcmpeqd
add
int3
stc
cltd
or
lods
fisttps
jge
fistpll
sub
fstp
loop
fs
iret
mov
sbb
cmp
push
push
xchg
and
cltd
aad
jo
cltd
xor
test
or
outsb
in
test
aad
pop
stos
mov
pop
and
test
cmpsb
ds
es
cli
cmpsl
in
adc
push
xchg
stos
jg
xchg
mov
jnp
push
enter
inc
or
pop
sbbl
or
lret
jle
shrl
adc
xor
inc
mov
add
push
xchg
jmp
mov
xchg
popf
popa
cmp
add
inc
jae
ja
gs
cmc
jne
sbb
pop
pop
movsl
fs
mov
in
dec
push
pop
mov
popa
lret
in
gs
or
mov
adc
clc
jne
dec
xor
lret
cwtl
xor
sbb
xorb
lret
or
fidivs
and
aad
into
cmp
xchg
out
in
lcall
xor
mov
fistps
sub
mov
jnp
sbb
mov
cld
pop
outsl
sub
fnstenv
pop
push
nop
out
hlt
jae
sub
scas
add
ljmp
push
pop
push
rcll
and
dec
rcll
mov
iret
and
and
sti
cmp
or
shlb
popa
sti
mov
adc
fs
das
mov
add
cmpsb
cmc
xchg
mov
icebp
hlt
sbb
lret
xchg
sbb
cmp
cmp
pop
xor
cmp
cmpps
mov
push
push
dec
stos
xor
mov
xchg
imul
xlat
sbb
adc
mov
cmpb
popf
mov
insb
jg
sbb
dec
adc
mov
dec
pop
jle
push
cmp
or
mov
fistl
test
aaa
loop
outsb
neg
adc
repnz
sub
shrl
imul
outsb
clc
xchg
xchg
outsl
xor
pop
adc
sub
inc
inc
jae
mull
ds
cld
jmp
cmp
inc
fstl
fs
iret
pop
dec
out
data16
fldln2
add
add
push
sbb
clc
cmp
xchg
aam
insl
cmp
movsb
fwait
inc
dec
mov
cmpb
repnz
jnp
xor
and
test
scas
iret
push
out
jnp
xchg
sub
out
lods
test
je
sti
int3
aam
stos
jns
sahf
lcall
mov
and
clc
aad
mov
repz
sbb
stc
imul
pop
xor
jle
scas
cmc
jne,pt
movsb
xchg
movsl
mov
cmp
or
dec
jl
cmpsl
in
pop
ljmp
or
mov
lods
sbb
xchg
add
jbe
sbb
leave
sub
mov
ljmp
jb
sbb
ds
dec
or
or
std
mov
and
hlt
rorl
out
jecxz
mov
adc
pop
fwait
add
stc
and
scas
movsb
xor
inc
lret
ja
cltd
fwait
push
inc
push
mov
pop
fimuls
dec
cld
int
mov
movsb
push
cmp
sti
mov
pop
pop
adc
sbb
repz
push
popa
sub
loopne
int
push
cmp
lods
or
out
xchg
lret
xor
xchg
dec
jmp
enter
loop
scas
xchg
and
jbe
daa
shl
movb
mov
push
jecxz
xchg
cmpsb
aaa
sti
fld
and
add
push
rcrb
test
mov
sahf
inc
and
xchg
pusha
cmc
jo
jge
push
sbb
inc
xor
sub
jbe
or
subb
rorb
jl
push
shll
mov
aaa
prefetcht0
adc
mov
push
mov
in
nop
pop
ds
pop
mov
mov
or
test
mov
or
leave
sbb
js
out
int
mov
popf
in
xchg
xor
xchg
ds
cmc
sbb
ds
sbb
push
int3
sbb
idivb
sub
inc
mov
jo
and
out
enter
popa
fnstsw
icebp
loopne
or
xor
je
popa
inc
stos
cwtl
inc
cld
insl
xchg
fidivs
push
lock
jle
dec
mov
inc
fisubrl
mov
or
adc
icebp
adc
lret
jecxz
cmp
dec
sti
fistpl
mov
testb
hlt
mov
xor
sbbb
popf
sahf
inc
mov
push
popa
mov
xchg
cmpsl
adc
lods
lock
testl
into
add
and
adc
mov
cmc
arpl
add
fiaddl
push
push
mov
push
dec
xor
pop
adc
cs
outsl
pusha
dec
lahf
pop
fs
lds
dec
pop
inc
adc
dec
cmp
and
mov
mov
dec
cwtl
in
clc
mov
ja
xor
sub
or
xor
pop
addl
addr16
outsb
enter
jmp
in
xchg
push
mov
aaa
push
leave
std
hlt
and
mov
push
addr16
sbb
push
addl
subl
xor
lods
or
rolb
sub
jbe
mov
test
cmpsb
lret
mov
bound
fisubs
out
fnstenv
adc
fwait
mov
aad
invd
fisttps
out
movsb
mov
inc
and
inc
pop
int3
push
jp
mov
jp
xor
inc
adc
in
mov
adc
mov
rcrl
nop
mov
inc
cld
jmp
and
sbb
push
inc
dec
stos
xchg
add
stc
mov
fimuls
iret
lods
xor
adc
loop
push
jae
push
jns
mov
push
fisttpl
inc
clc
sub
les
push
adc
insb
arpl
cmp
and
dec
adc
mov
pop
das
and
stos
push
jae
dec
add
testl
sub
pop
push
cmc
cmc
fiaddl
fsubs
jns
test
cs
lret
dec
jp
mov
repz
pop
in
xor
mov
test
out
pop
daa
mov
popf
inc
mov
pop
rclb
pop
bound
mov
filds
adc
jbe
out
das
scas
sbb
mov
lahf
add
jge
dec
mov
lcall
pop
out
jge
xor
sbb
sbb
sub
mov
xorl
dec
and
icebp
mov
xchg
pop
aas
cli
clc
mov
and
mov
sub
xor
sbb
movsb
xchg
jl
cmp
into
mov
icebp
push
dec
inc
cmp
sti
into
jmp
sbb
in
sbb
pop
and
xorl
adc
push
dec
shll
push
ret
or
sub
ret
add
int
inc
jb
fwait
fs
or
push
iret
dec
mov
cmpsb
nop
stos
clc
cmp
sub
adc
insb
sbb
inc
pop
js
mov
sub
movsb
add
out
fimull
mov
inc
icebp
and
aas
hlt
and
les
incl
cmc
dec
test
cmp
movsb
xchg
dec
loop
add
and
icebp
addr16
lods
rcll
mov
fildl
jecxz
dec
test
mov
arpl
sbb
or
popf
test
mov
add
mov
xchg
je
jno
and
mov
jns
sti
sbb
pop
cmp
and
nop
add
pop
js
mov
xor
lret
out
movsl
inc
and
movsl
inc
sub
imul
mov
rorb
xchg
repnz
add
stos
sbb
sub
lock
add
add
adc
mov
shl
pop
xchg
fsubp
insl
outsb
arpl
inc
mov
aam
jae
xor
inc
dec
sub
fiaddl
jle
and
mov
inc
jne
fadd
xchg
push
out
inc
pop
and
add
js
jno
pop
jle
orb
or
add
dec
jae
idivb
pop
push
mov
pop
aad
mov
scas
pop
in
xchg
adc
jecxz
outsb
sub
or
in
fldl
cmpsb
jbe
cmp
xchg
cmpsb
lret
jae
sbbl
jo
pop
cmpps
sub
call
xor
push
mov
push
mov
add
cli
add
outsb
jmp
or
mov
push
mov
loopne
cmc
mov
xchg
iret
cld
fs
and
test
push
mov
jnp
out
xor
add
inc
adc
push
jb
push
lock
scas
xchg
or
push
xor
add
adc
inc
jb
jg
pusha
sarl
push
dec
pushf
sbb
sbb
lret
mov
insb
or
cs
es
repnz
and
mov
mov
adc
jb
cmp
enter
lock
aas
and
mov
jecxz
into
leave
dec
movsb
ficompl
sub
lock
cmp
rolb
test
jb
and
inc
filds
add
mov
dec
mov
lret
data16
xlat
xchg
data16
aad
adc
rclb
add
loop
push
sub
lahf
dec
pop
sbb
push
repz
sbb
pop
fsubl
xor
lcall
adc
fldl
mov
aas
in
icebp
imul
sub
jecxz
mov
lds
jnp
call
xchg
js
inc
xchg
ljmp
mov
mov
sbb
ds
in
lods
jo
lret
or
push
mov
xchg
cld
and
add
cld
sahf
inc
insl
das
icebp
fadds
pop
inc
mov
mov
jl
xchg
mov
cwtl
jge
imul
or
cmpsl
movsl
dec
xlat
add
xchg
mov
enter
data16
dec
jp
push
or
inc
xchg
dec
xchg
or
sub
shrl
rcl
mov
leave
pop
shr
lahf
push
cs
fwait
btcl
cwtl
daa
jecxz
insb
movsb
cs
pop
shrl
aaa
lcall
pop
jl
mov
lcall
inc
mov
push
leave
bswap
jns
sub
jmp
adc
cmc
lret
and
js
iret
bound
in
out
fistl
jne
pop
xor
shrl
jnp
daa
push
sub
pop
popf
aam
dec
enter
cmp
pop
add
ljmp
addl
adc
rcrb
mov
btc
or
insl
cltd
pushf
jnp
lods
mov
adc
frstor
repnz
xlat
cmpsl
push
jl
pushf
sti
xchg
rcrl
das
jnp
popf
jnp
sbb
or
push
out
add
stc
jmp
insl
rcrb
dec
jecxz
push
insl
mov
inc
or
int
icebp
mov
fisttpll
pop
ret
cmp
xlat
std
mov
insb
jo
cwtl
dec
and
mov
xchg
dec
adc
into
jmp
icebp
mov
int
mov
or
std
mov
imul
scas
add
lcall
pop
insl
and
test
sub
rorb
inc
pop
dec
dec
xor
sbb
leave
shlb
cwtl
cmc
std
imul
add
push
hlt
cmc
leave
test
push
lret
mov
and
push
mov
shll
mov
stos
xlat
idivl
and
jmp
adc
fstpt
outsb
rcrb
jo
or
sub
ljmp
and
test
jg,pn
cmpsl
add
loopne
xor
push
repz
push
insl
push
sub
mov
cmp
jg
mov
cltd
arpl
iret
mov
pop
mov
or
mov
imul
inc
push
xor
jne
xchg
dec
ja
inc
fs
sbb
mov
mov
pop
stos
mov
adc
and
adc
and
das
dec
mov
imul
mov
inc
push
stos
enter
movl
sub
loopne
push
sar
mov
imul
or
mov
dec
jno
in
push
mov
mov
out
insl
cld
cmp
stos
and
jmp
dec
mov
mov
pop
push
aad
rorl
inc
neg
fidivrs
fldcw
shll
jl
jmp
scas
push
adcb
out
adc
outsl
fadd
in
aad
and
aam
and
les
fisubrs
adc
xchg
into
inc
out
lods
sbb
push
push
push
pop
add
cli
jecxz
outsl
jge
iret
aas
mov
dec
or
xchg
inc
fwait
jb
adc
cmp
pop
or
cld
xchg
inc
push
lods
jle
popa
imul
mov
lcall
push
pop
fcmovb
mov
mov
xchg
cld
mov
cmpsl
push
and
sahf
loop
pop
inc
and
dec
jnp
xchg
add
out
or
cmpsb
mov
test
and
add
sti
jo
mov
push
stos
les
mov
jecxz
lock
int
leave
and
xchg
push
mov
mov
dec
subb
dec
and
mov
jecxz
gs
mov
fwait
xor
lret
jns
cmp
xchg
jbe
fst
sub
adc
xlat
cmpsb
xchg
stos
or
out
loope
adc
test
pop
inc
xchg
inc
rcrb
dec
dec
mov
mov
call
les
lock
xchg
roll
sub
movsb
push
xor
xorl
sub
test
push
xchg
push
movl
enter
add
pop
insb
lret
ret
pop
sbb
mov
andl
or
ljmp
fcompl
adc
jne
and
mov
mov
aaa
and
pushf
popf
popf
jecxz
aad
push
ds
test
shl
inc
dec
popa
mov
popa
add
inc
pop
fcoms
pop
adc
roll
lret
out
pop
daa
iret
cmp
mov
andb
push
mov
int3
sub
movsb
mov
inc
add
stos
test
mov
add
clc
jnp
das
fsubr
and
stos
mov
xchg
mov
enter
nop
test
xchg
stos
stc
dec
inc
loop
dec
dec
jmp
dec
cli
or
das
stos
jp
negl
fwait
js
mov
aas
xor
mov
jecxz
sub
pusha
les
cmp
lds
andb
hlt
ja
je
ret
mov
xchg
add
sarb
sbb
loopne
adc
mov
mov
lods
inc
mov
ficoml
sbb
sub
jg
repnz
aas
inc
out
ss
shl
filds
out
pusha
push
push
mov
xchg
or
in
lret
cmc
jns
jbe
xchg
add
in
jnp
xor
shlb
cld
xchg
mov
jmp
or
fadd
mov
outsl
test
dec
xor
fwait
mov
jae
mov
fistps
cli
push
insb
mov
mov
dec
pop
inc
sti
sub
fistpll
lret
aaa
movsl
inc
mov
cmpsb
pop
rep
fsubs
std
subl
mov
addr16
and
stos
mov
add
adc
int
inc
mov
xor
push
lea
xor
sahf
adcl
mov
mov
cmc
xchg
add
sub
aam
repz
and
enter
xchg
pop
daa
mov
rcrl
insb
push
lcall
aad
mov
adc
repnz
mov
xchg
add
popl
lahf
mov
std
cmp
mov
out
pop
lret
dec
adc
sub
gs
gs
mov
sub
xor
test
push
and
ja
imul
pop
mov
lds
int
push
out
mov
mov
xchg
ja
jnp
js
orb
dec
pop
jg
and
addr16
out
stos
xchg
aad
jns
sbb
inc
xor
pushf
into
jb
inc
lahf
mov
pslld
pop
mov
or
roll
sbb
sbb
adc
inc
dec
fwait
mov
sahf
ds
in
mov
outsb
mov
push
jnp
fs
insb
les
stc
movsb
and
inc
xlat
pop
dec
mov
mov
scas
or
jb
push
arpl
test
mov
imul
adc
mov
lret
cmp
mov
fldl
daa
sbb
data16
add
in
mov
loop
lgdtl
pushf
mov
pushf
xor
je
or
movb
mov
cs
xchg
adc
mov
xor
pop
ljmp
pop
int
mov
cmpsb
fisttpl
jns,pt
roll
cmc
iret
lret
rcrb
mov
sbb
popl
sbb
ss
xchg
sbb
in
cmc
test
xor
fs
ljmp
andl
or
xor
shlb
aam
std
lret
and
xchg
test
jno
cld
sub
cltd
push
jmp
jle
or
idivb
lock
fnsave
add
push
xchg
mov
cmp
cmp
dec
push
data16
int3
pop
data16
pusha
mov
aam
xchg
loope
mov
xchg
stos
or
aaa
pop
and
jle
fstps
or
push
in
and
arpl
loopne
in
pushf
push
push
adc
add
pop
fnstenv
int
dec
leave
and
shlb
adc
lea
pop
lret
dec
jmp
push
idivl
or
mov
xor
in
fnstcw
jnp
adc
leave
xchg
or
cmpsl
sbb
mov
jmp
sub
pop
es
adc
repnz
into
in
aad
sub
mov
xchg
dec
jg
pushf
xor
sub
cmp
in
sub
test
jmp
rorl
inc
fisubrl
jge
movsl
xchg
in
mov
pop
cmp
push
stos
push
scas
inc
lods
and
lods
aaa
cmpsl
mov
daa
xlat
adc
jmp
imull
data16
nop
ficomps
jae
adc
inc
decb
aam
push
cmpsb
jnp
shlb
daa
mov
push
adc
fstpl
pop
inc
int
sbb
pop
mov
lret
or
ds
cmp
pushf
pop
sti
notl
imul
xor
dec
imul
scas
in
push
inc
sbb
insl
mov
clc
loope
outsl
es
or
imul
call
dec
mov
fwait
negl
scas
hlt
jge
stos
out
cmp
xchg
rcrb
call
cmpb
inc
xchg
inc
add
addr16
pushf
les
popa
clc
negl
cmpb
xchg
adc
fs
mov
sbb
cmp
push
lea
xor
mov
pop
or
inc
pop
int
popf
dec
pop
fbstp
pop
scas
cmp
inc
push
jmp
xchg
imulb
inc
push
sub
rcrl
mov
rcll
adc
fisttpl
xor
dec
popa
adc
xchg
xchg
es
pop
mov
icebp
repz
jle
daa
shrl
adc
loope
pop
sub
jbe
arpl
sub
das
jge
cmp
js
jg
cmp
jnp
jns
jmp
mov
jb
mov
mov
enter
or
fisttpll
mov
dec
icebp
cmp
bound
js
pop
pop
rorb
rorl
inc
sbb
jmp
cmp
adc
dec
inc
cmp
pop
fbstp
push
jecxz
lock
inc
push
test
or
push
inc
fisubl
mov
mov
add
stc
mov
push
aas
ret
scas
push
or
adc
adc
out
lock
arpl
mov
mov
repz
jns
jmp
mov
mov
rclb
dec
pop
dec
ror
cmp
loope
ret
aaa
insl
jge
imul
mov
out
je
test
xchg
mov
jp
jge
lret
outsl
and
mov
imul
push
mov
rol
add
xor
lods
inc
or
addr16
push
es
lcall
or
inc
adc
pop
mov
and
lods
dec
push
dec
nop
or
inc
mov
xchg
test
jl
xor
sbb
cmp
xchg
sahf
test
fsub
aad
sub
subl
cmp
mov
adc
lds
inc
shlb
je
int
push
push
xchg
loopne
push
das
test
jne
dec
sarl
lods
inc
jno
in
dec
push
movsb
mulb
mov
mov
in
call
cmp
jmp
lock
xchg
leave
adc
mov
xchg
add
nop
stos
xor
or
movsl
inc
jecxz
push
jb
aam
adc
addr16
jl
inc
psrad
movsl
hlt
pop
add
cli
jns
scas
test
scas
adc
cmp
sub
mov
in
jl
orl
pop
in
mov
ljmp
repnz
sbbb
or
mov
mov
push
hlt
cwtl
hlt
fucomip
cmc
fsts
int3
mov
jns
cmp
aaa
popf
pop
pushf
push
mov
cmp
ja
inc
adc
xchg
imul
cltd
loop
cmpsb
test
mov
sub
addr16
xor
ret
sahf
ss
and
outsb
dec
add
push
mov
dec
imul
mov
push
xchg
mov
aas
pusha
xor
sarl
jge
sbb
aas
inc
xor
adc
push
cmp
sbb
ror
adc
leave
ret
xchg
or
lret
sbb
or
push
adc
rcrb
or
insb
pop
push
rclb
icebp
pop
xchg
ret
jae
adc
inc
mov
out
lds
and
pop
jo
dec
outsl
add
and
loopne
ljmp
nop
add
mov
pop
adc
sbb
sbb
std
mov
mov
dec
mov
sub
dec
sti
pop
mov
xchg
lock
shr
adc
push
fwait
aam
test
or
ss
enter
push
or
jg
mov
flds
mov
lret
ret
and
repz
xchg
je
popf
xchg
add
push
stos
mov
sbb
mov
inc
cmp
fwait
enter
xor
inc
mov
and
pushl
hlt
push
stc
int
in
and
dec
jno
pop
or
xchg
mov
adc
dec
pop
push
sbb
mov
pop
vorps
push
je
aad
ds
or
in
das
jmp
fdivp
addl
jno
xor
and
addr16
cmc
shl
movsl
test
cwtl
pop
cmpsl
xchg
repz
cmc
xchg
scas
push
or
cli
and
sbb
lods
add
jb
dec
xchg
lea
lret
pop
push
scas
xor
mov
scas
mov
dec
cmp
subl
lret
sub
and
mov
imul
fistpll
mov
pop
out
cmpl
xchg
fwait
xchg
adc
cwtl
pop
push
in
xor
mov
mov
mov
dec
dec
cmpsl
mov
push
xchg
sub
jns
push
sti
xchg
sub
xor
mov
movsbl
je
xor
shll
in
pop
cmpsl
pop
add
rorb
rorl
lods
lret
addb
sub
stos
in
test
mov
fsubrp
fisttpl
loope
fdiv
dec
and
xchg
pop
test
mov
shlb
dec
test
mov
sbb
push
movsl
mov
cmp
mov
mov
fwait
adc
les
test
inc
dec
xchg
sti
lds
int
nop
cli
fisubs
push
mov
or
aaa
cmp
enter
push
jmp
sarb
dec
js
pop
js
out
outsl
rolb
and
jne
add
in
ret
add
sub
xorl
movsb
cmp
fwait
imul
shr
pop
fs
mov
add
test
enter
in
push
xor
cltd
xor
xchg
sarl
cld
loopne
cld
inc
mov
shrb
xchg
jns
iret
cmp
sub
push
in
insb
push
add
jne
jle
aaa
fldenv
xchg
rorb
loope
mov
push
mov
out
pop
scas
jmp
push
mov
add
and
mov
xor
pop
xlat
scas
lock
das
cmp
iret
insb
aad
dec
jge
out
xchg
inc
push
push
pusha
addb
dec
xor
loopne
or
dec
mull
aam
add
adc
jo
aas
cmp
test
pushf
hlt
inc
in
xchg
test
sub
xchg
sbb
sbb
in
and
scas
add
push
out
or
mov
mov
sti
cltd
stos
lock
nop/reserved
adc
out
push
xchg
or
push
shr
ss
shrl
fstps
inc
cltd
pmaddwd
mov
mov
cmp
pop
jnp
sbb
mov
and
enter
add
mov
mov
add
cmp
sub
push
lods
icebp
mov
xchg
cmp
push
dec
in
pop
outsb
jl
out
sbb
incb
sarl
fwait
jecxz
insb
lcall
sbb
jp
les
adc
out
xor
sub
ljmp
int3
rcl
and
sahf
mov
adc
aam
ds
mov
ja
aaa
and
and
push
pusha
dec
dec
shl
sbb
cmp
jmp
mov
cmp
jb
aaa
lock
xor
in
xchg
cmpsb
inc
adc
or
adcl
aad
dec
dec
repnz
jmp
mov
popl
push
fwait
xchg
mull
adc
inc
adc
in
clc
dec
dec
popa
sbb
pop
and
hlt
cwtl
stos
sbb
mov
mov
fs
sbb
ret
add
xor
sbb
sub
sbb
je
cli
jno
mov
xor
notb
shlb
add
push
imul
jae
sub
mov
les
adc
cmp
test
push
jns
cld
mov
cmp
lods
xchg
aas
add
rorl
nop
inc
daa
push
out
clc
sahf
lcall
push
mov
sarl
movsl
mov
push
lahf
lods
fcmovnbe
ljmp
cs
jmp
or
stos
daa
aas
mov
xor
add
mov
repz
inc
mov
or
jmp
mov
cs
pop
push
xlat
int3
hlt
mov
lret
mov
popf
push
jg
add
scas
lahf
xor
bswap
lods
push
les
loopne
leave
dec
lret
push
sub
movsb
clc
int
pop
arpl
loop
test
das
add
xchg
and
or
xchg
dec
xchg
adc
xchg
sub
mov
mov
lret
and
and
sbb
sub
stos
cwtl
lds
sbb
inc
in
mov
cwtl
mull
add
test
movsb
lret
cmp
dec
cld
lret
push
sbb
sub
mov
jno
mov
rcrb
cs
ret
ss
dec
xor
pop
mov
into
inc
cmp
mov
fisubs
in
lock
hlt
sub
sbb
add
push
xor
aad
mov
cmp
adc
inc
std
lahf
fldenv
dec
push
add
cmc
mov
test
sub
lods
push
jmp
push
mov
and
or
xchg
push
insb
adc
iret
loope
call
imul
mov
xlat
mov
sbb
xor
test
jge
ret
outsl
pop
mov
arpl
inc
and
dec
pop
fsubr
mov
rorl
je
dec
aas
testb
jp
and
stos
dec
mov
int3
movb
adc
and
ds
push
mov
not
lods
fwait
ss
adc
mov
cmp
nop
xchg
adc
pop
mov
in
dec
sbb
das
xchg
insl
jo
cltd
sub
popa
cmp
push
xchg
fistpll
jne
pusha
call
mov
stc
mov
mov
mov
outsl
and
cli
jg
mov
mov
dec
popf
pop
mov
cmc
jp
cmp
push
or
xor
cmp
xchg
nop
sub
pop
mov
rorl
jmp
xor
jbe
stos
adc
loop
in
push
or
pusha
xchg
cmp
adc
jmp
aam
shlb
aaa
decl
push
fs
je
ja
mov
stos
testb
outsl
gs
dec
js,pn
outsl
andl
push
into
jae
leave
repz
mov
movsl
sub
mov
movsb
mov
iret
loope
lock
push
movsb
in
xor
popa
dec
sbb
aas
inc
out
lds
fldl
jnp
xor
sub
jnp
mov
dec
mov
int3
stos
or
inc
dec
cld
fs
xchg
cmp
js
mov
repnz
push
mov
push
xchg
cmpsl
add
inc
mov
mov
ds
data16
movsl
lcall
mov
outsl
out
stos
jnp
movsb
mov
aas
jnp
cmp
xlat
outsb
rol
mov
movsb
je
xchg
cli
dec
xchg
movsl
dec
xor
in
jnp
test
sbb
stc
jb
jb
stos
sub
nop
cmp
movsb
incb
cmp
mov
xchg
movsb
add
and
pop
or
in
inc
js
subb
sbb
push
fdiv
filds
mov
movsl
fsubrl
sub
fidivs
xchg
xchg
mov
jmp
mov
je
add
rorb
cmp
sub
mov
in
clc
aaa
and
repz
push
mov
subb
sahf
and
stc
ficoms
aad
mov
iret
or
add
mov
divl
fwait
pop
pusha
jbe
in
outsl
call
mov
inc
cmp
movsb
andl
inc
rcrb
outsb
sub
inc
ret
movsb
mov
sub
popa
imul
in
mov
jge
adc
add
cld
sbb
pop
icebp
push
push
xor
dec
xchg
sarl
in
adc
testb
push
mov
into
test
int
and
add
addr16
jle
jne
adc
or
pop
jge
dec
daa
clc
test
sub
cmpsb
data16
stc
jne
test
les
loopne
cmpsb
arpl
pop
add
adc
sub
movsb
out
cmp
nop
mov
test
ret
movsl
push
mov
xor
jno
pusha
push
imul
jo
int3
scas
negl
mov
sbb
int3
mov
pop
stc
mov
sbb
and
sbb
faddl
mov
dec
mov
push
or
icebp
cmp
xchg
hlt
cmpsb
scas
out
push
outsb
shlb
pop
mov
jo
sub
dec
addl
ljmp
and
test
mov
stos
push
and
or
cmp
cld
imul
hlt
popf
sub
adc
add
jecxz
sub
loope
mov
imul
or
cmp
das
xor
ret
outsl
aaa
push
push
jne
fimull
inc
xor
and
icebp
xor
inc
xorl
xor
ja
loop
call
sbb
xor
add
int3
push
jno
mov
popf
fs
repz
ja
js
es
out
pop
or
push
xlat
cmpsb
into
lods
into
daa
mov
mov
ss
jle
pop
or
mov
xchg
xchg
sub
inc
mov
mov
or
insl
push
jnp
test
dec
je
mov
shll
repnz
scas
pop
cs
pop
push
std
or
adc
fbld
xchg
pop
idivl
jno
rcll
and
ja
mov
daa
cmpsl
ficoms
fstp
xchg
fiadds
test
inc
xchg
pop
sbb
lods
jbe
sbb
dec
or
popa
shrl
nop
or
lret
jecxz
pop
loope
sub
xchg
jl
stc
aaa
popf
lret
xchg
push
dec
ljmp
dec
test
movsb
dec
push
addr16
loopne
dec
aaa
xor
or
pusha
pop
adc
cld
fisubrs
xchg
test
xchg
lock
jnp
outsl
add
outsl
lcall
pop
jmp
and
pop
inc
adc
cmp
loop
lcall
push
inc
cltd
es
mov
ja
cmc
pop
outsl
test
cmpsl
pop
cmp
cmp
or
test
pop
ljmp
jmp
push
rcl
popa
fidivs
out
jb
jp
clc
fdiv
lock
jmp
mov
dec
leave
pusha
jmp
pusha
add
movsb
add
icebp
ret
insl
scas
sbb
iret
sbb
xlat
mov
adc
cli
pop
daa
adc
out
dec
in
test
popf
lds
out
icebp
repz
cmpsl
fstl
das
test
xor
xor
inc
mov
cmc
pxor
jl
pop
xchg
push
orb
mov
or
or
cmp
inc
cmp
and
push
insl
adc
add
fisttpll
mov
push
mov
xchg
jae
mov
aas
movsb
jp
fimuls
lock
or
in
and
jmp
mov
in
mov
sub
movsb
xchg
adc
dec
fwait
mov
xchg
arpl
sbb
pop
jg
inc
jmp
cmp
cltd
jmp
push
lretw
sub
or
push
inc
stc
xchg
popa
dec
mov
ret
pop
xchg
movsb
sub
push
data16
hlt
test
in
es
enter
mov
mov
jne
stos
xor
test
out
icebp
cmpsb
movsb
fwait
pop
cmp
aad
roll
roll
push
xchg
cmc
sub
inc
pop
rclb
push
xchg
add
xchg
sub
int3
adc
sub
pop
push
shlb
mov
mov
das
inc
test
sbb
mov
idivb
mov
punpckldq
sbb
cmc
mov
out
mov
test
imul
xchg
push
mov
dec
aad
mov
aas
rcrl
inc
out
jmp
dec
stos
push
insl
push
add
lret
and
add
insl
push
xor
push
cmp
scas
stos
movsl
xchg
decl
scas
leave
and
adc
xor
cmp
push
sub
jmp
scas
cmp
add
repz
outsl
outsl
adc
fcmovb
push
scas
push
jl
mov
js
imul
movsl
dec
push
cltd
inc
xor
inc
cmpsl
dec
rcr
add
push
fcmovnbe
and
mov
jae
enter
cld
jmp
ds
loop
xchg
push
dec
mov
fs
test
ficoms
sub
stc
or
jge
mov
in
cmpsb
rol
fldln2
addr16
idivl
push
stos
sbb
ret
dec
cvtps2pd
sbb
sub
insl
adc
fstpl
xchg
sahf
jecxz
adc
testb
ja
cmpsb
inc
and
cmp
mov
add
pop
dec
push
popf
xor
xorb
push
cwtl
mov
stc
aas
push
xchg
outsb
lahf
repz
sub
cmp
xor
xor
sbb
push
push
mov
and
test
aam
pop
enter
dec
lods
in
pop
mov
ljmp
inc
daa
seto
push
les
and
out
mov
mov
mov
repz
divb
outsb
fwait
aaa
rorb
and
adc
or
dec
jnp
in
int
fcmove
sbb
jl
jge
fsqrt
push
push
arpl
sub
push
enter
in
enter
bound
and
xor
mov
std
jmp
rol
ret
inc
push
icebp
push
pushf
outsb
outsb
pop
mov
addr16
xorl
xchg
lea
mov
xor
cmp
adc
clc
lea
sbb
inc
and
shl
cmpsl
sti
inc
cltd
dec
dec
sub
lret
fiaddl
mov
jns
cmp
neg
lds
mov
and
sub
push
xor
fcomps
cld
mov
jo
jecxz
in
aas
test
mov
lret
push
add
test
add
adc
pop
lock
xlat
fisubl
jmp
inc
mov
pop
scas
pushf
test
mov
dec
xor
stos
lock
cwtl
aas
std
push
xchg
and
mov
stos
jg
jl
test
test
into
cmc
mov
stc
adc
lahf
in
add
addr16
int3
lahf
mov
push
leave
dec
pop
mov
adc
inc
cmp
and
imul
mov
mov
jns
cmp
cwtl
sahf
pop
adc
mov
int
in
jp
sub
mov
les
add
in
jnp
adc
dec
stc
and
push
push
loopne
add
push
cmp
aas
aas
mov
inc
fmuls
lods
cmpsb
fsts
xor
loope
popf
mov
jno
scas
pop
adc
adcl
test
fsubrl
rcrb
push
aaa
mov
shll
push
das
push
ja
and
iret
xchg
in
int
js
popa
shll
clc
pop
cmp
es
mov
stos
daa
push
repz
test
jnp
sub
jge
adc
stc
mov
inc
inc
sbb
bound
push
and
mov
iret
xchg
mov
and
xor
xor
leave
push
cwtl
test
call
jb
mov
addb
outsb
jb
out
gs
insb
xor
es
pop
xchg
cmc
aam
or
or
cli
xor
outsl
cmpsl
into
aaa
gs
mov
sbb
int
insb
xchg
pop
xchg
mov
pop
push
mov
and
xor
push
mov
mov
leave
outsl
lods
ficoms
push
das
fcmovb
inc
inc
repz
cmp
bound
pusha
mov
shl
imul
dec
int
sbb
jnp
inc
sub
movsl
xchg
and
out
xor
inc
jecxz
mov
in
in
and
rolb
jmp
aas
xchg
aas
or
mov
arpl
inc
pop
sub
dec
xchg
cmc
xchg
cwtl
and
mov
xor
clc
sub
stc
mov
nop
xor
fcmovnbe
jne
push
rol
add
pop
lods
inc
xlat
mov
inc
mov
xorb
add
es
adc
sbb
xor
into
clc
cltd
pop
pop
pop
lcall
jg
dec
mov
mov
and
cli
and
mov
and
inc
jnp
dec
lock
dec
mov
pop
subb
std
sub
and
dec
pop
or
je
mov
mov
add
out
int
mov
jns
int3
fists
pop
sbb
pushf
out
cmp
pop
xchg
dec
push
mov
sahf
stc
mov
mov
pop
sub
stos
jnp
adc
adc
aas
dec
fsubl
cmp
or
pop
pop
ja
fildl
adc
aam
in
ljmp
mov
inc
and
aaa
adc
cld
push
mov
or
mov
push
jle
pop
xor
add
hlt
adc
jecxz
pop
push
lret
loope
lea
mov
mov
jb
adcl
xor
or
push
bound
fwait
in
mov
and
dec
rcrb
ret
es
cwtl
mov
ja
ds
jp
popf
mov
push
push
insb
ret
xor
loop
cli
jb
ds
mov
xchg
movsb
push
shrl
cli
pop
sbb
add
test
stc
dec
mov
lods
jge
inc
or
dec
lahf
mov
and
lret
cmp
push
ficoml
in
pop
push
jle
and
add
pushf
pop
test
jle
dec
sbb
push
sbb
int3
imul
jmp
frstor
pop
addb
mov
les
ja
hlt
shr
and
sub
mov
inc
cmp
in
ds
fsubp
fwait
insl
data16
add
clc
push
daa
repz
cli
loopne
cmc
into
stos
mov
xchg
dec
aam
loope
jge
add
ret
mov
leave
cmpsl
iret
aaa
adc
ret
cmpsl
pop
add
clc
mov
lods
mov
jbe
notl
sbb
mov
je
or
sub
sub
push
xor
jnp
dec
fsubl
or
lahf
fidivl
lods
sub
pop
sahf
popa
andl
hlt
inc
imul
outsb
fstl
or
jne
out
clc
push
stos
fs
or
push
sbb
or
mov
push
fimuls
jnp
jbe
sbb
fsubrl
notb
jno
sub
sub
sbb
jge
lret
je
insb
mov
aad
mov
cmpsl
insl
and
sti
out
cmp
sub
rorb
cmc
rcrl
and
jge
daa
lods
jnp
fidivrl
cmp
popa
push
xlat
xchg
push
and
mov
pop
cwtl
outsb
repz
xchg
cmc
adc
mov
or
fnstcw
xchg
xlat
pop
adc
and
pop
cmp
dec
mov
cmpsb
push
mov
rcrb
jmp
shll
pop
jecxz
mov
sub
pop
insb
test
fwait
fwait
insl
inc
aam
mov
imul
insb
lea
repz
jns
or
pop
dec
popa
sbb
mov
and
xor
repz
stc
mov
lret
aaa
push
and
push
xchg
sti
mov
out
fucomi
dec
xor
jnp
iret
or
insb
adc
adc
xor
scas
fidivl
out
add
daa
aam
aas
inc
push
test
push
imul
ret
cmpsb
popf
pop
push
dec
aaa
sahf
adc
and
test
and
in
adc
popa
push
sbb
push
inc
push
frstor
fidivrs
stos
push
repnz
pop
mov
push
mov
stc
movsl
or
mov
mov
jge
push
inc
sub
aam
cmp
sbb
adc
pop
sub
push
movsl
xlat
xor
xchg
xor
and
out
sbb
and
mov
or
lds
popf
mov
cmp
notl
outsl
mov
pop
xchg
cmc
out
add
ljmp
fldt
jg
subb
cs
lock
inc
and
fcmove
adc
dec
push
test
loop
aas
hlt
popf
out
mov
pop
and
lods
add
and
add
mov
mov
add
mov
mov
sub
adc
call
xor
pop
icebp
jp
push
and
xchg
ja
mov
inc
mov
xchg
rorl
mov
push
push
nop
push
xor
cmc
jbe
sub
scas
rclb
cmp
fstpl
cmp
cmp
test
jmp
int
ret
pop
sti
mov
pop
sbb
ljmp
sbb
jae
sbb
mov
insb
pushf
dec
mov
negl
sub
int
popf
divb
jns
mov
pop
mov
inc
xor
and
rcr
jbe
lahf
fcompl
in
aad
cmc
push
rcrl
jmp
adcb
add
loopne
mov
cmc
mov
pop
fld
dec
imul
xor
mov
lods
mov
mov
mov
push
push
inc
mov
jbe
popa
pinsrw
or
push
mull
add
frstor
jmp
add
movsb
xchg
popf
stos
movsl
test
icebp
inc
fwait
or
decl
mov
sub
std
pop
popa
add
in
popa
es
in
xchg
movsb
arpl
xchg
jecxz
fdivr
push
sahf
fmul
sti
arpl
inc
movsl
mov
dec
jae
rcll
cmp
popf
lahf
mov
icebp
scas
fcoml
inc
and
mov
cmp
repnz
das
aas
cs
add
xor
xchg
or
or
ss
push
cmp
or
jae
push
hlt
sbb
shrl
pop
insl
sub
aaa
sahf
add
jle
fstpl
push
mov
aad
pop
adc
stc
sub
inc
ret
out
addr16
dec
aas
or
inc
add
or
lret
addr16
add
ljmp
into
mov
pop
push
arpl
out
mov
mov
or
mov
push
ficomps
lds
dec
dec
xor
gs
cmp
mov
loope
inc
es
out
add
mov
mov
dec
cmc
in
testl
pop
push
loope
hlt
push
mov
mov
icebp
enter
fbstp
cmp
enter
cmp
int
lods
jmp
xor
dec
pop
idivl
inc
out
bound
fcos
pop
mov
pop
ret
mov
sub
xchg
sbb
cmp
push
jo
ljmp
pop
ds
mov
sahf
dec
push
xchg
push
iret
xchg
fidivs
out
push
adc
sub
xlat
loop
xchg
adc
adc
pop
sbb
push
loopne
jge
stos
mov
test
push
cltd
push
adc
pop
pop
lret
jo
jno
shlb
loop
jg
loopne
xchg
test
imul
sub
das
daa
pop
cmp
mov
das
xor
or
add
cmp
repnz
arpl
addl
push
cmp
mov
fs
sub
push
xlat
pusha
pushf
into
add
dec
jecxz
gs
jne
adc
cmpsb
cld
pop
mov
scas
fnstsw
jp
popa
lods
sub
sub
xchg
fcomps
mov
pop
xor
or
mov
inc
inc
ljmp
leave
mov
in
loope
outsl
pop
int
int
mov
and
jge
adc
xor
sarb
mov
pop
mov
int3
test
lods
arpl
push
fisubs
jmp
shrl
outsb
sub
jmp
inc
aaa
sub
push
mov
push
add
enter
pop
push
xchg
fdivl
jmp
das
cmpsb
std
sarl
jnp
sub
jp
popf
nop
shll
pop
rcll
fildll
mov
fsubr
dec
cwtl
add
repz
adc
adc
dec
adc
sbb
cmp
fidivrs
xchg
es
lds
push
in
mov
aas
cli
imul
into
adc
mov
add
ret
mov
lods
sarl
pusha
cmpsl
jns
cs
iret
push
mov
cli
pop
ljmp
jns
test
mov
xchg
daa
ds
adc
xor
std
jmp
lds
out
lahf
and
push
cltd
jl
push
inc
test
sub
ss
mov
cmp
mov
pop
jae
or
fmull
add
sbb
call
fnsave
es
mov
add
ja
imul
les
mov
in
imulb
addr16
add
repnz
sub
movsb
inc
dec
or
mov
imul
dec
stc
ss
mov
push
adc
push
xor
into
mov
loop
cwtl
es
xchg
or
xor
cmc
icebp
rcrl
add
push
cmpl
inc
jmp
sub
les
call
mov
mov
add
pop
ljmp
ljmp
jne
cmpsb
mov
cmp
sbb
pop
lock
lods
xor
mov
xor
and
ss
loope
pop
inc
fwait
mov
xor
pop
repz
std
mov
outsl
enter
jo
bound
cmp
push
xor
lcall
adc
push
idiv
pop
ret
cmpb
jle
nop
mov
pushl
jecxz
das
xchg
inc
je
mov
push
les
and
lods
dec
cmp
into
mov
adc
inc
push
or
inc
addl
int
in
int
mov
into
mov
xchg
adc
cli
push
xchg
das
jle,pn
test
cmp
pushf
lock
in
sbb
or
ljmp
sbb
ja
stos
cmp
cld
jmp
out
fadds
fadd
or
fnsave
loop
out
hlt
adc
jle
add
fnstcw
enter
mov
adc
push
mov
mov
dec
jno,pn
jl
or
pop
lcall
sub
testb
xor
lea
int3
or
rcrb
cmp
test
in
dec
pop
repnz
js
rcll
lods
icebp
adc
in
mov
jge
lock
inc
les
xchg
add
ret
bnd
aas
sti
scas
ret
sbbb
xor
leave
int
mov
xor
mov
mov
rcrb
xor
inc
xlat
push
cmp
enter
scas
sbb
out
inc
xchg
dec
scas
movsb
lods
push
lods
push
mov
push
fnstcw
push
add
sub
mov
adc
loop
movsl
ret
pop
les
push
orl
repz
and
add
mov
out
fadds
or
xchg
test
inc
movsb
sub
popa
adc
imul
jne
cwtl
inc
jp
sbb
push
jmp
notb
arpl
repnz
shl
cmp
sbb
inc
xchg
leave
das
imulb
fiadds
pop
or
shrl
mov
lret
ret
daa
lods
ret
sbb
jbe
push
cmpsb
das
ret
push
pop
mov
cld
and
repz
add
sub
pop
bound
fistl
je
test
xchg
lret
mov
adc
lret
shrl
aas
iret
add
mov
jecxz
sti
xchg
push
dec
test
pop
bound
mov
in
dec
imul
out
das
pop
aad
jne
push
enter
aaa
icebp
adc
pop
cs
mov
fisubrs
lahf
fldt
add
add
es
adc
bound
test
cmpsb
pop
in
mov
inc
dec
fcmovu
out
ficomps
push
dec
jno
inc
xlat
test
mov
leave
jb
mov
cmp
mov
mov
sub
inc
sbb
in
std
jb
adc
jle
jno
dec
sbbb
push
sbb
stc
and
callw
pop
xor
mov
xor
sbb
sub
dec
push
fisttpll
sahf
push
adc
mov
sbbl
ret
loopne
icebp
push
dec
pop
stc
es
out
sub
fcomps
jecxz
dec
mov
fcoml
clc
pop
je
add
fwait
xchg
jecxz
arpl
mov
mov
xor
fiaddl
jp
add
test
mov
cld
ss
mov
fstps
loopne
push
int
mov
js
mov
nop
mov
aam
add
ljmp
data16
dec
sbb
pop
or
out
mov
or
push
xor
push
stos
mov
or
jo
cmp
cmpsl
mov
adc
mov
bound
mov
in
and
popa
loope
mov
js
sti
rol
movsb
push
insb
cmp
mov
xchg
int3
mov
or
lea
sub
jle
xchg
jmp
arpl
jne
adc
pop
inc
call
cmp
nop
sub
shll
mov
repz
lcall
fstp
jae
push
dec
cli
and
pop
xchg
push
and
lret
and
insb
mov
xor
and
movsl
xor
mov
std
or
mov
dec
pop
mov
dec
sbbb
scas
movsl
mov
int
scas
mov
imul
sbb
insl
mov
inc
bound
xlat
loop
xor
fidivrl
hlt
xchg
cmp
inc
dec
sti
jno
pop
jb
add
dec
cltd
add
cld
mov
cli
push
stc
dec
sti
sub
pop
ficomps
mov
test
xor
shrb
aad
gs
clc
aam
add
add
jecxz
sbb
das
push
jge
pop
cmp
or
and
insb
push
sub
popf
leave
addr16
sbb
stos
enter
ds
add
inc
imul
push
data16
cmc
mov
arpl
jns
push
movsl
int
std
mov
je
push
pop
lret
addr16
push
repz
dec
xchg
jo
stos
inc
mulb
mov
mov
sub
mov
dec
mov
jmp
lret
mov
adc
clc
lea
cmp
movsl
sub
popa
xlat
mov
xor
sti
out
lcall
or
dec
cmp
or
sbb
divb
pop
mov
sbb
xchg
jg
daa
insl
aad
adc
xchg
aam
inc
inc
xor
pop
repz
cwtl
testl
sbb
mov
xchg
pop
fcmovu
aad
lret
in
push
dec
out
xchg
testl
hlt
cmpsl
mov
pusha
data16
imul
rcrl
stc
fbstp
pop
jne
xchg
fbld
jbe
mov
inc
jns
imul
and
pop
in
loopne
jb
ret
jnp
cltd
mov
xor
lock
aas
and
call
xor
jl
push
xchg
xlat
repnz
mov
push
fs
sbb
ja
push
scas
movsb
pop
xchg
mov
sub
call
cli
mov
iret
fcmovnb
dec
out
jmp
cs
std
and
pop
push
loope
out
pop
inc
xorl
mov
test
xchg
sbb
sti
mov
sbb
pop
in
jno
xchg
push
pusha
push
pop
pop
fistps
dec
daa
pop
mov
sbb
jle
in
mov
test
lahf
daa
jbe
and
sti
rol
sahf
xor
mov
inc
dec
or
cs
inc
lods
pop
sbb
xor
pop
es
movsl
nop
aas
dec
outsb
out
mov
pop
insl
cmpsb
mov
push
mov
dec
arpl
insl
testl
xchg
in
push
or
inc
and
imul
or
inc
inc
iret
mov
int3
shlb
xor
neg
in
inc
shrb
xor
adc
add
xor
mov
mov
dec
mov
lcall
incb
lcall
and
push
sahf
popa
cmp
fadd
cmpsb
push
mov
out
jbe
xor
cmp
mov
call
sub
adc
pop
add
pushf
dec
loopne
inc
out
scas
adc
imul
int3
push
dec
stc
mov
insb
jo
push
dec
sar
rcrb
cmp
jo
insl
push
xchg
aaa
dec
sbb
outsb
fnstcw
sbb
or
sub
or
mov
inc
and
add
dec
loop
out
sub
repz
xchg
dec
jp
and
mov
xor
into
mov
pop
or
repz
and
mov
sub
int
mov
cltd
dec
pop
sub
je
in
cli
fs
push
xchg
xchg
outsl
adc
out
jnp
xchg
cwtl
jge
cmpsl
xlat
mov
fisubrl
jge
ja
pop
cmpsl
test
jb
xchg
xlat
cld
or
mov
jle
popf
xchg
inc
jmp
jg
cld
fsubr
adc
iret
fnsave
add
iret
inc
dec
mov
inc
cltd
jmp
cld
lret
je
mov
ret
mov
inc
mov
pop
fyl2xp1
pop
sti
xchg
or
and
fdivr
js
ss
or
sub
out
pop
xlat
sub
xchg
xchg
das
mov
inc
and
ss
pop
push
stos
into
pusha
add
mov
js
pop
jmp
aas
mov
ljmp
jp
lret
xchg
adc
jno
xchg
cwtl
loop
adc
inc
aam
sub
lret
mov
pop
and
xor
xchg
icebp
stos
jbe
adc
imul
cmp
mov
ficoms
push
ret
cli
sti
insb
pushf
add
mov
pop
clc
jns
bound
repnz
cwtl
into
jo
outsb
add
add
loopne
mov
lods
pop
repnz
push
mov
mov
fwait
mov
mov
sbb
mov
xor
mov
loope
fnstcw
adc
loop
or
pop
xor
stos
js
mov
divb
cmp
into
fsubs
xchg
push
pop
mov
adc
pushl
outsb
outsb
insl
inc
lahf
xchg
and
addb
rcl
jle
or
lcall
lahf
mov
fisubrl
movsb
int3
ljmp
adc
or
addl
push
cmpsl
adcl
lret
insb
fists
jp
cmc
xchg
adc
sti
push
dec
pop
pop
cld
leave
test
enter
mov
mov
mov
lret
rcrb
inc
rol
int3
inc
loop
loopne
inc
dec
adc
add
cs
fdiv
push
sahf
mov
inc
mov
lods
mov
mov
imul
icebp
pop
add
pop
sub
sub
pop
sub
rorl
mov
lods
inc
std
push
enter
fists
push
mov
inc
adc
rcrb
or
xchg
pop
mov
mov
mov
add
mov
xor
les
cmp
jmp
jle
fcoml
push
sbb
or
mov
lret
jbe
jns
fsubr
lods
mov
stc
or
sub
movsl
jecxz
dec
xor
sub
adc
mov
arpl
ds
mov
xchg
cmp
mov
jo
cmp
pop
push
lahf
mov
insb
mov
mov
xchg
les
call
leave
daa
dec
jnp
jnp
dec
inc
pusha
mov
cmp
loopne
ret
fstps
clc
push
std
idivl
push
sar
aas
sub
lcall
and
out
sub
orl
and
js
sub
inc
jb
mov
pop
loopne
pop
addl
push
rcrl
or
fiadds
fidivrs
pop
jae
push
shll
mov
pop
jbe
loop
aad
icebp
lahf
fistps
dec
into
out
les
pop
mov
dec
rcl
add
inc
lahf
pop
cmp
popf
pop
xchg
adc
jmp
ret
enter
ret
clc
mov
int3
loopne
cld
es
jbe
mov
dec
sbb
mov
cld
sub
mov
push
jge
loope
add
mov
dec
std
push
jle
add
sti
mov
xor
cwtl
adc
pop
adc
mov
mov
test
sbb
lcall
imul
push
test
cmp
stc
dec
loopne
xlat
pop
test
roll
out
cltd
aad
ret
sbb
inc
andl
sub
fstpt
mov
das
xchg
mov
aas
mov
mov
dec
inc
ret
les
adc
mov
fwait
sbb
add
jae
insl
cmp
sub
aaa
and
or
rclb
ja
lods
scas
push
sub
scas
repnz
shl
sub
push
pop
insb
sbb
insl
inc
adc
divb
push
inc
fs
ljmp
sub
int
loope
jp
cmp
dec
xor
sub
roll
cmp
xchg
loop
in
fprem
call
nop
pop
pop
jl
scas
sbb
push
push
and
fisubrl
mov
xor
xchg
jnp
mov
ret
fidivs
add
fs
out
in
push
sbb
lret
addr16
scas
xchg
add
popf
pop
movsl
pop
int3
addr16
cmp
xor
xor
jecxz
repnz
push
dec
mov
stos
std
int3
mov
in
dec
jmp
daa
fs
mov
or
push
test
cwtl
mov
dec
cmc
negl
in
jp
mov
sub
daa
fimuls
and
les
mov
into
jb
repnz
push
mov
int3
sub
jae
jno
enter
add
mov
imul
mov
mov
add
and
icebp
hlt
lahf
xchg
jle
pusha
xchg
cld
movsl
dec
call
cltd
mov
sbb
push
ss
push
jno
xor
cs
ffreep
and
sbb
fs
mov
out
lret
push
sbbb
lcall
fwait
push
imul
iret
out
repnz
add
mov
in
sub
bound
xor
xor
stc
outsl
stos
in
jae,pt
jnp
mov
aad
test
lods
xor
dec
pop
mov
mov
xchg
xor
sub
push
cli
pop
mov
orl
lds
jo
sbb
mov
adcb
rcrl
or
push
fstpt
jle
jb
cmp
jne
cmp
leave
dec
mov
cmpsb
mov
and
pop
inc
jl
dec
jno
mov
or
sub
mov
cmp
testb
test
enter
sbb
jl
mov
push
shll
mov
out
or
or
xchg
scas
xor
pushf
stos
or
xor
xchg
jne
pop
jecxz
push
xchg
jo
mov
test
mov
cmpsb
hlt
test
dec
les
das
das
fadd
cwtl
push
adc
cmp
pushf
mov
loop
es
mov
hlt
ret
push
jno
cwtl
ret
mov
jl
cmp
pushf
insl
push
fsubrs
inc
push
arpl
dec
dec
add
out
ds
mov
add
adc
xchg
adc
rcll
jg
jbe
lods
lret
sub
adc
repnz
jmp
sub
dec
pop
iret
mov
dec
adc
add
or
loope
push
insl
adc
add
inc
cmp
fcompl
add
cltd
and
mov
dec
add
and
shlb
add
mov
popf
sub
cltd
cmpsl
icebp
pop
mov
inc
add
mov
ja
fs
out
in
or
inc
addr16
outsb
call
outsb
notb
and
arpl
pop
push
rcrl
je
xchg
mov
or
push
test
je
clc
add
or
into
fdivrs
pusha
xor
fbld
mov
mov
test
mov
jg
mov
inc
icebp
mov
pushf
aad
add
pusha
in
loopne
push
xor
sub
mov
repz
gs
pop
or
out
aas
in
call
lods
mov
int3
or
decb
jmp
das
movsl
inc
aad
xor
pushf
mov
pop
or
loope
repnz
cmpsl
loope
jo
jle
dec
out
addr16
jge
mov
pop
mov
stos
repnz
push
sub
mov
pushl
pop
xchg
orl
mov
unpckhps
push
out
pop
stc
cmp
mov
add
mov
push
stos
int
add
shl
sbb
ljmp
push
cmp
rcrl
test
adc
in
test
adc
xchg
cmp
ds
jle
xchg
pop
cli
cld
fwait
push
inc
imul
pop
lcall
xchg
pop
mov
mov
ret
or
in
ja
mov
cmpsb
sub
and
jle
negl
out
xor
mov
xchg
mov
pop
or
rcrl
ja
addr16
lods
insl
incl
cld
pushf
mov
dec
fdivrs
aas
call
dec
pop
nop
pop
clc
outsl
int3
push
jo
aam
int3
test
mov
loope
repnz
in
pop
inc
inc
pusha
je
add
mov
and
sarl
jae
mov
cmp
jg
fistpl
popf
es
xchg
and
mov
mov
mov
jmp
jp
cwtl
jle
mov
jns
pop
loopne
mov
lret
scas
dec
xchg
bound
add
pusha
dec
xorl
js
mov
stc
pop
dec
dec
sarb
sbb
daa
push
jge
jno
inc
lahf
pop
sahf
xor
cmpsl
stc
mov
pop
insl
in
test
xchg
outsb
testl
add
arpl
sbb
xchg
es
lret
in
fwait
add
adc
aad
mov
xchg
add
sub
mov
cs
mov
dec
cs
test
shr
add
in
mov
pop
test
stos
std
jg
popf
aas
je
or
testb
loope
test
xchg
dec
shlb
repz
or
adc
test
inc
fwait
ljmp
xchg
or
xchg
aaa
call
in
lea
cmp
or
in
adc
and
jno
jnp
xchg
lea
and
in
fdiv
jno
sbb
xchg
push
inc
adc
push
rorb
ret
rcrb
fiadds
jne
mov
or
pop
pushf
test
sub
out
aam
adc
divb
adc
jmp
bound
cld
jns
loop
rcl
in
in
imul
repz
lods
imul
mov
pop
jbe
pop
mov
notl
ss
cld
call
inc
mov
lods
jbe
sbb
push
push
dec
cmovs
and
sbb
jbe
insl
repnz
iret
cs
cmp
addr16
dec
out
dec
jnp
jg
push
or
hlt
cmp
jge
sarb
push
add
sarb
inc
out
fsubrs
sbb
sti
push
and
inc
xlat
mov
lcall
mov
or
lods
stos
or
sahf
inc
rclb
pushf
mov
sub
mov
jbe
inc
addr16
insb
loop
lret
xor
pop
cmp
leave
jge
mov
sbb
out
ljmp
push
loope
xchg
fcom
adc
xor
cmpsb
test
adcb
xchg
sbb
cmp
and
sub
aad
inc
cmp
mov
movsb
lds
dec
mov
test
int3
dec
and
stos
js
test
out
pushf
pop
adc
sub
dec
xchg
out
mov
pop
mov
or
fwait
mov
pushf
mov
lods
movsl
or
aad
lock
insb
sbb
or
jl
mov
mov
sbb
stos
xor
jnp
xor
pusha
and
in
mov
arpl
push
xchg
loop
std
xchg
inc
mov
outsw
fists
shlb
popa
xorb
pop
push
rclb
inc
hlt
sahf
bound
test
cmp
pushf
dec
mov
adc
test
xchg
ret
push
lods
lds
popa
icebp
inc
and
lds
movsl
dec
out
stos
adc
sbb
bound
pop
and
and
jno
mov
or
subb
int
sbbl
add
lcall
mov
inc
lds
bound
test
aas
mov
in
js
mov
out
push
lods
cmpsb
jnp
arpl
xchg
sbb
andb
mov
pop
cltd
aad
movl
xor
movb
stos
imul
fs
inc
sub
aas
shll
cs
push
js
xchg
cmc
aad
cmp
cli
dec
inc
gs
push
in
enter
dec
cmp
les
jne
shrb
ds
xchg
push
mov
in
loope
push
xor
mov
mov
cld
jmp
hlt
mov
dec
nop
iret
adc
push
push
jg
push
icebp
cmpsb
jle
rcl
xchg
xchg
pop
in
pop
sbb
push
pop
sahf
jge
lods
mov
xor
imul
mov
lods
mov
bound
cwtl
jne
lahf
adc
xchg
jecxz
adc
jno
mov
cmp
xchg
add
cmp
loop
das
sti
pop
gs
mov
mov
cmp
push
loope
popf
xor
iret
mov
xchg
push
mov
rcrb
inc
imul
ds
sub
dec
ss
dec
xor
pop
push
pop
cmp
xchg
dec
sbb
jmp
mov
jo
sub
icebp
imul
add
pushl
cltd
sub
xor
xor
sbb
mov
cwtl
shlb
or
mov
mov
out
imul
xor
je
and
add
cmp
sbb
cmp
call
cwtl
outsb
call
jnp
pop
movl
test
pop
sbb
lret
sbb
cmp
pop
xor
shrl
add
jbe
roll
dec
ss
out
leave
mov
stos
and
mov
push
cltd
mov
outsl
xchg
lods
cmpsb
push
arpl
in
jge
lea
inc
popa
pop
mov
test
ret
inc
and
mov
imul
push
int3
out
and
mov
push
push
mov
push
hlt
dec
inc
push
dec
push
push
pop
lods
sub
cwtl
cli
push
imul
imul
test
scas
loope
sub
aam
mov
jge
fwait
jmp
sbb
push
imul
repnz
dec
sbb
pop
sbb
fucom
push
shlb
pop
lahf
adc
test
xor
sbb
nop
jne
add
stos
dec
dec
dec
and
repnz
mov
stos
push
bound
scas
fstps
sub
push
lea
mov
leave
cmp
pushf
hlt
out
std
cld
and
in
pop
stos
ss
sub
nop
mov
dec
adc
jbe
inc
test
sbb
and
shlb
pop
in
xor
jbe
xchg
pusha
mov
xlat
cmpsl
cmc
and
lds
xchg
mov
sub
sarl
inc
ret
sub
loopne
push
mov
sahf
leave
mov
call
push
addb
and
bound
mov
pop
mov
mov
mov
mov
mov
aaa
push
mov
sbb
dec
sub
cli
pop
xchg
pop
or
sarb
pop
cmp
aad
jge
xor
insl
in
dec
xor
outsl
shrl
clc
lods
push
mov
sub
call
fildll
notl
clc
andb
and
jg
icebp
pusha
test
dec
in
xor
test
lock
mov
jbe
imul
sbb
xchg
shll
imul
ficomps
cmp
jmp
jnp
lcall
push
pop
push
es
inc
dec
xchg
add
mov
in
js
sub
mov
cli
and
and
xchg
mov
and
ss
cld
aam
scas
std
xchg
jmp
ds
mov
int3
or
xlat
popf
test
xor
call
mov
lcall
or
xor
scas
int3
out
scas
xor
sbb
loopne
out
adc
xlat
mov
sub
adc
sbb
or
ljmp
adc
int
imul
pop
pop
or
cmp
jle
es
jnp
pop
dec
outsb
add
cmpsb
add
dec
or
pop
jae
cmp
jecxz
xchg
loope
mov
leave
addr16
xor
jmp
cmpl
leave
xlat
xlat
rorb
sbb
inc
mov
sbb
or
lahf
add
sub
fstp
jnp
pop
sub
inc
hlt
mov
lcall
ss
inc
sti
in
push
sbb
mov
and
ljmp
and
ret
push
xchg
sbb
fstl
or
shll
les
lcall
or
cmpb
fsubrs
outsl
sbb
cmpsl
add
fwait
dec
xchg
nop
leave
xchg
xchg
sbb
adc
sub
mov
add
xor
shll
insb
sub
das
xchg
in
test
push
xchg
into
xchg
cwtl
das
mov
mov
or
mov
sbb
cmp
std
sub
push
icebp
push
sub
mov
push
movsl
and
sbb
out
sub
sarl
sbb
xor
add
ss
or
or
insb
xchg
pop
ja
icebp
adc
mov
mov
leave
sub
push
pop
pop
sbb
std
shlb
or
je
inc
pop
insb
add
mov
fwait
add
mov
xchg
mov
pusha
in
push
mov
addb
xchg
pop
arpl
insl
aaa
in
fisubl
dec
idivb
jp
mov
pop
bound
imul
insl
outsl
stos
mov
and
dec
xor
data16
mov
mov
fs
jge
or
xchg
ljmp
push
cmp
call
mov
push
lea
inc
fwait
pop
pop
jge
pusha
lret
iret
fisttpll
fsubp
dec
arpl
mov
mov
repz
cwtl
push
imul
add
cld
or
push
inc
push
es
xchg
push
mul
pusha
lahf
pop
sub
adc
push
mov
ficompl
xchg
push
cmpsl
rsqrtps
xor
lret
int
and
in
cld
sarb
les
xchg
inc
xlat
inc
mov
mov
mov
push
addr16
shl
jle
jno
and
push
push
nop
jo
jecxz
mov
cld
hlt
adc
push
lods
clc
push
mov
pop
test
cltd
dec
rclb
cmp
rolb
repnz
filds
mov
insb
cmp
lods
clc
lea
lea
in
pop
push
sub
sub
into
mov
add
scas
movsl
lods
imul
xor
add
xor
add
or
stc
xchg
xchg
pop
les
hlt
packuswb
nop
ret
jns
aad
push
mov
clc
sbb
jo
out
imul
cmp
xlat
insb
inc
or
cmpsb
fucomi
or
inc
lret
cmpsb
jle
inc
pop
test
cs
loopne
imul
jle
mov
fs
out
jp
push
pop
xor
clc
aaa
shll
rclb
mov
inc
sbb
sbb
in
in
cmpsl
mov
cmp
mov
pop
lcall
in
add
cmpsl
xor
mov
jb
shlb
outsl
inc
pushf
pushf
sarl
repnz
ja
in
or
cmp
mov
dec
or
xor
fwait
andb
shll
js
and
cltd
inc
test
jb
cmpsl
xchg
repnz
mov
jmp
mov
das
mov
pop
pushf
mov
scas
mov
xor
and
mov
js
fwait
cs
cld
stc
ds
addr16
xlat
iret
cmpsb
push
mov
test
jmp
fwait
aas
xor
pop
and
adc
lret
mov
cmpsb
xor
subl
push
aam
testl
xchg
loope,pn
inc
sbb
jbe
adc
sbb
flds
dec
adc
insb
or
pop
mov
jge
sbb
xor
inc
loopne
repnz
icebp
cmp
dec
push
mov
cmc
lock
fisttps
inc
dec
stc
add
and
cld
pop
cs
addb
inc
into
test
xchg
jno
cld
clc
rol
ja
mov
aaa
adc
sub
pushf
out
add
add
push
pop
dec
repz
sahf
sbb
mov
jge
adc
or
inc
jmp
scas
xchg
sub
xorl
xor
mov
mov
mov
in
jp
jge
les
repz
test
std
mov
xor
dec
pop
cmp
dec
out
das
stos
jno
pop
cwtl
pop
or
xchg
mov
fwait
jl
xor
mov
loope
cwtl
fadds
push
jnp
mov
out
or
jl
aam
add
out
mov
pop
aam
cld
push
jae
sub
push
fsubp
insb
pop
lods
int
push
jno
pop
and
int3
mov
dec
cmpsb
lods
adc
mov
aam
aam
clc
sub
mov
add
arpl
inc
movsb
lret
xchg
and
test
mov
xor
stos
mov
inc
jnp
xor
jp
mov
xchg
and
rolb
adc
mov
mov
jmp
sub
ljmp
dec
pop
popf
adc
std
je
sbb
jle
arpl
lahf
ud0
sbb
xchg
lock
cmp
sbb
push
sbb
push
movq
imul
stc
sub
mov
mov
insb
jnp,pt
sbb
popa
mov
jno
lret
dec
outsb
xchg
test
cltd
push
dec
fisubl
sub
sub
loope
in
jge
mov
push
mov
or
cwtl
inc
gs
arpl
push
and
adc
push
fldcw
dec
mov
adc
imul
jmp
fcomi
sbb
mov
or
push
hlt
lds
imul
pop
data16
mov
popa
dec
adcb
sub
xor
in
nop
icebp
fsubl
cmp
cmc
std
or
in
push
push
mov
jae
push
jb
xor
shr
rcll
dec
cmp
xchg
mov
push
mov
enter
pushf
sub
xchg
add
cmp
xchg
ja
rol
pop
fwait
scas
cmp
mov
iret
mov
pop
dec
rcrl
test
pop
lcall
fbld
pop
jmp
sub
dec
jecxz
push
adc
fcomps
not
call
icebp
jne
push
jle
cmp
out
push
mov
ret
sub
inc
dec
dec
mov
mov
pop
mov
mov
out
lcall
sub
mov
les
or
std
aam
mov
aas
negb
xchg
xchg
pop
add
adc
outsl
pop
inc
and
shlb
adc
push
dec
lock
test
inc
negb
pop
mov
mov
rorl
fcoms
rcr
divb
inc
stc
push
pop
xchg
sbb
lods
popf
shrl
pop
nop
dec
xchg
loop
sti
mov
mov
pop
arpl
xor
xor
pop
inc
aas
mov
pop
ret
popa
filds
int3
jp
out
push
jae
cmpsb
or
movsb
icebp
lods
orl
sub
sub
sbb
dec
ja
in
sub
outsb
push
push
imul
clc
icebp
jbe
dec
dec
out
cmp
or
push
lds
xchg
testl
lds
lretw
gs
rolb
js
sbb
mov
out
in
scas
test
dec
jno
push
js
loope
or
mov
sub
sbb
clc
in
xor
jo
loope
outsb
inc
daa
nop
pushf
movsb
push
pop
cmp
sub
lret
das
aam
add
loope
mov
mov
lods
adc
fbstp
xorl
inc
cmp
jbe
jecxz
fs
add
cmp
jl
dec
imul
adc
push
test
outsl
insl
ds
cmp
lcall
sub
and
lret
xor
jmp
data16
mov
or
out
cmp
mov
rorb
add
pushf
je
fs
cmpsl
mov
mov
or
add
push
xchg
sub
ljmp
mov
lahf
sahf
cmpb
pop
std
popf
arpl
push
cmp
dec
sub
sub
aaa
in
mov
aas
pop
push
pusha
sub
pop
jno
add
adc
outsb
mov
sti
mov
mov
ret
inc
loop
mov
push
fisubs
add
daa
lahf
or
paddw
and
or
jne
dec
out
repz
jle
cli
imul
or
xchg
stos
xor
sub
test
pop
mov
push
fiaddl
lods
enter
scas
cmp
cmpsl
push
repnz
int
movsb
stc
test
ljmp
aas
xchg
jae
js
dec
fdivr
push
ljmp
mov
jne
cmpsl
int
or
arpl
cmc
dec
scas
mov
arpl
into
mov
aad
mov
inc
mov
xor
inc
imul
mov
icebp
or
sub
das
sub
pop
mov
mov
jle
dec
into
or
pop
lcall
repnz
sub
adc
jno
aas
dec
push
jp
xchg
rolb
pop
mov
stc
outsl
mov
addr16
xchg
mov
add
jno
pop
cltd
cmp
push
repz
fildl
push
jp
cltd
pop
rep
mov
fistl
imul
xchg
jae
scas
aaa
xor
or
pop
pop
mov
or
and
test
test
jo
xchg
mov
clc
jne
clc
inc
dec
xchg
mov
and
ss
sub
dec
mov
daa
sbb
shlb
add
sub
mov
and
repnz
and
test
sub
adc
sbb
jno
mov
push
xchg
fcompl
insl
sbb
sub
hlt
test
jge
inc
push
das
movsl
and
lahf
mov
jmp
or
xchg
and
xor
ror
daa
test
mov
inc
es
xchg
subb
lret
or
in
mov
popa
sub
rcl
xchg
xorl
out
int
and
arpl
mov
cmp
fisubrs
imul
nop
int
cmp
add
pushf
cmp
rclb
lds
shl
mov
fs
loope
mov
ja
dec
cmp
shlb
jecxz
out
sub
sarb
les
xrelease
movsb
jo
inc
fisubs
icebp
cmpsl
out
mov
pop
lret
std
push
mov
test
add
jne
jecxz
ror
or
stos
add
in
aaa
mov
mov
test
out
sbb
and
mov
xchg
movsl
add
xchg
sbb
pop
cmp
arpl
mov
sub
btr
ljmp
jne
out
ficompl
fldcw
cs
mov
lds
iret
aad
cmp
xchg
rcrb
dec
inc
dec
out
insl
jnp
dec
sbbl
sbb
inc
jnp
lcall
shlb
rolb
popa
mov
fcomps
mov
xor
ret
fwait
and
mov
cmp
shl
xor
test
sub
cmc
popa
mov
jb
ret
int3
rolb
ds
ret
mov
xor
mov
hlt
mov
push
int3
in
cmpb
and
dec
andb
or
or
adc
js
aas
xchg
pop
adc
dec
jmp
push
dec
sbb
aas
insl
mov
lods
enter
adc
cltd
or
jae
inc
test
pop
adc
loop
scas
push
and
scas
mov
xchg
xor
inc
jp
aam
xchg
xchg
sbb
cltd
push
ret
hlt
mov
or
inc
loop
gs
and
call
add
adc
out
cld
cmpsl
jp
mov
or
mov
jl
add
out
xor
mov
and
decb
cmp
aad
clc
pop
call
fisttps
add
inc
pop
mov
rcrb
mov
movsl
cmp
fnstenv
mov
sub
dec
sar
jno
mov
fisttps
push
jno
or
push
pop
fs
loopne
insb
jb
mov
cs
jae
loop
xor
clc
dec
stos
frstor
or
sub
push
repz
mov
xchg
insb
inc
xchg
sub
jecxz
add
fstps
pop
aaa
sbbb
jl
adc
les
pop
gs
scas
hlt
ja
xchg
sahf
dec
ljmp
sub
ja
sbb
xor
jae
inc
xchg
inc
gs
lcall
out
push
sbb
pop
ljmp
pop
repz
scas
js
pop
enter
inc
xor
jne
jns
cmp
lret
inc
sub
mov
mov
call
test
add
push
clc
lcall
enter
dec
mov
enter
mov
add
or
in
daa
mov
fidivrl
aaa
mov
lret
inc
stos
fisttpll
or
push
repnz
subb
mov
mov
dec
dec
pushf
daa
stos
inc
rcrl
pop
cmp
ret
pop
js
cltd
mov
out
mov
sub
into
fmull
cmp
in
les
aad
dec
jnp
sbb
cmp
leave
dec
fdivr
lea
mov
push
les
sbb
inc
push
cld
push
xchg
aad
sahf
cmp
or
mov
in
inc
cmp
push
data16
fadds
loopne
cmp
xchg
xor
jo
add
int3
lret
adc
aaa
mov
jg
out
mov
nop
mov
inc
sbb
push
mov
pop
popf
and
push
jge
out
sbb
in
cli
sub
sub
pop
xchg
xchg
sbb
ss
test
add
cmpsb
stos
push
lock
loopne
insb
mov
jecxz
jns
adc
insb
repnz
push
fwait
int3
lods
repz
lahf
mov
lahf
out
inc
mov
jbe
jecxz
mov
in
daa
inc
test
lcall
cltd
in
or
std
ljmp
mov
shrb
adc
mov
push
inc
ficomps
mov
fistl
dec
or
fldt
add
shlb
mov
js
cwtl
add
aad
notb
sub
and
inc
test
jmp
out
cmp
pop
ret
pop
cld
shlb
jl
ret
dec
std
pop
xchg
mov
mov
add
lcall
mov
bound
pop
aas
or
repz
xchg
mov
test
mov
cmp
adc
jle
and
ja
popa
add
in
cmpl
lds
lret
rorb
jnp
sub
fidivl
inc
mov
jg
lods
mov
ljmp
xor
pop
xor
out
adc
inc
sub
aas
pop
dec
js
loope
add
pop
into
add
aaa
repz
nop
ss
pop
and
adc
sbb
push
lret
add
ret
dec
ret
sub
faddl
xchg
lock
lret
popa
dec
pushf
jbe
fstps
cmp
jb
icebp
push
sbb
jmp
jmp
jmp
sub
mov
push
lahf
sub
xchg
sarl
add
fadds
push
inc
scas
or
js
popf
lcall
std
inc
adc
mov
dec
aaa
cmc
hlt
fsubrp
mov
fucom
jnp
sar
dec
xor
add
push
cmp
call
sub
mov
popa
scas
inc
test
xchg
sahf
rcrl
jbe
jno
mov
imul
fcompl
mov
out
xor
xchg
int3
cmp
add
cmpsb
jbe
and
outsb
inc
lods
lods
daa
js
mov
pop
fiaddl
pop
cwtl
xlat
dec
shll
insl
fs
cltd
mov
xor
jae
insb
fwait
nop
mov
mov
xor
test
popa
sbb
fucomip
sub
fwait
imul
push
and
adc
add
clc
mov
repnz
jnp
idivb
bound
push
mov
outsl
in
repz
repnz
and
int3
mov
test
lahf
jl
repz
xchg
xor
cld
pop
pop
adc
rorl
cs
mov
test
lods
popa
or
mov
and
jnp
filds
jne
ds
mov
repnz
fnstcw
cmp
std
inc
lret
fwait
inc
test
shr
xchg
mov
mov
mov
push
inc
and
and
into
xor
stos
sti
aas
inc
aas
push
or
cld
out
notl
fbstp
bound
sbb
cmp
cmp
xchg
in
fwait
pop
xchg
inc
push
cs
bound
loop
lahf
es
shlb
hlt
pop
xor
stos
pop
sbb
in
movntps
nop
sub
xor
jmp
sbb
cmp
dec
ret
lret
fs
mov
test
jl
dec
mov
push
sub
inc
cmpsb
ret
dec
call
ss
or
sub
clc
shll
in
jp
insb
push
mov
add
jl
aas
cmpsl
pop
pop
and
cmp
jno
cmp
shll
mov
adc
add
in
sub
xchg
into
pop
popf
fucomip
cmp
cld
inc
jns
jns
testb
fcomi
hlt
test
je
mov
stos
adc
jnp
dec
sub
das
push
jmp
adc
shll
testl
xor
movsb
aam
into
and
ljmp
lods
je
xchg
xchg
imul
jge
adc
or
lea
xor
dec
stos
push
mov
stos
pop
xchg
push
in
out
adc
out
ljmp
adc
and
pop
ja
xchg
lods
push
push
mov
int
pop
push
popa
imul
xor
or
mov
inc
adc
imull
outsl
mov
pusha
shlb
int
testl
or
mov
outsb
sub
or
lahf
and
sbb
bnd
inc
push
popa
fdivs
sub
in
push
cld
shl
xor
jg
orl
rcll
cmp
movd
cmp
aas
sub
fcmovu
sub
mov
repnz
xchg
arpl
scas
cwtl
inc
jae
push
fs
push
mov
xor
xor
xchg
pop
add
pop
lcall
mov
pop
out
sar
mov
mov
add
movsb
push
cs
mov
adc
and
jge
xor
stc
jne
cmp
mov
cmp
pop
mov
mov
mov
pop
mov
cmc
addr16
test
add
leave
lret
mov
push
adc
cwtl
icebp
repz
pop
imul
popl
xchg
dec
mov
or
mov
lret
xor
repnz
scas
inc
mov
cltd
int
sar
xchg
ret
stc
jp
popf
xorl
cwtl
cs
aam
cmp
xchg
arpl
out
scas
xchg
or
loope
leave
pushl
add
leave
xchg
or
test
xor
idivb
xchg
sub
shrb
daa
sub
dec
jbe
je
sbbl
push
sub
test
mov
lods
or
push
movsl
in
imul
push
repnz
mov
mov
push
mov
and
jmp
daa
mov
push
cmc
ss
roll
adc
shl
push
xor
mov
mov
movsl
add
push
repz
sbb
cs
ucomiss
gs
lds
mov
call
adc
or
and
je
mov
or
sbb
add
xchg
orb
mov
out
scas
testb
shll
xchg
addb
clc
sub
fnstsw
xchg
insl
dec
pop
dec
movsb
add
mov
push
pop
fadds
sbb
jo
rcrl
pusha
stos
ljmp
jp
push
icebp
movsb
mov
out
inc
imul
lock
aam
mov
jno
jge
cmp
add
lret
mov
xchg
dec
pusha
pop
cmp
dec
icebp
les
xor
mov
filds
mov
bnd
mov
ret
push
or
sub
pop
test
cmc
and
xor
cmp
and
and
jae
mov
jno
js
pop
aam
add
fnstenv
jne
xchg
mov
mov
test
xor
imul
or
scas
and
testb
mov
fildl
sti
mov
or
xchg
xchg
push
and
lea
jno
out
std
lahf
iret
or
push
pop
xchg
stos
push
push
dec
mov
dec
in
push
and
jle
push
mov
cmc
je
push
push
into
xor
insl
push
cmp
cmpsl
out
mov
lret
mov
ret
sub
mov
mov
sbb
ficoms
into
out
jecxz
ficoml
ds
insb
adc
imul
outsb
aaa
mov
mov
cwtl
jmp
mov
outsb
outsb
add
mov
or
xor
idiv
push
mov
adc
inc
outsb
lods
daa
insl
int
fisubl
call
cmc
xchg
movsl
ret
xor
loope
ljmp
or
xchg
push
push
sub
jae
inc
jbe
push
push
xor
lret
mov
mulb
pushf
xor
xor
loopne
adc
cwtl
cwtl
popf
sbb
push
pop
sarb
neg
mov
outsb
sub
pop
or
lcall
lea
or
int
loop
test
jle
out
mov
dec
pushf
imul
outsb
pop
hlt
imul
std
outsb
in
jl
cmp
add
das
not
mov
or
filds
push
push
jne
cltd
mov
insl
das
or
out
dec
mov
jge
xor
mov
cmp
inc
push
dec
pushf
jle
jle
cmpsb
aam
or
stos
xor
bound
dec
sub
fstl
dec
xor
ja
andl
roll
jnp
mov
call
ljmp
jmp
sahf
push
fcomp
cwtl
push
imul
dec
sbb
dec
jae
add
movsl
ss
inc
outsl
data16
roll
mov
repnz
cmp
push
sbbl
mov
sbb
inc
cld
cli
int
es
out
mov
dec
mov
jp
xor
xchg
popf
test
je
mov
dec
dec
push
cwtl
mov
mov
cmp
add
out
int3
push
pop
push
mov
pop
es
lret
fiadds
or
add
in
testb
les
lds
xchg
mov
outsl
jno
das
xchg
mov
push
sbb
inc
inc
sbb
lods
addb
fmuls
lods
test
or
test
cmc
push
dec
in
aas
icebp
mov
adcb
add
fisttpll
sub
cmp
call
push
decb
mov
pop
inc
scas
push
ljmp
push
addl
idivl
mov
into
idivl
mov
xor
pushf
out
outsb
lret
mov
nop
mov
push
test
aam
filds
cmp
data16
inc
jmp
or
loopne
inc
push
aam
dec
lahf
mov
insb
pop
jnp
ja
jle
rcll
cltd
sti
mov
jge
outsl
jns
mov
push
push
adc
cld
sub
or
shll
and
dec
or
das
jb
sub
push
sub
scas
cmp
in
xlat
sbb
push
hlt
lods
movsb
sub
mov
or
xchg
das
jnp
mov
pop
inc
xor
out
jle
and
xorb
sbb
xchg
ds
inc
leave
mov
jle
pop
jmp
out
xor
popa
in
loopne
loopne
mov
dec
cmp
sti
or
mov
jbe
mov
push
add
cmp
mov
ljmp
ja
or
data16
dec
leave
dec
adc
sahf
pop
das
dec
xchg
sub
repz
rcll
shl
mov
mov
aaa
jmp
or
jle
cs
test
jns
ret
sbb
jg
mov
mov
inc
xor
cli
std
xchg
and
popa
cmp
aam
sub
jnp
mov
int
jb
ss
rcl
cmpsb
ret
popa
add
enter
rcr
repnz
jae
xchg
push
fmul
cmpsl
scas
clc
pop
mov
imul
jbe
nop
gs
fs
repz
in
fdivrp
sbb
jl
jnp
icebp
mov
push
xchg
adc
mov
push
cmp
scas
stos
add
repnz
pop
and
push
and
test
lcall
jg
imul
adc
dec
xchg
cmc
mov
icebp
lods
or
data16
test
sar
add
and
xchg
inc
adc
repz
xchg
lods
sti
adc
pop
push
int3
dec
adc
and
lea
mov
xchg
into
jp
call
sub
dec
pop
fmul
shlb
fists
lret
fisubl
movsl
dec
sbb
ja
dec
call
adc
outsb
roll
dec
je
fisubrl
mov
data16
fs
cmpsb
mov
decl
push
addr16
aad
pop
dec
mov
enter
adc
bound
js
pop
and
fcompl
imul
pop
call
push
sbb
sahf
and
or
pop
add
in
out
std
pop
xor
xchg
gs
fwait
dec
mov
stc
cld
movsb
mov
or
inc
fdiv
push
fisubs
mov
jl
jmp
sahf
push
sysenter
adc
dec
repz
push
roll
mov
mov
cmp
jne
in
cmp
fdivs
fnstenv
imul
jno
in
cmp
lahf
sahf
sub
icebp
mov
adcb
inc
cmp
mov
std
popf
ja
or
rcll
sbb
aad
dec
push
ret
lods
sub
stos
push
mov
pop
aam
stos
push
xor
imul
jp
pmaddwd
arpl
xor
mov
sub
in
jnp
fwait
fwait
mov
adc
push
sub
mov
loopne
js
adc
sub
loop
in
sbb
mov
pop
push
cli
in
dec
jnp
xchg
cmp
pusha
dec
cli
sbb
xor
leave
jg
sahf
loopne
lahf
push
xchg
dec
daa
loopne
mov
jbe
mov
lahf
ja
sbb
cmp
inc
ljmp
xorb
imul
xchg
std
sarb
add
jmp
push
lahf
and
aam
data16
leave
sahf
ficoms
jp
adc
or
push
cmp
les
jns
adc
in
jo
mov
fscale
insl
daa
rclb
push
add
rorl
es
mov
inc
sahf
or
mov
push
inc
in
sbb
or
pop
test
bound
mov
into
xor
cmp
sbb
aam
lock
jnp
xchg
mov
lods
lock
mov
lahf
sbb
ret
push
mov
jnp
push
push
dec
add
pop
dec
sub
insb
lock
ret
jecxz
inc
fs
ds
in
cmp
fstpt
inc
jmp
nop
rcrb
mov
mov
add
lods
xchg
xor
adc
stos
push
ror
mov
adc
mov
inc
jle
test
bound
push
mov
inc
inc
sbb
loop
scas
pop
movsb
ljmp
dec
push
lahf
ljmp
imul
mov
lret
pop
je
leave
mov
clc
sub
notl
leave
dec
lret
xor
jno
mov
add
push
scas
mov
clc
test
sarl
outsl
jle
lret
inc
dec
add
lods
mov
xchg
lret
lret
push
mov
mov
insb
stos
mov
sahf
xchg
add
mov
aas
test
in
xor
mov
leave
imul
push
add
inc
mov
push
push
cmpsb
bound
xor
js
jge
sub
mov
and
fs
pop
push
mov
xorb
mov
lahf
shll
sbb
sbb
fldenv
inc
push
fwait
adc
jno
xchg
jae
cmc
hlt
cmpsl
push
mov
sahf
add
sub
dec
je
add
test
sbb
mov
imul
sti
cltd
cmp
popf
clc
cld
jno
divl
or
shrb
push
aas
mov
loop
or
jp
xchg
fidivrl
test
cltd
divb
ds
cmpsb
lcall
fildl
test
lret
mov
sbb
test
gs
cmpsb
int3
wbinvd
cmp
test
mov
lods
xchg
adcl
push
cmp
fcomip
gs
xor
xorb
hlt
push
jnp
mov
iret
and
xor
and
jb
and
pop
mov
cmp
into
outsl
sbb
push
imull
fbld
xchg
hlt
xlat
sbb
add
add
lahf
and
xchg
lret
scas
arpl
sbb
fwait
cmp
test
fimull
imul
sahf
jg
ss
icebp
sahf
cwtl
icebp
les
cmp
in
aaa
pop
std
cli
shll
ret
orb
repnz
xor
inc
shl
inc
mov
cli
sub
arpl
sbb
dec
repnz
insb
mov
adc
nop
jb
jle
jnp
scas
cmp
test
mov
or
sub
out
push
pusha
pop
mov
mov
inc
fldt
xor
out
mov
cmpsl
leave
xchg
lea
aam
outsl
test
sbb
sti
mov
sahf
mov
cmp
dec
mov
mov
push
sbb
mov
xor
push
movsl
pusha
clc
dec
xchg
push
lods
push
fldl
into
ljmp
push
xchg
cwtl
mov
aas
into
mov
mov
mov
in
adc
push
jo
mov
sub
push
xchg
ds
xor
iret
jnp
mov
mov
xchg
es
adc
dec
jge
xor
mov
inc
and
fisubrl
push
cwtl
inc
xchg
iret
pushl
xor
aas
scas
and
rorb
movl
jns
jmp
xor
dec
jne
xchg
lret
jl
sub
gs
leave
fdivr
pop
inc
or
leave
xchg
addr16
or
mov
pop
cmp
cmp
inc
push
jg
dec
xchg
xchg
cs
notb
push
out
cmc
add
popf
stos
clc
mull
test
lret
add
orb
je
sbb
and
add
push
sahf
inc
lock
xchg
scas
fsubs
shll
addr16
sub
popf
in
aam
xchg
pop
and
aad
dec
aaa
lret
hlt
xor
aad
push
in
xor
push
push
dec
pop
stos
cmp
iret
cmp
in
call
mov
and
xorl
ja
mov
data16
mov
out
and
int
out
or
dec
or
lret
jl
cmpsl
scas
and
test
in
pop
jmp
fcmovb
jb
add
or
iret
push
popf
or
je
mov
or
push
inc
cmpsb
adc
loopne
mov
aas
test
popa
aad
loope
idivl
das
lods
imul
inc
fdivrs
xchg
cmp
sbb
push
jno
push
mov
jge
sbb
xlat
cmpsb
cmpsl
lcall
push
sub
loope
adc
js
xlat
sbb
mov
fwait
iret
lret
sbb
mov
push
push
add
push
fldenv
fwait
sbb
sub
aam
mulb
inc
bnd
mov
int
fs
xorb
sbb
bound
pop
jae
out
loop
add
xchg
mov
xchg
add
hlt
pop
xchg
outsl
insl
jb
outsb
movsl
jp
insl
stos
or
xchg
enter
mov
or
popa
adc
inc
dec
ud0
scas
js
repz
dec
and
orb
imul
movsb
std
in
or
js
pop
dec
and
cmp
push
sub
or
ljmp
mov
jge
lret
stos
pop
fucomi
enter
push
into
ds
mov
jae
pop
jl
xor
int3
push
mov
lret
xor
or
dec
and
jecxz
push
mov
and
in
cmp
and
in
test
xor
ljmp
dec
push
lea
jle
xchg
cmpsl
lds
adc
mov
mov
inc
cmp
push
ret
pop
pushf
fnstcw
in
sbb
stc
iret
negb
sbb
js
fwait
sbb
cmc
and
add
call
test
cmp
sbb
cmp
scas
add
or
fsubs
cld
sub
or
shlb
push
jl
xor
cmp
push
push
push
int3
ja
sti
bnd
lcall
add
jns
pop
mov
mov
cmp
into
dec
add
mov
lea
test
lcall
ds
sub
scas
int3
movsb
daa
mov
cmc
aas
mov
pop
xorb
and
rcrb
pushf
iret
cwtl
add
or
sub
jb
cmp
add
and
loope
jle
ja
or
inc
mov
lcall
push
gs
cmp
jmp
std
add
jae
ds
jno
lock
mov
lods
scas
sbb
sub
pop
push
imul
es
sub
or
sub
leave
arpl
fisubrs
mull
jo
fiadds
in
fstpt
push
xchg
push
lret
cli
pushf
clc
popf
add
scas
dec
cmp
jb
repnz
rolb
add
mov
sub
mov
mov
das
cmp
mov
test
sub
pop
mov
ljmp
push
jge
and
lea
das
sahf
clc
aaa
cmp
inc
imul
stc
inc
sarb
int3
mov
movl
scas
jp
scas
out
fisubl
push
std
sbb
push
inc
sahf
shrb
push
or
imul
pop
ss
xor
pop
addl
dec
cmpsb
movsl
movsb
add
pop
sti
or
mov
pop
xlat
dec
popf
bound
es
out
cltd
push
std
arpl
xor
xchg
xor
in
popa
in
pop
fsts
in
cwtl
mov
icebp
mov
adc
dec
stc
shl
dec
addb
sub
in
iret
out
out
push
loopne
ror
sub
sahf
mov
push
add
or
mov
mov
xor
jmp
add
stos
cltd
scas
mov
mov
dec
cltd
xor
scas
inc
add
cltd
inc
stc
sbb
shll
nop
aaa
pop
test
pop
adc
mov
sbb
test
adcl
mov
imul
push
pop
add
or
shrl
jecxz
mov
jl
push
sti
push
adc
addr16
cmp
inc
sub
push
dec
lret
jge
fidivs
addr16
jb
lods
stc
into
mov
add
xchg
fbld
push
pop
sahf
mov
int
shrb
sbb
cmc
icebp
cmc
clc
pop
push
cmpsb
mov
in
js
add
or
pop
repnz
mov
lods
test
jne
cmp
cmp
es
add
movb
pusha
pop
jge
orl
xchg
es
inc
sub
enter
cwtl
std
jnp
cs
mov
or
push
jmp
fisttpl
lret
test
std
sub
adc
mov
cwtl
aad
aam
add
fs
pushf
dec
jno
dec
xchg
sbb
jl
out
mov
xor
mov
outsl
inc
dec
int
ja
jle
or
push
shlb
or
xor
lds
mov
loope
pop
fimuls
xchg
dec
mov
push
inc
iret
or
std
dec
add
push
out
imul
mov
pop
ffreep
add
inc
cmpsb
jne
add
fs
lods
lock
push
fcmovu
gs
xor
sbb
xchg
loop
xorl
dec
stos
gs
cmp
shrl
push
sbb
inc
cmp
cltd
cmc
insb
mov
call
int
mov
xchg
cli
jbe
fcompl
mov
xor
inc
int
aad
xchg
mov
push
jno
pushf
mov
mov
shll
pop
xchg
inc
inc
and
ret
movsb
js
in
mov
cmp
push
lods
je
clc
pop
lret
insl
in
stc
shlb
jecxz
or
ret
push
aas
and
sbb
dec
xchg
or
cmp
pop
push
subl
mov
mov
fbstp
pop
sbb
jp
or
mov
lret
dec
push
xchg
sub
in
mov
mov
mov
jbe
mov
fisttps
xchg
js
cmpsl
ja
pusha
insb
sti
pop
scas
mov
cld
sub
inc
les
in
aam
repz
mov
out
in
outsb
aad
lahf
cmp
sbb
cld
pusha
scas
fwait
jmp
repz
addr16
push
fimull
orb
mov
rcr
icebp
or
push
pop
xchg
mov
mov
in
inc
cmp
cmp
cmpsb
add
fiadds
xor
mov
hlt
mov
out
in
or
aam
xchg
dec
jne
mov
repz
and
mov
mov
fdivl
adc
adc
in
pop
or
jo
mov
xchg
popf
jg
mov
mov
sbb
incb
push
jle
sub
add
jmp
cmpb
rcrb
jmp
adc
pop
or
nop
mov
adc
push
jl
cmpsl
out
out
xor
add
cmp
adc
mov
inc
push
in
scas
andl
dec
enter
mov
add
cmp
adc
lds
mov
ret
xor
cwtl
nop
cld
hlt
rolb
push
aaa
in
adc
mov
out
fs
adc
fisttpll
daa
mov
rorl
and
faddl
jl
ret
fbstp
dec
adc
mov
test
jb
sub
movsl
into
dec
dec
xor
nop
sub
pop
aaa
jmp
adc
andb
fmull
push
sub
scas
icebp
cmpsb
mov
js
push
push
xor
callw
inc
mov
xor
outsb
cmp
inc
inc
cmpsb
jns
lock
stos
arpl
inc
ret
lds
jecxz
and
xor
or
jg
xchg
sbb
and
mov
pop
lcall
shlb
pusha
xchg
in
out
push
cmpb
int3
mov
push
fnstcw
mov
mov
xor
sbb
lahf
xchg
cmp
rol
push
push
ljmp
out
lods
jo
hlt
inc
push
add
mov
lea
or
adc
and
fucom
and
mov
add
je
roll
scas
je
inc
lahf
xchg
dec
xor
xchg
adc
into
icebp
test
in
fdivrl
dec
nop
sbb
inc
or
jo
je
into
es
xor
mov
stos
dec
das
add
jnp
pushf
or
fisubl
and
orb
test
cltd
inc
and
je
aas
xor
sub
cvtps2pd
dec
mov
xchg
pop
pop
xor
dec
jbe
mov
pop
jbe
imul
call
mov
mov
sbb
cmp
lods
jns
jne
mov
cmpsl
lea
mov
and
pop
add
ljmp
aam
rorl
lods
inc
jno
dec
mov
iret
adc
jbe
mov
std
adc
inc
push
loope
mov
cmp
cmpl
in
dec
clc
cli
loopne
movsl
push
cwtl
xchg
cmpsb
cmp
sub
lods
in
pop
pop
out
sbb
ficoml
fiaddl
pop
and
cmp
dec
cs
mov
inc
cmpb
lret
xchg
sahf
sbb
negl
pop
jg
jae
mov
call
mov
sbb
inc
sbb
rcrb
pop
stos
xchg
sbb
je
sbb
sbb
xor
dec
sbbb
lret
icebp
cli
shlb
xchg
dec
test
pop
mov
jae
sbb
lcall
mov
icebp
jo
mov
sbb
pop
repnz
out
ficoms
push
or
mov
pusha
push
add
ja
pushf
mov
mov
xor
dec
test
and
loope
pop
popl
rorb
and
loop
fs
int3
outsb
xor
mov
aam
lea
mov
test
loope
mov
rol
cli
shll
inc
mov
jbe
push
jb
jg
mov
bound
in
xchg
pop
push
pop
jo
xlat
lods
daa
sub
fdivp
jnp
sarl
inc
dec
stc
outsl
sbb
popa
out
loop
cli
cltd
push
test
dec
push
cmp
sbb
aam
cmpsl
mov
jl
jp
pop
mov
mov
loop
lock
cmp
sbb
popf
xor
addl
fucom
mov
int3
jbe
cmpsb
fisubl
mov
loopne
movsb
mov
pop
cmp
sbb
push
out
jbe
fdivrp
pop
aaa
dec
or
and
mov
jg
cmpl
loopne
xchg
outsl
negb
cmp
cmp
sbb
int3
test
or
add
aaa
mov
push
aas
mov
loopne
mov
sub
cmc
call
clc
jl
or
pop
lds
lret
sub
pop
jo
fiadds
repnz
adc
pop
ret
stos
loope
daa
pop
xchg
shrl
xchg
fucom
jg
sub
clc
mov
icebp
mov
xchg
fnstsw
xchg
outsb
cs
jmp
jne
fs
in
push
sub
xlat
aad
sbb
or
outsl
sti
inc
arpl
dec
mov
int3
mov
mov
jle
jecxz
or
imul
xor
push
insb
jno
aas
mov
mov
xorb
xor
sub
mov
stos
mov
mov
mov
ret
add
or
mov
test
inc
xchg
outsl
nop
cmp
fstpt
mov
rorl
cli
fistl
pop
lea
fimull
cltd
and
mov
pop
das
jge
add
dec
scas
jb
fscale
add
and
ja
mov
popa
dec
int
dec
daa
sbb
adc
push
fimull
mov
movsb
cmp
jge
jge
fiaddl
push
push
xlat
shrb
mov
jnp
and
fnstcw
cmp
lock
testb
faddp
sub
cmovne
inc
popa
rcr
cld
cmp
loop
dec
lea
pop
push
and
cmp
and
or
sub
in
lret
mov
jnp
xorl
pop
push
and
test
xchg
jnp
and
loope
push
sar
shlb
repz
jnp
lods
pop
xchg
std
xchg
xchg
push
jo
push
cmp
orl
sbb
aas
xor
pop
outsl
jmp
leave
loopne
cmp
xlat
test
pop
lahf
jns
add
shl
int
mov
mov
insl
out
out
std
in
iret
inc
mov
or
mov
out
jecxz
mov
enter
flds
fisubl
in
daa
pop
daa
jne
dec
pop
pop
pop
or
cmp
les
mov
psrld
jmp
or
pop
inc
mov
test
mov
adc
push
jp
push
std
je
test
jns
ret
stos
push
jno
mov
scas
sti
daa
js
sarl
sbb
mov
inc
xor
iret
xchg
cmp
repnz
mov
inc
xchg
xor
mov
pop
pop
cmp
mov
std
mov
jge
sti
into
sub
jp
loopne
push
dec
lcall
lcall
std
and
mov
fldt
inc
add
mov
lea
test
icebp
gs
out
aad
iret
cmp
orl
popf
inc
loop
rolb
outsb
loopne
push
test
xor
push
sub
bound
lahf
cmpsb
jno
sub
lods
pop
sbb
jmp
mov
int3
js
fisttpl
or
loop
push
or
test
inc
mov
and
data16
popa
lock
cmpsl
enter
push
push
add
or
pop
aaa
inc
xlat
inc
adc
ljmp
in
mov
cmp
push
in
mov
add
adc
add
jbe
int
in
test
jp
sbb
lock
movsb
xchg
fnstcw
gs
ljmp
dec
dec
xor
into
push
adc
mov
fcmovbe
ds
in
cmp
shll
stos
cmp
xchg
loopne
add
lea
pop
cmp
jmp
out
in
jb
out
pop
cmp
fs
pushf
mov
push
ljmp
nop
dec
movsb
inc
pop
dec
mov
xor
fisttpl
xchg
in
jle
jge
mov
loope
xchg
dec
push
cmp
push
aad
roll
jp
and
gs
scas
cli
or
ret
adc
fcomps
faddl
test
stos
mov
sahf
dec
adc
popf
xorb
jp
adc
rcl
sub
mov
fimull
mov
test
pop
xor
mov
and
lcall
data16
and
mov
mov
and
sub
outsb
js
jb
xchg
mov
mov
fs
ret
imul
loopne
xchg
nop
jbe
test
dec
aad
jb
loop
aam
push
daa
push
ss
inc
mov
loopne
out
sbb
daa
fucom
pop
ja
es
out
sub
mov
push
push
cmpl
out
inc
xor
or
jmp
arpl
mov
fidivrs
xchg
hlt
test
ss
pop
outsl
jb
pushf
ljmp
mov
sti
add
int3
jb
jns
fs
outsl
jge
lods
mov
lahf
shrl
xchg
into
aad
pop
dec
fstl
rorl
shrl
mov
stc
sub
jp
and
and
aad
fs
xchg
cmp
dec
xchg
imul
or
jl
aad
test
push
mov
jno
shrb
xor
inc
scas
and
cmp
adc
shrb
adc
lahf
pushf
int
repnz
mov
mov
sub
push
jno
aam
lahf
mov
pop
inc
fwait
rol
mov
daa
jle,pt
inc
push
int3
sbb
add
daa
mov
or
sbb
out
int
js
sbb
in
or
lret
cli
clc
test
sahf
mov
sub
push
push
adcb
push
inc
mov
jecxz
mov
cmp
mov
pop
lods
xor
shrl
cmp
sbb
dec
imul
and
dec
sarl
sub
ja
aad
lock
js
xchg
shlb
pusha
mov
mov
adc
sub
jnp
push
add
popa
xor
sbb
cmp
fistpll
adc
pop
jg
pop
mov
jg
test
and
movsl
jle
push
test
dec
inc
lds
push
pop
mov
out
loop
pop
in
fs
pop
out
mov
ret
xorb
adc
aas
repz
lods
inc
xor
or
sub
ror
sbb
imul
hlt
jl
icebp
adc
mov
icebp
out
push
jb
inc
test
add
xchg
mov
mov
mov
inc
mov
sub
shll
cltd
push
test
fiaddl
adc
adc
sbb
test
or
pop
sbb
out
lods
cwtl
clc
adc
dec
imul
out
or
out
icebp
or
jbe
jo
idiv
lea
subb
push
mov
dec
inc
repnz
push
mov
mov
adc
jb
ficomps
xchg
aas
or
and
nop
xchg
je
cmp
movsb
mov
xchg
aad
pop
add
dec
mov
pop
jae
adc
into
in
in
dec
in
adc
jecxz
sub
stos
into
lahf
cmp
add
cmp
cmp
je,pn
sub
pushf
adc
mov
lahf
lcall
in
jne
and
popa
mov
sub
push
xchg
xchg
movsl
stos
push
xchg
mov
cli
mov
adcb
push
nop
roll
dec
shrb
inc
out
mov
outsb
mov
pushf
lods
lock
int
dec
ljmp
jg
arpl
adc
xchg
or
xchg
test
add
loope
arpl
push
xchg
add
xor
dec
into
loop
mov
cmpsl
xchg
pushf
mov
pop
pusha
xchg
add
pop
imul
aad
mov
pushf
xchg
jnp
mov
cmp
mov
xlat
mov
js
lret
xlat
lret
mov
sub
lea
das
scas
cmpsb
aaa
nop
pop
ss
cmp
addr16
dec
sbb
fiadds
cmp
jnp
bound
ficoms
popa
scas
mov
xchg
repz
pop
jno
push
mov
jnp
in
and
xor
stos
and
xchg
sti
lods
int
inc
mov
mov
xchg
test
sarb
into
mov
and
arpl
mov
jge
mov
pop
mov
stos
es
fistl
push
cmp
arpl
push
ret
dec
mov
lcall
or
clc
scas
in
icebp
sbb
jnp
mov
aad
pop
outsl
in
push
push
repnz
jp
pop
fdivl
loopne
mov
mov
aad
mov
dec
lret
arpl
les
in
push
push
mov
cmp
ljmp
ret
sbb
stc
out
inc
sub
jle
pop
insb
xchg
popf
push
and
add
pop
mov
adc
inc
lgs
lcall
lea
xlat
loopne
push
dec
insb
data16
push
sub
iret
sbb
iret
xor
dec
mov
cwtl
push
jae
push
jecxz
pop
xchg
shlb
jae
loop
jbe
sbb
bound
fwait
pop
jne
inc
js
pop
push
dec
pop
mov
xchg
mov
xchg
shl
jle
sahf
add
fcomps
mov
out
or
sahf
dec
cmp
incb
mov
mov
jecxz
add
scas
xchg
push
ret
and
mov
or
cld
sbbl
adc
outsb
mov
jb
or
xchg
cmpsb
out
xchg
inc
adc
ficompl
pop
add
mov
lcall
out
mov
outsb
cmp
push
or
mov
dec
cmp
dec
mov
lcall
into
in
stc
dec
adc
xor
popf
jnp
sub
inc
stos
push
test
aas
jmp
xor
sub
test
out
mull
add
ret
cmp
add
pop
cmpsb
rorb
lret
xchg
push
push
imull
ja
dec
rorl
cmp
dec
and
sahf
lret
jbe
adc
stos
inc
mov
out
xchg
movsb
jle
push
insl
cmp
dec
xchg
pop
push
std
fadds
sbb
cbtw
xchg
and
pushf
rolb
cltd
test
push
fwait
dec
xchg
mov
fimuls
push
stos
xor
cmp
pop
js
repnz
inc
gs
sbb
add
pop
cmc
fldt
mov
mov
adcb
add
sbb
lret
in
mov
or
lahf
mov
xlat
fsubl
outsl
gs
mov
popa
stc
mov
pop
xlat
dec
int
cld
data16
ret
daa
mov
out
xchg
pop
inc
sub
inc
inc
mov
daa
test
pop
lcall
icebp
fmull
jae
mov
popf
jno
imul
call
frstor
leave
enter
addr16
push
mov
add
aam
arpl
and
or
xor
sbb
mov
into
daa
fstp
jl
addr16
roll
insl
xor
js
mov
nop
les
repnz
mov
fisubs
cmc
mov
add
pop
xlat
test
inc
xor
lock
mov
and
rolb
or
mov
sarl
mov
movsb
xchg
into
inc
pop
lcall
pushf
inc
leave
aad
pop
stos
shrb
icebp
flds
rcrb
jnp
jae
mov
mov
cwtl
lret
or
dec
sbb
scas
mov
sub
sbb
push
jnp
push
in
leave
jnp
js
ss
xchg
pop
gs
in
xor
aas
test
aas
jle
xlat
pushf
into
and
jo
outsb
inc
xor
mov
popa
pop
pop
pushf
push
repz
and
ret
lock
pop
xchg
stos
or
mov
push
cs
aad
popa
cmc
mov
cmp
xor
repnz
xchg
jecxz
fsqrt
pop
xchg
js
icebp
cmp
aad
cmpsb
adc
xchg
mov
imul
mov
ret
nop
push
js
idivl
mov
cltd
cli
xor
dec
bound
push
shrb
lret
and
out
lods
in
and
lds
test
push
cmp
pusha
push
js
and
pop
imul
pop
in
pop
mov
pop
adc
add
jle
adc
iret
in
fnstsw
icebp
jns
pop
shlb
aad
cmp
inc
or
pop
xchg
sarb
dec
adc
pop
adc
stos
push
mov
and
jmp
add
hlt
out
stos
push
pop
test
cld
dec
adc
cwtl
cld
jmp
xor
mov
pusha
imul
xor
or
jne
lcall
arpl
icebp
ds
loopne
push
mov
mov
negl
xor
mov
jmp
cmpl
js
xchg
gs
mov
loop
pop
jp
and
data16
scas
jp
dec
movsl
xor
adc
adc
gs
jecxz
iret
mov
dec
push
and
popf
out
jbe
leave
cmp
ss
xchg
movsb
test
in
push
scas
fsubrs
inc
cmp
loope
mov
push
frstor
inc
sub
pop
pusha
cmp
cmp
out
xor
jl
fsubp
inc
jns
mov
sbb
cmp
call
pop
scas
or
and
mov
flds
mov
in
stos
mov
int
push
dec
test
add
mov
fists
outsb
inc
shlb
bound
cs
xchg
sub
insl
mul
mov
adc
push
hlt
clc
icebp
push
jae
loopne
rcrl
into
xchg
dec
aad
gs
fdivrs
and
pushf
sub
mov
rcl
mov
in
mov
dec
loopne
subps
repz
xchg
repnz
icebp
insl
jno
cmpsl
aaa
or
or
dec
lret
inc
dec
jecxz
cmpsl
push
pop
pop
negl
xor
dec
xchg
sbb
pushf
dec
inc
mov
leave
mov
and
das
sbb
add
nop
addr16
out
les
push
test
fcomps
mov
inc
push
imul
push
push
add
fmull
pop
test
stos
pushf
fwait
call
js
lcall
fadd
ret
jl
lahf
pop
xchg
mov
js
jbe
ret
repnz
fsubp
jne
incb
pop
sti
ss
inc
mov
ficoml
sbb
sahf
pop
lds
xor
int3
xchg
mov
icebp
out
or
mov
lahf
push
test
xor
sti
dec
ficomps
shll
adc
mov
rcl
mov
cli
cmp
in
mov
cmp
lock
inc
jle
enter
jmp
inc
add
fsubs
push
ds
jae
pushf
test
xchg
clc
ret
cmp
inc
or
ljmp
sbb
mov
and
jnp
cld
rolb
insl
sarl
stos
insl
xchg
movsb
imul
jne
or
jbe
pop
popa
mov
sbb
stos
pusha
roll
bound
shlb
test
mov
lods
arpl
or
mov
push
stos
mov
inc
mov
les
mov
out
ss
add
mov
mov
sub
fstpt
out
nop
jno
pushf
dec
fsubrs
pop
fidivrl
and
imul
iret
mov
inc
pusha
push
adc
mov
hlt
mov
xchg
xchg
jg
neg
scas
xor
in
sbb
adc
arpl
shl
jle
outsb
out
repz
mov
orl
mov
xchg
nop
fs
inc
mov
sub
adc
and
fcoml
icebp
mov
stos
out
push
push
mov
fistps
push
cmc
roll
dec
push
mov
js
std
fninit
push
loope
pop
sbb
movsb
stos
push
in
sub
mov
and
sub
aas
jns
fimuls
xchg
ret
daa
jl
loopne
push
stos
ds
adc
scas
push
mov
inc
mov
imul
jne
or
jecxz
mov
lret
fidivs
sbb
xor
mov
ja
push
jmp
sbb
mov
rcrl
sub
push
pop
cmp
add
and
jp
dec
mov
rclb
inc
cli
stos
mov
xor
sub
or
repnz
jns
rcrl
dec
jp
dec
pop
jo
sub
ret
adc
xor
jg
mov
cs
mov
jne
mov
insl
cmp
test
mov
sub
sbb
jbe
test
mov
xor
mov
call
rolb
and
or
jo
repz
gs
ret
in
outsl
inc
popf
inc
int3
sub
inc
xlat
mov
inc
add
lcall
fiadds
lahf
arpl
add
ret
scas
pop
add
push
add
stc
inc
adc
imul
out
into
inc
push
mov
cmpsl
imul
xchg
rcrl
xchg
mov
xor
and
jo
sbb
cmpsl
outsl
push
loop
sbb
cmc
jne
dec
rcll
push
mov
xchg
mov
push
mov
mov
lcall
sahf
sahf
mov
pop
mov
lret
data16
add
jb
test
xor
vpsubw
shlb
xor
xchg
cmp
xor
mov
stos
mov
dec
hlt
sahf
pop
lds
and
ljmp
sarl
sbb
and
iret
test
xor
in
pop
mov
adc
fwait
pushf
xor
xor
adc
mov
mov
pop
das
mov
or
loop
gs
stos
mov
mov
xlat
mov
fsubs
std
cmp
fmuls
faddp
dec
lret
roll
movsb
fucomip
xchg
push
xchg
jl
xchg
stc
xchg
pop
or
mov
dec
add
sub
dec
sbb
movsl
inc
inc
call
cmp
fisttpll
and
pop
out
cs
ja
scas
je
fildll
fs
adc
xchg
sbb
cmp
xor
iret
daa
adc
xor
mov
pop
hlt
or
xor
lahf
mov
fildll
push
push
ljmp
fidivl
mov
dec
sub
inc
movsb
sub
lahf
lds
popa
mov
aam
sub
bound
fistpl
fisubs
flds
je
scas
addr16
mov
js
ja
push
lds
inc
jl
add
dec
lret
jno
mov
out
in
lcall
cld
std
dec
imul
push
adc
add
cmpsl
sti
js
stos
hlt
xor
or
pop
jae
scas
jns
push
scas
shll
cmpsl
cmpsl
scas
jb
repz
add
bound
add
popf
in
or
xchg
lea
lea
lahf
into
loop
gs
outsl
fsubrl
mov
push
inc
fsubs
xor
aad
mov
adc
pop
xor
push
jge
add
movsb
adc
arpl
xor
call
cwtl
in
daa
or
mov
out
xor
sbb
into
les
jge
in
push
fsubs
ret
mov
or
aas
adc
lea
mov
es
aas
jle
xchg
scas
iret
icebp
dec
outsb
xchg
js
lahf
sarl
les
pop
jmp
lods
cli
jns
jle
test
adc
push
adc
pop
jmp
jns
je
push
sbb
orl
rcrl
imul
cltd
shl
mov
out
cmpsb
xchg
lret
fidivs
cltd
xchg
sub
fwait
sub
sub
cld
push
adc
mov
pushf
sub
mov
sbb
pusha
mov
mov
jb
lods
lods
ja
ja
imul
dec
adc
cltd
lods
sub
sub
sbb
dec
aad
jae
xchg
pop
dec
shrb
out
pop
cmpsb
push
or
push
push
dec
cmp
sbb
mov
rcr
fcomps
fwait
mov
out
inc
and
pop
lods
cwtl
fwait
adc
push
aad
cmp
lahf
clc
je
lret
aas
or
jne
repz
sub
mov
mov
mov
les
outsb
stos
mov
cmp
push
test
sub
xor
inc
inc
inc
push
sub
and
xor
int
je
jmp
dec
ficoml
and
add
sbb
inc
icebp
je
pop
aas
xchg
into
in
sub
and
fistl
jg
test
pop
jne
and
jg
pop
jecxz
mov
fcmovu
add
es
xchg
inc
hlt
or
or
aad
mov
call
icebp
dec
adc
jge
mov
cwtl
les
mov
ss
mov
fwait
mov
or
cld
dec
cmp
push
jne
sbb
lds
lcall
add
adc
cmpsl
loope
aam
ret
int
and
add
jbe
test
fmulp
loop
arpl
jmp
or
dec
jb
add
leave
jge
out
pop
lret
xchg
cmpb
xor
cmp
pop
ja
fisttpl
in
test
pop
inc
mov
scas
xchg
inc
xchg
addb
fs
pop
push
and
addl
fwait
add
scas
es
int3
sub
add
push
cmp
hlt
das
mov
cmp
add
add
test
fiadds
push
sti
or
notl
mov
xchg
adc
mov
sub
es
cmpsb
fistpl
mov
inc
xor
clc
jnp
adc
pop
mov
xorb
sahf
cmc
or
stos
or
add
dec
sbb
pop
stos
out
mov
aad
imul
pop
mov
mov
xchg
dec
ss
insl
mov
jnp
in
cltd
add
in
or
cmp
outsb
imul
push
mov
mov
or
jnp
inc
pop
jl
in
je
stos
les
dec
push
pushl
out
ljmp
jmp
or
ret
or
dec
jle
pop
leave
xchg
imul
add
inc
mov
sub
popf
arpl
mov
jo
aam
xchg
je
fdivs
jne
loop
into
fsubl
aad
dec
or
fstpl
pop
jg
cmp
out
pop
ret
push
jnp
sub
sub
push
in
mov
loopne
xor
jae
jmp
lea
dec
cmp
cmp
dec
and
xchg
jmp
push
mov
repnz
test
aas
or
add
ret
sarb
ds
subl
xor
lock
and
je
mov
out
xor
xchg
xchg
jmp
std
shl
mov
insb
ret
ja
mov
scas
pop
lods
leave
jne
and
mov
fwait
mov
sbb
test
in
scas
stc
in
js
mov
stos
cld
aas
pop
gs
cmp
loop
adc
imul
leave
neg
je
test
pop
or
inc
mov
pushf
push
and
dec
push
dec
sbb
push
add
out
add
lahf
and
jbe
outsl
mov
cmp
sub
inc
loope
subl
out
sbb
lds
ja
fyl2xp1
mov
pop
pop
icebp
jne
jbe
jg
gs
scas
push
cmp
je
cmp
mov
data16
loope
add
leave
cmp
jle
inc
jae
aaa
mov
outsb
shlb
jmp
test
movsl
sub
iret
mov
mov
gs
fs
int
out
cmp
inc
or
jbe
daa
pop
in
mov
scas
xchg
cmpsb
jns
leave
pop
inc
test
ljmp
es
xchg
xchg
xor
and
rcl
outsl
pop
pop
or
jb
loope
test
aam
gs
sub
aam
bound
std
push
adc
repnz
mov
lods
es
cltd
mov
add
mov
filds
or
fs
xor
lret
fistps
test
lods
inc
sbb
imul
mov
sarb
das
mov
les
jnp
pop
lahf
iret
xchg
lret
inc
out
sarb
mov
cmp
data16
mov
pop
dec
cmpsl
leave
dec
or
or
arpl
and
loop
sbb
movntps
ljmp
mov
int3
cmpsl
mov
push
add
push
sub
lods
test
adc
mov
jp
in
js
jp
out
lret
jnp
sbb
inc
jle
jp
push
sub
in
gs
inc
xchg
rclb
es
testl
xchg
xchg
ret
cs
ds
mov
push
adc
xlat
into
mov
mov
and
imul
inc
push
jb
stmxcsr
stos
rolb
das
jle
pop
jns
push
xor
xor
ficoms
add
out
mov
cmp
add
xchg
daa
mov
cmp
and
pop
call
jnp
loopne
call
sbb
sbb
lds
and
sbb
aas
sarb
xchg
loop
sub
inc
xlat
outsl
movsb
add
xchg
add
je
mov
jnp
mov
hlt
jl
test
jns
mov
andl
stos
lea
or
xchg
sahf
cmp
lods
lahf
lods
mov
sbb
mov
sbb
lcall
loop
add
jnp
test
repz
fsubs
pop
lret
test
adc
jne
xchg
add
mov
adc
loope
adc
cld
sar
mov
adc
add
iret
add
mov
das
jg
lock
fildll
xor
loopne
cmp
lods
push
les
sbb
inc
push
add
test
pop
ds
leave
sbb
cli
mov
xchg
lock
inc
shrl
iret
fs
sarb
jl
movsl
sbb
mov
int3
sbb
loop
popa
push
hlt
popl
xor
cwtl
aaa
pop
xchg
fdiv
insb
ss
lcall
and
mov
pop
adc
mov
cmp
test
adc
addr16
sarb
jae
mov
mov
cs
inc
out
mov
pop
inc
xchg
xchg
jno
mov
pop
mov
rolb
inc
outsl
xor
mov
or
push
or
in
or
sub
push
sub
pop
out
inc
int
flds
mov
cli
push
or
popa
pop
mov
inc
pop
pop
stc
das
cmp
lret
mov
xor
pop
xchg
loope
pop
popf
cmpsl
ret
insb
jg
or
dec
push
out
gs
out
inc
push
arpl
enter
and
pushf
in
xchg
rcll
mov
xchg
movsb
test
mov
lret
add
adc
xor
add
xorl
mov
mov
xor
cwtl
out
imul
push
std
sub
std
sti
push
or
push
loopne
fcmovb
fadd
add
pop
pushf
adc
push
aam
pop
out
jmp
shl
std
aad
jmp
and
in
cmp
push
inc
fiadds
cmp
aas
add
imul
and
dec
addr16
mov
adc
mov
mov
dec
pop
mov
shlb
roll
sbbb
pop
sub
sbb
clc
repnz
mov
mov
fsubp
fs
int
daa
cmpsb
fwait
mov
test
sub
xchg
ffreep
adc
aas
jo
push
sbb
clc
stos
xchg
mov
pop
cmc
push
mov
xchg
xlat
scas
or
pop
lcall
mov
scas
inc
cli
jp
and
dec
fiadds
shl
arpl
xchg
lock
jle
aaa
jne
pop
xor
insl
insb
stos
popa
fstpt
in
jb
ucomiss
in
mov
fs
call
cmp
fistpl
pop
xchg
and
je
scas
or
hlt
add
stos
push
xchg
push
mov
js
dec
push
sbb
sub
inc
mov
or
aam
sbb
xor
mov
inc
sbb
xchg
adc
cmp
outsl
cmpsb
les
mov
faddp
cmp
jp
add
adc
cmc
pop
or
cmp
ror
daa
fldt
aam
xor
cwtl
insl
int
in
cld
or
cmp
sbb
lds
xor
cmp
imul
mov
add
or
hlt
inc
ret
cmp
dec
add
adc
jle
dec
pop
mov
jno
aam
push
jnp
shrl
pop
test
sbb
fdivl
fistl
sti
add
mov
loope
lock
lahf
outsb
imul
iret
push
adc
repz
or
pop
inc
inc
inc
int3
ret
adc
mulps
enter
dec
test
xor
push
movsb
pop
aam
jecxz
add
mov
ficoml
push
sub
jp
nop
pop
leave
or
leave
pop
ds
rorb
jecxz
jl
jnp
jmp
sbb
pop
subb
push
xor
sahf
add
fnstcw
mov
cwtl
pop
xor
and
jno
fildll
ss
in
rorb
sub
sbb
insb
sbb
xchg
fcmovb
mov
dec
lock
sti
add
jl
movsb
rolb
mov
stc
loop
jge
xor
mov
fstl
je
orb
lahf
es
shrb
aas
lock
std
test
into
fisttps
mov
jg
aam
xchg
cmc
stos
movsb
not
jae
dec
in
lret
and
shrb
mov
sbb
push
push
pop
fnstsw
mov
adc
xchg
scas
fs
sbb
orb
movb
jnp
aaa
ja
imul
mov
mov
or
jmp
mov
dec
jle
sbb
lds
movl
adc
hlt
hlt
stos
xchg
mov
pushf
or
or
inc
ss
rcl
cld
mov
loopne
jmp
push
test
cmp
sarl
bnd
insb
bound
lea
mov
dec
mov
pop
sub
sub
push
sub
pop
cmp
push
push
jmp
and
pop
lods
add
cmpsb
lcall
jp
cmp
mov
push
add
adc
and
sub
cld
add
lret
mov
sbb
push
lret
out
je
in
out
inc
push
flds
mov
mov
xchg
mov
pop
xlat
std
mov
push
std
popa
and
mov
jno
mov
mov
aaa
std
in
lds
rclb
lods
jns
xor
push
movb
mov
dec
loop
mov
cltd
idiv
dec
iret
sbb
mov
mov
inc
insb
pushf
lcall
or
jno
pop
add
leave
pushf
fidivrs
movsl
shr
sbb
and
rorb
fwait
enter
cmp
imul
ljmp
ret
ljmp
lods
mov
fnstsw
push
adc
mov
scas
les
fsubr
mov
bound
xchg
shll
fbld
xchg
mov
es
cmp
je
enter
jecxz
jnp
add
int3
push
adc
insb
xchg
fcomps
xor
mov
rcr
dec
push
mov
pop
outsl
inc
loop
es
gs
lcall
pop
xchg
repz
repnz
subl
loop
sub
mov
les
fadds
xor
dec
mov
negb
es
dec
mov
shrb
negl
aad
ret
movsl
cmp
jnp
ret
inc
mov
inc
addr16
add
iret
scas
ja
xor
ret
mov
iret
mov
adc
fistps
mov
jecxz
adc
push
push
shlb
data16
mov
adc
jae
test
stos
sub
outsb
add
adc
fcoms
imul
sti
enter
test
adcb
loop
mov
and
pop
ss
shl
pop
pop
sub
or
cs
and
icebp
lcall
pop
mov
or
mov
sarb
sbb
es
pop
jecxz
jbe
sub
out
sbb
lock
dec
mov
inc
and
dec
pop
mov
pop
mov
imul
jmp
xchg
add
pop
incb
loop
xlat
loop
out
mov
inc
mov
push
mov
loope
sti
ret
stos
popa
jne
jecxz
inc
inc
xor
mov
jne
adc
inc
sbb
flds
xchg
xor
mov
js
mov
add
push
or
orb
adc
jae
aas
jge
daa
cmp
daa
aad
test
or
adc
xchg
mov
xchg
fsubp
out
push
ss
and
in
outsl
std
push
mov
mov
jmp
insb
inc
add
lcall
xor
cmp
push
pushf
lods
cmp
test
daa
rclb
loopne
pop
aas
or
jl
sub
call
jnp
ja
in
dec
nop
lcall
shrl
add
nop
test
insb
popa
or
icebp
sub
mov
dec
leave
push
scas
or
fisubl
ret
cmp
or
lahf
xchg
jnp
or
cmpsb
xchg
push
add
ds
test
loopne
add
jl
call
loopne
imul
in
sbb
sub
jp
inc
js
shll
cmc
mul
into
push
call
add
loope
inc
jge
lea
idivb
outsl
pop
cmpsl
dec
cmc
cmp
xchg
fs
adc
mov
adc
into
mov
not
mov
cld
mov
lea
cltd
movsl
mov
imul
icebp
in
out
mov
mov
cmpsb
pop
cwtl
push
jecxz
sbb
roll
jle
mull
xlat
and
ds
loope
add
repnz
outsl
pop
lods
push
icebp
cmp
fs
xchg
pop
out
or
fsubs
inc
jge
add
lret
push
xchg
jbe
popf
push
jecxz
mov
popa
pop
xchg
lcall
adc
push
mov
mov
jecxz
mov
mov
in
dec
nop
cmpsb
sbb
test
mov
insb
sti
popa
sub
dec
outsb
push
insl
je
out
insl
adc
rcr
push
mov
popf
imul
mov
jmp
ror
movsl
popf
dec
mov
adcb
add
jno
icebp
inc
mov
xchg
je
arpl
dec
mov
mov
mov
jbe
mov
icebp
inc
js
xchg
fisubs
xor
mov
jecxz
mov
sbb
daa
mov
xor
adc
in
sahf
jle
das
cmpl
sbb
lock
mov
es
stos
out
push
in
test
lods
cmp
enter
add
xchg
daa
cld
aam
scas
sbb
adcl
xchg
add
add
fbstp
out
aam
enter
mov
pushf
xor
inc
adc
fs
push
and
mov
or
lret
clc
ror
xor
loop
jmp
aas
fstps
fwait
mov
fldenv
fisubrl
xchg
adc
movsb
ljmp
sbb
daa
mov
in
sbb
fiaddl
repz
sti
push
fs
mov
js
mov
inc
xor
push
jb
dec
cltd
jle
pop
ljmp
push
cmp
mov
shlb
stos
out
pushf
xor
int3
ror
inc
push
fmull
mov
idivb
leave
cmc
mov
mov
in
mov
ds
cmp
clc
or
lds
pop
or
dec
mov
and
add
inc
scas
mov
lret
pop
pop
lods
shlb
add
in
adc
sub
sbb
mov
dec
inc
imul
cld
stos
je
shlb
pop
sub
pop
aaa
bound
push
ds
jnp
xor
out
or
sub
sub
adc
adc
bound
adc
into
sub
pop
pop
fsubrl
out
adc
stos
fldt
sbb
xor
lods
cs
into
lcall
push
scas
sub
sahf
adc
mov
test
xchg
pop
and
ja
mov
add
pop
sbb
jp
push
mov
mov
leave
inc
pop
divb
js
pop
add
push
mov
daa
inc
aad
popf
hlt
scas
fisubrl
dec
pusha
sub
stc
xchg
push
enter
clc
imul
sub
bound
cmpsl
in
adc
mov
add
fnsave
pop
or
jns
push
jmp
sbb
std
into
leave
push
ljmp
mov
cld
test
repz
sub
repnz
out
push
push
test
cmp
ss
out
xchg
pushf
aad
cltd
mov
and
pop
jne
push
mov
fwait
mov
sub
cmpsl
idivl
add
sub
add
add
in
bnd
rorl
repz
cmp
or
push
loop
jno
repnz
int
mov
loope
imul
xchg
jbe
std
bound
into
sub
ret
xchg
pop
mov
jge
push
jne
cmp
mov
stos
sub
push
xchg
jle
in
push
enter
aad
add
dec
sbb
repz
mov
pop
insl
popa
scas
lea
mov
js
dec
pop
mov
ja
xchg
rclb
inc
mov
mov
call
xchg
subb
ret
mov
popf
and
mov
adc
ror
arpl
dec
xchg
cmc
add
jae
push
push
sub
add
icebp
pop
sub
pop
xor
mov
shrb
dec
scas
mov
movsl
sbb
push
pop
adc
cmpsb
jo
repz
inc
aam
sahf
andl
adc
lods
outsl
inc
and
pop
fs
jge
sub
mov
pushf
test
xor
arpl
push
mov
sub
outsb
je
jae
stc
xlat
test
shlb
push
rcr
std
nop
jo
pop
out
xchg
xor
and
sahf
imul
lret
mov
repz
subl
fldcw
mov
shrl
mov
mov
imul
pop
sbb
sub
leave
cmpsl
inc
push
cli
add
out
dec
and
dec
cmc
add
insl
inc
pop
popf
fisttpl
loope
jne
xchg
insb
pop
jns
and
add
jnp
mov
lods
mov
mov
cmp
sub
and
and
jl
or
dec
popl
lods
mov
dec
daa
and
fwait
jbe
xchg
xchg
push
cmp
sbbb
aaa
lds
mov
inc
or
lahf
mov
imul
cmp
xor
cld
sbb
in
push
into
sub
push
jl
loope
insl
pusha
or
xor
cmpsl
push
mov
icebp
lds
addr16
jne
mov
cmp
or
fidivrl
es
xchg
sbb
inc
jmp
push
test
push
mov
sarl
add
cmp
sub
and
sahf
xor
push
xor
shll
add
dec
cltd
rcrl
loope
es
jns
fsubr
and
imul
lret
xor
cmp
int
imul
pusha
pop
jo
and
xor
jmp
ret
mov
cmpsb
mov
and
and
cmpsb
clc
imul
aaa
xchg
fnstenv
orb
mov
push
mov
mov
dec
movsb
mov
out
inc
out
std
lahf
push
rorb
aad
mov
jne
pop
or
ret
add
lds
inc
push
aam
adc
inc
je
fcomps
mov
xchg
mov
or
divl
movsl
xor
mov
inc
psubsb
adcb
add
or
jg
out
mov
out
mov
lret
aad
int3
out
fwait
and
push
das
ret
hlt
mov
in
xchg
dec
nop
aas
jae
fcmovnb
fwait
inc
xor
mov
out
mov
movsb
xor
mov
cmp
into
std
dec
mov
rep
mov
je
push
insl
js
push
push
mov
loope
cmc
cmc
fwait
insl
jmp
pop
cmp
and
adc
jo
xor
cwtl
xor
call
pop
push
push
scas
lahf
push
sbb
loop
add
ret
add
js
mov
inc
psllw
and
fsubrs
pop
or
xor
xor
jl
mov
mov
sub
mov
enter
cmp
push
scas
mov
xor
mov
test
rcll
or
rcrb
mov
out
pop
jmp
out
pop
leave
jg
xorb
push
es
scas
and
emms
mov
dec
out
call
mov
pushw
adc
pop
int3
dec
sahf
add
inc
xchg
add
fistpl
inc
push
frstor
sbb
sbb
addr16
movsl
adcb
fwait
mov
dec
mov
mov
mov
mov
and
push
movsl
inc
popf
mov
lahf
sub
ja
xchg
xchg
inc
sub
adc
jne
lds
scas
push
inc
stos
ljmp
int
scas
dec
lret
dec
ljmp
xchg
insl
aaa
cs
nop
mov
dec
jae
stc
adc
decb
mov
imul
rcrb
insl
jns
cmpsl
repz
jae
rclb
push
frstor
mov
ficompl
testl
or
les
mov
mov
jbe
or
xchg
jl
mov
sub
mov
lahf
sub
outsl
add
jae
mov
not
adc
call
pop
jbe
fdivl
pop
lods
in
enter
sbb
mull
cmp
mov
aad
pop
dec
sarl
outsl
adc
int
pop
push
daa
inc
or
add
jp
test
xchg
inc
adcl
jbe
sub
mov
push
dec
pop
fisubrs
inc
in
inc
inc
adc
pusha
ds
fs
cmp
insb
divb
or
push
cmp
gs
cmp
sbbl
fwait
cltd
xchg
xchg
call
test
loop
jmp
add
mov
or
fwait
mov
jge
outsb
sub
jnp
scas
jne
mov
cmc
int
and
sbb
add
bound
dec
lock
mov
xor
sub
mov
loopne
or
push
out
jl
mov
incb
xchg
xor
dec
dec
aam
pop
bound
cmp
pusha
in
push
cmp
das
data16
fcoml
dec
stc
addb
ss
cmp
repz
dec
cmp
shll
fdivr
sub
mov
loopne
rcll
cwtl
stc
daa
es
cmp
inc
bnd
or
jae
jle
mov
push
bound
xchg
aad
idiv
out
and
mov
jl
jae
sbb
jecxz
mov
mov
push
iret
add
and
pop
fldt
out
or
in
cmp
insl
mov
adc
sub
mov
imul
xchg
cmp
sbb
jns
pop
cwtl
xchg
mov
pop
loope
xchg
in
xchg
lcall
cmp
and
pop
pushf
fwait
push
sub
inc
cmpsl
push
movsl
outsb
imul
icebp
fadd
inc
cmpsb
cmp
inc
aaa
jae
adc
movsl
jge
out
mov
subl
cmp
push
lret
push
stos
xchg
fs
mov
push
loopne
in
add
pop
ret
xchg
dec
iret
mov
xchg
jne
aas
mov
push
mov
dec
outsl
sbb
shlb
das
xor
xor
push
inc
cli
clc
push
mov
fnstsw
add
push
daa
or
inc
mov
bound
adc
push
or
or
cmp
fsub
ljmp
sbb
cmp
ja
mov
stos
mov
inc
and
ret
or
dec
push
mov
lock
xchg
mov
imul
sbb
aad
addr16
lea
adc
lea
push
dec
out
and
inc
jbe
push
leave
inc
pop
adc
push
push
push
mov
mov
scas
add
add
and
insl
sbb
ret
sti
in
lock
pop
cmp
idivb
xor
pop
inc
stos
test
fdiv
inc
adc
ljmp
sti
enter
adc
in
xor
insl
mov
push
mov
jnp
push
ror
mov
fnstcw
push
ljmp
int
pop
inc
mov
push
cmp
repnz
ret
adc
mov
add
jns
jo
sub
clc
jne
stos
mov
sbb
mov
lock
dec
mov
fldcw
and
mov
insb
out
inc
out
mov
adc
js
dec
in
js
or
hlt
mov
shrl
or
jg
dec
sti
pop
sbb
xchg
push
cmp
push
orl
das
les
lea
xchg
adc
ljmp
push
pop
iret
pop
ja
outsb
data16
sbb
ficomps
loope
mov
inc
adcb
cld
mov
stos
and
mov
sbb
das
cmp
push
shlb
test
cwtl
out
stc
push
je
gs
mov
and
imul
jge
pusha
dec
int
cmc
adc
lret
mov
sub
mov
adc
lea
and
test
fadd
pop
push
in
mov
les
sub
jmp
popa
rorl
pushf
je
popf
xlat
sub
push
jns
int
testb
loop
adc
scas
jp
pop
push
lahf
cmp
inc
or
incb
mov
push
adc
sti
es
xor
fnstenv
jg
pop
fwait
stos
pop
jecxz
mov
lcall
test
andl
popf
movsb
xchg
notl
fnstcw
jge
stc
into
inc
nop
dec
stc
sti
and
push
fldt
scas
add
mov
fsubl
jl
mov
and
cld
stc
jnp
cmpsb
mov
les
mov
xchg
insl
cmp
les
push
sub
daa
mov
clc
xchg
sbb
dec
adc
sbb
pop
xor
sbb
outsb
cmc
mov
rcrl
adc
mov
inc
add
outsl
dec
lock
cs
xchg
mov
or
cmp
in
sbb
and
push
mov
nop
and
xchg
inc
jbe
xor
syscall
inc
int3
lods
xor
into
cs
movsb
gs
or
scas
or
jno
jne
aas
std
add
rcll
cmp
sub
adc
fmull
sarb
mov
mov
popf
or
lret
jb,pt
jmp
icebp
daa
adc
enter
jno
pop
mov
mov
adc
pop
dec
pop
in
in
xchg
mov
inc
xlat
cmp
jno
jecxz
mov
test
mov
xlat
mov
outsb
sub
pop
or
push
push
lods
cmp
or
les
aaa
push
and
icebp
or
popf
ja
xor
popf
test
incb
cmpl
jae
hlt
add
dec
bound
push
pop
icebp
and
mov
cltd
or
aam
lods
adc
cmpsl
sbb
xchg
inc
scas
mov
in
clc
fistps
mov
ljmp
dec
stos
mov
int
push
lds
cmp
mov
pop
std
or
mov
xor
sahf
lea
sub
mov
icebp
cmp
notb
ss
jle
imul
hlt
mov
subb
test
push
imul
pop
push
xor
fistpll
dec
pop
sbb
clc
fdivrl
xor
aas
fcmovbe
or
int
or
imul
imul
loopne
mov
stc
lock
mov
xor
lods
sbb
mov
lods
sbb
xchg
dec
je
xchg
hlt
sub
inc
or
pop
pop
jb
push
imul
insb
dec
shll
or
mov
pop
ljmp
or
push
iret
nop
xor
out
and
jae
jp
aas
stos
sub
sub
xchg
push
and
and
pusha
adc
mov
sbb
push
push
dec
mull
cwtl
nop
pop
sarb
xor
add
inc
and
mov
mov
jbe
sub
sbb
mov
pop
and
mov
mov
and
sub
jmp
xchg
lcall
push
xchg
mov
xor
pop
scas
add
pop
gs
scas
std
daa
ja
mov
mov
xchg
mov
les
inc
outsb
testb
aaa
popf
xchg
cwtl
les
cmpsb
fdivrl
cmp
dec
fmuls
cli
scas
sbb
xor
cwtl
xchg
xor
push
mov
jnp
cld
iret
xor
shll
xchg
lahf
xchg
jo
mov
stc
pop
sub
popa
push
add
jno
sbb
notl
and
loope
jge
pop
popf
pop
daa
movsl
push
cmp
arpl
mov
in
andl
push
sub
dec
sahf
rorl
and
sbbb
adc
icebp
push
mov
ret
jle
shl
popa
fdivrs
inc
mov
mov
dec
push
pop
mov
or
cwtl
push
adc
or
mov
out
cli
dec
sub
mov
adc
mov
cmp
or
inc
js
jnp
hlt
mov
mov
test
push
push
jmp
bound
or
ds
jle
xchg
sbb
xchg
addr16
flds
inc
push
cmc
int3
and
and
push
adc
push
sbb
aam
push
out
icebp
push
inc
stos
cwtl
cltd
fistpl
and
mov
lret
or
xchg
jge
call
mov
pop
negl
lods
sbb
pop
xor
pop
xchg
lods
aas
outsb
in
sub
adc
aad
or
jns
popa
pop
sbb
mov
test
pop
mov
shlb
jp
jae
fiaddl
pop
leave
sbb
mov
repz
or
xchg
hlt
enter
sub
xchg
test
pop
pop
ror
jle
ljmp
pop
pop
cltd
adc
out
aad
push
inc
jle
fwait
pop
das
jbe
sub
mov
lahf
mov
jmp
mov
xchg
js
in
and
adc
xchg
xchg
mov
inc
inc
insl
cld
stc
mov
mov
or
mov
fsubl
mov
add
pop
cmc
popa
mov
inc
inc
in
je
push
test
jno
mov
test
movsb
xchg
mov
mov
mov
and
dec
fs
in
cs
xchg
les
mov
imul
outsl
add
and
or
and
shll
mov
loop
repnz
and
adc
push
pop
cmpsl
les
and
cli
and
aad
int
sti
lret
pop
ret
push
ja
or
negl
data16
iret
bound
add
jmp
push
test
dec
rolb
mov
and
mov
xlat
mov
incb
push
mov
repnz
mov
int3
das
scas
ds
jae
repz
mov
dec
pop
cmp
roll
mov
enter
out
movsl
lret
insb
sub
xchg
lods
lea
pop
movsl
in
or
push
out
bound
mov
outsb
mov
sub
mov
aas
popa
jae,pt
sbb
jbe
idivl
gs
pop
mov
inc
imulb
jae
cmp
sbb
addb
mov
xlat
loopne
dec
cmpsb
int3
xchg
popf
xor
inc
in
aaa
xor
or
sar
or
lret
in
lods
push
cld
into
enter
cmp
jne
or
aam
sub
ss
cmp
sbb
movsl
xor
stc
ja
loope
cld
mov
es
dec
add
pop
enter
xor
sub
mov
xor
dec
in
mulb
int3
push
mov
jns
scas
mov
jp
inc
pop
xor
sub
mov
subl
cld
xor
xchg
rclb
sub
sti
jnp
mov
add
push
fldcw
pop
fcmovne
int
dec
rorl
or
mov
jnp
fsin
inc
int
dec
xor
jo
shrb
ds
jns
das
fbstp
push
negl
push
inc
adc
dec
mov
cltd
push
mov
mov
sahf
sub
push
xchg
add
dec
jle
jp
cmp
mov
inc
push
bound
mov
in
xor
ret
cmp
leave
dec
pop
pop
add
daa
lcall
pop
sbb
into
mov
cmp
jo
xlat
cs
push
cmp
and
add
movsl
mov
mov
jns
fbstp
das
hlt
cmpsl
insb
cmp
add
data16
shrb
or
dec
or
pop
pusha
jle
xor
aas
jle
sub
cmp
test
and
ds
rcrb
push
mov
movsb
std
cmc
insl
and
shr
outsl
rorb
rorb
mov
int3
xchg
and
loope
sub
arpl
jl
dec
xchg
pop
fdivl
cmpsl
insl
insb
and
push
mov
je
stos
sbb
jmp
test
dec
rclb
fxch
iret
rclb
fisubs
xchg
cmp
inc
or
xor
mov
and
icebp
nop
pop
pop
ret
mov
xor
mov
pop
adc
stos
fnstsw
lock
cld
lcall
xchg
cli
repz
pusha
add
dec
mov
mov
orb
push
repz
roll
jp
adc
outsl
out
dec
jb
xchg
sub
inc
add
cmp
je
mov
ljmp
mov
icebp
inc
into
jge
dec
dec
fcomip
inc
ds
inc
repnz
ja
nop
sub
xchg
dec
cmp
aam
mov
cwtl
jb
in
xchg
pop
clc
aaa
sub
adc
sbb
repnz
lahf
jp
xor
pusha
jl
xchg
iret
add
repz
fimuls
pop
loopne
xchg
mov
pop
jg
cmc
std
inc
adcb
mov
insl
imul
cs
pop
call
and
push
stos
pop
rcr
hlt
mov
pop
or
rcrl
or
adc
and
outsl
sub
addr16
push
pop
lea
sti
clc
jge
scas
gs
or
xlat
adc
out
adc
push
jo
aad
fidivrl
xor
test
cmp
lret
ficoms
jno
loop
inc
int
stos
pop
and
inc
xchg
movsb
cmpsb
orb
lds
pop
mov
jle
adc
mov
jg
xchg
adc
jge
xor
jg
mov
xchg
and
sub
mov
je
sub
jge
inc
mov
inc
cmp
sahf
loope
fcmovnu
jg
sub
jg
faddl
xor
je
sbb
push
mov
jl
inc
stc
or
push
adc
bound
jbe
stc
cmc
adc
lds
lock
and
daa
push
mov
imul
mov
hlt
in
test
adc
dec
xor
pop
cmp
mov
fs
sbb
or
aam
xor
popa
xchg
xlat
add
movsl
cmp
dec
cmc
cmp
sub
ret
dec
movsb
test
pop
cmp
sub
pop
imulb
push
mov
mov
stos
int
in
sar
in
mov
or
repz
inc
mov
nop
sub
cmpsb
jno
mov
adc
cmp
mov
adc
repnz
dec
insl
sub
pusha
test
jbe
data16
sub
or
push
mov
cmpsl
mov
push
dec
mov
xchg
bound
dec
mov
addr16
mov
movsl
cmp
fimuls
fstl
and
int3
aas
lcall
or
push
fmul
cmc
jno
sub
xchg
pop
pop
in
lock
fs
lods
fbstp
pusha
daa
stos
adc
ret
and
xor
repnz
hlt
or
out
lahf
adc
fistps
orb
rolb
out
cmc
xor
stc
scas
cmc
out
notb
cmpsl
mov
mov
fildll
jb
stos
sbbl
lcall
stos
lods
xchg
jg
cmc
cmp
sbbb
fists
loopne
ret
in
aam
iret
test
mov
xlat
adc
cmpsb
push
out
iret
mov
mov
lcall
movsl
movsb
sbb
mov
inc
lret
idivl
mov
push
fsubrp
out
shrb
test
je
xchg
popf
cmpl
imul
lret
or
or
xchg
mov
mov
xor
mov
in
fucom
push
repz
aam
stos
pop
loopne
jecxz
frstor
pop
and
jo
push
jb
mov
push
pop
call
out
repnz
flds
jo
pop
rcr
fdivr
scas
pop
lea
shll
mov
lock
pop
inc
jl
pop
add
jo
push
mov
data16
outsb
dec
mov
popa
add
mov
js
mov
push
mov
mov
push
push
mov
add
in
dec
negb
scas
mov
xchg
bound
outsl
sbb
lock
sti
scas
sarl
dec
in
dec
out
mov
xor
cmpsb
data16
push
ds
or
mov
cmp
dec
ss
cmpsl
cmp
jb
lods
addr16
add
out
das
or
mov
xchg
jl
inc
adc
dec
sti
mov
cmpsl
sub
mov
jo
arpl
mov
pop
cmpsl
xor
test
shll
mov
idivb
dec
jge
adc
mov
mov
mov
mov
fsubl
xchg
sbb
mov
rcl
jmp
mov
pop
or
and
data16
cmpsl
push
shlb
adc
in
ljmp
pop
jne
push
add
sbb
push
sbb
loopne
cmp
std
cli
jp
cmp
pop
clc
mov
icebp
dec
roll
dec
mov
sbb
addl
out
jae
aas
cmp
out
or
pop
push
add
adc
mov
lret
inc
mov
adc
testl
add
inc
cmp
movsb
and
out
lock
mov
xor
push
shl
sbb
testl
in
xchg
icebp
dec
hlt
adc
lret
pop
mov
xchg
mov
jle
add
xor
pop
scas
cmpsl
mov
add
pop
nop
mov
cmc
mov
mov
in
pop
jl
scas
je
mov
out
pop
push
push
stc
or
mov
loop
jae
sub
xor
jg
ja
aam
dec
add
or
movsb
scas
push
xlat
stos
repz
mov
aad
xorl
repnz
cwtl
xchg
loope
sub
xor
xorb
sub
fs
and
fstpl
sbb
aaa
outsb
stos
scas
fimull
jecxz
cli
xchg
mov
inc
fucom
or
pop
pop
mov
sarb
pop
mov
cmpsl
stos
jp
leave
loopne
cmp
cmp
inc
push
sub
popa
cmp
pop
inc
xchg
daa
pop
or
addr16
mov
xchg
arpl
inc
xchg
add
pop
faddp
icebp
inc
popa
dec
shll
sarb
sub
negb
xchg
mov
sbb
in
fwait
jge,pn
push
cli
mov
movsb
push
out
xchg
repnz
inc
inc
adc
mov
dec
pop
xor
addr16
adc
xchg
dec
in
cltd
mov
ret
mov
call
mov
mov
inc
cs
and
out
cmp
mov
or
repz
pop
pop
sub
fprem
loope
outsb
fisttps
cmpsl
add
int3
ja
cmp
adc
mov
mov
mov
subb
add
test
jle
jp
adc
cli
je
push
mov
xchg
dec
jbe
fcoml
insb
movsl
lret
in
fprem1
test
int
and
jecxz
and
sbb
jne
movsb
inc
movsl
or
cmpsl
daa
mov
dec
and
sub
and
mov
cmp
push
jge
pop
adc
insl
repnz
push
xchg
jle
out
into
cltd
aad
mov
cmp
xor
jbe
sub
subb
ds
xor
or
adc
bound
inc
mov
mov
mov
xchg
adc
inc
imul
xchg
or
cltd
mov
push
js
and
movsl
add
inc
sbb
jns
push
mov
test
dec
xchg
les
push
jle
lcall
fidivrs
sub
aaa
pop
jl
xchg
loop
ss
pop
pop
add
int3
add
and
mov
test
adc
test
out
je
sahf
xchg
orl
mov
fadds
and
mov
mov
pop
jae
fcmovbe
fiadds
daa
sarb
jl
xchg
xlat
movl
mov
sbb
nop
pcmpeqw
shlb
sub
ret
mov
xorb
mov
jp
jmp
stc
adc
pop
ja
icebp
mov
jge
mov
aad
jb
cmpsb
add
aas
hlt
pushf
mov
xchg
cmc
cmp
sbb
pushf
jbe
mov
loopne
int3
je
cmp
loop
sub
inc
ficoml
jbe
ljmp
mov
mov
stos
xacquire
mov
in
popf
mov
add
push
in
and
mov
push
push
adc
test
ss
xchg
xchg
mov
jmp
xchg
dec
xor
sbb
cmp
in
dec
imul
xchg
sbb
xchg
neg
jmp
push
dec
push
add
xchg
cmpsb
cmp
aas
outsb
xor
loope
mov
xchg
mov
xor
adc
adc
sbb
sbbl
popf
mov
push
notl
xor
sub
sar
stc
adc
addr16
cmp
jecxz
stos
mov
adc
xor
mov
fisubrl
mov
mov
jo
jg
push
fcmovne
setle
mov
insb
dec
jne
mov
andl
xor
fcompl
pop
pushf
sti
adc
pop
dec
xchg
cld
mov
icebp
stos
sbb
adc
sbbl
add
je
add
dec
pop
out
jl
subb
push
scas
dec
pusha
pusha
xor
faddl
sbb
das
ja
pushf
cmpsl
imul
pop
jmp
int
add
sahf
push
mov
outsl
xor
mov
and
cmp
shr
and
jge
lret
sub
std
push
incl
popf
push
loopne
add
scas
cmp
cltd
mov
xchg
lcall
cld
jb
and
and
out
repz
in
lock
xor
stos
in
sbb
or
push
mov
test
sbb
ficompl
stos
mov
rcl
aam
adc
cwtl
adc
xor
mov
insb
sub
imul
scas
pop
cmp
lds
imul
mov
mov
jae
push
leave
add
jge
cwtl
sub
sti
and
mov
dec
inc
lds
push
xor
cmp
add
cs
dec
std
insl
mov
fstpl
les
adc
lahf
lock
popa
hlt
inc
int3
sub
js
cli
inc
in
mov
add
pop
push
mov
inc
xchg
cmp
test
ficompl
mov
jo
push
inc
aam
sub
outsl
xchg
jns
xchg
cmp
xor
adc
xor
xchg
and
jp
jb
jbe
xor
push
cmpsb
int3
rcr
push
xchg
call
xchg
stos
jl
aas
outsl
pop
inc
mov
mov
fldl
imul
push
mov
rcr
scas
cmp
cld
xchg
imul
int
mov
mov
stos
icebp
adc
lret
idivl
inc
into
jl
imul
aaa
xchg
cmc
stos
push
aam
call
adc
into
lds
scas
add
jl
mov
pushf
loopne
fildl
repnz
mov
inc
sub
sti
push
pop
and
mov
mov
aam
pop
aaa
bound
out
fisttpll
hlt
mov
push
mov
xchg
fst
pop
repnz
inc
pop
pop
mov
mov
push
adc
int
xlat
mov
bound
loopne
push
scas
out
pop
mov
ds
jmp
fcmove
flds
mov
scas
jmp
fcmovnb
rol
pop
sbb
adc
ljmp
ss
push
scas
fsub
inc
test
dec
rcrb
in
movsb
mov
loopne
pushf
or
inc
or
icebp
dec
orl
xchg
cmp
pop
ljmp
push
loopne
int
jne
sbb
into
sub
xor
dec
cltd
testl
je
and
rcrl
xor
aaa
push
jmp
ss
dec
aad
aaa
jecxz
mov
mov
nop
mov
aad
icebp
pop
movsb
int
dec
aam
das
or
imul
mov
sbb
or
ljmp
test
in
cs
push
cmp
mov
bound
pushf
aaa
adc
in
test
fldt
ret
insl
or
mov
test
jmp
lret
xor
or
pop
fdivrl
fidivs
out
cmpl
aad
add
mov
shl
notl
aad
push
test
repz
inc
cwtl
jmp
rclb
test
push
jmp
xor
mov
cmp
sub
shll
push
lock
xchg
mov
lods
dec
mov
aas
sbbl
ss
rorb
dec
mov
dec
stos
dec
ss
pop
pop
add
lret
imul
sbb
test
push
scas
dec
jns
adc
jecxz
in
popf
and
jl
mov
repz
pop
add
ds
imul
movsl
cwtl
pop
sbb
sub
xor
fs
in
sub
mov
int3
xchg
push
scas
sub
push
out
jge
sbbl
fldl2t
xorb
mov
mov
add
sti
loope
int3
jl
icebp
int3
es
push
sbb
push
sbb
inc
and
fldl
fidivrs
cmp
mov
sbb
out
lsl
push
dec
sub
or
push
neg
lea
aad
mov
add
mov
call
fiadds
shrl
inc
das
in
outsb
dec
xchg
add
repnz
pop
mov
fldenv
or
pop
clc
ss
bound
bound
adc
dec
inc
mov
inc
test
cld
push
mov
cmp
pop
mov
fldcw
pop
mov
outsb
xchg
adc
lahf
xchg
dec
shlb
mov
sub
cmp
stos
adc
or
shlb
cmp
repnz
jg
sbb
push
jp
xor
dec
mov
das
sahf
int3
repz
outsl
or
je
imul
cld
pop
les
inc
test
mov
sarl
xor
sbb
mov
icebp
xor
aaa
add
cs
in
push
jle
ret
xor
adcl
clc
fwait
and
sbb
xor
leave
or
jg
ret
rorb
adc
jle
nop
sarb
add
lea
pop
or
inc
dec
stos
xor
dec
popf
negb
xor
aad
subb
pop
add
cmpsl
mov
jno
cmp
rcr
hlt
mov
sub
sub
push
pop
cli
push
add
or
mov
mov
sub
rclb
aas
xchg
insl
in
mov
adc
xor
or
push
xchg
fdivl
jne
insb
mov
inc
sbb
stos
aaa
arpl
or
xchg
cs
push
xchg
ja
sbb
pop
xchg
iret
push
adc
mov
testb
nop
inc
push
cli
sub
cmp
imulb
sbb
sub
lea
dec
inc
ret
and
lds
das
push
sbb
inc
arpl
push
test
fistl
xchg
je
js
daa
add
ds
stc
push
mov
div
aas
mov
jle
sbb
frstor
sti
in
rep
or
sbb
cs
fdivrp
push
jg
bnd
loopne
or
pop
jns
mov
rorb
jae
xor
inc
cmpsl
jno
in
add
sbb
daa
orl
mov
rep
dec
pop
mov
rcll
in
sbb
jmp
arpl
push
xchg
push
imul
loopne
xor
divl
pop
mov
stos
fsubrp
adc
shl
sbb
popa
xchg
lock
filds
hlt
or
insb
push
cld
pop
sbb
sbb
aas
inc
pusha
pop
push
jg
pop
cmc
clc
jnp
sbb
std
mov
push
mov
jp
pop
aad
faddl
sbb
mov
scas
push
sub
stos
movsl
xor
jno
pop
pop
jb
ret
sbb
jp
stos
stos
pop
mov
jp
fidivs
mov
stc
xchg
sbb
cs
push
inc
pop
aas
sub
jno
in
mov
xor
xor
out
and
aam
ret
mov
xchg
lea
xchg
and
sbb
jns
mov
movsb
notb
jns
cmp
and
jg
loope
dec
pop
sbb
out
xchg
fdiv
fildll
loope
inc
mov
in
sub
test
mov
repnz
das
xlat
or
icebp
popf
xchg
pop
or
push
pop
xor
mov
lock
mov
push
sbb
push
push
sbb
cmp
pop
mov
inc
in
pop
pop
out
mov
jne
ds
adc
mov
jbe
test
out
iret
sub
mov
loopne
arpl
imul
sahf
std
test
cwtl
cmc
adc
mov
mov
lods
fdivs
jno
mov
je
cld
frstor
pop
adc
fidivrl
in
js
scas
idivb
inc
mov
inc
orl
notb
jns
cmp
and
lods
push
jmp
pusha
sti
imul
xor
bound
pop
lds
mov
addl
icebp
xchg
int
mov
test
or
in
adcl
or
adc
xchg
dec
xchg
lds
jecxz
lret
xchg
popf
cmp
push
popl
xchg
loope
push
xchg
movsl
popa
ja
mov
out
call
gs
add
scas
sti
and
or
popf
ret
ret
test
out
mov
jne
jecxz
sub
and
cwtl
aas
inc
and
cmp
inc
dec
lahf
outsl
sub
jno
stos
jp
jmp
jae
cmpsl
outsl
lcall
xchg
fwait
xchg
cs
mov
jnp
cmp
subb
adc
popf
scas
mov
mov
dec
cli
pop
xor
dec
dec
sbb
pop
shll
ss
cld
or
ja
lods
add
dec
fcmovnbe
mov
xchg
push
push
mov
jl
sbb
xor
jl
mov
call
fcomps
aaa
loop
xchg
xor
xor
and
mov
lahf
imul
mov
shr
pop
aaa
xchg
cmp
dec
adc
gs
xchg
xor
iret
aas
ret
clc
cmpsb
mov
pop
ficomps
div
xchg
ljmp
mov
dec
les
sub
mov
push
sbb
jnp
mov
mov
data16
or
es
in
xchg
addr16
sti
call
cmp
and
in
pop
sbb
jnp
add
in
int
xchg
jno
ljmp
add
fs
xor
inc
daa
xchg
call
mov
sbb
es
inc
test
sub
rcrl
mov
insl
or
repz
or
sub
xchg
pop
xchg
int3
and
movsb
or
pushf
xchg
in
lret
rorl
sbb
rcll
sub
aam
sarb
pop
mov
sarb
popl
test
sbb
mov
mov
dec
pop
ja
je
push
push
and
test
mov
faddp
insb
mov
xchg
out
mov
mov
push
sbb
clc
xor
jno
push
mov
shlb
sub
stos
enter
jnp
jle
sbb
cmp
daa
icebp
add
adc
push
ljmp
pause
scas
or
dec
mov
ficompl
adc
fiaddl
rcrl
mov
repnz
and
cwtl
loope
lahf
aad
pop
jp
xchg
mov
xorl
adc
dec
into
jbe
outsl
repnz
jg
cmp
inc
loop
ss
sub
scas
or
push
mull
dec
jp
rcl
push
add
aam
xchg
push
mov
rolb
xchg
hlt
adc
add
lret
mov
add
pop
divb
stc
sbb
repz
cmc
sbb
jo
outsl
dec
fs
loope
mov
ror
lret
xchg
mov
pop
loopne
ss
int
lret
into
and
stos
or
idiv
outsb
mov
daa
lret
and
mov
jns
rcrb
fcoms
gs
leave
roll
stc
inc
mov
fsubl
sbb
cmp
mov
shrb
out
xor
hlt
call
xor
movaps
adc
inc
xor
mov
outsb
jb
jp
jge
xchg
push
iret
aam
stos
pop
nop
and
push
les
cld
popf
fs
xchg
adc
jp
aam
out
es
sbb
fbstp
out
jne
xchg
xor
push
ss
mov
jmp
ficoms
xchg
je
inc
pop
xor
push
pop
cmp
xchg
loope
repz
xor
xchg
icebp
repz
mov
es
ret
bound
xlat
sub
sub
gs
xor
sub
pop
loop
addr16
push
stc
push
mov
push
ja
pop
jle
repz
popf
sub
lea
lret
les
push
lods
imul
push
mov
in
jge
push
xchg
stos
dec
jae
ds
loop
add
sub
pop
push
or
stos
into
cmp
mov
push
arpl
jae
cmpsl
mov
dec
mov
or
test
xchg
jmp
movsb
pop
xchg
mov
mov
loopne
aam
test
xchg
inc
xor
jmp
aas
cmp
xor
xchg
mov
add
dec
sub
or
mov
xor
mov
jg
data16
divl
int3
flds
repnz
push
ret
int3
mov
sub
cmpsb
push
rcll
insl
cmp
test
pop
dec
icebp
xor
int
repz
lock
aas
aam
push
loop
js
lcall
hlt
and
adc
lahf
xchg
int3
xchg
in
mov
out
imul
in
fsts
push
jmp
js,pn
gs
sub
mov
aad
int3
push
out
jmp
inc
inc
push
cmp
mov
je
push
setns
in
adc
fstpl
cmp
shl
aas
and
sbb
loop
mov
pop
sub
lret
dec
aaa
add
lock
arpl
ret
sahf
in
bound
or
orb
ret
addl
int
mov
and
cld
imul
aaa
cmp
jl
stos
fadds
cmp
push
sub
jo
mov
push
loopne
movsb
ret
xchg
outsb
pop
fincstp
aaa
xchg
push
sub
dec
sbb
in
xor
in
fadds
jecxz
cmpb
cmp
loopne
mov
sbb
andl
or
inc
sub
mov
mov
mov
cmp
xchg
push
pushf
stos
xor
aad
stc
enter
sub
das
pop
cmp
cmpsb
clc
es
dec
dec
xor
fistpl
dec
mov
dec
les
xchg
mov
dec
cli
sub
xor
rorl
jge
pushf
fstpl
flds
in
lods
push
loopne
js
fidivrs
les
sub
dec
sub
int3
insl
add
inc
pop
aad
insl
and
cmp
push
cs
xor
test
enter
fisubl
ja
inc
pop
sbb
mov
clc
xchg
jnp
sarb
cmp
or
xchg
cld
pop
sbb
lea
cmpsl
loop
sub
roll
test
or
hlt
aam
icebp
je
movsl
sbb
aad
addb
or
cmp
jle
imul
cmp
mov
dec
jbe
xchg
mov
jns
jne
add
lock
and
sub
stos
cmp
inc
adc
ds
push
jns
imul
insl
sub
shll
jmp
cmp
add
pushf
mov
cmp
fstpl
cmp
pop
push
jb
nop
mov
xor
in
shlb
je
dec
cmp
cmp
mov
jae
and
or
xchg
cmc
bnd
in
les
idivl
mov
cmp
sti
sbb
dec
bound
xlat
sbb
xchg
pushf
in
pop
jmp
cmpsl
mov
and
in
mov
sbb
dec
cmc
push
inc
aam
mov
xchg
fimuls
add
xlat
popa
in
ds
jnp
aas
cli
ss
xor
mov
adc
lahf
mov
in
rcll
mov
push
js
mov
aam
pop
mov
jg
jb
or
add
fadds
loope
lea
jo
push
dec
dec
sub
pop
aad
mov
mov
popf
add
fs
jmp
addr16
mov
ret
addl
clc
lods
inc
std
pop
cmpsb
clc
add
je
into
inc
adc
push
sbb
add
pop
mov
andl
jge
xchg
loop
dec
add
push
xor
add
pop
xor
mov
push
and
jno
in
imul
out
jle
jno
dec
loope
xchg
iret
daa
hlt
enter
mov
ja
mov
add
sbb
add
or
dec
stc
daa
fildl
xor
inc
hlt
in
pop
push
sub
jnp
pop
nop
lods
push
sub
daa
and
test
mov
sbb
inc
mov
push
sbb
imul
add
xchg
sub
mov
popa
movsb
xor
mov
popa
push
push
das
icebp
cmp
mov
push
scas
xlat
fisttps
enter
xchg
add
push
and
xchg
inc
js
ret
xor
ficoms
repnz
or
dec
repnz
jb
add
jmp
std
xor
dec
loope
pop
or
jbe
xchg
out
pop
gs
sub
mov
and
adc
add
lcall
ss
adc
mov
adc
shrb
aaa
sti
jp
repz
fstpt
shl
mov
mov
lods
scas
jecxz
fwait
cmp
das
pop
pop
mov
push
popl
pop
xchg
adc
loopne
jo
xor
call
fnstcw
mov
xchg
push
cltd
mov
movlps
in
es
adc
pop
jp
or
lods
shrl
jp
iret
sub
xor
jp,pn
mov
outsl
jle
stos
pop
mov
cmc
insb
into
jns
hlt
hlt
inc
mov
out
push
adcb
mov
xchg
and
mov
sbb
sbb
jnp
mov
xchg
xchg
outsl
cmpsb
pop
dec
daa
pop
popa
add
outsl
clc
sarb
testb
lcall
in
adc
arpl
test
mov
in
add
repnz
push
push
mov
jl
mov
xor
jl
cmp
icebp
mov
push
imul
pop
sbb
mov
and
add
push
jbe
jne
outsb
mov
dec
adc
loopne
sahf
adc
aaa
adc
push
dec
jge
les
mov
xchg
lcall
lcall
xchg
sbb
push
movsl
enter
xor
sbb
ret
or
sub
adc
fwait
rcll
inc
outsb
xor
das
rcll
cli
std
adcb
jb
inc
in
mov
dec
and
or
inc
inc
cmp
clc
jg
push
adc
or
hlt
lock
add
cltd
in
orb
fldt
cmp
pop
mov
push
aaa
mov
test
xchg
or
mov
je
lds
movd
jmp
mov
push
pop
pop
xchg
mov
adc
xor
xchg
cltd
fdivs
and
call
xchg
jle
mov
sarl
add
and
outsb
int
sarl
imul
or
inc
jp
xor
fadd
int
mov
lret
mov
cmc
cwtl
and
jmp
hlt
jne
lahf
mov
popa
nop
into
fimull
push
dec
pop
out
and
or
bound
je
out
insl
push
fs
call
sbb
outsb
push
ret
incb
dec
jae
nop
aas
nop
mov
and
fs
pop
add
xchg
rcrb
push
and
and
hlt
sub
pop
push
mov
xchg
rorb
jmp
out
fiaddl
sbb
lahf
or
mov
xchg
ret
out
xor
sti
jg
lret
push
add
push
sub
fdivrs
bound
inc
fs
lahf
cltd
shlb
fld
sub
lret
lahf
jmp
loopne
push
push
sub
in
pop
xchg
add
cwtl
push
or
sbbb
lock
jnp
test
dec
sub
movsl
pop
inc
cltd
adc
push
adc
jns
nop
add
into
jb
and
fs
outsl
pop
addb
je
cmpb
call
test
lahf
push
jns
lcall
movsl
adc
test
repnz
test
mov
and
std
lea
jo
and
dec
frstor
cmp
jae
lret
sahf
outsl
fcoms
push
fdivrs
pop
dec
fs
fstp
sti
orb
adc
insl
shrb
jb
jge
jns
xor
je
fucomi
cwtl
push
fsub
ror
sbb
jmp
icebp
frstor
movsl
pop
mov
sti
fsubrs
ljmp
xchg
inc
inc
hlt
sub
add
jno
and
scas
nop
loope
addr16
insl
aad
insb
cwtl
pushf
daa
icebp
fcoms
sub
cmp
push
inc
cmp
fwait
jno
rcll
js
inc
popa
mov
xchg
dec
add
cmp
inc
dec
ret
clc
push
ja
ffreep
lea
dec
dec
mov
add
mov
adc
and
leave
cwtl
cmp
pop
pop
cli
pop
das
xor
addr16
div
std
and
addb
lods
aam
push
addl
shrb
push
into
bnd
je
aas
insl
mov
pop
icebp
rcl
fisttpll
in
adc
aas
jle
incl
ret
sub
cli
das
adc
jg
shl
fdivs
into
jp
imul
add
out
test
mov
fidivl
fldenv
jge
and
cs
mov
dec
cltd
incl
and
addr16
imul
or
fistpll
push
incl
jg
pop
sbb
push
xchg
ja
mov
loopne
repz
insl
nop
dec
mov
mov
cmpsb
and
and
arpl
imul
pop
sub
rorb
pop
pop
loope
pusha
inc
jmp
xchg
mov
out
lds
in
pop
add
fcompl
js
jp
sbb
dec
push
enter
addb
mov
or
cmpsb
jg
jl
jg
and
dec
mov
push
and
stc
mov
mov
dec
stos
jge
std
sub
data16
push
push
dec
push
pop
push
out
hlt
stc
cmpsl
mov
push
call
push
xchg
popa
cltd
stc
popa
es
js
outsl
sub
add
mov
sbb
aam
insl
and
and
mov
sub
mov
adc
aaa
fiadds
inc
push
popf
mov
cmp
pusha
sub
fstl
jb
pusha
popa
mov
xchg
or
mov
jb
in
mov
movsb
and
nop
sub
and
jae
and
aad
push
fbld
mov
and
call
sbb
ret
mov
and
sub
adc
xor
loop
movsb
rcrb
das
pop
clc
call
jp
loopne
pop
inc
dec
out
mov
jae
mov
xchg
push
lods
in
pop
and
ret
push
jb
mov
jmp
fidivrs
jbe
inc
scas
dec
dec
mov
adc
rcr
shr
xchg
mov
xor
ja
test
fadds
mov
addr16
scas
les
test
xchg
xor
test
sbb
xchg
repz
aad
pusha
xchg
aad
inc
pop
lret
add
or
int
cmp
movsl
lahf
jo
aad
jl
mov
int3
lahf
les
add
lds
call
pop
mov
push
push
fdiv
mov
fdivs
imul
lea
lret
jg
sub
push
jmp
dec
mov
pop
bts
cmp
jae
push
int
and
enter
sbb
mov
push
lea
push
and
add
xchg
jl
jp
inc
rol
testl
mov
pop
dec
adc
add
cmp
sub
push
sub
sub
fnsave
jp
js
popf
mov
cmp
rolb
outsl
adc
out
dec
add
maxps
push
sar
xchg
sbbb
out
mov
inc
into
aaa
mov
adc
orl
test
loope
ljmp
mov
jp
fcom
mov
enter
call
pusha
pushl
xchg
lcall
push
cmpsl
inc
jb
mov
jmp
push
out
cwtl
out
sub
lret
inc
loope
adc
mov
imul
fisubrl
adc
mov
pop
adc
in
sarb
sbb
adc
sub
push
and
dec
mov
cltd
or
adc
mov
adc
pop
jo
sub
cwtl
cmp
clc
mov
sbb
enter
inc
jb
pop
lret
pop
cmc
sarb
jg
sarl
cmp
mov
lahf
mov
nop
ljmp
push
test
jnp
sbb
jp
es
pop
pop
rcll
or
sub
cmp
push
adc
xor
jno
mov
add
cmpsl
jns
jb
xchg
mov
call
jne
out
mov
pusha
dec
xchg
adc
inc
lcall
mov
out
aas
jecxz
xchg
sbb
scas
filds
or
push
les
mov
adc
dec
setae
inc
lock
and
jecxz
lods
sbb
cmpsb
call
pushf
jnp
repnz
push
dec
ljmp
daa
addr16
mov
pop
add
pop
cmpsb
push
pop
std
outsb
stos
xchg
stos
mov
push
test
scas
mov
xor
lods
rcrb
push
cs
ljmp
std
movsl
ljmp
imul
ret
sbb
dec
adc
mov
jnp
ficomps
sub
idivb
push
mulb
dec
inc
mov
ret
jnp
out
lcall
mov
xchg
fdivs
adc
int
sub
clc
mov
das
into
daa
cmp
ljmp
add
inc
push
dec
jmp
les
pop
pop
mov
sbb
and
cmp
push
repz
jp
fwait
jae
mov
dec
jns
or
adc
sbb
test
or
fbstp
hlt
cli
fistps
das
in
shll
mov
js
lock
imul
das
ja
insl
add
jae
aam
inc
xchg
or
dec
imul
sbb
and
xor
js
out
cmpsl
and
call
mov
and
push
inc
loop
cmp
mov
sbb
fisubrl
popf
es
out
or
push
fisubrl
mov
stos
fsubrl
push
xchg
add
stc
call
mulb
push
cltd
add
insb
mov
fldcw
pop
xor
lahf
imul
jmp
fistps
rcl
xor
pop
mov
jmp
inc
and
xchg
xchg
movsw
jmp
pop
out
pushf
mov
test
inc
in
fcmovbe
js
jne
mov
iret
mov
add
push
inc
sbb
push
push
mov
leave
cmp
test
insl
push
mov
xchg
cmp
jae
fcmovu
dec
mov
and
push
sbb
or
movsb
in
pop
addr16
and
into
or
and
lock
hlt
jle
nop
cmc
hlt
cli
in
xchg
push
pop
adc
loopne
loop
push
adc
leave
xor
push
inc
inc
gs
dec
mov
fcmovnbe
mov
and
in
out
push
scas
jb
out
cmp
mov
pop
ret
leave
into
fwait
enter
in
std
cmp
push
sar
xchg
lret
cmp
mov
mov
int3
outsb
sarl
dec
jmp
ss
in
aas
int
dec
mov
sahf
mov
and
sub
subl
lcall
inc
fcoml
pop
fnsave
pop
add
rol
addr16
adc
repnz
test
movsb
cmp
xor
mov
rclb
lods
out
mov
jge
cmp
arpl
inc
int3
pop
ret
cmp
add
adc
addr16
popf
add
sti
jl
pushf
jg,pt
in
jo
adc
sub
cmpl
jbe
cld
mov
repz
inc
push
push
adc
push
loopne
dec
rcrl
imul
jl
sahf
in
cmpsl
inc
inc
lods
mov
or
inc
jae
lods
dec
data16
push
loop
cltd
lods
and
aaa
out
vmovhlps
jmp
fildll
mov
cmp
int
jns
popa
pop
inc
gs
leave
cmp
jmp
jmp
sbb
jo
pop
push
dec
cmp
dec
mov
xorb
mov
sbb
xchg
and
adc
leave
pusha
sub
add
pop
test
adc
lret
xor
nop
jo
dec
mov
inc
stc
cmp
mov
lret
shll
sbb
je
jle
jne
out
iret
dec
jne
dec
std
jmp
cmp
incl
shlb
stc
sbb
pop
cli
out
lcall
add
idivb
lods
cmp
push
imul
jns
mov
pop
call
push
lods
lahf
fistl
mov
call
sbb
lcall
enter
pop
pop
test
mov
mov
paddusw
cmp
cmp
push
pop
cmp
shrl
adc
mov
inc
push
jno
dec
lock
sbb
push
loopne
pop
dec
cmp
push
push
dec
test
or
fs
dec
sbb
inc
push
lea
push
js
pop
mov
pop
dec
push
xchg
in
sbb
nop
push
in
mov
and
test
call
sbb
fistpll
cmp
dec
and
test
frndint
bound
fcomp
dec
add
int3
and
in
xchg
mov
xchg
cmp
mov
push
ds
and
mov
inc
imul
mov
pop
sbb
xchg
shll
and
iret
out
cmp
std
xor
or
sub
pop
ss
stc
es
call
daa
lea
add
cmp
lock
or
mov
add
inc
add
popa
mov
dec
and
popa
aaa
bound
pop
or
cmc
lcall
and
mov
imul
and
push
sahf
xor
sbb
sub
and
hlt
or
aad
clc
mov
mov
mov
insl
and
lea
icebp
push
flds
test
stos
and
test
in
repz
dec
mov
dec
out
int
cmp
subb
dec
push
sbb
repz
pop
xor
sbbl
subl
jge
or
push
addr16
mov
dec
mov
mov
pop
inc
sbb
adc
or
dec
mov
xlat
jne
imul
lods
insl
fadd
or
inc
cmp
pop
jl
jl
sbb
mov
jnp
jmp
data16
add
mov
pusha
imul
pop
hlt
jo
inc
out
jno
lret
and
fs
test
out
jne
cmp
xchg
or
mov
dec
xor
daa
jbe
add
lret
lods
sub
lret
int
pop
mov
js
adc
lds
sbb
lock
movb
add
inc
push
rorb
cmpsb
jp
call
imul
in
test
sahf
fadd
xchg
sbb
and
insb
aaa
jmp
lcall
hlt
popf
push
fisttpll
jo
data16
push
lret
mov
lods
dec
adc
movsb
mov
aaa
mov
notb
pop
fs
mov
inc
dec
rorb
cld
push
int
fs
lods
pop
mov
xchg
aas
out
pop
or
cmp
xor
sbb
mul
in
and
test
cmp
fildl
jno
ret
and
test
push
repz
jno
mov
les
jns
dec
aad
lods
jns
push
pop
cmp
adc
mov
adc
std
mov
out
es
xchg
adc
imul
in
mov
into
cmpsl
jecxz
or
cmp
pop
lock
insl
jp
jbe
pop
hlt
ret
scas
cwtl
push
sub
mov
stos
gs
mov
sahf
repnz
cmp
outsb
dec
mov
sub
lods
and
in
push
or
imul
lods
nop
pop
insb
inc
xchg
out
mov
dec
lea
mov
stos
jecxz
ljmp
dec
js
popa
sti
stc
out
bound
fcmovb
out
sub
mov
mov
stc
enter
xchg
sub
ljmp
add
xchg
pop
leave
cltd
mov
mov
sbb
ret
cmpsb
inc
hlt
mov
xchg
dec
ja
into
mov
imul
sti
mov
mov
jae
sbb
pop
sahf
push
lret
xlat
lcall
dec
scas
and
cmp
fstpl
fsubrl
push
cmp
inc
mov
push
add
aaa
adc
mov
push
stc
outsb
sub
fists
repz
shrl
clc
pop
sahf
ds
in
push
stc
pop
sbb
xchg
cmp
test
mov
lods
mov
push
mov
data16
inc
bound
nop
mov
cwtl
sbb
and
adc
mov
xchg
ret
cmpsb
ds
inc
push
sbb
out
and
stc
mov
push
rclb
dec
cmp
gs
fildl
mov
jns
jg
push
xchg
arpl
xor
lret
sub
mov
pop
jbe
movsb
loopne
mov
jp
in
dec
das
adc
iret
xchg
punpckhdq
xchg
repz
mov
les
pop
xchg
imul
repz
and
in
lret
push
iret
mov
mov
insl
xchg
inc
pop
out
mov
mov
pop
out
jl
push
cli
push
xacquire
mov
lods
inc
frstor
ret
popa
mov
pop
push
out
and
sbb
ss
sahf
in
testl
rclb
pop
and
cmp
dec
jae
repnz
stos
popa
mov
or
rolb
testb
mov
jmp
mov
scas
jbe
insl
sbb
in
pop
mov
adc
push
sub
rcrl
sbb
push
mov
jecxz
mov
ss
cld
cs
mov
insl
nop
hlt
movsb
test
divps
fisubs
pusha
dec
inc
mov
mov
test
fcomip
cmpsl
cmp
xchg
and
add
call
inc
cmc
lahf
stos
out
test
es
rcr
jb
xchg
cmp
or
add
pop
loop
xchg
adc
dec
xchg
call
cltd
dec
in
imul
jne
dec
or
push
dec
icebp
adc
xchg
pop
cmpsb
jnp
daa
add
sbb
nop
pop
sbb
pop
jne
xor
imul
or
push
nop
insb
push
pusha
inc
stos
xchg
push
ficomps
stc
popa
js
lods
jg
shlb
xchg
faddp
jp
pop
xchg
add
fsubrl
lods
push
mov
mov
std
fs
mov
adc
test
or
mov
insl
adc
movsb
jge
xchg
sub
imul
stc
push
pusha
jne
int3
xchg
imul
sub
push
xchg
xchg
aad
sti
inc
mov
adc
inc
cmpsb
test
incb
bnd
cmp
mov
and
mov
insl
cmp
mov
call
dec
bound
xor
and
mov
rorb
fistl
es
adc
cmpsb
push
in
lret
mov
jp
and
xchg
into
adc
xchg
push
lahf
sub
repnz
outsb
sarb
in
xchg
decl
inc
insl
inc
daa
jge
fiaddl
fnstenv
xchg
adc
jle
out
push
mov
loope
in
jecxz
sbb
stos
xchg
push
add
inc
lods
and
and
popf
pop
pop
push
pop
pop
outsb
out
sub
jbe
cld
stc
outsl
pop
push
jnp
call
ret
push
push
push
je
stc
cli
bound
fwait
imul
pop
fimuls
aas
xor
mov
lock
push
aad
das
add
cmc
sbb
pop
xchg
jb
dec
test
jo
or
mov
mov
mov
sbb
bound
xchg
fdivl
mov
push
outsb
popf
xorb
mov
dec
pusha
pop
push
add
jnp
xchg
loop
xor
shrb
add
add
in
push
sbb
adc
xchg
stos
inc
rep
jg
negl
cmp
arpl
dec
inc
pop
and
mov
mov
ds
shrl
push
test
xor
fnstenv
adc
dec
lea
js
push
cld
or
jne
pop
aas
sbb
xchg
repnz
insl
pop
imul
jo
jae
es
xor
adc
pop
mov
test
lods
mov
adc
mov
arpl
push
outsl
inc
jnp
ret
out
cmp
mov
icebp
pop
pushf
cltd
divb
clc
and
sbb
popa
mov
pop
imul
cmp
or
pushf
or
mov
xchg
dec
daa
out
push
jne
dec
fcmovnb
movntq
sub
mov
gs
or
popa
dec
adc
je
push
mov
or
push
mov
daa
fimull
leave
jg
les
dec
mov
std
ljmp
add
sbb
cmp
push
daa
pushf
fmuls
cmp
adc
mov
pop
sbbl
fisttpl
mov
jle
xor
in
add
iret
stc
jo
lea
adc
xor
push
dec
pop
sub
push
and
push
cmp
mov
xor
nop
add
mov
andl
mov
fmul
inc
cmp
icebp
push
sub
in
bound
add
push
lods
jbe
fisttpll
pop
or
push
pop
popa
repnz
icebp
mov
dec
loop
sub
xchg
jne
fpatan
xchg
mov
fmul
push
cmp
cmp
pop
in
push
dec
push
sbb
in
lcall
pop
in
adc
inc
or
dec
xor
les
mov
mov
add
das
fbld
jecxz
daa
jno
test
xor
js
add
mov
mov
xor
or
and
xchg
in
xchg
adc
adc
and
rolb
sub
add
adc
push
insb
pusha
xchg
test
jne
popf
inc
mov
xor
jp
das
inc
push
bound
popl
add
adc
mov
ljmp
ds
out
mov
mov
push
mov
xor
mov
ja
rcrl
inc
cmp
scas
nop
mov
mov
or
repnz
pop
sbb
sbb
pusha
jecxz
add
lods
push
outsb
sub
ret
jecxz
lods
adc
jl
inc
lret
leave
in
scas
add
enter
and
mov
lods
test
fs
push
stos
inc
xorl
pop
pusha
pop
fildl
aas
mov
cmp
pop
movsb
push
dec
sbb
movsb
mov
inc
push
mov
or
sbb
cmp
add
imul
fstpt
mov
enter
notl
enter
insl
mov
lcall
test
aad
in
neg
lret
push
inc
sub
and
ss
mov
mov
xchg
adcb
insb
sub
sbb
cmp
dec
bound
inc
lock
pop
add
mov
fldt
push
scas
test
jmp
orb
lods
sahf
pop
cmc
std
jmp
jl
push
pop
adc
mov
scas
mov
jmp
sahf
orl
outsl
dec
add
jo
aas
or
mov
sbb
inc
stc
enter
clc
divb
pop
lret
xor
test
sahf
dec
push
xchg
xchg
jmp
fs
in
lcall
lock
pop
or
imul
pop
pop
popa
push
clc
xorl
imul
sbb
dec
fildl
inc
pop
pushf
ficomps
gs
pop
or
cld
or
fidivrl
pop
sbb
pop
not
jb
pushf
push
pop
add
daa
fwait
jecxz
test
inc
and
push
cmp
adc
int3
into
push
mov
scas
mov
jecxz
aaa
mov
or
pop
mov
push
xor
or
mov
sub
fldl
mov
loop
add
cmp
inc
lcall
inc
daa
rcrl
lahf
add
jge
insb
pop
scas
sbb
mov
xchg
lods
xor
das
or
push
xor
cmp
xor
push
fadds
addr16
fnsetpm(287
or
dec
xor
pushf
xchg
lds
lods
jne
rcll
mov
pop
xchg
stos
pusha
pop
xchg
add
cmc
adc
icebp
test
popa
inc
mov
shrb
rclb
pop
sarl
jle
jae
bound
clc
icebp
in
enter
or
pushf
rorl
cmp
xor
inc
pusha
or
ljmp
fwait
loope
js
adc
xchg
sub
and
xor
iret
in
jecxz
xchg
xor
add
adc
test
fisubl
jae
and
pop
insl
scas
and
icebp
stos
mov
rcll
push
ror
pop
and
fdivr
leave
dec
fs
and
aas
lcall
sbb
jp
mov
int3
popf
pop
lods
ja
notl
dec
lock
negb
xor
addr16
xor
dec
incl
pop
aad
mov
repnz
out
xorl
pop
outsl
adc
sub
enter
pop
shlb
ljmp
ja
movaps
leave
dec
into
pop
enter
jb
int
jns
stos
dec
sub
cs
es
sahf
xor
lret
call
shrb
add
imul
int
push
cltd
mov
mov
jno
stos
cmp
ficoml
mov
popa
push
lds
add
and
aas
pop
push
addr16
arpl
or
sub
mov
push
xor
aaa
roll
es
pop
or
data16
cmp
fstpl
sbb
inc
pusha
cmp
mov
popl
push
repnz
jae
jbe
dec
popa
xchg
pushf
cmp
ja
sbbl
in
fimuls
dec
aam
scas
hlt
data16
push
in
fnstenv
rclb
push
xor
jmp
test
mov
fsubp
je
pop
aas
inc
mov
lahf
jecxz
aas
jbe
sub
mov
cmpsb
rcrl
inc
xlat
addl
xor
adc
jnp
add
lods
xchg
shll
scas
loop
inc
mov
mov
adc
das
xchg
mov
lea
mov
inc
adc
or
xchg
mov
add
mov
mov
cwtl
nop
sub
dec
stos
pop
xchg
inc
cmpsl
cmc
cltd
insl
mov
fwait
rorl
inc
push
push
mov
sub
mov
popa
pop
clc
ss
scas
xlat
add
mov
loopne
mov
mov
jmp
sbb
ret
add
add
inc
in
loop
in
fadds
mov
cmp
mov
stos
in
ret
pop
mov
mov
movsb
add
cwtl
or
lea
stc
das
sbb
fiaddl
mov
shll
adc
inc
aam
pop
sub
pop
out
dec
mov
jp
out
mov
jne
rcll
bound
jmp
cmp
rolb
idivb
out
inc
mov
test
dec
in
jbe
dec
or
cmpsl
movsl
lock
popf
insb
out
push
add
fsubl
cmpb
int
adc
das
dec
rcr
shlb
push
lret
dec
lods
adc
mov
je
and
in
pop
fsubp
mov
es
mull
add
inc
out
inc
mov
jnp
inc
and
mov
xchg
pushf
popf
inc
dec
and
sahf
mov
inc
jle
fwait
dec
rclb
les
push
mov
xlat
cli
xchg
push
sbb
fwait
adc
pop
mov
push
mov
popa
and
sbbb
push
pop
push
hlt
mov
or
jle
adc
cwtl
sbb
jl
mov
push
dec
inc
cmp
xchg
adc
push
repnz
push
sbb
into
pop
or
jl
or
or
jns
dec
popf
sarb
lcall
add
pop
jmp
outsb
test
or
or
jnp
push
mov
inc
cmp
fnsave
pop
aam
out
mov
sbb
mov
imul
gs
js
in
lods
pop
loopne
ss
pushf
in
jae
mov
fnstsw
clc
das
mov
ret
outsb
xor
and
cli
mov
mov
pop
push
jb
mov
in
lods
mov
inc
in
inc
adc
scas
or
push
mov
mov
fisubs
pop
xchg
add
mov
pop
sbb
stc
fsubrl
enter
jmp
and
cld
movsl
loop
loopne
mov
jl
jb
sti
xchg
stc
aam
add
xchg
clc
ret
stos
mov
loop
jb
cltd
mov
inc
pop
inc
test
gs
data16
gs
inc
aas
sbb
or
sbb
inc
das
inc
stos
cmp
xchg
inc
push
rorb
daa
mov
jle
call
gs
pop
mov
insl
sub
movsb
sub
pushf
jo
iret
or
mov
xchg
sub
push
add
xchg
out
cmp
insl
jle
adc
push
lock
mov
aam
leave
imulb
xchg
dec
and
or
push
sub
mov
mov
rolb
fimull
inc
rolb
mov
jmp
cwtl
sbb
aad
cmp
loope
xor
cmpsl
xor
sub
fisttps
cld
fisubl
repnz
xlat
imul
iret
sbb
add
lret
sbb
cmp
xchg
mov
cmpsb
in
and
mov
jbe
sarl
fcoms
lods
sbb
lea
sub
mov
lods
mov
imul
ljmp
aam
xchg
xor
xchg
out
mov
push
stos
fcomip
je
and
inc
lret
out
fcmovu
fdivl
push
xor
pop
fsubl
fwait
aas
mov
mov
pop
jns
push
in
leave
rcrl
xor
mov
lea
leave
jmp
add
xor
jo
sub
notb
dec
leave
ds
enter
xorl
arpl
pop
mov
loope
dec
push
pop
inc
loopne
pop
mov
sahf
mov
pop
jl
cmp
out
call
rcl
pushf
aaa
adc
push
dec
push
jb
mov
call
xchg
jge
and
mov
out
js
push
stos
das
mov
mov
xchg
or
jg
mov
into
cmp
push
cltd
mov
mov
dec
mov
pop
mov
dec
lea
call
sbb
pop
ja
fists
imulb
mov
repnz
push
inc
xchg
out
xorl
adc
stos
and
jnp
lcall
or
int
push
mov
pop
sub
cmpsl
sub
push
gs
cmp
in
pop
orl
add
inc
into
or
and
rclb
xchg
int3
vucomisd
iret
mov
sbb
lcall
ds
fadd
jle
jl
out
xchg
cmp
push
movsb
cmp
lea
lahf
push
shlb
ret
ljmp
into
fidivrl
in
and
loopne
addr16
cltd
popf
mov
gs
push
jno
out
bound
lods
add
push
sub
adc
rol
mov
xchg
and
and
lds
fcom
mov
push
insb
imulb
xor
stos
hlt
xlat
push
sub
ret
cmc
mov
dec
push
or
and
js
mov
inc
inc
cmpsb
stos
jns
es
or
xchg
ljmp
sti
fimull
arpl
xor
scas
jno
xchg
pop
out
sbb
fimull
inc
adc
enter
cmp
pop
dec
test
mov
mov
test
dec
and
js
pop
daa
int3
or
cmp
adc
jp
aaa
in
scas
sbbl
mov
or
aad
in
and
xchg
jmp
push
pop
scas
ficoms
cmp
lret
pop
mov
dec
leave
and
loopne
aas
daa
adc
dec
test
jmp
shll
xchg
or
jno
enter
jnp
out
pop
scas
jb
mov
mov
jg
mov
mov
dec
movsl
push
sub
push
fdivrs
mov
or
rcrb
das
adc
aaa
outsl
mov
add
rorl
add
imul
imul
sarl
in
fldenv
xorl
lret
out
testb
in
sub
je
arpl
inc
repnz
out
pushf
jle
inc
inc
adc
add
and
mov
cli
faddp
cmp
push
and
jne
cmp
push
ss
cmp
jp
push
add
lds
mov
lahf
pop
lret
xchg
jge
out
jp
and
hlt
mov
imul
ret
lods
push
sbb
sub
mov
lret
int3
cltd
sub
shrb
mov
mov
clc
cmp
minps
mov
lret
mov
int
in
adc
pop
std
xchg
mov
mov
xor
scas
and
outsb
or
push
and
xor
mov
lea
in
lret
clc
xchg
gs
ret
js
shlb
jae
test
ja
jle
cs
mov
outsb
dec
scas
ja
mov
cmp
mov
out
addl
popf
out
or
insb
or
mov
clc
sub
out
test
xchg
adc
je
add
loope
mov
xor
dec
xchg
fildl
jecxz
pop
inc
add
xchg
orl
dec
es
pop
sub
push
rolb
mov
jns
xchg
cli
movsb
or
cmpsb
jge
add
add
sub
xor
cmp
shll
cli
ljmp
loope
int
and
cmp
adc
stos
sbb
jns
push
sub
cmp
mov
ss
loopne
insb
in
fildll
inc
test
fwait
add
daa
out
xor
inc
jmp
jp
cmc
es
fidivrs
mov
and
mov
add
hlt
pushl
daa
out
sti
mov
insb
inc
mov
sti
ret
adc
push
xor
push
test
mov
fadds
jb
sub
adcb
sub
pop
sub
xor
sub
mov
lahf
push
sbbl
push
insb
push
enter
xor
leave
out
xchg
icebp
cs
and
cmp
cmp
cmpsl
jmp
scas
mov
jne
inc
mov
rcl
fcmovnb
daa
aam
stc
mov
and
add
jp
dec
cmc
xchg
lds
add
mov
add
adc
popf
fnsave
nop
xor
repnz
cmp
and
iret
test
je
aad
test
and
push
popa
push
jg
sbb
push
ja
mov
mov
add
pop
or
lods
pop
lcall
mov
lcall
or
push
or
mov
adc
jle
lahf
sub
jno
inc
ds
cmp
or
or
inc
or
mov
test
scas
notl
xor
sbbb
mov
jnp
adc
push
adc
sub
fsub
xor
xor
aaa
imul
sbb
xchg
fnsave
cmc
fwait
in
pop
out
mov
enter
push
cmp
mov
push
shrd
xor
sub
jb
into
add
and
fdivl
test
loop
lock
mov
test
fsts
iret
fst
cmc
cmp
inc
cltd
loop
inc
mov
mov
loopne
inc
jno
jae
and
stos
adc
loope
add
movsb
dec
rcrl
jne
jle
cmp
mov
sub
iret
jle
lock
out
push
in
pop
cmpsl
jbe
mov
popa
sub
mov
add
mov
and
xor
jecxz
add
dec
pop
popf
inc
in
imul
scas
in
sbb
pushf
imul
sub
lahf
xorps
pop
xchg
sti
xor
loope
das
loop
xchg
mov
scas
add
push
and
mov
shll
inc
sub
push
jns
xchg
and
pushf
movsb
pop
das
cmp
sub
outsl
cmpsl
jle
ret
and
rol
inc
stc
inc
fwait
jno
outsb
and
push
push
call
orl
insb
inc
notb
mov
out
fisttpll
mov
imul
arpl
sub
mov
mov
jb
pop
mov
jnp
cmp
cli
sbb
les
cli
repz
std
sub
stos
jmp
cmpsl
adc
pop
inc
das
je
test
repz
pop
insl
aam
int
fstps
push
xchg
and
jg
jmp
in
fadds
cmc
push
jnp
sbb
jecxz
lret
xchg
arpl
pusha
test
mov
push
lcall
mov
fwait
jecxz
fimull
les
push
out
sub
xchg
in
jo
nop
jns
test
cmp
les
shlb
aas
hlt
jecxz
aad
ret
popf
mov
sarb
push
push
adc
jno
jbe
sti
mov
pop
or
inc
inc
xchg
lods
outsl
pop
xor
arpl
in
sbb
lds
ljmp
pop
les
add
inc
loop
ret
arpl
aad
lock
pop
pop
cmpsb
add
mov
cmp
mov
adc
mov
cmp
xor
jl
aam
int
mov
jp
mov
adc
test
aam
cli
jp
add
lcall
ja
cwtl
mov
jno
loopne
sub
in
cmp
xor
aas
push
psubd
sbb
outsl
bound
inc
or
cld
pushf
fiaddl
xchg
jmp
push
push
or
xchg
cmpsb
push
adc
mov
add
push
test
add
popf
je
inc
sub
push
cmp
pop
dec
ja
in
push
test
lock
inc
xor
js
push
mov
push
xchg
stos
and
sbb
and
inc
lret
xchg
rorb
inc
xor
loope
stos
je
inc
imul
jl
pop
clc
cmp
jns
inc
fdivr
mul
das
loop
push
movl
inc
push
ret
repnz
lret
inc
mov
sbb
xchg
push
es
jb
push
xlat
outsl
call
test
shlb
dec
jns
shll
lahf
cli
fcmovnu
roll
pushf
int
dec
or
sub
xchg
shl
mov
adc
mov
mov
aad
and
sbb
cmc
cltd
in
cmpsl
jno
stos
cmp
jge
jb
xor
int3
mov
mov
jne
inc
adc
mov
adc
mov
mov
jne
cmp
inc
push
std
sbb
cmp
lcall
daa
cmc
dec
lods
popa
and
test
jg
cmpsb
fnsave
push
mov
adc
mov
jb
mov
dec
push
rol
int
addr16
cmp
jnp
sbb
int
aad
mov
push
lcall
add
out
out
adc
inc
sub
fwait
and
lods
inc
add
out
or
fisttpl
jns
adc
xchg
sbb
inc
test
pop
movsl
aad
xor
cmp
pop
shrl
lds
jb
push
ds
inc
pop
jp
cs
iret
cmp
push
inc
addb
fsubl
push
addr16
pop
xlat
pop
test
fsts
int3
and
mov
arpl
mov
sub
or
xchg
scas
fwait
mov
rcrb
push
push
ss
mov
popa
enter
js
je
sbb
push
dec
pop
into
lahf
jbe
loop
inc
add
repz
cmp
cmp
xchg
adc
fwait
jbe
iret
mov
movsl
xor
sbb
mov
gs
leave
jbe
pop
aas
jb
mov
cs
sbb
push
xor
jmp
decb
cmp
push
jge
xor
adc
or
pop
mov
or
aad
or
pop
insl
jo
fsubs
sub
aad
pusha
xor
movsl
sub
mov
fcoms
mov
cli
lahf
mov
mov
mov
adc
psubsw
sbb
and
test
in
pop
aaa
mov
jbe
stos
fadds
lret
and
dec
inc
push
mov
inc
mov
push
jg
and
movsb
inc
sarb
call
in
or
sub
dec
dec
xchg
mov
inc
pop
push
and
lret
adc
xor
jno
leave
xor
mov
call
inc
fisubrs
cltd
push
nop
add
test
pushf
cltd
mov
and
xchg
sarl
int3
mov
clc
mov
dec
ret
rorl
jge
inc
in
inc
or
adc
jmp
mov
ss
lds
adc
push
stos
adc
dec
repnz
mov
sahf
in
lea
outsl
cmc
xor
lahf
test
push
mov
scas
cld
stos
clc
add
and
jno
mov
mov
repnz
es
stc
or
lcall
stc
scas
cmpsl
inc
pop
das
pop
and
xorl
mov
jne
push
push
fdivrl
pushf
sub
lods
push
pop
xor
pop
sbb
outsl
jo
xchg
push
add
xchg
ss
shrb
call
lea
xchg
add
in
out
in
lock
jl
add
push
push
or
cmp
fsubl
dec
filds
mov
fwait
inc
dec
in
and
lahf
cwtl
sub
std
push
loope
out
dec
movsl
les
mov
push
fbstp
into
lea
test
aaa
fcoml
jle
jg
adc
xchg
shlb
fmuls
rorl
lret
mov
scas
cld
jl
mov
lcall
ds
clc
mov
stos
mov
dec
mov
pop
xchg
repnz
into
fnstenv
loope
clc
rorl
pop
pop
xchg
xchg
inc
nop
jg
mov
push
xor
sub
fsubrl
aaa
outsb
inc
mov
jb
lea
imul
aad
sbb
clc
jg
pop
xor
sub
pop
sub
lock
and
push
pop
mov
fldenv
pop
adc
decl
pop
das
xchg
mov
xor
out
mov
push
push
jne
ficoms
insl
mov
pop
add
les
or
push
insb
test
daa
fisubs
stos
nop
sbb
and
inc
and
sub
cmp
popf
jl
or
icebp
push
mov
cmp
mov
add
push
sahf
fucomip
xchg
sub
push
cld
fsubp
inc
mov
js
popf
int
adc
mov
cld
and
mov
pushl
int
push
mov
add
repz
stc
and
js
andl
sbb
pop
fsubrl
cmp
shrl
nop
das
jno
inc
fistps
mov
movsl
in
ficompl
leave
push
inc
sub
and
ljmp
pop
test
or
and
ds
nop
cmp
lret
arpl
adc
xchg
xorl
add
or
dec
mov
lahf
pop
push
sahf
and
sub
xor
xor
jp
divb
pop
dec
js
insb
xor
xchg
push
js
mov
into
or
arpl
push
add
jns
daa
out
idivl
fisubrl
sbb
push
fcmove
sub
xor
pop
xor
fcmovnbe
xor
add
adc
enterw
xlat
shrb
xchg
mov
adc
xor
stos
mov
pop
hlt
and
pop
adc
in
adc
in
addl
push
sbb
cwtl
pop
stc
out
xor
mov
clc
cmpl
inc
test
sbb
lock
jb
and
or
test
int3
adc
xor
cmovnp
inc
pushf
stos
aad
xor
sub
shll
push
insb
pop
xchg
push
loopne
mov
ret
dec
push
pop
adc
jne
jle
fidivs
lods
mov
int
loope
lods
or
push
cltd
outsb
mov
jb
fidivrs
sahf
xlat
lret
insl
outsl
stc
js
mov
lret
sti
pushl
repnz
or
lods
push
cwtl
jo
gs
lock
pop
shll
xchg
inc
cmp
xor
jg
push
or
adc
push
aad
ret
jecxz
orb
mov
nop
xchg
pop
xchg
outsl
hlt
in
sbb
xlat
popf
add
arpl
jns
sbb
push
or
outsb
adcl
mov
das
xor
add
push
pop
nop
jnp
fs
test
popf
jo
adc
mov
out
jle
adc
fnstenv
cltd
or
and
test
in
subl
cmp
xlat
test
daa
lahf
imul
cli
push
ret
add
lods
sub
shrl
aam
push
clc
inc
lcall
sarb
add
pop
arpl
xchg
xchg
mov
cmp
push
mov
mov
popf
dec
sbb
stc
hlt
push
add
cmp
adc
fs
popf
dec
test
out
lock
mov
cld
push
in
sbb
pop
enter
adc
enter
mov
adc
pop
imul
hlt
stc
jae
push
mov
sub
jmp
incl
data16
mov
pop
and
mov
les
lds
cmpsl
pop
and
jle
int3
mov
xor
dec
sub
xchg
dec
rclb
jns
enter
sbb
fmuls
dec
lcall
icebp
mov
xor
mov
cltd
adc
andl
cld
js
rclb
inc
enter
test
test
scas
adc
pop
add
add
out
lods
leave
sar
repz
inc
cld
xchg
add
rorb
paddb
dec
and
inc
push
inc
xor
sbb
push
movsb
cmpsl
fimuls
xchg
iret
gs
mov
out
xchg
lock
push
inc
jp
aam
rcr
sbb
sub
mov
cs
inc
adc
shll
fstp
sub
jnp
xlat
sub
sbb
mov
call
jae
mov
xchg
insb
js
test
mov
shrl
out
xor
sti
test
jae
cmp
cmpsl
mov
cmp
js
loopne
cmpsl
int
sub
xchg
or
divb
lahf
lds
je
xchg
adc
es
add
mov
xchg
and
push
mov
cwtl
push
add
imul
add
pushf
fidivrs
jp
pop
aas
jae
std
mov
sbb
repz
ljmp
push
mov
sti
loop
cld
js
insb
loope
pop
divb
pop
xchg
jle
add
sbb
cmp
jnp
subl
mov
in
sub
shlb
mov
xchg
mov
mov
jle
push
mov
cmp
pop
movsl
idivb
or
rorl
out
xchg
pop
clc
scas
je
out
cmpsb
mov
add
ss
xchg
lea
pop
loope
addr16
inc
pop
fst
sbb
jo
in
dec
addr16
out
rolb
cmp
adc
into
btr
out
pop
mov
mov
popf
or
sti
rcl
paddusw
cmp
out
or
jo
xor
stos
cmp
call
clc
inc
lahf
mov
inc
mov
and
mov
inc
add
orb
mov
xchg
xor
or
cs
inc
inc
into
sub
clc
push
rcl
xchg
push
add
sub
fs
xor
clc
ljmp
xor
pop
xor
sub
leave
pop
pop
pop
imul
pop
jb
cltd
inc
adc
mov
sbb
popf
xor
jbe
ds
das
movsb
jnp
loopne
es
and
addr16
pop
cmp
mov
scas
fisttps
aas
out
dec
or
mov
cs
imul
fs
jle
or
lods
sbb
andl
data16
cli
inc
test
fs
cmc
lds
test
dec
inc
scas
into
jb
les
push
pop
mov
mov
mov
stc
lock
add
push
inc
std
cmpsb
das
mov
jle
fcmove
inc
ja
sbb
aad
dec
fisubs
sbb
inc
xchg
loopne
lret
iret
js
cwtl
xchg
and
popf
int3
push
push
push
add
mov
out
xlat
xchg
sbb
ja
xorb
cmp
fimull
push
push
xchg
add
stos
pop
push
jnp
sub
sbb
fisubrl
pop
fistl
int
sbb
add
test
and
popf
jb
lret
inc
or
insl
das
fs
movsl
out
pop
push
lcall
pop
jbe
rcl
sbb
clc
hlt
test
inc
cmp
pop
aam
mov
cli
sahf
sub
mov
arpl
js
inc
jnp
fildl
push
movsl
cltd
sub
cmp
sub
lock
ss
jle
jae
imul
jmp
pop
bound
push
mov
bnd
jne
sahf
jecxz
fnstsw
nop
mov
stos
sbb
iret
or
dec
fs
jmp
mov
xchg
out
out
out
repnz
rol
and
adc
out
mov
inc
in
push
cmc
les
inc
mov
in
movsl
dec
pushf
cmpsb
repnz
scas
fbstp
jno
push
fnsave
xor
and
int3
push
loopne
pop
xchg
pushf
pop
pop
jns
fildll
mov
daa
and
std
jno
stos
pusha
cmp
jmp
inc
and
shll
repz
dec
mov
std
test
cltd
jle
and
inc
adc
xchg
in
push
in
mov
add
pushf
loopne
rorb
rol
adc
sbb
add
xchg
shrb
xor
xchg
insb
xchg
test
stc
adc
push
push
lods
mov
fcoml
in
loopne
push
jl
mov
test
ret
addr16
mov
loopne
cs
inc
xor
mov
fsts
outsb
push
xchg
cld
popa
popa
lea
dec
jb
mov
xchg
mov
inc
push
mov
rorb
nop
or
test
xchg
les
mov
inc
and
hlt
lds
jg
sub
in
icebp
xor
cmp
jmp
mov
xchg
pop
daa
fwait
pop
cmp
leave
sub
jmp
std
adc
negb
xor
inc
orb
stos
add
push
push
xor
and
cmpsl
fcmovu
add
cmpl
rcll
push
jo
mov
ja
sahf
xor
adc
call
pop
in
fsubl
in
fisttpll
cli
xchg
in
pop
mov
xor
stos
das
jle
leave
mov
hlt
daa
mov
pusha
jecxz
mov
push
les
sub
test
sub
and
mov
add
cs
jne
xchg
into
jmp
into
inc
mov
insb
and
push
lds
cli
les
cmpsl
rorl
in
mov
xchg
push
dec
mov
push
movb
sbb
jp
addl
mov
push
jmp
pop
fcmovne
jo
xchg
outsb
mov
mov
jne
int3
les
xor
add
pop
dec
jo
and
popf
xor
aaa
cmp
in
ret
push
dec
dec
and
or
mov
sysexit
sbb
cmc
sbb
xor
mov
jp
or
call
sub
fbstp
jns
mov
iret
popa
lahf
jl
mov
outsl
and
jbe
cwtl
add
nop
enter
and
scas
pop
repnz
mov
add
xor
and
sti
into
lds
rorb
mov
test
xchg
xchg
adc
fimull
lods
rcl
test
clc
sbb
or
sub
insb
mov
test
inc
xor
mov
or
adc
mov
push
mov
push
sti
pop
pop
int
push
inc
orb
subl
adc
mov
and
mov
mov
jae
pop
es
adc
mov
in
jbe
sub
sti
inc
aad
push
and
pusha
pop
mov
or
xchg
or
sbb
xchg
fbstp
and
lea
ret
xlat
enter
mov
mov
push
lea
xor
cli
jno
cld
push
ficompl
cmp
rcr
xor
sbb
pusha
lock
sub
jb
cmc
jmp
push
dec
sub
cmp
push
mov
inc
or
push
mov
mov
cs
adc
mov
in
out
shlb
movsb
push
add
dec
xchg
jno
pop
mov
xchg
sti
ficoms
or
stos
or
mov
out
fdivs
jle
jmp
inc
or
sbb
or
push
jo
pop
xchg
fcmovbe
roll
push
movsb
jne
push
adc
lock
addl
loop
xchg
mov
mov
stos
pop
push
sbb
pop
aad
jle
lea
shrb
or
clc
add
das
fisttps
push
pop
jnp
outsb
mov
and
lock
xor
dec
ljmp
lea
scas
pop
nopl
xchg
es
lods
icebp
dec
push
leave
les
inc
inc
dec
cmpsl
cld
iret
xchg
rcl
xchg
js
sti
movsl
test
inc
out
aam
push
mov
jo
dec
sub
add
loopne
jge
dec
stc
mov
scas
xor
pop
js
movb
outsl
shr
sub
inc
into
pop
movsb
jno
or
push
movsl
mov
xchg
jge
jp
shl
sti
popf
mov
stc
dec
int3
stc
xchg
sub
xor
mov
fisttpll
mov
ss
push
in
or
in
pop
je
daa
jo
mov
mov
aas
bound
sub
mov
fisubrl
push
pop
js
sbb
aad
sbb
and
iret
mov
dec
iret
jne
jecxz
arpl
sbbb
fdiv
or
sub
je
cmpsb
test
xchg
lret
xor
jmp
fsubrs
test
std
test
push
dec
cld
cltd
sub
je
stc
into
sub
stos
inc
push
xor
sbb
aad
jbe
popa
adc
xor
jno
in
sahf
adc
popl
scas
sbb
cmp
jg
into
lret
sub
out
mov
out
fstpl
mov
fisubrl
inc
jae
repz
xor
aad
push
clc
fstps
jg
cmovns
das
fcompl
sahf
daa
adc
lea
lret
pop
outsl
ja
add
sbbl
push
inc
test
cmpsl
movsl
scas
lods
addl
cli
mov
int3
mov
cmp
fiadds
push
push
xor
sbb
pop
rcll
mov
rorl
or
jo
and
fstpl
sub
ss
notb
or
test
mov
js
push
mov
mov
scas
ja
mov
imul
subb
insb
std
push
inc
or
lahf
aam
in
pushf
jns
popf
js
xchg
loopne
jmp
mov
test
rol
xchg
mov
addr16
les
cmp
enter
lret
xchg
out
andb
sti
jge
rolb
mov
sub
add
out
lods
shrb
loopne
xchg
lods
pushf
lods
ds
push
or
sbb
and
dec
jecxz
inc
mov
aad
sub
jo
adc
xchg
adc
lcall
test
rclb
cmp
inc
int3
sahf
fs
push
xor
rcr
add
ror
dec
push
rcl
push
int
jne
push
jns
popf
push
cmp
fwait
xchg
xor
sub
inc
fmuls
jo
inc
nop
mov
jb
push
hlt
sti
mov
mov
cmp
insl
pop
psubsw
xchg
leave
clc
dec
movl
mov
sahf
mov
add
sbb
or
jbe
inc
xchg
and
dec
pop
emms
ret
jnp
fdivrl
imul
sbb
push
ret
hlt
rclb
loop
nop
fwait
pop
dec
and
and
or
dec
pop
cmp
and
push
icebp
stc
movsb
add
cmp
fwait
pop
jbe
push
dec
ficomps
push
push
dec
test
jo
fxch
into
ja
push
lods
adc
pop
or
inc
push
jo
jl
dec
sub
mov
push
data16
and
pop
mov
xlat
mov
iret
xchg
adc
lea
inc
push
not
xchg
jno
mov
xchg
scas
cs
sbb
addr16
mov
push
push
dec
fnstsw
or
sahf
push
mov
aam
sub
mov
js
lret
sub
jge
xchg
xchg
adc
jo
lcall
add
xorb
mov
cltd
adc
iret
lcall
mov
out
sub
and
xchg
test
mov
pop
or
ret
mov
add
aas
insl
jns
cld
mov
leave
jns
push
xor
add
rorb
push
cs
hlt
cmp
or
stc
jns
leave
icebp
push
int
jns
enter
inc
xor
pop
insb
aam
jmp
aam
movsw
push
fists
adc
in
mov
cmp
push
jns
xchg
sahf
nop
dec
pusha
fldcw
add
test
lcall
mov
inc
mov
nop
push
sub
jmp
add
cltd
sbb
dec
dec
push
mov
das
xor
orb
outsb
inc
or
add
movsb
orl
mov
jb
dec
pop
inc
pusha
pop
shlb
idivb
sbb
sbb
xchg
mov
stos
data16
pushf
jmp
jle
sub
and
sbb
cmp
decb
mov
scas
in
aam
xlat
loope
es
insl
inc
lock
stc
xchg
jp
movsb
or
or
and
leave
outsb
or
stos
loopne
mov
ljmp
fs
adc
add
push
dec
out
push
adc
clc
jle
aas
mov
mov
mov
cmp
fucomi
jmp
sbb
hlt
jmp
addl
repnz
aam
cmpsb
lock
rcrl
movsl
ds
cmp
dec
xor
push
xor
orb
mov
push
jp
repz
mov
inc
push
adc
ljmp
mov
iret
dec
arpl
dec
xor
mov
jle
mov
xor
std
les
jle
mov
add
jp
sbb
shrl
cmp
push
and
shll
adc
add
out
xchg
push
or
sbb
sub
fisubl
rorb
sarl
in
push
push
in
cmp
mov
decl
mov
das
xor
sbb
jl
pop
divb
pop
push
jle
ljmp
or
pop
jo
ljmp
iret
mov
pop
adc
cmp
mov
call
sub
in
xchg
call
mov
std
xchg
mov
push
push
movsl
fdivrl
pop
or
test
jp
in
imul
sbb
daa
pushw
push
mov
out
adc
test
das
push
sbbb
adc
xor
enter
push
ficomps
pop
aas
testb
daa
hlt
cs
cwtl
sbb
jne
add
les
cmp
inc
jns
mov
xor
push
ljmp
ficompl
rorl
pusha
mov
repnz
mov
arpl
and
cmpsl
popa
push
loope
mov
xchg
out
fnsave
xchg
test
imul
add
xchg
mov
int3
insl
sbb
fidivl
stc
pushf
in
insb
mov
test
or
push
mov
je
cwtl
jae
xor
mov
add
movsl
insb
js
les
sub
sub
dec
sarb
mov
fbstp
xor
ficomps
out
push
out
jns
stos
inc
sbb
xchg
mov
dec
or
jp
mov
mov
and
mov
mov
popa
gs
test
movsb
and
push
push
gs
hlt
inc
xchg
sbb
repz
jae
push
out
add
mov
jno
subb
out
jge
sbb
inc
jle
jnp
or
testb
icebp
sub
or
inc
decl
push
cld
int
nop
push
dec
dec
in
movsl
fsubs
sub
int
sbb
icebp
loopne
in
inc
arpl
call
ss
mov
icebp
xchg
or
add
addr16
rolb
shr
iret
fcmovnbe
pop
in
por
xchg
push
xor
push
pop
cmp
daa
inc
mov
test
push
rcr
dec
push
movsb
fwait
mov
mov
sbb
je
jae
sub
jbe
jns
stos
or
les
movsl
jno
dec
inc
push
sbb
mov
mov
xlat
pop
cmpsb
lock
pop
adc
cwtl
popf
mov
mov
jg
leave
clc
or
pop
dec
arpl
test
inc
sbb
add
jecxz
mov
inc
int3
adc
add
jp
adc
ljmp
mov
dec
jl
les
dec
cmp
stos
or
jb
lret
ret
loopne
push
lret
xor
mov
inc
mov
push
and
and
out
in
pop
or
inc
and
sar
sub
push
inc
arpl
xchg
dec
jne
cli
cmp
fwait
lods
fs
jns
cmp
push
sbb
cs
ss
xchg
and
repz
loop
push
insb
push
ljmp
fbstp
andb
mov
cld
inc
out
xchg
dec
pop
mov
test
cmp
push
sub
lcall
xchg
xchg
xchg
cld
dec
mov
inc
xor
cmpsb
adc
lahf
inc
cmp
clc
or
jne
sub
mov
sahf
shrb
mov
fnsave
int3
sbb
popf
mov
test
adc
push
push
jmp
pop
fdivs
stos
mov
push
adc
pop
sbb
rol
cwtl
shrb
mov
fs
push
fsubr
lods
xchg
cmpsl
inc
stc
jae
adc
sahf
hlt
lea
push
inc
mov
adc
mov
out
adc
cli
mov
jb
pop
out
rcr
ror
int
mov
stc
dec
xor
sbb
sahf
mov
and
sbb
cli
sub
sbb
jge
pop
push
adc
lods
add
dec
sub
jne
movsb
shrl
adc
add
lods
les
dec
adc
and
je
cmp
sahf
notb
es
psubusw
scas
not
inc
mov
ja
mov
repz
mov
pop
in
shll
int3
scas
push
ficoml
sti
in
test
loop
sub
call
jbe
cmp
mulb
out
cmpsl
out
and
or
fisubrl
xor
add
mulb
mov
js
xchg
xor
add
orb
mov
dec
or
ja
jmp
stc
push
sbb
and
rcrl
rcll
push
sbb
push
and
dec
loopne
jl
xchg
xlat
xchg
jo
andl
sbb
mov
mov
mov
add
or
divb
bound
inc
jne
mov
popf
int
leave
sub
mov
pop
ror
lods
aam
add
mov
ljmp
iret
pop
cmp
dec
lret
pop
jo
nop
inc
adc
sub
sub
out
push
mov
fsts
das
add
ja
jne
jl
ret
and
pop
xchg
shrb
xor
xchg
ss
int3
stos
cltd
notb
rol
adc
lcall
mov
push
and
lcall
xor
mov
pop
sub
xor
leave
cld
js
pop
adc
or
inc
xor
cmp
ljmp
inc
push
cli
pop
sub
or
pop
scas
add
pop
inc
repz
popa
mov
mov
cmp
or
jb
cli
jp
xchg
iret
sbb
push
mov
lahf
idivb
daa
stc
pop
loope
ds
mov
cmp
and
aad
jl
xchg
lods
xor
mov
repnz
arpl
mov
xor
loop
ret
ret
push
cmp
jae
xchg
cld
push
inc
and
jo
out
xor
xchg
pop
icebp
daa
das
add
pop
in
mov
inc
lods
cld
cs
in
sbb
inc
xchg
pop
cmpsl
loop
xor
int
xchg
or
dec
or
sub
pushf
add
jl
sub
ret
sbb
shr
xor
sbb
xor
lods
out
stos
ret
mov
pop
jmp
and
cmpsb
inc
push
mov
jo
jp
push
dec
das
test
fstpl
jle
mov
push
sbb
xchg
fidivs
loopne
jecxz
rcrl
pop
repz
mov
mov
ret
cmc
cwtl
ret
jnp
sub
mov
rcl
cmpsl
shll
ret
scas
jbe
inc
push
lcall
push
sbbl
fs
adc
jecxz
loope
push
cmpsl
push
lock
jae
push
jg
sub
fistps
sbb
xchg
dec
jle
in
pop
int3
shrl
jbe
mov
or
loop
test
push
pop
pop
xchg
jg
adc
std
stos
cltd
dec
lcall
arpl
dec
cmpsl
push
ja
adc
inc
insb
mov
mov
jo
imul
jmp
mov
or
fwait
pop
andl
daa
dec
sysenter
shlb
and
mov
imul
sarb
rcrl
mov
je
popf
dec
inc
push
jp
jmp
add
pop
ret
push
mov
loop
repz
push
popa
outsb
fcoml
cmp
stc
fldt
pop
add
cmp
jl
dec
add
push
dec
es
xchg
mov
push
ss
lret
movsb
das
dec
lods
mov
ljmp
mov
lea
dec
push
bound
movsl
mov
out
adc
bound
mov
enter
ja
pop
jno
shlb
jg
pop
scas
mov
or
xchg
call
pop
dec
jle
sbb
add
inc
adc
mov
ret
mov
pop
test
mull
fmull
int
or
dec
pop
lahf
test
and
loope
aad
pop
dec
test
jns
mov
js
dec
lea
pop
data16
pusha
bound
nopl
pop
xor
push
stos
mov
js
cmp
jb
rolb
stos
sbb
sub
lcall
or
sbb
jle
sbb
insb
aas
lea
dec
insb
daa
adc
or
dec
add
mov
or
insb
mov
push
dec
adc
or
cwtl
ss
sbb
cmpsb
mov
mov
mov
cld
mov
pop
add
jnp
pop
adc
lock
push
push
out
loop
mov
les
lock
inc
cmp
test
sub
ret
lahf
cltd
je
lahf
or
insb
sbb
or
ret
repz
add
shlb
push
dec
cmp
in
mov
popa
push
mov
clc
inc
dec
push
adc
xchg
dec
mov
fs
sub
mov
mov
sbb
jmp
pop
cltd
pop
scas
pusha
adc
imul
popf
sub
push
sbb
or
mov
in
xor
inc
mov
mov
popa
out
ror
inc
sub
mov
push
xchg
pushf
lods
rcrb
cmp
add
lahf
dec
mov
fadds
cmp
in
add
mov
jns
adc
fsubr
std
dec
rclb
out
hlt
fwait
je
decl
jecxz
or
pop
outsl
dec
mov
cli
inc
or
mov
js
mov
xor
inc
movsl
push
jge
push
das
leave
adc
pop
jb
sbb
adc
shll
or
mov
pop
adc
inc
icebp
mov
test
cli
insl
inc
xchg
sarl
add
xlat
dec
mov
subl
out
loopne
add
rcrl
cmp
inc
imull
push
push
clc
dec
pop
movsb
mov
inc
xor
jns
das
sub
jnp
or
xor
sub
dec
lods
jmp
jne
jecxz
loop
pop
mov
adc
push
fwait
pop
imul
cmp
xchg
and
add
xor
add
stc
mov
cmp
xor
xlat
sahf
pop
push
mov
sub
loopne
test
mov
ret
sub
or
out
loop
sbb
pushf
push
test
jne
test
sbb
inc
int
push
scas
shll
int3
pop
or
dec
push
pop
pop
mov
or
mov
sti
add
mov
ficoml
fsubp
repnz
jae
mov
lods
pop
cmpsl
pop
mov
jp
pushf
dec
test
arpl
push
jmp
sti
repz
popf
loopne
movsb
dec
add
jge
sbb
push
and
into
ljmp
jg
daa
aaa
rcrl
push
cmp
inc
xchg
add
ret
dec
mov
xor
shl
jle
lret
pop
cmpsl
jo
lock
subl
pusha
dec
inc
pop
or
xor
fs
mov
cmp
xchg
int3
xor
pop
outsb
pop
pop
lds
xchg
add
dec
adc
fcmove
jle
mov
ja
leave
mov
fcompl
add
dec
jle
shl
rclb
and
xchg
mov
sub
lahf
and
adc
das
fwait
dec
adcb
popf
mov
insb
out
insl
data16
xchg
fcomps
mov
mov
scas
daa
es
pop
inc
stc
sbb
imul
int
in
loope
adc
es
sbb
ret
lret
add
jl
aad
jnp
pop
repnz
mov
push
push
ds
mov
xor
dec
loop
dec
mov
mov
push
insb
xchg
pop
and
adc
pop
xor
cmp
push
dec
aaa
xchg
xor
and
inc
jge
sub
pop
and
jp
push
inc
pop
loop
push
cmp
pop
frstor
std
xor
outsl
fsts
xor
icebp
ss
xor
shl
fildll
xor
xchg
shll
jb
add
pushf
repnz
out
push
movsb
push
dec
push
jg
movsl
xchg
cli
inc
in
cwtl
addr16
pop
xchg
or
xor
sti
mov
scas
xor
jge
aas
fbld
cmpb
sub
pop
mov
out
jl
adc
popf
sbbb
test
fidivrs
pusha
nop
jmp
fidivs
imul
mov
pop
jno
scas
xlat
push
inc
xor
outsl
and
std
mov
xlat
lret
loopne
add
adc
jp
jle
adcb
cmpsb
js
xor
sub
push
insl
xchg
andb
hlt
stos
imul
xchg
jl
sub
cmp
pop
scas
inc
add
idivb
imul
push
mov
push
adc
jp
cltd
movsl
jnp
les
stos
and
ljmp
test
jbe
sti
pop
clc
xchg
and
dec
ja
int
mov
mov
dec
jg
test
push
pop
mov
sbb
dec
imul
insb
xor
shlb
or
lret
ds
enter
jnp
iret
fsubrs
jno
fadds
sbbb
sub
pushf
popf
sbb
fsts
or
adc
imul
mov
mov
int
je
jmp
sbb
cmp
pop
xchg
push
das
cmpl
or
inc
adc
iret
xorb
sahf
rclb
andl
pop
mov
ds
cmpb
shrl
or
mov
cmpl
outsl
stos
neg
sbbl
dec
gs
sbb
xchg
pop
or
outsb
cmpsb
fldl
sahf
out
jmp
or
lret
mov
fistl
xchg
pop
xor
jmp
inc
dec
adc
xor
sbb
sbb
bound
sub
xchg
nop
popa
adc
dec
ss
adc
cltd
xchg
jle
divb
xor
mov
pop
shll
inc
mov
inc
mov
adc
pop
popf
shll
popf
add
pop
arpl
in
mov
mov
mov
imul
pop
pop
cmp
jnp
ret
aas
notb
into
mov
rcr
xlat
sahf
bound
push
shlb
cmp
shlb
or
mov
cmp
hlt
sub
inc
add
cmp
mov
outsl
push
fwait
insb
mov
test
cmp
mov
loop
in
dec
enter
lods
ret
sahf
inc
mov
sbb
add
add
sbb
mov
mov
xor
xchg
decl
add
lock
adc
sub
fadds
dec
adc
shl
xchg
inc
push
iret
mov
and
test
mov
and
fsubs
icebp
and
lret
aas
sbb
enter
adcl
mov
sbb
inc
push
dec
or
dec
sbb
fwait
dec
imul
cmp
jbe
ljmp
neg
push
cmp
push
mov
inc
notl
cltd
or
not
xchg
mov
mov
cmp
addl
pop
jg
sahf
push
inc
es
pop
adc
clc
lock
mov
mov
pop
imul
add
mov
out
adc
sub
cmp
stc
dec
test
adc
jge
push
sahf
test
push
sbb
out
inc
dec
xchg
adc
les
sub
out
cmc
jb
add
adc
dec
aad
push
xchg
adc
std
pop
mov
cmp
add
outsl
lds
dec
bnd
adc
mov
popf
je
js
jns
arpl
loop
sbb
push
outsl
imul
aas
shrl
jecxz
dec
fdivs
cli
fwait
adc
push
inc
in
sti
dec
dec
ret
cmpsl
xor
outsb
loope
hlt
inc
or
mov
or
fs
jae
add
cmc
mov
mov
imul
add
out
inc
dec
push
ljmp
int3
cmp
aaa
cmpb
push
sub
xchg
daa
pushf
inc
mov
xor
ret
adc
pop
insb
and
sub
lock
jl
test
stos
mov
xchg
test
cmp
movsl
sub
frstpm(287
push
add
clc
xchg
dec
sub
int3
sub
inc
in
pop
jne
lds
aam
das
mov
mov
mov
out
cli
repnz
pop
push
push
cmp
jnp
push
sub
jle
pminub
rcll
das
mov
mov
mov
xchg
popa
cli
movsb
andb
fs
push
fldcw
imul
iret
mov
xor
push
arpl
in
xchg
pop
mov
ja
test
inc
pop
mov
sbb
popf
mov
mov
loopne
sti
ret
mov
inc
cmp
addb
adc
inc
or
and
or
dec
jae
push
stc
pop
filds
xchg
popa
fadds
mov
or
xchg
sbb
fiadds
pop
imul
sbb
aas
xchg
mov
pop
incl
xchg
pop
jp
sub
sub
cld
jb
clc
out
sub
jne
inc
pop
adc
pop
cmp
stos
inc
mov
add
addb
fnstenv
dec
lret
push
adc
lret
add
push
mov
or
cmp
inc
sub
inc
cmp
popa
adc
add
sub
dec
mov
ljmp
das
orl
adc
loope
sub
xchg
xchg
int
lods
mov
sbb
push
sbb
mov
push
nop
adc
push
push
adc
inc
add
mov
icebp
xchg
in
dec
mov
push
add
clc
jge
and
adc
test
pop
mov
les
je
nop
out
pop
inc
std
sbb
scas
test
test
jo
jns
sarl
popf
into
xchg
push
push
and
mov
out
push
or
jg
test
mov
push
cld
pop
jne
pop
in
ss
out
int
sub
xchg
test
or
sub
insb
dec
sub
movsl
outsl
cmc
mov
bound
ja
xchg
add
adc
xchg
dec
ret
pop
xor
mov
fs
outsl
push
stos
shlb
dec
jnp
daa
testb
andl
jg
mov
mov
cs
dec
je
sti
lret
stc
sti
loopne
roll
test
rorl
mov
pop
pop
mov
test
dec
xor
mov
mov
xchg
cmp
aaa
jns
repz
scas
mov
iret
aaa
cli
das
in
or
xchg
push
push
pop
or
adc
mov
sbb
push
mov
negl
sahf
ds
mov
fwait
push
es
sub
scas
jbe
jnp
xlat
es
lahf
xor
gs
shr
int
scas
in
scas
xchg
and
lahf
data16
cmc
scas
xorb
lcall
ds
jmp
pusha
sbb
adc
or
sahf
mov
xor
movsl
mov
stc
jne
or
lcall
mov
push
mov
sub
stos
inc
dec
mov
push
add
pop
lea
orl
jp
movsb
adc
sbb
subl
sahf
mov
push
inc
pushf
push
adc
js
mov
jbe
out
mov
rorb
or
daa
sub
xor
push
sub
and
repnz
mov
jno
mov
scas
pop
cli
fcmovnbe
clc
add
cli
and
or
pop
fwait
mov
inc
push
mov
mov
rcrl
cmp
loope
mov
repz
jg
cmp
mov
jecxz
mov
lret
cmp
jmp
imul
test
mov
lahf
mov
sub
in
cmp
addb
movntq
cmc
and
add
inc
pop
xor
loop
fimuls
testl
popf
cwtl
pop
out
in
mov
cmpsb
ror
jmp
or
push
mov
adc
in
inc
pop
mov
mov
and
xchg
sti
adc
sub
cmp
mov
mov
rolb
pop
int
mov
mov
xorl
push
test
movsb
sbb
fistpll
ja
jns
mov
sahf
push
repnz
dec
mov
bound
add
jae
mov
cmpsl
test
adc
mov
adc
mov
popa
clc
adc
sub
in
movsb
cmp
ret
arpl
xor
push
lds
jbe
add
leave
xorb
sbb
clc
movsl
enter
loopne
loope
lea
add
sbb
mov
xchg
pop
and
xor
cmp
add
outsb
icebp
test
pop
je
mov
adc
mov
pop
out
popa
lods
add
mov
push
arpl
lds
je
add
push
jno
mov
leave
out
cmp
out
mov
dec
xor
add
fcmovbe
arpl
mov
in
bound
lret
pop
daa
in
loopw
mov
jb
ret
or
lret
adc
data16
iret
adc
test
test
jecxz
inc
or
lret
out
push
inc
inc
test
ret
fcmovne
rcr
fwait
adc
xchg
ja
and
repz
mov
decl
push
cmc
test
scas
pop
xchg
jbe
pop
stos
ficoms
inc
xchg
push
push
aad
push
push
arpl
lcall
fmulp
sbb
mov
and
imul
shlb
and
popf
clc
int
lock
cmpsb
in
adc
xchg
push
cmp
pop
ds
xlat
push
xlat
and
stc
dec
imul
and
lahf
pusha
push
sbb
mov
lods
mov
push
inc
testb
bound
inc
pop
or
test
movsb
or
stc
mov
xchg
xchg
lcall
push
or
jne
scas
imul
jmp
fisubs
outsb
loop
out
mov
cmc
xchg
popa
outsb
mov
pextrw
push
mov
enter
out
push
test
sbb
add
or
aam
dec
sbb
in
adc
or
jo
stc
adc
jbe
jge
xchg
cltd
jle
cmpsl
aaa
or
push
xchg
fistl
sbb
ja
pop
mov
adc
lds
jmp
xchg
inc
cli
sbb
cmp
push
cwtl
pop
xor
in
push
add
insl
jl
stc
push
mov
add
mov
mov
sbb
mov
popa
push
lret
fwait
pop
jnp
pop
stos
fisttps
sub
push
cli
insb
adc
add
xchg
hlt
dec
lock
icebp
aas
movsb
dec
es
jle
add
lds
cmp
xor
in
nop
cmp
inc
cld
adcb
lea
rcr
push
adc
rcrb
mov
into
pinsrw
jg
outsl
adc
mov
stos
repz
insl
cmpl
stos
mov
add
in
cmp
adc
in
sahf
bound
aaa
inc
add
pop
mov
fcmovb
daa
cmp
fcomps
inc
mov
pop
repnz
lods
test
ficoml
push
adc
dec
fldt
aam
jp
cmc
jo
dec
sbb
push
adc
dec
pop
adc
and
mov
rcl
pop
rcrl
sub
dec
inc
inc
dec
fnstenv
sub
outsb
sbb
in
mov
add
fwait
pop
sbb
out
mov
ss
pop
sub
jo
icebp
jle
ja
shlb
out
push
and
pop
jge
call
jnp
dec
ljmp
jne
es
xlat
sbb
add
push
sub
sarb
cmpsl
xor
jmp
xor
mov
xchg
dec
push
mov
movsb
outsl
xchg
mov
mov
xchg
fstp
xor
insl
push
int
jne
outsb
shr
sub
sti
jmp
or
jmp
inc
cmpsl
mov
dec
and
mov
test
lahf
in
lods
mov
in
xor
mov
loopne
int3
stos
lea
xchg
fwait
mov
pop
movsb
std
cmpsb
or
mov
stos
js
xor
jo
or
lret
or
xchg
out
push
icebp
es
sub
fimuls
stos
jns
sub
testb
dec
sbb
push
push
ljmp
shr
push
inc
xor
in
mov
out
add
or
sub
xchg
adc
push
nop
mov
xor
jne
pop
bound
sbb
std
mov
add
cmp
ds
adc
push
push
jp
test
pop
xor
or
ret
shl
movsl
lret
fistpll
xchg
call
mov
loope
sbb
adc
clc
lea
push
lock
mov
pop
sti
xorl
loope
inc
cmp
mov
jp
push
mov
ret
push
icebp
jnp
mov
maskmovq
notl
fsubl
mov
std
mov
or
daa
iret
dec
pop
dec
add
data16
sarl
or
arpl
xor
and
sbb
out
enter
push
in
pop
pop
fwait
adc
mov
dec
scas
adc
les
add
mov
sarl
sti
mov
dec
xchg
inc
roll
sbb
push
dec
fs
cmp
adc
pop
mov
push
adc
fwait
insb
xor
lds
les
mov
addr16
dec
cmp
daa
andb
sub
inc
xchg
jge
dec
pop
repnz
stos
adc
pop
sub
ret
testl
fs
pop
leave
clc
jp
push
push
cwtl
mov
loope
std
out
xor
or
leave
xchg
aam
dec
outsl
test
ljmp
imul
lret
jno
pop
out
push
mov
lret
adc
push
sbb
mov
push
insl
and
imul
nop
mov
sbb
add
adc
insb
or
sub
sbb
nop
inc
mov
push
cmp
in
pop
rclb
sub
cwtl
jb
adc
imul
cltd
add
daa
mov
movsb
je
jb
out
lret
add
push
push
pushf
sub
mov
sub
or
add
mov
sbb
dec
mov
xor
sub
sbb
sub
adc
cltd
lds
sub
scas
sbb
xchg
mov
aaa
gs
scas
lock
sbb
in
cld
shll
fidivrl
jle
cs
mov
cmpsb
sub
xor
in
push
into
jae
push
pop
insb
stos
add
mov
cmp
cwtl
pop
rorl
fmul
dec
xchg
inc
adc
into
in
jg
or
add
jle
aaa
in
pop
add
pop
mov
xchg
adc
cmpsb
and
arpl
sbb
imul
lea
mov
ret
lods
cmp
add
add
add
shl
or
xor
orb
pop
aas
notb
daa
dec
insl
mov
inc
push
push
out
jnp
fwait
sar
fcompl
mull
adc
mov
jle
fsubs
hlt
inc
push
inc
push
enter
or
and
mov
or
dec
scas
je
adc
mov
cmp
or
sbbl
or
jno
sbb
or
cmp
rolb
fisttpl
cmc
pushf
adc
add
jb
sti
jecxz
dec
and
enter
fidivrl
sti
xorb
push
inc
data16
sub
jp
lret
jb
mov
insb
jne
clc
mov
sarl
add
pop
iret
xchg
or
stos
xchg
out
mov
insb
add
enter
pop
mov
xor
xor
cmc
enter
and
out
sbb
xchg
cmc
and
cmp
lret
xchg
in
push
mov
mov
jmp
and
aas
xorl
add
dec
jp
out
rcr
xor
jb
or
enter
dec
lea
int3
or
lret
sbb
hlt
add
dec
ret
xchg
fldl
scas
mov
lods
or
jle
inc
test
xchg
push
push
loopne
nop
fcompl
cmp
loopne
test
inc
mov
dec
push
jne
lea
and
addl
iret
pushf
sti
xchg
popf
adc
jge
iret
jae
or
dec
dec
and
cmp
pop
outsl
mov
stc
pop
mov
out
push
scas
aaa
xlat
cwtl
fstpl
cmp
call
in
xchg
sbb
into
lods
insl
cmp
mov
fsubl
mov
scas
dec
fistps
mov
mov
in
std
repz
bswap
pop
leave
loop
fwait
push
cs
insb
sbb
loopne
inc
out
repz
mov
aas
int
push
aad
mov
inc
xchg
push
sub
sbb
mov
scas
push
fcoms
int3
adc
cmp
or
mov
fmuls
outsb
jg
ljmp
cld
jp
fadds
mov
rcl
shlb
clc
adc
out
int
push
shll
sub
inc
and
stos
imul
pop
inc
mov
add
sub
bound
dec
loopne
lahf
loop
andl
jge
mov
mov
lret
enter
ss
mov
jecxz
mov
mov
mov
nop
sti
cmp
es
adc
fwait
in
cmp
cmpsb
xor
pop
adc
in
rorl
dec
inc
out
mov
mov
mov
xchg
inc
idivb
lret
cmp
sahf
jno
xlat
cld
pushf
xchg
out
lcall
or
xchg
divl
xor
push
loopne
and
jp
jecxz
and
testl
jns
hlt
xchg
push
xor
faddl
lock
adc
push
int3
sub
jnp
cmp
push
jb
movl
jne
mov
lret
cli
imulb
idivl
adc
xor
push
ljmp
in
jne
call
mov
xor
or
mov
mov
sbbb
add
mov
sbb
xor
cmp
mov
xchg
mov
aaa
mov
or
mov
inc
mov
adc
shl
xchg
lcall
or
and
call
push
pop
jo
notl
jp
cmp
aas
bound
aaa
push
mov
fwait
push
mov
pop
cltd
es
mov
shlb
sub
jp
cs
out
mov
sbb
mov
pop
insb
call
jl
cmp
jmp
test
fcoml
mov
rcl
mov
jl
pop
pop
dec
xor
and
pusha
es
stc
mov
xchg
jp
test
mov
stc
inc
gs
mov
dec
mov
push
inc
fisubrl
dec
data16
rcrb
sbb
pusha
hlt
lret
cmpsl
rclb
adc
ljmp
bound
ficoms
rolb
jns
leave
ss
mov
mov
ds
jmp
mov
outsl
mov
jne
daa
xor
out
push
ss
into
xor
pop
sbb
xchg
xlat
pushf
mov
ljmp
lea
icebp
add
dec
add
js
insb
pusha
lods
std
pop
arpl
mov
adc
jnp
ret
sub
mov
and
loope
or
je
xchg
cltd
sub
or
dec
lret
test
gs
ret
sbb
aad
rorl
pop
sti
pop
push
pop
lds
jmp
movb
push
mov
insl
das
aaa
pop
subb
pusha
cmc
xchg
outsl
xor
notl
es
pop
add
adc
mov
add
pop
cltd
mov
pop
out
es
cli
xor
mov
push
xlat
mov
jmp
cwtl
xor
mov
adc
dec
bts
leave
sub
mov
dec
imul
cmp
dec
pop
fwait
aaa
out
mov
dec
movsb
xor
adc
push
pop
andb
shll
pushf
mov
das
adc
cmpsl
xlat
in
sti
mov
jns
aas
dec
cmp
push
adc
inc
mov
imul
adc
xor
dec
orl
test
sub
and
cmpsl
sbb
sub
sbb
jb
cld
lahf
add
push
inc
mov
imul
cmc
fld
mov
pop
loop
jnp
scas
test
adc
inc
sbb
mov
dec
in
daa
jne
pop
cli
cmp
xchg
pop
into
and
sbb
pop
jp
orl
dec
lret
rorl
mov
movsb
jno
cwtl
in
or
jmp
adc
mov
cmp
sub
je
lret
movsb
lea
ret
nopl
mov
repnz
inc
outsl
lea
mov
pop
mov
icebp
lds
insl
in
push
xchg
daa
and
xor
and
mov
movsl
jge
repnz
js
mov
sbb
and
dec
xchg
movsl
fisttps
lods
scas
cmpsl
cmpb
jmp
mov
jg
xor
notl
add
push
fmul
and
xor
sbb
inc
sub
in
jl
mov
sub
rorb
mov
push
push
ret
int
cmp
idivl
scas
les
mov
sbb
je
push
pop
jmp
xchg
and
lods
scas
mov
fisttps
and
outsb
jle
psubusb
stos
daa
addl
fidivl
arpl
cmp
loopne
sbb
mov
cs
inc
aaa
out
cmpsl
lock
sub
test
cli
or
jp
mov
test
fdivrp
ret
xor
adc
pop
xor
and
dec
xor
icebp
and
shlb
ljmp
dec
dec
jle
les
adcl
cmp
scas
das
fadd
jge
int3
sub
orb
dec
xor
jge
repz
lods
ret
fbstp
sub
je
mov
gs
aas
aam
enter
andl
jno
fildll
bound
inc
inc
nop
mov
hlt
iret
mov
aaa
push
jbe
imul
pushf
ja
mov
divb
mov
and
rorb
mov
ja
xor
hlt
push
push
pop
orl
dec
xchg
daa
enter
pop
cli
out
call
repnz
mull
dec
loopne
push
sbb
push
fists
pop
jb
shll
test
xchg
jo
mov
test
fs
inc
mov
push
stc
aaa
dec
icebp
sbb
and
add
pop
xchg
test
in
pusha
ds
sbb
inc
add
sub
dec
push
aam
cli
or
stos
or
mov
outsb
sub
aas
sub
sbb
sarb
fwait
aas
scas
inc
mov
in
iret
sub
dec
test
scas
jecxz
dec
call
insl
fwait
std
in
es
sub
mov
push
mov
in
in
es
sbb
fstl
xchg
shl
mov
in
jno
add
sub
push
ds
aas
out
scas
or
rclb
fistl
and
push
mov
mov
outsb
arpl
cmp
imul
jae
or
out
sbb
xor
das
pop
push
xor
enter
sti
jno
adc
push
xor
sahf
dec
les
mov
xchg
push
and
sbb
aad
mov
add
adc
cmp
fmull
push
xchg
xor
push
aam
aaa
stos
popf
sub
pop
sbb
mov
insl
dec
fxam
loopne
stc
cld
xchg
adc
dec
rol
ljmp
cmp
xor
clc
push
pop
adc
rorb
and
cltd
pop
popa
push
stos
enter
cmp
fwait
inc
sbb
sub
daa
sub
adc
pop
fcoms
popf
xchg
ret
jp
pusha
pop
jnp
push
and
sub
jne
test
mov
adc
imul
dec
cmpsl
pop
pop
insb
loopne
sub
arpl
imul
pop
mov
mov
push
dec
gs
ja
fwait
cmp
push
movb
sbb
add
pop
xchg
mov
lret
lods
stos
jo
dec
lret
push
cmp
dec
mov
xchg
enter
lock
in
xlat
sbb
mov
or
dec
lods
dec
out
add
pop
test
and
xchg
jge
icebp
push
sub
dec
popf
sbb
push
jge
movsb
iret
dec
ja
pop
mov
jbe
test
pop
shlb
and
inc
cmp
aas
jmp
lock
sub
sti
imul
jmp
fs
aas
or
gs
add
lret
fcomps
push
sahf
inc
loop
sbb
sbbb
fnsave
inc
fiaddl
inc
out
adc
sbb
fisubl
fidivrl
add
ljmp
loope
popf
cs
adc
xlat
cmp
lods
add
repnz
mov
pop
ljmp
push
xchg
mov
sub
bound
in
sbbb
fidivs
sub
lcall
shll
test
data16
mov
jb
test
lret
pop
mov
xor
and
test
xorl
lret
loopne
lret
lret
dec
cld
imul
imul
sub
fdivrl
and
xlat
adc
fs
fwait
insb
sbb
cs
mov
sub
pminub
mov
xor
cmp
cltd
repnz
push
sahf
inc
and
in
dec
push
mov
or
test
cli
mov
sub
faddl
es
fiadds
lock
dec
insb
cmp
imull
fwait
xchg
and
sub
inc
mov
mov
scas
popf
mov
mov
sbb
dec
lret
pop
sti
xchg
fcomps
jle
mov
imul
and
in
dec
mov
leave
jno
stos
mov
add
and
mov
cmp
xchg
mov
and
test
aam
or
add
xchg
cs
ficompl
jo
pop
dec
pop
int3
xchg
jmp
xlat
xor
push
and
push
or
mov
rcrb
mov
cmpsl
andl
push
nop
xchg
pop
sbb
push
pop
loop
mov
insb
push
sbb
jg
outsl
and
push
cmp
pop
lret
jbe
subl
and
aas
fs
mov
out
sub
lods
jmp
pop
xorb
lcall
add
fisttpll
adc
sub
cmp
adc
inc
or
xlat
xor
aam
lods
cmpsb
adc
sarb
mov
jno
popa
mov
push
icebp
rclb
xor
add
clc
add
orb
arpl
and
dec
xlat
sbb
mov
mov
xor
adc
mov
repnz
sbbl
cmpsb
es
lret
repnz
lock
arpl
cmp
cmp
insl
mov
mov
imul
or
and
pop
inc
cld
and
addr16
inc
xchg
adc
negb
pushf
sub
das
cmp
ret
cld
xor
int
jne
ja
cmpsl
pop
fisttpll
mov
out
out
lock
lods
xchg
rorl
loopne
mov
mov
je
jae
dec
cmp
add
xchg
sbb
add
pop
hlt
fildl
scas
stos
mov
cmpsl
adc
sbb
mov
loopne
mov
lods
and
fwait
and
mov
in
leave
cmpb
out
cmp
cmp
or
xor
push
in
sub
pushl
sub
pushl
lret
xadd
test
loop
add
mov
or
mov
jne
loopne
cld
cmp
and
xchg
stos
loopne
cmp
daa
pop
cmpsb
pushf
and
or
lods
mov
jmp
push
imul
push
fld
xlat
int
xorb
xor
stos
inc
jecxz
ret
sbb
fnstcw
ss
jb
or
notl
in
pop
push
movsl
add
es
cli
setnp
out
popf
insl
adc
pop
cmpsl
add
int3
enter
dec
adc
js
mov
inc
daa
push
sahf
mov
dec
xchg
sbb
mov
push
add
movsl
test
fstps
out
sub
repz
or
pop
mov
iret
jp
add
xor
xlat
or
sahf
jle
enter
xor
sub
jae
cmp
mov
ljmp
lods
mov
dec
lds
push
lods
fs
fmull
dec
pop
sbb
data16
pop
cmp
mov
cmpb
sbb
mov
and
outsl
lods
lahf
test
jl
cmpb
repnz
adc
mov
cmp
fdivs
dec
cmp
pop
jmp
cltd
pop
mov
aam
aaa
xlat
lea
rol
rcr
out
and
das
push
les
std
das
push
push
xor
or
adc
xchg
stos
enter
pop
adc
rcll
jl
push
fwait
cmpsl
out
dec
mov
ret
xor
shll
movsl
xchg
mov
fisubrs
and
popa
fisubs
pop
pop
sub
outsl
imul
add
in
push
lds
imul
jnp
iret
dec
lds
push
or
adc
icebp
jns
pop
addb
mov
in
push
push
orb
cmpsl
int3
nop
aad
sbb
test
into
loopne
xor
shl
xor
cltd
inc
xchg
int3
jo
inc
mov
jnp
aas
mov
mov
ds
imul
add
test
mov
ret
pop
pop
mov
ja
mov
cmpsl
int
or
jnp
sbb
mov
ss
addb
sti
sti
cs
push
pop
xor
ret
in
pop
pop
add
jp
pop
mov
mov
lret
gs
cld
mov
aas
pop
das
mov
xchg
call
daa
pop
and
ret
scas
nop
cli
adc
mov
mov
xlat
dec
in
mov
mov
enter
pop
dec
push
sbbb
das
mov
cmpsb
mov
xor
fsubrs
movsb
das
xlat
cmp
cld
rcrb
xchg
jbe
sbbl
int3
rclb
push
sbb
inc
int
test
sarb
jmp
sub
in
andl
mov
out
subb
and
lods
xchg
sbbl
bound
repnz
pop
stos
add
mov
sbb
fistpl
out
and
jbe
jg
and
sub
mov
mov
fwait
les
in
test
decl
cmp
sbb
sbb
testl
jecxz
outsb
test
jne
xchg
xor
loope
mov
push
fdiv
jle
mov
les
stos
movsl
mov
cli
dec
xchg
xchg
stc
xchg
loopne
xchg
jge
add
pop
ret
xor
inc
mov
sti
scas
mov
mov
push
cmp
dec
loop
icebp
aaa
roll
jae
xchg
cmc
je
inc
mov
ret
mov
mov
push
push
sub
cmc
mov
mov
cs
mov
bt
pushw
mov
sub
pop
or
call
xor
sbb
xchg
push
sub
xchg
cmp
inc
mov
leave
cltd
mov
push
bound
add
cmp
jbe
sub
cmp
pop
mov
scas
xor
orl
pushf
gs
mulb
push
pop
mov
pop
jle
xor
lcall
mov
mov
dec
mov
out
jnp
and
pop
lahf
push
pcmpgtw
adc
cld
or
push
push
movsl
pop
xor
sub
sbb
xchg
and
push
fiadds
cmp
and
iret
mov
cltd
scas
sbb
rcll
or
loope
je
dec
hlt
mov
cmp
cmc
ret
pop
lar
dec
cmp
jg,pt
daa
xor
shlb
xor
mov
pop
icebp
cmpsb
movsl
iret
and
mov
enter
push
add
scas
mov
adc
jge
push
add
mov
sti
mov
xor
mov
pop
push
insl
sbb
lahf
jge
lcall
xor
pop
in
cmp
sub
repz
es
adcl
pop
test
mov
jns
mov
clc
push
dec
dec
cwtl
insb
inc
sbb
ja
mov
xchg
pop
adc
orb
movsb
cli
sti
shrb
xchg
mov
jnp
xor
adc
insl
dec
add
mov
cmpsb
aas
inc
bound
test
adc
jp
enter
xorl
and
test
dec
mov
fistps
fisubrl
inc
out
sbb
popf
aas
ficompl
dec
sbb
rcrb
push
int
mov
sbbl
int
fistl
imulb
xchg
cmpsb
cwtl
dec
xchg
pop
mov
test
or
cltd
stc
sub
lcall
cld
and
loopne
inc
in
inc
xchg
adc
inc
test
push
or
or
lds
push
je
add
push
mov
sub
inc
pop
push
xchg
mov
aam
addr16
and
popa
push
lret
imul
nop
mov
clc
in
test
lock
mov
sub
cli
or
xor
mov
andb
rclb
jp
mov
lods
shll
outsb
inc
cltd
mov
das
imul
fs
push
stos
and
cmp
int
xchg
add
flds
dec
sub
fstl
push
xchg
xchg
pop
cwtl
test
cmp
pop
sbb
mov
sbb
xor
in
das
out
out
mov
pusha
mov
mov
scas
xchg
mov
mov
sbb
fsubrs
stc
xor
ljmp
ret
jp
dec
stc
fidivs
loopne
cmpsb
xor
mov
xor
or
outsb
cmp
adc
loop
dec
jns
sbb
stos
lcall
test
mov
loop
or
add
hlt
icebp
dec
and
inc
push
dec
sbb
dec
aad
sbb
xorb
lea
les
mov
mov
cld
mov
nop
test
fildll
lea
insl
or
rcrb
push
andb
popa
lahf
pop
inc
jmp
mov
sahf
push
rol
jp
pop
cmpsb
mov
xor
pop
jne
aam
pusha
cmp
mov
inc
or
call
vmulss
scas
sbb
lret
and
ja
icebp
jbe
pop
or
out
sbb
pop
popf
inc
mov
mov
push
bound
in
pop
xor
pusha
stos
push
cmp
cmpsb
cli
xchg
ret
mov
push
xchg
js
inc
cwtl
sti
xchg
fdivl
cli
in
add
hlt
jecxz
dec
roll
nop
jle
andl
xchg
sub
repz
mov
out
imul
sti
jge
sbb
arpl
fcomps
sbb
rorb
or
push
adc
lods
inc
xchg
std
shlb
shlb
xchg
sbb
inc
js
frstor
ss
pop
int3
arpl
cmpl
fistl
ss
and
mov
cmc
mov
filds
les
inc
mov
dec
sahf
test
pop
into
pop
xchg
lcall
jecxz
push
xchg
or
mov
or
insl
xchg
dec
cmpsl
ret
sub
fcom
out
xchg
or
xor
loop
gs
filds
into
or
dec
jmp
stos
mov
cld
imul
add
cli
jle
scas
xchg
sub
add
shlb
jnp
cvtdq2ps
and
sarb
adc
aas
lret
incl
dec
gs
mov
incb
xor
push
mov
mov
mov
test
pop
test
scas
cmp
mov
mov
enter
aam
mov
andl
jmp
fs
jnp
xor
stos
pusha
mov
add
fcmovu
js
mov
add
inc
gs
pcmpeqd
stos
out
pop
cmc
mov
xchg
pop
setle
push
cmp
xchg
dec
xchg
cmpsb
jmp
inc
mov
cvtps2pi
repnz
mov
addl
push
ss
sbb
insb
pop
jo
cmp
clc
addr16
imul
and
cmp
in
repz
mov
push
lcall
pslld
push
loop
mov
gs
xchg
xor
sub
nop
in
insb
dec
jbe
icebp
adc
data16
out
add
mov
ret
sub
fildl
stc
cmc
hlt
jne
dec
fistpl
cmp
cmp
push
out
dec
fidivs
arpl
jnp
shll
dec
dec
adc
pop
sbb
dec
out
inc
mov
mov
insb
jnp
scas
testb
and
sub
jbe
cmp
aaa
fidivrl
inc
sbb
mov
cmpsb
movl
xchg
and
icebp
rcr
cmp
rcrl
xor
jno
and
mov
sbb
cmp
popf
xchg
loope
in
adc
pop
cwtl
divb
cltd
out
jge
hlt
push
cmp
push
popa
or
rcrb
pusha
jmp
lret
fs
sbb
jp
xchg
test
xor
push
aad
outsb
leave
test
fidivrs
cld
shlb
mov
push
repz
sbb
mov
bound
int
sbb
sbb
in
push
add
jbe
daa
lret
pop
or
push
xor
cmp
mov
dec
ljmp
lea
cmp
aad
xchg
outsb
test
push
stos
ficoms
nop
sarb
or
push
iret
or
cmpb
inc
in
xchg
inc
inc
sbb
jge
xchg
test
repnz
or
int3
adc
xorl
inc
lods
mov
inc
andb
cmp
les
clc
xchg
adc
fcmovnbe
pop
jecxz
push
push
into
ja
sub
xchg
pop
mov
cli
push
mov
outsl
xor
mov
jle
sbb
bound
push
loope
pushw
mov
cld
sarb
cmp
jl
add
bound
mov
xchg
dec
push
ljmp
cmp
shl
sbb
mov
cmp
imul
fisubl
mov
mov
out
pop
popa
std
sub
mov
popa
dec
out
adc
xchg
cli
push
out
dec
sbbb
mov
sbb
push
cmp
pusha
mov
fs
fbld
pushf
pop
ficoms
inc
pushf
dec
xchg
sbb
call
jno
cli
rorb
pop
sbbb
jmp
mov
dec
mov
adc
fcompl
or
sbb
int
sti
aam
fwait
cmp
mov
test
jb
mov
stos
jecxz
rcr
or
out
sub
dec
mov
or
sti
out
lret
fildl
ljmp
outsl
ja
fistl
push
lods
jns
adc
and
stos
fucom
inc
mov
data16
inc
push
out
pop
pop
popa
cltd
les
add
loope
sti
and
add
xchg
fldcw
jne
push
iret
loop
icebp
cltd
orb
arpl
loop
add
fs
pop
inc
or
xchg
clc
xor
dec
cmp
cwtl
sub
dec
jno
add
aaa
aas
jle
lea
fnstsw
xchg
cmp
mov
test
mov
jo
push
mov
pop
pop
cli
int
mov
push
push
jge
ret
test
ja
push
cmpsl
pop
shll
jae
sbb
xchg
xchg
lea
mov
and
jp
fs
or
mov
xor
dec
sarl
loop
pop
and
or
mov
push
int3
push
in
outsl
sbb
int3
pop
mov
fcmovnu
rcll
mov
dec
mov
add
mov
lret
bound
popf
adc
mov
fadds
movsb
lahf
xchg
out
ja
ror
pop
adc
jns
and
shlb
mov
inc
out
cltd
mov
stc
push
rorl
or
sbb
mov
mov
and
stc
sti
jecxz
subb
mov
stos
inc
movsl
inc
test
cmp
and
mov
fsubp
fldcw
add
sub
scas
lock
mov
test
mov
icebp
jl
std
pop
add
adc
arpl
push
jmp
dec
sbb
xor
in
mov
push
mov
lods
dec
adc
mov
aaa
in
hlt
mull
orb
cltd
and
inc
mov
sbb
sti
aas
negb
and
stos
sbb
out
insl
xchg
fstl
test
sbb
scas
pop
mov
call
ljmp
bound
out
ja
bound
mov
lock
mov
leave
in
imul
sbb
push
push
movsb
lods
sbb
inc
inc
mov
dec
mov
lds
lret
jo
mov
cltd
push
jge
loop
jb
cmp
bnd
sbb
and
sarl
mov
xor
popa
fucom
inc
mov
mov
mov
pushf
test
or
xchg
and
pop
and
xlat
add
dec
out
push
in
inc
icebp
dec
fidivs
sbb
add
lret
stos
jge
repnz
cwtl
lods
adc
gs
lret
and
add
insl
pusha
cmp
insl
xchg
push
push
xor
lcall
mov
fstps
mov
and
adc
ret
sbb
lcall
dec
pand
icebp
xchg
push
pop
dec
xchg
sahf
enter
rcll
add
push
xor
fistl
and
clc
push
sahf
mov
jns
pop
xchg
int
insb
add
sti
fnstcw
xchg
hlt
out
testb
in
jo
imul
sbb
js
mov
in
push
in
aaa
arpl
aam
sub
cmp
movsl
jle
mov
pop
pop
ss
add
inc
pop
sub
out
or
je
mov
out
pushf
jle
fcmovu
lea
pop
xlat
or
sub
mov
sub
inc
es
mov
pushf
or
imul
repz
add
out
dec
test
or
push
xor
insb
repnz
std
adc
xchg
mov
ss
insl
and
add
int3
sub
lahf
mov
out
fsubrl
popa
rclb
aad
sub
xchg
sub
gs
xchg
add
sbb
sbb
aam
push
sbb
adc
jmp
cs
add
mov
sub
inc
scas
fldenv
pop
fwait
test
dec
lahf
push
xchg
sub
mov
imulb
mov
or
xchg
add
inc
mov
fmulp
addr16
bound
sbb
and
pop
sbb
xlat
cmp
mov
loopne
imul
and
and
xlat
xor
or
hlt
mov
adc
test
lret
xchg
cmp
bound
and
xchg
out
dec
sti
cwtl
incb
shrl
push
cmp
nop
inc
push
out
test
add
push
inc
leave
and
ret
push
lcall
pop
sbb
mov
mov
push
in
cmpl
jge
and
mov
ja
xcrypt-cfb
cmpsl
loop
and
movl
mov
lods
ljmp
into
adc
inc
dec
push
cmp
push
mov
adc
data16
cmc
cmpsl
push
mov
adc
dec
ret
mov
mov
adc
les
sub
js
jno
mov
mov
jl
inc
adc
fdivrl
in
mov
mov
outsl
cmp
inc
mov
ljmp
jbe
cmp
jg
ds
cwtl
mov
xor
sbb
push
lret
ss
mov
mov
sub
in
dec
lret
loope
pushf
or
hlt
xchg
iret
out
or
jnp
sub
popf
sar
dec
push
xchg
pop
cmpsl
jmp
popf
jo
fwait
andb
outsb
ds
jns
mulb
adc
cmpsb
jmp
or
jns
ja
test
imul
mov
nop
mov
insl
filds
pop
std
lahf
stos
pop
push
cmpl
scas
fs
clc
test
adc
fsubrl
jb
cmp
inc
cwtl
shlb
dec
cmc
les
pushl
pop
enter
fidivrs
sub
packuswb
icebp
imul
jl
mov
xor
fsubrl
arpl
xchg
pop
mov
loop
ljmp
push
pop
test
mov
fistpl
add
adc
fnstcw
dec
cmpsb
sbb
adc
sti
out
sub
mov
sbb
sti
sub
ret
cltd
pop
add
dec
mov
repz
test
sub
mov
test
and
mov
iret
mov
les
inc
adc
jno
xchg
jmp
push
or
pop
pushf
enter
cmpsl
jg
pop
jb
xchg
mov
mov
scas
or
les
xor
cltd
into
mov
or
xchg
xor
scas
and
pop
cmp
ss
lret
cltd
push
nop
inc
in
cli
stc
stos
fildll
cwtl
out
push
es
xchg
mov
fisttpll
jns
adc
and
mov
adc
dec
push
mov
and
inc
cmp
out
add
jle
movsl
popf
add
lods
out
xor
add
pushf
push
or
in
and
cmp
insb
jae
inc
rcrb
incb
fidivrl
inc
inc
fs
lahf
add
leave
outsl
pusha
outsl
jnp
clc
xlat
bound
pop
fsubrl
xor
mov
and
xchg
xchg
or
push
inc
mov
mov
push
test
sbb
cmp
pop
mov
xlat
fwait
cmpsb
fstpt
mov
sub
xchg
fcmovnbe
mov
fidivs
xlat
fiadds
xor
lds
pop
xchg
xor
jmp
push
or
inc
push
inc
dec
mov
jo
pop
lods
mov
cmpb
test
add
je
test
push
aam
call
push
into
test
and
xchg
adc
movsb
fwait
adc
cmp
push
test
dec
add
movsl
push
mov
jmp
xor
cmovp
icebp
addl
lods
enter
cmp
scas
je
in
sti
sarl
sub
xchg
leave
in
stc
inc
mov
cmp
call
jo
pop
dec
sbb
hlt
popa
jb
test
adc
and
mov
xchg
dec
mov
sub
sub
sbb
mov
std
fs
and
jge
pop
pop
rcr
dec
sbb
je
xor
mov
mov
imul
cli
lret
mov
pop
in
int
subb
sbb
push
mov
js
ret
add
das
in
jmp
test
jp
pusha
inc
cmp
das
cmc
flds
jno
jp
lcall
clc
fisttps
jb
add
popf
test
push
cli
ljmp
ja
xor
xchg
jne
and
xlat
subb
and
xorl
xchg
aas
loope
xchg
adc
xor
into
add
fcoml
mov
loope
fdiv
push
push
dec
outsb
loope
js
push
dec
imul
cmp
cmc
and
inc
xchg
pop
test
dec
sbb
sbb
fcmovb
and
inc
test
mov
scas
lods
mov
shr
adc
xor
cmpsl
adc
jbe
aas
je
xchg
jmp
sub
sbb
leave
dec
shll
push
out
and
xchg
xchg
xor
jae
pop
insl
sbb
jns
and
outsl
xor
push
fstpl
jo
mov
pop
cmp
lock
push
mov
pop
xchg
pop
mov
adc
push
jae
mov
hlt
insl
xchg
sbb
push
out
and
jne
mov
mov
sarl
xor
xchg
pop
dec
mov
std
cmc
add
ja
mov
inc
add
dec
shrb
push
and
mov
imul
dec
ljmp
orl
sbb
ja
out
cli
push
sub
fld
mov
test
push
cmp
dec
dec
in
loop
popl
shlb
or
in
dec
fwait
push
gs
and
imul
xor
sbb
fcompl
mov
inc
lcall
cmpl
scas
jge
sbbl
push
movsb
cmpxchg
pop
xchg
testb
xor
in
in
jb
leave
push
inc
shrb
jne
inc
jg
stos
xchg
faddl
and
push
outsb
fcomps
fdiv
nop
mov
adcl
push
lds
arpl
mov
sahf
push
je
mov
mov
push
jbe
jmp
mov
or
sbb
sub
mov
mov
adcl
push
mov
push
cmpb
sbb
in
push
lods
pop
je
das
outsb
test
loop
xchg
push
inc
add
cmp
mov
mov
mov
lret
cs
rcl
sbb
pop
push
xchg
push
pusha
scas
xchg
sub
pop
bound
xchg
pop
xchg
dec
pushf
jmp
mov
or
addr16
xchg
lahf
mov
pop
and
and
jl
push
sub
out
es
pop
aas
into
push
in
or
dec
sbbl
ficoml
bound
xor
ret
cmpsb
roll
push
cwtl
bound
cli
lahf
sbb
sub
xorl
mov
push
mov
verw
dec
das
pop
test
push
shll
mov
mov
stc
das
movsb
imul
jns
mov
in
mov
pusha
lcall
push
lods
fcoml
outsl
lahf
and
xchg
lods
inc
cmp
in
stos
arpl
push
pushf
pop
adc
out
cmpsb
cmp
push
in
lahf
inc
fs
fbld
test
fs
stc
pop
lcall
dec
push
fsubrp
jecxz
mov
or
test
insb
icebp
sub
sub
inc
mov
sbb
sub
inc
xor
mov
out
inc
push
jg
mov
int
ja
lret
inc
jl
std
sub
shrl
xor
add
subps
sbb
xor
int3
andl
movsl
out
dec
clc
aam
xor
shr
stc
in
xor
cs
pop
adc
sub
xchg
outsl
notl
je
or
frstor
sbb
mov
add
out
push
loopne
and
mov
adc
or
push
stc
subb
xchg
jg
mov
dec
cs
or
mov
leave
ret
xchg
and
call
inc
cmp
cltd
mov
dec
jp
lahf
fldcw
mov
mov
or
pop
leave
das
pop
hlt
js
fcoms
rclb
sub
in
rolb
mov
cmp
roll
add
ss
hlt
or
iret
fldt
call
xor
popf
push
mov
jae
inc
dec
cmp
pop
clc
rcll
sbb
pusha
mov
dec
adc
inc
lods
push
push
outsb
ss
jge
dec
call
into
dec
test
mov
jnp
jnp
pop
and
inc
add
mov
pop
mov
js
push
sbb
mov
xchg
cli
lret
sarl
lahf
jo
and
fs
out
ret
out
cli
ret
jle
xchg
fnstcw
inc
gs
push
mov
pop
ja
cmp
out
push
lahf
add
cmpsl
adc
inc
or
ret
rcr
pop
addr16
cmp
outsb
dec
loopne
gs
cmp
jae
sub
fstl
and
push
repnz
and
fstl
jecxz
inc
jl
in
sub
xor
jae
cmp
sbb
and
fsubs
outsb
push
xor
mov
out
push
daa
fstpl
shrb
stc
mov
mov
outsb
test
sbb
cmp
add
mov
mov
stos
sbb
add
push
mov
aam
decl
inc
enter
and
and
cmp
incb
andb
cmpsl
or
xor
ja
test
enter
xor
push
mov
shlb
jmp
jns
and
push
and
and
jnp,pt
loop
lahf
cmp
jb
int
mov
lea
mov
lcall
lcall
xlat
mov
sbb
add
pushf
test
xor
mov
roll
js
dec
jl
sbb
mov
xor
xor
aaa
ss
mov
inc
loope
int3
repnz
fcoml
mov
adc
inc
push
pop
movsb
cmpsb
fsts
shlb
bound
jmp
dec
fs
mov
pop
jle
movsb
fnstenv
pop
sub
aas
jp
dec
aas
mov
inc
pop
xor
adc
cli
mov
push
lea
ljmp
mov
jno
cmp
pushf
and
lret
xor
popf
mov
dec
sbb
dec
pusha
lea
or
jmp
push
std
loop
clc
inc
mov
fcmovne
inc
push
jns
stos
rcl
or
jg
and
aad
fisttpll
test
roll
lret
cmp
xchg
inc
jle
out
pop
push
and
jb
inc
pop
out
or
cmp
xlat
repz
jnp
jno
xor
leave
out
ds
inc
cld
mov
or
dec
scas
out
xchg
xor
das
mov
push
cmp
mov
roll
inc
cli
scas
insb
outsb
cmp
jp
rcrl
or
push
or
xor
outsb
lcall
movl
mov
out
pop
mov
mov
mov
movsl
shr
lds
jg
shlb
pop
roll
lahf
dec
push
in
xor
fildl
test
jno
setl
ficompl
adc
xor
rolb
outsb
xchg
scas
pop
lret
adc
ret
sti
lea
jl
lret
insb
sahf
xchg
pop
sbb
adc
cmp
movsl
shll
jo
iret
imull
add
xchg
lret
mov
dec
stos
xor
les
leave
ss
aas
dec
test
dec
fcomp
xor
sahf
sbb
inc
pop
mov
xor
and
push
push
xlat
sbb
icebp
xor
cmp
fldt
or
mov
push
or
jg
mov
push
push
dec
jae
hlt
nop
and
sti
jl
popa
sahf
dec
lock
sbb
cli
jl
inc
adc
mov
out
mov
sub
pop
aaa
xlat
mov
lret
jp
sbb
loope
sahf
cld
mov
jne
mov
addr16
cmp
inc
pop
and
insl
push
pop
mov
movsb
dec
mov
xchg
std
cmp
mov
in
adc
js
xchg
iret
jle
test
stos
inc
gs
scas
mov
bound
cmp
xor
aad
cmp
xchg
imul
popf
rorl
cvtpi2ps
addr16
inc
jnp
test
icebp
cmp
cmpl
xchg
imul
push
mov
repz
dec
scas
fs
and
mov
dec
scas
sti
arpl
fcmovnu
mov
jnp
out
jo
adc
jbe
and
hlt
arpl
xor
pushf
xchg
sarl
in
insl
outsl
fildll
rclb
aam
orl
sbb
mov
mov
xor
mov
jmp
stos
sbb
out
jge
pop
es
insb
in
dec
jbe
pop
cmc
out
rclb
test
mov
outsb
sbb
stc
inc
or
xor
lods
push
mov
dec
jne
ror
stc
sub
xchg
test
popf
cs
inc
mov
jl
sub
stos
mov
and
add
mov
mov
data16
enter
and
dec
mov
mov
in
cmpsb
fildl
dec
aam
addr16
fwait
cmp
dec
inc
int3
vpcmpgtw
addr16
out
aaa
bound
pusha
adc
xor
gs
dec
dec
bound
adc
imul
mulb
mov
pop
fildll
or
fnstenv
stos
jmp
pop
jmp
mov
insl
loop
ret
inc
fdivrl
std
xchg
sbb
pusha
lret
scas
into
push
push
or
mov
in
inc
mov
hlt
mov
xchg
pop
jge
pop
aas
xor
adcb
add
lcall
push
fidivrs
ja
mov
sbbl
icebp
out
sbb
and
mov
push
cmp
cmp
scas
pop
xchg
cmp
xor
sub
hlt
cli
out
lods
stos
in
or
jne
xlat
popf
cs
shlb
fidivl
xlat
mov
jbe
push
clc
xor
pop
inc
jle
mov
orl
fwait
sahf
and
xchg
or
mov
adcl
out
jne
xor
jbe
mov
jae
lods
je
jmp
pop
ds
fsubp
sti
push
mov
push
test
push
push
mov
ss
in
cmpsb
pop
xchg
mov
inc
add
xchg
bound
mov
popf
mov
push
sub
mov
testb
jmp
int
mov
gs
push
lret
fs
add
jnp
dec
cwtl
and
jp
hlt
in
mov
jne
push
adc
xchg
flds
jb
sbb
outsl
pop
sti
pop
xchg
mov
mov
pop
jge
mov
pushf
scas
xchg
lods
xor
pop
push
into
addr16
in
adc
cmpl
orl
shlb
mov
je
test
push
enter
cmp
or
jp
hlt
out
sbb
jmp
xor
shll
das
aaa
lcall
es
mov
mov
dec
sbb
js
imul
mov
outsb
fstpl
sbb
dec
jp
mov
in
sbb
sbb
lods
mov
scas
aaa
sub
movsb
sbb
adc
outsl
sbb
fnstenv
inc
jnp
sarb
dec
aaa
testb
cmp
shlb
movsl
scas
lods
sbb
in
cwtl
cmp
jp
and
inc
mov
popa
outsl
and
int3
pusha
pop
std
mov
xor
adc
lret
icebp
dec
fbld
loop
mov
cltd
push
xchg
push
nop
repnz
cmp
imull
scas
nop
xchg
mov
sub
mov
in
fbld
jo
dec
pushf
mov
repnz
push
bnd
and
and
inc
or
mov
repnz
rorb
add
repnz
imul
add
imul
mov
fidivs
mov
inc
out
pop
jne
int3
fidivl
ficoms
pop
inc
adc
mov
mov
cmpsb
jg
push
test
lods
rclb
adc
popa
call
jge
out
hlt
jno
aas
fidivrl
stos
cmp
and
sbb
jae
lret
outsl
mov
jl
lods
mov
shll
rcrb
icebp
push
dec
and
scas
mov
repnz
les
ficompl
xchg
mov
pop
mov
pop
lcall
sub
jl
add
pusha
mov
ss
push
into
ja
mov
sbb
cmpsl
je
mov
pushf
push
jne
out
sub
cmp
fists
imul
popf
cli
lcall
int
lahf
in
dec
pushf
sbb
adc
cmpsb
xor
pop
sub
test
test
fcoms
in
clc
mov
int3
jnp
adc
add
add
push
xchg
adcb
jno
lea
mul
shrl
mov
adc
or
jle
imul
push
mov
cmc
add
mov
xchg
mov
std
pop
sub
aas
popa
test
sub
aam
jbe
sahf
or
lret
sarl
xor
mov
dec
arpl
js
mov
push
adc
sbb
js
push
mov
lock
xchg
inc
mov
ja
bound
sub
mov
fs
jp
in
cmpsl
add
xor
pop
mov
adc
icebp
adc
sahf
jbe
jmp
test
jb
dec
lcall
cmp
push
cs
shrb
xchg
mov
sub
bound
jbe
mov
cwtl
inc
sbb
push
clc
icebp
sbb
shlb
test
aad
or
xchg
ja
leave
outsl
arpl
cmp
cmp
nop
cmc
les
jnp
scas
mov
loope
mov
lea
or
jecxz
xchg
add
push
ss
ret
cs
movsb
ret
pushf
ret
lods
ss
fcompl
es
inc
jmp
mov
testl
add
cld
xor
nop
jnp
out
mov
mov
push
popf
inc
xor
push
xchg
mov
call
sahf
enter
addr16
js
mov
sbb
data16
lods
pop
adcb
iret
lahf
mov
pushf
leave
xchg
subl
mov
out
pop
push
fldenv
cmpsl
push
pop
pop
ret
mov
ret
cmc
lods
jbe
popa
scas
hlt
inc
xchg
inc
jne
into
mov
repnz
jno,pt
in
sbb
rclb
cmc
lret
hlt
push
ljmp
or
cld
inc
sub
pop
sbb
shlb
daa
pop
sbb
lahf
jmp
daa
je
inc
mov
mov
jmp
jle
add
jecxz
mov
sbb
mov
orb
leave
adc
std
ret
pop
jns
daa
cli
jmp
pop
call
jns
cmp
loope
pop
mul
test
push
xchg
cmp
rcrb
and
xchg
push
ret
ja
das
fstpl
mov
ljmp
jle
jl
out
jae
sub
mov
loope
test
das
and
ret
iret
cmp
popa
dec
sahf
out
fs
sbb
out
push
fldcw
inc
sti
sub
mov
icebp
mov
mov
lds
mov
iret
xor
add
fdivs
ds
or
dec
sti
jp
in
es
sub
push
loope
jb
sbb
fxam
xor
out
lret
lock
pop
fidivrl
test
mov
push
add
daa
jb
aas
mov
fsubrl
decb
or
mov
push
jbe
sub
dec
pop
lret
dec
mov
push
inc
and
test
add
and
lods
stos
mov
mov
orl
xchg
inc
pop
orb
cmp
dec
std
xchg
shrb
cs
inc
and
fstp
mov
pop
cmpb
dec
and
mov
sub
decb
and
lcall
or
mov
cmpsb
lret
outsl
stos
or
add
dec
mov
mov
xlat
movsb
pop
loope
inc
lds
sar
loopne
out
pop
pop
pushf
daa
jno
adc
out
mov
dec
ljmp
jle
mov
add
aam
sub
icebp
lods
dec
outsl
or
sbb
xchg
div
lret
jecxz
orb
and
ficompl
ret
data16
adc
ds
push
adc
loop
ror
add
lahf
inc
dec
pop
push
mov
lahf
jns
scas
sti
mov
test
mov
movsb
jecxz
inc
sub
shlb
mov
call
mov
xchg
mulb
pop
lods
mov
xor
imul
jnp
push
sbb
push
or
in
pop
lret
lret
sti
fstpl
xlat
mov
loop
mov
and
cmc
sub
fcompl
mov
cld
push
mov
adc
cwtl
out
xchg
inc
mov
adc
or
fidivl
imul
pop
xor
dec
leave
dec
cltd
and
and
mov
jne
xlat
pop
scas
adc
dec
inc
ljmp
mov
dec
cmc
xor
lods
push
icebp
mov
pop
add
lcall
sbb
imul
xchg
mov
movsb
and
xchg
imul
xor
jb
sbbb
pusha
push
mov
push
push
sbb
cmpsb
repnz
and
xor
lea
stos
adc
in
mov
bound
pop
push
out
mov
icebp
dec
repnz
jae
call
pop
pop
xor
pop
call
xchg
sbb
xchg
and
push
sub
push
or
mov
xchg
or
jae
outsb
lds
lcall
dec
mov
imul
or
addr16
cmpsl
mov
xchg
fsubrs
dec
mov
mov
inc
jp
cmp
or
shrl
inc
and
fwait
rorl
jle
cld
fsubr
nop
jbe
xchg
aam
xchg
je
pop
mov
mov
and
push
scas
pop
cmp
and
fnstenv
mov
pop
mov
cmpsl
lods
push
cmc
pusha
cmc
inc
test
cmc
sub
in
out
add
cltd
bound
xor
mov
cmp
fwait
movb
dec
in
ljmp
jmp
pop
pop
fadds
dec
and
adc
shl
mov
push
es
out
add
pusha
daa
in
aas
filds
sahf
inc
ds
and
mov
repnz
icebp
inc
jbe
push
cmp
push
sti
sahf
mov
ret
movsb
ret
stc
pop
aam
loope
jle
scas
movl
pop
mov
aas
stos
pop
fldl
xchg
cmc
mov
lret
sub
pop
xor
adc
daa
stos
les
jns
jge
or
loopne
icebp
popf
xorb
in
sub
sbbl
int3
xlat
xchg
push
jbe
mov
push
bound
lea
push
sarb
bound
insb
inc
pop
loop
mov
mov
xchg
mov
out
or
data16
aam
sbb
outsl
adc
cmc
fdivrs
gs
fmuls
push
adc
push
push
int3
mov
fidivl
sub
cmp
and
jo
enter
insb
pop
pop
ljmp
aaa
adc
stos
leave
inc
push
inc
mov
mov
imul
dec
scas
addl
out
jbe
rcll
lock
mov
mov
lock
in
mov
pop
dec
enter
sub
ss
sub
or
ds
imul
xor
mov
pop
dec
xor
aaa
xadd
xchg
mov
inc
loopne
dec
jb
ret
jbe
sbb
cmc
push
cmc
cmpsl
js
jae
sbb
lcall
mov
data16
xor
push
lock
push
mov
incb
push
sbb
aas
jno
fcomp
lcall
cmp
push
or
outsb
repnz
lcall
ss
or
mov
push
xor
cmpsl
push
mov
mov
push
ret
xchg
adc
pop
scas
push
imul
lret
push
sub
ljmp
js
push
mov
jbe
test
gs
sub
fwait
into
pop
pusha
enter
fcmovu
orl
adc
shr
or
adc
scas
cmp
xor
nop
js
stc
sti
jge
test
push
cmpsl
int
aam
mov
adcl
sbb
pop
or
lahf
idiv
int
in
jge
pop
jecxz
fwait
testb
sbb
mov
pop
or
fisttps
push
sbb
dec
mov
dec
pop
out
inc
nopl
notb
adcb
out
xorl
pusha
in
dec
inc
lods
fcoms
cltd
aas
mov
psubsb
or
dec
xor
lret
jne
stos
rorl
imul
ja
jmp
mov
mov
pop
sub
mov
out
adc
sti
bound
pop
jmp
add
stos
rol
aad
mov
pop
add
out
insl
push
sub
and
pop
mov
xchg
inc
mov
cmp
bnd
sbb
pop
or
fs
and
xchg
test
sub
test
mov
lea
call
cmpsl
dec
jmp
imul
mov
cmp
push
cmpsb
xorb
mov
push
scas
push
lea
ss
cmp
dec
xor
es
scas
mov
js
pop
neg
sahf
sbb
push
dec
mov
push
mov
lret
push
testl
aam
push
mov
arpl
push
test
xorl
std
out
cld
inc
and
pop
arpl
pusha
sub
loop
jb
and
into
mov
pop
jecxz
es
xchg
sbb
dec
and
in
rol
mov
pop
fldenv
cmp
hlt
mov
jns,pt
mov
mov
cli
idivb
cltd
addr16
arpl
fidivrs
mov
xor
outsl
shlb
mov
mov
adcl
mov
push
sti
js
pop
ret
shlb
call
lret
ficoml
and
cmp
dec
or
adc
add
mov
xchg
inc
mov
push
dec
mov
neg
das
pushf
cs
and
xchg
stos
shrb
stos
lcall
mov
adc
popa
lahf
push
rcll
addr16
movsb
cmpsl
lock
push
in
cmpsb
movsl
add
insl
jl
add
xchg
xchg
lds
cs
push
and
pop
insb
insb
test
jle
xor
in
jg
push
cmc
adc
loope
or
shl
sub
sub
push
inc
scas
inc
and
loope
jo
pop
into
jecxz
pop
adc
xchg
pop
xor
shrl
int
pop
test
cwtl
repz
mov
mov
rcr
imul
pop
cmpl
jle
cmp
popa
dec
push
leave
and
fiaddl
divb
sbb
cmp
mov
shll
cmp
mov
aam
popa
clc
cmpsb
insb
outsl
out
adc
mov
mov
xchg
inc
mov
inc
mov
scas
dec
push
and
mov
inc
sub
clc
ljmp
nop
aas
lret
data16
push
pusha
ret
aaa
xchg
jbe
push
push
inc
xchg
ds
ljmp
shr
pop
ficomps
jne
inc
push
cmpsb
ljmp
push
or
std
outsl
sbb
xor
pop
mov
mov
adc
ds
and
imul
sbb
pop
inc
scas
pop
jb
cwtl
pop
ret
rcr
in
adc
fst
lret
xlat
cmp
cld
push
and
xchg
subb
jnp
cld
mov
ret
push
xor
inc
or
or
ret
and
add
cli
inc
fnstenv
lret
mov
jge
push
lret
mov
cmp
jmp
push
es
repz
mov
xchg
repz
sbb
hlt
add
scas
mov
mov
or
xor
ss
pop
add
and
rcll
mov
mov
push
jmp
pop
sbb
cs
lods
cwtl
xorl
lahf
mov
shr
loopne
bound
dec
cwtl
mov
push
cmp
cwtl
dec
lret
in
xchg
dec
push
jle
loope
add
adc
xchg
outsb
push
inc
cmp
ja
int3
cld
subl
xchg
pop
mov
lods
pusha
insl
notb
mov
mov
cmp
loop
pop
dec
loop
lods
lods
popa
hlt
mov
jns
mov
idivb
ss
loopne
incl
cmpsb
out
push
daa
and
add
lea
fldenv
add
mov
push
ficoml
jbe
dec
jge
outsb
pushf
inc
or
sbb
push
in
rcl
outsb
enter
sub
lods
mov
dec
inc
pop
daa
mov
sbb
outsl
aam
orb
pop
int
test
call
mov
ret
and
push
mov
jmp
or
cmpsl
mov
test
js
outsb
adc
push
dec
sbb
cmpsb
pop
loopne
add
jno
xchg
shll
xor
test
dec
insb
inc
sub
enter
sahf
sahf
jno
pop
or
xor
popa
mov
dec
popa
mov
and
adc
sbb
call
push
jp
js
ds
cmp
fsubrp
lahf
add
or
rclb
les
mov
xchg
mov
std
mov
dec
sahf
jb
pop
sbb
mov
imul
sub
aam
int3
push
sti
fldpi
mov
add
cmpl
sub
cli
mov
sub
enter
pusha
pop
lcall
fidivrl
xor
xchg
fstpt
xor
scas
jbe
dec
mov
inc
adc
cltd
ja
cmp
xlat
into
aaa
ds
xchg
je
inc
mov
js
fwait
gs
mov
aas
mov
aam
xchg
insl
cwtl
shrl
sbb
or
sbb
lcall
pop
jne
rorl
enter
shll
jmp
xchg
mov
cli
add
mov
out
sub
fsubr
push
scas
mov
add
testl
std
pop
adc
dec
jns
sub
jecxz
inc
mov
pop
cmp
inc
and
jbe
push
adc
and
sub
jo
fcoms
in
add
mov
or
lock
fcmovne
mov
inc
push
dec
gs
jmp
add
xchg
adc
sbb
jne
in
stc
push
sbb
mov
addr16
adc
arpl
and
push
mov
sbbb
lods
lods
dec
jno
sub
xorb
jbe
cmpsl
inc
test
dec
pop
repnz
or
in
call
jne
shrb
insb
call
cmp
jge
aam
rclb
in
push
imul
xchg
dec
leave
mov
js
and
stos
shrl
xor
mov
std
add
enter
rol
push
mov
sbb
add
mov
xchg
pop
push
push
sub
sahf
out
cmovge
adc
xchg
push
jmp
bound
mov
data16
pop
test
mov
pop
adc
push
es
push
xchg
loop
cmp
or
add
loop
icebp
test
scas
sbb
stos
in
lcall
pop
dec
pushl
cli
sub
and
ja
or
fldenv
xchg
cmpsl
test
into
in
out
data16
or
inc
imul
je
test
sbb
add
dec
mov
lock
addr16
xchg
mov
lock
push
push
outsb
inc
bound
leave
clc
fwait
inc
cmp
adc
fwait
out
dec
enter
out
mov
test
fisttpl
outsb
xchg
jl
fsubl
test
in
icebp
sarb
std
adc
adc
dec
jne
adc
insb
mov
enter
dec
xchg
xor
sbb
imul
ret
xchg
or
dec
jecxz
aad
jns
out
pop
repnz
movsb
lahf
aaa
lcall
dec
loopne
jecxz
pushf
std
jb
inc
sti
and
xor
hlt
dec
mov
cmp
xchg
ja
jo
in
outsl
sub
test
bound
sti
orb
jbe
movsl
or
scas
add
add
mov
inc
vpcmpgtb
and
dec
std
fsubs
sbb
mov
dec
mov
cli
out
fldenv
rorb
jg
out
xor
and
xor
xchg
mov
mov
sbb
je
add
js
or
jns
xchg
xlat
movsl
push
outsl
mov
jb
pop
je
ss
push
in
fcompl
fwait
popa
add
sub
jp
mov
arpl
dec
in
ja
lds
mov
aaa
mov
push
fs
enter
mov
adc
scas
add
cmp
jb
xor
add
adc
fcoms
jnp
nop
add
sbb
dec
scas
inc
inc
push
jecxz
cmp
and
xchg
xchg
loop
or
arpl
inc
mov
push
mov
xor
jae
mov
dec
push
stos
cltd
aam
add
cmp
test
add
xchg
xchg
pusha
adc
cmp
out
aad
sub
lods
xchg
lea
add
dec
add
cmpb
mov
repnz
mov
lock
jno
jo
jb
push
inc
mov
jle
xor
mov
xor
push
push
lds
push
ss
fdivl
cmp
mov
and
sbb
test
mov
popf
inc
sbb
pop
pop
sbb
mov
lods
add
dec
int3
push
push
jne
in
inc
test
add
mov
iret
push
push
push
cmp
sti
xchg
int
adc
push
sbb
push
inc
or
pop
pop
into
arpl
popa
repz
cmp
dec
ret
jnp
subb
mov
adc
call
mov
ret
mov
xchg
xor
add
jl
repnz
test
sbb
inc
dec
pop
mov
pop
stos
mov
xchg
cmp
mov
rcrl
mov
lcall
pop
pop
in
jecxz
add
cmp
fcmovnbe
cmp
and
lcall
fs
pop
push
mov
xchg
or
popf
add
adc
jbe
xchg
dec
arpl
ja
test
add
or
jp
int3
movsl
mov
cltd
or
xorb
xor
notb
or
popa
xlat
cmp
movsb
mov
pop
sti
mov
add
divb
adc
decb
xchg
sbb
inc
insb
sbb
fsubs
xchg
and
ja
add
data16
or
xchg
xor
divb
mov
and
movsl
loopne
inc
jecxz
dec
jge
mov
jp
ja
xchg
int3
push
fs
sbbb
cmpsl
pop
cs
mov
ds
cmpsl
daa
mov
mov
shlb
mov
fdivs
loop
xchg
js
cmpsb
scas
xlat
ja
les
push
xchg
ret
repnz
gs
rcl
push
loop
and
lahf
jmp
mov
adc
xchg
dec
test
mov
xchg
pop
sub
push
and
and
push
and
push
into
pop
xor
xchg
cmp
aas
mov
negl
fcomi
push
or
gs
jge
xchg
popa
push
mov
mov
sub
push
movnti
sub
stc
nop
in
out
sti
iret
mov
or
loop
cli
cli
repnz
mov
or
aam
frstor
or
jge
popf
jge
cmp
lods
movsb
and
leave
push
sbb
dec
and
jp
orl
mov
or
jns
aas
push
pop
mov
xorb
dec
repz
push
xchg
lret
movsl
ret
jl
add
daa
or
sbb
testl
movsb
push
rcrb
stc
xor
sbb
cmp
mov
jg
inc
jl
sub
or
ljmp
mov
das
aam
cmp
sub
fs
cmp
ja
adc
xor
pop
cmp
lods
mov
mov
in
mov
fsubl
aad
sub
addl
sbb
xchg
jmp
mov
push
jno
jge
cmpsl
ja
pushf
lock
cli
pop
gs
cmpsb
mov
lods
sti
mov
push
aam
leave
outsl
aad
fisubrl
xchg
lods
repnz
pop
lret
fistps
mov
and
and
add
das
sti
scas
inc
popf
mov
dec
sbbb
push
fistl
adc
aas
insb
out
and
testb
scas
fs
mov
enter
or
push
cs
movsl
xor
rorb
push
lret
add
jmp
fstps
pusha
test
lret
cmp
ds
setle
in
xor
dec
outsb
jl
xor
cmp
inc
xchg
stc
inc
push
shrb
fistpll
popf
pop
adc
call
sub
mov
mov
pop
mov
aad
outsl
into
mov
cs
or
sub
adc
mov
movsb
dec
jg
clc
cmpsl
das
jb
xorb
add
mov
add
scas
in
jmp
aad
mov
pop
pusha
jno
arpl
xorb
loop
test
pushf
push
cmp
dec
ret
xor
xchg
mov
xlat
ja
xlat
dec
je
inc
xor
lods
popf
aad
adc
cs
in
flds
test
jle
mov
xor
adc
movsb
arpl
jae
repnz
into
out
mov
out
push
mov
xchg
xchg
cwtl
inc
aaa
xor
xchg
inc
daa
jg
daa
lcall
ret
stos
imul
jl
lahf
cmp
iret
imul
test
push
data16
inc
cmp
mov
pop
nop
and
adcb
mov
or
and
lock
push
cs
xor
dec
sbb
mov
into
out
and
jb
cs
test
or
lods
mov
stc
add
pop
popa
je
jb
mov
imul
jb
jmp
inc
clc
push
push
and
xlat
call
or
push
inc
inc
xor
sub
sbb
jecxz
add
add
decl
cmpsb
ljmp
pop
pop
repz
adc
inc
jae
fadds
incl
mov
add
stos
aam
in
movsb
das
mov
testl
push
add
js
jne
mov
orb
movsb
mov
xchg
inc
out
add
pusha
outsl
pop
inc
jmp
pop
xchg
outsl
outsb
pop
movsl
push
xchg
xchg
sar
xor
pop
dec
inc
inc
mov
lds
je
sbb
out
aam
xchg
sbb
mov
pushl
out
cmp
adc
mov
les
sbb
jb
popf
sbb
xchg
jp
inc
dec
lret
pushl
xchg
gs
cmc
pop
outsb
pop
inc
in
lret
xor
or
sbb
inc
iret
add
fstps
inc
dec
xor
shl
std
ss
sub
mov
mov
sbb
cmpsl
pop
sbb
pushf
test
imul
adc
fwait
add
mov
aam
data16
pop
push
fwait
mov
sahf
dec
inc
sbb
scas
push
mov
push
insl
loop
add
xchg
inc
repz
out
adc
out
lahf
inc
leave
mov
movsl
gs
pop
mov
fisubrl
imul
jnp
add
xchg
jne
movsb
cmp
pop
xchg
inc
fbstp
jne
stc
push
or
ficompl
pop
dec
shlb
cmp
xor
and
inc
xor
adc
sbb
xor
les
dec
cltd
hlt
les
aas
dec
xchg
imul
cmpsl
xor
in
mov
or
test
push
adc
int
cs
xchg
xlat
jo
and
subb
loopne
or
push
xchg
inc
mov
push
cmp
lds
inc
mov
sub
stos
xchg
jp
fmul
stc
sbb
and
ljmp
out
icebp
loopne
jb
mov
cmp
popa
data16
sbb
pop
cmp
jmp
mov
sub
dec
sbb
sbb
and
add
in
cmc
aas
xchg
popa
lret
xor
mov
ss
in
xlat
adc
test
and
shlb
xor
fistps
xchg
in
push
lcall
pop
insl
pop
jns
mov
mov
int
inc
mov
rcrb
cmp
sti
fisubrl
mov
sub
push
or
dec
pop
add
jp
pop
ror
lods
repnz
sahf
aaa
in
cli
popa
jns
sub
xor
divl
add
sub
fptan
pop
mov
sub
sub
jmp
xchg
jne
pop
mov
pop
dec
jl
out
and
lcall
mov
mov
out
add
sub
scas
mov
adc
loopne
mov
mov
jnp
or
rcl
cmp
idivl
sub
insl
jne
pusha
out
add
jns
xchg
test
xlat
iret
mov
mov
cmc
mov
push
cmp
jle
addr16
mov
ja
stos
jmp
and
in
push
push
mov
popf
loop
push
jge
jne
call
jno
push
sub
addr16
push
scas
fiaddl
pop
push
sbb
jns
mov
lret
xchg
and
jno
pusha
pushf
dec
fisubs
lock
adcb
xor
cli
mov
xchg
bound
sti
ja
cmp
roll
jbe
dec
inc
dec
fisttpll
sub
gs
mov
adc
in
push
mov
hlt
pop
push
loope
lahf
lds
sbb
divb
inc
cmp
xchg
inc
outsl
scas
jae
xchg
pop
or
and
popf
shrd
adc
adc
adc
lods
outsb
mov
daa
or
adc
sar
stos
hlt
fs
insb
and
stos
mov
xchg
test
jnp
ljmp
mov
push
sahf
jecxz
or
lea
pop
mov
shlb
push
repnz
shll
jge
out
pop
test
xorb
push
xchg
outsb
sqrtps
popa
int
std
fldl
lret
icebp
lcall
pop
jl
subl
cmp
lret
cmovge
add
icebp
scas
jle
xor
iret
pop
add
fdiv
mov
jns
xor
fs
sbb
dec
insl
mov
jno
inc
jb
or
or
xlat
fnsetpm(287
movl
mov
cmpsb
sti
mov
ret
mov
add
pushf
inc
lret
int
addr16
mov
enter
aam
test
mov
sbb
into
dec
je
pop
shr
adc
das
call
cmpsl
jne
lods
adc
fsubs
scas
adc
jbe
fldcw
push
xchg
subb
jns
push
and
push
pop
fstpt
pushf
out
or
lcall
adc
push
divl
or
mov
les
cmp
xor
pop
sbb
shll
jl
repz
ljmp
sub
test
fwait
lock
lret
pop
dec
mov
mov
icebp
sub
icebp
cmpb
int3
lcall
out
adc
mov
les
adc
bound
sbb
push
inc
adc
xchg
call
cmp
out
sbb
sbb
pop
sub
mov
push
and
gs
aas
mov
sub
fidivl
repz
loope
lods
push
adc
in
stos
adc
icebp
push
inc
mov
jmp
jo
and
and
sahf
sbb
arpl
bound
or
adc
jmp
sub
or
push
xor
movsl
dec
scas
aas
or
jecxz
mov
mov
adc
gs
inc
out
dec
mov
loop
out
stos
bound
and
inc
pop
popf
dec
lods
inc
fsubr
sub
movsb
jno
lods
pop
int3
add
outsl
or
adc
cmp
xlat
jne
out
pop
out
and
std
popa
pop
sbbl
jg
adc
sti
adcl
sub
or
mov
cmp
lock
and
mov
loope
ret
or
loopne
sub
pop
and
xor
jo
andb
mov
fs
insl
fsubl
adc
ret
loop
mov
scas
push
sbb
mov
mov
push
xchg
cmp
es
push
xor
cld
out
pop
push
cmp
adc
jns
mov
imul
insb
add
pop
inc
les
cld
ds
les
das
and
mov
mov
push
das
add
popw
jl
push
popa
xor
bound
mov
xor
sbb
test
les
add
pop
jl
arpl
pop
cmpsl
ret
lds
pusha
pusha
jns
mov
rol
sub
mov
xor
xor
mov
sahf
xchg
sbb
rorb
mov
ror
popf
add
fisttpl
xchg
cmp
jnp
inc
testb
jmp
aad
clc
mov
dec
mov
xchg
imul
in
je
sbb
xchg
lret
cmpsb
lret
pop
mov
pop
xor
sub
push
movsl
call
adc
cmc
fdivrs
dec
or
or
filds
addl
jg
out
rclb
lds
aam
shrb
ret
push
mov
sbb
xchg
movsl
push
xor
imulb
dec
push
xor
movsb
daa
lret
nop
push
fimuls
negl
rcll
bound
pop
mov
je
mov
jle
cli
aam
in
ss
lea
inc
mov
push
xor
adc
mov
mov
sarb
rolb
mov
sarb
into
jns
into
pop
or
iret
fadd
decb
or
xchg
mov
dec
jmp
push
mov
gs
mov
out
and
xor
xor
xor
jge
adc
fsubs
hlt
xor
aad
add
out
pop
mov
jae
push
int
imul
out
scas
pop
loopne
sti
push
xchg
lods
arpl
pop
cmc
sbb
cmp
and
xor
icebp
inc
sahf
or
dec
adc
jne
lods
inc
jbe
ljmp
pop
nop
inc
mov
push
pop
call
aaa
or
stc
xchg
inc
arpl
flds
loop
xchg
nop
enter
cmp
inc
out
dec
push
or
mov
insb
xor
outsb
add
movsb
inc
scas
push
stc
and
xchg
daa
nop
adc
jne
or
cmp
inc
lods
sti
mov
test
add
shll
dec
insl
lods
jg
iret
cltd
mov
dec
and
stos
jb
inc
sbb
sbb
int3
cmpsb
cmp
fnstenv
inc
addb
imull
stos
push
inc
mov
enter
fs
sub
sbbl
mov
jge
out
stos
clc
mov
jg
add
das
bound
cwtl
enter
pop
cmp
mov
pusha
lods
ds
adcb
int3
push
xchg
pop
pushf
out
aaa
or
xor
icebp
mov
and
mov
push
xor
jmp
jg
or
push
cltd
hlt
or
mov
fsubp
out
push
into
es
repnz
adc
xorb
jmp
fcmovne
xor
movl
jae
cli
aas
add
pop
cltd
out
in
dec
dec
pop
ja
push
adc
adc
outsb
scas
mov
or
stos
mov
push
lret
sub
sbb
adc
mov
xchg
lods
ret
movsl
sub
xchg
pop
in
mov
and
xchg
xchg
mov
mov
and
cli
jle,pn
dec
cltd
aad
add
sub
jle
dec
add
cmp
cmp
sub
rcr
push
add
jle
js
xchg
jae
aad
push
sub
dec
cmpl
fnstsw
adc
mov
test
pop
pop
clc
lret
dec
pop
pop
adc
lea
stos
xchg
xor
and
icebp
cmp
pop
cltd
into
dec
shl
imul
lods
lea
outsb
mov
inc
shll
ss
and
ja
dec
cmpl
and
dec
imul
mov
stos
inc
rcrl
adc
rcll
push
fpatan
test
in
cs
fidivrl
inc
jno
pushf
and
mov
and
scas
mov
xchg
mov
sti
dec
xlat
movsb
add
test
nop
sbb
fsts
dec
les
test
xchg
dec
mov
add
je
push
loop
mov
push
xor
dec
dec
test
imul
int3
jbe
xchg
xchg
and
push
bound
fdivrs
ficoml
mov
add
or
int3
jbe
pop
test
dec
xor
fdiv
and
ds
out
pusha
cld
stc
mov
sti
adc
push
or
outsb
push
sub
leave
push
dec
ss
jp
pop
xchg
mov
outsb
add
lock
decl
xor
loopne
pop
sbb
insb
inc
stos
sub
je
push
mov
mov
or
xor
pusha
stc
inc
inc
inc
pop
out
adc
cmp
hlt
in
adc
mov
test
sbb
cmc
mov
fisubrl
repz
push
insb
inc
sub
int3
and
fsin
adc
xchg
fdivl
pop
dec
int
outsl
lds
movsb
loope
push
scas
jno
dec
popa
or
push
test
dec
popa
cwtl
mov
mov
pop
mov
mov
xor
outsb
mov
inc
lret
and
es
sub
adc
push
xor
xchg
jo
xchg
mov
cmp
inc
inc
out
jp
fsubrp
aaa
dec
icebp
jo
pop
es
sahf
sbb
mov
fstl
jmp
sub
xor
fisubrl
enter
fisttpl
loopne
filds
push
pop
js
cmp
cmp
adc
fbld
ja
subb
xor
test
pop
push
inc
lahf
sbb
pusha
bnd
ja
pushf
fcompl
dec
pop
pusha
gs
and
sub
add
orb
ja
inc
sahf
dec
popf
andl
xlat
je
inc
not
jb
xor
push
sbb
push
les
frstor
loopne
cmp
aad
test
xchg
mov
mov
stc
movl
sub
jb
shrb
insl
aad
xchg
jl
inc
push
inc
in
sbb
dec
lods
xorl
pop
jo
pop
in
test
ret
faddl
inc
fsubl
inc
jo
mov
shrb
push
cmp
pop
xor
xchg
leave
orb
outsb
adc
faddp
sbb
xor
lret
repz
mov
stos
and
rcrl
jns
aam
enter
sbb
mov
sahf
push
pusha
mov
clts
cmp
push
pop
pop
jp
or
shll
prefetchw
lds
stos
sbb
jp
mov
adc
xchg
ljmp
mov
or
xchg
push
movsl
mov
lret
and
icebp
mov
test
cli
xchg
cmp
filds
popa
sahf
sti
jmp
mov
xchg
cs
dec
adc
or
or
idiv
out
push
ljmp
sub
aaa
mov
mov
jnp
lahf
cmp
cmp
lds
jns
xor
in
push
dec
mov
movsl
mov
cmpsl
inc
sahf
scas
push
sub
icebp
jg
in
pop
popf
aam
add
mov
data16
mov
pop
xchg
push
cmp
mov
push
js
aaa
in
dec
outsb
outsl
pop
popa
out
int
mov
sub
dec
in
or
imul
and
aam
mov
sahf
fstl
fnstenv
pusha
movsl
and
bound
pop
xor
lret
popf
call
mov
std
adc
cmp
xor
push
cld
orl
jg
js
dec
js
and
push
adc
rolb
mov
jo
outsl
test
je
pusha
movsl
cmp
in
xchg
lahf
or
push
test
xor
mov
mov
jl
and
add
loopne
lcall
dec
into
cmp
es
mov
xchg
stos
cmp
ljmp
mov
xchg
aad
lret
inc
out
ret
shlb
push
jmp
lret
sbb
aad
outsb
rcrl
cmp
out
sahf
std
das
es
cmpsl
clc
repnz
shrl
fnstcw
xchg
pop
push
adc
je
repnz
pop
repnz
cmp
push
sub
fs
cmp
out
fmul
or
inc
push
out
out
fldl
jmp
lock
xlat
arpl
in
dec
imul
push
add
popf
or
fadd
cmp
add
sbb
push
mov
push
xlat
out
enter
and
popf
adc
cli
dec
fwait
imul
xor
sbb
or
xlat
push
pop
fsubl
mov
lcall
push
jbe
aaa
cmp
xchg
data16
push
mov
je
mov
idivl
pop
xorb
xor
sarb
ss
stos
and
out
test
sub
pop
lea
imul
sbb
pushf
jns
stc
sbb
adc
xchg
out
sub
lcall
mov
mov
ljmp
push
xchg
mov
pop
pushf
sti
mov
rorl
cmp
lahf
sbb
out
ja
cmp
cld
cmc
push
loope
sti
es
mov
mov
test
into
xchg
dec
dec
sbbl
leave
pop
clc
cmp
js
out
or
pop
mov
loopne
push
mulb
push
mov
int
aas
mov
dec
cmp
dec
rcrb
xchg
cwtl
inc
mov
cwtl
add
mov
dec
push
std
cwtl
aad
rclb
xchg
dec
fmuls
shll
leave
xchg
cmc
sti
mov
lea
and
and
jb
cs
fwait
js
mov
sti
subb
mov
add
outsl
xchg
movsl
outsb
dec
fistps
mov
fiadds
jl
loop
mov
and
movsl
or
mov
ret
mov
and
scas
cwtl
dec
aam
push
sbb
add
test
std
movsl
mov
jbe
inc
xchg
scas
sbb
cs
add
mov
push
lea
xchg
lcall
mov
arpl
popa
pop
lretw
mov
and
stc
jge
push
call
mov
sti
nop
add
pop
movsb
ss
insl
in
decb
xlat
mov
pusha
push
orl
pushf
pop
shlb
mov
inc
sti
pop
inc
jne
pop
jl
scas
setbe
mov
jbe
sbb
push
dec
imul
sbb
pop
out
sbb
or
out
aad
xor
sbb
pop
inc
mov
scas
popa
cltd
mov
add
add
pop
in
sub
adc
inc
jnp
adc
popf
cmp
pop
lock
sbb
jecxz
mov
pop
pop
fisubl
or
pop
pop
out
lock
xchg
sti
mov
popa
add
lret
xchg
mov
inc
mov
push
or
push
mov
push
out
add
stc
mov
lds
inc
mov
push
adc
pop
and
pop
xchg
push
mov
xor
in
xchg
imul
mov
pop
add
sti
popa
jg
andl
add
inc
in
mov
adc
rcpps
xchg
jl
mov
xchg
xor
in
out
call
mov
lds
and
mov
sbb
xor
daa
pop
shll
movb
faddl
inc
sub
jl
adc
dec
adc
push
xchg
jb
jecxz
in
movsb
fisubs
rcll
push
outsb
roll
popl
lds
in
cmpsl
sti
shrb
pop
add
mov
push
sbb
cmpsb
jb
or
xor
mov
outsb
xchg
rclb
mov
xor
imul
iret
mov
add
xchg
sbbb
pop
xchg
clc
mov
loop
jge
pop
daa
mov
or
cmp
inc
xlat
dec
xchg
inc
mov
mov
mov
scas
add
ja
cwtl
fstps
mov
mov
in
push
stos
xchg
bound
jnp
repz
pop
ret
scas
cmp
pop
test
fdivs
sub
mov
clc
cmp
cmp
push
xchg
jge
sarl
sbb
xor
mov
lds
das
ffreep
data16
or
mov
cs
lock
das
stc
inc
icebp
push
inc
add
leave
pop
das
je
iret
inc
das
fnstcw
cmp
mov
inc
pop
lods
or
and
outsl
cltd
int
gs
pop
mov
btcl
mov
movsb
add
sbb
loope
add
cs
mov
jp
cmpsl
ss
jp
dec
add
push
jg
loopne
stos
loop
inc
and
xor
iret
aam
loop
dec
mov
xchg
int
xchg
enter
cmc
mov
insb
pop
testl
pop
in
push
fisubs
lea
add
dec
mov
dec
adc
cli
add
mov
movsb
in
test
and
in
mov
pop
sub
insb
sub
stos
or
idivb
and
xchg
jno
pop
adc
jecxz
mov
rorb
push
push
dec
dec
jmp
enter
mov
jbe
scas
sub
cmp
cmc
dec
loopne
mov
jge
and
das
in
jmp
fisttpll
mov
or
lds
jnp
pushf
adc
movsb
cli
std
mov
les
clc
test
sarb
lcall
mov
pop
inc
lods
js
sub
dec
loop
inc
pop
jb
rolb
jo
shlb
xchg
cld
inc
loopne
fwait
lea
inc
fs
mov
sarb
lock
scas
out
add
dec
addr16
jg
mov
cmp
add
push
mov
push
test
sahf
imul
sahf
data16
data16
xchg
push
inc
add
sbb
xchg
pop
mov
rorl
ljmp
sahf
sub
jns
inc
jmp
mov
push
fs
clc
fwait
int3
mov
xor
ret
out
mov
mov
inc
lahf
dec
and
pop
jbe
fnsave
in
sub
cmp
mov
jg
lcall
and
arpl
aaa
lods
enter
out
test
cmp
ret
stc
add
test
mov
ds
mulb
xor
fcompp
cltd
lea
xchg
xchg
fwait
pop
pushf
test
jecxz
test
fs
dec
jmp
push
fimuls
mov
iret
scas
xor
loop
std
mov
movsb
pop
add
mov
xor
xor
xchg
je
jb
or
fildl
rcr
cs
push
mov
sbb
sbb
sbb
cmpb
popl
adc
cmp
xor
mov
mov
or
popl
cmpsb
mov
jns
or
fs
add
aad
mov
loop
inc
add
scas
push
mov
xchg
mull
divb
and
outsb
leave
jmp
daa
inc
sbb
push
mov
cli
rolb
fcmovbe
add
mov
mov
cwtl
xchg
rorb
mov
xor
in
fsubl
rolb
fiadds
mov
outsl
ds
cmp
sub
mov
adc
jne
inc
cmp
add
popa
jmp
xlat
clc
cmpb
dec
dec
or
adc
push
jge
movsb
xchg
int3
lret
xorl
mov
xchg
out
jns
imul
inc
dec
mov
dec
cmp
clc
pop
pop
pop
bound
arpl
or
cmc
push
addr16
cmc
out
insb
aas
repz
sbb
mov
adc
sbb
subl
adc
mov
int
sub
xchg
xchg
pop
fwait
xlat
cmp
fucom
ja
ljmp
outsb
sub
notl
mov
mov
call
addr16
aad
fldt
sbb
in
cli
loopne
push
xchg
push
dec
xchg
mov
pop
decb
push
dec
std
mov
int3
bound
adcb
cmp
les
sub
jge
xchg
or
inc
push
mov
push
push
cmp
cli
cmpsb
or
jecxz
mov
repz
aaa
pop
mov
mov
inc
fistl
xchg
int3
es
or
repnz
in
scas
js
cmp
mov
or
sbb
mov
pop
mov
inc
scas
inc
mov
push
dec
push
inc
push
test
or
loop
and
test
mov
inc
sar
insl
aaa
testb
shll
cli
movsb
cmp
cmp
mov
fdivrl
addr16
add
dec
push
js
dec
jno
ficompl
hlt
cltd
or
pop
sub
lret
orl
in
mov
dec
bound
jno
repz
jmpw
pop
sbb
xor
js
sub
lret
fcoml
fimull
and
lea
imul
pop
pop
jns
jecxz
ds
inc
or
cmp
push
fstps
xchg
out
mov
ffreep
fstps
inc
push
cmp
sbb
jae
lahf
imul
mov
mov
cmp
add
xchg
mov
dec
xor
or
inc
inc
aaa
bound
pop
lods
mov
mov
outsb
int3
adc
pop
inc
sbb
fcmovb
cmp
std
ljmp
int
inc
shr
pushf
insb
cmpsb
subl
mov
or
add
les
lret
sbb
mov
pop
xchg
inc
ficoms
jmp
shll
scas
jp
mov
mov
pop
int3
or
sbb
push
xchg
pop
jl
inc
jns
sub
pop
rcrb
mov
pop
sub
mov
fadd
ljmp
fimull
pop
jnp
fistpl
cmp
lods
jne
mov
xor
xlat
sti
dec
mov
mov
loopne
mov
push
lahf
int
in
jae
lea
inc
test
and
add
adc
popf
mov
or
fimuls
adc
pop
push
cmpb
loopne
mov
roll
mov
push
shrb
cmp
popa
mov
mov
out
add
test
icebp
fwait
add
and
andl
loop
das
sbb
in
sbb
mov
pop
xor
push
push
lods
pop
fcmovne
mov
sahf
lods
mov
sbb
pop
ret
mov
push
sub
adc
inc
pop
push
inc
ljmp
test
addr16
mov
cmpsb
repnz
pop
es
jnp
inc
mov
out
jmp
flds
or
xchg
jl
pop
loopne
and
dec
leave
xchg
cs
add
mov
or
bound
jno
cs
jp
inc
movsl
pop
pop
cmp
xchg
in
cmp
dec
add
cmovg
adc
psubsb
add
sub
jne
mov
mov
inc
xor
adc
cmp
xor
pop
lret
gs
xchg
adc
jbe
dec
xchg
jmp
xor
and
lahf
jge
jp
pop
lods
jo
ljmp
inc
add
lret
xchg
lds
sti
lret
in
pop
or
mov
add
call
jnp
and
sub
jle
cmp
ret
pop
scas
mov
repz
mov
jmp
jp
jl
cmp
push
imul
sahf
mov
or
bound
fs
sbb
dec
or
mov
or
loop
fucomip
mov
in
mov
push
pop
orb
repnz
add
pusha
rcr
inc
xor
mov
icebp
adc
mov
sub
inc
adc
int3
push
mov
inc
cli
rcrl
shlb
pushf
inc
fisubs
inc
dec
sub
roll
jns
rclb
test
and
sub
pop
xchg
push
popa
adc
ja
pop
ss
mov
in
xor
in
xchg
sbbb
pop
push
xor
pop
add
ficoms
addb
les
ljmp
adc
jb
roll
cmpsb
mov
pusha
rolb
pushf
inc
dec
aam
xchg
out
mov
cmp
stos
lahf
lds
inc
loop
out
js
push
dec
xlat
xchg
mov
sbb
jbe
iret
mov
push
lock
adc
sbb
cmp
add
add
fimull
jbe
cltd
sub
cli
adc
roll
mov
xor
xchg
sub
cmp
mov
mov
roll
subb
mov
lods
movsl
inc
mov
pop
jnp
rorb
xchg
icebp
xor
clc
test
call
repnz
loop
cmp
inc
ja
cwtl
in
jecxz
mov
and
push
pop
bound
sbb
loopne
sub
mov
outsl
pop
adc
daa
rolb
cmp
add
stos
or
xor
inc
shlb
mov
je
ljmp
or
in
in
arpl
sbb
sub
jle
insl
pop
mov
push
xor
sub
into
out
dec
adc
jl
pop
xor
mov
cmp
es
adc
mov
push
scas
cmp
xorl
mov
adc
mov
mov
mov
aas
es
add
sub
rcrb
mov
lods
bound
pop
shl
pop
ret
add
xchg
sbb
nop
fists
add
test
or
inc
je
enter
xchg
pushf
mov
mov
xorb
es
mov
pop
cli
push
insb
mov
cld
sbb
arpl
sbb
mov
enter
pusha
fstps
mov
sbb
test
insb
mov
xor
jne
in
push
lods
inc
xor
dec
je
cwtl
or
inc
pop
add
jle
xchg
call
mov
dec
dec
adc
out
imul
jb
pop
pmaxub
movsl
roll
xor
idivl
loop
enter
sbb
dec
jnp
test
inc
testb
cmp
adc
add
xlat
sar
mov
enter
sbb
mov
lock
repz
add
cmp
insb
push
test
lcall
mov
cltd
push
and
popf
aad
add
fildll
mov
out
push
jae
ljmp
popf
mov
jo
mov
pop
mov
jae
scas
cmc
sub
xchg
xchg
fdivp
out
nop
pop
mov
mov
sub
inc
add
cmp
stc
jp
call
cmp
dec
in
push
and
fisubrl
mov
frstor
out
insb
loopne
xor
ljmp
pop
cli
pop
jne
imul
imulb
sbb
test
call
test
mov
fstpt
mov
mov
pop
lds
outsl
stos
fidivl
cmp
je
mov
loop
ljmp
test
jne
test
or
pop
out
inc
pop
mov
mov
test
inc
fildl
repz
pop
mov
out
add
jecxz
repz
xchg
or
pop
fwait
mov
push
mov
dec
ljmp
repz
mov
popa
pop
pop
cmp
adc
stos
sbb
xchg
pop
and
or
lret
pop
mov
js
cmpsb
pop
and
xor
push
rorl
sub
and
dec
nop
dec
out
aaa
push
lock
xchg
mov
mov
call
cld
enter
jne
outsb
aam
or
sysexit
or
nop
in
add
pop
cmp
test
mov
das
into
das
aad
jp
gs
push
cmp
jbe
std
xor
insb
add
stos
pusha
pop
mov
adc
sbb
scas
mov
loop
fdivs
int3
jbe
add
cmp
mov
mov
daa
daa
ja
test
lret
xchg
xor
bound
std
push
jg
sbb
test
jge
inc
into
jecxz
pop
jge
outsb
lret
inc
mov
int
xor
scas
pop
pop
cmc
xlat
jg
mov
cmp
jg
cltd
pop
in
mulb
sub
test
mov
jp
lret
rolb
loopne
jp
nop
outsb
jmp
movsl
inc
sbb
stc
jmp
rcrl
aaa
fcompl
jne
jge
dec
xor
sub
sbb
push
int3
cmpsb
inc
jns
shlb
or
in
xchg
lret
lods
cli
cli
popl
inc
shr
in
test
leave
cwtl
push
mov
or
sub
jle
movsl
aad
fisttpl
sub
in
test
lret
popa
mov
das
daa
and
addl
pop
popa
dec
sahf
decb
lcall
fildl
js
or
sarl
lods
ss
inc
push
sub
ljmp
hlt
adc
jo
cld
jae
icebp
inc
fstl
mov
call
fwait
sarb
call
pop
js
lds
out
xor
into
pop
pop
daa
pop
divb
aad
adc
dec
clc
dec
jmp
aaa
fwait
scas
test
sbb
jge
cmp
cmp
jle
mov
dec
mov
fstps
bnd
test
xchg
fadd
mov
push
push
mov
push
fs
hlt
les
in
adc
sbb
jbe
into
nop
jo
xor
mov
xchg
cwtl
cld
inc
dec
push
xor
loopne
xor
pop
sub
xor
out
imul
mov
inc
jbe
arpl
or
push
dec
dec
jle
daa
ljmp
push
sti
xor
and
adc
push
int
mov
sbb
jge
test
lcall
cmp
iret
repz
mov
xchg
lods
mov
or
mov
xchg
lahf
jno
or
push
and
inc
add
mov
in
mov
and
mov
aam
or
movsb
fldt
jp
pop
ds
call
rcr
bound
out
xor
in
cli
movsl
call
mov
xchg
cmp
repz
cmp
mov
cmp
push
cli
mov
imul
mov
call
test
aas
mov
les
js
inc
or
sbbl
addr16
mov
pop
mov
mov
jbe
jae
inc
pop
clc
insl
jecxz
ja
xor
fs
fnsave
das
clc
sar
arpl
adc
data16
pushfw
and
cmpsb
push
ljmp
xor
mov
xor
adc
and
lahf
dec
ja
jge
xchg
mov
cmp
jnp
or
cld
loope
icebp
pop
lock
jl
and
movsb
or
jle
pop
orl
push
adcb
pop
cltd
subb
lea
inc
pop
sbb
mov
push
addl
mov
in
lret
test
adc
cmp
xor
aad
out
iret
xchg
loop
inc
cmp
fldcw
mov
test
outsl
push
repz
xchg
hlt
scas
shlb
mov
out
icebp
mov
jge
lods
rolb
leave
cmpsl
mov
inc
xchg
cwtl
jnp
orb
xor
and
cmp
xchg
cmp
sti
cmc
ljmp
mov
xchg
jne
mov
lds
mov
out
jg
lret
daa
clc
ficompl
insl
negb
scas
dec
andps
pop
je
out
shll
jmp
adc
adc
xchg
lret
test
lods
out
cmp
popf
insl
cmp
jno
ret
js
xchg
arpl
xor
cmp
sub
es
and
pushf
sub
push
dec
sbb
pop
or
sub
jge
jl
lahf
stos
adcb
pop
sub
mov
repnz
sbb
cmp
cltd
clc
xchg
jns
imul
ja
leave
xchg
es
inc
jne
jg
sub
jl
jl
push
iret
add
shlb
bound
or
outsb
es
xchg
mov
push
daa
int3
aas
aad
daa
enter
addr16
add
ds
lret
bnd
daa
in
cld
shlb
lods
test
jns
ljmp
in
xchg
insb
pop
push
sbb
sbb
sbb
xlat
stc
pop
int
jge
sti
int
sbb
add
repnz
imul
std
mov
out
shrb
xchg
xchg
loopne
lcall
sub
pop
test
or
fwait
mov
add
lahf
adc
add
in
cmp
push
sub
stc
ds
addb
out
out
subb
pop
dec
jmp
push
loope
add
cld
push
enter
inc
jmp
inc
ljmp
das
push
jo
out
push
mov
push
fwait
mov
pop
pop
outsl
dec
fcomip
mov
push
push
jecxz
test
test
addr16
push
dec
lods
mov
das
mov
int3
clc
je
test
push
xchg
rcrl
and
push
ljmp
and
imul
lds
stos
lret
push
fimull
imul
rcrb
push
repz
je
dec
push
xor
push
std
mov
ljmp
mov
mov
pusha
push
roll
inc
leave
mov
jo
dec
add
js
mov
cmp
insl
js
pop
shll
push
rol
imul
xchg
std
orl
int3
in
add
sbb
popa
inc
aas
push
lret
sbb
sbb
mov
push
xorl
and
mov
mov
cmp
fistl
dec
cmp
repz
ret
test
mov
adc
mov
xchg
cmp
add
fs
data16
xchg
cmc
das
shll
mov
push
js
push
mov
in
ret
int3
push
outsl
and
aad
jb
out
sarb
int3
pop
jo
insl
cmpsl
and
inc
fbstp
push
int
push
lret
push
in
xor
add
jne
and
push
ret
sahf
xor
push
aaa
add
push
push
fsubl
cmp
out
push
lahf
loopne
mov
mov
cli
es
lock
neg
mov
mov
pop
scas
cld
xor
sbbb
imul
add
jmp
xchg
clc
repnz
mov
repz
pop
xlat
sub
mov
jo
fisttpll
insl
push
dec
shll
fisttpll
inc
aas
inc
mov
or
adc
stos
cmpsb
in
xor
push
mov
fldl
clc
cmpsb
mov
ja
adc
cli
stc
pop
inc
leave
pop
aam
pop
xchg
mov
push
rcrb
cwtl
cs
push
xor
popa
xchg
cmpsl
scas
adc
mov
inc
xor
sub
dec
mov
out
push
sarl
test
dec
mov
mov
xchg
pushf
bound
sbb
hlt
test
cmpsb
mov
jp
into
xchg
jno
hlt
test
shlb
pop
dec
lods
mov
jle
es
xor
popa
mov
dec
jns
adc
mov
xor
mov
hlt
fwait
jnp
fisttpll
pusha
mov
pusha
mov
fildl
hlt
xchg
mov
fnsave
push
and
push
inc
pcmpgtb
xor
mov
pop
ja
lods
pop
mov
mov
inc
push
iret
inc
cld
lcall
movsb
mov
adc
in
ja
mov
shrb
decb
movsl
js
aad
fcompl
aam
push
mov
adc
push
mov
xlat
sub
repz
cmp
ja
jb
pop
push
ds
xchg
push
push
mov
loop
sbb
dec
shrb
leave
jno
push
test
jle
sbb
mov
imul
jbe
lret
sbb
fs
fwait
div
or
sarb
daa
lret
and
push
cmpb
xchg
std
hlt
mov
cmc
out
loope
lods
and
nop
mov
dec
ss
mov
imul
rcl
clc
fstpt
or
inc
hlt
push
mov
lret
cmpsb
cmp
dec
adc
push
inc
lret
and
fists
lahf
shlb
push
movsl
out
xchg
jecxz
addr16
iret
mov
or
mov
add
daa
lcall
add
xchg
movsb
mov
mov
das
pop
jl
sub
aaa
icebp
scas
xchg
push
jge
test
or
test
or
movsb
xchg
arpl
fiadds
fstps
and
jl
xor
pop
addr16
or
insb
xchg
sahf
or
out
or
les
and
push
ja
push
fmull
or
jp
inc
lret
jg
test
imul
rorb
cld
rcrb
mov
add
leave
shrb
sub
rorb
in
inc
cmp
dec
pop
les
movsb
xor
sbb
jl
shr
sbb
dec
xor
je
mov
sub
imul
push
imul
int3
int
adc
mov
xor
cmp
cmp
jno
lock
cmp
cmc
sahf
inc
sub
pop
fcomp
cmp
int
inc
or
fs
cmp
push
sti
push
repnz
stc
xchg
int3
add
xchg
push
cmp
mov
arpl
bnd
mov
pop
sti
add
push
mov
cmp
mov
lds
leave
cmpsl
daa
jbe
fstp
mov
cld
adc
jae
mov
aas
aad
fildll
mov
or
cmp
or
fs
pop
inc
aaa
mov
mov
adc
jo
sti
jo
add
xor
adc
es
xchg
xchg
sbb
pusha
inc
xchg
and
es
pop
mov
arpl
dec
fs
fcomps
lcall
nop
mov
rorl
icebp
sbb
test
sbb
mov
dec
inc
xchg
add
xor
xlat
je
xchg
cmp
dec
mov
inc
je
xchg
xor
cmp
push
add
cmpl
cs
push
xor
insb
jo
test
pop
mov
or
or
lods
test
jg
es
stos
je
les
test
cmpsl
mov
sbb
popa
je
or
rcrb
push
adc
cs
xchg
pusha
in
mov
xchg
fstps
pop
ss
ja
fcomip
ret
out
xchg
pushf
sub
imul
stos
and
mov
ficompl
scas
mov
outsl
jl
and
mov
pop
ja
push
addr16
add
ja
add
lods
push
or
xor
out
adc
fst
adc
inc
xor
imul
mov
test
aaa
xchg
inc
sbb
mov
lret
add
decl
xorl
jb
lock
adc
sub
inc
sahf
add
sub
xchg
pop
cmp
cld
and
dec
add
fwait
or
scas
insl
scas
xor
loope
shll
or
inc
cmpsb
or
shl
sarb
mov
xchg
cmp
dec
sbb
mov
ds
pusha
leave
pop
sbb
xor
mov
cltd
aam
mov
mov
je
test
cmp
xor
aam
sub
mov
outsb
cmpsb
pop
mov
pop
xchg
xchg
mov
add
and
stos
mov
das
dec
mov
or
in
addl
and
mov
stos
aad
pusha
scas
push
or
sbbb
jno
je
insl
aam
push
lcall
popw
addr16
xor
out
mov
lods
inc
rclb
dec
es
dec
pop
dec
fwait
ljmp
cmp
adc
ffreep
int
sub
inc
pop
gs
jne
or
sbb
in
mov
and
lea
sbb
arpl
mov
pop
in
jne
test
cld
xor
mov
shll
ljmp
roll
push
ds
rcl
dec
ret
fstl
mov
ret
popf
mov
xor
idiv
push
in
pop
ret
outsb
cmp
bndldx
mull
xchg
jo
pop
sti
xor
inc
inc
negl
rclb
or
mov
or
iret
nop
movsl
push
xchg
fisttps
dec
daa
aad
cmp
decb
and
jl
adc
loop
xchg
cmp
pop
lahf
mov
imul
xor
cmpsb
add
jo
xchg
push
int3
lret
inc
push
and
sti
inc
mov
cmpsl
mov
int
or
insb
sbb
fisubs
inc
inc
push
add
rcl
test
addl
shrb
cltd
iret
sahf
stos
daa
into
fldcw
jge
test
mov
in
xor
out
dec
int
clc
into
repnz
push
add
pop
or
popf
into
mov
add
push
jae
xchg
cld
outsb
dec
pop
andb
push
cmpsb
insl
push
loopne
mov
das
test
xor
mov
xchg
stos
dec
cmp
pop
jo
mov
ja
mov
iret
into
ficoms
pop
mov
jp
ds
push
dec
std
mov
insb
mov
add
leave
fstl
iret
dec
cmp
test
int
inc
mov
mov
in
into
fsubrs
aas
pop
rorb
mov
adc
inc
mov
mov
cmp
ret
cmp
dec
xor
cmp
out
dec
cs
xor
ja
xchg
or
mov
xchg
cld
test
movb
ja
daa
add
adc
das
decb
push
adc
stos
xchg
pop
aaa
pop
pop
in
push
add
xor
mov
inc
mov
or
lret
cwtl
pop
out
jnp
insb
sub
push
jmp
xchg
adc
mov
add
mov
hlt
dec
jo
push
out
pushf
sbb
jb
adc
mov
inc
mov
movzwl
jne
push
mov
iret
push
add
aam
adc
cmpsb
repnz
xchg
inc
xchg
inc
mov
imul
xor
dec
add
shll
popf
mov
push
jbe
sarb
cltd
push
xor
ja
add
lock
xchg
mov
mov
push
lret
cmp
jne
dec
out
gs
in
add
hlt
inc
pop
mov
pop
leave
loope
mov
sub
add
xchg
loop
pushf
mov
push
hlt
bound
pop
mov
jnp
outsb
dec
inc
data16
xchg
and
aam
sub
push
dec
popf
jle
cs
outsb
test
std
orb
dec
cmp
xchg
mov
xor
push
inc
mov
cmp
push
lock
cmpsb
in
inc
and
rolb
lcall
and
ret
adc
pop
mov
fdivp
jbe
test
or
fistpll
mov
dec
jmp
cmp
in
test
loope
test
aas
mov
or
mov
in
push
repz
push
lret
mov
fwait
pop
sar
cmp
cmp
jecxz
das
xor
mov
shr
pop
out
divb
sbb
sub
sbb
jbe
outsb
pop
pusha
test
xor
push
xor
movsb
test
xor
fsubrl
dec
arpl
lcall
ss
adc
pop
fsubl
sub
cltd
jp
out
imull
loopne,pn
outsb
xchg
jecxz
pop
rolb
inc
fsubl
movsl
jge
lret
call
lret
sbb
je
push
sbb
gs
sbb
pusha
andl
push
jbe
out
pop
lret
jns
sub
xchg
punpckhwd
rclb
sarl
inc
dec
inc
push
add
movsl
je
xchg
decb
and
psllq
mov
xor
imul
orl
xor
jecxz
add
outsb
push
lahf
push
fadd
sub
dec
push
jmp
mov
dec
dec
mov
aas
sub
fwait
xor
mov
jge
adc
test
lret
dec
int3
push
xchg
jg
outsl
scas
add
subl
ss
sbb
mov
mov
data16
mov
push
ja
jnp
or
into
jns
jns
in
mov
push
fists
aad
lods
inc
sbb
rcrb
sbb
pop
sahf
push
push
mov
dec
aam
xlat
lret
rcll
push
fwait
push
add
adc
cmp
or
xor
cmpsb
repz
push
loopne
xorl
fstpt
mov
lea
shlb
shl
ds
inc
aad
je
icebp
or
sub
mov
cmpb
cmpsl
out
mov
sbb
mov
xchg
mov
jbe
aad
loopne
mov
pop
pop
ss
imul
mov
out
jecxz
push
out
pop
mov
addl
mov
xor
inc
cli
mov
lds
in
stos
pop
xor
iret
lret
xchg
sbb
push
sbb
mov
outsb
adc
xchg
pop
xchg
es
inc
addr16
pop
pop
sub
rorb
cmpsl
ss
shl
pop
lret
in
test
push
mov
xchg
inc
repnz
cvttps2pi
es
sti
pop
arpl
ror
iret
outsl
push
xor
iret
mov
adc
xor
sub
jo
cmc
cli
into
mov
adc
inc
pop
mov
jp
dec
cmp
mov
inc
mov
popa
das
xor
pop
push
enter
mov
jl
int
out
pushf
addr16
add
sub
mov
stos
xor
cltd
loope
or
pop
int3
lcall
cli
add
stos
or
jno
dec
movsb
addl
repz
rorl
lock
mov
mov
cmp
std
mov
cs
push
popf
jecxz
jbe
and
loop
xchg
or
repz
push
dec
sub
sahf
dec
xchg
jp
mov
lods
daa
jge
sbb
in
jmp
sub
cmpb
fs
and
pop
decl
out
sub
mov
mov
xchg
sar
or
jne
pop
add
push
les
dec
ss
xor
jns
call
fmull
and
xchg
dec
mov
idivl
jmp
xchg
and
testb
rcll
jo
shll
daa
cwtl
imull
scas
shlb
rcrb
addr16
jl
fdivs
testl
ss
cmp
push
andb
mov
jle
in
cltd
aam
in
jmp
lds
lret
add
adc
sbb
xchg
das
in
jnp
imul
mov
xchg
icebp
mov
out
inc
or
xchg
mov
push
addr16
cmpb
jecxz
je
fdivs
outsb
inc
shll
test
add
mov
sub
jl
mov
cmp
into
pop
pushf
mov
out
popa
add
or
add
dec
xchg
pop
test
adc
fsubl
dec
or
inc
pop
sbb
push
mov
jle
mov
fistpll
ss
lcall
hlt
in
mov
pop
or
leave
inc
insl
jo
add
xchg
cld
in
fisubrl
int3
pop
enter
xor
push
shlb
push
sbb
pop
movsb
ret
pop
out
pushf
insb
mov
or
sbb
imul
sub
or
insb
xchg
mov
ljmp
mov
test
xor
loop
and
test
dec
cmp
xlat
sub
fdivs
ret
mov
and
sub
js
sub
hlt
stc
pusha
and
call
push
mov
jge
xorl
xor
push
xchg
pop
lea
punpcklbw
sbb
pop
sub
aad
adc
lods
test
push
sarl
dec
in
push
sub
pop
adc
imul
stos
and
int3
jle
push
cld
popf
std
jle
inc
scas
mov
inc
cli
dec
cmpsb
lcall
pop
repz
dec
repz
push
jne
mov
scas
pop
icebp
mov
mov
add
xchg
sahf
ljmp
mov
fbstp
inc
out
shr
insl
cmp
xchg
jecxz
pop
xor
fsts
sbb
fadds
jge
add
gs
xchg
pop
and
gs
inc
xor
mov
rol
dec
push
xor
dec
xchg
movsl
push
push
out
pop
or
rcll
and
fnstsw
xor
pop
dec
pop
shll
stos
lahf
xorl
mov
sub
inc
nop
push
mov
test
pop
cli
jbe
cwtl
lods
jne
sbb
es
in
seto
or
ss
lds
cwtl
mov
enter
movsl
icebp
jnp
sbb
fwait
cmpb
mov
cs
shll
movsb
rorb
mov
cmp
xchg
sub
add
jecxz
outsl
mov
ss
mov
js
mov
loop
data16
push
pop
push
pop
xor
xchg
addr16
add
mov
ffree
mov
icebp
mov
adc
arpl
adc
pop
cltd
jae
push
push
and
pop
lret
jne
out
scas
mov
pop
cmpsb
jae
shll
adc
adc
add
xchg
jmp
clc
sbb
or
jno
sub
leave
fwait
in
and
jb
push
xor
add
push
xlat
rcrl
data16
sub
jp
push
lock
iret
mov
outsb
mov
sub
out
mov
mov
pop
out
cmc
push
andb
loopne
jmp
test
dec
pop
insb
lods
mov
xchg
data16
divl
flds
loop
cmpb
inc
xchg
xchg
lcall
jg
scas
and
stos
aas
sbb
lea
cmp
paddw
std
and
mov
xor
mov
arpl
and
and
repz
test
mov
fyl2xp1
or
mov
push
inc
movsl
push
or
or
mov
rclb
mov
roll
out
adc
pusha
out
test
cmp
sbb
jnp
push
adc
ss
loop
pop
fs
push
iret
je
out
aas
orl
mov
xor
jbe
inc
cmp
ss
loopne
cld
call
arpl
cs
sti
mov
das
and
adc
add
xlat
inc
jbe
fwait
pop
and
les
cltd
fsubs
clc
andl
add
dec
xchg
dec
add
dec
mov
and
sub
daa
jno
test
xchg
hlt
mov
bound
cmp
mov
js
sub
lret
jg
popa
mov
sarb
mov
lds
dec
out
dec
stc
in
inc
std
fsubs
repz
xor
bound
adc
pop
cmpsb
jo
inc
iret
mov
icebp
stos
aaa
mov
inc
imul
shrl
sar
stos
fs
inc
pop
inc
inc
pop
loop
fsubs
xor
mov
addl
fsts
jb
out
dec
cmp
arpl
aas
pop
cmp
inc
nop
xchg
xchg
ret
add
jne
mov
arpl
js
push
fwait
inc
or
mov
mov
xor
ficompl
fnstsw
loopne
out
xchg
jno
sbb
mov
cmp
leavew
xor
jle
mov
out
adc
fidivs
add
sbb
add
jno
fidivrs
les
xchg
gs
imulb
and
js
push
xor
adc
movl
cmpsb
sub
push
stos
ja
leave
pop
adcl
mov
jmp
cmp
xor
jae
cmp
mov
inc
ret
test
pop
mov
subl
cld
movl
cmpsl
xchg
sub
pop
pop
lea
and
sbb
fidivrs
sarl
movsb
setne
mov
lock
fidivl
push
lods
ret
mov
mov
pop
iret
outsl
in
aas
push
mov
mov
push
add
cli
pop
daa
adc
rorl
mov
push
push
push
inc
shrb
mov
pcmpeqw
fildll
sbb
dec
jp
inc
inc
mov
mov
lea
cmpsl
in
scas
lahf
and
std
xor
bound
xor
mul
scas
fmull
sub
aam
loopne
cld
dec
dec
cmp
jo
sahf
clc
inc
mov
add
movsl
jg
in
mov
xchg
jg
pop
aas
or
imul
inc
addr16
push
in
rolb
lret
mov
inc
cmp
sub
pop
jle
lods
mov
pop
popf
dec
out
lds
xor
cld
mov
and
mov
pop
mov
cmp
test
repz
cmpsl
pop
dec
cmp
std
and
sub
test
mov
fidivs
aaa
xor
rolb
mov
add
aas
out
xor
mov
push
ficompl
mov
xchg
and
pop
add
sbb
inc
xchg
out
pushf
es
xchg
repnz
xor
mov
js
xchg
adc
loope
lea
aam
push
mov
repz
stos
push
icebp
shl
outsb
aas
pusha
lret
or
push
gs
in
push
push
fsts
cld
jg
aam
xor
pop
push
jp
add
push
and
int
bound
and
out
sahf
dec
inc
ss
jbe
push
test
add
inc
add
cmp
fstps
jno
xchg
add
bnd
in
cmp
repz
dec
fbld
dec
jl
sbb
cmpsb
cmpsb
mov
xchg
push
shlb
fsubrl
dec
sub
sbb
pop
mov
push
iret
orl
push
in
lods
call
out
and
pop
dec
inc
repnz
addr16
aam
movsl
mov
sbb
out
scas
ss
add
dec
out
sar
icebp
dec
nop
sbb
jge
xchg
in
aas
xor
push
stos
add
or
cmp
or
dec
push
mov
bound
mov
push
dec
in
mov
loop
xchg
into
push
fdivrp
sbb
fimuls
shrl
repnz
hlt
js
adc
jbe
mov
jl
ret
fstpl
dec
fiaddl
fwait
inc
and
mov
pop
sub
rolb
lock
or
cmp
pop
jnp
mov
xchg
in
and
scas
stos
pop
ss
stos
sti
mov
push
cwtl
adc
int3
sti
cmpsb
inc
mov
cmp
lock
ja
push
adc
aam
insb
test
add
sbb
stos
xchg
bnd
iret
cmp
out
aas
mov
out
fiadds
in
movsl
test
mov
jbe
mov
leave
repz
adc
jecxz
pop
or
int3
add
mov
or
pop
fdiv
jle
mov
imul
aas
jg
mov
adc
jle
cmp
loop
outsb
inc
adc
movsb
stos
jp
fsts
sarl
adc
jbe
xor
cmp
sbb
insl
add
mov
xchg
cltd
xor
std
jp
pop
ljmp
mov
inc
dec
cmpsb
stos
jecxz
cmp
push
filds
add
je
push
cli
jo
mov
push
pop
mov
loope
xchg
jns
sub
mov
xchg
fwait
mov
cmpsb
push
adc
sub
or
ds
and
sbb
inc
in
out
add
add
ja
dec
bound
out
lahf
push
bound
ss
rorb
adc
imul
movsl
in
cmc
xor
mov
mov
pop
and
cli
stos
xchg
push
sahf
test
inc
jmp
sub
pop
or
pop
int3
xlat
mov
test
subl
push
xchg
out
scas
lahf
into
jg
lock
sub
dec
ret
xor
mov
loop
dec
push
inc
shlb
xor
xchg
mov
sub
push
adc
mov
inc
mov
mov
xchg
lea
or
xor
fcomps
aaa
mov
jbe
test
xor
push
bound
inc
mov
js
inc
arpl
jmp
shll
and
xchg
test
bound
insl
out
paddusw
shrl
mov
fmul
and
fs
cmp
in
ds
mov
and
ret
test
lods
cmp
or
in
jbe
imul
arpl
mov
fldl2t
sbb
push
mov
pop
xchg
add
into
mov
xchg
lods
pop
test
adc
inc
call
ja
xchg
icebp
add
jbe
jb
sub
push
add
sahf
xor
in
or
ja
stc
loop
repnz
mov
pop
sub
mov
xor
sbb
mov
ja
shlb
mulb
fsubl
andb
popa
push
inc
cs
ss
pop
sbb
fisubl
sub
sub
jo
push
sbb
hlt
pop
inc
hlt
fdivr
shlb
mov
adc
or
mov
jno
mov
sbbl
sbb
sbb
aam
shll
cmp
xor
sti
fnstsw
mov
movsl
inc
lcall
sub
jp
fs
loope
loopne
stos
or
divb
push
sub
stos
sub
push
inc
and
jecxz
jmp
xchg
lcall
les
lret
inc
clc
repnz
rolb
loop
dec
push
std
in
stc
xchg
add
or
loop
arpl
push
lods
mov
sahf
adc
xor
xor
pop
mov
push
rcll
jl
imull
jmp
ja
inc
fwait
dec
outsb
sti
or
cmpsb
mov
pop
int3
fldt
popf
cmc
call
pop
xor
cld
idiv
stc
pslld
sub
pushf
aad
loop
testb
add
lcall
shll
es
cli
cwtl
xchg
sub
push
jns
or
test
aam
push
call
lock
sub
sbb
sbb
mov
sbb
or
and
mov
mov
out
and
add
test
ret
xchg
xor
cwtl
iret
pop
jl
lods
add
in
lahf
xchg
inc
dec
repz
cmp
inc
push
xchg
or
cmc
mov
lahf
xor
jbe
lods
lds
loopne
test
clc
rorb
inc
and
push
cmp
int
inc
and
push
or
sbb
jne
push
lods
loop
daa
xorl
in
roll
mov
xchg
or
and
fs
lds
fisttps
or
push
push
shl
lcall
sbb
jne
rol
int
or
aad
jle
sbb
pop
pusha
mov
lahf
and
sarb
pop
xchg
lds
lods
clc
pop
lods
xlat
in
mov
push
outsl
fcmovnb
enter
les
loope
mov
adc
shll
mov
sbb
lods
bound
imul
mov
repz
push
pop
and
sub
xchg
add
lahf
subb
pop
mov
je
and
cli
sbbb
inc
aaa
bound
ret
aaa
hlt
fldcw
mov
and
notb
lds
xor
mov
jp
bound
dec
insb
outsb
sar
scas
addr16
fstpl
lds
lret
and
xchg
and
ret
test
outsl
xchg
int3
jle
fisttps
add
cmc
mov
cltd
insb
push
in
cwtl
rorb
xor
addl
add
enter
mov
aam
and
call
mov
lret
scas
mov
dec
in
jecxz
pusha
or
pop
lahf
xor
and
mov
jp
int
jnp
jle
jno
pop
xchg
andb
add
push
stc
sbb
jle
push
jae
sbb
xor
dec
sarb
aas
adc
push
sub
sti
and
jecxz
xor
lcall
mov
out
flds
mov
pop
int
xor
or
in
jne
cmp
sub
lahf
cltd
lret
mov
mov
push
test
jns
stc
pop
xor
fnstsw
add
jp
jg
xchg
mov
mov
xchg
gs
addr16
enter
jmp
mov
outsb
inc
cmc
add
mov
fcoml
imul
or
lea
inc
pop
jo
iret
insl
mov
cmp
xchg
push
dec
adc
je
xor
sbb
out
js
test
jl
xchg
xor
pop
inc
das
in
mulb
jg
inc
and
addl
cwtl
out
add
mov
out
adcl
daa
scas
in
and
arpl
dec
push
push
jnp
pop
fisubs
xorb
int3
ficomps
aad
sub
or
incl
les
sbb
fcomi
dec
xchg
and
cli
sbb
stos
sbb
mov
cmpsb
scas
lds
jae
xchg
mov
je
mov
mov
dec
stc
pop
mov
into
lea
push
xor
out
in
push
pop
sarl
fisubl
les
pop
jl
sbb
movsb
pop
sub
and
aam
dec
shll
leave
xor
movsl
sbb
sub
adcl
dec
jecxz
push
dec
push
inc
cmp
pmaxsw
xchg
cld
dec
scas
js
xor
ljmp
stc
mov
fnstcw
cmp
mov
fcmovnb
add
inc
int3
sarb
lahf
fsubrl
jmp
push
out
nop
pop
cmp
push
inc
inc
push
mov
bound
ja
xor
popf
cli
sbb
jmp
xchg
lock
mov
sub
ds
xor
lcall
xchg
jne
xor
inc
cmc
push
lock
inc
mov
and
pop
outsb
insb
xchg
inc
mov
or
push
sbb
adc
xchg
fs
test
adc
rorb
sbb
dec
cmp
ss
mov
dec
loop
fcoms
imul
sbb
xchg
movsl
in
inc
cmp
push
loopne
mov
jl
sbb
fwait
inc
lret
stos
adc
xor
enter
jo,pt
insb
out
stc
lods
pop
daa
xchg
mov
test
scas
clc
pop
imul
mov
jbe
mov
imul
gs
enter
mov
jp
mov
aam
xchg
mov
push
mov
adc
mov
push
mov
pushf
jl
mov
pop
inc
loope
sub
mov
mov
test
mov
test
lahf
fcoml
mov
mov
push
aam
xor
and
inc
mov
imulb
movl
jb
push
aam
es
bound
mov
pop
imul
push
xchg
movsb
stc
or
push
insb
xchg
sbb
stos
push
mov
fs
cmpl
std
hlt
pushf
and
cld
sbb
and
mov
add
cwtl
roll
xchg
js
mov
or
push
ljmp
ds
adc
test
mov
rorb
jns
push
popf
data16
inc
or
mov
cmp
mov
ret
lds
mov
pop
and
fcoms
mov
shlb
cld
std
add
or
scas
test
push
loop
test
fldl
add
lods
or
fists
pop
js
movl
jge
int
cmp
psubsb
pop
mov
out
ds
mov
data16
inc
dec
icebp
mov
dec
cmpsb
out
pop
popf
push
cmp
pop
jecxz
dec
mov
pop
sbb
add
xchg
popf
movsl
out
jl
cwtl
scas
shlb
jmp
mov
sbb
stos
or
int3
mov
inc
push
lret
pop
lods
enter
js
jo
pop
cmc
xor
sub
lcall
pop
inc
cmp
stc
in
push
ljmp
bound
scas
dec
xor
imul
push
mov
scas
cmp
int
mov
sahf
int
sub
adc
pop
inc
pop
and
sbb
and
out
jns
push
cld
je
push
jae
fwait
cs
jmp
sub
mov
push
pop
xor
or
push
insb
movsl
leave
cmc
fcomp
pop
lock
cmpsb
fidivrl
mov
dec
lock
nop
xor
daa
cs
test
mov
imull
mov
and
cltd
fs
adc
int3
and
inc
mov
pop
arpl
cmpl
xchg
xchg
out
jmp
sahf
inc
xor
stc
pop
xchg
in
repnz
push
cmp
dec
and
xor
xchg
cmc
shll
dec
pushf
sbb
jp
xor
gs
adc
cli
cltd
rcrl
in
or
jnp
inc
mov
mov
sbb
into
cmp
popl
shld
add
ss
iret
in
push
insl
mov
repnz
push
dec
push
jg
mov
shrb
sub
cwtl
div
loope
lret
inc
lret
mov
fdiv
mov
xlat
jb
lcall
retw
or
and
fmuls
lods
shrl
jnp
je
fisubrs
fstpl
or
pop
mov
test
pop
sbb
xor
mov
jbe
xor
xor
aas
push
sub
sarl
dec
fwait
mov
adc
mov
js
aaa
lods
sbb
pop
dec
mull
or
test
dec
add
push
sbb
jle
mov
xorl
mov
lock
xchg
out
movsl
add
mov
add
notb
pop
int3
ret
nop
int
xor
lock
rol
sbb
dec
inc
adc
testl
popa
filds
dec
mov
cmp
ret
pop
pushf
mov
rolb
lea
dec
out
xchg
daa
inc
test
fidivrl
mov
xchg
xchg
out
lods
and
aad
nop
fwait
mov
rclb
xchg
xchg
add
cmpb
aas
pushfw
int3
push
pop
adc
adc
fwait
and
and
push
mov
out
leave
push
lcall
out
sbb
clc
ljmp
test
lret
xchg
ret
push
inc
push
xchg
iret
mov
push
mov
call
mov
cli
xchg
leave
sarl
mov
aaa
lret
dec
jl
pop
int3
xlat
hlt
xor
pop
hlt
pop
adc
dec
stos
mov
mov
gs
js
out
push
push
insl
jae
push
adc
mov
test
andl
push
push
sbb
dec
loop
mov
pop
lret
shlb
je
lea
outsb
jmp
mov
bound
inc
test
pop
cwtl
fldt
pop
push
and
cmp
gs
and
aas
inc
cs
stc
cmpsb
xstore-rng
cmpsl
add
xchg
mov
adc
ljmp
cmp
or
sub
pandn
dec
xchg
inc
imul
testb
jae
xor
pop
and
push
sub
hlt
out
cld
pop
lods
xor
xor
dec
ds
and
mov
xchg
addl
dec
adc
pop
cmpsb
push
jbe
mov
inc
sub
pusha
jg
insl
jae
fdivr
xchg
xchg
cmc
mov
push
shlb
dec
adc
movsb
inc
mov
mov
pop
adc
shll
out
insb
cs
jbe
fisubrl
or
fidivs
inc
jne
in
push
in
mov
cli
mov
loop
cmp
imul
mov
pop
ror
repnz
mov
pop
mov
loopne
movb
or
mov
enter
cmp
shl
pop
sar
sti
leave
sub
ljmp
mov
sbb
sbb
xchg
or
cmp
push
shlb
lods
stc
in
aaa
aas
and
pushf
mov
nop
aam
outsl
and
sbb
lahf
xor
and
mov
adc
pushf
test
xor
dec
jns
or
mov
sahf
add
mov
pop
pop
outsl
or
leave
mov
sahf
push
adc
cmpsl
in
rcrb
mov
ffreep
pop
and
mov
pop
insl
sbb
and
out
cs
push
mov
loopne
push
inc
pop
pusha
mov
outsl
sub
jg
insl
xor
xorl
cld
push
shll
inc
push
sti
arpl
stc
divl
add
mov
sbb
and
jmp
add
pop
or
loope
jne
outsb
fimuls
dec
adc
mov
psubd
sub
xchg
test
jle
adc
aam
stc
ljmp
mov
cmp
sbb
inc
cmp
jg
push
mov
lods
out
aam
enter
push
adc
mov
add
adc
jns
dec
std
js
repnz
pop
and
dec
mov
sbb
pop
ret
push
rcll
fpatan
xor
xor
in
pusha
adc
cmpsb
hlt
or
lods
mov
pop
mov
adc
xchg
jo
xor
mov
mov
lret
int3
xchg
fistps
andb
push
stos
aam
jo
popf
jns
into
sbb
xlat
shl
pop
data16
int3
sbb
sbb
cmp
lds
mov
leave
sbb
jp
rolb
ss
mov
out
lahf
cmpsl
mov
es
mov
inc
cmp
bound
cmp
in
rcrl
in
roll
fs
out
xchg
imul
xor
xor
stc
jge
fdivs
pop
push
fnstcw
xchg
out
pop
inc
ljmp
mov
jbe
mov
push
movsb
adc
cmp
inc
outsb
std
mov
loop
xchg
add
bound
rorl
add
sti
insl
xor
repnz
push
push
adc
je
push
dec
xlat
pop
cmp
jns
sbb
ja
fisubs
ljmp
adc
jg
std
cs
xor
jb
in
cmp
test
add
flds
ja
cmpsl
sahf
jnp
mov
cli
shlb
xchg
cltd
out
mov
lods
shll
cmp
clc
rclb
loopne
push
hlt
repnz
sub
sub
jns
cmp
daa
or
sbb
mov
js,pt
pop
idivl
cmp
push
jae
mov
adc
pop
jge
mov
and
int3
int3
jp
pop
xor
add
iret
popf
cmpb
cmc
cmp
test
outsl
xchg
out
insl
inc
aad
sbb
out
cmp
mov
int
cli
int
pop
mov
roll
inc
rcrl
mov
dec
cmp
jb
mov
sub
xchg
imul
jbe
mov
cltd
rcll
repz
mov
pusha
movsl
push
outsb
aam
addr16
sbb
jb
mov
pop
out
mov
dec
incl
addr16
lods
int
gs
cmp
xchg
push
add
int
xchg
mov
pusha
ljmp
xchg
cld
sbb
pop
fistps
push
or
add
dec
cld
flds
jb
ret
out
jae
bnd
in
xchg
jle
mov
loope
mov
subl
roll
insb
fldenv
aam
inc
into
imul
popa
imul
adc
pushf
mov
mov
sti
lcall
jbe
inc
notb
mov
mov
ljmp
lods
xlat
pop
push
ljmp
cmc
out
jmp
and
push
mov
lahf
lods
fadds
add
adc
pop
xor
je
mov
and
xchg
loope
dec
jmp
aam
push
sar
shl
jmp
mov
enter
and
imul
cmp
and
pop
cmc
test
ljmp
add
cmp
xchg
clc
sub
mov
and
fs
mov
add
lea
and
fisubl
mov
mov
lret
imul
pop
adc
mov
shll
mov
or
aas
cwtl
or
addr16
and
jno
xlat
adc
jo
test
cmp
aam
adc
cmp
in
rcrb
sarl
mov
lock
inc
adc
dec
dec
sbb
cmpsb
push
out
into
inc
addr16
imul
sub
push
add
shr
je
xchg
outsl
aam
mov
jo
fdivs
lret
inc
push
jno
in
bound
lods
mov
cmpb
popf
loop
int
sbb
push
push
pop
data16
or
pusha
cmp
inc
push
xchg
stc
mov
test
rorb
pop
add
gs
mov
jae
loope
retw
or
popl
mov
stos
dec
popa
bound
call
add
movsl
pop
sbb
sub
mov
xchg
fidivs
int3
xchg
mov
push
out
aam
out
pop
outsb
leave
push
pop
pop
imul
cwtl
xchg
ja
push
mov
xor
inc
dec
mov
into
fldenv
push
xlat
mov
jmp
sbb
sub
loop
pushf
mov
dec
xchg
sub
or
fs
pop
lret
jmp
or
and
mov
test
add
in
decb
test
in
xor
xchg
xchg
test
adc
mov
shrl
sbb
adc
negb
lds
xchg
adc
ficoms
out
sbb
lret
in
fdivrs
fwait
and
sub
xor
add
ljmp
sbb
and
pushf
jg
sbb
mov
cld
cld
stos
lea
int3
xchg
je
xor
fsubl
ja
popa
sbb
in
xor
call
frstor
test
add
jmp
call
mov
dec
inc
int
in
mov
fdiv
arpl
fsubl
data16
inc
std
dec
jecxz
aaa
lea
push
xor
and
ret
adc
mov
outsl
clc
xor
or
dec
mov
lret
inc
sub
cmp
mov
cmp
inc
lock
xlat
xor
lcall
cwtl
int3
and
xchg
fwait
mov
xchg
push
stos
adc
pop
or
dec
jae
or
push
roll
xchg
aas
jmp
lods
jl
ja
push
aad
inc
sub
xor
add
xor
shll
xor
arpl
inc
iret
jno
call
aas
jo
mov
mov
add
cli
push
sbb
ret
and
roll
mov
mov
xchg
mov
xchg
popa
lret
inc
rcrl
mov
push
in
sbb
cltd
ror
test
pop
push
inc
fnstsw
push
fldl
scas
xor
cli
jns
insl
fcompl
les
mov
test
ds
test
push
iret
ljmp
jg
scas
lahf
xchg
or
es
ds
orl
arpl
jle
mov
pop
icebp
sbb
sub
cmpsl
inc
sbb
aam
adc
lods
pusha
mov
ret
testb
mov
dec
adc
dec
fwait
jbe
push
and
cmp
movsb
dec
cmp
or
fistps
rorb
mov
insl
push
je
or
and
adc
dec
fs
add
in
aam
int
and
adc
imul
sbb
lcall
fsts
leave
jp
into
shrb
mov
fsubl
pop
mov
int
xor
inc
sub
sbb
stc
mov
xchg
mov
in
inc
fstps
mov
sbb
push
test
add
pop
addr16
adc
and
mov
jbe
mov
mov
cmp
test
pop
jge
stos
test
ror
jb
sub
loop
adc
roll
inc
arpl
int3
jns
call
inc
les
aas
testl
mov
and
movsb
add
test
pushf
imul
movsl
mov
in
cmp
push
aaa
rolb
hlt
cli
adc
xchg
int3
cmp
push
scas
lock
out
fstl
mov
aad
sub
cwtl
lret
les
dec
outsl
lock
dec
jecxz
add
sub
sbb
in
in
cld
in
or
inc
push
mov
or
mov
xchg
jns
jge
test
fdivs
shr
scas
enter
and
lods
js
fcompl
dec
ja
add
stos
mov
add
cli
push
mov
mov
xor
out
mov
and
add
dec
push
mov
xchg
adc
je
sub
adc
pop
pop
fwait
mov
cmp
or
and
loopne
pushf
rolb
mov
cwtl
lock
imul
fcompl
adc
cmp
cmp
jbe
dec
and
outsl
loop
and
xor
lea
fldt
xor
lods
shl
popf
fwait
loop
add
and
ret
stos
leave
subl
dec
nop
push
outsl
hlt
mov
in
dec
xchg
lds
pop
lods
xchg
lods
sbb
sbb
pusha
cmp
cmpl
in
cmp
dec
mov
lods
dec
push
cmp
in
loope
mov
sub
icebp
mov
jge
xchg
movb
inc
ja
dec
into
in
mov
pop
pop
cmpb
mov
into
pop
out
cmp
ss
push
gs
in
lds
xor
mov
xlat
and
jne
xchg
inc
notl
incb
inc
mov
adc
outsb
loopne,pt
sub
push
call
lcall
push
cmc
iret
inc
aad
test
in
pop
jmp
push
and
adc
mov
fistps
leave
rorl
sbb
or
leave
sub
and
cmp
in
loop
cmp
push
inc
stc
lahf
std
pop
fwait
shlb
mov
mov
je
cmpsl
xlat
xor
lret
insl
pop
frstor
loop
repz
aad
mov
xchg
pop
imul
lea
mov
arpl
test
adc
mov
mov
fcoms
or
lock
incl
mov
jno
hlt
test
aad
mov
stos
sbb
insl
std
repz
cmp
and
adc
mov
fbld
ljmp
inc
push
pop
rolb
and
test
dec
cmc
jbe
xchg
outsl
inc
jmp
dec
xchg
jo
adc
sbb
adc
rorb
rolb
jns
or
shr
mov
add
daa
xchg
xchg
or
pusha
sub
mov
out
mov
add
and
scas
cmp
jecxz
adc
lods
data16
dec
sti
int
adc
pop
out
mov
push
xchg
aaa
ficoms
cmpsb
fcomip
aad
pop
imul
push
xchg
in
mov
outsb
test
dec
push
dec
xor
sub
sub
mov
stos
sti
jl
lds
scas
fsubs
sub
loope
and
call
pop
pushf
movsb
jge
push
cmp
ds
arpl
lds
std
cltd
mov
adc
adc
sub
ss
xor
dec
inc
in
add
mov
jg
sub
dec
shrl
pushf
test
jl
sahf
xchg
lcall
js
mov
jg
adc
hlt
pop
repz
ret
push
outsb
xchg
mov
lds
call
pushf
shrb
mov
pop
add
idivb
lock
add
leave
cmpsb
or
je
jo
jle
jge
movsb
shll
shlb
imul
jbe
jae
and
mov
inc
std
outsl
dec
jp
cmpsb
dec
mov
stc
inc
xchg
fstpl
imul
stos
add
fdecstp
or
xchg
clc
es
pop
add
xor
addl
das
sub
fcomi
xor
ret
push
out
sti
jns
push
insl
jnp
add
aas
dec
stos
xorl
adc
add
subl
lahf
mov
sub
push
mov
gs
fcoms
shll
test
sarb
dec
xor
inc
mov
pusha
fstps
je
pop
fistpl
fwait
push
pop
mov
dec
faddl
xchg
dec
shll
data16
scas
inc
xchg
xor
pop
ss
popa
push
push
mov
arpl
shrl
cld
cmp
mov
sub
int3
push
rolb
dec
maskmovq
jge
pop
sub
xchg
addr16
xor
das
xor
stos
jl
cmp
push
je
rcll
ja
movsb
pop
and
rcl
add
cmpl
inc
dec
cltd
ss
adc
repz
pop
cwtl
clc
adc
cltd
jg
movsl
xor
stos
fsubrs
push
xorb
test
fxch
push
sub
rorl
repnz
loop
sbb
lea
ficoml
lds
loop
aaa
addr16
mov
int3
movsl
pop
inc
loopne
loopne
int
or
shrb
in
jecxz
hlt
sbb
push
push
cltd
inc
xchg
cli
inc
mov
xchg
mov
adc
mov
jge
jp
imul
out
mov
jle
std
pop
ret
ret
push
jg
rcrl
mov
push
adc
loopne
repz
and
sub
pop
mov
aas
sbb
movl
jae
pushf
push
and
dec
das
or
lret
or
jnp
mov
sub
filds
in
mov
mov
pop
push
cli
ljmp
pop
test
flds
sbb
jae
hlt
daa
sti
push
mov
addb
aad
ret
cwtl
or
frstor
push
popa
ja
and
imul
mov
or
les
inc
rcl
adc
xor
xchg
jae
sbb
xchg
clc
pop
add
lcall
lods
dec
mov
ficompl
and
lret
les
adc
sbb
mov
std
adc
je
ror
outsl
xchg
push
xor
cli
addr16
lahf
sbb
gs
scas
iret
test
icebp
movsb
xor
sbb
cmp
movsl
pop
outsb
add
sbb
mov
jl
mov
outsl
cltd
shlb
mov
inc
iret
push
or
mov
int3
push
add
test
sub
rcrl
dec
aam
andl
js
and
aam
addr16
lock
add
sub
sbb
push
and
out
dec
push
cmovg
addr16
xlat
out
pop
cmp
fldpi
popf
cmp
xchg
xor
adc
jnp
xor
rcl
add
addr16
xlat
jae
popf
pop
pop
cmp
xchg
fwait
shrl
arpl
add
and
and
inc
sahf
aas
jo
pop
or
mov
push
dec
xor
out
pop
inc
add
push
xchg
push
lret
mov
push
cwtl
cmpsb
mov
xchg
fsqrt
fs
sbb
das
push
pop
popa
pop
std
pop
sub
dec
mov
sub
push
ljmp
cmp
fstps
out
in
mov
jge
lods
push
inc
mov
mov
fwait
inc
pop
int
ret
and
pop
out
mov
cltd
stos
pop
jnp
dec
cli
xor
test
mov
fcompl
es
push
xchg
repz
shlb
fwait
xchg
test
push
int
mov
mov
pop
push
or
cmpsb
cld
xor
push
mov
jl
bound
rol
dec
cmp
int3
ffreep
sbb
xor
arpl
jp
sbb
shlb
movsl
pusha
mov
push
leave
lods
push
pop
cmp
movsb
pop
repz
aam
and
and
pop
dec
mov
sti
out
lret
jg
idiv
mov
fstl
aad
jbe
nop
mov
rcrl
cmp
xor
add
cs
mov
pop
push
addr16
push
sbb
xor
sarl
cltd
xor
adc
bnd
mov
mov
into
xchg
mov
clc
mov
mov
mov
neg
insb
daa
pop
adc
cmp
cli
std
cmp
mov
pusha
jbe
jo
adc
mov
cmc
stc
add
imul
fidivrl
movsl
fbstp
inc
lods
mov
in
xor
popa
test
xchg
sub
pusha
ret
jle
xchg
gs
or
fimull
imul
movsb
and
pushf
lea
or
sahf
add
mov
clc
mov
and
jb
movsl
push
xor
popl
imul
sub
pop
mov
pop
dec
xacquire
or
nop
xchg
out
inc
shll
pop
pop
adc
mov
cltd
fistpll
mov
lahf
push
jne
pop
aaa
aaa
test
int3
push
popa
imul
dec
mov
adc
mov
ja
sti
cmp
jg
and
cmp
sub
aaa
sbb
das
movb
mov
int3
cmp
shl
mov
adcb
mov
push
or
orl
in
daa
mov
mov
xchg
lahf
lock
or
sub
cmp
add
ss
fwait
push
mov
mov
add
xchg
jns
jb
inc
out
lods
dec
imul
sbb
mov
popf
pop
into
jecxz
out
add
testl
sbb
xchg
pop
leave
mov
pop
xor
iret
add
inc
push
cmp
mov
mov
dec
lea
adc
pop
stc
jecxz
push
mov
pushf
dec
call
sub
fs
mov
push
into
push
iret
pop
mul
push
jecxz
adc
repz
and
sbb
pop
scas
inc
adc
leave
dec
add
insl
lock
lcall
fadds
andb
xchg
cwtl
cmpsb
cmpsl
inc
test
pop
es
xor
dec
mov
lock
addb
and
pop
xchg
xor
pop
mov
fldcw
insb
jle
or
cltd
inc
lcall
jl
and
daa
ret
add
outsb
je
jp
fstpt
pop
in
ds
mov
nop
sub
loope
mov
jb
stos
add
add
xchg
cmp
or
repz
or
test
inc
fistpll
push
sahf
int
insb
xchg
js
pusha
adc
je
cld
jl
pop
jno
jl
mov
adc
je
mov
ret
pop
cld
add
mov
stc
shlb
cmp
push
or
push
sarb
lea
sbb
daa
paddsb
pop
inc
xchg
xor
inc
and
aad
sub
test
mov
iret
sbb
mov
mov
jns
stc
mov
cwtl
add
add
and
sbb
adc
and
test
xor
sbb
out
push
jge
rcll
or
lods
es
jae
and
cmp
fimuls
cmp
pop
loopne
rcrl
xchg
into
es
jle
mov
repnz
lcall
arpl
mov
shlb
push
inc
or
cmpsl
les
mov
dec
and
sub
pop
inc
scas
add
dec
daa
mov
dec
aaa
or
into
jp
mov
inc
in
xchg
add
mov
dec
dec
mov
mov
push
dec
loope
in
repz
adc
inc
xor
mov
fcom
cmp
lcall
adc
push
lods
mov
ja
sbb
pop
cld
aas
adc
sbb
push
dec
es
shll
pop
sub
in
mov
sbb
loop
dec
mov
scas
and
negl
xchg
and
adc
adc
lock
sahf
out
mov
mov
dec
mov
mov
xor
fucom
mov
pop
xor
sbb
mov
or
push
adc
imul
jmp
jecxz
dec
cld
xchg
cld
mov
lea
sbb
ds
mov
and
repnz
jecxz
or
sti
sbb
nop
scas
subb
sub
or
mov
adc
jmp
dec
sub
jne
aaa
xchg
sbb
sahf
pop
aaa
push
sub
pop
add
jae
int
xchg
jg
rolb
out
cmp
pop
sbb
test
jne
push
xchg
les
cmp
push
sub
das
enter
inc
outsl
inc
subl
aas
pop
das
pop
push
jmp
sarb
inc
les
nop
imul
mov
in
xlat
adc
nop
mov
fs
inc
jge
jae
xchg
imull
cltd
repz
cmc
and
jg
mov
adc
jp
xchg
jbe
ss
cmc
xorl
sub
sub
fmulp
in
leave
or
popa
add
and
lcall
mov
push
call
push
jl
jg
mov
mov
loop
pop
out
or
mov
pop
adc
mov
fistpl
lods
add
and
fsubrl
mov
stos
inc
pop
pop
add
mov
clc
shl
and
pop
popa
lea
mov
push
push
movsb
jno
std
lea
pop
fisubrs
push
adc
ret
invd
insl
out
daa
aad
movsl
es
gs
sub
mov
pop
cmp
jnp
icebp
ret
frstor
mov
lock
or
sbb
xor
dec
or
push
inc
mulb
int
lahf
in
sahf
inc
inc
fnstsw
call
enter
clc
fwait
out
add
sub
loopne
lret
cmc
leave
cld
frstpm(287
adc
mov
leave
loope
jne
sbb
ss
add
sub
jnp
scas
pusha
cmp
add
test
pop
add
idiv
test
cmpsb
enter
icebp
js
sbb
inc
imul
add
stos
push
xor
push
add
and
push
fadds
mov
scas
cmp
sbb
mov
je
cltd
add
call
stc
xchg
arpl
sti
mov
nop
ss
loopne
mov
loop
clc
pop
cld
push
mov
inc
sub
and
out
pusha
call
in
fadd
mov
xchg
push
xchg
inc
popf
sbb
sbb
int
je
inc
or
sub
pop
ja
pop
fwait
xchg
ud2
adc
xor
cmp
ss
movsl
arpl
mov
add
xchg
cmc
push
popf
mov
cmp
mov
inc
loop
xor
fbstp
xor
sbbl
cltd
in
out
call
in
sbb
aad
shll
mov
cli
into
mov
inc
push
dec
or
imul
push
in
mov
ss
loope
cmpb
outsl
jl
mov
out
scas
dec
pop
sbb
xor
xbegin
cmp
outsb
sti
mov
aaa
or
loope
push
in
inc
int
testb
add
push
icebp
add
inc
aas
pushf
push
jno
lods
jp
nop
push
daa
sti
or
insl
pushf
sub
jae
cmp
or
aam
push
mov
mov
mov
jbe
stos
addb
sub
pop
mov
mov
jle
es
fcompl
sbb
jl
pusha
cli
cs
jl
and
sbb
nop
out
les
cmp
loope
xchg
mov
cmp
pop
repnz
je
and
icebp
or
mov
pop
and
pop
hlt
xorb
int
xor
add
fs
mov
jmp
or
sbb
mov
movsb
jne
pop
and
ja
add
fsubl
lret
lds
mov
jl
mov
hlt
ret
inc
add
test
test
into
dec
mov
jge
cmp
push
inc
rcll
dec
les
xor
add
push
mov
mov
mov
mov
jo
test
lods
insl
aam
lcall
mov
pop
jecxz
pop
lock
test
ret
int3
mov
in
add
mov
add
test
pop
cltd
movsl
inc
pop
pop
jns
sbb
push
pop
bndldx
jo
or
push
jno
lods
insb
fwait
sbb
mov
outsb
inc
pushf
mov
les
mov
mov
popf
push
shrl
fsubrl
mov
lds
xchg
loope
push
lcall
mov
enter
sbb
mov
cmp
pushf
pop
mov
mov
pop
pop
jg
lea
lret
sub
insb
cli
mov
dec
and
test
scas
mov
movsl
xchg
mov
mov
adc
pushf
data16
sbb
pusha
loop
cmp
sub
add
aas
notb
je
cs
bound
lahf
bound
orb
add
dec
and
shll
lret
mov
pop
mov
mov
or
scas
js
data16
shl
cmpsb
test
cmc
fmul
push
dec
or
sbb
push
int3
pop
mov
fmull
pusha
dec
mov
inc
push
sbb
jecxz
xchg
dec
test
dec
in
pop
mov
cmpsb
into
mov
inc
std
mov
sbb
ss
push
mov
dec
dec
repz
out
call
sub
cmpl
push
jo
jns
lock
xchg
lahf
test
out
xchg
out
or
cli
xor
pop
sbb
nop
fildll
xchg
xor
scas
movb
cmpsl
xchg
fwait
scas
or
jle
cld
xor
arpl
mov
xchg
or
insb
repnz
nop
dec
jge
movsl
popa
shlb
pop
jp
xchg
adc
pusha
dec
rcrb
into
lret
push
push
xchg
outsl
pop
pop
jnp
jb
pop
ss
lock
ret
dec
cltd
dec
or
xor
mov
pop
or
scas
push
or
adc
adc
xor
mov
cmpsb
in
jns
mov
inc
mov
test
je
imull
cli
les
sbb
hlt
jb
mov
shlb
lock
imul
je
xchg
in
adc
pop
repnz
fldcw
movsl
into
push
ss
ret
cmpsb
dec
out
jns
int
int3
mov
mov
xchg
das
mov
in
mov
push
xchg
aad
push
pop
adc
stc
aad
arpl
xor
xchg
jb
cwtl
shl
pop
outsb
xchg
int
dec
rcl
lret
xchg
pop
adc
mov
push
dec
cwtl
push
adcb
sbb
pop
jmp
xor
xchg
mov
fsubl
fstpt
test
xor
dec
mov
mov
or
pop
in
xor
fimull
lods
mov
ds
mov
rolb
adc
pop
and
xchg
mov
jae
inc
pop
rorb
je
and
clc
cmp
fsubp
outsl
mov
aam
divb
mulb
and
xchg
lock
mov
or
fsubrs
add
adc
mov
popa
fbstp
push
xchg
bound
pop
sbb
xor
in
shrl
push
shrl
daa
pop
out
divl
out
frstor
repz
insl
mov
hlt
sbb
pop
push
mov
cmp
loop
push
mov
aaa
pop
flds
and
push
and
jnp
xchg
cmp
jbe
in
dec
adc
jcxz
mov
fldl
in
hlt
insl
in
sbb
mov
sbb
jmp
sub
xor
push
push
lods
std
adc
mov
mov
rcl
add
roll
out
scas
inc
mov
stos
cmp
popa
call
sti
sub
push
jle
test
das
in
cld
outsb
cmp
lock
push
push
mov
stc
lock
sbb
pop
fimuls
or
jmp
out
xchg
mov
inc
movsl
sbb
mov
pushf
pop
dec
pop
jle
pop
outsl
push
xor
xor
add
cmc
lock
mov
xor
and
push
inc
pop
in
mov
div
rcrb
sbb
jg
cmp
push
adc
mov
mov
push
scas
jae
cmp
inc
pop
cli
pop
scas
jbe
cmp
mov
xor
dec
cmp
fsts
xlat
add
xor
sub
pop
push
push
lods
cmc
stos
sub
ss
ss
es
add
ljmp
dec
mov
fnstsw
cli
jle
push
test
dec
xor
stc
int
jne
and
sbbb
out
cmpsl
adcl
push
in
mov
sbb
addr16
mov
mov
testl
jecxz
mov
xchg
inc
ss
xor
sbb
fwait
add
fcompl
mov
shrb
rorb
cwtl
pop
dec
adc
test
in
dec
or
jno
int
das
loopne
dec
popa
xchg
dec
arpl
hlt
test
test
ds
and
fwait
loopne
ss
cmp
xor
int3
mov
js
addr16
and
lcall
and
shll
out
adc
jb
enter
mov
cld
and
test
rcrl
in
pushf
lds
xor
mov
cmp
dec
inc
insb
jmp
fisubs
xchg
xor
cwtl
push
jne
shlb
mov
or
lods
loop
andb
das
mov
je
jo
add
mov
rol
sbb
enter
xchg
pop
mov
add
shlb
roll
outsl
xchg
mov
mov
mov
pop
cmp
pushf
enter
pop
xor
rclb
outsb
pop
stc
call
scas
nop
cli
negl
adc
sahf
adc
in
push
stc
into
cmp
out
mov
loope
and
outsb
add
adc
popf
das
outsl
xchg
stos
mov
xchg
and
push
insl
adc
dec
imul
push
fs
xor
dec
movzwl
ret
add
and
mov
pop
push
shlb
popl
bnd
outsb
jnp
mov
jp
and
dec
mov
test
pop
into
dec
mov
push
pop
cltd
ljmp
or
push
in
mov
rorb
or
jns
push
sbb
aas
jns
mov
push
lahf
jae
int
xorl
nop
dec
lea
mov
loop
push
out
jbe
mov
in
pop
iret
loop
in
xchg
pop
fstps
xchg
add
sbb
call
daa
xor
ds
jp
sub
dec
test
lcall
in
mov
mov
ss
pop
stc
lahf
sbb
mov
insl
pop
mov
arpl
loope
push
imul
in
mov
xor
cli
mov
sub
cwtl
daa
sahf
push
in
mov
cld
bswap
mov
sub
fwait
stc
sbb
loopne
mov
mov
jns
test
outsb
mov
dec
mov
ljmp
ret
sbb
es
pop
mov
aam
test
add
xchg
push
adc
fmuls
pushf
push
ret
xchg
xorb
loop
mov
into
inc
popa
out
bnd
xor
inc
inc
test
sbb
and
xchg
cltd
adc
xchg
int3
mov
movl
orb
dec
mov
adc
mov
inc
mov
dec
aam
mov
lcall
mov
add
fcoml
pop
incb
pushf
jecxz
test
neg
dec
mov
int
int
fadds
cltd
mov
in
mov
xor
cmp
sub
mov
repnz
mov
pusha
add
mov
int3
out
pop
jae
stos
cs
mov
sub
in
scas
js
mov
inc
clc
pop
movsl
das
and
ret
jmp
sti
and
sbb
and
leave
xchg
fldt
test
loop
fs
ja
pop
mov
lods
rcrb
btr
iret
aaa
aaa
in
xor
out
into
adc
outsl
idiv
repz
or
xor
push
cmc
outsb
cmp
out
es
xchg
loopne
push
fiaddl
mov
and
push
pop
push
mov
or
push
mov
cltd
add
jmp
add
jne
test
sbb
fldl
in
pop
mov
in
xchg
ja
std
iret
fistl
dec
xorl
inc
outsb
cmp
insb
leave
addr16
push
nop
pop
filds
jb
lahf
clc
xor
mov
mov
ss
ret
pop
mov
cmpsl
mov
jns
push
inc
adc
lcall
fiadds
add
inc
int3
cmp
or
jmp
fs
out
jo
fs
enter
bound
cmp
pop
test
lock
jl
mov
pusha
adc
cmp
adc
cli
cmp
jecxz
imul
pop
cmp
jle
add
loope
pop
inc
dec
sahf
cmp
sbbb
aas
rcrl
imul
sub
mov
out
rcl
repz
jae
rorb
jl,pt
dec
andl
les
inc
mov
fsts
xor
mov
jl
cli
aam
nop
or
insb
rcrl
cmc
mov
dec
or
add
cmpsb
mov
inc
xchg
mov
mov
iret
cmpl
push
push
sti
add
pusha
jecxz
repz
jl
dec
inc
out
mov
dec
push
scas
pop
inc
mov
cmp
les
rcl
or
adc
xor
into
cmp
push
sbb
pushf
out
inc
xor
mov
cmc
adc
dec
sub
bound
push
cmpsb
out
jbe
inc
stos
add
or
dec
test
mov
clc
push
std
aad
out
sbb
fsub
ds
pop
lcall
cld
mull
sub
imul
adcl
xor
dec
add
jg
andb
xchg
push
xor
in
jmp
enter
mov
pop
out
pusha
lock
lods
outsb
dec
stos
sbb
insl
inc
in
jmp
nop
push
xchg
mov
sub
mov
inc
insb
das
adc
cltd
testb
into
xchg
mov
in
clc
mov
sbb
push
lock
sbb
cltd
lret
mov
jno
in
mov
add
rclb
mov
mov
shrb
lea
shrb
ret
bound
sub
addr16
dec
sub
pop
cmp
lea
rorb
or
insl
push
jecxz
fisubrs
jmp
outsl
icebp
cmc
xchg
push
jp
mov
test
adc
or
pushf
popa
lret
dec
insb
inc
push
repnz
adc
hlt
sub
ficompl
mov
sub
push
xchg
outsl
push
and
add
xchg
push
add
push
cmpsl
pusha
pop
fs
mov
sarb
lods
jg
fcoms
gs
mov
daa
add
mov
xchg
push
stos
das
mov
scas
jecxz
repnz
mov
dec
mov
xchg
sub
aas
int3
adc
pop
loope
jne
cmp
push
mov
xor
aad
xchg
xchg
xor
inc
scas
jmp
cmc
aaa
cmp
fsubrl
jmp
and
jo
lock
out
sub
inc
jmp
les
pushf
mov
outsl
pop
gs
jle
mov
fsubr
stos
jbe
popa
rcll
mov
sbb
outsl
and
mov
imul
dec
jmp
jp
dec
sbb
dec
sbb
mov
jg
addl
cmpsl
lahf
or
incb
les
mov
cld
xchg
test
jb
push
jp
mov
xor
sar
and
icebp
sub
ss
xchg
leave
xor
shrl
leave
movsb
jmp
mov
sub
or
inc
mov
mov
add
int3
pop
dec
cmp
loope
inc
pop
cld
pushf
lds
cmp
cmpsl
in
inc
mov
dec
add
sub
mov
inc
sbbl
mov
dec
loopne
ljmp
xchg
mov
movsb
sub
cmp
in
test
mov
mov
jne
mov
mov
pop
mov
test
scas
adc
rcll
jae
dec
je
sahf
insb
rorl
mov
mov
outsb
rcll
cltd
out
sti
mov
adc
movsb
xor
rcrb
mov
frstor
lock
add
adc
mov
sub
out
sub
cmpsb
and
mov
cmp
mov
into
out
or
xchg
aam
sbb
or
enter
enter
lret
fimull
xor
add
or
popf
fsubrl
sub
adc
cli
push
pushl
sbb
mov
arpl
jb
mov
sub
pop
jg
pop
aaa
sbbl
scas
shlb
pop
daa
mov
out
fcoml
cmpsb
sub
getsec
pop
int
adc
je
push
das
lret
cmpsl
xchg
xchg
cmpsl
mov
call
scas
pushf
scas
push
in
dec
ficomps
fmulp
cmp
jbe
enter
mov
push
mov
push
imul
stc
cs
ljmp
es
stos
jg
xchg
imul
push
mov
cmp
mov
pop
pusha
pop
clc
hlt
sar
in
dec
mov
cs
mov
clc
xchg
cmp
dec
inc
inc
sahf
sbb
xchg
mov
sub
cmp
pop
decw
int3
pop
outsl
jge
es
xchg
fmull
sbb
xchg
cmp
and
add
fbld
mov
aad
mov
mov
push
cmp
ret
jge
adcl
std
loope
sub
aad
int3
xchg
lea
mov
nop
mov
adc
cltd
cmc
andl
outsb
fwait
jo
push
mov
aas
lods
repz
inc
pop
push
pushf
push
ljmp
lahf
shll
cmp
test
and
and
sbbb
int3
movsb
sub
pusha
xchg
imul
push
in
mov
pusha
mov
xchg
fdivrs
mov
fimuls
js
movsl
daa
dec
fwait
rcrl
mov
fisubs
cmpsb
xchg
imul
or
jg
aas
xchg
push
mov
xor
jae
jb
roll
or
sub
mov
pop
cmp
jle
adc
scas
shrb
mov
pop
mov
dec
xor
pop
mov
in
push
int
sub
in
pshufw
out
in
in
push
add
fldt
das
lret
sahf
ror
fildll
sti
mov
ret
xor
test
gs
and
fstpl
in
xchg
imulb
sarl
xchg
aad
jb
and
movsl
faddl
ret
ret
pop
xor
jecxz
lds
pop
cld
ljmp
out
mov
lods
in
jecxz
ret
mov
scas
popf
push
iretw
pop
add
dec
call
adc
push
stos
out
outsl
popa
jle
xchg
dec
pop
adc
fsubp
push
shll
push
pop
cwtl
rcrl
sbb
fldl
mov
xchg
aad
cmpsl
mov
jl
mov
rclb
or
ret
xchg
jp
inc
pop
aam
push
lea
xchg
inc
or
sub
in
xchg
xor
and
scas
loop
enter
pushf
jne
leave
lcall
addr16
stc
add
push
movsl
add
gs
push
loopne
xchg
pop
fstp
jmp
sbb
testb
repnz
fnstsw
push
jnp
arpl
mov
mov
and
jae
jle
cmc
sub
lahf
jmp
dec
cmp
lds
insl
andb
out
xor
ror
ljmp
stos
xor
jp
push
inc
or
xchg
inc
xlat
adc
jge
sub
mov
jge
fs
jae
je
pushf
lret
xor
pop
lock
mov
test
jbe
or
aaa
imul
fsts
scas
xchg
jmp
int3
or
sub
inc
xchg
addr16
lock
sbbb
pop
push
dec
sub
push
cmp
or
stos
sbb
sub
in
lods
rorl
dec
fs
sub
push
xor
scas
dec
and
cmp
aam
sahf
cmp
pop
xor
mov
ret
mov
testl
mov
sbb
mov
rcrl
push
gs
aas
test
fstpl
or
insl
push
jle
pop
es
test
les
dec
pop
and
ret
xchg
cmovp
outsl
mov
xchg
mov
xchg
or
js
inc
xchg
outsb
leave
push
std
nop
jmp
inc
jb
popa
shlb
into
or
mov
scas
jg
loope
sub
jno
sub
cmp
movsb
cli
or
sub
sbb
jl
fsts
inc
ret
stos
pusha
sbb
je
shlb
fdivrs
ret
shlb
cmp
inc
fwait
stos
inc
jp
int3
dec
out
pop
out
xchg
xor
movsb
cmp
stos
out
cmp
stos
cmp
mov
xchg
popa
dec
aaa
insl
sub
xchg
les
lret
pop
add
hlt
outsb
sbb
cs
rep
cmp
mov
add
or
pop
popf
inc
loopne
popf
push
int
pop
xchg
sbb
jle
fldenv
fmuls
cmc
scas
mov
cmovae
les
andb
adc
mov
leave
xor
mov
das
lahf
call
cmp
pusha
push
shl
inc
mov
xchg
decl
sbb
xchg
sub
and
and
repz
cltd
and
arpl
pop
mov
js
test
mov
call
je
cmp
scas
and
push
jbe
into
das
cmpb
out
add
arpl
flds
dec
mov
fcompl
xchg
cmp
test
mov
adc
push
bound
sub
mov
scas
jecxz
inc
inc
in
js
cs
jle
inc
js
add
mulb
push
jne
dec
sub
or
rcrl
add
repz
mov
jmp
test
pop
sub
mov
out
pop
call
xchg
dec
sbb
imul
loope
dec
pop
cmc
int3
out
scas
out
jle
sbb
push
and
repz
xchg
dec
fsubp
adc
push
sbb
xchg
push
data16
pushf
dec
and
dec
pop
or
in
adc
cld
pusha
adc
cld
xchg
xchg
sbb
adc
push
ss
mov
std
xor
adc
fwait
push
fidivl
outsl
mov
pop
or
test
aas
inc
sysexit
sarl
mov
cltd
mov
jmp
jnp
adc
push
and
inc
xchg
popa
mov
push
sub
pop
sub
push
les
mov
outsl
mov
cmp
leave
loopne
xchg
cmpb
dec
orb
xchg
push
addl
jecxz
xlat
mov
insl
cmpsl
sbb
sar
test
push
mov
imul
dec
mov
jl
ljmp
iret
rclb
push
stos
mov
jb
jmp
pusha
out
lods
outsb
mov
dec
lods
pop
rcrl
test
mov
cwtl
popf
mov
xor
dec
sbb
insb
or
or
test
ljmp
mov
sbb
lcall
aam
cmp
cmc
bound
adc
movsb
gs
push
iret
adc
inc
cmc
sarb
and
enter
out
stc
andb
mov
aaa
shll
iret
mov
pop
sbb
lods
xchg
push
ret
add
lahf
mov
and
int
cwtl
and
std
inc
clc
and
adc
loopne
inc
cmp
lcall
fcoms
add
fistpll
fs
xchg
jae
pop
jle
xor
ficoml
mov
add
pop
int3
cmp
fbld
and
sbb
push
xor
xchg
push
dec
lret
loopne
jns
fwait
xchg
cmpsl
addl
aam
jle
ret
fwait
clc
pop
ss
dec
mov
push
lret
jp
push
mov
mov
cmp
inc
and
cmp
leave
jae
iret
clc
loope
cltd
shl
sbb
mov
xor
inc
fmul
inc
mov
lods
sub
inc
and
aam
and
and
xchg
repz
or
ficoml
push
xchg
das
and
sti
jnp
mov
lret
xchg
cmp
mov
mov
cld
dec
shrb
mov
jecxz
push
inc
sbb
cmp
xor
iret
adc
cmpb
xchg
pop
mov
sbb
shl
xor
inc
test
sub
dec
aaa
pop
subb
cmp
mov
cmpb
pop
xchg
test
divl
and
push
popf
icebp
call
gs
arpl
cmp
jl
int3
mov
push
add
xchg
xor
mov
lret
divl
popw
sbb
xlat
push
sub
js
sbb
cmp
in
mov
dec
cmp
ficompl
push
dec
add
test
cmpsl
out
pop
push
cmp
sbb
sbb
call
add
jle
dec
dec
xchg
dec
or
jg
rcrb
sub
sbb
push
ret
push
inc
jb
xchg
jp
adc
mov
hlt
dec
and
jbe
addb
inc
add
cs
adc
test
pop
and
ret
bound
loope
mov
dec
test
pop
inc
les
and
loopne
mov
pop
clc
out
outsl
shlb
cmp
mov
cmp
repz
and
inc
into
das
lods
sbb
lock
stos
inc
pushf
or
cmpsl
jmp
loopne
add
dec
pusha
aaa
rcl
scas
push
ljmp
mov
jg
test
bound
jo
lds
movsb
test
push
arpl
andl
iret
mov
sub
xor
mov
xchg
push
add
push
xor
mov
mov
in
mov
push
inc
mov
and
and
out
adc
mov
adcb
aas
scas
sub
rcrl
loope
out
addr16
sbb
test
insl
lds
jns
xor
jb
bound
adc
pop
lods
out
and
fiadds
pop
addb
js
out
xor
pop
loope
popf
adc
daa
cmp
int3
out
add
cwtl
popa
xor
push
lea
jg
cld
cltd
stos
fcmovne
outsl
pop
lret
clc
fadds
jmp
gs
jne
adc
popa
sub
js
xchg
inc
insb
push
xor
outsb
pop
js
dec
xchg
loopne
mov
out
repnz
fdivr
pop
lret
subb
or
xlat
ror
mov
push
mov
jne
sbb
dec
and
aaa
jb
push
sub
jae
shrl
pushf
inc
imul
push
lods
lock
xchg
push
in
xchg
xor
adc
sub
inc
dec
out
pop
sub
adc
hlt
mov
xor
mov
push
mov
enter
adc
int3
scas
shr
jg
daa
mov
shll
aam
or
lea
sbb
and
pop
xorl
cmc
es
cmp
lret
sbb
sub
test
fnsave
pusha
fs
stos
mov
xlat
mov
mov
and
xor
lcall
push
sbbl
lret
cmp
bound
mov
push
rolb
cli
mov
dec
movsb
test
fisubl
shrb
add
inc
adc
jg
xchg
sub
ffreep
loop
pop
push
sbb
xchg
pop
push
or
ja
bound
adc
fwait
or
xchg
mov
jecxz
push
mov
sahf
sbb
sub
jb
shll
cmc
add
gs
pop
jge
aad
jno
jns
jl
in
mov
push
pop
jne
push
call
dec
or
adc
adc
jnp
loop
sbb
push
or
mov
dec
pop
jno
cmc
in
pop
push
cmpsl
cmp
mov
or
fwait
stos
shrb
mov
push
dec
leave
pop
adc
pop
mov
sti
stc
xlat
push
push
in
sub
pushf
jns
scas
call
aam
hlt
xchg
cmp
push
sbb
push
pop
xchg
sar
xchg
test
aas
dec
dec
or
das
lods
add
push
test
lret
out
loopne
aad
adc
addr16
mov
arpl
repz
xor
xlat
test
jecxz
jle
cmp
aas
int3
sbb
addl
jnp
inc
cmp
xor
dec
or
lahf
and
es
and
fcoms
incl
or
aas
add
adc
aad
sbb
add
nop
inc
sti
mov
cli
popa
push
arpl
mov
je
loop
std
jl
add
sbb
loopne
xchg
cltd
pop
xchg
xlat
fstpt
int
xor
push
sbb
mov
jnp
add
test
repnz
stos
add
cmp
pop
xor
inc
loop
testb
jecxz
test
pop
icebp
maskmovq
idivl
fsubrs
mov
mov
dec
xor
mov
aad
push
rcrb
mov
rcl
repz
or
test
and
mov
popf
add
cmp
outsl
rolb
out
and
dec
outsl
insl
adc
mov
push
jnp
cmp
cmp
xor
js
fxch
mov
cltd
popa
mov
jecxz
push
add
fstpt
mov
push
test
or
mov
xor
xchg
and
sbb
xor
arpl
iret
outsl
scas
adc
xor
pop
sbb
sub
xor
mov
imul
cltd
negb
insb
push
cmp
mov
mov
xchg
xchg
roll
lret
push
lods
dec
pop
movsb
cwtl
cmp
negl
pop
pop
loope
sar
jnp
loop
outsb
lock
call
movsl
seta
imul
loopne
sub
jmp
sub
insl
pop
adc
sub
int
cwtl
lret
ds
ficoms
mov
jecxz
lods
pop
sti
adc
pop
cmc
xor
jbe
out
xor
aas
xor
pusha
arpl
js
push
test
into
mov
cmp
pop
insb
aam
pop
mov
or
or
add
push
and
jmp
jns
xlat
inc
and
stos
inc
xor
and
fwait
sub
xchg
cmp
int
push
cltd
mov
push
xchg
ret
dec
leave
mov
pop
mov
pop
and
scas
xchg
in
lds
bnd
add
mov
push
xchg
stos
pusha
bound
jl
sahf
sbb
out
call
mov
add
dec
rcrb
adc
pop
push
mov
mov
sub
dec
aad
sub
jg
push
in
repnz
lret
mov
mov
out
pop
sahf
inc
cmp
mov
push
std
repz
imul
add
negb
push
cli
adc
sti
mov
mov
xchg
lods
xchg
mov
int3
pop
and
ret
push
push
cmp
ds
lock
fildll
andb
dec
ljmp
shll
push
push
test
and
nop
test
xor
inc
les
mov
mov
push
mov
js
sbb
jo
adc
mov
jp
sub
mov
mov
ror
sub
ret
lea
stos
cmp
je
aad
mov
bound
mov
jl
ss
jbe
jb
cmp
in
sbb
daa
andl
jp
sbb
popf
dec
jg
xor
xor
add
cmpb
jp
cmpsl
mov
insb
out
test
sub
je
in
push
imul
mov
sahf
inc
mov
icebp
imul
mov
adc
out
jle
mov
sti
gs
push
push
push
and
mov
cmpsl
rcrb
push
inc
adc
rorb
aaa
adc
adc
scas
inc
mov
enter
push
sbb
call
aaa
xchg
or
xor
aaa
repnz
jne
nop
pop
dec
lock
or
pushf
mov
sti
sarl
sub
ljmp
daa
aad
cmpsb
jge
mov
push
or
mov
bound
iret
loope
adc
push
and
push
cwtl
ss
into
test
mov
loope
int3
xchg
movsl
out
and
sbb
cmpl
pop
mov
adc
pop
addr16
lret
or
push
fcmovbe
ja
aad
inc
bound
xchg
sub
jae
push
sbbb
gs
lahf
add
xchg
lock
mov
iret
xor
test
test
lock
shl
pop
push
and
scas
mov
stos
sbb
popf
roll
pop
push
and
adc
dec
fdivrp
and
jbe
cmp
fadd
ss
bound
aam
jb
lcall
lret
push
add
cmp
and
sarl
mov
mov
jle
leave
xor
ret
and
int
lods
jg
push
fmull
out
sbb
mov
dec
arpl
out
push
pop
pop
ljmp
sbb
add
mov
or
in
and
inc
lea
fiaddl
mov
sbb
test
jae
mov
cmpsb
pop
mov
stc
push
in
xchg
loopne
insb
xchg
pop
push
or
mov
test
lock
lret
jl
or
scas
xchg
sbb
push
hlt
sub
scas
inc
fidivrs
mov
ret
out
inc
cmp
lods
stc
aad
and
cmp
dec
fildl
test
imull
pushf
jnp
lds
std
test
popa
fucomp
jl
nop
sub
and
dec
mov
cmp
ret
push
mov
rcrl
in
inc
xor
mov
adc
testb
mov
sub
nop
push
in
iret
pop
inc
sahf
cmpsb
and
shrb
aam
dec
or
bound
fstpt
fcmovu
mov
shll
inc
aas
lods
mov
and
mov
addb
pop
movsb
pop
pop
or
pusha
in
and
shrl
out
ret
movsl
lret
packsswb
scas
in
mov
sti
inc
xchg
popa
xor
daa
loopne
daa
cmc
or
ljmp
inc
inc
into
ss
or
roll
stos
addb
inc
outsb
sahf
sbb
pop
xchg
sti
inc
fiaddl
mov
mov
shr
in
int
in
mov
jb
sub
faddl
leave
cs
mov
daa
outsb
int3
or
ds
lods
test
adc
xor
repnz
sti
sub
lea
ja
jmp
shrb
das
dec
fisttpll
out
test
mov
xor
lcall
aas
mov
ficoms
das
sahf
mov
std
ss
sbb
mov
mov
push
lds
outsl
popf
in
leave
push
xor
cmp
inc
inc
loop
pop
xchg
push
sub
lds
fistpl
xchg
mov
sbb
cmp
aaa
loop
jnp
js
clc
test
adc
and
mov
mov
lret
loopne
mov
pop
sbb
add
jb
mov
ret
daa
mov
rcll
push
dec
std
dec
xorb
jbe
lods
aad
mov
call
pop
int
test
sub
or
xlat
add
add
call
xor
sti
inc
mov
push
shlb
popa
insl
jo
inc
mov
lock
ret
push
fcmovne
xchg
hlt
rolb
cmp
test
mov
pop
mov
mov
jle
repz
cmpsl
jns
out
cs
fistl
push
jmp
cmpsl
mov
pop
addb
pop
test
jne
shlb
mov
add
jo
addr16
inc
mov
dec
jmp
push
inc
jl
push
sbb
ret
icebp
cmp
sahf
out
aad
pop
fidivrl
shrb
in
popf
sahf
nop
mov
add
or
inc
inc
rclb
lret
jo
decl
xor
sub
out
xchg
popf
enter
fs
pop
dec
jo
fildl
inc
mov
repz
cmpb
fucomi
sub
sarb
cmp
pusha
ror
inc
sbbb
out
add
sub
cmp
aam
mov
gs
mov
in
dec
jg
push
sbb
mov
cmp
icebp
push
pop
dec
pop
test
pusha
pop
stc
add
jns
add
adc
pop
hlt
testb
jnp
icebp
stos
add
jl
sbb
jne
repz
mov
cltd
or
sbb
adc
mov
mov
ja
test
lods
add
outsb
and
insl
clc
mov
ljmp
mov
addr16
jmp
movsl
aad
push
aam
xor
mov
lcall
sub
xchg
xchg
fxch
iret
or
scas
cmp
nop
test
repnz
mov
negl
jl
xchg
push
pop
call
jle
je
or
dec
out
stos
fisubrs
and
jnp
sbb
lcall
xor
mov
nop
sub
sbb
jo
add
and
ja
adc
icebp
enter
out
dec
jb
hlt
dec
cmp
loop
cmpsb
push
pusha
fldenv
mov
gs
xor
or
fidivs
cmp
lock
mov
inc
mov
jp
mov
cmp
dec
mov
movsl
pop
mov
fs
push
call
fidivrs
inc
push
insl
fldenv
ljmp
flds
stc
pop
test
pop
pop
enter
shll
sub
jp
je
ret
or
or
out
aaa
ret
and
pop
dec
push
dec
mov
add
push
js
out
jns
push
subw
pusha
daa
mov
enter
dec
outsb
pop
cmp
imul
es
in
mov
arpl
dec
push
sub
loope
mov
fstl
test
jle
or
rcrl
cs
dec
mov
cmp
in
inc
push
cli
cwtl
inc
mov
jbe
xor
adc
stc
lret
cmp
jnp
xchg
mov
iret
pusha
pop
imul
cmc
xchg
fidivs
sub
jecxz
sub
jp
pop
mov
js
and
push
imul
movntps
inc
leave
add
sbb
inc
addr16
lret
lods
add
movsb
xor
shrb
imul
into
adc
mov
add
aad
outsb
lret
push
call
jmp
ficoml
data16
ja
push
jg
and
sbb
repnz
in
subb
movsl
push
fistpl
sbb
loopne
movsl
adc
xchg
jmp
jnp
fbstp
xchg
dec
mov
lods
lcall
leave
ja
gs
pop
imul
aam
mov
cmp
in
and
decb
rcrl
aam
adc
in
sub
adc
inc
mov
std
mov
clc
pop
or
push
jbe
xchg
fsub
push
je
xor
adc
popa
pushf
mov
int3
ror
xchg
cmp
xchg
ja
movsl
shll
lds
faddl
fucomip
out
push
stos
addb
outsb
ret
loopne
inc
add
xchg
divl
outsl
mov
in
dec
push
adc
popa
and
or
push
jns
movsl
push
mov
test
adc
in
pop
mov
ret
jmp
cmp
push
or
lahf
sbb
cmpsl
mov
inc
in
push
adcl
mov
ret
in
sbb
or
div
and
cmpb
sbb
pop
adc
rep
cmpb
xor
je
mov
cmpsb
dec
outsb
push
cli
mov
orl
call
cmpsb
stos
xlat
aam
rcrb
xor
jp
aaa
mov
faddl
mov
and
cmp
mov
pop
jge
jnp
xchg
ljmp
scas
adc
add
es
loop
mov
mov
mov
sahf
pop
xchg
imul
aaa
data16
inc
mov
sti
fisubrl
add
es
repnz
mov
cmpsl
pushf
push
js
cli
imul
test
sar
aad
arpl
cmp
fisubl
int
ffree
xor
dec
xchg
rol
imul
jle
fdivrs
stc
adc
jno
cmp
cmc
ret
fcompl
les
dec
xchg
pusha
stc
and
test
jg
lds
jl
mov
pop
push
adc
xchg
jmp
int
dec
aas
jns
inc
lea
mov
jmp
mov
sbb
mov
push
in
mov
cli
stos
push
dec
jbe
add
mov
sarb
pusha
cld
out
xor
jge
jno
call
sbb
pop
aam
xchg
test
int3
outsl
sub
les
test
adc
sbb
in
not
xchg
push
and
jae
push
xor
outsl
xchg
cltd
imul
xchg
and
xchg
in
mov
sub
jp
mov
or
rol
mov
inc
adc
loop
lcall
and
push
xchg
dec
push
rclb
sub
sub
popa
in
in
enter
sub
imul
dec
cmp
loopne
push
mov
outsl
movsl
dec
rorl
sbb
ja
mov
jne
in
lret
mov
stos
addl
imul
inc
sbb
inc
or
dec
sbb
cmp
mov
xchg
push
pusha
add
mov
mov
push
sahf
ss
lods
rcrb
cs
shlb
lret
pop
pop
pop
push
cmp
outsb
int
outsb
inc
jo
ret
stos
mov
enter
dec
sub
xor
mov
mov
daa
xor
leave
clc
rcll
push
and
bound
cmp
pop
fs
jns
insl
cld
out
cmp
out
cwtl
dec
sti
out
dec
mov
adc
arpl
call
pop
lret
jb
mov
jmp
gs
cmc
dec
scas
scas
add
mov
jno
aas
sbb
push
ja
add
insb
pop
jne
push
loop
lds
and
insl
sti
adc
jl
lcall
dec
sub
bound
mov
sbb
ljmp
imull
mov
mov
push
push
inc
daa
dec
cmp
cmp
int3
arpl
in
cld
push
cmp
ja
scas
pop
orl
sub
sarl
aam
loopne
insl
mov
lods
adc
loop
not
cmp
leave
nop
orl
adc
lcall
lock
aam
or
lds
xor
jb
and
push
jge
jecxz
mov
xchg
adc
push
pop
repnz
cmp
add
cs
in
dec
push
adc
dec
cmp
repnz
sub
adc
jb
sbb
or
cmpsb
test
fbld
adc
adc
pop
aam
mov
mov
andl
es
loop
adc
xchg
insl
mov
and
divl
xchg
inc
cmp
xor
push
insl
rep
pushf
movsb
arpl
mov
movsl
loope
shrb
inc
sahf
js
dec
pop
push
mov
push
mov
mov
shl
jecxz
fistpl
in
xchg
sahf
aaa
push
mov
mov
movsb
shlb
pop
pop
fwait
jns
mov
add
and
push
data16
add
push
and
inc
lret
stos
mov
pop
gs
adc
adc
mov
js
inc
pop
mov
mov
lods
or
les
int
inc
pop
mov
test
je
arpl
add
pop
mov
inc
mov
push
push
hlt
loop
jecxz
push
mov
lret
and
or
scas
pop
cltd
lock
outsb
int
fiaddl
or
sti
icebp
outsb
mov
mov
int3
inc
xor
mov
add
add
xor
in
insb
mov
stos
insl
dec
and
add
adc
negl
lret
fcomp
and
int
sbb
lea
aam
mov
push
add
std
xor
and
repz
in
outsl
jg
les
xor
xor
repnz
es
mov
cs
mov
jb
jl
or
mov
dec
and
mov
mov
push
jnp
mov
add
fists
sarl
adc
hlt
fisubrs
or
jb
push
inc
xchg
notb
aam
xchg
stos
and
imul
or
adc
jne
out
out
push
xor
pusha
mov
xor
cld
insl
pop
fisubs
pop
sahf
jb
fstpl
push
lret
cmc
imul
or
dec
dec
jmp
mov
hlt
pop
ret
mov
cmp
push
js
out
inc
cmp
mov
xor
into
adc
pop
repz
sar
inc
insb
xor
and
sbbb
xchg
xlat
cld
xor
push
sbb
xlat
or
pop
pop
aam
adc
roll
add
or
xchg
jo
cmp
or
out
test
add
aad
adc
fisubrs
jge
rcrl
add
xchg
push
jge
xchg
pop
pop
scas
mov
xchg
cmp
and
dec
test
shlb
jle
inc
addl
nop
lock
or
pop
jo
mov
mov
jp
insl
ljmp
cs
push
push
in
rcl
cmp
fcoml
outsb
popa
cltd
aaa
in
add
sub
xor
movsb
or
fstpl
gs
aad
push
or
xchg
adc
xchg
stos
sub
cmp
jno
mov
and
jnp
imul
add
mov
bound
jae
xor
xchg
adc
push
in
fcmovnb
cmp
jp
sub
pusha
mov
insb
push
adc
in
pop
idivb
pop
cmp
mov
movsl
lahf
lods
lcall
adc
xchg
fucomi
andb
pushw
xlat
sub
mov
pop
std
pop
xlat
push
mov
outsb
push
mov
xchg
mov
mov
and
ret
sub
or
xchg
lcall
mov
dec
bound
fmuls
out
out
movsl
sbb
sbb
ja
jl
cltd
or
mov
int
mov
adc
imul
sar
lods
test
popl
jnp
jns
jmp
xor
pop
jno
iret
loop
sub
cmpsl
loope
push
fcmovnb
bound
jae
mov
fldenv
ss
jecxz
dec
insb
adc
aaa
push
ret
cwtl
pusha
mov
xor
sarl
dec
std
cld
out
push
out
mov
inc
jle
addr16
mov
adc
imul
cmp
dec
add
sub
adc
mov
cmp
repnz
das
stc
push
ret
outsl
test
dec
cwtl
mov
imul
addl
ror
addr16
xor
cmp
push
cmp
pop
stc
jmp
ret
cmpb
mov
inc
in
bound
xor
mov
sti
sbb
inc
sbb
mov
jno
mov
lods
imul
xor
fadds
stos
test
test
daa
pop
xchg
inc
lcall
pushf
xchg
cs
mov
scas
in
dec
fwait
in
mov
pop
mov
push
sbb
in
cmc
lcall
mov
not
je
or
test
mov
mov
sub
push
call
add
popa
xchg
push
or
dec
mov
and
xchg
imul
inc
test
sub
cmp
fcoms
cmp
cs
xchg
push
subb
jbe
fcompl
out
cmp
mov
add
xchg
push
repz
andl
fstpl
cmp
fnstsw
daa
fdivr
mov
out
cmc
nop
mov
pop
mull
std
mov
in
hlt
or
sbb
jl
scas
pop
sub
hlt
mov
and
adc
mov
add
cli
adc
shlb
mov
fsubs
lods
adc
leave
or
jl
ret
repnz
call
mov
xor
sbb
and
xchg
jge
mov
mov
movb
ds
mov
sub
cmp
mov
push
mov
repz
daa
test
push
movsb
stos
call
fbstp
popa
xchg
lea
push
les
pop
cwtl
dec
cmpsb
mov
fdivrs
xchg
scas
aas
outsb
call
lea
outsl
call
out
rorl
fidivrs
stos
dec
adc
shll
jae
inc
and
hlt
int3
fcmovb
gs
jp
dec
test
les
dec
cld
sub
aaa
and
jmp
adc
outsb
lret
cmc
pop
aaa
push
jp
lahf
jo
xor
shr
outsl
sarb
je
dec
pop
test
jns
jge
add
fisubl
xchg
mov
add
test
jo
push
in
and
fstpl
add
mov
sbb
loopne
jg
mov
in
popa
idivb
jo
dec
or
shrb
test
jmp
jne
ja
jne
aaa
jb
adc
and
das
das
rolb
sbb
lahf
scas
jmp
repnz
xor
jns
ljmp
pop
push
fs
pop
mov
loopne
das
and
xchg
add
mov
dec
jecxz
xchg
cmp
xchg
ljmp
bound
sti
stos
mov
adc
ds
repz
mov
pop
push
lcall
ss
pop
daa
test
add
adc
mov
xchg
mov
adc
jbe
hlt
loope
ret
movsl
mov
in
xchg
out
dec
pop
xchg
ret
shrl
push
popa
xchg
mov
gs
sahf
sub
sub
addr16
gs
loopne
adc
mov
xchg
leave
inc
aad
dec
xor
pop
lcall
sbb
lret
mov
jl
fidivl
test
xchg
arpl
das
cwtl
sti
inc
out
ljmp
daa
or
cmp
adc
aas
mov
push
adcb
stc
ljmp
iret
inc
pop
mov
rcr
or
movsb
pop
add
cli
inc
ret
pop
add
pop
pop
aaa
repz
dec
jno
rol
mov
pop
cmp
lea
out
jns
or
jmp
divb
fdivrl
loopne
icebp
mov
xor
out
jecxz
lods
mov
or
push
ja
cltd
push
pop
dec
les
aam
arpl
mov
mov
xchg
xor
cld
sub
and
mov
xchg
jl
xchg
sar
and
mov
mov
adc
mov
sub
inc
inc
fstp
aad
sbb
cmc
cmpsb
sub
test
cmp
mov
pusha
jae
and
inc
xor
fidivs
and
sub
xchg
sub
adc
cmp
lods
pop
aas
into
mov
out
xchg
inc
int3
push
leave
enter
rorb
int
fsubp
ss
dec
inc
lcall
fnstcw
mov
andb
push
into
pop
jecxz
pusha
gs
fs
adc
imul
or
dec
pop
mov
inc
adc
stos
loop
testb
mov
mov
mov
xor
test
mov
pop
cmp
test
cltd
xchg
dec
sbb
mov
cmovb
shl
jle
rcll
mov
testb
rcll
push
and
std
sub
xor
push
fistl
mov
sti
out
pop
scas
push
loop
scas
jne
adc
imul
nop
xchg
sbbl
cmp
insb
mov
mov
mov
xchg
xor
cltd
iret
mov
insl
xor
xchg
jne
adc
pop
enter
out
rol
mov
imul
lcall
mov
xlat
xor
std
mov
fisubs
or
gs
inc
mov
fildll
outsb
push
pop
jmp
xor
xorb
jecxz
mov
inc
fldz
sub
fdivr
mov
sub
pusha
sahf
addr16
rclb
test
lods
into
cmp
lds
push
inc
adc
shrl
adc
js
call
and
insb
sbb
xchg
mov
dec
push
add
sub
pop
repnz
pop
loope
cmp
pop
pop
jmp
xlat
sub
arpl
xlat
mov
push
leave
rcrl
xor
adc
add
int3
jns
xlat
pop
mov
dec
mov
push
xor
loopne
stos
xlat
mov
hlt
add
cwtl
push
push
dec
jbe
push
clc
rdpmc
dec
mov
pop
ret
mov
push
stos
push
push
iret
or
jns
je
and
xchg
fldt
push
mov
jnp
in
lods
popa
cmpsl
xor
xor
add
lret
pop
js
xchg
mov
push
push
movsb
cmp
or
or
xchg
pop
pop
jp
das
inc
in
adc
rol
pmulhuw
jle
enter
dec
mov
aad
adcb
lea
lret
cmc
xor
scas
loopne
jle
and
adc
sbb
or
push
ja
adc
ret
out
ja
adc
lahf
lods
jo
xchg
xchg
enter
cmp
xor
sar
mov
add
enter
or
enter
out
adc
xchg
subb
mov
jbe
push
jne
inc
sbb
cld
add
add
not
or
jae
lock
xor
popf
xlat
jnp
lods
int
push
add
sti
sbb
fmuls
pop
enter
push
out
movsl
js
outsb
clc
mov
cmp
daa
xchg
movsl
add
roll
inc
bound
lret
xchg
sbb
xchg
adc
mov
and
xchg
jnp
xor
insb
mov
inc
pop
inc
xchg
cltd
daa
sbb
test
test
shrb
rolb
sbb
add
jbe
ja
sahf
pusha
call
lea
sbbl
sbb
jo
adc
popa
mov
popf
pop
cltd
add
iret
sahf
dec
jge
pop
sub
push
dec
rcrl
push
andl
dec
xchg
sbb
fbstp
inc
popl
push
aaa
jge
jecxz
test
push
mov
pusha
cwtl
imul
lods
sbb
inc
mov
lea
or
xor
fs
adc
mov
mov
arpl
dec
icebp
or
mov
inc
stc
push
xor
outsb
mov
dec
cmc
mov
cltd
lock
sbb
push
mov
or
cld
mov
jp
pop
adc
inc
cmpsb
mov
dec
insb
or
pusha
jno
loopne
adc
cld
ret
inc
idivl
and
clc
mov
lret
push
pop
imul
jno
lret
in
int
idivb
outsl
testl
in
inc
mov
mov
jmp
jns
into
cmp
or
out
mov
inc
mov
fwait
xchg
push
mov
aas
push
test
sub
cmp
das
xchg
sbb
dec
and
pop
jnp
hlt
mov
lahf
inc
adcl
cmp
pop
insb
xchg
jp
push
xor
aaa
repz
dec
outsl
pop
pushf
adc
scas
pop
test
jle
fdivrl
adc
jl
cmp
lea
movl
sub
and
jns
lds
add
shrb
movsl
dec
jge
sbb
cmp
cmp
mov
pop
pop
pop
push
loope
adc
pop
es
test
lret
cmp
jbe
adc
mov
lods
push
cli
scas
add
clc
jmp
adc
add
pop
sti
lods
scas
xchg
popa
cmc
jne
xchg
repz
cwtl
jl
or
loop
xor
enter
or
pop
or
jle
push
popa
mov
push
das
jp
mov
xchg
ret
stos
or
or
pop
inc
insb
insl
pop
sbb
dec
mov
xchg
je
xchg
shrl
repnz
mov
dec
inc
sbb
filds
mov
js
enter
lret
sbbb
jno
lds
mov
push
cmp
insl
lods
xor
testl
insb
dec
arpl
jae
inc
cwtl
sbb
xchg
xor
inc
bound
test
ss
add
inc
push
add
rorl
jmp
xchg
scas
adc
push
jl
and
pop
mov
jno
add
dec
out
cmp
movsl
cltd
jae
mov
dec
out
xor
mov
in
arpl
or
outsl
lcall
or
dec
sti
or
xor
out
bound
repz
dec
int
sbb
adc
xor
test
add
bound
lods
fwait
or
outsb
rorb
lods
push
sti
push
bound
mov
jb
mov
filds
insl
pop
cs
xchg
sbb
rcrl
sub
mov
xchg
arpl
ss
fmulp
ljmp
test
mov
and
mov
in
push
repz
mov
gs
mov
pop
mov
sbb
add
cmovns
inc
ljmp
imulb
mov
inc
out
push
and
arpl
jmp
stos
sbbl
dec
ret
push
fsubr
and
inc
ljmp
or
add
ffreep
fiaddl
sbb
test
sbb
std
mov
mov
cli
imul
xchg
dec
test
shll
shll
add
mov
testb
ds
popa
outsb
mov
and
push
fcmovne
push
outsl
pop
enter
xor
repz
xchg
insb
ret
xorb
dec
sub
lahf
push
cmp
mov
lahf
adc
or
mov
popf
outsl
push
mov
lods
pushf
xor
jp
addr16
sbb
out
aad
and
mov
das
jmp
jl
lods
movsl
pop
inc
outsl
pop
aad
or
mov
lcall
sub
popf
cmp
out
xorb
inc
push
addr16
int
pushf
xchg
sub
shll
jl
mov
xlat
inc
xchg
xor
dec
xor
xor
rol
arpl
mov
add
movb
dec
aad
mov
sbb
stos
fstps
lcall
xlat
jo
jmp
insb
pop
dec
push
pop
sbb
imull
mov
mov
aaa
pushf
fs
es
mov
cld
std
in
repz
aaa
mov
sub
jo
stos
hlt
daa
xor
sub
scas
les
cmp
test
cwtl
add
stos
and
sub
jl
push
mov
add
or
jecxz
stc
lret
jbe
cmpsb
inc
test
fldl
loopne
mov
fadds
nop
sarl
mov
sub
test
inc
cltd
iret
lods
fldl2t
stos
rcll
dec
xor
stc
xor
add
loop
mov
xchg
adc
xchg
fs
rcrb
adc
sbb
repnz
stos
test
in
je
mov
cmpsl
or
das
lcall
cmpsl
add
int3
xchg
leave
outsb
ds
psubw
fiaddl
addb
pop
insb
and
stos
popa
and
xchg
push
mov
mov
lock
mov
cmp
mov
test
fists
push
lods
fsub
cmpsl
inc
xor
xchg
iret
fldenv
mov
inc
std
xor
jp
push
push
xor
cs
test
rcl
scas
and
mov
lock
jle
xor
ficoms
xor
pop
cmpb
imul
cld
out
push
fstpl
fadd
shlb
xchg
adc
fldcw
add
pop
lret
out
int
push
es
daa
xchg
icebp
pop
add
sub
ljmp
cltd
stos
fdivrs
inc
repz
repnz
xchg
adc
icebp
add
cwtl
mov
mov
mov
incl
xchg
add
cmp
loope
xchg
dec
lret
fcomps
jle
hlt
fiaddl
popa
xorb
or
movsb
in
in
inc
aas
jmp
test
sbb
xchg
arpl
adc
pop
arpl
cmpl
sub
cmpb
mov
add
jbe
xor
and
lahf
scas
jb
cmc
aam
dec
push
sbb
ret
and
adc
jo
mov
push
lcall
in
sbb
cmpsb
pop
push
xor
and
mov
in
inc
aas
lds
das
and
mov
clc
mov
pop
dec
add
cmp
loope
testl
pop
in
mov
jno
xchg
loopne
adc
test
inc
insl
rorl
xchg
pusha
inc
cmpsl
ljmp
mov
mov
xor
xchg
xor
lahf
push
lock
push
call
and
lahf
xchg
push
pop
mov
dec
movaps
or
cs
pop
pusha
jne
jnp
mov
pushl
or
push
xchg
int3
cmp
and
or
jge
imul
and
jp
cs
call
aam
add
jno
push
sub
arpl
aad
mov
clc
lea
repnz
enter
rorl
flds
adc
jae
cwtl
mov
pusha
jbe
sbb
jne
adc
mov
push
inc
outsb
imul
and
int3
mov
loope
pop
inc
test
je
push
inc
jp
les
jne
std
shlb
cs
sbb
xor
cmp
sbb
and
pusha
mov
xchg
popa
sbb
lea
pop
fwait
and
mov
sub
hlt
adc
jge
push
test
sbb
mov
rclb
aam
insb
sub
insl
dec
mov
push
mov
jne
jg
dec
jl
add
mov
scas
cmp
dec
xor
jmp
mov
xchg
dec
mov
push
push
and
cltd
nop
fadds
in
loope
inc
xchg
xchg
data16
or
pusha
in
jmp
lret
imul
repz
cwtl
push
adc
shrl
nop
mov
stos
cld
xor
jae
push
sub
lods
add
push
popa
imul
push
mov
int3
jp
push
mov
roll
sbb
sbb
mov
mov
fs
in
stos
cmc
xchg
in
xchg
ret
in
cmp
int3
lea
imul
push
pop
cld
es
sbbl
pop
dec
faddl
mov
and
std
jl
stos
ret
test
dec
push
dec
test
in
and
add
lds
mov
femms
loop
rolb
movsb
or
xor
mov
add
pop
insb
nop
xchg
jo
push
movsl
mov
xchg
lds
mov
jnp
clc
add
jne
loope
lret
dec
sub
mov
lea
fucomi
repnz
scas
cmpsb
cli
lcall
nop
mov
lret
scas
decl
or
lcall
outsb
fstp
or
jle
push
inc
les
dec
inc
lret
rolb
lock
lea
inc
stos
aad
jo
lods
adc
cmp
pop
push
dec
cmpsb
les
sahf
and
dec
pop
lret
and
hlt
mov
ret
rorb
inc
insb
mov
sub
cmpsb
add
pop
cmpsl
push
in
popl
mov
in
ljmp
jne
xlat
xchg
loope
xchg
mov
pusha
stc
add
out
xchg
cmc
pushf
shr
sbb
inc
inc
push
pusha
out
cmp
add
stc
fcom
mov
outsl
scas
ret
out
jl
test
outsb
xor
mov
scas
lods
mov
test
pop
pop
xchg
shrb
mov
inc
loop
test
mov
shrb
enter
sub
push
xchg
in
outsl
daa
rcrl
and
xchg
pop
mov
data16
fcomps
aas
clc
mov
data16
cmpsl
cltd
xchg
or
test
mov
sti
int
arpl
inc
clc
fwait
mov
and
sub
cmp
clc
insl
jae
into
cli
pop
mov
mov
xor
mov
aaa
dec
lods
xchg
lahf
rcl
aam
or
inc
sub
xor
xchg
mov
outsl
dec
sub
mov
mov
jl
or
inc
inc
stc
insb
or
std
fidivs
arpl
mov
push
add
shlb
mov
ja
add
inc
mov
mov
xor
in
insl
movsb
and
bound
movsb
jp
rcll
or
data16
mov
jmp
pop
cli
pop
inc
out
cmp
loop
cmp
add
lock
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
xchg
aas
scas
jno
xchg
sbb
sbb
pop
xor
xchg
inc
push
rorb
sub
jmp
pop
mov
dec
mov
push
sbb
adc
in
js
or
fcomip
mov
adc
mov
xchg
push
fldl
jnp
insb
daa
int3
or
in
and
subb
daa
push
inc
and
sub
fstpt
lahf
dec
xchg
cmp
ds
xor
mov
pop
scas
jg
loop
inc
jno
sti
movsb
stos
xor
jno
leave
pop
loope
pop
and
add
adc
in
push
aaa
ret
mov
cmc
jmp
jae
inc
stc
xchg
aas
sbb
dec
movsb
arpl
das
fmuls
push
or
xor
test
mov
test
cwtl
imul
jp
sub
mov
mov
pop
sbb
mov
pop
dec
dec
cmp
pop
inc
imul
adc
test
rorb
pop
loopne
adc
idiv
add
lods
mov
testb
in
or
cmp
lcall
sbb
sbb
mov
add
mov
sub
inc
cld
and
test
std
test
mov
sub
add
mov
adc
sub
push
out
cmp
movsb
mov
int
push
inc
push
punpckhwd
xor
or
subl
sbb
fidivrs
mov
repz
mov
push
xchg
push
sub
mov
mov
mov
insb
pop
adc
mov
pop
xchg
push
sbb
repnz
cli
dec
fiadds
scas
ljmp
fidivrl
call
cmc
loopnew
fisttpl
test
aam
or
or
into
jle
shll
and
adc
jg
or
jl
push
xor
xchg
add
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
cmp
outsl
add
outsl
add
aas
outsl
