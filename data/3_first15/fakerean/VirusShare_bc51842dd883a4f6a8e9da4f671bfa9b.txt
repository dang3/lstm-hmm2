sbb
add
mov
pushf
mov
add
sahf
cmpb
data16
nop
insb
lret
adc
ds
sbb
mov
imul
test
sub
mov
sbb
jl
test
icebp
inc
xor
sub
in
xchg
and
hlt
es
dec
jb
imul
outsl
mov
xor
adc
mul
fdivs
sbb
insb
jo
xor
or
and
gs
test
mov
cmpsl
repz
sbb
fsubrs
mov
ret
xchg
sbb
lcall
daa
int
call
fbld
enter
mov
aam
adc
xchg
in
fwait
in
mov
inc
inc
cmc
pop
push
dec
pop
ljmp
addr16
add
mov
lock
clc
test
es
jbe
aaa
adc
add
int3
cmp
popf
das
jge
dec
jno
sbbl
mov
jecxz
xor
mov
mov
loope
push
popa
in
call
mov
adc
pop
jno
fiadds
adc
loope
les
lcall
ds
xor
daa
sub
ljmp
ljmp
aas
shll
rcrl
pop
push
pop
movsb
imul
mov
mov
imul
sub
or
and
js
mov
xor
adc
enter
out
xchg
xor
bound
out
ret
pushf
fcmovne
mov
xor
js
repz
or
cmp
cmpsb
pop
rcll
xchg
fadds
mov
or
jmp
dec
cmp
dec
int
mov
int3
aas
xchg
cwtl
dec
js
ja
or
in
mov
lret
mov
mov
ss
and
sub
lret
jnp
sub
icebp
iret
outsb
shl
jb
jnp
ja
xchg
testb
dec
sbb
std
out
mov
fidivrl
jge
jecxz
das
jo
mov
ds
mov
mov
movl
or
pop
daa
and
es
mov
enter
xor
pusha
outsl
mov
or
push
xlat
inc
pop
xchg
ret
add
mov
sbb
dec
mov
rolb
fldcw
stos
sbb
cmp
adc
lret
gs
mov
or
jne
fidivs
pop
xor
mov
lds
mov
cwtl
dec
aaa
call
push
stos
adc
loope
mov
inc
mov
and
pusha
sub
ret
xor
jb
imul
and
pop
pop
std
ret
xchg
inc
out
mov
and
iret
pop
adc
mov
mov
xor
mov
pusha
dec
jge
outsl
in
push
xchg
jns
pusha
adc
push
add
std
test
or
and
out
repnz
or
nop
jne
push
sub
mov
shrb
rdtsc
sub
sbb
mov
faddl
test
xchg
mov
lret
add
jno
dec
mov
fildll
popl
dec
xchg
pop
push
mov
mov
sbb
leave
inc
and
xlat
ljmp
sub
pushf
pusha
sub
mov
aas
and
sti
je
jg
mov
pop
cmpsb
jns
cmp
mov
testl
push
mul
mov
xor
and
mov
popf
inc
mov
icebp
mov
notb
add
pop
mov
cmpsl
push
adcb
mov
sub
sub
push
or
xlat
jns
dec
pop
cmp
xor
mov
ret
pop
jl
repnz
test
push
push
int
or
add
and
sbb
dec
stc
cmp
and
xor
or
mov
std
imul
insl
data16
dec
ret
cmpsb
cmp
inc
jg,pn
mov
and
push
xchg
push
pop
fcmovnb
or
jae
mov
aaa
jg
rcr
jmp
push
loope
or
shll
inc
aad
cwtl
js
sarb
andl
xchg
or
adc
and
xchg
movsb
jmp
inc
push
popf
mov
mov
lahf
out
aad
loope
clc
loopne
fwait
push
es
sub
pop
mov
lods
xchg
nop
jg
dec
jmp
pop
fists
xchg
insb
std
mov
cmp
sub
outsl
fsubl
push
jnp
or
test
cltd
sbb
mov
cmp
xor
adc
cmpsb
pop
mov
outsl
lods
cmp
or
or
sarl
ret
lea
jecxz
pop
mov
jb
push
and
lods
dec
sub
fsubrs
iret
mov
sub
int3
xchg
sub
in
add
inc
mov
pushl
repnz
pop
jb
sbb
xor
jl
repnz
cld
jb
shrl
adc
xor
mov
pop
decl
add
movsb
test
js
sarl
lret
aam
shrl
xchg
mov
add
imul
push
jno
adc
in
test
sbb
in
push
or
lahf
out
mov
adc
clc
push
or
std
jns
sub
mov
mov
fldcw
mov
mov
push
sub
adc
dec
rcr
sub
hlt
sub
or
dec
and
inc
jns
mov
dec
mov
fcomip
xor
cmp
and
pushf
mov
xor
xlat
fdivrs
add
push
mov
pushf
ja
sahf
popf
lret
mov
ret
inc
xor
cld
xchg
pop
mov
mov
loope
sahf
xor
stos
test
insl
aam
cmpsl
cld
popa
out
pushf
sbb
push
dec
orb
nop
mov
push
sbb
aaa
fcomps
leave
ret
addr16
cmp
cmp
push
dec
loop
jmp
jmp
mov
fsubrl
push
lahf
jecxz
inc
in
cli
es
lods
sbb
push
inc
ficoml
sub
and
iret
mov
inc
sub
mov
aas
mov
mov
test
sbb
rorl
lret
xor
shlb
scas
mov
testl
out
adc
mov
aad
into
adc
into
out
xchg
xchg
push
and
rcrb
leave
pop
mov
sub
push
mov
inc
sbb
push
sbb
imul
mov
pop
jno
fmull
jle
mov
xchg
sub
mov
in
sbb
sub
xor
inc
or
sarb
fstpt
jmp
insl
adc
jg
sbb
ljmp
and
movb
hlt
insb
fists
adc
shrb
inc
rclb
stos
mov
mov
pop
jmp
jae
pushf
add
sahf
xchg
xchg
ud2
in
pop
icebp
pushf
push
pusha
cli
rorl
or
lods
cmp
xor
add
push
mov
add
lret
and
sbb
pop
std
pop
fldt
mov
clc
lods
sahf
push
dec
pop
pop
push
mov
jp
pop
mov
pop
enter
inc
imul
sub
fldl
xchg
filds
sbb
xchg
aaa
lahf
push
push
xchg
ja
push
dec
je
push
test
and
xor
loopne
aam
jge
push
outsb
sub
int3
movsl
push
lahf
adc
mov
jle
pop
mov
jb
mov
inc
repz
sbb
movsl
sbb
jle
lret
ret
adc
bound
inc
push
popf
push
dec
cmc
xchg
daa
add
dec
pop
sub
push
test
dec
gs
int3
mov
scas
dec
lahf
int3
fnstsw
and
pop
fst
and
out
push
push
adc
fdivrl
decl
mov
or
cmp
es
xor
pop
push
hlt
psadbw
cmpl
scas
push
testl
or
ret
mov
jge
push
test
push
outsb
xor
jl
int
pushf
ret
fstpl
push
pushf
dec
mov
sahf
adc
and
cli
sbb
int3
pop
dec
mov
mov
sub
std
mov
cmpsl
xchg
sbb
cmp
adcl
mov
pop
lock
xlat
adc
cltd
sub
or
cmp
incl
ds
popl
popa
pop
pop
push
add
test
sub
add
hlt
cmpsb
bound
pusha
jbe
mov
mov
xor
jb
mov
mov
in
std
and
in
mov
or
mov
sub
xchg
pop
dec
push
sbb
cmp
repnz
bound
enter
out
adc
mov
daa
push
mul
or
insl
pushf
or
fcomi
cltd
addb
test
popf
sbb
mul
jnp
divl
jecxz
mov
cmc
into
sub
jg
pushf
mov
jmp
cmp
ja
mov
jo
xchg
insl
dec
pop
sub
stos
leave
ds
or
sbb
inc
testl
ror
fmull
mov
out
insl
loopw
xor
mov
cmpsl
imul
dec
divl
and
mov
push
rcrl
ret
xchg
jecxz
jmp
adc
andb
and
add
sub
jns
xor
rcll
pop
push
add
cwtl
or
in
mov
xchg
push
xchg
jl
mov
sub
adc
insb
sbb
xchg
and
push
mov
out
or
fstps
test
stos
clc
ds
add
dec
inc
popa
mov
ret
jnp
in
frstor
inc
jbe
add
lret
subl
rcr
movsb
ror
push
push
mov
dec
ljmp
aas
cmp
push
xchg
in
dec
ds
scas
and
addr16
adc
jl
test
aaa
sbb
mov
in
outsb
push
scas
and
adc
sbb
mov
lcall
daa
pusha
xchg
jb
cmc
ja
les
lods
push
push
add
ds
ds
and
xchg
sarl
dec
stos
and
loope
mov
clc
cmp
clc
ret
adc
ret
inc
lds
xchg
push
push
pop
dec
mov
mov
popf
or
xchg
fstpl
jp
cmc
push
je
adc
aad
mov
xor
movsl
xor
or
xlat
cmpl
add
stos
and
std
in
arpl
lcall
mov
or
mov
pushl
add
jne
das
jp
rcrl
int
insb
mov
jns
dec
sbbl
xchg
sub
jae
testl
push
ret
add
cli
aam
push
or
imull
sbb
pop
inc
and
cmc
jbe
mov
sub
and
pop
add
aas
sub
stos
scas
mov
pop
inc
mov
mov
push
inc
inc
and
push
pop
testl
pop
and
pop
and
mov
hlt
fsubrl
push
testl
add
cmp
pop
adc
mov
xlat
jbe
pop
inc
sbb
mov
loopne
sahf
mov
mov
popa
dec
adc
jns
subl
stos
mov
testl
cmp
dec
push
jmp
sahf
das
scas
arpl
adc
sahf
mulb
js
inc
jae
and
adc
and
jbe
push
mov
mov
ljmp
mov
mov
mov
fst
test
repnz
scas
or
pop
inc
adc
dec
add
inc
xor
int3
mov
pop
cs
repz
inc
out
cli
sti
inc
ljmp
loopne
les
cwtl
dec
mov
push
and
push
movb
and
bsf
shlb
adc
xor
fs
ret
gs
and
jae
or
rorl
jg
sbb
rcl
and
fcompl
xchg
pop
shll
xchg
xchg
sbb
mov
jns
jno
sbb
mov
adc
lret
ljmp
js
call
ss
xor
mov
xchg
xor
sub
xchg
data16
push
push
dec
adc
sbb
push
xchg
mov
mov
pop
sub
popf
adc
mov
jp
pop
mov
ljmp
inc
fisubrs
roll
xchg
xchg
xor
sahf
dec
add
pop
lock
inc
imul
mov
bound
pop
lods
xchg
pop
dec
inc
lahf
stos
and
inc
push
sub
mov
push
sbbl
fcompp
pop
ljmp
aad
xor
push
data16
cmp
stos
push
shll
mov
aad
aad
loopne
in
out
or
jnp
cmp
aas
mov
xchg
xor
push
or
daa
insb
add
xchg
push
dec
lds
jge
shlb
dec
hlt
out
outsl
sahf
pop
ffreep
and
cmp
mov
add
xor
les
mov
sub
push
xchg
push
push
sarb
in
mov
imul
mov
sar
out
outsb
out
mov
int3
adc
push
jae
cwtl
cmp
repnz
out
inc
sub
popa
movsb
out
xchg
gs
dec
push
pmulhuw
sub
mov
inc
pop
outsb
xchg
add
data16
mov
xchg
xor
xchg
sub
jnp
sti
jne
data16
fsubrs
push
idivb
pop
ljmp
cwtl
aas
icebp
or
jo
popa
add
mov
jns
xchg
xlat
in
push
sbb
mov
sbb
add
popf
mov
repz
push
aaa
push
xor
fnstenv
mov
lods
mov
scas
lretw
adc
xchg
and
je
bnd
cmp
adc
inc
ja
pop
loop
xchg
popf
fcoml
in
pop
das
mov
sub
mov
mov
ds
mov
nop
mov
lock
insl
ds
push
cmpsb
mov
inc
fadd
pusha
pop
insb
orl
sub
out
xor
adc
sub
add
test
outsl
xchg
sub
jmp
movsl
fisubl
inc
and
xor
fs
js
mov
and
sti
push
or
xchg
lcall
pusha
arpl
add
jae
sub
xor
outsl
push
mov
sbb
xchg
mov
sahf
xor
lahf
test
or
scas
hlt
mov
test
sbb
scas
mov
shl
pushf
inc
es
mov
inc
subb
add
xchg
cmp
jnp
repz
mov
jbe
and
or
dec
jl
pop
and
fstps
xchg
in
lcall
mov
je
mov
flds
jae
cltd
gs
mov
ret
lods
inc
jle
sbb
push
add
mov
fld
stos
in
imul
cwtl
inc
mov
dec
das
fidivl
rol
js
cmc
inc
in
ss
xchg
inc
stos
loope
jne
lods
mov
in
push
mov
xor
add
mov
sbb
cmpsl
add
mov
scas
sub
jecxz
shll
mov
sahf
test
and
jge
jo
xor
push
sarl
xchg
inc
ds
pop
sti
test
inc
inc
movsl
sub
sub
lret
pushf
ja
inc
dec
xchg
popf
push
ljmp
dec
mov
mov
es
xor
xor
jecxz
add
enter
dec
mov
xchg
outsl
and
out
lds
clc
or
add
and
sarl
ret
repz
xor
fistpl
jo
push
insb
adc
enter
inc
cld
and
dec
pop
insb
out
je
jg
lods
dec
xchg
fwait
push
call
xor
or
lahf
call
rol
push
scas
or
inc
sub
int3
cmc
sbb
inc
iret
push
mov
in
out
inc
sub
jno
ja
stos
sub
nop
lods
cmp
jns
jno
and
cmp
sar
jle
xor
add
mov
clc
stos
idivl
loope
cld
push
push
mov
xor
and
push
out
sbb
int3
call
lcall
icebp
mov
inc
mov
dec
dec
xlat
jnp
pop
xor
cli
lods
jb
movl
xor
dec
add
jg
push
loopne
lret
lahf
push
jno
outsl
adc
aad
shlb
shl
or
mov
in
sbb
pop
std
rcrb
sub
jecxz
jmp
or
cmpsl
push
mov
lcall
jne
inc
rolb
add
dec
iret
call
fs
xor
insb
mov
push
repnz
stos
jae
push
xchg
mov
inc
cmp
jnp
lods
push
and
repz
xchg
inc
sahf
sbb
mov
push
sbb
adc
pusha
out
jo
iret
outsl
out
hlt
inc
mov
insl
fdivrl
xor
push
push
mov
je
rcl
imul
sbb
push
push
lahf
nop
dec
adc
test
sbb
mov
stc
pusha
mov
add
mov
or
inc
les
inc
pop
inc
add
aas
cmpb
cmp
mov
pop
add
mov
mov
rcrb
insb
scas
stc
push
adc
aam
cmpsb
dec
pop
shll
dec
lcall
test
push
fs
jne
iret
scas
dec
push
fsubrs
pop
mov
xchg
loope
movsb
or
or
jae
div
push
test
cwtl
lcall
lds
cmp
pop
test
lods
xchg
or
and
sub
test
lods
fsincos
mov
cli
mov
aaa
mov
cltd
js
int3
fcoms
ret
lods
adc
cld
cmc
data16
mov
adc
fcomps
and
shrl
mov
cmpsl
push
dec
stos
and
popa
negl
sub
or
or
popa
outsl
sbb
xlat
bound
adc
and
mov
sbb
mov
gs
xor
dec
sbb
testb
aaa
pop
out
adc
mov
inc
test
xchg
jp
dec
iret
push
enter
push
movsl
dec
in
lret
cmp
mov
xchg
mov
mov
icebp
sbb
cmp
and
lea
fistl
lahf
aas
hlt
cs
push
imul
insl
mov
jo
pop
jle
sub
xchg
outsb
aam
mov
xor
frstor
shr
imul
lret
push
out
mov
sahf
mov
test
stos
int
lods
xchg
outsl
mov
pop
mov
es
rorb
mov
cltd
inc
in
test
mov
dec
dec
std
xlat
shlb
insb
and
dec
outsl
push
xchg
inc
loope
mov
inc
leave
imul
frstor
std
ljmp
imul
ss
jae
or
cwtl
rcll
out
andb
icebp
popa
lret
pop
fisubrs
imul
fldl
stc
add
sti
pop
out
dec
sbb
js
loopne
push
je
push
test
sub
jno
mov
sahf
push
mov
push
xor
sbb
jg
dec
imul
dec
mov
std
pop
roll
pop
icebp
add
mov
dec
out
xchg
sbb
pop
add
sub
and
sarb
inc
repz
and
sbb
pop
loope
call
lret
stos
test
add
fdivl
xor
adc
dec
imul
out
sub
xor
shrb
cs
das
fnstcw
sahf
adc
insl
out
push
xchg
jns
lret
testb
imul
sarb
cltd
pop
xor
mov
xchg
insl
jg
xchg
insl
int
xchg
sbb
scas
inc
ljmp
jbe
jbe
sbb
ds
imul
int3
adc
sti
aam
sub
call
fcomp
shlb
ficompl
sbb
inc
mov
out
ljmp
xchg
mov
jae
iret
inc
add
pop
pop
pop
lods
xchg
push
hlt
insb
enter
out
stos
jb
push
pushf
lret
or
js
or
lea
repnz
int3
cmpsl
push
imul
xor
dec
pop
mov
mov
in
mov
fldenv
into
pop
push
aam
mov
outsb
jmp
pusha
fs
in
pop
add
fistpl
int3
outsb
adc
daa
adc
xor
mov
mov
sbb
stc
lock
and
dec
fisttps
adc
stos
sarb
fwait
int3
pop
inc
push
divb
imull
cwtl
dec
rcrb
in
dec
inc
cmpl
jp
testl
cmc
add
jnp
test
lods
ret
lahf
test
gs
push
jbe
cli
cmp
pop
mov
insl
or
or
pop
js
adc
mov
aas
loopne
xor
sarl
test
scas
out
sub
mov
xchg
scas
shlb
or
adc
lret
mov
push
jmp
jo
test
mov
fiaddl
xchg
je
pop
lods
mov
jnp
ftst
and
fmull
adc
fstpl
push
ds
fisttpl
inc
xchg
dec
stc
decb
cmp
adc
mov
push
mov
cwtl
mov
jne
fwait
xchg
cmp
rcrl
adc
mov
pop
stc
mov
mov
hlt
or
call
mov
inc
lret
pop
lods
and
jle
jmp
adc
adc
insb
jae
aam
sub
lcall
add
adc
js
sbb
loope
push
sbb
adc
in
xchg
mov
test
or
xchg
fidivl
adc
shrl
dec
ljmp
xchg
aad
pop
xlat
xchg
les
jp
test
rorb
pop
add
fwait
dec
outsb
sti
lahf
leave
shlb
clc
es
add
int3
outsw
faddp
jecxz
push
loope
insl
jg
xorb
pusha
js
or
movsb
imul
jp
in
call
sti
in
shlb
into
xchg
pop
add
or
xor
test
xchg
mov
xor
repz
outsl
mov
mov
out
mov
push
sbbb
arpl
inc
sahf
into
dec
xor
xchg
aas
mov
inc
test
jo
imul
jns
or
push
sub
in
insb
mov
and
pop
mov
cmp
int
repnz
sub
call
lods
adc
and
testl
xor
in
lods
lds
movsl
ret
xchg
rclb
les
dec
pop
add
sub
in
xchg
or
adc
sbb
addb
roll
call
inc
inc
dec
mov
test
popa
jns
inc
idivb
cmc
std
sub
mov
stos
xor
push
std
and
in
mov
push
pop
into
mov
das
je
add
or
mov
dec
cmp
inc
fildl
in
sub
mov
fisubl
out
test
dec
notb
in
mov
shrb
add
jae
inc
push
sahf
mov
std
aam
iret
sbb
mov
or
andl
cwtl
shlb
xlat
pop
pop
repz
lods
jl
cmpb
or
lds
mov
adc
sahf
outsl
pop
sbb
loop,pn
xchg
fisubs
mov
cmp
mov
repz
adc
insb
pop
mov
cmp
lea
adc
movsb
jmp
loop
jnp
aad
gs
sbb
cmp
push
stos
hlt
ret
add
stc
xchg
ret
mov
lock
jecxz
sarb
in
popa
mov
add
pop
test
xchg
add
sbb
and
push
repnz
cmp
dec
fsubl
js
cltd
xchg
mov
bound
xchg
adc
or
inc
push
dec
or
xor
jl
scas
dec
hlt
mov
jmp
jbe
mov
dec
pop
andl
test
lods
push
sahf
and
push
enter
mov
aam
push
sbb
xchg
dec
in
cli
ret
popf
jl
sti
and
js
test
mov
push
cmp
andb
fistl
jmp
fwait
jmp
out
pop
mov
test
orl
ds
lods
ljmp
in
pop
xor
repz
rorl
shl
pop
xor
pop
sbb
cmp
jo
or
cmp
xlat
adc
cmpsb
sub
pop
std
or
scas
cli
leave
mov
mov
mov
nop
mov
push
ds
data16
cmc
into
movsl
sub
lock
mov
enter
and
fsubs
dec
cmpsl
push
push
jle
cmp
inc
push
xchg
out
loop
adc
mov
clc
xchg
pop
loope
xorb
les
xor
pop
mov
mov
xchg
mov
inc
or
sbbl
outsl
sub
scas
jb
add
pop
dec
lcall
pop
or
mov
pop
jae
jp
gs
sub
jmp
mov
icebp
mov
pop
ret
enter
ja
test
dec
cmpl
fidivs
xor
lds
push
xlat
cmp
pop
xchg
ficoms
jmp
mov
fbstp
adc
sub
xchg
mov
cmpb
test
fstpt
out
hlt
aaa
adc
jl
and
out
xchg
push
push
dec
xor
dec
push
and
adc
enter
jl
push
jne
in
lcall
cmp
hlt
jae
jbe
dec
jne
dec
dec
in
jne
fs
int3
mov
cmp
push
xchg
in
sub
cmpsb
dec
aaa
sbb
mov
inc
and
lea
cmp
and
std
aad
xchg
lahf
jecxz
mov
xchg
xchg
sbb
test
insb
mov
and
notb
inc
and
in
xor
jae
sub
adcl
push
lret
in
ljmp
xchg
mov
adc
xor
in
xlat
or
xlat
pusha
imull
in
sbbb
xchg
push
iret
and
ret
fidivs
jmp
push
dec
xor
xchg
sub
mov
pusha
movsl
pushf
out
idivb
call
dec
cld
push
ljmp
cwtl
adc
dec
inc
dec
popf
dec
add
lahf
xchg
outsl
sbb
icebp
mov
dec
and
jmp
cmp
mov
add
outsl
stc
inc
leave
fisttpll
jne
cli
push
pop
andl
dec
adc
das
leave
lds
push
pop
ds
pop
int3
mov
rcrl
popf
jge
int3
mov
cmpl
add
push
xchg
pmaxsw
aaa
imul
adc
cmc
cwtl
pop
jo
pop
andl
loop
xor
jge
mov
test
lods
pop
cmpb
cli
push
movsl
mov
test
icebp
repnz
imul
iret
sub
negl
int
xchg
inc
outsb
cmpsl
jns
xorb
mov
dec
daa
xor
adc
int
icebp
aad
cmpsb
jb
push
mov
jae
inc
or
mov
xor
das
xor
sbb
or
icebp
push
jb
jne
roll
mov
lret
fs
mov
xor
aas
add
shrl
xchg
add
dec
xchg
inc
pop
adc
movsb
es
stos
xor
subb
jle
int
mov
insl
test
sub
es
into
pop
and
adc
ret
outsb
inc
aaa
stc
mov
icebp
inc
mov
add
rolb
mov
scas
sbb
adc
xor
fcomps
aad
sub
fsts
gs
add
mov
in
mov
jbe
in
mulb
test
and
js
jmp
lds
aas
stos
es
sub
xorb
xor
mov
and
mov
push
hlt
xchg
dec
js
jns
pushf
or
jmp
pop
mov
loopne
adc
pop
sub
sbb
mov
lods
add
jne
addb
add
pusha
sbb
push
xor
sar
add
jecxz
dec
sbb
cmpsl
lock
xlat
add
mov
mov
mov
add
bound
inc
fldcw
sbb
jnp
scas
mov
notb
mov
mov
cld
sbb
aam
movsb
pop
jbe
jb
sub
stos
arpl
inc
cltd
int
add
int3
mov
es
mov
cmp
in
xor
inc
jge
adc
mov
outsb
mull
int
or
cmp
movsb
dec
cmpl
sbb
sub
cld
push
xchg
iret
xor
push
sti
stos
pop
sub
ret
and
sarb
jne
lahf
pushf
xchg
mov
inc
testb
outsl
clc
xchg
xor
jl
inc
xchg
sub
xor
into
popa
fistpll
dec
pop
push
mov
hlt
loop
push
pop
mov
mov
movsl
rcll
scas
out
dec
adc
shlb
and
mov
sub
jmp
sahf
js
push
or
ss
fs
add
push
mov
rorl
xchg
mov
xchg
sbb
xor
push
mov
cwtl
mov
xor
out
imul
insl
sub
xchg
inc
or
jne
xchg
mov
adcb
adc
cmp
push
cwtl
adc
lcall
sti
cmpsl
stos
fmulp
addr16
je
fadd
mov
rclb
xchg
movl
xor
test
pop
maskmovq
add
add
mov
xor
xlat
xor
inc
xor
out
je
or
popf
aad
mulb
fdiv
mov
add
adcl
xchg
mov
lock
mov
dec
xchg
sbb
loope
imul
jo
repz
push
dec
push
loopne
cmc
pop
fmull
adc
dec
iret
sti
rcrl
sbb
mov
fstpl
lods
xchg
mov
push
dec
out
rcr
push
or
insl
inc
callw
gs
call
ds
fisttps
decl
inc
or
in
loopne
loop
mov
out
fldcw
adc
xor
adc
bound
mov
mov
cmp
xchg
add
loope
scas
push
fwait
mov
xchg
scas
dec
int
xchg
dec
sub
or
xlat
or
pop
inc
and
loope
pop
ss
addb
adc
cmpsb
je
pop
out
adc
jg
cmp
mov
dec
jge
inc
jl
stc
je
nop
mov
add
mov
mov
mov
testl
mov
insb
mov
push
rclb
jp
pop
xlat
hlt
adc
hlt
mov
jmp
enter
leave
test
in
mov
in
xchg
xor
into
mov
push
mov
outsl
add
lea
and
and
add
loope
repz
cmp
push
aam
sbb
add
sti
mov
pusha
fbld
inc
add
jnp
add
push
pop
out
mov
inc
mov
add
mov
jg
jbe
jmp
add
jbe
push
cmp
addr16
xchg
mov
pop
pop
test
mov
pop
jbe
and
jge
push
inc
test
call
roll
push
cwtl
sub
popf
mov
jmp
stc
xchg
out
cmp
jle
fsub
psubsb
and
cmp
repz
inc
cli
sti
std
mov
xchg
mov
or
lock
sbb
bound
mov
outsl
arpl
mov
sti
in
or
inc
xorl
in
mov
ret
pop
inc
jbe
cmp
jle
ret
aaa
rorb
pop
push
jnp
push
insl
xchg
mov
inc
push
mov
popa
pop
jmp
and
mov
jg
out
daa
and
setbe
repnz
pop
insl
mov
xchg
cltd
adc
popa
push
movl
nop
iret
xchg
xchg
daa
out
ret
icebp
adc
pop
pusha
aam
dec
sbb
sub
or
idivl
add
mov
leave
nop
jl
shll
lods
faddl
xchg
sub
mov
mov
push
jge
sbb
sub
and
mov
adc
xchg
mov
push
js
push
push
jecxz
adc
push
adc
push
pushf
mov
dec
movsb
outsb
xor
mov
mov
out
shrl
lods
repnz
mov
sbb
xchg
inc
shr
jp
test
jne
jp
adc
outsb
push
jg
pop
push
mov
jp
push
and
dec
int3
pop
xchg
clc
mov
xor
mov
xchg
repz
dec
lock
loop
iret
gs
mov
fdivs
mov
sub
outsb
add
scas
sbb
dec
pop
and
sarb
cli
and
dec
es
and
mov
mov
jp
loop
imul
sub
icebp
test
loope
mov
inc
popl
add
dec
fnstsw
fyl2xp1
sub
div
push
mov
gs
test
rclb
jle
loope
sub
mov
sbb
lcall
dec
rclb
cmp
mov
shll
dec
jg
ret
adc
cmp
lret
cld
and
pop
cld
mov
xchg
addr16
in
and
pop
mov
shl
addr16
and
mov
push
mov
xor
lret
lods
jb
push
mov
jp
sarl
icebp
aaa
xchg
jmp
andl
test
popa
or
adc
or
push
jmp
movsl
sub
add
pop
adc
dec
sarl
arpl
cld
inc
fs
sub
cmc
push
and
xor
xlat
pop
mov
adc
push
push
test
popa
das
xchg
out
fisttps
rcll
sub
xchg
fwait
mov
and
jecxz
ljmp
sub
push
out
pop
push
aaa
sarb
in
xchg
add
pop
xor
push
cltd
lcall
sub
out
jbe
cmp
and
cmp
sub
jecxz
les
bound
and
ds
sbb
out
and
and
leave
sub
loop
jb
xchg
fcmovb
jae
sbb
pop
inc
imul
aas
sbb
dec
scas
call
mull
fs
arpl
or
push
dec
mov
and
hlt
add
das
or
out
ljmp
sub
je
inc
sbb
sbb
xor
xor
insl
cmp
lahf
mov
movsb
fxch
pusha
insb
idivb
ficoms
mov
addl
push
push
inc
imull
outsl
inc
and
ret
mov
xchg
and
mov
mov
and
das
adc
xchg
dec
fsubp
mov
lods
pop
in
ss
js
out
lret
push
inc
mov
adc
mov
enter
and
icebp
leave
xchg
stc
stos
xchg
pop
mov
push
pop
ret
push
lods
dec
clc
cmp
arpl
pop
mov
fwait
fs
dec
cmp
and
dec
push
jecxz
mov
sbb
dec
jp
in
icebp
xchg
push
push
xchg
icebp
or
insb
inc
jmp
lahf
out
inc
mov
cmpsl
mov
aas
scas
sbb
cmc
int3
in
pop
test
or
adc
push
sbb
mov
sub
mov
and
jle
bound
call
test
imul
ret
loopne
xor
adc
insb
add
mov
dec
sti
aad
or
xor
lock
sbb
in
jge
pushf
in
test
add
fdivrs
shrb
mov
xchg
mov
fsubl
push
or
or
addr16
dec
fstpl
xor
push
js
test
scas
fwait
js
fsubrl
mov
popa
test
mov
stos
sub
and
scas
iret
test
mov
fwait
or
xchg
int
push
in
inc
lods
data16
jns
cmpsl
ja
sahf
adc
aas
sbb
into
insb
movsb
xchg
sbb
adc
mov
sub
les
stos
stos
dec
outsb
push
mov
ficoms
fcompl
jnp
cmp
mov
xchg
inc
mov
adc
arpl
push
aas
ror
jns
mov
pop
mov
push
lret
fildl
cltd
mov
loopne
and
fisubrs
inc
xor
adc
mov
pop
sbb
xchg
pop
mov
and
xchg
lret
sub
xchg
fdivs
das
and
test
call
out
stos
mov
stc
dec
mov
jge
ds
pop
dec
imul
in
std
or
push
or
cli
stos
imul
xchg
imulb
xchg
ja
jno
and
insl
pop
outsl
shll
jo
outsb
xchg
rcrl
out
pop
rcr
stc
mov
dec
sub
sbb
pop
sbb
call
jecxz
push
je
mov
imul
mov
pop
mov
out
dec
popa
push
iret
daa
mov
mov
sbb
test
mov
out
test
in
inc
repz
popf
or
mov
lea
add
inc
lret
cwtl
or
std
mov
test
lods
sub
in
jmp
fmuls
lea
fidivrs
mov
sbb
pop
out
adc
dec
subl
xor
mov
cmpsb
imul
xor
push
sbb
mov
sbb
fists
lods
popf
ss
dec
adc
adc
dec
cmp
cli
xor
inc
mov
or
scas
pusha
mov
adc
iret
leave
xor
stos
mov
push
lds
pop
jl
jl
bound
xor
push
fdiv
aad
xorl
jg
push
pop
ret
cltd
imul
lret
add
stos
lret
cmp
xchg
jmp
aas
scas
xchg
fisubl
or
sub
jl
scas
push
shll
ret
arpl
inc
mov
cmp
pop
or
rcll
outsl
mov
cmc
cwtl
push
insl
cmp
ds
dec
sbb
lea
idivl
dec
leave
cmp
adc
lds
fildl
jecxz
pop
movsl
repnz
mov
push
mov
sub
repnz
iret
testb
push
fdivr
mov
mov
sti
sub
lods
mov
inc
clc
nop
mov
and
xchg
int3
es
push
push
testl
outsl
into
and
or
loop
out
inc
or
lds
push
cltd
fdivl
insb
push
lahf
fwait
inc
sub
pop
stos
insl
cmp
rcrb
add
sti
aas
mov
ss
cmpb
or
mov
outsb
lret
mov
stc
mul
sidtl
xor
pop
cld
test
jp
cwtl
jno
pop
push
repz
cmp
cltd
jmp
mov
scas
cmp
sbb
xlat
loop,pn
fsubrl
inc
scas
pop
mov
pop
push
aas
lock
imul
lcall
rolb
mov
sti
test
cmp
std
push
mov
mov
and
mov
dec
add
stos
pushf
jo
movnti
dec
insl
aas
xchg
ret
in
or
dec
fstl
arpl
sub
sbb
ja
out
enter
push
mov
jmp
rcrl
dec
daa
pop
jmp
xor
loop
ret
leave
cmp
jae
ficomps
jne
repz
cli
lret
imul
pop
pop
test
sbb
sub
ret
lods
daa
lods
jmp
xchg
sbb
movsb
mov
scas
mov
mov
lods
dec
push
out
push
movsb
outsb
pop
xchg
mov
fildl
mov
testl
inc
mov
sahf
subl
shlb
pop
out
push
je
call
lcall
int
push
sub
movsl
rcrl
push
push
jb
hlt
xchg
test
test
loope
and
pop
mov
or
dec
lret
inc
xchg
jb
add
sbb
lods
pop
mov
or
push
pop
inc
jge
dec
das
fs
ret
mov
inc
pop
push
scas
mov
mov
adc
and
mov
loop
loopne
je
mov
mov
repz
dec
push
xor
mov
dec
jbe
dec
arpl
adc
dec
in
dec
push
xchg
cltd
test
inc
adc
and
int
jl
subb
xchg
add
sub
shlb
scas
lods
xadd
repz
push
daa
and
dec
add
and
cmp
lea
mov
lds
lds
xchg
mov
or
orb
adc
rorl
in
add
mov
je
jo
outsl
push
out
icebp
cmp
bswap
inc
insl
pop
mov
dec
js
mov
popa
nop
pop
jg
jo
out
push
mov
xchg
dec
mov
paddd
test
test
jge
push
sub
nop
sahf
popf
jmp
fdivl
sbb
movsb
aaa
stos
fs
imul
mov
cmp
cmpl
push
fbstp
adc
mov
inc
push
cmpl
mov
inc
fldenv
and
jno
xchg
ds
xchg
pop
lock
mov
cmpxchg
int
push
and
lret
maxps
mov
jge
stc
push
popf
mov
sbb
mov
mov
imul
dec
addl
int
xchg
xchg
xor
xchg
fld1
inc
xchg
aas
rcrl
arpl
lcall
ret
jno
icebp
in
in
outsb
mov
testb
imul
xor
ret
pop
out
shr
aaa
testb
xor
loope
sahf
scas
xor
mov
sbb
data16
leave
xor
cld
testb
loop
inc
ret
lret
das
mov
adc
stc
subl
clc
jo
sbb
inc
in
cmp
ret
int
jmp
repnz
pushf
jno
into
lret
mov
in
out
xor
sbb
inc
pop
ficomps
fimull
pop
ficompl
ja
or
jo
das
jg
xchg
shll
push
enter
or
aas
push
aam
xor
or
fildl
xchg
mov
pop
xchg
movsb
mov
mov
jo
mov
aaa
jae
pop
push
pop
in
and
sbb
enter
push
xlat
loop
pop
xor
orb
aaa
or
pop
mov
rcr
sub
iret
test
movsb
xchg
pop
leave
cltd
or
cs
xchg
and
mov
lret
popa
idiv
dec
jl
fimuls
sub
adc
dec
lahf
xor
jnp
sahf
cmpsl
push
sarb
in
movsb
inc
jbe
cmp
ss
mov
xchg
cltd
hlt
in
jo
xor
or
arpl
mov
popf
jl
pop
mov
xor
lock
or
mov
xor
fcompl
cmc
add
jmp
xchg
dec
and
jbe
jne
in
xchg
mov
and
ss
mov
cs
add
es
mov
sbb
fdivrs
and
sahf
hlt
and
rcl
add
ja
xor
inc
inc
leave
ret
shl
movsl
dec
out
int3
and
aaa
mov
insl
mov
xchg
ret
mov
sbb
xchg
cmp
jle
jge
pop
mov
std
jl
jle
jle
fdivs
jl
add
cmp
hlt
mov
jnp
movsl
or
jb
cmp
fwait
adc
jnp
xchg
dec
movsl
ljmp
pop
dec
cltd
sbb
rcr
adc
push
mov
out
pop
pop
mov
xchg
out
rorl
je
mov
addl
push
adc
adc
test
scas
add
rcrl
jnp
push
inc
scas
and
push
adc
dec
or
push
mov
into
mov
add
push
lods
xchg
and
or
push
stc
in
dec
push
xchg
mov
mov
orl
cmovs
sub
jge
pop
dec
lret
jge
jb
repz
cmp
addl
sbb
pop
mov
add
ss
dec
pop
inc
pop
call
aam
mov
inc
cmp
divb
mov
out
jo
popf
sbb
hlt
mov
mov
adc
imul
out
mov
push
sbbl
lock
adc
lock
lahf
add
shll
icebp
orb
cs
mov
popa
outsl
or
cmp
inc
mov
scas
or
pushf
test
leave
decb
daa
pop
iret
in
or
dec
or
loope
adc
inc
lds
and
xchg
and
adc
mov
and
es
repz
push
fisttpl
int
out
lcall
out
adc
push
add
and
ret
and
movsb
aaa
sub
sub
rcll
scas
xor
mov
jbe
movsb
out
xor
cmp
in
add
xor
dec
aaa
lods
mov
cmp
clc
lock
movsl
test
call
dec
xor
sbb
sbb
mov
push
in
pop
mov
aaa
test
decl
sub
ret
jge
cmp
dec
mov
fldt
xchg
jmp
push
stos
mov
out
inc
je
cmpsb
sbb
jge
push
dec
jle
vmread
add
pop
inc
pop
shr
rolb
add
mov
cld
mov
sbb
push
mov
push
addr16
sbb
ficomps
std
push
jno
repnz
sbb
in
cwtl
lahf
shlb
jae
cli
int
cmp
inc
pop
adc
and
rorl
push
bound
lcall
sahf
xchg
push
jno
icebp
cltd
lret
mov
shlb
mov
data16
jno
mov
xor
sbb
in
int
or
or
dec
in
adc
out
inc
mov
cmp
jecxz
aaa
jae
fistpll
and
in
push
inc
out
shlb
or
or
push
ret
xor
in
mov
jae
pusha
int
xchg
in
push
inc
mov
xor
fwait
sbb
fisubl
push
adc
inc
push
in
inc
leave
sub
mov
dec
fs
pop
cmp
in
cmpsb
xchg
inc
lcall
pop
mov
add
cmp
mov
jae
sub
pop
inc
push
lea
jb
fisubrs
add
fwait
psubb
add
xchg
in
mov
aad
cld
sub
mov
add
mov
shll
inc
shll
aad
jecxz
cwtl
push
mov
mov
outsl
pop
imul
movsl
push
add
faddl
int3
mov
dec
pusha
sub
xor
in
pop
mov
xor
aas
mov
lahf
addr16
leave
outsb
ljmp
andb
icebp
test
testb
add
stos
and
je
fwait
pop
sub
cs
enter
lock
test
jo
loope
pop
cwtl
add
popa
cmpl
cltd
bnd
jecxz
test
fsubrl
filds
cli
push
ret
xlat
cmc
fsubrs
bound
adc
cmp
adc
scas
dec
xlat
cmp
and
fstpl
fimuls
bound
sub
lahf
and
rorl
in
out
or
xchg
lea
and
iret
push
retw
mov
sbb
nop
loope
fcoms
lods
daa
shlb
jns
jbe
cmpsb
cltd
push
lock
aas
mov
lret
dec
test
lcall
sub
dec
mov
cli
outsl
add
xchg
mov
xor
jo
xchg
xor
rolb
fldenv
adc
and
xchg
cmp
xchg
or
inc
dec
mov
insb
jl
sbb
adc
pop
lea
adc
jae
cmp
inc
push
hlt
and
mov
jns
cmp
dec
arpl
test
ret
mov
aad
jmp
jno
or
cwtl
mov
or
mov
fadds
arpl
xor
xchg
add
and
add
pop
fisubl
sub
sahf
clc
inc
cmp
stc
roll
rcl
mulb
lods
out
sub
fadds
push
jnp
aas
aaa
add
shll
cmp
mov
outsb
out
inc
insl
loopne
push
pusha
out
jae,pn
xchg
adc
loope
lret
ficoms
arpl
call
xchg
or
mov
push
dec
sub
inc
aad
icebp
or
mov
aad
dec
xor
or
jno
sbb
lret
sub
das
adc
inc
addr16
dec
jno
xchg
sub
sub
sbbb
int3
jle
movsb
in
pusha
lahf
gs
sub
sbb
sub
mov
mov
scas
pop
adc
cmp
jbe
ret
and
sahf
cmp
mov
cmpsl
pop
loop
xchg
lea
sbb
repnz
unpcklps
add
aaa
cmp
adc
pop
aaa
mov
rol
popa
xor
cld
and
daa
dec
cmp
roll
inc
cwtl
sbb
dec
mulb
inc
jbe
fildll
mov
jae
cmp
or
mov
adc
into
inc
dec
and
in
rorb
cltd
sbb
popf
les
mov
pusha
sbb
mov
adc
mov
sbb
iret
std
inc
or
mov
nop
mov
fcmovnb
and
outsb
mov
cmp
lock
mov
sarb
dec
xor
mov
xor
pop
sbb
into
xchg
sbb
ja
jno
mov
pop
xchg
pushw
js,pt
push
addr16
xor
jne
sub
add
cltd
xor
loope
mov
in
jg
sarl
adc
xchg
dec
jl
jae
or
add
mov
pop
ret
outsl
mov
dec
icebp
sub
fs
popa
jno
xchg
addr16
loope
repnz
outsl
push
xor
sub
aam
lds
push
push
lret
mov
roll
imul
stc
lock
faddp
mov
pop
loope
jp
and
dec
mov
rcrl
std
add
mov
std
addr16
mov
cmc
mov
add
in
inc
ljmp
fsubs
lcall
or
cs
filds
mov
mov
inc
test
hlt
iret
cmpsb
ljmp
stos
jno
shrl
aas
lods
cmpl
movhps
bound
add
mov
leave
xor
xchg
cmp
xor
push
cmpsl
stos
inc
insl
cmpsb
dec
cmp
add
fmulp
adc
mov
rorl
ja
pop
daa
sti
data16
xor
clc
addr16
iret
jae
jae
mov
stos
xor
scas
jne
sti
push
pop
sub
das
js
loope
xchg
in
jo
out
cld
xlat
rorb
fwait
gs
inc
push
mov
dec
push
in
test
inc
inc
out
shll
retw
cmp
outsl
incl
push
add
outsb
aam
or
pop
aas
inc
xor
push
pop
jecxz
dec
repz
xor
add
fwait
lahf
nop
jg
out
cmc
cmp
call
loopne
mov
imul
cmpsl
mov
loop
cli
pop
ss
push
cmp
xchg
push
es
xor
push
jecxz
xchg
outsb
es
pop
jg
leave
ret
push
sub
rclb
sbb
xor
add
xchg
sbb
xor
lret
mov
stos
push
push
mov
mov
out
arpl
imul
shll
imulb
jg
jmp
out
and
testb
push
rorl
dec
scas
mov
pop
enter
std
sub
mov
stc
cmpb
sbb
add
pusha
add
popl
add
cmp
jmp
das
cld
ljmp
out
outsl
or
ljmp
cld
pop
sbb
ret
inc
mov
adc
push
pop
mov
push
fadd
cltd
fwait
in
fwait
sti
mov
mov
adc
dec
lods
scas
sub
xchg
push
in
mov
xor
push
jno
in
stos
xchg
xchg
jno
mov
add
adc
and
repnz
jle
insb
lds
mov
xor
push
add
cmp
push
nop
mov
xor
arpl
faddl
sbb
enter
fdivp
lods
aam
push
and
daa
or
pop
mov
pop
xor
pop
in
pusha
aad
gs
cli
cmpsl
xlat
ss
data16
dec
xchg
pop
inc
fisubrl
push
sub
shlb
orl
test
in
add
cwtl
dec
in
push
cmpsl
scas
or
sub
adc
push
or
xchg
out
pop
out
cmp
cmp
push
xchg
fincstp
xchg
inc
enter
xchg
shlb
push
mov
add
fucomi
inc
jl
mov
mov
fs
cmpsb
testb
js
out
mov
data16
mov
fs
cmp
adc
jne
insl
icebp
mov
pusha
insb
les
sub
je
test
adc
enter
inc
adc
ss
fwait
aad
lret
std
mov
jp
outsl
pop
and
cs
mov
jo
cmpl
jbe
jmp
vmread
cmp
xchg
sub
aaa
outsb
test
jne
test
cmp
push
fs
pop
les
and
fimull
imul
xchg
or
xchg
adc
lcall
dec
push
inc
mov
and
cs
movntps
add
push
out
addr16
push
ss
ljmp
nop
inc
mov
jl
push
jnp
js
mov
les
lds
adc
and
out
in
out
test
mov
xor
shrb
sbb
filds
jb
shrb
xchg
out
fsubl
jns
addr16
icebp
jge
lock
shrl
outsb
idivl
negb
enter
and
cli
or
scas
mov
cmp
xor
dec
sub
adc
add
jae
xor
mov
add
sbb
or
pushf
dec
ficoms
lahf
sub
adc
bound
ret
out
mov
sarb
mov
shl
fwait
mov
push
lock
sub
and
mov
mov
ret
out
adc
in
cmp
sub
outsl
les
push
add
clc
cs
lahf
je
inc
loopne
paddsw
int
imul
or
jge
pop
push
shl
lret
adc
sbb
or
insl
cmp
shll
lea
inc
decl
js
and
dec
sub
andb
into
jmp
cmp
lods
inc
cmpsb
fptan
ja
mov
sti
sub
dec
cli
fdivrs
xlat
out
push
mov
dec
jns
out
ss
mov
pop
rcrl
jnp
stos
and
mov
mov
orb
jmp
pop
and
bound
es
gs
mov
out
aad
dec
test
cli
mov
test
mov
mov
testb
push
add
repnz
ficoms
iret
clc
repz
test
adcl
ret
out
shl
hlt
pop
jns
push
sub
cltd
ds
mov
cli
xchg
lret
lock
pusha
scas
sub
pop
pop
lcall
add
mov
push
cmp
sti
or
push
add
xor
sbb
push
sub
jmp
xchg
enter
xlat
push
fcomps
aam
adc
fs
cmp
xchg
cmp
loopne
mov
aam
push
andl
adc
sub
jbe
insl
sub
sbb
pop
mov
aam
xchg
jne
imul
sub
mov
dec
jle
negl
sahf
inc
scas
xchg
out
ja
and
sbb
andl
lret
sub
lea
dec
lock
pop
sub
jg
adcb
sbb
das
jmp
scas
push
fisttpl
pop
push
mov
inc
jns
pop
fs
ljmp
mov
mov
push
shll
pop
icebp
lahf
push
iret
jns
push
xorl
pop
inc
cmp
fisubrl
cmp
in
shll
cmp
or
outsb
adc
es
dec
xchg
test
cwtl
test
aaa
test
or
outsl
or
lods
addr16
sbb
leave
or
mov
pop
xor
mov
xor
add
out
jns
out
dec
sarl
outsl
fiadds
out
lods
es
adc
push
push
mov
xchg
fcmovnb
stos
and
ja
std
out
loop
pop
pop
push
je
sbb
mov
add
mov
leave
and
int3
add
test
push
movl
fcoml
xchg
pop
jmp
scas
cli
cld
fidivrl
cs
and
ljmp
out
cltd
fs
add
push
mov
push
adc
inc
sti
mov
fisubrl
dec
push
sbb
push
sub
insb
cmp
dec
mov
dec
inc
in
aad
clc
adc
pop
mov
je
shrl
push
ds
mov
jns
sbb
push
out
adc
imull
stos
test
mov
jae
xor
ljmp
lret
push
add
test
dec
adc
stos
lds
sub
jno
cmpsl
jae
jmp
int
mov
in
xor
test
inc
mov
mov
test
jno
loope
push
in
and
notb
jl
or
dec
es
jg
jbe
mov
vpshufhw
ret
aaa
in
ja
push
pop
adc
test
jge
cwtl
movsb
mov
ss
cmpb
mov
mov
int3
inc
lods
into
xchg
gs
xchg
fisttps
fwait
adc
stos
ja
loopne
fwait
cwtl
add
sub
mov
mov
xor
popf
sub
mov
mov
iret
loope
lods
nop
xchg
popf
adc
xchg
cmp
inc
les
or
arpl
lcall
jb
cmp
sbbb
inc
mov
mov
mov
fprem
dec
cmpsl
test
add
clc
lret
dec
lods
mov
jb
cmp
push
scas
in
test
ds
inc
mov
pop
jnp
pop
mov
mov
ss
ja
outsb
scas
sahf
in
fsubs
iret
xor
jp
sub
cwtl
or
xchg
cmpsb
push
dec
sbb
dec
mov
loopne
cltd
outsb
lods
cld
jl
mov
cmp
dec
aad
iret
ret
and
push
cli
je
out
push
sbb
cld
gs
pop
xchg
lcall
add
push
scas
pop
scas
ss
fistpll
mov
push
sti
lret
lock
hlt
adc
testl
out
pushf
test
sbb
hlt
ret
lcall
fistl
je
push
je
aam
addb
inc
aam
idivl
stos
adc
stos
test
jp
lcall
mov
cmp
fisubl
icebp
outsl
stos
in
pusha
nop
inc
and
xchg
push
lods
mov
jnp
or
mov
imul
xchg
mov
mov
xchg
jg
dec
andb
subb
hlt
inc
ffreep
ja
out
cmp
into
xor
and
inc
fisubl
sbb
or
push
pop
xor
adc
cmpsb
pop
pop
adc
test
ret
clc
and
ja
jg
loop
jg
fistpll
jne
mov
scas
rorl
push
insl
cmp
movsl
mov
push
mov
fxch
movsb
iret
cli
out
xor
sti
add
jno
js
push
jl
sti
sub
pop
shlb
cmp
out
outsl
js
push
mov
int3
aam
push
pop
stos
clc
pop
pop
push
xorb
test
and
or
fisttpl
les
les
xlat
mov
add
adc
mov
add
mov
pop
push
push
sahf
cld
outsb
sub
mov
ret
mov
or
mul
in
mov
idiv
js
xor
mov
das
or
jle
filds
pop
xor
arpl
xor
pavgb
mov
cltd
sbb
dec
testb
jns
adc
push
mov
outsl
inc
jmp
adcl
dec
cld
sbb
or
aas
stos
or
inc
dec
fcom
je
sbb
cmp
mov
stc
data16
outsb
push
popa
jecxz
in
mov
roll
add
rol
hlt
xchg
rcrl
pop
cli
sub
and
mov
add
mov
and
jecxz
and
aas
mov
pusha
outsl
xor
cmp
cmp
mov
fcomps
fstpl
rcrl
cmp
mov
icebp
enter
mov
shll
int3
loope
xor
pop
dec
arpl
cmpsb
enter
and
add
or
jecxz
mov
shl
fsubrs
inc
loopne
push
out
pop
dec
mov
ret
aaa
jecxz
xchg
je
xchg
ret
jmp
push
pushf
lods
jmp
jns
mov
dec
dec
jno
cltd
mov
dec
and
ss
adc
inc
das
mov
cmp
jo
mov
in
addl
psllw
or
pop
loop
sahf
jae
movsl
insb
sub
jp
and
mov
mov
mov
dec
xchg
fsts
adc
cmp
dec
out
add
mov
aad
outsb
rcll
xchg
sbb
sar
loop
cmc
fistl
and
push
mov
in
pop
in
jle
cmp
xchg
xchg
mov
cmp
jne
cmpb
jmp
push
sbb
adc
xchg
aad
mov
insb
cmpsl
sub
int
out
lahf
and
push
test
test
cli
mov
lds
sub
cmpsl
cmp
call
test
jp
daa
gs
dec
pop
aaa
push
idiv
mov
xor
adc
sbb
das
js
xchg
xor
bound
pop
jo
fstpl
int3
inc
cmp
call
call
or
mov
aam
mov
popa
sar
out
outsl
xor
jno
aad
clc
ss
jle
cmp
pusha
pusha
push
mov
call
jmp
cmp
nop
mov
xchg
andl
data16
xchg
maxps
pop
jae
mov
cwtl
shrb
lds
and
imul
mov
sub
mov
pusha
div
sbb
scas
push
add
pushf
test
or
sub
cltd
mov
sti
and
mov
cmpsl
sbb
pop
or
push
pop
sahf
fstps
outsl
mov
pop
mov
xor
stc
ficoms
or
lock
jge
idivb
adc
cld
fld
jnp
cmp
xchg
ljmp
aaa
xor
lret
and
imul
cmc
add
test
imul
rcrb
std
jg
out
bnd
or
lcall
fildl
sbb
sti
jne
imul
adc
fisubl
xchg
sbb
cld
sub
in
push
cwtl
fldt
jg
pop
mov
xchg
inc
xchg
icebp
sti
cwtl
fbld
rol
icebp
sbb
ds
mov
add
and
pop
mov
je
neg
push
xchg
int
mov
add
daa
add
dec
push
mov
sbb
jl
sub
dec
les
lods
shll
and
jmp
ret
xchg
push
xor
lea
test
cmpsb
or
fs
adc
mov
xor
sub
test
cmc
dec
dec
add
mov
insl
loop
addr16
or
push
jbe
jbe
mov
and
addr16
repz
fnstcw
shlb
dec
mov
pop
ja
mov
pop
mov
fidivrs
test
cmp
sbb
xchg
or
jbe
jp
cmc
stc
or
jl
pushl
jge
out
jb
pusha
inc
inc
cmp
movsl
xlat
pop
mov
cwtl
jne
jge
jle
cs
ror
adc
lock
jno
mov
mov
pop
out
lret
enter
inc
push
mov
pop
enter
sbb
xor
adc
cltd
pop
xor
orl
fists
in
fnstenv
xor
cmp
xor
add
jge
push
les
mov
imul
push
cmp
or
push
stos
inc
xchg
mov
test
dec
sbb
xlat
sti
stc
cmc
movsl
ja
das
sub
mov
mov
inc
lret
mov
std
out
test
movsl
dec
push
mov
stc
aam
cmp
mov
scas
leave
call
sbbb
cmp
je
push
out
mov
insb
leave
fimuls
fisubrs
aas
stos
outsb
in
mov
xchg
fisttpll
mov
mov
or
sbb
adc
push
sub
dec
fs
adc
std
xchg
dec
in
out
add
dec
or
add
sub
movsl
ja
outsl
int
leave
and
sbb
adc
insb
mov
das
loope
leave
fisubs
mov
popf
mov
sbb
out
lret
out
pop
test
fimuls
scas
cs
fistpl
aaa
push
add
adc
sbb
addl
stc
or
xchg
shll
cmp
lret
test
mov
add
adc
xchg
scas
cld
lods
lret
or
popf
jl
or
loop
jnp
ds
push
lock
int
loopne
subb
es
ret
xor
std
cmp
repz
stos
mov
call
inc
jp
pop
fmuls
jmp
cmp
loop
pop
xchg
xchg
mov
push
sbb
inc
pop
sub
clc
out
lds
push
inc
jns
dec
in
cmpsb
xchg
mov
mov
adc
shll
inc
and
dec
lcall
inc
xchg
push
xchg
aam
fucomi
insl
add
js
popf
hlt
fldt
xlat
xor
loopne
out
add
stos
inc
mov
cltd
fcoms
or
or
adc
dec
dec
xchg
data16
mov
out
pop
orb
mov
sbb
sti
mov
sahf
mov
cli
jno
sub
and
and
mov
mov
arpl
cmp
dec
add
cmp
mov
sbb
or
fstps
sub
nop
jae
popf
addr16
andb
lds
add
out
inc
mov
mov
loope
dec
or
dec
sub
out
mov
push
jecxz
mov
push
adc
aam
xlat
aaa
cmp
scas
mov
adc
stc
cli
test
pushf
sub
jl
adc
inc
dec
mov
mov
cmp
add
std
add
dec
add
mulb
test
data16
std
shll
xchg
pop
addr16
or
cmp
rcrl
outsl
xor
jae
movsl
push
inc
stos
mov
mov
pop
in
js
dec
xchg
loope
sbb
leave
jg
or
adc
push
jae
pop
loopne
lods
adc
sar
movsb
into
fs
pop
leave
xchg
pop
iret
jl
stc
jmp
xor
pop
inc
adc
jne
mov
das
roll
in
adc
les
pop
mov
adc
jae
enter
in
outsl
dec
xorl
lcall
or
out
sub
in
mov
loopne
stos
jle
pop
mov
test
push
fnstenv
sbb
in
clc
xor
lods
fmull
arpl
pop
mov
mov
adc
mov
sub
repnz
sub
jg
bound
das
xor
fistps
xchg
xchg
rcl
movsb
mov
ljmp
push
inc
xchg
xchg
pop
into
jle
popf
and
mov
add
and
scas
pop
ja
mov
xor
inc
adc
call
sbb
push
jecxz
loopne
adc
les
clc
popf
mov
inc
mov
sbb
mov
inc
iret
or
or
cmp
shlb
push
addl
decl
sbb
in
pop
xchg
shl
fadds
mov
sub
xchg
nop
addr16
mov
adc
pop
xorl
jo
push
inc
loop
ds
fsubl
push
push
sbb
int
inc
sbb
xor
fwait
dec
cmp
arpl
mov
popa
sub
data16
scas
and
dec
adc
popf
daa
pop
or
mov
inc
mov
and
dec
xchg
inc
or
popa
cld
add
inc
cmp
nop
shll
cmp
inc
jge
addl
jnp
xor
xchg
jno
xchg
sti
mov
fsubrp
sub
std
out
push
cltd
sub
pop
leave
push
pop
sti
test
jmp
aaa
xchg
mov
out
sub
push
cmp
lea
leave
inc
xchg
rcll
outsl
push
scas
mov
pop
xchg
outsb
sbb
pop
xor
push
jle
xchg
lcall
not
xlat
popf
push
cmp
lods
ret
je
cmp
cli
and
dec
fbstp
stc
int
inc
popa
mov
mov
pop
lds
repz
cld
mov
jne
in
sbb
or
sub
xor
jbe
jae
das
mov
add
call
mov
sbb
sub
mov
mov
jno
mov
jb
jmp
cmp
adc
mov
mov
in
outsl
sbb
xchg
dec
ror
mov
mov
dec
inc
divb
and
and
loop
shll
adc
lret
loop
enter
insb
and
pop
push
inc
lock
xor
aam
aam
rcl
mov
sbb
jne
inc
dec
jb
jmp
sbb
loop
imulb
add
lods
cld
lcall
sub
int
inc
repnz
js
push
jb
or
pop
testl
loop
dec
push
cld
xor
shr
loopne
adc
cmpsb
bound
add
pusha
pop
sbb
and
xchg
cli
mov
sahf
mov
jmp
scas
pop
inc
shr
ret
push
push
test
xchg
cwtl
ret
pop
xchg
jo
xor
or
out
inc
dec
imul
pusha
es
nop
mov
dec
repz
jb
push
lret
lods
xchg
test
sub
sub
je
cmc
push
jae
or
dec
cld
push
and
inc
add
iret
faddl
pop
jg
fisubrs
mov
jg
rcll
shlb
inc
or
push
add
call
sbb
jne
mov
repz
pop
sub
and
fmuls
test
test
xchg
in
and
div
push
ds
mov
xchg
jl
push
outsl
popf
cmpsl
mov
jnp
test
push
mov
sbb
hlt
jmp
pop
adc
pop
inc
cmc
lods
sbb
arpl
mov
adc
jmp
sub
setbe
ljmp
push
int
cmp
xor
in
addl
push
loopne
mov
ficoml
call
mov
mov
repz
xor
sti
insb
cmp
push
mov
mov
fnstsw
ss
or
xor
lcall
cmc
xor
xor
pop
jns
into
mov
inc
cltd
pop
inc
pop
addr16
inc
int3
sbb
mov
int3
out
xchg
insl
pop
mov
out
cmp
call
xchg
and
ds
mov
or
push
ss
jno
sub
int3
cmp
das
rcll
stos
imull
inc
jns
repz
or
push
enter
ud2
jae
dec
setae
mov
xchg
movsl
call
xor
bound
cwtl
jmp
stos
sub
inc
push
push
xchg
shrl
mov
and
mov
pop
aas
test
mov
push
push
xor
enter
mov
repnz
mov
add
cmp
aad
push
add
and
cmp
push
lcall
sbb
insl
push
mov
add
mov
dec
ss
jns
pop
aaa
gs
cmpsl
pop
xor
fsubl
jo
dec
sarb
pushl
sti
mov
xchg
lret
in
js
mov
popf
jl
mov
jns
xor
adc
and
divb
pop
mov
test
les
sub
cld
test
sahf
into
mov
jecxz
in
mov
scas
mov
iret
popf
cmc
cmpsb
loopne
push
popa
mov
decl
add
mov
add
mulb
jmp
mov
xorb
pop
stc
lods
push
cmp
cmp
jp
add
pop
mov
testb
aas
push
cli
cmp
xor
mov
inc
push
dec
add
rolb
arpl
push
xchg
xchg
pop
fsubs
je
mov
inc
add
mov
pop
add
xchg
mov
push
data16
ret
rorl
adc
push
pushf
jge
push
leave
sbb
outsl
mov
test
into
mov
es
hlt
xchg
or
sub
push
pop
push
ds
push
sbb
je
pushf
mov
jns
les
pop
fs
cltd
lret
jg
xor
fldl2e
and
xor
push
push
add
fistpll
add
lcall
loopne
test
cld
cs
rorb
adc
add
aad
imul
leave
pop
cmpb
notl
mov
or
out
fbld
push
test
stc
push
cmc
mov
dec
shl
mov
imul
fdivrp
insb
adcb
loopne
dec
pop
movsb
mov
mov
xchg
subps
loope
jbe
cmc
ret
jo
mov
adc
mov
inc
in
stos
cltd
ljmp
stos
lcall
xchg
sub
add
lock
das
dec
subl
xor
jne
xor
xlat
mov
loop
jmp
cmp
cmpsb
add
sub
add
lret
ds
mov
jecxz
cmp
outsl
fwait
aas
xor
lock
jnp
adc
push
bound
movsb
in
xchg
jo
dec
test
pop
lds
jns
add
mov
pushf
rorb
mov
icebp
iret
enter
pop
pop
add
inc
fldt
pop
xchg
xor
imul
sahf
and
and
mov
xchg
daa
xlat
xor
xlat
cmp
push
pop
or
push
mov
imul
adc
or
push
movsl
loope
or
inc
dec
stos
sub
cmp
stc
shll
rcrl
jg
and
push
push
pop
lods
popa
mov
push
and
aaa
or
xor
test
rcll
les
cwtl
lods
test
popf
call
inc
inc
std
jne
pop
pop
mov
sbb
dec
dec
push
aad
sbb
popf
mov
mov
aad
in
int3
inc
mov
xchg
jmp
mov
cli
icebp
je
mov
and
cmp
mov
cltd
mov
cmpsl
inc
jl
fs
popa
nop
add
movsb
and
pop
out
ret
push
sbb
mull
cmc
pop
insb
cmp
ret
sahf
xchg
inc
mov
push
test
push
jne
mov
push
enter
or
js
call
fdivrs
psrlw
sbb
push
adc
movsb
mov
jge
dec
inc
add
incb
add
jne
pop
ret
decb
xchg
popa
jb
nop
mov
lock
push
dec
std
shlb
pusha
push
or
cmp
loop
mov
xchg
mov
movlps
mov
inc
sub
orb
loop
xchg
imul
imul
or
jns
sbb
fwait
popa
mov
push
xor
cmp
scas
mov
sub
push
insb
out
stc
leave
aam
adc
push
cmp
push
jnp
enter
clc
lahf
dec
stos
push
xlat
in
xchg
jle
cmp
pop
or
cli
imul
pop
jecxz
adc
jge
or
mov
test
or
pushf
jno
jb
lods
xchg
mov
sbb
ret
add
xchg
stc
pop
scas
mov
gs
xor
push
jbe
cmp
sbb
push
pushf
jle
mov
cs
imul
jnp
data16
out
stc
cmp
arpl
fists
gs
dec
test
pusha
mov
add
mov
dec
out
xchg
add
pop
cs
sbb
sbb
mov
mov
rep
pop
ss
cmc
mov
push
mov
or
ljmp
call
push
pop
push
out
xchg
test
dec
nop
daa
ljmp
pushf
pop
lods
jmp
sub
loopne
cli
out
ret
rcrb
cmp
std
ret
xchg
repz
mov
fldl
push
jnp
and
xchg
and
in
jae
push
xchg
xchg
leave
jle
dec
stos
and
sbb
xchg
cmpsb
mov
mov
inc
jo
cwtl
cmpsb
or
mov
imul
jmp
jbe
mov
sbb
subl
repz
jge
push
fsub
lock
fucomp
pop
cmp
inc
jg
fucomip
repz
jmp
jp
cli
aam
jnp
insl
pushf
inc
sbb
push
adc
sbb
loopne
fcomip
in
xchg
shl
stos
jecxz
fs
xchg
mov
push
sbb
push
pusha
xchg
cld
pop
jl
dec
xchg
lret
mov
shll
fcomp
rcrl
xchg
push
push
fbld
xchg
push
and
mov
push
lds
jmp
and
or
pusha
movsl
lcall
pusha
in
ds
sbb
movsl
int
shrl
push
jg
test
xchg
lods
mov
jp
jno
repnz
adc
mov
shrl
in
insl
popf
cmp
sub
sahf
sbb
mov
and
mov
decb
js
ss
jb
iret
adc
std
push
mov
fdivrp
push
inc
sub
sub
lahf
outsl
mov
dec
xor
sub
push
sub
loope
je
cmp
ja
cs
popa
xchg
aaa
jl
jle
xchg
fdivrl
push
pop
mov
add
gs
mov
lods
adc
fcmovnu
push
daa
pushf
xor
xchg
loope
mov
xchg
and
cmp
inc
mov
insl
xchg
mov
mov
or
popf
xor
inc
popf
xor
mov
add
stos
imul
test
and
dec
lcall
in
mulb
xchg
test
push
rorb
sbb
pop
out
mov
iret
jg
add
sbb
loopne
sti
inc
add
cwtl
cmc
dec
dec
ds
mov
stc
jae
jb
sbb
icebp
shll
dec
bound
add
call
or
in
pop
pinsrw
xor
bound
sub
xor
add
mov
cmpsb
aas
clc
cmp
adc
or
mov
cld
push
pop
xor
jns
outsl
aas
mov
bnd
mov
ret
stc
mov
cmc
adc
data16
icebp
cwtl
xchg
dec
jo
das
sub
add
xorb
push
mov
iret
mov
sbb
repz
add
stos
dec
fdivrs
les
sub
sub
scas
cmp
pop
lea
int3
or
inc
js
dec
adc
repnz
dec
dec
out
out
inc
in
insl
lock
movsb
or
jo
int3
sti
scas
sbb
xchg
fs
inc
inc
inc
int3
lcall
pop
push
lea
jns
arpl
mov
cmc
add
mov
pop
stc
adc
test
rcll
js
fstpl
icebp
mov
aas
lock
mov
test
sbb
add
xor
mov
mov
adc
pop
in
and
imul
rcrl
ds
jecxz
jbe
dec
lahf
int
mov
sub
or
movsb
jp
mov
jno
out
and
scas
mov
fistpll
sahf
bound
xor
out
jo
pop
xchg
xchg
xchg
sbb
cmpsb
mov
jo
mov
mov
lret
adc
lret
mov
int3
cmp
pop
fstpt
jne
xor
push
sahf
shrl
popa
jecxz
enter
in
add
ret
cmp
iret
jb
push
leave
jge
cmp
imull
cmc
push
in
lods
fldenv
lds
mov
sub
push
xchg
xor
mov
bound
in
das
call
mov
xor
test
mov
adc
imul
ret
loope
cltd
aaa
mov
dec
mov
cs
adc
out
loop
jmp
fstpl
mov
data16
loope
iret
pop
xchg
pop
dec
ljmp
jno
adc
enter
imul
cmp
outsl
mov
xchg
addb
out
movsl
push
insl
orl
nop
add
pop
testb
adc
jno
filds
inc
and
jl
nop
outsl
xchg
test
orb
out
sbb
fisttpll
jp
mov
icebp
sub
out
cltd
sub
repz
xchg
adc
and
fiaddl
stos
lods
jmp
out
inc
jecxz
shl
sbbl
flds
scas
inc
push
dec
les
ss
push
or
and
dec
sub
inc
outsb
xor
cmp
lcall
or
dec
mov
ja
dec
gs
xchg
out
or
or
mov
sub
xchg
and
and
cmp
rorb
mov
fisubl
lods
add
das
pop
jle
js
mov
xor
push
cs
add
mov
daa
lcall
mov
sub
inc
jae
mov
les
stos
int3
bound
jp
pop
adc
or
add
jmp
insb
dec
pushf
mull
fcoml
hlt
xor
mov
cmp
jg
mov
aaa
mov
ljmp
inc
push
jle
cmp
int3
mov
repz
pop
repz
in
imul
sbb
jg
jle
xor
cmp
loope
xchg
rorl
fisttpl
inc
xor
leave
test
shrl
or
int
repz
stos
cmp
pop
sbbl
and
das
out
pop
or
mov
mov
adc
sub
jge
lds
push
add
test
sbb
loop
mov
sub
add
cmp
pop
sub
call
int3
mov
ss
in
daa
cmp
xor
imul
stos
fidivrl
sbb
das
dec
mov
xor
mov
pop
jnp
push
mov
pop
fimull
fsubrp
push
ret
xchg
lods
ja
cmp
cltd
mov
jmp
and
ret
sbb
lret
aad
pop
lods
push
pop
mov
sub
in
fcmovnu
pop
xchg
aam
sub
test
jl
inc
pop
xor
push
sub
ja
add
jp
lds
jp
gs
or
out
mov
mov
outsb
ret
stc
and
and
adc
mov
or
rcll
xbegin
cmp
cld
or
xor
mov
pop
xchg
sbb
dec
sub
sbb
rcr
xchg
fbstp
inc
inc
sbb
mov
pusha
push
int3
inc
sbb
ret
cmp
mov
jle
jg
lcall
in
lock
mov
mov
es
ficoms
test
dec
xlat
int
cwtl
cmp
pop
outsb
repz
lret
sub
mov
icebp
mov
dec
add
lret
and
test
inc
pop
outsb
jl
add
sub
mov
push
push
ficomps
mov
aad
adc
mov
mov
inc
dec
sub
mov
push
adc
jle
xchg
xor
fists
inc
shlb
mov
mov
xchg
mulb
bswap
xor
outsl
mov
adc
popf
test
fadds
in
fsubrs
lret
out
mov
es
lock
stos
outsl
daa
ljmp
inc
pop
push
mov
and
cmovne
arpl
sbb
das
cmp
cld
add
mov
cmp
fildll
and
ret
mov
ffree
enter
loop
mov
cld
ss
mov
inc
pop
mov
or
leave
sub
sbb
mov
xor
int
sbb
mov
lods
out
mov
mov
test
nop
xor
inc
adc
iret
cmc
pop
daa
clc
xor
mov
jns
rorb
jbe
aam
push
sub
push
loope
fcoml
cmpsb
push
push
cmp
xor
ljmp
ret
in
inc
xchg
fnsave
int
sub
jge
cmp
mov
dec
int
jl
fwait
pop
pop
mov
cli
mov
pop
mov
or
ret
rcrb
out
aas
cmpsl
pop
jb
test
mov
push
mov
cmp
mov
insb
rolb
mov
cmp
sub
ret
jae
and
les
sbb
out
scas
test
mov
call
cmp
push
clc
shll
xchg
add
sub
mov
outsb
adc
jns
jnp
sbb
pop
cmp
xlat
xlat
int3
sahf
jle
stc
addr16
jns
mov
mov
inc
rcll
fildl
cld
sub
fs
arpl
fdiv
lock
pop
xor
dec
push
mov
ds
in
xchg
gs
pop
rorl
mov
cmp
mov
mov
push
pop
rolb
mov
loopne
nop
fists
mov
dec
and
xchg
inc
push
loop
cmp
jl
mov
aad
push
sub
stc
cmp
mov
and
stos
divb
fnsave
jo
lods
ja
sti
or
dec
pop
test
aad
mov
sti
fdivrs
xor
bswap
cmpsb
dec
fistpll
inc
jge
outsb
dec
cs
and
repnz
pop
movsb
adcl
daa
imul
testb
movsl
repz
mov
mov
or
adc
xchg
cli
xchg
or
mov
xchg
ja
in
shrl
jg
rolb
mov
push
xchg
divb
popf
cmp
mov
sub
cwtl
xchg
and
lret
lret
push
dec
sbb
popf
dec
loope
fsubrs
mov
pop
js
xchg
ds
insb
lahf
lea
ret
inc
shl
sbb
dec
xor
mov
xchg
cld
fcmovu
sub
lret
dec
dec
cmp
mov
push
sbb
mov
fsub
cmp
pop
punpckhdq
cmpsl
mov
into
or
pop
out
and
in
decb
cmp
cs
mov
mov
pop
setbe
or
loope
pop
pushf
add
xchg
sub
rclb
add
or
mov
mov
mov
gs
cli
push
sti
sbbb
loopne
mov
in
out
jne
shlb
mov
std
sub
mov
xlat
fcoms
cmp
mov
scas
add
mov
out
jne
cmp
test
enter
aas
push
addr16
dec
cmp
shll
ret
in
push
pop
test
imul
movsb
push
int3
jne
outsb
and
cltd
xchg
xor
inc
les
mov
mov
cmpsb
xor
fldl2e
push
pop
stc
stc
imul
aaa
scas
enter
xor
push
xchg
or
pushf
sti
xchg
push
and
roll
lds
sbb
mov
ret
faddl
gs
shr
aaa
pop
sbb
mov
sbb
push
mov
mov
mul
jecxz
pop
push
aad
fidivrs
in
push
cltd
ljmp
jb
imul
jb
test
mov
pop
shll
cmp
enter
mov
mov
clc
xchg
stc
int3
ds
daa
xor
flds
jmp
int3
push
mov
add
push
mov
sub
lret
adc
and
pushf
cmp
or
push
gs
iret
jg
add
mov
xchg
cld
jmp
cmpsl
idivb
int
inc
les
mov
in
dec
rcrb
jb
push
inc
add
mov
or
or
jo
test
sbb
insl
int
inc
mov
xchg
inc
pop
scas
repz
mov
xchg
add
push
mov
loope
mov
cmpsl
dec
add
inc
ljmp
int3
add
cmp
repnz
xchg
sbb
aas
jmp
xchg
shrl
and
pop
test
lcall
xor
scas
mov
leave
xorb
inc
lock
and
mov
mov
xor
and
pop
loop
std
subl
imul
fdivl
js
adc
sbb
out
pushf
and
add
or
xor
pusha
loopne
mov
lret
sbb
cmpsl
aas
dec
dec
xlat
sbb
inc
mov
insl
addb
bound
cld
mov
inc
xchg
outsb
lar
jge
iret
inc
mov
push
mov
int
out
mov
push
jnp
sbb
nop
or
stc
sbb
push
in
sub
xchg
mov
insb
jno
mov
jnp
push
sub
icebp
xor
fsubrl
gs
add
push
lods
into
sub
sbb
ja
push
cwtl
frstor
pop
cmp
cmc
outsl
rorl
mov
out
jg
jns
stc
subl
jg
xor
sbb
adc
stos
xor
rclb
test
cmp
out
jo
inc
add
ss
mov
lods
jb
push
adc
mov
cmp
gs
cltd
in
push
xor
or
push
xchg
js
pop
mov
daa
mov
or
xchg
sbb
jmp
sbb
pop
mov
or
xchg
mov
jnp
sbb
mov
mov
test
pusha
test
and
rolb
pop
gs
jbe
lds
jle
cmp
movsl
lock
inc
shlb
fcoms
and
enter
xchg
dec
adc
rcr
addr16
push
xchg
mov
mov
sub
int
enter
jle
or
push
iret
or
xchg
test
repz
fcomps
mov
pop
fldcw
adc
jecxz
push
bound
mov
loopne
sub
jno
pop
lds
push
cmp
jnp
mov
loop
dec
xchg
icebp
mov
xchg
rolb
into
lret
mov
dec
dec
imul
pop
jns
pop
divb
adc
cmpb
or
adc
mov
adc
push
inc
out
mov
les
cld
mov
bound
divl
or
fcoms
cmp
testw
data16
mov
dec
or
xchg
nop
dec
ret
movsl
sbb
scas
inc
sub
xchg
jb
hlt
cmp
jl
inc
out
clc
lock
das
dec
shlb
jg
pop
lds
subl
xor
nop
inc
scas
fwait
add
dec
cs
jmp
rcll
sbb
movsb
in
mov
scas
mov
mov
jnp
adc
fildl
mov
movsl
imul
adc
test
jle
test
push
add
shll
cwtl
sub
xor
aam
jmp
test
ja
pop
ret
jae
xchg
loop
xchg
bnd
add
loop
jecxz
jbe
jmp
push
rorl
lds
mov
pushf
or
jle
pop
push
jmp
inc
in
movsl
adc
dec
bnd
stos
xor
push
dec
dec
jo
sbb
jg
mov
mov
stos
stc
pop
rorb
add
loopne
sbb
push
loope
mov
call
or
sarl
jge,pt
mov
in
jmp
fs
jno,pt
jne
fidivl
jo
fsubrp
inc
movsb
movsl
mov
les
test
dec
or
lea
lea
pop
hlt
jle
or
sub
jle
fs
call
push
pusha
and
xchg
mov
andb
lcall
loopne
outsl
addl
mov
out
add
xor
gs
das
sub
subb
mov
sbb
inc
inc
sbb
nop
test
mov
outsb
enter
lret
cmp
inc
js
test
xlat
aam
sub
fwait
push
mov
fisubs
sub
mov
stc
shlb
pop
add
xchg
out
fxtract
jbe
test
xchg
ja
mov
into
xchg
mov
pop
stos
mov
inc
clc
pop
adc
xchg
adc
sub
jae
xor
xchg
jne
inc
mov
lods
push
sub
ret
out
outsb
fucomi
cmp
dec
test
cld
out
popa
fisttps
cmpsl
je
test
inc
aam
subl
push
xor
outsl
fs
loope
xor
push
ss
mov
dec
testb
jge
ja
jg
dec
adc
arpl
int
popf
xchg
adc
sarl
cltd
es
in
addr16
lds
jne
push
adc
outsl
sub
push
push
sub
cmpsb
fs
pop
aam
inc
xchg
icebp
outsb
dec
mov
xchg
out
pop
xrelease
lret
ds
dec
sub
lahf
xchg
push
sub
mov
push
cli
dec
js
les
popa
data16
movsl
cmpsb
movl
jne
dec
mov
jg
add
test
dec
mov
cld
cmp
xchg
adc
lahf
test
push
cmp
aam
imul
popa
cmp
leave
and
sbb
inc
sarb
pop
lods
nop
cmp
jge
sahf
in
sbb
adc
push
cmp
pop
mov
or
sbb
xchg
aam
push
and
push
jge
push
out
adc
daa
shrb
pop
int
pop
idiv
pop
push
or
int
jge
adc
dec
dec
pop
jne
sub
or
ja
testl
lfs
add
add
adc
les
add
add
lods
jb
xor
int3
jnp
mov
clc
flds
add
push
pushf
jmp
std
fwait
pusha
adc
jmp
das
pushf
xchg
xor
pop
fadds
mov
fbld
in
fwait
pop
sbb
mov
js
cltd
xchg
fisttpl
and
rol
inc
or
ljmp
fwait
testl
sti
inc
enter
adc
dec
inc
lcall
sub
ljmp
add
shll
arpl
push
jo
cmc
mov
sbbl
mov
jnp
mov
jp
or
and
cmpsl
push
fstpl
neg
ds
inc
mov
push
mov
jge
daa
push
mov
sub
lret
jb
lds
xchg
push
pop
xlat
rdtsc
and
stos
xor
mov
xchg
hlt
push
cmp
sub
mov
mov
dec
cli
insb
movsl
ja
movb
sub
int
cld
inc
cmp
sarl
jo
cmp
xchg
pop
xchg
ficomps
in
out
clc
push
mov
pop
sbb
mov
add
jbe
ljmp
xchg
pop
pop
imul
cli
inc
int3
mov
aas
ljmp
inc
jmp
or
cmpsl
scas
mov
sub
les
push
add
inc
mov
iret
loopne
lods
pop
lock
pushf
inc
inc
jl
int
popa
jle
push
and
cmp
aas
cmp
push
shlb
js
xchg
jle
sahf
popa
or
xor
mov
data16
xlat
ret
out
jns
and
add
pop
push
loopne
data16
pop
xchg
loop
std
adc
lods
mov
jmp
test
adc
pop
loope
jp
fadds
sti
pop
movd
dec
push
jle
call
pop
loop
jecxz
fistps
inc
sarb
outsl
push
sub
ret
cwtl
mov
adc
enter
cltd
mov
or
fucom
mov
aad
int3
dec
xor
push
cwtl
ljmp
mov
shlb
mov
daa
dec
insl
into
std
jecxz
xor
lods
rolb
xchg
cmp
sbb
hlt
popa
xchg
std
sbb
sbb
fcompl
ror
imulb
adcl
cmp
fcomps
xchg
jbe
hlt
idivl
inc
std
shr
cld
pop
add
pop
pop
hlt
mov
and
or
lret
push
sub
adc
mov
fiaddl
scas
push
mov
push
outsb
xor
or
nop
mov
dec
das
sbb
xchg
mov
mov
mov
and
popf
xor
stos
push
cmp
jg
cmpl
pop
sbb
fs
aad
sub
ja
ret
mov
popf
repnz
jecxz
mov
fcoms
leave
or
jno
bswap
fs
rclb
sahf
add
cli
mov
loope
push
out
sub
loopne
fstpt
mov
mov
xchg
addb
cmp
add
aam
push
push
mov
dec
sbb
adc
lcall
lret
enter
cmpb
push
shlb
int
rorl
subb
loope
ss
mov
stos
hlt
push
sbbb
in
mov
sub
stos
xchg
xor
pop
ss
jae
mov
adc
iret
lds
subl
mov
mov
sub
cmp
dec
and
mul
cmpl
addl
lret
lods
and
inc
adc
jbe
add
sti
in
fbstp
loope
jecxz
dec
outsl
mov
cmp
enter
cmp
imul
xchg
xchg
jno
xchg
sbb
xorl
out
xor
arpl
jmp
jmp
ljmp
sub
fistpll
fdivp
jp
dec
dec
cs
nop
xchg
pop
xor
sub
loop
cmp
mov
push
out
adc
mov
ficoml
sub
mov
in
test
inc
call
fstpt
leave
cmp
and
inc
icebp
dec
sti
stos
lock
fisttpll
dec
cli
arpl
into
sub
cmc
ret
js
fsubs
mov
jg
outsl
inc
and
xchg
sti
jbe
call
mull
cmpsb
icebp
inc
sub
push
sub
stos
mov
dec
sub
or
icebp
dec
cmp
adc
lds
jns
sbb
mov
movb
stos
and
xor
ret
sbb
cltd
testl
faddp
je
leave
jle
xchg
inc
jns
mov
lret
mov
decl
call
mov
mov
scas
push
xor
adc
inc
cmp
and
mov
adc
aam
jp
js
icebp
and
inc
rcr
cmpsb
pop
mov
insl
or
dec
lret
sub
not
daa
push
sti
mov
test
lcall
dec
xchg
cld
lods
xor
cwtl
les
mov
mov
or
push
enter
sbb
sahf
in
test
sub
xchg
mov
cmp
enter
push
add
enter
push
mov
ja
je
xchg
aas
xchg
adc
aad
jle
ret
rol
negb
cmpsb
add
in
cmp
add
mov
sub
pop
aam
dec
inc
out
dec
repz
addr16
out
cmpsb
cli
jl
pop
ds
fdivrl
sbb
mov
lahf
inc
or
daa
inc
xchg
push
in
dec
jecxz
pop
sub
mov
dec
sbb
adc
popa
xchg
out
inc
stc
add
aas
mov
xchg
enter
xlat
push
jmp
push
out
or
dec
and
dec
mov
shll
jp
mov
xlat
inc
outsl
sbb
xorb
loop
xchg
rcll
loopne
lcall
sub
cmpsb
enter
jne
lods
add
ljmp
adc
clc
rcll
fcompl
fimull
xchg
jl
or
push
subl
jle
outsb
add
daa
movsl
and
pusha
aas
and
lret
mov
in
pop
arpl
scas
add
mov
xor
mov
cmpsb
push
xorl
rcrl
sti
and
dec
cltd
fldcw
pop
xchg
es
lock
in
cld
mov
gs
sub
mov
js
cwtl
fstps
inc
xor
cmp
xchg
cmp
fcom
push
iret
or
movsb
fmuls
jmp
jno
xor
pop
mov
sti
ret
xchg
add
pop
daa
sahf
movsb
shlb
ret
aad
fs
inc
dec
in
cwtl
mov
jmp
mov
or
inc
out
lea
mov
jl
js
int3
adc
and
dec
adc
pop
test
cmp
push
shrb
dec
test
shlb
in
stos
push
icebp
xlat
sub
je
pop
sub
into
pop
or
or
mov
lds
cmp
or
or
js
sbb
or
fists
loop
xchg
clc
jne
jge
mov
cmp
xor
aaa
push
jbe
jle
adc
testl
add
sbb
jge
push
pop
leave
fsubrs
loopne
fwait
aas
test
or
sbb
aam
push
cmpb
and
stos
push
in
or
ds
stos
jmp
aad
mov
gs
nop
in
pusha
imul
or
popa
jbe
int
mov
iret
lahf
rorl
pop
dec
cwtl
fwait
movsl
dec
xor
jbe
add
cmp
adc
add
mov
mov
mov
jnp
shlb
jo
and
cmp
pop
pop
subb
in
fisubl
fs
lret
data16
int
out
pop
inc
lods
call
cmp
inc
mov
mov
movsl
loopne
dec
sub
dec
pop
in
pop
mov
sub
dec
adc
adc
rcr
add
or
adc
add
scas
mov
cmp
outsl
popa
mov
shlb
or
push
or
inc
fisubrl
mov
xor
xchg
loopne
les
mov
and
addb
xchg
rclb
mov
cmp
push
outsb
mov
movsl
sub
test
ljmp
ja
arpl
jnp
loopne
nop
fcmovb
mov
ds
mov
sti
fisttpll
sbb
mov
jecxz
rol
stos
jne
push
icebp
jbe
cmc
call
lcall
jmp
xor
mov
jge
add
movsb
nop
jno
and
pop
cmp
cmp
add
mov
dec
incb
in
jb
pop
lahf
mov
loop
fisubrs
inc
mov
and
cmpsb
ficomps
xchg
lock
popf
jge
mov
and
in
sub
loopne
test
mov
jmp
and
and
sti
into
sbb
push
cmp
jmp
jg
outsl
inc
dec
add
sub
and
sub
ret
leave
test
push
mov
mov
fnstcw
jno
mov
je
rcll
arpl
or
sti
xor
stos
xlat
xor
iret
int3
mov
xchg
adc
sub
cmp
xchg
lds
popf
dec
cmp
fsubrs
lock
inc
mov
mov
out
adc
mov
stos
and
lods
adc
and
nop
cs
jo
xor
mov
pop
test
and
iret
js
xchg
lcall
adc
shrl
xor
push
sub
into
xchg
adc
int3
sti
jo
mov
inc
inc
lods
pop
xchg
dec
in
or
stos
addr16
mov
stos
js
inc
fiaddl
or
mov
xchg
int3
lds
sbb
stos
xor
xchg
int
or
jo
adc
loopne
inc
fdivrs
xor
test
cmp
or
xor
xchg
mov
push
jle
xchg
pushf
pop
cmpsl
xchg
mov
movsb
xchg
nop
pop
cmp
stc
in
hlt
jo
fsubrp
xchg
repz
jbe
adc
arpl
cld
les
in
sbb
hlt
xchg
or
jne
and
mov
rcr
xchg
ss
loopne
push
lahf
sbbb
and
test
adc
xchg
imul
scas
outsl
xchg
or
cmp
cmp
xchg
cmc
inc
xchg
pop
dec
push
or
sar
mov
in
cltd
pop
jle
fsubr
and
pop
iret
pop
and
pop
pusha
xchg
cli
push
aam
mov
or
lcall
movsl
and
mov
inc
mov
js
sbb
jg
rcl
pop
xchg
lret
lea
mov
xchg
jb
fstpl
pop
sub
xchg
jo
mov
sbb
sbb
lock
and
mov
add
pusha
stos
imul
popf
sarl
ljmp
cs
xor
push
movsl
in
fucomi
cmp
pop
stc
mov
jecxz
iret
lahf
xor
rcll
sbb
jno
push
sar
sub
jecxz
lcall
test
xor
jno
aaa
jmp
xchg
mov
adc
xchg
dec
dec
xor
mov
rcll
out
mov
add
push
into
sub
cli
jb
or
fwait
jb
daa
cmp
jge
ret
lods
sbb
lret
push
mov
sbb
inc
xor
mov
out
in
or
sbb
daa
jecxz
sbb
loopne
in
lods
cmc
adc
notb
mov
rclb
jle
inc
jno
add
xlat
cli
out
inc
orl
pop
jbe
push
fcoml
mov
cmpsl
mov
push
lods
push
sub
ljmp
inc
daa
sbb
mov
pusha
scas
inc
fcmovnbe
adc
cmp
lds
lods
aam
xchg
pop
scas
add
mov
jae
mov
lcall
inc
stc
scas
add
jno
inc
push
in
pop
test
leave
fwait
movsl
jge
fwait
bound
cmp
ret
sbb
insl
nop
loopne
insb
push
or
or
add
je
inc
cltd
test
sub
xor
jle
push
or
add
jo
pop
inc
outsb
and
adc
cltd
sub
add
inc
dec
adc
iret
mov
jb
xchg
dec
or
sbbl
pop
lahf
data16
sbb
sub
ret
pop
xlat
fwait
adc
jno
mov
imul
push
fs
cmp
lahf
rorl
push
mov
lcall
jle
jns
jne
pop
jp
popf
mov
push
mov
clc
dec
js
fidivl
and
and
arpl
add
pop
push
test
xchg
fld
nop
call
dec
cli
fwait
dec
sub
xor
fwait
add
pop
lock
nop
es
sbb
xlat
dec
lret
idivb
pop
aam
cmp
xchg
inc
int3
cmp
sbb
jno
add
fcoml
mov
pop
in
jg
mov
movsl
test
pop
mov
pusha
lods
mov
imul
mov
lock
ss
sbb
inc
fstpl
bound
jp
add
mov
mov
aas
or
aaa
icebp
and
rclb
sbb
lret
jecxz
and
addb
xchg
mov
leave
and
fsubs
xchg
push
push
movsl
pop
call
push
rcll
in
sti
clc
roll
xor
cld
xor
pop
mov
aam
loopne
mov
lret
mov
add
pop
xor
out
and
cmp
mov
push
fmull
hlt
push
push
mov
cld
xor
mov
ret
sub
fistpll
push
sbbl
push
lea
jmp
loopne
and
and
mov
mov
adc
jns
inc
es
aad
imul
popl
addr16
stc
fldt
pop
xor
aad
out
mov
fidivl
adc
or
sub
or
fnstsw
insb
push
enter
inc
lods
mov
add
loope
cmp
lahf
insl
arpl
push
push
outsl
into
clc
adc
or
idivl
dec
popa
adc
ljmp
sbbl
push
in
enter
cmpsb
and
mov
js
cli
sub
rclb
cli
adc
pop
outsl
sarb
popf
test
or
xchg
addr16
dec
leave
jb
shl
pop
or
in
cmpsl
cmc
push
adc
pushl
sbb
pop
scas
ret
xchg
or
fwait
push
mov
jo
xor
adc
shrl
push
test
cmp
inc
pushf
sub
mov
and
adc
icebp
or
pushf
sub
add
sbb
into
add
test
add
cmp
inc
inc
add
sarl
into
adc
mov
idiv
in
cs
outsb
mov
xchg
loop
and
mov
shrl
cmpsb
adc
fmuls
outsb
mov
into
add
jb
into
mov
imul
push
push
popa
in
outsl
mov
mov
dec
mov
std
fdivrl
jbe
sub
aaa
mov
inc
das
xchg
mov
jecxz
cld
std
rorl
sbb
jl
xor
mov
pop
mov
out
cs
sarl
rolb
rorb
pop
out
hlt
mov
sub
xor
and
js
nop
ss
adc
fimull
insl
mov
scas
mov
movsl
addb
stos
divb
sbb
mov
adc
cmp
pop
aas
scas
inc
rcrb
xor
ret
outsl
fimuls
push
dec
stc
arpl
pop
sub
insl
into
jp
add
push
sub
lds
lds
in
nop
je
call
sbb
orb
subb
scas
fistps
xor
test
out
adc
mov
movsl
mov
jp
pop
jae
sahf
rorl
pop
xorl
cmpsb
sbb
aad
jnp
movsb
mov
imul
pop
push
out
incb
insl
lds
inc
cmp
inc
addl
stc
lock
inc
inc
jp
mov
add
pop
movsb
imul
in
and
cmp
icebp
std
add
lods
mov
and
sbb
or
loope
test
enter
je
test
xchg
pop
add
pop
cmp
les
pop
ljmp
lods
mov
ljmp
or
rolb
push
mov
adc
pushf
xchg
in
and
and
pop
into
iret
ss
je
push
mov
mov
xlat
in
fdiv
cmp
stc
pop
and
std
mov
sti
xchg
jo
cmc
pop
mov
insl
sti
in
enter
popf
dec
adc
push
xchg
mov
push
sar
or
pusha
dec
hlt
xchg
jb
stos
std
pop
repnz
adc
push
insb
loop
mov
cmp
sarb
mov
insb
adc
push
je
jmp
push
loop
rolb
mov
xor
in
scas
lahf
dec
fucomip
outsb
inc
fmuls
mov
cmpsb
rcrl
popf
fisubl
xor
mov
jmp
dec
xchg
bound
jnp
or
xchg
mov
scas
dec
adc
leave
test
sarb
mov
mov
shrl
mov
popa
sbb
fildll
adc
sbb
pop
lret
xchg
mov
cmp
or
ficomps
or
mov
bound
ss
popa
dec
out
sub
cmp
dec
or
push
mov
cli
jbe
sbb
jle
push
xchg
stos
aaa
pop
mov
lret
add
xor
call
movsb
cltd
mov
sub
or
cmpsb
jns
adc
mov
pop
inc
push
push
sahf
je
popa
les
mov
popf
push
loope
inc
dec
cmc
inc
jo
mov
xlat
add
push
fiaddl
fst
dec
push
test
cmp
xor
and
xlat
arpl
insb
and
movsb
jo
in
mov
bound
sbb
jl
lds
xchg
sbb
clc
xor
add
lcall
pushf
cmp
dec
pushf
aam
cmp
es
negb
xor
enter
movsb
cwtl
outsb
sbb
lea
cmp
clc
in
xchg
out
pop
shlb
fs
lret
xor
sahf
hlt
shrb
mov
das
cmpsl
fsub
fisttpll
lds
mov
int3
test
in
mov
das
mov
mov
lcall
jne
fidivrl
mov
adc
das
popf
mov
cmc
leave
lock
pusha
in
out
jno
jns
inc
cmp
imull
insb
mov
aaa
cmp
jmp
inc
push
mov
adc
cmp
lcall
cli
stos
pusha
in
bound
loope
clc
sbb
xor
and
inc
add
jb
pop
xchg
cmp
adc
pop
fwait
inc
mov
jle
mov
xor
in
jge
xorl
in
cmp
sbb
jg
arpl
push
ss
flds
xchg
or
push
xchg
mov
stos
inc
sahf
sti
xor
inc
loopne
pop
aam
and
push
cmpsl
jmp
in
cmpsl
sub
push
pop
mov
or
sahf
leave
inc
leave
push
inc
icebp
xchg
outsl
pop
sub
add
mov
shll
add
push
ss
mov
cmc
pop
pop
fcmovnbe
sahf
decl
pop
or
inc
mov
dec
xor
gs
sub
mov
imul
or
fs
movb
inc
pop
imulb
dec
pop
push
mov
inc
rcll
jp
cwtl
xchg
mov
mov
enter
push
stos
ds
sahf
mov
scas
xlat
jp
adc
cmp
cltd
in
mov
movsl
jg
mov
cs
lock
out
or
enter
mov
jge
frstor
int3
adc
mov
int3
sbb
mov
or
call
jno
cmp
inc
cmpb
fnstenv
lret
in
sbb
data16
iret
dec
inc
ljmp
popa
into
insb
pop
and
movsb
jmp
insl
inc
mov
pop
push
push
xor
dec
daa
mov
add
mov
sub
cld
xor
adc
mov
sbb
xlat
outsl
insl
dec
add
xchg
mov
out
out
call
out
arpl
jne
ret
sbb
mov
mov
mov
or
dec
mov
lret
cli
mov
clc
xor
inc
push
mov
sbb
jb
adc
ficoml
icebp
dec
lock
rorl
inc
lds
pop
loopne
sub
shll
mov
iret
xchg
inc
aaa
int3
aad
rorb
pop
sbb
lcall
fcoms
cmp
movsb
js
push
icebp
and
adcl
mov
orb
fs
and
or
in
cmp
aas
mov
sahf
adc
add
inc
in
jle
dec
adc
rol
pop
push
nop
call
adcl
out
xor
push
xor
jnp
xor
push
inc
or
mov
outsb
out
dec
dec
sub
xchg
int
push
jne
cmp
push
int
ds
out
cmp
icebp
pushf
mov
xchg
sub
dec
in
jge
pop
xchg
fsubl
mov
in
popa
sbb
dec
pop
pop
pop
in
loopne
mov
sahf
orl
dec
jle
xor
je
iret
in
cli
fcoms
pusha
pop
bound
push
out
bnd
addb
out
stos
imul
lahf
divb
daa
mov
jno
inc
xor
gs
cmc
stos
and
inc
ret
adc
enter
mov
sbb
std
or
mov
fnstsw
loop
lahf
push
jne
int3
jmp
rolb
dec
jne
int3
mov
lcall
iret
sbb
mov
stos
das
lahf
dec
es
jbe
cmp
sub
cwtl
push
pop
cmp
shr
mov
rcrb
jg
dec
sub
test
adc
data16
hlt
sbb
inc
test
fs
sbb
jbe
fnsave
js
fidivl
push
push
movsb
test
bound
xchg
sti
je
sbb
sbb
imul
sub
cs
ret
mov
icebp
loope
pusha
pop
pop
icebp
sub
adc
add
popa
add
inc
adc
fstpt
xchg
stos
jno
and
out
das
xchg
xchg
movsb
mov
xlat
xor
pop
inc
pop
jl
sbb
shrl
lret
xchg
dec
loop
cld
sbb
dec
sahf
lea
pop
push
inc
popa
sarl
inc
sbb
rorb
jmp
inc
sbb
es
in
jno
aam
jp
jns
and
push
xchg
push
jecxz
adc
icebp
ds
scas
mov
xchg
mov
inc
and
test
aad
xchg
push
or
in
fimuls
pop
xor
lret
fnstenv
adc
add
lock
add
xor
clc
ja
gs
daa
aas
fbld
cmp
cmp
inc
int
imul
icebp
xchg
push
mov
pop
mov
int
cwtl
popa
dec
jns
sub
xchg
stos
inc
adc
mov
mov
and
std
and
inc
push
dec
lahf
push
pop
mov
cld
dec
sbb
daa
inc
xchg
jge
aaa
or
adc
mov
int3
test
js
push
popa
inc
adc
xor
es
ljmp
dec
dec
je
mov
enter
or
rcrl
repz
je
mov
js
movsl
scas
fisubl
lods
and
in
jns
dec
test
in
jg
lahf
push
divl
adc
xorb
pusha
mov
imull
cmp
adc
cmc
inc
mov
and
pusha
xchg
lret
test
xchg
mov
test
or
lahf
out
push
jns
iret
pop
sub
test
loope
dec
movlps
push
mov
loop
rcr
cmpsl
daa
cltd
test
xor
in
cs
dec
add
pop
adc
mov
ror
idivl
aaa
mov
bound
pop
push
jns
jle
gs
push
jmp
test
dec
or
mov
insl
test
or
pop
addr16
fsubrl
mov
test
mov
add
fs
scas
cmp
shlb
cmp
jle
inc
jns
dec
scas
mov
xchg
mov
sbb
mov
lahf
lret
adc
les
cli
pop
xchg
icebp
int3
cltd
mov
cs
pop
sahf
shl
pop
adc
fcmovnbe
enter
test
and
int3
cmp
rcrl
cs
xchg
adc
add
scas
and
mov
jl
inc
je
mov
mov
xor
cmp
stos
out
sub
cmpsl
mov
fisttpll
inc
cmp
or
lret
adc
icebp
bound
movb
adc
cmp
sbb
or
mov
clc
cmp
std
sub
sub
mov
loop
sub
data16
jle
or
mov
sub
shll
xor
int
aas
and
roll
fiaddl
push
push
outsb
lea
test
mov
mov
daa
dec
enter
ljmp
pusha
popa
adc
push
add
std
fnstsw
mov
lret
xchg
push
push
js
hlt
out
movsb
push
or
push
mov
divl
push
std
jmp
int
mov
xchg
and
adc
cmp
inc
ret
outsb
cmpsb
fimull
mov
daa
int3
les
ret
xlat
mov
js
stos
fsubrp
add
test
adc
ljmp
subl
inc
arpl
lret
xor
pop
xchg
sub
push
inc
das
hlt
popf
dec
jbe
mov
loopne
out
ret
or
adc
cmp
lcall
inc
pop
hlt
loopne
pop
test
push
and
cltd
dec
add
pop
lea
shrb
xchg
pop
inc
xor
sbb
cmp
or
rol
scas
inc
ret
cmpsl
pop
push
adc
and
sbb
sbb
popa
lcall
mov
pushf
div
sub
lcall
xchg
push
lods
adc
push
mov
fidivs
jno
mov
insl
inc
sub
shlb
mov
aas
pop
nop
cli
mov
pop
sub
test
cmp
movswl
sbb
cwtl
ficomps
xor
leave
xor
jp
and
pop
xchg
adc
sbbl
inc
or
jl
pop
lods
push
test
mov
jno
mov
outsl
out
test
loop
mov
out
push
gs
or
mov
stos
adc
mov
mov
das
jnp
mov
mov
pop
aaa
scas
insl
lock
cli
jno
rcrb
mov
fidivrs
clc
inc
sarl
orb
ficoml
js
sti
movsl
popf
leave
cmp
pop
dec
test
sbb
and
lret
pop
movsb
shrl
iret
incb
cmpsl
jge
pushf
dec
nop
jne
cmp
je
sub
ja
lret
jl
mov
testb
jle
push
aad
add
mov
or
jg
lcall
out
xchg
bound
movsl
xchg
pop
jne
jns
push
scas
jmp
pop
jo
push
lds
mov
clc
rclb
fmul
mov
stc
cmpl
jne
fucomp
jns
std
mov
jo
dec
jno
leave
out
stos
int
push
and
repz
hlt
cmpsb
inc
gs
pop
ret
add
das
mov
xor
adc
pop
fnstsw
sbb
jbe
cs
out
jne
cld
and
pop
cmp
pop
cmp
and
icebp
push
jno
mov
add
fldl
stos
repnz
std
adc
jb
xchg
xor
mov
jg
fdivrs
pop
xorl
xchg
mov
xchg
xchg
cmpsb
fsubrl
jecxz
aam
cmp
sbb
cmpb
sbb
mov
inc
loop
fdivl
sbb
into
test
lods
lods
add
xchg
repz
or
mov
cltd
inc
mov
movsl
pushl
stc
std
jmp
loop
rclb
jge
out
dec
mov
fsubrs
jmp
aam
adc
fildl
jae
dec
in
ret
xor
or
inc
das
jmp
mov
clc
sbb
out
or
xor
jecxz
inc
push
fcmovb
imul
es
xchg
mov
dec
mov
in
fiaddl
aam
ljmp
mov
mov
push
ljmp
fisttps
and
mov
aam
xchg
pop
pushf
into
ret
dec
ror
lods
fstpt
mov
add
pop
push
adc
jle
into
outsb
mov
std
jnp
loop
push
or
xor
and
insl
or
sub
inc
adc
fisttpll
push
stos
xchg
orb
push
cmp
ret
ja
sahf
pop
add
ljmp
xchg
mov
out
and
je
icebp
das
jmp
lock
adc
pop
inc
lret
push
mov
push
pushf
pop
inc
adc
add
dec
daa
js
or
nop
sbb
mov
scas
test
mov
mov
nop
ret
jg
fs
pop
mov
pop
loop
movsl
mov
loop
in
jg
mov
mov
mov
stc
and
mov
inc
cmp
or
in
test
scas
push
je
dec
xchg
lahf
cmp
clc
orb
lods
mov
sub
add
fistpl
fmuls
pushf
les
sbb
ds
sub
dec
mov
sbb
test
je
sbb
test
in
add
jae
stc
sbb
jmp
fs
ficoml
mov
mov
push
pop
mov
sbb
pop
mov
mov
cmc
sub
lret
aam
leave
mov
aad
sbb
jmp
in
shll
call
jns
push
push
pop
pop
push
sbb
jae
sub
sub
jne
fs
mov
pushf
test
and
lods
mov
insb
push
push
or
outsl
cmp
dec
sub
add
xchg
jecxz
cmp
sub
inc
mov
or
in
inc
out
and
rcrl
imul
inc
mov
or
cmp
mov
in
insl
xor
cmp
imul
outsb
inc
in
int
pop
outsl
push
pop
pop
and
stos
xchg
pop
enter
push
imul
fisubs
mov
push
test
imul
shll
dec
test
divb
pop
sahf
push
imul
adc
stos
rorl
mov
cmp
shll
clc
xchg
lods
inc
psubsb
popf
loope
adc
mov
ret
pop
mov
nop
ljmp
test
stos
cmpb
jnp
mov
je
aad
jne
cmp
push
jge
sbb
fwait
fs
pop
imul
popl
xchg
sub
xchg
vmwrite
sub
out
jmp
mov
iret
mov
imul
xchg
lcall
into
test
push
negl
pop
rcrl
xchg
inc
adc
stc
mov
pop
xchg
jecxz
sbb
fisubl
push
xchg
sahf
push
inc
cli
jg
stc
jb
pop
leave
inc
inc
ret
jns
mov
jb
pushf
mov
mov
dec
out
jp
jmp
jnp
jl
sti
je
jle
cmp
fldt
xchg
jae
xor
mov
pop
jmp
xorl
es
xchg
neg
or
js,pn
popf
into
cmp
add
adc
mov
or
or
lret
and
sahf
and
into
mov
flds
outsb
push
cmc
xor
inc
dec
sub
imul
loop
add
das
inc
cwtl
jae
mov
push
int3
mov
stos
bt
sti
int
mov
test
ficomps
mov
or
roll
sub
push
pop
cvtps2pi
repz
dec
leave
sbb
mov
mov
jno
mov
test
into
inc
idivb
dec
pop
mov
adc
addr16
leave
into
jae
mov
gs
fdivs
dec
mov
cmp
mov
out
sbb
push
xor
mov
cmc
lret
xchg
jae
dec
push
sbb
jbe
pop
jp
xchg
stos
shr
push
jb
mov
xor
jecxz
push
loopne
loop
lcall
add
call
add
jnp
shrl
ss
dec
clc
aas
mulb
mov
push
cs
pop
xor
fsubl
jg
and
fs
dec
mov
dec
les
mov
in
in
out
mov
sub
xor
push
push
or
or
fldenvs
jecxz
sbbl
mov
scas
jp
in
pop
repz
adc
fs
mov
daa
or
out
pop
mov
adc
xchg
mov
dec
jmp
testl
sbb
sbb
mov
and
mov
push
into
mov
lds
test
pop
sbb
imul
loope
movsl
jmp
xor
negl
jecxz
pop
push
cmp
push
mov
adc
or
int3
ljmp
insl
lcall
std
dec
shrb
or
dec
cmpsl
inc
rcll
mov
or
dec
js
out
ds
jle
notl
rcrl
dec
lret
push
mov
mov
fcmovu
adc
sti
repnz
std
aas
mov
pop
mov
mov
imul
sub
jbe
cwtl
push
sbb
icebp
mov
pop
xchg
gs
scas
inc
ds
cld
jg
clc
fidivrs
inc
mov
and
test
lret
mov
mov
xchg
cld
mov
adc
cltd
inc
jle
add
test
arpl
sbb
xchg
sbb
dec
fildl
mov
lods
adc
movsl
xchg
jecxz
xchg
inc
shl
fisubl
pop
gs
push
and
xor
inc
push
jecxz
pop
fistps
xchg
mov
shrl
cmp
pop
pop
xor
insl
jns
and
sahf
mov
les
mov
int
sbb
or
jl
cli
test
ret
test
mov
lods
mov
ret
push
cmp
xlat
inc
xchg
xchg
and
fsubrl
sarl
in
push
xor
xchg
lret
push
and
xchg
cmp
out
movsl
std
clc
jle
add
cltd
fstl
in
aad
adc
inc
lret
mov
cmc
outsb
mov
fists
sbb
dec
mov
mov
inc
movaps
mov
push
pushf
cmp
and
jns
lret
xchg
sub
and
lea
mov
in
adc
jae
bound
jl
adc
xchg
js
repz
jae
add
mov
scas
xlat
lcall
mov
or
mov
cld
sbb
orb
push
jns
data16
sarl
cbtw
sub
inc
js
push
add
adc
push
jmp
das
xchg
inc
stc
test
pop
loopne
out
cltd
out
sarl
out
outsb
jl
cmpsb
pushf
ss
cwtl
cs
test
jae
mov
fbld
ror
shrb
mov
jae
fdivr
out
into
test
sub
mov
loopne
cmp
add
rcll
jmp
add
push
sub
push
xchg
dec
lea
mov
add
ret
push
cmpsb
lea
fstpt
lcall
nop
test
mov
xchg
inc
test
out
xchg
roll
cmp
sub
out
jae
xor
mov
sti
fstl
xchg
scas
and
sub
mov
or
dec
cmc
in
xchg
out
jno
mov
jb
mov
addr16
dec
cwtl
fwait
or
cmp
mov
xchg
iret
jmp
mov
in
mov
dec
ret
jge
jmp
les
data16
and
cltd
mov
bound
arpl
lods
outsb
out
pusha
insl
data16
jnp
call
sub
stos
popf
ljmp
mov
jle
ret
xchg
icebp
iret
jmp
out
xchg
dec
push
fimull
scas
gs
imul
xor
in
addr16
sbb
xor
sub
mov
push
shl
gs
out
imul
out
arpl
cmp
push
add
jmp
ss
mov
lds
lahf
pop
xor
push
sub
or
add
popf
mov
ds
lock
rol
sub
or
xchg
and
sbb
dec
aas
or
iret
xor
inc
pop
arpl
lods
jns
popa
adc
sbb
mov
aam
inc
sahf
or
dec
fistpl
in
jecxz
sub
and
shll
pop
jle
add
cld
adc
clc
pop
mov
hlt
les
stos
mov
rcrb
push
inc
inc
shrb
sub
xchg
push
loope
or
sbb
arpl
sbb
orb
cmp
xchg
fdivrs
out
stos
test
lock
xchg
sbb
test
aas
outsb
jmp
sub
jb
out
push
call
pushf
xlat
jns
adc
cli
jmp
push
lret
push
push
ret
sub
push
xor
sarb
dec
xchg
shlb
xor
jl
sbb
std
je
ret
out
jno
sbb
inc
es
je
bound
xchg
mov
cmpsb
or
pop
lret
mov
stc
imulb
imul
in
lea
mov
sti
or
cmpsl
pop
adc
and
sub
cs
xchg
mov
mov
add
cmp
loop
mov
inc
sub
test
xlat
mov
lods
xlat
dec
add
sbb
xchg
out
xchg
push
dec
xor
sbb
repz
out
sub
cmpsb
jo
mov
enter
aad
movb
jb
stos
inc
mov
mov
mov
loopne
pop
leave
and
and
in
dec
dec
sub
push
mov
cmpsl
mov
in
jecxz
sbbl
mov
movsl
xchg
vpsubw
ret
dec
or
jne
loop
sar
fwait
sub
pop
push
aad
loopne
push
outsl
shlb
addb
ds
sub
cld
pop
faddp
sbb
xorl
lahf
sti
or
stos
mov
insl
repz
scas
sub
dec
mov
aad
dec
mov
push
aam
push
or
shrl
rcr
addl
inc
lock
push
movsl
rorb
add
xchg
enterw
int
out
hlt
cmp
js
insb
mov
icebp
jecxz
push
sbb
push
xor
aaa
or
xchg
push
add
mov
lods
dec
call
into
mov
mov
call
iret
jmp
loop
dec
jg
dec
pop
lods
rclb
push
dec
les
ss
shrl
daa
xchg
dec
rcrb
into
in
push
ret
lret
sbbb
in
inc
test
add
test
mov
xor
sahf
jg
jb
clc
addr16
mov
push
es
popl
adc
pop
ljmp
inc
inc
or
and
lret
addl
jecxz
jnp
or
and
lods
push
aam
mov
mov
pop
jae
mov
addps
mov
cli
test
push
dec
cmpsl
push
in
sarl
test
push
stos
ja
ja
call
out
or
sarl
push
hlt
ss
je
clc
mov
push
mov
xor
in
mov
fildl
inc
outsl
push
xor
mov
pop
scas
xor
jno
mov
aad
data16
push
xor
mov
fnstsw
leave
lcall
out
mov
lock
push
incb
jmp
imul
out
jp
sahf
sub
pop
adc
lret
xor
sub
xor
bound
mov
testb
sti
jp
and
cmpsl
call
mov
pushf
adcb
xlat
insb
ret
jno
or
jb
pop
push
xor
iret
test
inc
imul
push
jle
push
mov
int3
out
repnz
mov
sbb
mov
pop
pop
sub
dec
add
mov
add
sub
shlb
notb
mov
fistl
shrb
into
negl
stos
adc
outsl
scas
xchg
mov
bound
ljmp
push
mov
xor
mov
mov
cmp
dec
lock
cmp
jp
push
mov
cmp
arpl
mov
imul
addr16
pushf
cmpb
cmpsl
pop
mov
lods
cmovg
sub
sub
movsb
xor
inc
repz
push
mov
in
mov
dec
xor
lock
cmp
test
cmp
loope
lea
adc
jecxz
xor
xchg
push
insb
sub
xor
xor
xchg
jge
daa
cmp
orb
pop
mov
jge
hlt
push
pop
lea
hlt
fadd
push
sbb
xchg
fdivrs
and
int3
lods
sar
out
lcall
jge
push
ljmp
push
add
mov
aam
and
imulb
cmp
shrb
scas
or
ficomps
popf
xchg
aam
jns
je
inc
divl
xchg
das
scas
sbb
inc
cmp
jp
sbbb
mov
adc
jo
pop
and
aaa
inc
push
leave
sahf
pop
mov
jmp
or
dec
test
push
test
push
xchg
jnp
mov
mov
pusha
jae
pop
mov
inc
push
ljmp
aas
xor
or
jmp
sbb
shrb
out
dec
fwait
and
sbb
mov
pusha
push
das
lea
fstpt
je
add
daa
bound
sbb
mov
add
sbb
cmp
stos
ss
mov
jo
and
aaa
hlt
mov
xor
add
push
lods
jbe
mov
sbb
aad
cld
mov
cmc
fsubr
mov
data16
cmp
dec
out
cmp
add
adc
xchg
inc
pop
shll
punpckhwd
mov
lahf
ljmp
adc
add
mov
push
decb
dec
sub
ds
pop
sbb
sub
add
mov
imul
jb
roll
inc
mov
imul
and
pop
into
push
adc
mov
mov
idivl
mov
icebp
adc
add
fldpi
jmp
xor
or
rorb
repz
push
scas
jae,pn
jno
aas
cli
xchg
jg
fs
das
js
pop
add
inc
jb
fwait
es
ret
add
fsubrl
in
sbb
push
xchg
or
fiaddl
pop
pop
push
mov
mov
or
mov
js
mov
adc
pop
push
cmp
xchg
pusha
loop
jle
jbe
inc
mov
test
je
dec
mov
or
or
rolb
mov
mov
loop
and
lcall
ja
aam
orb
push
orl
xchg
mov
mov
pop
sub
xchg
xor
xchg
les
std
pop
testl
mov
xor
jne
adc
ret
xor
mov
mov
shr
or
lcall
or
pop
lcall
les
mov
adc
scas
push
xchg
jge
sahf
lea
cwtl
iret
je
jecxz
jp
cmp
pop
lea
dec
sar
repz
rclb
or
adc
jle
iret
sbb
nop
pop
inc
add
jge
enter
push
rcr
add
mov
insb
pusha
nop
push
push
fisubrs
aam
dec
cmpsl
mov
stos
push
movsl
dec
out
dec
test
and
hlt
cmp
lea
pop
ljmp
gs
and
cmp
sbb
loopne
loop
mov
call
dec
in
cmp
stos
dec
push
sub
cltd
fstpl
fistpl
int
xchg
out
outsb
mov
sahf
mov
scas
jnp
push
inc
bnd
sbb
pop
adc
inc
aam
sub
cmc
jge
int
pushf
sti
jecxz
dec
in
lock
inc
xchg
jg
filds
adc
int
jge
pop
lcall
sarl
add
leave
mov
mov
fidivrl
add
pop
mov
xor
cmp
das
test
lock
xor
popa
je
pop
xor
pop
push
cli
pop
rcll
jo
push
or
test
insb
xor
sub
test
aam
pop
xchg
inc
sub
xchg
rolb
out
jmp
cld
pop
ret
mov
or
test
jp
push
pop
icebp
mov
or
mov
jecxz
adc
sbb
adc
add
data16
fcmovb
jl
call
mov
fmuls
sahf
cmpsl
add
sbb
imul
in
xor
and
mov
aas
movsb
mov
fsubs
inc
push
xchg
fbstp
mov
mov
push
pop
add
cmp
ret
mov
mov
repz
and
mov
cmp
adc
aaa
push
iret
inc
int
outsb
xchg
jle
add
xorb
addr16
es
inc
aaa
dec
lahf
popa
adc
xor
push
dec
adc
stc
imul
jns
inc
sbb
cmp
jae
mov
inc
popf
push
les
inc
lock
hlt
lods
pushl
inc
push
lcall
rcrb
daa
cwtl
xor
pushf
sub
jbe
roll
jbe
mov
dec
add
dec
movsl
aas
cs
mov
dec
dec
xor
fldenv
adc
pop
orl
pop
popf
test
mov
sbb
jle
leave
jne
loop
pop
gs
sbb
and
loop
aaa
or
mov
sbb
in
mov
test
mov
test
sub
push
outsb
aas
jb
or
xchg
test
push
pop
mov
imul
jns
pop
dec
int3
pushf
stos
js
popa
dec
cmovbe
pop
push
push
stos
pop
jge
imul
lret
and
dec
and
das
pop
test
xchg
or
aaa
cmpb
shrl
sbb
dec
xchg
add
push
and
or
push
sbb
jae
lret
sub
push
adc
arpl
mov
je
inc
test
testl
scas
aaa
aad
or
fimull
xor
mov
dec
push
xchg
test
iret
lds
push
xchg
mov
mov
jle
cmp
sbb
aad
add
fisubrs
adc
push
jne
sbb
repnz
pop
subb
cmpsl
xchg
outsl
aam
push
in
nop
or
fdivl
fdiv
xchg
adc
dec
mov
xchg
jnp
mov
in
push
std
mov
les
cmp
sbb
xchg
call
aam
nop
inc
xchg
imul
stos
xchg
xlat
popa
negl
jo
insb
mov
pop
in
lret
and
sub
jmp
mov
mov
and
xchg
adc
and
call
cmpsb
insl
sbb
push
and
xor
aaa
imul
xor
jle
cs
imul
push
ficomps
adc
popa
into
adc
fimull
dec
jb
es
ds
jmp
mov
adc
mov
xor
adc
add
xor
mov
jb
bound
out
lretw
jbe
sub
mov
loop
inc
aam
and
fstps
inc
fwait
push
mov
fs
jae
pop
scas
sbb
repnz
in
jp
mov
arpl
ds
aas
pcmpgtw
jbe
pop
adc
mov
cmp
movsl
das
stos
outsb
cmp
or
in
pop
ljmp
jl
inc
xor
ret
leave
js
inc
fsubl
sbb
jg
test
mov
push
fnstcw
jp
ljmp
sbb
push
fs
push
and
idivl
lret
mov
jne
push
stos
lods
or
mov
or
dec
dec
rcl
jbe
jae
push
add
repnz
adc
test
movsl
adc
aaa
outsl
inc
mov
movsb
inc
jns
xchg
int
mov
cltd
insl
jl
aas
sbb
out
adc
cli
push
cmpsb
cmpsl
mov
sub
into
cmp
cmpsb
push
mov
nop
fcmovb
pop
add
in
pushf
scas
cmp
loop
std
xor
addb
mov
int
aaa
mov
fistpl
lcall
xor
mov
inc
lock
adc
xchg
pop
rol
cmpsb
filds
adc
and
xor
jle
sbb
fstpt
mov
pop
pop
and
scas
or
mov
in
or
aad
sub
test
repz
repz
scas
mov
cmp
mov
xor
lock
pop
fstpl
mov
test
push
insl
pop
dec
fbld
xor
pop
addr16
lock
aaa
inc
xchg
cmp
fisttpll
push
sti
pop
jb
cmpsb
rcll
sub
or
js
imul
je
inc
je
jge
rep
lret
mov
mov
testb
insb
sti
fdivr
pushl
mov
sbb
dec
lret
mov
jmp
or
jg
icebp
outsl
and
xchg
jns
cmpl
sbb
outsl
xchg
mov
cmpsl
push
sub
in
mov
add
jne
sbb
mov
outsl
ss
xchg
mov
adc
dec
movsb
or
rcl
xchg
ret
adc
mov
cmp
add
xchg
hlt
adc
fs
sub
subb
push
lds
fxch
push
sub
adc
in
push
lds
shl
call
inc
lea
nop
xchg
mov
mov
fs
sub
out
jle
enter
ljmp
xor
std
xor
lcall
jne
repnz
cmpsb
xchg
sbb
hlt
loopne
push
subl
mov
adc
popl
pop
inc
rorl
or
mov
jle
pop
and
sub
or
inc
or
addr16
in
push
xchg
lcall
lock
stos
pop
imul
push
mov
icebp
shl
addb
cmp
mov
fcoml
adc
sub
jnp
iret
adcb
xlat
cmp
call
mov
leave
mov
xorl
push
daa
pop
add
pop
jl
mov
ret
mov
subb
je
xchg
shll
cs
orb
lea
sub
icebp
sub
and
pop
adc
adc
and
pop
pop
or
icebp
int3
cmpsl
mov
cmpsl
enter
sub
dec
xchg
clc
lcall
std
xchg
daa
push
inc
mov
loop
aad
fstl
push
pop
inc
mov
adc
fs
push
xor
push
cs
cs
push
xor
push
aaa
sbb
or
aas
out
inc
ret
push
push
arpl
or
mov
dec
sti
adc
xor
cld
add
popf
aad
std
mov
js
loope
out
add
add
outsb
jge
dec
nop
pop
sub
or
loope
inc
lahf
and
xchg
dec
movsl
jno
cmp
jo
push
inc
sbb
push
jecxz
inc
jge
or
pop
xchg
cmp
shll
sbb
loopne
mov
out
mov
inc
fbstp
shlb
sub
push
scas
fdiv
paddusb
lds
xchg
out
arpl
lret
jl
divl
adc
push
ljmp
push
aaa
rcrb
jle
out
lea
mov
mov
fwait
adcb
fnstenv
and
adc
cmc
fwait
insb
cmp
jne
ds
dec
lret
sti
jnp
cmp
fucomi
inc
cs
in
aad
mov
mov
jl
dec
lahf
or
or
sub
and
hlt
cwtl
jne
hlt
addr16
dec
xchg
jmp
inc
push
add
popa
mov
jnp
ffreep
xlat
add
std
shll
fstps
and
mov
daa
lret
push
inc
in
pop
jp
fmul
lea
mov
pushl
jno
fst
in
in
mov
jbe
stos
andl
sbb
add
outsl
jnp
fisttps
sti
test
mov
dec
push
jnp
xor
cmpsb
fldl
stos
repz
mov
cltd
mov
mov
fwait
or
int
and
sbb
inc
iret
pop
leave
and
shl
cli
mov
addl
add
xchg
hlt
gs
insl
ds
in
cmp
out
repnz
and
test
insl
fcomip
cli
shl
mov
inc
adc
mov
mov
jmp
cli
out
cld
fwait
push
daa
popa
clc
out
push
pop
int
aad
popa
mov
and
dec
je
and
dec
mov
repz
sub
cmp
sbb
push
cmp
pop
push
movsl
movsl
pop
stc
jbe
fwait
enter
sub
xchg
pop
sub
mov
test
lds
aaa
pop
jg
sti
test
xor
hlt
pop
daa
movsb
stc
les
dec
pop
jecxz
repnz
mov
cmpsb
scas
out
inc
cwtl
rcrb
push
iret
push
in
in
xor
out
and
scas
imul
out
les
outsb
sbb
mov
fcomps
pop
gs
int3
lock
or
sbb
lea
rcr
sub
add
or
fisttpll
fidivl
leave
aas
push
jnp
jns
mov
xchg
aad
mov
gs
cmp
push
hlt
jae
fistps
je
rclb
icebp
outsb
inc
outsl
cmc
fdivrl
and
xlat
pop
cmp
icebp
add
stc
add
adc
push
faddp
ja
out
jae
icebp
vmwrite
jmp
inc
fldl
or
sub
into
daa
mov
cmp
outsl
jno
inc
jae
sub
dec
stos
mov
pop
push
gs
sub
cmp
sub
cmp
pop
sahf
movl
jle
dec
sub
and
cld
fwait
push
add
mov
mov
pop
and
fdivl
fdivrl
dec
add
inc
adc
negl
orl
pushf
roll
cmc
mov
cmp
sub
out
xchg
inc
mov
testl
mov
fsubl
push
sbb
mov
pop
cmp
push
ret
test
pop
push
bound
cmp
or
repz
push
call
push
and
bound
jg
pop
xor
sarb
mov
or
jecxz
icebp
insb
pop
insb
and
cmp
mov
or
xchg
icebp
sahf
add
or
dec
add
cmpsl
test
xchg
fcomi
enter
jl
data16
sbb
ret
mov
dec
mov
sub
addr16
jmp
int3
fistpl
jge
xor
pop
in
cmp
jnp
cs
je
mov
jae
inc
cmp
jb
jmp
mov
int3
mov
xor
cmp
repz
mov
insb
xchg
pop
movsl
push
loope
insl
mov
rolb
sub
add
push
jecxz
mov
xchg
cmp
lcall
mov
icebp
ret
mov
xor
popf
addr16
push
in
out
stos
push
pop
jmp
icebp
add
rorl
ret
lds
imul
add
cmc
mov
ret
inc
add
mov
mov
add
sbb
jmp
mov
popa
ds
sub
mov
out
icebp
sbb
stc
cmp
mov
mov
insb
jecxz
inc
lock
lahf
push
ret
out
xor
in
add
or
mov
dec
ret
andl
mov
ljmp
shlb
xor
das
rolb
sbb
jnp
or
inc
add
lock
cmpb
repnz
xor
push
aas
ret
jl
rorb
les
nop
shl
out
xchg
enter
call
add
or
fmull
pop
insb
lret
sub
xor
dec
addr16
icebp
lods
ljmp
stos
out
xor
xor
std
fwait
dec
mov
xchg
sbb
push
xor
adc
inc
outsl
leave
xor
pop
mov
and
loopne
pop
jo
shlb
xor
dec
lret
movsl
sub
and
dec
lods
fs
cs
mov
out
sbbb
sti
push
xor
sbb
push
int
xchg
test
xchg
ja
xlat
xlat
dec
stos
xor
lahf
nop
sub
rorl
jle
mov
inc
imul
mov
stos
ds
into
cmp
inc
outsl
mov
loopne
int3
mov
addr16
ficoml
dec
outsb
dec
dec
out
dec
adc
mov
rclb
negb
add
dec
std
inc
fmulp
inc
repz
sbb
test
inc
jp
lea
pop
outsb
and
adc
mov
xlat
mov
pusha
lods
repz
cmpsb
add
push
call
push
movsl
lcall
sub
insb
insl
outsl
and
insb
mov
push
xchg
mov
mov
add
dec
pop
cltd
lret
jg
fldcw
mov
xchg
icebp
inc
aam
test
push
or
adc
and
add
and
xchg
iret
and
jb
and
les
push
faddl
push
lds
jo
mov
mov
leave
jmp
adc
jg
cli
lret
xchg
fldcw
pop
lods
mov
lcall
out
sti
mov
movsl
icebp
push
cmpsb
jbe
sbb
xchg
pop
pop
mov
loope
orb
lcall
push
mov
rcrl
push
mov
pop
std
nop
sub
cltd
mov
xor
gs
cmpsb
and
mov
and
xchg
stc
les
adc
out
and
out
mov
btc
stos
imul
jmp
fiaddl
inc
sbb
cmc
xlat
push
into
xor
call
sub
inc
mov
mov
ficoms
sbb
xchg
xchg
scas
int
mov
cmp
and
out
sub
jno
dec
cs
mov
dec
into
int3
mov
xor
adc
jne
jns
cmp
clc
mov
push
jne
cmc
push
add
stc
bound
pop
dec
jle
cmpsb
movsl
ds
jb
or
push
fucomi
int3
xchg
lods
mov
adc
jbe
jmp
cmc
dec
or
std
pop
scas
push
iret
mov
add
jae
or
aad
enter
inc
mov
push
push
mov
es
cs
divb
xchg
mov
loop
pop
mov
push
jo
xchg
adc
out
sub
mov
mov
cs
je
fistpl
test
stos
jne
out
movsl
pushf
jne
mov
xor
and
dec
bound
push
mov
cmp
cmpsl
out
sbb
push
sub
inc
sbb
push
stos
cmp
leave
xlat
hlt
xor
test
mov
ret
mov
push
out
jb
pop
gs
mov
fwait
or
out
cmpsb
cli
ret
sub
jbe
push
sbb
inc
and
std
hlt
insb
xor
loope
jnp
mov
mov
aas
aad
or
jl
or
shl
xor
jecxz
xlat
pop
push
xchg
lds
cmp
sub
mov
ljmp
jbe
fidivrs
cmp
xor
dec
push
jnp
fiaddl
adc
add
push
cmp
lret
fstps
mov
mov
iret
test
mov
dec
ret
pop
or
and
jo
iret
adc
pushf
jp
mov
mov
xchg
pop
dec
orb
or
adc
ja
out
shlb
lods
jae
push
adc
add
arpl
scas
sti
mov
les
jmp
mov
cmp
or
cmp
or
movsb
mulb
or
loop
jge
or
int3
pop
ret
xchg
aam
enter
add
cmp
push
dec
lock
and
les
dec
stc
movsl
cmp
loopne
jbe
push
add
xorb
push
push
mov
push
cmpsb
dec
repz
pop
into
nop
mov
xor
incb
nop
jns
into
adcl
repz
roll
cmpb
xchg
scas
jp
add
pusha
push
jbe
xchg
pop
adc
movsl
lock
adc
in
jnp
lods
mov
mov
les
cs
dec
addl
clc
fsubl
adc
mov
jns
inc
push
dec
gs
adc
inc
scas
pop
loope
lods
popa
cmpsb
xchg
jmp
or
insb
push
ja
ret
cmp
movsb
ja
stos
push
xchg
arpl
jo
pop
idivl
jae
fisubl
xchg
jb
inc
pop
jnp
jno
mov
jb
push
popf
cmc
jae
dec
mov
inc
xor
cmpsl
xor
stos
outsl
jge
xchg
xor
leave
jle
sub
lods
imul
and
enter
lret
in
loope
push
andb
adc
test
out
push
es
in
orb
dec
push
bnd
rcrl
shlb
stc
mov
cmp
or
fnstcw
cmpsb
decl
lods
pop
mov
popf
jecxz
dec
aas
int3
int3
lret
call
mov
dec
out
mov
inc
movsb
push
data16
lock
jns
or
js
out
std
pushf
aaa
jl
sbbb
fwait
cli
lods
rorw
pusha
es
dec
ret
mov
xchg
xchg
xor
orb
jle
fdivrl
mov
cmp
cmp
or
add
pop
movsl
std
daa
pop
scas
mov
cmp
decb
push
add
insl
in
add
cwtl
out
dec
in
mov
aas
push
push
shll
push
dec
into
pusha
jae
cwtl
loop
dec
pop
cmp
push
mov
jle
pop
mov
subl
inc
xor
ficomps
roll
inc
jnp
mov
mov
addb
jmp
jle,pt
xchg
pop
inc
rcll
pop
mov
dec
movsl
push
mov
orb
pop
pushf
mov
jne
inc
call
lahf
pop
incl
mov
add
test
and
mov
dec
inc
lahf
test
jge
sarl
icebp
fs
repz
mov
mov
lods
sti
jns
push
xchg
loope
dec
push
pop
je
lods
adc
lret
in
jge
sbb
add
movsl
subb
loopne
jo
sbb
popl
mov
lock
cltd
inc
cmp
sbb
inc
add
add
lcall
sti
iret
leave
mov
mov
flds
subl
mov
mov
iret
jp
add
add
loopne
pmaddwd
movsl
in
sar
or
movsl
lret
movsb
subl
or
jo
fwait
sub
loopne
xchg
pop
push
lahf
jg
data16
in
loope
pop
push
das
jge
lods
mov
mov
and
push
jg
das
sub
adcl
mov
or
test
test
sbb
mov
sbb
pop
jae
call
loope
push
sbbl
pop
arpl
cmc
dec
lret
int3
aaa
pop
xchg
inc
loopne
pop
xor
xchg
test
pop
mov
pop
aaa
sub
add
imul
cmp
inc
rcrb
nop
cmp
aaa
mov
adc
js
cmp
stos
clc
and
call
mov
xor
repz
shlb
add
dec
add
mov
rcrb
jb
sub
ds
push
push
movsb
add
pushl
psllw
mov
jbe
arpl
fistpll
push
cmp
pop
inc
push
cli
adc
lea
fisubs
add
cmp
fidivs
loop
adc
call
xlat
add
xlat
dec
stc
bound
cli
cs
xor
stos
mov
jo
jmp
pushf
xchg
mov
cs
out
clc
inc
adc
mov
cld
mov
sbb
mov
outsb
dec
test
jns
enter
push
xor
xor
into
aaa
insb
sub
or
fisubs
push
int
nop
pop
ja
jns
imul
add
push
pop
inc
mov
cmovb
mov
insl
inc
inc
imul
sahf
pop
adc
movb
ds
dec
sub
fs
or
xchg
xchg
rcrb
jg
cmpsl
stos
adc
jl
fstps
leave
inc
jmp
stos
call
mov
ja
out
inc
lea
pop
mov
loop
mov
int3
scas
xchg
cld
pop
test
mov
or
mov
call
dec
int
xor
fsubr
xlat
test
xor
js
inc
mov
cmp
push
mov
imul
adc
out
bswap
popa
test
mov
lock
pop
add
sbb
lret
pop
das
adc
pusha
cs
mov
fwait
jmp
push
aas
xchg
sbb
jle
mov
push
mov
sub
xchg
les
or
in
mov
aaa
push
sub
sbb
clc
loope
addr16
mov
or
cwtl
push
movsl
add
mov
add
and
mov
clc
pop
mov
adc
dec
pop
mov
into
xor
push
sbb
pushf
sub
push
dec
insl
mov
std
push
loopne
push
mov
add
cmpsb
cli
xlat
subb
xchg
scas
cmp
sti
adc
imul
mov
lds
dec
in
cli
mov
fimull
aad
push
out
mov
mov
dec
jbe
and
xor
out
cmc
push
fiaddl
out
repnz
icebp
add
mov
dec
stos
cmp
cmp
adc
stc
add
bound
popl
in
out
jne
add
inc
mov
loop
push
and
xchg
or
sub
cmc
and
in
sbb
insl
hlt
add
mov
rcrl
mov
jmp
mov
push
popa
into
lods
lods
fistps
cli
aam
inc
testl
jns
ret
sub
clc
nop
shll
fisubs
cmp
sbb
jl
mov
out
push
popf
pop
stc
mov
push
fbld
fistpl
les
je
adc
push
dec
movsl
mov
mov
mov
in
sbb
stos
sub
xchg
lds
scas
scas
inc
push
idivl
arpl
loop
sub
cmp
mov
pop
rcrl
mov
mov
push
xor
xchg
mov
aad
mov
repz
arpl
mov
mov
pop
jle
add
lcall
inc
jo
dec
push
pop
in
sbb
add
outsb
mov
scas
ss
clc
bound
fwait
pop
push
sbb
imul
iret
pop
std
cmp
mov
xchg
ret
out
mov
pop
mov
mov
nop
pop
loope
cli
push
fistps
add
push
cmp
ljmp
fildl
fs
pop
cltd
sub
jne
push
jns
lcall
testl
and
cmc
push
fidivrl
int3
bnd
mov
add
mov
ds
mov
adc
in
sbb
cmpsb
xor
int
sub
jecxz
adc
stos
cltd
push
daa
sub
mov
dec
sbb
inc
mov
sub
sbbb
test
in
mov
mov
cmovne
aaa
xor
scas
insl
outsl
inc
test
sbb
in
ja
pop
dec
mov
pop
insl
daa
mov
add
xchg
test
pop
decl
ds
fs
cmpsb
jnp
icebp
xor
mov
pop
xorb
addr16
mov
push
mov
test
inc
clc
mov
xchg
es
shlb
inc
in
les
loope
pop
mov
adc
jno
stos
cmp
xchg
pop
stos
bound
mov
arpl
lods
jae
insb
dec
cmc
pop
loopne
xchg
sbb
push
divl
xor
inc
cmp
xor
and
jb
imul
ja
xor
jne
out
add
push
out
out
push
popa
jne
xchg
leave
ret
aaa
dec
jg
jns
add
cwtl
lcall
ror
inc
and
xchg
pop
cli
ja
pop
sub
int
test
imul
inc
into
scas
or
sub
push
ret
insl
test
add
sbb
psubw
cmpsb
nop
mov
mov
adc
cmc
sbb
sahf
lods
enter
xorl
mov
lods
aad
ja
std
dec
mov
xchg
mov
ljmp
outsb
test
loopne
stos
movl
lret
and
mov
xchg
jg
pop
dec
fldenv
mov
arpl
movsb
aas
cmpsl
jae
push
bound
mov
and
ja
mov
xor
pop
mov
xchg
xor
mov
fsubs
mov
ret
xor
imul
inc
add
mov
xchg
push
xchg
in
cmc
aad
cmpsb
cli
daa
cmpsb
enter
push
pop
mov
scas
xlat
cmp
jo
adc
cmpsl
loopne
fisubrl
pop
mov
mov
outsl
aam
cmp
hlt
jmp
mov
lods
or
stc
out
in
or
stc
jnp
leave
xchg
pop
int3
dec
pop
push
out
dec
pop
adc
lock
mov
out
imul
xor
dec
mov
jbe
sub
shlb
fwait
pop
sub
sub
push
scas
fisttpll
mov
cltd
pop
xchg
jno
add
repnz
push
pop
cmp
dec
sbb
es
pop
jecxz
mov
cmp
pop
cmp
and
cmpsb
out
ss
insb
mov
add
mov
xchg
xor
dec
cmp
iret
rorb
sbb
lcall
mov
xlat
sar
ss
subb
loop
leave
sar
fnsave
in
sbb
mov
pop
push
scas
push
jo
mov
es
jb
aam
in
outsb
jbe
sbb
andnps
mov
and
addb
xchg
sbb
fstps
xchg
pop
mov
mov
rcrb
and
mov
push
test
mov
jge
xor
ret
jne
data16
xlat
sbb
mov
loop
push
cmpsb
sbb
pop
push
mov
sub
adc
xchg
xor
sub
cmp
adc
mov
jae
mov
imul
sbb
jg
nop
icebp
ror
cs
pop
imul
cmp
or
in
pop
and
dec
aad
out
rorb
loope
in
enter
xlat
sub
xchg
aam
ret
dec
sub
loop
mov
push
jmp
rol
sbb
shlb
jo
loope
xor
in
hlt
and
pop
dec
mov
mov
xor
xchg
scas
loope
push
jecxz
inc
jmp
nop
sbb
sbb
jle
lds
cmp
clc
add
hlt
fisubrl
icebp
sti
cmpsb
mov
xchg
out
imul
jbe
mov
shrl
fidivrl
pop
mov
lret
mov
cmp
faddl
stc
pop
inc
dec
ja
fidivl
lods
mov
xor
jl
int3
and
lcall
sub
pop
dec
mov
sbb
mov
jg
std
std
shll
mov
sbb
adc
imul
fcomps
fdivrs
imul
mov
xchg
ljmp
or
scas
bound
aam
cmc
outsl
mov
inc
and
push
dec
inc
sub
xchg
pop
mov
dec
ja
shr
repz
mov
leave
fcmovnbe
movsb
mov
sbbb
push
popf
js
mov
sbb
mov
mov
les
pushf
pusha
xor
add
xchg
or
sti
shl
test
outsl
dec
jnp
mov
xor
cmp
scas
insl
dec
and
or
roll
sbb
ja
and
inc
fisubl
sub
lret
hlt
xor
xor
push
and
xchg
test
daa
sub
inc
cmpsb
insb
mov
ja
cltd
sarb
add
mov
jmp
jne
inc
cld
lret
mov
fsts
rcrb
mov
in
pusha
int3
or
xor
jge
stc
jp
test
movsb
movsb
test
dec
sub
xchg
pop
ja
sarb
xchg
xor
sub
inc
arpl
outsb
pop
shl
jecxz
outsb
dec
inc
outsl
scas
repnz
xchg
or
bound
fcomps
sub
jg
in
mov
fs
mov
xor
jle
stos
pop
mov
push
xchg
pop
movsb
mov
sahf
out
lret
inc
addr16
sbb
cmp
not
mov
jae
adc
mov
adcl
mov
sub
push
or
sub
jnp
and
push
imul
mov
in
inc
jnp
dec
lea
mov
inc
and
adc
cmp
xor
xor
test
lods
xchg
pop
inc
repz
data16
rorb
pop
in
sbb
xchg
in
clc
leave
insb
push
mov
push
inc
jmp
sbbb
mov
adc
aad
or
mov
testb
jo
std
cld
sub
xlat
sub
push
sbb
mov
lods
int3
insb
jnp
mov
mov
adc
aas
push
lcall
pop
mov
jnp
push
rcll
out
jbe
mov
inc
and
mov
lods
popf
adc
imul
or
shlb
jl
inc
add
loop
dec
stos
jne
dec
inc
adc
sti
cli
gs
shrl
fimuls
ret
sbb
jge
add
out
xchg
pushf
nop
fwait
cmp
sti
int
sub
xor
xchg
and
inc
fs
pop
and
lea
inc
and
adc
fwait
jp
push
test
fwait
divb
jmp
inc
lods
push
sarb
xchg
push
pop
mov
mov
rcrb
cmpsl
push
pop
aas
xchg
shrb
mov
pop
and
push
cmp
addr16
mov
jno
mov
addr16
jge
jmp
push
cld
mov
jp
dec
int
testl
aad
mov
inc
int
and
jno
cmp
and
test
insb
adc
test
pop
dec
outsb
cmc
push
imul
jb
out
inc
inc
rol
push
enter
inc
xor
loope
push
mov
das
imulb
sbb
cmc
test
and
inc
sub
rcl
jbe
je
or
xchg
add
add
ljmp
lds
das
xor
xchg
scas
inc
xor
pop
add
sub
inc
imulb
cwtl
xlat
pop
js
cmpb
sarl
lret
mov
mov
fdivrl
cli
sti
mov
into
fsts
lds
adc
in
outsl
add
and
add
scas
sbb
mov
iret
lock
aam
mov
dec
fisubl
ja
push
inc
fdivrl
ret
push
xlat
jo
add
test
mov
in
push
loopne
shll
fwait
adc
jl
mov
pcmpgtb
cmp
sub
sar
clc
push
adc
js
cmp
stc
mov
addr16
ljmp
add
aam
aaa
sbb
push
xor
pop
inc
fwait
add
mov
dec
push
push
adc
jle
cmp
iret
inc
cmp
andl
cmpsb
imul
out
and
xchg
lcall
sbb
rol
or
rorl
dec
lret
mov
clc
dec
add
out
or
mov
inc
daa
in
cli
inc
push
test
or
dec
ljmp
lret
mov
inc
push
imul
or
pop
popa
lahf
popa
inc
rol
dec
addr16
outsb
xchg
jo
cmp
push
adc
insl
mov
aas
xchg
imul
ficoml
jno
add
mov
sub
divl
out
addb
subl
mov
xchg
lcall
adc
push
testb
jo
sti
pop
jbe
std
adc
or
mov
mov
dec
inc
mov
in
mov
cmp
jg
jl
cwtl
int
jae
push
push
mov
sbbb
add
xchg
and
loope
fwait
test
xchg
xchg
imull
out
add
and
pusha
cmp
out
xchg
loopne
sub
cs
xor
pop
xchg
dec
xchg
mov
xorb
stos
insl
enter
jns
fisubl
pop
rcl
pop
dec
arpl
pop
mov
sahf
xorb
mov
arpl
push
std
mov
rolb
loopne
adc
cltd
call
and
and
imul
mov
aam
insb
and
push
sub
xor
add
pop
mov
je
andb
cmc
push
push
mov
sarb
int
mov
xchg
dec
pop
imul
adc
cmp
icebp
inc
cli
loop
jb
xchg
stos
imul
rcrl
mov
movsb
or
lock
shlb
pop
lods
and
mov
cmp
or
or
pushf
std
adc
mov
repnz
fidivrl
push
or
cmp
jno
mov
mov
push
inc
popa
insb
xchg
and
adc
mov
cwtl
arpl
add
jmp
pop
xor
es
add
rcrl
repnz
int3
xchg
out
jmp
dec
xor
repz
mov
out
or
idivl
push
and
adc
sub
jae
mov
push
or
mov
lods
cmpsb
mov
and
ljmp
or
cmp
cmp
pop
popf
sti
sbb
mov
adc
les
xor
or
inc
push
into
icebp
jo
int
icebp
testb
fstpl
xchg
xchg
out
push
sarb
arpl
dec
rcrb
xchg
jnp
and
mov
cmp
bound
scas
or
or
ljmp
fcoms
push
pop
xchg
dec
push
add
mov
sbb
imul
or
xor
mov
cs
xchg
in
inc
arpl
push
sbb
jno
push
or
cwtl
inc
mov
mov
adc
sbb
aaa
xor
and
stos
xor
jp
mov
rcrl
loope
jns
push
lods
arpl
in
ret
jb
cmp
inc
dec
xchg
fstl
shr
insb
mul
mov
push
and
dec
and
gs
inc
mov
movsl
sti
pusha
push
into
adc
mov
mov
dec
xchg
jno
in
push
mov
push
xchg
xlat
cmp
ffree
sub
clc
test
movsb
flds
mov
out
mov
mov
addr16
ret
popa
scas
pushf
iret
cmp
cs
mov
aam
ror
xchg
sub
ret
andl
and
shll
push
add
mov
dec
sub
inc
ret
pusha
mov
outsb
lret
cmp
repz
fiaddl
cwtl
rcll
mov
dec
mov
scas
fs
daa
or
andl
or
mov
add
pusha
sub
pop
lcall
xor
mov
pusha
fistpl
dec
enter
lea
push
daa
jge
stos
scas
sbbb
push
sbb
mov
pop
aam
lret
and
pop
jp
mov
scas
jl
test
dec
xor
cwtl
or
dec
mov
mov
mov
cmc
movsb
ss
in
xor
aaa
scas
ljmp
xchg
cmp
dec
int3
js
and
push
mov
inc
test
scas
loope
jmp
jp
mov
xchg
lods
arpl
scas
pop
mov
aaa
cmp
jge
cs
in
jo
int3
fstpl
lods
mov
ret
adc
insb
adc
jmp
sahf
jmp
cld
jg
loop
hlt
andb
test
les
jns
jg
stc
addl
mov
sbb
mov
enter
jbe
leave
adc
inc
cmc
push
and
dec
inc
xchg
or
xchg
push
lods
stc
aaa
sbb
fnstcw
add
jno
jg
dec
mov
sahf
or
cmp
inc
addr16
ja
test
xor
sub
pushf
push
addr16
imul
dec
sarl
sbbb
lret
fbld
push
lods
dec
push
sub
ss
cmp
fsubr
mov
pop
sub
dec
call
lret
stos
lods
push
xlat
lret
or
int3
repnz
inc
jge
test
dec
call
fcomp
jbe
bound
xorb
sub
lahf
ficoml
sti
lret
mov
sbb
or
test
imul
test
call
mov
loope
lds
bound
ds
out
gs
and
inc
sbb
lret
scas
movsl
xlat
jge
xor
lret
or
dec
dec
sub
mov
leave
inc
sub
pop
inc
jg
icebp
bound
mov
push
lds
jmp
mov
xor
mov
movsb
icebp
adc
mov
push
orb
push
jno
lret
test
movsb
shl
jmp
cmp
or
push
imul
sbb
jae
aad
push
sbb
and
popa
inc
push
xchg
sbb
pusha
dec
and
std
inc
lahf
ret
cmc
sbb
lcall
or
nop
jp
sar
adc
or
pop
cmp
lret
scas
bound
sbb
fidivrl
out
icebp
or
jae
cli
sbb
lock
fwait
cmp
inc
pop
mov
push
mov
popa
popa
push
lods
xchg
in
sahf
xor
cmpsb
push
dec
lahf
scas
lahf
hlt
pop
hlt
aas
mov
sbb
push
xchg
or
push
pop
adcl
sbb
push
inc
or
cmpl
mov
push
fldenv
inc
cmp
in
jo
bnd
fcmove
icebp
jge
push
lods
loopne
ret
aam
decl
inc
es
push
movsl
lods
ret
lahf
outsb
ds
out
sbbl
adc
je
or
stos
mov
xor
test
sbb
enter
das
xchg
test
push
in
mov
sbb
pop
popf
sbb
mov
lds
je
mov
dec
and
jbe
push
lea
mov
jnp
adc
fnstsw
or
cltd
sub
mulb
jb
jge
mov
fsubrs
pop
pop
push
lds
xchg
xchg
or
dec
cmp
outsb
ret
mov
pop
cmc
push
cs
pop
add
xchg
shlb
fwait
push
ret
mov
mov
mov
mov
ffree
mov
sbb
jo
icebp
push
mov
call
insb
int
mov
les
imull
mov
ret
es
roll
jb
sbb
mov
cmp
adc
out
fbstp
xlat
test
and
cltd
ja
pop
xchg
mov
das
xchg
add
push
cld
aas
rcrb
mov
shrb
aaa
dec
or
dec
and
mov
push
adc
and
and
cs
inc
popa
lods
out
data16
adc
mov
lds
cmp
push
dec
mov
sbb
add
clc
aaa
mov
imul
or
out
lods
jmp
ret
lret
in
adc
pusha
cwtl
fdivr
out
lea
sahf
mov
cmp
push
clc
fistl
mov
add
orb
fisttpll
in
mov
push
sahf
fldln2
add
lods
push
in
fidivl
fisubrs
ret
mov
les
test
ret
loopne
lcall
gs
dec
mov
sub
push
insb
adc
scas
mov
cmp
shll
mov
gs
aam
mov
mov
sbb
rcrl
xor
pop
jl
xchg
mov
scas
mov
loope
test
mov
and
mov
or
inc
cmp
fisubrl
dec
and
test
push
jno
arpl
xchg
xor
or
mov
inc
movsb
pop
pop
xchg
dec
dec
dec
fnstsw
pusha
pusha
jbe
mov
in
sbb
test
pmullw
add
mov
aad
sub
push
roll
xchg
or
mov
sub
scas
rolb
xor
shlb
dec
cli
sbb
xchg
repz
pop
lcall
decb
in
je
sub
sbbl
cmp
mov
in
fdivrp
notl
test
and
xlat
cwtl
lods
ja
cmc
inc
rep
mov
push
loopne
repnz
lea
repz
sbb
test
inc
cmpsb
mov
repnz
push
jo
sub
inc
mov
lcall
nop
or
testl
daa
mov
adc
pusha
mov
ljmp
push
or
cmp
shlb
cmc
mov
lcall
imul
xchg
loop
les
mov
scas
mov
rclb
mov
dec
xchg
clc
push
ret
cwtl
les
in
or
mov
inc
push
pop
mov
push
and
movsb
testb
roll
and
mov
ds
cmc
xor
out
pop
sub
fdivs
in
mov
inc
xchg
shlb
jecxz
inc
push
cmp
xor
arpl
jecxz
dec
in
mov
sub
mov
sbb
minps
fstl
push
mov
jns
iret
subl
lcall
in
xchg
or
lret
idivl
and
ja
ret
cltd
gs
and
adcl
lods
gs
fsubrl
cld
jno
xor
in
cmp
mov
and
cmp
jns
push
xchg
jb
mov
data16
outsb
pop
movsl
lahf
push
jmp
cmpsb
sar
leave
nop
cmc
in
sbb
mov
pop
inc
lea
xor
add
cmp
stc
pop
ret
push
dec
mov
out
push
sbb
xchg
jns
in
in
ds
add
mov
xor
pop
lock
idivb
mov
xchg
jae
test
and
mov
ret
add
fiadds
cmp
enter
mov
push
push
cmpsl
sbb
push
andl
in
push
lcall
mull
scas
mov
push
pop
mov
loope
lods
insb
jno
dec
popf
adc
les
add
xchg
lea
lahf
pop
inc
mov
push
pop
je
insl
nop
push
mov
push
and
sarb
push
out
mov
dec
sub
xor
lock
adc
nop
jmp
in
imul
cwtl
sub
iret
fdivs
add
sti
jl
fdivrl
lret
and
sbb
sahf
push
fld
insb
andl
ljmp
xor
nop
mov
out
jo
je
test
and
negb
inc
test
loope
das
sub
pusha
xchg
adc
inc
jmp
ret
adc
jbe
test
pop
xchg
jne
into
jl
lea
xorl
hlt
lock
fistl
jmp
outsb
les
inc
inc
adc
std
adc
lret
pop
shlb
cmp
scas
xor
add
sub
std
test
mov
push
xchg
xor
xor
psubsw
mov
pusha
mov
mov
nop
imulb
lods
repz
mov
or
jle
sbb
and
jle
divb
in
mov
add
jge
add
leave
mov
stos
mov
sub
sub
cmpl
or
mov
push
pop
pop
dec
int
je,pn
icebp
sbb
sbb
enter
push
mov
sbb
popa
les
mov
in
imul
and
int
add
and
pop
test
mov
mov
sbb
int3
in
sub
cwtl
mov
rol
add
shll
xor
insb
push
lock
sti
mov
hlt
testl
sbb
cld
or
cmp
mov
fstl
push
es
mov
repnz
stos
fsub
jno
mov
mov
push
fimull
shrb
add
in
jp
or
repnz
dec
ret
xchg
xor
xchg
push
lcall
out
test
stos
mov
das
or
sahf
add
add
loop
cmp
or
imul
rcr
cld
mov
ret
dec
sbb
fsub
fcomps
mov
add
out
popa
fwait
xlat
loop
add
mov
movsl
jno
addr16
lods
pop
shr
popf
data16
loope
dec
mov
pop
jo
xor
lds
pushf
ret
cmc
or
sbb
mov
mov
xchg
dec
shrl
ja
cmp
in
add
or
and
mov
out
jmp
in
pop
cmp
testl
stos
xchg
into
mov
mov
daa
lds
mov
push
cmp
inc
xlat
aam
or
loop
mov
lds
mov
dec
repz
gs
sti
adc
xchg
jecxz
jg
and
fcmovbe
imul
sti
in
push
outsl
rorl
movsl
inc
inc
repnz
push
jg
or
jge
sbb
sub
sub
shlb
das
out
jo
cli
xor
mov
mov
scas
cmp
out
push
pushf
mov
dec
add
int3
xor
sbb
mov
mov
out
push
pop
xlat
outsb
or
jl
roll
inc
mov
mov
leave
dec
test
mov
dec
xor
or
lock
scas
ja
push
test
bound
jno
sahf
xor
inc
or
sbb
out
dec
jp
repz
cmc
aad
or
push
and
data16
pushaw
xor
mov
out
xchg
and
in
add
adc
inc
dec
pop
fs
jge
sbb
int3
or
fsubrs
and
sbb
ss
incb
sub
add
mov
mov
mov
sbb
mov
pop
je
add
sbb
fsubp
cmp
mov
inc
dec
pop
cmpsl
jecxz
jecxz
in
sarl
mov
adc
movl
jl
inc
xchg
jl
jge
popa
cs
movsb
movsl
and
cmpsl
repnz
jno
mov
rcr
pop
movsb
out
sbbb
add
into
xchg
imul
into
push
fdiv
xchg
dec
dec
lahf
pushf
cmp
jns
repnz
or
add
push
ljmp
shll
inc
dec
dec
fstps
adcb
mov
ret
out
mov
xchg
jg
push
cld
mov
fisubrl
adc
imul
andb
mov
mov
cmp
sbb
repz
cmpsb
in
pushf
dec
cli
js
sahf
stc
mov
mov
push
or
pop
lret
ds
sub
sbbb
in
aaa
scas
jo
jl
testb
lods
and
mov
mov
and
enter
sbb
sub
imull
inc
loopne
in
adc
aaa
ret
add
inc
xor
jle
cmc
mov
inc
das
sub
js
mov
shll
and
jl
enter
inc
packssdw
shll
lods
lret
ja
call
sarw
pop
mov
aam
push
sbb
add
add
arpl
push
arpl
jbe
fstpt
cmp
mov
cmp
mov
imul
lahf
ss
cmpsl
test
shlb
jbe
xor
push
arpl
pop
mov
jmp
sbb
imul
add
lret
xchg
call
aaa
xlat
fimull
sbb
sbb
lds
pop
loop
std
das
ret
push
push
jmp
daa
js
clc
jle
xchg
mov
lds
dec
add
sub
mov
inc
test
cmp
pmulhuw
out
sti
sbb
xor
jnp
fnop
lret
clc
jl
xor
lods
jae
xorb
and
add
sub
cmp
lods
scas
or
adc
div
shll
sbb
mov
cmp
shl
cmp
xor
mov
xor
xchg
fidivrs
repnz
div
cmpl
sbb
imul
imull
in
push
and
adc
jae
xor
add
dec
ljmp
stos
mov
pop
cmpsl
loope
cmp
imul
arpl
xchg
xor
pop
fdivrl
sti
and
rcll
arpl
sbb
mov
xor
mov
sbbl
pop
dec
negl
movsl
mov
jbe
enter
mov
cmp
cmp
add
or
cmp
mov
fs
xchg
cmpsb
xor
sub
xchg
xchg
les
and
inc
or
insb
loope
sbbb
inc
rcll
jecxz
or
push
mov
cmp
out
cli
mov
scas
lds
ds
ljmp
mov
in
cli
icebp
cmpb
adc
popf
fwait
popf
xchg
add
inc
in
imul
fisubrl
repz
shl
mov
add
pusha
aas
jmp
jecxz
inc
xor
inc
xchg
mov
leave
dec
jb
pop
inc
ljmp
repz
xchg
push
jecxz
mov
lods
pushf
popf
and
jo
mov
enter
push
dec
or
dec
mov
cmp
sbb
hlt
push
dec
or
add
xchg
mov
mov
adc
outsl
adc
flds
sbb
xor
mov
lahf
lods
pop
dec
pop
not
xchg
out
jg
jne
pop
mov
mov
filds
call
lea
int3
mull
fstl
fldl
xchg
loopne
xchg
pushf
add
mov
jl
mov
aas
aam
cmc
sub
mov
into
or
sar
pusha
mov
lods
jmp
pop
sbb
or
inc
sub
mov
sub
mov
fcmovnu
inc
sub
xchg
fbld
push
push
adc
jb
jecxz
jmp
shll
jb
scas
jmp
pusha
xor
jp
loopne
inc
add
or
jmp
ror
add
push
inc
dec
bnd
and
aam
lock
pop
mov
inc
xor
fidivl
js
xchg
stc
add
lods
roll
cmp
lods
pop
sub
gs
loop
add
je
lret
or
loopne
cli
xchg
cmpsl
lea
pop
or
ljmp
dec
faddl
and
insb
cmp
sbb
adc
sbb
xchg
fs
sbb
xchg
inc
dec
and
sub
andb
sbb
fsubl
cmpsb
jecxz
rcll
sti
lcall
mov
mov
mov
push
enter
rcr
add
xor
jecxz
push
add
jle
je
sbb
mov
jo
scas
js
jno
cmp
lea
sub
and
dec
sbb
mov
int3
inc
push
scas
dec
orl
scas
test
adc
frstor
ja
lcall
mov
fwait
pop
test
arpl
cmp
out
mov
sub
inc
cvttps2pi
je
and
cmpsl
pop
test
gs
cli
cli
jae
cmp
mov
cmp
jecxz
mov
in
cmp
jmp
sbb
push
inc
jp
cmp
add
into
push
jb
cld
cmp
mov
loop
fisubl
imul
inc
loope
cmpsl
cmp
insl
jg
cltd
or
or
push
pop
push
loope
lods
and
enter
rorl
xor
std
mov
and
scas
adc
mov
pusha
or
mov
mov
and
and
int
cltd
ss
xor
in
mov
pop
pop
mov
les
dec
push
stos
add
adc
sbbb
aaa
jae
sbb
xor
pop
pop
pop
leave
mov
incl
cmp
insb
add
stc
out
add
or
fisubs
les
js
cmc
mov
mov
into
push
int3
pusha
jo
sub
sarb
pop
repnz
test
fs
push
imul
mov
lea
xchg
inc
sbb
repz
mov
push
and
inc
and
notb
pop
push
scas
rcll
sub
ret
jb
push
ja
push
aaa
pop
repz
lea
clc
or
mov
sub
test
sbb
sbb
pop
fstpl
add
arpl
je
jbe
stos
pop
mov
ret
fsubrs
dec
shlb
ljmp
push
cltd
mov
mov
pop
inc
lods
inc
test
xor
pop
subb
mov
imull
mov
imull
movsl
or
push
push
mov
stos
clc
aad
movsl
bound
jo
push
xor
jp
out
xchg
pushf
xchg
arpl
mov
shrb
fdivp
ret
outsl
shlb
jmp
inc
in
jp
clc
fidivrs
mov
out
das
jl
sbb
es
imul
outsl
mov
test
pop
mov
jae
pop
in
or
mov
cwtl
movsl
mov
sub
jp
jp
stos
nopl
aad
add
mov
or
cs
fsubrl
daa
sub
pop
cmp
mov
pusha
fdivs
fcomps
inc
ss
jo
scas
cltd
mov
stos
mov
rcr
mov
push
adc
mov
jecxz
xor
jb
loope
xor
mov
and
sub
adc
add
lcall
jp
dec
pop
jbe
jbe
jp
ficoms
repz
cmp
arpl
sbb
ficoml
movsb
cmp
mov
ret
movsb
sub
push
mov
xchg
xor
sub
sarl
out
pop
aas
nop
cmp
dec
adc
jae
in
pop
sbb
mov
iret
fcos
xchg
std
outsl
inc
test
in
or
sbb
fisubrs
scas
cmp
and
mov
out
stos
fisttps
xor
jns
lcall
sub
pop
dec
sbb
clc
movsl
jnp
movsl
and
jno
movsl
jb
pushf
mov
jle
cs
fwait
push
mov
rol
push
xchg
repnz
mov
outsl
jnp
imulb
mov
jl
aam
jecxz
adc
mov
inc
xor
popa
fisubrs
inc
mov
add
popa
xchg
in
fs
push
mov
clc
inc
push
mov
pop
sarl
int
jno
jge
mov
cs
test
idivb
push
xchg
out
xor
push
movsb
sbb
and
xchg
dec
cli
mov
xchg
lcall
pop
push
daa
cltd
or
les
xchg
daa
pushf
mov
lcall
jecxz
add
scas
or
sub
test
push
test
dec
cli
sub
mov
stos
inc
pop
and
jne
xchg
repz
xor
sahf
xor
inc
adc
jnp
test
push
outsb
add
ds
fs
int3
lods
rclb
xlat
mov
adc
testl
mov
jle
jmp
pop
adc
fwait
rorl
or
dec
fnstenv
xchg
mov
stos
fucomi
test
vmovaps
sub
inc
adc
add
pop
call
shr
pusha
xor
fistpl
repz
es
mov
push
aam
mov
fldenv
arpl
ljmp
mov
push
enter
xor
sbb
jle
jle
orb
pushf
sbb
sbb
push
jns
cmp
dec
into
push
pop
test
push
inc
rolb
inc
sub
mov
push
mov
and
jno
sub
sti
mov
push
call
lock
add
pop
xor
pop
dec
push
or
dec
xor
push
fmul
fistpl
imull
adcb
sbb
movsl
pushl
les
in
xor
fwait
or
stos
cltd
int3
enter
adc
out
call
decb
outsl
cmp
mov
dec
loope
push
add
lock
adc
rol
or
pop
out
test
sub
and
inc
cmpsl
stos
mov
addr16
or
sbb
xchg
mov
out
cwtl
lcall
jmp
cmp
pop
and
mov
and
dec
sub
sbb
and
inc
inc
loope
mov
push
add
scas
mov
push
add
xchg
ja
mov
or
pushf
das
test
into
lods
pop
cmp
repnz
pop
pusha
das
movsb
dec
out
mov
in
arpl
sbb
cld
outsl
pop
stos
aad
pop
add
test
dec
xor
dec
aam
push
cmp
js
jecxz
movsl
dec
clc
aad
aam
cmp
es
dec
fstl
cmp
lods
jb
stc
int3
sbb
cwtl
mov
aam
divl
dec
imul
ss
popa
lds
gs
imul
call
test
jnp
mov
jg
mulb
cmp
jno
outsl
push
or
aam
cmp
push
data16
stos
aas
sub
imul
test
pop
xor
jno
popf
roll
outsl
inc
cmp
pop
pop
cmp
pop
adc
lcall
sub
xchg
xchg
cmp
repnz
mov
cmp
and
adc
pop
jae
inc
dec
pop
in
or
popf
inc
dec
push
jb
out
or
push
sbb
orb
jns
inc
inc
outsl
sbb
add
in
push
int3
jo
les
pop
mov
scas
pop
mov
or
xorl
mov
in
notl
dec
mov
or
pop
scas
xchg
add
divl
rcll
and
out
mov
jns
mov
imul
adc
bound
push
pop
int3
pop
and
jg
inc
mov
in
cltd
xor
pop
jns
ljmp
imul
xchg
pop
push
jl
lods
and
inc
mov
mov
mov
jl
mov
cltd
fstl
in
movsl
fistl
repz
mov
rcll
push
arpl
push
and
xchg
xchg
ss
dec
arpl
imul
jb
sti
adc
pop
out
aam
jp
add
aam
movsl
cmp
mov
into
pop
adc
sbb
pop
dec
xchg
xlat
popf
add
fwait
rclb
sbb
sbb
inc
das
xchg
cmp
enter
shl
adc
out
sbb
sahf
inc
mov
loope
cmp
mov
loopne
mov
xlat
inc
out
loope
fisttpl
cmp
pop
out
mov
stos
mov
jl
insb
xchg
mov
in
adc
push
lock
loop
pop
jg
out
sub
ja
mov
rcll
and
push
jnp
inc
repz
and
cmp
mov
test
cmc
jg
call
jno
xor
incb
out
sub
js
add
jg
sbb
pop
rcr
pop
ljmp
rolb
xchg
imul
xchg
nop
jae
pop
in
xchg
call
sub
les
insb
jp
cmp
pop
pop
call
out
nop
enter
cmp
and
lock
ret
mov
movsl
daa
loop
cmp
fsubrs
jecxz
push
dec
test
fs
pop
xor
mov
sub
into
outsl
pop
xchg
sbb
roll
fwait
cmp
add
push
ret
mov
movsb
sti
mov
xchg
and
enter
into
pop
outsl
scas
es
jbe
mov
jb
sub
testb
pop
fsubrp
jbe
arpl
cld
mov
push
or
popf
lods
xor
dec
add
xor
ror
shll
cltd
jmp
mov
jmp
jg
fs
xchg
fisttps
loop
sti
pop
in
in
ljmp
movsl
lds
je
sbb
or
inc
aad
cli
outsl
call
out
in
cmpsl
and
adc
in
mov
outsb
and
mov
mov
loop
inc
in
nop
loop
cwtl
dec
sub
fiadds
pop
dec
dec
and
inc
pushl
ljmp
ret
shl
jecxz
iret
out
dec
jbe
cli
mov
iret
mov
scas
testb
in
hlt
adc
jle
daa
fnstcw
xchg
inc
and
adc
mov
in
es
cli
adc
xor
sbb
cld
mov
sub
adc
pop
pop
pop
mov
scas
xchg
sub
mov
mov
mov
test
sub
jge
sub
int3
cmpsl
jo
sub
sbb
insb
and
pop
dec
adc
mov
dec
cwtl
jnp
fdivrl
sub
xlat
add
pop
scas
and
enter
xor
js
sub
shlb
add
sbb
dec
fstpt
and
pop
fs
mov
dec
jns
xor
mov
pop
pop
popf
jl
push
insb
aas
xor
pop
sbb
pop
hlt
mov
adc
lods
fsub
adc
or
fsubs
hlt
mov
inc
mov
xchg
mov
cmpsb
push
add
mov
jge
clc
jnp
lods
push
std
mov
mov
sti
mov
sbb
es
aas
push
xchg
test
dec
inc
adc
fs
dec
xor
fcompl
loope
adc
movsb
push
outsb
shl
adc
cmp
fstps
sbb
aam
push
dec
cli
inc
std
sbb
mov
notb
sbb
push
test
cmc
out
sbbb
mov
ja
pop
jae
lods
inc
or
jns
sub
or
loopne
lret
mov
dec
cs
lcall
ret
iret
adc
fidivs
test
enter
mov
and
aas
inc
inc
fbld
int
ret
add
scas
cmpsl
outsb
imull
push
inc
arpl
je
adc
xor
push
outsl
dec
xor
test
push
cmp
mov
push
pop
lock
xchg
xchg
int
andb
jnp
sarb
pop
addr16
repz
inc
push
outsb
sti
es
add
jmp
popa
icebp
or
adcb
xchg
mov
jae
xlat
adc
sbb
cmp
push
insl
dec
sbbb
xchg
sub
add
adc
int3
xor
sub
cld
and
sbb
aad
pop
sub
jmp
jo
cs
addb
pusha
mov
iret
shll
add
xchg
in
pop
xor
aad
cld
xchg
jle
decb
add
nop
leave
test
mov
push
push
repz
or
pop
and
jnp
xchg
push
xchg
push
lret
cmp
add
arpl
cli
jae
sbb
jne
pop
xchg
fdivl
mov
pop
xchg
int
insl
or
xor
sbb
xchg
enter
xorl
or
dec
out
nop
idivl
mov
enter
xchg
bound
aad
clc
adc
data16
xchg
mov
xchg
dec
icebp
sarl
stos
lods
sub
scas
lcall
out
lock
jge
imul
jge
fsubrs
pop
stos
sar
sub
mov
dec
and
outsb
sub
push
jle
mov
xor
scas
pop
xlat
dec
inc
adc
xchg
out
cmpsb
fists
jns
cmp
gs
aam
fs
jb
dec
mov
rcr
ljmp
stc
in
lods
lret
lret
push
push
std
arpl
leave
pop
sahf
in
mov
pop
pop
fmull
xchg
add
mov
shr
mov
sbb
xor
lods
fst
and
aas
rorl
arpl
push
xchg
mov
mov
jae
pop
jno
push
std
aad
ret
sbb
imulb
sbb
push
and
ss
and
xchg
push
inc
loope
mov
pop
incb
add
jno
jae
idivl
movsl
inc
jne
unpcklps
cmp
jl
xchg
jns
sbb
imul
mov
popa
popf
inc
cs
fidivrs
mov
mov
adc
decb
mov
jae
mov
in
inc
insl
jge
mov
stos
shrb
stos
mov
add
xor
aas
xchg
mov
lahf
pop
xchg
ja
arpl
pop
fwait
popa
mov
insl
sub
imul
push
pop
add
es
add
cmp
movsl
xchg
insb
mov
inc
icebp
mov
sarb
fnstsw
insl
dec
push
inc
lds
lret
jl
test
sahf
push
popf
jge
ret
pop
fnstsw
mov
add
xorb
movsb
shr
mov
out
aad
outsb
outsb
rorl
shll
incl
inc
push
push
lock
out
insb
rcll
or
xor
and
mov
add
fimull
xchg
sub
push
ja
xor
mov
xlat
xor
stos
sub
ss
or
xchg
popa
ja
or
aas
inc
mov
pop
lea
leave
cmpsl
outsl
adc
push
fidivrs
push
sbb
inc
and
test
shrl
rcrb
mov
lods
pop
jne
xor
xchg
ljmp
fiadds
lret
push
bound
add
out
lcall
xor
jno
cmp
and
ds
lret
pop
pop
lret
bnd
jbe
mov
cmp
xchg
jp
es
sub
test
mov
push
mov
aad
jno
in
in
aam
fs
sti
pop
repnz
adc
and
inc
repz
inc
hlt
fnstcw
out
or
sbb
popa
and
and
js
adc
fimull
cmp
orb
add
dec
adc
sbb
xchg
xlat
pop
add
ret
data16
addr16
hlt
aad
cli
mov
cmpb
call
arpl
lock
jb
xchg
sbb
xchg
pop
pop
xlat
mov
sub
dec
jmp
pop
jmp
mov
mov
js
gs
adc
pop
xchg
int3
in
mov
js
lret
or
xchg
addr16
mov
fisubs
lcall
loope
pop
sbb
insb
add
int
int3
imull
iret
dec
mov
sbb
add
lret
test
out
mov
inc
popf
hlt
xchg
mov
xchg
mov
push
adc
fsubl
fwait
push
mov
cmc
jge
add
pop
sub
dec
cmp
add
cmp
stos
fistpl
stc
mov
call
sub
stos
fmuls
cmp
addl
or
pop
dec
cmp
imul
enter
mov
inc
lret
xor
sub
scas
adc
mov
nop
repz
sub
add
push
xchg
int
mov
add
adc
jbe
or
pop
addb
shr
daa
js
mov
test
pusha
out
repnz
ljmp
mov
or
addr16
mov
push
ljmp
leave
stc
cmp
js
push
outsl
sbb
insb
cmp
adc
push
and
imul
sub
rorb
jbe
sub
or
sub
dec
mov
jp
in
fcompl
neg
push
mov
xor
dec
mov
or
loop
push
pop
adc
fistl
inc
ljmp
hlt
sbb
jno
loope
xchg
xchg
push
or
mov
inc
pop
inc
outsl
jae
push
xor
push
lret
ret
pop
mov
fnstenv
add
jns
mov
pusha
push
adc
dec
lods
xlat
imul
call
repnz
enter
inc
negl
push
fwait
out
jbe
cmp
or
inc
popf
adc
test
incb
xor
loope
pop
hlt
jge
aaa
lea
jecxz
mov
dec
outsb
cld
jmp
or
ret
negb
inc
out
cmp
jmp
add
add
jnp
movsb
iret
aas
xchg
fmull
les
roll
xor
mov
inc
nop
pop
pop
aam
or
into
test
adc
clc
shll
jo
cld
push
sub
negb
cwtl
lcallw
and
std
in
cmp
je
lods
mov
mov
pop
mov
ljmp
mov
jbe
xchg
into
jp
lea
push
mov
test
aas
jns
popf
jmp
and
loopne
and
dec
in
cmp
or
mov
jp
stos
pop
adc
or
push
sahf
rep
pop
test
add
jno
xchg
scas
cltd
and
sub
push
jle
inc
jno
cltd
inc
fisttpl
stos
push
movsb
xchg
aas
sub
add
cmp
loope
imul
mov
jl
inc
xchg
pop
jp
xlat
sbb
mov
dec
lret
ljmp
sbb
lea
fnstenv
jmp
cmp
lock
hlt
shrb
xchg
pushf
test
cmp
insb
mov
pop
jl
std
mov
add
movsl
cmp
cld
cmp
push
jne
push
pop
jg
int
imul
ds
jmp
clc
aam
jnp
sbb
jno
cmpsl
test
dec
inc
test
scas
inc
out
lods
je
push
xchg
int
outsl
mov
sub
mov
incl
jno
jno
jne
xor
adc
rclb
or
sbb
push
xchg
jmp
mov
repnz
and
ljmp
roll
sbb
or
fdivp
iret
rcrb
mov
pop
inc
xchg
cli
fwait
sub
daa
pushf
mov
aam
lret
hlt
xchg
lahf
test
mov
fldenv
sti
inc
mov
push
fwait
movsl
in
cmp
lret
xchg
mov
mov
stc
xchg
mov
movsb
inc
mov
jae
lret
ja
and
xlat
fcomps
fcmove
leave
adc
icebp
push
push
dec
jo
xor
arpl
and
xchg
push
out
rorl
xor
sub
cmp
jnp
cli
lcall
repnz
cmp
das
push
xchg
aad
out
xchg
xor
xlat
xchg
push
push
fidivs
fistps
inc
xlat
lds
jae
lcall
sahf
push
sbb
mov
rcrb
mov
icebp
data16
xchg
adc
fisttpll
call
loop
xrelease
xchg
test
into
sbb
sbb
in
push
es
int3
jg
push
push
cmpsb
pop
fistpl
xor
cmc
repz
testl
xor
mov
pusha
ja
mov
xchg
in
jb
iret
pop
push
movsb
ljmp
push
inc
xchg
orb
xor
inc
push
stos
adc
xor
jne
inc
arpl
push
ljmp
pop
add
cltd
cmp
enter
and
adc
inc
mov
push
and
xlat
inc
out
test
pop
inc
push
popf
shlb
push
das
push
mov
cmp
bound
mov
inc
nop
pop
pop
popa
mov
push
cltd
push
out
divl
jne
movd
js
cmpl
xchg
mov
int
pushf
pop
dec
test
inc
shrb
out
and
mov
aaa
sub
call
pop
fs
imulb
nop
mov
test
pop
xlat
std
xchg
push
push
cltd
fsubr
sti
bnd
pop
cmp
stos
bndstx
adc
rcrb
xchg
dec
in
inc
mov
push
mov
cmp
jp
and
lret
out
imul
add
outsb
fstpt
dec
inc
arpl
dec
or
mov
dec
push
cmpl
in
insb
loopne
stos
mov
mov
int3
adc
cmp
mov
movsl
xchg
aaa
sbb
cmp
inc
xchg
sub
jp
cmc
mov
sbb
hlt
popf
je
or
arpl
mov
or
dec
test
or
mov
mov
imul
jecxz
mov
cmp
pop
pop
jbe
sarb
rcr
orb
push
sti
icebp
sub
addr16
les
pop
bound
decb
movsb
imul
or
jnp
pop
mov
cmp
out
pop
dec
xor
shr
cmp
inc
push
sub
ljmp
test
test
pop
lret
xor
in
mov
lods
push
pop
ror
push
call
rclb
std
sub
sub
dec
dec
xchg
lods
divl
pusha
mov
andb
lcall
out
cmpsb
sbb
js
pop
daa
sahf
into
push
add
bnd
inc
gs
popf
and
add
xor
fstp
mov
aaa
clc
push
jnp
jns
loopne
aad
cmp
mov
mov
jecxz
imul
out
in
adc
mov
arpl
sub
and
xorb
cmp
shl
cli
cmpsb
xchg
mov
xchg
cmp
or
shl
mov
movsb
add
sbb
add
mov
les
xchg
sbb
inc
andl
adc
lcall
add
xor
xor
stc
dec
stc
leave
shrl
jo
xchg
fistps
rclb
dec
das
pop
jbe
decl
insb
arpl
imul
lret
sbb
shl
mov
arpl
rorb
cmc
dec
dec
cmp
xor
nop
mov
xor
aad
hlt
loop
inc
mov
dec
xor
enter
dec
and
jns
push
inc
push
sbbb
orl
pop
dec
popf
xor
inc
adc
in
ret
in
dec
inc
jb
daa
scas
int3
shll
cld
inc
xchg
add
inc
scas
rcl
mov
pop
cmp
cmp
push
rcl
push
jo
mov
cmp
popa
push
mov
ret
mov
shrb
call
xchg
lock
and
mov
pop
push
ret
sti
aam
jl
adc
sub
sahf
sahf
or
sbb
mov
fwait
push
dec
ret
das
add
jp
cltd
incb
or
popa
pop
jg
adc
push
ds
xchg
mov
pop
pop
arpl
stc
cs
dec
and
aam
stos
in
mov
pop
dec
sub
jp
and
stos
imul
loopne
shll
mov
push
repnz
dec
test
out
sub
cltd
ds
in
jp
shlb
or
jbe
xchg
nop
outsb
adc
or
jbe
loop
into
cli
pop
jo
or
data16
scas
scas
push
mov
sbb
push
loopne
pop
push
popl
jbe
test
adc
out
fsts
sub
and
jl,pn
inc
out
lahf
mov
lock
cmp
into
scas
and
sub
cmp
xor
imul
cwtl
negb
in
insb
dec
out
mov
mov
stc
stc
sbb
addr16
fwait
xor
xor
and
shrl
sbb
inc
and
push
adc
cmpsl
lods
fwait
jecxz
jne
subb
clc
jl
sbb
dec
sbb
bound
mov
push
xor
imul
jecxz
and
in
push
iret
movsb
repnz
jno
lret
cmp
cmpsb
cltd
jge
data16
push
mov
mov
xchg
jns
lock
cmp
push
jle
push
mov
lock
xchg
fwait
adc
cmc
stc
mov
mov
movsb
cld
in
xchg
xor
jae
or
lahf
arpl
mov
mov
adc
mov
adc
mov
and
pop
cld
stc
or
xchg
sqrtps
push
pop
and
pop
mov
ret
inc
or
xchg
ja
mov
and
lods
mov
sti
dec
adcl
push
and
fstpt
cld
imul
push
hlt
cmpsl
sbb
mov
int3
shll
stos
ret
fldenv
sarl
bound
lock
xor
lahf
push
mov
push
add
mov
or
mov
scas
pop
aaa
pop
in
shlb
xor
movsb
out
mov
mov
rorl
and
shlb
pop
insl
movsl
pop
incb
mov
shll
icebp
mov
xor
and
ret
movsl
out
add
mov
out
mov
jmp
fnsave
dec
mov
and
push
xchg
sbb
cld
dec
das
imul
and
andl
cmp
pusha
lods
dec
pop
mov
jmp
add
rcll
cs
mov
cmp
xchg
xchg
dec
xchg
mov
xchg
iret
pop
cmpsb
movsb
push
cwtl
cs
or
adc
imul
mov
imul
inc
mov
inc
adc
aam
mov
jge
enter
and
movsb
sbb
or
dec
imul
outsb
pop
pop
aas
scas
mov
mov
add
movsl
xchg
xlat
lcall
hlt
add
jne
roll
jae
pop
fucomi
mov
inc
mov
lahf
dec
arpl
int3
data16
imul
movsl
and
mov
pop
and
test
lds
add
aam
mov
pop
jmp
mov
mov
shlb
xchg
fsubl
push
into
jb
repnz
sbbl
popf
cmpsl
mov
inc
xchg
jo
rclb
xchg
or
ja
fisttps
mov
dec
lock
xchg
mov
add
enter
dec
jno
pusha
mov
dec
adc
scas
lods
fdivs
adc
mov
loop
es
nop
mov
shrb
mov
cmp
xor
push
sbb
sbb
mov
stc
in
mov
cmp
and
xchg
add
sub
jp
add
push
sbb
pop
xchg
jns
jne
xchg
push
sub
xor
lds
loopew
add
cmp
cld
xchg
sahf
jbe
dec
jnp
mov
mov
pop
xchg
cwtl
cltd
ret
xor
adc
fbstp
aad
cli
enter
xor
sbb
mov
cmp
push
hlt
xchg
fdivrl
hlt
repnz
in
or
mov
push
inc
jnp
jecxz
or
lret
xchg
push
xor
daa
jnp
rcrb
adc
mov
pop
xor
test
sti
cmpl
pop
dec
add
movsb
int3
jae
into
add
mov
lea
lock
xchg
adc
push
sbb
gs
or
adc
dec
mov
add
sbb
and
into
sbb
fldt
test
or
jp
movsl
movsb
insl
mov
cwtl
out
fsubr
lds
adc
jmp
or
je
pushf
xor
nop
push
sub
sti
mov
xor
int
and
xchg
stos
out
aas
pusha
lahf
pop
nop
lods
mov
fcomps
mov
xor
inc
je
sarl
andb
push
enter
lret
ret
enter
insl
and
inc
addr16
inc
loop
jmp
push
hlt
add
stc
cwtl
xor
sahf
jl
and
sbb
xorl
inc
adc
repz
mov
insl
loopne
sbb
das
cltd
push
push
or
js
dec
add
repz
stc
mov
mov
lea
cwtl
jecxz
add
jge
hlt
jae
aad
lea
xchg
imul
push
jbe
adc
in
jnp
popf
in
adc
pop
repz
xchg
or
call
push
orl
insl
sti
fwait
rcll
mov
loopne
aam
and
mov
push
loopne
pop
lret
inc
jle
jp
sahf
dec
fists
insb
fadd
mov
mov
or
out
cltd
ja
frstor
mull
adc
add
pop
fisttpl
jmp
pusha
jle
scas
out
mull
sbb
sub
scas
mov
xor
jnp
sub
or
gs
rcll
cs
mov
out
imulb
enter
or
and
sbb
xchg
push
dec
jo
push
shlb
rol
fbld
sbb
jge
mov
and
movsb
lds
mov
imull
and
pop
add
sub
ja
mov
xchg
sub
out
push
addl
or
mov
icebp
pop
mov
xor
int3
clc
mov
test
mov
dec
dec
sub
adc
mov
jle
shll
cltd
push
mov
into
pop
cmp
jbe
imul
mov
push
sarb
popf
in
lret
lods
mov
lahf
lds
pandn
insl
ret
push
dec
cmpsl
add
cli
pop
mov
sbb
fsubs
jge
inc
lds
xor
fxch
js
int
inc
out
and
sub
dec
xlat
lods
xchg
mov
cli
dec
jecxz
jmp
test
dec
pushf
out
aad
mov
push
jl
out
cwtl
sbb
dec
xchg
popf
sub
and
inc
push
or
push
js
push
or
or
jns
pop
dec
cmp
aaa
sbb
in
das
mov
xchg
mov
mov
insl
xchg
xchg
cwtl
cmc
push
add
pop
loop
sbb
aas
loope
les
pop
and
mov
in
cmp
in
mov
test
pop
pusha
loopne
iret
imul
pusha
and
inc
sub
out
dec
rol
pop
mov
bound
sahf
imul
mov
ljmp
gs
xchg
lods
cltd
not
jg
mov
mov
nop
sub
rcll
out
inc
fdivrs
lods
insl
lret
sbb
xlat
and
or
mov
popa
aas
xlat
les
in
shlb
js
xlat
mov
ret
shll
push
xchg
xor
sbb
jb
jns
in
scas
imul
dec
push
add
loop
dec
sbb
arpl
jae
fwait
pop
rcll
loopne
pop
bound
in
or
inc
and
imul
movsl
dec
inc
imul
into
and
aas
scas
cmpl
cmp
mov
pop
jns
int3
insl
repz
inc
add
aad
das
jbe
and
mov
pop
jo
fstl
loopne
stos
adc
jmp
mov
mov
cli
testb
jp
daa
xor
icebp
xor
stc
xor
dec
dec
mov
xchg
cltd
ret
mov
mov
sti
pop
addb
fisubs
and
jb
hlt
lods
push
xorb
dec
andl
rclb
push
push
mov
lret
loop
in
stc
mov
xchg
add
dec
stos
sub
outsb
idivb
mov
sub
out
std
dec
pusha
in
ficomps
xchg
lods
sub
or
pop
sti
stc
adc
sti
adc
movsl
jns
add
jbe
orb
cld
mov
inc
xchg
inc
mov
not
shrb
test
fwait
iret
ja
mov
ret
or
jg
fdivr
push
add
jl
or
xchg
sub
push
shl
inc
mov
cmpsl
xchg
fnstsw
mov
or
in
jae
pop
xchg
js
ss
loope
icebp
shlb
adc
je
inc
mov
mov
or
fldt
jp
dec
test
inc
sbbl
xchg
sti
sub
push
int
xchg
hlt
push
sub
icebp
sub
in
mov
jle
jbe
push
mov
inc
add
das
mov
pop
mov
movsl
jne
test
enter
rcl
add
xor
mov
fsubp
outsl
fisttpl
loop
aaa
xchg
sub
push
and
test
sahf
nop
or
repz
jg
xchg
pusha
xchg
jb
mov
or
sahf
or
xor
ret
adc
inc
add
sub
pop
addr16
popf
add
addb
enter
mov
out
out
sub
mov
and
jae
aad
lret
lods
sbb
movsb
push
cli
stos
sarb
mov
xchg
jns
pop
in
jl
mov
xor
mov
sub
aam
loope
in
push
lock
call
add
mov
in
fmuls
daa
loop
pop
xchg
mov
sub
cld
sahf
fstpl
push
pop
and
or
sti
xor
nop
mov
out
sbb
push
popf
or
adc
or
or
jae
cmpsl
mov
cmp
shll
fwait
ljmp
dec
adc
es
lret
rorb
fucomi
jbe
out
jl
hlt
pop
movsl
push
and
jecxz
jb
dec
insl
stos
ss
jae
mov
sbb
push
addr16
daa
jb
mov
inc
iret
pushf
sub
mov
add
in
and
adc
adc
inc
in
mov
pusha
jo
popf
shl
cli
or
lcall
fldt
push
mov
movb
icebp
and
jbe
fwait
testb
xchg
cmp
fwait
adc
adc
rol
andb
lock
ret
repz
jmp
ljmp
lock
xor
sbb
adc
or
int
movsb
test
push
mov
lds
xor
mov
das
test
imul
pop
subb
pop
xchg
repnz
jbe
aas
and
fcompl
cltd
push
cmpsl
pushf
fmul
pop
mov
out
mov
test
pop
fisttpl
inc
cltd
outsl
adc
dec
out
test
jae
out
mov
and
sub
mov
icebp
in
in
xchg
cmpsb
mov
sarb
push
lret
pop
cmp
push
scas
mov
out
mov
mov
mov
bound
bnd
stos
cmp
sub
adc
xor
pop
jmp
fistl
xchg
test
pop
mov
xlat
push
bnd
in
pop
les
mov
xchg
pop
sub
int
cltd
and
cmpsl
inc
arpl
sbb
pop
and
adc
fsubrp
xchg
push
mov
jl
jmp
lahf
inc
loopne
test
push
push
dec
or
pop
mov
std
jecxz
mov
dec
ret
addb
movb
and
divb
shl
je
clc
cmp
pop
xchg
ja
data16
fistpll
jle
in
jbe
mov
nop
mov
dec
adc
in
mov
dec
mov
cltd
cmp
mov
test
addb
adc
mov
xlat
sub
mov
lahf
jge
push
jge
pusha
fidivrs
mov
push
testl
pop
in
push
cmp
dec
or
subb
fimuls
cld
sbb
rclb
aaa
fadd
fisubrs
cld
fdivp
sub
dec
pop
push
jo
push
in
ret
dec
in
mov
in
cmp
outsl
mov
and
jns
int3
cmp
push
lock
fsts
jecxz
fucomp
in
add
aam
xlat
xor
push
je
insl
arpl
es
stc
mov
notl
dec
lret
fimuls
adc
dec
sub
mov
aas
sub
imul
push
in
xchg
repz
dec
std
pop
subl
sbb
or
inc
jl
mov
shrb
nop
mov
mov
xor
mov
outsl
and
fisubrl
or
jmp
das
sub
imull
and
sbb
shll
mov
aaa
test
loopne
lods
pop
pop
jb
jno
push
xor
ret
or
test
mov
sbb
andl
fisttpll
in
fcoms
lea
xchg
push
mov
ret
inc
or
dec
fcmovnbe
nop
pop
adc
dec
jp
xchg
cmp
cmp
imul
mov
arpl
push
xchg
mov
call
inc
cmc
cmp
sbb
mov
icebp
test
enter
into
andl
jmp
outsb
sub
aas
ja
test
add
and
pop
ljmp
cmp
xor
lea
inc
push
shl
in
jnp
sub
cmp
adc
adc
push
pop
int3
push
jp
mov
leave
std
sbb
push
push
das
push
dec
sub
jns
sbb
fmuls
loope
cmp
push
popa
jmp
aam
aas
mov
mov
insb
mov
cmp
arpl
mov
leave
clc
pop
push
cmp
fs
xchg
or
out
pop
loop
xor
mov
fnstcw
fsubp
cwtl
fildl
sbb
loopne
addb
imul
mov
add
into
fidivrs
imull
jae
hlt
xchg
in
cltd
cmp
decl
add
mov
in
loop
or
inc
dec
loopne
pusha
jmp
push
sub
and
push
arpl
cmpsb
jb
nop
push
mov
mov
hlt
jecxz
mov
mov
popf
pop
jl
inc
sbb
add
int
pop
outsl
inc
or
sub
shlb
mov
push
outsl
fcoms
icebp
inc
push
add
out
cmp
inc
inc
dec
aas
jecxz
adc
imul
pop
test
jp
imul
jp
xor
add
dec
out
nop
int
inc
insl
out
sbb
sub
cmp
lods
movsb
jb
mov
adc
dec
faddl
push
jecxz
stc
push
not
in
mov
insb
cmpsb
sub
mov
pop
push
fnstcw
stc
je
pop
mov
cmp
mov
inc
adc
xchg
add
aad
shr
xchg
xor
pop
and
lret
mov
adc
cli
pop
cmp
ss
xchg
lods
mov
test
mov
in
out
lcall
cltd
icebp
iret
mov
cmpl
call
mov
dec
mov
mov
add
out
or
clc
sbb
mov
imul
mov
test
rolb
clc
xchg
sub
cmp
addb
push
pusha
mov
dec
idivl
pop
xchg
cltd
xchg
in
ret
and
fnstsw
scas
mov
lea
jne
decl
in
jno
dec
push
idivl
inc
cs
aas
pop
push
xchg
sbb
cltd
push
into
daa
popf
adc
fdivr
hlt
pop
lcall
xchg
xchg
cmc
rol
mov
aad
into
cmc
fldt
movsl
cltd
and
cmp
mov
rcrb
sbb
pop
jecxz
xchg
test
dec
or
lret
out
dec
dec
cwtl
dec
cld
mov
xchg
and
cmpsb
add
xchg
push
leave
jle
mov
push
inc
cmpsl
mov
frstor
ds
cli
mov
imul
jg
leave
das
xchg
fdivl
into
popa
out
sbb
dec
fcomps
cs
mov
and
in
add
idiv
arpl
pop
loope
xor
mov
rolb
lret
fs
repnz
aad
sbb
es
adc
xor
ja
lea
adc
dec
inc
pop
aas
sbb
mov
cmp
mov
subl
lret
bound
xor
orl
mov
mov
pop
jmp
cmc
in
pop
or
jmp
xor
lret
mov
mov
mov
inc
lock
cmp
add
and
mov
fnstenv
sbbb
cmp
fisttpll
rorb
imul
push
ret
imulb
cld
push
xor
insl
mov
stos
ss
xor
inc
push
add
mov
out
jo
sub
ficomps
jno
fldcw
fcmovnu
xchg
shlb
jb
mov
mov
out
add
push
filds
rol
pop
movsl
gs
stos
bound
push
and
or
mov
push
hlt
movsl
add
mov
push
fs
cltd
cmp
jecxz
mov
fnstsw
das
stos
mov
in
mov
shll
pop
cmp
std
stos
lods
fimuls
cmp
sub
add
addr16
orl
sub
push
daa
sbb
stos
lahf
push
in
int
lods
xor
sbb
loop
int
cli
cmp
fsubrl
in
push
mov
xlat
cmc
mov
sbb
sbb
std
jne
imul
pop
out
idivb
fnop
gs
sti
xor
cmc
or
decb
or
xchg
push
xchg
inc
sbb
lds
aam
or
push
int
mov
mov
push
lahf
iret
enter
xchg
fs
add
xor
and
add
outsl
lret
inc
ljmp
nop
popf
cli
xor
mov
or
xchg
lahf
or
pop
pop
mov
jno
lcall
mov
repz
xor
mov
push
and
inc
divl
scas
add
pop
xchg
imul
mov
imul
punpckldq
daa
gs
cwtl
jmp
or
pop
int
jle
dec
dec
repnz
push
pop
hlt
mov
xchg
xor
pop
loope
and
add
fiaddl
test
cwtl
pop
inc
jecxz
cmp
pop
dec
ja
xchg
nop
xor
sarb
test
and
mov
imul
xor
call
adc
pop
ljmp
xor
mov
ja
insb
ds
outsl
mov
repz
insb
mov
jle
movsl
mov
push
mov
shll
mull
push
mov
fwait
inc
imul
mov
mov
mov
jl
dec
pop
lahf
divl
inc
std
and
outsl
test
icebp
ss
dec
mov
adc
insl
notl
push
sub
inc
mov
ret
test
movsl
imul
rcrl
and
jo
into
je
cltd
lock
xchg
cs
adc
add
sub
dec
xchg
negb
out
cld
cltd
aaa
xchg
pop
and
aam
mov
xchg
cs
fmulp
adc
push
sub
cli
imul
ret
cmpsb
pop
jae
dec
fdivrs
jne
std
mov
cmp
data16
jbe
imul
push
or
aaa
in
pop
dec
dec
xchg
sub
adc
popf
lea
test
pop
sbb
jae
lahf
mov
jmp
imull
and
es
adc
jne
cmp
cmp
adc
and
fcmovb
cwtl
clc
lods
out
testl
inc
insl
mov
sti
cmpsb
jg
xor
mov
mov
loopne
mov
jno
and
inc
jbe
int3
push
ss
or
je
incb
inc
sbbb
dec
xor
dec
out
and
cmp
mov
mov
orl
hlt
pop
push
push
test
sub
push
popf
orb
inc
out
hlt
cmpsl
jo
xchg
and
clc
sti
inc
cli
ret
addb
and
xor
adc
out
cltd
clc
sub
dec
adc
dec
mov
lcall
xchg
jge,pn
lret
repnz
rcrl
shrb
pop
ds
jecxz
xor
shrl
fimuls
lea
fscale
jmp
pop
popf
lret
test
and
xchg
ljmp
add
push
inc
lods
cltd
sar
adc
scas
movsb
jns
sbb
lahf
les
cmpsb
mov
imul
dec
dec
outsl
adc
movsl
bnd
outsl
push
addl
stos
xor
pop
jns
std
subb
sbbl
mov
sti
dec
sbb
outsl
and
cmpsl
ds
jl
mov
in
testb
and
sahf
cmpl
mov
inc
mov
shl
ror
dec
mov
repz
cld
imul
pop
adc
sub
and
push
or
cld
sub
rcl
std
inc
mov
adc
inc
xchg
mov
subb
stos
add
pusha
mov
fnstsw
inc
popa
stc
push
jne
sub
mov
out
leave
daa
loopne
adc
pop
cmp
leave
aaa
cltd
mov
out
xor
cmp
pusha
ljmp
shll
pop
stos
xlat
bnd
in
nop
xchg
mov
mov
push
or
sub
idiv
jbe
mov
pusha
lcall
mov
adc
imul
nop
mov
ja
cmp
pop
mov
xlat
adc
mov
jecxz
outsl
lock
cmpsl
pusha
xor
imulb
add
mov
scas
mov
sbb
cld
ficoml
cmpsb
and
addr16
xor
repz
cld
mov
mov
mov
adc
movsb
lahf
adc
sub
pop
leave
jmp
loop
test
ss
or
mov
jne
sti
inc
dec
int
or
imul
js
dec
es
jg
pushf
popa
mov
pop
and
dec
lret
inc
loopne
mov
fcompl
sbb
sub
fadds
mov
jns
xchg
sbb
xchg
adc
in
push
fcmovnu
sti
je
sub
add
stos
xchg
stos
mov
fwait
cmp
inc
jge
in
add
sub
jecxz
fnstsw
adc
cmpsb
and
xchg
inc
cmc
push
mov
mov
notl
int
les
sub
xchg
ds
pushf
test
xchg
xchg
or
or
mov
push
in
pop
shlb
pop
and
cmpsl
mov
push
fiaddl
fildll
incb
xor
pop
scas
out
testb
inc
ret
inc
mov
pop
mov
mov
insb
mov
jo
inc
xchg
pop
int
into
xchg
mov
add
bound
outsb
fneni(8087
jo
pusha
sti
xlat
sub
inc
lds
ljmp
inc
cmp
jecxz
pushf
cmp
mov
or
jmp
pop
andl
ds
or
mov
enter
jp
push
jns
pop
je
mov
push
aad
xchg
cs
flds
inc
cmp
cmpsl
nop
fucomi
and
or
aas
test
lretw
int
mov
inc
sub
push
add
mov
sti
imul
mov
push
mov
lock
sbb
test
inc
sbb
add
and
loope
sub
insl
dec
rclb
pop
in
repz
nop
mov
daa
daa
lret
mov
mov
fldl
pop
scas
aaa
jg
imul
imul
stos
lea
popa
mov
ja
jmp
and
and
lods
xchg
cs
fldl
das
test
sub
leave
js
pop
xchg
lret
pop
out
xor
test
cmp
cltd
sub
lret
pop
test
mov
mov
adcb
loopne
lds
ss
cmpsb
adc
ss
pop
pusha
lods
cmp
ljmp
inc
outsb
push
lahf
lcall
sub
arpl
imulb
mov
inc
sub
xchg
xor
out
inc
cld
xor
xor
icebp
push
push
inc
cs
xchg
jecxz
cwtl
jp
hlt
mov
fwait
call
or
jecxz
gs
dec
mov
add
mov
add
dec
sub
mov
daa
outsl
ror
adc
repnz
add
cmpsl
les
xchg
mov
fcoml
insb
imul
jl
test
imul
mov
rclb
pop
or
dec
push
jne
xor
jl
inc
hlt
jnp
cmp
adc
pop
xchg
lret
stos
pop
jae
sub
or
mov
xor
cmp
and
ret
fsubs
xchg
outsl
add
adc
xchg
xchg
xor
cmpsl
add
pop
or
popf
cmp
mul
fiadds
cmp
sub
bound
mov
adc
test
jl
lcall
pop
shll
test
inc
or
jb
in
mov
shl
cmpsb
adc
les
cmp
lret
fnstenv
dec
mov
cmp
pop
sub
pop
mov
cli
movsb
jne
xorb
int3
mov
sbb
mov
inc
jg
paddsw
xor
scas
sbb
mov
int3
in
sub
mov
loope
fidivrl
mov
lea
outsl
jne
dec
adc
xchg
and
jmp
loopne
in
ret
push
adc
test
mov
inc
and
sub
cmp
dec
pop
mov
leave
mov
pop
pop
stos
repz
std
out
pusha
and
xchg
cmc
pop
xchg
cmp
sbb
mov
sbb
pop
outsl
mov
push
push
cli
cmp
mov
ja
movsl
subl
or
out
add
cld
mov
test
xchg
jbe
rcl
fs
push
sbb
out
inc
jbe
mov
jmp
arpl
pop
cli
jecxz
dec
sar
adc
nop
pop
ret
push
push
push
mov
nop
jg
scas
or
xor
adc
aas
cmp
pop
data16
jle
dec
into
sbb
fs
inc
mov
sbb
xchg
xchg
jno
or
mov
imul
dec
xor
iret
add
cwtl
and
push
addr16
add
ja
test
push
stc
pop
mov
inc
dec
lahf
stc
in
jmp
insb
ret
ss
stc
xchg
aaa
ja
sbb
push
inc
xchg
pusha
xchg
insb
inc
cmp
repz
enter
xchg
xchg
push
addr16
fdivrl
inc
adc
mov
jle
test
loopne
xor
or
adc
and
xchg
gs
sub
fnstenv
cmc
sub
or
mov
sti
aas
jne
das
lcall
sub
push
in
push
push
cmp
pop
and
inc
loopne
pop
jge
andb
enter
mov
jmp
imul
dec
inc
sub
stos
fisttpll
sbb
iret
hlt
xchg
popa
or
pop
adc
lods
and
cmp
movsl
ljmp
and
mov
lock
push
fiaddl
fwait
push
jbe
ss
mov
icebp
das
mov
lds
xor
aam
popf
fsubl
rcr
sahf
pop
lock
lods
outsl
fstpt
lods
dec
movsl
add
dec
stos
fstpl
popa
in
call
xchg
pop
cmp
cmc
jnp
or
aad
and
mov
sahf
int3
out
bound
mov
pop
mov
jp
icebp
sti
int
mov
push
mov
sub
add
jmp
outsb
pop
call
push
aas
sub
mov
inc
push
inc
repnz
xchg
jb
loope
inc
outsb
out
enter
nop
mov
jp
pop
shrb
fcoml
adc
pop
xor
fsubl
and
mov
imul
adc
xlat
leave
jl
bound
pop
movsl
sahf
scas
fadds
add
and
inc
int3
sbb
dec
por
cli
andl
mov
idiv
mov
sub
pop
or
and
cwtl
loop
push
mov
xchg
cltd
je
ljmp
lcall
xor
mov
inc
push
lods
push
sub
inc
fmuls
push
jl
mov
sbb
jmp
fidivl
xor
push
jae
dec
mov
dec
lods
xchg
mov
stos
adc
imul
mov
test
scas
and
mov
sub
xor
jl
cmp
sbb
lahf
loopne
sub
push
push
xorl
out
or
orb
movsl
cmp
ficoms
jmp
fnstsw
arpl
push
add
in
add
and
and
inc
xor
shll
sub
cmp
shl
mov
fwait
cmp
push
pop
aam
mov
xchg
push
or
pusha
pop
pop
mov
scas
mov
dec
xchg
ss
ret
mov
pushf
push
jo
insb
sti
inc
aam
push
mov
nop
inc
lods
outsl
mov
pop
and
nop
imul
fptan
pop
pusha
sub
test
lea
jns
std
xchg
lahf
pop
cli
push
xchg
jmp
lahf
cmp
push
into
mov
out
scas
push
xchg
pop
cmpl
insl
stos
fwait
shrl
adc
sar
jmp
mov
or
add
loopne
dec
scas
or
in
sub
xchg
pop
mov
les
xchg
cmp
inc
add
dec
pop
aam
aam
stc
cltd
push
mov
and
mov
xchg
fucom
xchg
jmp
pop
and
mov
rcr
mov
or
stc
sbb
insb
popa
jl
jnp
movnti
fs
fsub
pop
int
sbb
fcmovu
shl
mov
addr16
insb
mov
mov
lret
add
repnz
cmp
push
add
cmp
arpl
in
dec
mov
out
lods
iret
in
xchg
pop
cmc
lods
inc
push
dec
outsl
pop
test
mov
and
add
in
cli
inc
in
pop
fnstcw
xor
sbb
and
imul
nop
negl
push
call
imul
xlat
repnz
mov
jbe
out
xchg
ss
mov
jnp
and
test
mov
and
es
dec
mov
push
cld
xchg
cli
mov
out
xchg
sbb
jmp
loopne
movsl
loope
jle
and
ljmp
pop
xchg
jno
lret
lods
insb
or
outsl
arpl
and
mov
push
mov
popl
icebp
inc
xor
mov
cli
push
cli
sti
inc
push
and
mov
movsb
xchg
out
push
inc
sub
lea
and
scas
les
lret
cmp
or
lahf
fcmovne
in
movb
xchg
stos
pop
mov
out
mov
sbb
out
inc
data16
std
dec
shll
add
inc
stos
stc
xchg
xor
jbe
out
scas
jno
fiaddl
or
mov
inc
insb
xor
cld
daa
push
arpl
data16
pop
jge
add
cmp
mov
repz
mov
test
dec
sbb
je
lret
jmp
sub
pop
sarb
sti
fistpl
xchg
stc
sbb
sbb
aam
mov
xchg
inc
insl
lods
push
mov
xlat
lahf
xchg
push
gs
dec
inc
jo
ds
mov
cmpsb
lods
and
mov
mov
mov
or
cmp
jnp
dec
pop
xchg
mov
les
mov
sbb
lods
add
cltd
pop
xor
xchg
cmp
fnstsw
or
repnz
shl
push
sbb
lods
or
jp
cs
outsb
lock
insl
xchg
in
dec
std
cmp
cmp
mov
xlat
add
pop
stos
sti
mov
or
clc
mov
or
lods
nop
pop
dec
popl
or
adc
sub
cwtl
mov
das
in
mov
sahf
sarl
add
in
push
cmp
sbb
iret
out
dec
arpl
fisttps
lods
ja
inc
ljmp
add
lea
and
or
inc
mov
push
add
out
fistps
cmp
leave
leave
shlb
fildl
pop
dec
in
mov
mov
inc
mov
inc
mov
cmpsb
pop
lret
add
pop
push
adc
pushf
adc
push
movsl
cmp
cmp
lcall
out
xor
fdivrs
shrl
or
les
outsb
adc
shll
lret
push
pop
push
fcoml
add
cmp
shll
push
adc
dec
xchg
mov
jmp
push
nop
add
nop
dec
loopne
mov
aas
add
mov
mov
push
sbbl
shl
mov
cmp
imul
insl
das
lcall
pop
mov
test
lea
or
and
shlb
pushf
mov
cmp
adc
cmpsl
int3
mov
mov
mov
repz
mov
arpl
xchg
dec
es
dec
bound
fs
stos
fistl
add
jns
fnstenv
loope
add
jb
mov
cmpsl
and
jno
adc
xchg
mov
insl
enter
jg
out
loop
lret
adc
repz
pop
adc
lahf
cmp
inc
loope
mov
arpl
lahf
mov
add
mov
sub
cmp
inc
mov
fildll
xchg
cwtl
jns
pop
push
out
cmpl
lods
andb
push
push
andb
mov
cmp
test
or
push
clc
or
scas
mov
push
mov
xchg
cmpsb
mov
inc
roll
rcr
leave
jmp
jae
pop
add
sbb
jge
test
lods
nop
data16
jae
mov
stc
lds
fucomp
int
or
test
adc
sti
jle
inc
xorb
cmp
dec
lcall
inc
outsl
js
lcall
mov
cld
pop
lret
ja
jb
jmp
test
jns
cmp
jmp
add
fldt
outsb
lret
pop
in
repnz
insb
daa
cmc
mov
mov
pop
xor
addr16
jle
or
ljmp
mov
jo
cltd
xchg
dec
jno
inc
adcb
fucomip
ljmp
add
jp
pop
loope
fidivl
scas
dec
fsubl
and
cmp
and
ds
out
lods
ss
mov
mov
push
sub
pop
sub
adc
mov
lcall
xchg
movsl
aad
fwait
push
cmpsb
test
clc
inc
mov
sub
hlt
mov
cwtl
out
xlat
ljmp
mov
cld
clc
shrb
push
clc
lahf
sub
repnz
fs
lcall
add
mov
xlat
fst
dec
xlat
push
and
and
adc
in
cmpsb
mov
incl
or
ds
or
scas
cli
test
xchg
ret
xorl
sub
mov
adc
sahf
add
bound
and
adc
push
out
cmp
jns
xchg
test
add
add
dec
pusha
test
arpl
cmp
xchg
mov
pushl
add
shlb
out
mov
shll
pop
mov
fisubl
stos
or
lds
push
jl
add
aaa
mov
adc
ljmp
insl
mov
cmp
in
mov
mov
lea
cmp
jmp
popa
and
adc
adc
fwait
ret
lret
jbe
cld
or
pop
data16
fcomi
ficoml
popl
mov
push
jae
xchg
clc
or
inc
xchg
jle
or
cwtl
sub
xor
icebp
vhsubpd
std
cltd
jb
cmp
mov
jno
call
popa
push
and
xchg
je
roll
ja
or
lock
or
jmp
push
and
or
add
arpl
mov
pusha
jp
data16
fwait
int3
int
pop
inc
enter
call
xchg
imul
movsb
jae
cmpb
outsl
and
pop
int3
jo
pop
mov
in
xchg
popf
fiaddl
jp
cmp
fwait
push
or
sahf
adc
pop
dec
jbe
add
pushf
adc
and
adcl
in
loope
and
jle
push
push
cld
jae
test
adcb
cli
sbb
push
fsubl
in
mov
add
sbb
andl
das
orb
test
insb
fdivr
xor
adcl
inc
sbb
push
pop
addb
push
and
pop
aad
sbb
test
xchg
les
out
int3
cltd
test
lods
es
or
xor
in
pop
dec
mov
push
mov
bound
ret
popf
or
cmp
push
sbb
mov
mov
dec
vpaddb
rcr
jp
cmp
push
cltd
jo
loope
or
fbld
test
cwtl
out
pushf
xorb
cmp
sub
outsl
ficomps
lock
lods
xor
pop
sti
les
rcr
pushf
and
pop
adc
call
inc
repz
push
pusha
jno
jmp
stc
out
xchg
xor
mov
and
cmp
adc
frstor
in
and
add
mov
push
int
xor
scas
fcmove
xor
lahf
sub
mov
mov
test
cmpsb
ret
push
push
mov
pushf
mov
shlb
arpl
aaa
cmpb
dec
fisubl
sub
jno
orb
mov
or
mov
and
pop
mov
add
das
hlt
adc
icebp
mov
adc
push
pusha
mov
mov
leave
or
subb
sub
rcll
lcall
jne
imul
negb
inc
fnstsw
xor
add
cld
push
ret
or
stc
ret
lret
push
fs
push
fisttpll
pop
jp
out
aas
sub
mov
data16
icebp
popa
inc
stos
pop
icebp
cmp
sbb
pushf
addr16
aam
push
mov
ds
mov
xor
lret
cmp
in
inc
in
js
and
imul
lods
push
mov
rolb
mov
pop
add
pop
mov
xchg
lahf
outsl
insl
out
inc
adc
or
sub
adc
mov
loope
frstor
outsb
addb
or
test
mov
aaa
pop
aad
cltd
inc
add
mov
mov
mov
mov
sub
mov
or
mov
icebp
popa
xchg
xor
push
inc
push
movsl
adc
out
mov
roll
add
imul
in
repz
fbstp
test
out
sub
pop
dec
cmp
sbb
adc
inc
mov
xchg
insl
mov
mov
xchg
push
lret
andl
int3
jne
jl
fisttpl
inc
adc
xor
loopne
add
xor
inc
scas
mov
mov
stc
and
add
mov
mov
lods
arpl
aam
inc
mov
aaa
mov
sahf
insl
sti
inc
ret
mov
js
test
jae
or
inc
adc
ss
sbb
loope
dec
ss
and
push
stos
fistpl
cli
xchg
cmpsl
bound
jb
rclb
xlat
cmc
lret
or
push
push
std
push
mov
sub
pop
cmp
inc
adc
divl
adc
push
js
fisttpll
push
jns
sbb
scas
mov
pushf
loopne
inc
pop
pushf
mov
push
call
dec
fldt
push
xchg
jno
cld
pop
pop
sar
inc
add
push
mov
stc
sti
and
xor
movsb
cli
out
pop
dec
push
mov
and
pop
sub
pushf
pushf
notl
fstl
mov
sbb
dec
jnp
mov
sub
fnstenv
popf
sub
dec
in
out
jmp
insl
mov
roll
fst
mov
divb
jle
and
lds
dec
fldt
adc
mov
sub
xchg
mov
jae
add
stc
mov
subl
jg
or
add
jle
in
shll
sahf
imul
hlt
sbb
sbb
jae
adc
jno
imul
ja
pop
insb
arpl
cmp
shll
inc
and
mov
xchg
mov
inc
xor
orb
adc
cmp
add
and
xor
add
pop
xchg
pop
mov
repnz
popa
mov
test
adc
dec
and
ficoml
dec
into
das
int3
xchg
mov
pop
or
in
fsubrs
inc
mov
arpl
fisubrs
out
push
xorl
iret
flds
cmp
rorl
lahf
test
jbe
movl
xor
push
dec
shl
imul
jb
mov
pop
insl
push
xor
mov
and
xchg
bound
movsl
mov
ljmp
xchg
adc
cmp
lcall
daa
mov
fsubrl
movsb
and
mov
jge
outsl
arpl
mov
xchg
test
jae
pop
sbb
dec
and
pop
push
imul
push
adc
jge
ljmp
cli
push
sbb
fldl
orl
jns
pop
hlt
arpl
ss
filds
fwait
arpl
lret
mov
and
icebp
mov
test
mov
mov
jle
cmp
or
ljmp
lcall
je
fs
outsb
xchg
call
pusha
sbb
stos
movsl
rclb
pushf
lods
jbe
clc
sub
jp
mov
js
imul
subb
sbb
ds
divb
iret
jmp
cmp
pusha
insb
sbb
push
mov
pusha
jns
sub
xchg
mov
fistps
pusha
jmp
stc
mov
sbb
pop
ds
jb
rcl
xor
adc
xor
dec
mov
dec
mov
lock
pop
mov
mov
cmp
sub
idivb
leave
mov
movsb
out
int
cmpl
mov
imul
in
sbb
add
inc
sub
ficomps
imul
xlat
push
jo
std
inc
pop
fwait
imul
rorb
leave
les
adc
cmp
in
xlat
test
test
or
shll
mov
sub
jne
xor
arpl
mov
mov
or
imul
mov
out
das
sbb
jle
ja
or
leave
imul
or
sbb
stc
sub
push
push
loopne
push
xor
mov
sbb
out
pop
or
xchg
xchg
and
insl
jge
sahf
cs
xor
xlat
adc
shr
dec
jmp
pop
mov
xor
int3
cmc
movsb
rorb
jp
sbb
add
inc
xchg
or
pushf
inc
and
imul
adc
lock
jg
je
daa
jo
xchg
jbe
cmp
inc
and
in
mov
aas
ss
test
cmpsb
push
and
pop
sbb
pop
add
jge
cmpsb
insb
sahf
pusha
lods
imul
xor
xor
add
mov
cmp
jo
fnstcw
dec
push
cmp
das
sahf
mov
jnp
pop
xchg
xor
dec
dec
push
insb
in
cmp
jnp
lret
das
test
cltd
xor
inc
xorb
orl
sbb
in
mov
lret
hlt
adc
repz
daa
jg
out
mov
mov
mov
or
dec
iret
popf
popf
mov
or
inc
inc
sti
dec
and
scas
stos
test
push
cmp
icebp
or
dec
out
jae
sub
stos
or
lahf
ljmp
popf
add
and
mov
pushf
pop
mov
or
scas
xchg
sub
sbb
repz
push
pop
mov
loope
pop
sbb
negb
ficoml
mov
in
fnstenv
aam
orb
lock
test
cmp
cltd
enter
sbb
lahf
test
sub
pop
xchg
xchg
gs
push
or
dec
mov
in
lcall
ss
cld
addr16
cmp
dec
ret
sbb
and
dec
mov
imul
inc
jne
pop
mov
xchg
fistl
in
fsub
loop
out
int3
xchg
out
andl
and
sahf
mov
jp
mov
push
jmp
fwait
imul
enter
je
sub
repnz
or
in
icebp
xchg
arpl
jnp
and
pop
sbb
jno
or
dec
or
divl
mov
addr16
ret
push
std
inc
adc
xor
sub
lret
push
push
xlat
mov
mov
jbe
adc
fs
add
fcomps
dec
add
sbbl
ret
adc
mov
jbe
and
inc
ds
mov
sarb
lock
mov
sbb
movsl
mov
outsb
push
inc
mov
xchg
out
ret
std
ret
pop
pop
sub
dec
jg
divb
mov
lcall
arpl
shll
add
and
incl
or
adc
cmp
addr16
sahf
icebp
mov
outsl
fs
jp
jne
jne
jmp
dec
push
cs
outsb
inc
mov
test
mov
mov
test
add
adcl
scas
dec
lret
orb
xchg
test
xchg
out
pusha
jle
jg
push
xchg
roll
xchg
or
lahf
test
rcr
sbb
das
lods
cs
mov
xchg
fildll
les
cmp
leave
push
push
adc
sti
sbb
pop
test
xor
push
cmp
mov
adc
call
stc
mov
cmc
jmp
mov
popa
and
iret
add
jge
into
ds
incb
scas
add
daa
and
insl
dec
jge
lods
pop
mov
cmp
in
call
cwtl
or
pop
dec
sbb
sbb
sbb
sub
scas
sbb
sub
jne
sahf
mov
xchg
jae
pop
insb
jmp
sbb
cmpsl
aad
int
mov
andl
xchg
rorb
inc
xchg
cmpsb
loope
or
out
jl
out
adc
fwait
push
pop
cmc
ja
xchg
mov
nop
js
popf
push
aad
sbb
mov
in
rcll
cmp
ljmp
xchg
cs
dec
inc
sbb
mov
imul
mov
pop
loop
sbb
movsb
out
test
mov
repnz
repnz
fisubs
adc
sahf
pop
sub
loop
mov
jg
mull
xchg
jns
dec
test
xchg
pushf
adc
popa
insl
mov
outsb
mov
movsb
push
xor
aaa
or
inc
push
dec
fstps
inc
push
adc
pop
xchg
and
mov
add
jb
sub
and
test
or
xchg
mov
pop
orl
fisttpll
cmp
push
mov
xor
ret
enter
mov
dec
push
mov
movsb
in
push
add
test
in
sbb
arpl
mov
jmp
enter
fs
inc
dec
pop
loope,pt
inc
out
pop
pop
scas
mov
mov
or
idivb
and
out
pusha
in
test
fildll
je
lods
cmp
cmp
push
sbb
jo
add
sbb
mov
adcb
mov
dec
imul
sar
xorl
js
popa
xor
cmp
outsb
add
insb
sbb
mov
mov
data16
icebp
push
or
pop
jle
insb
fwait
adc
loope
lahf
sub
and
js
mov
pop
sub
jp
repnz
sbbl
mov
adc
leave
ljmp
xchg
mov
gs
stos
mov
xor
xchg
fimull
xor
mov
rolb
sub
paddd
sub
mov
scas
mov
scas
lds
ja
repz
iret
sti
data16
xchg
cmp
push
lret
inc
rorl
pop
addr16
xchg
sti
jge
xor
lcall
loope
sbb
stos
out
jg
sub
fdivrs
iret
jge
mov
int
dec
arpl
sub
xor
fiaddl
jge
lcall
inc
and
lcall
enter
test
mov
ljmp
inc
pop
jbe
stos
js
jle
out
in
imul
iret
adc
scas
jns
cltd
dec
push
icebp
rolb
aas
outsb
lret
pop
in
divl
scas
das
fidivrs
pushl
call
jns
out
and
or
add
repz
loopne
outsb
xor
jecxz
xor
orl
gs
rcll
imul
fsubrl
and
pop
icebp
xchg
add
or
movsl
push
lret
imul
xchg
adcl
or
jns
lods
lods
loop
lods
leave
ss
or
sub
xchg
mov
dec
or
movsb
mov
cmpsl
mov
cmc
mov
sbbl
pusha
jo
mov
in
push
add
adc
ret
bound
mov
lods
cmpsb
imul
sub
cmp
mov
insl
xor
pop
mov
in
mov
mov
cmc
dec
jg
sbb
outsl
xor
fldt
xor
je
loopne
push
lock
dec
imul
fstpl
xor
aas
shrb
adc
dec
jle
xorl
dec
pop
out
cmp
and
or
ret
adc
or
push
inc
dec
cmpsl
lret
inc
cmp
push
test
enter
add
loop
adcl
andb
mov
xchg
mov
sub
bound
lret
mov
push
adc
xchg
leave
dec
jp
lea
cwtl
adc
add
jle
or
int3
mov
inc
add
mov
dec
in
xchg
clc
aas
lds
out
out
lds
jbe
fbstp
dec
lock
and
push
lods
sbb
sti
nop
call
popf
popl
sbb
mov
inc
in
fcmovbe
test
lds
jae
ret
dec
jge
jo
xor
jo
ds
mov
lret
and
dec
ja
fcomi
sbb
xlat
xlat
adc
xor
das
enter
xorps
mov
sbb
outsb
divl
jb
cmpsb
data16
xchg
insb
mov
les
push
fistpll
fnstenv
push
mov
out
sub
jmp
dec
mov
andl
push
in
jp
fdivl
xchg
fwait
in
xor
mov
icebp
int
push
xchg
xchg
lahf
xchg
loopne
lret
mov
mov
in
xor
xchg
movsb
and
xlat
inc
cmp
push
lcall
cmp
xor
pop
lret
push
aaa
fcomip
inc
stos
fwait
adc
push
pop
in
xor
pop
in
cmp
xlat
ljmp
xor
into
insl
pop
xchg
daa
mov
and
push
mov
orb
loop
pop
mov
jge
out
adc
lahf
das
mov
out
scas
jns
cs
xchg
out
mov
rorb
xchg
rorb
push
cmp
push
jmp
jns
jle
adc
sub
call
xor
cmpsb
movsl
inc
imul
stos
cli
adc
sahf
pop
xor
xor
pop
xor
dec
xchg
jge
sbb
cmpsb
daa
int
insb
inc
dec
scas
cmp
or
jg
xchg
xor
push
xor
jo
cmpsb
lret
sbb
mov
cmp
pop
or
nop
imulb
xchg
dec
pop
in
mov
arpl
cwtl
lea
dec
repnz
push
push
testb
test
rorl
pop
addr16
aad
xor
mov
aam
and
or
arpl
lods
adc
xchg
ret
cmp
shl
imul
and
and
icebp
pop
fbld
shll
pop
jecxz
push
inc
inc
insl
xor
lods
fisttpl
sub
repz
and
cmp
fnstsw
adc
xor
lods
inc
sbb
rcll
sub
mov
pop
and
js
std
push
adc
pop
sbb
dec
pop
mov
addr16
mov
add
xorb
es
inc
add
mov
and
std
into
outsl
das
push
jne
inc
jo
stos
arpl
leave
ret
movntq
mov
jp
xchg
pop
bound
aaa
shl
cmp
and
xchg
insl
pop
icebp
idivb
mov
push
ret
sub
jb
inc
movsb
sub
lds
ljmp
cmp
mov
sbb
ret
cmpsb
ss
movsl
into
in
push
xchg
dec
dec
imul
pop
cs
int
mov
adc
mov
insb
out
push
jnp
adc
not
imul
inc
sub
lds
add
jb
movsl
mov
add
je
ljmp
inc
jp
or
jae
testl
mov
push
outsb
mov
rcll
pop
inc
pushf
cmp
scas
mov
adc
sub
sarb
fidivrl
int3
ret
jecxz
jecxz
ret
inc
mov
and
es
jmp
adcb
and
push
jecxz
hlt
jnp
cmp
mov
loope
jg
pushl
mov
repz
cmp
sub
addb
jo
xchg
and
subl
insl
push
push
stc
testl
shrb
sbb
iret
xchg
scas
mov
mov
push
pop
js
das
in
dec
arpl
xchg
cli
js
ja
inc
loopne
sbb
mov
sbb
clc
fwait
leave
in
pop
dec
or
popf
out
psrad
imul
mov
jp
inc
cmp
jge
mov
sbb
mov
aad
push
jne
scas
jo
lock
and
lcall
insb
dec
push
mov
jmp
ret
pop
or
pusha
fiaddl
fcomp
test
roll
addl
cmp
shrl
and
cmp
dec
into
and
popf
stos
outsl
xor
lock
jg
test
and
xchg
xchg
mov
or
xchg
xchg
jle
push
stos
and
cmpsl
or
sub
out
xchg
jae
fiadds
push
dec
jle
bound
aas
shrb
jo
rcl
loopne
mov
dec
leave
sub
cwtl
mov
lea
cmp
popa
adc
and
adc
or
aad
cmp
mov
insl
mov
xor
inc
loop
and
cwtl
testl
loope
push
pop
negb
outsb
iret
sub
andl
adc
loope
mov
dec
mov
pop
inc
or
mov
int
dec
cltd
dec
ret
je
jb
repz
dec
add
jmp
test
aad
xor
mov
adc
scas
es
and
je
je
cmp
int3
icebp
js
sub
and
mov
aam
cmc
sub
and
add
lods
arpl
xchg
inc
push
arpl
repnz
leave
incl
arpl
cs
or
add
sbb
xchg
cmp
and
sub
mov
js
fs
imul
add
push
sbb
mov
dec
shrl
mov
mov
sub
cmp
fmull
pop
in
sub
dec
das
jge
fnstcw
inc
lahf
imul
adc
movb
mov
shrb
out
movsl
jns
lret
dec
xchg
cltd
add
loopne
pop
clc
sbb
insb
mov
mov
pop
test
jb
xor
lcall
addr16
fadds
dec
pop
ror
rclb
and
repz
xchg
sub
lret
push
int
mov
in
ja
mov
rcrl
test
insb
pop
or
jbe
or
addr16
ljmp
pushf
sub
jb
pusha
pop
ja
incl
cmp
aam
add
aad
inc
add
push
pop
ja
cld
stc
testb
mov
pop
andl
add
or
test
push
xchg
popf
insl
mov
mov
je
cmp
pop
push
jl
fcomps
dec
stos
pusha
pcmpgtw
nop
mov
sub
push
xchg
popa
mov
cmp
loop
stos
mov
cmc
dec
cmp
xor
shll
push
sub
sbbb
or
into
movsl
sub
lcall
mov
push
pop
xchg
inc
mov
mov
mov
ljmp
xor
scas
mov
mov
push
adcb
jo
mov
cmp
lods
test
mov
dec
mov
std
test
sbbl
sub
arpl
repnz
into
lret
mov
xchg
es
sahf
dec
mov
inc
lret
or
lock
pop
sbb
add
inc
mov
push
shr
xchg
add
inc
jg
stos
movl
rclb
inc
jne
aas
lcall
rcl
std
out
mov
mov
sbbb
in
arpl
hlt
or
adc
mov
pop
mov
mov
dec
jo
xor
mov
xchg
inc
fisttpll
xchg
mov
aaa
cmpsb
cwtl
cmp
imul
test
jno
cmpsb
xchg
pop
inc
mov
stos
or
jmp
mov
or
in
dec
cmp
movsb
pop
cmpsb
pushf
inc
jae
mov
in
clc
mov
imul
xchg
mov
or
push
jb
dec
mov
aaa
add
xchg
push
mov
fs
lcall
imul
mov
inc
pop
xor
pop
xchg
and
mov
call
adc
xchg
add
jne
adc
arpl
inc
mov
ss
add
inc
xlat
std
mov
mov
mov
dec
add
push
pop
and
lock
mov
imul
xor
scas
mov
cli
or
loope
sbb
sysret
adc
sub
lcall
cmp
les
or
daa
adcl
sti
sbb
movsl
fwait
jb
cmp
add
push
inc
aad
jbe
cwtl
jo
out
in
rorl
mov
movsb
stc
or
lret
addr16
in
push
push
shrb
sbb
jne
sbb
fidivrl
fdivs
repz
out
adc
push
cmp
aam
mov
add
scas
cld
xor
fwait
shlb
shl
xchg
sbbl
cmp
adc
mov
ds
out
mov
mov
push
mov
lret
js
faddl
std
es
inc
pop
push
xchg
xor
enter
xchg
push
xchg
jo
ds
cltd
int
rclb
adc
push
mov
sbb
push
ja
pop
pop
jmp
lea
sahf
scas
lret
inc
cld
xor
aaa
leave
cwtl
outsl
jae
int3
lds
xor
repnz
xor
push
pop
sub
repz
jne
imul
mov
es
fnsave
stos
movsl
add
sub
cmp
sbb
scas
pop
movsb
outsl
in
xchg
mov
out
stos
cmp
movsb
es
push
add
xor
cmp
or
call
repz
je
jae
mov
sub
lds
aad
aam
shrb
dec
xchg
cmp
push
std
testb
mov
xlat
addr16
or
sbb
je
into
mov
sub
push
shlb
jbe
xchg
scas
cmp
insb
popa
dec
xor
pop
mov
enter
pop
sub
lcall
movsl
fimull
mov
pop
sbb
or
mov
cmpsb
arpl
sub
leave
mov
push
jmp
gs
clc
hlt
lock
ror
push
pop
subb
js
push
dec
pusha
repnz
fldl2e
pop
cwtl
cltd
sbb
fildl
int
nop
xlat
daa
mov
mov
or
ljmp
ret
cmp
cmp
xor
pop
pop
jl
add
mov
stos
icebp
imul
imul
sub
push
push
out
mov
mov
push
mov
dec
cmp
xchg
sub
jge
push
pop
and
outsl
lret
xor
mov
or
push
dec
addb
je
stos
mov
xor
mov
aas
add
pushf
xor
pusha
aad
and
data16
arpl
pop
push
leave
jnp
mov
adc
lods
jl
inc
mov
mov
mov
mov
cmp
int
dec
ficoml
add
mov
out
dec
and
rcrb
dec
je
movsl
mov
inc
jle
adc
inc
push
xor
xchg
outsb
cmp
lods
add
lahf
lea
mov
mov
mov
clc
jae
icebp
into
subl
mov
dec
shlb
push
and
push
lods
loope
mov
xchg
pop
sbb
xchg
lret
jecxz
pop
adcl
repz
sti
push
out
cmp
loopne
lods
sub
jg
push
insb
out
hlt
mov
adc
dec
lret
dec
pop
call
jae
sub
lock
je
loopne
jnp
insb
test
push
jns
daa
orl
data16
mov
out
stc
adc
mov
mov
js
pavgw
add
rcr
aas
xor
lahf
xchg
and
adc
flds
mov
into
mov
fmuls
mov
add
pop
jno
mov
add
outsb
lret
xor
and
xor
dec
xchg
call
inc
jno
inc
push
mov
gs
jae
das
jl
jecxz
cmp
gs
mov
test
mov
mov
jno
test
push
xchg
icebp
test
sahf
jae
andb
xor
push
mov
jmp
rclb
and
jb
push
add
mul
jne
mov
add
movsb
mov
sub
push
xor
lcall
and
loope
push
test
pop
mulb
fxch
mov
mov
jg
iret
ficompl
scas
fldt
or
std
sub
in
aad
rcr
push
gs
add
add
jae
xor
rol
mov
pop
in
mov
iret
mov
in
or
int
jecxz
mov
daa
mov
mov
mov
pop
adc
lret
sbb
sbb
or
ljmp
pushf
push
mov
iret
cli
es
jge
insb
ficompl
mov
sbb
jg
pop
lods
cmp
ret
mov
xchg
inc
sub
stos
xlat
cmp
push
sub
mov
xor
adc
lds
push
cmpl
pop
cmp
jno
mov
rcll
jmp
inc
ret
addr16
adc
outsb
jae
aad
out
push
mov
push
xchg
jbe
add
pusha
loopne
mov
inc
cmp
cmp
cmpsl
push
repnz
rclb
lds
push
add
or
xlat
repnz
push
out
dec
pop
mov
add
hlt
jecxz
dec
pop
orl
mov
mov
pop
xor
lret
pop
jno
jae
repz
inc
das
cmp
jnp
add
xorb
in
add
loop
xchg
push
xor
stos
shrb
enter
js
out
stos
sbb
or
xchg
enter
fmull
adc
xchg
mov
int3
sbb
push
loope
neg
xchg
cmpl
cld
xor
or
out
jno
fmull
mov
jb
push
das
sarb
repnz
inc
push
push
sub
cmp
and
aaa
adc
jns
cmp
add
and
mov
inc
in
inc
pusha
jae
sbb
repz
sub
add
bound
pop
dec
loopne
into
jo
ficoms
cmp
jmp
in
movsb
fs
rcr
mov
cmp
sti
adc
out
pop
lret
out
push
jge
or
daa
xchg
mov
fcoms
js
sahf
jmp
fcoml
adc
js
addr16
and
lods
mov
or
mov
gs
lea
xchg
mov
xor
sbb
sbbb
and
cmp
sbbl
lock
lcall
cld
fmulp
push
pop
fs
popa
ljmp
push
and
or
repz
mov
les
mov
loopne
jl
mov
jecxz
or
popf
cmp
test
and
out
ror
lahf
or
mov
adc
xchg
mov
outsb
js
xchg
lahf
iret
dec
dec
shrl
mov
xchg
push
lret
lret
cltd
inc
ss
test
loop
sbb
shll
pop
sub
or
jnp
push
push
ficoms
sub
stos
imull
movsl
negb
sbb
mov
and
dec
out
subl
out
nop
push
popf
iret
idivl
push
das
mov
test
call
in
ja
ret
cld
xor
pop
outsl
sbb
inc
fwait
inc
and
pop
adc
adc
bound
in
mov
dec
jo
iret
mov
leave
movsb
cwtl
sub
popf
add
jg
imul
push
in
mov
pusha
call
mov
addr16
aaa
jmp
or
dec
icebp
ja
cmpsl
repnz
jge
cmpsb
adc
inc
mov
fisttps
shl
mov
int3
fnstcw
in
rcl
sbb
xor
mov
test
dec
fwait
dec
and
inc
xchg
mov
pop
push
lret
cmpsl
test
mov
insl
lock
jg
gs
sbb
xor
cmpb
dec
ljmp
mov
pop
push
mov
and
sahf
or
lcall
jbe
aaa
xor
loope
and
dec
sub
push
mov
push
push
in
mov
insl
leave
repz
mov
out
pop
xchg
push
in
xchg
inc
add
js
idiv
xchg
lret
jo
push
mov
jo
pop
mov
sub
adc
xorl
cmpsb
es
xchg
pop
push
adc
sbb
mov
addl
stos
daa
xchg
sub
loope
lods
insb
or
jbe
pop
enter
pop
fistpl
xor
xchg
jns
loope
cmp
ljmp
sahf
test
mov
push
inc
cwtl
jecxz
xchg
pop
xchg
adc
mov
cmp
xor
je
in
lahf
test
hlt
xchg
stc
inc
cmp
es
aas
int
int
add
icebp
out
jne
sbb
mov
scas
mov
mov
daa
jle
adc
ficomps
shr
movsl
mull
or
and
push
mov
cmp
mov
add
aas
fstps
mov
push
mov
lds
adc
test
push
jg
stc
lahf
pop
sbb
xchg
popa
mov
xor
rol
fcoms
test
enter
je
jg
lahf
jae
mov
cmp
lea
sbb
sub
jae
rorb
stc
xor
rcrb
jb
call
or
jnp
jns
sub
incb
jb
cmpsl
fisubrl
mov
jl
push
and
dec
dec
sub
mov
adc
pop
imul
pop
mov
pushf
mov
mov
outsb
test
outsl
xchg
dec
jl
inc
je
push
pushf
add
jmp
sub
sbb
sub
cmp
xor
mov
xchg
sub
cmc
fcmove
sub
dec
out
fisubs
sbb
add
out
adc
setne
mov
orl
adc
stos
shrl
insb
xchg
adc
sub
repz
insb
lcall
push
jns
push
push
cmp
push
pop
retw
std
pop
pop
out
push
fmuls
dec
push
mov
cmc
scas
jae
cmp
jmp
mov
cmc
shr
push
frstor
insl
or
xor
pop
jne
push
xorl
xchg
mov
xor
push
out
push
mov
aad
pop
test
inc
stos
stos
int
sbb
ja
mov
inc
lds
push
and
stos
jmp
stos
stc
xor
jl
mov
dec
in
sub
dec
push
and
jge
mov
lds
insb
lea
cmpsl
lods
mov
int3
mov
test
mov
shl
out
lret
push
loope
inc
cmp
jmp
xchg
dec
sbb
pushf
in
mov
pop
in
out
popa
bound
push
push
sbb
sub
mov
jg
aam
dec
in
adc
data16
dec
xchg
pop
inc
js
push
xchg
leave
pushf
inc
aas
icebp
iret
pop
gs
dec
xor
repnz
inc
aaa
pop
insb
inc
pop
js
add
xor
cmpsb
sbbl
dec
cmc
sahf
add
add
jns
repnz
push
dec
sub
negb
lret
xchg
loopne
outsb
jecxz
mov
jp
dec
jl
push
jnp
repz
popf
jp
and
or
and
dec
dec
mov
push
mov
int3
movsl
xor
or
add
pushf
xchg
mov
xchg
pushf
jbe
fisubl
cmpsb
daa
pop
mov
xchg
mov
pop
dec
loopne
aaa
mov
adc
clc
xor
fstpl
loop
out
pusha
loope
inc
sbb
loop
mov
xchg
pop
pop
test
and
add
pop
rcrb
lods
bound
push
je
add
mov
inc
lret
ljmp
push
jns
mov
mov
and
sar
movsl
cmp
cmc
pop
outsl
inc
mov
ds
push
pushl
sbb
cmpsl
mov
cwtl
push
int
mov
inc
sbb
push
out
mov
xor
ja
or
das
lods
int
or
stos
mov
sbb
and
ja
les
push
lahf
cwtl
xchg
iret
mov
jl
xor
adc
dec
add
or
sub
add
imul
and
sqrtps
cwtl
add
jne
lea
add
flds
and
mov
mov
push
mov
inc
aas
dec
add
loope
out
aad
jmp
sar
jecxz
cmpsl
xchg
push
je
jnp
enter
adc
cld
push
mov
gs
cmp
test
push
movsb
or
pop
jae
sub
mov
rcrl
fidivs
or
idiv
pop
loop
dec
jp
dec
mov
repnz
add
stos
ror
xor
sub
mov
inc
xor
inc
and
imul
mov
sbb
gs
push
jge
jp
popf
pop
push
and
cmc
in
sbb
cwtl
fsub
in
inc
lret
xchg
icebp
jle
push
mov
cmc
pushw
test
mov
test
aad
xchg
in
jbe
lods
mov
fcoml
push
jne
xchg
lret
cltd
pop
leave
push
jl
loop
inc
or
or
andl
jae
adc
test
aam
in
sbb
out
xor
shrl
push
sahf
insl
lret
cli
lahf
mov
je
inc
bnd
push
decl
ds
dec
mov
stos
stos
loop
mov
xor
cmpsl
scas
mov
lret
int
xchg
rcr
lret
pusha
pop
notb
dec
loope
sub
popa
stos
push
decb
repz
mov
xchg
cmpl
test
push
mov
mull
push
lods
and
sbb
mov
fstps
fcoml
das
nop
ja
fldenv
pushf
fxch
mov
pmulhuw
fs
repnz
mov
pop
cmp
insb
pop
sub
iret
fsubl
out
dec
pop
mov
aad
outsb
jp
inc
roll
adc
mov
aam
xchg
xor
imul
in
mov
cli
icebp
daa
imul
in
aad
mov
int3
fidivl
test
cmpsb
sbb
lds
shlb
in
cwtl
iret
mov
xchg
cmp
sti
and
xor
or
push
ljmp
test
sbbb
jbe
cltd
cmp
out
dec
addr16
in
xor
inc
adc
jb
cmpsb
insl
xchg
aaa
outsl
fnstsw
outsl
imulb
inc
xchg
ret
push
cmpsb
fidivl
pop
sar
inc
xor
xchg
test
sbb
imul
xchg
fdivrs
sarl
add
cmc
xor
rclb
addl
jno
and
scas
jnp
or
or
push
jbe
les
das
push
mov
dec
fwait
scas
in
ljmp
cmp
hlt
and
stc
dec
sbb
xor
cli
das
addr16
sbb
cmp
cmpsl
mov
rcrb
dec
push
and
mov
push
rol
pop
lods
push
movsl
mov
stos
cmp
sarb
push
loope
pop
or
push
enter
pop
mov
out
sti
sti
adc
mov
or
and
mov
xchg
incb
neg
pop
push
es
pop
fists
aaa
clc
iret
pop
popf
in
test
sbbl
scas
mov
pop
cmpsl
sbb
and
std
in
loope
sbb
call
repz
sub
lahf
jb
push
ljmp
dec
push
insb
je
lods
loopne
xor
sub
popa
adc
imul
add
adc
cmp
popf
mov
out
push
aad
or
mov
test
mov
pop
xor
movsb
mov
divl
jecxz
or
jno
stc
adc
mov
dec
lea
xor
push
pop
addr16
inc
notb
add
mov
insl
mov
jmp
mov
cmpsl
imul
mov
popa
es
or
sti
arpl
lods
std
cs
cmp
mov
xlat
or
xchg
lods
adc
int3
push
jg
inc
test
or
insb
sub
in
ror
cmc
xor
cmp
sub
jnp
stos
mov
sbb
lds
dec
cmp
push
shrl
dec
or
pop
loop
pop
jo
lahf
lds
mov
inc
call
mov
or
mov
mov
jo
loop
ds
cmp
xlat
fdivs
fidivrl
in
cmp
sub
dec
arpl
adc
fwait
nop
pop
into
and
in
add
or
cmpsb
inc
sub
gs
les
inc
aas
roll
or
movsl
push
pop
adc
jge
into
mov
mov
add
mov
lods
mov
movsb
xchg
roll
mov
sti
and
push
xchg
sub
pop
mov
lahf
cmpsl
inc
hlt
cld
int3
xor
gs
push
cmp
aas
les
out
mov
xchg
outsb
mov
jmp
push
popf
push
popa
pop
jae
fnstcw
cld
orb
sub
notl
mov
imul
pop
ss
xchg
adc
fcmovnb
hlt
add
xchg
hlt
movl
fwait
hlt
sbb
pop
jle
sbb
test
mov
fidivrl
mov
outsl
xor
xchg
pop
je
add
and
mov
loope
mov
hlt
fcmovnb
pop
stc
or
movsb
sbb
inc
test
pop
push
adc
scas
lcall
lock
fmul
test
rcr
adcl
pop
xor
dec
sahf
les
rolb
test
pop
mov
mov
mov
pop
adc
adc
cmp
jle
mov
mov
leave
dec
add
jecxz
add
daa
pusha
mov
cmp
test
add
mov
and
mov
sub
fmuls
call
gs
into
inc
sub
jb
in
lcall
pop
fs
cmp
xor
in
adc
pop
xor
mov
lods
out
mov
out
push
xchg
and
cmp
push
iret
mov
mov
fdivs
pop
sub
repnz
hlt
push
lock
data16
pop
jb
add
mov
lock
leave
inc
pop
cmpsb
or
sub
cmp
and
pop
pop
push
push
pop
mov
dec
das
mov
mov
jno
out
outsl
leave
rcr
push
icebp
and
icebp
dec
sub
inc
fdivrl
loope
stos
aaa
cmp
testb
fidivrl
dec
out
pop
push
test
or
pop
fcmovne
orl
cmpsb
dec
mov
adc
inc
inc
mov
scas
inc
fs
mov
rcrl
lret
int
xor
cmp
adc
jmp
and
pop
sti
xor
popf
add
lret
dec
push
stos
jo
jg
pop
cmp
mov
adcl
push
movsl
xchg
or
pop
and
push
data16
je
add
jp
enter
cmc
stos
dec
sahf
js
fcompl
pop
lret
imul
mov
bnd
push
test
and
and
or
jl
adc
jnp
int3
mov
jl
jbe
lds
adc
sbb
fwait
mov
aad
inc
push
dec
jecxz
and
rclb
nop
cmp
mov
mov
popa
mov
lret
mov
ja
xchg
dec
jle
int
insl
rorb
jns
add
mov
mov
jmp
adc
fbstp
rcl
ret
sbb
xor
in
in
in
shl
lcall
cmpsb
int3
outsl
lahf
fs
mov
and
mov
rclb
mov
push
and
stos
mov
stos
aad
mov
cmpl
cmp
or
or
add
add
cli
mov
push
aas
and
push
sbb
lcall
cmpsb
in
cmp
andb
mov
fwait
stos
fiadds
test
cmp
dec
mov
lret
cmpl
jbe
mov
out
fistpll
ret
dec
dec
dec
dec
or
mov
lds
repnz
xor
rcll
or
adc
sbbb
addr16
sub
fbld
sub
fidivl
rorl
cmp
shl
decb
sub
lods
lahf
dec
adc
lock
mov
std
aas
pop
fidivrs
xchg
mov
xchg
mov
mov
lret
daa
mov
xchg
push
sub
push
inc
fdivrs
cld
stos
push
dec
jb
push
lret
jmp
cmp
cli
fnsave
mov
mov
in
dec
add
jge
lock
bound
push
sub
mov
jbe
cmp
sbb
pop
aad
out
sub
imul
in
jbe
inc
inc
sub
xor
add
sbb
cwtl
jbe
lods
mov
inc
mov
xchg
insl
aad
and
pslld
xor
in
dec
mov
inc
mov
notl
mov
inc
jne
orl
mov
add
sub
in
das
test
add
sahf
pop
shlb
xchg
jns
stc
push
jge
mov
outsb
fs
push
adc
js
jbe
cmc
test
fistpll
test
xchg
andb
subl
pop
jp
sbb
pushf
lahf
adc
hlt
mov
xchg
fxch
dec
inc
inc
test
rcll
add
notl
sbb
insl
mov
cmpsl
xchg
lds
movsl
out
mov
out
out
mov
aad
jae
rcll
push
jno
sbb
ss
les
imul
in
mov
jno
lods
cwtl
fstpl
adc
mov
jo
inc
mov
mov
xchg
inc
cmc
cmp
arpl
int
cmp
lds
cmpsb
push
cmp
lods
dec
mov
add
cltd
or
mov
sub
cmp
and
sahf
mov
push
pusha
xor
add
lods
push
mov
dec
dec
jne
mov
shll
aaa
fdivl
aam
repz
mov
sub
cld
adc
cmc
mov
ljmp
pop
dec
lahf
cmp
xchg
jnp
sbb
loop
jle
cwtl
in
in
test
add
popf
popf
lods
mov
lcall
fdivl
es
jmp
repnz
xchg
xchg
mov
and
xor
mov
lret
sbb
fildll
push
fs
negb
jns
test
mov
or
sub
aam
stc
call
xchg
sbb
push
test
leave
push
sub
fs
aad
mov
or
imul
jno
mov
mov
incl
int
loop
mov
outsl
jp
mov
clc
fs
das
jne
lret
je
cmc
cs
jecxz
icebp
inc
dec
jb
iret
cmp
dec
xor
fadds
cwtl
incb
dec
xor
inc
pop
add
stos
mov
int3
push
into
scas
in
cli
js
jne
arpl
addr16
test
sbb
jne
scas
mov
bound
repnz
xchg
data16
movsb
cmp
mov
inc
mov
and
dec
sbb
cmp
fisubrl
mov
and
stc
xor
and
cmp
jl
or
add
xchg
loope
sbb
call
cmpsb
ret
pop
dec
fs
aam
andb
mov
mov
aam
sub
es
mov
out
pop
jecxz
jae
sbb
pop
and
cmp
int3
loop
pop
pop
sbb
pop
cltd
les
in
jecxz
mov
popf
mov
addl
push
and
es
push
jmp
or
jne
mov
pop
test
push
mov
arpl
fists
bound
lahf
or
push
fnstenv
sti
popa
xchg
sub
jle
rcl
push
adc
mov
testb
loop
in
jecxz
mov
cmpsb
es
mov
shll
jg
push
sbb
fmuls
xchg
aas
outsl
and
hlt
mov
xor
dec
sub
pop
adc
les
push
loop
dec
mov
jns
aas
inc
pushf
lds
dec
insb
pushf
ret
mov
rcl
adc
push
sbb
ss
aad
sub
in
mov
inc
popf
rclb
out
pop
in
scas
cmp
sarb
push
xchg
mov
pop
out
xchg
dec
clc
js
cmp
adc
arpl
add
ret
out
repz
mov
test
daa
jae
shll
mov
sarl
mov
movsl
push
pop
or
int3
mov
dec
std
das
sub
sti
pop
mov
fsubs
idivb
lahf
imul
mov
mov
push
jmp
xchg
mov
adc
pusha
inc
pop
push
or
subl
sub
jmp
repnz
vphsubbw
test
mov
mov
addr16
xchg
jnp
add
pop
cmc
xchg
insl
sbb
push
sub
stos
push
and
cmp
test
pusha
pop
add
aad
movsl
mov
push
icebp
stos
xchg
imul
arpl
shlb
in
lods
outsb
es
inc
je
dec
dec
in
pusha
outsl
jmp
mov
mov
lods
fistpl
pusha
jb
leave
adc
mov
mov
or
cmp
lcall
imul
dec
xchg
fistl
mov
dec
addr16
jge
jne
mov
aaa
addb
jmp
jmp
dec
rcrb
xorl
loop
adc
fucomi
mov
sbb
jno
ret
mov
imul
test
fcomps
or
ret
sti
sbb
or
adc
jle
mov
adc
pop
jns
call
xchg
mov
in
sub
es
sub
or
and
sbb
inc
push
lret
push
mov
sub
dec
or
std
fldt
cmp
push
pop
gs
shrl
lret
xor
int
xchg
int
pop
and
mov
out
popf
push
test
pop
jae
lock
push
dec
jne
fsqrt
jle
push
sub
adc
xchg
ret
mov
cli
xor
add
popa
jns
incl
cmpsl
mov
push
clc
ret
sub
repz
adc
stc
jo
inc
mov
loopne
sub
mov
dec
in
rol
mov
push
rolb
xchg
sahf
ds
jmp
push
rorl
dec
pop
cmp
lret
mov
xor
stc
js
insb
cli
mov
ja
rcll
mov
dec
enter
data16
out
fisubrl
jbe
mov
lcall
gs
out
push
inc
and
aam
sub
data16
or
out
movhlps
or
mov
enter
fisttps
and
inc
jge
inc
stc
or
jge
addr16
xor
loopne
arpl
jo
sbb
jae
hlt
pop
repnz
orb
lret
jne
rcll
int3
aad
xchg
idivl
shl
mov
inc
dec
les
aam
jno
jnp
pop
jne
jno
loope
mov
test
cwtl
sub
into
cmp
mov
or
lret
sbb
pop
sbb
stos
mov
pop
dec
lock
mov
out
fs
movsl
ror
push
jno
cmpsb
adc
stos
testl
mov
push
repnz
sub
imul
and
xchg
xchg
js
mov
cmp
xor
pop
sbb
icebp
push
xchg
xchg
xchg
jnp
and
cmc
loop
mov
or
addr16
xor
imul
xchg
push
sahf
dec
inc
xlat
wbinvd
mov
jno
jmp
dec
pop
mov
outsb
mov
rcrb
inc
mov
sbb
pushf
jae
sahf
and
in
pop
sti
mov
repz
add
loop
mov
outsb
jg
outsl
je
push
stos
stos
push
repz
nopl
dec
loope
nop
jo
cmp
xor
aam
mov
and
xor
loopne
mov
in
and
push
lods
cmp
xchg
sarb
jecxz
pusha
push
cli
movsl
add
lret
sbb
mov
lds
inc
xlat
push
jns
fcomps
lods
js
lcall
lret
int3
mov
jbe
flds
inc
ret
shr
or
push
cmp
mov
sbb
out
lods
and
jae
pop
loopne
dec
pusha
pop
scas
xchg
cmp
adc
jmp
mov
xchg
adc
jbe
imull
sbb
cmp
and
shrb
inc
push
cmp
mov
mov
loope
inc
repz
dec
mov
and
adc
cmp
mov
mov
or
fsubs
aad
add
pop
mov
insb
mov
out
pop
cmpsb
out
stc
fbstp
and
mov
jle
popf
push
sub
xorb
fsubrs
jl
mov
lods
loope
ja
adc
std
jbe
xchg
out
stc
dec
dec
sub
and
or
cmp
leave
andb
sbb
fcoms
or
and
daa
mov
inc
push
hlt
lea
jecxz
movsl
mov
dec
adc
ja
lret
push
jg
repnz
leave
jmp
inc
out
jecxz
mov
push
rcll
jne
sbb
and
xchg
out
cmp
adc
cmc
inc
in
aam
jle
push
data16
orl
push
je
sti
fcmovb
push
fmul
fsubl
ret
sub
add
pop
popa
loope
pusha
adc
rcrb
imul
sub
mov
ja
aaa
mov
daa
jno
lahf
inc
jmp
rep
push
mov
pop
inc
bswap
call
xor
jnp
push
cwtl
pop
sbb
fcompl
or
cld
std
into
inc
out
pop
cmpsl
xor
push
je
bound
pushf
dec
addr16
cltd
repnz
and
add
push
mov
out
and
addb
inc
xor
std
cmpsl
pop
shll
mov
sbb
xor
test
xor
adc
cli
sub
jl
mov
fimuls
imul
or
out
sbb
cmc
dec
repnz
das
jmp
push
xchg
mov
lods
outsb
or
sub
shrb
mov
mov
push
push
mov
sbb
dec
mov
lahf
dec
lret
jg
inc
inc
out
mov
sahf
sarb
repz
cmp
jns
mov
lock
call
popf
jns
sbb
dec
sarb
and
hlt
faddp
ret
mov
dec
dec
xor
into
loop
push
adc
mov
jge
rorb
mov
dec
subb
adc
pop
mov
lock
push
cmp
stc
xlat
sbb
les
sbb
fidivs
aaa
mov
inc
mov
xlat
dec
mov
mov
aas
mov
pop
cmp
test
loope
rcrl
retw
negb
mov
sbb
xor
dec
dec
aam
and
sbb
ds
jl
lock
out
xor
jae,pn
lods
add
adc
psubb
mov
cli
xor
fnsave
clc
loop
jmp
jg
adc
push
vminps
sub
imul
push
jl
lock
lret
iret
fistps
cmp
push
sbb
mov
gs
scas
dec
in
lcall
bound
shll
sub
pop
scas
jns
sarl
inc
ret
xor
pop
and
xchg
jle
ljmp
sbb
jmp
call
movsl
pop
popa
cmp
fs
cmp
fstpl
or
adc
sar
sbb
shll
mov
in
mov
repz
enter
mov
mov
loopne
std
inc
movsb
jae
cmc
outsl
leave
insl
ss
dec
sub
and
pop
pop
cmc
stos
in
insl
shrl
lods
push
jecxz
or
lock
jg
or
mov
mov
mov
pop
pop
stc
fs
in
fcoms
lcall
mov
insb
pusha
sbb
test
jnp
adc
pop
dec
movsl
mov
int
push
inc
scas
fldcw
arpl
movsl
ret
rol
movsl
mov
das
add
fnsave
sbb
pop
les
ds
test
xchg
je
push
dec
fdivr
cmc
nop
sti
pop
dec
call
mov
jb
lods
ljmp
sbb
jae
xchg
cmp
mov
jo
repnz
cmp
leave
push
inc
movsl
sub
adc
je
push
test
jp
pop
inc
imulb
pop
mov
addl
imul
cmp
arpl
cwtl
xchg
movsl
orl
test
aad
inc
push
wrmsr
and
xor
popa
push
daa
xchg
fwait
int
adc
or
das
int3
stos
aam
mov
sbb
fs
js
sbb
inc
adc
sahf
pop
mov
push
mov
ss
mov
loop
rcrb
loope
xchg
popf
mov
ja
or
lcall
insb
imul
dec
cltd
outsl
in
mov
sbb
xchg
mov
jmp
mov
test
fldcw
loopne
iret
sahf
push
jmp
or
movsb
and
es
fdivrl
je
mov
add
jecxz
inc
push
fwait
in
daa
scas
jae
mov
jae
pusha
ret
and
int3
adc
in
mov
push
repz
cwtl
dec
pushf
fldt
jecxz
sbb
mov
imul
aad
std
int3
fiaddl
enter
xchg
mov
jne
push
les
js
aas
imul
int
inc
test
mov
adc
pop
mov
xchg
mov
xchg
stos
ljmp
or
nop
ficoms
cmpsb
fimull
xchg
push
pop
sbb
stos
out
popf
ficomps
xchg
test
dec
fwait
add
xlat
jo
or
repz
mov
mov
out
xchg
xchg
arpl
fs
ss
sbb
repnz
xchg
mov
sbb
sahf
insl
rcrl
mov
push
nop
xchg
push
aaa
loop
jmp
xor
push
jo
movsl
stos
mov
in
pop
in
sbbl
push
and
dec
push
lcall
jno
fidivrl
inc
ret
aas
icebp
scas
mov
push
iret
into
insl
cmpsl
jecxz
aaa
or
add
sbb
xor
mov
clc
dec
and
test
in
add
scas
imul
ror
mov
neg
movsb
scas
fdivl
cmp
dec
imul
cmp
jmp
movsl
test
xchg
daa
sti
cmpl
movsb
dec
mov
gs
fmul
test
arpl
movsb
bound
sub
setb
mov
shl
nop
pop
sti
or
pop
repnz
in
lret
and
xor
sub
or
sub
shrb
dec
xchg
jecxz
imul
add
jns
daa
lods
inc
mov
in
xor
andl
loope
jle
insb
and
sub
test
les
jne
dec
sbb
outsb
or
or
scas
mov
testb
jne
lds
out
xchg
out
mulb
xchg
scas
jg
dec
clc
js
dec
mov
lods
jo
sub
dec
lock
out
sbb
int
fcom
rorl
out
fdivr
sahf
sbb
jmp
add
adc
mov
sbb
js
push
popa
jne
push
and
cwtl
mov
int
retw
rcr
push
adc
mov
inc
xchg
push
push
mov
ficomps
loopne
xchg
pop
cltd
pop
add
insl
cltd
cmp
test
pushf
lods
mov
xchg
fpatan
xor
inc
cmp
jnp
nopl
mov
arpl
fldl
je
js
mov
mov
mov
dec
push
mov
xlat
fdivrl
jle
loopne
jp
lea
mov
loop
cmp
ss
adc
and
sub
and
mov
sbbl
jb
out
cmc
cli
es
ds
pushf
data16
push
inc
jmp
and
outsb
bound
sahf
in
xor
fcomi
adc
lret
fadds
inc
mov
mov
adc
jg
shl
mov
dec
outsb
lcall
add
orl
sbb
lcall
dec
jo,pt
jbe
or
xchg
pop
dec
xor
fadd
sub
adc
aas
push
dec
sbb
sbb
adc
daa
xchg
iret
xchg
shr
outsl
or
pop
fldcw
mov
sbb
hlt
pop
addr16
pop
push
bound
rorl
test
adc
cmc
mov
xor
pusha
add
fisttpl
push
icebp
add
orl
and
fwait
adc
imul
dec
scas
jecxz
push
inc
hlt
add
test
pop
mov
cmp
pop
mov
bound
mov
imul
mov
inc
test
in
or
inc
cmc
lock
jp
test
and
pop
jns
cli
fistps
sahf
and
ja
adc
push
pop
popf
xchg
lret
inc
les
rolb
ficoms
rcrl
out
dec
shlb
insl
fmull
repz
adc
aas
stos
xchg
cmpsb
cmp
jp
add
in
xchg
stos
nop
xchg
mul
mov
inc
mov
shlb
ret
jmp
adc
repnz
adc
aam
jg
ret
cmp
lods
mov
xchg
cli
negl
lea
shlb
es
jle
je
add
lds
sbb
mov
mov
dec
rolb
mov
sub
subl
cli
inc
mov
sub
imul
pop
mov
mov
mov
rcll
inc
std
imul
mov
jb
das
jns
adc
add
loope
dec
xor
mov
sbb
and
rorb
and
cmc
mov
ds
sbb
rcr
clc
add
int
mov
sarl
out
cmpsl
cmp
mov
mov
pusha
loope
ljmp
cmc
sub
xor
xor
lcall
dec
loopne
fsubp
and
and
jle
push
mov
jbe
add
ficoml
outsb
mov
popfw
xlat
sbb
jns
fiaddl
xchg
sbb
mov
or
outsb
inc
in
xor
mov
fists
repnz
xchg
int3
sub
inc
push
aam
sbb
push
jnp
push
aas
mov
loop
ret
outsl
aad
int
mov
adc
int3
mov
movsl
inc
push
mov
enter
mov
push
cmovl
inc
clc
xlat
mov
sbb
lods
jecxz
je
sub
popl
test
or
pop
sbb
lret
sub
lret
jne
sbb
xchg
mov
push
inc
fildl
adc
gs
pop
add
aaa
xchg
sbb
and
xchg
shll
mov
arpl
insb
add
inc
mov
mov
adc
cmp
mov
cld
dec
push
push
inc
pop
sub
xor
out
and
fisttpl
mov
imul
jb,pn
lock
sub
rcl
aas
jbe
mov
mov
push
cmpsb
jmp
mov
mov
insl
cmp
push
rcr
sub
xor
dec
lds
jo
leave
rorl
jnp
aas
and
lcall
stos
outsl
jb
push
into
movb
pop
inc
inc
jmp
add
enter
adc
loop
cmpsl
scas
ror
mov
int3
dec
insl
shl
sbb
cmp
loope
out
insl
rcr
mov
sar
pushf
hlt
sbb
mov
cltd
xchg
lds
and
adc
lcall
sub
push
mov
scas
sbb
mov
xchg
or
pop
xchg
in
out
sub
scas
das
push
and
dec
orb
add
test
xor
mov
pop
mov
mov
jns
add
add
cmc
clc
push
fwait
mov
xchg
adc
lea
xor
mov
dec
adc
data16
enter
enter
icebp
and
ljmp
lret
dec
dec
mov
outsl
push
or
test
adc
inc
sbb
inc
mov
clc
aaa
fwait
mov
sbb
push
mov
arpl
lahf
mov
add
adc
dec
std
push
jns
mov
sbb
dec
xchg
pop
aas
dec
push
sahf
imulb
jecxz
pop
shr
out
and
insl
imul
adcb
lret
cmpsl
push
mov
xorb
into
jl
cmc
arpl
lcall
lock
mov
stos
mov
dec
je
into
stos
shll
mov
jl
cwtl
pop
outsl
out
inc
popa
add
insb
rorl
xor
mov
dec
mov
bnd
mov
fdivp
xor
scas
push
add
and
stc
cli
rclb
dec
movsb
roll
call
jb
adc
push
and
nop
sub
pop
adc
gs
movb
fdivr
sub
jmp
cmp
jp
in
sub
imul
push
bound
or
jno
jbe
adc
xor
insb
mov
popf
push
xchg
sbb
mov
dec
push
sub
xorl
mov
popf
bound
jecxz
loop
xor
loope
pop
jo
les
test
adc
clc
test
ret
sub
xor
out
inc
out
addl
dec
or
push
pusha
add
addr16
out
jl
pop
sti
dec
movsl
mov
popa
mov
fmull
mov
icebp
xchg
enter
cmpsl
in
sbb
pop
jl
push
jne
pop
add
lods
add
out
int
sub
xor
xlat
out
ret
subb
inc
xchg
test
sahf
push
inc
mov
sti
push
cld
int
adc
out
mov
imul
jne
jmp
sti
xchg
ss
mov
sbb
les
ficoms
add
test
cmp
fisttpll
mov
mov
or
push
or
or
add
call
or
or
sti
mov
add
sbb
jno
mov
mov
xor
notl
iret
outsb
jbe
push
int3
test
insl
aam
out
push
push
stos
imul
mov
mov
xchg
xchg
mov
jns
les
inc
mov
push
imul
xchg
jae
adc
xlat
loop
push
in
mov
dec
loopne
lret
or
cmp
mov
icebp
mov
imul
mov
dec
dec
std
into
gs
mov
outsb
js
mov
enter
push
sub
push
movsb
jnp
aaa
cmp
mov
xchg
or
out
and
fsubs
data16
jmp
dec
fcomi
push
jno
mov
mov
rcrl
gs
push
cmp
adc
cmc
sbb
push
sub
aas
adc
fcomps
mov
outsb
pop
test
test
xorl
xchg
test
rolb
shrl
mov
add
sub
dec
lea
sbb
add
mov
pop
mov
loop
out
stos
ljmp
scas
push
icebp
cli
push
add
fsub
cmpsb
and
outsb
xor
xlat
xor
jle
jae
imul
std
xchg
adc
jo
push
nop
loop
dec
add
xchg
in
push
mov
cmc
mov
hlt
repz
aas
lods
and
xor
int3
cmpsl
test
nop
sbb
imul
ror
daa
leave
add
or
subl
enter
push
and
add
jbe
pop
test
in
sbb
cmpsl
cmovo
fs
js
adc
sub
in
out
inc
mov
inc
ja
push
ds
sbb
sbb
negl
fstpl
movl
outsl
inc
sbb
and
shl
cmpl
rorb
scas
loope
iret
mov
inc
jle
and
mov
mov
push
mov
adc
cmpsb
mov
stos
xor
clc
maskmovq
idivl
mov
int
push
pop
cmp
mov
scas
jmp
enter
adc
in
icebp
stc
lock
and
adc
bound
mov
push
inc
sbb
push
inc
fsubr
mov
les
mov
cmp
movsl
aad
std
in
fnsave
idiv
adc
adc
hlt
sbb
sub
daa
cmpsb
into
ds
xchg
push
in
mov
ror
enter
dec
sub
push
paddsb
push
or
adc
mov
cli
pop
pop
xorl
test
mov
xor
or
jg
mov
fidivs
push
enter
and
movsl
xor
jle
jb
sarb
push
cmpsl
dec
mov
pop
inc
xchg
out
push
lea
stc
pop
sub
sub
adc
testl
je
push
movsb
daa
mov
mov
cmp
lods
and
cmp
jne
push
push
jmp
jge
xchg
add
xor
adc
das
cmp
adc
jg
push
jecxz
xchg
aad
gs
cmp
mov
mov
lds
dec
rolb
xchg
inc
ljmp
sub
imul
push
cmp
mov
dec
mov
cmp
xchg
test
pop
jbe
sub
das
adc
and
outsb
fisttpll
dec
jne
loope
xlat
fisubrs
jbe
jecxz
dec
shlb
dec
dec
cmpl
scas
mov
movntq
out
test
dec
jo
mov
test
and
data16
out
jns
cmc
nop
lock
adc
adc
dec
call
imul
add
mov
mov
xchg
aam
out
adc
and
adc
pop
cltd
andb
sbb
std
inc
jge
lahf
adc
pop
mov
sti
sub
push
mov
pop
ljmp
cld
push
in
pusha
dec
sub
mov
and
pusha
xchg
pop
aad
scas
stc
cmp
pop
push
inc
sbb
sbb
test
hlt
lcall
js
stos
fidivl
les
mov
inc
and
inc
loop
adc
add
cmpsb
shr
sub
or
imulb
lret
sub
add
or
fstl
in
mov
test
jge
pop
js
mov
or
mov
test
enter
jl
popa
lock
ss
arpl
stos
ret
mov
popa
jb
rcr
jmp
add
push
mov
pop
jno
ja
dec
pop
sbb
lods
dec
test
jg
out
outsb
mov
adc
movb
movsb
xchg
stos
loope
jns
xor
cmp
test
inc
imull
mov
or
das
es
ret
je
inc
cltd
sahf
hlt
push
push
cmc
call
pop
imul
xchg
jmp
sub
add
cmp
scas
push
lods
dec
jl
add
cs
pop
mov
cmp
xchg
jbe,pt
push
mov
xchg
pusha
jmp
leave
inc
decl
clc
mov
jns
mov
jecxz
das
jecxz
jg
inc
leave
and
je
sub
aaa
imul
leave
lods
adc
sbb
adc
adcl
dec
ja
sbb
mov
adc
mov
scas
movsl
mov
int
push
xor
sub
xchg
dec
dec
ds
push
lock
mov
mov
mov
mov
jns
dec
arpl
sub
cmp
lret
push
adc
mov
shlb
jmp
jns
repz
inc
in
enter
sub
inc
sahf
sbbl
jbe
jg
pop
nop
jl
inc
xlat
call
hlt
dec
insb
add
mov
adc
rol
out
enter
jae
cmpsb
stc
popa
dec
ret
jmp
cmp
xor
mov
incl
daa
mov
popf
sub
enter
sub
add
and
or
mov
cmp
or
cmp
in
mov
mov
in
pusha
mov
dec
lds
jne
push
sub
dec
fwait
dec
xor
xor
lahf
repz
cwtl
dec
mov
fsubl
push
mov
pop
add
scas
lods
push
dec
or
addr16
or
popf
or
sbb
sub
inc
sub
fwait
arpl
and
xchg
test
inc
out
jle
and
ret
loopne
loop
fs
sub
lcall
sub
lea
mov
idiv
mov
cld
int3
dec
ret
inc
pop
outsl
daa
mov
mov
popa
in
lods
or
sub
lods
xlat
sub
add
pop
and
or
imul
stos
xchg
adc
and
nop
mov
xor
jmp
or
jne
jns
in
mov
pusha
sub
and
insb
xlat
call
faddp
sahf
inc
jbe
push
out
dec
mov
cmp
pop
icebp
jbe
adc
mov
aaa
in
jo
hlt
cmp
pop
movsl
mov
aad
in
cmpsb
mov
rcr
push
mov
mov
cmpl
sub
loopne
repnz
or
inc
and
sub
or
add
addb
ljmp
in
clc
push
or
push
or
fbld
adc
xchg
sbb
add
xchg
sahf
jge
push
xlat
data16
inc
enter
jge
cld
mov
pop
popl
push
ret
std
insb
loope
insl
fldcw
adc
call
loop
inc
fdivs
cmpsl
cmp
mov
rcrl
adc
xor
hlt
inc
repz
xlat
adc
into
fmull
xchg
and
or
shlb
jno
pop
xor
jg
mov
xor
sub
aas
mov
inc
fstpt
cmpsb
push
xchg
fnstcw
mov
dec
mov
sub
push
or
shll
repnz
imul
imul
xchg
mov
ret
mov
fwait
in
in
scas
mov
mov
push
push
adc
sbbb
lds
pop
or
stos
push
xor
xchg
stos
mov
dec
in
imulb
dec
mov
mov
jnp
add
stc
xorb
mov
push
or
xchg
cli
popf
rep
into
cmp
sbb
shlb
icebp
push
or
xchg
mov
sub
dec
jg
out
ficompl
adc
xchg
xor
mov
and
push
mov
rcl
xor
ret
scas
repz
cs
jecxz
mov
sub
lret
pop
roll
in
dec
adc
or
and
xchg
repnz
fs
pop
pop
mov
sub
sub
scas
push
ret
sub
inc
sub
and
adc
and
cmp
jns
out
cld
repz
scas
les
mov
mov
mull
push
icebp
shrb
or
add
adc
lahf
push
and
ss
or
ss
dec
insl
xor
aaa
inc
out
enter
call
js
incl
popa
mov
int3
jge
fldcw
mov
sub
push
out
mov
lds
ret
xor
cmp
mov
ss
push
push
add
mov
clc
pop
fdivrs
cltd
sbb
imul
lods
repnz
mov
lahf
sub
dec
insl
xchg
lcall
xor
xchg
jmp
sub
sarb
hlt
fcmovnu
xor
mov
mov
xchg
cmpsl
push
xchg
aaa
xchg
cwtl
ss
sbb
outsb
xchg
aam
icebp
xchg
lods
sbb
mov
and
mov
stos
jmp
adc
cli
out
inc
or
xchg
imul
test
popa
aaa
fidivrs
push
mov
subb
jle
xorb
scas
mov
push
add
xor
ret
lea
fst
packsswb
test
in
mov
xor
inc
mov
aaa
in
lcall
bnd
fldt
mov
aam
push
cmp
inc
cli
aas
jne
aas
mov
and
xor
sbb
pop
loopne
ficomps
fucomi
cmp
pusha
scas
jo
sbb
mov
xchg
out
in
fnstenv
data16
or
inc
cmp
and
fwait
hlt
and
push
adc
lods
lret
sub
cmp
xchg
pop
and
sbb
lock
iret
in
xchg
push
add
xor
in
out
xor
imul
clc
cmpsb
mov
push
pop
lods
shl
cld
inc
and
test
jmp
movsl
mov
call
dec
mov
das
cmc
jae
or
pushf
add
repz
pusha
lock
dec
ds
mov
cmpsb
pop
clc
jns
inc
insl
inc
xchg
fildl
add
mov
mov
test
xchg
loop
sub
jmp
adc
push
dec
inc
testb
xor
or
rolb
sub
pusha
addr16
in
mov
lods
jne
fcmovu
mov
jle
hlt
pop
test
xchg
enter
or
clc
sub
inc
call
je
sahf
jg
leave
sarl
lea
dec
fucomi
mov
mov
or
push
jecxz
mov
icebp
inc
xor
dec
into
sahf
mov
push
test
outsl
sti
jnp
pop
outsb
in
popa
push
push
push
in
bound
lock
mov
mov
in
jl
push
dec
fwait
jmp
popf
xor
mov
dec
lds
lods
std
rcrb
std
mov
cmp
inc
aaa
outsl
mov
inc
sub
mov
mov
mov
xorl
inc
arpl
jle
inc
scas
pop
aaa
sub
pop
das
push
paddb
push
pop
decl
dec
sub
int
mov
imul
lahf
testb
pop
and
adc
add
sub
fidivrs
fistl
inc
jmp
push
repnz
lret
test
ja
pusha
cmp
movsb
test
pushl
outsl
push
mov
cwtl
out
loopne
and
lock
inc
and
icebp
cs
in
shrb
inc
jmp
mov
lods
out
call
and
rol
ror
xchg
ss
lods
test
movsl
mov
sub
push
outsb
ja
out
outsl
sbb
mov
or
cmp
xchg
and
xchg
pop
stc
xchg
cld
inc
xchg
outsl
ret
out
sbb
push
jle
adcb
xor
inc
in
add
sub
in
insl
push
add
sahf
pop
xchg
cmp
incl
es
shrd
cltd
inc
adc
dec
jae
aaa
cwtl
inc
sub
mov
arpl
mov
sbb
test
mov
repz
mov
negl
pop
jle
out
mov
stc
dec
mov
fists
addr16
dec
fadds
rol
cmpsb
stc
dec
pop
add
sbb
push
ds
dec
lock
das
addr16
jl
test
movsb
scas
fsubl
inc
loop
cmp
arpl
mov
mov
push
push
cwtl
dec
push
xor
jg
cmp
hlt
das
repz
fisubl
and
repz
mov
stos
aad
sbb
iret
or
and
xchg
xor
mov
shl
daa
xchg
inc
lcall
mov
repnz
sub
mov
in
rcll
lahf
sbb
js
rcr
add
js
idivl
xor
adc
faddl
movsl
test
fildl
mov
popa
mov
sbbb
xlat
dec
jg
lcall
mov
inc
bound
sbb
inc
aas
cmp
cwtl
and
pop
dec
daa
bound
xor
dec
lds
push
ss
insl
mov
mov
lcall
pop
gs
adc
scas
fidivl
jnp
les
outsl
jo
mov
outsb
sub
and
hlt
movsl
arpl
jo
xorb
ds
arpl
sarb
xor
loopne
cwtl
mov
jmp
mov
fiadds
stos
pop
cli
sbb
ja
push
inc
bound
out
or
sar
rol
pop
fidivl
or
loop
dec
arpl
and
and
cmp
add
adcl
lock
inc
dec
cmp
out
mov
orl
imul
int
std
decb
je
cli
mov
cwtl
dec
inc
or
mov
test
addb
add
ret
dec
icebp
aad
pusha
jecxz
std
xor
outsl
mov
xor
inc
sbb
aaa
sti
adc
out
fwait
or
sub
test
aad
jns
stos
jne
inc
xor
xchg
ret
adc
shll
loopne
aas
xchg
dec
out
repz
int
rcrb
test
shl
add
and
call
dec
ret
sbb
lcall
mov
cmpsb
mov
mov
sub
loope
imul
repnz
out
repz
push
adc
sbb
xchg
pop
dec
lock
sub
nop
aam
ret
mov
fstpl
int
push
or
test
mov
xor
sar
adc
es
popf
sbb
add
xor
dec
test
rorl
jne
xchg
fimuls
ss
ljmp
inc
cmp
je
sbb
pop
into
lea
push
dec
add
mov
adc
mov
out
insl
sti
popfw
mov
jg
sbb
jno
in
icebp
cmc
xchg
fwait
xchg
sub
inc
adc
mov
jmp
sub
mov
sub
hlt
iret
jp
mov
hlt
dec
repz
jne
pop
and
pop
and
stc
mov
push
test
dec
mov
and
popa
mov
rolb
jne
pop
sahf
out
into
inc
icebp
xchg
ret
sbb
or
arpl
adc
ds
enter
add
pusha
pop
mov
jno
inc
fists
out
insb
leave
cmp
mov
mov
pop
push
out
sub
ficomps
pushl
cmpsb
push
xchg
mov
scas
jle
mov
dec
inc
push
lea
sbb
test
push
sub
push
loope
pop
push
dec
pop
fistpll
mov
mov
scas
rcll
xchg
push
adcl
into
mov
jp
pushf
mov
inc
push
mov
dec
dec
ljmp
xchg
iret
mov
push
mov
or
icebp
sbb
push
out
xor
mov
clc
into
ficomps
std
push
mov
sbb
push
xchg
mov
pop
xor
cmp
test
mov
jno
repz
int3
aad
jo
mov
xorl
scas
je
in
leave
push
mov
stos
or
adc
lret
movsl
std
adc
dec
orb
cmpsl
push
dec
data16
xchg
pop
hlt
pop
push
pop
push
pop
lret
mov
cltd
add
mov
or
js
stos
jnp
repz
push
test
xor
push
push
pop
loopne
scas
add
pop
dec
out
or
push
aaa
mov
loopne
cmpsb
push
sahf
push
pop
stc
cltd
int3
lret
std
mov
mov
call
jo
int
lret
jl
shlb
pop
mov
rorl
lds
sbb
jno
mov
loop
popf
jge
dec
loop
xlat
les
inc
imul
xor
add
add
sub
ja
pop
xor
and
pop
stos
xchg
lcall
or
adc
or
ret
sbb
test
addr16
jle
sub
fadd
jle
jmp
cmp
xchg
mov
xor
rcll
mov
icebp
sbb
xor
sti
jl
lahf
inc
inc
daa
xchg
insl
outsl
outsb
sub
cmp
notl
arpl
fnstcw
sbb
and
out
into
jl
cmc
cli
xor
xchg
pop
les
out
jge
adc
addl
std
and
pop
outsb
xchg
mov
mov
inc
clc
out
adc
mov
xchg
out
in
popf
cmp
mov
ja
add
icebp
imul
and
int3
fwait
jmp
dec
add
outsb
push
adc
xchg
jb
mov
sbb
xchg
pop
imul
xchg
push
aad
pop
mov
push
mov
mov
push
inc
mov
out
stos
inc
out
pop
sub
sbb
movsb
aad
in
adc
cli
xchg
push
mov
clc
test
gs
mov
push
std
test
js
sbb
test
enter
aaa
xchg
jle
jno
lret
push
cltd
ret
jbe
adc
add
cwtl
jp
add
aad
jmp
std
mov
xchg
clc
dec
mov
sub
xchg
mov
adc
mov
stc
mov
movsb
jb
mov
loope
lds
add
and
mov
xchg
mov
sub
xchg
insb
add
sub
pop
scas
arpl
jmp
mov
call
mov
dec
cli
jge
jb
movsl
enter
mov
sbb
mov
add
push
hlt
ljmp
pop
adc
test
fisttpll
push
lods
push
dec
loop
cmp
int3
inc
mov
push
clc
sbb
push
cld
mov
dec
sbb
cwtl
mov
movsb
and
jo
daa
cmp
dec
fisubrs
pop
sbb
fdivl
sub
or
clc
xchg
aaa
adc
push
idiv
lret
mov
jl
pop
stos
roll
adc
dec
test
cmp
xor
cwtl
and
aaa
push
loopne
stc
fcompl
in
add
fisttps
daa
enter
loopne
outsl
inc
jmp
xchg
mov
in
cltd
add
cmp
popa
arpl
or
mov
sub
push
jmp
adc
jb
out
mov
loope
jnp
hlt
fsts
out
cmp
ret
adc
mov
pop
inc
dec
add
loopne
mov
push
sub
sbb
jbe
int3
pop
je
inc
mov
gs
stos
shll
add
fs
jl
lahf
loop
push
mov
or
and
jo
loop
add
sub
out
sahf
test
mov
cmp
loop
ljmp
mov
adc
lcall
sti
clc
mov
pop
gs
push
pop
popa
mov
xor
cmpsl
push
sbb
psrld
or
xor
add
aam
aam
push
clc
dec
jge
sbb
dec
mov
pusha
aam
mov
repnz
sbb
inc
icebp
out
pop
enter
xchg
repnz
daa
pop
jge
cld
repz
add
test
and
aam
mov
sbb
jge
mov
adc
lcall
mov
xor
std
cwtl
cmc
or
mov
popa
sub
dec
call
mov
sub
lods
shll
gs
mov
lods
sbb
pop
xchg
sbb
xlat
or
mov
mov
pop
ja
push
xor
lahf
cli
mov
mov
mov
xchg
das
ljmp
and
stos
jl
sbb
mov
dec
add
pop
xchg
add
xor
fldcw
gs
dec
lcall
out
pop
jp
lds
and
sub
rclb
inc
std
dec
inc
cmp
jo
push
mov
scas
mov
sti
jl
sbb
hlt
in
dec
ffree
fidivs
sbb
in
adc
jecxz
ficoml
loope
lea
lock
cld
or
shr
inc
dec
add
push
stos
stos
or
inc
jns
mov
xchg
ja
mov
ss
shr
push
iret
es
repz
sub
push
stos
pop
sbb
jg
push
push
lods
sbb
mov
jle
push
mov
cmp
lret
stc
pop
sub
mov
outsl
movsl
jp
dec
fisttpl
fwait
cmp
rorl
or
jb
mov
inc
fdivrs
divb
xor
lock
sub
mov
fisttpll
aaa
dec
xor
mov
cmp
mov
incb
pop
sbb
addr16
sarb
call
mov
clc
int3
outsb
dec
pushf
mov
addr16
lods
or
push
testb
or
sub
push
dec
xchg
pop
mov
adc
jne
cli
test
mov
ret
xor
mov
jb
jle
cwtl
movsl
jne
cli
sahf
cmp
adc
add
cltd
int
fimull
data16
dec
pusha
add
shl
pop
out
add
xor
xchg
fdivs
jge
jge
jb
in
outsl
mov
cltd
ja
inc
adc
and
mov
push
pop
mov
in
insl
mov
idiv
je
arpl
ds
xor
xchg
adc
std
xlat
push
fidivrl
repnz
push
sub
xchg
mov
in
dec
push
leave
lcall
test
into
sub
cs
scas
xor
in
sub
std
jnp
add
sub
push
sti
push
daa
xchg
lods
inc
or
cmpb
icebp
xchg
shrb
stos
mov
hlt
or
xor
cmpsb
jg
lea
cmp
nop
fsubl
out
in
push
in
hlt
inc
mov
xchg
ds
dec
mov
pop
push
push
dec
jnp
jnp
sbb
addl
or
aad
mov
int3
lock
dec
minps
pop
sub
cs
or
imul
cld
addl
cmp
pop
adc
mov
xchg
mov
sahf
pop
push
outsl
cmc
jns
and
sub
es
jg
inc
lock
rcrb
and
cmp
roll
or
or
xor
jecxz
push
xor
adc
mov
dec
cmp
sub
cmpsb
fisttpl
adc
rcll
rcll
pop
mov
and
push
xchg
rcrb
push
inc
in
in
xor
lahf
mov
and
push
popa
lods
jg
pop
mov
mov
fistl
stc
pop
xchg
jecxz
int3
sbb
je
sub
movsl
cltd
sub
xchg
fcmovnb
ficoms
js
and
and
shlb
and
or
sub
push
in
ret
jge
push
add
mov
test
loopne
test
ljmp
push
fcmovu
jp
inc
sub
sub
popf
jbe
scas
cmc
call
mov
push
cmp
jnp
pop
and
pop
int3
xor
int3
adc
int
jmp
popa
xchg
fdivrl
sahf
push
jb
sbb
imul
dec
daa
sbb
into
and
es
cmc
dec
out
jp
cmc
push
pop
pop
sbb
jb
jg
add
push
jp
mov
lods
xchg
shlb
jo
iret
xchg
pop
imul
adc
loop
push
jg
gs
sbb
xchg
gs
push
and
or
adc
lods
pop
push
mov
rcrl
aad
inc
jb
dec
inc
lret
ror
xchg
push
bound
aam
call
xchg
xchg
inc
jg
lds
subb
jnp
gs
push
mov
iret
jnp
cmp
xchg
mov
cmp
xor
test
sub
jns
pushl
sub
clc
hlt
popa
sbb
fidivs
jp
call
fisubs
pop
mov
xor
outsl
lock
add
lahf
pop
add
lock
outsl
push
ds
fldl
jae
push
mov
pop
adc
xchg
das
push
add
cmpsl
pop
cld
jecxz
xchg
andl
call
cmc
adc
cmp
push
mov
sbb
and
inc
sbb
xor
cmp
adcb
dec
xor
sub
pop
pop
mov
adc
push
push
lea
popa
aas
pop
stc
mov
mov
arpl
xchg
jge
cmp
xor
mov
imul
cmp
fcompl
jb
int
dec
es
and
hlt
adc
ret
cmpsl
xchg
lahf
sub
cs
fnsave
jmp
cwtl
scas
jo
or
mov
sar
mov
mov
mov
pop
in
pusha
cwtl
dec
dec
or
fsubrl
or
sub
pop
cmpsb
shlb
add
repnz
or
sbb
push
fsubp
imul
cmp
aam
cmpsb
leave
mov
call
aam
ficomps
aas
sub
adc
cmp
lcall
data16
dec
cmpsb
shlb
xlat
push
xchg
jo
push
int
mov
or
xor
gs
lret
jle
or
out
xchg
insl
sbb
loop
jle
mov
mov
dec
fstpl
stc
loope
dec
fidivl
nop
sub
dec
js
dec
sub
and
push
inc
sub
rorb
add
sub
mov
jmp
shlb
dec
in
ss
fcompl
cmpsl
mov
sbb
scas
inc
jge
mov
mov
xor
popf
jno
pop
xor
jb
xchg
lret
mov
or
aas
xor
xchg
push
push
and
clc
mov
icebp
int
jns
cmpsb
vrsqrtss
popa
jno
pop
ja
mov
hlt
fimull
fdivr
movl
das
je
push
or
add
mov
gs
in
addr16
inc
xor
mov
jbe
push
roll
sarl
mov
in
adc
dec
sub
xor
mov
std
xor
sub
pop
or
sub
dec
push
aam
mov
clc
cmp
sub
jbe
out
mov
and
fmull
push
ds
pop
cmc
push
cmp
sbb
and
mov
and
into
jg
test
cmp
lods
icebp
leave
ds
adc
cli
in
gs
push
ret
test
xchg
out
adc
fcmovbe
xchg
or
pop
sbb
rcrl
cld
sahf
xchg
xchg
sbb
jo
insl
mov
insb
mov
out
aad
out
in
subl
sbb
mov
pop
daa
adc
push
mov
cli
cmp
inc
cmp
push
jge
pushf
out
push
cld
movsb
xchg
push
jns
adc
shlb
adcb
fildl
pushf
xor
in
ds
mov
das
and
push
enter
test
inc
xor
add
jg
movsl
fucomip
or
inc
test
out
pop
mov
inc
fwait
mov
mov
test
loope
out
outsb
xor
cwtl
cmp
pop
mov
loope
test
aam
out
hlt
outsb
ret
cltd
sahf
mov
mov
addr16
lahf
into
loope
movl
shl
mov
pop
and
aad
xchg
jb
enter
pop
jo
jbe
cmp
mov
mov
xchg
hlt
mov
dec
clc
and
jge
nop
aad
mov
pushf
sbbl
in
lods
jns
push
call
test
sub
addr16
adc
popf
int
mov
inc
loopne
mov
xchg
out
push
xchg
dec
pop
sbb
lods
stos
sub
sbb
xchg
stos
test
hlt
test
xor
pop
inc
inc
or
push
pop
xor
fnstenv
jg
mov
cvtdq2ps
xor
push
loope
dec
fnsave
push
cmp
mov
roll
mov
push
mov
mov
pop
sbb
jmp
or
cmpl
cmpsb
rorl
add
sbb
pusha
inc
cwtl
lret
fbld
add
mov
xchg
jp
fs
sub
insl
jecxz
push
inc
add
loop
cmp
lock
aam
je
fsubs
lcall
xor
mov
jno
lret
xor
add
sbb
jmp
sub
stos
jp
or
or
int
fmul
orl
mov
fstps
push
sub
pop
fwait
dec
or
sub
fprem
jb
cld
or
mov
dec
mov
push
lods
cmp
std
test
mov
in
cmp
add
xchg
jo
add
popa
inc
icebp
lds
stos
mov
dec
inc
das
push
xchg
mov
repnz
and
insl
mov
cltd
aad
jnp
mov
cmp
iret
and
cmp
nop
add
arpl
push
loopne
orl
xorl
mov
imul
cs
jl
xchg
inc
pop
leave
jmp
mov
pop
lcall
mov
mov
adc
ffree
pop
or
mov
adc
jecxz,pn
sar
or
cmpsl
dec
pushf
fnstenv
ficoml
add
xchg
je
fldl2t
xchg
iret
lds
sbb
jmp
adc
ja
sarl
xchg
inc
and
test
movsl
ret
dec
insb
lods
inc
jns
mov
cmc
mov
adc
or
push
or
jns
pop
sti
inc
stc
lds
sub
xor
inc
outsb
pop
nop
aaa
mov
dec
mov
into
mov
jge
jnp
lcall
jno
insl
xor
dec
adc
imul
lods
mov
out
loopne
jmp
xchg
cmc
mov
and
inc
mov
inc
out
enter
push
and
daa
stc
pop
push
fadd
push
cmpsl
fimull
cmpsb
out
inc
lock
outsb
fidivrs
pop
mov
cmp
inc
push
call
lods
cmpb
ret
mov
jmp
sahf
nop
lcall
scas
leave
loope
cmpl
je
ret
xor
xchg
xchg
and
xchg
mov
xchg
push
mov
adc
mov
jecxz
xor
sbb
mov
xor
inc
lret
es
out
jge
lret
sub
mov
inc
jae
pop
push
jmp
into
xchg
es
adc
dec
lods
xchg
loope
jl
in
jbe
ljmp
iret
xchg
jbe
andl
push
addr16
push
and
sbb
fptan
mov
pop
cmpsb
and
cmp
cmpsb
push
daa
xchg
loopne
add
test
pop
decl
bound
mov
jecxz
xchg
cltd
xchg
xchg
cmc
fistl
xchg
std
jo
insb
push
aad
lock
dec
roll
push
mov
stos
mov
sbb
pusha
xor
inc
stos
scas
and
das
cltd
add
push
pop
loopne
jns
std
add
inc
loopne
mov
scas
int
out
xor
or
cmp
ret
xchg
lods
ret
jnp
ret
in
jno
popa
xchg
mov
push
push
pop
inc
popa
lcall
inc
ret
lret
adc
out
ror
es
minps
repnz
popa
xor
xchg
loopne
dec
add
enter
mov
mov
sub
push
sub
imul
mov
ret
ret
ret
mov
and
pop
cli
adcl
mov
jp
mov
lcall
bnd
roll
rcrl
sbbb
outsb
cmp
mov
stc
push
jp
inc
rolb
mov
scas
lods
ss
in
jo
pop
push
mov
hlt
jne
fstps
mov
cs
dec
push
or
or
cmpsb
mov
pop
test
iret
pop
and
inc
add
xor
lods
mov
mov
pop
ret
add
outsb
mov
insb
clc
cmp
adcb
sbb
mov
inc
inc
arpl
push
sbb
push
hlt
jno
scas
cmp
push
outsb
pop
std
ret
jno
movsb
cmpsl
movsb
xor
loopne
gs
shl
jae
add
in
or
fwait
stos
pop
inc
jge
das
hlt
lds
adc
inc
and
push
cltd
push
out
adc
push
cmp
pop
xchg
sahf
test
add
adc
or
sbb
fbld
leave
adc
das
cli
mov
mov
adc
and
jmp
pop
or
lahf
mov
fnsave
mov
cmpsl
lret
pop
lods
jnp
lods
mov
lret
in
es
sbb
sbb
div
arpl
push
dec
push
cmpsl
push
cmp
fisttps
and
mov
dec
xor
dec
mov
xor
xchg
sub
xchg
sub
inc
pop
xor
pushf
sahf
sbb
cmp
addr16
mov
lcall
adc
inc
addr16
xchg
cwtl
fbld
jge
or
lock
sub
nop
loopne
dec
out
dec
data16
push
in
jne
sti
loopne
test
clc
or
sahf
push
test
inc
neg
mov
and
jb
scas
inc
push
xchg
jno
pushf
and
fwait
inc
test
mov
sub
push
or
popf
call
adc
in
add
and
add
sbb
mov
add
adc
mov
cmp
pop
sub
dec
cmp
dec
ds
jle
pop
add
or
mov
sub
jnp
jmp
insb
adc
mov
aas
out
cld
dec
leave
or
jge
cmpl
mov
mov
adc
testl
mov
pusha
adc
jns
adc
jge
and
xor
iret
dec
dec
aas
fidivrl
mov
lcall
cltd
mov
inc
jge
mov
out
mov
or
and
mov
cmp
mov
hlt
jmp
sbb
lret
mov
adc
movsb
dec
stos
mov
rorb
mov
lock
add
cmp
std
orb
adc
fnclex
addr16
adcl
mov
mov
jmp
repnz
movsb
sub
cli
mov
xchg
add
lea
sbb
dec
and
xlat
aad
push
std
jb
test
sbb
adcb
int
dec
push
outsl
lds
jae
lods
pusha
out
mov
addr16
out
sub
shll
gs
stos
sahf
push
push
mov
ret
cmp
mov
lds
mov
sti
lret
mov
mov
fisttps
mov
loope
adc
icebp
pop
aas
and
js
dec
popf
cwtl
push
mov
lea
movsb
fnstcw
inc
xor
rclb
mov
outsl
out
xor
call
or
jno
inc
pop
jecxz
jge
or
rorb
xchg
mov
pop
dec
cltd
arpl
jne
mov
fcoms
mov
cld
fcmovbe
mov
lret
dec
subb
dec
leave
mov
and
jecxz
mov
jns
test
dec
sub
dec
or
daa
sahf
push
sahf
mov
xlat
xchg
fidivrl
push
enter
inc
pop
sub
xchg
ljmp
jle
dec
push
pcmpgtw
and
sahf
or
cmc
mov
mov
rolb
test
inc
aad
add
cmpsl
dec
inc
scas
ja
in
in
testb
stc
adc
sbb
adc
adc
cmp
mov
cwtd
jmp
xchg
outsb
adc
adc
scas
stos
dec
js
xchg
ljmp
and
mov
xchg
xor
sub
out
add
add
mov
xor
fcoml
aaa
dec
mov
xor
mov
pop
popa
hlt
mov
outsb
mov
les
adc
and
add
fsubs
add
add
push
and
xchg
fucomip
adc
ret
sub
xor
or
xor
push
arpl
jb
sbb
xor
in
cmovg
dec
iret
pop
jl
adc
push
push
rcll
test
dec
fcomps
cmp
lods
in
dec
mov
push
cmpsl
insl
testl
mov
inc
jns
shl
xchg
push
in
idivl
shrb
gs
xchg
aad
jae
test
out
pop
mov
bound
xchg
in
xorl
enter
push
test
push
bound
or
aad
mov
leave
jl
loopne
mov
cmpsb
inc
stos
js
push
cli
insl
sbb
push
sbb
imul
jne
out
mov
es
js
push
sub
pop
lret
fiaddl
and
push
sbb
jae
inc
js
icebp
jle
cmp
push
in
test
mov
jl
insb
jmp
cmp
push
inc
mov
sub
or
mov
out
and
stc
into
sbb
clc
sub
ljmp
mov
jmp
mov
jae
cmp
and
mov
shll
and
dec
enter
neg
dec
or
and
fildl
jns
or
dec
insl
push
data16
movsb
sub
pop
mull
lret
mov
fists
jg
xor
jo
mov
push
push
ret
popa
cmpsb
mov
mov
in
add
sbb
les
aaa
mov
jl
push
mov
xchg
dec
cmc
lahf
xchg
fwait
rcl
xorl
push
push
lret
mov
pushf
cld
add
std
outsb
ss
test
bound
loop
push
ss
imul
dec
popa
pop
bnd
pop
shrb
fcmovbe
push
push
cmp
insb
dec
call
cmpsl
out
aas
mov
shlb
cmp
cmp
fisubrl
inc
in
shlb
rol
or
lods
imul
fwait
movsl
icebp
dec
dec
aaa
or
pop
mov
rdpmc
and
test
ja
pop
test
xchg
arpl
out
mov
push
lods
sbb
adc
push
rclb
movsb
add
mov
sbb
inc
jae
add
xchg
xchg
out
rolb
jno
and
and
and
and
lcall
jle
pushf
pushf
fstl
dec
cmpsl
pop
enter
push
in
loop
data16
push
lods
sahf
cmp
inc
mov
xchg
js
push
push
out
sbbb
leave
sbb
mov
shll
stos
clc
mov
popf
das
ret
in
ret
sub
sbb
pop
lock
out
mov
mov
or
jnp
test
push
mov
dec
gs
inc
enter
pop
jl
pop
sbb
xor
sbb
arpl
imul
daa
mov
int
pushf
sti
mov
pusha
mov
pop
pop
orb
push
jmp
sbb
je
cmp
stos
cs
shrl
stos
cltd
lcall
cmp
xor
inc
xchg
repz
add
cmp
jb
pop
push
lds
push
int
adc
pushf
cmp
cmp
enter
pop
dec
or
int
repnz
sbb
xchg
shll
sbb
sub
movsl
outsb
pop
mull
movsl
and
pushf
sub
jge
fiaddl
outsl
fistpl
loope
xor
mov
fnstsw
dec
add
mov
push
scas
pop
subl
hlt
and
adc
js
jg
and
hlt
cmp
jg
fdivl
aaa
outsl
lret
cmp
adc
sub
aaa
push
add
and
mov
jb
loopne
dec
fadd
mov
jmp
cltd
add
xor
int3
add
xor
pop
mov
xor
xchg
adc
add
daa
fisttpl
sbb
mov
ss
mov
lcall
mov
pop
sbb
or
sub
nop
daa
xchg
jl
sbb
mov
inc
or
gs
aas
popa
data16
adc
popf
bound
je
roll
out
movsb
ds
mov
xchg
iret
adcl
outsl
std
insl
out
lahf
dec
xor
mov
out
push
and
mov
xchg
outsl
mov
xchg
pop
fisubl
jl
push
cs
push
ljmp
sub
mov
divl
cmc
insb
mov
cmp
mov
icebp
sub
fildll
rcrl
int
mov
pop
stos
adc
push
add
stos
mov
cs
or
mov
pop
ds
fs
punpcklwd
adc
in
adc
add
sub
cmpsb
iret
in
sub
icebp
sub
js
and
dec
mov
mov
jae
mov
pop
adc
pop
xchg
movsb
pop
or
add
mov
fcoms
mov
lods
add
fstl
jecxz
xchg
dec
xor
outsb
lds
mov
subl
mov
in
cmc
insb
ja
fstpl
dec
int3
pop
pop
es
aam
xchg
jmp
jno
jns
fs
fmuls
xchg
xchg
push
insb
adc
xor
fwait
push
pusha
jg
adc
stc
jecxz
lret
sarl
add
shr
mov
or
xchg
and
push
mov
push
sbb
sbb
cs
imul
and
clc
adc
cmpsb
cs
call
cmp
adc
dec
mov
cmpsl
mov
imul
insl
push
dec
add
mov
xor
adc
mov
lahf
fcompl
and
das
loope
cmp
lcall
in
out
rdpmc
fs
pop
mov
dec
pop
or
xor
lea
xor
or
shlb
sti
mov
xchg
pushf
mov
xchg
les
fsubrl
mov
xor
mov
sbb
aaa
aaa
in
mov
sti
pop
daa
inc
iret
rcl
mov
pop
test
mull
mov
orb
cltd
imul
dec
fldt
pop
dec
mov
js
push
dec
mov
out
push
add
mov
bound
js
xchg
sub
pusha
fcomps
into
inc
xlat
shll
lcall
push
and
xchg
int3
pusha
test
jns
push
mov
xor
sbb
imul
iret
pop
pop
pop
dec
lock
push
xorl
push
sbb
flds
push
sahf
and
imul
inc
ret
in
mov
notb
xor
and
xchg
xlat
enter
stos
and
push
inc
ret
or
push
loope
adc
cmp
xchg
inc
sbb
and
inc
fdivrl
adc
sub
push
or
and
movsl
in
movsl
daa
ss
sahf
in
popf
xor
cmpsb
adc
movsb
add
xor
hlt
add
aaa
add
xchg
movsl
cmp
ljmp
mov
cmpsb
pop
outsb
cmp
inc
dec
cmp
pop
mov
xor
out
mov
jg
push
ja
xchg
cmpsb
fistl
sbbl
lret
mov
sub
mov
jno
repz
popa
cmp
pop
cmpsb
mov
mov
clc
mov
add
into
mov
xchg
test
loop
adc
push
jbe
ljmp
and
pop
arpl
sbb
mov
cmc
pop
mov
lods
fnsave
xor
xchg
jne
ljmp
call
add
call
push
cmp
mov
sar
lds
ljmp
sarl
aam
lret
les
enter
adc
pop
or
mov
dec
cmp
cwtl
mov
mov
fnstenv
mov
push
shlb
inc
outsl
lods
cwtl
ss
add
adc
cmpsl
outsl
sbb
lods
sub
add
inc
xchg
flds
mov
mov
mov
xchg
xchg
bound
fiaddl
mov
jmp
or
out
mov
or
outsl
jno
lods
js
scas
fsts
sub
xchg
cmp
push
cmc
addb
lds
mov
push
push
fcoms
or
dec
dec
jle
add
mov
ss
dec
sub
xorl
dec
jb
jb
adc
jp
inc
add
stos
and
jg
movsl
jge
sbb
xchg
jecxz
xchg
or
fmuls
loop
in
mov
fcmovne
cltd
inc
fldenv
insl
cltd
xor
mov
jmp
pushf
sub
add
push
jno
mov
cmp
test
popl
jmp
fiadds
aas
adc
xchg
out
push
inc
mov
sti
lods
lods
push
push
push
test
mov
cmp
stos
addr16
mov
scas
or
inc
xor
incl
push
stc
out
movsb
repz
outsb
push
in
les
adc
adc
and
aam
lods
lock
xor
adc
jmp
mov
leave
mov
rclb
cmc
xchg
jmp
mov
inc
out
stos
scas
jae
cmp
push
inc
dec
arpl
push
loope
lret
sti
lea
sub
ds
cmpb
xor
lret
jns
sub
inc
sbb
cld
adc
push
and
mov
mov
mov
bound
stc
scas
sub
das
jmp
cltd
or
hlt
ja
fiadds
clc
out
xor
push
xor
imul
fbld
or
sbb
orl
dec
daa
mov
xor
lea
push
cmpsb
gs
xor
addr16
fisubs
cmpsb
jns
cld
push
xchg
aas
cmp
mov
mov
adc
xchg
in
mov
imul
dec
subl
addr16
in
jns
dec
das
xor
insl
pop
fnstcw
pop
shlb
jns
xchg
or
lds
or
xchg
jo
inc
fwait
stos
cli
mov
test
sti
push
out
cltd
xchg
aad
fistps
rcrl
iret
leave
lahf
pushf
jae,pn
xchg
lret
into
cmpsl
loope
cmp
dec
mov
push
cmp
mov
imul
jnp
je
sbb
sub
outsb
int3
mul
aad
cmc
jp
cmp
mov
into
fwait
in
and
in
push
les
xchg
lahf
jge,pn
mov
pop
cmpsb
icebp
es
outsb
and
or
pushf
ds
insb
lea
add
shrw
xchg
mov
sbbb
mov
sbb
fstpt
imulb
cmp
fucom
out
fcoml
inc
mov
and
notl
and
cmp
fwait
clc
out
dec
enter
lcall
inc
out
mov
shl
sbb
add
movb
cltd
stc
and
inc
jmp
pop
inc
jns
fsubs
cmp
or
loopne
xchg
int
dec
lods
sub
cmp
xor
fiaddl
notl
pop
leave
lods
fdiv
cmpsb
lds
std
scas
jmp
pop
cmpsl
mov
pop
lds
fwait
cmp
fiaddl
dec
iret
out
pop
int3
imulb
iret
sbb
pusha
xchg
shll
dec
sub
and
cli
dec
mov
std
iret
enter
mov
loope
xchg
daa
mov
mov
add
sbb
loope
imul
sbb
andl
daa
mov
fcom
cmc
add
xlat
test
mov
adc
scas
inc
or
pop
cmp
out
or
in
dec
into
xchg
push
cmpsb
nop
addr16
fwait
sti
xor
out
xor
inc
pop
lret
and
imul
jnp
push
jge
adcl
inc
scas
sbb
mov
adc
subb
push
imul
inc
pop
and
stc
or
aam
loope
push
out
adc
cmp
mov
popa
adc
dec
push
xchg
stc
xchg
out
jbe
add
out
cmpsl
xchg
aam
es
fstl
imul
dec
sub
test
fisubrs
rcrb
jns
inc
mov
jb
aaa
or
aad
or
jg
jl
xchg
push
ss
jne
sub
sub
sbb
pop
jmp
mov
in
sbb
into
aam
mov
push
dec
dec
iret
cli
inc
test
inc
pop
stos
mov
out
pop
imul
mov
movsb
lea
lock
inc
cmp
insb
push
xor
pop
jmp
push
stos
fistpll
loop
mov
jp
sbb
lret
mov
jo
mov
aam
nop
movsb
rclb
mov
les
fisubrl
sahf
lret
add
push
shll
cmpsl
mov
imul
sbb
out
mov
loope
loope
leave
adc
add
xchg
mov
insl
cmp
cmp
jbe
testl
and
les
movsl
xchg
sub
enter
mov
mov
sub
icebp
pusha
mov
mov
pop
dec
outsb
sbb
iret
jbe
rcr
xor
fcomps
push
rorl
test
sub
aaa
add
sbb
loope
enter
out
cs
stos
in
fisttpl
sbb
in
in
push
cmp
mov
sbb
pushf
and
mov
aas
inc
pop
sbb
sub
or
adc
lods
and
mov
or
ljmp
mov
sub
xor
cli
jbe
lret
shr
iret
sub
ljmp
mov
nop
cmp
nop
enter
in
hlt
addl
mov
insl
mov
sub
aad
imul
add
add
in
idivb
lods
cmp
shll
ss
jb
imul
das
xor
push
push
loope
jmp
lds
lahf
push
dec
push
and
mov
xlat
repnz
sbbl
fwait
aam
sub
dec
dec
or
jmp
mov
adc
or
lret
test
cmpb
test
clc
call
ret
out
cmp
lcall
std
mov
js
pop
adc
xor
pop
cld
xor
pop
pop
xchg
ficoml
ss
mov
xchg
xchg
inc
inc
ds
or
aad
xor
bound
or
pop
outsl
mov
xor
sbb
cmp
stos
int3
fsubp
rcll
in
xor
cmp
jo
pop
dec
out
add
int3
repz
and
call
mov
int3
dec
mov
dec
cmpsb
fldt
fsts
push
add
pop
pushf
mov
dec
xor
stos
sub
cmpsb
outsl
xchg
mov
lahf
push
idivl
mov
jl
and
pop
out
hlt
into
jb
xcrypt-cfb
cmpsl
cmpsl
test
push
sbb
xchg
cltd
repz
scas
out
outsl
out
adc
dec
xlat
mov
lods
inc
sbb
adc
insl
test
fstpt
cmpsb
rcll
xor
dec
cmc
cmp
aaa
jno
les
mov
push
scas
inc
xchg
repnz
mov
scas
sub
std
xor
and
xor
lods
lahf
cli
mov
dec
insb
bound
jg
or
mov
xchg
stos
xchg
imul
cmp
shrb
inc
xchg
gs
mov
pop
xchg
scas
add
movsb
or
mov
clc
test
inc
aas
js
stos
add
les
mov
ljmp
ljmp
and
ret
fidivs
inc
mov
mov
lods
push
fnstsw
sti
xchg
push
aam
add
mov
fildl
pop
pushf
inc
lods
adc
fcoms
mov
mov
or
out
pop
jbe
ret
xor
mov
xlat
push
push
push
cli
xchg
jb
xchg
or
stos
cmp
mov
shlb
lahf
mov
dec
push
in
xor
push
cmp
std
and
icebp
fistl
ret
dec
sbb
and
adc
rcll
in
mov
xchg
or
divb
jecxz
pop
push
pop
negb
test
repnz
dec
mov
ret
ret
lods
repz
lcall
xchg
in
aad
jge
out
sub
fsts
dec
adc
pop
push
lock
idivl
mov
sub
cmp
mov
out
lock
out
clc
hlt
add
push
fucomi
jo
insl
push
mov
out
das
jl
xchg
xor
mov
das
std
lret
pop
or
js
dec
push
push
test
rcrl
arpl
mov
dec
les
mov
inc
rolb
jo
jbe
jmp
cmp
push
std
arpl
push
sbb
cmp
mov
push
and
jmp
mov
xchg
push
xrelease
pop
popf
sub
inc
adc
push
sub
mov
fs
out
lret
xchg
fs
inc
lret
fnstcw
imul
add
in
or
mov
test
push
dec
and
fidivrl
sahf
pop
adc
jle
outsl
or
adc
and
outsl
lcall
ds
outsl
imul
inc
lea
outsl
pop
xor
sub
adc
inc
xorb
mov
subb
mov
fstp
inc
or
int3
cmpsb
in
add
outsb
shrb
lds
jb
ss
sub
push
insl
pop
out
or
loop
hlt
cmp
xchg
jmp
jno
sub
imul
jno
gs
andl
mov
rcll
pop
test
lods
xor
mov
xor
push
js
jg
bnd
pop
iret
sub
pop
cwtl
sub
call
inc
sub
std
pop
mov
xchg
cmc
jl
sbb
and
mov
mov
push
rorb
dec
sub
mov
cmp
pop
jmp
or
into
adc
ret
stos
lcall
cli
ret
lods
hlt
mov
in
xor
stc
push
test
in
fmull
inc
adc
lock
sarl
xchg
mov
arpl
xchg
jmp
mov
mov
push
jae
pusha
or
imul
dec
xchg
enter
pop
xchg
sub
inc
push
fisubs
shl
shll
int3
in
sarl
push
pop
xchg
xchg
sbb
mov
or
outsb
std
gs
lods
sbb
mov
pop
mov
es
cmpsl
jne
sub
cmp
mov
adc
shl
add
sti
dec
and
loop
data16
in
xchg
jb
std
rcr
icebp
fiadds
push
jmp
or
sbb
jb
mov
xlat
or
inc
jns
pusha
out
insl
add
or
push
adc
hlt
iret
mov
lret
jae
jnp
mov
sub
scas
roll
imulb
loopne
jae
and
push
add
outsl
dec
sub
jge
shrb
jae
inc
into
test
xchg
mov
dec
push
xchg
cmpsb
mov
sti
push
divps
lods
cwtl
jno
into
dec
fsub
cli
insb
jecxz
pop
inc
jge
iret
adcl
jmp
add
lret
push
push
sub
out
lea
jae
pop
fidivrl
mov
cwtl
outsb
sub
aam
mov
aaa
or
sbbb
push
test
fmulp
push
sbb
sbb
mov
arpl
rcr
mov
or
pop
dec
sbb
ficomps
xor
adc
pop
jb
and
sbb
mov
pop
push
xchg
or
xor
jecxz
clc
fadd
movsl
jmp
fwait
lahf
cli
jae
push
repnz
in
xor
pushf
bound
cmp
pop
stos
fstl
pop
cwtl
and
jp
mov
ret
insl
ret
mov
mov
inc
loopne
repnz
mov
inc
repz
xor
mov
nop
xor
int
jne
fsts
adc
mov
jne
cmp
sbb
pop
fs
push
pusha
les
mov
imul
add
or
test
sbb
or
adc
scas
dec
pop
mov
int3
xchg
push
lds
pop
inc
and
mov
shrb
leave
in
sbb
hlt
fcomi
sbb
mov
xor
mov
lods
imul
adc
arpl
push
fbld
xchg
in
pop
lcall
sbb
setle
xchg
or
xchg
loop
and
ja
pop
fisubrl
adc
imul
jae
call
mov
mov
jmp
sub
lcall
sub
int3
gs
call
loope
in
inc
je
pop
mov
sub
inc
or
mov
aaa
ja
test
inc
jl
int3
inc
mov
leave
stos
xchg
adc
add
addl
test
pop
adc
test
sub
call
mov
aad
and
cmp
cmp
fstpl
outsl
insl
jecxz
lock
dec
push
out
or
lcall
dec
out
fisttpll
jg
push
imul
in
shrl
sbb
ret
push
xchg
cmp
adc
sbb
cmpb
fwait
inc
stc
adc
mov
xchg
loop
faddl
inc
push
je
scas
into
fimuls
xchg
sub
mov
imul
fiaddl
movsb
lret
aas
je
repz
pop
xchg
jl
popf
pop
push
daa
lock
in
and
push
sub
testl
jg
loopne
popf
or
pop
inc
mov
jns
and
mov
cwtl
mov
cmp
mov
xchg
stos
sbb
and
push
aaa
jno
xlat
cmpsb
fisttpll
cmp
xor
sahf
inc
xchg
ss
mov
pop
std
test
sbb
dec
in
fmulp
sbb
cmc
addb
aam
test
cltd
subl
xchg
cmp
pop
test
jns
fimull
fdivl
and
pop
bound
mov
cmp
jmp
dec
repz
sub
mov
and
aaa
mov
mov
int
inc
and
mov
mov
int3
push
outsb
push
aas
cmp
js
and
xor
and
ret
mov
jge
shr
cmp
mov
dec
or
cli
dec
cld
mov
pusha
out
add
mov
les
les
loop
sar
inc
mov
cmp
push
adc
inc
and
cmp
clc
pop
dec
mov
in
push
arpl
add
or
loop
inc
xlat
push
push
push
loope
out
das
out
aam
lods
inc
daa
mov
pop
pop
mov
or
daa
sbb
fs
inc
loope
jg
pop
leave
xlat
and
push
cmp
add
test
xor
sbb
cld
sub
pop
cmp
inc
push
dec
cld
cld
js
add
add
xchg
dec
lret
mov
mov
fwait
cmp
xlat
push
jbe
repnz
push
outsb
pop
xchg
and
adc
stos
pop
jmp
lds
add
cmc
repnz
in
push
sub
mov
testl
imul
test
adc
leave
leave
xchg
int
imul
and
xchg
lcall
mov
gs
pop
mov
adc
dec
fisttpll
xorl
mov
push
lahf
jnp
add
jge
mov
pop
push
jbe
movsl
ds
and
rorb
push
leave
sub
arpl
or
aaa
les
mov
jle
push
mov
fldt
mov
stos
int
xchg
and
mov
jns
subl
hlt
ljmp
xchg
cwtl
mov
mov
bound
xor
clc
cmpsl
cmc
add
and
push
sub
nop
inc
adc
ja
inc
or
jo
push
insl
mov
adc
pop
loopne
rcrl
imul
sbb
in
outsb
xchg
mov
aas
mov
push
jne
xor
test
pop
in
fisubrs
dec
cmp
inc
gs
jae
imul
jnp
cmp
sbb
push
push
rcl
shlb
xchg
ljmp
stc
fsts
ret
lcall
jl
add
and
lods
xor
or
push
or
sub
aaa
pop
adc
shl
sbb
jge
xor
xor
jns
cli
xchg
loope
xor
push
aam
xchg
nop
rcrl
sub
sti
insl
xchg
in
scas
fwait
repnz
mov
hlt
or
jp
lcall
rorl
push
pop
jmp
repnz
xor
xchg
inc
int
mov
bound
cmp
rorl
or
sarb
in
mov
pushf
inc
adc
push
jne
or
xor
jmp
mov
mov
mov
or
xor
das
lret
addl
jle
loop
stos
sbb
test
iret
jno
je
iret
loop,pt
push
or
test
cmp
mov
xlat
cmp
xchg
cmp
xchg
outsl
loopne
pop
jb
cmp
out
mov
dec
scas
scas
aam
push
jb
ror
xor
jle
aad
ljmp
or
flds
int3
mov
loopne
int3
fiadds
mov
scas
push
xchg
sbb
andb
push
fwait
out
ja
inc
call
mov
xchg
je
pop
mov
jno
ss
pop
xchg
outsb
shrl
and
out
mov
loope
addr16
adc
xor
pop
out
cmp
sub
repz
mov
pushf
xor
movsb
sub
cmp
nop
xor
cmp
or
and
pushw
adc
xor
and
decl
mov
inc
cwtl
mov
nop
outsl
sar
pop
sbb
fisubl
push
jmp
mov
cmp
outsb
mov
test
pusha
popf
mov
decl
aaa
cmpsb
pop
xor
aad
sahf
pop
sub
imul
pop
data16
cmp
loopne
mov
and
test
mov
ret
lods
inc
pop
cmp
mov
ficomps
mov
xor
sub
sub
pop
jge
mov
pmaddwd
cmp
int
or
out
test
mov
dec
ja
adc
push
xchg
outsl
add
mov
aad
and
cwtl
adc
pop
out
sub
aas
insb
pop
jae
lahf
inc
lcall
test
aam
test
insb
jnp
mov
inc
xchg
adc
xorb
add
push
lcall
rcl
mov
mov
pop
jmp
push
mov
dec
in
cmc
sub
xchg
out
cli
add
push
pushf
sub
add
pop
test
mov
push
push
lock
inc
pop
stos
xor
cmp
outsb
xchg
and
imul
lock
push
sbb
mov
and
xchg
adc
testb
sub
mov
jle
dec
out
xlat
aad
dec
mov
cmp
cmc
ds
cmp
and
inc
sahf
push
push
sahf
out
push
mov
lret
cmp
push
pop
cltd
fsubp
out
xchg
xchg
mov
xchg
mov
out
push
mov
das
jno
scas
jmp
in
clc
jge
mov
cwtl
dec
cmpsb
or
push
mov
fcmovnb
jmp
movsb
rcrl
xchg
scas
call
xchg
mov
out
cmc
mull
les
sbb
cmpsb
jecxz
cld
leave
adc
mov
sbb
cmp
xchg
add
outsl
stos
lock
inc
fbstp
sahf
imul
imul
mov
bound
mov
adc
sbb
je
nop
xlat
mov
lock
sub
or
sbb
dec
int
call
loope
inc
inc
out
addb
pop
xchg
inc
das
data16
or
dec
lock
ljmp
jae
pop
in
inc
push
mov
cwtl
insb
inc
es
das
sbb
push
cmpsl
adcb
xchg
test
mov
add
sbb
int
clc
sbb
sub
stos
ja
aaa
push
fistpll
lcall
mov
add
lret
mov
cmpsl
mov
mov
enter
loope
mov
inc
add
subps
cmp
sbb
imul
out
jge
xor
and
outsb
pop
aam
jo
dec
ror
jp
mov
inc
and
fistpl
or
xor
sbb
repz
sbb
sub
jbe
rorl
mov
shll
je
fsubrl
outsb
lock
jae
push
test
cmpl
and
pop
repz
stos
xor
or
push
add
pop
add
push
mov
daa
ss
cld
mov
mov
pop
mov
dec
sub
shl
out
ljmp
jno
mov
dec
fwait
idiv
std
ficomps
mov
ss
dec
rol
push
dec
push
push
or
pop
cmpl
pushf
dec
dec
arpl
imul
mov
mov
jle
add
ret
mov
jl
je
jno
repnz
fyl2x
sbb
lcall
mov
ret
push
pop
lahf
test
imul
sub
jnp
cmp
xor
aam
adc
pop
bound
hlt
repnz
ljmp
and
arpl
mov
add
lea
decb
add
dec
add
outsb
idivl
scas
adc
repnz
fsubrs
aaa
stos
out
fucom
popf
mov
lods
imul
fwait
xchg
push
xor
or
sar
test
jecxz
lret
pop
pop
cmp
sbb
jae
loopne
xchg
push
lret
stos
push
out
mov
jo
movsb
cmpsb
je
and
sbb
arpl
clc
adc
testl
inc
mov
xchg
inc
mov
sub
cwtl
jo
das
push
insl
test
add
loop
iret
test
and
mov
cld
add
ficompl
lods
div
adc
movb
push
sbb
and
inc
adc
rclb
lea
in
cmp
mov
shll
adc
ja
and
ret
mov
inc
pop
xchg
enter
cltd
cmp
daa
inc
sub
xchg
sub
or
sar
lods
adc
cmpsb
movsb
testl
in
push
imul
insl
fwait
test
shrl
lcall
jno
or
dec
pop
push
inc
or
and
sbb
mov
ljmp
pop
and
inc
or
sbb
jmp
mov
xchg
cmp
sub
dec
lret
pushf
sbb
dec
mov
xchg
jae
je
mov
or
inc
ja
mov
daa
mov
sbb
xor
or
inc
mov
cmp
repz
push
adc
imull
add
xor
inc
int
dec
out
sub
in
jmp
pop
in
pop
divb
xchg
iret
shr
incl
stos
mov
out
pop
pop
cmp
jp
loop
stc
sub
pshufw
fld
loope
xchg
jl
cmp
push
lret
jb
lods
mov
jg
bound
cmpsb
pop
aas
lret
enter
out
cs
pop
sbb
fidivs
or
jge
mov
pop
inc
dec
inc
out
mov
sti
outsb
cmc
bswap
call
lea
pop
or
jnp,pn
or
rcl
insb
cwtl
data16
jge
pop
ds
mov
and
mov
xlat
call
shr
and
rol
dec
mov
pop
js
jnp
adc
cmp
jo
mov
daa
xlat
push
cli
xor
sub
push
fdivl
or
xchg
sbb
sub
mov
daa
fisttpll
inc
int
shll
subl
loop
sarl
int
pop
cmp
sbb
sub
std
mov
sub
fdivs
pushf
sub
add
loope
jge
push
icebp
outsl
aaa
jns
sti
data16
decl
icebp
repz
mov
sub
fwait
mov
loopne
add
loope
or
mov
inc
sbb
lea
dec
insl
lahf
mov
sti
or
mov
repnz
sub
sbb
sbb
mov
add
mov
test
mov
sbb
pop
jno
sbbl
and
ror
test
mov
mov
sbbb
imul
xor
fistpll
stos
fists
add
lcall
lea
mov
push
xor
je
scas
dec
aam
stos
adc
aad
in
ficomps
movsb
hlt
push
pop
inc
in
out
push
jecxz
cmp
and
jp
push
jns
ds
mov
dec
cmc
ret
out
loopne
sbbb
adc
cmpb
cli
mov
stos
mov
mov
mov
lock
jl
rorl
imul
repnz
loop
push
adc
jae
mov
data16
or
add
icebp
jmp
bound
call
dec
fcompl
inc
jmp
cmp
xlat
icebp
int3
pop
pop
mov
test
cltd
cld
divb
pop
scas
or
and
pop
pop
or
sti
xchg
mov
insl
ja
loop
aas
lahf
loope
rolb
mov
cmp
add
test
ficompl
add
cli
cmp
shrl
push
dec
xor
add
mov
out
inc
sbb
push
pop
adc
loope
mov
sbb
std
insl
push
pop
data16
mov
out
push
mov
push
xchg
pop
and
add
and
shlb
cmp
aad
mov
or
imul
repnz
jbe
inc
add
dec
pop
int3
lds
or
iret
jmp
cwtl
lahf
shlb
shlb
mov
ja
xlat
leave
lea
rcr
push
push
aad
push
adcl
xchg
fstpt
pusha
inc
adc
pcmpeqd
notb
loope
inc
fsts
xor
dec
adc
pop
inc
xlat
xchg
dec
lcall
aam
sbb
addr16
cmp
lock
mov
and
movsb
sti
mov
sbb
fmul
pop
in
popa
lret
jp
sbb
fs
mov
aas
lods
push
dec
dec
inc
test
fistpl
and
daa
lahf
test
movsl
inc
jns
rcll
cld
out
in
and
add
sub
or
xlat
imul
insb
or
enter
jb
xor
or
ds
popa
ds
sub
xor
cmp
pushf
mov
mov
fmuls
or
mov
sub
scas
cmpsb
pop
in
inc
cwtl
dec
and
and
aam
dec
adc
inc
push
sbb
sbb
pop
in
fstps
mov
cld
and
xor
es
push
es
cmpsl
loop
adc
mov
loop,pn
ret
idiv
ss
aas
cmp
jns
lar
mov
push
xor
jecxz
inc
push
bound
loopne
mov
jns
xchg
xchg
pop
adcl
xchg
movsl
jno
push
sbb
push
adc
rorb
insl
iret
mov
sar
xlat
rcll
xchg
adc
out
add
out
push
xchg
adc
mov
lods
lods
arpl
jb
fldenv
fisubrs
cmp
sbb
daa
out
mov
jnp
dec
nop
aam
sbb
pop
xchg
js
sub
or
loope
sub
pop
shll
mov
jg
add
push
icebp
icebp
sarb
add
sbb
mov
push
mov
jae
cmp
xor
ss
mov
pop
cwtl
je
push
insl
or
sti
out
out
out
in
pop
dec
nop
sub
push
pop
hlt
and
xchg
aad
mov
cmp
add
sub
stos
cmp
imul
cmc
js
xor
notb
fistpl
dec
fildll
jg
mov
and
in
mov
or
mov
pop
rol
mov
mov
mov
dec
fmuls
pop
aas
push
inc
xchg
pop
repnz
ljmp
in
leave
sbb
xchg
fcoml
mov
push
cwtl
outsb
insl
mov
push
mov
and
or
das
sbb
lods
cmp
sti
cld
push
sbb
or
bound
stos
nop
pop
incl
inc
dec
andl
or
add
test
aam
popl
sub
xor
mov
xor
into
and
xor
hlt
push
mov
ret
push
push
inc
cmpsl
sub
cmp
std
pop
cmp
add
loop
push
imull
lds
outsb
fiadds
in
sub
sahf
setb
dec
mov
aam
xor
mov
movsb
mov
outsl
insb
addr16
dec
push
outsl
test
adc
dec
fldcw
out
movups
xor
das
mov
pusha
adc
stc
filds
xchg
pop
mov
cmc
xor
mov
addr16
sub
clc
sub
push
add
fdivr
jle
inc
xchg
jle
sub
popa
xchg
adc
sbb
adc
or
cwtl
add
ja
sti
inc
cmc
leave
xchg
and
cmp
and
xor
insb
pushl
jle
outsl
or
cmp
gs
dec
in
test
int3
jne
dec
ret
ljmp
add
mov
fwait
mov
dec
in
cli
jle
mov
push
sbb
xchg
pushf
sbb
pop
test
loopne
lock
push
out
fists
cs
sbb
mov
pop
imul
fisttps
jbe
sbb
adc
lock
ret
icebp
or
sarl
push
addr16
das
cmp
jb
pop
shrb
cmp
dec
or
stos
sarl
pop
dec
xor
and
stos
and
daa
jns
lcall
in
je
sub
dec
jnp
bound
cmpsb
ret
or
jmp
xor
cli
es
es
addl
and
lods
mov
imul
pop
rcrb
je
mov
sub
fisttps
pop
mov
std
orb
fisubl
fldl
movsb
mov
movsb
outsb
fistps
cmp
mov
int3
inc
adc
out
test
pop
inc
imul
jo
jecxz
ret
add
cmp
test
fmull
cmc
mov
mov
fcmovu
movsb
jmp
jns
les
push
shrb
inc
adc
xor
xlat
cmp
lds
rcl
test
pop
or
cli
sub
cltd
sahf
jbe
mov
inc
mov
mov
push
jle
dec
cli
mov
js
in
mov
or
xlat
sbbl
pushw
mov
fwait
in
imul
pop
dec
inc
fwait
mov
icebp
lock
insl
shll
lret
and
sub
mov
cmc
xchg
in
cmp
sub
pop
sbb
inc
sbb
out
aas
mov
and
leave
fbstp
add
lea
mov
mov
bound
cmp
mov
add
sub
jns
jb
std
or
sub
sbb
push
xchg
push
sub
add
cmp
mov
jbe
pop
test
xor
xchg
lcall
lock
das
es
and
mov
sub
pushf
mov
ret
imul
lods
pop
and
add
aaa
dec
jmp
cmp
mov
scas
sar
hlt
pop
addr16
and
loope
mov
cmc
mov
fwait
cmpsb
shll
outsl
ljmp
xchg
sub
mov
adc
enter
outsb
or
xlat
mov
cmp
sbb
test
inc
cmp
push
jns
dec
pop
jno
adc
and
lock
js
arpl
ss
popf
sti
dec
mov
xor
cmpsl
mov
inc
mov
mov
aaa
fsts
adc
movsb
idivb
out
mov
in
mov
shll
mov
xor
or
arpl
imul
andl
dec
or
sarb
sti
push
js
test
mov
adc
jmp
and
orl
je
cli
pop
xchg
popf
out
pop
sti
and
jle
leave
aad
popa
lahf
fistpll
cmp
mov
add
and
jl
pop
ljmp
and
fisubl
jb
xor
aad
test
inc
fistps
popf
xor
in
sub
jnp
sbb
dec
xchg
inc
loop
cmp
ret
repnz
xchg
fists
fldt
loopne
out
mov
dec
in
incb
cmpsl
enter
cli
loopne
imul
insl
and
ret
lcall
push
cld
insb
xchg
popf
rcrl
into
icebp
test
fildll
pop
popa
xchg
ret
int
enter
mov
cmpsl
xor
hlt
push
pusha
test
or
mov
icebp
xchg
jmp
and
std
mov
mov
or
sub
fldcw
cli
mov
loop
rcll
and
inc
repnz
aam
adcb
jno
dec
ljmp
fstp
loope,pn
xor
dec
cmp
shlb
dec
pop
shll
cmp
cmp
push
xchg
jbe
ficoml
jne
adc
jbe
fwait
pop
stos
shr
fnstsw
cld
lock
ja
push
and
inc
mov
dec
add
popa
shr
les
gs
outsl
mov
push
clc
add
jbe
test
xor
test
pop
xor
or
inc
leave
push
in
mov
add
push
push
dec
sarb
in
pop
xor
xor
xor
cmp
inc
add
outsl
cs
lock
pop
jl
lds
lahf
neg
push
out
mov
outsl
testb
and
sub
mov
mov
pop
cmp
add
xchg
mov
inc
cld
test
out
ljmp
dec
cltd
out
dec
cmp
lock
shll
sbb
inc
popa
ja
pushf
imul
sbb
cmp
xchg
data16
mov
rep
shrl
sbb
jl
and
and
or
jmp
push
gs
and
jnp
and
xor
cmc
je
and
adc
mov
pop
xchg
cmpsb
cmp
adc
xchg
dec
bound
notb
push
dec
rcr
shlb
cmp
addl
mov
adc
cli
aaa
inc
adc
cmc
lods
movsl
sub
mov
das
inc
xchg
xchg
stos
leave
dec
movsb
out
jnp
sbb
fnstcw
gs
jbe
mov
mov
into
mov
xor
imul
jecxz
sub
iret
xor
mov
xorb
test
mov
jp
or
cmp
inc
aad
clc
inc
mov
das
fisttpl
or
sarl
in
sub
inc
xor
lods
out
add
push
jno
inc
fdivrl
xchg
sbb
cmp
ja
insb
sbb
clc
add
push
orb
mov
push
mov
pop
mov
mov
mov
xor
out
xchg
mov
out
sub
in
dec
mov
fisttps
in
inc
repnz
dec
push
or
movq
dec
shlb
inc
imul
cli
stos
xor
lahf
and
cmpsb
iret
inc
mov
lahf
push
xor
in
xchg
mov
push
stos
pusha
xchg
mov
repz
das
cmpsb
push
out
push
test
fs
dec
bound
pop
in
ljmp
dec
cmp
out
mov
sub
jecxz
das
xor
jo
add
or
icebp
add
mov
mov
aas
push
pop
popf
and
mov
scas
cmp
mov
mov
push
xchg
mov
push
pop
into
sub
mov
sub
sbb
jnp
jmp
rorb
jge
les
xor
das
sbb
sbb
or
int
outsb
cli
sahf
push
inc
cld
scas
inc
jmp
jle
mov
xchg
in
sub
lahf
mov
iret
mov
or
mov
jge
push
mov
stos
pop
vmread
aaa
push
lcall
daa
dec
ror
neg
or
aaa
xchg
out
jl
mov
cmc
dec
notl
bswap
sbb
jle
mov
push
xor
lahf
jmp
insl
jo
out
push
push
test
repnz
aam
cmp
push
inc
pusha
push
adc
pop
xor
push
jecxz
lcall
lock
in
pop
jno
vdivsd
xor
mov
fs
inc
jl
pop
lods
jnp
in
adc
push
mov
cmp
jo
inc
inc
add
repz
addl
mov
inc
or
cmp
cld
adc
loope
scas
das
inc
out
sub
add
mov
pusha
add
stos
sbb
aaa
aad
sub
les
or
dec
sti
sbb
pop
fimull
roll
push
in
fildl
push
pop
sti
pop
imul
jle
ffree
add
pop
pop
mov
insb
cmpsl
fistl
mov
leave
jnp
push
in
mov
mov
dec
pop
fcmovnu
mov
ljmp
in
mov
fisttpll
xor
test
movsl
daa
mov
sub
sub
pop
jge
adc
adc
rcrl
adc
stos
mov
dec
lcall
push
sbb
mov
iret
movsb
repnz
jmp
mov
mov
fs
mov
sub
js
std
loopne
out
push
int
mov
xchg
shlb
rolb
out
movsl
lea
int3
enter
dec
lret
xorb
jge
shrl
out
lret
xchg
pop
mov
sti
adc
testl
and
mov
cmp
or
cmpsb
cld
cld
pop
pop
imul
cmp
sbb
jbe
and
inc
lret
movsb
std
pop
sub
pop
test
xor
loopne
out
sub
mov
ss
mov
jmp
mov
pop
rcrb
sbb
stos
mov
mov
sti
out
mov
cmp
cmp
jg
loopne
es
mov
mov
mov
mov
push
in
dec
dec
rcl
js
out
lds
xchg
repnz
mov
inc
int3
cmp
into
or
pop
jge
stos
movsb
jge
sti
ret
or
and
popa
pop
push
jecxz
std
push
das
push
push
jno
nop
push
shlb
inc
clc
shll
adc
adc
dec
mov
out
add
in
inc
shl
and
jg
aas
jle
mov
and
lock
dec
lcall
mov
cli
mov
push
je
mov
inc
jg
fnstsw
stos
xchg
mov
adc
mov
jl
adcl
js
aaa
xchg
sti
pop
fwait
cmc
out
cmp
push
add
sub
sub
mov
add
adc
jge
mov
cmp
or
add
adc
pop
lahf
lea
repz
or
cmpsb
and
mov
aaa
aad
pop
dec
or
cs
in
dec
and
pop
pop
daa
fiadds
xchg
ss
push
mov
psraw
mov
mull
and
out
shl
dec
loope
adc
adc
mov
jo
sub
in
pushf
or
testl
pop
scas
mov
je
in
mov
jg
adc
scas
frstor
fwait
aas
lods
scas
ljmp
mov
scas
jbe
and
call
iret
test
pop
dec
and
inc
push
jae,pn
mov
pop
dec
xchg
adc
jmp
hlt
call
jle
cmp
cwtl
popa
fldenv
cmp
ret
call
adc
sub
jmp
inc
push
nop
dec
imulb
sahf
aad
mov
sub
mov
and
in
daa
adc
out
clc
jb
mov
xchg
ret
in
mov
mov
arpl
mov
xchg
lods
dec
lds
daa
sar
test
insb
adc
jmp
and
sub
pop
mov
mov
cmp
in
inc
fs
int
and
dec
int
std
aad
sbb
dec
mov
sbb
sbb
mov
push
mov
ja
sarl
sub
jge
repnz
push
dec
sbb
dec
ljmp
movsl
sahf
mov
andb
lea
mov
pushf
or
xor
lret
mov
je
xchg
mov
ja
loop
adc
cmpsl
mov
adc
xchg
loope
test
xchg
jle
punpckhdq
std
jo
arpl
ja
mov
mov
js
adc
add
mov
notb
int
xor
mov
pop
sub
sub
cltd
divb
inc
pop
idiv
sbb
outsb
or
leave
xor
sbb
pushf
imul
int
lret
or
sbb
push
dec
fwait
xchg
int
mov
mov
mov
xor
pop
inc
aaa
xchg
pop
jecxz
sbb
and
push
pop
rolb
inc
cmp
imul
in
ja
lock
sub
or
pop
pop
orl
out
xchg
xchg
lahf
and
or
dec
and
out
lahf
shrb
outsb
les
mov
cmp
test
jg
fsubrs
fistl
sub
mov
add
mov
insb
sbb
addr16
jnp
cmp
cmp
icebp
out
js
mov
pop
mov
jecxz
or
xor
stos
mov
xor
inc
insl
nop
mov
pop
out
sub
shrw
sbb
add
mov
out
loopne
xchg
int3
pop
and
push
and
dec
lcall
jno
push
pop
aas
stos
jg
or
xor
test
rclb
aad
imul
inc
adc
rcrb
shlb
in
cmp
or
adc
shrl
sub
cmp
sahf
in
in
adc
jecxz
push
pop
popf
and
mov
mov
add
or
hlt
ss
xor
jle
adc
aad
jp
lret
nop
rolb
fisttps
into
jno
xchg
push
inc
and
lret
xchg
jne
mov
push
loop
outsb
inc
jno
dec
add
cmp
cmp
pop
pushf
shr
std
aad
movsb
mov
sub
je
stc
and
dec
pop
add
sbb
xorl
sahf
cmpsl
stos
mov
push
aam
sub
inc
mov
pusha
fnsave
aad
mov
xchg
mov
cmp
pop
repz
mov
in
sbb
addl
and
cmp
movsb
ja
repnz
xchg
jge
inc
fidivrs
add
mov
cmp
adc
jle
shll
xchg
jbe
inc
insl
sbb
mov
addb
pop
adc
fwait
in
int3
sti
jae
ja
or
lock
cwtl
xor
in
pop
mov
pop
xchg
ss
mov
dec
jle
std
sub
inc
mov
ljmp
call
lds
fwait
mov
jg
out
lods
and
mov
mov
aas
rcr
sti
jp
and
push
add
sbb
fsubrs
xchg
pop
test
mov
mov
imul
lret
popa
lods
aad
cld
aaa
xchg
mov
shlb
jp
cld
pop
sbb
out
popa
enter
push
ja
inc
cmp
mov
pop
inc
cld
cld
addl
adc
insl
sub
jl
jge
or
int3
icebp
dec
ja
addl
jbe
jge
sub
jno
shlb
xchg
test
pop
icebp
add
inc
pusha
sub
cmpl
push
nop
insl
xchg
pop
xchg
aaa
outsl
or
sti
add
adc
dec
push
cs
push
mov
lds
mov
dec
mov
call
stc
or
xor
mov
push
push
lods
sub
scas
lods
inc
into
sub
sub
push
push
dec
add
aas
scas
xor
add
push
xchg
push
fiaddl
sarl
neg
and
xor
adc
lods
out
scas
add
push
outsl
dec
rclb
dec
mov
inc
test
mov
mov
fstp
rcrl
insl
shll
repnz
cmp
mov
lock
jmp
es
mov
mov
fsubrs
clc
sahf
pop
cld
idiv
or
fidivrs
int3
sbb
jns
int3
jmp
in
in
out
ljmp
pand
lds
pop
stos
repnz
add
mov
jb
jnp
mov
jmp
inc
pop
jp
repnz
ja
rcll
sub
push
test
in
filds
push
dec
jp
pop
add
popf
push
ljmp
ja
pop
dec
lret
fucomi
stc
jmp
inc
or
mov
pop
clc
aaa
ljmp
cmpsl
push
in
lea
bound
test
scas
cmp
sub
aas
fcom
jmp
notl
lds
dec
jp
das
pop
xchg
aas
lds
repnz
mov
cmpsb
push
jl
xchg
insb
repnz
push
imul
nop
jno
xchg
jmp
dec
ret
push
xchg
bound
loop
sub
clc
fwait
sbb
std
lcall
lock
or
imul
dec
lods
push
aad
jae
ljmp
or
cs
cli
cmpsb
mov
fsubs
arpl
mov
test
lods
cmp
xor
fidivrl
lea
dec
pop
popf
arpl
push
cmp
mov
int3
and
stos
sti
shrb
mov
mov
ret
adc
mov
pop
pusha
test
fwait
jbe
jp
mov
sbb
cmp
add
xchg
popf
aas
out
in
xlat
pop
andb
xor
mov
jno
jle
push
sarl
rorl
enter
jne
vandnps
hlt
lock
lods
mov
fdivl
inc
lods
popa
test
jno
shrb
mov
xor
movsl
jns
mov
or
addr16
sbb
mov
aas
aad
mov
mov
add
ja
mov
inc
lea
jno
adc
unpcklps
stc
inc
mov
js
sbb
jmp
sbb
leave
xor
ret
outsl
movsl
mov
stos
in
sub
in
dec
dec
mov
dec
cmc
inc
jne
jle
pushl
mov
das
fwait
cmp
movsb
xor
cs
in
fldcw
std
sub
push
mov
das
push
ljmp
pop
mov
fisubrl
in
dec
xchg
sub
mov
bound
pop
pushf
xchg
fwait
es
ret
aad
push
pop
adc
push
pop
sbb
cmpsl
cmpsl
inc
sbb
out
out
aam
pop
xlat
and
lock
jo
xor
dec
add
xchg
push
mov
xchg
gs
push
sbb
push
xor
or
ret
out
movsb
jp
pusha
sahf
dec
cmp
std
or
inc
fwait
pop
jb
jl
loop
xchg
pop
add
out
push
icebp
enter
and
stc
sub
mov
leave
or
js
arpl
dec
mov
not
aad
inc
mov
xor
xor
jno
ss
jle
mov
cmpsb
imul
pushl
lods
pop
popf
fiaddl
or
add
xchg
fisubs
not
imul
outsb
inc
stc
fsts
popf
dec
call
ljmp
lcall
adc
movsb
push
xor
rclb
aas
xor
sub
xchg
cli
bound
stos
xchg
pushl
repnz
push
push
testl
out
lahf
addl
sbb
inc
pop
aas
fcmovne
push
adc
out
mov
les
add
arpl
nop
cs
mov
orl
sub
push
rclb
sub
sar
jmp
xchg
cmp
outsl
dec
xchg
mov
mov
or
cmpsl
or
adc
dec
push
push
sbb
inc
lret
inc
mov
testb
xchg
xchg
outsl
repnz
mov
xor
jne
mov
xchg
sub
pop
mov
scas
inc
pop
dec
jmp
notb
fsubl
dec
jnp
leave
out
scas
pop
lods
push
or
mov
mov
ljmp
mov
push
in
sbb
stos
mov
sbb
xor
push
lds
ss
movsb
pusha
stos
aam
jo
pop
lds
div
ficomps
lahf
jge
push
and
into
aaa
fcoml
leave
subb
inc
or
mov
jmp
jg
sub
in
dec
ret
pop
sbb
and
rolb
dec
pop
cld
movsb
rcll
push
stos
pop
mov
cmp
fs
cld
mov
cmp
push
int
pop
fmull
loopne
cs
pop
dec
fidivrl
andb
into
xchg
and
push
inc
adc
or
cmpsb
lock
daa
jmp
xor
xchg
cmp
jne
loop
xchg
xchg
mov
push
sbb
sub
lcall
insl
std
inc
xchg
mov
mov
iret
xor
mov
jp
xorl
pop
and
lret
mov
lret
pusha
ja
pop
das
mov
sub
rcrl
add
jne
mov
xor
mov
or
stc
test
mov
ja
push
xlat
cmpsb
and
popa
movsl
mov
movsl
sbb
rorl
std
mov
inc
pop
pop
shr
dec
repz
pushf
add
in
and
cli
test
xor
cmc
cmp
test
loop
xchg
cli
adc
push
xchg
in
cltd
iret
push
and
lcall
cmp
add
stos
push
mov
and
ljmp
cmp
jmp
adc
and
mov
ds
jmp
enter
nop
fcoml
dec
mov
mov
insl
xchg
mov
sub
aam
xor
jbe
and
scas
daa
scas
inc
js
dec
add
fisubl
repnz
push
int3
jns
popf
push
insl
les
or
out
test
lea
fdivrl
inc
push
cld
imul
inc
xchg
cwtl
mov
mov
pop
lret
xor
call
sbb
pop
mov
lcall
push
mov
mov
mov
popf
stos
lcall
daa
add
iret
jae
scas
lods
add
fimull
aas
les
imull
xchg
jle
mov
xor
xor
jo
fildl
pop
mov
xor
outsb
ss
pop
jne
stc
out
inc
sbb
inc
aaa
shll
or
mov
fmul
mov
scas
pop
ret
lods
or
add
fcmovbe
jp
sub
sbb
cwtl
cltd
cmpsl
add
ficompl
movsb
push
rcrb
iret
out
push
push
pop
addr16
pop
or
sub
icebp
mov
imul
testb
mov
pop
mov
mov
rclb
shlb
push
daa
rcl
subb
adc
mov
fdivrl
jmp
int
sub
xchg
add
lret
dec
push
and
mov
call
xlat
jnp
in
int
dec
adc
mov
push
or
rcl
dec
shrl
ljmp
cmc
clc
adc
out
js
test
out
dec
cmp
inc
mov
mov
cmp
or
dec
adc
insb
pop
cmpsb
xchg
xor
fs
cmc
jae
adc
inc
int3
fisubrs
lds
cwtl
imul
arpl
add
out
fstl
aad
fisubs
out
xchg
test
push
loopne
sahf
out
hlt
xchg
bound
fisubrl
sar
in
add
lcall
inc
cwtl
stc
pop
int3
jne
push
imul
or
pop
and
cmpsl
inc
mov
iret
jmp
test
aas
lods
and
xor
sbb
push
std
adc
jnp
loope
pushl
xchg
ljmp
pusha
mov
or
iret
sub
outsb
xchg
jns
mulb
push
cltd
push
mov
cltd
scas
loopne
pop
stos
pop
frstor
mov
aad
addr16
sub
out
and
in
add
jle
dec
out
push
cmp
xchg
movsl
cli
jb
test
daa
fmuls
test
gs
mov
aad
push
leave
fcoml
jmp
adc
sahf
xlat
scas
xor
imul
and
dec
sbb
ds
out
sti
stos
jecxz
lds
mov
aas
in
jnp
push
inc
sti
nop
movsl
ret
pop
inc
lahf
sbb
push
movsb
add
cmp
loope
fpatan
out
rcrl
pop
stos
lret
sti
loope
pop
xor
repz
movsb
push
ljmp
xchg
clc
mov
mov
add
loope
push
xchg
lret
js
cmc
add
loopne
jno
inc
loop
xlat
push
stos
or
pusha
pop
in
xor
imul
mov
test
movsl
push
xchg
mov
pop
fiadds
mov
pop
inc
mov
push
call
pop
call
cs
xor
push
and
rclb
scas
and
jae
lret
cltd
jge
xor
xchg
mov
jae
pop
cmp
cmp
iret
sbb
sbb
inc
xchg
xchg
es
pushf
lret
inc
std
clc
ljmp
movsl
daa
pusha
jge
xchg
adc
mov
enter
in
mov
icebp
lock
test
mov
lock
sbb
push
xchg
and
fs
inc
sub
lock
push
in
inc
jno
ror
cli
out
stos
adc
iret
in
mov
andl
push
clc
mov
or
mov
pop
test
int
inc
jns
push
in
adc
add
and
and
jle
xchg
push
inc
daa
xlat
inc
mov
adc
scas
mov
push
cli
fs
xor
js
cmp
adc
mov
cld
cwtl
out
pop
out
fwait
jb
xor
daa
adc
push
rcl
sahf
mov
repz
xchg
fldt
dec
dec
xchg
push
cltd
hlt
fcomip
das
enter
cwtl
mov
stos
or
stos
push
repnz
mov
mov
iret
das
xchg
int3
cmp
leave
push
mov
aam
fisubs
aas
xchg
mov
mov
je
inc
imul
push
repz
fs
enter
repz
jae
fnstcw
sti
setg
and
lods
mov
fisttpl
imul
call
cmc
inc
inc
dec
fwait
or
adc
mov
xlat
add
add
fwait
xchg
insb
jo
hlt
jae
mov
jl
stc
ss
das
popa
js
mov
ret
sbb
mov
das
push
popa
arpl
shll
in
movsl
fdiv
negl
daa
test
mov
cmp
mov
pop
push
add
dec
out
cmpsb
push
add
movsl
in
pop
dec
lret
pop
pop
add
pop
insl
fcomp
cmpsl
mov
adc
mov
cmp
inc
mov
cmovo
cs
mov
mov
mov
pop
push
sub
adc
lcall
aaa
data16
mov
aam
cwtl
mov
xchg
sbb
in
aaa
and
pusha
sub
fldt
dec
add
aaa
cmp
loop
int
add
push
sbb
jo
xor
mov
xchg
sti
lods
adc
roll
push
mov
out
push
jb
cmp
inc
inc
or
and
js
add
in
jo
adc
or
pop
hlt
dec
push
and
dec
mov
aam
sbb
icebp
aam
ljmp
nop
imul
ficomps
sarl
rcll
js
daa
push
outsb
rorl
movsl
sbb
test
lods
add
js
jb
pop
mov
faddl
sbbb
cwtl
pop
add
les
movsb
in
xchg
push
sub
mov
mov
ror
fnsave
mov
popf
clc
mov
test
cmovl
cltd
and
mov
das
cs
ret
cmc
sub
ds
inc
in
lcall
shlb
lods
jmp
cmp
lcall
cmp
adc
pop
add
mov
outsb
fcomi
and
ljmp
movsl
mov
inc
scas
dec
mov
jmp
out
stos
imull
push
sub
outsl
jecxz
xchg
push
leave
mov
shl
jo
or
inc
jl
xchg
mov
xor
cld
test
mov
int3
dec
fdivl
xchg
mov
sub
ja
mov
testl
push
dec
adc
and
hlt
jmp
jo
inc
gs
lock
push
in
rol
dec
cmpsl
movsl
jg
pop
lret
mov
jnp
push
dec
addr16
dec
inc
into
or
sub
adc
pop
int3
loope
jmp
xchg
cld
scas
sarb
mov
cmp
xchg
inc
loopne
imul
shrb
bound
mov
mov
inc
ds
psrlq
sbb
lock
sub
xor
cpuid
and
cli
push
test
and
lods
jg
out
rcrb
xchg
fs
and
fisttpll
and
cmpsb
cmp
test
lock
dec
inc
js
mov
jno
mov
imul
repz
test
push
push
add
or
pop
sub
adc
lret
fsts
loope
cmp
mov
jmp
ror
int
lcall
int3
lcall
rcl
pop
cmovs
imul
mov
mov
add
pop
lods
in
fnstenv
jp
xor
repnz
jmp
pop
inc
cmp
pop
cmp
pop
arpl
mov
adc
stos
add
jb
jge
rorl
lret
cltd
and
mov
mov
insb
mov
inc
push
adc
push
mov
add
mov
push
sbb
push
jmp
negl
push
std
cld
xchg
mov
loop
imul
insl
jae
je
xor
push
mov
add
xlat
jnp
or
ret
xor
fsubrp
popf
stc
stc
sub
testl
iret
push
cmp
jle
push
imul
div
sub
imul
popa
jg
repz
cmp
lret
aaa
mov
mov
sbbb
loope
inc
add
mov
add
lahf
hlt
dec
and
loopne
imul
jo
jecxz
push
cld
shl
jmp
sub
sbb
dec
jnp
sbb
mov
fldl
stc
xchg
shr
in
xchg
jb
sbb
dec
nop
jp
inc
popa
adc
push
and
mov
lea
incb
aas
fnstsw
xor
mov
xchg
mov
mov
cmp
movsb
inc
shll
inc
ja
outsl
push
xchg
hlt
daa
movsl
mov
leave
and
rcrb
jl
pop
push
mov
push
es
or
xor
pop
sbbl
xchg
xchg
mov
loope
sub
xor
shrl
mov
sbb
pop
xchg
xor
rcll
ss
imul
sar
ss
fldt
out
jo
cmp
dec
lret
jno
push
push
jg
push
popa
je
stos
jno
ds
cmc
jg
loope
xor
jbe
jmp
lds
mov
jne
leave
sbb
adc
maskmovq
idivl
aaa
mov
dec
je
add
pop
and
loop
push
repz
mov
enter
ret
call
ror
ljmp
push
jb
push
iret
outsl
bound
pop
rcr
stc
and
ret
jg
das
ret
mov
int3
das
loopne
add
mov
jp
or
ss
rol
or
lods
insb
or
jmp
push
push
pop
jae
arpl
and
add
and
sub
sbb
or
jl
xchg
xchg
mov
pop
jp
lcall
mov
mov
jns
cmc
in
sub
int3
out
pop
jp
repz
das
dec
jns
test
or
aam
dec
imul
fstps
ljmp
fisubrs
add
mov
ss
call
pushf
outsl
xchg
outsb
mov
and
add
rol
inc
call
jae
repnz
decl
aaa
incl
xchg
or
pop
in
push
cmp
jne
mov
jp
insl
and
or
mov
fisubrl
out
outsb
dec
or
sub
push
sub
comiss
fbstp
imul
scas
mov
sub
mov
lds
sub
imul
call
mov
and
sub
rorb
repz
mov
ret
popa
ds
push
cmpsb
jns
add
mov
cld
and
inc
pushf
mov
mov
sbb
inc
or
sub
sub
in
arpl
std
std
pop
aaa
lahf
xchg
enter
test
xchg
negb
mov
jbe
sbb
shlb
addr16
inc
cld
leave
jmp
and
add
mov
mov
pop
outsl
icebp
dec
shrb
fwait
inc
mov
imul
rclb
sbb
dec
lahf
stos
dec
sub
push
mov
dec
inc
mov
ds
and
add
inc
mov
test
push
or
lret
fs
add
dec
sbb
imul
rorb
mov
bound
lea
mov
mov
sahf
arpl
and
push
or
and
or
scas
in
cltd
xrelease
cmp
test
mov
push
cld
cmp
pop
scas
cld
int
cmpsb
rorb
cmp
dec
adc
or
and
inc
add
test
movsl
xor
lret
gs
jge
mov
aam
jns
inc
or
and
pop
add
stos
cmp
cmp
sti
and
and
jbe
pop
mov
adc
jp
test
cmp
mov
lods
test
test
sub
jmp
xchg
outsl
hlt
mov
stos
popa
and
mov
shr
mulb
test
sbb
mov
xchg
popf
mov
add
xor
aam
clc
rep
jb
fimuls
inc
sbb
movl
stos
mov
cwtl
popf
and
adc
daa
sahf
ss
mov
push
sbb
mov
push
cmp
push
enter
int
ret
fdivs
fmull
cmpsl
imul
mov
lods
movsl
mov
mov
pop
outsb
inc
mov
dec
or
push
pop
mov
pop
and
les
jnp
xor
jecxz
js
icebp
pop
pop
ljmp
sbb
adc
xchg
repz
daa
mov
fbstp
mov
cwtl
pop
jp
sbb
lods
push
lret
rorb
or
imul
jmp
out
popa
fcomps
stc
pop
in
ja
in
push
mov
inc
popa
mov
mov
mov
dec
jo
mov
mov
and
adc
cltd
pushf
adc
in
scas
and
fwait
scas
mov
cmp
stc
fsubrs
mov
in
push
push
lds
sti
call
xchg
or
cwtl
icebp
mov
jne
push
outsb
icebp
mov
mov
pop
xchg
scas
imul
push
movsl
popa
hlt
lret
inc
std
dec
daa
pushf
xchg
fyl2x
gs
and
mov
hlt
movsb
jno
push
mov
in
repz
fisubl
std
inc
xlat
popa
outsb
cmp
pop
out
rol
out
lret
popf
adc
jmp
or
push
add
xchg
jnp
stc
sub
ja
mov
jnp
jp
movb
rcrb
fs
scas
push
pop
pop
add
pop
ja
and
aas
cmp
cmpb
dec
std
iret
mov
jmp
shll
shll
dec
movsb
mov
inc
mov
or
ss
cmp
mov
nop
sub
mov
push
fnstsw
out
test
out
mov
adc
loop
mov
mov
fidivrs
movsl
lahf
xchg
xor
js
sub
clc
push
xorl
fldt
shrl
jne
jle
scas
leave
mov
pop
xchg
sub
out
xor
mov
lods
sub
int3
in
flds
test
jmp
cmpsl
push
jge
pop
xchg
fcomp
xor
es
loope
sub
jne
ret
rolb
out
call
push
pusha
out
movsb
sti
das
das
mov
addr16
in
outsl
es
jl
pop
mov
or
cwtl
xchg
push
insb
jp
push
inc
jmp
sub
lods
cmp
push
xchg
outsl
push
clc
lods
sub
dec
push
sub
jns
mov
sbb
jnp
mov
xor
adc
xor
nop
mov
push
fldl
daa
xchg
shrl
or
rolb
daa
adc
out
pop
dec
inc
push
jo
jmp
adc
xor
push
leave
sahf
pop
xchg
iret
adc
mov
xchg
jle
or
pop
daa
xchg
out
xchg
stc
push
lret
in
ret
adc
rcrl
mov
cmp
dec
xchg
xchg
push
dec
lods
ret
mov
subl
lahf
dec
adc
outsl
out
mov
pop
out
or
out
jb
fisubrl
or
lahf
push
mov
and
cmp
lods
jnp
or
pop
test
scas
sbb
or
mov
fdivl
sub
xchg
aas
inc
lcall
lods
insl
into
inc
xchg
or
insl
dec
in
push
mov
sahf
sbb
pop
adc
add
shrl
jb
dec
dec
jle
dec
aas
pop
xchg
fldenv
lods
ffreep
es
out
sbb
out
adc
adc
ss
cmp
mov
into
nop
movsl
xchg
ret
cli
mov
mov
loopne
pop
sub
xor
mov
mov
test
rorb
inc
jb
lea
out
mov
idiv
cmp
and
in
popf
out
mov
xchg
fmull
xchg
jl
push
cmp
cltd
lock
mov
ljmp
movsb
jl
jge
push
bswap
push
jge
xor
add
push
stc
arpl
jno
ret
iret
or
shrl
pop
mov
sti
dec
mov
mov
bound
lods
dec
sbbb
and
mov
fcmovu
push
scas
or
xor
adc
testl
test
xchg
jp
in
mov
shlb
nop
in
pop
outsb
test
repnz
adc
in
jb
sub
insl
pop
cs
jge
inc
inc
ror
xchg
push
cmp
iret
fildll
jno
call
pusha
xchg
push
push
leave
out
fwait
jnp
lods
pop
mov
aad
pushl
decl
bound
mov
shlb
call
mov
das
in
jno
jae
stc
mov
icebp
cmpsb
lock
mov
add
icebp
inc
xchg
mov
xlat
das
push
out
mov
jno
loop
and
ret
xchg
call
jle
push
or
dec
push
int3
add
push
sub
jg
daa
pop
mov
lods
ret
adc
cmpb
loope
jg
aas
lods
ljmp
daa
aad
int3
movsb
mov
faddl
cmp
sbb
xor
ds
orb
inc
incb
imul
cmp
push
movsl
clc
inc
add
or
add
and
lcall
sbb
mov
sbb
lods
sub
xchg
sbb
lcall
xchg
add
or
out
sti
mov
mov
in
je
dec
lret
mov
cmpsb
stos
daa
sbb
sub
sub
js
mov
mov
sub
into
sub
dec
arpl
cmp
sub
sbb
das
inc
jmp
pop
outsl
xchg
push
inc
push
mov
jbe
jae
xor
leave
repz
inc
pop
push
nop
popf
enterw
fidivl
mov
mov
fsubs
pop
inc
ret
jne
pushf
adc
xlat
jmp
sbb
loope
fwait
icebp
mov
fs
pop
push
xor
outsb
shrl
mov
fnsave
in
mov
push
test
push
hlt
js
cmpsb
cmp
movsb
and
cwtl
push
or
lahf
sbb
es
cmpsl
push
jno
loope
xor
outsl
pop
dec
pop
sbb
pop
mov
or
test
jg
lods
addr16
sti
mov
mov
mov
adc
ss
mov
jb
xor
ljmp
dec
repz
xlat
loop
jecxz
repnz
icebp
pop
sub
xchg
adcl
subl
es
mov
or
cmpsl
stos
xor
cmc
icebp
inc
xor
dec
jge
out
jne
ret
inc
push
mov
pop
push
icebp
sub
dec
mov
cpuid
sbb
sar
les
jns
and
js
cmp
or
or
ja
pop
ja
test
stos
fldl
lea
add
out
add
out
sub
inc
inc
push
jmp
pop
push
neg
sahf
mov
xor
lcall
push
insl
fisttps
pop
mov
add
fmulp
lods
add
inc
in
cmp
lock
adc
adc
cmp
lock
sub
adc
jl
inc
and
sub
ret
scas
fcomip
lcall
push
fistpll
xchg
inc
mov
jb
stos
cmp
add
add
sarb
xchg
xchg
cmc
nop
cmp
inc
in
loop
outsl
mov
ljmp
mov
xor
cwtl
dec
je
mov
in
insb
inc
dec
movsb
out
movsl
inc
ljmp
fldcw
adc
cmp
imul
push
imul
push
in
sbb
fnstsw
cmp
iret
lret
adc
stos
inc
push
xchg
jg
es
or
cli
fidivs
mov
pop
hlt
jbe
stos
fisubrs
jb
jp
cmpb
iret
mov
and
cmpsb
jo
sbb
mov
sub
mov
and
add
ds
mov
fxch
fcoml
cwtl
jl
lock
inc
and
mov
xchg
mov
pop
rcll
addr16
jno
inc
pop
sbb
cmp
push
fidivrl
scas
adc
xor
movsl
pop
push
or
fs
lret
xchg
and
add
das
gs
out
sbb
mov
cmp
add
cltd
dec
pop
push
sub
bound
push
pop
lods
std
inc
mov
push
es
mov
xchg
popa
test
xor
xchg
cmp
sbb
dec
xchg
inc
pop
aas
xchg
cmp
movl
xor
jmp
shll
sarl
mov
mov
or
mov
sbb
inc
xor
push
out
xor
xchg
push
cs
pop
inc
shr
paddusb
enter
ror
outsb
js
adc
gs
int3
lcall
or
outsb
out
xor
rcl
cmc
push
lahf
mov
add
rolb
mov
addps
add
jmp
stos
test
test
test
jbe
cwtl
sar
jle
and
popl
stos
data16
out
add
sbb
sub
out
insb
xchg
lret
cmpsl
lds
fxch
fisubrs
hlt
xchg
jns
test
out
test
lods
inc
outsb
stos
mov
lcall
ss
jge
xor
jne
jb
mov
and
rorb
dec
test
mov
sbb
cwtl
add
cwtl
mov
adc
add
mov
pop
and
pop
imul
lret
into
jmp
and
fstpl
scas
fimull
rcr
adc
xchg
xchg
dec
out
movsl
xor
adc
lcall
addr16
sbb
xchg
adc
test
add
cmp
pusha
iret
ds
and
fsubs
roll
inc
rolb
cwtl
les
ret
xor
ss
add
xchg
sti
jae
cld
push
rcr
jns
popf
shrl
mov
mov
dec
lock
mov
lahf
stc
into
inc
mov
sub
dec
mov
stc
ret
mov
jnp
jl
or
jnp
mov
pop
pushf
and
or
sbb
adc
cmp
mov
push
mov
cmc
or
stos
inc
add
mov
decl
fwait
rclb
shl
mov
jns
out
inc
in
cwtl
int
cmp
arpl
dec
test
dec
mov
add
cli
fistps
jno
cmp
int3
arpl
mov
cld
push
mov
pop
lock
push
xor
sahf
stc
adcl
mov
cltd
cmp
mov
jne
int
sbb
push
sbb
xor
or
xchg
fldt
or
xchg
jg
outsb
pop
sub
sti
sarl
leave
shl
push
adc
fcmovnu
inc
adc
in
and
sub
nop
rorl
mov
sub
push
into
xor
xlat
daa
sbb
pop
adc
dec
leave
hlt
push
rol
jo
ss
push
jae
lret
daa
dec
inc
push
pop
or
mov
out
addr16
and
lcall
cmc
clc
mov
sbb
movsl
call
mov
test
push
cmp
lods
sub
ret
imul
fisubs
dec
inc
loop
iret
jne
pop
xchg
popf
lea
in
and
int
xor
aas
jecxz
mov
popa
lret
push
cmc
xorl
fwait
jp
inc
push
sub
add
or
stos
fistpll
sbb
add
outsl
jmp
adc
pop
out
out
cmpb
cmp
sub
cmpsl
mov
cmpsl
lods
xor
popf
test
popa
out
jns
mov
xchg
push
xor
in
dec
and
fcoms
inc
outsl
jl
sbb
cld
decb
ficomps
aam
cltd
imul
sbb
mov
popa
jnp
push
mov
jmp
fisubs
lret
mov
push
push
fistpl
mov
lods
mov
add
mov
inc
inc
fnsave
jmp
mov
sbb
fldenv
mov
int
in
shrb
scas
mov
sbb
push
sbb
mov
fists
push
in
dec
out
push
push
mov
test
jmp
sbb
enter
inc
movsl
fidivs
push
push
ss
flds
pop
pop
jno
aaa
mov
push
lret
addb
fwait
lret
jo
and
sar
inc
add
push
movsl
out
roll
lahf
lock
test
lret
adc
push
mov
mov
mov
sbb
cmp
inc
jmp
lcall
call
cmp
mov
xor
jle
mov
jae
out
adc
cmp
loopne
mov
inc
pop
dec
jl
mov
pop
pop
jnp
xchg
push
mov
pop
mov
push
dec
popf
mov
mov
imul
jg
je
lcall
cmp
xchg
or
jo
cmp
mov
lock
pop
mov
test
mov
dec
sub
add
inc
add
or
adc
inc
cmp
out
popa
or
adc
pop
jmp
push
rcl
pop
sbb
and
sti
rcrb
inc
mov
mov
nop
in
add
jns
push
ficomps
out
arpl
push
outsb
xchg
cltd
lods
lahf
jbe
mov
or
dec
jge
mov
and
and
rcrb
pop
testb
bound
mov
add
mov
mov
push
mov
inc
iret
movsl
inc
mov
sub
xchg
inc
mov
inc
movsl
notb
dec
mov
ljmp
mov
mov
das
dec
inc
leave
dec
shl
mov
push
dec
pop
jno
dec
inc
ss
mov
scas
xchg
jg
pushf
arpl
push
adc
and
mov
subb
and
cmc
push
and
iret
dec
ljmp
and
cmpsb
sbb
imul
push
sbb
and
pop
mov
not
xor
pushf
pop
aam
jmp
xchg
push
sbb
pop
or
cmpsb
xor
fstps
mov
cmp
push
outsl
mov
xor
loope
js
add
dec
shlb
mov
hlt
mov
movsb
cmp
add
js
cmpsl
jl
shrb
push
out
pop
and
movsb
pop
push
aas
pop
hlt
adc
jle
sbb
xor
sbb
shll
stos
add
jb
dec
fildl
shlb
ret
rorl
xchg
repz
std
test
out
sbb
aaa
xor
hlt
or
jae
adc
xchg
cli
pop
clc
xlat
mov
sbbb
loopne
stc
mov
mov
pushf
add
jne
xor
fwait
cmpsb
mov
outsl
add
lret
cs
or
sti
add
mov
cmpsl
sahf
ljmp
sbb
fnstenv
jno
push
and
aaa
pop
test
imul
pop
add
fnstenv
push
and
mov
dec
inc
dec
jae
adc
cli
sub
rcrb
mov
pop
xchg
sbb
cwtl
push
ja
adc
cs
fcmovnb
gs
shl
aam
loope
iret
push
cltd
sub
cwtl
adc
sub
xchg
fistpll
ds
sahf
into
inc
push
sbb
imul
stos
loopne
ljmp
sbb
or
fistps
jne
or
mov
test
sub
mov
add
lods
cwtl
jl
aaa
ss
dec
cwtl
mov
inc
int
jb
pop
push
shrb
push
aas
adc
sub
dec
push
cmp
cli
push
daa
repnz
popf
rclb
scas
sbb
pusha
insb
xor
add
jbe
lcall
xor
leave
xchg
sti
and
dec
fcmovb
aam
mov
dec
loopne
adcb
aaa
loope
test
push
in
test
idiv
outsl
mov
sub
es
xor
cmp
xor
arpl
sub
mov
je
push
xor
cltd
or
scas
popf
mov
push
test
xchg
lods
test
sarl
cmp
nop
mov
lret
rcrb
rolb
or
pop
data16
mov
xchg
js
fwait
data16
jns
cmp
mov
mov
scas
stos
mov
outsb
movsb
shlb
jb
adc
add
insl
dec
adc
inc
js
adc
insb
push
dec
inc
cmp
push
push
negb
hlt
lock
and
sahf
adc
jnp
lahf
cmp
inc
dec
mov
sahf
xchg
dec
xchg
adc
fdivrs
sub
sub
pop
imul
shll
orl
stos
insl
xor
sahf
popf
sub
xchg
dec
roll
lock
pop
add
gs
xor
xchg
add
sbb
nop
js
jnp
test
out
ja
pop
jns
scas
push
xchg
cmp
pop
daa
rcl
inc
clc
int3
repnz
loop
push
dec
ss
lock
xor
and
mov
es
andl
add
sub
stc
neg
push
cltd
out
mov
ja
lods
shlb
mov
outsb
mov
push
mov
fnstcw
ret
mov
jbe
inc
sbb
sbb
and
mov
inc
in
adc
add
push
sub
pop
mov
out
sbb
movsl
jp
inc
int3
mov
fidivs
pop
imul
inc
jb
pop
jno
mov
ljmp
das
lea
mov
jb
cli
xorb
jne
imul
fwait
gs
mov
xor
imul
rclb
lahf
pushf
hlt
and
mov
jns
cs
insl
repz
es
outsl
sbb
rcrl
mov
outsb
push
int
ja
cmp
adc
int3
jle
pop
xor
leave
out
aas
push
push
popf
rol
jbe
pusha
sahf
ficoml
es
fiadds
les
cmp
mov
int3
push
mov
dec
sbb
subb
sti
sbb
dec
lahf
cmpsb
sub
dec
dec
js
shll
sub
push
or
icebp
pushf
arpl
jmp
shll
inc
cwtl
repnz
push
je
adc
cmp
cli
sub
push
negl
push
lret
jge
push
aas
popf
jns
loop
test
mov
nop
mov
push
lcall
enter
inc
and
movsb
test
mov
mov
and
mov
dec
pop
jl
mov
repnz
fisttps
mov
jns
xor
xchg
push
or
sub
or
out
mov
dec
mov
aas
shll
lret
pop
mov
sbb
stos
fs
inc
xchg
cmc
cwtl
xlat
iret
imul
imul
lds
push
xchg
cmp
ds
push
outsb
in
lods
in
in
pop
and
mov
divl
mov
inc
lcall
movsl
imul
xor
xchg
xorb
and
jne
sbb
jle
repz
mov
shll
ret
and
cs
sbb
mov
inc
jno
les
es
xorb
push
cli
lds
mov
test
dec
mov
xor
test
ss
dec
mov
sub
cwtl
das
fstps
sbb
xchg
and
and
sub
xor
outsl
fs
adc
fsub
rol
jae
xchg
or
test
fsubrs
xor
pop
lock
jbe
push
dec
or
scas
dec
xor
subl
mov
mov
cmp
daa
pop
pop
je
fists
mov
mov
pop
add
mov
nop
cmc
mov
mov
cs
sub
xchg
cmp
outsb
or
xchg
hlt
mov
xchg
dec
stc
loope
or
outsb
jb
cmp
call
in
fldcw
adc
mov
clc
lock
ret
aam
add
out
cmc
fisttps
mov
das
insl
push
addr16
data16
dec
fadd
icebp
hlt
jge
rorb
out
push
sti
clc
jle
std
jnp
adc
cld
jmp
cmp
xchg
sub
cmp
jb
das
xchg
lret
fwait
test
pop
cmp
inc
lock
aad
xor
mov
pop
nop
cmp
ds
es
orb
cltd
lret
js
sbb
ret
movsl
icebp
aad
imul
jge
aaa
nop
xchg
call
lods
fisubl
pop
ret
lcall
test
jmp
lahf
and
insl
sub
push
push
jmp
jbe
add
jp
add
cmpsb
push
push
ficompl
or
lret
xor
test
pop
fbld
dec
push
pop
ss
xchg
icebp
lret
cmp
mov
imul
pop
ljmp
addr16
dec
xor
out
cld
jbe
sbb
rcll
mov
hlt
mov
cwtl
cmc
add
pop
dec
push
iret
sub
push
adc
xor
pusha
out
test
insl
push
sub
imul
mov
jmp
je
cmp
or
mov
push
and
iret
cmp
cld
dec
mov
push
loop
les
inc
sub
dec
xchg
addr16
pop
sti
out
pop
dec
push
pop
lcall
scas
xor
lcall
inc
or
jae
pop
outsb
xchg
lods
dec
sub
cli
xor
ds
mov
and
sub
pop
jp
add
divl
cmp
jns
aaa
nop
fimull
inc
mov
adc
cltd
mov
or
push
xor
in
sub
sub
xchg
pop
adc
adcb
mov
dec
xchg
cmc
xor
and
stc
loop
shll
out
pop
fistpl
enter
add
xchg
shrl
dec
mov
in
cmpb
mov
lods
iret
hlt
mov
dec
cmp
into
popa
out
out
mov
decb
sbb
xor
jns
push
push
mov
idivl
sti
lahf
je
fwait
pop
hlt
xor
adc
stos
cwtl
sub
jb
xchg
les
inc
xor
mov
xor
stos
inc
dec
sub
dec
lock
add
sbb
jo
arpl
pop
push
mov
mov
adc
insl
sbb
cltd
in
loopne
mov
es
cmp
xchg
je
in
popa
jmp
cmpsl
hlt
xor
sbb
les
mov
lods
inc
inc
or
pushl
dec
sbb
inc
sahf
add
ljmp
loopne
in
movsb
cld
inc
lods
xchg
ret
fwait
hlt
loope
mov
add
mov
jmp
clc
out
cmp
jge
xchg
lret
bound
or
mov
push
jb
or
add
inc
adc
div
sbbl
xchg
in
jecxz
in
bound
mov
or
lock
push
dec
ljmp
aaa
cmp
or
lds
push
mov
insb
in
mov
mov
fwait
inc
js
stc
pop
jg
xor
js
and
mov
fdiv
mov
pop
xorb
jne
push
stc
orl
and
pusha
inc
adc
cmp
std
push
ds
xor
cmp
and
stos
add
and
sbb
pop
mov
ja
or
xchg
in
jmp
jbe
in
cltd
xlat
dec
jo
xlat
mov
call
mov
or
test
or
add
xchg
jp
xchg
sub
popa
inc
lcall
out
cli
aas
sahf
leave
jl
lret
popl
jg
cli
out
push
jle
or
std
out
push
lahf
out
scas
ljmp
popa
loope
sbb
sbb
leave
bound
fisttpl
leave
cmp
push
rcll
mov
ret
mov
add
mov
cmp
dec
add
stos
scas
mov
xlat
dec
push
cmp
lea
pop
movsb
inc
mov
and
cwtl
mov
pop
jecxz
cmc
sbb
jb
nop
cmp
in
fs
repnz
mov
pop
and
push
shll
push
cs
fwait
test
fisubrs
inc
ret
shlb
and
cmp
cmp
dec
inc
flds
xchg
pushl
and
pop
push
test
stc
imul
sbb
adc
jbe
dec
fs
mov
or
jae
adc
shrb
fldenv
popf
sbb
inc
mov
mov
out
ret
sbb
loopne
sub
sbb
jo
adc
aaa
sub
stc
test
cs
outsl
lods
into
xorl
add
jne
out
fdivs
or
lea
mov
data16
sarb
repz
pop
test
fisttpl
cmp
xchg
sbb
push
inc
test
dec
dec
enter
mov
sub
out
lds
add
adc
ret
pop
cmp
fisttps
and
test
fs
pop
pop
pop
leave
inc
dec
popf
mov
lret
mov
sub
jmp
adc
pop
fwait
xlat
jp
pop
xchg
out
in
imul
cmpsb
cmpsl
jp,pt
jg
lcall
int
test
mov
sahf
enter
sti
es
fdivrp
jle
call
mov
lea
lea
jl
test
ds
test
xor
fmul
and
mov
pop
jg
enter
push
dec
inc
je
lret
cmp
mov
sbb
push
jg
xor
repnz
push
xor
jmp
push
cmp
fsubp
mov
jge
jo
sub
mov
outsb
ret
es
sbb
pop
test
push
imul
sbb
rcrb
stc
test
mov
pop
pop
add
xchg
xor
inc
loope
sbb
lock
shl
push
test
adc
lods
push
mov
fildl
push
push
jne
dec
xor
and
sti
xchg
or
jl
es
cmp
lods
test
loop
sbb
lods
nop
inc
lcall
clc
xchg
xor
jg
xor
mov
jne
mov
pop
inc
mov
test
xchg
out
sti
rcrb
mov
sbb
mov
mov
mov
int
cmpb
adc
aad
scas
xchg
int3
sahf
lock
frstor
inc
movsl
or
jo
jo
jle
add
push
les
push
cmpsl
fsubl
cmp
pushfw
jmp
lods
or
push
dec
repnz
or
test
dec
fs
jmp
mov
dec
sbb
and
ljmp
sbb
push
sbb
push
mov
sub
ds
mov
cmp
cmp
pop
pop
and
fildl
mov
sbb
push
push
dec
inc
stos
fadd
stos
fwait
shll
popf
je
bound
jge
cmpsl
fwait
mov
dec
shll
test
cmp
shl
fcomi
mov
pop
lcall
out
ljmp
jecxz
inc
loopne
xchg
mov
cmp
mov
jns
lds
pop
imul
lcall
jns
popf
or
sbb
inc
mov
ret
xlat
inc
rcll
movsb
push
push
clc
jne
add
and
sahf
and
and
stos
pop
popf
adc
std
ret
mov
fwait
and
xor
arpl
fsubp
push
push
xchg
iret
xchg
mov
cmc
mov
pop
add
dec
dec
dec
xor
add
outsb
sub
fdivrl
jo
push
shll
adc
and
rorb
and
jns
ss
and
std
jb
mov
add
pushf
push
xchg
xchg
test
loop
mov
test
mov
xor
out
push
jp
ss
xchg
sbb
or
call
inc
cmp
std
jnp
xchg
push
push
ret
add
ss
int
cmpsl
rolb
adc
mov
adc
arpl
mov
lock
and
sbb
jbe
mov
xor
ffreep
scas
fimull
jge
xchg
leave
cmpsl
aas
cmp
fsubrl
je
add
daa
test
jp
fs
mov
mov
shlb
mov
xchg
xor
adc
add
outsl
leave
or
add
int
push
inc
enter
push
lods
dec
cltd
push
xor
pop
leave
in
push
pusha
cmp
mov
jecxz
jp
sub
mov
lods
or
f2xm1
inc
pop
aad
dec
and
mov
sbb
xor
inc
xchg
ja
test
pop
xchg
sub
adc
pop
dec
arpl
rcrl
repz
out
jns
scas
repz
movb
pop
push
mov
sbb
jno
fstps
daa
out
xchg
call
push
addr16
jnp
xchg
cmp
mov
push
lock
xchg
loope
mov
cmp
or
lahf
test
jae
xor
dec
es
outsl
add
fnsave
out
movsb
je
and
lcall
mov
cmpsl
pop
jo
repnz
daa
in
push
dec
add
jecxz
nop
xor
xchg
call
not
pop
push
shll
rorw
adc
add
in
xchg
jmp
in
inc
sbb
gs
outsl
pop
sbb
or
push
repz
enter
cld
jecxz
xor
pop
fbld
fdivr
sbb
inc
xchg
push
xor
dec
ret
arpl
cs
add
push
inc
mov
in
and
in
subb
add
clc
js
out
sarl
int3
inc
cmp
ret
xchg
stos
lea
jne
in
or
jmp
pop
in
movsb
sub
add
jp
stc
and
jb
xchg
dec
lods
or
sbbl
imul
lcall
icebp
sub
mov
ret
xchg
inc
jb
push
test
mov
iret
pusha
push
popa
add
push
xchg
mov
roll
mov
and
dec
and
repnz
xchg
jge
push
mov
mov
and
sub
and
adcl
lret
push
imul
aas
fst
fcomps
mov
xor
mov
std
in
out
jmp
cmp
push
cmpsb
mov
pop
xlat
popa
fistpl
inc
inc
pop
out
mov
dec
mov
jae
ljmp
mov
sti
in
cmp
jg
mov
adc
xor
lods
stos
jbe
rorb
addl
cmp
add
jmp
cmpsl
adc
inc
popa
call
addl
in
je
lret
iret
mov
mov
cmp
incl
dec
movb
rorl
rcr
xor
icebp
or
lods
adc
das
hlt
cmpsl
and
arpl
sti
jecxz
loope
fisubs
push
cmc
sti
pop
out
xchg
repnz
xor
fisttpll
ret
aad
jl
mov
aad
mov
test
mov
testl
mov
dec
divb
lret
lret
push
hlt
cmp
jae
mov
sbb
popl
js
or
pop
pop
adc
xor
or
sbb
int
jo
xchg
lods
lret
sub
push
adc
xchg
cmovnp
mov
ja
and
out
inc
inc
xor
testl
add
movsb
adc
clc
xchg
jae
xchg
fst
mov
icebp
nop
pop
aaa
sub
loop
inc
cltd
sbbb
pop
outsl
dec
push
jl
rol
push
adcb
mov
aam
and
ja
or
push
out
xor
dec
sbb
out
cmp
faddl
mov
out
mov
mov
cli
shll
lock
mov
out
shrb
stos
ljmp
ja
movsl
jb
and
stc
cwtl
stos
mov
jl
mov
push
add
inc
sub
cmpsb
lahf
int
and
sub
in
xor
pusha
pop
xor
aas
outsl
fisttps
sarl
push
pop
sub
sbb
inc
out
fcoms
popf
dec
jae
fisubs
in
lods
sbb
push
fbstp
xor
xchg
xor
ret
xchg
mov
sbb
or
scas
rcll
mov
ljmp
fs
addl
ds
leave
jo
aas
dec
mov
int3
fidivrs
xchg
data16
cmp
xor
xor
imul
pop
loop
cmc
pop
dec
andl
inc
cmp
pop
clc
sbb
cmp
icebp
xchg
mov
test
daa
xchg
mov
mov
stos
jb
or
cmp
jnp
push
jp
outsb
cmpsb
fucom
icebp
test
shll
out
rorl
pushf
add
dec
push
adc
push
push
push
pop
mov
pop
dec
je
lahf
xchg
in
in
cmp
cs
ja
out
push
ds
mov
push
in
mov
clc
setp
push
insl
push
fucom
imul
popf
sarl
jo
push
mov
mov
shll
jecxz
fmuls
jmp
jecxz
in
xchg
insl
or
and
in
dec
hlt
mov
loopne
add
adc
jb
sbb
xor
arpl
and
mov
psadbw
push
bndldx
cmp
add
movsl
dec
in
jae
inc
and
sahf
sub
dec
js
int3
sbb
popf
mov
pop
jl
cmc
sub
xchg
pushf
into
add
jmp
mov
push
out
cmp
mov
int
mov
enter
jle
mov
xlat
ficomps
test
mov
and
ficoml
mov
lock
stos
mov
mov
lcall
push
xor
xchg
dec
icebp
in
and
stos
and
in
fistpl
lea
daa
mov
in
mov
push
jno
ret
fwait
jno
cltd
loop
mov
mov
add
or
ss
insb
test
das
jge
je
cli
lods
mov
and
pop
inc
push
fistps
rcr
and
addr16
dec
ljmp
cmp
bound
std
popa
pusha
jle
ret
loope
in
dec
sbb
sub
jecxz
mov
outsl
add
mov
and
mov
push
outsb
mov
or
stos
js
mov
push
fstl
frstor
cmp
mov
inc
pop
cmp
nop
cmc
mov
sbb
mov
repnz
jmp
cmp
scas
repz
inc
lret
loopne
mov
and
inc
mov
xchg
scas
jb
sub
pop
inc
aam
in
int3
lret
psraw
fistps
xchg
cmp
and
add
mov
jle
push
jbe
adc
lods
data16
popf
mov
loop
pop
add
dec
sbbl
jl
stc
jle
shrb
lahf
data16
mov
push
shlb
mov
adc
xlat
push
jo
jge
fwait
loope
adc
lock
inc
push
lock
lret
and
mov
xchg
xor
fmull
rorb
xor
frstor
mov
inc
ret
mov
add
mov
call
leave
nop
bound
inc
into
cmp
sub
jnp
dec
outsb
mov
dec
leave
adc
cmp
and
shrb
rol
pusha
cli
sbb
lcall
call
pushf
pop
mov
xor
outsl
aas
push
lret
adc
mov
rcrb
gs
or
push
loope
repz
hlt
sbb
mov
lahf
cmp
dec
lret
dec
xor
cmp
lods
inc
shrb
dec
mov
adc
fs
jp
add
pop
adc
aaa
iret
mov
hlt
negl
std
ljmp
xor
hlt
ret
shll
mov
test
jle
int
and
push
lcall
jb
fstps
push
sub
sbb
xor
lock
out
inc
repz
fwait
aad
jb
out
mov
dec
js
enter
sub
and
mov
cmc
adc
push
jo
pop
enter
shl
pop
repnz
and
lahf
movsb
mov
jo
mov
push
push
sbb
jg
mov
lea
push
push
in
jmp
insb
mov
inc
add
sub
jnp
leave
pop
clc
jno
outsl
sbb
and
stos
scas
mov
rorl
push
repz
popa
test
call
mov
ljmp
mov
push
add
movsl
cmp
cltd
xchg
mov
imul
mov
fdivr
sub
sbb
shlb
dec
repnz
cmpsl
pop
jno
pop
fiadds
push
dec
dec
push
rcrl
fimull
insb
mov
jns
dec
mov
adc
decb
add
ljmp
push
push
mov
pop
inc
inc
scas
adcb
pushf
mov
inc
jo
push
loope
ret
xor
rcll
adc
mov
stc
cli
or
pop
pop
in
jb
push
inc
push
xor
testl
sub
dec
adc
pop
adc
cmp
into
cmp
into
in
push
loop
pop
add
mov
cmp
or
lds
imul
sti
push
and
pushf
call
cmp
cmp
cltd
mov
add
pop
jns
jp
jo
sbb
push
imul
fnsave
adc
sbb
test
nop
sbb
scas
push
pop
mov
repz
jmp
mov
mov
push
mov
mov
mov
insl
push
clc
add
add
call
push
movsl
lret
std
mov
cmp
jo
sbb
cmc
mov
mov
dec
fisubl
out
xchg
lds
add
ret
pop
fidivrs
sbb
mov
xor
lea
stos
xor
pushf
call
dec
push
addl
add
pop
clc
shl
adc
cmpsb
jle
iret
mov
out
inc
sub
subb
push
cmp
psubusb
icebp
dec
mov
jle
aad
xlat
lods
aaa
stos
mov
pop
or
idivb
bound
sub
into
sahf
cmpsl
enter
sub
jnp
add
pop
cmc
push
dec
adc
or
adc
popf
pop
cmp
aam
rcl
add
sbb
dec
sub
sahf
lods
mov
movsl
je
cli
hlt
jno
jno,pn
mov
cmp
test
call
scas
out
fnstcw
in
inc
xor
loope
scas
sub
sub
pop
sbb
or
mov
adcb
pop
pop
popa
fs
out
pop
cli
push
and
cmpsl
ja
sub
ljmp
es
daa
xchg
imul
insb
push
xorl
popf
lret
xchg
lret
and
jo
mov
inc
push
and
ja
fcompp
cmp
or
fiadds
loop
mov
repz
xchg
ja
nop
outsb
adc
mov
popf
add
and
lret
insl
sub
cld
mov
aaa
jno
in
std
cs
or
pushf
stos
rcll
push
popa
and
cld
mov
sbb
ljmp
out
sub
dec
cltd
fimull
shll
jb
in
mov
sahf
and
vpsrld
movsb
jb
sbb
loop
xor
sub
fadd
loopne
sbb
outsl
sub
mov
jecxz
push
movsb
mov
push
fwait
or
hlt
adc
int3
testl
dec
jo
lods
cmp
mov
mov
lea
pop
lods
dec
adc
iret
insb
push
lcall
mov
movsl
aas
cmp
and
pop
push
mov
dec
mov
add
out
ljmp
insb
test
ret
daa
jno
lea
jne
sarl
mov
jle
adc
mov
rorb
enter
aas
arpl
cmc
test
inc
jnp
ss
cltd
mov
sub
sbb
loope
xorb
adc
or
jo
pushf
cs
adc
xchg
mov
call
psubsb
cmp
testb
pop
mov
push
jo
jg
out
clc
mov
in
sub
inc
jmp
or
int
in
dec
adc
adc
cmp
arpl
out
notb
jb
loope
cmp
push
dec
and
ffree
sbb
or
imul
mov
pextrw
cmp
rcll
jp
je
sbbb
mov
xor
cmpsl
repnz
sub
clc
pop
enter
jnp
push
jb
cmp
jecxz
in
sbb
cmpsl
negb
jecxz
cmpb
xor
icebp
and
mov
add
jg
inc
arpl
imul
call
adc
mov
ja
xor
repnz
imul
cmpsb
lods
imul
pop
mov
sahf
pop
jns
adc
out
lods
sub
iret
ljmp
jae
xchg
cltd
fmull
jge
push
pop
test
int
jno
mov
xor
sbb
and
daa
mov
jo
ffree
pushf
push
fcmovu
mov
pop
add
ljmp
movsb
popa
pop
out
in
insl
pop
inc
sbb
subl
jbe
push
rcl
xchg
dec
jmp
inc
mov
push
popf
pop
push
inc
sbb
test
dec
mov
ljmp
and
jp
xor
call
cli
pop
aad
sahf
outsl
cli
and
out
aas
push
jge
rclb
xchg
pop
dec
add
lock
ret
sbb
and
leave
into
and
dec
incb
cmc
fsubp
sub
push
adc
mov
cmc
push
mov
call
sub
mov
dec
push
movsb
or
pusha
push
mov
lods
repnz
data16
pop
aam
sub
lret
pop
mov
or
xor
xchg
inc
dec
push
scas
fs
push
push
insb
mov
mov
xlat
out
sub
insb
cmp
inc
outsl
adc
xchg
cld
lcall
jns
arpl
loopne
push
aas
notl
mov
mov
add
test
jge
clc
lret
cli
adc
lret
jmp
mov
pop
xor
xchg
dec
lret
ret
cmc
inc
adc
add
movsb
jbe
jle
jp
jb
xor
hlt
imul
movsl
and
cmc
addr16
sub
aad
dec
mov
adc
sti
dec
mov
cltd
out
sbb
and
test
mov
mov
pop
inc
xor
scas
std
cmc
mov
out
rol
imul
inc
lods
shll
movsb
fwait
pop
mov
addb
pop
pop
or
orl
mov
rcrl
out
std
mov
and
roll
pop
shll
das
icebp
repnz
xor
movsl
push
call
inc
xchg
lret
leave
pop
add
into
test
push
xchg
or
mov
mov
fsubl
imul
arpl
incb
jnp
jecxz
je
sar
xchg
outsb
xor
lahf
sub
or
xor
and
insb
push
or
fsubr
das
jnp
cltd
fstps
xor
stos
xor
das
mov
int
and
jno
pop
sub
ficompl
cmc
xchg
and
pop
xchg
xor
push
pop
and
js
add
jge
push
ljmp
push
mov
scas
aad
fistps
push
add
imul
add
sub
rolb
ljmp
mov
pushf
mov
cwtl
add
jle
dec
cltd
cmp
adc
and
and
int3
inc
mov
cltd
aad
fimuls
sub
inc
xor
and
pop
daa
int3
cmp
mov
ret
idivl
sbb
cs
pop
cmpsl
insl
pop
rolb
outsw
push
cli
pop
add
sbb
add
enter
movsl
xlat
decb
cmp
mov
imul
mov
sbb
cmpsb
mov
incb
mov
loop
cmpsb
pusha
cmp
cli
rorb
inc
rolb
mov
or
repnz
cmp
std
xor
mov
fcomp
ret
mov
js
and
jae
cmp
movsb
sbb
mov
loop
outsb
or
push
fistps
fstps
or
xor
aad
mov
push
adc
movsb
adc
and
orl
out
in
and
loope
testl
sbb
leave
icebp
and
stos
fbld
je
dec
loopne
pop
out
outsb
aas
hlt
dec
outsl
xor
popl
inc
mov
into
adc
sbb
push
jno
sub
out
dec
rcll
imul
test
nop
lret
in
mov
sti
push
imul
mov
mov
sbb
adc
les
popf
pop
sub
mov
repnz
mov
js
sub
sbbb
xchg
jp
mov
sub
inc
bound
rolb
out
adc
pop
lods
xor
ss
fbstp
inc
mov
add
lahf
push
fs
jae
jno
xchg
push
fidivrs
inc
test
add
mov
pop
fdivrl
arpl
ret
jle
jne
cmc
lds
xor
es
mov
add
push
jno
push
push
adc
add
fs
xlat
mov
aas
adc
sbb
cmp
int
rcr
lea
mov
jo
and
sub
mov
jnp
pop
fxch
rcl
faddl
or
add
cmp
xchg
callw
jnp
in
je
pop
pop
out
fisubl
or
test
mov
inc
loop
cmp
mov
data16
lcall
clc
mov
sbb
pop
popl
lods
pop
hlt
js
push
inc
add
fwait
xchg
fsubl
dec
mov
cmpsb
fwait
push
mov
xchg
sbb
outsb
pop
sbb
fisubs
jne
jne
clc
mov
push
jecxz
mov
mov
mov
xchg
in
idiv
add
inc
daa
mov
push
mov
push
mov
adc
adc
xor
gs
mov
mov
push
jb
dec
sbb
jmp
scas
mov
aaa
xchg
pop
jo
addr16
in
mov
cmp
lea
inc
adc
and
shll
xchg
mov
pop
add
mov
pop
fs
push
ss
mov
lcall
lods
sub
pushf
pushf
iret
lcall
mov
mov
xor
jns
popa
xor
ljmp
jns
pop
ljmp
into
xchg
inc
stos
adc
adc
add
pop
mov
mov
cmp
pop
stc
pop
jb
pusha
lods
pop
dec
cs
inc
mov
arpl
addr16
add
mov
fmulp
bound
outsl
out
scas
inc
lret
and
or
jne
sub
test
mov
test
in
js
out
add
bound
out
lock
inc
fdivrp
out
test
pop
inc
int
in
xchg
jne
jb
clc
push
shlb
popf
dec
or
mov
js
lock
mov
daa
mov
cmp
sti
adc
imul
repnz
repz
or
daa
sub
mov
cmp
das
int3
inc
mov
push
scas
pop
inc
icebp
repnz
inc
jmp
jne
add
cmc
push
add
sub
mov
xchg
mov
dec
jae
imul
test
sbb
test
loop
jmp
add
loopne
arpl
stc
or
cmp
testb
or
test
jge
jmp
data16
int
lods
pop
movsb
dec
sub
adc
mov
imul
in
shll
xchg
out
push
and
mov
psrlw
jmp
xor
xor
inc
sbb
sti
lods
lds
or
sub
xchg
mov
enter
aaa
lret
push
hlt
mov
outsb
insl
cld
inc
sbb
cli
jmp
out
mov
push
inc
insb
into
cmp
clc
cmpsb
and
mov
movsl
pop
lods
nop
pop
mov
jb
cmp
mov
xorb
adc
das
dec
inc
arpl
xor
lea
enter
xor
dec
jmp
aad
cld
inc
fcompl
xorb
sar
xor
mov
pusha
jbe
sub
dec
filds
nop
mov
mov
jmp
mov
mov
bound
mov
cmp
inc
cmc
adc
imul
add
or
xchg
fcoml
sbb
pushl
xchg
xchg
cld
es
mov
sbb
loopne
push
es
and
adc
xchg
sub
pop
ret
push
movsb
dec
das
je
rcll
mov
and
aas
and
or
jne
mov
mov
inc
pusha
cwtl
and
cli
in
pop
sbb
cmpsl
daa
sub
and
lret
fisubl
jnp
gs
pop
lret
clc
jne
mov
xchg
inc
inc
icebp
arpl
inc
pusha
ret
inc
pop
sub
inc
jmp
pop
scas
lds
lea
pop
shll
adc
fidivs
dec
push
xor
pop
popf
xor
mov
cmpsl
fstpl
hlt
arpl
sbb
int3
pop
leave
movsl
and
movsl
aaa
mov
mov
mov
xor
mov
int3
mov
mov
sub
mov
push
or
js
adc
xor
icebp
adc
cltd
add
inc
xchg
js
pop
out
negl
repnz
cmp
mov
mov
jmp
xchg
mov
pop
push
test
outsl
xlat
or
add
cltd
aad
dec
xor
sub
jecxz
cs
adc
xor
add
out
lods
insb
xchg
xchg
mov
mov
and
addr16
push
jno
dec
jo
add
leave
adc
inc
adc
mov
mov
push
and
xor
jnp
sbb
jecxz
or
cmpsl
jbe
add
arpl
push
mov
fldenv
daa
pop
call
pop
cli
arpl
cmp
xor
add
mov
ds
mov
stc
or
test
fsubrl
aad
or
jnp
mov
fwait
jbe
into
and
mov
scas
aam
push
cmp
add
shrd
mov
mov
ss
ds
mov
mov
lea
pop
ror
dec
inc
dec
add
xchg
leave
out
xchg
pop
popf
jb
bound
pop
loop
neg
xor
sub
test
pop
lcall
imul
push
sub
lret
adc
xchg
in
test
outsl
xor
sbb
es
push
lret
mov
fisubrl
pop
cmpsb
fidivrl
lret
xchg
test
mov
imul
mov
jmp
sub
pop
xchg
jmp
ljmp
int
mov
or
loope
aas
jne
test
sarl
adc
jle
lds
push
mov
mov
jp
mov
inc
xor
push
loope
mov
ja
cmp
stc
aam
inc
mov
and
xor
mov
repz
or
lret
call
cmp
imull
sbb
ret
shll
js
xchg
fwait
les
pop
movsb
xor
adc
mov
and
mov
aas
dec
test
and
adc
fistl
or
fdivrl
or
add
imul
jne
jbe
mov
xorb
dec
add
add
dec
enter
add
insl
dec
xor
orb
sbbl
pusha
addl
in
mov
insl
inc
xchg
ds
lahf
mov
mov
sahf
jmp
sub
ja
sbb
mov
mov
push
jne
cmp
or
incb
xor
shrl
push
and
sbb
xor
test
test
pop
lahf
dec
jae
or
lret
mov
mov
jmp
insl
and
aam
mov
xchg
sbb
pop
xor
xor
enter
xchg
sbb
movsl
out
adc
icebp
jecxz
das
fdivrs
popl
mov
push
xchg
in
shlb
aam
cwtl
rorl
fnstenv
pop
iret
dec
stos
outsl
add
inc
outsb
push
jp
mov
push
or
clc
sbb
lahf
les
xchg
ror
ret
hlt
or
inc
mov
cli
repz
test
insl
aad
ljmp
jl
js
adc
jecxz
sub
loopne
cmp
and
mov
sub
xchg
cmp
sub
pop
roll
inc
arpl
xor
push
adc
dec
test
adc
add
adcl
cli
push
mov
jmp
enter
mov
mov
fdivl
and
xchg
adc
fwait
test
out
cmpsb
or
xor
pop
repz
mov
adc
mov
dec
rcrl
out
arpl
add
or
mov
nop
pop
lret
into
inc
mov
mov
inc
jl
shr
addr16
push
jne
dec
data16
jno
sbb
daa
jg
xlat
or
mov
cmp
push
jg
out
jae
and
mov
mov
enter
fcomp
daa
sub
repnz
sub
push
mov
lahf
in
xor
int3
add
mov
test
pop
cmp
xor
insb
flds
xchg
mov
add
push
push
insl
adc
jns
or
test
cld
loope
inc
cmp
inc
fnstsw
sarl
nop
jnp
rol
sbb
jbe
mov
out
scas
jp
sub
mov
mov
sbb
sbb
lret
jns
mov
lock
call
jge
push
xor
sbb
jnp
jge
jecxz
inc
dec
push
jb,pn
xchg
into
push
out
aad
in
push
push
sub
in
rcrb
in
addb
jae
dec
sub
lahf
ss
inc
repnz
aas
loop
pop
data16
stos
or
push
sub
mov
jg,pt
cmpsb
jmp
cmp
adc
mov
test
pop
push
fcmovnu
sbbb
gs
and
lahf
mov
mov
mov
add
mov
das
movsl
cvtps2pi
shlb
and
and
sub
mov
and
inc
pop
fsts
jl
in
mov
cmp
lahf
inc
adc
push
int3
push
xchg
adc
hlt
arpl
xchg
sbb
lock
mov
lcall
and
mov
xor
xchg
ret
mov
xchg
int3
repz
mov
inc
jge
dec
mov
cmp
mov
mov
outsl
and
cmp
stos
xchg
loop
roll
cld
jae
mov
mov
mov
movb
mov
pop
ss
loope
ret
dec
fmul
mov
ds
ficomps
lahf
gs
jg
shll
inc
insb
dec
mov
cmp
addr16
aad
jbe
out
enter
mov
pop
imul
sbb
es
lret
pop
xor
or
cmp
jns
ror
push
and
jmp
xchg
rolb
ljmp
xchg
or
dec
cmp
stos
clc
add
shll
sbb
or
pop
xor
or
mov
pop
sbb
and
mov
jnp
cmp
es
idivb
dec
sub
out
mov
mov
ficoms
xchg
xchg
xchg
pop
lods
mov
movsl
in
lock
push
xor
in
inc
rcll
lods
je
lcall
fwait
jg
or
and
in
xchg
das
and
pop
cmp
xchg
sub
add
xor
popa
pop
push
jae
adc
imul
xchg
enter
scas
pusha
das
push
sbb
test
dec
lea
inc
jmp
add
mov
addl
dec
es
incb
push
inc
adc
rolb
cwtl
div
and
mov
sbb
testb
mov
hlt
sbb
outsb
jmp
jnp
shrl
and
aam
xor
inc
bound
mov
and
imul
mov
test
jge
mov
sbb
movsbl
clc
out
dec
or
jge
jecxz
inc
pop
adc
sbbb
or
push
dec
daa
fisubrs
push
cmp
in
pop
mov
loope
js
sahf
orb
jno
inc
mov
lock
fmuls
scas
dec
cli
insl
shll
inc
scas
scas
xor
push
popa
push
into
mov
push
xchg
and
cmp
fs
loop
or
cmp
inc
loopne
xor
dec
mov
call
dec
and
and
aas
jno
sub
stos
cmp
add
mov
ret
dec
hlt
xor
pop
xor
test
push
inc
push
adcb
ficoms
rcr
xchg
xchg
sub
mov
dec
in
push
addr16
testb
inc
xchg
in
sub
push
mov
or
mov
lret
das
and
or
jp
lea
xchg
outsl
push
fs
dec
jp
lds
mov
adc
pop
dec
xor
cmp
pop
mov
ja
jmp
pop
dec
imul
psrlq
ds
aam
daa
stc
das
cli
add
stc
clc
dec
inc
mov
jbe
ret
sub
dec
push
inc
arpl
pop
jle
pushf
mov
lods
jle
mov
cltd
movsb
pop
cli
mov
cmp
icebp
lcall
jmp
push
enter
cmp
lcall
inc
arpl
rcr
lock
jae
mov
addr16
ret
mov
add
stos
es
inc
add
xlat
bnd
aam
mov
xchg
movsb
push
idiv
xor
jns
jnp
cli
push
sub
rclb
xchg
sub
lods
adc
xor
fisubrs
iret
jo
negb
fs
xor
scas
add
arpl
lcall
fwait
xchg
push
mov
mov
cmp
imul
xor
mov
add
adc
into
cmp
sbb
scas
cld
pop
inc
jp
out
ds
repz
fnsave
rcrb
jno
ss
dec
stos
mov
xchg
sub
sub
push
cmp
lret
cli
adc
fadds
loop
adc
out
je
xchg
mov
loopne
shr
jge
stc
adc
ficomps
in
mov
loop
cmp
cmp
cmc
cmp
dec
ds
imul
cmp
fstl
out
sti
data16
xor
inc
push
mov
les
sub
cmpsl
adc
xor
out
imul
pop
shlb
ss
repz
outsl
pop
cmp
push
xor
xor
dec
fnsave
mov
ljmp
cmpsb
fildl
mov
ss
or
sub
fs
or
xchg
push
inc
hlt
sahf
ss
jns
pop
mov
lcall
test
ss
jmp
into
jbe
pop
out
js
jl
jbe
mov
gs
pop
pop
and
xchg
lods
sub
call
aam
ljmp
pop
jae
cmpsb
ja
adc
data16
cmp
mov
push
and
push
mov
push
dec
aam
xor
mov
adc
xchg
sub
pop
xchg
xchg
mov
xchg
sbb
mov
repz
jno
dec
lret
in
imul
jne
adc
cmp
push
inc
pop
fsubrl
sub
lea
mov
out
pop
pop
push
add
sbb
or
pop
pop
test
and
mov
and
lods
sahf
cmp
inc
inc
insb
mov
add
adc
jbe
rolb
data16
sti
mov
stos
movsb
fidivs
push
rcrb
and
inc
arpl
pushf
jns
movsb
loopne
mov
push
outsl
ret
jg
dec
xchg
and
pop
dec
jb
sti
inc
test
mov
repz
pushf
adc
jmp
xchg
xchg
mov
test
imulb
testb
dec
push
cld
adc
push
mov
icebp
fdivs
es
adc
call
and
stc
outsb
out
push
mov
jns
push
inc
adc
dec
sbb
out
das
icebp
sbb
jmp
leave
add
jnp
and
std
stos
push
out
cmp
loope
orb
incb
jae
lcall
mov
inc
push
mov
icebp
hlt
mov
jmp
pop
pop
pop
popa
jl
adc
xor
jbe
js
or
ljmp
cmpb
out
mov
cmp
frstor
mov
or
pop
inc
inc
pop
and
stos
and
xchg
inc
dec
cmc
loope
fs
sub
mov
mov
out
fisttpll
push
mov
cld
push
data16
es
mov
xlat
lret
stos
add
sti
mov
fmul
push
push
fistps
and
loop
cmp
stos
pop
out
sub
cs
ja
test
lods
and
ret
ljmp
or
push
les
mov
cld
xchg
fstl
sbb
popf
shrb
pop
mov
xor
sbbb
and
stos
jp
jbe
rolb
inc
dec
aaa
cmp
mov
loopne
filds
cld
rcr
test
shlb
in
dec
mov
mov
aaa
pop
dec
rorl
aaa
adc
adc
dec
add
xor
mov
ljmp
addr16
jp
cmp
pop
popf
xlat
fcompl
jle
jmp
inc
out
jg
outsb
xchg
mov
out
push
cmp
dec
fxch
pop
xchg
cmp
or
xor
push
jmp
adc
fldl
push
aad
push
mov
fstpt
stos
loop
mov
jne
sbb
aas
cwtl
xchg
scas
aam
fst
pusha
push
and
mov
jmp
lods
xor
jle
jae
fxch
ret
mov
les
adc
out
mov
push
mov
xchg
int
repz
dec
movsl
pop
icebp
dec
rcrl
inc
neg
adc
pop
fnstcw
cmp
test
lds
sahf
in
and
jno
mulb
push
fbstp
cli
call
shll
jbe
mov
repnz
fwait
je
xchg
xchg
sub
pop
fwait
lods
pop
outsl
sahf
adc
jno
rol
inc
fdivs
adc
fwait
sti
jo
nop
and
gs
test
in
hlt
fimull
xor
mov
inc
adc
xlat
sti
stos
out
stos
out
adc
cmp
mov
xchg
and
pop
cmp
decl
repnz
fwait
lret
stos
inc
into
pop
adc
pop
ja
mov
lret
or
inc
xchg
cs
int3
popf
dec
shlb
mov
mov
stos
test
xor
ret
lret
sub
sbb
insl
cmp
cmp
pop
mov
jne
pushf
jge
insb
xchg
lds
pusha
ljmp
mov
dec
sub
sbb
inc
imull
push
xchg
push
stos
adcl
jg
jae
movsl
lock
loope
ds
je
js
jns
inc
dec
inc
sub
cmp
sbb
cmp
sub
jnp
fsts
dec
pop
insl
pop
out
jbe
imul
and
std
sbb
cmp
add
aaa
mov
mov
rolb
pcmpgtd
xor
or
add
movsb
xchg
adc
mov
cli
sti
push
push
repz
outsb
sub
fstpl
ret
imul
pop
add
xor
rcr
pop
and
subb
pop
fsts
pop
fisttpll
and
fcomi
cmp
mov
clc
popf
lahf
sbb
or
js
xchg
jnp
xchg
addb
inc
sub
or
fcoml
xlat
xchg
fistpll
js
scas
shll
int3
stos
sub
in
xchg
stc
jae
out
sti
jb
lods
cmp
dec
gs
ret
rol
mov
lcall
ljmp
dec
pop
xchg
and
outsl
pop
lock
sbb
insl
aam
mov
sub
mov
cltd
dec
add
mov
incl
lret
cmc
or
mov
mov
mov
pop
mov
sbbb
out
leave
or
pop
scas
scas
pop
xor
jo
mov
mov
incl
pop
adc
adc
pushf
mov
inc
cmp
push
or
enter
xor
xlat
jmp
fsubrl
xor
cli
fidivrl
xor
lods
sbb
adc
xor
inc
mov
les
psadbw
mov
test
mov
mov
pop
and
xchg
test
ds
mov
clc
adc
test
sbbb
pop
adc
sub
sub
movsb
mov
xchg
xchg
adc
sahf
and
dec
xchg
outsl
movsb
dec
lods
out
push
add
lods
in
xor
idivl
push
insl
loopne
inc
outsl
push
mov
push
je
mov
mov
inc
dec
sahf
rcrb
je
inc
test
das
lds
lods
test
rcrb
enter
imul
jmp
aam
lods
in
data16
scas
fcmovu
adc
jmp
push
sti
int
movsl
enter
mov
jno
int
stos
cmp
push
dec
sub
push
sub
imulb
leave
dec
hlt
stos
fdivp
inc
lcall
pop
in
and
popf
xchg
rorl
xor
xor
adc
add
mov
movsb
xchg
iret
or
mov
pusha
mulb
jge
cmp
cmp
xor
cmp
pusha
fcmovnu
jbe
out
rcr
cld
test
jne
inc
jae
inc
push
lahf
or
and
push
outsb
inc
lods
inc
cltd
cmpsb
mov
or
sahf
mov
lret
lcall
imul
fcom
add
sub
mov
popf
push
js
mov
outsl
in
xchg
sbb
jecxz
sahf
jnp
sbb
push
sbb
fisttpl
je
pushf
shrb
rolb
out
jns
mov
loope
lcall
hlt
sbb
and
lea
add
cwtl
flds
push
dec
push
adc
xchg
pop
lahf
cwtl
push
jns
ss
lcall
aad
lret
sti
sbb
movsl
nop
dec
shlb
pop
jmp
jo
test
xchg
rcll
aas
in
jp
inc
or
pop
cmpsb
mov
cmc
mov
inc
dec
mov
lods
das
or
pop
mov
mull
ja
sub
shr
fsubl
cltd
pop
pop
bound
cmp
sti
add
mov
sbb
mov
test
sbb
test
cmp
shlb
loop
cmp
iret
fadds
xor
xchg
xchg
sbb
cwtl
loope
arpl
jb
stos
pop
popf
xor
push
dec
dec
popa
xor
lret
das
sarb
push
call
iret
ret
outsl
inc
rcl
fisttpl
cmpsl
mov
stos
fstpt
pushf
pop
loop
mov
mov
pop
push
pop
pop
jne
insl
test
mov
push
in
adc
xchg
mov
pop
jp
stos
imul
push
fists
cwtl
mov
cwtl
push
gs
nop
push
ja
jp
shr
push
fidivl
dec
cmpsl
and
mov
jp
sub
and
jb
clc
mov
jecxz
mov
lds
cmp
dec
cltd
adc
aam
call
fcmovu
out
lcall
sbb
fstl
loope
jecxz
mov
orl
pop
mov
ljmpw
mov
push
js
pop
cmp
jmp
or
inc
out
jle
scas
mov
ljmp
xchg
out
dec
or
push
xor
nop
push
in
push
inc
adc
bound
add
iret
testb
stc
icebp
add
and
dec
aaa
sbb
sahf
inc
lock
push
rcrb
arpl
pop
jle
xchg
or
bound
jecxz
mov
mov
jbe
push
mov
rcrb
sub
mov
xchg
mov
and
gs
ret
aas
push
jmp
sti
fcompl
inc
push
mov
scas
and
cli
jp
stc
popf
insb
out
popa
lret
lea
jns
out
data16
cmp
cmp
mov
jbe
jnp
dec
ja
or
or
push
sub
jno
cwtl
mov
jns
add
ss
adc
popa
adc
bound
sbb
jae
repnz
rcrl
cmp
jb
fmuls
mov
push
cmpsl
pop
fcompl
add
addr16
sbb
xchg
ret
and
out
sbb
fbld
lea
fdivrl
hlt
icebp
cmp
xor
mov
or
push
dec
in
or
mov
and
fidivrl
imul
imul
rorb
mov
jbe
cmpsl
into
and
xlat
jp
test
dec
adc
pushf
pusha
out
loope
cmpsb
repz
nop
outsl
mov
pop
pusha
loopne
and
fidivrs
lea
or
xchg
xchg
and
rcrl
frstor
ret
je
outsl
ja
mov
jge
jae
add
pop
mov
mov
mov
daa
inc
push
es
int3
mov
adc
and
sub
ss
popf
rep
jecxz
hlt
repnz
add
test
sbbb
bswap
dec
add
addr16
call
std
xchg
stos
test
xlat
sti
inc
in
in
mov
inc
gs
addr16
imul
xchg
sbb
xchg
arpl
jge
push
mov
lret
sahf
cmp
out
addl
and
cwtl
pop
cwtl
stos
add
cmp
jp
clc
popf
cltd
popl
jle
adc
test
stc
xor
test
sbb
popa
sub
aas
outsb
int
orl
cmpsl
aad
xchg
iret
in
and
mov
pop
xchg
jg
pop
xchg
mov
mov
push
mov
inc
xchg
sti
push
movsb
test
inc
cmc
xor
bound
out
mov
jo
jg
add
adc
out
pop
xchg
ljmp
cmp
divb
sub
or
inc
add
add
and
and
and
ss
cmp
nopl
orb
leave
xor
das
xchg
push
push
ds
xchg
or
mov
lea
xchg
or
incl
inc
mov
in
xchg
push
xchg
mov
pop
outsb
in
mov
cmp
cmpsl
push
mov
mov
add
pop
repz
jecxz
fcoml
push
out
jg
lret
out
shll
add
sbb
imul
pop
andl
or
js
sbb
mov
out
imul
mov
and
mov
xchg
pop
dec
fisttpll
dec
dec
repz
and
add
add
xchg
shll
inc
mov
outsb
mov
sbb
cmpb
stos
aaa
aaa
add
cmc
test
imul
fsin
dec
xor
jne
nop
inc
xchg
aad
subl
jg
out
out
sbb
test
xchg
mov
pushf
xor
ja
fstp
sti
mov
ret
mov
add
mov
dec
repz
std
sub
or
ss
jle
xor
aam
add
inc
mov
mov
scas
cmp
imul
fwait
push
loopne
pop
std
sub
andb
pusha
jp
inc
movsl
test
xor
xchg
pusha
push
lret
stos
pop
jmp
cwtl
add
push
inc
xchg
push
cwtl
insb
xchg
jecxz
shrb
adc
inc
repnz
cs
adc
sub
adc
cmp
and
push
xlat
cmpb
push
rcl
push
sbb
jle
pop
xchg
push
pop
repnz
shlb
add
pop
dec
inc
lret
jmp
aam
and
pop
flds
inc
xor
inc
iret
and
sbb
cmp
fscale
pop
movsb
in
in
es
jp
mov
xchg
dec
inc
sbb
inc
idivb
sbb
repnz
mov
adc
mov
jp
out
and
sub
mov
mov
pop
int
add
xor
jne
rcrb
mov
stc
xchg
add
xor
pop
cmp
push
lcall
push
jle
dec
cmp
sub
push
push
or
leave
bnd
aad
sbb
js
xchg
mov
push
in
xor
jmp
and
xlat
mov
int3
cmc
add
pop
sub
xor
test
adc
xor
xchg
sub
jbe
sbb
cltd
cld
fs
stos
cli
sbb
addr16
aam
pop
push
clc
pop
mov
xchg
mov
cmp
inc
shrl
jb
daa
hlt
fsubrs
pop
mov
adc
into
mov
rorl
test
cmp
xor
mov
jmp
js
jno
pop
jmp
pop
xor
into
mov
loopne
ds
mov
mov
dec
into
fcmovbe
dec
mov
ss
push
test
cmc
push
fiadds
shl
and
sub
test
mov
shl
insl
inc
xchg
cld
jl
test
cmpsl
dec
sub
jo
les
sbb
ljmp
ljmp
aas
mov
testb
cmp
loop
jns
jo
stos
cwtl
mov
mov
and
inc
dec
rorb
lahf
jae
jb
loopne
mov
dec
adc
shrb
mov
mov
pusha
les
mov
push
fstl
loopne
add
and
daa
scas
xchg
jnp
sbb
adc
cmp
in
xor
ljmp
sub
jno
ljmp
xlat
jb
add
shrl
movsb
sub
xor
rolb
jmp
std
inc
daa
xchg
adc
lahf
negb
pop
loope
mov
push
cmp
sbb
sub
lds
sbb
lahf
xor
arpl
js
cmp
mov
stc
out
add
push
shrl
dec
or
gs
mov
adc
jg
jne
popf
push
pop
adc
xchg
sbb
cs
inc
out
inc
xlat
or
xor
js
inc
xchg
fisttpl
mov
fistps
pop
pop
sbb
scas
insb
jo
and
pop
mov
loope
pusha
movsb
les
stc
push
mov
add
jge
and
stos
mov
push
sti
xor
mov
mov
jmp
push
sahf
ds
andl
mov
cmp
jl
idivl
dec
sarb
jl
in
adc
js
arpl
and
jb
aaa
sub
mov
mov
cmp
mov
fdivrl
inc
inc
xchg
dec
inc
push
js
mov
jb
mov
cli
in
rcrb
insl
add
cmp
xchg
cmp
addr16
rorb
cmp
icebp
sysenter
mov
sbb
inc
movb
mov
in
test
adc
or
loope
data16
mov
cld
or
push
mov
cltd
outsb
icebp
mov
inc
jg
mov
mov
sub
ss
jns
repz
push
cli
mov
aas
imul
repz
adc
dec
test
aaa
das
push
pop
and
mov
xchg
mov
out
or
mov
sbb
cmp
mov
sub
pushl
or
adc
bound
sbb
sub
ds
xchg
mov
rol
push
clc
cwtl
sti
mov
cwtl
mov
js
push
clc
dec
idiv
pop
hlt
or
mov
lods
sbb
orb
dec
pusha
icebp
les
push
add
xchg
pusha
xlat
in
dec
jno
loop
fiaddl
and
sbb
sub
rcrb
cmp
mov
shrl
shrb
inc
push
sbb
aaa
sbb
mov
xchg
sub
je
mov
cmp
dec
mov
mov
mov
inc
mov
jno
or
dec
push
pushf
roll
adc
jmp
adc
mov
stos
mov
imul
add
movsb
adc
enter
lret
pop
cmc
aam
push
and
cmp
pop
das
testb
scas
adc
xor
push
dec
mov
out
std
inc
cmpsl
test
enter
xor
aaa
fmul
stos
mov
test
sub
inc
cmp
xor
mov
mov
in
dec
pop
sbb
shl
xchg
cmp
int3
daa
inc
stos
cmpsb
lret
push
out
mov
cmc
xor
test
adc
cmp
nop
fst
dec
inc
in
pop
iret
pop
mov
pop
adcl
in
and
jb
fs
and
and
mov
sbb
ret
sub
and
gs
jp,pt
in
jnp
aaa
xor
fs
repz
insl
sub
mov
dec
rcrl
repnz
data16
insl
test
test
iret
push
fistpl
mov
pop
inc
xchg
mov
cmp
mov
sti
push
dec
dec
mov
cld
je
ss
shl
stos
loope
and
jle
dec
hlt
mov
lret
fwait
stos
mov
push
loop
adc
sub
les
shlb
mov
mov
call
sti
or
stc
rcrb
clc
mov
lret
mov
inc
sbb
mov
addl
dec
lea
and
and
push
aaa
fcompl
stc
pusha
movsbl
sti
jge
ret
mov
out
mov
pop
inc
adc
or
sub
aam
xor
in
mov
out
cltd
jno
test
adc
mov
data16
dec
hlt
sub
push
int
pop
nop
hlt
xchg
daa
cwtl
and
loope
dec
cmpsb
in
sbb
nop
in
out
cmpsb
in
aam
fadd
jns
call
in
mov
stc
mov
xlat
push
jge
add
cli
add
inc
push
mov
rcl
sarb
outsb
gs
pop
fcmovbe
icebp
sbb
xchg
adc
roll
mov
adc
add
sbb
mov
aad
sbb
mov
mov
xor
adc
pusha
pop
iret
xchg
pop
add
add
cmp
lods
xor
enter
mov
jae
xchg
or
and
jbe
pop
sub
je
in
cmpsl
aad
out
mov
jle
xchg
adc
or
lret
enter
cmp
adc
sub
cpuid
pop
sub
pop
push
or
mov
shll
les
lods
xor
nop
notb
and
and
insl
call
sub
add
ret
cmpsl
jp
dec
daa
jp
fidivrs
daa
add
popl
push
xlat
inc
call
xor
in
lock
mov
out
xchg
sub
or
push
rorb
mov
iret
lods
push
xchg
jg
into
mov
pop
fbld
shl
jg
and
push
mov
pop
or
push
dec
jnp
dec
lock
and
repz
std
sub
push
push
jmp
ret
add
cmpsb
insl
add
xor
cs
das
and
xchg
in
cmp
dec
jne
nop
movsb
cltd
add
sub
xchg
pop
xor
scas
mov
push
orb
mov
mov
push
sbb
loopne
sub
push
or
call
jns
mov
jo
dec
out
xlat
lret
mov
mov
jno
add
mov
rcl
clc
mov
mov
popf
enter
mov
cmp
rcrb
outsb
or
movsb
cld
mov
sahf
and
pop
ja
mov
fists
push
pop
jno
push
jg
push
xchg
lcall
mov
mov
xchg
mov
mov
push
pop
dec
cs
and
adc
daa
int
jae
jge
pop
sub
gs
push
and
pusha
jno
mov
sarb
sbb
cmpsl
outsb
shrb
mov
inc
jno
pop
mov
push
sar
mov
lret
cmp
mov
cmp
push
mov
test
lret
pop
aaa
in
mov
test
mov
shll
shl
xor
inc
sti
pop
stos
shrb
xchg
sbb
add
adc
and
cmp
cmc
stos
xchg
or
cmpsl
sub
dec
push
xlat
sub
decb
stc
mov
xchg
fists
jg
push
pop
imul
jo
scas
dec
sub
stc
testl
mov
cli
fucom
mov
sub
nop
rcrb
mov
adc
cwtl
aad
es
add
addl
scas
lods
jg
cmp
imul
sub
cltd
inc
sar
lds
nop
push
mov
inc
das
sbbl
jl
sbb
push
dec
decl
pop
popl
xchg
dec
aaa
imul
cwtl
dec
mov
sbb
jo
mov
and
ret
jmp
int
mov
pop
inc
mov
sahf
into
mov
sbb
into
adc
bnd
mov
sarb
fisubs
lahf
outsb
sub
cmpsl
pop
icebp
inc
pop
dec
xchg
jmp
fldl
lods
mov
xchg
int
outsl
cld
movsb
call
or
cwtl
mov
sbbb
test
push
aam
cmp
insb
push
aad
mov
idivb
insl
je
mov
leave
push
jecxz
adc
inc
mov
nop
pop
mov
repz
pop
push
mov
repz
das
mov
xchg
call
cmp
sbb
sub
insb
dec
mov
je
pop
dec
mov
dec
sahf
fsubl
and
xchg
dec
movsl
or
cwtl
adc
cs
pop
imul
mov
inc
cltd
scas
xlat
jbe
mov
adc
sbb
sar
pop
sub
mov
movsb
xor
xchg
fidivrl
sub
subl
push
mov
and
dec
sbb
jns
pop
stos
mov
add
mov
popf
inc
inc
xchg
fdivrp
sbb
imul
lock
fsub
test
sub
jnp
js
cmc
test
lds
jbe
sbb
leave
push
pop
fldl
and
mov
push
adc
fidivrl
xor
outsb
popf
ret
filds
mov
adc
out
xchg
mov
pop
mov
fiaddl
and
jmp
repnz
shl
icebp
xchg
lods
xchg
inc
hlt
or
out
push
xlat
lods
arpl
push
les
je
inc
jns
inc
cmp
out
cmp
scas
sbb
sbb
in
lods
push
cwtl
add
xor
or
mov
sub
dec
mov
bound
ficoms
scas
mov
ss
mov
inc
dec
imul
scas
inc
pusha
in
mov
jae
iret
das
add
inc
js
mov
xor
nop
je
pop
cld
add
popf
divl
fcmovnu
xchg
orl
dec
jo
dec
or
pop
or
or
bound
test
insl
daa
cmpsl
jno
lret
test
nop
icebp
aaa
or
lahf
mov
int
sbb
call
sbb
insl
pop
ret
leave
ja
int
jge
mov
data16
add
inc
xlat
pop
mov
mov
test
sbbl
add
clc
push
lock
jl
mov
nop
movsb
inc
sbb
hlt
decl
loop
lds
loop
test
ljmp
jnp
cmpsl
dec
adc
mov
dec
loope
jbe
xor
mov
popa
and
sbb
sbb
dec
daa
jns
popa
cltd
fisttpl
xchg
xlat
cmp
scas
rcl
aad
lods
imul
dec
adc
jno
mov
sar
pop
mov
aaa
push
jle
movsl
leave
dec
int3
mov
out
or
inc
sub
pop
scas
aad
push
add
pop
idivb
cmc
lds
sbb
ftst
fnstenv
movsl
or
daa
xor
cs
shl
pop
sbb
push
push
mov
mov
lcall
mov
pop
cmpsl
bound
xor
push
jecxz
je
insb
jecxz
cmpsb
popf
incb
mov
neg
scas
add
shrl
xor
dec
leave
ds
ja
out
lcall
sub
mov
sar
push
out
rcll
mov
pop
fsubrp
ja
inc
xor
push
or
xchg
in
mov
mov
mov
inc
pop
lods
icebp
push
mov
fdecstp
inc
aaa
push
mov
xchg
sub
aad
icebp
pop
pusha
imulb
and
out
pop
hlt
push
mov
mov
aas
and
mov
test
scas
sbb
dec
mov
lods
aas
scas
xor
mov
xchg
and
pop
mov
or
lea
outsl
pusha
iret
add
xor
movsb
xchg
jecxz
inc
and
int3
sub
jp
mov
aaa
cltd
and
pop
lret
dec
ret
ret
sbb
stos
insb
imul
lcall
shlb
add
insl
imul
in
nop
mov
jb
jl
sub
ret
add
push
imul
addl
cmp
mov
shr
jns
lods
shlb
inc
dec
fidivrl
fsts
mov
cmp
sbb
mov
push
add
fistl
ds
loopne
inc
push
adc
out
aas
stos
pop
xchg
divb
lret
cmp
clc
outsl
pop
cmc
test
cli
xchg
xchg
lock
push
shr
gs
cmc
sub
fcomps
xchg
lahf
lods
aas
iret
mov
movsb
movsl
es
dec
adc
popf
aas
test
aam
nop
mov
push
xchg
popl
or
daa
in
or
mov
pushl
pop
mov
xlat
xor
dec
or
das
cmp
adc
add
cwtl
movsb
jle
push
out
popf
adc
jge
cltd
je
mov
jge
cmpsb
mov
push
stos
outsb
out
pop
mov
sub
insl
pop
jecxz
adc
int
cmp
cwtl
pop
mov
mov
shlb
xchg
sub
clc
pop
roll
fs
mov
add
cs
loopw
mov
cwtl
jae
add
add
sub
push
fistpl
xchg
shl
dec
ret
mov
xchg
adc
jge
popf
xchg
int
adc
inc
aaa
push
rolb
xchg
ljmp
scas
lods
push
jmp
clc
lea
bound
insl
pushf
in
xor
icebp
xor
shl
cmp
pop
xchg
jge
out
xor
mov
ljmp
dec
push
mov
mov
hlt
mov
adcl
rorb
shrb
adc
and
scas
push
test
loop
call
mov
pop
inc
mov
fucom
sub
in
jo
pushf
mov
outsb
and
fcmovnu
aaa
stos
xor
negl
push
mov
sti
cmpl
or
and
lods
into
cltd
addr16
inc
or
xorl
bound
push
mov
or
xlat
inc
xchg
ds
mov
mov
stos
inc
stos
movsb
enter
lea
test
bound
mov
insl
push
mov
rcl
ss
mov
push
leave
cmc
lods
xor
pop
out
mov
addr16
push
mov
and
and
clc
jno
jmp
mov
and
push
jns
jecxz
roll
rorb
jbe
jo
push
in
cmp
and
push
repnz
jbe
lds
test
repz
inc
imul
lret
cmp
iret
ret
pop
push
pushf
mov
cltd
and
loope
or
into
adc
into
push
jno
push
sbb
data16
push
pop
mov
inc
scas
ljmp
push
xchg
jnp
and
test
insl
push
mov
jl
inc
ret
xchg
mov
enter
push
movsb
je
call
cmc
push
jl
cltd
dec
popf
pop
sub
hlt
ds
mov
push
rcl
imul
mov
or
or
insl
xchg
scas
cmpsl
jg
ss
pop
gs
and
jmp
mov
call
int
push
in
mov
sbb
and
ret
int
arpl
sbb
pop
ss
mov
shlb
sbbb
call
lods
stos
jecxz
fdivrl
adc
push
mov
xchg
dec
leave
stc
xor
mov
stos
or
addl
dec
leave
outsl
cwtl
ds
xor
sbb
out
add
loop,pn
cmp
adc
outsb
out
and
lret
loop
sbb
jno
fiaddl
lods
repz
adc
mov
test
push
test
pushf
mov
lfs
repz
in
jne
cwtl
test
adc
mov
in
jmp
push
xchg
cs
xchg
pop
addr16
push
mov
inc
jmp
mov
sub
jo
mov
push
jae
adc
stc
cltd
les
mov
adc
dec
dec
loop
aad
addr16
lock
jns
mov
icebp
pop
and
xchg
dec
pushf
xchg
xchg
push
shlb
rcrb
and
lods
call
sbb
enter
mov
ret
std
sbb
sbb
push
cvtps2pd
pusha
pop
and
flds
push
movb
pushf
jg
sti
cmpb
jl
scas
add
dec
and
out
nop
jecxz
ret
xor
xchg
call
fwait
das
xchg
inc
cmp
test
xor
push
and
jns
out
sub
fs
mov
ret
shll
dec
stos
shl
sbb
lret
inc
dec
orl
aas
xor
dec
scas
in
add
jno
fs
int
pushw
lds
call
mov
lcall
popf
sbb
pusha
jge
insl
leave
daa
std
fdivs
adc
cmpb
push
je
data16
cmpsl
or
or
cwtl
stc
xor
push
jno
nop
int3
imul
test
xor
cmpsl
mov
inc
es
ret
mov
mov
inc
mov
pop
fistpl
adc
sbb
mov
loop
jnp
rolb
add
out
lods
cmpsl
xor
roll
gs
jb
mov
neg
or
lahf
fcompl
imul
out
je
dec
adc
adc
sub
add
or
xchg
adc
mov
mov
or
mov
iret
mov
or
movsl
add
lock
test
ljmp
add
pushf
cwtl
and
push
jns
xor
mov
hlt
fwait
jecxz
cltd
inc
add
fstpt
push
jp
imul
call
es
rol
loope
testl
out
insl
ret
and
xchg
jg
into
lods
dec
cltd
stc
cmpsl
out
sahf
scas
repnz
pop
xchg
mov
push
mov
test
shrb
stos
adc
movsb
sub
aam
or
enter
add
into
cmp
jbe
jmp
cmp
rcll
push
cmc
arpl
add
cmove
mov
push
test
and
lods
mov
and
cwtl
push
inc
jmp
fcompl
clc
aam
or
push
int
push
xor
push
and
xchg
inc
or
jae
xor
imul
sub
inc
clc
mov
pop
push
or
pop
or
punpckldq
lea
insb
call
faddp
lret
nop
sahf
mov
pusha
mov
mov
lock
push
in
cs
int
and
arpl
rcll
pop
add
out
fwait
add
pop
adc
lods
or
adc
sbb
test
in
mov
rolb
sbbb
pushf
ja
sti
test
ret
ljmp
cmpsl
cmpsb
lock
hlt
and
mov
ss
loope
icebp
ret
subb
sbb
inc
dec
xor
jge
lea
loope
jl
xchg
push
or
test
std
cltd
or
mov
or
bound
dec
test
enter
pop
test
jl
fwait
adc
jg
jb
mov
lods
fisttpl
xchg
insl
mov
call
addr16
fcompl
or
pop
push
enter
mov
scas
mov
xor
pop
loope
mov
sub
dec
jg
or
mov
cwtl
sub
cmp
dec
xchg
mov
pusha
ss
fnsave
pop
outsl
jb
jecxz
inc
outsw
mov
xor
test
pop
mov
add
jmp
lret
loop
adc
insb
jl
stos
cltd
stc
ffree
hlt
ljmp
or
mov
mov
jb
cld
inc
cmp
cli
lock
and
sub
or
les
jp
mov
pop
in
jmp
and
outsl
cmp
pop
stos
ret
dec
jmp
lret
inc
lcall
cmp
out
mov
dec
loope
and
aam
mov
add
pushf
bound
and
pop
adc
dec
sub
pusha
cmc
ds
movsl
sbb
cli
pop
lea
mov
inc
xor
das
lock
rcrb
rorl
hlt
fadd
sub
mov
jbe
xor
xchg
in
push
test
jmp
pushf
pop
data16
test
loopne
push
inc
mov
ret
lea
sahf
sbb
test
add
das
jo
subb
stc
stc
das
fwait
mov
stos
aad
je
mov
rclb
cmp
mov
mov
test
loop
mov
pop
stos
pop
ret
orb
or
iret
cli
and
jp
dec
push
je
mov
outsb
jg
mov
push
inc
mov
add
push
sbb
sbb
lds
filds
pop
bound
sub
cmp
push
adc
jno
jmp
icebp
call
or
lahf
xchg
scas
out
inc
fnsave
dec
push
jno
scas
cmc
in
push
sbb
jmp
and
and
fcoml
or
ja
fisttpll
mov
js
stos
jle
outsb
jae
gs
notb
iret
daa
or
jno
rorl
dec
scas
test
adc
test
mov
out
insb
insl
or
es
xchg
adc
push
sbb
pop
inc
xchg
pop
sbb
negl
nop
lret
jecxz
and
sahf
fwait
inc
sbb
lcall
add
fs
push
clc
xchg
testb
loope
leave
roll
jp
in
or
sahf
lret
stc
or
jl
ljmp
outsb
mov
lds
inc
cld
int
mov
xor
pop
jmp
fstps
test
daa
aam
mov
xchg
je
into
rcrl
rcll
mov
mov
xor
loop
mov
sarl
imul
lahf
dec
out
cmp
aam
dec
rol
pop
xchg
icebp
test
jp
xor
sbb
mul
dec
jmp
add
add
cmp
mov
ljmp
test
dec
fwait
hlt
mov
out
rcl
add
outsl
int3
scas
push
xor
jnp
loop
cltd
sahf
ja
mov
es
cmc
mov
test
mov
pop
cld
ss
in
inc
je
jp
pop
sbb
jne
icebp
jbe
rcr
movsb
sarb
cmp
call
mov
std
out
push
int
pop
or
shl
outsl
std
inc
mov
sub
push
mov
test
push
cmpsl
mov
test
bound
pushf
pop
mov
stc
mov
mov
pushl
call
pop
mov
jae
cmp
adc
les
sub
xor
dec
add
insl
mov
dec
imul
fisttps
jge
xchg
arpl
sub
mul
dec
mov
daa
inc
int3
inc
push
movsb
jl
push
fldenv
xchg
dec
repnz
mov
test
ljmp
sub
push
lahf
push
cmpsl
pop
add
imul
rcr
xorb
push
lods
mov
or
rcrb
lods
arpl
mov
loop,pt
pop
test
xor
push
int3
rcll
mov
loope
cmp
jb
fwait
mov
test
add
pop
vpsrad
les
jge
clc
mov
dec
in
and
outsb
lock
scas
mov
popf
mov
daa
sbb
clc
pop
mov
cmp
adc
fisttpll
jne
rorb
pop
ljmp
push
mov
imul
inc
adc
jb
mov
add
cmp
out
imul
add
mov
cli
popa
cltd
int
rorl
mov
loope
cwtl
loopne
mov
mov
es
repz
leave
mov
mulb
stos
dec
sarb
dec
repnz
cmp
adc
xchg
mov
js
mov
rcll
add
jle
push
xchg
adc
cmpsb
ss
hlt
cmp
adc
andl
aas
adc
cmp
jl
xlat
stos
adc
or
xchg
and
sbb
stos
stos
inc
inc
dec
daa
fcoml
imul
jns
jne
cmp
gs
mov
das
or
pop
stos
cmpsl
into
insb
dec
or
int
leave
les
xchg
adc
notb
lret
push
fmul
jge
les
xchg
adc
ret
and
pop
arpl
lcall
fucomi
test
push
jne
pop
int3
cmpsb
sbb
xchg
or
jae
into
pushf
dec
adc
mov
cmp
addr16
and
push
cwtl
pop
lds
es
pop
push
test
pop
int
sub
or
or
jecxz
adc
pop
jmp
mov
nop
std
sbb
pop
inc
shrl
push
cld
jae
cli
cmc
mov
out
loop
push
pop
and
icebp
movsb
mov
ss
push
cmp
mov
or
rcll
shlb
scas
mov
xchg
out
push
stos
shll
es
xchg
lahf
jg
pop
aad
dec
fdivrl
mov
add
loop
dec
xchg
add
repz
mov
and
push
gs
fucom
pop
push
mov
lds
pop
mov
and
add
add
cmp
dec
loopne
add
sti
mov
add
pop
or
lret
sbb
xchg
cmp
push
pslld
mov
jo
jmp
mov
lds
lea
pop
lods
out
dec
out
ja
div
mov
xchg
ja
jae
inc
stos
or
mov
scas
mov
pop
in
and
and
ds
in
shrl
xchg
mov
add
add
aad
out
add
aas
fistps
xchg
mov
sbb
outsl
pop
xchg
cmp
bound
ret
scas
repz
add
popa
inc
sub
mov
gs
jbe
insb
cmp
dec
out
xor
push
dec
jb
cmpsb
mov
add
or
jns
sbb
add
stos
movsb
daa
out
push
and
mov
aad
dec
cmpl
enter
insb
lahf
jb
adc
push
gs
push
jbe
sahf
ljmp
mov
orl
rcrl
add
in
cs
ds
pop
loope
bnd
inc
sub
add
pop
push
add
test
adc
jge
sarb
int
in
xor
mov
or
in
and
test
cmpsb
xor
adc
outsl
lret
sub
cmp
out
int
lods
scas
lds
pop
inc
scas
pop
lret
push
mov
xor
shrl
sub
lcall
or
fdivs
fwait
mov
adc
in
sub
outsl
out
rcrl
or
add
push
mov
mov
lret
fwait
mov
roll
test
inc
push
test
ret
cmp
jp
ret
jb
inc
sahf
sbb
pop
test
mov
in
aam
lret
dec
jecxz
sub
add
inc
cld
and
rolb
out
js
and
jno
xor
mov
fst
xchg
adc
std
bound
enter
or
stos
push
add
push
jno
and
in
idivl
inc
and
xor
xchg
xlat
mov
mov
mov
adc
test
arpl
repz
jp
into
das
jns
mov
lods
adc
xchg
fmuls
cmc
and
insl
jmp
hlt
pop
pop
arpl
outsb
out
sbb
mov
jns
hlt
cmp
dec
stos
or
out
xchg
or
lret
xor
out
icebp
std
adc
ja
mov
sbb
cwtl
jo
jbe
xor
clc
dec
les
mov
div
pop
je
jmp
jmp
sub
pushf
mov
lods
xchg
gs
xor
or
xor
mov
inc
decl
arpl
jo
shl
pop
pop
xchg
xor
push
lock
mov
or
rolb
mov
push
dec
loope
gs
push
dec
xor
movsl
ja
inc
test
jle
scas
xlat
mov
cmpsl
scas
jl
bound
cmp
outsb
inc
scas
rorb
mov
pop
sti
add
and
pop
add
outsl
mov
ss
xor
loope
jp
faddp
aam
lods
pop
lods
xchg
dec
insl
cmpb
and
and
iret
adc
add
or
mov
aas
pop
mov
pop
into
xlat
inc
pop
cltd
push
in
xor
in
aam
sub
int3
push
mov
insb
mov
imul
pushf
les
fidivrl
andl
shll
dec
stos
inc
dec
fidivrl
mov
mov
test
sahf
loopne
or
cmp
aaa
jbe
dec
test
inc
or
xor
in
dec
sbb
mov
enter
sbb
sarl
dec
xchg
imul
jl
and
push
mov
mov
inc
das
mov
push
enter
pop
jp
xchg
lahf
pop
pushf
mov
xor
stos
push
mov
pop
mov
out
movb
dec
negl
jl
inc
out
pop
test
jns
jg
jp
inc
test
sub
or
adc
dec
push
sub
iret
shl
mov
inc
test
mov
mov
xchg
xlat
push
xor
cmp
sbb
push
roll
stc
cli
push
pop
mov
push
jae
dec
sti
clc
xchg
xchg
in
jmp
mov
sub
sarl
sub
push
lret
lahf
leave
mov
insl
fimuls
mov
enter
jecxz
xchg
addl
sti
lret
inc
pop
push
push
xor
cli
fcmovu
inc
mov
jg
dec
imulb
outsb
in
iret
push
mov
lock
sahf
pop
adc
xor
adc
lea
jae
gs
mov
xchg
movsl
daa
lcall
or
imul
jbe,pt
jecxz,pn
xchg
mov
xchg
f2xm1
inc
sbb
mov
cmp
jge
adc
xchg
dec
push
lea
jg
cmpsl
addb
fistl
sbbb
out
testl
xchg
cmp
lods
fwait
insl
or
loop
cld
mov
xchg
dec
xor
imul
pushf
pushf
mov
xchg
mov
adc
mov
das
jge
pop
lcall
and
pop
mov
ljmp
mov
les
inc
jle
ret
int3
inc
mov
das
lahf
in
lods
lret
sbb
add
or
mov
xor
cmp
jno
repnz
inc
xlat
mov
mov
jno
mov
adc
int
rcl
nop
sahf
test
jecxz
jle
and
paddb
add
orb
sbb
mov
es
sub
rcr
sub
pop
pop
jecxz
dec
jae
jmp
fmull
leave
dec
pop
lret
lahf
xchg
push
sub
repz
imul
xchg
jnp
adc
mov
in
add
jno
cmp
stc
pop
arpl
xor
ficoml
mov
out
cmpsb
dec
xchg
pop
jnp
xchg
xchg
adc
or
cmp
xchg
jle
test
push
int
fnclex
in
pusha
jae
xchg
xchg
mov
mov
mov
pop
pop
out
iret
in
out
ret
jnp
jbe
lret
aad
scas
ja
pop
addr16
lea
movsl
jmp
xchg
fldt
out
out
das
enter
ret
out
dec
adc
xor
aaa
notb
xchg
popf
mov
mov
enter
mov
adc
sub
lea
cmc
sub
test
addl
je
jge
mov
or
jge
inc
out
or
shl
push
iret
add
das
call
mov
aad
mov
xchg
push
lea
pop
inc
mov
aas
mov
pop
shrb
push
loope
and
inc
je
cmp
es
mov
or
pusha
xchg
push
cmp
dec
sub
jne
dec
mull
xor
push
call
push
lret
cmp
dec
gs
lds
pop
adc
fwait
movsl
mov
mov
stc
adc
loope
xor
cmp
mov
das
aad
dec
jns
aas
jp
push
pop
insb
xlat
add
mov
push
cmp
mov
cmc
out
mov
loopne
and
adc
das
stos
inc
cli
xchg
sarl
cmp
and
pop
fnstsw
rcll
ret
push
call
test
sarb
sbb
or
xchg
ficoml
dec
fwait
ret
push
pop
and
jae
popf
mov
sub
mov
or
shrl
scas
xor
push
sbb
pop
jns
cmp
pop
je
bound
pushf
dec
mov
pop
cmc
and
pop
inc
movsb
pushl
sub
int
sbb
sti
dec
out
repnz
mov
jge
mov
arpl
subl
les
inc
sub
dec
fdivs
loop
mov
mov
jl
push
fsubrl
xchg
pop
roll
fisubrs
xchg
sub
aad
mov
cmp
stos
data16
jl
andb
jb
movsb
dec
repz
int
popa
push
xor
and
adc
shl
jae
hlt
mov
cmpb
push
lds
arpl
or
add
mov
lea
sub
lock
cmpsb
pushf
popf
sarl
push
mov
and
mov
fadds
sbb
dec
stos
sbb
mov
rclb
jnp
xchg
cmp
and
movsl
xchg
and
mov
pmaxsw
jbe
fmull
lahf
hlt
imul
jp
icebp
push
or
gs
out
push
das
stos
mov
mov
les
pop
in
jb
cltd
in
inc
add
ds
mov
mov
dec
outsl
aaa
pop
leave
mov
stos
fs
stos
cltd
xchg
ljmp
out
push
xchg
mov
daa
outsl
sahf
and
mov
mov
cmc
push
jb
outsb
rcll
sti
jo
pop
dec
pop
in
push
jnp
mov
mov
and
dec
sbbb
lcall
sub
adc
xchg
nop
push
push
out
outsb
mov
sti
push
cmp
mov
mov
cltd
ja
bound
mov
lret
adc
jno
leave
test
mov
mov
xchg
xor
into
ret
mov
test
push
inc
mov
iret
sqrtps
les
mov
pop
pop
das
pop
inc
dec
or
shrl
test
add
ss
inc
outsb
test
iret
inc
dec
into
jnp
loopne
mov
shrl
mul
and
sub
fisubrl
rcrl
add
sbb
pop
enter
enter
dec
sahf
fisubl
xor
imull
int3
hlt
cmp
inc
add
or
movsb
lock
loop
mov
cmc
dec
pushf
cs
xor
cmp
ret
or
jge
loopne
jne
aaa
sub
out
lds
xchg
dec
pusha
loope
jne
xchg
sub
add
jge
mov
enter
outsb
xor
iret
push
mov
stc
ret
pop
jmp
jo
and
mov
inc
scas
or
inc
lahf
ret
clc
in
es
mov
pop
daa
aad
xor
pop
or
stos
mov
cmpsb
xor
mov
cmp
adc
inc
ss
sbb
inc
pushf
ljmp
xchg
orl
push
mov
aam
ret
sbb
pusha
jmp
in
xor
loope
test
sbb
pop
loope
inc
test
adc
les
hlt
and
cmp
inc
in
pop
pop
outsb
fs
mov
jg
jb
pop
out
and
lods
push
arpl
test
jg
lahf
loop
xor
sahf
mov
loope
xchg
push
clc
dec
ljmp
movsl
mov
mov
xor
push
cwtl
xor
jmp
in
mov
scas
xlat
sahf
cld
mov
sbb
sub
and
mov
out
push
inc
test
pop
in
nop
mov
mov
stos
inc
inc
scas
xchg
mov
inc
stos
xchg
push
dec
push
in
int
lds
xor
or
pusha
pop
mov
jae
fs
test
sub
clc
inc
fnstsw
lret
clc
sbb
sbb
icebp
ds
lret
scas
int
jp
cmp
out
mov
notb
mov
cmp
insl
fists
cmp
mov
push
xchg
icebp
dec
divl
add
dec
cmp
lds
popf
call
jge
popa
inc
mov
jb
mov
stos
or
adc
inc
or
xor
cmpsb
jo
int
pop
shr
daa
out
pop
sub
jno
jbe
call
sub
lock
in
xchg
mov
pop
and
xor
add
cltd
add
ret
mov
idiv
mov
jbe
shr
jo
adc
jne
cli
xor
test
mov
jb
out
mov
push
jbe
jns
inc
xor
fcomip
xchg
pop
and
movsl
cmp
sbb
inc
scas
pop
xchg
mov
mov
fidivrl
aas
adc
mov
xlat
jno
fisttpl
imul
clc
push
fwait
mov
mov
pop
lcall
mov
jl
insb
faddl
jns
popa
sub
mov
dec
rorb
in
push
add
xor
inc
xchg
cld
sub
mov
and
sbb
addr16
lret
inc
mov
cmp
inc
mov
in
adc
lods
xchg
je
hlt
sub
xchg
jmp
push
jge
pop
clc
loop
subb
jo
rorl
jae
push
fwait
lcall
lret
mov
insb
jno
mov
xchg
adc
mov
push
xor
in
fiadds
mov
ret
rclb
fidivs
adc
dec
inc
jl
cs
cmpl
add
jbe
mov
insb
add
mov
jle
add
pop
das
pop
lock
stos
jno
loop
imul
push
mov
fcomp
jb
fstpt
xchg
imul
int
xchg
inc
outsb
sbbb
xor
mov
adc
dec
sti
xlat
and
xchg
pop
fwait
mov
jns
dec
leave
sub
jmp
ss
pushf
std
test
std
push
aad
jecxz
out
data16
xor
movsl
es
ja
rol
sub
inc
or
push
add
adc
adc
repnz
ljmp
jns
or
scas
mov
mov
push
test
cli
insb
add
and
sbb
ja
sar
sub
lret
rcrb
jle
setbe
inc
sbb
add
adc
add
daa
pop
stc
test
cli
mov
sub
cs
std
mov
ret
add
mov
mov
into
incb
and
ret
add
stc
mov
das
push
mov
stos
dec
xor
add
out
or
push
lods
aam
into
jl
xor
fisubl
and
shrb
fld
jae
xor
sub
add
cmc
hlt
xchg
and
and
sbb
pop
pop
ret
sub
ja
popf
js
xchg
outsb
imul
sub
or
repz
cld
cmp
sarb
dec
mov
fstps
push
gs
fstps
ffree
fmulp
outsl
pop
call
pop
lea
sbb
cmp
lea
sarb
add
cmpsl
or
leave
pop
inc
adc
lcall
xchg
imul
dec
mov
mov
loope
sub
scas
rcrb
jb
xchg
mov
lret
mov
push
mov
loop
in
dec
loope
stc
ret
outsl
mov
stos
xor
mov
mov
xor
sbb
pop
cld
insb
cmp
mov
xchg
push
push
test
pushf
sub
fmull
jne
int3
push
out
in
stos
insl
movsb
fstpt
call
lret
or
out
rorl
cmp
xor
and
and
scas
xchg
pop
mov
adc
rcll
push
xchg
addl
jge
bswap
and
xchg
add
out
and
jno
jecxz
and
dec
add
in
cmp
mov
int
mov
pop
lret
xchg
mov
adc
xchg
inc
lods
outsb
xchg
xor
hlt
cmp
mov
les
movsb
loope
jae
and
sub
cmpsl
inc
or
cmp
dec
lods
lahf
push
ss
pop
out
sub
test
dec
les
mul
xchg
mov
addb
add
cld
push
xchg
ret
jmp
int3
fisubl
inc
fidivs
movsb
into
xchg
xchg
in
lock
stos
bound
cld
push
jmp
xorb
sbb
adc
ljmp
sti
popf
negb
les
jns
movsb
add
pop
sub
ret
or
push
sub
movsl
ret
jmp
out
dec
push
jb
ss
mov
cmpsl
inc
outsl
lds
jnp
or
stos
repnz
aaa
cli
movsb
loopne
adc
sbb
je
dec
or
adc
and
aam
out
imul
iret
pop
gs
test
cwtl
xchg
das
into
aam
dec
mov
pop
data16
test
aam
inc
mov
call
das
negb
mov
adcl
jne
jecxz
out
movsl
adc
loope
push
pop
or
leave
push
pop
jo
mov
push
jmp
dec
xchg
adc
pop
test
add
into
xor
cli
xchg
jle
push
add
shll
and
jp
clc
ret
lcall
shlb
cmp
sub
push
jg
inc
hlt
sub
outsb
mov
xchg
scas
repz
negl
add
cmp
mov
add
cwtl
test
push
movsl
shlb
push
mov
inc
and
xchg
sub
leave
ficomps
push
push
pusha
in
add
sub
es
lret
enter
sti
icebp
sahf
test
scas
sti
xchg
inc
decb
xlat
inc
pop
sbb
dec
and
dec
add
js
add
stos
mov
mov
cld
roll
jle
sbb
movsb
les
test
aas
cs
hlt
dec
sub
in
inc
and
lcall
jg
inc
sbb
int
dec
mov
add
movsl
enter
lahf
push
lea
lret
shlb
aad
mov
inc
mov
imul
push
pop
mov
pop
xchg
imul
std
out
pop
jp
push
cmp
push
add
xchg
repnz
sbb
popf
stos
xchg
sahf
sub
mov
jecxz
cmpsb
or
pusha
adc
stos
out
jne
loop
mov
xor
or
cmpb
jge
sub
jp
lret
shll
cltd
fmulp
cmp
loop
jle
icebp
daa
in
pop
and
loopne
pop
jmp
lds
mov
xchg
xor
xchg
test
sar
out
inc
ret
mov
fidivs
add
inc
enter
loope
scas
hlt
rorl
mov
lahf
ss
cs
mov
inc
cmp
pop
sbb
dec
jge
dec
loopne
rcrb
jg
lcall
mov
adc
dec
imul
stos
adc
ficomps
sti
and
aaa
cs
push
sbb
sub
gs
mov
gs
cwtl
adc
roll
loop
jne
stos
outsl
fdivs
daa
ret
inc
lods
cmpsb
mov
cltd
adc
xchg
icebp
mov
mov
or
push
int3
jbe
mov
or
dec
sub
lods
cmp
inc
iret
inc
lock
imul
sbb
imul
dec
lods
sbb
repnz
subb
ds
jnp
ret
loop
rorb
cmp
in
ret
lock
lea
and
out
push
scas
mov
jns
ffreep
pop
add
sahf
out
and
mov
xchg
scas
xor
inc
aas
popa
xchg
cwtl
cmpsl
push
repz
push
push
push
ja
lods
jle
pop
push
push
aas
mov
rcl
and
rcr
or
daa
dec
xchg
mov
fisubrs
test
pop
outsb
daa
mov
es
js
and
stc
aas
int3
sbb
cmc
fcomi
lret
pop
gs
mov
push
repz
insb
xchg
add
mov
aad
sub
xchg
dec
adc
test
mov
rcr
mov
gs
jp
or
push
lahf
inc
and
ljmp
inc
dec
pop
mov
test
and
cmp
jb
xorl
add
dec
xor
cmp
xchg
xlat
lds
ret
mov
fistpl
into
push
mov
sti
pushf
inc
inc
and
sti
cmp
aas
outsb
and
mov
inc
push
sbb
scas
lock
cli
inc
add
sbb
xor
dec
lahf
push
adc
jmp
ret
cwtl
out
in
lahf
cmpsb
xchg
sbb
jo
test
jl
lods
jg
push
movsb
rol
xor
mov
in
pop
js
add
xchg
lahf
inc
dec
bound
loop
xchg
add
aaa
xchg
call
insb
add
enter
xchg
jge
cmc
enter
ja
jl
lea
cwtl
cmp
mov
dec
push
jns
or
jb
mulb
stos
les
or
leave
xchg
je
fistl
pop
push
ds
sbb
fsubs
mov
subl
in
sub
mov
nop
loopne
fistps
stc
lret
jae
in
or
call
stc
ja
push
aaa
stos
mov
add
ss
popa
jo
ret
jnp
mov
enter
jp
cmp
outsl
adc
inc
adc
push
fcomip
daa
pushf
add
dec
std
adc
mov
and
pop
xor
jle
testl
or
movsb
pop
xchg
icebp
mov
lahf
sbb
insb
insl
jp
movsl
mov
iret
jp
add
imul
pop
scas
addr16
stos
mov
pop
mov
pop
add
mov
les
sub
push
fcmovu
inc
or
out
push
pop
stc
push
out
inc
sbb
sub
outsl
mov
xchg
stos
loop
mov
xor
ds
dec
mov
add
mov
divb
hlt
xchg
mov
dec
test
iret
pop
ljmp
mov
enter
or
insl
sub
cmp
sbb
and
pop
jno
pusha
pop
lods
out
xchg
push
cmpsb
arpl
push
js
std
test
syscall
lea
cmc
rorb
subb
in
sahf
push
gs
mov
rcr
call
pop
cltd
jl
xor
cmp
mov
mov
sbb
repnz
lret
mov
xorl
lds
xlat
aad
mov
cmp
sbb
add
arpl
iret
mov
inc
mov
and
jmp
mov
mov
leave
push
pop
mov
aas
xlat
iret
xlat
and
xor
insl
pop
xchg
add
adc
sbb
mov
mov
movsl
test
xor
les
popf
sbb
in
leave
cmp
hlt
std
cmp
fsubs
loope
xor
bound
xlat
push
popl
push
sbb
cmp
mov
cmp
sbb
aas
dec
ss
outsb
es
sub
add
push
push
std
pushf
mov
ds
ret
inc
jo
push
dec
aam
ljmp
in
xchg
add
xor
mov
push
shr
icebp
jg
dec
cld
pop
arpl
aaa
xchg
adc
adc
dec
insl
bound
xchg
push
mov
pop
xchg
mov
pusha
jo
xor
add
rcll
ss
adc
shlb
lds
scas
fldenv
pop
adc
push
in
pop
xchg
adc
ficoms
int3
xor
rcll
iret
inc
and
jle
cmp
cmpsl
pop
push
idivb
ficoms
mov
jl
psubsw
and
rol
sbb
add
out
imull
enter
or
add
pop
jbe
loope
push
mov
or
xchg
bnd
dec
xorl
imul
pop
ja
mov
xlat
cltd
mov
xlat
mov
inc
add
inc
mov
ljmp
or
icebp
cmp
rcrl
arpl
lea
push
nop
lahf
push
frndint
inc
mov
fildll
je
jecxz
fistl
xor
out
shlb
cwtl
cmp
loope
and
popf
sbb
outsb
in
xlat
pop
sahf
jg
jmp
test
repz
push
shl
in
sahf
jb
mov
adc
aaa
sbb
jne
insl
adcl
cmp
aam
add
fimuls
pop
dec
adc
mov
inc
unpcklps
ss
pop
cmp
stc
jnp
or
mov
dec
daa
mov
movsl
jl
pop
xlat
lret
js
sub
insb
push
xor
xchg
aaa
sub
add
push
xchg
mov
test
jne
mov
adc
adcl
sbbb
jge
sub
pop
push
xor
pop
inc
movsl
adc
iret
xor
fwait
jg
cmpsl
jg
pop
mov
int3
cmc
ljmp
shrl
std
push
ja
push
push
push
and
pop
cmp
insb
add
cli
xchg
push
mov
or
and
aam
popf
xchg
jns
inc
mov
fbld
mov
rcrb
ret
jno
pusha
ret
outsl
dec
inc
cwtl
pop
pusha
inc
pop
addr16
stc
pop
cmp
adc
mov
rol
je
std
mov
roll
testl
pop
mov
sub
inc
sbb
movsb
xor
dec
mov
push
push
aad
sbb
loope
aas
mov
test
push
test
push
cli
xchg
test
add
into
nop
outsl
or
and
or
shr
dec
stc
inc
jb
std
adc
pop
sub
pop
jge
push
daa
and
xlat
and
pop
in
mov
or
mov
in
movsb
cmpsl
sti
std
imul
jne
push
clc
inc
push
mov
sahf
dec
mov
out
xchg
xchg
push
fwait
push
and
fbstp
les
xchg
dec
mov
push
ret
nop
mov
dec
lret
sbb
push
test
es
ja
jp
xor
dec
cs
fsts
js
gs
xchg
push
xor
xor
notl
aas
call
and
mov
and
cmp
cmp
xor
stc
pusha
cmpsl
mov
lods
rcrb
insl
popf
lahf
push
xor
mov
fs
lds
or
cmp
dec
xchg
movsb
push
dec
hlt
daa
pop
cmc
aaa
ret
aaa
lods
nop
cmp
shl
faddp
cmp
pop
pop
pop
dec
cmpl
sbb
jmp
add
push
mov
out
sub
adc
fcmovbe
fistps
adc
inc
mov
add
mov
add
cmp
xor
adc
and
shll
sub
pop
scas
xor
cmp
fwait
dec
sbb
cmp
push
in
xorb
push
pop
es
mov
stc
cmp
and
inc
jno
push
cwtl
pop
into
out
mov
dec
subl
adc
fiadds
sti
mov
pop
pop
cwtl
in
mov
arpl
adc
jbe
mov
xchg
pop
in
adc
rcr
jns
in
or
test
or
aaa
fcompp
jmp
or
pop
insb
cmp
pop
sbb
into
loope
mov
xlat
xchg
pop
add
sub
xchg
movsl
js
shll
inc
xor
or
rcrl
dec
sub
faddl
dec
and
dec
ret
mov
cmpsl
fadds
ljmp
cmp
or
fisubs
push
cmp
xchg
shl
scas
aad
fbld
xor
cmp
mov
xchg
outsl
jmp
push
dec
sub
xor
pop
movsb
sub
in
daa
fs
jnp
mov
jecxz
incl
adc
scas
ds
out
pushf
icebp
stos
ja
pop
add
inc
orl
mov
mov
xor
imulb
push
push
pop
xchg
repnz
roll
out
dec
icebp
xchg
lods
mov
xor
hlt
xchg
jne
popa
test
stos
mov
imul
mov
jns
into
fmul
mov
xchg
addr16
pop
mov
sub
sbb
and
push
jbe
nop
mov
int3
lret
add
mov
mov
icebp
scas
cmp
adc
xor
jg
ja,pt
test
fstpt
fld
or
add
jb
fwait
lods
pop
clc
or
mov
fs
lods
ret
cmpsb
rorb
pop
stc
fldcw
dec
push
aad
xor
push
aaa
mov
mov
das
fimuls
and
stos
mov
mov
jecxz
addr16
jle
stos
es
mov
sbbb
jge
in
push
pop
in
push
and
push
sub
mov
jle,pt
in
aas
daa
lds
jae
and
hlt
test
jbe
ret
mov
inc
movsb
add
or
pop
popa
bound
dec
pop
push
dec
ja
or
sbb
jle
inc
and
lahf
mov
push
add
pop
add
incb
xlat
and
mov
aam
or
inc
int
lods
xchg
adc
repz
std
cwtl
xchg
mov
mov
xchg
inc
add
xor
sbb
jp
cmpsb
jbe
fwait
inc
pop
fs
lret
inc
sub
cmp
lret
mov
inc
std
push
jg
xchg
jg
xlat
lahf
pop
inc
xor
push
sbb
jne
mov
dec
aad
test
mov
cmp
sbb
arpl
mov
loop
xchg
mov
adcb
jecxz
jge
lret
add
daa
out
mov
add
or
addb
fadds
inc
xor
mov
lods
sub
insl
jg
test
mov
imul
dec
shll
test
push
fcomi
inc
lret
cmp
pop
sti
out
dec
push
cmc
les
add
int3
popl
jnp
xchg
xchg
insl
and
push
fisubrl
addl
movsl
lods
mov
test
leave
or
push
hlt
push
ficoml
and
outsl
jp
xor
pop
sarl
icebp
out
xchg
rcrb
mov
stc
and
fists
dec
jne
jae
icebp
cmpb
adc
xorl
xchg
push
xchg
jmp
ret
loope
outsb
lcall
imul
cmp
in
fsubp
js
mov
mov
jns
cmp
add
popf
hlt
mov
loope
dec
sub
jecxz
or
and
lcall
lock
push
rcrl
inc
lds
cmp
insb
test
stos
and
imul
xor
and
fwait
mov
push
loop
inc
in
push
enter
jae
ss
mov
fsubrs
div
sub
xor
push
fstpt
fiaddl
xchg
pop
sbb
das
fsts
push
mov
rcll
jns
mov
in
xchg
hlt
pushf
and
pop
cmp
loopne
outsl
push
mov
sub
adc
stos
repz
bsf
data16
call
mov
add
adc
mov
jg
cmp
mov
pop
sbb
fistpl
test
jecxz
ja
lds
jnp
loope
cli
cmc
imul
test
lahf
inc
cmp
xlat
and
and
add
push
add
dec
ds
call
js
lret
cmp
scas
mov
stos
fs
je
cld
adc
mov
outsb
jae
mov
pop
ljmp
xchg
gs
sub
fiaddl
xchg
fwait
lahf
dec
or
push
das
in
out
pop
cmp
mov
in
inc
test
sbb
lods
rorl
hlt
or
push
dec
cmc
xchg
ret
outsb
bnd
jae
sub
mov
dec
cmp
or
fimull
lods
push
cwtl
mov
xor
jno
gs
mov
mov
mov
mov
mov
jnp
call
rcll
std
mov
mov
addr16
jae
in
xchg
dec
or
cmpsb
and
jo
aam
les
push
aad
cmp
mov
xor
jle
xor
fisubs
mov
ret
pop
push
cmp
icebp
sub
pop
add
sbb
jb
in
pop
int3
sub
mov
je
movsb
fnsave
jne
mov
dec
popa
jo
mov
loope
int3
mov
mov
jmp
les
aas
test
sbb
xchg
jo
aam
clc
mov
dec
fistps
mov
jns
in
inc
movsl
cmc
and
xor
mov
mov
push
push
mov
xchg
call
sarb
mov
add
sub
jp
mov
and
es
or
dec
xchg
or
push
inc
mov
mov
mov
add
mov
jmp
adc
int3
inc
pop
clc
imul
dec
pop
inc
iret
inc
rorb
inc
mov
cmp
push
push
pop
ja
push
jge
daa
adc
mov
and
subl
in
in
in
cmp
xchg
shl
loop
sbb
mulps
fwait
xchg
xor
mov
mov
dec
push
xor
pusha
imull
mov
jae
jmp
sub
dec
inc
mov
int
mov
js
pop
or
ljmp
xor
push
jbe
jo
xchg
in
dec
ret
pushf
xor
sbb
ror
fmull
xor
sti
icebp
stc
add
pop
dec
mov
icebp
hlt
lcall
imul
cmp
cwtl
das
add
ja
ds
cmpsl
and
mov
sub
cld
ja
xor
mov
add
add
call
jae
sti
adc
rcl
in
adc
sbb
add
andb
nop
mov
mov
lret
mov
push
jge
pop
test
sbb
stos
push
loope
xchg
cmp
jne
lods
sub
jo
mov
ja
lods
adc
ret
add
sti
sbb
leave
aas
jecxz
ss
out
mov
cmp
rcrb
jmp
jae
add
pop
cld
mov
mov
popa
push
inc
push
popf
cmp
push
push
cli
cmc
mov
mov
jno
ror
jmp
or
mov
add
add
rcrb
jl
ret
push
cmp
shll
loopne
stos
jmp
pop
pop
lret
xchg
lods
imul
jo
xor
test
outsb
insb
xlat
cmp
mov
xchg
jb
addb
cmp
test
and
xchg
xor
push
frstor
loop
inc
inc
popa
int3
xor
sub
scas
int
mov
pusha
mov
dec
movl
jl
lret
dec
lahf
mov
sahf
fwait
or
xor
ss
mov
push
dec
scas
mov
mov
xchg
sarb
lds
dec
dec
xchg
mov
sbb
adc
mov
rorl
jnp
js
mov
cmp
aam
popa
divb
sbb
mov
xlat
orb
push
xor
mov
dec
pop
jb
in
jo
in
fdiv
loopne
cld
jnp
stos
fiadds
fildl
mov
lahf
mov
push
mov
in
lahf
cmp
xchg
cmpsb
mov
addr16
cmpsb
movsl
mov
insb
nop
shrl
scas
or
lds
subb
test
rorl
cltd
mov
lahf
xor
jb
and
mov
pop
repz
add
and
lret
push
and
shll
push
xchg
js
es
inc
dec
jg
stc
pop
add
mov
jo
out
push
sub
adc
or
mov
aad
mov
loope
je
inc
addl
push
and
add
in
loopne
inc
lret
sub
cld
sbb
out
mov
sahf
mov
push
shld
push
push
imul
outsl
pop
mov
ja
repnz
lcall
cmp
movsb
or
cmc
xorl
daa
pop
js
sbb
out
pop
mov
jno
fidivl
gs
testb
mov
push
mov
xchg
ret
adc
mov
fimull
stos
add
mov
repz
imul
mov
sbb
arpl
das
mov
inc
ljmp
pop
pop
dec
imul
sub
aaa
mov
pop
jmp
cld
jge
pop
iret
xchg
mov
cmpsb
pop
stc
insb
mov
int
dec
popf
inc
mov
out
arpl
lahf
sub
pushf
add
cwtl
bound
and
mov
shrl
sbb
icebp
mov
push
or
cmpb
jg
ret
sub
add
fsubl
inc
loopne,pn
pop
mov
jg
mov
imul
fdivl
es
test
scas
shll
xchg
add
cmpsb
xchg
pop
sahf
sbb
and
in
xchg
add
outsl
repz
xlat
test
test
mov
into
ljmp
sti
mov
add
subl
add
mov
das
mov
ja
in
rolb
or
aas
push
mov
cmp
jg
into
movsl
push
fstl
mov
int
lock
xchg
mov
push
mov
lcall
cmp
test
sub
xchg
mov
xchg
fyl2xp1
push
inc
fdivrl
xor
sbb
sti
loop
lret
mov
or
add
pop
es
lea
sbb
mov
mov
cs
dec
jae
enter
clc
aas
push
adc
outsl
addr16
dec
addr16
adc
push
mov
dec
nop
mov
insb
mov
jb
outsl
push
sbb
lcall
das
cmp
xchg
popf
in
cmp
or
cmp
jne
push
xor
test
ss
xchg
mov
push
cmp
push
outsb
inc
ljmp
hlt
pop
and
popa
lea
addr16
hlt
cli
add
adc
adc
shlb
pop
pop
jl
push
jg
xor
sbb
or
std
pusha
add
pop
or
inc
clc
mov
sub
scas
jb
and
sbb
mov
pop
sub
jle
insl
mov
sub
jle
and
pop
gs
pusha
cwtl
movsb
xor
sbb
lahf
sbb
xchg
or
orl
mov
and
lahf
adc
dec
adc
xor
cmp
clc
mov
cmp
in
jg
inc
pusha
out
mov
adc
dec
inc
testl
pop
lret
test
insb
adc
shr
mov
inc
mov
add
adc
daa
pop
jno
mov
jge
dec
cmp
mov
mov
bound
dec
add
or
imul
sbb
movb
fistps
jmp
ficomps
pop
push
jnp
push
inc
outsb
inc
inc
adc
test
mov
ds
mov
popf
sti
lcall
paddb
popa
or
dec
stos
inc
mov
or
outsl
lcall
cmpsl
into
cmp
inc
aam
ja
pop
testl
push
mov
push
hlt
lea
xchg
cmp
mov
pop
mov
call
mov
mov
aam
push
push
xchg
jnp
jno
lods
jge
mov
call
jg
int
popf
xor
jmp
int
xchg
sbbb
pop
addr16
inc
cmp
outsl
adc
inc
insb
mov
bound
sub
ror
movsl
fidivl
in
adc
aam
std
add
sbb
lock
fsubl
ret
cmp
aad
dec
sahf
in
cmpsb
arpl
cmc
adcl
push
shrl
cli
stos
iret
insb
cmpsb
gs
dec
adc
arpl
or
sub
popf
jo
pop
cmp
test
imul
jp
push
add
popa
sbb
aad
sbb
out
mov
sbb
shll
lcall
jmp
inc
loope
push
popf
mov
mov
std
aaa
mov
adc
dec
xchg
dec
mov
adc
pushf
xor
jg
fst
neg
nop
mov
xor
add
sarb
and
mov
aam
mov
loop
insb
lahf
je
ret
mov
ficoml
movsl
dec
stos
xchg
sbb
loop
icebp
sbb
pop
sarb
add
sub
in
xchg
mov
dec
sub
dec
jecxz
mov
and
and
aad
dec
pop
add
aad
aam
jge
out
mov
add
fmull
lcall
out
bnd
imul
mov
inc
out
cmc
xchg
gs
movsb
mov
jp
pop
push
fbstp
popf
movb
imul
cmp
xor
stc
pop
cs
push
and
mov
dec
xchg
loopne
fmul
xor
and
test
sar
sbb
or
cld
mov
mov
cmp
jne
aas
or
movsl
mov
mulb
jo
mov
sub
dec
dec
popa
in
lcall
mov
or
jecxz
pop
fsubrs
inc
mov
int3
lods
sbb
fisubl
add
cmpsl
fadds
lock
push
push
dec
in
lcall
jnp
addl
and
mov
jo
jmp
aas
lret
int3
scas
sub
push
adc
xorl
repz
fbstp
cltd
jns
pop
mov
repnz
add
movsl
jmp
and
mov
out
pop
sti
xchg
mov
outsl
lock
outsl
lods
inc
jno
mov
and
cmpsb
add
mov
ss
cwtl
mov
pop
adcl
jne
mov
xchg
je
out
nop
shl
je
ss
cmp
push
push
incb
leave
popf
int3
dec
dec
dec
notb
mov
mov
push
inc
aad
loopne
lock
mov
pop
pop
jp
fnsave
push
aaa
sbb
shrb
mov
pop
testb
mov
pop
dec
loope
pop
sbb
lcall
xlat
mov
cmp
mov
sbb
mov
loop
xchg
jno
fnstenv
cld
ja
test
pop
scas
in
mov
pop
jmp
sub
nop
pop
daa
popf
in
mov
push
jmp
adc
jno
pop
dec
ljmp
fsub
ljmp
imul
push
pop
or
test
loopne
cmp
mov
cmpb
add
inc
add
jle
mov
fs
hlt
push
imul
es
ljmp
sub
and
xor
sub
sub
sahf
pop
mov
pop
cs
stos
test
addr16
stos
sbb
push
sub
pop
mov
cmp
xor
jbe
sub
sub
hlt
repz
dec
mov
fwait
adc
mov
dec
mov
sub
fdivl
scas
pusha
sub
xchg
and
sbb
cmpsb
xchg
in
pop
sbb
idivl
fildll
test
and
loope
insl
dec
ljmp
mov
pushf
jae
adc
stc
mov
jmp
cmpsb
mov
aam
cli
das
in
and
sub
jecxz
xor
mov
cs
lea
adc
lea
lods
mov
inc
cltd
jb
xchg
scas
mov
or
in
dec
push
mov
fsubrs
fcmovne
leave
or
je
lods
inc
xor
jns
xlat
cltd
shlb
add
jne
outsb
xor
pop
in
inc
divl
xchg
xchg
mov
fistps
xor
xor
testb
in
cmp
test
jle
ljmp
push
mov
push
xor
das
fmull
pop
add
in
les
xor
push
add
leave
mov
mov
mov
xchg
lcall
dec
push
inc
adc
fcmovnu
fists
pop
mov
xchg
fsts
dec
int3
push
pop
daa
sbb
dec
sub
pop
popf
lcall
add
fstps
leave
mov
cmc
hlt
jmp
mov
aad
mov
and
movsb
sub
lds
dec
mov
nop
lcall
pop
aam
xor
pusha
fwait
out
push
or
outsb
cltd
js
sbb
jp
jecxz
int
jo
cmp
mov
jbe
mov
in
push
les
cmp
ficompl
sbb
pop
ss
aad
jmp
xor
stos
sbb
jne
push
jg
loopne
xchg
in
adc
dec
or
adc
je
nop
inc
mov
das
test
mov
push
in
mov
test
movsb
lahf
mov
test
pop
mov
xchg
mov
pop
inc
jle
pop
cld
mov
push
jl
mov
sbb
scas
and
in
outsb
xchg
sbb
negl
add
xchg
mov
sbb
cmpsb
add
fcoms
clc
data16
xor
ret
call
push
xlat
dec
jbe
adc
rolb
test
ret
pusha
push
adc
pop
mov
fistl
pop
lods
mov
pusha
cmpb
dec
dec
sahf
fiadds
add
lcall
mov
or
es
movsb
inc
addr16
scas
mov
nop
cmp
sub
jae
fadd
inc
pushl
or
out
fucomi
push
xchg
xchg
je
pusha
xor
push
icebp
xorl
xor
das
push
push
adc
sahf
mov
mov
fldl
fnstenv
jg
push
lcall
repz
ror
ffreep
sub
xlat
push
push
lcall
mov
xchg
inc
mov
push
push
je
test
or
adc
inc
mov
lahf
test
and
jp
cmp
test
jle
lods
loope
lea
add
jl
cmpsl
add
in
repnz
pop
out
xchg
jmp
or
push
and
ss
jne
sbbl
testl
cmpsl
leave
and
and
roll
or
pop
sub
in
out
js
ljmp
nop
dec
mov
fmull
push
xchg
scas
popa
dec
sbb
ss
and
mov
shl
incl
lock
outsl
or
lcall
jo
loop
addb
div
mov
jno
addr16
jb
mov
in
test
pop
mov
mov
popf
add
pushf
cmpsl
lahf
pop
xchg
jo
dec
mov
inc
fstps
and
pop
out
mov
sub
ror
push
add
outsl
cmp
push
imul
pop
pop
xchg
je
cmp
mov
pop
jmp
cltd
cltd
bound
insb
sub
pop
push
outsl
and
mov
jae
movsl
ret
roll
push
mov
adc
mov
cmp
xchg
push
mov
xor
data16
push
add
xor
mov
jp
sub
in
xchg
dec
or
jae
ficoml
repz
jb
mov
jnp
lock
or
fdivs
push
popf
xor
fistpll
scas
daa
outsl
sbb
lcall
sub
aam
push
xchg
mov
shll
xchg
int3
scas
jle
xchg
int3
or
mov
or
hlt
js
dec
push
push
retw
stos
dec
jns
in
mov
fisttps
enter
aaa
in
rol
fbstp
mov
mov
test
icebp
fistl
js
mov
out
dec
mov
adc
mov
in
sub
lock
pop
sub
outsb
rclb
jp
ja
jecxz
jecxz
sbbb
sub
stos
lock
repz
sub
inc
stos
aam
daa
or
mov
gs
icebp
arpl
ret
dec
fisubrl
pop
lea
and
lea
mov
loopne
repz
mov
mov
js
mov
and
mov
inc
inc
imul
mov
push
je
pop
lea
scas
mov
pusha
push
outsb
ret
and
pop
mov
aam
inc
and
out
jae
or
stos
pop
jno
jmp
lods
and
sbb
mov
adc
mov
cmp
cli
and
addr16
shrb
cmp
scas
fprem
adc
cmp
sub
aam
pop
rorb
adc
mov
mov
adc
cmp
call
xchg
dec
ja
test
mov
scas
iret
jg
or
ljmp
lds
outsb
sub
or
je
cmp
mov
ret
mov
fists
push
jno
insl
rcrl
rclb
jecxz
cmp
lods
dec
mov
mov
inc
xlat
scas
cwtl
outsl
aam
lret
add
icebp
xor
push
inc
std
add
jno
fstl
cmc
imul
push
and
cmp
pop
rol
cmp
pop
data16
ljmp
fwait
mov
lcall
nop
in
and
cmc
push
shlb
mov
insl
pop
test
lods
jbe
mov
and
repnz
and
jle
mov
roll
repz
sbb
pop
inc
xchg
addb
orl
nop
sarb
xor
mov
mov
sub
add
neg
out
dec
rclb
jno
iret
push
test
rclb
sbb
ds
cltd
dec
cmp
add
lahf
jns
lcall
and
ret
fstpt
or
repz
push
pop
incl
mov
jl
aad
pop
mov
imul
xor
push
lret
pop
pushfw
std
add
xlat
and
decl
movsb
adc
loopne
mov
lods
arpl
shll
in
fwait
int3
add
mov
inc
out
mov
iret
mov
ljmp
push
inc
cmc
xchg
mov
stos
jl
and
pop
inc
inc
sub
test
and
pop
jge
pusha
fdivp
sbb
pop
aaa
rcll
adc
sub
imul
in
add
or
daa
pop
jns
int3
lahf
dec
jnp
sub
jae
ljmp
mov
fsincos
les
xchg
ss
cmp
mov
movsb
cltd
push
sub
js
flds
in
mov
dec
out
mov
add
dec
jne
jne
mov
jg
int3
sbb
xchg
add
and
es
rcl
fwait
mov
inc
mov
ljmp
dec
bound
fnstcw
sbb
in
adcl
test
popa
stos
mov
push
cmpsb
mov
push
inc
int3
inc
lret
push
ds
sarl
pop
mov
rcrl
fs
cmp
mov
jle
xchg
arpl
and
push
sub
repnz
out
test
data16
xor
mov
clc
pop
or
adc
mov
and
sub
pop
movsb
rorb
ds
test
stos
push
fisubrs
pop
push
cvtdq2ps
mov
xchg
sub
bound
pop
and
jo
shr
addb
fsubrl
aam
mov
test
mov
cltd
rcl
mov
and
test
cmp
ljmp
cmp
test
mov
testl
inc
mov
rcl
imul
test
lock
lock
fcmovu
mov
test
xchg
xchg
cmovnp
ds
mov
ds
shrl
aaa
xor
pop
cs
dec
jmp
inc
cmp
mov
ljmp
popa
aas
mov
std
dec
push
int
out
ja
adc
xchg
jecxz
sbb
adc
fwait
inc
pusha
mov
or
push
adc
mov
xchg
clc
add
jecxz
or
adc
xchg
fs
arpl
in
addr16
lret
pop
out
add
scas
bound
rclb
clc
add
mov
and
loope
lock
and
repnz
in
mov
mov
mov
mov
mov
ds
das
sbb
mov
and
mov
das
or
adc
push
or
ljmp
andl
push
lods
push
test
mov
xchg
inc
mov
mov
pop
orb
fdivs
xor
xchg
jg
popf
mov
sbb
and
adc
and
mov
loopne
and
ja
sub
cwtl
xchg
add
int
add
sbb
adc
daa
pop
iret
sbb
ret
push
push
add
adcl
out
jns
fmuls
test
ret
and
lods
push
sahf
fdivl
push
or
cwtl
jb
add
mov
mov
add
push
xorl
push
insb
dec
or
sarb
inc
jbe
jecxz
mov
pusha
lods
mov
sbb
cs
mov
mov
stc
dec
jmp
insl
mov
inc
pop
js
hlt
push
cmp
insl
pop
data16
loope
dec
jne
and
or
fwait
push
mov
inc
push
jnp
dec
lods
das
unpcklps
jns
inc
sub
inc
aam
mov
in
add
push
fmul
cmp
stos
gs
mov
add
add
lret
test
and
mov
jmp
adc
xchg
jnp
sub
adc
leave
dec
lret
or
push
rcrb
mov
pop
add
cwtl
push
iret
xchg
adc
mov
in
lret
push
push
in
enter
push
incb
aas
mov
add
out
mov
or
mov
addl
adc
jo
jno
test
pushf
pop
fisttpll
pushf
mov
out
lock
mov
lds
mov
data16
jnp
lcall
jle
pushf
lret
insl
xchg
aam
cli
cwtl
jp
mov
loop
inc
cmp
mov
or
adc
add
jle
incb
scas
push
mov
rorb
xorb
dec
jbe
fs
cmp
adc
fcompl
aad
imulb
in
push
test
scas
sbb
dec
gs
iret
sub
int
cmp
add
mov
inc
add
movsb
jl
pop
push
je
push
mov
lock
cmpsl
lds
call
pop
loope
outsl
dec
les
push
inc
fstp
jle
shl
inc
push
xchg
out
and
jge
mov
call
lcall
in
cmpsl
imul
out
scas
cli
popf
out
jo
mov
push
jecxz
ficoms
xor
adc
lret
mov
stos
mov
dec
arpl
in
or
adc
outsb
mov
xchg
shrl
pop
stos
das
clc
fcoms
sub
arpl
lcall
push
dec
lea
pushf
add
insl
dec
sahf
pop
dec
jae
fistpl
jae
xchg
inc
push
cmpsb
sbb
fidivl
jne
stc
xor
jbe
movsb
enter
enter
adc
ret
push
test
cld
add
push
daa
xchg
out
cmpsb
lock
dec
jnp
enter
mov
add
mov
adc
xor
lds
add
jbe
aas
js
stos
inc
xchg
mov
jmp
jnp
in
clc
in
out
int
insl
rclb
dec
dec
lods
cs
cmp
mov
mov
push
dec
dec
sbb
dec
cmpsb
xor
mov
push
xor
adc
cmpsl
icebp
push
pop
scas
cmpsl
push
mov
in
imul
jnp
push
push
push
sub
xor
xor
hlt
dec
enter
xor
gs
jmp
jne
loope
pop
push
add
mov
sbb
adc
dec
cmpsb
lahf
pop
enter
pop
xchg
lds
test
sub
in
add
outsl
das
pushf
dec
jmp
inc
imul
mov
xor
and
cmp
jnp
popa
push
imul
add
push
lahf
push
stc
out
cmp
int3
dec
fcoms
stc
or
mov
or
fnstenv
xlat
fdivl
sti
cmpsl
push
add
dec
sbb
sbb
pop
cbtw
in
dec
jbe
sub
cli
push
add
add
or
outsb
cmp
sbb
movsb
fildll
out
lahf
push
shrb
stos
sub
pop
cmpsb
js
stos
mov
addl
lods
dec
cmp
jl
dec
or
movsl
jmp
cmp
jge
mov
in
pop
lret
popf
aas
dec
cmp
mov
and
add
movsl
sbb
inc
out
repz
cs
mov
cld
ljmp
shlb
inc
lods
mov
aam
outsl
loopne
mov
das
xchg
repz
mov
icebp
jge
fldenv
and
leave
sbb
fwait
jo
mov
xor
inc
pop
das
dec
cmp
dec
fcmovnb
in
sahf
enter
mov
aas
loopne
fisttpll
loop
jo
push
cmpsb
sub
test
adc
rclb
in
clc
xchg
add
pop
movsb
popf
mov
mov
mov
test
sbb
dec
xlat
push
testb
ffree
out
pushf
pusha
andb
dec
pop
das
xor
mov
loope
mov
inc
adc
push
mov
pop
mov
push
jns
in
sbb
pushf
mov
dec
iret
movsl
je
pop
das
repnz
pusha
jno
out
dec
add
lds
jns
dec
or
imul
negb
jge
cmp
nop
shl
lret
cltd
insl
push
ret
gs
je
js
in
js
mov
call
or
mov
repnz
addr16
cmp
loop
leave
push
popa
and
cltd
pop
out
xchg
scas
adc
ficompl
mov
inc
in
jl
les
rcrl
push
add
fwait
mov
hlt
fnstcw
imul
lods
dec
dec
xchg
xchg
inc
xor
mov
cmp
inc
aam
test
fistl
idivl
lcall
adc
sub
adc
pop
xchg
lock
cmp
mov
adc
mov
rolb
cmp
loopne
jg
les
pusha
pop
movsb
sub
imul
jne
in
movsl
jg
je
insl
orl
fwait
sub
xor
aam
sub
mov
rorb
mov
push
fnstenv
dec
xchg
and
dec
aaa
push
ljmp
addl
inc
inc
cmp
add
mov
mov
jo
mov
ja
mov
mulb
lods
add
push
aad
sarl
or
ficomps
mov
movsl
insb
push
dec
adc
repnz
jae
repnz
mov
insb
cmpsb
movsl
pusha
dec
add
lcall
mov
sbb
lock
push
xlat
xlat
je
inc
nop
pop
inc
jge
pop
push
orb
into
inc
aad
sbb
pop
stos
ss
leave
inc
mov
scas
bound
push
gs
dec
push
out
xchg
dec
inc
dec
hlt
ret
mov
comiss
fistpll
ret
pop
frstor
sub
cmpsl
add
pushf
jmp
aam
xor
dec
lahf
xor
mov
mov
sbb
jle,pt
loop
movsl
xor
movsb
cmpsb
mov
fdivrs
test
and
xor
sub
dec
sbb
jg
xchg
leave
repz
cmc
or
repz
xchg
add
imul
mov
jb
cli
in
dec
xor
xorb
xorb
mov
pop
gs
dec
mov
in
das
jnp
dec
push
push
dec
push
jg
sbb
cmp
dec
push
hlt
dec
fs
jo
fcompl
jmp
adc
loope
out
es
dec
lock
push
jge
fistl
pop
stos
lock
outsl
outsl
adc
cmpsl
add
inc
fucom
add
dec
xchg
pop
mov
adcl
jmp
addl
jge
pop
hlt
cmovae
sti
xor
sbbl
mov
inc
lret
dec
adc
xchg
sbb
insl
movsb
inc
mov
jno
out
popf
add
lret
js
insb
add
fcompl
adc
hlt
adcb
push
aam
mov
rorb
jmp
scas
insb
mov
fdivrp
lret
popa
cmp
push
mov
jmp
sbbl
mov
or
jl
push
notb
icebp
add
loopne
sti
or
scas
leave
iret
jo
lods
cmp
in
mov
or
mov
fistl
dec
adc
rcll
and
xchg
push
and
in
jle
notl
je
mov
fstp
jmp
outsl
call
push
adc
sbb
mov
xor
repz
sarl
xchg
lahf
loope
testb
mov
mov
js
fsts
mov
and
je
arpl
loope
cli
out
adc
cli
sahf
push
lcall
lock
call
stos
nop
add
cwtl
push
das
mov
cmp
cmovae
mov
jg
xorb
push
mov
mov
pusha
fdivr
movsb
inc
sbb
aad
xlat
out
pop
aam
rclb
inc
cwtl
dec
adc
add
sbb
outsb
jl
ret
jecxz
loopne
test
jecxz
pusha
push
in
rclb
addr16
jecxz
aad
push
test
sub
xor
mov
dec
dec
fdivrs
sub
mov
pop
lahf
push
cmp
inc
insl
and
cmp
popa
sub
stc
cmp
xor
jne
inc
push
push
jg
sti
fisubs
call
loop
icebp
mov
popf
jl
in
push
fwait
or
fdivrp
repz
mov
jnp
xor
hlt
imul
lahf
fdivrl
aaa
lahf
lret
pop
and
push
out
xor
loope
xor
xchg
pop
lret
xchg
test
xor
xchg
jl
scas
lods
mov
rcl
int
test
iret
and
je
cltd
mov
or
in
imul
in
jl
bnd
test
add
and
add
gs
fimull
mov
lods
add
jl
sub
cli
mov
lret
jmp
in
inc
arpl
sub
mov
xchg
shlb
sub
sahf
jne
jl
pop
jmp
clc
aad
daa
jnp
xchg
push
shl
jae
daa
cmp
cmpsl
dec
jbe
sbb
iret
out
mov
sub
inc
jbe
pinsrw
mov
mov
into
and
cltd
popa
rcrl
cmp
mov
daa
repnz
daa
xchg
sbb
push
xor
stos
sbbb
iret
mov
int
fiaddl
hlt
shl
insb
sbb
inc
clc
pop
jg
ds
ss
nop
mov
inc
rcll
scas
sub
int3
cmpsb
cmp
faddl
push
into
lret
nop
fcomps
and
popa
jns
add
xchg
push
xchg
dec
into
xor
outsb
fadd
dec
outsl
ffree
add
add
mov
sub
pop
or
outsb
ficompl
es
jo
sub
xor
mov
in
ficomps
pop
das
dec
mov
jnp
into
shrl
ret
and
xor
adc
fs
ss
push
movsl
dec
ret
leave
add
push
adc
sbb
xchg
cli
aad
into
xlat
cmpps
sbb
rcll
adc
cld
pop
adc
cmc
push
xchg
jmp
test
test
orl
xchg
bound
fsubrs
negb
lret
push
cmp
jmp
cmp
pushf
in
inc
dec
mov
add
dec
xor
testb
mov
xchg
mov
inc
loopne
insl
mov
xor
idivb
or
or
addr16
sbb
test
sub
mov
insl
mov
movsb
subl
fcoml
aas
push
adc
inc
lds
test
or
push
imul
xor
push
mov
push
jno
incb
sub
mov
outsb
loopne
fmuls
cmp
mov
mov
jno
xor
loope
adc
fstps
sub
lock
pop
push
and
fdivl
mov
push
xor
nop
mov
and
xor
fnstcw
add
stc
adc
ja
js
adcl
cltd
mov
inc
call
mov
test
pop
fs
jb
scas
sub
dec
sti
and
cwtl
sahf
and
dec
test
pop
gs
dec
call
xchg
jle
jnp
jecxz
pop
clc
test
popa
jg
loop
add
jp
mov
pop
cltd
lret
xchg
adc
dec
inc
xchg
dec
enter
xor
and
jge
adc
enter
test
lea
mov
jb
inc
push
test
lock
cmc
into
cltd
and
jne
in
cld
test
fstpt
fs
lret
jp
addr16
mov
cmp
lret
or
mov
and
xchg
mov
not
xchg
lret
std
rcll
pop
inc
imul
test
insl
lds
les
cmp
jb
push
in
sbb
pop
xchg
test
sbb
movsb
mov
mov
mov
aaa
subb
imull
pusha
xchg
std
xor
lret
std
aam
hlt
sbb
sahf
fidivrs
adc
bound
xor
push
xlat
or
adc
fidivrs
mov
scas
lea
sbb
sbb
adc
ffreep
sti
mov
mov
fists
push
int
das
add
lcall
push
xchg
adc
aam
xor
fs
std
pop
jbe
push
cmp
aam
mov
or
cmpsl
mov
outsb
add
jbe
push
mov
cmp
ja
ret
cld
pop
ret
shll
cltd
cmc
mov
in
sbb
pop
cmp
fnsave
aas
lret
pushf
add
int3
aaa
sbb
fs
cmpsl
scas
mov
aad
inc
fsubrs
add
jecxz
jmp
xchg
lods
shlb
jmpw
pop
shl
out
cmpsb
xchg
adc
add
inc
dec
in
ljmp
arpl
pop
call
sub
lcall
sarl
dec
out
dec
repnz
jecxz
mov
or
and
out
outsb
vcvtpd2dq
data16
out
push
pop
movsb
jne
fwait
pop
jns
shlb
nop
pop
sub
adc
cmp
and
jecxz
and
cmpsl
xor
sub
sub
cmp
xor
inc
aad
push
pop
inc
adc
or
adc
pop
sub
mov
test
jb
divl
leave
push
scas
jmp
push
and
xor
inc
jge
je
aas
orb
sbb
fistps
or
pop
or
das
push
enter
daa
aad
mov
mov
mov
lods
mov
andl
inc
sbb
mov
call
mov
dec
xor
bound
mov
test
icebp
mov
fmull
adc
sbb
dec
mov
test
test
jmp
push
push
sbb
cmp
inc
imul
adc
jecxz
or
mov
orb
push
and
lret
test
fwait
stos
push
ljmp
push
inc
or
test
std
inc
das
cmp
xchg
es
adc
sub
adc
dec
out
orb
scas
and
pop
cmpl
popf
and
inc
push
mov
jecxz
mov
or
inc
pop
clc
ds
xor
in
out
push
testl
nop
dec
inc
out
enter
or
loope
outsb
jmp
shll
fmull
nop
xchg
or
mov
movsb
popf
xchg
sahf
aam
daa
inc
cmp
cmpsb
mov
push
arpl
imul
mov
stos
mov
xor
push
bound
out
xchg
outsb
or
adc
rorb
and
rcrl
les
shlb
xor
push
xchg
jb
jge
jnp
or
xor
addr16
cmp
test
mov
lock
mov
mov
int
popf
jb
ror
test
sbb
add
sub
mov
shrl
fcmovnbe
dec
mov
mov
je
mov
sbb
movsl
push
sbb
rcrl
cs
adc
add
inc
and
jne
inc
dec
inc
and
test
movsb
clc
push
push
dec
adc
in
rcrl
movsl
mov
jg
push
adc
movsb
xchg
movsb
and
hlt
dec
xor
sbb
sbb
mov
std
repnz
dec
idivl
inc
leave
popf
mov
push
push
mov
mov
insl
stos
lds
push
cmp
inc
inc
or
jb
mov
pop
inc
mov
gs
mov
cmpb
push
xor
adc
mov
aas
orl
adc
mov
mov
adc
loope
js
lcall
jg
enter
jp
xchg
pop
sbb
fisubrl
pop
jno
stos
imul
jns
sub
enter
sub
rcr
jo
out
lock
leave
xlat
movsl
mov
mov
loop
movsb
dec
push
movsb
mov
imul
cmc
test
sub
lock
loopne
popa
outsl
xchg
mov
push
out
fs
push
lcall
sbb
js
divb
cmpsb
mov
addr16
xor
mov
xchg
sahf
xor
aam
cmp
mov
sahf
sti
lock
test
icebp
sahf
repnz
insl
sbb
jecxz
mov
movsb
push
and
sbbb
dec
xchg
mov
pop
cld
sbb
in
add
std
and
int3
cmp
cli
inc
cmpsl
loope
mov
outsl
cmp
cmp
cltd
sbb
inc
xor
loopne
cltd
cmp
test
sbb
ficompl
lret
dec
push
push
rcrl
into
mov
and
sub
add
sahf
test
inc
mov
daa
shrb
cmp
mov
mov
f2xm1
or
push
movsb
in
out
fs
mov
mov
iret
stos
or
sbb
inc
adc
insb
fwait
stc
stos
push
addr16
jbe
fsin
and
push
lret
cld
addl
imul
cwtl
mov
sti
mov
cmp
aam
add
pushf
push
rolb
hlt
shl
lahf
sbb
jp
or
sub
movsb
mov
xchg
rol
pop
out
gs
dec
jge
imul
cwtl
and
jp
pop
test
pop
jae
nop
cmp
sar
leave
scas
out
mov
das
fisttpl
xor
pop
iret
aam
sbb
jl
jecxz
push
xor
push
jae
push
xchg
xchg
incl
divb
js
sarb
inc
lock
cmp
sahf
inc
int
dec
mov
in
pop
push
jo
or
into
and
lods
fisubs
cli
jb
push
addr16
inc
mov
xor
cmp
or
inc
pop
in
cmp
dec
jg
and
xchg
pop
jl
push
mov
adc
jmp
jmp
ret
jl
cli
mov
push
fldenv
mov
cmp
sbb
cmp
pop
into
cmp
jl
xchg
add
jmp
bound
cmp
jo
sub
jmp
sbb
pop
fs
sbb
jbe
in
push
or
mov
gs
mov
or
push
inc
xor
sarl
push
popf
mov
mov
mov
sbb
shlb
icebp
add
push
mov
jge
or
outsl
jge
test
pusha
fisttpl
lahf
out
outsb
fcmovnbe
add
push
insb
lods
shlb
inc
outsl
in
pusha
mov
xchg
xchg
flds
test
push
shrb
push
push
maxps
or
xchg
xchg
test
shrb
loop
mov
xchg
mov
mov
daa
sub
loope
ucomiss
insb
mov
ret
xchg
sub
lret
push
cmp
mov
dec
pop
lods
sub
pusha
and
and
pop
adc
scas
outsl
fidivl
sarl
daa
adc
ret
push
inc
test
xchg
lcall
testb
sub
cwtl
mov
test
pop
test
push
xor
dec
add
mov
jne
fsts
icebp
and
fsub
or
xorb
pop
imul
jne
int
inc
jae
mov
subb
aaa
out
mov
mov
push
pop
dec
or
enter
xor
jno
mov
lret
stos
int
dec
loope
subb
aaa
sub
in
addr16
das
adc
push
push
ja
in
clc
pop
xor
lods
pushf
inc
jne
add
movsl
lds
int
jle
pusha
je
shl
daa
mov
cmp
dec
sarl
negb
mov
lret
addl
xlat
xor
jo
outsb
lea
push
aas
pop
xor
jb
xor
repnz
sub
repz
ret
jl
shlb
push
xor
scas
xchg
mov
cmpsl
leave
mov
jle
push
and
clc
ljmp
jb
dec
xor
jle
movl
and
xchg
adc
push
dec
jg
data16
mov
stos
fisubrl
pushl
pop
inc
sub
add
pop
flds
pop
xorl
sbb
push
sar
inc
out
pop
ror
push
and
imul
mov
push
into
test
in
enter
or
std
cld
into
scas
insl
iret
inc
mov
xchg
adc
roll
call
scas
push
mov
movsb
add
leave
mov
pop
mov
sub
imul
inc
int
scas
call
sbb
adc
out
roll
hlt
clc
out
adc
push
jne
add
repnz
cmp
inc
enter
and
and
jp
jl
pop
popf
out
push
call
inc
xchg
into
push
test
shrb
fldcw
xor
pop
or
jp
addr16
in
stc
cmp
and
jl
pop
popl
and
xor
sub
push
mov
mov
mov
jb
pop
fisttps
stc
jg
or
mov
mov
je
ret
xchg
popa
inc
lret
jl
in
pop
call
cwtl
inc
repz
inc
lret
pop
incb
sbb
jmp
pusha
adcl
mov
mov
test
test
jge
lret
mov
fstp
imul
in
repz
xor
rolb
stc
pusha
xchg
fcmovnu
push
cmp
or
pop
adc
mov
mov
lds
jnp
pushf
push
jb
in
std
cld
fnstsw
mov
jmp
cltd
sahf
hlt
push
and
sub
in
and
pop
stos
mov
test
pop
push
adc
test
mov
sub
scas
sub
push
sub
je
sbb
push
scas
ret
aam
lret
push
dec
sub
imul
pop
fs
inc
mov
inc
sub
test
add
lcall
insb
dec
jns
leave
fsubs
stos
les
aaa
cmc
xchg
sub
sub
add
pop
add
add
iret
test
xor
add
pandn
sbb
loopne
dec
sti
sbb
ss
cmp
pop
inc
pop
dec
aas
movsl
sub
fnsave
ret
inc
adc
sub
cli
out
add
add
cmp
xchg
jbe
rorl
mov
loop
inc
cli
dec
push
cmpsl
mov
sub
xchg
aad
dec
in
imul
shlb
and
mov
divb
dec
push
or
mov
push
or
push
repz
addb
lds
fwait
and
xor
inc
xor
and
inc
mov
mov
mov
call
xor
daa
lahf
jp
clc
lods
cltd
dec
bound
inc
test
add
in
inc
fadd
xor
dec
push
sub
mov
xor
xorl
cmpsb
ds
loopne
adc
dec
mov
sub
testl
jns
hlt
mov
push
cmpsb
ret
lret
adc
inc
je
mov
xchg
into
lea
dec
testb
or
mov
add
cmp
fists
sbb
add
xor
push
add
in
adc
mov
lcall
jge
fstpl
imul
lcall
inc
daa
xor
xor
mov
push
mov
inc
mov
jns
push
inc
pop
jecxz
inc
les
xchg
data16
aaa
sub
enter
or
and
fsubrs
aas
or
add
sub
jb
imull
add
lods
cld
inc
inc
xchg
repz
movsb
je
lret
xchg
pushf
out
pop
mov
mov
or
aas
and
xchg
daa
mov
cmc
inc
mov
rclb
xlat
shrl
jbe
shll
xchg
incb
out
loope
mov
inc
and
mov
movsl
dec
jne
loop
mov
cmp
int
cwtl
mov
sub
push
stos
cld
push
ret
xchg
push
and
xchg
cltd
out
mov
imul
outsl
cmp
mov
pop
mov
lret
adc
mov
mov
fucomip
cli
mov
dec
jne
movsl
add
jbe
mov
adc
lds
fwait
cmp
mov
popl
lock
cmc
add
or
pusha
fbstp
and
loop
pop
mov
test
call
cmp
ja
and
call
loope
sbb
or
inc
xchg
adc
ja
and
mov
push
pop
in
std
data16
xchg
rolb
inc
stos
int
jae
sahf
and
in
inc
into
in
push
jno
shlb
rorb
mov
dec
push
push
push
adc
xchg
xchg
jnp
jle
imull
add
pop
sub
cmpsb
pop
out
pop
test
push
mov
dec
and
sub
test
fists
xor
mov
mov
bound
sub
or
adc
mov
test
sbb
adcb
std
sahf
std
xchg
cwtl
rcrl
xchg
dec
pop
cmp
mov
lods
push
pop
xchg
imul
daa
sarb
mov
lret
into
pop
xlat
xor
dec
sti
mov
or
cmp
xor
mov
jmp
mov
dec
sub
std
sarl
push
clc
ret
dec
out
out
and
imul
cmpsl
or
cmp
and
push
fcoml
push
pop
cmpsb
jecxz
jnp
lock
pop
sub
orps
or
adcl
leave
test
add
sbb
xchg
das
xchg
mov
inc
test
cmp
xchg
dec
push
sahf
std
sub
and
mov
xlat
adc
insl
popa
popl
push
enter
icebp
aaa
xor
fdivrl
fucomi
jb
jecxz
in
dec
test
bound
mov
fists
xchg
pop
or
clc
and
fnstcw
loop
jbe
scas
mov
or
scas
add
in
roll
or
mov
dec
mov
push
adc
sbb
sbb
in
fsubrl
clc
fwait
sub
sbb
sub
lods
repnz
pop
sti
data16
inc
mov
and
sete
int3
or
cli
push
xchg
mov
mov
frstor
lahf
mov
icebp
into
xlat
jne
adc
and
jb
adc
loope
fcmovb
sbb
sbb
call
call
push
lea
ficoml
inc
cmp
test
jnp
jg
imul
lock
icebp
push
or
subb
lahf
or
push
sub
mov
add
into
xchg
mov
xchg
mov
mov
adc
inc
sub
test
nop
addb
xorb
cmp
cmpsl
gs
stc
ss
icebp
pushl
gs
rcrl
inc
outsl
aaa
dec
rorb
mov
dec
jp
xor
out
movsl
or
or
mov
decl
sub
or
ss
loope
inc
icebp
in
cmp
inc
pop
mov
xchg
nop
mov
pop
adc
add
xchg
int
out
loop
or
xor
out
fdivs
pop
repnz
and
out
dec
push
push
out
or
jnp
lahf
mov
negl
jbe
test
jp
fadds
inc
nop
clc
or
adcl
aas
hlt
lret
adc
adc
je
ror
aam
dec
jmp
imul
push
out
and
pop
add
insl
and
andb
xchg
mov
mov
cmp
inc
mov
jns
ret
mov
adc
movsl
ds
add
loopne
lcall
push
scas
cmp
fstl
push
mov
sbb
fisubs
sti
insl
lahf
jbe
hlt
mov
ljmp
push
test
inc
cwtl
push
jne
mov
lock
idivb
repnz
in
test
pop
scas
jmp
mov
lcall
stc
sbbb
push
addr16
mov
sbb
stos
lea
jb
xor
or
imul
jae
add
or
out
push
add
sub
pop
out
or
jae
or
and
pop
repnz
aad
loop
pop
inc
adc
xchg
mov
ret
fnstenv
aam
jae
xor
idiv
notl
movsb
sub
addr16
push
leave
sbb
repnz
or
fdecstp
pusha
add
adc
std
xchg
sbb
mov
or
loop
mov
sbb
xchg
hlt
mov
adc
test
sahf
ret
roll
aaa
js
cmp
sbb
dec
pusha
cmp
add
mov
pusha
push
ud0
fadds
sub
inc
pop
push
pop
shlb
cmc
sbb
sbb
cwtl
mov
or
mov
sub
cmp
in
cmp
xchg
int
fcomps
inc
mov
add
call
mov
mov
sbb
jne
ss
aas
cmp
jmp
cmp
push
imul
lret
mov
push
dec
test
xchg
mov
push
out
xchg
dec
jno
out
adc
lds
mov
sbb
in
imul
mov
neg
jo
les
pop
pop
gs
inc
mov
cld
xor
mov
mov
aam
mov
mov
or
test
and
imul
pushf
data16
mov
cmp
push
adc
mov
mov
scas
or
pushf
adc
lahf
mov
jne
dec
or
aam
iret
out
addr16
xchg
adc
cmp
popf
mov
xor
push
daa
loop
scas
faddl
mov
jle
into
cmpsb
pop
lds
rcll
ss
scas
dec
lods
scas
push
inc
mov
fcomip
test
jecxz
int3
cmp
mov
pop
xchg
int
into
insb
push
stos
into
rcrb
sbb
mov
stos
and
add
fs
rcrb
xor
mov
movsl
in
cs
cli
and
dec
mov
ret
je
inc
sub
mov
pop
mov
adc
ficoml
jp
jp
inc
cmp
xchg
push
lret
call
jns
adc
jecxz
adc
jp
mov
shll
aad
cltd
outsb
pop
push
cmp
cmpsl
pop
decl
fcmovnb
dec
push
mov
scas
dec
sub
and
jno
mov
inc
fucomp
mov
cmpsb
icebp
fidivl
sub
jbe
adc
push
sbb
movsb
jo
cltd
sbb
sub
scas
repnz
mov
sub
pop
sbb
cmpb
sbb
xchg
pop
mov
inc
cmp
sti
sti
cld
sbb
add
out
adc
mov
orl
and
and
dec
arpl
outsl
jge
call
rcrb
adc
jecxz
xchg
add
das
sbb
fisubrs
fcom
xor
lods
scas
jge
outsb
cmc
pop
push
mov
push
fadd
dec
jge
dec
cld
lret
add
aam
sub
sbbb
test
ljmp
add
sub
in
or
nop
sarl
stc
cwtl
pop
fbld
jo
lods
cmp
ljmp
cmp
or
dec
jae
movsl
cmp
jns
ret
int3
arpl
cli
and
int
sti
jle
cmc
dec
sub
or
lock
cmpsl
lea
mov
insl
push
mov
pushf
mov
push
and
popf
add
in
cmc
mov
sbb
jp
sub
xchg
sub
mov
addr16
les
mov
mov
mov
xchg
outsl
mov
add
sub
call
pop
dec
hlt
cmp
mov
ficomps
sub
test
and
shl
js
lds
sti
jecxz
dec
movsb
cmpsb
mov
into
jp
mov
xor
or
sbb
add
into
push
cmc
xor
sub
bound
cmp
dec
and
icebp
scas
fmuls
insl
mov
sub
jns
movsb
push
mul
xchg
pop
xor
cmp
int3
push
aas
xchg
xchg
and
push
scas
out
xchg
sbbb
jecxz
jle
inc
stos
sub
flds
pop
mov
mov
cmp
out
mov
mov
adc
dec
enter
sarl
outsl
clc
ja
ds
sub
fcompl
aad
jne
lock
mov
and
push
inc
call
xor
xchg
jmp
out
push
jp
inc
out
jp
mov
test
inc
add
mov
and
cmpb
dec
mov
outsb
out
shlb
mov
lock
mov
xchg
cmpsl
mov
sub
out
loop
mov
gs
mov
mov
pop
xor
insl
ljmp
gs
cmp
outsl
fs
jp
dec
inc
int3
in
pop
sahf
pusha
dec
or
pop
addr16
inc
cmp
out
nop
mov
xor
shl
cld
pop
mov
xchg
xor
adc
or
xchg
inc
push
stos
ret
xchg
nop
xchg
or
scas
jo
dec
jne
in
mov
pop
sub
fmull
ljmp
dec
mov
xor
push
xchg
pop
lds
int
fdivrl
or
mov
or
fadds
test
add
sti
dec
add
in
and
fcomip
jne
cmc
aas
dec
ja
xor
fstpt
in
mov
and
mov
mov
sahf
sbb
xor
sbb
ret
adc
cmp
aas
unpcklps
sub
stos
movsb
mov
mov
sub
aam
inc
gs
sbb
jbe
cltd
ds
dec
mov
call
shlb
xchg
push
dec
mov
cmc
inc
sub
lea
mov
es
mov
xchg
cs
add
xchg
out
cmpsl
pop
cmc
ficoms
nop
addr16
push
sti
jns
in
nop
bnd
icebp
adc
and
aaa
fdivrl
std
je
imul
out
imul
pop
stc
or
into
mov
and
cmp
sub
lea
push
sbbl
sub
sti
push
fisubl
enter
inc
push
dec
xchg
cli
jmp
dec
sub
xor
jmp
xchg
push
sbb
shrl
mov
ds
loopne
outsb
adc
sub
sbb
loop
cmp
bound
push
popl
cmp
rorl
xchg
std
flds
out
xor
mov
stos
mov
jge
sbb
adc
bound
and
mov
daa
into
test
mov
shl
xchg
fcmovbe
fimuls
shl
insl
mov
sub
cmpb
les
lcall
or
enter
aad
push
pop
inc
int
sub
mov
ljmp
les
lret
out
xchg
repz
push
cmpsl
lahf
jns
xchg
adc
aad
ret
fucomip
movsl
add
cmp
mov
out
cmp
push
insb
pop
in
adc
and
xor
in
sbb
mov
jecxz
push
lret
rclb
mov
sbb
loopne
or
xchg
push
loop
stc
mov
lcall
sbb
inc
sarl
jne
insb
fldenv
xor
xchg
mov
std
mov
xchg
and
roll
jno
jmp
xor
push
outsb
jle
leave
movsl
or
sub
movsb
imul
sub
push
sub
adc
xor
or
sub
dec
jmp
xor
push
hlt
xchg
mov
pop
aaa
sbb
and
mov
fdivp
push
incb
fisttps
adc
xlat
mov
sbb
pop
scas
aas
popf
nop
mov
dec
or
int3
aas
inc
enter
sub
mov
mov
jle
dec
popf
fdivr
shrb
mov
sub
xchg
idivb
aas
lock
dec
xchg
roll
imul
pusha
adc
mov
js
sbb
dec
mov
fdivrp
inc
addr16
pop
or
loop
inc
jnp
andl
in
mov
add
and
xchg
les
mov
push
loope
xchg
mov
das
add
jp
xchg
enter
jno
push
test
sarl
icebp
ljmp
fcmovnbe
sub
and
jae
add
sub
call
lods
sbb
mov
daa
sbb
stos
adc
mov
cmp
in
loope
inc
mov
mov
push
orb
xchg
sub
mov
xor
out
roll
stc
aas
lock
loope
mov
xor
jge
xor
jmp
cmc
fwait
das
ss
loope
fistl
adc
outsl
push
cwtl
jle
lock
call
clc
pop
out
mov
subb
and
enter
addl
andl
aad
adc
ljmp
aam
inc
stos
ret
cmp
sub
rclb
jp
je
movsl
add
add
das
iret
and
inc
jecxz
subb
pop
stos
jne
mov
bound
jno
mov
jge
out
xchg
jg
shlb
movsb
xchg
sub
mov
call
adc
jecxz
xchg
dec
inc
cwtl
xchg
add
sbb
notb
js
lahf
repz
lods
cmc
rcr
sbb
mov
cmpl
clc
inc
pop
push
lods
lods
outsb
jns
out
clc
push
and
outsl
add
in
mov
mov
pop
and
cmpl
pop
data16
push
mov
sahf
inc
popa
decl
ja
in
fmuls
imul
pop
sar
lret
xor
fiaddl
push
repnz
push
mov
inc
push
or
xor
mulb
imul
loop
insl
mov
inc
sub
sub
push
inc
test
jecxz
pushf
sbb
xor
nop
fiaddl
push
aaa
or
or
sub
dec
mov
push
lock
mov
sub
insb
or
mov
or
cmp
daa
fidivrl
jnp
in
filds
and
es
insb
inc
sbb
xor
cwtl
mov
mov
popa
pop
or
xchg
clc
push
adc
mov
insb
xor
adc
mov
out
push
pop
je
ret
jne
inc
cli
test
add
cmp
cmp
in
mov
and
mov
mov
outsb
fsts
insb
fisttpll
icebp
incb
movsb
sub
push
lret
sahf
pop
aad
scas
jb
loopne
mov
sbb
mov
xchg
fxam
stos
repnz
cli
lea
and
push
jge
incb
push
loop
in
or
shll
inc
xor
add
mov
pop
rcrb
out
mov
jecxz
push
es
call
sti
out
and
push
inc
adc
loop
test
test
cmp
ljmp
pop
dec
cmp
sub
or
adc
or
xor
mov
inc
enter
ja
imul
lods
xor
add
push
lret
or
sub
sub
xor
fildll
push
jb
incb
pop
bound
montmul
cmpsb
inc
fwait
popa
inc
mov
pop
je
or
int3
inc
mov
jmp
mov
int3
jo
and
add
rorb
adc
rolb
jp
sub
mov
fsubrl
inc
add
lods
stc
mov
add
sbb
or
dec
jmp
jne
add
and
hlt
pop
mov
pop
mov
cmpsb
sbb
out
mov
xor
cmp
or
dec
hlt
dec
sbbl
addr16
mov
pop
jae
fcoml
xor
sbb
xchg
aam
inc
mov
aaa
popf
sub
in
cmp
iret
xorb
testb
fnsave
das
lods
popf
cmp
push
lret
push
and
rorb
pop
add
aas
push
adc
jmp
inc
inc
fbld
jbe
loop
mov
out
inc
inc
adc
xor
lds
cmp
adc
repz
cmp
sbb
movl
stos
mov
mov
xor
inc
cmp
and
dec
test
fistl
lods
out
cwtl
stos
sarb
mov
je
mov
jle
fists
mov
mov
repnz
xchg
shl
xor
gs
or
sub
xchg
sbb
dec
mov
adc
jnp
in
dec
mov
mov
sbb
xor
xchg
xchg
test
sbb
mov
mov
and
lret
lahf
push
lods
mov
xor
fisttpl
ret
mov
sub
pop
pop
dec
pop
lret
sbb
mov
icebp
icebp
pop
pop
test
loope
pop
push
je
mov
xor
imul
push
inc
test
sahf
in
sub
sub
fimull
mov
adcl
addl
ret
sahf
inc
push
xchg
inc
icebp
dec
add
xchg
mov
mov
lahf
loope
mov
cld
adc
cmpsl
jl
into
movsl
addr16
pop
cwtl
cltd
inc
jne
push
ja
rolb
and
xor
mov
jmp
pop
xchg
test
adc
subl
lods
jge
rcr
pop
in
loop
mov
cmp
or
pop
imul
jecxz
or
andl
and
sahf
hlt
jl
push
iret
rcrl
ljmp
add
mov
imul
test
icebp
dec
shll
fsubrs
ja
cmpl
and
push
cmpl
xchg
inc
pop
push
aaa
cld
scas
sbb
aas
fistl
mov
inc
or
or
sbb
leave
xor
in
fmuls
ss
in
iret
pop
jbe
pushf
mov
pop
test
xchg
adc
pop
cmpsl
dec
hlt
lret
mov
imul
pop
jecxz
fxam
or
int3
repz
dec
addr16
ret
mov
icebp
and
sub
out
nop
lret
nop
sub
inc
dec
jmp
imul
and
outsl
or
pop
fadds
test
pop
mov
lods
mov
scas
lods
adc
std
inc
and
lret
lods
mov
dec
sbb
test
fnstcw
call
mov
push
xchg
mov
std
jb
xchg
pushf
inc
jae
inc
bound
ret
fisubl
aaa
cmp
test
xchg
rorb
sar
je
out
mov
clc
adc
sbb
sbb
js
test
rorl
gs
cmpsb
cmp
xchg
push
and
mov
mov
jg
mov
mov
cltd
cmp
adc
push
ret
jge
fimuls
sbb
fmull
pop
mov
pop
dec
test
mov
and
mov
popa
dec
test
adc
mov
jle
bnd
gs
or
imul
and
jnp
or
sub
inc
xchg
dec
mov
xchg
push
fmuls
cmp
movsb
icebp
je
xlat
or
adc
mov
aam
and
jae
repnz
test
and
out
push
xchg
cmc
popa
lret
movsl
in
pop
ds
fs
push
fwait
inc
cmp
mov
pop
lret
insb
mov
sub
xor
xchg
out
xchg
call
cld
and
pop
jno
xchg
gs
push
gs
shll
push
pop
fstpl
cltd
jmp
call
xchg
neg
movsl
arpl
push
repz
pop
jecxz
imul
test
lcall
sub
pop
insb
mov
sahf
ror
mov
and
xor
fildll
cmc
jns
cmp
pushf
mov
sub
xor
mov
mov
add
inc
arpl
push
push
fs
outsl
das
jno
subl
and
sbb
dec
arpl
inc
xchg
repnz
pop
push
sub
stc
test
sbb
inc
pop
mov
pop
mov
subb
push
outsb
rclb
nop
dec
adc
in
cmp
cmp
shll
loope
mov
sbb
push
inc
and
ljmp
rcr
out
gs
negl
mov
cmp
sub
mov
fdivs
fidivrs
mov
cwtl
xor
lss
xor
sub
jecxz
mov
gs
addr16
imul
inc
mov
and
nop
pop
mov
rorl
movd
mov
or
popa
cltd
mov
adc
arpl
mov
popf
cmp
push
mov
loope
lock
inc
arpl
and
push
call
pop
dec
shrl
pop
clc
addb
push
out
inc
repnz
sbb
imul
jmp
pop
or
and
es
rcrl
sub
fidivrl
pop
aaa
arpl
std
mulb
sub
pushf
pop
mov
shr
ret
sbb
jne
cmp
hlt
stos
fwait
movsb
js
dec
xor
shlb
cmp
cmp
mov
push
cli
jle
jl
cmp
loope
lock
test
xchg
out
push
fcomps
sarb
adc
in
push
inc
push
jge
xchg
aas
jle
push
and
sahf
sarl
inc
dec
pop
cmp
mov
lock
lock
dec
aam
outsl
mov
inc
scas
or
dec
mov
sub
popf
xchg
fwait
xor
dec
mov
xor
cwtl
sbb
test
popl
int
mov
pop
sbb
dec
gs
pushl
sub
pushf
push
jmp
cmp
sbb
imul
mov
adc
ljmp
lds
fadds
mov
add
jmp
jb
jae
scas
iret
jb
cmp
mov
popf
xor
sub
test
leave
pop
stos
cmp
std
inc
cmp
clc
cmp
notb
loop
push
lock
and
inc
ss
ja
sub
sbb
push
or
or
in
sti
push
dec
mov
dec
sbb
loopne
inc
mov
icebp
std
mov
push
mov
cmpsb
mov
sub
and
pop
sbb
cltd
adc
nop
cmp
xchg
sub
cmp
jne
jb
and
pop
sub
push
sub
arpl
insl
addb
mov
jp
adc
lea
fisubrl
inc
bnd
out
sub
int3
ret
push
pop
ret
incb
fimuls
sub
mov
or
add
xchg
call
filds
nop
cmp
fstp
or
inc
xchg
jnp
das
jmp
in
jno
inc
ds
pop
ja
int
idivl
pop
push
std
mov
idivb
xchg
mov
in
adc
cmp
stc
test
sahf
pop
ffreep
add
das
insl
sbb
bndstx
mov
dec
push
mov
notb
inc
imul
xchg
popa
mov
adc
mov
out
cs
adc
xchg
push
dec
xor
cmpsl
cli
sub
fcmovnb
fstps
mov
dec
iret
cld
mov
out
inc
push
out
xchg
mov
je
repnz
pop
lea
clc
add
sbb
xor
pop
or
xchg
xlat
mov
push
movsl
lret
xor
rolb
push
das
ret
stos
loopne
imul
iret
mov
lret
cli
xchg
repz
or
cmpsl
clc
jl
mov
subl
push
or
outsb
jmp
movsb
xchg
in
mov
jae
and
pop
out
add
into
dec
mov
aaa
ss
shlb
gs
or
stos
flds
rdmsr
int
xchg
stc
dec
cltd
lods
jmp
ret
pop
shll
sub
stc
and
mov
xchg
mov
adc
xchg
clc
mov
cli
xor
repnz
dec
lock
mov
mov
rorb
cwtl
scas
sbb
cwtl
lret
mov
stos
xlat
hlt
mov
pop
in
xor
sbb
ror
or
mov
repnz
mov
mov
mov
or
cmpsb
or
inc
and
or
fcoms
cmp
sbb
aaa
andb
xchg
faddl
gs
push
add
std
xchg
sbb
jl
xor
int
lret
pop
ret
push
mov
fsts
lods
in
xchg
shrl
int
cltd
inc
xchg
sbb
lods
arpl
pusha
test
or
inc
cwtl
inc
or
fnsave
mov
push
push
ja
cwtl
push
adc
lock
pop
fucom
lret
mov
das
pop
adc
lds
jecxz
hlt
inc
stos
dec
inc
push
fldt
mov
dec
and
push
adc
dec
add
outsl
jbe
in
faddp
icebp
fwait
xchg
test
and
rcrb
popf
in
gs
jae
xchg
das
aaa
or
and
dec
sti
fcoml
lcall
popf
cwtl
mov
fnstcw
push
pop
repz
jno
pusha
adcb
leave
aas
add
inc
sub
pop
sbb
sbb
jecxz
push
or
pop
push
jbe
xor
mov
push
xchg
xchg
scas
ds
add
xor
ret
mov
xor
gs
dec
xchg
sbb
shll
outsb
fcom
out
and
mov
sub
and
cmc
outsl
cltd
push
pop
popa
mov
mov
cmp
sub
fdivrl
jo
out
fidivs
add
scas
call
pop
imul
cmp
sub
cmp
jne
jns
xchg
jg
iret
ficomps
mov
cli
jb
xchg
push
sbb
fsubrs
jl
fimull
out
loop
cld
neg
stos
call
sar
in
jo
out
lds
xlat
mov
fcoms
arpl
jmp
xor
test
insl
fmul
fisubrs
inc
dec
jns
mov
jle
lret
or
hlt
dec
inc
pop
inc
jb
pop
push
cmc
movsl
jnp
cs
mov
dec
mov
pop
das
and
int3
pop
pop
inc
add
test
inc
dec
and
leave
xchg
mov
aas
enter
adc
push
mov
aaa
pop
push
rorl
mov
outsl
test
sbb
dec
push
shlb
notb
mov
jns
out
ffreep
sbb
mov
pushf
pop
inc
dec
pop
out
inc
sbb
test
add
roll
iret
adc
jne
xchg
and
ja
mov
and
dec
aaa
mov
test
stos
ds
cltd
cmp
adc
xchg
inc
cmp
cmpsl
jl
sub
jle
adcb
stos
xchg
mov
nop
or
test
das
fsubl
inc
fs
movnti
sub
shlb
jg
ja
and
pop
push
sti
xchg
iret
fwait
xchg
pushf
xlat
cli
inc
sbb
cwtl
mov
sub
or
stc
outsl
popa
xor
dec
cmp
xchg
outsl
test
inc
jb
xchg
mov
dec
xor
and
xor
push
in
fsubrl
cmp
test
jp
ret
es
pop
fcomi
cmp
fsubr
mov
pop
out
cmp
dec
mov
cld
dec
pop
xchg
sarl
out
outsb
outsl
loopne
push
call
mov
sbb
lahf
xchg
out
inc
in
ret
xor
out
repz
cli
jecxz
fstpl
jo
xchg
test
dec
add
orb
ror
pop
cmp
mov
pop
rolb
sbb
and
lcall
jl
push
mov
push
sbb
hlt
daa
fimuls
xchg
lods
push
adc
jge
jns
mov
data16
ret
out
jo
ret
cmpsb
add
pop
cmp
hlt
and
xchg
mov
mov
lea
mov
popa
into
lods
and
inc
stc
jns
cld
pop
sbb
inc
xor
xlat
jl
loop
add
sub
rol
gs
xor
cmp
pop
rorb
push
cmc
jbe
mov
out
cmpsb
mov
push
std
pop
lods
outsl
mov
call
sub
jns
sbb
sti
add
mov
idiv
or
add
fbstp
jl
incb
mov
bound
das
cmp
in
inc
je
test
sahf
add
xor
adc
xor
popf
jno
sub
add
rcll
add
xorl
sub
cmp
lret
cmp
pop
notb
xchg
sbb
stos
xor
add
or
xchg
push
push
adcb
daa
test
bound
add
outsb
sub
pop
and
dec
dec
pop
pop
cli
xchg
arpl
call
xor
or
rclb
add
or
push
or
nop
sbb
push
mov
testb
outsl
sahf
mov
repz
je
adc
and
dec
jae
cs
popf
imul
push
out
flds
sbb
inc
int3
icebp
jge
cmp
in
and
arpl
popa
ja
xchg
pop
mov
sub
xor
js
dec
mov
stos
cmp
repz
or
xchg
cmc
pop
jb
xor
mov
into
push
cmp
stos
shl
hlt
push
push
sub
mov
popa
aas
gs
sub
add
fdivrp
adc
push
test
sub
in
cmpb
xchg
shrl
pop
mov
cmp
sub
mov
ret
push
push
insb
pop
sub
fistpll
mov
clc
ret
ror
mov
sahf
test
cmpsl
inc
rcrl
stos
sbb
xor
mov
pop
out
inc
inc
lods
pop
xchg
xchg
ret
loope
jnp
mov
testl
pop
push
fisubrl
jg
repz
push
orl
and
cmp
jno
rcrb
dec
movsl
dec
jno
sarb
cmp
sub
or
scas
mov
push
add
dec
mov
cs
xchg
mov
sbb
mov
sub
jbe
mov
mov
mov
jb
dec
xor
in
sub
out
adc
in
fidivrl
cmp
lcall
cmp
xchg
rcr
pop
cmp
pop
imul
cmp
imul
pop
loopne
add
jbe
enter
sub
faddp
dec
jg
jns
int3
cmpsl
loop
fwait
test
pop
imul
push
lock
les
push
pop
loop
mov
and
rcl
loop
add
mov
xchg
xlat
and
scas
mov
lret
dec
or
scas
mov
lahf
in
cmp
jp
loopne
stc
push
jecxz
cs
dec
mov
mov
int
sahf
test
mov
fsubp
inc
jmp
add
xor
sbb
sub
insb
or
pop
bound
in
xor
mov
adc
mov
ja
add
xchg
xor
bound
leave
mov
dec
cmp
xchg
xchg
lahf
imulb
dec
adc
into
jmp
inc
or
lret
mov
sbb
das
ds
xchg
sbb
les
cld
outsb
pop
sahf
push
push
xor
cmp
dec
cmp
popa
pop
pop
inc
cmp
mov
stc
xchg
flds
out
push
cmpsb
into
ljmp
cltd
loope
cmp
test
pop
jmp
ja
or
in
jl
adc
lret
int
repnz
xor
cmpsb
push
inc
mov
mov
ljmp
mov
fcomps
iret
pop
fldt
and
addr16
xchg
fbstp
xor
sub
jb
incl
add
mov
sub
dec
popa
lods
cmp
je
jae
enter
jns
ja
xor
xchg
jbe
sub
xor
cmp
push
jbe
je
scas
shlb
xor
sbb
xchg
aaa
leave
push
cwtl
jns
push
loope
mov
mov
inc
ret
or
scas
ficompl
ja
daa
and
stos
jp
cwtl
pop
add
fldcw
sahf
dec
mov
inc
and
ja
or
xor
sbb
clc
loope
mov
pop
ss
test
xor
lods
enter
inc
sar
fsubs
leave
mov
or
das
xlat
adc
jge
std
ss
imul
decb
add
add
jbe
push
cmpsl
dec
jb
icebp
jp
mov
and
pop
inc
daa
adc
scas
stc
aas
stos
outsb
je
mov
lcall
jae
ljmp
stos
add
sar
outsb
push
repnz
jl
and
inc
mov
adc
nop
dec
loopne
mov
scas
popf
mov
mov
sub
cli
int
pop
in
rcrb
lret
fbld
mov
mov
out
sbb
scas
push
xchg
inc
mov
faddl
lret
push
ret
push
leave
addr16
mov
dec
xor
add
out
or
dec
je
mov
in
or
and
sub
push
cmpsb
shlb
xchg
scas
dec
adc
fcomps
movsl
and
popf
in
mov
fwait
mov
sub
sbb
pop
xor
jo
push
xchg
cmp
sub
push
lods
cmp
inc
aas
arpl
pop
jmp
cmc
les
mov
xorb
xchg
lods
data16
fidivl
out
inc
pop
lock
xlat
prefetchnta
fcoms
xchg
push
inc
fdivs
and
outsl
scas
sbb
gs
int3
jne
push
les
mov
int
and
std
mov
sahf
icebp
inc
push
push
ljmp
and
ret
aam
mov
mov
jmp
pop
test
adc
ss
stc
sub
xchg
mov
jmp
scas
xor
mov
in
mov
in
flds
rclb
xchg
and
push
lret
arpl
cmp
gs
cmp
ficoms
repz
mov
jmp
dec
adc
imul
pop
fidivrl
dec
lock
adc
scas
lret
jmp
les
mov
xchg
sbb
jp
icebp
fstl
jecxz
scas
mov
stos
mov
or
ret
inc
adc
push
dec
jne
stos
cmp
mov
aam
je
xchg
fidivs
lcall
lahf
xchg
popf
rclb
add
and
bound
fs
jmp
cli
cmc
andl
jg
pushf
fisubrl
in
nop
mov
and
inc
fadd
mov
sub
add
sub
sub
mov
or
jne
and
and
mov
sbb
ret
pop
add
push
push
adc
pop
js
xchg
dec
adc
pop
pusha
shrb
jo
pop
dec
push
xchg
movsb
jae
inc
sahf
movsl
lahf
cmp
lock
fwait
mov
pop
enter
adc
clc
hlt
mov
sarl
popl
mov
and
pop
outsb
jnp
insl
add
test
dec
pop
je
lret
push
test
dec
inc
push
xchg
push
jbe
adc
push
mov
rcll
das
fchs
out
jnp
cmpsl
dec
ret
push
test
sub
or
mov
mov
sub
sub
dec
add
popa
push
add
out
mov
gs
fcomps
mov
jb
pop
cld
jnp
fcmovu
jmp
mov
mov
psubq
sahf
jg
pusha
sub
stos
test
xchg
inc
jne
xor
subb
xlat
jne
mov
decl
xor
sub
mov
xchg
sbb
inc
movsb
add
add
jmp
sub
mov
sub
dec
and
mov
sbb
sbb
test
outsl
idivl
sub
lds
stos
fistps
insl
mov
in
divb
fwait
sbb
cmp
inc
push
in
xor
cwtl
pop
xor
pop
stos
lcall
mov
mov
and
mov
es
add
sub
dec
xor
and
mov
mov
or
inc
in
mov
mov
icebp
nop
dec
or
add
or
in
xchg
mov
or
pop
aas
inc
dec
mov
ds
xchg
pop
and
xlat
mov
mov
cmp
lret
lahf
hlt
mov
push
bt
fsub
pushf
shrb
cwtl
adc
pop
mov
rorl
jns
add
in
scas
push
mov
mov
or
cmc
and
cs
sub
jb
testl
xchg
mov
inc
mov
cmp
mov
pop
xchg
rorb
imul
pop
adc
call
test
fwait
inc
jle
test
repnz
and
int3
jle
sub
test
imul
lahf
aad
das
aaa
and
icebp
and
js
loope
lret
add
pop
pop
push
push
ret
ja
mov
icebp
cmp
scas
jmp
sub
inc
arpl
mov
testl
jae
mov
sbb
jne
inc
mov
jns
add
and
pop
mov
jns
pop
sub
pusha
jecxz
xor
jo
adc
leave
xchg
jge
loopne
xor
aam
cwtl
insb
fbstp
sbb
test
xchg
aas
int3
stos
mov
inc
std
bound
pop
nop
pop
out
xchg
cld
and
or
in
jmp
jno
or
push
in
mov
dec
in
cmp
dec
in
aas
dec
sti
fnsave
sbb
pop
xchg
outsb
repnz
sub
mov
imul
sub
or
inc
xchg
enter
and
xor
mov
add
mov
xor
fdivrl
pusha
xor
or
jp
lods
jns
es
or
arpl
loope
aad
movntps
cmp
pusha
inc
mov
insl
jnp
cmpsl
add
in
jmp
aam
mov
push
aas
incb
cmp
sub
mov
ja
scas
jbe
out
cli
mov
insl
cltd
pop
frndint
jnp
jmp
push
lods
insb
pusha
es
mov
inc
std
adc
leave
xor
xchg
or
in
push
adc
adc
mov
inc
sarb
pop
pop
push
nop
inc
mov
aam
inc
push
inc
sarl
vpcmpgtw
cmpsb
pop
cmc
inc
add
ljmp
cmc
xchg
push
jne
xchg
add
pop
xor
sbb
out
xchg
pop
outsl
pop
xor
fsubl
jbe
sub
pop
stos
adc
ficoml
cmp
fisttpll
pop
push
repz
test
lret
mov
mov
lahf
push
or
add
lock
and
int
test
sub
sub
dec
lahf
jns
movsl
call
pop
js
and
dec
add
and
cmp
xor
insl
mov
inc
cs
addr16
and
hlt
mov
clc
fistpll
jle
ret
ja
ret
clc
push
cmc
dec
pop
iret
sbb
and
nop
inc
aas
nop
arpl
iret
out
daa
mov
cwtl
mov
scas
jl
dec
push
inc
stc
mov
jge
shll
inc
pop
adc
adc
out
int
push
fdivl
sub
and
adc
mov
inc
jo
rclb
mov
mov
fidivs
mov
jns
add
in
push
je
and
push
pop
pop
cmp
mov
cmpb
fdivs
sar
mov
das
dec
call
mov
cmpsl
imul
in
out
popf
test
lcall
jge
je
repz
push
ret
test
cmp
cmpsl
cmpsl
mov
orb
dec
cmp
or
fwait
cld
lea
jo
add
jbe
xor
mov
xchg
mov
and
outsl
pop
sar
jb
xchg
cmp
adc
insl
arpl
enter
daa
mov
mov
jl
inc
and
fstl
mov
xchg
shrd
mov
jbe
lods
mov
scas
repz
adc
sbb
fwait
scas
sbbb
rcll
mov
dec
push
mov
sub
dec
xor
mov
jp
ss
lahf
cmp
jnp
test
push
add
loope
push
sbb
xchg
sub
imul
add
arpl
mov
mov
fildl
sub
add
adc
xor
pop
andb
stos
in
cwtl
or
cmpsb
and
lds
add
lock
adc
call
or
xchg
bsr
mov
cld
sbb
or
push
sub
cli
movsb
cmc
mov
xchg
int3
xor
daa
pop
mov
out
push
cs
mov
sbb
push
inc
mov
pop
push
cmp
lods
das
mov
and
pop
scas
rolb
pusha
inc
mov
mov
jne
and
out
pop
fisubl
into
push
cmp
mov
daa
adc
cld
lret
sub
mov
jg
cmp
xchg
testb
addr16
in
dec
enter
cmpsb
mov
sbbb
imul
or
jno
leave
cmp
das
dec
stc
inc
lods
popa
cmp
mov
xchg
repnz
test
push
and
int
popf
adc
push
jae
ja
sbb
ficompl
rorl
test
and
push
adc
xlat
add
loopne
xor
and
mov
xlat
aad
in
adc
repz
pop
fiaddl
mov
test
push
inc
lds
push
js
pop
stos
and
mov
xlat
aam
xor
clc
les
clc
lea
les
add
lret
and
aam
jmp
push
sub
fmul
cmpsl
adc
mov
adc
push
stos
or
dec
pop
jl
iret
jecxz
movsb
or
mov
jo
mov
xchg
jno
imul
jbe
xchg
jbe
xor
imul
mov
mov
or
lock
loope
lea
dec
sub
in
jg
stc
mov
mov
rcl
out
xchg
shll
lds
rorl
int
cmp
inc
rol
xchg
inc
jae
es
mov
pop
add
xor
xchg
gs
les
mov
adc
push
pop
push
inc
push
dec
xor
rcll
dec
iret
mov
pop
mov
jb
ret
fildl
pop
aaa
lcall
outsl
daa
mov
cmp
pop
pop
mov
fnsave
fsubrs
inc
popf
ljmp
popf
xor
jne
fs
mov
ss
ds
pop
add
cmp
shl
jecxz
cmpl
fdivl
mov
jmp
rorb
add
ret
adc
outsl
int3
pop
jnp
mov
iret
adc
lea
rcl
roll
fdivrs
pop
in
aam
insb
dec
sub
xor
div
iret
clc
adc
mov
into
jmp
out
data16
jnp
push
xor
xor
and
xchg
push
adcb
mov
add
lods
stos
lret
imul
popf
ret
lret
jg
lea
lock
push
fwait
mov
out
aaa
add
inc
and
in
xchg
jae
loop
icebp
inc
xchg
pop
lods
xchg
das
mov
push
sti
stos
fildll
mov
xchg
daa
imul
clc
and
dec
cmp
xchg
push
sbb
stc
cltd
dec
adc
jle
pop
in
jb
mov
lahf
xlat
in
pushf
add
aam
jb
pop
jmp
xor
inc
into
jp
cmp
lds
dec
or
sbb
mov
jmp
adc
pop
xchg
ret
mov
mov
push
rcll
jbe
push
test
sbb
pop
inc
fs
jp
in
xor
fwait
out
divl
cmpsb
xchg
sbb
pop
lret
pop
sub
cmp
and
mov
cmp
lock
xor
outsl
jle
movsl
lret
add
cmpsl
lods
push
enter
adc
lret
and
icebp
movsl
add
jle
js
push
mov
fisttps
pop
pop
pusha
in
nop
or
mov
or
pop
xor
and
add
ret
sbb
cmc
scas
or
xchg
mov
stos
repz
inc
iret
or
xchg
rorb
movsl
mov
adc
xor
shl
push
xchg
jae
sub
aad
mov
push
lret
pop
in
inc
dec
je
dec
or
dec
dec
repnz
xor
rcl
dec
add
cmp
lret
push
pop
dec
ficompl
outsb
sub
cmpsb
out
inc
cmp
sub
pushf
jle,pn
hlt
call
jmp
incl
ja
and
xchg
jg
mov
xchg
das
loopne
mov
dec
mov
push
mov
and
inc
or
or
pop
push
fadds
xor
gs
fucomip
pop
xor
dec
push
aad
mov
adc
cmp
movsl
lret
inc
sub
subb
jge
ljmp
pop
jmp
addb
push
sbb
cmp
loop
lods
push
and
jns
insb
or
daa
in
xchg
cmpsb
inc
ret
mov
push
jmp
loope,pn
add
lods
or
sahf
in
loop
pop
iret
inc
lds
pop
inc
push
fidivs
xchg
add
in
push
fcoms
jl
jmp
leave
inc
daa
mov
sub
and
icebp
dec
test
fnstcw
adc
lret
lcall
addl
cwtl
out
cmp
sbb
cmp
fldl
call
test
je
pop
xor
adc
cs
mov
gs
test
cwtl
fisttps
out
cmpsb
pop
mov
xor
adc
loopne
push
dec
sub
mov
sti
shll
push
in
sub
dec
cmpsb
fsubs
push
jle
nop
push
std
mov
bound
lea
in
inc
ds
scas
xor
pop
pop
orl
dec
clc
push
nop
rcl
sub
cli
ja
js
pop
mov
aad
fisttpll
mov
jp
mov
pop
enter
sbb
push
pop
push
pop
jne
adc
movsb
test
rcrl
jp
aam
out
jne
push
loopne
or
jo
mov
loopne
add
pop
repz
pop
xchg
or
les
pushf
pop
gs
rorb
scas
xor
xchg
sbb
aaa
dec
adc
int3
in
fs
inc
push
mov
mov
add
push
mov
and
pop
jp
cmpsl
repz
mov
jmp
dec
mov
das
aam
jb
fmul
repnz
test
int
jne
adc
jne
cltd
int
push
bound
lret
cli
iret
std
call
aam
push
xchg
mov
jl
xor
adc
dec
dec
jmp
pop
push
sub
fsubl
sbb
sahf
mov
sbb
fldcw
lods
adc
mov
rorl
int
sub
jle
or
sub
movl
sbb
xor
in
or
aad
outsl
and
adc
sti
or
dec
cmp
std
imul
icebp
int3
sbb
mov
cmp
push
push
add
js
sti
add
mov
and
or
pop
mov
imul
mov
mov
and
out
or
inc
jmp
push
mov
xchg
pop
mov
imul
dec
imul
cwtl
push
pop
jno
in
xor
add
inc
sub
fwait
aas
adc
add
and
jle
daa
leave
int
or
in
push
inc
mov
lahf
xchg
mov
loope
pop
xchg
pusha
and
es
insl
arpl
sbb
mov
in
mov
mov
fucom
push
cmp
or
jae
add
sbb
dec
lcall
mull
outsb
popf
test
mov
jle
shrl
insl
pop
add
movsl
fistpl
popf
rcrl
lock
in
mov
inc
gs
mov
dec
mov
fsubl
or
push
add
pop
dec
xor
fisttpl
jne
nop
ss
xor
jle
mov
sahf
cmp
lock
mov
int3
scas
je
jg
push
jb
fistpl
jg
mov
ret
dec
xorl
xchg
inc
pop
inc
or
sub
inc
dec
jnp
and
and
pop
roll
aas
fwait
jecxz
int3
and
clc
adc
in
xchg
mov
or
in
js
fcoml
push
iret
test
sbbl
dec
lret
insb
ljmp
pop
gs
cmp
repnz
sub
cmpsb
xor
fwait
mov
insb
add
mov
cld
lock
adc
mov
addr16
xor
shlb
inc
xchg
mov
xchg
mov
adc
lods
jbe
in
in
lret
and
cltd
and
adc
or
ljmp
mov
out
pop
sti
cmp
andb
cltd
sti
sahf
in
add
cmp
cmpsb
lock
mov
inc
jecxz
repnz
cmpsl
daa
movsb
mov
xchg
clc
shr
lods
dec
jge
adcl
scas
mov
call
adc
sub
aaa
arpl
hlt
testb
mov
cld
xchg
test
lret
popf
rorl
push
arpl
jno
pop
fs
testb
jmp
jae
mov
mov
push
xchg
pop
das
xchg
cmp
fadds
ret
inc
sti
sub
aam
jo
stos
fcmovnbe
adc
movsl
xor
jns
push
movsb
subb
or
movsb
xor
je
push
nop
das
push
out
inc
push
inc
fwait
mov
pop
ds
cmp
pop
data16
clc
shlb
enter
mov
mov
leave
icebp
jl
loopne
leave
lds
into
xchg
pop
movsb
mov
push
inc
mov
sbb
or
add
push
adc
and
test
jl
fwait
rcrl
sbb
stc
mov
outsb
cmp
and
aam
ds
mov
out
inc
pop
clc
cmp
sub
outsl
mov
mov
or
pusha
jmp
sbb
xchg
cli
out
sbb
aaa
mov
inc
or
insl
cmpsl
hlt
mov
shrl
xlat
inc
push
sbb
imul
rcll
sarb
divl
xchg
cmpsb
jo
das
repnz
scas
jl
mov
mov
fs
rorb
or
mov
pop
test
push
shrl
lahf
ret
fistps
push
mov
cltd
push
mov
cmp
mov
imul
push
jo
push
test
jae
repz
push
push
rcl
mov
jmp
mov
fstpl
pop
mov
cmp
cmp
getsec
add
xchg
inc
js
inc
and
daa
call
and
add
je
jecxz
adc
cli
test
push
lods
and
xchg
jmp
popf
pop
dec
roll
and
lahf
shlb
shlb
jb
popl
add
outsb
xchg
arpl
loope
mov
cli
int
inc
repnz
xchg
push
lret
pop
enter
lock
lret
push
sbb
inc
dec
addr16
mov
in
sub
fldcw
pop
adc
repnz
mov
pop
and
aam
pop
add
nop
push
cs
add
inc
push
in
xor
jecxz
jp
dec
in
fistpll
jo
test
hlt
mov
xchg
mov
adc
ficompl
xchg
sub
push
fwait
leave
jge
cwtl
in
out
and
in
cmpsl
das
adc
xor
push
out
cmp
and
sub
das
push
stos
aas
popf
dec
arpl
mov
pop
stc
lock
pusha
test
mov
ljmp
xor
push
loope
and
jge
gs
sbb
enter
xchg
pop
lret
outsl
and
dec
and
push
in
cmpb
cmpsb
mov
int
adcb
mov
int
xchg
xor
sahf
shrl
insb
ja
mov
roll
sahf
loop
leave
dec
mov
mov
sub
rcll
and
mov
jno
aas
push
scas
mov
pop
pop
add
mov
clc
test
jb
mov
mov
in
icebp
daa
sbb
sbb
cmp
inc
mov
mov
pop
repz
or
inc
jle
sbb
mov
stc
mov
int3
test
aas
in
test
cmp
out
adc
je
xchg
sub
popa
dec
xor
rcr
pop
sub
sbb
repnz
push
loope
sub
arpl
jno
cmp
add
icebp
hlt
mov
sahf
sbb
sbb
mov
fcomip
cmp
jne
mov
in
dec
or
enter
repz
and
ss
xor
and
in
repz
fstpl
scas
xchg
pop
or
cltd
scas
xchg
sub
mov
fiaddl
push
cli
jle
jo
std
dec
pusha
bound
cmp
jbe
xor
fnstenv
ja
jns
shll
push
dec
stos
les
stc
push
sub
jae
pop
stc
mov
adc
icebp
data16
out
dec
mov
cmc
test
arpl
adc
enter
clc
adc
cld
add
sub
pop
lock
lahf
sahf
cmp
cmpl
cmp
fdivr
dec
push
sbb
and
cwtl
sub
dec
loopne
and
std
cmc
nop
jecxz
dec
jno
pop
sarl
aam
rcll
cwtl
and
and
jne
aaa
gs
jbe
es
sub
push
rcrl
imul
push
and
cmp
inc
pop
cmp
jnp
or
adc
out
cmpsl
lahf
jmp
xchg
stos
in
out
imul
pop
push
test
inc
add
stos
popa
fsubrp
dec
and
adc
add
daa
jae
and
pop
jecxz
in
imul
jns
call
aam
imul
dec
mov
rclb
mov
adc
ret
and
and
mov
aaa
mov
pop
cmp
dec
push
mov
mov
arpl
pop
dec
sbb
or
stc
cwtl
sbb
mov
test
pop
cmp
lock
adc
daa
xlat
cld
dec
sub
stc
jae
jae
fs
pop
jns
lods
insb
dec
or
std
push
add
sub
cmp
aas
inc
inc
adc
push
add
adc
fstps
in
iret
push
les
mov
call
xor
leave
pushf
xchg
cmp
adc
jno
add
loop
jp
xor
xor
jbe
inc
and
sbb
mov
mov
idivl
mov
add
inc
jmp
jge
jb
adc
cmpl
dec
cltd
or
jns
ja
push
mov
shlb
push
xchg
inc
dec
test
jle
js
cs
mov
push
xchg
and
sarl
and
adc
xchg
out
xor
rorl
arpl
orb
js
inc
jno
adc
repnz
mov
js
jg
pop
mov
sub
push
mov
jne
loop
dec
push
and
daa
mov
andb
inc
pop
dec
jno
mulb
sub
and
outsb
dec
sti
inc
imul
imul
pop
cmpsl
push
outsb
std
fnsave
push
scas
mov
xor
mov
test
int3
add
inc
jbe
arpl
fsincos
push
inc
jnp
and
add
push
inc
call
inc
mov
xchg
loope
sbb
sub
mov
pop
test
lock
jge
push
adc
xchg
imul
push
xchg
xchg
mov
mov
iret
push
cmovnp
jg
addl
daa
mov
ljmp
xor
mov
adc
pop
xchg
inc
pop
cmp
imul
call
test
mov
roll
jae
fs
jge
or
mov
dec
aas
ss
out
pushf
mov
dec
cltd
inc
das
cli
mov
inc
test
inc
mov
es
test
mov
lock
popa
mov
xor
cmp
sub
shll
pop
inc
sarl
sbb
dec
mov
pushf
popa
mov
jecxz
adc
ret
outsl
mov
cli
jg
dec
dec
xchg
mov
add
xchg
call
stc
or
push
mov
adc
mov
sahf
nop
insl
test
stos
ja
add
inc
ffreep
jle
ror
ret
pop
jno
int3
inc
push
mov
xor
mov
jl
shl
in
or
mov
shlb
sbb
fimuls
and
and
push
lock
cld
dec
xchg
shll
and
jge
xor
insb
xchg
mov
mov
mov
fsubrl
rorb
mov
ja
push
es
mov
push
and
loope
xor
insb
movd
or
xor
or
in
adc
aas
out
popf
out
popf
fidivs
ja
cmp
push
and
out
mov
iret
mov
mov
jle
pop
and
xor
add
jns
push
cwtl
mov
in
shll
stc
cld
cmp
inc
xchg
int3
sbb
sub
push
loope
xor
jns
xor
and
pop
imulb
jbe
aad
fimull
rol
repz
dec
mov
sbb
lock
in
loop
push
xchg
xchg
cli
movsl
dec
mov
cmp
leave
push
out
inc
insb
adc
leave
mov
addl
jb
in
dec
jbe
jmp
mov
shrl
jnp
add
mov
mov
mov
mov
call
js
cmp
inc
lcall
push
shlb
arpl
test
xchg
mov
mov
mov
aaa
mov
sbb
cmc
clc
pop
popf
xchg
xor
scas
insb
movsb
or
iret
fwait
lea
mov
outsb
into
sbb
jmp
or
es
or
mov
fsqrt
ljmp
dec
or
inc
inc
mov
sarl
popf
lahf
aaa
int3
push
out
xlat
sahf
sahf
arpl
test
outsl
pop
leave
pop
in
jb
sti
enter
dec
insb
pop
lods
loope
jbe
or
xchg
out
adc
dec
mov
push
push
mov
test
mov
loop
inc
lahf
sub
stos
dec
inc
ss
stos
scas
sub
and
ss
sub
stos
enter
ret
xacquire
cmpsb
enter
inc
xchg
ja
inc
aas
push
jle
insb
stos
xchg
mov
shl
ljmp
inc
lret
dec
int
sub
mov
lar
sub
sti
mov
dec
mov
add
lock
rcl
xchg
and
andb
inc
jno
adc
push
xor
jo
jb
fsts
mov
mov
xchg
ja
cltd
icebp
dec
ja
pextrw
push
dec
fnstsw
jne
cmp
dec
xchg
jbe,pt
sub
xlat
sub
repnz
dec
adc
xor
and
outsl
popa
xor
pushf
push
mov
outsb
pop
mov
sub
outsl
sbbl
mov
shll
adc
int3
and
mov
call
mov
ljmp
out
xchg
mov
ret
mov
or
fistpll
in
arpl
adc
mov
xchg
push
xlat
mov
pop
dec
hlt
scas
mov
test
lods
push
imul
scas
stos
jmp
jo
jno
in
jp
fnstenv
icebp
cld
jns
pop
jne
and
jbe
xchg
mov
daa
aad
call
cmp
mov
dec
ljmp
cmp
cmp
call
or
call
sahf
nop
leave
pop
fidivrs
jo
outsb
ret
jp
rolb
int
add
mov
mov
pop
test
popf
test
adc
faddl
fdivrl
sbb
cmp
jge
imul
inc
les
clc
or
ljmp
add
mov
mov
push
jp,pt
pusha
xchg
lahf
aam
mov
cmc
mov
adc
pop
cmpsl
jmp
fs
lahf
mov
mov
mov
js
ss
sarl
fildl
jbe
jnp
inc
pop
popa
stos
outsl
jns
subl
ror
and
int
jnp
xchg
arpl
addr16
xor
js
push
mov
fcoml
pop
insl
jl
icebp
mov
and
aam
in
cli
ss
sub
and
es
lds
jmp
pop
enter
pop
cli
lods
fstpt
test
mov
je
subl
mov
xchg
hlt
mov
fnstcw
in
jge
add
jmp
test
aam
lods
add
aas
stos
gs
push
or
xor
dec
insb
rcrl
mov
pop
popa
ret
xor
int3
call
ja
mov
add
push
test
jb
mov
jb
lock
dec
mov
cmpsb
in
dec
add
jae
adc
cs
inc
cmp
and
dec
and
cmc
test
cmpsl
and
data16
push
jnp
pop
sahf
dec
ss
xor
pop
in
xor
cwtl
ud1
mull
rorb
xchg
cmpsb
mov
jecxz
outsl
fucomp
movsl
aas
cli
out
pushf
sbb
xor
fcmove
mov
lret
in
sub
or
cwtl
int3
sti
ds
fisubrs
xor
test
fwait
mov
pop
loope
dec
lret
int3
in
inc
movsl
andl
leave
jmp
mov
sub
or
and
lods
hlt
mov
jae
inc
mov
cmp
push
add
rcl
out
xor
xchg
inc
jmp
pop
orb
cmp
mov
jg
aad
xchg
aad
lock
stc
popa
mov
test
test
inc
dec
mov
add
sbb
cmp
adc
test
fnstenv
stc
add
je
lods
mov
aas
ret
jb
mov
add
mov
jnp
pop
xchg
out
lea
test
push
xor
lock
outsb
push
sbb
push
adc
dec
push
icebp
and
movsb
call
mov
fwait
add
movsb
sti
xor
xchg
push
inc
adc
inc
mov
cmp
ja
loopne
pop
call
add
cmp
xchg
push
push
js
rcrb
xchg
jp
insl
xor
fsts
mov
jns
pushf
popf
shrl
mov
out
movsb
sbb
movsb
push
inc
cltd
jne
sbb
jmp
imul
int3
inc
pop
and
adc
push
and
push
outsb
and
sub
and
jge
cmpsl
adc
jnp
xchg
rorl
mov
imul
rcrl
push
sbb
xchg
daa
aaa
push
lahf
and
adc
and
mov
inc
pop
cmp
pop
pop
int3
cmp
sti
pop
inc
inc
insl
cmp
ret
fldl
into
dec
mov
scas
adc
cli
sbb
mov
xchg
mov
inc
mov
data16
inc
jo
pop
scas
fistl
imul
nop
push
sbb
jp
mov
push
int3
scas
push
mov
mov
sbb
ljmp
jo
mov
sub
inc
jle
stos
pusha
push
adc
jmp
cmp
jns
cld
fs
js
je
inc
xchg
decl
jmp
dec
jle
adc
nop
movsl
cwtl
out
jbe
dec
pop
neg
sub
push
add
ss
lret
js
cltd
cmc
ss
jae
adc
xchg
mov
or
int3
sti
jno
lret
xlat
scas
sbb
imul
push
inc
push
stos
jnp
sub
fsubs
push
lret
ja
ja
pop
bound
icebp
mov
or
dec
jno
out
cmc
insl
out
mov
leave
sbb
sbb
aam
in
mov
xor
lods
cwtl
sti
and
call
or
outsl
mov
fs
cmp
or
stc
and
mov
sub
fidivrs
ret
ja
hlt
movsb
pop
mov
imul
cmp
data16
femms
lcall
mov
mov
lds
sub
mov
mov
icebp
xor
inc
adc
gs
orb
push
mov
inc
addr16
xchg
push
inc
aaa
xor
ja
jecxz
dec
add
jge
into
int
xchg
push
cltd
mov
pop
iret
rcll
pop
cltd
dec
es
mov
and
xor
push
add
cld
inc
or
adc
add
outsl
dec
jl
iret
mov
mov
les
test
faddl
jl
ja
aad
cmp
or
gs
mov
gs
jmp
push
inc
ficoml
mov
inc
adc
out
mov
sti
data16
adc
pop
pop
mov
dec
iret
sbb
decw
add
cltd
push
mov
cmp
enter
or
imul
mov
popl
dec
or
pop
ljmp
fstpt
push
lcall
addl
or
xor
cmp
mov
in
add
dec
fcmovb
mov
add
cmovb
inc
inc
cmpsb
stc
xor
push
or
cld
mov
shrb
outsb
adc
dec
mulb
aaa
rorl
out
mov
fwait
adc
stos
push
mov
sahf
xor
mov
dec
stos
ficompl
inc
adc
dec
call
nop
sub
mov
ljmp
popa
cmp
aas
cmp
mov
mov
or
cmpsl
mov
sbb
int3
icebp
and
adcb
pop
mov
jge
outsl
mov
ret
pop
mov
dec
inc
xchg
cmpsb
dec
das
cmp
jmp
das
add
or
pop
add
loopew
and
adc
outsb
es
mov
pushf
loopne
sbb
adc
xor
out
or
lret
mov
cs
xchg
xchg
jmp
adcb
loopne
pop
sbb
jno
pop
adc
mov
je
mov
push
sub
fdiv
int3
int3
mov
pop
jg
xor
fadds
or
je
and
dec
jg
inc
in
cwtl
cltd
push
cmpb
or
pop
cmp
mov
ja
pop
aas
mov
imul
and
mov
cs
xchg
cli
jp
movb
clc
aas
or
dec
aas
in
negl
or
lret
cmp
inc
rorl
daa
insb
negl
icebp
pop
loopne
cmpb
and
negb
dec
or
xor
loopne
xor
add
mov
xor
loop
ja
xor
sub
xchg
mov
sub
dec
cs
ds
lods
int
pop
in
xchg
jb
mov
add
imull
stos
in
outsl
or
or
into
cmp
sbb
dec
add
outsb
mov
insb
xchg
or
dec
pop
and
inc
ret
loop
sbb
push
dec
xlat
dec
incb
jg
mov
ljmp
ss
cmp
fisttpl
xor
mov
ret
data16
or
push
push
xchg
fnstcw
xchg
shrl
sub
sub
pop
test
scas
or
dec
mov
insb
pop
in
push
inc
cs
add
mov
test
mov
mov
adc
bnd
push
lcall
cwtl
aas
and
adc
adc
pusha
inc
mov
rol
sti
pop
and
xor
jge
cmpsl
outsl
lcall
or
imul
movsb
stos
es
in
repz
int3
and
loope
in
sbb
mov
lret
mov
filds
or
pop
push
fstpt
xor
and
arpl
dec
sub
fwait
stos
jg
and
add
nop
mov
mov
cwtl
push
jne
adc
inc
daa
push
inc
cmp
in
fisubrl
arpl
mov
mov
adc
out
aaa
push
ja
fnstcw
sbb
or
pop
les
add
mov
enter
add
out
add
or
js
fndisi(8087
cld
cwtl
mov
xorl
mov
mull
movsl
push
pop
adc
push
outsl
xchg
out
jmp
dec
popf
mov
mov
sbb
lcall
xchg
push
jge
inc
aas
jb
cmp
mov
xchg
mov
xchg
out
orl
push
add
inc
and
mov
sarb
adc
pop
xchg
dec
mov
mov
mov
aas
fnstcw
icebp
mov
outsl
stos
xor
jg
xor
sar
inc
and
rcll
and
xor
jno
movsl
jae
in
and
pop
sub
mov
fildl
adc
add
mov
data16
push
inc
je
cmp
pop
fmuls
je
sub
mov
dec
rorl
pop
jae
mov
xchg
and
jl
and
hlt
test
jmp
push
dec
mov
and
xchg
xor
lods
int
and
mov
dec
adc
mov
push
dec
mov
js
xor
ss
cmp
dec
push
inc
cli
xchg
cmp
shll
shl
jmp
popa
xor
femms
dec
and
icebp
out
mov
jne
pop
pop
or
cmpsb
aam
das
or
and
mov
xchg
push
xor
mov
repnz
sub
pop
and
cmc
sub
sub
insl
add
push
push
popa
adcl
sbb
addr16
and
adc
cld
insl
mov
mov
dec
jns
sub
push
sbbb
xchg
scas
mov
idiv
xchg
jmp
add
rcll
or
icebp
nop
mov
dec
mov
xchg
jl
sbb
mov
cmp
xchg
in
and
xor
imul
outsl
cmc
mov
ja
sub
sub
sbb
xchg
pop
loope
pushf
insl
push
inc
adc
xor
pop
outsb
inc
add
jge
pop
bswap
jo
outsb
jp
adc
daa
dec
or
pop
jp
jnp
xor
mov
bound
and
jne
loop
jnp
pop
jp
mov
test
mov
sbb
int
aas
add
adc
addr16
jnp
imul
mov
fwait
rorl
dec
adc
in
in
sbb
add
stos
xor
adc
ds
pushw
lds
int3
int
and
clc
cmp
cmp
imull
clc
add
sub
ja
addr16
clc
adc
pop
call
sub
mov
leave
addr16
out
dec
jae
sbb
mov
cli
cmc
mov
inc
mov
rcrb
add
idiv
inc
xor
loop
fs
fs
movsb
testb
test
les
movsl
cmp
imul
push
pop
leave
insl
outsb
nop
pop
scas
mov
arpl
add
pop
in
lock
test
leave
lea
in
adc
and
adc
fnstenv
movsb
jnp
ret
dec
lds
mov
sbb
lods
stc
shrl
mov
rcr
pop
or
and
in
mov
mov
out
into
fwait
push
loop
scas
cmc
std
adc
sub
mov
repnz
fs
jecxz
fsubrl
ja
lods
popa
mov
out
sub
call
push
sbb
push
pop
or
js
sbb
dec
pop
enter
loop
xchg
adc
mov
jae
sub
mov
repnz
stos
mov
adc
push
cld
popa
jge
push
cmp
jge
push
pop
fldcw
mov
icebp
cmp
sub
sub
xchg
aam
mov
mov
int3
jbe
fldcw
cmp
or
cld
adc
push
cmp
les
cmc
lret
mov
in
stos
cwtl
inc
sub
mov
out
lret
xchg
ffreep
int3
sbb
xor
add
xor
and
std
mov
or
push
inc
or
adc
out
mov
lods
hlt
inc
ss
cltd
imul
sub
pop
je
inc
and
out
mov
jmp
dec
out
js
int3
inc
addr16
dec
pushf
inc
out
sub
jecxz
test
sub
insl
loopne
scas
mov
in
push
adc
out
lea
push
pop
jl
and
dec
fisttpl
movsl
inc
add
mov
add
lcall
xlat
mov
daa
mov
adc
js
subl
dec
jne
dec
cmp
lock
add
aam
mov
push
adc
orl
in
xor
fcomp
mov
dec
xchg
mov
inc
xchg
aam
xor
loope
xchg
aad
ja
xor
lea
inc
xlat
push
sbb
inc
sbb
mov
xchg
out
call
mov
loop
adc
pop
dec
jg
test
adc
push
faddp
xlat
add
adc
jge
and
cs
lret
mov
inc
pop
ds
lret
pop
xchg
mov
test
dec
cli
prefetch
xchg
adc
pop
push
popa
popa
jge
rcrb
stos
sbbl
mov
into
sbb
xchg
add
cmp
pusha
std
repz
sbb
ds
movsl
jns
fs
lods
jno
xchg
xor
xchg
lock
call
bound
inc
jae
pop
cmp
add
cld
push
mov
mov
test
fwait
lock
and
sti
adc
sub
clc
sub
inc
adc
xchg
lea
xor
loopne
es
lods
clc
ss
in
clc
lods
lcall
out
popl
mov
scas
aam
sub
and
add
push
shl
and
enter
stos
nop
inc
pusha
fsubp
jno
dec
jl
cmp
ret
xor
adc
mov
enter
imul
jmp
push
dec
dec
push
sbb
nop
inc
in
xor
test
cmc
insl
insl
pop
sahf
les
jle
mov
adc
push
rol
shl
lret
in
fimuls
movsb
dec
in
daa
ja
sbb
test
inc
jg
sbb
push
outsl
out
pop
fildll
test
jbe
repnz
xchg
imul
pop
inc
lds
sub
aad
mov
sub
stos
dec
movsb
mov
in
divb
dec
mov
pop
push
mov
inc
out
or
fbld
mov
mov
pop
es
mov
mov
outsl
jne
xor
sub
mov
test
pop
and
inc
test
popf
sub
jmp
jns
cld
sub
dec
pop
pop
sub
push
ds
mov
cli
and
jb
int3
sub
insb
jnp
imul
jg
push
or
pop
mov
dec
jnp
xor
push
mov
dec
sahf
dec
add
add
sub
movsb
xlat
bound
mov
jle
adc
and
lds
mov
sbb
ret
lret
sbbb
ud0
and
cld
push
mov
dec
push
fisttpl
pop
mov
decl
xchg
pop
loop
mov
clc
jecxz
cmp
xor
push
push
sbb
dec
inc
mov
and
out
das
iret
mov
jb
daa
cmc
add
out
cmp
fisubl
popa
adc
fdivs
in
push
sub
sub
imul
add
inc
push
andb
idivl
sbb
cmpl
stos
cmp
pop
shll
adc
add
mov
sbbb
adc
fs
or
lds
movsb
and
mov
add
pop
mov
inc
ja
mov
fwait
push
test
add
pop
lahf
shlb
push
mov
sbb
xor
dec
in
out
bound
movsl
test
loop
mov
loop
add
push
mov
out
imul
adc
loope
xchg
inc
fisttps
inc
call
ret
push
inc
pop
enter
sbb
call
jmp
ja
push
dec
or
adc
dec
push
scas
popf
lahf
fwait
in
xchg
lock
pop
mov
or
cwtl
cmc
in
shlb
or
into
mov
dec
jl
xchg
lahf
push
nop
and
jns
outsb
push
bound
mov
fiaddl
decl
inc
cmp
popf
dec
xchg
repz
jmp
adc
dec
fs
pop
sbb
xchg
xchg
loop
mov
mov
bnd
cmp
xchg
adc
test
sbb
jns
pop
in
xchg
out
das
into
sbbb
mov
add
ret
ret
sbb
or
outsb
push
pop
stos
mov
movsb
out
sub
vcmpps
out
lds
mov
in
pop
and
and
lods
inc
ja
inc
and
mov
mov
hlt
and
out
push
gs
cmp
sbb
shl
and
jp
mul
scas
or
stos
scas
insl
cmpsb
cmpl
mov
adc
in
in
mov
in
push
mov
call
jmp
jmp
cli
jmp
int
jbe
mov
adc
pop
cmp
mov
loopne
icebp
jl
hlt
ljmp
and
and
sbb
fidivrl
xchg
mov
in
mov
push
add
cltd
stos
mov
leave
pop
mov
mov
cmp
loop
cld
cmpsb
jae
daa
ljmp
test
mov
daa
xchg
lods
scas
push
xorl
push
add
and
dec
bound
mov
push
mov
ret
mov
inc
or
out
fstps
push
insl
xchg
xchg
sub
push
dec
sub
jecxz
jb
arpl
int3
out
cmpsl
cwtl
cld
stc
gs
push
insb
push
out
test
ds
pop
jo
pop
scas
ds
add
cld
inc
xor
jl
add
jecxz
mov
mov
sbbl
xchg
leave
aaa
xchg
dec
mov
test
lret
inc
xor
xchg
nop
mov
loop
and
jmp
insb
adc
mov
or
cmpb
iret
lea
call
inc
cmp
lods
lret
push
xor
mov
lods
loop
mov
jno
out
mov
ret
add
adc
and
fidivrl
repnz
rclb
cmpsl
arpl
lea
cmp
inc
clc
xor
fs
or
and
sar
hlt
lock
stos
nop
dec
or
stos
push
jp
cs
mov
pop
sbb
and
ja
iret
pusha
mov
mov
or
mov
aaa
xchg
sahf
and
adc
mov
ljmp
jne
sbb
pop
jno
std
fs
pop
push
jbe
das
test
sahf
out
pop
ret
push
scas
cmpb
mov
je
mov
xor
div
loopne
lock
dec
xchg
addb
adc
dec
pop
dec
imul
push
loopne
pop
data16
sub
and
lds
leave
in
std
ficompl
stc
pusha
pop
decl
jmp
arpl
out
push
aas
mov
cmovge
inc
push
imul
xchg
jnp
mov
push
in
scas
mov
sub
mov
push
or
sub
xchg
and
jb
push
and
lcall
movsl
lret
add
cmp
mov
push
and
fs
xor
cs
jge
cmp
or
push
dec
cmpsb
jl
gs
mov
xchg
inc
std
pop
je
mov
push
scas
gs
fdivrl
push
mov
ret
add
inc
stos
inc
mov
jg
aad
adcb
addl
cmp
rcll
cmp
inc
dec
dec
int3
mov
lcall
fwait
jg
pop
push
dec
bound
int
mov
and
cmp
imul
mov
inc
pop
add
sub
sbbb
insl
scas
mov
leave
push
fstp
jnp
xchg
cmp
popa
scas
and
mov
xacquire
aad
mov
dec
int3
xor
dec
fwait
mov
cmc
ds
shlb
or
and
test
pop
add
mov
div
adc
jnp
call
dec
pop
mov
cmc
adc
test
sub
add
and
test
notl
jb
xor
mov
fwait
outsb
in
push
iret
push
jno
add
pop
mov
push
and
inc
or
cmp
dec
inc
insb
hlt
arpl
lds
out
and
stos
sbb
push
aaa
dec
jns
imul
jecxz
insb
lret
cmpb
add
add
mov
lret
int
pop
movsb
inc
push
adc
dec
cmp
xor
insl
jecxz
outsb
lock
movsl
push
jo
xor
xor
daa
adc
and
jne
xor
mov
hlt
xchg
fbstp
inc
adc
insl
mov
test
cmp
andb
pop
add
jmp
int
cmp
pushf
les
mov
add
xchg
push
push
gs
pop
push
and
rcll
cmp
push
cmpsl
inc
jnp
test
rcll
aas
ficoms
pop
or
gs
mov
in
stos
insb
das
pusha
cmp
and
mov
xor
adc
iret
mov
mov
push
xchg
adc
sbb
je
add
adc
hlt
fstpt
movsb
pop
add
inc
cs
mov
sti
out
addr16
test
or
in
ret
insb
xlat
fmull
jne
aad
inc
mov
ds
lea
push
push
mov
mov
adc
ret
pop
jne
xchg
jp
insb
out
fcmovnb
sbb
jl
in
sarb
clc
cmp
test
sub
push
jns
xchg
iret
nop
mov
pop
loope
mov
or
shlb
pop
shll
cmpsl
testl
fldenv
mov
push
mov
fidivrl
lds
out
cmp
int
in
cmp
mov
loope
sbb
adc
mov
scas
xchg
mov
sbb
movsb
ljmp
dec
aaa
xchg
jecxz
mov
mov
or
dec
jl
sti
adc
testb
dec
push
outsb
ljmp
insl
xchg
mov
ret
icebp
in
mov
sub
add
inc
mov
cltd
flds
addr16
push
jecxz
push
sbb
cmp
pop
call
xor
xchg
dec
insl
rorl
mov
ja
push
mov
push
lcall
into
fs
incb
insb
xchg
lea
fwait
dec
mov
fcomi
adcl
call
lret
xorb
or
mov
jge
jno
add
xor
popa
push
dec
ret
push
sbb
inc
and
xor
mov
cmp
mov
xor
pop
lock
lret
inc
iret
jmp
shll
pop
jno
push
adc
pop
pop
fnsave
sbb
jae
xlat
xorl
add
mov
inc
add
mov
sahf
adc
adc
pop
dec
mov
cs
xchg
ret
fnstsw
fcoms
xor
test
add
dec
sub
idiv
mov
push
and
ljmp
fstpl
pop
cld
packuswb
stos
movsb
movsl
xchg
aam
hlt
repnz
xorl
xor
sbb
jle
bnd
or
xchg
push
scas
pop
xchg
ret
xor
mov
dec
cltd
fadds
mov
rol
cwtl
lds
mov
andl
and
add
aaa
shrl
mov
xor
sub
arpl
imul
in
in
xor
push
sbb
or
ftst
scas
and
in
xor
xchg
fists
aaa
push
xchg
js
cmp
add
jnp
mov
add
fwait
push
mov
jecxz
sub
test
adc
jo
cmc
mov
xchg
pop
int
xchg
repz
sub
xor
mov
ret
les
fwait
in
pop
and
lods
mov
adc
das
cmpsb
adc
insb
sbb
repz
add
inc
and
mov
push
mov
mov
or
jno
cmpsb
adc
es
stos
popa
aas
cltd
int
stos
lods
mov
add
int
orb
xchg
lock
mov
into
test
jl
insb
js
pop
pop
sarl
inc
jb
pop
jg
adc
jbe
push
pop
jl
testl
mov
cli
sbb
insb
aaa
dec
fs
lds
pop
pop
or
gs
ljmp
pop
jns
and
test
sbb
cmp
pop
jge
push
sub
rol
shll
dec
shl
mov
js
add
mov
xor
cmpsl
sbb
movsl
movsb
call
adc
test
test
jnp
aad
cmp
mov
sub
adc
fwait
aam
imul
pop
ret
dec
adc
jp
pop
push
shlb
sti
enter
mov
lea
sbb
loopne
aam
jmp
aam
or
pushf
cltd
enter
push
add
cltd
popa
mov
xchg
sbb
pop
dec
adc
push
push
shlb
xchg
pop
xor
dec
mov
fdivp
sub
xor
push
loope
mov
js
fisubs
pop
leavew
mov
shrb
fstl
sbb
dec
enter
inc
cmp
in
lret
hlt
testb
add
mov
sti
adc
sub
sbb
aad
out
stos
dec
inc
push
mov
movl
adc
and
fistpll
jl
mov
mov
cmp
ret
bound
in
mov
add
xorb
cwtl
ss
dec
popf
fmuls
mov
add
dec
xor
mov
aas
iret
mov
ss
insl
stc
push
mov
sti
mov
mov
sbb
xor
add
push
lret
insl
insb
cmp
dec
pop
mov
repz
or
addr16
xor
mov
or
lock
and
loopne
fmull
arpl
icebp
outsb
mov
shll
inc
or
fstps
jge
and
adc
sbb
fistpll
std
in
and
jge
and
mov
xor
add
jb
pushf
sahf
mov
sbb
push
push
mov
push
push
popa
js
dec
cmp
ret
inc
arpl
adcl
jp
test
push
lret
in
test
push
insl
insl
xor
sub
movsb
fcoms
movsbl
addr16
mov
add
pop
push
mov
je
dec
push
mov
aas
imul
imul
xor
xchg
sbb
xor
xchg
std
stos
pop
ss
push
leave
dec
inc
cmp
push
adcl
sbb
out
scas
mov
lret
cwtl
fstpl
adc
aad
fwait
push
cs
xchg
fidivrl
xchg
andb
mov
cli
mov
ficoml
cmpsl
inc
cli
xor
sbb
fisubrs
lret
inc
sbb
ja
add
mov
ja
cli
xchg
sbb
fs
mov
jmp
sbb
daa
mov
shrl
inc
sub
ja
adc
and
adc
dec
mov
sbb
xchg
or
lcall
jg
cmp
lahf
iret
aam
adc
das
jae
in
stc
dec
mov
xor
sbb
xchg
repz
or
cli
aaa
dec
and
mov
add
sbb
leave
sbb
cwtl
and
push
into
mov
jg
shrb
add
aam
sbbl
dec
loope
rorl
xor
js
cmp
lods
or
shrb
dec
add
and
push
pop
out
or
push
sub
jle
and
and
xlat
dec
jle
test
int3
cmp
jae
out
hlt
lcall
xchg
inc
fwait
idivl
mov
test
dec
in
jno
scas
in
pusha
stos
test
in
jle
push
mov
scas
call
jbe,pt
xchg
mov
xchg
add
cli
dec
push
xchg
mov
inc
mov
pop
cmp
cmp
push
inc
insl
sub
sbb
push
insl
testb
es
ret
les
jne
cmpsb
sbb
and
lahf
or
cmp
stos
in
and
std
cmp
mov
dec
jecxz
imul
or
test
mov
mov
sbb
inc
jo
mov
in
push
and
add
and
pop
pop
mov
leave
mov
out
jmp
push
mov
hlt
lcall
inc
sarb
lock
call
les
dec
sbb
das
sub
add
jb,pn
pop
inc
gs
inc
jns
dec
xchg
or
sub
roll
dec
jno
sbb
dec
andb
fcomps
in
pop
hlt
cmp
push
or
scas
fisubrs
lock
xlat
in
sbb
aam
xlat
push
fwait
and
jne
out
fstpt
mov
mov
rcr
sbb
push
movsl
cmp
add
nop
xor
xlat
aad
or
cmc
jne
push
xchg
jnp
dec
call
jno
andl
adc
jne
push
sbb
cmpsl
jns
call
imulb
mov
sbb
push
xchg
pusha
xorl
repz
push
xor
xchg
jle
jae
inc
inc
bound
xchg
xor
push
xchg
lods
inc
cmp
notl
jne
ja
and
fcmovbe
fcmovne
sahf
cmp
cltd
add
subl
mov
inc
xchg
or
test
pop
add
mov
xchg
push
repnz
inc
imul
out
mov
pushf
into
xor
pop
rclb
cmc
lcall
and
mov
and
push
into
or
pop
adc
icebp
adc
or
int
ja
jno
mov
jecxz
scas
test
mov
mov
mov
push
xor
add
fimuls
xchg
pop
xor
mov
push
in
repnz
jae
mul
sub
pop
sub
adc
into
jae
jno
dec
pushl
dec
data16
cmp
stc
cmp
sarl
clc
or
add
fnsave
dec
adc
roll
stc
xor
adc
cmp
push
in
ss
cmp
stos
add
jns
hlt
mov
mov
xchg
push
out
pop
jp
popf
mov
imulb
inc
cmpsb
rep
add
dec
jne
stc
das
mov
sbb
or
and
mov
mov
fxch
mov
xor
jmp
xor
ja
push
stos
push
minps
adc
insl
lods
jg
add
push
mov
push
adc
in
dec
cmp
cmp
push
ja
jecxz
gs
lods
test
cmpsl
and
imul
push
cvtdq2ps
fcmovbe
lock
scas
mov
pop
insl
mov
pop
adc
push
lret
fwait
pop
data16
dec
dec
mov
stc
push
xor
bound
and
push
popf
mov
pop
ret
pop
dec
mov
pusha
xchg
cmpsb
shlb
icebp
movlps
adc
fldt
push
adc
and
out
jmp
outsb
cmp
iret
pand
bound
inc
mov
iret
mov
dec
sub
mov
sub
mov
mov
xchg
loop
int3
adc
leave
cwtl
in
pop
pop
mov
sbbb
xor
fsub
jecxz
pusha
mov
aad
cmp
mov
jg
mov
sbb
xor
fisubrs
and
pop
jns
sbb
and
cmpsb
inc
lcall
incl
scas
mov
sbb
xorb
test
adc
mov
ja
adc
out
pop
out
les
push
cltd
mov
sbb
push
add
std
icebp
mov
loopne
xchg
push
xor
les
testl
and
xchg
inc
xchg
popa
je
repz
sbb
pusha
std
sub
push
or
movsl
add
jne
and
cmpsl
pop
addb
xchg
pop
loope
pop
int3
push
in
jno
pop
cli
dec
cmp
dec
sahf
dec
xor
adc
das
fdivl
arpl
pop
and
cmp
xchg
sub
dec
daa
pop
and
xorl
cmpsl
cmp
xor
jp
pop
xchg
jns
bound
leave
das
int
add
insl
imul
fcomps
pop
ds
mov
rol
inc
es
push
cld
loop
lock
int3
cmp
ret
push
call
in
push
rcr
test
es
ds
inc
popa
ret
idivl
jecxz
imul
int
jmp
lret
xchg
mov
jp
xchg
sbb
dec
loop
jge
or
jno
int3
xorl
loop
fdivl
pop
mov
add
shl
push
fdivrs
insb
sub
mov
mov
add
mov
xchg
pop
lea
out
inc
pop
adc
punpckhwd
pusha
xchg
sbb
pop
inc
mov
dec
daa
int3
hlt
jge
subb
push
subl
xchg
mov
js
jns
sub
push
shlb
pushf
icebp
inc
out
sub
cli
add
push
jg
loop
mov
cmp
mov
incb
ret
inc
xchg
sub
aas
push
ret
sub
xor
mov
jmp
stos
push
lods
add
out
push
and
cmpsl
popl
dec
push
and
roll
cwtl
fcom
mov
mov
dec
xor
hlt
aad
adc
push
lcall
dec
sub
mov
enter
xchg
dec
cmp
xchg
mov
clc
mov
js
fists
stos
jns
test
mov
jge
mov
outsl
jno
adc
test
outsb
rcrl
mov
cmp
repz
rolb
shl
imul
lods
jb
aam
ret
push
jg
or
push
subl
push
or
push
inc
or
pop
push
mov
mov
mov
into
movsb
jae
fstl
out
cmp
pop
xor
inc
arpl
cmp
add
ret
lds
pop
mov
sub
mov
jo
or
int
call
fdivl
loopew
negl
into
cmpsb
xlat
sbb
sbbl
outsl
pop
jno
in
or
cmpsl
sbb
xor
outsb
xor
jno
ja
cld
out
xchg
mov
sbb
xchg
or
stc
clc
dec
fisttpll
div
es
mov
pop
push
mov
sahf
and
push
fbld
mov
cld
jae
iret
pushf
movsl
insl
pusha
push
movsl
dec
test
sub
out
adc
mov
arpl
cltd
push
jno
popa
stos
dec
pop
es
ret
pusha
js
shrl
pop
scas
jmp
cli
jbe
imul
cwtl
mov
daa
mov
or
sbb
xchg
mov
nop
pushf
test
inc
mov
jge
sub
inc
cltd
push
pusha
fimuls
fstl
cli
adc
mov
inc
sub
pop
stos
jge
arpl
and
mov
or
ss
xorl
es
das
jae
push
scas
xchg
pop
push
lods
fs
movsl
idivl
xor
sub
push
mov
jp
jae
inc
aad
frstor
mov
xor
jns
jae
fldl
ret
or
fisubs
loop
or
adc
mov
dec
insl
sahf
dec
inc
push
movl
mov
daa
or
push
mov
dec
pop
xor
or
dec
mov
cmp
pushf
pop
xor
rclb
push
sub
inc
insb
xchg
test
mov
out
inc
iret
inc
push
sbb
sub
jp
cli
cmc
inc
cli
test
dec
mov
mov
pop
or
stos
sbb
pop
rcll
outsl
push
add
mov
loopne
and
xchg
xchg
out
add
pop
loope
outsl
in
fiaddl
fists
sbb
sub
jb
sbbb
sbb
sub
cs
adc
pop
popa
cmpl
leave
push
jp
dec
insl
sub
rolb
inc
sahf
adcb
sbb
mov
rcr
xor
mov
xlat
sahf
push
lock
pop
push
in
mov
sbbl
sbb
xchg
leave
fidivrs
jmp
in
pop
mov
int
mov
lea
dec
xchg
aam
pop
cs
pop
jmp
jle
mov
sub
dec
icebp
inc
mov
push
cwtl
mov
sti
loop
ret
into
jmp
dec
dec
notl
rcr
sub
rcll
push
mov
xor
adc
sbb
dec
xchg
pop
xor
das
and
jge
jae
lock
xchg
scas
pop
shlb
xchg
fcomps
loopne
ds
jg
xchg
ficoms
and
fistpl
mov
enter
ja
imul
or
imul
pop
rorl
loop
lahf
mov
inc
ret
mov
shlb
sbb
in
cmpsl
xchg
sub
mov
sti
cmpsl
fisubrs
pop
loopne
pusha
xchg
push
mov
stos
adc
xchg
pop
mov
and
inc
cmc
inc
jbe
lret
test
enter
gs
mov
fsub
jl
rolb
cmpsl
data16
jecxz
cmc
imul
adc
nop
lahf
imul
jmp
das
call
lret
push
inc
mov
push
stos
inc
fisttps
cltd
ds
pushl
leave
adc
cwtl
and
and
adc
dec
test
shl
jge
pop
xchg
gs
adc
jl
xor
sub
jns
shlb
ret
jle
dec
ljmp
cmp
mov
nop
loopne
idivb
sub
arpl
testb
aam
jle
dec
sub
fistl
ret
rcrb
ds
icebp
insb
mov
adc
into
jl
adc
enter
subl
mov
call
and
jno
loopne
inc
dec
or
in
aad
in
dec
sbb
jle
mov
js
inc
inc
mov
sbb
popa
aas
mov
adc
aam
mov
in
insb
push
pop
ret
iret
lock
cld
jnp
mov
inc
scas
mov
mov
lret
lret
loope
mull
movsb
cli
dec
xchg
ss
mov
sar
mov
push
popf
icebp
das
xchg
cld
pop
loope
rcr
imul
push
int3
movsl
or
in
pop
ljmp
inc
lcall
dec
dec
xchg
fs
mov
daa
pop
or
aad
mov
loop
or
sub
lret
rcl
sbbb
jno
inc
fwait
popf
in
cmp
sbb
gs
in
sbb
pop
loope
inc
mov
adcb
imul
dec
icebp
popf
test
subl
sbbb
jg
gs
push
mov
add
adcb
sub
jp
xor
mov
enter
iret
fcmovbe
std
fs
rolb
fadd
add
cmp
cmp
clc
mov
adc
ror
popf
loopne
push
xchg
sbb
jp
cltd
incl
sti
sbb
fbstp
dec
andb
mov
in
scas
lods
mov
aad
stos
imul
push
jbe
neg
testb
xchg
sbb
orl
mov
mov
cmc
divb
xchg
pop
data16
jbe
sbb
mov
mov
inc
jg
in
sbb
push
cmp
mov
add
movsl
pop
inc
add
fwait
xor
mov
test
xchg
sub
dec
mov
loop
cmp
lret
mov
fisttpl
lret
ds
and
xchg
xchg
push
in
mov
mov
add
push
cmp
rclb
mov
bound
pop
pop
xchg
loopne
or
js
rol
popa
xor
addb
pop
lret
jle
call
push
cmp
mov
mov
mov
jnp,pt
loop
xor
addr16
jo
in
mov
iret
rol
add
sub
cmpsl
in
xorb
pop
int
add
mov
stos
pop
adc
cmpsl
dec
dec
repz
sti
push
and
sarb
insb
movsb
push
icebp
and
into
int3
pop
addr16
sub
out
xchg
cmp
and
mov
ficoms
pop
push
cmp
mov
les
pop
pop
bound
das
lea
incb
sbb
mov
or
xor
cmp
negb
sbb
sarl
mov
inc
test
repnz
lds
fadds
mov
and
push
cmp
cmp
out
stos
and
xchg
hlt
or
push
mov
xor
mov
int
push
pop
mov
cltd
sbb
arpl
cmp
lock
scas
mov
insb
adc
xchg
cmc
leave
fcmovne
push
xchg
daa
mov
aas
dec
xor
call
adc
xchg
fisubrs
testb
adc
dec
sub
ljmp
dec
stos
movsl
int3
pop
mov
mov
xchg
shlb
cmp
and
pushf
hlt
adc
xchg
fisubrl
arpl
enter
loopne
sbb
fxch
rorb
int
movsl
iret
fstpt
popa
shlb
dec
nop
insb
aad
rclb
dec
int3
adcl
mov
int
je
xchg
imul
mov
lods
push
mov
out
es
fsubrp
sahf
dec
movsb
sub
adc
sahf
sbb
adc
mov
js
or
pop
dec
sbb
inc
dec
cmp
jecxz
jmp
mov
mov
mov
insl
cmpsb
push
ss
xchg
and
fstpt
cmpb
jmp
inc
mov
xor
imull
int
ret
push
xchg
inc
je
and
xchg
ja
mov
and
cli
sub
xchg
pusha
jo
arpl
mov
flds
dec
in
popf
popa
ljmp
mulb
mov
cmp
pusha
les
dec
dec
fsts
lret
or
add
cmpsl
fwait
mov
push
xor
adc
sub
xchg
xor
nop
jmp
sub
cmp
push
das
fwait
jnp
call
sub
mov
inc
sub
push
dec
inc
call
sbb
or
jecxz
lea
out
jb
cmc
repz
std
mov
aam
inc
mov
add
and
mov
rcll
mov
cmp
sbb
push
hlt
mov
and
fimull
cmpsl
mov
dec
xchg
cmp
xchg
fsub
pop
pop
mov
sub
push
jns
aaa
lcall
test
xor
lods
sbb
int
push
ret
and
add
or
cmp
aaa
and
out
push
jb
sbb
push
or
adc
sti
int
xor
xor
or
lock
fs
lcall
xchg
arpl
mov
dec
icebp
mov
scas
push
gs
mov
pop
fdivrp
movsl
decb
lods
xchg
adc
lea
cmc
sarl
mov
mov
cs
mov
mov
notb
ljmp
ret
lcall
pop
aam
mov
mov
icebp
mov
or
jge
call
lea
out
std
mov
adc
js
jl
call
jnp
cmpsl
frstor
mov
sbb
loope
push
fsubl
fnstenv
push
cmp
bound
cmp
xor
cmp
std
loope
clc
pop
push
xchg
xchg
sahf
mov
xor
adc
test
xor
add
sub
enter
inc
xor
inc
add
and
mov
jmp
repnz
add
adc
push
inc
cmp
arpl
gs
jb
mull
push
mov
adc
pop
fmull
or
dec
inc
stc
pop
js
sub
lods
push
bound
dec
mov
gs
mov
iret
cmpsl
sbb
dec
sahf
pop
mov
or
in
mov
loope
pop
in
repnz
mov
mov
xchg
pushf
mov
lods
mov
or
sbb
jge
sbb
in
fdivr
jno
dec
jecxz
dec
ret
movsl
push
dec
adc
out
fdivs
mov
pop
and
mov
inc
sub
mul
add
fimuls
add
pop
mov
or
add
aam
mov
ret
sbb
xchg
test
mov
mov
push
ja
jecxz
inc
sub
xchg
pusha
call
pop
sbb
insb
lcall
inc
pop
icebp
mov
lahf
cld
xchg
rol
jno
inc
cmp
fnstenv
push
loopne
mov
les
in
and
out
xchg
std
mov
cli
mov
xlat
imul
pop
mov
cmp
or
fidivrl
lods
jge
test
icebp
xor
std
popa
cmc
cmc
push
mov
fimull
pop
insl
mov
lea
and
mov
pop
scas
pop
inc
mov
mov
lcall
stos
mov
aas
xor
ret
mov
fildll
or
dec
jg
ljmp
in
test
repnz
mov
xlat
loope
sub
adc
mov
jne
shll
test
push
and
in
and
je
sbb
adc
dec
mov
jne
cmp
sub
mov
xchg
or
int
cmp
in
hlt
mov
sub
mov
es
jecxz
mov
mov
cmc
popa
dec
not
xchg
adc
sti
test
loop
xor
insl
and
lods
jl
cmpsb
cmpsb
testb
xorb
adc
or
lret
inc
mov
stc
gs
out
lret
add
jno
cltd
push
inc
mov
mov
or
push
lahf
mov
sbb
mov
mov
pop
dec
fcomps
aas
ret
adc
mov
sbb
icebp
pusha
btrl
loop
jge
pushf
mov
or
xchg
shll
xor
pop
rol
aad
mov
sub
sub
jmp
stos
dec
inc
and
dec
push
xchg
and
pop
sub
sbb
xchg
bts
test
iret
push
aad
addr16
xor
push
xor
mov
test
mov
mov
push
flds
sbb
jne
xchg
rorb
lds
xchg
sbb
xor
sub
pop
pop
aam
aam
jmp
stos
push
xor
xchg
mov
mov
or
outsb
dec
imul
adcl
imul
dec
cmp
cmp
sbb
rcrl
ss
mov
test
subb
js
jns
mov
cmp
out
inc
dec
fcmovbe
ss
push
push
sub
and
and
xor
dec
shr
pop
fstl
xchg
into
or
or
sub
xlat
sbb
or
push
dec
dec
mov
das
cmovnp
je
sub
xor
es
add
xor
pop
push
cmp
inc
sti
pop
push
dec
repnz
out
rcl
ja
arpl
les
xor
fstpl
push
cmp
fdivr
jle
test
inc
and
jmp
xchg
sbb
loopne
or
mov
jge
mov
jae
fwait
decb
cmc
xchg
mov
cmpl
and
pop
adc
shll
out
popa
mov
nop
cmp
ljmp
mov
xorl
shlb
fldl
or
inc
inc
hlt
nop
mov
mov
and
movsl
pusha
scas
sub
out
mov
mov
addr16
sub
das
insl
xchg
mov
in
sbb
aad
add
cmp
xchg
test
mov
mov
into
push
or
push
xchg
dec
je
test
push
je
adc
movsb
lcall
dec
jb
cltd
jbe
sti
das
cmc
sub
or
push
mov
mov
mov
jecxz
ja
xchg
into
out
divb
push
jbe
lcall
jmp
sub
cmp
add
cli
push
jns
sti
xchg
lods
cmp
fcmovbe
sbb
fwait
popa
out
push
enter
inc
in
repz
leave
cld
jle
cmp
outsb
cmp
push
sbb
add
xchg
pushf
cmpl
mov
aas
push
cmp
je
imul
or
cmp
xchg
call
mov
aas
jnp
cmpsl
icebp
xor
outsb
adc
dec
das
pop
xor
pop
mov
mov
sub
or
sub
sbb
faddl
xchg
icebp
push
mov
data16
mov
inc
ljmp
fisubrs
jecxz
adc
or
addr16
add
movsl
hlt
lods
gs
mov
lods
nop
call
stc
sub
popa
mov
cli
sbb
dec
xorl
inc
add
jmp
mov
adc
add
movsl
inc
xchg
stc
xor
and
shll
andl
dec
insl
arpl
mov
sbb
ret
fwait
nop
bound
or
push
outsl
rcl
mov
or
mov
push
nop
test
xor
adc
leave
mov
mov
sahf
cmp
clc
jp
inc
or
ret
push
ljmp
lea
ss
cmc
sti
pop
jl
in
push
in
mov
sub
pop
adc
dec
jge
sahf
stos
dec
popf
in
mov
pop
sbb
push
movsl
jecxz
pushf
gs
add
adc
dec
add
test
push
ret
sahf
and
test
jo
mov
cmp
fstpt
cmp
adc
jl
cmp
push
dec
lcall
dec
aam
cmp
push
jmp
inc
or
je
in
or
outsl
inc
in
iret
rolb
shrb
rcll
hlt
int3
int
push
ds
xor
in
and
pop
pushf
cwtl
mov
sub
adc
cmp
icebp
dec
xor
inc
sub
int3
jmp
ret
loope
enter
adc
shlb
cmp
int
cmpb
or
iret
lret
lea
orl
call
loope
mov
daa
and
shlb
dec
test
int3
mov
inc
pop
lahf
jne
int3
insl
adc
leave
repnz
xor
arpl
dec
icebp
jno
gs
ds
xchg
test
mov
or
dec
jmp
jo
insb
dec
cwtl
movsl
scas
imul
mov
xchg
fdivrl
aaa
js
push
inc
data16
pop
sub
aas
fs
lea
xchg
xor
loope
cmp
aas
mov
int3
sub
addr16
fsub
scas
push
popf
jo
mov
lret
mov
sbb
sub
pop
sbb
push
mov
pop
sbb
out
fldl
jle
and
daa
pusha
or
xor
in
push
push
sub
mov
jbe
lcall
scas
fildll
sub
dec
mov
in
aas
jecxz
icebp
xor
je
sbb
dec
test
xor
mov
arpl
xor
sbb
xchg
xor
out
insb
imul
loope
mov
push
xlat
cmpsl
mul
push
xor
mov
xchg
stc
mov
mov
test
sbb
sbb
push
lea
pop
mov
jne
daa
cld
aad
sbb
and
xchg
mov
xchg
xchg
inc
mov
outsb
cmp
mov
mov
inc
mov
jbe
movsb
cmpsl
push
mov
stc
fisubrs
mov
int3
mov
push
or
mov
pop
loop
imul
add
add
sbb
incl
adc
mov
adc
xchg
xlat
jb
jno
fsubl
ljmp
pop
mov
mov
je
scas
js
jno
js
in
aaa
lea
lcall
cmp
dec
cmc
pop
sahf
xchg
outsl
xchg
test
les
notb
bnd
push
xchg
pop
mov
ds
andb
cwtl
cmp
adc
pop
je
fidivrs
fwait
push
adc
fnstenv
dec
push
sbb
mov
dec
int3
sti
and
and
cmc
out
js
mov
xor
ljmp
dec
popa
mov
in
and
sub
xchg
fiaddl
push
sbb
mov
mov
lds
xchg
arpl
or
sbb
mov
sub
dec
insl
push
outsl
adc
inc
push
negl
pusha
fldenv
les
ficomps
jg
cli
push
lcall
mov
cwtl
mov
in
xor
repz
xor
sbb
jp
lock
push
clc
lret
push
dec
mov
repnz
testl
push
xchg
dec
mov
or
test
pop
jmp
test
adc
xchg
add
popw
sub
sub
jl
fwait
out
push
cwtl
pop
add
dec
pusha
mov
roll
mov
sti
mov
jmp
xchg
add
or
adc
out
xchg
dec
xchg
mov
sarl
lret
test
push
rolb
das
arpl
sub
stos
jbe
mov
fs
jp
xor
sarb
sahf
xlat
add
sub
addr16
xor
mov
imul
pop
stos
pop
repnz
cmp
jmp
loopne
pusha
mov
cld
mov
rcr
mov
addb
pusha
add
sti
dec
xor
mov
mov
fbld
negb
and
and
jae
push
je
fisubl
xor
mov
bound
mov
imul
mov
adc
pop
ret
or
pop
mov
jbe
enter
lea
das
xor
imul
test
cmp
std
fnsave
xor
add
cmp
adc
inc
xchg
and
fwait
adc
mov
int
inc
scas
and
notb
clc
mov
xchg
pop
sbb
call
jecxz
inc
push
mov
dec
xor
rcr
push
push
jmp
pandn
mov
shlb
dec
add
xchg
fs
ret
jle
xchg
xchg
pop
jae
popf
sarb
cmp
inc
sarb
ret
xchg
out
and
fwait
xchg
and
mov
sub
movsl
pop
push
popa
pop
mov
out
aaa
ficoms
shrb
mov
add
add
sub
cmp
ss
adc
xchg
outsl
sbb
mov
xchg
mov
mov
insb
inc
jbe
iret
movsb
pushw
imul
cltd
mov
idivb
cmp
mov
or
imul
out
outsb
lret
xor
sbb
roll
aam
cmp
jle
aaa
cltd
fidivrs
sbb
cmp
xor
sub
mov
mov
jb
adc
aam
ja
sub
mov
add
outsl
leave
mov
mov
jecxz
mov
push
call
xchg
in
adc
rcrl
sbb
dec
gs
pop
dec
xor
dec
push
les
icebp
add
into
add
cs
sbb
push
fs
mov
rol
dec
sub
mov
xchg
imul
sbb
mov
adc
inc
lock
lods
mov
aad
mov
int3
xchg
out
and
push
or
push
and
lds
push
addr16
enter
xlat
cmp
popf
ret
xor
into
xchg
das
inc
jle
pushf
lea
mov
aas
jle
popa
sarb
frstor
xor
mov
xchg
xchg
pop
sahf
fadd
and
mov
shll
fdiv
insl
scas
sbb
adc
in
sbb
xchg
lock
mov
xchg
movl
jns
fldl
cmp
and
mov
and
gs
inc
insb
insl
adc
pop
lahf
pusha
and
inc
ds
jge
mov
xchg
lahf
dec
add
cs
fnsave
out
lods
or
ja
inc
arpl
stos
add
imul
daa
out
jecxz
cmpsl
dec
sub
rcpps
fmulp
jle
mov
fcmovnu
add
je
pushf
or
nop
inc
sub
ficoml
xlat
push
push
sub
xchg
or
mov
bound
mov
shr
add
cmp
loopne
adc
popa
lock
jne
add
lcall
cmp
jo
lea
inc
add
frstor
dec
mov
sub
out
sarb
ret
or
pushf
std
jmp
ljmp
int
inc
in
adc
cmp
mov
es
popa
mull
cmp
cltd
dec
mov
int3
adc
inc
icebp
mov
adc
adc
xchg
adc
pop
sbb
push
cmp
xchg
sbb
sbb
mov
or
shlb
test
or
push
insb
iret
movsl
imul
push
sbb
push
xchg
pop
and
stc
jg
sbb
add
insl
dec
cltd
in
mov
pusha
jp
test
inc
gs
fwait
into
mov
adc
xchg
loope
or
xor
xchg
pop
fnsave
sbb
popa
push
lods
sahf
add
lcall
aas
dec
test
xor
pusha
push
lret
mov
push
sub
mov
adc
cmpsl
fsts
ficoml
repz
mov
adc
cmp
cmpsl
push
popf
push
dec
inc
dec
imul
pop
bnd
add
mov
icebp
lods
arpl
push
cmc
cmpsb
out
jae
cmp
das
jns
dec
sub
add
fsubl
pop
push
movsb
jb
sbb
shll
in
push
daa
cmp
pop
xchg
pop
les
sbb
sti
cmp
lds
daa
or
push
pop
cltd
mov
imul
pop
fidivl
mov
mov
push
mov
pop
adc
scas
xchg
daa
test
dec
or
adc
sub
jmp
and
mov
cmpsb
mov
sbb
and
ja
push
sbb
sub
shlb
movaps
sbbl
xchg
aaa
push
fwait
nop
mov
dec
fbld
or
in
jecxz
and
scas
bound
adc
lock
fildll
gs
mov
addr16
pop
xor
aas
mov
loop
cmp
pop
mov
and
adc
loopne
rcr
mov
pushf
mov
ret
daa
mov
push
sub
js
sbb
loop
mov
pusha
fsubrs
lods
jo
hlt
or
push
push
enter
leave
pop
les
cwtl
ret
sub
jb
inc
jo
lods
mov
ret
fcomps
movsb
push
dec
movsb
and
push
pop
inc
pop
in
sbb
cmp
ficomps
sbb
inc
push
insl
int3
icebp
popa
mov
int3
xchg
xlat
fcomp
fbld
in
es
fdivrs
mov
inc
rol
sub
mov
divl
adc
clc
loopne
mov
imul
cs
inc
ret
inc
push
push
sub
loope
cmpsl
sub
sub
test
xchg
adc
inc
les
adc
imul
sbb
iret
mov
fidivrl
mov
imul
test
lds
dec
sahf
mov
jb
arpl
inc
lea
dec
cmpsb
or
or
outsl
pop
add
ficoms
bound
add
inc
and
pop
sahf
push
cs
and
mov
les
push
jle
cs
xchg
sbbl
adc
xchg
fwait
mov
lret
add
fstl
xor
mov
in
mov
jle
stos
imul
lods
lcall
pop
push
in
test
shlb
xchg
cmpsl
sub
arpl
out
push
movsl
pusha
lods
idivb
rcrb
pop
ss
add
out
repnz
insb
dec
dec
aam
pshufw
sbb
andl
mov
jg
jne
add
dec
sbb
dec
mov
sbb
xor
xor
out
mov
lods
pop
stos
rclb
jno
stos
or
cmc
inc
xchg
inc
lea
jp
push
mov
in
rcl
mov
inc
push
cmc
es
lds
dec
mov
idiv
and
and
loope
push
xor
mov
filds
xchg
xchg
scas
xchg
out
sbb
es
mov
inc
loope
add
data16
and
call
jmp
push
shlb
jle
push
jbe
sbb
lahf
sti
sub
rolb
outsl
arpl
and
jg
popa
addb
repnz
sub
loop
mov
adcb
repz
cld
into
es
push
int3
xchg
das
dec
les
sub
out
lds
and
push
inc
out
popl
lret
adc
cltd
push
jecxz
test
dec
pop
icebp
stc
and
out
shlb
imull
push
or
loop
mov
sbb
xor
shll
mov
jmp
imul
mov
mov
or
mov
mov
loope
shl
inc
pop
xchg
push
sbb
and
sub
fsub
out
pop
lods
fldl
pop
lds
push
jbe
sub
mov
sub
fadd
addb
sub
adc
lcall
push
xchg
pop
mov
dec
movsb
gs
cmp
je
pop
adc
mov
test
iret
filds
cmp
or
js
pop
int
insb
int
xlat
repnz
sets
jno
pop
or
adc
or
mov
sbb
test
roll
inc
repnz
pushf
aam
jmp
sbb
ret
ret
ss
lea
repz
mov
jae
int3
jle
mov
clc
jge
mov
mov
test
mov
leave
inc
aas
icebp
xlat
cmpsl
clc
fcmovnbe
leave
stos
cmp
lods
mov
sub
or
sub
sub
and
xchg
mov
aad
xor
push
pusha
push
xor
or
xorl
imul
jno
loop
xchg
fdivrp
xor
cltd
xchg
out
fisttpl
xchg
ljmp
sbb
fnstenv
test
bnd
out
xchg
aaa
jne
call
repnz
int3
fcmovne
dec
and
into
daa
fiadds
sbb
mov
in
fwait
rorb
or
jne
scas
inc
mov
pushf
mov
adc
inc
ja
mov
aam
push
fisubs
stc
das
mov
xor
out
cld
call
jnp
rcll
outsb
aad
notl
test
test
mov
xchg
dec
stos
test
test
mov
or
adc
push
fidivrl
adc
pushf
xchg
pop
xor
push
push
and
nop
imul
cld
jne
mov
ja
sub
daa
mov
js
sarb
iret
pop
lock
fucom
cmp
aaa
mov
cli
add
dec
les
stos
fs
clc
ret
fisubl
xchg
test
in
pop
jbe
pop
or
sub
movsl
mov
loope
mov
aas
scas
scas
into
int3
dec
jnp
push
outsb
mov
imul
pushf
push
inc
in
pop
daa
clc
shrb
mov
das
orl
movsl
pop
push
push
pop
loop
jp
fidivs
xchg
fucomi
lock
iret
mov
ffreep
popa
leave
jp
repnz
in
xchg
and
cmpsb
repnz
or
add
mov
xor
push
adc
push
lret
jle
sub
push
mov
repnz
jns
push
inc
cli
mov
int3
int3
jne
loope
pop
sti
dec
dec
xchg
fwait
fwait
dec
ret
imul
push
mov
sbb
inc
adc
test
fbld
in
idiv
sub
daa
fs
mov
dec
outsb
daa
lods
mov
mov
cwtl
mov
dec
mov
ret
pop
pushf
movsb
in
inc
add
sbb
cmp
mov
call
stos
xorb
ds
dec
lret
cltd
cmpl
call
xor
jne
sarb
sbb
xchg
iret
adc
jb
stos
cmp
or
jge
cwtl
push
cmp
mov
repz
inc
or
in
adc
stos
mov
outsl
mov
pop
pushf
inc
cltd
inc
sahf
les
jns
sahf
cwtl
mov
std
aam
push
sub
jns
pushf
lock
mov
shll
xor
jno
sbb
xchg
sbbb
and
pop
orb
mov
lods
mov
cmp
dec
mov
mov
lret
xchg
sbb
iret
aas
mov
xor
add
dec
nop
ror
xchg
and
out
arpl
cmpb
mov
push
popf
pushf
mov
sub
pop
out
jo
cli
pop
test
loope
push
movsb
inc
nop
ljmp
fwait
cmp
xchg
imul
insb
jno
test
test
add
dec
and
mov
xor
inc
mov
pusha
sub
jb
mov
dec
outsl
jae
mov
sbb
testl
clc
lea
out
jae
daa
adc
or
int
insl
test
fadds
adc
leave
imul
icebp
icebp
shrb
ss
insb
pop
push
xor
in
pop
loop
push
addr16
xlat
popf
sbb
js
cltd
dec
or
arpl
rcl
push
cli
je
imul
dec
pop
ja
mov
cmc
mov
sahf
repnz
inc
pop
outsl
popf
adc
lds
adc
lods
lods
int
and
lods
xchg
jl
dec
push
xor
aaa
mov
mov
inc
jp
adc
sbbb
mov
fildl
inc
ret
cmpsl
ss
sub
jbe
sub
sub
fisttpll
sbb
aaa
enter
pop
addb
iret
lock
mov
ljmp
mov
lods
cwtl
inc
in
pop
mov
mov
xchg
sbb
inc
dec
mov
arpl
pusha
adc
pop
jnp
imul
jge
push
mov
rcll
mov
repnz
fisttpl
ljmp
xchg
adc
mov
into
sub
jl
sbb
pop
push
xchg
out
pop
in
sub
xlat
push
stos
jne
mov
movsl
pop
loope
cld
push
fimuls
hlt
addr16
cltd
push
pop
arpl
or
sahf
mov
pop
push
cmp
or
into
sbb
jle
in
and
push
fbld
sub
loop
sub
aaa
pushf
mov
or
cmc
or
outsl
out
arpl
subl
sub
sub
decl
arpl
imul
jle
xchg
pushf
lock
mov
mov
lock
mov
int3
or
movb
mov
pop
daa
sbb
and
repnz
hlt
pop
mov
ficompl
setp
or
cld
xchg
jmp
dec
lahf
mov
pushf
jl
je
xor
sub
adc
call
adc
sarb
inc
lcall
jp
cmpl
mov
push
mov
xchg
push
imul
mov
loop
mov
cmp
push
inc
mov
addl
bnd
jmp
push
faddl
movsb
rcl
sub
xchg
add
inc
int
int3
push
insb
pop
sahf
jl
and
insl
push
push
push
jmp
call
mov
mov
push
cmp
mov
cmp
and
push
cltd
mov
cmpsl
xchg
call
mov
push
xchg
or
sbb
loop
jae
mov
loope
xor
mov
ja
xchg
lret
dec
sbb
or
mov
fs
insb
dec
cmpsl
iret
in
inc
and
dec
add
pop
push
leave
stos
scas
clc
insl
xchg
inc
dec
fwait
xchg
call
flds
jmp
cmovne
or
jb
enter
decl
aas
aas
xchg
push
std
negl
pop
inc
movsl
jbe
hlt
jbe
int
jmp
into
or
ficomps
xchg
in
mov
outsl
popf
int
mov
mov
lahf
add
dec
pop
das
mov
pop
add
in
bound
xor
aad
mov
add
in
and
dec
sub
sbb
loop
or
push
mov
dec
ret
icebp
stc
jmp
mov
ret
loopne
xor
adc
pop
and
jmp
fwait
sbb
sub
mov
fnstcw
xor
andl
or
rorb
push
mov
loopne
xchg
shlb
sub
btr
adc
inc
icebp
push
test
jp
and
pop
ss
mov
and
lea
fs
push
loopne
rdtsc
test
cs
dec
jl
jmp
jae
mov
xchg
fstpl
filds
faddl
nop
dec
je
xchg
inc
loope
xchg
and
xchg
out
adc
jb
fdivrl
add
lods
std
lods
pop
inc
pop
aam
inc
mov
and
test
add
push
imul
inc
push
incl
cld
cmc
pop
mov
ret
ss
pop
nop
rcrb
ret
test
cmp
sbb
cmp
jbe
in
lret
int3
loope
push
in
jno
mov
in
in
fmull
outsl
sub
mov
cltd
ds
sub
mov
cmpsl
shlw
es
jne
jne
mov
mov
and
sub
sub
dec
loop
adc
sbb
or
inc
and
inc
dec
mov
mov
pop
cmp
cs
fs
stc
ret
adc
int
mov
inc
inc
and
jecxz
test
and
push
das
mov
cmp
mov
jb
xlat
xlat
in
fldt
push
into
push
mov
pop
out
sub
dec
jle
cmp
jecxz
movsl
outsb
sbb
in
faddp
popl
cmpsl
cwtl
shl
scas
inc
movsb
in
mov
or
xor
mov
mov
lret
popf
inc
mov
shl
mov
cmp
jno
negl
std
and
adcl
add
scas
stos
inc
lret
or
imul
xor
cmpsl
xchg
jae
inc
push
or
xor
fstps
cld
std
test
inc
imul
inc
aas
mov
fwait
outsb
push
fimull
sub
sti
dec
movsl
out
imul
jnp
mov
sub
mov
jge
fisttps
sub
pop
fimuls
mov
outsb
mov
das
daa
pop
btr
jmp
jno
repnz
imul
cmp
xor
or
arpl
ja
aaa
lret
roll
icebp
fisubl
test
jecxz
fnstsw
subl
rol
mov
data16
jmp
test
pop
iret
into
mov
push
shll
mov
rorb
enter
lods
insl
js
dec
call
test
push
jle
mov
pop
mov
enter
divb
aaa
in
pop
addb
int
pop
out
mov
jb
push
bound
xchg
popa
outsl
jle
int
xchg
adc
les
leave
cmpsb
pop
ds
xchg
pop
or
jmp
jge
mov
mov
ja
mov
loop
or
test
push
and
dec
fidivrs
jbe
stos
inc
mov
sub
mov
ret
sub
xchg
dec
in
ret
dec
cmpsl
pop
jle
rcl
test
adc
mov
cwtl
out
jbe
push
jmp
icebp
outsl
pop
add
cmp
sbb
push
in
jno
xchg
adc
mov
add
mov
test
xor
scas
sbb
dec
in
inc
push
inc
arpl
add
mov
je
cmp
ficompl
cmc
scas
iret
adc
mov
inc
nop
popf
movsb
insl
lea
into
push
mov
out
movsl
adc
sbb
cmc
push
inc
jg
fisubs
xchg
push
xchg
dec
icebp
or
pop
stos
xor
gs
data16
int3
push
daa
fists
hlt
test
and
or
sub
jo
stos
cld
xor
js
fwait
and
sbb
das
fs
cvtps2pi
loopne
mov
mov
sbb
jb
dec
inc
mov
lcall
jge
in
scas
dec
mov
or
mov
call
or
ficoms
aaa
jg
pop
cmp
xchg
loopne
jb
cmpsl
push
cmp
adc
rorl
cwtl
xchg
cld
hlt
add
into
fdivrp
jp
stos
add
inc
mov
adc
clc
outsb
fbld
inc
add
mov
scas
mov
sbb
xor
stc
xchg
scas
jbe
lods
test
push
sbb
popf
mov
xor
jo
pop
addl
leave
and
xchg
fimull
add
mov
lods
mov
push
dec
sar
lret
mov
aam
out
in
sub
inc
add
mov
jge
push
les
out
jmp
clc
mov
clc
adc
sbbl
cwtl
jmp
loopne
mov
stc
xor
xlat
out
mov
wrmsr
hlt
mov
ds
in
adc
enter
sub
pop
sub
scas
fnstcw
sbb
iret
icebp
fmuls
pop
lock
add
test
push
xor
mov
push
inc
cld
repnz
sbb
fs
jmp
subl
fwait
mov
js
lds
ror
inc
insb
clc
or
divb
ds
sahf
pop
lods
ljmp
fbld
pushl
xchg
ljmp
adc
cli
mov
mov
outsl
bswap
rcll
lock
adc
mov
jmp
sbb
jno
inc
jno
stos
ss
outsb
xor
stc
clc
cmp
jns
insb
jge
dec
imul
sbb
scas
jle
shrb
popa
add
pusha
fimuls
push
cmpsl
mov
fidivl
jg
sti
dec
adc
lahf
xlat
repnz
adc
mov
mov
jns
movsl
call
int
and
adc
int
shl
scas
subl
int3
nop
xchg
push
lahf
push
push
adc
mov
out
inc
mov
orb
sbbl
fldcw
push
lcall
sub
mov
loopne
mov
ret
jb
pop
sbb
lcall
jmp
mov
iret
xchg
jns
sbb
fs
fcompl
ljmp
scas
mov
mov
xor
loope
sbb
test
fsubr
imul
and
lret
imul
add
cmp
jle
lods
pop
jg
gs
cld
jno
ja
je
pop
mov
xor
add
push
addr16
mov
aad
push
mov
cmp
xchg
testb
xor
clc
scas
add
cwtl
testl
ficoms
sub
mov
pop
xor
push
ret
mov
or
test
jge
xor
out
mov
out
cwtl
popa
jns
cmp
mov
test
mov
aad
mov
hlt
mov
cltd
inc
iret
out
ret
shl
mov
aad
mov
dec
cld
pop
cwtl
or
sbb
addl
cwtl
sub
xchg
xor
xchg
stc
dec
iret
sti
pop
popa
mov
aas
test
std
insl
pop
dec
jns
push
fwait
outsl
lods
push
rorl
test
loop
pop
cmp
and
push
int
ljmp
push
subl
andb
jne
jecxz
daa
popf
sahf
push
push
xchg
mov
push
push
mov
in
adc
cmpsb
rcrb
mov
lret
int3
xor
cmp
sub
icebp
mov
push
mov
or
adc
fildl
cmp
cld
cmp
sti
push
sbb
shlb
pop
and
cmp
in
test
pop
xchg
jne
jb
inc
mov
loope
pop
mov
arpl
test
cmp
stc
test
cmp
in
sub
lret
lock
call
mov
out
mov
lds
sub
adc
fistpll
push
js
lret
scas
loope
shr
inc
cmpsl
out
data16
push
xchg
icebp
lea
test
push
sub
icebp
lock
pop
xchg
or
sti
mov
mov
mov
jge
ficoms
fsub
or
sbb
fcoml
jbe
rcrb
loope
adc
sub
sahf
mov
adc
mov
sbb
js
sbb
xor
aad
shrb
pop
pop
movsl
jmp
outsl
iret
sbb
pop
outsl
sbb
ret
leave
jo
or
xor
lret
test
cmp
or
adc
mov
popf
rcrl
sbb
push
loop
mov
add
or
test
test
jns
loopne
pop
mov
into
cmp
add
pusha
add
xchg
pop
inc
hlt
xchg
mov
sti
dec
sub
push
push
cmpsl
jcxz
ret
mov
call
and
xor
adc
setg
pushw
xlat
aam
xor
jo
cs
or
dec
mov
xor
mov
dec
and
into
sub
inc
lock
push
jbe
xor
add
in
pusha
mov
sahf
stc
aam
sbb
ror
ja
cmp
sbb
push
fcmove
ss
sub
mov
aam
push
xor
lock
ja
loopne
imul
mov
push
cwtl
sbb
xor
pop
mov
mov
push
aam
mov
fistpll
adc
lahf
test
loopne
pop
mov
and
ss
inc
xchg
roll
fistpl
cltd
ss
es
add
mov
and
inc
mov
mov
xor
fdiv
nop
and
jp
enter
rcr
clc
outsb
jl
jg
mov
popf
push
add
jae
stos
dec
cltd
adc
adcl
lahf
mov
push
adc
push
lret
or
mov
mov
pop
ljmp
cmp
ror
fs
mov
nop
ss
in
inc
cmp
lock
fistps
pushf
cmc
out
ss
mov
push
jg
out
decb
push
dec
mov
fbld
gs
inc
cmp
loopne
call
iret
mov
gs
mov
adc
in
dec
mov
dec
cmp
scas
aam
imul
xor
in
call
ss
movsb
bound
adc
sahf
xchg
or
mov
in
jl
ret
imul
shrb
fildll
popf
mov
push
data16
cmpsb
and
inc
cmp
mov
xor
push
test
dec
pop
adc
cmp
add
xchg
stos
mov
fld
dec
jo
fsub
popf
movsb
movsb
lock
lods
scas
or
ja
lock
jmp
adc
shll
mov
pop
into
cmc
push
cmc
outsb
dec
xchg
setge
sub
std
inc
jp
jnp
daa
mov
gs
or
popa
jo
xor
xchg
sbb
std
das
loope
stc
leave
mov
imul
xor
inc
push
clc
aas
addr16
pop
push
pop
sub
and
mov
fmuls
inc
icebp
mov
sarl
stos
mov
cs
xchg
add
mov
push
jle
lods
jecxz
xchg
jmp
xchg
sti
aam
jl
sub
sahf
add
rcr
pop
hlt
test
push
out
add
push
rcrl
repz
jmp
aaa
sbb
shll
imul
add
and
add
les
fcompl
xchg
fdivrp
jmp
xchg
mov
xor
insl
sbb
adc
cld
es
adc
cmpsl
stos
push
std
jecxz
into
pusha
test
mov
orl
add
cld
adc
mov
pop
dec
icebp
out
cld
inc
sub
and
inc
mov
xchg
or
sbb
incl
sbb
bswap
or
in
mov
das
jae
aam
lds
sbb
insl
andb
stos
or
jp
imul
mov
rcrb
loopne
dec
addr16
jmp
mov
pop
sti
cmp
mov
jg
outsl
jns
ret
xchg
jmp
pop
push
and
mov
insl
push
das
scas
fdivrs
push
pop
jb
sbb
cmp
lcall
dec
lods
sub
jle
call
jae
xchg
pop
insl
int
bound
addl
xchg
repz
out
imul
js
out
mov
push
inc
mov
ss
insl
adc
cld
scas
cmpsb
daa
sub
movsl
sub
mov
dec
jp
movsb
ljmp
lea
xchg
lods
or
jp
jmp
mov
movsl
jmp
push
xchg
push
sub
jmp
dec
lods
sahf
notl
popf
lea
cmpsb
imul
imul
icebp
imul
aam
mov
cmc
sbb
dec
out
nop
rol
fnstsw
shl
ret
pop
bound
cmp
add
adc
incb
mull
cmp
inc
int3
mov
je
aam
dec
push
out
ffree
mov
push
stos
inc
fdivs
or
add
adc
mov
mov
sbb
shrl
jbe
pusha
lret
cs
add
cmpsl
aam
mov
addr16
sbb
imul
or
fadds
mov
xchg
mov
jbe
lods
insl
adc
nop
fstpt
daa
fs
push
mov
xchg
jle
outsl
cmp
push
pop
std
bound
or
pop
das
mov
push
xchg
xchg
adc
ja
int3
mov
cmp
push
pop
and
jl
rorb
xor
lret
lret
dec
pop
sbb
or
ret
lret
mov
lds
dec
adcl
stc
xchg
icebp
dec
push
cmp
xchg
sahf
mov
lods
push
orb
movsb
jg
popa
jg
aad
sub
inc
daa
push
xor
mov
test
fldt
sbb
testl
mov
dec
mov
cmpsb
pusha
push
aas
adc
cmc
push
fwait
pop
dec
iret
pop
cmp
loopne
mov
dec
dec
iret
pop
add
sarb
lock
aas
add
pushf
mov
mov
mov
mov
test
roll
xor
aam
fldt
hlt
or
xchg
roll
orb
cld
lds
mov
cmp
cmp
and
into
test
sub
call
jne
aaa
or
xchg
jecxz
sbb
jmp
jb
loope
fs
js
adc
stos
daa
js
fistpll
or
cs
stos
int
idivb
lods
out
rol
xchg
sahf
jecxz
mov
pop
sub
fcompl
xchg
fadd
ja
jne
std
int
in
ficoms
mov
cmpsb
fdiv
lock
syscall
cmpsl
push
sub
cmp
iret
xchg
xchg
add
pop
jecxz
sarb
xlat
pop
lods
push
xor
les
dec
stos
jnp
dec
pop
arpl
sub
push
lds
xchg
repz
in
stc
or
inc
call
sub
mov
mov
mov
int3
stos
xchg
movsl
add
int3
ljmp
mov
xchg
sbb
sbb
mov
sbb
insb
fcmovnu
out
shlb
fildll
sub
ficoml
cmc
rcrb
ss
xor
int3
frstor
pop
nop
shll
xor
dec
gs
mov
ds
icebp
inc
scas
xchg
loop
pop
jmp
sub
mov
xchg
ljmp
aaa
sbb
iret
push
fwait
push
xor
sbb
icebp
stos
jne
add
mov
and
cmpsl
push
loop
sub
dec
in
scas
inc
inc
ficoml
xchg
cli
push
lret
inc
lret
mov
jecxz
push
xor
popa
mov
sarb
jl
lods
movsb
sbb
test
mov
dec
sub
in
adc
sub
push
int
sbb
xor
lds
xchg
lret
ds
push
imul
outsb
icebp
jne
pop
mov
ret
fisubl
decb
inc
test
jo
int3
into
mov
pop
loopne
xor
push
les
flds
sbbb
scas
sbb
int
or
aam
mov
xchg
mov
sbb
inc
test
adc
jnp
daa
enter
aaa
xchg
mov
loope
ljmp
sti
mov
pop
inc
dec
or
ja
fisubl
adc
rcrl
gs
lahf
out
std
data16
or
sub
add
or
cwtl
lods
lahf
imul
inc
pop
add
ret
movsl
sbbl
xor
lods
fidivs
and
stos
or
outsb
inc
add
dec
cmpsb
sbb
add
lret
out
mov
ret
pop
jmp
std
cwtl
les
fcmovb
scas
push
or
sub
push
stos
lock
cmp
jmp
cmpsb
push
mov
aam
or
push
adc
popl
mov
nop
cmp
gs
xchg
pop
add
or
cmc
xchg
lock
push
mov
mov
jbe
ja
aad
jl
data16
dec
ss
or
jl
lret
and
sub
imul
mov
sarl
push
jo
cmp
xor
sub
lds
jge
push
lret
imul
stos
sarb
pop
call
dec
mov
ss
push
push
test
jmp
addr16
inc
dec
push
imul
ret
ds
adc
into
push
push
sbb
inc
scas
ror
cltd
fbld
dec
incb
xorb
ds
repz
adc
jecxz
xchg
lock
add
sarb
push
mov
out
test
fistps
int
mov
xchg
loopne
and
fsubrp
sti
jecxz
frstor
add
cmp
xchg
ret
ljmp
fsubl
dec
repz
xor
in
pusha
jle
ret
mov
cmp
pushf
ds
stos
jnp
inc
inc
add
push
shll
ficomps
jo
mov
das
add
arpl
inc
push
mov
shl
adc
pop
xchg
ret
jle
les
mov
lock
inc
test
push
xchg
shll
testb
aad
jno
sbb
xor
inc
js
int3
sbb
hlt
loop
mov
pandn
lea
inc
or
loop
and
mov
push
adc
push
outsl
xorb
sub
in
pop
sbb
divl
dec
cli
sbb
mov
mov
mov
sbb
mov
int3
call
pop
in
in
or
mov
int
sbb
push
test
jmp
insb
jmp
fs
push
mov
push
leave
mov
pop
lcall
rsm
mov
jae
and
cmp
outsl
mov
mov
adc
mov
mov
fwait
enter
add
or
fsubs
sahf
in
cmp
loope
out
or
pop
push
in
mov
es
shll
jae
sbb
bound
inc
es
cs
jge
fcmovnbe
dec
insl
pop
rcrl
mov
loope
jno
or
xor
sbb
sti
popa
mov
xor
mov
mov
into
mov
cmpl
jo
shrb
xor
scas
mov
inc
adc
cmp
iret
popa
and
add
fdivs
fisubs
addl
lods
push
dec
lods
xor
mov
sahf
test
fisubs
dec
insb
jmp
xor
or
cli
mov
sahf
adc
inc
loop
mov
pop
mov
cmpsl
and
mov
push
push
aas
andb
xchg
xchg
sub
andb
test
fistpll
into
shrb
sbb
nop
stos
adc
rolb
adc
mov
pusha
pushf
addr16
fwait
adc
push
inc
inc
shll
daa
aam
cmp
push
xor
cltd
cli
adc
sub
add
aam
push
out
mov
dec
jp
dec
lods
sbb
inc
rcr
inc
in
bound
push
int
xlat
inc
shl
cld
orb
aaa
pop
iret
adc
aaa
jne
adc
add
je
dec
dec
xchg
pushf
sbb
outsb
xchg
mov
je
subps
sbb
push
push
or
lods
dec
lock
clc
add
mov
mov
cwtl
pusha
xchg
push
scas
in
push
lods
hlt
ficompl
leave
hlt
pusha
fs
aaa
adc
outsl
or
lods
mov
movsb
mov
or
fildll
pusha
sub
je
pop
jge
inc
mov
jle
stos
je
mov
icebp
pop
in
idivb
rorl
in
dec
xor
adc
bound
or
fdivp
fsubs
fcoms
icebp
in
pop
xchg
mov
sahf
jle
cmp
cmp
mov
sbb
xchg
mov
cmpb
push
das
jb
sbbl
xor
das
lcall
xor
xor
push
dec
mov
lea
test
push
push
dec
push
das
sub
js
push
in
rol
mov
xor
xor
stos
inc
adc
pop
xchg
adc
dec
lock
xchg
inc
out
mov
dec
aas
dec
cld
addr16
and
cld
aad
jo
sbb
mov
in
mov
pop
divl
fistpll
push
dec
ret
in
call
jae
jb
mov
pop
daa
jge
in
add
mov
int3
mov
out
int3
mov
lcall
sbb
or
cltd
mov
clc
lcall
call
aas
outsb
mov
shlb
insb
aaa
pop
in
in
addr16
pop
and
es
inc
cltd
sbb
push
iret
dec
mov
mov
fdivp
add
pop
es
push
inc
jnp
push
and
das
lock
pop
xor
mov
mov
dec
pop
out
out
adc
lock
adc
add
ja
ret
in
fwait
push
insb
loopne
push
add
mov
mov
lret
ja
setge
test
jmp
fwait
mov
ss
cld
aaa
or
stos
xor
mov
stos
mov
mov
inc
stos
scas
sbb
test
pop
repnz
roll
xor
adc
xor
mov
mov
dec
cmp
sub
icebp
into
pop
es
and
or
pop
daa
pop
stos
push
jg
popf
mov
mov
movsb
mov
jno
out
pop
test
inc
scas
adc
iret
add
jmp
mov
cmp
lock
out
push
jp
outsb
je
and
jmp
sbb
mov
sub
pop
dec
ret
movsl
into
mov
addr16
icebp
dec
fisubrl
pop
scas
xor
enter
or
xlat
mov
movsl
dec
mov
or
iret
mov
cmp
xlat
xchg
mov
stc
clc
imul
leave
sbb
xlat
mov
loope
mov
and
xchg
jns
cmpsb
dec
repz
mov
xchg
sub
fisttpll
add
movsb
inc
adc
adc
call
sub
xchg
or
pop
pop
fcomps
bound
enter
repnz
push
aam
in
mov
xor
mov
shlb
daa
pop
or
dec
jecxz
jb
xor
int3
add
out
lret
dec
cmpsb
ds
stos
sub
mov
in
add
loopne
lods
pusha
jecxz
xchg
dec
inc
dec
in
mov
xor
lahf
out
pop
out
sbb
add
and
es
pusha
add
addb
jnp
sub
push
mov
push
xor
adc
js
sarl
sbbl
loope
jbe
test
inc
call
or
imul
dec
aas
iret
rorb
sub
push
fsubl
sbbb
sti
cmp
testb
xor
adc
push
pop
mov
xorb
cmpsl
sbb
mov
mov
add
addr16
stc
mov
int3
outsb
cmp
mov
pop
movsb
mov
mov
cs
mov
push
xsha1
mov
sbb
push
mov
into
jl
imul
push
ljmp
imul
mov
push
inc
cmc
dec
insl
mov
push
sarl
mov
scas
push
xor
rcl
test
dec
and
dec
sub
sub
outsb
jmp
push
es
lods
sub
aas
imul
gs
call
jg
jl
test
jb
stos
fwait
sbb
or
cli
mov
test
sbbl
jne
movsb
sub
mov
insb
mov
xchg
insl
popf
ficoml
xchg
cmp
repz
push
testb
test
dec
decb
mov
adc
and
aas
call
insl
lcall
insb
out
out
push
dec
push
les
addr16
cmpsl
stc
xor
aaa
scas
mov
in
fs
clc
mov
pop
sahf
mov
push
movsl
imulb
test
rolb
movsl
testb
fidivs
jge
mov
push
ficoml
cmp
push
cwtl
cmc
mov
inc
mov
mov
dec
ss
jge
icebp
mov
test
outsl
lret
xchg
xchg
mov
pop
inc
lods
dec
fbld
enter
into
test
pusha
cmp
cltd
fadds
in
adcl
fidivrl
pop
xchg
and
addr16
push
out
inc
xchg
add
lods
dec
or
push
imul
scas
imulb
fxch
xchg
xor
outsl
cmpl
shll
or
sub
cwtl
adc
cmpsl
addr16
adc
xchg
inc
jne
xor
xchg
enter
stos
sarl
and
sub
dec
aaa
jne
addl
imul
mov
pushf
out
pop
xor
mov
mov
or
mov
popl
or
cld
lret
addb
cmovb
shrl
mov
pop
dec
icebp
es
cmp
cld
jecxz
mov
xor
shrl
xchg
pop
xchg
jge
mov
jmp
xor
pop
cmp
lret
testl
sbb
int3
test
lahf
xchg
xchg
dec
outsb
sti
jp
std
xor
xor
cmp
push
mov
ds
xor
mov
mov
subb
add
mov
cmpsb
and
arpl
dec
rcr
bound
pop
jl
jg
aas
xchg
mov
in
or
in
movsl
mov
mov
mov
xchg
cmp
xchg
in
jg
cmp
cmp
je
shrb
xor
in
sahf
sbb
leave
sub
iret
jecxz
mov
subb
out
pop
negl
lretw
add
push
xchg
xor
jg
jp
sbb
lret
sbb
in
aaa
mov
xchg
adc
imul
leave
gs
adc
mov
leave
movsb
dec
adc
push
ret
pop
xor
sub
add
mov
jb
adc
ja
dec
sbb
xor
xchg
test
shl
pushf
dec
in
jne
push
dec
fwait
and
data16
mov
xchg
inc
insl
je
rclb
dec
jle
fistpll
jl
in
adc
popa
mov
int
imul
fnstcw
loop
daa
and
lds
ja
lds
add
pop
push
dec
cmp
dec
inc
jbe
pop
xlat
mov
mov
dec
inc
popa
test
sti
aad
out
mov
jne
arpl
cmpsb
stos
push
call
sub
pop
mov
aaa
cltd
out
nop
cmp
cwtl
or
test
popf
xchg
adc
adc
sub
mov
movsl
add
int3
cmp
fdiv
jle
mov
pop
ficoms
pop
icebp
add
pop
subb
push
not
dec
add
inc
fs
cmp
add
inc
pop
add
jae
setg
mov
xchg
out
cltd
pop
cld
inc
adc
sbb
orb
dec
arpl
add
loopne
mov
pop
stos
dec
jmp
lahf
imul
dec
pop
mov
pop
aam
xchg
xchg
ss
sub
cmp
cmpsl
push
stos
jmp
pop
mov
lret
mov
fldenv
movl
xchg
jle
test
sbb
gs
es
xchg
and
mov
leave
in
or
xor
sahf
and
xchg
mov
mov
loope
dec
sti
pop
hlt
cmpsl
xchg
push
cld
clc
movsl
inc
lcall
cmp
das
dec
sub
stos
in
or
xor
xor
leave
cmp
incl
sub
xchg
addr16
and
insb
dec
shlb
repnz
dec
bound
das
in
inc
test
xor
xchg
imul
imul
jo
cs
pmuludq
sub
mov
lock
aad
roll
and
pop
adc
lahf
out
pop
aam
or
pop
outsl
sbb
mov
mov
dec
out
fbstp
sbb
dec
push
push
clc
movsl
loopne
mov
pushf
push
fildll
lock
dec
mov
pop
push
sbb
scas
and
les
sbb
adc
int3
sbb
dec
fs
fstl
jnp
inc
push
cmp
cld
imul
popa
pop
xchg
or
lods
mov
push
cmp
sub
cmp
inc
das
or
push
pop
push
inc
ja
lds
imul
push
bound
cmp
inc
mov
rcll
sbb
imul
sub
inc
and
pop
mov
addl
xchg
pop
aas
test
jmp
js
mov
rcrl
fwait
inc
cmp
icebp
xchg
lahf
fcomi
cld
or
xor
xor
dec
les
scas
xchg
add
aam
and
sbb
push
fwait
push
adc
push
das
jp
xchg
xchg
dec
pop
mov
jbe
pop
scas
loope,pn
je
into
mov
cmp
mov
pop
cs
fldenv
pop
xlat
push
adcl
arpl
hlt
lcall
repz
cli
dec
mov
rclb
mov
inc
xor
outsl
fsubl
sub
push
lret
dec
push
aam
aaa
inc
pusha
faddl
mov
and
xor
xor
int3
scas
and
in
in
push
or
sub
daa
std
leave
test
lret
std
ja
cmp
inc
sub
cli
inc
fwait
inc
xchg
dec
inc
sbb
out
xchg
xchg
fstl
pop
sub
cs
in
outsb
cmpsb
mov
shrl
sbb
sbb
sbb
push
push
jns
xchg
xchg
xchg
in
repz
lea
in
mov
imul
or
mov
aam
loopne
push
arpl
dec
mov
and
lea
aad
mov
fstps
pop
or
lods
xor
push
movsl
pop
cwtl
je
or
mov
cmp
icebp
mov
mov
cmc
sub
fidivrs
push
xor
sub
dec
lea
test
subl
push
cmp
ss
jns
rorl
xchg
sub
mov
pop
in
pop
inc
pop
push
sbbb
inc
aas
mov
cltd
cmpsb
mov
pusha
rcll
cmpsb
mov
mov
aam
das
xchg
cwtl
xor
bound
inc
int3
mov
rcr
repz
dec
hlt
and
je
outsb
outsb
inc
push
arpl
rorl
xchg
lret
test
mov
int
in
mov
mov
test
insl
enter
push
out
ret
das
lret
repnz
nop
punpckhwd
outsb
adc
mov
test
push
fldcw
clc
cs
and
cld
sbb
cmpsl
gs
and
sub
xchg
stos
sub
outsb
out
call
in
fiadds
add
jle
mov
das
sbb
inc
imul
shll
in
enter
je
int3
pushf
sahf
fisttpl
sbb
add
in
add
addb
mov
imul
or
std
cmp
or
mov
icebp
jae
sbb
cmp
fsubs
lahf
sbb
add
pop
xor
aam
push
or
dec
inc
lcall
imul
jp
out
and
fdivrl
inc
or
jb
iret
lret
xchg
fadds
sbb
out
add
jmp
mov
es
divl
jo
xor
adc
not
mov
out
xchg
lret
push
mov
lret
mov
mov
mul
push
mov
or
jmp
dec
arpl
and
scas
jne
dec
rcrl
xchg
pop
cmpsl
pop
push
xlat
inc
push
mov
cs
jmp
jg
mov
mov
movsl
ret
push
mov
sbb
dec
dec
pop
sbb
pop
int3
das
test
js
dec
add
mov
or
ds
inc
stos
mov
xor
xchg
dec
or
jnp
sahf
clc
and
mov
pop
insl
test
aas
xchg
or
jno
push
mov
mov
inc
jecxz
leave
mov
xor
and
bound
fcomp
sub
stos
jns
sbb
mov
scas
rcrl
ja
xchg
shll
ja
jnp
push
sub
call
mov
pop
sahf
popa
push
shll
mov
in
nop
adc
shl
add
add
mov
insb
ret
inc
fistpll
xlat
jbe
sub
push
ds
dec
idivl
mov
aas
in
call
jmp
xchg
add
pop
in
xor
fildll
lds
push
adc
and
in
popf
cmp
mov
and
sub
stc
jne
or
cmpl
shlb
inc
mov
xlat
sbb
and
jl
cmpsl
pushf
test
inc
repnz
scas
push
lahf
fidivs
incb
xchg
repnz
fcoms
fsts
dec
inc
mov
mov
dec
dec
push
loope
xor
sbb
cmp
sbb
into
mov
and
push
dec
aaa
mov
sti
xchg
push
outsl
fsubrs
or
mov
mov
inc
xchg
lods
adc
in
push
or
out
add
sahf
ds
adc
iret
xlat
loopne
push
or
and
push
outsb
push
jge
aam
xor
or
cld
je
mov
adcl
pushf
cs
sbb
outsb
jne
mov
in
mov
in
xchg
dec
out
les
out
test
pop
sbb
cmpsl
fs
jmp
xor
stos
push
pop
mov
inc
pop
pop
loopne
outsb
mov
iret
jb
pusha
sbb
out
leave
and
mov
frstor
pop
cmp
and
push
iret
add
inc
pop
sbb
pop
fldcw
sti
dec
shrl
sbb
shrl
loope
ret
cmp
jns
enter
inc
test
repz
adc
jne
in
imul
pop
xchg
pusha
sub
test
mov
dec
dec
mov
mov
jns
test
jo
jmp
icebp
add
add
push
std
mov
add
xor
mov
and
sub
push
dec
xchg
decb
pop
dec
int
or
hlt
add
lahf
and
fimull
xchg
jne
mov
cwtl
mov
andl
adc
xor
pop
jb
pop
inc
clc
add
dec
adc
mov
lds
aas
in
incl
aad
addb
inc
fcomps
das
andb
clc
out
fldpi
mov
sarb
mov
daa
or
sbb
adc
aaa
sarl
adc
jle
cmp
mov
pushf
jecxz
fwait
push
or
xor
xchg
std
mov
sarb
cmp
jl
add
inc
cmp
ljmp
fists
fs
cmpsb
repz
stc
jmp
push
cmp
jns
inc
ret
cmpsb
lcall
test
incl
push
mov
cmp
data16
mov
daa
cmpsb
xchg
sbb
jb
jb
pusha
and
sub
dec
xchg
xchg
imul
dec
add
add
movsb
xchg
dec
sarl
roll
add
sbb
fs
and
push
xchg
push
jno
cmpsl
int3
inc
push
or
xchg
pop
xchg
xor
add
inc
insb
jecxz
or
lahf
xchg
xor
ss
flds
push
sbb
pop
cmp
sbb
mov
inc
xor
xchg
push
call
out
jnp
mov
xchg
xor
in
sub
data16
inc
aaa
pushf
fisttpll
popa
lret
inc
orb
jnp
dec
push
mov
test
cli
mov
insb
dec
lods
adc
int3
xchg
mov
xchg
sub
cmp
pop
jo
mov
pop
xor
sub
lods
adc
mov
push
addr16
mov
mov
in
xor
pop
mov
ja
or
fsts
jb
mov
inc
push
jmp
or
outsb
push
xchg
fprem
shlb
pop
pop
or
loope
xchg
push
xor
movsb
add
aas
mov
push
add
out
scas
jnp
xchg
es
pop
pop
mov
xchg
mov
ret
pop
xor
aam
test
mov
notl
xchg
adc
inc
sahf
cld
push
sti
mov
mov
xor
or
out
cltd
jmp
cmp
push
add
and
addr16
push
mov
pop
in
mov
out
mov
dec
insl
jp
inc
or
pop
dec
pop
aaa
mov
xchg
jecxz
cmp
dec
xchg
mov
scas
in
jmp
es
jns
dec
scas
xchg
pop
xchg
cmp
mov
jb
cmp
out
jbe
into
inc
xchg
mov
scas
popl
ljmp
dec
in
xchg
sub
inc
loope
mov
xor
rol
in
add
mov
movsl
into
xor
mov
mov
loopne
pop
loope
cld
push
sahf
ret
in
jp
and
popf
test
mov
or
jmp
fstps
js
sbb
add
rclb
dec
pop
sub
movb
jne
cwtl
or
out
nop
gs
dec
jnp
je
adc
push
mov
mov
dec
mov
xor
cmpl
sahf
jo
dec
scas
cmp
dec
jle
jno
fdivl
enter
shl
arpl
jnp
scas
pop
dec
pop
hlt
jnp
inc
pop
imul
inc
ss
inc
dec
push
mov
mov
stos
iret
insl
insl
out
jge
push
mov
jnp
cmc
xchg
mov
outsl
mov
mov
into
cwtl
cld
mov
push
inc
adc
fcoml
dec
orb
pushf
scas
ret
test
aaa
scas
repnz
or
xchg
ficomps
add
push
rclb
pop
aad
rcrl
fsts
das
aad
mov
stos
mov
push
lea
jnp,pn
mov
cs
inc
fnsave
add
inc
fcom
mov
mov
loop
dec
adc
test
adc
pop
mov
sub
int3
cwtl
inc
into
inc
or
jo
push
mov
outsb
dec
cld
pop
push
jge
and
lock
lods
mov
repnz
mov
mov
sub
jb
xor
ret
bound
sbb
mov
pop
out
add
pop
je
test
inc
pop
movsb
and
clc
loopne
sbb
cmp
or
inc
mov
jne
push
adc
ljmp
cs
mull
out
into
lods
mov
mov
out
ja
jbe
and
in
ret
xor
pop
push
outsl
sub
and
xor
mov
insl
pop
in
js
in
pop
popl
fdivrp
dec
negb
mov
bound
dec
stos
dec
out
enter
lcall
cmp
cmpl
inc
xchg
inc
jnp
xchg
adc
inc
rorb
inc
mov
aam
jmp
or
adc
xchg
add
call
add
lods
push
xor
and
xchg
mov
mov
fistl
pop
mov
scas
jge
pop
nop
lcall
xor
push
inc
pop
push
or
xchg
test
fdivrl
add
ja
pushf
xchg
and
jle
imul
add
cmp
cmp
push
sti
lods
fs
subl
stos
inc
out
inc
leave
push
aaa
xor
pop
dec
popa
lods
or
call
int
sub
mov
and
xchg
mov
or
inc
call
or
std
fsubrl
ss
dec
lods
xor
stos
cmp
sti
test
mov
int3
mov
les
enter
inc
das
sub
mov
dec
sub
insl
sub
idivl
xorb
jne
in
mov
xor
adc
lea
mov
loop
add
and
jne
pushf
stc
push
xchg
cmp
sub
xchg
and
lret
add
js
clc
clc
jmp
and
fsubs
icebp
push
add
sahf
and
cmpsb
movsb
hlt
into
inc
add
cmpsb
sahf
lds
push
jnp
mov
push
and
xchg
mov
jb
xchg
repnz
jg
xor
dec
fdivs
inc
add
ror
shll
add
push
mov
sar
xlat
std
and
add
ret
pop
mov
movsb
iret
outsb
lds
push
rcll
mov
mov
xor
movsb
jae
pushf
movsl
int3
sub
xor
add
stos
pop
or
dec
mov
adc
fnsave
cmp
mov
mov
mov
out
jecxz
mov
imul
push
mov
mov
cmc
sbb
jmp
pop
add
inc
cltd
jecxz
cmp
sub
lret
dec
mov
insl
fidivs
inc
andw
mov
scas
idivb
push
repz
or
push
add
and
sub
sbb
call
pop
call
cmpsb
dec
jno
lahf
sbb
xchg
rolb
in
push
mov
dec
cmpsl
mov
xor
daa
in
push
in
lcall
call
sbb
and
int3
stos
fnsave
movsb
imul
xchg
pushf
inc
xor
cltd
ja
push
pushf
cwtl
enter
adc
enter
fnsetpm(287
mov
mov
daa
enter
mov
xchg
push
xchg
fstpl
mov
xchg
mov
cmp
adc
js
push
out
pop
stos
xor
dec
fsubrs
jecxz
pop
fistl
test
inc
out
dec
xchg
mov
in
push
push
adc
dec
sbb
add
pushf
scas
mov
cmp
push
movzwl
push
jae
and
in
sub
mov
xchg
or
cmp
insb
fidivrs
push
jns
sbb
pop
push
popf
xchg
mov
adc
movsb
xor
mov
sub
std
insb
loopne
mov
in
outsl
into
hlt
xor
lods
scas
into
xchg
jl
cmp
iret
adc
or
or
adc
lods
jns
clc
leave
lcall
push
rclb
mov
lret
stos
xchg
adc
xor
xchg
xchg
jge
fnsave
xchg
cltd
negb
enter
andb
arpl
fidivrl
pop
mov
xchg
xchg
mov
outsl
test
jno
pusha
inc
dec
cmpsb
orb
pop
ljmp
ja
in
jg
testl
and
inc
push
sub
sbb
push
inc
nop
adc
mov
scas
add
aad
mov
pop
xchg
aas
cmpsb
push
mov
addr16
jge
aaa
adc
lods
mov
jecxz,pt
popa
stos
jnp
inc
es
mov
xchg
push
mov
in
sub
fcoml
dec
sahf
sbb
sbb
fwait
aaa
dec
adc
jb
jne
dec
cmc
int3
ficoml
loop
push
and
or
mov
cmp
inc
xchg
shl
dec
insb
push
dec
inc
incl
enter
or
insb
test
dec
xchg
lods
movsb
mov
mov
inc
or
mov
push
dec
in
in
in
mov
jbe
mov
mov
shll
xor
addb
mov
push
addr16
jns
dec
pop
pop
outsb
jg
jmp
cmp
adc
pushf
mov
cmp
sti
push
cmp
and
rorb
mov
xchg
sub
pop
pop
jge
and
pop
jg
ljmp
add
push
outsl
lods
and
fld
or
aaa
sub
add
add
sbb
or
mov
xchg
jp
les
cwtl
and
sbb
shlb
inc
fisubrs
cmpsl
xchg
sbb
xchg
dec
nop
sub
pop
and
les
aaa
roll
sbb
mov
stc
daa
flds
aas
xorl
push
lods
or
les
xchg
daa
shr
dec
jno
jne
cmp
mov
jb
dec
rcrb
xor
dec
jmp
push
push
adc
filds
push
mov
sub
mov
ljmp
xchg
pop
sbb
add
fstpl
js
ror
xchg
cmpsl
push
lea
inc
mov
sahf
fistps
sub
dec
test
fisttpll
adc
roll
sub
les
pop
nop
cmp
icebp
pop
sbb
insl
push
in
out
aaa
push
mov
push
movsb
cmp
add
les
ja
mov
mov
dec
lds
ja
pop
push
leave
jp
sbb
sub
push
cmc
adc
insb
dec
cmp
jp
adc
jb
pop
dec
sub
mov
xor
mov
mov
js
mov
into
kandnb
push
mov
push
lcall
mov
adc
xchg
jns
adc
xor
push
xor
xchg
or
xor
imulb
cmp
mov
mov
xlat
xor
test
jne
pop
sbb
push
je
lret
dec
sbb
sub
jecxz
xor
clc
rclb
xchg
push
pop
jle
in
jae
pop
outsl
rorl
add
sbb
mov
and
icebp
mov
scas
popa
mov
mov
push
nop
mov
xor
lods
xlat
dec
or
adc
iret
push
sbb
mov
in
mov
scas
test
sbb
mov
or
inc
movsb
aas
test
push
aaa
jge
imul
xchg
push
outsl
lods
test
xchg
lahf
mov
movsl
lahf
push
add
fldl
cmpsb
inc
aaa
fmuls
add
pop
sbb
int
mov
in
imul
or
mov
pop
push
dec
jl
adcl
sti
and
mov
sub
cmp
push
adc
and
push
aas
ss
xchg
fmull
adc
sbb
mov
dec
mov
lds
adc
jl
bound
fldt
int3
xchg
sbb
sbb
rcl
rcll
iret
mov
icebp
fsubrl
out
xchg
cmp
dec
adc
nop
mov
adc
mov
jns
rcrb
stc
mov
jp
psrad
ret
and
iret
mov
mov
adc
jp
dec
sbb
outsb
or
divb
mov
pop
jb
inc
push
call
test
adc
shrl
and
fnstsw
enter
push
pop
mov
addr16
push
pmaddwd
cmpsl
jmp
pop
cmp
pop
xor
adc
pop
lock
xchg
or
ds
cli
pop
push
pop
lds
fsubrp
push
fs
jl
or
popa
inc
les
mov
lds
dec
scas
aas
xor
pop
inc
pop
xor
xchg
inc
fmull
pop
and
xor
inc
aam
push
movsb
stos
adc
cmp
jecxz
push
mov
arpl
and
enter
repz
cltd
cs
mov
push
sbb
or
push
cmp
shll
adcl
jb
out
inc
in
pop
notl
shlb
and
addr16
cmp
sub
dec
and
xchg
ret
pop
mov
xchg
push
orb
lods
lds
cli
imul
insl
sub
and
xor
or
mov
cmp
lods
daa
add
shll
sbb
mov
popa
imul
out
mov
adc
scas
dec
adc
imul
lret
popf
sub
pop
add
sbb
xor
insb
push
sub
and
jl
imul
lahf
ja
cmp
nop
clc
mov
adc
xchg
addr16
inc
adc
xor
cmc
int
frstor
sbb
sub
inc
popf
mov
xchg
idiv
xor
add
cmp
mov
inc
dec
sahf
push
push
repz
sti
clc
inc
stos
movsb
push
sbb
js
out
int
mov
xchg
mov
push
inc
stos
cld
dec
sub
punpckhbw
pop
xor
out
jg
cmp
int
test
fsub
call
arpl
fisttpll
in
dec
call
jo
ficoms
clc
jle
je
fisubrs
cli
mov
scas
xchg
xchg
or
and
dec
and
jl
call
psrld
out
mov
daa
lock
xor
dec
push
pop
lret
xchg
insb
adc
or
in
int
and
mov
sbb
stos
mov
mov
cmpsl
test
lds
fcmovu
sar
bound
inc
mov
adc
fdivrl
fwait
or
cwtl
pop
scas
dec
mov
xchg
mov
lret
adc
ss
mov
filds
iret
das
mov
push
test
popa
jmp
pusha
xchg
sbb
int3
dec
lods
loopne
sahf
push
sub
popa
or
xor
mov
mov
fld
cmpsb
mov
out
shl
out
xchg
jno
fnstenv
cmp
arpl
and
ss
out
loop
lea
sub
orl
shll
mov
adc
xor
mov
pop
xchg
mov
jmp
dec
test
jb
fimull
rcr
inc
sbb
std
add
es
scas
ljmp
lret
sub
xchg
pop
cwtl
push
ja
jmp
mov
icebp
sbb
int3
jnp
jmp
fidivrs
call
xor
int3
push
cmpsl
test
xor
scas
icebp
mov
jp
pop
dec
push
shrl
jnp
push
daa
and
call
int
imul
enter
jo
mov
push
iret
fnstcw
bound
and
call
jmp
xor
shrb
push
es
cltd
fldl
das
inc
push
das
mov
decl
xchg
cltd
icebp
push
dec
sbb
dec
push
mov
fiaddl
sbb
inc
arpl
out
xchg
icebp
pop
pop
sbb
stc
sahf
jmp
push
sub
xchg
and
lds
jl
mov
in
push
mov
dec
and
int3
add
mov
adc
inc
push
insb
les
pusha
push
xchg
jecxz
and
sbb
scas
push
outsb
or
stc
xchg
nop
and
or
mov
sub
add
das
sahf
int
or
es
add
test
inc
sarl
add
loope
daa
inc
xchg
xchg
shll
and
push
adc
adc
mov
negl
std
cli
mov
and
fldt
jge
mov
ret
fcom
push
pop
mov
add
gs
mov
iret
mov
jmp
insl
sarb
popf
pop
sub
jb
stc
xor
into
imul
in
pushf
dec
sub
test
jmp
xor
push
popf
mov
mov
and
push
or
es
xchg
cmp
inc
mov
in
adc
dec
mov
mov
add
clc
movsb
flds
pop
and
push
cld
add
jne
sbb
mov
stos
jle
sbb
rclb
inc
mov
mov
add
jbe
in
int
fistl
cs
daa
int3
adc
jns
dec
or
inc
repnz
xchg
pop
xchg
jge
jno
inc
std
mov
leave
lret
mov
mov
inc
adc
xchg
stos
insl
cmp
sbb
js
xchg
add
movsb
cmp
aam
push
xor
insb
rcl
mov
add
sahf
leave
sbb
pop
mov
mov
cld
loope
or
or
dec
pusha
push
lock
mov
das
xchg
adc
loop
and
sub
inc
push
dec
sub
paddusb
je
and
dec
hlt
mov
lret
cmc
popf
out
gs
popf
xchg
scas
mov
jmp
sub
xor
pop
sub
cmpsb
test
sbb
emms
loope
scas
popa
or
fimuls
sbb
mov
pusha
iret
test
imul
pushf
imul
ss
rclb
scas
iret
xchg
mov
jb
stos
rolb
lret
aaa
cld
and
int3
sub
ja
or
add
pop
addr16
shll
out
jno
insb
jg
popa
rcr
loope
pop
add
add
and
push
pop
ljmp
sarb
dec
js
movsl
mov
dec
pop
out
outsb
jo
mov
or
jmp
aad
ja
sti
in
loopne
jmp
ss
das
mov
icebp
inc
clc
xchg
xchg
cmp
and
add
push
enter
dec
je
jecxz
loope
test
adc
add
sub
mov
popa
pop
cmp
dec
mov
mov
idiv
enter
test
faddl
jnp
fimuls
dec
aaa
xchg
xor
sub
out
fldl
test
shlb
sti
xor
test
sahf
mov
lock
ss
sub
push
cli
aam
dec
cs
lret
fcmovu
gs
dec
popa
cmp
add
mov
and
lods
and
sahf
rcll
push
xchg
xchg
clc
cld
mov
arpl
sub
dec
test
and
push
stos
outsb
lock
adc
jno
out
sub
xchg
xchg
insl
ljmp
loopne
js
mov
jge
addr16
aas
jbe
inc
cmp
dec
xchg
call
jmp
cwtl
inc
sbb
ret
dec
mov
pop
cmp
in
sub
lcall
cld
out
outsb
jmp
mov
push
cli
insb
cmp
rorb
rol
sbb
and
push
sub
xchg
loopne
fs
int
mov
aas
clc
sbb
pusha
rclb
enter
pop
iret
je
pop
out
fiadds
testb
xchg
push
adc
jl
andl
loop
sub
out
sub
mov
mov
test
scas
test
mov
pop
stos
pop
inc
pop
out
addb
inc
call
lods
je
dec
orl
xchg
test
dec
cmp
rcll
xchg
mov
rorl
mov
idivl
mov
neg
in
dec
sbb
jge
mov
push
adc
sbbb
popa
mov
mov
testl
push
ds
lds
adc
popf
xorb
adc
jecxz
add
jno
jnp
jo,pt
out
mov
mov
in
and
nop
or
les
ror
push
push
sbb
dec
loop
jno
pop
rcrb
call
lods
out
lock
pop
cmpsl
push
mov
out
rorb
xlat
bound
data16
and
adc
jae
mov
test
repz
fiaddl
dec
mov
ja
imul
imul
push
lods
ja
xchg
pop
cmp
xor
sarl
test
push
je
mov
dec
aaa
or
lret
cmp
cltd
xlat
aas
int3
jae
nop
adc
stos
or
or
es
ficompl
sti
jp
push
inc
and
jne
int
sbb
push
dec
adc
xor
loopne
push
push
dec
test
xchg
or
mov
dec
je
jecxz
push
in
xlat
dec
fwait
in
inc
cli
cmp
ljmp
sti
cmp
adc
mov
mov
jmp
adc
xchg
aaa
xchg
and
inc
and
outsl
pop
xorl
adc
jne
out
jmp
not
add
gs
into
movsb
mov
je
pop
fdiv
xor
xchg
jecxz
pop
xchg
sbb
pusha
mov
xor
stc
and
ds
or
mov
loop
sub
imul
aam
pop
or
pop
mov
sbb
je
pusha
cmp
rcll
dec
dec
or
imul
dec
hlt
cmovb
inc
fidivrs
sbb
daa
mov
call
faddl
cs
jmp
push
and
gs
fwait
push
sarb
bound
lea
mov
push
sub
clc
addr16
cwtl
in
mov
xchg
sbb
fidivl
pop
and
icebp
popa
fstps
iret
inc
sbb
ljmp
dec
movsb
adc
imul
pushf
mov
jo
adc
sub
xchg
mov
push
xor
mov
stos
icebp
xorl
test
arpl
pop
dec
movsl
mov
mov
xchg
lds
movb
aaa
aad
flds
mov
lea
cmp
mov
and
xchg
rolb
outsl
dec
loopne
jle
xor
cltd
daa
fs
mov
lods
add
sbb
aam
cmp
ljmp
pushf
aaa
sahf
xchg
imul
add
dec
sbb
jno
jae
imul
adc
mov
push
push
shrl
pop
xchg
loop
mov
sti
cmp
mov
cmp
lret
sti
cmpsl
and
push
dec
add
xorb
jo
outsb
out
cmpsl
gs
sti
pop
lock
or
ds
mov
stc
fwait
xor
jecxz
lea
jmp
mov
ljmp
jns
dec
or
push
xchg
adc
and
daa
jae
dec
or
mov
idiv
dec
out
mov
mov
hlt
sbb
push
gs
and
jg
push
lahf
fcmovne
dec
push
push
mov
jmp
mov
xor
insl
fisubs
jae
jns
and
mov
xor
imul
sbb
cwtl
mov
iret
cli
jle
fisttpll
jns
das
frstor
dec
movsb
mov
js
xorl
push
scas
dec
or
cmp
and
and
cwtl
xor
imul
and
mov
xchg
into
inc
mov
xchg
movsl
fmuls
dec
mov
sbb
loop
rclb
push
sub
in
pop
call
or
pop
fstl
push
fcompl
lock
mov
fidivrl
cli
stc
or
ljmp
jb
stc
les
popf
push
call
rcrl
pushl
pushf
cmpb
dec
popa
lock
and
out
inc
push
lret
icebp
out
lret
dec
lret
pop
jle
ficomps
lcall
or
cwtl
outsl
jecxz
xor
enter
push
hlt
pop
mov
out
enter
imul
popf
aas
test
pop
daa
in
sahf
into
movsw
jmp
mov
leave
xchg
push
cmpsl
cmpb
sarb
aaa
inc
cmp
aaa
cmc
std
mov
mov
loop
inc
jae
lcall
into
sub
xchg
fsubl
jne
ljmp
sbb
xchg
cmp
jecxz
xchg
sbb
dec
sub
and
inc
mov
xchg
js
insl
scas
xor
and
xchg
jmp
arpl
xor
jmp
pop
sub
push
nop
xorb
daa
not
f2xm1
mov
incb
loopne
sub
test
cmp
loopnew
fdivp
or
push
loop
and
or
movsl
add
enter
insb
push
out
repz
loope
xchg
imul
sub
scas
mul
adc
enter
lea
in
dec
bound
cli
inc
out
sti
repz
add
push
dec
sbb
ret
lret
jnp
les
dec
fnstenv
jecxz
cmp
scas
adc
movsb
rcrl
divps
xchg
test
sub
cmp
cmpsb
xlat
push
test
mov
popf
mov
push
and
cmpsb
jg
sub
stos
into
fucomip
leave
stc
push
out
pop
mov
sbb
jecxz
push
mov
movsb
loopne
test
sub
aad
fsts
rcr
dec
hlt
cmp
stos
loopne
sub
sarb
les
lds
xorl
pushf
add
test
dec
xor
xchg
ds
mov
push
or
stos
addr16
mov
xchg
inc
cmp
push
mov
mov
cwtl
adc
sub
inc
sahf
loopne
mov
inc
sbb
cmp
int
loope
ds
inc
je
xchg
data16
ljmp
icebp
or
push
sbb
pop
xchg
cmc
mov
stc
leave
pop
out
xchg
imul
popf
add
test
sub
mov
mov
andl
aaa
push
cmp
aas
add
fwait
adc
mov
or
sbb
xchg
xchg
jg
xor
fucomip
mov
imul
mov
out
stos
in
jge
loope
and
popa
cs
add
in
clc
les
fistpl
int
clc
jne
std
lds
push
out
jecxz
dec
and
lds
int
or
push
out
in
inc
or
dec
dec
ret
sbb
outsl
cld
cmp
popa
gs
out
inc
cld
push
in
loope
in
mov
push
mov
imulb
js
rcr
ds
subl
xchg
cltd
mov
add
adc
inc
adc
in
cmp
repz
mov
cmpsb
adcl
jle
push
adc
loope
int3
rolb
aas
mov
xorb
rorb
pop
or
xor
push
inc
cmc
adc
jecxz
xchg
or
lcall
movsb
xor
mov
xchg
hlt
cmp
mov
sub
imul
mov
daa
icebp
lcall
rorl
dec
xor
pop
xor
cmpsb
mov
adc
movsl
nop
je
icebp
or
fdivrp
cmp
ss
inc
mov
add
jg
pop
pushf
pop
jae
sub
xlat
add
sub
and
xor
xchg
popf
mov
sbb
jmp
pop
cwtl
pop
fildll
insl
lea
xorb
aas
fisttpl
pop
adc
mov
xlat
loope
xchg
leave
jg
xlat
in
jmp
adc
jge
add
not
pop
test
or
pop
mov
xchg
cmp
loopne
das
dec
movsb
mov
ret
xchg
sahf
xor
pop
sbb
jb
jmp
jmp
mov
push
jp
xor
mov
in
mov
popa
popa
orl
stos
idivl
dec
jno
mov
out
push
fsubs
push
js
fbstp
pop
jns
lea
imul
es
mov
dec
outsl
fdivrs
push
jb
adc
inc
pop
jae
popf
loope
sbb
out
ss
lahf
inc
pop
dec
or
dec
mov
pop
pushfw
cmp
fs
dec
mov
xchg
in
shl
out
jne
shlb
jnp
xor
push
sub
mov
outsb
test
movsb
push
adc
stc
int3
jl
in
gs
sbb
out
mulb
mov
mov
jbe
xor
push
cmp
sbb
rolb
inc
mov
pop
xchg
sahf
cmc
insl
lret
cmp
test
loopne
imul
xchg
push
ss
push
adc
dec
mov
ret
sti
fistpll
mov
dec
sbb
or
add
inc
in
subl
add
inc
icebp
sub
inc
cmp
ja
nop
fdivrp
jp
ret
jmp
test
aad
lock
imul
loop
dec
xor
testl
push
cmp
add
das
mov
jl
and
shl
pop
jae
mov
iret
xchg
or
xchg
outsl
and
and
aaa
xlat
aam
addr16
aaa
rcrb
mov
mov
jl
lods
daa
jmp
iret
mov
addb
lea
pop
repz
aaa
pop
int
aas
lds
pop
push
out
sub
loopne
mov
andb
push
rcll
jne
mov
fbld
mov
push
cmp
cli
fisubl
pop
pop
sub
into
ja
pusha
jne
cltd
enter
mov
sbb
pop
imul
mov
call
fildll
rcrl
roll
pop
xor
cs
pop
lods
loop
icebp
das
mov
ret
roll
cmp
push
frstor
cmp
stos
lret
lds
int3
add
xor
stc
xor
inc
mov
add
mov
inc
jecxz,pn
adcb
sar
daa
out
pop
and
cld
cmp
push
nop
fstpl
rcrl
sub
cmp
dec
stos
rcll
push
push
enter
add
dec
mov
or
sbb
mov
xchg
out
popl
push
sub
lcall
jmp
mov
mov
xor
test
xchg
dec
dec
adc
enter
adc
push
out
aam
test
loope
out
leave
cmp
adc
add
roll
cld
xchg
cmp
icebp
xchg
pop
add
out
stc
mov
scas
and
outsb
sub
sbb
cmc
mov
push
repz
xchg
rcrl
or
mov
xor
minps
sti
in
push
scas
lea
repz
test
int
sub
mov
fcoms
out
mov
fs
iret
outsb
dec
fstl
push
fs
jbe
sbb
sub
in
pop
imul
adc
push
scas
lcall
adc
ret
push
in
aaa
xchg
fisubl
lds
push
std
jbe
call
jg
fs
movsl
mov
jle
mov
cmp
aaa
cmp
cmpsl
push
mov
faddl
fists
xchg
add
dec
xchg
insb
push
popa
dec
xchg
int3
xor
or
rolb
jle
push
xor
xor
pop
and
fstpl
sub
or
enter
int
in
xor
gs
inc
loop
jmp
push
dec
stos
push
xor
jecxz
sbb
popf
inc
adc
push
jnp
push
dec
mov
pop
pop
out
push
lcall
mull
sbbl
xchg
push
xor
loope
jl
mov
xchg
mov
add
lcall
adc
mov
and
jle
fcoml
popa
mov
sahf
mov
and
ficoml
xor
mov
icebp
adc
mov
mov
mov
xor
test
fs
lret
sarl
movsl
push
cmp
iret
xchg
lea
adc
xchg
dec
jbe
adc
pushf
mov
lret
int
lret
cmp
pop
bnd
inc
adc
xlat
pusha
and
sbb
lcall
or
pop
jb
xor
push
dec
jge
mov
lcall
cmpsb
push
and
jp
sbb
clc
mov
pop
adc
jb
add
push
add
xchg
int
jne
insb
sub
fbstp
ret
stos
push
cmc
mov
sbb
add
lea
ret
stc
std
out
stos
shlb
mov
movsb
pop
mov
inc
lahf
test
or
testb
dec
popf
pop
fsubrs
in
mov
sbb
call
maxps
sbb
pop
mov
pop
cmpsl
loop
sub
add
jns
cltd
pop
push
pop
sub
xor
inc
and
hlt
mov
mov
stos
adcl
sub
arpl
stc
iret
fdivl
add
hlt
loop
aam
pushf
jbe
mov
add
pop
bound
icebp
or
in
add
xchg
push
int3
mov
call
lret
femms
stos
mov
push
daa
test
nop
mov
push
lcall
out
mov
fsubrs
test
pop
in
adc
dec
xchg
cld
sbb
mov
jnp
lods
sub
sub
xor
jp
cmpsb
enter
mov
or
outsb
inc
stc
mov
arpl
mov
cmp
addl
pop
or
sahf
movsl
xchg
xor
insl
data16
adc
adc
data16
dec
cmpb
pop
ljmp
ja
outsb
fs
out
push
push
xchg
jno
es
rcl
dec
jno
mov
pop
out
cmp
jb
xor
addr16
and
jg
dec
sbb
loope
mov
mov
clc
cwtl
sbb
aad
jge
mov
sbb
fnstenv
push
xchg
pop
pop
xlat
data16
pop
pop
push
mov
dec
xorl
xlat
jl
lret
push
gs
popa
pop
push
out
sbb
test
test
sahf
lods
stos
or
mov
inc
pop
sub
push
mov
pusha
or
mov
adc
shlb
mov
cmp
push
xchg
sub
loope
lds
add
out
ret
sub
push
or
xchg
pop
push
xlat
stos
ljmp
lcall
shl
inc
sbb
cld
int3
fisttpl
or
sbbb
jno
cld
adc
cli
push
adc
and
imul
add
sbb
jae
mov
push
cmpsl
sub
jne
pop
and
adc
out
cmp
mov
mov
mov
enter
loopne
dec
add
out
cmp
pusha
add
fdiv
sub
inc
mov
mov
popa
testl
mov
jmp
jbe
and
and
inc
mov
push
jae
dec
stos
cmpsb
mov
push
add
jbe
pop
in
lock
icebp
sub
movsb
cli
mov
leave
pop
sbb
lds
lret
in
cmc
adc
sarb
stc
les
xchg
sub
btc
dec
mov
cmpsl
into
inc
cs
out
pop
loope
lods
sub
test
mov
lcall
addr16
daa
int3
add
dec
pop
ret
sub
ljmp
shrl
push
xchg
mov
xor
mov
gs
outsb
add
arpl
dec
js
js
call
rclb
aas
xchg
xchg
je
sub
rsqrtps
push
add
insb
and
movsb
pop
dec
idiv
mov
loope
xchg
xor
xorb
pop
jbe
insb
mov
out
cwtl
enter
stc
inc
idivb
xchg
sub
or
std
outsb
xor
loop
cmp
orb
cmp
xchg
xchg
inc
dec
jnp
rcl
xchg
loopne
in
mov
out
cmp
shrl
sub
jmp
sbb
outsb
jp
sbb
mov
mov
iret
xchg
xchg
sub
mov
sahf
cmp
sub
lret
inc
call
lret
push
xor
push
test
pop
inc
bound
xchg
and
jg
dec
jns
jmp
jns
jle
xchg
or
mov
pop
and
test
lea
dec
or
les
in
in
sbb
cmp
push
fldt
push
stos
mov
orb
xor
jl
inc
loopne
loop
push
insl
iret
push
enter
cmp
call
jbe
inc
jae
ds
add
in
dec
mov
loope
cltd
or
xor
aas
mov
xor
fstpt
rcrl
stc
jmp
push
incb
dec
push
jbe
jge
jne
xchg
addr16
iret
push
mov
mov
int
mov
ror
mov
ds
stos
imul
rcll
mov
mov
dec
cmp
movsb
inc
jae
mov
pop
out
lock
iret
and
lcall
pop
cli
adc
cmp
xor
lock
mov
pop
pop
int3
enter
ljmp
and
dec
or
or
ss
push
rcr
ljmp
jp
movsb
pushf
and
adc
sub
nop
xor
fnstenv
inc
push
loop
fstpl
call
sbb
dec
pop
scas
push
pusha
mov
add
mov
in
inc
or
jbe
and
pop
push
les
and
push
add
mov
dec
mov
push
cmpl
xchg
lods
in
enter
xchg
push
insl
imull
pop
cmpsb
jecxz
fimull
mov
push
mov
xchg
push
icebp
lds
outsb
divps
enter
mov
jmp
mov
popa
lods
xchg
jp
add
mov
fwait
push
sub
push
cli
clc
adc
shll
push
adc
mov
cmc
ljmp
pusha
xor
or
sub
dec
xor
lods
inc
sub
lcall
inc
fwait
sarl
push
test
pop
outsb
push
in
xchg
popf
fimull
inc
clc
cli
data16
adc
shl
es
inc
fidivs
xchg
repz
mov
test
push
in
mov
and
mov
xchg
insl
icebp
or
out
inc
and
sub
or
repz
bound
push
cmc
negb
cmp
mov
ficomps
or
add
negl
cs
mov
mov
mov
dec
adc
jne
push
mov
pop
or
mov
cmp
xchg
es
pop
inc
sbb
push
in
pop
adc
add
lods
sub
fwait
push
clc
fmul
pop
popa
sbb
clc
mov
mov
and
jo
test
or
cmpsb
in
jo
and
and
add
sub
lcall
sub
cmp
xchg
mov
xor
hlt
sbb
sbb
repnz
ret
mov
jb,pt
push
shll
inc
mov
lods
push
push
inc
jnp
divl
inc
jmp
enter
shr
fistps
mov
dec
sarl
dec
xor
inc
dec
mov
sbbl
pop
ficomps
test
and
mov
sbb
lods
stos
push
jae
ljmp
stos
jecxz
test
xchg
inc
ds
aas
xor
jg
sub
pop
fwait
loop
aam
loopne
jnp
push
or
stc
stos
xchg
mov
push
lret
ljmp
and
add
push
sub
jae
cmp
mov
data16
test
add
aaa
mov
push
sbb
mov
jecxz
mov
outsl
lcall
iret
lods
loope
jns
popa
cmp
test
adc
in
out
out
pop
xchg
sarl
jp
shrd
pop
mov
jns
jge
mov
gs
and
mov
dec
mov
jnp
popa
sub
pop
aas
jmp
mov
sub
fidivrs
loop
pop
and
ret
sbb
loope
les
or
cmc
add
in
xchg
mov
movsl
adc
mov
sbb
fsubp
dec
mov
and
into
adc
xchg
cmp
sub
dec
or
fld
cli
cs
popa
into
mulps
mov
push
jle
sbb
loop
ret
mov
jmp
dec
mov
mov
mov
mov
jle
in
testl
and
push
and
jae
fsubl
pop
push
sti
loopne
push
std
das
jg
jmp
pop
push
pop
cmp
xor
sub
xchg
aad
sahf
cwtl
push
adc
jbe
add
test
int3
inc
mov
aad
xlat
pop
pop
xchg
je
int
jmp
push
adc
mov
sbb
jns
adc
iret
dec
sub
jne
imul
cld
stos
mov
repz
jae
xchg
shrb
push
cld
shrl
cmp
imul
cmp
psadbw
icebp
cld
jbe
popf
adc
je
or
dec
pop
mov
cmp
dec
and
loope
dec
lea
les
int3
push
push
aam
mov
js
arpl
cmp
and
pop
xlat
dec
aas
test
rcll
pusha
mov
test
or
add
sbb
insl
lds
jae
sbb
sub
das
lahf
add
cwtl
adc
xchg
out
lret
cmpl
std
enter
stc
ret
mov
pop
sub
add
sbbl
ds
popa
mov
inc
adc
mov
lret
xor
dec
jle
jge
cmp
cmc
mov
mov
lea
pusha
pop
mov
xor
pushf
stc
xor
out
cs
das
cmp
mov
stos
push
loope
outsl
jle
enter
jne
shlb
dec
scas
and
inc
lahf
sub
mov
push
insb
popa
in
fistpll
fsts
adc
lock
iret
fcomip
rolb
mov
imul
cmp
pop
xor
pop
les
jmp
outsl
mov
pop
lea
repnz
sub
push
out
rcll
mov
scas
cmpsl
mov
dec
dec
repnz
stos
inc
push
repnz
mov
and
pop
in
ja
loope
lcall
out
ljmp
xor
mov
and
test
cmp
cmp
add
add
xlat
lock
mov
sub
cmp
pusha
cs
jb
mov
jp
sub
lcall
gs
mov
cmp
in
push
arpl
not
xchg
jge
mov
cmp
inc
mov
cmc
push
jne
xor
dec
xor
in
cmpl
and
mov
into
pushf
loop
test
out
and
xchg
mov
pop
mov
mov
pop
repnz
xlat
sbb
or
inc
cmp
sarl
or
jo
push
mov
ljmp
xor
xor
xor
jecxz
dec
in
shl
adc
nop
stc
add
sti
fs
dec
adc
mov
add
sti
cmpsl
inc
add
in
ret
mov
scas
push
pop
pop
clc
push
fisttpl
cmp
scas
push
sub
loope
lahf
ljmp
enter
imul
xchg
mov
test
mov
mov
out
push
mov
cmp
xor
in
loopne
out
bound
cmp
push
fldt
sub
xchg
out
sub
xchg
lret
mov
pop
lods
xor
jmp
xchg
lock
adc
fdivs
lahf
xchg
adcb
insb
mov
fcoml
rolb
shlb
cmpsb
inc
jge
jb
jno
hlt
cld
lret
fistpl
mov
test
addb
aaa
push
cwtl
andb
add
cmp
clc
lea
into
icebp
shl
rcr
outsl
or
outsb
or
sbb
fxch
popa
xchg
test
push
pop
stc
inc
pop
jnp
cs
enter
fs
sbb
pop
nop
inc
fisubs
mov
das
les
mov
and
repz
or
mov
in
sbb
cmp
sbb
push
xchg
mov
sbb
pushf
push
xchg
imul
add
in
add
inc
xor
mov
inc
insl
inc
adc
cmp
dec
clc
xor
aaa
int3
mov
pop
sub
insl
lea
inc
push
jmp
in
adc
mov
sbb
movsb
loope
adc
xor
stos
add
in
adc
sub
rclb
and
setae
cwtl
in
hlt
popa
mov
cmp
mov
xor
and
into
movsb
jmp
dec
js
sbb
pop
outsb
and
jo
fldenv
xor
out
push
xchg
cmp
movsl
dec
dec
cmpl
stos
mov
testb
call
mov
shll
dec
leave
pop
gs
sti
daa
lcall
inc
inc
int3
push
pushf
mov
xchg
call
int3
pusha
mov
push
call
test
add
push
mov
or
and
repnz
jno
push
vpcomud
mov
xchg
mov
lahf
lea
repz
dec
in
imul
xor
testl
rol
or
bound
and
jl
outsb
dec
jmp
add
cmpsl
mov
xchg
or
scas
sbb
jbe
imull
dec
mov
jb
cli
xchg
add
jecxz
addl
fidivl
adc
pop
iret
popa
sub
jo
cmpsb
sub
loope
mov
xor
or
push
jecxz
popf
cwtl
imul
add
test
add
std
sbb
mov
mov
testb
push
and
jne
lds
xor
lret
mov
xchg
mov
lret
in
mov
dec
ret
shr
mov
loope
cmpsl
mov
dec
lods
or
ja
leave
add
jne
pusha
mov
mov
cmp
pusha
movsl
sub
pusha
vmread
mov
adc
adc
inc
jb
sub
cmp
sbb
jmp
fwait
ja
xchg
push
rorl
stc
shlb
repnz
movsl
out
fistpl
je
jnp
inc
inc
rclb
aad
mov
jmp
xchg
xor
cmp
in
mov
test
adc
ss
test
inc
and
dec
mov
sarb
jae
pusha
push
sbb
dec
cmpsb
popa
nop
pop
sbb
aaa
jmp
cmp
cwtl
fsubrs
jle
mov
pop
int
and
cmpsb
ljmp
lea
popa
add
sti
imul
adc
xchg
pop
adc
sub
inc
into
mov
shll
push
cld
ret
cmp
push
arpl
xchg
aam
ds
inc
pop
xchg
mov
or
fwait
cmp
scas
jg
das
mov
fwait
arpl
mov
andl
mov
mov
das
xorl
mov
xchg
jns
push
ja
mov
stos
out
mov
int
xchg
mov
arpl
push
mov
push
push
repnz
fs
lods
and
lret
mov
mov
outsl
popa
fistps
ret
mov
xor
cmpsl
mov
sub
sbb
stos
hlt
mov
jb
lds
sbb
and
leave
jg
movsb
cmp
sbb
adc
adc
mov
scas
inc
xchg
ret
imul
mov
push
dec
adc
divb
add
ds
ljmp
push
call
frstor
in
sbbb
or
fidivrs
cmp
ja
sub
lods
adc
inc
sbb
dec
out
test
mov
push
mov
int3
test
inc
xor
xchg
int3
jno
jo
mov
pop
enter
or
dec
fmull
aam
lods
xchg
ret
push
aad
popa
push
cli
insb
nop
stos
mov
xor
pop
out
xchg
in
gs
inc
ret
jo
add
dec
pop
cmp
fiaddl
sub
mov
fcoms
inc
loop
xchg
xor
inc
xchg
pop
stos
adc
jbe
mov
int3
repz
jo
data16
fucomi
arpl
mov
add
jge
inc
addr16
fs
jns
dec
jne
inc
inc
jne
je
addr16
repz
jl
sarl
inc
flds
std
addr16
push
pop
daa
push
mov
mov
mov
sbb
jecxz
fldcw
jmp
fsubl
in
int3
shrb
repz
push
pop
out
cmove
dec
and
popa
mov
push
cli
les
xor
lret
push
jp
mov
sbb
fiadds
xor
and
stc
and
mov
daa
aaa
xor
pop
cmp
ret
jnp
std
cmp
int
pop
pushf
mov
int3
add
pop
and
int3
mov
or
xchg
movd
frstor
jecxz
lahf
in
sahf
jmp
lret
stos
inc
repnz
out
sbb
push
ss
xchg
mov
fmul
in
inc
je
out
mov
cmp
dec
pop
add
pop
lea
jo
loope
mov
das
insl
mov
sbb
outsb
or
out
cmpsl
shlb
nop
xchg
mov
in
call
repz
cmc
xor
hlt
movsl
sbb
pop
adc
push
jae
jb
icebp
and
icebp
push
daa
flds
daa
jno
or
mov
lcall
lods
xor
mov
repz
pushf
shlb
repz
xor
frstor
scas
jo
cmp
xchg
es
sub
and
sub
das
mov
inc
and
jne
xlat
and
dec
dec
sbb
pop
mov
clc
jg
xchg
subb
ss
pop
mov
add
inc
ds
jns
pop
adc
push
sub
sbb
adc
outsl
aad
loop
jmp
fimull
push
jle
out
cmpsb
gs
mov
neg
adc
scas
pop
fidivs
popa
dec
fcmovnbe
std
push
inc
xor
in
fs
imul
iret
das
jno
stos
inc
sbb
sub
fs
pop
scas
test
inc
inc
out
lret
xchg
cmpsb
push
cltd
int
jmp
mov
pop
sub
pusha
pusha
repz
xchg
orb
dec
inc
jmp
in
out
hlt
mov
ret
test
pusha
cmp
stos
xchg
jno
int
pop
das
pop
insb
mov
outsl
imul
mov
lret
and
dec
out
and
sub
add
outsl
jnp
mov
test
lret
pusha
call
aaa
sub
test
and
cld
mov
imul
sarb
ror
push
ljmp
inc
hlt
nop
fld
push
dec
lret
push
and
scas
inc
lods
jecxz
adc
xorl
push
cmpsb
test
sub
add
adc
xor
gs
outsb
mov
add
inc
sub
cmp
leave
js
cmp
inc
pop
out
pop
xchg
inc
jg
sbb
pop
sub
aas
jg
xor
mov
jmp
push
cmp
insb
mov
ds
xchg
jae
xchg
fisubrl
jns
pop
xor
xchg
add
pop
xlat
jnp
mov
cmp
pop
xchg
lcall
std
out
push
fidivrl
lret
ret
push
sahf
cmpsb
or
pushf
stos
ljmp
in
xchg
sub
ret
or
push
int
jp
scas
jno
adc
fnstenv
xchg
lea
cmp
xor
sub
sahf
sub
pop
faddl
popa
adc
pop
scas
jl
fidivrs
ss
push
jl
inc
imul
test
insl
std
xchg
loopne
dec
add
sti
or
cmpsl
mov
ja
xlat
jg
fmul
movsl
les
lods
mov
lds
or
xor
jecxz
repz
mov
mov
in
push
out
adc
inc
or
pop
dec
mov
inc
pop
and
pop
inc
lock
scas
lock
jnp
mov
inc
add
xchg
cld
push
mov
push
mov
test
lock
imul
mov
aam
imul
mov
push
fsubrl
fwait
mov
hlt
pop
lret
push
cmpsl
mov
sub
xchg
enter
jecxz
push
jno
mov
dec
xchg
push
bound
rcl
or
ja
es
adc
xlat
adc
mov
xlat
in
aaa
pusha
add
mov
sbb
mov
sbb
xchg
xor
push
mov
cwtl
cmpsl
sub
stos
iret
fdivrl
aam
mov
cld
adc
xor
and
fs
mov
push
ljmp
xchg
mov
push
add
and
fsubrs
xor
sub
sub
psllq
fidivrs
fwait
ret
add
jo
shll
add
test
and
jnp
mov
adc
adc
jp
aas
inc
andb
test
iret
cmp
push
push
mov
inc
pop
xlat
in
jg
insl
or
test
add
or
inc
sub
jo
in
lods
je
outsb
cmp
icebp
cli
lret
ds
clc
or
ret
ja
call
push
inc
fstps
test
mov
fnstenv
js
dec
mov
sub
inc
repz
xor
add
hlt
insl
sbb
in
ljmp
rcl
cmp
add
stos
jbe
xchg
dec
sbb
or
movsl
jecxz
cmp
sub
ja
xlat
pop
cmp
or
popf
push
push
jbe
mov
mov
call
mov
scas
xchg
push
mov
adc
iret
out
in
add
xor
jo
ds
adc
pop
out
fsubrl
clc
xor
daa
add
and
pop
jae
mov
dec
in
insb
add
ds
lods
xor
jns
cltd
push
mov
rolb
xchg
rorb
mov
loope
jne
in
orb
sub
int3
cmp
cld
sbb
sbb
mov
es
xlat
and
pop
outsl
jb
pop
std
sbb
add
addl
xchg
sub
mov
xchg
fistpll
pop
push
push
jp
mov
jmp
mov
sub
mov
test
mov
bound
leavew
test
dec
outsl
mov
jb
push
vmovntdq
xor
subl
fldt
ret
test
pop
subb
jmp
daa
clc
inc
int3
je
insb
sbb
push
mov
mov
hlt
jle
out
or
jae
push
dec
dec
insl
imul
sti
sbb
pushf
jns
add
pop
aad
sbb
mov
cld
mov
or
out
and
test
xrelease
xchg
lods
ret
out
lods
fdivrp
pop
ffree
int3
sub
cld
cld
fcoms
test
xlat
loop
sub
mov
pop
repnz
and
inc
sub
mov
dec
cli
mov
decl
lahf
inc
pop
cmp
pop
add
push
pop
cmpb
jmp
fisubrs
daa
cmp
loop
mov
imul
cmp
jb
mov
stos
and
mov
adc
mov
loopne
in
mov
mov
enter
add
mov
push
xchg
or
inc
fisubl
stc
add
adc
jp
add
add
adc
mov
cmp
lret
pop
mov
mov
pusha
stos
cld
mov
xor
mov
sbb
popl
icebp
xor
cmp
adc
jg
xor
mov
or
pusha
mov
in
adc
jl
aaa
imul
sub
xor
pusha
dec
push
mov
fdivs
shrb
ds
add
in
push
adc
jns
cmpsb
sub
mov
push
sbb
fisubrl
xchg
rcrb
pop
nop
ss
add
mov
pop
in
fs
or
outsl
sub
and
and
inc
jp
jge
stos
aad
dec
cmp
pop
pop
outsb
sub
dec
into
mov
arpl
stos
cli
push
lods
cmc
mov
sahf
push
pushf
enter
mov
sbb
in
xchg
inc
xor
call
or
push
fisttpll
lea
fucom
cld
jle
mov
and
cmp
out
push
cmpsb
mov
and
mov
std
fwait
sub
repz
ss
rorl
test
mov
xchg
xor
and
push
or
or
mov
mov
out
jp
xchg
cwtl
pusha
and
bound
test
cmpsb
jge
ss
pop
xchg
and
sbb
enter
movsb
sbb
call
mov
mov
mov
cmpsl
inc
mov
inc
pminsw
mulb
lods
dec
mov
ror
xchg
test
mov
out
orb
and
ljmp
pop
fstps
ds
out
and
imul
adc
pop
xchg
jg
jo
sub
int
push
enter
andb
jns
ss
iret
mov
in
loope
or
ret
xchg
mov
push
jecxz
pop
fs
mov
iret
iret
sti
mov
pop
popa
mov
lea
les
or
mov
push
or
pop
imul
adc
pushf
stos
push
bound
mov
mov
sarl
jns
jb
sub
nop
mov
aam
sbb
ret
in
iret
mov
or
mov
popa
cvtps2pd
inc
xor
nop
push
in
scas
mov
out
je
out
pop
add
movsb
or
ljmp
cmp
mov
stos
inc
jmp
sbb
mov
sbb
imul
or
inc
imul
mov
gs
bound
push
xor
in
jl
ljmp
mov
jno
mov
imul
xchg
orb
mov
xor
inc
pop
mov
icebp
incl
jge
lea
idivb
les
fwait
pusha
outsb
xchg
shrl
sub
sbb
les
sbbb
jae
xlat
jo
loopne
xor
aam
or
arpl
enter
dec
mov
push
bnd
xchg
js
fcomi
sub
lahf
ficomps
mov
imul
or
jo
mov
or
dec
out
dec
mov
test
insl
mov
pusha
cld
in
ret
das
add
leave
pusha
xchg
or
repnz
roll
mov
nop
cmp
cli
sbb
push
xchg
xor
test
push
pop
mov
loop
push
dec
mov
das
scas
fs
xchg
mov
aas
pushl
mov
fwait
add
cmp
inc
xchg
pop
xchg
xorb
sub
push
call
fstps
loop
mov
cmp
repnz
out
mov
test
mov
and
jle
fwait
sub
in
cmp
shll
int
mov
inc
xor
bnd
jae
imul
sub
sahf
xor
or
pop
xchg
dec
inc
cli
sbb
jp
cmpsl
dec
dec
negl
fcoml
fwait
cmc
sub
pusha
pop
cmpl
test
orl
stc
mov
int3
pop
inc
loop
push
gs
and
fwait
lea
xchg
int3
adc
cmc
pusha
mov
pop
sbb
fdivs
pop
inc
push
mov
lds
dec
mov
pop
fstl
fisubrs
mov
jmp
cmp
into
dec
xor
xor
imul
mov
outsb
push
xchg
inc
cld
sub
add
jecxz
rorb
mov
loope
rcrb
sbb
xlat
cmc
stos
ss
add
jne
or
mov
adc
out
adc
inc
mov
js
lock
or
dec
xor
aas
add
inc
push
ds
repnz
aas
into
adc
sbb
test
in
repnz
cltd
test
mov
mov
push
leave
xchg
subl
push
into
lcall
xchg
jp
popa
push
xchg
dec
dec
pop
mov
dec
dec
cmp
insl
push
aaa
ja
mov
mov
stos
cmpsl
sub
push
sbb
xchg
insb
adc
cmc
negb
cmp
adc
jge
push
jbe
jno
out
ljmp
mov
leave
lret
fwait
lcall
popf
shrl
icebp
inc
lahf
mov
pushf
push
add
inc
jns
adc
lcall
test
ret
mov
mov
sbb
jle
shlb
xor
shrb
adcl
lods
push
mov
test
pusha
bound
rol
fcom
fwait
vmread
cld
cld
gs
ljmp
and
mov
test
sbb
fs
cmp
inc
mov
push
les
je
xor
cmp
dec
aaa
test
add
lret
mov
xor
and
mov
adc
lock
xchg
gs
push
xlat
mov
pusha
icebp
mov
or
adc
ljmp
fwait
int3
enter
shr
push
sbb
fisubs
jmp
jno
mov
mov
adc
cmp
add
jne
aad
dec
sub
cs
scas
js
stos
xchg
movsl
dec
adc
or
dec
sbb
bswap
xchg
mov
add
add
imull
or
mov
dec
fmuls
lret
or
js
pop
mov
push
jnp
ret
pusha
push
nop
xchg
inc
movsb
loop
adc
repnz
ss
das
sahf
dec
shlb
push
cmp
cmp
dec
push
repz
enter
jge
movsb
shr
xor
lea
or
out
push
insl
cli
in
test
test
xchg
pop
out
sbb
mov
adc
push
lret
xchg
and
and
sub
sbb
cmp
mov
xorl
mov
fcmovnu
movd
into
xchg
iret
jae
pop
mov
sub
fldt
push
int3
lret
push
pop
add
mov
in
jb
dec
dec
pop
and
push
sahf
in
cs
movsl
push
add
sbb
jmp
pop
xchg
dec
subl
imul
jnp
sbb
les
and
push
inc
jl
mov
ffree
pop
adc
jg
in
aaa
jmpw
imul
fdivp
roll
lea
push
jle
adc
lock
pop
sub
outsl
cmp
and
es
and
movsb
jmp
data16
jl
inc
cltd
popf
mov
and
cmp
lds
pop
mov
push
pop
arpl
arpl
daa
dec
pushl
cmp
push
ljmp
popw
js
push
jmp
push
pop
insl
or
xchg
sub
mov
cmp
jb
mov
outsb
sbb
sahf
popf
ficoms
js
mul
xchg
das
adc
push
shll
xchg
out
inc
ret
pop
adc
cmp
add
xchg
push
dec
je
int3
mov
pop
pop
sub
pushf
pop
fbld
orl
movsl
mov
xchg
fucomp
or
divb
add
test
cwtl
aaa
test
add
and
cli
xor
jns
mov
fstpt
push
test
mov
jnp
add
repnz
sub
push
xchg
loopne
repz
in
cmp
int3
dec
in
popf
jo
jns
lock
ss
or
xchg
xor
cmp
fs
mov
fsubrl
jbe
popf
sbb
xor
test
sbb
les
test
push
lret
push
xchg
imul
pop
xchg
sbb
pushf
mov
jp
call
xchg
jno
pop
into
xchg
jmp
mov
push
dec
dec
fsubrl
or
hlt
push
lcall
cmp
sahf
fwait
push
hlt
mov
shl
mov
mov
decl
push
je
jp
xchg
sub
inc
aam
adc
or
inc
mov
sub
out
and
push
push
mov
jnp
dec
pop
sub
call
cmp
and
fwait
negb
in
stc
jmp
test
addb
xor
mov
je
mov
adc
subb
fwait
hlt
out
push
test
loopne
cwtl
divb
rorb
xchg
add
das
into
clc
pop
jnp
call
imul
sub
fisubrl
sub
loope
xchg
in
push
xchg
in
call
xchg
mov
xor
push
mov
aam
push
inc
add
sub
std
out
or
jmp
jmp
xchg
popf
adc
addr16
mov
mov
test
mov
xor
in
sub
loope
jmp
lea
jb
jecxz
loopne
sbb
insl
into
lcall
sti
pop
fs
mov
dec
xchg
add
mov
xor
lods
in
lock
and
adc
gs
pusha
leave
ret
adc
out
and
test
inc
js
rcrb
dec
inc
inc
mov
cltd
push
test
inc
popa
inc
stc
inc
lret
repnz
cmp
push
push
insb
mov
mov
xchg
lock
cmp
add
mov
lods
adc
push
inc
add
add
clc
sub
clc
pop
shl
add
popa
jo
xor
out
xor
test
scas
test
mov
adc
jl
outsb
fwait
mov
sbb
push
insl
aam
movsb
cmp
adc
int
ror
push
fwait
call
and
dec
divb
jp
sbb
lods
bound
cmc
loop
jge
push
mov
and
js
push
mov
je
or
addl
add
dec
sub
cmp
test
cmpsb
push
mov
pop
in
jmp
jnp
pop
mov
push
data16
daa
nop
cld
andb
insb
xchg
push
sarl
call
sub
fwait
cmp
rolb
adc
xchg
mov
cltd
mov
sub
push
jbe
mov
hlt
lods
lock
outsl
sbb
sarl
popf
adc
jp
inc
sub
pop
pop
push
mov
jb
dec
xor
push
mov
iret
ss
xlat
js
dec
jns
addr16
jno
push
and
mov
jecxz
fsubrl
adc
cmp
in
sub
pusha
out
push
mov
sarl
fmuls
ficomps
mov
enter
pop
lds
popf
and
cltd
add
sub
incl
inc
pop
push
jo
movsb
mov
loope
dec
fiadds
xchg
leave
xchg
in
jmp
mov
lods
jg
negl
outsl
icebp
out
mov
pop
pop
movsl
data16
lock
mov
dec
push
out
jp
outsb
les
lret
iret
outsb
test
or
push
or
mov
mov
test
dec
ja
dec
sub
jmp
pop
cli
mov
xchg
xchg
xor
roll
push
add
or
loopne
dec
add
or
outsb
cmp
bound
xor
push
pushf
lret
pop
imul
mov
out
jmp
jecxz
setno
mov
jle
jbe
push
aaa
inc
test
and
nop
sbb
push
mov
sub
lahf
inc
push
popf
mov
rorl
ss
dec
aaa
aam
pop
sbb
lods
or
or
nop
sub
add
mov
iret
xor
sbb
add
push
jg
ret
aaa
fbld
std
outsl
leave
icebp
das
dec
sbb
das
aas
popf
movsl
out
mov
add
into
pushf
repnz
or
jbe
arpl
push
fs
mov
nop
aaa
test
or
adc
push
mov
imul
cmpsb
jb
inc
push
dec
cmp
mov
jno
dec
loop
addr16
add
jb
and
push
rcr
test
adc
lods
push
xor
push
pop
insb
mov
mov
cmp
adc
push
mov
pop
sarw
mov
imul
inc
xor
add
sbb
mov
lds
jae
lahf
ret
call
or
sbb
adc
mov
mov
inc
inc
js
pop
xchg
imul
xchg
mov
aaa
js
outsb
push
and
xor
xor
mov
fsubrl
rcrl
sub
and
jnp
pop
std
pop
orl
loopne
incl
divb
xor
repnz
es
or
dec
test
lcall
icebp
or
out
rorl
clc
pop
mov
fists
rorb
cmp
and
and
int
mov
pop
jbe
adc
popa
gs
add
stos
xrelease
jns
aad
ljmp
inc
pop
imul
iret
test
cmp
mov
lods
or
mov
mov
std
imul
cld
dec
xchg
mov
or
inc
in
mov
sbb
dec
cmpsb
inc
in
push
cmp
mov
cmc
inc
fmull
or
ret
or
xchg
add
pop
inc
outsl
cld
add
sub
inc
int
inc
mov
push
lret
das
xchg
sahf
cwtl
ret
sbb
jno
icebp
insb
pop
mov
sbb
inc
inc
cmp
pop
subb
push
ficomps
add
push
jne
stos
gs
ljmp
bound
xor
cs
inc
inc
add
cmp
xor
inc
sbb
sub
or
aam
mov
insb
push
lds
mov
adc
hlt
clc
repnz
ja
mov
stc
and
adc
adcb
fdivr
mov
pop
push
pop
or
ss
js
dec
mov
popf
or
ja
ds
inc
jo
lea
cwtl
or
add
lahf
cltd
ret
push
or
pop
jmp
cs
sbb
sub
push
cmpsb
add
testb
xchg
mov
pop
mov
faddl
dec
pop
js
aad
mov
cmpsb
es
lret
or
push
test
inc
fbstp
les
int
xor
mov
jl
xchg
pop
out
ljmp
mov
pop
lods
push
or
sahf
imul
int
lret
sbb
outsb
ret
cltd
jne
addl
loope
mov
stos
jae
xchg
xchg
pop
testl
mov
enter
lds
or
sbb
sub
pop
lcall
jmp
jp
mov
xor
or
mov
movsl
sbb
cmpsl
and
fbstp
mov
adc
xchg
shrb
jecxz
loopne
lock
add
adc
arpl
jge
xchg
cli
and
loopne
test
daa
movsb
mov
push
int3
push
lcall
add
shll
lea
cltd
repnz
out
xlat
insb
or
cmp
mov
std
sbb
lods
mov
dec
pushf
movsb
sub
cmp
fptan
and
inc
lret
cwtl
scas
or
leave
push
dec
aas
mov
insb
das
xchg
js
sbb
mov
sbb
outsb
xchg
neg
adc
dec
fcoml
bound
in
repnz
lea
cmp
mov
int3
push
nop
insb
js
sbb
xor
psubq
mov
outsl
mov
and
push
out
movsl
in
cmp
push
push
xchg
mov
jg
out
clc
mov
test
in
or
mov
push
push
mov
mov
in
adc
mov
cmp
push
movsb
pop
push
xor
xlat
dec
les
cmc
adc
loopne
mov
mov
stc
sbb
mov
lods
xchg
cld
nop
xor
xor
mov
shrl
scas
leave
push
loop
inc
mov
filds
int
ficomps
lahf
and
lods
and
cmp
push
out
push
popa
test
mov
mov
stc
push
es
lcall
fistps
imul
es
ret
int3
test
xchg
sbb
lahf
mov
mov
cmc
cmp
push
push
cmp
in
mov
fistpll
pop
clc
cmp
jo
and
dec
xor
das
lods
arpl
jle
xchg
ss
xchg
xor
dec
mov
sbb
ja
scas
dec
mov
xchg
xchg
jne
arpl
test
push
pop
in
xchg
rorl
clc
pop
sbbb
sub
mov
cmp
bound
inc
or
loop
jg
mov
inc
test
dec
icebp
mov
sti
cmp
pushf
loopne
jne
jne
in
cmpsb
pop
mov
mov
dec
pushf
inc
imul
add
shr
inc
jp
adc
push
jns
xchg
fcomps
data16
data16
and
sti
sbb
andl
xchg
cld
sbb
xor
and
add
sti
sets
lds
dec
pop
fdivl
fstl
xchg
out
sahf
ja
shl
data16
jl
jmp
pushf
adc
int3
pop
sbbl
mov
push
or
mov
sbb
nop
fwait
jne
and
decb
sti
shll
dec
je
pop
outsb
inc
roll
jge
fs
xchg
sub
or
jne
cmc
aad
jns
cli
stos
cs
fmuls
inc
mov
shrl
push
sbb
xchg
adc
pusha
arpl
sub
cmp
dec
in
jecxz
add
sub
fnclex
adc
push
dec
loopne
xchg
std
rorl
or
mov
lods
xchg
shll
lock
or
out
les
xchg
mov
stos
push
repz
mov
outsb
mov
movsl
test
std
adc
andl
push
loope
adc
pop
mov
inc
xor
movsl
test
or
jne
mov
xchg
aam
adc
dec
movsb
loop
ja
sub
movsb
pop
cmp
xchg
sbb
mov
xor
adc
cmpsl
gs
sbb
outsb
test
xor
sub
push
jo
sbb
movsb
pop
rol
or
sahf
leave
addl
rep
aad
arpl
sbb
jp
aas
mov
js
push
rclb
popa
push
into
es
sub
or
das
pop
stos
push
mov
enter
sub
mov
jnp
jb
pop
xor
or
iret
pop
push
add
pop
cs
mov
lods
shl
pop
test
js
rcrb
fs
pop
loopne
bound
icebp
adcl
dec
movsb
jmp
push
fdivrl
lret
jo
xchg
lods
inc
test
testl
addr16
flds
aad
sbb
lcall
adc
shl
fs
sbb
push
mov
adc
outsb
xchg
addl
aaa
sbb
xchg
dec
mov
push
popf
pop
sub
push
jns
test
outsl
test
jl
mov
sar
mov
xor
shlb
das
filds
mov
test
bound
int3
fwait
je
sbb
lahf
mov
xlat
cmp
cmp
cmp
mov
fimull
movsb
roll
bound
xchg
adc
ja
sar
mov
xlat
xor
fnsave
arpl
daa
dec
sub
jo
aam
vmwrite
xor
xor
add
mov
pop
mov
es
ljmp
fisubrs
aam
and
mov
push
mov
inc
or
push
jp
mov
rolb
jae
movsb
mov
jecxz
and
or
cwtl
ret
hlt
pop
or
jo
loop
xchg
dec
adc
lods
mov
dec
or
add
sbb
out
ret
out
sub
out
in
rorl
outsl
fmull
jns
fbstp
out
clc
ljmp
call
fdivs
gs
fimull
aam
and
xchg
xchg
xor
pop
mov
mov
dec
mov
pusha
jp
xchg
push
shr
cmp
add
pop
inc
xor
rorb
xor
dec
push
rcrl
out
shll
out
add
cmpsb
cltd
push
pop
push
in
fdivrs
push
inc
repnz
outsl
add
pop
pop
subl
mov
fnstsw
mov
adc
das
add
xchg
xchg
sub
sti
inc
mov
mov
inc
pop
bound
leavew
xor
mov
lcall
jl
sbb
xchg
and
sub
mov
imulb
aas
test
inc
sbb
sub
dec
xchg
lock
rcrb
inc
imul
sbb
adc
or
xlat
lds
push
sub
mov
loope
add
jae
cwtl
fwait
rolb
rol
jnp
cmp
sbb
subb
or
out
mov
jge
clc
ss
mov
repnz
loopne
mov
jl
shrb
neg
orb
out
mov
imul
sar
sti
or
mov
mov
xchg
and
iret
int3
mov
mov
sbbl
scas
rorl
jnp
arpl
dec
lods
xchg
pop
fmul
pop
int
mov
cmpb
popa
fs
test
sbb
int3
xlat
insl
cmp
mov
popf
aam
add
xchg
inc
mov
xchg
stos
push
inc
pop
cmpsl
dec
cmp
cltd
je
in
cmp
lods
ja
imul
daa
icebp
pop
call
rorb
push
inc
inc
iret
push
pop
add
sub
js
xor
mov
xor
iret
insl
mov
cmpb
addr16
xor
xor
sub
dec
rcrl
or
or
and
mov
loope
movsb
and
add
push
cli
jmp
mov
pop
pop
jno
adc
aas
loope
xchg
jns
xor
ror
jmp
leave
aam
push
mov
movsl
sti
inc
insb
push
js
in
jnp
mov
push
add
jo
mov
loopne
xor
gs
mov
mov
mov
clc
mov
fnstenv
sbb
rcrl
mov
inc
insb
ret
mov
jbe
adcl
jae
cwtl
pusha
inc
bound
xor
lea
shl
les
test
in
pusha
adc
pop
lcall
xor
sarl
dec
mov
test
in
ret
xorl
or
inc
out
out
sbb
shlb
int
or
add
dec
and
xor
dec
arpl
push
mov
jmp
xor
add
cli
sbb
int
cld
ror
gs
and
jmp
test
cmpsb
jbe
sti
aaa
imulb
lahf
mov
add
mov
cmp
sbb
sub
dec
lcall
add
test
bnd
inc
rolb
rcll
iret
orl
and
add
leave
or
into
mov
jp
xor
int
daa
pop
sbb
mov
jmp
call
or
stos
mov
lcall
filds
popf
pop
push
push
and
mov
ja
push
pop
sahf
sqrtps
and
popl
lock
inc
loope
fstl
xchg
jne
int
and
add
xchg
sbb
xchg
mov
jnp
or
out
xchg
aas
lcall
dec
cmp
cmp
xchg
fcmovb
jns
mov
pop
xchg
loopne
in
cwtl
test
mov
cld
jbe
aas
jns
mov
adc
stos
aad
or
fucomp
adc
xor
push
dec
adc
cmp
outsl
mov
jae
mov
adc
sbb
incb
lret
into
repz
pop
and
clc
add
dec
es
les
arpl
adc
stc
stos
cltd
cmp
push
dec
imul
leave
adc
stc
dec
std
test
inc
jg
xor
adc
cld
std
adc
jbe
jns
push
push
jne
lahf
cwtl
add
loopne
pop
cmpsb
and
andl
xchg
lods
adc
dec
jge
push
subb
leave
ds
clc
aas
sub
lock
das
jmp
xchg
cmp
xor
ds
inc
xchg
into
hlt
cmp
and
mov
out
jo
sbb
call
fsts
push
es
jne
mov
aas
ds
inc
int3
pop
sub
out
cmp
sbb
jle
xor
loopne
lock
pop
mov
sbb
cwtl
mov
sbb
sbb
loope
pop
imul
xchg
mov
jbe
cmp
adc
xor
mov
fdivp
dec
nop
call
aas
and
pop
cmp
cmp
and
and
repnz
pushf
mov
test
outsb
sub
sub
push
cmpsl
cmp
fnsave
fisubs
mov
mov
jmp
ss
scas
js
mov
fisttpl
pop
push
call
xor
repnz
cmpsb
dec
pop
dec
cmc
mov
jl
mov
adc
push
add
cmp
mov
inc
clc
mov
loopne
adc
jns
sbb
test
add
stc
mov
sub
ds
adc
mov
inc
xchg
test
fimull
pop
enter
xor
xchg
or
testl
or
std
mov
xor
dec
lods
cmp
je
dec
imul
push
dec
mov
push
jecxz,pt
mov
in
cmpsl
js
lret
stc
js
scas
lcall
sahf
fs
mov
or
mov
adc
add
push
sbb
xor
add
test
lods
into
dec
jle
dec
jg
ret
jns
das
add
cli
jo
movsl
cmpsl
push
shll
sub
jno
inc
push
in
lods
adc
lret
mov
and
fldcw
mov
decl
and
jle
fwait
into
out
ret
jno
sbb
dec
mov
dec
dec
push
xor
and
or
test
cmp
mov
loope
fwait
fwait
adc
add
ret
jne
jno
push
or
pop
xor
int3
enter
inc
xor
and
hlt
push
dec
adc
xchg
arpl
mov
xor
xchg
push
outsl
push
mov
shrb
jnp
dec
mov
or
mov
mov
mov
insb
insl
sub
jmp
cltd
loop
push
pop
xor
xchg
jo
icebp
mov
rcrb
sarl
sbb
aam
sbb
int3
mov
dec
sahf
enter
stos
in
cli
fsubs
clc
loopne
das
and
xor
fldenv
rcrl
push
mov
jmp
js
je
fldl
mov
into
mov
and
popa
in
xchg
mov
pop
mov
xor
popaw
push
test
clc
mov
sub
dec
mov
xchg
loope
or
data16
dec
int
lahf
scas
pop
pop
sub
inc
mov
inc
lea
test
inc
adc
mov
jo
pushf
test
add
adc
bound
out
daa
dec
xor
into
out
lds
or
push
lret
adc
sti
insl
aaa
xlat
cld
xchg
lcall
aas
or
test
bnd
pop
sub
pop
movb
fs
testb
dec
sub
jno
pop
cmp
fldt
inc
push
sti
in
into
imul
popa
push
gs
xorb
and
pop
scas
shll
call
mov
in
scas
cmpsl
push
ret
mov
mov
lahf
sbb
out
lds
jge
cld
mov
xor
sti
aaa
les
push
std
ljmp
adc
ret
dec
jl
les
mov
xchg
bound
mov
push
mov
imul
sub
mov
ficomps
shl
jae
push
or
cli
lret
iret
call
scas
daa
and
add
push
mul
loopne
jge
xor
mov
push
cmp
jno
xor
andl
js
cmp
ja
dec
nop
sub
repnz
jns
jb
cmp
or
in
sbb
mov
outsb
sbb
mov
mov
shrl
jg
cmp
ds
add
call
aad
jg
push
push
leave
pop
ficoml
in
jge
adc
cltd
mov
sbb
lea
mov
rol
scas
mov
inc
popf
icebp
mov
cmpsl
insl
lods
data16
ja
jmp
mov
add
jmp
fwait
or
add
clc
sub
int
mov
sub
pop
test
sbb
xchg
loopne
sbb
rorl
out
arpl
pushl
adc
adc
cli
and
bound
sbb
xchg
xchg
es
jecxz
dec
aas
sub
daa
mov
cmp
jmp
pop
push
pop
aaa
fadds
lret
imul
mov
dec
bound
xor
add
inc
aad
out
mov
sbb
sbb
push
xchg
stos
mov
test
sbb
xor
sub
adc
addr16
and
into
aad
clc
test
xchg
jmp
cmpsl
or
sbb
cmp
adcl
out
sbb
ror
sub
mov
sbb
lcall
and
in
lock
adc
jg
pusha
out
mov
pop
in
jb
loopne
jl
mov
movsl
rcll
hlt
dec
cmpsl
imull
cmpl
xor
out
js
js
add
addr16
xchg
sbb
out
nop
or
mov
jmp
inc
movsb
push
sbb
test
dec
stc
add
cmpb
mul
in
or
in
sub
jbe
or
xor
cwtl
pushf
icebp
outsb
sarb
int3
imul
mov
adc
jno
adc
or
mov
test
arpl
je
mov
jbe
fcmovnb
mov
popf
jb
loope
aas
subl
pop
mov
cmp
gs
mov
push
cwtl
mov
rclb
ror
shrb
pop
dec
xor
iret
adcl
loope
pop
push
mov
adc
sbb
push
inc
addr16
insb
push
mov
mov
push
mov
push
ss
mov
cmp
sbb
or
in
pop
inc
in
div
sub
cmp
out
dec
lcall
xchg
bnd
dec
add
add
outsl
xchg
icebp
hlt
fcmovnbe
fists
in
mov
mov
cld
mov
and
jg
cmp
cmpsl
inc
stos
mov
fcomps
je
jnp
push
cmp
inc
pop
je
test
push
xchg
mov
pop
into
push
jnp
xchg
pop
jne
popf
sti
xchg
adc
sub
add
stos
pop
push
imul
jb
es
dec
enter
or
pop
div
les
loope
mov
xor
mov
mov
stc
sub
mov
fidivrl
cmp
cmp
jge
cmpsl
mov
enter
cmpsb
pop
push
jo
aaa
leave
popa
lcall
lcall
push
loopne
pusha
not
or
xchg
pop
ja
jbe
push
test
das
gs
xchg
movsl
lret
cmp
out
cmc
stos
add
icebp
dec
and
icebp
jae
mov
adc
cmp
jb
cmp
test
leave
loopne
shll
push
sbb
and
dec
adc
stos
jmp
push
rcr
xchg
loop
push
mov
fsubrp
in
js
out
mov
adc
push
int
push
popa
mov
bound
xchg
repnz
int
in
mov
mov
mov
nop
or
adc
pop
mov
incl
test
aaa
pop
stos
faddp
sbb
and
xor
lock
xlat
rcll
aaa
push
fisubl
lods
xorl
fidivrs
and
sub
imul
popf
sub
mov
push
push
push
push
in
sbb
pop
pop
movl
jle
jmp
xor
inc
xchg
in
aaa
insl
mov
jno
cli
cmp
pop
test
cmpsb
mov
out
stos
sarl
jle
push
mov
hlt
mov
out
add
push
add
ja
insl
icebp
and
lahf
sbb
sbb
or
repz
in
aaa
sbb
jns
dec
and
sub
cli
cmpsb
sub
xchg
or
test
sub
mov
movsl
mov
pop
push
pop
adc
fadds
mov
push
xor
cmc
test
and
sub
pop
fcmovu
sar
xchg
adc
ja
mov
aaa
popa
cmovb
dec
sub
xchg
lcall
pop
adc
mov
mov
std
or
rolb
les
mov
fdivs
insl
xor
mov
push
inc
jns
data16
stos
adc
iret
mov
aad
and
jmp
test
jbe
adc
push
stos
inc
sbb
in
outsl
cmp
adc
dec
push
pop
jo
data16
call
mov
push
mov
lock
add
test
mov
add
jo
movsb
sub
aas
xor
xchg
add
lods
imul
mov
jns
sahf
or
push
es
mov
bound
pop
repz
addr16
xorps
lods
push
xchg
or
inc
scas
inc
or
test
std
jmp
jg
ja
loop
mov
ljmp
adc
adc
push
mov
mov
adc
pusha
loop
nop
mov
icebp
sub
sub
out
xchg
in
mov
jg
xchg
inc
sub
fcoml
addr16
cmpsb
mov
shll
fs
jbe
ret
xchg
inc
sub
imul
sbb
pop
mov
shlb
ds
ljmp
fs
fdiv
imul
jbe
mov
sbb
xor
cltd
pop
sub
jl
sbbl
inc
xchg
mov
das
clc
das
dec
data16
das
mov
mov
dec
movsb
arpl
add
and
push
push
loop
mov
sbb
repz
add
in
ljmp
pop
dec
sbb
orb
inc
or
xlat
or
lock
mov
movd
sbb
mov
rclb
loopne
lds
sbb
hlt
mov
adc
xchg
loope
xor
pop
mov
sahf
fs
add
cli
movsl
test
xchg
sub
enter
xor
rolb
adc
xchg
mov
sbb
mov
imul
cmpsb
das
pop
pop
aas
int
pop
pop
out
jmp
leave
mov
std
mov
and
dec
and
test
mov
leave
inc
cmc
leave
xchg
cli
repnz
cmp
jae
clc
adc
push
lods
shll
ficomps
ljmp
mov
stos
push
jl
fstps
imul
mov
pop
mov
sub
rol
sub
lds
daa
pop
cwtl
shl
rcrl
push
lret
push
in
jnp
xor
out
jnp
inc
push
cmpsb
xor
sbb
sbb
aam
das
test
mov
fs
es
adc
out
std
mov
and
lret
ret
and
cmp
cmp
xchg
aam
out
cmpsb
xlat
push
repz
imul
outsl
dec
fdiv
mov
bound
push
xor
jns
rcll
push
dec
add
and
adc
popf
xchg
mov
mov
into
sti
jno
repz
pop
notl
push
enter
ja
es
xor
bound
stos
dec
data16
lods
mov
into
mov
ds
xor
popa
cmp
pushl
add
xchg
ds
sub
sbb
lahf
rorl
jge
dec
scas
push
aaa
push
xchg
push
std
xchg
repnz
stos
jnp
mov
inc
pop
lcall
shlb
inc
daa
mov
inc
or
scas
icebp
das
js
popa
pushf
or
cmpsl
insb
and
stc
sub
ret
scas
xor
in
mov
xor
hlt
test
rcrb
mov
pop
neg
pushf
sub
scas
sarb
xor
test
sbb
mov
nop
mov
lahf
mov
aad
shr
cmp
decb
mov
lods
in
call
mov
int3
shrb
sub
shl
aam
xor
xchg
fdivl
inc
xor
add
jg
mov
push
fistpl
sahf
test
jbe
pushf
aad
mov
addb
icebp
test
outsl
pop
push
sti
jp
and
loop
xchg
mov
lds
mov
ret
sarb
aas
mulb
daa
cmp
cpuid
inc
clc
inc
add
aas
add
ret
push
jne
push
cmp
fwait
daa
pop
ud1
hlt
ljmp
ljmp
imul
inc
je
faddl
inc
push
cmp
inc
outsb
and
arpl
mov
in
jg
push
mov
xor
push
inc
fidivrs
cld
leave
jbe
or
call
mov
dec
mov
or
jl
scas
sbb
popf
add
dec
inc
mov
icebp
pop
cld
mov
sbb
jecxz
or
xchg
fcmovnb
jbe
shld
pop
mov
insb
dec
inc
push
inc
push
in
cli
and
push
call
xchg
mov
or
mov
sahf
push
dec
xchg
sbb
lea
xor
pop
jbe
test
sbb
mov
cltd
mov
inc
fidivrl
adc
xchg
mov
mov
in
out
mul
push
fs
sbb
gs
pop
sbb
sub
xchg
mov
insb
dec
and
das
lds
in
test
andl
jne
cs
mov
ja
xchg
inc
push
lret
and
scas
push
adc
cmp
or
jns
rcr
aaa
int
pop
insl
pop
or
orl
pop
xchg
xchg
cwtl
scas
inc
cmp
inc
insb
call
fbld
push
mov
pop
cmc
mov
sbb
in
sub
cmp
shll
mov
mov
and
xchg
repnz
push
fiadds
cmpl
ficompl
sub
mov
jns
mov
xor
xor
dec
test
mov
cmpsl
xchg
cmc
adc
setle
outsb
aaa
sbb
and
and
in
xchg
add
test
lods
into
adc
subl
ret
call
pop
test
mov
es
xor
jo
movsl
push
repz
inc
xor
testb
cmc
cmpsl
aam
clflush
rolb
jl,pn
out
cmp
sti
mov
inc
xchg
inc
sub
lock
push
mov
cmpsl
mov
mov
les
sub
jmp
xor
mov
rcl
cmp
mov
stc
leave
xchg
movsb
and
daa
sbb
jne
or
loope
iret
cmpsl
cmp
es
sbb
xchg
aas
adc
lods
out
lret
mov
mov
dec
push
xorb
add
data16
icebp
sbb
scas
mov
xchg
pop
mov
stos
mov
loopne
xor
daa
hlt
inc
sbbl
inc
sub
jp
sahf
std
out
add
daa
xor
idiv
inc
fidivrl
inc
sti
adcb
or
sahf
jbe
add
xor
pop
xlat
gs
sub
mul
cld
imul
int3
iret
push
dec
orb
jge
push
add
mov
in
test
push
xchg
mov
test
jne
sbb
xchg
jl
mov
aam
and
add
arpl
ret
push
cmc
sarl
push
sbb
mov
sbb
cltd
xor
xchg
add
sub
mov
pop
mov
sub
xchg
dec
clc
dec
sbb
cmc
cmp
addr16
jecxz
jb
iret
sbb
and
pop
mov
add
cmc
jl
dec
enter
push
ret
and
adc
iret
movsl
cmp
mov
push
xchg
dec
mull
std
xchg
or
loop
aad
imul
sub
stos
xchg
pusha
loopne
shl
das
hlt
xor
push
pusha
out
cwtl
mov
jne
popf
insb
xor
cs
jae
loop
test
or
adc
xchg
inc
pop
mov
insb
inc
pushf
xor
xchg
andl
jg
fstpt
xchg
std
cmp
add
shl
cwtl
ficoml
outsb
loope
jbe
cli
rcrb
int
loope
pop
out
mov
mov
dec
adc
and
shrb
xchg
pop
dec
mov
pop
mov
ficoml
cmpsb
ds
mul
push
aam
out
or
std
and
jne
cmp
jnp
icebp
mov
mov
push
mov
outsb
xchg
inc
xchg
mov
sahf
fisubs
xchg
into
out
cmp
rorb
mov
xlat
imul
xor
and
dec
sbbl
in
aaa
push
pop
xor
je
xchg
cmp
inc
lret
adc
sub
jnp
mov
out
pop
and
sub
mov
push
aad
dec
cmp
push
fdivrs
add
mov
dec
push
pop
push
sub
pop
sti
aad
je
jmp
sbb
jo
xor
cltd
add
xor
hlt
mov
mov
jo
jl
leave
sub
jno
xor
ja
dec
inc
sbb
std
lds
fcoml
mov
or
arpl
push
scas
icebp
mov
jle
nop
pushf
das
out
ret
adc
mov
jb
and
push
push
xchg
sbbl
aam
push
push
out
je
xor
pop
fimuls
test
inc
scas
or
insb
lcall
sub
push
daa
test
lret
and
and
fdiv
aad
stos
mov
dec
pop
push
xchg
sub
bound
test
sub
das
int
inc
scas
lods
cmp
or
adc
icebp
mov
push
divb
xchg
daa
cmpsb
addr16
enter
adcb
nop
xchg
mov
mov
stc
popa
or
jg
dec
pop
sbb
mov
lock
and
dec
popa
lds
int3
xor
out
jmp
add
lret
cmp
stc
fidivrs
inc
sbb
mov
aad
leave
pop
aad
xchg
scas
xor
cmp
popa
daa
xchg
test
push
rcll
repz
aad
jbe
cld
mov
out
and
pop
mov
shlb
lea
lret
aaa
sub
in
pop
xor
sub
and
xor
mov
cmpl
les
push
push
jp
or
mov
or
jnp
ja
loop
adc
push
jmp
add
adc
loop
data16
fwait
in
inc
les
sbb
dec
pusha
in
jb
mov
insb
mov
inc
popa
pop
mov
sub
rcl
lret
sub
ret
adc
push
pushf
inc
push
data16
adc
fsubs
or
inc
stos
or
das
pop
scas
shrb
imul
jne
inc
push
fwait
out
pushf
std
mov
inc
push
sbb
popa
sbb
adc
shll
add
aam
rol
adc
in
mov
pop
push
addr16
mov
push
loopne
mov
push
or
mov
div
cwtl
mov
xchg
adc
jb
sbb
jp
jl
jmp
adc
jo
and
inc
mov
and
inc
stos
jnp
mov
or
pop
xchg
xlat
rclb
pusha
test
aaa
movsl
in
loop
fistl
jae
stc
push
or
lock
fsubl
or
pop
add
mov
sub
jns
push
sub
mov
shll
add
lods
pop
ss
mov
ficoms
mov
jo
xchg
push
sbb
mov
sbb
pop
bound
stos
call
jo
ja
push
imul
adcl
dec
and
enter
inc
mov
leave
fwait
scas
fisttpl
ljmp
std
das
hlt
lret
xchg
in
dec
sti
cmpsl
hlt
pop
sub
insb
pushf
cmp
daa
mov
inc
cmp
das
roll
cli
repz
jg
jne
stc
sahf
iret
push
jne
enter
leave
cmp
xchg
cmp
loop
je
xchg
dec
push
mov
lods
loopne
nop
mov
stc
cmpsb
jbe
sahf
fsubr
xor
roll
xchg
sub
mov
jg,pn
jecxz
add
xchg
inc
jl
dec
je
xor
je
je
loopne
jae
push
inc
ret
dec
stc
rcrl
out
jo
cmp
arpl
imul
inc
in
mov
mov
hlt
out
xchg
and
jne
popa
pop
dec
sub
xchg
jbe
mov
mov
aad
and
sbb
bound
das
pop
inc
add
cmpl
mov
push
sahf
push
sub
and
cld
mov
imul
sub
pop
inc
cwtl
jae
and
mov
lods
mov
pop
push
jne
adc
adc
popf
lock
pop
cli
lea
mov
arpl
iret
inc
jo
cli
repz
loopne
pop
cli
nop
push
jge
mov
add
sub
jle
mov
stos
stc
push
and
ret
stos
xchg
mov
push
scas
mov
mov
jbe
aas
lret
add
dec
or
or
xor
jmp
ja
movsl
shrl
push
jbe
data16
inc
mov
out
pop
xchg
or
cmp
jno
jo
mov
sub
scas
fildll
push
sbb
mov
rcll
push
pop
mov
xor
je
sbb
jmp
dec
pop
inc
int3
popf
sahf
xchg
negl
mov
push
in
fwait
push
mov
push
xchg
inc
mov
push
je,pt
sub
test
xchg
test
mov
add
cmp
loop
pushf
add
sub
jle
push
roll
or
dec
test
sub
push
mov
sahf
fwait
or
mov
sarl
mov
cld
dec
jne
fstl
aas
jo
and
out
cmp
sbb
xchg
sub
inc
movsb
mov
sbb
data16
push
and
fdivrs
push
in
data16
or
jae
mov
in
jns
test
pop
insl
clc
mov
push
imul
sub
cmp
into
dec
mov
jg
sub
sar
popa
inc
jge
xchg
adc
bound
ret
mov
pushf
es
cmc
push
stos
pop
outsl
daa
stc
or
rolb
es
or
repz
scas
jg
mov
or
add
dec
mov
jb
mov
ret
in
xchg
imul
fldl
add
in
or
pusha
jb
dec
pop
pop
sbb
ja
jae
cltd
and
dec
or
sbb
arpl
aas
lds
cld
jbe
out
cmp
loop
int
pop
into
adc
repz
lea
xor
push
push
es
push
pusha
pusha
xor
adc
stos
test
ljmp
fwait
add
push
jbe
pop
or
mov
subb
or
push
inc
sub
inc
and
fcos
sbb
lret
push
xor
mov
jp
xchg
insb
pop
inc
xor
fwait
cmp
ds
lret
and
inc
xchg
inc
cmpb
out
imul
rcrb
jnp
pop
pop
lcall
fnstenv
in
push
js
or
sub
xor
repz
shl
negb
sarb
loopne
push
aas
xor
int3
cmpsl
rorb
jo
lea
test
roll
movsb
repnz
rcrl
arpl
push
fcoml
pop
and
jno
ret
sbb
sbb
pop
lods
mov
inc
jae
into
sub
je
testl
outsb
ljmp
and
icebp
into
cwtl
cmp
int3
push
mov
out
cmp
sub
stos
icebp
sub
push
pop
add
lds
jge
xor
sbb
pop
jmp
mov
jmp
rcrb
or
mov
inc
cmpsb
adc
cld
jnp
add
std
shlb
stc
scas
add
dec
and
inc
fnsave
xchg
es
sti
into
mov
mov
mov
shrl
iret
add
sbb
inc
adc
nop
out
cmp
mov
cmpsb
jbe
add
das
sbb
mov
push
enter
bound
pop
sub
sahf
push
out
inc
cmc
jp
cmp
mov
aas
lret
lock
lret
in
or
ret
xchg
jbe
inc
sbb
loopne
rorb
mov
lea
xchg
loopne,pn
sub
jbe
dec
jp
int
xchg
clc
jge
add
ljmp
bound
inc
jae
ja
fisubl
sbb
aad
inc
movsl
pop
leave
enter
roll
mov
pushf
adc
sarb
ret
fidivl
popa
repnz
push
inc
pusha
xchg
movsl
mov
lret
fsubl
sahf
popf
sbb
xchg
lea
push
in
out
pop
test
xchg
jnp
adc
out
shl
jmp
arpl
rcl
lahf
adc
jp
fisttps
mov
xchg
mov
push
add
stos
add
mov
mov
pop
cmp
jp
fdiv
mov
xchg
sarb
int
insb
xorb
imul
es
or
cmp
add
dec
push
mov
scas
in
push
out
in
add
xor
das
push
xor
adc
jae
sti
rol
lods
dec
pop
xorl
lock
es
and
in
push
sbb
fsubrl
pop
mov
sub
shll
pop
inc
clc
sahf
stc
or
mov
add
pusha
cmpsb
add
pop
push
ss
inc
inc
setge
jmp
push
mov
arpl
adc
in
fdivr
movsb
lahf
inc
mov
leave
push
push
loopne
xchg
ja
cmp
add
add
cmp
aad
jbe
daa
es
imulb
mov
push
inc
xchg
lahf
jns
fwait
push
lea
xchg
lods
fldl
dec
sbb
test
lret
fistpll
jo
inc
fdivrl
mov
pop
out
lods
mov
mov
inc
pushf
mov
aad
push
movsb
insb
fucomi
cmp
nop
pop
or
inc
fs
dec
jge
sar
outsl
mov
push
pusha
xchg
mov
mov
out
cmpsb
fiaddl
push
or
daa
dec
movsb
xchg
push
int3
jno
in
cmc
sti
push
cmp
sub
loopne
cmp
mov
mov
sub
jle
cmp
outsl
dec
inc
test
sbb
or
insb
idivb
mov
loop
cmp
in
rolb
inc
xor
cmp
dec
rorb
pop
out
push
cltd
scas
inc
mov
xor
push
test
jge
in
xor
sbb
or
bound
cmpsb
push
mov
scas
daa
cmpsl
mov
push
xchg
or
xor
scas
mov
fdivrp
cmp
mov
ljmp
lret
leave
sbb
mov
or
push
pop
lret
scas
testb
fcmovu
stc
rcl
mov
test
jmp
or
push
pop
inc
pop
bound
push
inc
loope
dec
pop
popa
andl
loopne
pop
xor
pop
icebp
lea
pop
cmp
push
leave
rcrb
jb
stc
lcall
int
test
sub
sarl
mov
loopne
push
pop
loope
and
mov
xlat
dec
repnz
nop
xchg
aam
int
cmp
jecxz
movb
or
stos
jb
lods
cmp
jge
insl
sub
call
mov
cmp
add
push
add
out
fadd
out
adc
adc
mov
xchg
cmp
dec
jb
mov
or
lret
sbb
mov
pusha
enter
lret
lds
mov
push
in
mov
test
pop
mov
or
loope
repz
mov
repnz
aam
xchg
jle
cmpsb
es
repz
add
mov
mov
pop
dec
sbb
cmpsl
test
dec
jl
fs
dec
xchg
cmp
jle
mov
mov
or
cmc
or
xchg
ffreep
in
inc
adc
sarl
lret
jo
scas
int3
pushf
xor
mov
fs
push
enter
movsl
sbb
iret
sub
mov
inc
cs
arpl
and
ljmp
fwait
lahf
mov
inc
stos
pop
xchg
xchg
mov
les
lds
add
shlb
cmp
repz
jno
and
pop
mov
cmpsb
sub
fiaddl
adc
mov
xchg
xchg
mov
inc
xor
insl
ret
ret
cwtl
cltd
icebp
adc
aas
sub
push
xchg
dec
lock
into
dec
lea
sahf
push
jo
lahf
rcrl
out
sbb
jno
inc
and
xor
cmp
jmp
and
lcall
pop
lods
enter
add
cmp
gs
xchg
mov
push
push
subb
std
add
loop
pop
sbb
mov
hlt
cs
xchg
pop
xchg
out
jnp
lcall
cmp
pop
and
es
testb
mov
xor
lods
add
mov
aas
mov
sbb
scas
mov
dec
mov
test
nop
pop
gs
add
cltd
lahf
cmp
cwtl
sets
dec
adc
icebp
mov
das
adc
mov
in
in
inc
std
repnz
fdivs
jnp
aas
dec
sbb
movsb
lret
ret
in
sbb
mov
daa
dec
stos
sbb
repz
cmp
sub
pop
arpl
les
xor
js
pop
jne
mov
cld
movsl
vpmulhw
hlt
pop
stos
test
xor
mov
sub
mov
loopne
push
loope
mov
pop
or
orl
inc
adc
push
mov
inc
in
mov
xchg
ror
cmc
jae
in
cld
cltd
sbb
add
pop
cmp
data16
xchg
in
xchg
int
movsl
inc
outsl
push
mov
xchg
enter
mov
push
fidivs
cmpsb
fs
or
lods
xchg
xchg
xchg
jbe
adc
dec
gs
mov
stc
repnz
stos
jns
bound
sbb
pop
call
pop
cli
testb
and
fistpll
sbb
stos
mov
mov
sbb
mov
sub
push
fwait
xchg
adc
loop
sub
outsl
addb
push
fcomps
movsb
test
ja
add
testl
test
imul
adc
dec
in
into
push
and
ss
pop
cltd
js
es
ljmp
or
stc
int3
pop
dec
filds
repnz
sti
popa
mov
scas
xor
push
mov
jmp
xchg
rclb
pop
addr16
jb
fisubl
dec
mov
adc
xchg
adc
jl
gs
push
jge,pt
xchg
int
sti
cmp
push
jo
pop
nop
dec
add
push
push
pop
jns
outsb
jp
or
xor
pop
lds
and
ljmp
push
insb
mov
enter
sbbl
out
dec
inc
repnz
dec
sbb
add
inc
movsb
dec
sub
and
faddl
mov
or
and
add
sbb
inc
sbb
push
xchg
push
and
in
xchg
in
pop
std
xor
sbb
movsl
jns
lret
adc
out
push
fistpll
rcll
andps
mov
ret
add
dec
push
jne
mov
mov
stos
jge
hlt
fisttpll
scas
loopne
enter
icebp
pop
jns
jb
pop
or
cld
xorl
push
xlat
jg
or
and
jl
fcomps
fxch
xor
ds
pop
xchg
mov
mov
xchg
pop
fsub
push
jnp
adc
rcl
xor
fiadds
xlat
in
lea
pop
pop
popf
push
roll
lods
jb
ja
mov
aas
rorb
inc
push
ds
call
jg
mov
popa
jp
ficoms
mov
cmc
sahf
sub
outsl
mov
sahf
in
xor
in
or
mov
push
lds
outsl
inc
cmp
in
aaa
xchg
shlb
cmp
lcall
jns
aaa
loope
mov
cld
inc
je
jb
mov
nop
jl
jle
dec
fmul
cld
mov
ret
jo
mulb
loopne
fwait
testb
pop
int3
jp
lods
mov
mov
arpl
adc
addr16
push
inc
push
and
push
xchg
incb
or
pop
aam
cltd
push
shlb
rcr
and
cld
je
mov
mul
xchg
outsb
data16
add
sbb
and
sbb
out
imul
lret
jnp
add
fxch
mov
mov
pop
loopne
push
lret
xchg
adcb
cmp
cli
pushf
inc
repnz
xor
int
xchg
jge
inc
sub
test
xchg
incb
add
ret
les
filds
sub
sub
push
lock
aas
cmpsl
xor
in
push
shrl
push
fmulp
andb
pushf
xchg
leave
push
dec
push
add
lcall
stos
mov
movsl
mov
mov
xchg
cmp
sub
xlat
mov
xor
jae
stos
in
ja
sbb
jl
or
dec
mov
setg
ljmp
mov
xchg
shll
pop
aad
pop
rcrb
imul
push
jl
scas
mov
cs
sbb
push
jge
out
cli
xor
push
xlat
cwtl
insb
adc
sub
xor
pop
pop
and
stos
test
mov
xor
shlb
inc
shl
inc
xor
out
mov
or
xor
repnz
or
inc
out
mov
cmp
push
aaa
pop
lods
dec
lahf
inc
or
cmp
aaa
jle
sbb
pop
popf
push
dec
test
out
cmp
lods
sub
jne
out
pushf
int
push
mov
jecxz
clc
jb
push
std
jns
scas
rcrl
cmpsb
xchg
enter
ret
jae
cmp
push
outsb
sub
cmp
sbb
pop
push
dec
or
int
adc
mov
fcoms
jmp
jae
test
inc
adcb
xchg
ljmp
movsb
xchg
cmp
addr16
jno
pop
scas
cmpsb
xor
pop
insb
cmp
cli
imul
test
push
jl
hlt
mov
push
sub
popa
push
add
jecxz
cmp
mov
ds
es
jmp
clc
or
lcall
test
mov
inc
enter
rcpps
sbb
mov
mov
frstor
pop
push
cmpsb
aad
or
aaa
xorl
adc
aad
xor
jb
dec
outsb
mov
aam
cmp
jb
mov
pop
xor
popf
hlt
gs
sbb
fs
dec
mov
mov
stc
jnp
sbb
push
sub
mov
or
pop
stos
sub
xlat
std
inc
dec
mov
pop
in
pop
pusha
xchg
adc
mov
arpl
and
adc
adc
mov
pop
jg
cmp
and
and
cmp
imul
add
fistpll
adc
shlb
lea
test
int3
and
shll
cmp
adc
stos
add
mov
fs
mov
mov
test
adc
cmpsb
add
add
cmp
lcall
into
nop
push
jne
jne
stos
cmp
sub
fsubrl
cmp
push
jmp
faddl
into
fcmovb
sbb
out
mov
ds
insl
jge
cld
pop
sbb
sti
jmp
dec
fisubl
mov
aas
sub
or
ds
mov
nop
push
bound
pop
lods
gs
and
stos
sahf
cltd
cltd
mov
or
cmp
and
repz
pop
dec
movsl
lds
mov
inc
lods
cs
cmp
mov
mov
aam
pushf
push
xorb
xchg
stc
mov
lods
xor
in
je
out
push
inc
xchg
and
je
je
jecxz
out
flds
fcomps
nop
int
sub
outsl
movsl
mov
sbb
push
orl
loop
push
add
popa
or
pop
mov
aas
jo
loopne
lds
pop
mov
ljmp
gs
sbb
mov
cmp
adc
sahf
mov
dec
jg
mov
xchg
push
mov
cltd
push
adc
and
stos
rcrl
add
lods
mov
shll
add
movsl
sub
aad
lds
mov
mov
lahf
into
jb
sbb
mov
subl
imul
outsl
arpl
xchg
pop
cs
iret
sbb
mov
scas
pop
adc
dec
mov
je
test
enter
lods
aad
pop
jno
mov
xor
jl
fs
xchg
bound
adc
fcmovne
mov
xchg
divl
add
and
incb
mov
test
ljmp
scas
movsb
add
daa
sbb
add
cltd
movsb
mov
lods
lahf
pushf
rcrl
sbb
movsl
cs
popf
sbb
mov
jmp
adc
sub
mov
roll
repz
shll
jno
fidivrs
pop
andl
icebp
ret
sti
enter
push
loopne
movsl
push
pop
hlt
nop
dec
pop
mov
sbb
cli
lea
adc
dec
inc
xchg
insl
push
push
mov
inc
xchg
lret
icebp
ret
jnp
cmp
pop
pop
nop
lods
adc
divl
lods
inc
xlat
daa
jo
and
xchg
fidivrl
mov
xchg
int
fadd
ret
shrl
shlb
dec
ficompl
or
out
cmp
mov
jecxz
jne
fdivs
das
fbstp
add
in
mov
pop
lock
sub
stc
aaa
xchg
xchg
push
adc
call
sbb
mov
mov
ja
insl
test
push
jne
and
shrl
sub
nop
out
popa
mov
mov
sub
inc
test
xchg
jo
repz
js
mov
in
in
imul
mov
add
or
out
subl
sub
pop
xchg
outsb
sub
jae
aam
idivl
push
movsb
jmp
into
fidivl
sub
movl
dec
fsts
jae
loope
lods
xor
push
mov
sbb
sub
test
imul
sbbb
test
xchg
clc
in
xor
xchg
adc
shrl
sub
jg
inc
repz
stos
dec
mov
movsb
aaa
add
movsb
movsb
popa
sbb
sub
into
push
ds
lods
mov
cwtl
mov
lret
in
pop
mov
test
jo
out
add
push
add
jmp
mov
arpl
popf
imul
gs
je
sbb
out
nop
shr
sbb
orl
iret
xor
sub
jb
fiadds
xchg
mov
xchg
testl
in
leave
adc
les
mov
les
mov
cmp
sti
jp
jg
cmp
or
mov
add
and
mov
cmp
ret
stos
adc
xor
adc
sbb
and
inc
dec
hlt
and
adc
bound
fistpll
and
jmp
ss
jne
inc
xorl
repz
jmp
out
addb
mov
daa
mov
xor
dec
imull
icebp
mul
sti
jg
lahf
mov
imull
sub
inc
jle
dec
xchg
lcall
ret
in
insb
dec
xchg
scas
mov
nop
out
cld
add
push
mov
test
or
test
movsb
mov
pop
pop
fdivrp
repz
in
addr16
jno
push
sub
mov
mov
sub
arpl
cltd
jmp
and
cmp
add
xchg
in
sub
enter
clc
add
sbb
in
mov
mov
lahf
es
mov
nop
inc
lfs
dec
mov
mov
sti
xor
adc
stos
cmp
inc
pushf
push
pop
inc
les
ss
lods
rol
sub
xchg
bound
gs
xchg
add
mov
cmc
xchg
adc
push
inc
lret
fs
adc
fistl
mov
shll
and
or
mov
out
add
test
lea
jae
adc
fldenv
rcrl
mov
adc
xor
daa
push
jmp
stc
and
hlt
adc
cmp
pop
pop
lds
lcall
in
orl
sub
imulb
push
scas
sbb
jmp
fs
mov
cmp
sub
sub
xlat
stos
inc
call
and
test
fstpl
test
add
sbb
stc
and
mov
pop
lret
into
or
shrl
cwtl
bound
pop
test
shr
inc
js
shrl
lods
or
sbb
sbb
stos
add
imul
sub
je,pt
add
sub
ja
push
fwait
daa
cmp
imul
push
jno
int
shrb
in
cld
xchg
dec
dec
orl
inc
repnz
xchg
jbe
sub
test
rol
insb
add
mov
lahf
jns
mov
lea
mov
add
push
mov
imul
orl
or
push
loopne
sti
jp
scas
adc
pop
cld
mov
clc
cmp
cs
adc
sub
outsl
mov
sbb
in
cld
aad
lret
jnp
or
bound
pop
push
fiadds
out
out
pop
dec
repnz
mov
test
int
and
call
idivl
or
ret
outsb
jae
loopne
into
scas
test
mov
inc
cltd
mov
or
bswap
pop
sub
fmul
fists
or
push
negb
or
scas
imul
or
jns
cmp
jle
dec
int
mov
adc
mov
lock
inc
lods
cmp
sub
fistpll
jno
leave
in
inc
inc
insl
jl
outsl
mov
jl
adc
add
int3
fcmovnbe
pop
jbe
sbb
xor
lcall
in
pop
pop
xchg
inc
xor
mov
enter
add
lahf
lods
pushl
ret
or
lahf
ja
pop
clc
stc
outsl
das
test
mov
inc
imul
mov
out
pop
fstp
or
mov
jl
xchg
cmc
outsl
jnp
sbb
fmul
xor
add
mov
test
insb
pop
or
scas
mov
or
fisubs
in
or
sub
mul
xchg
sub
cmc
shrl
mov
daa
stos
pop
pop
xlat
pop
cmp
sub
in
cld
and
cld
mov
xlat
pop
jnp
mov
xor
add
inc
int3
aaa
gs
sbb
jbe
sub
cwtl
sub
push
lods
enter
pusha
mov
inc
cwtl
cs
test
shr
jne
addr16
mov
rorl
lahf
inc
in
cs
adc
xchg
out
sbb
adc
pop
xor
dec
inc
lcall
push
aam
pop
das
imul
push
inc
lea
inc
push
in
aas
fwait
cmp
lods
mov
out
imul
pop
sub
lcall
push
adc
push
xor
pop
xchg
enter
inc
lods
in
lock
mov
push
rcr
sbb
out
cmp
pusha
fistpll
in
and
sbb
push
push
ja
and
ret
jle
fldt
sub
push
adc
stos
xor
cmpsb
mov
int3
xlat
fsubrp
xchg
mov
pop
jecxz
jecxz
leave
sub
dec
movsl
pop
jne
test
mov
sub
pop
iret
jno
shrl
insb
xor
pop
loope
xchg
imull
stos
rcr
jge
mov
sub
orl
movsb
mov
xchg
mov
test
pop
fwait
mov
jmp
mov
inc
hlt
sbb
add
in
dec
sub
rcrl
xlat
and
xchg
or
jmp
pusha
mov
mov
jno
sbb
cltd
negb
mov
inc
sub
shl
jge
cmp
jnp
out
mov
cmpsl
scas
cmp
sub
and
mov
out
enter
xchg
jno
sbb
inc
ret
xchg
mov
sbb
mov
mov
push
sbb
popa
les
les
add
push
sub
incb
fnsave
hlt
sub
sub
jb
pop
pop
rolb
push
rcll
pop
jnp
psubq
sbb
mov
sbb
cmpsl
hlt
out
ficomps
jl
push
hlt
adc
mov
pop
or
add
jecxz
test
scas
js
jl
std
nop
push
mov
jge
movl
andl
addr16
and
imul
pop
mov
push
in
mov
jns
mov
fucomp
push
repz
stos
test
mov
fisttps
xor
fdivs
sbb
cmp
cmc
inc
fwait
rsqrtps
jmp
cmp
shll
jle
mov
push
mov
jno
out
mov
lcall
out
ret
leave
cmp
xor
mov
xchg
fstpl
lods
xchg
cmc
aaa
mov
or
mov
js
loopne
adc
ds
popa
inc
inc
aad
lds
pop
cmp
imulb
inc
push
aad
cmp
stos
push
lret
pop
or
adc
stos
shld
mov
cmp
bound
push
adc
cmp
pop
into
lahf
adc
jne
stc
ds
pop
or
or
or
out
outsb
das
push
insl
sbb
divl
cmpsb
cmpsb
scas
out
and
loop
sbb
inc
push
or
cmp
inc
inc
adc
jbe
mov
jl
add
int3
aas
fwait
push
in
xchg
in
mov
or
cmp
dec
subb
or
pop
pop
jge,pn
or
xchg
cwtl
pushf
jno
icebp
push
push
push
frstor
or
xor
push
test
in
dec
jb
imul
jmp
stc
mov
xor
adc
jp
inc
cs
adc
out
cld
mov
sbb
repz
adc
jle
cltd
mov
and
inc
inc
push
or
mov
add
pop
cli
mov
inc
add
pop
pop
or
es
xchg
out
cmc
lods
cmpsb
aaa
inc
outsb
mov
fldt
testl
in
inc
nop
cmc
outsl
add
add
ss
in
and
mov
sub
jge
pop
pop
mov
xor
xor
lret
pop
pop
lcall
push
mov
repz
xchg
cmp
add
repnz
sbb
mov
out
mov
cmp
out
rorb
jecxz
flds
out
xchg
ljmp
inc
je
cmp
or
jno
push
jle
xchg
mov
repz
enter
idiv
outsb
add
push
pop
mov
bound
outsl
xchg
jno
jae
lret
mov
push
fs
lods
push
cmp
rclb
xor
push
fcoms
pop
xor
mov
pop
shrl
jge
insl
and
fisttps
out
fcomps
jb
mov
xor
push
cli
neg
sub
jmp
pop
inc
ss
cmc
std
add
cmpsb
aaa
fs
mov
shll
mov
lods
adc
inc
mov
out
jp
js
gs
jae
add
sub
xor
cmp
popa
loop
cld
test
xchg
shlb
pop
jmp
call
data16
mov
jg
mov
les
in
enter
shll
mov
inc
cmp
cmc
out
add
mov
test
cli
mov
ret
sub
pop
int
clc
pusha
popa
or
fcmovnbe
movsb
xor
sbbb
inc
jae
mov
cmp
xchg
leave
sub
lods
push
mov
mov
pop
mov
in
std
push
hlt
das
xlat
push
data16
ret
sub
out
out
das
daa
stos
inc
push
xchg
dec
fiadds
scas
ljmp
push
cld
dec
mov
test
sbb
cld
add
or
sbb
or
lret
sti
or
add
xor
mov
jp
insb
mov
sbb
adc
pop
mov
mov
test
mov
mov
daa
loope
out
push
call
pop
add
pop
mov
sysret
inc
inc
dec
aam
adc
cmp
in
lahf
jmp
test
cmp
jns
popf
ds
popf
xor
xchg
mov
scas
adc
pop
imul
cmpsb
cld
daa
mov
sbb
pop
shr
insb
jne
sub
lret
inc
insl
das
jno
test
add
sbb
aad
xor
stc
test
out
sti
push
mov
xchg
jecxz
aas
lahf
jnp
mov
cmp
pop
mov
jmp
push
or
mov
das
xchg
xor
xchg
fucomi
or
stos
add
adc
add
jno
and
push
aam
xchg
fidivl
dec
adc
jnp
mov
mov
push
js
andl
sub
add
adc
mov
sbb
push
and
je
mov
mov
mov
clc
std
pop
mov
repz
adc
xor
push
inc
dec
fwait
inc
outsl
outsl
movsb
call
ret
or
nop
jns
leave
mov
dec
adc
adcb
or
sub
movsl
loopne
inc
call
es
pop
jp
xor
mov
jno
int3
mov
mov
and
pop
popf
fcoms
dec
jo
sti
cmc
ja
push
mov
lock
sbb
xchg
dec
loopne
out
cmp
popf
cmpb
ljmp
fwait
shll
iret
sti
shll
dec
adc
or
xor
mov
mov
mov
je
out
cmp
add
mov
push
adc
pop
pop
test
aad
dec
addr16
xor
mov
cmp
xchg
aam
and
mov
xor
mov
xchg
and
repnz
pop
stos
stc
jmp
cld
or
cltd
mov
les
sarb
xchg
mov
jo
insl
ret
cmc
iret
push
add
or
sbb
shll
xor
push
aam
push
js
or
shll
stos
leave
dec
pusha
das
cli
pop
push
test
add
jno
loopne
shrb
mov
sub
jae
push
jns
orb
push
into
fcoml
mov
stos
mov
stos
and
call
mov
and
rcl
inc
mov
std
add
inc
xor
icebp
ljmp
cmpsl
pop
cld
jns
movlps
repz
inc
mov
movsb
push
fld
inc
mov
scas
stos
jp
leave
cmp
lcall
out
push
testl
scas
pop
stos
leave
cmpsl
std
mov
cmpsl
cmp
mov
xor
lods
mov
mov
loopne
sub
cmp
mov
xor
cmp
sub
sbb
lods
push
ljmp
inc
ret
fucomi
fstpt
test
test
outsb
push
and
cmp
enter
lret
imul
jle
jecxz
sti
mov
mov
jmp
adc
mov
aas
ljmp
mov
ja
icebp
mov
mov
push
cmovg
sub
in
push
add
jae
xchg
xor
xchg
jmp
mov
pop
addr16
or
idivb
pop
es
test
dec
xor
pop
jnp
ficoms
clc
pop
mov
jg
arpl
gs
aad
add
inc
mulb
jns
and
add
jg
mov
or
xor
xlat
jnp
jge
jp
xor
adc
jg
xor
push
adc
add
ja
out
aaa
je
xchg
scas
subl
xchg
and
xor
cmp
fistl
inc
push
arpl
subl
leave
iret
push
add
js
jnp
dec
sti
xchg
xor
or
cltd
mull
cmp
out
or
mov
test
rcll
test
pop
ja
or
sar
movsb
cs
hlt
and
xchg
dec
sti
iret
pop
lock
out
mov
pop
dec
jecxz
pop
scas
jo
and
jg
lods
mov
cmp
jl
in
cmp
mov
js
loop
push
xchg
xor
pop
add
jbe
mov
xor
dec
jecxz
mov
sbb
jne
ljmp
push
movsb
mov
mov
jb
imul
cwtl
pop
dec
and
pop
lret
das
xchg
test
and
scas
pop
sahf
setbe
xor
ljmp
cmp
fdivrs
cltd
pop
std
xchg
popf
mov
adc
adc
mov
push
mov
aam
pop
sbb
dec
cmp
xlat
jno
lds
out
hlt
aas
dec
stc
mov
test
cmpb
push
cmpsl
int3
and
sub
jp
lret
call
cmpsl
xchg
inc
push
ror
add
jecxz
push
lea
imul
movsl
cmp
in
dec
loope
cmp
xchg
sub
or
xor
lcall
imul
ret
stos
pushf
scas
sbb
push
or
sbb
xor
push
dec
dec
cmp
in
imul
inc
push
push
iret
dec
pop
push
push
scas
mov
pop
mov
sarb
and
mov
fxch
jno
rcll
movsb
aad
and
pusha
jo
mov
xchg
pop
add
adc
add
xor
inc
push
std
xor
mov
push
xor
inc
aad
shl
push
push
gs
pop
push
lret
cmp
inc
adc
sti
cwtl
and
pop
xchg
push
push
dec
cmp
mov
push
stc
xorl
in
popf
and
cwtl
hlt
and
add
jo
ljmp
add
rcrl
pop
xor
call
and
popf
in
cs
dec
aaa
xchg
and
addb
mov
push
pop
mov
adc
stos
pop
mov
adc
mov
cld
out
adc
push
movsb
pop
add
jo
cld
or
jle
jmp
sahf
push
cmp
or
imul
dec
hlt
stos
add
cwtl
push
mov
push
jns
adc
dec
dec
mov
ret
pop
rorl
xchg
mov
aaa
dec
xchg
cmp
pop
loope
ficompl
mov
lahf
dec
pop
or
mov
push
jmp
mov
dec
cmp
mov
inc
or
inc
adc
add
pop
xor
pop
and
pop
mov
sbb
xchg
mov
and
repz
adc
call
popf
fdivrl
lahf
data16
inc
ja
mov
cmp
and
out
adcl
out
outsb
std
or
sahf
mov
sub
repz
lret
mov
sbb
adcb
push
dec
clc
pop
dec
xor
std
or
jg
jg
sub
mov
xchg
or
out
mov
popf
mov
enter
in
repz
inc
loop
push
xor
add
lcall
out
imul
jno
cmp
lret
orb
cmp
or
fisttpll
or
jae
sbbl
idivb
sub
out
int3
ds
mov
rclb
jnp
mov
rcrl
xchg
jmp
cmc
daa
xor
fildll
aam
sbb
cmp
bound
test
adc
sub
in
mov
subl
fisttpll
or
jo
in
xchg
pmaxub
aaa
divl
aaa
testb
sbb
iret
or
jae
mov
inc
testl
pushf
mov
sti
mov
insl
or
and
inc
pop
jp
pop
ja
lahf
fidivrs
xchg
mov
dec
jge
rcll
pop
dec
movsl
mov
fs
inc
jl
mov
push
mov
icebp
inc
arpl
les
andl
mov
sbb
mov
jbe
fstl
mov
mov
inc
sub
das
mov
sbb
jne
jns
cmp
incl
into
popf
pop
mov
pop
push
add
xor
inc
mov
in
test
shl
gs
fdiv
mov
cmpsl
push
stos
push
in
inc
xor
xor
mov
into
dec
cld
cmp
hlt
xchg
gs
mov
cmp
mov
cmp
mov
cmp
mov
cmp
add
loop
pop
pop
xchg
inc
inc
lds
cmc
out
mov
jae
aas
xor
addl
popf
push
cmp
and
xchg
push
xor
ficompl
movsl
mov
mov
orb
and
mov
xchg
movsl
jmp
xor
fsubrp
push
lea
push
mov
push
repz
and
push
mov
lret
add
dec
insb
cmpsl
int3
sti
adc
stos
adcb
mov
sub
pop
push
push
and
xor
js
adc
sbb
hlt
test
pusha
mov
mov
testb
subb
sbbl
or
stos
inc
stc
xchg
addl
push
pop
into
mov
xor
fbld
add
jo
and
flds
cmc
cmp
icebp
mov
inc
enter
pop
scas
addb
cli
xor
mov
stc
cld
xchg
mov
sbb
mov
add
sarb
stc
and
xchg
cmp
dec
cmpsb
xor
xor
push
pop
jl
pop
roll
pop
sbb
mov
fptan
or
fildll
sbb
imull
jno
mov
lock
mov
xchg
aaa
lock
mov
sbb
sbb
repz
pop
jnp
lret
pop
stos
arpl
adc
pop
mov
pop
jne
aaa
adc
das
push
xchg
cmp
adc
add
xor
subb
push
rcll
mov
clc
pop
lea
idiv
jno
out
ret
inc
loopne
cli
cmc
jecxz
lock
sbb
push
jg
mov
push
cmp
push
and
xlat
mov
xchg
sahf
xchg
ficoml
int
and
ja
or
push
mov
mov
dec
fistpll
or
sub
cmpsl
xchg
sahf
xor
lock
push
sbb
test
sub
push
sbb
xchg
xchg
hlt
push
jge
aaa
hlt
rcll
jecxz
loopne
rcrl
aam
dec
lods
mov
xchg
xchg
lock
mov
mov
adc
xchg
dec
dec
add
xchg
mov
jge
mov
jg
sahf
filds
jnp
lds
loopne
lock
xchg
cmpsb
dec
adc
lods
and
push
sarl
cmpsl
xchg
sbbl
idiv
xchg
cmp
ret
sar
xchg
test
popa
lds
xchg
test
orl
jae
mov
outsl
dec
ret
jo
mov
xor
imul
dec
cmp
call
loopne
adc
lret
cwtl
ljmp
mov
jns
ljmp
push
mov
stos
in
jb
cmp
sahf
mov
stos
and
pop
pop
rolb
push
or
scas
je
mov
pop
mov
leave
mov
push
clc
lods
pop
leave
or
aad
mov
cmpsb
xor
pushf
adc
test
xor
hlt
test
mov
and
mov
nop
ret
xlat
adc
or
xor
in
test
je
lea
cmp
fmull
lahf
jb
or
stos
fsubs
pop
inc
sub
mov
lea
pusha
dec
mov
cs
cmp
mov
or
xor
xor
lfs
push
xchg
jae
push
js
das
scas
fbld
js
and
inc
out
cmp
pop
sub
jb
push
dec
popf
sub
iret
iret
add
push
loopne
jmp
repnz
shll
clc
fucomip
inc
add
test
inc
sbb
fisubs
jmp
xchg
sub
enter
daa
cmpsl
jl
mov
xor
fnstsw
punpcklwd
jb
arpl
cmp
mov
jnp
add
cmpsb
jbe
and
movl
push
or
fldenv
cltd
xchg
push
aas
jae
add
lret
or
add
test
mov
jge
xor
inc
pop
out
xchg
iret
cli
or
test
push
mov
cmp
sbb
call
mov
mov
mov
icebp
loope
cmpsl
pushf
iret
fnstsw
cmpsl
adc
push
pop
xor
mov
js
test
aam
mov
lds
shl
mov
adc
insl
es
adc
or
mov
xchg
and
cwtl
push
cltd
jle
sub
mov
sahf
push
fidivrs
imul
jne
dec
shll
scas
cmp
imul
test
dec
jo
int3
test
cs
enter
jae
jmp
push
das
jne
imul
xlat
lock
aam
ljmp
dec
cmp
cmpsb
mov
push
fnstcw
pusha
aad
scas
and
sbb
adc
rolb
sub
mov
fisubrs
or
pop
mov
dec
rorb
fs
dec
test
or
adc
testl
loope
sbb
jp
adc
mov
fstp
xchg
lds
mov
insl
and
rorl
and
pop
imul
sti
scas
out
lods
je
mov
mov
mov
xchg
pop
jnp
sub
sub
pusha
mov
mov
movsl
adc
cld
sub
xor
jecxz
xor
loopne
enter
push
sub
jecxz
sub
mov
pop
xorl
rclb
cltd
ljmp
inc
jp
sub
and
das
add
loope
push
fists
test
shlb
iret
xor
xor
inc
add
cwtl
sbb
int
pop
jp
inc
sti
dec
gs
or
push
dec
popa
jne
test
inc
outsb
into
push
lahf
mov
add
stos
or
aas
cli
pop
in
adc
inc
fldl
sbb
xchg
xchg
jno
and
ja
fcompl
push
mov
insl
ljmp
mov
mov
rcrb
xchg
popf
repnz
ds
cld
or
mov
jmp
cltd
insb
test
out
sub
mov
stos
ret
sub
sub
pop
add
insl
sti
insb
ss
cmp
pop
inc
jl
inc
cmp
jne
add
lcall
cmp
pop
ja,pt
js
outsb
clc
mov
jns
lret
add
enter
push
mov
mov
mov
jecxz
mov
in
lahf
mov
xchg
mov
jge
sbb
test
stc
mov
aas
iret
xchg
jle
out
sub
aas
pop
cmpb
jg
jns
sbb
daa
cmp
mov
sub
and
ja
add
xchg
cli
lret
cmp
daa
push
subl
jg
push
sub
dec
ret
ja
sub
inc
cmp
xchg
lea
sbb
cmpsb
cmp
or
adc
jmp
adc
mov
sbbl
sub
je
aaa
or
adc
mov
in
sbb
mov
movsb
inc
cmp
outsl
dec
sarl
inc
test
call
and
pop
sub
push
pushf
push
imul
push
cmp
jns
ficompl
wbinvd
dec
arpl
dec
stos
je
cmp
test
or
xchg
dec
lret
ss
stos
in
repz
xchg
cmp
jae
test
fs
xchg
sub
int
das
roll
pop
mov
mov
in
adc
sbb
dec
test
mov
mov
inc
xor
stc
cltd
or
outsl
cwtl
and
sahf
dec
shl
js
cmp
jmp
mov
ficompl
int
mov
dec
mov
push
lret
pop
shlb
out
xorl
sub
daa
mov
loope
js
xor
sarb
mov
in
pop
or
fldl
push
out
es
arpl
push
or
push
cmp
push
jmp
rcr
lds
xor
xor
fdivrs
push
jg
cltd
inc
mov
popf
xorb
les
inc
out
dec
enter
sbb
mov
sub
gs
dec
aaa
xchg
mov
pop
jno
xor
insw
inc
or
pop
add
call
jns
push
sub
and
in
push
push
xor
push
adc
dec
push
leave
out
sbb
sub
mov
xchg
push
stc
aam
loopne
lock
and
ds
mov
xchg
jg
aad
in
xchg
repnz
jbe
jae
test
and
push
daa
les
lea
pop
sbb
in
sbb
mov
mov
adc
sbb
nop
loope
clc
mov
adc
jno
cs
mov
and
stos
int3
pushf
popf
mov
push
cmpsb
test
into
mov
jb
mov
add
adc
mov
repz
jno
imul
and
into
out
jecxz
mov
inc
push
test
lret
scas
ds
in
mov
cmc
int3
xchg
gs
ffreep
push
and
movsb
daa
aad
jae
ret
xor
dec
ja
xor
jp
in
out
mov
xor
arpl
into
adc
ja
cmp
mov
aad
or
popa
test
adc
pushf
mov
inc
jmp
mov
and
adc
cmp
jecxz
loop
sub
inc
rcrl
push
pop
out
jne
jg
adc
inc
jbe
mov
cmp
or
inc
dec
sub
mov
fisubrl
aas
in
sub
adc
jno
cli
mov
test
pop
cmc
push
xor
int3
aas
jbe
inc
adc
lahf
cmp
xchg
and
add
push
or
jl
sbb
sub
inc
rcrl
xchg
ror
js
sarb
pop
lock
jmp
adc
mov
lock
fs
sbb
xchg
sahf
adc
push
mov
int3
jns
xlat
movsl
xchg
xchg
push
cmp
stos
jle
popf
pop
nop
fcoms
and
mov
push
add
imul
fnstsw
fildl
pop
pop
rcll
repz
or
jo
rorl
into
test
sbbb
subl
dec
das
les
adc
hlt
notb
addl
mov
mov
aas
dec
inc
mov
lods
sub
push
and
lods
push
nop
dec
notb
sarb
addr16
shll
mov
mov
dec
cli
arpl
mov
insb
repz
sbb
xor
scas
add
fcomps
push
pop
xchg
add
mov
push
shr
pop
cmpl
aaa
jl
pop
repnz
sbb
xchg
sbb
add
xchg
leave
mov
sub
fcmovb
test
cmp
jecxz
pop
icebp
hlt
cld
lock
or
into
sahf
pop
and
clc
jmp
cmc
dec
sbb
pop
fsubr
and
push
push
jnp
or
pushf
sub
xor
cmpsl
les
fldcw
mov
cs
jmp
adc
xor
push
loop
leave
lret
int
addr16
rcrl
es
mov
inc
and
xor
int3
pop
daa
fisttps
dec
xor
shll
push
xchg
jp
pop
sbb
mul
xchg
xor
stos
sbb
adc
roll
cmp
mov
mov
clc
mov
scas
jl
stos
sub
stc
mov
jl
je
sbb
insb
sub
pavgb
popa
sbb
adc
lods
cltd
imul
stos
add
in
push
cmpsl
sbb
mov
insl
dec
jb
cmp
or
inc
mov
aaa
sahf
out
adc
mov
mov
mov
outsb
or
hlt
cmp
sub
addr16
cwtl
or
xor
cmpsl
sub
cld
stos
mov
sbb
push
mov
cmpsb
xchg
leave
lock
scas
shl
insb
test
push
scas
jbe
push
add
icebp
imul
pop
movsb
jg
lock
dec
push
push
cmp
outsl
mov
sahf
pop
jb
jp
mov
cmp
mov
repz
mov
adc
mov
in
mov
mov
cltd
xchg
leave
push
mov
inc
adc
jecxz
mov
add
and
cli
lcall
xchg
push
jb,pn
sub
add
mov
xchg
mov
adc
pop
inc
adc
imul
sub
cli
pop
das
pop
cld
push
mov
nop
hlt
loopne
mov
lcall
mov
jne
aam
xchg
aam
hlt
dec
cli
pop
shl
ret
or
and
cmp
into
cmp
add
mov
lahf
xor
cmp
loopne
lods
je
test
rorl
jl
xchg
in
add
push
mov
icebp
cmp
clc
mov
ret
cwtl
push
pop
push
pusha
or
clc
divl
cwtl
js
nop
popa
repz
and
push
mov
ret
xor
aas
mov
jno
pusha
ret
dec
jno
ret
lret
pop
sahf
imul
mov
lret
lds
add
cmp
add
jno
daa
out
incl
lods
loop
mov
inc
sub
scas
mov
inc
mov
ds
frstor
imul
and
movsl
in
add
test
jl
popf
xchg
push
sarl
shr
xor
push
aas
cmpsl
stos
or
fnsave
and
jno
mov
jne
int
aad
cmp
push
cmpsl
je
loopne
ret
inc
stos
push
iret
fdivrs
rcll
sti
mov
sbb
xchg
inc
pop
je
adc
scas
clc
mov
insb
cmp
in
push
jmp
repz
test
add
inc
lods
xlat
mov
aas
outsl
pushf
leave
lret
stos
rolb
ds
and
loop
mov
add
mov
mov
fidivs
jg
ret
cwtl
cld
or
xchg
loop
jecxz
inc
sub
rcr
icebp
gs
test
pop
dec
nop
xor
fidivrl
lret
xchg
stc
insb
imul
sbb
sub
shr
lahf
ss
xchg
lea
mov
fneni(8087
cmpsb
push
setno
adcb
mov
testl
sub
fcmovnbe
fiadds
icebp
push
outsb
inc
and
fadds
mov
roll
fcom
or
dec
mov
push
cmp
jns
mov
mov
test
push
ret
mov
sbb
push
pop
mov
push
mov
shrl
notl
cmpb
jnp
fdecstp
lds
adcl
adc
popa
add
lds
mov
dec
push
pop
aaa
cld
mov
jbe
jl
sbb
leave
xor
mov
insl
push
aad
repnz
pop
xor
cmc
outsl
scas
xor
cmp
pop
pmuludq
xlat
xor
dec
cmp
in
rcll
cmp
in
xchg
mov
push
cmpsl
scas
daa
dec
xorl
sub
dec
sub
and
jnp
stos
shrl
test
leave
jcxz
and
pop
jmp
jno
aaa
std
sbb
jns
pusha
add
sbb
xchg
adcl
insl
sarb
pop
or
or
das
xchg
lret
ljmp
sub
pusha
cmp
or
sbb
inc
add
cmpsl
jmp
outsl
cmpl
fwait
sbb
or
xlat
jnp
inc
pop
imul
cmpb
cmc
fwait
sahf
cmp
mov
pop
mov
mov
daa
and
inc
fdivl
push
xorl
test
sbb
sbb
rcl
rclb
pop
ret
je
dec
out
xchg
adc
xor
lods
and
ja
sbb
push
sub
or
popa
pusha
mov
ffreep
jmp
xchg
adc
shl
mov
xlat
and
jmp
add
dec
daa
push
testl
hlt
adc
or
les
fimull
xor
push
jmp
out
pop
gs
icebp
dec
mov
cs
mov
sbb
mov
in
in
push
movsl
or
cli
in
or
imul
cs
es
mov
loopne
cwtl
loope
out
mov
jnp
jb
jge
adc
int3
sbb
push
inc
repnz
arpl
mov
mov
xor
pmaxsw
sub
mov
out
cmp
push
pop
jne
or
addr16
sbb
in
fimull
jle
mov
xor
stos
outsl
cmpsl
xor
jo
push
sbb
jno
out
ror
or
stos
adc
insl
pop
gs
and
in
test
jbe
sub
mov
sub
shll
movsb
mov
lret
dec
popf
jge
mov
rcl
xchg
lods
dec
add
scas
cmp
jbe
fildll
inc
imul
pop
insl
lahf
ffree
jne
mov
xchg
jnp
adc
lcall
sub
call
dec
subb
fisubrs
out
xchg
popf
push
fdivrl
xchg
push
cwtl
cmp
sub
mov
mov
cli
test
sub
jnp
movsl
mov
ds
inc
sub
push
scas
sub
cmp
cmpsb
addr16
sbb
xor
pop
or
cltd
rclb
rolb
push
stos
lds
in
mov
xlat
icebp
sahf
punpckldq
cmp
es
subb
add
push
addr16
arpl
jno
jp
shl
sbb
mov
jge
roll
nop
mov
add
or
mov
jl
lret
xor
xor
leave
push
in
hlt
xchg
push
jb
aad
pusha
jb
dec
mov
sbb
dec
push
inc
test
cmpsl
cmpsb
inc
xor
lret
mov
in
mov
lea
pop
ja
fsubrp
scas
xorl
sbb
out
xor
fcomps
vpmaddwd
nop
dec
std
shr
jle
dec
fnop
mov
es
add
fisttps
stc
mov
shl
xor
or
mov
popa
mov
jne
xor
imulb
mov
pop
add
jno
push
jge
or
mov
mov
sub
stos
push
rcrb
cmp
and
mov
mov
scas
sub
testb
cwtl
inc
hlt
push
aad
movsl
loope
xchg
test
ljmp
sub
dec
jnp
inc
adc
out
popf
sbb
sbb
daa
push
negb
and
inc
push
js
les
int3
test
popf
adc
pop
mov
loop
mov
jg
ret
lret
test
xchg
leave
sbb
push
ljmp
mov
pop
push
jmp
jg
sub
ljmp
mov
inc
sbb
call
jl
mov
repnz
hlt
xor
and
stos
or
mov
popf
fsubr
fdivrs
jo
movsb
xchg
leave
mov
lods
sbb
or
dec
mov
adc
add
filds
shlb
lds
lds
jg
mov
xchg
dec
shlb
mov
push
pusha
pop
pop
mov
dec
adc
jbe
xchg
pop
arpl
sarl
push
aad
rcl
sub
lret
out
in
adc
fcomps
dec
insl
rolb
aam
ds
repnz
iret
push
loopne
fdivrl
repz
mov
insl
fildll
mov
mov
dec
mov
adc
out
outsb
jnp
or
lea
into
mov
lret
and
outsb
and
dec
popa
xorb
pop
lds
insb
mov
sti
enter
jecxz
inc
inc
pop
pop
mov
add
fcmovbe
stc
push
add
adc
push
xchg
outsl
inc
and
xchg
aad
pop
ja
leave
push
movsb
or
dec
std
stos
pop
inc
gs
std
add
sub
stc
mov
std
xchg
lock
into
in
xor
sbb
mov
mov
loop
fmuls
jecxz
fistl
data16
scas
dec
lock
arpl
rorl
cmp
inc
xchg
nop
or
dec
fnsave
fwait
xchg
xchg
jl
scas
addb
adc
adcl
push
xchg
push
add
out
incb
push
les
imul
subb
mov
sbb
dec
enter
push
sahf
mov
and
xor
pop
xlat
dec
mov
pop
in
adc
fdivrs
aad
sub
outsb
add
mov
lods
sbb
mov
xchg
mov
ds
pop
mov
clc
lahf
adc
fdivrs
cs
js
mov
mov
nop
adc
dec
xor
xlat
add
jnp
mov
xchg
inc
sub
or
sub
dec
cmpsl
repz
add
inc
pop
iret
add
sbbb
stc
push
jbe
xor
in
mov
pop
pop
cmp
mov
or
fs
dec
lods
cmpsb
repnz
jle
mov
pop
xor
bnd
lds
lahf
fisttpl
inc
std
sub
prefetchwt1
adc
ds
jecxz
in
push
xor
pop
lods
cmp
inc
add
ret
dec
or
dec
es
jl
pop
push
jnp
mov
sub
pop
mov
in
pop
insl
loop
mov
mov
push
loopne
xor
outsb
push
aaa
in
lret
jae
jmp
mov
inc
cmp
movsl
test
cmp
test
pop
jno
incl
mov
inc
int
in
cmp
add
jne
movsb
jno
mov
inc
push
mov
lret
or
push
cmp
les
lods
inc
jno
adc
and
push
testb
roll
mov
sub
jns
mov
mov
mov
lahf
or
jno
sbbl
scas
jbe
mov
orl
mov
or
cmp
inc
bswap
cmpsl
push
xchg
jb
lcall
shl
mov
shr
add
jle
jecxz
or
ret
sbb
push
jnp
outsl
clc
scas
pop
add
lcall
in
outsl
je
fcomip
dec
lret
mov
or
jne
ljmp
xchg
clc
mov
negl
cmp
jnp,pn
cmpsb
jmp
and
daa
loop
mov
aaa
xchg
iret
inc
mov
fsubrl
jae
and
add
adc
mov
jecxz
clc
pop
xchg
test
adc
mov
add
sub
dec
cli
insl
xchg
jg
cmp
mov
sub
aaa
shll
cmp
outsb
pop
xor
dec
sub
and
mov
mov
push
fistl
sub
sub
repz
psrlq
jp
daa
sar
call
stos
out
fldcw
sbb
or
inc
mov
xchg
xacquire
xchg
and
int3
dec
pop
stos
ljmp
test
sub
sahf
dec
fdivrs
arpl
faddl
pop
je
pop
xchg
loopne
cmp
idivl
push
nop
loop
mov
jae
arpl
mov
enter
das
xchg
xor
xor
pop
inc
push
mov
shll
xchg
es
xchg
add
sub
lock
lds
xor
jae
loop
rol
pusha
scas
add
dec
lret
mov
push
or
mov
or
and
ficoml
out
lcall
jp
add
scas
adc
bnd
jmp
push
sbb
out
push
nop
dec
push
call
cmp
clc
xchg
arpl
sbb
mov
push
jnp
cmp
inc
adc
lcall
aaa
xor
sar
sahf
push
fmuls
aas
jbe
xor
inc
cmpl
cli
cmp
outsb
pop
mov
into
fisttpll
push
adc
lds
add
sub
mov
stos
addr16
hlt
push
mov
mov
and
fs
aad
jecxz
ficompl
js
insl
xchg
xchg
aad
into
push
pop
lea
outsb
mov
out
jle
aaa
or
stos
or
scas
call
std
divb
dec
adc
add
into
shl
cmp
test
cltd
xlat
stos
sbb
in
and
loope
insb
lea
pop
jbe
add
lret
pop
push
adc
repz
add
movsb
sub
aad
inc
loope
mov
cmp
fisubrs
pop
movl
adc
jle
ret
repz
jne
lea
rcrl
mov
fistps
movsb
ret
jmp
inc
adc
inc
ret
inc
adc
mov
hlt
jl
imul
push
cmp
mov
push
es
loop
xor
sbbl
dec
jno
pop
in
add
fisubl
stos
dec
jg
cmp
mov
cwtl
shrb
jle
push
pop
adc
cli
mov
hlt
test
scas
xlat
xor
fwait
lods
fistps
lret
push
and
pop
xchg
pop
mov
jle
outsl
xor
inc
add
jecxz
cmp
and
aas
or
push
push
jl
sub
fcompl
mov
sbb
scas
fsubrp
cmpsl
dec
daa
cmp
mov
in
and
and
lcall
mov
neg
int3
mov
mov
bound
call
mov
push
dec
sbb
es
sarb
popa
out
xor
mov
push
sar
sbb
in
scas
add
mov
insb
mov
test
daa
arpl
pop
stc
sbb
xchg
into
std
aam
lret
jp
dec
jp
xchg
arpl
xchg
push
push
jg
lret
jae
out
int3
lcall
insb
adc
mov
push
adc
mov
mov
pop
inc
sub
mov
pop
push
xor
xchg
cltd
and
push
scas
or
jge
sbb
in
test
cmp
lahf
jns
psrlw
push
adc
mov
sub
xchg
and
ret
in
int
in
add
lahf
in
mov
xchg
scas
in
aaa
dec
jle
adc
sub
lods
outsl
andb
dec
cmp
inc
cmp
pop
mov
andb
mov
daa
sub
sub
pop
cmp
mov
pop
pop
or
jbe
push
sbb
mul
xor
bound
xchg
repnz
push
mov
mov
mov
leave
hlt
cmp
xchg
dec
add
daa
pop
call
insl
cwtl
sti
push
or
sbb
cmp
mov
mov
scas
ret
add
setnp
jmp
pushf
ffreep
push
mov
push
xor
jo
neg
mov
mov
cwtl
inc
pop
sahf
loopne
movsl
stc
adc
sti
mov
iret
cmpsl
mov
roll
cmp
aaa
jp
or
dec
out
fwait
out
push
daa
push
test
dec
icebp
cli
mov
mov
imul
imull
ja
cmp
gs
ficomps
leave
cmp
cld
mov
mov
adc
fsubrp
pusha
xor
addr16
cmpsl
lahf
mov
jl
lea
mov
fnsave
jp
mov
bound
mov
cmp
divb
cld
in
sub
sub
repz
xchg
lret
out
scas
adc
cmpsl
fcom
jo
fisubrl
dec
push
pop
loop
js
pop
adc
out
and
cmp
or
mov
inc
push
andb
add
ljmp
test
mov
dec
sub
cs
loopne
jns
ret
test
adc
pushf
imul
es
cmpsl
mov
and
mov
out
mul
aam
clc
sub
nop
outsl
lea
sbb
lea
sahf
mov
loop
push
stc
xor
nop
pop
xor
adc
lock
icebp
add
add
shll
rorl
dec
mov
pop
cmp
push
add
mov
testl
mov
sbb
or
rcr
stos
mov
add
inc
mov
mov
jno
sbb
in
lgs
lcall
push
mov
fstp
and
xchg
xor
addr16
mov
dec
mov
xchg
call
mov
into
cltd
testb
push
inc
push
pop
jnp
inc
or
pop
into
xor
inc
imul
sbb
into
sbb
insb
mov
jge
xchg
sub
sub
int
jmp
loop
push
incb
sbb
mov
cli
ret
xchg
jo
dec
test
loop
dec
pop
dec
jg
push
inc
xor
inc
addl
addr16
and
mov
icebp
cmp
mov
lock
out
pop
in
pop
addr16
dec
sbb
insl
cli
cmp
mov
mov
leave
jg
das
dec
stc
arpl
lret
scas
shlb
adc
repz
stos
cmp
cmp
in
dec
pop
outsb
les
js
subb
rep
adc
push
mov
mov
fcoms
popa
dec
test
mov
jo
dec
loop
sub
scas
das
in
out
and
sub
jl
mov
call
into
jbe
lret
jnp
inc
enter
insl
push
sbb
aaa
cmpsl
xor
mov
aam
xchg
cmp
jmp
pop
movsb
imul
scas
stc
leave
lret
stos
arpl
and
xchg
mov
mov
jmp
rolb
cmp
jnp
jg
adc
loope
mov
sub
je
mov
js
mull
inc
fnsave
fs
mov
out
fwait
int3
jecxz
stc
or
inc
inc
sub
inc
inc
sub
movsb
std
or
xchg
fwait
imul
pop
popf
and
int3
insb
dec
sbb
ret
mov
and
mov
es
lret
lahf
mov
test
xchg
lds
or
mov
pop
add
and
jmp
cmpsl
or
cmpsb
fldl
sub
mov
pop
xchg
loopne
add
dec
jp
xchg
xchg
gs
mov
dec
mov
push
add
sti
mov
sub
popf
xor
or
cmovg
fidivrs
dec
xchg
scas
loop
pop
pusha
repz
push
mov
mov
push
daa
mov
or
dec
push
cmpsb
inc
or
enter
pushf
and
pop
jmp
movsl
dec
dec
cs
push
adc
mov
dec
cmp
push
push
xchg
jp
xor
pop
fisubs
inc
pop
aaa
das
add
int3
mov
loope
inc
cmp
inc
push
inc
pop
stos
inc
lahf
dec
roll
pop
mov
sbbl
mov
jne
pusha
in
iret
jg
ret
pushl
mov
jg
pop
sbb
in
and
jl
cltd
fnstenv
lock
mov
pop
rcll
mov
shl
sbb
addr16
sub
inc
or
in
mov
fwait
gs
in
lret
imul
pop
stos
fcmove
adc
dec
pushf
xchg
sti
cmp
in
sub
leave
mov
lret
ja
fidivl
push
sub
aas
repz
mov
add
add
test
mov
cwtl
or
mov
and
jecxz
andl
and
daa
lret
or
out
lea
xchg
push
ss
mov
lods
outsb
lods
call
jge
imul
adc
adc
inc
stos
lret
xchg
enter
sub
add
subl
push
lods
repnz
divl
or
pop
xchg
inc
mov
dec
and
xchg
mov
adc
popf
callw
ljmp
xchg
pop
dec
test
pop
inc
and
xor
lahf
xchg
push
lock
int3
cltd
lock
push
dec
fisubs
pop
pop
outsb
mov
push
out
lods
add
mov
lahf
mov
mov
leave
ss
popf
out
sbb
ds
xor
mov
inc
rorb
mov
adc
jnp
jmp
mov
sub
or
mov
pop
in
shlb
popa
jae
sar
push
jb
aad
jae
cmp
mov
cmp
cmp
mov
adc
mov
push
inc
pop
cmp
ficomps
popa
inc
push
insl
xor
stos
jmp
sarl
mov
jmp
mov
jno
mov
xor
shlb
pop
inc
call
repnz
mov
repnz
xchg
jbe
jp
jbe
xor
push
nop
dec
sub
dec
add
add
mov
adc
aad
pop
or
mov
cmp
lret
sub
loop
add
mov
push
pop
bnd
stc
push
test
out
out
cs
jns
xor
push
outsl
enter
xchg
and
cmp
insb
ret
push
sahf
cltd
cs
sbb
popl
jmp
lds
inc
in
sbb
or
into
packuswb
push
outsl
js
jo
out
xchg
leave
stos
sbb
popl
cmc
push
arpl
xchg
jecxz
out
mov
cmc
add
sti
add
icebp
sti
enter
inc
mov
pop
ficomps
int
xchg
rcll
dec
and
push
add
stc
idiv
bound
xor
ret
adc
xor
mov
mov
movsb
out
jb
arpl
test
hlt
jp
xor
push
and
jecxz
loop
aad
int
inc
call
jg
push
mov
imul
add
or
imul
aam
dec
push
jo
mov
cmp
add
or
jnp
jp
jp
cmp
int3
hlt
test
sbb
mov
sti
sub
and
fucomi
mov
pop
mov
sahf
or
inc
sbb
out
inc
jnp
iret
imul
stc
mov
cmp
mov
add
and
xor
inc
pop
js
fdivr
and
mov
push
dec
lret
push
mov
test
popf
xlat
test
dec
mov
das
into
push
sarl
dec
pop
and
ucomiss
mov
in
hlt
or
daa
lret
jl
lods
dec
js
nop
dec
xchg
jmp
push
sbb
push
jge
mov
inc
aaa
dec
test
into
test
outsb
rorl
into
out
adc
xor
jno
cs
xor
inc
xchg
std
fldenv
pushf
aaa
xchg
mov
fbstp
mov
movsb
cmc
aam
sbb
add
xchg
test
cltd
inc
or
jg
dec
mov
or
mov
test
sbb
xchg
xchg
sub
cwtl
rcll
add
adc
pop
ret
sarl
push
push
push
jo
mov
or
jle
repnz
jb
pop
int3
das
mov
inc
lods
fs
sub
lds
adc
orb
fwait
adc
add
cmp
movswl
mov
in
lea
int3
in
push
repnz
ret
loopne
mov
shrb
pop
hlt
inc
sub
inc
cmp
shrl
testl
push
xchg
iret
outsb
sub
mov
stos
rorl
into
dec
mov
cmp
repz
repnz
add
lret
pop
dec
sbb
addl
mov
and
add
ret
out
push
mov
sti
les
arpl
mov
lret
pusha
ret
pop
mov
mov
insl
jnp
xchg
out
lcall
adc
xchg
xchg
fcmovnbe
setns
dec
lods
push
cmp
xchg
cs
mov
push
jbe
lret
int3
cmp
inc
pop
or
int
in
cltd
mov
aaa
mov
push
inc
pop
pop
sub
pop
or
fstl
repz
and
je
push
out
lock
mov
hlt
or
mov
in
mov
ret
popa
pop
fists
adcl
inc
lods
hlt
loopne
test
mov
rclb
mov
inc
ljmp
data16
cmp
repz
sbb
stos
jnp
movsl
inc
hlt
lods
xor
xchg
popa
xchg
push
in
enter
xor
adc
arpl
xchg
iret
icebp
stos
adc
or
paddusw
mov
push
mov
ja
sub
in
mov
mov
cmc
mov
cmpsb
sub
stos
testl
jne
cld
fmuls
mov
clc
lds
mov
das
mov
push
insb
xchg
inc
mov
inc
or
cmpb
bound
pop
movsb
adc
data16
pushf
mov
mov
xchg
ljmp
cmp
js
jbe
pop
mov
mov
pushf
adc
div
hlt
loopne
jb
inc
inc
sahf
mov
mov
mov
loope
sti
mov
jno
pop
shll
dec
adc
hlt
adc
lret
sbbb
xchg
push
out
mov
fldcw
or
data16
ds
jle
cmpsb
or
pop
cli
nop
je
xchg
movsb
push
dec
cmpsb
stc
out
push
mov
sbb
lahf
mov
sub
scas
mov
punpcklwd
aas
rcr
sub
in
push
add
inc
push
cltd
not
repz
scas
push
outsl
test
lds
lock
inc
popf
push
xchg
mov
push
mov
ljmp
gs
incb
jnp
popf
jbe
jmp
xchg
pop
xchg
pop
push
inc
and
xchg
lods
mov
daa
push
pop
add
hlt
inc
popa
jmp
pop
dec
addl
sbb
mov
jl
enter
and
aam
push
push
add
in
gs
jae
xchg
call
test
cmp
pop
mov
gs
test
xlat
in
adc
ret
push
aaa
mov
lea
outsl
andb
xor
xchg
fimull
repnz
aam
outsb
mov
out
mov
js
cmp
test
lods
sub
jns
adc
xor
outsl
sub
push
pop
movsl
pop
push
je
xchg
out
jae
insl
inc
imul
sar
dec
insb
xchg
xor
les
mov
jg
lret
aad
sub
pop
js
lods
enter
je
add
push
or
clc
mov
pop
pushf
dec
mov
in
xorl
pop
repz
jp
repz
loope
push
add
mov
cmp
sub
cmc
dec
lahf
ret
xlat
push
mov
loop
pop
push
mov
xchg
lret
stos
stos
loope
push
cmp
xchg
arpl
dec
daa
cwtl
adc
mov
inc
les
into
popa
add
jmp
adc
and
rorl
cld
sbb
mov
mov
inc
fildl
push
adc
jb
mov
and
pop
daa
mov
loop
aad
shrb
imul
xor
sub
mov
test
lcall
mov
mov
mov
jno
test
gs
les
fmul
mov
or
push
outsb
cmc
jge
mov
jbe
aam
in
cltd
and
sbb
push
stos
lea
or
pop
push
dec
cwtl
or
arpl
sub
dec
adcb
sub
pusha
jne
movsl
out
in
nop
adcb
pop
xor
or
push
fnstsw
add
out
fs
shrd
call
inc
faddl
dec
xor
int
fdivl
fnstcw
sbb
mov
lods
mov
sub
enter
cmpsl
sti
inc
xchg
int
inc
push
cltd
aaa
mov
cmp
pop
test
jecxz
jge
call
or
repnz
gs
jne
dec
enter
fnsave
mov
mov
push
cmp
lods
lds
stc
movsb
sbb
shlb
ret
mov
or
mov
inc
mov
clc
or
push
mov
test
cs
lea
cmpsl
jae
mul
push
jle
xor
sbb
dec
jae
xchg
dec
lods
data16
int
cld
fcmovb
fistps
imul
mov
pushf
scas
sbb
bound
or
int
orb
mov
dec
push
dec
jmp
js
ficompl
mov
sti
in
arpl
add
in
and
loope
push
lcall
and
jns
ja,pt
add
dec
pop
xchg
cld
sbbb
xor
xor
repnz
inc
repnz
mov
adc
clc
mov
mov
stos
ds
inc
fcoml
or
xchg
mov
dec
xor
xchg
sub
insb
cmp
jb
push
dec
add
jmp
shl
jge
sub
mov
out
push
leave
pop
fwait
cmp
inc
lods
mov
test
dec
pop
rcrb
mov
jbe
repz
xchg
jg
adc
sahf
mov
inc
mov
mov
sbb
mov
sub
movsl
xlat
stc
sub
mov
sub
mov
insl
in
inc
scas
adc
loope
push
jnp
jg
movsb
mov
loop
andps
adc
std
pop
mov
lods
jne
xor
inc
ret
js
inc
dec
and
stos
adcl
adc
aaa
pop
jg
add
mov
lock
aad
dec
inc
rcrb
mov
neg
adc
xchg
icebp
mov
jl
mov
pop
mov
push
cli
sub
test
dec
inc
and
les
sbb
or
dec
mov
pushf
test
sub
mov
pop
cmp
and
xchg
cmp
xchg
sbb
ljmp
loopne
add
mov
pop
into
jbe
jnp
wbinvd
scas
scas
mov
aaa
xchg
les
or
mov
fsubrl
push
cmpsb
loopne
out
fwait
pop
mov
mov
jmp
mov
push
xchg
xchg
pushf
xorl
xchg
sub
stos
cld
sub
xchg
jns
sub
lods
pop
mov
mov
fmuls
addl
not
pop
cltd
cmp
dec
in
push
xchg
xor
pop
cmc
cltd
adc
and
repz
sti
mov
jmp
ret
push
call
mov
ljmp
jne
stos
adc
js
pop
fs
cli
mov
push
xor
jmp
jmp
fidivl
pop
rolb
mov
mov
push
xor
mov
mov
or
jp
ja
sub
jmp
sub
mov
lds
lock
into
xor
mov
jo
or
xchg
pop
xchg
movsl
test
sbb
shl
adc
jl
add
aas
rcrl
mov
jmp
hlt
iret
js
adc
fdiv
enter
notl
mov
jmp
sbb
jmp
mov
test
dec
ss
in
pop
lahf
repz
adc
ljmp
lods
pusha
idiv
inc
cmpb
arpl
roll
inc
bound
push
adc
jnp
pop
out
and
sbb
cltd
adc
fwait
sarl
scas
or
xchg
leave
hlt
cmp
mov
aaa
roll
pop
cmpsb
dec
or
movsb
fnstcw
ljmp
imul
loopne
pushf
jns
add
xchg
inc
daa
cwtl
in
mul
shl
sub
outsb
cmc
in
nop
out
dec
jl
sub
out
jmp
push
sbb
stos
lods
or
daa
rcll
rcll
clc
fbld
sbb
mov
int3
repz
add
sub
loopne
addr16
push
movsb
push
xchg
fiadds
out
adc
or
adc
and
in
aad
std
int
fsubr
cmp
mov
addr16
xor
xor
jl
fnsave
fucom
fsub
imul
clc
nop
adc
cmp
and
lfs
and
jp
scas
out
add
pop
cmpsl
mov
xor
xchg
sub
sub
dec
mov
cs
mov
roll
mov
pusha
fld
xlat
stos
dec
gs
cmp
in
in
loop
mov
jecxz
icebp
rolb
jg
mov
mov
sub
movsb
fbstp
sbb
ds
push
sti
pop
shrb
xor
test
imul
fldpi
dec
out
repnz
xor
data16
mov
js
mov
push
mov
scas
pop
add
inc
fdivrs
dec
xlat
and
add
push
pop
hlt
mov
cmp
ljmp
in
push
mov
lret
bound
in
inc
adc
push
lret
push
js
les
mov
fildll
dec
dec
pop
lahf
jp
or
loop
std
sbb
lock
or
xchg
or
fucomip
mov
pop
and
cmp
pop
icebp
mov
mov
xchg
shll
mov
je
ljmp
xchg
inc
jne
mov
in
sahf
xchg
imul
scas
sarl
jecxz
out
leave
add
stc
push
mov
inc
jl
pop
mov
inc
add
ret
mov
out
in
mov
cmpsb
ret
icebp
mov
dec
push
jbe
adc
andl
subb
inc
int3
notb
xor
xor
mov
outsl
sbb
pop
sbb
lods
push
mov
fs
xchg
test
dec
add
and
sbb
xor
call
pop
call
movsb
mov
icebp
repz
xchg
cmp
and
fwait
je
sbb
loop
or
fdivl
xlat
push
and
push
inc
pusha
push
xor
mov
inc
xchg
xchg
sbb
jp
hlt
lea
les
dec
fdivp
lahf
jnp
mov
dec
pushf
push
jl
mov
iret
ret
cmpb
cld
pop
mov
pop
mov
inc
push
imulb
push
cmpsl
or
outsl
orl
push
and
pushf
sbb
push
pop
dec
cli
test
sbb
movsb
inc
sub
or
addr16
adc
xor
subb
movsl
mov
mov
and
adc
fwait
mov
mov
imul
ret
clc
ret
push
dec
mov
push
sbb
mov
int
fimuls
call
pop
xor
pop
or
jno
fdivp
addr16
ret
mov
test
inc
mov
add
cmp
lock
aas
mov
popa
jl
mov
sahf
adc
pop
fprem
xor
cmp
or
mov
icebp
xorl
and
sbbl
lcall
mov
adc
xchg
in
pop
add
fcomp
jmp
pop
ss
xchg
lahf
pop
jecxz
sub
sahf
sbb
and
cltd
mov
lret
das
mov
jle
and
jg
xlat
in
in
jmp
aaa
movsb
push
scas
xlat
jo
xchg
cld
mov
mov
sti
mov
or
adc
jecxz
stos
jbe
push
roll
test
jnp
sub
and
mov
jns
push
mov
xor
and
push
test
xchg
xchg
std
jb
dec
xchg
pusha
jg
sbb
out
testb
cmp
cltd
int3
mov
inc
xor
jecxz
movsl
mov
lods
in
cld
fwait
jnp
cmpsb
into
ret
mov
jg
fisubl
loopne
mov
cmp
popf
and
cmc
mov
leave
cmp
sti
sbb
xchg
adc
idivb
lods
inc
int
sub
gs
std
jo
fadds
idivl
dec
leave
jle
int3
push
movsl
scas
loop
dec
aam
stc
mov
out
mov
push
ljmp
xor
dec
enter
repz
je
add
enter
add
icebp
cli
popf
aad
leave
loopne
pop
cmp
adc
sub
or
lods
dec
fbstp
push
sbb
test
test
in
jp
imul
enter
dec
addl
jle
cmpsb
iret
jbe
push
mov
mov
sub
idivb
or
sbb
jne
ja
or
daa
push
gs
adc
nop
push
xchg
call
pusha
sbb
lock
jne
out
int
imulb
fidivrl
into
pop
sbb
and
pop
pop
mov
mov
es
and
or
test
cmp
movb
mov
and
mov
inc
mov
and
sub
or
xor
or
xchg
out
cmp
xlat
adc
sub
inc
mov
xchg
int
dec
lcall
stos
lret
scas
or
inc
pop
test
lea
es
sbb
js
hlt
popa
jnp
aad
push
cwtl
inc
cltd
push
dec
mov
movsl
nop
fiaddl
fwait
in
enter
ljmp
adc
dec
cmp
sti
repz
sub
jmp
and
in
aam
cmpsb
xchg
inc
mov
xchg
sub
and
push
mov
outsl
and
pop
rcrb
add
mov
adc
mov
jne
jecxz
cmp
out
jg
cmp
jno
xor
push
xchg
mov
or
jne
lahf
es
pop
into
pop
and
repnz
stos
clc
add
orb
je
out
jbe
jnp
into
add
pusha
add
pop
das
sub
sbb
or
ret
push
jmp
cltd
jle
aad
gs
mov
icebp
pop
cmp
enter
int
xor
cmp
jg
pop
xchg
or
sbbl
hlt
adc
std
cmp
shlb
movsl
mov
pop
movsb
insb
dec
mov
sub
pop
xchg
mov
test
fwait
sub
insb
negb
cli
decl
movsl
push
mov
mov
fstpl
test
xor
out
push
cld
bound
jl
xchg
arpl
fs
rclb
mov
xchg
adc
mov
ds
pop
sub
push
xor
mov
pop
xor
push
in
add
out
pop
sbb
aam
pop
insl
mov
sbb
mov
bound
mov
fistps
lock
je
orl
in
xchg
notb
ffree
mov
add
mov
shll
gs
jbe
iret
insl
lea
dec
dec
shrb
mov
sub
pushf
push
push
sub
jg
es
lcall
adc
mov
or
mov
adc
subb
sbb
mov
mov
ficomps
sub
iret
movsl
ja
fsubrs
add
mov
inc
xchg
dec
orl
mov
es
mov
dec
nop
sub
inc
lret
mov
loopne
lock
fstpl
mov
adc
dec
mov
aaa
dec
leave
jb
jae
repz
push
mov
es
jle
mov
inc
add
xchg
ss
lea
imul
push
jae
sub
push
fnsave
push
sbb
mov
fsubrl
int
and
imul
mov
je
push
mov
cli
loopne
jmp
push
add
add
sahf
movsl
nop
jb
pushf
add
shrb
pop
xchg
push
push
loope
dec
dec
mov
in
loopne
and
lods
test
inc
inc
pop
xor
sbb
xorl
jo
pop
stos
push
pop
dec
add
leave
jge
mul
inc
sti
mov
mov
aam
int
xchg
and
fisubl
cmp
and
leave
sbb
cmp
push
mov
xchg
push
or
lods
mov
adc
enter
ljmp
mov
add
cmp
pop
jnp
adc
mov
dec
leave
dec
insb
push
cmp
rorb
jno
xchg
stc
scas
mov
lods
fwait
pop
sbb
shlb
sub
test
dec
sarb
arpl
loopne
mov
fdivl
or
pop
cmp
sub
loope
out
adc
cmc
cmc
unpcklps
ret
mov
test
xor
je
outsl
inc
pusha
jg
mov
in
ret
mov
sbb
push
pop
dec
cmp
cld
sub
stc
sub
mov
jae
fwait
fwait
dec
inc
pop
push
imull
adc
cmp
and
popa
sub
iret
mov
pop
or
subl
jmp
jp
rorb
cmpsb
das
test
loope
mov
out
mov
inc
add
dec
insl
clc
ret
fs
aad
mov
lcall
cmp
sub
flds
out
jecxz
or
push
lds
mov
jns
mov
jno
xchg
popa
fs
pop
mov
mov
pop
in
fcoms
push
sub
xor
repz
es
xlat
xchg
jne
jno
add
sahf
je
mov
xchg
in
cmpsb
mov
pop
mov
mov
adc
add
or
test
adc
xor
test
cs
jmp
fisubrs
pop
mov
aas
mov
and
popa
js
push
pusha
sub
jno
outsl
test
jmp
sub
fdivrl
cmpsl
adc
and
and
jg
cli
mov
mov
out
mov
lods
sahf
movsl
lahf
arpl
mov
mov
pop
inc
inc
mov
xchg
jno
xor
inc
push
cmp
adc
sub
lcall
jge
and
xchg
xchg
mov
jle
rorb
lods
add
mov
push
stos
fdivrs
ljmp
jle
cmc
hlt
lahf
test
test
adc
pusha
shll
push
mov
call
lds
into
pushf
out
aaa
push
clc
jae
xchg
pop
cmovno
lcall
outsl
ss
outsl
push
adc
enter
cltd
mov
imul
jmp
push
jle
push
lret
fmuls
fstl
mov
jp
mov
stos
rorl
push
push
int3
push
and
mov
out
cmp
add
dec
outsb
push
lods
xchg
sbb
mov
outsl
shrl
mov
in
inc
imul
xchg
aas
inc
icebp
shll
and
mov
scas
mov
mov
rep
sub
jg
call
rcll
xor
jb
in
cmp
pushf
xchg
push
arpl
leave
jae
das
addr16
fisttps
mov
test
imul
mov
mov
std
pop
dec
mov
cli
sub
push
push
xor
test
iret
iret
das
scas
rorb
cmpsb
pop
je
pop
sbb
pop
jno
cs
mov
iret
bound
mov
ds
sub
test
mov
lock
mov
addr16
test
pop
icebp
mov
push
mov
jg
scas
jnp
inc
fsubs
mov
pop
mov
add
cmc
rolb
sbb
xlat
lahf
sub
sbb
stc
xchg
cmc
outsb
push
aam
sti
mov
pop
imul
lds
push
dec
and
xchg
aas
lea
jae
sub
in
dec
pop
push
out
outsb
cmp
inc
movsl
mov
ret
push
add
and
fidivs
and
xor
inc
xchg
add
shlb
sbb
in
sbb
arpl
xchg
jl
stos
mov
lret
push
ljmp
and
push
inc
into
movl
inc
xor
jno
push
loopne
jae
cmp
mov
in
call
aad
push
pop
adc
mov
push
imul
std
fisubrs
ds
shrl
push
mov
inc
inc
scas
mov
push
ja
xor
adc
mov
xchg
aas
jnp
sarl
scas
out
push
xlat
inc
loop
aaa
out
inc
in
xlat
push
inc
or
setns
outsb
add
jo
cmpb
sub
cmpsb
popa
and
add
dec
mov
cmp
mov
mov
imul
push
jg
ror
lcall
inc
push
xchg
jns
mov
sbb
ljmp
notl
pusha
fsubs
inc
cli
inc
jnp
ret
lea
mov
leave
and
mov
jl
arpl
test
mov
xchg
xor
int3
xor
pop
seto
mov
test
cmp
mov
mov
sbb
or
fwait
fs
cmpsl
mov
pop
push
inc
dec
fcmovne
xchg
push
inc
pop
scas
sbb
jb
cmc
mov
fcmovu
mov
adc
sbb
xchg
out
fcomi
cli
insl
popf
mov
pop
mov
insb
xchg
mov
into
add
out
xchg
mov
xchg
or
ljmp
out
fs
lahf
pop
repz
in
sub
xor
lea
dec
clc
and
push
xor
pop
mov
insb
pop
and
je
popf
aaa
js
cmp
shll
inc
adc
pop
or
add
push
cmp
and
sbb
test
mov
dec
stos
cmp
notl
cs
xchg
fld
nop
push
divl
sbb
leave
sbb
xor
cltd
js
xchg
pusha
cwtl
add
jg
push
pop
je
jo
lahf
lods
lock
jmp
lods
jl
jl
dec
sbbb
gs
mov
adc
push
fiadds
out
push
rcll
xchg
mov
xor
das
sbb
ljmp
push
lods
daa
jge
fs
push
pop
ficomps
ret
mov
js
jecxz
test
adc
mov
je
mov
stos
jge
pop
cmpsb
enter
mov
out
jae
adc
and
test
aas
add
adc
rcr
mov
dec
sti
inc
ja
inc
out
push
xchg
or
inc
cmp
adc
dec
or
mov
pop
fisubrs
pop
mov
dec
xor
cmp
xchg
fwait
jbe
jb
aas
dec
xchg
dec
mov
shr
mov
out
fdivs
and
mov
add
fdivrl
jno
mov
push
adc
enter
lret
mov
ljmp
sbb
mov
xchg
or
shl
imul
dec
call
loop
mov
xchg
add
leave
ficompl
sub
mov
push
xor
lds
pop
int
outsb
mov
cmp
xorb
mov
fwait
push
xchg
test
movsb
lods
test
dec
lods
and
das
mov
and
test
and
adc
mov
jg
cmp
pop
rep
cmpsl
repz
sti
int3
jl
loopne
mov
push
push
repz
jb
repnz
dec
popf
add
icebp
dec
mov
enter
js
pop
pop
sbb
jle
lods
inc
jne
out
jo
mov
add
xor
cmpsb
out
or
jmp
lds
mov
dec
xor
icebp
pushf
les
fisttpll
add
jge
push
into
jmp
inc
cmp
loope
or
pop
shrb
fs
incb
mov
and
aam
cmc
inc
out
stos
inc
pop
mov
xor
popf
insl
rcrl
ds
inc
jmpw
mov
scas
in
insl
mov
cmp
mov
adc
test
aad
adc
shr
sub
jle
fisttps
dec
popa
push
insl
adc
ds
mov
sbbb
fsubrl
pop
repnz
imul
scas
and
icebp
push
pop
insl
imul
mov
mov
inc
pop
add
inc
jns
dec
int3
mov
ret
inc
inc
mov
mov
pop
pushf
lret
test
loopne
popf
dec
dec
cmp
push
push
fldt
lcall
mov
jmp
sbb
std
movsl
xchg
sub
dec
aad
cmc
push
inc
pop
in
pop
dec
out
pop
pop
in
mov
lock
clc
jge
mov
lahf
push
mov
cmp
rcll
popf
dec
pop
lds
mov
mov
jmp
pop
stc
leave
sarl
icebp
cmp
andb
sbb
addr16
movsb
add
imul
aaa
inc
into
movsl
jecxz
mov
cmc
imulb
push
xor
out
inc
push
test
inc
cld
jns
ss
shlb
addr16
ljmp
or
cmp
in
addr16
dec
or
or
test
sysexit
adc
imul
int3
ret
popa
dec
sti
jo
sub
push
iret
mov
adc
pop
aam
je
popf
xchg
aam
mov
int3
dec
dec
and
scas
decb
stos
nop
inc
xchg
adc
and
cmp
xchg
and
lahf
or
ja
mov
or
call
nop
jbe
adc
cli
outsl
cwtl
repz
jo
les
scas
pop
xor
fiadds
adc
aam
testb
and
or
jg
xchg
adc
cmp
adc
push
lahf
out
push
fwait
movsl
push
pop
adcl
or
ds
sub
jl
jns
cmp
adc
and
push
cmp
jne
mov
cmp
mov
sbb
mov
cltd
sub
sub
push
sahf
push
dec
les
sti
cmpsl
cmpb
bound
jns
pop
cmp
or
sti
dec
dec
cltd
stc
in
loop
inc
xchg
jno
outsb
rcll
insl
pop
jl
repz
movsl
add
dec
sti
or
cld
cmpsb
scas
mov
mov
fstl
push
or
mov
sbb
movsl
pop
xor
mov
in
mov
jecxz
adc
out
and
inc
push
gs
lods
lds
lret
jno
pushf
mov
stc
or
sbb
or
cltd
push
mov
gs
lods
jmp
dec
leave
inc
stos
mov
das
jo
jl
dec
and
mov
iret
inc
clc
fs
movsb
lret
push
les
out
sahf
jnp
movsl
cmp
sti
cmp
xchg
ror
test
testb
jo
jp
fptan
pop
adc
sti
montmul
cmpsb
pop
xchg
mov
fcom
mov
push
shlb
rorl
into
imul
dec
or
in
inc
daa
cltd
jbe
xchg
mov
sbb
stos
hlt
ss
addr16
bsr
pop
mov
addb
js
dec
sbb
sbbl
mov
pop
push
movsb
push
mov
xchg
xchg
pop
stc
insl
xchg
jg
stos
and
sahf
jle
out
das
aad
sti
push
push
out
xor
and
add
incb
leave
ret
pop
fwait
and
inc
cmp
xor
cmp
addr16
mov
pop
xchg
imul
and
addr16
fwait
dec
inc
push
push
xor
dec
aam
cli
inc
cmp
outsb
mov
lret
lods
dec
js
imull
sti
add
xchg
and
sbb
dec
enter
je
mov
pop
pop
rorl
dec
scas
mov
cld
cmp
sti
shlb
mov
pop
mov
clc
out
div
scas
push
in
loopne
cltd
mov
nop
mov
mov
fcmovb
inc
mulb
loopne
adc
imul
mov
mov
divps
inc
jge
idivb
add
pop
ss
mov
jl
push
loop
daa
mov
pusha
out
jl
rorb
add
ds
inc
jle
and
addr16
or
sub
vpshufd
fistpll
add
out
hlt
inc
adc
mov
mov
xor
mov
mov
insb
inc
lcall
mov
add
shr
test
loopne
push
push
lds
xchg
xchg
rcrl
imul
mov
jle
daa
or
or
pusha
test
fcompl
mov
adcl
cld
mov
push
pop
add
add
mov
int
arpl
std
mov
or
or
inc
sub
mov
lods
sub
mov
loope
or
pop
pushf
xor
cmpsb
fwait
dec
and
fnstsw
aas
jl
mov
sub
lods
inc
lret
mov
and
push
push
mov
shll
nop
lret
testl
xor
jmp
popf
xor
xchg
mov
cwtl
icebp
call
pop
leave
pop
scas
mov
mov
inc
imul
imul
adc
jg
movsb
or
sbb
sub
sbb
cmp
dec
test
inc
sub
cmp
sbbl
dec
push
dec
inc
mov
and
adc
imul
sbb
push
lcall
dec
fisttpl
sub
pop
mov
movd
aas
repnz
gs
xchg
mov
jne
fwait
in
insl
jmp
enter
popa
fsts
inc
add
icebp
daa
cs
movsb
cmp
ror
mov
es
jmp
stc
outsb
enter
adc
cmpsb
out
lea
pop
iret
sbb
ret
mov
push
lret
test
jns
or
add
inc
cmova
and
cmp
mov
push
sbb
fs
rcll
dec
and
jb
je
pop
fwait
and
jo
jbe
xchg
in
adcb
sbb
loopne
sti
jle
fbld
jge
xor
adc
jne
mov
pop
push
add
sbb
cmpsb
jnp
mov
test
shll
lock
mov
add
sub
mov
loopne
lret
pop
or
stos
aaa
jns
inc
mov
in
rorb
pop
xchg
and
xchg
dec
cmp
dec
cwtl
mov
mov
fdiv
cltd
or
lods
pop
sbb
xchg
cli
xor
popa
outsb
shlb
cmp
outsb
dec
inc
cli
jne
push
inc
dec
xchg
jg
adc
aas
std
subl
sub
xchg
lods
repz
out
xchg
inc
jg
aaa
fs
mov
imul
jbe
mov
decl
iret
adc
mov
mov
ljmp
insl
and
pop
cmp
mov
add
or
aam
jmp
lds
or
shll
test
cltd
outsb
loop
and
pop
andb
sarl
pop
jg
xor
push
mov
fsts
mov
jle
push
push
arpl
mov
pop
cmpsl
test
cmp
mov
pop
fistpll
mov
sub
mov
mov
jecxz
mov
std
negl
repnz
or
fdivs
push
sub
adc
jae
xor
mov
mov
jns
sbb
cmpsl
push
jbe
test
pop
xchg
xor
inc
leave
sbb
scas
add
push
push
xchg
test
cltd
mov
inc
pop
mov
repz
jbe
loope
imul
xchg
ljmp
inc
jb
add
mov
jno
popa
in
out
lret
pop
sub
sub
add
adc
xor
mov
inc
fstl
add
or
in
mov
jl
lret
xor
adcb
xor
cmp
push
push
out
lret
bnd
pushf
pop
lret
push
fidivrs
jo
shll
dec
mov
int3
xchg
adc
mov
je
pop
ja
adc
gs
iret
outsb
xchg
loope
cmp
pop
dec
jmp
div
aam
movsl
xor
aas
gs
mov
nop
and
jns
bound
ljmp
mov
cmp
xor
jle
test
mov
sub
in
pop
pop
sbb
outsb
cmp
mov
out
inc
jle
and
lods
cs
mov
or
mov
out
stos
lds
movsl
jno
daa
arpl
ficompl
mov
adc
mov
fcmovne
sub
inc
mov
or
inc
or
xor
js
negb
and
aas
jg
fimuls
fcomps
lahf
jmp
ljmp
cmpl
lret
into
sbb
or
push
cmc
xlat
push
mov
add
mov
and
in
or
jnp
roll
sbb
lahf
les
xor
and
inc
daa
int
sbb
jae
aad
rcrb
push
and
popf
cmpb
nop
inc
cld
icebp
dec
jbe
out
push
and
lods
jmp
cmc
shll
ss
dec
mov
push
cmp
lods
xor
add
rcrb
jnp
imul
clc
jne
jge
add
lea
pop
ret
push
inc
pop
lock
repnz
cmp
cmpsb
and
sbb
mov
xorb
mov
xor
pop
loope
rol
stos
mov
ljmp
daa
shlb
mov
mov
jge
jb
out
mov
ljmp
andb
cmp
xor
dec
xchg
frstor
loope
jg
es
das
and
mov
push
gs
scas
or
pop
push
mov
fists
mov
pop
sbb
mov
adc
loopne
mov
es
inc
loopne
fldenv
jecxz
xchg
or
cmpsb
xchg
cwtl
addl
jns
sti
adc
mov
mov
into
loopne
jl
in
cli
xlat
popa
test
sub
sbbb
cwtl
xchg
clc
mov
dec
cmpb
fistps
or
push
mov
lret
and
lods
sbb
dec
mov
mov
cmpb
cmpsb
push
push
dec
jo
daa
inc
lods
ljmp
pop
mov
ffree
outsb
fisttpl
add
jnp
adc
orl
and
mov
mov
andb
mov
or
push
push
icebp
xor
inc
mov
mov
div
and
xor
andl
lcall
stos
sti
popa
cmp
and
lret
out
xor
and
cs
call
aas
adc
mov
movsb
jmp
xchg
andb
stos
fisubs
movsl
mov
popf
jae
and
dec
cmpsb
out
jne
mov
cli
mov
js
popa
push
adc
div
in
das
adcb
data16
push
mov
fsubrs
jo
and
pop
and
jecxz
leave
shrb
sub
adc
lods
adc
cmp
daa
push
inc
cmp
aaa
jge
jo
inc
test
pop
aam
aad
jecxz
cmp
lods
cmp
divl
mov
inc
repz
sub
out
sbb
mov
in
sbb
adc
xor
outsb
fnstenv
push
and
xorb
das
inc
shll
mov
xchg
aam
cmp
or
iret
dec
and
or
xchg
in
lret
push
incl
lods
int
jl
in
fwait
arpl
add
xchg
cmp
je
loop
sbb
rcll
pop
xchg
shrb
call
gs
add
inc
push
std
loope
push
scas
sbbb
in
rcl
test
jno
lret
jl
fldenv
test
int
xchg
fucomip
sbb
movsl
and
fucomi
bound
inc
xchg
mov
ret
cmpsb
pop
repz
iret
js
lahf
cld
je
inc
pop
clc
inc
sub
loop
pop
xor
xchg
jns
int3
ss
hlt
cmp
gs
adc
mov
adc
in
nopl
mov
mov
xchg
popa
or
mov
mov
mov
mov
in
adc
clc
ret
mov
lock
add
fs
test
dec
xor
dec
repnz
fcmovne
bound
pop
mov
cmp
push
jg
stos
call
scas
mov
pop
push
adc
scas
les
mov
pop
inc
loope
ret
xrelease
int3
rolb
push
rol
outsl
mov
xchg
movsb
push
xchg
in
mov
setge
stos
mov
sub
jmp
shll
stc
aam
pop
imul
sub
fwait
js
js
imul
in
flds
mov
ficoms
iret
mov
cmpsb
es
or
xor
cmpl
leavew
call
xor
mov
pop
adc
add
cwtl
enter
pop
sahf
pop
lret
dec
mov
mov
hlt
lcall
pop
out
inc
xor
adcb
ret
sbb
jo
stos
xchg
fs
ret
mov
pop
push
cmp
and
movl
push
jmp
ss
aam
insl
mov
out
cld
lods
ss
stos
jb
lods
aam
cltd
cltd
sbb
push
call
push
sbb
faddl
xor
testb
or
inc
fiaddl
jno
cltd
xor
add
jns
scas
mov
test
test
dec
push
sub
ljmp
aas
jmp
scas
mov
mov
pushfw
push
mov
mov
sub
adcb
xchg
adc
movsl
xchg
inc
fsubl
mov
or
ds
movb
loopne
jl
ret
cmp
call
adcb
jp
pop
int3
in
out
outsb
cli
push
imul
mov
sub
and
mov
rcrl
cmp
pop
lahf
lea
loopne
pop
mov
jge
out
daa
mov
dec
mov
clc
dec
jo
add
sub
imul
xor
sbb
mov
fstp
mov
popf
imul
ret
sbb
mov
mov
mov
pop
mov
xchg
sbb
mov
nop
scas
sbbb
andl
popa
cmp
out
inc
and
cli
in
ja
ret
shr
int
adc
sub
fsubrl
sbb
mov
push
sub
in
dec
int3
add
inc
sbb
inc
add
pop
movsb
popa
lds
call
fs
sbb
and
xlat
dec
mov
push
jnp
cmpl
and
mov
movsl
rolb
stc
jns
movsb
and
pop
push
mull
dec
dec
mov
mov
adc
jnp
pop
cld
loop
inc
sbb
xchg
mov
insb
jle
dec
test
fcoml
lret
mov
aas
sub
jge
pop
mov
loop
mov
mov
repz
aaa
mov
lret
mov
push
out
inc
das
es
insb
movsl
mov
stos
call
imul
mov
es
bound
adc
mov
jns
mov
stc
mov
loop
pop
sahf
dec
rcrl
inc
sbb
in
sbb
jae
xchg
and
cmp
clc
testl
push
pop
cs
mov
xchg
xchg
outsl
add
xchg
xchg
popf
nop
jecxz
lahf
clc
jmp
jo
dec
iret
and
mov
jae
lods
mov
and
shrl
pusha
pop
pminsw
xor
loop
mov
sub
and
mov
sqrtps
repnz
movsl
and
iret
dec
and
iret
or
cmp
inc
daa
in
inc
in
push
test
out
stos
or
add
mov
sbb
sbb
pmaddwd
aad
mov
xchg
cld
sub
mov
or
mov
lcall
xor
inc
popa
push
xchg
inc
inc
repz
aad
push
or
pop
mov
movsb
xchg
xor
adc
mov
iret
rcll
daa
ds
imul
push
mov
movsb
pusha
xorl
scas
pop
mov
bound
mov
stos
push
aam
aam
cmpl
int
xlat
inc
aam
addb
js
sbb
sbb
sub
add
rorl
adc
fdivl
loopne
push
cmpsl
dec
xlat
fildl
push
xchg
stos
lods
cld
mov
fmull
lds
leave
xor
cmp
jle
mov
xchg
xor
push
es
imul
xchg
subb
mov
movsb
insl
insb
jns
pop
gs
sarb
cmp
mov
add
xlat
pusha
mov
inc
mov
cmp
lods
adc
inc
arpl
mov
loop
iret
stc
ss
push
lret
ret
mov
sarb
ud1
push
jg
mov
pushf
les
test
scas
sbb
enter
dec
sahf
repz
adc
xor
inc
pminub
add
add
mov
lds
insl
into
dec
or
fimull
and
subb
scas
pop
adc
mov
mov
pop
mov
jae
xchg
leave
xchg
and
scas
pusha
lahf
mov
movsl
loope
je
mov
mov
xor
sbb
dec
insl
push
popf
leave
and
rorl
jle
xor
dec
push
stos
or
cmpsb
mov
xor
sbb
mov
rolb
add
and
sbb
dec
and
mov
jl
dec
leave
push
out
bound
mov
fisubrl
dec
ljmp
in
mov
shl
cmp
repnz
dec
imul
call
cmp
cmp
out
es
mov
aad
mov
inc
ja
or
push
add
mov
ds
repnz
dec
mov
mov
int3
or
lea
mov
cmc
sub
cmovp
and
mov
scas
mov
mov
xchg
or
js
sbb
pushf
jp
movsl
mov
inc
negb
inc
imul
cmp
nop
or
pop
repz
push
aas
test
cwtl
mov
aam
add
clc
or
lret
xor
pop
or
jo
cmpsb
in
sub
and
push
jmp
mov
int3
dec
jle
mov
add
pop
cs
pop
cmc
shlb
out
int
hlt
das
or
pop
inc
outsl
mov
push
aaa
jmp
cwtl
in
rorb
xor
stos
inc
movsl
mov
loop
fwait
mov
pop
inc
test
leave
adc
mov
xbegin
fs
int3
xchg
arpl
lock
fnstsw
jo
push
cmpl
sbb
mov
inc
test
mov
dec
cltd
je
dec
into
repnz
xchg
dec
daa
mov
repnz
or
outsl
mov
pop
cmp
sub
fimuls
add
popa
cmpsb
or
repz
sbb
push
shl
pop
lret
mov
lahf
xchg
fmuls
movsb
mov
lcall
loopne
lahf
mov
loopne
aam
cmpb
cs
pop
dec
mov
jae
or
daa
xchg
lcall
fdivl
push
jnp
xchg
dec
ja
out
mov
shrl
inc
lds
sbb
fwait
notb
cmp
les
out
xor
pop
push
or
xchg
iret
sbbl
mov
cmp
out
add
pop
mov
cmp
mov
cmp
test
jg
movsb
in
rcr
inc
loop
dec
jle
mov
mov
mov
jb
push
or
cli
cmp
and
arpl
inc
sub
aas
aaa
in
cmp
inc
sbb
xor
ss
and
push
xlat
push
push
shrl
jbe
sbb
push
mov
sub
jnp
sub
sbb
cli
and
movsb
sub
sub
out
or
jo
fists
aam
pusha
xor
popa
in
idivb
cltd
mov
push
pop
inc
xchg
sahf
data16
inc
imul
fdiv
cmp
xchg
mov
fcoms
lods
fcmovne
in
xchg
inc
loope
push
bound
dec
mov
cs
push
ror
adc
jbe
mov
daa
in
cs
pop
imul
add
lcall
sub
out
cs
sbb
loop
pop
push
imul
mov
inc
inc
fnstenv
add
sub
leave
mov
jmp
jnp
nop
aas
jg
test
outsb
or
iret
testl
xor
push
dec
xchg
mov
sar
add
push
arpl
pushf
stos
mov
bswap
js
imulb
adc
sahf
movsl
rorl
add
cwtl
sbb
lods
jle
inc
xchg
iret
fisttpll
test
inc
mov
testl
lock
and
je
nop
add
insb
lret
push
mov
or
stos
sub
push
xor
lret
xchg
sub
fmul
shll
in
fcoml
xor
jmp
add
je
cmpb
inc
stos
adc
jmp
jb
call
loop
sub
loop
sub
sti
xor
inc
fisubrl
xchg
pop
inc
dec
add
mov
sub
decl
clc
cmpsl
push
pushf
shlb
and
jno
pop
xchg
pop
pop
rcll
sub
sub
cmp
or
jl
fwait
jp
movl
out
outsl
jnp
mov
test
ljmp
es
lock
jne
lods
xor
or
and
jbe
mov
sbb
pop
test
enter
decb
jo
cmpb
loopne
mov
aaa
scas
xor
cld
dec
fldcw
mov
jae
cs
and
subb
and
out
mov
jo
pusha
or
or
addr16
xchg
pop
inc
lret
rcrb
mov
cmp
stc
mov
jl
lahf
or
sbb
pop
or
mov
mov
cmp
jge
cld
daa
loop
xor
adc
jp
loop
imul
xlat
insl
sbb
xchg
mov
adc
sub
out
aam
or
arpl
rorl
jl
and
mov
adc
ds
pop
lods
xchg
xor
adc
cltd
stos
xor
in
scas
inc
dec
adc
leave
in
jnp
sub
shrb
std
movsb
and
and
lds
das
fistl
int
cs
cmp
mov
out
jg
xchg
outsl
loop
mov
inc
cmpsb
cmp
xor
int3
movsb
mov
pop
or
dec
rorb
fadds
xor
sahf
outsb
pushf
hlt
add
out
mov
shll
mov
lret
mov
in
mov
aam
stc
shlb
mov
and
mov
dec
push
xor
sbb
out
mul
jns
xchg
fcoms
mov
jno
subb
test
xor
loopne
dec
sub
out
jne
aas
ds
fistpl
mov
sub
push
loope
flds
and
insl
lret
lahf
jb
pop
adc
mov
pop
in
xchg
mov
shrl
rcr
xor
cmovbe
sti
stos
bound
gs
outsl
lret
ds
sahf
jo
dec
loopne
cmp
pusha
adc
adc
or
mov
sub
adcl
in
setb
sbb
ja
mov
movsl
adc
cmp
sbb
push
lret
lods
jle
loope
push
repz
test
dec
insb
xor
push
jne
xchg
inc
cmc
aam
lds
cmp
cmc
pop
jg
or
xor
nop
insl
fdivr
sarb
sbb
sub
sti
movsb
adc
mov
push
inc
sub
fildl
int
xor
sti
imul
lods
out
testl
and
inc
cmp
test
xchg
popl
cwtl
ds
outsl
cmc
xchg
mov
or
fsubs
inc
imul
mov
mov
dec
inc
sub
dec
add
inc
mov
sbb
jmp
pop
lcall
nop
rorl
bound
mov
sub
cmpsb
pop
std
mov
or
push
jne
xor
ds
push
jae
xlat
sbb
loope
outsb
push
push
push
test
lahf
sub
dec
mov
cmp
push
xchg
mov
stos
mov
cmp
hlt
jl
mov
sub
dec
insl
mov
lcall
movsb
bound
mov
aas
sbb
adc
jne
orb
js
pushf
scas
mov
stos
lods
test
lods
sub
les
add
sbb
lods
jo
lods
or
ret
test
ret
subl
mov
sub
scas
call
std
push
aaa
out
sub
leave
bound
cmc
pop
add
xchg
dec
iret
dec
cmp
push
insb
shlb
xor
notl
mov
xchg
xor
xchg
cmpsl
push
dec
add
dec
add
movsb
push
inc
popf
mov
jne
fs
nop
add
pop
leave
and
or
jb
bound
pop
mov
or
jge
sbb
ret
inc
inc
divl
lret
pop
jecxz
cmpsl
cmp
jmp
push
sub
paddq
jnp
out
or
mov
sbb
mov
cmpsb
lock
dec
jns
in
enter
adc
negb
cmp
inc
pusha
outsb
add
fcomp
call
sub
sub
dec
imul
jns
add
rolb
sbb
test
out
cs
lahf
mov
jmp
cmp
add
or
add
dec
mov
pop
imul
cmp
cmc
jo
xor
adc
push
mov
inc
aas
inc
imul
and
push
mov
jnp
mov
jmp
mov
mov
sbb
add
cmpsl
addl
mov
push
adc
jae
mov
out
push
icebp
xchg
sub
bound
lcall
daa
lret
or
inc
insl
cmp
adc
jne
mov
pusha
pop
shl
add
call
or
cmc
or
cmpsb
xchg
mov
sub
mov
adc
stos
ss
push
pop
jle
popa
jo
and
aad
test
call
lds
lds
add
lcall
gs
hlt
ds
std
dec
cltd
sbb
outsl
cmc
cwtl
push
sahf
jnp
jmp
gs
rcr
mov
call
push
daa
inc
std
adc
mov
xchg
mov
fiadds
sub
aaa
sub
xor
mov
bound
add
aaa
xor
int3
cwtl
inc
and
movl
mov
lds
xchg
sti
jns
dec
sbb
pusha
out
loopnew
ds
notl
sahf
lea
jp
sbb
or
ljmp
inc
inc
int3
mov
cmp
inc
mov
adc
dec
iret
cmp
xchg
xor
pop
jl
adc
lret
imul
pop
sbb
and
mov
fdivrl
das
mov
mov
ja
dec
and
xor
cmpsl
and
add
xchg
out
xlat
rolb
test
mov
mov
jbe
push
inc
das
jp
enter
jbe
sub
aas
icebp
sti
cmp
jns
outsl
in
pop
pop
push
xor
mov
test
cmp
or
int
dec
jbe
mov
adc
sbb
mov
enter
xchg
dec
jae
jno
inc
push
pop
stos
cwtl
push
bound
shrl
jns
movsb
mov
clc
pop
and
in
jbe
adc
and
sbb
pop
adc
inc
adc
sub
lret
push
dec
call
mov
and
mov
stos
pop
sbb
fisttpl
and
cmpsb
push
or
out
les
xchg
add
lahf
in
inc
sbb
in
movlps
je
test
fs
xchg
out
mov
push
into
push
xorb
outsl
jnp
mov
sub
cltd
mov
mov
daa
sbb
pop
jg
jmp
mov
pop
out
xchg
mov
push
pop
lea
repnz
ror
pushf
insl
dec
sbb
push
sbb
jno
loope
arpl
push
xor
dec
push
jg
cli
jg
ljmp
je
adc
arpl
mov
mov
int3
mov
cmp
jae
scas
and
lret
stos
insl
jnp
les
out
jecxz
or
pop
stos
xlat
outsl
sub
gs
les
shrl
jp
or
pop
leave
stos
rclb
pusha
stc
nop
in
xor
hlt
and
sub
lret
repnz
lock
outsl
testb
fists
pop
mov
daa
pop
aas
dec
xchg
mov
xlat
pusha
jp
aaa
aaa
adc
imul
je
mov
out
xchg
sub
jl
mov
popf
sbb
ret
scas
lahf
arpl
add
inc
lret
adc
lahf
sub
adc
inc
divl
cmp
pop
sbb
or
mov
dec
dec
inc
add
and
fsts
xchg
in
sub
stos
fadd
aad
hlt
js
push
jb
fsubp
lret
mov
push
pop
cmc
stos
ret
imul
jb
sarl
xchg
jne
cmp
pop
arpl
leave
mov
mov
shlb
sub
pop
jbe
hlt
push
xchg
push
test
loope
cmp
pushf
push
inc
test
pop
mov
mov
lret
aaa
repnz
aam
dec
adc
pushl
in
aas
push
sbb
icebp
jo
aas
aaa
nop
add
ret
dec
pop
test
cld
cmp
inc
ficompl
cmp
call
dec
mov
test
xlat
js
pop
dec
xor
mov
dec
add
int3
mov
jle
xchg
dec
adc
inc
mov
aas
adc
in
or
mov
xchg
rorl
pop
pop
or
sub
shll
jg
lods
imul
mov
test
hlt
pop
cs
addb
dec
loop
push
fwait
and
imul
out
loopne
adc
add
inc
int
and
lretw
cmp
rcr
fldcw
int3
mov
adc
outsb
or
jns
outsl
mov
lods
adc
inc
inc
jne
into
test
ds
push
dec
in
lret
mov
add
push
insb
or
push
jne
mov
push
in
xchg
cs
inc
pop
ds
out
xor
and
ds
add
lods
scas
outsl
stc
ror
movsb
cli
pop
pusha
lret
sbbb
push
clc
repz
movsl
add
dec
xchg
inc
inc
and
idivb
outsb
in
xchg
fnstenv
aad
mulb
lods
mov
dec
mov
icebp
dec
arpl
dec
sub
xor
fsubr
test
mov
cmc
mov
call
adc
mov
mov
inc
jbe
mov
getsec
push
aas
mov
jo
dec
movsl
scas
enter
aad
pop
insl
push
andl
cltd
inc
jge
sbb
les
lret
sub
sub
mov
pop
jecxz
es
push
cmpsb
hlt
mov
dec
inc
push
fidivs
jl
test
or
stos
mov
cmp
mov
idiv
sbbl
data16
xchg
lods
push
xchg
das
inc
pop
inc
out
subl
and
loopne
ljmp
hlt
clc
out
loop
in
jmp
push
xchg
pop
test
insb
ja
sub
jecxz
push
outsl
pushf
jge
dec
hlt
and
loop
ret
inc
inc
cmpsb
xchg
mov
dec
pop
das
adc
cmpsl
fnstsw
loope
mov
hlt
lods
jne
xor
lods
subl
imul
fisubs
cmc
lock
mov
lahf
mov
and
fiaddl
loope
push
xchg
add
adc
xor
dec
inc
xor
lods
fcoml
dec
or
mov
jge
cld
repnz
pop
cmpsb
xchg
sbb
mov
cmp
jo
sub
or
rcll
mov
arpl
mov
pop
xor
in
push
fisttps
or
das
aaa
xchg
mov
ljmp
out
loopne
jb
mov
inc
sub
push
pop
mov
in
pop
adc
aam
stc
movsl
xchg
dec
jg
sub
movsl
dec
push
ds
repnz
lds
push
movsb
jmp
mov
cmp
out
movsl
xor
pop
loope
add
aam
stos
add
imul
hlt
and
push
loopne
fisttpl
jge
std
mov
xor
pop
mov
sbb
cs
xlat
mov
imul
mov
pop
jno
mov
dec
addr16
mov
out
scas
aas
mov
pop
ljmp
pop
out
mov
push
jle
push
mov
ret
out
mov
add
inc
sti
jns
xor
mov
mov
test
pop
push
and
jns
mov
xchg
sub
jecxz
add
scas
or
and
iret
loop
push
and
lahf
add
idivb
mov
jae
mov
dec
jl
nop
xchg
push
xchg
push
mov
sub
or
mov
push
das
push
jb
sub
leave
pop
adc
xchg
dec
xlat
pop
mov
xor
and
pop
push
or
mov
mov
scas
das
xchg
fs
adc
dec
cli
mov
add
dec
inc
xchg
jne
and
rclb
mov
shl
nop
fs
popa
inc
mov
sahf
test
outsl
push
jmp
push
pop
mov
add
adc
outsb
sbb
fwait
xchg
ljmp
sti
push
in
stos
std
lods
jae
cmp
inc
mov
dec
mov
and
push
or
pop
jmp
mov
mov
mov
fistpll
adc
add
call
dec
jg
stos
leave
xor
ljmp
or
lret
out
xor
testl
xchg
and
xor
push
pop
pop
lret
dec
sbb
stos
fsubl
push
mov
push
fcoms
sbb
add
jno
cmc
jb
mov
mov
sbb
es
scas
sbb
or
movsb
and
popa
sbb
testb
pusha
pop
subb
arpl
mul
push
xchg
mov
pop
or
and
push
es
jp
mov
cli
sub
pop
inc
aad
rorl
pop
dec
test
mov
or
sub
push
adc
arpl
out
mov
xchg
sub
sbb
add
jle,pt
push
mov
jmp
mov
cmpsb
ret
mov
push
or
inc
sti
mov
fsubrs
pop
dec
out
xchg
mov
mov
jge
cmp
in
pusha
mov
xchg
cmp
mov
sub
lods
inc
int
pop
push
mov
aam
jg
pop
mov
ret
insl
cld
push
or
fidivrl
sub
mov
pop
push
sbb
mov
mov
jae
jo
adc
inc
fidivrs
fidivrl
pop
xor
pusha
push
cmp
push
xchg
xchg
daa
adc
sahf
pop
les
push
addr16
xor
xchg
loop
aam
mov
rclb
lds
push
lock
ljmp
inc
adc
rolb
xchg
loope
jns
shlb
jge
cmpsb
enter
out
popa
test
inc
sub
ret
iretw
pop
rclb
cmovle
inc
pushf
dec
jb
in
lds
dec
lret
cltd
fwait
imul
mov
jbe
lcall
rcrl
addr16
cmp
push
sub
aas
jg
xchg
inc
or
or
mov
lret
mov
xor
pusha
xlat
jle
cmc
sub
icebp
js
pop
cmp
fidivrs
cmpsl
cmp
jb
adcl
stos
lcall
gs
mov
push
outsl
mov
mov
xchg
push
jge
mov
mov
sbb
repnz
jle
out
jno
repz
mov
in
dec
pop
or
nop
movsb
inc
sbb
aad
shll
mov
cmp
addr16
je
inc
xor
dec
sarl
mov
cmpsl
sbb
adc
mov
shrb
push
ss
and
or
fmull
push
jmp
inc
push
enter
push
mov
ret
inc
cmp
test
pop
pop
mov
xchg
xor
lret
std
sbb
insl
ret
push
mov
out
mov
or
jbe
daa
fldz
mov
scas
sti
xchg
rolb
popa
lahf
xchg
mov
popa
and
pop
jae
in
xchg
dec
dec
lods
data16
roll
loopne
pusha
aaa
mov
stc
stos
sbb
jg
or
xchg
jno
repnz
sbb
mov
pop
int3
stc
xchg
dec
adc
out
lret
test
fs
aam
das
mov
pusha
xchg
add
ja
out
mov
and
and
test
movsl
andl
xor
inc
pushf
in
div
xchg
xchg
sbb
dec
or
fadds
xchg
jnp
jb
cltd
pushf
rolb
leave
xor
pop
fistpl
inc
stc
pushf
sahf
sbb
imul
cmp
mov
sahf
xchg
and
leave
push
adc
popf
fwait
cs
insl
int
mov
mov
int
pop
pop
lds
leave
mov
mov
sbb
pop
rcll
mov
lock
lret
shr
out
sti
jle
insb
fcomps
push
movsb
test
cmc
aad
rcrl
andb
pop
add
fwait
js
sub
iret
or
jae
mov
push
push
and
lcall
mov
out
dec
sbb
add
rorl
mov
add
pop
hlt
or
wbinvd
sub
mov
inc
cmpsb
pop
pusha
mov
pop
xchg
inc
push
cmp
cmpsb
mov
pop
add
lret
mov
and
data16
movsb
sub
dec
in
pavgb
jge
push
xchg
pop
das
das
ja
xchg
sub
mov
inc
aaa
mov
pop
rcll
sub
daa
lods
fldcw
mov
push
mov
jns
loope
sbb
jnp
mov
xchg
mov
addr16
add
imul
scas
repnz
sbb
call
ret
xor
outsb
and
inc
add
in
adc
xor
add
push
addl
jge
xor
jno
into
int
gs
or
repnz
push
ds
leave
pop
jp
xor
pusha
orb
cmp
fcomip
mov
popl
mov
mov
int
xchg
add
pusha
fadds
or
adcl
sub
dec
inc
mov
xchg
add
jg
add
inc
mov
aam
in
xor
andb
sub
xchg
test
leave
bnd
jne
aas
or
imul
addr16
mov
fcompl
push
cmpsl
js
xchg
in
xorb
push
inc
sbb
stos
cmpsl
cmp
push
lret
jge
int
aam
sarb
dec
es
lret
repnz
fimull
pop
lock
inc
out
xchg
push
dec
or
shl
xchg
adc
fstpt
mov
mov
jg
ret
cmp
dec
popl
lret
test
hlt
adc
jo
pop
jmp
fmuls
test
jle
repnz
push
inc
mov
mov
imul
dec
jo
nop
lret
movsl
lahf
popf
jge
adc
aad
mov
xchg
cmpsl
push
lret
imul
nop
push
push
inc
sbb
push
aas
mov
cmpsb
test
js
sahf
mov
push
lahf
sbb
adcb
test
aas
pop
inc
cltd
fs
mov
shlb
insl
jmp
cmp
jns
or
xor
and
xchg
lcall
and
into
das
mov
mov
xlat
push
pushf
outsl
scas
push
and
in
xor
pop
test
lcall
imul
mov
leave
daa
jb
push
pushf
push
hlt
adc
shll
adc
out
sub
xor
stos
mov
icebp
sbb
push
rol
test
sub
shlb
jl
add
xor
or
push
and
jecxz
aad
in
pop
jae
int
bound
jl
out
sbb
xchg
popf
insb
cmp
aam
mov
jb
outsb
and
xchg
popf
push
push
leave
jg
shrb
xor
imul
imul
inc
or
mov
fisttps
clc
iret
fldt
push
int
xor
movsb
xor
pand
xchg
push
sbb
cmp
out
addb
mov
push
inc
mov
sbb
imul
cli
push
xchg
and
jmp
fucomip
cmp
lock
addr16
jns
mov
test
mov
subb
ficoml
and
push
xor
stc
stos
xor
negb
fcomps
inc
stos
dec
mov
insb
imul
and
adc
xor
xchg
pop
hlt
add
pop
ret
sbb
fldl
or
pop
ret
enter
int
xchg
jl
test
hlt
loope
decl
push
loop,pt
inc
fs
lods
lret
and
lahf
aam
sub
jg
hlt
pop
pop
movsl
jnp
pop
jae
orb
int
adc
push
in
dec
lret
push
push
push
add
ret
xchg
int
scas
repnz
or
sbb
int
sbb
mov
mov
mov
mov
xor
es
mov
scas
push
rcl
and
std
mov
jg
idivb
pop
jo
ret
sbb
enter
jg
sbb
jp
sbb
subw
fisubl
mov
lock
ja
adc
adc
jecxz
xor
mov
inc
sub
inc
push
cli
xor
inc
std
mov
add
adc
mov
pop
add
scas
jg
lret
xchg
xchg
adc
push
addr16
or
divl
cmp
lahf
push
stos
dec
push
push
mov
sbb
dec
js
dec
xor
adc
add
repz
les
xchg
inc
bound
lods
mov
jle
push
xor
insl
xchg
shll
mov
gs
cld
shr
fs
rorb
pop
icebp
sub
or
jns
dec
cmpsl
lea
ds
loope
loopne
lock
adc
xchg
aam
sub
mov
test
inc
sub
pop
lret
lock
lret
sbb
aam
and
mov
and
add
xor
fcmovb
sbb
movsb
cmc
mov
mov
jmp
ljmp
and
out
xchg
push
gs
push
cmpsl
test
test
loopne
in
daa
xchg
add
cltd
fldcw
div
xchg
fstpl
cmpsl
bound
pop
mov
sbb
cmpsb
clc
cmp
xor
out
loope
mov
in
dec
inc
cltd
jge
adc
and
push
imulb
jg
dec
sahf
or
push
lea
shrb
push
dec
lods
loope
pop
out
lret
mov
insb
jle
and
imull
adc
iret
cmpb
in
cmp
jl
mov
mov
mov
imull
nop
or
push
jge
jnp
xor
bound
mov
ds
stc
dec
les
loopne
clc
add
fidivrl
cmp
jmp
ss
mov
xchg
sbb
insl
mov
cmp
fadd
add
test
inc
rclb
sarb
scas
add
xchg
mov
out
adc
sbbl
repnz
sti
sub
xorb
xchg
jle
lcall
xor
xchg
nop
enter
mov
inc
dec
cmp
mov
jno
aas
pop
push
push
jae
or
int3
in
mov
imul
add
lahf
and
icebp
adc
fs
jbe
lea
insb
sbb
leave
imul
mov
mov
lahf
inc
aad
add
push
inc
cmp
mov
stos
das
stos
loope
push
nop
cwtl
rol
dec
test
pushf
rcrb
sub
lds
xor
and
lcall
cs
jecxz
push
mov
andb
pop
xor
push
in
das
adc
insl
mov
arpl
xor
lods
dec
in
stos
adc
pop
dec
loope
je,pt
and
mov
ret
lret
in
add
xchg
jge
ja
inc
or
xor
hlt
ror
mov
pop
ds
les
hlt
inc
loopne
sarb
mov
dec
popa
mov
inc
pop
in
addl
pop
dec
xchg
dec
and
into
outsl
lahf
lods
mov
jecxz
sbb
pop
sub
int
scas
pop
ret
scas
mov
lods
ds
lods
icebp
xor
rorl
filds
and
jle
and
ljmp
shr
idivl
push
jmp
ss
xchg
jmp
mov
cmp
push
nop
lahf
insb
sbb
sub
rorb
add
inc
sub
cmc
lods
leave
arpl
fists
cmp
xor
lret
and
call
fnstenv
cmpxchg
or
pop
fisttpll
and
cmp
mov
das
lock
jno
pusha
fidivs
aam
cmp
mov
inc
jns
adc
inc
ret
sub
cmp
sbb
lret
or
mov
xorb
xchg
or
or
ss
int
sbbl
clc
adc
stos
fisubrs
cs
push
cmp
mov
repnz
mov
lods
ds
nop
dec
or
imul
decb
out
mov
pop
sub
jbe
dec
test
mov
jl
jmp
aas
stos
adc
adc
arpl
insl
cmpb
inc
inc
lock
lret
and
lods
adc
out
sub
pop
push
adc
aas
mov
ret
ret
inc
and
movsl
in
sbb
icebp
adc
fsts
rcr
les
cmp
adc
out
aad
rcll
xchg
xchg
imul
loop
ret
cmp
fsub
loop
mov
pop
push
push
movsb
in
insl
dec
xor
xor
or
mov
idivb
out
cmpsb
adc
repnz
stos
mov
pop
sub
push
jnp
leave
xor
rolb
andl
mov
cmp
or
les
je
dec
inc
add
push
ret
movsb
mov
popf
lcall
fimull
ud1
mov
mov
fisubl
sbb
push
pusha
aaa
cmp
jns
jmp
or
jmp
adc
pusha
ficomps
mov
les
or
push
outsl
out
shlb
xlat
pop
adc
pop
shrl
xor
cld
sbb
mov
sahf
cmpsb
in
inc
add
sub
xor
imul
lret
ret
insl
pushf
test
inc
loope
out
mov
insl
loop
mov
cmc
scas
add
loop
gs
ss
mov
mov
scas
jg
mov
fldl
jl
mov
lret
cltd
mov
mov
test
jne
bnd
fs
xor
ficoml
pop
inc
sbb
inc
pusha
mov
adc
or
push
inc
icebp
or
nop
inc
bnd
adc
cs
and
movsl
adc
je
dec
pop
enter
inc
pop
inc
pop
bound
mov
daa
adc
or
outsl
js
xchg
cli
jecxz
es
sbb
inc
cwtl
and
enter
sub
pop
pop
cli
test
arpl
xchg
fdivl
and
sar
ljmp
in
insb
scas
aaa
clc
std
into
inc
roll
shll
jecxz
aas
gs
pop
sub
mov
stc
jno
iret
out
lret
in
xchg
stos
test
or
arpl
ljmp
xorl
mov
cmp
xorl
daa
adc
aas
jge
mov
movsl
testb
inc
movsb
jl
inc
lret
adc
test
out
std
pop
jecxz
xchg
and
sub
cwtl
loop
mov
sbb
das
and
cmpsb
jle
mov
sub
addb
cmp
mov
mov
iret
lret
ja
xor
mov
rcrb
jo
cs
mov
outsl
mov
aad
shlb
push
sbb
es
in
pop
fildl
mov
sub
sbb
inc
repz
in
pusha
es
xor
mov
cmp
stos
pushl
or
pop
pusha
ljmp
test
sbb
mov
push
js
es
ficomps
mov
dec
mov
jmp
mov
test
bound
push
jg
push
popf
xchg
fstl
jne
ja
mov
mov
popa
imul
pop
pushw
push
lock
mov
cltd
xor
jp
icebp
lods
jae
jecxz
jnp
out
mov
cli
push
mov
mov
mov
sub
adc
cmpsb
jno
lret
cmove
or
or
jl
bound
pop
xor
adc
dec
or
in
dec
lahf
nop
dec
fsts
imul
push
cmp
out
in
sub
lds
jmp
cwtl
in
jl
inc
cmp
aam
mov
fdivrs
cmp
and
jae
std
pop
pop
pop
lret
mov
pop
sub
js
dec
movsb
xchg
btc
inc
sti
cmp
sbb
fs
push
lcall
and
ret
dec
aam
inc
repz
or
add
mov
fs
mov
cmp
or
mov
fisttpll
sarl
test
push
inc
cwtl
fadd
mov
inc
add
pop
or
add
pop
notl
ret
or
sbb
jne
fcmovbe
jge
sti
cmp
mov
in
xchg
aad
lahf
not
xchg
pop
sarl
leave
aaa
adc
mov
movsl
sbb
sbb
sub
rclb
mov
mov
mov
sbb
test
inc
sarb
testl
fcoms
mov
inc
xchg
jo
nop
int
mov
xchg
loop
xchg
data16
inc
hlt
or
repz
xor
mov
or
adc
sbb
jns
ljmp
jge
push
push
mov
leave
sti
and
cli
xor
aas
jbe
pushf
clc
ljmp
sarb
out
ja
mov
test
pop
xor
mov
sub
cmp
adc
dec
mov
fsub
xlat
mov
lret
or
ja
xlat
call
dec
rcrl
pop
xchg
sbb
or
test
test
xchg
out
mov
ljmp
bound
test
sub
aaa
out
les
push
push
fidivl
push
jbe
add
dec
fnstsw
mov
sbb
or
mov
jnp
inc
jae
jne
mov
fiaddl
xor
out
inc
rorb
dec
rcll
and
xchg
dec
fstps
sahf
imul
imul
add
dec
xor
inc
adc
pop
sub
es
loop
push
js
jle
scas
dec
jl
pop
and
lods
cmpsl
xchg
in
and
and
jb
cld
leave
ss
xlat
fildl
in
leave
jns
aas
adc
aas
jno
inc
mov
shll
cmp
sub
ret
xlat
mov
lods
imul
xchg
lcall
push
into
and
mov
push
dec
cmp
icebp
sbb
js
and
imul
or
jp
int3
push
or
lea
fidivrs
or
popl
pop
lcall
mov
sbb
pop
call
orl
jge
pop
sarb
imul
lea
lock
jmp
fs
nop
dec
inc
add
es
sbb
pop
movsb
xor
adc
mov
out
pop
mov
enter
xchg
mov
jmp
mov
pop
cmp
cltd
mov
jns
fdivr
inc
arpl
aas
fimull
es
sub
mov
nop
sarb
mov
mov
inc
sub
mov
mov
inc
pop
fimull
xor
lods
xchg
cmpl
scas
jno
mov
add
xchg
les
mov
xor
dec
leave
jae
adc
ljmp
icebp
icebp
sahf
rolb
repnz
and
jmp
sbb
xchg
imul
fnstsw
inc
mov
mov
mov
xchg
and
out
pusha
test
or
repz
mov
lret
movsl
inc
in
je
cwtl
ljmp
out
cmpsl
imul
imul
aas
sti
shl
lods
aaa
jns
or
loop
inc
mov
int3
mov
pop
sahf
jl
adc
mov
mov
imul
mov
inc
ds
lods
loop
mov
cmpsl
testl
or
add
or
outsb
out
out
adc
lods
pushf
sub
or
mov
es
enter
pop
cmp
rorl
cmp
shll
cli
fmuls
inc
mov
mov
and
sbb
inc
pop
push
xor
addb
dec
insb
xor
xor
sbb
clc
mov
cmpsb
mov
push
cmp
sbb
test
inc
in
das
hlt
inc
out
fs
mov
pop
cmp
xlat
in
sub
push
mov
add
repnz
cmc
ds
mov
cld
psrad
inc
and
mov
loopne
rorb
lahf
imul
or
jnp
push
cmc
and
daa
and
imull
mov
lret
fcoml
imul
jo
or
int
test
std
stos
mov
or
dec
les
test
enter
dec
add
mov
xchg
lods
mov
lods
push
es
xacquire
repnz
and
mov
push
mov
add
cmp
cmpsl
mov
xchg
popf
adc
leave
sub
cmp
fmulp
int
test
sti
stos
fcomps
push
dec
mov
xor
xchg
mov
lods
and
bound
loope
dec
roll
mov
test
mov
in
in
mov
and
and
mov
add
insb
cmpsb
mov
daa
sbb
insb
push
mov
cmc
mov
mov
test
enter
rcrl
ljmp
push
scas
push
out
pop
mov
sbb
std
xchg
dec
in
cld
shlb
sarl
or
xchg
notb
and
or
push
or
push
lret
sbb
add
pop
cmpsl
rolb
jp
loopne
mov
jg
pushl
add
clc
leave
add
testb
pop
jns
stc
pop
push
jae
jmp
ror
add
lds
pop
xchg
pop
and
fildl
cmpsb
scas
jp
xchg
outsb
sub
add
inc
adc
cmovno
push
inc
and
icebp
aaa
leave
rcr
add
mov
and
cmp
or
sbb
jbe
jo
fwait
sti
dec
add
aas
in
xchg
add
or
repnz
sub
pop
add
cmpb
fldcw
adc
pop
outsl
mov
push
je
pushf
mov
pop
repz
jge
leave
xchg
ret
jae
pop
adc
add
scas
into
cld
push
outsl
insb
mov
and
xchg
lock
ljmp
xor
mov
clc
and
cmp
aad
xchg
or
loop
cmp
imul
insb
and
stc
dec
lahf
mov
aam
in
fldl
mov
arpl
je
sub
cmpb
data16
scas
jg
cmp
sbb
or
loopne
movsl
mov
mov
leave
fxch
jecxz
std
mov
add
mov
fildl
ret
sbb
push
xchg
lahf
movl
or
fldt
test
ret
or
lea
std
ret
mov
inc
nop
xchg
in
fildl
cmp
scas
dec
pop
stc
ss
sbbl
fcoml
dec
jb
or
sub
pop
paddb
or
xchg
les
mov
popf
dec
test
dec
push
jae
cwtl
inc
sub
sub
inc
fimuls
and
mov
lods
inc
xchg
pop
cmp
xor
stc
in
or
aam
ljmp
movsb
frstor
or
pop
xchg
cmc
leave
xor
sub
aad
jp
mov
sub
notl
mov
fldt
jl
int3
add
mov
xchg
icebp
inc
shrb
and
fwait
mov
hlt
mov
add
out
pushf
mov
and
lahf
xor
cmp
jo
hlt
fwait
pushl
jbe
insl
mov
aad
add
jl
dec
int3
sub
popa
push
xchg
fcoml
push
into
xchg
push
push
xor
pop
ret
jle
pop
imul
mov
xor
std
add
cmpsb
in
into
popa
test
movsb
mov
sbb
xchg
fldt
int
cmpl
adc
add
movsb
jl
repz
andb
jle
jb
cwtl
into
adc
les
or
rcrl
inc
les
mov
xchg
add
and
lods
jmp
inc
sub
pushf
cmpsb
jge
push
flds
inc
cwtl
repnz
dec
aas
clc
cmp
fistpll
mov
jmp
inc
movl
mov
inc
lock
lods
int
jne
inc
push
push
xchg
les
ds
popa
sbbb
popa
lods
cmp
js
fisubl
adc
cmovp
push
mov
xchg
dec
push
pusha
sar
or
mov
lret
pushf
jns
in
mov
fdiv
ret
arpl
fidivrs
xchg
cltd
push
test
push
jo
imul
pop
lds
xlat
mov
std
add
test
xor
sbb
pop
gs
dec
cmp
mov
mov
push
nop
cltd
mov
std
push
or
dec
adc
stc
xor
mov
dec
addr16
mov
ss
mov
das
sahf
les
jne
roll
cmp
adc
aam
sub
negb
and
sub
pop
nop
mov
mov
push
dec
dec
and
jge
imul
pop
add
sbb
in
cmpsl
push
push
or
jle
mov
mov
xorl
ja
or
lret
inc
jns
sbb
in
lret
cld
and
sub
push
mov
loopne
jg
sub
xor
push
dec
sarb
jecxz
cmp
mov
lds
push
aaa
jns
clc
push
cmp
shlb
cmp
sbb
pop
dec
jbe
cmp
jge
jns
loop
fs
mov
xor
notl
add
addr16
lret
mov
lock
pop
sbb
jb
clc
push
jb
sub
out
cwtl
and
dec
packsswb
adcl
push
test
jno
jo
ds
jne
inc
pop
mov
repz
mov
mov
mov
out
cmp
push
cmp
pop
fwait
in
xchg
lret
daa
nop
fs
gs
sub
mov
xor
xor
xchg
xor
and
xchg
mov
addr16
mov
fs
xor
jne
fldenv
dec
add
lods
gs
sahf
add
mov
clc
fdivrp
ja
mull
iret
dec
sarl
out
push
jge
jnp
inc
and
push
mov
dec
adc
push
push
push
cmpsl
in
arpl
mov
lcall
insb
iret
push
sub
into
cmp
fs
mov
cmp
mov
in
cmp
and
add
jge
inc
imulb
gs
div
std
iret
pop
inc
test
mov
cmp
adc
pop
leave
jno
xor
pushf
imul
push
je
inc
pusha
mov
movsb
nop
mov
inc
jbe
mov
jle
cltd
add
xchg
adc
aas
jmp
lods
popf
sbb
push
xchg
fistpl
sbb
pop
sub
mov
inc
cmp
jecxz
push
lcall
xchg
jae
xchg
sbb
sti
and
aaa
pop
cwtl
push
leave
fsub
outsl
leave
lret
outsb
lock
test
fists
push
pop
imul
js
sub
lcall
push
pop
in
rcrl
leave
cmp
inc
xlat
ret
popf
sbb
lahf
xor
inc
cltd
push
xchg
mov
sbb
push
repnz
scas
daa
pop
adc
pop
cmp
sbb
xor
xlat
testl
inc
xor
jecxz
jle
adc
pop
or
or
jae
xchg
mov
scas
shrl
pop
xchg
mov
test
std
push
xorl
in
int3
adc
dec
aam
fcomip
adc
xchg
mov
mov
push
repz
dec
dec
test
inc
cmp
lcall
fcompl
aam
and
mov
sbb
sahf
pop
mov
lock
outsl
cmp
or
mov
inc
jl
hlt
subb
aad
stos
bound
mov
int
sub
sti
stc
mov
jns
movsl
add
es
cmp
popf
xchg
mov
imul
sbb
ja
sbb
inc
cmp
out
aad
mov
add
or
dec
cld
and
fxch
rorl
aad
inc
out
xchg
lods
push
int
mov
inc
aad
sub
lret
mov
pop
std
lcall
movsl
call
leave
inc
add
ds
mov
stc
fmulp
repz
outsl
cmpsl
xchg
push
mov
jae
cmp
pop
insb
cmp
add
and
mov
mov
pop
sub
outsb
movsb
jne
pop
fdivl
or
outsb
mov
inc
mov
cltd
xchg
pop
mov
push
in
dec
inc
add
pop
or
push
adc
sbb
jmp
sbb
adc
out
aaa
xchg
popa
push
push
inc
addr16
mov
inc
add
dec
or
jb
sbb
adc
aas
in
push
fbld
popa
xlat
out
mov
rclb
xor
mov
inc
lcall
es
pop
push
arpl
rcll
inc
mov
int
cmpsl
xorl
lock
das
stc
in
int3
dec
lock
dec
mov
sbb
sbbl
ret
lret
or
jg
test
adc
fisubs
into
in
pop
roll
iret
gs
gs
icebp
lcall
in
popa
add
pop
jl
xchg
xlat
mov
mov
imul
fdiv
es
xchg
add
push
xor
inc
sbb
or
jl
imul
aas
sub
mov
sub
sub
stos
pop
dec
repz
inc
loope
ljmp
pop
jb
fnstenv
mov
cmp
cmpsb
add
dec
lock
xchg
cwtl
and
aam
push
faddl
add
adc
outsb
cs
sbb
leave
push
mov
or
jbe
mov
in
enter
movaps
and
out
mov
jae
sub
aad
fistl
in
ss
fidivrl
jne
int3
xor
push
loop
sbb
dec
push
jmp
dec
loopne
xlat
xlat
jmp
stc
and
mov
stos
cmp
popa
fldt
gs
cwtl
fs
push
cmp
mov
addl
cmpsl
push
xchg
fsub
jle
test
add
push
ljmp
sub
sub
in
mov
xor
repnz
daa
jne
pop
push
test
fs
scas
movsl
pop
mov
stos
and
add
adc
adc
in
dec
fs
jg
into
adc
mov
fisubl
ljmp
lret
sbb
fnstsw
ret
xchg
das
ret
int3
jg
ds
fdivr
sahf
out
jecxz
test
adc
mov
data16
cmp
inc
xchg
xor
movsb
iret
shll
pop
stos
test
cmpsb
rcrb
mov
sbb
cmc
mov
add
insl
mov
idiv
xlat
cmpsb
mov
mov
test
mov
out
rorb
mov
js
and
js
push
pop
mov
cltd
dec
leave
mov
scas
lods
push
mov
lret
inc
arpl
imul
lret
insb
mov
xor
insl
mov
mov
push
jp
in
sub
mov
loop
mov
scas
mov
push
sbb
push
pop
xchg
test
jno
stos
out
push
movl
outsl
in
and
mov
lret
push
outsb
pop
js
idivl
leave
stos
sub
nop
cli
rcl
xchg
jl
faddl
data16
adc
inc
xor
jae
stos
jp
shr
fsubs
xchg
or
xor
cmpsl
ss
cmp
and
dec
mov
push
sub
in
jmp
iret
pop
lods
or
insl
fistps
sti
push
mov
sahf
mov
cmp
shrb
and
or
xor
cmpsl
sbb
test
mov
cwtl
insl
rolb
mov
dec
sub
insb
enter
int
clc
fisubs
mov
xor
imul
push
push
push
enter
enter
negb
das
sbb
cwtl
ret
jl
jecxz
lock
mov
xchg
cmpsl
xor
mov
cwtl
push
xor
or
div
es
mov
shrl
mov
mov
push
cmp
adcb
mov
cli
ret
mov
add
js
cmpsl
lret
xor
test
popf
scas
jae
xlat
and
aam
jb
mov
inc
dec
jno
cli
pop
and
popf
mulb
and
mov
add
sbb
xchg
repz
pop
push
call
loopne
jb
repnz
cmp
scas
es
and
imul
sbb
out
and
xstore-rng
cmpsl
fsubs
mov
and
adc
add
lods
push
sbb
test
mov
pop
mov
or
sarl
xor
sub
jb
mov
cmp
and
cld
outsb
js
xor
pushf
sub
inc
xchg
or
and
rcrl
stos
test
cmp
imul
mov
loope
es
dec
clc
mov
ss
std
sub
lea
movsb
inc
jno
and
sub
inc
sbb
mov
xor
and
xchg
mov
mulb
xor
insl
pop
fs
aaa
pop
test
loop
jp
jecxz
stos
outsl
scas
cmpsl
xor
es
loop
push
add
mov
jo
mov
in
push
gs
pop
lret
jmp
or
sbbl
into
clc
out
ljmp
push
fst
repz
pop
in
xchg
add
fidivl
imul
push
pop
imul
cmp
es
jp
mov
repz
xchg
lret
jmp
test
inc
mov
push
fs
sbb
bound
sahf
lods
das
push
or
or
fidivs
testl
sub
jl
nop
cli
jle
mov
ret
scas
daa
lods
push
dec
dec
iret
aas
mov
fwait
or
jmp
push
outsl
adc
loope
pop
imul
subb
fs
add
push
sub
fwait
sub
add
aam
xchg
imul
push
sub
inc
xchg
xor
xchg
fwait
clc
ljmp
int
nop
sbbl
test
dec
leave
sub
negl
int
divb
mov
or
xor
cmp
mov
rcl
xor
sbb
cmpsl
test
rcrl
or
in
loopne
mov
inc
pop
dec
repz
rclb
or
adc
mov
sub
xor
inc
repz
stc
sarl
rol
ss
cmp
cmc
sbb
dec
add
xor
push
jl
mov
insl
mov
xchg
pop
sub
add
ja
adc
mov
daa
test
jmp
lock
loope
cmp
das
add
arpl
mov
movsb
fistl
jmp
sub
incl
imul
adc
stos
or
stc
mov
out
notl
pop
push
mov
jnp
xor
addr16
loope
test
jno
jae
dec
test
loop
cmp
fldenv
and
dec
inc
mov
loope
adc
push
mov
jg
js
jl
ffreep
push
stos
sti
mov
in
out
inc
sub
add
stos
dec
cltd
sbb
push
push
fsts
push
cmpsl
leave
pop
ss
nop
and
jno
lods
scas
stos
leave
rorl
fstl
cwtl
cmp
stos
int3
mull
dec
insl
hlt
xlat
pop
push
push
sub
inc
andl
add
or
mov
movsl
stc
jl
call
xchg
daa
mov
sub
mov
push
addl
xor
std
lret
mov
sub
filds
popf
push
cmp
push
imul
inc
fcomp
inc
xchg
inc
je
jp
xor
sub
inc
sub
das
adc
pop
imulb
pusha
les
jp
mov
xor
pushf
xchg
dec
icebp
gs
and
into
rolb
sbb
jg
fwait
inc
or
fildl
and
lcall
mov
and
adc
pop
push
call
fwait
inc
shrl
and
data16
push
movsb
ja
cmp
push
pop
and
push
pop
mov
jb
mov
lods
pop
jbe
scas
inc
aad
xchg
dec
roll
mov
add
push
xor
je
and
mov
push
pop
pop
pop
jbe
into
cmpsl
add
imul
xchg
lods
jg
jp
test
jp
pop
imul
push
call
push
imul
outsb
dec
outsb
nop
lds
rorb
add
inc
data16
in
mov
inc
push
loopne
int3
push
jns
sahf
jb
cli
jb
inc
sub
hlt
or
cmpb
mulb
arpl
sbb
jecxz
xchg
mov
shlb
outsb
outsb
or
jno
xor
iret
cmpsb
adc
jns
rolb
mov
ds
lds
int3
arpl
mov
call
cmp
and
cmp
dec
int
hlt
mov
xor
xor
cmp
lret
dec
call
mov
mov
movsb
ret
ret
aas
lret
pop
adc
arpl
out
adc
addr16
in
xchg
imul
push
mov
dec
lods
mov
adc
mov
inc
and
dec
mov
imul
and
mov
sub
xor
hlt
or
aad
push
jp
or
pop
negb
jns
cmp
xchg
push
xchg
cmp
lcall
test
sbb
push
sbb
fdivrs
sbb
ss
push
xor
fdiv
aad
aas
push
fisubrl
enter
mov
mov
pop
rcrl
je
fsub
cmpsl
cs
sbb
add
nop
gs
enter
fwait
aad
mov
fisttps
push
mov
outsb
insb
ljmp
pop
jo
mov
xchg
dec
sar
push
lds
sub
movsb
add
shrb
inc
mov
and
ret
pop
mov
or
mov
lea
pusha
stc
jns
addr16
cmc
pushf
jns
xchg
ret
mov
lods
jnp
fwait
dec
mov
shl
fdivr
xor
sbb
fstpl
aaa
cmpsl
outsl
xchg
into
add
xor
addb
xor
and
scas
or
add
into
inc
xchg
ret
icebp
imul
pop
pop
js
cmp
aas
jle
adc
jno
test
cmp
jae
test
in
data16
add
repz
andl
lret
cmp
test
and
dec
mov
pop
push
mov
pop
cs
sub
inc
push
cmpsl
adc
adc
pop
pop
fnstenv
xchg
cmp
clc
out
push
mov
adc
pop
int3
stc
pop
and
clc
mov
loope
adc
in
cmc
stos
and
push
and
pop
push
pop
mov
mov
pop
into
pop
mov
aas
jne
and
in
or
inc
push
fs
scas
addr16
fcmove
dec
int
mov
adc
ljmp
mov
sub
push
or
data16
xlat
inc
js
mov
scas
pop
inc
dec
push
in
daa
mov
hlt
dec
lret
mov
lcall
xchg
cmp
icebp
jl
mov
cmp
inc
and
clc
fs
movsl
lret
jp
mov
test
lods
scas
lcall
sbb
repnz
aas
mov
fsubrl
sbb
sbb
lods
mov
gs
jle
iret
or
lea
sbb
jle
fucomip
test
xor
rcrb
add
inc
mov
dec
andl
repz
dec
lds
dec
fwait
ret
lock
ja
les
cs
inc
test
push
push
push
inc
arpl
repz
subps
and
repnz
je
pop
xor
inc
add
scas
push
pop
jmp
fcoml
jae
in
push
aam
lods
call
in
xor
popf
push
aaa
stos
stc
and
test
test
push
and
punpckhwd
lahf
pusha
mov
xor
inc
insb
mov
mov
ret
mov
mov
mov
hlt
rolb
inc
fldenv
lds
dec
pop
mov
pop
dec
outsl
jge
loopne
cltd
xchg
add
int
pusha
ds
mov
insb
cmovae
stos
mov
dec
shll
mov
popa
movb
int3
repz
into
mov
orps
xor
and
mov
dec
push
js
push
jecxz
mov
inc
xor
cmp
or
jnp
sub
fisttpl
adc
mov
bound
movsb
mov
inc
dec
adcl
stc
stc
lcall
xchg
jno,pn
jp
push
lods
cmp
lods
jmp
insl
inc
mov
pop
std
or
das
sbb
jbe
xchg
int
pop
cmp
sub
pop
push
mov
and
mov
push
leave
mov
or
leave
xchg
pop
jp
outsl
lods
subb
sub
outsb
push
mov
push
pop
mov
xchg
mov
int
int3
add
add
rorl
fcomi
jno
dec
jnp
into
pop
push
sub
jmp
aas
dec
add
addb
rclb
push
movsl
inc
ror
loop
jns
data16
dec
pop
inc
dec
pop
adc
cltd
test
dec
loope
lahf
in
loop
dec
dec
mov
outsl
lcall
sub
jecxz
add
pop
or
lret
les
repnz
ret
sub
pop
mov
lods
sub
jnp
arpl
mov
testl
cmp
bound
notl
adc
push
into
call
fists
sub
lods
daa
rcr
fisttpl
pusha
aad
and
mov
or
xchg
add
in
movsb
push
in
repz
jp
mov
das
sub
lahf
mov
mov
pop
mov
flds
ljmp
adc
or
jns
ljmp
mov
imul
sub
push
testb
pushf
or
aad
test
out
mov
sub
ds
inc
or
movsb
pop
mov
sbb
fs
sbb
add
xchg
ja
mov
adc
test
mov
aam
scas
or
mov
pushf
mov
cwtl
add
stc
fisubs
int3
icebp
cmp
sub
int
jae
imul
jae
jmp
inc
fistpl
addl
dec
negb
sbb
cmp
loopne
ret
inc
inc
les
repnz
aaa
mov
cmp
data16
or
loopne
add
push
mov
cmp
cmp
cmp
inc
aam
cmpsb
jecxz
js
aas
lods
xchg
sub
scas
fwait
mov
jae
mov
ror
mov
or
push
test
repnz
pop
add
mov
loop
rcrb
enter
fxch
lods
popf
rcrl
push
lcall
xchg
insb
inc
inc
jno
fidivrs
inc
xor
idivb
add
push
mov
addr16
jb
jg
adc
pop
addb
fbstp
mov
jae
dec
adc
push
imul
and
push
or
push
ret
out
or
push
ja
cmpsb
cmpsl
test
in
mov
popf
sbb
mov
adc
sbb
and
sbb
mov
aaa
popf
aaa
fcoml
xchg
pop
orl
cmp
pushf
jg
sub
pushf
rcll
xchg
push
xchg
mov
mov
mov
cmp
adc
mov
xor
jnp
adc
pop
aam
jbe
push
nop
out
mov
in
jg
inc
xchg
addr16
hlt
sub
jbe
pushf
std
fldenv
push
push
jge
mov
clc
push
push
jle
push
xchg
and
inc
and
int
push
xchg
sbb
hlt
mov
movsl
movsb
stos
pusha
add
pop
aam
stos
lods
jle
and
dec
shrb
mov
xchg
movsb
cwtl
scas
js
pushf
cmpl
add
movaps
jno
js
popf
cmp
imull
int3
mov
mov
ds
arpl
setle
sbb
sbb
sub
mov
sets
pop
sahf
lret
jae
pop
aam
cmp
push
pop
scas
xor
xchg
cmp
outsb
mov
mov
xchg
les
icebp
out
mov
addr16
stos
in
push
fcoms
cmp
dec
mov
frndint
notb
push
arpl
cmp
sti
fidivrs
test
pop
push
xchg
fs
in
xchg
dec
loopne
in
mov
cmp
mov
insb
int3
fwait
xlat
nop
xor
adc
and
pop
sbb
int3
jne
sbb
aad
xacquire
call
lock
sub
test
sbb
icebp
push
pusha
jmp
push
or
cs
xor
adc
add
pop
es
lea
ret
xor
sahf
push
and
ret
insl
push
notb
or
pop
fnstsw
lret
fadds
stos
push
ss
insl
inc
pushf
outsb
pop
cmp
dec
andl
pop
out
sub
out
xchg
cmpb
xor
dec
inc
fildl
mov
sub
cwtl
mov
push
jge
repz
ret
mov
pop
cmpsb
jns
dec
jb
rcrl
pushl
jp
xchg
mov
push
inc
push
dec
push
stc
sbb
adc
in
call
mov
jo
push
pop
inc
mov
lahf
adc
popa
iret
jge
jnp
movsb
push
xor
mov
mov
outsl
mov
push
jge
pop
mov
aam
rorb
jb
insl
sub
mov
fcmovnbe
mov
stos
hlt
mov
shlb
cmp
mov
push
les
xor
out
jge
stc
fbld
dec
lcall
xor
jmp
test
pushw
xor
adc
xlat
or
push
pop
popf
jbe
pushf
mov
sbb
repnz
icebp
dec
push
jmp
xlat
push
add
dec
dec
lds
cmpsl
xorl
or
test
jb
sub
mov
pop
fstps
out
lahf
mov
cltd
std
jl
sbb
dec
cli
add
pop
pusha
pop
in
jle
cmc
out
pop
push
hlt
in
movsl
push
dec
dec
jnp
inc
iret
sbb
fidivl
mov
lods
inc
adc
or
aaa
add
adc
pop
sbb
hlt
cltd
inc
cwtl
popa
les
push
out
xorl
into
mov
cmp
adc
xor
cld
bound
inc
push
sub
stc
jb
cmp
sahf
cmp
mov
jecxz
pushf
pop
sub
pushf
les
scas
push
test
fisubrl
sahf
vmwrite
and
lcall
into
pop
cmp
test
fwait
xor
and
movsb
jb
dec
scas
outsl
out
ret
leave
or
lock
adc
xor
pop
xor
push
repnz
adc
int
pop
or
mov
lea
sti
xlat
hlt
sub
xor
xlat
imul
jmp
out
ret
addb
cmc
not
aad
xchg
mov
aaa
int3
jge
hlt
mov
js
mov
shlb
in
addr16
sub
bound
lahf
out
inc
ret
pop
jl
repz
outsl
cmc
and
gs
xchg
repz
pop
dec
mov
cmpsl
sbb
fmul
mov
shrb
and
aam
mov
pop
jecxz
shlb
pop
fisttps
in
mov
mov
repz
jo
push
xchg
ret
stos
pushf
fnsave
xchg
shlb
mov
xchg
adc
ljmp
adc
sbb
push
xchg
pop
out
jno
hlt
fisttpll
and
mov
jp
mov
psubsb
insb
out
sbb
mov
mov
pop
pop
push
mov
pop
out
fimull
test
sarl
mov
es
repz
push
inc
jle
leave
push
or
xchg
adc
sbb
and
xor
lods
xor
push
pop
test
mov
mov
aaa
or
lahf
jno
xchg
hlt
test
adc
and
arpl
xchg
fs
dec
mov
adc
mov
pop
inc
cmp
fiaddl
mov
cltd
jp
gs
shlb
cmp
inc
push
pop
lahf
fscale
sbb
push
jns
out
testl
faddp
add
imul
into
hlt
or
sub
stos
test
inc
push
adc
jp
in
mov
int3
pop
bound
push
ret
pop
pusha
cmp
push
inc
rcrl
cwtl
pop
xor
jno
out
fiadds
add
add
dec
xor
sub
icebp
sahf
ljmp
lds
adc
push
cmp
aas
test
call
aad
mov
dec
call
test
mov
int
out
lods
jmp
push
add
sub
ljmp
int3
and
pop
add
repz
cmpb
and
sti
bound
rorl
out
jp
pop
mov
pop
adc
jne
out
js
ss
lock
fsts
jmp
outsl
ss
mov
sbb
into
mov
lds
and
aas
or
popa
adc
lcall
loop
mov
cld
cs
mov
outsl
or
iret
cmp
pop
jns
sbb
sbb
mov
inc
inc
push
xorl
test
xchg
pop
pop
sahf
iret
push
enter
dec
dec
xchg
xor
aaa
rol
xchg
arpl
xchg
and
test
mov
stos
lock
jge
jns
push
sbb
gs
loop
pmaxsw
mov
movsb
popf
dec
shrb
rcl
stos
popf
jmp
into
or
idiv
cmpb
shl
lock
call
mov
push
je
mov
add
mov
fidivrs
pop
mov
xchg
and
ljmp
scas
cs
xlat
dec
push
push
out
push
in
push
sarb
inc
test
inc
jne
dec
ficoms
xchg
hlt
or
cltd
notl
loopne
dec
das
push
pop
jnp
pop
ficoml
xor
jge
divl
sarl
xor
ret
lret
cmp
pop
adc
enter
mov
std
jge
mov
sbb
inc
xor
je
fisttps
sub
insl
int
insb
push
mov
pushf
mov
xchg
es
addb
ret
add
bound
jo
movsb
sub
ljmp
add
sbbb
stc
daa
scas
xchg
push
and
ret
and
inc
call
or
lock
cld
data16
xchg
out
lods
pop
imul
testb
cmpsb
sti
and
cmpsb
idivb
test
ljmp
jnp
outsl
sbb
lods
cmp
sub
or
cltd
mov
jp
or
fcoml
inc
std
sub
push
xor
pusha
xchg
jl
mov
into
pop
dec
push
gs
pop
xor
cs
mov
nop
xor
pop
fistpl
or
mov
scas
dec
es
in
xor
inc
pushf
pop
add
rcl
rcrb
cmp
add
push
mov
pop
lock
sub
mov
add
test
jl
stc
sbb
lods
and
inc
cmp
loope
lcall
lahf
aaa
cmp
pop
dec
pop
cmp
pop
push
insl
xor
mov
mov
or
xchg
add
mov
test
divl
xchg
inc
repnz
push
and
push
sti
loopne
xchg
adc
jg
jg
cmp
sahf
gs
push
cmp
rcrl
mov
sub
stos
in
sub
xor
mov
fwait
addr16
call
push
adc
ss
pop
dec
inc
and
pop
xlat
and
and
inc
test
mov
pop
lock
dec
pop
daa
or
mov
jp
ja
mov
add
cmc
std
xor
xchg
sub
jae
out
ds
loop
inc
and
cli
dec
mov
out
stos
addb
stos
and
setge
mov
lret
decb
mov
sbb
mov
add
cmp
mov
sbb
imulb
push
pop
adc
xchg
jl
in
insl
or
movsb
mov
cmpsb
lret
cmp
mov
stos
mov
jo
outsb
mov
repz
rol
notl
movsl
pop
inc
mulb
test
pop
or
jae
popa
lret
and
jae
movsl
mov
ss
jp
add
clc
xor
imul
sbb
pop
aad
inc
mov
mov
popa
movsl
mov
jns
cs
fs
add
jecxz
dec
orb
outsb
xchg
mov
adc
jle
int
mov
sbb
cmp
jnp
mov
out
and
pop
imul
dec
cmp
add
scas
popf
into
xor
or
or
mov
jl
push
mov
loopne
xchg
or
hlt
xor
xchg
jle
popf
and
adc
leave
gs
cltd
dec
dec
mov
insl
xchg
pop
data16
scas
cld
aad
stc
mov
pop
loopne
outsl
das
loopne
lret
ret
data16
pop
into
cmp
mov
mov
adc
cwtl
jl
stos
hlt
cmc
dec
stos
xchg
dec
mov
addl
push
fists
mov
enter
dec
sub
xchg
jle
jecxz
icebp
gs
imul
rcrl
push
pusha
add
cld
or
mov
mov
xchg
rcpps
push
mov
dec
add
and
xor
mov
repnz
xchg
push
pop
ja
jb
daa
pop
sbb
push
loop
xchg
cmpb
pop
inc
and
mov
and
inc
xchg
ds
aam
jnp
jg
adc
call
ret
xchg
popa
mov
test
adcb
and
ss
add
and
mov
popf
adc
in
outsl
sub
mov
cs
push
ret
sbb
cmc
lret
sbb
mov
and
pop
fwait
lret
dec
dec
sti
call
fcomp
jmp
xchg
dec
sbb
xor
pop
mov
addr16
mov
cwtl
lods
push
push
sbb
setg
in
xor
mov
pop
insl
mov
in
jnp
dec
movsb
fcoms
lahf
pop
push
popf
scas
inc
out
pop
mov
pop
add
lock
movsb
mov
in
cmpsb
popa
outsb
nop
inc
or
dec
lds
mov
or
or
mov
scas
adc
imul
sub
jns
cmp
repz
in
scas
sub
subl
sar
mov
mov
fstps
popa
pushl
jl
xchg
jns
sbb
xchg
jne
mov
xchg
xchg
ljmp
cmc
test
test
xchg
imul
cmc
jnp
lret
in
xchg
xchg
in
pushf
dec
push
mov
jno
mov
mov
fldl
xchg
clc
add
imul
push
push
lahf
jle
xor
mov
scas
fstl
mov
rorl
push
rcrl
pop
lret
inc
sbb
sub
movsb
lret
sbb
shrb
add
fimuls
cmp
xor
sbb
fstpt
pop
mov
mov
jg
out
push
jae
repnz
dec
mov
arpl
call
lret
popf
fldpi
arpl
addr16
scas
xor
cli
sbb
or
and
sbb
movl
aad
or
push
mov
jmp
bound
jecxz
es
in
int
mov
xlat
xor
cmpsb
movsl
jbe
aaa
insl
lock
or
mov
add
shll
xlat
out
mov
adc
nop
pop
test
pop
dec
out
repz
or
nop
jbe
stos
inc
mov
jmp
sbb
jp
push
je
sub
insl
jl
jp
mov
cmp
jl
rcrl
inc
sbb
cwtl
jo
push
xor
aad
mov
mov
xchg
xchg
int3
les
je
or
lahf
xchg
jmp
and
jge
inc
jae
outsb
fs
test
aas
sbb
mov
mov
ret
sarl
push
repnz
mov
aaa
or
fnstcw
das
push
add
ja
je
loop
js
push
sub
push
jg
hlt
add
jg
icebp
and
xor
in
add
add
dec
mov
mull
pop
setbe
jg
test
mov
and
mov
iret
gs
lods
loop
sbb
or
inc
push
sbb
fadd
inc
or
jp
push
sbb
mov
mov
xchg
jne
shrb
in
clc
pushf
push
xchg
sbb
outsb
adc
scas
stc
shrl
popa
and
adc
sub
mov
sbb
sbb
stc
repz
movsl
inc
js
xchg
movsb
jp
cmp
sbb
add
ss
xchg
cmp
sub
pop
xchg
das
push
incl
ret
add
in
dec
mov
inc
out
or
fadds
imul
xchg
repnz
movl
or
test
xchg
jle
mov
iret
fwait
imul
stos
sti
popa
sbb
mov
cmp
mov
sbb
fsts
sbb
aas
dec
jnp
adc
mov
ss
adc
dec
or
fwait
xor
lea
insl
xor
push
sahf
ja
cmpsl
xlat
pushf
dec
les
dec
inc
add
dec
arpl
mov
dec
stos
negl
iret
adc
pop
sti
mov
xchg
addr16
cmp
mov
mov
stos
cli
in
dec
int3
and
in
cltd
sbb
mov
popf
insb
xor
inc
loope
leave
int
mov
or
sub
data16
loop
in
mov
insl
call
mov
out
sahf
push
fildll
stos
aas
mov
or
jle
sub
gs
jge
movsl
pop
dec
push
mov
hlt
xor
jo
dec
test
or
adc
push
call
xchg
cmc
movsb
mov
jnp
ja
xchg
rcr
das
pop
cmp
sub
sti
les
leave
shr
cltd
fsts
in
or
dec
inc
rcrb
repnz
mov
frndint
je
mov
ret
imull
pop
dec
jmp
ret
iret
test
cmc
xor
push
les
mov
fcompl
sub
add
pusha
or
xchg
pop
mov
ja
out
ret
push
loop
imul
jmp
das
dec
push
and
mov
repnz
mov
sub
out
cmp
xlat
icebp
pop
sbb
stc
xchg
in
or
in
inc
inc
lock
or
pop
inc
sub
cmpl
sbb
idivl
in
imull
adc
jmp
insb
adc
xor
pop
rorb
xchg
aam
or
mov
movd
popf
xchg
jae
outsl
sbb
aam
mov
insl
jno
adc
push
xor
pop
jg
sbb
cltd
push
add
mov
xor
repz
nop
loope
popa
out
mov
adcl
cmp
xor
arpl
pop
mov
lret
mov
insl
add
pop
xchg
cmp
mov
xchg
popf
ret
call
mov
jnp
in
add
mov
insl
xor
cs
cmpsb
pop
insb
gs
or
mov
and
pop
pop
je
push
mov
pop
mov
mov
shrl
ret
adc
pushf
mov
dec
mov
mov
push
pop
in
insl
mov
mov
popf
cmp
push
out
or
xchg
insl
repnz
sub
std
add
adc
fmuls
mov
sub
jnp
adc
mov
jne
test
cmp
jbe
decb
mov
hlt
add
pop
mov
pop
or
hlt
xchg
pusha
or
mov
push
movsb
sub
stos
jb
sbb
xchg
add
or
mov
xchg
cs
out
mov
inc
ljmp
pop
or
adc
mov
xchg
mov
mov
inc
insb
fldcw
push
xchg
testb
mov
push
les
fwait
add
inc
dec
inc
pop
fists
insl
jle
rcr
pop
jo
and
loope
inc
loopne
jle
cmpsb
inc
cwtl
popa
push
cmp
push
jnp
inc
add
jns
sbb
test
cmpsl
test
xchg
lds
mov
xor
pop
inc
aaa
sbb
or
stc
loop
sub
stc
or
xchg
arpl
in
je
test
rorb
jbe
xor
imul
repz
fdivrp
sub
lock
js
xchg
fs
sub
adc
dec
xor
dec
popa
iret
adc
gs
add
jl
push
and
xor
cmp
rcll
adc
ret
adc
dec
sub
or
inc
pop
ljmp
jb
stos
pop
fdiv
cmp
shr
test
push
xor
fcmovnb
push
mov
out
rcrb
xlat
fwait
add
cs
xor
adc
or
and
xchg
adcb
xchg
adc
inc
das
arpl
and
cli
cmpsl
fimuls
test
sbb
cld
xchg
jo
adc
pop
mov
pop
out
pop
lods
in
or
mov
mov
mov
mov
mov
mov
into
jecxz
mov
dec
and
shll
orl
loopne
fcmovbe
fstl
mov
add
imul
xchg
and
js
in
cmpsl
cmpl
and
aad
sub
or
rorb
mov
pop
mov
movsb
jg
sub
dec
rorl
push
test
cmp
ss
sbb
push
mov
fwait
mov
sbb
xchg
mov
ljmp
in
movsb
hlt
adc
cltd
pusha
dec
mov
cmp
adc
fidivs
loop
or
or
xchg
add
jg
or
push
loope
push
mov
lods
mulb
jmp
inc
stos
jmp
push
int3
push
scas
das
mov
jbe
cmc
jb
sub
dec
int3
jl
and
dec
mov
sub
xlat
dec
fists
outsl
daa
add
cmp
repnz
ja
lods
cmpsb
mov
inc
icebp
pusha
ds
lret
out
jns
add
add
fdivl
cmp
test
lods
fisttpl
test
mov
std
test
dec
sahf
add
push
sbb
sbb
push
je
imul
data16
xor
add
inc
mov
sub
popa
jne
jl
in
aas
add
dec
adc
xor
outsl
adc
loopne
add
lcall
movsb
dec
cli
andl
push
clc
pop
mov
scas
pop
mov
mov
mov
dec
xchg
dec
cmp
mov
pushl
mov
daa
ja
scas
xor
mov
pop
push
out
pop
jo
inc
mov
fstpl
cmp
scas
mov
lds
jp
pusha
shlb
and
or
mov
int
mov
cmp
mov
insb
loop
jg
shll
lret
cmpb
pushf
lret
lahf
pusha
fcomi
outsl
test
mov
in
adc
adc
dec
fcmovnb
dec
mov
cwtl
data16
inc
in
mov
ljmp
pop
rcrl
test
pop
fildll
fstpl
jecxz
sub
scas
icebp
inc
in
and
adc
lcall
rorb
int
lock
out
ror
jecxz
rclb
cli
and
jo
std
and
cmp
push
aam
sbb
rclb
and
mov
nop
jp
test
icebp
pop
mov
inc
popa
xchg
cmp
inc
insb
jnp
lock
mov
add
ljmp
sub
pop
mov
jg
xchg
pop
mov
cmp
cs
jecxz
mov
push
xchg
ljmp
and
push
adc
stos
add
mov
mov
dec
int
sti
push
xor
jbe
jecxz
cmp
out
push
lods
mov
aaa
mov
ds
cmpsb
push
cmp
les
fucomp
movsb
pop
stos
jnp
popa
leave
js
les
sbb
sub
fs
cmp
or
rorb
aam
shrb
test
and
out
gs
out
test
xrelease
jecxz
pop
add
jg
in
xorb
notb
addr16
in
pop
push
lcall
jmp
add
lods
popf
lcall
push
jns
in
mov
rorl
divl
mov
mov
les
pusha
mov
imul
and
and
js
add
sar
inc
arpl
add
xor
adc
lea
mov
inc
jg
xor
jne
popa
pop
addl
cmp
loope
addr16
inc
data16
popf
mov
pop
xchg
lcall
stc
sahf
jle
cwtl
dec
add
cwtl
push
ds
mov
dec
push
popa
dec
dec
xchg
xor
mov
dec
mov
dec
xchg
bound
jbe
adc
sti
dec
jae
loope
sbb
test
dec
and
enter
mov
cmp
in
mov
mov
mov
fidivs
scas
and
jecxz
sub
dec
out
nop
add
rcrl
mov
jl
stos
dec
sub
jmp
jne
mov
add
push
fsubrp
out
cltd
ss
pop
mov
push
gs
or
mov
shll
ss
fwait
test
pop
cld
daa
pop
call
pushf
fcmove
xlat
push
inc
and
mov
popf
jmp
sbbb
sarl
in
in
ss
gs
adc
pop
jno
popf
lea
mov
xor
popa
mov
lret
push
cmpb
repnz
test
pop
movsb
outsl
dec
mov
push
faddl
int3
or
sbb
xchg
and
jp
dec
pushf
push
aas
clc
mov
jge
cmp
insl
popa
out
fsub
mov
imul
fidivl
mov
add
dec
out
lods
sbb
repz
pop
pushf
icebp
dec
test
fwait
push
clc
xor
aam
dec
sbb
insb
sbb
sar
fsubp
movsb
shrl
pop
ds
pop
cmpsl
test
jns
mov
jbe
shrl
jmp
and
cmp
dec
sbb
push
fwait
pop
outsb
jae
into
repz
pushf
xor
popf
iret
cmp
lcall
adc
pop
jl
pusha
rcll
or
sahf
sub
leave
mov
inc
or
pop
pop
fs
fldt
inc
lret
loope
imul
mov
aas
test
xor
sub
mov
fbstp
sub
inc
ret
xor
stos
mov
push
mov
inc
xchg
jg
sti
fildl
ret
out
inc
cmpb
out
lods
inc
jae
pop
mov
pop
mov
sub
and
es
icebp
inc
xorl
mov
or
adc
rcll
and
enter
inc
lahf
mov
lahf
mov
std
aad
pusha
ljmp
movsl
sub
jo
cmc
adc
add
jmp
add
jecxz
pop
dec
outsb
dec
fwait
lea
sahf
and
dec
dec
xchg
inc
insl
sti
adc
dec
test
je
inc
push
ret
jno
pop
idivb
inc
mov
xor
mov
aam
mov
inc
scas
push
sbb
mov
insl
cmp
cmpsb
or
jno
and
adc
sub
into
inc
mov
sbb
sub
notb
or
js
fnstcw
sbb
repz
test
xchg
cmp
adc
sbb
sub
jo
xchg
mov
or
addl
cs
int
test
arpl
pushf
movd
in
sti
add
or
sub
xor
xor
lock
jno
xchg
cmpsb
hlt
pop
jmp
lods
jae
scas
gs
xchg
xor
shl
push
pop
pusha
int
push
mov
push
inc
lret
loop
mov
fdivl
rcrl
mov
cmp
xchg
push
or
lahf
ds
shrl
addr16
and
cmp
xor
cld
xor
and
test
add
add
rcrl
pop
mov
addb
insb
xor
and
clc
sbb
mov
mov
sbb
loope
lahf
mov
mov
add
mov
es
mov
mov
push
sbb
mov
punpckhdq
mov
or
sub
cmp
data16
insl
lock
lods
cmp
inc
jns
mov
add
mov
add
xchg
jp
daa
sbb
adc
sarb
lods
es
pop
lret
pop
and
pop
andb
mov
cld
mov
testl
movsb
cmpl
in
and
out
fnstsw
movl
lret
das
cmp
pushf
dec
xchg
xchg
test
inc
adc
push
fisttpll
sbb
jns
jo
out
pop
movsl
mov
lock
sub
iret
into
mov
fwait
mov
jb
in
mov
mov
pop
inc
mov
sub
and
sti
jmp
mov
xchg
adc
jle
lahf
ds
pushf
pop
fiadds
ja
fcoms
xor
push
int
sub
gs
mov
test
cmpsb
mov
and
call
into
adc
jns
hlt
outsb
leave
mov
mov
inc
pushf
xchg
push
jecxz
push
orl
in
add
lds
mov
mov
sarb
xchg
cmp
mov
push
rorl
cltd
out
xchg
pop
lods
jb
jg
std
scas
ja
jecxz
dec
int3
clc
mov
faddl
mov
enter
mov
mov
mov
fnsave
rcr
mov
push
ret
dec
push
adc
inc
pop
je
out
lods
xchg
inc
repnz
mov
inc
sbb
stos
inc
mov
into
in
xor
xor
orl
lds
cld
imul
lret
jno
add
scas
mul
mov
dec
fdivs
enter
jecxz
mov
imul
dec
lea
lahf
adc
jecxz
icebp
jno
insl
adc
pop
pop
and
push
loopne
sbb
jae
ja
push
insl
or
mov
icebp
mov
sbb
adc
jno
scas
das
mov
das
mov
aaa
dec
imulb
test
push
cmp
aas
mov
dec
jge
xchg
lret
fwait
push
inc
popa
or
dec
imul
pop
mov
ret
inc
fldcw
fdivs
jbe
push
jns
ficoms
or
push
cmpl
mov
inc
inc
iret
xchg
mull
adc
add
mov
pop
or
xchg
xchg
popa
arpl
mov
ss
xchg
xchg
ret
mov
pushf
jo
jae
add
sbb
add
fstl
cli
imul
inc
xor
sbb
andb
xchg
cmpb
sbb
dec
sub
shrl
aam
pop
stc
add
sub
insl
cmp
pop
fsubs
adc
movsb
push
dec
push
in
mov
pop
jmp
int
gs
cwtl
mov
syscall
xchg
call
cld
jno
pop
jns
sub
psrld
ljmp
inc
arpl
pop
in
fstpt
lea
cmc
xchg
xor
negl
lock
mov
fld
pop
inc
mov
aaa
inc
adc
cmp
imul
mov
jle
lods
ret
sub
scas
push
notl
dec
dec
imul
pop
outsl
push
lds
mov
out
fiadds
jb
repz
jns
push
out
dec
fdiv
test
adc
inc
pop
xor
mov
out
sahf
add
js
mov
and
cmpsb
mov
jno
jno
inc
in
cltd
popa
ror
test
iret
shrb
roll
repz
jecxz
aam
outsl
pop
sbb
add
aaa
mov
sarl
je
sub
call
push
sbb
inc
adc
cmp
je
xchg
test
and
mov
scas
sub
xor
cmp
push
xor
mov
sbb
dec
jmp
in
jp
test
xchg
inc
pop
mov
inc
mov
aad
dec
and
in
das
inc
decb
jge
ljmp
push
ja
pop
cltd
xor
es
jp
sub
jbe
loope
std
pop
sub
mov
fcmovne
xchg
mov
jp
out
sbb
pop
call
push
or
mov
cmpsb
mov
cmp
cmpsb
adc
std
pop
jns
fnstsw
das
inc
clc
rorb
or
cld
in
sub
ss
outsb
stc
out
mov
dec
iret
shll
push
stos
push
aaa
iret
cltd
mov
ret
aam
mov
jnp
std
cwtl
sub
je
adc
push
xlat
mov
jp
push
inc
xchg
sbb
xchg
pusha
lcall
arpl
stc
or
add
push
and
ror
push
mov
lds
outsl
into
sub
push
pop
paddq
sub
push
mov
aad
ljmp
mov
gs
pusha
aam
sbb
std
mov
loope
inc
fwait
in
fnstenv
cmp
push
mov
scas
mov
imul
aam
push
pop
or
xor
cmp
ljmp
or
inc
das
jb
pusha
pop
or
iret
cmpsl
jae
pop
sbb
cmp
dec
in
ror
dec
xchg
add
sbb
in
stos
push
add
andb
aam
dec
sub
mov
dec
xchg
cmpsl
mov
mov
addr16
subb
mov
mov
inc
lds
pop
mov
sub
mov
test
insb
add
insb
lea
and
mov
mov
bound
leave
enter
icebp
lds
hlt
adc
xor
and
push
cmp
pop
shll
pop
jo,pn
rol
pop
notb
incl
loopne
fldt
add
xor
lods
add
sbb
and
in
add
leave
and
imul
mov
pop
test
hlt
cmp
xor
adc
ss
pop
mov
dec
in
clc
stc
shlb
das
movsl
scas
orb
decb
loope
jne
xor
aas
stos
dec
cmpb
fs
mov
mov
mov
cld
lcall
outsb
and
insl
adc
mov
dec
push
lret
je
mov
or
push
ljmp
test
pushl
imul
cli
or
sub
pop
into
cmp
ficompl
das
cwtl
jae
and
pop
push
jp
jmp
movb
test
mov
bound
and
in
test
push
inc
add
pop
cmpl
fsubs
mov
xchg
outsb
ret
rcl
pop
sbb
inc
lods
les
push
call
pushf
call
mov
aas
ret
dec
inc
into
inc
fcomi
aas
mov
xor
inc
inc
or
std
lock
mov
sub
adcb
popa
iret
stos
mov
call
or
movsl
pushf
in
mov
pop
lcall
mov
aam
inc
insl
arpl
add
ljmp
scas
outsl
mov
adc
xchg
or
jno
mov
shrb
shl
movhps
je
inc
testl
push
aas
mov
fcomps
lret
xchg
jbe
push
pop
movsb
mov
push
addr16
jb
loope
mov
call
jg
sub
jnp
mov
loope
mov
popa
mov
outsb
xchg
jg
outsb
jg
cmpsb
adc
mov
pop
cmp
orl
or
repnz
out
sbb
mov
addr16
sub
lret
enter
cltd
mov
repz
js
test
icebp
das
add
out
in
imul
inc
and
dec
pop
decb
push
jmp
insl
ret
repnz
xchg
aam
int
incb
enter
iret
movsl
push
cmp
xor
test
sbb
push
popa
xchg
lods
jmp
pop
lds
pop
ljmp
inc
mov
hlt
in
cltd
addr16
xchg
sbb
adc
pop
fcoml
sbb
in
push
hlt
jmp
std
rorb
mov
jbe
pop
dec
sbb
adc
dec
jmp
test
repz
xchg
inc
or
mov
lock
scas
int3
repz
mov
test
and
ret
ljmp
int
je
out
and
scas
in
mov
push
ja
dec
jg
jae
sbb
sub
ret
add
cld
mov
add
mov
and
clc
bound
xchg
mov
aas
leave
adc
lods
lahf
cmp
pushf
sbb
cli
inc
lret
test
push
xlat
cltd
xor
ret
xor
pop
mov
imul
sahf
mov
add
jp
cwtl
fcmovnb
lds
je
cld
dec
test
roll
sti
push
lret
movb
int
enter
xor
imul
ljmp
sub
sub
arpl
pop
mov
mov
sarl
les
mov
shlb
imul
popa
addr16
mov
mov
or
dec
sbb
insl
popl
loopne
mov
gs
or
pop
addl
push
xchg
mov
mov
push
stos
insb
repz
xor
push
data16
sti
cli
adc
add
popa
dec
inc
test
ficoms
outsl
rdmsr
and
jmp
mov
lds
cmpb
divl
or
jno,pn
mov
ss
subl
jecxz
pop
adc
mov
xorb
cmpsl
adc
int
idiv
fisttps
imul
xchg
andb
jle
xor
std
stos
ja
ja
ds
js
roll
adc
mov
mov
out
lock
aad
outsb
sbb
sub
ds
jbe
mov
xor
in
imul
mov
cmpsb
push
pushf
mov
lret
push
add
cli
jne
jnp
filds
out
gs
and
push
scas
push
imul
mov
ljmp
push
pop
out
cld
aad
push
lret
ret
mov
lds
gs
jne
lods
icebp
pop
xor
fwait
cli
ljmp
dec
add
and
mov
fsubrs
aas
lds
hlt
lret
jl
sar
jne
insb
inc
or
ss
push
mov
dec
test
jmp
lahf
sahf
dec
mov
adc
mov
cli
scas
hlt
adc
pop
jg
lea
mov
scas
cltd
push
popf
loop
or
mov
dec
dec
push
lret
xchg
push
add
cmpsb
arpl
or
xor
scas
xchg
cld
pop
jbe
adcl
and
loope
cmp
pop
fcomps
testl
out
mov
add
xor
xor
mov
mov
testb
das
mov
testl
push
and
and
fisttps
sbb
int
mov
mov
dec
mov
and
pop
std
das
push
mov
sti
and
jp
mov
shrb
popf
xchg
sbb
push
jmp
mov
clc
and
enter
ljmp
xlat
push
jecxz
jo
mov
movsb
int3
in
ljmp
dec
mov
jnp
cwtl
into
jecxz
cmpsl
out
aam
sbb
ja
mov
divl
inc
inc
fildll
cwtl
out
fistl
stos
into
data16
xor
sbbb
out
imul
adc
jg
and
ss
aam
ds
or
mov
enter
hlt
fmuls
jne
xor
nop
jle
pop
cmp
sahf
pop
nop
inc
mov
pop
in
jno
iret
sti
mov
js
inc
dec
addr16
dec
pop
repnz
inc
iret
sbb
mov
inc
xchg
int
add
lret
les
xchg
scas
mov
es
adc
sbb
mov
sub
faddl
and
sti
pop
lods
aam
outsl
cmpsl
aas
sti
or
sub
push
outsl
repz
push
lret
bound
repnz
sarb
sarb
hlt
mov
and
test
test
ret
jl
dec
cmc
cmpsl
je
mov
sti
fldcw
lret
cmpsl
arpl
ficoms
rep
cmp
mov
mov
mov
popf
cmc
stos
add
mov
or
ret
push
xchg
sbb
stos
pop
pop
aam
xchg
out
icebp
xchg
mov
and
ret
shl
sbb
mov
out
mov
dec
sti
push
push
jp
ja
scas
xor
xchg
nop
repnz
xchg
push
arpl
imul
outsl
mov
leave
dec
mov
cmp
inc
lahf
test
adc
rorw
or
adc
jo
inc
and
mov
pop
pop
outsl
repnz
outsl
mov
jns
xchg
or
push
shll
sbb
insb
jae
lcall
push
test
scas
pop
mov
cmp
jle
les
rcrb
xchg
and
pop
ret
push
jecxz
fxch
mov
push
add
loop,pt
imull
mov
je
push
inc
cmp
in
lcall
pop
push
orb
mov
xchg
jecxz
sub
aas
scas
cmp
adc
movsl
lea
mov
jno
xchg
jns
repz
xlat
mov
mov
xchg
shlb
add
add
cmpsl
loope
ds
cltd
and
daa
fwait
jne
in
pop
or
inc
jl,pt
fwait
push
pop
pop
lret
cld
out
bound
lahf
rcll
sub
std
mov
inc
xchg
call
cmp
cltd
es
shl
gs
mov
std
std
pop
movb
pushf
jnp
fadd
or
and
mov
pop
pop
roll
fs
adc
pop
and
push
jae
push
adc
fadds
repz
dec
out
popf
mov
jb
add
xchg
leave
jl
out
fs
lods
dec
mov
inc
in
jle
into
out
pushf
sbb
outsl
inc
pushf
jmp
jg
push
jbe
icebp
pop
mov
dec
daa
xchg
repnz
fisubrs
jp
mov
idivl
mov
push
aad
xchg
push
movsb
dec
mov
stc
fucomip
cmc
dec
mov
insb
cs
call
dec
jne
mov
dec
adc
dec
dec
inc
lahf
cmp
xchg
cld
or
pop
push
aas
pop
and
dec
and
mov
shr
gs
js
mov
sub
jge
je
fcmovbe
mov
movsb
gs
lret
inc
and
cmp
push
cld
call
and
adc
mov
sbb
pop
inc
gs
mov
lock
movsl
adc
jb
push
ret
fdivr
roll
sbb
xchg
out
std
mov
add
popa
mov
dec
and
fists
adc
cmc
jb
or
fcmovnbe
lea
mov
outsb
jnp
iret
dec
aas
xchg
lret
push
icebp
lret
xchg
xchg
xor
xchg
mov
jo
sbb
pop
das
mov
sub
pop
adc
sub
ficoml
shr
sbb
mov
mov
mov
push
ss
mov
mov
sbb
push
lods
adcl
ret
push
xlat
mov
ret
push
mov
iret
sub
roll
mov
jge
xchg
mov
mov
sbb
dec
stc
mov
pusha
xchg
aaa
fucomp
jne
mov
movb
jp
cmp
imul
subb
in
mov
pop
mov
ja
ja
xchg
cmp
and
int3
bound
lcall
scas
sub
addr16
stos
jae
andl
pop
imul
loope
pop
add
or
mov
mov
jbe
ret
insb
cmpsb
dec
dec
in
xor
and
enter
aam
xor
fimuls
xchg
enter
es
cmp
call
dec
cmc
sub
loop
test
inc
add
aas
insb
fists
dec
dec
iret
call
cli
in
mov
and
jmp
xchg
popa
cmp
ret
sbb
push
or
or
mov
cld
xor
adc
imul
add
ss
sahf
or
xor
insb
jns
sub
adc
xchg
or
cmp
or
mov
test
outsb
dec
mov
mov
cmc
and
mov
xchg
fnstenv
out
lret
daa
mov
dec
add
or
stos
loopne
inc
jecxz
mov
sub
sbb
add
or
repnz
in
aas
out
add
arpl
addb
das
bound
xor
or
or
test
clc
jae
in
lcall
add
push
cmp
aaa
cmp
imul
movsb
xchg
sbb
sub
insl
mov
cmp
pop
rolb
into
mov
add
pop
lods
loope
inc
mov
push
mov
outsl
dec
xchg
or
mov
inc
mov
jl
sbb
daa
push
subb
sub
pop
jmp
cld
out
pop
add
sub
add
cmpsl
xor
mov
movsb
test
dec
fisubrs
push
jo
cmp
dec
rolb
pop
cltd
xor
notb
push
test
lret
enter
add
out
loop
ja
mov
pop
pushf
push
mov
add
sbb
and
jge
inc
mov
test
sahf
lret
xor
jmp
mov
loope
flds
xchg
xlat
inc
enter
add
ljmp
aaa
mov
xor
mov
inc
scas
lret
jbe
pop
cmp
mov
test
ret
ficoms
adc
lock
pop
lock
movsl
outsb
dec
incb
xor
inc
push
cmp
nop
xor
mov
sub
fisttpl
fmull
add
mov
mov
lock
enter
enter
repnz
fsubrs
pop
xor
and
sarl
dec
lods
notb
movsb
pop
cmc
mov
mov
adc
cmp
psrlq
in
mov
inc
and
sarl
jl
ja
call
adc
jle
adc
inc
sbb
mov
cmp
mov
cmp
mov
lret
popa
adc
bound
sbb
xor
shll
ret
xor
xor
push
dec
bnd
rcrl
lods
out
ret
mov
sti
mov
push
push
cli
jl
sub
in
mov
or
or
ret
repz
mov
mov
or
sbb
xchg
pop
pushf
push
sub
mov
inc
daa
mov
cmp
es
or
cmp
inc
jae
cmc
inc
or
mov
jle
sbb
in
int3
adcb
mov
xor
cmc
cmp
enter
arpl
add
das
test
xchg
sbb
aad
mov
xchg
xchg
pusha
add
mov
mov
call
lret
movsb
sbb
imul
rcl
call
daa
in
or
jbe
testb
push
imul
inc
add
xor
xchg
lret
ljmp
sti
movsl
test
into
xor
dec
mov
sub
jnp
stos
mov
or
push
out
insl
movsb
add
ficoms
addr16
mov
dec
jae
imul
pop
sub
sub
sbb
in
into
push
ficompl
xor
xlat
lret
xchg
mov
shll
test
pop
mov
push
out
stos
dec
jp
out
aas
cmp
mov
dec
inc
jbe
adc
push
adc
push
inc
mov
ds
ja
call
fbld
pop
and
rep
icebp
iret
xor
rolb
push
mov
or
orl
dec
cli
dec
xchg
or
sub
mov
mov
test
leave
outsl
hlt
mov
hlt
jo
mov
and
shrl
dec
pop
mulb
jmp
movsb
or
or
dec
pop
inc
lods
gs
jae
ss
dec
fimull
jns
push
cmp
aad
sbb
ljmp
ljmp
pop
xchg
add
lahf
xchg
pop
add
xchg
addl
call
push
std
out
icebp
imulb
mov
std
in
ljmp
imul
rolb
sub
enter
jo
stc
imul
ret
fcmovnu
idiv
ret
push
xchg
push
jge
jmp
pop
xor
pop
dec
mov
shlb
in
or
or
add
dec
push
adc
push
push
sarl
int
and
mov
push
sub
lret
cmp
inc
mov
test
cli
dec
outsl
movb
sahf
jo
sti
dec
ds
pop
mov
shll
fwait
mov
inc
stos
mov
iret
addr16
xor
inc
xchg
inc
cmp
jle
out
leave
insl
sahf
xor
cwtl
ljmp
faddl
subl
mov
dec
sub
mov
xor
pop
sub
daa
jae
mov
gs
cli
repz
jge
cs
int3
sub
mov
arpl
and
imul
int
add
inc
mov
xchg
and
mov
ror
adc
xchg
mov
sbb
push
add
call
loope
add
mov
out
push
inc
mov
cltd
loope
andl
jns
int
arpl
mov
out
daa
aam
xor
addr16
adc
or
bound
lea
stos
xchg
test
repnz
hlt
and
mov
push
out
jno
call
adc
pop
sbb
mov
and
and
add
ljmp
jl
mov
test
imul
sub
push
mov
mov
ds
clc
push
dec
jle
loope
sbb
cmp
out
sub
stos
sarb
mov
addl
adc
cmpsl
orl
dec
dec
mov
outsl
addr16
and
rolb
lds
dec
xor
pop
mov
int
adc
call
push
cli
sbb
outsl
pop
sbb
push
cmp
test
push
jae
insb
sbb
out
ret
sub
mov
mov
or
rcrb
dec
fcoml
rcrb
dec
sbb
nop
add
test
ficomps
jb
adc
mov
lahf
mov
addr16
cmp
sar
and
sbb
out
lods
test
jl
adc
in
or
ljmp
xor
and
pop
xor
xchg
fmull
mov
xor
ds
add
test
xor
jle
mov
xor
les
hlt
rcr
inc
sub
movl
xchg
mov
cmpsb
push
negb
movsb
add
addr16
lock
xorb
into
arpl
xchg
loope
jle
popf
fwait
insb
call
add
pop
out
fadd
pop
pusha
rorb
push
cmpsl
movsb
ljmp
ss
loop
js
call
jmp
pushf
ss
lods
pop
or
out
dec
ficoml
inc
ss
and
dec
sbb
enter
imul
push
jnp
fs
sub
mov
sbb
data16
or
jno
repz
lods
add
sbb
xlat
stos
mov
dec
dec
and
stos
cmp
shr
ret
std
popf
cmp
js
stc
add
mov
or
das
imul
daa
repnz
pop
push
mov
lcall
mov
xchg
mov
nop
push
dec
jo
into
dec
lret
mov
mov
sbbb
cld
mov
jmp
and
add
fsubr
gs
lock
pop
jle
cmp
or
mov
in
lds
icebp
sub
jnp
test
movsb
jb
add
xchg
jmp
xchg
mov
push
sub
lock
pop
ja
insl
dec
xchg
ret
movsb
clc
rcl
and
stos
pushf
iret
dec
dec
jge
sar
inc
cmp
aas
gs
aad
jge
xchg
inc
push
mov
ss
bound
fistpll
pop
mov
adc
jb
lcall
pop
test
sub
jmp
xor
jecxz
mov
mov
xor
popa
dec
or
sub
xor
stos
cmc
mov
pop
pop
fldenv
cmpsl
jbe
inc
xor
jnp
mov
fnstenv
insb
add
mov
jnp
and
or
lahf
jnp
sub
push
test
setb
push
rcrb
jbe
add
jo
lods
imul
pop
xchg
test
lahf
mov
jno
dec
pop
dec
mov
xlat
push
fs
lret
out
je
xchg
cmc
addr16
pop
adc
dec
xchg
cmp
xchg
dec
in
ljmp
bound
mov
add
in
mul
in
and
out
or
adc
and
cli
pop
jbe
sub
iret
aam
addl
arpl
add
add
mov
jmp
jae
cmc
aad
pop
js
dec
lock
pop
test
mov
pop
in
leave
xorl
mov
mov
loopne
push
movl
add
into
or
inc
push
xchg
rclb
test
push
push
jl
adc
pop
jecxz
scas
repz
sbb
pop
push
out
bound
or
lea
sub
push
ja
or
push
lods
ret
ds
cmp
xor
pop
subb
int3
lcall
mov
xchg
adc
loop
xchg
pop
push
and
insb
cmp
int3
shlb
fsubs
mov
mov
inc
pop
jp
stos
xor
ss
mov
ja
mov
repnz
push
in
pop
push
mov
mov
jbe
in
mov
subl
test
loopne
outsl
int
imul
push
cli
sub
sbb
shll
add
lods
aam
nop
adc
ror
popa
arpl
mov
xor
arpl
sahf
in
repz
push
push
dec
mov
repz
jo
and
mov
cmc
daa
popa
js
arpl
adc
dec
insl
dec
or
jg
test
nop
fcompl
pop
std
pop
negl
cmp
push
sub
push
or
lock
xchg
push
pop
pushf
in
int
xchg
add
inc
rol
adc
push
addr16
outsl
cmc
pop
pop
dec
xor
pop
mov
and
loopne
mov
mov
jbe
sbb
ljmp
lock
in
sub
sahf
dec
jbe
in
add
jb
pop
inc
mov
xchg
jnp
cmpsl
dec
cltd
lock
cmp
or
ss
mov
fwait
jmp
addl
or
sub
fisubl
mov
fistpl
jne
sub
in
and
out
push
sti
sarl
jb
iret
jp
rclb
push
push
sbb
pusha
outsl
popf
pop
in
push
ds
jb
scas
mov
mov
nop
push
data16
push
push
push
mov
xor
xchg
bound
es
mov
sub
xchg
aas
fidivrl
mov
pop
test
mov
dec
mov
lods
pop
pushf
cltd
jl
loope
inc
out
push
sub
lods
and
fwait
cwtl
lods
adc
mov
push
inc
add
decb
ds
adc
hlt
orb
dec
inc
xor
stos
std
inc
rcrb
pop
sbb
insb
xchg
rep
dec
ja
mov
rcrb
hlt
push
jne
int
rol
or
lock
out
mov
pushf
inc
repz
mov
cmpsl
out
inc
pop
xor
push
mov
shrb
jo
jp
push
and
arpl
pusha
jnp
dec
sub
mov
dec
add
jl
outsl
mov
outsl
sbb
ret
mov
int3
inc
sub
cltd
out
rcrl
xor
in
xchg
cwtl
loopne
pop
mov
ljmp
stos
mov
cwtl
in
xor
scas
iret
xor
popa
test
mov
pop
fdivs
pop
xlat
dec
lahf
push
popf
mov
mov
jle
test
mov
sbb
pop
icebp
call
int
push
cld
adc
jl
int
cmp
inc
xchg
and
xor
xchg
cmc
test
stos
aas
xor
mov
mov
lret
pushf
push
int
fld
push
or
test
adc
push
jno
pusha
pop
sub
loopne
ret
inc
pop
loope
cmc
scas
pop
divb
push
cld
test
add
pop
pop
imul
and
push
leave
cmp
hlt
movb
cmpsl
enter
orl
rorl
push
adc
pop
adc
mov
imul
jl
hlt
jp
xorl
cmp
xchg
rcrb
scas
jns
outsb
aad
popa
ret
push
test
test
shr
enter
adc
jae
add
ljmp
fdivl
pop
popf
cmpsl
test
int3
jo
cli
push
fcomi
fs
push
pop
xchg
sbb
stos
mov
gs
in
push
imul
inc
rcll
addl
add
sub
xor
cmp
inc
arpl
sbb
and
fdivl
enter
ror
and
insl
sbb
xorl
pop
inc
imul
lock
mov
dec
mov
aas
out
xor
adc
dec
or
out
dec
xchg
and
jl
xchg
test
cmc
inc
add
or
xor
or
or
mov
dec
xchg
filds
es
xchg
mov
lods
fcmovu
cmp
test
mov
xor
into
ds
dec
pop
mov
jg
fcomps
jl
addl
push
jbe
and
clc
addr16
or
ljmp
sahf
push
movb
adc
pop
mov
fcmovnbe
and
movsl
push
push
cmp
mov
inc
sbb
xchg
mov
add
testb
js
mov
inc
jecxz
mov
jbe
imul
fisubl
push
pop
or
std
fsubr
and
or
xchg
mov
mov
rcrl
fstpl
add
xchg
shrl
icebp
adc
movsb
test
add
mov
out
lret
daa
mov
jbe
jnp
sahf
mov
pop
and
inc
push
sub
lods
cmpsl
in
rolb
imul
in
dec
pop
dec
ljmp
fnstenv
cmpsb
in
mov
push
push
mov
hlt
mov
mov
push
sahf
fisubs
pop
into
int
sbb
mov
pop
or
iret
das
pushf
aam
xchg
int
xchg
lcall
xchg
fcompl
in
shll
shlb
and
dec
xchg
js
test
insb
pop
addr16
jecxz
ret
push
xor
mov
ss
mov
imull
cmc
sbb
insb
cmp
mov
pusha
aas
cmp
and
ljmp
cmp
push
mov
adc
adc
sarb
std
into
inc
daa
xchg
dec
mov
repz
shlb
lcall
pop
mov
sarl
ss
pop
inc
movsb
fdivs
loope
pushf
xchg
ja
mov
jle
imul
sub
out
dec
bound
push
rcl
jae
dec
in
jae
sbb
sbb
adc
dec
inc
les
adc
mov
call
cmpsb
mov
inc
repnz
in
daa
icebp
ja
outsb
push
dec
dec
stos
mov
sahf
mov
loopne
insb
xchg
test
add
adc
fs
punpcklwd
lret
push
dec
pop
xchg
lss
icebp
sub
ljmp
push
mov
mov
mov
cwtl
cli
inc
push
cmp
movsl
sbb
jg
jnp
jnp
jbe
pushf
inc
xchg
jnp
jp
cmp
ficoml
js
jg
pop
outsl
cwtl
pop
push
ljmp
add
add
pop
jae
gs
call
fld
andl
bound
mov
dec
movsb
inc
mov
and
sub
out
loopne
mov
mov
inc
ret
scas
mov
dec
pop
add
cmp
mov
push
mov
andb
dec
aam
call
in
dec
mov
or
sbb
imul
push
or
pop
iret
rcl
icebp
subb
cli
cltd
jb
mov
pop
pop
xor
ror
les
and
in
add
push
rcr
inc
push
jmp
add
mov
and
ret
lahf
push
mov
fs
dec
sub
loope
push
inc
cs
push
ljmp
push
or
cmp
dec
cmpl
mov
cmpsb
imul
cmp
xchg
icebp
jp
add
and
hlt
sarb
int
fists
call
mov
lds
stc
lret
gs
clc
xchg
sbb
cmp
push
mov
sub
mov
push
sahf
pop
test
addr16
aas
mov
push
outsl
lahf
bnd
jp
jl
mov
xor
aam
jno
jnp
xchg
xchg
cmpsl
cmc
ljmp
idivl
add
ror
ret
mov
mov
inc
pop
scas
std
in
sbb
iret
and
mov
mov
outsl
jg
dec
pop
mov
and
rolb
orb
call
push
jmp
cmp
lcall
es
mov
scas
push
pop
lods
test
lods
jne
mov
mov
stos
adc
cmc
xor
sti
out
std
mov
mulb
jg
rclb
mov
sub
mov
mov
test
std
mov
xor
adc
and
jae
scas
pusha
dec
mov
dec
jbe
sar
lret
scas
aaa
in
xchg
or
in
jle
sahf
lahf
jb
push
faddl
mov
sbb
icebp
xor
cmp
stc
test
pop
lds
hlt
adc
scas
push
mov
neg
int3
push
in
repnz
popf
or
movsb
mov
sarb
pop
es
lret
clc
lea
aaa
lahf
push
dec
call
repz
movsl
sbbl
dec
mov
add
push
orb
roll
jg
icebp
jg
jmp
outsb
mov
xor
sub
das
dec
or
dec
xchg
sub
mov
dec
dec
dec
arpl
ja
pop
cmp
and
jo
ds
pop
xlat
mov
scas
jg
in
ss
cmpsb
jno
sbb
repz
sbb
pop
sub
test
fsts
int
or
jae
test
xchg
xchg
mov
test
jl
jno
stos
inc
into
sub
mov
jbe
aam
out
xor
test
ljmp
pushf
push
push
lret
add
stc
cmp
jg
fs
cmp
inc
ret
dec
cs
mov
and
aad
push
movsb
sub
int
xchg
and
shr
clc
flds
in
test
stos
in
xorb
dec
test
xchg
dec
mov
rcll
imul
or
mov
cmc
mov
xor
popa
mov
lods
pushf
js
push
mov
lret
aam
xchg
mov
mov
pusha
or
jae
mov
daa
js
movsl
mov
jae
fs
pop
mov
adc
jns
xor
dec
push
fistps
fisubrl
lcall
or
push
ss
adc
ja
in
mov
jbe
inc
repz
mov
loopne
xchg
mov
push
add
push
xchg
push
dec
sbb
jnp
or
sbb
pop
mov
inc
in
sub
je
loopne
sti
data16
ret
daa
in
jp
fstl
xor
shlb
out
aad
in
sahf
out
in
dec
mov
pop
lret
insl
les
frstor
and
inc
push
jmp
repnz
jp
cmp
divps
cld
xchg
repnz
lret
xor
sub
lods
mov
cmpsl
es
push
jge
dec
in
stos
js
ds
add
mov
in
xor
cld
cmp
pop
outsb
movsl
int3
or
cld
gs
gs
sbb
xchg
rcrl
adc
sbb
jae
loopne
jp
fwait
addr16
dec
hlt
mov
mov
add
xchg
popf
jmp
mov
clc
mov
enter
dec
or
cltd
sub
xor
xor
add
cli
or
inc
push
sub
lds
push
lahf
lret
push
fistl
cmp
adc
mov
push
sahf
and
rcrb
sub
sub
dec
pop
shl
push
push
shrl
fidivrl
lods
arpl
xchg
daa
in
cmp
jg
jmp
inc
adc
movsb
adc
lds
mov
adc
xchg
lret
cltd
mov
push
stc
inc
cmp
jo
hlt
fs
adc
adc
cld
cmp
scas
cli
pop
push
stc
and
jae
mov
add
mov
fwait
test
je
sbb
fldl
fisttps
xor
xor
xchg
int3
mov
jo
mov
jmp
adc
mov
and
loopne
adc
repz
cmpl
and
sbbb
mov
pop
sbb
dec
add
xor
xlat
xchg
mov
shrb
jns
scas
pusha
jp
mov
mov
cmp
aas
or
cli
push
mov
sarb
jae
push
popf
jp
insl
rcr
sbb
cmp
not
subl
aas
adc
mov
das
mov
mov
mov
pop
repz
arpl
sbb
adc
xor
repz
sbb
dec
mov
jge
cli
jge
mov
push
dec
sbb
jae
pop
ret
add
es
das
shll
repz
scas
cmc
jp
test
enter
aad
pushf
mov
add
inc
fucomp
sbb
test
xor
inc
mov
xchg
push
outsl
in
mov
xor
cmpsb
xor
scas
inc
dec
xchg
jge
pop
fistpll
dec
push
xlat
push
rcl
sub
das
xor
leave
test
mov
mov
scas
mov
jecxz
jp
mov
insl
pop
dec
lcall
xlat
or
rcr
ret
and
lock
add
mov
jmp
lods
rolb
xchg
out
cmp
push
sbb
fsubrl
sbb
fsubp
cmp
jp
lahf
leave
aam
lds
or
daa
xchg
scas
loope
jle
and
loop
mov
lods
mov
jo
inc
mov
xor
sbb
imul
out
pop
sbb
mov
xor
sahf
push
cmp
dec
repnz
mov
into
fstpt
imul
fidivs
xor
mov
es
sub
adc
ret
jmp
fwait
pushf
add
add
mov
inc
pushf
push
ljmp
mov
cli
rol
sahf
ss
andl
mull
push
mov
push
mov
fdivrs
push
sub
xchg
push
jl
xor
shll
inc
lea
xor
bound
loop
lcall
cwtl
mov
jmp
adc
cmp
or
inc
in
and
mov
and
adc
loopne
or
js
adc
add
xor
fimuls
outsb
push
mov
cmp
cld
mov
cli
rcl
lds
insl
lea
testb
stos
sub
adc
or
repnz
push
mov
jae
sub
mov
dec
xor
rorb
inc
loopnew
adc
or
sbb
push
pop
mov
xchg
push
popf
test
mov
popf
cmp
xor
lods
shrb
iret
mov
mov
pop
dec
cs
cmp
test
dec
sahf
xor
idivb
iret
aad
mov
xor
mov
mov
enter
out
pop
gs
fiadds
outsl
rorl
neg
mov
cmc
mov
pop
mov
push
pop
xchg
imul
mov
shrb
add
push
and
mov
call
sbb
xchg
es
xor
pop
test
pop
adc
scas
jmp
sub
push
sti
lods
sub
nop
jns
sub
jne
ljmp
adc
adc
mov
fsubl
out
pop
mov
jb
pop
inc
cltd
dec
push
mov
in
cli
loopne
imul
jo
jno
int
or
push
mov
sbb
cwtl
into
push
out
insl
js
mov
notl
je
sahf
mov
ret
loope
inc
xor
and
or
dec
stos
sub
fldt
sub
rcr
insl
ljmp
andl
inc
ret
or
cmovg
jmp
sub
sub
cmp
inc
stc
xor
dec
adc
xor
mov
xchg
and
fisubrs
in
xchg
push
les
mov
in
fisubs
add
std
or
dec
out
jnp
int3
dec
icebp
sbb
mull
or
dec
xchg
jbe
sti
stos
call
lret
test
in
or
xor
je
or
and
add
cmp
pop
pop
push
sahf
sub
xlat
or
pop
test
inc
in
jp
jns
in
lds
mov
push
fld
into
sub
or
jmp
pop
sbb
push
xor
sti
lea
xchg
cltd
lahf
push
clc
and
ficompl
mov
add
cmp
jle
in
fcoms
mov
jg
mov
addr16
xchg
iret
jp
dec
xor
mov
stos
fwait
xchg
testb
ret
mov
cli
jmp
repnz
test
lods
popf
aas
lea
sbb
push
addl
mov
ds
mov
mov
dec
push
cmp
cmp
sar
mov
cmp
jp
adc
jl
scas
int
adc
xor
add
in
mov
outsb
mov
push
inc
jg
mov
xor
lcall
loop
mov
arpl
fisubrl
lcall
andb
mov
fmull
test
icebp
jbe
outsl
test
adc
sbb
ss
dec
addb
jns
sub
mov
sti
ss
dec
repnz
pop
pop
fmul
sbb
jl
cli
jge
or
jge
leave
add
test
aas
sti
insb
fwait
rcll
cmp
fs
cmp
fidivs
pushf
and
fs
roll
test
scas
or
mov
mov
add
test
test
jle
xor
xor
lods
push
fmull
add
stos
lds
cmp
dec
sub
in
mov
cli
cmp
push
add
push
sarb
nop
or
fscale
loop
pop
add
std
mov
out
sub
xchg
test
mov
lea
sub
scas
fsubs
and
test
out
mov
dec
cmp
push
push
pop
daa
fwait
adc
jo
sbb
push
jb
stos
lret
inc
out
ds
in
dec
xor
mov
lock
gs
sbb
or
mov
add
or
inc
jo
dec
cld
fists
push
mov
cld
cmpl
pop
js
cli
out
mov
and
ja
cwtl
nop
mov
dec
pop
in
ret
push
push
test
xchg
pusha
push
push
aam
mov
cmp
jae
mov
push
in
stos
pop
xchg
sbb
add
xchg
insl
mov
lock
repz
add
mov
int3
mov
popf
mov
inc
sbb
mov
shl
or
lods
inc
jo,pn
imul
ljmp
mulb
fldl
sbb
lds
test
push
push
cmp
dec
sub
mov
or
pop
push
sbbb
pop
dec
xchg
sbb
outsb
shlb
testl
push
je
popf
push
push
orl
sbb
xchg
mov
cmp
or
test
outsb
pop
add
xchg
sub
fdivl
movsl
popf
imul
inc
inc
ret
es
addr16
int3
stos
movsl
int3
dec
cmp
push
fcompl
or
sbb
es
outsl
shll
mov
ljmp
inc
mov
lcall
outsb
mov
enter
and
inc
jmp
jp
scas
lcall
test
jmp
shl
ret
cmp
pop
popa
jns
dec
gs
push
push
cli
stos
mov
cmp
xchg
mov
aaa
jmp
out
imul
dec
adc
ret
ss
hlt
dec
scas
fwait
shr
jno
test
test
sbb
jnp
xchg
xor
pop
arpl
adc
loopne
add
mov
ret
sahf
mov
add
and
aad
insl
movsl
sbb
jae
ja
scas
jae
dec
pusha
pusha
mov
scas
cmp
push
stos
mov
sarb
imul
lea
push
jp
lods
adc
call
fs
cmpsl
and
mov
shr
popf
ds
push
cwtl
and
and
outsb
fbld
andb
sbb
sub
dec
jno
push
or
mov
add
cltd
cmp
iret
pushf
bound
inc
xor
mov
mov
pop
mov
repnz
stc
xor
lret
loop
mov
xchg
popaw
cmp
rolb
rcrb
or
je,pn
stos
cli
add
std
xor
mov
cli
call
test
out
rolb
add
loopne
jg
mov
xor
lret
mov
je
inc
mov
out
cltd
jae
pop
fadds
jmp
xor
and
shrb
insl
sub
sahf
cmp
push
mov
pop
add
int
jp
adc
ss
cmp
scas
insb
ret
cmp
pop
insl
popf
neg
test
fimull
in
add
mov
dec
sub
jne
fsubl
dec
sbb
sti
xchg
lds
shll
jg
push
mov
addl
jmp
dec
lret
jle
push
sbbl
lds
fadd
repnz
ja
mov
and
stos
push
repz
cmp
pop
jge
jno
mov
ret
inc
icebp
int
insl
shr
scas
or
xchg
addr16
mov
mov
push
jle
popf
sub
fsubs
call
imul
sahf
cltd
sbb
inc
loope
jae
push
adc
or
xlat
inc
lret
jae
xor
ficomps
mov
sahf
push
out
data16
mov
ja
cmp
push
mov
notb
pop
imul
add
insl
addb
pop
and
lods
adc
push
sub
sbb
add
adc
mov
adc
test
pop
rcrl
enter
jno
mov
in
mov
sub
jge
insl
mov
xor
icebp
fadd
fistl
or
lret
test
push
and
fldcw
pushf
stc
mov
mov
mov
ds
add
jge
or
out
dec
out
sbb
mov
sbb
int3
rorb
pop
in
push
push
iret
leave
xchg
ja
js
iret
lcall
xchg
mov
mov
ja
dec
cld
xor
addr16
js
jns
push
mov
cmp
dec
mov
sub
outsl
pushf
ljmp
adc
or
jp
aas
mov
mov
imul
ffreep
fs
jo
aad
pop
aam
icebp
adc
adc
xchg
imul
fwait
xor
pop
mov
enter
jp
pusha
in
mull
es
test
scas
into
xor
test
pop
mov
popa
out
fidivrs
inc
stos
inc
test
mov
scas
cli
mov
arpl
stc
mov
and
mov
jb
rcrl
out
mov
iret
std
mov
sbb
movsl
shld
pop
into
pop
mov
movsb
lret
repz
div
pusha
jl
mov
mov
adc
or
movsl
jg
fmull
fucom
lret
sbb
movsb
dec
int
push
cmc
inc
hlt
push
imul
loope
fs
cmc
shll
outsb
stos
sub
jle
sub
jbe
pop
shl
mov
fidivs
out
enter
in
mov
in
or
jecxz
cmpsl
dec
hlt
rorl
pop
xchg
out
rorl
inc
fbld
dec
mov
adc
inc
lds
xor
shrb
fwait
stos
mov
sbb
jne
std
clc
push
dec
pop
push
fisttpll
jbe
xor
into
ret
imul
and
and
bound
mov
pop
ds
sub
sar
mov
mov
scas
xor
lcall
lods
stc
xlat
xor
sub
inc
xor
push
sbb
lret
add
xchg
xor
cmp
xchg
into
mov
lahf
insl
mov
sti
and
enter
icebp
xorb
rol
mov
in
mov
inc
mov
jge
pusha
sbb
into
mov
push
and
pop
xchg
cmp
mov
test
cmp
outsw
cmp
test
daa
test
decl
sti
out
mov
cmp
cmp
xor
pop
dec
jl
pushf
xchg
cmpsl
push
and
das
daa
out
and
xchg
fdiv
adc
outsb
ljmp
in
out
mov
adc
pop
adc
cmpsl
adc
out
mov
rcll
icebp
inc
pusha
data16
xchg
les
insb
add
outsb
outsb
in
adc
jl
dec
hlt
leave
imul
call
xchg
leave
outsb
pop
cmp
mov
lds
das
xchg
fnsave
push
imul
jp
jns
mov
inc
data16
push
cmp
daa
xlat
and
imul
pushf
jg
inc
jne
xchg
insb
cmp
faddl
jmp
adc
push
addr16
cmpsb
cmp
mov
stos
jmp
inc
mov
xchg
hlt
or
cltd
push
xchg
mov
shrl
ret
fistpl
sbb
sub
add
add
lea
xchg
adc
push
sbb
pop
jb
and
pop
mov
cwtl
mov
add
pusha
sbb
mov
int3
mov
adc
mov
je
inc
es
or
into
out
push
stos
mov
insl
sbb
shrb
into
in
cld
mov
inc
mov
cmp
dec
sbb
fdivl
lods
ja
sub
pop
in
mov
xchg
mov
adc
insl
cli
pop
push
popa
fs
mov
popf
js
outsb
lahf
push
push
mov
pop
cmp
jae
cld
add
push
or
lcall
test
add
dec
shlb
lds
add
add
dec
fs
outsb
push
std
fsubs
add
icebp
imul
dec
addb
in
data16
in
xchg
mov
jb
xchg
mov
imul
pop
cmpsb
addl
xor
icebp
movsl
cltd
ja
cwtl
pop
xor
popa
ja
lock
icebp
ljmp
xchg
mov
outsb
cmp
repnz
mov
fldl
loope
jl
fdivs
ja
jg
insb
xchg
jl
lea
inc
xchg
fcmovnbe
outsb
out
cmp
popa
sub
repz
inc
mov
add
js
mov
loope
jae
out
cmp
popa
bnd
jmp
movsb
sbb
xchg
in
cmp
add
movsl
push
mov
popa
aaa
sbb
dec
jp
dec
not
in
test
into
mov
ja
lret
stos
lahf
insl
sub
and
mov
lea
inc
lretw
outsb
pop
lods
pop
lods
cmp
loop
and
mov
push
jl
push
xor
ja
movsb
jae
pop
je
jle,pn
pop
sahf
into
xchg
in
test
lods
dec
jo
pop
inc
lcall
imul
or
rolb
leave
mov
cmp
fdivs
mov
and
mov
jbe
and
inc
je
orb
and
mov
sub
xchg
shrb
mov
je
pop
test
test
jbe
push
mov
imul
mov
sahf
test
or
mov
push
pop
inc
cld
subb
sahf
jmp
jecxz
jae
cmp
push
imul
inc
pop
pop
aaa
cmp
mov
loopne
lahf
leave
jb
mov
and
push
and
pop
orl
inc
es
in
mov
inc
dec
sub
rcl
sbb
sbb
fxch
in
orb
leave
mov
rcrb
out
cli
pushf
xchg
mov
push
jp
dec
cmc
int3
push
insl
and
out
xchg
cmp
or
call
and
ja
out
push
scas
mov
fbstp
dec
and
lods
jmp
imul
movsb
xlat
inc
cmp
xchg
test
nop
lock
mov
mov
aam
push
leave
mov
xchg
test
setns
push
lcall
cld
mov
daa
xor
inc
mov
sti
subl
ret
stos
cmp
loopne
popa
gs
testb
ljmp
or
int3
or
cmpsb
jmp
push
jl
push
ljmp
xlat
mov
out
add
pushf
mov
sub
jae
xor
sbb
mov
mov
xchg
mov
cwtl
mov
cmp
clc
cmpsb
cmc
clc
je
pop
shlb
jecxz
push
in
xchg
addr16
and
ret
push
adc
add
mov
mov
push
push
iret
shll
sbb
mov
pop
or
sahf
mov
fstps
arpl
or
push
push
daa
pop
push
xor
or
repnz
and
add
mov
mov
xchg
fimull
jbe
fwait
sbb
in
dec
adc
ss
in
or
lahf
ds
mov
inc
idivb
sub
lcall
popl
clc
std
fisubs
lods
es
leave
fsubr
fsubrs
or
mov
leave
lods
jecxz
cmp
pop
lock
or
push
and
adc
out
sub
bound
stos
lret
cmp
push
aad
lcall
push
lock
mov
je
fimuls
cmp
outsb
mov
ret
sub
popf
ret
inc
push
lcall
add
sub
push
jbe
addr16
mov
push
xchg
movsl
add
xchg
mov
add
pop
imul
repz
xchg
xchg
mov
push
sti
adc
cld
cmpsl
add
mov
push
or
std
movsl
flds
and
adc
or
insb
xchg
fistpll
sbb
enter
cmp
movb
or
fcoml
sub
ljmp
cwtl
and
inc
and
jmp
sub
xor
jp
cmp
cmp
nop
scas
push
stc
pop
inc
insb
js
fldenv
push
mov
arpl
push
jae
mov
aad
dec
pop
shrl
inc
inc
dec
and
sarb
stc
sub
es
adc
cmp
cld
mov
mov
sbb
mov
adcl
orl
mov
mov
int3
enter
fisubs
pop
lds
mov
call
mov
pop
or
negl
mov
mov
fisttpll
and
ss
add
gs
mov
or
xchg
lea
dec
test
sbb
sahf
mov
in
add
das
cmpsb
aad
aam
dec
cmp
sbb
dec
cmc
sub
lock
inc
sub
push
dec
add
jo
int
inc
mov
in
sub
inc
cli
lcall
scas
mov
adc
dec
das
and
mov
fnstcw
js
out
cmp
fwait
jne
shrb
pop
xor
and
ret
lret
mov
xor
and
filds
jle
mov
scas
jecxz
pop
dec
or
xchg
lret
shrl
push
and
pop
sbb
jno
cmp
pop
shr
mov
push
sbb
pop
dec
sbb
sbb
xor
daa
sbb
inc
sub
jb
mov
ljmp
dec
lea
data16
dec
outsb
mov
xorb
mov
pop
mov
test
stc
mov
push
das
aam
jns
loopne
add
add
cmp
push
dec
std
fdivl
mov
adc
adc
xchg
xor
ds
mov
or
mov
jg
addr16
lcall
clc
or
or
mov
xchg
mov
loopne
push
out
jns
outsl
pop
repnz
arpl
out
add
xchg
or
outsb
enter
jge
xchg
cmp
sbb
sbb
jne
out
pop
imul
out
aas
leave
cmc
mov
call
repz
jb
push
inc
mov
push
xchg
push
es
add
mov
aad
push
push
in
test
mov
mov
sti
jo
lahf
dec
cli
push
bound
das
and
adc
mov
mov
outsb
fdivl
jbe
xchg
xchg
mov
dec
pop
lret
push
mov
jp
xor
xchg
fdivrl
dec
add
sbb
jmp
mov
je
xor
add
pop
orb
in
lods
cmp
dec
cld
jge
out
jne
push
je
fsts
push
je
mov
pop
call
cmpsb
imul
bnd
push
movsb
pop
stos
mov
data16
or
inc
shl
jmp
es
out
adc
fs
xchg
mov
xlat
cmp
pop
cmp
aad
dec
stos
out
jmp
aad
mov
divb
aam
stc
scas
and
jp
cld
fs
test
ja
adc
lcall
loop
mov
pop
fs
divb
in
fstp
mov
push
jle
xor
push
and
data16
pop
sahf
pop
mov
rorb
push
xor
lods
sbb
cmp
cld
jmp
pop
jo
or
xchg
aas
sub
cmp
mov
xlat
das
pusha
mov
fwait
jne
cmp
sbb
xchg
stos
and
sub
lret
pop
sub
sbb
orl
push
icebp
jl
movsb
js
cltd
xchg
xchg
xchg
or
cmpb
scas
pop
out
aam
push
and
xchg
jmp
test
xor
mov
xor
icebp
ret
and
cmpsl
pop
iret
mov
push
mov
xchg
test
ficompl
jo
mov
pop
dec
sarb
cs
cmpsl
adc
testl
cld
push
sub
jns
shrb
jo
xchg
repz
adc
dec
mov
out
push
fcomps
jge
fidivrs
dec
out
inc
inc
xchg
mov
adc
or
jns
cmc
jmp
xor
or
loope
es
in
cltd
sub
xor
xchg
xchg
cmpsb
jle
xlat
cmovns
mov
rclb
stos
outsb
lcall
gs
mov
push
lods
push
jbe
pop
push
jns
int3
fsubrs
push
mov
test
popl
pop
adc
pusha
pop
stos
inc
shll
mov
push
ret
scas
inc
dec
add
and
aam
das
shrb
xchg
sub
jne
sbb
adc
imul
int
push
mov
out
inc
cs
mov
sbb
pusha
xchg
test
pop
or
or
mov
add
mov
std
pop
imul
sub
and
outsl
mov
mov
sbb
jno
cwtl
cli
iret
mov
loop
ljmp
fsubl
mov
insb
scas
cmp
cmpsb
xor
lret
imulb
push
and
rep
imul
pop
xchg
in
sarb
lock
orb
cmpsl
inc
cmpsl
js
xchg
out
mov
icebp
xor
cmc
xlat
scas
pushf
dec
test
mov
lret
or
dec
in
jno
popa
push
inc
fisttpl
or
bnd
xor
aad
xchg
push
cs
or
repnz
dec
fadds
pushf
das
inc
mov
jo
jno
xchg
je
push
aad
out
jle
mov
jp
sahf
xor
ja
mov
pop
aas
and
cwtl
pop
out
lods
test
dec
rorl
out
loopne
movsb
ss
ret
fisubl
adc
in
push
rcll
mov
push
pop
xchg
data16
xchg
enter
add
push
add
fisttpll
clc
fs
call
je
fcoml
ss
dec
mov
loopne
dec
sbb
mov
adc
ja
lock
lods
out
push
cld
test
shll
lcall
or
push
sbb
jmp
push
test
mov
xchg
add
mov
sti
imul
clc
lds
rol
dec
aaa
xchg
xor
push
lahf
or
call
add
cmp
das
jge
sbb
sub
sbb
scas
push
sbb
popf
cwtl
dec
aad
aaa
pmulhuw
fwait
movsl
add
movsb
cli
lret
or
dec
jae
bound
das
add
cmp
scas
stos
rorb
divl
push
sbbb
jge
xor
xchg
leave
jo
push
arpl
js
icebp
and
and
add
aad
pop
or
shrl
out
jbe
ljmp
andl
mov
lret
or
dec
mov
inc
clc
push
lret
xchg
pop
xchg
call
dec
shlb
mov
mov
pop
and
sbb
in
cmp
mov
cli
clc
pop
xchg
dec
cmpsb
frstor
inc
imul
bound
movsb
decl
fildl
neg
lock
sbb
fwait
push
inc
xor
jnp
pusha
pushl
mov
sub
and
mov
repnz
ja
and
std
stc
or
loopne
mov
xchg
sbb
mov
jmp
pop
dec
mov
hlt
rcrl
aad
mov
test
mov
jl
addb
dec
idivl
inc
dec
jle,pn
hlt
jle
in
and
aas
adc
sbb
cmp
jne
and
ret
ljmp
sub
adc
clc
dec
jns
push
or
aad
mov
xlat
fwait
bound
inc
outsb
add
fwait
pop
repnz
mov
cmc
out
std
rcrl
and
lahf
mov
fidivl
push
xorl
popf
aad
cmp
popa
and
test
lahf
jno
jbe
nop
dec
das
jb
mov
cmp
or
cmp
push
shrl
into
inc
xchg
subb
aad
jne
sbb
mov
lret
imul
jnp
pop
std
push
test
cmc
rcrb
cli
in
push
mov
sbb
adc
dec
inc
or
or
adc
loop
cmp
fisttpll
jge
xchg
inc
lahf
aaa
test
push
inc
ret
pushf
fnstcw
or
int3
sub
push
sub
jge
jmp
dec
cli
or
jl
adc
jge
scas
lock
cmpsl
mov
mov
add
mov
fdivrs
push
mov
and
pop
xabort
sub
jl
add
clc
mov
push
js
and
aaa
test
xor
ja
cmpsb
in
jo
lcall
mov
push
inc
dec
push
sbb
xor
in
pop
sbb
lock
mov
dec
popa
out
out
enter
sbb
cmpsb
xor
pop
leave
dec
outsl
dec
sbbb
sbb
mov
mov
test
outsl
push
sahf
jle
and
ror
fnstenv
dec
dec
mov
insb
jecxz
xchg
loopne
mulb
fdivrs
dec
push
xchg
pop
mov
push
test
add
rcrl
inc
dec
push
xor
xchg
xor
pushf
inc
mov
subb
inc
out
xchg
into
rolb
sub
push
pop
push
lock
int
arpl
shll
xor
sub
fsubrl
cli
mov
jbe
adc
jge
ret
lret
mov
rcl
xchg
rcr
aaa
mov
pop
mov
xchg
cld
push
lcall
rorb
pop
jbe
les
gs
mov
xor
pop
sbb
daa
mov
cmp
inc
aaa
psubsw
xor
aad
in
xrelease
xor
jle
adc
sub
adc
pop
and
icebp
jp
ret
inc
mov
and
jbe
sbb
popa
cmp
test
or
mov
bnd
or
cld
push
loopne
mov
sbbb
sub
imul
sahf
adc
fyl2xp1
jo
loop
mov
and
sbb
arpl
bound
inc
ret
sub
incl
adc
fwait
dec
out
fcomps
xchg
mov
maxps
lods
neg
inc
push
mov
lret
mov
inc
or
sbbb
cmp
lock
int3
lcall
stos
or
jae
and
scas
enter
hlt
out
pop
fwait
inc
in
dec
xchg
push
mov
sbb
repz
dec
fs
outsl
fstpl
testl
outsb
inc
jns
xor
addl
inc
jmp
faddl
xchg
xchg
ret
aam
adc
push
sub
pop
jno
imul
pop
sbb
stc
dec
mov
sbb
pop
and
mov
shl
or
stc
nop
or
inc
mov
fbstp
mov
insl
roll
cmc
lahf
hlt
mov
inc
sbb
stos
push
imul
or
sahf
push
dec
mov
daa
sarb
jae
fsts
add
stos
mov
scas
cs
push
cli
clc
ss
xor
cwtl
jae
add
xchg
dec
sti
cltd
xor
xchg
test
inc
mov
out
mov
sbb
out
xchg
loope
jg
out
push
mov
pop
insb
outsl
pop
loopne
repz
test
mov
push
adc
mov
out
sub
adc
in
push
daa
data16
das
and
addr16
out
fsubrl
dec
mov
pop
cmp
ja
int3
arpl
dec
call
mov
js
data16
mov
sub
mov
subb
inc
clc
xchg
repnz
aad
add
cmc
stos
jle
mov
test
rol
pop
fcompl
push
movsl
xor
arpl
mov
pop
mov
xlat
sub
cmp
mov
push
in
dec
xchg
loopne
fdivrs
hlt
mov
mov
mov
fnstenv
push
mov
or
and
je
jb
into
lods
xchg
scas
stos
rclb
adc
and
mov
xor
ja
out
jg
lock
mov
aas
cld
mov
hlt
push
xchg
pop
rcll
gs
test
xor
mov
push
icebp
out
bound
pop
lret
cmpsb
inc
push
sbb
outsl
push
les
roll
or
or
or
or
mov
jns
inc
mov
pop
outsb
xor
jmp
xchg
xchg
cmp
pop
bswap
repnz
fs
lahf
or
in
pop
js
out
in
sub
test
sub
pop
or
xlat
cmc
das
imul
lds
mov
jno
and
aas
call
out
jle,pt
xlat
lock
cmp
xchg
sub
lock
pop
push
pop
jmp
jb
pushf
lds
add
cmp
jae
js
sbb
add
add
repnz
mov
inc
push
cltd
mov
cmp
xchg
in
push
aad
mov
test
iret
mov
in
jns
inc
iret
repnz
mov
sbb
ss
cmpsl
mov
out
push
jo
addr16
pusha
or
xor
or
and
in
cli
test
adc
cli
or
test
int
loope
xor
push
push
dec
sbb
or
ret
mov
fs
mov
xor
les
xor
dec
adc
xchg
cli
loop
ret
adc
fadds
hlt
sbbb
push
lcall
scas
ret
stos
jne
add
ja
pop
dec
outsb
push
nop
hlt
xor
test
movsl
sbb
and
jp
enter
inc
jmp
pop
mov
adc
or
sti
insl
jl
mov
fstps
inc
xor
push
push
repnz
lret
in
mov
mov
loop
xchg
xchg
xor
mov
iret
xchg
push
fadds
jge
pop
sbb
popf
stos
push
sbb
push
xlat
call
ss
jnp
ja
sbb
cli
jo
ljmp
dec
pop
xchg
add
stos
and
adc
mov
pop
loope
inc
mov
lahf
stos
cmpsb
scas
xor
or
push
jle
xchg
rolb
aam
adc
jne
inc
ficoml
pop
ss
out
inc
xchg
cli
xchg
in
sub
or
cli
arpl
sbb
fisubrl
adc
lahf
sbb
jno
fs
mov
xor
fs
roll
mov
ljmp
jmp
out
in
or
lods
push
sbbb
mov
stos
dec
daa
cmp
push
idiv
ja
pop
stos
add
xchg
sub
dec
fidivrs
mov
divb
or
or
aaa
in
iret
lret
lcall
arpl
insb
in
outsl
andl
pop
jmp
pop
jae
jp
inc
jnp
xor
cmc
push
aas
fstps
mov
and
loopne
hlt
testl
mov
and
int3
dec
mov
iret
stc
int3
loop
imul
mov
push
lret
mov
lcall
dec
dec
lret
aas
pop
rorb
push
mov
shll
jmp
add
ds
bndstx
scas
mov
inc
and
add
sbb
lcall
xlat
ss
jo
hlt
sbb
loop
add
sbb
mov
inc
dec
int3
and
mov
es
or
xlat
push
inc
and
outsl
fsubl
rolb
repnz
leave
js
add
jbe
push
mov
sbb
lret
mov
icebp
sbb
cld
mov
xor
push
push
mov
aas
cmp
add
jnp
sbb
jecxz
xor
cwtl
push
fidivrl
mov
dec
call
pop
inc
add
and
mov
xor
pusha
stos
dec
and
mov
cld
fmull
jns
inc
mov
xchg
cmp
addr16
lods
gs
push
aas
fst
inc
outsb
inc
sbb
dec
sub
fstl
mov
sti
into
lds
mov
mov
mov
jl
bound
jmp
push
push
jge
shrl
fcomip
adc
addr16
inc
cmp
inc
lahf
mov
and
data16
jb
rorb
aam
lcall
insb
adc
pop
adc
mov
out
adc
in
jnp
lods
ja
rcrl
jne
adc
adc
test
loop
shlb
movsl
sub
pop
rcrl
imul
es
cli
jo
aad
add
dec
mov
inc
pop
shll
xor
push
add
and
and
ds
sub
aas
jle
mov
negl
loopne
pop
sbb
add
arpl
out
adc
movsl
mov
or
adc
icebp
xchg
shr
or
adc
sarl
jb
xchg
idivl
insb
roll
jp
cmp
xchg
mov
or
or
inc
sbb
xor
lret
jge
mov
shlb
lock
fldenv
mov
mov
inc
cmpsb
popf
pop
lahf
push
pop
aas
add
in
add
outsb
sub
xor
call
cs
pop
aas
adc
test
loopne
pushf
shrl
sub
fstpt
movsl
mov
enter
lahf
out
mov
andl
je
dec
shrl
pop
xlat
and
mov
nop
mov
mov
xorb
mov
fmull
call
dec
sbb
or
leave
xor
ja
int3
movsl
push
daa
push
sahf
scas
flds
adc
mov
and
dec
sub
shll
cmpsl
xchg
push
push
adc
and
dec
sub
cli
sarl
sub
mov
push
ds
das
mov
xchg
leave
dec
lock
lcall
insb
rorl
sbb
pop
adc
push
and
jle
and
imul
sbb
lods
test
inc
mov
lret
out
aad
cmp
mov
mov
and
call
dec
pop
push
es
loop
push
addb
mov
push
adc
call
daa
sbb
adc
pop
ret
movsl
mov
sbb
dec
cltd
mov
cmp
cmp
pop
shll
ljmp
sub
cmp
lock
xor
push
inc
sarb
icebp
mov
test
push
lea
or
xor
popf
inc
dec
ret
xchg
lock
mov
sbb
push
mov
xor
in
cltd
sub
mov
gs
jne
shlb
cltd
push
lret
add
fsubs
adc
fst
fsts
jae
mov
ret
xchg
pop
insb
sbb
ret
out
loop
outsb
aas
cld
dec
mov
xor
jmp
add
or
sub
dec
sub
out
out
decl
shrb
pop
pusha
mov
pusha
and
mov
aam
pop
inc
jno
mov
in
sbb
sub
jns
ror
scas
cmp
nop
pop
sbb
pop
cli
xchg
out
inc
ds
mov
int3
repz
add
popf
fwait
int
arpl
enter
dec
push
punpckldq
dec
pop
pop
test
nop
je
inc
pushf
jb
inc
scas
sbb
mov
stos
xchg
ds
sahf
mov
cmp
xor
lods
cmp
mov
mov
mov
inc
mov
mov
jp
jbe
mov
lods
xchg
or
jno
out
mov
es
and
pop
adc
mov
mov
testb
lds
xor
mov
lea
outsb
pop
jp
mov
mov
addr16
xlat
cltd
cmc
jbe
push
scas
and
sbb
add
or
pushf
push
aam
push
je
int
sub
xchg
add
sbbb
test
mov
pop
xchg
xchg
repnz
ljmp
cmp
addl
scas
rcr
cmc
mov
pop
daa
jecxz
repnz
dec
in
cmp
xchg
loop
mov
mov
add
fnstcw
pusha
dec
mov
in
mov
lods
dec
sahf
shll
mov
call
mov
outsl
popf
lea
out
jmp
shr
out
push
inc
unpckhps
call
xor
clc
mov
sarb
imul
out
add
mov
aam
test
outsl
pop
sub
movsb
mov
push
jb
and
stos
je
in
bound
sbb
and
pop
push
dec
lret
xor
xor
lcall
inc
lods
sub
pop
insb
add
daa
loop
and
pop
leave
data16
or
jl
ficompl
mov
lock
cwtl
call
sbbb
or
test
mov
stc
sub
ljmp
cmp
test
out
int3
push
pop
adc
push
int
leave
lock
xchg
ror
jmp
mov
cmp
sbb
mov
mov
bound
ds
sbb
jl
jg
sbb
dec
adc
jmp
jle
insb
jl
les
xchg
iret
fwait
popf
adcl
xlat
dec
jns
fsts
out
iret
jnp
or
lea
push
ret
mov
push
push
mov
fdecstp
adc
scas
iret
push
repz
daa
sub
xchg
and
jbe
lods
sbb
std
add
push
repnz
pop
shlb
push
jg
xchg
xchg
jmp
mov
data16
les
or
lds
push
lea
adc
jno
mov
test
sbb
rorb
inc
and
cmp
sahf
mov
add
push
scas
int3
mov
test
add
ror
mov
cmp
push
or
pop
mov
test
and
mov
addb
imull
neg
fs
push
mov
xchg
imull
out
xor
jns
or
incb
jge
cmp
movsb
xor
pushf
mov
adc
pop
lods
es
jl
aad
arpl
ret
jg
sub
and
in
or
arpl
imul
inc
mov
test
es
lahf
and
dec
addr16
push
lret
mov
sub
xchg
fst
out
or
lock
inc
insl
into
shl
leave
cmp
cli
mov
test
shlb
cmp
jb
push
xchg
inc
mov
dec
dec
and
mov
nop
lcall
fcmovnbe
subl
dec
fninit
test
dec
push
movsb
xor
repz
dec
push
inc
je
sub
xchg
fidivrl
jne
pop
sti
cmp
aad
inc
bound
bnd
cmp
fstpl
jae
sbb
or
push
sub
mov
aas
cld
xchg
gs
int
lock
pop
push
sti
or
push
push
in
out
xor
stc
mov
mov
fnstenv
inc
int
mov
inc
loop
out
dec
mov
in
adc
popf
rcrb
fldlg2
push
push
adc
inc
pop
ljmp
dec
addr16
mov
adc
arpl
rcrb
add
pop
cmpsb
or
outsb
cld
cmp
push
jl
stos
push
outsl
ror
inc
xchg
cs
inc
aam
and
sbb
dec
lea
jnp
cmpsl
testl
and
mov
clc
or
or
cmp
in
lods
gs
dec
jp
and
rorl
xchg
dec
sbb
bnd
cmp
int3
inc
rcll
enter
clc
testb
nop
insb
cs
lcall
movsw
stos
jno
pop
stos
outsl
cmp
xchg
filds
out
sbb
mov
loop
out
ds
sub
cmp
lcall
clc
bsr
xchg
pop
jno
sbb
cltd
or
imul
add
test
cmc
into
test
rolb
iret
popf
bound
jnp
push
in
sbb
rorl
insb
add
xlat
lcall
shll
and
repnz
mov
dec
pop
add
aaa
xchg
inc
outsb
scas
into
mov
pop
mov
mov
orl
test
lods
fldt
pop
or
loopne
xor
insb
inc
xor
dec
inc
cmp
neg
xchg
or
out
jl
not
movsl
inc
std
pmaddwd
imul
stos
rcll
xchg
or
cs
pusha
jae
mov
pop
mov
sbbl
mov
jecxz,pt
adcb
adc
and
xchg
xchg
cmp
clc
adc
mov
pop
push
in
cmpsb
ss
mov
xor
lods
jge
push
fdivr
or
xor
aad
out
adc
outsl
ror
sbb
adc
mov
adc
cmp
mov
iret
cmp
cli
int
sub
xor
in
mov
adc
and
in
xchg
add
dec
dec
jmp
decl
es
das
xchg
mov
inc
lods
aas
pop
imul
lahf
call
enter
dec
add
arpl
inc
push
daa
jnp
dec
add
ret
mov
test
lock
push
fiadds
out
and
mov
call
sbb
dec
lret
jno
inc
push
out
jns
push
les
icebp
outsb
push
gs
jo
mov
mov
andl
or
pop
insb
or
insb
pop
into
inc
pushf
fsubrs
cmpl
jne
in
out
mov
fs
and
push
mov
in
and
xor
inc
out
or
test
mov
jbe
jg
pop
into
jne
outsb
xlat
pop
loop
mov
adc
aam
push
sti
stos
mov
or
mov
adc
movsl
jmp
xchg
int
jmp
iret
mov
in
dec
movsl
mov
add
shlb
iretw
inc
fsts
idivb
lret
push
stos
divb
dec
loope
mov
xchg
enter
or
test
sub
adc
pop
pop
lahf
inc
and
out
incl
jbe
stc
jg
sbb
fidivl
xchg
fbstp
sbb
jne
int3
mov
mov
and
cmpsb
ret
iret
or
in
es
jmp
insl
mov
sub
test
add
ljmp
push
pop
xchg
jnp
mov
mov
add
and
imul
xchg
cmc
mov
xor
add
ret
sbb
mov
imul
fwait
lret
xchg
cmp
sbb
aaa
mov
mov
inc
add
fnstsw
mov
sub
inc
addb
imul
repnz
inc
cli
mov
pushf
inc
scas
mov
std
mov
in
cmpsl
mov
xchg
movb
jecxz
aad
jae
sbb
ret
and
mov
cwtl
and
add
inc
dec
inc
adc
sub
pop
iret
push
stos
sub
add
aaa
ffreep
test
lret
inc
insl
outsl
fstps
int
dec
dec
ds
cmpsb
add
js
jb
xchg
mov
xlat
sub
ss
popa
cltd
xor
jb
fcomp
push
mov
stc
bound
clc
outsl
sti
add
sbb
lret
call
pop
arpl
pop
jle
outsl
mov
cmc
mov
jg
push
mov
mov
rorl
cmp
movsl
ja
mov
sbb
shrb
mov
movsl
shll
push
push
cmpsl
or
mov
mov
mov
bound
jp
or
cmp
inc
clc
mov
out
jg
sar
jnp
jbe
mov
jae
and
jno
jbe
adc
loopne
or
dec
test
adc
movsb
mov
jnp
push
add
mov
roll
ds
cli
pop
or
in
jg
dec
mov
les
mov
leave
test
add
gs
and
sub
cmp
mov
fs
xor
lods
cmc
sbb
lret
and
int3
sti
pop
mov
pop
stc
fdiv
mov
shlb
push
cmp
sub
cltd
xchg
mov
mov
jge
mov
repnz
ds
dec
push
inc
and
xchg
dec
movsl
xlat
mov
sarb
or
xchg
mov
aas
int
or
inc
lods
push
test
stos
and
filds
out
nop
in
xor
or
in
stos
xchg
ds
arpl
cmpsl
lock
or
fimuls
daa
pop
sub
dec
sbb
rorl
lds
inc
outsl
pop
cmp
incb
pop
adc
mov
inc
ret
lods
add
pushf
xor
movsb
jmp
fldpi
jnp
mov
jg
sub
arpl
pop
dec
lea
xchg
icebp
nop
jne
pop
outsb
adc
cltd
daa
sub
ja
dec
scas
sub
inc
fnstenv
arpl
or
rcrb
int
scas
dec
xchg
test
out
push
adc
push
mov
in
inc
xor
sbb
test
je
scas
stc
push
jo
les
add
push
adc
xlat
shl
stos
lret
mov
and
pop
add
pop
cwtl
or
movsb
arpl
inc
sbb
andl
loopne
mov
lret
adc
cmp
test
pop
push
sub
push
out
mov
jb
cs
insb
sbb
or
xor
push
fidivl
fisubrl
addb
scas
insb
test
repnz
cli
icebp
cbtw
sub
iret
xor
mov
rorl
testb
dec
pushf
mov
mov
cmpsl
push
out
add
dec
mov
mov
sbb
dec
or
push
push
push
ljmp
sahf
push
jmp
filds
in
push
insl
xchg
lods
inc
int3
mov
inc
and
push
aas
jo
fs
mov
jmp
and
push
dec
jge
mov
push
xchg
je
xchg
fdivrs
in
rol
add
imull
js
jo
and
add
mov
shrl
push
dec
notb
mov
sub
cmp
imul
jo
pushf
mov
pop
push
mov
adc
push
sti
push
rorl
mov
cltd
add
fisubs
lcall
mov
xchg
jno
add
or
dec
fmul
jle
and
push
lcall
fists
dec
sub
xchg
jne
pop
jecxz
mov
jge
inc
mov
mov
sti
popa
push
mov
les
pop
in
xchg
inc
pop
dec
cmpsl
inc
dec
sbbl
sub
jnp
mov
adc
dec
push
mov
jno
sbb
jl
push
push
dec
inc
insl
or
push
dec
nop
shlb
mov
es
lods
dec
adc
ret
test
movsb
adc
sub
jmp
push
jbe
mov
cmpsl
jmp
movsb
adc
or
add
pop
out
fs
inc
lcall
xchg
push
loop
daa
xor
xchg
jnp
pop
xchg
mov
push
mov
js
daa
ret
sti
add
lods
xchg
push
adcl
sar
jge
xor
cmp
sbbb
cltd
push
dec
cltd
idivb
int
fimuls
movsl
and
push
es
add
mov
sar
je
out
call
push
pop
or
rcl
mov
leave
arpl
mov
xor
adc
int3
je
push
popa
imul
push
and
pusha
or
xchg
out
pop
mov
clc
repz
dec
mov
pusha
lods
shrl
setb
add
cmp
popf
test
stc
and
mov
sub
jge
push
push
ljmp
outsl
adc
imul
sub
inc
sar
cmp
xor
sar
popa
pop
inc
push
lods
pop
add
inc
adc
insb
outsb
mov
lods
inc
fstps
and
mov
adc
sbb
das
cmp
lods
dec
movsl
lds
rorl
loop
fildl
movsb
pop
push
cmp
xor
test
xor
daa
add
mov
pop
into
xchg
push
inc
ror
iret
ss
shll
push
out
fimuls
scas
xor
and
inc
es
icebp
and
jb
cwtl
mov
cmp
mov
scas
xchg
out
test
loopne
xchg
in
in
lods
cwtl
inc
and
lcall
add
mov
js
sbb
xchg
enter
popf
in
cmp
lea
jmp
inc
push
les
push
gs
cli
ftst
pop
add
sbb
and
inc
jle
pushf
adc
mov
jns
cmp
xorl
add
pop
rclb
mov
gs
cmp
leave
int
pop
jmp
and
repnz
sbb
aaa
adc
incb
sbb
dec
leave
insb
into
stc
adc
mov
mov
shll
addr16
das
cmp
ret
fidivrs
cltd
leave
mov
rclb
jge
push
inc
xchg
cmc
pusha
stos
adc
pushf
jge
pop
sub
popa
test
jne
data16
jg
mov
mov
lds
loope
jne
jecxz
lret
call
jl
xchg
push
xor
aam
movsl
popa
xchg
sbb
mov
jecxz
inc
pop
cmp
and
test
fs
mov
add
jg
sbb
pop
repz
fwait
jns
int
adc
mov
push
xlat
and
inc
or
jb
pop
lock
arpl
cmp
or
mov
int
lcall
das
inc
in
cltd
imul
pushf
xor
testb
in
pushf
je
xor
dec
fstl
mov
test
lahf
push
jmp
arpl
movsb
stos
or
jmp
rcrb
push
inc
inc
hlt
mov
push
add
push
cmp
inc
add
jb
xchg
sub
fwait
out
jp
xor
pop
bound
add
std
in
arpl
sub
arpl
lods
mov
adc
test
pop
and
call
xchg
hlt
or
xchg
cmp
les
out
sub
pop
sbb
jp
sub
mov
jle
ja
push
mov
jo
aam
int3
jnp
xchg
enter
and
repz
push
ror
xchg
sub
push
pop
into
mov
mov
mov
pop
mov
sub
jb
pop
sub
sub
jecxz
fmulp
push
test
cmp
inc
sbb
jmp
insl
or
mov
lcall
daa
sbb
xchg
fs
cld
adc
xchg
sub
push
roll
mov
xor
test
xchg
pusha
scas
stos
add
ss
inc
cmpsl
jnp
repnz
aad
push
pop
stos
adcl
mov
insl
scas
jo
adc
jae
fistpll
and
lods
mov
loopne
lock
hlt
into
jle
aaa
and
fidivl
arpl
enter
dec
mov
into
call
mov
cmp
gs
sbb
stos
repnz
in
popa
sub
mov
into
jmp
fcomi
xchg
pop
jcxz
rorb
xchg
jno
lea
test
pushf
xor
fwait
outsb
lods
and
mov
popf
loopne
or
and
js
pop
pushf
or
dec
in
dec
loope
push
pop
ds
ret
mov
clc
adc
call
sbb
mov
jnp
adc
pop
mov
cmp
pop
cmp
inc
adcl
test
jmp
mov
sbb
fstps
fwait
xchg
or
jno
divb
loope
and
andps
insb
bound
mov
das
sub
jg
int
jmp
pushf
lock
xlat
vmovaps
jg
je
jl
mov
mov
add
cmp
paddsw
push
sahf
int3
lock
pop
mov
lret
out
xchg
mov
fisubs
cmpsb
into
stos
xor
mov
addr16
scas
lds
ss
adc
sbb
js
clc
loop
add
je
movsb
add
dec
aas
push
insl
jns
cmp
push
inc
or
adcl
mulb
pop
mov
out
mov
into
mov
xor
dec
push
jb
mov
test
in
imul
lea
hlt
mov
lret
stos
and
repz
mov
push
gs
fwait
push
adc
fdivrp
lret
xor
fcompl
out
pop
push
jle
ret
xchg
jno
cmp
or
jecxz
jne
icebp
daa
xor
add
adc
xchg
jnp
mov
jns
imul
xor
xor
movb
filds
cmp
pop
jne
les
paddsw
fidivs
rcl
cmpsl
mov
or
adc
pop
insl
push
js
mov
cmpsb
pop
daa
jo
loop
fimuls
push
xchg
inc
jmp
lods
lret
or
push
ret
xor
enter
jns
lret
cmp
in
testl
push
xor
mov
and
jmp
mov
popa
cvtps2pi
mov
cmp
shl
sub
movsb
in
or
sub
jnp
sub
pop
push
loopne
push
test
push
cmp
xchg
dec
test
jle
or
outsl
imul
lret
xor
aam
inc
mov
iret
inc
push
lods
mov
jmp
cmpxchg
idivl
int
or
mov
int3
or
test
adc
iret
cmp
jp
lret
aam
mov
stos
mov
mov
je
int
or
xor
pushf
icebp
jno
out
add
sti
mov
and
imul
fcoms
sar
data16
mov
mov
mov
dec
outsb
xchg
insl
loope
and
push
mov
lds
mov
cs
xchg
sub
adc
xchg
push
mov
cmp
jl
add
lahf
dec
aad
pop
mov
notb
scas
cld
xor
or
sti
adc
dec
dec
stos
pop
insl
mov
je
fcompl
je
jmp
dec
test
cwtl
lahf
push
stos
leave
stc
xchg
jge
push
cs
test
into
xor
nop
scas
push
mov
jg
cld
scas
jbe
cmc
imul
inc
jno
mov
jmp
cmc
xchg
in
sub
cmpsb
dec
sbb
and
push
adc
or
ljmp
cli
fdivrl
aad
test
adc
loopne
ljmp
mov
adc
adc
or
or
xchg
jne
aas
test
mov
fmull
cmpsb
popa
cmp
xchg
xor
mov
lods
in
ret
cwtl
add
insl
jno
dec
outsl
mov
jne
loopne
popf
or
mov
cli
clc
pop
hlt
daa
fnstcw
adc
call
enter
fdiv
xchg
sbb
lds
xchg
sbbl
std
and
ret
mov
inc
test
mov
sub
mov
fucomip
mov
inc
push
shlb
mov
loope
and
sub
cmp
xor
xchg
mov
das
mov
xchg
stos
dec
in
push
inc
seto
sti
push
mov
add
mul
and
loope
dec
xchg
push
movsl
mov
add
fs
aam
push
jnp
xor
cmpsl
in
movsb
mov
roll
push
sub
icebp
insl
xor
fwait
addr16
repz
popa
aam
pop
xchg
cs
mov
ja
shlb
les
xchg
jne
inc
outsl
jns
dec
jg
scas
adc
scas
xchg
or
test
divl
aam
push
push
stos
inc
roll
lea
repz
xor
xchg
mov
test
jnp
in
cmp
dec
pop
push
jnp
cmpsl
gs
iret
fmull
fildll
mov
leave
rclb
pushl
adc
pop
mov
and
stos
lret
and
jne
out
cmp
jmp
xchg
mov
push
cmp
inc
imul
cmp
cmc
mov
jmp
aad
and
jecxz
jbe,pn
sbb
cli
adc
mov
hlt
rol
aaa
lret
inc
test
hlt
into
inc
ret
pop
jne
aam
in
out
repz
lea
jns
and
fwait
sarl
out
mov
daa
and
jp
pop
inc
pushf
out
inc
orl
rorb
stos
enter
into
mov
dec
aad
jno
lret
scas
add
rcl
xchg
xchg
adc
jg
mov
mov
lock
fldenv
andb
push
inc
and
cmpsb
xor
jle
cmp
divb
mov
pop
lods
pop
xor
imul
adc
aam
arpl
js
sub
pop
cld
jl
nop
jmp
or
jge
sub
enter
cwtl
dec
jle
repz
mov
test
xlat
addr16
push
les
adc
mov
out
dec
jns
dec
inc
and
out
mov
sahf
shrb
lea
push
xchg
mov
adc
lahf
fldl
mov
xchg
mov
sbb
or
mov
and
mov
adc
lds
sub
int3
dec
loop
inc
lcall
sub
pop
dec
sarl
fs
lahf
pop
push
andl
fiaddl
push
jns
stc
xchg
xor
mov
loop
sbb
and
xchg
rol
in
xor
mov
cwtl
xor
scas
scas
and
nop
je
in
ss
dec
mov
rcrb
or
sbb
inc
inc
sbb
push
jb
jno
pop
out
enter
bound
in
cmp
jecxz
scas
loope
stos
test
mov
sbb
adc
mov
int
and
fs
ljmp
iret
mov
jl
mov
fldcw
xchg
or
pop
push
cmp
fisubrs
aad
add
fisttpl
xorl
popf
cmp
jo
dec
mov
mov
mov
push
aam
push
fidivl
aam
push
push
aaa
mov
sbb
enter
dec
insl
mov
xchg
ret
fdivs
mov
je
mov
das
sbb
je
int3
movsl
shlb
roll
leave
out
or
insb
jno
mov
pop
aaa
adc
stc
out
jecxz
xchg
xor
out
jge
xor
mov
ds
xchg
push
sbb
jo
xor
roll
cld
jae
cmp
aas
xchg
nop
inc
cmp
mov
wbinvd
xchg
jno
std
mov
addl
rcrb
arpl
lret
shll
inc
notb
mov
push
and
or
fnstsw
cli
arpl
jnp
xchg
lret
jg
rcll
adc
mov
jmp
cmp
dec
addr16
inc
sub
pop
inc
out
xor
pop
add
hlt
xchg
pop
daa
in
je
pop
sbbl
push
sbb
sbb
out
jge
imul
scas
shlb
mov
mov
fldenv
dec
ds
std
popf
and
push
mov
rorb
xlat
cmp
mov
fdivr
test
jne
sbb
and
repnz
fimull
push
movsb
popa
jne
add
push
sbb
ret
inc
cmp
sti
jnp
lods
aaa
or
hlt
adc
jg
inc
push
pop
jge
rolb
jge
mov
imul
stos
push
dec
mov
stos
mov
psubw
lds
dec
outsl
aam
lahf
lea
ret
jb
or
mov
sbb
int
repz
dec
pop
add
jno
outsb
add
imul
sahf
mov
and
cmp
lcall
inc
aam
ret
jp
fucom
lods
inc
repnz
loopne
mov
fwait
mov
cld
cmp
cmp
fwait
mov
dec
into
sbb
mov
jae
pop
add
mov
int
push
push
rcrb
push
ja
dec
push
clc
push
sub
mov
jo
push
inc
cmp
in
in
incb
sbb
mov
push
mov
in
mov
fidivrs
jns
outsl
jmp
adc
cmpsb
pop
jo
cmp
aaa
stos
push
pop
jae
lock
test
lods
lea
cmpsb
mov
mov
ret
mov
leave
adc
mov
sbb
nop
fidivs
sub
dec
mov
dec
ljmp
cmp
mov
adc
outsl
adc
pop
fwait
adc
sbb
loop
ljmp
sbb
lahf
xor
stos
lcall
mov
ret
xchg
divb
xchg
add
shlb
inc
adc
xchg
into
push
mov
xor
mov
jae
sub
dec
jae
push
or
xchg
mov
sbb
into
rcll
push
pop
into
movsl
popf
insl
fadd
clc
pop
cmp
xor
setl
mov
cmp
fiaddl
push
cmp
pop
fsub
sahf
popf
mov
jnp
sub
jns
jno
scas
ret
pop
pusha
sbb
loop
mov
lea
mov
popa
je
iret
mov
dec
cmp
dec
sahf
mov
test
pop
insl
sbb
test
push
push
cld
dec
or
nop
lock
js
stos
hlt
iret
mov
jmp
mov
mov
sbb
sti
stos
push
xor
cmc
lret
adc
rep
inc
jo
mov
mov
fsubr
jo
mov
mov
mov
cmp
push
fldt
pop
fmull
sahf
pop
jge
in
sub
or
add
dec
scas
mov
jg
pop
sub
inc
sbb
lock
add
fwait
gs
adc
testl
fbld
sub
lea
xchg
jno
push
cmpsb
mov
pusha
jl
jge
dec
xchg
in
popa
mov
pop
adc
mov
adc
mov
mov
xlat
xor
scas
xchg
pop
mov
mov
sar
sti
in
rclb
or
xor
jle
and
sbb
jp
sbb
sub
pop
xchg
cli
out
in
or
je
and
xchg
aas
push
cmpsb
cltd
adc
pop
stos
pop
or
pop
cmc
std
mov
mov
sarb
test
mov
stc
push
test
divl
push
gs
in
jo
inc
push
pop
mov
xor
xor
mov
fimuls
xchg
inc
hlt
lret
scas
pop
jmp
out
pop
dec
test
inc
sub
es
nop
fdiv
add
inc
aad
mov
insl
out
push
xor
daa
sub
mov
jle
out
pop
xchg
bound
movsl
in
repz
ss
into
stos
fcomps
aad
push
mov
cs
cmp
sbb
enter
fidivrl
and
repnz
sub
inc
rolb
dec
jge
sbb
or
add
or
lods
xchg
rorl
addr16
sub
inc
dec
shr
loopne
ret
lods
mov
inc
ds
je
dec
fwait
pop
xlat
clc
lds
js
jno
mov
movsl
and
mov
fcomps
fcmovnbe
cmp
call
jae
arpl
ret
pushf
mov
ss
int3
repnz
and
cmp
lea
push
jb
popa
mull
jmp
aad
out
push
sbb
sub
fistpl
aam
mov
and
mov
and
jge
pop
imul
and
xchg
aad
xchg
xlat
mov
pop
mov
push
lahf
imul
fwait
inc
in
or
sub
mov
cmp
or
in
insl
popa
inc
mov
je
mov
xchg
mov
cmp
js
data16
mov
scas
adc
dec
adc
dec
xor
sbb
inc
push
ds
ret
les
cmp
ret
inc
push
adc
sub
jbe
into
cmp
jecxz
test
pop
scas
mov
dec
mov
mov
mov
leave
mov
lods
aaa
pusha
int3
enter
adc
int3
mov
jno
or
pop
popa
add
clc
mov
xor
and
adcl
data16
adc
mov
sub
dec
mov
xchg
fldt
sbb
jo
xchg
add
repnz
pop
jbe
and
shll
push
test
mov
jae
or
inc
roll
scas
pop
in
or
fisttpl
mov
jge
movsl
insl
dec
xchg
icebp
sarb
adc
push
dec
lret
ss
mov
inc
cmpl
js
jecxz
mov
mov
cli
in
test
hlt
adc
xchg
mov
js
jl
pop
cmp
aaa
lcall
sbb
mov
mov
dec
pop
jo
add
sarl
pop
cwtl
inc
clc
dec
fsts
icebp
call
xchg
aad
inc
jns
add
or
call
mov
and
jmp
shll
out
or
add
fwait
jp
pushf
mov
popf
and
jbe
cs
outsb
or
fs
or
push
jns
call
pop
jg
scas
adc
daa
shlb
lcall
cmc
repnz
inc
lods
cmp
pop
jmp
and
fistps
test
in
mov
int
sbb
add
sub
scas
adc
pop
aad
sub
sub
int
aam
dec
pop
subb
cmp
dec
jge
lock
pushf
lret
arpl
in
mov
popa
xchg
and
fcoms
aam
iret
lods
jl
mov
sub
and
ret
ljmp
rclb
jmp
or
lcall
mov
jnp
adc
call
ja
sbb
xor
jnp
mov
dec
cld
bound
mov
stc
mov
and
pop
icebp
or
dec
dec
ret
test
les
jbe
incb
pop
dec
cwtl
mov
add
lret
and
in
mov
fsubrs
cltd
mov
or
lcall
sbb
lcall
add
xchg
outsb
mov
mov
sub
adc
cmc
jecxz
dec
inc
lcall
push
mov
mov
ja
sbb
sub
test
loopne
pop
push
insl
pop
sti
stc
imul
xchg
in
add
sub
fists
cmc
xchg
es
push
into
cwtl
mov
dec
and
add
push
insb
divl
adcl
sbb
add
or
mov
jb
xor
mov
test
arpl
or
xchg
mov
push
cmp
jnp
mov
loop
mov
into
popa
pushf
das
in
lret
cmpsl
mov
xchg
cs
das
xor
add
pop
push
dec
enter
add
into
subb
dec
mov
hlt
loop
xchg
sbb
jns
mov
jnp
add
sbb
add
mov
add
inc
dec
std
rorb
ljmp
call
call
jb
xor
mov
dec
xlat
outsl
and
and
stos
jnp
pop
cmp
push
jmp
test
sahf
mov
loop
ss
and
lret
mov
in
or
mov
jge
inc
je
cmc
jb
sub
and
or
loope
pop
cmc
dec
lods
sbb
imul
fwait
pop
mov
sub
les
cmpsl
pusha
sub
or
sub
fcoml
int3
sarb
xor
add
je
in
insl
sub
popf
lret
movsl
jle
or
sbbl
int3
mov
lcall
dec
je
or
ret
test
xchg
sub
mov
adc
js
loopne
fwait
sub
fistl
xlat
sbb
mov
sub
push
fistl
push
or
adc
lret
lock
aam
cmp
sbb
pop
shlb
dec
dec
movsl
ret
cmp
jno
in
fmull
inc
add
loopne
mov
mov
mov
mov
pushf
push
lods
sahf
sbb
jecxz
into
aad
sbb
mov
xchg
mov
xchg
pusha
mov
pop
mov
cmpsl
add
and
mov
pop
test
dec
cmp
negl
pop
arpl
pop
out
int
mov
ds
push
mov
push
imul
jnp
and
cmpsb
popf
and
ret
pop
lret
mov
cmpsb
scas
sub
push
sbb
jge
mov
or
add
insl
mov
test
jmp
xchg
add
pop
push
lods
pop
lea
cmovo
lret
dec
adc
xor
push
mov
jge
nop
shlb
and
ljmp
xchg
fstps
cli
inc
sbb
dec
dec
mov
and
dec
xchg
fs
add
popa
orl
dec
sbb
adc
aad
mov
cmp
lcall
jp
faddl
stos
xchg
in
inc
adc
inc
enter
adc
pop
adc
ret
loope
aam
imul
stos
dec
mov
adcb
fidivrs
mov
pop
jns
sbb
lods
mov
and
push
inc
loopne
sahf
adc
pushf
dec
sub
and
adc
xorb
fcom
scas
fwait
cmp
push
sub
inc
pop
ja
jl
mul
lret
add
cmpsb
xchg
rol
jmp
aad
rclb
fiaddl
dec
sub
loopne
js
sbb
aaa
ljmp
inc
fs
int3
int3
nop
push
rcrl
rclb
cmpsb
inc
shl
in
mov
sbbb
mov
xlat
stos
xchg
lods
ljmp
pop
roll
mov
mov
inc
mov
les
fsubrs
add
lret
imul
push
mov
pop
mov
enter
or
test
out
fisttpl
cltd
jle
add
inc
out
test
divb
movl
mov
loop
sub
mov
pushf
jge
imul
in
mov
out
fcomps
in
stos
pop
mov
dec
mov
nop
dec
inc
pop
pop
ja
push
jb
cs
push
icebp
cwtl
mov
fwait
dec
cmpl
add
fmulp
inc
aad
inc
mov
or
jl
dec
ja
pop
dec
xchg
pusha
sub
in
adc
daa
in
mov
adc
and
cmp
popf
shrb
jmp
sbb
and
inc
subb
pop
lock
jle
pop
inc
push
movsb
fdivrs
push
lock
mov
mov
insb
push
out
lods
mov
inc
mov
repnz
jnp
repz
into
mov
roll
arpl
dec
and
jp
ljmp
gs
xchg
cmp
loope
test
pop
sub
add
incb
outsl
rcll
jp
iret
sbb
fisttps
scas
fildll
fiaddl
cli
mov
and
pop
mov
movsl
dec
and
push
loop
fidivrl
mov
into
aam
add
pop
sbb
push
loopne
test
fisttps
lcall
int
xor
cmp
pop
lds
decl
push
dec
imul
or
inc
mov
pushf
sahf
adc
popl
in
icebp
scas
movsb
cmp
jae
out
sub
adc
pop
iret
xchg
lods
add
and
in
jns
js
lahf
stc
push
mov
add
imul
and
mov
es
lahf
pop
sub
je
or
dec
adc
test
sub
iret
add
sub
jb
je
mov
ja
and
loop
dec
rorl
loopne
popa
mov
pop
cmp
mov
bound
and
jne
sbb
icebp
sbb
ds
pop
inc
out
adc
je
mov
sbb
into
cmpsl
push
mov
add
lods
add
das
scas
inc
test
mov
fs
ret
jnp
jp
outsl
imul
mov
mov
jae
cmp
cmp
movsl
repnz
mov
cs
jle
std
jmp
notl
push
pop
mov
sbb
pop
adc
out
lock
pusha
mov
or
add
jl
rolb
call
xor
jns
sbb
pop
clc
je
movsb
push
push
lods
inc
in
decb
add
in
fsubrs
ljmp
int3
jmp
or
xor
pop
insb
mov
cmp
dec
test
int
sub
add
enter
or
rcl
stc
sbb
lock
loop
aam
xchg
leave
push
xor
imul
stos
data16
in
push
jns
xchg
fcmovnb
mov
jae
lsl
packsswb
cs
arpl
icebp
mov
cmp
mov
jmp
scas
orl
fsubr
add
enter
call
or
inc
mov
pop
adc
mov
icebp
leave
dec
lock
or
scas
dec
push
addr16
sub
fistpl
mov
fwait
xor
or
push
cmpsl
xlat
push
jmp
sub
xor
or
divl
les
add
enter
insl
push
imul
stos
pop
push
leave
int
nop
pop
sbb
ret
inc
and
and
jecxz
inc
sbb
dec
stc
stos
pop
pop
inc
das
sbbb
cmpsb
adc
bswap
push
xchg
mov
and
and
insb
jl
push
cltd
add
push
jp
xchg
inc
stc
and
mov
insb
xor
dec
sbb
divb
ficompl
enter
out
sarl
push
add
pusha
adc
mov
xorl
pop
xchg
mov
sub
sbb
mov
xlat
xor
adcb
push
pushf
test
fwait
bound
pop
jbe
pusha
rorl
mov
jp
add
mov
test
sti
and
shll
inc
les
cmpl
out
inc
dec
pop
pop
inc
mov
push
gs
in
xchg
jmp
xor
rcl
xor
sub
mov
mov
cmp
fucom
mov
push
xchg
mov
mov
mov
std
test
mov
repz
mov
jns,pn
repnz
stc
sub
lods
cli
lods
movsb
sbb
mov
dec
sub
pushf
mov
or
aad
jle
mov
pop
dec
mov
sub
push
out
adc
inc
fisttpll
xchg
jmp
or
cmc
scas
cld
leave
sbb
ss
lret
stc
mov
mov
pop
dec
mov
bound
adc
jmp
sbb
dec
and
lea
push
mov
loopne
mov
mov
imul
test
push
repnz
mov
inc
mov
lret
cmp
mov
mov
mov
lods
push
jb
es
add
bound
lahf
les
push
add
xchg
mov
nop
cmp
shr
jb
xlat
stc
repz
and
jbe
adc
push
sub
ds
mov
lret
xor
push
xor
daa
mov
fs
fstpt
repz
test
jecxz
cmp
adc
cmp
ror
sahf
push
sub
in
push
mov
mov
pop
xor
xchg
add
jb
dec
ss
aaa
stos
clc
mov
push
pop
stos
dec
or
fstpl
scas
imul
pusha
enter
gs
dec
cmp
orps
cwtl
jle
rorl
pop
sbb
call
pop
ljmp
or
cmp
andb
jle
aam
jl
cwtl
cmpsb
out
and
jae
xor
mov
dec
jg,pt
push
mov
daa
mov
out
in
inc
int
ljmp
sub
pop
imul
imul
push
addr16
sbb
ret
adc
inc
dec
mov
test
or
adc
fimuls
mov
xchg
pop
lods
adc
and
lahf
cmpsl
nop
scas
push
lock
cld
mov
mov
add
and
lcall
push
outsl
xchg
and
in
push
xchg
lahf
jp
add
sbb
adc
imul
popf
pushf
add
and
push
not
push
mov
bound
pop
imul
jae
std
filds
ds
push
mov
negl
mov
xor
lods
cltd
add
lea
mov
adc
in
sbb
mov
stos
push
cvtps2pi
xchg
push
inc
mov
inc
lea
push
mov
iret
inc
insl
cwtl
lock
adc
outsl
lea
int3
push
mov
fstp
clc
dec
mov
popa
arpl
xchg
jmp
lds
jmp
or
push
sub
fidivs
pop
ret
jp
push
out
insb
and
and
andb
sarb
push
dec
test
dec
clc
sbbb
and
mov
shll
dec
adc
ja
sub
fs
add
pop
js
mov
ficomps
lods
adc
cvtpi2ps
hlt
std
pop
xchg
sbb
negl
out
pop
or
jg
add
test
push
lea
adc
sbb
mov
out
jno
sbb
movsl
dec
xchg
sub
or
cmp
sti
mov
enter
pop
cmp
or
push
xchg
or
movsl
addb
xor
xchg
xchg
shlb
dec
ret
dec
jl
push
xor
sbb
adc
ficompl
in
sbb
andb
sbb
cs
or
testb
mov
cmovl
cli
imul
imul
adc
pop
pop
mov
cmpsl
loopne
push
pop
fildl
xor
mov
dec
repnz
pop
and
aas
clc
outsb
out
mov
rcrl
es
sub
inc
ret
and
lods
in
nop
arpl
xor
xchg
fisubrl
loopne
dec
shlb
sbb
mov
jg
sbb
and
rolb
repnz
les
rcr
push
sub
xor
adc
mov
lds
push
mov
push
cld
and
xor
mov
pop
sub
arpl
mov
sbb
je
push
push
dec
popf
iret
push
ljmp
push
mov
clc
jg
movsl
sbb
int3
mov
fidivrl
mov
mov
xor
ja
rol
xchg
ret
push
jb
cmp
test
push
mov
loope
imul
fnstsw
fwait
aad
fidivrl
push
rcrb
or
xor
add
sub
dec
sub
and
jmp
jmp
and
pop
jmp
rorb
arpl
std
nop
mov
or
mov
movsb
ss
mov
pop
xchg
or
mov
jae
outsb
js
or
jle
pop
push
push
mov
or
icebp
stos
xchg
dec
cmp
xchg
adc
repnz
pop
iret
mov
xor
test
out
int
push
out
xchg
imulb
in
jp
dec
cmpsb
jecxz
test
and
mov
jl
jne
aam
mov
ret
mov
mov
xchg
call
inc
loopne
divl
loop
add
lods
lcall
test
pusha
enter
adc
pop
cmpsl
push
adc
test
adc
add
inc
cmp
negl
andb
cmp
mov
je
pop
out
jno
leave
push
jle
jecxz
les
pop
in
xchg
lods
js
and
jp
fnstsw
in
btsl
aam
or
ret
lods
pop
ljmp
subb
aad
out
cli
bound
shll
cltd
loop
out
lret
movsl
dec
js
dec
out
out
scas
lea
push
sub
cmp
jnp
enter
mov
inc
lret
cmp
mov
ja
fcompl
popf
xor
mov
adc
movsl
xchg
add
push
enter
mov
pop
stos
stos
andl
dec
shl
xchg
and
xchg
std
xchg
icebp
dec
cmpsl
xor
out
xchg
mov
xchg
pusha
mov
push
icebp
subl
dec
dec
sub
add
jmp
stc
sub
aad
test
sarb
loope
loope
enter
shlb
clc
ljmp
push
and
pop
mov
fisubs
jb
add
push
les
mov
cmpsl
pop
repz
or
insl
sub
leave
aaa
aad
adc
lds
lret
inc
xlat
das
pop
push
xchg
push
pop
push
dec
mov
cmp
es
push
jge
adc
jl
lock
xchg
and
jmp
mov
bound
dec
xor
out
inc
lea
scas
jl
shrb
in
cmp
and
or
add
repnz
xchg
fisttpll
xor
dec
testl
mov
lock
or
aad
fcmovnu
popa
jmp
in
out
call
jmp
add
fnstenv
sti
jno
cmp
stos
test
das
lods
push
sbb
pushf
sbb
cmpsl
adc
adc
push
mov
mov
shrb
es
outsb
dec
xchg
adc
lcall
or
fisubrl
dec
lret
dec
pushf
push
shl
mov
in
and
into
jb
cld
mov
adc
popf
add
xchg
dec
xor
enter
fsubs
adc
jg
or
stc
out
scas
sub
lahf
adc
xor
push
cs
popf
sahf
inc
shrb
iret
add
outsl
mov
jo
adc
and
xor
insb
and
sar
add
repz
pusha
xlat
add
sub
or
add
clc
mov
repnz
cmp
xor
inc
adc
jg
sbb
cmp
insb
testl
fwait
out
std
push
gs
adc
mov
pop
iret
fcom
dec
jge
mov
jecxz
mov
pop
adcb
fstpl
outsb
sarb
inc
lahf
pop
and
and
lahf
clc
xchg
hlt
ret
daa
dec
popa
push
sahf
push
push
shl
es
mov
mov
loope
dec
mov
pusha
lods
mov
or
adc
or
jp
inc
repnz
rorb
ret
xlat
dec
das
mov
xlat
jecxz
es
aam
fiaddl
outsl
push
rcr
jl
lret
out
inc
mov
xor
add
sbb
stos
inc
jb
outsb
push
cs
lods
imul
fisubrl
aaa
add
fadds
push
inc
lds
mov
in
mov
rcrl
cmp
inc
inc
jbe
loope
add
ja
shll
imul
jne
dec
iret
imul
and
lea
fidivs
aaa
push
sarl
push
outsl
subps
cmp
test
addr16
dec
push
sub
add
cld
popf
cld
mov
aam
fnstcw
cmp
bound
stc
jnp
adc
xchg
mov
scas
fcmovb
pop
cmp
jae
into
jbe
scas
mov
mov
add
mov
int
mov
or
out
iret
in
lahf
cmc
add
mov
lock
xchg
je
inc
dec
pop
cli
lret
in
sbb
xchg
sarl
shlb
mov
inc
or
fstpl
or
mov
jp
add
pop
insb
out
mov
xchg
push
xchg
cwtl
mov
insl
add
fcmovnu
push
cwtl
push
fwait
lds
xchg
mov
xor
aam
ret
movsb
xlat
mov
testl
push
push
out
out
add
add
pop
out
xor
sub
mov
mov
mov
loope
sbb
sbb
mov
push
daa
jns
in
xchg
dec
xchg
lret
push
test
filds
rcll
adc
jl
out
and
xchg
sub
dec
mov
xrelease
fstl
mov
int3
cli
mov
sti
sbb
in
push
fildll
and
aam
std
sbb
xchg
xor
xchg
loopne
lcall
jmp
je
dec
int3
cmp
cmp
into
adc
add
push
mov
xchg
in
daa
outsb
push
xchg
dec
mov
sub
nop
lods
push
inc
sub
mov
inc
aam
xor
and
or
test
add
add
or
std
or
fisttpll
xchg
out
inc
mov
and
cmpl
fs
xchg
rcr
arpl
rolb
icebp
sub
mov
mov
enter
pop
cld
into
cmpsb
lods
and
xchg
dec
dec
xchg
dec
leave
inc
lret
gs
or
mov
pop
xor
push
sar
je
daa
mov
push
pop
cltd
pop
das
fwait
bound
sbb
push
aaa
sub
dec
je
aaa
clc
xor
jg
add
xor
inc
sub
mov
loopne
jnp
out
stos
or
outsl
push
add
imul
sbbb
fwait
and
sub
iret
lods
jns
fildll
cmpb
jne
es
dec
outsl
out
in
fisubl
fcomps
insl
std
dec
dec
push
inc
pusha
dec
mov
and
sub
xor
mov
cltd
cmpsl
sub
pop
inc
mov
aam
aaa
jns
test
shl
or
push
jns
sbbl
add
fildl
mov
push
cld
adc
pusha
pop
xorb
cmp
bound
jle
in
xor
jae
jle
aam
mov
addr16
int
in
add
ret
and
fs
shlw
mov
xlat
lret
ficompl
incl
lret
sub
outsb
adc
bound
and
in
pop
dec
mov
jae
stos
jmp
push
les
ret
std
std
popf
pop
or
push
aaa
or
push
jnp
cltd
adc
mov
shrl
sbb
shll
dec
std
pop
icebp
in
ret
ror
das
call
stos
daa
sub
mov
mov
int
mov
aad
rcrb
pop
test
sti
outsl
adc
lret
mov
xchg
in
mov
inc
sbb
xor
repz
inc
inc
mov
mov
adc
roll
bound
cs
jnp
sub
lock
xchg
jp
lret
cld
inc
outsl
pop
ja
add
push
mov
sbb
pushf
aad
in
cmp
mov
repnz
jl
nop
adcb
push
jbe
add
sbb
pop
lahf
imul
add
loopne
test
pop
pop
loopne
dec
cmp
pop
mov
adc
cltd
cmp
fadds
push
adc
lods
movsb
add
loop
or
mov
xchg
add
add
xchg
pop
sti
cld
in
jns
cs
pop
rolb
xchg
or
mov
adc
jmp
jnp
mov
or
xor
push
daa
jo
sahf
insb
mov
push
push
scas
push
inc
push
inc
xchg
hlt
ljmp
cli
andb
fldcw
flds
xor
push
adc
imul
inc
repz
in
push
and
xchg
push
jle
jns
fcmovu
cwtl
inc
sbb
xor
in
cs
sub
push
or
aad
hlt
add
jns
xchg
add
or
shrb
cmp
pusha
fstps
or
jecxz
mov
decl
iret
and
or
outsl
inc
dec
xchg
into
movsb
xor
rorb
nop
sub
jae
lea
sti
sub
sbb
jns
lret
add
dec
fwait
xchg
fwait
mov
dec
mov
into
movb
inc
cmp
movsl
lea
addr16
std
jb
jo
xor
cs
jle
lahf
add
mov
cmpsb
fdivrs
cmp
fistpll
clc
mov
fstps
jno
mov
arpl
mov
popf
sub
adc
sbb
loop
andb
out
int
mov
repnz
mov
push
xor
mov
fimuls
cmp
ljmp
xor
jnp
loope
hlt
add
cmc
dec
stc
push
push
out
cmp
mulb
pop
xor
lods
inc
mov
sbb
inc
jecxz
lea
xchg
insb
push
aad
push
lahf
adc
mov
push
aas
shrb
aas
pop
or
ds
fldt
mov
push
pushf
mov
out
fildll
lret
inc
jo
dec
lock
xchg
aaa
data16
mov
mov
sti
sbb
fnsave
cmpsb
inc
roll
push
pop
sbb
mov
ljmp
stc
shlb
aam
cltd
and
mov
shll
gs
or
add
rorb
fisubl
mov
and
cmp
test
push
and
iret
int
pop
add
and
into
addl
mov
cwtl
jp
and
gs
lock
ds
ret
xor
das
lret
push
cmp
mov
out
das
mov
movsb
xchg
jns
push
xor
mov
ljmp
mov
imul
adc
iret
sahf
mov
dec
aam
mov
ss
dec
call
fimuls
pop
xor
fdivs
andl
xor
daa
push
jb
push
mov
adc
inc
dec
mov
cmp
push
pop
adc
mov
xchg
sahf
jmp
mov
or
repz
sub
pop
fucompp
mov
xchg
dec
inc
imul
jno
test
push
das
mov
das
lock
es
pop
push
mov
push
xor
addr16
dec
jnp
xchg
cmp
arpl
cmp
cmc
push
rolb
mov
enter
xchg
arpl
adc
push
push
out
pop
fmul
push
lea
xchg
xor
scas
cmp
sub
jnp
jg
xchg
dec
ret
cld
dec
jp
es
cmp
icebp
stos
ja
jno
mov
adc
xchg
das
xor
mov
push
test
jb
imul
push
inc
xor
ss
mov
daa
and
and
jns
in
sub
fwait
repz
dec
iret
fildll
jmp
and
ffree
jmp
sarl
fmull
sub
sbb
test
jg
xchg
inc
xlat
lds
sti
jnp
xchg
jo
in
out
js
xor
popf
clc
aam
sahf
dec
pusha
pop
je
stos
mov
incb
sub
out
mov
movsb
sbb
loopne
inc
xchg
sahf
jl
xlat
xchg
popf
sbb
jmp
inc
leave
popa
stc
push
ret
mov
test
cltd
pop
lret
and
lret
popl
xchg
or
add
jp
sti
in
inc
ljmp
or
popf
ret
push
adc
mov
push
inc
jnp
std
pop
call
xorb
dec
iret
insb
ds
rcrb
adc
pop
push
mov
cmpl
call
pop
and
push
imul
mov
inc
stc
push
add
insb
popf
inc
jnp
cwtl
aaa
push
das
or
pop
sarl
jge
aas
pop
jb
movsb
mov
call
jns
js
std
inc
stos
inc
test
insl
and
pop
inc
xor
bound
dec
lret
and
lea
es
cmp
nop
sub
xchg
pop
or
popa
mov
fcmovu
xor
jns
pusha
inc
cli
cld
or
out
int3
inc
jae
sub
sub
inc
or
mov
pop
in
cmpsl
enter
das
bound
js
mov
sbb
popf
mov
ljmp
fwait
sub
rcrb
adc
bnd
sbb
inc
loop
dec
xor
in
sbb
adc
mov
lods
cmp
adc
pushf
adc
jo
mulb
dec
pop
xchg
gs
int
cmovbe
int
add
test
add
dec
shlb
idiv
shll
inc
inc
in
les
mov
mov
jno
fstpl
xor
lret
fbld
dec
ds
lret
xchg
dec
cmpsb
daa
jge
mov
cli
aam
or
jmp
xchg
je
xchg
jo
cmp
add
sub
aad
and
push
push
enter
ret
fcmovnbe
repz
cvtdq2ps
mov
push
jbe
sub
out
les
xchg
push
fstpl
mov
out
cmpsl
xor
fwait
cwtl
adc
sub
out
push
daa
cmp
cld
add
stos
adc
or
popa
roll
sub
sbbb
popl
lods
out
push
or
mov
adc
aas
mov
jge
mov
pop
out
in
fildl
repz
add
iret
add
daa
outsb
mov
sbb
jnp
mov
fldenv
mov
cmpsl
jp
pop
call
mov
and
add
sti
test
aam
in
lods
ljmp
mov
lahf
es
cmpb
fbstp
mov
sbb
inc
adc
xchg
mov
dec
sbb
mov
negl
mov
repz
jle
push
cli
mov
xchg
mov
js
sbb
lods
xchg
push
sub
lret
sub
inc
ret
mov
mov
pop
iret
add
cmpsl
sub
push
xlat
jnp
dec
scas
add
cmp
mov
mov
rclb
mov
dec
add
pop
loop
jmp
js
insl
pop
icebp
and
movsb
push
fs
adc
test
in
pop
inc
stos
lret
sbb
add
or
pop
mov
test
daa
cmp
inc
jmp
dec
mov
xchg
push
lds
cmpsb
xchg
push
inc
addr16
sahf
movsb
out
lret
push
jne
aad
testb
cmp
mov
mov
bound
cltd
push
or
jno
ret
test
mov
cmp
and
daa
or
pop
idivl
mov
pop
cmpsl
ja
rorl
or
xchg
es
fwait
sbb
or
cmp
pop
aam
or
add
or
aad
fs
sbb
scas
pop
or
mov
insl
jp
push
and
sti
lea
mov
je
sbb
pop
movsl
mov
jbe
loope
mov
xor
lea
int3
into
test
cmp
dec
hlt
inc
cli
sbb
xchg
cmp
lahf
sbb
sbb
lock
mov
fmull
ds
cltd
dec
int3
addr16
popa
add
mov
icebp
imul
xchg
out
add
push
jbe
mov
mov
fcomp
rdpmc
out
and
mov
jns
lock
mov
out
js
cmp
mov
xor
cltd
loopne
jle
adc
mov
in
inc
daa
inc
and
repnz
in
pusha
mov
arpl
dec
rcll
imul
xchg
or
adc
push
mov
ret
and
idiv
xchg
sub
cmp
cmp
jae
jns
arpl
imul
leave
cmpb
jmp
xchg
pop
lret
in
jb
push
fwait
sbb
roll
push
inc
jae
sub
adc
fcmovnb
pop
mov
dec
adc
cmp
pop
jno
xor
sar
rclb
in
movsb
lret
andl
dec
add
xor
and
movsb
or
jnp
push
sbb
gs
in
xchg
jae
pop
jp
mov
cmpsl
mov
rolb
iret
dec
mov
mov
or
sti
dec
iret
jl
sub
mov
and
jge
and
mov
fistpl
cmp
sbbl
mov
mov
dec
jle
je
pop
add
pop
out
decl
jnp
or
pop
mov
adc
int
or
push
pop
mov
out
add
mov
lods
cmp
mov
jle
lahf
int3
sbb
sahf
add
test
nop
or
fstpt
or
sti
cmp
adcb
pop
add
test
iret
dec
movb
mov
je
fcmovbe
sub
add
inc
jecxz
inc
mov
mov
sub
lea
lahf
dec
cld
fidivrl
or
xlat
fsubrl
dec
test
xor
in
js
movsl
adc
cmp
test
xchg
push
cmpsb
xchg
rol
mov
movsb
add
hlt
mov
insb
lret
pushf
idivb
icebp
mov
mov
xor
addl
add
loopne
add
push
or
fwait
lret
filds
mov
xchg
aad
inc
inc
sub
movb
in
push
mov
cmpsb
ret
fidivl
add
inc
ds
inc
pop
inc
pop
mov
lods
fdivs
push
hlt
and
jns
push
adc
push
xor
ficomps
fldcw
push
les
or
xor
dec
ds
gs
pop
pop
add
push
js
push
adc
loope
xchg
scas
xchg
repz
mov
pop
in
or
pusha
xchg
loop
es
fildl
push
imul
mov
inc
jbe
dec
dec
sbb
std
jo
inc
lret
int
jb
inc
fidivrl
pop
mov
test
orl
push
into
xor
imul
push
pop
push
mov
pop
pop
lcall
mov
mov
pop
push
jae,pn
inc
rclb
movsl
aaa
stos
xor
popf
dec
fadds
push
rorb
int
push
xor
lock
adc
mov
in
dec
test
lahf
test
ds
push
aad
and
jecxz
pop
adc
scas
out
clc
xor
sub
daa
or
push
mov
sti
leave
aas
imul
test
push
aad
mov
iret
clc
lahf
xchg
inc
imul
xchg
idivb
pop
fiadds
push
cwtl
jb
mov
xor
sti
jmp
xor
cs
stos
cmp
adc
sub
sarl
mov
sub
imul
mov
and
sub
push
ds
pop
arpl
pop
jae
pop
inc
icebp
cld
push
push
repnz
push
add
movb
nop
dec
out
lea
push
cmp
ja
adc
push
test
nop
jge
sub
xchg
xchg
es
arpl
adcb
repnz
push
mov
popf
push
inc
xorl
adc
cmc
rcrl
rcll
mov
imul
cmp
pop
nop
nop
or
imul
dec
jno
test
sarb
test
pop
enter
xorb
outsb
pop
jle
dec
and
jmp
addb
or
jnp
in
popa
jno
notb
in
pop
mov
les
jno
fcompl
jge
lods
test
cmp
dec
and
mov
sbb
push
icebp
mov
imul
std
jb
ljmp
cmpsb
inc
shrl
enter
sbb
mov
int
subb
or
mov
jp
int
mov
shr
test
jns
mov
cmpb
je
jge
cmpsb
clc
sub
lea
inc
mov
sub
leave
jp
jnp
push
js
fcmove
movsl
pop
dec
dec
pusha
test
inc
aam
jns
add
or
sahf
xchg
call
mov
sub
mov
popf
lahf
loopne
pop
cwtl
popf
leave
and
mov
sbbl
inc
stos
pop
adc
mov
cs
outsl
fwait
or
fadds
stos
hlt
fidivl
hlt
or
jo
mov
jge
je
jmp
jmp
push
jecxz
mov
and
mov
and
cmp
ds
pop
repnz
or
lahf
sub
or
sbb
movsb
cli
sub
outsl
and
dec
pop
inc
sub
addl
loop
cmp
sub
and
mov
pop
mov
popf
jg
lret
and
add
lea
sub
icebp
adc
out
orb
xor
pop
sbb
lcall
ljmp
mov
sbb
or
push
stc
loope
cmp
and
and
into
add
fldcw
ljmp
mov
jbe
push
arpl
or
xchg
stos
adc
adc
or
fs
scas
sub
mov
pop
aaa
scas
insb
mov
add
sub
fsubl
cmp
icebp
popf
addb
std
pop
push
and
insb
test
mov
loop
jg
stos
fwait
ss
in
mov
jg
pop
dec
cltd
cmpsl
dec
jo
jge
enter
mov
mull
cmp
ret
fbld
xor
sub
push
fildll
mov
sbb
adc
fists
ss
pop
and
mov
int3
push
outsl
xchg
jae
std
and
pop
push
and
push
addr16
or
lret
insb
pop
sbbb
ret
scas
rclb
jae
add
xchg
aas
pop
jns
adc
cmpsb
fucomip
inc
in
xchg
arpl
push
pop
movsb
out
or
sub
cs
out
or
loope
pop
jne
mov
cmp
out
mov
xchg
adc
mov
xor
es
mov
lcall
pop
add
outsb
jmp
imul
mov
add
cmpsl
scas
daa
fnstenv
aas
mov
or
mov
jle
or
out
shlb
sbb
adc
jae
hlt
fwait
stc
pushf
out
loope
mov
cmc
call
jg
fsts
cwtl
ret
and
lods
jl
sub
mov
adcl
and
enter
inc
push
cli
adc
fbstp
sub
cltd
push
hlt
adc
cmc
test
xchg
lahf
pop
nop
mov
sub
rcl
in
pop
lea
and
cltd
popa
cli
pop
adc
and
lods
push
pop
ds
cmp
cmp
std
xchg
pop
in
sbb
inc
pop
fidivrl
daa
out
les
push
pop
xchg
pop
mov
dec
push
cmpsb
aad
mov
pusha
js
push
sub
jp
rcl
adc
cmpsl
rcrl
jnp
xor
fldl
shl
adc
repz
push
test
nop
mov
lods
push
in
stc
adc
int3
sub
jb
rorb
fnstsw
or
lods
clc
xchg
mov
or
jne
inc
sets
mov
xchg
insl
js
inc
inc
xor
xor
push
daa
lret
xchg
pusha
fs
mov
js
add
movsb
inc
lret
imul
mov
inc
fidivrs
dec
mov
shlb
adcl
sbb
xchg
mov
jmp
ja
aad
sub
cltd
int3
orb
out
pushf
jmp
jnp
cmp
add
popf
std
cwtl
decl
xchg
ja
xor
cmc
and
shll
mov
test
xchg
push
jbe
rolb
fistl
push
mov
scas
sarl
outsb
and
push
push
mov
stc
xchg
xor
jge
rcrb
mov
and
ja
xor
sarb
jg
stos
dec
push
iret
daa
test
iret
pop
inc
or
xor
and
int3
aam
movsl
xchg
and
loopne
into
cwtl
imul
fnstsw
ret
cmpsb
push
or
add
js
in
pop
mov
rolb
jp
add
and
bswap
jge
sti
into
out
mov
add
xchg
addr16
leave
js
add
cs
dec
xchg
insb
mov
ljmp
mov
pop
int
lds
mov
movsl
pusha
push
pop
mov
push
sub
cmp
imul
mov
mov
xor
cld
adc
jle
rorl
je
cs
mov
jns
je
cmp
into
vmovaps
in
cmp
test
or
outsb
xor
js
sarl
outsb
push
pop
imul
imul
std
ja
and
test
addr16
sub
cmp
mov
and
mov
not
cmp
jns
aas
push
arpl
lds
lea
pop
lods
in
xchg
in
push
push
aas
lock
xchg
mov
jno
fadds
lahf
xor
jle
cwtl
movsb
xchg
or
xchg
jle
loop
and
repz
adc
jg
cli
cmp
addb
inc
arpl
shll
and
test
das
test
cmpsb
scas
das
fs
lret
hlt
pop
xchg
push
mov
in
cmc
jno
push
or
lcall
enter
loope
loop
inc
stc
xlat
adc
mov
ss
adc
imull
sub
mov
xchg
or
in
mov
mov
icebp
repnz
pop
rcl
xlat
xchg
ja
cmp
loope
push
mov
addr16
add
pushf
dec
push
aam
aad
mov
cmp
out
dec
cmp
sbb
jns
outsb
ficompl
fmuls
ds
xor
jbe
imul
mov
xchg
jae
mov
fcoms
std
ljmp
sbb
hlt
push
jb
arpl
add
test
gs
push
cmpsl
fdivs
sbb
mov
push
mov
sub
scas
mov
insb
fcoml
push
push
or
add
loope
mov
pop
adc
call
out
pop
es
push
rclb
aad
call
push
sbb
or
add
jae
pop
push
cld
pop
imul
mov
cmp
add
jae
stos
addr16
sub
push
xor
and
mov
adc
imul
xor
xchg
stc
dec
je
xchg
rorb
mov
xchg
insl
xor
ficomps
je
sub
push
ljmp
loopne
sbb
xchg
lcall
lods
daa
dec
sbbb
xchg
in
pop
stos
sbb
pop
out
and
add
fistpl
jl
inc
mov
push
push
sbbb
xor
lret
stos
cmpsb
pop
xor
cli
cmp
icebp
leave
jnp
jmp
imul
clc
out
sbb
stc
and
add
or
mov
gs
dec
cmp
stc
dec
jge
jmp
dec
pushf
add
mov
mov
jo
lds
xchg
je
call
push
out
inc
xor
sub
rorl
push
mov
and
push
push
inc
add
xor
es
mov
daa
push
outsl
jo
pop
adc
bound
mov
rorl
sub
mov
lea
into
push
mov
sbb
movsl
cmpsl
mov
test
mov
jle
pop
jp
mov
jne
fs
sub
cmpsb
or
flds
and
xor
jp
xchg
and
iret
and
xchg
scas
ret
jno
outsl
adc
push
dec
xor
sahf
or
add
inc
nop
pop
dec
cmp
in
out
jmp
sub
jmp
mov
mov
dec
mov
cli
inc
out
add
dec
insl
xor
test
push
push
arpl
aad
adc
out
mov
push
xlat
mov
inc
push
adc
pop
pop
lods
repz
fmuls
test
or
imul
jl
iret
sub
cld
or
pop
les
push
mov
and
insb
insl
test
inc
mov
inc
sbb
add
or
push
push
push
add
adc
insl
in
cmp
mov
rcr
adc
aad
fwait
aad
ret
adc
fdiv
inc
lea
subb
cs
adc
mov
jne
jo
mov
cmp
lods
jle
lods
data16
and
lods
int3
rorl
pop
daa
in
lock
aam
mov
iret
push
test
push
outsl
xor
xchg
cmpb
jne
push
mov
gs
clc
fsubl
or
cmp
pop
aaa
aaa
inc
addr16
lahf
inc
sub
jle
loop
push
loope
sahf
iret
in
push
cmpsb
xchg
lock
push
imull
add
adc
or
adc
mov
shrb
test
fcoms
out
adc
ret
sbb
fildll
cmp
ficoms
sub
cmp
test
das
inc
fnstcw
mov
popa
mov
and
mov
cmc
in
das
xchg
cmc
sahf
push
loope
jge
dec
mov
adc
adc
enter
and
adc
addr16
in
cmp
mov
adc
test
or
xchg
mov
pusha
lcall
pop
add
mov
lretw
pop
xchg
lahf
fwait
adcb
jne
cmc
add
sub
push
and
or
mov
inc
jb
adc
jle
arpl
inc
call
imul
in
and
mov
xchg
xchg
mov
mov
ss
into
lcall
pop
and
inc
adc
ficompl
flds
les
jnp
jmp
mov
add
cmp
or
outsb
in
enter
mov
outsb
fisubrl
stos
rol
or
mov
inc
cltd
loop
pop
mov
cmpsb
cltd
pop
ljmp
xchg
repz
movsb
pop
inc
dec
in
iret
add
hlt
jecxz
aam
aas
cmc
and
pop
loope
icebp
push
dec
ss
mov
adc
mov
dec
cmpsl
xchg
or
xlat
jle
fisubrs
stos
sub
jns
shll
div
into
cmc
stos
gs
pop
xor
cmpl
push
movsb
dec
xor
lret
lods
ja
sbb
cmp
mov
es
xor
cltd
push
lret
and
adc
dec
or
xor
sbb
push
popf
cmc
ja
mov
popf
ljmp
mov
jo
pop
cmpsl
dec
lock
xor
mov
cmpsb
cwtl
aam
out
mov
das
inc
push
add
jp
push
adc
arpl
loope
sbb
mov
imul
or
pop
ret
cmp
or
test
pop
movsl
test
hlt
jae
xor
imulb
push
fwait
adc
int3
pop
jnp
inc
mov
push
test
insl
test
jno
xor
add
jle
pop
xor
adc
sbb
imul
sbb
cld
push
outsb
mov
cmp
xor
repz
cmpl
bound
outsl
dec
jnp
mov
push
mov
add
pusha
sub
inc
push
jmp
xchg
popa
dec
and
push
mov
mov
or
dec
aas
xchg
outsb
xlat
xchg
test
fimuls
xorps
lret
sub
lock
test
imul
rcrl
out
jne,pt
jge
cwtl
sbb
inc
inc
push
in
mov
pop
ret
pop
fildll
aas
push
jg
sub
adc
enter
adc
mov
pop
icebp
fdivrl
mov
cltd
and
test
dec
notb
pop
lock
fs
sbb
or
pop
aaa
adc
add
js
jne
push
xchg
jge
inc
and
pushf
inc
cmp
xchg
sub
sbb
add
dec
mov
adc
xor
cmc
mov
mov
pusha
ss
arpl
jo
enter
pop
cmp
scas
xor
inc
neg
pop
cmp
into
mov
mov
addr16
xchg
ljmp
adc
mov
or
icebp
cmpb
loopne
out
ds
cmpl
dec
out
and
inc
push
mov
repz
sub
gs
fisubrl
sbb
jecxz
inc
jmp
push
pop
cmp
sti
mov
popf
out
jno
cmpsl
and
ret
popl
out
enter
adc
scas
leave
icebp
cmpsl
push
push
push
in
or
ja
movsb
push
mov
pop
mov
cwtl
insb
sbbb
jmp
mov
jecxz
in
push
push
or
outsl
push
fstpt
jb
mov
mov
fcomip
mov
jecxz
fldl2e
cmpb
inc
push
leave
xlat
imul
xchg
cmp
sahf
jno
test
out
pop
mov
imul
mov
aad
lahf
das
sar
outsb
icebp
outsl
push
xchg
cmp
mov
in
or
aas
arpl
mov
ret
fdivr
jnp
jl
sub
js
push
popa
cmp
mov
popl
das
sbbb
sbb
aad
out
das
sbb
ljmp
cld
cwtl
push
enter
repz
xchg
and
xchg
jne
pop
loop
gs
sti
mov
lock
out
jno
imul
jg
xchg
fcompl
mov
aas
out
xor
xchg
dec
ljmp
and
mov
mov
scas
push
jp
mov
mov
mov
out
dec
adc
dec
out
sbb
or
movsb
fwait
mov
pushf
jae
sbb
jns
jbe
inc
test
out
sarb
adc
pop
dec
fld1
mov
add
lods
movsl
imul
pop
push
jmp
mov
inc
mov
incb
xor
xlat
fs
pushf
mov
push
int3
inc
in
fisubrs
mov
xchg
ret
cltd
loopne
or
inc
int
pop
sahf
js
insb
xor
mov
mov
je
push
divl
imul
push
adc
adc
in
sub
xchg
stc
aas
loop,pt
subb
jmp
xchg
test
add
aam
mov
inc
sub
or
aas
in
lahf
xchg
xchg
xchg
inc
lret
lds
mov
fisttpll
jmp
decb
std
xor
sbbl
add
es
push
sbb
add
jmp
xchg
nop
rcrb
aam
in
adc
sti
pop
jg
test
out
roll
push
jp
xor
push
mov
cmpsl
jl
test
cmpl
out
fisubrl
push
dec
push
aam
add
adc
jg
mov
in
fnclex
sbb
lock
sub
fiaddl
mov
jns
std
int3
imul
js
sub
lahf
mov
sti
jle
sbb
cmp
fadds
repnz
movsb
push
inc
lcall
jno
ds
cs
mov
jnp
adc
push
adc
lahf
sbb
push
jbe
mov
lds
std
imul
loopne
fisttps
dec
imulb
repnz
jns
pop
mov
jmp
mov
es
sbb
inc
or
jae
or
imul
add
out
dec
ret
pop
xchg
inc
loopne
js
daa
jp
lahf
cmpsb
addr16
fwait
int
lock
out
repnz
push
testb
pusha
inc
dec
mov
mov
pop
pop
ds
or
and
dec
inc
inc
and
mov
inc
push
ljmp
adc
xlat
idivb
cmp
jnp
pop
je
add
int
cli
jns
stc
das
loopne
inc
lods
xchg
adc
mov
pop
sub
inc
mov
scas
xchg
add
sub
jmp
inc
add
in
mov
stc
addb
aaa
ret
add
add
out
jg
orl
xchg
cmp
jmp
fcmovnu
xor
nop
fistps
fdivrs
movb
adc
cli
fucomip
mov
xor
pop
enter
mov
xchg
xchg
pop
mov
aam
cmp
aaa
mov
clc
sbb
stc
inc
push
std
outsl
aaa
adc
rorb
inc
repz
lea
enter
jbe
jge
insl
popf
and
and
mov
push
out
inc
xor
sbb
loope
fs
pop
fwait
cli
scas
cmp
rolb
daa
cld
inc
push
or
loop
pop
adc
out
cs
push
jmp
push
mov
push
iret
and
add
dec
subl
aaa
mov
lea
mov
inc
jl
cmpsb
xchg
adc
jmp
aaa
lea
jle
shr
jecxz
jb
sub
mov
ficoml
and
xchg
xor
or
lock
popf
int
cmp
mulb
jmp
cwtl
lcall
rorb
mov
mov
insb
imul
cs
xlat
divl
mov
jmp
mov
push
push
mov
fisubs
fucomp
rorb
pop
pop
stos
lods
add
add
add
push
or
int3
stc
cs
shl
in
jg
xor
shrb
mov
shlb
inc
cmpsb
insl
insl
popa
adc
xchg
xchg
cmp
pop
jmp
or
test
repz
sarl
mov
mov
into
add
xchg
cld
push
xor
adc
bound
xchg
xlat
lock
insl
mov
cmp
add
fisubl
jo
out
ljmp
addr16
mov
insb
bound
sbb
and
jno
xor
push
pop
repz
adc
add
in
cmp
lds
iret
push
xor
outsl
iret
cmp
sahf
fldl
ljmp
mov
cmpsl
movsl
les
in
fildll
or
movsl
mov
add
ret
xchg
dec
icebp
insb
jnp
jmp
test
sbb
xchg
shlb
sub
popf
outsl
into
mov
or
mov
cmp
aad
data16
dec
push
jecxz
mov
push
inc
push
xchg
pop
movsb
xor
sub
push
dec
ds
in
mov
add
mov
adc
sub
jno
cmpsl
mov
push
xchg
sbb
lods
cwtl
nop
push
rolb
mov
sub
rorb
push
aam
xchg
jno
in
movsl
pop
and
dec
cmpsb
jmp
sbb
test
aas
insl
lods
inc
sub
dec
and
and
jp
dec
fwait
enter
std
fwait
in
enter
incb
sbb
aad
movsb
das
inc
int
rorl
push
sti
and
ret
cli
inc
push
loope
jbe
rcrb
imul
jge
pop
mov
jne
lcall
xchg
and
push
jo
pushf
add
js
add
xor
jmp
push
ret
iret
jo
mov
pop
or
pop
pushf
loope
and
stos
sarl
pop
jecxz
dec
into
jp
pop
jl
sbb
repz
fsubrl
in
icebp
loopne
push
int3
push
call
insl
gs
repz
ret
loop
jl
lock
push
xor
pop
mov
lret
sbb
and
or
ljmp
fdiv
dec
shl
int
jae
repz
fucomip
adc
xchg
push
mov
cmp
cmp
pop
xchg
test
daa
sahf
fimull
rcll
cmc
xchg
repz
jg
pop
pop
pop
mov
mov
push
popa
js
cmp
and
and
inc
cmpl
or
push
enter
adc
shrd
mov
mov
subl
nop
mov
fadd
clc
sbb
push
fldcw
into
sbb
rclb
enter
adc
sbb
jb
xlat
mov
sbb
lock
insb
bound
fxch
in
cmp
fidivrs
push
lods
insl
gs
ja
daa
jecxz
cmp
cld
xchg
sahf
mov
push
clc
add
int
adc
push
cli
mov
fildl
cmp
mov
push
outsb
stos
sti
mov
inc
lahf
ret
xor
fwait
dec
cmp
xchg
xor
fsubl
psrlq
lds
jg
fiaddl
push
add
adc
nop
push
dec
sbb
dec
popa
lret
xor
push
xor
shrb
call
push
cld
loop
pop
jle
ret
inc
das
lea
mov
out
fisubl
test
cmp
sti
fistpl
pop
push
jp
xchg
add
and
sub
lret
mov
adc
shrl
pop
div
fs
repz
data16
pop
cwtl
xchg
in
xchg
subb
mov
cltd
add
leave
adc
dec
or
inc
test
push
mov
push
les
mov
fiadds
inc
mov
lret
in
xor
cwtl
and
pop
mov
dec
in
mov
jmp
leave
imul
in
sub
push
aad
lret
cld
cmp
jno
push
jecxz
in
js
call
je
mov
cltd
xor
fimuls
loope
sub
cmc
push
lea
testb
and
jmp
rcr
mov
or
push
or
lds
and
stos
pop
movsl
lahf
jbe
jmp
push
jge
mov
int3
or
idiv
out
arpl
jb
repz
jmp
cmp
fdivp
flds
fcoms
xchg
xchg
xchg
repnz
jbe
or
add
or
jae
cs
stos
inc
dec
mov
dec
iret
adc
xor
loope
test
xor
or
add
pop
fiadds
cmpsl
je
adc
pop
inc
pop
test
popa
fbld
ret
push
sahf
sub
lret
jge
dec
mov
ss
js
rcrl
cmpsb
enter
lret
pop
jbe
mov
pop
test
xor
je
in
addr16
fsub
push
jmp
jne
iret
xor
cld
jge
outsb
sub
fs
xor
and
mov
ljmp
enter
ret
push
pop
xchg
ficompl
mov
gs
jmp
jbe
shr
in
cld
mov
mulb
adc
fucomip
andl
adc
jnp
js
sbb
xchg
pop
loopne
jle
aad
rcl
sbb
iret
inc
or
sbb
and
or
dec
int
mov
test
cmpsl
jmp
add
adc
pop
lock
int3
stc
sub
fwait
push
inc
mov
lods
sbb
dec
out
xor
aas
xchg
or
cld
cmp
xchg
dec
popf
stc
mov
xor
movsb
lock
aam
dec
mov
pop
and
cmp
sarb
sub
adc
dec
jp
or
cmpsb
or
ja
and
xchg
fldln2
xor
mov
jne
sbb
mov
push
xor
mov
cmp
jbe
in
les
aam
and
push
imul
sub
aam
lds
ret
mov
dec
ljmp
mov
ret
out
outsl
mov
andb
lds
jnp
sub
xor
mov
mov
test
testb
dec
scas
xor
les
jae
mov
inc
sbb
in
jnp
xor
pop
dec
aaa
loopne
in
das
mov
add
or
fcmovbe
inc
loopne
add
jmp
jecxz
insb
aad
sub
aaa
sbbl
mov
sbb
sub
adc
cmpsb
mov
adc
push
cld
lods
filds
push
dec
scas
pop
add
leave
cmp
push
cmp
add
adcl
aad
add
jl
and
pop
pop
out
jnp
jo
call
push
mov
jle
int3
jo
sti
or
aad
jnp
scas
shlb
xchg
push
lods
push
imul
xchg
fidivrs
mov
shll
lret
in
sbb
int3
mov
push
je
pop
int3
cli
add
ret
lea
jmp
or
pop
ss
aaa
dec
mov
lcall
out
pop
loope
xchg
pop
dec
rcl
dec
addr16
jo
mov
push
mov
mov
cs
jno
or
outsl
mov
out
call
rclb
jne
sbb
mov
scas
notl
inc
es
int3
mov
aas
mov
imul
xchg
in
sub
dec
lcall
adc
aad
popa
push
dec
push
out
xchg
mov
popf
loop
jle
xchg
aaa
cltd
xchg
pushl
repz
or
pop
mov
cmp
push
mov
jae
add
cs
cli
adc
xor
jge
sub
sbb
pop
push
pop
push
jb
pop
popf
fimuls
mov
addr16
loope
cmc
push
dec
xchg
cmp
pop
push
jge
push
pop
shll
cmp
mov
xchg
lahf
ficomps
out
stos
mov
mov
push
cmp
or
pop
mov
jmp
sbbl
pop
sbb
push
mov
stos
pusha
add
ljmp
mov
xchg
add
cmp
xchg
inc
dec
lds
icebp
xchg
loopne
adc
cwtl
insl
push
mov
mov
shl
xchg
into
cs
rclb
rolb
cmp
dec
pop
add
scas
ja
imul
cmpsl
ret
rcrl
xorb
call
idivl
add
rclb
int3
arpl
scas
in
movsb
aaa
subb
or
out
xchg
pop
jo
fcompl
movsl
rcll
imul
dec
loope
push
push
negb
adc
es
push
pusha
mov
mov
int3
push
mov
fidivs
cwtl
xchg
loopne
and
movsb
or
mov
jmp
in
adc
xorl
adc
pop
mov
scas
push
sarl
fsubrl
jne
cmpsb
in
andb
sub
nop/reserved
fbld
push
out
mov
es
jecxz
lods
pop
pop
scas
xchg
lock
adc
push
ja
mov
int
push
mov
daa
cmp
movsl
imul
sahf
popf
jg
jecxz
fsubrs
in
xor
cs
orb
out
and
icebp
cltd
jae
push
and
lcall
lret
cmp
insl
add
or
mov
adc
clc
call
mov
push
pop
arpl
lds
mov
adc
sbb
sub
adc
in
cld
les
adc
jp
inc
and
jge
in
in
fadds
inc
sti
int3
mov
jl
mov
fdivrs
pop
movsl
call
pushf
sti
js
es
mov
dec
pusha
cmp
rcrb
ret
xchg
aaa
and
les
xchg
add
add
jmp
sti
les
ja
shll
or
mov
xor
push
into
or
inc
or
pop
inc
jo
mov
pop
push
loop
xor
adc
xchg
push
mov
dec
fwait
movsb
mov
dec
mov
dec
dec
adc
push
fildl
pop
scas
roll
xchg
xchg
and
inc
pop
aas
mov
and
fnstenv
pop
lods
pop
pop
dec
fldenv
jge
lds
int3
jno
xlat
cwtl
inc
out
out
sahf
add
sbb
mov
inc
push
adc
xor
lcall
xorl
fmuls
dec
push
pop
repnz
out
daa
jle
inc
dec
adc
cmpsb
imul
xchg
dec
repnz
xchg
stos
push
cmp
sahf
sbb
xchg
repz
fadds
ret
adc
fisttpll
dec
pop
ficoml
fwait
jne
mov
outsb
int3
call
mov
sub
mov
pop
dec
lret
ds
cmp
or
pop
scas
arpl
js
mov
sbb
sbb
ja
pop
push
mov
movsl
repnz
mov
mov
jp
jmp
arpl
mov
inc
sbb
out
push
pop
add
movsb
xor
mov
pushf
popf
dec
mov
sub
jmp
lahf
cmp
dec
cltd
dec
sbb
cli
push
inc
jl
lods
scas
mov
or
mov
pop
push
sbb
mov
push
jae
inc
sti
jecxz
in
xor
adc
test
jl
cmp
xchg
xor
iret
cwtl
mov
jmp
xor
push
sub
xchg
jl
stos
pop
test
lods
push
adc
sbb
stos
outsl
andl
sbb
pushf
lret
call
insl
stos
out
sbb
aam
dec
xchg
add
test
xchg
gs
sti
push
repz
cld
aas
pop
repnz
imul
dec
inc
clc
sbb
mov
or
mov
xor
int
dec
shrb
ljmp
xchg
adc
xor
cmpsl
xchg
xchg
mov
js
add
sarl
xchg
jmp
fcompl
fistl
dec
lods
mov
pop
es
jns
je
imul
fs
sbb
jmp
clc
fstps
sbb
jl
mov
data16
clc
bound
sbb
out
mov
mov
stos
pop
jb
sub
xchg
and
fbstp
es
inc
sahf
adc
inc
xor
pop
cmc
cwtl
jno
rcrl
lahf
dec
push
mov
xchg
mov
pop
daa
enter
xlat
jmp
mov
inc
inc
or
pusha
popa
imul
nop
add
lcall
pusha
add
pop
jne
jo
lods
inc
mov
std
xchg
mov
inc
test
in
in
daa
ficoms
mov
rclb
ss
lods
test
and
popf
fwait
pop
fs
or
xchg
mov
js
frstor
mov
mov
pop
lods
cmp
imul
mov
aaa
mov
leave
xchg
mov
add
cmp
mov
add
les
sub
fcoms
push
rcrb
add
mov
jns
mov
mov
insl
push
or
movsb
xchg
int3
push
or
loop
add
cmpsb
pop
push
mov
lods
rcrb
into
or
sarl
xchg
mov
shrb
inc
clc
mov
sbb
dec
lods
dec
lds
xchg
ss
pop
xchg
pushf
mov
push
test
pop
insb
dec
mov
push
and
aam
cltd
mov
stos
negl
jl
out
xor
cmp
sbb
mov
inc
pop
mov
js
sahf
jl
rolb
add
test
repz
mov
mov
fwait
mov
outsl
test
push
jbe
dec
xchg
mov
and
lea
sbb
repz
movsb
push
test
icebp
or
mov
cmpsb
insb
addr16
rol
andl
cmp
jnp
or
pop
cwtl
xchg
or
insl
das
flds
pop
adc
and
and
inc
sub
pop
or
sbb
andb
jne
cmp
cli
adc
je
cmpsl
push
stos
mov
shll
out
jne
and
mov
out
push
mov
mov
lcall
cmp
daa
adc
fwait
or
test
add
in
cmpsl
fucomi
and
pop
test
xchg
ret
sbb
pop
adc
mov
jne
out
mov
fnsave
push
stos
jecxz
mov
mov
in
repnz
pushf
mov
push
dec
push
fwait
push
iret
or
cwtl
dec
xor
je
jle
repz
je
dec
dec
out
sahf
in
pop
in
push
fdivrp
lea
mov
xor
js,pt
repz
sbb
popf
stos
shll
sbb
sub
shlb
mov
addr16
ret
mov
in
lds
cmp
jp
push
icebp
jo
lcall
inc
xchg
testb
jno
push
clc
jmp
dec
xchg
add
mov
push
jmp
cwtl
ss
and
adc
iret
xchg
inc
push
inc
sub
sbb
outsb
xor
rclb
aam
rcrl
fwait
mov
mov
lahf
int
insl
aam
cmpsb
dec
lea
lock
cs
movsb
fs
push
inc
push
roll
sub
pop
adc
jecxz
in
cmpsl
test
jnp
or
fmull
je
add
aad
notb
test
jb
pushf
jo
push
cmpsl
popa
clc
xchg
dec
mov
mov
mov
dec
lea
push
pop
add
gs
fwait
popf
rcrl
loopne
inc
xchg
push
xchg
lahf
in
out
xchg
hlt
mov
and
push
sbb
fcoms
cmp
xchg
mov
pop
adc
repnz
lods
xchg
dec
pop
loope
in
subl
mov
cmp
ja
pop
jne
pop
jns
xor
nop
fcmovne
fsts
jp
sahf
jbe
fisttps
mov
jno
jmp
push
add
inc
mov
mov
push
rolb
outsl
push
pop
push
in
xchg
and
and
sbb
jle
in
out
pop
stos
jb
imul
adc
aas
aad
xor
xchg
xchg
fisubrs
xchg
dec
ds
pop
cmp
out
cwtl
mov
lret
shrl
inc
jmp
inc
jae
pop
es
movsb
ret
sahf
stc
cmp
add
xchg
inc
add
push
push
add
ss
call
pop
xchg
push
mov
inc
lahf
in
mov
adc
lock
mov
inc
xor
and
lcall
jecxz
and
adc
inc
push
jns
lds
pop
mov
mov
mov
adc
fsubrl
fisubl
xlat
jo
mov
xor
leave
push
xchg
inc
jl
or
in
repz
xchg
nop
pop
add
ror
pusha
ss
or
movsb
cltd
mov
push
jl
int3
hlt
int
inc
add
jnp
dec
xchg
jns
ljmp
clc
xorb
shrl
push
inc
movsl
shll
mov
adcb
mov
shlb
out
jp
rorl
push
std
add
push
lds
adc
into
mov
mov
pop
pop
mov
pop
push
movsb
push
dec
mov
pop
mov
bound
push
jnp
mov
jns
daa
ja
repnz
in
jp
push
call
ret
sbb
hlt
scas
inc
and
mov
pop
out
xchg
js
lea
dec
ds
bound
sbb
push
stos
movsb
sub
orl
mov
aas
imul
arpl
jle
imul
dec
fldt
ja
cmp
xor
popf
filds
cmp
push
sbb
cmp
mov
sahf
push
mov
pusha
pusha
popf
add
out
inc
push
nop
dec
mov
add
jmp
dec
shl
fcmove
jmp
adc
shll
adc
mov
xchg
cli
and
sti
mov
push
or
lahf
mov
push
push
sub
rcr
cld
test
adc
in
lds
int
sub
mov
mov
es
adc
push
xor
es
out
out
mov
loope
fcomp
sub
data16
xchg
lret
xchg
mov
inc
adc
sbb
and
sahf
cmp
xchg
stc
push
sub
dec
mov
scas
rorb
imul
lret
filds
jno
scas
mov
pop
iret
in
test
mov
lock
jb
je
pusha
sub
jb
or
or
rcrb
addl
mov
gs
popf
xchg
sub
sub
pop
popa
rcrb
xor
into
pop
pop
faddl
jns
pop
rolb
rol
test
hlt
adc
stos
mov
push
jmp
imul
cmp
xor
push
pop
pushf
ds
xor
and
popa
cmp
out
jg
out
mov
or
sub
inc
push
sbb
arpl
pop
adc
inc
and
jns
jo
xor
addr16
push
pop
pop
sub
mov
sahf
inc
adc
imul
add
push
ret
je
ret
cmovnp
shrb
or
in
ja
sub
int3
out
inc
fsts
or
pop
test
sahf
repz
rolb
mov
dec
repz
mov
dec
inc
xorb
sub
or
push
loop
inc
mov
mov
loopne
inc
popa
pop
loope
repnz
or
scas
inc
mov
or
adc
adc
ds
mov
mov
mov
filds
xchg
pop
ficoml
fstpt
jo
xchg
dec
xor
sti
stos
dec
mov
leave
sbb
pop
mov
mov
fidivs
sub
mov
sti
test
push
sub
stos
hlt
cltd
dec
int3
ficoml
mov
mov
test
dec
mov
bound
adc
pop
push
or
jp
push
addr16
xlat
test
fxch
mov
sbb
ss
mov
test
cmpsb
xchg
aas
mov
xchg
dec
inc
cmp
lea
popa
and
push
loopne
sbb
mov
pop
sbb
repnz
das
mov
lret
add
je
data16
adc
call
inc
lea
push
loopne
mov
mov
xlat
test
dec
xchg
shlb
jecxz
sub
add
push
pusha
nop
std
inc
subl
xor
add
add
fsubrs
scas
adc
clc
sbb
cmc
insl
nop
mov
enter
ret
jl
imul
pushf
mov
push
loopne
sbb
test
pop
pop
cmp
jl
fildl
std
adc
fwait
lds
pop
mov
ja
rcll
jne
test
mov
add
jmp
mov
jbe
dec
dec
adc
jecxz
outsl
ret
fmull
lcall
xor
cmc
movsb
sti
outsl
adc
fildl
call
in
pop
xchg
call
add
xchg
clc
pop
fwait
or
mov
je
pop
xor
outsl
out
lret
inc
dec
pusha
sbb
movsl
lds
sti
xchg
cltd
loope
loopne
mov
mov
stos
int
sub
mov
push
lahf
fbld
mov
jmp
sub
dec
enter
mov
pop
bound
movl
bound
pop
divb
and
mov
mov
cmp
cld
xchg
jbe
daa
test
jecxz
loopne
enter
out
pop
sbb
or
mov
mov
repnz
sub
pushf
sbb
or
bound
fs
repnz
adc
pusha
fldl
cmp
es
cmp
xlat
push
xchg
jmp
fs
lret
repz
mov
xchg
and
xchg
fists
imul
push
jge
fidivl
lahf
test
test
jne
xlat
xor
jno
mov
pop
call
mov
jp
push
and
mov
ds
ja
xor
test
loope
jnp
cmp
imul
inc
out
or
loopne
dec
sub
jne
jl
adc
jnp
dec
shll
push
insb
push
jle
pop
jbe
jecxz
adc
xchg
xor
pop
inc
stos
pop
ja
fs
add
adc
hlt
aaa
into
jp
push
icebp
and
dec
ds
mov
push
push
mov
mov
mov
jnp
xchg
sti
test
dec
std
pslld
adc
in
sub
pusha
clc
ss
or
push
mov
or
and
mov
stos
insb
push
add
inc
pop
fisttpll
mov
dec
pop
aas
xchg
xor
jo
lret
repz
mov
in
setp
push
xchg
mov
mov
repz
aaa
mov
pop
mov
xorl
push
mov
fidivl
dec
loope
jb
mov
jno
inc
enter
xor
fcoms
mov
aas
sbb
mov
out
daa
in
jbe
cli
ds
out
and
sbb
inc
fnsave
mov
sbb
push
jno
xlat
xor
jb
popa
add
mov
in
aas
xor
mov
test
mov
cmp
call
insl
ljmp
xchg
pusha
bnd
arpl
xchg
push
gs
push
arpl
pop
xorb
sub
daa
jno
pop
sbb
popf
sbb
inc
call
xor
pop
sbb
or
and
rorb
aaa
hlt
mov
or
in
imul
sbb
flds
loope
mov
lods
mov
bound
cld
aad
ljmp
out
mov
std
sub
dec
or
lret
lds
in
in
aaa
push
scas
adc
cli
adc
jnp
ss
jp
xchg
in
sbb
in
cs
stos
jmp
icebp
fcmove
hlt
push
pop
pop
pop
js
mov
push
push
pop
add
add
xchg
clc
leave
dec
inc
popf
push
ljmp
fdiv
jecxz
push
icebp
lds
adc
pop
mov
push
sarb
int
not
lahf
sarb
jne
xchg
leave
arpl
lret
repnz
xchg
es
andb
mov
jg
fstpt
cmp
adcl
mov
in
adc
inc
sub
push
push
xlat
jo
xor
ja
imul
sbb
push
jae
cmp
das
cmp
push
adc
or
je
mov
sbbl
stos
add
lret
adc
mov
mov
push
aaa
xor
or
out
adc
cwtl
subb
xchg
jle
add
inc
or
mov
orl
sub
pusha
std
popa
sbb
xchg
stc
sbb
js
jne
or
and
cmp
enter
mov
stc
adc
roll
fwait
cmpsb
hlt
sub
imul
or
int3
stos
test
mov
lea
lock
call
inc
sub
add
or
push
test
inc
xchg
push
call
and
mov
cmpsl
jne
sbb
loop
adc
sahf
call
mov
push
jg
inc
in
in
xor
inc
popf
mov
aaa
or
cwtl
sbb
push
xchg
add
push
sub
cwtl
imul
mov
mov
push
push
xchg
ja
xor
inc
xchg
repz
jp
fbld
hlt
add
fdivs
sbb
xchg
mov
lea
mov
mov
in
daa
jae
push
aam
mov
shlb
push
inc
jbe
div
jp
ds
mov
cmpl
xchg
push
dec
adc
insb
mov
es
ret
sti
cwtl
adc
in
sbb
push
cmp
and
lret
pop
loope
mov
push
mov
repnz
clc
test
fimull
dec
lods
clc
push
popa
sarb
stos
sub
int
das
xchg
mov
cmp
leave
repnz
mov
mov
cwtl
clc
fucomip
inc
push
fisubs
popf
stc
cmp
push
popa
jae
mov
fsubrl
dec
push
lea
clc
jmp
push
mov
fs
xchg
push
das
dec
mov
out
or
fidivl
sbb
mov
sub
repz
inc
jge
lods
xor
loopne
mov
aas
and
sti
adc
test
aad
cmp
cmpsb
mov
scas
es
scas
fisttps
cltd
gs
lret
mov
addr16
loop
pop
ja
fimuls
jl
cmp
jb
mov
movups
jno
pop
adc
imul
push
add
repz
mov
int3
add
repz
push
sbb
cmp
fcoms
or
and
mov
sbb
jb
movsl
rcrl
jb
rcl
sbbb
jg
push
fcoms
sbbb
cltd
inc
push
pop
adc
adcb
sarb
out
xchg
rcl
sbb
inc
adcb
out
and
inc
mov
stos
mov
jo
fs
and
cmp
aam
add
iret
jnp
roll
dec
jge
mov
pop
inc
or
adc
mov
jnp
xor
jl
mov
nop
push
adc
jns
mov
xorl
mov
jno
out
int
nop
add
xchg
mov
ret
nop
shrb
jb
in
mov
adc
xor
pop
hlt
stc
mov
mov
push
cmpsb
inc
lahf
jae
adc
scas
mov
or
icebp
jno
jb
aam
mov
repnz
data16
mov
xor
mov
add
jecxz
pop
sub
inc
mov
daa
lock
jns
andl
into
aam
jbe
mov
mov
pop
jns
out
mov
jno
inc
and
addr16
sbb
dec
aam
and
lea
out
leave
xchg
add
mov
into
sti
add
mov
arpl
shlb
and
inc
stos
sub
pop
cmp
out
rcrl
lcall
push
mov
movsb
sub
stos
outsb
movsb
std
mov
mov
outsb
xchg
dec
aam
loopne
ret
lock
in
out
sbb
je
psllq
andb
pop
loope
sub
leave
sub
cli
scas
icebp
sbbl
mov
add
and
mov
icebp
xlat
popa
ja
jns
push
mov
rolb
cmp
sbb
add
push
ja
stos
in
scas
sub
subl
test
fisttps
and
jno
pop
popf
mov
or
mull
jge
jnp
xor
movsb
jecxz
adc
xor
fst
jb
mov
jo
xchg
stos
rcll
inc
xchg
jecxz
jp
fistl
jmp
mov
mov
and
adcl
xchg
lcall
ret
ds
mov
mov
iret
lods
jne
loop
jmp
xchg
lahf
push
dec
mov
xchg
rclb
sahf
aas
sbb
cmp
mov
mov
mov
or
shl
popa
push
lods
dec
push
lea
jl
inc
fidivs
add
jne
js
or
arpl
or
cli
push
js
fistpll
mov
stc
andb
lea
inc
in
sbb
mov
xor
fwait
bt
mov
or
in
mov
in
test
jno
adc
jae
in
xorl
dec
and
xchg
cltd
or
jmp
stc
jle
mov
ret
sbb
rorb
adc
and
aam
or
mov
outsl
dec
add
inc
in
mov
movsb
insb
pushf
sti
xchg
push
sti
dec
push
inc
or
xchg
pushf
jle
dec
cmpsl
clc
loope
or
jmp
xor
ljmp
and
imul
movsb
shrl
inc
xchg
add
or
mov
cmp
mov
cmp
call
out
fdivp
ds
sbb
ja
pop
mov
sub
inc
jecxz
xchg
faddp
cmpsb
mov
xchg
jecxz
adc
jbe
mov
dec
inc
je
les
adc
xchg
pusha
pusha
xchg
scas
cmpb
dec
idivb
call
dec
cld
xchg
mov
sub
rcrb
aam
loope
cmp
stc
cmp
push
test
jp
cmpsl
pop
xchg
cld
pop
inc
repnz
jbe
enter
xchg
sbb
or
mov
aas
mov
push
out
push
xchg
inc
in
das
adc
shl
ret
mov
aam
xchg
jg
push
es
jp
cmp
cmp
push
out
in
outsb
adc
aad
scas
or
jns
jecxz
inc
mov
sub
mov
pop
dec
addr16
pop
cltd
mov
push
test
fwait
outsb
pop
sti
aaa
cmp
cmp
enter
rcrb
cltd
mull
out
loop
xchg
push
in
mov
cmp
mov
outsb
adc
mov
mov
push
cmpsl
jbe
jo
jnp
sbb
adc
xchg
fidivs
cmp
cmpsl
mov
repz
sahf
jns
mov
mov
pop
movsl
outsl
mov
push
in
mov
jo
pop
mov
mov
dec
push
scas
ja
xchg
fs
imul
jb
dec
jmp
mov
loope
push
lods
pop
imul
loopne
ljmp
sar
sti
rcrb
out
es
jno
outsb
cmp
pop
xchg
sub
fstl
and
adc
lock
loopne
out
test
orb
mov
push
pop
inc
pop
daa
imul
cmc
fisubrl
mov
mov
das
pusha
pop
mov
test
stos
scas
push
lret
data16
shrb
popf
test
add
jp
lahf
rolb
xchg
int
aas
repz
rorl
movsl
into
cmp
shll
gs
pop
jne
or
iret
add
jle
jmp
sub
lahf
sub
push
push
out
xor
ret
sbb
nop
pusha
mov
lret
mov
fnstcw
cmp
rorl
mov
jae
popf
and
addr16
addr16
test
push
jno
icebp
push
lods
cmp
clc
in
add
imulb
stos
and
ljmp
inc
aas
hlt
pop
add
lret
lds
scas
mov
jnp
jne
adc
mov
sti
orb
mov
xor
xchg
adc
ja
adc
inc
test
test
in
lahf
cmpsb
jno
xchg
scas
add
jecxz
and
cmp
pop
pop
add
in
loope
cld
mov
mov
mov
test
sub
push
mov
xchg
and
jne
scas
ret
popa
cmp
adc
dec
sub
jp
adc
popa
or
out
sub
pop
xchg
pop
ret
push
das
inc
icebp
repnz
mov
test
out
add
imul
mov
jle
sahf
sub
fcomps
test
or
xchg
inc
xor
int
xor
icebp
dec
pop
jp
arpl
idivl
jmp
ret
dec
mov
mov
jl
loopne
icebp
das
inc
cli
ret
pop
push
fildll
mov
in
imul
mov
loop
jae
push
xchg
mov
pop
cmp
outsl
xchg
testb
mov
pop
les
jo
pusha
fldenv
ret
jg
or
inc
call
popf
mov
in
xchg
fiaddl
stc
push
adc
imul
mov
or
data16
cmp
sub
out
mov
aaa
and
ljmpw
adc
fidivrl
adc
or
cmpsl
fimuls
bound
mov
aas
xchg
mov
inc
rorl
sub
scas
arpl
and
stc
aas
mov
scas
sar
imul
aas
aas
mov
scas
xchg
movsl
inc
pop
or
pop
and
push
fcom
repz
clc
insb
mov
movsl
orl
and
ret
sub
fistpll
pop
inc
roll
pop
add
adc
push
sub
out
inc
mov
and
xchg
adc
xchg
xchg
cwtl
je
jge
or
push
xchg
sbb
inc
rcl
leave
dec
xor
mov
dec
dec
addr16
ss
dec
inc
or
out
push
xor
stos
pop
pop
sti
std
stos
stos
popf
out
sub
ret
hlt
js
mov
mov
xchg
loope
and
out
pusha
lods
retw
xchg
leave
cltd
data16
push
in
mov
xchg
or
dec
add
push
add
sahf
xor
push
in
pop
jae
xor
cwtl
adc
and
push
ss
add
mov
push
sbb
xchg
inc
add
fdivrs
inc
rolb
or
gs
sub
pop
pop
insl
mov
outsl
xchg
popa
cwtl
insb
js
jge
subb
pop
mov
pop
daa
clc
loope
lods
xor
in
pop
aaa
cmp
mov
mov
push
cmp
cmpb
push
xor
adcb
or
data16
popa
orl
lcall
adc
stc
sub
sub
sbb
sub
sub
int3
clc
data16
sub
xchg
mov
cmp
pop
mov
xor
adc
lea
sbb
or
imul
pop
cmp
jb
and
in
shll
adc
and
stos
dec
sbb
pop
inc
fists
mov
sbb
leave
mov
fistps
xor
jbe
push
and
and
stos
pop
aaa
pop
adc
inc
mov
jbe
or
lea
sbb
pop
push
jb
mov
int3
cld
lcall
insb
mov
mov
fldl
xchg
add
mov
jl
adc
mov
pop
cmp
xor
arpl
rclb
scas
push
mov
jmp
hlt
fs
pop
sbb
rolb
cmp
adc
or
std
fucom
lods
sub
xlat
jg
xor
xchg
enter
mov
adc
fidivl
lahf
xchg
inc
movsl
outsl
push
mov
int3
adc
test
dec
xchg
adc
inc
nopl
mov
cld
test
fdivs
inc
lods
shl
daa
jbe
pop
mov
idiv
lret
pushf
adc
adc
pushl
push
xchg
adc
add
jecxz
mov
mov
jns
cs
stos
out
adc
ljmp
pop
mov
sub
sbb
jb
xchg
aad
std
cmp
test
inc
sub
xor
test
and
xor
lahf
repnz
clc
fdivrs
xor
mov
ficomps
mov
cmp
insl
lods
lcall
xchg
pop
or
lret
push
repnz
and
out
push
mov
je
jge
out
xor
leave
leave
cltd
repz
icebp
dec
and
outsl
in
and
mov
test
shrl
xorb
popa
xor
push
jmp
jae
inc
jl
pop
rclb
push
test
push
mov
lods
mov
mov
cwtl
cmp
and
leave
fidivrl
push
call
cwtl
loope
aas
fs
mov
outsl
adc
repz
lret
jecxz
gs
mov
sahf
in
sub
add
mov
jmp
lcall
and
aam
xchg
mov
fnsave
dec
sbb
or
sbb
push
lahf
in
scas
lock
cmp
and
ret
cmc
cmc
xchg
orl
insb
ret
je
cmp
jne
lods
loop
cltd
jmp
mov
push
es
arpl
pop
mov
mov
xchg
jb
dec
arpl
add
jne
loope
push
mov
sub
roll
imul
mov
ret
jp
sub
xchg
jo
xor
fsubp
repz
mov
mov
jo
push
mov
rcrl
addb
neg
into
fdivr
lock
cmp
push
daa
lds
dec
lea
ja
jmp
add
sbb
push
stos
fidivrl
push
mov
std
pop
jb
test
ds
loopne
leave
filds
mov
pop
aas
lods
push
mov
addr16
push
test
in
mov
xchg
repnz
inc
mov
fisubl
push
movsl
sub
cmpsl
add
jae
data16
push
inc
adc
into
js
ret
cmpsb
ds
or
mov
mov
mov
aaa
jg
sub
aad
cmc
ret
fadds
lock
cmp
stc
fdivrl
pop
pop
enter
or
mov
push
daa
in
loop
mov
pop
dec
ret
xlat
jp
mov
xlat
jae
in
jle
pop
xchg
jo
sub
pop
jl
fldl
dec
shll
mov
cmp
neg
dec
sbb
adc
mov
push
cmc
mov
cmc
mov
mov
icebp
rolb
aas
xor
sub
andb
testl
fdivs
push
fdivs
cmpsb
mov
sbb
mov
test
pop
imul
test
fdivs
dec
es
popa
loop
or
sbb
xchg
mov
jns
dec
out
pop
sub
in
mov
cld
xlat
test
into
aad
das
nop
adc
imul
push
ljmp
dec
or
pop
hlt
sub
rcl
or
adc
xor
sub
or
xchg
pop
leave
inc
dec
outsl
and
mov
imul
xor
xchg
push
adcb
scas
test
pop
xchg
aas
movsl
mov
add
inc
xchg
mov
insl
sbb
mov
lret
rcrl
push
and
or
push
enter
in
hlt
mov
test
cmp
sub
pop
outsb
imul
mov
add
adc
shll
and
mov
ret
pop
in
or
rcll
fisubs
mov
arpl
repz
shlb
cwtl
ficoms
sub
fidivs
jl
in
cmp
or
subl
xlat
cmp
aad
movsl
orb
imul
pop
or
dec
mov
movsl
insl
arpl
adc
adc
out
fcompl
int3
pop
xlat
subl
add
sti
or
xchg
ds
inc
aaa
movsb
push
ret
lds
sbb
mov
cmp
or
nop
jmp
fistpll
or
fisttpl
or
loop
xchg
xor
dec
out
adc
xchg
imul
pop
mov
outsb
jge
movsl
xchg
mov
outsb
add
outsl
insb
aaa
sbb
scas
or
or
loopne
insl
fsubrl
push
rcr
fs
cmp
cmp
adc
mov
inc
mov
adc
adc
adc
lock
jecxz
test
xchg
pop
cmp
xchg
fwait
pop
lea
ret
iret
mov
scas
outsb
jbe
loope
jp
in
shll
lcall
add
mov
jnp
movsb
imul
nop
lds
fcoms
nop
push
jns
inc
in
loope
pop
les
jne
inc
dec
stos
lret
cmp
adc
repnz
jbe
out
mov
and
mov
push
inc
xor
push
outsl
clc
aas
dec
push
daa
stos
cmp
mov
movsb
cli
cs
or
sub
dec
scas
xchg
pop
pop
sar
cli
stos
mov
fcomi
aam
mov
pop
imul
xor
adc
xchg
push
movsl
fs
mov
push
mov
pop
xchg
pop
out
stos
lret
push
mov
xchg
fimuls
xorl
out
jp
push
int
cli
xchg
fwait
sbb
sub
xchg
mov
fwait
lock
pushf
sbbb
and
inc
xchg
dec
das
test
push
jnp
mov
insl
fstpl
int3
push
inc
outsl
xor
jg
adc
iret
test
cmp
int
cs
xor
fcoml
scas
pop
test
mov
in
inc
or
xchg
adc
stc
aas
jnp
sub
adc
xlat
sub
xchg
mov
push
xor
fistpll
mov
andb
mov
es
cltd
jno
xor
mov
or
in
jbe
cmp
int
inc
lcall
cwtl
xor
movsb
cs
popl
leave
test
lods
pushf
mov
loope
mov
dec
cmpsl
push
nop
dec
rorb
aaa
adc
adc
cmp
arpl
cmp
cwtl
inc
imul
sub
mov
push
dec
or
fwait
push
fiadds
aas
icebp
dec
int
in
push
sahf
pusha
fwait
pop
nop
mov
insb
sbb
cli
mov
inc
test
in
js
loope
ljmpw
mulb
cmpsl
aad
cltd
mov
out
and
dec
ficoml
mov
jecxz
mov
rcll
xlat
cmp
and
inc
mov
out
aad
xor
sahf
inc
mov
jae
imul
xchg
mov
rcl
mov
loope
fwait
clc
cmp
push
movsl
gs
filds
jp
jge
push
dec
notb
rcrl
or
out
push
std
xchg
jecxz
in
movsb
and
lahf
jb
sbb
or
imul
call
ds
fadd
push
ffree
sub
test
mov
mov
fstl
cmp
add
jle
push
xor
repz
rcll
sub
lods
bound
test
dec
out
shl
aad
mov
pop
cmp
test
push
push
adc
jmp
push
mov
das
jb
idivb
test
sbb
popaw
and
lock
mov
mov
add
stc
jg
lcall
sbb
not
lret
out
adc
gs
mov
inc
ret
jmp
fildll
and
outsl
daa
out
pop
nop
dec
insb
sbb
and
jmp
loop
jmp
int
push
rcrl
ja
pusha
incb
mov
pop
addb
xchg
xchg
push
pop
sbb
ss
sub
xchg
daa
mov
rorb
fwait
jne
aad
mull
push
ret
xorl
loope
iret
aas
add
insb
clc
ja
or
cmp
mov
cmp
call
or
sub
mov
adc
mov
jecxz
sbb
mov
iret
pop
xor
popa
xor
repz
lret
rorl
sbb
arpl
and
sub
and
mov
mov
das
sahf
add
xchg
pop
pop
cmc
popa
cltd
pop
ljmp
imul
mov
jmp
ss
into
xchg
cs
inc
lea
fnop
dec
scas
clc
hlt
out
cmpsb
insb
xchg
fadds
xor
enter
jae
cli
mov
ret
fcmovb
dec
fnstcw
aad
roll
in
jns
sub
movntps
push
fistl
repnz
add
cmp
xor
inc
popf
adc
hlt
hlt
inc
cmp
out
sbb
jbe
sbb
mov
add
lock
pop
scas
rcrb
adc
push
lret
popf
adc
ja
gs
bound
in
xchg
movb
scas
or
iret
adc
jno
pop
dec
push
rolb
dec
and
inc
xor
movsl
cmpsb
rclb
sbb
leave
fistpl
jmp
loope
sbb
mov
ss
int3
or
lcall
dec
xchg
dec
lahf
cmpl
sub
and
adc
arpl
shr
adc
rcrb
sub
inc
out
add
mov
xor
pop
inc
int
fst
scas
clc
pop
dec
lock
fsubrp
sbb
push
jb
fstps
adcl
push
mov
push
pop
lods
outsb
mov
scas
mov
movsl
pop
shrl
jb
cltd
inc
adc
scas
push
xchg
xchg
cmc
add
loopne
pop
adc
jnp
pop
idivb
shll
jge
pop
pop
pop
movsb
lcall
stos
xlat
mov
mov
and
clc
bound
jae
scas
and
xor
adc
jl
cs
adc
popa
mov
or
jbe
lock
mov
dec
test
sahf
xchg
daa
push
mov
sub
lea
jl
jmp
xor
ror
sbb
inc
je
xor
sbb
mov
inc
dec
test
xor
popa
push
hlt
shl
push
xchg
out
xchg
repz
test
test
or
lcall
dec
fwait
adc
rorb
int3
mov
lret
shll
mov
or
inc
dec
ljmp
mov
inc
adc
push
inc
or
lods
popf
jno
xchg
mov
inc
hlt
push
std
add
fistl
and
pop
gs
dec
lret
or
xchg
outsb
insb
aam
cmp
xchg
jne
xchg
push
and
daa
adc
aad
cmp
hlt
scas
lahf
inc
inc
mov
xchg
test
or
jl
lea
jge
lea
cmp
mov
dec
xor
adc
mov
pop
shrb
push
mov
decl
add
jnp
lea
ja
jne
es
imul
xor
rcll
add
mov
js
insb
fidivs
cmp
mov
pmulhuw
pop
das
dec
push
fistps
ds
jae
test
lods
out
pop
or
dec
inc
insb
sbb
sbb
mov
jo
mov
push
sbb
test
adc
int3
jge
or
pop
mov
aas
out
mov
jno
sbb
mov
in
xchg
loope
mov
mov
lock
test
and
ljmp
mov
dec
imul
out
xor
gs
cltd
out
xor
mov
and
mov
lds
or
loopne
out
iret
jmp
or
push
lea
add
xchg
mov
dec
mov
mov
cmpsl
mov
fs
js
pop
pop
out
incl
call
sbb
negl
das
fisubrl
push
decl
mov
bound
push
add
fadd
fistl
aam
insb
sub
adc
dec
or
cmp
mov
mov
dec
cmp
or
or
dec
rcll
je
dec
push
dec
and
adc
add
xchg
scas
testb
mov
xchg
out
pop
or
mov
dec
lcall
sub
mov
int3
maxps
lods
nop
jns
lcall
out
scas
pop
mov
sahf
mov
flds
push
ss
cs
mov
and
push
lock
jns
mov
mov
mov
xchg
fstps
xor
inc
inc
aad
sbb
or
lret
and
fsts
hlt
inc
mov
aas
mov
cmp
sahf
mov
popf
ds
mov
and
add
stc
fstp
adc
sub
sbb
mov
scas
push
pop
xor
fwait
and
xor
lcall
mov
lds
inc
jo
sti
ds
sub
adc
dec
or
ljmp
push
mov
into
xchg
xor
mov
je
fdiv
jo
sbb
dec
arpl
test
push
les
xor
inc
cld
pop
push
mov
cmp
pop
cmp
mov
das
pushw
outsb
xchg
pop
lret
loopne,pn
and
ret
push
dec
into
mov
sub
or
mov
push
shll
orl
lret
sub
arpl
cwtl
dec
shlb
in
mov
pop
sbbl
stos
cmp
test
cld
inc
stc
mov
jo
mov
sbb
push
jae
dec
stos
mov
sbb
and
sbb
repnz
fdivrl
pop
lret
sbb
insb
mov
xchg
ja
xchg
or
inc
arpl
call
fcompl
pop
sti
int3
inc
movsb
out
dec
add
mov
ja
pop
inc
sarb
pop
aad
test
cmp
sbb
push
and
adc
testb
pop
mov
jo
inc
dec
testb
cmp
and
xchg
lds
fidivs
push
shrl
lret
mov
dec
test
adc
cmp
xchg
push
out
add
scas
sub
clc
adc
in
cmp
scas
xchg
dec
and
insl
push
mov
cmpb
test
xchg
sub
inc
xchg
fidivrl
es
jge
xchg
inc
cmp
push
testl
cmp
addr16
sub
ficompl
mov
xor
dec
dec
add
pop
pop
mov
ret
mov
ja
pusha
push
rclb
fadd
dec
push
int3
popa
negb
stos
mov
cmp
mov
aad
iret
notl
sahf
adc
xor
add
cmpsb
xor
notb
dec
push
iret
stos
jge
mov
mov
inc
add
bound
cwtl
loope
push
fimull
or
or
sbb
and
add
mov
jg
js
shll
inc
adc
flds
mov
jmp
in
jle
mov
insl
mov
es
fcompl
or
xchg
adc
xor
test
outsb
jne
push
sarb
mulb
movsl
jmp
sbb
xor
xchg
cmpb
xchg
inc
mov
repz
into
lods
out
adc
cld
or
inc
mov
int3
mov
dec
shlb
cmp
xor
lret
in
pop
jns
loopne
movsl
sbb
filds
icebp
mov
mov
in
stos
lret
xor
in
jl
add
cmp
mov
dec
movsl
out
sahf
xchg
and
pop
pop
adc
mov
or
xchg
aad
mov
out
repz
test
test
xor
jge
adcb
sti
mov
repnz
enter
mov
pop
sarb
insb
dec
push
arpl
cmp
dec
sti
pop
pusha
cmp
jp
add
push
dec
inc
int
cmc
in
add
scas
fbstp
xchg
jmp
mov
xchg
stc
out
pop
push
jp
fidivl
fdivrs
pop
jbe
decb
xchg
fcomps
and
cmc
jmp
add
rcl
aad
cwtl
mov
les
mov
je
cmc
mov
cmc
mov
insl
xchg
stos
sub
loopne
xchg
pop
mov
jg
inc
fisubs
jns
push
pop
adc
push
cmpsl
jl
push
decb
aas
js
mov
xor
mov
int3
rol
xchg
ret
in
lds
lret
add
imul
mov
push
sub
pop
pop
add
addr16
js
sub
and
insl
fyl2x
enter
insl
mov
or
mov
lahf
xor
inc
sub
mov
cmp
adc
je
lahf
jmp
xlat
mov
in
fwait
jns
in
pop
int
mov
xchg
jp
outsb
imul
mov
jae
and
pusha
sub
movsl
mov
scas
scas
xchg
adc
leave
pop
hlt
dec
and
adc
lods
je
jp
jg
nop
xchg
iret
and
pop
inc
inc
mov
cmp
sub
aaa
movsb
aam
adc
movsb
rcrl
popf
jne
cmp
adc
hlt
std
hlt
movsl
and
cs
adc
dec
hlt
repz
jo
push
negl
cwtl
popa
xor
lret
loope
cli
jle
loope
and
nop
dec
sub
push
xor
test
ja
movsb
aam
cmp
bound
jle
mov
mov
xor
or
mov
mov
and
adc
inc
xchg
mov
test
aas
pop
std
push
rol
mov
mov
loope
and
mov
mov
push
push
fdivrp
repz
stos
das
popf
into
ds
xchg
push
xlat
mov
mov
push
xor
mov
dec
pop
or
mov
insb
mov
aam
loop
daa
xchg
test
js
shr
push
mov
jno
pop
repnz
dec
mov
pop
xchg
cmp
adc
dec
gs
dec
xor
aam
push
and
push
jb
mul
in
jecxz
mov
push
in
ret
ds
jbe
notb
xchg
popa
sbb
xor
fwait
insb
cmp
jl
jp
adc
les
mov
scas
jne
mov
iret
ja
notl
add
inc
inc
push
lcall
cs
cmp
loope
pop
mov
xor
jg
ret
fwait
shrb
xchg
shrl
aad
inc
lock
mov
sub
sahf
jmp
test
cltd
jnp
push
cwtl
out
iret
dec
fcmovne
mov
mov
leave
add
add
ret
or
aad
pop
dec
std
jbe
movsb
popf
pop
cs
into
cmp
sbb
repnz
js
lret
mov
test
push
jo
inc
aad
in
movsl
xchg
mov
hlt
sbb
stos
jg
push
ss
inc
xor
inc
xchg
inc
es
dec
sub
inc
jns
mov
xor
in
daa
stc
xor
cmp
jmp
stos
sub
and
inc
stos
adc
jle
mov
sub
ljmp
aaa
push
xchg
popl
xor
fisubl
popf
pop
add
jecxz
xchg
cmpl
stos
stos
add
out
sti
rcrb
scas
mov
xchg
xchg
rcrl
movsb
shrl
sahf
popa
scas
fnstcw
mov
out
xchg
or
and
and
stc
lods
insl
fistpll
test
push
arpl
fdivl
cmp
call
addr16
add
cltd
push
addr16
and
push
or
mov
test
add
aaa
fisttpll
aam
cmp
lret
or
xor
call
pop
cwtl
jge
jo
mov
dec
stc
movsl
pop
out
leave
fs
jmp
and
fmuls
mov
movsb
ror
icebp
jecxz
mov
std
xor
jp
lret
hlt
fwait
mov
mov
xor
pop
andl
leave
inc
inc
jno
dec
mov
loopne
aad
int3
pushl
mov
jne
test
cmp
stos
scas
cwtl
push
push
adc
data16
push
stos
cwtl
adc
jl
jmp
call
jb
xchg
pop
lret
sbb
cld
fdivl
loopne
jbe
mov
add
xchg
rcrl
mov
push
and
in
jp
jge
push
test
in
je
daa
cwtl
fwait
loope
and
dec
aas
and
jb
or
add
mov
in
fstl
or
sub
test
push
adc
push
adc
dec
test
jns
mov
cmpsb
and
test
adcb
mov
sbb
and
dec
jg
stos
mov
insl
shrl
aaa
aam
mov
mov
xchg
outsl
sti
jo
mov
cmpl
sti
dec
push
inc
lcall
add
vmwrite
hlt
mov
rclb
popa
mov
es
push
rclb
mov
data16
inc
push
mov
lea
or
mov
sbb
hlt
xchg
nop
pop
fildll
stc
dec
inc
lods
jnp
jle
adc
mov
inc
sbb
insb
push
sub
cld
out
sbb
sub
das
std
and
lods
in
das
or
xchg
jo
inc
mov
jecxz
dec
mov
and
adc
jge
lods
enter
cld
xor
jnp
test
pop
insb
repz
rcrb
mul
testb
sbb
dec
pushf
or
in
notl
push
sbb
mov
mov
jne
cwtl
dec
sbb
je
inc
lods
je
jg
in
pop
test
movsl
xchg
cld
jo
ret
add
cmc
add
push
insl
pop
xor
out
loopne
xchg
pusha
dec
popa
out
xor
sbb
aas
and
test
enter
xchg
cmp
ror
in
cwtl
pop
rcrb
xchg
push
pop
jns
mov
sub
fisubs
insl
in
adc
inc
xchg
inc
push
add
mov
push
sti
sbb
cltd
ljmp
movsl
fstps
pushf
insl
daa
and
movsb
xchg
cmc
adc
xor
or
in
xor
lsl
sub
inc
movsl
out
arpl
and
inc
leave
xchg
push
push
jb
mov
push
nop
cs
add
pop
aam
shll
aaa
or
mov
add
mov
cmpsl
or
xor
add
not
xchg
sahf
jg
pushf
mov
add
fdivrs
mov
std
sbb
xor
pop
dec
xchg
imul
clc
inc
arpl
stos
or
mov
mov
out
push
mov
jns
frstor
scas
cmc
sahf
cmpsl
fwait
std
scas
adc
imul
stc
cld
xor
xchg
cmc
out
cs
xorl
nop
sub
push
and
out
xchg
xor
shll
addr16
arpl
jns
sub
inc
and
push
aaa
ret
push
mov
int
mov
jl
cltd
mov
cmp
push
fstps
sub
sbb
fsts
in
cwtl
lcall
jae
aaa
mov
dec
mov
lahf
inc
movl
jae
adcb
xchg
pop
test
cmp
jmp
movl
out
push
mov
add
add
iret
lret
test
fistpll
bound
rolb
insl
repnz
aad
lret
enter
stos
icebp
push
mov
and
aam
inc
test
xor
leave
aaa
and
jns
aas
xchg
mov
call
mov
popa
jp
std
movsb
push
fwait
sbb
mov
cs
lea
inc
jmp
imulb
subl
push
or
jne
jns
cmp
pop
or
jecxz
aas
or
lret
repnz
pop
mov
add
fs
notl
mov
xchg
pop
pop
lods
and
or
fwait
push
shl
fwait
int3
mov
sub
cvtdq2ps
lods
iret
les
and
push
cwtl
dec
push
lcall
inc
push
inc
pop
or
dec
clc
mov
push
mov
adc
cmpb
fldl2t
pushf
pushf
es
in
lds
cmp
mov
or
sub
jb
xchg
pop
jge
fsubrs
loope
ss
jl
lahf
fisubl
mov
xchg
cmp
mov
aam
xchg
cmpsb
jnp
and
sub
clc
loopne
imul
mov
dec
arpl
mov
sbb
in
mov
push
mov
add
dec
xchg
addl
pop
and
and
cs
xor
sbb
jecxz
fdivrs
mov
xchg
aam
fldenv
dec
popf
jno
jg
lock
fwait
fs
lahf
jge
jne
out
bnd
dec
push
lcall
fs
fisubrs
aaa
aam
xchg
mov
add
testb
imul
cmp
or
leave
in
inc
adc
or
aaa
fnsave
add
inc
xchg
mov
mov
lods
sbb
push
es
dec
inc
jno
roll
jle
add
xor
adc
pop
push
popf
cmpsl
mov
push
out
jbe
cmp
adc
cmp
push
mov
lret
push
sahf
dec
pop
mov
in
movsb
loop
cmpsb
cwtl
pop
scas
inc
icebp
cmc
push
mov
js
gs
popa
mov
ret
les
mov
jecxz
scas
xchg
and
in
add
leave
lods
sbb
sub
or
cmc
dec
or
push
sahf
stos
xor
mov
and
mov
jbe
cmpsb
mov
sbb
xchg
jecxz
addr16
dec
aam
daa
leave
mov
cmp
aas
cmp
lahf
mov
clc
jecxz
pushf
call
inc
jg
decb
jg
inc
sbb
mov
cmp
dec
pushf
sub
ret
mov
mov
xchg
dec
or
add
lcall
pop
fcompl
aam
mov
rorb
add
iret
or
mov
mov
cmp
mov
dec
out
push
pushf
les
lahf
dec
ss
cmpsl
mov
jo
dec
out
sahf
pushf
out
bound
push
fidivrs
ds
jl
enter
pop
mov
mov
dec
xchg
lock
dec
int
adc
sub
imul
sbb
mov
xchg
push
js
out
lea
mov
jo
adc
inc
into
lret
push
push
xorl
mulb
mov
push
jge
jnp
gs
sbb
fistps
into
pop
idivb
push
jbe
push
mov
push
les
dec
daa
mov
push
out
and
lods
mov
xchg
arpl
inc
test
adc
mov
sub
das
pop
aad
movsl
mov
rol
aas
xor
or
test
lahf
mov
sbb
jecxz
xlat
mov
scas
data16
fsub
cmp
push
add
lret
negl
std
mov
fists
or
cwtl
sub
cmp
fstpl
and
cld
dec
stc
add
adc
mov
adc
movsl
rclb
lods
ja
jnp
and
jp
mov
arpl
stos
sub
int3
aas
stos
push
or
jo
out
out
pop
movsl
roll
fdivrs
add
cs
xor
sti
mov
push
sub
sarl
dec
loope
mov
adc
or
int
adc
mov
mov
add
scas
insb
xchg
sbb
jmp
popa
outsw
enter
jns
xchg
pop
out
outsb
ficoms
dec
cmp
mov
pop
pusha
mov
fsub
push
xchg
xchg
add
mov
pop
jnp
jbe
mov
cmpsb
lahf
daa
shrl
loopne
xor
lods
mov
test
inc
adc
mov
xchg
jnp
cmpsl
push
arpl
scas
inc
fidivrl
pop
push
push
movsl
mov
add
mov
add
addb
jmp
rorl
fwait
sub
push
push
xchg
mov
mov
pushf
jl
xchg
hlt
jnp
pop
mov
sub
inc
clc
or
xchg
ja
int
pop
mov
jge
dec
pop
lea
sub
aas
adc
out
lock
aaa
aad
push
sahf
inc
orl
mov
nop
push
mov
pop
in
add
mov
push
mov
fstpt
sbb
sbb
push
mov
mov
and
cmp
bound
inc
sar
push
rcrb
sub
imul
push
int3
stc
push
mov
sbb
jo
xchg
adc
jnp
jo
cs
sbb
adc
ficoml
dec
fimuls
in
pop
mov
push
add
outsl
sbb
jp
mov
sub
scas
mov
xchg
mov
pushf
subl
adcl
popa
lods
mov
mov
lods
call
mov
mov
addr16
orb
sub
mov
adc
adc
lret
movsb
iret
rcll
nop
sub
mov
and
fmull
lods
rclb
add
fisttpl
in
sbb
add
aam
mov
xchg
stos
mov
lcall
xor
loope
adc
push
adc
cmp
fdivs
lahf
xchg
in
int3
inc
sub
leave
jp
cld
outsl
lods
lret
mov
mov
mov
and
or
lock
adc
aam
mov
add
sbb
mov
and
cmc
xor
mov
jns
mov
jecxz
je
mov
push
stos
jo
outsb
outsb
jmp
insb
in
fisttpl
cwtl
mov
jne
xor
stos
mov
ljmp
cwtl
or
push
rcl
and
cmc
scas
out
jl
dec
lock
push
das
cmpsb
sbb
rorl
jmp
repnz
pop
push
push
dec
ret
fwait
cld
popf
icebp
aaa
add
ljmp
xchg
push
xchg
push
daa
adc
in
sbb
push
mov
adc
dec
out
mov
lea
push
cpuid
mov
xchg
xlat
add
pushf
mov
xor
push
sti
dec
sbb
fwait
loopne
lods
push
js
mov
sub
addr16
adc
outsl
cs
rorb
gs
lret
cld
sbb
scas
mov
hlt
ljmp
pop
cld
adc
cmpsb
adc
sti
jno
pushf
mov
pushf
pop
mov
daa
cmpsl
mov
aas
call
push
push
push
push
arpl
bound
sub
call
cmp
pop
outsb
cmp
mov
jns
and
jae
add
inc
push
lahf
mov
rcll
mov
jmp
jp
stc
out
insl
hlt
mov
sub
shl
pop
outsl
dec
mov
xor
xchg
stos
pop
in
add
xor
xor
dec
pop
cmp
int3
pop
push
inc
cmp
out
adc
nop
leave
mov
mov
and
push
mov
ja
in
push
sahf
adc
inc
shrl
add
inc
jne
sbb
adc
nop
push
out
push
fdivl
loop
adc
in
mov
mov
dec
dec
ret
dec
jmp
mov
adc
xchg
iret
sbb
jg
outsb
xchg
sti
jp
cmp
xchg
cmp
in
loopne
clc
jns
push
or
test
inc
addr16
setno
push
adc
dec
loope
pushl
mov
lea
loopne
insl
sub
inc
mov
and
and
push
inc
lahf
push
out
loopne
sub
inc
icebp
jns
mov
dec
and
push
shlb
and
nop
fcmovne
int
loope
loopne
out
inc
lods
aad
test
movsl
sub
lods
sub
hlt
cmp
test
lcall
mov
fs
mov
pop
imul
decb
add
sub
loope
adc
ficomps
adc
xchg
mov
clc
clc
push
jns
les
mov
pushf
aad
loop
add
mov
and
sub
jno
push
dec
dec
cld
mov
js
pop
xlat
mov
pusha
adc
cmp
cld
lea
pop
push
or
xchg
jbe
pop
push
sub
dec
inc
in
xchg
pop
jne
pop
jne
repz
lods
cmp
adc
sub
daa
jge
jg
push
add
inc
rcll
lret
mov
fsub
inc
lods
aaa
int
cltd
or
je
rclw
cs
lds
jae
cwtl
and
inc
mov
repz
lds
or
jle
in
adc
dec
data16
ja
subb
fs
push
cli
push
inc
mov
lret
xor
outsl
adc
or
mov
xchg
push
sub
adc
pushf
out
or
pop
addr16
cmc
pop
xchg
add
fstl
cmp
mov
nop
sbb
sahf
cltd
lahf
pop
xchg
shr
or
xor
incb
aas
add
mov
fmul
push
movsl
imul
arpl
push
negl
pop
or
cmp
outsl
mov
push
popf
push
dec
fmuls
sbb
lcall
int3
mull
test
jg
xor
adc
pop
pop
ss
loope
pop
inc
sti
bound
push
sub
and
push
cld
jae
xor
xchg
push
rolb
dec
inc
dec
push
add
je
pop
sbb
aad
or
sub
ja
or
mov
stc
xchg
cmpsl
mov
fiaddl
test
int3
mov
inc
mov
xchg
and
mov
lret
mov
dec
mov
pop
bts
sti
xchg
repnz
sahf
subl
or
pop
push
push
sub
add
hlt
and
ds
lret
or
mov
sbb
fwait
push
push
mov
pop
xor
test
ret
aam
jg
out
mov
out
ret
lret
loop
mov
mov
movsb
outsl
lcall
fnstsw
mov
sub
insb
mov
mov
leave
jecxz
shlb
out
sbb
or
in
jno
add
aas
pop
jne
pmaxub
lret
call
pushf
xchg
or
xchg
pop
loop
rclb
int3
loop
and
lods
jbe
out
xor
or
push
jle
shl
mov
and
jne
and
cmp
popa
addl
ja
mov
stos
mov
adc
movsl
mov
aam
in
idiv
mov
xor
pop
je
cs
add
dec
popa
mov
lahf
jl
jno
loopne
ret
push
dec
les
jne
xor
inc
roll
pop
das
std
rcl
test
xorb
in
dec
inc
dec
pop
mov
in
add
xor
jp
add
inc
push
jg
int
cltd
ret
xchg
lret
lret
aam
jb
and
cli
cmpsb
fs
xchg
push
stc
sub
cmpsb
jge
xor
push
lahf
enter
sub
jl
lods
ss
pop
sarb
insb
fdivrs
sub
jmp
dec
mov
or
or
dec
inc
adc
rcl
lea
popa
scas
scas
mov
xchg
lds
clc
or
dec
ret
mov
pop
xor
push
adc
ficomps
notl
push
rcll
mov
push
leave
rcr
or
insl
add
mov
shl
fnstcw
pop
aad
test
xchg
and
jg
in
mov
dec
jp
xor
mov
sub
dec
sub
add
xorb
mov
loope
imul
call
dec
jb
cmp
rclb
sbb
xchg
xor
loop
mov
jmp
pushf
pop
xor
add
daa
inc
add
nop
dec
jmp
add
dec
rorb
mov
sbb
mov
xor
test
mov
inc
lret
jnp
or
jg
cmp
push
and
mov
inc
arpl
inc
inc
mov
xor
push
cli
arpl
adc
insb
jl
and
pushf
in
hlt
jae
push
fwait
sbb
xchg
popf
xchg
dec
inc
aaa
push
sbb
out
test
data16
mov
pop
adc
push
insl
fsub
call
ret
test
mov
cld
lods
outsl
cs
fdivl
daa
shrl
rcll
mov
xchg
imul
in
pop
imul
jnp
pop
repnz
fmuls
insb
jne
mov
shlb
rcrl
xchg
jle
cmpsl
lods
adc
dec
data16
in
mov
or
nop
dec
out
adc
popf
ljmp
loopne
fsub
push
adc
xchg
xchg
dec
inc
adc
pop
shl
fmuls
mov
jmp
and
or
fistl
shll
push
pop
push
or
test
xor
and
movsb
push
mov
pop
jno
lcall
aas
pop
rol
mov
cmp
cltd
ficomps
sub
add
push
cmpsb
and
mov
leave
sub
cmpsb
mov
push
sub
ss
cltd
sub
repz
ja
jo
inc
dec
in
add
xchg
add
sbb
sti
jg
fisttpll
cmp
mov
mov
shl
or
iret
lcall
and
mov
mov
inc
cmp
enter
jns
lods
adc
xor
in
fistpll
push
shll
mov
cmc
daa
mull
arpl
xchg
out
mov
xchg
scas
cmpsl
mov
lods
outsb
daa
push
xchg
lock
jge
lock
test
cmc
xchg
adc
ljmp
or
pop
ret
insb
jge
loopne
sub
jo
add
push
sahf
loope
cmp
out
sub
dec
mov
je
push
dec
lcall
sti
xchg
push
dec
add
loop
push
jns
insl
mov
loop
insb
cmpsl
clc
and
or
and
test
mov
xor
mov
xchg
mov
mov
repnz
xor
icebp
lods
mov
mov
xor
subl
mov
fnstcw
fpatan
int
cmp
popf
fs
xchg
fildll
mov
adc
stc
mov
xor
jbe
sysret
insb
xor
xchg
push
mov
addr16
mov
imul
out
sub
push
andl
xor
pop
fsubs
ja
pushf
cmp
push
mov
sub
pop
xlat
cli
push
jns
adc
lret
mov
sarl
test
test
cmpsb
inc
lahf
aas
xor
dec
je
out
cmp
mov
dec
mov
add
dec
jo
ss
mov
push
xchg
fildl
pop
lcall
jae
xchg
push
mov
mov
in
js
pushf
mov
jae
lock
std
mov
icebp
std
and
cmp
pop
mov
bound
add
in
iret
mov
repnz
add
or
mov
int3
movsl
shr
sub
insl
jae
aaa
sub
push
test
out
jns
loope
jge
add
pop
in
or
movsl
mov
in
or
xor
ret
or
xlat
notb
mov
push
dec
inc
inc
rclb
adc
dec
xchg
ljmp
in
outsb
ror
push
jl
mov
into
xchg
out
subl
mov
push
int3
inc
arpl
push
jp
stc
scas
ret
lcall
icebp
lods
mov
xor
xor
adc
mov
pop
out
jns
fsub
or
cmc
shll
push
cmp
xor
xchg
mov
dec
xchg
push
fisubrs
pop
ja
xor
and
rcll
mul
negl
fwait
pop
fmulp
jne
pop
ds
nop
fidivs
inc
ret
repnz
push
dec
inc
cmp
or
inc
insl
cltd
inc
aam
out
xor
aad
dec
push
push
int3
xchg
cwtl
scas
ljmp
push
sti
fnstsw
imul
out
out
and
sbb
mov
sub
lea
and
adc
push
sbb
mov
fadds
and
enter
mov
adc
clc
cmpsb
es
pop
mov
or
arpl
cmp
fidivrl
sbb
push
jne
or
xchg
jg
mov
mov
lods
or
xchg
sub
lock
imul
cmpsb
cmp
aam
rol
mov
jmp
lret
cltd
pop
shll
std
outsl
ss
sarl
dec
idivb
inc
push
jae
popa
jo
in
call
shlb
push
add
mov
arpl
in
ljmp
jns
pop
outsl
sub
cmp
xchg
ljmp
cs
ja
inc
aam
sub
cli
mov
fiaddl
hlt
dec
jae
loope
js
sbb
sbb
push
cmpsl
mov
mov
jae
cmpb
adc
dec
mov
push
jns
mov
mov
push
cmp
mov
mov
xchg
inc
in
inc
mov
pop
mov
outsb
or
mov
push
das
push
pop
arpl
orb
jmp
xor
pmulhw
in
or
test
pop
push
shll
and
pop
mov
daa
jb
sub
aad
and
fwait
sbb
inc
out
movl
or
jmp
sbb
mov
jmp
ficompl
nop
dec
sarl
sbb
mov
add
push
das
and
je
mov
push
pop
lods
cmp
enter
rorl
pop
repnz
dec
adc
mov
pusha
mov
push
sbb
sarb
push
fistl
mov
testb
ljmp
cwtl
inc
mull
jne
mov
out
jp
dec
sub
sub
mov
add
clc
stc
lret
lock
jo
out
addr16
jbe
filds
pop
push
mov
inc
jae
fs
arpl
dec
dec
jmp
mov
popf
stos
popf
aam
insb
pmovmskb
bound
out
or
xchg
adc
xchg
fbld
sar
pushf
xchg
lahf
dec
sub
pop
scas
mov
mov
mov
add
inc
and
fsubr
out
aam
push
push
dec
fcoml
jp
mov
xor
adc
and
xor
fisttpl
addr16
insl
add
bound
ja
xlat
scas
negl
jecxz
jg
xlat
push
sub
incl
jno
push
fstps
sahf
lods
lods
xchg
mov
xchg
rol
cmc
xor
fcomp
lret
test
popl
inc
dec
push
inc
jecxz
push
inc
sub
push
insl
inc
test
es
in
int3
jb
rcl
jnp
sub
dec
and
adc
cmp
push
inc
fdivrl
pop
xor
pop
xor
and
data16
cmp
stos
aad
and
cmpsb
inc
leave
into
push
into
testb
push
mov
jecxz
cmp
int
aas
in
adc
int
insl
ljmp
and
aaa
adc
xchg
jbe
test
push
addl
mov
add
cmpsb
xor
rcl
cmpsb
fisttps
xchg
movsl
mov
pusha
bound
mov
xchg
cmp
inc
mov
dec
jb
pop
pop
sbb
lock
es
ljmp
jg
outsb
rolb
pop
ret
outsl
and
insb
dec
rcll
out
call
insb
and
insb
push
popf
pushf
call
mov
mov
icebp
mov
leave
add
ja
inc
mov
ja
cltd
leave
push
inc
adc
int
cmp
popf
and
ret
das
jle
insl
outsb
sub
push
cwtl
imul
loop
movsb
outsl
mov
adc
or
fwait
mov
jg
cli
std
out
loope
or
mov
xchg
rclb
cmp
insb
xchg
mov
rcr
sbb
ja
pushf
dec
mov
nop
xor
cmpsl
setge
mov
sbb
push
dec
mov
cli
xchg
lahf
cmpsl
ljmp
sbb
add
enter
adc
xchg
les
ljmp
lret
daa
jne
and
push
jo
movsb
lock
pop
sub
inc
das
sbb
scas
into
inc
xchg
sub
fs
xlat
jo
jl
out
mov
xor
xchg
pop
dec
popa
inc
ret
lret
or
pop
data16
cmp
xor
aam
or
sbb
sbb
orl
repz
inc
shrb
into
fmul
cmp
mov
dec
dec
xchg
into
adc
and
jl
sub
dec
lea
lahf
inc
ds
xchg
pop
or
and
cld
imul
loop
xchg
push
push
pcmpgtw
cwtl
loopne
push
push
out
mov
jle
dec
jge
or
xchg
mov
pop
pop
clc
cltd
pushf
loopne
lock
jl
fnstsw
lods
sbb
push
push
test
and
fidivrl
in
cwtl
add
inc
fisubrs
nop
es
fwait
divl
sbb
shrl
mov
adc
push
push
call
pop
daa
jmp
jae
mov
jbe
test
push
mov
push
add
fs
popa
arpl
lds
jge
bound
dec
shl
lock
xchg
pop
scas
jl
int3
jge
xchg
fcoml
daa
mov
mov
and
aam
and
sub
sub
inc
push
pop
lahf
cmp
jae
push
xor
push
insl
xor
jge
shlb
mov
sub
mov
pop
sbb
shlb
jae
and
push
lds
mov
mov
outsl
mov
add
hlt
push
jae
jmp
cmc
aas
mov
or
fwait
lcall
inc
mov
pop
mov
subl
xchg
jp
jp
xor
adc
mov
out
in
fimull
or
outsb
dec
in
sbb
imul
inc
shrb
push
xor
jns
or
jbe
icebp
pop
xchg
leave
loope
pop
icebp
test
push
adc
pop
repnz
xor
addr16
std
jge
fnsave
mov
aas
shlb
ret
sarl
mov
mov
insb
mov
movsb
sarb
lods
sub
dec
dec
adc
xorl
jae
stos
xor
cmp
imul
pop
sahf
inc
push
int
lock
and
std
sbb
cmp
xchg
lahf
sahf
xor
in
loop
pusha
stos
and
loop
out
stc
and
sub
xchg
fildll
add
cmp
mov
xchg
mov
cmpsb
xor
jp
add
sub
push
sbb
fwait
push
loopne
xor
inc
mov
idivl
in
push
mov
icebp
das
out
shrb
add
inc
push
idivb
sar
ret
sarb
shl
xchg
xchg
pusha
push
shr
dec
and
or
aaa
fisubrs
push
fistps
dec
cmc
imul
mov
outsb
lret
aad
imul
mov
cmp
mov
in
xor
aad
push
jecxz
pop
pop
cs
mov
arpl
or
push
sub
push
aas
or
mov
js
jnp
jae
adc
stos
lods
inc
mov
xchg
adc
ss
in
cmc
ss
adc
pop
js
sub
lods
cmp
mov
sub
mov
ja
ret
popf
flds
imul
mov
es
ljmp
cmpsl
xchg
fidivrl
push
xchg
popf
mov
mov
test
addl
fmul
das
cmp
lret
sahf
movsb
sub
dec
xor
sub
sbb
dec
sub
pushf
dec
stos
pop
dec
xor
mov
test
imul
or
in
push
mov
repz
and
insb
push
leave
sbb
lahf
adc
iret
rolb
cld
stos
psllw
cmpsb
or
xchg
push
test
mov
sub
or
push
or
xorb
cmpsl
and
and
sub
test
lock
enter
rolb
sbb
enter
insl
rep
inc
cmp
jno
stos
jmp
aam
xchg
repz
jne
sbb
jb
inc
cmp
in
mov
or
repnz
jno
and
mov
push
sti
mov
mov
mov
stos
mov
stc
cs
das
and
and
mov
push
mov
fwait
mov
xor
sbb
aas
jp,pt
bswap
in
adc
dec
cld
scas
and
popa
stos
int3
inc
adc
stos
cmpl
fisubrs
xorb
mov
mov
cmc
ficomps
cmc
dec
inc
cmp
jecxz
inc
jp
movb
icebp
pop
mov
bound
inc
int3
and
test
dec
aas
lret
sub
andl
rclb
cmp
gs
shll
dec
xlat
mov
or
imul
adc
push
cmp
sahf
out
dec
loope
fs
and
pusha
and
addb
pusha
add
mov
fs
ret
add
nop
enter
fcomps
icebp
cmp
lret
push
add
adc
cwtl
xor
fucomp
ret
xor
or
pop
cwtl
gs
movsb
aaa
test
mov
lret
outsb
xchg
inc
dec
dec
test
out
and
add
jne
addr16
cmpsl
jl
mov
movsl
andb
negb
mov
push
bound
leave
out
dec
adcl
xor
mov
add
int
adc
lret
fildll
or
mov
cmp
hlt
dec
in
icebp
xchg
outsl
push
cmp
xchg
pop
cmpsb
xor
jl
in
sub
pop
or
data16
sub
inc
sub
mov
push
in
push
push
xor
leave
adc
adc
shr
fwait
push
sbb
inc
jo
add
scas
test
daa
mov
mov
fcoml
xor
fildl
jecxz
pop
in
jns
lret
jp
faddl
das
or
int
ror
repz
pop
add
mov
jbe
or
adcb
adc
je
aad
dec
lods
dec
push
call
mov
fstp
jne
ljmp
insl
mov
out
insl
movsb
or
xchg
adc
or
out
stos
call
pop
dec
int3
scas
shlb
out
and
out
mov
iret
iret
inc
inc
xor
lods
sub
nop
sbb
out
mov
adc
or
sbb
aad
xor
ja
add
cmp
mov
int
cwtl
fbld
push
fisubrl
sub
test
dec
aad
loop
paddw
sbb
push
movsl
sbb
scas
icebp
aaa
cmp
push
out
in
cmp
movsb
out
lahf
lods
or
mov
cmpsb
jbe
lods
adc
data16
mov
lea
out
adc
pop
pop
jp
icebp
xor
scas
lahf
sarl
lret
dec
push
sahf
dec
jbe
ja
or
sbb
sbb
movl
loop
mov
stos
cld
sub
mov
mov
js
andb
fimull
sub
cmp
sbb
scas
sbb
cli
jecxz
xor
sub
imul
aam
sti
daa
mov
jecxz
lahf
jnp
add
and
das
xchg
repnz
add
cmp
pop
xchg
test
jge
pop
fcoml
bound
iret
je
jp
dec
xor
mov
cmp
mov
jns
dec
xor
mov
push
in
sub
push
filds
aam
xchg
aam
and
cmp
aas
xorb
mov
xchg
adcb
das
mov
daa
cmp
mov
pop
outsb
dec
out
mov
cltd
dec
cmpsl
lret
notb
and
pop
insb
mov
adc
enter
push
inc
mov
sbb
adc
mov
fwait
hlt
fistl
mov
je
dec
sbb
xor
ds
mov
lock
call
add
sub
dec
dec
adc
ficomps
push
es
inc
mov
jnp
arpl
sub
pop
mov
mov
stos
sbb
lds
and
out
xchg
mov
dec
icebp
push
in
outsb
sarl
lock
cmp
fwait
mov
or
loope
enter
xlat
sti
and
lods
mov
mov
or
xchg
push
stc
fidivrs
pushf
mov
mov
jg
jnp
fmulp
nop
es
and
sub
out
ss
mov
iret
lret
jo
cmp
xchg
push
xlat
inc
mov
fistl
pusha
push
sbb
pop
ret
jecxz
pop
lret
popl
xchg
pushf
rol
xor
mov
mov
movsl
cld
xchg
sub
inc
aam
dec
or
mov
in
sbb
mov
imul
pop
mov
movl
pop
cli
lret
mov
shll
mov
fstl
outsl
or
inc
mov
test
sub
add
mov
lods
fimull
or
out
mov
cltd
in
jns
or
fmuls
mov
push
ja
jns
das
adc
inc
mov
add
cmp
jo
jno
shlb
mov
fs
imul
jbe
jle
fs
cmp
repz
cld
jge
lahf
push
fldenv
xlat
pop
arpl
or
xchg
dec
in
pop
int
cli
inc
add
sub
inc
dec
adc
hlt
fnstsw
xor
adc
std
jo
lods
mov
out
xchg
xlat
addb
and
jle
ljmp
nop
sub
jb
add
enter
lret
mov
pop
es
push
and
pop
mov
xor
popa
idivl
adc
jbe
pop
sbb
js
or
mov
mov
test
out
fildll
ljmp
stos
and
pop
or
cmp
jecxz
mov
jne
out
jb
xchg
aaa
jge
push
cld
aas
cmp
daa
adc
sbb
add
ret
or
cmp
sub
xchg
sub
rolb
jmp
pop
push
nop
std
inc
sub
sub
js
sbb
iret
inc
adc
cwtl
in
rcl
jle
clc
hlt
pusha
leave
ljmp
lods
lahf
fs
pop
sbb
jp
popf
dec
jmp
cld
js
or
mov
mov
push
adc
or
add
mov
xchg
arpl
sub
sbb
ss
jg
push
dec
es
out
adc
xchg
sub
mov
lods
stos
mov
leave
dec
mov
movsb
popa
imull
aam
fisttps
test
inc
jno
jnp
fdivs
mov
out
xor
js
mov
push
aaa
out
aas
pop
jl
dec
cmp
lahf
inc
jae
rclb
jb
cmpsl
in
cs
shlb
mov
xchg
loope
mov
xchg
jp
push
popa
xchg
in
divl
cmp
das
out
pop
das
inc
icebp
lods
or
xor
adc
pusha
clc
pop
les
pop
cmp
pop
ljmp
sub
sub
imul
ret
inc
shrl
outsb
dec
out
push
xor
ds
adc
int
cmp
std
frstor
int
ret
push
bound
dec
mov
pop
es
jl
out
aad
mov
xor
mov
ret
xchg
std
adc
cmp
pop
inc
loopne
adc
aad
dec
mov
daa
push
add
push
sub
mov
sarl
lret
and
fistpll
mov
add
mov
jge
mov
fisttps
je
inc
mov
pop
mov
jmp
in
nop
aam
stos
and
daa
rorl
add
mov
out
out
lret
daa
or
mov
jl
out
add
mov
in
mov
pop
imul
sti
das
test
cmp
add
xchg
jb
jae
push
sbb
dec
sub
ds
xor
or
inc
nopl
ret
imul
fadds
fldlg2
mov
push
fstl
sbb
mov
fsub
mov
pop
mov
mov
adc
mov
jge
lods
or
pop
sub
jle
mov
cmp
cmpsl
nop
lea
loop
aaa
sbb
xor
mov
in
dec
mov
out
jp
subb
push
lds
fcmovnu
pop
sahf
pop
pop
xor
push
out
outsl
lcall
mov
loop
and
sti
sub
push
jae
mov
adc
daa
fstpl
xchg
push
sub
push
in
repz
gs
mov
jnp
stos
lds
js
inc
sbb
dec
fldl
movsb
dec
lret
sub
pop
jo
ss
jns
mov
pusha
shr
shl
sbb
cmp
out
jle
outsl
dec
fdivrs
shll
sti
xchg
sub
gs
cmpsb
fdivl
xchg
or
jo
cmp
mov
filds
dec
dec
pusha
cld
mov
fildl
mov
insl
or
insl
xchg
lret
stc
lds
js
out
arpl
xchg
dec
jne
mov
leave
dec
shrl
jmp
and
das
adc
adc
enter
xchg
jo
loopne
add
je
push
add
shll
jp
jo
push
mov
sbb
cli
cmp
ficompl
xlat
pop
cmc
lods
adc
sub
filds
add
pop
sahf
inc
adc
addl
lcall
xor
movb
outsl
pop
sbb
xor
inc
enter
jecxz
mov
orb
xchg
insb
imul
xchg
or
push
in
pusha
pop
mov
in
inc
enter
testb
call
jo
adcl
push
mull
mov
sbb
dec
mov
imul
pop
xor
and
mov
mov
mov
lea
fdivrp
pop
arpl
mov
mov
sbb
jl
gs
in
lds
mov
sbb
fs
lret
mov
enter
adc
pop
push
push
sbb
fucomi
mov
mov
jmp
lods
fxch
mov
sub
sar
movsb
xchg
xchg
cmpb
add
call
lret
mov
xchg
fildll
add
dec
jno
xlat
dec
cmp
and
pop
jbe
pop
dec
push
xchg
filds
inc
lods
mov
fwait
xchg
xchg
int3
aaa
test
cmpsl
adc
mov
pop
enter
pop
and
pushf
sub
inc
out
push
xchg
pop
dec
dec
mov
and
and
cwtl
leave
pop
xchg
pop
mov
ljmp
cmc
clc
call
xor
adc
addl
xchg
adc
shl
push
dec
js
push
mov
add
addl
out
cmp
sub
addb
sti
push
ja
mov
inc
add
imul
ss
push
push
and
push
jb
lahf
insl
xor
sahf
loope
xchg
repnz
lds
inc
adc
fnstcw
pop
xor
mov
subl
daa
mov
in
movsl
cld
lret
test
xchg
push
je
clc
dec
and
xorl
jg
and
shll
sbbl
loopne
addr16
in
mov
stos
jg
push
gs
cmp
mulb
xchg
adc
cld
push
and
movsl
sbb
or
sbb
rol
pop
fdivs
es
aad
xor
mov
test
pusha
jle
scas
subl
fimull
xchg
icebp
in
fdivr
arpl
dec
cmp
addr16
add
cli
imul
arpl
dec
cs
fists
jle
bound
cmpsl
cmpsl
adc
push
pop
xlat
jns
fsubp
arpl
mov
dec
dec
sbb
int3
stc
outsb
sub
cmpsl
xchg
fistl
lret
mov
pop
pop
hlt
fisttpll
test
cmp
mov
and
add
std
lea
xor
test
jg
inc
outsl
pop
enter
aas
das
cltd
stos
ljmp
subl
js
push
push
hlt
pushf
pop
pop
cmc
loop
add
fidivrs
sahf
jb
addr16
ds
gs
inc
je
cmpb
mov
push
jl
add
inc
cmp
leave
cltd
push
iret
lea
adc
hlt
pop
test
and
mov
sub
push
je
adc
outsb
iret
push
cmc
cmpsl
inc
test
test
mov
punpckldq
jp
je
cmpsl
insb
add
adc
push
inc
inc
add
js
int
imul
addb
and
jns
loopne
or
mov
cmp
lret
adc
push
or
test
jecxz
add
mov
push
notl
fmulp
dec
jecxz
sbb
push
dec
jb
in
jmp
enter
test
push
push
inc
and
into
mov
out
push
rorb
jns
xlat
imul
arpl
cli
mov
jmp
lock
push
outsl
xchg
cmc
xchg
ds
xchg
inc
push
push
pop
fldcw
in
push
in
popf
mov
xchg
test
out
out
test
fwait
arpl
dec
push
ret
in
add
adc
leave
xchg
sbb
pop
jae
xlat
daa
xlat
mov
cmpsl
add
test
ds
jns
dec
ds
enter
add
hlt
je
cmp
jns
ja
pushf
cs
cmp
inc
rclb
imul
lret
xor
xor
xchg
sbb
les
std
xlat
stc
pushf
add
lea
or
rcrl
insl
adc
flds
sbb
scas
pop
jmp
jp
xor
mov
in
sub
cli
push
push
ss
sub
pusha
mov
loopne
pusha
popa
sub
je
or
inc
roll
addl
imul
pop
sub
dec
mov
sbb
es
push
xchg
pop
bnd
insb
mov
sbb
sub
int3
sbb
and
setno
jnp
ret
cmp
out
orl
gs
inc
dec
jl
inc
movsl
mov
and
mov
test
cmp
scas
mov
pop
mov
xchg
out
push
leave
test
loop
dec
pop
and
pop
hlt
scas
mov
dec
aad
lock
add
aad
push
push
mov
pop
push
xchg
std
in
aam
das
add
outsb
mov
sahf
mov
lret
ja
in
xchg
lea
jmp
xor
mov
mov
ljmp
pop
or
mov
cli
cli
cmp
aad
mov
repnz
pop
push
cmp
cltd
scas
cmpb
jne
xor
mov
push
test
jp
sub
loope
pop
vpsllq
je
mov
fmulp
jns
adc
roll
mov
push
or
mov
stos
xor
sti
push
stc
ror
out
push
stos
mov
pop
mov
jle
fiadds
and
iret
jmp
leave
jmp
sahf
fsubrs
sahf
adc
pusha
scas
mov
movsl
leave
dec
iret
daa
and
sahf
in
cmp
and
loopne
int
jbe
push
or
inc
jbe
push
add
inc
je
dec
out
mov
mov
fidivl
clc
pop
pop
daa
mov
jg
arpl
cld
lcall
sbb
dec
outsb
ss
hlt
xor
pop
ja
mov
gs
dec
inc
in
adc
es
lock
inc
push
cmp
rcrl
cmp
cmp
push
mov
jge
fs
dec
mov
out
cmp
cli
xor
jl
je
and
xor
sub
jge
jge
or
mov
sbbb
inc
sbb
mov
pop
mov
lods
fcoml
fisubl
push
or
test
mov
mov
int
jg
mov
pop
fadds
incb
in
mov
push
psllw
pop
and
mov
cmp
xchg
in
or
mov
fwait
sub
push
mov
pop
mov
jmp
sub
testb
adc
cld
xor
xchg
repnz
and
dec
or
das
mov
jno
inc
mov
jmp
das
cmpsl
subb
pop
dec
cmc
pop
popa
pop
mov
mov
lds
mov
mov
inc
mov
lret
cmpsb
lret
test
xchg
std
jns
lods
mov
repz
jb
pop
mov
push
mov
je
idivb
sbb
stos
aas
lcall
cltd
dec
ret
mov
fsubrl
xor
xchg
sub
aam
aad
sbb
sbb
imul
int
adc
addl
xchg
repz
jnp
movsl
stc
std
lret
int3
mov
movsb
stc
sbb
adc
rcrl
jp
mov
or
test
incb
ret
aas
jne
push
fwait
xchg
int
push
cmp
sbb
push
mov
jp
mov
pop
cmc
jp
idivl
rcr
in
ljmp
jmp
movsb
outsl
inc
mov
xchg
push
pop
push
sbb
test
pop
cmp
mov
sub
mov
lock
and
sbb
push
mov
cmpsl
daa
adc
dec
lret
arpl
repnz
sbb
mov
cld
cmp
stos
push
es
push
fisubs
aam
test
adc
jns
mov
iret
in
jno
lahf
and
push
stos
cmp
dec
fstl
dec
cmp
pop
out
mov
and
xlat
mov
rol
test
scas
push
insb
jle
add
rol
int3
adc
call
jb
cwtl
or
and
sbb
xchg
mov
xchg
enter
das
daa
add
js
xchg
mov
lods
pop
push
add
add
mov
sahf
or
inc
std
mov
int
loope
dec
fsubrs
xchg
jb
xchg
lcall
dec
or
adc
pushf
lret
xchg
das
and
mov
movb
sub
jp
inc
adc
int3
jecxz
popf
es
inc
and
sub
lds
out
and
mov
cmc
mov
into
repnz
cmp
add
lds
mov
in
popa
push
mulb
daa
cs
push
mov
outsb
in
dec
lods
push
mov
ja
jle
xchg
push
sub
jns
mov
rcll
jns
adcl
pop
push
adc
cmp
sub
das
dec
sub
rcrl
addr16
sub
push
xchg
xchg
dec
rcll
idivb
imul
xor
jecxz
pop
mov
push
cmp
nop
cmc
sbb
mov
loopne
sub
pop
loopne
mov
iret
jne
lea
mov
dec
repz
js
data16
mov
fcmove
je
lods
xchg
aas
add
das
cmc
jp
and
ret
icebp
ds
repnz
mov
out
xlat
xchg
lock
lods
rcrl
outsl
jns
cmp
push
cwtl
jle
mov
lods
mov
cmp
popa
insb
pop
sub
cld
andnps
xor
and
loop
mov
dec
mov
addr16
jl
sub
mov
fdivrl
into
push
out
fisubrs
inc
sbb
push
push
loope
mov
imul
add
fcmovne
ds
xor
outsl
test
or
out
roll
adc
je
cmp
cmp
pop
pop
push
or
sbb
cld
mov
pop
in
jmp
stos
lahf
stc
xor
push
call
gs
fcomi
aaa
xorl
xor
inc
sub
fmuls
sbb
or
mov
xor
jmp
sbb
lods
out
cmpsl
ficompl
cs
pop
icebp
lret
mov
lods
cmp
dec
add
and
sbb
das
xchg
mov
or
push
adc
adc
jne
or
sub
fxch
ss
lock
rolb
insb
inc
lea
je
popf
inc
lret
dec
dec
add
ss
cltd
decl
cld
in
push
push
jl
push
ret
orb
in
jo
shll
pushf
int3
fwait
sarb
push
pop
arpl
fcmovnbe
push
dec
pop
jle
jno
mov
sbbb
stos
sbb
out
ja
and
fildl
jecxz
imul
les
mov
out
push
sbbl
fucom
jle
dec
sbbl
or
sbb
lea
dec
mov
shrl
or
push
mov
sar
pop
shlb
xor
arpl
add
loope
subl
psadbw
iret
ret
stos
icebp
sbb
push
dec
pop
add
push
jns
jne
cmp
push
into
cwtl
mov
jg
or
xor
stos
push
mov
outsl
cmp
mulb
and
fnstcw
xor
outsl
jns
dec
jmp
jmp
adc
outsl
test
sub
xchg
lods
das
outsl
int
imul
ss
rcll
mov
lcall
loopne
addr16
mov
push
dec
xchg
int
xchg
inc
push
ja
mov
fimull
add
fisttpll
dec
sbb
lds
jae
lcall
cmc
addr16
ja
cmp
jle
jbe
mov
lock
pusha
mov
jbe
sub
lods
popf
pop
out
data16
fstpl
xchg
add
jp
cltd
test
sbb
inc
mov
cmp
jecxz
pop
mov
cmpsb
ljmp
pop
rclb
mov
pop
and
cmpl
fwait
and
ret
or
xchg
and
xor
jl
aaa
xchg
flds
jne
es
cmp
out
mov
lock
das
sub
aaa
sub
push
dec
shll
push
mov
lahf
dec
das
xchg
ret
dec
fldenv
sbb
shlb
jne
insl
pop
addb
repz
cs
cmp
add
hlt
inc
xchg
adc
in
arpl
xor
or
lods
jp
aaa
cmp
clc
psubb
shl
shr
cmc
ja
lcall
repnz
and
mov
stos
cs
mov
pop
ret
in
arpl
js
mov
jae
push
push
sbb
out
jo
jnp
mov
add
jne
xor
sub
push
sbb
push
mov
sub
push
and
arpl
add
arpl
sbb
add
xchg
and
in
test
inc
xchg
jne
lcall
fidivrl
push
xlat
out
xchg
test
xor
fisubrl
jp
sbb
pusha
test
mov
fs
inc
dec
sub
inc
ds
imul
enter
js
stos
leave
sbb
add
lock
push
sbb
inc
xor
adc
ret
lods
inc
inc
xor
aas
adc
sbb
jnp
imul
rcrb
add
rorb
es
bound
cmp
dec
icebp
jae
das
les
mov
test
mov
pushf
orb
ja
adcb
xchg
gs
xchg
pop
fdiv
into
xlat
fmull
jno
test
mov
pop
mov
aas
mov
movsb
enter
dec
xor
fcoml
js
sbb
inc
mov
aam
out
inc
cli
add
fisubrl
push
aas
jo
mov
in
inc
fisubrl
sub
pop
iret
mov
ja
mov
xor
mov
popa
pushf
sbb
xchg
cs
mov
pand
add
imul
sahf
lahf
mov
xchg
dec
fs
test
add
test
shrb
sub
shl
inc
mov
sub
pop
jmp
pop
xchg
and
sarl
xchg
loope
inc
cmp
idivl
jo
lock
and
and
or
test
sbb
or
insb
cmc
outsl
fidivl
loopne
inc
and
test
xlat
mov
inc
adc
loop
dec
orb
mov
data16
xor
adcb
pop
jg
xchg
add
popa
cmpsb
push
and
xchg
inc
and
cwtl
ds
mov
lock
fndisi(8087
lods
into
cmc
cmp
aam
scas
sahf
xor
andl
push
xlat
cmp
lods
pop
push
lret
xor
adc
inc
fimuls
shll
inc
jnp
aaa
jbe
xchg
stos
mov
dec
mov
or
andl
mov
jbe
pop
xchg
movsb
pop
roll
cltd
cmp
sub
data16
cltd
cmp
bound
sub
push
and
out
aas
push
movsl
prefetch
or
outsl
out
loopne
sti
fdivrp
xor
adc
sub
xchg
outsl
out
fnstenv
sub
loope
and
lds
movsb
or
jmp
fdivs
add
xchg
leave
in
jg
adc
mov
mull
mov
sbb
add
xor
ret
clc
push
aad
idivl
lret
lret
jge
jle
test
stos
jecxz
ds
mov
mov
dec
pop
mov
rolb
lods
mov
mov
add
icebp
jno
repz
adcb
inc
lock
imul
mov
sub
cld
out
shll
lds
movsl
or
movb
pop
lret
rcrb
xchg
xor
mov
lcall
jge
bound
push
into
ljmp
js
or
sbb
jecxz
ljmp
mov
ljmp
call
sub
sbb
xor
mov
adc
xor
and
xchg
dec
aaa
jno
dec
sbb
loop
dec
add
mov
sub
in
jns
popa
push
cmp
mov
adc
incb
pop
test
mov
adc
shl
popf
jp
lods
inc
imul
xorb
cld
mov
ret
and
loopne
sbb
lcall
lods
in
jnp
jnp
pop
push
fisubrs
aam
jno
mov
xchg
jb
and
fdivs
lods
sub
aam
adc
push
daa
cmp
inc
js
fidivrl
shlb
cmp
fwait
add
fstpt
frstor
aaa
fs
movsb
clc
cltd
jne
inc
xor
gs
sti
adc
pop
dec
cmc
lsl
jb
idiv
popa
push
scas
cld
cmc
adc
xorb
int3
xchg
xor
sbb
insl
cmp
sbb
and
jno
jbe
fdivl
jbe
lret
adc
pop
xchg
dec
repnz
shr
arpl
cli
in
cmpsb
shlb
ss
fisubrs
sbb
adc
test
call
mov
add
and
push
jbe
xor
pusha
int3
adc
inc
push
inc
mov
push
adc
call
push
xor
sub
shrl
mov
lret
lahf
and
fwait
adc
aad
push
pop
daa
cmp
aam
inc
orb
dec
jle
test
dec
hlt
cmp
and
pushf
cli
xor
lret
sbb
add
mov
jmp
sbb
push
adc
aam
into
pop
stos
rcl
paddusb
fnstsw
push
gs
jge
mov
enter
mov
xor
imul
lret
dec
lcall
pop
scas
pop
dec
das
pop
jno
rcrb
xchg
add
addl
mov
fists
shlb
movl
ss
pop
jb
push
mov
pop
cmc
mov
inc
sbb
nop
lock
test
data16
xor
int
cli
iret
pusha
dec
shll
ljmp
icebp
jmp
outsb
jno
mov
ret
movaps
sbb
mov
pop
add
ss
cmp
xchg
bnd
xor
mov
add
adc
and
pusha
pop
mov
cmp
sbb
jecxz
int3
enter
std
jmp
mov
jnp
xchg
imul
popa
or
push
and
add
lcall
jns
insl
scas
cmc
aas
sbb
sub
inc
out
in
xlat
enter
mov
jle
fimull
jnp
push
inc
test
xchg
test
sbb
and
sub
mov
fiaddl
mov
shlb
pop
enter
mov
jg
clc
pop
es
jns
scas
adc
insb
dec
in
jo
or
repnz
cmpsb
push
jg
mov
ret
popf
sub
or
dec
cmp
nop
mov
push
pop
lods
sbb
std
movsb
cli
pop
leave
inc
ret
pop
stos
dec
pop
cwtl
out
mov
addr16
leave
add
scas
dec
push
mov
dec
out
mov
dec
bound
inc
pop
sub
adcl
aas
mov
lret
ljmp
mov
add
mov
repnz
and
push
sub
add
push
inc
inc
jae
sbb
cmp
inc
sub
mov
decb
and
or
mov
movsl
int
outsl
test
jp
cmp
add
pop
dec
ljmp
pusha
add
fiaddl
out
insl
arpl
inc
popa
inc
fimull
mov
js
lock
iret
push
cmp
mov
icebp
fisttps
mov
lcall
xchg
dec
push
in
jle
in
data16
insl
lock
fbld
dec
fwait
in
adc
cltd
test
inc
lret
fcmovnbe
leave
das
pop
push
inc
fcoms
mov
lret
push
add
lods
add
test
xorb
or
and
or
mov
mov
sub
push
jmp
out
inc
jo
leave
lea
out
int
insb
sbb
jbe
std
aad
and
pusha
push
xchg
add
repz
mov
cmp
jbe
inc
xor
jmp
cmp
mov
adc
sub
adcl
xchg
in
xor
jb
aas
pop
jbe
nop
and
inc
ja
add
xlat
jmp
arpl
loop
int
int
rol
add
lds
xor
sbb
popa
or
jmp
jl
arpl
je
add
xor
fs
in
test
mov
arpl
cwtl
cmp
pop
gs
pop
enter
sahf
and
rcl
gs
negb
cmp
aad
pusha
iret
add
add
dec
mulb
jno
shrl
in
push
hlt
scas
or
sbb
jle
xchg
scas
sub
pop
lahf
and
nop
push
cmp
push
cld
pop
fwait
imul
jno
imul
add
es
lock
xchg
ret
fisttps
or
cmpb
les
pop
pop
xor
je
cld
leave
call
adc
das
mov
stos
jne
xchg
pop
repz
push
shll
pop
mov
jne
push
mov
sub
or
pop
sbb
lock
add
xor
sbb
cmpb
pop
add
or
mov
mov
bound
push
imul
insl
js
icebp
scas
mov
stc
adcl
xchg
stos
mov
push
gs
pop
and
movntps
lret
inc
push
jae
mov
sbb
jbe
subl
mov
sub
rorb
in
or
mov
fstpt
xchg
ret
dec
mov
push
or
xchg
imul
insl
jle
inc
rcrb
and
shlb
ja
ret
out
or
dec
xchg
pushf
lock
pusha
add
lea
add
hlt
in
out
push
inc
mov
adc
inc
lret
imul
out
inc
add
mov
leave
ficompl
xchg
popf
inc
call
into
adc
hlt
loopne
inc
mov
loop
cltd
xor
test
fwait
xor
adc
sub
les
mov
add
repz
mov
inc
mov
add
jbe
sbbb
pop
mov
jnp
cmp
xchg
daa
mov
push
stos
jg
push
dec
adc
sbb
inc
pop
push
icebp
sub
insb
push
push
add
insb
push
in
in
lahf
cmp
xchg
sahf
cltd
xlat
xchg
xor
push
fadd
js
in
in
adc
xor
push
addr16
add
add
cmp
push
les
lods
and
outsl
pop
add
cmpsb
rcr
xchg
mov
mov
pop
int
test
js
scas
mov
lret
std
jmp
shl
jle
cwtl
sub
inc
sbb
and
pushf
movsb
sbb
mov
inc
ljmp
inc
cmc
stos
pop
stc
les
cmp
popf
inc
xor
test
imul
mov
repz
jnp
sahf
sti
mov
dec
shrb
dec
sarb
push
out
repnz
in
jnp
sub
fnstcw
jno
lock
mov
sub
lock
cmpsl
dec
xchg
out
add
fiaddl
insl
push
shlb
shl
call
xchg
subl
les
nop
call
arpl
jmp
mov
scas
mov
mov
inc
roll
xchg
xchg
inc
adc
cmc
pop
sbb
pop
testl
cli
cmp
gs
xlat
adc
repnz
and
out
xchg
mov
jbe
pop
push
inc
pushl
pop
jo
sahf
repz
enter
xor
loopne
jne
push
outsl
mov
jle
add
add
dec
mov
inc
pusha
frstor
inc
aad
and
add
mov
les
and
pop
jle
movsl
repz
addr16
popf
add
adc
sbbb
mov
push
test
cmp
sub
stc
jle
push
jnp
xchg
cmp
imul
or
sbb
dec
ret
add
nop
cmc
sub
movsb
test
adc
mov
enter
pop
bound
xchg
xchg
dec
ss
fsts
aaa
std
test
push
xor
and
mov
lret
repnz
add
popf
sbb
lods
xchg
js
clc
pop
push
jno
jle
sti
push
or
mov
test
jb
repz
sub
xchg
andb
adc
dec
fadd
int
rcll
mov
sbb
sub
fcompl
repnz
push
push
movsl
sbb
movsb
xchg
int
cmpsb
ja
stos
lock
add
es
jno
push
xchg
dec
je
pop
add
cmp
cli
inc
mov
mov
jecxz
add
sahf
dec
ja
ret
arpl
xor
and
xor
cmp
pop
mov
dec
or
adc
repnz
mov
or
std
jnp
mov
in
stos
nop
out
aad
loopne
les
rcrl
inc
jne
mov
cmpsl
pop
mov
and
mov
and
in
xchg
and
cmpsl
and
out
popf
pop
js
add
lods
sbb
mov
insb
lea
inc
rorl
fwait
dec
mov
jns
jne
fucom
dec
jge
js
flds
test
ss
jmp
imulb
dec
dec
inc
scas
out
mov
lret
call
test
roll
add
jb
jg
xchg
pop
adc
inc
xor
ficoms
in
jg
shlb
mov
imul
dec
jb
sbb
xchg
jno
cmc
movsl
incb
cwtl
fadds
cmp
rcll
sbb
dec
mov
mov
mov
pop
inc
pop
ffree
addr16
push
add
aas
jno
adc
fcoms
add
inc
pop
inc
popf
add
ljmp
add
jmp
data16
repnz
rorl
fnsave
mov
lock
lods
fwait
jmp
push
rcll
bound
imul
loopne
in
jb
dec
and
rcll
scas
loope
pop
clc
mov
stos
outsl
mov
jle
lcall
push
aam
mov
jo
cld
ret
cmpsl
sbb
jno
sbb
push
mov
sahf
ds
es
loop
push
popf
les
dec
insl
test
pusha
mov
dec
xchg
xchg
pop
add
pop
fadds
movsb
and
xor
push
mov
push
ret
xchg
sub
xchg
pop
cmpsl
jp
dec
das
int
xor
mov
daa
pop
nop
mov
push
add
mov
out
push
jno
cltd
loopne
jmp
aas
addr16
daa
addb
shrl
xchg
ds
xchg
xor
ret
cmp
and
xlat
in
inc
inc
stc
mov
cmc
in
sbb
cmp
es
push
ret
pop
mov
push
cmp
fs
pop
mov
cs
es
imulb
mov
mov
push
cld
pop
test
push
mulb
pushf
and
nop
jp
fwait
stos
sbb
sbb
sub
xchg
sbb
mov
lods
sub
or
pusha
int
sub
fcmovbe
mov
sahf
mov
fldt
cld
sahf
and
jo
xchg
movsl
loopne
clc
push
add
cmp
sahf
repz
shll
mov
ret
sbb
pop
ret
dec
xlat
in
shrl
pop
out
fnstenv
cmp
lods
mov
lock
push
test
pop
cmpsl
push
jp
push
xchg
ret
and
call
movsl
into
cmpsl
leave
push
lahf
incl
adcl
dec
jo
mov
add
or
pop
sbb
bound
push
or
sub
fiadds
movsl
jns
jge
adc
and
dec
idivb
pop
mov
les
adc
cmp
mov
lea
dec
sub
or
add
pusha
dec
mov
xchg
jg
push
push
sti
aas
mov
pop
lcall
test
je
mov
push
les
jno
dec
into
adc
push
sbb
mov
add
mov
mov
sbb
rcr
cld
pop
pushf
mov
xchg
les
aam
popa
or
mov
test
dec
mov
ljmp
test
popa
sub
imul
adc
jmp
ja
push
inc
lods
adc
movsl
jo
movsb
test
fsts
cwtl
lds
lret
mov
add
das
cltd
mov
mov
in
in
lcall
xchg
mov
lahf
neg
fcoml
or
pop
repz
insl
jae
js
stc
fstps
lea
fisttpl
sbb
repz
cmp
in
ror
scas
cmpsl
cmp
arpl
cwtl
es
sahf
inc
dec
sbb
sbb
jno
hlt
dec
cli
adc
inc
xchg
stc
xlat
loope
sarb
pop
test
in
jecxz
xor
mov
iret
mov
adc
pop
ja
arpl
cmp
pop
sub
or
call
notb
rorb
dec
jno
sub
jns
adc
add
adc
mov
in
sahf
push
xchg
push
jb
test
adc
mov
push
adc
aaa
inc
test
fmuls
push
cs
mov
icebp
pop
out
dec
push
push
add
pop
and
lock
lds
pop
cwtl
pop
push
les
outsb
mov
imul
call
inc
xchg
out
daa
mov
cltd
or
out
sarb
add
aaa
cli
gs
sub
mov
std
jecxz
fbld
clc
pop
push
sbb
lock
nop
push
std
std
sahf
push
adcl
mov
in
pop
in
ss
mov
jecxz
arpl
or
repnz
push
mov
jmp
add
xchg
inc
or
stos
pop
dec
insb
push
fwait
mov
lahf
imul
cmp
ret
jb
mov
add
dec
push
sti
mov
cld
enter
adc
and
lahf
cmc
or
mov
cmpsl
xchg
or
or
mov
lahf
add
adc
jl
sub
clc
ds
add
ljmp
aas
arpl
cmpsb
cmp
pushf
shrl
mov
add
sub
out
lods
popf
fneni(8087
shlb
push
push
out
fisttpl
cmc
pop
out
gs
push
pop
iret
sub
fs
fmull
and
imul
mov
and
xor
dec
outsl
inc
mov
mov
addr16
or
nop
cli
jg
pop
xchg
pusha
push
xchg
push
fsts
dec
and
or
js
xchg
dec
and
test
jecxz
sti
aam
dec
shll
out
lock
push
rorb
iret
push
mov
add
into
outsl
xor
sbb
or
aad
mov
arpl
push
mov
test
jns
push
push
or
mov
sbb
mov
outsb
mov
jmp
nop
sub
lds
sub
jp
das
sub
jo
js
fldln2
cmc
outsl
das
mov
and
cltd
and
lahf
pusha
imull
repnz
dec
and
idivb
mov
and
and
push
cmp
lcall
add
shll
mov
cmp
sahf
test
jmp
call
jb
mov
imul
loope
rolb
movsl
jnp
mov
pop
cltd
push
xchg
lret
dec
hlt
xchg
xor
outsb
imul
jl
js
outsb
cvtps2pd
testb
or
test
in
xor
pop
xchg
stos
pop
pop
dec
lret
out
imul
mov
imul
sbbb
test
popf
inc
sbb
lea
fbstp
xor
xchg
mov
xchg
jne
rcr
add
ffree
repz
out
mov
xchg
push
jge
clc
lcall
adc
outsl
inc
add
ret
inc
pop
lret
push
sti
ljmp
add
out
cmp
mov
mov
push
and
cmpsl
mov
out
jmp
mov
pop
mov
aam
out
int
xchg
mov
mov
les
loope
sahf
cmp
dec
vpmadcswd
mov
lret
fcompl
jp
cmpl
bnd
push
xchg
and
mov
fdivrs
inc
popa
jo
mov
hlt
or
dec
jecxz
icebp
push
mov
rorl
mov
movsl
jo
inc
push
and
movsb
mov
fwait
jle
cmp
stc
inc
add
mov
xor
bound
insl
mov
es
jecxz
iret
sub
aad
lret
xchg
es
pop
xchg
jmp
insb
inc
lret
push
hlt
ja
inc
scas
and
xchg
mov
mov
dec
jno
scas
jg
nop
dec
lds
mov
jae
out
pop
ja
mov
push
in
sbb
push
jmp
adc
insl
xchg
cmc
and
sbb
xchg
stos
mov
cld
adc
aam
insb
sub
pop
sub
lea
cld
cld
dec
aam
inc
xor
mov
movsb
push
dec
jb
mov
cmp
sub
or
mov
xchg
mov
lock
and
push
jb
adc
adc
push
loopne
bound
and
arpl
fpatan
and
fptan
lcall
push
cmp
cmp
push
push
fbld
or
adc
insl
stc
push
dec
xor
lahf
jl
dec
rolb
icebp
adc
mov
xchg
mov
xchg
scas
and
mov
loop
push
mov
jb
fucomi
jno
mov
adc
loopne
out
scas
cmp
lahf
inc
das
pushf
jmp
cmpsl
aaa
fst
lret
out
imul
and
into
xchg
jg
shlb
loop
jae
dec
pop
out
xor
sub
dec
inc
stc
nop
adc
pop
mov
bswap
psllq
jbe
arpl
sbb
loope
sbb
scas
push
sbbb
mov
and
sbb
push
lret
pop
aam
int3
rorb
or
mov
xor
int3
aad
loope
outsl
loop
pop
pop
mov
jecxz
xchg
incl
insl
call
fildl
lea
sub
into
fdivp
ds
mov
js
sbb
ficoms
out
insb
addr16
addr16
mov
loopne
push
in
mov
xorb
xchg
fisttpl
or
ret
mov
mulb
iret
fwait
es
jmp
jb
inc
pop
cmp
outsl
aad
or
stos
cmp
adc
xchg
dec
cmpsl
leave
int3
testb
iret
scas
daa
add
sbb
repz
lods
mov
sahf
inc
xor
fwait
dec
aaa
nop
pop
pop
adc
add
xor
pop
sub
mov
repz
icebp
sub
mov
hlt
ret
roll
cmp
or
sbb
imul
shl
sub
scas
push
dec
aad
xchg
pop
jp
cli
jecxz
pop
fists
imul
xchg
mov
jge
sbb
push
dec
and
pusha
inc
cmpsl
mov
mov
jbe
ds
out
xchg
inc
lods
and
andl
mov
movups
xor
mov
pop
pop
mov
mov
daa
xchg
daa
lds
inc
cltd
push
sub
push
pop
inc
mov
sbb
in
pop
push
shl
clc
loopne
clc
cmpsb
dec
sub
mov
sarb
fsubs
ret
fsincos
daa
imul
pop
mov
push
addb
sbb
insb
scas
mov
incb
lret
inc
iret
xor
add
dec
lea
cmp
mov
mov
lds
add
gs
and
aam
add
mov
lea
fnstcw
add
jae
mov
scas
mov
or
call
outsl
or
add
jno
gs
outsl
adc
dec
shll
adc
xchg
int
cmp
out
test
aad
neg
cmp
jo
sub
iret
xchg
mov
test
icebp
inc
addl
jno
movsb
cli
ret
nop
iret
mov
test
sbb
mov
pop
push
mov
dec
adc
adc
mov
mov
outsl
xor
aad
andb
dec
stos
mov
jns
dec
testb
inc
or
aaa
jge
jmp
cli
scas
mov
lret
adc
movsb
out
orl
cld
cpuid
jb
dec
das
ds
jle
jmp
or
ljmp
jg
push
orb
loopne
sub
ficoms
pop
int3
push
lods
pop
js
out
jg,pn
lea
gs
in
cmp
or
sub
push
mov
jmp
push
scas
sti
or
adc
jo
dec
shlb
nop
push
mov
dec
sub
mul
adc
xchg
or
mov
push
dec
jge
mov
pop
scas
sub
pop
push
jnp
filds
test
loopne
sti
call
dec
and
aas
pop
mov
push
cld
cwtl
sar
inc
dec
push
enter
test
pusha
adc
sub
xchg
cmpsl
push
inc
xchg
mov
xchg
cmp
insb
jmp
cs
roll
stos
pop
push
mov
or
jmp
aam
push
cmpsb
inc
imul
pop
dec
mov
and
add
outsb
sahf
fisttpll
je
sbb
cmp
fimull
ficompl
sbb
loop
jb
pop
fldl
clc
imul
add
jle
jb
mov
out
inc
sbb
out
pop
rorl
mov
xchg
movsb
shl
loopne
jp
cmp
mov
or
test
mov
dec
ret
cmpsb
mov
and
and
xor
loopne
pop
xchg
repnz
es
lcall
mov
or
cmp
pop
jne
push
outsb
mov
je
mov
das
in
fnsave
rorb
aad
int
jbe
adc
mov
xchg
movsb
ret
cltd
xchg
mov
out
in
ss
inc
loopne
lods
cmp
cmpsl
xor
xlat
pusha
cmp
add
mov
inc
jle
popf
cmpsb
fsubr
push
lea
aam
rclb
dec
ja
xchg
xlat
inc
mov
xchg
ss
sbb
pmaxub
fcompl
mov
dec
mov
sbb
ds
iret
lret
push
pushf
dec
sub
or
mov
in
jo
xor
mov
adc
out
or
push
adc
xchg
pusha
pop
pop
pop
mov
xchg
lcall
mov
cmp
loop
lret
lret
adc
xchg
dec
sbb
pop
repnz
call
and
int
xor
shll
out
mov
pop
jbe
push
dec
jecxz
stos
stos
loope
cld
hlt
xchg
js
jle
mov
je
das
sub
push
mov
addl
cld
sub
inc
sbb
jecxz
sbb
stc
sahf
or
lret
xor
and
out
push
xchg
dec
fidivrl
inc
or
adc
xor
jne,pn
add
dec
mov
mov
imul
test
sub
mov
hlt
dec
ds
or
mov
andl
push
mov
or
rorb
mov
mov
fisttps
pop
fs
fwait
ja
pop
test
or
mov
fildll
sbb
sub
clc
sbb
pop
addl
mov
arpl
femms
movsb
fists
xor
fs
in
cmp
daa
call
xchg
in
mov
out
jb
test
cltd
dec
cwtl
decb
sub
fadd
std
pushf
push
pop
xor
jl
add
test
and
and
add
jmp
mov
xlat
cli
jb
and
pop
roll
mov
mov
mov
or
inc
in
out
aaa
arpl
pop
cmc
adc
lods
cmpsl
cmpsl
arpl
add
out
push
in
aaa
in
idiv
stos
insl
out
mov
mov
dec
dec
dec
push
xchg
out
push
pop
leave
jl
enter
les
jae
lods
orb
cwtl
cs
push
dec
stos
gs
inc
pop
cmpsb
pop
lahf
aam
sbb
mov
mov
mov
add
pop
repnz
setns
xchg
add
inc
add
popa
fcomps
rcrl
repz
pushf
ret
inc
cwtl
xor
jp
aad
add
stos
ljmp
imul
xor
cmp
scas
aas
mov
mov
dec
scas
nop
adc
lods
test
mov
pop
add
ss
sub
jmp
loope
cs
inc
repz
mov
lods
pop
rcr
inc
xchg
mov
daa
push
js
and
imul
push
fcoml
ret
pushf
sub
ss
nop
push
pop
pop
mov
and
and
fisttpl
jne
mov
jbe
orl
adc
les
inc
cli
insl
pop
sub
iret
cmc
jns
das
inc
es
push
in
mov
adc
dec
imul
jmp
mov
cmpsb
bound
insl
or
icebp
cmp
movb
or
push
test
je
xchg
lds
rcrl
cmp
inc
mov
fldcw
iret
jae
shll
cmp
xchg
xor
je
inc
inc
mov
inc
push
ds
lock
sti
mov
jne
cltd
xchg
adc
mov
mov
loope
sub
mulb
push
mov
or
aaa
jo
pop
imul
mov
adc
bound
ret
cmp
js
test
mov
ds
arpl
ja
mov
mov
or
adc
cmc
xor
jo
jo
jge
xor
inc
cmp
cmp
sbbb
add
sub
leave
test
jno
hlt
int3
dec
add
push
mov
cli
pop
pop
das
cmp
add
in
rorb
mov
push
dec
inc
cld
dec
dec
aas
inc
outsl
aad
daa
xor
inc
mov
dec
push
pop
push
hlt
or
int
mov
ljmp
push
outsl
pop
dec
syscall
lods
sti
inc
loopne
jae
or
and
mov
cmp
mov
jge
stc
lret
in
pop
cmpsl
jmp
daa
mov
jbe
and
push
pop
testl
push
pop
sub
mov
xchg
add
fcoml
mov
cld
pop
jns
imul
add
mov
sub
pop
into
sbb
dec
sbb
cs
cmp
es
lock
sbb
xchg
dec
inc
sbb
cmp
xor
int3
popf
movsb
into
sub
fidivs
pop
and
shlb
push
divb
or
pop
xor
add
bound
ficoms
stos
mov
aaa
mov
fidivrs
jg
icebp
or
xor
xchg
fs
mov
fcoml
aam
sti
fadd
push
xlat
es
nop
sub
scas
and
mov
addr16
cltd
cmp
bound
decl
xchg
cmp
aam
xchg
mov
int
push
imul
jno
cmp
loope
jmp
xor
pop
and
sti
xlat
sub
repz
mov
xchg
pop
cmp
pop
adc
rcll
mov
outsb
insl
repz
aam
xchg
mov
sub
pop
adc
mov
pop
fidivl
pop
pop
test
adc
and
xorb
frstpm(287
aad
in
and
mov
scas
mov
testl
mov
mov
and
push
inc
test
adc
out
dec
inc
mov
rcrl
sbb
jmp
pop
fstpt
pop
lock
js
out
inc
outsl
cmp
mov
ss
mov
ret
mov
dec
xlat
mov
push
shrb
arpl
mov
jae
sbb
movsl
scas
mov
lcall
mov
aad
dec
xchg
and
ror
neg
cmp
sub
mov
cmp
mov
inc
pop
orl
lock
cmp
push
pop
nop
mov
dec
xchg
out
mov
fisubrs
sub
lds
push
inc
dec
adc
adcb
jo
adc
jns
mov
hlt
aad
sub
cmpsl
push
pushf
cmp
xor
cld
and
mov
fs
mov
into
mov
jns
inc
or
adc
insb
insb
mov
xor
hlt
stc
xchg
pop
pop
mov
jns
pusha
sbb
mov
call
mov
jno
inc
sbb
cmp
fistps
les
cli
out
push
jmp
cmp
cmp
lds
aaa
inc
xchg
loop
lods
ret
aaa
jmp
xor
inc
mov
pusha
xchg
das
or
push
stos
add
in
ja
push
ret
and
fwait
lods
push
cmc
bound
jnp
outsb
xchg
add
imul
cmpsb
mov
inc
inc
addr16
ds
mov
mov
pop
sbb
in
xchg
ret
sbb
mov
cltd
andl
pop
test
jbe
ret
xor
lcall
es
mov
jo
and
fisubrl
jmp
pop
popf
outsl
pushf
mov
jns
insl
pushf
push
popa
add
cmp
std
and
popl
push
xchg
push
sub
push
das
sbb
hlt
xchg
mov
std
adc
lock
out
pusha
adc
mov
jge
pop
sub
gs
test
andl
fistl
inc
js
arpl
pop
insb
mov
daa
fcmovnbe
xchg
pop
cmp
or
lock
stc
sbb
lods
inc
inc
mov
adc
enter
std
add
push
addr16
xor
pop
or
or
inc
push
outsl
pop
js
push
mov
dec
add
sub
add
ss
fwait
inc
pop
popf
test
lock
sbb
bound
and
dec
add
jno
inc
push
xor
adc
movsl
pop
data16
je
jnp
mov
push
adc
loope
lds
outsb
cmc
adc
add
jbe
push
lcall
shl
mov
xrelease
pop
and
adcb
jae
inc
rcll
lds
lcall
enter
or
sub
out
dec
push
das
and
pop
int
mov
adc
sub
push
xor
jle
cs
xlat
repnz
mov
mov
inc
pusha
sbb
push
sub
into
jge
pop
jns
xchg
or
mov
or
xchg
test
cmp
scas
jecxz
outsl
mov
shlb
pop
push
test
push
int3
jb
stos
rol
cmp
mov
pop
pop
jns
call
jg
dec
or
xor
xchg
or
outsb
inc
mov
fldcw
rcll
inc
jb
cmpsl
dec
lods
jns
das
jle
inc
and
clc
add
dec
adc
cs
mov
mov
das
add
ljmp
int3
mov
pusha
lock
nop
or
and
adc
das
repz
test
fwait
test
movzwl
movsl
xchg
jg
cmpl
or
push
jb
cltd
jbe
push
scas
jle
jo
movsb
scas
push
dec
aas
test
into
xor
ret
cli
pop
sarb
testl
or
and
mov
jnp
add
imul
mull
or
mov
cmp
inc
adc
jge
dec
lods
mov
add
xor
jb
push
sbb
cld
out
imul
sub
mov
ss
into
pop
pop
jns
adc
sub
fadds
xor
ret
fdivs
sbb
stc
dec
or
stc
fcmove
sbb
and
popf
or
dec
adc
mov
mov
imul
das
push
notl
cltd
xor
cmp
nop
mov
and
mov
adc
push
mov
sti
rolb
jnp
jno
sub
inc
pop
gs
inc
dec
in
inc
call
cmp
xsha256
cmpsb
adc
and
pushf
add
fs
test
xor
int
pop
je
pop
push
fidivrs
inc
hlt
xor
pop
ss
aad
mov
pop
jmp
xor
std
add
jge
adc
outsb
jbe
aad
in
arpl
inc
pop
inc
mov
jae
push
xor
lock
pop
sti
xchg
mov
inc
jae
stos
fwait
adc
je
jnp
or
aaa
xchg
sbb
xchg
mov
loopne
xlat
push
rcrl
in
fdivr
ffreep
es
icebp
pop
mov
and
cs
mov
pop
jp
stc
inc
cmp
ljmp
ret
iret
mov
push
leave
rorb
hlt
lret
sarl
xor
add
fcomps
inc
call
cmpsl
xor
pop
jae
subb
push
mov
push
pop
jle
mov
jp
pop
cwtl
jmp
cmp
int
inc
out
in
ss
push
jle
push
jo
inc
jns
push
inc
mov
sub
cmp
push
aam
pop
push
mov
dec
std
std
lahf
in
mov
cmc
scas
xchg
xor
dec
adc
fcoms
imul
test
dec
stc
lret
sub
into
aad
pop
dec
or
fsts
aam
stc
dec
mov
sbb
sarb
xlat
mov
movb
addr16
and
aam
add
scas
cmp
xor
cmp
daa
dec
mov
add
sub
cmpsb
mov
mov
pop
imul
xor
cwtl
test
jbe
sbbl
stos
or
daa
orl
xor
mov
xchg
test
push
lock
int3
call
out
lahf
adc
push
aaa
or
jp
push
in
lret
lret
pop
push
lock
jmp
clc
dec
mov
loop
pop
jge
dec
push
lcall
mov
cmp
shlb
pop
or
and
dec
dec
popf
out
rcrb
aam
scas
xorb
push
jbe
sar
sbb
sub
or
inc
pop
dec
in
fisttpl
nop
mov
les
fnstenv
adc
lock
out
cmp
aas
mov
sub
xor
adc
popf
cmc
xor
sahf
push
dec
inc
stos
xor
sub
and
icebp
pop
sub
dec
or
clc
sub
in
fs
cmp
shr
out
xchg
shrl
push
fsubl
inc
out
sahf
popf
push
shr
test
push
inc
or
and
in
push
and
sbb
inc
sti
jg
sbbl
test
and
mov
mov
lods
stc
outsb
sbb
mov
ret
push
test
es
lods
xor
and
mov
in
jmp
enter
jge
and
addb
push
mov
sarl
lods
and
sbb
fsubrl
mov
je
push
inc
ds
push
test
mov
jg
inc
adc
arpl
mov
push
pop
mov
lea
popf
int
mov
fcompl
lret
out
jo
cwtl
mov
add
dec
dec
mov
inc
dec
cwtl
mov
inc
xlat
lcall
repnz
gs
into
mov
sbb
loope
mov
cmovno
mov
push
ds
fwait
sub
loopne
mov
xor
dec
fldcw
inc
mov
in
push
mov
adc
fwait
cwtl
sti
addr16
movsb
pop
mov
inc
push
movsb
pop
insl
std
xchg
loop
mov
mov
mov
mov
test
xchg
push
push
sub
add
lcall
and
lret
sbb
out
popa
call
cmp
mov
lock
xchg
out
sub
sar
cltd
xor
push
out
fisubrs
inc
iret
ljmp
cs
cmp
imul
mov
adc
xchg
xchg
push
cmp
test
xchg
or
sti
xchg
in
cwtl
jb
add
jp
mov
add
lods
out
mov
sti
lcall
jmp
mov
or
push
mov
ljmp
pushf
das
adc
mov
insb
ror
adc
push
test
into
fwait
xchg
jne
imulw
mov
jb
cmp
test
pop
jle
jecxz
and
push
jno
jp
fisttpl
xchg
xlat
lods
lea
rclb
or
dec
cmp
push
and
test
xor
nop
stos
or
cmp
mov
xchg
push
mul
clc
cmova
adc
ljmp
stos
sbb
fs
push
in
dec
mov
dec
out
add
nop
mov
add
mov
sub
aam
lret
add
mov
jecxz
mov
and
dec
pop
mov
add
mov
jmp
xchg
xchg
xchg
xor
ja
iret
stc
lea
xchg
mov
rcl
and
cmp
loopne
movsb
add
inc
addl
mov
jns
adc
mov
jo
int3
fildll
inc
jge
adc
mov
mov
push
stc
rorb
das
shrb
push
dec
cli
iret
or
or
loop
lea
ret
sbb
sub
lea
add
les
or
enter
xchg
lret
ret
push
lret
loopne
popa
add
popa
loope
lds
pop
push
loopne
xor
mov
and
outsb
xlat
mov
shr
push
xchg
fistpll
and
fxch
fstpl
enter
push
enter
push
in
dec
call
ficoml
push
out
jl
and
add
cltd
enter
stos
or
out
and
cmc
not
add
sub
in
jo
in
in
hlt
outsl
xor
lcall
mov
push
movsl
imulb
jo
ss
imulb
arpl
aam
mov
les
ss
std
ds
hlt
ja
out
or
inc
xor
ret
pop
push
xchg
push
cmpsb
je
jne
int
ljmp
push
or
das
shr
and
out
xor
xor
or
mov
mov
faddl
imul
rorl
ret
sbb
lea
lea
xor
or
add
lods
popf
push
enter
loope
dec
cmp
jno
mov
rcl
adc
dec
cmpsl
or
inc
lret
xchg
and
jg
in
fldcw
adcb
gs
pop
cmp
xchg
rol
sbb
out
adc
ljmp
add
cmp
push
mov
jnp
ret
cmp
inc
and
enter
push
iret
sti
lds
orl
pop
push
inc
lret
sbb
pop
jns
into
push
jae
imul
mov
push
lock
mov
das
mov
mov
add
popa
dec
pop
shll
fsts
aam
adc
add
push
adc
mov
iret
arpl
fldl
adc
mov
or
call
and
cmpsl
je
rolb
or
shll
mov
stc
xor
lds
jecxz
sarb
mov
icebp
push
jnp
mov
loopne
pop
adc
lds
cltd
aad
or
xor
insl
adc
mov
and
mov
into
je
fsubr
push
add
pop
clc
clc
fwait
push
and
dec
lea
jmp
sbb
adc
jne
pushf
pushf
ljmp
test
ljmp
filds
push
movsb
add
lods
mov
fs
gs
loope
cmp
cmp
scas
ljmp
push
inc
push
cmpsl
xchg
hlt
imul
dec
pop
cmp
fisubs
outsl
jmp
push
add
pop
pop
dec
mov
outsb
cmp
fistps
addr16
lods
inc
xchg
adc
sub
test
mov
xor
mov
ficompl
loopne
fwait
test
sarb
lret
addr16
pop
dec
stos
push
xchg
cmc
das
hlt
inc
out
adc
test
fldcw
cmp
mov
movsl
or
adc
idivb
jle
mov
rcll
add
and
and
neg
push
cmpsb
hlt
or
mov
cs
sub
scas
fstps
dec
sysret
shll
push
mov
shrb
mov
out
lods
nop
ds
or
mov
inc
hlt
and
int3
sbb
into
sahf
push
pop
jnp
or
push
mov
cmc
inc
int3
je,pn
pop
dec
test
jl
jge
pop
repz
mov
mov
xchg
fwait
jmp
push
aad
es
repz
and
jle
xor
fs
inc
sbb
outsb
int3
inc
mov
sti
dec
cli
cmp
xchg
scas
ret
sub
and
in
or
inc
movsb
ja
inc
mov
sub
movsl
test
push
sbb
mov
push
sbb
xor
pop
fwait
iret
dec
mov
orl
sbb
xchg
jmp
andb
or
push
jmp
test
push
sub
inc
xor
xchg
scas
pop
test
mov
test
push
ljmp
cmp
mov
clc
stc
sti
loope
ret
lret
push
fcomps
cmp
in
cld
shl
sub
pop
or
and
inc
pop
add
sti
cmp
add
push
into
add
sbb
mov
outsb
ret
pop
test
push
leave
mov
jae
inc
mov
jb
fwait
cltd
stos
shll
je
ljmp
sbb
xchg
pop
shll
dec
adc
mov
in
aam
fs
add
ret
mov
pusha
jo
jp
data16
insl
mov
dec
shll
fnstenv
mov
add
jbe
xor
inc
int3
sub
ljmp
dec
mov
call
in
sbb
pop
lahf
dec
inc
mov
test
mov
or
pushf
das
hlt
push
xor
jbe
int3
dec
mov
pop
xchg
push
push
sbb
psraw
in
js
lea
sbb
sbb
cld
jecxz
xchg
dec
call
call
xor
in
mov
data16
add
mov
nop
jecxz
scas
cld
sub
les
and
inc
cld
mov
and
sti
mov
sub
outsb
mov
rolb
adc
ss
jecxz
pop
mov
pop
fst
inc
mov
addr16
push
cmp
and
fcomps
xor
sub
jmp
test
jne
xorl
or
cmp
cs
je
js
mov
or
std
aad
lahf
lods
jecxz
repnz
and
stos
mov
scas
add
andb
or
into
test
mov
movsl
ret
cmp
not
xor
test
or
jno
mov
ror
jle
xor
daa
js
out
dec
push
or
test
jmp
mov
sub
das
jmp
jns
pushf
mov
cmp
test
mov
lcall
ret
sahf
jb
pushf
cmpsl
mov
js
cmp
sub
dec
frstor
outsl
pop
add
out
fwait
iret
mov
sti
mov
mov
out
inc
lds
stc
add
cli
jne
iret
mov
insl
mulb
inc
jnp
inc
fistpl
in
insl
mov
push
jge
pop
sbb
fldl
and
cmp
outsb
inc
pop
bound
cli
adc
enter
subl
rcrb
jge
fadds
idivl
lods
dec
cmpsb
pop
mov
xchg
mov
jg
xchg
sbb
or
loop
fld
mov
ficoms
or
push
adc
shll
out
lahf
add
lods
mov
iret
xchg
dec
call
inc
push
call
es
sub
fsubp
inc
fmull
rorl
repz
jmp
lcall
nop
adc
insl
imul
inc
and
movsb
out
sub
jb
push
cmp
mov
push
sub
aas
pop
sbb
cmc
sbb
orb
loop
lock
inc
fs
sti
das
out
ret
aad
mov
mov
jns
enter
dec
test
mov
sahf
cltd
inc
mov
and
test
lock
cmc
lds
mov
mov
dec
cltd
push
cmp
cli
xchg
xchg
cmpsb
lods
sarl
pop
inc
ljmp
add
iret
out
pop
mov
subl
xchg
jmp
out
xor
leave
dec
shlb
aam
inc
setno
mov
jge
inc
jecxz
aas
es
cmp
adc
pushf
adcb
mov
fwait
mov
inc
add
test
pop
push
mov
xorl
lret
sbb
shll
bound
sbb
dec
fisubrs
aad
in
sbb
xchg
cwtl
jp
push
push
je
fcoms
lahf
or
nop
insl
vpsubw
loopne
ds
inc
adc
pop
pop
test
jo
jae
lods
xor
jp
roll
or
sbb
pop
and
and
bound
and
mov
xor
pushf
xchg
das
mov
outsl
xor
test
lret
roll
jge
sarl
sbb
xchg
pop
push
notl
mov
add
xchg
adc
out
ds
cmpsl
loop
mov
inc
xorb
fiaddl
je
xor
stc
mov
lea
mov
stos
xchg
pushf
inc
es
push
jl
in
push
jae
imul
push
insb
fs
std
add
addr16
xor
inc
add
cmp
push
add
rorl
dec
dec
push
jb
sbb
xchg
je
pop
pop
mov
sarb
sub
pop
and
and
inc
push
pop
or
xor
jg
lds
mov
xchg
or
inc
dec
push
push
dec
std
mov
and
std
dec
inc
cmp
xor
ja
in
or
jo
idiv
arpl
clc
daa
or
pop
xorl
and
fld
xor
push
and
adc
into
divb
popf
insb
loope
push
iret
jle
xor
movsb
jbe
jp
in
mov
in
xor
imul
scas
arpl
shrb
sbb
cmp
rcr
push
and
dec
stos
and
adc
dec
push
pop
and
sbb
movsl
es
jge
or
cmpsl
ss
dec
jge
andl
mov
jnp,pn
insb
aam
lods
and
iret
jo
addb
outsb
push
mov
jecxz
stc
dec
adc
call
lret
jp
aaa
in
inc
hlt
fldt
pushf
mov
scas
in
mov
adc
adc
mov
mov
ret
insl
mov
sub
in
jns
add
or
setle
cmpsl
sti
loopne
jo
sti
xchg
imul
call
shlb
aas
loopne
notb
aaa
push
push
pop
push
pop
jne
mov
subb
mov
negl
jae
and
cmp
push
xchg
addl
sub
imul
fs
dec
or
stos
push
mov
dec
adc
xchg
mov
push
or
cli
and
in
ret
daa
jne
push
fidivs
xor
loope
sub
add
bound
icebp
fists
sbb
cmp
es
jl
xchg
les
inc
mov
ror
jnp
jb
inc
mov
iret
fcoms
test
fiadds
inc
add
out
loope
jb
mov
sub
sbb
jp
aas
mov
loop
dec
or
fistpl
test
je
rorl
cmp
adc
faddp
xor
cmp
test
ja
and
mov
pop
out
je
fdivs
cwtl
movsl
xchg
in
push
adc
cmp
xor
xchg
ja
push
jg
push
ret
pop
dec
repnz
arpl
pop
inc
gs
pop
aad
jg
rorl
push
das
push
pop
push
aaa
push
adc
ret
xor
mov
mov
push
dec
scas
in
jmp
mov
push
push
xchg
pop
out
dec
add
cmpsb
andb
mov
push
mov
xor
jg
mov
js
push
sub
sub
imul
cmp
loop
lcallw
and
pop
rcrl
cmpb
pop
jmp
jo
cli
jns
xchg
mov
bound
outsb
dec
cltd
add
adc
xorl
xor
xchg
pop
rclb
mov
pop
fmull
dec
jmp
sbb
call
fnstenv
and
movsl
leave
ucomiss
int
outsb
cmp
fstpl
nopl
cmp
cltd
mov
sti
movsl
jle
pop
ljmp
in
xchg
xchg
sbb
inc
pop
aam
mov
lods
dec
xchg
sbb
adc
sub
xchg
arpl
pushf
daa
xchg
inc
add
lahf
fiaddl
pop
xor
pushf
shr
lahf
aam
es
and
test
cmpsb
sbb
xchg
pop
dec
add
insl
adc
sub
add
into
cmp
adc
into
cmp
dec
aas
add
in
xchg
ds
mov
call
cmpsb
add
cli
dec
jg
loopne
push
add
rorl
jle
icebp
iret
and
add
test
test
aaa
repz
adc
loop
stos
jbe
cmp
sbb
pushf
stc
rcll
movsb
out
push
cmpsb
jo
inc
xchg
push
test
mov
ret
inc
xor
sbb
nop
cld
or
loopne
sub
mov
add
nop
into
pop
aad
jg
inc
jbe
push
sub
xchg
push
idiv
fs
push
mov
stos
jbe
dec
repnz
dec
add
jb
xchg
call
mov
add
test
add
in
mov
and
dec
mov
repz
xchg
sbb
hlt
clc
adc
out
mov
sbb
ljmp
pusha
fwait
je
xchg
repz
mov
les
xor
lock
fiadds
mov
loope
in
popf
and
pop
mov
out
sub
xchg
xchg
adc
outsl
out
nop
cmp
inc
xor
pushf
dec
push
sub
fidivrl
push
ficoms
jbe
pop
or
ja
pusha
xor
fidivrl
shrb
jmp
xor
push
sti
fs
fs
sti
sbbl
inc
xchg
mov
xchg
pop
lcall
sbb
xchg
pop
or
scas
fcoms
enter
push
push
out
sarb
addl
push
jae
sub
notl
inc
std
lcall
add
mov
push
add
frstor
cmc
punpckhwd
scas
lcall
aam
sbb
int
add
mov
inc
rcrb
gs
sbb
bound
mov
enter
and
lcall
lcall
int
add
aas
jno
cmp
xor
pop
or
jle
xor
addr16
jmp
not
xor
push
sub
lock
mov
cmp
rcl
xchg
push
aam
or
repz
pop
push
dec
adc
mov
push
ds
aam
cmpsb
fildl
xchg
inc
in
cltd
push
xchg
inc
testl
lock
jb
pop
cwtl
outsb
sarl
xchg
out
mov
sar
or
hlt
jb
or
enter
lahf
mov
insl
nop
adc
jle
jns
ror
mov
sti
paddd
lods
sbb
mov
mov
fstps
pop
ds
sbb
xor
enter
mov
stos
pusha
adc
and
lea
xor
aam
bnd
dec
cmpsb
mov
mov
push
or
jle
test
mov
sbb
push
nop
inc
icebp
xor
cld
mov
test
lahf
mov
sbb
adc
ja
add
and
fwait
dec
clc
mov
mov
fildl
lods
out
cmp
jge
loope
add
iret
and
pop
add
icebp
and
add
jp
rorl
mov
shll
cltd
int
loope
addr16
sahf
in
les
mov
jo
sarb
popa
hlt
les
inc
mull
out
cli
shr
or
popf
add
sbb
or
mov
xor
mov
insl
fisubrs
cmpl
sbb
cmp
cmp
cmp
sbb
dec
cmp
sub
rcll
cmovae
mov
dec
js
dec
cmp
mov
mov
pop
pop
push
repz
pop
outsb
call
adc
inc
jmp
mov
fcom
mov
pusha
enterw
jns
in
nop
push
ficoml
cld
or
bound
test
bound
push
add
push
mov
in
test
or
sub
jnp
testl
mov
incb
mov
lods
sbb
and
dec
jmp
icebp
sbb
xor
mov
scas
pusha
push
notb
in
fisubrl
test
adc
lcall
jne
fcmove
in
mov
push
outsl
mov
imul
shrb
push
jecxz
movsl
mov
and
test
mov
sbb
cmp
stc
jecxz
fisttpl
jae
ja
add
xor
fstl
sub
mov
jle
xchg
inc
lods
and
fcmovne
sarb
jecxz
arpl
inc
xchg
xchg
shl
stc
push
jp
call
ds
mov
xlat
push
mov
idivb
sbb
scas
stos
out
jb
add
ljmp
pop
addr16
push
les
pop
es
inc
cmpxchg
jge
pusha
adc
nop
subb
shll
lock
push
adc
js
xchg
jo
je
ret
dec
cli
or
jno
and
cld
cmpsb
jl
shll
xchg
out
cmpsl
pusha
cmp
dec
imulb
lcall
pop
cmpsl
inc
arpl
dec
and
or
sub
orb
push
mov
jl
addb
ja
sahf
stos
mov
inc
test
clc
data16
fs
pushf
xchg
mov
push
jg
scas
test
inc
lock
dec
or
out
xchg
insl
pop
xchg
test
popa
and
mov
and
dec
adc
mov
pop
loop
or
imul
sahf
dec
mov
or
jmp
sub
loopne
add
cmp
inc
jp
outsb
ret
je
mov
and
daa
cld
pop
scas
stc
inc
das
xor
jnp
mov
lods
inc
aam
jle
lahf
subb
in
shll
mov
pop
faddl
outsb
push
adc
mov
mov
cwtl
adc
jns
add
pop
aas
add
dec
insb
inc
cld
mov
xlat
mov
pushf
jl
cmp
cwtl
dec
scas
cwtl
fdiv
rcll
mov
inc
adc
push
out
mov
and
mov
arpl
cmc
das
loop
mov
push
lods
dec
scas
shrb
push
imul
mov
in
dec
xorb
push
cmp
outsl
shl
mov
cmp
sub
scas
push
cmp
pop
ds
outsl
sub
adc
fwait
in
cmp
pop
int
jbe
inc
and
imul
sbbl
mov
jne
push
das
rorb
lcall
loopne
insl
pop
cmpsb
lock
into
jge
lock
insb
cmc
push
adc
mov
pop
lods
xlat
or
aaa
mov
adc
xor
fsubr
js
mov
out
fstps
lds
popf
and
aas
bound
test
pop
push
and
or
jl
add
push
sbb
cs
popf
rorl
xchg
push
mov
sub
jecxz
inc
inc
jge
sub
mov
push
cmp
divb
push
xchg
mov
movsl
xchg
call
xchg
pop
xchg
call
sahf
shll
in
test
mov
xorb
ja
flds
fidivs
xor
jo
in
add
daa
dec
sbb
sbb
adc
pop
pop
mov
or
in
sub
movsb
cli
out
fidivrl
stos
mov
mov
dec
cmp
faddl
xorb
cmp
dec
lret
jns
leave
in
push
cld
sbb
sub
rcl
dec
xchg
int
sub
iret
jae
xchg
push
shll
aam
lret
mov
push
les
das
inc
pop
dec
arpl
clc
repnz
sbb
jne
sbb
push
mov
dec
mov
jns
stos
jb
cmp
sti
gs
and
out
scas
lods
push
cmovg
pushf
bound
xchg
outsl
ljmp
cmpsl
in
mov
dec
jecxz
xor
add
movsl
std
xchg
bound
cmp
add
jne
cmpsl
cltd
mov
mull
mov
inc
fdivr
mov
lock
xor
enter
mov
je
sub
cmp
in
sbb
sbb
inc
lods
movsb
inc
iret
sub
mov
movsl
or
fistpl
insb
sbb
mov
repz
lea
push
enter
fists
xor
push
push
in
pop
paddw
adc
into
sub
push
cwtl
out
sbb
xor
mov
in
vxorps
jp
aad
hlt
rolb
ljmp
jmp
and
xchg
pop
push
jge
dec
cmpsb
dec
pop
jne
push
cmp
pop
fimull
inc
push
dec
inc
sti
popl
aam
push
stos
cmpb
sbb
and
mov
divb
pusha
ret
lea
sbb
push
lret
mov
iret
sbb
shll
inc
fs
fstps
pop
imul
clc
lahf
xchg
sub
lds
dec
sub
pop
xor
push
rorb
push
mov
loope
sarl
mov
in
push
rep
xchg
movsb
fwait
mov
in
out
pop
dec
jbe
add
out
xor
or
stos
in
push
mov
xor
mov
ljmp
jne
shlb
ds
enter
cmpsl
fldt
test
pop
or
pop
push
or
sub
add
or
dec
scas
add
inc
push
dec
xchg
pop
xchg
repz
bound
div
pop
cmp
or
imul
aaa
arpl
mov
repnz
add
adc
push
incl
call
inc
rorl
xor
ss
jnp
adc
pop
dec
or
push
cmp
ljmp
outsb
mov
adc
and
addl
jp
jb
aad
jg
jmp
jo
xor
outsb
push
nop
fsubrs
ret
dec
lods
into
lock
test
cmp
stc
cmp
add
scas
cmc
adc
nop
js
in
fldpi
je
adc
mov
iret
adc
pop
das
and
std
sbb
cmp
in
bound
pop
cld
call
testb
add
cmp
and
ljmp
inc
faddl
sbbl
pop
out
stos
inc
ret
outsb
imul
mov
dec
shll
outsl
in
xor
lcall
int
mov
scas
int3
jmp
int3
push
push
in
testl
mov
cwtl
jl
test
test
or
pop
inc
out
pop
cmp
repnz
sbb
pop
sarb
divl
fistpll
in
jg
ficoms
cld
cmc
mov
xlat
xlat
jns
enter
in
imul
push
shlb
outsb
mov
cmp
outsl
in
shrb
pop
ss
adcl
shll
and
or
cmp
mov
mov
loop
cltd
jl
rcll
shlb
repz
popf
lcall
and
or
ds
xor
ret
and
mov
mov
adc
push
ja
dec
out
and
xchg
xor
jne
pxor
add
addr16
js
pop
pop
push
out
jmp
mov
xchg
loopne
lret
test
cld
jge
xchg
jbe
add
rorb
sti
inc
mov
pushf
add
mov
pop
or
loop
test
stos
push
gs
and
bound
aam
sub
rcll
sub
mov
int3
rorl
shll
fcmovbe
pop
sbb
push
gs
idivl
fsubs
ficoms
sub
mov
es
xor
popf
dec
inc
mov
adc
jns
push
inc
xor
sub
cli
pop
mov
lret
addl
mov
xchg
adc
mov
jno
dec
and
cmp
rcrl
xor
je
mov
push
xchg
push
shl
scas
stos
iret
in
ja
inc
testb
in
stc
leave
pop
std
xchg
xlat
mov
movsl
mov
add
push
sahf
fistps
pop
les
enter
adc
std
adc
sbb
movsl
or
mov
push
xchg
inc
insb
push
jae
mov
in
adc
mov
or
cld
std
push
outsb
addr16
xor
sub
ljmp
jns
push
cmp
fwait
stos
mov
sarl
fwait
push
mov
das
cmp
mov
sub
roll
xchg
fmull
xor
cmpb
insl
cmpb
test
in
mov
or
add
cmpsb
pop
sbb
cmp
fwait
push
push
adc
ret
jb
xchg
sbb
mov
cmp
jo
pop
movb
xor
cli
pop
push
inc
cmp
cmpsb
es
cwtl
mov
add
test
pop
pop
les
jecxz
pop
cli
lods
dec
xchg
dec
xchg
sub
lret
scas
add
scas
mov
lret
inc
dec
jne
pop
xchg
and
cmp
out
popl
and
xlat
test
xor
or
in
clc
pusha
in
test
jb
outsb
sub
mov
push
adc
iret
ficoml
and
lds
mov
dec
push
es
fucom
mov
push
dec
xor
ljmp
lahf
sbb
repz
stc
test
data16
and
pop
aas
mov
mov
into
and
ds
lcall
sub
and
xchg
das
cmpsb
or
xchg
pushf
mov
mov
movsl
rorl
imul
jl
dec
test
mov
cmp
lds
jle
fwait
imul
mov
mov
jg
lcall
imul
lea
sbb
xchg
iret
cmp
aad
daa
insl
fwait
pushf
mov
fimuls
addb
push
mov
sub
shll
roll
test
xor
lahf
cmp
pop
and
inc
lods
out
mov
add
jmp
jge
and
testl
push
std
aad
loopne
pop
out
adc
or
inc
cmc
mov
push
lcall
arpl
inc
sbb
ss
jnp
pop
xchg
test
ljmp
fsubs
movsb
jb
or
dec
popf
loope
xchg
push
cmpsb
lret
aam
loope
ljmp
pushf
jnp
inc
mov
jne
push
inc
adc
sbb
insb
movsl
in
ds
test
add
cmpl
std
xchg
push
sbb
cmp
push
daa
stos
adc
fwait
cmpsl
pop
shlb
call
cmp
xor
dec
mov
data16
hlt
scas
cli
ja
adc
das
pop
mov
pop
cmp
and
daa
or
cmpsb
lahf
push
mov
fdivrs
cmp
push
subl
ret
nop
shll
leave
ds
or
in
icebp
xor
imul
hlt
pop
lea
pushf
add
adc
dec
shrl
das
popa
in
or
lcall
add
mov
jp
pusha
mov
xorl
fldl
imul
pop
int
push
shl
dec
jp
aam
in
mov
push
sbb
clc
shll
lds
repnz
std
mov
push
popa
and
adc
fwait
mov
lods
push
push
int
jno
jbe
fucomp
ja
mov
imul
insl
sub
shlb
mov
mov
bnd
les
adc
imul
out
imul
jne
int3
adc
les
mov
ret
jmp
fyl2x
daa
lea
addr16
pusha
cltd
ja
out
cmp
dec
in
ret
popa
fsubrp
pop
scas
cli
mov
dec
cmpsb
jmp
sub
dec
xorl
push
mov
fidivrs
jmp
inc
lret
xchg
or
cmpl
lds
sbb
nop
sarl
cwtl
rcl
or
lret
scas
aam
cmp
xchg
dec
sbb
and
add
mov
xor
aaa
xchg
add
scas
fdivrp
cld
xor
cmp
jo
outsl
cltd
cmp
pop
push
inc
or
jb
sarl
cltd
inc
insl
out
mov
stc
mov
flds
out
or
arpl
mov
jecxz
sbb
aad
shrl
lahf
mov
mov
add
jnp
mov
jmp
pusha
stc
fldt
jbe
mov
dec
jnp
aam
sbb
push
mov
lods
loope
sbb
ljmp
out
sbb
cmpl
xchg
sub
mov
rcrb
mov
sbb
mov
mov
xchg
xchg
mov
push
pop
ljmp
mov
test
inc
dec
inc
pop
mov
jecxz
rolb
xchg
inc
aad
sbb
lahf
mov
or
jge
daa
stos
scas
call
inc
and
and
insl
test
pop
mov
out
sub
add
mov
cs
jl
cmc
push
cmc
cld
dec
jecxz
out
mov
fdivs
pop
jns
inc
inc
ror
cmp
lahf
outsb
pusha
outsl
inc
not
mov
mov
xchg
cld
mov
push
jns
dec
add
mov
in
ret
shrb
pushf
push
icebp
repz
and
ss
aaa
add
push
mov
lods
jno
loope
fimull
daa
cmpsl
fnsave
adc
mov
pop
shrb
sahf
jbe
and
sub
push
aam
fisttpl
mov
add
cmc
insl
mov
xor
clc
adc
rclb
jne
test
jmp
xor
push
mov
lret
es
insb
in
cwtl
and
addr16
push
fcmovbe
inc
pop
mov
jge
call
sbb
cmp
fadds
cld
xlat
fs
xchg
mov
mov
adc
xchg
pop
insl
cltd
stos
push
sub
andl
xor
les
mov
stc
out
sub
cltd
and
pop
push
icebp
fsts
add
mov
inc
cmp
jb
mov
test
sbb
sbb
mov
outsb
in
xor
xchg
adc
sbb
in
jmp
popa
pop
fidivs
xorb
mov
push
rcl
andb
and
movsb
fldenv
xor
dec
cmpsl
and
adc
lock
in
push
dec
in
stos
xchg
dec
insb
add
add
scas
in
pop
pop
int3
or
pusha
and
jl
sub
xor
test
jmp
mov
mov
lret
enter
and
rorl
pop
test
sub
in
test
push
bswap
std
sbb
dec
in
imul
adc
cmpsb
sbb
xchg
rcrb
jmp
nop
dec
popa
and
mov
or
and
inc
xchg
xor
gs
sbb
je
sub
inc
ret
xor
mov
xor
cs
mov
or
mov
daa
adc
add
daa
jg
sub
fidivl
shrb
mov
cmpsb
in
iret
xor
vmread
loop
negl
fwait
enter
dec
pop
or
int3
sub
aam
gs
es
data16
inc
outsb
daa
sahf
rcl
arpl
leave
ss
fcomps
mov
jg
movsl
stc
adc
sbb
out
push
pusha
jns
ret
cwtl
out
adc
jo
ret
xchg
data16
mov
popf
xchg
mov
arpl
push
arpl
repz
sahf
fs
xor
testb
pop
sarb
sub
pop
ret
shlb
out
xor
push
xchg
and
mov
sub
bound
and
jecxz
xchg
push
jb
loop
sbb
lcall
cmp
jno
mov
mov
leave
sarl
bnd
pop
insl
jge
in
xlat
xor
ss
outsb
inc
aaa
fcomp
mov
mov
adc
fldcw
lods
mov
inc
xchg
movsb
pushf
lock
daa
push
in
push
fwait
pop
cmp
fstpl
or
and
mov
mov
mov
jmp
lea
aad
pop
jo
movsb
push
lods
clc
call
sub
push
addr16
sbb
mov
sub
adc
or
arpl
scas
adc
mov
ja
and
inc
lret
test
int
xor
in
shlb
push
mov
or
int
dec
adc
imul
jb
push
cmp
and
imul
or
fwait
in
mov
shll
sti
push
push
push
mov
jge
inc
jle
or
popa
inc
aam
test
pop
jge
push
and
sarl
sub
dec
mov
sahf
jnp
add
clc
jnp
xor
fwait
jno
sub
das
pop
addl
ds
lret
xchg
sbb
push
adc
xchg
or
jae
add
mov
lret
add
int3
lret
stos
jecxz
lea
add
stos
leave
or
xchg
jbe
mov
pop
fildl
or
imulb
sti
add
or
repnz
push
bound
sub
push
lea
popa
out
out
jmp
pop
insl
pop
outsl
push
add
inc
and
in
sti
pop
cmp
mov
push
sbb
iret
fistpl
test
rorl
cmpsl
add
jno
subl
lods
lahf
sub
int
push
jo
dec
dec
rclb
popa
pop
icebp
jmp
inc
loop
seta
ljmp
xor
dec
sub
aaa
stos
sbb
mov
fwait
shlb
out
push
cmp
mov
xchg
or
push
leave
push
mov
lret
sarb
mov
lahf
pop
mov
sub
decl
fmul
adc
add
xor
and
out
rcrb
in
adc
out
xorl
mov
xlat
clc
push
lds
test
push
fdivp
jne
inc
pop
fwait
cmp
movsb
jae
imul
sub
jl
pop
push
inc
daa
inc
mov
fwait
push
fldl
movsb
das
cmp
mov
dec
arpl
std
xchg
roll
pop
sbb
out
cmpsl
imul
pusha
lock
mov
gs
stc
stos
xchg
or
pusha
ret
xchg
cmc
lret
add
inc
std
lock
outsl
pop
push
stos
xchg
mov
ljmp
idivl
add
aam
stos
imul
inc
shll
iret
push
xor
sbb
ja
or
pop
add
xchg
xchg
pop
out
xor
arpl
jne
call
jbe
push
test
das
mov
icebp
sti
push
data16
or
clc
in
pushf
scas
aam
fsts
clc
adc
stos
repnz
jmp
in
in
cmp
jnp
fsubs
inc
pop
mov
lods
adc
insl
cmp
daa
into
cmc
jae
dec
outsb
sti
or
insb
mov
cs
jmp
popf
stc
mov
sti
and
mov
jg
ds
jne
xor
sub
fcoms
in
adc
mov
add
pop
stos
leave
ljmp
adc
fstl
inc
in
mov
push
mov
pop
jae
stc
lods
xlat
scas
xlat
jge
daa
pop
pop
pop
lret
sbb
rclb
je
inc
dec
jp
mov
sbb
out
cli
loopne
arpl
dec
mov
and
mov
dec
repz
xor
filds
or
pop
mov
scas
testl
xor
mov
shll
inc
adc
subb
aas
cmp
push
inc
loop
push
imul
mov
jnp
ret
adcb
mov
inc
pop
les
cmpsb
dec
cmpsb
inc
jp
xor
adc
sub
test
sub
sub
mov
xchg
mov
cmpsl
and
dec
fwait
sbb
daa
shlb
cmp
fsts
fnstenv
xor
adcl
dec
adc
lahf
push
jl
sahf
lret
jecxz
push
inc
shl
mov
sbb
subl
mov
pop
mov
loope
mov
dec
roll
bound
das
cmp
or
jns
jbe
xchg
add
std
imulw
call
test
out
ret
lods
dec
mov
dec
jecxz
cmp
inc
adc
insl
imul
sub
and
xchg
test
js
jb
lock
sbb
xchg
inc
addr16
mov
gs
jns
inc
xchg
lcall
js
adc
or
jle
stos
out
push
cmp
push
push
loopne
push
popa
fstpt
dec
or
adc
shll
cmp
push
adc
and
jp
xchg
loop
popa
add
push
and
scas
out
xchg
stc
ja
inc
aad
rclb
scas
add
or
xchg
xor
ret
fdivrs
paddsb
mov
scas
add
mov
sbb
adc
mov
movsb
xchg
clc
or
in
out
sbb
sahf
jbe
mov
adc
jle
orb
movsb
scas
lea
sbbl
iret
pop
push
push
adcl
cli
cmp
inc
sub
sub
cmp
in
or
int
data16
lods
pushfw
fidivs
movsb
push
jb
or
and
jne,pt
aad
mov
out
stc
add
das
test
mov
addl
cmpsl
and
mov
lds
inc
int3
arpl
fiaddl
sub
repz
and
jns
lock
movsb
bound
and
pop
sub
mov
mov
add
pop
jge
outsb
hlt
js
adc
cmp
fs
sti
mov
xchg
movsl
es
leave
dec
test
mov
fs
pop
add
xchg
pop
mov
notl
xor
rcl
rorb
jecxz
shlb
cmp
jae
xchg
pop
dec
adc
cltd
faddl
adc
mov
insb
inc
imulb
les
or
cmp
add
les
out
icebp
mov
xchg
andl
int3
cmp
inc
fcoml
nop
sbb
xchg
cmc
ds
fisubs
lcall
dec
dec
stos
jl
ret
push
cmp
cmp
push
adc
lds
sub
jbe
cmp
hlt
ss
fistps
in
mov
dec
inc
icebp
inc
jne
sahf
xchg
bound
sti
shlb
jmp
cmp
subl
add
out
adc
int
and
popf
push
mov
sub
add
or
pop
stos
jp
faddl
push
std
dec
xchg
mov
mov
das
add
dec
dec
or
mov
imul
lods
pop
dec
enter
mov
hlt
arpl
pop
inc
and
adc
incb
rcrl
movsb
push
pop
push
stos
and
scas
lods
sahf
negl
out
xor
inc
push
outsl
sti
shll
xchg
pop
orl
dec
ja
push
mov
leave
xchg
repnz
sahf
xor
test
add
imul
enter
testb
jge
cmp
scas
mov
in
lcall
dec
jb
adc
mov
aaa
sbb
mov
fldcw
jmp
xchg
xlat
push
and
mov
fdivs
mov
push
cmp
jb
imul
mov
cmp
divb
adc
jne
cmp
mov
in
mov
cmpsl
in
leave
cwtl
arpl
aam
mov
xor
sahf
push
rcr
jge
push
cmpsb
mov
dec
mov
mov
sbb
ret
in
lods
stos
mov
scas
pop
rorl
call
sbb
scas
add
popf
je
outsl
or
mov
scas
xor
push
pop
add
in
xchg
sarl
pop
stos
cmp
das
adc
inc
sbb
and
jl
adc
inc
cmp
lods
sub
je
fcomps
call
and
and
stc
fsubr
xchg
add
jo
xor
jbe
subb
lea
ds
rcrb
push
not
dec
cwtl
jp
add
push
lcall
nop
arpl
out
adc
xchg
int
push
dec
sub
push
movsb
inc
xor
ljmp
sete
ljmp
imul
or
aas
stos
mov
xlat
pop
mov
int
loop
adc
mov
mov
das
es
iret
int
insb
je
imul
leave
pop
and
xor
and
pop
stos
cltd
insl
xchg
aam
outsb
xchg
pop
adc
cmp
sti
ficompl
mov
mov
sub
push
xor
pop
cmp
cltd
jo
jge
pop
repnz
nop
mov
mov
mov
sbb
jnp
jle
test
enter
shlb
add
jno
cmc
ljmp
mov
xchg
out
pop
jmp
adc
mov
inc
rcl
push
and
inc
push
in
decb
and
and
and
gs
clc
xchg
out
and
dec
sbb
fdiv
fmuls
push
inc
fwait
xchg
repz
leave
sub
pop
scas
sbbl
add
dec
xor
cmp
jp
enter
aad
adc
aaa
pop
sbb
mov
mov
mov
je
pop
xor
repz
loop
adc
lcall
hlt
lahf
cs
subl
sub
xlat
iret
mov
jns
fs
xchg
scas
stos
mov
cltd
test
addr16
mov
jno
sbb
mov
add
sub
fmull
sarb
std
repz
sbb
add
out
fsubs
mov
xchg
and
jbe
mov
mov
dec
pop
outsl
inc
adc
movsl
push
fidivrs
and
sbb
call
pop
bsf
xchg
imul
fnstsw
ja
rcrb
addr16
cmp
js
pop
dec
inc
jb
pop
dec
das
sub
std
test
outsl
popf
nop
push
dec
xlat
addr16
mov
lea
dec
lahf
cmp
hlt
pushf
cmp
xlat
dec
sbb
gs
jnp
jmp
sub
inc
jg
inc
and
add
xchg
out
mov
mov
cld
mov
sbb
and
mov
adc
pop
inc
jle
ja
aas
and
mov
jecxz
pop
and
daa
aaa
movb
push
aad
cmp
add
push
xchg
jp
inc
cwtl
dec
mov
inc
icebp
sub
dec
aaa
ret
scas
iret
jp
decb
aam
cli
scas
add
cltd
and
je
les
out
pop
jae
push
imul
scas
aad
push
adc
mov
and
and
dec
xchg
and
mov
pop
std
mov
dec
mov
sbb
popa
loop
pushf
jnp
loope
mov
cmp
int3
rorb
mov
mov
repz
push
ret
ficoms
mov
subb
mov
test
adc
or
lcall
sub
fldt
jnp
and
int
sub
loopne
pop
out
inc
push
arpl
ja
pushf
fs
jecxz
jo
shr
push
dec
addb
pop
fstpt
pop
xchg
or
cmp
pop
jo
clc
jmp
pop
test
push
mov
pop
or
clc
ds
movsb
icebp
jnp
sub
sub
aad
pop
cmp
or
outsb
in
mov
xchg
outsl
pop
pop
fmuls
mov
or
push
mov
gs
ss
cmpsl
lret
push
ljmp
lcall
shll
xor
xlat
mov
pop
mov
repz
and
dec
xorl
dec
push
iret
jmp
mov
leave
jmp
or
xchg
hlt
setb
popa
jns
dec
pop
pushf
jg
lods
and
push
enter
mov
cmp
cmpl
xchg
stos
xor
into
das
sub
stos
and
push
pop
pop
push
mov
fsubrs
mov
fstl
jle
aaa
lret
out
jmp
frstor
add
xchg
adc
cvtdq2ps
insl
test
test
xchg
push
xor
push
adc
inc
sahf
mov
jne
push
flds
mov
jbe
mov
mov
in
enter
lcall
pop
mov
xchg
mov
sub
add
fildll
bnd
sarl
sub
sbb
mov
mov
mov
or
scas
jo
lret
xor
fcompl
jg
stos
mov
es
jmp
and
mov
xor
fptan
add
loopw
fisttps
sub
iret
xor
stos
push
mov
mov
xchg
add
shrl
int
popa
add
into
cmp
addb
or
xor
jl
cmp
push
lods
mov
test
jns
pop
leave
lcall
iret
fs
addr16
fadds
or
and
mov
loopne
lcall
xor
adc
jle
dec
push
test
ss
jne
jns
imul
movsl
xor
enter
sbb
ds
sahf
jno
or
xor
bnd
inc
loop
aad
cmp
mov
adc
stos
sbb
int3
cmp
cmp
cwtl
lods
cwtl
outsl
fwait
xchg
rcrl
add
adc
push
sbb
cltd
mov
push
stos
outsl
or
in
dec
int3
test
push
pop
xchg
nop
push
imul
xchg
rcl
fldl
scas
and
orb
das
into
and
or
repnz
push
cli
dec
sbb
add
cmp
arpl
inc
cltd
adc
fs
jno
hlt
je
sub
out
jp
xchg
into
les
pop
sti
cmp
dec
iret
bound
push
in
lds
push
push
fbstp
test
dec
testl
aad
push
sbb
mov
or
inc
cmpsb
sar
cltd
in
mov
sub
lahf
cwtl
sub
xchg
enter
pop
and
jae
add
push
mov
out
aad
xchg
pop
xor
or
clc
stc
or
mov
popf
out
mov
aaa
push
fstpl
js
pop
cmc
dec
shl
cwtl
in
out
andl
scas
inc
neg
mov
add
mov
inc
rcll
mov
cld
aad
jnp
dec
xchg
add
pop
cmp
test
cmp
ret
imul
sar
mov
outsl
push
inc
add
popf
call
add
jecxz
mov
mov
mov
in
sbb
push
pop
cmpsb
in
jp
xchg
xor
movsb
cli
or
in
nop
inc
pushf
jg
mov
push
movsl
xchg
add
sbb
gs
bound
and
cmpb
dec
bts
pop
fnsave
pushf
lods
jne
cmpsl
into
jns
adc
sbb
xor
cmc
lahf
dec
lahf
out
and
and
mov
jb
adc
lods
lds
sbb
out
or
test
lds
mov
xchg
les
into
mov
xlat
cmp
nop
fistpll
jae
dec
and
movsl
adc
scas
inc
mov
lahf
add
add
jno
aad
push
stos
jo
cwtl
mov
lods
jg
outsl
xor
mov
push
std
dec
addr16
sbb
bound
inc
sti
outsw
mov
add
lahf
incb
loope
mov
mov
lret
mov
test
cltd
mov
add
adc
clc
into
xor
xlat
add
mov
mov
pusha
jle
fwait
test
push
in
mov
aad
stos
call
cmp
aas
xor
xchg
sbb
sahf
or
mov
sbb
sbb
cmp
jae
fsubs
fsubs
enter
xchg
xchg
pop
stos
in
xor
ds
dec
cltd
fstl
push
xchg
sarb
sub
mov
mov
or
push
and
inc
push
mov
mov
lret
outsl
xchg
inc
addb
sbb
or
xchg
jp
test
mov
aad
fisttpl
andb
insb
icebp
dec
shrb
dec
out
out
jp
loopne
xlat
cmp
pop
pop
adc
into
out
jbe
jnp
mov
or
ds
repnz
lods
push
xor
and
inc
test
sbb
and
cmp
test
je
mov
adc
addr16
and
or
jo
cltd
mov
mov
pop
sbb
cmpl
xor
inc
mulb
mov
pop
int
push
fs
push
lods
mov
daa
loop
fldt
fdivl
mov
loop
xor
stos
and
mov
fs
arpl
pop
mov
das
int3
add
mov
aas
inc
mov
cmp
xor
rcrb
sbb
into
mov
inc
sbb
es
pusha
mov
movsb
jmp
fabs
lret
jns
roll
lods
or
fildll
cmp
xchg
cmp
aaa
push
rol
repz
data16
jg
add
sub
adc
xor
les
movsl
aas
scas
and
jg
inc
jmp
andb
xchg
in
int3
mov
adc
and
loop
je
cmp
mov
imul
sbb
xor
add
and
adc
add
mov
out
xor
sub
cmp
jge
ljmp
inc
jae
neg
xor
mov
out
in
inc
mov
ret
adc
lea
or
je
inc
outsl
lcall
inc
jns
ds
mov
sahf
mov
or
jbe
fisubl
mov
mov
nop
daa
push
sub
js
mov
call
xor
add
scas
nop
push
outsl
dec
ja
and
push
sbb
mov
ret
and
aas
scas
and
in
sbb
inc
sbb
xchg
pop
movsb
jp
inc
outsl
push
adc
push
stc
sub
lds
sbb
mov
add
aaa
repz
mov
popf
out
test
inc
filds
push
insl
xor
bound
mov
ds
and
aam
xchg
sub
mov
mov
xor
push
insb
pop
pop
sub
mov
je
jl
es
xor
xor
test
shlb
add
call
jecxz
jbe
mov
sbb
xor
mov
xchg
mov
jnp
pusha
inc
sub
xchg
or
ret
fnstcw
cmp
inc
int3
adc
dec
sahf
mov
cwtl
repz
push
inc
daa
lock
add
int
imulb
jge
lods
pop
into
movsb
sbb
mov
inc
xchg
addl
jmp
fldl
dec
jmp
push
movsl
dec
sbb
xor
mov
mov
push
ss
xchg
and
sub
lcall
test
pusha
push
pop
cmpsl
fcmovne
in
cmp
mov
sahf
sub
mov
cmp
insl
push
adc
jl
stos
dec
and
sarl
mov
push
scas
inc
and
xor
out
loopne
lods
push
push
mov
jl
call
xchg
test
cmp
jecxz
arpl
xor
or
cmpsb
and
in
dec
push
add
jae
fimull
pop
addr16
adc
xchg
jo
inc
push
mov
lods
mov
in
jl
insl
in
les
mov
jo
xchg
in
call
cmpb
sub
ret
sbb
decl
daa
mov
cld
mov
adc
sbb
dec
mov
cli
fld
jg
xchg
cli
push
sub
sbb
jne
bound
es
jne
xor
call
xchg
add
mov
dec
xchg
loopne
outsl
clc
mov
scas
pop
inc
movsl
jl
subl
loopne
js
jl
xchg
lods
mov
push
jp
loop
mov
mov
stos
out
in
jmp
in
negb
pop
outsw
leave
mov
xor
push
sti
mov
xor
testb
dec
push
adc
push
cmp
dec
add
ret
xor
hlt
mov
cmp
out
fwait
cmpsl
cli
mov
push
mov
and
call
jb
gs
je
mov
arpl
jae
and
add
push
incb
push
push
dec
call
and
out
mov
mov
pop
ret
insl
int3
insb
mov
lods
insl
mov
test
mov
bound
daa
xor
dec
std
ret
lods
push
fistl
mov
jne
adc
or
mov
inc
pop
push
jg
pop
cmpsl
pop
mov
mov
inc
xor
push
and
push
fldt
test
pusha
aas
cmp
insl
lahf
adc
outsb
shrb
test
lret
pushf
dec
call
outsl
and
inc
sahf
mov
sti
xrelease
jnp
adc
mov
push
rcr
inc
adc
cli
loop
xor
dec
test
cmp
mov
jge
pop
fsubrp
inc
push
add
sub
out
jg
jno
repnz
sub
popa
dec
add
pushf
into
fmull
push
mov
insl
leave
daa
rep
cltd
xlat
mov
adc
lods
jmp
repz
in
mov
insb
mov
mov
notb
lods
mov
cmp
clc
jecxz
or
push
dec
dec
sub
lfs
lock
or
fcomi
or
and
shll
xchg
loop
sbb
jae
fisubrl
int
and
sbb
sub
push
in
cmp
mov
jl
jne
pop
in
es
les
and
out
xchg
idivb
subl
call
pushl
xchg
mov
aaa
aaa
xchg
or
inc
std
stos
xchg
lock
insl
jns
dec
mov
add
fdivrl
sub
cmc
lock
pop
rcr
pop
mov
popa
xchg
stc
and
inc
sbb
rcrl
fcomps
mov
mov
test
inc
mov
mov
fs
aas
add
and
sub
popa
mov
jbe
ja
sub
fs
jle
repnz
mov
or
adc
test
mov
and
inc
and
cmpl
pusha
shlb
ficoms
in
lahf
jnp
jnp
jecxz
push
enter
xor
sbb
xchg
mov
lret
icebp
xchg
or
enter
pop
cmpsl
shll
pop
loop
fcoml
adc
sbb
ss
mov
lock
test
mov
bswap
adc
ret
cmpl
fs
scas
dec
fcom
pop
jno
xor
mov
cmp
mov
popf
push
xchg
sub
sub
lock
mov
xchg
xor
sbb
negb
sti
sbb
xchg
into
xlat
les
sbb
insl
loope
jae
cwtl
push
pop
out
cmp
mov
loop
movsl
jp
mov
jno
iret
xor
ss
adc
cmpsl
pop
and
mov
sub
dec
add
rcl
lahf
mov
sbb
ret
sahf
sub
mov
cltd
mov
sbb
es
fnstsw
lock
inc
xlat
subl
cltd
int3
fsubl
or
xchg
push
roll
cmpsl
mov
adc
inc
or
imul
jno
inc
jle
lahf
scas
dec
dec
jp
imul
das
mov
std
xor
sbb
iret
xor
gs
loop
xor
sub
arpl
imull
lods
jnp
test
sub
sbb
and
mov
daa
xor
push
sbb
adcb
inc
repz
pop
addr16
cmp
fs
fcmovb
loop
cld
fwait
popa
int
in
popa
and
push
push
add
xchg
jp
dec
sbb
push
push
add
and
inc
push
add
dec
push
jb
jl
lret
jge
pop
or
xor
out
ret
add
out
cmc
mov
push
cmp
ljmp
stos
ret
pshufw
fs
push
or
loope
subl
out
mov
sbb
xor
jo
adc
dec
loope
mov
jne
enter
rol
push
in
insl
dec
push
insl
mov
popa
lods
inc
sub
lret
add
aaa
daa
movl
add
lods
jbe
mov
fiadds
dec
in
repnz
out
xor
mov
pop
das
push
mov
push
jno
push
mov
mov
dec
jg
cmp
pop
in
sarl
aam
jnp
mov
pop
call
jae
pop
inc
cmp
push
xor
or
xor
pop
repz
mov
ss
dec
add
insb
mov
mov
adc
insb
sub
mov
mov
divb
mov
mov
xor
or
push
shll
pop
inc
loopne
adc
pushf
aam
pop
cmp
sub
jnp
inc
xchg
stc
inc
pop
cli
pop
push
sbb
rcrb
cmpsb
jg
xchg
cmc
les
add
mov
shrb
arpl
loope
mov
call
int
cmp
sbb
in
es
jle
xadd
and
xor
sarl
pop
out
mov
dec
push
push
clc
dec
xchg
mov
sub
mov
jl
cmp
sub
add
fcmove
pop
in
adc
mov
out
test
xchg
fs
in
inc
hlt
jg
mov
es
testb
adc
ds
sub
xor
push
adc
std
das
cmp
mov
daa
sahf
mov
aam
ja
enter
retw
hlt
outsl
cld
xchg
clc
mov
mov
arpl
xchg
add
dec
mov
xlat
int
iret
sbb
sahf
jmp
jmp
xchg
push
leave
adc
xor
xchg
jne
data16
jecxz
dec
add
js
cmp
sub
push
xor
mov
pop
or
add
and
jmp
push
pmuludq
leave
imul
out
lcall
mov
aad
int
pop
dec
xchg
sbb
sbb
sbb
fbld
xchg
gs
sub
or
sti
out
or
mov
mov
mov
int3
sub
cmc
mov
inc
and
sbb
js
test
std
mov
orl
jo
adc
mov
std
or
sub
xor
jnp
sbb
addr16
mov
xchg
sub
imul
add
pop
scas
cmp
xor
in
in
sbb
add
dec
xlat
dec
in
and
pop
je
push
jne
sbb
cmp
mov
cmp
jg
in
dec
mov
xor
mov
add
out
sbbb
xor
or
movsl
in
and
cmp
sbb
push
mov
and
dec
pop
ret
xorl
xchg
mov
insl
test
push
jmp
cmpsl
cld
cltd
pop
hlt
jno
sub
outsl
inc
jb
pop
in
lcall
gs
mov
xchg
clc
sahf
pop
insb
and
inc
sahf
ds
cli
xor
xchg
mov
in
dec
dec
jb
cld
scas
and
xchg
loopne
loope
insb
out
in
sbb
sbb
push
cmpsl
and
pop
cmp
jo
pop
pop
pusha
gs
das
jge
mov
mov
xlat
in
add
popa
cmp
sbb
movsb
lock
cmp
call
mov
add
shl
shrb
add
lods
fwait
dec
xor
inc
insl
push
sahf
scas
sub
sbb
or
std
inc
pop
shll
es
jle
mov
cld
pop
shrb
out
loop
rcrb
mov
in
pop
adc
jae
mov
idivb
imul
or
jb
push
outsb
in
ficoms
add
push
or
mov
loope
ret
dec
jp
pop
mov
dec
jo
push
xchg
vmovd
sub
mov
cmpsb
outsl
add
cli
jne
add
dec
mov
push
sub
xchg
xor
addl
xchg
mov
and
loop
mov
cmpsb
jnp
or
inc
adc
and
add
out
cwtl
int3
int
pop
xor
add
dec
js
mov
or
cmp
xor
cmp
repnz
pop
xchg
push
xchg
subl
aam
fidivrl
int3
je
roll
or
cltd
repnz
adc
sbbb
test
stc
test
sub
xchg
cmc
cli
fstp
pop
pop
mov
and
mov
test
or
dec
jmp
jb
pop
aaa
data16
pushf
adc
ljmp
pop
xchg
fwait
xchg
push
test
jne
fsubs
push
mov
mov
out
mov
fs
xchg
xor
xor
mov
sbb
inc
lds
enter
push
xor
fwait
lods
cmpsl
std
sarl
mov
daa
push
js
xchg
repnz
mov
pop
scas
sbb
jns
scas
lret
jb
dec
adc
mov
or
mov
mov
and
inc
add
mov
lahf
xor
dec
dec
jbe
scas
scas
adc
xor
or
push
clc
jp
cmc
cld
mov
std
arpl
cwtl
repz
test
lea
jp
movsb
xor
sub
test
daa
xor
mov
mov
or
mov
dec
xchg
push
pushf
iret
stos
xor
cmpsl
stos
popl
and
test
aas
pop
popa
lcall
das
inc
scas
xchg
aas
popa
mov
in
insb
mov
icebp
push
es
inc
inc
fbld
test
xor
icebp
sbb
hlt
inc
cmpsl
js
and
sub
std
sub
sbb
mov
mov
push
adc
sahf
jmp
ret
and
mov
jbe
out
push
cli
aas
sub
loope
repz
inc
cmpsb
xor
adc
sti
sbbl
push
mov
push
insb
mov
popa
dec
xchg
lea
popf
cs
xor
mov
cld
negb
and
test
cmp
jae
mov
sbb
arpl
xchg
add
or
mov
xor
jbe
sbbl
ds
daa
xchg
out
cmp
mov
pop
enter
repz
mov
pop
xor
lods
mov
push
dec
inc
test
fildl
jle
xchg
out
icebp
pop
jle
add
lea
int
push
push
stos
clc
xchg
loop
mov
ds
out
out
bound
pop
in
jbe
xor
add
notb
cmpsb
scas
sub
repnz
adc
cmp
lahf
outsl
stc
lods
ret
mov
xchg
lcall
xchg
pushfw
push
test
adc
lods
fs
adc
sarb
pop
adc
mov
mov
mov
xor
aas
pmaxsw
or
inc
mov
das
ja
pop
mov
dec
into
hlt
sub
pusha
out
scas
insl
mov
das
repnz
sub
scas
push
cmp
pop
add
pop
orl
inc
and
push
push
enter
int
hlt
pop
fwait
pusha
stos
imul
adc
cmpsl
pop
rorb
jbe
dec
adc
or
push
mov
xor
or
sbb
mov
fwait
adc
mov
add
ficomps
aas
inc
jbe
movl
rclb
lcall
xchg
and
lcall
clc
sbbb
sub
sub
and
fistpl
gs
daa
insl
sub
aas
sbb
cltd
in
outsl
int3
int3
iret
xchg
outsb
sub
adc
je
dec
out
enter
sub
in
pop
sbb
nop
shll
in
dec
pop
dec
mov
add
scas
imul
cmp
inc
jg
fiaddl
cmp
inc
shrb
and
jb
data16
loope
jmp
int
in
je
adc
dec
cwtl
push
mov
pop
sub
cli
lret
cmp
loopne
mov
inc
test
ffreep
icebp
data16
xchg
cmpsb
aas
je
push
roll
cmp
jl
jecxz
dec
pop
pusha
and
mov
inc
repnz
xchg
cmc
nop
push
and
imul
xorb
jl
jnp
adc
cmp
inc
xchg
aad
ret
shlb
and
ss
and
aam
dec
movsl
inc
stos
cmp
add
mov
divl
clc
nop
repnz
lret
das
sub
sbb
or
add
mov
ficoml
xor
jnp
fstl
mov
mov
enter
adc
push
imul
jae
dec
sbb
bnd
mov
sub
cmp
sbb
cli
out
or
outsl
stc
and
imul
ret
push
jmp
fildl
cmp
adc
outsb
stc
sub
or
rcll
jno
fdivs
enter
loopne
dec
xor
int3
mov
xor
mov
rclb
push
outsl
dec
aad
add
stos
xchg
mov
add
les
nop
inc
lahf
leave
aas
xchg
mov
adc
jecxz
sub
pop
divb
adc
int
dec
leave
cmc
pmulhw
mov
pop
leave
lret
loope
fiadds
jg
xor
std
mov
mov
fcom
dec
loopne
ret
push
and
sti
lret
cltd
sub
xchg
inc
out
rcrl
daa
pop
cmpsb
cltd
add
arpl
mov
mov
and
mov
xlat
mulb
inc
add
jmp
push
jle
jecxz
pusha
rorb
jp
inc
inc
pop
das
mov
shlb
dec
sbbb
loope
fs
push
loop
and
push
negb
in
sub
inc
pushf
or
into
mov
add
divb
jecxz
test
jbe
arpl
fcoms
fistpl
push
ja
and
push
lea
call
sahf
sbb
push
push
fs
inc
movsb
mov
loope
mov
xchg
pop
test
mov
fldl
stos
loop
in
sub
dec
insl
cltd
loop
mov
leavew
sub
or
adc
scas
mov
ret
push
loope
loop
aas
std
mov
jb
ljmp
push
dec
jns
ss
mov
xor
mov
popa
inc
rorb
jge
mov
insb
adc
xor
jnp
aam
jb
loop
jle
call
mov
iret
pop
hlt
arpl
xorps
mov
fidivs
sub
xchg
xlat
imul
and
pushl
dec
incb
push
add
outsl
rol
xchg
xor
push
nop
inc
insl
inc
inc
and
cmp
mov
cltd
fchs
pop
dec
push
in
inc
xor
push
xchg
scas
xchg
push
push
mov
jae
sub
xor
cmp
je
in
icebp
and
loopne
jno
adc
xchg
out
cli
iret
out
popa
imul
jge
sbb
jg
pop
and
sub
movsb
push
loope
xlat
rorb
push
dec
inc
movl
arpl
pop
out
test
fnstcw
mov
sub
jp
sahf
cltd
or
inc
popa
in
inc
mov
scas
mov
aaa
pop
mov
xor
adc
test
test
cmp
pushf
jno
jno
add
ret
pop
adc
xor
jb
pushf
fisubl
fldt
inc
jmp
xor
push
or
aam
rclb
data16
and
push
push
test
push
adc
mov
xchg
push
repnz
fdiv
add
and
wbinvd
mov
and
xor
daa
mov
or
xor
stc
sub
cmpsb
inc
enter
jae
int3
int
fstps
leave
fiaddl
jo
nop
movsl
rcl
jae
mov
add
fbstp
movsb
sbb
andl
das
stos
imul
test
sti
cmp
xlat
scas
hlt
add
cmc
insb
add
xchg
inc
test
adc
sarl
sub
xchg
adc
mov
and
xchg
mov
dec
daa
rcll
jecxz
inc
mov
pop
lcall
std
mov
jo
push
cli
push
jno,pt
enter
sbb
adc
aam
push
aaa
mov
inc
xor
stc
mov
ljmp
sub
dec
in
mov
hlt
in
mov
bound
inc
repz
mov
mov
mov
xchg
iret
push
fisttpll
dec
inc
iret
pop
xor
decb
xchg
jns
dec
in
xor
cmp
cmc
inc
cltd
ljmp
test
fcompl
xchg
push
push
xchg
jg
loope
mov
repz
fcmovnb
and
jp
inc
mov
rclb
cmp
and
sub
repnz
and
jbe
mov
jo
cmpsb
enter
sub
popa
xchg
rcr
lods
xchg
xchg
or
lret
repnz
mov
sub
lcall
leave
sub
leave
push
pop
mov
repz
mov
fwait
cli
mov
inc
aad
inc
cmc
jo
pushf
inc
sub
mov
pushf
stc
lcall
xchg
fdivrl
adc
fisubrl
fistl
in
neg
sub
cmpsb
add
imul
xchg
jbe
pushf
mov
mull
test
mov
jge
cs
cmp
cmc
push
lods
out
or
mov
adcb
int3
xchg
mov
insl
sub
add
addr16
push
dec
mov
add
aas
adc
lods
mov
jmp
mov
xchg
mov
mov
jne
jecxz
shl
pushf
jecxz
add
in
xchg
sbb
and
mov
movsl
cli
cmp
stc
xor
rcll
push
into
sbb
std
mov
mov
fs
push
xor
lcall
mov
out
mov
push
imul
and
mov
mov
stos
sbb
xorb
add
jnp
mov
or
pop
lret
sbb
insw
mov
repnz
adc
idivb
movsl
mov
jo
out
fistps
bound
adc
mov
mov
or
lret
adc
or
repz
inc
subb
mov
inc
cwtl
sti
inc
or
dec
imul
xchg
mov
popa
pushf
sbb
lret
jns
out
cli
arpl
hlt
nop
jne
imul
or
lcall
cli
inc
pop
test
mov
sbb
repnz
xchg
xor
imul
adc
fwait
in
cmpsl
or
jns
add
pop
cmc
fwait
and
ljmp
je
push
add
popf
cmp
es
cmc
or
dec
mov
inc
adc
hlt
mov
push
jecxz
jb
xor
es
sub
out
imul
or
test
inc
pop
cmp
arpl
aas
mov
mov
movsl
cli
data16
lcall
mov
int
outsl
aad
lock
cmc
push
mov
sbb
mov
fs
shlb
loope
fs
das
cld
fistpl
mov
sbb
jg
mov
call
jno
inc
pop
push
pop
ds
fdivs
jecxz
std
ret
dec
push
xchg
in
xchg
mov
xor
loop
dec
fwait
loop
lret
mov
lret
lea
push
mov
lcall
cmpsb
sbb
addb
add
xor
mov
std
mov
stos
xchg
mov
fincstp
insl
into
adc
jp
dec
sti
mov
fst
dec
xor
dec
push
lcall
dec
jb
cmpsl
and
inc
mov
cwtl
test
ficoml
hlt
lcall
mov
fs
stos
outsb
xchg
lods
test
add
add
push
mov
cmp
xchg
sbb
es
aam
lret
or
mov
cld
mov
mov
pushf
lea
push
mov
or
xchg
inc
das
and
out
icebp
in
mov
inc
nop
gs
push
popa
aam
or
jle
and
push
lahf
pop
mov
pop
or
insl
jnp
dec
xchg
sbb
in
cmpsb
jb
rcr
and
inc
adc
mov
pop
dec
stos
je
xchg
and
insl
pop
cmc
fstpl
fmuls
movsb
js
mov
sub
mov
inc
add
or
lods
xchg
js
xchg
pop
addr16
roll
xchg
ljmp
test
cwtl
mov
out
sbb
ds
dec
lret
inc
push
ret
push
xchg
ljmp
fiadds
cwtl
sub
pop
in
rorl
push
xchg
mov
cmp
jmp
lea
psraw
lcall
pop
push
mov
add
adc
mov
and
dec
addr16
lcall
outsl
sub
je
pusha
fildll
fldt
pop
test
dec
cmpsl
xor
sbb
jbe
pop
jg
mov
or
adc
and
push
int3
out
sbb
outsl
mov
arpl
jecxz
lea
or
mov
stc
xchg
jl
inc
dec
or
popf
adc
sti
cmp
mov
rcrl
in
push
fbld
mov
mov
xlat
cli
inc
aam
push
in
clc
cmp
sub
imull
outsl
push
mov
sahf
dec
imul
clc
pop
lods
sbb
mov
bound
and
or
cmc
or
outsl
out
fs
or
inc
dec
loopne
insl
pop
or
hlt
xchg
fs
push
xor
out
sti
adc
stc
testl
or
sub
xor
cmc
repz
push
iret
mov
roll
xor
addr16
out
fmuls
addr16
inc
aam
mov
hlt
inc
xor
and
cmpsl
or
inc
imul
inc
sub
daa
insl
fldl
repz
into
lcall
push
stos
xor
imull
leave
lods
jb,pt
loopne
pop
jno
ret
add
mov
out
cs
inc
fs
ds
mov
subb
push
out
nop
daa
or
cs
jmp
iret
mov
ljmp
cltd
aaa
dec
sbbb
xchg
mov
pop
dec
shrl
dec
mov
cmc
rorl
jo
mov
test
pop
lret
sub
adc
sbb
testb
xor
xchg
xor
out
jne
xchg
andl
cwtl
outsb
jmp
push
push
push
xchg
iret
adc
fdivr
fisttpl
stos
push
shll
sub
mov
mov
and
insl
inc
xor
insb
out
mov
and
fcmovb
xchg
clc
int
sub
jl
push
pop
inc
lods
and
je
les
adc
pop
jmp
sarb
gs
xchg
sbb
mov
dec
jo
scas
cltd
mov
sub
outsb
jae
rolb
roll
je
jb
xor
mov
dec
rol
addb
ss
outsl
xchg
pop
cmp
sti
les
mov
pop
jecxz
jb
clc
movaps
ds
lcall
inc
cmpsb
imull
adcl
je
sub
dec
pop
scas
cmp
fs
push
lcall
pop
mov
inc
test
mov
std
xchg
mov
scas
inc
xchg
or
jmp
sub
lret
ficompl
sbb
cs
fs
mov
dec
out
inc
je
ss
mov
cwtl
and
aas
add
jmp
pusha
sbb
out
sarl
insl
or
je
insb
in
pushf
and
dec
js
std
cltd
pop
mov
sarb
outsb
jne
test
pop
insl
loope
dec
pop
or
adcl
sahf
adc
and
addb
sub
dec
addr16
push
fs
ds
pop
sbb
mov
gs
test
in
cmc
mov
jp
mov
mov
pop
jmp
pop
jne
push
cmp
stc
xchg
jb
pushl
lcall
inc
sub
inc
push
mov
and
dec
lret
pop
cltd
in
push
loopne
push
out
adc
das
popl
mov
mov
xor
js
movsb
pop
and
adc
sti
mov
std
daa
cmc
les
inc
sbb
fcmove
hlt
pop
rolb
je
lock
mov
insb
xchg
mov
fwait
jo
xor
fmull
outsb
aas
test
adc
test
cmp
ljmp
xchg
pop
lahf
lods
cs
xchg
je
push
and
jo
test
sbb
jle
mov
enter
int3
and
mov
pushf
push
pop
sub
xchg
scas
or
mov
repnz
sbb
lods
jne
cmp
sarb
filds
pushf
testl
pop
lcall
iret
ret
sub
jo
test
or
pop
adc
movsb
ja
stc
xchg
cwtl
popf
lret
mov
or
fadds
adcb
fistps
pop
add
push
push
mov
xor
add
xchg
and
in
lret
fsubl
stos
movsb
push
dec
jae
dec
leave
cmpsb
in
dec
aaa
pop
sub
pop
out
push
jnp
test
pop
sub
xor
dec
xor
out
lods
mov
out
shlb
mov
push
push
lods
cmp
mov
into
mov
aaa
lock
imul
jo
push
filds
js
test
push
dec
scas
pop
push
fwait
lret
mov
fwait
and
stc
sbb
shrl
pop
or
inc
push
test
je
xor
fdivrl
xchg
add
and
adc
dec
jmp
imul
mov
cmp
outsb
js
cmpsb
pop
jno
stos
push
jle
negb
and
push
sub
jg
je
aad
ret
ss
xlat
ljmp
in
pop
int3
loopne
cli
adc
and
sbb
addr16
ret
shrb
sbb
aaa
ja
loope
out
ss
gs
mov
xor
in
loop
xchg
out
push
mov
aam
popf
pop
ss
bound
or
push
in
mov
push
inc
push
xorl
movsb
dec
sbb
or
sub
and
outsb
jg
sti
mov
adc
inc
pop
and
jae
xchg
rclb
shr
repnz
in
aam
mov
pop
xchg
or
call
mov
addr16
xchg
mov
dec
cmp
or
hlt
insb
pop
stc
lods
xchg
stos
inc
fcmovbe
push
nop
cwtl
rorb
setno
sbb
pop
iret
jecxz
xchg
cld
inc
push
rorb
fdivp
mov
jo
jg
cmpsb
push
test
stos
daa
daa
cmp
mov
insb
dec
sbb
sub
shll
negl
xor
push
outsl
dec
fcomps
lahf
sbb
push
sub
aad
jmp
lahf
jns
and
mov
test
das
dec
in
fwait
and
enter
ja
fadds
or
js
fisubrl
daa
cmp
jnp
fsubrl
sub
mov
or
ss
add
lret
cwtl
jg
jae
push
jbe
lahf
mov
mov
sbb
xchg
xor
mov
adc
jno
lds
jne
mov
enter
nop
pop
pop
cmpsb
mov
mov
test
cmp
pop
lea
call
pop
mov
pop
sbb
pop
inc
xchg
xchg
lock
dec
or
add
outsb
addb
sbb
adc
dec
cmp
xchg
sbb
sbb
pop
loop
dec
ja
mov
hlt
sub
out
leave
sti
mov
dec
inc
pop
movsb
fisubl
xchg
lds
scas
paddb
ss
sbb
jmp
arpl
push
adc
push
cmpsl
imul
xchg
cld
sbb
xchg
sub
mov
adc
ret
add
popf
xchg
insl
sub
fistpl
in
mov
loopne
sub
xchg
dec
out
ror
decb
lock
add
fidivrl
or
xchg
std
mov
stos
cmpsl
jae
adc
aad
fcomi
in
ljmp
jnp
push
jb
mov
inc
mov
push
sbb
outsb
lods
pop
scas
push
mov
push
and
daa
cmp
iret
insb
mov
ret
les
cmp
mov
lea
dec
or
mov
pop
std
in
mov
lock
mov
sub
jl
sti
sbb
sbb
andb
test
jmp
loop
mov
imul
xchg
xchg
enter
adc
aas
xor
sbb
adc
test
out
dec
add
rcr
punpckhwd
pop
adc
push
fsubs
loope
out
mov
mov
push
in
pop
and
sbb
clc
ret
shr
insb
lret
imul
jnp
add
dec
in
jecxz
arpl
inc
adc
push
sbbl
mov
mov
aam
movsb
xor
jge
mov
cmp
push
cmp
push
xor
pop
mov
data16
pop
dec
aas
lods
xchg
pop
sbb
sub
adc
mov
pop
xor
lods
xor
int3
pop
mov
jle
cmc
xor
mov
add
jl
jp
mov
mov
movsl
int3
and
mov
ret
push
or
flds
add
xor
cmpsl
push
xor
mov
push
fsts
test
jno
sub
outsl
push
popa
and
dec
mov
dec
push
inc
mov
mov
mov
mov
es
call
pop
adc
mov
or
pop
pop
push
push
sbb
cmpb
rcrl
pop
sub
add
in
divb
sub
rcr
dec
xchg
pop
mov
push
insb
scas
leave
cmp
ljmp
mov
jp
fistpl
cltd
pop
mov
in
cmp
std
cmpsl
and
int3
xor
outsb
ja
idivb
test
pop
movsl
icebp
lock
sub
mov
mov
into
ds
aad
jno
xor
ffreep
stc
nop
jns
lods
lods
push
enter
dec
push
pop
dec
xlat
xor
sahf
add
cmp
into
repz
dec
sbb
dec
xchg
js
into
xlat
xchg
mov
jg
in
sbb
mov
loopne
jae
data16
pop
push
xor
adc
in
xchg
daa
aas
mov
cld
xchg
and
loope
mov
sub
icebp
imul
pop
pop
xchg
test
mov
cmp
int3
xlat
es
mov
sbb
adc
add
mov
outsl
cld
dec
adc
push
scas
out
fsubrs
cwtl
sub
lret
lret
xchg
scas
mov
inc
mov
push
orl
inc
fidivs
mov
in
test
out
test
sbb
jae
in
stos
lods
xchg
fwait
mov
loop
xor
sub
mov
mov
pusha
int
repnz
inc
inc
outsl
sarb
in
jg
imul
push
and
mov
stos
fwait
mov
mov
jp
lcall
mov
push
mov
push
cmp
lock
mov
adc
data16
in
sub
sbb
cmpsl
dec
mov
jnp
sbb
push
insl
xor
xchg
out
hlt
jmp
aam
aaa
std
jns
jns
rcrb
outsb
push
sub
je
jae
or
sbb
lret
clc
push
dec
mov
lcall
je
roll
dec
arpl
pop
inc
lods
dec
pop
or
xchg
outsb
inc
adc
addr16
lock
lret
enter
lcall
imull
sbb
out
pop
mov
pop
or
inc
add
sub
mov
and
lea
outsb
cmp
add
and
out
cwtl
jmp
sbb
mov
add
repnz
ss
dec
mov
out
add
sub
into
mov
int3
in
dec
cmp
dec
push
popf
mov
movsb
sbbl
sbb
mov
mov
adc
adc
and
mov
lods
ljmp
jae
add
add
cwtl
fwait
repz
fcmove
test
ljmp
in
and
mov
cld
add
fs
jno
mov
lods
dec
add
imul
sub
daa
xchg
mov
das
xor
pop
test
loop
out
fnsave
fisubl
ret
andb
pop
or
nop
stos
imul
xchg
test
push
enter
or
sub
sub
outsb
fsubrs
mov
je
sbb
fdivrp
sarl
xor
fwait
push
adc
xor
mov
stos
or
sbb
repz
jmp
fisttpl
inc
mov
into
stos
test
out
dec
ficompl
add
jp
roll
jns
loop
out
rclb
jl
pushf
mov
mov
lea
mov
mov
fsub
cltd
lret
in
inc
inc
or
pop
dec
xchg
stos
push
push
mov
fcoml
jg
and
jp
enter
push
mov
movsl
lock
or
cmpsl
jb
loop
lret
push
xor
xchg
inc
aam
sub
stos
in
pop
leave
xlat
adcl
mov
std
leave
lcall
mov
jl
pop
adc
fucom
and
dec
in
cmp
std
xor
sbb
pop
movsl
push
icebp
je
sar
and
cli
int3
mov
arpl
sub
lods
cmp
imull
jle
fnstsw
ret
lret
into
mov
mov
lods
jp
movsl
test
in
sub
xchg
cli
and
xchg
inc
stos
dec
sbb
repz
sub
mov
cld
mov
loopne
cwtl
push
jb
loop
push
or
mov
std
mov
scas
imul
or
loope
daa
orl
aaa
sbb
sub
and
sbb
push
ret
push
adc
je
push
sbb
and
fdivrl
pop
aaa
int3
and
mov
adc
push
mov
dec
into
jp
rcll
jge
scas
mov
lock
mov
jge
mov
cmc
test
int
call
mov
xchg
adc
pop
or
ja,pn
pop
ljmp
fmull
or
repz
insl
rcrl
into
pusha
inc
sbb
std
mov
dec
or
pop
xchg
aam
in
sub
lcall
jecxz
bound
mov
pop
scas
lds
mov
or
add
jge
leave
insb
sbb
nop
aaa
push
bound
out
and
mov
add
and
movsl
std
flds
js
jmp
jb
in
fwait
dec
addr16
cli
push
inc
jns
inc
adc
repz
mov
mov
mov
xor
xchg
lahf
xor
arpl
inc
imulb
adc
cmp
sub
mov
test
or
and
cs
xor
mov
sub
sbb
pop
push
shlb
mov
rorb
mov
out
rcr
sarl
inc
push
mov
dec
sub
addr16
lret
popf
jp
fisubrs
and
adc
adc
adc
je
popf
cmp
mov
mov
in
stc
dec
mov
loop
cmp
sub
jle
test
dec
call
out
std
jle
push
ret
sbb
std
push
xchg
dec
xchg
fistps
aam
sbbb
push
ljmp
out
mov
out
jb
cli
in
lods
mov
lods
and
or
lock
enter
fs
inc
adc
stos
sub
call
add
int
pop
jle
daa
sbb
xor
mov
inc
mov
idivl
test
mov
and
cmp
mov
xchg
add
pop
lret
push
pop
rclb
je
sub
lock
mov
mov
mov
jbe
mov
xchg
adc
xchg
subb
mov
sti
or
mov
imul
popf
xchg
std
scas
hlt
push
add
mov
push
xlat
pop
mov
push
fisttpll
jae
mov
dec
sbb
push
adc
mov
push
pop
vucomisd
bound
movsl
push
and
aad
sbb
cmp
movsl
jbe
cwtl
idivb
jle
mov
je
imul
push
jmp
clc
xchg
and
mov
or
arpl
push
cld
cld
shl
xchg
cs
scas
cmpsl
mov
mov
mov
js
cld
adc
imulb
and
xor
in
idivb
mov
orl
pusha
mov
and
out
mul
inc
in
sbb
icebp
mov
pushf
mov
adc
sub
out
xchg
add
lret
inc
add
stos
inc
in
xor
test
fnstsw
cmp
ljmp
dec
inc
imul
and
xchg
mov
xchg
push
repnz
adc
mov
stos
aam
cmpsl
aaa
insb
push
pop
sti
jge
les
jo
adc
xchg
mov
mov
popa
enter
pop
repnz
leave
xchg
or
mov
cmp
int3
leave
cmp
or
push
das
je
stc
cmpsb
lahf
lock
cld
cmp
jns
pop
lret
or
mov
inc
sub
aas
pop
or
or
mov
push
jmp
push
aaa
push
dec
flds
or
cmp
or
ret
jbe
test
inc
or
stos
push
ljmp
insb
int
js
dec
and
jnp,pn
les
push
rorb
test
jns
popa
outsl
insl
fxch
push
sbb
jp
and
lds
mov
mov
xchg
jmp
jns
mov
clc
lret
pop
push
cwtl
js
add
mov
mov
fstpt
repz
cmp
movsl
rorl
outsb
sub
lods
push
xor
push
jne
sbb
dec
jl
pop
cmp
mov
sbb
jg
dec
call
or
mov
jo
push
mov
dec
xchg
cmp
clc
out
gs
adc
ljmp
push
pop
pop
ss
pushf
out
mov
pop
cwtl
jge
pop
push
jmp
cmp
cmp
aad
shl
xchg
xchg
cmp
push
cmpsb
sbb
jle
mov
add
in
movsl
pop
add
test
xorl
outsb
loopne
push
shrl
movsb
popf
push
aam
ss
repnz
xchg
mov
and
fimuls
faddp
inc
cwtl
mov
es
insb
imul
cmpsl
jno
popf
add
add
pop
out
dec
adc
cmp
mov
loop
mov
xor
pop
inc
adc
and
sub
add
repz
out
lret
fisubrs
sbb
inc
add
mov
sbb
cmp
xor
pop
jle
xor
cmp
ret
cmp
jmp
lods
mov
cmp
fimull
add
push
xchg
int
imul
cwtl
je
mov
and
repnz
and
es
xor
push
mov
mov
clc
sub
mov
lahf
xchg
xor
pop
add
gs
mov
pop
and
mov
jg
pop
int
mov
es
push
mov
dec
or
inc
mov
mov
push
jl
cmp
mov
sbb
decb
pmullw
dec
cltd
repz
std
fwait
ds
fs
fs
testl
repnz
adc
xor
ficoml
xchg
dec
and
outsb
mov
mov
aaa
and
push
pop
stc
sbb
mov
stos
in
mov
faddl
dec
jae
sub
dec
iret
mov
aam
rolb
mov
mov
sub
cmp
es
mov
jl
lods
push
ds
mov
inc
and
and
push
xor
or
cmp
stos
mov
shl
fistps
fs
ja
out
fmuls
or
pop
xor
xchg
xor
ret
cmp
inc
ror
loop
push
aaa
push
ds
adc
ret
outsb
repz
mov
test
xor
ret
ret
sarl
hlt
xor
fcmovbe
xchg
fnstenv
mov
insl
or
rcr
frstor
pop
adcb
lcall
cli
pop
or
loopne
rol
lods
dec
jbe
sarb
xor
pop
cmpsl
aaa
jno
xchg
mov
push
fstps
sub
xchg
mov
stos
pop
mov
xchg
or
scas
subb
and
inc
cwtl
fcmovnu
jne
xor
pop
fs
xlat
in
lods
repz
mov
dec
and
inc
pop
pop
out
pop
xchg
dec
jge
sbb
sub
cmp
add
stos
stc
aam
pop
cmp
test
dec
cmp
out
ja
ds
jbe
add
and
hlt
stc
icebp
or
jmp
repnz
cmp
push
jbe
pop
fmull
test
lds
aad
mov
inc
and
xchg
not
sub
es
fnstcw
or
cmp
push
cli
aaa
imul
mov
movsb
xor
xchg
outsb
xor
jnp
scas
or
stc
mov
outsb
and
aas
dec
sub
inc
out
rorb
mov
jb
mov
sub
gs
sbb
jbe
adc
popw
mov
imul
pop
mov
enter
or
dec
popa
mov
xchg
lods
aam
adc
dec
add
mov
stc
mov
nop
cltd
daa
call
test
pop
jmp
xor
fistpll
dec
orl
dec
add
popa
mov
add
sahf
lea
sti
add
sub
cmpsb
dec
in
stc
push
imulb
sbb
push
mov
jne
push
mov
addl
xchg
or
push
outsb
call
push
push
lahf
ds
pop
imul
mov
and
inc
les
cltd
cs
pusha
sbb
inc
inc
push
add
sbb
and
es
cmp
xchg
test
mov
ret
jl
leave
add
push
sub
inc
popf
lret
outsl
popa
mov
and
arpl
rol
or
xor
xchg
mov
and
cs
mov
outsb
lods
sub
and
push
xor
jo
mov
aaa
sbb
hlt
mov
in
cmp
jmp
test
pop
or
pop
sbb
and
adcl
rcll
arpl
mov
or
into
hlt
mov
xor
lea
orb
loopne
imul
mov
imulb
jno
push
pop
or
lcall
fstpt
iret
xchg
iret
xchg
stos
fnstcw
mov
pop
cltd
pusha
pop
inc
outsl
xchg
ds
fistps
scas
cmp
int3
clc
ret
fstpl
sar
push
mov
rclb
idivb
lahf
ljmp
dec
adc
or
popf
lds
andb
dec
addl
jnp
movsb
lds
ret
push
cs
xor
test
cmp
mov
iret
jle
adc
xor
adc
or
out
into
xchg
insl
jmp
sbb
push
push
xor
aam
in
enter
cli
fsubrs
pop
inc
adc
cld
loop
orl
mov
jmp
jnp
xor
pop
or
inc
pop
jg
lds
and
jae
mov
sbb
sbb
inc
or
aaa
sti
sub
test
sub
dec
jmp
stc
loope
scas
dec
xor
xchg
out
push
or
jecxz
int
lahf
negl
or
jmp
mov
aas
nop
mov
cmc
gs
xchg
dec
shl
mov
sub
mov
in
and
xchg
inc
mov
push
pop
sti
cmp
je
mov
dec
pop
sbb
mov
dec
ja
push
pop
cltd
mov
repz
test
mov
shlb
mov
mov
shll
or
fisubrs
mov
test
leave
lret
xchg
lret
mov
push
pusha
inc
mov
or
lock
push
sub
out
enter
out
jge
fwait
cmp
xor
stos
and
sbb
push
xchg
movaps
sub
ret
lcall
mov
push
cmpl
push
or
sbb
rolb
pusha
sbb
push
and
cmpsl
xchg
loope
lret
jbe
aad
push
gs
cmp
jne
mov
xchg
inc
subl
andb
adc
data16
jmp
aam
sbbb
mov
xchg
and
mov
inc
xchg
mov
movl
imull
add
stos
ljmp
and
hlt
jmp
jge
into
ja
loopne
xor
and
xchg
push
stos
cs
jae
pop
mov
pop
add
ja
pusha
std
stos
daa
push
pop
movsb
lcall
cmpsl
scas
inc
cmp
in
and
mov
popf
popf
mov
add
lds
cwtl
aam
jl
outsb
push
cmpsb
mov
and
es
in
mov
jmp
aad
sti
lds
xchg
data16
inc
iret
loop
repz
addr16
mov
mov
jb
loope
popa
js
mov
xchg
inc
fstpt
and
js
or
aad
sbb
dec
movsl
lock
jle
or
ss
scas
mov
imul
pop
in
pop
cmpb
sub
insb
out
cwtl
or
push
out
rcrl
add
mov
pop
push
push
cltd
lea
int
fimull
cwtl
dec
sbbb
cmp
cmp
fcomi
or
or
shll
xor
mov
sub
lods
sub
ret
aad
loop
fnstsw
inc
enter
ds
lods
cmp
adc
mov
movl
lret
mov
pop
imul
les
push
xchg
jns
shlb
stc
imul
and
jbe
mov
repz
les
cmp
cs
stos
cmp
insl
iret
jnp
mov
inc
ss
mov
out
mov
aaa
jmp
push
push
pop
jmp
sbbl
push
mov
das
push
mov
mov
test
imul
push
cld
pop
loope
mov
cmp
push
sbb
jp
xor
leave
dec
icebp
mov
mov
out
int
mov
leave
addb
mov
arpl
data16
mov
push
dec
xor
mov
inc
adc
mov
lods
addr16
pop
outsb
js
mov
and
cmp
les
cmc
out
pop
push
mov
xor
adc
jno
adc
daa
fimuls
int3
mov
pop
jo
xchg
mov
aas
xchg
scas
nop
lods
adc
mov
pop
dec
mov
dec
xchg
dec
pushf
cmp
and
push
das
mov
es
outsl
rorb
adc
jae
sub
rorl
imull
out
adc
mov
mov
mov
mov
mov
or
arpl
cmc
ja
ret
sub
jbe
sbb
adc
sti
iret
cmpsl
lea
cmp
fiadds
in
xchg
sbb
lea
jg
xchg
dec
scas
dec
sbb
popl
adc
jp
cmp
mov
out
adcl
cmp
cmp
push
lcall
mov
mov
rcll
je
popf
or
mov
xor
mov
aas
xchg
maxps
sbb
test
rolb
aas
mov
cwtl
pop
sub
rorb
lahf
sbbb
dec
mov
sbb
or
ja
xchg
stos
in
mov
pop
scas
lcall
cmc
or
sub
mov
lea
push
ljmp
scas
imul
sbb
ss
lods
ljmp
cli
aam
xchg
leave
aam
xchg
mov
jo
mov
or
pop
addr16
pop
out
or
jnp
xchg
popa
pusha
out
imul
repnz
repz
fstps
cli
aaa
cmc
pushf
ficoms
das
in
and
dec
in
push
mov
sahf
jo
out
push
mov
dec
aas
cmp
cmp
inc
cs
test
lret
pop
loop
lcall
push
sub
or
mov
cmp
sub
test
and
ljmp
adc
bound
outsl
xchg
lret
cmc
cmpsb
call
push
ss
sbb
data16
aam
xor
pushf
cli
mov
test
fs
enter
popf
fisubl
jae
xchg
imul
jno
cmpsl
add
clc
xchg
mov
out
das
out
insb
dec
push
mov
imul
mov
jle
pop
mov
fsubrs
push
and
sbb
dec
fmull
ljmp
cltd
inc
out
or
push
test
inc
fdivrs
scas
lock
sub
jns
decb
sbb
sub
test
xchg
or
or
faddl
test
pop
cmpb
mov
mov
dec
xchg
fisubrl
fs
xchg
fisttpl
pop
sarl
mov
scas
xchg
cmp
mov
jecxz
sub
jbe
sub
cltd
mov
jge
data16
stc
rcl
mov
lret
dec
and
lcall
ret
sub
cmp
push
mov
or
or
jle
loopne
jp
xchg
outsb
dec
ret
jp
scas
test
xor
mov
rol
xor
cmp
mov
std
or
lods
xchg
pcmpeqd
cmp
decl
ret
in
lcall
enter
test
js
gs
add
push
adc
sub
dec
jo
sarb
cs
enter
popf
fadds
and
popl
push
pop
js
add
and
lret
pop
punpckhdq
sahf
or
sahf
pop
add
iret
jns
lret
call
shll
cmpsb
in
lds
or
mov
sbb
push
sbb
call
push
jle
jmp
sub
xor
jmp
mov
scas
mov
test
sub
lods
aaa
push
xchg
ss
es
mov
movsl
xor
jecxz
xchg
sahf
imul
inc
dec
ficompl
cmp
sbb
jno
sbb
adc
push
mov
push
fucomp
mov
cmpsl
outsl
jecxz
mov
add
adc
fldcw
lock
nop
fstp
fwait
scas
cs
cltd
mov
push
xchg
adc
xor
mov
push
sbb
adc
push
jle
sbb
jne
in
or
pop
cmp
pop
icebp
pusha
sbbb
xchg
mov
test
lods
daa
leave
xor
aas
and
xchg
xchg
das
cmp
popf
cmp
jl
out
mov
push
fstsw
jg
xor
adc
lret
adc
cmp
adc
aad
jle
pop
cmp
or
mov
mov
mov
jmp
mov
lcall
and
or
sub
add
nop
push
xchg
enter
stos
out
or
mov
xchg
cld
insl
fs
mov
jo
repz
arpl
mov
js
push
lods
push
jle
mov
dec
jnp
lret
pop
cmp
stos
xor
aam
and
ret
cltd
jg
les
sbb
jg
mov
sbb
or
push
lea
cwtl
testl
inc
ret
xchg
mov
dec
sub
stc
cmp
mov
stc
mov
and
or
inc
and
cwtl
jnp
pop
mov
stos
lds
daa
out
push
ret
push
pop
ret
push
mov
push
scas
jne
ret
or
hlt
shll
mov
push
push
fidivrs
insb
pop
or
mov
es
cli
lods
push
xchg
xchg
movsb
mov
sub
out
nop
fs
jmp
or
mov
movhps
dec
dec
pushf
push
jecxz
pop
pop
push
stos
je
ror
ss
insl
xchg
es
mov
dec
mov
nop
xor
arpl
lock
les
dec
add
mov
xchg
addl
push
int
out
sahf
inc
aam
dec
repz
dec
inc
or
and
test
inc
inc
hlt
push
and
cmp
xor
and
pop
sar
and
sbbb
iret
or
cmp
adc
outsl
mov
pop
jg
data16
add
lock
sbb
lret
push
incl
es
iret
xchg
repnz
jno
mov
lock
and
adc
xchg
pop
pushf
pop
stos
inc
das
jmp
lahf
fwait
sbb
sti
outsl
xor
jns
in
je
stos
mov
enter
xlat
mov
stos
or
add
mov
pop
xchg
jne
mov
sub
and
push
xchg
adc
cmp
adc
outsb
mov
je
sub
cmp
stos
inc
inc
xchg
dec
aas
jbe
out
jmp
xor
push
sub
cmp
lods
enter
mov
scas
loopne
push
shlb
xchg
mov
push
xorb
movsb
mov
sti
repz
nop
aad
pop
and
dec
xor
aaa
pop
mov
addr16
sbb
pop
dec
clc
mov
iret
mov
daa
mov
mov
adc
std
xchg
call
xchg
or
mov
pop
mov
pop
add
mov
mov
jns
mov
xchg
adc
jne
lods
ja
imul
jecxz
jno
pop
inc
jb
pushf
pop
and
push
imul
aam
les
or
or
repnz
sub
testb
in
loop
push
xor
fbld
cs
cli
cmp
repz
lods
lods
add
xchg
jmp
mov
insb
lahf
dec
fcomps
fisubs
out
inc
cmpsb
mov
dec
je
sub
stc
mov
fwait
dec
push
push
rolb
push
out
ljmp
xchg
cmc
popf
out
idivb
fcmovnbe
out
mov
push
dec
or
arpl
loopne
mov
inc
xchg
sbb
push
in
fstpl
ret
daa
mov
in
mov
pop
fiaddl
mov
inc
dec
fmuls
add
and
adc
xor
adc
jbe
xchg
fwait
push
inc
loope
pop
mov
and
fldcw
mov
imul
frstor
mov
ja
or
dec
sub
mov
mov
aas
out
xor
loopne
outsb
push
cld
adc
xchg
icebp
dec
shll
test
test
pop
lock
push
xor
xchg
adc
out
push
and
insl
cli
pop
push
js
push
dec
rcll
fiadds
cmp
sub
jnp
and
mov
mov
cmp
push
xor
insl
das
scas
push
popf
pop
sarb
add
sbb
cmpsl
ficomps
sbbl
xor
sti
push
movsb
jno
or
mov
lcall
mov
xor
jmp
and
mov
push
ror
pop
mov
iret
pop
je
xchg
push
lods
and
outsb
jl
mov
imul
jl
in
je
rcr
xchg
xchg
mov
loope
arpl
int
testl
xor
stos
or
cmp
sub
xlat
sbb
sbb
into
dec
sbb
inc
ror
gs
orl
mulb
mov
xchg
push
fadds
testb
clc
xor
lret
addr16
arpl
test
lret
leave
and
sti
gs
shll
mov
mov
pop
inc
push
xorl
imul
lret
fimull
cli
adc
arpl
and
aas
push
and
push
fstpt
push
dec
pop
mov
fdivr
mov
jnp
add
insl
test
inc
jns
push
xchg
cmp
imul
or
mov
pop
sub
stos
jnp
rorb
jmp
pop
push
js
xchg
xlat
outsb
hlt
lret
jno
dec
cmc
cmp
dec
fstps
mov
fnstenv
jle
rorl
mov
xor
jns
jbe
inc
cmc
push
push
mov
jp
sbb
or
jg
lret
jmp
out
ja
fiadds
sub
sbb
insb
push
test
mov
lret
or
sbb
dec
pop
jne
jns
push
rclb
loopne,pn
mov
add
xchg
fcmovu
adc
sub
fsts
dec
push
cmp
mov
inc
mov
push
push
movsl
mov
mov
xorb
sbb
ljmp
pop
arpl
iret
decl
inc
cmp
push
in
fisubs
aas
loopne
xchg
shll
mov
subl
xlat
sub
inc
ret
and
aad
daa
test
sub
sarb
imul
fmuls
xlat
inc
lret
stc
cmp
push
push
jnp
cltd
inc
mov
int
mov
and
mov
scas
xchg
mov
psrlw
jl
or
fwait
sahf
mov
dec
testb
inc
adc
or
lcall
xor
sarl
std
xchg
dec
lods
adc
or
xlat
mov
xor
lahf
pop
push
imul
stos
cmp
mov
jo
je
and
sbb
sub
and
je
xchg
div
dec
push
mov
mov
popf
push
ret
mov
jne
aad
das
mov
cmpsl
insb
int3
or
mov
shrb
push
mov
scas
insb
cmpb
cmc
mov
into
push
out
cmp
aaa
test
incb
jbe
repnz
jle
cmp
rcrl
pusha
in
pushf
mov
xchg
dec
mov
mov
nop
outsb
xchg
jge
aam
cmpsl
icebp
xlat
jmp
mov
lods
cmpsl
xlat
fisubrs
jo
and
xchg
cltd
mov
jb
sub
out
fadd
into
rep
add
pushf
fidivrl
fsubp
in
mov
inc
call
adc
outsl
push
or
out
lods
je
shll
adc
es
inc
lret
arpl
add
mov
or
xchg
and
rcl
jno
icebp
push
andl
mov
and
dec
subl
fildl
scas
dec
ljmp
adc
push
inc
add
inc
pop
mov
in
rcrl
mov
loop
cmp
push
ljmp
fucomp
insb
xlat
mov
mov
mov
mov
push
std
inc
sbb
and
mov
jnp
push
pop
mov
insb
popa
jmp
movsb
mov
adc
jge
fs
out
enter
sbb
pop
loopne
mov
and
inc
jbe
repnz
hlt
xorl
cmpl
xlat
push
mov
push
mov
push
stos
add
mov
xchg
add
sub
mov
sub
in
pop
push
pusha
lods
lock
add
push
sbb
data16
repnz
push
les
pop
mov
test
scas
mov
imul
sub
and
das
imul
std
in
iret
or
subl
cltd
add
insb
ss
les
inc
scas
pusha
fldcw
shll
das
jae
cmc
and
xchg
push
inc
pop
mov
and
rcrl
xchg
adc
xchg
inc
jmp
idivb
movsl
cmpl
add
mov
arpl
adc
fisubrl
sahf
lock
mov
scas
mov
arpl
iret
out
inc
into
sti
pop
adc
stos
sub
jno
adc
int3
mov
icebp
sub
dec
aad
pop
ds
xchg
pop
or
sbb
cmp
std
add
imul
pop
jg
push
xchg
das
sbb
and
inc
sysexit
dec
fisubrs
ret
mov
add
inc
andl
pop
xchg
push
cmpsb
int3
shll
xchg
loopne
ja
inc
sub
push
scas
je
jp
lods
or
or
dec
bound
xlat
outsb
xchg
inc
and
roll
sbb
cld
outsl
les
sbb
inc
adc
stos
shrl
aam
adc
test
inc
insl
in
addl
or
mov
jg
dec
mov
sbb
cmpsl
lcall
in
call
pop
test
fimull
jp
aam
cmp
cli
ret
pop
sbb
mov
add
in
xchg
push
lea
movsl
adc
loop
jl
cmp
inc
mov
std
test
push
mov
mov
jo
jl
sbbl
fnstcw
and
xchg
dec
push
mov
mov
mov
dec
iret
and
test
mov
dec
pop
sub
pop
pushf
outsb
movsl
or
fmulp
lea
sahf
movsb
sti
inc
mov
add
mov
mov
mov
dec
out
xchg
xchg
stos
sahf
xor
in
out
and
push
jge
mov
cwtl
ss
arpl
pop
movb
fsubp
adc
in
ret
push
int3
and
or
and
mov
cli
xchg
cmp
xchg
cltd
lahf
scas
imul
int3
loop
in
and
adc
sub
in
dec
mov
pusha
fsubrp
cld
pop
jb
clc
xor
dec
mov
insl
jp
cmp
fmull
inc
arpl
inc
sub
iret
cmp
mov
xchg
icebp
mov
loope
pop
mov
xchg
xchg
andl
idivb
cltd
mov
mov
or
jo
lcall
jge
mov
insl
mov
push
jne
loopne
aam
std
mov
dec
or
sub
int
inc
leave
xchg
out
loope
mov
data16
inc
aad
jp
imul
push
jge
stos
aaa
lret
push
add
es
pushf
out
std
out
and
dec
adc
pop
jno
adc
lret
push
gs
mov
xor
out
mov
xchg
aam
stos
fisttps
sbb
cs
out
jp
pop
mov
aas
out
mov
subb
ret
inc
inc
mov
mov
js
repnz
add
dec
fiaddl
jmp
loope
mov
popa
je
into
add
lret
mov
repz
jo
bound
inc
cwtl
ret
add
xor
les
mov
cmp
cmp
sbbb
mov
scas
adc
dec
hlt
idiv
mov
mov
xchg
scas
pop
cmpl
sub
call
out
aam
mov
dec
or
mov
cli
cld
mov
sub
inc
jle
dec
mov
jns
test
xchg
sti
fdivs
or
sbb
adc
call
and
dec
xchg
and
pop
hlt
push
nop
fstl
rorl
ss
or
ja
adc
or
insl
push
mov
adc
and
in
dec
inc
push
sub
popa
dec
dec
pop
lret
cmpsb
and
sbb
mov
test
fsubl
int
sbbb
xor
mov
sub
aas
pop
out
cmp
pushl
xor
out
data16
stc
ja
cli
pop
sbb
cmpsb
out
xor
icebp
pushf
mov
inc
aad
bound
add
dec
paddd
das
insb
xchg
mov
cltd
scas
cmp
jge
repnz
mov
cmp
lret
outsl
shlb
iret
pop
jg
adc
xchg
ljmp
lret
enter
push
push
mov
cmc
in
scas
cmp
push
mov
adcl
dec
or
das
add
jb
push
lea
fisubrs
xchg
xor
int
jns
fldcw
pop
popa
jno
emms
insb
mov
mov
sub
insb
sub
out
sub
sbb
int3
stos
movsl
mov
and
dec
sbbb
inc
mov
dec
int
leave
cwtl
cli
cltd
pop
xor
mov
std
leave
cltd
arpl
sbb
cld
fdiv
aam
mov
out
mov
xor
push
dec
push
mov
jno
sbb
push
insb
int3
adc
rcrb
sub
cmp
and
mov
pop
push
sti
and
sub
sbb
push
rorb
mov
jecxz
leave
cmp
and
mov
mov
jae
cltd
cwtl
cmpsb
lret
lret
icebp
dec
ret
pusha
in
pop
shr
jns
add
cmp
rcrb
idiv
inc
mov
mov
add
dec
jb
sub
scas
ret
and
jecxz
xor
stc
mov
arpl
cmp
pmuludq
lock
in
bound
shrl
iret
scas
lea
fsubrs
mov
push
outsb
sahf
adc
adc
sbb
test
hlt
pop
clc
cli
sbb
arpl
push
cld
scas
push
sbb
mov
mov
negb
xchg
mov
fxch
jo
rcll
mov
add
nop
and
mov
and
push
aas
pop
in
subl
jl
mov
repnz
pop
andb
mov
mov
fcmovne
adc
pop
push
mov
insb
xchg
enter
ret
push
loope
outsl
push
mov
jl
jl
pushf
les
ja
and
inc
xchg
sub
hlt
cmp
into
into
sbb
ja
scas
repnz
lahf
cmp
dec
or
pop
push
adc
push
dec
jno
repz
mov
movsl
sub
or
fwait
icebp
loop
jl
cmp
and
sbb
shr
lea
das
add
hlt
dec
test
or
pop
mov
into
or
pop
pop
push
push
sub
dec
lods
je
mov
gs
loopne
xor
sbb
in
jbe
add
mov
cmp
sub
cs
ja
cmpsl
mov
in
mov
pop
cmp
out
outsl
add
loopne
insl
and
cld
clc
add
ja
push
add
lret
and
aaa
add
mov
xorl
push
hlt
xchg
rolb
cwtl
divl
outsl
jns
jg
les
cwtl
test
aas
and
or
jg
lods
movsb
daa
sbbl
sahf
ret
pop
adc
outsb
mov
out
adc
add
jno
dec
loop
cmp
inc
mov
push
les
cmp
xchg
shrb
sub
dec
leave
mov
adc
dec
mov
xlat
add
cvtpi2ps
cmp
sahf
adc
ficoml
les
cld
dec
movsb
bound
rcpps
push
int3
pushf
xlat
cmp
mov
dec
jnp
idivl
cmp
dec
test
or
pcmpeqw
aaa
inc
ret
push
xor
mov
mov
fidivl
lock
sub
jle
mov
adc
cmp
pop
jno
cmc
inc
mov
inc
inc
pushf
imul
dec
and
mov
nop
ret
mov
popf
dec
xchg
out
out
lahf
add
jp
sub
mov
jge
cld
push
lock
sub
push
adc
sub
aas
mov
movsb
testl
push
or
je
inc
cmp
lods
mov
cld
lods
stc
cltd
cmpl
cltd
cmpsb
xor
jp
add
dec
daa
xchg
setns
aad
fisubrs
cmc
ljmp
add
inc
jecxz
adc
and
cmp
xchg
rorl
inc
in
push
lcall
call
out
pop
mov
xchg
int
data16
ds
adc
lods
inc
insb
js
sarl
imul
shlb
mov
stc
jmp
lods
mov
jle
sbb
loop
pop
ja
pop
cli
xchg
gs
jnp
hlt
test
mov
cmp
or
mov
ret
mov
lret
pop
ret
sbb
popf
ja
fildl
jo
and
push
inc
dec
inc
push
cli
add
or
xor
icebp
cwtl
mov
sub
jg
mov
mov
inc
das
out
jnp
dec
shll
fcomps
test
das
dec
jb
out
and
jne
or
fbld
jle
pop
lods
jg
or
fisubrl
aas
pop
rcrl
sarb
mov
mov
mov
mov
adc
push
xchg
sahf
das
xor
jl
push
inc
push
add
test
mov
dec
dec
adc
jp
inc
int
scas
loope
sbb
incl
ja
adc
daa
xchg
xor
xchg
xor
or
sahf
inc
into
ret
dec
movsl
jl
push
dec
xchg
cld
stos
mov
push
dec
mov
push
mov
mov
divl
test
shrl
movsb
jecxz
jo
nop
test
push
in
es
xchg
inc
and
push
es
inc
dec
dec
popf
imul
jmp
repnz
jp
loope
or
pop
jb
gs
cld
scas
mov
push
adc
push
nop
pop
jl
notb
leave
pop
and
movsb
scas
mov
or
popf
push
sbb
jo
cmp
mov
jb
test
mov
jge
or
int3
push
xor
js
mull
popa
stc
mov
into
repz
or
cld
push
pusha
add
inc
int3
or
dec
xchg
and
insb
and
sub
aad
mov
xchg
aaa
jnp
jmp
dec
out
pop
call
mov
mov
and
cmp
loop
das
sbb
xor
xchg
test
nop
jp
adc
sub
inc
mov
jmp
and
ss
pop
cmp
int3
fists
mov
adc
adc
mov
outsl
shrl
adc
arpl
imul
pop
xor
repnz
dec
and
mov
jge
cmp
in
mov
mov
jmp
loope
cmp
cmp
pushf
mov
dec
shll
mov
ret
or
jge,pt
inc
test
das
cwtl
lock
sub
sbb
cmp
push
repz
jb
sub
stos
or
jbe
jle
rorb
xchg
ret
adc
mov
mov
pop
popf
mov
jmp
fdivrl
dec
jnp
push
stos
push
mov
inc
mov
mov
aaa
xor
push
enter
aaa
mov
jae
xchg
pop
pop
inc
xchg
scas
fwait
push
xchg
sub
push
add
sbb
sbb
xor
or
and
icebp
push
cmpsl
or
mov
test
xor
test
popa
shlb
orb
jo
outsl
pop
mov
pop
enter
or
or
cmpsl
gs
test
imul
add
and
xor
cmp
push
mov
incl
adc
aas
fwait
cmp
call
cmp
jno
jmp
fidivrs
xchg
aas
jl
movsl
test
mov
rolb
aaa
jbe
mov
inc
xor
dec
ljmp
push
mov
inc
add
cmc
mov
pushf
xchg
loop
lcall
dec
cmc
xor
jae
xor
arpl
rcrl
jb
and
dec
jp
xchg
jo
inc
push
pop
enter
dec
push
sub
pop
or
jp
and
jb
in
cmp
lahf
rcrl
clc
and
jmp
push
sbb
jl
mov
jbe
xorb
mov
lahf
push
sti
and
inc
fstl
mov
loope
mov
aas
into
mov
stos
mov
dec
je
mov
leave
icebp
aad
mov
sub
je
shll
push
push
dec
or
jmp
mov
loop
imul
adc
add
leave
mov
pop
xchg
pusha
inc
fnstcw
cmp
test
jle
add
jg
stos
sub
or
mov
sbb
lock
or
mov
mov
imul
and
push
call
xchg
pop
gs
scas
pop
bound
or
fisttpll
or
pop
cmp
cmp
inc
scas
aas
call
cmp
mov
push
or
mov
arpl
pop
incl
outsb
mov
sbb
mov
pop
pushf
das
lret
jbe
in
lret
psubsw
mov
ret
int
in
adc
or
or
dec
movsl
call
mov
outsl
inc
loop
dec
mov
idivl
xchg
out
sub
jno
dec
xor
push
clc
mov
lea
gs
aaa
icebp
and
push
sbb
mov
cmpsb
popf
add
iret
and
jge
fstl
insl
addps
inc
mov
fwait
imul
sub
mov
sub
hlt
dec
in
nopl
jne
or
in
leave
cmp
add
push
je
fwait
pop
and
jns
dec
push
dec
or
loopne
jmp
adc
xor
jl
les
das
rol
xor
and
in
xchg
les
outsl
lret
subb
xadd
jl
or
jno
ss
jo
sub
out
lcall
fmull
movsb
popa
je
call
jb
fistl
sbb
test
add
addr16
cmp
aad
lea
push
cmpl
fucom
sahf
mov
daa
pop
jg
daa
push
lret
sub
add
lea
js
mov
pop
in
fs
add
sti
push
out
js
pop
sbb
inc
movsb
popa
data16
xor
pusha
push
sub
jbe
xchg
in
aas
or
push
ss
ds
jl
addr16
pop
sub
push
mov
sub
mov
lea
push
adc
push
pop
insl
push
xchg
inc
mov
cmp
adc
adc
lret
mov
push
ret
mov
xchg
adcb
mov
push
and
and
dec
fisubl
mov
pop
jne
repnz
mov
inc
fdivr
fimull
xchg
push
or
mov
in
mov
stc
pop
test
pop
and
and
addb
cs
dec
ret
inc
stos
in
js
fnstenv
xchg
mov
or
sbb
pop
and
cltd
ljmp
push
std
add
dec
dec
pop
js
or
test
dec
cmp
lahf
movsl
mov
je
mov
pop
cmpsl
loop
adc
push
leave
cs
out
iret
lcall
sahf
sbbb
jmp
aam
mov
mov
jle
cmpsb
rorb
mov
cmp
mov
pop
shl
push
mov
cmpsb
mov
jl
cmp
into
stos
jae
sbb
enter
pop
jle
add
lods
push
sbb
gs
je
add
xchg
cmp
or
push
jg
adc
xchg
mov
popa
dec
mov
push
mov
sarb
mov
stc
subb
icebp
and
fsubrl
dec
sbb
lea
mov
fstpt
dec
inc
andb
cwtl
xor
push
xchg
and
add
xchg
data16
bswap
mov
dec
mull
imul
xor
mov
inc
dec
std
push
int3
push
movsl
mov
adc
push
scas
into
jg
ja
int3
jge
inc
mov
fiaddl
movsl
xor
dec
iret
and
stc
shll
mov
jl
mov
scas
sbbb
lea
push
pop
call
mov
xlat
mov
out
ds
test
mov
je
jnp
aas
or
fdivrs
shrb
add
jl
mov
sbb
mov
fsubrl
aaa
clc
mov
test
jecxz
inc
xchg
xchg
lods
data16
repnz
out
dec
push
stos
sub
stc
test
jae
imul
jmp
push
test
testb
mov
add
or
and
fdiv
fidivs
dec
fisttps
lock
out
add
cli
mov
inc
rolb
sbb
lret
lahf
in
inc
insb
jne
mov
enter
pop
cwtl
jmp
movsb
xchg
xchg
add
push
push
es
adc
fisubs
lods
out
cld
hlt
and
mov
push
inc
push
sub
cwtl
cmp
mov
xchg
sar
popa
xchg
fs
adc
mov
mov
ljmp
gs
adc
xchg
gs
or
out
sub
sbb
fiaddl
mov
mov
mov
jb
mov
fstpl
pusha
sahf
cwtl
xchg
cltd
mov
fnstcw
aas
inc
jo
push
in
inc
es
aam
aaa
lahf
out
fisubrs
cmp
cmpsb
popa
or
fcmovu
sbb
sbb
stc
and
mov
insl
mov
xor
inc
jae
sub
push
fcmovnu
pushf
stc
es
insl
dec
xchg
jge
pop
js
push
xchg
aas
les
jle
mov
ljmp
push
cmpsb
or
sbb
mov
push
insb
pop
data16
push
mov
out
loopne
and
mov
sbb
pusha
fistl
out
mov
and
or
repz
dec
mov
mov
add
mov
fsubrs
cmpsb
test
jge,pn
loopne
sbb
jp
pop
nop
sbb
les
shlb
sbbb
test
mov
loope
sbb
cmpsb
dec
cltd
cli
gs
cmc
add
xchg
push
jp
shrb
mov
hlt
adc
cmp
cmp
gs
leave
jge
and
in
js
outsl
jns
stos
sbb
pop
push
dec
jns
scas
in
call
lds
jbe
jae
dec
xchg
stos
sar
mov
adc
popa
enter
stos
hlt
jl
jns
dec
cmp
pop
push
aaa
push
mov
dec
test
outsb
mov
xor
cmp
jmp
cltd
sbb
sahf
mov
addr16
movsl
les
jmp
ljmp
out
jge
sbb
fidivrl
pusha
xchg
or
and
lret
mov
mov
pop
adc
iret
and
push
ficompl
xchg
leave
jne
je
push
mov
lods
div
outsl
repz
pushf
mov
jo
imul
cmp
iret
and
push
or
xchg
push
xchg
pop
je
int
mov
scas
aam
in
cs
mov
mov
sbb
setae
mov
pop
mov
repnz
dec
push
outsl
jno
push
mov
xchg
in
in
addr16
enter
xchg
jecxz
sub
jbe
ljmp
stc
loopne
mov
pop
dec
adc
out
outsb
mov
data16
into
testl
push
lcall
mov
fisubrl
dec
lods
cmp
or
rcl
pop
cmp
mov
loop
mov
push
mov
and
pop
jle
and
inc
mov
rorl
or
pop
repz
out
push
cmp
xchg
outsl
je
push
nop
aaa
dec
enter
pop
pop
push
mov
xchg
enter
jae
rorl
push
cmp
je
stc
mov
sbb
cmp
jge
mov
cwtl
les
outsb
and
mov
mov
add
hlt
es
iret
dec
loope
lods
mov
xchg
inc
pop
dec
dec
sbb
jb
arpl
and
pusha
sbb
cltd
xchg
dec
xchg
add
cli
faddp
xchg
mov
or
push
jne
insb
push
xchg
std
dec
fidivrs
fadds
out
loopne
mov
xchg
add
push
sub
outsl
lods
mov
add
jns
ret
mov
fldt
cmp
test
mov
bswap
daa
pop
cmp
sub
inc
sub
sbb
negl
das
int
push
lea
and
pop
outsb
pushf
add
dec
enter
fcoms
popf
mov
mov
mov
lds
cmc
out
mull
add
hlt
pop
push
jo
xchg
add
std
xchg
mov
push
fisubs
mov
fwait
stos
and
mov
aaa
push
ds
sbb
sahf
pushf
cmp
push
dec
xchg
fmulp
lcall
fwait
in
sbb
mov
cmp
mov
loop
mov
pop
ret
and
lock
xor
ds
outsb
sbb
sbb
mov
dec
push
push
test
cmpsl
jecxz
stc
sub
arpl
adc
stc
inc
fwait
push
sub
add
or
jnp
repz
sbb
ret
je
cmovl
mov
cmp
repnz
test
mov
or
lea
and
negl
sub
loopne
es
rorl
imul
dec
popl
addr16
and
lret
push
jle
push
jb
xchg
push
pop
imul
push
lcall
pop
jmp
iret
inc
jp
adc
movsb
inc
and
jae
cmp
jle
add
test
inc
scas
or
xor
push
or
jge
bound
pop
pusha
loop
inc
dec
mov
push
push
hlt
cmpsl
pushf
adc
popf
pop
das
sbb
xor
test
popf
adc
mov
mov
aas
and
rcll
inc
jle
sub
dec
js
and
test
test
mov
dec
or
in
int
outsl
lret
lock
lahf
add
insl
push
jne
mov
xor
jl
mov
mov
cli
cltd
cmp
je
push
add
mov
dec
mov
xor
testl
insb
icebp
or
pop
xchg
mov
jmp
test
testb
mov
dec
test
jae
cmp
mov
pop
inc
out
std
push
mov
stos
adc
ljmp
cltd
subb
rol
stos
loope
popf
mov
test
fadd
cmpsb
pusha
aas
cli
push
mov
scas
xor
aad
cmpsl
xchg
test
sbb
jae
and
iret
mov
xchg
int3
pop
flds
sbb
jmp
outsb
mov
les
sbb
dec
jecxz
xchg
and
aam
stos
insl
cmp
stc
push
stc
jae
sub
pop
lcall
xchg
jbe
pop
popf
es
jbe
sub
sub
sub
dec
mov
lcall
daa
int3
inc
inc
mov
adcl
push
cmp
adcl
adc
mov
xchg
test
cltd
div
shl
sub
cmc
sbb
sbb
pop
sub
mov
jne
and
rorl
mov
clc
mov
xchg
repnz
scas
cmp
xor
mov
push
adc
and
inc
enter
neg
iret
fsubl
mov
sub
mov
les
jecxz
dec
jns
mov
leave
dec
das
mov
lret
daa
push
jle
cmp
mov
out
pushf
psubb
xchg
mov
pop
push
in
xor
cmpsb
adc
inc
leave
rcrl
imul
xchg
imul
mov
repnz
cmp
mov
cli
cmpsl
pop
rcll
out
fwait
jge
xor
jle
push
ret
ljmp
popf
fcoms
sub
mov
jge
cs
loop
lret
xor
addr16
lds
imul
xchg
in
stos
mov
sbb
dec
incb
icebp
frstor
xor
stos
jae
inc
or
clc
in
push
shr
mov
test
dec
mov
add
mov
enter
ds
ficomps
pop
pop
sahf
and
shrb
inc
pop
mov
push
js
jne
in
iret
add
pop
in
jp
mov
adc
rcrb
stos
in
sbb
lret
das
mov
aas
clc
imull
cmp
mov
xchg
push
sub
cltd
in
cltd
outsb
jbe
and
xor
jmp
xor
cmp
push
loope
lret
sbb
mov
sbb
movsb
mov
insb
fcoms
inc
fisubrs
push
mov
push
jne
mov
loop
shll
or
jg
inc
lock
lea
pop
inc
cmp
adc
imul
fcomi
push
scas
mov
cld
es
sbb
sub
xchg
jo
outsl
movsl
popa
enter
mov
inc
or
rorl
out
out
aaa
xor
out
mov
and
mov
adc
cltd
pop
xor
incb
or
pop
mov
adc
fildll
mov
repnz
push
sti
outsb
into
and
or
push
lds
cmpsb
pop
mov
mov
shrl
push
jno
jp
sbb
pop
xchg
pop
and
shrb
push
inc
xchg
and
cmpsb
fmuls
out
shl
mov
pop
jg
xchg
mov
mov
lock
arpl
in
jno
inc
jp
dec
lret
rclb
mov
test
cmp
imull
or
mov
rorl
xchg
sbbl
dec
inc
push
cmpsl
les
nop
xor
mov
jp
iret
orl
ret
dec
loopne
jbe
ja
and
mov
xchg
pop
mov
in
arpl
sbb
add
lret
cli
test
xor
cltd
push
shll
jne
push
adc
mov
or
sbb
jb
mov
inc
orl
out
mov
sub
inc
add
pusha
outsl
push
out
pop
cmp
aad
push
jne
mov
inc
push
mov
and
in
mov
xchg
fstps
lea
sbb
pop
test
cld
add
out
mov
fstps
sub
int3
cmp
hlt
or
adc
jg
into
iret
ficompl
filds
inc
clc
push
stos
ljmp
and
icebp
fidivrs
cmp
dec
add
std
hlt
imul
pop
mov
dec
push
icebp
bound
sub
add
dec
mov
repnz
popa
lret
jnp
xor
xlat
inc
sti
jae
sub
or
mov
popa
mov
jmp
sub
fcomps
mov
sbb
into
scas
cli
xchg
ret
inc
je
inc
add
hlt
int3
sahf
xor
loope
jbe
das
enter
inc
decb
and
xor
push
pop
dec
jg
push
mov
add
int3
sbb
ja
bound
push
or
shl
testl
in
shl
cmc
ds
fistps
mov
lret
add
dec
jae
out
rclb
and
cmp
and
bound
sub
fidivl
out
push
jg
cmp
int
incl
in
repz
fwait
test
add
lds
mov
jp
push
test
popf
js
cmp
dec
orb
cmp
add
dec
xor
lcall
testl
push
dec
jg
or
int3
xchg
or
add
inc
pop
fisubrl
jecxz
xchg
int3
ret
scas
jp
shlb
lea
stc
fstpl
mov
rorb
cmp
inc
jb
stos
sbb
outsb
jl
xor
and
iret
mov
adc
ja
mov
sarb
jb
fcomps
adc
js
into
pushf
scas
add
xchg
jns
push
mov
popa
int3
cmp
cmp
out
mov
hlt
aam
cs
or
pop
outsl
mov
xchg
mov
xchg
les
or
xlat
push
lods
ret
dec
outsb
aaa
mov
dec
cmp
or
in
data16
popa
cmp
imul
sbb
sbbl
shrl
dec
rcll
lods
repz
push
jl
mov
sbb
testb
xor
jmp
fnsave
pop
loop
in
pusha
mov
add
or
in
loope
bound
jno
dec
sub
or
cmp
cmp
rorl
mov
rcl
mov
fidivrs
cwtl
test
jb
mov
inc
mov
loopne
and
jle
sbb
int
lock
loop
xor
jl
and
std
loope
xchg
sbb
sub
pusha
push
repnz
cli
add
movsb
rcr
mov
mov
cld
inc
mov
push
inc
mov
xchg
sti
sbb
add
cli
aad
jecxz
mull
repz
xor
push
pop
inc
mov
xor
daa
mov
mov
add
sub
scas
and
dec
jne
test
ja
jp
lcall
int3
sbb
jl
cmpsl
cld
loope
adc
movsb
dec
std
mov
inc
push
xor
int3
dec
and
jbe
xchg
pop
or
mov
xlat
test
shll
lods
mov
imul
mov
lcall
mov
adc
push
shl
loop
ds
xchg
sub
rcl
ret
idivb
fidivl
dec
test
insl
lahf
mov
adcb
inc
cmpsb
or
push
pop
scas
dec
inc
push
fwait
xchg
xor
sub
hlt
push
insb
adc
ret
push
fbstp
lods
out
data16
test
bsf
icebp
and
insb
push
shll
jmp
lret
lea
in
push
test
dec
add
add
inc
lods
push
xchg
test
sarl
mov
jo
testl
adcb
xchg
add
sbb
push
mov
push
inc
mov
jnp
iret
mov
aam
pushf
inc
mov
pop
inc
jbe
fbld
cmp
lahf
inc
push
push
lock
pop
shrb
pusha
inc
cmc
gs
fidivs
lods
test
daa
push
push
jno
mov
into
cmpsb
mov
movl
ret
mov
mov
pushf
jnp
jno
and
inc
jg
test
mov
adc
fstpt
cli
sbb
mov
push
mov
jle
fwait
insl
xchg
out
insl
sub
mov
icebp
shlb
out
std
aas
fbld
sub
or
sbb
sti
jp
mov
iret
xchg
imul
in
nop
mulb
jmp
outsb
sub
data16
push
dec
mov
movsl
dec
add
push
adc
leave
inc
pop
lods
mov
loope
fsub
in
mov
cmc
inc
sub
jb
popf
into
fistps
jp
leave
outsb
jns
or
scas
call
mov
fcoms
aam
sarl
mov
or
add
push
push
stos
scas
push
cs
cmp
imul
mov
push
rclb
sub
call
inc
adcb
out
dec
movsb
cmp
inc
ret
jae
pop
sub
std
scas
mov
ficoms
mov
or
add
test
dec
nop
insb
sub
jae
sbb
and
loope
sub
ficoms
add
aad
test
sbb
push
push
inc
scas
int3
jecxz
and
mov
or
mov
ret
call
in
arpl
addr16
add
push
je
xchg
dec
lds
sub
mov
mov
fstps
lahf
stc
mov
in
add
add
add
out
jo
or
adc
loop
movsl
sbb
push
push
cmc
stos
imul
mov
mov
add
mov
ss
fmull
leave
mov
cltd
cmpb
lcall
xchg
xchg
sbb
popa
push
stos
add
mov
push
movsl
push
fidivrl
test
imul
dec
mov
xchg
mov
test
or
adc
pop
mov
push
mov
fisubrl
cmpsl
mov
imul
jmp
add
fisubs
ss
out
sbb
aas
pop
insl
sub
test
xchg
sub
mov
enter
jno
adc
mov
jne
push
icebp
stc
stos
pushf
mov
mov
pop
jo
jl
jno
je
sbb
mov
pop
add
stc
pop
inc
cmp
ficoms
pop
xor
aaa
inc
lods
mov
pusha
mov
or
mov
cmp
jbe
insl
lahf
xchg
out
dec
jmp
pushf
les
push
fwait
in
out
mov
aaa
pop
cmpsb
int3
xchg
into
sub
push
pushf
shlb
ja
xchg
fcompl
xchg
push
cmp
dec
sbb
mov
xchg
xor
jnp
and
mov
es
mov
test
pop
pop
fidivrs
cmc
test
popf
repz
outsl
aas
add
lea
cmc
mov
gs
mov
and
adc
fldcw
fwait
and
sahf
pushf
outsb
andb
mov
xchg
loop
push
push
sbb
or
dec
sub
sub
cmp
sbb
clc
repz
cmp
mov
hlt
mov
cmp
jl
inc
pcmpgtd
mov
push
xchg
and
jge
sub
sub
and
fmulp
adc
push
mov
enter
movsb
ljmp
mov
movsb
mov
xchg
mov
fidivl
es
rcl
gs
adc
mov
or
pop
inc
nop
scas
pop
cmp
out
xchg
lock
icebp
loop
push
and
loop
cmc
inc
rclb
adc
push
adcb
push
add
inc
mov
jo
ret
lret
rcrl
data16
loop
cvtdq2ps
in
aam
data16
loop
pusha
mov
leave
adc
inc
adc
mov
jmp
popl
sahf
add
orl
xchg
ss
dec
mov
fldenv
je
mov
into
lea
add
cltd
xor
add
adc
xchg
adc
and
xchg
mov
mov
mov
int
andl
fmuls
mov
xchg
popa
std
mov
ja
and
pusha
push
dec
and
and
add
mov
dec
fwait
mov
cmc
dec
hlt
daa
jno
mov
mov
inc
and
das
mov
inc
mov
jns
inc
pop
add
mov
icebp
mov
or
pop
call
insl
inc
lock
rorb
testl
push
punpckhdq
es
push
mov
pop
int
repz
ret
xor
outsb
sahf
push
mov
jl
xor
ret
lock
lcall
inc
or
jmp
fcmovne
pusha
inc
bound
push
sub
sbb
daa
dec
lcall
inc
jo
push
pop
lahf
dec
cmp
mov
add
push
je
sub
mov
lods
jp
test
in
ss
mov
loopne
adc
out
jne
pushl
push
ljmp
or
mov
lret
or
sbb
adc
ret
jne
lods
cli
inc
aas
mov
inc
cmp
jae
enter
daa
fwait
movups
cmpsb
jae
sbb
out
mov
call
pop
cli
mov
or
pop
pop
sbb
jmp
adc
mov
push
sbb
push
sti
fsubrl
jne
sub
int
cmpsb
dec
stos
aam
insb
f2xm1
loop
sti
scas
or
scas
xchg
push
jno
push
or
pushl
ja
ljmp
test
mov
mov
push
mov
in
xor
lahf
out
test
inc
sub
mov
sub
xor
mov
test
out
cmpsb
jns
fistpll
insl
cld
and
mov
cwtl
das
hlt
in
fcmovnb
xor
pop
leave
ret
sbb
pop
lret
js
push
push
jl
addr16
and
inc
mov
imul
leave
and
int3
sub
fucomp
iret
call
xchg
sbb
je
xchg
mov
aam
jmp
in
xor
cltd
ret
cwtl
xchg
push
nop
jb
jne
iret
push
rcl
and
ljmp
dec
aam
sub
mov
test
mov
dec
lret
insb
bound
cmpsl
jmp
or
sub
pop
mov
cmp
mov
add
out
insb
outsb
in
iret
sbb
ret
and
call
fwait
mov
jle
fwait
push
mov
mov
inc
ret
pop
dec
xor
movsb
cli
pop
cmpsb
xchg
xor
or
cmc
stos
cmpl
lea
mov
mov
push
mov
ja
push
scas
iret
xchg
les
sahf
daa
aad
mov
mov
out
mov
sbb
jns
jg
sub
mov
cmpsb
stc
stos
push
mov
and
addr16
into
adc
fsub
push
and
add
adc
fs
jmp
imul
sbb
mov
push
stos
pop
cmp
imul
cli
fsub
lock
scas
sysexit
push
push
out
nop
fnstsw
sti
and
inc
push
sbb
pop
mov
push
cmpsl
ret
and
xchg
jp
push
pop
mov
sbb
cmc
ja
cmp
jmp
jle
and
enter
mov
popa
sub
lcall
xchg
cmp
jno
int3
mov
rolb
popf
dec
cld
sub
aam
out
ss
mov
xor
mov
dec
jns
lds
jbe
outsb
push
or
addr16
icebp
out
push
sbbl
fcmovu
loop
lds
hlt
push
cmpl
and
rclb
cmpsl
adc
je
mov
int
aas
loop
add
or
mov
mov
int3
sahf
clc
loopne
in
jb
icebp
hlt
dec
xchg
jbe
repz
xchg
xor
push
cs
pop
sub
sub
xor
xor
sbb
es
in
mov
dec
cmp
push
sbbl
test
loope
popf
cmpsl
divb
pop
mov
push
outsl
jg
push
fstps
notb
rcrl
xorb
in
cwtl
inc
and
lods
rclb
nop
push
mov
jns
xor
inc
jge
cmp
shr
in
xor
outsl
arpl
test
sub
add
outsb
adc
lock
scas
popf
cmp
xor
xchg
daa
leave
jo
lods
mulb
sti
notb
mov
mov
push
orb
das
enter
sti
fstpt
push
sbb
aad
or
or
adc
das
out
or
fs
test
inc
movsl
int3
leave
mov
xor
out
cmp
sub
sub
imul
inc
lods
add
mov
pop
js
test
pop
xchg
sub
jb
mov
adc
mov
push
call
jmp
js
mov
ja
pop
scas
adc
es
cmp
bound
or
adc
mov
incl
xor
lods
aas
dec
push
into
xor
jmp
rclb
sub
cmp
sub
and
cmp
lahf
dec
lahf
mov
clc
aas
pop
and
pop
xor
push
xchg
or
aaa
lods
sub
sbb
xchg
sub
andl
aam
lret
push
dec
pop
aaa
cs
fs
or
pop
cmp
pop
arpl
sbb
xchg
push
filds
sub
sub
dec
mov
popa
sbb
pop
scas
daa
xor
hlt
cmp
jnp
sarl
xor
repnz
xchg
pop
or
ja
jnp
xchg
loop
out
fcmovnbe
jbe
jnp
data16
ret
cs
mull
inc
outsl
icebp
push
mov
xlat
out
and
enter
or
mov
subb
aaa
ds
mov
push
xchg
add
fcmovnu
push
jne,pn
push
sub
or
sbb
pop
jle
rdpmc
je
int
fs
cmp
int
pop
clc
sub
mov
xlat
xchg
push
cltd
cmp
add
xchg
in
ljmp
das
xchg
sbb
and
xchg
pushf
sub
push
sbb
fildl
mov
push
imul
repz
mov
insb
add
sahf
getsec
push
xchg
icebp
jno
dec
mov
pop
pop
lcall
push
or
xchg
xor
cmc
fdivr
movsb
add
hlt
jo
in
sub
cltd
dec
cmpsl
mov
inc
imul
pop
fprem
xor
das
add
movsb
mov
dec
or
lret
inc
push
stc
mov
jbe
cmpsl
mov
jbe
daa
repnz
iret
scas
xor
lahf
mov
or
mov
push
ret
cltd
ljmp
lahf
or
stc
sub
sbb
test
aas
adc
cwtl
inc
inc
sti
pop
stc
or
adc
and
mov
movsl
xchg
xchg
adc
out
mov
mov
push
sub
ficoml
push
out
out
push
mov
in
xchg
pop
lret
ficoml
mov
scas
cmp
inc
test
jb
inc
xor
push
rcll
cli
ljmp
push
bound
call
in
or
jbe
and
test
clc
dec
jle
xor
aam
xor
lret
push
mov
xchg
hlt
or
clc
call
movsb
or
out
daa
pop
jg
xchg
mov
mov
sub
cmp
jns
jmp
fldl
xor
mov
sub
ret
jecxz
mov
dec
adc
inc
stc
inc
dec
imul
lret
pop
pusha
pop
fndisi(8087
movsl
or
dec
shll
or
stc
mov
aaa
int
mov
push
fldcw
jnp
adc
jnp
in
stos
sub
loopne
popf
mov
cmp
mov
mov
pop
dec
hlt
dec
mov
push
loopne
outsl
xchg
mov
or
fs
mov
divb
inc
je
jne
cmpsl
add
sbb
stc
sub
xchg
and
fnstcw
inc
sub
mov
adc
jno
and
mov
into
xor
xchg
in
movsb
ffree
stos
jne
outsl
stos
lret
xor
xor
arpl
test
inc
lea
pop
push
xor
pusha
mov
es
scas
mov
add
and
push
pop
mov
mov
je
aaa
adc
notl
ja
outsb
add
lods
into
in
cmpl
xlat
sahf
push
leave
pop
ficoml
inc
cmp
dec
jns
das
pop
insl
stc
xchg
sbb
in
inc
mov
loopne
xchg
pop
xchg
negl
push
sbb
jmp
mov
icebp
fadds
sbb
push
mov
mov
add
stc
out
mov
dec
jae
loopne
push
xor
int3
cmp
mov
fwait
hlt
cmp
mov
fs
mov
in
inc
mov
sub
push
loopne
or
into
sbb
push
fcomps
adc
pop
rolb
push
fcom
test
or
xchg
and
popf
xor
xchg
lret
or
mov
pop
in
cmp
pop
pop
ret
push
or
icebp
xor
mov
stc
adc
cmp
dec
adcl
jbe
test
stos
pop
out
jle
push
mov
dec
mov
ds
int
ja
lret
dec
lods
popf
add
push
jbe
out
mov
ds
aad
push
xchg
mov
int3
xlat
je
dec
test
and
inc
mov
push
lretw
pop
ret
cmp
push
dec
stc
jmp
inc
insb
and
push
popf
mov
xchg
and
hlt
dec
lret
xchg
xchg
cwtl
fimull
popf
icebp
adc
mov
test
jge
xor
push
ret
rcll
ja
sbb
fstl
insl
pop
rorb
xchg
dec
movsl
add
sarl
pop
sbb
repnz
add
ljmp
test
popf
aam
adc
xlat
and
cs
outsb
popf
lcall
push
addr16
xlat
mov
mov
fsubl
fimull
push
mov
les
rorb
xchg
mov
inc
mov
jne
arpl
sbb
lret
sub
setae
push
in
cwtl
in
enter
fidivrs
mov
push
fldt
cli
mov
sub
repnz
stc
in
sub
lods
sbb
push
iret
mov
jne
add
and
jge
mov
aad
add
and
addb
jl
push
add
adc
and
mov
shll
pop
into
mov
loop
jle
out
inc
push
pop
xchg
pop
dec
cli
dec
dec
mov
insb
cmp
push
and
shrb
sbb
push
test
mov
incl
pop
sbb
mov
jae
push
aam
pop
sbb
push
test
mov
jne
pushf
sub
push
popa
sub
sub
jno
mov
and
and
jns
add
or
test
adc
lods
repnz
or
int
mov
les
dec
jns
hlt
mov
rcll
xchg
es
sar
mov
outsb
mulb
in
mov
stos
cmpsb
push
pop
pop
mov
sbb
das
pushf
daa
cmpsb
mov
pop
inc
push
mov
pop
cmp
sub
sbb
xchg
int3
imul
and
das
inc
mov
leave
das
mov
and
mov
mov
mov
mov
jo
jb
inc
out
ja
jmp
xor
or
fwait
dec
pusha
mov
imul
cmp
aas
pop
stc
mov
aaa
lds
dec
xor
xor
mov
fadd
dec
shlb
lret
ja
xchg
fimull
xor
mov
cmp
jg
ficoms
in
jno
cltd
dec
sbb
jecxz
lret
shr
sub
sbb
insb
lahf
out
in
push
cmp
aaa
loopne
dec
xchg
lcall
icebp
pop
dec
jns
rclb
inc
negl
and
aas
inc
lock
mov
pop
aaa
mov
cld
clc
sbb
stos
fcoml
xchg
outsb
test
add
mov
sub
or
adc
cmp
clc
adc
jns
ljmp
nop
and
lock
fmuls
push
jge
js
loop
sbb
inc
imul
sbb
xlat
adc
add
fadds
std
xchg
test
mov
inc
push
mov
dec
pop
and
leave
int3
push
xorl
pop
adc
bound
dec
fcoms
lret
fsubl
xchg
ret
adc
add
sub
xchg
or
adc
bound
faddp
in
sbb
pop
mov
pop
out
jb
sbb
sbb
sub
or
iret
lea
pop
sbb
adc
les
mov
push
outsl
mov
xchg
gs
cwtl
or
mov
xchg
inc
imul
outsl
mov
jo
je
xor
mov
js
xchg
mov
repnz
xchg
addr16
lods
movsb
mov
js
add
movsb
inc
mov
bound
lahf
pop
outsl
ja
sarl
pop
jl
out
mov
pop
inc
in
dec
icebp
shll
sbb
jp
pop
inc
cmp
mov
mov
popf
in
loope
popf
fcmovb
insb
mul
jne
lret
sbb
and
xchg
inc
push
arpl
or
inc
shrb
mov
push
leave
cmp
pop
dec
nop
sub
add
movsl
cmp
pushf
adcb
xchg
div
xchg
out
sbb
push
mov
mov
lods
loope
dec
add
lods
lods
cmc
push
mov
ret
gs
aas
xor
das
push
js
jbe
pop
push
cs
push
lods
fisubrs
jo
rcrl
inc
add
xchg
aad
adc
mov
jmp
stos
ds
inc
test
push
filds
xchg
mov
fisttpll
mov
leave
jge
in
fisttpl
js
and
iret
popf
jnp
fwait
aam
pop
popa
or
fwait
mov
mov
sub
rclb
xlat
cltd
cmc
insb
aad
popf
mov
sbb
pop
cld
fistpl
sub
cwtl
ds
sbb
ret
fsubrs
add
jbe
lret
dec
push
ss
push
arpl
insl
pmulhuw
lods
dec
loop
bound
mov
inc
nop
enter
call
insb
push
xchg
inc
loop
mov
mov
xor
sar
mov
mov
stos
das
add
dec
jo
pushf
adc
mov
fwait
call
xor
out
aam
jp
mov
sub
fldt
push
sbb
adc
cmp
fidivrl
cmp
cmp
mov
mov
add
xchg
in
movsb
dec
repz
jmp
gs
cmp
push
andb
aaa
sbb
aad
rol
data16
or
pushl
outsb
jnp
adc
sub
mov
test
dec
pop
scas
sbb
and
add
jmp
push
mov
int
call
loop
xchg
gs
sub
out
jnp
imul
stos
xor
mov
ret
inc
in
int
outsl
sub
mov
fsubrs
adc
xor
jmp
mov
fldt
jp
aas
add
xor
jmp
push
test
je
pop
call
mov
mov
add
cmp
pop
pusha
lcall
das
sub
cmpsb
jbe
fsubs
cmp
daa
mov
iret
or
sub
testb
jl
js
mov
mov
jnp
sub
jle
mov
rorl
lret
mov
jae
adc
jb
stc
push
std
and
xor
and
call
fisttps
mov
fldenv
xor
mov
jle
cltd
test
sub
sub
push
addr16
popa
or
sub
jnp
arpl
mov
xchg
mov
xchg
push
fsubrl
mov
mov
sarb
je
xchg
fmul
jp
adc
mov
sahf
cmp
aas
pop
cld
add
fwait
and
fptan
jno
add
sub
push
sub
add
mov
cmc
ja
adc
push
push
xchg
rolb
xchg
lods
lods
push
pop
out
hlt
repnz
and
mov
xchg
int
shll
adc
jns
jb
fwait
aas
push
les
in
cmp
sahf
rcll
adc
adc
mov
loope
lret
sbb
xor
es
xchg
sbb
test
adc
lods
out
push
test
gs
push
mov
icebp
push
lret
push
mov
mov
shlb
in
and
insb
and
jne
shll
cmc
or
aam
xchg
push
lret
lock
jne
adc
inc
fsubrl
lret
mull
xchg
mov
inc
dec
dec
add
adc
in
aas
ljmp
cmp
icebp
dec
xchg
mov
mov
js
out
jecxz
sbb
cld
lret
stc
cwtl
mov
out
sbb
fwait
testb
std
icebp
sbb
aam
push
adc
scas
mov
out
inc
cmpsb
xor
xor
pop
cwtl
adc
into
sbb
test
call
mov
mov
jge
decb
push
fstpt
or
hlt
and
popf
pop
pop
outsb
mov
lahf
pop
fdivs
jne
jmp
sub
pushf
xchg
andb
xor
jne
arpl
or
sti
cli
pop
sbb
mov
call
cmpsb
fcoml
pop
rclb
fcoml
inc
out
add
add
xchg
js
push
push
push
out
daa
int3
clc
jb
aam
fwait
sbb
into
call
pop
sbbb
push
insb
iret
sub
adc
or
mov
fisubl
or
mov
cmp
pusha
cmpw
jo
cmpl
and
dec
bnd
mov
jne
testl
jo
fsubrl
sub
xor
adc
and
push
test
gs
pop
or
cli
cmpsl
fdivrs
negl
adc
and
rclb
pop
cmp
pop
mov
fstp
lock
or
clc
or
add
inc
push
sbb
or
loope
ss
cltd
add
dec
push
hlt
js
daa
pop
fwait
sbb
cmp
je
pop
scas
stc
and
jbe
sbb
mov
call
repz
fmulp
cld
cmp
rcr
inc
sub
bound
push
push
test
scas
inc
mov
cmp
adc
call
sarl
das
jb
cmp
leave
js
and
xorl
mov
jmp
sbb
mov
data16
pop
daa
xor
cmp
mov
imul
insl
jno
hlt
lret
xchg
aam
inc
jmp
je
sahf
sub
mov
xor
or
sbb
cltd
or
mov
or
mov
stos
xor
into
decl
fsubrl
ja
cmp
and
xchg
loopne
cmp
movsb
icebp
xor
push
outsl
test
outsl
jnp
xor
stos
les
jge
cs
xlat
mov
stos
dec
ja
arpl
lods
movsb
rcrb
test
fistl
push
pusha
daa
lret
mov
insb
xchg
inc
dec
sub
movsb
pop
aad
adc
jecxz
es
xchg
cmp
out
adc
daa
shll
xor
pop
inc
je
outsb
jg
rcrb
cmp
pop
loop
cmp
jbe
dec
add
lret
dec
or
push
xor
xchg
mov
push
jbe
out
and
jp
je
jcxz
cmc
mov
inc
enter
out
jl
push
jo
outsl
sub
ss
xor
add
in
out
js
popf
add
xor
and
sar
lcall
mov
jae
loope
imul
adc
fs
mov
mov
and
fwait
push
jbe
add
inc
xchg
push
fidivl
jno
pusha
fstps
enter
cmp
in
jno
stos
lcall
int
sahf
or
shl
leave
jecxz
imul
fiaddl
addr16
and
jge
mov
mov
scas
rcrb
xlat
mov
inc
fdivl
pop
and
mov
mov
mov
das
pop
out
inc
xor
push
test
cwtl
cmp
data16
cltd
push
jmp
shrb
and
cmpsb
adc
push
or
test
jp
pushf
rolb
sbb
sarb
fidivs
inc
lds
shlb
icebp
ret
sub
mov
ret
adc
and
mov
mov
jle
jo
fisttps
jecxz
loopne
les
les
popf
sti
cmpsb
xor
enter
and
lock
ret
push
cli
stos
jle
pop
jno
push
paddw
mov
sti
xchg
sbb
or
icebp
in
cmpsl
dec
adc
roll
fnsave
xchg
and
cmpb
mov
push
xchg
push
outsb
mov
jmp
xchg
inc
and
roll
jle
call
cld
outsb
adc
pop
repz
xchg
and
mov
out
and
in
insb
insb
jle
push
sub
adc
lods
sbbl
sbb
cwtl
test
aam
adc
xchg
cmp
fs
jnp
pusha
div
pop
es
lahf
sub
fucom
fisttps
stos
test
mov
dec
ret
or
pushf
push
pop
or
das
stc
xor
addr16
movsb
mov
adc
add
cs
sbb
or
dec
insl
inc
sahf
inc
inc
add
jno
xchg
sti
sbb
mov
pushf
mov
js
mov
pop
loopne
or
fcomi
sub
mov
xor
call
add
cvtpi2ps
xor
es
dec
inc
negb
repz
sbb
test
aas
rcll
mov
movsl
mov
stos
iret
filds
push
or
pop
das
sbb
popa
loope
sbb
pop
push
add
daa
out
std
cmp
hlt
lret
mov
xor
xchg
mov
mov
mov
addb
xchg
out
sub
cmp
cmp
jb
shrb
ret
pop
in
xor
xchg
scas
loopne
jl
in
loope
adc
sub
adc
bnd
out
in
sub
int
xor
iret
inc
inc
out
xor
and
fisubrl
lcall
sbb
cli
add
mov
sub
xchg
xlat
ds
push
test
mov
pop
push
ds
cmp
pop
fwait
mov
lods
push
mov
or
and
popa
test
mov
add
jno
push
aad
bound
aam
mov
mov
adc
lock
inc
sub
stos
outsb
jecxz
movsb
test
xchg
fwait
ret
or
push
pop
int
jl
cli
mov
push
and
addr16
sbb
mov
aas
mov
popf
inc
fdivrs
pusha
sbb
fcomps
hlt
xchg
xacquire
cmpsl
fsubrp
dec
and
arpl
jl
jbe
push
test
add
adc
sti
faddl
ss
mov
and
push
cmp
xchg
xlat
out
repnz
test
insb
gs
pop
push
cmp
add
dec
or
adc
pop
dec
das
sub
push
lcall
push
out
add
and
sub
pop
mov
inc
je
movsb
xor
into
and
js
dec
push
jg
lock
hlt
push
sbb
scas
adc
push
xor
enter
adc
in
bound
into
dec
inc
push
repz
jg
lahf
and
sub
cmpsl
movsl
dec
mov
mov
scas
arpl
enter
jo
or
mov
ja
sub
in
jnp
dec
mov
xor
mov
cmp
jge
mov
mov
cmpsb
adc
and
lea
push
pusha
jnp
cmpl
add
xor
mov
test
mov
ds
mov
in
cmp
fpatan
in
int3
sbb
xor
sub
shlb
dec
cmp
xor
shlb
addr16
jmp
fisttpl
push
push
mov
sbb
jne
test
pop
mov
push
rorb
fisttps
mov
jp
ds
mov
test
loope
insl
jno
push
push
mov
stc
adc
mov
mov
xchg
xlat
rcl
cmpsl
sbb
mov
sub
or
pop
push
sti
fisubrs
cld
cmp
mov
imul
sbb
ljmp
ret
push
scas
fwait
lahf
pop
dec
mov
cli
pop
adc
or
adc
test
mov
iret
push
out
or
call
out
sub
mov
loop
insl
xchg
sbb
xchg
pop
fwait
xor
push
int
aas
cmp
or
fs
ss
mov
mov
enter
mov
repnz
add
adc
xor
addb
outsb
push
mov
dec
xor
sub
stc
setbe
fucomip
and
repz
rolb
and
or
jb
inc
push
inc
sub
and
adc
sub
inc
sub
loope
leave
fimuls
adc
add
pop
jmp
xchg
jp
or
xchg
in
ja
jnp
push
stc
sub
movsl
popf
clc
sbb
push
loope
aam
cmpsb
popf
mov
cwtl
in
ss
jo
addr16
repnz
out
pop
lcall
aad
jp
jge
push
cld
mov
jb
xchg
in
call
bound
jle
in
imul
xchg
sti
or
lcall
jmp
jecxz
xor
and
jns
pop
test
jl
scas
fldt
lds
aad
xor
dec
mov
jae
lret
add
push
pop
sbb
jb
popa
jo
lock
outsl
inc
lods
add
hlt
lds
mov
mov
cwtl
jge
inc
fbld
pushf
in
sahf
je
notb
adc
push
mov
jmp
or
adc
fbstp
adc
scas
shlb
mov
in
or
cmp
mov
xchg
mov
cwtl
fsts
xchg
stc
push
or
mov
ja
cmp
push
mov
xchg
and
and
daa
jge
jne
cwtl
cltd
iret
sbb
cwtl
jmp
popa
inc
pop
stos
rolb
push
pop
dec
int
cmp
jne
inc
mov
out
and
or
jnp
xchg
push
or
xchg
jp
lock
mov
mov
scas
subb
ja
or
outsb
mov
lock
out
xor
cld
pop
jb
inc
pop
popf
mov
popf
mov
js
xchg
sub
scas
mov
getsec
pop
pusha
lock
mov
mov
adc
cli
jg
sub
mov
cmp
scas
add
rep
insb
xor
scas
push
push
das
faddl
sar
xchg
jmp
ret
sub
fld
sub
push
dec
sahf
data16
mov
rorb
daa
loop
cmp
push
out
mov
or
jg
adc
cmp
ficomps
xor
arpl
call
imul
xor
cmp
out
pusha
mov
inc
and
cmp
adc
xor
mov
outsl
xchg
mov
jno
push
test
loopne
out
xor
test
insb
outsl
daa
imul
push
int3
movsl
lcall
mov
popa
dec
cmpsb
and
popf
pop
inc
xor
fldenv
cmp
test
xlat
mov
xchg
xchg
sub
shll
mov
push
and
pop
loopne
inc
push
ljmp
push
mov
push
out
and
xor
out
sub
into
mov
int
sbb
imull
mov
fnstcw
jp
jns
cs
sub
sub
sbb
pop
push
pop
ljmp
cmp
jne
push
rcrl
push
orb
jg
mov
dec
mov
cmc
in
inc
add
xor
movb
and
mov
dec
dec
sbb
test
iret
sbb
sbb
xor
mov
ss
cs
pushf
insb
negl
jg
data16
leave
inc
ret
ret
pop
lock
jmp
xchg
orb
cli
xlat
add
add
add
fadd
and
out
xchg
mov
mov
ret
call
or
sub
sbbl
mov
cmp
fstpl
test
add
lea
stos
fidivl
mov
push
aas
or
mov
inc
scas
mov
inc
js
in
lods
ret
or
push
jge
dec
pop
imul
adc
push
test
les
inc
adc
add
fidivl
push
add
push
push
push
jg
aad
sahf
push
sti
out
xor
loope
push
mov
jno
add
dec
add
aad
inc
data16
mov
sbb
repz
int
inc
cmp
lcall
and
cmp
push
jne
loopne
add
jl
cmp
mov
push
clc
popa
sub
mov
inc
loopne
inc
lods
icebp
xor
mov
push
cmp
mov
pushf
mov
mov
xlat
je
sbb
cmp
xchg
enter
sbb
mov
sbb
mov
sub
push
iret
sbb
sbb
inc
add
aam
loopne
adc
adc
jl
insl
pop
adc
pop
mov
jns
push
add
das
clc
in
das
aas
add
fmull
push
lods
nop
mov
call
xchg
mov
push
out
iret
cmp
out
leave
popa
outsb
pop
or
mov
jecxz
pop
ljmp
jne
inc
test
jne
adc
in
cmp
adc
xchg
jb
ss
cmpsb
daa
js
in
xor
jb
out
cmp
jo
loopne
jg
push
add
dec
xchg
int3
pop
adc
mov
inc
pop
test
pop
jnp
inc
int3
jb
les
push
popa
jge
fstpl
in
push
push
xor
gs
and
xor
hlt
test
insb
mov
lcall
adc
pop
push
cmp
test
push
test
cmp
ja
out
xor
pop
ss
mov
push
dec
mov
cmpl
push
clc
mov
movsl
in
mov
sbb
inc
mov
adc
adc
push
imul
es
mov
dec
int
xchg
sti
xlat
in
sub
mov
aaa
dec
sahf
mov
das
dec
insl
push
mov
sub
inc
dec
das
adc
xor
and
scas
call
mov
out
pop
in
int
mov
popa
lret
jns
or
test
fsubs
jb
push
mov
xchg
cs
and
int
ret
sbb
push
cmp
or
mov
stos
push
add
mov
fidivl
mov
mov
mov
stc
outsb
xchg
xor
mov
mov
rcrl
and
or
and
jge
xchg
dec
sub
push
iret
push
mov
in
stos
push
mov
push
pop
push
pop
push
ss
cmp
das
insl
scas
es
pop
fimull
sbb
xchg
fwait
cmpsb
test
push
pop
add
mov
xchg
and
xor
jle
pushf
clc
jne
pop
call
add
push
jecxz
fs
rorb
dec
mov
dec
or
mov
or
fcompl
test
dec
mov
fwait
out
cmp
pushf
addr16
sub
ret
dec
fwait
jb
out
mov
gs
xor
sub
xchg
adc
pop
mov
repz
orb
sub
cld
lcall
in
arpl
adc
xor
jne
out
jne
into
jg
xlat
cmpsb
fisttps
gs
inc
add
mov
repnz
cmpb
aas
or
rcr
das
js
into
rcrl
pop
mov
xor
sti
ljmp
mov
and
lea
jp
sysenter
scas
xor
ss
or
and
xchg
mov
sti
push
xchg
xor
ret
test
sub
pop
and
add
lret
xchg
sub
decl
push
ror
outsb
imul
outsb
push
push
xor
addr16
movsb
pop
into
rcl
mov
fnstsw
xor
mov
jp
addl
data16
loop
ds
je
push
daa
rol
cmp
adc
xor
lret
push
jecxz
xchg
mov
outsb
lds
pop
outsl
mov
test
sub
push
mov
sbb
mov
inc
sbb
mov
push
shrb
cltd
scas
pop
aas
cmpb
movsb
mov
dec
lock
test
adc
cmc
or
push
clc
cmp
adc
add
sbb
push
test
push
adc
xchg
jg
lods
loope
repz
push
lods
in
in
popf
cld
stc
adc
loop
push
pusha
mov
sub
mov
stos
mov
js
int3
mov
jb
inc
int
out
fs
jg
mov
gs
ss
movsl
int3
ljmp
test
mov
outsl
mov
data16
cwtl
mov
rcrl
cltd
mov
jl
scas
jmp
mov
jp
sahf
scas
sbb
mov
cmp
jle
jge
and
and
jge
inc
or
loop
hlt
xrelease
adc
xchg
pop
test
movsl
xchg
jg
in
or
icebp
rclb
jno
test
mov
mov
pop
push
and
inc
mov
in
mov
outsl
bsr
int
shl
push
xchg
cmpsb
lea
jbe
call
in
lret
lret
adc
add
adc
inc
adc
mov
push
int
xchg
mov
mov
mov
mov
std
fcoml
push
mov
hlt
arpl
ja
fidivs
shlb
test
aaa
pop
inc
jmp
adc
push
and
sbb
mov
push
jge
or
fwait
xor
fwait
xchg
leave
shlb
inc
xrelease
lds
les
adc
gs
cmpsb
mov
in
or
dec
cmp
lret
scas
mov
sub
adc
icebp
jecxz
lret
clc
in
outsb
jl
fcomp
pop
adc
pop
pop
js
ljmp
test
fsubl
adc
jne
scas
lods
xchg
mov
sarl
pop
lock
lret
add
dec
jno
xor
cmp
sti
pop
xchg
xor
add
xchg
adcb
adc
pop
sub
and
xor
ret
nop
adc
sbb
sbb
cld
jns
cmc
mov
xor
shll
dec
test
rclb
xor
pop
mov
sbb
push
and
decb
push
push
sub
popa
arpl
shll
dec
inc
aas
mov
sub
in
pop
inc
std
mov
stos
lahf
xchg
xchg
stos
pop
shll
pushl
stos
sar
cmp
add
mov
fnstenv
cld
insl
xor
leave
pop
daa
push
movsb
push
cmc
repnz
sti
lods
lock
cmp
iret
out
jecxz
rol
or
push
fcmovnbe
sbbb
xor
mov
shll
dec
mov
sarl
cwtl
jb
and
jne
arpl
xchg
insl
xor
loopne
lock
aam
ds
xor
pop
in
cmp
and
mov
sbb
sub
dec
addr16
mov
cmp
movsb
inc
adc
loop
cli
rcll
or
push
or
je
sbb
lock
stos
cmp
fcompl
jmp
and
xchg
xor
or
dec
daa
inc
jle
aad
adc
jb
cmpsl
mov
xchg
imul
pop
pop
push
jo
xchg
jo
addr16
fdivs
dec
sub
lds
mov
xor
out
out
gs
std
pop
pop
fwait
andb
or
out
shr
sub
fs
xor
es
sar
adc
into
outsb
ss
jg
loop,pn
push
cli
cli
cmp
pop
aas
rol
lea
std
mov
or
add
dec
shlb
jnp
inc
lret
sahf
shl
addr16
dec
lahf
inc
xor
mov
sbb
in
jne
inc
sbb
sbb
add
push
sbb
rclb
xchg
ja
lds
mov
or
idivb
sbb
mov
cli
push
inc
or
dec
pmulhuw
dec
jl
push
pop
test
cmpsl
jbe
pop
sub
inc
mov
sbb
cmp
in
mov
xchg
push
xchg
jno
test
push
leave
push
mov
je
xchg
jmp
push
xor
ffreep
ss
mov
xchg
in
iret
popf
int
jno
mov
iret
clc
cmp
inc
lock
xchg
push
inc
dec
xchg
shlb
cmp
pop
or
dec
sub
sahf
adc
push
xchg
dec
in
cmp
xor
mov
jbe
mov
out
test
xlat
jle
and
sub
movsl
sbb
es
push
lcall
cmp
mov
push
test
mov
inc
adc
popf
fwait
xchg
fimuls
inc
stos
inc
shl
leave
orl
test
push
adc
or
outsl
lock
mov
cmp
dec
nop
mov
adc
push
sub
or
push
add
insb
outsl
jmp
mov
jo
or
clc
ss
repz
jmp
and
inc
insl
add
dec
nop
bound
fidivrs
jge
das
add
push
jbe
repnz
daa
punpckldq
cmpsl
in
jge
fistpl
out
push
pop
movsb
jbe
push
sbb
int
mov
movsb
mov
imul
mov
mov
lods
imul
das
pop
mov
and
jb
xchg
fdivs
push
fistps
aad
ret
sbb
addb
aad
dec
punpckhdq
mov
jmp
push
fadds
mov
pop
xchg
bound
imul
mov
fs
test
xchg
fnstenv
xchg
adc
sbb
jl
aas
xor
pop
aaa
sbb
or
push
lea
sub
fwait
call
jl
xor
add
stos
leave
jmp
mov
hlt
iret
insl
sub
ljmp
add
mov
cltd
sub
dec
adc
cwtl
out
mov
or
test
outsl
mov
jmp
mov
pop
mov
jo
lods
icebp
movsl
lock
stos
stos
pop
scas
sbb
push
mov
sbb
and
leave
push
lods
pop
add
cmpl
test
dec
cwtl
jle
daa
mov
lock
cmp
iret
cli
jl
aaa
dec
inc
cltd
or
cli
inc
jne
xor
rolb
sbb
jg
mov
mov
sahf
mov
jae
rcl
mov
jge
lret
gs
jb
out
pop
inc
gs
mov
xor
adc
pop
sub
shll
sbb
enter
and
pop
add
mov
mov
dec
xchg
ss
mov
mov
dec
je,pn
inc
xor
mov
dec
mov
dec
and
xchg
hlt
pop
pushf
inc
cmp
pop
in
mov
les
sti
adc
adc
pusha
jns
adc
lea
outsb
clc
xchg
mov
inc
mov
jg
xor
popa
cbtw
inc
insb
faddp
cmp
jge
imull
dec
out
out
subl
fwait
xchg
stc
mov
xchg
jns
hlt
lret
cmp
pop
loope
pop
scas
jbe
mov
into
mov
shlb
fbld
dec
pop
xlat
push
scas
add
push
in
push
sbb
mov
mov
fmuls
inc
mov
inc
jg
xchg
fisttpll
add
aaa
stos
jmp
pop
arpl
fsubr
dec
sbb
icebp
fcoml
icebp
bound
or
enter
jmp
pop
leave
jbe
pop
mov
and
inc
xor
negb
mov
les
pop
mov
mov
nop
fsubs
mov
push
or
out
cli
and
push
jb
pop
cli
jns
push
mov
and
pop
xor
dec
cld
insl
loop
roll
mov
aas
xchg
imulb
sub
cmp
dec
cmpsl
hlt
es
xchg
mov
jne
pop
in
add
loope
push
ret
aad
pop
lods
xor
xchg
or
mov
addl
mov
xor
das
nop
scas
xchg
ret
jl
dec
or
mov
pop
jmp
dec
push
loop
push
das
loopne
pushl
cmp
pop
cmp
lods
and
jecxz
fs
mov
adc
int
mov
sub
mov
js
mov
bnd
jno
es
lahf
dec
in
jbe
mov
and
pop
sub
out
lds
and
and
adc
jge
negl
cmp
cmp
xchg
fsubl
sbb
es
adc
push
pop
push
pop
mov
lea
popa
mov
es
mov
pop
jno
lret
and
leave
lret
ss
pushf
stos
or
insb
lods
ja
xchg
pop
movsl
bound
movsl
outsb
mov
cwtl
dec
adc
mov
enter
sub
ds
xchg
out
sub
enter
add
cmp
aaa
ss
cmp
jns
out
dec
cwtl
popf
push
in
mov
loopne
xchg
test
cmp
sbb
dec
ret
fsts
cmp
push
daa
jne
in
sbb
sub
cs
or
mov
das
sahf
mov
cs
push
sbb
addb
pop
mov
or
xchg
pop
add
lret
int3
stos
pop
pop
out
cmpsl
sub
or
cmpsl
pop
ficomps
xor
pop
sub
jb
xchg
les
sbb
imul
js
insb
mov
mov
sub
rorb
cwtl
fwait
iret
cwtl
and
fwait
in
arpl
sbb
xchg
int3
cmp
rcrl
pop
pop
sub
or
pop
pop
scas
insb
data16
pop
adc
repz
in
psubd
push
xor
in
mov
cli
les
rclb
sub
sti
shlb
adc
pop
cmc
push
jge
inc
or
mov
push
mov
std
jns
in
repz
aam
arpl
fldl
mov
inc
cli
nop
or
xchg
mov
std
hlt
push
fdivl
or
dec
jecxz
addl
mov
and
jno
daa
jecxz
lods
imul
std
sbb
lds
out
loop
adc
mov
shrb
sub
in
loopne
fiadds
sahf
mov
mov
push
cmp
leave
dec
mov
sbbb
scas
pop
out
ja
out
xchg
cmpsl
aas
test
or
inc
mov
dec
popf
pushf
lret
ljmp
push
xor
xchg
aaa
fisttpl
ja
jge
inc
mov
xlat
fisubrl
mov
loopne
xor
dec
jl
cmpsb
out
ret
cwtl
lret
pop
push
push
lods
arpl
cmpsb
ret
aas
or
popa
pop
pop
mov
loopne
mov
push
outsl
sbb
fidivs
xor
imul
je
leave
and
shrl
inc
loopne
xor
push
scas
fwait
mov
int
imul
mov
or
ljmp
sbb
jmp
cmp
adc
jmp
xor
lods
imul
sbb
xchg
shll
fistl
std
mov
into
test
shl
and
leave
movsb
dec
inc
paddsw
add
xchg
dec
mov
mov
xchg
pop
mov
jecxz
jge
test
xor
imul
pop
sbb
pop
out
jmp
dec
movsl
imul
stos
sub
je
cwtl
mov
dec
inc
movsl
xor
clc
mov
test
rcll
inc
into
xor
xor
dec
iret
aaa
xchg
sub
push
jae
ja
in
dec
aam
insl
push
pop
je
out
adc
and
cmp
jmp
add
or
jg
inc
ja
sbb
cli
add
mov
lods
push
mov
jle
fstpt
xchg
add
or
pop
mov
repz
pop
add
adc
sub
ljmp
xor
lods
rcrl
jae
adc
push
dec
test
imul
sbb
sub
lods
sub
imul
and
push
jg
mov
shlb
cltd
push
adc
enter
inc
or
sub
enter
sub
jmp
out
pushf
pop
repnz
repz
inc
andl
dec
in
lods
jne
jnp
aam
pop
jg
lret
adc
inc
dec
arpl
push
popf
fldcw
ds
inc
cmc
es
cmpsb
xor
fmul
pop
jne
add
sub
jae
out
mov
lods
cmp
jbe
sbb
xchg
jno
mov
mov
daa
add
es
dec
ret
mull
outsl
js
lret
jae
adc
mov
imull
cmc
jg
push
insb
sbb
inc
loope
test
cwtl
add
cwtl
add
fsub
cmp
dec
jmp
jnp
out
xchg
sub
bound
push
mov
push
mov
mov
xor
or
int
jo
daa
dec
mov
push
xchg
cmp
in
dec
or
inc
pushf
push
push
lret
in
mov
rcrb
jmp
and
cltd
and
divb
sub
adc
fisttps
test
jae
add
mov
out
shl
push
mov
add
xor
daa
outsl
test
bound
mov
ret
push
xlat
das
fistps
out
setno
push
xor
lds
push
push
mov
or
ret
iret
jno
bound
xor
push
push
lret
mov
pop
push
pusha
out
xchg
push
inc
xor
lods
pop
call
mov
and
add
add
xor
stos
push
in
ret
sbb
std
jge
push
xor
xchg
jl
sub
stc
cmp
in
dec
lret
mov
jne
lahf
inc
mov
and
sbb
sti
psubd
sbb
xor
fwait
mov
out
mov
jae
es
in
sbb
push
or
stc
cmp
sbb
popf
lock
repz
scas
pop
shll
les
cmp
adc
xchg
or
dec
outsb
aam
pop
ljmp
push
sbb
xchg
jle
repnz
jne
push
push
adc
in
sub
inc
push
cmp
std
mov
and
mov
in
inc
xor
mov
aaa
imul
out
cmp
cmpsl
adc
sub
stos
pop
xchg
repnz
lods
jns
jns
test
mov
ja
mov
mov
xchg
repz
cmp
cltd
sub
test
scas
sbb
fisttps
sarb
inc
xchg
mov
in
daa
testb
les
mov
outsb
fdivs
shl
mov
int3
lahf
push
push
rorb
stc
shrb
arpl
outsl
jge
fs
dec
lret
das
loopne
xchg
fld
lods
and
or
mov
dec
loope
out
popa
mov
pusha
mov
lret
cmp
arpl
cmp
mov
and
add
dec
or
pop
push
and
jg
div
sub
adc
test
or
mov
andps
lret
dec
jmp
and
pop
xor
out
ja
dec
lds
scas
inc
xor
dec
or
aad
inc
pop
inc
cmp
or
stc
sub
sbb
push
mov
aam
sub
rol
lret
mov
push
mov
mov
cmp
mov
ljmp
ja
in
xor
pop
pmaxsw
gs
sbb
push
mov
loopne
pop
aas
cmp
dec
mov
dec
fcoms
pop
cmp
shrb
pop
inc
rolb
insb
jl
addr16
adc
and
fisubrl
aad
mov
jo
sti
mov
xor
je
xlat
insl
sub
icebp
aam
or
mov
test
jge
dec
ljmp
js
push
sbb
push
faddl
adc
cmpb
adc
xchg
pop
jl
ljmp
push
inc
sbb
pushf
and
add
jnp
and
xchg
add
fcompl
jge
and
and
aad
negl
push
sub
sub
xchg
adc
or
xor
cmp
jno
mov
sbb
int3
int
jmp
xor
jnp
lea
xor
lock
dec
push
push
sbb
test
loope
cmp
test
push
dec
push
push
sahf
outsb
mov
fs
sti
loop
int3
xor
add
shll
pushf
lock
out
add
mov
into
jmp
pop
outsb
arpl
in
jp
adc
jns
push
shll
bound
mov
mov
nop
and
mov
mov
pop
xchg
dec
std
movsl
lcall
cmpsb
idivb
lea
cmp
sbb
lods
push
pop
inc
std
pand
xor
add
cmp
mov
xchg
xchg
pop
jl
jl
xchg
loop
imul
jge
enter
lock
push
and
jno,pn
imul
pop
fstl
cli
pop
mov
jecxz
gs
lock
idivb
fildll
cli
das
pop
in
adc
jns
adc
mov
out
pop
adc
sub
shll
sbb
popf
add
mov
pop
inc
and
sub
popw
xlat
cs
or
jmp
hlt
push
and
xlat
xchg
pop
out
jg
incl
cmp
fisubs
les
pop
mov
fdivr
pop
scas
loop
mov
push
xor
fmul
pavgw
push
ljmp
iret
add
pop
ja
mov
aas
loop
call
adc
and
in
mov
or
adc
insl
and
idiv
fimull
mov
dec
xchg
xor
jae
test
int
dec
inc
arpl
mov
dec
add
lea
icebp
je
pop
popf
or
mov
das
fmuls
hlt
pop
int3
pop
call
aaa
sbb
fbld
imul
repz
inc
lcall
sbb
pop
sub
in
in
rorb
or
jnp
cld
mov
roll
clc
loope
or
mov
cmp
mov
mov
dec
stos
data16
int3
bound
outsl
add
je
lds
lea
mov
outsb
adc
jb
ds
jns
int3
cmc
loope
push
fiadds
pop
clc
pop
xchg
xchg
adc
testl
fdivl
inc
cld
mov
sub
jl
int
fmul
pop
je
rorb
int3
pop
not
cmp
mov
fsubr
xchg
rorl
cmp
mov
sub
std
sbb
add
sti
jp
sub
jp
data16
push
test
sub
out
xor
pushf
inc
dec
add
nop
ret
push
add
xchg
xchg
and
dec
pop
stc
repz
xchg
pusha
push
stos
xor
pop
jl
clc
sbbb
sbb
int
lahf
mov
shl
stc
mov
lods
sar
push
shlb
inc
push
jmp
test
jnp
iret
sti
enter
cmp
in
dec
mov
xchg
stos
jo
and
hlt
sahf
nop
dec
fisubrs
neg
sub
mov
add
jl
test
sub
mov
xchg
aaa
adc
lock
test
fstp
rep
dec
into
jp
mov
dec
cwtl
jge
xchg
xchg
aam
and
jp
mov
fcmovbe
in
pop
sbb
xor
mov
cmp
data16
movsl
mov
fldt
dec
rclb
test
sub
or
arpl
mov
int3
ret
test
mov
sbb
adc
pushf
adc
cltd
push
and
or
pop
dec
mov
sti
pop
std
mov
mov
push
xor
cmp
xchg
repnz
mov
push
inc
sbb
inc
mov
scas
in
movd
mov
inc
xlat
xchg
or
sub
mov
mov
sub
xchg
add
inc
add
in
into
out
and
pop
lret
xor
dec
test
loope
scas
test
pop
pusha
lock
sub
icebp
movsl
jbe
outsb
dec
into
repz
sbb
and
jno
mov
jle
sub
outsb
mov
les
xor
adc
cmpsl
int3
sub
push
pushf
repz
dec
pop
and
cmp
pop
pop
jno
dec
dec
lahf
mov
stos
lods
movsb
xor
outsl
sub
stos
movsb
aad
aad
sub
lea
into
mov
pushf
adc
mov
inc
mov
or
dec
jo
and
mov
mov
fistps
jnp
mov
or
test
add
push
xchg
cmp
movsl
adc
inc
aam
add
neg
es
and
push
test
outsb
addr16
js
or
xchg
xchg
push
dec
lret
stos
dec
es
movsb
pop
xchg
push
out
fldenv
pop
ljmp
data16
fstpt
pop
mov
or
sub
es
jge
inc
sahf
stos
lret
sbb
loopne
sub
pop
gs
jmp
out
add
mov
outsl
hlt
in
cwtl
fs
mov
mov
or
lock
cmp
fwait
pop
aam
push
xchg
push
mov
or
js
mov
insl
pop
xchg
sbb
pop
pop
xchg
mov
cmpsl
test
sbb
mov
or
push
out
adc
bound
pop
jb
sbb
add
and
pop
test
imul
movsl
cld
mov
sub
fists
and
jns
test
jb
out
addr16
or
and
mov
add
outsb
mov
push
push
fwait
add
push
test
jg,pt
rep
fwait
jbe
popa
dec
sbb
jg
ror
xchg
or
mov
mov
stos
hlt
fucomip
lret
test
mov
cmc
push
mov
inc
jo
pop
push
mov
mov
imull
jbe
sbb
bswap
imul
imul
push
int
adc
and
jbe
sub
inc
test
push
pusha
or
jae
lret
cmp
ds
fwait
mov
pushl
pop
inc
xlat
fwait
out
mov
jnp
nop
ljmp
jg
jnp
adc
mov
fidivrs
mov
inc
cmp
cmp
aad
iret
fs
xor
in
jmp
int
xlat
add
mov
cwtl
ficoml
inc
sub
pop
addb
inc
nop
adc
sbb
in
cmpsb
inc
ja
mov
pop
or
leave
push
cmp
add
jge
sbb
push
push
ffreep
push
jp
add
mov
mov
outsb
out
pop
vaddpd
jbe
sbb
rorl
addr16
nop
inc
ror
std
imul
inc
mov
sahf
call
add
hlt
pop
jecxz
shrl
push
xor
inc
or
sarb
scas
int3
xor
test
clc
cmp
sbb
rcr
jg
lods
sar
outsb
xchg
out
ret
jno
out
scas
js
pop
cmpsl
lods
jl
insl
ret
call
inc
lcall
dec
jne
inc
jnp
cmpsb
mov
out
loopne
insb
es
mov
mov
ret
push
filds
and
leave
jns
xchg
push
repnz
and
cmpsl
ficomps
or
or
pop
pop
push
push
jb
xorl
imul
call
aad
jne
push
add
popf
stc
push
fwait
sti
lcall
dec
jl
mov
inc
and
push
sub
sbb
jb
xor
mov
mov
mov
push
fwait
sbb
dec
jecxz
add
xor
push
push
cmp
and
pop
in
mov
jns
rorl
inc
ds
addr16
sbb
das
and
test
std
xor
xlat
in
icebp
lods
mov
dec
into
movsb
cmpsb
and
xchg
enter
pusha
pop
mov
aam
push
out
inc
mov
loopne
lea
aam
das
inc
mov
xlat
or
fisttps
rolb
movsl
jns
and
stos
xlat
mov
fcomps
sarl
hlt
mov
xor
push
mov
cmpsb
cmp
mov
in
sarl
xchg
push
test
pop
aam
inc
ljmp
inc
rcll
sahf
ss
inc
sbb
lahf
jb
pop
sub
divb
mov
out
popf
push
mov
mov
or
pop
mov
std
inc
mov
cmpsb
mov
adc
roll
sbb
jg
and
test
orb
push
xchg
insl
xor
xchg
mov
jnp
xchg
inc
or
ret
mov
add
das
cli
loopne
rol
mov
rorl
mov
addr16
pusha
mov
and
pop
dec
pop
movsb
out
cmp
and
and
sub
pand
mov
fidivrl
out
pop
int
xor
lret
sbb
stc
xor
jb
xchg
dec
rolb
add
mov
addr16
mov
out
lcall
ds
das
pop
dec
adc
add
test
mov
xor
xlat
push
add
dec
movswl
lahf
sub
inc
adc
add
fsts
and
arpl
jmp
pusha
ss
out
jg
mov
cld
in
mov
mov
test
cld
adc
xor
shlb
cmp
cli
ss
ja
out
xor
adc
sub
push
pop
cmp
rcrl
dec
mov
pop
mov
pop
inc
adc
insl
xor
popf
xchg
movsl
popa
insl
jne
rorl
cli
cmp
mov
pop
adc
sub
jecxz
lret
sbb
xchg
mov
stos
gs
gs
pushl
cmpsl
xor
lods
pop
jle
sbb
mov
in
xor
cmp
push
push
gs
mov
and
fldl
stos
sahf
jmp
int3
xchg
mov
arpl
and
insl
cmp
dec
das
jbe
cmp
mov
inc
out
pop
mov
adc
sbb
mov
rcrb
push
mov
adc
mov
mov
cmpsb
ret
xchg
in
sbb
popf
pop
and
mov
daa
ja
stos
push
lock
or
incb
js
pop
lahf
lret
scas
add
sahf
fistpl
sti
sub
shll
sbb
lock
fcomps
mov
pop
test
bound
mov
arpl
aam
jge
and
das
fwait
dec
test
inc
push
cwtl
lods
sub
hlt
and
stc
mul
dec
inc
lret
mov
dec
pusha
in
lods
xlat
out
outsl
repz
cld
xchg
nop
or
and
out
and
sbb
push
ljmp
adc
repz
inc
add
cmpl
ret
hlt
inc
lods
mov
xor
xor
jl
je
lret
xchg
insl
adc
ror
push
imul
inc
sub
ja
sub
mov
xchg
sbb
pop
ficomps
mov
jae
pusha
pop
pop
in
cmp
add
push
in
mulb
dec
xchg
push
addb
xchg
adcb
pop
inc
insl
mov
mov
lret
inc
sbb
mov
cmpsb
cmc
mov
mov
add
push
mov
inc
cltd
cmp
leave
aam
push
out
popa
ss
xchg
addr16
js
jns
aam
sub
data16
dec
mov
lahf
sbb
stc
adc
sub
xchg
cmc
in
xor
jge
das
add
mov
aas
jbe
cmovp
fldcw
addr16
xor
xchg
outsb
push
roll
add
popf
test
sbb
bound
pop
pop
aas
lahf
loop
into
test
aaa
out
test
rclb
scas
scas
push
scas
popf
jge
pop
movsb
push
inc
sub
cmp
sbb
push
daa
adc
push
xchg
imul
cmpsl
xor
or
fmull
or
sub
mov
daa
outsb
pop
std
setge
rcr
scas
hlt
addr16
nop
lahf
xchg
div
mov
ja
mov
sub
mov
jb
je
xchg
es
in
and
sub
aaa
jge
nop
js
pop
jno
xchg
out
cltd
and
add
dec
aas
push
sbb
outsl
inc
insb
repnz
imul
sub
mov
outsl
and
scas
lods
inc
addb
rcrb
fwait
cli
jmp
repz
enter
jno
out
aas
rorl
aam
lcall
insl
cmp
scas
fsubrs
cwtl
sbb
call
adc
lcall
gs
ljmp
imul
and
aaa
scas
mov
sti
lock
push
outsb
dec
dec
ja
enter
sbb
mov
push
adc
sbb
xor
dec
fisubl
push
imul
pop
shl
out
cmp
popa
icebp
repnz
add
xchg
jnp
push
shll
xchg
jae
push
inc
lods
push
das
sbb
int3
and
int
inc
loope
lea
xor
xchg
loopne
mov
outsl
data16
rorl
sub
xor
jns
fs
stc
jmp
pop
je
inc
sbb
pop
add
scas
xchg
xor
dec
fwait
into
jp
cmp
xor
fs
add
lret
and
push
ja
jae
push
out
call
cmpsb
push
in
pop
xchg
pop
xor
push
cli
push
fcomps
adc
pop
gs
sbb
adc
sbb
addr16
roll
push
pushf
repz
cmp
out
ret
repz
and
mov
mov
xchg
je
sbb
xor
cmp
lcall
fcoml
or
pushl
imul
lret
test
xchg
fwait
or
std
outsb
mov
repnz
fs
or
xchg
xchg
and
xor
js
js
sbb
subl
mov
mov
cmpsb
sbb
sbb
jne
mov
mov
int
nop
loopne
sbb
sub
in
in
push
and
sbb
mov
mov
mov
lcall
inc
xchg
pusha
cmp
pushf
je
cmp
push
adc
and
xor
and
mov
add
cmp
addr16
dec
out
scas
jbe
mov
mov
xlat
pop
cld
clc
inc
movsl
add
cwtl
rcrb
lcall
int
cltd
cmc
into
jmp
jle
cmpb
fstpl
sti
xchg
push
mov
lds
sbbl
push
notb
fmull
xchg
insl
jnp
insl
mov
cmp
rcll
push
pop
or
inc
mov
mov
shlb
adc
xchg
roll
push
loopne
mov
mov
jge
mov
push
sbbb
jnp
or
out
xor
rcl
daa
inc
dec
xchg
sar
aas
data16
insb
cmp
leave
adc
ja
dec
dec
xchg
ss
int
sub
test
fcmove
cmp
arpl
pop
nop
push
cmp
jmp
shrl
or
andl
adc
leave
jae
or
and
mov
mov
shrb
pop
popa
or
insl
sbb
ja
enter
xchg
or
decb
ret
loopne
mov
mov
scas
push
ljmp
out
adc
add
movsl
mov
cmp
mov
loope
movsb
jg
cmc
mov
les
sbb
push
sbb
fucomp
adc
jl
mov
add
fisubs
lods
addr16
xchg
or
cli
cmp
nop
cltd
pop
fildll
xchg
mov
and
pop
pop
outsl
cmpsb
aam
ja
or
push
popf
call
lds
cmp
pop
aas
repnz
jecxz
iret
repz
stos
ss
sub
sbbb
cmp
cmpsl
sbb
test
mov
inc
into
cmpsl
add
popa
gs
mov
in
dec
push
fnstenv
xlat
pop
ljmp
or
clc
jle
xlat
es
aam
es
mov
int3
stc
inc
mov
ljmp
negl
add
mov
shlb
dec
test
inc
iret
addr16
outsb
movsl
add
lcall
loop
dec
inc
jmp
imul
mov
or
fnstenv
adc
out
loope
shll
hlt
imul
test
hlt
or
test
aaa
push
gs
hlt
pop
test
nop
and
outsb
jg
add
fstpl
jno
xor
aas
inc
xlat
adc
cmp
pushf
adc
movsl
push
adc
es
add
or
adc
xchg
cmp
std
jle
sub
push
sub
sub
outsl
out
jl
sbb
les
push
fldt
mov
dec
cli
or
ja
xor
push
lcall
sbb
enter
inc
jno
iret
mov
mov
push
imul
cmc
out
jmp
sti
cmpsb
sbb
insl
sub
jmp
xor
shlb
mov
ja
or
cmp
push
insl
or
mov
mov
jns
je
mov
filds
inc
jbe
push
pop
mov
push
test
or
inc
pop
out
cmp
push
inc
dec
dec
and
jno
lock
mov
cmpsl
js
mov
aaa
adc
or
cld
clc
xor
cmpsl
out
add
arpl
dec
neg
roll
pop
jp
dec
cli
add
inc
add
andl
mov
adc
adc
and
mov
or
into
or
outsb
mov
inc
cmp
or
xor
cmp
jmp
sbb
test
cmp
sub
mov
icebp
ja
mov
cmp
sub
icebp
sbbl
jbe
scas
xchg
fildll
shlb
pop
loop
xchg
adc
mov
pop
mov
jecxz
fdivrs
clc
sub
inc
stos
sub
inc
or
cmc
mov
into
cltd
hlt
lcall
data16
aaa
xchg
jns
cmp
ja
xor
jno
roll
fisttpll
mov
and
hlt
sbb
ja
inc
adc
jl
jl
sbb
stc
xchg
cmp
out
push
mov
mov
cs
push
fldl
popa
leave
movsl
aaa
mov
es
cmp
dec
xchg
insl
mov
aam
push
adc
add
lret
test
lcall
pushf
and
pop
les
jle
jg
jge
mov
or
movsb
cwtl
pop
pop
mov
mov
loop
sahf
fcoms
scas
outsb
and
loopne
fbld
sbb
movsl
push
dec
xchg
fsubrs
aas
cmp
dec
push
and
fmul
fnsave
inc
push
mov
aaa
pop
test
xor
or
sbb
inc
mov
cmc
pusha
mov
mov
out
cltd
inc
in
dec
lret
xchg
push
xor
ret
cmp
fisttpl
xor
add
sub
and
jmp
and
or
mov
and
jle
stos
sbb
dec
or
inc
pop
mov
negl
xchg
dec
push
add
pushf
cmc
sbb
cmc
subb
push
aaa
in
mov
pop
clc
cs
iret
ret
mov
mov
inc
mov
rolb
clc
shrb
cmp
mov
iret
fsub
and
pop
loope
stos
xchg
adc
cld
push
imul
iret
dec
fisubrl
adc
add
dec
dec
loopne
orl
pop
add
sbb
lods
mov
pop
mov
pop
dec
or
adc
mov
pusha
or
decl
push
mov
dec
cltd
sub
inc
pop
inc
pop
aam
es
jge
enter
pushf
mov
addr16
dec
xchg
ss
sbb
cmp
inc
sbb
adc
imul
xor
inc
mov
adc
into
or
pop
outsl
jbe
repz
arpl
xchg
loope
lahf
mov
xchg
sbb
cld
in
push
mov
mov
sub
in
xor
xchg
cmp
and
cmpsb
pop
jo
fs
pop
mov
mov
in
pushf
sbb
jge
pop
adc
ds
dec
jns
lock
fcompl
jns
ss
movsb
repnz
or
mov
mov
stos
sbb
data16
pop
push
sbb
mov
mov
xor
xchg
fld
mov
jle
adc
loop
or
sarb
ret
lahf
popa
hlt
shll
jo
inc
jae
pusha
std
pop
xchg
add
movsl
fmull
push
lea
dec
jnp
or
aas
xor
adc
push
inc
push
push
ja
movsl
imul
fnstenv
sbb
pop
pop
dec
std
leave
cltd
in
xchg
repz
jp
cmp
bound
insl
bound
add
rol
subb
and
fs
aaa
iret
push
xor
mov
lret
or
in
inc
jmp
lea
xchg
wrmsr
jo
xchg
inc
movsl
fidivrl
adc
xor
dec
dec
fs
and
jae
fisttpl
push
adc
repz
pop
mov
and
push
orb
insl
push
nop
movsb
movsl
and
out
sub
pop
mov
pop
add
cmc
addr16
cwtl
push
xor
jno
and
fsubrl
or
cld
mov
leave
mov
aas
lds
outsb
scas
jb
es
pop
inc
lds
out
sahf
push
movsl
add
int3
popa
aam
mov
scas
dec
gs
pop
cld
push
movsl
xor
xor
and
and
jbe
icebp
push
xor
mov
sbb
popa
push
lret
pop
or
aad
or
xlat
iret
xor
inc
mulb
xor
sub
push
mov
pop
pop
aaa
iret
mov
jno
mov
daa
aaa
jns
jl
jne
sbb
jae
ss
in
and
insl
into
mov
jl
ret
je
loopne
mov
dec
sub
sub
or
mov
cmp
aas
xchg
mov
iret
cs
mov
orl
mov
lret
xor
inc
out
popa
mov
pop
jge
mov
test
cwtl
addl
lcall
jae
cmp
addr16
jno
jo
and
popf
cltd
adc
cmp
fbld
mov
lea
xor
cmp
pusha
dec
das
imul
cmp
mov
mov
fbld
je
xchg
push
pushf
scas
mov
sub
pop
xor
xor
mov
mov
mov
daa
mov
or
mov
push
mov
dec
scas
pop
xor
inc
sub
pushf
jbe
ss
xchg
and
inc
jae
jmp
nop
mov
or
pop
fstl
pop
movsl
jecxz
push
inc
bound
lods
and
jae
mov
lods
pushf
add
leave
mov
aam
xor
pop
sub
data16
push
dec
jle
mov
aam
and
push
push
std
sbb
mov
lret
outsl
mov
adc
mov
gs
loope
xor
in
xchg
push
jmp
xor
fs
call
out
pusha
lret
xchg
dec
lahf
scas
xchg
lods
aas
sub
dec
je
sub
ja
stos
sub
movsl
pinsrw
testl
and
movb
jae
sub
rcll
insb
pop
sub
test
sbb
div
shll
jnp
out
inc
ljmp
pop
ror
add
neg
mov
xchg
cmpsl
pop
pop
fbld
rcrl
xor
sti
and
sti
jmp
push
xor
out
add
rcr
cltd
pop
lds
pop
dec
ss
adc
shrb
sarl
leave
mov
mov
loope
imul
movsb
push
xor
push
mov
xchg
cmpsb
mov
xlat
and
nop
cmp
lret
faddp
xor
add
push
dec
add
mov
xchg
sbb
pop
pushl
and
add
out
sbb
sbb
mov
sbb
mov
ljmp
fnstcw
into
sub
or
mov
mov
lahf
inc
mov
push
and
dec
push
out
push
in
jg
mov
xchg
jmp
pop
movsl
fwait
loop
mov
cs
out
xchg
mov
ljmp
pop
loop
cmc
iret
sub
mov
jno
int
idivl
cmpsl
dec
or
movsl
add
movsl
jecxz
orl
adc
testl
mov
jge
pusha
out
lcall
scas
add
cmp
cld
push
popf
sub
lods
inc
jno
int3
jo
aas
pop
loopne
pop
notb
mov
dec
roll
rcrb
adc
xchg
or
aad
push
rcr
sub
loop
rolb
xlat
movsb
dec
cltd
pop
xorb
lahf
cs
push
dec
rsm
dec
in
loope
rorb
jns
pop
mov
push
in
inc
lahf
cltd
jl
jne
jnp
lcall
shll
std
push
mov
cs
lea
test
dec
test
or
mov
cmp
jg
enter
fnstcw
shlb
xchg
add
mov
mov
aad
addr16
mov
or
sti
push
mov
arpl
and
stos
mov
adc
inc
imul
bound
imul
sbb
jmp
fsubrs
adc
jnp
pop
frstor
jo
dec
je
ret
adc
movsb
and
or
cmp
sti
outsl
pushf
xor
and
leave
rcrb
cmc
les
add
loop
mov
ds
dec
stc
xor
test
das
lock
pop
ja
sub
jecxz
aad
nop
xchg
je
inc
xchg
mov
push
addl
shlb
inc
daa
mov
adc
pop
pop
fsts
and
xchg
and
stos
aad
imul
testl
sub
fwait
cmpsb
loope
mov
insb
mov
push
push
or
daa
repnz
orb
mov
xchg
jle
pop
and
in
xchg
push
dec
rcrb
adcl
pop
clc
js
fimuls
clc
inc
fisubs
xor
in
loopne
push
inc
sbb
push
add
ret
jo
jle
cmp
fsubs
push
loopne
pushf
push
xchg
cmc
fidivrs
and
cmp
lahf
mov
mov
inc
pushf
push
mov
cmp
cmpsb
and
loopne
imul
js
fwait
xchg
popl
leave
mov
sub
mov
rclb
xchg
ret
stos
mov
inc
pushf
and
inc
es
aad
push
adc
movsb
sbb
push
sub
fisttpl
dec
test
cmpsb
fisttpl
and
sub
in
scas
imul
out
sbbb
scas
lock
scas
pop
pop
and
mov
jns
mov
lret
out
mov
mov
pop
out
or
mov
push
push
pop
bound
mov
in
mov
in
inc
pop
and
cmpsl
xor
mov
rorl
add
cmc
mov
pop
mov
loope
mov
lds
pop
movsb
xor
push
pusha
adc
dec
pushf
test
fsts
ljmp
shll
imul
cmp
xchg
pop
dec
dec
pop
stos
xchg
movsb
icebp
fsubrl
repnz
and
jg
fstpt
jae
mov
sbb
cmp
lret
add
push
cmpsb
mov
fwait
loope
lds
scas
cmp
mov
add
ret
and
fldt
nop
lods
inc
mov
pop
and
idiv
xlat
mov
fldl
xchg
cmpsb
mov
loopne
cltd
repz
mov
xor
push
pop
sub
adc
jmp
cmc
ljmp
mov
and
push
popa
inc
gs
loope
and
mov
mov
push
lcall
push
fnstsw
adc
shrb
lods
sub
ret
lret
nop
push
sbb
das
mov
sbb
xchg
lods
aaa
mov
cmp
xlat
mov
fs
cmpsl
pop
std
push
popf
jns
adc
out
outsl
imul
hlt
js
dec
cmp
sti
ds
push
test
popa
mov
scas
jl
cmp
sbbl
mov
fsubl
test
shlb
ficompl
jle
sbb
jns
insb
pop
ja
and
test
mov
dec
mov
dec
sbb
mov
fiadds
xchg
clc
xchg
fxch
mov
sbb
jnp
push
jmp
jo
std
pushf
xchg
icebp
loope
lea
ret
flds
in
leave
xchg
pop
js
or
jp
ljmp
loop
pushf
push
jne
mov
push
inc
mov
enter
stc
daa
gs
jae
adc
inc
cmp
shlw
add
push
dec
adc
leave
hlt
nop
rcr
inc
jecxz
popa
push
mov
mov
sub
sbb
pop
dec
dec
add
outsb
mov
lahf
pop
aaa
loop
jge
xchg
ss
cmovge
or
ret
xor
in
cmpb
lea
xor
mov
add
adc
xchg
add
mov
cmpl
mov
insb
rorb
sub
add
lret
adc
push
dec
mov
push
push
repnz
lret
or
xchg
repz
jbe
add
arpl
adc
jl
je
inc
and
mov
dec
loop
clc
call
cld
leave
dec
cmc
rol
lahf
lret
add
inc
pop
dec
push
lahf
rolb
sbb
push
into
loopne
and
xchg
and
sub
adc
clc
mov
out
lds
hlt
jbe
dec
lods
push
xchg
xor
fucomip
gs
add
push
add
pop
std
cwtl
xor
imul
sub
imul
xlat
xor
mov
sbb
aaa
scas
lea
fnstcw
inc
imul
shrl
loope
mov
jnp
cld
std
push
popf
pop
scas
je
fildll
add
xchg
sbb
leave
lods
addr16
cmc
xchg
pusha
mov
maskmovq
testl
fwait
repnz
sbb
jno
jo
push
out
stos
pop
sub
and
loop
stos
cli
pushf
mov
and
push
add
fildl
jne
sahf
push
mov
jnp
js
daa
mov
out
fidivrs
popa
cmpsb
repnz
push
xor
inc
ja
sub
mov
xor
push
sbb
mov
jle
adc
notb
hlt
bound
loopne
stos
xchg
scas
das
and
jns
clc
aam
mov
test
adc
mov
jo
fistps
outsl
jg
jo
stos
add
mov
pop
inc
sbb
rclb
inc
subl
dec
cs
dec
pop
xchg
stos
push
add
xor
shl
out
cmpsl
fcmovne
xchg
dec
adc
inc
sahf
pop
dec
mov
mov
insl
test
pop
mov
jnp
int
fdivrp
outsb
xchg
jne
std
dec
inc
and
lret
push
and
inc
add
mov
pop
and
jl
repz
inc
pusha
fidivrl
push
fwait
call
mov
mov
out
je
ljmp
stos
ret
testb
and
xchg
pop
das
sub
sub
and
or
pop
mov
push
ljmp
and
daa
cmp
or
push
add
ja
insb
push
adc
es
fstps
aam
xlat
decl
inc
mov
sar
rcr
out
bound
cmp
jmp
sub
adc
sar
cmp
pop
jp
cmpsb
test
sbb
dec
adc
sbb
aad
iret
repnz
leave
jno
jb
lret
inc
enter
in
cld
sbb
shlb
pop
jl
ds
push
lret
lock
fldenv
sub
mov
lds
pop
pop
das
mov
pop
push
push
and
int
enter
iret
call
scas
add
incl
mov
out
and
aas
fsts
inc
mov
nop
xlat
mov
mov
jno
push
pop
rep
sub
push
sahf
imul
mov
dec
adc
inc
dec
adc
loop
push
and
mov
sub
push
inc
repnz
sbbb
adc
rcl
inc
mov
mov
jnp
jmp
loop
lret
pop
push
mov
mov
std
ja
sahf
xor
jnp
xor
push
xchg
mov
push
dec
xchg
nop
jle
ss
inc
jle
or
ss
mov
add
pop
xchg
push
xchg
sarb
leave
push
jmp
lea
add
shl
xorl
and
test
pop
ret
jge
out
sub
pop
ret
dec
sbb
dec
jb
cmp
xchg
test
xchg
ret
movsb
or
sbb
jno
mov
inc
cmp
orb
add
frstor
cli
or
loop
mov
cmp
mov
pop
jne
es
and
imul
xor
fistpll
dec
dec
sub
out
clc
pop
dec
sub
sbb
sub
std
xor
push
into
aam
les
cmp
sbb
aam
das
sbb
sbb
cmp
es
or
sbb
adc
pop
int3
out
ret
nop
or
mov
fxtract
test
mov
jecxz
push
jbe
ja
test
arpl
sbb
dec
dec
mov
cmpsb
jecxz
hlt
push
push
inc
push
lock
mov
enter
mov
mov
mov
rorb
lret
fs
cmp
je
into
test
push
je
xchg
inc
xchg
cwtl
enter
mov
mov
lock
dec
xchg
cltd
fdivrp
adc
push
imul
mov
add
stos
dec
sub
add
jg
pop
lds
das
mov
out
lock
and
out
repz
imul
mov
xorb
test
jbe
and
jnp
mov
stc
jns
scas
cltd
adc
adc
inc
adc
lods
call
sbb
lods
or
inc
mov
jne
dec
jmp
pushf
es
sbb
xor
push
cmc
outsb
adc
repnz
sub
xor
lret
xor
outsl
add
cli
mov
les
das
and
mov
stos
pusha
jbe
jg
jle
imul
sbb
lds
int3
mov
lock
adc
cmp
sub
inc
out
test
lods
pop
hlt
push
lret
lret
jl
orl
lcall
mov
mov
fs
imul
mov
shlb
orb
sbb
cmpb
rol
lds
test
jae
mov
mov
inc
cmp
mov
push
mov
mov
out
stos
pop
and
xchg
fcmovnb
adc
fcmovne
mov
xlat
loope
int3
movsb
xor
add
mov
mov
mov
and
fisubrs
shl
lcall
add
cmpsb
mov
jno
rcll
mov
lea
mov
scas
mov
out
adc
pop
mov
ljmp
and
inc
out
jns
cmp
mov
add
push
adc
cmpsb
sbb
into
mov
call
sub
lock
mull
insl
xchg
sub
sub
out
lea
inc
mov
imul
cld
cmp
jne
adc
mov
cltd
mov
lahf
xchg
and
lahf
das
mov
jmp
jmp
in
fmul
pushf
inc
push
xchg
js
pop
ret
test
lods
gs
add
in
or
movsb
fistpl
inc
pop
leave
stc
shl
cmpsl
push
dec
sub
adc
outsb
andb
aas
icebp
add
shll
jnp
rol
cmp
adc
xchg
jns
in
test
inc
loopne
negb
int
mov
mov
outsl
add
mov
or
icebp
fnstsw
scas
add
mov
out
push
mov
or
imul
mov
xor
movsl
rep
xchg
leave
daa
sbb
enter
mov
mov
nop
mov
xor
pushf
stos
jb
rolb
mov
mov
sbb
xchg
cmpsl
sbb
repnz
xchg
jno
lods
jo
out
jo
sub
mov
jno
arpl
push
ret
lahf
fxtract
push
cmp
pop
pop
nop
pop
incb
stos
sbb
mov
lods
aam
js
punpckhbw
jns
dec
push
mov
mov
sub
test
xor
xor
shll
jg
sub
push
and
test
push
aad
out
cmp
jbe
imul
mov
pop
shll
xor
dec
xchg
sub
xor
cwtl
cmpsl
outsl
lcall
jbe
xchg
add
aas
pop
fs
hlt
or
add
mov
call
addr16
inc
push
sub
mov
push
ljmp
sbb
movsl
cmp
push
je
mov
add
je
dec
in
ss
ljmp
test
jge
mov
fwait
adc
movsb
call
cli
decb
ds
xchg
data16
movsl
in
or
rcrl
jb
sbb
hlt
dec
daa
lods
test
mov
add
mov
xor
shll
or
push
lods
and
mov
xor
sti
push
in
jmp
pop
dec
mov
aas
and
popf
xchg
mov
mov
jo
push
imul
imul
or
addr16
and
mov
shlb
mov
pop
cli
gs
push
hlt
sahf
cmp
rcll
clc
je
inc
mov
inc
cmpsb
mov
sar
jb
push
cmp
loope
hlt
roll
imul
mov
arpl
cmp
mov
cmp
subb
inc
imul
sub
inc
out
xor
jo
mov
adc
ret
popa
mov
lods
and
pushf
add
ret
daa
imul
adc
test
mov
xor
pop
insl
int3
add
mov
jle
cmpb
xchg
fbstp
aad
mov
sbb
jecxz
mov
rorb
pop
push
shrl
test
decb
into
shll
sub
aaa
sti
or
push
das
subl
jno
dec
add
lds
out
mov
movsl
xchg
pop
jnp
cmp
xchg
cld
insb
popf
add
jge
mov
mov
jo
add
mov
dec
stos
cwtl
in
fldl
sub
inc
inc
xchg
aam
sub
lea
popa
jge
mov
leave
call
jb
lods
lock
mov
sarl
iret
push
pop
into
cmp
mov
shlb
sahf
ret
imul
lret
xor
ret
sbb
addr16
inc
adc
stos
repnz
mov
inc
xchg
mov
push
out
cmp
xor
sbb
ret
jno
and
sub
in
ret
loop
je
cmpsb
or
repz
loopne
push
repnz
mov
cltd
enter
je
push
adc
jno
pop
lods
mov
mov
call
mov
test
dec
and
shrl
xchg
lret
bound
xor
enter
int3
push
int3
mov
out
je
jb
jmp
ss
pop
mov
inc
jne
cmc
mov
pop
jnp
aaa
mov
sbb
add
push
movsl
xchg
inc
adc
lahf
jno
mov
push
jno
xchg
pop
data16
movsl
sub
add
mov
jo
incl
ret
and
mov
fs
je
fnstsw
movsb
adc
cltd
xchg
dec
stos
mov
not
xor
mov
jp
mov
sub
and
out
shlb
fs
push
cmc
mov
enter
nop
aad
jecxz
or
mov
cwtl
stc
push
mov
or
cmp
test
movsl
mov
push
ljmp
out
je
sti
pushf
test
push
jmp
stos
mov
popf
mov
cwtl
in
cmp
cmp
pop
dec
out
inc
dec
test
inc
xlat
mov
testb
xchg
out
je
xor
add
mov
mov
in
arpl
ss
jmp
popl
inc
in
push
cli
aad
mov
repnz
xor
or
pop
jbe
pusha
pop
jmp
std
sub
ljmp
aaa
stos
shr
jnp
ds
loop
add
out
mov
add
xchg
movsb
push
stos
dec
lahf
jp
mov
js
ret
push
cltd
int
mov
out
subb
rcrl
push
addl
add
lret
add
scas
and
lock
sub
sub
cli
mov
push
mov
dec
insl
xchg
inc
dec
cmp
popf
cmp
in
aaa
push
js
xchg
cmp
and
out
bound
into
mov
sub
ljmp
adc
mov
outsl
js
rcll
xor
in
mov
mov
dec
push
sti
jno,pt
in
lcall
std
add
out
dec
cmpsl
popf
aaa
mov
imul
popf
shll
outsl
shll
out
adcb
or
push
pop
pop
inc
push
je
pop
aad
rolb
sbb
mov
adc
jle
add
jns
inc
dec
repnz
sbb
jns,pn
jg
mov
int
ret
scas
fldenv
aaa
push
mov
in
inc
inc
mov
xchg
lret
test
mov
loop
inc
add
jmp
aad
and
aas
cmp
cmp
sbb
pop
test
or
add
mov
je
cmp
gs
or
jg
insb
push
jo
rorb
lcall
lcall
mov
fwait
clc
cmpsb
aas
mov
xor
stc
scas
dec
divl
loopne
xor
push
push
subb
in
outsl
push
jne
outsl
jge
lahf
loop
add
jmp
jp
pop
mov
jns
push
jae
lods
cli
inc
mov
in
fidivl
sti
sbb
repz
sub
push
bound
dec
decb
push
jb
adc
add
inc
dec
gs
jecxz
jnp
shlb
pop
add
in
xor
adc
es
dec
cld
xchg
mov
ror
nop
cltd
push
push
test
or
dec
orb
and
cmp
icebp
cmp
mov
leave
aam
sahf
push
cmc
test
mov
jae
or
stos
aad
xor
xchg
pushf
pushw
xor
in
jge
and
stc
loop
mov
adc
xor
push
or
adc
popa
push
dec
mov
dec
ret
int
xchg
or
inc
loop
xor
icebp
mov
inc
outsb
iret
nop
idivl
inc
jle
xchg
ja
inc
sbb
in
out
pushf
pop
inc
icebp
sbb
call
insl
insl
fldl
lods
add
add
cmp
jg
dec
xor
repnz
xlat
scas
aam
cmp
pop
fdivrs
fwait
nop
aaa
sub
out
dec
insb
clc
adc
xor
movsl
jle
stos
dec
sbbl
mov
icebp
pop
dec
add
push
add
or
xlat
pop
and
sbb
inc
cmpsb
addl
sahf
call
adc
loopne
test
clc
sub
rdtsc
lods
jns
mov
xor
das
hlt
mov
xor
mov
das
shrl
inc
sub
and
mov
and
add
test
mov
add
test
push
ret
or
cmp
jecxz
test
outsb
ret
popa
inc
push
adcb
enter
xor
imul
out
lret
and
sbb
arpl
jae
mov
pop
mov
push
aad
cmpb
mov
sub
mov
jmp
xor
mov
aas
ret
sub
shrb
add
mov
sbbl
and
xor
mov
jnp
jo
mov
daa
out
and
push
dec
or
inc
and
mov
in
adc
sbb
jecxz
testb
mov
popa
sbb
mov
xchg
testl
and
add
cmpsl
xchg
jno
jne
cmpsb
and
jnp
xchg
push
loopne
aas
add
fildll
cmp
jmp
sbb
std
out
push
ss
fsubl
fldenv
out
in
je
dec
lret
mov
inc
in
mov
xor
rcrl
pop
pop
sub
inc
repnz
adcb
and
scas
inc
jl
fwait
pop
pop
mov
aad
adc
mov
mov
pop
xchg
fldcw
sub
push
test
lahf
xor
dec
cmp
aad
cmp
ret
mov
sbb
sub
mov
mov
stos
push
imul
cmp
jg
mov
sbb
dec
jl
int
lcall
leave
pop
enter
aam
and
cld
add
dec
int3
mov
rorl
pop
sub
js
push
arpl
sbb
adc
jno
pop
or
cmc
xor
rcl
cmp
jae
popf
das
orb
push
add
cmp
pop
pop
stc
or
mov
and
cmpsb
das
lea
or
pop
out
sub
xchg
lea
clc
imul
mov
push
fsubl
push
xchg
push
push
or
jno
jb
pop
jae
dec
or
mov
inc
sub
imul
lods
cmp
add
xor
push
push
inc
fbld
inc
fisubrs
jmp
inc
leave
mov
xchg
push
jle
or
jp
test
jo
test
add
frstor
inc
mov
fldt
insl
clc
cmp
push
loopne
loop
push
jns
js
loopne
inc
rorb
lea
mov
cwtl
cmp
and
arpl
xchg
addl
push
push
inc
test
daa
cmp
dec
pushf
sbb
je
scas
in
test
push
lds
inc
fwait
lahf
jns
mov
pop
mov
mov
bound
nop
clc
ds
test
inc
stos
imul
mov
dec
into
loope
push
xchg
adc
cmp
push
dec
neg
jg
mov
mov
inc
int
push
xor
cmpsl
xchg
jl
push
jl
push
inc
mov
icebp
sbbb
out
cmp
push
call
pop
int
push
je
add
pusha
and
jbe
insb
adc
ja
scas
cmp
sub
js
sub
scas
notb
jge
xor
pop
mov
dec
ljmp
ret
and
pop
and
mov
lock
and
stc
testb
mov
lret
push
or
or
pop
inc
ror
adc
jnp
sbb
sub
jne
nop
inc
and
das
sbb
jbe
mov
repz
ret
shll
ret
mov
mov
cmpsb
lods
insb
sub
or
icebp
cltd
test
lods
xchg
jle
mov
leave
sbb
sub
xor
pop
in
in
jecxz
ja
ds
add
xor
je
jmp
and
rorl
mov
pop
jmp
fdivl
push
and
cmp
out
or
in
jmp
aam
xlat
mov
mov
ja
add
mov
pop
mov
jge
sub
nop
pop
xor
imul
and
jae
add
and
xor
pushf
ja
mov
pop
stos
xchg
std
or
mov
mov
push
adc
sub
ret
sbb
or
mov
sbb
stos
mov
sub
inc
jb
sub
push
or
es
jb
adc
sub
imulb
fpatan
loopne
fisubl
lea
ljmp
pop
imul
jecxz
orb
ljmp
dec
xchg
aas
imul
pushf
lods
das
add
push
mov
mov
add
das
mov
or
mov
iret
mov
rcll
adc
sarl
sub
cmpsl
sbb
cmp
test
lods
leave
sub
shlb
movups
push
fisubrl
sahf
sub
cwtl
pop
dec
popf
pusha
in
mov
out
dec
test
call
cmp
ficoms
fldl
xchg
imul
fists
push
jns
add
pop
jecxz
mov
dec
cld
sub
addr16
shll
out
jbe
cwtl
aad
leave
add
shlb
xchg
getsec
in
add
cmp
fninit
aas
cltd
sbb
pop
sbb
test
jp
daa
pop
push
mov
pop
pop
xlat
into
test
cmp
pop
test
mov
call
xor
popf
in
cmc
pop
inc
in
mov
push
xchg
or
loope
subb
cmc
pop
cli
ficoml
mov
lahf
mov
mov
pop
pop
mov
pop
mov
cmp
xor
dec
mov
repnz
out
sbb
enter
lock
scas
bound
pop
lret
insb
dec
adc
ss
loopne
lods
aad
xor
das
mov
rcll
fs
std
repnz
xor
inc
xchg
pop
fcoml
jno
aad
add
clc
jle
xor
adcb
or
sbb
add
xchg
or
xor
jne
cld
xor
adc
push
mov
jge
cmc
mov
and
xchg
test
mov
andb
or
ljmp
jnp
push
inc
mov
push
in
xorps
mov
je
mov
pop
xlat
jecxz
jl
movl
mov
decl
sbb
xchg
cmpsl
ret
sbb
push
daa
mov
pop
sbb
or
dec
or
mov
add
adc
stos
jle
shrb
sub
sbb
and
add
jmp
adc
rclb
sbb
ficomps
xchg
scas
loopne
and
jl
dec
sub
xchg
sbb
jb
xor
fisttpll
scas
idivb
jnp
cmp
or
inc
or
dec
inc
in
cmc
xor
mov
insl
std
imul
int
mov
mov
inc
jle
addl
popf
je
mov
mov
cmp
cld
fidivs
daa
lock
rcll
incb
jp
sbb
adc
jmp
xchg
adc
inc
leave
ss
outsl
and
cmp
rcll
inc
fisttps
ja
inc
sub
lea
lcall
scas
adcb
es
mov
rcrl
mov
bound
add
and
aas
ret
jne
push
jg
add
les
icebp
sbbl
xchg
xor
mov
push
ret
jle
xor
sub
mov
dec
push
xor
mov
das
je
es
and
sub
roll
arpl
dec
push
xchg
sub
cmpsb
arpl
adc
jae
pop
pop
mov
mov
fs
int3
push
cmp
les
frstor
shl
das
push
cwtl
fwait
stc
es
in
mov
fninit
jmp
pop
push
add
or
push
push
fisubl
loopne
jno
cmpsb
mov
cli
cmpsl
cmp
cmpsb
mov
jg
adc
sbb
inc
int3
jns
lahf
cmpsb
bound
sahf
filds
xchg
mov
fisubs
inc
cmp
lcall
repnz
and
or
popf
jns
dec
push
mov
mov
das
pop
or
push
and
scas
mov
das
dec
inc
fisttps
das
or
pop
loop
pusha
insl
sub
adc
scas
xchg
jne
into
notb
int
pushf
enter
in
inc
push
loope
loopne
lods
lods
jno
xchg
inc
jecxz
and
fwait
mov
and
js
pushf
imull
add
pop
adc
shr
shl
xchg
add
jo
gs
mov
sbb
pop
adc
popa
jns
inc
lahf
arpl
stc
pop
rcr
loope
js
loopne
out
jmp
mov
lods
xlat
and
js
dec
jge
in
or
ss
or
arpl
mov
fisubs
dec
fidivrs
mov
push
dec
lods
xlat
and
or
xor
das
jmp
pushf
outsb
daa
and
popa
sub
jg
mov
or
cmpsb
xchg
movsl
mov
aas
mov
test
mov
lahf
ss
mov
jg
fbstp
jnp
jge
push
pop
stc
cmp
pop
adc
das
xchg
mov
inc
jmp
xor
sbb
push
xchg
ds
xchg
in
out
lods
xchg
push
notb
aaa
out
mov
push
rorl
addl
jns
mov
and
testb
pop
push
jbe
xchg
out
popa
jmp
inc
fidivrs
xchg
cmp
shl
push
xchg
fisttpl
cli
cld
cmpsb
adc
aas
pop
daa
mov
mov
push
xor
inc
add
repnz
ret
repz
cmp
cmp
xchg
loop
shlb
push
mov
pop
cmc
call
aad
and
sbb
fimull
wrmsr
inc
cs
mov
jmp
into
sbb
sub
sub
xchg
and
xor
inc
fnstsw
and
sbb
mov
add
pop
push
push
scas
push
out
lret
adc
sbb
inc
mov
pushf
sti
test
and
xchg
daa
mov
aas
fwait
xchg
jne
dec
mov
push
xchg
adc
push
mov
imul
mov
je
loope
sub
cltd
stc
mov
inc
rcr
push
repnz
aas
fistpl
push
cwtl
pop
into
sarb
cmp
jns
mov
ds
cmp
and
xor
sub
int3
push
cli
dec
adc
popf
xchg
fisubs
cwtl
push
push
cmp
pusha
pop
cmp
and
fstl
nop
shlb
sub
mov
cld
js
jp
roll
inc
and
stc
outsl
lods
es
mov
add
sbb
xchg
add
mov
mov
adc
test
fmulp
rorl
fiaddl
push
sahf
dec
pushl
lods
mov
imul
enter
push
je
jns
flds
fnstsw
or
xchg
test
lea
jne
movsl
in
cmp
mov
cmpsl
orb
mov
jl
pop
or
jae
outsb
fs
xchg
sub
or
pop
scas
pop
call
insl
addr16
ljmp
test
mov
sti
js
lea
insl
sub
mov
mov
inc
ret
push
dec
mov
adc
ffreep
cmp
adcb
lds
scas
iret
lock
data16
or
xlat
or
lea
dec
lret
sub
cmp
imul
adc
rclb
test
xchg
jecxz
mov
repz
xchg
sub
loope
les
pop
mov
cli
loopne
mov
inc
mov
repnz
lds
aaa
outsb
gs
jmp
jo
mov
xchg
pusha
add
lods
xchg
movsl
cwtl
sub
mov
cmp
push
inc
mov
mov
jbe
cmp
mov
inc
aam
stos
inc
imul
or
cmp
push
sub
loope
pushf
cmp
mov
test
pop
lods
sub
test
scas
xchg
std
stos
cmc
addb
lcall
adc
xchg
pop
ljmp
ds
xchg
leave
outsl
shll
pop
cld
push
inc
xchg
push
xor
mov
or
mov
or
mov
scas
lret
das
ret
push
loop
pop
inc
lock
dec
sbbb
aam
and
inc
ret
pushf
or
and
mov
in
mulb
sub
mov
push
mov
imul
xlat
sbb
mov
and
outsb
push
imul
sarl
push
dec
cwtl
mov
jl
or
mov
adc
pusha
lcall
cmp
fsubrs
or
popa
inc
insb
xchg
test
adc
push
xchg
xchg
sahf
movsl
mov
aad
mov
push
inc
mov
mov
and
andl
sub
sbb
sahf
aas
inc
add
scas
fcompl
cmp
dec
loop
mov
or
cmc
stos
or
cmc
aad
dec
xchg
stos
das
mov
fstpl
cmp
movsb
scas
pop
repnz
push
int3
lret
testl
xor
inc
push
inc
mov
lahf
inc
or
xor
and
cld
and
in
ss
dec
jg
xchg
into
jb
inc
ds
sahf
mov
sbb
out
jbe
pusha
cmp
sahf
out
sub
iret
neg
movl
stc
push
in
pop
xor
sbb
shrb
lock
mov
data16
mov
xor
inc
jne
cmp
mov
aaa
jb
pop
push
inc
dec
mov
dec
mov
add
movsl
or
and
iret
mov
cmp
aad
fisttpll
mov
add
rorb
dec
movsb
or
js
xor
jae
sub
testl
aaa
rcrb
dec
lea
loope
outsl
stos
dec
xchg
lret
repnz
add
ljmp
mov
test
call
test
test
xchg
mov
adc
adc
mov
int
pop
sub
sbb
mov
mov
daa
jns
pop
popf
in
fcmovu
or
cmc
mov
cwtl
push
shrb
into
sub
out
fadd
shll
fistps
inc
or
cmp
fiadds
jg
xchg
pushf
push
fcmovb
mov
sarl
sbb
cmc
stos
sub
add
mov
daa
mov
cltd
pop
mov
ret
je
jmp
das
push
jne
data16
adc
dec
or
cld
push
es
fdivl
add
cmpsl
push
push
sub
push
jbe
loopne
or
lods
cmp
jecxz
adc
and
lea
mov
jnp
ja
cmpsl
inc
insl
repnz
aaa
adc
add
loope
adc
or
mov
push
cltd
cltd
mov
dec
dec
xor
and
xchg
int3
xchg
sbb
in
mov
pop
lods
cmp
fwait
scas
and
nop
sub
es
insb
adc
das
loopne
pop
aad
imul
loopne
imul
and
int3
push
ror
jns
jnp
mov
push
les
mov
lods
cmpl
jb
mov
mov
sub
jecxz
test
and
and
sbb
inc
insb
shrl
pusha
test
enter
xchg
lret
mov
lods
ror
shll
ds
mov
mov
orl
sub
pop
pop
testb
sub
xor
test
hlt
stc
mov
mov
ret
jge
mov
mov
sbb
push
ret
add
push
pop
inc
shrb
shll
adc
mov
dec
les
mov
aaa
jp
xorb
sahf
repnz
stos
mov
test
inc
xchg
lret
and
sahf
sbbb
lret
mov
insl
repnz
jno
inc
sbb
out
jns
test
cmp
xorb
mov
sti
cmpsb
mov
mov
push
rcll
call
pusha
stos
add
cs
inc
push
xor
xchg
subl
negl
fists
lahf
divb
adc
repz
mov
in
mov
scas
inc
imul
pop
push
aad
push
jo
incb
inc
mov
xchg
ss
xor
out
xchg
pop
sub
jae
outsl
push
iret
cmp
jmp
rcll
push
push
jl
mov
adc
jnp
fimull
mov
jle
cmc
jmp
cmp
scas
inc
in
je
out
mov
cli
nop
mov
aaa
or
xchg
xor
out
dec
cmc
incl
pushf
lock
std
inc
or
cmpsl
popf
dec
mov
insl
fdiv
add
push
cmp
rcrb
push
cmp
jmp
fistl
sbb
cli
push
sub
sbb
inc
jl
adc
and
lock
addr16
add
das
or
jmp
push
xlat
or
out
push
nop
xchg
cli
in
add
jecxz
xchg
aas
into
ljmp
cmp
push
loopne
cmp
sqrtps
out
or
mov
jmp
ss
je
xchg
cmpl
stos
push
insb
mov
dec
nop
inc
sbb
into
ret
shr
mov
dec
sbb
fmull
mov
add
lahf
lcall
dec
icebp
push
pop
and
sbb
out
test
xchg
sbb
sti
call
jne
mov
hlt
pop
xchg
scas
sbb
sub
sbb
out
dec
shrl
sbb
adc
outsl
packssdw
xchg
or
pop
inc
in
dec
mov
ljmp
mov
jns
mov
sub
cmp
in
ja
cmp
or
cmp
cmp
jnp
dec
jmp
daa
push
inc
or
or
and
popl
mov
popa
jae
inc
in
ds
push
push
addr16
idivb
xor
add
adc
fucom
shl
mov
pop
jge
sub
pop
ja
sbb
repz
lahf
cld
sub
dec
ret
push
pop
add
pop
repnz
and
shll
adc
push
mov
push
aad
pop
adc
es
inc
fnstsw
jo
push
fsubl
sarl
popa
pop
xor
pop
fs
sub
xchg
or
mov
add
mov
xlat
xchg
in
aam
das
jmp
sti
push
lods
testb
adc
jae
leave
inc
xchg
sub
daa
fimull
leave
incb
dec
xor
mov
push
xchg
adc
xlat
xor
xor
cwtl
xchg
dec
jge
ret
sti
cmp
mov
dec
lds
jb
adc
lea
shlb
ret
cmp
sbb
cwtl
ret
xchg
loopne
sbb
ss
xchg
xchg
adc
fimull
nop
mov
cmp
add
rclb
cmpsl
cmp
dec
sub
lea
sbb
pop
icebp
jo
lahf
xor
cld
mov
addr16
or
pop
fs
dec
jo
fimuls
and
dec
xchg
push
lock
cmpsl
push
cmc
or
adc
mov
aad
jle
pop
repz
shrb
cwtl
hlt
add
loope
fistl
mov
sbbl
addr16
jne
mov
divl
lahf
out
pushl
test
mov
ljmp
inc
cmp
ret
js
fincstp
sti
push
jge
dec
std
add
sub
mov
subl
lods
pop
mov
sub
subl
cmc
test
inc
add
or
pop
xchg
aam
inc
enter
xchg
test
mov
sti
or
scas
mov
xchg
in
push
jnp
jle
not
cmpsb
pusha
cmpl
mov
movsb
sub
popf
jl
or
jle
outsb
pop
daa
in
sub
loope
inc
sbb
cmp
lods
mov
in
stos
repz
rolb
pushf
jle
enter
sub
into
mov
lret
add
pop
popf
xor
cs
mov
pusha
xchg
sti
xor
sbb
lret
pop
aas
jb
jae
pop
pop
pushf
test
and
add
rolb
out
jg
or
and
and
clc
mov
or
push
shrl
jg
aas
push
clc
pusha
jnp
add
push
jae
data16
clc
lea
adc
jg
jmp
jmp
lods
stc
xchg
stos
ror
sbb
je
pop
add
sub
movd
std
push
repz
xor
dec
mov
in
loop
lcall
adc
call
jp
mov
ljmp
xor
inc
xor
in
pop
sbb
mov
xchg
xchg
push
jle
gs
xchg
sbb
adc
xor
std
ret
inc
mov
push
jno
lahf
in
sbb
out
jecxz
outsb
lods
das
loop
aas
jl
popf
pop
es
and
test
cmp
aas
or
and
dec
les
stos
stc
insb
pop
in
jo
pop
das
adc
stc
ljmp
scas
shlb
inc
loop
insb
and
jbe
push
sub
sbb
adcb
iret
mov
loop
fdivrs
pop
pop
mov
mov
ret
cwtl
push
pusha
adc
scas
mov
pop
sub
cmp
insb
nop
lahf
aam
jle
adc
fstp
jp
push
or
jge
jge,pn
sti
mov
test
std
push
or
and
pop
rcll
add
mov
xchg
xor
int
add
iret
pop
aam
in
push
pop
xchg
out
lea
xchg
xor
jbe
pop
add
pop
ficomps
shrl
adc
pop
aam
or
into
or
sbb
getsec
xor
sub
js
faddp
inc
bound
or
ficoms
inc
cld
sub
cltd
fst
aam
sahf
cmc
jge
rcrb
sbbb
sbb
bound
adc
pusha
inc
in
add
gs
push
sbb
pop
insl
cmp
push
inc
cmpsl
sub
inc
inc
stos
mov
ret
pushaw
testb
mov
cmp
aas
xchg
sub
pop
sub
adc
dec
inc
aam
loopne
mov
stc
sbb
aaa
jbe
mov
add
out
jp
fwait
clc
push
push
in
movsl
push
and
push
dec
jne
fdivrl
add
and
mov
icebp
dec
jecxz
insb
pop
pusha
inc
sub
lret
cmp
in
loopne
sbb
sub
and
sbb
xchg
les
cltd
push
add
fnstsw
std
retw
movsb
aaa
dec
fs
pop
arpl
xchg
xchg
into
push
push
xchg
xor
mov
mov
jg
stos
lods
nop
cmc
pop
pushf
adc
mov
filds
mov
or
adc
mov
fdivrs
push
aas
jo
cld
adc
andnps
cmp
clc
or
fbstp
add
call
dec
xlat
int3
pop
pop
jne
ror
push
jbe
jnp
cltd
and
lret
push
add
push
repz
pop
loope
cld
test
mov
push
and
xchg
jns
subl
jecxz
xor
shr
int
daa
add
lds
dec
push
push
dec
movsl
and
cmp
mov
mov
sub
inc
jno
mov
or
jne
jmp
sti
sub
sub
pop
scas
daa
dec
xchg
mulb
mov
sti
xchg
push
outsb
push
out
dec
imul
daa
jecxz
xor
mov
test
les
in
cld
and
adc
insl
sub
popa
or
mov
lcall
shrb
and
push
out
push
push
ja
mov
mov
or
out
mov
fldcw
mov
xor
mov
in
push
pop
daa
mov
mul
fstp
ds
ljmp
out
popa
mov
ret
mov
sbb
inc
mov
sbb
jge
dec
mov
clc
les
pop
dec
icebp
fisubrs
arpl
jp
pop
xchg
jno
xchg
mov
lret
cmp
mov
push
loopne
outsw
je
cwtl
sbb
lods
push
out
in
inc
jo
loopne
jbe
fisubs
add
call
loope
mov
insl
pop
sub
mov
inc
add
xchg
lds
push
push
mov
inc
arpl
xchg
cmc
xor
lahf
fimull
imul
movsb
xchg
adc
imul
ss
cmp
aaa
add
cli
sahf
pop
push
pop
stc
fs
ss
lds
fsubs
sub
rcrb
mov
dec
pop
mov
jb
lret
or
inc
sub
sti
loopne
scas
jl
scas
add
scas
loop
cwtl
xor
mov
add
icebp
lea
in
mov
sub
xchg
test
test
push
add
out
fldt
ficoml
push
in
mov
xchg
or
je
lods
jo
hlt
je
pop
jmp
andb
lea
cmp
inc
iret
dec
push
popf
add
mov
ds
or
bound
dec
dec
adc
mov
cmp
pop
stos
outsb
lods
jne
mov
sub
sub
mov
inc
int
add
push
imul
repnz
adc
cmp
lds
out
mov
out
and
push
lock
jnp,pt
and
push
jg
push
movsl
mov
or
lods
cltd
sbb
clc
cmp
jmp
int3
adc
jmp
and
jg
xchg
jecxz
jecxz,pn
ja
xchg
pop
sub
pop
pusha
insl
pop
insb
scas
cwtl
push
arpl
mov
lret
sahf
inc
hlt
add
xor
jmp
dec
adc
out
into
mov
mov
imul
lock
dec
mov
push
and
cmp
xchg
xchg
mov
jle
mov
arpl
jle
xchg
inc
sbb
cmpsl
or
mull
sbb
dec
and
es
sbb
mov
int3
dec
cmp
push
ljmp
push
aas
or
popa
les
cld
orl
loope
pop
jecxz
mov
or
mov
push
lcall
js
sbb
stc
roll
jae
jo
test
pop
test
cmpsb
jne
bound
sbb
jle
adc
in
push
push
imul
pop
dec
stos
rcl
mov
or
clc
movsl
jnp
fdivrl
add
lahf
mov
xor
daa
stos
stc
bound
lret
or
pop
fbstp
adc
mov
or
and
mov
sub
push
xor
sti
mov
sub
jo
push
xor
scas
xchg
lcall
cwtl
xchg
jb
add
dec
roll
imul
aad
jge
or
sarl
jo
inc
mov
in
nop
ljmp
jbe
insl
or
or
scas
mulb
lahf
lods
cmp
fwait
cmp
jns
orl
insb
cmc
and
ja
cmpsb
cmp
in
jne
push
es
insb
cmp
gs
ljmp
sbb
hlt
inc
xchg
sbb
cmpsl
or
adc
sti
gs
repnz
xchg
aaa
cmp
mov
dec
repnz
call
into
mov
inc
stc
xor
mov
fs
imul
dec
pop
mov
enter
mov
cmp
push
push
jne
pop
push
mov
adc
and
shr
add
inc
stos
or
cs
cmpsl
cs
pop
push
add
push
stos
and
wrmsr
fisttpl
stc
aam
cmpsb
jle
inc
loope
push
lock
jne
jo
sub
mov
imul
hlt
xor
adc
repz
fsubr
mov
or
or
push
dec
xor
sbb
pop
orl
mov
cmp
test
adc
mov
jns
add
mov
dec
fsubr
sub
and
sbb
inc
inc
mov
xchg
mov
mov
mov
cmp
xor
mov
push
nop
or
dec
lock
subl
dec
xor
jb
into
dec
ja
int3
adc
ret
icebp
popa
jl
sbb
out
jle
hlt
arpl
jl
outsb
pop
cmp
adcl
insb
out
movl
in
and
aad
lret
into
pop
fidivs
call
inc
daa
dec
mov
scas
cwtl
mov
rcrl
xlat
push
test
jb
outsb
outsb
push
inc
push
inc
fistps
fbstp
add
outsl
mov
pop
mov
popa
sub
cmpsb
lods
dec
dec
nop
sub
fwait
jne
aad
lock
imul
cmp
outsb
adc
in
aad
xchg
xor
adcl
xchg
ja
rorb
addb
mov
cmpsl
ficomps
movsb
ret
div
in
mov
mov
mov
mov
test
dec
mov
mov
jne
aas
jp
or
jle
pop
loopne
sahf
movsb
or
xlat
sub
cmp
jne
gs
xorb
and
aas
add
cmp
and
scas
adc
xor
cmc
dec
push
pop
add
pop
lret
shrb
push
in
xchg
cltd
imul
jl
dec
das
bound
bound
push
mov
pushf
mov
out
inc
cli
stos
lock
cli
or
mov
ret
and
cmp
clc
shlb
push
mov
sahf
adc
outsb
dec
pop
or
adc
ret
test
loope
mov
mov
nop
pop
stos
fnstcw
shl
testb
jo
stos
pop
xor
or
adcl
sub
pop
mov
lods
cmp
xchg
ss
xchg
mov
jbe
xchg
sub
or
jae
into
ftst
jmp
mov
xor
dec
arpl
mov
jne
or
into
into
mov
sarb
jmp
xchg
pop
cmc
or
sbb
lds
cld
int
mov
inc
mov
divb
ljmp
ret
movsl
pushl
fldt
loop
adc
pop
iret
cmpsl
shll
dec
stc
add
push
cmp
push
clc
mov
xlat
inc
loopne
ret
sub
or
aaa
push
out
hlt
jg
mov
ss
dec
add
and
mov
loope
fcmovne
inc
mov
push
aaa
pop
mov
sub
xchg
repz
cld
es
add
dec
xor
mov
jp
cmp
arpl
jb
sbb
sbb
mov
sub
repz
movsb
addb
ret
jmp
xchg
and
pushf
cmp
cmpsb
insb
stc
dec
push
roll
pushf
or
loop
inc
out
mov
shrb
jl
mov
xchg
jb
pop
xchg
int3
jge
mov
sbb
pop
popf
add
inc
pop
leave
xchg
mov
das
xorb
jle
cmp
outsb
or
je
mov
add
dec
xor
addr16
test
pop
pop
enter
fidivrl
add
sub
fwait
and
jecxz
ds
lcall
pop
movsb
push
popf
push
stos
jmp
fidivrl
js
sbbl
mov
mov
rep
adc
mov
rorb
movsb
or
fldenv
daa
loope
je
xchg
sbb
ret
mov
test
cmovle
std
sbb
aam
mov
cmp
les
aad
mov
push
test
push
movsl
insb
scas
xchg
arpl
xor
movsl
stos
sti
lds
out
jmp
aas
mov
loop
lea
loop
dec
out
mov
jmp
imul
outsb
xchg
xchg
mov
icebp
xchg
movsb
orb
or
test
sbb
bound
int3
iret
xchg
jno
bound
loope
adcl
jl
fs
sub
cltd
aad
adc
push
stos
push
ja
jl
imul
jne
rcrb
das
pusha
dec
repz
test
xlat
xchg
sbb
shrl
cmp
jp
cld
jl
jno
mov
xor
xor
mov
inc
pop
aad
mov
xor
push
outsl
pop
sub
sub
pusha
cwtl
or
pop
inc
in
sbb
ja
xchg
cmp
lds
or
or
and
jne
mov
pop
insl
rcr
cmp
adc
clc
mov
loop
inc
std
jp
repnz
das
mov
fs
clc
shrl
ret
adc
dec
lods
std
lret
cltd
cwtl
mov
ftst
xchg
or
pushl
int
fisubrl
mov
jmp
inc
aam
pop
xchg
mov
loope
out
mov
or
call
or
mov
aas
out
sbb
add
mov
push
aam
cli
sbbb
cmc
push
sbb
sbb
jp
clc
mov
mov
and
mov
inc
jg
nop
mov
or
inc
into
push
in
mov
jo
cltd
daa
call
movsb
xchg
fsubrs
imul
stc
sbb
and
pop
mov
add
xchg
mov
xchg
inc
cld
lret
ljmp
popf
xchg
fstpl
pop
je
sub
cmp
insl
cli
rolb
adc
std
inc
rclb
mov
pop
ss
xrelease
ret
inc
into
pop
aad
test
lret
dec
notl
sbb
mov
in
and
cmp
mov
sub
cmp
shll
xchg
sbb
fs
test
mov
in
les
and
icebp
stos
ret
jmp
pop
pop
jmp
loop
adcl
jae
jno
aam
fwait
insl
xor
outsl
inc
fcmovbe
pop
xor
lds
cs
dec
loopne
pop
ss
fimuls
xchg
add
sub
mov
arpl
test
call
push
pop
jmp
lret
movsb
pop
and
bnd
cltd
sbb
push
xor
cmovbe
adc
andl
add
dec
sbb
xor
push
push
out
outsb
and
sti
outsb
test
push
out
jg
pop
fwait
pop
sub
sbb
ljmp
ds
push
pushf
push
push
addr16
mov
or
jge
sub
lahf
mov
shrl
int
xchg
sbb
sub
mov
pushf
and
jne
inc
xor
or
je
mov
inc
cmp
cmpsb
insb
repz
ds
js
adc
gs
adc
sbb
push
and
sub
pop
rcll
flds
xor
sahf
mov
mov
xchg
xor
inc
xchg
adc
dec
mov
jae
jp
lock
pop
xor
sbb
aam
insl
loopne
iret
inc
mov
cmp
enter
mov
lret
jnp
inc
mov
xor
aam
in
lcall
or
mov
jno
jle
push
pop
pop
dec
xor
es
jae
xchg
aas
out
xchg
shlb
aam
dec
mov
out
enter
negl
cmpsl
loop
mov
mov
fdivrl
sbb
faddl
or
mov
sbb
mov
fisubrl
clc
mov
data16
mov
loope
aam
push
cmp
adc
add
out
sub
out
fdivrs
push
xchg
cmpsb
sub
loop
cmp
insb
iret
or
adc
stc
outsl
lret
and
xchg
pop
aas
xor
jno
arpl
xor
cmp
loope
lahf
daa
jl
xchg
mov
popa
lea
xchg
mov
jecxz
xchg
fdivs
jmp
add
xchg
adc
mov
mov
leave
mov
imul
lods
or
cmc
cltd
pop
mov
inc
je
in
sub
or
or
sahf
or
stc
clc
inc
aas
inc
dec
fimull
xor
dec
movsl
ja
sub
add
jl
pop
cmpsb
mov
sbbl
lds
lret
inc
mov
mov
or
sbb
ja
mov
or
push
out
push
xchg
add
and
mov
xor
mov
addr16
in
fistps
push
icebp
int
rcl
les
cltd
push
dec
jge
xchg
js
pusha
movsl
lods
jg
pop
cmp
cmp
seta
ret
shlb
sub
loopne
aam
pop
sub
pop
jno
or
movsb
movl
pop
jmp
das
cmpsl
sub
lock
insl
mov
negl
in
lods
xor
xor
mov
push
sbbl
inc
add
push
cmp
jge
popf
cld
pop
ret
mov
cmp
inc
cs
xchg
sub
sbb
imul
mov
int3
daa
aas
push
lock
push
rep
test
sub
dec
jle
sahf
adc
add
inc
shrl
ljmp
xchg
fldl
mov
jbe
mov
lds
mov
adcb
xor
push
xor
push
pop
lds
icebp
scas
fsubrl
movsb
xor
pusha
mul
imul
or
scas
pop
aad
sub
pop
or
int3
int3
mov
idiv
add
fnsave
in
idivb
sbb
cld
or
sub
xchg
lods
js
fbld
jge
cmpsl
inc
pusha
loop
sbb
cmp
jo
push
into
push
popw
cmp
mov
dec
cld
pop
dec
sarl
inc
lret
adc
xor
xor
or
imul
and
inc
mov
pop
popl
dec
adc
mov
push
sbbb
xchg
inc
sub
sub
out
filds
jmp
add
test
jo
cmp
xor
jp
daa
jb
inc
and
mov
out
ljmp
or
nop
xlat
stos
and
jo
sub
push
xchg
inc
out
dec
adc
leave
int
jnp
mov
jmp
mov
imul
repnz
fisttpll
leave
mov
outsl
dec
test
mov
inc
bound
lds
pop
jl
psllw
fsubrl
or
imul
push
sbb
dec
jg
test
enter
daa
imul
xor
lea
ficoml
and
mov
xchg
mov
add
mov
push
jnp
mov
cmp
sub
jns
movntq
or
sub
pop
push
xor
or
push
roll
lock
cmc
push
cli
mov
cli
push
xchg
mov
cwtl
mov
and
mov
xchg
pop
sub
addr16
push
inc
sbb
adc
sub
cmp
dec
jle
addr16
sbb
cmp
lret
inc
icebp
dec
ds
ja
mov
mov
and
data16
ret
sarl
movsb
xor
pushl
test
cld
cmp
repz
popf
aas
or
push
lods
xor
call
push
lds
push
clc
scas
push
mov
cs
dec
and
scas
ljmp
xor
into
data16
dec
and
sahf
fidivs
sbb
pop
movsb
sub
add
movsb
jbe
dec
lahf
push
mov
sub
dec
fmul
cmpsl
push
or
cld
pushf
dec
addr16
push
pop
mov
cmp
repz
imull
iret
lds
jne
jl
cmp
mov
lock
adc
sbb
test
sbb
iret
ja
inc
sti
in
or
es
subl
cmp
stos
jle
cwtl
sbb
inc
lods
dec
jl
xchg
push
add
js
xor
bound
lea
pop
jmp
shll
mov
stc
cld
ss
and
push
xorb
sub
data16
aam
shr
loope
cs
cld
cld
ss
clc
add
jo
lcall
sub
hlt
cmp
xchg
and
jae
stos
cli
fistpl
mov
sbb
add
int
or
inc
jge
adc
loop
nop
xchg
dec
jecxz
cmp
fldl
mov
rcrl
repnz
xor
dec
out
sbb
sbbl
lret
iret
sahf
pop
ss
mov
imul
mov
inc
sysret
mov
mov
in
sbb
cmovno
mov
mov
fsubrl
cli
pop
popf
outsb
sti
in
test
aam
mov
mov
test
mov
rorl
sbb
iret
inc
push
push
xchg
xor
inc
and
mov
jp
shl
dec
adc
in
outsl
ret
ss
mov
repnz
push
call
das
fidivl
mov
push
pop
push
jne
out
sbb
push
imul
out
mov
sahf
pop
xchg
movsl
pop
aaa
imul
mov
cli
dec
push
jl
cmp
and
add
mov
jmp
out
xor
xchg
mov
ds
sbb
dec
roll
lods
icebp
sbb
fildl
sahf
ds
call
sti
dec
cltd
fs
push
mov
xchg
xor
push
push
lcall
fsubs
push
shlb
int3
and
pop
enter
jge
cli
dec
in
js
clc
pop
inc
stos
icebp
jecxz
cmc
mov
lea
subb
aad
inc
sbb
add
or
mov
pop
xchg
gs
push
dec
lods
adc
inc
push
pop
fidivrs
sub
mov
mov
jecxz
js
shl
in
inc
pushf
dec
xor
dec
xor
push
rol
push
call
ror
fucomip
inc
mov
addl
or
andb
mov
out
xor
rorb
mov
arpl
pop
aad
js
mov
popa
ret
dec
xchg
je,pn
sub
cld
lcall
dec
pop
mov
imull
leave
dec
lahf
push
cmp
out
cmp
out
test
push
jge
cmp
lods
xchg
inc
leave
cli
leave
push
xchg
xchg
xor
dec
mov
dec
lahf
dec
sti
xchg
lcall
aaa
mov
mov
lret
mov
add
mov
mov
popf
mov
xchg
aad
cmp
in
daa
or
mov
aaa
mov
and
sub
adc
add
dec
mov
xchg
xor
pop
pushf
sahf
xchg
lret
fisubl
jp
arpl
mov
pushf
jge
loope
push
xor
jp
xor
arpl
lock
xchg
leave
push
cmova
cmp
sub
xchg
imul
daa
mov
sub
out
or
adc
ljmp
int
stos
adc
sub
icebp
mov
xor
xor
test
mov
imul
cmpsb
gs
cltd
xor
xor
mov
fistpll
jecxz
pop
movsl
daa
icebp
xchg
xchg
cmp
leave
push
roll
mov
or
mov
cwtl
xchg
mov
dec
jnp
aas
pushf
mov
jne
sbb
lods
mov
pushf
icebp
jecxz
in
sahf
pop
cld
sar
loopne
decb
outsl
xor
std
aam
in
inc
lahf
mov
div
mov
pushf
lret
mov
icebp
mov
cmp
into
cwtl
scas
sub
repz
popf
cltd
out
jg
es
mov
xchg
adc
push
sbb
sub
stos
test
pusha
adc
ljmp
ret
push
lret
std
jns
adc
fdivs
xchg
push
repz
pop
out
shl
in
stos
ljmp
ds
aaa
mov
jno
pop
rorb
xchg
pushf
push
pop
leave
add
xor
push
fsubrs
aas
adc
addl
sahf
mov
mov
arpl
or
sbb
test
mov
mov
add
jmp
mov
xor
fiaddl
lahf
popf
xchg
in
aad
adc
sub
loop
adc
dec
nop
sbb
jp
push
or
in
push
rorl
insl
out
jno
xorl
insb
jbe
jecxz
scas
xchg
imul
arpl
jns
rcr
sub
xchg
xchg
pop
dec
dec
cmp
or
sbb
push
sbb
dec
cmp
pop
push
xchg
xchg
fs
fsubl
pusha
adc
rcr
insl
addr16
lahf
xchg
add
xor
clc
push
test
mov
out
push
loopne
mul
pop
dec
pop
or
dec
jmp
cld
add
clc
mov
adc
iret
adc
adcl
dec
mov
pop
imul
into
in
fsubl
push
pop
inc
jo
pop
pop
mov
cs
mov
jnp
cli
add
or
fistps
cmpsb
stos
lret
xchg
pushf
rcl
cmp
push
loop
insl
dec
inc
aas
stc
stos
sub
pop
cwtl
or
push
fistps
mov
push
mov
movsb
shlb
fnstsw
adc
cmp
ficoml
sbb
jo
mov
dec
pushf
mov
push
sti
mov
jmp
cmpsl
das
inc
push
xchg
adcb
adc
xor
out
xchg
jg
mov
stos
sti
repnz
and
out
scas
ds
xchg
add
push
xchg
xchg
test
int
bound
xor
xchg
sarl
orb
push
mov
in
mov
xorl
imul
inc
add
pop
or
testl
outsl
xlat
sahf
mov
sbb
daa
lret
std
sahf
xor
pop
xor
bound
stos
add
mov
inc
inc
adc
xorl
pop
hlt
adc
push
pushf
cmp
or
outsl
xchg
shlb
mov
ror
or
fstl
int
cmp
dec
mov
push
popf
dec
xchg
addb
xchg
jle
cmp
jb
mov
popa
hlt
xor
mov
pusha
push
ret
test
and
negb
push
xchg
fdivr
sahf
inc
das
ljmp
scas
cmpsb
and
faddl
int3
mov
lea
cmpsb
mov
imul
add
adc
adc
xchg
inc
stos
cmpb
push
cmp
sbb
ret
mov
pop
call
push
and
dec
jecxz
pop
adc
hlt
add
fs
daa
mov
lds
shrb
and
in
mov
jae
insl
ret
push
int3
imul
fstl
jae
adc
push
dec
repz
popf
jnp
bound
jbe
fdivrl
outsb
aas
sbbl
or
sbb
mov
ljmp
and
test
fcomps
into
shlb
iret
cmpsb
test
notb
int3
sbb
or
call
xor
or
jbe
xor
bound
inc
pushf
iret
or
jmp
mov
in
pop
pop
rclb
inc
sub
mov
add
adc
and
mov
and
test
xchg
add
movsb
xor
push
aas
sub
add
mov
mov
lahf
hlt
aaa
lods
out
xor
fbstp
pop
add
clc
loopne
xor
pusha
sub
xor
and
and
mov
mov
rclb
jae
xchg
add
push
cwtl
xor
inc
cmp
sbbb
leave
repnz
lods
lret
jg
pop
cld
add
xchg
ds
pushf
aas
or
push
inc
shrl
inc
insb
xor
ds
push
rolb
inc
testb
mov
iret
jns
das
jl
lea
leave
mull
inc
and
push
out
outsb
cltd
lods
inc
mov
push
fisttpl
pop
ds
cmpsb
imul
xor
mov
iret
mov
mov
xor
inc
ds
fwait
into
xor
dec
shrl
sahf
add
inc
rcrb
test
es
mov
in
in
and
and
and
cli
in
test
xchg
add
outsl
loope
rcl
push
and
or
in
adc
das
mov
xchg
xor
mov
jb
dec
xchg
nop
cltd
xor
pop
cmpsl
cmp
mov
cmp
ret
pop
pop
jbe
xchg
mov
xchg
adc
std
inc
and
lock
sub
add
addr16
lods
leave
mulb
loop
dec
inc
inc
or
ret
inc
testb
iret
xor
gs
and
aaa
inc
sbb
pop
mov
out
leave
shl
xor
jno
add
aaa
test
hlt
int3
pop
cmpsb
clc
lea
add
and
aaa
out
out
pushf
test
out
mov
or
cmovno
cmp
das
cmc
int3
fnstsw
jmp
popf
cld
fs
xor
push
sbb
in
cli
sub
xlat
andb
cltd
inc
jle
xlat
inc
ds
cltd
into
movsb
scas
dec
ret
bnd
xor
xor
mov
mov
mov
lret
jl
dec
mov
test
mov
pusha
mov
lods
ret
bound
cmpsl
std
lock
xor
push
mov
insb
out
sub
dec
and
cli
mov
mov
pop
dec
dec
dec
pop
cltd
jo
lds
cli
bndldx
xor
add
mov
dec
jp
rolb
fwait
popl
add
clc
jl
addr16
adc
repnz
jge
mov
es
push
daa
add
ss
jns
sti
loopne
cmp
cmp
in
stos
pop
inc
out
push
lods
adc
gs
fistpll
mov
repz
es
push
sahf
jae
pop
pusha
xchg
adc
cmpsb
bound
sbb
push
mov
xor
jg
or
cmp
jns
or
pop
shrb
xchg
dec
push
inc
sti
stos
dec
out
stos
xchg
or
jle
daa
sbb
negb
mov
enter
fiaddl
dec
loop
dec
adc
mov
loop
inc
xor
push
adc
insb
and
xor
cmc
xchg
in
call
insl
adc
cli
mov
sahf
int
mov
mov
loop
bound
pop
hlt
sti
push
loop
outsb
lods
mov
lea
popa
push
mov
and
cmp
lcall
adc
mov
lret
loope
mov
mov
mov
stos
test
and
jp
icebp
push
imul
mov
hlt
cmp
pop
jecxz
sub
mov
inc
or
inc
cmp
and
repnz
call
xor
mov
dec
xor
es
sarl
cmpsl
mov
sub
ljmp
in
mov
jge
push
lcall
add
call
daa
cmp
hlt
xchg
daa
aaa
and
sub
cmc
jge
rcr
inc
mov
imul
jge
xchg
pop
pop
add
rcrl
out
or
mov
or
lods
or
or
inc
or
ret
jne
mov
ror
xorb
mov
sbb
xchg
imul
xchg
mov
pop
out
xor
or
out
test
inc
xor
add
push
loope
or
arpl
sub
bound
fdivrl
stc
aad
xor
fwait
push
and
lret
daa
xchg
push
lods
hlt
and
cmpsl
xor
mov
add
jbe
sbb
inc
insb
sti
movsb
sbb
aam
loop
das
add
daa
arpl
addr16
call
mov
sbb
dec
insl
repnz
fiaddl
sahf
leave
std
push
pop
inc
clc
bound
xchg
dec
lods
push
fstpt
jae
mov
outsb
xor
fcomip
in
pop
dec
lea
cld
in
jge
adc
lcall
xor
and
pop
lea
loope
lahf
sbb
push
movsl
mov
sti
jp
mov
movsb
pop
movb
jno
mov
ror
inc
hlt
and
push
dec
cmp
add
lcall
pop
cmc
lods
popf
repnz
dec
cmpsl
adc
mov
es
clc
jl
push
sbb
shll
daa
mov
mov
ss
das
int3
nop
dec
mov
repnz
xor
cmp
sub
mov
lret
push
outsb
ljmp
xchg
stc
es
aaa
arpl
jbe
ja
xor
out
cmp
add
sbb
mov
and
scas
ds
sub
mov
add
sub
push
jmp
cmpsb
pop
dec
sbb
ja
push
sahf
cwtl
adc
fbstp
jnp
mov
aad
out
push
popa
push
pop
aad
mov
pop
stos
addr16
in
in
xchg
arpl
xchg
test
repz
lds
mov
or
cmp
lods
test
enter
mov
xor
cli
ret
push
nop
es
ret
fsub
nop
js
in
inc
mov
mov
icebp
mov
push
sbb
popl
test
add
push
shll
cmp
xchg
hlt
cs
jle
pop
cmp
repnz
xlat
mov
xchg
xchg
cwtl
outsl
gs
shlb
mov
sub
jns
lret
adc
adc
test
enter
inc
popf
test
mov
pop
sahf
sbb
ret
insb
push
push
inc
aam
push
cmc
lret
scas
das
rcr
cltd
pop
jne
pop
mov
aas
or
sub
imul
sbb
xchg
ffree
push
add
push
pop
mov
mov
repnz
mov
loop
scas
sahf
jne
push
lea
imul
aas
outsl
scas
pop
lods
vcomiss
shll
push
push
in
scas
sarl
cld
into
test
inc
jns
jecxz
mov
mov
hlt
ret
sti
sub
inc
xchg
jbe
dec
movsl
sub
sbb
jb
pop
stos
and
ret
mov
jl
or
shl
mov
es
inc
test
sub
ljmp
push
ret
stos
cmp
imul
push
push
add
jbe
mov
fistl
jecxz
inc
sub
aaa
xchg
movsb
xchg
or
inc
lret
aad
fidivrl
push
leave
fiaddl
test
cmpsb
sub
cmp
push
roll
sbb
xchg
jg
test
xchg
psrld
cmpsl
pop
sahf
mov
iret
push
ja
and
jp
cli
mov
cltd
popf
pop
lods
ss
in
cmpsl
push
pop
jb
mov
jle
mov
mov
or
sbb
adc
dec
fnstcw
popa
addr16
cmpsb
mov
push
and
repnz
and
lods
js
mov
cltd
or
push
lret
js
add
adc
sbb
call
in
movsl
clc
or
sbb
pop
fisubl
cmp
mov
fiadds
movsl
and
mov
sub
xchg
sbb
sti
aaa
xchg
icebp
mov
mov
mov
sbb
mov
fdivl
stos
adc
push
fwait
das
mov
out
inc
and
push
jl
aas
push
pop
sahf
push
push
xchg
daa
mov
lret
lret
xchg
es
cmp
cmp
in
fldt
mulb
dec
xor
bound
and
dec
das
shlb
jmp
push
movsb
outsb
adc
movsb
clc
movb
lret
xor
pop
cwtl
inc
ljmp
cmp
loop
scas
or
cli
sub
mov
inc
and
cld
imul
loopne
je
xchg
adc
bound
iret
adc
and
lcall
mov
push
in
sbb
stc
xor
add
push
nop
mov
aas
in
push
shll
cli
mov
xchg
adc
andl
movsb
add
xor
out
test
xlat
dec
jg
fdivrs
cmc
or
js
movsb
cmpsb
mov
ret
inc
loopne
imul
dec
rclb
mov
inc
loopne
jns
sbb
push
int
clc
ret
mov
lock
or
int3
mov
sahf
stc
fs
jae
jl
adcb
test
mov
movsb
mov
rcll
addl
stc
rcll
push
adc
jb
sbbb
adc
dec
add
aad
lret
sub
test
push
add
stos
in
push
addl
enter
jae
push
repz
subb
adcb
and
pop
xchg
mov
pop
add
adc
jmp
fwait
jno
mov
mov
xchg
inc
cwtl
mov
or
shlb
fbstp
pop
pop
mov
xchg
xchg
cli
push
addr16
in
loop
fld
popf
sub
inc
sub
xchg
outsl
fcmovne
adc
xlat
fwait
jbe
inc
cld
sahf
add
lea
imul
dec
dec
sub
ds
fisubrs
sbb
cwtl
dec
inc
andb
lret
push
ljmp
add
outsb
in
rorl
or
movsb
inc
adc
push
fbld
or
mov
dec
aas
xor
fisubrs
out
lret
lret
cmp
jae
and
rcrb
or
mov
cmpsl
xor
aam
adc
and
int
xor
lcall
sbb
jle
xor
int
jns
xor
xor
fdivrl
mov
mov
lcall
and
nop
stos
mov
cmp
mov
push
and
pop
add
js
cmpsl
nop
pushf
mov
stos
cld
adcb
mov
nop
and
xchg
or
push
fdivrs
mov
dec
rcl
call
mov
mov
adc
or
xchg
sbb
cmp
xor
mov
mov
push
icebp
xchg
pushf
pop
hlt
hlt
mov
in
push
xor
push
push
jb
lock
push
shll
xor
rclb
lret
pop
sub
pop
adc
jo
dec
push
lock
pop
mov
rorl
in
call
mov
xor
dec
xor
addr16
mov
mov
sbb
arpl
jle
sarb
data16
das
pop
cs
ffreep
pop
or
shll
sub
or
in
test
push
push
daa
cmp
popa
lret
mov
and
lods
xchg
adc
add
cmc
mov
xchg
js
ds
fxtract
mull
inc
adc
sub
mov
jbe
stos
call
jp
outsb
dec
mov
xchg
and
dec
sub
dec
mov
add
mov
sbb
sti
shl
pop
mov
inc
push
and
fstl
repz
mov
insb
xchg
hlt
xchg
mov
jl
clc
ljmp
inc
jns
dec
por
push
xlat
lea
inc
test
mov
xchg
in
and
mov
sub
out
push
imul
or
in
cs
and
sarb
xlat
or
dec
adc
cs
popa
dec
cwtl
or
pop
testb
and
fcmovnb
mov
scas
stos
fsubrs
push
add
xor
es
mov
adc
inc
sub
mov
in
jb
adc
mov
fcomps
or
add
lea
or
into
scas
dec
and
cmp
mov
mov
lds
xchg
shll
jno
adc
mov
cs
invd
stos
xchg
xchg
xor
lods
inc
into
arpl
push
cld
js
loope
fs
dec
mov
mov
fs
dec
imul
leave
dec
leave
inc
dec
repz
jno
cmpsl
clc
and
daa
sbb
xchg
testb
sbb
adc
add
loope
xchg
sub
push
mov
aaa
cwtl
lcall
adc
mov
or
lret
int3
dec
inc
and
stc
outsb
pusha
sub
dec
sub
sbb
or
out
pop
sti
sub
je
popf
adc
pop
xchg
xlat
rol
lock
sbb
push
popa
lods
mov
mov
rol
insl
imul
sbb
data16
scas
mov
sbb
pusha
and
shld
pop
gs
cmpsl
pop
inc
pop
xchg
xchg
push
mov
and
rorb
aam
push
jbe
inc
sub
sti
clc
dec
lret
cmp
sub
lahf
insb
cmp
sarl
xor
jnp
sub
je
mov
hlt
out
fdiv
lret
xor
adc
dec
sahf
std
push
xchg
push
out
leave
jo
jmp
and
jbe
xor
rolb
cmp
push
pusha
inc
cmp
jns
fstpt
adc
pushf
xchg
jbe
cwtl
outsb
sub
in
mov
cmp
mov
movsl
push
outsl
sbb
fisttpl
je
adc
js
test
sub
mov
stos
pusha
xchg
fcmovb
test
ss
clc
pop
sub
push
cmp
dec
out
outsl
dec
push
inc
cltd
jl,pn
scas
ret
ret
jnp
lret
and
clc
ds
push
inc
orb
add
push
lea
xchg
push
jns
aad
hlt
out
lea
sbb
mov
add
lret
ret
sbb
lcall
gs
outsl
sbbb
mov
push
in
popf
out
sbb
mov
and
scas
or
lahf
xor
mov
repz
enter
mov
jmp
inc
out
sbb
lods
cmp
dec
mulb
xchg
push
popf
mov
mov
jg
mov
cmpsl
insl
push
icebp
jp
cmpsl
xchg
enter
daa
and
into
push
cmp
xlat
jbe
movsl
pop
pop
xchg
cmp
xor
xor
jp
xchg
add
dec
mov
pop
mov
jnp
arpl
fisubrs
shll
inc
sti
push
int
mov
test
lahf
jmp
call
jecxz
pop
mov
sub
pop
int
lods
mov
nop
push
test
clc
sarb
cmpsb
xchg
mov
adc
insb
xor
gs
aas
les
fdivr
je
rcrb
dec
lcall
jge
mov
pop
enter
add
je
mov
and
out
or
jge
push
popl
packssdw
leave
push
cmp
imul
jmp
dec
mov
scas
inc
add
fistps
popf
addl
dec
mov
and
or
jg
jmp
mov
pop
mov
ret
jg
outsb
xchg
sbb
or
lock
add
decl
mov
add
pop
mov
fmul
push
xchg
pushf
push
xchg
test
mov
clc
mov
imul
aas
cmp
add
pop
xchg
mov
pop
stc
mull
popa
mov
cmp
push
stos
bound
pop
jnp
inc
and
or
and
dec
or
cmp
mov
movsl
mov
xchg
jecxz
add
nop
loop
mov
pop
nopl
jge
stos
or
add
mov
push
cmc
hlt
addr16
xor
dec
lahf
push
dec
ljmp
test
les
adc
jle
push
in
stc
mov
push
jecxz
and
push
push
mov
jg
xor
test
gs
sbbl
ret
lahf
pushf
sub
or
xchg
daa
dec
enter
clc
dec
mov
jmp
cmp
xlat
iret
push
add
xor
or
jo
adc
int3
push
and
sbb
arpl
in
push
hlt
cmp
adc
out
pop
mov
push
pop
add
rolb
mulb
jne
aad
gs
dec
testl
rcll
mov
iret
or
xlat
adcl
inc
aam
adc
movb
stos
sub
sahf
nop
shrb
negb
mov
loopne
mov
aam
xchg
dec
in
jg
push
jbe
int
adc
int
xchg
popa
outsb
xor
arpl
dec
add
leave
xorb
xor
jne
mov
stos
imul
jns
jecxz
mov
xlat
sbb
cmpps
lock
sbb
mov
push
sbb
jmp
xlat
movsb
ret
mov
in
mov
faddl
mov
jle
int3
scas
in
gs
push
arpl
pop
push
cli
ret
cld
lods
adc
push
int
lds
mov
pop
adc
cmp
lods
jmp
movsl
ret
insl
xor
jns
adc
push
lock
inc
pop
loope
dec
insb
jne
mov
pushf
xor
decb
inc
pusha
mov
adc
xor
bound
aam
outsl
stos
mov
out
push
cld
lahf
or
ljmp
rolb
das
cmp
inc
jnp
dec
adc
xchg
test
pop
mov
incb
outsl
cmp
in
inc
scas
mov
les
adc
jp
or
gs
cmp
jp
dec
push
mov
bndldx
shlb
xor
add
mov
pusha
mov
into
icebp
adc
cmp
jns
mov
mov
roll
or
dec
sahf
test
push
and
mov
inc
stos
adc
decb
sahf
pop
mov
xor
pop
lret
cli
pop
mov
scas
js
and
ss
add
lea
outsb
ret
int
pop
cmc
cli
inc
stos
fldenv
xchg
mov
jge
movsl
nop
dec
pop
mov
sub
aad
sub
xchg
push
sub
lcall
push
xor
pop
mov
into
clc
mov
push
cmp
ret
out
pop
fwait
and
mov
int3
xchg
inc
rcrl
bnd
stos
fmuls
sbb
xchg
xchg
pusha
loope
add
rcl
mov
lods
ret
sub
xchg
add
mov
mov
jae
cmp
cmp
add
outsb
cmp
xor
rcrl
popf
bound
jle
mov
add
and
adc
sub
hlt
cmpsb
pop
out
jmp
js
call
sub
mov
add
sub
cli
hlt
jmp
xchg
sub
cmp
stc
outsl
in
shlb
scas
xor
data16
and
scas
enter
jns
cmp
orb
pop
lds
push
mov
cmc
mov
pop
inc
paddusb
roll
insb
or
mov
jb
xor
jecxz
pop
mov
mov
fmull
dec
dec
add
xor
pop
jne
sub
rclb
pop
arpl
mov
gs
inc
js
ret
inc
and
fistpll
enter
push
fs
std
imull
xchg
pop
cs
jg
popf
icebp
lcall
fnstenv
idivb
sub
sbb
lds
mov
bnd
daa
lret
stos
push
aas
stos
jmp
mov
stos
pusha
sbb
out
shrl
sbb
es
pop
clc
sbb
insb
mov
cmp
dec
das
jns
push
adc
aam
jne
call
mov
dec
or
jl
cmpsl
int3
jecxz
inc
out
add
fs
jmp
jl
std
cmp
test
int
mov
ror
outsl
jns
mov
lods
insl
cmpsb
adc
loop
in
jno
jmp
jnp
push
jmp
icebp
fs
repz
lods
in
cmp
outsb
test
xchg
pushf
call
mov
pop
mov
mov
mov
loope
adc
sarb
lret
inc
add
test
xchg
cli
popa
push
rolb
ret
aaa
inc
cmp
cmpsl
xchg
xor
test
adc
aam
xchg
or
jo
fdecstp
icebp
icebp
adc
cmp
gs
int
inc
or
push
popa
rcrb
adc
add
gs
inc
js
mov
dec
test
out
pop
cmc
mov
xor
in
test
inc
mov
lret
push
xchg
xchg
mov
cmpsb
xchg
and
or
das
xchg
dec
push
dec
xlat
sub
shll
dec
lea
movsl
mov
mov
jecxz
mov
shll
mov
nop
aad
repnz
orb
push
push
fcoms
cmp
push
es
jle
or
cli
mov
push
mov
ret
stos
push
in
lock
cmpb
cmpsl
enter
adc
cs
repz
aad
jb
jl
sbb
sbb
lahf
ret
sbb
add
cli
xlat
out
dec
or
mov
clc
es
lahf
mov
mov
add
cmc
inc
xor
jecxz
lcall
idivl
adc
or
mov
scas
fildl
cltd
orb
fstl
sarb
mov
xor
pushf
or
jne
sub
call
and
dec
jb
push
lret
push
pop
in
sub
hlt
mov
lds
mov
mov
and
mov
lock
inc
in
aaa
pop
dec
mov
imul
fdivrs
mov
push
push
std
push
clc
jg
ja
in
add
pop
lods
xchg
mov
and
stos
fsubrl
push
test
in
and
test
movsb
enter
pop
cmp
jmp
jns
in
inc
stc
mov
mov
in
mov
add
cmp
ret
inc
mov
inc
into
loope
inc
mov
cli
sti
jle
inc
and
imul
cmp
fsubs
lret
jo
mov
loop
adc
mov
sub
jp
add
out
adc
bound
mov
out
push
arpl
cmc
sbb
and
sbb
imul
pop
push
push
pop
gs
imul
test
ds
xchg
and
inc
jecxz
icebp
xchg
shlb
roll
stos
inc
pop
mov
lods
call
mov
imul
pusha
sbbl
mov
lods
mov
mov
subb
xchg
cmp
ja
aas
ljmp
pop
fsubrs
add
pop
test
aam
xor
je
cltd
pop
xchg
loopne
xchg
mov
into
adc
push
mov
call
dec
aas
das
inc
mov
xor
addr16
dec
sub
cmp
cmp
xor
jbe
cs
neg
inc
or
fsubr
loope
adc
sub
cmp
pop
cmp
in
push
call
repnz
scas
jge
popf
mov
xor
mov
int3
je
xor
xchg
pop
jbe
fwait
mov
mov
daa
inc
xor
int3
mov
scas
or
mov
fwait
mov
fs
jo
add
sub
test
xor
fsubrs
ja
pusha
rol
dec
mov
jnp
cmp
xchg
mov
imul
dec
pop
sti
incb
push
mov
dec
out
popf
aam
xchg
push
push
frstor
sbb
inc
js
dec
js
pop
addr16
mov
scas
sarb
pusha
pop
ja
cld
frstor
cs
cmp
sub
fistps
xchg
call
imull
mov
stc
xor
xchg
gs
out
and
icebp
sub
pop
add
and
push
jne
cmp
call
adc
insl
dec
lret
mov
or
rclb
add
rcll
jno
insb
xor
sub
ja
push
lods
push
stos
clc
sbb
and
addr16
test
test
mov
sub
add
sub
fbld
imul
jb
loop
fildll
scas
std
addr16
xchg
cmp
imul
xor
jge
and
cmpxchg
mov
aas
pop
imul
add
notl
popf
xchg
test
inc
push
out
adc
data16
jle
shlb
xchg
lret
movsl
jb
shll
adc
mov
pop
or
ja
cmc
sti
or
int3
and
clc
pop
cmpl
jnp
orb
pop
addr16
cwtl
mov
jns
subl
lret
mov
in
fs
adc
lea
mov
bound
pop
imul
fdivl
xchg
fwait
jno
outsl
call
add
insl
dec
lret
popf
pop
repz
jp
sub
sub
stc
or
jecxz
sarl
cmpsl
repz
int
imul
adc
dec
pop
repnz
ret
push
addr16
sbb
out
popa
arpl
outsb
inc
xor
jg
mov
mov
add
fs
cmc
adc
fadd
jb
inc
in
aaa
mov
pop
adc
aam
adc
aas
push
out
sub
std
cmp
jb
or
loope
mov
xchg
sub
leave
xor
in
mov
add
add
mov
lds
jl
mov
xchg
stc
pop
mov
scas
lea
jbe
cmp
and
out
xchg
cltd
mov
ss
fwait
adc
pop
cltd
xchg
inc
inc
pop
scas
imul
fisttpl
add
jne
rcl
xchg
push
dec
cmp
xchg
notb
nop
cltd
mov
test
test
test
xchg
or
mov
jle
push
push
movsl
fdivl
je
mov
cmp
fs
xor
mov
ljmp
adc
xchg
or
cwtl
push
sbb
test
stos
ds
fs
adcl
stos
pop
or
ljmp
add
mov
push
call
push
pop
lret
insl
aam
rdtsc
sbb
dec
jne
add
in
lcall
movsl
fimull
pop
push
fucompp
push
fcoml
mov
mov
sbb
cmp
rcrl
jnp
mov
movsl
les
aaa
gs
mov
cmp
insb
xor
add
sahf
push
testl
pop
and
pop
in
sub
add
outsb
mov
jb
dec
into
mov
jmp
mov
jns
sub
xlat
push
out
cmp
pop
xor
sub
rcl
arpl
mov
xor
jmp
cs
push
std
aas
pop
adc
add
mov
adc
mov
add
push
fdivl
sub
sub
repz
bound
xchg
mov
pop
subb
mov
lods
test
outsb
add
rclb
loopne
aaa
or
aas
dec
jno
dec
inc
mov
xlat
xor
or
mov
pop
inc
pop
aam
aas
dec
int
cmp
add
insl
add
push
dec
test
mov
xchg
add
adc
sub
cmpsl
dec
push
sbb
mov
fcmovu
and
mov
cwtl
xor
ficoms
arpl
adc
sarl
roll
jp
sahf
fdivr
sbb
mov
jecxz
leave
push
dec
bound
mov
les
js
push
outsb
jle
cmpsl
adcl
jg
cld
mov
sub
xlat
sub
ret
xor
fwait
cmp
mov
jb
stc
movsb
jno
xor
jl,pn
scas
xor
lahf
jmp
rcrl
fbstp
sti
sti
and
lods
dec
mov
lock
push
aad
lcall
mov
mov
fs
lcall
sar
adc
adc
sbb
mov
mov
adc
mov
lock
inc
insl
adc
in
std
cmpsl
sbb
adc
shlb
mov
lock
xlat
ret
cs
fsts
subl
ret
mov
inc
or
sbb
push
adc
test
pop
inc
test
rclb
mov
data16
nop
inc
jge
pusha
dec
sub
xacquire
and
push
fistpl
add
jbe
aad
adc
jae
iret
repz
inc
pop
rorl
dec
sub
imul
sti
jo
fwait
imul
in
daa
add
xlat
les
inc
clc
dec
or
aam
scas
fidivrl
sti
outsl
mov
push
addl
in
shrb
sbb
xchg
dec
add
iret
pop
dec
in
leave
out
push
sub
mov
xchg
ja
and
mov
sub
xlat
add
icebp
outsl
inc
in
pop
jmp
movsb
repnz
mov
mov
xor
js
dec
inc
aas
jno
sbb
inc
ja
cwtl
pusha
hlt
outsb
push
fistps
jle
sub
lock
scas
xchg
and
lret
shll
lret
adc
xchg
push
in
rol
clc
movsl
push
jle
add
test
pop
xchg
cld
addr16
iret
popl
faddl
and
add
xor
addr16
lods
rcrb
int
stos
adc
push
pop
jecxz
insb
dec
dec
xchg
jp
xor
ss
xor
mov
int
arpl
push
add
jge
xchg
cmc
mov
inc
aas
add
xchg
adcb
add
ja
jg
or
xor
sbb
mov
or
inc
xor
mov
and
in
mov
std
loopne
push
shll
fidivl
lods
mov
rcll
push
mov
out
aaa
aad
jns
iret
xchg
and
imul
lret
push
cmp
pop
mov
and
lock
sub
idiv
lcall
xorb
xchg
std
xchg
add
jl
arpl
mov
sti
xor
out
push
mov
out
push
fsubr
push
or
xchg
neg
add
and
clc
frstor
jmp
xor
cwtl
pop
loope
popa
or
add
lcall
inc
jb
or
inc
lock
movsb
mov
dec
cmp
xchg
daa
push
outsb
cmp
idiv
out
xchg
jmp
xor
and
daa
add
stc
test
in
inc
cmp
push
and
jp
pushf
in
or
cmp
dec
jp
mov
aaa
mov
pop
pop
test
pop
sub
adc
test
sahf
xchg
aam
out
fadds
mov
dec
jecxz
add
inc
mov
outsl
or
sub
xchg
jl
cwtl
loopne
push
leave
rorb
dec
xor
mov
movsl
insl
jbe
dec
jo
adc
sahf
dec
and
mov
fst
mov
mov
shrl
jnp
cmp
outsb
leave
mov
cld
add
imul
mov
push
jne
xchg
mov
stos
cltd
das
test
insl
test
xchg
loopne
push
lret
cmp
mov
inc
sbb
hlt
dec
cltd
mov
adc
rorl
inc
movsb
jae
test
cmp
mov
push
pop
rcrl
lds
test
les
imul
es
fcmove
bound
cmp
scas
mov
xlat
jns
dec
fcomip
leave
mov
sti
mov
data16
add
nop
test
dec
repnz
adc
neg
in
jecxz
test
or
inc
pop
push
aaa
and
mov
mov
pop
mov
xor
inc
mov
cltd
les
cmp
int
imul
adc
lds
das
enter
and
popa
sub
mov
dec
adc
mov
out
fidivrl
mov
push
mov
cld
pop
xor
xchg
xchg
inc
mov
cmp
mov
aas
movsb
pushf
loopne
test
jmp
test
and
mov
imull
stc
mov
jmp
or
xor
or
xor
jecxz
push
bound
fcmovnb
dec
into
sbbl
add
jo
sbb
movsl
mov
add
repz
push
push
sahf
mov
jns
mov
aad
inc
cmpb
xor
jb
aad
inc
arpl
push
cli
jnp
lret
mov
fcmovnbe
and
lods
ret
gs
mov
pop
sarl
add
imul
pop
xlat
nop
inc
rcrb
inc
sbb
iret
push
jb
out
int3
push
xchg
hlt
jno
jo
es
lret
sbb
mov
addr16
test
dec
push
pop
xchg
sbb
sbb
shlb
dec
cltd
in
in
ja
mov
mov
adc
fdivrp
stc
pop
sub
xchg
xor
pop
daa
adc
and
repz
insl
mov
sbb
jne
fidivrl
xchg
mov
push
mov
shlb
xor
xor
adc
and
in
stc
iret
cmpsb
jecxz
shrb
stos
leave
stos
xor
scas
push
popa
addr16
sub
xchg
aad
jle
mov
mov
mov
dec
mov
bound
mov
mov
push
mov
pop
cmc
sbb
xor
in
pusha
inc
leave
jl
mov
ret
xor
inc
fisttpll
push
daa
and
inc
movsb
imul
pop
sub
mov
mov
xchg
aaa
cmpb
sub
push
jae
sti
and
sub
mov
out
push
xor
sub
incb
pop
out
test
mov
dec
or
xchg
xor
cltd
pop
cltd
mov
mov
cli
pop
in
aam
out
outsl
lock
lods
orl
adc
xor
inc
push
in
sub
inc
mov
movsl
out
or
push
in
pop
jne
js
dec
out
out
xor
pop
js
lret
inc
ret
jns
orl
test
inc
sub
fsubl
sbb
mov
add
je
jno
xchg
bnd
push
inc
and
cmp
repz
push
mov
jle
xchg
push
ss
sbb
adc
cld
mov
gs
sbb
adc
sub
mov
pop
jnp
into
push
icebp
xor
jmp
jmp
and
movsb
leave
imulb
inc
lock
lret
shrl
insl
sbb
pop
or
out
xchg
push
shll
repz
arpl
ret
add
sbb
jae
lea
add
inc
in
ret
dec
pop
leave
iret
fsts
andl
enter
push
sbb
fldt
mov
xchg
lea
stos
xchg
imul
push
dec
mov
jnp
cs
pusha
pop
nop
or
sub
out
jnp
jns
leave
pop
jnp
stc
mov
add
jns
bound
sahf
xchg
sub
or
call
mov
jmp
test
push
nop
inc
ret
pusha
sub
inc
xchg
std
in
push
and
shrl
mov
psllw
mov
lods
mov
cmp
cltd
enter
hlt
mov
fisttps
int
add
jns
push
out
xchg
rcr
xchg
xchg
push
ss
jge
dec
sarb
call
adc
cmpsb
xor
cmp
pop
cmp
std
popf
push
neg
sti
cbtw
lods
add
xchg
js
repnz
mov
mov
ret
jae
jl
xchg
or
mov
cmp
aam
aaa
repz
lea
das
in
jmp
movsb
xchg
jle
sbb
pusha
lahf
pushf
or
sti
shlb
dec
es
pop
mov
or
fstps
xor
roll
jne
push
or
jns
fcmovne
xchg
shl
inc
jno
pop
mov
jb
jp
cmp
dec
adcl
insl
lret
fildll
ja
shlb
les
fcmovnu
jne
dec
mov
lds
movsl
and
and
lretw
xor
pushf
jp
cmpsl
mov
js
xchg
lret
push
loop
das
cmp
push
cltd
mov
pop
mov
ljmp
loop
xchg
sahf
dec
lea
cli
push
xor
xchg
add
xchg
jne
cs
subl
lea
jle
fisubl
pop
je
loopne
inc
dec
fwait
in
cmp
mov
out
mov
adc
pop
pop
imul
insl
adcl
jl
push
inc
int3
iret
jecxz
ja
jo
push
push
data16
push
shrb
jns
fcoms
add
cwtl
js
or
mov
or
mov
sbb
enter
fnsave
cmp
test
movsl
fdivrs
test
mov
ret
pop
jmp
add
ret
xchg
pop
rorb
dec
test
mov
or
dec
mov
add
pusha
xchg
dec
pop
cmp
into
sti
adc
pop
lods
das
push
data16
jne
lret
test
mov
mov
repz
xchg
sbb
js
roll
pop
pop
stc
adcb
cmpl
cmc
push
adc
push
test
or
popf
jl
add
fnstsw
sub
pop
out
dec
pop
inc
ret
inc
mov
insb
hlt
movsb
test
fldenv
decl
hlt
bound
mov
lahf
dec
adc
or
cmc
movsl
js
popa
pop
mov
or
xor
push
add
lea
mov
sbb
sbb
or
inc
ret
push
and
clc
cmp
fdivrs
pop
xchg
outsb
lods
mov
dec
mov
fs
jp
push
mov
sub
and
aam
xchg
cld
test
mov
movsb
pop
and
mov
push
add
cmc
push
aam
scas
pop
cmp
sub
and
cmp
rol
aad
clc
pop
fcoms
ret
sahf
mov
push
popa
xchg
and
fidivs
aad
add
dec
or
cmpsb
jl
jno
jl
aam
ds
and
test
cmp
adc
addr16
push
into
movsb
sbb
or
mov
enter
ljmp
ss
mov
pop
and
dec
push
cmp
fs
sub
test
aam
in
mov
inc
mov
ss
adc
cli
cmpsb
test
cmpsl
lods
add
call
imul
pop
mov
unpcklps
jl
mov
mov
fldl
in
in
mov
cmp
ja
xor
cld
imul
nop
call
test
push
out
fimuls
mov
dec
pop
out
cmc
loop
mov
and
enter
dec
in
enter
xchg
xor
mov
xchg
pushf
push
imul
out
fcmovb
ds
jo
jge
out
int
inc
insb
adc
js
mov
js
in
lea
lds
out
bound
pop
adc
mov
pmulhw
rorb
pop
fdivl
xchg
out
pop
jo
and
out
adc
adc
mov
ret
mov
xchg
cmp
pop
and
test
sub
and
xor
mov
ja
mov
pusha
stc
xchg
call
jns
mov
mov
call
xor
push
lret
inc
sub
rcl
push
jl
push
pop
jne
xchg
pop
mov
sub
mov
pop
xor
adc
dec
push
xor
mov
outsb
ret
les
outsb
or
or
and
pop
daa
pop
movsl
enter
adc
andl
out
push
in
lods
ret
cld
imul
fimull
pop
mov
and
xchg
loop
lahf
ret
enter
int3
pusha
mov
xor
cmp
leave
pop
jmp
add
cltd
dec
sub
mov
shrl
in
pop
test
rclb
sbb
scas
or
hlt
imul
or
xor
jb
ljmp
pop
mov
pop
sbb
and
xchg
jbe
jp
inc
fidivl
pop
divb
jo
subb
dec
adc
sub
and
lock
mov
jns
cmp
ss
jl
jne
jnp
imul
sub
cmpl
inc
rcrb
push
xor
jl
test
rdtsc
mov
sbb
fwait
sbb
call
dec
jl
mov
adcb
les
ret
icebp
cmpb
test
push
mov
pop
xor
mov
dec
and
out
jbe
aam
imul
in
icebp
sahf
fidivs
rorl
jmp
fisubrl
jge
adc
jecxz
popf
push
xor
push
shrb
xchg
push
dec
sbb
jnp
mov
xor
ss
pop
negl
aad
mov
out
pop
xchg
pop
sbb
fldenv
inc
push
sbb
dec
xor
mov
nop
fldl2t
pop
jecxz
mov
les
xchg
push
mov
mov
pop
fs
imul
insl
data16
outsl
mov
xor
in
insl
scas
or
xchg
fistpll
shlb
dec
inc
sbb
data16
mov
imul
int3
cmp
clc
cli
add
adc
fildll
loop
mov
cmp
cmp
xor
cmp
push
mov
and
nop
fmull
dec
mov
mov
jmp
xor
jmp
fwait
insb
add
inc
and
pop
adc
xchg
fdivrl
and
xchg
pushf
adc
inc
mov
xlat
push
int3
sbb
xor
das
repnz
in
or
mov
mov
cs
push
mov
fdivrs
cs
jns
fistl
out
sbb
xchg
xorl
mov
dec
cltd
les
sahf
adc
dec
sbb
lcall
into
fimuls
pop
push
and
add
or
cwtl
mov
and
out
cmpsb
pop
popf
bnd
jb
cmp
gs
and
adc
sub
push
cmpsb
mov
leave
cmc
cld
test
xor
outsb
lock
cmc
mov
popf
and
mov
mov
jmp
xor
dec
inc
xchg
sbb
inc
and
movl
or
fdiv
out
mov
call
push
and
inc
lods
mov
repnz
lret
icebp
decb
mov
push
dec
adc
jg,pt
push
iret
push
lea
adc
sbb
cmpsb
and
sbb
jb
repz
loope
or
fcmovnbe
or
xor
xor
push
push
cmc
jo
xchg
in
pop
out
cmp
dec
aad
cmpsb
leave
push
and
rclb
lods
xchg
ds
dec
bound
cli
pop
mov
and
push
xor
and
cmp
inc
mov
xchg
cmp
or
or
aad
mov
jge
and
shll
cmp
add
mull
fidivs
push
jno
pop
push
push
mov
lahf
pop
push
ljmp
out
sub
aas
jbe
hlt
addl
inc
jne,pn
mov
pop
mov
orb
negb
mov
stos
orl
jl
adc
sub
xor
out
xchg
into
push
fcmovnu
mov
pop
mov
enter
lds
out
push
inc
ret
mov
gs
lcall
mov
rcrb
fstpl
xor
xor
mov
test
in
idivl
test
inc
cs
inc
arpl
jnp
push
pop
cmp
and
push
xchg
pop
jge
lods
sarb
stos
lea
xchg
cli
sub
es
cmp
cmpsl
jle
mov
rclb
dec
ret
xchg
enter
int
lea
mov
push
shr
mov
push
sbb
int3
stc
jmp
cmp
shlb
push
mov
repz
dec
inc
dec
scas
mov
adc
das
scas
mov
jmp
mov
loop
addb
lods
inc
or
mov
sbb
push
test
lcall
fists
aad
mov
and
push
mov
sub
lret
xlat
data16
add
adc
leave
jne
fdivl
inc
bound
add
inc
jb,pn
cmp
imul
push
xor
or
test
xchg
push
ret
lock
dec
sub
int
leave
or
scas
push
aaa
jnp
xchg
es
punpckhdq
xchg
mov
or
sarl
inc
jbe
out
pop
inc
in
dec
pop
push
ds
mov
jl
in
pop
fsubrs
cli
jmp
adc
xor
mov
mov
adc
notb
ljmp
push
popf
pushf
and
or
cwtl
push
orl
push
adc
es
and
or
orl
push
clc
sub
mov
mov
dec
lock
mov
std
adc
push
daa
sbbb
fbstp
jmp
in
movsl
testb
add
push
clc
and
out
jp
jne
cs
outsl
mov
sbb
iret
fcmove
inc
add
je
icebp
cmp
add
std
in
push
adc
shll
xor
sub
fst
mov
lock
int3
in
mov
repz
inc
push
cmp
cmpsb
loop
dec
addr16
add
mov
bound
repnz
pop
cli
or
push
fistpl
test
sbb
cmp
cmp
es
lea
push
dec
cmp
mov
in
xchg
out
jmp
scas
mov
movsl
sbb
jp
ljmp
add
jmp
or
stc
sub
and
fisttpl
mov
cmc
sahf
scas
jne
imul
mov
fidivl
sbb
das
das
std
dec
sbb
inc
out
arpl
jo
mov
jb
aaa
orl
shrb
not
std
add
les
mov
lret
fwait
adc
das
movsl
cmpxchg
out
cmc
aam
scas
lods
sbb
add
xchg
xor
push
jge
gs
testb
mov
notl
pop
or
lds
rorb
sub
fwait
mov
adc
dec
mov
sbb
or
loopne
mov
cs
fcmove
rorb
test
in
adc
scas
test
mov
inc
cmp
fwait
push
lock
pop
adc
cld
mov
jl
daa
xlat
push
clc
adc
outsb
sbb
xchg
mov
add
cmp
scas
cwtl
shlb
mov
outsb
out
and
push
test
jno
in
int3
sbb
lahf
jp
mov
push
aam
xchg
push
mov
mov
movsb
int3
insb
xchg
out
xor
test
out
or
popf
pusha
jae
mov
es
xor
sbb
incl
popa
and
lret
insb
push
fisubs
test
scas
sub
hlt
pop
jl
mov
and
insb
push
mov
sub
inc
and
stos
pop
cmp
inc
lods
pop
adc
jae
xor
mov
push
xor
movsb
jne
adc
dec
push
stc
push
out
push
repnz
mov
jnp
inc
fistpll
sub
jle
test
lods
loopne
add
mov
adc
mov
pushf
add
xorb
push
pop
push
pop
scas
xorl
iret
cmp
mov
adc
cmp
sub
sub
hlt
pop
es
bound
mov
sbb
mov
enter
loop
pop
lods
cmp
iret
shl
cmp
xor
mov
jp
movsb
inc
test
xlat
xlat
arpl
cmp
outsl
and
xchg
mov
outsb
sbb
pop
dec
stc
mov
loopne
inc
es
cmc
mov
ror
cmp
or
into
fistpll
mov
jns
fs
jnp,pn
ja
fisubrs
cltd
pop
add
sub
cmpsb
inc
mov
jle
aaa
and
xchg
call
adc
or
fwait
lret
inc
stos
rcrl
push
aad
dec
ljmp
out
pop
add
inc
aad
add
sbb
push
cs
loope
xchg
rcll
outsb
sbb
shll
ret
repz
sbb
enter
jno
int
jg
jg
pop
scas
xor
cld
mov
icebp
scas
outsb
insb
fstpl
jg
or
outsl
mov
fiadds
mov
or
test
jmp
outsb
push
and
stc
aam
insb
pop
add
mov
push
xchg
out
lds
sbb
add
enter
call
and
insb
lret
adc
inc
cmc
call
push
add
and
pop
sub
xchg
hlt
sbb
jno
dec
pop
pop
into
enter
int3
iret
pushf
pop
xchg
aas
xchg
jne
jbe
aas
push
jno
gs
sub
and
cmc
mov
imul
int3
push
sub
repz
jno
mov
ret
pop
fisubrl
cmp
pop
jno
test
mov
and
jbe
fs
prefetch
pop
jb
stos
mov
sbb
adc
in
andb
ficomps
jns
add
incb
sbb
dec
and
jno
movsl
and
and
mov
dec
add
insl
aad
mov
gs
stos
gs
pop
or
cmp
pop
fs
lock
cmp
pop
inc
xchg
rclb
inc
ljmp
mov
or
adc
call
ja
pop
inc
leave
sbb
sbb
lock
mov
inc
xchg
stos
arpl
stos
mov
shrl
stos
or
pop
add
test
fmull
mov
mov
push
test
mov
xchg
subb
cld
sub
ja,pn
mov
mov
cmp
repnz
add
mov
jb
sub
scas
mov
js
mov
jno
aaa
push
adc
inc
ret
xchg
add
test
xchg
xchg
scas
jno
rolb
xor
sub
add
dec
adc
shrb
inc
call
mov
add
ja
insb
jns
dec
pusha
push
xchg
int
lods
mov
mov
and
push
roll
adc
pushf
push
dec
std
jo
int3
add
mov
subl
and
inc
xchg
clc
loop
ja
repz
xor
outsb
or
jmp
mov
fs
add
aaa
gs
rolb
cmc
addps
dec
adc
push
xor
mov
cld
arpl
pop
ret
inc
sti
hlt
iret
sbb
inc
ds
shll
test
jecxz
lds
push
adc
mov
add
jno
daa
in
cmpsb
sahf
cmpsl
movsl
sahf
lret
push
ja
loop
xor
and
xchg
test
pop
mov
mov
int
lea
cmpsb
xor
mov
outsl
les
adc
add
data16
test
sahf
adc
hlt
jl
call
movsl
dec
and
dec
gs
dec
ror
xchg
sahf
dec
add
and
mov
jge
icebp
push
shll
fldenv
pop
xchg
inc
jg
xchg
add
in
icebp
out
mov
add
pop
dec
arpl
push
mov
shl
mov
and
lock
outsb
or
mov
push
xchg
sub
fucom
outsl
in
jae
shlb
shr
push
pop
jecxz
sti
mov
mov
test
lret
dec
lret
mov
rcrb
repnz
fiaddl
adc
xchg
fsubrs
xor
mov
rcll
pop
outsl
insl
mov
and
mov
lahf
and
jne
pushf
adc
cmp
outsl
sbb
cmp
stos
jle
or
scas
loope
lods
sbb
mov
and
mov
das
mov
pusha
and
mov
jae
xchg
push
pop
pop
xchg
add
lock
fdivs
scas
ficompl
shll
sbb
in
push
push
out
repz
inc
dec
movl
push
mov
xchg
mov
inc
push
ds
je
and
xchg
sbb
add
mov
inc
pop
icebp
or
pop
insb
lock
jae
aas
out
ds
ret
or
push
cmp
pop
add
fbstp
dec
mov
loop
pop
xor
mov
fcomps
mov
push
movsl
mov
mov
sbb
mov
aas
jnp
rorl
push
movsl
push
push
inc
mov
popf
ja
sahf
jecxz
imul
leave
scas
inc
jg
adc
hlt
push
xchg
jl
sub
dec
fstps
mov
popl
jle
imul
pop
mov
push
outsb
pop
and
inc
mov
sub
dec
push
out
mov
cmp
jns
lahf
ret
adc
add
and
dec
bound
mov
popa
loop
dec
mov
and
mov
scas
xorb
sub
push
cmp
lret
ret
sbb
cli
dec
push
mov
inc
add
xchg
sti
dec
xor
xor
adc
sbb
imul
call
int3
fchs
pop
dec
sbb
cmp
jnp
and
inc
pop
shrb
int3
sahf
out
pop
push
pop
out
sbb
or
lds
xor
mov
cld
shrl
pop
lds
add
lods
rcrl
pop
imul
or
cmpsl
loopne
nop
in
ffreep
pop
jge
cmpsb
scas
adc
cmpsb
dec
hlt
sbb
push
mov
arpl
inc
int3
mov
mov
cltd
jnp
or
lret
jno
cmp
cwtl
pusha
daa
pop
negb
mov
lock
adc
aaa
mov
mov
or
sub
mov
in
addr16
lcall
dec
pop
push
inc
xor
addr16
test
cmc
pop
xchg
jg
inc
add
aas
add
sub
scas
std
and
shlb
cmp
mov
in
jl
add
xchg
pop
loope
es
and
int3
mov
aas
cmpsb
dec
cmp
lret
fdivr
mov
inc
pop
cli
ret
pop
fidivl
das
pop
lret
jp
mov
popf
mov
mov
pop
in
and
ret
aas
cmp
outsl
push
cmp
daa
and
movsb
pop
adc
movb
stos
dec
inc
andb
mov
movsl
iret
sti
dec
hlt
adc
test
sbb
fst
cmpsb
add
lds
lods
shll
lods
stc
or
inc
mov
sarb
and
xchg
xorl
in
pop
data16
xor
mov
enter
and
test
pushf
lcall
cli
sti
jmp
cwtl
test
mov
cmc
and
push
aas
roll
dec
push
or
test
and
inc
fisubrl
ss
xchg
add
repz
mov
lret
cmpb
scas
mov
inc
mov
stos
push
into
push
xor
cltd
sbb
icebp
lret
xor
mov
jae
test
shr
pop
push
bound
js
sbb
jecxz
push
jg
daa
aad
les
push
dec
push
addb
addr16
in
pushf
in
pop
or
clc
or
loopne
pop
sub
xchg
mov
div
pop
sbb
sub
inc
mov
mov
sbb
loop
push
std
aam
in
dec
ds
pop
mov
imul
and
scas
add
das
sub
test
push
mov
inc
push
test
cld
mov
movsb
mov
inc
xchg
sti
mov
mov
faddl
addr16
or
mov
dec
stos
cwtl
push
add
mov
xorl
adc
xor
out
cld
testb
add
or
stos
gs
and
fidivs
stc
push
ficomps
sarl
mov
or
adc
jl
hlt
in
pop
dec
fidivrs
push
int3
mov
lock
mov
adc
imul
fs
cmp
cmp
arpl
jge
add
adc
mov
cltd
adc
mov
mov
and
lahf
in
xor
int3
add
xor
loope
aam
mov
lret
jo
sub
sbb
testb
pop
push
sbb
adc
sbb
xor
pusha
and
cs
jp
lods
adc
shrb
inc
data16
dec
mov
cmc
mov
mov
jecxz
pop
xchg
inc
mov
mov
cmp
lods
popf
jno
add
nop
mov
stos
pop
scas
in
jmp
test
jmp
push
xchg
jle
mov
out
and
inc
xchg
daa
arpl
fisttpll
notb
push
stc
push
xorb
and
mov
out
lret
inc
inc
clc
xchg
out
cmp
sub
inc
dec
js
mov
scas
notb
jno
pop
xchg
mov
leave
lret
in
pop
sub
jae
imul
mov
and
bound
iret
ljmp
mov
int
inc
mov
sbb
sbb
sbb
pop
inc
les
cmp
inc
push
push
push
or
pop
sub
push
sbb
das
stc
subb
dec
jge
sub
pop
mov
pushl
xor
jb
test
sub
imul
push
repnz
xorb
dec
lcall
arpl
movsb
adc
pop
clc
pop
testl
adc
das
push
mov
nop
aad
test
and
aam
loope
and
movsb
push
test
dec
or
andl
push
xchg
or
fistpl
popa
loope
jo
repz
addb
mov
xchg
filds
into
dec
mov
dec
cmp
lods
cmp
pop
insl
add
aas
dec
std
pusha
iret
enter
inc
cmpsl
pop
mov
add
mov
push
shlb
in
lock
insl
cmpsb
sbb
hlt
aam
sub
sbb
and
cmpsl
jp
mov
loopne
add
out
dec
adc
cmp
ja
mov
mov
adc
ds
xchg
test
lods
and
push
int
aad
ret
inc
sub
sbb
mov
xchg
lret
imul
hlt
push
jnp
xlat
add
xor
dec
mov
in
sub
les
push
pop
and
push
or
js
and
inc
loopne
sbb
inc
pop
outsb
in
inc
pop
imul
xor
pusha
pop
push
fisubl
js
cmp
gs
sub
jecxz
lea
sbb
mov
inc
lods
je
push
inc
aas
nop
clc
insb
rolb
ljmp
data16
and
add
jo
xor
jae
xchg
mov
je
mov
xchg
rep
int
test
rolb
ds
stc
add
leave
jl
lods
daa
loop
push
pusha
xchg
psraw
inc
adc
aas
add
xor
cmp
mov
jae
add
adc
sbb
xchg
and
data16
add
cld
push
xor
mov
sub
test
jg
adc
lcall
pop
adc
xor
pop
pop
jmp
xchg
pop
cli
xchg
fs
sarb
push
xchg
and
pushf
subb
pop
in
sbb
scas
std
or
pushf
jecxz
cmp
divl
jge
fbld
sahf
pushl
sbb
dec
outsl
sar
pop
lcall
stos
xchg
lahf
xor
lods
inc
jp
inc
jb
mov
cmp
mov
xor
adc
sub
cmp
popf
clc
dec
enter
out
stos
fwait
add
hlt
fdivs
push
dec
xchg
mulb
outsb
cltd
adc
rolb
mov
aaa
xlat
out
mov
xchg
or
std
imul
sub
insb
mov
notb
or
adc
rcrl
stos
or
cmpsl
aam
cs
mov
xlat
dec
popf
insl
xor
imul
in
xchg
andl
addr16
push
dec
ror
mov
pusha
pop
cli
inc
dec
imul
inc
imul
or
inc
dec
and
add
push
lret
data16
insb
inc
data16
and
popaw
cmpsl
push
jle
data16
mov
repnz
ret
int
push
fidivl
push
push
sahf
lahf
adc
mov
jo
or
int
mov
inc
mov
push
ljmp
popa
push
add
push
cmp
leave
or
lods
sahf
push
push
xchg
stc
in
aas
adc
inc
inc
movsl
inc
cmpsl
xor
enter
mov
mov
and
dec
or
stos
sub
jmp
pop
cmp
into
call
jl
inc
fisttps
inc
xchg
xchg
shlb
js
cmp
fwait
or
dec
jne
ret
pop
mov
mov
mov
jne,pt
jmp
sbb
insl
stos
in
push
add
cmp
insl
ljmp
or
mov
data16
ficomps
and
pop
inc
test
orl
nop
fiaddl
pop
les
xchg
sahf
mov
push
mov
jmp
sub
repz
or
popf
cli
adc
xchg
stc
or
sub
add
sbbb
jle
xchg
jecxz
insb
shrb
cmp
hlt
jl
and
adc
sbb
js
dec
fwait
pop
pop
ficomps
fwait
stc
repz
in
cmpsl
js
addr16
mov
outsl
jp
mov
add
repnz
stos
pop
or
lcall
shl
dec
nop
jmp
lock
push
push
add
pop
cmp
scas
xchg
or
cmp
add
nop
jp
mov
adc
pop
adc
cmp
jno
imul
dec
cld
outsl
out
bound
mov
push
jmp
aad
add
pop
dec
loope
add
and
loopne
dec
neg
nop
xor
xor
sbb
jb
icebp
ljmp
cmpsb
ss
orl
fdivl
je
or
inc
cmpb
aad
lods
pop
jbe
xor
lods
cmp
std
jg
fists
test
jnp
mov
inc
cmpsb
fisubrs
cwtl
or
movsb
inc
xchg
dec
loope
cmp
sbb
mov
nop
cmp
ret
lods
push
iret
icebp
mov
adc
add
adc
cmp
xchg
mov
and
movsl
mov
daa
mov
sub
aas
mov
lret
adc
js
push
outsb
js
mov
outsb
jmp
das
fs
mov
pop
mov
xchg
out
jmp
pop
outsl
sahf
stos
fdiv
stc
push
adc
sbb
imul
inc
mov
iret
inc
in
push
cmpsb
push
das
inc
testb
out
or
loope
pop
mov
movsl
std
jle
mov
mov
sbb
add
faddl
cmp
cmpb
mov
popf
and
subb
jb
add
jae
cmp
inc
jo
sub
in
jp
aas
or
push
pop
jmp
mov
repnz
adc
in
pop
imul
pushf
jecxz
and
sbb
jle
out
dec
mov
inc
add
push
sbb
dec
mov
into
jb
scas
in
dec
pop
jle
xor
shll
leave
mov
add
jecxz
in
jmp
add
xchg
xchg
mov
pop
adc
cmp
xor
xor
jg
notb
lret
cmpsb
lods
dec
pop
arpl
aad
movsl
jge
push
test
mov
adc
insb
addr16
or
ds
cli
xchg
inc
loop
shll
call
jae
inc
lahf
idivb
in
xchg
push
ljmp
stos
mov
mov
sti
and
addr16
stos
test
or
pushf
pop
or
add
fcmovnb
pop
dec
filds
arpl
or
clc
or
idivl
js
ret
xor
xchg
dec
mov
pop
je
cmp
dec
out
enter
cmp
and
cmp
pop
test
add
cmp
xlat
lret
adc
mulb
sub
mov
jmp
cmp
dec
pop
aad
cwtl
insl
inc
je
bound
stc
cmpsl
mov
lods
lret
insb
cli
jbe
mov
shrl
sahf
dec
mov
dec
adc
in
xor
cmp
popa
pusha
loop
and
xchg
mov
add
lret
aad
loope
fwait
addr16
stc
ss
jl
xchg
pushf
aad
nop
mov
jle
xchg
mov
pop
jmp
mov
sbb
fldz
add
add
outsl
xchg
push
mov
int3
or
aad
jae
push
cwtl
sarb
inc
xchg
cmp
mov
xor
stos
or
sbb
push
add
or
jns
mov
clc
or
cmp
lea
cmp
sti
mov
mov
mov
jecxz
iret
out
out
jge
mov
arpl
call
sub
inc
and
fnstenv
leave
fwait
or
sub
adc
xchg
cwtl
int3
sub
js
sub
loop
or
lods
xchg
sbb
in
and
fwait
lahf
sbbb
xchg
sbb
std
orl
dec
cmpsb
lea
cmp
sub
addr16
fwait
in
pop
stc
cld
fs
mov
xor
mov
add
cld
arpl
inc
cmp
dec
sbb
dec
push
inc
lock
jae
negl
mov
out
mov
jno
mov
faddp
pop
sarl
sub
adc
xchg
es
sub
es
nop
sbb
test
call
les
mov
jmp
pop
lock
mov
adc
cli
and
inc
push
cmp
pop
dec
or
je
aaa
xchg
dec
pop
movsb
cmp
movsb
test
mov
and
outsl
cmp
pushf
ja
ss
jge
adc
adc
cmp
cmc
cmpb
mov
pop
push
mov
jp
add
push
clc
cmc
adc
cmc
fiaddl
idivl
xor
aas
fs
insl
repz
leave
iret
call
std
mov
xor
aad
fisubrs
mov
scas
inc
in
negb
out
leave
push
in
inc
fistpl
inc
jbe
leave
pop
mov
push
cwtl
aas
daa
jmp
cwtl
jno
orb
lahf
xor
lahf
xor
daa
mov
aam
pop
adc
or
xchg
cmp
daa
add
push
cmp
pop
scas
in
arpl
mov
sub
stos
xchg
popf
shlb
lock
js
pop
or
inc
pop
lcall
ficompl
push
adc
lret
jge
inc
ds
adc
stos
imul
rcr
adc
out
dec
lods
or
cwtl
rcrb
rcl
stos
lock
stos
in
inc
lcall
xchg
dec
xor
inc
imul
jbe
pop
jecxz
xor
mov
mov
push
xlat
inc
jo
clc
test
adc
aam
insl
pusha
inc
pushf
out
push
arpl
mov
pop
push
out
hlt
adc
sbb
sbb
hlt
jae
mov
pop
push
jp
dec
jo
or
inc
push
mov
xchg
jle
negb
pop
aam
pop
mov
cmp
pop
insl
cltd
mov
jns
ljmp
add
xor
lahf
ja
or
or
xchg
inc
inc
or
pop
lret
mov
test
jl
add
and
mov
cmp
and
cmpsb
insb
xchg
dec
ret
lsl
scas
xchg
hlt
fiaddl
pop
xchg
or
push
shlb
xchg
neg
cmp
xchg
push
mov
es
xor
into
lods
xchg
stos
cltd
mov
fidivrs
enter
push
pop
imul
les
add
scas
adc
jnp
outsb
push
aad
xor
push
fsub
sbb
xchg
xchg
xor
notl
or
cmp
cs
aaa
repnz
mov
out
bswap
pop
push
push
andl
cmp
xchg
ret
das
mov
cmpsl
mov
jae
add
push
pop
scas
sbbb
shrl
mov
outsl
lcall
pop
pop
xorb
mov
push
add
stos
xchg
cwtl
fcoml
pusha
into
bound
cltd
push
loopne
imul
jb
jp
sub
jb
inc
mov
in
mov
scas
mov
push
stos
xchg
hlt
dec
mov
mov
imul
in
jge
cmp
jp
pop
lods
test
sub
pusha
out
popa
mov
inc
call
xor
or
push
test
xor
xor
test
ja
in
dec
call
adc
lret
xor
push
or
inc
jmp
xor
data16
ljmp
sbb
mov
pop
outsl
xchg
stos
fcoms
andl
frstor
pop
movsb
addr16
add
adc
lods
push
addr16
dec
push
push
aas
push
pop
add
rcr
shlb
jl
cmp
fsubr
or
pop
rclb
ret
outsl
dec
arpl
push
lock
add
pop
minps
xchg
les
xchg
cmp
adc
push
and
dec
mov
sbb
pop
or
or
sbb
or
stc
aad
iret
sub
mov
mov
sbb
jecxz
or
roll
lods
insb
hlt
inc
sbb
dec
lea
jg
or
pop
jle
into
test
push
ss
jbe
cvtps2pi
push
push
outsl
add
push
push
sahf
push
enter
cmpsl
subb
mov
pushf
pop
xchg
stc
push
shrb
mov
dec
out
pop
out
mov
ss
sub
inc
rorb
imul
roll
repnz
int
or
inc
mov
fs
mov
scas
movsl
push
or
sbb
inc
jae
mov
sbb
dec
call
in
jmp
je
mov
gs
cmp
cli
pop
pushf
mov
int3
pushf
xchg
divb
lock
and
repz
iret
pop
xchg
mov
jp
jae
xor
es
js
fadds
pop
xor
mov
jae
es
push
data16
shlb
mov
pushf
int3
lock
jp
mov
aad
mov
push
cmp
std
sub
cmp
shlb
jne
adc
add
aaa
and
pop
int3
rcll
scas
push
adc
pop
cmp
pop
faddl
dec
jge
rolb
xor
shll
push
xchg
or
lea
xchg
xor
mov
adc
cld
pop
sti
ja
dec
jp
sbb
shl
add
iret
mov
mov
mov
cs
push
pop
add
lret
adc
jnp
out
mov
setle
call
pop
insb
or
dec
inc
es
push
out
dec
inc
sub
push
jb
dec
adc
jns
mov
adc
mov
inc
or
ljmp
sub
or
xor
push
enter
and
fisubrs
pop
insb
test
aam
jmp
idivb
push
pop
pop
cmp
cmp
push
int
mov
pop
mov
idivl
or
mov
pop
ret
jne
push
call
mov
filds
stc
jno
ret
fistpll
nop
dec
test
int
gs
outsl
mov
mov
stc
lahf
xchg
lahf
mov
prefetch
lahf
mov
jnp
cmpsb
int
jae
sub
cs
leave
fisubl
loop
or
or
fbld
jmp
fcmovbe
jecxz
push
mov
jo
cmp
sub
push
dec
and
fiaddl
cmp
xchg
mov
bound
aaa
bound
inc
iret
push
fsts
inc
repz
adc
sbb
jne
aaa
mov
shll
nop
int3
clc
cmpsb
or
out
xor
movsl
jmp
inc
pusha
pop
xor
push
roll
cmp
loopne
sbb
je
out
jb
dec
inc
fs
rorl
inc
mov
or
pop
dec
sbbl
std
shrb
sub
les
or
mov
add
dec
mov
xlat
subl
jbe
and
out
mov
scas
arpl
outsl
push
test
and
std
outsl
aaa
ret
repnz
fdivrl
les
xor
or
xchg
jp
in
ljmp
pop
pop
js
cmpsl
aad
ja
mov
adc
push
mov
push
lds
push
stos
aas
cmp
jo
cmp
xchg
and
sub
call
jo
shll
add
imul
mov
sub
sbb
cmp
js
test
push
mov
int
leave
inc
xor
adc
mov
hlt
lods
xor
sbb
jno
xchg
push
sbb
leave
push
jmp
bound
cmp
push
lds
sub
aaa
dec
negl
inc
cmpl
pop
rorl
cmc
out
mov
jcxz
or
dec
dec
das
dec
lock
pushf
ss
cmp
inc
inc
jne
addr16
and
and
mov
inc
cltd
push
mov
sbb
mov
fiadds
fcoms
test
repnz
loope
cli
or
mov
add
sub
mov
loopne
sub
push
or
pop
adc
mov
subl
lcall
stos
notb
jno
add
jae
cmp
out
cmp
mov
cli
or
cmp
fwait
pop
ret
jnp
inc
leave
mov
mov
jns
dec
jecxz
fsubp
mov
xchg
sbb
pop
mov
and
sub
and
adc
cwtl
pushf
aad
lock
dec
es
xor
sti
das
daa
movsb
test
add
aam
cmp
inc
dec
icebp
leave
popf
jno
in
jbe
ljmp
xchg
cs
ljmp
jmp
jnp
fidivrl
jmp
adc
rcrb
pushf
das
and
jp
sub
mov
in
pop
fwait
iret
mov
cmp
jb
dec
sub
push
lea
sbb
cmp
cmp
sahf
mov
adc
mov
jge
xlat
scas
aaa
test
stos
push
cwtl
lret
push
in
mov
sub
inc
dec
jnp
jae
popa
adc
push
push
push
pop
adc
cs
out
scas
pop
inc
mov
insb
mov
xchg
dec
push
iret
add
fistpl
add
mov
inc
sbb
and
inc
mov
stc
lret
dec
or
or
insb
mov
lcall
ret
in
fwait
sbb
jle
mov
ret
icebp
push
add
jl
cmc
xchg
std
mov
lods
mov
popa
add
adc
out
sbb
xchg
pop
fisttpl
push
pop
fistl
jg
adc
mov
mov
enter
add
call
data16
jle
mov
lcall
xchg
rorb
test
adc
dec
mov
mov
add
mov
das
add
add
addr16
pusha
outsb
push
nop
mov
inc
movsl
dec
xchg
jl
lea
vpcmpeqd
insb
fs
sbb
push
push
mov
outsb
or
aad
cmpsb
xchg
dec
ret
int3
inc
mov
xchg
bound
and
insb
scas
mov
adc
xabort
mov
daa
ds
push
dec
sub
mov
test
push
mov
lret
sbb
inc
les
adc
mov
mov
in
popa
out
push
scas
jmp
push
mulb
jb
ret
and
jge
or
inc
push
xchg
inc
ljmp
flds
jmp
mov
add
in
mov
scas
fsubr
pop
mulb
je
jl
or
dec
loop
pop
orl
pop
and
in
mov
leave
pop
inc
adc
fists
mov
cmp
ret
imul
daa
jle
add
mov
jmp
adc
mov
xor
repz
rcll
iret
or
hlt
std
jbe
cmpsb
scas
jne
add
mov
pushf
xor
adc
mov
mov
jb
mov
cmp
xchg
dec
adc
out
xchg
loop
mov
faddl
sbb
mov
xchg
incl
mov
jl
outsl
outsb
data16
mov
sub
fisubrl
push
push
add
mov
das
adc
mov
test
outsl
and
add
jo
pop
jmp
test
lret
sbb
jle
jp
xor
jg
in
cmp
inc
loop
sbb
iret
sbb
jg
aad
and
dec
clc
lods
dec
xchg
popf
dec
jo
xchg
inc
sbbl
sub
gs
dec
mov
lds
jbe
insb
loope
add
stos
cmp
mov
outsl
xchg
pop
or
nop
aaa
sbb
or
push
in
movsb
in
stc
ss
lods
ret
cli
movsb
sbb
xor
pop
fstps
and
mov
outsl
inc
gs
clc
rcrl
jbe
nop
push
ret
into
movsb
ljmp
or
push
shrb
mov
lahf
fmul
jbe
aam
push
imul
out
push
clc
pusha
rorb
cmp
lcall
popa
lahf
hlt
leave
sbb
add
hlt
mov
xchg
out
lock
ret
test
xchg
push
scas
pushf
enter
repnz
push
clc
loope
inc
stos
cmp
xor
cmc
mov
lret
push
rorl
push
int
sbb
push
push
mov
push
loop
pushf
std
inc
pop
rcll
ljmp
mov
js
imul
cld
dec
dec
lea
addr16
mov
adc
fiaddl
sub
lret
mov
iret
inc
mov
push
xchg
dec
pop
mov
cmpsl
sbb
ret
das
dec
cmc
push
adc
pop
sbb
out
adc
push
repnz
xchg
pusha
nop
sub
inc
and
push
adc
repz
data16
in
sbbb
jecxz
xor
and
lea
in
pop
dec
loope
pop
incb
mov
lret
cltd
popf
xor
or
mov
mov
xchg
rol
dec
in
mov
notl
aas
sarl
leave
adc
sbb
in
mov
cmp
sub
pop
xor
int3
test
jno
jae
mov
es
mov
mov
sbb
sub
ja
imul
das
dec
popf
insl
in
ljmp
in
fdivp
rorb
dec
int
lods
mov
hlt
addl
sbb
mov
insb
adc
pop
push
inc
gs
add
arpl
loopne
mov
or
divb
jecxz
xor
xlat
in
jae
fs
ud2
mov
sub
mov
insl
mov
mov
mov
mov
iret
jl
out
mov
ljmp
sub
add
and
out
mov
icebp
mov
pusha
in
pop
cwtl
dec
fwait
inc
loopne
movsl
sub
adc
xor
push
aaa
xor
dec
lea
or
iret
xchg
dec
int3
pop
pop
jmp
adc
push
xchg
shll
jo
sbb
shll
iret
push
je
sbb
and
shl
add
inc
imul
xchg
lret
mov
and
cmc
rorl
outsb
mov
mov
push
inc
inc
ss
and
jmp
daa
xchg
and
and
imul
dec
dec
arpl
jge
scas
loope
jl
call
pop
push
cwtl
cmp
ffreep
jae
scas
jg
lcall
ljmp
cmc
xor
fwait
jno
div
mov
pop
cmp
xchg
std
in
jno
pop
test
xchg
jge
repnz
mov
dec
mov
inc
filds
mov
push
sub
and
push
sub
enter
xor
repnz
into
gs
packssdw
cltd
xchg
xchg
xchg
xchg
cs
lahf
lock
cmp
popf
add
lret
stc
xor
cmpsb
dec
pop
cmp
das
mov
mov
jge
cmp
addr16
mov
push
test
xor
or
js
add
js
and
add
ss
dec
push
xor
fildll
test
mov
aad
adc
pop
pop
adc
adc
shll
notl
sub
ret
mov
add
or
imul
push
push
fsubrp
fcoml
mov
js
xchg
xchg
fwait
cmc
lret
test
and
rorl
mov
and
insb
xchg
xor
push
daa
mov
and
or
lods
loopne
rcr
jle
fcmovnb
sub
push
rcrb
imul
pusha
enter
cmpsb
js
jbe
es
push
mov
cld
jae
jmp
xchg
popa
lds
repnz
lahf
sbb
inc
out
xlat
pushf
cmp
mov
repnz
xchg
lea
lds
jae
mov
lahf
jae
arpl
mov
pop
stos
hlt
mov
fistps
jb
pop
mov
pop
xor
and
inc
xchg
and
out
lds
gs
fists
xor
cmpsb
sub
add
aad
inc
ret
dec
cltd
lock
popf
adc
icebp
jno
ret
inc
mov
add
jmp
push
popf
cwtl
xor
pop
push
jb
pop
aas
sbb
mov
stos
adc
pop
and
push
jp
cmp
test
les
ljmp
aas
jno
jae
pop
xchg
mov
sub
lret
stos
cmp
cmp
sub
add
mov
push
push
rorl
push
cmp
stc
cmpsl
pop
mov
sbb
pushf
jle
cmp
scas
jnp
repnz
xchg
mov
mov
les
pmaxub
jle
jge
jns
iret
mov
in
sub
and
dec
inc
cmp
addr16
lods
sahf
cwtl
popa
loope
pop
or
push
ficoms
ss
cld
jp
push
imul
pop
ret
cmp
outsl
sbb
lahf
cmpsb
popa
push
test
dec
addl
fisubrl
push
adc
std
jmp
std
push
xchg
aam
es
xchg
or
pop
arpl
out
mov
inc
sub
sahf
sub
test
push
shlb
cmpsb
sub
gs
jne
cmpsb
adc
mov
add
cmp
and
inc
mov
das
loope
cmp
dec
nop
gs
lods
std
mov
stos
repnz
pop
inc
das
int
insb
push
jbe
lcall
cmp
rcll
dec
add
aaa
dec
sub
add
out
fiadds
cmpsl
mov
sub
pop
ret
jmp
lahf
push
stos
mov
xor
mov
pop
sub
nop
int
std
inc
xor
or
out
movsl
loopne
push
test
mov
aaa
scas
fidivl
leave
insb
xchg
scas
ds
int
cmpsl
lret
frstor
cmp
aad
sub
test
xchg
jmp
je
push
mov
xchg
inc
ror
lret
fst
shrb
cmp
mov
pushf
into
push
xchg
sub
into
jp
sbb
rcrb
divb
mov
mov
xlat
mov
mov
lahf
ror
xor
test
pop
lods
jmp
rcr
and
fildl
outsl
jno
push
clc
pop
inc
mov
iret
sbb
je
inc
xchg
xor
push
fisttps
fisttpl
xchg
inc
std
and
icebp
jmp
sub
out
dec
or
popa
jge
pop
ss
dec
sub
mov
mov
fidivl
mov
pop
cwtl
and
jne
sub
aaa
loop
mov
add
outsl
les
fmuls
push
mov
xchg
clc
movsb
lfence
imul
pop
cmp
jp
nop
aas
adcb
lcall
sbb
in
jge
push
les
jbe
and
insb
in
aaa
xor
pushf
out
sbb
mov
inc
mov
orl
ficoml
out
or
stc
mov
pushf
add
test
mov
xor
cmp
add
addr16
sub
out
test
sub
leave
dec
gs
and
sbb
add
xchg
out
inc
mov
popa
jle
iret
in
xor
jl
mov
je
sarl
xchg
inc
fdivrs
imul
fnsave
data16
hlt
stc
cmp
mov
aas
sub
addb
mov
icebp
jbe
lahf
mov
mov
mov
das
mov
and
jge
hlt
cmp
sbb
incl
and
dec
dec
and
pop
cmp
push
in
inc
lret
inc
adc
adc
lock
cmp
leave
mov
das
sahf
adc
jge
adc
mov
es
mov
ss
adcl
mov
movsl
mov
add
in
iret
mov
loopne
push
xchg
popa
jnp
sub
mov
fiaddl
divb
jmp
adc
dec
jecxz
in
scas
cmp
xchg
lret
pusha
mov
out
dec
stos
out
xor
arpl
repz
je
cmpl
mov
ja
add
sbb
push
lock
test
call
pop
adc
test
movsb
pop
add
and
cmpsb
mov
cmp
lea
outsb
andb
dec
and
iret
adc
push
mov
scas
int
sbb
ret
arpl
iret
jae
pop
pop
mov
inc
push
push
scas
add
xchg
adc
repz
cmp
imul
push
xchg
sub
insb
mov
test
sysenter
test
adc
pop
inc
stc
mov
and
xchg
in
dec
aam
jae
jns
pop
in
xor
dec
hlt
xlat
dec
add
out
cmp
in
frstor
xor
inc
add
sbb
data16
or
adc
out
aam
sarl
cmp
test
fiadds
les
mov
xor
gs
mov
lcall
sbb
nop
jb
push
ffreep
cmpsb
test
xchg
sub
mov
inc
mov
pushf
mov
ret
jp
imul
pop
xchg
lldt
cmp
mov
in
out
stos
lea
jbe
pop
fnstenv
xchg
out
mov
std
nop
xchg
je
pop
pop
out
jne
nop
xor
cs
and
fs
negl
shl
mov
adcb
cmc
in
jmp
pop
cld
imul
movsl
cmpsb
and
xchg
sbb
or
mov
jns
jae
rolb
flds
mov
pop
push
pop
call
outsl
hlt
xor
or
adc
lods
insb
fmuls
in
push
dec
and
jle
dec
sbb
iret
mov
js
fisttpl
arpl
cmp
inc
xchg
and
dec
dec
rcr
dec
xor
stc
aam
movsl
cmp
bound
stos
lods
popa
and
inc
xor
fistl
mov
mov
fs
push
in
ss
jnp
and
inc
sbb
stos
shlb
ret
mov
test
in
mov
push
daa
mov
inc
ficoml
fcompl
dec
inc
incb
xlat
xchg
data16
into
and
testb
push
bound
loop
aas
jge
mov
sbb
imul
rorl
pop
mov
fcompl
ret
dec
cwtl
xchg
fs
leave
scas
add
xor
mov
jge
cmp
stos
pop
loop
pusha
out
nop
or
scas
mov
push
adc
cs
idivb
mov
pushf
rclb
mov
das
loopne
inc
mov
aad
xor
rcll
mov
xor
sub
loop
popa
lret
jnp
lock
loop
mov
pop
jb
out
jg
ds
in
push
adc
orl
fildll
rclb
jle
std
add
movsl
insl
fs
xor
sub
mov
scas
popf
fisubs
cld
fisttpll
sarb
loope
lret
dec
adc
adc
sahf
push
repnz
cwtl
cmp
and
and
adc
icebp
add
and
pushf
dec
cld
sbb
ret
jl
push
icebp
dec
xchg
call
push
out
adc
ss
arpl
mov
sbb
pop
and
aam
inc
popf
and
idivb
adc
sbb
cmp
fcomps
xchg
add
pop
dec
jo
mov
pushw
in
pop
mov
and
xchg
xchg
jle
int3
rorb
inc
nop
mov
add
pop
dec
lret
jmp
add
jb
push
mov
mov
xchg
in
mov
xor
cs
sub
movsl
or
popf
mov
xchg
repz
hlt
jg
mov
fdivs
dec
aas
stc
xor
stos
sahf
stos
xlat
mov
and
jae
push
lods
addr16
pop
xor
push
sub
pop
mov
jge
es
adc
push
data16
mov
pop
jne
fidivs
shll
add
call
pop
cmp
xchg
stc
add
in
mov
gs
sbb
xchg
mov
cmpb
sbb
and
sub
push
cwtl
push
cmp
jns
or
xor
jp
iret
sub
das
jp
xchg
mov
add
jae
and
inc
dec
push
push
dec
and
inc
cs
cmp
pop
insl
orl
jns
xor
pop
xchg
cld
ljmp
sbb
lcall
mov
popa
std
jo
jmp
xchg
or
inc
bswap
addl
arpl
fmuls
and
push
test
adc
jg
stos
popa
lods
push
into
sub
cmp
shll
xor
xor
mov
test
push
sub
mov
xchg
xchg
inc
sbb
icebp
mov
cli
imul
and
loope
cld
bound
ljmp
xchg
pop
in
ret
mov
add
push
ret
adc
arpl
js
cmp
pop
inc
mov
xchg
sub
cmc
xchg
sbb
cmp
push
sbb
aad
xor
sbb
fists
jmp
xchg
cmp
lahf
mov
push
mov
jge
cmpl
jbe
addr16
mov
loope
dec
sub
xchg
pusha
lea
shlb
pcmpgtb
sti
push
xchg
cmp
mov
or
cltd
jb
push
mov
jns
scas
jp
pusha
arpl
aam
fiadds
lods
lods
ja
dec
mov
popf
dec
sarl
pop
out
les
pop
push
icebp
jg
adc
dec
rorl
adcb
sti
insl
adc
mov
movsl
xchg
mov
mov
sbb
mov
sub
loop
dec
mov
int
xchg
pop
jmp
scas
cmp
xchg
mov
je
pop
dec
arpl
mov
fimuls
dec
aas
aad
xchg
adc
adc
out
sahf
in
outsl
imul
jmp
dec
fcmove
push
inc
rclb
cmpsl
xlat
sub
popa
cmpb
arpl
int3
ljmp
cmp
aad
icebp
cld
dec
push
xchg
mov
xor
cmp
xor
pop
sahf
jle
or
fs
and
rclb
daa
xchg
movsl
and
leave
repz
test
inc
test
pop
mov
daa
cmp
sub
mov
in
cmp
int3
mov
mov
inc
mov
enter
mov
outsb
ret
in
cmp
inc
or
sahf
sub
pop
lcall
je
sub
sbb
out
scas
outsb
mov
xchg
sti
push
push
xchg
dec
jmp
and
mov
hlt
sub
add
pop
xchg
and
jp
push
loop
loop
mov
lcall
xchg
push
fldenv
orb
test
repnz
rcr
xchg
test
jae
stos
pop
mov
shrb
arpl
test
in
fldl
mov
jp
xchg
or
repz
sub
jp
sbb
inc
sub
fsts
pop
push
jns
addr16
add
xchg
push
into
push
dec
dec
dec
mov
repnz
pop
cs
orb
xor
divl
shll
imul
ficomps
rclb
jae
jp
mov
enter
loop
cmp
dec
lock
push
shlb
pop
outsb
ljmp
pusha
nop
loop
inc
out
pop
popf
clc
inc
mov
add
fldl
shll
lods
add
jo
lods
sbb
jns
cmpsb
xor
pop
stos
aad
in
idiv
mov
je
cld
sub
int3
lods
out
push
ffreep
jecxz
out
pushf
adc
mov
mov
rcrb
adc
call
jne
xchg
mov
shll
mov
nop
test
sbb
pop
std
inc
stos
addr16
js
cmp
ja
pop
sbb
js
lock
lea
roll
int3
js
das
jns
inc
cs
dec
xchg
fdivrs
movsl
aam
or
sub
repnz
dec
mov
call
in
test
jno
loopne
lods
enter
or
test
ret
rorl
mov
sbb
lcall
mull
outsb
popf
sub
mov
pop
or
mov
call
ss
jns
or
add
loope
inc
lahf
dec
mov
sub
sbb
fsubrp
jns
cmpsl
ja
dec
and
es
sahf
ljmp
lahf
rorl
or
mov
pop
push
or
jl
mov
int3
lods
sub
mov
cmp
jmp
inc
pop
pop
es
xlat
cmc
cmpsb
mov
lcall
xchg
lea
xchg
lods
push
jns
jge
test
mov
xchg
adc
jmp
mov
sti
cmpsb
popl
sbbl
sub
push
pop
and
jecxz
ror
rorl
cmp
fwait
loop
outsb
or
sub
in
push
daa
dec
inc
lret
nop
xor
and
movl
xor
mov
sbb
pop
mov
lea
jl
pop
xchg
lcall
popa
or
lds
cmp
and
inc
pop
mov
outsb
push
stc
stos
lcall
nop
test
repnz
and
mov
xchg
sahf
or
cmc
push
sub
adc
insl
xor
hlt
sbb
cli
add
repnz
aam
rclb
adc
jecxz
stos
xchg
lods
mov
cmc
mov
outsb
jecxz
in
notb
pop
in
insb
pusha
mov
cmp
sti
ret
mov
jl
adc
mov
pop
or
inc
mov
sbb
dec
jb
lret
sbb
and
mov
pop
lahf
mov
shll
cwtl
mov
mov
push
pop
fstpt
adc
sub
mov
hlt
mov
cli
in
jg
enter
dec
adc
ret
add
or
mov
nop
push
cmp
mov
mov
loope
mov
mov
mov
inc
fwait
popf
lret
loop
mov
shrl
mov
lock
xlat
sbb
arpl
ds
mov
mov
pop
sbb
inc
adc
inc
sbb
xor
push
iret
stc
adc
add
pop
cmp
or
jp
fwait
out
rclb
jmp
fwait
cmpb
add
cmp
pop
ret
int3
shrl
dec
pop
imulb
dec
sahf
and
mov
or
fcmovb
insl
jl
hlt
pusha
pop
js
dec
mov
cs
lods
and
adc
xchg
pop
in
repnz
mov
xor
arpl
and
mov
mov
fcmove
adc
inc
jnp
daa
pop
cmp
scas
or
sub
and
jb
roll
sarl
pop
xchg
push
icebp
pop
inc
push
popf
xchg
push
xchg
inc
and
pop
loopne
jmp
loopne
cli
hlt
lret
loopne
push
cmpsl
pop
mov
daa
jl
xchg
sbb
adc
dec
cmp
mov
pop
shll
fwait
scas
outsl
cmpsl
inc
lret
test
test
add
pusha
inc
mov
out
mov
mov
ja
test
sbb
int3
clts
ds
pop
mov
fwait
mov
shlb
mov
mov
fdivl
ficomps
push
adc
popf
in
and
cld
nop
int
sub
or
scas
mov
add
mov
cmp
add
and
shlb
pop
add
imul
lods
pop
sub
mov
pop
cmp
pop
fs
leave
and
in
loope
jns
dec
sub
out
mov
cwtl
mov
push
imul
push
push
call
fs
dec
or
sub
jecxz
test
jno
add
pop
enter
mov
cwtl
mov
push
inc
rep
jb
ljmp
cmp
fdivrs
and
leave
pop
and
push
dec
clc
sub
dec
jg
mov
es
test
dec
pop
inc
pop
fstl
pop
iret
dec
push
in
inc
shlb
dec
repnz
sahf
and
xchg
imul
movq
cs
mov
jns
or
cmp
add
in
arpl
imul
jbe
dec
aaa
das
loope
pop
sub
push
xchg
subl
dec
sbb
mov
insb
jb
scas
out
xchg
jb
xchg
cmp
fnstcw
xchg
dec
in
xchg
sbb
dec
jne
pop
scas
xchg
loope
jo
fisubrl
pminub
cli
ss
jle
jns
inc
xlat
lods
jo
jge
cmp
aaa
sbb
popa
popa
into
rol
sub
xor
dec
fdivrs
aad
pop
and
cltd
pushf
adc
popf
stc
or
daa
add
clc
pushf
shrl
frstor
ds
add
std
push
adc
mov
enter
sub
mov
iret
std
push
push
dec
scas
and
mov
adc
xchg
int
pcmpeqd
push
sarl
arpl
xchg
ret
enter
xlat
jg
cltd
xor
xlat
nop
cwtl
mov
repz
cwtl
enter
xlat
mov
push
mov
cmp
xchg
mov
sbb
data16
mov
nop
fs
jmp
stc
mov
mov
mov
pop
lret
das
xor
sbb
adc
xlat
pop
push
jno
fimull
test
out
cmc
xchg
aad
mov
and
mov
pushf
stos
lock
push
subb
dec
je
push
cld
insb
sbb
insb
loopne
mov
std
sub
repz
xchg
fstl
in
insl
cwtl
jns
sub
push
fdivl
mov
shrb
lret
or
in
daa
daa
cwtl
pop
mov
pop
lcall
and
sbb
jbe
imul
loope
scas
mov
js
cltd
rorl
sub
nop
sarl
add
push
lcall
xchg
dec
jge
sub
aaa
adc
jnp
ljmp
testb
xor
movsl
ss
dec
push
lods
outsl
pop
xchg
pop
pusha
cwtl
scas
ljmp
mov
imul
mov
push
test
push
or
cwtl
stc
mov
outsl
dec
adc
loope
mov
mov
mov
lahf
insl
xchg
and
or
inc
idivl
out
add
or
adc
xor
addl
lock
lret
mov
push
iret
mov
clc
lock
mov
mov
insl
dec
adc
xchg
data16
or
adc
add
jns
enter
dec
and
xchg
and
sub
dec
mov
shrl
dec
fnstenv
pop
scas
lahf
test
pop
enter
rcl
dec
je
inc
ja
stos
lock
insb
add
mov
sub
jno
das
push
add
rorb
push
ret
add
jge
jnp
push
and
pop
jbe
push
vpsubw
sti
sub
sbb
pop
or
xchg
sbb
movsl
adc
adc
js,pn
xchg
call
fcmovnb
sub
cltd
cmp
rcr
imul
lods
jae
push
cli
dec
cld
jae,pt
mov
push
push
stc
sbb
xchg
inc
pop
xlat
bnd
rcll
sti
popa
dec
popa
popa
outsl
cmpsl
pushf
mov
xchg
rcrb
push
fsts
cmc
dec
adcb
fstpl
sub
sbb
fcomi
jnp
js
ret
repnz
les
cwtl
ret
lds
iret
sbb
adc
and
or
mov
mov
cli
mov
mov
jecxz
clc
popa
test
mov
ss
pop
test
add
jmp
int3
out
js
mov
aas
fwait
leave
push
test
cmp
pop
mov
arpl
lahf
int
adc
bound
cmp
andl
jle
or
icebp
aad
cld
adc
sbb
call
pop
and
mov
hlt
stc
pop
xor
push
xchg
das
fwait
mov
das
ljmp
adc
ret
ds
mov
and
inc
add
icebp
inc
out
ljmp
mov
jo
pop
les
pop
push
dec
push
sub
xchg
mov
jae
lods
cs
push
outsb
notl
mov
aas
sub
int
pop
sbb
inc
movsb
mov
aam
lds
or
sub
fnstenv
shl
push
adc
xchg
movsb
enter
sbb
dec
dec
insl
jns
add
mov
cmp
in
push
jae
mov
inc
push
pop
scas
push
hlt
lret
pop
outsl
mov
arpl
fsubrp
adc
loopne
fcmove
pop
cli
inc
fistpll
icebp
sub
add
sbb
mov
in
cmp
jo
or
add
es
les
jns
mov
adc
dec
cmpsb
mov
mov
les
mov
or
icebp
jno
ret
xchg
in
das
dec
aad
cwtl
test
xchg
sti
leave
mov
sub
push
fcoms
pop
push
mov
mov
adc
ja
mov
or
call
add
filds
mov
out
mov
loop
out
mov
movsl
repz
data16
xchg
pop
movsb
mov
repnz
inc
shll
or
inc
lods
pop
test
shlb
dec
jg
adc
mov
push
sbb
je
movsb
in
shl
jno
loopne
add
cld
movsb
xchg
inc
cmp
and
fiadds
iret
mov
insl
arpl
fsts
ret
int3
roll
pop
loopne
outsl
adc
pusha
pop
dec
dec
ss
stc
mov
jb
in
pusha
sub
mov
mov
pop
test
push
ficoml
cs
dec
mov
and
je
pop
xorb
mov
adc
mov
adc
fcomps
xor
mov
add
xchg
mov
outsl
mov
push
xchg
shll
dec
int3
flds
xorl
jb
jbe
jne
xor
fnstsw
add
rcll
pop
loop
das
ljmp
fbld
push
icebp
ds
hlt
out
xchg
pop
ja
jbe
movsb
jg
lea
adc
mov
je
aad
scas
fcoms
test
test
cmp
and
add
xchg
xchg
xor
dec
and
inc
cmp
out
sbb
push
or
sub
dec
or
push
or
cld
adc
mov
fcmove
fcmovne
mov
cmp
test
rcrl
mov
jnp
fadds
cmp
lahf
jl
shr
inc
loopne
cmc
test
loop
rolb
out
int
bound
and
pushf
das
aaa
notl
xchg
jecxz
mov
cld
xchg
mov
adcb
clc
ret
and
xor
xlat
xlat
mov
insl
mov
mov
cmp
jo
dec
rcr
outsl
pop
jnp
mov
push
mov
aam
push
adc
cmp
add
cwtl
inc
or
test
sarb
xorl
ret
mov
adc
mov
subb
call
cmp
sbb
icebp
inc
jo
bound
push
or
xchg
cmp
insb
pop
test
repnz
inc
jg
jge
iret
jge
cld
sub
ficoms
mov
aam
cmc
push
sub
xlat
jbe
fldl
pop
cli
rcrb
adc
add
mov
cmp
mov
xorl
out
mov
mov
mov
sbbb
cwtl
mov
cmp
into
scas
sarb
les
jle
xchg
inc
inc
loopne
aaa
fisubs
out
mov
arpl
dec
movsl
pop
jbe
aam
outsl
out
ljmp
or
in
push
pop
fwait
lcall
xchg
pop
ss
stc
mov
inc
clc
bound
add
pop
add
data16
add
dec
sarb
add
xchg
push
stc
lret
pop
stc
cmp
ljmp
outsl
push
sbb
xchg
rcl
sub
and
or
insl
push
dec
not
inc
fwait
sbb
xchg
pop
std
mov
cld
xchg
pop
xchg
out
cmpsb
loop
push
gs
push
dec
cmp
lahf
test
test
cmpsb
roll
push
sbb
in
js
push
lods
mov
mul
in
addr16
mov
call
mov
mov
push
xor
cld
push
lahf
and
and
and
xchg
das
mov
and
xor
inc
mov
dec
dec
sbb
add
xchg
in
aaa
std
fldln2
xchg
fsubrs
mov
das
push
cmpsl
pop
orb
add
cmp
loop
out
push
loopne
push
icebp
fstp
in
mov
jp
or
adc
lock
mov
insl
dec
mov
xchg
pop
lods
add
clc
int3
aam
sti
das
stos
sbb
stc
inc
std
jmp
cltd
mov
fst
jnp
inc
lds
xchg
jl
lcall
cmp
insl
cli
inc
insl
sbbb
cwtl
lea
add
xor
stos
jecxz
xchg
xor
fbld
mov
mov
lret
in
xor
push
pop
in
pop
and
dec
sbb
mov
jo
mov
fimuls
and
fwait
inc
bnd
in
imul
enter
adc
lahf
enter
mov
xor
int3
dec
aas
xchg
int
push
insl
adc
or
or
scas
std
int
pop
mov
call
cmp
xchg
mov
add
add
cmp
jecxz
mov
sbb
dec
lds
stc
fmuls
lahf
mov
cmp
ds
les
jne
aas
or
pop
pop
cmpsb
inc
inc
jp
jbe
fidivrs
mov
pusha
cmp
scas
stc
adc
sbb
adc
mov
popa
inc
xor
push
sub
pusha
push
out
cmp
inc
fisubrl
sbb
mov
cld
push
cld
pop
test
xor
mov
scas
mov
xchg
or
into
sub
jno
pop
sub
mov
and
scas
enter
push
xlat
xor
negl
xchg
or
test
pop
or
xchg
insb
xchg
lock
and
movl
dec
fsubrl
mov
mov
movsb
aas
insl
ja
pusha
movsb
imul
std
mov
out
pop
jge
pop
sub
push
lds
mov
outsl
or
jns
mov
pop
sub
gs
mov
adc
test
and
sub
and
shll
pminsw
clc
cmpsb
out
inc
es
setb
sub
push
push
movsl
notb
dec
das
fucomp
add
jno
insw
out
mov
pop
scas
inc
andb
xor
push
cmp
add
or
dec
or
addr16
cli
add
rcrl
std
and
sbb
push
adc
insl
or
xor
xchg
gs
mov
outsl
and
and
jge
adc
repz
loope
mov
aam
and
push
inc
pusha
xor
repnz
push
icebp
movsl
xorl
jbe
mov
adc
int3
sti
push
aam
in
inc
xchg
sahf
xchg
xor
lock
mov
movsb
mov
imul
inc
xchg
mov
dec
xchg
push
dec
sbb
mov
jbe
shll
xchg
pusha
xor
mov
and
arpl
cltd
jge
mov
cmpsb
mov
mov
sbb
lahf
mov
inc
jl
jmp
popa
aam
shll
pop
ljmp
ss
jbe
dec
mov
jno
push
mov
jno
daa
push
imul
arpl
testb
xor
or
push
das
clc
sbb
cmpsl
adc
sbb
mov
jo
or
sub
adc
sub
enter
clc
push
enter
mov
dec
and
in
pop
jge
imul
adc
dec
fstpl
dec
mov
inc
xchg
xchg
roll
mov
call
xchg
pusha
push
pop
hlt
addb
movsb
inc
cmp
int3
dec
mov
lock
sub
cmp
add
and
adc
out
jl
out
nop
sbb
fimuls
mov
test
xchg
push
movsl
into
sbb
add
addb
cld
jmp
fs
ficoms
ficomps
jne
mov
inc
cwtl
xor
mov
int3
adc
xor
sub
cltd
cmc
aas
xor
mov
mov
mov
or
jmp
sti
sub
insl
fcmovb
fnstcw
jo
cmp
or
es
lea
inc
sbb
sub
add
cmp
sub
jb
addr16
int
mov
push
mov
dec
pop
sub
cmpl
and
rcll
cmp
lcall
mov
jl
aad
in
cmp
in
sti
sub
pusha
inc
push
daa
xor
shlb
adc
and
adc
outsb
xchg
push
mov
push
mov
jo
cs
arpl
mov
test
repz
ljmp
test
and
in
mov
pop
and
das
out
add
push
leave
cs
pop
repz
sbb
orl
pop
xchg
stos
mov
int
and
imul
pop
das
cmp
int
xchg
cmp
bound
loope
push
adc
push
mov
es
in
scas
jmp
iret
mov
aam
cmpsl
mov
jge
loope
test
shrb
negl
bound
jp
mov
shll
inc
xchg
dec
rcrl
and
mov
imul
add
add
imul
lret
int
push
sbb
jns
jmp
cmp
jno
push
std
mov
mov
xor
mov
shl
push
xchg
or
adc
sub
inc
ss
dec
mov
vpsubb
jnp
adc
cmpsb
xlat
out
lahf
mov
fldenv
mov
ljmp
sub
adc
inc
adc
inc
add
jb
bnd
out
clc
cmp
fwait
shlb
psubb
pop
fstpl
or
mov
inc
cld
add
aas
sbb
bnd
inc
mov
cmp
xchg
cmpsb
in
lods
and
sbb
out
add
dec
inc
in
leave
std
cmp
lds
dec
pop
jo
fsubp
pop
sub
mov
xor
jae
outsl
dec
push
cmp
subb
sub
arpl
xor
ret
int
sbb
and
adc
xor
and
sbb
pop
out
mov
push
pop
stos
orb
hlt
mov
out
out
stos
or
xchg
jno
push
or
xor
pop
sub
das
jmp
pop
mov
data16
jmp
lret
fwait
xor
inc
mov
cmp
cmp
mov
movsl
shll
push
hlt
dec
sbb
sub
jg
ret
loope
jae
ljmp
inc
movsb
pop
pop
or
inc
xor
out
pop
arpl
jae
leave
xor
xor
cmpsb
pop
lods
fildll
or
ss
out
jge
es
stos
adc
sub
pop
repz
fincstp
lods
data16
xor
pop
add
mov
clc
push
mov
inc
out
xor
xor
jno
fldcw
lcall
outsl
fimull
imul
fists
push
out
shll
xor
lret
aad
jge
lcall
cmc
jg
aad
mov
loop
adc
and
adc
jb
ret
mov
mov
pop
test
inc
fndisi(8087
jne
inc
lds
ret
mov
test
cltd
nop
cmp
es
xchg
jl
shll
cmp
adc
and
and
aas
stos
mov
jg
cmp
cmp
mov
cmp
out
push
jns
fstl
daa
xchg
in
insl
clc
cmp
nop
ljmp
loop
repz
and
test
or
push
loop
dec
jecxz
dec
push
jns
sbbl
imul
or
push
mov
fistl
cmp
lds
xchg
imul
xor
xchg
mov
ja
adc
into
hlt
jno
aam
or
add
jl
mov
ja
pop
add
frstor
push
cmp
outsb
xchg
iret
fs
sub
add
fidivrl
repnz
jns
popa
mov
ljmp
pusha
mov
inc
shrb
cmp
cwtl
cmc
cmpl
jbe
push
dec
xchg
mov
or
dec
jp
sub
into
lea
pop
push
popf
inc
bt
xchg
cmc
cmp
sbb
mov
sarl
sahf
sti
sub
rclb
pop
lock
hlt
sub
sbb
sarl
inc
push
and
ljmp
or
xor
iret
dec
gs
cltd
mov
jnp
mov
out
push
mov
div
andb
insb
mov
daa
lods
inc
test
jne
mov
bound
push
add
xchg
mov
fcmovnbe
dec
cmpb
and
sub
add
add
sub
out
sub
stos
scas
in
daa
iret
pop
jbe
repnz
scas
shrl
cmp
adc
gs
test
insl
dec
jnp
pushf
mov
test
dec
xor
popf
mov
mov
popa
daa
lock
aad
sbb
and
pop
shrl
enter
test
jo
lods
and
sub
je
ljmp
addl
idivl
outsl
adc
in
mov
push
ret
ret
adc
cli
aaa
dec
push
dec
mov
fadd
daa
push
shll
sub
mov
cmpsb
mov
rcrb
js
cmp
mov
jae
fisttpl
inc
mov
sub
mov
mov
jmp
in
call
inc
inc
xchg
pop
ret
pop
repz
popf
lcall
add
fidivrs
mov
xchg
cmc
add
mov
js
ficompl
nop
rclb
push
pop
jle
lret
inc
rorl
push
pushf
fcmove
lock
mov
and
pmullw
sub
add
rcll
jbe
js
fidivrl
outsb
out
jb
mov
and
dec
rclb
lds
jae
movsb
pusha
mov
mov
out
xchg
lahf
jp
mov
or
into
jmp
test
daa
loopne
xor
xchg
pop
into
add
mov
imul
sub
mov
sbb
dec
jns
loopne
sarb
pop
fdivr
and
push
cmp
out
outsb
repz
dec
mov
out
inc
fdivs
adc
cmc
sub
xchg
push
xchg
jg
xchg
sbb
push
pop
push
mov
and
mov
aad
mov
xchg
add
orb
jne
jl
add
hlt
inc
outsb
loopne
adc
addr16
xor
arpl
or
mov
sarb
mov
es
inc
aam
jno
mov
in
push
in
push
in
and
fildll
push
cmpsb
xor
lcall
in
sbb
cmp
xor
in
cmp
jno
xor
jecxz
mov
pop
push
aaa
bound
push
lds
jmp
or
dec
mov
xor
loope
adc
cmc
and
call
add
rcll
pop
mov
dec
sub
jmp
movsb
outsl
mov
daa
mov
jmp
xchg
jecxz
jmp
xchg
outsl
shlb
and
or
andl
cli
fwait
add
fnstenv
jg
adcb
sbbb
dec
adc
jge
xchg
clc
push
orl
push
iret
sbb
push
pop
addl
mov
push
lret
aas
adcl
add
push
mov
rcrl
rcll
push
daa
sbb
fbstp
sub
jns
sbbl
mov
push
leave
cmp
jb
ss
mov
popf
adc
add
std
dec
imul
cmpsl
lock
insl
cmp
outsl
pop
rcrl
imul
push
insb
in
sbb
or
aas
pusha
inc
push
dec
inc
jbe
cmpsl
adc
sbbb
je
push
push
sbb
jmp
inc
stos
test
sub
cmp
out
xchg
xor
jp
mov
cwtl
cmpsl
add
ja
dec
push
push
sub
insl
xor
std
hlt
mov
pusha
stc
inc
js
dec
into
xchg
xchg
add
sub
popf
jmp
sti
adc
pop
repnz
cld
out
xchg
ret
fmulp
dec
lock
cmp
and
sbb
loop
int3
mov
push
push
shl
lcall
lods
out
xchg
sub
push
jo
rcr
test
fwait
scas
push
pop
jae
mov
sbb
lret
outsb
jno
cmp
lahf
xchg
xor
bound
lret
inc
xlat
mov
adc
or
mov
outsb
cs
stos
mov
lret
jno
ja
push
shll
inc
or
pop
jne
jne
fdivs
icebp
pushf
mov
or
pop
out
sarb
push
cmc
inc
dec
js
lret
out
pop
adc
sbb
aaa
inc
or
adc
xor
pop
jmp
lret
in
mov
gs
or
push
xor
ror
add
jp
daa
jg
pop
fwait
or
mov
inc
icebp
insb
xchg
sbb
push
adc
and
movsb
clc
pop
movsl
or
sbb
jns
lret
lret
fcmove
rcrb
jle
je
inc
inc
sub
out
and
test
lret
jne
jns
js
lea
mov
dec
mov
sbb
xor
loopne
inc
adc
pop
cmp
ja
mov
lods
pop
test
add
pop
movsb
loopne
push
sahf
dec
pop
rol
mov
out
xchg
movl
push
pop
dec
inc
ficomps
mov
jbe
testb
out
push
mov
imul
jb
or
mov
push
add
fdivl
rorb
cmp
imul
outsl
lahf
orb
jp
mov
push
test
in
dec
dec
stos
jmp
and
pop
sbbl
push
inc
je
imul
pop
sbb
data16
push
hlt
fadd
dec
cmpsl
movsl
enter
out
mov
popf
mov
pop
sub
loop
push
adc
mov
and
cli
cltd
sbb
cmp
test
pop
mov
lods
sbb
inc
xor
xchg
push
outsb
inc
loope
jne
sbbb
push
test
adc
andl
hlt
jl
mov
and
cmpl
ss
into
jecxz
jmp
fcomps
scas
mov
add
test
es
dec
xor
mov
push
out
hlt
movhps
mov
jmp
ljmp
enter
inc
jno
mov
and
xlat
in
mov
xlat
add
dec
lret
mov
jge
jns
jecxz
jp
push
and
in
outsb
sahf
fidivrs
das
or
repnz
outsl
ds
out
je
rcll
and
jbe
test
xchg
out
jno
mov
fldl
sbb
imul
cmp
and
inc
pop
cmp
out
arpl
test
lds
sbb
or
xor
jb
shrb
pop
or
pop
fsubl
and
cld
cmp
mov
pop
add
out
and
into
pop
xlat
jnp
loop
push
jb
in
inc
movsb
std
popa
inc
jp
pop
movsl
cmp
incl
and
roll
pop
push
inc
mov
jge
cli
adcb
aad
ror
xchg
fiaddl
adc
clc
sub
addr16
sbb
mov
popa
xlat
sbb
mov
aas
mov
imul
adc
push
lock
out
pop
fsub
sbb
jae
dec
cmp
daa
or
cs
cmp
pop
push
lds
cmp
mov
xor
fidivl
mov
sub
xlat
xchg
sub
jae
jp
jns
cmp
push
xchg
or
imul
mov
jmp
arpl
nopl
imul
sub
xchg
sub
enter
mov
sub
test
int3
jp
push
xor
mov
shrd
ret
sbb
pop
cmp
es
roll
dec
push
test
imulb
roll
sbb
adc
sbb
or
sub
in
movsb
inc
inc
in
dec
xchg
ja
daa
bswap
outsl
dec
out
aas
adc
outsb
dec
sbb
xchg
and
ss
xor
stos
xlat
imul
jbe
pop
sub
mov
dec
mov
pop
dec
adc
and
xchg
push
cmpsl
push
pusha
iret
rorl
or
fiaddl
push
aaa
or
push
sbb
fcompl
stos
push
xchg
arpl
loope
and
in
adc
sbb
stos
lods
movsl
push
adcb
mov
aad
movswl
repz
mov
mov
decb
adc
arpl
test
imul
es
mulb
lock
mov
or
adc
dec
dec
jle
lret
leave
adc
pop
add
enter
int
dec
loopne
fdivrs
cmp
ss
mov
sbb
or
cmp
repz
mov
insb
aad
pop
adcl
add
pop
xor
and
jns
ret
sub
and
mulb
jp
or
shrb
ret
mov
jecxz
jp
ss
out
xchg
jp
cmp
stos
cwtl
mov
xor
das
das
out
or
jecxz
insl
adc
repnz
pop
sti
add
xchg
imul
jp
inc
setl
lods
or
repnz
jne
push
idivb
jb
or
pop
cmp
pop
sar
mov
mov
add
xchg
xchg
fwait
pop
lret
xor
jl
mov
cmc
popf
sub
adc
mov
inc
hlt
out
sbb
repnz
and
jmp
and
andb
lahf
lahf
icebp
fcmovnu
xchg
mov
xchg
push
jecxz
ds
outsb
jns
out
cmpsb
add
and
dec
jp
neg
daa
rcrb
stos
sarb
pusha
jmp
fldcw
mov
lret
pop
aaa
es
pop
add
xchg
pop
pushf
icebp
pop
hlt
dec
xchg
lods
pop
pusha
mov
mov
mov
cmc
test
je
xchg
dec
aad
pop
and
ret
shrl
aas
dec
cmp
sbb
ss
dec
jle
jmp
popa
roll
test
mov
xchg
add
mov
ret
push
mov
ficoml
sbb
mov
lahf
jg
or
insl
xor
mov
sarl
xchg
adc
mov
pusha
imul
bound
push
sub
loopne
ljmp
push
loopne
fadd
mov
ret
pop
scas
std
sbb
push
jle
or
xchg
mov
sub
cmp
push
scas
xchg
sub
sub
scas
fldl
inc
cmp
adc
hlt
test
test
das
test
cmpsl
jno
push
or
pop
add
add
sub
jmp
ret
push
mov
mov
icebp
lret
push
mov
push
xor
sub
sub
pop
mov
sbb
in
xor
jbe
push
popf
leave
insl
fiaddl
scas
mov
xchg
insb
jb
inc
pop
mov
adc
mov
pop
pop
or
xor
lret
lock
mov
lahf
js
scas
popf
push
cltd
fwait
mov
jb
and
push
leave
lds
xor
dec
xchg
adc
sub
int3
std
lret
sub
repz
inc
push
xchg
mov
jbe
inc
push
jae
xchg
adc
xchg
push
pop
clc
or
xchg
mov
aas
mov
mov
fwait
inc
lahf
push
sar
fdiv
or
xchg
test
scas
dec
dec
faddp
inc
daa
xchg
dec
sbb
nop
mov
stos
sbb
jmp
pop
stos
xor
and
loope
mov
or
inc
insl
mov
and
mov
sbb
test
out
mov
insb
pop
cltd
pop
cmpsl
xor
negb
popa
sub
jb
cmp
add
jg
or
les
aas
mov
in
pop
jae
fnsave
jno
sbb
pop
andb
scas
add
ja
xor
or
lds
jo
push
roll
mov
jl
jbe
push
jae
lcall
ret
idivb
and
cltd
mov
cwtl
arpl
sub
loope
enter
je
push
cld
mov
ret
out
adc
fst
and
sbb
xor
jmp
cld
cs
incb
lahf
xor
in
xor
loope
mov
out
lret
push
adc
mov
leave
adc
or
lods
add
and
pushf
cmp
jg
int3
mov
xor
fsubr
push
insb
rol
xor
insl
xor
adcl
or
jp
mov
mov
int
scas
pop
das
inc
enter
dec
not
es
pop
or
fs
mov
and
dec
movsl
mov
mov
imulb
and
loopne
pushw
add
iret
fisttpl
mov
dec
arpl
out
fbld
loope
pop
xchg
adc
mov
push
lods
xchg
and
aaa
adc
mov
xlat
mov
or
icebp
dec
insl
mov
icebp
inc
and
fucomip
outsl
cmp
add
test
ret
iret
add
push
xchg
add
ficoms
mov
scas
clc
add
mov
sbb
int3
popf
pusha
bswap
add
jmp
sbb
out
push
cmp
outsl
jae
clc
out
add
sub
ljmp
imul
out
iret
adc
sbb
arpl
lock
pop
popa
sbb
mov
cmp
xor
lods
vphadduwd
dec
push
sahf
jb
outsb
xabort
push
jo
mov
stc
pop
inc
jnp
sbb
imul
jne
lret
dec
jne,pt
inc
cmp
sbb
dec
out
xor
rcl
inc
inc
call
das
aad
popa
rorl
gs
jmp
dec
mov
mov
lods
jb
pop
mov
or
jecxz
aas
push
xchg
shrl
add
sub
cld
sar
repz
in
pop
lods
jo
or
imul
out
cs
mov
and
andl
mov
add
sub
and
lock
mov
shlb
push
mov
pop
loop
mov
int3
mov
test
mov
sti
lods
scas
push
sub
inc
mov
out
sub
popf
cmp
out
inc
fdivs
adc
loop
push
rcrl
or
or
sbb
das
cmpsb
je
cltd
shlb
add
xchg
cwtl
jecxz
dec
icebp
dec
les
iret
mov
or
into
jno
stos
pop
jb
push
outsb
pop
outsl
mov
stos
mov
inc
rcl
pushf
and
je
ja
cmp
cmp
rcll
ret
xchg
mov
push
mov
xchg
dec
jl
mov
dec
stos
scas
fcmovnb
les
add
xchg
pop
out
pop
push
outsb
rol
dec
inc
testb
loop
cwtl
fidivs
mov
pusha
sti
repnz
jbe
push
push
lock
leave
and
pop
js
or
int
xor
cmp
mov
adc
rcrl
nop
xor
mov
xchg
ss
add
call
nop
jg
mov
cmp
scas
sbb
mov
test
cwtl
mov
xchg
xor
cs
imul
adc
mov
mov
mov
loope
xchg
incl
shlb
pop
lret
enter
cs
mov
inc
mov
int3
cmp
mov
mov
xchg
mov
stos
es
mov
dec
dec
adc
sbb
and
sbb
es
xorl
dec
pop
ss
pop
dec
pop
push
and
inc
pop
push
pop
xchg
in
lcall
sti
pop
inc
es
xchg
sub
pop
jb
xchg
rcrb
stos
mul
test
push
dec
js
inc
js
lock
inc
in
sub
aam
jae
sbb
lret
lods
and
sbb
mov
lds
daa
cmpsb
nop
mov
push
cltd
fcmove
mov
loopne
arpl
xor
and
or
mov
dec
mov
and
fdivp
or
repz
nop
aas
lahf
enter
or
adc
idivl
loope
ret
mov
mov
inc
inc
jg
leave
jmp
or
bound
sub
mov
pop
xchg
ja
add
push
das
pop
movsb
mov
cmp
cmpsl
in
mov
js
cltd
test
dec
fadd
arpl
pop
adc
loopne
lock
or
rol
test
inc
and
ljmp
or
or
xor
jge
fmul
lods
mov
sbb
test
aam
shr
ja
movsl
lock
imul
loope
lods
popa
aas
push
fcmovnbe
xchg
rclb
cmp
inc
inc
mov
sahf
pop
test
pop
jne
cltd
cmp
mov
into
cmp
imul
add
jno
test
sub
sub
rcrb
xor
loopne
out
and
dec
mov
ret
mov
push
mov
and
xor
inc
adc
xchg
adc
pop
sub
test
push
incb
add
sub
cmp
icebp
je
loop
dec
rclb
leave
loop
ret
xchg
inc
das
lret
inc
add
mov
pop
mov
fld1
push
daa
scas
or
ljmp
push
test
popf
test
adc
fisttps
leave
push
decl
or
push
loope
mov
mov
xlat
cmpsb
orb
std
notl
popf
in
movsb
xchg
aad
sti
mov
mov
ss
cmp
pop
push
out
adc
jnp
enter
lods
sbb
and
inc
js
and
or
add
inc
pusha
dec
xor
xor
cmp
pop
xlat
add
lret
mov
int
enter
jge
or
mov
lret
add
in
push
scas
sahf
mov
pop
push
ljmp
ja
ds
pop
test
enter
jp
ss
push
jg
mov
jmp
sub
rcrb
in
cwtl
jne
pop
xchg
shr
pop
sbb
push
fs
ret
cmc
outsl
imul
aas
sbb
mov
or
or
pop
sbb
xorb
mov
sbb
xchg
inc
ss
sti
test
lds
scas
adc
mov
aas
xor
jge
lahf
scas
in
xchg
or
sarl
repnz
cmp
jp
mov
adc
xchg
cmp
cmp
mov
lcall
lock
push
inc
inc
pop
jg
pop
push
iret
inc
bound
dec
cmp
mov
pop
add
push
hlt
lea
pop
sub
loopne
flds
cwtl
adc
dec
mov
pop
repnz
cs
mov
mov
xorb
loope
jl
or
adc
push
add
aas
sub
pop
loope
nop
test
add
xchg
nop
aas
test
es
dec
xchg
or
ficoms
jg
scas
pop
add
in
jne
fdivrl
scas
les
test
mov
iret
mov
fistpll
outsl
rcrb
popa
fcmove
std
bound
mov
cmp
push
lea
adc
movsb
cmp
jo
cmp
sbb
in
cmp
jmp
jnp
cwtl
push
jnp
push
mov
xchg
imul
dec
ljmp
push
push
bound
call
xchg
xchg
jmp
int3
jge
cmp
arpl
push
xorb
pop
in
mov
and
sub
sub
idiv
fisttps
leave
add
scas
and
or
enter
dec
push
or
xor
fmul
adc
sub
js
loopne
in
fwait
xchg
fdivl
out
push
dec
orb
hlt
inc
xchg
dec
fldcw
dec
add
push
mov
mov
jecxz
push
popl
mov
inc
sbb
jle
lahf
lret
cld
mov
fadd
add
fwait
sbb
repnz
ljmp
sbbb
pop
jg
push
popf
adc
mov
and
inc
and
mov
fcomps
hlt
inc
mov
cmp
test
jmp
or
rcl
and
sbb
cltd
adc
push
test
stc
push
or
xor
fisttps
jno
outsl
cmpsb
shrl
mov
cmp
pop
jnp
in
dec
jae
in
add
cmp
aam
dec
fisubl
add
iret
pop
mov
pop
aaa
pusha
sub
or
sub
int
add
mov
movsb
xor
sub
xchg
ret
jb
pop
jle
mov
fbstp
popf
cltd
or
mov
scas
popa
fsub
pop
imul
sbb
out
mov
xchg
out
sahf
incb
rcr
xchg
mov
jecxz
and
test
loop
jno
in
jp
add
inc
adc
loopne
fstl
pop
ljmp
stc
xchg
push
fsts
scas
incb
xor
mov
fsts
cmp
imull
scas
xor
xor
cmp
cmp
into
lds
lock
mov
xor
hlt
negb
hlt
movsb
inc
in
cmp
pop
sbb
sub
mov
pop
adc
adc
xchg
iret
xor
fmuls
lods
push
ljmp
ja
jns
nop
or
push
mov
cwtl
movb
push
dec
js,pt
je
je
sbbl
xor
shrb
aaa
sub
stc
out
jl
push
call
lret
div
jo
test
pop
hlt
inc
pop
fmulp
push
jns
adc
mov
stos
mov
lea
add
pop
mov
aaa
and
inc
jp
xchg
dec
push
add
icebp
loopne
addr16
jb
and
jle
jge
xor
jmp
lods
fucomip
mov
mov
enter
lcall
jg
js
jge
push
and
mov
imul
test
ja
loopne
sahf
ja
jns
jg,pt
je
icebp
push
pop
cmp
std
sub
mov
xchg
imul
sbb
pop
in
fidivrl
or
cld
inc
bound
fldenv
ljmp
and
lea
adc
loope
push
movsb
xor
sarl
jnp
dec
jp
sahf
aaa
cmp
in
popf
fstpt
mov
test
sbb
inc
ror
inc
and
cmp
out
loope
push
add
push
in
cwtl
inc
arpl
imul
iret
in
dec
ss
xor
xchg
mov
mov
jge
dec
frstor
fucomi
inc
andb
popa
dec
jnp
inc
mov
push
aam
mov
push
push
mov
sarl
xchg
icebp
sti
add
das
movsl
sbb
cmp
push
jmp
add
dec
and
cwtl
inc
addr16
inc
cmp
cmp
jbe
adc
fwait
adc
out
cmpsl
les
add
mov
pusha
cmp
add
sbb
mov
fildll
cmp
je
arpl
int
fs
call
push
out
loopne
enter
pop
lea
fdivr
push
ljmp
xor
xor
dec
ret
stc
cmp
loop
dec
fsts
popl
sub
jb
jno
aaa
sbb
leave
cmp
shrl
jl
mov
int3
rcll
out
shll
in
fisttpll
icebp
adc
xchg
dec
in
ja
fidivrs
pop
in
or
sti
test
dec
fcmovnb
mov
int
sbb
cmc
mov
add
cmp
call
cmp
fnstcw
sti
and
flds
mov
cs
stos
outsb
adc
pop
int3
ljmp
cwtl
into
icebp
fidivrs
repnz
into
test
and
dec
lret
pop
roll
jmp
inc
inc
push
es
adc
xor
inc
repnz
jl
pop
add
or
xlat
mov
xchg
adc
adc
adc
lods
mov
or
lret
mov
fbstp
js
push
push
ja
cmpsl
push
sti
push
mov
in
test
lea
and
and
call
fnstenv
jns
icebp
adc
xor
push
push
xor
lcall
or
es
xchg
fndisi(8087
pop
mov
mov
pop
sti
inc
sbb
xchg
sbb
mov
movsb
mov
outsl
inc
sub
mov
xor
dec
ss
mov
dec
mov
sbb
xor
sub
push
pop
pop
dec
mov
pushf
stc
xor
nop
pop
push
xor
sub
and
adc
adc
ret
mov
int3
sarb
cmp
nop
ss
lret
inc
inc
pop
or
and
dec
cltd
stos
add
and
mov
decb
fwait
jne
mov
and
insl
sbb
ss
daa
adc
cli
ljmp
pop
push
jnp
mov
ljmp
xchg
stos
int
in
push
imul
mov
ss
pop
push
inc
sub
push
cmp
arpl
inc
add
push
mov
out
out
adc
add
mov
push
sbb
mov
in
add
jmp
sub
daa
or
fucom
push
fisttps
mov
add
cs
daa
outsb
jge
and
dec
out
fcomps
mov
in
push
test
fwait
test
loope
cmp
jb
jge
push
pop
dec
jbe
mov
mov
int
mov
push
adc
inc
cmp
dec
mov
shr
and
icebp
xchg
scas
cmp
stos
sbb
cmp
pop
fbld
out
sub
and
jg
xchg
mov
add
mov
in
push
and
mov
adc
pop
adc
push
movsb
mov
lea
dec
pusha
mov
sti
daa
mov
jae
jg
push
fcoml
inc
mov
call
xor
add
popa
out
mov
cwtl
push
mov
rol
sahf
insl
push
inc
and
jno
mov
enter
cltd
addl
loope
adc
add
iret
mov
test
daa
or
jmp
and
jl
push
push
mov
nop
out
in
or
push
mov
cltd
fldt
test
ficomps
test
cs
dec
js
xor
mov
pop
je
aas
pop
inc
cmc
jnp
test
filds
icebp
or
mov
push
push
mov
test
fdivl
roll
or
inc
add
pop
sti
sti
rorl
les
outsl
pop
sbbl
jbe
mov
xlat
imul
es
dec
cwtl
add
push
lock
out
sarl
mov
aas
and
ja,pt
add
jb
xchg
push
mov
pop
jae
pop
scas
pushl
sahf
xorb
stos
lods
add
popa
push
iret
scas
pop
mov
sbb
inc
jl
and
je
jl,pn
out
mov
xchg
aas
mov
repnz
cmc
push
je
cmp
jmp
out
les
cwtl
mov
jle
outsl
test
lret
dec
add
in
test
insb
dec
hlt
cld
push
push
or
adc
mov
fisubs
xorl
aaa
jne
test
pusha
jle
lods
lahf
push
stos
js
mov
pop
xorb
and
sub
inc
jno
adc
daa
push
push
add
dec
fistpll
cs
mov
push
xor
leave
adcb
inc
cli
ds
xchg
popf
mov
mov
adc
xchg
sub
and
sbb
cwtl
push
add
add
xchg
mov
dec
repz
fstl
subb
and
inc
push
aaa
xchg
sub
sub
lcall
das
bound
bound
ja
sub
rcrl
push
ss
mov
mov
cltd
fcoml
xchg
adc
mov
mov
icebp
xor
call
dec
xlat
adc
fiaddl
fsubrl
adc
xchg
test
cmpsl
or
dec
hlt
xchg
out
pop
sbb
scas
out
jge
sub
add
loopne
jne
loope
in
rep
pop
push
nop
push
out
inc
sbb
cmc
cmpsb
dec
push
dec
adc
movsb
jp
sbb
sbb
and
flds
fcoms
sub
shll
push
mov
mov
inc
leave
nop
jle
jb
or
sub
mov
xchg
xor
es
add
push
shlb
xor
loop
add
loopne
fwait
sbb
jns
cmc
pop
cs
ss
pop
and
aas
lret
lcall
repz
mov
pop
cwtl
dec
in
es
pop
pop
mov
leave
imul
mov
sahf
mov
scas
mov
daa
ror
sbb
mov
test
adc
jp
test
subl
aas
je
jmp
out
negl
fldl
jle
mov
hlt
pop
popa
add
cli
icebp
sub
pop
scas
add
mov
sub
jle
addr16
out
enter
imul
fdivrl
adc
orb
cmp
cmp
sub
outsl
xchg
ror
pop
inc
and
adc
xor
dec
shll
iret
pop
xor
daa
ljmp
dec
mov
push
scas
js
in
hlt
and
lcall
lret
sbb
mov
rcrl
and
inc
mov
jle
es
push
ret
insb
lret
ds
cmp
imul
sub
mov
cwtl
adc
mov
adc
dec
jp
subb
mov
or
push
xchg
addr16
lds
scas
test
cmp
push
out
jns
subl
ds
xor
push
xchg
cmpsb
icebp
lock
ds
jecxz
or
in
cmpsl
push
or
fxch
sbbl
add
addb
sub
ficoms
adc
push
xlat
pop
subl
and
push
fbld
jns
int
mov
andl
shll
pop
jg
addr16
bound
adc
cmpsb
dec
push
xchg
mov
xor
dec
movsl
iret
sar
int
sbb
cs
aas
and
and
jl
repz
jb
insl
pop
jle
test
mov
and
fnstenv
arpl
xchg
ud2
push
sub
cmp
movsb
les
or
xchg
push
out
jp
mov
repz
mov
jb
adc
inc
add
dec
scas
mov
pop
rcrb
xchg
stos
xor
inc
rorb
inc
loopne
jle
popf
insb
adc
inc
xor
add
dec
push
lods
inc
or
addb
lret
xchg
mov
mov
hlt
mov
push
pushf
mov
into
adc
xchg
fdivs
sub
fidivrs
mov
fbld
xchg
or
scas
or
push
ror
imul
adc
cmp
lret
sbb
repnz
in
and
push
popa
stos
test
adc
and
cmp
push
pop
push
dec
pusha
or
jae
pop
jo
aam
mov
mov
and
aam
cmp
xchg
mov
imul
dec
dec
xchg
inc
xor
pushf
and
pop
out
dec
cmp
stos
mov
loopne
mov
cmp
mov
out
adc
and
dec
mov
xor
cmp
sub
outsb
sub
ss
jle
jl
and
dec
arpl
test
imul
ret
mov
sub
addr16
adc
pop
scas
cmc
dec
divb
outsb
sar
ljmp
cmpsl
ljmp
es
bound
aam
push
test
xor
roll
dec
pop
aad
jle
repnz
cld
pop
inc
push
jnp
cli
sub
loopne
add
imul
lret
add
out
in
pop
out
ja
xorl
add
mov
mov
push
sub
inc
pop
sbb
add
and
cmp
jb
or
inc
aam
sbb
lcall
lcall
gs
cli
mov
loope
arpl
sub
mov
mov
jno
jmp
adc
xchg
pop
or
push
lcall
mov
jg
push
inc
mov
dec
bound
push
xor
or
scas
xchg
adc
out
dec
add
shrl
aam
fwait
movb
test
or
je
out
cmp
fwait
pop
std
lods
cmp
call
orb
loop
notb
mov
adc
insl
repz
rep
jno
push
sbb
prefetch
mov
loop
les
add
out
sbbb
xor
dec
lock
jbe
xorb
aad
lret
idivb
push
gs
jae
in
mov
or
push
sub
mov
sbb
mov
mov
lcall
inc
inc
and
sub
repnz
fbstp
scas
orb
jmp
loope
loop
xchg
enter
fldenv
dec
dec
mov
and
lret
cmp
xor
and
jns
pop
pop
data16
cmp
sub
leave
aas
adc
mov
cs
pop
fwait
xor
arpl
add
add
adc
dec
cmc
jns
jb
pop
and
fld1
add
pop
cmp
add
add
shr
mov
mov
xchg
xchg
das
cmp
xchg
cli
ja
cmpsb
repz
movsb
mov
hlt
or
push
call
pop
js
add
fucom
addl
rclb
enter
push
stc
loopne
les
push
shlb
xor
cmp
xor
into
nop
ret
imul
jle
insl
sub
dec
or
addb
mov
xor
push
xchg
sub
jns
pop
sahf
pop
mov
inc
push
out
nop
push
mov
repnz
and
mov
mov
ret
addr16
xor
movsb
in
imul
pop
imul
jb
iret
mov
add
daa
scas
mov
mov
or
movsb
push
xor
push
and
incb
mov
and
mov
insl
bound
inc
push
sbb
xchg
mov
cmp
sub
aas
in
jg
lock
inc
fistl
icebp
mov
push
mov
insl
mov
pop
js
pop
add
cmpsb
fneni(8087
mov
pusha
test
or
jp
xor
bound
in
rcr
cmp
cs
jne
pop
mov
cld
add
cmpsb
cmpsb
sub
jmp
push
rol
adc
mov
out
sbb
stc
std
or
inc
mov
pusha
or
mov
push
movsl
xchg
cmpb
pop
lock
outsl
insb
dec
bound
cs
sbb
xor
cwtl
addr16
test
outsl
add
xchg
iret
sbb
sub
popf
outsb
loope
mov
into
arpl
lds
push
xchg
mov
add
xor
inc
add
mov
imull
add
int
or
movsb
fwait
imul
ret
push
mov
vaddps
cmp
mov
mov
xlat
and
ja
dec
imul
pop
push
shrl
test
xchg
sbb
xor
js
in
insl
loopne
pop
jle
and
mov
jne
pop
outsl
lea
push
pushf
pop
sbb
aas
arpl
movsb
fisubrl
xor
sbb
pop
imul
int3
cld
ljmp
outsb
test
aaa
shrl
ljmp
dec
lcall
mov
sub
lds
lret
or
adc
xchg
out
into
jp
js
mov
loop
sub
and
cmp
push
call
subb
cmp
xchg
pop
loop
je
or
lock
mov
or
mov
or
push
aaa
mov
xor
jns
movsl
in
mov
fimull
out
cmp
jnp
in
mov
outsb
pop
jne
jp
jmp
scas
cwtl
sbb
mov
je
test
xchg
or
jbe
addr16
push
xchg
loop
xor
mov
leave
cwtl
fstl
mov
jnp
fwait
jnp
dec
push
ret
pushf
mov
pop
lcall
addr16
mov
adc
inc
std
push
cld
or
enter
pop
repz
dec
dec
mov
ret
out
cli
push
bound
pop
mov
int3
and
cmp
iret
shll
inc
mov
data16
or
sub
dec
sub
movsl
adc
jmp
sti
mov
sarl
xchg
ljmp
test
add
push
in
test
loopne
div
add
stos
add
call
mov
pushf
xchg
mov
in
mov
je
call
sbb
leave
jmp
js
cs
outsb
mov
jecxz
add
bswap
cwtl
add
cmp
mov
cmpsl
inc
lods
rolb
into
jno
mov
shlb
imul
sti
jmp
jae
xor
stc
sub
sub
pushw
fmull
mov
xor
jb
inc
mov
in
mov
mov
add
jecxz
add
int
push
jecxz
or
pop
pop
mov
into
repnz
lock
pop
fbld
clc
cmpsl
jo
mov
ljmp
sub
and
ss
dec
bound
clc
imul
imull
dec
cmpsb
pop
lret
daa
pop
hlt
xchg
mov
lods
pushf
fs
mov
pushf
cltd
cld
aad
lcall
inc
sbb
es
mov
and
sub
enter
cli
inc
sbb
cld
adc
inc
add
in
xchg
pusha
dec
movsb
push
or
add
je
push
pushf
cmpsl
sbb
sahf
fmuls
int
adc
add
aas
dec
popf
or
mov
add
sarl
jmp
xchg
cmp
xchg
cmp
stos
adc
out
pop
and
xor
jne
and
cmp
lock
push
cmp
cwtl
adc
push
fdivrs
aad
sub
cmp
xor
jecxz
movsb
dec
jns
into
lock
shlb
pop
loopne
pop
fidivl
test
ds
mov
mov
imul
fwait
or
cmpsb
shll
push
out
and
mov
loop
adc
das
xchg
enter
pusha
repz
ljmp
jb
xchg
movsb
mov
clc
xchg
sbb
pop
or
call
scas
inc
mov
aaa
sbb
lods
sub
jge
inc
sbb
insb
cmp
pop
adc
xchg
imul
das
fstl
testb
jle
mov
gs
cwtl
push
test
jmp
cmpl
jnp
sub
pop
in
clc
jmp
scas
mov
push
ja
popl
mov
sti
lret
xor
push
cli
push
jae
ss
pop
adc
jle
enter
adc
mov
in
shrb
out
pop
and
jae
xor
sbb
push
movsl
push
fistl
jp
out
pop
inc
xor
mulb
movsb
aas
int
xchg
inc
cmpsb
jae
mov
sahf
lds
add
and
rorb
and
xchg
adc
mov
push
pop
cmp
arpl
test
inc
out
jb
fiadds
pop
mov
into
xchg
icebp
rolb
cmp
cmc
addr16
adc
xor
adc
insb
and
imulb
mov
les
ret
popf
in
sub
pop
xlat
pop
rorb
xorl
cwtl
or
dec
jns
sub
ja
lcall
andl
les
pop
leave
call
pause
add
out
aam
rclb
sbb
lcall
stc
mov
mov
bound
sbb
pop
cmp
imul
cmp
fs
cli
inc
sbb
fwait
lahf
fsubrp
and
gs
ret
hlt
sti
adc
and
notb
xor
push
outsb
insl
outsl
outsl
mov
add
lods
jge
jnp
cwtl
mov
insl
push
mov
lret
std
or
pop
dec
sbb
rolb
aad
or
gs
arpl
mov
pushf
flds
cmp
dec
xor
mov
repz
adc
adc
int
cmp
pop
adc
icebp
call
in
repnz
inc
xor
bound
mov
xchg
add
fiadds
lahf
outsl
mov
cmp
lea
jle
imul
sub
sbbb
stos
sbb
daa
dec
add
out
sub
sbb
cs
icebp
pop
gs
insb
aad
xchg
adc
stc
push
mov
adc
in
test
push
imul
addr16
mov
push
mov
and
stc
shl
hlt
mov
hlt
add
sbb
push
test
adc
scas
mov
fucomp
jg
sbb
adc
dec
outsb
mov
imul
negb
sbb
cmp
sbb
sub
fldcw
or
enter
std
jmp
xchg
inc
gs
inc
test
shlb
push
stos
inc
xchg
push
push
scas
xchg
rcrb
mov
out
sbb
and
or
test
sti
add
fmull
andl
fsubrl
std
loop
hlt
dec
fwait
pop
adc
es
pop
in
fbld
push
fstps
xchg
jmp
ja
inc
lock
push
cmc
sahf
xor
out
out
inc
pop
stc
arpl
fimull
fwait
xor
das
adc
sub
mov
inc
bound
mov
pop
je
movsl
cmc
cwtl
jle
cmpsl
inc
bound
lret
push
add
out
sub
jg
pushf
xchg
mov
push
mov
iret
faddp
fidivrs
inc
cmp
pusha
out
into
xor
sbb
rcl
mov
sbb
xor
jl
fadd
fisubrs
pushf
xchg
xor
bound
sub
js
xor
insl
data16
adc
das
flds
subb
stos
sbb
or
sbb
xchg
pop
mov
cli
sbb
outsl
cmp
notb
mov
adc
pop
and
dec
cmc
lods
sbb
stc
fdivrs
sti
loop
push
inc
aam
ret
cltd
xchg
jl
mov
cmpsl
icebp
cmp
adc
shll
cmp
lret
insl
jae
inc
or
ljmp
adc
dec
lcall
ljmp
sub
rcrl
mov
mov
sbb
mov
decb
rorb
adc
or
into
jb
enter
add
xchg
mov
adc
pop
stc
mov
mov
pop
dec
scas
adc
aaa
mov
call
ficoml
negl
sbb
testb
rcr
andb
cmp
into
mov
add
pop
or
popa
inc
lahf
add
imulb
lret
popf
push
fsubl
push
les
pop
sbb
adc
iret
cltd
jl
iret
icebp
lods
lret
inc
rcll
repz
jmp
daa
and
xchg
in
or
fwait
in
fsubs
sbb
loopne
xlat
xchg
pop
icebp
out
fnstenv
fxch
ficompl
dec
aas
push
ffreep
pop
pop
movsl
daa
stos
mov
dec
cmp
popa
int3
loopne
xor
inc
push
fmull
enter
int3
data16
hlt
push
mov
leave
mov
fldenv
xchg
repnz
cmpsb
mov
imul
adc
fisubrs
sbb
jl
xchg
cmc
pop
pop
fwait
decb
mov
sbb
or
insb
ret
orl
scas
lret
mov
loop
lock
push
lret
ljmp
xchg
or
nop
push
dec
or
sbb
lds
out
inc
adc
and
mov
push
ljmp
cmpsb
test
xor
ljmpw
shrl
outsb
aam
add
fisubl
out
insb
nop
lds
les
mov
div
add
sub
xor
adc
lock
jb
ds
push
xchg
sbb
out
sar
imul
rorb
cltd
out
sti
fnstsw
mov
inc
popa
mov
jg
cld
lea
nop
ret
in
lods
test
das
mov
adc
lds
dec
mov
in
add
inc
mov
sub
jmp
mov
jg
mov
in
imul
mov
cmp
mov
pop
bound
gs
fnstsw
mov
lcall
mov
sbb
jne
and
test
pop
jnp,pn
and
jl
mull
adc
loop
iret
dec
jbe
out
pop
mov
push
or
xchg
jo
xchg
push
cmp
push
les
pop
stos
lds
repnz
stos
lahf
leave
pop
ret
into
repnz
in
int
adcl
fidivrl
add
mov
call
mov
mov
pop
imul
mov
mov
cli
mov
xor
and
sbb
mov
cld
mov
stc
iret
xchg
div
jbe
nop
inc
iret
mov
jg
lock
dec
jo
or
popf
jne
push
scas
push
js
int
test
ja
daa
leave
test
inc
mov
pop
mov
push
leave
rcrl
dec
lock
jb
aaa
shll
in
lods
or
jno
ljmp
push
or
test
test
push
push
mov
inc
xchg
loopne
mull
xchg
pop
mov
mov
movsl
inc
jno
mov
in
xchg
and
rcrl
sub
mov
outsb
vpackssdw
fisubl
mov
inc
roll
ret
cwtl
stos
cwtl
mov
imul
loopne
sti
sub
lods
bound
mov
lret
mov
aaa
test
push
cmp
add
dec
cmpsl
fcoms
mov
pop
jecxz,pt
fdiv
push
jns
out
xorb
sub
xor
mov
notb
fiadds
aad
mov
and
sbb
test
jmp
out
cltd
arpl
cmp
pop
ret
jl
xchg
std
aad
test
cmp
scas
lods
sahf
sub
push
push
mov
pop
jecxz
roll
mov
or
shll
call
leave
sbb
lcall
pop
or
imul
fsubl
lock
xchg
pop
inc
fsub
sbb
cmp
les
cs
in
sahf
scas
inc
and
mov
lret
cmpsb
mov
adc
shr
push
mov
fbstp
out
lret
in
mov
clc
jle
test
repz
xchg
push
lea
mov
pop
mov
lock
inc
popf
in
sub
adc
fists
int
sub
fisubs
stos
and
popf
mov
out
test
test
fbld
imul
or
scas
mov
inc
adc
mov
inc
pop
mov
mov
adc
push
mov
jnp
daa
push
push
test
popf
push
call
mov
fistpl
mov
js
sbb
adc
test
arpl
xchg
addl
sti
sub
mov
sbb
xor
lret
ret
push
mov
xor
lock
ds
enter
jae
inc
sub
xchg
push
enter
lds
aaa
stos
xchg
outsl
inc
dec
and
pop
repz
adc
movsl
dec
sbb
cmp
aaa
sti
sub
cmc
lds
push
push
out
mov
cmp
insb
sbb
or
loopne
out
addr16
fcoms
inc
std
jne
jbe
or
imulb
cld
out
inc
subl
pop
stc
popa
mov
jae
addb
dec
sbb
in
inc
mov
or
inc
sbb
rorb
jge
xchg
xchg
mov
lcall
add
push
orb
subl
scas
cmpsb
push
adc
nop
fbld
iret
cs
xor
jecxz
mov
and
push
and
inc
mov
mov
fcomps
mov
ret
fisubl
fisubs
lods
sbb
dec
push
ss
pop
or
xor
or
iret
pop
test
mov
cmp
sbbb
mov
push
stos
call
ja
xchg
push
subb
sub
out
fsts
into
xchg
bound
aas
push
mov
cmc
jge
push
and
das
xchg
shrb
imul
stos
rorl
mov
shll
idivb
add
out
dec
ficoms
jmp
arpl
jno
and
sti
or
cmp
stc
jb
adc
fdivrl
cmp
dec
mov
lods
fdivl
call
mov
movsb
inc
xor
pop
dec
cli
add
popf
inc
cmp
jbe
int
xor
les
lret
sbb
dec
pop
add
fcmovb
aam
int3
aas
and
mov
jno
mov
mov
ja
adc
mov
mov
sbb
inc
pop
adc
in
sti
clc
in
xchg
aam
aaa
ja
mov
mov
ret
inc
cwtl
nop
push
leave
in
xor
out
mov
ss
fadd
leave
addr16
adc
ret
mov
jge
es
inc
lock
jbe
push
jg
xchg
mov
rol
shrb
jl
xchg
lcall
fisttps
fldl2t
cs
into
ficoml
or
jnp
repz
mov
out
jno
xchg
cmp
sbb
push
ja
xor
insb
push
push
add
movsl
mov
lcall
xchg
inc
lcall
mov
jns
hlt
push
cmp
xchg
aaa
clc
mov
lcall
jne
mov
cmpsl
test
dec
inc
dec
mov
push
fstpl
or
jp
in
mov
fldenv
dec
imul
notb
or
jnp
insb
out
push
rcrb
adcl
jecxz
imul
sub
xor
xchg
jbe
outsb
loopne
ja
repnz
cs
mov
pop
lcall
pop
mov
shrl
mov
xor
inc
aam
lods
pop
xchg
xor
int
inc
iret
jne
ja
adc
adc
sbb
add
bound
sub
roll
stos
lret
loope
lods
test
or
dec
jne
jmp
lock
dec
call
xchg
sbb
sbb
movsb
shlb
and
bound
leave
xor
jle
fwait
int3
test
out
dec
outsl
lret
fnstsw
mov
xor
leave
lcall
or
inc
sbb
jle
inc
sti
mov
fincstp
shll
pop
imul
sahf
jne
loop
xchg
popa
out
imul
mov
out
in
add
jae
lods
xor
and
imul
or
decb
lea
or
and
fldcw
jno
jl
test
shlb
push
pop
test
je
mov
subb
or
jae
in
js
rcrl
sbb
je
add
dec
rcl
lcall
data16
add
std
popa
cmp
sahf
adc
cli
repnz
add
mov
js
xrelease
out
or
push
adc
pushw
cmp
dec
test
push
js
jmp
js
or
je
push
lahf
add
add
mov
add
es
imul
rcr
pop
imulb
pop
shrb
sbb
js
stos
data16
sub
adc
sti
dec
movsb
std
mov
lahf
push
testb
scas
lret
ret
out
xor
leave
lods
mov
push
mov
inc
fwait
cwtl
imul
adc
push
in
dec
xor
push
pop
div
mov
dec
jecxz
mov
dec
rcrb
push
lods
push
or
fwait
cmp
sbb
hlt
pop
pop
cmp
mov
push
adc
jp
and
insb
addl
in
jp
aas
adc
mov
rolb
cmp
jle
mov
leave
inc
mov
ljmp
popa
pmulhuw
jae
inc
sbb
fmuls
jno
jge
jbe
mov
sub
push
or
jg
in
out
ss
sub
or
out
jmp
lahf
lock
mov
or
lret
in
push
addr16
int
add
dec
push
dec
mov
push
loope
jl
stos
jg
aas
outsb
inc
ret
add
inc
mov
xchg
call
push
sbb
jmp
and
aam
sbb
mov
cltd
pop
outsb
inc
mov
ss
inc
sbb
rorb
outsb
out
push
lods
xor
test
inc
add
pushf
into
adc
lea
xor
fidivrl
mul
stos
sbb
cmp
fistpl
mov
bsr
pop
pop
push
js
add
pop
cmpsl
add
fmuls
inc
jb
jle
adcb
aaa
lods
adc
into
xor
icebp
aaa
cmpsb
mov
adc
sbb
push
jb
and
inc
xor
inc
call
cwtl
jmp
mov
aam
mov
test
or
or
cmp
lds
xchg
or
dec
stos
fsubrl
or
stos
dec
ljmp
mov
pop
decl
xchg
fidivrs
sahf
jg
mov
enter
add
stos
push
icebp
ss
sbb
das
cmp
and
mov
sahf
inc
roll
push
push
mov
add
mov
in
jo
or
pop
cwtl
xor
nop
hlt
lods
test
pop
into
cli
inc
or
xchg
jnp
lods
out
aaa
fsubrl
hlt
in
pusha
add
mov
movsl
mov
lds
mov
dec
mov
mov
inc
sub
movsb
cmp
and
xchg
popa
movsl
ds
cwtl
xlat
cli
cmp
jmp
leave
stos
mov
shlb
popa
stos
stc
test
outsl
shrb
xlat
orb
std
fnstenv
or
mov
or
jne
mov
mov
lods
dec
fisttpl
push
test
inc
or
add
jno
sbb
pop
fsubl
int
repnz
dec
sbbl
dec
in
adc
xchg
test
dec
stc
daa
cwtl
lods
xchg
xor
ret
lret
in
xchg
popa
data16
and
sbb
cmpb
add
inc
dec
incl
sub
xlat
int
sbb
dec
arpl
pop
mulb
shll
add
rorl
fisttpll
ds
adc
js
pop
pop
dec
negl
mov
mov
pushf
movsl
es
jmp
hlt
adc
mov
das
sbb
repnz
stc
sbb
xchg
rcl
add
inc
stos
push
test
adc
pop
jno
jp
push
repz
repz
pop
hlt
xchg
pop
xor
sub
and
fadds
cmpsl
and
test
std
loopne
sbb
lret
cmc
hlt
cmpb
sbb
jmp
es
jp
add
mov
cmpsl
pop
sub
lea
enter
ljmp
cmc
ja
popf
fs
imul
sub
mov
jns
out
mov
and
pop
jle
sahf
dec
rol
and
outsb
fisttpl
fisubrs
dec
mov
testl
js
push
sub
testl
sub
jb
xchg
xor
jp
jne
jo
clc
cs
dec
mov
dec
repnz
jns
lahf
xor
push
xchg
nop
sub
pop
ficompl
xchg
push
aad
jb
fwait
jb
xlat
lret
lcall
aam
aas
aam
push
adcb
jae
jle
adc
or
cmp
mov
pop
inc
xor
push
xor
cli
inc
popf
std
repnz
jl
adc
faddl
push
outsl
push
dec
lods
push
mov
push
push
inc
cmp
das
scas
mov
mov
sub
fwait
mov
xchg
mov
jbe
push
xchg
pop
jl
dec
mov
je
movsb
inc
rol
xchg
repz
adc
mov
int
add
sbb
sar
mov
cmc
das
dec
add
outsl
inc
mov
stos
push
and
outsb
das
cmc
cmpsl
imulb
add
loopne
rcrb
nop
jno
adc
add
and
int
mov
xchg
jmp
cmp
mov
push
dec
cwtl
outsb
test
nop
clc
decb
shlb
lods
jle
lock
or
push
mov
xchg
loop,pt
int3
in
shll
mov
dec
add
ret
lea
fadds
cli
insb
ljmp
lods
push
and
imul
hlt
jecxz
out
lock
aas
lret
rcl
cltd
cmp
and
stc
shlb
or
push
aad
roll
aam
xchg
cld
adc
or
subb
in
cmpsl
cmp
cmp
jg
rorl
loopne
push
nop
loopne
sub
sbb
and
dec
dec
xor
mov
sarl
add
fmull
insb
aad
pop
mov
push
adcl
repz
xchg
imul
dec
out
mov
sub
pop
jg
mov
dec
cmp
mov
in
sbb
mov
dec
in
cmpsb
inc
push
in
push
push
dec
fisubs
fists
outsb
pop
fists
shr
mov
fs
in
scas
xor
mov
test
sub
lock
out
fcompl
mov
cmp
or
or
dec
test
xchg
mov
adc
adc
mov
pop
jge
nop
test
in
int
mov
xchg
das
adc
cmc
mov
cmp
dec
icebp
sahf
pop
test
pop
sbb
frstor
mov
or
mov
mov
push
cmp
and
lcall
jle
pushf
test
lahf
mov
cltd
cmp
lret
cmp
shrl
push
lods
mov
into
or
shll
ror
mov
jg
rcrb
rcl
inc
icebp
push
stos
dec
pop
mulb
scas
into
push
mov
dec
in
jge
mov
sbb
mov
sub
dec
enter
sub
mov
push
fisubs
add
lds
xor
add
les
dec
fs
xor
ret
jns
mov
and
or
or
mov
test
inc
jb
xchg
dec
or
add
sub
cmp
mov
pop
jg
aam
pushf
inc
movsb
fistpll
imul
sub
mov
jp
leave
xchg
out
or
push
fmull
dec
test
and
mov
in
mov
push
lock
or
cmpl
push
movsl
lods
lcall
dec
rcr
cltd
js
xchg
cmp
sahf
fdivs
push
repnz
pop
mov
das
mull
sub
mov
adc
shll
lock
sarl
push
sub
or
mov
ficompl
add
inc
xlat
sub
push
push
xchg
push
insb
push
fmulp
push
scas
mov
pop
inc
into
inc
test
mov
pop
ss
in
mov
jno
cltd
or
jle
pop
push
ja
insl
shrl
out
cli
out
ffree
adc
dec
outsb
das
bound
and
jne
pushf
inc
cmp
cltd
fidivl
dec
push
push
pusha
addr16
flds
xor
pop
insb
sar
loopne
fldcw
dec
pushf
mov
push
outsb
mov
lods
jo
lcall
ljmp
or
and
sti
mov
fbstp
inc
jno
out
fsts
cltd
fiaddl
pop
pop
ja
cmpsl
out
aas
mov
inc
jne
in
in
lods
and
push
mov
add
and
inc
lret
fnstcw
daa
jmp
xacquire
orl
or
cmp
scas
lahf
mov
in
jmp
xor
in
cmc
cmpsb
xchg
jl
inc
es
movsl
cwtl
clc
add
jl
sbb
push
cwtl
cmp
scas
fs
dec
or
mov
cmc
xchg
xchg
fistps
mov
jg
es
call
pop
inc
lods
clc
mov
add
stc
aam
xchg
cmp
or
mov
int3
and
inc
mov
repz
not
push
pusha
xchg
jl
es
pop
in
ret
inc
lods
fnsave
int3
pushf
loope
add
loope
fwait
inc
pushf
bound
insb
repnz
int
sbb
test
or
pop
ljmp
sbb
sbb
ss
push
dec
xchg
mov
push
cmp
das
mov
cs
popf
pop
or
fidivs
mov
repnz
ret
mov
add
xchg
addr16
inc
lock
push
dec
push
cwtl
lret
mov
xchg
mov
xor
jg
cmc
xor
xor
sbb
jge
ror
xchg
jp
or
mov
insb
pop
mov
cmp
sub
pop
jbe
in
and
mov
test
mov
ja
sti
xchg
xchg
jb
dec
xchg
cmp
pop
inc
xchg
xor
mov
sarb
and
stos
gs
stc
push
pop
or
cs
or
les
in
pmulhuw
ret
xchg
cmp
fistl
testb
inc
lock
adc
inc
inc
sub
adc
cmp
sub
nop
pop
out
inc
cmc
testb
scas
or
mov
dec
add
fcoms
mov
sub
cmp
mov
cmp
test
jle
pop
xchg
in
cmp
mov
hlt
imul
sub
dec
mov
push
cmp
je
imul
cmc
fwait
into
movsb
or
inc
sarb
cmp
xor
les
sbb
sub
jp
out
cmpsb
outsl
and
jmp
call
stos
out
push
lock
pop
enter
inc
stos
sbb
repnz
mov
add
outsl
mov
loope
adc
and
inc
loopne
pop
out
xchg
xor
sub
sub
notl
es
repnz
fsubs
lret
xchg
cld
cmpsl
movsb
mov
sbb
push
icebp
daa
jb
mov
pusha
icebp
repnz
push
push
std
fidivrs
jle
ss
ja
aad
mov
xchg
arpl
ud2
repz
push
outsb
shlb
add
addb
xchg
cmp
push
testb
std
push
push
sbb
sub
les
jecxz
ss
inc
and
mov
sti
mov
inc
adc
and
mov
jg
add
call
das
mov
les
es
xchg
jl
mov
test
clc
clc
add
or
inc
jl
inc
dec
iret
jns
pop
in
push
das
or
or
repz
push
add
dec
je
push
shlb
xchg
or
and
sub
sub
jp
bound
push
cmp
push
dec
testb
push
jbe
pop
loope
into
sub
cmpsb
pop
gs
push
jmp
in
dec
mov
fildl
fwait
es
aas
sub
xor
ja
les
or
fldenv
push
push
mov
mov
inc
and
dec
mov
jbe
movsb
rorb
mov
jbe
lock
xor
mov
icebp
lahf
sbb
repnz
out
jb
lret
and
sahf
aaa
jns
sub
sbb
mov
es
mov
and
xchg
out
mov
mov
jnp
dec
test
mov
sbb
insl
cmovbe
xor
mov
sbb
inc
insb
jo
das
out
sbb
sub
adcl
jo
sub
orb
jns
shl
in
xor
jnp
dec
xorb
xor
sub
add
sub
arpl
sbb
xor
or
in
cmp
test
jbe
and
cli
jle
mov
cmp
cmc
rorl
mov
fadds
adc
outsb
inc
jno
test
rclb
sub
addr16
test
pop
sub
sub
cmp
es
clc
test
stos
dec
sahf
dec
lds
es
jmp
or
dec
pop
icebp
lock
cmp
hlt
cmp
push
sbb
sti
and
or
cld
sbb
inc
divl
dec
mov
cs
xor
push
add
push
pusha
div
in
popf
and
out
std
outsl
test
cmpsb
dec
not
xchg
cmp
scas
pop
aaa
dec
mov
out
inc
repz
imul
xor
gs
jle
push
adc
and
cmp
xor
scas
add
mov
sub
mov
sub
clc
fcmove
je,pt
and
jae
xchg
mov
stos
sahf
lods
popf
xchg
jb
pop
dec
jl
pop
pop
out
fidivrs
fisubrl
rorb
cltd
fstl
mov
out
div
mov
test
outsl
xchg
addb
out
cmpsl
push
dec
data16
xor
dec
jmp
dec
shll
enter
xchg
in
movsb
ljmp
jns
xchg
test
mov
adc
in
and
add
cmc
loope
insb
cmpsl
cmpsl
in
mov
fdivp
jbe
addr16
gs
loope
call
sub
and
cmpsb
pop
sbb
andl
cmp
and
inc
movsb
sub
inc
sub
or
dec
shl
xchg
pop
push
mov
push
inc
imul
andl
stc
pop
sub
lret
and
fsubl
andl
dec
jnp
push
cs
std
scas
in
mov
xchg
push
fisubs
scas
cmp
push
push
in
aam
mov
js
dec
outsb
add
mov
jmp
jge
mov
inc
fdivrs
fs
clc
pusha
lods
imull
test
sarb
xchg
loope
xor
repz
inc
inc
push
fildl
jnp
and
cs
js
add
ja
jno
pusha
push
imul
cmpsb
cmc
rcll
push
or
and
sub
and
push
hlt
cmpsb
cmc
jecxz
iret
adc
inc
or
jmp
sbbl
adc
xchg
jge
mov
cltd
add
dec
adc
jmp
mov
push
xchg
pop
in
adc
mov
aaa
xchg
adc
lret
lret
mov
add
in
je
push
jle
fcompl
push
jmp
stos
inc
jmp
pop
daa
xlat
ficomps
dec
mov
add
xor
dec
insl
push
sub
movsb
psllw
xchg
shll
roll
adc
xorb
lds
mov
stc
scas
pop
repnz
rclb
dec
mov
sub
roll
pop
mov
mull
xchg
loope
fstpt
pop
movl
jnp
or
cmp
pop
add
mov
push
pop
fisubrl
es
xchg
and
test
lret
jl
imul
dec
jbe
out
mov
inc
inc
inc
popf
pop
mov
lock
inc
or
mov
sbb
fldenv
cmp
es
cmp
push
adc
mov
test
loop
xchg
jno
lcall
xchg
cli
fbld
loopne
jae
xchg
aad
dec
xchg
mov
sub
adc
mov
insb
scas
shrl
dec
stos
es
or
sub
push
jae
clc
and
add
arpl
jmp
mov
jbe
stos
mov
test
xor
scas
jecxz
add
outsb
bsr
ret
loope
dec
push
lret
insl
pop
sub
nop
mov
sbb
arpl
stos
sar
lahf
daa
cmp
mov
in
sar
and
push
sub
cmpsl
sub
add
push
movsb
pop
xchg
jnp
inc
pop
or
cmp
jns
out
dec
adc
leave
gs
in
repz
inc
testl
push
shr
nop
cmp
mov
rcll
cmp
and
pop
stc
sbb
jg
lock
loopne
jl
cmc
out
repnz
out
js
ret
add
adc
mov
inc
jecxz
cld
add
xor
mov
mov
mov
sub
xchg
mov
pop
outsb
cmpb
jle
mov
popa
pop
cmpsb
adc
fs
in
imul
adc
in
or
out
pop
xor
lods
mulb
sub
mov
icebp
fdivr
outsb
lds
f2xm1
jbe
mov
jbe
gs
add
int
sub
bound
lret
test
sub
dec
call
test
jmp
mov
icebp
cltd
scas
test
ja
decl
pop
es
out
jp
inc
xchg
lock
fbld
add
jecxz
cmp
mov
dec
iret
dec
inc
jecxz
mov
aaa
mov
sarl
xor
and
or
xchg
xchg
add
sbb
imul
sti
in
xlat
pop
je
mov
cmp
lock
clc
aad
push
and
push
mov
inc
jmp
stos
mov
iret
push
lock
test
cld
and
jmp
xor
je
xor
orl
add
loopne
push
sbb
popf
pop
or
nop
fwait
jmp
xchg
insl
repz
and
mov
psignw
shlb
xor
push
push
cmp
mov
push
fdiv
pop
imul
lds
mov
xor
faddl
sbb
in
cmp
mov
push
dec
in
jmp
lret
out
into
adcb
push
mov
cs
xchg
adc
cmp
push
leave
lret
push
mov
pushl
and
adc
jo
subb
pop
cmc
out
inc
jp
inc
cmp
lea
sbb
xor
cmp
dec
cwtl
fisubl
scas
sbb
pop
adc
cmp
and
mov
repnz
jmp
pop
push
shll
pop
and
out
push
popa
cwtl
or
inc
sarb
xor
mov
push
inc
mov
sub
clc
push
jns
imul
or
stos
fcomps
inc
add
and
inc
xlat
mov
inc
inc
pop
andl
rcl
je
cmp
je
and
push
cmpsb
and
add
in
enter
xchg
mov
and
pop
mov
dec
xor
mov
out
into
loop
add
and
sub
mov
arpl
je
mov
jno
xchg
movsb
cli
ud1
pop
insb
shrb
jge
in
pop
outsb
pop
adc
push
jp
lahf
cmp
dec
sub
adc
mov
xacquire
outsl
std
enter
jnp
outsb
out
cld
fs
lods
xor
jae
pop
push
pushf
fs
push
or
mov
lahf
mov
mov
pusha
insb
psrad
xchg
test
cltd
push
xchg
fildl
mov
mov
and
or
adc
xor
or
out
mov
adc
push
out
jno
cltd
dec
movsl
cs
pop
mov
cmpsb
roll
xchg
dec
jns
insb
push
mov
and
imul
fists
loopne
xor
jmp
jp
or
pop
fnstsw
push
stos
cmp
mov
sub
sub
les
pop
rsm
dec
jae
mov
popf
pop
push
leave
lahf
push
xor
cvtpi2ps
lods
out
lcall
andl
je
mov
add
inc
xchg
sub
fldl
lods
mov
xor
dec
mov
mov
xchg
inc
jno
rol
pop
mov
inc
pop
test
push
ja
inc
jecxz
jp
stc
mov
addr16
push
fisubl
mov
mov
ljmp
andb
mov
jge,pn
in
imul
nop
enter
xlat
mov
mov
jl
loop
push
std
jno
dec
add
fs
daa
icebp
je
push
mov
lret
jge
dec
lret
int
test
push
adc
sub
div
pop
je
pop
push
mov
dec
xchg
mov
pop
adc
push
lea
mov
ja
icebp
movntps
and
out
cmpsb
or
sarl
rol
outsb
inc
jnp
inc
mov
rcr
stc
ljmp
and
sbb
das
sub
push
mov
cmpsl
cli
cmpsl
dec
cmp
lret
mov
popf
mov
jle
jno
stos
inc
mov
std
inc
int
adc
mov
mov
mov
fs
mov
inc
stc
imul
xor
divb
push
clc
imul
loope
adc
jmp
nop
shlb
dec
stos
cld
xor
test
test
cmp
insl
xlat
sbb
testb
xorb
mov
int3
aaa
movsl
ror
jo
repnz
and
sub
ss
mov
cwtl
movsl
adc
out
cmpsb
xor
pusha
mov
adc
ds
movsl
push
roll
jl
add
je
cmp
js
test
mov
lahf
and
pushf
ficompl
arpl
fldl
adc
sti
or
jb
mov
pop
in
mov
xchg
test
sub
fmull
jle,pt
test
sbb
test
xchg
or
push
dec
loopne,pt
inc
sub
inc
jge
mov
je
inc
push
loopne
mov
xchg
fistps
push
hlt
inc
adc
lret
out
mov
push
test
cwtl
out
or
dec
incb
xlat
pushf
push
jbe
aam
adcl
xchg
mov
ds
push
sarb
fstpt
pop
fstpt
add
fdivrl
test
fistpll
push
sahf
add
lods
push
dec
dec
push
push
xchg
xchg
push
pop
mov
inc
sahf
xor
in
xchg
cmpsl
out
aam
aad
add
cmp
push
aam
aas
pop
inc
dec
stc
fwait
mov
and
mov
add
inc
dec
sahf
sub
fwait
addr16
mov
addr16
add
inc
or
mov
repnz
xor
mov
fimuls
push
fbstp
adc
gs
je
or
ja
inc
jecxz
push
fwait
ret
fs
fldl
iret
adc
add
push
pop
cmp
pop
jo
jns
jno
lds
pop
fnstcw
dec
mov
clc
and
mov
enter
gs
cmovbe
dec
jne
xchg
inc
xor
ljmp
aas
loopne
jbe
lods
jae
add
test
test
mov
mov
sub
stos
jle
pop
xchg
pop
jns
or
fwait
jne
imull
ljmp
out
mov
mov
enter
sbb
add
fcompl
jne
or
sbb
pop
stos
add
inc
loop
jns
mov
repz
pop
mov
int3
push
and
enter
or
lock
sbb
gs
push
mov
pop
push
inc
clc
nop
jl
jb
cld
mov
pop
lcall
jae
mov
sarl
stc
adc
adc
mov
call
stos
mov
inc
fwait
lahf
dec
jecxz
cmpsb
cld
mov
jp
or
js
jbe
pop
cmc
incb
xor
mov
push
int
lods
lock
subl
pop
xor
add
fmuls
cmp
cld
mov
pop
jns
mov
sub
and
mov
pop
sbb
mov
sbb
jp
dec
or
in
enter
mov
fwait
sub
orl
dec
xchg
sbb
fisttps
hlt
shrb
leave
imul
xchg
out
mov
out
sub
std
loope
les
mov
fisubl
aaa
mov
sub
xor
sbb
aam
aad
cmp
scas
mov
movsb
xchg
cltd
inc
fidivrl
aad
shr
insb
mov
pop
cmpsl
push
ret
lcall
cmp
ret
cmp
notl
in
push
pushl
pop
xchg
in
mov
xor
mov
ret
sahf
lret
shll
push
inc
add
push
and
add
into
pop
addb
mov
mov
dec
sbb
lret
out
aas
icebp
jae
adc
xchg
ds
cmp
repz
out
mov
vcmpps
shr
bswap
loop
xlat
mov
stos
iret
push
mov
dec
and
jne
mov
and
loope
push
or
ficomps
or
sub
push
push
cli
jmp
sbb
push
lahf
sahf
gs
xor
lret
mov
js
insl
out
lahf
mov
cmp
add
shlb
int
and
sarl
push
cld
ja
xchg
cmp
xorl
push
pusha
sbb
mov
adcb
cmp
andl
inc
and
enter
jae
and
dec
aas
sub
xchg
icebp
jecxz
pop
inc
gs
inc
push
cli
pop
stc
mov
fwait
pop
pusha
js
dec
pop
outsb
sbb
push
dec
dec
inc
mov
lods
adc
or
dec
imul
aas
mov
cmpsl
orb
fisubrs
inc
test
in
push
adc
fcmove
ror
pushf
inc
push
pmuludq
call
and
jns
dec
pop
cmp
vunpckhps
mov
lods
or
cmp
lea
adc
jg
movsb
rcl
js
mov
jge
pmaddwd
push
fwait
push
pop
pop
inc
pop
and
or
cmpsl
fs
subb
mov
outsb
dec
mov
dec
add
fs
mov
xor
ljmp
mov
sbb
rcl
shr
jecxz
repz
inc
xchg
xchg
scas
es
call
icebp
in
pop
lods
bound
ret
or
pop
xchg
or
sbb
jb
pop
pop
fisubrl
pushf
dec
dec
mov
repnz
or
mov
out
xor
pop
scas
ret
inc
es
pop
pusha
push
test
inc
mov
in
adc
cmc
lock
jmp
lea
xor
sbb
ja
fists
movsl
and
aas
jno
xor
cmp
sbb
dec
popf
lods
pop
stos
sti
into
jl
insl
test
xlat
fwait
repnz
cmp
push
cwtl
adc
xor
adc
push
dec
push
cmpsb
aas
mov
test
cmp
sub
out
xchg
movsb
sti
xchg
jle
xchg
daa
andb
cwtl
mov
fst
addr16
stc
pop
inc
jp
nop
out
mov
cmp
lcall
add
subb
inc
mov
dec
nop
enter
mov
mov
cmp
stos
mov
ljmp
jb
cmpsb
jg
push
sbb
outsb
push
rcll
cmc
out
lahf
xchg
dec
sub
data16
outsl
ljmp
mov
ja
pop
loop
movsb
push
outsl
mov
movsl
testl
das
movsl
inc
rorl
adc
cmp
inc
push
hlt
mov
adc
xchg
dec
int3
mov
mov
jge
mov
xchg
add
mov
shlb
enter
jge
pop
int
in
lods
loop
inc
mov
aam
mov
ds
xchg
jp
xor
push
jmp
jecxz
les
pop
movsl
mov
loop
ret
in
stos
cmpsl
dec
cmp
cmp
xlat
sbb
mov
test
fistpl
sub
ljmp
xchg
arpl
sub
mov
fwait
push
sbbb
sahf
mov
cmp
mov
and
add
jmp
ss
xor
enter
mov
lcall
jmp
lea
mov
dec
mov
xor
enter
negl
add
pop
xchg
ror
js
scas
testb
popf
cmp
adc
xor
cmp
les
rolb
add
cmpsl
sbb
xor
in
das
inc
adc
xchg
or
bound
mov
cmp
out
leave
das
add
jl
loopne
aaa
pop
or
icebp
cmp
cmpsb
xor
ljmp
ss
icebp
rcll
add
jmp
and
cmp
cmpb
mov
mov
loope
dec
inc
ljmp
out
popl
cltd
xlat
pop
lahf
roll
std
aas
cmp
pop
insl
inc
nop
popf
and
or
sbb
jl
rcrb
xor
fdiv
cmp
dec
mov
add
test
push
lds
xor
and
dec
in
xor
insl
in
leave
xchg
adc
jg
sahf
out
lds
stc
cmc
mov
push
cld
xor
or
pushl
mov
stos
in
jg
stc
into
and
or
jl
and
push
rcl
repnz
mov
mov
jg
cmp
push
fimuls
push
shlb
rcr
adc
cmpsl
push
insl
dec
arpl
imul
sahf
xchg
mov
outsl
in
push
lcall
rcll
cmp
mov
test
ljmp
push
or
cmp
pop
or
push
or
sub
sbb
fisttpl
xchg
std
jns
rolb
mov
dec
sbb
or
std
adc
push
fisttpll
push
sbb
es
sahf
cmp
lcall
ss
inc
push
int
mov
pop
popf
fiaddl
jno
addr16
sub
lea
fildl
gs
inc
push
fcmovnbe
cmp
add
icebp
add
hlt
in
inc
sbb
xchg
or
loope
jb
shrl
inc
clc
stos
sub
xchg
sub
lahf
adc
sbb
inc
andb
dec
pop
dec
out
dec
pop
mov
xchg
test
out
addr16
sbb
icebp
jmp
mov
dec
testl
sahf
bound
gs
mov
mov
mov
jae
jl
push
in
cmp
out
jge
or
popa
xor
ret
add
inc
and
mov
and
or
loop
push
mov
cmc
cmp
mov
mov
pop
inc
jge
enter
mov
dec
cltd
jb
inc
xor
mov
xchg
cli
jo
or
cmpsl
shl
adc
sbb
sbb
cs
lret
sbb
shlb
addr16
nop
ret
jle
mov
mov
mulb
rcrb
cmp
shlb
pop
xchg
jp
fisttps
mov
push
jno
rcr
pop
xor
lock
dec
pop
xor
sbb
movsl
xorb
dec
sbb
fldt
sub
pop
test
pop
test
adc
cmp
pop
scas
bound
inc
jp
cmp
jl
mov
mulb
mov
int3
add
xchg
fidivrl
push
sub
jp
adc
pop
jae
loope
sub
push
pop
nop
dec
push
push
test
filds
push
les
out
xlat
add
es
xchg
inc
jo
mov
imul
sbb
fwait
roll
cli
leave
std
out
ret
add
dec
adc
xor
cld
adc
and
and
loopne
push
adc
daa
mov
cmp
int3
popf
cmpsl
mov
push
addb
fistps
dec
lods
cmp
xchg
pop
mov
push
in
and
movb
dec
out
pop
cmp
lea
jg
loopne
shll
add
stos
jecxz
dec
sbbl
int
aas
mov
sbb
dec
int
push
inc
lea
mov
xlat
push
sbb
xchg
in
fcoms
popa
aaa
dec
xchg
sti
insb
ret
lds
mov
xor
mov
gs
shrl
stos
in
pop
lret
jno
rclb
adc
out
dec
fisubl
in
stos
mov
out
add
mov
les
and
add
cmpsb
mov
test
icebp
lahf
inc
into
aaa
outsb
repz
dec
xchg
jp
mov
popa
subb
je
rclb
pusha
orl
rclb
jl
stc
test
jp
jne
cmp
push
ds
adc
mov
add
int3
fs
mov
fwait
mov
stos
cli
sub
push
pop
cwtl
fbstp
mov
stos
push
lret
pushf
sti
std
mov
iret
jne
sti
loopne
das
or
popf
mov
popf
adc
pop
aaa
dec
sbbl
pop
jg
subb
xchg
decb
mov
fisttps
pop
fdivl
pusha
or
repnz
pop
add
mov
mov
dec
jns
xor
mov
mov
and
mov
pop
int
sbb
popl
inc
loopne
cmp
add
call
aam
mov
xchg
jnp
or
mul
adc
in
mov
inc
mov
scas
shrb
jmp
sbb
das
pop
xor
js
xor
mov
in
add
rcrl
cmp
cld
scas
inc
int3
sbb
xor
inc
xor
pop
cmp
lds
xchg
sbb
push
lret
push
fnstcw
outsl
pop
cmpsb
adc
and
fidivrs
jns
add
addr16
jae
lcall
add
inc
or
addl
mov
pusha
js
arpl
xchg
addr16
in
in
mov
jns
sbb
in
jb
pop
mov
jnp
aam
fs
imulb
pop
aad
push
pop
pop
mov
pop
push
jo
in
xchg
and
popf
pop
xor
lods
xorb
std
xchg
and
jnp
cld
mov
add
adc
call
cmp
pushf
inc
int3
movsb
push
movsb
sub
in
fisttpl
mov
cmpsb
inc
adc
sub
ret
aam
xor
negb
out
push
push
push
sub
push
popl
test
test
xor
in
sbb
repnz
sbb
xchg
sbb
dec
mov
mov
add
loope
test
mov
inc
pusha
ret
push
insl
sub
push
lcall
mov
scas
incl
testb
fsubs
mov
std
jns
outsl
xor
rol
pop
cmp
inc
xor
jb
imul
jne
add
daa
adc
pop
fcoms
scas
dec
or
js
lea
add
mov
adc
es
cmp
loope
jmp
xchg
add
test
xor
mov
stos
ror
dec
andb
ss
paddusw
xor
jecxz
sub
pop
ficoms
xor
pop
cmp
addl
xor
cmp
xchg
call
push
sarl
lods
xchg
icebp
mov
ret
push
jl
mov
movsb
mov
inc
imul
int
cmp
sarl
pop
test
les
jb
addr16
stos
jle
fnsave
cmpsl
fldt
push
xor
sbb
and
in
lcall
sbb
mov
sbb
adc
or
decl
pop
cwtl
jno
or
stos
jne
adc
lcall
mov
mov
stos
lds
mov
rorb
push
pop
and
add
pushf
ja
xchg
shlb
ljmp
stos
sub
and
mov
lret
lahf
dec
pop
sbb
inc
adc
inc
cmp
xor
aam
popa
xlat
sub
lret
lods
into
inc
daa
cld
mov
cld
and
in
sub
cmp
inc
mov
lcall
mov
or
out
xor
sbb
push
daa
sbb
add
mov
test
xor
pop
ss
mov
inc
rorb
clc
cmpsb
mov
add
jbe
mov
sahf
jmp
mov
adc
mov
popa
jg
jg
fadd
ret
sub
ja
add
lods
adc
incl
dec
shrl
movsl
jge
sub
imul
rorl
inc
xor
inc
mov
js
push
and
cmp
push
mov
sbb
jg
in
or
jmp
sbb
orl
cli
push
ljmp
fs
inc
fldenv
jbe
push
sub
sub
outsl
movb
push
or
adc
xor
rcrb
dec
ljmp
mov
sub
xor
fwait
xor
sti
jl
sbb
jg
xor
add
arpl
movsb
scas
mov
fyl2xp1
outsb
add
stos
sbb
jmp
insl
mov
test
imul
push
cmp
outsl
test
cmpsb
in
loopne
mov
jns
int3
ret
jae
dec
and
hlt
nop
jns
scas
push
sbb
leave
iret
mov
repnz
bound
pop
adc
dec
mov
xchg
mov
lods
jnp
cmp
push
push
cmp
xchg
dec
inc
and
dec
push
dec
aad
sub
mov
sti
enter
dec
fimull
sbb
and
in
adc
mov
andl
sbb
nop
xor
rolb
jmp
int3
mov
push
inc
xor
ljmp
fcmovbe
test
or
xchg
jo
rcr
sbb
dec
mov
cmpsl
fdivrl
jle
xor
jnp
nop
or
gs
jnp
ja
cmp
les
movsl
mov
jo
inc
outsl
jno
pop
in
adc
test
cli
popf
fidivl
lahf
and
jecxz
mov
jle
lret
sub
cwtl
inc
insl
add
adc
sbb
sbbl
arpl
cmp
pop
sbb
rclb
mov
cmp
loopne
push
cld
lcall
cmpsb
push
lcall
sbb
cmpsb
mov
jno
mov
xchg
outsl
mov
mov
mov
scas
and
cmc
push
int3
imul
inc
push
push
dec
xor
pop
and
scas
xor
movb
push
xchg
lds
test
pop
jge
xchg
mov
fnsave
inc
pop
mov
and
mov
jge
ja
loopne
add
sbb
out
aad
mov
clc
stos
testb
xor
mov
push
push
push
je
scas
cmp
jns
shrb
lahf
push
negb
inc
std
pop
repnz
and
add
std
decl
add
jmp
push
push
int
jecxz
push
outsl
test
xchg
std
out
mov
ja
cs
shlb
sub
call
repz
mov
in
ret
jg
stc
popa
popf
mov
mov
stos
ret
adc
enter
ret
push
lcall
jle
sub
test
or
inc
cmp
sti
push
xchg
jns
sbb
sarb
adc
sbb
push
adc
aaa
adc
cltd
es
clc
sarl
pushf
push
mov
mov
loope
lcall
in
sub
mov
pop
loopne
dec
sbb
xchg
jae
int3
mov
push
mov
stc
sbb
jmp
mov
sbb
data16
ror
pop
lret
or
pop
dec
cld
dec
popl
dec
mov
add
pop
sub
mov
jmp
les
adc
jge
lret
sub
rorl
mov
xchg
das
ret
pop
cmp
ljmp
or
and
popf
enter
imul
push
shll
aad
mov
or
sub
pop
ss
test
pop
sub
das
movsl
lea
cs
stos
push
sub
inc
rcrl
movsb
mov
ss
das
sbb
push
sub
mov
movsb
cmpsl
jae
xchg
arpl
push
clc
xor
fnstsw
mov
scas
clc
and
jge
sbb
inc
test
or
iret
clc
in
int3
dec
cmp
cmpsb
sbb
mov
scas
fadd
jne
cmp
adc
js
scas
adc
aas
outsl
ret
or
jb
fcmove
sub
sub
xor
mov
out
bnd
adc
pop
ror
jmp
inc
push
xor
pop
pop
nop
mov
in
or
push
in
enter
push
cli
lock
add
push
aas
addr16
and
repnz
push
cli
push
add
icebp
inc
cmpsl
inc
mov
arpl
imul
lds
dec
mov
je
push
mov
insl
mov
adc
divl
cwtl
loopne
shrl
fdivs
inc
aaa
loopne
cmp
aaa
ret
mov
sbb
add
push
bound
push
mov
cmpsl
ja
es
jnp
fisubs
pusha
idiv
adc
sahf
mov
sub
jge
cmpsb
xchg
and
inc
outsb
xor
push
mov
nop
jo
or
xchg
or
lea
inc
dec
dec
popa
lods
pushf
mov
sub
push
cmpl
stos
aaa
mov
mov
mov
sti
xor
rclb
dec
out
js
pop
mov
xchg
sti
pop
and
push
in
sbb
bound
sahf
push
lea
lret
out
cmp
stc
inc
xchg
dec
nop
js
int
dec
dec
popf
cmp
mov
mov
insl
insl
lcall
fs
dec
sub
inc
ljmp
je
imul
imul
lcall
jmp
js
push
pop
sub
pop
dec
mov
scas
cmpsl
xchg
fisttpl
test
mov
sub
dec
dec
out
lods
test
fdivs
decl
pop
mov
pop
sbb
lcall
mov
jecxz
sbb
insb
in
loopne
divb
mov
pop
xlat
fcoml
daa
mov
push
lret
lods
into
int3
cwtl
mov
loop
fsubs
fsubrl
push
aas
jge
aam
hlt
in
or
inc
xchg
cli
das
cmpsb
push
daa
pop
gs
jb
mov
jnp
xchg
imul
or
repz
sbb
sbb
xor
sbb
adc
data16
fsubrs
xchg
adc
cwtl
xor
and
inc
enter
dec
xchg
loopne
shlb
inc
pop
nop
subl
lods
leave
or
dec
sbb
mov
int3
and
arpl
int
in
dec
and
or
mov
lea
stc
data16
cmp
push
loop
mov
sbb
lock
cmp
xor
pop
mov
mov
outsb
mov
out
mov
cltd
pop
in
adcl
xor
or
sbb
adc
inc
pop
fs
push
cmp
pusha
xchg
mov
xchg
lods
je
mov
pop
or
dec
loope
es
sahf
repnz
cmovno
fxch
add
test
push
cs
mov
lahf
test
sub
push
sti
jne
outsl
or
mov
insb
xor
mov
or
xchg
les
cmp
lods
lea
stc
lds
xor
and
dec
mov
fiadds
and
ret
mov
imul
cmp
mov
inc
les
in
sbb
divb
aaa
nop
sbb
bound
jg
imul
ljmp
sti
push
xchg
cli
fsubrp
mov
jns
out
dec
mov
in
je
js
das
xchg
push
aam
pop
jp
push
int3
hlt
shr
add
rcrl
cwtl
lods
jl
dec
mov
push
sub
and
push
jbe
xchg
imul
sti
hlt
fcmovb
or
xchg
pop
push
mov
test
stos
in
icebp
sub
flds
outsb
xorb
dec
adc
and
sbb
push
out
mov
loope
push
sub
sbb
xchg
adc
inc
push
stos
dec
mov
enter
mov
lret
inc
sub
mov
mov
cld
stos
cld
div
mov
xor
ja
add
daa
inc
xchg
lods
cmc
incl
add
shll
call
sub
ret
jg
in
add
pop
xor
std
pop
shll
jns
rolb
mov
xor
sbb
outsl
sbb
es
sbb
xchg
jbe
push
push
push
fbld
hlt
jo
push
cmp
mov
xor
lds
xchg
push
add
cli
pop
sbb
or
hlt
fisttps
pop
dec
cmp
aad
in
or
pop
add
outsb
mov
dec
pop
mov
daa
lods
dec
fucomi
mov
out
fwait
stc
jns
test
incb
mov
fisubs
sub
daa
mov
pop
push
jmp
iret
mov
movsb
and
lea
and
add
sub
push
aas
adc
adc
jge
sub
lret
cmp
push
in
sub
inc
mov
adc
stos
jmp
fcomps
pop
je
jl
adc
mov
into
mov
fimull
and
insb
sub
movsl
insl
mov
push
sbb
shrb
ja
incb
or
sub
xor
add
cmp
gs
xor
shll
sarb
push
adc
sub
je
ja
xchg
sub
xor
xchg
xchg
mov
push
xchg
dec
test
pop
mov
jp
mov
and
cwtl
xchg
jge
or
or
outsb
addr16
cld
std
int3
push
mov
jle
popf
movl
mov
mov
fcoms
cmpsl
dec
arpl
scas
dec
testl
pop
movsb
xor
aas
inc
or
and
add
inc
lock
negb
in
inc
mov
jmp
xor
mov
shr
int
or
mov
xchg
loope
pop
int
enter
push
jno
xchg
mov
aad
dec
popf
bound
sbb
mov
shlb
rcrl
sub
fisubrs
fistpl
test
adc
jb
jns
cmpsl
out
and
sbb
jnp
les
bound
inc
test
or
int
leave
pop
xchg
rcr
xor
cmp
roll
xchg
hlt
jb
jmp
adc
in
enter
das
imul
or
popf
std
out
pop
es
lds
mov
popf
xor
jbe
hlt
xchg
dec
add
ja
sbbl
dec
sbb
dec
ja
sti
pop
test
nop
push
sub
inc
add
mov
ja
inc
adcl
lcall
pop
jp
test
inc
les
push
pop
mov
test
add
pop
and
mov
je
cwtl
mov
push
inc
dec
nop
mov
into
jle
aaa
bt
mov
in
icebp
dec
push
mov
fisttpl
mov
in
imul
push
dec
fistl
fisubrs
mov
repz
loope
sahf
daa
cwtl
or
dec
gs
test
or
stos
mov
cld
mov
inc
mov
jl
jmp
sub
fnstcw
jne
push
clc
repz
scas
pop
mov
push
mov
out
and
fistpl
sub
pushf
jb
cmp
push
and
ja
movsl
sbb
mov
mov
cwtl
loopne
push
pusha
xor
pusha
mov
testb
movsb
xor
jecxz
outsb
jo
lret
inc
mov
jg
lock
mov
iret
icebp
addr16
add
jmp
mov
int
lods
shll
mul
shll
push
stos
jb
mov
dec
inc
inc
push
shr
cli
scas
stos
xchg
inc
sub
stos
enter
test
xchg
loop
aaa
shl
popf
or
fs
and
test
mov
sbb
mov
mov
dec
or
mov
mov
cmp
inc
jmp
sub
lahf
pop
notb
push
xchg
fadds
pop
adc
dec
xchg
addb
mov
mov
sarl
push
inc
push
and
nop
adc
xchg
mov
fdivrs
in
xor
push
jnp
push
or
xchg
inc
xlat
and
inc
jmp
inc
mov
push
loopne
cmp
push
dec
lret
jns
sbb
notl
xchg
pop
and
xlat
pop
dec
pushf
pushf
fcompl
pop
gs
push
pushf
xchg
outsb
sbb
fwait
pop
dec
push
ja
clc
repz
cwtl
jns
lret
dec
loopne
add
mov
mov
adc
pop
ret
add
insl
or
or
xchg
ss
jle
jo
fstps
mov
in
mov
test
cmp
xchg
insb
ret
jg
xor
ret
mov
scas
mov
repz
mov
inc
lret
nop
mov
sbb
sti
icebp
sbb
rcl
dec
repnz
fs
dec
pop
insb
add
ss
mov
sub
jecxz
popf
adc
out
xchg
insb
ret
mov
nop
test
ds
out
stc
xor
xor
fidivl
dec
or
enter
test
ds
addr16
rclb
cltd
dec
orb
out
xchg
mov
out
gs
jl
mov
jno
lods
jno
push
insb
daa
xor
sub
jle
and
pop
lret
cld
leave
out
push
dec
pop
iret
bound
test
add
in
push
sbb
cmp
popf
jle
add
adc
cltd
daa
mov
mov
push
mov
inc
sub
xor
mov
cmp
mov
sub
xchg
scas
push
add
ret
stos
mov
mov
push
sub
adc
inc
lds
mov
cmpsl
cltd
in
sbb
sbb
ds
lret
stc
loop
xchg
lret
and
dec
repnz
inc
bound
jbe
fs
mov
dec
mov
mov
push
mov
sbb
nop
xchg
or
movsl
jbe
mov
push
xor
or
loop
jnp
popa
iret
sbb
or
ljmp
xchg
sarl
pop
inc
out
mov
ficompl
jnp
dec
xchg
dec
mov
out
fisubrs
inc
clc
mov
out
fisttps
add
xchg
pushf
pop
fs
cpuid
sbb
jae
fs
notl
pop
mov
pop
mov
aam
xor
out
call
jmp
dec
adc
fucom
push
cli
pop
pop
xor
jne
lods
dec
adc
cmpsl
std
mov
sub
push
xchg
jae
stos
inc
and
xchg
clc
lcall
inc
mov
dec
sbb
pop
cmpsb
fs
dec
jns
xlat
aam
adc
out
dec
jl
xchg
loopne
cmpsl
in
cltd
or
shll
adc
pop
cmp
xchg
cmc
ja
inc
or
jmp
test
cmp
mov
dec
or
mov
int
lea
cmp
mov
movsb
xlat
and
push
shl
out
test
into
pop
out
hlt
mov
push
sub
into
cmp
lods
decl
mov
icebp
xchg
movsb
jge
sbb
sar
xchg
cmc
negb
mov
inc
jns,pn
out
cmp
fimull
in
lock
shlb
add
les
mov
into
adc
push
jae
inc
dec
sbb
push
xor
jb,pt
cmp
ja
xchg
sub
fistl
mov
loopne
test
push
jg
fidivs
xchg
pop
in
mov
inc
sti
iret
sarl
clc
push
sbb
xchg
sub
dec
ret
or
sub
mov
and
cmp
mov
test
cmc
ss
and
lcall
push
inc
roll
arpl
data16
push
and
mov
rorl
xchg
xchg
pop
mov
mov
adc
andb
jae
adc
lea
loopne
ljmp
imul
frstor
in
mov
sbb
xorl
and
lcall
mov
sub
into
mov
les
xlat
stos
pop
gs
mov
mov
filds
pop
push
pop
pop
push
push
push
xor
ja
jo
mov
rcll
pop
loop
add
cmp
jne
sahf
xchg
insl
push
mov
jmp
jns
and
xchg
pushf
cmp
inc
jnp
ficomps
test
fcmovb
xor
cltd
imul
loope
aam
or
jg
fnstenv
lods
dec
fucompp
cld
jecxz
sbb
pusha
pop
dec
sbb
hlt
jb
imul
popf
add
add
xor
je
in
xchg
push
cltd
jae
cmc
inc
xor
adc
xor
shll
inc
fdivs
sub
xor
jmp
mov
test
imul
in
or
fisubl
add
aaa
icebp
push
inc
fsubr
dec
lret
jmp
adc
xchg
jle
rcl
pop
int
test
dec
dec
shr
cmc
aam
daa
fsubrl
je
xor
or
ret
addr16
inc
adc
fwait
lcall
rorb
fimuls
jno
scas
insl
jne
xor
xor
and
push
jo
shrb
dec
mov
adc
push
cli
hlt
test
dec
mov
mov
stos
xlat
cmp
mov
mov
push
jae
add
jo
icebp
or
pop
xor
pop
aad
jge
mov
xor
aaa
adc
les
lea
pop
sub
xchg
in
hlt
xchg
xchg
daa
loope
push
add
push
cwtl
push
int
lret
insb
int3
ss
ljmp
icebp
xchg
int3
adc
pushf
push
xor
aas
adc
fmul
dec
xlat
das
pop
aad
and
ret
iret
mov
cmc
dec
xchg
aaa
aad
stos
push
mov
jge
fisttps
or
sahf
sbb
cmp
cmpsb
lock
sub
jno
push
sbb
jnp
add
ficomps
cmp
fidivs
pop
ret
out
je
inc
jmp
mov
mov
in
and
stos
mov
lret
adc
dec
outsb
dec
dec
ds
dec
push
test
mov
mov
sbb
dec
and
pop
jns
cli
push
sub
enter
test
jecxz
je
hlt
mov
jo
mov
xor
mov
push
out
ret
jo
leave
mov
cmp
leave
dec
sbb
and
xor
inc
inc
inc
outsl
loope
addr16
push
loope
pushl
push
mov
cmp
jb
test
fdivr
jae
stos
pusha
and
mov
jnp
xor
add
adc
call
push
push
lahf
sahf
add
cwtl
shl
popa
dec
push
ss
call
loopne
mov
popf
mov
stos
icebp
movsb
outsb
dec
popa
pop
fidivrs
adc
adc
arpl
dec
test
or
or
lahf
iret
sub
and
cmp
pop
add
sub
stc
xchg
pop
repz
je
xor
pop
in
pop
and
iret
std
jmp
mov
dec
imul
mov
and
mov
inc
std
sub
cwtl
rolb
mov
pushf
inc
pop
or
popa
es
in
movsb
les
pop
inc
jb,pn
push
xchg
test
fildl
fistpll
push
lahf
sub
sub
enter
addl
sub
mov
dec
push
scas
ja
inc
in
dec
pop
xor
lcall
fbld
rcll
cmp
ja
jecxz
shll
mov
in
notl
or
test
movl
mov
loope
fsubr
sub
push
lods
jnp
jae
negb
sbb
mov
clc
jmp
and
fldcw
push
adc
ret
sbb
rorb
call
stc
stc
loop
in
adc
push
push
pop
xor
mov
adc
cmp
xor
adcb
test
jl
popa
mov
pop
and
fisttps
dec
and
mov
clc
ljmp
ficomps
cld
jno
cwtl
pop
or
loopnew
and
xchg
add
add
xchg
cltd
lea
sahf
sbb
pop
xchg
ret
push
dec
adc
sub
push
gs
or
lret
or
bound
cwtl
xchg
je
lods
xor
push
and
sbb
in
cmp
fcoms
iret
fs
ret
add
sub
mov
mov
cmp
scas
xchg
mov
fincstp
cmp
inc
mov
lds
mov
cld
outsb
jns
js
push
jo
mov
lock
pop
jb
icebp
in
fcoml
js
in
add
in
adc
xor
pusha
xchg
sahf
fs
nop
mov
mov
mov
out
xor
jmp
ret
aas
cwtl
jnp
loope
sarl
js
push
int
xor
or
cmp
sti
shlb
mov
out
dec
push
mov
stos
xchg
dec
filds
stc
xchg
mov
xchg
add
inc
sarl
fildll
jb
fimull
sub
ret
cwtl
cltd
pop
cli
enter
pop
cmc
jg
and
out
inc
outsl
fisttpl
cmp
mov
jle
in
inc
and
mov
mov
inc
arpl
testl
out
mov
jp
scas
xchg
jmp
sub
jbe
mov
jmp
or
lret
int
dec
je
push
adc
add
xchg
mov
in
enter
sub
jo
test
mov
add
xor
push
push
dec
or
fwait
jns
into
add
addr16
xchg
cmp
cmp
xchg
cltd
div
mov
pop
aam
scas
and
push
insl
movsl
mov
loopne
gs
pushl
outsb
mov
jno
repz
pop
lods
mov
pop
lods
push
das
jnp
data16
jle
or
jbe
adc
xor
cmp
test
mov
jge
dec
xchg
out
mov
add
outsb
sbb
fstps
mov
scas
mov
add
test
ret
adc
popf
cmp
inc
add
mov
sub
lods
aaa
xchg
enter
mov
inc
scas
ret
and
and
and
aad
jge
xchg
push
and
into
data16
stos
xor
mov
fs
jnp
lds
lods
adc
pop
pushf
mov
hlt
jge
adc
add
lret
bound
jmp
and
or
out
and
out
mov
insl
and
mov
cmp
lea
mov
addr16
into
sbb
lods
push
arpl
lock
sbb
scas
xor
and
aaa
popa
int3
pop
in
pop
sub
ret
push
clc
mov
cmpl
movsl
dec
push
lea
mov
mov
sub
sub
roll
cmp
sub
inc
pop
fnstsw
mov
cmp
popa
add
lcall
into
and
in
push
pop
jnp
leave
bound
cwtl
call
xor
aas
mov
cmp
imul
leave
mov
test
xor
or
pop
sbb
or
lock
ret
xlat
dec
inc
dec
inc
push
arpl
test
xchg
cmpsb
or
mov
jno
in
imul
cmp
popa
lcall
loopne
movsl
dec
pop
popf
aas
subl
lahf
xchg
inc
adc
adc
fwait
imul
out
adc
jg
lahf
lret
jnp
cli
jb
cmpsb
mov
xor
jo
arpl
leave
mov
inc
push
andl
std
lea
mov
inc
fdivrl
cmp
mov
cmp
popa
add
imul
je
daa
pop
out
cmpsl
in
mov
lea
mov
loope
lea
cltd
and
dec
xor
and
test
fnsave
test
test
test
xor
pop
mov
mov
rcl
and
xchg
pushf
mov
sbb
jne
cmpsl
ret
hlt
test
mov
dec
ficompl
imul
scas
adc
ret
cltd
mov
mov
push
jp
inc
and
fdivs
push
xchg
cmp
shrb
add
cmp
inc
arpl
mov
lods
xor
cmp
in
cmpsl
ds
push
sarb
add
loope
imul
jp
loopne
sahf
sbb
incl
mov
or
test
pop
roll
cs
js
ficoms
pop
lds
xchg
cmp
or
xchg
std
outsl
test
out
or
mov
jns
jmp
repz
outsb
push
mov
std
mov
lods
les
enter
inc
rorl
push
fisubl
adc
je
sbb
test
pop
and
les
jnp
push
push
add
ljmp
pushf
and
nop
or
mov
lret
mov
or
jne
repnz
stos
loope
ss
lret
inc
int
jge
das
clc
sar
lds
stos
lods
sarl
stos
sbb
pop
loop
push
rol
roll
jo
dec
mov
sbb
inc
data16
xor
test
outsl
das
jno
xchg
fisubrs
push
inc
stc
sbb
pop
loope
dec
jle
mov
sahf
cmp
cwtl
cmp
pop
mov
shl
inc
dec
mov
test
xchg
sbb
psubb
popf
inc
stos
mov
lea
jns
pop
mov
xor
fmull
cmp
mov
jbe
ljmp
call
stc
cld
out
into
jecxz
jl
dec
xchg
dec
out
call
fstpt
fwait
cs
cmp
cmpsb
dec
lock
adc
xor
jl
loope
lcall
cmpb
xchg
jbe
xchg
jo
jbe
cld
mov
push
fstpt
mov
je
repnz
add
dec
jmp
adc
cmp
cmp
jp
dec
xor
mov
mov
add
mov
inc
cmp
mov
cld
or
jae
das
jno
jb
mov
dec
shrb
sub
mov
sti
mov
or
lock
out
mov
aas
mov
push
ds
push
push
jecxz
sub
jnp
mov
jge
adc
xor
cmpsb
jnp
out
adc
jns
arpl
or
fisttps
inc
test
aaa
icebp
popl
shll
inc
sbb
int3
or
aad
das
pop
mov
cs
fcomps
mov
adc
inc
mov
dec
aas
ljmp
fidivs
push
icebp
mov
cmp
rorb
popa
fsubl
adc
and
imul
mov
sbb
int
jge
xchg
xchg
dec
inc
dec
and
insl
ret
fldt
inc
lock
jle
xor
std
ficomps
sub
and
jnp
push
not
push
and
pop
jmp
and
add
iret
stos
mov
fwait
out
repnz
gs
ja
mov
cmp
jp
ficompl
cmp
dec
push
xchg
lods
shll
faddl
jg
out
pop
rcr
and
xchg
das
pop
repnz
pop
clc
inc
mov
dec
inc
add
push
fdivl
mov
inc
test
add
or
push
adc
and
mov
xor
clc
jp
movsb
jmp
cmp
push
imul
call
add
nop
out
cmp
lock
js
cld
adc
xchg
push
imul
push
pop
cmpb
push
dec
and
push
icebp
popf
lods
cmpb
dec
fsubs
jecxz
xor
mov
pop
dec
push
or
fistpl
rcrl
lods
stos
test
mov
adc
gs
sub
out
out
shr
idivb
inc
mov
mov
mov
pop
push
in
and
mov
out
dec
dec
cli
loop
cmpb
mov
std
icebp
jbe
das
jecxz
gs
loope
aas
sub
cld
mov
jb
mov
xchg
inc
xor
outsb
fildl
pop
incl
addl
jno
idiv
sbb
mov
sti
add
faddl
fidivrl
pop
jno
popa
stos
test
jl
cwtl
negb
push
arpl
xchg
fisubl
xlat
cmp
cltd
movl
inc
mov
cs
dec
cmp
pop
out
push
push
mov
dec
shl
push
cmc
lods
lret
inc
push
adc
in
loopne
sbb
mov
xchg
push
mov
and
out
fcmovu
stos
push
fidivrs
cli
xchg
xchg
inc
or
push
scas
mov
fmull
popa
cmpsl
xor
sahf
gs
rcll
rcrb
mov
fcomps
jno
ret
or
inc
sbb
daa
adc
dec
cmp
mov
or
sahf
icebp
outsb
std
negw
sub
movsb
ds
cwtl
jmp
int
cmpsb
jb
dec
xchg
pushf
out
dec
in
pop
add
roll
sub
fidivs
fcompl
loope
push
dec
pop
and
sti
leave
pop
flds
and
jecxz
outsb
hlt
out
imul
hlt
fs
push
mov
sub
ss
mov
push
mov
ss
imul
int3
clc
lret
fs
pop
cmp
adc
cmp
mov
lret
jae
cmp
dec
cmp
loope
cmpsb
mov
sub
lods
inc
sahf
int3
mov
test
inc
aam
fldpi
movsb
icebp
daa
dec
push
in
lret
lea
add
les
es
dec
mov
pop
and
out
jge
sub
orl
push
xor
cmpsb
adc
lods
lods
or
mov
sbb
push
out
in
mov
add
pop
inc
or
in
sbb
jle
mov
repnz
lahf
icebp
xchg
ja
dec
pushf
enter
nop
xorl
lahf
xchg
cmpsb
push
xchg
xchg
cli
push
dec
jne
adc
lods
test
dec
dec
test
push
outsl
ljmp
out
pop
push
xchg
jne
mov
pop
pop
pop
in
pop
mov
and
int3
push
ja
pop
pop
push
add
aam
mov
enter
sbb
in
mov
sti
pop
xlat
or
pop
mov
push
out
js
pop
mov
sub
leave
popf
aas
pop
cmp
arpl
in
xchg
inc
lret
mov
adc
lret
sub
flds
pop
or
pop
and
xchg
pop
mov
add
popf
inc
rcl
mov
ret
sti
mov
push
arpl
in
push
lcall
cld
xchg
sbb
js
adc
cmp
xor
cmp
mov
test
adc
loop
call
lock
mov
not
adc
dec
mov
imul
pop
mov
sbb
orb
insb
lret
mov
sub
jae
outsb
push
jmp
test
xchg
jg
jge
fcompl
lds
int3
jns
cmp
mov
pop
stc
mov
lods
fld
jge
jmp
into
movsl
out
ds
je
mov
sbb
into
stc
clc
and
jle
and
sbb
outsb
pop
orb
idivl
cmpsb
pop
sbb
insb
insl
testl
jbe
mov
sahf
sbbl
pop
cld
mov
pop
push
cmp
inc
in
cmpsl
cmpsl
and
cmp
ret
clc
jae
mov
mov
pushf
jbe
and
lcall
imul
jnp
adc
mov
icebp
inc
pop
inc
or
insb
lock
xchg
mov
pop
jle
mov
mov
or
jmp
mov
inc
ret
rol
shlb
lcall
lret
mov
mov
pushf
ret
mov
adc
xchg
das
mov
push
movsl
mov
xchg
push
push
notl
jbe
std
mov
push
jecxz
pop
sti
and
or
and
xchg
jae
outsb
pop
clc
adc
or
mov
push
ja
in
push
out
mov
add
loop
sti
cs
add
mov
mov
dec
inc
inc
fsubrl
mov
inc
popl
fbld
xchg
test
lods
jp
add
jge
pop
leave
les
cmp
ds
rolb
jnp
arpl
imul
cmp
mov
xor
cmpsb
mov
out
rorl
sbb
mov
movsl
and
es
add
aad
inc
stos
mov
fst
gs
lret
cmp
xor
fwait
push
mov
push
in
push
in
jns
hlt
pop
cmp
dec
mov
dec
daa
popa
mov
adcl
fcoms
push
cmpsb
mov
pusha
jnp
lret
insl
or
lret
add
or
or
imul
add
stos
dec
sbb
push
xlat
mov
pop
mov
aaa
pop
adc
push
rcrl
hlt
lock
jbe
jecxz
inc
or
lret
mov
testb
mov
rolb
andl
mov
cmp
std
clc
xor
adc
into
cwtl
aaa
je
lret
sbb
jl
addr16
adc
or
pop
cmp
jb
sbb
cltd
dec
aaa
mov
lods
sbb
shll
and
popa
movsl
push
push
fs
fldt
sub
adc
push
fwait
lods
jne
fadds
jmp
inc
mov
cli
lea
outsb
and
push
sbb
lcall
in
mov
fcomp
call
pop
push
mov
stc
notl
pop
sbb
mul
and
mov
fs
mov
add
out
sti
lcall
pop
sti
cmpsb
clc
filds
dec
mov
popf
xor
jl
xchg
and
inc
cmp
push
imul
pusha
das
adc
add
sub
mov
jmp
rcr
jno
movsb
popf
xor
cmp
movsl
imul
push
add
outsb
add
adc
push
fisubl
pop
popa
stos
fisttps
testl
in
xor
and
push
incl
mov
lret
mov
pop
cmc
repz
into
mov
mov
pusha
shrb
filds
int3
nop
dec
dec
cld
pop
mov
loop
ss
mov
test
rorb
fmull
jecxz
stc
mov
or
in
adc
daa
cmp
jle
jge
ret
cmp
adc
mov
mov
xor
sti
sbb
inc
add
cmpsl
arpl
addr16
xchg
stos
mov
aam
stos
pop
pop
dec
inc
cmpsl
sub
stos
xchg
movsb
fildl
mov
ret
mov
ret
rolb
in
sub
jbe
in
and
xchg
jo
xchg
iret
xor
jb
sbb
out
dec
inc
jbe
cmp
push
mov
and
inc
inc
rclb
dec
arpl
push
dec
pusha
mov
push
sbb
shlb
add
std
add
adc
fldenv
add
pop
int3
arpl
or
push
jge
or
adc
mov
enter
push
shlb
pop
addr16
mov
and
xlat
pop
in
in
inc
insl
fwait
mov
jo
mov
ja
or
dec
or
jle
inc
pop
ljmp
jmp
push
dec
mov
jo
inc
mov
sub
push
dec
test
ret
fnsave
add
sar
mov
mov
adc
xchg
push
out
std
out
xchg
pop
popf
cmp
subl
sub
sub
adc
pop
pushf
inc
sbb
insb
pop
bnd
adc
das
es
xor
mov
sub
push
stc
inc
sahf
add
dec
xchg
mov
jae
decl
outsb
adc
push
add
stos
mov
push
jmp
xor
pop
cmc
add
jnp
pop
or
repz
jecxz
xchg
cs
adc
movsb
bound
dec
sbb
lahf
lods
lods
mov
pop
or
and
aas
mov
add
pop
mov
int
mov
sub
aad
jb
inc
lea
int
mov
push
lock
jle
cvtpi2ps
jmp
aad
les
dec
mov
mov
fidivl
sub
popa
lcall
shll
and
movsb
mov
dec
dec
cmp
addb
inc
add
xorl
push
sbb
arpl
xchg
push
push
mov
add
jl
or
cmpb
push
push
jmp
in
je
xlat
jg
arpl
sub
sbb
hlt
ds
or
enter
test
iret
dec
addr16
pop
cmp
test
out
pop
jecxz
in
sub
sub
ljmp
pop
insb
fwait
in
sub
insb
fdivs
fcomip
jp
mov
sbb
idivb
je
imul
outsl
or
sti
loopne
sbb
sbb
ja
jecxz
dec
inc
xchg
test
dec
and
jb
add
sarl
call
mov
es
insl
xor
imul
cmp
fidivrl
xchg
jns
rolb
int3
daa
jne
adc
cmp
jmp
lods
aam
or
faddp
mov
outsl
out
mov
mov
jnp
shll
inc
dec
roll
sahf
sbb
lock
push
xchg
in
call
mov
sbb
pushf
xor
xorl
roll
dec
in
popa
stos
push
pop
imul
shll
fs
or
push
xchg
les
add
mov
mov
adc
movb
sub
int3
das
movsb
scas
cwtl
sbb
dec
lock
loopne
xor
das
ds
and
mov
mov
orb
repnz
lret
inc
xor
popf
hlt
js
mov
mov
push
add
int3
fs
sub
lods
daa
cmp
and
leave
repnz
test
mov
push
or
in
inc
insl
fldenv
dec
xlat
sarb
shlb
pop
fdivs
add
inc
or
pop
pop
test
jne
js
jbe
out
and
repz
pusha
xchg
and
jmp
lret
ret
pop
xchg
test
cmpsl
sub
xorb
ret
pop
or
subl
pop
testl
xchg
movaps
pop
enter
test
jge
xchg
stos
insb
out
jle
sti
lahf
pop
outsb
nop
mov
aam
pop
mov
aad
test
ds
mov
xchg
iret
lods
fistl
fsts
pop
aam
cmp
mov
pop
lods
mov
mov
jle
ljmp
cltd
movsl
xchg
pop
push
cmp
or
das
sub
mov
jp
hlt
lock
pop
push
push
push
and
out
mov
arpl
mov
push
test
pop
push
out
inc
or
scas
cmp
scas
adcl
lret
scas
stos
cmpsl
cmc
push
shrb
int
push
shl
arpl
cmp
inc
push
mov
jnp
mov
and
lahf
sbb
insb
xchg
test
mov
dec
les
and
aam
pop
sbb
mov
insb
bound
pop
mov
mov
cmp
pop
les
orb
push
mov
out
add
shlb
inc
or
fnstsw
push
in
out
sbb
jp
jmp
fisttpll
dec
mov
jp
pop
mov
aam
sbb
lock
pusha
les
lds
sbb
out
bound
sub
fdivs
cld
loope
aad
xchg
mov
icebp
cltd
add
aaa
adc
dec
mov
mov
les
mov
leave
lods
popf
lods
push
dec
test
cmp
dec
stos
into
pop
sbb
icebp
mov
mov
xor
xchg
inc
mov
xor
or
ret
or
adc
cli
sbb
scas
push
into
pop
jne
dec
ljmp
xchg
ds
ficoms
inc
cmpsb
pop
jl
mov
inc
dec
call
xchg
fildl
dec
es
stos
in
mov
lods
and
repnz
or
ja
or
add
xor
popf
movsb
bound
sub
outsb
inc
les
daa
outsl
pop
push
movsl
push
shl
leave
push
roll
js
stos
push
gs
mov
out
mov
or
outsb
mov
inc
mov
xchg
mov
sbb
adc
and
sub
xor
or
xchg
imul
jge
push
inc
repz
loopne
mov
dec
into
mov
sahf
push
shlb
pop
mov
mov
loop
daa
push
cs
xchg
sub
mov
jb
push
icebp
mov
pop
pop
stc
or
push
xor
imul
das
in
cmp
inc
or
jno
pop
cmp
mov
repnz
mov
pusha
insb
pop
add
in
mov
lcall
xchg
movsb
repz
mov
adc
insb
push
movsl
lods
or
in
scas
movl
and
push
fsubrl
fistpl
push
jb
inc
data16
xor
fcomps
mov
dec
lahf
push
push
jne
lret
xlat
push
add
push
push
pop
cmp
xchg
lods
jg
clc
push
fimull
out
fisubrl
sub
cmc
mov
in
out
scas
enter
std
sub
cli
cmp
jne
cltd
insl
xor
sbb
popa
push
xchg
jl
pop
pop
or
cmp
out
jnp
ret
test
push
or
jecxz
outsl
ret
stos
gs
lahf
lret
lret
jge
adcb
lock
and
sahf
cmp
adc
or
adc
loopne
cltd
mov
repnz
sub
mov
daa
adc
pop
daa
mov
clc
stos
xor
popa
shrb
sbb
sub
int3
jbe
cwtl
fadds
pop
inc
dec
xchg
aam
push
jo
mov
fcomps
jbe
fwait
sub
mov
pop
add
pop
and
outsl
stos
add
repnz
aad
pop
inc
or
int3
push
ljmp
push
pop
pop
xchg
and
faddl
or
pop
jno
fdivr
ja
addr16
ret
push
pop
popf
fsubs
in
dec
mov
dec
outsl
icebp
int3
fdiv
addb
frstor
in
ja
push
xchg
aaa
inc
cmpsb
xor
fwait
mov
push
push
or
cld
in
mov
shlb
push
icebp
inc
insb
jg
int
adc
pop
shrl
mov
ljmp
outsl
cmp
lea
adc
sbb
add
jnp
out
inc
aas
add
icebp
push
jp
inc
dec
out
leave
cmc
or
add
clc
lods
adc
rolb
imul
xchg
call
insb
or
cld
xor
dec
enter
inc
rcll
rclb
in
aad
xchg
cmp
rclb
mov
popa
cli
mov
dec
mov
adc
add
cmp
ror
nop
fmuls
jnp
fcompl
pop
xchg
inc
enter
repz
lds
xchg
xor
adc
mov
mov
and
subb
xchg
jle
in
or
and
in
pop
xchg
fildl
test
adc
insl
scas
jb
loopne
or
data16
sub
cmp
test
mov
add
dec
mov
scas
test
xchg
mov
es
mov
aaa
xchg
lcall
aas
dec
data16
sub
pop
pop
mov
mov
add
mov
and
xor
popa
mov
jbe
sbb
test
dec
or
enter
mov
inc
push
lods
pop
xchg
push
lods
add
jne
shrl
mov
js
mov
or
loope
nop
lock
cmpsb
andl
rcrl
pop
ds
add
inc
pushf
mov
aas
sub
addr16
cmp
or
out
inc
test
mov
loop
sar
cs
aam
insl
xor
lcall
or
mov
out
xchg
lcall
push
mov
repz
mov
jbe
inc
pop
mov
push
jbe
outsl
sub
adc
mov
xorb
popa
pushf
out
cmp
movsl
arpl
call
addb
mov
add
pop
punpckhwd
outsl
data16
test
es
cmpsb
jae
stc
jle
jmp
into
lods
mov
mov
mull
loope
jle
jg
or
fcoml
outsl
test
test
xor
ss
inc
gs
mov
or
addl
rcrb
repz
mov
lcall
add
inc
add
mov
je
jo
ds
lods
out
nop
push
pusha
test
mov
fldt
scas
inc
mov
jnp
rcrb
jbe
mov
nop
jg
scas
mov
cmp
sub
add
jmp
push
mov
pop
inc
lods
pop
adc
cmp
sbb
rorb
pop
sbb
cli
push
dec
sbb
mov
or
enter
mov
hlt
les
pop
inc
shrl
int3
sub
es
pop
adc
mov
jns
stc
repz
and
ja
pop
mov
dec
popa
xor
fisttps
pop
inc
jae
ja
icebp
pop
sbb
xor
movsb
and
nop
sbbl
hlt
jg
push
xorl
adc
cmp
sub
out
enter
push
xor
popf
pop
jg
cs
cmp
in
or
lret
jp
in
add
insl
outsl
lret
subl
rclb
stos
inc
dec
inc
dec
fbstp
add
mov
loop
jnp
stc
pusha
cmp
ret
xor
add
mov
and
faddp
aad
fstpt
adc
inc
in
iret
inc
popa
repz
lds
pop
negl
and
sarb
sub
loop
repz
cwtl
xchg
xorb
jmp
cmp
sarb
repz
movsb
sarl
adc
lea
mov
pop
out
inc
dec
stc
push
sbb
or
sbb
loope
imull
or
add
sub
xchg
popf
add
mov
pop
out
pop
and
mov
xchg
out
cli
and
cwtl
add
mov
sar
mov
pop
imul
cli
dec
pusha
loop
dec
sub
aaa
daa
test
mov
add
pop
jo
cmp
ret
aas
or
movsl
call
idivl
jns
adc
stos
loopne
dec
mov
iret
inc
stos
filds
out
in
mov
js
push
inc
push
adc
sbb
cltd
pop
pop
and
push
push
shr
gs
jae
addr16
lock
stos
xchg
pop
jae
xor
mov
into
pop
adc
pop
rol
and
loop
xor
adcb
shlb
subb
std
cli
xchg
mov
jbe
adc
dec
inc
imul
outsl
pop
or
inc
sbb
sub
stos
and
jns
shll
shll
pushf
xchg
insb
add
xchg
daa
adc
push
in
jecxz
jnp
mov
push
sbb
lds
stos
pop
add
or
cmp
cmp
and
inc
jo
sub
jl
xchg
adcb
cli
inc
fs
cld
les
jl
je
cmp
inc
lock
scas
mov
js
clc
das
pop
jmp
rcll
sahf
test
fimuls
pop
lret
imul
xchg
and
lret
dec
or
lcall
push
fcomps
cwtl
mov
cld
inc
sub
movsl
cld
mov
aam
lcall
imul
jb
add
das
fbstp
jp
scas
add
int
push
mov
jo
push
mov
addr16
imul
pop
movsl
icebp
imull
mov
pop
dec
scas
adc
xchg
mov
mov
ffreep
popa
cwtl
adc
pop
cmpsb
ljmp
fs
sub
add
imul
mov
cmpsb
fstpt
jle
mov
inc
cmpb
mov
or
and
dec
push
xchg
jmp
lds
adc
popa
ljmp
iret
enter
setnp
xchg
outsl
shll
mov
lret
das
xchg
mov
and
pop
js
popf
mov
inc
sbb
fwait
daa
insb
pop
push
iret
push
mov
bound
push
lock
out
lock
test
movsb
pop
loopne
jae
jge
int3
pop
sbb
sbb
mov
call
sahf
add
add
cld
cs
dec
push
jle
gs
lret
frstor
shrl
adc
cs
shll
push
dec
mov
clc
cwtl
xchg
fcmovbe
dec
pop
or
inc
cli
adc
mov
cmp
xchg
nop
divb
aam
dec
add
lods
mov
pop
jle
add
push
inc
into
roll
dec
push
push
mov
pop
test
sub
adc
mov
in
cmp
aam
cmp
popw
fs
arpl
test
mov
movsl
inc
outsb
adc
sbb
pop
int3
movsl
push
push
xchg
fdiv
adc
sti
sarb
out
xor
push
pop
jmp
lret
call
ret
les
or
cmpsl
or
pop
bound
dec
sub
mov
iret
rcrl
sbb
add
xchg
pop
shrl
call
pop
pop
repz
das
cs
lds
scas
add
or
movsb
insb
arpl
jl
ret
jge
mov
gs
negl
dec
mov
mov
ds
sub
insb
mov
xchg
into
or
stos
mov
sbb
lret
dec
notb
cmp
repz
mov
int3
push
mov
cmp
dec
pop
imul
xor
scas
inc
push
cwtl
ficoml
in
cld
push
sti
sbb
xchg
cmp
add
push
idivl
xchg
aad
cmp
daa
mov
push
sbb
gs
or
sub
negb
cmpsl
pusha
je
inc
dec
cs
add
mov
rcrb
cltd
ret
sub
insl
mov
imul
or
cmpsl
std
shll
rclb
xor
cltd
gs
xchg
mov
hlt
or
pop
cltd
pusha
push
stos
cs
inc
stos
mov
cmc
dec
mov
xchg
pop
aam
rcll
sub
jae
sub
dec
imul
repnz
inc
js
test
mov
fildl
inc
test
jle
add
push
push
or
cmp
loope
jg
cli
clc
xchg
mov
inc
jmp
pop
nop
xor
inc
insl
ret
aad
cmpsb
fists
stos
inc
jb
add
dec
in
jmp
cmp
mov
dec
lock
push
jp
sbb
cmp
or
push
je
sbb
pop
mov
fdivl
stc
test
es
pop
sbb
jns
int3
lods
sub
mov
cmp
mov
sahf
mov
add
push
lock
push
adc
jge
test
or
mov
add
sbbb
push
xchg
stc
cmp
sub
das
jl
sbb
jp
fistps
and
xchg
in
mov
ja
iret
jno
popf
mov
pop
cwtl
leave
and
imul
out
mov
pushf
lahf
push
mov
arpl
sub
arpl
push
jne
cmp
das
pop
adc
sbb
lret
scas
jae
test
repnz
mov
dec
xchg
mov
cmpsl
adc
dec
clc
test
sub
pop
jno
adc
movsl
xchg
mov
push
sbb
imul
nop
add
popa
or
pop
mov
mov
scas
push
push
mov
jecxz
into
xor
decl
stos
inc
std
cmpsb
jae
aaa
push
add
sub
mov
dec
mov
cmp
mov
inc
mov
cmp
add
in
in
push
mov
xchg
sub
mov
cltd
enter
mov
and
mov
push
jo
cwtl
adc
pop
mov
clc
clc
pop
scas
push
mov
push
mov
ror
xchg
mov
mov
jge
lcall
or
jle
mov
lcall
inc
subl
push
or
in
mov
cwtl
push
sub
test
addr16
mov
aaa
int
xchg
gs
repnz
xor
rorl
cmpsb
leave
in
pop
push
xor
add
mov
xor
cld
pop
xchg
roll
mov
push
lods
push
mov
cmp
pop
out
mov
lret
mov
into
mov
or
cmp
in
mov
mov
mov
xchg
into
scas
pushf
in
outsl
mov
mov
sbb
inc
and
cmc
and
sub
bound
inc
push
mov
test
mov
dec
lds
pop
nop
mov
aam
pop
ds
sub
and
xor
mov
fs
fwait
shl
push
mov
movl
mov
push
jge
sub
mov
inc
and
test
movsl
enter
lods
cmp
and
aam
push
jbe
lcall
fstpt
addr16
movsl
and
jne
ficoms
shr
pushf
or
mov
push
xchg
and
jmp
mov
push
xchg
xor
sub
xor
js
movl
ret
call
es
sbb
or
repz
out
addr16
imul
mov
pushf
sbb
add
dec
mov
jle
xor
add
shl
mov
nop
cli
xorb
xchg
or
jge
jmp
mov
out
imul
fdivl
dec
lods
pop
aam
or
rolb
ficoms
test
test
push
imul
add
mov
pop
pop
push
xchg
mov
sub
push
xlat
xchg
in
cld
xchg
fwait
stc
or
icebp
test
outsb
push
lret
mov
cmp
shlb
test
jb
sub
hlt
or
xor
movsl
cmp
js,pt
push
push
jmp
inc
lret
cld
mov
fidivrl
and
cmpsl
popa
mov
popa
push
int3
add
sar
les
xchg
mov
imull
push
dec
add
push
sahf
push
aas
jl
inc
scas
xchg
push
cmp
arpl
mov
pop
pop
adc
aaa
test
mov
out
movsl
fadd
adc
andb
or
xchg
lret
push
inc
xor
xchg
mov
adc
xchg
arpl
mov
xchg
das
adcb
and
lods
fwait
les
fidivrs
and
pop
or
pop
or
stc
aam
call
xor
mov
push
pop
dec
ss
jno
enter
lods
movsl
test
test
dec
andl
pop
xchg
cs
imul
adc
mov
sbb
rep
inc
pop
mov
pop
fdivrl
xchg
ffreep
pop
lret
push
adc
icebp
jne
sarl
insl
add
or
adc
push
je
repz
pop
fdivrl
or
pop
adc
xchg
add
fidivs
hlt
and
pop
dec
push
mov
or
mov
add
addr16
rcr
mov
test
and
iret
icebp
in
stos
mov
jno
jno
and
cltd
mov
std
mov
mov
negl
push
stc
dec
rclb
mov
inc
adc
ret
hlt
fnsave
mov
xchg
add
add
popf
hlt
or
cmpsl
std
rolb
sub
or
sub
mov
pop
comiss
daa
and
addr16
sbb
bound
outsb
nop
rorl
loopne
jge
in
pop
adc
fcoml
and
fidivs
jae,pn
das
jne
aam
adc
cmp
out
sub
ds
and
xlat
int3
add
scas
int3
sbb
add
inc
dec
lahf
jmp
pop
adc
cmp
push
fwait
adc
or
aad
js
mov
xor
test
push
xor
hlt
popf
mov
les
clc
push
cmp
outsl
mov
dec
mov
rorl
or
sbb
mov
out
pop
mov
imul
jns
cld
call
repz
in
repnz
cmpsb
shlb
jae
adc
sahf
mov
push
outsl
cmpsl
xorb
cmpsl
or
and
out
movsb
and
jecxz
sub
push
scas
decl
mov
xor
jl
sbb
cmp
jb
jnp
iret
or
cmpsb
jl
pushf
inc
sbb
hlt
push
popl
enter
mov
aam
xchg
dec
sti
cmp
idivb
stos
fwait
cli
repz
int
cmp
lret
scas
fdivrs
sbb
lods
sub
push
cmp
dec
xchg
dec
pop
fildll
inc
aaa
rorl
ss
sub
iret
or
scas
sbb
fisubl
jns
mov
rorl
pushl
das
cmp
shlb
pop
xchg
adc
ds
inc
jecxz
mov
ljmp
jns
or
out
das
pushf
je
dec
je
xchg
mov
mov
ljmp
mov
mov
mov
fisubrs
je
sub
lret
cmpsl
js
inc
push
push
pop
outsb
fsubrs
iret
bound
lret
pop
out
mov
pushf
sub
mov
xchg
sub
cmp
ffreep
in
daa
dec
mov
inc
idiv
jae
in
mov
mov
jmp
push
mov
test
inc
mov
and
pop
ja
dec
cmpsl
dec
test
xor
stos
and
in
mov
push
lods
jle
pop
fstps
jecxz
imul
jle
push
hlt
mov
sbb
xchg
fiaddl
xchg
outsl
push
jo
jb
mov
iret
in
mov
or
popl
xlat
cmp
sti
or
mov
and
outsl
push
add
std
pop
sub
mov
jne
movsl
outsb
sarl
jnp
add
jp
inc
sti
add
aas
inc
dec
xor
js
cmpsl
xor
or
mov
push
xchg
test
mov
push
das
ret
or
lret
iret
mov
mov
mov
call
ror
out
fbld
loop
cmpsb
aas
jno
jl
inc
xchg
xchg
movsb
mov
cmp
jo
aam
cmp
mov
xor
adc
xchg
lret
jns
adc
cmp
movsb
mov
imulb
sbbl
jb
jne
sbb
sar
inc
sub
pop
pushf
sub
mov
and
insb
cld
pop
pop
insb
push
sbb
and
jecxz
mov
repnz
es
sub
inc
insl
xchg
iret
push
cltd
jmp
es
scas
pop
sahf
popw
repz
aam
icebp
or
mov
stc
mov
or
xchg
jge
pop
adc
dec
xchg
nop
mov
loop
lods
scas
mov
mov
xchg
add
roll
inc
xchg
pop
je
pop
jle
push
or
int3
fcomp
xor
push
mov
daa
scas
mov
mov
mov
out
popa
push
popf
loopne
enter
in
dec
pop
les
pop
jb
xchg
insb
mov
roll
cli
shlb
sar
aam
jge
into
call
push
bound
lods
sub
cmp
mov
cld
sbb
jno
dec
shlb
xchg
mov
pusha
adc
sub
xor
je
sub
stos
cld
icebp
fst
fldt
cmp
or
xor
jp
cltd
stc
xor
cwtl
rolb
cmp
cmp
iret
scas
lret
lahf
fisubl
jo
mul
cmp
cmp
mov
pusha
mov
push
adc
mov
pop
push
es
or
jecxz
enter
xchg
decl
insl
cmp
mov
enter
cmpsl
icebp
std
mov
mov
jmp
mov
or
mov
je
add
fcmove
out
out
cld
jg
jg
in
dec
xlat
icebp
pop
daa
push
jne
and
sub
push
fadds
aam
cld
add
out
lret
jle
jge
je
xor
xchg
test
inc
fdivl
lcall
push
or
jecxz
dec
jns
sahf
bound
dec
test
pop
aas
test
sahf
xorb
xchg
inc
and
fmuls
scas
ds
dec
cmpsl
pop
xor
adcb
sbb
enter
mov
inc
xchg
jae
movq
out
xchg
mov
mov
sub
sbb
xchg
rclb
loopne
push
sbb
jmp
push
adc
jl
push
lock
jecxz
cmp
pop
mov
popa
iret
fcom
leave
hlt
fwait
mov
test
pusha
fldl
adc
or
sub
sub
mov
cld
xchg
mov
loop
mov
outsl
fistpl
push
es
inc
sar
jbe
fcomi
inc
adc
or
out
aam
sbb
ljmp
andb
mov
jg
cmp
fadds
xchg
fnclex
nop
subl
lds
imul
cmp
adc
and
pop
cli
jle
lret
addl
div
mov
cmp
sbb
jae
push
mov
add
lea
mov
pop
xor
mov
pop
jns
rcll
lcall
sub
dec
jbe
fstps
cmp
jmp
adc
daa
jo
nop
add
cmp
xor
pop
xor
lea
stos
lods
aad
push
hlt
jl
repnz
test
xchg
xor
pop
push
push
cld
call
insb
cmp
xchg
jl
add
jb
pop
dec
dec
inc
jo
or
jb
xchg
clc
lret
aaa
push
dec
test
cmp
sbb
xor
arpl
js
aaa
js
jae
out
jl
std
cmp
data16
xor
out
insb
inc
cs
decb
lret
fisubs
je
inc
jne
inc
mov
icebp
pop
ss
pop
stos
pop
outsb
push
jp
jg
ljmp
mov
dec
and
cwtl
push
test
and
add
dec
inc
push
xchg
or
sub
push
lock
clc
lahf
lea
into
or
jbe
cmp
rcll
add
pop
lods
aam
sahf
jbe
xor
dec
popa
aas
push
cmc
cltd
jo
fmull
push
stc
js
in
pop
ret
rcrl
mov
ret
add
outsb
pop
and
stos
dec
insb
push
mov
or
dec
in
std
jp
lds
les
jae
inc
shlb
lret
sub
or
xor
adcb
pop
jmp
xchg
jge
shrl
movsb
movsl
inc
test
shll
jmp
lods
arpl
jecxz
mov
loopne
inc
enter
mov
dec
dec
popa
add
pop
or
sbb
lods
cmc
movsl
in
test
mov
mov
bound
xor
inc
fcmovne
mov
jp
xor
rorb
cmp
sub
or
and
in
in
mov
cmovbe
pop
xor
mov
mov
mov
ja
cmpsl
test
mov
inc
jle
mov
mov
stos
jns
lahf
in
rcrl
mov
sub
lods
push
notl
xchg
fs
repz
mov
js
xor
mov
sub
fwait
test
fidivrl
or
rcrl
ds
aad
daa
mov
pop
mov
mov
push
inc
and
pushf
or
xchg
repnz
mov
out
fildl
imul
mov
je
daa
xor
leave
lock
rcr
sbb
mov
inc
testb
lahf
push
movsb
mov
sbb
pushf
fidivrs
and
data16
mov
jp
mov
movsb
and
fsubrp
cmp
ret
repz
xchg
dec
cmp
fldl
lea
iret
in
fs
sub
sbb
fwait
add
cmpsb
pop
dec
stos
dec
clc
sahf
test
jg
or
and
subl
test
mov
jne
mov
into
push
adc
aam
mov
cmpsb
int
sarb
js
arpl
mov
or
pop
frstor
filds
jg
pop
lahf
clc
xor
std
outsb
pop
jmp
ret
lret
mov
dec
mov
cmp
jge
negl
mov
enter
in
pop
xor
imul
int3
mov
mov
pop
sub
gs
faddl
sub
xchg
or
and
xor
xchg
bound
rclb
push
stos
je
nop
sbb
pop
movnti
stos
roll
cmc
xchg
xlat
and
icebp
push
add
push
inc
pop
push
xor
cli
jne
cmp
loop
ds
iret
mov
mov
or
iret
sbb
rcrl
mov
mov
lret
loope
xchg
ja
cs
cmp
movsb
adc
push
mov
movsb
jl
jp
adc
sub
decl
cmc
aas
mov
sub
pop
inc
cmpsb
xor
fldt
dec
aaa
negl
push
xor
sub
mov
jnp
mov
das
aaa
repnz
js
imul
test
fidivs
rorb
clc
clc
mov
inc
fldcw
ret
out
cli
pop
push
jp
mov
mov
xor
dec
lret
cmp
mov
ljmp
dec
scas
scas
cmpsb
loope
stos
sub
pop
sub
imul
or
leave
nop
xor
pop
pop
mov
mov
out
fisubl
jge
test
mov
shlb
cmpsl
jle
xor
xchg
movsb
push
rcl
push
sub
sbb
adc
leave
pusha
ret
lock
int3
xchg
je
int
add
sbb
cmpb
pop
dec
in
mulb
pop
insb
mov
or
test
mov
sub
js
lds
loope
dec
jne
fistpll
sti
pushf
sub
push
pop
gs
and
loopne
mov
xchg
in
xchg
inc
insl
icebp
lret
fistpll
cmp
inc
pop
sbb
pop
mov
loope
jb
add
push
xlat
addr16
inc
leave
push
jle
xchg
repz
pop
std
mov
out
cmpsl
dec
addb
jge
icebp
add
popa
sub
dec
sbb
sarb
in
div
shlb
fldl
dec
dec
jle
jb
xchg
loope
push
xor
sub
mov
loop
std
lahf
scas
fwait
ss
mov
fdivrp
mov
jae
inc
mov
pop
dec
idiv
cwtl
fidivs
push
aad
xor
push
int
cmp
add
aaa
popa
lea
push
outsb
das
cmp
sub
cmp
inc
pusha
mov
sub
xchg
cltd
lods
loope
in
fwait
nop
fstps
mov
xor
sbb
inc
sub
cld
out
xchg
outsb
sub
aam
iret
test
or
cmp
xchg
stos
lds
lret
decb
stos
ret
or
lcall
iret
xchg
jmp
push
xchg
cltd
loop
outsl
xor
pop
jle
stos
inc
cmp
mov
jle
jecxz
pop
mov
movsl
dec
xor
add
or
call
and
mov
inc
scas
xchg
das
pop
mov
fldenv
enter
int3
nop
pop
push
in
int3
bound
jbe
in
push
lds
mov
adc
sub
shrl
pop
xchg
insb
stos
inc
adc
fs
sbb
xchg
sub
dec
scas
push
test
into
add
ljmp
dec
cmp
sbb
in
push
jge
insl
jmp
sub
ss
test
dec
lds
movsb
addr16
adc
jmp
sub
imul
add
mov
cltd
std
inc
popa
add
xchg
or
ds
xor
sbb
bound
pop
jnp
test
fcomps
dec
cwtl
push
cmp
sub
sbb
aaa
gs
in
test
lods
jg
mov
adc
xchg
adc
mov
hlt
test
mov
add
add
inc
mov
add
jle
test
jmp
ror
pop
jp
ljmp
lcall
incb
stc
dec
hlt
or
push
outsb
mov
lea
sbb
add
xor
or
cld
adc
sar
jno
lods
stc
mov
or
xchg
sahf
adc
add
cli
stos
ror
or
inc
inc
pop
push
xchg
push
nop
loop
icebp
aas
jmp
xchg
and
push
sbb
and
jae
movsb
cmp
mov
xchg
xor
incl
sbb
testl
pop
jge
mov
push
lock
gs
sub
sub
pop
test
test
inc
icebp
xchg
mov
inc
push
mov
mov
insb
sbb
ljmp
popf
pop
inc
mov
pusha
or
mov
jge
mov
jge
jp
mov
pop
or
mov
int3
daa
push
mov
out
gs
lret
or
dec
xrelease
in
test
pusha
stc
fs
add
push
or
xchg
sbb
int3
mov
pop
mov
xchg
cmpsl
push
hlt
loope
outsl
lea
push
in
xor
imul
subl
or
lods
mov
jg
sbb
sub
xchg
pop
mov
sub
mov
pushf
mov
cwtl
stos
sar
pop
lret
mov
cmp
in
push
add
ss
testb
invd
test
cmp
arpl
xchg
fldt
inc
sahf
dec
fldt
cmp
lods
scas
lods
add
xor
daa
iret
cmp
clc
adc
xlat
je
cmp
mov
pop
out
pop
add
dec
dec
dec
shl
loopne
es
adc
sbb
pop
ffreep
xchg
push
cmpsl
dec
cwtl
pushf
jo
fcompl
mov
fsubp
and
xchg
jnp
cmp
cmp
pop
inc
xchg
cmc
push
add
loopne
inc
imul
mov
cmp
adc
or
adc
add
rcrb
lods
and
pusha
mov
push
push
xchg
fs
sbb
jmp
xor
xor
and
jle
inc
fstps
or
aaa
sub
loope
arpl
ficoml
or
pop
jl
rorb
mov
lods
mov
jb
inc
idiv
cmpsb
add
inc
add
xor
push
jg
sbb
xor
adc
xchg
xchg
inc
mov
cmc
jp
pop
call
inc
fistpl
adc
cld
pop
xlat
push
cmp
sub
lods
js
loope
fdivr
adc
xor
mov
repz
pop
lds
pop
and
mov
fwait
mov
xchg
das
scas
adcb
cmc
adc
dec
ja
orl
dec
mov
mov
ljmp
jecxz
pushf
repnz
xchg
jb
jp
pop
mov
mov
cs
fcmove
mov
sbb
test
movsb
call
push
add
and
jae
and
aaa
rolb
xchg
mov
sbb
test
inc
xchg
sbb
popa
mov
call
push
clc
dec
dec
push
inc
push
lret
shll
push
out
cli
arpl
dec
out
push
cmp
push
add
incb
mov
pop
fxch
addr16
pop
clc
ret
andl
insb
push
call
hlt
add
pop
sbb
movsb
fs
adcb
sub
cmpsl
cmpxchg
incl
xchg
ja
inc
into
enter
jmp
pop
xchg
movsb
inc
jb
dec
fwait
repz
sahf
inc
dec
inc
test
xchg
fsts
mov
xchg
mov
lods
jp
in
sub
cmpsb
in
sub
and
xchg
adc
test
and
jge
xor
mov
ret
mov
jno
fcoml
inc
fs
jmp
pop
sub
addr16
jle
popa
sub
lock
dec
adc
fnsave
int
fs
cmc
popa
dec
movsb
sub
cltd
dec
sub
adc
pop
popf
arpl
cmp
ja
xchg
out
dec
je
ficoms
pushf
hlt
add
fwait
nop
push
inc
pop
ret
push
add
xlat
inc
and
sub
cmpsb
iret
jo
mov
sub
xchg
cltd
cmp
inc
add
sbb
dec
jns
sahf
lret
insl
imul
sbb
dec
jb
mov
insb
bound
push
xchg
xchg
push
sub
adc
das
and
fwait
cmp
xchg
sub
push
cmp
mov
repz
mov
jl
leave
scas
fwait
arpl
adc
dec
roll
test
mov
scas
orl
add
jns
int
push
out
or
repnz
mov
fcomps
jno
inc
push
jnp
inc
xchg
out
lods
sti
scas
cltd
xchg
sbb
add
in
stos
push
cli
sub
push
lahf
hlt
sbb
push
mov
xor
das
xchg
mov
lcall
xchg
bound
fidivrs
mov
sbb
adc
jns,pn
jne
shll
andl
dec
test
fdivrs
addr16
push
push
mov
xchg
orl
sar
mov
outsl
jae
xchg
movsb
subl
jl
mov
test
divb
lds
mov
cwtl
mov
or
add
sbbb
mov
repnz
mov
and
cmp
loopne
movsl
out
std
push
sahf
loope
pop
and
mov
cmpsl
and
sbb
add
add
xor
xor
sub
pusha
dec
test
add
inc
pushf
mov
shl
stc
pop
stc
xor
cmc
scas
mov
fcompl
lock
testl
adc
cmp
cld
add
jb
pop
ret
clc
addr16
out
xchg
pop
nop
cli
xlat
add
xor
or
test
add
hlt
rcl
dec
data16
mov
cmp
inc
jae
imul
adc
push
push
scas
adc
cld
aam
push
mov
mov
jo
and
fbld
pop
adc
jl
jb
clc
je
aaa
sbb
xchg
push
out
add
stc
and
es
jno
jecxz
jp
movsb
cmpsb
xchg
mov
insl
adc
xchg
int3
sub
cmc
push
je
pop
cmp
jg
iret
adc
iret
pop
bound
mov
sbb
add
xchg
pop
rcrb
fsubrp
mov
movsl
jno
mov
mov
popf
jnp
sbb
jbe
movsl
mov
lods
inc
dec
adc
hlt
cmpsb
mov
mov
and
jecxz
pushf
push
jnp
jne
pushf
xor
fldenv
decb
pop
imul
jne
daa
sbb
mov
xchg
lret
dec
xlat
ja
inc
lock
fimuls
pmaxub
adc
test
daa
mov
cmpl
add
imul
inc
lret
inc
sti
push
insb
jp
push
repz
xchg
insb
xor
outsb
xchg
push
inc
insl
xchg
pushf
dec
lret
jl
call
insb
lea
ss
test
out
dec
ljmp
mov
push
ds
or
sbb
push
sbb
aaa
push
ret
jnp
repz
nop
je
pop
push
jl
in
push
jae
mov
js
or
inc
and
jecxz
les
hlt
mov
xlat
nop
rorl
xor
jecxz
jl
aam
push
inc
xchg
mov
mov
sub
xor
and
adc
sub
scas
repnz
adc
cmpsl
daa
jmp
cmc
lods
or
mov
or
add
xor
jnp
push
pop
int3
int
jnp
jl
cwtl
push
xorl
xor
rolb
mov
fcomps
mov
das
mov
rcrb
xchg
scas
stos
cmp
movsb
lea
or
ss
repz
aaa
mov
cmpsb
xchg
fdivrp
inc
cmp
jge
loop
sub
iret
aad
imul
call
aaa
sarl
cmp
fdivp
jb
std
int3
xorps
mov
bound
sbb
arpl
mov
movaps
stos
imul
int
jle
out
or
adc
mov
push
mov
out
lcall
sub
and
jbe
push
push
scas
scas
jb
mov
add
dec
popf
add
add
pusha
rorl
or
sub
xchg
dec
shrl
and
imul
lds
jo
sahf
adc
lcall
pop
std
sti
pop
jge
lret
nop
fisubrl
push
pushf
cmpsl
outsl
xchg
push
sub
daa
jo
loop
jp
bound
rep
test
mov
arpl
mov
push
sbb
jle
mov
in
inc
scas
pop
sbb
scas
ds
bound
mov
pusha
pop
nop
dec
fs
in
cmp
lcall
imul
xchg
arpl
dec
out
adc
jo
push
lods
xchg
inc
xor
pop
mov
mov
aas
orl
mov
rcll
sbb
enter
mov
aad
sbb
jge
insb
jb
int
adc
jge
ds
inc
shl
cmp
mov
mov
or
inc
fimuls
mov
sbb
lahf
fsubl
mov
jmp
leave
or
or
das
fprem1
nop
imul
dec
or
movsl
ljmp
jo
and
push
xchg
add
cmpsl
lds
call
outsb
out
mov
sub
subl
push
add
mov
or
cmp
add
aaa
punpckhwd
popf
hlt
cmc
aaa
rclb
and
xchg
nop
std
lcall
adc
dec
aaa
xchg
or
xchg
adc
enter
cs
jg
int3
mov
cli
sub
cwtl
lods
add
mov
push
rcrl
lods
leave
cmp
lea
test
xor
enter
pop
inc
lock
or
adc
ror
in
in
adc
inc
data16
in
jnp
mov
lret
je
push
test
not
ret
or
pop
out
out
jbe
sub
cmpsl
inc
or
enter
pop
push
add
test
cmp
push
inc
inc
mov
out
and
mov
mov
jbe
ret
mov
ror
adc
js
mov
sub
adc
popf
jne
add
jmp
out
lret
sub
bnd
sub
sti
pushf
cmc
pushf
pop
and
pushf
int
mov
mov
fs
xchg
mov
sbb
popf
subb
jno
pop
dec
sti
xchg
imul
repnz
mov
inc
mov
add
into
add
xor
or
sbb
and
les
test
std
push
push
push
mov
jne
jge
test
fs
out
sub
inc
not
shrb
movsb
jp
add
sbb
insl
sti
gs
leave
sahf
inc
lock
insl
aam
mov
sbb
dec
idivl
xor
icebp
lret
adc
pop
aam
imul
xlat
push
cmpsb
mov
das
pushf
xor
mov
fiadds
mov
dec
movsb
mov
dec
into
push
out
stos
leave
and
lret
push
sbb
push
mov
out
or
sbb
in
js
imul
inc
mov
lcall
and
gs
orb
xor
mov
or
test
dec
and
jecxz
push
xchg
cmp
xchg
inc
lea
jae
jmp
repnz
jbe
stos
cmp
std
pop
add
std
outsb
es
push
mov
adc
in
xor
cmp
inc
jno
fs
mov
and
cld
dec
sbb
cmpsl
imul
and
addb
pop
mov
aad
add
shll
cwtl
jmp
push
jae
mov
jno
shr
and
fwait
sti
and
xor
add
jbe
sub
xor
cld
jge
jnp
popf
mov
sub
push
mov
shl
mov
mov
sbb
addr16
loopne
rorl
scas
shlb
inc
mov
arpl
aaa
ret
sar
push
xchg
mov
inc
sub
pop
addr16
lret
sahf
pop
xor
and
nop
push
sti
imul
dec
lret
fstps
pop
push
test
mov
test
aas
xchg
popa
push
jp
xrelease
xor
hlt
push
xor
mov
sbb
dec
mov
je
shlb
cli
mov
lods
lods
xchg
add
and
into
lret
sub
sahf
enter
mov
popf
mov
out
mov
call
shlb
or
jecxz
stos
xchg
dec
ljmp
pop
inc
sbb
fidivrl
mov
push
mov
xlat
mov
pop
mov
sbb
xchg
adc
push
mov
push
insb
push
push
mov
pop
hlt
inc
lret
dec
xor
bound
adc
adc
fwait
inc
pop
ds
push
push
xchg
dec
xchg
xor
mov
adc
leave
push
xchg
negb
and
lahf
fs
mov
aaa
mov
testb
outsl
enter
inc
dec
js
popa
and
popf
out
aad
pop
mov
outsl
mov
cwtl
bound
cli
cmp
ljmp
mov
aaa
push
inc
push
xlat
insl
or
sub
and
inc
sbbb
xchg
mov
dec
jle
imul
subb
scas
add
dec
xor
rolb
mov
sbb
lods
pop
dec
adc
pop
push
jmp
or
lock
cltd
dec
aad
lods
xchg
ds
and
fsubl
jl
mov
sti
loopne
and
and
adc
stos
xchg
movsl
adc
mov
imul
mov
xchg
int
iret
xchg
mov
jge
stos
inc
cmp
cmpsl
nop
inc
xchg
int3
xor
sbb
jmp
test
jle
cwtl
sub
idivb
mov
mov
pop
aaa
inc
adc
clc
rolb
in
call
mov
cmp
or
into
imul
test
daa
pop
test
rolb
jae
cmp
mov
dec
mov
pop
lods
adc
dec
push
subb
mov
gs
popf
pmulhuw
shrl
xchg
cs
sub
fstl
daa
fiaddl
fimull
jb
and
xor
fwait
pop
pop
push
mov
mov
fwait
pop
insb
lcall
lret
mov
cmpsb
imul
loopne
mov
xor
addr16
fcmovnu
ret
fs
test
mov
fsubs
and
clc
jns
push
mov
arpl
es
cmpsl
mov
jl
and
sub
add
subb
hlt
xchg
mov
data16
mov
pop
or
in
adc
shlb
outsb
pop
adc
dec
or
jno
pusha
lret
lds
outsb
scas
mov
pushf
dec
jmp
call
rcr
dec
mov
jle
data16
test
leave
mov
lret
adc
push
gs
mov
lcall
push
loop
add
dec
ficomps
inc
pop
and
shl
xor
outsl
pop
adc
sbb
dec
aad
mov
push
mov
mov
imul
xlat
rolb
leave
and
out
sti
mov
sub
mov
cli
mov
sbb
dec
jp
mov
in
js
stos
insl
sbb
loopne
or
shll
inc
daa
adcb
inc
stos
adc
mov
jl
or
sub
cmp
xor
jp
int3
pushl
dec
xor
sbb
imul
inc
pop
sahf
inc
stos
imul
fists
cmp
mov
xor
stos
xchg
and
js
mov
scas
mov
or
lds
testl
xchg
jecxz
jmp
daa
or
jp
call
mov
int
jae
les
je
dec
jge
dec
push
sbb
inc
jae
test
and
push
lahf
inc
mov
aaa
mov
out
nop
push
sahf
lock
push
jbe
pop
inc
nop
cmc
push
daa
jge
sub
test
push
cli
xchg
and
and
cli
xorb
adc
or
sarb
cmc
fistpl
jmp
mov
bound
mov
and
xchg
fcomip
mov
outsl
sub
add
ds
hlt
ss
mov
aaa
push
in
ss
push
dec
je
das
push
sub
imul
xchg
jo
sub
mov
inc
mov
push
rorl
xchg
pop
lds
jmp
cmpb
sbb
mov
and
xor
out
xchg
lret
lret
inc
push
and
xor
fsub
cs
mov
add
aas
pop
lock
mov
int3
aaa
mov
dec
je
jo
dec
enter
in
stc
lret
xlat
insl
sub
rcll
dec
inc
stos
mov
push
mov
out
sub
mov
inc
add
inc
je
xchg
movsl
dec
jbe
and
out
cmp
pop
inc
mov
stos
xchg
inc
rorb
sub
xor
mov
cli
movsl
inc
mov
cmpb
popf
xchg
pop
add
push
mov
sbb
addr16
sub
xor
mov
xchg
jle
xor
aaa
xchg
pop
es
adc
push
sbb
adc
addb
ljmp
lahf
cmp
leave
push
rcrl
or
inc
add
push
std
out
mov
sahf
arpl
push
mov
and
push
xchg
pushf
inc
and
js
and
cmp
cmp
fmull
sbb
push
or
lea
xor
out
push
jge
lods
ret
sbb
call
aad
test
jnp
outsl
ss
gs
jno
dec
sahf
lea
inc
icebp
into
mov
inc
xor
pusha
inc
sub
out
test
fisubrs
add
ret
ljmp
out
roll
addr16
or
mov
imul
pushf
push
testb
mov
sbb
inc
or
pop
xchg
pop
xor
sar
dec
cmpsb
insb
cmp
iret
loop
cltd
cwtl
arpl
mov
mov
sbb
push
nop
cltd
stos
mov
pop
add
cwtl
mov
dec
xor
add
or
stos
cmp
or
lahf
pop
sub
cltd
js
stos
movsl
mov
shrl
gs
xchg
push
cld
enter
fildll
fsubs
cmp
sub
roll
push
test
xor
xor
adc
popf
push
sbb
jns
jnp
leave
mov
sti
roll
nop
in
or
in
cmpsb
xor
icebp
cltd
testl
xor
shll
and
mov
outsb
sub
rorb
jae
adc
fnstsw
cltd
pop
mov
into
loope
add
mov
jp
jae
jmp
inc
pop
jne
adc
sbbl
es
mov
jae
mov
stos
adc
ljmp
fcomps
fwait
stos
dec
sub
leave
pop
cmp
xchg
aam
or
lahf
fildl
fucomi
pop
mov
les
dec
fnstenv
std
add
in
mov
shll
pop
pmulhw
pop
mov
loope
aaa
leave
fs
mov
imul
or
data16
xlat
mov
cmp
jae
xchg
cmp
cmp
cmpsb
les
sub
inc
int3
aaa
addl
jno
outsb
adcb
jmp
jmp
cmp
fmulp
and
scas
mov
int
mov
jno
fs
and
fsubrl
das
leave
mov
or
dec
mov
stos
mov
icebp
inc
xchg
rcll
jmp
xor
test
lds
out
adc
mov
scas
js
cmp
mov
dec
int
pop
ljmp
test
imull
jl
imul
leave
xor
cwtl
lods
cltd
adc
xchg
push
inc
aad
ficomps
out
or
jbe
mov
adc
repz
mov
aad
lds
mov
mov
xchg
sub
arpl
and
dec
fnstenv
repz
mov
repz
push
push
pop
adc
xorl
lahf
ret
fsubrl
add
or
aas
jns
sub
xchg
into
xchg
mov
push
shr
incl
jecxz
lret
in
inc
cmp
sbb
test
or
pop
out
inc
out
inc
jb
aaa
mov
adc
push
nop
fcoms
outsb
xchg
jns
lahf
aam
cwtl
rcll
sbb
lods
sub
fs
ljmp
inc
inc
xchg
dec
push
lcall
andb
pop
jmp
pop
jae
icebp
lahf
and
xor
lret
clc
lahf
push
adc
push
je
mov
pushf
xchg
inc
mov
scas
addb
stos
or
jo
mov
ret
xor
aas
xchg
mov
out
mov
or
roll
dec
cmp
push
lea
outsl
dec
jo
jg
sub
loopne
cs
cmp
fcmovnbe
jmp
and
shll
inc
movsb
inc
push
jmp
fcmovnbe
test
in
or
movsb
push
mov
pop
add
add
lret
mov
mov
pop
adc
gs
out
fiadds
push
sbb
xchg
or
dec
add
jns
jno
test
nop
les
lret
and
inc
add
mov
inc
mov
fildl
loop
push
jnp
lahf
add
es
nop
xchg
push
sbb
lcall
ret
or
pop
mov
filds
pop
rcll
adc
popa
xor
mov
ljmp
stos
jecxz
sbb
xchg
or
cltd
dec
xchg
and
lods
pop
pop
fwait
loop
mov
sbb
jmp
jne
mov
push
je
das
jle
push
mov
mov
dec
mov
jge
or
jmp
sahf
inc
pusha
mov
add
cmp
xchg
loope
xchg
rorl
popa
xchg
dec
sbb
aam
cs
or
and
bswap
xorl
adc
mov
sub
inc
xchg
push
sub
daa
and
inc
dec
mov
test
add
mov
sub
int3
cmp
ljmp
mov
test
out
movsl
insl
push
add
lea
clc
cli
mov
js
leave
cmc
sub
scas
pop
mov
cltd
loopne
rcr
jmp
sti
jno
lods
test
jbe
cli
pop
loopne
xchg
je
inc
jne
xchg
jb
stc
ror
xor
cmp
xlat
inc
mov
rep
icebp
filds
gs
es
enter
cmp
jo
sarl
mov
xchg
out
aam
cmpsl
pushf
sub
inc
cmp
and
mov
mov
lock
add
mov
sarb
loopne
pop
lods
xchg
aam
lods
ja
lret
leave
sahf
add
push
mov
test
cmpb
fdivrs
in
sarb
into
shl
cmc
and
insl
pop
xchg
pop
add
jecxz
mov
das
dec
test
ja
testb
cmp
dec
pmaddwd
jae
jle
icebp
adc
imulb
mov
sbb
rorb
xor
orb
in
mov
pop
adc
add
dec
push
mov
bound
pop
in
rcll
mov
push
pushf
lret
pop
test
pop
or
jnp
fsubrl
sbb
mov
adc
nop
in
inc
inc
push
insl
sub
and
or
mov
sub
xor
sbb
outsl
and
sub
or
mov
lock
cs
in
xchg
xor
mov
jg
pop
fs
mov
cld
inc
fmuls
sti
shlb
lcall
stos
jo
loop
mov
call
and
mov
pusha
pop
bound
jo
push
or
mov
das
rcrb
cs
adc
push
cmp
mov
pop
in
pop
inc
test
pop
sub
adc
xchg
xchg
movsb
jnp
xor
add
cld
and
jle
push
mov
push
bound
ljmp
mov
xchg
dec
mov
xchg
push
aas
ljmp
cmp
xor
inc
mov
or
cli
in
pop
fwait
lret
push
or
ret
mov
lcall
mov
sbb
xchg
lock
sub
adc
xor
fidivrs
sahf
mov
push
cmp
sbb
sarl
cld
mov
sarl
mov
rcrb
call
orb
in
or
xchg
test
xor
loopne
lcall
mov
xor
je
mov
int
cmp
fsubrs
ja
icebp
xchg
mov
push
or
into
ljmp
shlb
andl
push
cmpsl
sub
pop
inc
inc
call
test
mov
inc
or
xor
xchg
cmp
or
mov
in
add
cmp
dec
rol
lock
rcl
cmpsl
test
lret
mov
add
or
cld
in
push
repz
adc
jmp
or
push
call
push
movb
jmp
xchg
jl
add
aad
xchg
ret
stos
add
mov
sub
imul
addr16
fadds
jb
test
fs
mov
add
add
scas
inc
dec
jecxz
xchg
loop
sahf
ret
mov
jne
js
cmpsl
cmpsl
in
inc
gs
mov
lret
fimuls
push
ficomps
mov
nop
gs
mov
mov
jne
push
inc
icebp
or
adc
enter
mulb
mov
xchg
call
out
push
jb
lock
or
das
cmp
es
push
in
insb
inc
aas
lods
jbe
mov
pusha
ja
out
lcall
cmc
cmp
loopne
xlat
adc
push
mov
sbb
push
aaa
xor
push
out
repz
cmp
fildl
outsb
jno
push
aam
cmp
rcr
movsl
test
adcb
lahf
xchg
aad
xor
xor
test
pop
fldenv
fnstenv
mov
cli
mov
aaa
aaa
mov
jnp
lahf
inc
addr16
sub
push
sub
sbb
cmpsb
push
cmc
pop
jge
push
leave
push
out
movsb
jp
mov
sbb
outsl
push
data16
lds
fnsave
xchg
mov
in
inc
dec
jl
inc
ror
sbb
mov
adc
jo
or
mov
push
fdivs
push
pop
scas
cmc
les
shlb
and
xchg
in
rorb
lock
push
lea
lea
dec
ds
hlt
add
rorb
inc
in
or
pop
add
inc
repz
inc
imul
fcmovne
fidivs
add
scas
dec
cmpsl
xor
fs
adc
cli
adc
inc
pop
mov
inc
cmp
jp
les
inc
push
outsb
xchg
sub
out
or
cwtl
add
mov
or
fildll
sub
mov
and
or
outsl
mov
mov
xor
fiadds
add
bound
mov
dec
inc
jae
ss
in
sbb
pop
sub
xchg
sahf
and
js
gs
mov
fcoml
mov
xchg
mov
sub
xlat
ret
add
inc
ds
cwtl
cld
mov
ret
pop
fisttpll
mov
xor
jp
cli
push
cwtl
ror
jae
mov
push
pop
xor
insb
and
ljmp
daa
adc
jo
pusha
in
add
insb
cmc
inc
sarb
mov
shll
mov
cmpsb
cmp
lock
mov
out
xchg
lea
out
pop
jp
jns
cmpsl
into
popa
stos
mov
aam
or
adc
sarl
leave
xor
dec
sub
movsl
add
imul
addr16
es
inc
dec
inc
fistpl
dec
in
fisttpl
cmp
clc
insl
cltd
in
mov
ljmp
es
or
cmpsb
mov
mov
outsb
lods
lahf
outsl
icebp
add
sbb
inc
cmc
rorb
mov
lcall
or
fildll
cmpsb
div
in
cld
int3
mov
ror
ja
jno
mov
mov
xchg
jo
xchg
les
ret
flds
push
pop
stos
cmp
xchg
nop
cmp
add
adc
sbb
pop
push
inc
mov
inc
and
push
sbb
mov
mov
aad
jnp
jmp
jp
ss
mov
inc
push
xchg
jle
mov
push
not
ja
adc
push
cmp
rorl
ds
loop
xchg
imul
xor
or
jns
or
sub
and
push
arpl
dec
xchg
jns,pt
jnp
adc
cli
ljmp
cmpsl
pushf
lahf
and
mov
xor
sbb
sbb
pop
push
shll
call
jle
jno
int3
iret
addr16
pop
mov
pushf
out
roll
decb
jnp
adc
out
in
mulb
jl
cmp
adc
and
es
inc
and
jle
add
inc
xor
add
inc
dec
sub
xchg
mov
aaa
out
mov
add
mov
mov
or
mov
repz
bound
outsb
test
in
in
push
ljmp
pop
xor
pop
jmp
js
pop
mov
sub
cmp
and
frstor
mov
movl
mov
push
aad
in
sbb
sbb
std
cwtl
pop
ja
ja
pop
out
dec
mov
out
outsl
adc
and
sbb
mov
xchg
jp
icebp
in
insb
jp
divl
ja
inc
insb
lret
xor
lahf
cmp
mov
ss
or
or
loope
push
xlat
rcrl
lock
cwtl
or
outsb
mov
and
xchg
sbb
iret
mov
pop
ret
add
fsubrs
dec
cmpsl
negl
jo
xlat
jae
fcomps
nop
sub
push
sbb
and
pop
dec
xchg
repz
mov
arpl
mov
in
dec
out
call
sub
dec
je
jne
add
add
pop
dec
push
mov
jg
insl
push
movsl
ljmp
cmp
adc
adc
fstpl
out
jge
or
out
xorl
lea
dec
test
and
int3
pop
cmp
cmpb
mov
lret
jae
sbb
mov
jae
jb
in
sub
lds
shl
cmc
and
pop
loopne
xchg
jecxz
sbb
pop
dec
and
jnp
and
scas
xor
push
lock
mov
fcompl
fsubrp
sbbb
decb
mov
cmpb
cmpsl
pushf
cmc
test
or
inc
rcl
in
inc
mov
mov
push
or
dec
loopne
in
cmp
cmp
aas
sti
stos
sbb
aaa
lock
test
lcall
sbb
sti
sub
pop
mov
mov
inc
leave
push
shlb
jae
mov
ja
in
push
fstpt
push
push
pop
div
xorl
mov
adc
jg
mov
push
test
mov
loop
adc
insb
test
js
idiv
xchg
mov
in
add
mov
shll
mov
enter
dec
jge
dec
in
clc
cmp
divl
stc
lret
fwait
jae
xor
movsl
shll
mov
cmpsl
lret
adc
mov
jb
pop
aaa
push
iret
jle
cmovle
inc
stos
adc
xor
xor
cmp
push
pop
xor
jne
addr16
movsl
popa
test
and
fxch
add
and
frstor
inc
sub
xor
sbb
mov
idivb
out
push
mov
inc
jns
xchg
push
mov
pop
js
inc
stc
aad
iret
cmc
repz
imul
test
add
push
sub
mov
inc
inc
ret
cltd
in
test
pop
mov
xor
inc
popf
adc
mov
scas
push
sbb
pop
lret
out
das
mov
jne
inc
clc
rol
mov
xchg
and
fldt
movswl
popa
push
jne
scas
les
loopew
or
jb
mov
and
jmp
fcmovnb
fstpt
xchg
je
mov
mov
inc
rcl
or
leave
sbb
rcrl
fwait
dec
xchg
hlt
push
xchg
or
xchg
in
xchg
xchg
divl
add
push
inc
sbb
mull
xchg
lds
push
cmp
xor
or
ret
daa
cmc
je
mov
sbb
rcl
testl
lcall
cmp
rol
shrl
es
in
insl
mov
xchg
jl
movsb
movsl
popf
shll
pop
data16
ret
jl
cmp
icebp
mov
adc
jo
adc
sub
and
jne
sub
mov
mov
mov
jne
lock
mov
sub
and
xchg
insl
cmp
pop
jnp
faddl
xchg
add
push
fsubrl
xorb
sbb
orb
jnp,pn
cmpsl
into
dec
out
out
lods
mov
and
out
mov
sbb
and
or
aaa
fmuls
fs
or
xchg
mov
std
push
jno
xchg
loope
in
test
daa
ss
popa
popa
and
rorb
push
test
outsl
adc
or
jp
arpl
xor
shll
sbb
jne
ss
add
cmpsb
sbb
or
mov
inc
nop
mov
mov
sahf
jae
inc
add
mov
dec
xchg
xor
jle
shr
jp
jnp
xor
xchg
test
clc
mov
inc
test
and
mov
mov
fcom
sub
cmp
testb
lcall
repz
lea
insl
dec
jle
aad
pop
arpl
adc
movsl
dec
fs
sbb
mov
mov
pop
out
orb
jmp
popa
test
cmp
gs
cld
mov
insl
lret
mov
lfs
fstl
jecxz
shlb
cmp
cmp
or
icebp
inc
mov
sarb
scas
adc
dec
aam
into
sub
pop
fst
pop
scas
mov
push
fstpl
movsb
std
in
clc
pusha
sahf
mov
stc
mov
push
iret
andl
orb
lret
mov
pop
inc
push
in
ficoms
cld
test
stos
in
insb
add
imul
and
lods
test
or
dec
sbb
push
andl
gs
repnz
inc
dec
cs
idivb
cmp
jp
aam
or
push
mov
int
js
insb
mov
jl
sub
out
out
sub
cmp
hlt
push
fwait
popa
clc
add
out
pop
fwait
jne
mov
fcmovnu
xor
xchg
mov
sub
andl
xor
lods
xor
pusha
inc
jl
mov
xabort
into
jb
add
mov
popf
ret
push
pop
lock
fs
sti
insb
push
inc
ss
push
test
ret
loopne
mov
adc
fisubrs
add
push
lahf
clc
sbb
mov
mov
jnp
mov
testb
mov
mov
xchg
xchg
pop
add
adc
orb
lret
loopne
inc
mov
mov
iret
jg
jle
mov
or
pop
adc
jb
xchg
cmpsl
les
push
pop
push
jecxz
jmp
inc
imul
jae
cmpsl
in
and
je
push
imul
and
pop
mov
outsb
pop
mov
mov
mov
xor
push
pop
cmp
repz
ficoml
sbb
jb
xchg
sub
repnz
dec
sbb
push
dec
imul
cmp
inc
sarb
and
cmp
push
dec
sbb
popf
jecxz
xchg
pop
movb
pusha
lds
mov
adc
mov
cmpsl
mov
aas
mov
adc
fildl
sub
icebp
mov
fistpll
std
mov
loop
sbb
inc
cmpsl
push
fisubs
flds
inc
cwtl
cmp
dec
add
jne
push
cmc
ljmp
cmc
jecxz
xlat
insl
jno
inc
mov
fwait
cltd
or
jmp
push
inc
jno
adc
movsb
rorl
mov
push
leave
xchg
popa
jo
xor
pop
add
dec
das
jnp
in
mov
add
xchg
mov
sub
or
enter
lods
sysenter
add
cmpsb
xor
or
int3
jae
jle
push
std
add
in
lods
jecxz
loope
pushf
in
inc
in
xlat
leave
das
jg
cmp
loope
dec
movsb
jns
fdivr
movsl
jecxz
pop
add
mov
sub
imul
stc
sub
repnz
incb
imul
mov
dec
cmp
cmp
andl
movsb
movsl
xor
lock
aas
icebp
outsb
in
aaa
movsb
adc
mov
test
mov
cmp
jns
pusha
jns
jle
pop
cli
or
sub
mov
inc
mov
lcall
bound
aad
repnz
mov
dec
iret
jmp
dec
cmp
mov
enter
fcoml
or
adcl
hlt
repz
inc
cwtl
cmp
mov
dec
sub
pop
fsubl
jno
outsl
jp
add
lds
mov
loopne
pop
inc
or
popf
xor
test
and
sbbb
pop
push
xor
push
movntps
test
loope,pt
jne
sbb
out
ja
sbb
xchg
subl
adc
or
sarb
mov
mov
sahf
mov
add
cs
iret
pop
aaa
mov
ljmp
dec
lock
jle
pop
jo
pop
and
fwait
push
adc
dec
cmp
orl
push
dec
fs
push
mov
or
jg
cs
jne
jecxz
int3
fwait
out
aam
cmpsl
mov
inc
inc
js
sub
mov
fisubs
push
imul
lret
pop
shll
xchg
sub
test
dec
push
dec
pop
test
enter
cmpsl
fstpt
inc
adc
add
mov
push
cli
movsl
pop
xlat
test
gs
out
es
pop
mov
loop
mov
mov
fsubrl
mov
push
imul
nop
inc
rcrb
mov
aaa
outsb
notb
shlb
sbb
add
ja
or
lds
imul
xchg
pop
repnz
stos
or
cltd
scas
adc
xchg
iret
sbb
stos
mov
mov
sbb
fsubr
outsb
repz
jge
jb
pop
jns
or
outsl
xor
dec
add
pop
xchg
ret
cld
stos
test
mov
test
call
jle
mov
cs
mov
and
imul
cmp
inc
xor
test
jg
push
mov
xchg
ds
outsl
rorl
shll
push
cmp
sub
sahf
das
outsb
or
inc
dec
repnz
int3
or
test
or
sarl
loopne
mov
out
jecxz
lret
dec
movsl
in
lock
inc
pop
nop
das
out
mov
addr16
xchg
fst
sbb
push
ja
in
mov
push
data16
in
lahf
fsubs
xor
cmp
mov
fwait
mov
xor
outsl
fistps
pop
cmp
push
fmuls
push
xlat
push
int
idivl
pushf
jmp
inc
pop
imul
and
inc
mov
push
push
arpl
ljmp
xchg
in
insl
repz
inc
push
or
mov
mov
jmp
out
ljmp
insl
mov
mov
ret
pop
lods
daa
mov
test
adc
test
ret
lock
shl
das
les
jnp
cmpsb
xchg
sahf
mov
jmp
xchg
inc
xchg
mov
lods
pop
das
dec
data16
xor
and
and
sbb
jmp
scas
ficoms
adc
add
jge
sti
jp
enter
dec
cli
sub
cmp
and
jno
push
adc
sbb
sbb
add
mov
mov
lods
jne
jo
xor
mov
push
in
cwtl
insl
icebp
ss
fcompl
pop
mov
fmul
popa
mov
adc
bnd
mov
push
jns
inc
push
or
push
jecxz
cmp
mov
cmp
cmp
or
in
add
dec
mov
sub
iret
les
cmp
and
cmp
mov
ret
ja
repnz
stc
xchg
cmc
xor
sub
mov
in
mov
inc
movsb
pop
popf
mov
bound
inc
ret
imul
out
repz
imul
jnp
push
stc
outsl
lods
loope
dec
dec
pop
cmp
dec
imul
ret
add
xor
insl
popa
loop
pusha
scas
repz
push
movsl
es
lcall
inc
int
and
mov
aas
push
push
xchg
jbe
daa
inc
or
pop
cmp
fsubrs
dec
ds
xchg
push
out
xor
jmp
and
and
push
jecxz
push
xor
into
outsb
loop
fdivrl
fcmovne
decl
inc
jge
cwtl
outsb
movsl
jb
hlt
scas
leave
mov
lret
scas
aas
and
jae
xchg
mov
je
cli
jp
cld
add
xor
arpl
pop
loope
movl
movsb
xor
or
aad
adc
data16
ljmp
insb
pop
inc
push
jae
lret
gs
inc
cld
pop
hlt
aas
lahf
xchg
push
cmpl
cmpsl
dec
in
enter
adc
int
or
xor
sbb
jo
scas
out
and
push
and
jp
pop
test
pop
test
sub
orl
lds
sub
fstps
call
hlt
dec
fadd
cmpsb
add
sub
nop
cwtl
fidivl
lds
sbb
sbb
aas
repnz
stc
cmpsb
ljmp
movsb
imul
adc
mov
push
out
lods
push
imull
mov
test
imul
rcl
clc
jle
sbb
shll
inc
xor
push
cmp
shll
mov
imul
fcompl
lret
out
cli
pushf
insb
dec
adc
aaa
xchg
or
mov
rorl
adc
push
sub
jecxz
enter
cmc
sbb
rcrl
mov
jle
xorb
xchg
mov
push
inc
insb
nop
ss
es
bound
pop
adc
and
adc
cmp
mov
xor
ss
pop
and
scas
in
iret
cmp
sbb
push
jg
inc
arpl
pop
hlt
xlat
lods
fldt
dec
pop
or
xor
pusha
fld
xor
scas
lcall
add
xor
test
inc
mov
or
cltd
loop
or
jl
inc
ret
pushf
sarb
jnp,pn
xor
pop
xor
ja
pushf
xchg
mov
add
movsl
fs
ror
xor
inc
addr16
xchg
pushf
hlt
mov
sub
and
push
or
inc
mov
pop
jns
xor
scas
cs
dec
inc
arpl
push
sbb
loope
unpcklps
ret
or
into
push
push
jecxz
add
xchg
xor
pop
dec
push
int
cmp
aad
pusha
mov
mov
lods
rclb
scas
test
or
jnp
inc
popa
pop
mov
inc
cmp
mov
xchg
mov
inc
jno
hlt
or
sti
mov
mov
in
notl
insl
push
xchg
inc
mov
fstl
std
jp
pop
ss
dec
jae
pop
xor
sub
and
gs
outsl
pop
ja
xor
sti
into
jne
sahf
mov
and
pop
mov
pop
mov
xchg
mov
outsl
jle
xor
ss
and
jecxz
mov
aam
sbb
mov
xor
cmpsl
out
clc
mov
inc
adc
sahf
sub
cmp
and
fsub
fmuls
ror
fsub
jmp
lods
in
fs
mov
outsb
xchg
lock
jecxz
mov
cwtl
or
pusha
jbe
mov
or
jp
xchg
or
insl
add
xor
dec
into
daa
and
mov
dec
sub
pushf
cmp
insb
call
lock
pop
nop
iret
cmp
xchg
xchg
cltd
lea
call
ror
xchg
xchg
mov
stc
daa
jge
dec
sbb
cmp
jg
rcll
sub
stos
cmpsb
pop
in
jae
bnd
les
mov
jno
shr
jo
or
jo
push
pop
lret
add
cmpsl
aad
xchg
test
or
in
pop
sub
scas
daa
dec
and
dec
jo
lret
push
fisubrl
outsl
aad
cmp
xchg
test
dec
sub
aam
xor
loopne
push
sbbb
and
call
or
std
xchg
lock
mov
sarl
jle
cmp
mov
push
inc
int3
push
jo
js
mov
cmpl
loope
jmp
cmp
ljmp
dec
mov
mov
add
notb
cmc
loopne
loopne
cltd
xor
add
fisttps
sub
ja
sar
jle
push
add
test
enter
jb
pop
sbb
pop
push
scas
stos
sahf
test
popa
sub
xor
dec
ret
dec
cmc
fiadds
aam
popf
cld
lods
xor
and
adc
test
daa
clc
lret
call
push
pop
loope
ret
adc
and
loope
out
lea
mov
add
loopne
sub
in
adc
mov
adc
push
xor
test
sub
cmpsl
insl
cmp
or
dec
pop
mov
loop
mov
andl
orl
push
popa
outsl
pop
test
lds
dec
mov
sahf
in
mov
stc
xchg
cli
rorl
and
xor
in
add
mov
addr16
mov
popf
and
xchg
scas
test
cmpsl
pusha
jp
inc
cmp
pop
cmp
mov
mov
cmc
mov
mov
stos
ljmp
inc
jno
cmp
add
lds
inc
mov
mov
xchg
sbb
hlt
lea
mov
fucomp
xor
aam
in
inc
mov
fsubs
push
sbb
inc
out
test
pop
pop
in
ljmp
adc
lahf
push
adc
adc
mov
adc
xchg
push
fwait
popa
mov
dec
mov
out
xlat
int
or
and
sub
adc
jne
adc
in
negb
xor
add
jno
inc
cmp
or
add
imul
hlt
push
cmp
lcall
daa
xor
stos
cli
adc
add
push
adc
jg
sbb
dec
lods
cmp
es
mov
push
dec
mov
push
das
pop
stos
jecxz
jbe
cltd
add
xchg
ja
addl
cwtl
mov
dec
or
mov
push
cmp
lahf
orl
push
sub
aas
sub
push
andl
sti
fcomp
les
mov
aaa
dec
call
pop
xor
lret
movsl
mov
mov
dec
and
filds
popf
popf
icebp
or
in
or
push
ficoml
loope
insb
jg
dec
mov
cmc
fdivrp
dec
test
adc
mov
fs
mov
cs
test
jb
mov
imul
add
pop
and
in
call
shr
fstpl
sbb
push
out
xchg
mov
xchg
cwtl
js
jae
push
cwtl
ds
sub
push
mov
pop
scas
pop
divb
dec
add
imul
negb
jmp
int
adc
pop
and
in
arpl
pop
push
aam
popa
jle
sbb
sub
loope
mov
or
mov
pop
jle
in
add
in
in
aaa
outsb
push
jecxz
rol
cltd
xchg
cltd
adc
dec
lret
dec
push
dec
jl
lcall
popa
dec
pop
lock
pop
jp
mov
and
cmpsb
push
and
repz
and
lret
jle
jns
sbb
lods
hlt
mov
sbb
adc
sbb
inc
mov
lock
adc
sbb
cltd
add
push
and
in
shrl
dec
fimull
pop
sarb
xchg
fcoml
inc
push
dec
sub
aaa
xchg
xchg
sbb
jl
hlt
shll
jb
push
sbb
lock
mov
lret
aad
rorb
pop
xchg
roll
xchg
stc
cmp
je
subl
mov
test
jae
pop
pop
push
cmp
fistl
mov
adc
or
sbb
pop
clc
and
pop
test
cltd
movsl
sub
hlt
pop
cmp
jno
sub
in
fcomi
mov
out
dec
sub
add
cmp
aam
lret
clc
push
adc
clc
fcom
mov
jmp
mov
sub
mov
push
or
nop
sub
addb
shll
jae
dec
inc
pop
sbb
cmp
xor
repz
bound
fistpl
dec
push
ss
js
dec
cli
xchg
insl
fwait
lock
mov
xlat
sub
stos
popf
mov
mov
sarl
pusha
mov
sbb
mov
sub
shll
push
int3
aam
jl
sub
sbb
jae
mov
mov
orb
stos
mov
or
clc
mov
ss
out
loopne
push
mov
sar
mov
inc
aas
sarl
jp
push
outsl
xor
push
mov
loop
dec
mov
push
addl
js
mov
lcall
dec
jno
cld
xchg
dec
push
push
rcrb
lods
mov
imull
leave
jns
scas
pop
and
push
xchg
shll
sbb
push
and
int3
in
xor
push
adc
or
adc
gs
ss
jmp
daa
add
and
fs
xor
push
arpl
clc
mov
mov
imull
das
cmp
add
cmp
sbb
mov
or
popa
hlt
or
cmpsb
lea
mov
in
test
adc
dec
std
dec
lret
or
add
je
fcmovu
int
inc
rcll
aam
pop
cmp
mov
mov
outsb
adc
movsb
jne
jne
sub
jo
mov
call
sbb
xchg
inc
mov
or
iret
out
lret
and
mov
movsl
push
sub
int3
clc
mov
cmp
call
sbb
pop
xchg
enter
lret
dec
iret
xchg
mov
sbb
data16
xchg
lods
or
sub
adc
ficoms
jb
sbb
dec
pop
ret
pop
insl
cmp
hlt
add
xchg
rorb
inc
pop
inc
sbb
mov
dec
aaa
xor
push
mov
xchg
cmp
inc
dec
lret
xchg
pop
xchg
adc
loop
push
adc
out
aam
cmp
adc
push
and
sub
bnd
clc
and
pop
fiaddl
jg
xchg
out
xchg
or
cmp
dec
adc
mov
shl
cmp
out
cmc
and
push
lret
in
stos
lods
in
cmp
mov
jno
pop
loopne
stos
addr16
pop
push
repz
rcrb
jbe
jb
jno
mov
sbb
repz
repnz
or
in
add
pop
adc
rclb
shlb
mov
negb
or
lahf
sbb
ja
and
mov
outsb
dec
lcall
sub
nop
pop
addr16
negl
stc
jle
xor
outsl
xchg
or
or
sbb
pop
mov
and
outsb
sbb
and
dec
push
jecxz
add
popf
inc
jo
loop
sti
add
mov
arpl
mov
je
pop
and
iret
adc
cmp
xchg
lods
ljmp
lret
and
add
lock
inc
out
dec
outsl
dec
in
into
test
xchg
sbb
push
fwait
subb
xchg
sti
fildl
xlat
pop
jae
lret
popf
adcl
roll
movsb
fwait
push
dec
int3
xor
cmp
mov
fbld
adc
pop
add
xchg
cmc
daa
cwtl
mov
repnz
push
mov
addr16
cmpsb
or
test
stc
out
ljmp
mov
mov
into
adc
dec
jle
pmaddwd
cli
es
dec
push
std
out
pop
mov
icebp
mov
adc
and
filds
ret
sbb
sbb
sti
adc
frstor
dec
ljmp
pop
mov
out
lods
rcll
lret
pop
decb
in
and
sbb
or
cmp
stc
nop
outsl
testl
cmpsl
jno
jge
mov
fldenv
push
nop
test
sbb
jge
insb
dec
adc
hlt
cmpsl
lret
cmpsl
mov
mov
add
pop
adc
mov
orl
add
mov
mull
adc
mov
mov
pop
xchg
lods
decl
cmpsl
addr16
mov
pop
js
sbbl
fsub
push
mov
fwait
xor
shll
shrb
lahf
dec
daa
cld
jnp
pop
test
rcrb
daa
adc
xor
mov
dec
lods
mov
addr16
pop
push
mov
mov
into
scas
stos
jl
lods
test
jp
push
out
sbb
imul
in
fdivs
cmp
push
mov
mov
leave
fildl
push
inc
jns
add
dec
fldt
movsb
xchg
repz
jecxz
push
mov
cmc
aam
push
cld
mov
cmp
fidivs
jns
sbb
and
sub
add
xchg
gs
cmp
stc
fucomp
ljmp
jb
push
ds
and
movsl
fisttpl
test
push
test
imul
xchg
ret
fcmovnu
mov
add
rcrl
popa
addl
adc
ds
cmp
jb
mov
xchg
leave
xor
enter
xchg
adc
mov
xchg
test
idivl
xchg
test
hlt
mul
rolb
mov
jmp
xchg
or
xchg
iret
inc
mov
inc
xchg
add
pop
int
andl
test
lcall
and
mov
mov
inc
in
mov
jg
je
lret
std
pusha
jg
xchg
sub
hlt
cmp
pop
mov
lahf
setne
inc
stos
js
movsl
dec
outsb
push
test
sbb
cld
push
pop
mov
dec
test
stos
imulb
test
jnp
sbb
jb
test
xchg
int
dec
fistpll
mov
rol
outsb
push
loope
cld
fs
les
sbb
adc
imul
dec
aas
pop
and
repnz
cmp
leave
testw
gs
ret
mov
aas
push
mov
adc
fisubrs
push
outsl
ljmp
fisubs
ss
or
fwait
sub
adc
movl
stos
fldt
push
inc
ret
stc
shl
ja
jecxz
pusha
push
mov
aaa
pop
mov
adc
imul
jnp
call
xchg
out
adc
out
xor
fdivl
push
sub
test
push
ja
mov
jne
insl
pop
pop
rcr
out
pop
adc
jl
jbe
ss
xchg
cwtl
out
xchg
stos
fstpl
loope
cli
fidivrs
incb
and
jbe
rorl
stos
out
sbb
icebp
sub
sub
mov
pop
jo
push
ret
pop
jle
roll
jecxz
out
dec
xchg
insb
or
stc
push
pop
arpl
cmp
push
aam
and
out
inc
mov
add
pop
mov
inc
sbb
mov
das
pusha
cltd
stos
aad
xor
mov
sub
cmp
jnp
jns
xchg
in
mov
push
mov
push
lock
add
mov
xchg
lods
xchg
lret
loope
add
mov
add
mov
outsl
push
mov
add
xchg
out
cs
push
and
push
fdivs
sar
rorb
mov
repnz
in
mov
xchg
ficoms
outsl
out
les
adc
mov
sbb
test
out
fistps
pop
dec
into
inc
and
mov
jp
pop
jge
fstps
cli
jmp
mov
jg
xor
mov
popf
adc
shll
xchg
ljmp
dec
jbe
mov
dec
into
mov
jae
cmpsl
cmc
in
or
loope
jp
stc
mov
leave
sub
mov
sbb
arpl
jne
fildll
push
rclb
add
or
dec
fwait
pop
push
std
inc
and
adc
mov
fcmovb
fistpl
or
int3
push
mov
jg
mov
dec
mov
js
inc
mov
test
push
xchg
pushf
ret
leave
mov
outsl
ror
pop
test
mov
adc
scas
add
add
shrb
clc
nop
pop
jg
cmp
sbb
es
arpl
loope
cwtl
fwait
dec
pop
pmaxub
repnz
pusha
leave
pop
mov
mov
lcall
fs
rolb
orb
jge
xchg
pop
outsl
jmp
sbbb
jge
jmp
sti
push
and
and
rorb
cmp
and
add
sub
jns
push
cs
push
shll
out
shl
sbb
sarl
push
clc
push
imul
jo
flds
dec
xchg
xchg
jns
das
jbe
clc
inc
dec
in
nop
mov
sbb
jmp
push
insl
add
popf
arpl
jmp
out
pop
sbb
cmovne
xchg
mov
add
or
sar
mov
repz
sbb
xchg
dec
movsl
data16
jns
inc
add
xor
mull
cli
mov
mov
mov
adc
inc
or
pusha
loope
rcrl
es
rclb
aaa
add
push
push
jmp
int3
jne
or
das
push
jnp
bound
add
add
mov
sub
adc
aam
push
idiv
and
das
xchg
ret
dec
aad
cmp
push
aaa
stos
mov
cmc
repz
mov
inc
jo
xorl
push
movswl
fwait
add
jp
xlat
ret
imul
sub
mov
dec
lahf
testl
inc
test
push
inc
sbb
hlt
arpl
push
ja
xor
dec
xchg
or
cmp
dec
push
xchg
xchg
add
cmpb
push
cmp
nop
mov
xchg
sahf
cmpb
in
arpl
sub
jle
xchg
xchg
jne
inc
cmp
dec
movl
int3
addr16
in
sti
pop
addr16
or
lea
adc
jo
inc
dec
xchg
push
inc
ljmp
cmp
cmp
jmp
ret
aam
add
aas
leave
push
repnz
ret
ret
jmp
inc
addr16
loop
jae
out
mov
mov
fs
xchg
jmp
popf
jo
rcr
add
imul
call
mov
push
movsb
jae
outsl
insl
sub
repnz
pop
add
push
ljmp
out
add
jp
push
ja
pop
mov
inc
xchg
sbb
xchg
push
pop
and
sbb
pop
bound
xchg
clc
in
call
scas
mov
loope
shll
xchg
jl
jg
cmp
jle
insl
xchg
dec
add
sub
into
ret
push
cmp
idivb
stos
sbb
jns
mov
or
pop
sub
cmp
loopne
int3
or
add
js
in
mov
sub
lods
mov
add
mov
and
mov
sub
mov
imul
inc
mov
js
scas
es
cmp
ret
sbbl
mov
sub
sbb
jne
les
jae
pop
into
jbe
pushf
sub
into
repz
or
and
lds
mov
mov
sbb
iret
sub
jl
jmp
sub
cs
jge
call
dec
insb
cmp
mov
xchg
dec
push
loopne
or
fisttpll
pop
test
mov
mov
aad
jg
adc
jmp
in
xor
mov
cli
pop
sub
add
movsl
adc
movb
das
ret
mov
mov
rcr
cmp
lret
mov
movsb
decl
cld
inc
arpl
stos
jge
cmp
add
or
jbe
jg
lods
mov
jnp
xchg
mov
push
sbb
testb
xchg
icebp
aas
jp
push
neg
mov
ret
ret
nop
pop
aad
xchg
dec
xchg
xchg
adc
adc
roll
mov
add
and
int
aad
lods
lea
mov
fstl
pop
pop
mov
scas
mov
mov
or
xchg
clc
in
arpl
cld
bnd
icebp
inc
int3
sub
shrl
and
sbb
sarl
int
pop
sub
jb
or
cmp
clc
ss
and
clc
xchg
jmp
nop
test
pushf
bound
sbb
cwtl
out
jle
xchg
lret
sbb
or
push
decl
sub
xlat
stos
dec
pop
ret
add
adc
dec
or
cmp
push
cmp
sahf
adc
sub
clc
les
jno
lcall
jg
fsubs
jle
les
push
mov
pop
inc
ret
in
push
leave
push
cmp
jbe
push
lret
cmpsb
jg
and
leave
out
mul
push
sbb
push
lret
adc
leave
imul
pop
clc
ds
xor
add
mov
adc
pop
pop
cmp
and
cmp
lock
stos
or
sbb
mov
imul
lret
lock
es
mov
movsl
addr16
fs
int
je
xor
adc
in
out
pop
loopne
testb
and
rcrb
sti
insb
mov
sub
add
sahf
xlat
mov
dec
data16
xor
scas
mov
mov
and
pop
sti
les
xchg
pop
insb
jg
imul
sub
loopne
xchg
or
pop
xchg
inc
fldl
sarl
sub
mov
cmp
inc
or
push
jnp
and
sub
test
ficomps
sub
xlat
cs
iret
xchg
nop
or
insb
mov
jle
mov
jo
dec
lds
mov
sbbl
test
mov
jae
cmp
aam
push
clc
gs
jp
and
and
push
xchg
cli
imul
jns
mov
sub
sub
mov
or
lcall
xor
mov
jno
lcall
shr
rclb
pop
aad
sbb
jno
add
adc
imull
notb
jl
xchg
cmp
jne
loope
mov
xor
lock
orb
test
pop
call
loope
sbb
push
mov
inc
jae
arpl
inc
sbb
lock
mov
jmp
sub
lods
and
es
stos
int3
sahf
sbb
xchg
add
fisttps
adc
and
sub
xchg
jmp
xchg
outsb
cmp
mov
and
cmp
out
sarb
dec
xchg
inc
fiaddl
sub
and
pop
mov
jbe
sti
add
nop
push
into
sub
pop
shrb
push
or
out
fsubs
push
or
dec
mov
mov
leave
jl
sbb
repz
xor
jle
xchg
lret
xor
lcall
push
in
pop
push
mov
jno
mov
xor
inc
xor
inc
dec
call
cmp
cmpsb
dec
aam
xchg
cltd
test
ret
repnz
mov
mov
int
mov
scas
jle
cld
inc
ret
fcoml
rolb
leave
loopne
mov
inc
mov
loop
mov
aad
mov
repnz
enter
dec
sbb
pop
cs
pop
call
cmpb
push
add
sbb
inc
aam
out
dec
inc
iret
mov
cli
cmp
mov
loopne
bound
mov
ret
add
bound
xor
sbb
mov
xor
inc
into
xchg
mov
mov
notl
pop
cmpsb
loopne
in
push
push
and
in
adc
add
adc
push
push
ret
push
lahf
jns
jbe
xor
mov
add
fidivrs
bound
daa
or
sbb
and
aaa
fs
ret
jp
cmp
dec
sub
imulb
out
xchg
cwtl
sub
loopne
insb
xchg
and
mov
adc
xchg
mov
adc
xchg
push
fstpt
ja
push
ror
hlt
and
xchg
mov
pusha
push
lods
sbb
cmp
rcrl
fdivs
fsubrs
testl
dec
jb
xchg
cmp
push
push
ret
mov
dec
enter
xor
pop
outsb
popa
cltd
loop
notb
test
cld
mov
mov
testb
sbb
mov
jg
clc
sti
push
or
stos
inc
popa
mov
adc
and
mov
aad
inc
or
testb
mov
lea
arpl
add
jbe
push
jle
pop
out
int
mov
push
pop
cmp
cmp
jno
push
push
aad
or
push
push
pop
mov
add
sbb
stc
mov
jg
add
pop
jmp
jl
inc
fcoms
pop
cmpsl
mov
mov
push
imul
mov
data16
test
in
das
lret
es
mov
movsb
adc
mov
jae
jne
and
jns
lcall
mov
pop
js
daa
in
sbb
mov
xchg
fwait
icebp
dec
mov
adc
faddl
xchg
hlt
out
ret
inc
adc
shrb
sti
sub
inc
add
in
mov
pop
rol
dec
shrl
xchg
dec
test
jae
pop
outsl
push
mov
or
cmc
jl
or
and
int3
enter
or
fcoml
shlb
lods
pop
cmc
xchg
loop
imul
sahf
loop
and
pop
imulb
clc
sub
push
test
cmpsl
push
decl
adc
ljmp
xor
sbb
gs
add
mov
mov
jl
lahf
jbe
ja
fs
imul
aas
ljmp
test
pop
test
roll
jg
fistpl
inc
mov
push
aad
insl
pop
sbb
rcr
sub
iret
pop
push
fldl
cs
cld
mov
lret
xchg
stos
call
shll
jl
cmp
in
and
lods
add
fstpl
pop
xor
add
push
stos
loop
sbb
push
cltd
xor
adc
aam
ret
sbb
ret
movsb
outsl
and
loope
xchg
arpl
inc
testb
bound
cltd
push
or
inc
movsl
add
je
xlat
adc
mov
push
and
add
in
jb
jb
mov
jbe
aam
dec
mov
lcall
pop
dec
sbb
mov
shlb
test
lahf
loope
les
mov
int
loopne
mov
test
clc
inc
es
dec
sbb
fimull
or
shlb
pop
fiaddl
mov
call
add
lock
cmp
stos
lret
cld
xchg
or
shlb
cltd
xchg
fsubl
jbe
jecxz
inc
pop
jae
jg
push
pop
jne
ret
pop
push
cmp
fucomip
or
movsb
jle
in
jne
fmuls
ljmp
cs
pushl
pop
into
ret
insl
daa
fists
inc
scas
dec
repz
ficompl
cltd
xchg
ret
cwtl
sbb
lods
push
mov
fcmovbe
xor
sbb
ja
lods
arpl
stos
mov
cmpsl
pop
jmp
and
xorb
cltd
sahf
adc
lcall
shll
adc
adc
adc
pop
nop
fs
aad
std
sub
ds
es
outsl
je
inc
and
xchg
lret
fdivrl
sub
in
movsb
in
adc
fmull
shl
sbb
push
mov
push
push
into
cltd
cmp
fcmovb
xor
sub
add
popa
mov
lcall
negb
jle
stos
sub
push
push
sbb
imul
gs
inc
sub
and
and
rcr
push
in
test
inc
iret
shlb
imul
insb
cmpsb
loope
mov
dec
dec
rorl
js
imul
or
pop
jo
dec
mov
das
mov
sub
pop
mov
jg
lcall
mov
cmc
fmull
pop
push
push
mov
dec
fildl
fldt
sub
ja
xchg
cmpsb
das
pop
ret
adc
mov
add
rcrl
in
mov
sub
adc
mov
stos
push
push
movsl
mov
inc
mov
cli
push
or
stc
inc
pop
sub
add
hlt
add
jb
mov
lods
ss
mov
notb
pavgb
cmp
jb
scas
mov
scas
add
pop
xchg
ret
cltd
sub
rorb
xchg
mov
xor
xor
push
dec
cmp
dec
sub
out
xchg
outsl
push
sub
adc
pop
cmpsl
mov
cmpsb
pushf
fsubs
mov
dec
lret
adc
mov
arpl
push
ret
add
repnz
sbb
mov
cmp
outsl
sub
sbb
loopne
test
sub
ficompl
or
lret
idiv
fldenv
push
call
fiaddl
imul
hlt
stos
das
cmc
cmp
subps
repnz
loopne
test
jb
or
pop
mov
or
or
mov
xchg
aad
data16
fwait
add
push
mov
stos
imul
adc
cmpsb
jbe
cmp
and
dec
addl
mov
jge
push
dec
mov
xchg
in
push
and
rep
cmpsb
lods
outsl
addl
push
mov
jb
stos
sti
testl
inc
mov
push
mov
shrl
mov
lcall
mov
pop
push
ljmp
in
sub
add
inc
adc
es
mov
js
mov
pop
rol
inc
push
fsubrl
xchg
jne
xlat
xchg
cmc
push
mov
clc
mov
xchg
add
imul
cltd
pop
sub
ss
int
jmp
xor
jnp
enter
or
sbb
mov
ficomps
outsb
push
xchg
inc
hlt
mov
lock
fsub
in
mov
push
cmp
stos
les
sub
outsl
add
subl
lock
sbb
jo
imul
xorl
lcall
mov
test
mov
add
fnstsw
pop
fisttpl
push
pop
lret
nop
jl
in
push
xchg
aas
repnz
test
jbe
push
jne
push
cmp
popf
popa
push
xchg
fdivrp
les
movsb
out
fstps
jge
sub
es
pop
push
jl
mov
lods
mov
add
jno
pop
fdivr
and
out
in
mov
pop
dec
xchg
sub
lcall
and
popl
mov
out
add
sub
pop
negl
insb
enter
mov
sub
scas
push
test
decl
imul
shlb
mov
mov
xor
rclb
fstl
or
xchg
and
mov
jo
popf
dec
pop
fldt
inc
and
bnd
hlt
pop
push
jb
inc
pushf
jns
add
push
inc
cli
outsl
dec
jno
jecxz
xor
ja
mov
xchg
pop
jp
or
mov
dec
pop
and
push
out
loopne
xchg
stos
dec
gs
jl
lahf
stos
imul
les
push
ss
push
jg
mov
cmp
pop
sub
jge
mov
xchg
cwtl
jecxz
stos
xor
in
pop
push
push
push
out
popl
jl
jae
and
je
bound
mov
cli
jo
pop
enter
mov
inc
mov
jg
fmull
lods
jno
outsb
cmc
xor
mov
icebp
outsb
fdivs
mov
ds
inc
mov
decl
insl
adc
mov
addl
xchg
into
sub
test
adc
leave
and
popa
inc
sbb
js
add
cmp
pop
xor
les
gs
cmp
push
pusha
outsl
push
ds
push
in
out
mov
dec
dec
rcl
sbb
test
push
jp
xchg
push
push
pop
movsl
sub
gs
inc
leave
fwait
inc
jo
scas
jno
jle
sub
pop
fdivrl
xor
and
imul
add
cld
mov
mov
fistpll
outsl
xchg
add
mov
ja
cmp
addb
dec
and
dec
or
cwtl
ljmp
mov
in
sub
xor
cmc
movsb
movsl
cs
and
jle
inc
data16
decl
pop
icebp
pusha
mov
rorl
xchg
inc
lea
cmp
test
loop
pop
fdivrl
xor
scas
jb
add
or
out
inc
adc
lds
push
out
lds
bound
aas
xor
sbb
adc
and
jno
mov
test
pop
repz
lods
adcb
out
xchg
inc
jnp
mov
add
lahf
cmpsl
lock
jnp
lds
push
mov
loop
push
fsubs
xchg
clc
sbb
dec
xchg
jno
jo
fdivrs
loope
add
mov
mov
sbb
cmpsl
mov
mov
mov
lock
push
jp
xor
mov
mov
jg
xor
mov
pop
jl
sub
leave
mov
movsl
mov
hlt
cmp
aaa
cmp
lock
leave
cs
and
cmp
imul
aam
push
std
in
in
pop
outsb
ret
dec
gs
lret
scas
push
mov
mov
imul
movsb
lret
add
movb
pop
ret
xchg
xlat
popa
into
pop
lds
hlt
sub
ja
sub
jl
add
mov
scas
loope
sbb
jns
push
sbb
ljmp
inc
push
dec
repz
test
scas
mov
sbb
and
inc
cmp
cmpsb
add
lret
lods
cmp
test
repnz
lds
xor
sub
add
xchg
and
in
mov
test
inc
inc
dec
stos
sub
pop
stc
pop
inc
jns
dec
jo
adc
scas
ficomps
lods
ds
jg
addr16
adcb
pop
xor
in
mov
xchg
push
xchg
sub
dec
sub
or
xchg
and
movl
xchg
data16
pop
pop
in
push
mov
cmp
in
push
lret
int
test
popa
test
dec
pop
push
fldenv
mov
jge
inc
adc
adc
cs
pop
or
push
jp
decb
mov
xchg
jg
cmc
aaa
addr16
lods
mov
fdivrp
mov
mov
fcmovbe
xchg
and
inc
shl
aam
jnp
add
and
lsl
jno
ljmp
push
pop
mov
iret
popa
xor
dec
lahf
xor
inc
fldl
repz
add
bound
in
ss
xor
or
xor
xor
mov
mov
mov
aam
pop
enter
inc
sarb
in
and
pop
aam
jnp
jmp
scas
and
mov
insb
xchg
lea
pop
sub
xor
push
fld
cmpsl
sbbb
inc
movsb
mov
xor
cmp
mov
leave
mov
lretw
testw
push
fcomps
loopne
lods
lret
mov
push
aas
pop
xor
push
rcrb
shlb
mov
iret
sub
xchg
cld
inc
fcomp
xorl
outsl
pop
sahf
inc
aas
and
mov
lret
cmpsb
adc
fs
sbb
popa
cmp
pop
ss
test
loopne
js
adc
push
test
dec
and
inc
ss
xchg
fimuls
sub
popl
jnp
es
shrl
xor
dec
dec
mov
push
cmp
mov
cmp
ret
xchg
cld
in
popf
add
jne
xchg
xchg
test
arpl
pop
in
mov
mov
mov
dec
imul
jno
je
mov
filds
jecxz
scas
test
sbb
or
mov
ss
add
push
mov
in
cmpsl
loope
mov
pop
xchg
xor
ds
sahf
sbb
mov
sahf
cld
loopne
pop
shlb
jbe
insl
cmc
sub
sbb
ljmp
fdivrs
cmp
or
mov
inc
cmpsb
pushl
xor
lods
adc
cli
jb
cli
mov
outsl
test
cwtl
lods
lcall
ret
ja
add
xchg
mov
mov
rcl
sub
mov
daa
insb
mov
cmp
je
xchg
test
inc
xchg
cltd
hlt
pop
xor
mov
pop
xchg
inc
idivl
imul
cli
lods
scas
js
mov
jae
sub
jo
push
cmc
mov
mov
ret
pop
dec
xchg
inc
lods
fsubr
shrl
sbb
pop
sbbl
ret
push
std
mov
gs
cmp
hlt
or
nop
mov
sub
sbb
xor
sub
stc
add
pop
and
sbb
sti
fstpt
int3
jb
aad
scas
cmp
or
cmp
mov
push
xchg
int3
push
cwtl
xor
out
in
orb
jl
mov
ljmp
sub
lds
add
mov
or
xor
scas
jae
xchg
adc
mov
sub
and
sub
mov
mov
arpl
adc
and
mov
xchg
jl
rcr
xchg
jge
aad
outsb
and
mov
push
mov
call
xchg
sub
inc
jle
mov
or
aas
rcrl
mov
dec
pop
scas
xchg
pop
loope
testb
push
rorb
fisubl
xchg
addr16
xchg
insl
in
call
xchg
mov
cwtl
rol
mov
xabort
call
push
addl
push
xor
add
test
cmp
popf
mov
mov
cmp
mov
imul
xor
mov
pop
xchg
outsl
lret
sbb
jo
adc
cmc
fidivrl
mov
or
mov
ja
mov
pusha
jmp
push
cli
pop
or
push
lret
xorw
inc
gs
jne
or
stos
lret
out
mov
mov
shlb
lret
pop
out
aad
xchg
inc
or
call
out
das
xor
mov
xchg
daa
repz
les
or
leave
mov
pop
repz
inc
aad
outsl
add
dec
pop
orl
flds
cmc
pop
test
fs
mov
mov
push
adc
fdivrl
cld
ja
in
mov
es
cmp
mov
add
mov
lahf
cld
cs
mov
cmp
negl
mov
es
cs
mov
jnp
adc
sbb
push
inc
pop
leave
popf
sbb
add
fmull
adc
jno
sbb
sub
clc
lahf
push
and
repz
mov
sub
imul
int
mov
dec
andb
cmp
push
add
bound
and
popf
mov
mov
imul
sub
ja
or
mov
sbbl
fs
inc
jns
jp
dec
stc
push
fistl
iret
cmp
cltd
dec
mov
outsl
cmp
and
adc
dec
je
test
in
pop
inc
out
sbb
pop
jmp
inc
push
arpl
add
testl
push
test
sub
mov
pop
xlat
jae
add
mov
jbe
adc
scas
lcall
lahf
inc
push
adc
outsb
jns
fsubs
sub
pushf
xchg
sub
jecxz
dec
jmp
or
push
sub
sub
iret
popa
mov
or
iret
and
shlb
test
inc
arpl
push
jmp
mov
mov
jle
imul
pop
das
hlt
aad
jne
insl
xchg
dec
xor
sbb
add
jo
aaa
jp
cli
mov
imul
scas
mov
xchg
clc
stos
out
rcrl
sbb
xchg
jle
cmp
mov
mov
xchg
mov
movsb
out
stos
mov
dec
popf
mov
mov
dec
incl
push
pop
or
jl
add
test
ror
inc
loop
rorb
sbb
pop
cmp
icebp
fdivl
into
jae
adc
mov
test
push
xchg
loop
dec
xchg
std
xchg
pop
push
mov
mov
or
ss
push
sbb
aas
xchg
jnp
out
cmpsl
in
cld
inc
enter
jecxz
out
repnz
into
es
pop
mov
mov
push
ret
push
imul
iret
inc
stc
sub
ja
pop
or
or
dec
out
lahf
xchg
jb
lds
mov
lds
lahf
inc
es
or
or
jae
lcall
push
orl
test
jmp
xor
stos
adc
mov
nop
ds
cmp
das
int
leave
push
jo
mov
or
adc
mov
push
mov
push
inc
dec
shll
test
mov
test
mov
bound
add
data16
add
add
sahf
mov
bound
stc
testb
mulb
push
lahf
mov
push
shlb
popa
cmp
sub
pop
cwtl
push
dec
outsb
pop
leave
loope
dec
stc
mov
jnp
mov
fisubrl
cmc
aas
out
xchg
mov
subl
pop
imul
add
mov
int3
imul
pop
push
push
movsb
inc
outsb
fincstp
lret
ljmp
aas
fnstsw
push
push
pop
inc
mov
fwait
or
cmpb
jne
addr16
lds
data16
roll
sub
cwtl
mov
lahf
cltd
fsubrp
mov
jmp
add
loope
mov
mov
push
testl
arpl
repnz
mov
sub
loopne
cs
push
fs
push
push
js
mov
mov
dec
cmova
loop
aam
int
xchg
stc
pop
imul
das
mov
in
or
sbb
lret
dec
push
mov
and
js
lcall
xchg
pop
outsl
icebp
adc
cltd
cmp
dec
jae
push
mov
pop
mov
aaa
mov
out
shrb
sbb
push
test
adc
dec
aad
pop
push
push
xchg
mov
push
jp
insb
push
ss
dec
dec
fmul
pushf
fistpll
or
pop
orb
test
out
inc
cmpsb
in
jb
pop
int
sbb
sub
jmp
popf
lock
xor
adc
icebp
jbe
lods
or
mov
inc
jmp
stc
jns
pop
data16
stos
call
lcall
sbb
add
test
aaa
xor
out
add
dec
dec
sbb
cmp
or
mov
add
push
hlt
or
push
ljmp
sbb
cmc
mov
popa
mov
or
mov
imul
fcmovnu
mov
repnz
lock
lret
jp
xchg
js
lods
notl
insl
adc
loop
cmpsb
shlb
inc
sbb
in
push
out
dec
mov
popf
cmp
out
pop
cwtl
insb
aas
les
sub
mov
rolb
aas
dec
push
mov
adc
inc
sub
jle
data16
inc
test
inc
or
adc
insb
xlat
sub
mov
daa
xchg
in
and
dec
lcall
fsts
popf
add
mov
xchg
xor
ss
imul
les
pop
in
aam
mov
push
add
jno
mov
jnp
cli
lcall
xchg
nop
add
movb
add
mov
jb
adc
scas
jg
mov
outsl
jo
dec
lods
fs
mov
das
shrb
adc
mov
movsb
push
xchg
cltd
inc
xchg
mov
and
lock
push
popf
cmpsl
sub
loope
bound
lahf
lcall
out
icebp
imul
lods
or
lea
call
xchg
dec
push
add
add
dec
xorl
stos
dec
mov
mov
dec
movsb
bound
push
cld
dec
cltd
xchg
test
popl
iret
push
xlat
pusha
dec
or
aad
push
cmpb
dec
and
dec
loopne
nop
mov
cmpsb
inc
add
cwtl
rolb
sbb
mov
mov
inc
jge
in
xchg
shr
es
xor
out
sub
xor
push
and
pop
xchg
pop
or
mov
popf
aas
std
das
test
mov
mov
xor
dec
xchg
jecxz
jmp
pop
and
shl
int
sub
outsb
mov
clc
je
or
ss
dec
mov
mov
std
stc
idiv
lea
mull
jns
lret
mov
dec
mov
inc
je
fsubl
push
push
lds
adc
jns
adc
fcmovnbe
jns
shr
push
add
movsb
dec
inc
lret
cld
xor
add
lock
fldenv
fnsave
mov
aaa
and
out
jno
out
push
cld
sub
jp
or
jo
mov
movsb
cmp
xor
cwtl
xchg
xor
or
ljmp
dec
inc
pushf
jnp
fstps
mov
jl
cmp
lods
mov
lods
mov
ds
pop
cmc
pop
push
ja
mov
sbb
inc
jge
enter
ljmp
jae
push
mov
push
int
insl
je
push
imul
mov
addb
or
stos
es
bound
xchg
imul
cmp
jne
call
jl
or
notb
xor
mov
lea
test
push
loopne
jbe
or
sbb
out
lods
jne
lcall
popf
aaa
out
jle
push
cmp
push
adc
out
mov
fstp
adc
aas
or
or
sbb
nop
push
push
cmp
xchg
mov
xchg
push
mov
sahf
or
jnp
pusha
mov
mov
aam
cltd
jno
or
popf
aaa
mov
ljmp
xchg
inc
shrl
inc
stc
cmpsl
in
add
aad
pusha
cmpsb
mov
outsb
inc
sub
xor
fldt
stos
test
outsl
lcall
xchg
lcall
mov
pop
lock
cmpsb
jl
jno
loop
icebp
clc
outsb
out
cwtl
cmpsl
testb
loopne
int
fcoms
stc
mov
push
or
ret
xor
or
mov
add
jge
lret
or
cmc
adc
adc
out
mov
aas
call
mov
stos
sbb
mov
pop
sbb
push
jae
out
loope
mov
cld
int
imull
sti
aas
pop
and
jns
lcall
or
sub
inc
adc
out
enter
ljmp
push
xlat
cmp
imul
push
mov
fldenv
aaa
dec
xchg
les
outsb
outsb
cld
fwait
mov
mov
mov
pop
lea
test
xor
inc
pop
mov
sub
jmp
outsb
or
sti
in
fstl
inc
sti
mov
adc
push
js
test
sbb
mov
inc
gs
movsl
enter
mov
inc
mov
aaa
jge
mov
or
adc
sub
and
loop
pop
push
fcomp
out
stos
ds
mov
pop
negb
pop
sbb
out
pop
repz
lods
pop
rorl
jmp
dec
adc
gs
jmp
ja
mov
ljmp
sub
sahf
sbb
sti
orb
mov
push
scas
inc
loopne
mov
mov
mov
mov
cmp
rcl
xchg
int3
loopne
gs
mov
xor
mov
jo
add
arpl
cmp
mov
cs
and
sahf
pop
roll
push
rorb
mov
stc
cmp
icebp
idivb
scas
pushf
mov
adc
fwait
ret
cmp
push
out
movsl
fnstcw
jp
fwait
enter
xchg
repz
ss
jl
mov
add
or
lahf
xchg
lahf
sub
dec
out
pop
pop
dec
adc
xchg
sti
pusha
scas
cmc
in
arpl
jmp
adc
sub
fdivrl
fidivs
ds
mov
stc
adc
and
movsl
data16
xchg
pop
push
push
mov
dec
pop
add
jnp
cmp
aas
cmc
push
sbb
cmp
sbb
xor
and
test
insb
pop
sar
xchg
test
push
aaa
cmp
fiaddl
inc
inc
xor
jb
jae
push
movsl
xor
mov
jle
outsb
aaa
cmp
or
and
mov
scas
inc
sti
mov
jmp
mov
mov
xchg
in
sti
aam
inc
loope
testl
mov
add
movsl
mov
or
sub
int
inc
daa
sbb
cltd
loope
jg
icebp
pop
or
jmp
push
jbe
xor
sub
fsubrl
inc
pop
stos
xor
aam
sbb
pop
int3
push
lods
out
repz
mov
cmp
rcr
push
jne
adc
push
push
dec
scas
enter
push
mov
push
dec
enter
sub
jns
jl
sbb
orl
pop
ficomps
inc
stos
or
hlt
fadd
mov
xor
std
cltd
aaa
xchg
mov
inc
loopne
sub
xor
sbb
push
push
xlat
insb
xor
xor
sbb
jo
cltd
jae
popa
cmp
les
ret
pop
and
push
mov
lds
lea
repnz
out
sti
leave
lcall
jb
mov
lods
pop
int3
jl
push
sbb
jb
add
xlat
cli
or
lcall
mov
adc
cmp
jle
or
dec
jecxz
test
sub
andl
jle
addl
popl
mov
dec
test
fisubrs
and
cmpb
xchg
cmpsb
or
inc
xchg
mov
xchg
jnp
aam
out
lret
shlb
mov
insb
orl
pop
xor
cs
jno
popa
lods
idivb
scas
dec
call
mov
jmp
stc
rcl
pop
das
dec
sub
cmpsb
lods
test
mov
loop
mov
in
ret
or
test
xor
xchg
adc
daa
or
js
mov
mov
out
push
or
inc
dec
push
out
orl
mov
inc
popa
js
add
mov
pop
jns
xchg
cs
xchg
mov
outsb
popf
jmp
jbe
enter
movsb
cmp
push
cmpsl
mov
mov
aad
jmp
ljmp
notl
push
dec
push
dec
adc
dec
and
mov
mov
popf
rcll
jle
push
call
imul
xchg
cmc
jmp
and
mov
mov
adc
or
loopne
mov
mov
xor
rcrb
fcmove
sub
jae
jmp
das
mov
pop
xlat
mov
add
dec
xchg
sub
push
dec
push
dec
pop
dec
enter
out
add
jbe
dec
sbb
rorb
dec
sbb
mov
sub
and
push
jl
pop
jecxz
cmp
je
cmpsb
pop
movsl
in
out
cmp
add
movsb
addb
out
imul
std
dec
nop
adc
cli
add
xchg
add
pop
daa
into
cmc
out
mov
inc
jae
ficomps
sub
std
jle
jne
lret
jge
sbb
arpl
jle
mov
in
cld
out
xchg
rcll
or
jmp
adc
and
test
lret
push
push
mov
imul
sub
and
lret
adc
testl
clc
test
ss
dec
and
cmp
cltd
in
jns
pop
cmpsb
jnp
aas
flds
mov
fwait
xor
add
pop
lahf
mov
data16
insb
fld
dec
sbb
cli
push
decb
imul
in
sti
hlt
lcall
test
data16
mov
jne
jae
fsubrl
pop
mov
incb
dec
mov
pop
push
pop
lea
lods
lods
mov
les
decb
cmp
or
inc
inc
dec
out
sbb
mov
fs
sahf
dec
push
inc
iret
loopne
dec
xchg
push
xchg
sbb
sub
out
mov
call
fwait
inc
pusha
mov
pop
addl
mov
pop
sbb
repz
or
test
mov
or
es
sarl
ficoml
es
mov
sub
cmp
xchg
dec
pop
mov
push
loop
test
xchg
bound
pop
push
shlb
push
add
scas
mov
jbe
adc
sahf
sbb
push
pop
pop
and
stc
fidivrl
mov
popf
xlat
push
int3
jb
idiv
gs
mov
jmp
dec
adc
std
pop
insb
sub
fimull
xor
push
fistpll
cmpb
fcompl
jns
cmp
jb
xor
jecxz
xor
nop
or
cmp
in
adc
pop
mov
hlt
jne
jne
fdivr
adc
test
pop
lock
add
mov
push
lahf
roll
pop
push
xor
mov
or
call
outsb
in
addr16
loope
or
push
dec
push
push
in
add
movsb
jge
mov
mov
sbb
push
push
icebp
sti
adc
sub
mov
mov
cmp
mov
ljmp
scas
andl
sti
repz
ret
jmp
pop
dec
sbb
xchg
xchg
stc
loopne
pop
sti
mov
inc
hlt
add
leave
mov
loop
es
iret
pop
notl
addr16
andb
xor
jne
xchg
xchg
mov
add
adc
jecxz
xchg
sbb
push
and
xchg
push
scas
faddl
fcmovnb
repnz
push
or
pushf
push
cmpsl
add
test
ror
movsb
dec
data16
insl
sar
xor
fstl
lods
cwtl
or
roll
lods
bound
adc
je
push
adc
sub
jge
ror
icebp
mov
cwtl
stos
lock
pusha
sbb
mov
inc
adc
xor
jle
fs
aam
test
div
aam
push
cmp
jb
outsb
pop
pop
iret
nop
arpl
adc
faddl
pushf
aad
xchg
mov
das
les
cwtl
lea
adc
pusha
add
and
add
mov
sti
jl
ffree
mov
sarb
fwait
pop
dec
jno
cwtl
or
into
pop
pop
mov
out
test
iret
cmpsl
mov
cwtl
sarl
in
mov
faddl
add
loope
jmp
jno
pop
test
icebp
cli
or
sbb
inc
lods
pop
addb
out
cltd
push
mov
lds
jbe
jge
fwait
int
mov
rcl
imul
push
movsl
mov
or
push
clc
inc
add
and
or
xorl
pop
loop
out
ljmp
pop
clc
sarl
mov
adc
mov
mov
sbb
jb
mov
fcomps
stc
test
loopne
mov
shll
testl
push
addl
mov
cmpl
push
and
cld
fs
add
add
xchg
movsb
mov
adc
adc
mov
xor
xchg
js
inc
cmpsl
xchg
inc
insb
or
jecxz
xor
xor
push
mov
test
out
lods
lock
gs
jmp
leave
test
mov
mov
in
leave
xor
les
sbb
cmp
pusha
xchg
fcmovu
stc
inc
inc
jae
int3
inc
pushf
aas
jmp
adc
pop
mov
arpl
jg
stos
dec
push
or
stos
loope
xor
es
sub
jae
mov
mov
xchg
mov
sahf
sub
sbb
pop
push
test
xlat
mov
lods
jne
dec
rorl
shrb
jmp
pop
cmp
rolb
jnp
dec
fcoms
insl
dec
sbb
aad
push
or
pop
in
das
ds
aaa
adc
cmpsb
and
loopne
xchg
inc
pop
ficoms
xor
push
add
inc
or
dec
pop
dec
fs
push
inc
sbb
pushf
mov
xchg
cltd
push
jp
jo
pop
stos
jmp
adc
fsave
nop
mov
push
mov
pop
mov
push
lods
or
roll
les
outsl
sbb
call
sbb
sub
in
mov
lods
or
xlat
test
inc
xchg
pop
aas
add
sti
out
addr16
adc
cmp
aaa
js,pt
jns
pushf
popa
test
sbb
sub
lret
jg
lods
ret
into
ficomps
mov
or
inc
icebp
movl
xor
cmp
sub
mov
pop
push
jecxz
rorl
cmp
mov
test
fistps
fwait
into
popf
lods
add
pop
add
in
jne
lcall
mov
cli
cmc
lahf
sub
pop
and
fisubs
rcl
pop
mov
jo
xchg
rorl
jg
aaa
add
test
pop
mov
jge
shrl
jo
cmpsl
mov
mov
dec
addl
mov
mov
mov
mov
insl
rclb
ss
mov
int3
xchg
xchg
aas
enter
fidivrl
jae
push
pop
shl
mov
int3
jns
and
lock
movd
icebp
popa
ds
lods
scas
push
das
in
popl
clc
push
mov
loope
mov
sub
push
pop
fs
cmp
jbe
xor
aam
adc
or
mov
shll
aam
faddl
xor
jae
imul
cld
rcr
mov
int
pop
test
jle
mov
cwtl
dec
test
jmp
daa
pop
cwtl
scas
aaa
sbb
pop
stc
add
mov
push
or
test
and
pop
adc
mov
and
clc
test
mov
das
repz
fcmove
mov
push
lahf
inc
andl
rclb
xchg
in
xor
or
dec
bound
add
jmp
cld
push
aam
fisubrs
inc
shrl
lods
dec
loopne
dec
out
mov
jne
mov
into
mov
rcrb
push
cmp
decl
pop
cmp
cli
xor
and
pop
inc
mov
iret
loope
adc
call
dec
icebp
movsl
movq
les
stc
insb
cs
jo
in
mov
xchg
repnz
and
push
add
test
push
arpl
scas
inc
jae
jo
fcmovne
mov
test
popaw
push
in
repnz
rcll
mov
fwait
jl
xchg
test
gs
sub
adc
jecxz
dec
movsl
into
xor
cmpsb
orb
in
inc
std
iret
mov
ret
pop
inc
test
lods
scas
mov
cmp
out
fldenv
je
fs
dec
out
adc
aas
dec
nop
xchg
push
jno
cld
rolb
test
pop
or
cmp
jne
cmp
lods
out
sbb
cltd
pop
or
mov
push
xchg
das
rorb
mov
ja
push
pop
cld
fstl
push
cmpsb
inc
cmpb
pop
add
inc
adc
sub
out
in
mov
or
mov
sub
mov
aad
icebp
jg
dec
jecxz
outsl
sbb
pop
ds
push
pop
out
mov
or
mov
and
push
xor
ret
das
mov
sbb
lock
adc
scas
adc
out
inc
fwait
mov
jle
and
sahf
xor
fnsave
add
repnz
cmpb
jb
add
mov
ljmp
sbb
imul
inc
mov
sub
push
int3
neg
insl
enter
pop
pop
mov
into
cmpb
and
and
negl
sbbb
sbb
cmpsb
cli
sbb
js
add
xor
adc
aad
sub
jne
xchg
movsb
adc
pop
jne
fdiv
sub
stc
daa
mov
mov
xchg
shl
adc
fildl
in
in
repnz
cmp
pop
sub
push
push
mov
sbb
and
fdivs
xchg
sbb
and
fldenv
lcall
aaa
or
dec
jns
cmpsl
add
push
pusha
rcl
xchg
xchg
test
test
int3
test
mov
fwait
bound
inc
scas
jns
dec
sti
inc
pop
sub
lods
cld
xchg
jle
or
fdivrp
scas
mov
popf
addl
jne
arpl
pop
mov
sti
pop
xchg
adc
cmpsl
ja
bound
movsl
sub
cmpl
dec
dec
mov
fwait
pop
mov
dec
push
dec
int
xchg
pavgw
mov
out
imul
and
or
inc
insl
outsb
out
andb
movsl
xchg
popf
dec
cs
adcl
mov
repnz
in
mov
add
lock
sbb
cs
lods
jno
xor
fstpl
push
ds
movsb
adc
dec
or
mov
push
pop
cs
xchg
popf
mov
sbb
repnz
repnz
pop
xchg
inc
fistps
das
pop
mov
push
jmp
in
sub
dec
gs
sahf
sbb
jp
xchg
and
push
inc
shl
and
push
push
dec
jbe
push
pushf
rorb
adc
das
rclb
xchg
pop
ds
pop
pop
imul
rclb
stc
add
dec
into
shrl
mov
jbe
inc
pop
or
dec
lret
sbb
scas
shl
sbb
xchg
xor
mov
pop
mov
ret
aad
jmp
stos
repnz
mov
or
nop
jge
lds
nop
loopne
push
xchg
jl
xlat
das
sbb
pop
push
cmp
push
imul
or
adc
mov
popf
xor
mov
pop
shll
cmc
pop
and
mov
loop
repnz
add
into
gs
fstpt
jp
fmuls
push
stc
pop
icebp
cwtl
pop
test
cmp
jne,pn
mov
adc
stos
pop
insl
neg
es
or
jo
mov
pop
dec
shl
jno
fidivs
pop
jmp
das
sbb
pop
pop
xor
mov
in
fwait
stos
les
popf
pop
cmp
popf
xlat
in
mov
jbe
xchg
and
mov
mov
mov
jbe
les
add
inc
and
mov
push
fbld
dec
imul
jae
jae
mov
mov
push
jmp
mov
mov
mov
dec
add
sub
push
sub
xor
stos
inc
leave
dec
out
sub
dec
loope
sub
fmuls
sub
aaa
or
cltd
cmpsl
jnp
mov
fmull
add
vpaddw
cld
or
add
jmp
jb
cmp
fstl
insb
push
ja
xor
aad
mov
cli
cli
int3
in
sub
mov
mov
cmp
cltd
sahf
xchg
jp
addl
lret
add
stos
sar
imul
push
scas
mov
aad
leave
dec
out
inc
pop
or
je
cltd
cmpsb
out
dec
cld
jns
stc
xchg
jecxz
or
movsb
jmp
in
or
xor
dec
lea
dec
jp
les
icebp
fs
pop
mov
jbe
fs
shrb
mov
xchg
inc
test
mov
cmc
test
xchg
pop
imull
or
shrb
inc
sahf
ds
adc
and
mov
sbb
cmpb
dec
mov
imul
repz
movl
xchg
aas
cltd
aad
mov
inc
mov
cli
dec
push
insl
testl
shlb
inc
sbb
imul
mull
pop
lahf
jg
aaa
or
fdivrp
xchg
sub
mov
mov
xor
xchg
push
mov
pop
data16
out
test
test
push
push
adc
xor
mov
pop
add
mov
mov
mov
fisubrs
jae
jle
pop
out
loop
mov
int3
lcall
aam
mov
mov
insb
cmpsb
pusha
add
pushf
xlat
or
movsb
mov
mov
aad
mov
adc
push
lods
out
arpl
out
mov
btr
ja
lret
and
add
sub
int3
sarl
out
jle
gs
jno
jecxz
shll
push
inc
pop
je
adc
dec
or
push
add
xchg
int3
lods
fistpll
stc
jg
jo
adcl
push
fcoms
mov
and
int3
loope
sub
or
sti
out
mov
sahf
mov
jecxz
loopne
jae
xor
sbb
test
rcrb
outsl
sahf
fiaddl
cmp
xchg
xor
adc
inc
mov
fisubrl
adc
lods
xor
loop
lea
adc
add
jle
pop
in
lahf
icebp
jne
in
mov
mov
sbb
bound
xchg
in
push
sbb
mov
mov
repz
inc
repz
sub
sub
push
mov
mov
and
xor
fiadds
movsl
sbb
xchg
mov
xor
lds
jae
or
loopne
push
int3
adc
jae
sub
out
fwait
push
ja
dec
push
out
dec
stos
xchg
inc
inc
xchg
mov
cmpsl
into
int3
xchg
std
sub
lahf
int
loopne
sub
enter
pop
imul
fcoml
nop
rcrl
or
in
aad
pop
jnp
cmc
adc
ret
addr16
or
pusha
into
loop
roll
inc
push
xlat
cmp
sbb
lods
hlt
int3
mov
xchg
aad
cmp
mov
push
repnz
icebp
push
gs
cmp
sub
in
mov
rcll
dec
cs
in
sub
mov
sbb
fcoms
mov
xchg
and
iret
test
scas
in
lea
fisubs
pusha
push
jle
dec
xchg
sti
and
push
jbe
push
cmp
shll
xchg
xor
nop
test
pop
mov
adcl
mov
mov
fcmovu
adc
mov
cmp
cmp
loop
shlb
fstpt
xchg
aas
cltd
mov
mov
xchg
mov
insb
pop
lcall
ret
call
xor
es
imul
in
out
nop
or
and
repz
fcmovb
pop
aas
movsl
add
xor
int
or
jns
insb
jecxz
push
out
sub
andb
rorl
adc
lods
pop
jg
out
jae
pop
dec
fimull
or
jg
push
dec
je
add
daa
ret
xchg
jb
dec
test
loop
nop
jo
xor
pop
stc
sar
cltd
sahf
pop
jbe
mov
dec
ret
sbb
ja
pusha
stc
cmp
lahf
mov
sub
pop
sub
loope
shrb
sbb
and
sbb
int
and
aas
push
dec
sub
jmp
xchg
mov
jae
test
outsb
out
scas
xchg
fnstsw
lret
jge
sub
sbb
imul
out
shll
xchg
mov
push
jp
out
dec
pop
cmp
pusha
lods
mov
pop
mov
lods
push
xchg
cltd
pop
mov
popa
cmp
js
push
in
test
mov
in
add
cmp
mov
jae
imul
cmp
xor
adc
sub
jno
or
bound
out
jno
xor
xchg
mov
popf
sub
jl
data16
xor
fwait
stos
stos
call
dec
push
scas
aas
mov
jns
dec
jmp
insl
cmpsl
ret
cmpsb
orb
add
mov
xor
or
mov
popf
adc
lret
gs
jne
mov
roll
inc
jae
inc
cmp
lret
ror
outsb
xchg
in
mov
xchg
sub
shlb
push
dec
xchg
fs
sahf
shrb
call
inc
add
add
pop
fimuls
dec
das
sti
fsubr
mov
fidivrl
in
cmp
test
push
fsub
negl
lcall
ficoml
add
lret
jl
mov
rorb
xchg
fwait
lea
ljmp
xor
inc
xchg
aad
dec
inc
adc
lods
cltd
cld
jg
push
adc
sbb
xor
cmp
jb
hlt
push
cmp
cld
insb
rolb
pop
cmp
addl
cld
inc
fisubrl
test
lahf
xchg
mov
test
pop
les
aad
cmp
or
mov
xor
xor
add
jb
sarb
and
scas
cmp
sub
ds
add
stos
add
jno
mov
rcll
jmp
fcompl
cwtl
sub
imul
jl
xor
ds
and
xchg
inc
cmp
ret
mov
mov
clc
mov
addb
into
movsb
xor
movsl
aas
add
push
icebp
cmp
inc
sbb
or
jle
inc
mov
fistpll
mulb
dec
in
mov
das
sub
sub
aas
nop
sub
xor
mov
cs
subl
into
out
repnz
sub
adcb
test
xlat
fiadds
sbb
test
sub
jns
xor
stos
dec
lods
imul
mov
pop
inc
cld
repnz
cmp
cmp
mov
popa
pop
cmp
mov
sub
jge
pop
subl
cmpsl
cld
push
add
or
jp
or
and
inc
ds
fdiv
test
push
scas
add
jl
in
lahf
add
or
test
fldl
loope
outsl
xor
cmp
or
and
push
call
mov
mov
in
addr16
xor
push
outsb
sti
jnp
out
cmc
sbb
inc
mov
push
mov
into
push
and
mov
lock
je
xor
adc
mov
lods
out
adc
jecxz
in
out
aaa
test
adc
push
mov
call
addl
icebp
dec
pop
add
and
js
je
cwtl
and
inc
sub
std
cmp
fwait
into
int
cmp
mov
insb
stos
jne
push
and
jne
cmpsl
xor
sub
add
out
fwait
xor
or
push
in
or
or
lock
mov
insb
out
aas
jge
push
mov
push
out
clc
outsl
stos
out
das
inc
mov
sbbb
mov
vmwrite
cli
mov
mov
into
sbb
shll
ds
sar
inc
sub
mov
adc
cli
xor
cltd
push
in
push
mov
fs
outsl
aad
pmuludq
cmp
lods
jns
fnstcw
loope
test
test
dec
repnz
push
mov
insb
test
xor
out
or
sub
pop
pop
jg
mov
dec
repz
dec
mov
mov
aas
int
daa
testb
sub
pusha
daa
lret
add
and
aam
xchg
loopne
mov
je
sahf
jnp
js
dec
aaa
dec
daa
loope
js
sbb
hlt
ret
loopne
daa
stos
push
jp
xlat
or
sub
aad
lcall
push
jb
adc
fsubl
cs
shlb
mov
lret
popf
or
ret
nop
rcl
push
and
pushf
arpl
xchg
aad
mov
sarb
test
frndint
push
push
xchg
aam
lahf
push
add
dec
push
dec
ficoml
data16
sbb
mov
cmp
or
gs
rcr
hlt
xchg
fistpl
xchg
in
popf
xchg
push
loope
fnstcw
lea
mov
cmp
outsb
jp
mov
xor
stos
sti
fnsave
jbe
jmp
pusha
push
jo
and
pop
das
cmp
jge
sbb
pop
dec
in
cmc
in
jno
mov
pop
xchg
mov
add
push
arpl
inc
dec
pop
xorb
arpl
mov
add
jp
cld
or
mov
fs
pop
imul
rcr
cmp
sarl
out
shl
inc
gs
int
out
mov
je
push
fistl
int3
fcompl
jp
popf
arpl
inc
push
xchg
and
and
aad
stos
cmp
js
dec
fwait
sbb
int3
and
fists
fidivrl
out
aam
rcr
ret
push
lock
in
cmpsb
pop
fidivl
nop
add
mov
mov
shl
pop
in
xchg
ret
incb
rol
pop
cmp
lea
push
mov
dec
fwait
mov
inc
add
scas
mov
inc
fistpll
pop
cs
ljmp
push
lock
jo
arpl
outsb
aaa
xor
cmp
fwait
mov
push
mov
out
xor
cwtl
pop
mov
jge
push
and
push
fisubl
xchg
fwait
std
mov
pop
and
cmp
add
add
mov
xorl
arpl
lahf
stc
daa
xor
mov
jp
shlb
push
fsubrs
jns
and
dec
popf
adc
orb
repnz
loop
mov
sub
orb
bound
mov
cmc
sub
mov
ret
dec
fildll
popf
loop
jbe
cld
xor
inc
out
mov
hlt
dec
sbb
jl
mov
lcall
std
ss
pop
stc
cmc
mov
lds
xchg
out
jbe
lods
mov
pop
cmp
adc
mov
cwtl
cwtl
aas
adc
aad
sub
pop
out
ds
jle
mov
push
jb
add
jae
fbstp
add
rclb
sbb
lcall
inc
xchg
stos
add
andl
and
popa
bound
rcrb
pop
xlat
jp
int3
rorb
lret
adc
inc
test
lret
cmp
push
mov
fimuls
or
shl
movb
outsl
mov
fwait
pop
mov
fcomps
negb
push
fiaddl
mov
adc
das
mov
adc
sbb
fs
rcl
roll
aam
es
mov
mov
stos
subb
pop
pop
and
jnp
inc
mov
lds
or
pop
lock
incl
push
cmpsl
and
inc
or
add
pop
repnz
lods
push
and
pop
incb
fcomps
mov
mov
sbb
int3
pop
sub
pop
je
xor
sub
hlt
add
cwtl
pop
call
sbb
inc
imul
ljmp
repz
mov
aam
cwtl
rep
cmp
mov
xlat
push
inc
xchg
movsb
jmp
enter
ret
inc
push
push
les
mov
ret
notl
test
mov
cld
xchg
inc
ja
mov
pop
xorb
es
fs
fadd
add
in
pop
dec
jo
cmc
test
dec
xchg
push
inc
into
adc
push
loope
jnp
jl
in
or
nop
mov
arpl
popa
add
jle
inc
mov
lret
jo
lret
fiadds
xchg
idivb
adcb
call
adc
jo
aas
bound
fisttpl
int
les
and
imul
scas
jne
xchg
lcall
stos
dec
mov
repnz
sub
loopne
es
xchg
jecxz
insl
clc
or
xor
push
inc
mov
decl
push
inc
lds
movsl
pop
mov
sbb
xor
add
lods
mov
sub
adc
jge
dec
rorb
pop
or
mov
dec
or
mov
cmc
ret
pop
test
mov
jge
jle
sahf
push
dec
fiaddl
xor
imul
or
cmp
mov
push
pop
inc
sub
cmpsb
je
nop
sbb
fwait
inc
das
ljmp
outsl
mov
sub
cmp
imul
nop
inc
fs
push
mov
inc
addr16
sahf
dec
and
inc
adc
addr16
out
lret
sub
xchg
mov
cltd
or
jg
mov
popa
scas
rorb
inc
push
lods
jl
xchg
scas
clc
cld
aaa
mov
add
mov
aad
mov
insl
pop
mov
jge
jo
sbb
fisttpll
fsubrl
pop
cltd
mov
jb
pop
lea
xor
scas
ljmp
shll
cmpsb
fcmove
cmpsb
xchg
lds
data16
lods
gs
xor
sub
mov
fsubl
lea
sub
sub
cmc
jns
push
mov
outsb
mov
or
lahf
fwait
mov
repnz
bound
dec
cwtl
lods
int3
mov
pop
mov
pop
in
mov
cmpsl
jp
fistps
push
arpl
subb
add
mov
cmp
cmp
test
je
sbb
xor
out
cmp
xor
add
sarb
test
div
gs
cltd
push
mov
insb
jnp
out
les
movsb
ret
pop
shll
mov
push
cmpl
inc
lods
cwtl
pop
inc
and
sub
fstp
adc
into
pop
pop
out
push
jae
mov
sub
jb
loope
insb
jno
loop
mov
push
and
out
dec
fwait
xchg
outsl
pop
xor
dec
out
and
sub
inc
sub
inc
sbb
rorb
loopne
lea
cmp
jge,pt
add
ljmp
mov
ret
mov
mov
shrl
test
dec
pop
pushf
movsl
in
sbb
lock
loopne
test
fdivr
or
push
shll
jmp
pop
add
sbb
nop
fld
mov
test
push
mov
mov
xor
stc
mov
mov
jo
adc
inc
inc
mov
sbb
mov
in
xchg
pop
xchg
sbb
xchg
aaa
pop
pop
es
and
inc
push
sub
and
fidivl
mov
iret
lds
pusha
out
xchg
sti
mov
lcall
gs
and
xlat
lock
je
add
and
cmp
es
cld
out
dec
inc
pop
das
loope
mov
push
cmpsl
pusha
pop
inc
mov
cmp
stos
mov
jl
add
dec
test
push
aas
and
pusha
arpl
xchg
dec
add
add
addr16
xor
daa
hlt
lret
sarb
faddp
push
pop
sti
dec
xchg
sbb
imul
loopne
xchg
mov
push
mov
mov
sbb
cli
push
ljmp
pop
ljmp
mov
mov
and
cmpsb
mov
ret
or
cmp
and
adc
pop
lock
div
add
xchg
popf
mov
pop
sti
loope
cmp
adc
imul
mov
js
mov
test
jecxz
inc
pop
in
adc
or
mov
push
jp
sub
add
push
inc
mov
xchg
jo
push
fldt
push
repnz
enter
mov
insl
test
inc
mov
xor
jge
jnp
push
testl
add
xchg
mov
rorb
sbb
lds
sbb
or
mov
push
xlat
roll
cs
lret
jmp
rolb
jmp
cmc
add
push
popa
cs
mov
or
lcall
adc
fs
lods
aaa
imul
stc
xor
and
inc
dec
push
pop
pop
adc
jnp
mov
psubb
lahf
push
test
scas
jb
stc
call
mov
ss
imul
adcl
nop
xchg
cmp
push
xor
or
sbb
dec
pop
pop
nop
add
sbb
push
dec
imul
lcall
sub
add
sub
inc
inc
inc
imul
nop
je
lods
jecxz
mov
outsl
dec
sbb
xor
mov
push
test
imul
out
mov
jl
es
xorb
mov
adc
jbe
dec
or
sbb
shlb
fwait
dec
cmp
stc
out
popf
jae
test
jle
push
fildl
push
sbb
jg
push
cmp
sub
cwtl
mov
dec
adc
leave
aam
movsl
ret
mov
xchg
int
in
pushf
push
xor
into
and
and
lods
mov
mov
jb
lds
push
mov
sbb
pop
les
add
hlt
add
inc
shl
daa
or
and
fistps
cmp
nopl
jge
adc
mov
popf
dec
inc
mov
inc
cmp
add
out
xchg
lds
mov
lea
in
jl
cmpsl
pop
ss
jns
in
jne
inc
ds
call
or
jle
gs
test
call
in
push
ds
push
push
cmp
mov
push
ffree
insl
add
mov
and
mov
sti
sahf
fnsave
lcall
ss
push
mov
xor
sbb
aam
mov
loopne
or
pop
imul
cwtl
xor
adc
xor
in
ret
scas
stos
sbb
push
inc
imul
cli
out
subb
aas
clc
sub
insb
out
cmc
pop
out
jo
mov
push
xchg
jns
scas
and
outsl
movsl
cmp
pop
leave
add
scas
cld
sub
adc
insb
jae
push
xor
jge
movntps
cmp
scas
test
in
xor
adc
mov
cmc
sub
jne
dec
in
maskmovq
notl
mov
mov
mov
out
push
cmp
sti
sub
jb
ffreep
sbb
imul
sbb
loopne
subl
das
fcmovnbe
or
add
mov
mov
or
in
sub
dec
je
sub
sub
xor
push
jne
test
outsl
and
sub
and
jno
fwait
out
xlat
jmp
or
mov
push
pop
cmc
inc
ljmp
pop
mov
in
mov
dec
imul
push
xor
mov
outsb
stos
int
mov
scas
push
jge
push
or
xchg
mov
mov
adc
sahf
sbbb
sub
je
push
mov
cli
push
std
cmp
arpl
xor
dec
adc
cmpsb
cmpb
mov
fsubrl
jbe
hlt
pushf
lret
add
fiadds
shll
xchg
inc
pop
xchg
jne
repnz
lret
jns
pop
hlt
js
mov
test
out
ret
and
ret
dec
out
fcomps
add
xlat
js
jno
scas
push
xor
movsb
lock
jecxz
sbb
and
add
pop
or
repz
and
jo
enter
fistpl
mov
gs
pop
adc
in
fdivrp
cmp
push
cld
mov
sub
xchg
sti
cmp
xor
cmp
int
jl
in
test
mov
sub
mov
lcall
pusha
rcrb
sub
cmp
push
push
push
fiaddl
adc
pushf
fst
and
adc
test
add
aam
mov
sbb
lcall
dec
adc
add
mov
mov
jns
loop
jne
sbb
push
and
inc
icebp
push
mov
add
shll
jle
push
and
pop
in
mov
pop
adc
cli
ljmp
jne
pop
pop
push
jmp
add
and
scas
pop
jmp
push
jno
dec
ficomps
sub
fisubrs
sbb
sbb
cmp
push
jmp
mov
xchg
ds
xchg
imulb
cltd
imul
dec
mov
mov
xchg
pop
test
push
js
xchg
mov
xor
daa
inc
xchg
push
pxor
jp
and
cmp
repnz
std
push
insl
jp
mov
jae
or
add
in
mov
ret
and
cld
or
sbb
inc
in
test
jne
xchg
in
iret
lods
repnz
inc
cmpb
int3
sti
aas
scas
sbb
stos
adc
mov
out
popf
xchg
or
xor
pusha
ja
jne
lret
inc
pop
into
aad
lcall
les
or
test
ss
mov
inc
fs
jmp
imul
les
add
pushf
dec
mov
mov
es
sub
lods
cmp
imul
shr
inc
insl
dec
cmp
out
jmp
roll
rorl
lock
in
sub
jbe
add
adc
insb
or
shlb
xchg
les
cmpsl
stos
sub
pop
mov
out
sub
sub
test
daa
shlb
mov
mov
out
mov
and
daa
push
dec
adc
lds
jg
pop
shll
mov
gs
in
call
sub
jge
ficompl
pop
fwait
insb
addr16
mov
jecxz
mov
dec
lods
xchg
dec
lret
cs
call
pop
loopne
jae
stos
or
and
test
dec
pop
xchg
pop
sbb
stos
jno
jae
rcl
or
test
in
adc
push
or
in
mov
xchg
imul
lods
ja
imul
repnz
mov
push
inc
jp
neg
std
inc
clc
cmp
mov
inc
lds
stc
xchg
repz
xchg
enter
shl
ret
aam
dec
adcb
pop
xchg
mov
sbb
mov
dec
les
pop
out
in
in
xchg
lret
and
in
dec
push
fiaddl
push
jae
mov
pop
mov
sbb
add
fnsave
cs
addr16
adc
or
jo
shrl
jb
mov
test
sbb
lea
nop
filds
cmp
dec
mov
mov
add
fcomip
mov
movsl
into
scas
jno
lea
lds
lods
pop
mov
dec
imul
adc
rol
cmp
inc
test
loope
into
mov
cmpb
out
mov
cmpsb
lods
xchg
cltd
out
repnz
mov
inc
dec
shll
mov
lret
out
push
mov
mov
sbb
aam
rcl
mov
inc
mov
aas
pop
inc
jmp
add
stos
mov
out
xchg
imulb
mov
flds
and
fadds
mov
adc
add
jne
or
mov
mov
adcl
jge
lcall
stos
pop
arpl
cmp
dec
call
dec
fidivrl
rclb
fadds
push
mov
or
sbb
popf
adc
jnp
cmp
push
cmp
insb
inc
jmp
movl
xlat
lods
dec
mov
mov
ljmp
and
inc
add
mov
xor
pushf
add
jge
pop
jecxz
sub
adc
addr16
adc
pop
repz
adc
mov
test
lcall
adc
sbb
pop
jb
pushf
mov
lods
pop
int
add
outsl
jge
repz
call
or
testl
mov
js
jnp
xlat
jae
sub
jb
push
pop
std
mov
inc
mov
or
fcompl
adc
jb
shrb
sub
pop
add
inc
dec
push
in
add
xor
sbb
cmp
out
aaa
ds
loope
pop
push
xor
push
cmovle
adc
push
and
lods
icebp
dec
imul
mov
sbb
aas
out
stc
leave
ret
ljmp
push
stc
fstpl
lcall
das
and
push
mov
xchg
dec
jns
aad
iret
dec
outsl
xor
mov
ret
cmpsl
xchg
mov
insb
dec
push
jmp
in
stos
jl
push
xchg
ret
jae
gs
mov
xlat
loope
fmuls
fmull
xor
inc
shlb
test
push
xor
dec
loopne
cltd
fbld
lods
mov
neg
mov
adc
fwait
jne
mov
test
loop
loop
pop
xchg
add
mov
jle
aaa
mov
divb
mov
xor
lds
mov
sub
das
push
lods
add
mov
pushf
repz
aad
cli
jmp
fisttpll
or
mov
mov
push
mov
cmp
sub
mov
adc
dec
mov
inc
xchg
loopne
push
add
jg
add
std
into
or
push
mov
push
mov
mov
pop
xor
enter
xor
fsub
pop
sbb
push
imul
rorl
imul
and
mov
popa
aam
stos
aam
and
clc
loope
lods
pop
shrb
insl
sahf
sub
push
push
sbb
xlat
adc
xchg
or
or
mov
push
fucom
imul
mov
aas
in
jge
stos
out
push
in
jmp
pop
lea
dec
movl
mov
insb
add
ds
xchg
sbb
mov
mov
lahf
enterw
loopne
sbb
sbb
je
cmp
or
hlt
mov
mov
aad
in
mov
mov
aas
test
ret
mov
int
mov
pop
push
jbe
aas
sti
das
bound
sahf
push
cld
push
dec
xchg
and
cmp
sahf
push
test
aad
scas
mov
push
decl
sub
and
inc
adc
notl
xor
sahf
mov
cld
iret
or
dec
push
fnstsw
fcmovnbe
scas
add
jg
and
xchg
xchg
lods
cmp
jg
dec
mov
pop
test
adc
inc
or
fidivs
mov
fstpl
jl
push
fsubrs
stos
push
in
scas
fstps
push
fists
cmpsb
lds
out
dec
ljmp
iret
pop
adc
dec
push
push
fucom
pop
xor
xchg
clc
sbb
jb
add
sbb
ljmp
jne
pop
adc
inc
or
ret
lret
add
xchg
jae
insb
and
dec
fistpl
in
push
movsb
inc
xor
push
jle
sub
sbb
subl
mov
push
stos
pushf
jg
fdivl
pop
rolb
mov
lahf
and
aas
mov
je
jp
imul
mov
pusha
jl
hlt
test
push
fwait
push
loopne
dec
mulb
xchg
fstps
cld
sahf
jo
push
adc
xor
fcomp
ret
add
push
mov
addr16
xchg
push
loope
dec
ds
lcall
mov
and
pop
dec
push
push
xlat
es
pop
scas
add
sub
divb
jne
mov
or
xchg
into
xchg
xchg
lahf
fisttpl
jns
insl
faddp
mov
xchg
pop
cmp
sti
inc
pop
mov
pop
dec
lods
movsbl
movsl
lock
out
mov
outsl
test
sarl
repz
aas
arpl
pop
cmp
push
or
xchg
inc
push
mov
or
fnsave
sub
jo
stos
fnsave
neg
cmp
xor
jno
out
cwtl
sub
imul
adc
add
push
lea
or
les
pop
sbbl
lea
leave
faddl
lcall
fbld
stc
mov
ret
or
popa
test
xchg
pop
xchg
out
std
fisttpl
cmpl
mov
es
stos
cli
lds
sub
cli
insl
and
out
js
mov
flds
movsl
mov
cli
loopne
fs
xor
sarb
or
xor
or
insb
cmp
xor
lahf
adc
mov
jno
outsl
das
xchg
cltd
insl
into
and
hlt
movsb
lcall
aaa
mov
cli
xchg
sbb
sub
addr16
aas
dec
cmpsl
mov
jecxz
leave
and
imul
xchg
cmpsl
stos
stos
gs
mov
xchg
in
xchg
cmp
loop
mov
xchg
lods
jns
repz
xor
hlt
add
add
je
mov
cwtl
sub
xchg
sub
sbb
cmp
fwait
cmp
fcomi
mov
pop
mov
xchg
decb
sub
mov
sbb
sbbb
xchg
rcll
xor
cwtl
mov
mov
mov
sbb
jg
ss
and
fldcw
inc
movsb
pop
jbe
sbb
data16
repnz
jle,pn
aas
cltd
es
sti
inc
cmpsb
mov
or
jp
loop
jnp
loop
shrl
loope
fidivrl
je
das
jbe
addr16
sbb
pop
push
push
cmp
rcrb
addr16
lret
jmp
add
imul
jo
mov
loope
lock
pop
in
mov
movsb
aam
shlb
hlt
inc
out
sbb
leave
loope
xor
dec
add
or
pop
pop
xor
aam
mov
dec
pop
sar
ret
xor
or
sti
ljmp
inc
enter
popa
push
mov
outsb
mov
js
xchg
cmc
lahf
pop
js
scas
sbbl
jl
push
lret
pop
pop
jle
mov
mov
xor
jnp
cmp
int3
dec
cmp
jg
pop
movsl
mov
popa
loopne
sbb
mov
mov
cld
fdivs
repnz
adc
test
cmpsb
or
fwait
xor
mov
mov
int
sbb
or
test
fcmovnbe
negl
scas
out
inc
insb
lds
xchg
mov
cmp
sub
mov
push
jecxz
outsb
xlat
fmuls
pop
loope
jmp
mov
mov
cmp
cmpsl
push
xlat
push
gs
lea
push
adc
adc
in
jecxz
pop
jl
js
push
cmp
xor
insl
adc
xchg
roll
aas
cmpsb
out
and
jg
mov
int3
cli
mov
xchg
repnz
jg
push
xor
lea
test
dec
arpl
push
fs
addl
pusha
flds
cmpsb
in
xlat
fnstsw
lods
xor
xor
pop
loopne
sub
xchg
sti
push
mov
sub
lods
jl
inc
pop
or
xchg
rorb
jecxz
fisubl
enter
mov
mov
sbb
and
loop
mov
mov
jp
daa
push
mov
and
pop
in
cli
nop
mov
sbb
stos
jg
enter
jns
nop
clc
mov
dec
or
popf
push
adc
jb
mov
out
push
aam
es
ja
not
push
test
mov
sarb
push
jge
jle
push
mov
call
lea
ss
xorb
pusha
cs
mov
xor
jmp
dec
mov
popf
gs
shlb
loopne
mov
jmp
dec
xor
or
cmp
ret
rolb
out
mov
inc
mov
mov
add
inc
xchg
add
pop
sub
cmpsl
testl
cmp
xchg
push
sub
popf
ret
jl
ret
aas
inc
hlt
jnp
test
cmpsl
in
nop
sub
mov
pop
loope
iret
mov
shlb
pop
adc
add
sbb
imul
inc
cmpsb
popa
sarl
xor
cli
rcl
inc
nop
sub
mov
pushf
cmp
xchg
dec
bound
push
xor
aam
fiadds
lret
pushf
les
test
mov
pop
rcll
mov
sbb
rol
or
mov
push
jne
jo
xchg
aas
sysexit
pop
push
or
and
xabort
ljmp
dec
push
inc
pop
xchg
mov
bound
dec
cmp
dec
jb
call
outsb
cmp
out
data16
cwtl
mov
jl
and
outsl
jns
jp
and
imul
pop
cmp
fwait
aam
les
ss
test
stc
in
movsb
or
mov
sbb
adc
push
ret
test
or
repz
or
cmpl
sub
jle
push
aaa
das
dec
sbb
frstor
or
pop
je
in
movsl
outsl
ljmp
mov
push
dec
inc
aaa
faddp
imul
xchg
push
adc
xchg
fists
loopne
lds
out
daa
mov
adc
int3
mov
cmp
push
ja
cmp
loop
js
mov
sbb
cwtl
arpl
movsl
popf
test
fistl
divb
xchg
and
jecxz
in
rolb
pop
adc
pop
jb
pop
aad
fld
mov
std
sahf
insl
rcrl
xchg
jg
push
lock
xchg
fisubrs
into
enter
arpl
pop
mov
cli
pop
add
pop
ds
jp
adcb
imul
xor
ljmp
add
mov
gs
xor
xor
iret
scas
or
daa
mov
cmp
pop
rorb
push
sarb
es
ds
sbb
imul
or
ret
pop
or
push
bound
outsl
cld
out
mov
adcl
mov
rolb
fadds
mov
test
mov
cmp
jno
fs
fldenv
mov
add
cld
cld
aam
aam
sti
aaa
dec
mov
pop
mov
sahf
cmp
scas
sub
add
call
jecxz
sub
inc
xchg
adc
mov
jge
sarl
cmc
adc
sbb
loope
pop
pushf
jne
lods
ss
push
fdivs
inc
jb
mov
pop
outsb
mov
push
mov
and
mov
les
sub
mov
shrl
mov
shlb
xchg
or
cmp
clc
dec
pop
cmp
test
xor
insl
xor
sub
iret
in
sub
adc
mov
jecxz
gs
ret
mov
mov
sub
jae
fmull
nop
je
mov
sbb
arpl
add
mov
dec
scas
rclb
test
in
leave
jge
das
lret
scas
aas
sub
popf
cli
out
lods
xchg
cmp
and
add
sub
mov
dec
pop
enter
enter
scas
xor
xchg
shl
ficomps
inc
adc
dec
cwtl
adc
frstor
add
lahf
cltd
jmp
bound
and
cmp
fmuls
xchg
push
cmp
out
ret
lret
outsl
mulb
fldcw
dec
mov
mov
xor
inc
pop
gs
mov
enter
lahf
xor
aam
movsb
adc
fwait
ljmp
daa
push
test
sbb
add
mov
notl
int3
add
lods
popf
sub
sahf
mov
pop
les
icebp
pop
mov
xor
std
or
in
inc
xor
mov
dec
je
dec
inc
jp
rcll
xchg
and
dec
mov
out
notl
mov
add
add
insb
inc
daa
jnp
dec
aam
clc
ljmp
pop
pusha
push
sub
sub
leave
adc
and
stos
adc
mov
dec
add
into
push
test
aad
aad
cmp
sbb
cmp
push
stc
mov
ret
adc
jge
or
scas
sarb
jmp
or
dec
call
arpl
jbe
addl
repz
add
lock
orl
adcb
shl
cmp
stc
test
sbb
aam
mov
lcall
repz
mov
xchg
sti
push
filds
pop
xor
push
ret
pop
cmc
icebp
cmp
sub
in
mov
adc
sbbb
lret
or
or
mov
mov
testb
das
push
scas
enter
dec
jmp
push
rep
mov
inc
jle
and
movsb
sub
or
push
repnz
mov
sub
pop
fidivs
dec
in
movsb
icebp
shrb
mov
and
dec
fidivl
jnp
sbb
xor
push
pop
cmpsl
xchg
push
fisubs
sbb
inc
push
xchg
fwait
adc
or
inc
loop
mov
test
or
add
pop
cmp
mov
inc
imul
in
or
mov
and
push
test
pop
adc
loop
idivl
ja
shl
daa
out
push
add
movsb
dec
repz
and
sub
pop
jns
call
jmp
dec
out
je
pushf
add
jbe
ss
xor
lds
aas
test
dec
cli
mov
xchg
mov
movsb
mov
ret
mov
xor
mov
repz
xlat
scas
push
fcmovb
ret
ds
fdiv
fldcw
mov
ret
adc
and
push
sbb
cmp
cmp
jne
lods
cmp
shl
and
orb
mov
add
cltd
add
mov
aam
or
outsb
notl
cmc
lret
cs
xor
dec
mov
lock
movsb
jmp
xchg
push
sub
sbb
dec
movsb
nop
sub
pop
mov
and
fs
jg
lods
lcall
pop
and
xlat
lods
fdiv
call
daa
pusha
dec
push
inc
push
add
mov
mov
fistl
adc
mov
fidivs
inc
or
fldcw
rcrl
lods
lcall
mov
xchg
push
cld
bound
sbb
lahf
xor
sbb
ss
mov
xor
jecxz
out
mov
cli
add
fisubrl
jbe
aam
in
jbe
aad
adc
pop
inc
insl
imul
push
lahf
das
fcmovb
fnstenv
xchg
fbld
or
sub
jecxz
les
icebp
mov
adc
data16
aas
sub
outsb
xchg
test
pusha
adc
pushf
mov
mov
sbb
cltd
cmp
pop
push
andl
and
faddp
adc
inc
in
and
out
dec
sahf
loope
outsb
xchg
mov
outsl
mov
lcall
push
xchg
test
fwait
mov
fcoms
xchg
dec
test
ret
popa
cmp
popf
mov
fistps
xor
test
or
pmulhw
xchg
and
push
cmp
mov
fcoml
cmp
or
sbb
shll
cs
or
dec
pop
mov
daa
jg
out
call
notl
mov
and
push
mov
and
stc
pop
fldcw
dec
lods
jne
push
mov
das
cmp
test
loop
or
xchg
shlb
test
or
cmp
lods
xor
lret
sub
test
imul
lret
mov
mov
in
push
sub
xchg
mov
lods
mov
inc
call
in
ss
mov
pop
jp,pn
xchg
lods
icebp
lcall
pushl
sub
fisttpll
pushf
aaa
jae
push
cs
fcompl
push
mov
sahf
cltd
pop
xor
ret
repnz
sub
sub
mov
jne
std
pop
xchg
fisttpl
dec
enter
sbb
leave
adc
adc
xchg
push
mov
test
lret
xchg
and
adc
xor
mov
ret
or
mov
shrb
cmp
or
repz
or
imul
stos
int3
sub
ret
addr16
and
xchg
cmpsb
repz
test
cli
mov
out
ret
xor
ds
mov
int
xchg
mov
loope
push
push
pop
test
int3
jle,pn
mov
pop
push
inc
inc
cld
aad
out
ds
and
jmp
stc
mov
sti
pop
inc
adc
lods
mull
xor
xor
movsl
sbb
out
outsb
push
outsl
ljmp
aaa
push
in
pushf
out
imul
sub
mov
mov
jle
xchg
out
jns
push
sub
int
push
ds
and
cltd
ds
repnz
xchg
pop
addl
add
or
fstps
mov
call
dec
lret
shll
lahf
mov
inc
cltd
out
inc
xor
cwtl
mov
push
or
loope
cmp
fsubrl
xchg
les
clc
xchg
xchg
aaa
pop
mov
lcall
add
xchg
push
adc
out
pop
push
pop
movsl
pusha
or
pop
add
inc
in
testl
cmp
mov
inc
ret
jle
notl
mov
lret
fcmovbe
inc
mov
vfmsubaddpd
arpl
inc
sbb
imul
std
pop
cmpsl
jmp
xor
das
call
pop
repnz
adc
mov
hlt
insb
sub
mov
xchg
scas
push
cmp
shrl
outsb
cmpsb
jl
push
sbb
std
push
dec
sti
flds
bound
pop
inc
xor
adc
pop
sbb
push
ja
cmpsl
sub
out
sub
cld
pop
loopne
mov
pop
pushf
sbb
pop
loopne
push
andl
mov
push
and
cmp
lret
sub
loop
aad
pop
jp
jmp
movsb
jo
mov
jae
fs
mov
stos
clc
add
mov
bound
pop
out
mov
inc
lahf
ljmp
aad
adc
enter
jno
sbbl
and
cmp
sbb
dec
stc
ja
jge
sahf
xor
les
cli
stos
std
push
jns
xchg
dec
stos
cmp
add
inc
into
cmp
call
mov
jle
sti
int3
jg
into
incb
ljmp
test
lret
mov
sub
dec
in
jmp
sub
fsubs
call
iret
clc
jecxz
sub
flds
int3
xor
mov
push
pop
loope
iret
mov
push
test
imul
jmp
inc
adc
pmaxub
xor
rolb
mov
fwait
dec
outsl
add
aam
or
mov
pusha
push
xlat
jbe
dec
xchg
and
sbb
cmc
aas
lcall
or
or
xchg
aam
and
pop
cltd
into
lea
pop
movsl
iret
stos
fcmovu
mov
sbb
sarb
dec
negl
iret
rolb
nop
cmp
inc
mov
lds
sbb
inc
pop
push
mov
pop
xchg
mov
inc
jbe
xchg
push
std
sar
cmp
in
xor
xchg
arpl
clc
push
test
mov
inc
out
mov
jns
test
pop
or
popa
or
mov
out
push
push
jo
sbb
shrb
push
ret
or
sub
lret
sbb
cmp
adc
push
xchg
pop
xor
adc
sarl
sub
divps
sahf
sub
test
adc
sub
pop
sbb
mov
repnz
lock
ss
negb
out
sub
xchg
jmp
mov
imul
push
or
mov
iret
movsl
aad
push
mov
lock
lods
in
adc
hlt
imul
cmpl
inc
jo
xor
sbb
lahf
mov
dec
test
jno
sbb
mov
or
or
pop
jmp
dec
repz
sub
lret
push
aaa
jl
xchg
add
cwtl
mov
mov
cmp
jl
mov
pop
cmp
cmp
aam
ficoms
ljmp
hlt
enter
fucom
mov
ja
cli
rcrl
call
push
mov
out
icebp
xor
and
cmc
inc
inc
mov
mov
cmpsl
jmp
fimuls
pop
cmc
jae
cltd
jmp
cmp
adc
test
and
idivb
into
sbb
negb
mov
xchg
mov
sbb
xor
movsb
imul
fstps
mov
pushf
jecxz
xchg
xor
scas
subb
orl
in
shrl
das
in
adc
je
fistps
fsubr
xchg
jns
pushf
ljmp
adc
xor
dec
cld
outsl
push
xchg
bnd
test
mov
les
outsl
sub
jmp
or
cwtl
cmp
mov
sub
jno
push
test
outsl
cs
lret
cs
movsl
mov
xchg
pop
addr16
insb
or
leave
movsb
cmp
dec
mov
xchg
cltd
inc
mov
add
out
xor
jns
xchg
fistpl
lock
mov
xchg
int3
stc
xchg
in
push
stc
mov
xchg
jb
xchg
fmuls
lcall
int3
add
add
cmp
outsb
mov
decl
jnp
outsb
xor
cmpb
shlb
fistl
in
and
aad
clc
push
mov
es
mov
rcrl
fldl
pop
inc
stc
mull
insb
add
mov
push
cltd
lock
in
es
das
cwtl
nop
repnz
cmc
push
orb
bnd
addr16
fidivl
jl
jl
pop
jb
hlt
sub
cmp
xchg
xor
loope
push
cmp
jae
or
test
aam
mov
jbe
outsb
in
int
out
daa
test
hlt
xchg
sbb
dec
in
jge
scas
aad
add
iret
xor
lods
and
pop
push
shll
mov
cmpl
mov
int3
jae
push
testl
sbb
sbb
fwait
mov
fldenv
out
cmp
fs
fidivrl
aas
push
xor
add
and
mov
lds
aad
or
or
push
imul
aad
mov
fistps
ficoml
es
pop
pop
adcb
pop
popf
jge
test
mov
cmp
stc
or
inc
loop
test
ljmp
shr
insb
cmpsb
sbb
clc
call
xor
test
ja
mov
sbb
xchg
sub
push
adcb
stos
push
push
sbb
js
movsb
lahf
movsb
mov
pop
hlt
sub
or
in
fwait
pop
pop
push
mov
xchg
cltd
scas
dec
popf
xchg
test
outsb
int
imul
les
lret
lahf
leave
mov
iret
cwtl
or
inc
loop
inc
js
cmp
add
divb
or
outsb
aas
ss
or
shl
pushf
push
mov
add
and
jmp
jg
in
pushf
push
pop
data16
pop
mov
pop
test
and
sbb
pop
or
inc
mov
shlb
ljmp
insb
cmpsl
dec
loope
jne
inc
scas
cmpl
pusha
daa
iret
fistpll
mov
adc
pop
mov
lret
clc
dec
adc
cmpb
insl
or
mov
das
std
sbbl
filds
insl
xchg
push
mov
lds
dec
lcall
ds
ret
loopne
mov
fdivrl
sub
sbb
outsl
xorb
dec
push
and
mov
roll
lret
cmpxchg
sub
cli
shl
mov
sbb
xor
inc
loop
in
shrl
dec
push
cmp
aad
out
pop
push
popf
in
notb
test
popf
mov
out
fadds
mov
mov
mov
jns
xchg
loopne
mov
cld
mov
ds
subb
fwait
cmp
leave
aam
pop
xchg
xchg
mov
push
pop
add
inc
and
lret
nop
movsb
inc
lahf
inc
fisttpll
xor
or
xchg
jg
fnsave
cmc
jg
sbb
gs
mov
scas
jno
jl
pop
shlb
dec
add
cmp
jno
mov
repnz
xchg
fisttpll
mov
mov
and
pop
scas
push
mov
jo
ret
fidivs
xchg
push
pop
lods
cmp
pop
imul
ljmp
sarl
mov
loop
mov
ss
gs
inc
pop
sbb
jns
popl
or
addb
icebp
icebp
es
popf
adc
push
lock
lahf
std
sbb
mov
es
cld
jo
pop
xlat
clc
push
sti
cltd
lcall
imul
push
dec
add
jp
jb
stos
and
add
or
ret
mov
sahf
xchg
out
sbb
leave
js
jge
cmpsl
jb
push
stos
mov
sbb
incl
scas
fisubl
mov
ja
sub
je
adc
mov
cmpsb
movsl
test
xchg
stos
xchg
jae
stos
movsb
jbe
pushf
iret
jns
jle
sbb
adc
imulb
adc
out
xchg
dec
jecxz
adc
pop
std
loopne
lret
in
add
scas
loopne
mov
mov
stos
inc
sub
mov
stc
pop
arpl
xchg
or
in
adc
push
inc
ja
push
imul
mov
daa
loopne
pop
test
xor
or
jbe
ss
sub
outsl
dec
test
leave
out
mov
and
dec
or
cmc
subl
pop
sub
inc
iret
adc
cmp
lahf
or
rclb
adc
jp
std
sub
mov
or
sub
mov
jnp
leave
in
xchg
inc
and
sbb
sub
push
adc
mov
sub
das
pop
mov
jbe
notb
das
lahf
jmp
pop
or
popa
cmpsl
mov
mov
mov
lock
or
ja
cmp
inc
sbb
mov
es
sbb
sub
addr16
test
lahf
cli
mov
mov
das
sarl
mov
jbe
mov
xchg
gs
xor
inc
push
mov
int
mov
xlat
or
mov
mov
dec
jmp
dec
sbb
les
adc
int
sub
jmp
and
les
imul
inc
and
jo
ljmp
mov
xchg
or
or
aad
inc
adc
pushf
pop
cmc
imul
xor
hlt
test
mov
in
cltd
incb
icebp
data16
insl
lret
rcll
sub
stc
jne
sbb
inc
inc
lcall
cmc
data16
push
xorb
or
inc
mov
inc
push
inc
jb
or
mov
or
daa
jl
decb
sbb
or
add
or
outsl
in
xchg
rcr
jmp
mov
out
mov
imull
mov
mov
mov
push
popf
cwtl
sti
xchg
inc
int
lods
xchg
dec
pusha
push
mov
sub
rorl
cmpsb
das
popa
push
jge
cli
push
std
pushf
int3
pop
mov
adc
jo
add
lods
data16
fnsave
sub
pop
lret
imul
lret
orb
cmp
pop
mov
fildl
pop
clc
inc
inc
arpl
insb
xchg
jo
cmp
jmp
ss
or
insl
jg
fs
sahf
std
mov
mov
leave
or
or
xor
pop
mov
ret
nop
cld
sbb
loope
mov
cmp
add
imul
xor
inc
repnz
fwait
lds
sbb
dec
mov
pop
mov
dec
xchg
fsubs
or
adcl
sti
jne
mov
xchg
jno
movsl
mov
daa
rorl
or
nop
hlt
push
fistps
sahf
sub
lock
adc
incb
test
mov
out
mov
add
cwtl
loop
lock
xlat
gs
xchg
push
mov
add
jmp
and
mov
ss
addr16
scas
nop
sbb
jle
pop
and
fwait
das
stc
fwait
loop
sbb
fiaddl
and
js
and
outsb
xlat
nop
mov
out
stc
loop
pop
push
inc
mov
imul
sub
fs
sub
movsl
jae
outsl
stos
mov
sbbb
int3
or
movsb
jg
adc
mov
nop
push
or
push
leave
lds
pop
jmp
test
insl
xchg
leave
xor
bound
clc
jp
dec
xor
adc
loopne
out
popf
xchg
xor
push
or
xchg
sbb
push
pop
aaa
push
enter
mov
or
scas
xchg
mov
stc
cmp
sub
test
imul
push
loop
mov
hlt
xchg
xchg
les
xchg
test
cmp
into
pop
lret
mov
cs
xchg
rolb
add
aam
movsl
pop
fwait
push
mov
test
roll
mov
lock
pop
dec
mov
stc
ret
mov
fwait
mov
push
adc
shrb
dec
aam
ljmp
mov
addr16
dec
sbb
push
xchg
adcl
lcall
shrl
xor
mov
sub
jbe
dec
shlb
cwtl
cld
leave
stc
mov
sahf
xor
jno
lret
xchg
mov
inc
lcall
add
xor
scas
pop
loopne
ds
push
mov
mov
rcrl
and
add
inc
decb
inc
inc
inc
js
outsb
adc
lds
fcom
xchg
jae
cmp
jnp
push
jge
adc
mov
inc
sub
pop
push
in
hlt
cmpsb
xchg
xchg
push
push
out
ja
enter
out
push
xchg
sarl
xchg
push
fcmovnbe
or
jl
inc
js
popa
icebp
out
js
lods
push
mov
lods
rcll
dec
ljmp
pop
pushf
lods
lds
es
add
inc
mov
scas
mov
pop
dec
test
in
jecxz
xchg
mov
or
xor
sub
out
faddp
loope
and
out
mull
sub
movsl
mov
es
adc
cs
inc
mov
out
inc
pop
rcll
add
inc
mov
push
push
or
enter
rclb
adc
pop
mov
pushf
dec
into
add
ret
movsb
jp
pop
adc
das
lahf
adc
dec
add
lret
pop
pop
clc
enter
pop
cltd
ja
cmpsb
addr16
cmp
movsb
mov
test
insb
div
notb
jnp
adc
inc
mov
icebp
loope
cmpsb
mov
add
xchg
test
xchg
aas
and
test
popa
push
xchg
pop
pop
ja
filds
push
sarl
das
lret
pop
ljmp
push
jecxz
std
je
pop
mov
lcall
cli
or
icebp
mov
pop
xchg
cmp
add
inc
mov
cmpsb
push
loopne
cmp
jnp
jmp
or
pop
adc
sbb
ret
pop
push
test
fdivs
scas
into
popf
cmpsl
pop
pop
add
push
mov
dec
and
call
cmc
adc
jnp
mov
sbb
dec
or
scas
repnz
repnz
popf
or
out
fstl
movsl
push
aaa
ret
add
shlb
adc
jge
bnd
mov
sbb
cwtl
add
je
dec
push
and
xchg
testl
push
sbb
gs
xchg
xlat
dec
sbb
in
lea
in
adc
sti
push
cmp
out
daa
bound
pushf
mov
and
popf
mov
scas
mov
stos
sbbl
in
ss
mov
pop
jbe
into
out
push
xchg
mov
pop
mov
pop
xor
dec
test
add
cmp
cmp
shll
das
xchg
mov
cs
stos
push
or
mov
sub
and
sbb
mov
cld
or
dec
jmp
sbb
lea
aad
jl
mov
pop
ljmp
out
mov
add
lea
inc
pop
in
and
pop
ja
insb
add
test
lret
int3
lahf
lods
shrb
insl
pusha
repz
mov
jg
xor
fwait
int3
and
push
jmp
lahf
xlat
cmp
sub
cltd
mov
ret
mov
in
jecxz
in
xchg
jbe
fs
nop
or
xor
and
adc
fs
jnp
mov
data16
cltd
call
mov
outsb
inc
ss
xchg
mov
cmp
bound
test
lods
cltd
into
clc
xchg
push
scas
out
fxch
inc
mov
pop
sahf
xchg
xor
pushf
cmp
sbb
insl
sub
pop
jecxz
sub
cwtl
or
mov
ret
push
sbb
pop
fidivl
ret
popf
jle
mov
jnp
mov
not
mov
cmp
sub
push
mov
movsb
sbb
pusha
sbb
cmpsl
lahf
push
les
inc
clc
test
rorl
fs
repnz
and
push
sbb
arpl
test
push
fisttps
mov
cmpsl
and
leave
push
cmc
push
cmpsl
dec
jmp
cmp
dec
decb
in
mov
in
mov
sbb
xchg
cmp
std
fs
out
andl
push
push
push
stc
int3
xchg
dec
xchg
lds
ret
lret
cmp
test
insb
cmp
xchg
jnp
outsl
into
les
fldcw
cmpsb
mov
push
adc
adc
sub
outsl
aad
gs
fisttpll
inc
ss
sub
add
dec
fistps
add
clc
test
dec
jl
lock
ljmp
popa
mov
pop
pushf
push
sub
enter
jle
xchg
pusha
je
insl
lret
into
rolb
mov
adc
mov
sahf
in
jae
push
cmp
roll
pop
dec
dec
pushf
imulb
add
test
in
repz
add
fimull
and
fwait
gs
out
cmp
mov
sub
jno
je
pop
xor
or
cmp
jnp
outsb
inc
ret
stos
mov
fucomp
dec
mov
imul
add
adc
sbb
mov
adc
scas
mov
adc
mov
lcall
scas
push
adc
push
xchg
inc
nop
push
loope
push
inc
push
mov
int3
hlt
pop
push
add
fistpl
add
cld
ja
push
mov
ret
or
add
icebp
rolb
push
push
adc
push
push
mov
add
rorl
es
xor
inc
cmp
or
inc
ds
testb
clc
mov
dec
and
or
cltd
jo
jp
cmp
or
or
dec
addr16
adc
sti
dec
ja
add
push
sub
int
push
lret
lea
sarl
xchg
stos
andl
push
mov
pop
xchg
add
cmp
out
loop
fiaddl
lods
sbb
outsl
and
out
shll
mov
lret
inc
pop
sub
jno
add
and
hlt
hlt
push
pop
add
mov
pop
xchg
mov
push
les
popf
sub
ds
and
arpl
adc
add
jl
push
xchg
mov
mov
sub
pop
lds
mov
cmpl
rcrb
cmp
pop
adc
call
sub
jb
cld
icebp
in
cmc
sub
loop
inc
jne
jecxz
cmp
lcall
add
popa
dec
add
or
pop
cltd
ja
cwtl
out
int
fdivl
mov
push
inc
xchg
lds
dec
push
mov
mov
lock
ljmp
jb,pt
cmpsl
jb
aad
inc
push
push
mov
jmp
jmp
stos
or
movsl
test
ret
jl
addl
dec
pop
or
lods
jo
or
lea
test
xor
mov
rclb
jbe
sti
mov
fiadds
jno
add
jae
insl
dec
mov
dec
mov
jle
int
jae
loope
mov
dec
into
inc
cmp
movsb
xchg
mov
das
push
or
sbb
scas
pop
aas
enter
xor
jae
sbb
leave
jl
jno
ja
scas
cmp
insb
jne
dec
clc
dec
add
inc
pop
jp
lds
ret
adc
mov
jnp
mov
repz
sub
mov
jo
pop
mov
in
xchg
mov
pushf
and
stos
movsl
mov
fdiv
dec
ljmp
push
push
insl
cmp
fs
lret
xchg
leave
ret
outsb
and
addb
inc
arpl
xchg
iret
lret
pop
add
lret
dec
scas
or
cmp
lcall
leave
sub
icebp
dec
pushf
lret
js
popa
fldcw
out
or
inc
je
fbstp
jnp
jmp
mov
pop
data16
mov
addr16
sbb
cld
repnz
lds
jb
lea
xor
adc
mov
data16
addb
xchg
mov
movsb
fs
sbb
mov
pop
fisttps
lret
jnp
pop
and
pop
xchg
idivb
daa
jbe
sbb
aad
pop
cmp
testl
movsl
test
xchg
xchg
cmc
add
stos
mov
pushf
arpl
push
mov
test
pop
cmp
mov
clc
inc
cmp
fistps
pop
sub
sbb
icebp
sub
push
inc
std
xor
stc
add
or
aad
subl
out
adc
pushf
ljmp
mov
adc
mov
inc
sub
aaa
lret
cli
addr16
mov
or
test
popf
and
fs
stos
outsb
adc
sbb
outsb
lcall
cmpsb
fsubrl
cltd
bound
stos
shl
sbb
les
or
add
jge
add
pop
int3
cwtl
or
xor
lods
inc
jno
clc
jae
sub
sarl
std
adcl
sbb
dec
inc
mov
jnp
movsl
adc
xlat
mov
cmp
pop
in
mov
mov
pop
out
inc
rcrl
pop
fldt
and
jl
pop
sbb
jns
push
gs
repnz
lcall
lcall
xchg
movsb
push
iret
bound
cmpsl
out
pop
cld
mov
les
mov
or
push
jo
ss
inc
pop
xchg
and
add
cmp
mov
sub
lods
lret
cs
ss
sbb
sbb
xchg
fsts
jg
push
pop
emms
pop
add
gs
ret
fs
pop
ret
and
xor
xchg
push
sbb
mov
xchg
push
pop
xchg
dec
pop
fmuls
cs
xor
lds
xlat
jbe
nop
incb
leave
xor
or
insl
lahf
psraw
cmp
stos
xor
ret
inc
ret
xorl
xchg
jnp
mov
pop
out
push
fnsave
add
jb
pop
pop
jb
call
scas
xchg
push
add
mov
push
lahf
dec
inc
repnz
pushf
les
add
sbb
out
mov
ficoml
jge
push
out
lahf
fwait
xchg
inc
rorl
cmp
iret
dec
ret
pop
cmp
ja
out
and
out
fs
xor
mov
shl
push
cmpsl
mov
mov
paddq
adc
jecxz
mov
fbstp
xchg
inc
push
pop
xchg
dec
mov
adc
push
rcrl
sbb
push
andnps
fdivs
enter
sub
pop
pop
fcmovne
call
lcall
lods
pop
rcll
cltd
sar
xor
mov
push
push
ret
cmp
inc
xchg
jp
mov
push
jb
cmp
jle
xchg
xchg
insb
lods
adc
lret
jb
xor
push
xlat
inc
addr16
into
pop
pop
mov
sub
mov
pushw
pop
rcrl
loope
popa
jp
movsb
pushf
sahf
ret
pop
push
pop
pop
push
adc
xor
cmpsb
ss
push
fwait
lods
outsl
fwait
std
pop
movsb
ficomps
bound
test
pop
pushf
mov
dec
jne
cmpsl
outsl
sti
pop
imul
rcl
add
xor
in
push
popa
push
in
or
daa
shl
mov
imul
inc
repz
lea
add
add
push
and
nop
and
mov
jmp
push
or
imul
mov
insb
das
lea
int3
rorl
aam
mov
inc
movsb
inc
push
sbb
test
jge
push
sbb
mov
adc
cli
jl
jno
jnp
dec
dec
or
sbb
sahf
inc
push
pop
mov
mov
mov
jmp
push
sbbl
add
sub
addr16
fmull
std
mov
inc
pop
add
inc
lret
lahf
sub
mov
jbe
es
mov
sbb
in
push
fildll
dec
cmp
inc
inc
fadd
jo
ret
xchg
fsts
add
fs
dec
ret
cltd
lea
je
pop
add
dec
sbb
inc
jp
pop
sbb
mov
sbbl
lret
iret
or
ljmp
out
scas
addl
sbb
and
cmc
mov
adc
mov
push
inc
inc
push
push
jge
repnz
xor
sub
cmp
push
dec
jge
mov
std
cmpsb
jno
xor
fstp
inc
les
outsl
pop
mov
daa
xchg
mov
test
popf
cmp
push
push
mov
mov
xchg
mov
fucom
out
rcr
mov
jae
xor
pop
add
rolb
notl
mov
adc
xorl
mov
pop
xor
lock
es
idiv
sbb
mov
insb
cmpsb
add
insl
sbb
dec
inc
mov
and
mov
inc
and
mov
and
sbb
mov
lahf
sbb
jecxz
cmp
fldt
adc
test
push
jns
lock
ds
mov
adcb
adc
xlat
sub
or
and
cmpsl
cmp
cmp
call
loope
push
movl
fisubrs
pop
lret
xchg
pop
fimuls
stos
ja
nop
jb
or
cmp
nop
sub
aaa
rcll
cmp
dec
rcll
or
or
dec
fnstcw
cmp
mov
icebp
maxps
lret
mov
xchg
mov
lds
div
sbb
push
inc
push
inc
or
push
stc
mov
iret
xor
dec
pusha
or
adc
clc
mov
jecxz
and
pop
cmp
lods
dec
mov
int
cmpsb
mov
aam
aad
sbb
fwait
mov
jo
inc
dec
popf
sbb
adc
jne
cwtl
jle
or
add
push
sbb
pop
or
pop
arpl
test
imul
out
lret
cli
jo
insw
enter
pop
sti
add
jno
aam
adc
xor
xchg
adc
leave
aas
push
jnp
lret
cmp
lods
bound
or
fisttps
imul
mov
movsl
cmpsl
cmp
dec
jge
xor
and
movsb
lods
in
push
inc
scas
cs
pop
iret
lret
inc
and
insl
jecxz
pop
dec
dec
jbe
jo
push
sbb
aaa
adc
pusha
xor
les
movb
inc
add
jb
lcall
loop
push
jnp
xor
lds
rcl
cld
push
add
frstor
push
je
xchg
mov
jmp
rcrb
test
lea
and
or
into
ret
pop
sub
pop
out
mov
mov
mov
or
xor
mov
xor
lret
cmpsb
fsubrp
je
lret
test
cs
repnz
cld
scas
adc
fldl
lds
lock
jne
pop
xchg
adc
adc
movsb
sbb
jno
mov
mov
or
stc
test
mov
stos
stos
mov
idivb
jmp
pop
repz
test
ja
sub
push
nop
or
jnp
into
imul
pop
fistpll
lds
cli
js
insl
adc
cmp
cmc
ja
stos
insb
or
insb
das
xlat
adc
or
pushl
movsb
andb
popa
mov
iret
cmp
setnp
in
in
and
sub
lds
out
sub
fistps
mov
jne
sbbb
std
pop
mov
fs
cwtl
pop
jp
in
or
cmp
dec
xchg
add
adcb
dec
test
ds
notl
bound
mov
fcomps
pop
push
in
jecxz
data16
fstpt
test
les
dec
jnp
call
cmp
addl
xchg
je
and
add
pop
mov
inc
bound
cli
inc
push
std
dec
insb
aam
insb
xchg
fdivl
iret
lcall
cmp
jp
cmp
pop
mov
mov
sbb
jmp
mov
mov
push
add
rcll
mov
xor
mov
cltd
out
cmp
mov
or
inc
mov
mov
push
lea
pop
dec
mov
or
cmp
dec
jp
jl
add
inc
sahf
xchg
daa
push
xchg
cmp
andb
jge
clc
cli
adc
inc
add
hlt
dec
testw
mov
aam
das
dec
cmp
mov
push
mov
pop
sub
clc
loope
insl
lcall
sub
pop
andl
jp
add
fsubl
inc
mov
fsubrs
dec
xchg
sub
movsb
inc
mov
lcall
int3
push
mov
or
xchg
xlat
push
xor
es
mov
xchg
ds
ja
xor
mov
dec
js
js
sub
mov
dec
cmpl
pop
call
and
idiv
sub
fisubs
fcoml
frstpm(287
cmp
and
cmp
movsl
sar
mov
mov
jg
mov
mov
in
sub
xchg
outsl
repnz
pop
rclb
xor
add
xchg
or
sub
sbb
pop
mov
daa
inc
rolb
mov
pop
ja
les
pop
pop
aad
sbb
jae
int3
and
jp
enter
test
jo
mov
push
mov
cmpsb
dec
dec
inc
ret
bound
std
or
ret
mov
dec
dec
mov
mov
jo
repnz
or
pop
fstl
sbb
ret
xlat
sub
nop
imul
imul
enter
xor
pop
mov
roll
in
aam
outsb
addr16
dec
decl
ds
xor
cmp
pop
jb
and
xchg
jmp
sub
xor
jp
pushw
push
roll
sbb
add
in
in
std
sarl
cmp
xor
fcompl
fcoms
and
mov
aad
jecxz
xchg
aad
in
or
jo
rorb
dec
js
xor
cmp
jnp
mov
loopew
jns
rclb
inc
add
scas
test
jns
push
fwait
imul
idivl
inc
mov
inc
in
das
popf
into
pop
or
inc
xchg
sub
push
and
push
std
push
dec
push
push
fistps
xchg
cmp
add
adc
ficoml
imul
jne
lret
push
rorl
xchg
lahf
add
test
dec
sub
inc
aam
pop
mov
not
push
ja
sti
pusha
insl
in
mov
xchg
push
inc
cmp
rolb
dec
lods
mov
xchg
lahf
call
mov
adc
int3
mov
inc
cwtl
mov
cmp
mov
mov
stos
dec
fsubs
xchg
rcll
ror
xor
xor
int3
add
testl
adc
insb
pop
pushf
cmp
and
popf
test
imul
out
inc
sub
movsb
sub
gs
out
xor
lahf
pop
out
andb
mov
dec
jbe
leave
mov
push
jecxz
pushf
mov
leave
lock
aad
leave
les
scas
inc
int3
add
stos
inc
jne
or
ret
push
mov
pop
sub
daa
popf
add
sbbl
loopne
cwtl
movsb
mov
jne
push
adc
cmp
sbb
dec
test
dec
add
jne
iret
ret
movsb
pop
inc
cwtl
fiadds
or
sub
add
mov
sub
clc
in
aad
daa
pop
aad
inc
mov
inc
adc
test
out
xor
xchg
insb
scas
popf
mov
lea
or
divb
mov
popa
ficompl
xor
ljmp
add
leave
aam
stos
sti
push
ja
rcrb
idivl
pop
outsl
imul
cmp
and
pop
fisubrl
out
jmp
clc
lods
and
pushf
cwtl
sub
mov
mov
mov
push
push
pop
and
pop
fnstenv
xor
icebp
mov
xor
mov
lret
push
ss
scas
loop
mov
repnz
insl
xor
daa
test
loopne
aaa
dec
sbbl
lahf
jle
stos
push
popf
push
and
je
mov
inc
dec
jo
pusha
sub
outsl
and
pop
xchg
mov
mov
cmpsl
outsl
ss
cs
and
push
xchg
mov
mov
mov
rcrb
mov
jmp
popa
nop
adc
jl
lcall
inc
push
cmp
in
fwait
push
stos
xchg
push
iret
xchg
mov
and
fwait
repnz
jnp
imul
aam
adc
or
inc
lods
mov
ljmp
icebp
pop
and
pop
xor
adc
xor
mov
ret
mov
adc
mov
and
bound
jl
rorl
push
clc
mov
sbb
and
stos
mov
jg
or
pop
mov
orb
pop
mov
cmpsb
add
les
sub
or
sbb
test
frstor
lcall
jge
aaa
outsb
sub
pusha
loope
xor
push
cs
push
repnz
xchg
test
push
aas
jmp
inc
ret
mov
xchg
bound
das
cmp
mov
cmpsl
and
push
shrb
cmp
js
mov
sbb
sub
mov
xor
test
jge
ret
lock
sbb
dec
dec
arpl
pop
pop
mov
pop
sarl
pop
ss
mov
sub
mov
out
nop
aaa
xor
pushf
test
dec
inc
bound
sahf
lret
jmp
fcompl
sbb
xchg
lods
push
out
loopne
fildll
xchg
nop
sbb
aam
mov
aas
xchg
out
mov
sbb
pop
std
cmp
inc
or
pop
push
rorb
pop
mov
les
lods
out
ret
call
leave
inc
lcall
jne
jae
pop
pop
lods
add
test
mov
adc
imul
in
mov
imull
sti
or
sbb
jbe
xchg
dec
sti
stos
jae
cltd
std
gs
lock
repz
and
aam
loopne
popf
fs
adc
push
fs
mov
jmp
sub
enter
pop
je
adc
rep
mov
xor
fwait
xor
sbb
bound
lret
scas
inc
mov
aad
add
andb
pop
push
in
jp
push
outsl
push
cmp
or
mov
jbe
shrb
lret
stos
lock
sbb
or
repnz
imul
rclb
ljmp
push
xlat
sub
dec
je
adc
cld
push
or
sub
pop
repnz
sbb
cmp
popa
cmc
xchg
dec
imul
push
add
std
jecxz
daa
sbb
or
shl
mov
jp
pop
push
sbb
pop
pop
xchg
dec
cmpsb
pop
shlb
add
call
xchg
cs
int
int3
fdivrs
loopne
icebp
lock
sbb
ja
push
mov
sbb
ret
das
lahf
cld
adc
movsb
and
jecxz
insb
fcmovnu
mov
jo
and
push
jae
pop
mov
outsl
pop
push
cmpsb
adc
mov
push
pop
jmp
daa
mov
xchg
mov
fcoms
es
sbb
pop
push
sti
sbb
mov
js
cmp
or
sbb
insb
add
inc
dec
jo
xchg
jns
fs
xor
sahf
mov
jg
sbb
into
push
sbb
sbb
loope
jb
xchg
add
sarb
rcrb
mov
sub
mov
pop
push
fxam
leave
nop
pop
push
mov
and
cli
shlb
cmovbe
inc
mov
adc
scas
mov
mov
xor
test
out
fstpl
mov
movsb
test
sbb
ljmp
je
in
icebp
pop
mov
adc
pop
ja
cmp
add
xor
mov
mov
out
push
fnstsw
out
pushf
adc
mov
leave
xchg
sbb
es
out
in
push
xchg
jp
mov
jle
mov
cmp
sbb
arpl
mov
popa
mov
popa
push
and
rcll
jg
push
cli
shlb
mov
movsl
xchg
xchg
and
int
dec
jl
add
aaa
popf
pop
inc
sbb
mov
loopne
mov
sub
jmp
sub
mov
adc
popa
insl
mov
pop
jae
sbb
lcall
mov
and
push
mov
sub
or
lea
or
xorb
mov
mov
mov
clc
sbb
cltd
push
dec
sbb
cli
andl
and
lds
add
aam
or
adc
jge
shl
pop
enter
fistl
stos
ja
or
xor
jecxz
jg
int
cmp
jbe
fisubrl
mov
sbb
cld
mov
dec
add
mov
insl
sub
pusha
xchg
xchg
arpl
test
jg
adc
push
sbb
leave
sarb
out
mov
mov
cmp
mov
ljmp
jecxz
push
int3
lds
xchg
js
pop
scas
cmp
pop
dec
int
xor
mov
inc
xchg
test
dec
insl
adc
jno
lea
enter
bound
pusha
jecxz
xchg
shrl
inc
dec
stos
scas
and
ror
xchg
or
add
pop
pushf
aaa
dec
sbb
xor
mov
pop
dec
nop
cmp
inc
bound
jne
mov
push
pop
jl
cli
addr16
lock
ficompl
or
shlb
jl
adcl
adc
fisttpll
dec
push
stos
fnsave
xcrypt-cfb
cmpsl
loope
push
mov
adc
ret
pop
pop
lods
clc
fsub
cmp
mov
sub
inc
adc
addr16
jecxz
insb
jnp
ret
inc
adc
clc
std
movb
dec
std
add
js
out
testb
outsl
mov
loope
lods
or
insl
inc
repnz
xor
loop
inc
add
mov
add
pop
mov
faddl
aaa
cmp
sub
out
xchg
jle
pop
sti
xor
xchg
mov
loop
cmp
popf
sahf
push
add
test
lret
xchg
rolb
adc
int3
push
and
arpl
outsl
repz
lock
fdivrl
sbb
cmp
stc
inc
sub
mov
ret
xchg
or
nop
xchg
sarb
lods
or
pop
adc
cmc
or
push
xor
dec
sarl
jp
jns
pop
out
sbb
xchg
mov
mov
test
mov
xchg
dec
mov
add
sbb
loop
jo
inc
mov
das
aas
enter
jle
and
ror
xchg
out
mov
lods
mov
dec
xor
int3
pop
adc
icebp
ss
iret
outsb
sub
ret
mov
psrld
or
mov
aad
insb
push
push
fisubrs
mov
ficompl
imul
jg
mov
popa
or
sub
call
pop
test
int
jbe
sub
inc
shrb
dec
jne
adc
jp
insb
gs
test
and
mov
sahf
test
push
mov
dec
rcll
leave
adc
out
cmp
mov
xlat
mov
cli
xchg
mov
mov
jne
ret
divb
jp
fidivs
inc
push
mov
or
and
popa
adc
sti
les
push
push
rorl
aad
cmc
push
neg
push
cmp
sahf
push
int3
xor
stos
int
push
pusha
or
sarl
mov
in
in
pop
and
inc
cmp
mov
push
mov
sub
pushf
in
adc
pusha
inc
or
and
jecxz
or
sub
test
std
push
ds
and
sub
pop
pop
inc
lods
jl
aas
mov
jo
cld
scas
xchg
clc
adc
fyl2x
cmp
inc
jl
filds
cltd
sbbb
bound
lcall
cltd
loope
rcrb
js
sti
cwtl
sbb
movsb
loope
ret
js
xlat
sub
or
les
inc
push
nop
addb
pop
out
cs
sbb
lods
jne
inc
inc
ret
mov
arpl
mov
bound
fcoml
and
cmp
and
sbb
mov
loope
clc
xchg
jle
daa
add
jecxz
sub
dec
inc
and
inc
jbe,pn
jge
pop
div
pop
rcrb
dec
roll
iret
fs
push
scas
mov
inc
xchg
dec
arpl
hlt
test
inc
push
sub
push
lret
xchg
movsb
sahf
sbb
movsb
aam
push
or
and
cltd
mov
in
les
ret
cli
ds
leave
lcall
shll
in
loop
xor
xchg
cmp
mov
xor
inc
js
mov
andb
push
or
test
sahf
jg
clc
jbe
push
cmp
das
add
push
fstl
rclb
fs
jb
sbb
movsl
jnp
in
mov
push
lods
push
jge
sub
dec
cmpsb
dec
es
scas
fcmovbe
scas
ljmp
fcomip
or
mov
test
sbb
pop
pop
inc
mov
pop
mov
in
dec
andl
iret
ss
hlt
das
leave
fistl
sahf
jp
cmpsl
inc
psubb
cs
enter
sub
dec
in
push
push
ja
mov
cmp
js
pop
jbe,pn
dec
scas
scas
in
xchg
loopne
adc
scas
andb
cltd
cmpsb
ja
rcrb
and
adc
sahf
inc
dec
pusha
jno
xchg
mov
xchg
jno
js
stos
hlt
inc
ret
das
repnz
inc
mov
xor
cmp
xchg
pop
add
xor
popf
and
and
test
xchg
fcoml
insl
mov
xlat
test
cltd
xor
and
or
lcall
and
aaa
and
sub
and
js
shll
mov
xchg
mov
push
sbbl
pop
stc
xor
arpl
fadds
cli
clc
add
test
mov
mov
jbe
lret
inc
out
push
bound
cli
mov
ja
dec
insl
mov
adc
arpl
in
sub
es
stc
shll
jns
dec
repz
pop
insl
movsb
xchg
cmp
sbb
shll
pop
xor
mov
mov
and
scas
mov
out
add
pop
loope
scas
inc
xlat
sub
ljmp
add
outsl
imul
mov
mov
pop
dec
aad
aad
fidivrs
lret
pop
mov
mov
mov
mov
lods
dec
sbb
movsl
push
and
and
mov
scas
or
push
mov
xchg
int
mov
jl
xchg
cwtl
push
das
cwtl
rorl
push
push
xchg
test
xchg
dec
adc
inc
add
sbb
and
dec
add
aad
pop
mov
sbb
push
sbb
mov
lock
loop
out
cmp
inc
lret
pop
hlt
pusha
lea
push
call
xchg
xor
dec
inc
lds
adc
pop
sar
jmp
push
jge
outsl
add
iret
cli
and
jbe
inc
jae
xor
aas
out
and
data16
mov
aad
or
sbb
jns
aas
lret
and
push
mov
les
lret
sub
xor
scas
xchg
int3
iret
mov
mov
mov
cmpb
add
adc
dec
sub
ret
std
or
inc
xchg
addr16
negb
and
xorl
fs
loopne
fcmovnbe
imul
imul
mov
out
stc
xor
lret
mov
xchg
faddl
cli
pop
pushf
in
fsubrs
mov
shll
roll
pop
sub
call
test
mov
mov
xchg
jmp
in
clc
loopne
ja
leave
push
fisubrl
xlat
ret
into
push
xor
aas
push
dec
dec
mov
dec
mov
push
cmp
pusha
xchg
divb
sub
xchg
das
inc
ja
and
cld
iret
rcrl
inc
outsb
sahf
sbb
mov
ss
lock
lock
arpl
sub
dec
mov
sbb
sbb
mov
xchg
dec
xchg
daa
leave
push
insb
imul
ret
jp
cltd
cmp
pop
ficomps
pop
and
and
sti
sub
repz
xchg
out
lahf
push
lods
jl
xchg
cmc
and
cmpsb
jmp
shrl
push
pop
into
pop
shl
insl
icebp
fwait
icebp
add
lods
into
sub
inc
cmc
ljmp
aaa
add
enter
pop
pop
xlat
pop
xchg
xchg
scas
enter
or
dec
aam
loope
add
dec
stos
mov
add
sahf
repnz
lret
std
lock
insb
pop
fcmovb
jb
mov
xchg
test
imul
pop
cmp
test
popa
mov
mov
push
in
out
mov
daa
out
lods
aaa
adc
loopne
ds
ret
or
cmp
jne
dec
popf
jmp
push
test
cmp
test
dec
adc
xchg
xchg
daa
insb
in
xor
push
dec
inc
cmp
or
repz
arpl
mov
out
test
lods
jg
movsl
inc
out
dec
and
movsb
fcomp
push
sbb
popf
cmp
add
hlt
sbb
jp
mov
push
nop
imul
out
xorl
fildll
clc
xchg
push
mov
adc
xchg
ss
stc
or
iret
push
mov
sub
out
in
mov
add
fimull
in
pop
inc
cmp
ficompl
adc
fs
lret
xor
dec
push
mov
or
fsubl
sub
pop
xchg
movsl
scas
xchg
cmc
outsb
nop
cwtl
xchg
out
add
pop
adcb
js
popl
or
shll
fcmovb
loope
icebp
mov
xor
jo
shrb
xor
decb
xchg
subb
xchg
inc
sti
in
cmp
stos
pushf
adc
lret
sbb
sub
addl
stos
cmp
int3
lcall
push
mov
ljmp
in
cmp
cmp
stos
adc
inc
idivl
bound
out
push
push
adc
mov
pop
inc
rdpmc
rolb
inc
sub
push
mov
cmp
decb
roll
dec
int3
cli
sub
int3
inc
jle
mov
dec
jb
ljmp
leave
cmc
add
sbb
pop
outsb
mov
out
jno
je
cld
lock
scas
lock
xchg
mov
push
push
daa
sub
test
jb
ret
cmp
xchg
sbb
jp
movb
pop
jo
lock
mov
push
rorb
pushf
mov
popf
xor
adc
mov
insb
outsl
push
popa
outsb
xlat
loopne
icebp
loop
mov
pop
shlb
ds
xchg
adc
xlat
out
insl
sub
fs
adc
or
or
jbe
sub
sub
ret
dec
jecxz
mov
and
or
and
out
je
adc
and
mov
outsb
mov
ds
mov
xchg
jecxz
movb
and
and
loope
sub
out
push
stos
mov
int3
sub
sbbl
lods
dec
cmp
jno
sti
mov
and
xor
cmp
loopne
or
inc
cmp
cli
push
or
idivb
aad
ljmp
insb
adc
adc
fwait
add
and
dec
shrb
loope
xor
fsubs
push
in
inc
outsb
push
and
stos
mov
mov
push
int3
pop
jnp
test
mov
mov
xchg
inc
xor
mov
cmc
ret
and
mov
xor
ret
out
sbb
icebp
cmp
aaa
movsb
and
cwtl
scas
dec
pop
ss
sti
dec
mov
inc
dec
out
inc
push
pop
movsl
jo
ds
fmuls
lods
out
add
arpl
inc
push
xchg
gs
cld
jl
dec
pop
xchg
push
push
sbb
in
sbb
daa
cmpsb
leave
jbe
jae
sbb
mov
faddl
iret
repnz
cmp
lods
bound
pusha
ret
or
mulb
orb
push
pop
lahf
jb
fcompl
ret
and
jbe
dec
bound
or
jb
rorb
cltd
les
lret
stc
sahf
test
mov
jnp
or
jmp
orl
pop
test
push
xchg
inc
in
pop
loopne
sbb
pop
jecxz
jmp
jg
out
push
mov
outsl
ds
std
mov
stos
add
mov
pushw
cmp
in
lods
pop
mov
mov
clc
aad
or
fisttpl
int3
insl
icebp
movsb
xor
imul
clc
xchg
ds
cld
mov
adc
mov
stos
arpl
out
adc
add
subl
xchg
daa
gs
fsubr
add
out
adc
ss
aad
mov
jns
dec
cs
xchg
push
mov
or
jne
stos
movsb
ret
dec
punpckhbw
mov
movsl
out
xor
jp
mov
addr16
shrb
inc
inc
xchg
mov
cmp
in
ret
inc
xor
dec
dec
mov
subl
xor
sub
adc
arpl
dec
dec
movl
test
mov
adc
xchg
and
mov
stos
mov
or
xor
cmc
ds
adc
pop
xchg
call
fmull
inc
pop
push
lret
push
add
pushl
xchg
daa
sbb
xor
dec
and
inc
push
clc
fildll
mov
sub
out
orb
mov
push
and
movsb
pop
adc
adc
jp
sahf
jnp
adc
hlt
mov
jp
int3
inc
sarl
jl
mov
jmp
js
fsubl
shlb
sub
sahf
mov
arpl
rorb
inc
pop
push
lret
adcl
fisubl
jg
movsl
lock
and
lahf
xor
add
push
xchg
jnp
cmpsl
es
mov
jecxz
stos
jle
adc
push
shrl
sbb
aas
inc
les
pusha
je
dec
fldpi
push
xchg
aaa
fidivrs
scas
or
pop
nop
movl
jecxz
sub
cmp
cwtl
add
lcall
mov
mov
push
daa
lret
and
out
jno
xor
cmp
xor
sbb
adc
mov
mov
inc
in
and
jne
mov
das
rolb
inc
popa
outsb
aad
or
or
cmp
jecxz
aam
stos
cmp
movsb
mov
fsubrs
imulb
test
cmp
pop
xchg
shll
xchg
mov
mov
pop
add
repz
push
sub
cmp
ret
push
and
mov
mov
dec
fldcw
cmp
stos
push
add
dec
mov
and
ss
and
mov
pop
cmpsb
fstpt
dec
fsts
jbe
jbe
iret
leave
lret
cmpsb
push
pop
test
and
xchg
jecxz
lea
out
pusha
jns
aas
ret
outsb
inc
cmp
subl
fstl
inc
xchg
stc
mov
loopne
jle
mov
mov
ret
mov
inc
ret
add
stos
loope
cli
xchg
rcr
pop
das
and
or
das
inc
cmp
cmp
ret
add
xor
out
mov
ret
mov
xorl
std
arpl
imul
lods
addr16
sbb
jmp
xor
add
xchg
xchg
xchg
pop
xor
scas
dec
hlt
data16
pop
iret
out
mov
xchg
sbb
pop
push
jnp
mov
mov
mov
sub
lahf
out
xchg
mov
jnp
std
fnsave
int3
lods
cmp
jb
xor
lret
mov
push
mov
inc
test
add
push
xchg
xchg
mov
inc
movsl
std
cmp
jo
sbb
xor
loop
je
mov
test
fdivl
dec
cld
dec
js
add
mov
cmpsb
cwtl
jae
subb
xchg
jne
mov
or
cmpsb
add
jo,pn
cmp
xchg
insl
inc
lcall
mov
mov
fwait
mov
pop
cmpsb
and
ficoml
or
lahf
test
rorb
adc
jbe
mov
mov
xchg
pop
jp
test
cli
test
cmp
repnz
lahf
loope
insl
mov
fnstenv
fildll
aaa
jb
dec
cmpsl
or
fcompl
rcrb
sbb
pop
xor
lcall
mov
or
in
xor
pop
mov
jecxz
adc
push
inc
add
and
xor
lret
xor
out
or
enter
sub
out
ret
int3
jnp
cwtl
mov
push
aaa
stos
fcmovnbe
icebp
lods
das
mov
mov
je
enter
sub
lahf
jbe
and
test
jns
xor
cmp
movsb
jmp
xor
push
jbe
movsb
fldl
cmp
mov
cmp
sub
aam
sub
inc
ja
push
mov
sahf
ja
inc
pop
loopne
test
call
mov
xchg
add
in
ret
inc
aas
xchg
rclb
iret
shlb
mov
inc
test
insb
push
insl
xor
mov
hlt
mov
xchg
mov
sbb
cmp
pop
xchg
push
popf
fcoms
dec
sub
sub
xor
xchg
cmp
lcall
pop
call
add
add
es
lahf
sahf
sbb
sub
pop
add
xchg
leave
cmp
add
xchg
loope
or
insl
repz
push
jmp
test
std
mov
mov
xchg
sub
fsubrs
pop
cmpsb
shlb
in
mov
dec
lcall
cmp
xor
ret
jns
leave
and
stc
cmp
loopne
sti
mov
lods
mov
outsl
lcall
mov
xchg
out
sahf
lret
jge
mov
sub
add
scas
cltd
cmp
jmp
jbe
inc
mov
test
enter
aaa
ja
nop
mov
dec
in
dec
push
int3
bound
scas
push
call
movsl
xchg
mov
cmpl
dec
adc
out
out
out
jne
lret
loop
dec
pop
and
cmp
arpl
jle
jecxz
add
ljmp
cmp
cmpsb
sbb
sar
xor
mov
add
mov
sbbb
and
jae
out
testb
mov
mov
cmpsl
mov
mov
add
mov
and
mov
mov
negb
pop
imul
push
out
nop
loopne
lcall
ja
mov
lods
jmp
lods
add
push
inc
fildll
add
push
addr16
push
je
mov
push
fistl
sub
jl
std
or
int3
jne
sub
xor
cmpsl
jge
lods
xor
movsb
sub
xchg
imul
mov
fucomip
dec
rclb
outsb
xor
dec
fisubs
xor
pop
inc
adc
inc
adc
xor
mov
cmp
push
mov
test
mov
push
sbb
lret
mov
in
loop
imul
int3
xchg
dec
mov
aam
jg
das
or
adc
xchg
inc
arpl
mov
mov
cmpsb
dec
dec
fidivs
mov
sub
mov
and
and
and
test
and
pop
push
jnp
push
jecxz
fmuls
push
push
outsl
dec
or
ljmp
or
dec
cmp
dec
les
in
sbb
ret
push
bound
arpl
mov
cmc
leave
dec
pop
fdivrs
inc
mov
sbb
xchg
sbb
scas
xchg
adc
sub
sbb
std
mov
stos
or
adc
std
inc
les
icebp
rorl
mov
xor
test
out
sub
nop
and
ljmp
xchg
dec
sti
js
rclb
push
or
or
push
mov
mov
and
pop
pop
pop
mov
sub
cld
xor
jge
test
xchg
mov
out
adc
mov
data16
das
mov
dec
add
sub
mov
xor
lret
outsl
arpl
push
pop
jg
cmp
int
ret
loopne
inc
jno
pop
sbb
nop
dec
lods
fldl
mov
lcall
sbb
std
inc
out
push
movsl
mov
mov
xor
and
imul
aaa
or
fsubs
pop
popa
mov
xchg
mov
jmp
inc
xor
add
shlb
imul
fbstp
xchg
inc
dec
shll
in
jp
or
test
stos
je
xchg
pop
nopl
imul
subb
or
les
shlb
cmp
sub
ds
jmp
sub
adc
lods
rorb
sub
mov
pushl
cmpsb
aas
fwait
xchg
mov
cmp
pusha
push
mov
aam
xor
xchg
push
jo
test
mov
xchg
mov
ror
mov
bound
jp
imul
jl
or
mov
push
movsl
imul
fidivrs
cmp
cmc
call
int3
xor
adc
xor
mov
inc
and
jne
call
es
mov
ljmp
in
ret
mov
es
jmp
scas
mov
icebp
lret
arpl
mov
sbb
fdivs
jnp
popf
stos
rcr
inc
jbe
mov
movsb
scas
ret
fsubrl
sub
add
sahf
sbb
je
jae
shrb
int3
aaa
test
bswap
xchg
ret
fdivrl
outsb
das
cs
mov
adc
movsb
mov
pop
mov
inc
movsl
repnz
daa
and
mov
jle
into
push
aas
rclb
mov
aaa
jecxz
movsb
idivl
dec
fildll
fisttps
rclb
rcrb
addb
or
insb
mov
add
add
arpl
cmp
and
mov
push
cmc
adc
dec
scas
sub
push
call
fnstcw
xor
leave
lret
test
mov
dec
pop
add
mov
nop
lea
push
adc
loopne
jecxz
pop
ljmp
adc
stos
dec
adc
fldl
in
fnsave
repnz
jne
sbb
mov
daa
adc
js
xchg
pop
jno
fadds
ja
sub
out
fisttps
mov
cwtl
inc
pop
in
mov
imul
stos
or
ss
jmp
cmpl
inc
jl
movsb
cmp
add
mov
xchg
mov
push
cmpsl
leave
add
jo
mov
sbb
popa
sub
fcompl
addr16
add
mov
or
les
and
sub
xchg
pop
add
mov
xchg
or
pushf
mov
push
leave
xor
mov
push
shrd
fs
pop
adc
jae
inc
mov
faddp
or
in
test
in
and
push
imul
sub
jle
and
jb
sub
outsl
sub
push
push
rcrl
je
stc
mov
imul
mov
mull
imull
subb
fiadds
xor
pusha
dec
xor
bound
xor
sub
push
adc
xlat
aas
add
push
sub
add
mov
lahf
cli
push
into
adc
es
mulb
pop
and
fcompl
out
push
pop
or
enter
mov
mov
rolb
jno
mov
sbb
pop
mov
add
mov
shll
sbb
iret
and
call
sub
sbb
and
inc
cmpsb
jo
pop
push
imul
js
cmp
insb
sub
cmp
push
leave
lahf
dec
repnz
sub
jmp
add
push
sbb
gs
jecxz
test
scas
pop
js
filds
xchg
js
jmp
or
xor
jmp
xor
inc
push
mov
sti
fwait
sti
jno
pop
mov
mov
cwtl
mov
mov
cmp
dec
ret
sbbl
outsb
clc
scas
jecxz
cmc
pop
js
jb
xlat
arpl
pop
les
stos
je
aaa
lock
inc
push
and
mov
lret
jge
daa
pop
xchg
aas
jmp
and
bound
xchg
cs
jb
lods
jbe
loop
arpl
cmp
or
mov
test
mov
xchg
mov
adc
adc
cmpsb
mov
fs
and
push
or
aaa
dec
pop
pop
pop
cwtl
sbb
enter
mov
mov
xor
outsl
popa
sub
int
fisubrl
and
mov
aad
mov
hlt
xchg
dec
in
loopne
pop
jnp
mov
and
jmp
rclb
repz
ds
call
scas
movsb
mov
mov
jbe
cmpsb
ret
add
mov
inc
arpl
push
mov
imul
mov
ja
add
and
je
hlt
andb
xchg
popa
iret
push
xorl
sbb
imul
jg
pop
xchg
jb
or
sub
jns
jbe
add
sarb
pop
add
mov
lock
in
jae
and
mov
je
mov
xchg
inc
sbb
mov
pop
lahf
shll
std
push
les
loope
clc
jb
mov
pushf
hlt
stos
xorl
push
ret
seto
mov
addb
std
pop
ret
cmc
fsub
jno
cmp
or
xchg
jmp
adc
jmp
sbb
jmp
inc
mov
adc
lock
fucomip
ret
ss
ret
mov
into
fcomps
mov
enter
inc
or
fcomip
pop
nop
mov
jle
mov
sbb
movsb
xchg
sbb
push
bound
mov
ffreep
and
scas
mov
dec
mov
mov
fsubl
xchg
mov
mov
jg
std
cs
lds
xor
ret
inc
adc
mov
lea
sub
insb
adc
xchg
loopne
mov
lret
jae
jnp
sub
adc
mov
pop
lahf
mov
jbe
mov
sub
mov
stc
daa
pop
pusha
xlat
adc
pop
cltd
cmp
pop
pop
fmul
lret
lret
lcall
scas
cmp
cli
sti
loop
inc
arpl
cmp
sbb
pop
shll
push
mov
and
iret
loop
leave
js
into
jmp
ss
push
in
push
adcl
lahf
pop
xchg
fsubr
stos
mov
mov
or
sub
mov
inc
mov
insl
push
outsb
hlt
lret
fsts
movsl
pop
dec
sbb
movsl
push
je
loope
adc
outsl
mov
adc
cs
fsubl
push
add
shll
mov
loop
lods
inc
fstl
xchg
xchg
mov
cmpsl
jnp
pop
hlt
and
call
cld
test
pop
or
test
cmpsb
sub
in
out
in
cmpl
inc
add
rcll
fcmovnbe
movsl
xlat
push
adcl
or
sbb
shrb
push
push
int
imul
pusha
int
xor
pop
out
xchg
xchg
adc
or
cmp
sub
test
hlt
and
popa
xor
cmp
shll
aam
in
mov
insb
repnz
loopne
xchg
mov
dec
pop
daa
cs
cmpsl
jmp
cmp
adc
scas
or
fs
lahf
cld
nop
mov
enter
or
loope
sbb
stc
clc
add
jbe
hlt
jnp
dec
inc
jb
pop
sub
sub
pop
xor
cmpsl
repz
adc
popa
push
dec
lock
in
imulb
cmp
adc
test
fists
js
nop
and
icebp
push
movsl
enter
push
add
add
mov
push
add
cmp
cmp
sahf
icebp
lock
dec
mov
mov
cmpsl
lret
lods
sub
lcall
fsubrp
or
loope
push
dec
dec
ljmp
mull
shll
and
sub
pop
dec
es
fwait
in
cli
insb
push
mov
push
add
fstl
or
aas
or
orl
xchg
push
clc
std
xchg
add
lods
aas
out
jae
dec
aad
dec
sbb
movsl
xor
lds
dec
xor
mov
outsl
bound
inc
jmp
rorb
mov
dec
clc
pop
imul
outsl
shlb
jle
push
and
bound
ja
cmp
xchg
ljmp
popa
test
movsl
and
lods
into
imull
mov
aam
shrb
and
rorb
rorl
sbb
insb
jno
mov
xor
mov
dec
inc
imul
add
xlat
mov
jns
cmc
aad
push
and
nop
arpl
push
pop
fidivl
mov
icebp
in
ret
out
jg
insb
jbe
orl
mov
ljmp
daa
iret
mov
fcomps
mov
mov
jno
adc
mov
push
fidivl
aas
fiaddl
add
add
pop
and
and
mov
faddl
fnstenv
add
mov
fs
aaa
jb
popf
xchg
xor
fwait
pop
push
movsb
les
add
mov
push
addr16
lods
push
cmp
pusha
xchg
test
repnz
push
pushf
pop
sub
outsl
lret
jbe
dec
repz
in
loope
sbb
ficoms
ret
xlat
aas
inc
nop
out
testb
stc
fimuls
pop
ss
inc
jnp
popa
ljmp
mov
cmp
pop
cmp
sbb
fs
add
in
dec
ss
cmp
fbstp
jmp
mov
das
insb
fmull
leave
cmpsb
andl
loop
pop
mov
cmp
xchg
push
sar
cwtl
stos
out
add
dec
rorl
jmp
clc
or
jb
stos
bnd
pop
pop
scas
outsb
lret
fistpl
shll
imul
insb
cli
jb
cmp
sbb
mov
mov
xchg
icebp
fwait
inc
mov
aaa
mov
xchg
dec
test
push
stos
mov
clc
hlt
js
test
das
xchg
jg
fdivl
ljmp
sub
scas
test
dec
sub
je
insl
sbb
sub
clc
roll
push
rcrl
scas
dec
adc
aaa
bound
lds
or
mov
sub
cmpsb
jecxz
mov
mov
cld
dec
cmp
sarl
or
and
mov
pop
cmp
insb
into
aad
sub
and
int
or
sbb
ss
outsb
sbb
bound
test
fisubl
push
sub
in
mov
scas
rclb
je
data16
push
fstpt
dec
add
inc
cli
sbb
or
mov
xor
mov
mov
or
xor
or
or
aad
push
stos
cmp
dec
stos
fldenv
cli
lods
pop
jl
call
lahf
push
jecxz
ret
push
cmp
dec
out
fstpl
in
je
jg
sar
loop
out
out
loop
aaa
fcmovbe
sub
fwait
sub
rcl
sub
xchg
cli
sbb
xor
sub
popf
dec
mov
sub
dec
push
jge
fs
jmp
das
mov
xchg
cmp
dec
mov
ss
jno
jmp
xchg
sbb
mov
xchg
push
das
fists
sbb
add
or
mov
daa
pop
in
xor
aad
or
dec
stc
cmp
pushf
cltd
sbb
jbe
lods
mov
adc
push
cmp
loopne
int
stc
cltd
cmp
push
adc
and
cmp
arpl
pop
pop
mov
add
in
fidivrs
mov
adc
lods
pop
sub
popf
jbe
loop
shll
sbb
cmp
add
jecxz
mov
dec
incb
loope
and
pushfw
jle
mov
add
movsl
mov
fsubrs
dec
idivb
aaa
sub
inc
insb
stc
jg
jmp
or
pop
mov
pop
roll
dec
mov
mov
mov
pop
and
jmp
add
xchg
jnp
stos
gs
sbb
pop
xchg
inc
es
and
fldcw
in
fmuls
cltd
ja
icebp
sbb
push
lcall
sbb
xor
cmpsb
sub
ret
inc
jecxz
push
lods
inc
iret
sub
push
sahf
mov
imul
aaa
lret
inc
test
test
xchg
jl
and
adc
mov
aad
xchg
loopne
inc
cmp
fs
das
mov
mov
push
ret
loopne
lret
das
call
scas
inc
shlb
mov
xchg
mov
popa
clc
pop
push
repz
scas
mov
nop
mov
aaa
data16
pop
add
jp
out
mov
aam
mov
leave
xchg
stos
je
add
sub
cs
mov
jne
nop
scas
dec
test
push
sbb
pop
rcrb
lock
mov
cld
lret
xor
cmp
jns
repz
jbe
cmp
loop
pusha
int
icebp
addr16
test
dec
xor
sbb
andb
icebp
cmp
mov
jle
sub
jp
es
cmp
mov
arpl
fisubs
aad
adc
hlt
mov
repz
popa
mov
inc
mov
push
icebp
mov
aam
shlb
jmp
ljmp
sbb
mov
dec
leave
adc
mov
fisttpl
aaa
out
pop
stos
xchg
call
enter
dec
push
outsb
or
test
mov
stos
scas
mov
test
pop
imul
cli
cmpsb
test
mov
pop
or
fcomps
hlt
clc
or
loopne
in
xbegin
aaa
add
adc
fmul
xor
dec
xor
mov
and
scas
inc
scas
mov
push
ljmp
sbb
sub
mov
stc
sub
xor
ljmp
int3
inc
rcrl
jno
mov
mov
movsl
xor
movsb
sbb
push
adc
ss
rcrl
jl
jmp
adc
cmp
sub
in
in
push
sub
aam
jne
cmp
push
addr16
cmc
in
aad
sbb
xchg
push
int3
fldenv
test
test
xor
fwait
test
shll
mov
dec
leave
xor
sub
or
fisubrl
sahf
cmp
bound
jecxz
leave
test
fs
and
js
roll
push
sub
std
xor
sahf
push
jnp
ds
mov
rcll
pop
push
testb
ret
dec
mov
ret
jle
mov
movsl
xchg
mov
inc
push
loop
push
or
mov
mov
and
push
ljmp
push
shlb
in
xchg
lods
cmp
jl
xor
mov
mov
je
jle
int
je
mov
mov
add
jb
rcrb
mov
sbb
ss
lret
xor
scas
mov
stos
les
shll
in
rcl
jge
xor
xor
test
push
pusha
add
jne
repz
scas
cmp
fwait
mov
mov
xchg
push
scas
les
call
fwait
call
or
mov
push
aad
and
and
dec
pop
movsl
pop
repz
clc
pop
mov
shrb
scas
mov
jg
cli
pop
icebp
cmpsb
jnp
sbb
cmp
imul
add
jnp
pop
mov
or
cmp
inc
lcallw
adc
fsts
das
xchg
push
push
xor
pop
rcll
bound
movsl
xchg
adc
lods
push
sti
scas
dec
int
mov
scas
incl
iret
or
add
or
inc
repnz
loopne
push
add
outsb
ficomps
sbb
mov
punpckldq
icebp
adc
fisubs
gs
lahf
sub
xchg
insl
jl
popf
push
mov
xchg
inc
push
ja
or
inc
cmpsl
fs
xchg
mov
test
push
imul
mov
cmp
push
repnz
pop
test
movsl
xchg
inc
pop
cli
insl
mov
insl
cld
fistpll
std
insb
test
sbb
or
lea
addb
out
cltd
sub
adc
mov
xchg
aam
adc
jnp
lods
add
cmpsl
push
pop
je
pop
out
mov
btr
outsb
test
xor
sbb
dec
pop
jne
jl
cmp
pop
push
jno
xchg
flds
cmp
cwtl
lret
int3
pop
xor
xor
sbb
lock
dec
popf
popf
loope
and
sar
inc
dec
movsb
lahf
dec
push
adc
jns
iret
or
out
mov
arpl
jb
lods
dec
mov
dec
ret
push
lock
dec
lahf
lds
pop
inc
popa
cmp
pop
mov
stos
mov
in
in
lods
shrl
inc
je
lret
pop
push
xchg
xor
lods
cmpsl
int
pop
jbe
jecxz
push
mov
sbb
jle
mov
fldenv
adc
int3
dec
movsl
nop
mov
lods
cmp
mov
cltd
sbb
daa
sbb
mov
pusha
in
pop
xchg
int
sub
imul
add
cwtl
aas
ja
cmp
insb
sub
sub
mov
data16
in
mov
aaa
js
xor
out
negl
sbb
imul
ja
inc
imul
dec
adc
or
loopne
out
xorb
in
cld
movsl
xor
icebp
mov
jge
fs
pushf
pop
dec
or
mov
pop
adc
cld
xor
mov
mov
cmc
push
or
push
dec
test
arpl
ret
lahf
sahf
sbb
push
inc
xor
mul
cmpb
jge
mov
call
iret
and
cld
insb
sbb
add
pop
out
mov
or
or
fs
xor
daa
add
iret
mov
jecxz
sbb
push
jno
inc
lcall
inc
push
test
push
push
es
jl
mov
jecxz
push
pop
mov
frstor
jo
dec
mov
mov
xor
fisttps
xchg
imul
data16
scas
sbb
in
test
sbb
mov
out
add
pop
mov
add
cli
jnp
fcompl
xor
into
xchg
mov
push
pop
int
inc
data16
jle
jmp
and
mov
mov
enter
bound
jge
movsb
testl
repnz
lods
lock
sbb
ds
add
add
lcall
cmp
jb
rcll
sarb
std
cmp
or
and
mov
cmc
mov
and
and
jecxz
imul
dec
adc
push
cmp
test
std
push
stc
ss
ss
adc
xchg
mov
hlt
divl
xchg
and
mov
mov
push
in
fisubrs
push
push
cmpsb
jle
inc
inc
repz
mov
shl
mov
je
pushf
adc
jge
dec
dec
divb
fucomip
lds
mov
ljmp
mov
popa
inc
cmovne
sbb
adc
mov
lret
push
pop
clc
rcrb
mov
test
lock
fnstsw
mov
mov
negl
cmp
stos
cmpsb
inc
arpl
aad
imul
jp
jno
std
jecxz
inc
xlat
sarb
push
test
outsl
or
les
fidivrl
imul
sub
or
stos
mov
push
out
cld
push
out
cmp
jecxz
or
xor
and
bnd
dec
nop
dec
sub
xlat
int3
cltd
mov
add
jo
jne
test
adc
lock
adc
adc
divl
cmp
mov
movsb
sub
jle
sar
dec
add
js
push
fildll
std
and
cmp
testl
testl
rcr
insb
in
pop
mov
test
cmp
test
data16
dec
aad
inc
push
mov
sub
cmp
and
fisttps
mov
dec
jmp
loope
roll
int
cmc
xchg
or
test
mov
ds
push
roll
xchg
in
lahf
iret
lahf
jge
ret
test
fiaddl
mov
jne
orl
dec
push
mov
mov
imul
mov
push
ljmp
bound
ljmp
jp
rclb
sub
jne
xor
ficompl
and
jb
inc
jbe
pop
pop
adc
cmp
push
loopne,pt
and
flds
rorl
mov
jge
and
mov
mov
dec
aaa
lea
or
jnp
sbb
inc
movsl
adc
lret
adc
lds
fwait
sub
pop
inc
loop
lods
shlb
push
popf
xchg
dec
xor
jl
movsb
or
addr16
js
out
pushf
daa
xor
mov
dec
mov
fidivl
stos
cli
adc
das
arpl
xor
sbb
insb
cmpsb
rclb
cmc
mov
push
aam
adc
out
mov
pop
pop
leave
repnz
ja
push
jl
sub
jae
push
pushaw
pop
xchg
push
dec
jo
sbbl
imul
sbb
repnz
out
jmp
test
mov
imul
add
adc
xor
push
jno
xlat
outsl
sub
daa
fisttpl
fidivs
and
fdivrl
jmp
push
lea
negb
or
xchg
adc
mov
xor
jne
les
das
or
sbb
sub
jo
shrb
fcmovnbe
xor
inc
inc
mov
sbb
sub
dec
push
or
adc
andl
dec
adc
inc
jne
pop
sti
aas
push
ret
fidivl
push
mov
jecxz
jmp
insl
shll
adc
and
push
cmc
cmp
aad
shrl
js
xchg
mov
jmp
cmp
cmpsb
roll
adc
mov
jns
pop
sbbb
daa
xlat
adc
jmp
ja
or
xchg
sbb
loope
cs
mov
push
add
push
enter
push
inc
les
fdivl
jb
inc
hlt
test
negl
mov
push
jl
cmc
or
xor
popa
hlt
int3
in
cmp
imul
test
lret
shrb
les
push
sbb
aas
push
sbb
ss
dec
xchg
sub
ja
adc
sahf
sbb
aas
mov
lahf
dec
lcall
inc
arpl
insl
fyl2x
xor
movsl
repz
insl
repz
xchg
inc
push
rcr
lcall
ret
cltd
or
mov
ljmp
mov
fdivr
clc
movsb
jge
and
jg
lret
ljmp
mov
decl
fsubrl
push
sbb
cld
and
jge
jmp
add
xchg
int3
dec
mov
sahf
das
jmp
dec
sti
icebp
insb
adc
pop
aam
std
sbb
sbb
data16
cmp
loopne
daa
sarl
cmp
mov
icebp
inc
push
std
cmp
nop
xorb
outsb
test
iret
xchg
pop
sbb
xchg
jge
push
or
lock
cmc
add
mov
xchg
adc
mov
lds
pushf
push
mov
sbbl
sub
add
movsl
loopne
adc
out
sbb
outsb
sarb
mov
mov
lock
nop
mul
push
mov
xchg
out
iret
adc
push
fimull
outsl
mov
lret
lock
dec
gs
out
movsb
xchg
jnp
out
mov
sbb
lret
dec
popa
shrl
or
inc
add
shr
mov
cmp
scas
inc
pop
jne
xchg
iret
int3
inc
in
jne
pop
push
jb
adc
add
inc
mov
in
movb
loop
sti
fimuls
bts
fistl
sub
stc
or
sbb
test
and
jne
or
dec
int3
xchg
call
movsb
fwait
pusha
mov
mov
xlat
xor
xlat
add
or
push
dec
cmpsb
push
sub
aad
rcrl
jbe
movsl
pop
jne
adc
jo
aad
jns
jge
lods
jno
xor
push
aas
sbb
ret
fisttpll
or
movsb
sbb
xchg
dec
adc
mov
mov
loope
jno
repz
xchg
xor
enter
sub
aad
sub
mov
pushf
ret
sub
mov
push
outsl
repnz
aas
mov
dec
mov
mov
shlb
test
adc
jb
adc
in
dec
ss
fcomps
bound
dec
into
xchg
lcall
cwtl
ja
imul
adc
sti
pusha
push
outsb
fidivs
test
insb
xor
mov
lcall
or
cmc
lret
cmpsl
lds
sub
into
mov
inc
shr
push
push
cmpsl
out
enter
mov
imul
jmp
adc
xchg
xor
js
sub
jnp
dec
icebp
jae,pt
lods
scas
mov
mov
adc
jno
sbb
cmp
xchg
cli
sahf
hlt
stos
in
cwtl
jle
out
push
cld
aad
sahf
iret
jae
out
cmp
ljmp
lret
loope
lock
roll
inc
fcomps
sbb
mov
or
fsubrs
or
jbe
in
adc
xchg
outsl
sbb
loopne
inc
sub
or
mov
lret
inc
stos
xchg
push
cmp
or
and
ret
daa
jge
cmpsb
xor
das
pop
repnz
stc
lret
adc
sub
mov
xor
out
mov
xchg
shrb
lcall
pop
inc
and
imul
mov
jae
cmp
jle
fldt
stos
push
jmp
sbb
pop
into
pop
dec
arpl
jne
repnz
sbbb
out
sub
xlat
lcall
fldcw
mov
push
rolb
fidivs
aam
push
fidivrl
les
repz
mov
iret
pop
mov
mov
mov
adc
mov
sbb
add
les
xchg
and
cmp
cmp
xchg
or
push
loop
popf
xor
rol
mov
mov
pop
jmp
add
inc
or
mov
in
sbb
ljmp
sub
fsub
pop
lret
mov
fisttpll
dec
stc
sahf
mov
insl
jecxz
xor
sbb
popa
dec
add
movsl
lods
push
out
mov
sub
inc
sti
add
sbb
pop
or
dec
jnp
es
push
pushf
int3
pop
in
sub
ss
mul
push
lret
push
push
outsb
mov
repz
pop
cmp
add
cmp
cmpb
add
movsl
ret
add
cmp
cmp
fnstcw
mov
or
mov
arpl
adc
jns
movsb
xor
shll
shll
ss
fnstcw
cwtl
adc
pop
sbb
cmc
sahf
cli
xchg
jno
test
loope
cmpsb
imul
fildll
xor
push
cvtpi2ps
je
mov
popa
mov
testl
xlat
ficomps
pop
in
mov
imull
and
movsb
or
subb
andl
and
jmp
cmpsl
push
leave
sub
loop
fidivl
cld
cmp
pop
dec
stos
mov
loop
popa
jge
jp
neg
lahf
call
popa
xlat
or
mov
in
test
xor
daa
stos
negl
aam
push
inc
jns
popa
pop
repnz
push
or
int
or
fimuls
call
aas
in
test
mov
fisttpll
mov
cmp
push
mov
ficoml
and
sbb
rorl
rorb
aaa
dec
pop
test
push
xchg
push
inc
push
cwtl
cmpsb
adc
xchg
fsin
popa
fsubrl
cmp
or
ret
in
fwait
dec
hlt
int3
push
je
popa
movsl
push
mov
sti
mov
dec
stos
adc
repnz
nop
mov
in
pop
shrl
xor
lea
add
jp
fs
dec
decb
mov
inc
cmpsl
mov
xchg
enter
inc
mov
xlat
fimuls
inc
xor
or
ret
hlt
mov
aad
scas
std
jp
mov
sub
lret
xor
les
pop
xchg
or
lahf
sbb
or
adc
dec
cwtl
adc
dec
in
mov
leave
mov
push
cmpsb
jle
ds
mov
mov
out
mov
jnp
addl
dec
pushf
mov
mov
jmp
pop
mov
xchg
sbbl
cmc
stos
mov
inc
mov
aaa
mov
nop
add
out
lahf
incb
mov
jne
push
je
xchg
adc
sub
sbb
cmp
jmp
outsl
cs
test
jnp
sti
pop
out
cmp
ret
aas
and
icebp
mov
pop
outsb
sbb
dec
or
xchg
push
dec
inc
cli
push
out
pop
in
scas
imull
in
adc
comiss
mov
fidivl
push
pop
cmp
xor
push
mov
movsb
push
sbb
or
jbe
test
jns
leave
enter
mov
outsl
arpl
xchg
mov
nop
rdpmc
jne
pop
cmpl
adc
leave
sarl
es
lods
lret
adc
shlb
cwtl
gs
xor
sbb
jecxz
cli
in
add
push
or
mov
fmuls
mov
sub
mov
pop
loope
mov
push
lods
rcr
bound
pusha
cmp
push
out
add
adc
lcall
data16
fwait
or
inc
lret
rcl
shll
add
int
mov
jne
rcll
scas
test
shl
enter
lock
add
add
enter
cmpsb
and
es
pop
loop
shll
hlt
cmp
pop
sbbl
lret
les
ds
pop
mov
mov
cs
mov
pop
shll
adc
fnstenv
lret
push
xchg
mov
push
and
rolb
lds
adc
call
add
mov
and
aam
pop
inc
loope
adc
das
xlat
jo
int
cmpsl
aas
stos
adc
sbbb
and
pop
push
loop
int
or
dec
and
nop
scas
clc
cmp
jbe
sub
fiadds
push
cli
mov
sti
lret
pop
push
add
out
push
rcl
loope
cld
outsl
push
and
jne
in
mov
popa
filds
int3
imul
out
shr
stc
mov
iret
cmc
sub
adc
xor
stos
inc
cmp
adc
push
loopne
test
subl
incb
data16
rcll
int3
test
ljmp
mov
cmpsb
jb
xchg
xor
adc
mov
mov
adc
mov
pop
ret
in
getsec
testl
add
mov
ficomps
roll
add
xor
inc
pop
xchg
and
xchg
insb
ja
dec
adc
int3
add
cli
dec
mov
movsb
sub
jnp
notb
movsb
xor
add
scas
imul
jne
mov
adc
repnz
es
cmc
test
xor
lahf
leave
clc
data16
pop
leave
add
das
movsl
mov
lods
sub
xor
stos
jnp
faddl
es
sbb
add
rcll
lret
pop
insb
ss
mov
stos
in
in
int3
mov
mov
ficoms
sbb
sub
xor
aam
and
lea
push
aas
cmc
cmp
sub
mov
pop
pop
jle
adc
outsb
rcll
fcomps
aas
dec
jae
mov
mov
pop
push
inc
push
push
xor
repz
push
shrl
adc
pop
bound
dec
aam
cmp
stos
hlt
add
dec
popa
fwait
cli
push
or
sub
out
lcall
ds
or
test
cmp
push
mov
and
pop
fnsave
xor
jns
imul
jnp
dec
dec
or
repz
sti
sub
lahf
insb
push
mov
inc
xchg
sbb
aad
or
out
rorl
pushf
std
stos
jmp
sahf
sbb
fnstenv
lods
int3
sub
out
lret
xchg
sbb
jo
inc
mov
lods
stc
in
popa
std
movsl
into
pusha
jns
jecxz
cmp
cld
repnz
clc
push
lods
js
imul
popf
adc
js
add
sti
cmp
mov
mov
mov
repnz
test
push
in
rolb
xchg
mov
or
pop
xor
pop
in
loop
jnp
rcrb
dec
sbb
sbb
inc
fcmovnb
cld
jle
lret
mov
in
aaa
cmpsl
fxtract
shlb
into
sbb
addr16
push
sub
mov
in
xor
outsl
scas
xchg
aaa
pop
daa
popf
sbb
movsl
inc
sbb
mov
movsl
jg
outsl
or
mov
aam
lret
hlt
inc
or
mov
outsb
test
fisubrs
into
mov
inc
xor
mov
aaa
mov
push
inc
divb
xor
hlt
dec
pop
pop
leave
pop
mov
dec
xor
loope
call
mov
sbb
inc
jo
dec
mov
push
ds
dec
cli
mov
pop
cmp
ret
pop
push
mov
hlt
lods
test
loop
mov
mov
enter
add
int3
dec
ret
dec
mov
push
xorl
test
cmp
movsb
push
jge
adc
out
mov
mov
mov
push
mov
inc
cmp
lods
pop
mov
add
jbe
xchg
mov
jns
adcb
pop
outsl
fdiv
add
rcll
mov
icebp
aaa
ss
movsl
das
mov
cmc
stc
push
fistpll
pop
gs
xor
jb
xchg
stos
mov
jbe
mov
lods
jbe
xor
mov
adc
stos
sbb
ret
ret
insl
xor
aad
add
mov
test
shrb
lcall
icebp
int
repnz
dec
push
icebp
mov
push
mov
or
test
jecxz
and
leave
mov
das
mov
mov
cs
repnz
inc
cmp
cld
and
loopne
jo
pop
push
sbb
sahf
xchg
aam
imul
ret
cmc
mov
pop
adcb
ret
push
data16
inc
mov
mov
push
xchg
sysexit
sbb
xchg
scas
call
cwtl
and
popf
fsub
shr
faddp
pop
inc
mov
cmp
fists
stos
xchg
loopne
jmp
xchg
lcall
hlt
sub
jge
test
fmull
js
inc
inc
aad
out
cwtl
and
cmp
fstpl
nop
jl
popa
js
popf
insb
jno
sbb
loopne
sbb
mov
dec
mov
inc
and
fsubr
cmpsb
xlat
dec
xchg
dec
je
loop
fnsave
ror
xchg
xlat
or
xor
sbb
push
jns
test
adc
repnz
mov
lcall
fcom
add
in
es
insb
mov
and
in
jo
test
outsb
loop
repz
lret
popf
scas
jb
aaa
xor
stos
out
in
clc
mov
or
inc
std
push
cmpsl
sti
jg
or
sbb
lahf
dec
mov
adc
jg
jp
clc
out
dec
push
out
sbb
ret
xor
and
cmp
jge
rolb
add
mov
cmp
add
bnd
pop
jne
jge
cmpsl
xor
jle
cmpsb
movsl
and
xchg
xchg
aaa
pop
ret
std
push
xchg
les
cmp
cmpl
and
test
into
xchg
add
adc
sub
in
mov
outsl
jno
mov
jmp
scas
loopne
and
push
cmc
mov
fwait
addr16
or
out
jmp
imul
in
lea
int
and
imull
fs
push
in
and
dec
das
mov
aad
jo
pop
es
mov
gs
mov
fwait
jno
roll
divl
test
in
cli
cmpsb
popa
ljmp
cltd
and
add
or
jnp
pop
push
bound
sbb
add
cmc
mov
push
adc
pop
stc
popf
lock
and
cmp
cld
xlat
sar
xchg
sbb
adc
rorl
aam
sub
or
pop
data16
jg
daa
jno
xchg
testl
repz
movsl
dec
sub
mov
mov
out
jns
mov
push
out
ret
iret
popf
lods
mov
add
test
ja
pop
sbb
iret
sub
stc
daa
mov
addl
adcb
lcall
mov
ds
daa
sbb
je
or
fdivl
int
rcl
loop,pn
mov
adc
not
adc
push
xor
push
dec
stos
mov
mov
jno
hlt
sub
aad
ret
adc
hlt
mov
xor
jns
adc
xor
lods
leave
xor
enter
cmpsl
inc
aaa
mov
fstpt
setl
inc
in
jmp
orb
mov
cmc
imul
data16
mov
inc
gs
cmp
call
pop
mov
bound
fidivrs
dec
out
adc
adc
push
or
ss
mov
lahf
in
and
inc
arpl
xchg
xchg
movsl
add
test
xor
dec
sub
xchg
pop
sti
inc
jnp
jb
adc
cld
ret
xor
loopne
pushf
bnd
mov
inc
fcompl
inc
jmp
jle
outsl
mov
cmp
lret
imul
or
ds
inc
jae
sub
lahf
ror
loopne
xor
jl
stos
jle
add
inc
jb
jno
std
mov
add
daa
testb
scas
cmp
movsb
aam
popaw
enter
xchg
lahf
aaa
inc
adc
imul
xor
and
mov
call
add
cltd
filds
pop
jmp
xor
into
inc
pop
jb
and
nop
icebp
inc
cmp
clc
push
mov
inc
shl
std
cld
int
and
enter
mov
mov
test
cmp
mov
out
cmp
push
dec
cli
push
shll
pusha
repz
in
xchg
std
or
pop
in
test
lret
inc
in
loop
push
stos
cmpsb
inc
shrl
shl
inc
push
nop
cmpsl
ds
sbb
mov
hlt
push
mov
fidivl
jmp
icebp
cli
mov
repnz
mov
das
aad
sub
dec
scas
in
outsb
jb
push
cmp
sbb
adc
call
pusha
into
js
push
dec
or
jmp
jne
sub
jl
imul
mov
fcomps
and
mov
lock
cmp
ret
sti
pusha
jmp
out
scas
rcrl
fisubl
mov
mov
dec
js
lret
cld
aaa
cmpsl
je
or
out
aam
or
mov
pop
xchg
add
cli
cli
roll
or
mov
scas
mov
notl
push
mov
mov
addr16
bound
dec
xor
jmp
inc
sbb
lret
adc
outsl
scas
gs
xchg
and
mov
stos
mov
repnz
cld
ss
ret
in
jl
jg
sbb
aas
testl
jb
stc
push
pop
jg
mov
stos
sbb
jnp
cltd
or
adc
cmp
int
test
push
inc
pop
pusha
cmp
jle
xor
push
js
xor
cltd
es
adc
js
add
imul
xchg
mov
int
push
cmc
fstl
dec
adc
inc
mov
fistps
movsl
lcall
and
adc
popa
xor
add
cltd
cmp
hlt
and
pop
sbb
adc
lods
inc
lret
cmpsl
mov
rcrl
add
xchg
enter
mov
es
fsubl
cmpsb
pop
enter
mov
lds
add
bound
out
bound
pop
addr16
out
ret
add
sub
adc
jg
cmp
cmc
sub
mov
int3
sub
push
in
lock
adc
rol
pop
xchg
out
leave
pop
aaa
xor
inc
mov
sub
cmc
push
inc
jmp
jbe
rcrb
and
push
mov
jle
xlat
xchg
xor
xchg
cmp
cwtl
ss
das
pop
push
fwait
sub
jecxz
decb
jmp
adc
loopne
nop
push
push
cmpsl
out
inc
pushl
xor
pop
xor
out
xor
jl
ss
outsb
movsl
cmp
imul
mov
inc
mov
sub
inc
loope
mov
les
lock
in
pop
fwait
pop
fcmove
insl
adc
rolb
lahf
icebp
inc
xchg
aad
icebp
sub
push
movsb
jnp
cmp
js
movsl
stos
subb
pushf
and
push
xchg
mov
pop
inc
mov
inc
inc
sbb
out
jb
daa
and
pop
fidivs
insl
inc
xor
lret
cmp
test
aam
cmpsl
and
in
stc
lret
add
and
shl
inc
adc
xor
fwait
push
mov
out
or
cmp
cmpsl
jbe
shrl
dec
jecxz
loope
jns
incl
jp
sbb
ds
popf
pop
orb
mov
andb
and
mov
xchg
incb
aam
inc
or
push
sub
push
mov
cmp
cmp
cwtl
and
push
mov
test
movsb
and
notl
mov
rolb
cltd
in
sbb
clc
cmp
cld
push
in
xchg
pop
in
xchg
mov
popf
cmp
sub
xchg
sbb
imul
or
movsb
dec
addr16
lret
aas
push
imul
add
dec
cltd
and
adc
add
mov
mov
pop
adc
and
sub
xchg
ret
lret
jbe
stos
fisttps
jo
lods
daa
aam
mov
and
negl
loope
sahf
insb
sub
mov
adcl
sub
aad
insb
dec
test
cmp
fcoml
xor
loop
xor
enter
decl
xor
int
fdivp
stos
adc
jg
hlt
cwtl
sbb
or
cmp
pand
mov
sub
or
aaa
clc
mov
adc
xchg
xor
jbe
lods
mov
cmpsl
xchg
ret
ficoml
test
out
mov
sub
rcrb
cld
ss
push
movsb
mov
in
mov
jae
xor
outsl
cmp
ret
ss
push
cs
adc
mov
push
insb
sti
or
lea
lret
and
test
stc
mov
add
clc
mov
sbb
loop
outsb
pop
test
incl
lods
inc
imul
mov
scas
pop
xor
nop
or
int3
push
cmpsb
push
mov
xchg
xor
outsb
cmp
pop
arpl
xor
xor
pop
mov
pop
add
popa
mov
and
and
mov
mov
outsb
mov
ds
roll
sbb
mov
ss
cli
cmc
or
mov
or
stos
insl
sub
cmp
mov
nop
mov
jbe
mov
push
iret
lretw
sub
fsub
mov
dec
popf
nop
outsb
jo
mov
cmpsl
pushf
pusha
and
fs
shlb
ds
adc
lds
sbb
sub
xor
sti
cmp
adc
inc
xchg
mov
sbb
cmp
std
or
add
inc
mov
arpl
cmp
push
push
mov
clc
cmp
mov
and
cmc
sbb
cmpb
cmp
pushf
in
pop
cli
addr16
add
jge
ja
adc
or
hlt
punpcklbw
clc
jnp
mov
mov
leave
iret
leave
cwtl
dec
inc
sub
push
sarl
mov
mov
int3
cmp
push
jo
pop
cmpl
mov
and
xchg
les
cli
lret
gs
mulb
mov
xchg
jmp
jne
or
cmpsl
es
jne
mov
adc
das
sub
inc
dec
xchg
mov
lods
mov
cmp
xor
jns
rclb
mov
insl
push
cld
lock
xchg
dec
mov
push
add
push
fcoml
mov
loop
stc
xchg
push
xchg
push
pop
es
andl
sub
adc
fcomp
das
mov
nop
dec
or
mov
mov
shlb
imul
loopne
ficompl
rorl
es
nopl
sub
cs
outsl
and
add
pusha
roll
and
outsl
fisubrs
ss
fs
in
push
jne
mov
cmp
div
dec
loope
push
pushf
push
xorl
sub
sahf
pusha
in
addr16
js
or
inc
sahf
test
inc
ror
popa
and
fdivp
rcr
xchg
mov
sub
add
push
jae
sbb
cli
int3
movsb
or
shlb
dec
adc
mov
or
das
inc
pusha
sbb
jb
dec
mov
cmp
ficompl
push
sbb
push
cmp
fwait
sub
dec
jl
xchg
fmulp
pop
mov
gs
xchg
push
jno
fcmovbe
das
inc
addb
ret
ret
jp
sahf
enter
adc
imul
cmp
push
movsb
cs
cmp
ja
xchg
xchg
insl
xchg
inc
fwait
xor
fsts
dec
hlt
inc
dec
xor
jg
in
sub
scas
jbe
daa
ret
ljmp
xchg
aas
dec
pop
mov
xor
sarl
pop
pop
lods
data16
out
adc
mov
jp
cmp
adc
mov
push
mov
or
sarl
rcrl
clc
pop
xchg
mov
mov
cmc
test
pop
cli
push
popf
sub
popa
jg
add
movsl
xchg
ret
ljmp
jns
sbb
stc
adc
xchg
dec
dec
lret
xchg
push
mov
xor
mov
imul
add
test
loope
daa
jbe
les
cwtl
sbb
out
cmp
pop
sub
mov
jecxz
pop
fldenv
nop
sbb
lret
add
arpl
ljmp
mov
mov
jb
xchg
cmp
das
xchg
mov
push
sub
jecxz
cmp
mov
mov
lret
and
andl
ss
stos
aam
imul
loopne
js
push
push
push
lods
push
inc
inc
jmp
pop
inc
dec
mov
xchg
jg
xor
insb
jp
out
lods
jae
loope
xor
ficoml
inc
sbb
dec
test
pusha
cmc
in
testl
pop
adc
mov
and
lods
sbb
and
mov
add
loop
in
into
ss
fdivl
mov
js
inc
mov
add
pop
adc
aad
inc
add
dec
cmpsb
xor
add
cmp
lock
jl
cmc
addb
xchg
scas
in
ret
rcrb
mov
sbb
push
mov
test
add
mov
dec
cmp
ds
in
scas
ljmp
lcall
pop
add
pmullw
adc
cmpsl
inc
inc
xchg
cmpsb
ja
cld
or
adc
fstl
gs
jmp
int3
jae
nop
xor
ss
cmp
jbe
mov
jb
pop
jae
in
mov
outsb
push
icebp
nop
roll
test
outsl
mov
aaa
call
call
lcall
pop
mov
pushf
popa
adc
hlt
mov
or
addr16
pop
cmp
and
push
addr16
adc
nopl
dec
in
daa
sbb
ret
std
push
out
jg
arpl
push
sbb
ret
imul
jge
xchg
push
xlat
sub
jle
push
jne
fmull
hlt
arpl
pop
loope
sub
idivb
sbb
or
and
jae
js
sub
repnz
loope
mov
or
fisttpll
push
or
dec
stc
test
lret
add
adc
mov
lret
inc
iret
lods
test
adc
cld
xor
inc
ret
add
hlt
out
mov
adc
mov
push
dec
cwtl
or
les
add
or
lcall
bound
cmp
dec
or
daa
add
movsl
mov
in
mov
mov
push
cli
cltd
lcall
push
xlat
lahf
lods
lret
and
pop
and
pop
mov
jmp
dec
mov
push
int3
mov
push
mov
xor
lret
xlat
incb
pop
xchg
mov
leave
lea
fcom
sbb
cltd
xor
mov
ja
in
inc
pop
or
aad
xchg
ret
xor
xlat
repnz
xlat
xchg
jp
push
xchg
jo
and
dec
xor
rcrl
gs
jnp
cld
stos
adc
stc
jecxz
sbb
xlat
cmc
jecxz
je
cwtl
lea
gs
cmp
je
adc
dec
aam
cmp
jno,pt
scas
call
sub
into
iret
aaa
inc
add
xchg
fildl
mov
mov
mov
lods
sub
or
add
xor
imul
jg
adc
pop
bound
fwait
ret
add
fistpll
xor
or
movsl
lahf
stos
xor
xor
loopne
int
or
sarl
dec
psllq
in
dec
cmp
jmp
iret
into
inc
rcl
jp
push
fwait
test
jbe
faddp
jge
daa
mov
dec
test
jne
push
jae
jl
jbe
ficoml
cmc
cmp
sub
out
dec
cmp
out
fmuls
hlt
xchg
aam
movsb
cmc
inc
push
hlt
pop
cmp
dec
cmp
mov
les
insl
nop
inc
push
insl
adcl
pop
cmpl
fnstenv
xchg
add
ds
adc
cld
mov
mov
pop
pop
fwait
ja
movsb
or
test
and
cmp
in
stos
sbb
insl
shr
testb
jo
push
sub
jne
dec
and
pop
sub
notl
xchg
repz
and
xor
mov
insl
loopne
add
push
mov
shll
jbe
mov
add
jne
and
cmp
push
loopne
push
movsl
loope
jnp
lea
sub
cmpsl
jge
ret
outsb
loope
or
or
or
loop
mov
shll
out
mov
lock
icebp
mov
ljmp
fisttps
xor
cmpsl
dec
pop
push
fimull
inc
ljmp
je
jl
adc
cmc
xchg
mov
or
out
sub
rorb
mov
adc
ret
fstp
add
loopne
aas
mov
xor
cmp
inc
stos
xor
sub
enter
arpl
mov
pop
sbb
insb
add
jne
subb
popa
pop
pop
rcrb
aaa
jns
test
rcrb
test
jl
lods
jge
int3
js
lret
mov
lods
fs
mov
push
pop
mov
imul
mov
mov
addr16
stos
lods
ds
lcall
dec
clc
sub
dec
pop
out
adc
fs
aas
and
mov
mov
dec
stos
fcompl
and
shl
and
repz
cmp
cmp
mulb
dec
pop
pop
cld
cmp
adc
jns
call
stos
call
xchg
fimuls
insb
mov
in
lcall
and
aas
sub
scas
jnp
cld
or
or
aas
or
dec
or
and
adc
sub
adc
add
dec
std
scas
dec
arpl
push
cmp
test
imul
ds
out
loope
xor
pop
xor
pop
sbb
mov
pusha
mov
and
imul
test
cmc
rorb
sahf
loop
sahf
inc
cltd
std
fidivrl
or
sbbl
xchg
test
sub
mov
inc
fistl
ficoms
jns
xchg
cmp
xchg
jge
push
decb
cmp
cmpsb
fcmovu
jnp
cmp
aam
nop
iret
fisubl
int3
test
in
push
aam
call
jp
enter
push
dec
rorb
hlt
mov
xor
leave
mov
pop
push
sarl
sub
mov
and
sti
aas
rcrb
push
dec
lret
push
into
pop
rorb
inc
das
shrl
mov
mov
xlat
out
mov
inc
push
dec
or
jp
and
xchg
dec
orb
dec
mov
xlat
inc
inc
ljmp
pop
sbb
push
push
adc
int3
inc
push
lcall
ret
cli
inc
lret
push
and
ja
dec
mov
xchg
pop
sbb
scas
rclb
jg
sub
sbb
xchg
adcl
push
outsl
cmp
cmp
cmp
push
lods
dec
mov
loopne
out
xchg
pop
mov
adcb
jae
test
cmc
test
fildl
pop
sub
stc
xchg
mov
cmp
jbe
lret
sbb
pop
mov
add
jne
sub
aam
pop
mov
jnp
cli
imulb
inc
pop
add
ficomps
int3
lahf
jbe
lcall
ffree
ret
in
mov
sbb
insb
xchg
mov
daa
inc
popf
push
add
inc
addr16
imul
aad
cltd
stc
orb
cld
mov
arpl
fidivs
adc
rclb
call
and
gs
inc
nop
and
in
lcall
rcll
mov
sbb
pop
sbb
in
into
lahf
dec
fistps
mov
es
mov
xchg
jl
or
add
sbb
cmp
sbb
mov
mov
cltd
ljmp
leave
fcmovu
push
enter
sahf
scas
mov
fists
repz
push
jae
add
divl
pop
xchg
movsb
pop
mov
adc
cmp
push
sub
mov
pop
cmp
mov
push
jge
lea
fcoml
stos
jns
pop
outsl
sarl
or
out
cmpl
jnp
or
icebp
mov
call
push
inc
lahf
fdivl
and
aaa
push
cli
xor
jb
into
push
xchg
loop
outsl
mov
xchg
push
or
xor
adc
cmp
lret
adc
jecxz
sti
xor
and
dec
movl
and
and
sub
dec
fdivp
xchg
out
sbbb
sbb
mov
ret
lcall
cs
dec
popa
or
dec
ret
push
pop
sbb
call
push
dec
xchg
cmp
jge
push
mov
lods
mov
out
sbb
inc
cld
or
scas
or
pop
ljmp
test
inc
in
mov
jne
sti
dec
push
test
enter
inc
popa
ds
loop
inc
jg
int3
addr16
xchg
sahf
pop
movb
or
test
fimuls
testl
mov
mov
adc
cwtl
jmp
jp
mov
and
xchg
call
std
das
out
add
shr
movsl
adc
jne
jmp
out
sti
out
and
shlb
sti
outsl
add
or
fisubrs
sbb
test
stos
ljmp
sub
jo
loopne
cmp
int3
cltd
xchg
fnstsw
fimuls
das
daa
inc
and
cmp
test
loopne
push
pushf
clc
or
mov
mov
xor
es
lds
out
lahf
or
pushf
jge
xchg
xor
cmp
loop
xchg
inc
ss
inc
cmp
and
inc
dec
aas
dec
imul
mov
sbb
xor
loop
out
mulb
inc
fwait
inc
dec
sub
or
jmp
xchg
lock
mov
lcall
cmpsl
out
lahf
enter
sbb
push
ss
adc
inc
insl
jae
int3
mov
push
mov
push
dec
mov
pop
cmp
lcall
fistps
inc
mov
push
aas
cld
mov
jnp
dec
clc
ljmp
sbb
mov
shrl
shlb
dec
rorl
xor
cmpsl
sti
sub
int
sti
xchg
das
jmp
push
dec
sub
js
test
es
inc
pusha
arpl
sar
push
or
mov
jo
pop
outsb
xor
adc
push
jns
or
pop
pop
out
cli
into
add
std
jno
xchg
notb
mov
pushw
test
dec
jg
push
faddl
adc
sub
outsb
mov
ds
lea
punpcklwd
es
nop
test
test
rcrb
mov
lds
push
js
loop
xchg
sub
xor
mov
fdiv
adc
outsb
jo
lea
mov
iret
xchg
cli
jno
push
loopne
loop
jno
mov
les
lods
jns
inc
jns
xchg
add
in
pop
cmp
push
xlat
cmp
mov
stc
inc
jl
cmpsl
push
cmp
adc
mov
mov
fnstenv
in
pop
push
adc
inc
repz
sbb
adc
push
inc
pop
dec
push
fdivrs
xchg
outsl
pop
mov
pop
mov
jae
in
inc
cmp
adc
dec
in
or
pop
adc
mov
call
bound
pop
nop
jmp
test
sub
add
in
xchg
push
xor
fistps
xchg
xchg
and
es
ret
add
pop
mov
dec
test
int
sub
dec
mov
imul
add
shl
call
sbb
adc
sub
xchg
mov
push
in
mov
stc
or
test
int
jns
test
cwtl
xor
paddw
out
xor
dec
hlt
pop
out
std
bound
es
ljmp
sbb
xchg
push
outsb
enter
fdivl
scas
imulb
push
mov
mov
ss
xor
in
mov
push
cmp
jnp
in
xchg
adc
dec
mov
std
fidivl
fdivr
das
mov
dec
out
andl
shlb
sub
repz
sub
pushf
pop
inc
lods
fsubr
add
cmpb
mov
mov
fcomp
pop
jl
clc
jne
xchg
je
je
jns
cs
mov
push
mov
nop
xchg
cmp
ret
mov
mov
ret
pop
cmp
leave
je
out
std
or
mov
iret
out
fdivr
mov
fists
mov
dec
pop
xor
xor
and
sbb
jge
movsl
jl
push
into
jg
daa
imul
adc
adc
lret
mov
push
push
cmp
jmp
inc
add
jl
dec
mov
xor
push
lahf
fsubrl
pop
push
movsl
push
movsb
xchg
dec
xor
dec
add
lods
imul
jle
mov
dec
aas
into
insb
addb
out
jecxz
cmp
xor
aad
cmpl
mov
je
fists
pop
test
mov
cmp
imul
loop
xchg
cmp
cmp
imul
testl
mov
sti
idivb
inc
fsubs
xchg
jecxz
mov
mov
movsb
sub
test
and
shll
mov
and
cmc
sub
gs
cs
dec
xchg
sbb
imul
test
clc
jnp
out
inc
add
cmpsl
pop
in
adc
ret
sbb
adc
cwtl
lods
lcall
dec
xchg
pop
and
inc
cltd
lds
pop
mov
mov
pop
dec
subb
in
jge
inc
fisubrs
mov
inc
pop
shl
or
std
fmull
lret
jae
cmp
dec
add
jg
adc
mov
icebp
mov
mov
mov
xchg
or
enter
fiadds
out
mov
fcmovnb
dec
push
mov
or
leave
sbb
mov
push
dec
in
jnp
daa
fbstp
shrb
jg
jle
sbb
xor
mov
popf
ja
gs
push
div
cmpb
gs
das
test
aad
rcrb
incb
pop
xor
and
mov
jle
sbb
and
int3
fldenv
rol
lcall
jbe
out
data16
sahf
xchg
inc
xchg
add
inc
lods
jb
push
dec
test
scas
stos
out
repz
rolb
out
jecxz
adc
inc
nop
xchg
or
shrl
adc
cmp
xchg
ljmp
adc
cmp
ret
sub
pop
adc
inc
mov
outsl
aaa
inc
out
and
mov
mov
cmp
in
arpl
sbb
jae
shll
mov
lds
adc
rcrb
call
sub
movsl
in
xchg
out
cld
fs
fldenv
mov
inc
cmp
mov
pop
or
jmp
sub
out
push
mov
cmp
inc
pop
popa
push
outsl
clc
xchg
or
pop
pop
cwtl
sub
lea
pop
ds
inc
into
fldl
xchg
push
pop
cmp
add
inc
arpl
shrb
test
mov
loop
call
push
dec
lret
sbb
xlat
mov
icebp
ss
or
loop
test
mov
cld
jb
lods
mov
cmpl
push
push
add
hlt
ds
test
mov
call
pop
int
callw
in
mov
push
lcall
movsb
push
xor
dec
pop
adc
data16
mov
insl
push
inc
jg
nop
ss
ljmp
lret
cmpsb
in
mov
arpl
or
test
adc
pop
je
mov
out
and
and
push
mov
sbb
xchg
jmp
xchg
xchg
cmpsb
iret
cs
lods
scas
sub
lods
pop
dec
sbb
cmp
in
arpl
lret
sti
shrl
mov
xor
jmp
ss
mov
fcmovbe
leave
pop
fmul
or
and
inc
fstpl
scas
cmpsb
and
test
mov
fsubl
add
mulb
push
add
rorl
cmp
mov
mov
mov
cld
icebp
out
sbb
hlt
out
mov
xchg
out
test
stc
repz
aas
rcrb
je
and
jne
nop
xchg
lods
adc
out
das
insl
inc
sahf
xor
xchg
es
push
shl
stos
push
push
push
and
jno
aaa
hlt
cmp
and
lods
jp,pn
pop
xor
xchg
jg
lahf
rcll
nop
ffree
adcb
je
add
enter
add
rcll
and
mov
push
iret
fwait
int
mov
xchg
dec
std
mov
push
add
and
mov
pop
into
in
dec
dec
xlat
xchg
flds
into
icebp
shll
shll
lds
fcmovne
xlat
neg
xor
int3
aad
jb
jge
sbb
pusha
dec
andl
aas
or
mov
xor
sub
jno
in
xchg
pop
pop
pushl
sbb
inc
push
sub
dec
add
xchg
or
xor
add
adc
xchg
fdivr
dec
xchg
sub
mov
xchg
shll
test
mov
cmp
push
push
movsl
out
rcll
stos
xchg
jo
dec
inc
mov
pop
mov
in
int
and
and
adc
pop
sar
test
fs
cltd
push
es
or
jb
dec
mov
fsub
adc
adc
fisubrs
jo,pn
decl
scas
lods
push
popf
xor
aas
push
stc
mov
pop
negl
sbb
xor
call
jmp
jl
xchg
das
sbb
pop
out
add
inc
cmp
xchg
pop
and
sarl
ret
icebp
int3
or
adc
add
repz
int
or
jp
push
lret
and
sub
mov
xor
jl
inc
add
js
orl
nop
sub
pop
pop
xor
ds
adc
out
xor
jnp
mov
pop
repnz
fucompp
enter
mov
bound
or
int
pop
cmp
andl
dec
leave
outsl
xchg
pushf
test
mov
cmpsb
adc
dec
fadd
sub
add
add
scas
sbb
mov
adc
mov
xchg
cltd
sbb
daa
inc
cmp
push
cmp
insl
in
mov
fcomps
cmp
movsl
cltd
mov
sub
movsb
stos
xor
jp
icebp
xchg
mov
pop
fcom
jns
push
mov
inc
or
or
ja
inc
in
add
and
lahf
and
test
stc
dec
cmp
xchg
pop
mov
ja
jmp
mov
ja
int
nop
loopne
xchg
arpl
aad
fbld
lret
sbb
cli
pusha
pop
sbb
mov
or
push
scas
cwtl
and
or
or
mov
das
jnp
repnz
cmpsb
mov
add
mov
ret
ret
movsb
addr16
dec
std
mov
in
cltd
or
andb
or
inc
repnz
mov
jg
xor
adc
clc
push
cli
mov
mov
adc
lods
inc
sahf
leave
mov
adc
loopne
mov
or
incb
incl
xor
xor
sub
mov
aam
js
jb
mov
pusha
testl
addr16
out
std
sbb
and
and
pop
push
call
rolb
sbb
stos
std
clc
cmp
mov
imul
adc
cld
testb
int
jle
xor
lods
es
add
xlat
xor
inc
scas
push
and
sarl
mov
dec
jl
aas
push
cltd
std
jg
xchg
dec
push
fldt
fstpt
rclb
fwait
push
into
aam
mov
mov
or
mov
and
psubd
cmp
mov
xorb
test
mov
push
jnp
push
ds
xchg
movsl
pop
dec
out
xchg
dec
shlb
cld
pop
mov
mov
fimull
test
mov
dec
adc
notl
mov
jge
addps
jecxz
scas
push
adc
cmp
mov
shl
mov
ljmp
insb
ffree
repnz
push
pop
pushf
push
and
rcrl
decl
leave
in
mov
mov
jo
std
data16
stc
fsubl
sbb
pusha
fildl
pop
sbb
or
cmp
mov
pusha
sbb
and
rolb
cmp
daa
jp
icebp
add
outsl
jae
repz
xor
push
insb
cli
pop
mov
out
pop
out
adc
in
cmp
or
fs
mov
add
or
js
clc
add
mul
mov
sub
fs
ja
pop
pop
cld
mov
add
and
lret
cmc
push
xchg
push
mov
lret
imul
fstl
cmp
cmp
lret
fmuls
cmp
adc
cmp
aas
pusha
pushf
mov
cmp
inc
cmc
inc
xor
sbb
add
add
pop
out
popa
hlt
stos
lea
inc
out
insb
xor
pop
test
pop
jmp
inc
cmp
leave
dec
jl
leave
loopne
stos
xchg
pusha
inc
or
add
add
pusha
fsts
scas
cmpsl
fucomi
dec
jmp
scas
sub
sbb
mov
not
scas
pop
ljmp
movsl
bound
icebp
inc
pop
mov
xchg
push
out
roll
xor
test
iret
mov
jmp
lcall
fwait
or
mov
aad
rcrl
push
push
cld
pop
addb
hlt
enter
cwtl
or
dec
daa
loop
sub
pop
adc
jge
sahf
out
ljmp
push
add
fwait
movsb
fsts
fcmovu
push
shrb
push
or
sub
daa
in
bsf
dec
or
dec
jnp
lret
pop
jo
adc
xchg
iret
loop
aaa
loop
mov
inc
fdivrs
loope
or
pushf
push
or
dec
rolb
add
inc
lahf
adc
push
sbb
xchg
push
mov
dec
inc
xor
leave
mov
mov
aas
ds
or
call
je
adc
outsb
sahf
push
je
xchg
pop
out
mov
loopne
sti
shrb
sahf
sbb
lret
outsb
mov
scas
jp
jge
loop
pop
ljmp
jl
adc
out
repz
push
cmp
ficoml
lds
sbb
pop
popf
inc
sti
mov
add
dec
mov
jnp
test
repz
icebp
aad
das
dec
repnz
add
mov
push
enter
push
ret
lahf
mov
in
mov
dec
xor
add
xchg
faddl
loopne
negl
rorl
faddl
ret
mov
dec
mov
fdiv
imulb
fdivs
mov
ret
into
cmp
bound
in
push
hlt
adc
push
xor
repz
sub
inc
das
mov
dec
jge
sub
out
adc
sahf
sbb
jmpw
and
imul
or
or
js
cmp
pop
jle
xor
ja
mov
test
mov
cli
push
pusha
lea
pop
icebp
xchg
sbb
pop
es
movsb
xchg
dec
jp
adc
mov
xchg
sub
add
fisubrs
in
movsb
jnp
cmp
outsb
add
ja
data16
mov
cmp
xor
dec
fsts
pop
lea
push
dec
cld
mov
insl
pusha
iret
mov
push
mov
movsb
cld
test
pushf
push
pop
scas
lods
lock
sbb
out
out
pop
aas
or
or
test
out
jle
mov
mov
out
add
mov
dec
pop
push
fisttps
pop
test
mov
adc
cmp
sbb
mov
rorl
xor
dec
out
lea
xorb
jle
roll
lds
jle
mov
subl
xchg
xor
lret
loope,pt
mov
mov
mov
inc
xor
gs
fisttpll
adc
bound
mov
lods
jmp
cmp
mov
push
int
mov
dec
mov
aas
pcmpeqw
ja
test
dec
xchg
sbb
pop
je
adc
les
rolb
movsb
and
add
je
loop
push
aas
in
pop
dec
cmpsl
push
in
stos
mov
stc
sarb
stc
push
in
adcl
cmp
loopne
fidivrs
mov
clc
xchg
dec
dec
sbb
jle
or
popl
outsb
mov
loopne
xorl
lret
fmull
outsb
push
push
sbb
pop
nop
scas
adc
push
adc
inc
mov
push
push
int
sarb
repnz
pop
out
into
fsubrs
mov
pop
cmc
scas
dec
test
sub
mov
pop
jecxz
ret
jns
sbb
outsb
insb
loope
movsb
mov
sub
rorb
adc
push
loope
add
std
lds
shlb
push
jle
rcrl
push
mov
test
cmp
xor
sahf
call
ret
test
or
pop
daa
and
jns
inc
xchg
es
sti
push
daa
or
out
push
cmp
inc
in
roll
in
add
cmp
dec
stc
push
dec
mov
cs
outsb
je
aam
rol
inc
push
stos
pop
stos
sbb
test
xchg
popf
pop
gs
sbb
jno
insl
and
js
inc
xchg
lahf
cmp
xchg
mov
inc
pop
rclb
lret
roll
or
loopne
and
adc
das
sbb
jmp
pop
jb
cmp
scas
inc
es
or
dec
and
fldenv
aas
xor
or
xor
repz
pop
rcrb
mov
add
adc
fisubl
pop
sti
sub
test
mov
mov
pop
imul
push
xchg
jecxz
fildll
mov
xchg
gs
mov
and
mov
insl
mov
jg
and
lock
outsb
mov
inc
pop
inc
dec
mov
inc
pop
enter
sub
mov
push
sarl
xchg
es
call
das
jmp
les
fnstenv
push
jno
xchg
push
adc
montmul
cmpsb
inc
jp
imul
es
dec
pop
icebp
xchg
lret
ret
or
mov
cmpsb
push
fstp
test
mov
sbb
xchg
mov
mov
rcll
cld
fisttps
in
dec
jns
adc
ret
cmp
aas
sbb
mov
mov
imul
fbstp
jne
lret
mov
shlb
fs
push
push
in
insl
outsb
div
imul
fcomp
sub
sbb
les
cmpsl
cmpsl
adc
scas
stos
ret
imul
dec
mov
loop
jno
subb
xchg
add
push
mov
call
push
fwait
repnz
jg
je
add
call
jbe
subb
jae
xor
mov
dec
das
sub
push
add
sub
pop
sub
mov
outsl
adc
sbb
shrl
inc
inc
sbb
repz
jmp
pop
out
xlat
inc
nop
cmpsl
mov
inc
arpl
dec
add
in
gs
add
lcall
jno
idiv
in
inc
lahf
and
jo
out
mov
pop
dec
mov
mov
scas
dec
stos
out
lods
add
jne
scas
popa
mov
pop
int3
push
int
xchg
cmp
jae
and
sarb
mov
jle
loope
es
mov
movsb
dec
jbe
test
fwait
mov
aad
push
hlt
sarl
ja
xchg
fcmovb
mov
xor
xor
inc
call
out
inc
es
push
addb
inc
andl
mov
fldt
arpl
aad
xor
or
dec
js
inc
int3
xlat
out
jae
cmp
iret
push
fwait
mov
jns
dec
and
sbb
movsb
dec
rcr
lea
xor
mov
mov
or
push
scas
insl
add
jno
faddp
cwtl
cmpl
and
test
rcrl
fmuls
mov
or
adc
movsb
js
aad
jnp
ja
cli
pop
mov
add
jmp
mov
outsl
sub
fsubrl
leave
sub
jmp
add
fwait
shrl
dec
and
aaa
jmp
shll
dec
or
cmp
xchg
cmp
dec
das
and
xchg
iret
pop
out
lods
adc
jns
jmp
jb
mov
cmp
xor
lcall
add
rcl
fdivr
ret
adcb
sub
mov
pop
lock
jge
test
sbb
sub
jnp
test
jle
psadbw
cmp
or
stos
fcmovne
repnz
cmp
sbb
xchg
push
pop
lea
xrelease
in
and
sub
and
movsl
lret
mov
into
setne
test
cmp
out
and
xor
in
mov
push
xor
shll
push
daa
test
cltd
mov
out
out
test
push
sbb
mov
xchg
add
mov
cmp
lret
jbe
test
dec
push
cmp
aas
cmpsb
inc
sarl
shl
fsubrl
or
jnp
mov
pop
lret
inc
or
adc
sar
out
mov
sub
dec
jnp
rcrl
lods
xor
mov
scas
and
jl
mov
pop
das
xchg
jno
dec
mov
or
pop
cmp
push
jp
sbb
js
stos
addl
push
jnp
mov
xchg
or
in
bound
and
xchg
push
into
inc
cmpsb
loopne
jo
repz
in
mov
push
into
or
cmp
and
outsl
xor
and
push
cmp
mov
adc
inc
movsb
sbb
out
bound
repnz
lret
mov
adc
aam
lock
sarw
das
rclb
inc
or
mov
loope
dec
jae
sub
inc
xor
dec
cmp
mov
out
add
xorb
movb
movsl
out
aad
es
pop
shll
inc
cmp
dec
add
or
aam
pop
push
add
mov
repz
cmp
push
push
or
dec
sub
adc
sub
mov
xchg
mov
push
mov
int3
rcll
lock
test
pop
fldt
rol
cli
hlt
xchg
jmp
mov
xchg
or
fs
push
imul
jno
inc
leave
mov
loopne
clc
addb
addl
loope
out
jno
subl
mov
mov
idivb
sbb
add
into
arpl
adc
xchg
out
mov
xor
stos
int3
cs
push
and
addl
lods
aam
dec
cmpsl
fldenv
call
clc
lock
test
and
add
loope
lock
int
mov
mov
nop
dec
cli
aas
adc
xchg
mov
movsl
das
jne
int
sbb
enter
loop
and
or
lea
adc
dec
leave
adc
inc
loope
adc
repnz
push
inc
dec
push
jl
fcoml
push
pop
mov
push
mov
leave
sub
or
loope
out
cmpsb
bound
xchg
fdivp
iret
je
xor
xorb
das
outsl
or
pop
add
mov
and
jbe
and
mov
cmp
sub
mov
pop
xlat
jmp
fcomps
xchg
scas
jge
movsl
pop
jo
flds
push
add
sbb
decl
cmp
dec
imul
je
test
jo
bound
data16
cmp
xchg
dec
movsl
scas
sarl
cwtl
and
pop
fwait
out
mov
aas
and
orb
mov
scas
jo,pt
int3
pop
cs
cmpsb
incb
mov
jo
cmp
fs
or
jnp
test
ret
enter
insb
pop
mov
shlb
cmp
movsl
enter
stc
cmp
push
pusha
addr16
inc
adc
jl
sub
jp
push
lock
data16
insl
incl
sbb
cmp
je
ds
inc
sub
mov
cmp
movsl
in
fsubl
mov
and
dec
out
loop
ss
xchg
scas
xchg
ss
pop
addr16
in
in
loope
sbb
aas
or
das
jg
fmul
call
pop
sahf
mov
mov
mov
push
sti
mov
jbe
cwtl
aad
xor
cltd
mov
std
ljmp
push
in
mov
es
loope
inc
sub
inc
pop
jno
pop
add
cltd
shrb
adc
push
lret
or
add
icebp
movsl
fwait
mov
scas
or
pop
sti
xor
push
bound
mov
rcrl
imul
jg
cs
mov
pop
sti
test
add
loopne
out
repz
sub
pop
aaa
stos
sbb
push
repz
pusha
cmp
pusha
sarl
sub
inc
loopne
push
out
push
out
add
mov
inc
fistpll
outsl
lock
sub
dec
push
sti
ja
out
xor
and
es
enter
dec
jbe
aad
inc
mov
stos
arpl
push
xor
adc
jne
jecxz
mov
stc
jo
pop
pop
pusha
push
and
push
and
cmp
mov
imul
xor
test
or
sub
mov
fcompl
dec
xchg
fucomip
cmpsb
movsl
icebp
enter
cld
dec
lods
dec
ja
and
fldenv
xor
cmp
das
sub
add
xchg
and
test
jg
lret
cmc
cmp
add
negb
mov
mov
inc
mov
clc
xchg
sbb
mov
sub
adc
cmpsb
cld
lods
lret
notl
and
int
dec
sbb
push
cmp
mov
fsubr
pop
outsb
stos
test
xchg
and
xor
popa
xorl
xchg
add
and
mov
fsubs
and
lcall
fnstcw
scas
lea
dec
adc
mov
js
xor
jne
and
sub
mov
aam
jns
insl
insl
push
rolb
lret
dec
lret
enter
pop
pop
push
flds
push
cmp
adc
das
mov
jbe
rolb
repnz
xchg
shll
in
js
fnstcw
rcll
cmpsl
fmuls
adc
orl
push
inc
add
loop
adc
sbb
test
dec
lock
sub
mov
paddb
cs
cwtl
out
xlat
lods
sbb
pop
subl
cli
cmp
daa
mov
dec
fnstsw
repz
mov
enter
pop
push
sti
and
in
cmp
mov
adc
stc
cmp
sub
inc
and
stos
xor
cmpl
ficomps
cmovb
insb
ja
add
rcll
stc
push
orl
aad
adc
addr16
mov
test
jne
inc
xlat
jp
popa
and
jns
test
cmp
lods
out
ret
add
movsb
mov
shrl
jmp
loopne
test
mov
cmc
popa
inc
lret
rcrl
int3
dec
push
mov
dec
sub
dec
inc
sbb
mov
pop
negl
cmc
sub
add
ss
lcall
js
lds
shlb
andl
sbb
outsl
sbb
inc
and
and
push
add
cmpsb
sub
lea
jmp
xchg
sbb
mov
jno
std
fisubrl
movl
iret
into
adc
pop
pop
punpckhwd
or
clc
and
sub
les
and
ret
lret
orb
enter
loop
in
adcb
fisttpl
inc
add
bound
add
nop
std
xorl
ret
daa
out
push
outsb
fwait
lock
sahf
xchg
dec
dec
in
das
imul
arpl
lret
out
add
adc
nop
mov
aad
push
and
aas
xchg
jmp
jne
pop
xchg
lcall
test
test
ss
repnz
data16
push
or
mov
pop
cs
popf
ja
int3
cmp
leave
push
xor
icebp
mov
cltd
ret
or
mov
push
jbe
add
hlt
lea
inc
addr16
mov
dec
test
clc
and
orl
xchg
repz
fiaddl
or
jg
push
test
imul
sbb
xor
dec
xlat
int
cltd
mov
dec
inc
inc
push
jmp
xchg
arpl
pop
mov
nop
mov
push
int
nop
aad
push
subl
jns
mov
cli
or
pop
cmpsb
nop
sub
mov
dec
pop
inc
adc
pop
sbb
push
inc
test
rcrl
add
negl
pop
aam
push
cmpsb
jl
pop
cmpsb
jae
dec
lret
call
xchg
fwait
js
int
movsb
xchg
movsb
les
add
movsb
leave
sbb
pop
jnp
xchg
pop
cli
movsl
aam
pop
insb
fcmove
jae
cmc
push
pop
xor
pusha
push
xchg
cmpsb
add
lea
pop
and
pop
test
outsl
xor
pop
sahf
mov
into
imul
pop
and
cmpsl
loop
mov
cmp
adc
mov
mov
out
sti
push
xor
push
push
rorb
cmpsl
scas
mov
jns
fisttpl
test
adcl
aad
mov
mov
push
rcll
xchg
fidivrl
push
sbb
ljmp
mov
mov
mov
fs
and
subl
out
dec
lret
mov
or
ret
and
lds
mov
push
in
mull
aas
imul
stos
xor
pusha
add
mov
es
pop
xchg
and
sbb
test
pop
add
pop
mov
in
stos
or
mov
and
cmp
rcll
inc
lret
roll
lock
aam
push
adc
push
dec
jmp
mull
insb
inc
cmp
out
in
cmpsb
xchg
or
aam
test
or
xchg
stos
cmp
xchg
mov
shlb
inc
xchg
xchg
push
imul
ja
and
and
bound
fcompl
enter
std
adc
aaa
fmul
sbb
mov
inc
mov
mov
divb
cmp
sub
fstp
nop
add
imul
xchg
xchg
xchg
jge
out
xchg
dec
xor
dec
mov
cmp
aas
cmova
jecxz
cmp
dec
loop
add
pop
ss
rcll
dec
dec
aam
jecxz
sub
js
call
imul
pop
adc
fsubrl
hlt
loopne
xor
scas
mov
cli
mov
addr16
adc
fstpl
call
sbbb
mov
sbb
dec
in
xor
sbb
jbe
sbb
in
sbb
out
and
icebp
jbe
or
gs
mov
out
dec
pop
dec
les
arpl
mov
ja
or
hlt
pop
dec
push
je
shr
fidivs
cmp
not
inc
ret
cmp
sarb
mov
and
je
dec
in
push
movsl
add
cmp
xchg
notl
mov
push
or
insl
hlt
push
sahf
jle
mov
ja
push
jge
js
push
mov
xor
testb
imul
dec
push
xchg
out
iret
mov
mov
push
loopne
int
adc
mov
cltd
mov
add
pop
in
xchg
inc
dec
cmp
mov
xchg
dec
js
lods
and
loop
adc
lcall
xchg
std
xchg
int
and
cmpsl
mov
je
fnstsw
out
xchg
push
or
inc
iret
lods
sahf
xchg
or
xlat
jno
add
lods
fidivl
ss
aad
jecxz
nop
lds
jnp
jo
sbb
xor
mov
or
and
mov
ret
mov
out
mov
ja
adc
xor
fiadds
cmp
sub
pop
stos
stos
mov
enterw
test
mov
xchg
push
mov
aaa
jmp
nop
dec
lock
mov
adcb
int
mov
xchg
or
test
xchg
int3
aad
adc
aas
adc
data16
mov
push
mov
push
dec
mov
xchg
jno
push
push
mov
and
add
jle
mov
and
sbb
pop
and
adc
push
cmpsl
xor
sub
add
lea
cmp
push
pop
sub
mov
cmp
test
dec
and
mov
cmp
pushf
mov
std
cli
and
sub
in
jmp
or
es
hlt
cwtl
mov
rcll
lahf
xor
inc
int3
insl
adc
test
clc
shrl
hlt
xor
pop
or
ret
mov
mov
sahf
lds
add
in
icebp
mov
mov
clc
dec
lea
fs
leave
dec
movsl
push
daa
cld
add
in
xchg
mov
dec
fdivrs
mov
aam
xchg
mov
into
xor
add
out
mov
dec
add
mov
daa
inc
sub
or
imul
ja
and
mov
push
ficompl
jb
mov
fnstcw
aam
adc
mov
cs
and
test
xchg
cwtl
in
daa
enter
xor
mov
sti
jmp
shll
or
stc
pop
test
aam
dec
imull
mov
pushf
aam
movsl
movsb
in
inc
in
mov
mov
and
jle
mov
dec
mov
lret
push
xchg
pop
cld
xor
jno
xchg
mov
call
test
mov
mov
sbb
jnp
popa
popa
test
adc
pop
mov
push
decl
test
push
xchg
jmp
std
shl
dec
mov
mov
int3
push
push
into
xor
or
mov
insb
data16
pop
mov
jnp
outsl
cmp
mov
aas
cmp
mov
ja
fstpl
jecxz
sub
cmp
lahf
lods
jg
jmp
int3
jmp
lock
lahf
les
inc
data16
mov
popf
pop
mov
sbb
push
xchg
shr
push
or
insb
lods
xchg
sub
mov
inc
adc
shlb
push
cwtl
aas
xor
das
pushf
jge
ret
sbb
mov
dec
mov
jo
lret
movsb
pop
sbb
repz
mov
mov
mov
inc
push
pop
popa
cmpsb
jne
jecxz
xlat
sbb
or
push
lea
dec
pop
movb
das
ret
add
je
sub
mov
shlb
cmp
movsl
adc
hlt
dec
jecxz
sbb
push
sub
mov
mov
insb
mov
pop
mov
jns
jo
mov
cmp
insb
lds
ss
pop
mov
orb
lds
mov
cmp
cmp
jne
jmp
jl
xchg
notl
mov
in
aam
mov
cwtl
xor
es
and
jmp
xor
sbbl
pop
jge
mov
cmpsb
jo
cmc
or
lds
testl
mov
mov
out
xor
pop
push
push
dec
clc
xchg
je
xchg
xor
lret
js
sbb
xor
cmpsl
and
hlt
rcrb
pushf
out
pop
xor
pusha
shrb
mov
mov
int
inc
mov
scas
and
ret
cmpsb
int3
adc
pop
xor
shlb
cmpsl
fs
push
outsl
xchg
daa
mov
sub
sti
dec
paddsb
in
shlb
lock
je
inc
jmp
xchg
mov
mov
add
lret
cs
or
or
rol
mov
adc
sbb
int
jecxz
add
sbb
push
xchg
pop
lods
and
out
popa
add
mov
xor
lea
loopne
push
js
orl
inc
push
test
inc
inc
popf
push
add
test
lret
pop
sarl
insl
jo
push
clc
mov
into
push
push
cld
cmp
lods
pop
fdivl
lret
mov
xor
mov
fildl
fidivrs
push
or
mov
repz
jge
pop
pusha
mov
xchg
mov
es
adc
andb
and
std
daa
and
pop
pushf
fldcw
sub
loop
stos
mov
imul
or
in
push
and
adc
in
mov
jg
inc
jle
mov
out
xlat
xchg
xchg
das
jp
mov
push
inc
sub
xor
lods
mov
stc
mov
pop
arpl
lcall
das
call
arpl
pop
sarl
nop
push
loopne
test
pcmpeqb
sbb
add
push
rolb
test
sub
adc
mov
fisubl
push
push
sbbb
xor
adc
jnp
in
pop
adc
mov
lds
js
subb
sbb
ret
xor
data16
jl
test
lods
add
ret
daa
faddl
sbb
imul
add
jae
mov
jo
mov
stc
sub
imul
mov
gs
mov
jne
push
jns
mov
push
rcrb
popa
outsl
or
lahf
gs
add
push
stc
or
mov
mov
insl
lods
mov
shl
and
repnz
das
out
and
xchg
adc
jge
sbb
jae
and
das
xchg
dec
mov
pop
sub
add
jo
scas
xchg
inc
movzwl
sbb
inc
insb
fs
dec
fimuls
es
shrb
push
push
adc
dec
sub
xchg
fwait
jnp
sbb
loopne
dec
int
imul
cmp
pop
in
and
loop
add
xor
jb
sub
xchg
dec
pop
fisubrs
push
push
lds
mov
notb
xor
mov
sub
nop
dec
ret
imul
add
sub
ss
mov
adc
jns
pop
xchg
adc
test
fildll
outsl
arpl
sub
jne
xchg
pop
push
xchg
push
cltd
leave
sbb
mov
jne
loopne
mov
or
sub
mov
dec
sub
lea
stos
daa
mov
je
dec
lahf
sbb
sub
movsb
leave
js
fwait
jmp
shl
mov
xchg
lea
sub
sub
es
inc
mov
push
adc
inc
pop
stc
mov
adc
jno
inc
imul
sub
ljmp
push
lcall
jmp
jnp
rol
mov
lcall
call
loopne
jne
sbb
xchg
movsb
xchg
pop
cli
dec
jge
in
mov
clc
and
xchg
cmp
call
test
test
adc
pop
or
fisttpll
fbstp
adcl
mov
lea
inc
add
outsl
cltd
pop
jmp
rcll
bound
addr16
pusha
cmpsl
lret
cmp
test
cltd
aam
addr16
pop
mov
sbb
repz
mov
subb
orb
fs
xor
dec
aaa
roll
lret
ds
or
and
xchg
andb
add
xchg
cmp
inc
or
pop
mov
jg
test
add
dec
and
scas
fs
add
mov
inc
adc
test
xchg
push
push
popa
or
fs
movsb
sub
ret
jge
out
insl
pop
pop
mov
mov
push
clc
test
and
adc
cmc
mul
cltd
bound
pop
or
dec
je
sarb
imul
cs
xor
imul
int
jg
sub
mov
cmp
inc
in
adc
and
out
shll
adc
rolb
lret
fiadds
pop
mov
hlt
cmpsb
inc
fbld
adc
roll
jae
inc
add
adc
push
inc
add
nop
stc
and
repz
and
mov
idivb
mov
fistps
pushf
push
lods
xor
lret
jecxz
add
jb
sarl
and
out
sbb
movsl
outsb
fs
jg
jae
or
icebp
movsl
or
ds
aad
mov
cmp
and
pushf
fwait
xlat
std
clc
pop
xchg
addb
out
arpl
cmp
pop
repz
sahf
adc
sahf
outsb
jno
rcll
ret
sbb
mov
es
or
ds
pushf
pop
into
cmp
pop
sbb
xchg
or
test
call
imull
xor
movsb
out
shll
mov
ret
pop
cmp
mulb
hlt
das
gs
and
scas
rorb
imul
pop
les
insl
xchg
cltd
dec
lods
xchg
or
mov
jp
int3
mov
sub
adc
ss
adc
andb
movsb
jne
mov
xchg
sbb
test
dec
dec
mov
outsl
shlb
xor
ss
or
lea
in
shl
pop
insl
push
js
ret
mov
cmpsl
dec
test
lcall
ja
mov
into
adc
pusha
sub
add
push
scas
scas
aas
mov
shlb
dec
in
leave
sti
repnz
pop
cmpb
imul
push
sbb
or
je
xchg
cmc
and
stos
mov
cwtl
pop
repnz
ret
mov
fistpl
movsb
icebp
ljmp
in
cmpsb
aas
repz
popa
pop
mov
or
rcll
insb
adc
fiaddl
jo
je
aad
sub
shrb
push
adc
lret
mov
pushaw
jae
inc
push
cmc
lds
es
jne
cmpsl
out
in
mov
pop
and
and
cmpsb
jnp
stos
les
inc
notb
mov
aas
push
push
call
fs
je
ror
push
mov
inc
xchg
arpl
iret
or
hlt
mov
jge
or
inc
push
xchg
mov
insl
in
dec
sahf
aad
mov
negl
jle
fmull
pop
rorl
aad
int
fdivp
mov
add
pop
pop
mov
xlat
pusha
inc
and
sub
out
dec
xor
cli
ficompl
loop
jno
add
mov
fmuls
and
repnz
push
cltd
jl
ljmp
popf
sahf
cmpsl
sti
daa
xchg
jg
dec
test
add
cs
or
mov
mov
mulb
or
sub
lcall
add
pusha
mov
shr
inc
mov
add
lock
outsb
scas
inc
and
cmp
mov
stos
js
aam
outsl
imul
mov
lcall
mov
mov
call
xchg
jge
rorl
or
or
add
orl
lods
mov
mov
test
jns
pop
xchg
xor
cltd
sub
cmc
xor
out
dec
push
test
cmpsl
popa
cli
in
mov
cmpsl
test
push
out
jp
icebp
test
push
cld
inc
loope
add
mov
cli
shrb
pop
nop
in
xchg
inc
aad
loope
std
jge
push
lods
jp
popa
adc
inc
lret
aad
mov
adc
cmp
mov
imul
fisubs
push
roll
pop
and
push
xchg
es
jmp
pushf
mov
lods
out
imul
fisubrs
sarl
sbb
sub
out
arpl
imul
xor
push
loopne
mov
into
popa
cmovbe
rcrb
mull
aas
xchg
cmc
jge
push
gs
out
inc
lcall
pop
lock
inc
cmp
pop
jge
xchg
call
popf
cmp
jecxz
xchg
fldenv
lea
in
insl
mov
push
adc
jmp
test
outsb
jne
dec
pop
xchg
xchg
lahf
xchg
rorb
pop
fwait
sbb
pop
dec
out
sbb
ficomps
dec
push
repz
in
mov
fmuls
shrl
insb
idivb
out
push
fimull
out
jmp
ss
pop
pop
mov
into
sub
stos
hlt
fnstsw
mov
jbe
mov
dec
aad
add
push
add
jle
sbb
mov
inc
push
mov
scas
mov
into
and
dec
mov
adc
fldz
xchg
push
fcmovne
adc
call
fsub
lret
xchg
dec
inc
shl
sub
xor
jg
cwtl
push
gs
push
add
push
inc
fwait
popa
ficoml
gs
inc
andl
mov
add
xchg
sar
pop
xchg
nop
pop
cmpsb
dec
cltd
in
je
loope
fcom
fmuls
mov
mov
mov
cmpsl
imul
outsl
pop
mov
cld
cmp
dec
add
out
nop
mov
sti
arpl
in
xor
xchg
daa
fistpll
add
mov
hlt
data16
jno
les
sub
enter
jns
xchg
aam
int
ss
or
pop
mov
mov
cmpsb
jl
sub
adc
repz
dec
incb
inc
ficoml
aam
push
scas
pop
fisubrs
mov
into
and
stc
cmp
xchg
daa
jge
test
test
fst
lods
push
sub
mov
mulb
fimuls
cmpb
mov
das
pusha
or
lea
repz
xchg
ljmp
fsubrl
sub
sbb
sahf
inc
out
movsl
pop
fcmovne
mov
les
lds
imul
lods
fstl
mov
mov
push
add
xor
cmpsl
enter
shr
aaa
cs
xor
lret
loope
mov
pop
push
mov
add
cmp
xchg
pop
xchg
test
adc
add
outsl
cli
xchg
int3
pop
cld
and
push
je
push
and
xlat
sbb
orl
stc
mov
mov
push
into
mov
clc
daa
jle
enter
aam
je
ret
rep
sbb
repz
push
lock
lahf
insl
shll
mov
outsl
xchg
mov
fidivrl
mov
jnp
int3
das
mov
cli
sbb
popf
adc
cmpb
test
dec
inc
pop
push
mov
lds
je
or
rorb
xchg
mov
dec
nop
pop
jmp
sbb
movsl
dec
cmp
popf
and
popf
les
clc
cmp
fsubr
movsb
and
leave
fidivs
imul
imul
sahf
cmp
enter
dec
cmc
inc
sbb
dec
xchg
lock
mov
mov
pop
pop
or
push
and
scas
pop
test
cmp
in
or
les
mov
aaa
pop
push
out
sub
lock
iret
add
shll
mov
test
lcall
mov
rcl
jg
sbb
in
jns
mov
push
sub
sbb
call
push
fildl
pop
loope
or
cmp
test
sub
inc
aad
and
dec
pop
pop
dec
mov
jge
outsb
out
adc
daa
and
push
in
mov
fcomp
pop
inc
xor
mov
pop
lds
push
mov
int3
pop
cmp
in
push
dec
lods
jb
loop
je
adc
icebp
jne
and
or
sbb
pop
or
dec
jno
cmp
sbb
xchg
pop
inc
jae
shll
daa
jne
fiadds
push
lods
scas
jp
adc
and
pop
test
je
subb
mov
pop
shlb
loop
cmpsb
ljmp
out
shl
cmc
bound
sbb
popf
out
mov
pop
adc
sbb
hlt
jp
or
push
imul
mov
adc
fs
cltd
mov
cmpsl
jno
mov
dec
cld
dec
nop
popf
dec
push
xchg
cmpsb
roll
jle
mov
dec
jp
mov
popa
test
inc
insb
in
popf
mov
shlb
push
je
lahf
push
int
aaa
inc
js
fistpl
or
in
ror
pop
test
shll
adc
outsb
add
mov
cmp
mov
repz
xor
pusha
mov
mov
fbstp
jnp
mov
mov
fisttpll
jo
pop
lea
push
cld
push
xor
fistl
aaa
adc
pop
jecxz
out
jmp
inc
sbb
pop
enter
xchg
inc
ljmp
fstp
sahf
sbb
pop
out
dec
adc
mov
clc
mov
mov
jge
in
test
or
xor
outsb
arpl
push
push
or
cmp
jae
adc
cli
je
stos
or
fs
fucomp
pop
out
mov
lods
or
pop
test
push
and
stos
ret
add
popa
xchg
inc
aad
mov
les
xlat
ds
dec
test
bound
push
repnz
out
je
pop
loopne
into
pop
ljmp
mov
aaa
or
jmp
jmp
jl
adc
bound
clc
mov
adc
sbbb
or
xchg
repnz
loop
cmp
in
or
mov
sub
out
inc
add
das
cs
pushf
mov
lods
arpl
inc
xchg
les
mov
sub
add
cmp
ja
push
test
and
into
sar
les
scas
or
push
dec
dec
fists
pop
psllw
jle
mov
add
popf
xor
insl
cmpsb
mov
sbb
and
cmpsl
mov
les
xchg
xchg
pop
pop
xchg
hlt
fwait
or
loope
adc
sbb
mov
xor
pop
xlat
jecxz
mov
dec
rorb
xchg
mov
in
pop
mov
out
add
aad
pop
push
mov
adc
add
popl
enter
mov
push
lcall
cmp
cs
sbb
mov
jae
adc
add
add
mov
movsl
mov
mov
cmp
pop
repz
mov
mov
pop
fs
popf
sti
mov
mov
dec
xor
cltd
adcb
pop
pusha
add
push
add
mov
ret
dec
xchg
daa
xor
inc
out
or
cmp
xchg
pop
in
pop
ret
sahf
in
mov
stc
orb
mov
pop
lea
aas
inc
mul
xor
pop
insb
sti
mov
cld
pop
jg
sahf
mov
inc
dec
mov
std
sbb
cmc
in
je
dec
cmc
jno
sbb
fidivrl
ds
scas
jno
mov
pop
imul
outsl
adc
cmpsl
test
addr16
sbb
lret
sbb
rcr
mov
add
sbb
mov
xor
ja
dec
loop
ljmp
inc
xchg
push
push
es
jae
jne
fdivrl
or
xor
mov
mov
and
js
clc
jae
ja
push
clc
pop
ret
aas
or
js
xchg
repnz
pop
cltd
cwtl
lret
xlat
sbb
lea
and
rcrl
jns
pop
pop
dec
push
int
and
adc
nop
ret
fs
sahf
xor
dec
movsl
cli
les
loopne
int
sub
sti
jne
ret
jae
notl
dec
repnz
lods
ret
mov
ss
pop
and
inc
negl
pusha
xchg
iret
sub
push
mov
les
xchg
sahf
xchg
sub
push
jbe
enter
adc
mov
mov
fmul
rol
test
sub
pop
xor
and
adc
push
sub
jae
ss
jp
imul
sub
xchg
mov
imul
jbe
push
test
push
test
jp
push
push
cmp
jecxz
mov
andl
jecxz
out
sub
xor
mov
and
and
and
and
out
dec
mov
out
xchg
dec
out
adc
arpl
ja
jmp
adc
sub
outsl
cmp
scas
gs
adc
lret
adc
insl
ljmp
sub
inc
mov
and
lcall
aaa
sbb
roll
mov
mov
dec
pop
fisubrl
mov
pusha
inc
xchg
rcll
sbb
movsl
mov
cmp
mov
mov
pop
test
lods
jmp
xor
and
je
pop
and
leave
inc
add
lods
cmp
inc
sub
jg
mov
add
add
lock
sub
xchg
jmp
popa
test
repnz
repnz
rol
lret
fistpl
pop
mov
or
stos
xchg
mov
outsb
push
fwait
jl
cmc
scas
mov
es
add
movsb
jecxz
jbe
mov
sbb
mov
jo
xchg
xchg
push
pusha
and
mov
cmp
out
jnp
sbb
mov
push
icebp
pop
xor
cmp
pop
dec
jnp
xchg
inc
ficomps
mov
xor
mov
pop
mov
jns
inc
xchg
lret
mov
adc
nop
pop
push
add
mov
mov
dec
push
bound
jne
jp
push
or
mov
insb
xchg
icebp
mov
or
dec
fidivrs
xor
fcomps
mov
add
xor
ja
std
mov
mov
adc
ja
lods
add
push
add
dec
arpl
stc
movsl
dec
sbb
js
push
push
lcall
jp
aaa
xor
xchg
xchg
iret
test
pop
in
mov
lret
int
mov
pop
stos
mov
rep
xor
je
rcr
inc
jno
dec
jae
cmp
mov
cmp
sub
pop
and
mov
sbb
mov
adc
xorb
ja
adc
adc
push
test
scas
in
aas
push
loope
xlat
cmpsb
dec
dec
pop
sbb
divl
in
add
lods
and
mov
jge
enter
imul
out
scas
jmp
aas
enter
arpl
cmp
adc
shll
stos
fs
ret
xchg
mov
jl
popf
ja
inc
dec
jp
sbb
or
jg
inc
movsb
je
pusha
cwtl
into
pop
je
add
dec
add
cs
jle
or
push
sti
data16
jle
pop
out
xchg
call
push
inc
movsb
mov
sub
out
jg
fisubrs
or
iret
pop
jbe
dec
mov
xor
das
xchg
dec
cmp
ret
jns
push
lahf
bound
inc
fidivrl
pop
sahf
in
adc
movb
iret
xchg
test
mov
jo
jp
es
add
imul
xor
stos
xchg
cmp
pop
test
xor
ret
sub
das
jnp
fsubs
xor
int3
push
xor
and
mov
mov
or
jne
cld
lret
lods
inc
or
test
dec
inc
mov
jo
mov
ja
pop
adcb
jne
mov
in
mov
push
sub
stos
movsl
lret
daa
in
cmp
inc
outsb
jns
mov
push
ret
sbb
sub
mov
pop
lcall
xchg
lods
loopne
jmp
out
fcmovnu
shrl
dec
sbb
in
mov
popf
jns
or
mov
aad
movsb
push
xlat
lahf
stc
das
jmp
aam
leave
add
mov
clc
add
cwtl
leave
jl
outsb
cltd
cmp
or
repnz
lret
arpl
xchg
xchg
aam
sbb
or
mov
rolb
cli
dec
stos
out
pop
jae
stos
add
cwtl
mov
and
jle
push
repnz
pushf
lahf
dec
push
arpl
fs
mov
mov
scas
xchg
and
int
xchg
jg
push
push
xchg
or
xor
iret
fisttpll
aas
jge
in
xlat
ds
push
push
mov
push
xchg
push
sub
inc
es
int3
test
or
and
popa
mov
inc
movb
test
inc
mov
loope
xchg
stos
mov
and
or
mov
dec
aad
cli
cmp
pop
lods
dec
jl
mov
add
add
push
stos
dec
mov
dec
negl
stos
push
and
jmp
ret
adcl
pop
push
jo
jle
nop
fnstenv
das
dec
xor
movaps
pop
and
adc
xchg
cmp
mov
and
mov
sti
xchg
sub
cmpsl
je
lcall
mov
sbb
xchg
mov
idivb
ss
repnz
cmp
data16
lods
cmc
xor
outsb
insb
pop
mov
fcmovne
imulb
mov
mov
shl
xor
stc
push
test
mov
pushf
cmpsb
lods
and
xchg
sub
out
inc
xor
jmp
aad
and
shll
fsubrs
and
leave
jnp
movsl
mov
add
jg
adc
push
addr16
mov
nop
iret
jl
and
fs
icebp
data16
add
and
out
into
ja
jno
xlat
push
lret
xchg
mul
ja
mov
sbb
icebp
stos
out
stos
or
push
dec
data16
popa
inc
jmp
jns
ss
jnp
dec
push
imul
inc
xchg
repz
push
jecxz
adc
sub
addb
das
std
push
xchg
jg
xchg
jp
jno
pop
adc
dec
in
inc
jmp
dec
int
xchg
add
lods
mov
and
cmp
xchg
mov
pop
daa
push
in
push
pop
stos
push
push
lock
out
das
add
out
mov
rolb
xchg
daa
mov
sbb
imul
pop
mov
adc
xor
and
movsb
mov
add
mov
push
out
mov
lret
mov
in
dec
mov
iret
clc
ficoml
lahf
xor
jnp
adc
loop
pop
sbb
mov
push
fists
or
fisubrs
mov
lds
push
testl
ds
inc
cwtl
add
xchg
fists
dec
and
xchg
mov
pop
in
pushf
stos
add
mulb
pop
fnstsw
dec
mov
sahf
lods
mov
aas
push
imul
aam
and
cltd
daa
mov
add
pop
test
xlat
and
call
xchg
sub
shr
enter
nop
sub
or
adc
es
stos
out
mov
inc
movsl
imul
sbb
icebp
push
lock
sub
xchg
jnp
sbb
add
mov
sub
out
sub
xchg
xlat
cmp
das
jb
sbbl
push
jns
lods
ss
and
fists
pop
nop
cwtl
adc
push
jb
inc
insb
xor
pop
je
ror
clc
cmpsb
daa
stos
fisubrs
mov
fistpll
into
lds
or
negb
jmp
cmpsb
movsb
push
mov
mov
insb
movsl
push
push
das
dec
gs
shrl
jge
jmp
popf
sub
xacquire
movsb
cld
aad
cmp
and
sub
les
jae
push
cmp
and
sti
or
adc
testb
pop
cs
sub
fs
lock
and
push
mov
iret
jno
stos
ret
testl
outsb
dec
aad
or
xor
loope
testb
stos
cli
incb
daa
cmpsl
fdivp
test
out
lods
js
inc
xchg
jle
inc
xor
inc
cmp
mov
movsl
frstor
lods
mov
ds
xchg
dec
pop
jne
xor
push
std
sbb
adc
jae
xchg
xchg
fsubrp
mov
aaa
mov
mov
cwtl
pop
orb
push
add
pop
jo
data16
xchg
mov
adc
or
push
mov
sti
add
fistl
push
xlat
fdivs
adc
mov
inc
jo
arpl
mov
push
add
ret
pop
daa
sbbb
in
imull
xchg
loop
in
ficoml
fisubrl
sti
sub
mov
ret
xchg
je
scas
sbb
cmc
dec
dec
pop
les
or
cmpsl
add
xor
xor
pop
jle
mov
in
jmp
jnp
sahf
lea
pop
sub
mov
ds
repnz
jno
movsb
add
mov
and
shl
mov
xor
xor
cmp
js
mov
aam
jge
xor
and
xchg
push
scas
and
fidivrs
dec
js
sub
cmp
pop
dec
fildl
lock
sub
dec
orl
push
test
inc
daa
cmp
in
rorl
aad
lret
arpl
inc
out
mov
scas
roll
stos
adc
leave
cmp
aas
pusha
xor
cli
cmp
mov
mov
pand
rcr
out
insl
js
pop
xchg
testb
out
fistpl
popa
dec
pusha
push
rcrl
add
push
sbb
jne
fcoml
sahf
push
mov
add
mov
test
js
stos
sbb
add
shl
leave
addr16
dec
mov
push
sarb
arpl
in
mov
fwait
jp
sub
je
or
jae
add
mov
stos
in
jb
pop
or
scas
out
stc
lret
es
mov
or
mov
js
jl
jle
ss
in
clc
addr16
lret
jo
ja
lods
stos
cmp
popa
inc
daa
outsb
hlt
xor
push
or
adc
jg
xor
ds
xchg
or
lahf
bound
ja
lret
xor
mov
das
jg
scas
dec
repnz
cmpsl
test
clc
fbstp
cmp
mov
or
scas
jecxz
mov
mov
idivl
repz
cmp
fs
cmp
addr16
or
and
shll
in
addr16
push
cs
lock
mov
mov
jno
fldt
cmp
or
test
mov
and
inc
fwait
jmp
movsl
or
flds
fiaddl
mov
ss
movsb
sti
pop
jge
sbb
data16
xor
stos
mov
in
outsl
xor
xchg
mov
jne
rcrl
xchg
das
movsl
in
push
repz
ficomps
mov
pop
add
and
fidivrl
push
lods
int
xchg
test
and
or
cmc
and
or
mov
xchg
mov
xchg
mov
pop
and
add
loopne
jle
fdiv
push
push
mov
mov
and
into
mov
shlb
leave
mov
daa
faddp
repnz
lret
clc
sbb
xchg
aad
lds
push
mov
push
push
sbb
call
data16
dec
inc
add
push
push
aad
in
push
bound
push
mov
ja
insl
or
adc
pop
aad
jecxz
mov
cwtl
notl
ljmp
loop
out
stos
int
leave
push
shll
jno
cld
sahf
push
mov
call
and
mov
push
imul
orl
pop
arpl
negl
addr16
dec
popf
pop
pop
add
mov
daa
xchg
dec
and
sub
xor
dec
test
add
sub
sbb
xchg
pop
pop
and
xchg
mov
add
add
or
mov
out
mov
cmp
lods
jg
sub
pop
pop
xchg
lret
mov
jle
cmp
xor
subb
ja
jo
stos
jnp
jecxz
fnstsw
xchg
xchg
xor
outsl
jae
pop
sub
cmp
lock
xor
jb
test
mov
push
pop
and
dec
mov
or
mov
leave
cs
loopne
call
mov
or
mov
int
mov
loopne
clc
sbb
jne
imul
inc
mov
xor
bound
rclb
dec
add
in
decb
adc
pop
into
inc
sub
push
cmp
xor
in
pop
je
jns
add
sub
lods
xor
add
sti
fsubl
xor
or
or
add
repz
outsl
das
bound
jg
push
mov
fadds
sbb
std
push
in
test
rclb
push
cmpsl
push
cmp
lods
jns
cmp
test
and
mov
movsb
loope
xchg
cmp
jmp
nop
xorl
sbb
or
out
mov
and
mov
cltd
repz
inc
xlat
ss
mov
lds
decb
lock
out
jne
sub
js
jnp
jl
fnstenv
or
and
mov
in
mov
cld
andl
sub
out
add
dec
ret
ss
cmp
and
iret
push
xchg
xor
inc
push
mov
rclw
pop
into
andl
into
fstpl
pop
aaa
push
fnstcw
pushf
out
mov
sahf
lahf
xchg
jb
andl
out
repz
xchg
inc
inc
cltd
push
pop
adc
fs
xlat
outsb
jg
push
pop
bound
imul
xchg
clc
xor
inc
sub
xchg
lods
inc
popa
push
and
xchg
mov
inc
pop
push
xchg
jno
js
ficoml
jo
xchg
mov
rcll
and
iret
adc
lahf
lret
xchg
sbb
sub
movsl
repnz
leave
lock
jns
int3
jge,pn
xchg
les
into
xorl
fnstcw
nop
and
out
add
adc
cmp
jmp
jecxz
xor
pusha
pop
pop
cwtl
inc
lahf
cmovp
pop
mov
jl
rcr
arpl
sbb
enter
mov
ret
pcmpgtw
jge
or
ljmp
pushf
add
stc
scas
and
push
dec
ss
fldt
scas
mov
inc
rclb
sbb
fldt
cltd
pop
in
lcall
pop
sbb
adc
cmp
sbb
je
mov
je
clc
cld
daa
aaa
test
insb
pop
not
cltd
sarb
fnstcw
mov
sbb
or
mov
int3
in
or
push
lods
add
pmaddwd
xor
stos
scas
inc
push
shrl
jmp
gs
and
dec
adc
and
dec
add
rorl
fdivs
push
imul
cli
sub
adc
outsb
inc
add
push
mov
mov
push
and
aad
sbb
mov
add
int
imul
in
popa
ljmp
mov
testl
push
xchg
inc
pop
test
xor
aam
nop
iret
jb
enter
adc
mov
jge
xchg
add
jmp
dec
pop
push
sub
arpl
stc
sub
add
inc
aaa
mov
adcl
xor
mov
into
and
pushf
sub
mov
fidivs
mov
pop
pusha
cld
xor
dec
xchg
xchg
ljmp
js
dec
xor
sub
movsl
leave
cmpsl
shlb
dec
xchg
push
cmp
pop
in
outsl
and
in
mov
inc
cs
sbb
mov
ljmp
and
shll
sti
movsl
lahf
cmc
cwtl
mov
insl
mov
adc
inc
or
sbb
sar
insb
repz
mov
mov
jmp
mov
inc
mov
imul
mov
ret
push
inc
out
arpl
inc
sub
and
paddsb
test
int
mov
inc
jg
mov
inc
pusha
in
mov
incl
adc
addr16
insb
pop
shlb
fwait
lret
sbb
repz
js
mov
add
jg
adc
and
imul
sbb
cmp
in
mov
fisttpll
jne
mov
repz
mov
rcrb
jo
cmp
sbb
mov
in
push
sar
mov
dec
adc
pop
cmp
mov
lahf
add
or
cmp
dec
shll
cmc
adc
sbb
xor
cmp
cmp
cmp
sbb
push
pop
fs
cmp
push
inc
out
cmp
mov
dec
add
xchg
add
push
dec
mov
fwait
aad
dec
ffreep
out
leave
sbb
das
and
pop
inc
mov
loope
mov
lods
xchg
pusha
cld
sbb
filds
xorl
test
jle
fwait
out
xchg
test
inc
cmc
rorl
sub
fld
inc
xor
add
adc
test
mov
aas
rorb
xor
pusha
shlb
scas
test
pop
shrb
popa
arpl
dec
or
mov
mov
ljmp
sub
cltd
rolb
sbb
jnp
imul
fsubs
ret
insl
int3
push
popa
nop
push
fistpl
jnp
outsl
mov
sbb
jno
dec
jno
add
cwtl
outsl
xchg
jmp
arpl
push
imul
sbb
xchg
stos
popf
add
and
addr16
cmp
jmp
outsl
push
cmp
sbb
mov
fdivl
push
sub
outsl
jb
or
add
int3
dec
loope
jecxz
mov
mov
mov
cmpsb
inc
add
addl
mov
xchg
mov
jmp
mov
mov
add
and
mov
in
inc
aam
std
pop
pop
jne
jp
xchg
and
roll
fs
inc
mov
negl
fldcw
adc
repnz
aaa
add
lret
test
aas
in
xchg
sub
insl
fdiv
ljmp
imul
xchg
sub
mov
push
sub
push
or
jae
jg
aam
sub
mov
fwait
add
clc
cmpl
xor
pop
stos
pop
stos
shrl
or
arpl
loop
jl
or
loopne
shlb
xor
es
sub
insl
add
aad
aam
and
gs
dec
sbb
cmpsl
add
shll
pop
sub
ret
clc
mov
add
xor
sbb
mov
and
push
ds
adc
and
paddw
test
sbb
jecxz
jl
lods
repnz
movaps
stc
sub
xor
mov
add
shrb
pop
stc
ret
jo
xor
sub
lret
dec
pop
scas
adc
loope
or
or
mov
ljmp
scas
jae
inc
stos
mov
mov
xor
in
jl
push
xor
inc
shll
sub
pop
call
add
aad
xchg
xchg
das
xacquire
in
fnstcw
mov
not
xchg
shl
pop
cmp
lods
mov
iret
lods
cmp
cmp
jl
and
push
stos
push
and
pop
lods
mov
ficomps
outsl
inc
adc
mov
jne
dec
adc
jnp
sbb
jmp
in
jl
mov
push
or
fidivs
pop
shl
pop
popf
test
mov
repnz
push
or
sub
mov
and
mov
mov
inc
push
movsl
add
fcoml
sbb
xor
xchg
sbb
inc
dec
dec
jecxz
lret
and
ret
cmp
stos
push
cmp
out
mov
mov
xchg
push
mov
dec
mov
clc
scas
push
inc
mov
stc
fstps
push
fucomp
push
mov
dec
out
inc
inc
faddl
pop
jp
call
and
adc
jp
xchg
mov
mov
and
aas
ljmp
daa
mov
xor
sub
jne
jno
jle
cmpsb
mov
add
cmpsl
test
pop
push
repz
jge
xor
cmpsl
movsl
add
sub
mov
fistps
imul
xchg
mov
mov
fs
aas
dec
sbb
and
ds
mov
test
cmpb
or
movsb
scas
sub
xor
cmp
aaa
daa
mov
icebp
call
clc
sbb
dec
jae
cmpsb
mov
cmpsb
cmp
push
call
xchg
xchg
cmp
push
and
sub
jb
lds
dec
and
xchg
out
les
lds
cltd
mov
shlb
xlat
dec
out
cmpsb
stos
jnp
pop
push
xor
mov
dec
inc
lret
ljmp
add
daa
or
in
cmpsl
push
mov
aaa
in
pusha
iret
xchg
shl
mov
subb
mov
out
sub
nop
inc
mov
adcl
int3
lods
fcoml
jnp
aas
adc
sbb
jno
cmp
push
pop
imul
xchg
inc
fcompl
adc
ret
inc
fwait
pop
mov
insb
dec
ljmp
int
dec
repnz
xor
sbb
push
ljmp
mov
pop
sar
ss
jo
mov
rolb
push
cmp
mov
cmp
adc
scas
inc
and
enter
mov
xchg
adc
add
movsb
dec
and
mov
push
inc
mov
mov
test
or
sbb
lock
adc
shlb
rol
add
popa
cmp
mov
push
mov
rcr
stos
imul
test
sbb
adc
dec
data16
mov
mov
popa
xchg
fwait
xor
mov
mov
jo
mov
lds
push
jae
je
push
pop
sti
andb
cli
loop
scas
add
fisubl
nop
js
lock
push
arpl
sub
and
outsb
push
xchg
push
in
or
ret
push
mov
ret
inc
xchg
hlt
xchg
pop
movsl
mov
sbbb
cli
inc
ret
test
dec
inc
rcr
mov
nop
aad
iret
xor
mov
stos
iret
adc
ret
cld
mov
es
push
xchg
cmpsb
push
cmp
and
aas
bound
ljmp
jbe
lcall
mov
and
scas
mov
stos
inc
test
mov
push
das
sahf
add
je
push
mov
rclb
lahf
sub
mov
mov
mov
sub
mov
dec
sub
add
inc
mov
sub
inc
jg
xchg
popa
ret
dec
sub
test
loopne
cmp
jg
and
fiaddl
jle
push
sbb
test
adc
frstor
and
mov
jmp
dec
sbb
jp
je
mov
jns
mov
and
out
shrl
adc
jmp
cmc
inc
mov
fwait
into
daa
or
shll
xchg
inc
push
push
jl
fwait
adc
and
aaa
pop
xor
push
mov
cmpsl
lds
xchg
xchg
cli
and
loopne
imul
scas
mov
xchg
nop
icebp
in
push
sti
outsb
out
mov
push
dec
inc
xor
mov
lcall
xor
add
or
mov
psrld
mov
push
pop
movsb
mov
rcrb
in
mov
mov
xlat
add
cltd
filds
cmp
cltd
iret
out
sub
or
jp
lret
or
cmpsl
sub
addb
dec
jbe
push
cmpsb
notb
stos
mov
inc
mov
xchg
and
daa
sbb
inc
lret
adc
inc
sub
lret
xor
cmp
lds
xchg
push
movd
cmp
xchg
fidivrs
pusha
cmp
pop
sub
fcmovnbe
cmp
xchg
push
adc
cmp
lcall
sbb
and
dec
test
fldt
movsb
outsl
das
xchg
cmp
sub
xlat
test
aam
bnd
sbb
loopne
mov
popa
sub
mov
les
ret
mov
fistps
testl
mov
movlps
aas
pop
fimuls
xor
and
rcrl
inc
das
int
and
outsl
or
cmp
inc
jg
mov
mov
inc
mov
jb
call
sub
mov
fldt
sbb
xorl
mov
inc
leave
jns
cmc
std
daa
inc
test
xchg
push
adc
xor
scas
popf
dec
cwtl
rorb
or
inc
sub
add
js
hlt
fcomps
push
jb
int
and
jnp
push
daa
mov
mov
push
push
mov
adc
lret
fdivrs
or
cmpsb
int
mov
jo
popl
je
inc
rorl
xor
mov
pop
jb
cmp
inc
mov
mov
xor
dec
insl
add
add
call
push
or
push
cmpb
pop
dec
cmpsl
sub
outsb
lret
testb
xor
pushf
int3
les
inc
dec
mov
mov
loope
adc
loopne
mov
mov
xchg
pop
mov
mov
pusha
in
aam
mov
dec
hlt
adc
mov
sub
and
pop
xchg
dec
in
inc
fcompl
sub
push
sahf
out
std
imul
dec
ret
in
and
adc
dec
lds
jbe
ljmp
sub
adc
testb
test
inc
pop
pop
xor
pop
jns
packsswb
outsb
aaa
xorl
lcall
scas
icebp
jns
sub
je
xor
sbb
pop
mov
call
aad
xchg
inc
dec
cmc
jno
ja
sub
mov
imul
je
cltd
jns
subl
pop
cltd
and
enter
dec
push
dec
in
push
jnp
cmp
push
sub
cmp
rorb
jne
gs
lods
or
jecxz
xchg
cmp
insl
xchg
notl
and
out
int
mov
dec
push
sub
aad
repz
mov
dec
outsl
repnz
and
std
aad
and
or
or
gs
dec
call
push
cmp
jle
jmp
js
int
out
cltd
or
jb
rcl
mov
int
xchg
sbb
out
mov
cld
mov
inc
out
push
ret
sbb
lods
mov
sbb
xor
cmp
fists
dec
ficoml
adc
cli
negl
shr
outsb
jno
dec
cwtl
std
aaa
sub
add
inc
clc
mov
mov
sbb
imull
mov
lds
and
sti
out
mov
lods
cmp
das
mov
das
xor
push
and
scas
pop
test
lea
lcall
mov
repnz
ret
cmp
dec
outsb
psubw
lods
inc
int
mov
dec
mov
xlat
bound
or
insl
lea
xchg
in
push
cmp
nop
push
movsl
cmp
mov
inc
test
test
loop
xchg
aam
pop
das
sub
orl
xor
int3
add
mov
cs
or
push
jb
loop
ljmp
mov
dec
test
ds
sub
xor
cmc
xor
arpl
cmpsl
mov
mov
xchg
aas
inc
mull
mov
pop
sub
into
push
dec
and
push
xchg
adc
push
out
or
pop
mov
jg
xchg
jmp
popa
jp
cmp
stos
jb
stos
pop
pop
push
cmp
mov
dec
push
pop
and
in
int
stc
imull
dec
jecxz
jmp
test
mov
push
inc
xchg
jl
cmc
sub
aas
fsubl
repz
mov
mov
sbb
cmc
inc
call
mov
jmp
fwait
mov
stos
or
int
push
dec
pop
push
movsb
mov
incl
push
pop
lret
movsl
mov
cmp
cwtl
jno
sbb
and
sub
les
and
in
inc
insl
xor
mov
dec
mov
jnp
pop
mov
lock
cltd
pop
mov
movsl
popf
jecxz
rolb
lods
out
mov
shlb
mov
insl
add
adc
rorl
dec
push
lods
js
push
nop
sbb
jne
xrelease
and
out
push
cs
mov
jae
fidivrs
adc
clc
adc
dec
cs
jg
and
mov
in
mov
inc
fisttpll
push
mov
mov
dec
jb
jmp
fstpl
sub
xor
push
push
sub
in
cmpsb
hlt
addr16
imul
sbb
sbb
incl
dec
testl
jo
stos
shlb
ja
icebp
int
std
frstor
int
mov
das
scas
out
pusha
in
mov
outsb
scas
inc
adc
and
pop
arpl
push
std
xor
pushf
push
or
mov
inc
cmpsl
sbb
test
push
fs
jle
jmp
jne
cmp
gs
jle
ret
int3
mov
lea
inc
cmp
mov
mov
ror
adc
push
loope
pop
mov
test
out
adc
inc
gs
sarb
ljmp
inc
les
xlat
jne
push
ficompl
adc
add
sbb
test
in
mov
add
scas
mov
mov
cmpl
out
ja
fadds
add
jne
fsubr
xchg
inc
and
dec
shrb
push
lret
sbb
jmp
insw
mov
push
sub
mov
mov
daa
pushf
pop
js
push
and
adc
js
inc
sbb
imul
repz
add
jnp
sbb
lds
sub
add
adc
cmpsb
out
div
outsl
rcrb
jno
inc
jecxz
push
dec
mov
test
les
or
int
loopne
rcrb
adc
stos
lds
or
iret
adc
xor
sub
pop
sub
gs
sbb
mov
or
add
and
mov
jp
popa
add
movsb
mov
sbbb
pop
cmp
pop
push
inc
mov
pop
mov
xchg
lcall
mov
jae
push
pop
xor
loopne
mov
into
and
xchg
add
and
sarl
mov
jle
or
push
inc
sub
add
add
pop
mov
lret
das
pop
push
lods
adc
xor
aam
clc
inc
ds
sahf
cld
and
nop
cmp
js
mov
test
xchg
loopne
movsl
add
pop
push
push
inc
rcrl
sbb
in
jno
jne
cld
adc
or
sbb
and
cmpsb
inc
stc
imul
add
push
shlb
inc
imul
add
neg
mov
outsl
mov
cmp
xor
aam
inc
mov
aam
mov
ds
sbb
pop
nop
pushf
cmc
arpl
cmp
sbb
inc
pusha
lock
cmp
ret
movsb
mov
fildll
popa
mov
jecxz
mov
sarb
fwait
in
add
cli
jo
loopne
pop
sbb
aas
inc
in
ret
or
pop
stos
aaa
int3
dec
mov
outsb
xchg
or
movsb
arpl
in
dec
aaa
cltd
out
pop
rorb
sbb
movsl
pop
push
imul
iret
add
out
mov
push
push
movsl
inc
and
fs
rol
mov
and
jne
arpl
aas
mov
dec
adc
es
sub
je
fimull
inc
cwtl
lcall
fstps
dec
mov
pop
call
sub
int
adc
mov
push
adc
cli
rorw
pop
jp
sbb
loopne
jnp
pop
jle
lahf
fwait
ret
inc
popl
adc
push
xlat
orl
dec
push
inc
aaa
jecxz
scas
add
dec
mov
pop
int3
mov
inc
repnz
cmp
fwait
setg
xchg
ret
loope
lods
xchg
fidivs
push
sti
in
and
mov
and
adc
sbb
and
cmp
outsb
pop
sub
inc
mov
mov
outsl
dec
repz
les
add
into
lea
cmpsb
push
jmp
push
push
outsl
jns
push
xchg
jne
xchg
add
insl
xorl
loop
sbb
cmp
pop
xchg
pop
loop
pushf
aam
mul
pop
cwtl
jg
out
xchg
xchg
mov
and
fisubrs
into
fisttpl
addr16
ja
dec
inc
cmp
mov
inc
or
dec
imul
add
pop
xchg
sbb
and
pop
pop
xor
out
shr
notb
push
sub
shlb
es
pop
enter
inc
push
xchg
pop
mov
dec
subl
lock
arpl
gs
pandn
into
mov
lret
outsb
sbb
int3
push
cli
stc
and
mov
popf
jle
int3
leave
jns
mov
push
or
lahf
jbe
mov
inc
jns
mov
adc
cs
mov
daa
and
inc
sbb
push
jno
test
xor
int3
sbb
push
mul
push
fwait
lea
stos
dec
lahf
out
push
inc
jae
aas
mov
inc
std
int
sbb
test
push
shrl
call
mov
xchg
mov
clc
or
rorb
sbb
push
jle
or
fstpt
aad
test
cmp
jne
stos
jecxz
jge
mov
xchg
xor
aad
orb
inc
test
pop
cmp
std
jb
adc
jp
test
sub
popf
sti
in
dec
clc
test
mov
inc
push
xchg
idivb
mov
mov
call
mov
fstps
xchg
add
mov
push
lahf
lcall
cmp
repz
stos
mov
movsb
add
sub
add
push
add
xchg
call
sub
stc
cwtl
sbb
loopne
push
inc
fiaddl
jbe
adc
jbe
test
cmp
stc
pop
jle
jp
or
jae
iret
jne
shlb
jo
mov
xor
sub
xchg
or
xlat
add
std
mov
dec
jne
repz
adc
cmp
fbstp
notb
pop
testl
xchg
inc
pop
loopne
add
mov
or
bound
adc
rclb
pop
lahf
hlt
and
jg
cs
push
push
jmp
pusha
leave
js
adc
xor
inc
mov
cmpsl
lahf
xchg
xchg
lea
dec
dec
lock
loop
xor
mov
lds
nop
sub
and
or
sub
mov
rorl
pop
or
stos
cmc
cmp
mov
aad
inc
out
in
jecxz
dec
sub
addl
sbb
mov
fldl
push
sti
std
pushf
adc
jb
ljmp
cmp
add
hlt
jno
xchg
rorl
icebp
mov
cmp
std
stos
push
add
enter
mov
jge
cs
or
decb
pop
test
inc
icebp
pushf
inc
or
lea
aaa
aad
add
add
loopne
lahf
out
jb
mov
push
xchg
mov
or
test
fdivp
push
and
jns
add
jp
pop
sahf
ds
add
mov
repz
xchg
sbb
into
pop
inc
cmpsb
mov
mov
pop
shrb
xchg
aam
xlat
mov
adc
jp
xor
sub
push
mov
outsl
test
arpl
les
lret
fcmovne
mov
mov
push
lea
out
ret
loopne
aad
xchg
push
adc
jle
mov
mov
xlat
add
push
sbb
popl
push
test
iret
inc
mov
mov
push
aam
movsb
aas
jno
sarl
dec
and
mov
jnp
je
fwait
out
imul
mov
pusha
out
lret
add
pop
pop
lea
xchg
adc
or
sbb
mov
xchg
jg
sub
dec
aas
pop
cmp
xchg
and
adc
popl
inc
inc
cmpsl
pop
push
cld
int3
fsts
jne
nop
stc
add
jo
out
setg
in
inc
dec
push
out
adc
inc
mov
xchg
std
aas
xchg
sbb
mov
sub
les
mov
mov
aaa
dec
into
lods
mov
push
jle
lret
jmp
add
push
cltd
nop
movsb
cmc
in
divl
or
pop
rcl
mov
sub
cmpsl
mov
lret
in
xor
pop
fwait
mov
push
imul
fsub
aas
cwtl
mov
lahf
subl
cld
lret
movsl
mull
jg
xchg
adc
aaa
add
push
js
pop
test
jge
cmp
scas
sbb
pop
mov
sahf
das
ljmp
into
aam
add
test
lea
mov
cmp
clc
mov
ja
mov
add
sti
mov
jp
lds
dec
jbe
fisubl
cltd
outsl
mov
adc
testl
lea
push
ljmp
ds
test
addr16
sbb
adc
mov
test
lods
pop
mov
mov
mov
test
cmpb
pusha
repnz
mov
out
loop
pop
orl
xchg
or
emms
cwtl
insl
cwtl
inc
pop
add
pop
ret
or
xchg
mov
inc
xchg
call
lods
sbb
imul
adc
ja
mov
cmpsb
test
xor
mov
push
bound
xor
and
jb
or
icebp
add
mov
cmp
pop
dec
leavew
adc
fnstcw
dec
inc
lock
jl
stc
pop
sub
pop
push
xor
jb
add
sub
shrb
lret
push
inc
xor
dec
push
mov
aad
cmc
mov
push
jbe
cwtl
push
cli
fidivrs
dec
and
dec
xchg
js
add
lds
dec
lock
shrb
mov
loopne
pop
mov
inc
or
or
ss
in
scas
xor
and
fildl
repz
pop
lods
pop
add
dec
jb
dec
cmp
mov
add
jl
cwtl
iret
inc
fs
bound
insl
adc
sbb
and
jmp
pop
rcll
js
mov
dec
adc
adc
cmpsb
sub
imul
mov
pusha
lds
test
sbb
fisubrl
xchg
xchg
sub
or
cmp
int3
mov
es
cmc
mov
xor
or
push
xchg
dec
pop
xlat
dec
xchg
dec
sbb
and
xor
icebp
jle
imul
ss
xchg
mov
mov
sbb
jp
and
jne
push
out
inc
jbe
cmp
fcmovbe
mov
les
lahf
out
lock
add
pushf
mov
mov
pop
addr16
push
aaa
lcall
or
in
and
pop
movsb
inc
add
push
imul
addr16
loopne
pop
lcall
and
or
push
cmpb
inc
cmc
add
mov
je
shlb
pop
xchg
shr
stos
mov
insb
test
stos
jge
cmpsl
jb
test
cmp
jge
cwtl
hlt
jmp
mov
ds
addl
cmpsl
pop
cmpb
enter
mov
cmp
sub
rep
inc
jmp
fldt
std
rol
and
xchg
adc
out
pusha
inc
mov
sti
arpl
push
and
test
lahf
sub
movsl
sbb
je
popf
and
xor
jp
clc
fmull
mov
xor
sub
outsb
pop
xor
lret
xor
call
aas
dec
cmp
inc
mov
fsubrs
xchg
add
test
mov
jp
xchg
xor
jl
inc
data16
popa
pusha
lahf
add
xchg
jnp
aas
jle
jecxz
sub
lods
adc
jg
subl
sub
and
movsl
sbb
js
lods
push
clc
push
xor
cmp
fistl
vmovdqa
inc
mov
fcompl
inc
push
jp
cmp
aas
xor
repz
js
insb
addr16
jp
lods
or
jne
hlt
lds
ljmp
xchg
test
mov
repz
lock
cltd
jecxz
hlt
int3
leave
cmp
loopne
push
pop
xchg
xor
mov
lcall
insl
repnz
pop
adc
int
sub
out
lcall
mov
and
cmpsl
aas
in
pop
push
arpl
lcall
push
test
pop
into
insb
std
test
cmpsb
jp
add
dec
fisttpl
cmp
shll
inc
xor
sbb
jo
mov
lds
xor
add
call
ret
sbb
mov
popf
andl
bound
pop
pop
lcall
nop
inc
or
pop
cs
mov
bound
pop
jmp
jge
insl
mov
mov
fnsave
div
ds
xchg
dec
push
nop
sub
popa
lcall
add
inc
push
and
imul
push
jae
icebp
dec
mov
in
fmull
push
rcll
mov
and
into
mov
out
dec
push
aas
inc
divb
sbbl
lret
fistl
arpl
cmpsl
repnz
xor
and
mov
insb
movsl
push
push
sub
jo
nop
fmulp
jmp
and
adc
dec
stos
pop
or
subb
jge
mov
subl
mov
jno
mov
and
ds
adc
inc
pop
mov
lods
cmpsl
add
popa
mov
pushf
mul
lret
popf
ss
pop
adc
shlb
pop
push
inc
xchg
xchg
repz
sbb
lods
sub
stos
mov
cltd
cmp
psubb
mov
xchg
cmp
pop
pop
jns
shrl
mov
movsb
repnz
jae
push
aaa
sti
or
je
add
lret
fwait
mov
push
adc
dec
pusha
mov
mov
xor
imul
inc
adc
daa
pop
cmpb
and
dec
cld
and
lret
push
out
pop
jae
jnp
cs
push
sbb
scas
push
adc
add
divb
and
lahf
jno
jmp
xor
add
jns
cmpsb
rclb
mov
sbb
add
adc
ret
leave
icebp
push
cltd
or
in
adc
dec
loopne
enter
dec
pop
jmp
jbe
test
bnd
sub
push
or
xchg
pop
out
push
cli
js
add
andb
arpl
cmpsb
lret
mov
xchg
lea
movsl
mov
inc
fwait
cld
push
ljmp
in
push
outsb
mov
neg
out
dec
inc
xchg
pushl
push
pop
pop
adc
dec
adc
lods
test
rcll
sub
inc
pop
repz
cld
jb
jbe
pop
pop
sbb
inc
cmp
mov
orl
dec
arpl
mov
arpl
stos
sub
pop
mov
mov
sbb
ja
mov
call
jo
sbb
and
ljmp
sbb
loopne
xor
in
add
int3
inc
pop
push
pop
rcrb
loop
cld
mov
or
ljmp
mov
je
push
stos
test
cmpsb
and
cmpl
nop
bound
sbb
stos
in
out
into
adc
cvtps2pi
lahf
mov
push
xor
rcrb
inc
add
popf
mov
mov
mov
lcall
inc
lds
imul
pop
xor
jge
push
ds
inc
or
push
loope
stc
sub
mov
inc
pop
lds
mov
mov
and
or
pop
xor
push
mov
push
ror
inc
out
fimull
jbe
cmp
cmp
jmp
cmpb
pop
loop
mov
or
faddl
inc
inc
nop
lock
cmp
pop
jo
push
mov
ficompl
mov
xor
stc
dec
cli
outsl
jno
adc
je
jge
notl
jg
or
and
jmp
or
cmp
daa
lcall
dec
mov
call
pushl
pop
out
and
mov
mov
into
jae
adc
stos
mov
imul
movsl
cmpb
data16
lea
sub
cmpsb
xchg
pop
lret
adc
add
pop
movsb
xchg
push
stos
rcll
and
and
call
push
cltd
xchg
pop
adc
xor
push
call
fcom
shrl
jecxz
popa
add
ljmp
ljmp
push
cmp
mov
je
inc
lods
stos
hlt
push
ljmp
lea
in
les
and
cwtl
gs
inc
push
add
mov
xchg
mov
add
sbb
dec
xor
notb
cmpsl
scas
cwtl
mov
mov
inc
and
xchg
aaa
ret
dec
movl
cmp
xor
mov
iret
adc
mov
mov
cli
dec
loope
or
jmp
mov
and
repnz
ret
imulb
mov
sahf
xor
pop
shrl
out
xchg
sar
sub
outsl
fsubrl
insl
aam
jmp
adc
fwait
inc
sub
jbe
movq
loope
jo
or
inc
shr
icebp
cmc
insl
mov
fnstcw
fcoml
pop
sti
fnsave
lahf
sarl
add
stos
pop
jle
shr
fs
cs
shr
sub
pop
add
stos
cltd
inc
xor
jo
std
lret
fs
in
clc
mov
jecxz
sbb
js
mov
repz
imul
dec
mov
dec
inc
stc
ret
adc
mov
mov
test
cmp
mov
inc
outsb
push
mov
fs
jg
inc
or
rcrl
mov
movl
mov
and
dec
imul
inc
mov
add
xlat
lods
fistl
adc
loope
mov
out
repnz
out
out
stos
push
dec
pop
pop
js
ljmp
lret
jns
and
mov
push
mov
and
jnp
ss
roll
jae
cld
movb
fdivl
inc
insb
pop
push
pop
sub
adc
out
lcall
scas
mov
adc
mov
fisubs
insb
push
repz
scas
shlb
shll
pop
icebp
mov
lret
lds
mov
cwtl
jl
pop
xchg
pop
pop
and
and
or
cmpsb
ds
sar
inc
dec
fwait
inc
clc
sbb
or
in
push
mov
push
or
push
mov
sub
ds
cmc
in
sub
pop
mov
lcall
call
add
mov
jnp
pop
aam
inc
or
fsts
fnstenv
adcl
mov
cwtl
mov
mov
sbb
jge
dec
mov
add
sub
pop
aad
rcll
shl
pop
in
mov
fnstsw
sbbl
gs
mov
pop
pushf
sub
push
dec
fidivl
mov
push
mov
dec
jecxz
cs
sub
push
pop
fcomp
adc
jl
mov
into
cmpsl
add
enter
mov
dec
jno
cmp
scas
imul
mov
out
shll
les
lret
pop
mov
dec
ret
pop
movsl
ljmp
jb
xchg
or
pop
xchg
divl
cli
fwait
push
in
lds
enter
nop
xchg
fimuls
pushf
push
mov
rorl
add
sub
mov
xchg
icebp
push
xchg
and
ljmp
shlb
and
icebp
test
dec
add
mov
lock
movsb
repnz
movb
shr
lret
mov
adc
aad
iret
cmp
in
popf
outsl
or
cmp
addr16
jo
sbb
out
xchg
jmp
or
cmp
stc
out
xchg
and
sbb
add
mov
xor
mov
es
xchg
data16
iret
outsb
sub
aas
std
mov
call
cmpsl
mov
inc
sbb
ror
inc
pop
dec
inc
or
jp
pusha
sbb
cltd
and
lahf
jnp
fsub
nop
mov
enter
mov
data16
mov
adc
shr
lods
daa
idivl
mov
or
loope
fimuls
mov
dec
bound
stos
daa
add
cs
push
jnp
jb
and
lcall
out
mov
pop
ret
mov
sub
push
or
xor
dec
push
pop
aaa
cmpsl
out
mov
push
fldcw
push
lods
ficoms
imul
dec
inc
mov
xlat
xorl
sbb
xor
push
mov
hlt
sub
sti
popa
push
add
adc
int
out
pop
mov
bound
lods
cmp
fcmovnu
cmp
pop
jns
mov
pop
dec
sbb
mov
addr16
xor
add
cli
mov
je
loopne
js
xchg
mov
sbb
ja
mov
xchg
or
movsl
cwtl
je
out
movsb
jno,pt
jns
js
out
mov
dec
mov
icebp
sbb
jo
shrl
adc
imulb
popf
test
cmp
out
push
and
jmp
add
sub
push
lock
incl
jnp
scas
insl
xchg
clc
repz
daa
push
out
add
jp
mov
cmp
mov
cmp
insb
fnstenv
jne
repz
mov
popa
push
cmc
mov
inc
shll
enter
fisttpl
sbb
push
pop
stos
sbb
push
test
xchg
movsb
mov
jg
push
inc
sbb
int
sbbb
enter
stos
jnp
out
mov
cli
sub
data16
in
xchg
jns
loope
cld
test
pop
xor
leave
pop
lock
mov
jge
lea
stos
pop
xor
mov
sub
popa
adc
cltd
stos
sbb
std
add
mov
outsl
mov
fnsave
fwait
lock
xlat
popf
push
mov
fisttpl
scas
negl
push
xlat
dec
fdiv
imul
and
or
aas
out
in
pop
push
sub
or
and
sahf
mov
fcoml
nop
jnp
dec
xor
mov
shr
add
pop
lea
lea
std
jae
push
push
cmc
add
sbb
movsb
lret
jg
imulb
cwtl
ljmp
xor
fstpt
xchg
and
mov
add
sbb
shl
loop
scas
mov
sub
sbbb
pop
mov
or
divb
and
dec
jmp
aad
movsl
in
cmp
mov
and
or
push
fistpl
jge
std
lock
lea
or
xor
cmp
loop
mov
rcl
or
lds
mov
lret
stos
jmp
adc
pop
pop
jne
out
mov
sbb
aad
xor
inc
outsl
mov
or
gs
imul
and
xor
sub
popf
mov
shrb
test
dec
negb
inc
in
or
cmp
rcl
push
mov
add
aam
subl
movsl
adc
imul
aad
xor
cwtl
sahf
mov
mov
cmp
test
pop
mov
push
shrb
dec
add
js
lret
mov
iret
fdiv
lcall
cmp
pop
in
rorb
fwait
imul
push
orl
lock
cli
ja
xor
and
adcb
mov
cmpsl
aas
mov
into
scas
insl
leave
dec
pop
sub
into
hlt
mov
and
outsl
test
adc
es
jbe
sbb
push
mov
jmp
xchg
push
or
lret
add
push
mov
jmp
mov
xchg
adc
dec
cli
std
sub
insb
push
or
mov
mov
xchg
bound
adc
xchg
dec
insl
jae
std
popl
pop
stc
shl
js
jns
out
and
fimuls
add
aas
jg
punpckldq
fldcw
dec
dec
inc
or
scas
fnstenv
mov
jle
cmc
popa
stos
orl
aaa
test
and
push
pop
push
mov
fisttpll
sbb
js
fwait
sub
cmp
push
loop
jb
jmp
push
mov
jns
movsb
sbb
dec
mov
out
lods
inc
aad
cmp
into
push
mov
mov
jns
stos
xchg
mov
lret
mov
mov
mov
xchg
pop
decl
sbb
pop
add
je
shll
sarb
scas
mov
cmp
xchg
enter
std
push
jl
cmp
fldenv
pusha
cltd
jge
mov
and
xchg
xor
lods
sahf
jmp
xchg
lret
js
loopne
adc
subl
jbe
sub
cmp
cmp
mov
jmp
xor
adc
out
dec
add
outsb
fdivl
sub
jo
shll
adc
into
or
mov
cs
adc
mov
ret
cmp
fcomps
push
inc
mov
or
loop
cmp
ljmp
and
pop
loop
mov
loope
xchg
clc
lcall
clc
arpl
push
sahf
push
mov
jnp
and
dec
lock
dec
imul
inc
or
cmpsb
adc
sahf
call
push
push
imul
pop
movsb
loopne
sub
rolb
ljmp
push
adc
lret
loop
xchg
dec
adc
add
mov
ja
cmp
or
popa
cmp
sub
sub
hlt
xor
pop
pop
push
sub
push
sub
cmp
mov
jne
inc
dec
add
add
dec
mov
mov
aas
xchg
lahf
jl
push
xchg
into
icebp
into
repz
or
lcall
sti
bound
ds
mov
cmpsb
mov
jmp
sahf
in
add
js
mov
mov
xchg
xchg
pop
push
movsb
jp
xor
sub
cmp
ja
jne
xor
ret
mov
pop
sub
push
push
jbe
jecxz
std
sub
gs
mov
mulb
fndisi(8087
flds
and
xchg
add
cmp
mov
pusha
push
call
or
scas
idivb
clc
test
dec
sbb
mov
ret
lock
sub
sub
dec
jno
xchg
jns
mov
jge
push
inc
sub
addr16
xchg
dec
adc
fwait
js
jl
icebp
push
ror
iret
aam
adc
imul
or
sahf
out
ja
dec
xchg
enter
imul
add
pushf
adc
mov
xchg
xchg
or
aas
bound
jnp
enter
cmpb
int3
sahf
ror
sarl
sub
adc
ret
mov
and
mov
ret
or
ficomps
insb
jno
jp
and
push
test
xchg
sahf
xor
lret
add
jnp
mov
shlb
mov
sub
jae
aas
mov
xor
cmp
and
xor
xchg
rcr
xchg
cmp
mov
ja
rorl
cmp
fsubs
ret
in
es
sub
xchg
push
cltd
jnp
adc
cmp
push
psadbw
and
mov
push
outsb
orl
pop
push
movsb
xchg
sub
icebp
sub
cmp
int3
pop
pop
mov
shrb
outsl
icebp
dec
fnstenv
push
sub
inc
add
xchg
push
loop
xor
pop
int3
scas
lods
mov
std
jae
inc
mov
pcmpgtd
mov
cmpl
jecxz
inc
and
es
mov
es
mov
add
add
pushf
sbb
in
cmp
adc
jmp
jecxz
mov
pop
xchg
jg
jmp
rcrb
stc
ss
dec
jmp
sub
mov
shll
std
add
pop
rcll
inc
dec
shl
in
orb
inc
mov
xchg
cmp
imul
xchg
mov
arpl
jecxz
test
rolb
mov
inc
jmp
jle
sub
fldcw
push
aas
clc
test
xlat
and
fisttps
fwait
stos
repz
or
xor
cmp
sub
push
icebp
add
pop
and
in
mov
mov
in
loope
mov
jns
xlat
xchg
sbb
or
andb
adc
ljmp
adc
popa
aam
push
or
adc
addr16
jmp
icebp
push
jo
in
mov
out
leave
sub
fisttpll
lds
inc
push
std
sahf
pop
mov
adc
sbb
and
mov
call
adc
jns
ds
es
je
adc
dec
and
lds
dec
stc
ja
xchg
mov
fisubrl
in
icebp
mov
das
mov
push
xorb
and
enter
call
add
pushf
mov
pop
cmp
cmp
jb
lcall
push
mov
inc
gs
add
cmpsb
es
ffreep
xor
ljmp
xchg
dec
mov
scas
subb
jmp
jmp
inc
outsb
std
xor
mov
push
xor
pop
xlat
dec
loop
sub
pop
pop
aas
hlt
or
leave
int
add
xchg
outsb
sbb
gs
dec
scas
out
int
cs
pop
cmc
dec
or
in
lcall
in
stos
dec
push
out
stos
adc
cmp
fsubr
push
and
push
mov
inc
cmp
push
jo
lahf
test
inc
dec
sti
subb
mov
push
and
xchg
out
mov
ja
mov
addb
xchg
add
jne
mov
cmp
ret
repz
and
push
out
pushf
movsb
add
cmp
push
fnstcw
lret
push
xchg
andl
dec
xor
icebp
cmpsb
xchg
jbe
subb
xor
sbb
mov
pop
push
pop
not
sub
inc
bound
cmp
call
loopne
test
sbb
clc
dec
faddp
add
cli
out
add
pop
shrb
mov
out
lods
lods
pusha
cmp
lods
stos
jnp
pop
cmp
repnz
xchg
js
cmc
fcomps
sar
cmp
stos
aas
pop
jecxz
mov
jns
jge
or
and
push
jns
ljmp
push
imul
add
cmpsl
xlat
and
aaa
cmp
rorl
repz
insl
insl
sar
cmp
shrl
push
mov
lea
mov
jecxz
rol
push
dec
hlt
add
sbb
pop
inc
lock
inc
outsb
out
lods
sti
mov
jo
xor
cmpsl
sarb
test
mov
sub
dec
push
fwait
nop
jo
fs
aad
filds
dec
push
test
mov
xchg
sub
out
dec
and
out
jae
adc
xchg
push
test
jge
in
cld
cmp
neg
xorl
sbb
in
pop
cld
test
idivl
mov
aaa
mov
jo
aam
push
add
xchg
cmpsl
xlat
fcompl
xchg
les
lret
sbb
flds
inc
nop
aam
outsb
xor
popf
bound
cmp
xor
in
loop
add
hlt
lret
xor
enter
cmp
adc
mov
jge
inc
push
jecxz
aad
mov
push
sub
cmpsl
jl
sub
add
xchg
inc
add
std
int3
adc
sbb
lods
mov
push
notl
arpl
mov
push
in
das
push
ficomps
out
sub
gs
jnp
pop
xor
int3
prefetch
adc
pop
adc
aam
dec
cltd
stc
lods
aaa
lock
repnz
push
rclb
mov
jae
in
xchg
add
lret
jo
jl
popa
fiadds
xor
in
test
cmc
into
xlat
lcall
jns
mov
sub
test
movsl
not
lea
sub
jecxz
mov
sub
dec
adcb
push
mov
jne
and
jl
pextrw
mov
loopne
scas
jbe
mov
push
adc
jle
insb
cmp
aaa
mov
push
mov
xor
and
sub
mov
fistpll
lea
jnp
in
xchg
dec
sub
lahf
sahf
incl
mov
fwait
mov
jle
fnstcw
mov
mov
jno
hlt
mov
shr
mov
dec
clc
js
or
orl
cmp
xor
dec
shll
ds
or
aad
std
xchg
addr16
addr16
sub
rorb
ret
enter
sub
push
stos
lock
outsl
gs
out
scas
xor
add
call
mov
dec
mov
sbb
and
and
cwtl
jg
int3
mov
push
orl
mov
in
mul
lds
dec
cltd
nop
mov
nop
xchg
adc
xorl
xor
jecxz,pn
pop
addr16
call
pop
negb
mov
mov
jle
lods
stos
push
mov
hlt
pop
and
mov
pop
sbb
mov
cmc
inc
jo
cli
jns,pn
jl
cmpsb
out
cmp
ss
cld
roll
sbb
mov
cli
jecxz
mov
push
xchg
nop
xchg
mov
mov
push
mov
shrl
mov
iret
ret
pop
call
imul
mov
push
jge
push
pop
sahf
cmp
mov
sahf
enter
inc
dec
xchg
lock
js
xchg
or
in
mov
cmpsl
fwait
and
mov
je
icebp
mov
xlat
jae
adc
inc
cmc
inc
mov
mov
mov
arpl
out
cmpsl
mov
sub
notb
xor
adc
xchg
and
je
or
ret
imul
dec
xlat
xchg
faddl
and
pushf
lret
les
cmp
sbb
push
sahf
sarl
cmp
or
mov
test
popa
dec
pop
dec
mov
in
adc
insl
ret
pop
dec
popf
pop
inc
aas
xchg
xchg
mov
in
adc
outsb
sub
iret
cmp
push
lahf
cwtl
pusha
in
je
push
loope
jge
shr
sbb
and
out
jle
sbb
xchg
jp
les
pop
bound
xchg
test
cmp
popf
movsl
arpl
and
xchg
icebp
add
aad
mov
jg
xor
sub
jbe
ja
icebp
ret
xor
fisubrs
outsb
lds
in
xchg
in
cli
stos
jl
xlat
mov
jge
cmp
loop
mov
sub
dec
inc
nop
repnz
repz
push
fildll
push
cmpsl
loopne
imul
mov
mov
push
and
mov
rcll
mov
out
jnp
lret
sbb
mov
cmp
aaa
mov
shll
xchg
and
call
jl
or
lret
negl
repnz
js
les
adc
mov
das
inc
cltd
sti
sub
jl
sbb
push
aad
push
popl
nop
sbb
inc
cmpl
or
rclb
pop
mov
and
or
aad
cltd
dec
sahf
in
inc
imul
add
mov
and
push
rclb
xor
and
stc
cmpsb
inc
fsts
cmpsl
out
xor
call
adc
nop
jge
out
scas
push
jge
sub
push
fidivrl
dec
jg
lea
mov
pop
dec
addr16
movsl
icebp
adc
insb
mov
add
pop
mov
fisttps
in
cltd
add
adc
loope
loopne
dec
inc
or
and
push
add
xchg
mov
inc
mov
or
adcb
lahf
nop
stos
test
mov
movsb
and
xchg
out
xor
push
out
adc
sbb
push
ljmp
cmp
jno
xchg
movsb
add
arpl
xor
adc
pop
lods
pop
xlat
xor
test
sub
dec
mov
pushf
std
sub
fidivrs
lea
mov
call
out
fdivl
imul
les
rcrb
sti
test
sub
addr16
mov
cld
mov
sbb
xor
sub
scas
push
jmp
ds
pop
jg
xor
cmpsb
pop
jp
push
sbbb
dec
in
daa
ret
pop
mov
mov
cmpsl
insl
mov
aam
mov
add
sub
sbb
cmp
sbb
pop
jnp
outsl
pop
out
clc
jmp
lcall
push
push
pop
xchg
cmp
aad
mov
mov
data16
inc
push
jge
sub
jne
orb
inc
and
mov
pop
dec
mov
add
or
mov
mov
pop
fcoms
mov
flds
pop
mov
scas
ret
sarl
dec
repnz
icebp
mov
pop
push
pop
xor
stos
add
je
mov
xor
dec
daa
push
fs
cs
xchg
mov
or
adcl
jb
mov
adc
cltd
sub
xchg
mov
cmp
mov
dec
popa
dec
popf
mov
aam
xchg
dec
pushl
mov
jno
adc
xor
icebp
xchg
hlt
stc
out
testl
mov
pop
pop
jbe
and
bound
push
lahf
cmpl
jns
lods
je
dec
push
inc
jb
xor
fs
sub
jmp
out
fdiv
cmp
in
ja
cli
mov
nop
popa
mov
popl
decl
ja
sbb
insb
sbbb
cmp
pop
lods
xchg
ret
add
lret
and
shl
repz
fwait
push
imulb
jae
sbb
xchg
bnd
ret
pop
popa
inc
mov
daa
mov
cmp
insb
packuswb
test
cwtl
mov
rolb
cs
bound
leave
sub
sub
xor
push
sbb
fs
xchg
xor
mov
out
lret
cmc
iret
icebp
mov
xchg
or
adc
or
aad
mov
je
xor
and
jb
add
push
mov
sub
rcrl
lret
into
cmp
add
shll
movsl
hlt
loopne
int
jmp
mov
pop
loope
push
xor
and
out
stc
insl
daa
adc
xor
mov
jp
lcall
fmuls
movmskps
or
cmpsb
jl
call
or
pop
std
out
lods
fnstsw
pop
repz
jp
add
movsb
xchg
sub
pop
or
sti
pop
notl
stos
xor
mov
mov
mov
shll
aad
rolb
inc
clc
ss
fildll
lock
lret
loopne
sbb
hlt
inc
enter
std
int
dec
shrb
and
mov
push
leave
xchg
aad
shrl
icebp
movsb
loopne
xlat
push
mov
jg
jb
in
jle
repnz
cmp
or
nop
and
cmp
inc
push
mov
add
push
loop
insb
sub
mov
fdiv
mov
aaa
testb
jbe
clc
aas
in
nop
loop
mov
enter
iret
mov
cmp
insl
push
mov
test
pop
mov
ret
ficoms
inc
dec
jo
inc
and
loope
xchg
sbb
mov
mov
mov
dec
aad
xchg
jns
mov
cmp
mov
push
cmp
das
mov
loopne
jle
xor
pop
rorl
pop
lock
add
repz
jg
fucom
and
movsb
gs
sub
cmp
sahf
sbb
pop
sbb
cmc
mov
incb
imul
cmp
movsl
add
int3
cmp
int3
in
xchg
dec
and
mov
sub
cmp
cld
insl
in
sub
sbbl
inc
test
jecxz
aas
mov
stos
call
int
xor
out
cmp
jg
adc
lret
sub
xchg
sbb
shrl
pop
fisttpll
add
mov
dec
add
xor
dec
notb
rcll
lods
xlat
inc
negl
sbb
jp
xchg
xchg
fnstsw
and
inc
popa
inc
or
and
mov
jmp
mov
jnp
loope
hlt
pop
bound
mov
pusha
lods
stos
push
cwtl
hlt
xchg
movb
adc
jb
push
fldenv
pop
push
gs
and
xchg
xor
push
fs
cmp
push
adc
shrl
inc
mov
or
mov
lds
enter
rol
arpl
movsb
pop
cmp
xchg
ret
das
xor
xor
popa
stos
mov
pop
lcall
mov
adc
out
mov
ja
xor
push
mov
pop
loop
sub
ds
mov
mov
push
inc
in
ss
mov
mov
inc
cs
aaa
dec
fcmovb
incl
mov
dec
push
pop
insl
in
punpcklwd
cli
ds
adc
jns
adc
pop
lods
into
enter
xlat
lea
mov
mov
cmc
mov
sahf
lods
xor
repz
adc
test
pop
hlt
push
or
in
shll
sub
sbb
subl
je
sub
inc
insb
mov
outsl
xchg
inc
mov
je
mov
adc
sbb
and
jg
lret
lret
or
add
pop
push
inc
mov
test
mov
sbb
mov
or
mov
ss
int3
jp
push
mov
jmp
popa
dec
dec
out
rcrb
in
dec
mov
inc
mov
ret
test
in
int
add
in
jb
mov
lret
xchg
pop
repnz
ljmp
push
sub
movsl
xchg
test
das
in
scas
xchg
aas
data16
aam
adc
in
mov
pop
pop
and
fdivrl
addr16
test
adc
in
lret
xchg
out
push
mov
repz
xchg
push
jbe
icebp
lcall
push
test
in
scas
pop
lret
test
sub
dec
ret
lcall
jae
fistpll
xchg
inc
and
mov
add
inc
mov
icebp
out
jae
mov
sti
mov
inc
movsl
bound
adc
fwait
rol
ljmp
cmp
fisttpll
dec
pop
fbstp
cmpsl
test
push
jge
pop
addb
jae
cltd
push
fsubr
adc
and
adc
push
cmp
js
and
pop
xor
daa
pushf
shll
mov
jns
push
jge
out
stc
mov
sub
mov
jno
jne
mov
xchg
push
rorl
jbe
sub
fsubrp
test
mov
adc
test
subl
xchg
shr
das
testb
push
add
sub
sub
and
test
dec
dec
sub
push
jg
test
je
neg
fstpl
out
pop
or
ja
mov
ret
scas
ljmp
xor
outsb
sub
ret
ljmp
jp
push
cmpsb
push
sbb
imul
aad
enter
nop
push
sub
ja
mov
lret
gs
leave
negl
cmp
bound
sbb
pop
or
addr16
add
fiaddl
sbb
data16
xor
jmp
mov
adc
sti
arpl
xchg
pushf
imul
and
sbb
xor
add
lret
push
mov
jge
jae
test
movsl
int3
cmp
lret
push
cmp
lods
stos
inc
cmpsl
test
mov
jo
xchg
mov
fiaddl
fldl
inc
xchg
shrl
jle
dec
jge
mov
mov
jmp
ja
and
sbb
inc
xor
in
xchg
lock
fcmovbe
cmp
test
movsl
fistps
or
nop
fdivrs
es
hlt
mov
pop
sbb
mov
push
sbb
xor
cmp
les
shr
mov
add
dec
movsb
sahf
pop
mov
mov
stos
or
mov
sub
addr16
or
mov
and
xor
pop
xchg
jbe
data16
test
mov
call
daa
dec
out
pop
mov
xor
mov
pop
enter
pushf
je
xor
inc
lcall
stc
idivb
aam
dec
and
aaa
or
jno
les
cmp
cs
push
or
insb
daa
cmp
sub
cmpps
jmp
bound
push
pop
pop
fisttpll
push
roll
jae
into
js
in
jae
cs
mov
push
fadds
sub
ja
pop
sub
push
sbb
sahf
xchg
aam
or
mov
data16
or
pop
xchg
mov
xor
int3
sub
ficomps
sbb
iret
outsl
leave
xchg
scas
or
popl
cmp
jae
fmul
xchg
stos
pop
cmpl
jno
jne
inc
mov
xchg
stc
sahf
in
push
jmp
imul
jmp
fisttps
mov
sbb
lea
pop
les
add
push
movsl
adc
adc
push
pmulhuw
cmp
jle
mov
bound
dec
lcall
mov
fsubrs
scas
xchg
into
mov
push
sarb
mov
std
daa
subl
mov
sahf
shrb
repz
pop
ds
mov
flds
cwtl
jle
adc
xor
cmc
adc
aaa
rcl
adc
mov
dec
imul
hlt
gs
dec
push
mov
sarl
jbe
cmpsb
inc
ucomiss
sbb
sbb
std
adc
xchg
dec
stos
lret
into
dec
fisubl
dec
xor
lret
addr16
movsb
dec
ss
in
es
arpl
cmp
clc
cmp
ret
or
and
sbb
sub
mov
adc
mov
jo
add
sub
sub
cs
loope
mov
ss
in
or
dec
andl
add
add
push
fldcw
sti
inc
xchg
fstl
xchg
es
cmpsb
and
sbb
popa
into
cmp
stos
adc
xchg
aad
orl
imul
pop
movsb
and
cmpsl
gs
stos
lcall
sbb
int
mov
insb
sub
mov
and
xchg
push
jl
jecxz
jle
or
inc
and
or
adc
xchg
cwtl
jmp
mov
sub
popf
pop
shrb
push
cs
push
imul
out
lret
xor
adc
add
out
and
mov
fimuls
fisttps
in
mov
or
adc
outsb
xchg
imul
and
in
sub
jo
test
fwait
rcll
repz
inc
mov
cmp
sub
adc
subl
int
adcb
add
sub
adc
xchg
xor
push
adc
out
scas
mov
inc
sbb
fidivrs
cltd
popf
push
cld
outsl
adc
xchg
pop
dec
pop
data16
sbb
lds
js
mov
test
scas
lret
inc
test
pop
call
fnstenv
movsl
or
sbb
fiaddl
jle
fimull
add
inc
sbb
pushf
adc
aaa
ret
cs
push
mov
stos
popf
in
loopne
je
jl
and
pop
in
jne
pop
je
sbb
jle
adc
jbe
outsl
sbb
push
xor
pop
cmpsl
sub
popf
cwtl
push
jl
jno
adcl
pop
movsl
je
jo
shl
pop
std
out
mov
ss
mov
aas
xchg
jg
je
in
inc
jge
cmpsb
pop
push
jns
xor
pop
cwtl
nop
lods
push
mov
xchg
pop
inc
jl
aas
cmc
sub
hlt
push
push
jecxz
mov
addr16
xor
jno
pop
out
mov
jnp
bound
inc
sub
and
imul
mov
cmc
push
fisubrl
lea
inc
sti
sub
push
cmp
pop
adc
pop
push
cltd
cmpsb
mov
mov
xchg
jmp
mov
xchg
adc
movsl
daa
rcl
and
rcll
or
aad
sbb
aam
js
into
test
jae
fcompl
sub
dec
fiaddl
mov
stos
xor
push
ds
jno
xor
jmp
leave
std
jg
scas
popa
stos
mov
out
add
cmovae
pusha
inc
mov
outsb
xchg
lds
xor
push
mov
adc
push
mov
xchg
push
push
xorb
xchg
ja
cwtl
stc
mov
sub
mov
jno
inc
in
adc
shll
cmpsl
sarb
mov
and
jbe
fsubl
mov
cmp
cli
pop
xor
and
fwait
imul
and
jo
cmp
cmpsb
in
cmp
scas
dec
mov
mov
lret
shrb
mov
sbb
mov
rclb
sbb
or
xchg
test
pop
xor
push
jecxz
mov
fdivl
lret
mov
xor
dec
sbb
mov
adc
mov
imul
xchg
or
enter
aaa
pop
aam
cmc
jb
cmp
pop
fcomps
jno
mov
sub
es
orb
repz
mov
inc
jmp
xchg
rclb
dec
popa
lock
xchg
cmpsl
ja
sub
sub
inc
pop
test
sub
pop
daa
inc
push
pop
shr
fsubrp
je
lahf
and
scas
pop
xchg
add
jb
pop
cld
pop
push
xchg
adc
fdivrl
fmul
sbb
mov
jg
aam
out
fidivl
mov
test
mov
ja
cs
fldcw
aas
push
sub
jp
int
mov
mov
push
mov
jmp
int3
jp
aad
xchg
fwait
jge
cmp
mov
loop
loop
xor
inc
bound
push
jbe
fcmove
jl
aas
out
pop
imul
mov
sub
sahf
mov
icebp
shll
jp
ret
dec
pop
push
je
pop
movsb
hlt
outsl
cmp
sbb
fsubl
into
jb
sbb
jae
and
ret
cmp
adc
xchg
mov
xchg
loope
push
lahf
or
icebp
loope
sbb
aad
cmp
leave
movsl
movsl
push
out
jnp
movl
mov
inc
call
mov
add
stos
shll
xchg
jg
shl
xlat
pushf
int3
mov
fidivrs
addr16
negl
aad
std
mov
outsl
sbb
add
incb
mov
clc
fwait
fwait
mov
inc
daa
mov
add
test
into
mov
mov
daa
sub
xor
jg
sub
jge
mov
call
sbb
adc
dec
jae
xchg
jbe
inc
pusha
push
adc
lcall
push
jmp
mov
jbe
divl
xor
inc
shlb
test
aam
mov
je
fnstenv
inc
dec
daa
popa
dec
push
out
adc
mov
add
sub
ja
jae
das
scas
ss
xor
mov
add
adc
sbb
sbb
mov
insb
jno
mov
lock
or
mov
adc
xor
mov
xor
leave
cmpb
int
jg
fimuls
pop
mov
outsl
inc
aam
xchg
jb
imul
mov
or
lock
aad
or
dec
pushf
int3
lret
add
cmpsl
jle
push
test
or
cmp
shl
fsts
sbb
scas
mov
imul
lods
jl,pt
in
sbb
add
add
fdivrs
mov
lcall
sahf
cltd
xor
mov
pop
cmp
fldenv
jae
push
xor
shll
dec
inc
xlat
mov
repz
inc
or
ss
xor
or
in
mov
test
lock
bound
repnz
jae
fldenv
and
sti
in
sti
out
cmc
ret
inc
idiv
out
data16
xor
xchg
or
push
cmpsb
stos
inc
ret
dec
jae
jl
adc
push
xchg
xor
mov
xor
out
xchg
stc
std
ret
shll
je
dec
jno
ja
xor
mov
lss
test
popw
dec
pusha
cmc
push
push
inc
lcall
mov
pop
adc
jp
dec
sub
fcoms
jb
out
mov
aas
movq
adc
xor
das
xor
imul
mov
addr16
insl
cmpl
fsubl
out
sbb
mov
loopne
mov
and
insl
push
movsl
push
cmp
mov
add
mov
lods
test
insb
sbb
scas
mov
dec
and
mov
sbbl
in
xchg
push
in
sbb
xor
sbb
testl
loop
push
loope
jae
pop
fmuls
out
enter
jbe
cs
inc
xor
sub
and
fstpl
add
lods
lds
mov
ficompl
repz
pop
aas
cs
dec
ficoms
std
cmp
push
movsl
les
mov
jmp
adc
mov
pop
hlt
inc
adc
push
xorb
in
cmp
outsb
or
mov
mov
mov
mov
add
push
pop
mov
mov
fisttpll
scas
mov
add
dec
mov
jmp
movsl
jg
inc
iret
mov
add
adc
pop
dec
mov
add
outsl
pop
fwait
loop
shl
inc
outsl
cld
jecxz
adc
fldl
sbb
xchg
jnp
xor
rcrb
and
cltd
int3
jmp
jecxz
sbb
fisttps
or
imul
fldl
jns
jb
sbbb
in
jne
fsubr
sbb
ljmp
cmp
add
out
inc
xor
mov
fwait
call
test
xchg
xchg
rcll
ja
hlt
popf
ss
mov
into
sub
sahf
xor
je
xlat
jle
mov
insl
sub
mov
lock
dec
dec
fcoml
inc
imul
enter
imul
daa
xor
je
loope
std
stos
test
scas
clc
cmp
pushf
loopne
lcall
mov
xor
test
dec
xor
roll
push
xor
dec
adcl
adc
fsubrl
and
mov
jae
addr16
loop
cmp
movb
pop
jb
push
xor
push
lahf
add
fildll
jle
and
rcrl
and
mov
pop
lret
clc
cmp
inc
xor
push
sti
pop
xchg
add
dec
jno
gs
outsb
andb
mov
mov
add
stos
xchg
adc
pop
in
sub
flds
push
sbb
ljmp
pop
pop
hlt
out
or
mov
repnz
lods
ljmp
adc
cli
les
push
mov
add
sub
fldt
imul
into
lock
inc
or
enter
and
or
sub
imul
dec
or
fcoml
pusha
dec
jno
mov
xor
jmp
cltd
adc
and
popa
push
fbld
clc
cwtl
mov
and
inc
enter
push
scas
sub
push
add
mov
imul
jbe
imul
movsb
pop
jecxz
out
pop
int
xchg
mov
mov
pop
dec
mov
sub
mov
lea
stc
test
mov
pop
andl
cmp
pop
lcall
loop
lea
out
dec
dec
ret
pop
shlb
xchg
mov
fcoms
inc
mov
and
sbb
and
xor
subl
call
mov
inc
fwait
or
inc
enter
pop
std
fcmovnu
testb
inc
sub
addr16
inc
ja
jo
movsb
push
incl
adc
out
mov
scas
sbb
andl
popa
xor
inc
js
pop
dec
dec
movaps
sub
test
leave
es
inc
push
add
jb
insb
jns
jp
mov
push
imul
push
stos
ret
popf
sub
sub
iret
int
inc
sbb
pop
adc
aaa
add
xchg
push
js
cmpb
jp
sbb
mov
mov
cmp
xchg
mov
mov
pop
and
cs
pop
loopne
inc
mov
push
or
xor
push
jnp
stc
inc
lcall
scas
xor
mov
in
or
loope
outsb
mov
push
mov
lods
aam
mov
xor
lcall
adc
push
mov
lock
and
daa
jmp
loop
jmp
dec
out
xlat
sub
adc
cmp
addr16
mov
insl
dec
icebp
add
stc
lcall
xchg
int3
imul
mov
rol
ficoml
mov
stc
dec
dec
inc
pop
push
stos
add
mov
xor
or
inc
pop
mov
outsb
stc
out
flds
fwait
jbe
decl
adcl
dec
adc
leave
rcll
fs
mov
inc
dec
cmp
jno
xchg
dec
xchg
lods
xor
dec
daa
xor
or
or
add
mov
lcall
and
jp
push
mov
and
xchg
ss
or
pop
dec
cltd
lods
mov
scas
or
push
xchg
and
insl
cltd
test
mov
lods
fcomi
mov
push
xor
notl
xor
insl
jmp
mov
xchg
out
dec
add
loope
outsb
pop
sarb
xor
inc
ret
rol
popf
popa
mov
aam
or
ss
fwait
insl
dec
stos
outsl
insl
push
cmpsb
les
out
pushf
or
mov
fisubrs
int
fmuls
loopne
or
ss
mov
fistps
inc
cmp
call
lcall
cmp
jns
jns
insl
bound
in
popf
mov
outsl
sub
clc
sbb
clc
hlt
imul
add
sbb
push
sbb
mov
sti
cmpsl
sub
cmp
mov
inc
fistpll
or
mov
push
inc
push
xlat
out
std
ss
out
pop
adc
dec
setae
das
in
pop
mov
rclb
lods
repz
lock
inc
jmp
stc
rclb
scas
jb
jmp
jp
adc
ret
fld
scas
arpl
aaa
pop
cwtl
bound
cs
lcall
mov
icebp
sub
cmpsb
jns
sbb
pop
cli
xor
mov
pushaw
ja
xor
or
ficomps
mov
or
ret
xchg
cmpl
or
cmpxchg
push
add
stos
mov
xchg
and
push
adc
test
jg
mov
jecxz
xchg
ds
add
xor
push
jg
cmc
xchg
ja
sti
push
xor
leave
dec
mov
in
leave
stos
push
aad
movsl
cmpb
in
xchg
jnp
mov
dec
cs
push
mov
scas
xor
stos
rcr
dec
lret
cmp
xlat
pop
pop
adc
and
dec
rcr
fnstsw
cmp
add
dec
xor
mov
lea
inc
sbb
loopne
fstp
xchg
add
inc
cmp
dec
mov
cmp
pop
inc
add
sbb
or
push
pop
mov
int
push
std
pusha
in
in
mull
mov
xchg
shlb
xchg
adc
adc
mull
scas
pop
in
sbb
dec
jne
std
arpl
pop
sti
pop
push
cmpsw
insb
add
add
inc
or
xchg
add
mov
xor
es
dec
daa
inc
ljmp
js
in
ja
into
test
fcmovne
nop
vsubps
fisubrs
mov
movsb
in
dec
scas
iret
imul
xor
sub
gs
cmc
sub
repz
in
ror
imul
shlb
fildl
adc
xchg
jmp
out
insb
fcmove
mov
loopne
xor
cmc
stos
xor
test
jae
adc
jns
js
sti
adc
push
push
stos
push
leave
imul
push
sbb
mov
repnz
sbbl
int3
push
lock
and
xchg
aaa
push
add
mov
or
fmul
dec
cmc
in
add
inc
ror
sahf
sub
cmp
push
xor
or
mov
fistpl
mov
mov
lahf
insb
iret
xor
push
dec
inc
pop
xchg
and
lea
adc
out
sub
lea
addr16
inc
in
cs
sub
push
or
jg
das
pop
push
adc
cmpsl
push
push
sub
bound
add
outsl
lods
pop
xchg
lahf
js
lahf
div
jmp
movsb
mov
push
pushl
stc
cli
lock
mov
fs
insl
jnp
adc
stc
cmp
popa
faddp
adc
pusha
lcall
data16
or
ja
testb
dec
inc
mov
push
adc
lods
mov
cmpsb
and
or
pop
inc
xorb
pop
scas
cmp
movsl
pop
leave
out
rcll
sbb
insl
xchg
or
adc
push
shll
faddp
mov
les
sti
fucomi
sub
xchg
aad
fidivrs
sahf
dec
add
sbb
or
nop
jno
or
and
ss
jne
jg
jae
sub
fwait
jno
stos
xchg
ss
dec
arpl
cmp
adc
jle
call
jo
pop
mov
push
mov
lret
ret
in
outsb
sub
scas
fwait
cmp
rolb
or
sti
fimull
dec
mov
push
pop
insl
popa
pop
dec
mov
test
repnz
xchg
fwait
aaa
mov
mov
stos
mov
shl
adc
lds
setp
sbb
lds
sub
push
mov
cs
lea
cmp
loope
cli
cmp
mov
xor
dec
inc
loop
repz
adc
mov
xchg
sub
call
push
cmp
xor
inc
jne
shl
push
xchg
inc
pop
add
jmp
push
sbb
daa
jmp
aaa
pop
xor
lahf
sarl
cmp
std
mov
mov
jns
lcall
lret
cmp
and
sub
sti
add
push
lds
lahf
shl
push
imul
dec
mov
je
inc
sub
add
lahf
jno
std
cmp
dec
push
inc
xlat
push
sbb
push
inc
push
out
xor
push
and
fstpl
sub
or
pop
pop
push
repnz
and
js
lods
ljmp
jbe
cmp
imul
add
rorl
adcb
push
add
int
sbb
iret
insl
or
add
enter
popf
add
hlt
lods
dec
test
imul
sub
mov
xor
cmc
dec
imul
insl
sbb
les
sub
ret
jge
mov
gs
inc
icebp
iret
gs
xchg
add
sub
cltd
push
mov
sub
rorb
lret
aas
mov
push
xchg
sub
repz
and
or
movsl
daa
or
pop
sbb
mov
mov
sbbb
and
fldl
xor
emms
xchg
jae
sbb
popf
jmp
sub
divb
sub
add
jl
je
xchg
insb
push
cmc
push
into
push
gs
not
js
shrl
or
not
push
jae
into
das
sbb
mov
or
push
mov
sahf
jnp
fdivrs
mov
mov
push
dec
cmpsl
sbb
inc
cwtl
aam
cld
lea
jg
aaa
mov
ficompl
in
in
mov
jae
inc
or
loopne
inc
sub
rcll
fs
nop
cmpsl
or
sbb
call
ds
ret
test
cld
popf
daa
pop
jecxz
fadds
les
mov
inc
dec
inc
in
adc
pop
mov
out
mov
xchg
adc
xchg
movsl
cs
gs
or
xor
std
push
shll
test
testb
je
adc
sbb
or
xchg
jnp
mov
das
add
mov
shlb
dec
inc
inc
int
push
sub
pop
clc
and
cmc
divl
shll
addr16
mov
stc
iret
imul
in
inc
repz
jl
lcall
test
jne
scas
lret
movw
out
int
sub
adc
pop
int3
inc
cmp
and
les
mov
inc
push
mov
jle
jecxz
sbb
sar
adc
scas
lods
cli
shlb
inc
pop
cmpsb
fisubs
mov
pop
js
jbe
sub
jmp
jle
xchg
insb
fldenv
cmpsl
in
subb
xlat
or
fcoml
ror
mov
adc
ds
pop
aas
enter
add
ja
loopne
xchg
sub
mov
fidivrl
push
inc
decb
fldt
push
and
mov
int
aas
hlt
mov
repnz
xor
and
or
xor
or
incb
loop
jl
cmovl
pop
adc
mov
cmc
pop
xchg
testb
clc
mov
dec
sarb
aam
daa
aad
mov
rcrb
iret
imul
dec
sti
aad
adc
jbe
jmp
cwtl
or
adcl
sub
std
pop
pop
es
adc
loop
push
jp
loope
enter
jg
jge
mov
rcrb
xor
jle
mov
jmp
rcr
icebp
cwtl
pop
mov
add
lret
add
fld
pop
or
cmp
xchg
dec
mov
push
cmc
fldl
push
daa
fld
dec
jno
lods
cmp
test
jge
dec
pusha
dec
and
in
into
dec
add
sarb
outsb
stc
dec
inc
mov
cmp
xchg
mov
shrl
inc
sbb
mov
inc
mov
add
ret
aas
add
xchg
jl
cwtl
xlat
les
pop
xchg
inc
adc
icebp
add
fistpll
xlat
and
adc
cmp
incl
stos
mov
sub
jne
pop
adc
mov
in
jp
jno
idiv
push
lods
push
xchg
hlt
lahf
addr16
rorl
lcall
jmp
sub
mov
mov
pop
loop
nop
add
cwtl
push
lea
jnp
and
jmp
and
out
fdivrs
bnd
aas
ret
mov
dec
shll
in
ja
sar
jbe
into
lock
mov
fsubl
fisttpll
pop
or
in
repz
sbb
lret
xor
lret
xor
loope
cwtl
mov
sbbb
test
repz
sub
cmp
outsl
adc
xor
lock
or
adc
xchg
je
addr16
inc
mov
int3
or
xor
jnp
add
sbb
ss
xor
cmp
dec
pushf
fdivs
inc
or
cs
adc
or
out
movsb
jo
inc
jmp
jge
icebp
add
pop
mov
push
lcall
andb
lret
imull
dec
sub
sti
adc
into
inc
lahf
daa
pop
sahf
stos
cmpl
sub
jb
lcall
or
lods
pushf
xchg
xchg
mov
and
test
es
aad
adcl
mov
loopne
popa
cltd
pop
push
sbb
int3
ljmp
call
fbstp
pushf
imul
insl
ljmp
xor
push
lock
imull
test
int
or
leave
addr16
repnz
cmp
dec
sub
jb
add
adc
sbb
pop
mov
or
scas
ret
fimull
dec
mov
fadd
fdivs
iret
dec
xor
icebp
xchg
or
aam
add
sub
into
push
push
aaa
lods
jo
inc
cmp
fistpll
sbb
dec
fimull
test
iret
daa
mov
jns
dec
ljmp
jne
shlb
std
push
jae
stos
cmpsl
xchg
jl
fsubr
cmpsl
idiv
cwtl
and
mov
cs
dec
sti
cmc
js
addr16
and
inc
push
xor
push
adc
call
aas
dec
fucomi
bound
ja
nop
xchg
push
mov
pop
sbb
movsb
ret
jnp
jle
pop
and
sub
pop
mov
jge
into
fdivrl
pop
rcr
je
arpl
inc
dec
sub
mov
sub
jnp
xor
lret
dec
xchg
jnp
loope
clc
ds
mov
lods
ret
loope
ret
or
xchg
cmp
mov
mov
stos
pop
add
or
aaa
lcall
xchg
sbb
mov
into
jle
aas
inc
jmp
adc
xchg
adc
lret
pop
fstl
jne
imul
rorl
sbbb
aas
xchg
nop
jp
ret
test
add
mov
lret
or
jle
test
gs
pop
leave
fs
dec
dec
enter
add
inc
jo
or
push
pop
movsb
sbb
jnp
clc
out
push
push
dec
addb
imul
movsl
rorb
movsl
in
cmp
pop
call
or
in
mov
movsl
popf
rorb
inc
push
lock
adc
in
xor
movsl
xchg
sub
daa
adc
sti
jmp
push
and
dec
bound
cwtl
clc
jp
or
jnp
mov
xchg
jb
pop
ss
jmp
int3
push
xchg
xchg
fbld
cmp
pop
ret
pop
clc
push
sbb
xchg
nop
inc
adc
sub
pop
mov
lods
lods
les
ds
mov
and
pop
jo
xchg
pop
xor
sub
call
add
sbb
mov
rclb
dec
jno
movsl
sub
insb
imul
sub
dec
or
adc
xchg
push
and
jno
imul
jg
js
cmp
loop
push
lea
cmpsl
out
sbb
lcall
cmp
mov
jbe
dec
push
stc
push
cmp
repz
xor
and
push
or
pop
jnp
imul
jo
mov
sub
and
mov
popa
jg
sbb
shrl
shrb
rclb
adc
push
sahf
sbb
pop
testb
mov
cli
jg
divb
sub
in
jbe
es
aad
lods
rcl
push
dec
lods
push
lea
mov
cmpsl
dec
in
sti
push
test
and
or
je
jmp
mov
jecxz,pn
fwait
dec
xor
and
jecxz
int3
out
add
rorl
push
or
hlt
cmp
ja
ret
lods
das
sbb
or
or
xchg
lret
out
sbb
cmpsl
mov
and
lcall
dec
stos
and
inc
mov
mov
xor
stc
push
loop
pop
lods
xchg
in
adc
in
xchg
int
shll
xlat
jae
cmp
pop
fnstsw
mov
scas
fisubrl
dec
push
shrb
aaa
add
sub
pop
mov
cld
out
cmc
push
dec
jle
lret
lock
mov
xchg
and
lret
mov
xor
inc
das
adcl
cmpsl
repz
xor
sub
loopne
inc
mov
sbb
in
das
push
and
test
aas
or
fs
lds
insb
xchg
xor
xchg
shll
cmp
push
ret
pinsrw
pop
out
sbb
inc
jl
sahf
mov
jp
inc
inc
cld
outsb
adc
iret
sub
mov
clc
adc
sub
test
inc
or
mov
lcall
mov
or
cmp
pop
stos
repz
pop
jne
inc
push
mov
pop
jecxz
pushf
sbb
push
pusha
sbbb
push
pop
jae
and
xlat
lock
and
dec
xor
xchg
adc
cmc
xchg
in
or
or
push
mov
dec
int
jmp
mov
xor
push
es
fisttpl
bound
out
sub
push
cltd
addr16
inc
test
inc
jmp
outsl
mov
divb
jle
cmp
out
popf
and
rorl
push
push
in
jg
xor
or
inc
inc
es
mov
mov
pop
imul
sub
or
js
pop
jecxz
fsubs
in
arpl
mov
arpl
pop
scas
mov
inc
ljmp
test
xchg
ret
add
cmp
sbb
fsts
add
mov
imul
inc
and
cmp
sahf
mov
js
xor
push
mov
aad
sbb
aaa
and
loop
inc
sbbb
pop
lcall
mov
or
cmp
ja
mov
jo
inc
jo
jo
mov
call
cwtl
jge
rcr
data16
pop
or
push
jb
jecxz
pop
testl
jmp
loop
adc
jmp
int3
ljmp
inc
sbb
mov
xchg
scas
dec
cltd
dec
mov
xchg
push
js
mov
fisttpl
icebp
mov
push
xchg
pop
add
dec
push
fdivs
mov
fcmovu
and
pop
or
pop
rolb
outsb
or
ss
sub
xchg
pop
dec
or
or
pop
lods
sahf
jae
out
out
adc
dec
pop
mov
mov
or
jg
and
jne
mov
sub
sub
jecxz
adc
xchg
xchg
sub
movsl
fwait
cwtl
sbb
adc
cmp
push
and
outsl
cltd
sub
lcall
sub
ljmp
aas
fstpt
jnp
cmp
or
movsb
sub
push
sbbb
and
fidivrs
sub
inc
hlt
add
xrelease
and
gs
test
dec
and
stc
or
inc
imul
int
orl
inc
cli
rcll
jg
stos
ljmp
push
iret
xor
rol
addb
sti
outsb
es
bound
scas
cmpsl
push
test
imul
dec
xor
lret
in
sbb
mov
ja
mov
add
pop
ds
ds
hlt
fcmovbe
cs
cli
icebp
pop
pop
mov
loop
xorb
cld
fsts
mov
imul
out
imul
add
add
in
dec
xchg
mov
movl
pop
into
ss
mov
mov
aas
stc
clc
sub
adc
push
mov
out
shrb
xchg
xor
cltd
out
push
push
sbb
scas
jb
outsl
cmp
cmp
cld
dec
scas
stc
jecxz
js
or
sbb
inc
in
cwtl
aam
jp
cmp
pop
outsb
pop
add
ds
mov
push
adc
repnz
icebp
dec
sbb
ds
pop
mov
jae
or
in
dec
adc
mov
fistpll
fmuls
jo
mov
or
pushf
inc
jp
or
lock
push
and
cmp
pop
xchg
inc
clc
js
sbb
stc
push
pop
pushf
cmp
outsl
mov
rep
lcall
mov
jg
mov
inc
push
test
cmpb
ja
test
jge
push
mov
mov
add
inc
sub
cmp
out
xor
push
cltd
test
sub
push
and
mov
cmc
sub
testb
mov
xor
jo
mov
xlat
cmp
dec
add
jno
xor
dec
pop
jo
leave
lcall
sub
ds
cmp
pop
dec
aaa
inc
ja
xor
cltd
mov
xlat
adc
cmp
pop
cld
inc
clc
and
push
ds
sub
in
clc
jnp
iret
mov
das
into
push
ret
dec
sub
xchg
fcompl
jns
xlat
mov
jp
xchg
mov
cmp
dec
dec
iret
insl
mov
jne
mov
dec
cmpsl
sbb
jp
xchg
repz
mov
rcrb
and
mull
call
ret
ret
xchg
inc
dec
lods
cs
xchg
add
int
es
mov
sub
xchg
cmp
cmpsb
inc
lods
pop
lahf
cli
inc
in
lds
pop
dec
int
xor
rorl
fdivr
jl
inc
out
ret
sbbl
shrl
inc
xor
filds
int3
data16
int
loopne
push
mov
call
std
add
cmc
jns
mov
jge
push
xchg
xchg
cmpsl
popf
fstl
cmp
es
pop
repnz
mov
xchg
inc
adc
dec
mov
xchg
shrb
loopne
mov
out
es
scas
out
jecxz
cs
pop
dec
lods
scas
cwtl
std
xor
mov
adc
les
cmp
les
or
xor
cltd
imul
jle
lods
movaps
ret
sti
cmpsb
test
pop
hlt
nop
fwait
ret
jnp
lcall
loop
test
insl
test
outsl
imul
mov
inc
cwtl
jg
test
bound
jg
mov
xor
mov
cltd
xchg
xchg
fwait
leave
in
jne
negl
addl
shl
dec
cmp
stos
out
jo
sub
xchg
jg
mov
jecxz,pt
mov
mov
cmp
fwait
imul
jmp
mulb
or
mov
mov
xchg
ljmp
pop
negb
cmpl
int
popa
push
fs
ss
stc
cmp
cmp
ja
fistpl
add
and
fwait
mov
mov
sarl
lret
shrb
movsb
push
mov
clc
adc
xor
mov
jb
push
jbe
add
fistpl
data16
dec
test
and
ja
sbb
in
adc
in
cmp
cmp
rcrb
incl
enter
sub
push
pop
adc
push
and
jnp
cwtl
lret
lret
adc
sahf
cmpsl
or
jge
pushf
adc
cmc
shll
std
call
rcrb
call
lret
sub
or
xor
push
pusha
dec
cltd
in
popa
jb
pop
xor
xor
xor
sbb
inc
push
and
cmp
bound
inc
xchg
pop
and
call
push
shrb
arpl
mov
ljmp
or
in
dec
mov
in
push
jmp
cmp
dec
mov
mov
push
add
xchg
pop
fwait
pop
arpl
push
cmp
sub
jmp
adc
mov
mov
xchg
hlt
mov
jns
mov
addr16
jge
loope
mov
lea
pop
cmpsl
out
jb
cld
jo
mov
pop
rcr
fildll
xor
pop
push
lds
cmc
fsubp
mov
out
mov
lahf
mov
or
xlat
andl
jp
in
sti
js
cmp
test
mov
fcmovnbe
mov
inc
jp
shrl
adc
stc
aas
dec
push
lea
inc
rclb
inc
dec
pop
push
rorb
adc
push
sbb
add
or
mov
nop
xchg
jge
mov
dec
jo
fdivp
aam
sbb
lea
pop
fwait
sbb
jg
repnz
das
or
inc
dec
int3
fistpl
jmp
in
les
sbb
arpl
and
mov
pop
adc
popf
mov
push
lcall
xchg
pop
add
idivl
test
pushf
cmp
les
in
ret
fbstp
call
xchg
lods
or
xor
je
cmp
call
test
or
pop
test
rcrb
sarl
test
pop
nop
push
add
xor
cmc
pusha
cmpsl
aam
arpl
fwait
cwtl
xor
jae
hlt
subb
or
aaa
scas
ret
add
loop
inc
out
or
jno
sbb
loopne
jb
or
dec
push
mov
cmp
or
fstps
mov
lods
xor
xor
dec
out
fwait
pop
outsb
dec
fimuls
fdiv
mov
cmp
pushf
fcompl
mov
push
xchg
test
and
in
mov
mov
and
enter
out
jno
mov
ds
mov
arpl
xor
sysenter
sbb
cmp
mov
lea
movsl
dec
ficompl
enter
inc
push
xor
pop
dec
push
jae
dec
in
push
rorl
cmp
sbb
insb
shll
mov
add
std
pop
add
cltd
mov
flds
out
adc
adcl
lret
xor
ret
xlat
xchg
sbb
mov
loope
sbb
mov
adc
xor
shrl
jle
repz
sarl
sti
add
and
bnd
sarb
imul
ret
pop
mov
scas
lret
xchg
pop
mov
adc
pop
jl
sub
cmp
cltd
inc
nop
xchg
hlt
and
pushf
xor
clc
lret
mov
mov
mov
aam
push
xor
push
in
push
test
mov
lock
mov
cmp
icebp
lret
push
lods
rorb
shl
push
xchg
sub
or
mov
and
jle
mov
adc
imul
and
dec
enter
dec
push
and
scas
inc
jnp
orl
aam
fwait
in
icebp
mov
test
repz
test
cli
fmul
inc
mov
adc
add
in
les
add
into
xchg
test
sahf
cld
lea
push
sarl
ds
mov
pop
fisttpll
xor
dec
shrd
pop
mov
cmp
xor
out
inc
movsl
xchg
fisubrl
fnstenv
nop
push
mov
test
and
test
dec
xchg
mov
pop
repz
mov
rolb
hlt
push
sbb
out
jnp
imul
and
xchg
aas
add
pop
xchg
xor
stc
mov
ret
std
xchg
loope
lea
testb
inc
negl
mov
and
xchg
add
scas
sub
cmp
lea
fsub
shrl
add
fisubs
mov
lods
mov
push
push
bound
add
cmp
add
pop
imul
aad
btc
mov
lods
scas
xor
xchg
bound
xor
das
ror
mov
dec
bound
jno
lods
mov
je
bound
iret
aad
out
mov
mov
fistpll
xchg
rcl
sti
cmpsb
xchg
mov
push
inc
movsl
ret
cmpsb
dec
je
subl
stc
cmpsb
jp
xchg
mov
cmp
cmc
sub
dec
xorl
pop
cmp
movsl
xchg
mov
imul
js
mov
lea
push
mov
dec
ffreep
in
add
ljmp
mov
jmp
movsl
pop
xchg
inc
mov
pop
cmpsb
adc
jp
add
dec
aam
rcll
fcoml
js
mov
stos
jl
xor
mov
mov
and
sbb
jmp
push
aas
test
je
mov
push
inc
and
add
rolb
jno
rcl
and
clc
sbb
mov
dec
mov
push
lret
stc
xor
inc
jno
stc
fsts
es
jo
in
in
cmp
cmp
ds
mov
pop
in
shr
lahf
mov
push
and
xchg
cmc
enter
scas
call
iret
inc
cld
cmp
stos
call
testl
into
jae
xchg
lods
cmpsb
sahf
lods
or
insb
shll
jns
lret
push
and
fiadds
into
push
push
in
sbb
adc
sbb
ljmp
cmp
dec
fidivrs
js
sub
cmpsb
adc
xlat
out
jnp
repz
fdivrl
scas
cwtl
and
dec
or
adcl
add
mov
fisubrl
dec
sti
xor
popf
rorb
xchg
aas
adc
out
inc
sub
out
mov
sahf
mov
xor
mov
xchg
xor
lods
fwait
push
push
inc
lock
ds
xchg
adc
test
imulb
ret
hlt
push
insb
dec
loope
sbb
or
div
push
loopne
sbb
fs
push
loop
sub
in
jbe
fsubs
mov
or
xor
lea
ret
adc
imul
imul
add
mov
fisubl
outsl
jge
sbb
jo
into
mov
fdivrs
es
adc
cltd
subl
cmp
std
sarb
adc
loopne
xchg
push
sbb
lods
aas
cli
and
mov
push
jne
cwtl
out
pop
lock
jbe
outsb
jb
fs
mov
scas
mov
add
push
xor
or
push
out
or
ds
inc
sahf
stos
or
or
dec
cmp
xor
xor
adc
sbb
push
adc
cmpsl
push
push
push
inc
sbb
lret
sub
das
mov
jbe
or
lahf
call
or
in
fstps
adc
mov
pusha
pop
push
jmp
jb
xchg
mov
imul
test
test
or
call
sub
pop
or
mov
int
push
dec
aas
in
dec
arpl
mov
add
mov
stos
test
push
mov
loope
mov
sbb
push
push
cs
jbe
mov
jb
aaa
aaa
das
dec
shlb
shll
rolb
clc
int
insl
xchg
fs
stc
mov
popf
xchg
negl
sub
addr16
xchg
aas
inc
jle
jle
test
xchg
inc
mov
xor
and
sarl
inc
xor
pop
cmp
stos
xchg
pop
adc
lret
cmp
and
xchg
mov
jp
imul
mov
es
sbb
fldl
add
push
add
fwait
push
mov
cmp
out
mov
out
cmp
mov
mov
push
les
ja
pop
push
sbb
mov
ss
mov
dec
cmp
pop
add
sub
jns
les
fistpl
ljmp
cmp
mov
repnz
sbb
pop
ja
mov
ret
jns
inc
insl
sub
sub
popaw
or
inc
notl
mov
movsb
mov
mov
jmp
es
out
call
gs
daa
mov
add
pop
dec
dec
xchg
xchg
cmp
push
pop
repnz
sti
inc
cmp
inc
jo
sti
sbb
dec
fwait
outsl
sbb
pop
pop
jle
push
push
cld
lods
loopne
fwait
test
jnp
mov
sbb
adc
out
mov
in
add
leave
inc
push
pop
cs
xor
jp
roll
cmp
mov
mov
jge
cmp
loope
dec
jecxz
sub
inc
jle
in
outsb
mov
pop
out
call
cwtl
lcall
push
es
ret
ljmp
repnz
cmp
cmpsb
xchg
pop
dec
outsl
xor
pop
push
mov
aam
out
xor
test
cmc
pop
aaa
cmpsl
hlt
xor
popa
outsl
cwtl
inc
cwtl
rorb
and
jo
ficompl
mov
sub
xchg
push
cmp
in
jmp
push
cmp
cmp
push
scas
ss
leave
pop
movsl
xorl
cli
shlb
imul
inc
test
fs
rol
out
xchg
mov
fs
int3
dec
sbb
push
sub
xchg
xchg
dec
pop
out
sbb
call
hlt
cld
mov
add
add
adc
leave
adc
cmp
pop
incl
lock
loopne
cmp
jb
mov
out
clc
cmc
push
sub
fwait
jp
or
dec
push
xchg
add
insb
lock
xor
dec
push
outsl
clc
xchg
daa
test
inc
repnz
iret
fwait
push
jae
cmp
pop
repnz
int3
sub
push
push
ficomps
xchg
fmuls
roll
imul
push
mov
inc
pop
mov
leave
fcompl
jg
rol
loope
dec
jo
das
push
xlat
bound
add
pop
xor
fwait
mov
push
fnstenv
bound
push
popa
xor
push
fildl
mov
fs
arpl
fimull
jno
adcb
ljmp
negb
lcall
hlt
dec
stc
or
or
sub
or
mov
clc
push
inc
sbb
lea
inc
test
or
sbb
dec
inc
subl
inc
int
inc
inc
mov
bound
fcmovnb
xchg
and
negb
aam
lret
jmp
adc
mov
jle
inc
sub
mov
sti
fsqrt
add
out
adc
adcb
pushf
ret
pushf
aaa
gs
or
ja
test
push
mov
push
mov
sti
sub
sub
out
insl
push
shll
pop
cmpsb
push
pop
bnd
xor
pop
inc
int3
sub
inc
outsl
ss
or
cli
ret
mov
cmpsb
cmp
out
push
das
pop
cmc
mov
pop
addr16
xorb
mov
adc
jo
xchg
cmp
adc
pop
loopne
clc
loope
lahf
xchg
inc
mov
adc
push
out
sub
sub
push
andb
xor
mov
aad
cwtl
inc
xor
mov
insl
inc
mov
cmp
mov
rolb
lahf
movsl
mov
push
fsubr
jge
cmc
or
lea
test
lock
mov
aas
arpl
mov
lods
pop
sub
add
cli
in
test
adc
dec
fsubr
pusha
or
and
add
pop
adc
in
xorl
cmpsl
test
mov
pop
jmp
cmc
ficoml
sbbl
gs
mov
fstps
jle
xchg
cmpl
mov
inc
mov
xor
lods
adc
cmp
testl
jno
cmovne
or
insl
test
rcl
pop
jae
outsl
add
cmpsl
dec
call
aam
in
mov
fldenv
jmp
leave
and
mov
out
pop
sbb
mov
in
inc
or
dec
pop
mov
imul
mov
push
scas
call
popa
bound
push
fst
cmp
mov
xor
arpl
push
bound
pop
mov
mov
cmpl
cmpsb
cmp
mov
jge
movsl
fiadds
or
cmp
ss
test
je
mov
mov
icebp
mov
add
lcall
out
xchg
je
sbb
xchg
sbb
push
or
pop
push
cmpsb
mov
clc
or
push
loop
mov
inc
push
mov
mov
out
cmpsl
in
popa
mov
ljmp
jae
adc
push
les
xchg
push
outsb
mov
sarb
push
lods
or
inc
push
xchg
and
cs
lods
mov
andl
pop
iret
xor
mulb
push
sar
cs
inc
sbb
or
in
push
jns
or
inc
inc
int
mov
push
adc
dec
xor
hlt
repnz
jl
inc
inc
into
and
test
dec
xor
lret
sub
push
out
xor
xor
add
in
xor
mov
bound
push
push
mov
sbb
int3
into
sahf
mov
or
es
sbb
cli
adc
imul
jg
imul
icebp
mov
push
mov
or
loopne
inc
lcall
je
aaa
adc
jno
cld
rorb
repnz
lret
push
out
in
repz
test
mov
xor
test
fisttpl
aas
sti
loope
jne
xlat
ds
bound
fsubrs
jne
push
push
test
in
and
sbb
jecxz
je
xchg
pop
lea
push
sbb
push
inc
out
cmp
movsb
jmp
sub
lcall
clc
fs
mov
test
mov
icebp
xchg
mov
imul
pop
stos
inc
sbb
fwait
sub
in
push
mov
adc
mov
add
jb
mov
cmp
jnp
sbb
adc
insb
loopne
mov
pop
fldcw
pop
lock
jmp
mov
fidivs
pusha
and
xor
push
rcll
dec
aaa
mov
mov
aaa
loopne
repz
xchg
or
mov
cmp
mov
addr16
aas
jg
rolb
pop
test
push
fs
cld
mov
lcall
lret
imul
es
fdivs
xor
int3
repnz
pop
pop
lahf
inc
mov
inc
jne
out
and
xor
xchg
test
idiv
arpl
pop
pop
sub
outsl
fisttps
mov
lods
adc
cmp
adc
mov
in
sub
push
imul
test
sub
mov
jmp
repnz
call
int3
scas
loope
add
sti
movsl
add
add
in
xchg
enter
sub
das
or
daa
aam
lret
mov
into
nop
and
jno
icebp
jmp
movsb
fadds
mov
fists
cli
mov
add
pop
jge
jge
sub
jge
repz
aaa
sub
das
aad
js
xchg
bound
cli
stc
mov
mov
push
mov
pop
into
hlt
shl
push
in
pop
imul
sti
and
or
pop
xor
mov
loope
jecxz
fs
ds
rclb
or
aad
test
mov
cmp
xor
adc
iret
outsl
push
js
cmp
xlat
cwtl
lock
cmpsb
data16
pop
popf
call
fsubrl
xor
je
or
in
je
xchg
dec
cmp
cmp
add
adc
insb
fstps
inc
arpl
jnp
or
pop
testb
shl
and
leave
test
mov
cmpsl
jg
mov
outsb
or
sbb
or
test
outsb
test
push
call
mov
sbb
lock
rorl
push
push
cwtl
aam
rclb
inc
xchg
mov
mov
aas
dec
mov
je
insb
dec
in
add
lcall
stos
repnz
enter
out
hlt
lods
mov
mov
shll
ficompl
cmp
clc
aas
testl
idivb
jge
scas
adc
inc
jne
aam
push
dec
cmp
jle
stos
add
fdivr
movsb
fisubrs
push
push
pop
cmp
push
xor
and
shlb
sarb
fs
inc
fnstsw
push
xchg
movsl
mov
outsl
mov
xchg
jns
xor
dec
out
push
mov
dec
rcll
scas
or
es
pop
mov
push
call
fstps
hlt
adc
xchg
popa
repz
sbb
xor
xor
andl
xlat
and
push
mov
fwait
push
jnp
xorb
ds
shlb
pop
das
mov
inc
lds
sbb
sarl
pusha
xchg
jmp
call
adc
into
pop
lahf
jae
pop
adcl
xchg
cmp
push
add
loop
pop
hlt
mov
cld
dec
les
std
loop
test
sysret
sub
cmp
pusha
mov
mov
or
jb
clc
rcll
inc
stos
mov
sbb
add
lea
lods
jb
xor
sti
mov
dec
es
push
inc
test
cmc
in
inc
shr
divl
lret
sbb
push
and
inc
mov
fdivrl
sub
dec
mov
xor
mov
rorb
sahf
je
rolb
mov
stos
push
cltd
sbb
popf
sub
jo
xchg
mov
popa
xchg
jno
mov
add
push
and
jo
jnp
into
data16
sbb
ja
daa
sbb
pop
xor
jg
push
mov
psrld
das
cli
ficoms
xor
sbb
pop
sahf
mov
pop
cmp
roll
mov
inc
mov
rorl
test
mov
sbb
movsb
mov
dec
xor
shll
movsb
mov
lret
pop
scas
ljmp
icebp
xor
adc
pop
lahf
sbb
sub
sub
cli
sub
outsl
adc
addr16
mov
les
inc
adc
cli
loope
push
or
movsl
mov
xchg
jb
xchg
xor
les
lock
aam
jmp
mov
fst
mov
mov
pop
insl
movsl
out
xchg
mov
push
arpl
loopne
mov
sar
sbbb
adc
pop
push
lret
dec
cmp
push
stc
ret
cmc
aas
adc
mov
test
jl
sahf
pop
ds
mov
dec
and
jne
popa
das
or
out
in
mov
adc
add
inc
popf
sub
subb
push
sub
adc
seto
dec
nop
clc
inc
sbb
jecxz
and
inc
add
xchg
sbb
popa
pop
sti
addr16
das
xor
mov
sub
mov
xor
cmpb
popa
or
in
imul
pop
mov
cltd
data16
in
push
xchg
clc
mov
and
rcll
jmp
fisubl
pop
push
sub
mov
cmpsl
imul
cmc
mov
ja
test
jle
test
fmuls
int
adcl
cmc
xor
popl
les
mov
shl
lods
and
call
mov
or
or
add
cltd
nop
rorl
push
stc
cmp
pop
xor
jp
adc
xchg
cltd
push
mov
push
add
push
mov
pop
mov
inc
push
cwtl
add
fadds
stos
mov
mov
lds
enter
pop
and
push
divb
lahf
imul
fnstcw
dec
pop
pop
lahf
mov
adc
or
in
pushf
xchg
out
cmp
inc
pop
mov
addr16
push
loop
and
inc
push
in
lcall
sti
xchg
inc
jo
popl
cli
lret
jmp
ficoml
loopne
daa
jl
mov
jne
inc
rcrl
push
pop
int3
cmp
faddl
std
cld
cmp
xchg
ds
jp
sbb
pop
fsub
scas
mov
imul
xchg
popf
sahf
sbb
imul
ror
or
int3
adc
fldcw
mov
jae
lea
rolb
ljmp
jge
adc
int
sti
mov
cmp
sbb
hlt
loope
mov
ficompl
cmp
ficoml
enter
adc
cli
leave
ret
mov
mov
pop
mov
and
push
jnp
scas
in
or
arpl
out
addr16
xor
jecxz
test
out
mov
lds
jo
mov
mov
jle
mov
cmpsl
int
xor
xor
jge
add
ja
sub
test
pushf
ret
jg
xor
inc
ret
loopne
imul
ja
xchg
aas
pop
cmpsb
sub
push
add
lcall
push
xchg
pop
fwait
push
push
push
sub
mul
push
lds
jb
mov
xchg
sbb
cltd
ss
or
out
xchg
or
aas
mov
movsl
jae
sbb
adc
imul
out
xlat
push
mov
mov
ret
xor
xchg
mov
jb
add
shll
stos
sub
push
es
pop
insb
jg
sti
jne
fs
outsl
inc
dec
aad
fistpll
cld
scas
jp,pt
jnp
xor
mov
cmp
imul
xor
stos
mov
jg
sub
in
mov
rcll
sbb
repnz
dec
mov
adc
jecxz
adc
das
push
adcl
dec
jle
mov
push
stos
adc
mov
ljmp
mov
movsb
push
cmp
adcb
push
xlat
cmp
mov
sbb
dec
push
jne
loop
cmpsl
inc
mov
mov
cmp
push
jmp
scas
add
dec
dec
lock
rcrl
pop
cmp
add
clc
shlb
lods
cld
mov
test
int3
int
or
mov
mov
xlat
sti
ret
shlb
push
mov
ljmp
push
fldcw
call
leave
insl
or
mov
flds
pop
add
int3
dec
test
jae
cmp
jb
mov
loopne
loop
addr16
leave
jge
add
mov
pop
push
push
sbb
shrl
pushf
mov
lds
lods
add
loop
xchg
jbe
icebp
mov
inc
pushf
sub
inc
and
lods
in
sbb
insb
mov
push
fwait
mov
call
pop
adc
pop
mov
and
cmp
loopne
mov
jecxz
adc
jno
lds
jo
nop
aaa
push
xchg
gs
lea
jne
pop
mov
mov
mov
xor
repnz
cwtl
imul
cli
fistl
fisubrl
dec
das
cmp
insb
add
push
js
jns
pop
mov
pusha
mov
mov
pop
outsl
int3
xor
into
inc
test
jo
inc
add
pop
xor
daa
insl
ret
dec
fdivrp
ljmp
loopne
mov
xchg
xor
arpl
add
aad
mov
icebp
cmp
orb
daa
cli
rorb
push
fwait
xchg
cli
insb
push
jmp
sub
imulb
sbb
jmp
sub
or
sbb
outsb
hlt
xchg
test
cmp
xchg
shll
sub
jge
lods
das
ss
fdivl
insl
mov
xlat
xchg
push
scas
lods
mov
xor
push
sub
push
clc
aad
mov
negb
in
jge
mov
xlat
int
jbe
lcall
shll
add
sub
fdivr
aad
pop
push
aaa
bound
in
dec
lahf
dec
mov
lods
lret
mov
jg
fnstcw
flds
lds
jp
cwtl
jg
sub
rcll
sbb
mov
add
aad
fisubs
and
xor
rcrl
sbb
pop
ss
push
es
xor
push
scas
xchg
adc
mov
and
enter
add
sbb
es
xlat
in
fisttps
push
clc
into
xchg
pop
lock
int
dec
adc
jge
jmp
xor
mov
jae
cs
gs
or
or
push
sub
jp
daa
lcall
bnd
loop
jmp
adc
sti
push
push
pmaxsw
lods
mov
push
das
xchg
pusha
sub
xchg
lds
jb
rcrb
dec
dec
aad
cmc
sti
lock
adc
cmp
jne
cld
mov
lcall
mov
div
les
mov
roll
pop
sub
xchg
scas
xchg
inc
movsl
aam
call
sbb
sti
sub
roll
dec
mov
add
mov
fsts
pop
outsb
cmp
out
sub
addl
insl
in
mov
or
xlat
mov
les
sahf
out
dec
jmp
xchg
pop
fists
rclb
add
jl
aas
inc
pusha
dec
or
lcall
or
or
sbb
jp
xchg
adc
add
pop
enter
dec
xor
or
jl
add
addr16
sbb
inc
aas
push
push
rorl
pop
mov
rorl
cmc
sub
mov
inc
arpl
xchg
cmp
xor
jl
sbb
cmp
jg
push
or
cmp
incl
jmp
pop
jle
inc
daa
fistpll
lds
cs
dec
lds
pop
stc
jecxz
and
sbb
rorl
cmp
incl
fcom
roll
pop
cmp
shl
leave
push
mov
push
xchg
decb
add
jecxz
pop
cmp
inc
fcoms
or
push
gs
jmp
mov
jno
pushl
int3
xchg
rcrb
pushf
push
push
add
jbe
dec
cwtl
pop
mov
aaa
mov
mov
mov
sub
test
or
xchg
inc
dec
gs
sti
and
jmp
push
sbb
movsl
xchg
das
cwtl
jmp
mov
addr16
enter
xor
dec
jb
arpl
mov
pop
and
imul
mov
push
inc
dec
dec
adcb
mov
pop
push
push
jp
ret
mov
pop
push
jecxz
jb
mov
in
pop
mov
mov
jmp
cld
push
dec
cmp
hlt
jecxz
add
and
xor
call
mov
mov
sbb
jo
test
push
fsubr
add
mov
mov
popf
sub
sbb
jle
dec
std
in
pop
out
stos
std
xchg
push
dec
pop
loopne
fstps
aas
adc
jno
push
call
ljmp
xchg
loopne
add
sub
mov
aam
aaa
adc
fcomi
popf
cmp
imul
or
rcrl
imul
adc
sarb
sub
pop
dec
sahf
xchg
imul
mov
add
mov
ja
inc
sbb
insb
cmp
jp
add
loope
jnp
arpl
or
pop
sbb
add
popa
push
xchg
leave
sub
mov
stos
pop
cwtl
loope
aam
xchg
dec
aam
sbb
mov
lret
iret
inc
ret
sti
mov
insb
popf
xorl
popf
add
push
data16
xor
inc
in
sub
mov
cmp
in
je
pop
arpl
xor
or
push
loope
sbb
xor
jle
imull
xchg
ss
movsl
mov
ja
fstpt
jb
push
outsl
jns
xor
mov
imul
push
lcall
shrb
cmp
aad
andl
js
jg
mov
leave
push
push
lea
mov
ret
notb
pop
mov
push
sbb
cltd
or
cld
adc
and
push
insl
mov
dec
jge
push
in
xor
xor
scas
mov
sbb
or
or
stos
mov
push
push
leave
loop
bound
shrb
xor
scas
movsl
daa
shlb
repnz
lret
shrl
pop
jbe
movsb
fcoms
or
insl
enter
imul
jecxz
mov
je
ret
subb
sbb
jle
add
lods
cmp
out
xchg
mov
adc
sbb
out
cmp
dec
jmp
push
stc
cmp
test
xlat
test
out
mov
cmp
mov
add
mov
ret
mov
stos
add
sub
stos
pop
push
out
push
imul
sti
add
in
cli
test
dec
cmp
ret
pushf
cmp
jg
xor
xchg
lret
in
and
dec
cmp
gs
repnz
cmp
sbb
jo
push
xchg
inc
mov
mov
sbb
sbb
les
xor
out
hlt
push
jge
nop
ds
in
addb
sbbl
ljmp
outsb
push
push
sbb
fldcw
mov
out
mov
shl
dec
xor
mov
pop
jle
sbb
and
scas
jbe
test
xor
mov
lods
mov
sub
add
das
idivl
or
shlb
pop
lret
cmp
push
mov
or
test
dec
mov
jp
nop
or
add
sti
aam
jno
cmp
in
scas
xchg
xlat
xor
inc
sub
jmp
mov
inc
popf
dec
sub
or
mov
dec
or
cwtl
ljmp
stos
jl
pop
stc
push
sarl
mov
or
mov
add
xchg
int
push
and
out
mov
or
arpl
popf
dec
ja
enter
cmpsl
out
jo
push
pop
movsl
test
xchg
int3
cmp
push
pop
xchg
scas
outsl
xor
cmpsl
orb
int
adc
bnd
imul
ret
or
fwait
pop
add
test
sbb
fstpl
pop
test
pop
push
jge
push
test
fdiv
icebp
ljmp
ret
adc
push
xor
jmp
psrlw
mov
xor
pop
mov
or
pop
sarb
test
pop
cmp
mov
sub
cmp
jecxz
xor
in
pop
push
aam
xor
or
dec
in
push
push
fildll
xbegin
xchg
mov
sub
xor
xchg
in
lods
arpl
and
xor
inc
pop
and
push
fistl
mov
cmc
aas
add
mov
shll
sti
mov
sbb
ds
ret
nop
cmovp
hlt
fcoml
aam
hlt
movsl
jecxz
dec
xor
dec
aam
js
in
jge
add
popf
lcall
rcr
ljmp
inc
loop
sarl
inc
inc
addr16
ljmp
sub
ljmp
mov
push
es
aad
or
xchg
inc
scas
sub
xor
fwait
ja
setl
dec
adc
aam
popl
or
add
fidivrl
add
dec
daa
cmp
mov
test
jge
fcmovb
out
sub
add
dec
dec
jmp
fstps
xchg
and
xor
outsb
scas
or
mov
push
sahf
aaa
mov
and
outsb
xor
aad
jl
and
rorl
lods
ja
movsb
mov
fisttps
pop
adc
repnz
sbb
popa
cmp
mov
add
mov
push
xchg
or
adc
pop
jmp
jbe
icebp
mov
insb
add
xchg
stos
cmp
sti
push
inc
rolb
pop
aad
jbe
mov
rep
loop
ss
cmp
mov
ljmp
and
cmp
push
mov
js
lcall
aad
mov
stc
gs
sahf
scas
xchg
ret
jmp
or
mov
stos
aaa
inc
int3
cwtl
pusha
es
je
mov
and
movsl
pusha
jo
test
cmp
lods
dec
mov
mov
divb
xchg
aaa
int
push
call
inc
into
faddp
inc
imul
call
push
aad
stos
aas
mov
lds
jne
inc
pop
aad
fwait
push
ror
xchg
aas
adc
jp
jecxz
and
cmp
js
jmp
movsl
mov
push
repz
call
jae
mov
out
dec
movsb
in
xor
repnz
jg
push
mov
iret
aas
jl
mov
fcompl
pop
aad
and
mov
das
xchg
jmp
dec
movl
js
fsubrl
inc
jecxz
ja
lods
xchg
daa
stc
dec
pushf
les
dec
addr16
out
mov
ffreep
inc
jo
ja
in
test
xchg
dec
or
int
push
xor
lahf
sbb
and
rcr
xlat
dec
repz
xor
lret
jecxz
shlb
aam
add
pusha
lock
jmp
shll
adc
out
dec
div
clc
ljmp
xor
rcl
push
lds
add
sahf
pop
rorl
lods
xchg
movsl
or
or
add
testb
lock
in
ljmp
xchg
or
jne
testl
and
jo
add
mov
push
and
mov
sub
xchg
test
cli
gs
push
push
push
movsb
aad
cli
and
add
xchg
cli
lock
or
leave
xchg
mov
sub
test
movsb
pop
ficoml
cmp
mov
mov
sar
jnp
adc
xor
mov
ret
cmpsl
cmpsl
xor
lret
nop
daa
data16
aad
xor
mov
int
test
sbb
jnp
dec
jp
xchg
mov
int
lret
sub
pop
or
mov
sbb
and
fldl
add
cmp
popf
mov
inc
xchg
cmp
test
add
mov
xchg
cmpsb
lock
cmp
cmp
shll
pop
enter
test
push
sub
outsl
mov
nop
test
test
lret
in
and
frstor
xor
stos
mov
lcall
mov
push
and
int3
xchg
test
mov
hlt
xchg
cmp
pop
xor
in
jbe
hlt
rcrl
and
scas
mov
cmpsb
mov
adc
add
inc
sti
inc
push
and
xchg
mov
push
loop
int
das
sub
mov
sahf
adc
cmp
inc
sti
push
sub
inc
xchg
fdivs
loopne
stc
test
test
out
bswap
sub
in
adc
push
clc
or
add
stc
sbb
mov
or
filds
addb
outsl
cmpsb
mov
and
repz
cmp
pushf
arpl
sbb
or
in
add
shll
std
cs
pop
aas
lret
cmp
xchg
popf
lea
scas
mov
lahf
sbb
mov
adc
test
scas
xor
inc
aaa
es
icebp
out
loope
push
inc
clc
icebp
loopne
sub
cmp
pop
push
aaa
in
mov
ror
scas
push
mov
jg
in
loopne
and
test
dec
int3
mov
xchg
andb
mull
call
mov
mov
cmpsl
jae
mov
xchg
xchg
adc
sub
in
sub
shl
xchg
and
cwtl
cmpsb
das
cs
in
sub
stos
data16
ftst
jl
enter
sbb
cmp
mov
inc
cmpsl
sti
rol
outsb
mov
and
xchg
push
or
pop
inc
pusha
bound
in
test
sbb
loop
sbb
add
xchg
pusha
xchg
bound
outsl
push
xor
scas
or
cli
mov
fs
mov
sub
push
pop
push
adcb
gs
dec
mov
xor
push
fnstcw
lock
jbe
jns
fimuls
cld
dec
mov
mov
ss
xchg
stos
xchg
aad
aaa
jbe
jle
and
mov
neg
lahf
jg
fstpl
into
js
lcall
push
xor
sbb
iret
fldl
rclb
out
push
rclb
cmp
mov
cmp
adc
dec
push
sbb
in
mov
mov
sti
dec
jb
add
xchg
cmp
lret
and
xor
pop
insl
mov
rolb
inc
push
lea
push
inc
imul
loopne
cmp
push
cld
fiadds
mov
sbb
push
in
loope
push
jmp
gs
push
push
addr16
or
shl
inc
and
pushf
lods
jmp
sarb
inc
inc
inc
dec
xor
in
in
in
bswap
stc
in
jb
mov
mov
jmp
and
icebp
push
shll
imul
sbb
test
or
outsb
mov
mulb
fcmovne
aam
test
sti
pop
inc
or
fstpl
fstl
test
push
int
add
jmp
test
shr
cli
mov
xor
movsl
xor
mov
orl
and
sub
movsb
outsb
dec
insb
pop
in
cmp
jle
mov
shl
jle
jle
jo
add
ds
mov
out
sar
cmc
ret
stc
aaa
jg
out
movsb
and
cld
push
fidivrs
lock
mov
aad
adc
repz
popf
lcall
add
rorb
ds
scas
push
movsb
filds
mov
adc
and
mov
adcb
jno
mov
pop
mov
sti
xchg
or
mov
jp
ljmp
sbb
inc
xchg
xrelease
lcall
call
shlb
xorl
jmp
mov
inc
loop
push
daa
mov
push
jne
popf
fsubs
xchg
push
push
rorb
xor
nop/reserved
les
cmpsb
lahf
mov
popf
push
loopne
scas
xor
push
and
sarb
mov
inc
add
lods
fisttpl
daa
sub
pop
daa
in
or
out
pushf
sub
outsl
jbe
dec
inc
push
idivb
testb
dec
jno
js
in
cs
cs
xor
mov
lock
xor
pop
adc
into
das
mov
cmc
inc
push
adc
mov
adc
or
mov
sarl
imul
mov
sub
psllw
ret
mov
cmp
scas
cli
adc
mov
lods
dec
and
out
inc
bound
cli
sub
cs
xor
aaa
ror
jecxz
stos
jmp
push
adc
jle,pn
loop
lcall
fs
sbb
xor
cmc
push
aas
into
pop
or
jecxz
icebp
xor
pop
lds
outsl
clc
out
jns
cwtl
pop
gs
stos
push
push
scas
sbb
pop
addr16
xor
call
jbe
xor
cmp
xor
cmp
pushl
jb
shlb
sub
icebp
or
daa
hlt
sbb
push
test
lahf
ds
scas
fstps
popf
movsb
jmp
mov
cmp
push
fcomp
dec
sub
inc
mov
cmc
xchg
and
mov
xor
repnz
stos
iret
add
or
cmp
popf
mov
push
jmp
scas
pop
fcompl
push
stos
cs
mov
lret
data16
push
push
loopne
xor
jp
aas
in
sbb
stos
enter
xor
mov
or
test
push
mov
fld
push
in
jb
pop
test
arpl
popf
xchg
int3
testb
xchg
sbb
sub
jns
movsl
addb
cmpsl
stc
add
mov
cltd
xchg
jne
adc
bound
subps
fidivrs
cs
inc
pop
adc
pusha
inc
xlat
or
push
and
add
fldl
xchg
add
lods
sarl
mov
imul
jmp
into
add
add
scas
or
mull
sti
dec
sub
sub
mov
fcoms
cmpsl
in
shll
sbb
mov
jg
shll
jne
stos
xor
add
outsb
mov
xchg
scas
lret
fsubrl
fstl
mov
testb
or
scas
cmc
xchg
dec
daa
pop
jae
pop
push
and
test
mov
cltd
lods
push
jns
push
lds
xchg
iret
dec
in
cmp
negl
push
add
push
mov
dec
mov
mov
addr16
sarl
mov
pushf
clc
das
dec
test
sub
mov
outsb
jmp
test
ljmp
js
cld
sti
push
call
mov
mov
mov
mov
cmpsb
bound
or
sbb
test
aad
jo
int3
mov
xchg
inc
out
scas
xlat
pop
lock
bound
shr
es
popf
sbb
call
xchg
mov
pop
pop
pop
or
lods
aad
push
insl
test
das
xor
sub
lock
cwtl
jp
mov
jnp
sbb
or
int3
in
lods
inc
mov
pop
inc
mov
out
pop
sub
shlb
mov
cmp
mov
adc
cmp
popl
xor
mov
dec
mov
imul
inc
lcall
shrl
sar
mov
dec
push
push
int
sub
push
or
loopne
jmp
es
adc
je
cmp
fistpll
stos
push
sbb
sbb
mov
dec
ds
loopne
fwait
adc
lods
push
pop
in
jecxz
popa
or
xchg
neg
adc
scas
pushf
jae
cmpl
or
lds
lea
jbe
sub
roll
imulb
in
lock
jno
test
add
fldenv
mov
insb
dec
popa
mov
ss
mov
jo
fstl
or
roll
imul
pop
push
aad
scas
enter
cmpsb
int
in
inc
scas
inc
sbb
push
rorb
dec
wbinvd
outsl
jbe
filds
addb
ds
pop
mov
cs
cmc
mov
sbb
inc
sub
adc
negl
inc
pop
or
jmp
dec
movsl
loope
sub
mov
xlat
sbb
xor
or
adc
lds
and
xchg
push
mov
decl
movb
adc
mov
push
or
mov
mov
mov
pop
jo
out
fcmove
sub
lods
sub
jle
pop
test
mov
push
dec
movsb
scas
fmul
repnz
lcall
pop
or
lods
xchg
inc
out
jmp
rolb
ljmp
cli
push
scas
or
outsl
inc
repz
push
movsl
lods
in
inc
ret
aad
mov
push
add
push
js
sub
add
loope
push
in
lret
fdivrl
sahf
ss
in
lcall
out
call
xor
dec
mov
and
lahf
dec
fsub
or
shl
jmp
das
inc
mov
mov
call
lret
jno
mov
stos
push
pushl
loope
push
jb
fiadds
daa
cmp
rorl
xchg
out
out
add
fists
dec
pop
sbb
stc
nop
mov
rorl
sbb
mov
and
xor
loope
lods
jb
mov
xorl
shll
adc
stos
enter
dec
ret
int3
sub
gs
mov
ds
jns
mov
mov
loop
or
cmc
cmp
xorb
pop
sbb
cmpsb
sub
sub
sbb
push
or
lret
sbb
mov
sahf
mov
ficoml
lret
notl
je
push
fwait
pop
data16
repnz
mov
push
pop
xorl
sahf
sets
and
inc
sub
in
pop
jne
xchg
clc
jmp
repz
arpl
mov
cwtl
aas
sbb
ror
ret
ljmp
out
or
movhpd
xchg
cmp
sbb
clc
lret
xor
and
cmc
imul
aam
aam
jbe
mov
outsb
clc
jmp
int
les
pop
and
out
jle
jl
adc
pushf
test
nop
subl
fsts
mov
movsb
into
jg
pop
movsl
cmpb
inc
lods
out
std
ja
ficompl
in
jge
xor
adc
pop
sbb
and
push
in
jb
cmp
push
loop
js
mov
or
push
test
stos
xor
in
sub
test
mov
sbb
inc
sub
lock
and
in
sbb
fbstp
jle
mov
stc
fwait
cmp
rclb
jno
cmp
scas
lock
push
test
push
mov
pop
repnz
dec
lods
lcall
jmp
pop
xchg
into
push
and
sti
nopl
pop
adc
popf
add
mov
sahf
cmp
push
sub
mov
scas
call
ret
xor
jge
inc
jo
dec
arpl
jae
mov
sbb
adc
xor
xchg
aaa
std
and
mov
mov
jnp
push
push
movsl
lods
mov
fcomps
imul
sbb
insl
xchg
jp
in
xor
push
nop
hlt
inc
jmp
dec
add
addb
sahf
movsb
sbb
jns
fiaddl
int
push
mov
add
inc
test
push
cmp
xchg
mov
sbb
cs
or
and
fiaddl
lahf
int
and
mov
ss
fidivl
repz
lcall
dec
or
mov
popf
iret
sub
sarl
mov
adc
aam
sbb
xchg
sbbl
mov
js
and
or
aam
fldpi
mov
jno
daa
cmp
and
icebp
xchg
mov
sti
dec
aam
xchg
or
ss
sarl
arpl
lods
dec
adc
or
imulb
daa
stc
pop
lea
iret
cmc
or
or
lea
mov
rcrl
jne
mov
out
cli
cmove
adc
or
adcb
pop
iret
push
insb
add
xor
jnp
int3
inc
in
lret
aaa
sub
mov
cmpsl
jb
push
sahf
sti
adc
pop
jns
call
cmp
and
mov
call
sarb
adc
cld
mov
pop
sbb
xor
adcl
mov
enter
decb
cmpsb
and
cmp
jg
rcll
lret
mov
iret
mov
mov
aad
mov
adc
or
inc
sbb
cmp
es
repz
fmuls
or
push
jo
push
in
inc
cli
in
sub
fisubrs
mov
sub
mov
and
divb
int
inc
rorb
push
lret
mov
fcmovnb
sbb
pop
add
sbb
arpl
push
jg
xorl
xchg
inc
loop
dec
imul
add
sbb
ret
mov
mov
fcoms
in
sbb
int3
push
in
jge
inc
cmp
add
bound
sub
xor
lret
in
insb
and
push
rolb
sbb
mov
aad
xchg
lret
or
addl
inc
das
jecxz
push
cmp
inc
les
out
aaa
mov
popa
sbb
out
xor
cld
loop
add
mov
push
movsb
in
sti
clc
ja
fstl
pop
mov
in
out
push
aaa
mov
push
xlat
into
mov
cmp
and
sub
jae
inc
xor
jns
popa
cmc
push
jo
cwtl
clc
addl
push
and
dec
jmp
dec
shrl
out
dec
out
jl
push
call
cmpsl
test
addr16
mov
es
inc
sbb
push
push
fwait
dec
add
xchg
jb
mov
adc
mov
loop
std
repz
inc
xor
fstp
fbstp
jne
imul
sahf
mov
mov
dec
or
in
hlt
orl
bound
into
or
fprem
push
push
mov
mov
add
cmpsb
call
outsl
dec
dec
in
outsl
jne
and
pop
sub
fwait
xchg
lds
mov
mov
mov
jecxz
dec
push
and
lret
adc
int
push
or
add
in
insl
test
pop
frstor
out
xchg
stos
into
or
pop
fists
mov
jge
cltd
push
inc
faddl
pop
mov
lret
insl
xor
lds
in
add
shlb
jnp
imul
pop
xor
add
and
adc
mov
lock
in
lahf
xchg
daa
sub
ljmp
push
nop
repz
pop
mov
shrl
sbb
clc
test
dec
pushf
jb
aad
shrl
sbb
ja
pusha
pop
adc
mov
out
push
es
cmp
enter
mov
nop
pop
inc
or
rclb
cltd
mov
test
adc
lret
mov
pop
mov
dec
push
add
insl
lret
mov
sbb
xor
dec
sbb
mov
dec
pushf
lods
test
mov
repz
mov
add
ret
mov
mov
divb
xchg
mul
gs
stc
out
call
addr16
cwtl
sub
dec
mov
jne
dec
lcall
subb
loopne
inc
aam
fiadds
cmp
iret
cmp
pop
mov
inc
push
jnp
pop
leave
lea
sahf
int3
scas
xor
mov
mov
pop
fmuls
out
or
jns
sbb
adc
mov
int
pop
popf
jo
fbstp
push
xchg
mov
mov
pop
jb
xchg
jmp
test
sbb
sahf
push
xor
push
out
rolb
lea
xchg
mov
loopne
es
dec
test
mov
xchg
xchg
and
sarb
insb
xor
sbb
test
mov
scas
sbb
add
sub
dec
dec
clc
push
jo
cmp
popa
mov
sbb
incl
sti
cmp
adc
std
jae
je
out
jecxz
inc
aas
or
rcr
mov
sbb
ds
push
enter
cmp
sbbb
call
sbb
push
enter
aas
addr16
mov
rcrb
add
pop
mov
movsb
mov
xchg
and
jmp
pop
in
ret
mov
loopne
ljmp
mov
sti
jae
into
das
test
or
es
sbb
jp
jbe
pop
add
shll
cmp
dec
mov
xor
orl
pop
xor
sti
movsl
outsb
roll
arpl
mov
cld
sbb
jmp
loopne
and
mov
daa
mov
popa
pop
pop
fbstp
sub
dec
mov
icebp
sub
mov
and
pop
stos
call
mov
cwtl
or
rcrl
out
sbb
dec
scas
mov
mov
adc
push
dec
daa
mov
addr16
lock
repnz
add
clc
mov
mov
out
int3
mov
leave
xchg
fwait
daa
xchg
aaa
inc
mov
jle
fs
test
repnz
lds
push
mov
fwait
or
outsb
aad
adcl
mov
jb
out
jmp
sub
jecxz
jmp
mov
inc
es
loopne
dec
cmpsb
out
pushf
nop
fsubrs
pop
inc
fucomi
push
add
dec
adc
xchg
sbb
cmp
jge
bnd
mov
movl
lret
insl
in
lods
hlt
pop
clc
out
fldt
and
pop
cmp
stc
sub
mov
sub
shl
dec
push
fwait
push
outsl
jbe
add
ljmp
or
les
pop
inc
test
into
sbb
mov
daa
inc
sbb
dec
dec
mov
jo
sub
sbb
cmpsb
andb
inc
xchg
mov
adc
mov
cmpsl
xorb
call
imul
std
negb
xchg
jo
in
mov
mov
dec
sti
or
es
lret
push
loope
iret
or
test
daa
movsb
adc
push
insb
leave
or
mov
add
xlat
mov
mov
into
inc
addr16
dec
mov
in
dec
jbe
push
movsl
jl
inc
fcomps
push
andl
insl
scas
jo
mov
jnp
in
pop
xor
cli
imull
lds
fisttpl
cmp
and
adc
std
lods
jb
or
push
movsb
iret
and
shl
xchg
pop
jae
add
adc
xchg
or
roll
addb
adc
hlt
sbb
sti
jmp
std
or
lcall
cltd
dec
sub
or
mov
test
mov
pop
adcl
iret
cmp
rclb
add
movsl
imul
out
push
mov
int3
stos
fbld
pop
mov
scas
lret
imul
xchg
lahf
loopne
add
in
les
fldt
repz
cmp
fstpl
cmpl
adc
sti
pop
and
aad
jo
and
call
inc
ret
bound
adc
xchg
ss
push
cmp
push
sbb
mov
sub
div
mov
push
xor
aam
xchg
adc
lret
xor
fimuls
xchg
loop
sbbb
sbbb
pop
and
jne
pushf
pushf
sbb
mov
sbb
lods
and
mov
pop
roll
montmul
cmpsb
pop
add
dec
sub
data16
cmpsb
push
dec
fists
nop
xlat
fstpt
xor
out
repnz
xor
call
jle
dec
xor
cmc
lods
fdivl
sahf
je
es
loope
xchg
xlat
mov
dec
push
cs
popf
inc
push
testl
aas
fnstsw
add
sbb
mov
and
or
negb
xchg
loopne
popf
mov
imul
pushf
inc
fidivs
leave
jge
movsl
sarb
cmp
fidivs
inc
cwtl
mov
jp
lds
mov
sbb
rorb
inc
stos
cmp
bound
repz
push
jle
dec
adc
pop
pusha
jae
push
cmp
mov
push
nop
jl
xorb
or
repnz
insl
push
or
mov
sub
push
call
rolb
push
and
insb
mov
pop
dec
insb
iret
aas
imul
ror
mov
gs
mov
ret
mov
insl
pop
pop
std
inc
sbb
imul
fwait
mov
in
rep
inc
xor
negb
jne
or
fwait
jge
xchg
dec
jno
pop
leave
sub
cltd
pop
je
jnp
js
adc
rol
shlb
lea
in
xchg
out
fs
cmp
or
roll
leave
cmp
pop
adc
frstor
iret
sbb
mov
sbb
dec
cmp
xor
lock
test
xor
ret
mov
cltd
cmpsl
lretw
push
dec
mov
pushf
mov
jbe
pop
int
cmp
insb
jo
addr16
jno
out
dec
fdivrp
and
push
xlat
push
scas
or
fsubl
ljmp
clc
xchg
xchg
add
lock
push
lds
inc
jg
pop
jae
mov
lret
xchg
mov
xchg
rcr
sti
int
addb
clc
inc
cmp
inc
jno
inc
and
adc
add
pop
dec
test
push
in
push
sbb
shl
adc
sti
xchg
popf
xchg
sarl
xchg
std
sarl
mov
insb
iret
popf
inc
jnp
addr16
add
push
inc
std
icebp
sub
push
mov
cwtl
jae
daa
bound
dec
mov
movntq
sbb
rcr
outsl
cwtl
sub
scas
hlt
inc
hlt
inc
pop
mov
les
arpl
jb
scas
cmovle
jbe
cmp
or
stos
push
mov
mov
sbb
xor
cmp
pop
mov
and
aad
or
pushf
bswap
ret
push
mov
mov
mov
xchg
and
inc
push
mov
mov
cmpsb
pop
es
cmc
loop
bound
outsb
aad
mov
sbb
cmp
xor
push
lret
mov
imul
jmp
test
mov
lea
ja
jle
or
shr
pop
subl
es
pop
into
push
adc
in
mov
push
jg
push
mov
adc
cwtl
push
mov
dec
or
adc
push
fnstcw
aas
jne
stc
jp
cbtw
mov
inc
call
fst
adc
jp
add
xchg
add
cmp
add
mov
pusha
cmp
push
insb
xchg
mov
mov
stc
add
lods
inc
mov
mov
mov
pop
or
xchg
sub
out
mov
hlt
cmp
or
aas
daa
and
lds
cmc
add
xor
lods
stc
mov
mov
outsl
sub
decl
jp
ds
or
sub
add
or
mov
insl
mov
out
xchg
push
cmpb
push
mov
push
mov
mov
arpl
inc
push
and
jmp
jle
xchg
xchg
ss
lret
icebp
lods
cli
pop
test
or
mov
or
lods
cmp
xchg
negl
punpcklbw
orl
inc
xchg
std
insb
movsl
sub
insl
in
cld
pop
inc
cmp
rorb
mov
rorb
add
mov
mov
imul
adc
pop
lods
sbb
jge
jb
imul
inc
movsb
pusha
inc
imul
nop
sahf
sarl
popf
imul
repz
cs
jns
jl
data16
out
sbb
mov
mov
and
and
pop
inc
and
fwait
daa
mov
bound
inc
adc
outsl
div
scas
mov
xor
mov
dec
inc
or
xor
stc
int
stos
dec
cmp
push
adc
push
mov
push
shl
icebp
orl
bound
movsb
mov
xlat
push
xchg
adc
rol
push
movsb
in
ss
jmp
mov
add
jl
data16
pop
outsb
je
insl
pop
pusha
cli
mov
lods
sarb
xor
cmpsb
insl
push
mov
imul
xchg
adc
sarb
sarl
scas
and
pop
into
mov
mov
add
mov
in
mov
mov
xchg
mov
jp,pn
test
jp
insb
in
test
idiv
sub
mov
dec
sbb
add
sub
lahf
test
xchg
jl
aas
lods
or
loop
inc
rcll
movsl
add
ret
inc
movsl
ds
sbb
push
fld
inc
jne
cltd
xchg
insl
scas
cmpsb
mov
fsubs
pop
es
scas
cld
testb
das
cmpsb
push
in
leave
cwtl
xchg
push
into
repz
scas
mov
mov
mov
fbstp
mov
jmp
sub
pop
aaa
shll
dec
arpl
das
mov
mov
popa
bound
xchg
mov
push
nop
sbb
cmp
jl
push
orl
cmp
add
mov
inc
xchg
mov
jb
xor
enter
aam
xchg
pop
hlt
test
ret
shl
test
test
push
imul
or
dec
xchg
xor
shrl
cmp
bound
dec
jmp
mov
lds
arpl
shrl
fcmove
fcmovb
lea
add
in
loopne
push
mov
cmpb
adc
shr
add
int
sub
mov
jle
mov
and
loop
loope
fidivl
dec
mov
cwtl
xchg
xchg
clc
xchg
cltd
sbb
aam
repz
mov
pop
je
adc
js
outsb
cmp
jnp
add
jb
dec
adc
lds
pushf
lods
xchg
pop
push
sub
fsubl
sti
je
clc
aaa
dec
or
pushf
test
inc
xchg
repnz
imul
jb
outsb
mov
lret
hlt
inc
and
xor
push
inc
repnz
xchg
scas
sub
sahf
dec
shlb
or
pop
call
pusha
mov
push
insb
js
movsb
nop
out
add
sbb
mov
add
fnsave
mov
or
cld
enter
or
push
outsl
jmp
push
jg
xor
int
cwtl
mov
data16
fcomps
movsl
fisttps
test
aam
sub
fidivrl
fcoml
out
mov
cmpb
cmpb
std
cs
sub
popf
int3
dec
loopne
dec
ret
int
push
dec
mov
fidivs
mov
xchg
data16
jbe
or
xchg
bound
rolb
jge
push
mov
lret
push
pop
into
pop
into
mov
insl
pop
xchg
scas
or
pop
das
iret
addl
xchg
xor
pusha
cmp
mov
xor
add
xchg
sub
add
adc
test
cmpsb
push
xchg
test
mov
mov
inc
dec
imul
loop
push
add
adc
or
fstps
pop
pop
fcmove
lods
mov
call
imul
decl
enter
and
add
push
push
push
aam
xor
and
sub
pop
jg
fwait
pop
jl
lods
pop
sub
daa
mov
jl
adc
push
iret
jnp
pop
iret
ret
hlt
inc
loope
mov
xchg
mov
mov
cmpsl
and
cmpsb
mov
test
aad
inc
and
andb
xor
test
jge
inc
mov
dec
mov
pop
repz
in
test
test
cmp
or
lods
aad
outsl
mov
adc
lahf
xchg
xor
cld
loop
push
icebp
loopne
and
mov
loope
cmp
aas
cs
cmp
data16
hlt
pop
or
addb
andb
jge
inc
popf
fildll
das
xchg
stos
jo
dec
sub
fadd
mov
sbb
sahf
mov
les
movsb
sub
imul
jo
add
sti
andl
fidivrl
xchg
cld
icebp
data16
loop
hlt
jmp
xchg
xchg
xchg
pop
fmull
loope
inc
push
sbb
stos
pop
dec
add
cltd
adc
inc
into
vpshaw
push
addr16
in
cmp
push
mov
stos
test
sub
adc
in
sub
sub
sub
fists
push
xlat
inc
dec
dec
fmul
add
jp
or
cmp
imul
pop
mov
inc
mov
jmp
push
inc
jle
dec
and
sbb
mov
push
out
dec
fcmovbe
cmpl
xlat
cmp
push
cmp
xchg
negl
xchg
sbb
add
std
or
ja
mov
jp
shll
mov
dec
insb
aam
push
cmp
mov
jne
fs
mov
sbb
enter
std
adc
mov
mov
and
add
mov
cmpsl
sub
popa
jmp
lcall
jae
lahf
dec
push
pop
mov
xchg
or
push
lret
aas
ret
xor
loope
adc
iret
xchg
add
xchg
scas
cmpsl
lods
lods
cmp
fmuls
sahf
push
pop
dec
mov
into
mov
pop
jae
punpckhwd
bound
cmpsl
xchg
adc
mov
and
adc
shlb
cmp
cli
in
loop
mov
popf
push
stos
jno
and
add
xor
or
pcmpgtw
int3
add
mov
aam
cltd
adc
rorl
pop
sbb
sub
xchg
jo
mov
sbb
add
or
roll
in
dec
mov
and
sbb
adc
imul
mov
sarb
lret
jg
or
iret
jecxz
vcmppd
loope
dec
cltd
je
bound
stos
add
sti
addr16
lret
jmp
add
mov
int3
testb
inc
and
xchg
pop
fs
call
sahf
push
int3
adc
fildl
cmc
sub
getsec
int3
and
pop
cld
inc
jmp
mov
stos
das
es
push
jbe
dec
jg
mov
xlat
jns
stos
dec
and
je
rcrb
adc
push
icebp
lret
test
or
mov
mov
aad
xchg
xor
mov
mov
jbe
xchg
xchg
cmc
movsl
and
sub
aas
jne
xorb
or
dec
ja
pop
imul
cld
add
mov
stos
adc
inc
js
xchg
dec
repnz
mov
or
stc
dec
lahf
loope
push
and
pop
popa
jo
and
cmp
mov
add
scas
cmp
push
jo
lods
lahf
xchg
push
mov
dec
pop
ja
aaa
lret
mov
rol
sbb
addr16
add
bound
pop
clc
xchg
cltd
pushw
imul
lds
loop
sub
add
and
cld
pop
daa
ficomps
out
or
insl
jle
adc
push
ja
rcll
subb
iret
leave
jns
pop
mov
inc
ss
hlt
push
ss
jl
pop
jb
and
aas
cmp
mov
jb
int3
test
sahf
je
fnstenv
inc
xor
or
sub
mov
inc
arpl
add
xchg
add
bndstx
cmp
in
adc
int
test
rcl
cmc
lds
outsl
in
push
xchg
add
xlat
call
in
jecxz
sub
add
jns
mov
rcrl
inc
out
rolb
jp
add
pop
lods
and
pop
sbb
scas
mov
lret
push
sub
iret
stos
test
push
cmp
mov
xchg
jg
cld
repz
sub
cld
cmpsb
movsb
int
jae
and
shrl
insl
mov
pop
insl
push
inc
sbb
dec
movsl
leave
mov
xchg
stos
mov
xchg
dec
mov
cmp
or
test
cmp
and
sub
jno
cld
sbb
mov
outsl
push
mov
pop
cmp
push
push
xchg
lods
push
jae
scas
mov
mov
cmp
adc
dec
lock
out
sbb
adc
call
push
js
cltd
mov
sbb
push
inc
or
arpl
sub
outsb
inc
cltd
lock
jmp
arpl
lock
add
rorb
adc
dec
sub
test
cmp
mov
lods
notb
bound
setae
das
or
mov
outsb
mov
outsb
repz
xchg
add
pop
lods
fcmove
lahf
xchg
mov
dec
out
ss
xorb
push
sbb
clc
xchg
shr
adcl
iret
les
push
mov
lea
sbb
das
fmuls
in
stos
andb
in
push
dec
fists
mov
inc
out
cmp
jbe
pop
sub
mov
xchg
in
mov
gs
pop
push
clc
in
push
or
mov
xchg
dec
cmpsb
flds
jno
in
and
lret
icebp
mov
ja
and
das
stc
jb
lods
call
dec
xor
jae
ljmp
enter
xchg
scas
in
sbb
inc
mov
loopne
mov
or
in
pop
or
or
and
mov
lea
cmpsl
jne
int
push
mov
jbe
pop
bound
ljmp
lret
and
adc
fst
sbb
lods
in
cmp
push
test
outsl
push
out
cmovs
mov
ficomps
insl
and
adc
pop
sbb
popa
and
imul
cmpsb
and
push
cld
cmp
inc
push
jno
cmp
mov
fistl
sahf
jle
add
loopne
pop
mov
xor
xchg
sbb
rcl
pop
inc
sbb
movsb
lret
pop
fnstcw
nop
or
insl
repnz
xorl
inc
add
push
inc
xchg
frstor
jnp
mov
mov
or
dec
mov
xor
insl
inc
xchg
push
mov
out
lods
outsl
enter
aas
sub
push
mov
loop
bound
repz
push
mov
xor
and
push
scas
inc
add
push
roll
pop
es
movmskps
or
leave
sbb
sbb
adc
and
pusha
mov
xchg
std
sbb
jne
arpl
sub
xchg
mov
lea
clc
push
sbb
shr
push
dec
sub
popa
adc
jno
sbb
fnsave
mov
cli
mov
shll
adc
and
imul
mov
imul
sub
fs
daa
in
push
stos
lret
push
mov
subb
out
xchg
pop
jno
mov
jg
es
bound
inc
or
jecxz
ret
divb
dec
mov
aad
fsubl
std
xchg
adc
rolb
das
shr
ret
xchg
inc
aaa
out
int3
lret
test
xor
push
sbb
jns
loopne
sbb
cmc
dec
and
jg
push
and
or
sbb
and
sub
add
mov
dec
divl
adc
xchg
jg
mov
xchg
mov
sti
dec
xchg
jmp
shrb
popa
hlt
pop
call
xchg
or
or
out
adc
mov
sti
lods
fadds
lods
cmp
paddw
out
add
cltd
mov
aas
sub
jecxz
sarl
fisubl
iret
loop
int
out
lds
jle
int
xchg
mov
xchg
xchg
ja
mov
cmp
cmpl
inc
xor
fldenv
mov
inc
out
les
ja
mov
xchg
mov
pop
xor
push
movaps
xchg
js
xchg
add
push
ljmp
jmp
hlt
incl
add
das
into
cmp
jb
mov
leave
cmp
cmp
lahf
hlt
and
fisubs
mov
push
mov
xchg
push
sub
xchg
ljmp
arpl
es
add
xor
cld
scas
inc
push
and
daa
pop
mov
aad
adc
in
xor
sbb
push
mov
mov
add
fisubrl
sbb
fcoms
fdivrs
jne
sub
insl
andl
adc
cld
sbb
jo
mov
or
loope
out
out
inc
cli
sub
into
subl
inc
mov
imul
fsub
insb
cs
dec
cwtl
mov
cmpsl
mov
mov
push
jge
xorl
testb
jne
nop
sub
jecxz
push
test
mov
and
xchg
test
in
adc
dec
add
mov
xchg
mov
icebp
pushl
fnstcw
xchg
rol
std
xchg
mov
mov
or
shrl
cmpsl
out
enter
cwtl
movsl
mov
fmulp
aam
add
sarl
add
and
lahf
in
ja
sbbb
cld
fisubl
test
xchg
pop
rcrb
sbb
data16
pop
sbb
cmp
repnz
rorl
test
xor
rcll
pop
cli
and
out
pushf
mov
jns
mov
mov
inc
rol
cmc
into
inc
xchg
in
pop
popa
mov
xchg
arpl
arpl
mov
or
es
addps
or
test
cmp
stos
rorb
negl
cltd
sbb
lcall
mov
lcall
lcall
ja
fnstsw
bound
cld
cli
lret
fs
cli
dec
imul
inc
jp
xor
rcrl
mov
aas
adc
pop
jge
jmp
inc
mov
add
inc
xor
lock
mov
or
icebp
add
mov
add
outsb
mov
loope
push
adc
scas
mov
jae
pusha
xor
sahf
mov
jge
dec
lods
pushf
les
pop
inc
insl
jns
lock
loopne
mov
push
into
cmc
mov
cli
add
cmp
and
test
pop
hlt
gs
push
pop
cmp
mov
xor
sbb
jge
inc
call
adc
loop
sbb
xchg
or
cltd
lahf
xchg
mov
inc
push
lret
pop
inc
cmp
cld
jb
push
push
insb
fcoml
addr16
jnp
js
aaa
out
add
ret
incl
je
jle
pop
lock
pop
fstps
mov
adc
inc
rol
popa
mov
test
clc
fsubs
imul
cs
add
xor
cmp
jbe
adc
mov
sub
dec
jb
xorb
pop
xor
jns
loop
xchg
int
and
and
aaa
rcrl
mov
stc
pushf
into
adcl
adc
lret
jmp
repnz
cmpl
and
iret
sbb
pop
or
test
ds
daa
mov
mov
lea
ljmp
adc
push
add
dec
mov
xor
dec
cltd
add
push
lock
xchg
clc
xchg
mov
sub
cmp
inc
mov
arpl
fs
jl
ljmp
xchg
imul
cmc
std
sti
cli
in
les
and
fs
in
and
mov
push
fsubrs
pop
sub
lret
mov
test
xor
jno
xchg
es
push
inc
dec
test
fsubl
or
mov
push
dec
and
push
in
push
sti
andl
xor
movsb
loop
cmpsl
sub
nop
ds
out
sub
pop
mov
pop
scas
ret
pushf
out
js
dec
lret
bnd
pusha
cmpsb
std
inc
lds
inc
dec
cwtl
xlat
and
dec
push
mov
xchg
roll
and
clc
cmp
aaa
pusha
les
jbe
dec
pop
sub
xchg
xchg
push
loopne
or
and
cmpsl
hlt
stc
sub
test
cmpsl
gs
lods
test
fists
sub
addr16
cmc
mov
cmpb
icebp
enter
or
out
repnz
cwtl
jmp
sbb
loopne
or
add
pop
mov
mov
sti
pop
bound
dec
insl
xchg
outsl
xchg
adc
or
lea
cli
xchg
mov
addr16
rorl
xor
and
daa
in
push
loop
stc
cmpsb
add
and
outsl
mov
cmp
add
out
xchg
jmp
push
jnp
sbb
or
adc
xchg
mov
cmpsb
lret
nop
scas
and
je
shrl
aas
pop
add
ret
cmp
inc
in
push
inc
aaa
arpl
fildll
inc
fwait
mov
inc
push
sub
push
fs
jp
loope
lock
jp
mov
int3
stos
and
lcall
sbb
in
xchg
fwait
mov
inc
nop
daa
cld
call
xchg
aam
jbe
adc
push
inc
mov
fistps
add
mov
adc
int3
sbb
mov
adc
sbb
sahf
pop
inc
mov
mov
xchg
pop
stos
sti
ss
aam
inc
jge
pop
jecxz
add
mov
in
scas
jbe
fwait
int
adc
xor
call
xor
loopne
shl
aad
std
mov
push
nop
dec
mov
fwait
mov
stc
rcrb
ret
lret
push
mov
jo
movsl
add
addr16
les
or
pop
stc
add
out
sub
push
mov
fdivrl
enter
and
std
fwait
imul
push
adc
aas
iret
mov
outsb
rorb
jbe
das
mov
lahf
mov
in
imul
xor
out
push
stos
pop
iret
icebp
mov
cmpsb
add
stos
cmp
lcall
jbe
fwait
in
sub
stc
lcall
inc
jno
xchg
stos
mov
jl
cli
lahf
mov
fcmovb
fwait
xchg
stos
xchg
cmpsl
orl
iret
push
lret
imul
xor
mov
cld
adc
xorb
xchg
scas
out
filds
push
cmp
mov
dec
test
push
js
cltd
add
fldcw
into
xchg
xlat
inc
inc
adc
rol
aas
pop
or
push
enter
into
lahf
adc
sbb
jb
jne
pushf
shr
pop
jb
ret
xchg
inc
clc
dec
cmp
pop
and
xchg
xchg
dec
jb
daa
adc
push
aaa
jne
jg
repnz
xchg
mov
orl
add
lock
lods
test
scas
outsl
cs
sub
push
imul
mov
das
ret
adc
mov
icebp
and
imul
out
out
mov
outsl
aas
inc
xchg
sbb
xchg
pop
sub
jmp
mov
push
mov
xadd
adc
sub
push
mov
push
std
adc
movsb
jecxz
dec
in
mov
sub
jmp
inc
loope
inc
sbb
ja
imul
push
or
mov
and
jl
xor
pop
cmp
lods
loop
jl
mov
cli
mov
stc
sub
xor
adc
ret
sub
xor
inc
sbb
push
aad
ja
jge
orl
jae
xchg
lods
inc
data16
es
jg
cld
sbb
inc
dec
popf
mov
data16
rcll
cmp
fldcw
inc
ds
addr16
pop
lcall
arpl
out
jb
outsb
inc
xor
pop
lahf
jnp
cmpsb
fsubs
cmpsl
jo
out
push
fwait
pop
or
jnp
jnp
pop
movsb
inc
fs
test
imul
js
out
push
test
aad
scas
pop
jnp
and
dec
ret
dec
add
clc
in
pop
inc
arpl
mov
es
sbb
mov
push
or
jno
jp
push
mov
push
stos
fcmovu
pusha
pusha
pop
pop
mov
cmovae
and
jne
mov
scas
rclb
mov
push
out
and
scas
adc
and
mov
outsb
iret
or
jmp
sbb
mov
mov
addb
iret
outsb
int3
jns
pushf
mov
inc
in
subb
add
or
xor
dec
inc
cmpsb
mov
xchg
cmc
ret
push
mov
jmp
cmp
adc
testl
jnp
into
add
mov
loop
in
adc
mov
jge
mov
push
pop
ret
cmpl
fucom
mov
test
mov
insb
clc
xchg
xor
iret
mov
push
aaa
addb
and
shr
mov
jno
or
lret
mov
rep
fadd
xchg
imul
shrl
mov
out
test
push
sbb
dec
or
xlat
pop
inc
sahf
shll
jmp
dec
sahf
ss
sub
sub
test
data16
jg
and
pop
sti
or
sahf
fcmovnb
xor
rolb
iret
and
int3
sbb
adc
lcall
cltd
and
test
outsb
loop
jecxz
rclb
popf
or
stos
insb
push
inc
rcrl
cmp
xor
dec
sbb
add
pop
inc
sbb
jb
push
insl
inc
addr16
add
outsb
fmuls
dec
jp
lcall
or
in
lds
add
js
pusha
and
ret
or
sbb
sub
cmp
out
clc
cs
std
sbb
repz
add
stos
push
pop
xlat
mov
mov
inc
arpl
adc
mov
xchg
in
xor
aas
fistl
add
sbb
lods
loop
loopne
ljmp
mov
mov
mov
push
std
and
out
icebp
shl
ret
hlt
andb
sti
sub
sub
and
jecxz
inc
or
popa
test
and
lahf
je
sbb
cmp
mov
cld
pushf
lret
addr16
jnp
clc
pop
dec
push
or
mov
mov
mov
fwait
cmpsl
and
add
push
nop
sbb
and
cmpsl
and
add
je
int
lods
sbb
or
movsl
lret
insl
or
imul
sarl
push
sbb
jg
cmpsl
mov
jp
aaa
insb
icebp
and
out
pop
mov
int3
sbb
stc
sahf
mov
push
mov
stos
inc
cmpsl
add
adc
xchg
sub
arpl
scas
int
cmp
pushf
mov
dec
rolb
je
cmc
es
pop
dec
jp
inc
mov
aas
pushf
cli
fistl
je
scas
or
dec
dec
mov
jg
pop
popa
dec
fmull
add
lahf
pop
jne
cwtl
push
jmp
addb
cmpsb
push
push
popa
xchg
into
mov
push
add
jbe
shll
out
dec
int
int
mov
cmp
andl
mov
es
xor
sbb
ret
jle
dec
lods
adcb
shrb
sbb
scas
adc
cmpsl
test
jns
stc
add
fwait
pusha
rcrb
xchg
idiv
push
ljmp
mov
repz
daa
mov
sbb
iret
jae
cwtl
lea
mov
sahf
xchg
test
xchg
and
fidivrs
or
daa
xchg
clc
hlt
test
mov
rolb
cld
xlat
add
cld
in
mov
and
adc
gs
jno
ret
cbtw
sbbb
pop
imul
mov
push
sbb
sarl
mov
xchg
dec
xor
daa
lock
mov
xchg
push
mov
es
aam
adc
movsl
mov
fcomps
and
xor
dec
dec
sbb
inc
shl
shrb
mov
dec
int
cltd
adc
test
repnz
aas
jns
adc
std
pop
into
dec
xchg
and
or
out
mov
mov
lret
ss
push
jge
out
dec
daa
jns
adc
cwtl
pop
xchg
pop
dec
loop
inc
fldt
pop
dec
repz
jnp,pn
test
repz
fsts
fcoml
mov
xlat
dec
insb
jne
inc
sbb
jb
daa
jnp
imul
dec
xchg
push
loop
jbe
loope
cwtl
pop
lret
lret
jmp
inc
inc
out
cmpsl
xchg
out
pop
in
sti
mov
mov
pop
adc
daa
clc
mov
f2xm1
loope
pop
sbb
into
nop
pop
fisubrl
mov
fld
mov
leave
popa
pop
or
leave
fwait
sbb
shlb
test
movups
mov
xchg
dec
aad
lods
inc
xchg
stos
mov
pushf
lods
jns
jge
in
test
lock
mov
push
std
mov
jno
or
mov
sbb
push
mov
sahf
stc
fs
sti
scas
inc
or
in
adc
jge
push
jb
pop
push
ret
and
pop
jo
in
and
fisttps
ds
jl
mov
sub
push
mov
dec
loope
sbb
cmc
inc
dec
insb
push
gs
in
mov
xchg
xor
inc
lods
lock
mov
or
outsl
push
xchg
or
and
xor
mov
mov
lods
out
mov
mov
scas
mov
mov
out
fst
push
in
in
jae
and
movsl
add
dec
rorl
in
addl
aas
pop
adc
add
add
jb
jno
add
mov
mov
sub
sti
movsl
xor
sub
sbb
pavgb
jae
mov
fdivrs
pop
jbe
shll
mov
ss
cmc
pop
cs
aam
mov
cltd
xchg
push
cmpsl
jl
mov
enter
into
sub
js
add
js
lock
shlb
rorb
cld
or
mov
outsb
into
lock
and
dec
sub
inc
mov
mov
int
out
jmp
lods
out
xor
sbb
ja
in
insb
sbbl
icebp
fistl
lods
or
sbb
and
add
or
fstpl
inc
mov
outsl
add
pop
lods
add
insl
clc
and
je
jne
cmc
mov
cmp
jnp
xchg
nop
lret
sbb
pop
sub
mov
mov
pop
and
xchg
mov
sub
cmpsb
outsl
jbe
mov
dec
es
jmp
sbb
cli
dec
xchg
and
iret
cmp
mov
mov
or
idivl
cmp
sbb
ljmp
jmp
lret
xchg
inc
inc
mov
enter
mov
fwait
and
std
test
add
ds
xchg
mov
adc
int3
mov
pusha
out
add
cmp
inc
in
push
xchg
cmp
insb
imul
stos
inc
lock
cmp
in
lock
insb
jmp
cmp
push
test
dec
decb
mov
test
add
ret
sbb
inc
sahf
out
dec
test
inc
fdivs
out
pop
sbbl
adcb
jg
inc
xchg
cmc
pop
imul
pusha
sbb
push
add
sahf
in
cmp
test
mov
xchg
les
sbb
rcll
into
iret
test
jo
jmp
mov
nop
add
pop
push
mov
clc
and
test
pushf
into
inc
inc
leave
xor
xchg
lcall
sbb
lods
push
outsb
orb
inc
inc
push
fs
into
or
lock
aas
and
int
test
xchg
es
rcl
test
outsl
lea
scas
jle
testl
jne
adc
lods
sub
addr16
lods
divb
pop
xor
cmp
out
or
lock
xor
mov
test
adc
es
sub
mov
test
bound
ljmp
cld
popa
loop
inc
dec
mov
fucomip
lds
mov
cmpsl
pop
repz
add
in
mov
das
jge
inc
bound
jecxz
mov
aas
insl
lock
xchg
cmpsb
pop
aaa
rclb
scas
jne
loopne
jp
sahf
inc
insb
loopne
out
jne
xor
jbe
loop
mov
pop
cmp
data16
pop
xor
push
push
mov
push
mov
in
mov
sbb
daa
rolb
enter
scas
push
cmp
es
sti
int
mov
xchg
pop
adc
jge
ficoms
lret
arpl
inc
jl
adc
pop
xchg
stc
mov
jne
je
es
xor
int3
jns
int
repz
pop
inc
cmp
jge
lods
push
fistps
sbb
out
popl
cmp
cltd
cs
push
pop
das
hlt
jg
movsb
test
inc
push
test
cmp
pop
into
jg
int3
mov
inc
xor
cltd
sbb
cwtl
lods
ror
daa
jp
test
dec
fwait
sub
mov
cmpl
push
movsb
rcrl
ljmp
adc
sbb
dec
push
cmp
std
cld
sbb
sub
xchg
int
pop
fwait
insb
loop
sbb
lret
inc
mov
addr16
push
or
inc
xor
push
dec
rcl
das
jmp
icebp
jno
int3
neg
fldcw
mov
adc
decl
mov
cmpsl
xchg
notb
lea
xor
mov
cmpsl
test
push
leave
and
push
repnz
xorb
jns
mov
or
sbb
es
inc
sti
sbb
add
lret
nop
std
sub
mov
cmpsb
adc
std
dec
call
or
scas
push
add
adc
inc
mov
popa
pop
test
cltd
jno
ret
ljmp
add
jbe
int
sarl
repz
test
iret
das
paddb
lock
in
sbb
mov
rcl
mov
int3
sub
jmp
pop
pushf
sub
mov
inc
xor
mov
fld
mov
test
addb
mov
les
jb
lods
insl
cmp
mov
cwtl
inc
push
push
mov
mov
lods
jnp
push
sub
dec
or
movsb
cltd
sub
subl
jns
enter
inc
dec
xor
dec
iret
fcomip
pop
testl
adc
sub
test
jecxz
cmpl
inc
lods
outsl
sbb
loope
or
sti
call
fidivrl
dec
subb
jae
pop
fs
xlat
mov
sub
sbb
ja
cmpl
jp
mov
push
lock
jbe
pop
outsb
arpl
shll
popf
push
clc
cmc
dec
mov
pop
jno
sub
dec
xchg
lahf
es
mov
inc
ja
ja
dec
jnp
movsl
push
mov
int3
inc
mov
cld
movsl
inc
xor
mov
xor
test
dec
call
setge
xor
inc
shr
sbb
inc
pop
pop
push
int
fldenv
les
mov
repnz
aad
xor
bound
daa
out
xor
rorl
test
sbb
mov
iret
ror
call
les
icebp
ja
xchg
adc
mov
es
pop
push
jo
addr16
mov
jae
sub
pop
or
mov
mov
jb
and
dec
xchg
in
aam
push
scas
std
mov
sbb
nop
je
mov
mov
dec
jbe
enter
cmp
in
lea
add
imul
repz
xor
data16
hlt
movsb
nop
sbb
or
inc
xchg
in
test
xor
mov
test
dec
clc
jns
push
fsubr
jle
mov
or
cltd
push
and
adc
sbb
cmpsb
scas
add
mov
jns
jl
mov
jge
aam
inc
outsb
int
test
cwtl
xor
cmpsl
addr16
jb
ja
or
imul
sub
sub
cmpsb
fsubs
shll
jmp
insb
mov
mov
pop
mov
push
jne
inc
xor
rolb
jecxz
test
xor
test
icebp
addr16
clc
xor
lahf
ja
stos
sub
ljmp
xor
lret
pop
in
mov
maskmovq
negl
add
or
dec
sbb
enter
sarl
test
cmp
loop
je
rolb
dec
mov
jno
lea
xor
and
fdivrs
mov
jo
imul
pop
cmc
std
xorl
es
dec
insb
jno
jmp
inc
lds
adc
xchg
test
data16
lds
jbe
loop
mov
push
aad
sub
sub
pop
lds
xchg
loopne
or
push
loopew
xchg
stc
movsl
and
out
jmp
inc
dec
popf
jo
insl
daa
sbb
or
ret
inc
dec
mov
insb
into
add
loopne
sub
mov
mov
test
mov
les
cmp
add
add
icebp
imul
fidivrs
nop
jnp
fsubr
mov
loopne
loope
mov
dec
cmp
adc
hlt
xor
ds
outsb
dec
sbb
lods
cwtl
sub
fistps
ss
mov
and
jmp
push
cli
mov
fidivl
inc
repz
pop
push
fldt
push
call
fdivrl
mov
ficomps
adc
xor
out
mov
loope
rolb
popa
enter
int3
pop
test
subb
inc
jmp
sbb
sub
lcall
push
nop
mov
xchg
dec
xchg
push
outsl
dec
mov
shlb
ljmp
mov
cwtl
ret
repnz
push
inc
mov
xor
jbe
enter
ja
dec
sub
push
mov
lock
and
daa
testb
sub
xor
pop
jge
sahf
pusha
aad
stos
scas
add
xchg
pop
xchg
push
cmc
scas
lret
out
call
xor
dec
xchg
ljmp
push
jmp
xchg
js
inc
dec
cmpb
inc
push
lret
push
loopne
or
xor
jne
pop
pushf
pop
out
pop
push
das
or
outsb
test
xor
cld
push
cmp
xlat
xchg
cs
sub
sti
repz
ret
repz
inc
mov
pushf
clc
mov
jp
jnp
jbe
pop
mov
or
shrb
push
ds
cli
mov
je
sub
sub
mov
pop
mov
or
fadds
fimull
clc
in
movsl
mov
push
inc
divl
xor
sub
mov
out
push
lahf
xchg
stos
xchg
dec
arpl
cltd
cmp
loope
fcomip
rolb
xor
xchg
movsb
mov
push
shll
imull
inc
outsl
roll
push
xor
jle
pop
jne
imul
push
aad
dec
mov
roll
fisubs
xchg
or
jo
and
add
cmp
or
sbb
daa
mov
jecxz
lods
lahf
inc
cltd
pop
xchg
fs
push
sub
popf
lods
push
pop
xchg
ret
movsb
mov
xlat
fidivl
aas
rclb
mov
ljmp
cmp
out
sbb
fidivrl
enter
push
or
mov
popf
pop
fs
sub
or
fcmove
push
adc
cmp
ret
mov
stc
dec
dec
push
ja
jmp
pushf
out
jne
mov
cmpsl
fistps
adc
inc
mov
sbb
jecxz
ds
lahf
out
sub
and
jecxz
mov
js
pop
push
add
pushf
push
sub
dec
daa
or
test
fwait
and
jnp
stos
or
lea
xchg
or
mov
js
cmpsl
scas
add
jp
add
ret
test
mov
mov
sub
aam
mov
lcall
out
hlt
inc
mov
nop
and
sub
cltd
imul
jl
cmp
pop
es
scas
ficoml
lds
movsb
lcall
mov
emms
xchg
rorb
jl
shll
fwait
lods
xchg
fcoms
pop
jne
adc
cld
mov
pop
enter
jecxz
lret
pop
push
test
mov
jecxz
lods
push
sets
pop
sub
faddp
jo
lock
cld
std
jmp
loopne
fwait
std
mov
add
jge
das
shr
mov
aad
xchg
aad
jno
fdivr
jge
jp
pop
push
leave
sbb
shr
cmp
and
xchg
in
cmp
mov
test
xchg
loope
mov
dec
out
clc
mov
jno
nop
sbb
adc
lods
lret
mov
dec
das
mov
pushf
call
dec
ret
lods
lds
ret
jmp
je
xchg
add
jb
add
pusha
adc
xor
ret
mov
loop
add
ret
fwait
cltd
mov
cmp
xor
sahf
jmp
push
fldenv
out
pop
mov
xor
pop
loop
out
cmp
lock
jne
xchg
push
out
push
adc
xor
add
mov
pop
lds
inc
lcall
push
fnsave
mov
push
cmp
push
outsl
mov
adc
xor
call
dec
push
xchg
inc
jno
test
es
out
cltd
push
jne
cmpl
push
jmp
mov
cltd
adc
jp
js
pop
icebp
stos
pop
pop
call
push
mov
shl
pushf
sub
mov
mov
jge
add
push
inc
mov
cmove
testb
test
or
xchg
ficoms
outsb
mov
xchg
mov
sarb
or
mov
mov
and
mov
lret
or
int3
stos
arpl
inc
test
inc
daa
lret
mov
gs
adc
out
out
out
sbbb
cs
ds
mov
lcall
js
nop
and
jmp
push
cltd
mov
ljmp
fdivp
pop
ret
out
movsl
adc
sahf
xchg
cltd
lods
outsl
out
fnstsw
adc
fs
data16
sahf
icebp
mov
and
push
fcmovnbe
scas
movsb
fistps
xchg
push
lahf
sub
fisttps
xchg
mov
loope
jno
in
lea
push
scas
adc
addr16
jp
rcll
dec
aas
andl
rorb
or
outsl
mov
mov
mov
push
movsb
cmp
sub
mov
push
pop
adc
sti
pop
clc
lahf
roll
jb
enter
test
xor
push
fdivs
popf
sub
jge
mov
stos
in
mov
mov
aam
dec
dec
repnz
adc
pop
pop
mov
xor
mov
fisttpl
sbb
push
imulb
sbb
in
into
cmpsl
lds
insb
inc
inc
pop
lcall
adc
mov
mov
dec
add
test
pop
cmp
inc
ja
sbb
dec
aas
dec
mov
scas
inc
popa
stc
cmp
xchg
or
mov
add
in
push
icebp
ret
faddl
push
xor
outsb
pop
dec
mov
dec
mov
add
fwait
mov
xchg
stos
or
xchg
rclb
mov
pop
out
jo
test
sub
mov
rolb
ja
fwait
hlt
ret
mov
pop
xor
cmp
movsb
mov
repnz
inc
add
repz
shlb
xor
scas
in
and
addl
out
ja
push
sbb
lret
movsl
cs
jns
rcll
stos
push
test
xchg
pop
sahf
ds
loopne
jmp
jno
in
int
test
pop
dec
frstor
aam
push
mov
in
add
lods
fidivl
rolb
in
mov
adc
shll
stos
or
push
add
mov
inc
aas
outsb
mov
dec
repz
sbbb
mov
sbb
and
in
dec
iret
add
orb
inc
arpl
and
inc
cmpsb
dec
lods
and
inc
sub
or
cld
mov
jge
jg
ret
rcr
cs
divl
ds
out
push
repz
rclb
movsl
int3
sub
fidivl
mov
arpl
imulb
sti
add
push
fdivrl
out
sub
fsubp
sub
or
jge
les
xchg
or
imul
push
cmp
lahf
mov
shl
sti
stos
pop
scas
enter
xchg
pop
or
popa
loope
xlat
pop
mov
adc
inc
inc
or
add
adc
push
in
xchg
stc
mov
mov
nop
repz
push
lcall
loopne
out
imul
cmp
faddl
ljmp
jbe
gs
repnz
popa
xor
sub
adc
cmp
or
fdivl
sahf
pusha
test
cmp
nop
lds
fnstenv
sub
mov
and
cmp
and
outsl
mov
pop
lods
dec
xchg
adc
shl
sbb
scas
push
divb
icebp
lods
fcomp
mov
sti
lcall
xchg
cmc
sbb
or
out
mov
sub
add
dec
imul
mov
and
insb
std
sti
shll
push
mov
inc
lret
lea
hlt
jbe
rclb
jbe
jmp
ljmp
mov
inc
xchg
jecxz
push
ja
dec
call
sbb
fisttpl
out
cmp
std
repnz
push
fcoms
push
push
xchg
sbb
insb
ljmp
ja,pn
dec
add
cmpl
sbb
mov
cmpsb
imul
add
add
in
nop
lods
inc
mov
bswap
mov
cmpsl
repnz
popf
inc
divb
outsb
int
repz
adcl
pop
xor
cmc
jge
jns
fs
enter
sahf
inc
fisttpl
cmpb
mov
jp
mov
dec
imul
sub
xlat
shr
adc
or
aam
or
push
leave
pop
adc
enter
imul
lods
lea
xchg
or
cmp
jnp
push
sub
adc
sbb
cltd
andl
mov
fmull
pop
dec
stos
jb
es
iret
add
push
or
jge
daa
ds
lahf
cld
mov
mov
imul
pop
cs
mov
addl
ljmp
dec
pop
test
add
insb
adc
std
insb
mov
mov
cmp
js
fildl
inc
popf
shlb
in
shl
lea
cmpsl
jbe
es
pop
pop
pop
les
push
lret
mov
ds
sbb
lcall
jmp
adc
push
mov
and
push
xchg
sub
lret
ret
push
jg
inc
in
cmpsb
out
out
jnp
loope
out
idivb
leave
addl
jmp
add
test
push
pop
or
add
pop
mov
jne
jp
pop
pushl
cmpl
loopne
adc
lds
pushf
push
andl
sub
stos
jle
fwait
daa
ja
inc
jo
sbb
xor
jne
cmpsb
leave
sahf
mov
test
xchg
sbb
jmp
inc
mov
shrl
fwait
pop
sub
add
pusha
into
out
xchg
enter
pop
sbb
pop
sub
push
loop
int
leave
sbb
push
or
sub
mov
shll
addr16
push
aas
mov
iret
push
pop
mov
jp
imul
mov
fildl
jae
shlb
popa
shll
cmc
adc
and
push
add
das
fcoml
lea
add
jle
cs
mov
call
dec
test
je
jae
stos
mov
ljmp
cmp
cmpsb
or
xor
sub
mov
mov
pop
cltd
jmp
shlb
pop
push
pop
and
int3
imul
mov
or
into
adc
adc
jnp
push
adc
cmp
mov
js
xor
call
sbb
ret
addl
out
rcr
fldcw
xorl
divl
cmp
jecxz
jno
bnd
pop
dec
mov
push
dec
hlt
movsb
sub
ja
sub
ret
lds
and
sub
mov
in
and
sub
mov
pop
cmpsl
push
mov
inc
call
lock
data16
lds
fnstsw
insb
pop
jne
imul
clc
addr16
sahf
in
outsb
xor
mov
cmp
pushf
mov
and
dec
sti
adc
pop
add
sub
jae
xchg
or
fidivrs
fdiv
fmull
push
aad
daa
sub
fimull
push
test
dec
fwait
pusha
popf
mov
bound
outsb
repnz
outsl
xlat
sub
xchg
out
jns
lods
or
scas
jp
test
inc
scas
mov
adc
cltd
loop
cmp
inc
mov
pop
mov
add
ja
jns
jnp
mov
ds
cmp
xchg
push
mov
mov
sbb
cmpsb
adc
dec
push
pusha
add
fildl
and
push
aaa
adc
fadd
stos
jmp
push
insl
mov
fcomps
inc
out
sahf
test
out
or
push
icebp
aaa
cmp
mov
cs
cwtl
leave
and
das
pop
jp
and
test
dec
movsl
mov
fistpll
es
sbb
inc
push
out
or
cli
jbe
cld
pop
ret
adc
and
pop
cmp
bound
add
cltd
pop
int3
fsubrl
push
clc
inc
xor
adc
mov
and
sti
repz
mov
daa
mov
cwtl
pushf
cld
in
xchg
shl
pushf
incl
rclb
ret
jp
into
nop
pop
sbb
loopne
lods
andb
call
fsubs
pop
leave
stc
aaa
pop
idivl
ror
fdivrs
or
clc
and
jno
repz
aaa
stc
mov
jb
push
xchg
ret
outsl
cmp
cmp
lock
decl
cmp
pop
pop
jge
cmp
push
xor
les
cmpsb
dec
xor
mov
sbb
call
lock
or
cpuid
jge
nop
dec
lock
push
in
jp
or
loop
xchg
iret
fisubs
es
and
rcl
push
mov
iret
loop
mov
in
mov
in
outsb
arpl
adc
imul
psubb
add
popa
xor
popf
bound
mov
xchg
adcl
scas
in
sub
lds
test
repnz
ljmp
and
sbb
inc
xchg
pop
sub
or
cwtl
les
fadds
jno
sbb
add
sbb
jle
mov
push
fcmovnu
xchg
cmc
daa
dec
xor
outsl
pushf
frstor
cmp
dec
fstpt
in
and
movsl
dec
mov
add
test
mov
lock
sub
je
jnp
enter
out
lds
je
pop
flds
jg
pushf
or
mov
or
in
xchg
mov
dec
imul
cltd
test
scas
data16
xor
add
aas
lods
iret
adc
shlb
or
addr16
ret
sbb
sbbb
enter
movsl
aaa
mov
inc
adc
cli
shlb
stos
enter
dec
repz
mov
aaa
mov
mov
jno
outsl
fs
ret
jge
daa
jmp
inc
mov
call
out
ja
push
cmp
dec
cltd
or
in
push
and
cmpsb
mov
xchg
testl
inc
std
push
sub
add
enter
jne
out
fcmovu
clc
and
in
xchg
sub
cmp
test
in
push
or
cmp
pop
pop
cmc
addr16
add
int
push
jno
xchg
lods
data16
mov
add
jnp
lock
cmp
jl
or
loop
mov
pushf
in
sbb
fadds
sbb
int3
out
and
lea
inc
sbb
push
mov
pushf
shrb
loopne
hlt
dec
or
and
inc
aas
fs
cltd
mov
xor
jmp
idivb
pop
and
jae
mov
lcall
fdivrl
jle
and
jle
shll
or
jmp
jae
pop
xor
inc
xlat
mov
sub
or
mov
push
frstor
push
rcrb
ljmp
in
bound
jmp
push
mov
push
fdivl
push
sub
test
xlat
leave
dec
pop
int
push
cwtl
fsubrl
notb
jb
mov
pop
adc
push
pop
lahf
push
cmc
imul
fcmovbe
std
icebp
mov
leave
sbb
mov
mov
adcl
mov
mov
inc
fadd
push
jno
adc
addl
adc
fs
jp
cmpsb
xor
jg
mov
mov
mov
or
mov
insb
inc
dec
push
jle
cmp
sbb
repnz
cmpsl
mov
call
cld
mov
ljmp
dec
xchg
test
inc
inc
js
jo
ja
sahf
xchg
mov
push
test
std
fs
mov
mov
out
jg
test
addb
in
rcrl
outsb
xchg
xor
aaa
cmp
push
xlat
out
cmp
in
mov
aad
dec
mov
dec
mov
fldln2
out
insb
punpckhwd
dec
aaa
clc
scas
xchg
movsl
and
shlb
adc
nop
pop
imul
int
xor
stos
mov
inc
loop
xchg
scas
or
adc
push
dec
cmp
lods
pop
cmp
fmulp
xchg
mov
lret
loopne
adc
jmp
fcomip
lds
pop
xchg
or
mov
sbb
and
add
test
ret
out
imul
je
bound
into
jle
adc
xor
add
sbb
mov
add
daa
mov
cwtl
imul
in
xchg
mov
gs
movsb
ds
jo
xor
loope
pop
or
push
movl
jp
jnp
adc
out
imul
cs
int3
add
pop
icebp
add
push
test
push
clc
xor
inc
int
mov
sub
mov
scas
mov
cmp
adc
shl
les
aam
in
lcall
ret
xchg
loopne
jmp
or
cmp
pop
xor
ret
cmp
loop
fucom
rcrl
imul
insl
xor
push
fdivrl
sbb
lcall
mov
pop
cmp
push
loopne
mov
and
incb
aad
jbe
jmp
mov
out
in
jge
fnstcw
loope
inc
pusha
sub
sahf
shll
imul
mov
insb
push
xchg
jge
pop
mov
mov
int3
sub
add
bound
out
fildll
dec
jg
aad
jae
xor
push
xor
gs
sub
mov
push
dec
pop
movsb
stc
ret
lock
mov
xchg
cmp
cld
mov
pop
aad
aaa
lcall
xor
scas
stos
push
mov
cmp
cmc
das
dec
outsb
out
push
mov
mov
or
adc
clc
fsubrl
fisubrl
aam
gs
rcrl
cld
or
jo
sub
adc
out
loopne
pop
push
subl
adc
iret
adc
lret
into
xchg
loop
and
in
jecxz
mov
pop
jne
lods
popf
movaps
mov
xchg
jno
pop
mov
mov
cs
lds
sub
addl
ljmp
call
pop
add
sarl
test
jbe
fcoml
out
ret
dec
out
out
jecxz
or
mov
popa
cmp
cwtl
lods
mov
imul
push
or
or
cltd
push
lahf
pop
xchg
iret
jnp
push
xchg
out
mov
daa
outsb
xchg
cmpsb
mov
sub
jno
or
shll
mov
sub
pop
and
pop
xchg
adc
push
out
fstpt
sbb
adc
xchg
arpl
popa
cltd
sbb
in
push
adc
jo
inc
mov
mov
cmp
sti
jns
pusha
dec
popf
mov
adc
pop
inc
fidivrl
fistps
jecxz
xor
lock
loopne
and
mov
xchg
inc
dec
rcrl
test
dec
sbb
loope
in
add
mov
mov
jle
xchg
imul
aaa
jns
xlat
and
rol
ja
rcr
test
fldln2
inc
insb
loope
mov
xchg
fidivl
arpl
jge
jecxz
push
jl
out
jg
pop
daa
loop
stos
pop
cmpsb
jbe
add
mov
jg
pusha
and
and
scas
mov
mov
and
jns
jecxz
mov
cmp
in
or
add
jmp
xlat
subl
call
mov
xchg
add
imul
mov
sub
or
and
shll
sti
outsl
dec
adc
divl
shl
mov
in
jecxz
je
cltd
enter
push
add
inc
xor
and
mov
xor
ret
sub
or
popf
push
mov
xor
jg
mov
dec
lds
lods
mov
lds
gs
fstpt
jle
ja
cmpsl
outsb
pop
pop
sub
xor
jnp
add
shrl
add
xor
sub
xor
mov
fidivrs
push
movsb
inc
push
xchg
outsl
jle
lret
mov
inc
mov
nop
pop
xor
pop
xchg
leave
jb
push
sbb
push
pop
mov
push
push
sysenter
and
mov
dec
pusha
sub
inc
scas
iret
rcrl
aad
push
push
movsb
adc
xor
mov
pop
cvtdq2ps
enter
out
sarl
inc
push
pop
loopne
push
adc
adc
sbb
icebp
add
aad
ja
jecxz
push
jae
push
arpl
lods
mov
scas
sbb
adc
xor
cmp
inc
push
xchg
jno
sub
ret
xlat
and
movsb
cli
xor
mov
inc
ds
addb
lret
scas
paddusb
adc
mov
pop
pop
mov
mov
cwtl
mov
fidivs
add
orb
in
daa
xchg
pop
push
mov
ja
and
js
or
mov
adc
in
jmp
sahf
inc
jnp
jg
sbb
pop
jle
sbb
and
lret
mov
jle
roll
roll
mov
testl
push
sub
inc
nop
enter
aam
js
mov
cmpsl
cli
out
mov
outsl
sbb
mov
bound
int
subl
movsb
sub
gs
sti
inc
sbb
sbb
pop
xor
ror
pop
ret
out
xchg
push
pusha
dec
movsb
sub
scas
sbb
fsubrl
mov
and
push
cmc
jno
daa
fwait
pop
sahf
scas
cmp
inc
cwtl
lss
les
test
jecxz
push
fdivrs
xchg
push
push
je
shrl
test
push
fwait
or
cld
cmp
int3
lret
insb
nop
mov
loope
fwait
mov
fabs
inc
cmp
adc
stos
fists
ret
inc
icebp
xor
xchg
push
ja
inc
fwait
je
and
arpl
ficompl
pop
mov
add
lret
loope
xchg
pop
scas
es
xlat
xchg
lods
scas
xchg
ja
push
std
jmp
jge
std
js
out
jbe
and
fildll
cmp
pushf
es
or
jmp
out
fs
pop
icebp
pop
jmp
insb
and
push
aaa
sti
leave
test
loopne
aaa
sbb
or
mov
andl
aas
push
int
loopne
sbb
dec
mov
das
loop
xchg
cmpl
pop
and
les
nop
xchg
cltd
into
mov
pop
dec
inc
test
sbb
test
inc
dec
scas
incb
sarb
jecxz
dec
jno
jl
inc
add
sbb
ds
mov
std
outsb
popf
icebp
lcall
push
ret
jmp
xchg
cs
mov
and
addr16
orl
dec
mov
pop
mov
flds
push
add
mov
cwtl
lcall
mov
jmp
sub
jns
in
mov
lahf
fildll
imul
ss
push
outsb
inc
stos
inc
sbb
in
mov
xchg
inc
fildl
mov
ret
lods
add
outsb
vrcpss
aaa
or
and
push
jbe
aam
test
addr16
sbbb
push
dec
fmuls
jmp
inc
sbb
push
in
cs
fwait
test
push
fwait
mov
jmp
ret
sbb
or
adc
lcall
mov
mov
scas
sti
jp
cmp
ljmpw
mov
inc
hlt
pop
xor
mov
inc
adc
into
cld
push
adcl
dec
aas
out
xchg
data16
test
adc
aaa
mov
hlt
fsubrl
rolb
pop
es
lods
xor
dec
jp
push
stc
orb
pop
dec
mov
cmp
mov
mov
and
addl
pop
sbb
cld
push
mov
aas
fiadds
add
mov
ret
loopne
cmp
sti
lret
insb
sbb
pop
ret
and
mov
jns
cmp
mov
fwait
or
negl
je
pop
test
or
jmp
pop
push
popf
clc
cmpsl
dec
and
inc
rolb
aas
pop
jnp
mov
in
and
sbb
cmp
test
mov
xor
inc
pop
shrd
inc
mov
pop
dec
sbb
cli
pop
or
pop
lods
pusha
les
in
imul
sbb
jge
xchg
fcomps
mov
into
scas
sbb
and
or
pop
sub
jns
adc
adc
out
add
cmp
into
sbb
mov
push
outsb
fs
aam
push
pop
inc
imul
adc
jns
jbe
scas
test
cmpsl
cmp
ret
int3
leave
std
aad
add
add
cld
and
sbb
jno
imul
and
mov
fdivrl
xor
iret
pop
jmp
adc
loope
sbb
mov
sub
jle
or
add
cltd
shl
mov
aas
pop
fs
push
cmpsb
cmovle
mov
push
sub
pop
pop
or
fldl
jp
mov
test
pop
xor
or
mov
push
out
loope
xor
push
aaa
cmp
mov
cmp
cli
lods
hlt
jmp
das
or
pop
push
je
sub
cmp
pop
leave
fs
xchg
aas
push
inc
adc
mov
stos
mov
hlt
dec
stos
dec
out
cmp
mov
bound
in
adc
in
xchg
sbb
push
jae
xorl
dec
mov
mov
inc
mov
pop
jle
mov
push
jo
mov
ret
and
loope
push
adc
xor
sbb
xor
in
cmc
mov
mov
cmc
or
in
xchg
outsl
push
leave
sbb
mov
jb
dec
scas
xchg
pop
mov
ss
and
xchg
mov
movzbl
sub
or
adc
sbb
inc
sbb
bound
iret
scas
in
aad
push
ror
stc
orb
push
dec
dec
pop
sbb
add
and
int3
mov
subb
test
pop
mov
pop
dec
popa
inc
pusha
cmpsb
jg
xlat
nop
int
dec
sbb
icebp
fldl
pop
push
adc
jne
fiaddl
shl
or
add
stos
or
addr16
mov
xor
rcll
addr16
cmp
scas
and
clc
mov
inc
add
lret
enter
jne
lods
adc
add
jle
scas
lret
inc
and
pusha
pop
inc
pop
scas
fmull
mov
mov
fcoms
push
cld
mov
fisubl
cli
sub
xchg
jns
sub
jnp
and
sbb
lahf
xchg
fnstenv
repz
popl
sbb
out
cmp
push
xor
mov
sahf
sbb
pusha
sub
mov
rorb
leave
lds
fs
xchg
rol
mov
add
xor
aam
dec
insl
pop
cli
dec
jp
add
sbb
mov
pop
mov
jl
aaa
repnz
cli
dec
and
push
cs
pop
aam
in
adc
mov
dec
movsb
into
push
out
add
or
cs
or
out
sahf
andl
jge
idivl
mov
in
xor
jae
popa
jno
ret
push
cs
cmp
xsaveopt
frstor
jl
lret
mov
cltd
imull
mov
and
movsb
push
push
test
mov
insb
mov
inc
lahf
mov
dec
jae
adc
into
loopne
repnz
sub
push
bound
push
mov
xchg
nop
scas
mov
adc
fisttpll
jns
mov
cmp
jp
aam
ret
jmp
and
in
jmp
cs
shrl
mov
xchg
or
popf
xor
fidivs
adc
jp
mov
adc
in
dec
xchg
popa
imul
arpl
cwtl
nop
in
cmp
movsb
adc
xlat
pop
cmpsb
or
aas
cmp
pop
xchg
out
into
sbb
mov
dec
into
jbe
mov
push
imul
jns
push
xor
leave
mov
sub
sbb
ljmp
addl
lods
xchg
and
adc
adc
fnstenv
mov
sti
fidivrs
insl
daa
dec
and
sti
in
push
sbb
shll
cs
pushf
mov
dec
xor
out
cmpb
mov
jecxz
hlt
imulb
or
xor
inc
mov
fs
sarb
ljmp
mov
les
inc
jbe
cltd
gs
enter
cmpsl
mov
mov
jle
xchg
lods
dec
test
pop
dec
jp
jne
sar
pop
cmc
cmp
push
in
fstpl
mov
stos
idiv
push
aad
daa
push
insb
sti
mov
xchg
fwait
or
mov
mov
mov
inc
cs
ret
addr16
dec
pop
jno
push
inc
mov
add
popf
mov
filds
popa
push
sub
push
xor
call
lret
notl
pop
push
rclb
cmp
das
leave
mov
test
cld
lds
sub
xor
repnz
mov
lods
jae
xor
pop
dec
inc
ja
push
xchg
popf
lahf
daa
cwtl
js
inc
inc
scas
addb
scas
stos
add
ficompl
mov
adc
inc
cmp
aaa
test
daa
sarb
into
push
mov
sub
cli
pop
add
add
mov
or
into
xlat
sbbb
stos
ja
jae
test
insl
inc
test
and
push
xor
pop
shll
inc
popa
movsl
nop
ljmp
jae
sbb
dec
fimull
inc
cmp
insb
mov
and
ficompl
and
cmp
lret
sar
mov
sub
sahf
test
ja
xor
scas
loope
mov
and
stc
aam
jge
insb
xor
fwait
ljmp
aaa
mov
les
adc
mov
js
mov
incb
add
stos
xchg
xchg
fnstsw
mov
pushl
sbb
stos
xor
xchg
xor
push
lds
sub
pop
inc
inc
das
aas
mov
mov
cmp
jl
dec
fwait
pop
cli
xchg
and
sub
lods
das
clc
mov
xchg
rcl
int3
and
test
sub
cltd
les
mov
fcmove
out
rcll
cwtl
adc
adc
xorb
aaa
inc
mov
js
test
add
push
icebp
repnz
dec
rclb
mov
pusha
pushf
push
add
das
sub
inc
cmp
add
inc
int3
jp
fsts
mov
js
inc
jb
jno
popa
or
xchg
pop
push
sub
jns
cmp
jg
cmc
fidivrs
mov
shlb
fnstcw
push
or
xchg
sarb
jge
xor
test
getsec
int
scas
inc
enter
pop
cmc
test
repz
lock
movsb
ficompl
adc
inc
popf
arpl
call
je
push
xorb
sub
out
add
xchg
push
pushf
xchg
xchg
out
xor
jg
pop
jbe
push
ja
sbb
int3
or
decl
and
pop
cmp
or
popf
mov
imul
xchg
cs
pop
adc
inc
pop
mov
test
fs
xlat
andb
cmpsl
mov
mov
scas
test
cmpl
loope
jge
and
cwtl
int3
loope
arpl
cmp
sbb
xchg
enter
jnp
xchg
fbld
mov
lret
or
mov
repnz
xchg
out
add
cmp
add
cmpsl
sub
xor
sbb
int
pusha
xchg
inc
jns
mov
fsubrl
pop
xchg
dec
out
ljmp
cmp
mov
adc
push
and
rcrl
rorb
and
in
js
mov
cli
into
mov
shl
stc
stc
jne
loope
dec
mov
repz
decb
lods
mov
hlt
push
dec
pop
mov
xor
fidivs
sbb
nop
lods
sub
movsl
daa
inc
adc
mov
mov
sub
fstpl
or
cmpsb
repnz
or
mov
mov
pinsrw
icebp
jbe
ret
mov
jno
sub
mov
cs
outsl
mov
jg
lret
rorb
das
inc
cmpsl
fildl
or
leave
aad
add
fcompl
cmp
aam
fwait
mov
cmpsb
std
retw
shlb
testl
pop
in
adc
jge
scas
jp
sub
adc
mov
push
xchg
sbb
pushw
adc
dec
pop
decl
stos
mov
test
insl
lods
aaa
shlb
sahf
push
ss
mov
jmp
mov
fdiv
adc
mov
fdivrl
sbb
jne
mov
dec
push
and
pop
xchg
inc
outsl
xchg
mov
std
outsl
gs
hlt
xchg
xor
out
push
push
add
daa
jno
or
ret
negb
in
sbb
cli
arpl
rorb
or
sub
repnz
lds
clc
or
stos
clc
xor
into
ret
mov
mov
push
xor
mov
test
fdivs
pop
out
imul
xlat
jp
mov
cmp
dec
mov
pop
jl
in
imul
fs
mov
cwtl
in
in
test
push
mov
adcl
shrl
pop
das
sbb
push
push
les
fldenv
xchg
push
movsb
jg
ret
mov
pop
test
pushf
ret
adc
jl
arpl
or
aaa
adc
pop
cmp
stc
scas
lods
xchg
jg
adcl
pop
scas
add
xor
loop
jl
mov
or
dec
xor
jl
xchg
adc
and
in
xchg
mov
pushf
pusha
xor
out
cmp
and
test
lods
sarl
cmp
xchg
scas
jae
cli
notb
xorl
outsb
arpl
sarb
std
js
out
sub
pop
pop
fisubs
sarl
cwtl
ja
jns
cmp
or
cli
and
push
leave
daa
xchg
pop
cld
or
cmpsb
popa
xchg
js
shll
and
and
sub
sahf
popf
mov
call
add
subl
push
test
outsb
dec
xor
jns
sbb
sbb
js
jecxz
sub
lret
mov
jns
rcr
mov
dec
call
divl
dec
mov
xchg
sub
cmp
repz
push
stos
mov
add
cmpsb
in
nop
outsb
jne
pop
or
fiaddl
jge
sbb
hlt
add
sub
test
or
sub
mov
add
data16
mov
sbbl
and
jns
lcall
sbb
inc
fwait
btc
inc
stc
jbe
lcall
jo
add
aad
mov
fs
push
pushf
aad
mov
call
das
stos
add
pushf
add
push
mov
mov
mov
hlt
imul
test
notb
jb
subl
aad
fsubs
sub
shl
inc
add
or
add
xchg
lret
mov
mov
mov
outsl
mov
inc
mov
xchg
sbbl
dec
cmp
jns
pop
push
or
ljmp
push
sbb
repnz
sub
inc
jae
shll
fwait
sbb
jb
call
mov
xor
inc
and
test
mov
inc
and
mov
lcall
xchg
xchg
sti
mov
and
xor
fsts
dec
stos
stos
cmp
sub
imulb
sbb
shlb
or
pop
add
jecxz
inc
es
xchg
xchg
iret
imul
mov
clts
add
mov
repnz
mov
ret
xlat
pop
cmpb
leave
push
dec
adcl
and
dec
je
ljmp
lds
pop
jae
push
and
mov
jb
sub
fmull
ret
push
mov
add
lods
fistl
insb
add
lahf
jmp
xchg
sbb
cwtl
ret
mov
subl
xor
jg
dec
mov
ljmp
sbb
pushf
add
jecxz
insl
mov
hlt
or
adc
sbb
shlb
mov
xchg
lea
mov
pusha
xor
xchg
jg
jmp
js
outsl
or
mov
lcall
cmp
sub
lods
mov
mov
popa
inc
das
addr16
movsb
sub
popf
sti
fsubl
mov
or
pop
push
test
cmc
dec
push
pop
cs
lahf
out
popl
sar
dec
mov
ret
adc
dec
jmp
mov
inc
lods
loope
call
pop
push
xchg
in
shr
push
jmp
push
movsl
nop
adc
fcoms
pop
xchg
and
mov
mov
xchg
and
das
mov
shll
not
lcall
popf
test
or
outsb
pusha
dec
mov
ss
xchg
lret
stos
shrl
sub
jb
mov
xchg
and
repz
cmp
or
jb
xor
icebp
movl
jae
fadds
mov
dec
ret
cld
push
pushf
push
sti
adc
imul
rol
push
and
lcall
adc
sahf
adc
inc
dec
jbe
cmp
ja
mov
and
sahf
xchg
add
cli
pop
jae
add
or
daa
sbb
out
hlt
cmpsl
mov
mov
push
or
and
enter
push
mov
mov
sub
push
push
add
movsl
jge
pushf
or
int
lock
dec
in
insb
lock
popa
push
mov
fs
mov
sbb
mov
inc
cli
push
outsl
call
add
enter
aaa
dec
mov
mov
cwtl
inc
xchg
rorl
outsl
lds
pop
xchg
adc
adc
xchg
mov
and
xor
jno
mov
shlb
aad
pop
scas
inc
sahf
movsb
ljmp
mov
and
mov
jae
cmp
xor
pop
stos
lock
xchg
movsl
clc
push
jmp
sub
sub
test
push
sub
push
insl
mov
test
add
add
mov
adc
push
lds
gs
cld
cwtl
cltd
add
scas
mov
repnz
stc
leave
mov
hlt
in
and
mov
icebp
pop
sub
jg
in
cmp
out
sbbl
xchg
or
or
sbb
ds
nop
and
xor
push
sbb
repz
mov
ljmp
mov
sar
push
jecxz
push
jmp
pop
mov
pop
repnz
repnz
dec
loopne,pn
mov
fs
jb
shll
cmp
mov
dec
lcall
test
or
add
lcall
pop
mov
pop
into
es
and
dec
mov
pop
les
inc
outsl
sub
sbb
movq
add
mov
fisubrs
addr16
negb
iret
pushf
iret
pop
lock
and
andl
push
icebp
and
jno
mov
xchg
divl
insl
mov
rclb
mov
cmp
pushl
cmp
arpl
xchg
jae
cmp
ret
aas
mov
mov
ret
movsb
adc
jae
mov
push
mov
push
dec
mov
sahf
fstpl
out
add
inc
add
cwtl
pop
ret
aaa
mov
int
adc
lcall
aaa
rolb
push
stos
ljmp
dec
add
and
test
jmp
jno
jg
imulb
and
or
das
push
and
jae
xchg
cltd
enter
in
mov
ja
adc
bound
cli
lea
jns
insl
decl
or
mov
pop
rorb
imul
es
aas
idiv
cli
test
aam
aaa
sarl
cmc
aam
mov
in
sbb
cmp
daa
mov
cmp
aam
push
mov
dec
in
dec
jecxz
push
sub
sub
add
mov
addr16
loopne
xlat
inc
out
lds
shl
out
and
cmp
add
xchg
push
and
loop
xor
gs
cmp
jg
or
movsb
hlt
and
or
jno
mov
popf
mov
and
inc
adc
jmp
sub
in
imul
mov
mov
add
and
lret
cmp
lcall
add
and
and
rol
add
insb
into
fsubrl
xor
loop
push
pop
sub
jl
mov
sarl
int
call
insb
dec
popa
pop
gs
fsubs
clc
out
jae
subl
sub
test
lahf
jns
sbb
and
sbb
int3
clc
ss
aas
sbbl
mov
sbb
mov
mov
cmp
fisttpll
inc
jns
xor
je
pop
fmuls
movsb
mov
ret
lret
xchg
lret
out
sti
enter
aas
js
cmc
nop
mov
push
pop
add
sti
lret
sbb
inc
add
adc
xor
fsubr
or
movsl
lock
ja
mov
add
dec
cmp
dec
push
aad
pusha
lahf
fsubs
fimull
ljmp
ds
jg
repz
dec
jns
mov
pop
adc
in
ja
insb
jg
and
push
pop
in
out
js
insb
lods
mov
lret
mov
mov
sbb
ficoms
sbb
mov
mov
and
mov
xchg
shl
nop
xchg
pop
fs
cs
adc
std
dec
cltd
maskmovq
cmp
sti
xchg
or
push
out
mov
enter
cmp
aam
sub
mov
mov
subb
xchg
sub
leave
sbb
add
out
dec
mov
nop
fistpl
mov
cli
mov
ds
sbb
push
xor
or
lock
jmp
push
mov
inc
mov
movsb
fisubl
push
std
in
add
sbb
shlw
xchg
sub
fwait
loopne
cmp
xchg
mull
cmp
movsl
out
fwait
lock
dec
movsl
jne
adc
push
mov
out
lock
push
xchg
push
cmc
paddw
into
daa
scas
xchg
lcall
push
fnstcw
shl
mov
jo
sbb
mov
mov
arpl
sub
stos
sub
xor
sub
repz
loope
jb
or
xchg
add
sub
jae
lea
inc
test
cld
pushf
push
add
std
idivl
adc
leave
sbb
cli
mov
sbb
and
cmpsl
pop
push
push
std
jo
inc
addr16
cmc
mov
and
sbbl
nop
sahf
dec
out
push
dec
inc
jge
push
inc
pop
js
cmp
xchg
fsubs
add
mov
push
fdivrs
cmpsl
add
xor
bound
push
insb
xlat
mov
xor
loope
sti
filds
and
repnz
lods
es
and
cmp
ret
imul
jb
jmp
rolb
lods
cltd
add
ret
and
inc
idivb
inc
add
inc
lahf
push
std
dec
xor
filds
dec
lcall
or
mov
cmp
popa
in
mov
sub
jg
jno
cmp
add
xorb
xlat
aam
in
mov
xchg
bound
outsb
cs
and
loop
inc
lahf
test
bound
mov
xor
sti
mov
test
sbb
push
fstps
fsubrs
cmpsb
sub
movsb
cmp
sub
push
mov
or
mov
sbb
ds
daa
jb
sti
inc
imul
les
cld
inc
mov
mov
mov
fistps
pop
cmpb
adc
push
cmc
hlt
mov
mov
mov
sub
sub
scas
mov
sar
xor
cmp
std
sbb
fs
scas
sub
stc
and
cmp
sbb
in
xor
out
outsb
faddl
js
inc
cmp
popl
mov
loopne
sub
xchg
icebp
cmpsl
jno
mov
rclb
int
loop
clc
push
push
dec
xor
sbb
in
loopne
xchg
sub
popf
inc
xorb
sub
lea
test
subl
inc
push
sub
push
cmpsb
or
fwait
xorl
sub
loope
andl
and
cmpsb
sahf
and
mov
in
daa
rcrl
pop
and
dec
cmpsl
add
clc
inc
loop
loop
dec
push
sbb
push
inc
mov
lahf
and
cltd
lds
test
add
das
dec
mov
xchg
xor
xchg
stos
cld
ja
and
ss
daa
das
es
lcall
sbb
xchg
movsb
out
or
cmp
pushf
push
adc
xor
push
jmp
mul
fdivrs
xchg
push
pop
xchg
xor
mov
arpl
cmc
dec
jge
mov
push
xchg
ss
sbb
ret
mov
pop
in
mov
cmp
lds
xchg
je
out
fidivrs
int3
sub
pop
inc
sbb
mov
inc
stc
negl
pop
push
cmc
adc
jmp
jno
shll
inc
xchg
mov
sbb
lcall
stos
jp
flds
pop
mov
daa
insl
subb
add
push
xor
xor
test
cmp
lock
rorb
mov
mov
pop
mov
dec
sbb
cmpsl
clc
add
mov
neg
shl
mov
jge
cmp
xor
aas
lret
leave
xor
adc
mov
add
sbb
gs
push
cmp
xchg
mov
sbb
mov
daa
mov
jno
test
pop
insb
jmp
dec
mov
push
add
int
lret
dec
pop
mov
in
push
arpl
mov
push
dec
lcall
dec
cmp
ret
hlt
shr
sbb
gs
out
popf
jne
push
leave
adc
pop
xchg
push
subb
and
scas
rcr
push
mov
xchg
cmpsb
jne
mov
sub
mov
sti
xchg
xchg
cmp
fs
faddl
sbb
ucomiss
fdivrl
sub
jns
xor
or
xchg
add
in
jp
inc
sbb
repnz
mov
adc
lds
dec
lock
mov
mov
and
mov
daa
iret
jecxz
add
sub
arpl
fsubl
fs
adc
inc
test
jno
loop
mov
data16
repnz
icebp
inc
shlb
add
sar
mov
dec
sub
je
mov
pop
fcoml
mov
inc
mov
add
inc
test
jb
bound
cli
or
push
sar
add
jne
push
sarl
mov
fists
push
pop
mov
or
ret
mov
inc
outsb
or
mov
mov
pusha
mov
dec
jbe
nop
xchg
ljmp
add
daa
daa
stos
adc
jge
lahf
pop
jmp
or
or
xchg
xor
cmpsl
arpl
mov
sbb
mov
jo
popa
adc
mov
or
ficomps
inc
scas
dec
nop
lea
and
loop
lret
pop
mov
mov
inc
or
cmp
out
in
or
adc
sbb
jl
add
inc
icebp
sub
lock
pop
mov
add
mov
int
sub
inc
int
push
mov
sub
xor
loop
xorb
fnstsw
and
std
mov
sub
jmp
and
or
lods
push
enter
jl
and
out
inc
pop
jnp
mov
cmp
cmp
mov
dec
jne
xchg
mov
int3
push
mov
mov
jbe
loope
fadd
or
push
mov
sub
dec
repz
orb
dec
faddl
clc
insl
push
pop
mov
flds
jmp
in
push
je
cmp
into
loop
jmp
dec
add
cwtl
mov
cmp
pop
je
adc
and
movsl
mov
out
jl
add
lret
int
mov
fcoms
mov
cmpb
bound
repz
in
jge
sarl
cmpsl
xchg
sub
sbb
mov
cmp
lods
sub
ret
fwait
cli
test
int3
imul
dec
mov
or
sub
mov
inc
adc
or
mov
sub
pop
adc
es
dec
out
aad
ljmp
mov
or
lcall
mov
fmull
inc
movsl
ds
mov
ja
inc
es
aaa
push
ret
ds
push
aaa
fildl
cmp
push
lods
jo
ret
or
dec
jbe
sbb
pop
mov
mov
jae
fwait
lea
or
pushf
je
test
sti
pop
fimull
xlat
shl
in
lods
add
lea
push
icebp
jl
add
test
push
mov
cmp
dec
call
aas
jl
rcrb
and
lds
mov
inc
pop
xor
ds
cld
cmc
test
mov
xchg
mov
xor
enter
dec
cld
pushl
or
pop
aaa
add
shl
cs
fdivrs
faddl
xchg
inc
pop
repz
cld
je
dec
pop
int
lret
clc
jmp
aas
jcxz
sub
popf
push
lock
pop
inc
mov
sub
xchg
enter
aad
andb
jne
cld
xor
xchg
pop
and
mov
daa
xchg
addr16
mov
lahf
shlb
lea
daa
and
jne
push
in
jg
ret
push
push
cmp
push
cmp
jns
mov
sbb
push
shll
imul
cmpb
mov
lahf
mov
andl
lock
push
inc
push
in
nop
out
rolb
xor
push
jo
lret
int
push
out
xchg
xor
jg
or
jecxz
push
cmpsb
dec
jne
aas
lret
mov
mov
test
jl
sbb
outsb
pushf
mov
loopne
sub
shlb
aam
push
sbb
test
ds
mov
jb
jmp
pop
cld
lea
sbb
call
lods
je
sbb
mov
or
dec
jne
pop
xor
sub
sbb
xor
adc
jae
add
filds
mov
test
mov
loope
dec
xor
mov
xor
out
jne
aad
jg
in
push
arpl
dec
in
or
negb
cwtl
push
jne
mov
jecxz
hlt
scas
mov
jle
movsb
push
in
shll
pop
popf
push
push
ret
pop
negb
and
arpl
or
or
inc
cld
lret
pop
push
ret
popf
insl
lcall
in
enter
mov
mov
sbb
xchg
imul
into
cmpsl
cmovl
das
flds
push
mov
jg
sub
jae
int
or
enter
std
add
sahf
movsl
arpl
popa
jne
and
aam
push
or
insb
xchg
lods
mov
jb
leave
vmovdqu
xor
rol
push
mov
ja
fwait
imul
lds
adc
mov
scas
icebp
int3
cmp
xchg
pop
test
cmpsl
stc
adc
test
inc
inc
mov
pop
xor
cmp
shrd
loopne
insb
jmp
push
into
ja
sub
rdtsc
stc
sbb
jo
jb
mul
scas
hlt
lret
imul
sub
fldt
add
lods
sub
scas
pusha
in
arpl
bound
in
jle
mov
dec
and
and
dec
sub
mov
out
fst
jno
dec
fs
adc
mov
jp
push
mov
pushf
add
pop
xor
xor
enter
inc
pop
std
mov
outsl
js
sbb
jnp
xor
jl
inc
call
stos
stos
negb
push
mov
fldl
mov
outsb
aaa
mov
push
xchg
andb
or
dec
sub
and
jne
mov
add
mov
jmp
jnp
pop
pop
add
jmp
or
scas
xor
inc
sti
ret
push
sbbb
inc
stos
xor
or
enter
xchg
shrl
shlb
sti
mov
mov
fldcw
scas
push
fistl
sbb
jo
cwtl
cs
sti
add
cmp
sbb
sbb
adc
pop
mov
fisttps
add
fnsave
int3
outsb
ljmp
sub
pop
push
in
sub
hlt
cs
mov
pop
push
inc
aaa
pop
add
or
das
jecxz
pop
inc
xlat
push
leave
xchg
dec
cmp
jg
and
test
dec
or
mov
jmp
test
fistl
xor
pop
fcoml
xor
popa
dec
adc
pop
insl
xchg
sub
and
push
lret
or
jge
fisttps
out
jge
push
push
movsb
jle
incl
mov
adc
es
or
mov
or
push
sub
test
add
mov
inc
sbb
fists
stc
push
loop
dec
pop
xchg
jmp
test
push
ljmp
psubq
je
or
mov
xlat
test
ss
xchg
insb
push
xchg
in
fistps
movsb
cmp
cltd
sti
pushf
sahf
mov
adc
dec
mov
pop
cmp
mov
jae
mov
push
mov
xor
jno
mov
mov
xchg
push
lret
pop
cmp
dec
adc
inc
xchg
xchg
cltd
mov
xchg
movsl
jno
or
pop
xchg
add
fcompl
jge
jge
dec
pusha
or
loop
inc
ss
les
popf
dec
lods
addr16
mov
nop
mov
jp
test
pop
cvtpi2ps
mov
mov
dec
xor
push
imul
jbe
sbb
stos
popa
sbb
std
aas
mov
cs
xor
xor
mov
xlat
lds
or
adc
inc
je
sbb
push
mov
inc
or
mov
call
mov
movswl
pop
data16
mov
xchg
outsb
xlat
cwtl
fwait
lcall
inc
and
sahf
pop
stc
je
xchg
test
in
mov
dec
jecxz
lea
pop
mov
rcll
dec
ret
adc
and
and
jg
pop
popa
add
rclb
inc
insb
repz
adc
mov
push
pop
cmc
adc
pop
aad
mov
cli
fsubl
test
jg
or
mov
and
mov
xor
pop
and
aad
cmp
fnstenv
pop
xchg
outsl
test
and
dec
mov
and
mov
jno
inc
fcmovu
push
iret
movl
and
and
fisubrl
bound
int
hlt
outsb
lods
enter
lock
out
fxch
adc
lock
xor
add
mov
outsb
movsb
loope
out
and
jl
or
rclb
pop
fldcw
outsw
int
rolb
dec
dec
pop
or
lods
popa
pminsw
sub
pushl
arpl
int3
icebp
scas
adc
in
cmp
sbb
or
popa
push
sbb
pop
or
or
dec
cs
mov
dec
pop
xor
mov
or
push
andl
cmpsl
test
rolb
pop
fadd
xchg
mov
sbb
in
mov
shl
lret
arpl
inc
icebp
jl
test
insb
push
xorl
andl
cld
dec
loopne
data16
push
dec
aam
in
mov
lret
push
jmp
jle
pop
jns
repnz
push
outsl
enter
int
imul
clc
movsl
lods
pusha
cmpsl
sub
andl
or
inc
enter
js
outsl
sahf
cltd
inc
or
jp
push
aad
dec
popf
pusha
je
mov
add
and
sub
sub
xor
add
dec
mov
dec
outsl
movsl
sbb
mov
adc
lods
dec
pop
sub
dec
and
jbe
adc
movsb
leave
aaa
adc
push
arpl
fistps
aam
shll
clc
add
test
jle
int
imul
clc
cmp
dec
adc
mov
adc
jbe
pop
and
push
pop
or
ja
push
jnp
movsb
out
mov
sbb
cwtl
into
cs
popf
mov
loope
dec
aaa
inc
imul
rorl
mov
test
scas
push
push
or
loop
mov
sbbb
out
aas
repnz
pop
adc
idivl
call
decb
lcall
jnp
or
cmp
js
sbb
inc
das
es
push
push
lds
inc
repz
fsubrl
mov
sbb
or
lret
call
or
lds
dec
cmc
jmp
pop
cmp
es
fldt
pop
outsb
repnz
sub
xchg
lods
insl
std
and
test
inc
out
mov
dec
jne
dec
dec
adc
push
out
mov
inc
ja
cmpb
imul
push
mov
hlt
xchg
sti
push
dec
lds
push
mov
scas
adc
daa
xor
mov
xor
fistps
inc
add
adc
mov
inc
lock
jle
out
push
dec
push
sub
repnz
or
xchg
add
mov
cmp
or
jns
sub
ret
movsl
xor
pop
push
sub
and
cmpsl
sbb
pop
cmpsb
or
movsb
inc
into
stos
add
mov
sub
daa
xchg
arpl
cmp
xor
xor
call
sub
lock
and
cs
xchg
das
pop
sbb
mov
sarb
cmpsw
add
repz
xlat
sti
iret
mov
outsb
ror
mov
int
enter
lcall
and
fnstenv
mov
or
jnp
xor
pop
dec
cld
stos
and
faddl
in
dec
call
lods
mov
leave
aas
imul
jno
loopne
dec
sbb
ret
sbbb
in
not
jg
jle
fstpl
sbb
aaa
pushf
out
frstor
fstpt
loope
or
cmp
xchg
pop
push
cs
int
inc
popa
outsl
add
sub
dec
dec
lahf
pop
cs
mov
sbb
cmpsl
scas
mov
movsl
and
mov
notl
bound
jbe
cmpsb
xor
sub
mov
jns
icebp
xchg
adc
scas
jb
out
xor
mov
mov
mov
shll
int3
adc
dec
into
stos
sarb
or
loope
mov
je
in
mov
fnstcw
jle
ss
push
shlb
dec
mov
inc
push
pop
sarl
mov
lret
popf
sub
xor
imul
imul
dec
sbb
jle
loopne
loop
js
shrl
les
jb
lds
cmp
lods
dec
lret
dec
outsb
dec
fmul
or
xchg
aaa
fs
fiadds
mov
jmp
inc
andb
mov
pop
mov
imul
xor
xor
sub
sbb
fwait
dec
lock
lret
jg
jmp
loopnew
jns
dec
inc
xor
add
jl
aad
add
cs
adc
out
out
ret
inc
lea
call
hlt
in
dec
mov
pop
push
hlt
scas
outsl
dec
repnz
aad
test
aas
mov
xor
ss
mov
cmp
fs
lods
jge
mov
movsb
push
mov
xor
jge
lods
imul
lods
push
stc
aas
sbb
push
cmp
xor
sbb
fnstcw
incb
or
add
out
mov
inc
push
xor
cmp
add
adc
shlw
lods
lods
push
call
psraw
aad
in
push
xchg
xor
add
jnp
sbb
cli
or
mov
outsl
popa
pop
imul
inc
mov
dec
lcall
and
popa
popa
bound
int3
mov
sbb
shr
shlb
shl
push
loopne
hlt
mov
je
or
push
push
sub
or
mov
mov
cmpsb
notl
jmp
scas
ss
sub
xchg
int3
scas
ds
add
outsl
mov
test
sbb
push
jnp
mov
cwtl
jmp
sbbb
add
loop
test
fidivrl
icebp
push
and
fisubrs
enter
pusha
cmp
dec
mov
jl
xbegin
test
sbb
mov
icebp
repz
mov
xchg
add
mov
jne
mov
test
inc
rcrl
cmp
pop
out
fisttpl
nop
inc
push
pop
nop
push
xchg
mov
mov
jb
dec
sbb
imul
push
int
inc
mov
sar
gs
call
dec
mov
lcall
stos
mov
je
ss
xchg
aas
outsb
ja
mov
stos
insb
cmp
ret
loop
pop
xchg
jg
rcrb
xor
xchg
mov
imul
adc
inc
lods
push
lea
push
popf
cmpsb
js
fcmovnbe
push
mov
adc
or
cmp
sbbl
lock
in
imul
mov
fists
sub
repnz
jnp
loop
leave
mov
push
mov
jle
jns
data16
or
and
fwait
mov
shl
imul
jae
pop
xor
push
fbld
ljmp
mov
ljmp
mov
xor
mov
mov
dec
mov
cmp
sub
lahf
pop
push
or
js
ljmp
movb
cmp
sahf
adc
add
movsb
push
imul
jle
mov
leave
mov
test
lea
jecxz
fnstenv
and
hlt
mov
bound
test
add
out
data16
lea
add
sahf
push
aad
fisubrl
add
out
das
in
mov
inc
inc
jmp
dec
or
xor
jbe
cs
sbb
fidivl
in
or
test
shlb
popa
repz
loopne
inc
mov
in
clc
movsl
adc
rol
and
out
push
lcall
jl
test
cmpsb
test
jbe
and
push
imul
inc
iret
adc
bound
inc
ret
inc
cmp
in
push
xchg
inc
movsl
mov
push
pop
xlat
push
mov
adc
jl
adc
inc
enter
and
aam
stos
adc
adc
jge
sbb
sbb
xchg
and
adc
inc
ja
lds
data16
xchg
sti
cld
mov
repz
jns
xor
adc
sbb
cmpsb
lods
pop
jmp
sti
cli
js
push
cmpsl
push
add
jle
int
fs
jbe
lret
into
pop
jo
pop
mov
es
lods
or
loop
addr16
jmp
and
rclb
xchg
mov
push
mov
jae
out
or
aas
outsb
mov
cmpsb
sub
mov
adc
fstpt
pusha
pop
fdivs
lret
aaa
in
jb
jne
loopne
lcall
rorl
pusha
push
or
test
insb
mov
aam
sbb
loopne
xchg
xchg
fimuls
jg,pt
fwait
cmp
and
movsb
adc
sbb
jl
jno,pn
subl
mov
js
pop
aaa
out
cmp
fdivrp
mov
add
adcl
jo
aas
jnp
add
shrd
fimuls
sbb
mov
ja
push
inc
test
pop
add
mov
or
and
notl
and
scas
and
or
push
mov
jge
push
xchg
xor
fdivr
or
add
fwait
mov
or
loope
lcall
lcall
aam
xor
clc
sti
sti
shlb
out
popf
pop
xlat
xor
mov
and
subl
lret
pop
jecxz
or
and
sbb
xchg
push
repnz
inc
je
jg
or
out
xor
xor
xchg
cmp
mov
xlat
and
cmp
adc
ficompl
gs
mov
mov
aam
hlt
cltd
jl
in
pop
push
movsb
insb
dec
mov
xor
repnz
push
adc
pop
pop
push
mov
inc
jbe
push
jno
or
dec
add
addr16
out
mov
dec
add
mov
cmp
ja
adcl
push
jne
pop
or
push
in
aaa
sbb
cltd
test
dec
add
pop
dec
arpl
push
pop
pop
lcall
bound
and
dec
dec
rorb
mov
inc
mov
or
xor
and
fisubrs
xchg
addr16
fisubs
or
mov
loop
add
xchg
fisubl
cmpsl
sbb
mov
cmp
ret
fidivrs
xchg
les
sbb
int3
arpl
shlb
xchg
and
or
out
dec
sbb
filds
and
in
add
inc
and
aad
pop
pop
mov
sbb
cmpsb
jp
fidivrs
pop
lods
sarl
dec
sti
cli
mov
pushl
movsb
aas
test
loopne
jno
loope
inc
std
iret
ret
inc
mov
jbe
aas
in
sbb
mov
pop
shl
out
stos
stos
mov
cmp
push
jecxz
stos
popa
add
pusha
jo
dec
pop
into
dec
pop
push
or
jne
and
mov
sbb
push
lock
insl
mov
lcall
or
jmp
inc
adc
dec
push
inc
rcl
jb
and
icebp
popf
clc
jecxz
sbb
or
fdivl
div
pop
mov
sub
loopne
movsb
or
mov
mov
mov
arpl
rclb
mov
out
cmc
xlat
fidivrs
add
xchg
xchg
add
loope
push
es
cmpsb
std
in
loopne
and
mov
jg
es
sbb
test
aad
mov
outsb
lock
in
orb
push
cmpsb
andb
xor
xor
mov
lods
mov
cmpl
fldenv
out
adc
lss
outsb
mov
or
jb
jno
cmp
aam
dec
inc
add
cwtl
mov
loope
aad
cwtl
add
insb
sahf
jmp
push
cmc
js
or
cwtl
test
xor
enter
adc
jns
fsts
das
add
push
sub
sbb
or
sbb
shl
aam
inc
test
xor
pop
loopne
or
pop
bound
loopne
lret
pop
or
imulb
imul
test
dec
je
cmp
adc
sahf
out
inc
and
add
jno
mov
das
push
mov
pop
push
sub
data16
fistpl
mov
call
rcll
adc
pop
mov
push
pop
cmovno
cmp
scas
enter
movsl
mov
jno
cmp
jne
adc
leave
pushf
jmp
pop
imull
mov
and
sub
mov
fsubs
add
adc
push
insb
add
call
sub
ficoms
add
lret
sub
fmull
sbb
out
mov
ret
aad
imul
ds
rorl
jno
cmp
orl
outsl
inc
sbb
sub
adc
imul
or
movsb
mov
mov
ja
fldenv
jp
mov
mov
adc
inc
orl
out
inc
mov
cmp
arpl
mov
jae
push
inc
daa
and
xchg
mov
inc
add
or
adc
mov
out
inc
pusha
pop
add
mov
aam
in
in
pop
movsl
jp
pop
or
imul
inc
lret
inc
cmpsb
jle
mov
pushf
mov
xor
push
mov
mov
add
and
cli
pop
pop
daa
sbb
pop
test
ljmp
lds
int
call
icebp
xchg
scas
rorl
pop
ret
mov
out
inc
xor
sub
or
add
xchg
jmp
je
daa
rcll
cmp
and
stos
test
loopne
stc
xchg
xor
and
cld
cmp
add
sub
lret
in
jle
mov
mov
sub
rcrb
aas
orps
jl
stos
push
sarl
in
and
xor
inc
shl
pop
fldl
inc
pop
mov
test
or
mov
hlt
push
or
jmp
addr16
dec
xor
push
into
sub
xchg
aas
outsl
or
inc
packsswb
into
sarl
loope
out
dec
into
jg
jno
mov
je
push
xlat
sbbl
pop
in
rolb
lods
hlt
fstps
or
js
xchg
call
cwtl
adc
mov
ficoms
cmp
mov
in
jp
and
xor
jecxz
cli
shll
pop
mov
dec
adcb
xchg
lods
pop
mov
mov
repnz
jno
int
js
arpl
push
sahf
test
xor
out
out
mov
cmp
leave
adc
nop
cmp
stos
popa
dec
push
out
xor
cmpb
insl
les
mov
cs
jmp
ficomps
or
loope
mov
or
or
xor
sti
out
aaa
outsb
lcall
mov
cwtl
das
adc
mov
mov
mov
clc
mov
sub
fcomps
enter
and
jg
mov
xor
stos
ret
cwtl
out
and
sub
push
cmp
adc
mov
je
jno
mov
dec
lret
xor
add
mov
adc
inc
cmpsl
pop
jmp
arpl
dec
sarb
std
negl
cli
add
fimull
subb
pop
repz
mov
and
sub
push
je
mov
dec
or
or
mov
lds
push
add
cltd
sahf
scas
ljmp
xchg
pop
imul
scas
scas
popf
dec
mov
ret
popw
jnp
nop
rcr
adc
push
pop
adc
xchg
add
in
push
cmp
jnp
test
or
imul
inc
stos
fisttpl
xchg
out
mov
inc
mov
add
add
mov
mov
xchg
movb
jecxz
in
and
pusha
std
xchg
adc
add
push
dec
pop
push
push
cmp
pop
mov
ret
cmp
sub
lds
dec
rcl
xlat
sub
push
xchg
scas
lea
and
adc
push
push
push
outsb
xor
inc
sbb
cmpsb
and
sub
test
cltd
outsb
fldcw
sahf
ss
xchg
xchg
loope
inc
xor
inc
xlat
add
sbb
rcr
dec
std
xchg
jb
add
bound
adcl
shll
sub
imul
nop
cltd
popa
sub
imul
cs
adc
mov
nop
or
daa
scas
or
mov
jle
or
pop
repz
test
sbb
lods
or
jb
inc
cmpsl
call
lds
imul
dec
data16
sub
pop
movsb
data16
popa
lret
call
sub
lahf
sub
rorl
mov
fcoml
stc
jae
cmp
and
jle
push
icebp
addr16
dec
divl
loopne
inc
xchg
dec
inc
mov
in
frstor
loope
pop
xchg
jge
and
ljmp
enter
imull
sub
xor
pushf
addr16
mov
mov
or
lods
icebp
mov
mov
mov
xlat
and
cmp
cmpsl
push
sub
daa
xor
fmull
iret
sbb
xchg
inc
movsl
inc
das
mov
jl
inc
xor
mov
shl
cmp
adc
sub
push
inc
adc
js
inc
popf
pop
out
mov
push
in
dec
hlt
xchg
and
adc
nop
or
pop
push
push
andb
lds
ret
and
inc
lret
daa
mov
xchg
sub
nop
or
aad
stos
mov
sub
mov
call
test
xor
pop
xor
sub
data16
lds
mov
popa
nop
bound
dec
xchg
in
stc
mov
decl
push
mov
jns
adc
or
xchg
ret
adc
orl
sub
enter
ds
jmp
icebp
into
pop
test
mov
sub
and
lds
mov
rcrb
sub
lock
mov
or
iret
inc
add
pop
cmp
xlat
movsl
sub
stc
mov
lea
mov
jns
std
outsb
scas
ret
mov
cmc
mov
or
fbld
jae
jle
das
hlt
cli
sbb
push
mov
xorb
xor
mov
cwtd
test
imul
xor
xor
test
xor
je
test
cmp
cs
adc
xlat
out
mov
dec
fnstenv
dec
xor
dec
jge
cmp
movsl
dec
jecxz
push
pop
shlb
loop
in
cmpsb
fistpll
int
gs
xchg
xchg
push
sbb
push
jge
repnz
push
or
xchg
enter
mov
fwait
xchg
jmp
call
call
jg
push
xchg
loopne
mov
push
jmp
add
mov
add
jbe
or
mov
or
adc
push
push
lods
es
xchg
pop
pop
mov
dec
div
jne
push
mov
or
and
gs
mov
in
jae
popa
sub
mov
pop
test
subb
jge
fisubrs
int
and
notb
adc
mov
jno
mov
push
cltd
pop
or
pop
adc
into
jg
pop
enter
fwait
adc
fmulp
dec
mov
adc
inc
clc
outsl
mov
push
dec
cltd
lods
repz
sub
je
inc
mov
pop
cmpsb
push
mov
mov
push
dec
fsts
fmuls
out
dec
fstl
pop
or
cmpsl
ds
aam
sub
mov
push
addl
sbb
je
lods
mov
icebp
cltd
inc
mulb
dec
shll
aas
mov
stos
mov
pop
sbb
pop
adc
mov
icebp
mov
inc
xchg
inc
pop
jg
mov
into
xlat
inc
add
push
push
shl
pop
dec
pusha
and
and
repz
orps
inc
ljmp
cmc
nop
js
pop
mov
jo
in
int
into
mov
scas
add
aas
in
push
lods
jle
pop
ret
cli
sbb
inc
rol
or
or
xor
movsl
ret
jne
std
fwait
sahf
mov
cmp
jg
pop
popf
sub
add
addr16
push
mov
nop
xchg
jns
into
push
hlt
xor
mov
sub
ja
jl
mov
adc
sbb
pop
mov
cmp
arpl
push
and
into
xor
inc
dec
push
mov
scas
dec
mov
in
jge
scas
nop
aam
movsb
ss
test
mov
adc
fisubl
popf
pop
cmpb
ljmp
pushf
mov
fs
and
push
add
stos
mov
sar
adc
lods
out
filds
cmp
and
or
mov
nop
cmc
jl
pushf
loopne
scas
mov
jnp
lret
mov
and
dec
mov
mov
xchg
or
push
insb
shrl
inc
testl
cmp
imulb
xchg
in
sub
hlt
lock
repnz
stos
sub
outsb
or
cmp
test
xchg
orb
fbstp
adc
mov
push
add
add
in
rorl
mov
add
sub
rcrl
mov
leave
call
fisttpll
in
es
inc
add
cld
sahf
aaa
sbb
clc
inc
fdivs
shll
imul
sbb
sub
testl
loopne
pop
xchg
and
push
mov
repnz
pop
icebp
insl
pop
stos
cmp
sub
cmpsb
pop
lods
cmp
aaa
or
mov
jge
add
cmpsl
cmc
pop
addl
fidivs
icebp
add
pop
fildll
outsb
outsl
cmp
shlb
xor
jge,pn
test
xchg
pop
cltd
xchg
cli
mov
or
test
ret
clc
adc
xlat
in
in
lret
scas
fs
cmc
repz
mov
mov
inc
in
stos
cmp
jbe
cwtl
js
sti
dec
incb
addl
daa
addr16
mov
sub
popf
pop
add
dec
xchg
or
mov
imul
popl
test
outsl
inc
sub
out
sbb
pop
dec
xchg
pusha
dec
xchg
and
lods
adc
jns
push
adc
outsb
mov
mov
pop
out
sbb
mov
pop
dec
adc
ja
mov
jle
in
pushf
push
mov
xchg
into
xchg
out
xchg
sub
stos
jge
mov
into
xchg
mov
push
hlt
jmp
dec
adc
xchg
push
shll
jno
pushf
jg
cmpsb
stc
jo
bound
mov
cmp
in
out
mov
fisubs
ss
mov
mov
in
fdivrl
sarb
cmp
cli
xlat
jno
or
and
lds
icebp
mov
ljmp
and
stc
dec
idivb
push
pop
fs
in
ds
or
lea
jae
lcall
push
pop
fdivs
ss
push
sub
inc
jle
ret
mov
out
ds
jge
int
pop
repnz
aas
push
lret
fidivrs
scas
test
xor
adc
test
test
mov
rcl
loope
outsl
mov
adc
and
mov
sahf
pushf
adc
nop
cs
xor
dec
inc
out
arpl
pop
xchg
negb
jge
leave
xor
mov
push
or
movsb
lret
out
jno
mov
jno
inc
mov
das
cmpb
inc
mov
out
test
pop
add
pop
xor
lret
sub
inc
or
sub
insb
jae
fistps
add
arpl
xchg
and
jne
adc
stos
lods
jns
fcmovnb
push
fcmovnbe
push
inc
jb
mov
mov
inc
jae
mov
inc
mov
stc
push
fsubrl
push
lahf
xor
or
inc
or
add
js
fists
inc
shll
clc
sbb
andl
mov
mov
mov
xor
mov
jno
or
pop
adc
and
loope
sbb
movsl
popa
in
mov
fs
lods
sti
repnz
xor
xchg
cmp
add
or
arpl
pop
push
pop
jne
lods
frstor
adc
mov
hlt
lahf
adc
movsb
cli
adc
cmp
enter
push
dec
enter
and
ret
mov
aam
sub
adc
popf
mov
xchg
roll
out
je
movsl
dec
add
jp
scas
aaa
jmp
pushf
lods
xchg
jge
out
into
mov
jge
ss
aas
fs
jmp
xchg
dec
ss
pop
pop
lret
loopne
sti
xor
inc
cld
lock
lret
out
inc
pop
dec
xchg
adc
xchg
jo
sti
jecxz
rolb
push
call
or
shlb
lcall
mov
xor
push
add
dec
ja
es
addr16
int3
mov
add
call
jl
test
dec
test
push
test
inc
sar
mov
push
iret
aad
jecxz
lock
jecxz
jno
jge
lret
or
xchg
sbb
stc
es
or
xchg
addr16
mov
sbb
pop
lods
es
sbb
sub
push
mov
in
xchg
in
mov
push
std
imul
push
rolb
ds
pop
xchg
mov
mov
rclb
test
pop
xchg
lcall
lods
add
mov
out
ljmp
xchg
arpl
clc
sbb
call
xor
rolb
jecxz
scas
aam
lcall
mov
lahf
les
lret
in
fs
add
or
xor
sbbl
fdivs
lea
cltd
xor
fimull
push
clc
add
lahf
adc
sub
test
incl
ret
push
shlb
dec
shll
out
mov
or
call
inc
movsl
mul
jne
scas
rorb
mov
call
pop
push
stc
cld
mov
jge
in
and
inc
add
dec
lcall
sbb
aas
push
imul
fsubl
scas
xchg
push
std
adcb
adc
mov
test
insb
mov
lods
push
in
add
sbb
adc
jns
xorl
jle
sub
popa
dec
lahf
inc
popf
inc
inc
or
out
lret
idivb
or
pop
xchg
xorb
imul
out
fdivr
jle
iret
mov
adc
nop
jle
lret
test
pop
arpl
or
xchg
sub
pop
sti
cs
push
adc
jmp
cmp
pop
mov
cli
xchg
mov
xchg
sub
pop
cmpsb
jo
inc
js
pop
psllw
mov
sub
cwtl
orl
ss
xor
popf
das
xchg
xor
sar
pop
mov
gs
xchg
cmp
xchg
pop
popa
and
xchg
sub
dec
mov
shll
mov
out
pop
adc
lcall
cld
movsb
or
sbb
out
mov
iret
mov
int
sub
lret
push
push
add
inc
mov
or
cld
pusha
cmp
push
cli
ljmp
mov
push
data16
cmp
xchg
sbb
int3
fimull
sti
mov
mov
xorb
sbb
or
mov
or
push
add
std
and
or
ds
pop
jmp
cmpsl
mov
mov
adc
mov
imul
sti
or
mov
jb
adc
arpl
scas
add
aad
jge
in
lods
mov
sub
inc
out
push
sbb
fdivrs
cltd
js
sub
lods
push
enter
inc
add
sbb
es
sub
jmp
movsl
outsl
dec
adc
sbb
mov
mov
sub
mov
xor
adc
mov
xchg
cmp
adc
rcrl
in
pop
add
pop
rorl
into
out
sbb
adc
mov
push
dec
push
imull
and
mov
sub
sub
mov
and
jle
sbb
inc
mov
and
jmp
stos
mov
cmpsl
or
jecxz
loope
decl
adc
xchg
insl
pop
scas
sub
pusha
or
mov
lea
mov
imulb
lahf
push
scas
mov
ret
sub
icebp
push
dec
xor
cld
iret
jns
adc
inc
xor
sbb
inc
sbb
cmp
test
jg
inc
xchg
push
lods
dec
fnstenv
in
cmpsl
test
mov
stos
loopne
cmp
cmc
mov
pushf
jo
inc
mov
push
clc
leave
daa
push
data16
dec
inc
ret
test
xchg
pop
mov
dec
cmp
loopne
xchg
sub
push
je
stos
cltd
fs
stos
cmpsl
mov
fisubrl
out
push
xor
mov
xor
or
add
into
xlat
mov
jp
pop
insb
lock
bound
idivb
test
push
mov
mov
das
cmp
push
outsl
mov
mov
mov
inc
fs
push
dec
movb
daa
ja
xor
jns
popa
sub
inc
jo
mov
mov
andb
pop
into
ljmp
mov
adc
daa
pop
push
cmp
negb
cmp
rcr
lahf
push
js
add
cmc
lods
ljmp
inc
imul
in
push
outsl
hlt
inc
jle
inc
sub
or
mov
gs
jecxz
ret
dec
mov
sbb
or
lret
arpl
xor
inc
mov
sub
cmp
lahf
adc
pusha
push
and
test
decb
imul
enter
inc
pop
je
pop
mov
loope
nop
push
rcrb
clc
mov
out
pop
jg
push
xor
inc
inc
aas
pop
shrl
mov
mov
mov
sti
sbb
in
loop
jecxz
lret
movsb
rclb
adc
add
jmp
in
icebp
adc
cmpsl
imul
ss
nop
lods
mov
xlat
adc
les
stc
push
xchg
clc
xorb
rclb
aam
scas
adc
xor
enter
repnz
insb
mov
push
jbe
push
in
add
jo
int3
or
mov
jnp
sbb
out
sbb
pushf
add
mov
sub
cmp
lods
cmpsb
adc
push
icebp
mov
and
push
pop
iret
mov
cmc
clc
loope
sbb
addr16
aas
stos
dec
xor
xchg
in
or
sar
mov
sbb
inc
mov
insb
arpl
es
sbb
cmp
lcall
add
daa
sbb
lock
ljmp
iret
rcr
inc
inc
cmp
mov
sbb
shlb
in
pop
outsb
inc
push
push
les
xor
add
or
add
push
out
xchg
cmpb
mov
mov
loop
roll
decb
and
cmp
pause
mov
push
push
lock
sahf
jl
repnz
or
push
lret
push
mov
cmp
js
cld
xchg
adc
xchg
lods
andl
jl
xchg
xchg
insb
pop
cmp
adcl
xor
out
lret
dec
stc
iret
xchg
mov
popa
pop
fdivl
js
in
mov
cmp
mov
inc
adc
xchg
lock
dec
int
lods
arpl
sti
xchg
adc
push
push
pusha
mov
in
sbb
cmp
pop
je
or
mov
movsl
mov
xor
fisubrl
pusha
mov
pop
in
xor
aad
xchg
leave
movsl
cmc
outsb
jecxz
fwait
mov
inc
popf
push
mov
cltd
mov
lds
jg
call
jne
xchg
imul
sbb
cmp
loopne
sbb
addr16
shlb
into
jecxz
rclb
cltd
add
jne
push
fs
xor
idivb
lods
jge
roll
popf
aam
push
adc
push
loop
cmpb
test
add
jmp
lret
lahf
and
mov
not
inc
test
and
jno
adc
fdivs
pop
mov
pop
fildl
outsl
es
cmp
mov
sub
cmpsl
mov
and
mov
fidivs
push
add
xchg
jecxz
dec
dec
lods
nop
adc
dec
imul
dec
movsb
or
gs
xchg
push
sbb
mov
add
popf
rolb
jecxz
clc
out
orb
test
xor
sbb
xor
pop
lds
fcomps
fbstp
pop
test
shrb
in
arpl
mov
das
inc
sub
push
push
pop
push
lods
pop
mov
ret
dec
or
mov
xchg
loop
add
mov
push
mov
xchg
push
add
add
mov
sbb
je
fstps
pop
inc
adc
repnz
daa
repnz
mov
mov
mov
fcoml
lcall
dec
outsb
or
das
jmp
jg
xor
out
jb
cmc
push
pop
adc
iret
xchg
lock
add
cld
cmpsb
sub
stos
jnp
aam
cmp
pop
and
ss
outsb
inc
test
stc
sbb
stos
in
outsb
sub
adc
inc
inc
or
clc
mov
int3
mov
cli
pop
jl
xor
xchg
mov
shlb
je
mov
or
int3
xlat
test
bound
inc
inc
pusha
dec
gs
scas
dec
addr16
push
out
mov
popf
negb
push
adc
daa
stos
mov
scas
xchg
aam
pop
frstor
add
pop
jp
sbb
aas
mull
fsubrs
mov
imul
fisubrl
aas
sub
sub
add
mov
jmp
push
sbb
iret
ret
mov
test
pop
lret
cs
dec
inc
push
push
fucom
jbe
ficoml
mov
stos
add
sub
leave
pop
int3
push
xchg
xor
xor
ja
fnstcw
lods
dec
nop
test
mov
and
mov
hlt
insb
xor
in
sbb
test
jp
xchg
fwait
xor
dec
mov
jns
sub
pop
mov
cmp
lods
test
arpl
nop
mov
cmp
shlb
loop
xchg
mov
xor
mov
jo
inc
fwait
pop
mov
xchg
sbb
das
pop
mov
inc
das
scas
fdivrl
orb
addr16
xchg
outsl
sub
out
test
call
inc
int
mov
bound
xor
add
add
aas
sti
pop
out
mov
jle
and
aad
outsl
add
sbb
pop
daa
enter
test
in
push
jl
xchg
stos
stos
inc
mov
sbb
push
mov
jb
jge
sub
into
dec
ret
cmc
jp
rol
movsb
sarb
jmp
or
outsl
mov
or
lret
push
fbstp
sub
pop
and
xor
nop
sub
into
mov
cmp
iret
mov
fidivs
pushf
sub
lret
lret
call
leave
or
fnstcw
sahf
xor
out
call
and
xchg
xchg
loopne
mov
stos
jle
mov
mov
pop
addr16
test
in
cs
pusha
rcll
enter
sahf
popw
mov
into
mov
xchg
ds
adc
xchg
mov
add
push
pop
outsb
adcb
leave
mov
pop
sti
js
dec
dec
add
fs
iret
out
cmp
dec
mov
dec
je
push
adc
icebp
cmp
or
icebp
jl
and
jmp
pop
enter
mov
mov
outsb
imul
mov
mov
and
lock
pop
xor
add
and
out
xor
push
adc
sti
jge
inc
lea
sbb
cli
lods
movsb
adc
in
sarb
adc
xchg
add
fldt
inc
or
or
cmpsb
test
xchg
xchg
lock
je,pt
pop
mov
imul
ret
nop
test
lahf
fxam
jbe
bound
cmp
sub
rcl
and
adc
fists
inc
test
fcompl
lods
mov
sti
or
xchg
adc
sti
mov
push
addl
pushf
stos
mov
jge
repz
cmp
sbb
pop
jno
les
push
adc
jnp
mov
lods
cmp
dec
daa
mov
pop
mov
xor
aaa
sahf
xlat
jb
adc
sbb
pushf
pop
iret
sbb
and
ficoml
adc
jb
add
fistpl
shrl
jge
decl
adc
push
pop
or
test
lahf
imul
cli
stc
push
mov
inc
clc
sub
les
add
pop
scas
outsb
ss
inc
pop
test
fistl
push
mov
mov
jp
pop
in
inc
sub
adc
push
jg
aaa
int
ss
jns
mov
movsb
xor
leave
sarl
push
cmp
and
sti
push
scas
ja
push
ljmp
scas
or
shl
aaa
js
sub
das
pop
inc
pop
mov
insl
pop
ja
dec
std
jle
in
sbbb
ljmp
pushf
nop
add
mov
add
movsl
add
jp
and
dec
iret
lods
jg
sbb
rolb
xchg
les
and
pop
inc
test
lret
fistpl
push
push
into
jne
and
sbb
into
hlt
clc
and
sbb
push
jp
xchg
shl
jge
dec
dec
andb
sti
push
add
dec
xor
xchg
cmp
fs
aam
daa
xor
cwtl
mov
xchg
bound
loop
addr16
or
arpl
pop
enter
or
mov
xadd
cmpsl
pop
push
nop
ds
inc
fistps
mov
popf
xorl
cmpsl
add
pop
cld
adc
mov
mov
scas
dec
jbe
icebp
fsubrp
cwtl
mov
dec
mov
pop
test
cmp
iret
rcrb
lea
adc
rol
cwtl
pop
ds
xchg
xorb
mov
rclb
mov
push
add
lds
push
push
movsl
push
imul
fstpl
sub
int
adc
out
movsl
dec
or
cmpsl
dec
aam
dec
or
xchg
daa
sahf
hlt
mov
pop
or
ds
or
cmp
inc
dec
int3
or
iret
push
cs
push
cwtl
fisubs
sbb
xchg
test
sbb
push
jno
inc
mov
cmc
jl
inc
aaa
andl
cmp
add
dec
dec
lahf
pop
push
in
lea
std
scas
sbb
add
imul
outsb
ja
js
into
cmp
push
inc
xchg
js
orb
iret
dec
fsubrs
jp
ret
pop
jl
sti
jo
roll
dec
or
cmp
hlt
push
loop
jo
sbb
test
mov
mov
decb
test
add
mov
push
gs
xchg
sbb
sub
flds
mov
push
mov
in
dec
or
cmp
outsl
neg
push
in
popa
stos
lret
sbb
push
push
call
fwait
add
add
movsb
push
je
icebp
mov
mov
shl
cmc
and
lret
je
adc
loope
mov
jl
out
mov
stos
xchg
shlb
dec
dec
or
shl
pop
xchg
inc
movsb
decb
lock
fsubl
sub
cmp
dec
shlb
popf
dec
and
aam
ja
mov
les
mov
pop
int3
sub
iret
sub
push
mov
cli
andb
ja
cmp
push
sysenter
arpl
push
mov
lret
lret
clc
pusha
shlb
fidivl
xor
stc
mov
mov
negb
in
fcmove
mov
hlt
mov
cmp
pop
fiaddl
pop
outsl
btc
and
dec
lock
mov
mov
xchg
and
repnz
and
xor
vmaskmovdqu
leave
mull
popa
es
fmulp
add
mov
add
aas
sub
es
mov
mov
test
test
cmp
jnp
mov
das
cwtl
or
sti
push
in
xor
push
mov
in
cmpsb
sub
stos
test
jmp
push
test
xor
in
daa
fucom
add
punpckhwd
sbb
faddl
jecxz
pop
data16
sbb
movsl
mov
notb
mov
xchg
mov
scas
aad
out
std
xor
push
pop
sub
daa
je
cmp
in
sbb
jb
aad
mov
lret
cmp
jne
mov
clc
inc
test
lds
ret
xchg
xchg
mov
sti
xor
addps
pop
xchg
lods
cmpsl
in
out
or
or
call
push
pushl
and
xchg
inc
js
ljmp
mov
jle
add
xlat
mov
mov
bound
stos
xor
in
into
xlat
pop
mov
cmpsl
mov
adcb
imul
push
add
mov
lds
and
mov
je
cmp
sbb
repz
enter
scas
or
mov
std
cli
leave
inc
pop
ftst
adc
mov
xor
pop
pop
mov
outsb
jle
inc
inc
mov
sub
push
adc
movsb
sub
mov
lcall
imul
sbb
shrl
lock
lea
xchg
shll
fstl
mov
xor
cmp
mov
das
sub
jnp
cmp
xchg
mov
xchg
xchg
nop
pop
xor
into
sub
xor
sbb
cli
jl
cmpsl
pop
or
aad
out
lds
sarl
imul
add
int
pop
sub
pop
inc
pop
lds
imull
jg
xor
enter
enter
add
add
mov
lock
and
in
loope
popa
mov
pushf
iret
mov
lahf
orb
pop
mov
push
call
mov
lcall
adcb
push
call
roll
shlb
sub
ss
xchg
push
sbb
mov
mov
push
popa
xchg
sbb
mov
pop
mov
jno
jb
and
xchg
or
xor
cmpsl
mov
lds
or
stos
mov
aad
inc
xor
pushf
jp
lret
pushf
into
sbb
push
push
cmpsb
pop
stc
imul
stos
lahf
stos
jnp
sbb
xchg
xor
jl
dec
adc
sahf
adc
enter
add
test
jl
and
mov
jge
lock
sub
hlt
ljmp
mov
inc
shr
mov
fsubrp
and
inc
add
lcall
push
dec
pop
icebp
cs
roll
sti
inc
xchg
pop
mov
popf
mov
fwait
icebp
mov
fldcw
dec
cmpsb
mov
pushf
ljmp
xor
nop
mov
jp
xor
lea
dec
std
xchg
mov
ds
popa
mov
mov
jo
inc
jg
and
cld
ljmpw
call
mov
lds
lret
xor
ret
mov
cmp
mov
add
mov
lret
push
dec
jb
jmp
cmp
fdivrl
int
jne
sub
test
fmull
cs
int
mov
mov
fstp
cmc
add
cmp
stos
jmp
push
or
mov
push
xor
jbe
adc
aas
imul
mov
iret
lock
out
jns
jne
dec
jae
sti
repnz
lcall
jl
pushl
enter
cli
add
loopne
scas
cld
idivl
fidivs
adc
xchg
add
xchg
mov
inc
imul
xchg
addb
out
fisttpl
iret
xchg
jno
sti
inc
xor
pushf
and
insl
xchg
pop
jecxz
arpl
inc
pop
push
lods
out
cmp
xor
jns
dec
push
cmp
fisubrs
shrl
into
or
pop
ljmp
xchg
lea
jmp
push
or
ficompl
dec
cwtl
mov
cs
popf
push
pop
mov
xchg
xlat
mov
es
add
js
pop
xorl
pushf
and
cmp
sahf
push
fistpl
cli
bound
adc
in
lds
testb
xchg
addr16
js
inc
mov
test
outsl
pop
subl
mov
cmp
push
shl
mov
add
dec
jb
popa
pop
sbb
fisubrl
jecxz
adc
insb
sub
lds
xchg
jmp
adc
dec
leave
push
movsl
jae
xchg
mov
add
test
repz
repz
insb
fistpl
sub
jo
lahf
loope
addr16
inc
pop
out
fisubrs
test
xchg
mov
mov
cmp
pop
adc
push
mov
mov
push
push
cmp
mov
and
dec
push
rep
xor
dec
jp
insl
xchg
adcb
mov
mov
pop
or
add
dec
adc
ljmp
mov
sub
mov
subl
jmp
sti
mov
fildll
xchg
lahf
push
xchg
flds
mov
lcall
push
cmp
sub
cltd
jbe
adc
in
dec
pushf
test
jge
imul
aam
add
daa
aas
imul
scas
xor
iret
lret
xchg
movsb
cwtl
outsl
popf
add
stos
sub
add
push
popf
ficompl
das
fdivrp
add
movsl
ds
cwtl
mov
mov
movsl
sti
pop
sub
idivl
out
out
mov
call
add
fstpt
stos
push
push
inc
push
push
adc
cmp
jbe
inc
mov
aas
mov
sbb
pop
sbb
repnz
xchg
in
sbb
outsb
jno
sti
dec
cmpsb
mov
sbb
enter
fidivl
inc
rolb
mov
mov
sbb
aas
lret
xchg
out
adc
adc
mov
xchg
in
cmp
xor
xchg
fiadds
inc
lds
orb
pusha
push
cmp
dec
dec
sub
pop
stc
cmp
xchg
jmp
in
shl
xor
mov
cli
pop
fsubs
das
xchg
lods
bound
bound
and
in
sahf
mov
cmp
in
dec
add
inc
aaa
lds
mov
sub
xchg
cwtl
inc
fcomp
jns
dec
pop
mov
jne
adc
inc
dec
dec
insl
cmovl
sub
fnstcw
pop
and
mov
je
aad
lea
shr
inc
jg
or
adc
fdivrs
lds
pop
out
subl
xor
rclb
and
add
mov
out
cwtl
adc
and
inc
bnd
sbb
scas
stos
ret
popf
cmpsb
pop
mov
pop
test
movsb
sarl
inc
hlt
mov
mov
imul
or
test
xor
jae
mov
jle
push
dec
jle
inc
popf
sbb
in
adcb
mov
pop
in
arpl
adc
std
sub
add
gs
call
je
insb
movsl
stc
dec
xlat
add
call
dec
cmp
and
lds
stos
rorb
jno
jae
sub
jae
outsl
loopne
sti
mov
dec
push
push
dec
sub
in
or
inc
pop
repz
pop
rcrb
mov
jno
icebp
pop
inc
dec
pop
jno
insb
test
inc
inc
cli
push
sbb
pop
shll
cmpsb
ret
sbb
jb
fwait
mov
mov
dec
imul
dec
adc
pop
es
xor
es
fdivrp
lcall
mov
repz
xchg
push
scas
cltd
jo
xchg
fmull
push
xor
aas
or
mov
out
data16
push
inc
push
mov
pop
sub
dec
sub
mov
sahf
daa
adc
daa
pop
push
fisubrl
jbe
fwait
icebp
mov
pop
js
cmp
and
adc
jno
mov
sub
nop
adc
arpl
scas
aam
push
jle
mov
and
and
in
test
imul
repnz
mov
cmp
insb
sub
inc
dec
imul
jg
xlat
mov
into
push
icebp
mov
neg
push
into
dec
jecxz
and
mov
sbb
mov
addr16
lret
hlt
xor
pop
adc
movsl
sbb
dec
sbb
sbb
adc
scas
leavew
push
push
mov
test
adc
jle
cmp
adc
sbb
push
push
leave
sub
sbb
sub
xor
push
test
pop
movsl
andb
addr16
rolb
aad
add
lods
mov
ljmp
or
adc
js
test
mov
sub
ljmp
mov
dec
cld
sbb
mov
xchg
stc
sub
xor
mov
negl
pop
adc
int
mov
fildll
into
in
gs
xlat
sbb
jmp
mov
cmp
aad
cmpsb
movsl
sbb
sub
lret
xor
testb
sbb
mov
insl
xchg
lock
sbb
add
xor
dec
mov
and
das
pop
bound
jmp
cmc
pop
cmp
iret
adc
mov
mov
addr16
mov
invd
and
jae
or
dec
movsb
inc
mov
sub
jl
xchg
enter
jecxz
das
jmp
dec
hlt
adc
in
jbe
jae
add
add
or
int3
pop
das
outsb
xlat
push
push
or
pusha
mov
test
gs
repnz
lock
pushf
jne
lret
mov
pop
cmp
into
and
inc
and
and
cltd
incl
pop
xorl
mov
lds
mov
add
xchg
and
loop
push
aad
in
adc
addr16
xor
adcl
loopne
add
jne
jb
dec
dec
outsl
push
fs
cwtl
pusha
mov
ret
push
std
xor
cmp
add
dec
add
cltd
push
ds
jno
inc
sub
mov
daa
jle
sbb
cmp
daa
mov
sub
into
imul
movsb
add
call
insb
jmp
cmp
fsubrs
or
sbb
push
mov
push
mov
dec
mov
enter
stos
cmp
out
mov
subb
dec
and
pop
sub
ret
sbb
jb
pop
out
ds
adc
sub
repnz
add
dec
pop
add
rorb
cmp
aaa
adc
test
jns
out
decb
mov
xchg
aaa
and
adc
movsb
jle
add
kmovw
mov
movsb
inc
mov
bound
pusha
cltd
cmpsl
ret
gs
shll
mov
xchg
push
or
ret
sbb
ret
push
cs
inc
lretw
arpl
mov
out
sbb
dec
jmp
in
dec
pop
in
and
push
fadds
pop
pop
or
jl
adc
scas
jp
sub
out
adc
lea
pop
jl
inc
out
loopne
sbb
outsl
and
or
sbb
filds
ficoms
ds
into
into
mov
xor
ds
mov
add
pop
dec
repz
add
mov
pop
iret
stc
dec
jmp
dec
div
add
mov
xchg
push
sub
int
cld
rcrl
xor
push
cmpsl
les
outsl
aas
out
pop
push
mov
inc
out
push
cmp
cmpsl
stc
pusha
leave
ljmp
lcall
inc
or
mov
test
mov
jo
sub
int
inc
push
nop
pop
jecxz
push
into
push
repnz
mov
mov
cmp
in
xor
cmpsl
xor
mov
lods
rolb
cmpsl
xchg
insb
test
xchg
cwtl
gs
xor
jmp
negb
andb
jno
popa
cld
popa
pop
test
xchg
and
fs
inc
das
jb
ss
sbb
repnz
push
dec
shlb
xor
inc
leave
ret
push
push
pop
xor
push
cmp
lock
adc
xor
je
dec
sub
dec
repz
leave
fidivrl
add
es
mulb
ret
sub
and
xor
and
adc
lds
imul
push
lret
ffree
and
inc
jnp
in
pop
repnz
mov
mov
les
test
imull
push
leave
mov
fiaddl
das
data16
cmc
aad
into
addr16
loopne
scas
lock
mov
jg
pop
xlat
iret
add
iret
out
mov
or
sbb
pusha
dec
shll
sub
lcall
shrb
loop
mov
inc
das
inc
rcrl
push
roll
movl
fdivl
xchg
ja
mov
fdivrs
mov
sub
je
push
rcrb
data16
leave
jle
jbe
rorl
adc
and
nop
and
mov
adc
lcall
das
push
lock
jge
test
icebp
arpl
lret
push
je
xchg
ss
inc
pushf
xor
mov
dec
mov
clc
mov
out
xchg
mov
add
fs
pop
adc
jmp
in
xor
xor
adc
fldt
loop
cli
es
xor
xor
in
mov
out
inc
pop
cmp
dec
loop
sub
mov
ds
cmp
mov
mov
push
iret
cmc
mov
arpl
mov
sbb
xchg
aas
xor
addl
in
sbb
es
dec
orb
int3
add
mov
shll
pusha
test
loope
push
mov
inc
jmp
push
xchg
xorl
sbb
cmp
les
fstpt
daa
pop
out
add
movsb
cld
rclb
and
mov
add
cmpsl
jo
insb
pop
xor
mov
lods
into
xchg
int
fimuls
sbb
mov
mov
sub
jne
or
shr
in
pop
and
ret
mov
repz
js
lcall
mov
addb
jecxz
push
sbb
cmpsb
rclb
cmp
fistpll
and
pop
xchg
test
pop
test
bound
xchg
jo
pop
push
sbb
pop
inc
jae
mov
jne
xchg
out
cmp
push
fiadds
jbe
dec
test
add
filds
loop
sti
xor
xchg
scas
cld
sti
fistps
xchg
pop
push
out
and
enter
and
jnp
or
fnstenv
aad
insl
adc
xchg
and
sub
cwtl
sbbb
or
or
mov
jb
jnp
popf
outsb
lahf
xlat
pop
pop
xchg
fs
inc
mov
dec
out
dec
mov
xor
leave
cli
mov
or
sbb
fstpt
mov
out
inc
fwait
xor
mov
or
aas
test
mov
add
sarl
and
xchg
xor
in
ljmp
in
ljmp
dec
dec
adc
cmpsb
jns
hlt
je
test
subb
sti
add
fisttpl
test
aas
pop
or
push
in
push
sbb
fldl
pop
loope
and
push
sbb
mov
dec
sbb
into
or
cmp
adc
mov
into
dec
push
push
add
mov
ret
jb
and
stc
push
out
clc
jae
inc
add
pop
idiv
int3
mov
push
fimuls
add
jbe
sub
mov
popf
push
mov
test
pop
mov
push
push
pop
shll
lods
popa
jl
add
es
gs
pusha
cmp
enter
inc
pop
inc
rcll
frstor
or
xchg
shlb
xchg
outsb
adc
adc
push
xchg
or
or
cmpsb
or
test
ljmp
scas
mov
loope
sti
mov
inc
or
fnstcw
or
scas
mov
dec
sbb
cltd
por
xor
xchg
fistps
cmpsl
and
jns
and
inc
mov
addr16
ret
jge
cmpl
or
fists
subl
movsl
jne
mov
add
mov
pop
push
loope
fists
cli
push
ds
popa
push
test
dec
inc
in
dec
cmp
and
out
out
xchg
xchg
jl
sahf
arpl
mov
les
dec
cld
jo
das
jl
xchg
or
bound
mov
xor
dec
mov
insb
test
mov
xor
inc
in
add
jmp
test
dec
sti
mov
xchg
pop
clts
out
test
std
sub
cwtl
dec
pop
mov
or
setb
mov
loop
jo
popf
das
popa
das
sahf
cmc
and
sbb
pushf
lcall
push
out
out
aam
inc
cld
or
fidivrs
mov
cmpsl
ret
sar
test
mov
out
or
outsb
dec
jl
rcll
out
mov
shrl
mull
nop
out
push
jp
hlt
hlt
xor
xchg
popf
push
cli
jmp
inc
mov
and
jle
dec
lods
das
sbb
lods
je
push
push
cmpsb
push
out
add
jle
iret
lds
icebp
cmc
mov
arpl
pop
sbb
scas
imul
xchg
mov
call
push
cmpsl
in
dec
out
dec
imul
jns
cmc
jecxz
stos
jae
adc
subb
pop
movsb
loopne
jno
pusha
add
mov
push
xlat
test
mov
ja
vcvtpd2dq
push
test
ljmp
rcll
push
cld
ja
aam
inc
fbld
xchg
ljmp
ss
imul
jnp
ja
movsb
fidivrs
sbb
loop
andb
cli
adcl
sub
stos
cmp
sub
mov
jne
inc
insl
hlt
pop
loope
in
pop
fs
lret
cmp
pop
mov
jg
lods
stc
jp
mov
out
lea
pop
lret
jp
mov
mov
aam
in
mov
xchg
outsb
mov
adc
lea
cmp
insb
mov
les
fldenv
push
mov
mov
repz
push
mov
fisubl
mov
testb
in
jp
pop
or
sbb
and
mov
cmp
mov
cmpsb
cmp
idivb
jle
jecxz
sub
mov
pusha
fiaddl
sahf
xorb
cld
test
or
ljmp
fwait
pop
mov
sub
pop
xchg
mov
pop
subb
inc
or
ljmp
les
pop
and
mov
cld
or
xor
repnz
push
aad
cmp
push
add
jp
fs
leave
or
inc
int
dec
clc
cmc
adc
imul
sub
mov
xchg
addr16
sbb
sbb
out
xor
mov
mov
sti
inc
jg
ljmp
add
jne
lcall
xlat
stos
or
decl
cmp
add
outsb
jns
insl
sarb
mov
cli
pusha
mov
rcrb
xchg
out
sub
jo
xor
inc
dec
mov
in
imul
pop
jge
decl
cmc
out
dec
inc
mov
and
or
sub
gs
mov
dec
dec
imul
xor
ret
cs
insl
aaa
ja
call
clc
rcr
jae
dec
push
inc
aas
ss
dec
jno
sbb
push
mov
insl
xchg
jnp
jbe
cli
outsb
call
cmp
loopne
xchg
xchg
ret
mov
dec
add
shrb
aam
xchg
mov
dec
daa
int
in
adc
into
add
push
or
pop
mov
xchg
sbb
movsb
sti
cmp
mov
in
push
mov
or
gs
add
mov
dec
in
sub
aad
gs
jo
xchg
dec
and
testb
mov
and
mov
je
aaa
clc
adc
mov
addr16
mov
pop
popa
cmp
jmp
jge
add
cmp
stc
js
xor
scas
jbe
addb
push
sbb
sbb
test
push
ss
loope
mov
fldt
jne
sub
cwtl
push
mov
loop
loopne
mov
lea
sub
or
or
pusha
out
push
test
hlt
in
subb
push
mov
push
je
pusha
test
cmpsb
sbb
into
add
fdivs
xchg
mov
push
xor
inc
xor
lcall
mov
pop
cmp
or
add
ficoms
mov
in
xor
mov
rep
mov
sbb
inc
sahf
orl
aaa
addb
addr16
lretw
out
or
adc
imul
push
sbb
sbb
xor
int
lds
call
xchg
jecxz
js
add
les
or
stc
jecxz
pop
pop
movhps
push
testl
std
sbb
fwait
xchg
ret
shll
data16
subl
add
pop
daa
xor
jo
jnp
sbb
add
inc
scas
inc
test
repnz
dec
jns
jg
and
es
lret
or
cmp
sub
icebp
popa
or
ret
cwtl
jmp
cmp
imul
or
xchg
mov
jno
mov
dec
mov
pop
mov
rclb
sbb
test
fsubp
leave
mov
pop
mov
les
add
push
push
jmp
mov
pop
mov
clc
add
sbbb
push
mov
in
imul
mov
xchg
lock
xor
push
fdivl
push
in
lods
outsb
daa
xchg
mov
mov
loopne
xor
scas
movsb
lock
das
insl
daa
and
ljmp
pop
dec
repz
cmp
mov
popf
xor
repz
shrl
popf
fistl
inc
mov
hlt
pusha
sarl
pop
xchg
adc
jbe
rcrb
mov
out
xchg
xchg
jp
jl
inc
data16
jne
mov
or
insl
jp
push
mov
inc
push
inc
or
push
sbb
jb
xchg
mov
or
xchg
add
mov
pop
xchg
jg
dec
cmp
repz
out
pop
je
xchg
call
pop
cmp
add
push
jo
in
fistps
pop
mov
fdivs
mov
bound
jle
cmc
cmpsb
xchg
sub
mov
pop
sarl
mov
and
iret
int
sbb
pushf
insb
test
cmpsb
test
sub
adc
mov
std
ljmp
mov
out
xorb
out
out
sbb
daa
jl
cs
and
pushf
daa
sti
xor
mov
int3
mov
sbb
or
call
out
adc
je
loop
adc
fs
mov
adc
flds
xchg
shll
imul
pop
mov
pop
and
gs
negl
mov
xor
outsl
pop
aaa
mov
insb
adc
clc
addr16
adc
test
sti
pop
nop
dec
call
test
jp
cli
cmc
pop
das
sub
pop
adc
sbb
mov
sub
insb
xor
scas
mov
pop
imul
cltd
mov
fcomps
cwtl
pop
mov
sbb
mov
sbb
rcrl
inc
jns
mov
inc
pop
into
daa
shrb
leave
popf
fcmovnu
inc
jns
ret
mov
stos
dec
fisubl
icebp
jle
and
ret
xchg
sti
dec
hlt
add
and
jg
cmp
hlt
xor
daa
push
scas
jno
idivb
lds
sub
repz
xor
push
lahf
xor
ss
jb
in
jbe
fidivs
dec
inc
cmpsb
xor
xchg
push
adc
out
gs
mov
jnp
aad
mov
jo
popf
add
add
and
cwtl
int
cmc
sub
fldenv
mov
mov
xchg
lods
test
mov
out
nop
movsb
fnsave
mov
out
repnz
jnp
pusha
xchg
jne
movsl
mov
xchg
fwait
daa
xchg
mov
inc
cli
rorb
xchg
xchg
jle
ss
sbbb
mov
inc
stos
imul
into
pop
outsb
mov
push
mov
clc
setge
fdivl
popf
cwtl
mov
ds
jo
inc
cmp
lock
mov
sub
mov
fisubrs
sbb
lds
out
xchg
adc
scas
inc
pop
iret
jg
add
mov
and
loop
and
mov
test
push
leave
and
mov
push
xchg
cmp
mov
dec
outsl
jg
loop
clc
sub
testb
rorb
movsl
jns
nop
dec
idivl
test
lahf
incl
nop
jecxz
and
lret
adc
or
call
shrl
xchg
pop
scas
fneni(8087
mov
lods
shll
dec
fimuls
mov
xor
lahf
add
inc
mov
stos
je
shll
daa
mov
adc
mov
decl
imul
mov
mov
fnsave
popa
out
shll
adc
cmp
lcall
sub
mov
dec
arpl
sub
data16
xchg
mov
pop
mov
test
dec
out
ja
cltd
inc
push
adcl
popa
cld
inc
outsl
push
enter
dec
mov
cmp
pushf
stos
xor
imul
add
sub
scas
pop
pop
cli
int
jg
pop
sbb
in
stos
inc
xchg
jl
sub
pushf
icebp
andb
xor
xchg
cld
or
das
in
fiadds
imulb
pop
mov
sbb
stos
mov
lea
notb
lret
xchg
mov
or
imul
mov
movsl
sbb
xor
or
dec
nop
add
popf
pop
aaa
in
jg
mov
je
jp
cs
pop
mov
xchg
in
mulb
and
jnp
push
push
or
subl
sahf
js
out
clc
pop
mov
fsubl
test
sub
mov
sbb
xor
cltd
sbb
jae
mov
pusha
adc
mov
loop
cmc
xchg
mov
mov
fdivl
add
xchg
xor
lock
xor
filds
mov
xchg
mov
pop
jns
notl
aaa
jp
cmp
das
sbb
gs
jle
stc
in
and
jmp
pop
sbb
aam
sbb
inc
add
lds
pop
xchg
popa
fidivrs
vucomisd
mull
ljmp
fldt
sbb
inc
int
sub
mov
enter
mov
mov
xchg
movsb
add
jecxz
inc
push
or
lret
and
add
mov
insl
es
fmuls
xchg
fsubrs
ret
dec
jb
loop
mov
lcall
cmp
fwait
arpl
add
pop
xor
and
jns
push
push
loop
int
xor
xor
repnz
jne
in
adc
fmul
fwait
outsl
push
and
aad
lcall
fidivs
jbe
mov
in
dec
in
out
loop
mov
aam
outsl
not
inc
ret
fidivl
jge
repz
imul
cmp
rcrl
gs
mov
gs
jno
mov
out
nop
push
adc
mov
add
mov
fs
fimull
fadd
in
push
adc
sub
inc
adc
push
movsb
sbb
data16
jg
mov
flds
daa
pushf
or
in
cmp
inc
mov
pushf
icebp
btc
scas
roll
adc
out
mov
adc
lds
pop
pop
cld
adc
add
xchg
mov
inc
push
add
test
push
jecxz
dec
fsubs
pop
add
dec
cmp
push
lret
fildll
lcall
loopne
push
push
mov
aaa
jle
xchg
lock
idivb
mov
sti
movsl
gs
popf
out
inc
inc
xor
mov
mov
jno
mov
adc
nop
enter
out
add
aaa
lods
pop
repnz
gs
shl
sarl
hlt
dec
mov
pop
sbb
iret
sub
rcl
xchg
mov
shl
iret
sarb
dec
stos
add
ss
mov
cwtl
mov
cmp
and
mov
dec
repnz
add
leave
adc
adc
xor
inc
ficompl
rorb
es
into
dec
ja
jle
inc
into
pop
mov
inc
lods
aaa
or
lock
hlt
je
mov
push
fisubs
aas
iret
pusha
hlt
push
sub
loop
in
ljmp
cwtl
adc
push
push
mov
testb
sub
and
mov
sub
cmc
push
mov
xchg
push
pop
leave
cmp
sub
scas
mov
pop
push
fidivrl
out
out
cwtl
or
xchg
lods
mov
inc
mov
test
mov
and
jmp
test
mov
jbe
enter
mov
jmp
xor
dec
fcompl
fldcw
and
mov
movb
dec
pop
xchg
notb
adc
push
sbb
out
pop
ss
sbb
ljmp
sbb
add
lds
push
lods
inc
and
mov
or
cld
sbb
movsl
pop
xor
outsl
fsubl
lods
xor
jl
xor
mov
xlat
lret
push
jmp
jecxz
imul
aas
jge
pop
mov
pop
or
lret
movsl
mov
sub
cmp
push
jl
test
pcmpgtw
hlt
and
jle
popa
imul
les
xchg
rorl
stc
and
jo
int3
xor
jno
aad
jae
push
leave
xchg
cli
cmp
xor
xchg
cwtl
leave
inc
fdivr
repnz
xor
add
sbb
mov
nop
jbe
aaa
xor
xor
xchg
inc
push
mov
xchg
ficomps
push
adc
pop
std
adc
pop
inc
sbb
xor
mov
pushf
adc
lret
ret
repz
inc
mov
dec
push
dec
mov
xchg
test
push
jmp
jmp
cmp
lds
andw
int3
lock
push
and
push
mov
call
adc
jae
fisttps
out
inc
fbstp
push
scas
jp
mov
xor
xchg
xor
jmp
loop
ret
sub
into
es
jle
jno,pt
dec
mov
fimuls
sti
cld
hlt
push
pop
dec
mov
hlt
jp
iret
mov
in
or
test
mov
sub
ficomps
jbe
insl
add
dec
push
out
loope
mov
sarl
icebp
xchg
fildll
into
add
xchg
jbe
cmp
int3
pop
shr
sub
shl
or
stos
rcl
jb
test
mov
mov
pop
push
push
adc
and
jg
sbb
jns
xor
je
sbb
test
in
sar
enter
add
pop
ret
daa
cmp
xlat
cmp
mov
lcall
enter
or
jle
jle
cwtl
fldcw
mov
mov
jo
movsl
and
insl
stos
xor
adc
xor
dec
fst
add
push
loope
xchg
mov
jmp
adc
add
and
and
aam
inc
adcl
in
mov
fadds
out
inc
dec
cmpsb
nop
inc
in
outsl
mov
add
dec
add
dec
dec
push
and
fwait
int
mov
loopne
jge
mov
mov
dec
cld
push
xchg
bound
mov
fwait
adc
cs
mov
jle
ja
je
sub
mov
in
lds
popl
cmp
sub
dec
outsl
mov
xchg
and
pusha
popf
mov
testl
pop
sbbl
add
cwtl
push
adc
movsl
xor
xorl
out
jne
inc
cltd
imul
cmp
dec
sub
xor
mov
or
push
std
cld
lds
sub
sub
pushl
xor
or
sbb
push
rcrl
call
dec
dec
jae
mov
rorl
push
sub
psllq
fcompl
jmp
aaa
icebp
lock
cmpb
xchg
popa
cmp
int
lahf
sbb
push
test
sbb
jb
int3
test
scas
ret
cltd
mov
in
movsl
mov
hlt
inc
rorl
inc
stos
xchg
daa
mov
mov
ret
in
push
xor
pop
movsb
imul
mov
int3
pop
or
push
mov
cmc
fdivrs
sbb
inc
std
adc
in
push
mov
sbb
hlt
lret
dec
in
cltd
jne
pusha
clc
shll
lea
push
and
data16
cmp
pop
cli
loope
sti
xchg
fdivrs
xor
stos
jns
dec
js
mov
inc
fistpl
imulb
sub
fidivrs
aas
inc
mov
lret
mov
add
into
test
sbb
pop
add
inc
ret
arpl
or
push
inc
icebp
faddl
outsb
test
jl
and
int
stos
jno
inc
mov
mov
mov
jno
push
xchg
adc
jnp
aam
fisubl
stos
repz
push
cmp
sar
pop
xchg
stos
aam
mov
shll
cs
in
pop
stc
push
lds
push
or
inc
cmpsb
pusha
pop
xor
lret
nop
or
ljmp
outsb
lods
mov
test
push
clts
lock
leave
pop
leave
jg
pop
mov
and
shlb
cli
scas
push
xchg
sub
xchg
lods
jge
jmp
sbb
fnstsw
in
sbb
cwtl
sub
rol
je
push
fmuls
sub
cmpl
cmp
jmp
jmp
imul
adc
pop
or
call
lock
shll
adc
ljmp
pushf
or
or
loop
mov
pop
adc
cmp
iret
cltd
push
push
xor
fwait
bnd
dec
shlb
arpl
push
mov
xlat
xchg
pop
jne
pop
rolb
xlat
xchg
sbb
add
rclb
push
jb
mov
addr16
cmpsl
sub
ds
mov
ror
mov
sahf
or
in
or
fstpl
test
jno
out
sbb
adcl
push
lcall
xchg
mov
sbb
pushf
sbb
and
or
add
xchg
shlb
daa
sbb
ja
sbb
pop
pop
xor
sbb
test
jae
xchg
xchg
scas
int
test
jmp
mov
xlat
inc
inc
filds
ret
jl
pop
fs
lock
cmp
sbb
loop
dec
xchg
stc
test
mov
inc
data16
addr16
shlb
shrl
aad
mov
mov
js
stc
or
scas
rcrl
xchg
inc
pop
jnp
jne
inc
cmp
inc
imul
and
fisttps
jbe
mov
fmull
dec
and
mov
mov
dec
in
lea
cmp
and
pop
aam
adc
inc
sbb
adc
or
lret
aam
inc
aam
arpl
test
push
xchg
inc
xor
in
inc
mov
push
xchg
or
in
lods
lock
push
cwtl
mov
mov
bound
push
add
fdivrl
dec
lcall
lret
ret
addr16
mov
jmp
cmp
fdivr
mov
dec
icebp
test
cmp
sahf
test
push
mov
push
sub
movsb
in
fidivl
sbb
xorb
add
pop
mov
xchg
sahf
shll
fcomps
xchg
and
dec
sti
out
and
test
gs
lods
rcrb
fstl
or
sbb
insl
jnp
push
dec
cmp
push
aad
stos
lods
cltd
jg
stos
fbld
inc
add
fcomps
push
int3
sti
mov
pop
fcmovnb
arpl
dec
loop
jb
lcall
jb
jecxz
mov
imul
shll
cli
cmpl
aam
int3
lock
out
ret
cli
cmp
lret
out
mov
push
loope
xor
jo
sub
sbb
divb
cwtl
mov
cltd
adc
push
cmc
pusha
and
js
inc
cld
or
push
aas
gs
jle
ss
popf
aam
movb
out
shrb
cmp
cmpsl
lret
xchg
add
sti
es
jg
cli
clc
pop
mov
cmc
pop
xchg
xor
out
hlt
add
jbe
shr
mov
aas
sti
pop
lds
lcall
or
cmpsb
add
js
ret
out
and
in
jae
decl
es
mov
pusha
out
mov
or
and
fdivrp
gs
outsl
or
pop
imull
jne
inc
incl
add
xchg
loope
movsb
lds
sub
fcmovnu
leave
scas
add
and
outsb
xor
jbe
sub
inc
jmp
mov
punpckldq
ja
or
int
fwait
jnp
mov
push
mov
adc
mov
loopne
xchg
sbb
test
mov
cli
xor
shrl
ds
lret
in
and
add
inc
pop
mov
mov
test
shlb
popa
arpl
fiaddl
add
mov
cmp
inc
fcomi
jnp
in
dec
repnz
cli
push
lds
dec
cmc
pusha
mov
adc
in
std
lahf
or
cmc
mov
dec
pop
ret
fadds
jle
push
inc
mov
jno
push
imul
push
mov
rcrl
cs
rcrl
imul
fldenv
into
lahf
mov
loopne
fsubs
jmp
push
cmpsl
es
sub
dec
in
jge
loopne
mov
sar
pop
push
jbe
xchg
inc
sbb
mov
sub
rolb
lods
xchg
stos
jae
mov
testb
sub
outsb
inc
pop
ret
sub
xor
xchg
outsl
cmp
fdivr
adc
pop
cmpsb
mov
loope
outsb
shlb
rorl
lret
push
rol
mov
ret
movsl
push
pop
mov
mov
xor
mov
mov
sbb
inc
mov
push
stos
test
hlt
pop
push
out
push
mov
sahf
int3
push
or
xor
adc
les
jne
mov
sub
or
xchg
dec
and
push
mov
sub
sbb
test
in
pop
imul
mov
int
mov
ds
lahf
or
xchg
cmp
or
jmp
xor
int3
popf
mov
push
sbb
inc
jmp
jle
and
pop
sbb
mov
cltd
jle
arpl
mov
fidivs
faddl
sub
xchg
pop
negl
add
fnstenv
xchg
js
in
imul
pop
sub
into
inc
add
fs
rclb
mov
dec
test
mov
dec
pop
rcrb
out
lock
xor
jmp
cmpsl
loope
loop
or
ret
test
je
leave
fs
outsb
popf
rcrl
and
dec
adc
imull
lods
or
add
cmp
add
add
mov
clc
das
scas
inc
repz
addb
mov
jbe
and
stos
jmp
dec
xor
jno,pn
add
mov
adc
popa
cmpsl
adc
adc
dec
in
sub
lahf
push
sbb
or
pop
mov
xchg
adc
xor
push
aas
jne
dec
add
adc
and
cmp
out
sbb
mov
mov
rclb
iret
das
mov
shrb
in
sub
mov
mov
into
sbb
and
out
dec
lahf
test
test
xrelease
add
mov
push
out
loope
xchg
mov
roll
aas
arpl
add
jb
stos
sbb
call
pop
jne
or
inc
dec
dec
insb
jge
jl
loopne
movb
mov
inc
lret
jno
cld
cmovl
push
or
mov
pop
subb
aaa
mov
pop
dec
sbb
pop
imul
iret
lods
shrb
lds
pop
fsubrs
inc
punpckhdq
sbb
shll
add
add
sti
test
in
xor
mov
push
jo
mov
or
into
xorb
xchg
sub
outsl
lcall
sbb
js
into
add
mov
in
ss
or
lods
lods
enter
push
stos
in
loop
xchg
inc
pop
inc
cs
sahf
aas
cmp
mov
or
outsl
adc
xor
jbe
jge
lret
ret
in
mov
xchg
sbb
mov
and
pop
or
mov
int
shrl
push
cmp
fdivrs
mov
andb
les
xchg
adc
ljmp
cmp
pop
xor
sub
xchg
pop
out
mov
fwait
inc
mov
adc
cmp
repz
fidivrs
or
dec
nop
xorb
aas
mov
nop
gs
adc
out
push
shll
loopne
ret
mov
and
dec
mov
negb
mov
mov
cmp
das
xchg
or
icebp
lahf
pop
mov
pop
iret
in
dec
sbb
in
add
or
int
push
jb
pop
enter
pusha
mov
mov
jp
jb
xor
add
cmpsl
push
shr
mov
adc
repz
inc
xorb
or
cmp
adc
xor
ljmp
add
test
add
xchg
push
cmp
mov
es
xchg
xor
lods
add
dec
pop
mov
xchg
cwtl
stc
mov
jb
cmc
arpl
out
out
add
pop
test
cltd
out
xchg
dec
xor
dec
arpl
in
add
loope
pop
mov
xchg
test
in
inc
cmp
rcll
add
lods
push
out
xchg
xchg
push
clc
rorl
arpl
lahf
or
imul
xor
jge
sbb
push
rcr
xchg
sahf
jnp
fs
fnstsw
dec
sbb
insb
test
lahf
and
xor
mov
lcall
xchg
jecxz
mov
jl
and
scas
jb
mov
fisttps
sti
sub
inc
int
mov
test
imul
in
sbb
xchg
jnp
dec
add
iret
mov
out
hlt
push
mov
sub
sub
inc
or
jmp
call
es
xchg
aam
lahf
inc
add
xor
pusha
nop
in
mov
cld
jle
sub
stc
mov
push
jnp
jge
dec
mov
xor
mov
pop
stos
pop
xor
std
mov
rcll
and
or
lret
xchg
or
xchg
jb
and
cld
popl
mov
aaa
xorl
push
arpl
jns
into
push
fs
xchg
mov
cwtl
or
aas
scas
in
decb
inc
cmc
mov
sbb
sub
xchg
fildll
dec
leave
arpl
xor
cmc
cwtl
add
cld
lods
add
xchg
push
clc
mov
adc
cltd
lahf
lahf
scas
cwtl
icebp
cs
jne
sub
cmp
or
fsubrs
inc
shrl
ja
outsl
jg
cmp
mul
lcall
out
out
shl
std
cmpb
lcall
es
jle
or
jmp
mov
mov
xor
mov
mov
adc
lret
es
cmp
rcrl
scas
sub
xchg
mov
fiaddl
mov
jge
inc
inc
lock
insl
pusha
push
mov
xchg
pop
cmc
fsubrl
push
enter
loop
lahf
clc
add
or
add
jp
pop
push
push
std
cld
mov
mov
sbb
lock
jne
mov
imulb
adc
in
inc
popa
push
jae
popa
cmp
popa
ss
test
jge
jl
adc
loop
xor
cmp
dec
adc
aas
dec
jbe
push
jl
cmp
mov
fisubs
lods
sbb
test
dec
jp
mov
xlat
jecxz
pop
mov
mov
mov
sub
jnp
and
lcall
repnz
xor
jmp
cld
sarl
or
xchg
dec
imul
in
dec
pop
ret
pop
pop
sbb
loopne
cli
add
repz
sbb
les
pop
push
push
rcrl
xadd
out
popa
call
pop
cmp
mov
jge
das
inc
in
sub
or
inc
sarb
cmp
cmp
sbb
or
jp
and
cwtl
adc
adc
test
inc
rclb
and
int3
and
xor
pop
je
xor
mov
inc
or
aad
pop
xchg
mov
add
mov
add
pop
leave
mov
repz
ret
das
push
lea
insl
mov
lret
loope
sahf
xchg
scas
mov
push
sub
cmpsl
pop
aas
pop
les
dec
sub
nop
call
std
data16
xchg
jno
mov
mov
mov
enter
filds
sbb
sti
xchg
pop
call
enter
movsb
inc
inc
lock
cmp
pop
cmpsb
movb
rcr
xor
fsubrp
or
pop
lods
inc
and
inc
add
adc
add
mov
jb
aam
xchg
xchg
test
cmp
fs
aad
imul
adc
add
jne
add
dec
enter
jne
rcrl
outsl
push
dec
lock
or
repz
pop
sahf
adc
fstpl
xchg
jp
outsb
sarb
jmp
inc
push
or
lds
test
adc
ret
push
mov
jecxz
hlt
sub
lahf
lock
popf
stc
cmp
dec
xchg
push
repnz
push
mov
data16
jle
adc
xor
stos
push
inc
call
xor
aaa
or
stc
jg,pn
adc
dec
out
inc
sub
adc
add
hlt
jmp
cmp
cmpsw
lcall
or
lea
lret
incl
into
or
mov
add
test
pop
or
cmp
sbb
shlb
adc
mov
movswl
adc
sub
lea
std
cltd
rcll
inc
push
mov
movhps
mov
bnd
or
repnz
push
dec
fs
push
adc
jle
inc
push
xchg
pop
repnz
daa
inc
roll
mov
aas
xchg
lock
sub
bound
sub
or
xchg
int
in
fidivs
cmpsl
mov
in
js
ret
push
movsl
pushf
sti
arpl
imul
push
icebp
jb
lret
out
daa
in
aam
enter
test
popf
and
mov
pop
fisubs
sbb
xchg
sub
cld
mov
cmp
lea
or
sbbb
xchg
cmp
adc
movsl
cmp
divb
sub
xchg
daa
jl
sub
std
xor
dec
in
pop
mov
mov
cmp
mov
into
sbb
pop
mov
insl
in
test
xor
imul
je
fdivrp
in
pop
push
mov
int3
rol
and
hlt
out
test
xchg
jns
sbb
movsl
lea
jecxz
and
push
cmp
sub
xor
in
push
pop
push
dec
inc
fcmovne
mov
sbb
lahf
shlb
push
dec
lock
call
dec
popa
dec
arpl
pop
pop
jo
xor
cld
xchg
sbb
lods
xchg
add
lock
js
sub
scas
cltd
imul
inc
jae
mov
xchg
or
adc
jge
push
sti
fistl
xor
sbb
and
dec
push
lret
lock
popf
aam
sub
call
insb
sbb
ss
push
in
popf
popf
mov
in
xor
out
dec
lret
pop
pop
xchg
mov
icebp
inc
loop
dec
cmp
std
nop
mov
dec
das
dec
push
pop
mov
or
int
sub
test
hlt
js
stc
lcall
pop
aam
jmp
cmp
aaa
shll
call
and
sub
push
js
bound
cltd
lret
mov
sbb
push
clc
mov
mov
js
mov
pop
mov
fdiv
fcom
scas
sahf
sbb
inc
mov
inc
aas
sarb
or
inc
pushf
jno
cltd
pop
mov
nop
pop
mov
popf
and
std
xchg
sbb
insb
stc
fsubrs
adc
sub
mov
pushf
ret
stos
mov
sub
in
cvtps2pd
mov
cmp
and
jo
sbb
add
push
xor
int3
pop
push
ss
divb
xchg
in
or
fnsave
dec
iret
pop
data16
rcrl
ljmp
inc
inc
out
sarb
out
dec
xor
flds
lcall
scas
mov
pop
push
adcl
pop
mov
mov
and
ss
inc
jae
mov
out
xlat
cwtl
mov
fsub
ds
mov
xchg
pop
ffreep
fcoms
sbb
scas
mov
xchg
outsl
push
in
in
imul
xchg
inc
push
add
ret
jo
mov
and
pop
popa
push
arpl
idivb
and
aad
push
out
bound
cmpsl
cmp
and
cmp
mov
push
adc
ja
cld
fldenv
rorl
mov
test
imul
pop
roll
mov
movsl
push
pop
xchg
cmp
or
imul
mov
jge
pop
cli
mov
xchg
lret
cmp
cmp
mov
stos
and
repz
dec
pop
js
pop
int
pop
sti
add
sub
jg
mov
ret
mov
jle
stc
arpl
mov
mov
mov
xchg
sub
fisttpl
lcall
mov
pushf
lea
pop
xor
inc
je
div
inc
enter
scas
pop
adc
ss
stc
rcrl
imul
jbe
jmp
sub
push
aaa
shlb
ja
jne
mov
dec
sub
mov
inc
lret
pop
aam
int3
aam
sahf
cmp
lret
js
out
mov
lds
mov
sub
stos
test
test
cwtl
sbb
insl
sub
jl
mov
imul
mov
or
aas
jle
xchg
movsl
xchg
fdivl
sub
fldl
add
leave
lret
and
fcomi
adc
pop
bnd
into
repnz
mov
imul
jge
cmp
xchg
pushf
cmc
dec
and
mov
test
cmc
lock
lret
int
movb
imul
mov
cmp
out
pop
and
or
dec
or
add
pop
test
cmpsb
pop
mov
test
lods
ljmp
incl
xchg
aas
fistpll
aad
mov
mov
pop
and
popf
sbb
or
jno
push
xchg
test
lret
mov
inc
lds
xchg
add
pop
jl
cli
mov
lods
cmp
dec
aas
mov
push
sysexit
inc
out
lods
sub
add
push
mov
aad
jmp
xorl
dec
xor
not
lahf
cmp
fildl
cmp
push
jnp
xchg
test
imul
sub
sub
fwait
xlat
pushf
xchg
mov
mov
adc
mov
and
flds
adc
jp
sub
xor
jge
mov
ret
scas
jo
xor
or
into
pop
imul
mov
jne
daa
sub
add
mov
jne
xchg
xchg
popa
rorl
ror
les
and
jg
ss
ss
jb
mov
jb
lret
inc
test
sub
int3
mov
nop
fcoml
cli
mov
add
out
mov
cli
mov
sbb
je
push
imul
ss
mov
xchg
mov
pop
ficomps
xchg
sub
sarl
push
mov
inc
and
mov
mov
flds
std
dec
dec
fsubrl
or
in
clc
xchg
adcl
fmuls
xchg
scas
scas
or
xchg
sbb
xor
aad
insb
cld
dec
test
fildl
mov
mov
cmp
test
sub
push
jns
in
addl
push
leave
add
sub
xchg
enter
cmp
pop
xor
subb
pop
jge
xor
enter
scas
push
lea
add
push
ret
ss
push
or
sub
mov
lret
jnp
imul
xchg
mov
and
repnz
push
sbb
fmul
cltd
xor
mov
sub
insl
addb
outsl
pop
or
mov
call
and
mov
mov
rcll
mov
lea
fcomip
push
push
add
loop
xchg
inc
movsb
leave
arpl
mov
stc
xor
movsb
mov
sbb
pop
ret
jns
imul
jae
cmp
ret
lock
xor
fldt
aas
dec
add
cmp
movsl
lods
push
cltd
cmp
pop
aad
sub
jmp
loop
stos
sbb
iret
cld
jne
mov
pop
stos
jg
fisttpl
mov
jbe
adc
mov
imul
pusha
add
imul
ds
push
mov
popf
repz
inc
daa
jns
sub
lret
cltd
fdivs
shrb
push
out
test
out
cmp
hlt
xchg
repz
cs
lock
mov
shrb
dec
hlt
call
jnp
into
fistps
in
xchg
or
rcrl
popl
inc
push
pop
inc
mov
xor
mov
lods
daa
jb
daa
fisttpll
mov
jl
int
xchg
jns
mov
cmp
aam
mov
mov
aam
daa
lcall
cmp
nop
add
test
aas
cmp
iret
addr16
xchg
jge
push
sub
orl
into
push
pop
cmp
clc
test
push
push
fimuls
fstpl
sub
or
movsl
pusha
cmc
push
xor
in
sub
lods
popf
inc
mulb
outsb
adc
imul
sbb
pusha
push
popa
ljmp
sub
fwait
ret
push
imul
mov
std
stos
dec
loop,pn
xchg
sbb
fdiv
jle
push
jns
bound
dec
mov
fldl
aam
and
cvtps2pd
xchg
sub
dec
repz
jle
jecxz
add
ret
fwait
testb
call
mov
lar
lods
shrl
out
and
js
test
xchg
pop
out
sti
push
test
cmp
lds
sahf
frstor
and
ss
cltd
xchg
xor
mov
sti
stc
lock
lcall
sub
and
or
rcrl
cwtl
push
sub
cmp
mov
addr16
push
jne
cld
sbb
ret
push
int
ds
sub
add
out
insl
das
rclb
test
push
ffreep
mov
inc
jle
dec
mov
or
in
je
adc
mov
jns
lock
or
fs
mov
outsb
adc
adc
or
sti
stos
dec
lret
cmpsl
sahf
fwait
pop
into
int
aam
lods
scas
push
les
inc
pop
mov
fldenv
jne
mov
hlt
mov
mov
inc
call
movsb
push
pop
lret
mov
sbb
and
pop
push
movb
add
inc
jmp
pop
icebp
cmc
cwtl
xchg
xchg
fnsave
jbe
fsubl
sbb
dec
leave
add
data16
jmp
arpl
pop
adc
outsl
mov
xor
xchg
cs
sysenter
or
aas
aad
jecxz
fs
xlat
push
mov
add
lahf
adc
sbb
decb
and
popa
jge
mov
push
ror
mov
cwtl
pusha
pop
pop
cmc
call
out
mov
mov
jnp
shrb
dec
xchg
out
add
mov
mov
lds
mov
test
fcompl
push
int3
sub
sbbl
inc
jne
sub
xchg
jp
data16
movsb
xchg
movsb
subl
dec
lret
repz
hlt
mov
mov
out
add
or
sub
xchg
in
dec
cmp
or
or
mov
mov
cwtl
test
fnsave
mov
pop
filds
jno
jle
repnz
adc
sbb
xchg
jno
mov
inc
or
xlat
insl
cmc
dec
cmpsb
push
in
dec
sbb
jmp
cmpsb
jb
ljmp
insl
jmp
aam
cmc
dec
pushf
adc
jecxz
in
cld
adc
in
dec
and
sahf
jb
movsb
es
add
pop
mov
jge
and
sbb
fadd
subl
fwait
dec
mov
inc
sbb
xchg
cmpsb
out
or
jo
inc
aaa
dec
push
pop
cwtl
cmp
ret
lret
jnp
inc
int3
sbb
cld
fsubs
das
leave
push
jle
add
imul
mov
std
cwtl
cwtl
xchg
inc
clc
push
dec
inc
call
add
push
mov
test
lahf
cmp
mov
xchg
les
sbb
test
movsb
mov
arpl
pop
in
enter
jp
daa
pop
lret
dec
cs
out
cmp
pusha
dec
arpl
mov
mov
add
rolb
dec
inc
mov
mov
ss
sub
mov
rcrl
stc
xlat
hlt
sub
mov
xchg
insb
mov
dec
adc
test
mov
dec
fldl
xor
std
cmp
aaa
popa
fsub
cli
xchg
mov
push
stos
fisubl
sub
test
xchg
cmp
ror
cld
mov
stos
xchg
fcmovb
or
pop
push
mov
mov
cmp
dec
jne
jle,pn
xor
jmp
jle
scas
mov
inc
test
rclb
mov
cmp
xor
lret
inc
sbb
xchg
lods
loopne
bound
push
insb
sbb
insl
mov
dec
roll
fmuls
mov
adc
outsl
out
pop
mov
pop
dec
dec
sbbl
ljmp
dec
bound
stos
xor
xor
mov
or
mov
push
dec
cmp
dec
and
aas
xor
and
mov
mov
call
and
and
mov
aaa
push
push
out
loope
cmp
cmp
mov
xlat
insl
mov
add
sub
xor
mov
sbb
mov
lret
ljmp
shrl
xlat
inc
bound
sub
xchg
pop
and
js
cld
hlt
mov
lods
mov
popf
dec
xor
pusha
fstpl
and
cmp
add
aaa
or
out
or
cwtl
int
inc
xchg
test
xchg
out
mov
aam
lods
xchg
cmpsl
sub
stc
aas
cmc
xchg
lret
sub
pusha
dec
sub
lea
jne
leave
jne
xor
in
leave
inc
xchg
adc
mov
pop
outsl
notb
lea
jmp
dec
jo
fcoms
add
mov
repz
bound
int
gs
test
out
movsb
mov
roll
outsl
mov
inc
xchg
sti
and
mov
cld
jg
negl
mov
pop
mov
test
in
bound
push
mov
push
in
adc
inc
fs
stc
jecxz
pop
xlat
popa
and
mov
dec
outsl
ror
or
cmp
negl
mov
xlat
sbb
push
ja
inc
or
call
into
sub
fadds
mov
xchg
or
mov
sbb
icebp
push
lock
popa
movsl
das
mov
fistl
lcall
and
push
daa
mov
adc
xor
sbb
in
in
loop
xorb
std
push
test
ljmp
lcall
punpcklbw
clts
or
xchg
call
jg
test
imul
lods
xchg
push
inc
aas
sub
adc
dec
or
js
hlt
cmpl
mov
jae
out
test
jl
or
dec
xchg
mov
std
in
repnz
sbb
les
pop
gs
pop
lahf
add
in
scas
sbbb
lods
mov
pop
add
xchg
dec
xchg
leave
stos
cmp
pop
cmc
iret
pop
enter
not
js
mov
xlat
popf
subl
adc
pop
inc
or
mov
fstpt
rclb
jp
addr16
les
mov
mov
nop
imul
and
fs
mov
push
jno
in
sub
pusha
cmc
nop
push
xchg
xchg
roll
mov
mov
stos
subb
cs
aaa
sbb
adc
sarb
jo
mov
xor
jmp
pusha
sbb
loop
aaa
mov
cli
gs
inc
cmp
mov
pop
js
notb
insl
mov
pop
iret
mov
into
mov
adc
aas
or
icebp
sbb
and
aad
or
std
xlat
ficomps
push
adc
jmp
xor
add
sarb
bound
jmp
cld
movsb
add
dec
psraw
xchg
pop
fnstsw
mov
mov
mov
das
adc
aas
fcomps
lcall
inc
enter
in
cmp
pop
sub
xchg
sub
jnp
xor
or
jge
out
jl
je
into
inc
inc
es
imul
mov
mov
fstpl
add
and
or
and
cmpsb
adcl
adc
out
lcall
add
xchg
lahf
mov
xor
push
sbbl
xchg
mov
es
xor
out
inc
dec
mov
imul
loopne
ss
mov
or
ljmp
or
push
cmp
mov
divl
and
mov
fcom
mov
mov
shrl
push
add
pusha
lods
fldenv
lods
cmp
fnsave
mov
jne
inc
adc
push
fisubrs
out
dec
add
mov
jmp
and
jle
hlt
sub
pop
inc
xor
dec
push
add
pop
cmpsb
xor
push
push
inc
sbb
pop
adc
popf
ljmp
dec
testl
cld
test
pop
rcrl
adc
imul
lock
xorb
and
xlat
mov
clc
or
or
stos
and
push
mov
pop
xchg
inc
andb
bnd
lret
popa
inc
jmp
lret
add
cmp
test
pusha
sub
add
jne
cmp
orl
jge
mov
out
andl
fisubrs
push
popa
cmp
add
out
dec
jae
push
std
data16
mov
pop
sti
pop
movsb
inc
popa
mov
popa
cs
sbb
fisttps
imul
mov
imul
jo
stc
add
int3
andl
mov
dec
add
mov
lods
shlb
jno
jle
pusha
daa
pop
cmp
mov
je
sbb
js
scas
jmp
lret
cmp
and
mov
adcb
out
xor
sbb
jns
jb
test
js
fstpl
lea
outsl
adc
bound
push
sbb
mov
cmpl
cld
rolb
pop
push
cmp
insb
fwait
imul
xchg
lock
movb
es
les
stos
mov
ret
sub
shll
icebp
and
add
jae
adc
scas
xorl
rclb
mov
scas
movsl
daa
add
inc
push
int3
or
add
es
test
scas
pushf
cld
adc
add
nop
push
scas
test
inc
push
mov
mov
add
push
sahf
and
fisttpll
retw
dec
push
xchg
cltd
outsb
test
mov
clc
pushf
sub
hlt
dec
push
inc
leave
mov
dec
push
mov
cltd
in
jl
addr16
or
aad
jno
mov
sbb
add
lock
ja
rorb
jo
or
fcompl
or
cmpsl
jmp
sti
ja
in
and
sub
enter
jecxz
dec
xchg
mov
daa
dec
cmp
or
popf
popf
stc
outsl
out
xchg
fsubl
fbstp
or
mov
xorl
push
pop
ficomps
loope
enter
sbb
jle
je
insb
outsl
xchg
pop
ss
ret
mov
dec
xchg
or
pop
fsubrl
pop
clc
cmp
pop
fistpl
xchg
adc
cmp
push
mov
gs
ljmp
and
andl
andb
mov
add
in
or
and
aas
push
call
lcall
push
fcmovnb
and
in
dec
aam
sahf
stc
sbbl
mov
inc
in
pop
lcall
imul
mov
test
xchg
sub
dec
mov
repnz
stc
and
scas
jge
lds
loop
lods
lods
push
push
xor
iret
xor
fdivrs
push
or
add
sub
cmp
and
mov
sahf
lods
sarb
je
push
push
sbb
and
stos
adc
mov
inc
outsb
push
ljmp
sub
ja
xchg
sbb
xchg
adc
or
lods
pop
lods
xor
jl
ret
nop
fdivrs
inc
addr16
notl
jp
aam
ljmp
jns
ret
sub
jnp
mov
jl
lcall
nop
sahf
sbb
xchg
popf
addr16
aas
sbb
push
lds
add
jp
or
std
adcl
mov
movsl
adc
cmc
ffree
dec
clc
or
xchg
mov
sbb
push
fwait
nop
xchg
sub
xor
mov
add
das
jmp
push
pusha
testb
pop
imul
test
mov
rorb
jae
ljmp
xorb
add
sbb
outsb
mov
xchg
les
outsb
popa
cmp
cld
xchg
lods
les
cltd
movsb
loopne
outsw
lods
cmp
das
jecxz
dec
pop
sarl
loop
adc
nopl
sahf
jp
outsb
jae
pop
xor
push
and
mov
xor
mov
mov
js
cmpsl
adc
push
dec
xchg
jmp
add
cmpsl
pop
mov
cmp
insl
push
xchg
mov
xor
ss
rol
ja
add
pop
shr
rcr
adc
mov
mov
xchg
push
inc
in
dec
push
xchg
jo
pop
xchg
push
fistl
lcall
fstp
sub
mov
rep
xchg
adc
push
sahf
cmp
jp
ja
insb
adc
sub
mov
or
inc
pop
adc
testb
sahf
dec
xchg
jo
mov
lds
add
lock
push
loope
daa
std
sbb
arpl
mov
loope
xchg
subl
test
mov
xor
pop
shrb
popa
adc
leave
mov
xor
cli
push
call
mov
jnp
and
out
arpl
je
fdivs
jg
pop
ljmp
push
or
pusha
mov
out
cltd
scas
or
cmpsb
icebp
push
adc
push
cs
sbb
inc
cmpsb
dec
inc
xchg
dec
and
or
icebp
cmc
fwait
addb
xor
push
loopne
in
enter
cmp
xor
xor
inc
and
leave
sub
pop
mov
loope
jl
adc
sub
pushf
push
call
pop
push
ljmp
jo
or
xlat
mov
sub
jbe
scas
popa
jmp
jle
jno
dec
jnp
mov
inc
cmp
faddl
ret
or
fchs
push
mov
mov
outsl
mov
pop
aad
jecxz
mov
test
out
ljmp
inc
or
xchg
es
fsubs
aad
push
orl
push
jmp
movsb
xor
xchg
rcrl
mov
aaa
test
pop
pop
dec
and
pop
lea
js
in
xchg
repnz
dec
fcmovne
dec
sbb
pop
push
jge
push
inc
mov
sahf
repnz
rcll
test
cmp
addr16
push
shll
das
add
cmc
dec
and
or
push
inc
stc
inc
xchg
mov
pusha
adc
out
pop
mov
push
or
insb
ljmp
mov
mov
jo
pop
cltd
inc
xor
push
mov
mov
int3
cmp
or
lods
fisubrs
push
ficoms
outsl
lea
pop
and
enter
iret
fs
mov
mov
call
xor
sbb
stos
call
jge
nop
das
cmp
adc
or
daa
in
outsl
lds
test
push
mov
je
rorb
pop
cmp
sbb
scas
fiaddl
fnsave
pop
add
add
sub
cmp
sbb
popf
cmc
mov
test
xlat
stc
ret
repnz
insb
jbe
out
xlat
jbe
xlat
cmpsb
pushf
ss
shr
xchg
sub
xor
rcll
sub
icebp
jno
bound
push
jnp
jnp
daa
jecxz
push
rcll
or
arpl
stos
jmp
mov
inc
mov
mov
mov
dec
in
add
nop
pop
xchg
cld
sbb
notb
add
sub
aaa
test
movsl
in
loope
push
test
arpl
and
fsubp
adc
inc
loope
shl
xchg
rclb
mov
inc
pop
out
dec
pop
mov
fcompl
ljmp
or
sub
lret
pop
jmp
mov
mov
push
cmp
pop
mov
aam
je
sub
jnp
sbb
pop
stos
pop
pop
mov
jo
jl
mov
pop
fcomps
pop
adc
lahf
test
pop
dec
lret
cmp
mov
dec
sub
fildll
dec
push
xlat
and
inc
dec
adc
xor
dec
enter
sahf
rcll
push
cmp
push
aaa
enter
mov
shll
movsb
push
lcall
and
cmp
dec
cltd
jge
pop
lahf
add
mov
mov
iret
mov
lods
in
ljmp
sbb
idivb
cmovno
cvttps2pi
jae
add
adc
or
sbb
cmp
xor
add
or
add
sarb
mov
lock
loop
jns
enter
lahf
push
and
dec
fnstsw
mov
dec
pop
and
das
mov
je
loopne
sub
int3
sbb
mov
movsl
pop
mov
add
mov
xchg
outsb
dec
inc
cmpsl
mov
or
pop
and
inc
cmp
dec
ret
mov
cmp
or
xor
arpl
movsl
arpl
jp
mov
popa
pop
inc
add
mov
adc
icebp
inc
jae
das
or
rolb
sbb
rcll
sub
mov
in
mov
jne
dec
or
js
arpl
dec
aaa
and
fists
inc
add
shll
aaa
movsb
vpaddq
pushl
setno
aaa
das
jno
pop
sub
xchg
sub
addr16
jl
int3
xchg
js
loopne
test
fnstsw
gs
pop
shrl
xchg
ja
lea
orl
ficoms
outsb
jmp
dec
stc
xor
popf
jp
jecxz
jecxz
pop
or
sub
pop
sahf
enter
scas
ffree
scas
in
lahf
lds
shlb
mov
out
mov
ljmp
inc
outsb
je
dec
sub
mov
pop
push
aam
sub
jae
fdiv
repz
loope
insl
mov
pop
jmp
mov
mov
jae
pusha
inc
xor
test
sbbl
jae
in
sahf
jge
sbb
jo
lahf
sti
sbb
aaa
push
and
out
jne
sub
fbld
mov
add
paddq
cmpsb
dec
mov
mov
jg
mov
mulb
jo
jl
pushl
addl
mov
dec
cs
imul
ljmp
out
mov
sub
sub
cltd
mov
sbb
or
shll
popf
mov
xor
sbb
in
pop
js
popa
xchg
jbe
cmp
push
outsb
or
mov
inc
gs
and
rcll
cltd
sbb
mov
push
or
xor
inc
add
xor
das
lcall
fdivrs
push
xchg
das
lods
hlt
xchg
or
fldt
adc
popf
jge
jmp
and
push
cs
enter
mov
inc
fwait
roll
cmp
popa
jge
cmp
arpl
lcall
mov
test
mov
push
xlat
jbe
fstl
dec
pop
loopne
xor
push
stos
std
adc
fwait
mov
jo
mov
jnp
push
ss
xorb
shlb
lcallw
xchg
leave
mov
stos
mov
xor
xor
jg
sarb
push
cld
pop
mov
pop
xchg
ss
mov
mov
hlt
xor
push
pop
cmc
out
movsb
adc
jno
cmp
jae
icebp
mov
ret
jge
pushf
inc
movsb
jl
sub
fnsave
cmc
inc
pop
mov
imul
out
jne
pop
jns
jnp
rol
js
enter
mov
pop
fdivrl
jge
dec
jne
cmp
cmp
clc
push
push
int
mov
mov
ljmp
or
xor
in
xor
ljmp
lock
inc
sarb
jno
imul
jg
subb
rorl
mov
cwtl
or
mov
mov
jns
sbb
mov
pop
mov
sub
cwtl
mov
mov
lahf
push
out
lret
dec
sub
cmpsl
lods
mov
or
das
mov
dec
mov
cmpsb
mov
popf
xor
loop
inc
inc
in
jmp
jns
scas
jmp
loope
in
jnp
cld
xchg
pop
stc
cs
incb
jo
xlat
push
push
insb
imul
shll
loop
xor
dec
xchg
adc
data16
fs
push
std
mov
in
in
das
mov
test
mov
ds
push
lods
in
cmp
test
data16
sbb
push
out
xor
ret
sbb
mov
repnz
mov
push
sub
and
pop
cs
mov
inc
push
fdivl
push
pop
pop
sub
push
sbbb
or
stc
pop
sbb
aas
repnz
push
jb
xor
sbb
jge
daa
data16
sub
movl
jmp
jmp
dec
push
cmp
inc
mov
xorb
sahf
ret
ret
pop
bnd
push
fwait
sub
or
in
xor
in
jbe
out
cmp
pop
bound
int
das
popa
in
icebp
lahf
enter
xlat
out
xchg
xor
sub
and
pusha
mov
or
dec
pop
lods
ret
fisubs
imulb
mov
pop
aam
loopne
sbb
xor
pop
stos
dec
push
pushf
xchg
insb
cld
ret
lret
adc
sbb
mov
sbb
push
insl
ljmp
fidivrl
mov
jo
sub
nop
cmp
lahf
scas
and
es
rep
xor
pop
lahf
es
lahf
mov
sarl
mov
pop
xchg
cld
pop
pop
out
jbe
stc
testl
popf
pop
add
cltd
lret
inc
loope
jo
xchg
scas
iret
push
fcoml
jae
cmpsl
aad
cmp
adc
adc
subb
jmp
add
cmp
or
xlat
jbe
add
fsubr
aaa
push
test
lea
stos
jp
pop
daa
xor
and
push
xor
add
push
mov
inc
inc
add
jnp
jl
mov
in
filds
int3
sti
jmp
out
jbe
mov
inc
roll
pusha
mov
shrb
ja
insb
lret
mov
mov
mov
ja
cmp
xor
test
sbb
dec
sub
add
xchg
cmp
and
loope
pandn
out
lods
in
fistpll
dec
jl
fdivrs
jl
jecxz
mov
mov
jnp
hlt
repz
and
inc
enterw
in
enter
inc
divl
push
sub
dec
lea
pop
popa
mov
scas
inc
mov
adc
inc
pop
inc
cmpsb
pop
outsl
sbbl
insb
and
sti
pop
mov
xor
xchg
outsl
sbb
jo
push
xchg
test
inc
inc
adc
push
add
sbb
add
push
xor
in
mov
xor
insb
push
pop
push
jle
aas
push
popf
jb
adc
adc
xchg
lret
xchg
push
dec
shrd
mov
fptan
sahf
aas
aad
cmp
push
hlt
xchg
push
or
sbb
aaa
mov
sbb
xchg
addr16
inc
mov
mov
push
mov
pop
lods
addr16
ret
data16
push
shll
mov
inc
mov
xor
shrl
sub
cmp
outsl
mov
lea
cs
sbbl
pop
dec
in
push
pop
inc
push
pop
and
push
mov
inc
mov
mov
in
movsb
xor
aad
adc
fnsave
std
into
js
mov
pop
mov
shrl
enter
stc
fs
pop
incb
hlt
xor
test
inc
sub
push
sbb
or
loope
movsl
xor
out
dec
mov
pusha
loop
lds
push
sub
push
jae
xchg
xor
cmp
scas
fstpl
mull
dec
jge
pop
cmpsl
and
mov
call
mov
test
xor
lods
mov
lret
push
dec
ficoml
sbb
inc
push
mov
cmp
test
mov
or
mov
lock
jg
mov
push
ret
addl
sub
rorl
sub
fidivl
xor
ljmp
xchg
jge
xor
sub
sbb
das
scas
lcall
xchg
lret
stc
jne
push
mov
movsl
pop
scas
mov
stc
adc
js
mov
xchg
outsb
filds
out
out
xchg
sbb
gs
xchg
sbb
and
jb
loopne
push
loope
jge
adc
lret
loop
xchg
in
inc
cmp
pop
pop
stos
adc
fistpll
mov
lods
sbbb
mov
mov
mov
les
sub
int3
sahf
scas
lods
jp
jbe
ret
sbb
test
fmulp
mov
dec
add
into
cmc
or
xchg
xchg
pop
std
ds
sbb
sarl
fsubrl
add
jno
int3
pop
mov
mov
xchg
and
mov
xor
add
test
sub
xchg
mov
inc
sub
jge
add
lods
mov
fwait
sbb
aaa
jns
lea
fnstsw
push
mov
subl
ds
mov
xchg
pop
lret
call
and
and
fstps
mov
ds
add
adc
clc
pushf
cmpsb
sbb
ja
stos
je
mov
and
and
jns
ljmp
les
lahf
jl
push
adc
cmp
test
sbb
push
mov
push
push
pop
imul
mov
cld
mov
das
pop
mov
pop
dec
out
sbb
mov
xchg
or
dec
mov
rorl
jp
mov
push
test
dec
ljmp
dec
push
xchg
jno
add
mov
dec
mov
jp
inc
fnstcw
mov
push
mov
stc
cmp
imul
or
mov
sbb
xchg
jge
shl
add
push
jmp
sub
xchg
sbb
test
mov
mov
pop
dec
das
sub
in
or
js
mov
movsb
pop
sbb
pushw
aaa
cmp
dec
inc
and
xchg
mov
mov
adc
movsl
mov
test
sub
sub
jle
fs
add
push
shrl
and
dec
mov
dec
push
mov
pop
pop
lret
cmp
fsubrl
dec
mov
out
lret
cmpsb
add
mov
clc
add
ljmp
push
rol
ja
sbb
aad
inc
pop
aas
psubw
mov
mov
and
jle
inc
cmp
mov
cmp
pop
lods
clc
gs
push
xchg
sbb
icebp
jp
shr
aas
push
js
mov
xorl
mov
dec
icebp
repz
leave
push
jno
and
bound
clc
sbb
mov
js
ljmp
or
and
jbe
jge
int
cmpsb
movsl
arpl
xchg
pop
ret
mov
add
in
jb
jnp
in
xchg
aam
cmpsl
or
mov
out
test
ds
mov
push
mov
xor
xlat
jbe
cmpsb
mov
fld
adc
ret
mov
in
inc
std
pusha
out
or
inc
mov
mov
cld
ret
arpl
scas
test
sarb
and
adc
cmpb
xchg
add
mov
jnp
mov
out
pop
sbb
imul
adc
test
push
dec
mov
out
mov
es
xchg
sbb
arpl
add
mov
adcb
inc
xchg
andl
out
sarb
roll
out
inc
vmread
jae
xlat
pop
dec
dec
arpl
xchg
push
fwait
inc
adc
fcoml
lret
outsb
es
jno
inc
rorb
jl
or
adc
lock
int3
mov
pushf
mov
repz
mov
inc
loop
cmpsl
out
sahf
sbb
js
xor
xchg
pinsrw
or
lds
jbe
jmp
ret
lahf
data16
mov
mov
push
adc
popf
mov
inc
cltd
in
xchg
lds
movl
insb
inc
add
push
push
in
and
xchg
icebp
sti
je
and
xchg
pushf
sbb
mov
mov
push
sbb
add
mov
jle
push
scas
icebp
sub
call
sahf
or
cmp
xchg
add
mov
adc
pop
ret
cmp
dec
pushf
xorl
cli
add
in
xchg
xor
test
jg
movsb
mov
orb
mov
mov
push
inc
push
cmp
mov
imul
gs
call
mov
cs
jno
xchg
mov
inc
mov
icebp
jmp
xor
loope
cmp
push
in
xor
faddl
lahf
dec
imul
jmp
repz
inc
inc
fisubrl
xchg
or
push
sti
pop
push
addb
push
inc
pop
mov
cmp
mov
dec
rorb
les
and
dec
or
mov
sahf
adc
pop
jae
inc
cltd
mov
in
lods
out
jae
adc
sarb
data16
js
cli
jo
mov
inc
xchg
loopne
dec
daa
hlt
nop
sbbl
repnz
loop
popa
fidivrl
cmp
roll
sub
fistl
pusha
pop
mov
push
mov
fwait
lods
xor
aas
sbb
ret
ja
jl
xor
push
push
insl
and
testl
push
cmp
pusha
pop
cmpl
sbbb
and
movsb
aad
loop
jmp
sub
rcrl
sub
mov
mov
xor
in
cmpb
movsb
pop
push
sbb
jmp
test
xchg
sub
or
adc
or
sub
loopne
aam
mov
sbb
ja
adc
das
jmp
mulb
imul
mov
stos
mov
bnd
sub
mov
lret
ret
and
lret
mov
xchg
ja
sti
adc
addb
mov
mov
lea
pop
jns
push
sub
mov
xchg
cs
xor
je
push
out
outsb
pop
bound
data16
decb
test
scas
out
fsubrs
jle
adc
int
movb
ror
movsl
rcrl
sbb
insb
xchg
mov
sub
mov
fwait
sub
inc
and
push
push
dec
das
into
out
je
fcoml
cmpsl
lgdtl
push
shll
sub
jae
and
xchg
pop
and
dec
mov
push
in
repnz
jns
stos
mov
lds
dec
loop
mov
jo
add
mov
jle
pop
fwait
scas
push
add
movsb
add
mov
lea
add
stc
and
rorl
mov
stos
mov
in
mov
outsb
dec
push
xchg
inc
push
fisttpl
in
sbb
xor
xor
xor
mov
or
fmulp
add
pmuludq
enter
mov
ret
dec
push
popa
xchg
idiv
fsubrl
aad
inc
loopne
dec
mov
rclb
rolb
ffreep
push
mov
fnsave
loope
test
nop
or
subb
inc
xchg
outsl
sub
mov
rcrb
mov
in
push
mov
push
hlt
flds
xor
mov
lcall
xor
lcall
adc
adc
xor
or
imul
fwait
cmp
mov
shl
or
inc
lahf
adc
jle
inc
repz
clc
lcall
clc
push
cmp
imul
in
out
xchg
int
daa
insl
cmpsb
cmp
pop
dec
out
jns
popa
and
cmp
movsl
es
push
sar
outsb
fcomip
ja
push
add
sbb
pop
insl
rcrb
out
stos
add
in
adc
std
jg
cmpsb
dec
pop
pop
gs
std
xchg
and
jle
fidivl
lods
xor
fwait
fs
insl
lret
or
and
aaa
push
lock
mov
jnp
cmpl
bound
bnd
sbb
test
push
pop
jl
sub
btr
xchg
jb
xor
repz
or
cmpsl
insl
in
cltd
test
lock
mov
pop
pop
mov
pop
xchg
arpl
mov
push
pop
push
inc
mov
lock
jmp
push
out
stos
or
sub
and
sbb
les
push
stos
cmpsl
mov
scas
and
mov
mov
add
fistpl
popa
push
in
and
mov
inc
pop
and
sahf
imulb
push
and
js
test
or
mov
adc
xchg
repz
push
aad
xorb
or
les
inc
mov
and
lcall
dec
mov
clc
or
add
inc
xlat
mov
clc
lock
mov
cmpsl
pop
dec
ljmp
bound
js
inc
mov
movsl
xor
in
subl
xchg
imul
in
cltd
mov
inc
or
frstor
mov
jns
sbb
or
popf
jb
cmp
fcos
lcall
into
repnz
mov
out
ret
push
and
sar
pop
dec
sahf
inc
rorb
xor
and
gs
inc
mov
outsl
lret
mov
push
aad
dec
das
jecxz
sbb
and
lea
stc
int3
cmp
and
movsb
out
mov
popf
rclb
lock
mov
sbb
testb
clc
push
aaa
and
mov
movsl
mov
lcall
jg
jbe
cwtl
pop
dec
inc
or
lret
imul
xchg
ljmp
cmp
out
divl
mov
add
out
into
sbb
data16
out
insb
pop
xor
daa
jns
mov
andb
lret
pop
xchg
lds
aaa
adc
xor
xchg
and
ret
mov
jno
int3
mov
jle
stos
cmpsb
fsubr
cli
xchg
add
inc
xchg
add
sbb
idivb
mov
movsl
loope
mov
pop
arpl
or
mov
aaa
pop
push
andl
fistl
adc
adcb
incl
sti
fnstsw
and
fs
imul
mov
jbe
ljmp
lock
sub
scas
and
in
xchg
out
mov
push
jle
stos
and
dec
dec
arpl
mov
inc
mov
adc
mov
mov
jns
test
insb
add
cmpsl
adcl
dec
push
aaa
jle
aad
cwtl
rclb
lret
pop
or
leave
fcmovnu
mov
popa
pop
xchg
sahf
push
cli
imul
push
int3
ss
into
movsl
mov
adc
nop
inc
mov
out
cltd
jo
in
xchg
aaa
dec
out
sar
adc
sbb
inc
xchg
lods
push
aam
test
cmp
dec
sar
test
gs
mov
xor
push
add
dec
inc
mov
cmpsb
lret
add
add
push
pop
movsl
mov
pushf
pop
int3
mov
ret
fst
mov
sti
ret
mov
mov
cmp
jbe
imul
mov
dec
insb
mov
add
xor
xor
mov
inc
fisubl
sarb
lcall
rorl
and
xor
dec
jbe,pn
je
sbb
inc
inc
sub
cmpsb
loopne
inc
cmp
jne
ss
inc
push
pop
push
sbb
mov
mov
dec
cmp
repnz
mov
sbb
jecxz
push
pop
es
add
inc
ret
dec
xchg
repz
lods
lock
popa
lret
pop
and
sub
ljmp
xor
test
sbb
inc
jge
pop
lcall
xchg
in
cmp
out
popa
and
in
push
mov
test
adcl
sbb
xlat
mov
mov
mov
jae
push
inc
fnstcw
into
pusha
lock
fstpt
movsb
push
loop
inc
imulb
in
test
cmpsb
outsb
test
cmpsb
xor
loopne
cmc
arpl
xchg
std
sarl
mov
sbb
in
lcall
ljmp
sub
add
sub
mov
or
daa
sub
mov
mov
insb
cmc
jge
mov
push
std
test
mov
dec
out
jne
push
cmpsl
fcomi
mul
sub
lock
dec
pop
xchg
push
ja
mov
sbb
xor
fwait
or
lock
pop
xchg
add
xchg
repz
inc
fidivrs
xor
add
dec
jecxz
pusha
test
jb
jbe
in
sub
pop
pop
or
and
xchg
add
or
daa
jbe
push
pop
bound
or
pop
jne
inc
fdivl
stos
cmp
int
test
inc
lret
jnp
inc
cmc
ret
sarl
cld
xor
push
in
inc
cs
testl
imul
pop
pop
ja
jne
sub
xchg
or
mov
or
inc
in
nop
or
js
outsl
or
in
iret
mov
sub
and
pusha
mov
adcl
xor
jecxz
jle
mov
and
gs
and
inc
jl
arpl
mov
mov
imul
mov
and
cmp
inc
mov
xchg
fidivrl
aaa
xor
jg
ror
ds
xchg
jmp
std
sub
mov
mov
in
sub
or
decb
idivl
loope
fistps
or
xchg
pop
faddl
lods
cmp
mov
cli
cmpsb
pusha
lret
sbbb
cmp
push
movsl
push
mov
mov
ss
and
sbb
push
push
pop
aaa
shlb
out
jmp
adc
das
pop
rcrl
lcall
cmp
pop
inc
outsb
xlat
pop
shl
sub
jno
mov
pushl
dec
orb
jne
fwait
xlat
jmp
xor
icebp
inc
sub
xchg
enter
outsl
and
stos
pop
adc
push
out
inc
or
sahf
push
mov
in
jmp
xor
cld
cmc
aad
cmp
inc
or
subb
mov
or
insl
jl
addr16
mov
popa
clc
xor
mov
mov
je
in
push
xchg
arpl
and
cld
popf
mov
xor
cmp
push
clc
add
sub
aad
ja
cmpsl
aad
xchg
push
stos
inc
popa
imul
push
fiaddl
loop
jmp
movsb
in
bound
pop
xor
cmpsl
or
xlat
out
xchg
pop
or
movsb
ficompl
in
sbb
pushw
daa
aas
in
inc
mov
jo
fidivl
mov
or
mov
add
mov
push
mov
adc
inc
pop
mov
and
lcall
cmp
mov
sbb
cli
cmp
dec
sar
ds
and
pop
sbb
in
js
pop
pop
mov
movl
sbb
push
jnp
inc
sub
jp
xor
mov
xchg
mov
pusha
adc
mov
mov
stos
cmp
call
fcoms
je
add
mov
xor
adc
fidivl
inc
push
mov
out
cs
push
cmp
jl
or
xchg
neg
iret
mov
mov
cmpsb
jb
mov
icebp
fidivrl
jb
push
jl
mov
std
inc
sbb
fildl
pop
and
sub
sub
push
inc
in
jecxz
orl
repz
mov
or
cs
add
xchg
ret
std
fidivrs
jp
pusha
jl
scas
sbb
add
inc
push
addl
fists
icebp
xchg
cmp
adcb
lret
dec
clc
lock
icebp
jg
leave
jb
and
dec
ljmp
ss
fstpt
std
gs
xchg
pop
jne
adc
and
or
xor
xchg
add
enter
pop
mov
push
cltd
add
js
lods
mov
pop
mov
cld
outsl
jge
hlt
sbb
rcl
cmp
imulb
mov
lret
cli
and
xchg
push
stos
cmpsb
pop
insb
aaa
inc
stc
pop
sahf
les
mov
sti
pop
test
fidivs
lahf
xchg
test
insb
leave
mov
or
stos
sbb
and
inc
push
push
stos
mov
jmp
jne
dec
xchg
mov
push
mov
inc
sub
in
out
mov
xchg
mov
push
shrb
mov
pop
out
mov
push
and
fnstcw
testl
fucomip
mov
out
sbb
jae
sub
lcall
divl
mov
push
sahf
sbb
aam
lock
push
sti
fs
and
movsb
xchg
loopne
jmp
dec
jl
insb
xor
aaa
pop
inc
pop
sbb
cmc
das
push
jmp
mov
mov
push
xchg
lret
adc
addl
enter
aas
nop
xchg
clc
inc
sbb
jnp
jae
test
inc
xchg
mov
mov
ljmp
das
sbbl
push
mov
push
mov
int3
xchg
cltd
push
rcrb
cmp
mov
pop
arpl
inc
popf
mov
loop
sub
mov
and
cmp
je
jnp
icebp
in
lret
add
call
or
xchg
in
loopne
inc
jg
jno
push
hlt
ret
and
jno
sbb
pop
lret
xchg
push
stc
roll
jge
fldt
add
dec
pop
mov
or
cmpsb
rcll
jge
sub
add
mov
jb
mov
fidivs
ret
push
jno
int3
dec
xchg
or
xchg
cmpsl
mov
xchg
mov
adc
dec
jg
clc
mov
shr
jnp
jmp
jecxz
sbb
push
shrb
stc
push
xchg
adc
mov
fiadds
gs
enter
and
mov
adc
sub
sbb
insl
push
dec
xchg
cwtl
sarl
movsb
adc
or
push
push
mov
mov
dec
orb
xchg
lods
dec
push
or
enter
jo
aam
pop
and
shrl
and
jno
filds
mov
imul
and
fisubrl
cmpsb
movsl
or
inc
add
adc
jno
and
adc
int3
bound
sub
adc
mov
shll
sub
insb
fidivrs
jbe
in
pop
into
es
dec
mov
adc
test
mov
push
je
sub
fucomi
aas
add
inc
push
adcl
mov
scas
jb
inc
mov
and
push
mov
movsl
cli
push
mov
mov
shrl
push
dec
inc
es
sti
mov
rolb
push
leave
jns
les
pop
shlb
fistpl
out
pop
lret
dec
add
movb
jns
das
inc
pop
jo
cmp
test
inc
push
mov
cmpl
dec
inc
sub
mov
sbb
mov
in
sub
mov
cwtl
jne
cwtl
and
loopne
popf
mov
stos
push
add
lahf
xor
popf
push
lret
in
xchg
test
xor
pop
mov
js
inc
adc
add
in
out
lret
fldcw
loope
push
popf
dec
scas
je
mov
bound
mov
add
cmp
lret
or
pop
inc
cmp
sbbl
mov
fcmovnb
pop
cli
aad
add
fs
mov
loopne
push
or
ret
fsubs
movsl
fstp
dec
fldenv
std
out
int
int3
mov
fs
shlb
inc
subb
movsb
push
dec
mov
inc
mov
das
pop
dec
out
cmp
mov
sub
bound
dec
aad
dec
movsl
inc
in
xor
daa
pop
jl
pop
je
mov
add
mov
mov
add
sbb
fldenv
cs
cmp
jo
cmp
in
mov
push
inc
hlt
mov
test
or
scas
push
popa
outsb
fwait
dec
mov
pushf
mov
out
mov
push
xchg
push
loopne
xchg
or
pop
push
jle
ljmp
lea
lret
push
aas
add
into
mov
lods
rol
inc
pop
pop
cwtl
sub
adc
mov
in
mov
fisttpll
xchg
adc
movsl
loopne
mov
and
pop
jmp
shrb
mov
xchg
leave
mov
popf
mov
jecxz
in
push
push
outsb
std
mov
mov
test
fimull
dec
not
andl
dec
xor
add
dec
and
mov
cwtl
xchg
scas
cmp
and
dec
repnz
fcoml
popa
xchg
decl
imul
lock
cmpsb
les
movsl
dec
lret
daa
add
add
in
cltd
ror
and
ljmp
pop
scas
les
pop
lcall
pop
inc
push
shlb
pop
push
shrl
cmp
mov
repz
fdivrl
xchg
scas
fimuls
jp
fisubl
mov
shlb
cli
test
scas
push
mov
fs
jmp
cmp
in
mov
cmc
sbb
cli
fdivs
add
xchg
mov
loopne
fisttpll
sub
popa
cwtl
ret
mov
sub
mov
push
mov
in
int
out
addb
fbstp
nop
mulb
fistpll
fistpl
lods
or
mov
mov
push
fs
pop
cli
ss
shl
dec
stc
pop
das
lcall
xchg
adcb
cli
mov
outsb
mov
cmp
ret
xchg
add
jbe
xchg
ljmp
hlt
add
sub
adc
outsb
mov
push
or
fs
jmp
outsb
lods
fildll
stos
clc
cs
leave
mov
cmpsb
sub
ss
cmp
mov
les
jmp
daa
pop
sbb
in
ret
es
insb
divb
mov
fdivrl
loop
insl
fldt
scas
inc
push
adc
repz
xchg
xor
push
roll
mov
leave
xchg
insb
fdivrs
loop
outsl
push
fisttpl
xor
mull
pop
sbb
mov
and
xchg
jle
jmp
xchg
dec
mov
cwtl
sub
stos
int3
xor
in
push
out
jecxz
es
jl
leave
and
bound
lret
mov
dec
add
push
bound
subb
fistps
cli
mulb
idivl
movsl
movsl
hlt
mov
jno
fmull
mov
ss
cmp
int
shlb
mov
jbe
xor
lret
cmpsl
inc
clc
ja
pop
dec
xchg
rclb
int
icebp
mov
ret
xchg
mov
out
loop
hlt
je
pop
sar
mov
fs
sub
cs
lds
fidivl
daa
mov
dec
cmc
mull
inc
inc
push
loopne
hlt
push
leave
lret
jne
fdivr
movsb
pusha
push
repnz
push
cmpsl
ljmp
sbb
xchg
mov
aad
sahf
xlat
inc
cmpsl
addr16
popa
mov
cmovge
stos
outsb
push
or
ja
or
sub
pop
inc
dec
test
mulb
lret
insb
aas
int
sub
push
out
and
jno
out
jne
mov
sbb
es
mov
xor
aaa
push
mov
sub
mov
in
aas
and
stc
pusha
insb
jp
add
sbb
aaa
mov
sub
inc
stos
add
inc
das
call
sahf
add
mov
pop
push
xchg
mov
cld
xor
mov
mov
into
inc
jg
inc
cs
push
push
ljmp
fcmovb
xchg
mov
repnz
bound
test
xchg
xlat
imul
lods
clc
xchg
push
inc
mov
lods
cli
mov
mov
rcrl
jo
data16
in
fimuls
in
mov
stos
fucomip
lret
addl
std
pusha
cs
sti
mov
leave
add
push
aaa
inc
call
ret
mov
cmp
mov
ds
push
sbb
fwait
push
xor
or
mov
inc
mov
jae
xchg
orl
icebp
cld
lcall
in
jo
xchg
jno
mov
cs
mov
add
int3
in
insb
cwtl
clc
insl
daa
lret
inc
loop
pusha
push
popa
pop
dec
lods
xor
lahf
adc
pop
out
dec
in
mov
jne
xor
loop
daa
int
jmp
adc
inc
sub
xchg
mov
ss
pop
ss
cwtl
mov
jo
xor
sbb
pusha
stc
rcll
xor
pop
push
outsb
mov
in
repnz
cmpsb
popf
ss
push
adc
add
rorb
fcompl
cmpl
clc
inc
adc
ret
rclb
je
jmp
xchg
ret
cli
dec
add
insl
mov
movsb
xchg
leave
jns
lds
pop
inc
push
bound
int3
cmp
xor
shl
loop
push
call
xlat
jne
andb
mov
jle
sbb
clc
cltd
dec
xchg
dec
test
imul
or
xor
xchg
cmp
cmp
push
xor
push
jbe
rcll
fs
cli
vpmacsww
push
out
insb
cmc
add
xchg
push
dec
jecxz
jmp
pop
loopne
cwtl
push
shrl
les
insl
sarb
lcall
pop
subl
xorb
scas
pop
nop
mov
sbb
js
cld
jl
mul
and
mov
loopne
mov
xchg
sti
dec
xchg
mov
imul
jecxz
pop
cmpsl
pop
fists
ljmp
push
sub
mov
lcall
push
call
popf
push
imulb
sbb
adc
fimull
sbb
and
mov
mov
mov
iret
aam
stos
lcall
in
int
dec
leave
jp
mov
xor
jle
roll
out
jle
in
les
mov
xchg
lock
sahf
cmp
push
lret
or
xchg
adc
sbb
fwait
ss
cmp
in
sbb
sbb
adc
loop
out
mov
std
pop
and
sub
jle
sbb
imulb
jne
outsl
repnz
outsb
add
cmp
outsb
mull
pop
xchg
das
lret
and
mov
push
xchg
out
mov
mov
test
lea
or
or
fistpll
push
mov
adc
test
int3
and
in
push
pop
jmp
push
inc
cmp
and
jb
push
std
int
inc
or
daa
dec
fs
xchg
pop
cwtl
jo
cmp
inc
in
adc
loop
jnp
outsl
ljmp
fldcw
add
dec
loope
ja
lahf
inc
jmp
sub
mov
jns
nop
mov
lock
xor
adc
in
or
std
adc
fisubs
aaa
sub
jl
jno
xchg
mov
jp
hlt
stos
mov
fs
lock
scas
test
inc
or
xchg
cwtl
jmp
adc
mov
xor
imul
je
add
repnz
jge
pop
rcll
inc
sub
jae
sub
push
lds
imul
dec
xor
adc
sbb
shll
shrb
inc
mov
push
mov
out
mov
shll
jae
movsb
mov
xor
daa
ljmp
push
add
outsb
or
inc
dec
stos
lea
sbb
cmovno
jmp
or
xchg
rorb
aam
lock
lret
clc
inc
pop
call
scas
insl
mov
ss
test
cli
sti
inc
stos
xor
outsb
sbb
ds
orl
xor
test
sbb
sub
push
jl
xchg
pop
cmc
movsb
adc
push
lcall
les
dec
daa
data16
mov
and
loop
call
xchg
cli
and
fbld
jno
mov
stos
sbbl
xor
ret
in
stc
ret
pop
xchg
lret
xor
mov
scas
or
sub
stos
inc
dec
in
mov
pop
sbb
aas
sti
mov
fdivs
pushl
adc
cmc
outsl
jb
cmpsl
cld
nop
cli
pop
mov
push
add
xlat
mov
xor
push
sbb
xor
daa
fsubs
bound
push
xchg
mov
mul
ljmp
pusha
shrb
cwtl
imul
fldcw
adcb
dec
mov
sub
sti
daa
sub
mov
dec
in
push
pusha
mov
xlat
jo
add
sub
fnstenv
cmc
or
in
cmc
sub
subb
jbe
int3
jecxz
sbb
xchg
in
mull
cmpsb
movsb
addl
pop
push
mov
fstpt
gs
inc
lcall
data16
cmp
stos
andb
movb
xchg
push
push
push
mov
lcall
imulb
or
rcrb
outsl
ds
sub
lea
aas
in
inc
cmp
imulb
rclb
jecxz
sbb
scas
dec
ds
in
ja
dec
ret
rolb
icebp
shl
sub
xor
mov
jecxz
mov
movd
insl
xchg
xchg
cmpsb
mov
pop
movsb
mov
or
test
or
mov
cmp
xchg
pop
fisubrl
mov
sbb
inc
mov
ljmp
xchg
aaa
push
sbb
insb
xchg
rcrl
movaps
dec
jnp
sbb
inc
out
outsl
loopne
std
call
push
faddl
bound
sbb
leave
icebp
xchg
push
ljmp
out
cltd
std
fildll
imul
shll
xor
and
dec
cwtl
sbb
and
fnstcw
pop
lods
push
fsubr
push
pop
enter
push
pop
dec
cmc
ja
mov
jbe
popf
add
mov
rolb
pop
sbb
inc
lock
push
jne
mov
sbb
mov
adc
ret
mov
clc
or
out
js
je
or
mov
rclb
adc
mov
pop
scas
inc
pop
repz
ja
pop
fdivrs
fdivs
push
enter
push
mov
sti
movsl
cmp
pop
mov
push
adcl
xlat
sub
sti
xor
mov
into
xchg
push
fcoms
add
and
pop
movl
adc
mov
shlb
fs
nop
adc
sub
add
pushf
cmpsl
bsr
pushf
cmp
lock
pop
push
cmc
sbb
and
xchg
lock
or
addr16
pop
push
xor
jae
adc
xchg
fdecstp
pushf
push
mov
xchg
fs
fiadds
mov
cmc
push
pop
sub
xor
sbb
imul
xchg
mov
sbb
cmp
mov
fs
stos
push
add
inc
inc
jg
xchg
shll
ret
in
stos
loope
xchg
pop
shlb
stos
shr
push
stos
xchg
ss
dec
and
push
mov
int3
data16
daa
std
mov
mov
cmp
adc
mov
sti
jae
jmp
ffree
push
sub
mov
nop
jmp
mov
push
pop
sbb
sbb
enter
pop
inc
outsl
out
mov
cmp
xor
jp
fsts
ja
in
jne,pn
icebp
push
push
shrb
xlat
mov
xor
or
leave
int
add
inc
xor
and
ss
cmpsb
inc
xchg
test
jge
test
and
mov
icebp
inc
fcoms
pop
add
scas
in
push
fdecstp
imul
jmp
ss
sbb
rcrl
mov
inc
ret
and
mov
jnp
add
pushf
clc
push
int3
adc
test
fisubs
mov
push
fs
push
push
xchg
jl
inc
jnp
leave
xor
test
sbb
stos
jp
inc
sub
test
mov
fimuls
adc
in
push
mov
iret
or
or
imul
stos
adc
or
cwtl
adc
test
sub
and
ss
push
jle
xor
stc
jl
ss
push
addl
dec
aaa
mov
jnp
push
aas
sub
mov
xor
and
pop
xchg
or
push
push
or
mov
out
add
lahf
cmpsl
test
repnz
mov
cmp
add
mov
stos
repz
pop
loop
cmp
popf
es
cli
jno
push
dec
jmp
scas
shlb
icebp
cmpsl
mov
sub
jp
mov
jle
and
roll
mov
pop
pop
or
sarb
mov
dec
push
add
or
push
incb
sub
or
fwait
mov
mov
jmp
shll
cmp
xor
sub
stos
mov
addb
inc
bound
call
mov
int3
movsl
jmp
jmp
int
pop
aas
test
lahf
push
daa
push
xlat
xor
push
into
roll
aaa
or
cmpl
sbb
arpl
sbb
fildl
jg,pn
fsubs
add
sub
adc
aam
adc
jmp
mov
mov
fsubrl
pusha
pop
aad
iret
mov
arpl
xor
xchg
or
pop
out
and
sbb
inc
push
dec
sbb
xor
mov
jg
in
or
aam
adc
pushl
push
mov
sub
inc
xchg
out
xchg
addr16
bound
mov
sub
push
pop
lods
cmc
jl
test
lock
jne
cmc
mov
inc
and
xchg
push
fstpl
sbb
jns
in
xlat
dec
fmull
inc
jecxz
popf
sbb
cld
jmp
adc
fcmovbe
adc
jmp
dec
xor
and
and
dec
cmp
sbb
fmul
push
xchg
jbe
cmpsb
add
or
imul
inc
pop
cltd
fidivs
arpl
jecxz
pop
cmc
dec
in
mov
cmc
and
ret
aam
inc
test
mov
pop
jp
jecxz
cmp
sti
dec
mov
pop
icebp
in
jo
mov
adc
fcomps
fcoms
or
push
loope
add
cmp
out
in
scas
and
aaa
fidivrl
and
loop
push
pushf
enter
mov
fs
fistpll
clc
xor
sub
jp
ficoml
mov
mov
mov
xor
fistps
movsl
push
std
shrb
divb
pop
jne
push
imul
je
aad
das
and
xor
add
push
js
aad
lret
and
cmpsl
mov
xlat
add
push
xor
test
inc
popa
push
mull
call
aam
out
xchg
addr16
loop
cmpb
daa
gs
pop
rcrl
lea
xchg
mov
sub
jns
pop
pop
inc
dec
pop
jmp
imul
lahf
or
cmc
cs
pop
xor
add
add
mov
xchg
pop
addb
das
loop
xchg
shr
add
fstpt
mov
xchg
rcll
mov
pop
adc
iret
mov
inc
loop
pop
fsubrp
clc
lea
push
stos
and
mov
cltd
daa
mov
inc
push
or
sti
dec
sub
arpl
dec
jns
hlt
mov
shr
inc
push
jbe
in
iret
loopne
das
or
xchg
imul
adc
jo
inc
add
adc
mov
add
cmp
imul
loope
or
adc
dec
and
mov
pop
inc
out
leave
repz
cmpsb
push
jbe
jl
sbb
add
cs
gs
sbb
cmpps
or
scas
mov
pop
cltd
xchg
fsubrp
cmc
hlt
sbb
mov
xlat
int3
mov
inc
add
push
cwtl
fisttpl
mov
and
mov
jmp
push
push
das
movsb
sbb
loope
fwait
pop
mov
xor
mov
mov
sub
fdiv
sti
sub
repnz
inc
test
jmp
lods
dec
pusha
push
mov
in
outsb
fimuls
pop
out
sub
lods
sub
sub
ficoml
repnz
cmc
push
repz
loope
fnstenv
push
adc
mov
push
fisubrs
pop
dec
push
and
jb
xchg
pop
xlat
add
cwtl
cltd
xor
mov
loopne,pn
cmpsl
mov
clc
sti
in
mov
idivl
adc
sub
rorl
add
roll
jl
pop
jae
les
shr
test
rol
cld
fcoml
mov
or
test
xor
or
lods
lock
xor
jne
cmp
fsubs
std
adc
iret
andl
pop
xchg
cmp
sub
hlt
pop
pop
sub
sbb
es
rcll
rcr
push
adc
jbe
inc
lcall
aas
jmp
cmp
push
lret
int
arpl
add
test
pop
xchg
neg
mov
enter
mov
int3
shlb
cld
cmpsl
insl
outsl
sbb
lock
in
xchg
push
jne
xchg
push
mov
mov
cmpb
add
testb
mov
outsb
and
sbb
xchg
nop
add
jo
lret
std
out
fstpt
xchg
shr
and
fadds
pop
jns
insb
lock
sub
stos
jg
xchg
in
cwtl
inc
cmp
sbb
imul
lret
cwtl
jg
lods
xchg
mov
fdiv
sbb
sbb
bound
or
push
inc
nop
mov
push
pop
and
xchg
push
jmp
mov
stos
adc
cmc
sub
dec
incb
lods
dec
xchg
ficoms
inc
xchg
in
push
xchg
mov
sahf
sub
dec
shlb
enter
push
add
iret
adc
stos
aaa
in
aaa
jae
out
data16
dec
test
adc
scas
mov
mov
mov
inc
mov
imul
mov
mov
jl
dec
mov
and
and
mov
push
cld
ljmp
and
fiadds
lahf
push
fadd
inc
mov
cmp
push
xchg
and
jns
mov
sbb
sbb
mov
inc
mov
movsb
sbb
shrb
jl
cmp
xchg
repnz
sbb
sub
jno
xchg
mov
int
stc
jne
mov
lret
loopne
arpl
xchg
adc
int
adc
pop
pop
pop
mov
cmp
jmp
and
cmp
scas
adc
movsl
cld
test
fidivrl
ja
adc
xchg
mov
hlt
fists
in
jne
cld
cwtl
adc
loope
or
push
ljmp
mov
popf
mov
jb
pop
outsl
pop
add
popa
loopne
sub
mov
xchg
mov
or
out
and
sbb
push
push
xchg
cmp
jne
jecxz
lea
pop
daa
leave
lods
loope
jns
fimull
cmc
stos
push
jle
mov
dec
ss
sbb
or
jg
repnz
mov
ljmp
arpl
and
mov
outsl
mov
test
inc
sbb
out
jmp
add
jecxz
sbb
dec
mov
push
pop
jbe
add
mov
push
push
add
mov
xchg
and
sub
int
std
test
test
cwtl
sbb
das
mov
fdivrs
push
dec
insb
movsl
mov
fsub
dec
lahf
in
test
sub
imul
xor
lahf
jmp
dec
xchg
aad
push
lret
sar
mov
push
adc
jae
cmpl
ja
xorl
push
jne
and
mov
xor
cmp
es
aam
shlb
add
adc
sbb
lods
gs
mov
inc
outsl
sarl
insl
ljmp
pushf
in
xchg
mov
adc
hlt
fiadds
popa
mov
out
push
mov
sub
fisttpll
shlb
jbe
xor
cmpsb
roll
xchg
rclb
popa
adc
idivl
sbb
pop
fldenv
xor
js,pn
mov
gs
pusha
push
imul
loope
add
inc
icebp
add
sbb
sub
aam
xchg
idivl
xor
mov
add
shl
push
sub
cmp
enter
loop
mov
jp
fwait
shlb
imul
dec
cmpsl
push
push
cmp
inc
inc
pop
ret
pop
cmp
jmp
or
jge
jnp
mov
jns
pop
xchg
xchg
mov
shlb
out
and
cmpsl
aas
stos
or
xor
jo
pop
pop
mov
ljmp
mov
pop
adc
jnp
ds
adc
push
cmp
push
stc
shl
add
add
fsubrl
jns
enter
pop
xor
popa
cs
sub
aad
push
out
mov
loope
fwait
lcall
out
adc
cli
mov
out
dec
ljmp
dec
bound
lcall
fxch
jl
or
jmp
mov
iret
mov
pop
add
and
dec
xor
cltd
mov
shl
and
negl
cld
ret
xchg
xchg
pop
cmp
call
xor
xor
inc
xlat
sti
mov
ror
pop
int3
cmpsl
or
add
and
pop
sub
cmp
imul
xor
imul
or
lret
mov
and
or
pop
fsub
inc
out
and
mov
loopne
hlt
incb
ret
out
out
lret
and
add
js
pushf
clc
test
add
dec
leave
loopne
sub
push
jg
cltd
call
daa
push
iret
jnp
icebp
int3
cli
adc
movsl
mov
shll
and
and
mov
je
adc
test
mov
rcr
push
scas
push
gs
notl
clc
daa
xchg
mov
ljmp
and
inc
inc
mov
inc
and
lock
test
in
pop
sti
sbb
bound
loop
rcl
orb
push
jae
push
pop
inc
pop
jge
enter
ret
push
jne
test
daa
je
fs
and
test
push
jge
xchg
mov
jns
xor
arpl
sub
fistpl
shlb
test
imul
lods
pmuludq
ljmp
or
cli
cmp
stos
add
sub
les
inc
inc
loopne
jns
adc
fiadds
jo
cmp
mov
stos
arpl
mov
lock
popf
sub
push
loopne
mov
aas
inc
inc
sub
jge
pop
mov
jbe
call
fnstsw
xchg
mov
out
cwtl
iret
xor
jecxz
xor
cltd
dec
xor
push
cmp
xlat
mov
gs
dec
inc
popa
cmpsb
lcall
stos
adc
mov
xor
push
leave
sbb
adc
cmp
lock
cmp
xor
gs
loopne
imul
xchg
lahf
mov
push
jnp
jbe
ss
sbb
enter
xor
das
jmp
pop
fwait
ret
jmp
xor
nop
movsl
xchg
push
mov
and
jne
in
repz
ja
ret
sub
ljmp
xchg
inc
scas
mov
xchg
xchg
clc
repz
call
push
xlat
mov
mov
dec
cli
imul
mov
cs
movsl
add
inc
out
loop
iret
shrl
lods
mov
inc
daa
jmp
loope
push
fwait
sub
and
rolb
adc
movb
dec
outsl
out
and
sub
fucom
cmp
out
add
sbb
mov
sub
jo
mov
add
test
sti
pop
mov
fldenv
ret
out
cmp
mov
pop
fwait
adc
jbe
push
or
sub
jg
adc
ret
das
cmpsl
xor
mov
nopl
icebp
leave
sbb
sahf
out
push
sub
insl
test
xor
clc
sub
or
jp
out
add
xor
lods
mov
dec
cmp
ret
test
out
loopne
xchg
jnp
fsubp
or
push
clc
dec
adc
dec
adc
cltd
js
cmpl
outsb
movl
shll
and
dec
add
ss
aas
or
insl
mov
jge
jmp
xor
adc
mov
mov
int
inc
es
dec
mov
call
test
or
into
or
rcll
das
xchg
out
xor
dec
jmp
aam
pop
fs
in
cmpsb
inc
fcoms
inc
and
test
inc
mov
outsb
adc
lahf
push
shrb
dec
fistpl
push
cmp
dec
dec
or
imul
jae
aaa
fistps
cmp
xchg
aam
xchg
gs
clc
dec
js
jnp
call
es
pop
push
inc
rcr
cmpsl
ljmp
es
testb
les
pop
std
push
test
xchg
jl
adc
jle
push
mov
fs
xlat
and
or
xor
js
jbe
imul
sub
xor
inc
insb
addps
movsl
lods
adc
or
mov
and
adc
cmpsb
jle
in
idivb
xor
push
dec
fistl
imul
xchg
popa
xchg
xchg
imul
ljmp
push
or
fadds
mov
sti
enter
rcrb
rcl
pusha
xchg
mov
fsubrl
jmp
cmpsb
sub
sahf
xchg
mov
or
sarl
stos
rorb
sarl
push
jbe
fs
or
stc
popa
add
mov
loopne
cmpsl
lods
xorb
fldenv
shll
rorb
jecxz
pop
xchg
jbe
out
pop
ss
scas
ds
jns
mov
insl
das
pushf
mov
in
outsb
outsl
test
mov
xchg
mov
xor
lds
test
ret
stc
data16
int3
jnp
jne
test
dec
dec
add
inc
mov
push
popf
adc
dec
lret
scas
repnz
movsb
pop
jp
dec
popf
cmp
mov
pop
and
jg
ss
popa
dec
mov
sbb
lods
subl
sbb
jae
mov
outsl
xchg
fcmovnbe
xchg
xchg
lcall
xchg
ret
pop
cld
hlt
lods
in
inc
testl
xlat
in
jecxz
dec
ja
or
sbb
loop
nop
dec
cld
add
ret
fcmovbe
cmp
mov
lock
push
push
xchg
cs
orl
cmp
mov
adc
add
sbb
add
or
sbb
ss
xor
push
fistpll
iret
je
jae
lods
insl
mov
js
dec
pop
inc
sbb
jb
jno
xchg
ljmp
dec
es
inc
inc
fs
pop
lea
fmulp
inc
test
mov
or
lahf
pop
dec
lcall
cmp
push
testl
gs
or
jae
daa
aas
outsl
rclb
jae
in
mov
cmc
sbb
cmp
js
and
push
nop
repz
fadds
mov
cltd
fildl
mov
hlt
test
dec
pop
aad
cs
xor
arpl
notl
xor
mov
push
fwait
mov
add
push
cmpsb
mov
adc
pop
ss
out
xor
mov
mov
out
xor
jne
les
mov
imul
dec
das
dec
xor
ret
js
std
mov
outsb
pop
test
into
cmc
incl
fisttps
and
jae
or
test
stos
sbb
sub
lret
push
comiss
push
sub
dec
pop
fwait
sbb
fistpl
add
cmc
xchg
aam
xchg
das
outsb
ds
mov
pop
hlt
pushf
lods
xor
es
inc
add
enter
es
or
cmpsl
into
xor
inc
fistl
aas
mov
jnp
xchg
popf
dec
xor
xor
cltd
out
loop
xor
lret
add
xor
jno
mov
jae
aas
jp
int3
lahf
mov
and
sahf
jg
dec
mov
add
mov
outsl
outsl
jecxz
dec
es
rclb
gs
andl
jp
icebp
cwtl
insl
cmp
add
adc
int3
xchg
stc
cmp
mov
movsb
push
iret
aam
mov
rcrb
jae
stos
sub
mov
jge
xchg
rcr
sbbb
jge
pop
mov
push
insb
pop
imul
sarl
xor
cltd
xchg
xor
mov
adc
das
icebp
mov
es
xchg
dec
imul
cmp
rclb
int3
clc
mov
out
xchg
std
loopne
jecxz
dec
xchg
cmp
imul
xchg
enter
sub
or
idivb
ja
dec
adc
mov
sub
push
mov
jbe
xlat
mov
or
inc
push
imul
jbe
outsl
dec
inc
jne
sti
loope
push
lcall
movsl
jne
inc
popw
inc
inc
aam
in
adc
cmp
dec
add
mov
and
lods
inc
jle
pusha
ja
mov
xchg
popf
pop
adc
addr16
negb
mov
cld
shll
xchg
mov
loop
xchg
test
cmova
std
fsubrl
add
aam
in
or
xor
les
mov
mov
cmp
cmpsl
lahf
rcr
in
adc
xchg
xchg
js
xchg
sub
cltd
xchg
sti
nop
cmp
push
jo
sti
or
xor
cwtl
cwtl
pop
cmp
jne
fimull
mov
paddd
ret
sub
pop
pop
sub
cmc
in
push
cmpsb
neg
adc
shrl
push
cmpsb
cmovns
ret
push
jo
and
ret
cs
cltd
dec
push
shll
cmpsb
loop
mov
push
xor
cmp
scas
adc
push
mov
or
arpl
bnd
lret
adc
push
xlat
fwait
cmp
jp
int
ficompl
fstpl
cli
stc
fistpl
cmpsb
imul
leave
mov
fistl
xlat
mov
test
out
rorl
mov
or
movsb
cmpsb
stos
adc
fistpll
push
xchg
fistps
push
cltd
cmpsl
sbb
or
movsl
sbb
xor
out
shlb
mov
push
mov
bound
out
and
jb
push
adc
add
mov
adc
xchg
imul
cwtl
mov
fs
insb
push
mov
int
jge
dec
call
pusha
sbb
sub
pop
jp
add
das
ficomps
pop
xchg
push
xchg
clc
push
cmp
aas
scas
insb
les
shlb
repz
outsb
mov
into
mov
push
xor
fdivr
cwtl
jno
sbb
jno
pop
orb
iret
and
jbe
pushf
sbb
dec
repz
sub
mov
mov
test
push
lds
in
aad
mov
cmp
andl
dec
xor
cld
call
subl
push
sub
sahf
jne
sbb
pop
andl
mov
jo
xchg
fdiv
xlat
cmp
or
mov
inc
inc
out
push
mov
pop
mov
popf
data16
push
stos
and
clc
cmp
dec
sub
mov
sub
xchg
dec
jns
mov
jmp
in
jle
jp
mov
in
xor
sti
jp
xchg
rcl
dec
push
comiss
and
fyl2xp1
rolb
cmp
or
out
mov
aam
subl
popa
dec
lods
outsl
sbb
enter
sti
aaa
pop
fcomp
fcomip
mov
xor
jae
xchg
mov
mov
clc
andl
lret
out
fcom
loop
in
or
mov
push
popf
mov
push
push
sbb
xchg
je
or
sub
pushf
xchg
and
aas
das
xor
incb
jae
mov
dec
outsl
insl
mov
shl
or
inc
dec
mov
pop
mov
push
loope
adc
push
fwait
mov
out
mov
inc
inc
das
jl
or
sub
mov
aaa
repnz
js
cld
or
pop
or
adc
leave
stos
mov
addr16
test
mov
push
in
repz
daa
lods
and
mov
in
aam
dec
mov
jae
les
lods
ret
scas
addr16
and
jne
dec
xchg
mov
mov
inc
jle
cmpsl
iret
xor
or
push
lahf
xchg
or
xchg
xchg
mov
sahf
filds
sahf
jmp
cld
xchg
mov
popa
int
fidivs
mov
fistps
test
lea
lea
std
ljmp
push
addr16
divb
popf
xchg
fdivrs
push
and
add
lods
fisubrs
mov
ds
pop
and
rorl
iret
add
mov
xor
push
jbe
inc
push
jno
leave
bound
into
sub
out
jnp
cs
movl
mov
pmaxub
sti
and
sub
add
std
mov
repnz
jle
push
mov
outsb
outsl
js
imul
push
jne
and
stos
ret
mov
ljmp
cmp
data16
inc
daa
fbstp
xchg
dec
xchg
pop
xchg
adc
popa
sbb
ss
in
sbb
mov
pop
stos
lods
mov
xor
jne
or
xchg
insb
cmc
fbstp
mov
pop
sub
pushf
cli
sub
inc
mov
je
aas
rcl
and
andl
dec
or
adc
inc
mov
sbb
xchg
push
cmpsb
dec
and
xchg
cmp
sub
xchg
enter
aas
in
mov
daa
xchg
jge
movsb
mov
xchg
aas
outsl
xor
rorl
jo
jae
outsb
ljmp
add
pushf
or
inc
testl
popf
aad
dec
test
roll
xor
inc
push
pop
pop
adc
fbld
roll
loop
push
loope
jne
push
out
pop
pop
xlat
mov
aad
fildll
pop
cmp
cmp
fdivrs
iret
sub
shlb
insb
adc
mov
call
cmp
pushf
xor
in
insl
or
cmp
or
or
mov
jp
pop
jb
xor
mov
es
cmp
and
stos
aam
lahf
cmpsl
push
test
xchg
mov
push
push
sbb
icebp
adc
lcall
pop
mov
xor
jecxz
xchg
cltd
adc
lret
lock
loop
xor
fcmovne
adc
iret
sbbb
pop
sbb
mov
sub
or
dec
repnz
xlat
xlat
pusha
sbb
push
jb
mov
mov
push
xor
cmpsb
in
loope
test
and
arpl
pop
jo
fsub
add
or
je
adc
cmpsl
mov
lods
jb
pop
and
inc
adc
pop
sub
mov
jb
mov
or
push
ds
fldcw
jmp
adc
jno
arpl
inc
add
jecxz
dec
loop
test
sub
or
ljmp
inc
in
sbb
xchg
sub
push
mov
mov
push
ret
std
sub
sbb
pop
int3
imul
gs
jecxz
arpl
add
movsb
push
jae
roll
fwait
or
mov
test
jbe
jmp
cli
mov
mov
cmp
es
and
xchg
pushf
pop
dec
sarl
test
mov
lock
pop
mov
inc
jns
mov
jp
shl
pop
js
jae
fstpt
adc
scas
mov
or
lods
adc
adc
negb
or
dec
mov
cli
test
inc
test
repnz
mov
fcmovu
pop
fsubrs
mov
nop
cltd
mov
mov
lds
ljmp
mov
or
jae
in
lods
mov
xor
or
pop
out
popf
cmp
push
push
xor
aad
mov
mov
dec
mov
push
mov
test
fwait
adc
xor
inc
mov
xchg
xchg
jl
push
inc
push
and
push
dec
out
push
and
cmp
cmpsl
mov
sbb
call
rcrl
jne
nop
and
out
lods
jmp
cmp
call
into
and
mov
push
jnp
lock
xor
mov
in
out
std
test
lret
imul
std
sbb
xchg
clc
leave
adc
repz
in
pop
jne
xor
adc
and
das
dec
stos
rolb
subb
mov
aad
jmp
mov
out
cld
mov
pop
in
call
call
int
aaa
mov
movsb
scas
out
xor
loop
stos
and
sbb
std
and
fs
mov
jecxz
sub
adc
mulb
lret
rolb
mov
and
xor
scas
int
sti
xorb
lds
scas
out
ss
xchg
les
sti
fnstcw
sti
jmpw
sub
mov
inc
inc
into
xor
ja
stos
mov
push
arpl
pop
sub
movsl
add
jmp
sahf
push
cli
cmpsb
push
sub
xor
add
lods
pusha
mov
mov
aad
outsl
jae
out
sti
add
mov
popa
cs
sub
gs
aam
in
jg
push
sub
shrb
test
dec
fcomip
jb
icebp
iret
mul
or
sahf
mov
daa
jmp
orb
insl
cmp
add
mov
xchg
je
dec
or
push
repz
fcomi
jae
icebp
push
and
mov
sti
dec
xchg
push
mov
aad
aas
mov
jp
and
orb
daa
fst
test
push
jo
leave
jge
adc
adc
jmp
arpl
pop
jmp
sbb
gs
dec
jmp
xor
les
aad
je
xor
fimull
mov
scas
pushf
scas
adc
pushw
inc
clc
pop
movsb
aaa
lds
push
movsl
orb
clc
and
push
ret
xorl
pop
mov
stos
cmp
ret
stos
mov
jecxz
loope
jl
jmp
mov
sub
test
add
xchg
rcr
fadd
cmp
pushf
pop
push
lea
jmp
icebp
xchg
xchg
pop
mov
pop
aas
mov
call
or
dec
jns
adc
sub
or
decl
mov
push
jno
emms
popf
pop
xchg
dec
jne,pn
lcall
cli
leave
and
idivl
inc
cmp
test
pop
movsl
repz
lods
jno
fs
dec
sub
mov
stos
mov
add
lds
leave
filds
dec
in
pmaddwd
mov
inc
mov
jle
inc
lahf
popa
ljmp
sbb
adc
ja
sub
leave
shlb
test
subb
call
orl
hlt
in
mov
insl
push
push
gs
and
adcb
jno
jne
lcall
push
and
add
pop
cs
pushf
jg
cmp
es
sbb
adc
and
mov
lods
sbb
ljmp
push
movsl
or
aad
loopne
scas
popl
arpl
xchg
lock
int3
test
test
pop
jbe
add
pushf
mov
rorb
js
adc
lcall
mov
push
inc
adc
outsb
adc
sub
notb
sub
xchg
std
fcmovnb
and
pushl
imul
add
push
clc
in
mov
das
icebp
inc
jbe
sub
sub
dec
jae
xchg
cmp
mov
addb
jnp
lahf
push
dec
jno
hlt
xchg
std
rolb
scas
xor
aaa
pop
ret
insl
cmpsl
jl
cmpsb
int
idivb
dec
dec
push
testl
adcl
xor
jno
mov
sub
inc
xchg
in
fcmovne
pop
pop
mov
lods
dec
cmovno
inc
popf
jp
jmp
popf
pushf
pop
mov
les
push
adc
dec
xchg
scas
es
push
sub
loopne
mov
xor
bound
and
cmpsb
pop
jmp
mov
outsl
push
outsl
dec
xchg
inc
inc
cli
push
das
sub
push
andl
inc
cmp
setbe
sub
and
sub
jp
cmp
adc
int3
lock
inc
sub
mov
lcall
sub
sub
aad
xor
mov
cvttps2pi
pop
add
xchg
lret
and
mov
iret
push
push
pop
out
sub
ja
mov
lahf
xchg
sub
mov
call
xor
ret
add
mov
cmp
hlt
imul
push
sbb
and
gs
insb
insl
mov
leave
pop
xchg
mov
pop
imul
fcomps
addr16
push
add
pop
add
mov
push
scas
cmp
add
jg
gs
pusha
ljmp
dec
dec
aam
test
adc
mov
mov
lods
mov
ja
lds
addb
ja
pop
adc
xor
jno
pop
adc
insb
js
sub
xchg
fwait
cmp
stos
xor
insb
fistpl
cmc
sub
push
inc
notb
jg
lock
lods
mov
xor
rorb
nop
or
movsl
call
adc
jp
mov
pop
inc
push
pop
fs
and
inc
in
shrb
inc
jmp
out
pop
dec
cld
shlb
test
test
xlat
cs
add
outsl
xor
and
ja
shll
ja
inc
pushf
in
movsb
xchg
gs
out
out
jle
pop
xor
cwtl
testl
add
repz
pminub
sub
xchg
or
add
add
cwtl
sub
cmc
aad
fsubs
out
stc
and
int3
pop
cwtl
repz
xor
pop
movsb
push
xchg
jns
es
insl
out
xor
jmp
cmp
xchg
mov
jbe
movsb
shr
std
inc
sub
adc
jae
mov
insl
dec
clc
out
addr16
xor
cwtl
cmp
xchg
sahf
dec
jg
jno
dec
push
inc
and
out
xor
and
jmp
lods
cmp
nop
shlb
mov
or
dec
xchg
xchg
sbb
pushl
push
sbb
adc
inc
imul
aam
add
push
jp
jns
jne
setge
push
inc
cmp
jb
jnp
cmp
xor
pop
ljmp
mov
push
icebp
xor
push
out
sub
sbb
repz
stos
lret
mov
sub
cli
cmp
pop
or
js
int
ja
and
xchg
jmp
inc
scas
subl
sbb
jp
orb
pop
dec
data16
pop
sahf
bound
jl
fcmovu
add
dec
loopne
test
test
pop
pop
daa
imul
sub
pop
sbbb
in
pop
jns
imul
scas
dec
test
mov
jmp
dec
imul
add
sbb
cmp
xor
lods
mov
fldl
ret
push
subl
xlat
popf
sub
sub
xchg
xor
lods
mov
add
add
lods
call
push
inc
push
insb
test
imul
cltd
push
jge
daa
xchg
cmpsb
fwait
xor
add
lahf
ret
fwait
pop
xchg
cmp
and
pop
fs
mov
hlt
mov
cmp
push
xor
in
push
pop
jb
int
sub
je
dec
insb
cld
push
repnz
jne
mov
jne
adc
ljmp
pop
cwtl
mov
cmp
cmp
loope
sahf
fcomi
cli
dec
fwait
repz
fadd
adc
mov
add
clc
lahf
test
clc
hlt
mov
repz
movsl
mov
ljmp
enter
jl
push
out
or
stos
or
popa
iret
cmp
inc
inc
pop
push
jp
cli
imul
pop
fsubrp
cmpsl
inc
lea
cwtl
fistpl
sbbb
loopne
in
cmp
repz
or
sbb
inc
outsl
out
lods
jb
inc
inc
subb
xor
mov
insb
ss
sub
lods
fiaddl
out
dec
jae
cwtl
call
pop
sub
or
aaa
je
cmp
int3
ja
xchg
es
lock
mov
add
add
sub
jnp
and
mov
imul
inc
int
inc
leave
adc
adc
lds
mov
test
jge
push
push
xor
testl
inc
and
xchg
cltd
sarl
mov
daa
adc
or
xlat
outsb
xor
outsl
loop
cmp
loop
cli
push
jl
lcall
insb
pop
outsb
popf
clc
mov
fcmovu
data16
xchg
xchg
mov
cs
cmp
xchg
cs
cmc
or
stos
add
sub
jge
ljmp
loope
pop
lods
ret
add
jg
mov
rolb
mov
or
imul
sbb
push
mov
fnstenv
iret
jne
test
ret
sbb
jge
jl
adc
push
cmpsb
enter
pushf
mov
aad
mov
mov
xor
xor
sub
push
movsb
negb
push
repnz
fs
lret
out
and
mov
push
divb
lock
and
clc
mov
es
mov
aad
jnp
and
xchg
dec
popa
jl
les
imul
stos
fwait
lock
insl
outsl
ja
nop
pop
sbb
cli
ret
ret
inc
xor
add
stos
or
mov
pop
aas
in
lahf
jp
or
dec
xchg
pusha
jo
mov
imul
push
xchg
xchg
add
push
std
sbbb
mov
jns
pop
pushf
adc
insb
aam
subl
sbb
int
js
pop
cmc
and
or
das
pop
fadds
push
inc
cmpsb
mov
test
subl
out
mov
jnp
jge
into
pushf
dec
mov
stc
dec
sub
xchg
xchg
lods
jbe
and
xchg
aaa
pusha
xchg
dec
arpl
les
jmp
lret
aas
mov
adc
pop
push
add
lea
lret
sbb
cmpsl
cltd
cmp
ds
negb
jp
dec
xchg
loope
aad
cmpsl
cmp
jp
sub
sarl
imul
pusha
dec
loop
test
adc
outsl
add
xchg
jae
push
push
pop
mov
cmc
dec
mov
lahf
pop
and
jle
test
or
push
xlat
pop
fwait
jnp
jl
add
adc
repnz
or
sub
or
mov
repz
into
mov
dec
xchg
fsts
das
test
stc
lock
jle
push
pop
adc
dec
cmp
mov
test
add
or
sbb
dec
push
xchg
and
je
push
mov
aam
and
test
mov
push
push
push
or
xor
cwtl
movsl
rorb
inc
mov
iret
inc
outsb
xchg
pop
mov
jno
cmp
inc
and
cmp
sbb
mov
rcll
in
fsubs
fwait
mov
in
movups
inc
rcll
shr
aaa
aam
inc
adc
sarb
test
xchg
add
add
dec
pop
and
xchg
sub
mov
sbb
cmp
subl
in
test
icebp
pop
push
sbb
push
mov
hlt
xor
test
add
and
dec
call
push
adc
repnz
pop
xchg
and
xchg
ds
dec
decl
cli
lret
imul
sbb
lahf
enter
dec
in
cltd
aas
fnstenv
pop
shrb
jg
and
xor
mov
pop
loope
push
in
orl
jle
testb
xlat
jg
mov
rolb
es
jmp
out
fidivrl
out
sub
jno
xlat
adc
mov
cwtl
inc
push
mov
dec
fadds
cmp
mov
sbb
pop
inc
mov
int
je
repz
jecxz
cmp
das
jno
lock
jb
xchg
dec
pop
pop
mov
repnz
mov
inc
jo
popf
mov
insb
mov
cwtl
xor
cwtl
insl
or
repnz
pop
das
cmc
push
les
sub
inc
mov
xchg
aaa
lret
repz
filds
repz
adc
or
pop
sub
mov
push
icebp
das
dec
push
mov
or
fst
sub
inc
es
nop
mov
leave
add
jp
cmpl
push
sbb
sub
mov
lods
unpcklps
loop
testl
dec
push
fwait
mov
xchg
mov
out
test
aas
xchg
gs
insl
xor
dec
aas
and
fstpt
mov
pop
dec
push
jp
pop
stc
dec
mov
in
xchg
pop
jnp
mov
xorl
inc
xor
mov
sub
out
sub
pop
jp
test
jnp
add
cld
sub
shlb
std
jne,pt
and
pop
inc
scas
call
notb
inc
mov
hlt
sbb
std
imul
lcall
pop
repz
push
das
repnz
push
cwtl
nop
pusha
cld
mov
xchg
in
mov
fbstp
imul
sub
pusha
lcall
shl
mov
pop
add
add
pop
dec
roll
jo
push
adc
push
fstl
movl
gs
sbb
sub
imul
daa
dec
inc
add
dec
jno
add
adc
movsl
and
pop
push
dec
xor
jbe
mov
rorl
mov
cs
in
mov
mov
xor
mov
mov
mov
push
dec
pop
jbe
push
test
out
or
dec
sahf
cmpsl
xchg
push
test
mov
aam
jb
push
arpl
in
mov
lods
sub
sub
dec
sbb
xchg
cmp
or
sub
pop
cltd
inc
enter
adc
ja
xor
cmp
mov
pop
js
mov
cli
bnd
mov
outsb
mov
dec
fiaddl
popf
decl
xor
aas
dec
pop
cmp
sbb
sub
sbbb
add
in
movsl
out
mov
pop
insl
mov
mov
mov
adc
orb
adc
xchg
pop
out
xchg
fstpt
sbb
sbb
sub
push
push
in
aam
mov
nop
xchg
xchg
ds
je
inc
inc
jnp
jp
xchg
dec
mov
push
out
push
call
xor
test
mov
mov
jbe
xchg
push
movsb
mov
out
cli
fwait
scas
mov
push
mov
push
cmp
cld
jmp
nop
pop
out
into
ljmp
sbb
dec
shl
sbb
lret
arpl
aas
pusha
cmp
loop
jle
loop
xchg
or
sub
pop
jp
imul
aam
enter
mov
cwtl
push
cli
fs
iret
jnp
push
xchg
sub
lahf
ror
xor
xchg
add
xchg
hlt
mov
notb
mov
les
jg
mov
pop
movsl
and
rolb
or
adcb
arpl
jns
add
pop
cltd
push
sbb
iret
and
dec
pushf
out
adc
ljmp
cmp
call
xlat
js
aas
mov
pop
js
jb
jl
mov
dec
mulb
xchg
dec
ficoml
push
mov
sub
ds
sahf
fdivrl
int3
dec
loope
cmc
pop
or
and
xchg
xor
pop
leave
sarb
stos
xchg
mov
ds
shlb
stc
lret
push
or
sti
pop
scas
mov
xor
fildl
popa
loopne,pt
pushf
push
adc
push
push
std
mov
jg
dec
adc
mov
jge
pop
adc
in
or
ljmp
test
add
in
test
dec
test
in
xchg
js
adc
out
mov
mov
data16
sub
xor
cmp
stos
fstp
pop
and
shrb
addr16
arpl
cld
xchg
push
push
mov
sahf
jg
mov
jl
adc
push
xchg
cld
lods
call
sbb
ror
cmp
inc
scas
lods
ficompl
dec
js
push
mov
pop
jbe
jb
adc
out
incb
fsubrs
jns
popf
icebp
and
mov
push
xchg
fmuls
jle
sub
mov
movsl
in
push
mov
dec
mov
fldenv
aas
cld
mov
ret
cld
jnp
mov
inc
mov
fiadds
adc
dec
out
push
outsb
lock
cli
cmp
pop
inc
push
movsb
and
imull
mov
sti
sarl
jle
xchg
fdivrs
insl
jo
dec
cmp
in
popf
les
lds
fisubrs
or
jge
hlt
mov
cld
mov
lods
shl
adc
lcall
push
in
cmpsb
pop
xchg
imul
pop
xor
mov
aam
rcr
mov
pop
and
xchg
fcomps
xchg
jbe
xchg
rol
icebp
mov
xchg
mov
lcall
xor
mov
cmp
push
jmp
call
pop
xlat
mov
xor
sbb
bound
mov
sahf
test
mov
movsl
arpl
xchg
dec
ss
push
fbstp
mov
mov
adc
fiaddl
or
je
fs
gs
es
out
data16
inc
rcll
in
or
add
push
addr16
jne
aad
iret
shrl
rcll
mov
xchg
cmp
dec
sub
insb
movsl
adc
mov
sub
rorl
push
daa
lcall
adc
adc
or
adc
sbbb
std
aas
pop
insb
inc
add
dec
lds
cli
pop
cs
or
aaa
sbb
scas
pop
jmp
inc
jo
jecxz
fmull
cmc
inc
sahf
push
adc
jg
or
sbb
clc
call
sahf
add
fidivrs
test
mov
imul
mov
xchg
jne
aad
lret
loop
sbb
mov
sbb
fbstp
mov
pushf
lock
dec
leave
jg
xor
pop
mov
js
jle
mul
repz
adc
outsl
int3
mov
and
shrb
dec
jmp
mov
ljmp
dec
out
lds
xor
bnd
or
repz
dec
or
xchg
mov
test
jmp
mov
aaa
adc
push
sti
data16
call
dec
and
jne,pt
lods
add
iret
jecxz
les
test
xlat
xor
int3
mov
test
lds
fstpt
je
and
push
sub
inc
out
or
pop
xor
pushf
push
mov
insb
push
push
xor
jo
divl
mov
xchg
aad
ds
mov
inc
mov
testl
loopne
and
daa
jo
call
and
or
imul
dec
movsb
sbb
iret
mov
adc
push
cs
nop
ficoml
xchg
test
outsb
jecxz
add
push
jg
in
inc
iret
jns
xlat
data16
mov
repz
popa
mov
and
enter
scas
adc
insb
dec
xchg
pop
aam
scas
mov
push
hlt
call
mov
jle
inc
je
push
stc
cwtl
sub
and
jle
and
pop
push
inc
mov
icebp
cmp
mov
ss
cmp
cmc
cli
jl
dec
add
push
repnz
xor
lret
mov
mov
sbb
out
pop
jns
stc
lret
xchg
jae
xor
movsl
jl
pop
fs
pop
fimull
shlb
and
lahf
adc
pushf
sbb
mov
pop
data16
jmp
and
cmpsl
inc
lret
ss
xchg
call
xor
pushf
fmul
pop
mov
jecxz
mov
push
lods
mov
xchg
push
inc
dec
ljmp
pushf
popa
mov
add
lea
jno
pop
and
adc
jno
mov
dec
or
fdivrs
cltd
fisttpl
sbb
in
adc
push
cmc
jg
in
and
and
adc
mov
sbb
sti
test
dec
add
add
shlb
sub
shll
lods
subl
leave
adc
dec
iret
sub
jl
or
pusha
mov
xchg
pop
pop
or
out
add
mov
cs
xchg
cs
mov
push
hlt
mov
xchg
fs
xlat
mov
push
jne
aam
stc
repnz
cmp
mov
pop
dec
sbb
test
pop
xchg
pop
dec
sbb
outsb
xchg
js
dec
or
test
mov
pop
rcll
stc
pop
mov
mov
dec
jge
push
divb
adc
cmp
lea
test
sahf
or
add
add
pushf
rep
repz
mov
cmp
add
push
mov
adc
std
frstor
aad
rcll
into
shll
xor
dec
repz
je
movsl
mov
pop
push
mov
mov
inc
inc
pop
pop
mov
mov
ffreep
adc
enter
arpl
enter
fdivl
ret
adc
popa
pop
ss
pop
int
jge
and
dec
cmp
xor
scas
add
icebp
stc
imul
outsb
xchg
loope
xchg
jle
ljmp
and
insl
xor
cmp
pusha
mov
arpl
aam
push
ret
cmp
dec
notl
fildl
fstpl
inc
fcmovb
jl
test
call
mov
cmp
shrb
dec
popa
dec
jnp
pop
pop
inc
cltd
jo
negb
cli
push
repz
std
test
scas
clc
aad
je
inc
jnp
mov
shlb
in
cmp
xchg
dec
or
nop
ja
aam
filds
add
push
xchg
aam
mov
popa
dec
push
mov
mov
cmp
mov
xchg
mov
in
cld
inc
and
sub
icebp
sti
or
aad
jmp
or
cmc
outsb
scas
cmp
out
pop
bound
dec
jne
int3
adc
gs
dec
sahf
sub
les
jle
ret
lods
cmp
and
rorl
add
aam
adc
into
push
icebp
lret
addb
push
lcall
fisttpll
test
jge
mov
stos
push
repz
fcmovbe
shrb
cli
sahf
mov
inc
ja
jmp
mov
imul
sbb
push
stc
out
lahf
stc
push
test
jmp
pop
insl
push
and
or
and
das
mov
ror
jecxz
int3
sbb
xor
aaa
mov
leave
cmp
scas
sub
jns,pt
push
xor
fwait
jb
imul
mov
jno
cmp
mov
pop
ds
cmovno
mov
pop
cmpsl
adcb
lcall
es
adc
loop
stos
and
xor
cltd
mov
cwtl
fs
mov
sbb
xor
ds
dec
jae
mov
rorb
dec
aaa
jno
pop
ljmp
popf
sub
push
outsb
xchg
rolb
cmpsb
stc
aad
arpl
push
pop
out
les
dec
fiadds
shl
sbb
addr16
scas
in
je
gs
shrb
jp
push
lcall
fstps
pop
scas
das
jns
xor
sti
mov
enter
sub
icebp
mov
push
fadds
outsl
and
and
das
mov
cmc
adc
sub
xchg
push
shrl
js
adc
lcall
lret
pop
cs
xchg
adc
enter
push
push
jmp
pop
cmpb
jo
xor
aad
mov
cs
mov
sbb
sbb
sarb
sti
mov
push
mov
pop
and
pop
dec
jnp
das
xchg
push
aam
pushf
test
andl
dec
dec
sahf
jb
mov
add
out
sti
push
mov
mov
push
pop
ret
movl
bound
out
xlat
in
inc
mov
adc
push
mov
pushf
jecxz
xchg
pop
cmp
lea
les
pmuludq
xor
pop
imul
insl
out
mov
sahf
cmp
lea
pop
es
pop
pop
or
rcll
push
sbb
and
ja
add
dec
xlat
dec
inc
call
jno
jecxz
sbb
in
bound
test
mov
add
sub
dec
imul
ret
in
cmp
fwait
ss
cmp
pop
testb
dec
movl
int
or
dec
dec
push
out
sbb
inc
xlat
repnz
push
insl
pop
outsl
in
ret
in
lds
sahf
cmp
ffreep
dec
jecxz
mov
mov
test
mov
call
call
stos
mov
mov
dec
clc
push
mov
sub
int3
test
or
out
mov
xor
mov
mov
ss
cvtpi2ps
xchg
inc
test
into
jb
xchg
fwait
sbb
iret
xor
das
jl
xor
push
sbb
push
pop
xchg
sbbl
ja
inc
xchg
xchg
xchg
js
pusha
inc
mov
pop
not
xor
into
out
xor
or
pop
add
movsl
scas
imul
and
and
xchg
hlt
xor
xor
mov
push
insl
and
mov
mulb
and
inc
and
test
int3
call
and
sub
xor
cli
lret
mov
andl
loopne
push
shrl
cs
push
out
ljmp
test
cmc
repnz
out
idiv
in
repnz
jp
int3
loop
lock
sub
sbb
sbb
xchg
ss
pop
pop
push
mov
push
ja
out
dec
jbe
jbe
cs
in
mov
std
aaa
mov
pop
loopne
ficoms
int
push
mov
jbe
dec
xor
dec
xchg
into
sub
lret
mov
loopne
or
jo
cmp
sahf
mov
cmpsl
je
in
mov
mov
add
ds
inc
pushf
dec
push
and
xchg
scas
movsb
jae
sahf
pop
mov
sbb
mov
lahf
pop
push
xor
jnp
push
rol
scas
addl
ss
sub
ds
pop
xor
and
adc
xor
and
out
sbb
inc
xor
out
imul
adc
jmp
add
xchg
xchg
movsb
mov
xor
xor
mov
add
cmp
jb
inc
mov
idivl
adc
xor
ret
stos
cmc
dec
outsl
dec
xchg
inc
cld
or
out
outsl
mov
scas
ficompl
mov
xor
cwtl
mov
cmc
xor
ret
andb
clc
push
pushf
fldl
push
sbb
inc
mov
sbb
scas
cmovb
mov
or
sbb
aas
mov
adc
jg
mov
mov
mov
fs
xchg
dec
add
add
fsin
fwait
jo
inc
inc
add
test
les
pop
movsl
xor
cmc
mov
fadd
dec
and
jmp
repz
nop
sub
popf
movsl
xor
xor
cs
sbb
mov
cli
mov
je
lea
test
popf
lds
jge
push
aam
rclb
or
rcll
and
mov
das
jg
push
lds
jno
insb
aas
xor
jmp
xlat
aas
loop
rclb
loop
mov
aad
xor
adc
cmp
lret
add
fdivl
mov
or
lret
mov
mov
and
pop
je
xchg
sbb
sahf
xor
fld1
xor
or
fiaddl
jp
stos
xchg
ror
repnz
and
xchg
push
sub
xor
int
and
add
icebp
inc
xor
cmp
jmp
or
pop
push
add
adc
addr16
inc
sti
movsl
sub
xor
popf
jecxz
cmpsl
cmp
sub
in
add
adc
call
sbb
popa
xor
and
lcall
repnz
loopne
mov
cs
bnd
sti
xchg
lods
mov
mov
jb
dec
inc
pusha
lret
add
xchg
adc
popf
xchg
les
and
mov
mov
ret
mov
mov
cmp
or
sub
aaa
jle
in
pop
or
iret
cld
pop
push
pop
sarb
inc
add
ret
push
push
test
mov
inc
addr16
jle
in
jge
mov
repz
jb
xorl
xchg
cwtl
pop
icebp
jl
sub
cmp
popa
sbb
movsb
mov
shrl
testb
test
movsl
sbb
and
aam
subl
pop
pop
inc
fdivs
sub
leave
adc
push
dec
push
xchg
fstp
pop
dec
pop
movsl
mov
fisubs
or
icebp
stc
adc
xchg
cs
jl
mov
ljmp
mov
add
cmp
push
push
xor
out
out
cmp
mov
rcll
sub
cmc
xchg
mov
adc
xchg
fwait
push
add
jg
pop
or
int
orb
sub
jg
mov
push
js
in
ret
pop
sti
push
shl
movsb
pop
jo
mov
sahf
pop
adc
cmpsb
sbb
lahf
sahf
mov
inc
sbb
mov
add
ret
sub
aad
fldt
ds
jl
mov
das
loopne
movb
jl
insl
sbb
cmp
sti
bound
cmpb
xor
add
loop
jge
stos
jg
es
pop
xor
push
pop
pop
fstpt
xlat
pop
int
mov
ljmp
and
mov
rcl
adc
sahf
or
xor
inc
sbb
imul
insb
jne
fldt
or
jp
mov
sbb
jecxz
incb
rorl
das
sbb
jg
cmp
pop
rorl
dec
stos
ljmp
push
inc
call
add
jmp
decl
scas
inc
nop
xor
rolb
or
and
movsl
andl
mov
or
pop
in
rcll
mov
fisubrl
xchg
xorl
mov
in
sbb
hlt
adc
cmp
push
addr16
jbe
cmp
push
movsb
push
idiv
into
rolb
aad
test
bound
or
iret
sbb
sub
adc
daa
sarl
sub
loope
data16
xchg
test
xor
jl
and
inc
inc
in
out
adc
or
xor
in
repz
into
and
lock
insl
in
mov
xor
icebp
int3
mov
and
fcmovbe
inc
xchg
add
push
mov
adc
push
mov
int3
orl
jae,pt
adc
arpl
pusha
pop
jae
int
mov
adc
dec
rorb
mov
lcall
shrl
repnz
xor
cwtl
mov
xor
cmpl
in
out
stos
lahf
inc
repz
fdivl
insl
xor
and
test
dec
cmp
enter
push
addr16
dec
adc
ss
pushf
xor
fsubs
ficoms
test
dec
pop
and
or
out
lahf
mov
out
std
xor
sub
daa
dec
jne
push
lods
lods
gs
cmpsl
xor
data16
mov
dec
jb
jno
cwtl
adc
into
out
cmpsl
js
cmc
and
outsl
adc
clc
dec
push
jne
into
cmp
fcoms
xor
stc
sub
gs
inc
xchg
aam
iret
adc
xor
mov
xor
rcrb
div
call
imul
stos
pop
mov
arpl
dec
pop
lds
fdivr
inc
or
in
clc
ret
cld
sbbl
sbb
dec
sub
test
push
dec
int
cld
outsl
neg
xlat
add
js
mull
outsb
pop
jno
ljmp
outsl
jge
in
stos
out
repz
inc
pop
out
or
test
movsb
xchg
jg
and
ljmp
add
sub
out
in
cmp
add
add
into
fsubp
test
inc
xor
pop
push
test
lea
and
sar
jecxz
stos
mov
add
xchg
imul
or
popa
jnp
adc
addr16
jnp
in
inc
or
sub
lcall
or
xchg
rorb
sbb
jle
inc
bound
int
fldl
mov
mov
jne
out
sahf
cs
int3
out
int
fdivrl
add
mov
sub
and
das
pop
negb
sbb
sub
test
mov
imul
in
jnp
mov
push
pop
movsb
or
notb
inc
mov
mov
fistl
mov
pop
inc
cld
mov
pusha
cwtl
mov
xchg
int
into
lods
sti
add
add
and
popa
adc
stos
test
icebp
cld
out
int3
inc
scas
inc
mov
and
mov
les
push
xchg
fdivp
mov
jae
pushf
shlb
iret
aas
mov
es
loopne
mov
cwtl
aaa
jge
daa
hlt
movb
sbb
das
out
lahf
arpl
pop
dec
repz
sub
push
int3
sub
jmp
xchg
cltd
mov
clc
jl
xchg
sub
mov
jae
notl
inc
cmpl
push
loopne
and
mov
es
in
std
insl
lods
in
ss
or
dec
lahf
fwait
xor
and
ret
das
jg
xor
dec
hlt
lret
mov
mov
dec
mov
orl
scas
int
vmovaps
pop
insl
cld
cmpl
outsb
ficomps
or
mov
and
xor
les
mov
pop
and
sahf
out
arpl
push
jg
arpl
sub
lcall
fdivs
mov
inc
cwtl
adc
test
inc
into
pusha
push
cld
dec
mov
sarb
sahf
mov
xchg
add
inc
outsl
aad
mov
cmc
cli
and
dec
adc
xor
aaa
mov
sahf
jmp
dec
cmc
adc
ret
cli
xchg
push
mov
jno
jp
pushf
fbld
and
repnz
xchg
cmp
insl
jae
and
mov
idivb
sbb
ljmp
dec
sbb
mov
mov
repnz
pop
cmp
fucom
cwtl
stc
inc
push
push
and
adc
testb
out
or
push
shrl
dec
sbb
inc
xor
mov
mov
mov
sbb
in
mov
rcrb
fiadds
enter
orb
mov
cmc
push
daa
pop
nop
jno
push
cwtl
cmp
adc
pop
jbe
mov
mov
mov
hlt
mov
xor
and
daa
test
ror
popf
xor
mov
jb
lods
pop
test
pop
in
insb
test
lock
mov
xor
mov
push
sahf
sbb
int
in
bound
into
test
push
negl
jno
cmc
xchg
stos
popa
mov
call
add
sbb
int3
int3
xchg
cltd
push
mov
sbb
cmc
xchg
mov
adc
mov
sbb
orl
daa
daa
or
push
push
jg
test
aaa
jo
mov
fs
lahf
jno
lea
pop
push
hlt
scas
enter
inc
jge
and
leave
mov
js
add
mov
jecxz
lods
sbb
imul
out
sar
cmpsl
mov
add
cmp
xlat
ret
int3
ljmp
std
jp
fmulp
gs
or
es
xchg
sarl
or
imul
push
rcrb
in
xchg
add
ret
dec
lret
jecxz
test
dec
sahf
adc
or
inc
xor
xor
fs
push
mov
cmp
mov
aas
shlb
mov
push
fs
jp
mov
stc
leave
and
xchg
or
ds
adc
jg
mov
fwait
adc
movl
add
aad
scas
fwait
push
mov
std
pop
xor
cmp
enter
jns
xchg
lea
jns
mov
pop
or
jnp
sub
rcll
mov
rolb
sub
jns
mov
stc
sahf
ljmp
insb
in
mov
inc
jae
in
fstps
and
mov
shrb
div
lods
incb
movsb
cltd
leave
push
mov
movsl
push
push
sub
lcall
cwtl
pop
sbb
sub
jmp
cmp
in
add
mov
sbb
dec
mov
fsubr
push
dec
cmp
sbb
stc
sarl
sub
mov
dec
addr16
outsl
xor
cmpsl
mov
aas
cld
xchg
push
mov
mov
and
pusha
popa
lcall
ds
out
mov
call
popf
ja
and
cmp
cmc
or
mov
shll
push
out
pop
xchg
loopne
lcall
push
adc
push
xor
add
call
gs
inc
mov
in
xor
dec
out
call
and
mov
ja
or
shl
into
mov
aas
cmp
and
mov
aas
push
cwtl
divb
jecxz
xor
cld
pop
int3
xor
cltd
pop
jge
shll
dec
loop
sbb
pop
pop
jae
cmp
loopne
mov
es
stos
sahf
dec
aam
cmp
cmp
incl
push
xor
inc
pop
mov
stos
dec
inc
push
fldl
movsl
inc
gs
daa
icebp
pop
jecxz
out
insb
stos
shlb
dec
or
aam
xchg
lret
jg
cmp
cmp
cmpsl
outsl
leave
lds
sub
lods
or
ud1
pop
sahf
xchg
orl
dec
pop
out
imul
lock
dec
xor
imul
sarb
lea
add
inc
xor
outsb
out
push
fbstp
in
cmp
int3
cltd
pop
mov
mov
sub
stos
xor
sbb
aaa
add
aad
cltd
adc
clc
inc
mov
ret
pop
dec
push
movsl
or
cmpsb
jb
and
cmc
push
dec
xchg
cmpb
test
daa
repnz
fimuls
xchg
jp
scas
into
push
scas
push
test
mull
jb
xchg
mov
mov
mov
jge
push
fildl
fmull
mov
aad
lods
jp
cmp
fildll
adc
popf
jecxz
sbb
jmp
pop
popaw
icebp
call
daa
add
jecxz,pn
stos
test
push
cmp
fimull
push
testb
sbb
sbb
or
sbb
aaa
push
xchg
in
inc
daa
test
pop
sahf
mov
lock
cmp
dec
xchg
fsubs
xor
lds
jo
pop
mov
mov
adc
and
push
jle
imull
lcall
cmp
out
push
dec
lods
adc
cli
insb
bound
jge
rol
or
and
and
add
add
push
sbb
or
hlt
lods
xor
sbb
or
cld
imul
aas
cmpsl
insb
sti
push
popa
test
push
lcall
xchg
cltd
pop
mov
dec
imul
pop
push
mov
cmpsb
dec
ljmp
mov
dec
scas
inc
hlt
mov
dec
or
popf
sahf
daa
dec
mov
inc
addr16
imul
mov
cltd
add
xor
jl
mov
push
pop
mov
cli
gs
jo
lcall
cmp
or
adc
jmp
xchg
push
sub
push
cmp
cmpsl
sub
jmp
xchg
sarb
add
adc
std
shrb
add
fsubrl
xor
or
push
sbb
xor
bnd
test
push
mov
mov
or
xor
fisubrs
movsl
inc
int
fmuls
pop
mov
pop
pop
fcoms
out
xor
pop
lahf
mov
sub
pop
lds
into
int
push
pop
push
in
adc
jle
mov
mov
rorb
jecxz
inc
hlt
sbb
scas
push
ficomps
xchg
xchg
and
mov
sbb
loope
push
out
dec
jmp
inc
repz
cmp
insl
inc
lds
inc
cmp
cmp
or
adc
sahf
decb
or
ds
rol
dec
jno
pop
jg
adc
dec
pop
sub
push
mov
pop
dec
aad
outsb
mov
cmp
pop
std
int3
push
fmulp
inc
cli
rorb
rcll
hlt
fcmovbe
mov
in
cmc
inc
int3
lret
or
inc
lock
jg
add
movb
inc
lock
dec
test
jnp
pop
adc
pop
outsb
mov
push
mov
or
add
and
es
mov
out
out
cmpsl
cmp
call
nop
sub
loop
or
dec
or
add
push
pop
pop
push
sbb
jnp
and
out
jae
pop
push
xor
mov
push
xchg
or
mov
shlb
insl
mov
push
adc
popa
cmpsl
sbb
push
mov
rclb
lahf
sarb
pop
fs
ljmp
cmpsl
ret
insl
mulb
pop
xchg
fbld
push
outsl
jo
sahf
in
ret
or
push
pop
jb
insl
mov
jo
sbb
xor
popa
pop
mov
aad
xchg
push
clc
sub
in
pusha
or
test
inc
push
insb
mov
sub
adc
mov
std
mov
sbb
subb
psubd
cltd
pop
pop
ds
inc
imul
nop
leave
fisubrl
lahf
pop
sbb
pop
daa
jno
sbb
pop
xlat
cltd
inc
popa
push
test
fwait
xchg
aad
dec
xor
mov
int3
outsb
mov
and
pop
leave
add
xchg
mov
inc
jge
push
lcall
js
lret
or
fsubrl
lea
pushl
push
adc
pushf
or
daa
inc
in
xor
pop
into
xor
std
loop
in
dec
xor
in
mov
mul
dec
aas
dec
xchg
sub
das
addr16
sbb
xchg
mov
pushf
cld
movsl
dec
pusha
scas
scas
cli
in
push
add
loope
pop
fstpl
dec
aaa
outsl
jle
cmp
mov
mov
imul
cwtl
imul
mov
adc
dec
adc
test
sub
cmp
jnp
xchg
pushf
or
pop
movb
subl
imul
push
fidivrl
cmp
fadds
popf
addl
and
sub
jbe
inc
push
scas
clc
stc
insw
mov
push
jecxz
std
mov
lea
adc
or
ds
out
sbb
push
fistps
mulb
pop
xchg
pop
xchg
mov
int
popf
jmp
add
in
inc
mov
imulb
and
sub
andl
decb
std
js
lahf
xchg
push
je
sub
or
or
inc
dec
xlat
xor
adc
dec
lods
xor
in
cmp
out
inc
jmp
push
dec
or
push
push
aam
sub
pushf
ret
xor
ljmp
adc
jecxz
repz
mov
mov
sbb
cmpsl
lcall
adc
or
mov
add
cli
sub
outsb
loopne
sti
add
fldl
mov
or
mov
mov
mov
fadds
or
repz
ja
je
fidivrl
imul
xor
mov
mov
pop
mov
mov
in
rcr
daa
dec
mov
imul
rcr
xchg
inc
stos
fistl
mov
xchg
mov
ja
adc
inc
xor
out
les
daa
add
add
pop
cmp
test
push
adc
push
xchg
repnz
jecxz
or
push
scas
mov
cmp
fildll
and
orb
loopne
call
movsl
es
jb
iret
xchg
jno
cmp
in
pushf
or
rcl
testl
loope
pop
sbb
cmp
jne
or
loopne
xor
pop
push
push
movsl
nop/reserved
cmp
sarl
les
cmpsb
testb
outsb
je
sbb
cmp
sti
mov
je
or
shrb
xor
aaa
inc
pop
fdivr
dec
dec
or
push
sub
mov
fwait
push
imul
sbb
ret
sub
sbb
push
or
stos
fcmovnu
rcr
fwait
movsb
sbb
add
cmp
cmp
cmp
pop
or
adc
out
xchg
lds
mov
aaa
out
push
jo
xor
xor
xchg
mov
sbb
jp
inc
mov
and
cmp
jle
add
shr
add
cmp
loopne
cmc
fdivp
sub
cli
cmpb
jno
adc
addl
inc
pop
divl
dec
notl
inc
movsl
nop
push
rcr
or
es
pop
pop
xchg
sub
test
adc
mov
add
rorl
jnp
movsl
lods
mov
mov
add
pushf
lds
aaa
inc
lds
pop
in
rcrl
cmc
icebp
outsb
mov
mov
sbb
cmp
mov
fwait
repnz
lcall
mov
pop
movsl
aad
pop
jno
jmp
mov
pop
jmp
xchg
cmp
adc
push
add
or
inc
aas
outsl
mov
sbb
mov
pop
loope
cld
repz
sub
mov
pop
sbb
lods
lret
cmp
js
push
out
sbb
xchg
arpl
xchg
push
pop
sbb
jnp
scas
fsubrs
jnp
in
push
or
aas
mov
jge
push
dec
sbb
jmp
add
shlb
int
aad
pop
rorb
scas
bnd
aaa
add
insb
in
dec
push
xor
repnz
jne
bound
dec
mov
add
and
sub
out
test
sbb
pop
ds
adc
jae
push
pop
add
ljmp
insl
cwtl
pop
xor
lds
push
mov
push
inc
pusha
dec
mov
lds
in
pop
cmp
clc
roll
inc
aam
and
pop
in
and
test
mov
daa
std
dec
sbb
push
movsb
hlt
dec
xor
mov
dec
std
or
cmp
push
mov
jecxz
repz
arpl
imul
enter
stc
imul
int
inc
stos
pop
pushf
and
sub
clc
cwtl
xchg
xor
mov
ljmp
and
pop
cmpsb
push
decb
pop
outsl
insb
xchg
movsl
icebp
sub
push
push
rorl
mov
inc
push
sbb
add
andb
std
xor
cs
jp
mov
mov
dec
pop
call
je
inc
dec
icebp
xchg
mov
popf
inc
ss
jmp
add
ljmp
push
inc
sbb
int3
lods
test
lods
jl
fmul
data16
sbb
inc
data16
lret
aas
in
repnz
ljmp
gs
push
mov
cmc
sub
lods
stos
test
lret
sub
filds
js
cmpsb
out
jne
mov
repnz
icebp
shl
sbb
inc
cmc
aaa
fld
dec
test
xchg
push
push
and
movsb
sbb
gs
out
enter
lahf
push
idivl
xchg
dec
inc
imul
cltd
adc
rcrl
sti
mov
jnp
xchg
ret
xchg
loopne
out
fstps
dec
scas
fwait
pop
or
xor
sbb
fwait
sub
jb
or
jecxz
add
mov
adc
in
bound
addb
mov
out
shl
popa
lds
roll
pop
mov
mov
dec
fidivl
sub
daa
mov
jno
test
dec
xor
adc
mov
fsubrl
mov
jge
clc
jp
sub
aaa
std
mov
in
sbb
jne
sub
rol
hlt
sub
push
and
leave
add
fwait
lods
or
shll
pop
pop
jns
addr16
ds
adc
sbb
cmp
inc
mov
sbbb
mov
dec
push
sub
iret
push
push
hlt
adc
ret
mov
mov
mov
jge
mov
rcr
or
lret
jne
icebp
mov
cmp
push
add
fs
add
leave
sahf
push
mov
xor
adc
cmp
cmp
mov
sbb
sbb
aaa
mov
cmpsb
pop
xchg
out
clc
xchg
fisubrs
lds
push
pop
fiadds
jecxz
jg
jo
lcall
cmp
inc
push
or
fnstcw
daa
je
lcall
add
sub
rolb
mov
mov
dec
xchg
shrl
jae
sub
xchg
jns
sahf
repz
popa
lcall
cmc
enter
mov
inc
int
adc
in
push
mov
xchg
mov
mov
and
in
and
cmp
mov
pushf
ds
sbb
cmp
xor
add
ret
inc
repz
clc
xor
es
icebp
mov
push
fidivrl
xchg
adc
adc
lods
lret
jle
mov
mov
jnp
lahf
scas
and
and
mov
adc
pusha
cmp
mov
push
out
iret
scas
out
ret
mov
cwtl
adc
shll
ret
adc
lea
pop
fistpl
push
cmpsb
push
sbb
pop
xchg
test
repz
mov
dec
push
pushf
mov
mov
sub
mov
jae
fistps
adc
enter
fildll
hlt
push
fnstsw
repz
fstpt
sahf
ficoml
in
mov
stos
mov
add
movsl
adc
fwait
or
shr
push
cli
outsb
jecxz
movsl
inc
pushf
fscale
sub
and
movsb
sbbb
outsl
hlt
xchg
out
stc
xchg
cmp
or
sub
adc
std
aad
push
sbb
cmp
mov
jae
push
sbbl
insb
xor
pop
or
movsb
insl
movsl
mov
in
and
cmp
mov
push
mov
xor
insl
out
int3
mov
fdivp
push
or
sahf
stos
inc
push
cmpsb
sahf
inc
inc
incl
or
lcall
mov
add
mulb
lds
aam
test
cld
addl
sbb
xchg
jne
push
jns
push
lahf
lock
bnd
les
mov
lock
dec
pop
jg
push
cmp
pop
sti
or
lds
mov
es
xchg
mov
out
mov
add
mov
cmp
or
jo
mov
and
dec
in
cmp
push
lock
mov
cmp
test
inc
or
std
mov
dec
repnz
mov
aaa
cmp
cs
pop
sahf
mov
fs
jmp
setns
mov
das
mov
leave
jns
xchg
mov
icebp
test
push
ds
adc
loopne
pop
inc
jl
out
push
inc
inc
jmp
mov
fxch
push
pop
dec
push
sbb
mov
add
shlb
shrl
sbbb
cmp
mov
jmp
xchg
addr16
dec
sbb
adc
cmp
pop
frstor
into
dec
mov
xor
cltd
add
sub
jl
test
loop
cmp
js
inc
std
lret
mov
mov
stos
fcomp
mov
xor
jge
xor
xchg
pop
mov
inc
ja
outsl
dec
or
sbb
mov
push
adc
loopne
sbb
fsubl
lcall
mov
and
stos
push
xchg
imul
stos
push
pop
xchg
nop
je
jnp
fimuls
xchg
leave
xor
sbb
push
cmp
addl
inc
js
or
ss
out
movsl
stos
lods
mov
dec
jge
inc
icebp
jnp
or
ljmp
in
shrl
movsl
xorl
out
jne
fs
cmpb
sarb
std
cmp
das
xor
insb
jae
mov
mov
nop
push
in
cmp
lods
out
out
pop
fisttpll
sbb
outsb
ret
sub
call
dec
or
or
cmp
or
int
rclb
mov
testb
int3
add
lret
push
fwait
pop
andl
mov
cmpl
enter
xchg
aas
inc
xor
fnsave
adc
push
cmpsb
test
adc
push
loopne
pop
call
mov
sbb
data16
loopne
xchg
into
push
roll
mov
sub
mov
dec
test
into
inc
out
flds
movb
dec
xlat
in
mov
jno
and
mulb
inc
add
xor
inc
test
fs
enter
in
xchg
jbe
ret
lock
adc
insl
js
imul
sub
pop
or
pop
jl
push
or
nop
cmp
jne
sar
ret
enter
jecxz
xchg
iret
mov
lret
out
push
inc
lahf
ficoml
cmp
and
adc
lret
sahf
enter
and
sub
push
or
repnz
loop
inc
or
push
int
xchg
add
loop
inc
push
sub
push
mov
xchg
bound
jmp
pushf
ljmp
pop
pusha
mov
jae
lds
jo
hlt
mov
jl
xchg
sbb
aad
test
repnz
add
inc
push
cwtl
sub
add
jecxz
in
sbb
repz
adc
xchg
jmp
nop
xchg
mov
rolb
sbb
mov
test
and
pop
pushf
lret
adc
pop
out
push
gs
icebp
cmp
xchg
pop
mov
dec
cwtl
xor
fwait
bswap
in
inc
lahf
adc
inc
cwtl
loopne
xchg
cs
ss
jae
push
mov
cmp
mov
add
push
cmp
fcmovnbe
mov
cltd
push
ljmp
lret
mov
ret
shl
jecxz
addr16
push
sub
test
jle
ja
shll
loopne
in
add
movsl
jg
loop
xchg
cmp
lahf
in
mov
pop
fcmovnbe
daa
inc
cld
xor
cmp
jae
push
xor
sbb
dec
jae
push
sub
push
out
daa
sub
shll
clc
adc
lock
leave
repnz
icebp
cmp
outsl
fistpl
mov
jb
xchg
imul
int
rolb
cmp
lcall
push
xchg
fs
sti
inc
ret
add
lahf
mov
scas
cmp
xor
inc
adc
sti
sbb
and
std
lcall
ds
dec
lods
xor
mov
pop
cmp
fmuls
incl
data16
out
fisubrs
cmp
es
icebp
pop
xchg
add
jno
sbb
fistps
pop
into
test
add
popf
mov
xchg
dec
mov
in
mov
cmpsb
setle
js
add
test
adc
sub
cmp
inc
jp
es
or
push
pop
cmp
jno
pop
sub
stc
pop
adc
xchg
push
mov
xor
imul
jns
add
fimull
testb
adc
dec
push
test
int3
fimull
fadd
cmp
fcomi
shrb
shlb
xor
mov
jp
fs
loope
or
xchg
dec
cmp
pop
std
pushf
in
enter
popf
lahf
loope
fisubl
dec
dec
xchg
xchg
xlat
insb
pop
jmp
xchg
mov
mov
xchg
xchg
or
adc
lea
pop
pop
mov
inc
std
mov
jle
outsl
ja
movsl
je,pt
and
push
push
scas
popf
ret
cmp
jae
inc
push
xor
cmp
mulb
cmpsl
int
ljmp
push
sbbl
imul
or
sub
imul
in
test
in
inc
push
sub
iret
call
mov
js
jnp
leave
insb
mov
cmpsl
or
popf
push
bound
xor
push
and
push
mov
ret
mov
ret
cmp
js
punpckhbw
sub
vmovlpd
mov
aad
pop
lock
push
rorb
sub
adc
mov
sub
inc
dec
lods
and
shlb
mov
push
jle
testl
xchg
fbstp
int
cmpl
cld
popf
fisubrs
ret
stos
out
imul
insl
mov
mov
je
jns
xlat
dec
std
adc
shll
repnz
ja
call
sbb
xor
jmp
stc
mov
shl
jns
xor
lea
outsl
xchg
pop
sub
cld
pop
mov
sbb
in
or
lret
or
lea
out
push
jb
mov
fstl
rcr
ljmp
push
inc
ljmp
cmp
xor
adc
inc
fucomi
out
or
lret
mov
dec
inc
pop
les
arpl
popa
neg
cwtl
scas
xchg
jae
mov
sbb
add
mov
fnstcw
adc
ds
stc
inc
iret
add
jb
pop
mov
shlb
sahf
xchg
xchg
push
sub
xor
daa
scas
push
and
or
sbb
clc
add
jle
movsb
pusha
enter
loopne
jne
fisubrs
sbb
rcll
mov
pop
inc
gs
cmp
mov
dec
jge
jge
pop
aas
pop
iret
mov
push
sub
and
hlt
ror
pop
fmuls
outsb
add
aad
test
es
fdivrs
mov
push
jb
cmpsb
cmp
inc
pop
jle
jbe
subb
outsl
lcall
mov
adc
stc
fincstp
fmul
inc
sub
xor
ret
xchg
adc
fldt
add
imul
cld
or
cmpsb
push
out
in
fiadds
dec
pop
test
sbb
inc
jp
int3
mov
cwtl
outsl
mov
mov
and
inc
loopne
mulb
lods
pop
ret
xchg
mov
mov
outsb
pop
cwtl
insb
repnz
jnp
sub
inc
jbe
cli
and
fcmovne
jmp
filds
leave
xchg
xorl
sub
mov
aam
push
lcall
inc
pop
test
sahf
or
pop
popa
jl
ja
xchg
push
hlt
in
lret
add
mov
pop
mov
add
jo
xchg
pop
xor
add
mov
ffreep
push
xor
jnp
sbb
or
lds
mov
mov
mov
pop
xchg
push
pop
hlt
mov
add
push
mov
adc
and
in
stos
mov
mov
jg
xchg
mov
mov
iret
mov
test
dec
divps
mov
jne
std
nop
jno
xchg
dec
hlt
stos
sbb
push
sub
push
jne
dec
xor
pop
push
rcrl
bound
lahf
pop
into
adc
in
fmuls
insl
outsl
idiv
add
jb
iret
jne
in
ljmp
jg
xchg
mov
call
mov
lds
daa
xor
dec
stos
pop
out
pop
mov
jecxz
mov
adc
gs
stc
cmp
mov
xor
into
cmp
xlat
xor
inc
cmp
xor
sti
sbbb
sbb
nop
add
pop
push
fisttps
adc
mull
in
ss
xchg
in
push
mov
mov
xchg
inc
pop
sahf
jno
mov
test
mov
jle
int
das
add
fstps
mov
inc
and
jmp
ret
jnp
dec
mov
pusha
mov
fsubs
push
pop
push
dec
ret
ficomps
xchg
jmp
xlat
jmp
sub
nop
call
icebp
addr16
jmp
push
push
sub
xchg
shrb
shll
inc
cmpsb
flds
and
mov
pop
cmp
mov
addl
int
in
jb
inc
mov
dec
loopne
cmpsl
jg
mov
xchg
je
aas
lret
cmpsl
mov
or
test
clc
jecxz
sub
in
jg
dec
test
cmp
add
shrb
jle
mov
popa
jecxz
mov
jo
jae
inc
inc
cmc
scas
gs
int3
mov
cmp
push
mov
xorb
es
movsb
xchg
sub
inc
jb
inc
mov
es
rcr
fwait
test
mov
jecxz
test
sub
ret
lret
and
cmovs
lahf
bound
cmpb
adc
rorb
cmp
jae
mov
push
pop
cltd
loope
push
cwtl
loop
pop
sbb
negb
pop
jge
js
jne
das
adc
mov
dec
aaa
push
out
push
aaa
in
mov
sahf
or
sbb
add
mov
cli
scas
cs
enter
std
popf
mov
bound
dec
xlat
fwait
cmp
pop
les
fidivl
or
subb
scas
cmp
in
call
pop
imul
mov
add
gs
sbb
popf
push
pop
sbb
add
and
scas
lds
das
cs
dec
xchg
fcomip
xchg
jge
jmp
mov
jle
loop
sbb
cmp
xor
icebp
jecxz
xchg
add
out
fst
dec
loope
daa
imul
sbb
or
push
lock
jns
lret
inc
std
lock
outsl
aam
or
out
mov
ljmp
sub
and
out
jg
cmc
outsb
or
jnp
pop
and
xor
lret
add
insb
jb
sub
dec
and
out
std
add
mov
xor
mov
lcall
stos
inc
or
add
sbb
inc
xlat
adc
cmc
out
imul
mov
hlt
jmp
jp
mov
mov
inc
mov
jne
adc
shl
jae
pop
mov
push
aaa
js
je
cmp
dec
cmp
mov
pop
das
lea
pusha
and
jmp
popf
xor
push
pop
hlt
lret
cmp
outsl
cmc
fnstcw
jbe
push
jecxz
pop
and
jo
outsl
cmp
cli
jl
adc
jmp
cmp
and
orl
add
insb
pop
pop
add
faddl
or
lret
mov
sbb
mov
mov
and
inc
pop
imul
push
xchg
pop
mov
test
ljmp
divb
leave
mov
cmpsb
xor
jo
push
fmul
pop
ret
dec
inc
pop
jle
push
test
lahf
and
sbb
cmc
mov
ret
xchg
ftst
xchg
pusha
add
lahf
rcl
sbb
idivb
sahf
and
sbb
shr
add
dec
nop
cmp
mov
cli
testb
loopne
or
imul
xlat
ret
jno
inc
push
daa
push
test
in
scas
pop
repz
cli
sbb
dec
mov
nop
mov
idivb
add
dec
push
mov
xor
gs
adcb
sbb
cmp
stos
lcall
sbb
dec
or
push
jne
xchg
daa
sub
inc
dec
push
jnp
loopne
inc
push
adc
aad
in
pop
push
and
dec
push
cltd
dec
dec
xchg
dec
mov
sub
push
dec
loop
lret
jl
mov
mov
mov
push
fcompl
xchg
jmp
subb
data16
cmc
inc
cmpsl
push
mov
sub
or
popa
inc
jb
in
movsb
xchg
push
pop
sbb
jb
dec
xlat
jbe
scas
fsub
xchg
stos
insb
lret
movsb
stc
scas
shlb
into
adc
xchg
les
jae
mov
mov
pop
inc
and
pop
lds
and
dec
hlt
imul
dec
mov
loope
fsubrl
dec
mov
lods
inc
cmpsb
mov
fisubrl
mov
fldt
push
movsb
je
jle
jle
xorl
add
mov
insb
pop
bswap
or
cmpsb
pop
or
mov
arpl
cmc
jo
pop
stos
cmp
jne
cmc
pop
ja
add
xor
pop
arpl
dec
pop
inc
ds
cmp
ss
dec
add
adc
std
lcall
adc
jb
fcomps
lods
cmp
aas
lock
cmpb
xchg
mov
int
inc
rorl
out
stos
mov
jae
sarl
dec
icebp
sbb
jmp
push
in
pop
lret
pop
in
sbb
movsl
xlat
xchg
enter
jg
ds
call
leave
adc
cmp
test
jo
mov
ficompl
pop
dec
into
ret
dec
leave
ljmp
pop
pop
add
xor
xchg
mov
mov
fbstp
add
dec
jno
xor
dec
in
pop
shlb
jo
jae
test
add
cld
scas
xchg
push
add
movsb
test
aam
popa
jae
jb
sub
test
dec
into
push
dec
neg
inc
fwait
addl
orl
and
add
out
ret
jg
subl
stos
push
or
and
mov
inc
sub
xor
jns
and
fdivrp
cld
pop
loop
loope
dec
xor
insl
mov
inc
insl
mov
dec
pop
cltd
xor
mov
cmpsl
jmp
stos
sti
shlb
mov
mov
lock
dec
xor
cli
push
mov
push
scas
xor
sub
mov
iret
xor
mov
js
enter
add
xor
mov
testb
push
scas
das
sbb
daa
test
adc
movsl
outsl
pop
dec
ja
idiv
pop
xchg
mov
les
mov
push
lods
push
xor
pop
cmpsb
loope
shr
push
adc
mov
mov
mov
mov
xor
or
outsl
imul
pushf
pop
cld
ret
or
and
jp
inc
mulb
arpl
jno
pushl
push
xlat
movsl
ficoms
pop
xchg
std
imul
cs
jmp
and
js
lret
xor
stc
cs
and
xchg
cmp
adc
leave
pop
add
xchg
mov
test
mov
inc
bound
pop
imul
stos
mulb
aas
pusha
out
pop
das
popf
and
lock
lea
popa
pop
jbe
daa
xchg
dec
ror
notl
or
xchg
sub
js
and
and
push
fsub
or
sub
dec
movsb
ret
iret
push
or
inc
cmp
mov
pop
mov
pushf
or
sahf
jnp
out
xchg
xor
pop
and
xchg
les
push
popa
cli
or
int
jae
sbb
inc
arpl
scas
xchg
sbb
mov
sbb
fidivrl
fdiv
mov
repnz
sub
sbb
jbe
jb
les
mov
xor
pop
sbb
cmp
lds
xor
jp
test
jb
xchg
dec
leave
stc
mov
mov
dec
call
push
test
fs
popf
mov
aad
movsb
inc
insb
xor
repz
mov
cs
jb
das
pushf
mov
jecxz
push
movb
into
test
aam
out
test
repz
xchg
mov
mov
lods
push
sti
xchg
xchg
mov
mov
jns
scas
sbb
insb
stos
cmpl
xor
pop
pushf
lock
mov
mov
in
addr16
outsl
call
xchg
lret
mov
xchg
bound
cs
jbe
repz
mov
or
add
pop
xor
xor
fmuls
cmp
push
aam
push
addr16
inc
jle
inc
subl
loop
ds
xchg
jl
jne
test
mov
jo
add
push
mov
cmc
push
out
xchg
shrb
scas
stc
fwait
xchg
out
cmp
jne
push
sbb
mov
lea
or
nop
xor
push
or
pop
dec
lock
pop
adc
enter
mov
fisttpl
call
ljmp
push
cltd
cltd
sub
cld
and
xor
scas
subb
sub
mov
test
push
dec
xor
add
push
popa
cmp
xchg
fisubrl
xchg
fidivrs
xchg
sbb
push
fistpll
xchg
dec
pop
pop
mov
fstpt
nop
push
mov
xchg
xor
jge
aad
aam
loop
mov
pop
lret
sub
cmp
repnz
push
jge
outsl
movsb
sbb
xchg
push
xor
or
adc
lock
lret
cmpl
stos
xchg
xchg
lahf
outsb
push
cmp
movsb
mov
adc
ja
cld
xlat
push
push
pop
pop
insb
xchg
pop
mov
aaa
sub
xlat
sbb
pusha
mov
cmpsl
lahf
pop
pop
fstpl
outsl
or
pop
inc
mov
adc
dec
in
sub
daa
cmp
jecxz
dec
in
fisttpll
aas
push
stos
ror
cmp
std
jg
in
not
jns
mov
pop
mov
push
xchg
repnz
test
out
out
inc
jne
inc
insb
dec
sub
addl
repz
mov
dec
fnstsw
rcll
aas
dec
sbb
int
daa
mov
scas
testl
add
cmp
and
les
mov
and
movsl
outsb
inc
xor
psubb
lock
out
cwtl
scas
repz
adc
fs
xchg
inc
andl
dec
sub
int3
out
jg
aam
rclb
orb
enter
popf
jge
push
rorb
adc
data16
imul
and
addr16
repnz
leave
or
xchg
add
mov
scas
mov
pop
mov
movsl
sub
out
arpl
inc
sub
clc
and
jb
movsb
fwait
and
push
into
pop
cmpsb
mov
lahf
or
shr
lds
outsl
leave
xchg
sbb
jg
lea
call
movsb
xchg
sub
loopne
cmpsb
jb
push
mov
adcb
cmp
mov
mov
dec
movsl
out
mov
bnd
pop
outsl
push
push
xchg
je
xor
pushf
adc
lea
in
pop
lds
in
mov
cltd
jnp
or
mov
sub
push
lock
enter
add
inc
ret
and
in
cld
fwait
int3
test
aad
dec
xchg
mov
and
dec
and
and
aas
push
decb
je
push
mov
out
hlt
ds
sub
pop
mov
fwait
xchg
dec
mov
cmpsb
mov
in
cmp
or
aaa
movsl
mov
loope
lea
pop
dec
cli
stos
pop
jmp
push
popf
pop
sbb
ret
inc
or
js
stos
sbb
jns
aas
fcomp
sub
jl
rcl
insb
mov
push
sti
xor
fsts
mov
adc
and
push
pop
and
adc
xchg
fisubrl
rorl
sbb
fcom
insb
pop
push
adc
stc
or
cmp
sbbb
int3
inc
mov
xor
test
cmpsb
sbb
das
push
xchg
ret
stos
lods
testb
xchg
repz
pop
xor
hlt
mov
inc
imul
cmp
pop
aad
mov
jbe
jle
or
test
mov
lock
mov
cmp
push
sbb
data16
mov
mov
aad
cs
notb
xor
loope
or
dec
xor
stos
cmp
adc
sti
in
sti
push
inc
jecxz
push
arpl
seto
je
sti
aad
mov
outsb
and
repz
outsl
int
inc
testl
dec
mov
loopew
mov
les
jge
insb
subl
mov
xchg
inc
xor
std
mov
and
je
jb
pop
cmp
xchg
dec
lcall
pusha
push
cmp
icebp
in
movsl
stos
enter
mov
jns
add
jp,pn
pusha
push
mov
mov
mov
pop
pop
and
push
les
pop
aas
sub
xor
add
lods
popf
jo
fisubs
inc
mov
clc
push
lcall
pusha
xchg
jecxz
pop
mov
push
dec
dec
lret
aas
das
nop
jno
fstl
sbb
sbb
inc
add
jecxz
xchg
mov
imul
pop
mov
std
sub
and
jb
fnstcw
mov
shrl
stos
cmp
xchg
loop
fcomps
add
xlat
int
popf
shlb
in
insb
adc
into
mov
arpl
adc
jecxz
and
mov
sub
mov
mov
mov
hlt
test
stc
add
mov
in
lret
cmpsl
xchg
rclb
pushf
jo
mov
inc
out
pop
inc
sub
imul
bnd
jg
test
or
and
rorl
jbe
adc
push
xor
into
cmpsl
inc
xlat
add
pop
ror
rorb
push
mov
add
pop
inc
mov
add
inc
cmp
movsb
mov
push
repnz
xor
cli
push
mov
mov
bound
sahf
shll
popf
or
in
xlat
outsl
lret
aad
inc
cmpsb
std
push
in
hlt
pop
out
fst
pusha
lret
jp
sbb
xor
or
or
and
or
sbb
jmp
and
cmc
fwait
das
adc
adcb
fimuls
lea
lds
mov
cmp
addr16
not
ss
addr16
or
sbb
cmp
bound
in
mov
mov
out
lock
sbb
jl
mov
test
or
nop
cmp
sub
dec
sbb
notl
push
outsl
hlt
imull
dec
lods
fs
ss
mov
mov
xor
mov
test
enter
sub
cltd
sub
dec
rorl
test
jp
pop
mov
mov
add
xor
std
push
mov
dec
adc
add
add
sub
xor
es
ss
aas
mov
xchg
mov
std
mov
mov
je
cld
pusha
in
mov
mov
mov
rorb
xchg
cmp
pusha
cld
add
inc
sub
xchg
data16
and
cmp
mov
std
adc
add
xchg
bound
adc
mov
fs
push
movsl
sub
sbb
jbe
repnz
adc
or
cmp
add
adc
sbb
sbb
into
sub
incb
sub
push
or
or
cmp
pop
repnz
jne
pop
stos
jae
pop
xchg
out
int
xor
xchg
mov
mov
repz
das
mov
icebp
es
jbe
adc
push
testb
pop
shrb
aad
stc
xchg
jno
mov
add
push
sbb
je
daa
dec
enter
push
mov
lret
insb
pop
repz
sti
and
aaa
inc
or
push
mov
call
xrelease
xor
push
mov
sub
and
mov
add
push
das
repnz
and
cli
push
sub
std
or
in
js
fs
pop
pushf
sti
jbe
cmpsb
mov
inc
into
cmp
push
cmp
and
dec
dec
xchg
movsl
xlat
stc
mov
stc
lds
jmp
aam
cmpsl
dec
xlat
mov
push
mov
sbb
pop
sub
ss
pop
inc
jb
scas
ja
sahf
sbb
mov
xchg
adcl
outsl
imul
xor
sub
mov
lods
leave
mov
call
test
pop
test
dec
lcall
inc
shll
in
mov
push
mov
cmpsl
add
sbb
lea
test
add
out
mov
xchg
roll
data16
cld
lock
sub
ret
jcxz
ret
test
xchg
movsb
push
push
pop
stos
jo
lods
sbb
mov
mov
je
test
mov
cmp
jmp
lcall
mov
add
sub
pop
cmpsl
out
lods
mov
xchg
cmp
cmpsl
pop
push
add
mov
mov
ja
sarb
mov
xlat
in
push
mov
add
lods
sbb
pop
push
push
int3
mov
xor
lock
dec
mov
cmpsb
mov
jo
adc
outsl
dec
or
nop
inc
and
test
xchg
jno
add
rcrl
popa
pop
mov
jne
shll
pop
rorb
lods
mov
in
mov
addl
shl
test
mov
or
insl
sti
stos
add
push
and
mov
add
imul
in
xor
pop
cmpsl
ja
stos
jg
pop
call
outsl
pop
jb
out
aam
call
xchg
inc
mov
rcll
dec
push
or
dec
mov
cmp
sbb
paddsb
test
add
mov
fnstcw
push
push
xchg
push
lcall
pop
jecxz
jo
mov
adc
xchg
dec
les
mov
adc
ds
lret
bound
rolb
mov
fcomps
pop
mov
std
out
clc
xor
lahf
jae
faddl
fstpl
xchg
int
mov
xchg
repz
dec
push
js
inc
mov
add
push
call
popf
add
jle
insl
cld
jp
mov
mov
les
dec
or
gs
andnps
jl
adc
mov
pop
fwait
pop
mov
sbb
inc
and
mov
push
pop
lahf
push
and
int
cmp
add
inc
movsb
mov
jnp
pop
push
out
loop
rolb
mov
mov
push
das
mov
dec
dec
pusha
testl
and
pusha
cmp
jmp
lods
outsb
filds
std
ret
xchg
lcall
insl
jmp
jno
mov
mov
cltd
aas
ficoms
adc
cmp
aaa
loope
jmp
adc
out
mov
inc
push
xor
xor
xor
mov
lcall
jbe
cs
scas
out
imul
xlat
repnz
mov
mov
mov
inc
jno
cwtl
in
push
jno
dec
inc
push
imul
pop
mov
sub
std
movsb
jns
enter
imul
adc
sub
loopne
push
mov
lods
ljmp
mov
and
rcrl
and
push
or
test
add
jbe
fs
push
fnstcw
xchg
push
push
mov
mov
xchg
sub
fs
test
outsl
in
syscall
into
push
jle
push
cmc
xor
roll
jnp
andl
adc
lea
xchg
inc
jmp
jne
cmp
add
mov
or
daa
inc
cmpl
add
in
cs
xor
mov
test
push
add
mov
sub
out
sbb
cltd
sbb
pop
mov
mov
mov
inc
shll
mov
push
pop
inc
add
add
pop
fnstcw
mov
out
mov
jmp
sub
or
mov
sub
pop
or
loope
lods
mov
adc
imulb
data16
cld
enter
fstpl
dec
or
inc
aaa
mov
fisubl
jns
lods
outsl
popa
mov
sbb
popf
pop
aad
cmp
cmpsb
pop
in
stos
mov
lret
outsl
cmp
dec
lcall
mov
das
mov
incb
imul
dec
mov
jl
nop
ret
adc
inc
add
lret
jae
adc
push
pop
mov
and
sahf
dec
mov
dec
sub
std
leave
add
mov
orb
mov
movhps
cmp
push
imul
jg
cmp
mov
xor
mov
sub
mov
adc
leave
ljmp
incl
add
popa
mov
jo
xchg
pusha
call
mov
cwtl
pop
sub
mov
mov
enter
sub
jbe
or
mov
mov
pop
mov
add
stc
push
pop
rcrl
mov
test
enter
in
es
fadds
outsl
pop
push
jne
rol
mov
je
xor
adcl
adc
inc
mov
mov
mov
pop
xchg
ficoml
ret
pop
loope
fildl
lret
fstps
cltd
sub
mov
enter
ret
xor
dec
movl
lock
addb
popf
and
mov
sarl
data16
xchg
add
inc
fisubs
push
in
sbb
js
fcom
dec
inc
cmp
pop
test
sub
mov
inc
push
mov
xchg
sbb
xchg
imul
mov
push
addr16
mov
aad
cwtl
or
xor
dec
xor
lret
cmc
pop
xchg
std
lds
inc
xchg
push
sbb
in
in
add
mov
pop
sbb
stos
out
cltd
sub
or
mov
pop
je
cld
call
mov
jo
pop
mov
fs
insl
orl
loopne
mov
jo
mov
insl
movups
mov
mov
xor
into
mov
sbb
cmp
pop
out
pop
and
mov
mov
adc
std
ret
cwtl
cmp
xchg
iret
push
push
push
or
jno
dec
or
xorb
sub
es
out
imul
cmpsb
imull
jg
cmpsl
sbb
push
mov
inc
inc
xor
mov
lock
cmpl
les
fcomp
mov
aam
lret
lods
jmp
pop
sbb
pop
sub
out
inc
pop
mov
mov
adc
lea
and
sbb
adc
loope
push
push
lock
loopne
xchg
aad
jb
sub
sub
mov
fiaddl
shll
sub
inc
sbb
enter
outsl
and
sbb
inc
ds
pop
test
mov
jmp
insl
xchg
or
stos
xorl
adc
xlat
mov
mov
aaa
out
push
mov
cmp
pushw
shl
in
or
dec
push
mov
push
push
dec
pop
mov
push
shll
scas
test
decl
and
popa
xor
sbb
loopnew
pop
xorb
outsb
nop
jne
mov
call
outsb
sub
leave
xor
mov
sbb
xchg
sbb
sub
pop
inc
lock
inc
sub
jmp
stc
rcrl
push
lds
cmp
adc
loop
push
sbb
sti
outsb
push
pushf
pop
inc
jg
hlt
adc
fstpt
dec
and
scas
xchg
inc
fnsave
jle
in
cmpsl
popf
out
mov
pusha
xchg
jp
or
insl
outsb
insb
mov
repnz
pop
test
jns
jle
push
inc
cmpl
int3
or
mov
adc
lea
or
pusha
push
addr16
dec
mov
and
xor
xlat
shr
dec
loope
cmp
pop
hlt
and
loopne
nop
in
lret
test
mov
icebp
add
mov
adc
fistps
rcll
daa
icebp
sbb
push
pop
jns
push
mov
cs
inc
addr16
sbb
jl
or
mov
inc
notb
bswap
mov
outsb
or
fstps
and
and
lock
shll
stos
out
fidivrs
inc
add
dec
pop
lret
push
pushf
sub
fs
test
lods
mov
bound
dec
jg
aaa
mov
push
lock
scas
rcrb
xchg
icebp
lahf
in
pop
jle
mov
test
shl
mov
push
enterw
fsubr
jmp
lret
dec
xchg
or
sub
mov
or
mov
into
or
movsb
pop
jmp
sbb
sbb
incl
arpl
inc
cvtpi2ps
push
test
sub
into
cmp
pop
sub
popl
aaa
and
repnz
jns
mov
xchg
lods
mov
jne
xlat
push
mov
dec
cmp
ja
mov
or
mull
mov
cmp
sar
dec
call
ja
out
cmp
mov
test
mov
cmc
jbe
push
fdivs
test
lods
xor
pop
sbb
sbb
data16
rcr
flds
loop
push
hlt
jo
jp
jecxz
and
and
lea
mov
loope
mov
mov
xchg
ss
movzwl
test
aam
repnz
cmpsl
addr16
cld
in
repz
mov
sahf
push
call
in
addr16
jo
int
scas
dec
push
and
cwtl
pop
testl
stos
cmp
cmp
pop
int3
mov
inc
daa
push
cld
xchg
jl
imul
xchg
push
add
fdiv
rorl
mov
cmp
push
inc
insl
or
sbb
jns
popf
xchg
or
sti
inc
mov
imul
add
dec
dec
cld
jmp
fwait
lahf
fimuls
push
lea
mov
sarl
mov
fwait
mov
enter
jae,pn
int3
sbb
addl
aaa
sbb
sti
test
sub
sub
jecxz
xchg
cltd
xor
cmp
mov
lahf
jo
mov
and
das
push
jp
cmpsl
mov
cmp
or
sbb
lods
frstor
imul
imul
xlat
jg
imul
imul
cmp
jnp
fbstp
ret
in
or
push
scas
loopne
aas
leave
dec
in
xlat
push
xchg
pop
popa
ret
cwtl
inc
xor
pop
aad
jbe
out
stos
ljmp
fcomps
decl
jo
insb
out
out
adc
push
adc
loopne
popf
and
int
ja
addl
xchg
mov
or
scas
jns
push
int3
leave
call
mov
std
addr16
das
adc
es
jo
xabort
jae
aad
scas
andl
rcr
add
mov
jp
jno
int
xchg
movsb
pop
and
shll
cmp
push
repz
movsb
loopne
push
test
dec
popf
es
xor
sub
fwait
xchg
push
in
adc
dec
mov
inc
sti
sub
ret
push
scas
and
mov
into
jnp
jb
outsl
sti
ds
mov
lret
push
mov
cmp
data16
imul
mov
inc
jnp
xchg
popa
adc
fcmovne
pop
stc
hlt
negb
adc
pusha
inc
mov
add
arpl
imul
and
lret
insl
or
aam
sub
jbe
lret
mov
cmpsl
lret
ret
bswap
push
int
in
fcmovb
push
inc
sbb
test
aad
test
je
xlat
cmp
mov
into
xchg
repnz
aaa
imulb
in
lock
xchg
jns
xor
out
or
mov
into
pop
cli
lods
pop
lock
and
daa
imul
mov
pop
cmp
rclb
mov
lcall
cmp
or
jb
mov
push
jecxz
push
push
stos
enter
and
mov
mov
cwtl
hlt
mov
ficoms
enter
scas
cmc
lret
mov
or
cmpl
aaa
cwtl
sub
sbbb
das
mov
mov
lds
scas
jg
lret
pop
cmp
call
mov
xchg
xor
shll
in
movsb
repnz
add
repz
fistpll
in
mov
sahf
leave
adc
and
lcall
add
jae
gs
inc
inc
sub
icebp
inc
xchg
dec
repz
in
fistpll
mov
inc
sbb
divb
mov
arpl
and
ljmp
pop
mov
shl
inc
sub
xor
dec
cmp
push
repz
inc
jbe
sahf
out
mov
jne
mov
add
jnp
add
sarb
push
test
push
pop
adc
pop
and
mov
cmp
aaa
cli
push
rcll
xor
lret
popa
std
pop
xchg
cmc
dec
jae
or
mov
fmull
loope
aas
mov
add
sub
lcall
mov
sbb
mov
pop
fnstcw
test
stos
out
movsb
sarl
sarl
dec
inc
out
cmpsl
jae
sbb
int3
pop
dec
jle
daa
push
mov
mov
xchg
sbb
sub
push
jp
push
add
xor
adc
lea
lock
push
mov
repnz
pop
jae
dec
clc
int
mov
movsb
sub
mov
scas
clc
mov
push
aad
adc
add
dec
mov
or
stos
jno
loopne
and
lods
mov
dec
jnp
ret
and
arpl
jbe
adc
imul
lret
push
mov
aad
repz
lods
pop
jns
push
add
cmp
adc
icebp
mov
and
mov
ficoms
adc
mov
cltd
pmulhuw
fldenv
fsubrl
arpl
mov
adc
bound
out
cmovs
imul
mov
sbb
aam
pop
stc
xchg
push
pop
xor
cmp
mov
xchg
mov
pop
push
and
andl
and
xchg
pushf
push
push
cmpsb
ljmp
inc
inc
lds
notb
push
aas
shl
pop
fbld
pop
ret
int
sub
jecxz
insl
or
jmp
mov
daa
xor
cwtl
pusha
sbb
xchg
movsl
loopw
jno
imul
fwait
mov
jnp
fcmovnu
movsb
repnz
sbb
mov
clc
sarb
test
jno
pop
dec
push
push
add
push
stos
sub
stos
fildl
in
push
rcrl
out
call
sti
and
inc
add
leave
pushf
jo
mov
stc
inc
jnp
inc
sbb
pop
xor
pop
aaa
pop
jno
xchg
leave
subl
mov
int3
in
stos
mov
call
aas
inc
mov
sub
pop
and
xchg
cwtl
sbbl
sub
movsb
ror
cmp
dec
nop
sub
push
or
xor
cmp
repnz
pusha
in
cmc
push
cmpl
mov
incl
pop
adc
das
push
rolb
out
cmp
cmp
out
xchg
arpl
aad
sub
incb
das
cmc
sahf
xchg
pop
sbb
inc
rclb
xchg
out
orb
cmpsb
dec
lods
ljmp
mov
jnp
cmp
sub
dec
mov
xchg
fwait
xor
repnz
out
mov
jmp
mov
push
push
daa
call
pusha
and
pop
mov
out
xor
mov
inc
jecxz
scas
orb
gs
xor
repnz
xor
sub
mov
ret
cli
sub
iret
pop
jmp
cmc
xchg
mov
or
std
mov
and
pop
in
imul
push
cmp
adc
xchg
or
cmp
ja
outsl
pop
or
roll
daa
mov
dec
sbb
sarl
jl
push
jp
mov
bound
and
push
repz
lock
cmp
dec
ret
lods
popa
test
rcr
or
and
xlat
lret
push
cld
cmpsb
mov
call
cmp
ljmp
jl
xchg
pop
mov
mov
and
jle
mov
bound
fisttpl
or
loop
roll
in
js
inc
mov
arpl
jb
xchg
push
sub
cltd
and
jb
pmuludq
add
sbb
sbb
int
or
or
cmp
paddsb
cltd
int
mov
insb
jmp
pop
je
movsb
mov
test
nop
mov
ret
pop
insb
data16
dec
scas
fiaddl
dec
sub
int3
aam
and
dec
insb
stos
or
sbb
rorl
and
xchg
sub
bound
test
adc
lahf
mov
dec
out
xor
mov
int
shrb
lret
mov
xchg
lods
pop
fwait
into
xchg
enter
mov
mov
enter
incl
xchg
pusha
sub
dec
fimuls
mov
fs
xor
addl
mov
inc
push
push
icebp
jae
int3
lods
mov
pop
movzbl
dec
xchg
test
and
mov
std
frstor
call
push
arpl
stos
cltd
fsubl
jge
cwtl
sti
cmpsb
or
xchg
add
pop
mov
push
inc
hlt
fs
out
lea
insb
std
inc
mov
fstp
sti
out
adc
bound
push
push
dec
dec
sbb
push
inc
aad
adc
and
rol
mov
pop
mov
shlb
mov
add
ljmp
or
add
clc
cmp
cltd
in
xor
in
push
and
scas
dec
and
ja
test
xor
or
gs
pop
pop
subb
inc
es
out
mov
leave
jge
xor
subl
pop
in
mov
popa
jno
dec
inc
int3
mov
bound
push
lea
lds
mov
push
sbb
sub
leave
xor
pop
xor
aam
sahf
rorb
add
jno
cmpl
push
add
int
push
cmp
adc
test
mov
mov
adc
outsl
out
push
ret
lock
dec
or
cmpsb
sub
addr16
faddp
hlt
test
aam
xor
shrb
and
xor
and
es
lods
xlat
fcompl
jge
out
sbb
lcall
push
popf
aad
roll
iret
or
scas
cmpsb
test
pop
mov
adc
pxor
repz
mov
lahf
pop
mov
insl
mov
into
es
and
mov
enter
arpl
push
and
xchg
inc
jae
mulb
mov
push
mov
xchg
dec
daa
orl
xor
test
les
pusha
mov
mov
mov
sbb
or
js
mov
xchg
jg
dec
out
jbe
push
cmpsl
icebp
and
lret
jo
ss
or
mov
sub
test
out
cs
mov
adc
pop
add
jnp
and
dec
push
cld
cmpsb
or
adc
nop
mov
loope
int3
pop
aas
jl
inc
fisttpll
incb
lcall
jmp
lret
pop
shll
into
push
cs
movsl
push
inc
mov
mov
ds
lahf
in
iret
xor
hlt
gs
lahf
jp
cwtl
or
ret
test
addl
call
sbb
ret
les
xor
cwtl
push
jb
pusha
push
xchg
pop
cmp
pop
sub
jno
test
xchg
incl
test
rcll
lret
xchg
fs
push
scas
dec
mov
xor
pusha
pusha
les
mov
mov
xchg
scas
inc
sbb
sbb
scas
and
dec
sbb
adc
cmpsl
mov
shr
aas
xor
mov
xchg
sbb
arpl
call
mov
inc
pop
adc
xchg
pushf
dec
inc
inc
cli
cmc
or
dec
pop
dec
xor
movsl
xchg
ja
mov
cmp
cmc
gs
inc
push
jmp
adc
mov
or
lret
out
das
inc
out
les
sahf
push
mov
rorb
cmp
jae
mov
mov
and
ficoml
repz
in
subl
jo
mov
jmp
lds
pop
mov
push
dec
loope
sar
subb
out
mov
cmp
push
repz
add
test
cmp
or
lock
jnp
cltd
jp
hlt
sbb
loop
lods
jb
lret
add
jo
jp
push
and
popa
rolb
mov
push
test
jmp
icebp
mov
pop
orl
push
jle
xor
loop
xor
mov
movsl
inc
arpl
cmpsb
in
and
sub
xor
push
sti
mov
mov
add
lods
jo
stos
cmc
fidivrl
xor
stos
cltd
xor
mov
pop
mov
adc
mov
mov
fisubl
mov
ror
dec
or
ljmp
imulb
jle
push
decl
cmp
dec
and
sti
ret
fmull
sub
sbb
and
inc
in
push
inc
mov
lahf
cli
or
and
sub
shl
pushf
sti
jnp
mov
cmp
push
ljmp
inc
xchg
or
cmp
in
pop
xor
add
popa
push
pop
pushf
subl
mov
int3
sbb
gs
sub
clc
lea
out
mov
sbb
fisttpll
jno
insl
add
lods
xor
mov
movsb
jb
or
mov
mov
fstpl
js
sbb
addr16
lods
mov
or
shll
add
and
add
fcmove
mov
enter
push
push
int3
fadds
mov
out
sub
shl
scas
gs
je
push
ja
gs
outsl
out
dec
int
popf
adc
or
cmp
mov
je
mov
inc
rorl
std
dec
mov
repz
adc
xor
rolb
pop
clc
mov
dec
or
cmp
jle
mov
mov
andl
lds
xorl
aas
int3
mov
add
push
cmp
pop
test
mov
xchg
mov
xchg
imul
adc
mov
sub
mov
dec
dec
dec
jnp
clc
test
mov
jnp
fstp
jbe
lods
addr16
icebp
fsubs
push
pop
xor
xchg
lcall
pop
xor
sbb
out
cmp
xchg
mov
mov
ljmp
push
movb
dec
inc
xchg
xchg
lret
movsb
fiaddl
cmpsl
jns
mov
jecxz
push
iret
mov
push
mov
pop
fistl
pop
sub
xchg
push
fldl
xor
jnp
shll
jl
push
jnp
testb
sbb
mov
cmp
and
mov
lods
inc
psubd
xlat
stos
cltd
divb
inc
pushf
addr16
lahf
cmp
dec
bound
or
jno
fidivl
mov
mov
bound
inc
mov
push
add
push
test
ss
pop
inc
cmpsb
not
pop
ds
int
xchg
xlat
cli
rcll
jmp
add
xchg
dec
mov
cmp
into
add
dec
sbbl
mov
jle
inc
jg
push
jecxz
jmp
orl
mov
in
notl
das
stos
xchg
jle
in
jmp
mov
dec
xchg
out
push
mov
jo
in
push
mov
pop
and
out
add
and
aas
push
push
mov
orl
imul
nop
and
test
hlt
push
jnp
gs
shl
inc
inc
cs
pop
adc
loopne
push
xor
fcoms
pop
fidivl
lock
lods
movsl
scas
clc
fcoms
mov
jl
push
or
jnp
xchg
daa
mov
sahf
cmp
subl
dec
cmc
cs
ss
xor
dec
lock
mov
push
push
nop
xor
jl
push
inc
xor
in
and
shlb
cmp
xchg
mov
ja
push
cmpsb
cmpsb
xor
test
and
and
pop
ds
lock
pop
cmpsb
cmp
push
insl
mov
les
pop
xor
sbb
push
xor
lods
es
pop
add
or
mov
lods
movsb
xor
popa
or
pop
out
sbb
rclb
loopne
ret
pop
inc
cmc
andl
mov
stos
mov
int3
lret
leave
xchg
sbb
std
out
aas
ret
jnp
dec
stos
int3
add
mov
cmp
jns
lahf
push
fnstenv
xor
js
jnp
pop
call
sti
pop
call
loope
gs
out
mov
aam
jle
loope
out
pop
jae
outsl
push
mov
je
pop
ljmp
fdivrs
outsl
jne
iret
bnd
jo
lret
xchg
sub
fbld
fadd
negl
sarl
mov
push
movb
ja
stos
fcoml
lcall
popf
call
movsl
push
and
notl
sahf
mov
inc
push
sub
lahf
out
mov
lahf
pop
clc
stos
stc
pop
repnz
pop
movsl
jle
sub
xor
cmp
sub
fmull
cltd
nop
mov
mov
jb
lahf
push
cmp
movsb
xor
push
call
lea
xor
xor
int3
cmc
push
movsb
sub
push
mov
in
adc
pop
pop
sub
inc
xchg
and
adc
ror
lret
adc
ss
addr16
adc
rcrb
lock
je
inc
or
stc
fldt
test
adc
jmp
sbb
cmpb
pop
sar
mov
imul
fcom
sbb
mov
push
in
mov
sbb
sub
mov
or
add
jno
sbb
jo
idivl
hlt
adc
inc
aam
dec
push
sbb
fcmovne
imul
ljmp
xor
inc
sbb
mov
and
lret
ss
pop
xor
push
sbb
push
jg
daa
movsl
mov
pop
push
push
movsl
mov
pop
push
push
mov
lret
dec
xchg
mov
or
aaa
loopne
shrb
nop
dec
jb
cmp
test
adc
test
and
lcall
xchg
enter
ljmp
xchg
shlb
mov
out
aaa
and
nop
pop
pop
popf
jg
enter
or
inc
stos
lea
add
lret
cmp
lret
inc
mov
jg
pushf
add
add
adc
adc
xor
sub
test
jb
stos
xor
fldcw
mov
xchg
sub
push
cmp
adc
mov
xchg
push
push
popa
jmp
cmp
or
jbe
cmp
aad
and
gs
movl
outsl
jge
dec
iret
push
or
call
in
les
dec
loop
dec
xchg
rcrb
add
mov
xchg
aas
mov
shll
and
aam
mov
movsl
adc
nop
jnp
out
adc
push
mov
push
je
lcall
int
les
pop
mov
push
fsubs
mov
pop
inc
xor
xchg
jns
mov
test
jmp
dec
ficomps
je
jle
pop
jb
jle
fsts
shlb
jne
cmc
push
stos
inc
dec
stos
shll
sbb
test
mov
cmpsl
jecxz
jae
in
inc
movsb
or
dec
stos
cltd
add
loope
jb
mov
lods
fistps
test
fs
xor
cmp
xor
nop
pop
xchg
aam
and
call
jl
ds
mov
int3
js
jmp
rcl
jge
xchg
test
cs
out
adcl
sahf
scas
enter
fcompl
jecxz
inc
lock
out
nop
adc
repz
xchg
sarb
dec
out
xchg
sbb
fwait
das
lea
stos
fnsave
push
jp
xchg
sbb
jp
adc
rcll
jge
aas
xchg
push
mov
aam
pop
outsl
sbb
stos
pop
cmpsb
jne
jo
jmp
imul
pop
ljmp
loope
jbe
mov
fmulp
xor
mov
subl
jno
adc
test
cmp
inc
das
insl
fsts
ss
dec
pop
cmp
mov
mov
fnsetpm(287
xor
movsb
cmpsl
push
frstor
es
mov
fnstcw
push
xchg
jno
push
outsl
adc
sbb
or
sub
sub
inc
das
and
xchg
les
jg
and
xor
or
push
shr
jle
xchg
adc
lret
jg
mov
push
mov
inc
push
insl
xor
sbbb
and
sbb
cmp
insl
push
sub
xor
xor
mov
jno
mov
scas
pop
xor
stos
dec
popa
push
xchg
pop
daa
push
cmp
ud0
icebp
pop
pusha
movsb
int
loop
xor
sub
mov
imul
inc
adc
ret
sahf
jle
rol
js
and
xchg
push
sbb
inc
or
cmpsl
js
jno
cmc
call
mov
outsl
ret
xchg
mov
fldenv
or
or
in
cmpsl
pop
push
xchg
ret
cmp
nop
repnz
mov
mov
hlt
sbb
testl
aad
push
sbb
xchg
int3
clc
pop
cli
test
rorl
lods
insb
lahf
ljmp
out
inc
lcall
filds
fs
pop
mov
enter
pop
inc
ret
mov
notl
fildl
jnp
push
in
leave
out
divb
adc
mov
lcall
push
cs
out
lcall
test
aam
movsb
mov
inc
fdivp
mov
es
xor
in
jo
inc
inc
cmpsb
les
jb
pop
sahf
xchg
jg
mov
push
dec
bound
mov
ret
std
and
in
call
out
stc
ret
lea
and
mov
mov
popa
and
stos
adc
jae
mov
mov
mov
xlat
mov
inc
and
jo
xlat
and
shlb
xor
outsb
mov
hlt
inc
cmp
punpckldq
mov
lret
mov
jl
fcoml
pop
test
mov
adc
shl
jae
data16
rcr
clc
ret
inc
ds
or
mov
xor
test
pop
xchg
int
jge
std
fimull
mov
sahf
scas
jl
push
adc
pushf
dec
aam
xor
cmc
or
mov
in
sub
add
and
pop
jge
cmpl
jbe
cmpsb
cmp
ljmp
add
pop
pop
movsl
jle
movsb
das
xchg
cli
xchg
lods
dec
xchg
je
mov
popa
adc
lcall
lahf
bound
sbb
hlt
pop
mov
mov
insb
jmp
arpl
iret
rcrl
and
mov
imul
or
int
pop
pop
inc
testl
adcb
mov
mov
fdiv
push
rcll
mov
pop
jne
xor
sub
add
xchg
pop
dec
int3
xchg
dec
repz
cmpsl
into
jl
iret
sbb
lods
xor
cld
and
adc
in
push
cmp
push
push
xlat
lods
push
movsl
insl
cmp
sti
mov
fwait
add
lock
jo
pusha
pop
fadds
mov
ret
loope
inc
mov
mov
enter
mov
mov
mov
pushf
mov
xchg
xor
les
mov
dec
lahf
cmp
add
sub
fcmovne
loop
add
addr16
inc
xor
les
pop
cmp
arpl
push
lret
cmp
xor
mov
notb
inc
leave
mov
jns
xor
dec
inc
sbb
jp
imul
xchg
aad
lock
sub
idivb
jnp
ds
jno
xlat
dec
test
cmc
jne
jge
cmpsl
lret
pop
clc
xor
jmp
out
pop
inc
pop
xchg
gs
lock
jno
cmp
fstpt
lds
mov
mov
pop
in
and
aaa
adcl
sti
in
jae
iret
dec
mov
add
pop
xlat
subb
gs
sarl
das
cmp
bound
jge
icebp
ret
loop
out
dec
es
and
orl
fsin
xchg
pop
hlt
jp
inc
jecxz
or
movsl
mov
inc
pop
nop
movsb
out
rorl
mov
dec
into
add
mov
test
mov
scas
lahf
mov
test
test
mov
or
in
mov
pop
or
daa
insb
fmull
call
jae
fwait
inc
inc
pop
jbe
mov
lret
jecxz
pop
push
jbe
imul
dec
push
sbb
in
cmp
fnstsw
mov
or
push
and
dec
sahf
lock
adc
icebp
xchg
je
or
bound
movsb
ret
sahf
testl
jo
mov
jmp
out
cmp
cld
sbb
cmc
in
or
je
pusha
js
lret
fdivl
inc
mov
dec
dec
xchg
add
lret
mov
dec
xchg
out
roll
nop
push
movb
sub
fwait
sbb
shrl
mov
add
adc
cs
ja
sub
and
addr16
xchg
cmp
icebp
inc
es
jp
imul
inc
and
and
xlat
dec
scas
out
cmp
jae
data16
xchg
jge
roll
and
cmp
mov
cmp
ljmp
out
cmp
mov
jbe
jge
and
call
adc
es
xchg
or
or
cmp
cmp
orps
jb
scas
mov
dec
je
std
push
mov
mov
aaa
aad
call
arpl
mov
inc
inc
jecxz
testl
sbb
leave
mov
push
cmp
popa
cmc
push
shlb
mov
dec
lea
push
pop
mov
lock
sub
and
insb
jle
xchg
mov
fiadds
adcl
lock
mov
cmpsl
nop
int3
stos
add
lods
add
les
cltd
dec
lcall
popa
sbb
jp
push
add
mov
stos
pop
stos
adc
xor
add
cltd
push
lret
or
mov
aad
dec
insb
and
pop
mov
cmpsb
sbb
test
popa
mov
std
pop
adc
daa
outsl
ljmp
lock
sbb
push
in
sets
adcl
xchg
pop
pop
jo
cmpsb
pop
hlt
xchg
sub
inc
jle
sahf
in
dec
pop
mov
push
dec
movsl
pop
jl
inc
xorb
sarb
shr
popf
outsb
in
nop
lcall
mov
mov
fmull
pop
outsl
rorl
pop
push
mov
aad
sti
lea
pop
mov
hlt
cmp
push
push
mov
les
pop
xor
dec
cwtl
flds
adc
push
pop
lds
sbb
lods
mov
shlb
mov
stos
dec
pop
cmp
mov
xor
cmp
lret
sub
or
mov
jne
push
cwtl
mov
cltd
cmpb
mov
mov
incl
icebp
stos
int3
pop
xchg
fwait
pop
push
cs
adc
pop
inc
mov
dec
gs
jmp
add
out
iret
leave
sarb
cld
mov
subl
sbb
xchg
incb
jp
and
lock
scas
add
ror
fisttpll
mov
in
ds
or
cmp
ret
pushw
fists
xorl
repnz
xchg
jbe
jnp
cmp
jp
mov
push
or
add
cmp
icebp
xor
pop
fisttps
add
leave
mov
mov
dec
adc
adc
mov
cmp
push
aad
shlb
popa
dec
cmp
sub
mov
add
les
je
sbb
dec
sbb
loope
fmull
lea
jecxz
popf
xor
popf
xchg
imul
cmc
ret
jp
lds
pushf
data16
aam
lret
popa
xchg
add
leave
loope
push
push
fnstsw
out
inc
andl
arpl
mov
mov
gs
movsl
lods
add
stos
add
xchg
or
mov
and
ljmp
movb
iret
and
in
xor
jge
sub
sbb
push
pop
xor
bnd
inc
mov
push
jnp
sti
xor
dec
push
in
jno
adc
flds
imul
out
mov
lds
pop
cmpsb
addb
jmp
outsl
mov
lret
adc
addl
push
xchg
sahf
mov
aad
sahf
pop
inc
in
nop
mov
mov
add
aaa
dec
sub
aas
xchg
mov
jmp
scas
aas
xorl
sub
test
jmp
rorl
out
lock
jmp
loope
test
dec
xlat
imul
pop
cs
xchg
nop
aad
xchg
inc
mov
aad
pushf
sbb
in
xchg
sar
adcb
mov
and
pop
sbb
pop
xorl
fidivrl
inc
testb
xchg
mov
das
aas
or
xchg
ljmp
jmp
out
push
xchg
pop
js
jle
xchg
ja
cmp
inc
dec
cwtl
mov
add
adc
std
cltd
adc
or
negl
adc
mov
pushf
cld
ja
cs
add
sahf
andb
ror
push
sub
ds
inc
and
rcll
testl
inc
adc
push
js
xchg
mov
cmp
mov
js
es
push
dec
push
cltd
mul
daa
call
pop
mov
xlat
push
add
mov
ja
and
mov
and
aaa
shlb
das
mov
iret
sbb
xchg
shll
out
aam
mov
pusha
in
jae
dec
mov
push
lods
out
sahf
dec
aad
xchg
outsb
imul
mov
sub
push
push
loopne
adc
pop
stos
in
push
loopne
jl
test
roll
sarb
hlt
xchg
xchg
addr16
add
lds
mov
test
jne
popa
nop
push
aaa
jle
push
popf
jne
shrl
mov
test
pop
xor
adc
push
cmp
mov
mov
gs
sub
fldl
bound
adc
mov
or
sbb
jg
sbb
pop
loop
fcompl
xlat
mov
call
cmp
stc
mov
add
cmp
mov
add
jb
lret
and
sbb
sbb
cmc
inc
and
pop
faddl
fisubrl
insl
push
mov
mov
mov
out
cs
adc
cmp
mov
jmp
mov
push
dec
xchg
jne
dec
cltd
sbb
inc
fbld
in
mov
pop
mov
sub
mov
mov
pop
push
xor
cmpsl
adc
and
pop
pop
jns
inc
inc
lods
pop
cwtl
loop
imull
xchg
outsl
mov
scas
js
mov
adc
inc
pop
dec
xchg
xor
and
jae
xchg
cmp
push
xor
sbb
mov
jge
shl
les
mov
adc
imulb
xchg
scas
in
lods
xchg
jmp
or
dec
mov
add
push
bound
pop
push
bnd
idiv
and
cmp
add
adc
jno
aaa
into
fdivs
icebp
icebp
pop
imul
mov
sbb
es
adc
mov
sahf
into
repz
popa
cmpl
mov
loopne
sbb
call
add
inc
rclb
xchg
jecxz
pop
aam
xor
xchg
inc
sbb
or
dec
repz
or
mov
dec
lock
xor
adc
ljmp
push
arpl
pop
mov
cmp
push
push
shrl
fwait
shrl
push
pushf
mov
insb
sub
dec
popa
dec
repnz
xchg
int3
int3
test
in
nop
adc
dec
inc
inc
mov
pop
sbb
shlb
int
adc
and
in
out
pop
mov
pop
sbb
lods
sti
inc
aas
subl
mov
mov
xchg
mov
sub
and
in
adc
bound
in
icebp
lcall
dec
pop
add
test
inc
bound
sbb
and
stos
inc
js
mov
ss
sbb
mov
mov
daa
sub
cltd
in
sub
aas
into
and
adc
fcompl
mov
fstps
loope
lret
mov
addb
sub
aad
jae
lret
xchg
leave
xchg
pusha
pop
pop
jecxz
sahf
nop
lcall
dec
xchg
pop
pop
jge
dec
ret
push
mov
js
call
data16
jge
insb
pop
jb
pop
cmp
xchg
push
jecxz
fidivl
mov
call
push
mov
pop
mov
fucomip
xor
mov
jle
andb
fcoms
mov
movsl
cmc
dec
test
and
mov
xor
loop
sub
mov
das
inc
or
rolb
xchg
iret
int3
pushf
cmp
fsubs
jb
sti
dec
fldt
in
sub
fimuls
lea
add
into
js
int
jns
xor
das
jp
ljmp
push
add
jns
shl
pop
in
fcmovnb
cld
add
mov
ffree
cmp
icebp
aad
das
aas
adc
clc
inc
and
push
mov
mov
mov
pop
push
shlb
out
cmp
lret
stos
stos
ljmp
xchg
mov
mov
mov
pop
inc
inc
and
inc
enter
mov
dec
lret
add
leave
jae
rcrb
stc
std
push
ja
mov
cmpl
lock
or
aaa
mov
movsl
test
das
mov
push
cmp
outsb
es
add
sbb
pop
xorb
daa
mov
nop
fisttps
idivl
repz
addb
sbbl
ljmp
in
daa
add
nop
addr16
mov
pop
data16
cmpsb
and
enter
addb
or
pop
arpl
pop
ret
push
popf
dec
or
adc
adc
adc
jno
fsubs
push
sbb
mov
xlat
xor
push
or
fisubs
inc
lods
jle
lcall
pop
aad
imul
fnstenv
sbb
pop
inc
rclb
inc
inc
shll
je
aam
daa
dec
cvtdq2ps
push
sbb
pop
inc
or
pop
sub
cli
cli
shll
sub
cmp
in
mov
and
fimull
sti
leave
test
aad
cli
mov
mov
lret
repz
shll
xor
xlat
push
xchg
pusha
xchg
push
lds
add
in
xor
lds
add
adc
jae
arpl
imulb
xchg
repnz
daa
push
nop
movsb
in
insl
rcrl
jb
mov
mov
push
pop
ja
lret
clc
dec
adc
xchg
loope
add
dec
lods
fistl
sub
mov
addb
fcomi
xchg
inc
aas
aam
das
nop
insb
dec
xchg
and
inc
addr16
mov
sbb
push
xor
sub
dec
rclb
pusha
jo
push
push
stos
imul
int
fiaddl
arpl
imul
nop
push
jns
mov
cmpsb
dec
pop
mov
adc
pop
insl
or
leave
sahf
inc
mov
out
jbe
pop
mov
js
ficomps
mov
cmpsb
int
cld
jo
mov
test
sarb
lahf
sbb
and
iret
and
jmp
insb
mov
cs
jns
sti
sub
popf
and
jbe
sbb
inc
in
subl
popf
sbb
mov
add
pop
fldcw
das
sbb
add
adc
iret
and
mov
cmp
cmpl
pushf
xorb
test
gs
in
push
mov
xchg
pushf
jl
push
mov
enter
mov
push
cmp
je
inc
js
jmp
je
mov
sub
adc
inc
test
xor
mov
jp
adc
jnp
or
jecxz
adc
pop
jne
mov
out
ret
ret
adc
jb
add
fwait
and
in
loop,pt
popf
insb
xor
jne
jne
shlb
adc
pop
insb
test
push
pop
sub
ret
cli
ret
inc
xor
jnp
pop
add
cmpsl
inc
xlat
push
pop
push
mov
out
mov
mov
xchg
xchg
shrl
leave
xchg
es
into
leave
les
rcrb
popf
pop
cmp
test
out
xor
mov
sub
xchg
jne
lea
push
jns
cwtl
xchg
and
int
jmp
jb
stc
sti
pop
loop
cltd
fldcw
or
adc
inc
pop
shrb
xchg
jmp
mov
jmp
scas
xchg
push
jle
mov
xchg
test
gs
push
xchg
pushf
lret
mov
dec
fiadds
cmp
xchg
fists
pop
adc
xchg
sub
iret
fadds
fwait
jns
mov
sbb
mov
jecxz
mov
mov
xchg
into
lea
push
mov
and
inc
and
mov
call
jb
in
push
fsubrl
data16
sti
adc
sub
adc
popf
int
mov
adc
mov
clc
xlat
xlat
jg
xchg
mov
mov
cmp
mov
pop
les
aam
or
jmp
fmull
daa
mov
mov
js
aad
rol
or
aam
pop
cmp
outsb
ret
icebp
xchg
mov
rolb
movsl
rolb
or
mov
sahf
loopne,pn
mov
das
jne
push
in
bt
ljmp
inc
repz
in
jmp
inc
lods
xor
sbb
test
sar
xchg
inc
loop
jne
push
jno
fldenv
rorb
fdivrl
or
mov
push
nop
inc
enter
test
sbb
mov
and
cltd
fmulp
mov
out
push
sbb
sbb
xchg
fildll
push
pushf
and
test
addb
xchg
popa
mov
sub
notl
inc
add
mov
sub
mov
enter
loop
sbb
jmp
jg
mov
out
cmp
sbb
xor
push
xchg
jmp
sbb
jmp
scas
in
and
inc
lods
stc
push
rcr
mov
mov
pop
sbb
xlat
mov
ds
pop
push
fwait
insb
lods
es
cmp
in
mov
aaa
stos
or
aaa
or
mov
dec
ds
xchg
cmpb
lods
sbb
out
sete
divb
outsb
mov
mov
fbld
xchg
jb
shlb
daa
pop
pop
dec
stos
outsb
jb
test
iret
sub
push
sbb
mov
lods
mov
movsl
xor
lret
xor
stc
and
mov
or
cmp
pop
dec
cwtl
notb
or
or
shlb
mov
adc
push
xchg
out
sub
es
inc
or
mov
jmp
add
mov
outsb
out
adc
sbb
mov
int
call
fdivr
and
xchg
dec
cli
hlt
push
movsl
mov
std
mov
aas
mov
mov
lea
cmp
int
inc
test
jbe
xor
xor
mov
sahf
scas
sbb
jns
imul
into
outsl
pop
movsl
hlt
in
and
out
add
xchg
push
dec
inc
inc
lods
mov
mov
mov
mov
adc
es
mov
mov
xchg
imul
mov
mov
mov
clc
inc
inc
push
push
movsb
adc
mov
loope
sahf
or
sub
cmp
ret
insl
hlt
and
mov
scas
rclb
pop
xlat
les
or
jge
cld
xchg
mov
inc
cmp
or
mov
popf
and
mov
fmull
sbb
or
leave
push
ret
testl
dec
sahf
adc
inc
mov
adc
int3
sub
outsl
push
xor
sub
cld
es
sub
jp
mov
std
inc
sbb
aad
mov
scas
cmp
mov
cmp
mov
and
sbb
icebp
pop
cmp
push
cwtl
sbb
ret
add
and
arpl
rolb
pop
mov
push
add
xchg
jne
and
inc
xorl
fdivl
add
mov
inc
or
cli
loopne
sub
lret
inc
test
jo
in
adc
repz
inc
mov
mov
test
mov
ljmp
movsb
mov
dec
cmp
xchg
out
fdivrs
xor
xlat
jl
push
out
call
push
std
pop
xchg
repz
lahf
jle
lret
mov
in
mov
push
nop
dec
popf
xor
push
pop
ss
xorb
insl
mov
adc
cmp
int3
mov
dec
add
test
loop
int3
test
and
enter
inc
add
push
fisttpll
mov
jmp
dec
insl
sbb
mov
int3
movsl
in
fninit
jnp
ss
sbb
lods
add
push
test
adc
jnp
nop
jl
cmp
ret
addr16
jnp
adc
mov
inc
divl
sahf
repnz
dec
mov
out
imul
sbb
divl
sbb
cltd
cmp
mov
jno
and
sbb
es
loopne
mov
das
lret
daa
in
push
call
and
shrb
shll
xchg
icebp
push
test
insl
pop
js
sub
mov
pop
aas
in
or
or
sti
cli
fsubl
lret
push
and
test
fstpt
in
mov
out
lret
xchg
shl
enter
les
bound
push
push
mov
and
insl
and
outsb
cld
int3
imul
rclb
fs
dec
and
inc
movsb
aaa
and
pushf
cmpsl
shlb
and
test
loop
pop
mov
inc
sbb
push
adc
testb
pushf
movsb
hlt
test
mov
stos
call
sarl
arpl
mov
jg
cmpsb
pop
test
ljmp
enter
jle
add
inc
pushf
xor
stos
push
stos
adc
push
bound
dec
xchg
push
xlat
xchg
into
in
popf
dec
mov
aad
ret
jb
push
inc
icebp
xchg
cmpsb
add
loope
outsl
pop
sub
clc
mov
andb
xchg
cld
into
sahf
mov
in
and
cmp
les
add
pop
cmpsl
mov
xchg
insb
add
mov
movb
xchg
loop
xchg
cld
aas
inc
sahf
jne
dec
adc
js
add
and
fs
lds
stc
xor
roll
and
shlb
shll
xchg
shlb
lods
jns
cmp
shlb
ret
sbb
adc
xchg
movsb
jmp
xor
das
mov
loopne
repz
cli
cmp
xlat
adc
fildl
or
lret
insb
mov
loope
jbe
xor
outsl
add
pusha
cmp
jle
ficoml
jle
scas
ljmp
jbe
sub
mov
xchg
jbe
mov
xchg
push
cmp
sbb
mov
dec
dec
sbb
adc
push
cmpsb
cltd
mov
cmp
imulb
xchg
pop
les
jecxz
mov
lcall
fwait
push
cmpsb
push
xorb
dec
mov
sbb
xchg
and
das
mov
mov
shlb
frstor
pop
pop
loope
roll
cmp
and
movsb
jp
and
rcll
jecxz
popa
xchg
jnp
xor
dec
mov
dec
mov
repnz
sti
and
sub
out
cwtl
test
lahf
out
xor
cmpsl
and
int3
pop
and
faddl
jge
or
pop
push
int3
pop
into
and
or
jo
adc
push
adc
movl
aaa
insb
inc
and
call
cmpsl
cmp
outsl
mov
dec
adc
lods
push
mov
mov
hlt
mov
sbb
bnd
cwtl
mov
rorb
adc
fbstp
pop
mov
lret
adc
in
mov
cmp
mov
sbb
xchg
in
imul
mov
and
addl
aas
cmp
xchg
jo
roll
xor
sub
test
and
jb
scas
add
dec
sbb
out
mov
or
in
iret
pop
sub
mov
mov
out
daa
iret
lods
xor
dec
xorb
outsb
inc
cmp
xchg
test
xchg
rcrl
lahf
imul
cmpsl
jg
dec
mov
dec
fidivs
dec
inc
cmpsb
mulb
dec
orb
leave
rcll
sub
leave
test
aad
outsb
sbb
jnp
out
pop
dec
jnp
push
lods
jg
sbb
shll
data16
dec
add
dec
lea
lret
addb
mov
fnstcw
push
test
aaa
dec
std
sub
imul
sub
mov
leave
mov
sub
fisubrl
inc
icebp
enter
rorl
sar
mov
outsb
xchg
or
xlat
pop
mov
cwtl
and
out
cmp
movsl
sbb
fcmovnu
int
sti
cmp
pop
cmpsb
fdivs
or
test
outsb
shl
idivl
jno
jo
or
and
and
loop
imulb
fisubs
push
imul
mov
sarb
test
repnz
xor
pusha
aaa
fstpt
lcall
sbb
inc
daa
pop
jb
adc
test
mov
xchg
in
lcall
movsb
adc
and
pop
fpatan
or
add
scas
jae
int
adc
jecxz
adcb
cli
add
andl
xor
mov
ret
jge
insb
dec
inc
div
adc
lds
add
js
leave
js
add
push
xchg
cmp
lods
repnz
mov
xor
loop
in
push
jo
jno
xor
sub
imul
xchg
arpl
les
mull
repz
adc
sbb
int
out
sbb
in
addl
jmp
nop
pop
sti
and
sti
inc
and
test
out
mov
imul
xchg
hlt
dec
mov
scas
cld
aam
ja
icebp
es
xor
mov
mov
aaa
mov
mov
mov
adc
add
out
lahf
mov
or
pop
rcll
aam
add
sbb
loope
dec
test
fdivrs
mov
xchg
add
inc
in
mov
pop
jbe
adcb
xchg
test
pop
mov
iret
test
sbb
mov
push
mov
inc
dec
lods
mov
sarl
pop
testl
es
cmc
push
fldenv
mov
xchg
dec
fnstcw
into
scas
movsb
addl
pushf
pop
xchg
cs
test
int3
push
fimuls
or
push
pop
mov
cld
ficompl
data16
mov
mov
mov
faddl
test
jecxz
scas
fsubl
cmp
test
mov
jbe
movsl
jnp
or
lret
cwtl
lods
push
mov
mov
bound
aam
sbb
ds
mov
mov
cmp
imul
jnp
xchg
mov
andb
sub
clc
fcom
out
xchg
incl
les
inc
int3
xchg
add
cmp
cmp
xchg
lock
sbb
enter
and
inc
data16
sbb
outsl
andl
or
aas
popf
rcl
cli
ds
dec
pop
and
stc
xchg
pop
insb
sbb
mov
jg
aas
aad
movsb
mulb
shll
jo
repz
xchg
cmp
xchg
sub
pminsw
add
mov
je
enter
inc
inc
push
lods
push
mov
icebp
shl
lret
sbb
xor
inc
lods
jmp
xlat
xor
pop
cmc
dec
and
sbb
xor
and
pop
sarb
stos
mov
testl
xchg
sahf
pop
cmc
mov
jnp
les
rorb
cmp
shll
mov
xchg
mov
mov
lahf
sub
adc
inc
in
sbb
and
xchg
sub
push
mov
adc
adc
xor
and
or
push
dec
por
ljmp
cmp
ss
mov
sub
out
pop
rol
repnz
popf
popa
es
cmp
cmp
mov
in
fdivl
lds
cmpsl
pop
mov
aad
std
add
scas
fcoml
out
lods
fwait
movsb
stc
xor
add
xchg
repnz
cld
inc
mov
fdiv
stos
lods
mov
push
xchg
test
les
aad
add
aas
insl
add
imul
call
pop
js
outsl
andb
sbb
mov
outsl
pop
xlat
cmp
dec
or
leave
ret
xorl
insb
add
cmpsb
add
lds
and
and
jmp
cmp
pop
pop
mov
pop
pop
or
orl
arpl
xor
bound
jo
arpl
pop
add
aaa
push
cmpl
scas
fisttps
aas
and
aad
or
push
lock
cmp
dec
dec
mov
lock
insb
and
sub
jmp
mov
mov
sub
adc
cmp
xchg
lcall
push
mov
xchg
mov
aas
fistl
sahf
mov
sahf
in
insb
inc
jecxz
pop
ljmp
sub
rcll
push
je
in
out
sbb
mov
dec
imul
add
cmpl
adc
les
rorl
les
dec
aam
xchg
mov
push
loope
adc
inc
and
fidivs
push
xchg
fists
xor
shlb
add
lods
imul
test
push
stos
hlt
lret
fsubrl
push
sbb
pop
jns
adc
les
gs
pop
mov
call
fnsave
inc
pop
stc
scas
enter
cld
dec
mov
shl
and
rcr
cwtl
add
in
imul
adc
sub
mov
push
lods
aas
rol
xchg
xor
call
imul
push
cmp
je
jbe
repnz
jg
ss
outsb
mov
add
rcrl
cli
fistl
dec
fdiv
mov
mov
dec
scas
pushf
or
mov
mov
insb
xlat
pop
clc
and
xor
and
dec
jl
or
test
jp
shlb
sbb
mov
push
cmc
pushf
push
and
adc
pop
jno
adc
push
inc
or
loopne
test
in
dec
dec
lods
xorb
enter
mov
push
out
fwait
jne
xchg
rcr
adc
movl
pop
arpl
mov
fdivr
push
cmp
and
pusha
and
xor
js
pop
and
retw
outsb
cli
cmc
aad
jle
pop
or
ret
sbb
push
mov
stos
out
add
ja
rol
push
cmp
add
pushf
push
imul
ret
xor
fldt
inc
gs
stos
cmc
aam
or
mov
rcll
cwtl
jbe
cmpsl
push
pop
jle
data16
test
add
sub
xchg
push
loop
loopne
jns
push
jp
mov
and
jle
scas
mov
or
or
in
pop
das
push
lock
shr
leave
add
iret
sub
sbb
int
sbb
push
push
fs
xor
into
jae
dec
add
lcall
jne
xchg
push
jp
stos
xor
xchg
call
shll
in
mov
ljmp
push
mov
int3
shll
jns
and
pop
push
mov
ds
and
imul
repz
xchg
add
adc
ljmp
or
jnp
push
cmc
ljmp
or
jo
mov
push
and
xorl
adc
add
rcr
add
repz
push
ja
add
ss
xor
inc
lods
pop
dec
shlb
pop
cmp
sub
mov
pop
mov
adc
xchg
mov
jg
mov
dec
xchg
push
cmc
sarb
sahf
aaa
xchg
inc
jns
stos
mov
cmpb
test
bound
mov
sar
xchg
mov
je
icebp
sbb
and
cmpsb
mov
add
add
jne
jo
jecxz
or
adc
mov
in
pusha
mov
test
push
dec
push
inc
xor
arpl
xchg
sub
push
dec
pop
pop
shrb
push
pop
adc
pop
pusha
mov
xchg
in
push
xchg
sbb
mov
das
ret
adcl
mov
mov
imul
cltd
mov
outsb
mov
push
sbb
jge
add
in
dec
fcmovb
lods
cmp
pop
int3
push
sti
jb
in
or
jp
xchg
stos
lret
push
dec
jnp
js
jmp
push
jle
sbb
in
movntq
push
push
sbb
call
mov
push
mov
scas
stos
ret
pop
icebp
lods
out
push
inc
stc
not
repnz
movsl
xor
cmp
cmc
js
and
add
xchg
cmp
dec
sbb
std
xor
aad
setp
icebp
lahf
mov
sbb
insb
lods
and
adc
insb
fcmovb
xchg
pop
out
sub
xchg
insb
ljmp
add
cmpsb
pop
es
pop
mov
pop
lock
mov
in
outsb
addr16
lock
popl
sub
aam
adc
jbe
imul
mull
adc
dec
das
sbb
xlat
jo
out
push
inc
sti
pop
jno
lock
xchg
in
loop
out
out
ret
test
lds
inc
sar
lret
lcall
and
stc
ja
and
sub
lcall
iret
insl
push
cltd
inc
dec
xor
imul
pop
mov
cwtl
addr16
inc
call
in
mov
and
dec
or
lret
imull
sbb
and
xchg
or
fcomi
inc
sbb
inc
insb
sub
fmull
pusha
je
test
sbb
mov
push
mov
jae
xor
mov
fdivl
xchg
nop
mov
js
dec
mov
push
out
mov
popa
pusha
ljmp
jmp
bnd
loope
sub
adc
es
jge
add
inc
dec
pushf
ret
in
jo
fdivrp
in
repnz
pop
and
mov
daa
nop
lret
cs
push
ljmp
mov
add
cwtl
icebp
inc
pop
sbb
cmp
xor
fucomi
ret
test
shrl
ret
inc
movsb
or
sbb
test
movb
test
scas
int
loope
jnp
iret
push
jae
cmp
jecxz
inc
js
cmp
bnd
in
aam
and
lret
and
shll
mov
xor
xor
dec
call
addr16
adc
int
ret
or
or
and
jl
scas
cwtl
out
imul
mov
ds
mov
stos
sub
add
movsb
inc
cs
jle
mov
cmpsl
add
sahf
mov
and
arpl
mov
fildl
lret
or
out
jo
pusha
icebp
cmp
pop
iret
outsl
jne
out
and
jg
or
je
sub
or
faddl
xchg
adc
loope
and
roll
pop
dec
cmp
dec
ds
leave
mov
lea
sbb
pop
inc
cwtl
sub
pop
jnp
not
xlat
push
out
dec
popf
jnp
pusha
jle
add
pop
push
stos
adc
fsubrl
outsl
push
or
xchg
icebp
flds
ss
jne
std
mov
cmpsl
add
aad
push
mov
sahf
int3
imul
adc
dec
cmp
mov
stos
mov
mov
or
mov
mulb
mov
adc
arpl
cmp
jne
add
sbb
pop
mov
faddp
push
es
jne
out
cmc
jmp
mov
pop
gs
lret
push
xor
sub
push
push
mov
sbb
dec
les
bound
pushf
xor
sbb
loopne
and
mov
mov
and
dec
mov
imul
dec
in
out
sbb
das
out
cmpsb
mov
pop
cmpl
dec
rorb
and
fbld
mov
test
jecxz
ljmp
es
adc
push
xorb
pusha
inc
mov
jns
mov
sub
movsl
or
dec
or
testb
sbb
leave
sub
orb
fstps
mov
sbb
jo
mov
sti
xchg
into
add
cmpl
and
cs
daa
inc
je
adc
ja
fs
insl
adc
adc
fists
lcall
jg
cli
sbb
xchg
dec
scas
cmp
fwait
cmpsb
add
out
dec
test
cmp
and
mov
lds
insb
insb
inc
loop
adc
ljmp
cs
sbb
cmp
leave
lods
imul
cmp
and
decl
decb
loop
into
ror
cmp
lret
xor
mov
cmp
sub
fs
jmp
add
rcrb
push
les
mov
or
mov
sbb
dec
xor
test
add
adc
jb
fucomi
lods
test
movzbl
addl
jp
add
jne
inc
lea
jmp
lahf
xor
cs
lahf
dec
adc
xchg
mov
daa
lds
pushf
jno
pop
in
sbb
ss
lahf
adcl
inc
push
cmp
int
cmp
fcmovnb
add
jmpw
int
bt
sbb
fwait
jns
test
negl
vmwrite
xchg
popa
or
inc
test
fisubs
lods
add
xor
push
mov
pop
call
inc
ds
mov
pop
or
testl
fmuls
pop
push
pop
in
xchg
mov
xor
mov
cmpl
sahf
cmc
jp
dec
movsl
adc
nop
and
mov
aas
pop
jg
pop
xchg
push
push
and
push
pop
pop
jns
mov
xor
shlb
xor
adc
out
mov
xor
xor
xlat
mov
or
in
dec
and
mov
or
or
mov
cs
mov
jnp
fstpt
test
jecxz
pop
xor
jno
jp
addr16
in
sub
jno
mull
out
inc
cmp
rcll
cmp
divb
mov
in
sub
inc
dec
ds
pop
push
push
mov
inc
add
xchg
cmpsl
imul
mov
testl
dec
jge
xchg
rol
add
mov
lods
lods
ss
push
xor
xor
ja
push
shlb
ret
dec
imul
sub
hlt
jle
or
fbstp
jno
push
jmp
cmp
mov
inc
orl
mov
lds
cmp
add
mov
mov
push
push
sbb
cli
lahf
cltd
xchg
icebp
loope
push
dec
addl
vhaddpd
or
add
cmpsl
push
iret
stos
iret
sbb
mov
sub
mov
mov
int
std
cltd
lea
xor
push
shlb
aam
mov
das
sbb
stos
push
fdivr
sbb
cmp
pop
leave
fs
xchg
cmpsb
xchg
ja
pop
movsl
jecxz
shl
fmuls
pop
fisubl
inc
psllq
jmp
jnp
fistpl
stos
push
mov
push
test
mov
andl
mov
out
dec
add
xor
into
and
push
arpl
ficomps
pop
movsb
and
cs
mov
pop
test
insl
test
jne
dec
rcrl
adc
push
mov
jb
icebp
outsl
jmp
pop
mov
in
lock
mov
fwait
inc
sub
and
int3
hlt
pop
push
aad
lret
stos
jecxz
mov
mov
mov
stos
mov
cli
push
lods
imul
cmp
inc
mov
stos
or
es
push
lods
ss
repz
cmp
xor
stc
js
pushf
insl
jb
incl
movsl
fmulp
sbb
lods
sbb
int
add
push
and
aas
jo
mov
aad
push
sti
jno
dec
popa
lret
xchg
push
int3
clc
push
and
iret
dec
ja
stos
adc
stos
mov
jbe
or
and
stc
xchg
aas
test
loope
jecxz
rep
out
cld
cs
inc
push
dec
stos
stc
popl
jg
inc
mov
push
inc
insl
dec
pop
lock
bound
js
in
inc
sub
pusha
jg
xchg
xorb
icebp
mov
ficoms
cmc
and
leave
jge
adc
mov
push
pop
jmp
mov
dec
jle
fbstp
inc
jns
int
sarb
push
add
adc
xchg
xchg
inc
imul
mov
mov
xchg
dec
add
call
test
lods
shll
and
js
outsl
mov
pop
sbb
xor
mov
mov
dec
popf
mov
mov
dec
out
fmuls
jecxz
push
and
push
enter
push
lcall
mov
cs
lahf
outsl
mov
in
jne
pop
jo
dec
cltd
cmpsb
hlt
push
cmpsl
mov
insl
cmp
imul
and
push
dec
test
and
sbb
inc
xchg
in
xorb
mov
mov
in
fldenv
pop
xchg
loopne
xlat
enter
mov
pop
arpl
enter
push
add
outsb
lods
push
mov
xchg
pop
out
mov
xor
aad
iret
nop
jge
in
pop
lret
loopne
lcall
sub
jge
das
xor
inc
xor
sbb
rcrb
gs
out
cmp
sbb
inc
scas
imul
mov
test
cli
sub
dec
push
fst
add
jle
and
cmpsl
inc
inc
call
pop
jb
ret
in
jp
jecxz
in
cmp
adc
fs
fnstenv
sti
negb
pop
ret
lock
mov
test
inc
shl
jns
lods
sbb
push
aad
icebp
cmp
jg
imul
mov
cld
out
dec
or
pop
mov
sbb
sub
into
mov
jge
fisttps
xor
mov
sub
gs
fwait
mov
push
jge
test
test
jns
xchg
aaa
push
pop
sti
inc
ljmp
clc
popa
add
and
mov
aam
push
in
ficompl
inc
cli
cwtl
sub
cwtl
outsb
push
and
rcll
popf
and
xor
scas
mov
pop
into
aas
mov
jecxz
and
frndint
or
inc
dec
cld
cmpsb
repz
ss
add
rclb
mov
sbb
fldcw
sarl
and
fildl
jne
xchg
inc
fisubrs
clc
sahf
out
jnp
sbb
pop
test
iret
lret
push
inc
xor
repz
movsb
mov
and
jnp
jmp
mov
std
andl
jp
push
pop
dec
lds
lcall
cwtl
aam
xchg
pop
dec
mov
pop
mov
adc
lock
nop
mov
jg
sub
inc
cs
in
cmpsb
add
ss
jns
repnz
sub
push
jp
ja
leave
mov
mov
lds
rcrl
mov
scas
or
add
sbb
test
sti
add
call
push
imul
loope
ljmp
dec
or
jae
cltd
pop
xor
pop
inc
xor
fadds
xchg
pop
fildll
leave
xor
mov
xchg
pop
cli
jg
stos
adc
sbb
xchg
pusha
xlat
sbb
rcr
divl
clc
add
je
xor
test
pop
cmp
test
leave
add
xor
dec
or
loope
cmpb
out
orb
and
cmp
xbegin
mov
xor
xor
jno
cmp
sub
repnz
loope
mov
push
add
mov
loop
xchg
adc
adc
push
or
int
jge
xlat
xchg
out
dec
leave
cltd
icebp
push
jae
jp
jl
sbb
enter
outsb
xchg
nop
arpl
in
dec
test
jmp
jbe
test
jl
pop
daa
dec
ja
xlat
fisubs
es
test
mov
mov
aam
fsubrl
add
sub
adc
xor
sub
ficomps
sub
jb
sbb
cmpsl
add
dec
call
stos
fcomps
jnp
mov
movq
addr16
push
sub
push
inc
xor
les
mov
inc
jp
shl
scas
xchg
clc
cli
xchg
cltd
xor
fiaddl
mov
cmp
adc
mov
pop
push
iret
push
pop
jmp
lcall
or
jge
inc
aas
jb
pusha
cltd
test
mov
jbe
test
les
fcomps
hlt
sbb
cmp
movsl
mov
push
notb
nop
addr16
pop
jb
xor
mov
dec
stos
push
cmp
sbb
sahf
adc
mov
pop
int
fisubrs
mov
or
aas
mov
aam
jmp
inc
pop
dec
dec
inc
push
js
ffree
loopne
push
ss
or
std
mov
enter
push
mov
dec
clc
idivl
or
xchg
out
orb
js
xor
xchg
jb
sbb
sbb
xchg
aaa
ret
mov
mov
xchg
fnstcw
xchg
imul
dec
loop
push
xchg
ret
pusha
js
icebp
xor
xor
cmp
sub
imul
enter
inc
mov
lock
mov
rolb
xor
dec
add
xchg
iret
movsb
inc
add
hlt
sbb
xlat
mov
lock
mov
pop
sbb
andb
mov
xor
cmp
lret
push
iret
mov
addl
pop
xor
mov
adc
mov
lcall
daa
in
adc
scas
mov
data16
xchg
rorb
mov
mov
lahf
push
jmp
push
add
jg
out
mov
ja
ljmp
jge
jecxz
inc
je
mov
das
cmc
dec
mov
and
push
sbb
addr16
lods
jno
imul
dec
xor
mov
repz
gs
cld
lahf
pop
xor
imul
adc
fsts
mov
pushf
xchg
lret
fsts
popa
jmp
inc
push
fldl
cmc
jle
xchg
lret
aas
fmul
pushf
hlt
sub
cli
mov
cmp
lods
std
mov
pop
pop
xor
jnp
es
sub
ja
sbb
rcll
cwtl
ficoms
push
aaa
and
pop
inc
stos
stos
xchg
jb
dec
adc
clc
mov
jnp
mov
inc
out
scas
jae
out
or
lahf
jo
rolb
mov
outsb
xor
and
mov
das
or
and
or
popf
or
sarb
in
in
lahf
popa
fsubrs
lock
insb
xchg
or
arpl
jecxz
push
jb
mov
jl
fdiv
andb
lea
stc
mov
xor
xchg
es
push
ss
scas
jnp
repz
sbb
add
cmpsl
push
dec
test
iret
pop
out
fwait
sbb
lds
xchg
xor
test
sbb
inc
repnz
gs
gs
push
aad
jle
cld
mov
or
cmp
mov
lea
fwait
cmp
enter
fsubrl
push
scas
pop
aam
call
rcrl
frstor
dec
popf
dec
mov
dec
or
andl
and
mov
scas
cmp
ret
and
mov
inc
sub
clc
cmpl
jno
outsl
aad
idivl
in
cmp
sahf
or
sahf
lret
outsb
adc
mov
jp
pop
pushf
testb
and
jg
insb
int3
stc
add
push
mov
rcrb
ljmp
fmul
ss
push
mov
add
push
icebp
addl
loopne
push
or
test
mov
pop
fstpl
data16
cwtl
fucomp
cmpsb
xchg
or
mov
ds
fbld
push
mov
xchg
rcrl
push
outsb
mov
daa
cmp
push
aad
pop
lods
test
out
sub
mov
sahf
inc
ret
clc
pop
fstpt
fistpl
movsb
and
sub
jno
ret
and
arpl
xchg
imul
sub
sub
stc
xchg
orb
insb
stos
ret
mov
xchg
fsts
pop
dec
iret
in
push
push
or
sub
jnp
ljmp
add
mov
pop
sbb
inc
je
inc
loopne
pop
or
insb
mov
sbb
adc
mov
and
cmp
das
ror
test
enter
leave
cmpsl
fidivrs
dec
dec
push
lahf
mov
int
test
lock
pop
test
jbe
xchg
shrb
rorb
es
sbb
lahf
add
adc
fimuls
sub
and
in
fdiv
repnz
ljmp
fcoml
das
cwtl
and
cmpsl
mov
and
sbb
add
fstps
out
dec
shlb
mov
jle
and
adc
aas
mov
sub
test
mov
mov
push
imul
push
scas
cmp
outsl
add
mov
and
popf
push
jae
cs
push
nop
mov
fcmovbe
jo
adc
jl
jns
xchg
mov
sbb
testb
jecxz
into
pop
dec
pop
xchg
aam
cmp
aad
test
sbb
mov
cmp
inc
xchg
dec
lods
in
xchg
and
les
mov
xlat
insl
int3
nop
cmp
mov
push
fs
std
jl
and
cld
popf
sbb
jle
mov
lret
inc
inc
insl
fiaddl
mov
sarb
fistps
push
fwait
pusha
xchg
or
cmp
inc
and
cmpsb
or
out
ja
xchg
daa
ret
inc
cmp
xlat
fwait
push
or
jge
inc
rorl
bound
inc
jp
mov
ds
lock
adc
cmp
inc
cmp
jecxz
adc
add
dec
add
add
add
xchg
lods
and
add
xchg
fs
in
outsl
push
pop
jl
jl
xchg
inc
jge
lahf
inc
push
mov
xchg
pop
jb
dec
jle
xor
dec
ret
pop
add
je
clc
xchg
aad
sahf
lcall
scas
or
sub
aam
mov
inc
les
shlb
mov
fistps
jne
in
push
ja
mov
push
cmpsb
in
mov
adc
imul
mov
mov
push
call
aad
inc
ret
xchg
inc
pushfw
mov
push
imul
and
shlb
jnp
mov
mov
fdivl
iret
adc
stos
fldcw
hlt
mov
imul
push
pop
mov
out
cmp
loopne
inc
push
pop
cs
rcl
xchg
push
shll
bound
adc
push
xchg
cld
loopne
jp
fwait
mov
pop
lods
mov
mov
sbb
push
pusha
cmp
iret
int3
das
dec
arpl
lea
xor
mov
sub
and
or
adc
mov
neg
add
stos
addl
in
xor
push
fucomip
fdivl
push
and
jae
outsb
inc
cwtl
and
movsb
xchg
cltd
rorl
aaa
mov
xchg
mov
sub
xchg
jb
and
sahf
pop
mov
insb
outsl
xchg
pop
adc
fistpl
lret
in
mov
pop
mov
ds
sub
mov
lcall
out
jb
xchg
cli
out
shlb
and
shll
and
stos
bound
mov
daa
and
ret
decb
xlat
pop
mov
cmpl
rcl
mov
lods
popa
inc
sbb
cmp
insl
loope
imul
sarl
and
fmull
lods
push
loope
pop
jmp
lret
add
mov
mov
pop
pop
pop
aas
inc
in
cmp
arpl
cmp
push
cmp
jns
pop
test
add
scas
sub
mov
out
push
icebp
cmp
adc
notl
cmp
fbstp
jle
scas
lds
pop
cmpsl
inc
push
stos
sbb
loop
inc
addr16
sub
sahf
int
inc
lret
lods
sbb
inc
pop
pop
sbb
sbb
sub
sbb
add
sub
or
xchg
rorl
and
sub
sub
push
jns
pop
jbe
out
aas
shlb
movsb
mov
enter
popf
hlt
pop
or
mov
and
inc
sub
sbb
cmp
push
out
bound
push
fs
sub
jnp
test
and
mov
pop
push
out
mov
ljmp
inc
lock
mov
imul
and
fadds
loop
arpl
aas
jne
cs
jbe,pt
jnp
xchg
xlat
inc
push
cmp
cmc
pusha
pop
repnz
dec
scas
adc
xor
arpl
loope
pop
dec
lods
enter
xor
sbb
jecxz
or
sbb
test
jge
pop
add
cld
push
shr
mov
mov
in
cmp
sub
xchg
sbb
in
pop
xchg
add
rorb
xchg
enter
cwtl
das
arpl
xchg
fcmovbe
sub
pusha
adc
or
inc
stos
dec
cmp
fimuls
inc
arpl
inc
cs
mov
adcl
aam
cwtl
std
push
data16
mov
mov
es
inc
sub
orb
mov
cltd
dec
jp
loop
xor
int3
sub
jg
cmpsl
xchg
lods
adc
mov
nop
loop
sub
lods
mov
leave
mov
je
mov
scas
mov
in
lods
ljmp
push
pop
sbb
dec
xor
sbb
cs
xchg
jl
cmpsl
lcall
inc
inc
xchg
fdivl
aad
pop
cmp
std
out
call
hlt
mov
dec
jae
mov
ss
negl
gs
and
push
outsb
cltd
loop
xor
out
popa
outsb
pop
movsl
adc
dec
lods
cmp
sub
mov
dec
std
sbb
movsl
scas
mov
and
xchg
pop
jmp
cmp
push
push
jns
xor
bound
jecxz
clc
mov
jo
imul
mov
les
bound
jl
push
lahf
adc
xor
cmp
push
loopne
js
fisubrs
sub
xor
cmpsb
and
push
xor
push
dec
das
das
and
push
mov
aas
aad
xchg
xor
int3
hlt
mov
fcoml
call
stos
sbb
arpl
pop
xchg
push
rorb
mov
inc
pop
inc
out
cli
lods
les
cmp
jno
jae
or
iret
sbb
dec
aam
aas
inc
in
cmpsb
and
or
jecxz
out
xchg
imul
lds
out
lret
cmc
sbb
aas
cmpsb
popa
xchg
jp
adc
adc
cmp
ja
paddusw
push
xchg
into
xchg
mov
jge
xor
mov
into
in
neg
into
cmp
inc
inc
jp
lods
lret
mov
loope
mov
orl
or
sub
popf
popf
pop
insl
ljmp
subb
icebp
jo
out
push
push
test
and
fwait
into
iret
popf
cmp
push
call
popa
dec
sbb
je
sub
or
xor
jp
pop
loopne
mov
testl
xchg
or
aam
push
lret
push
xchg
sbb
sbb
lds
inc
xchg
dec
fimuls
add
mov
mov
sbb
adc
je
push
inc
loopne
aam
in
pop
fwait
jae
push
xchg
lods
fnstenv
in
loope
lret
push
test
je
push
add
popf
pop
add
out
jg
mov
mov
mov
mov
jae
frstor
ret
test
or
mov
insb
jl
fndisi(8087
stc
shlb
adc
and
push
jbe
or
scas
sub
xor
or
vpunpcklwd
loope
and
fnstenv
pop
stos
mov
sbb
testl
loope
add
lea
mov
ret
mov
pop
dec
jo
enter
push
cld
fsubrl
sbb
movsl
dec
imul
jo
push
jl
and
xchg
inc
xor
les
or
add
cs
in
add
cmp
mov
inc
aaa
ljmp
sbb
cmp
jne
inc
gs
dec
scas
push
les
jge
sub
imulb
jne
fisubl
arpl
xor
int
lock
enter
andl
pop
xchg
push
cmpb
and
dec
xorb
enter
xlat
adc
out
outsl
cmp
addr16
mov
mov
ret
mov
push
mov
push
adc
rorl
cmp
mov
and
sub
or
aam
mov
lcall
sbb
popf
pop
mov
mov
adc
adc
and
mov
insl
sbb
decl
jmp
mov
scas
mov
push
pop
jl
out
xchg
pop
jl
mov
xor
push
inc
mov
int
xor
cltd
dec
lds
xor
adc
outsb
xor
cmp
or
sub
mov
clc
xchg
adc
insb
and
in
mull
jl
stc
cmp
lds
fs
mov
loopne,pt
lcall
cmp
jle
cmp
and
cmp
lods
clc
cmp
fcomps
in
ss
fistps
repnz
out
jmp
dec
pop
scas
xorb
orb
sbb
data16
dec
push
or
ret
loop
lahf
mov
out
stos
ds
fcom
loopne
cmc
movsl
or
dec
xchg
pop
sti
xor
xchg
popa
xchg
pop
mov
dec
fiaddl
and
dec
push
outsb
adc
enter
and
cld
sub
xor
mov
sbb
pop
loope
enter
adc
xchg
shll
loopne
push
cltd
cmp
das
lcall
out
adc
jge
mov
lahf
daa
xor
jge
xor
test
push
push
mov
sti
mov
ss
xor
fimull
cld
add
rcl
sahf
cmp
daa
imul
sub
add
ret
and
mov
fwait
call
xchg
mov
mov
jecxz
lods
cmpsb
add
mov
fs
mov
cmc
and
add
push
jg
scas
sti
insl
sti
xchg
cmp
imul
push
sbb
loop
and
fsubrl
or
inc
outsl
aaa
jno
cmpsb
cmp
cmpb
and
cwtl
sbb
cmp
sbb
nop
dec
ret
mov
std
xchg
cmpsb
jge
add
incl
dec
wrmsr
lods
in
dec
push
add
js
dec
pop
add
clc
lcall
inc
jp
mov
mov
add
adc
movsl
or
notl
ljmp
sbb
mov
test
dec
fbstp
popa
adc
inc
insl
add
mov
pop
insl
add
hlt
xor
mov
leave
aas
sub
cmp
cltd
sbbl
imul
test
lret
cmp
mov
fidivs
dec
psubb
mov
or
push
into
pop
rcrl
adc
lret
ljmp
hlt
push
ja
loopne
int
and
sbb
in
fstpl
cmpsl
sub
loop
pushf
pop
adc
mov
adc
sbb
sbb
or
pop
loope
cmpsl
xlat
mov
push
cmpsl
and
out
mov
out
sbb
dec
lahf
or
shll
sbb
jmp
pop
sahf
inc
and
into
std
mov
mov
inc
addr16
jbe
pop
movsb
pop
and
cltd
xor
sub
fwait
inc
push
movsb
leave
insb
scas
xchg
push
outsl
inc
and
daa
insl
push
push
outsl
rcrl
in
testb
sbb
ffreep
push
stos
dec
add
inc
test
sahf
addr16
pushf
push
ljmp
cmp
jl
cltd
imul
les
aas
jmp
sub
fstl
sub
or
cmp
and
and
loope
push
mov
or
jne
mov
inc
lods
mov
push
les
lcall
insl
ret
bound
add
sub
mov
gs
int
imul
outsl
jne
arpl
ret
nop
lock
arpl
addr16
pop
xchg
movsb
xchg
rolb
lret
mov
cmp
adc
ja
xchg
movsl
cmp
dec
dec
and
sbb
jg
sub
aam
lea
pop
jo
xlat
dec
pushl
sbb
adc
andb
fstpl
and
into
js
push
sahf
outsb
inc
mov
pop
in
fld
add
aas
ja
mov
mov
jnp
mov
mov
pop
or
es
mov
xor
ss
rorb
adc
or
cmp
cmp
int
fidivs
push
mov
fisttpll
ljmp
data16
rcrl
leave
inc
dec
ffree
or
xor
or
popa
std
xor
dec
dec
loopne
xchg
pop
and
std
pop
mov
ficompl
or
mov
popf
inc
movsb
mov
mov
cmp
cs
xorl
inc
cmp
les
popf
decl
iret
push
sub
xor
cwtl
mov
aas
jnp
xchg
mov
cmp
mov
dec
xchg
sub
mov
enter
push
pop
ret
daa
enter
jnp
sub
push
pop
notb
insb
push
stos
mov
adc
mov
or
ds
and
lret
xor
mov
fistl
enter
jmp
or
xor
dec
and
stc
bound
or
imul
cwtl
push
mov
dec
rcrb
nop
xchg
push
into
or
adc
inc
loope
sub
enter
sub
dec
rorb
fs
cmp
ja
std
cltd
mov
hlt
mov
cmp
sbb
icebp
cmp
add
push
int
cmp
mov
or
mov
lea
imul
push
sub
mov
sbbl
inc
inc
stos
in
ret
int3
inc
cwtl
out
mov
lods
mov
in
dec
aas
lds
cld
pusha
xor
jge
mov
cli
sub
lret
dec
cs
cmp
mov
or
or
mov
xchg
sbbl
iret
xchg
leave
jns
repz
mov
ret
push
inc
adc
test
sbb
push
scas
mov
cmp
lock
int3
pop
sub
jne
into
shlb
pop
leave
sbb
fsubrs
pop
int3
inc
out
mov
xor
jl
push
push
adc
push
insb
xchg
xor
push
arpl
add
pushf
jp
rolb
xchg
xor
cld
xchg
sbb
mov
aas
fcomps
aad
pop
or
inc
lock
or
pushf
xor
gs
push
aaa
cli
iret
int3
jmp
lods
aaa
lret
mov
adc
dec
iret
int
xchg
movsl
nop
cwtl
scas
xchg
andb
icebp
arpl
sbb
lret
xchg
adc
mov
jbe
push
jne
jno
shlb
test
fiadds
addr16
jns
stos
test
leave
push
xchg
xor
sbb
popa
jbe
cmp
jne
sbb
out
repz
adc
fwait
leave
xor
push
lret
insb
jne
inc
pop
ret
out
call
call
add
sbb
movsl
inc
mov
mov
scas
test
outsl
mov
jae
rcr
mov
dec
cmp
xchg
sarb
sub
and
jb
insb
fildl
js
cli
les
call
dec
imul
sbb
push
push
addb
fdivl
call
push
out
mov
mov
adc
std
es
sub
jbe
test
inc
jmp
aad
clc
push
or
inc
or
in
inc
lret
mov
sbb
aad
pop
jo
loopne
cmp
push
push
or
jno
mov
adc
mov
movsb
daa
xchg
sub
rcll
aad
rorl
sub
leave
add
js
add
sarl
add
lods
and
cmpsl
inc
adc
ss
lret
ret
fbstp
push
les
inc
mov
rcrl
hlt
mov
xchg
cmp
std
jns
fistpll
cli
cwtl
adc
in
pop
mov
and
test
testb
or
loopne
test
cltd
ds
dec
and
xlat
scas
imul
out
mov
and
xchg
mov
cmpl
das
into
aad
addb
rcll
push
xlat
adc
out
dec
lret
and
dec
test
sbb
aam
xchg
or
sarl
decb
js
push
pop
inc
mov
pushf
shlb
imul
xor
cmp
mov
xor
jo
push
sbb
and
pop
xchg
jo
insb
loopne
int3
out
xor
clc
inc
mov
inc
cwtl
jns
out
xlat
outsb
in
lcall
jnp
in
mov
mov
xor
fcmovnu
orb
cmp
cmp
push
repnz
lea
gs
in
dec
cltd
cmp
mov
mov
pop
test
ret
sar
mov
jno
jmp
outsl
pop
xchg
jmp
pop
xor
or
jg
ret
cmp
sahf
repnz
pop
ss
or
out
mov
push
insl
mov
addr16
in
xchg
push
mov
les
mov
fildll
or
test
jnp
test
inc
lds
shlb
or
mov
jo
test
inc
lock
subl
jecxz
push
jl
aad
mov
out
daa
sub
test
and
aam
sahf
test
movsb
push
mov
or
mov
inc
inc
mov
les
xor
mov
movl
cmp
subb
mov
cmpsb
ret
jbe
les
xor
xchg
in
mov
mov
cmpsl
insb
lea
jnp,pn
sti
mov
roll
scas
stc
into
jmp
sub
mov
cmovbe
call
pop
pop
rclb
bound
ss
xchg
stos
dec
outsb
mov
das
push
inc
xlat
pop
jle
pop
lock
cwtl
xchg
xchg
push
subl
jp
mov
xor
hlt
or
mov
mov
fcmovnu
jp
ficomps
xchg
fsubs
repz
mov
call
sti
and
repz
outsl
inc
jmp
ljmp
sbb
or
inc
mov
fidivrs
mov
ljmp
and
loop
push
frstor
in
ret
sahf
xor
mov
add
fcomp
and
pop
adc
js
mov
mov
xor
dec
loope
mov
jecxz
mov
mov
bound
lds
scas
fs
js
std
add
push
xlat
js
jg
out
dec
fimull
lods
shlb
adc
push
out
cmp
mov
xchg
in
sub
jo
adc
test
ret
inc
xor
mov
xchg
shlb
fdivrl
jl,pn
jne
popf
or
icebp
lods
xor
pop
adc
lahf
dec
bound
sbbb
adc
mov
test
out
cmp
movsb
add
fidivs
aam
mov
pop
sub
and
in
add
jns
sbb
int3
test
fstl
rcr
pop
outsb
pop
test
pop
rol
jmp
xchg
xchg
scas
pop
aas
jmp
jle
outsl
dec
mov
dec
adc
movsl
mov
cld
pop
ficompl
out
or
mov
out
ret
lea
stos
pop
cwtl
cwtl
and
cs
fistpll
cmpsb
inc
inc
lods
out
dec
push
mov
arpl
cmp
vcvtps2pd
inc
adc
int
lods
sbb
push
outsl
stos
xor
test
xor
mov
push
add
mov
or
sub
xchg
shlb
cmp
fsub
ljmp
mov
pop
lods
ss
aaa
sub
dec
push
test
jno
shlb
cmpl
cli
mov
insl
push
fs
adc
mov
xchg
ds
pop
xor
movsl
inc
dec
fwait
and
inc
popf
inc
mov
cmpsb
jns
sbb
addr16
adc
mov
add
pop
mov
outsb
dec
je
mov
pop
cmpsb
xchg
cs
or
lcall
ret
push
or
ret
xchg
adc
lods
icebp
aam
mov
rorb
dec
xchg
imul
das
mov
or
dec
lds
inc
mov
test
stos
xchg
call
pop
lods
add
pop
insl
call
mov
scas
pop
and
loope
or
aam
cld
cmp
bound
daa
daa
cltd
inc
cmpb
andl
dec
mov
jnp
adc
adc
inc
fbstp
adc
jae
outsl
jnp
lods
cmp
xor
push
and
jae
mov
fildll
std
jmp
push
aas
or
mov
jecxz
pusha
mov
insl
pop
notb
xor
inc
push
cmp
xchg
inc
sub
pop
jae
fwait
js
lock
leave
repz
lcall
cmpsl
ret
mov
lea
sbb
dec
test
xchg
lock
jne
ret
andb
std
mov
push
mov
mov
xchg
or
inc
into
fstpt
xlat
jne
sub
lods
add
jno
xor
dec
dec
cltd
out
add
aaa
xchg
xchg
inc
push
adc
sbb
lods
cmp
push
aam
jg
std
fnstenv
sbb
ficompl
je
jp
sub
or
xchg
push
mov
mov
push
jae
out
and
mov
push
pop
pop
loopne
faddl
out
lcall
sti
dec
sub
dec
adc
inc
sub
sbb
loope
push
jne
cmp
out
ror
dec
push
jp
and
dec
mov
es
jo
test
pop
jecxz
jo
loope
fs
aaa
add
lods
xor
push
int3
jecxz
cmpsb
jbe
pushf
pop
sub
inc
dec
into
cs
adc
jnp
aaa
cmp
jle
adc
cs
cmp
sbb
or
mov
bound
rcr
test
add
out
lcall
bound
xor
call
push
xor
arpl
push
insl
fsubl
mov
cmc
and
aas
stos
aas
popa
lods
ds
leave
sahf
xchg
sbb
push
mov
lds
inc
hlt
mov
mov
jmp
sbb
ja
add
inc
cltd
jge
jmp
in
movsl
add
gs
mov
push
nop
mov
mov
dec
movsb
ljmp
push
xchg
jp
pop
ds
mov
sahf
ljmp
scas
push
mov
loope
dec
sub
jnp
mov
lods
repz
pop
push
jbe
dec
dec
mov
mov
mov
inc
xlat
stos
sub
test
jp
cld
popf
and
dec
out
mov
mov
xchg
insl
jmp
ret
sti
sub
and
adc
sbb
xlat
mov
jns
xlat
jne
xor
mov
push
push
jecxz
andb
mov
es
icebp
jge
leave
inc
add
jp
ss
jl
repz
test
xchg
inc
and
inc
dec
js
scas
jmp
adc
dec
jae
shl
fistpl
les
cltd
mov
mov
loopne
inc
test
hlt
loopne
push
into
jno
dec
xchg
sub
mov
cwtl
mov
jle
lahf
or
push
or
xorl
push
pop
mov
andb
clc
ds
adcl
mov
inc
dec
sarb
xchg
mov
bound
sti
gs
lds
test
jl
mov
out
pop
add
idivl
cmc
movsb
sbb
adc
lods
cmp
cli
inc
inc
mov
imul
fildll
mov
enter
scas
das
dec
cwtl
cmpsl
ret
ljmp
dec
fwait
adc
sbb
lods
repz
xchg
xlat
arpl
movsl
xor
mov
bound
mov
cmp
add
lods
xchg
loope
and
repnz
rolb
xchg
xchg
lahf
jle
mov
popf
gs
and
or
insb
and
cmc
lea
iret
das
adc
sbb
das
sub
push
imul
adc
or
cmp
bound
mov
jge
xchg
add
sbb
pop
leave
ljmp
pop
inc
cmpsl
in
add
pushf
data16
pop
iret
push
in
ret
push
scas
add
mov
push
stos
pop
add
and
cld
pop
cmp
nop
addr16
fcompl
add
mov
jmp
push
ss
and
arpl
jg
repz
dec
mov
aam
add
inc
xor
add
jmp
jno
inc
pop
daa
js
rcrb
mov
les
inc
mov
sub
mov
stos
test
push
aad
adc
arpl
ljmp
nop
shlb
jle
arpl
mov
push
inc
xchg
lcall
test
lcall
popf
lahf
pop
scas
adc
aad
lahf
cmp
lods
lods
lret
and
and
dec
mov
push
imul
enter
movsl
xchg
sti
sub
das
xchg
notb
cmc
test
and
dec
movsb
dec
xchg
cmp
mov
popf
mov
repz
cmc
sub
les
and
xor
mov
fwait
adc
in
mov
fdiv
sti
and
movsb
jo
push
fisubs
and
cmp
in
pop
shll
pop
stos
or
pop
sub
mov
stos
xor
jl
xor
adc
or
cmp
ja
fstl
inc
mov
add
out
xchg
inc
jns
or
xchg
pop
mov
push
inc
inc
test
jne
imul
fs
push
in
popw
faddl
imul
mov
sub
les
add
cmp
mov
aas
out
jmp
nop
lods
push
add
mov
xor
xor
lret
pusha
cld
mov
outsl
dec
inc
out
pop
jbe
xchg
xor
mov
jmp
repnz
je
sbb
xor
push
add
aaa
cmpsl
stos
sub
cmc
nop
lahf
xorl
pop
dec
shlb
outsb
cltd
sub
data16
sbb
mov
jb
aad
shrl
loope,pn
or
jg
xorl
pusha
push
mov
adc
and
and
sbb
daa
mov
and
bound
sahf
leave
and
mov
test
lods
jns
mov
mov
lret
lcall
mov
jnp
mov
test
enter
add
jge
aam
adc
mov
rclb
pop
jns
aam
mov
aas
mov
push
fmull
std
jns
sbb
addr16
insb
dec
in
mov
fnsave
repz
test
cwtl
mov
xor
sub
push
xchg
mov
lds
lods
sub
test
mov
mov
outsb
in
xor
jno
mov
ja
xor
ret
or
xchg
mov
and
fwait
outsb
imul
cmp
push
call
fs
cltd
enter
add
ficomps
sbb
je
std
push
lea
icebp
dec
mov
es
mov
in
mov
sahf
inc
jno
fmuls
popf
jae
outsb
mov
mov
mov
fwait
jbe
arpl
xchg
popa
dec
cmpsl
out
and
adc
dec
add
mov
jbe
jp
dec
mov
inc
out
dec
movb
dec
cmp
aad
add
ss
test
sub
sbb
ret
fldcw
nop
xchg
xchg
inc
or
call
push
addr16
fdivr
call
test
cld
sbb
ss
pop
ja
or
mov
cld
cmp
add
lcall
adc
mov
mov
add
jno
mov
sub
jl
cmpb
inc
ja
jmp
push
mov
fcmovb
add
addl
mov
jge
add
vprotw
pusha
lret
fs
ds
inc
sarl
jae
jg
mov
and
sbb
push
cmp
and
mov
cmp
jg
sub
les
scas
cld
and
mov
or
lret
mov
lret
ljmp
pop
mov
xchg
sbbb
gs
mov
xchg
add
mov
cltd
loop
push
fdivs
lahf
test
mov
sbb
loope
fdivrs
and
into
nop
aad
cwtl
jp
adc
int3
out
adc
repz
aas
stos
aaa
sub
sahf
addr16
mov
enter
lahf
inc
test
push
dec
dec
in
js
sub
call
add
loope
dec
pop
adc
divl
aad
pusha
push
add
nop
cmp
loop
inc
mov
aad
pop
dec
xor
mov
fdivs
mov
pop
in
aam
jbe
add
dec
lods
fucomip
je
jge
arpl
jb
jg
xor
daa
and
mov
push
outsb
adc
pusha
mov
ds
jge
dec
inc
stos
push
loop
loopne
push
cmpsl
popa
aad
fsub
mov
loope
test
movsl
ds
lods
es
js
cmpsb
dec
and
ljmp
loopne
push
in
sbbl
push
push
aam
lods
lea
test
xor
add
test
mov
push
lods
lret
adc
push
pop
mov
push
sahf
push
cmpsl
ds
push
lods
mov
js
jg
ljmp
mov
sti
push
adc
and
inc
lock
xchg
mov
fiadds
xor
pop
in
pop
push
cmp
pop
xlat
fwait
stos
movsl
inc
or
int3
sbb
out
fisubrs
adc
mov
adc
jbe
add
xor
lock
arpl
imul
cmc
cmpsb
repz
sub
jge
fptan
mov
iret
mov
jae
dec
cmp
fldt
nop
int3
mov
jne
fcom
stos
and
dec
pop
dec
hlt
xchg
test
pop
xor
sahf
shlb
or
adc
mov
add
mov
xlat
fwait
or
push
xor
add
mov
fldcw
popa
aad
lret
or
pxor
pop
out
mov
add
sub
sbb
lds
cwtl
cmpsl
in
sbb
xchg
sbb
pop
scas
shrl
inc
mov
js
cld
leave
mov
ret
inc
fsubs
push
dec
mov
adc
jmp
cmpsl
mov
fisubl
inc
in
or
pop
xor
shlb
enter
xor
or
repz
jg
or
clc
dec
jbe
ret
lods
mov
mov
mov
int
push
rorb
leave
mov
outsb
adc
cmp
push
leave
scas
push
cmc
and
ret
js
rcrb
fdivl
in
enter
sub
movsb
lods
dec
dec
lods
dec
add
imul
mov
decb
ljmp
orl
pop
in
hlt
out
dec
js
mov
int
cmp
cltd
mov
xchg
out
xchg
outsb
push
insl
pushf
jg
pop
add
data16
jge
dec
leave
out
mov
dec
movsb
mov
xchg
sbb
loopne
imul
pop
jbe
daa
xchg
jge
pop
imul
cwtl
pushf
arpl
leave
push
gs
daa
in
cmp
cmp
jge
cmpsl
inc
mov
cmc
inc
popl
cmp
jns
inc
dec
loope
lcall
mov
shl
sbb
lcall
fistpl
sub
and
mov
pop
fs
mov
out
repz
mov
inc
inc
ss
xor
sarb
mov
loop
xor
sub
jl
xor
lret
clc
pushf
xor
in
mov
jecxz
xchg
imulb
xchg
shlb
sbb
daa
call
pop
nop
jno
cmp
aad
cmc
ficoms
fwait
sub
cmc
push
inc
pop
ss
cmp
jo
cmp
or
push
push
popf
out
mov
jl
pushf
push
repz
cmp
aas
ljmp
add
out
jg
xor
adc
pop
mov
mov
adc
jne
dec
scas
shrb
sub
lret
shrb
jge
cmp
xlat
inc
inc
inc
mov
cltd
ret
subl
xchg
xor
shr
dec
cmpsl
loope
sbb
aam
orl
mov
clc
sahf
into
ja
daa
adc
aad
pop
dec
rcll
faddl
cli
pop
and
jns
sarb
roll
movb
mov
pop
js
js
aas
mov
xlat
pop
adcb
mov
dec
aas
gs
adc
jp
lahf
mov
mov
add
outsb
imul
stos
in
sub
lcall
inc
test
imul
aam
loope
mov
pop
sarl
test
into
push
movsl
push
sbb
mov
sub
mov
fbstp
and
xor
xor
mov
addr16
in
jl
test
ficoml
insl
hlt
mov
shl
jb
nop
mov
sbb
lock
pop
pusha
daa
mov
dec
inc
hlt
or
test
lret
movsl
inc
adc
bound
xchg
jns
pop
ja,pn
mov
mov
mov
adc
dec
inc
jb
jno
mov
sbb
inc
scas
stc
mov
mov
aam
or
mov
idivl
mov
inc
mov
or
jbe
push
push
cli
push
xchg
fnsave
test
jns
or
inc
mov
inc
jge
int3
jbe
xchg
jo
xor
cmp
rolb
xor
ret
and
push
push
cmp
addr16
jo
addr16
negl
mov
and
adc
popf
inc
shufps
outsl
int
das
sbb
popa
test
lods
pop
and
cmp
adc
mov
mov
stos
pop
ds
add
lahf
imul
sbb
test
and
push
sbb
shlb
popf
pop
mov
in
fcmove
add
lret
cwtl
sbb
xchg
push
cld
loope
jle
or
or
int
inc
mov
jp
int3
cli
sub
cmp
cmp
cwtl
xchg
cmp
popa
dec
hlt
mov
xchg
negb
dec
fwait
jbe
push
in
and
in
jecxz
sahf
pop
sti
arpl
icebp
cltd
in
mov
sub
dec
in
mov
cmp
mov
inc
loop
mov
dec
xchg
cmp
mov
negb
insl
stc
orl
sbb
mov
jo
es
xchg
or
inc
cmp
daa
xchg
add
std
shlb
mov
je
jno
or
test
and
mov
lds
shll
mov
cli
adcb
push
loope
adc
stos
lret
or
cmpsl
push
dec
adc
shrl
add
fs
inc
sbb
inc
scas
jno
cmp
or
outsl
imul
out
test
lret
and
cmp
or
pusha
pop
outsb
cmp
stos
pop
shl
pop
ret
pop
cld
add
pop
sahf
outsb
ja
mov
jp
ja
into
dec
test
mov
fistpl
fildll
pop
adc
sbb
adc
mov
fs
sub
fwait
push
sahf
mov
in
cmp
cld
dec
and
out
in
dec
es
sub
sub
cmp
push
inc
mov
cmp
arpl
fucomp
mov
dec
loope
sbb
iret
jno
mov
stos
cmp
xchg
or
ret
fs
aam
je
xor
jecxz
sbbw
in
adc
bound
or
mov
sbb
cmc
inc
dec
dec
jb
test
mov
mov
mov
sub
mov
std
jns
imul
dec
mov
xlat
out
test
xor
idiv
test
test
push
icebp
push
sbb
ret
adc
iret
pop
xlat
xor
jmp
insb
add
sub
fstpt
icebp
xor
addr16
or
ret
and
aad
mov
fs
inc
dec
jo
sub
cmp
or
cwtl
test
mov
add
xor
or
leave
repz
sub
sbb
mov
cltd
out
or
dec
sahf
inc
inc
add
lret
ds
inc
fwait
inc
popf
mov
into
shr
push
insb
sbb
push
pop
sbb
inc
aaa
xchg
repnz
adc
insb
cmpsl
add
or
call
fildll
mov
dec
lcall
sbbl
xchg
iret
inc
in
jns
mov
sbb
adc
mov
xor
icebp
push
inc
jnp
inc
pusha
add
dec
out
xor
push
inc
lahf
popf
xor
jge
ds
or
sarb
add
shrb
enter
icebp
push
popf
insb
in
or
ret
rcll
mov
and
popf
stos
xchg
add
loop
or
cmc
mov
fistpll
jbe
popf
xlat
lods
clc
mov
mov
mov
subl
dec
and
cmc
adc
movsl
xor
ljmp
enter
jecxz
out
daa
adc
or
je
ret
movsb
loop
bound
cmpsl
and
mov
pop
shl
stc
shrb
mov
sahf
roll
call
out
pop
cltd
add
push
mov
hlt
mov
cmpsl
add
xorb
outsl
lds
inc
movsl
xor
loopne
cmp
jo
or
push
add
lock
aas
inc
xor
xor
push
es
adc
xor
stos
cld
sbb
jno
orl
lods
jns
inc
pop
aam
jb
fisubrl
pop
push
test
xchg
lahf
insl
xchg
enter
push
ss
rcrl
cltd
cmp
mov
add
jo
movsb
lret
gs
mov
jg
or
mov
or
roll
rcl
or
jmp
and
mov
rclb
adc
push
pop
lds
and
jo
push
cmp
push
adc
cmp
out
add
clc
jno
and
filds
mov
das
lret
xchg
in
scas
movsl
insl
push
fstl
cmp
cmp
jb
push
in
shrb
mov
sbb
aam
jne
and
cmp
lods
xchg
xchg
mov
mov
fwait
dec
shr
out
sub
adc
nopl
cmp
cmp
popaw
shl
sub
fdivrs
cmp
repz
xchg
push
sub
fucom
inc
sar
loopne
imul
cs
dec
cmpsb
mov
lods
adc
je
addr16
cmp
adc
shrd
jb
jp
lods
loopne
push
stc
in
dec
push
mov
adc
or
stos
jg
and
aad
sarb
iret
aaa
shl
and
int3
xchg
shlb
mov
lds
pop
or
into
xchg
pop
xor
aaa
adc
sub
outsl
es
dec
sub
mov
sbbb
sahf
fnstcw
mov
push
and
or
jge
or
adc
leave
aam
mov
xchg
gs
stos
leave
lret
cs
pop
loopne
test
lcall
pop
mov
mov
stos
mov
push
inc
cmc
popf
movsl
idivb
mov
lret
mov
push
or
scas
sar
jae
in
lods
lret
gs
push
pop
xchg
data16
repz
pop
roll
push
pop
and
dec
out
movsb
jmp
xabort
inc
out
mov
sub
dec
out
insl
lock
fisubrs
mov
push
cli
adc
push
sti
and
cmp
mov
lods
movsl
jg
aaa
or
roll
lret
iret
mov
jge
mov
inc
in
pop
xor
mov
lods
xchg
pop
test
mov
push
rclb
insb
xchg
nop
lock
dec
pop
pop
push
outsl
xchg
dec
lods
jne
pop
pop
mov
aam
mov
pop
scas
adc
xchg
jle
add
jmp
push
int
aad
inc
or
mov
lret
mov
pop
and
cmp
insl
lahf
mov
daa
repnz
mov
mov
add
arpl
test
outsl
mov
std
repnz
lds
fsubp
mov
jb
icebp
xchg
dec
clc
push
mov
addr16
aas
ret
xchg
fadds
mov
stos
push
inc
scas
bound
lods
scas
repz
sub
or
xchg
or
mov
pop
int3
adc
xor
and
xchg
push
inc
pop
add
mov
push
pop
aaa
mov
out
adc
or
loopne
jg
jne
loopne
fsub
scas
xchg
push
push
cmp
add
dec
dec
pop
adc
sbb
push
or
dec
xchg
mov
cmp
repz
mov
pop
push
daa
xchg
nop
in
jp
inc
mulb
clc
jmp
sub
jmp
dec
sub
outsb
add
xchg
jnp
dec
out
and
movsb
mov
ja
mov
fisubrs
dec
notl
xlat
pop
xchg
out
lret
cld
xchg
loope
jmp
fldenv
mov
ret
jno
xchg
mov
mov
outsl
out
sbb
cmpb
in
mov
iret
mov
popf
mov
sub
mov
movsl
je
scas
int
mov
or
or
cltd
addr16
pop
inc
out
cmp
testb
mov
add
dec
xchg
ja
iret
out
dec
insl
fisttpl
or
cmp
mov
cwtl
jg,pt
imul
pop
stos
out
push
fmulp
jo
call
pop
mov
test
test
pop
mov
pop
adc
xor
test
mov
out
std
mov
sub
and
lock
adc
lods
mov
je
add
inc
cmpsl
adc
dec
fs
ds
pop
das
insb
inc
repz
shrb
and
fnstenv
dec
push
mov
mov
adc
sub
out
xor
aas
inc
lock
dec
outsb
nop
addl
cwtl
fcmovu
lret
adc
movsb
add
outsb
xlat
into
push
push
popf
mov
pop
pop
stc
jp
jle
pushf
add
jbe
rclb
rcrb
dec
cmc
xor
or
pop
adcb
adc
mov
pop
lods
pop
pop
xchg
xchg
subb
and
adcb
lods
xor
fsubrs
xchg
jne
push
xor
xchg
inc
jmp
loop
add
les
daa
xlat
inc
stos
sub
shlb
xor
xchg
pop
int3
inc
cmp
cld
filds
inc
cmp
mov
js
movsl
insl
cmc
mov
mov
push
sub
pop
sti
or
push
adc
and
shrl
push
test
jecxz
pop
cmp
test
cli
cmp
cmpl
dec
lcallw
inc
je
andb
or
mov
outsl
xchg
fxtract
xor
inc
cltd
xor
mov
daa
fnstenv
mov
jecxz
das
add
dec
mov
call
stos
add
lock
jmp
sbb
fwait
shll
push
sti
sub
xchg
sbb
adc
cmp
xchg
hlt
push
add
pop
out
cmpsb
sbb
xchg
mov
ret
mov
jecxz
pop
pop
push
mov
sbb
sub
jg
sbbl
adc
sbb
imul
xlat
mov
dec
movsl
addb
mov
leave
mov
in
mov
sbb
inc
xor
ret
imul
mov
mov
jmp
ja
or
xorl
in
cltd
bound
jno
in
stc
insb
sub
push
imul
jmp
mov
and
jb
mov
inc
ror
in
and
inc
dec
dec
jb
icebp
ljmp
fnstcw
xchg
adc
inc
ds
pop
outsb
mov
imul
loope
inc
inc
sbb
bnd
fisttpl
stos
sub
stc
and
jmp
jle
out
xchg
in
add
jge
sub
aaa
addr16
xchg
cmp
out
pop
push
sbb
xchg
popa
mov
cmp
repz
lods
cwtl
sarb
stos
cltd
cli
xchg
xlat
aad
mov
jo
pop
pop
ds
sub
pushf
cmpsb
popl
push
aas
fwait
xor
jo
sahf
gs
mov
addr16
pop
mov
xor
pop
sti
fsubs
adc
xchg
stos
xchg
lods
lods
fidivrl
mov
jmp
adc
fldcw
loope
ficomps
addr16
push
ljmp
ret
pop
aaa
cmpsl
adc
and
std
nop
dec
dec
fsubs
jo
insl
or
das
das
rolb
mov
gs
inc
dec
xor
movsb
jbe
pop
stc
add
insl
adc
fcmovu
subb
gs
adc
xchg
xor
pop
xlat
dec
and
and
jl
adc
repnz
sti
sbb
and
ficomps
jbe
mov
rol
repnz
stos
orb
push
lds
inc
rorb
loopne
jg
push
leave
or
inc
xchg
jo
or
mov
movsl
push
pop
cmp
mov
or
mov
out
jg
loop
out
sbb
addl
add
nop
pop
inc
cmp
sbb
lods
cmp
insb
fwait
lock
push
imul
call
sub
push
and
lret
sbb
sub
loope
push
adc
xchg
adc
mov
inc
xchg
scas
jns
shl
clc
popa
jb
in
xor
xor
pop
mov
insl
dec
mov
mov
out
lods
movb
pop
and
or
cld
rcl
into
jnp
pop
xchg
mov
stc
pop
mov
push
outsl
add
sti
add
xor
fs
jge
xchg
mov
cmpsb
mov
sub
insb
sbbb
mov
push
stos
insl
push
nop
inc
mov
dec
iret
inc
sbb
dec
mov
cmpsb
ss
add
leave
jo
xor
jle
pusha
daa
cmp
rorl
shlb
jge
mov
scas
imul
out
push
data16
xor
mov
mov
lret
sbb
lock
and
inc
js
inc
and
adc
lock
add
xchg
xor
jnp
cmpl
cmpsb
rcl
out
cmp
mov
jae
test
test
inc
push
nop
sbb
mov
pop
xor
cmpsb
aad
jp
les
adcl
sub
or
jno
sub
pop
jb
push
dec
out
mov
add
push
and
jnp
loop
cmp
xor
adc
call
sub
push
xchg
dec
shrl
jp
jle
pop
mov
adc
out
fstps
or
xchg
adc
hlt
fwait
inc
gs
mov
das
jg
aam
ds
sbb
int
and
cmpsb
fsubs
adc
cmp
sub
sub
lahf
add
sahf
push
dec
xchg
ja
pop
sbb
sbb
sahf
inc
in
pop
cmc
cs
xor
sub
inc
clc
mov
or
shlb
inc
das
add
mov
add
lcall
or
pop
xor
inc
sub
xor
scas
popf
cmp
cmp
cmp
lods
outsl
jge
xchg
push
stos
or
and
sar
xor
xchg
push
int
ret
scas
push
stc
mov
push
cmp
std
push
stc
push
shrl
jbe
loope
xchg
test
imul
test
cmp
mov
pop
test
jb
in
iret
adc
imul
xchg
or
pop
sahf
push
iret
movb
addr16
pop
push
add
inc
mov
add
outsl
insl
popf
push
inc
adc
test
jo
or
movsb
bound
mov
test
cmp
stos
push
push
in
push
stos
cwtl
jmp
and
jb
sub
es
iret
popf
mov
and
jne
imul
adc
arpl
adc
and
mov
iret
loopne
push
push
dec
jnp
data16
push
lock
fwait
movsb
ljmp
scas
data16
push
and
mov
pop
dec
inc
jl
jg
dec
sub
fs
xchg
push
mov
imul
pop
es
mov
int3
loope
fiadds
and
mov
test
lods
loop
popa
fiaddl
push
push
test
shl
addr16
adc
sbbl
jnp
or
add
lds
lahf
nop
aas
pushl
loopne
adc
mov
mov
fistpll
xorb
dec
hlt
lods
mov
cwtl
pusha
push
push
test
sbb
cltd
mov
sti
mov
aam
push
sahf
shlb
push
push
movsl
bound
scas
hlt
sbb
int
fbld
ret
xor
movsl
les
adc
mov
int3
cmp
pop
rcr
jns
in
and
enter
scas
mov
inc
pop
lea
or
adc
int
aad
test
and
or
add
cltd
leave
scas
xor
dec
test
jns
inc
xchg
adc
add
fwait
movsl
inc
pop
mov
ret
je
aad
stos
movsb
xchg
pop
jne
repnz
jge
dec
scas
mov
jecxz
cs
aas
and
mov
and
into
nop
cmp
lock
sub
pop
mov
or
mov
cmp
adc
xchg
xchg
fcompl
fnsave
fs
lds
mov
fs
push
fs
dec
sti
cmp
sbbb
dec
mov
pusha
ret
lods
mov
pop
jecxz
sub
inc
in
popf
xlat
adc
inc
add
mov
mov
pop
adc
test
mov
push
test
stos
inc
lock
and
add
enter
fisubrs
pop
xchg
fimull
adc
lods
and
andb
adc
mov
sub
scas
jo
out
cli
dec
lea
mov
xchg
outsl
inc
sahf
xlat
mov
inc
popa
rcl
jbe
bound
push
mov
cmp
out
cs
test
jle
int3
xlat
repnz
dec
test
xor
lret
lods
lds
fwait
xor
jmp
popf
pop
sub
dec
xor
dec
movsb
and
push
jge
mov
in
or
pop
lret
mov
popa
aas
icebp
add
mov
je
sbb
cmp
inc
pop
sbb
mov
frstor
cmpb
lret
adc
adc
dec
insb
mov
or
mov
or
add
xor
stos
lret
insl
shrb
cltd
push
pop
xor
dec
and
add
or
push
and
pop
mov
out
adc
aad
add
rolb
adc
std
mov
das
lods
int
push
cld
cmc
clc
and
pusha
scas
dec
xchg
adc
mov
sbb
inc
pop
pop
int
pop
daa
push
adc
and
mov
jge
push
fdivs
inc
out
cltd
jns
sub
push
xor
pop
jle
pushf
push
push
roll
movsb
cmp
adc
incl
mov
and
jg
test
js
clc
jnp
fdivr
divb
iret
mov
out
ja
jb
test
or
pushf
mov
aas
cmpsb
in
imul
pop
cld
loop
sbb
lock
cmp
leave
pop
fnsave
jne
and
cmp
fldt
and
fnstsw
add
inc
outsl
push
mov
dec
aam
xchg
sbb
jmp
les
jns
mov
mov
dec
movsl
push
lahf
imul
and
int
jne
xchg
insl
xlat
dec
decl
jbe
xchg
add
sbb
negl
outsb
insl
and
test
lds
xor
out
and
ljmp
sbb
pop
fisubs
xlat
xchg
cltd
or
cmp
mov
sbb
cld
insb
incb
sarl
mov
sub
mov
or
xlat
ds
cmp
mov
lods
leave
xchg
into
jns
or
movsb
cld
inc
in
jp
jae
rorb
addr16
jns
imulb
dec
dec
add
or
sbb
pop
lret
jmp
jbe
cmpsb
pop
jbe
add
test
int
test
movsl
cwtl
jno
movsl
mov
push
inc
filds
push
dec
imul
imul
lret
in
clc
es
adc
lret
ret
imul
jnp
xor
fisttps
aad
mov
sbb
test
enter
mov
mov
roll
inc
imul
stos
mov
sub
jmp
inc
mov
in
push
pop
aad
cld
out
lret
dec
lods
int3
loope
jmp
push
jle
cld
pop
jg
mov
mov
out
pop
xor
pushf
das
stos
push
sbb
les
in
mov
stos
xchg
and
xchg
roll
sub
ss
pop
aam
jne
stos
xchg
cmpsl
dec
in
mov
mov
jne
movsl
sub
mov
stos
inc
loop
or
fchs
dec
lahf
test
and
inc
scas
pushf
cmp
loop
push
cmpsb
sbb
adc
xchg
dec
div
in
add
dec
in
dec
ss
inc
fst
xchg
repz
mov
xor
mov
cld
pop
pop
js
imul
or
call
ja
es
jb
in
sub
cld
arpl
sbb
mov
stos
mov
mov
xor
das
aad
scas
xchg
imull
and
cmpsl
jo
mov
cmpsl
jb
cmp
clc
cmp
movsl
fnstcw
cli
add
xchg
push
add
push
jo
fisubl
pop
cmp
clc
add
and
pop
je
add
iret
icebp
fldl
xchg
cmp
lahf
mov
inc
push
shll
repnz
cmp
inc
or
sub
les
popa
jnp
cld
aad
dec
mov
add
sti
adc
pop
dec
lock
insl
iret
scas
inc
negl
dec
mov
orb
stc
scas
out
or
jb
sub
push
jl
pop
jge
pusha
xchg
sbbl
rorl
aam
add
out
push
jno
jp
cmp
mov
add
push
imul
mov
adc
sarl
push
dec
cmp
into
nop
sbb
int
push
std
out
pop
lcall
test
ljmp
arpl
xchg
or
push
or
sub
pop
ret
inc
mov
in
sarl
test
std
outsl
in
xchg
or
inc
dec
out
aam
sbb
sub
outsl
jecxz
ljmp
cli
imul
mov
mov
add
ret
push
push
push
insl
mov
sub
aam
add
cmp
cmp
scas
jge
fadds
dec
jl
sbb
mov
out
fidivrs
cmp
and
xlat
enter
mov
add
pop
sub
xor
out
and
mov
aaa
jmp
cmp
sbb
mov
push
icebp
xchg
pop
mov
shll
xor
cld
nop
xchg
repz
movsb
popf
xor
jge
lcall
inc
push
iret
mov
in
test
loope
sbb
dec
hlt
add
test
jae
icebp
pop
push
insl
dec
jle
and
lods
adc
jb
adc
enter
push
subl
mov
pop
clc
sbb
dec
icebp
mov
or
jb
add
fwait
xchg
cmp
pop
in
lds
in
and
std
cltd
push
mov
and
cmp
std
stc
pmuludq
rclb
add
cs
xchg
clc
sub
cs
adc
and
scas
out
stos
std
ret
mov
dec
cs
fisttps
sub
pmaxub
dec
push
xor
ja
pop
lds
mov
cltd
cmp
out
cmp
imul
frstor
add
outsb
out
aas
sub
push
fbstp
push
xor
add
and
mov
fs
fldcw
add
aam
pop
data16
iret
outsl
xchg
xlat
adc
mov
lcall
sbb
mov
inc
cs
xchg
fildll
sub
add
push
mov
lcall
gs
in
fs
aam
icebp
aaa
aam
int3
jno
jle
mov
or
cmp
mov
call
outsb
and
jb
xor
mov
mov
hlt
faddl
cmpsl
fstpt
lds
xchg
push
clc
xor
sbb
ret
test
lret
add
mov
pop
lret
add
mov
mov
aaa
ljmp
jecxz
fwait
mov
inc
test
lea
and
inc
das
clc
or
inc
inc
jnp
push
xchg
add
add
mov
in
pop
jns
das
push
mov
cmc
push
dec
pop
and
mov
fnstsw
pop
or
mov
lock
in
mov
test
push
push
mov
ljmp
imul
cld
push
push
mov
nop
xchg
or
cmp
sbb
xchg
shrl
testl
jmp
push
loop
setb
pop
adc
cltd
xchg
dec
jae
test
ds
stos
xor
jp
jecxz
cli
scas
jae
stos
movsl
fwait
subl
sbb
mov
xchg
das
xchg
div
xor
pop
inc
in
pop
push
mov
push
sahf
xor
inc
jb
adc
jns
fdivl
sbb
add
in
out
mov
pushf
jecxz
inc
sub
xchg
popf
inc
mov
mov
lea
out
fiadds
push
xor
or
mov
ljmp
aas
push
dec
cmp
aam
xchg
pop
mov
xor
mov
add
hlt
inc
jo
pop
int
or
scas
ret
xlat
pop
cmp
pusha
mov
int3
mov
mov
call
stc
jmp
cmpsl
push
xor
mov
inc
mov
mov
xchg
inc
in
sar
dec
lods
inc
or
sbbb
xor
les
rorb
fisubs
or
fisubrl
mov
add
or
add
add
ja
arpl
int
cli
test
neg
xchg
ja
jle
mov
jo
sqrtps
leave
insl
sbb
mov
sbb
adc
and
movl
cmp
inc
cld
adc
jno
mov
jns
movsl
out
add
jg
neg
push
xchg
mov
fisubrs
stos
fdivr
fwait
outsl
pop
adc
negl
xorb
mov
gs
outsb
das
leave
std
sbb
insl
add
jle
jns
insl
push
hlt
mov
pop
stc
rcrb
sti
loopne
rolb
xlat
adc
mov
pop
shr
lds
or
mov
bound
mov
andl
in
xchg
test
sbb
repz
xor
and
xchg
jno
pop
push
fstl
int3
xor
jnp
adc
and
xchg
pop
out
std
in
jo
cmp
jns
sarl
pop
aas
out
mov
ret
mov
adc
mov
push
mov
xor
add
negl
loope
icebp
pop
lret
push
scas
nop
fwait
cmpsb
xchg
and
adc
mov
fdivl
popf
mov
movnti
mov
divb
mov
pop
and
leave
or
loope
pop
add
cmpsl
movsb
test
mov
dec
cmp
scas
push
jns
imul
rclb
mov
push
and
sub
mov
mov
shl
movsb
push
lods
push
addl
mov
jl
push
int
bnd
dec
dec
aad
fdivr
pop
xor
mov
das
or
xor
push
popa
rcll
out
gs
and
xor
sub
mov
or
out
xor
mov
cs
std
or
dec
inc
pop
testl
test
stos
sbb
aaa
adc
ret
xor
stc
in
mov
daa
inc
add
cli
jno
icebp
lock
mov
lock
mov
and
or
leave
scas
call
inc
push
pop
mov
mov
mov
ljmp
cmpsl
aam
nop
adc
cli
js
mov
adcl
push
lds
lea
pusha
aas
xchg
cltd
or
jbe
push
push
sbb
mov
fisubrs
adc
stc
mov
insb
mov
pop
cmp
sbbl
into
xor
ret
xchg
pop
sub
cmc
dec
jo
sbb
jne
xchg
mov
clc
adc
sub
and
aas
xchg
sbb
scas
cmp
jae
in
les
mov
dec
push
dec
popf
icebp
adc
stc
in
or
out
ret
mov
push
ret
jge
pushf
sbb
out
in
rcl
aad
sub
gs
fstps
sti
pop
adc
dec
cmp
test
jp
sub
pop
jnp
push
mov
mov
loop
and
adc
js
dec
pop
js
dec
sub
stos
cmc
mov
mov
pop
notl
inc
xchg
movsb
xor
icebp
push
cmp
cmpsl
scas
push
adc
arpl
and
inc
loope
inc
mov
test
ljmp
or
pop
sti
popf
mov
or
lds
inc
mov
mov
dec
testb
inc
iret
or
andb
push
out
ljmp
and
mov
mov
and
push
inc
int
scas
inc
mov
jge
leave
loopne
imul
fsubs
sub
dec
adc
es
jb
rcr
adc
push
jnp
sub
loop
or
xchg
sub
icebp
ret
mov
mov
adc
loopne
push
add
das
inc
pop
loopne
jno
mov
adc
sti
imul
js
lahf
gs
roll
loope
xchg
pop
es
int3
outsl
movsb
xchg
es
sbb
pop
dec
lret
mov
ljmp
or
inc
fneni(8087
or
sub
sub
mov
mov
movsl
inc
mov
jbe
in
repz
mov
and
lea
lea
inc
test
dec
xchg
jge
imul
lods
orb
sahf
and
xchg
paddusw
mov
in
and
scas
or
lret
push
cmpsb
push
popa
push
and
mov
mov
dec
outsb
jp
dec
test
xchg
fisubrs
cmp
test
cwtl
dec
mov
xchg
outsl
fildll
insb
in
xchg
rcrb
ret
loop
test
mov
inc
jmp
aas
pop
and
lret
int
mov
xchg
outsl
push
loope
int
les
loopne
outsl
push
adc
and
jb
dec
pop
invd
data16
sbb
and
in
jne
push
push
imul
xchg
rclb
into
aaa
fbld
div
movsl
inc
adc
sbb
push
jmp
adc
push
bound
lahf
inc
xor
lahf
pop
loop
test
pop
xor
mov
adc
mov
cmpsb
call
jl
out
push
mov
aam
aaa
xchg
sti
xor
addr16
cli
pop
pop
adc
imul
sbb
push
dec
sbb
cmpsb
push
mov
push
add
adc
jle
js
cmc
lahf
test
dec
data16
fstpl
push
loop
mov
xor
clc
mov
pop
cmc
jecxz
scas
xchg
or
test
arpl
push
sub
cmp
cmp
insb
out
das
jge
arpl
jns
xor
sub
and
fstps
push
in
push
ds
jne
into
negl
xchg
mov
out
jbe
in
dec
jl
jg
jns
and
popf
test
dec
ds
stos
out
out
clc
stos
inc
sub
xor
into
rcrb
sub
xchg
jo
sbb
imul
pop
out
fldl
inc
xchg
inc
jle
divl
incb
and
mov
inc
ret
gs
and
inc
rclb
inc
shlb
movsl
or
imul
adc
mov
xor
or
pop
lcall
mov
hlt
sbb
movsl
pop
jb
sub
aaa
mov
mov
jne
xchg
cmc
jp
fcom
imul
xlat
push
sahf
jmp
daa
loope
ljmp
push
dec
aaa
or
pop
out
mov
xor
aad
in
jle
mov
dec
mov
les
mov
loop
mov
or
mov
into
mov
push
adc
clc
clc
xchg
aad
pop
or
mov
and
dec
out
xchg
push
es
pop
fisubl
push
mov
jl
in
mov
out
out
xchg
pop
sbb
cmp
xchg
js
jge
scas
bnd
stos
incl
mov
inc
popf
jge
test
xor
mov
stos
and
xor
sub
jg
cmp
das
les
hlt
cs
lret
xchg
dec
scas
outsb
adc
into
out
stc
and
adc
and
pop
mov
mov
pop
adc
idivb
dec
out
addr16
mov
cltd
xchg
xchg
xchg
dec
in
aam
iret
std
push
dec
in
push
lret
mov
inc
mov
dec
mov
mov
scas
js
xor
popf
push
lds
mov
test
cltd
cld
clc
push
dec
mov
scas
xchg
mov
push
psubusw
jns
jb
arpl
in
sahf
sub
cmpsb
push
ljmp
adc
push
mov
cmp
mov
pop
inc
stos
xchg
xor
adc
cmp
pop
xchg
cmpl
push
shl
sub
or
pop
call
lea
clc
jo
inc
lock
mov
es
mov
pop
and
les
or
jmp
cwtl
jge
and
ret
js
jb
adc
jmp
xor
push
push
or
lret
aam
fldcw
sbb
adc
and
jnp
shrl
pushf
daa
mov
jno
lods
sbb
jnp
stos
xor
inc
mov
in
sbb
push
add
stos
lods
je
mov
dec
inc
xchg
adc
ja
gs
xchg
fmul
mov
dec
dec
xchg
stos
in
js
add
stos
lods
or
into
fnstenv
stos
mov
dec
xchg
add
clc
pop
fsub
loopne
movsb
pop
lcall
aas
xchg
mov
add
push
adc
push
aam
lods
sub
mov
inc
fdiv
aad
rorb
nop
cmp
bound
adc
mov
mov
jbe
outsl
fs
lahf
adc
aas
scas
leave
into
insl
mov
lahf
adc
lods
inc
xor
xor
adc
dec
xor
dec
mov
xchg
cmp
pop
push
enter
xchg
nop
es
sbb
add
sub
add
add
xchg
pushf
mov
cmpsl
mov
and
out
pusha
into
clc
repnz
mov
movsl
mov
pop
enter
shll
or
ret
lahf
sub
bound
mov
pushf
pop
xchg
or
adc
push
stos
pop
fwait
into
ror
mov
push
xlat
sbb
cmc
mov
push
cmp
push
xor
sbb
ret
lea
mov
mov
adc
inc
fldt
fcoml
pop
push
mov
adc
xchg
data16
pop
xchg
rolb
or
or
enter
and
push
notb
cmp
sbb
push
sbb
mov
call
dec
push
gs
int3
lret
sbb
mov
adc
lods
mov
and
dec
mov
fisubrs
sub
pushf
loop
push
loop
sbb
pop
push
ss
popf
fildll
stos
dec
push
inc
pop
iret
hlt
or
outsb
or
sub
dec
cmp
ficoml
lahf
loopne
jne
sbbb
xor
je
inc
jns
aaa
nop
rclb
jge
inc
aaa
shlw
out
add
inc
jnp
fdivs
xchg
push
ret
push
sbb
dec
in
cmc
sbbl
xchg
xchg
pop
cmp
and
lock
rol
push
mov
push
insb
xchg
adc
push
jns
dec
mov
inc
push
adc
sti
inc
out
imull
add
cmp
jge
jmp
movb
push
leave
insb
push
inc
adc
and
je
test
pop
inc
mov
negb
sahf
xchg
sti
cld
dec
sbb
inc
pop
push
or
push
movsb
lds
push
sub
mov
cs
push
fisubrl
add
and
xchg
sub
call
movsl
into
ljmp
xor
pop
dec
jg
fcomps
mov
outsl
ss
inc
mov
sbb
xchg
aam
jmp
add
inc
pop
jbe
ret
cmpsb
out
adc
xor
into
ror
repnz
jmp
mov
pop
test
outsl
ljmp
pop
pusha
and
pop
out
inc
into
xchg
jns
inc
pusha
inc
test
mov
dec
outsw
xchg
ficoml
pop
into
imul
jl
pop
mov
lahf
mov
xchg
sub
sbb
jl
mov
mov
pop
cs
fldl
in
loope
lea
adc
xor
outsb
pop
push
out
push
rolb
cmp
rcrb
sbb
mov
sbb
cs
fisttpll
dec
mov
jae
mov
in
inc
mov
adc
pop
mov
mov
xor
out
mov
es
mov
rolb
andb
jmp
add
push
out
dec
hlt
xchg
cmp
jbe
js
test
adc
fcmove
add
incb
out
pop
into
shlb
insb
or
jb
pop
sbb
push
insb
adc
loopne
les
mov
pushf
dec
scas
cmpsl
call
pop
mov
adc
lods
sbb
outsl
mov
cs
lahf
xor
lds
mov
dec
in
sahf
roll
mov
dec
xlat
push
popw
inc
mov
add
pop
xor
mov
call
jmp
aaa
xchg
fwait
dec
jle
add
dec
cwtl
inc
insb
and
aaa
jmp
pop
dec
adc
leave
bound
pusha
mov
xchg
mov
in
add
mov
cli
push
mov
jns
cmp
in
daa
xchg
or
cld
out
in
fdivr
pop
in
mov
jne
les
aam
dec
dec
aaa
imul
lret
cmpb
fsubs
adc
mov
push
or
daa
fldl
outsb
jo
aam
pop
cmpsb
hlt
push
pushl
enter
les
jge
movsb
jle
push
call
jl
ljmp
or
aaa
lret
lock
scas
mov
aaa
push
flds
cmp
pop
ljmp
in
push
ret
cltd
mov
imul
lahf
ljmp
pushf
loopne
addb
insl
movsb
and
test
jno
es
cmp
leave
jg
stos
adc
outsl
loopne
fbstp
dec
jbe
push
mov
gs
cld
sub
nop
jl
lods
mov
dec
fstpt
fstps
xorl
imul
nop
icebp
fbld
xchg
pop
cld
dec
sbb
dec
cmp
or
or
scas
cmp
cmp
hlt
sub
cmpsb
inc
fdivl
push
and
test
lds
jne
out
inc
xor
xchg
lods
bound
mov
shll
ja
ret
inc
enter
js
mov
pop
pop
mov
and
jge
mov
mov
rclb
mov
lock
ror
jbe
push
xchg
or
jmp
push
dec
xchg
jno
sub
and
sbb
in
dec
mov
out
ja
sub
addr16
pop
xor
jmp
mov
aaa
adc
ret
ds
push
sbbl
sbbb
cs
sbb
fs
mov
adc
cmp
je
mov
push
mov
pop
lret
loop
jecxz
stos
fs
jo
imulb
test
mov
cmp
jecxz
sub
gs
mov
stc
push
and
pop
ret
dec
fldcw
int
lods
movsl
popf
mov
push
adc
inc
jno
xor
mov
sub
push
xchg
pop
mov
lea
xlat
mov
in
fists
sub
add
lcall
xchg
xlat
mov
xchg
xchg
cmpsl
xchg
sbb
jge
mov
adc
sbb
mov
icebp
int3
flds
nop
xor
ret
sub
xchg
cmp
adc
mov
push
pop
std
je
mov
cmpb
psrld
repz
xchg
mov
rcr
bound
add
pop
lods
xchg
mov
push
aad
daa
aas
fiaddl
pop
mov
cmp
dec
or
push
or
pop
xor
scas
pop
jo
fwait
gs
shl
push
pusha
stos
jge
movsl
dec
movsl
mov
stos
mov
sbb
xor
fistl
jg
mov
pop
cmp
push
pop
mov
push
adc
icebp
add
out
cwtl
add
mov
into
call
xchg
sub
cmp
pop
and
mov
imull
cmp
mov
push
iret
dec
push
ret
in
je
sub
rcll
dec
imul
cmc
bound
mov
rolb
mov
push
daa
pop
fldt
fcomps
and
test
push
mov
imul
int
movsb
leave
mov
push
mov
push
cwtl
cmp
xchg
push
nop
je
movsb
add
stc
int3
sub
adc
rclb
out
dec
mov
mov
repz
or
xor
and
jecxz
movsl
sbb
fisubrl
dec
cmp
cli
pop
sub
call
in
xchg
js
or
mov
imul
xchg
sub
testl
arpl
aam
xor
roll
and
and
lcall
and
sbb
sar
pop
xchg
pop
ss
fdivrs
sbb
lock
pop
lock
je
popf
cmp
push
and
mov
ljmp
mov
mov
adc
xor
in
or
lahf
movsl
test
rcrb
jbe
in
ljmp
or
aad
fiadds
in
adc
outsl
in
push
shl
iret
jmp
int
ds
xchg
xor
dec
ret
adc
xor
cld
pushf
cltd
pop
mov
pop
mov
enter
mov
and
into
cwtl
stos
ds
pop
add
outsl
test
adc
test
popa
shlb
imul
xlat
scas
add
mov
or
addr16
jecxz
cwtl
fwait
sub
push
jo
aaa
jge
push
test
mov
pop
add
add
sub
cmp
pop
mov
rcrb
in
jle
iret
sarl
stos
add
push
jge
or
inc
and
leave
xchg
icebp
test
ret
mov
sbb
mov
cmp
adc
xchg
pop
mov
dec
cmp
cmpsl
sub
ss
lret
addl
jmp
mov
xlat
mov
jecxz
jecxz
jno
test
dec
mov
pop
stos
pop
jo
out
cmc
stc
fidivrl
ficoml
or
mov
lock
jae,pt
jnp
cmp
sti
mov
add
ss
pop
dec
test
xchg
out
inc
lock
test
inc
push
popf
mov
pop
rdmsr
jnp
das
pusha
and
add
shrb
pop
cmp
xor
adc
jb
sbb
jns
sbb
clc
enter
jmp
sahf
sbb
mov
jmp
pop
add
nop
fs
adc
and
inc
push
out
inc
mov
adc
mov
add
and
lock
add
and
stos
shlb
sbb
ss
ja
mov
outsl
mov
push
dec
cmp
iret
mov
inc
rcr
stc
push
lret
and
idivl
lds
lahf
adc
ficoml
setno
pop
jl
repnz
sahf
push
and
movsb
sahf
push
jno
push
pop
dec
mov
addr16
dec
loop
mov
lods
popa
jns
xchg
fisttps
test
mov
pop
test
data16
and
mov
popf
sbb
andb
push
hlt
cli
mov
or
scas
xchg
jecxz
push
iret
sbb
xor
push
outsb
call
fisubrl
subb
xlat
lret
cs
aam
xchg
mov
sbbb
mov
fstpt
xor
fsubs
dec
mov
mov
jl
out
pop
pavgb
xchg
jae
outsl
inc
cltd
mov
pop
dec
mov
push
cltd
ret
cmpsb
or
test
andb
sub
push
rcrb
loop
xchg
shll
mov
push
icebp
cmp
lods
xor
fsubrl
push
push
out
pusha
sub
inc
nop
ss
and
push
imull
popf
sbb
push
xchg
cmp
sbb
mov
in
loope
and
adc
fidivs
jae
pop
adc
daa
out
jge
jno
add
sahf
loop
xchg
out
mov
xchg
push
sahf
xor
pop
in
fidivrs
sub
inc
mov
mov
out
insb
mov
dec
or
mov
rcr
xchg
jae
dec
clc
cld
add
adc
cld
and
icebp
sbb
fisttpl
aam
mov
cmp
and
fbld
cmp
aaa
out
pop
and
fs
jns
pop
enter
mulb
adc
loop
andl
popf
xor
xchg
lret
outsl
cs
inc
insl
pop
rdpmc
jne
mov
negb
insl
ret
pop
dec
mov
fmuls
sub
push
pop
dec
aas
repz
push
and
jno
out
mov
mov
pop
push
outsl
and
inc
dec
icebp
sbb
sbb
lahf
xor
popa
lcall
ljmp
fildl
das
popa
cmp
pop
cltd
pop
stos
mov
sbb
fldl
shll
mov
cld
cmpsb
rcrb
pop
and
inc
and
mov
lods
jb
subl
inc
mov
adc
xorl
sbb
aam
cmpl
stc
pop
scas
cmp
xchg
and
lret
mov
xchg
or
addl
cs
push
into
ss
pop
nop
iret
jmp
jmp
pop
xor
pop
sbb
cmp
out
repz
fmuls
test
shr
xor
jnp
cs
sbb
and
cli
add
popa
je
sahf
fists
stos
bound
fwait
or
pop
rorl
fwait
push
cld
out
dec
mov
pop
adc
adc
cmp
jmp
ret
ret
fld
dec
stos
mov
inc
jmp
in
push
pushl
out
arpl
push
movsl
pop
jle
or
enter
mov
clc
add
mov
pushf
or
dec
aad
push
sub
mov
jmp
inc
lock
push
jecxz
dec
lret
push
jmp
push
js
cwtl
xchg
clc
das
neg
jmp
mov
jbe
add
cmp
xchg
adc
cmc
leave
push
mov
lods
jns
iret
cli
mov
shll
mov
push
nop
push
dec
xchg
in
mov
out
in
lea
sti
mov
mov
out
xor
cmp
scas
loope
addr16
sbbb
xchg
mov
dec
mov
ret
gs
test
lahf
outsb
scas
xor
jl
out
mov
ret
xchg
jmp
in
ss
fnstsw
scas
cmp
lcall
add
shll
sub
test
xchg
mov
lcall
jecxz
add
shlb
pop
push
repnz
push
push
rcrl
inc
cmc
sbb
sub
imul
add
cld
in
insb
jns
std
dec
and
jp
lret
ret
adc
dec
sub
sahf
call
lods
adc
fcomp
and
int3
mov
mov
dec
lods
into
cmp
and
or
out
shl
push
mov
fistpl
mov
dec
mov
sbb
push
ds
in
scas
aas
fbstp
cmpsb
inc
jne
push
fchs
cmp
xchg
repz
xchg
jmp
push
add
pop
add
out
and
jp
jmp
and
mov
mov
sarb
adcl
mov
lea
les
scas
inc
xlat
cli
hlt
lods
ret
adc
lahf
gs
jno
add
lret
cmpsl
sub
pop
sub
lds
jns
scas
mov
or
bound
clc
outsl
iret
aam
fwait
cmp
jo
nop
xlat
jmp
in
add
jb
pop
out
mov
mov
inc
adc
rol
pop
mov
popf
sbb
loop
inc
data16
aas
subl
lret
jmp
aam
adc
dec
xlat
inc
notl
dec
xchg
sti
in
and
xchg
movsb
pushf
testb
push
dec
mov
addr16
stc
or
sub
insl
clc
inc
test
out
xor
js
mov
mov
push
std
mov
fucomip
inc
xchg
cmp
mov
in
inc
popa
jge
sub
cmpsl
iret
add
hlt
test
std
lret
popl
or
pushf
stc
loop
mov
clc
sbb
in
xlat
not
rcll
imul
out
cmpsb
mov
push
dec
push
and
dec
pop
ficoml
jns
mov
push
adc
addr16
jl
inc
fdiv
cmc
mov
jp
adc
arpl
push
jne
mov
pslld
lods
clc
inc
iret
fs
es
cwtl
repnz
paddusw
push
or
out
sbb
out
push
and
leave
push
mov
rolb
sbb
mov
add
cmp
cmc
xchg
int
stos
jo
jbe
outsb
pop
mov
arpl
fsubs
in
ds
sbbl
inc
push
lds
jb
pop
pop
xchg
sbbl
inc
mov
xor
mov
lret
mov
outsl
fs
pop
cmp
jg
je
xor
test
insb
add
in
fsubs
icebp
cmp
das
xor
dec
xchg
xor
out
mov
rolb
jb
xchg
enter
fs
ficomps
mov
popf
pop
aad
cltd
pusha
int
cmp
ljmp
xor
adc
movsl
into
xchg
lss
dec
outsb
shlb
lret
inc
outsb
xorb
xchg
and
fisttpl
sbb
data16
sub
sbb
xchg
add
xchg
ret
cmpsb
push
sbb
fabs
jno
cli
leave
divb
enter
aaa
mov
xchg
xlat
loop
jb
cmp
mov
sbb
pop
sub
flds
add
mov
fists
dec
mov
lods
mov
out
out
fcmovne
xor
and
dec
int
pop
lea
jmp
xchg
pop
rcrl
es
xchg
aad
pop
dec
push
packuswb
int3
mov
nop
test
mov
lret
mov
mov
lret
ss
in
cld
repnz
cmc
aas
pop
mov
jo
fisubl
test
lret
jns
rcrb
add
sti
mov
mov
add
and
pushl
add
fsts
sub
mov
dec
jne
jecxz
repnz
and
fnsave
lds
into
xor
insl
popl
mov
sbb
push
push
xchg
push
push
sbb
gs
movsb
pop
cmc
xchg
and
dec
cwtl
xor
mov
xor
xchg
inc
and
dec
mov
inc
pop
call
ret
sub
adc
sti
push
sbb
pop
mov
sbb
and
jg
adcl
mov
xchg
add
inc
jmp
inc
push
in
jecxz
xchg
jo
pop
mov
mov
jnp
test
mov
jbe
call
and
cmp
adc
pcmpeqw
bound
mov
push
mov
sbb
lahf
pop
pop
scas
mov
mov
mov
ss
mov
cwtl
jb
fcoml
arpl
xchg
mov
rcrb
mov
and
pop
mov
cmp
inc
push
sbb
pop
andb
dec
rorb
loope
mov
cltd
mov
lahf
aas
add
bswap
mov
mov
jo
jmp
data16
push
loope
adc
loopne
push
mov
mov
movsl
cmpsb
nop
inc
mov
sti
sub
sub
fwait
cmp
nop
test
sahf
mov
sub
inc
sti
pop
and
xchg
test
pushf
adc
test
subl
sub
cmp
outsl
scas
addl
and
push
xor
or
pop
adc
pop
xchg
push
cwtl
gs
sarb
dec
dec
mov
pop
mov
sbb
sub
mov
cmp
lret
in
roll
clc
push
dec
frstor
or
cld
in
push
call
mull
js
jg
mov
in
stos
sub
jge
jge,pn
in
sub
mov
jo
mov
sbb
call
int
enter
add
imul
dec
mov
cmpsb
scas
mov
cwtl
jecxz
mov
gs
cmp
jmp
adc
dec
jne
mov
dec
leave
mov
mov
cmp
sbb
pushf
stos
push
sti
cs
into
out
out
mov
test
mov
adc
inc
mov
inc
lock
xor
cli
jecxz
std
sbbb
push
scas
in
mov
pop
repnz
xchg
or
adcl
dec
rol
mov
jecxz
movsl
jg
dec
inc
jno
add
shll
push
mov
mov
daa
jae
das
jmp
sahf
ja
dec
inc
push
jge
in
xor
mov
cs
cld
mov
pop
shl
hlt
hlt
xor
call
gs
mov
fdivrl
inc
cmpsb
sbb
fcompl
adc
inc
fsubrs
lcall
outsl
daa
loopne
jl
ficoml
inc
xchg
push
cld
push
and
fwait
mov
movsb
hlt
repz
out
mov
push
xor
jge
sahf
data16
mov
addr16
enter
xlat
jnp,pn
sarb
fsubp
adc
mov
xchg
data16
push
shl
push
dec
ja
mov
mov
ret
test
cmp
adc
inc
push
out
sbb
repz
test
icebp
adc
jp
shll
sti
push
push
and
cmpsb
mov
and
push
int3
hlt
dec
out
pop
sub
shr
mov
jns
push
stc
sub
gs
pop
lds
loop
push
fimull
jmp
cld
orl
int3
cs
push
jo
adc
adc
pusha
mov
adc
mov
clts
fisttpl
repz
orl
jae
mov
and
xchg
and
jle
aad
xchg
mov
sub
or
insb
pop
push
scas
scas
test
pushf
ljmp
out
shl
fildl
mov
inc
cs
cli
fs
cmp
mov
mov
push
sbb
fisttpl
lret
test
xor
cmp
insb
scas
ds
dec
test
pop
adc
push
mov
movsl
fs
cmp
fldl
subb
cli
inc
loope
mov
fdivr
push
jge
jbe
inc
or
xor
or
mov
pusha
jmp
mov
out
aam
lret
add
fisubrl
add
jnp
or
sub
dec
fistps
mov
arpl
jae
mov
int
cmc
popa
xor
lahf
push
sub
out
gs
cmp
lods
lods
mov
push
gs
dec
ljmp
add
mov
mov
push
out
add
add
movsb
inc
xchg
add
testb
fisubl
nop
call
shlb
outsl
pop
pop
add
push
mov
add
mov
sub
idivb
int3
add
inc
rcr
test
aas
adc
incl
xor
cli
pop
inc
mov
out
nop
cld
and
lea
cmc
inc
out
stos
sub
mov
sbb
push
fldl
push
nop
mov
lods
push
repz
sub
cmp
mov
bnd
jne
fildl
or
adc
sub
adc
sub
shr
cmp
in
movsb
mov
insb
call
out
and
stos
push
out
mov
mov
push
in
lock
fdivs
push
not
mov
out
xor
jbe
mov
push
dec
push
and
mov
inc
add
push
sub
stos
add
push
negb
out
xor
stos
push
mov
mov
in
in
call
sbb
icebp
jb
or
mov
sub
faddl
jns
out
lret
pusha
shrb
adc
push
shll
mov
pop
aas
repz
shll
lcall
cmp
jns
rcrb
sub
adc
mov
adc
jae
sbb
adc
mov
mov
in
jns
repnz
sbb
jb
dec
lcall
push
mov
aam
or
outsb
dec
sbb
mov
into
cwtl
push
adc
aas
and
inc
jnp
ret
test
xor
cmc
add
xchg
and
jb
adc
es
into
push
xchg
cld
cmp
lods
pop
xor
dec
jns
repz
jae
scas
mov
int
xorb
sbb
push
pusha
cmc
inc
jo
popf
aam
xorl
jp
jmp
lahf
leave
out
ret
pop
jbe
cwtl
mov
dec
cli
mov
fildl
cmp
subb
cmp
sbb
subl
sbb
jmp
rcr
pop
sub
inc
shr
jg
sbb
mov
or
cmp
push
rsqrtps
in
inc
test
xchg
pop
je
lret
sub
mov
jp
push
cmp
rorl
add
ret
jae
aad
mov
imul
repz
xchg
xchg
mov
mov
movsb
repz
imul
aam
and
rol
shrl
fs
loopne
sub
je
dec
leave
jg
cli
sar
call
xor
mov
loope
loopne
ljmp
rcrl
lods
lea
lock
daa
adc
ror
xchg
adc
sub
mov
movsl
les
sbb
imul
add
or
lds
push
mov
or
sbb
and
orb
sub
xchg
cwtl
dec
shrb
addl
arpl
cltd
sbb
les
nop
cli
fstl
fwait
imul
lock
mov
dec
aam
in
out
add
xchg
mov
test
dec
lret
inc
andl
addr16
call
sbb
std
adc
lahf
mov
aam
imul
xor
jl
pop
out
add
jbe
jo
pop
popa
movsb
xchg
dec
jns
enter
xchg
mov
mov
stos
fwait
into
or
mov
orl
push
jecxz
push
aam
fistps
addr16
scas
sub
shl
stos
mov
jle
rcll
iret
repnz
and
add
pop
push
jns
aam
sbb
or
ret
mov
push
clc
push
adc
ss
pop
mov
arpl
outsb
mov
push
leave
inc
dec
and
mov
add
cmp
xor
pushf
inc
int
xchg
sbb
jno
repz
in
pop
and
push
mov
mov
dec
mov
dec
xor
xchg
subl
daa
xchg
std
lds
dec
sub
movl
fcompl
push
imul
mov
jae
rolb
cmp
dec
fidivl
movsb
pop
ja
pop
call
mov
les
insb
fiadds
ja
cmp
scas
mov
shrl
dec
pop
lret
xor
push
mov
push
icebp
dec
in
and
stos
fsubrs
pop
jbe
lcall
enter
xor
adc
dec
dec
push
lods
dec
xlat
xor
lret
push
adc
pop
scas
lea
testb
out
push
mov
inc
hlt
mov
stc
lret
addb
stc
push
mov
scas
addr16
mov
movsb
dec
loope
push
dec
lds
scas
inc
sub
out
cmpsl
adc
fwait
dec
shl
mov
mov
sub
sti
xor
mov
xchg
test
mov
sub
cwtl
ror
cltd
out
xchg
mov
aad
pop
lret
sbbl
adc
lcall
stos
bound
mov
dec
inc
popa
fcmovb
push
insl
rorl
fidivrs
sbb
sub
movsb
mov
jmp
push
into
xor
sbb
pop
popa
mov
les
js
rclb
add
lock
addb
cwtl
push
andb
add
mov
je
lret
push
in
adc
lcall
push
negl
push
mov
clc
adc
cltd
mov
jge
in
cmp
or
sbb
xlat
rolb
enter
cwtl
mov
mov
loopne
xchg
addr16
test
test
inc
or
xchg
cmp
xchg
push
add
lea
aaa
aas
xchg
sbb
aad
push
cmp
pushf
nop
jge
sub
or
cmp
mov
in
mov
repz
fsts
inc
mov
cbtw
lock
pusha
or
push
cli
adc
or
sbb
mov
jnp
mov
push
jl
or
aaa
pop
add
lods
inc
jno
sbb
cmp
dec
xlat
mov
dec
test
int
lock
insl
lcall
inc
push
cmp
pop
test
pop
idivl
inc
jle
lock
outsb
movsl
scas
hlt
mov
out
ja
push
pop
mov
jg
push
fsubrs
subl
pop
es
test
shll
sbb
pop
mov
aad
push
push
mov
jne
jns
jns
in
xchg
inc
imul
sbb
mov
movsb
sahf
imul
shr
xor
rcll
mov
pop
outsb
jg
jp
cmpsl
jb
xor
pushf
cld
sub
push
and
cmc
xchg
bound
pop
add
fwait
or
idivb
xchg
add
in
push
cmc
mov
sbb
pop
shl
jg
ljmp
pusha
mov
inc
adc
mov
pusha
mov
outsb
mov
adc
outsl
cli
jae
cltd
iret
pop
lods
cld
push
scas
addr16
aas
leave
jae
xor
cld
mov
imul
ds
bound
or
or
out
cmp
cwtl
or
bound
push
cmp
mov
sbb
aas
icebp
sub
mov
jno
inc
or
lret
add
fcomps
sbb
and
stc
outsl
lea
mov
aaa
xchg
dec
cmpsl
or
jmp
sbb
cli
fsubr
clc
sbb
push
and
ds
das
sub
sub
popf
scas
rcrl
insl
mov
pop
jns
or
xchg
fdivrl
xor
in
je
cld
shlb
or
cmpsb
jae
lcall
fidivs
outsl
imul
popa
push
jns
jae
stc
clc
push
cld
or
push
jne
push
xchg
xor
xchg
and
mov
out
mov
nop
xchg
shll
in
jno
xor
push
pusha
lret
gs
loop
pop
cmc
sub
push
inc
mov
sub
aaa
adc
jl
int
xchg
leave
add
cmpsl
ds
xchg
lea
les
and
test
push
repnz
lret
sbb
ret
mov
pop
das
shlb
adc
lcall
adc
and
push
cmp
movl
stos
scas
fisttps
loope
out
cmpsl
popf
push
fisttpll
pop
cmp
dec
sub
pop
push
inc
xchg
out
inc
iret
mov
imul
adc
mov
test
test
xor
aaa
inc
es
lret
xor
push
cmp
push
add
xor
je
rorb
aaa
test
and
xorl
imul
inc
or
rol
adc
out
xchg
push
cmp
imul
mov
pop
sub
fistl
cmp
addr16
fldenv
out
xor
mov
ficompl
in
in
loope
mov
or
and
int
mov
xchg
push
mul
push
jle
xchg
push
pop
aas
jae
jle
pop
push
jns
rcll
add
fs
jge
pop
inc
ret
pop
mov
or
out
push
xlat
andb
icebp
mov
mov
sbb
lea
dec
das
jb
mov
mov
hlt
ljmp
gs
cmp
int3
imul
dec
ret
pop
lods
lods
pop
repz
lret
mov
jmp
mov
lods
fwait
sub
xlat
in
sub
lret
inc
out
or
lds
sbbb
xchg
aas
and
push
popa
sbb
into
fs
fstpl
mov
xchg
fwait
rcrl
mov
fistps
or
iret
movsl
fiadds
jmp
es
std
xlat
faddl
sahf
loopne
dec
xchg
pop
jnp
xorl
mov
fnstsw
push
dec
xchg
fsubs
in
sahf
dec
je
test
xor
xchg
mov
rcrl
inc
xor
scas
pop
jae
cltd
pop
pushf
jb
cmpsb
push
inc
push
lods
mov
faddl
mov
cld
push
add
cwtl
add
adc
mov
mov
cmp
repnz
mov
pop
xchg
and
test
rol
fisubrl
pop
inc
add
dec
aas
jne
sub
mov
iret
fcoml
in
xlat
js
jo
mov
lcall
fs
adc
mov
cmp
xchg
push
push
xor
sbb
jmp
test
ljmp
testl
pop
frstor
jns
sbb
fisubl
fdivl
dec
mov
cs
leave
cmp
lcall
loop
cmc
mov
subl
hlt
fldenv
lcall
lds
or
sbb
push
inc
dec
push
inc
mov
push
dec
pop
xchg
jp
or
fwait
sub
mov
fcomi
push
or
sub
cmp
cmp
pop
xor
push
mov
cli
push
lods
mov
sbb
or
pop
sbb
fidivl
fistps
pop
sub
mov
adc
mov
cmp
or
jb
and
xchg
mov
data16
pop
lcall
dec
xor
push
mov
jle
nop
xchg
pushf
jno
je
mov
fs
inc
adc
adcl
sbb
sbb
stc
pop
nop
daa
mov
mov
and
mov
subb
std
adc
pop
sub
cmp
movsb
pop
mov
cmpsl
movsb
shll
jl
int3
repz
push
imul
sahf
rcrb
sbb
push
movsl
lcall
mov
inc
sar
cmpsl
data16
out
fistpl
stc
sub
dec
jmp
mov
aad
dec
push
adc
or
mov
mov
push
add
and
clc
mov
jns
adc
repz
nop
push
into
mov
mov
pop
adc
lahf
lods
jb
out
xchg
data16
push
mov
scas
lods
and
mov
daa
fst
jo
jle
adc
in
ret
push
xorl
jnp
enter
test
mov
std
dec
test
push
lods
push
mov
imul
xchg
call
sbb
cltd
lahf
movsl
fs
or
cmp
rorb
lock
xlat
dec
les
dec
push
push
lock
sbb
jno
inc
jae
stos
pop
cli
ds
jnp
fbstp
push
cmp
pop
fisubrl
xor
adc
push
dec
cld
fidivs
mov
dec
mov
movsb
adc
jp
pop
mov
inc
pop
and
dec
pop
sbb
and
mov
jl
pop
mov
lahf
sbb
cli
adc
push
pop
mov
or
mov
add
cltd
push
bound
push
xor
rorb
aas
fsubs
out
lods
cmpsb
rcl
das
xchg
cmp
xor
dec
inc
repz
nopl
fs
outsl
push
ret
clc
lcall
jmp
in
loope
outsl
daa
repnz
push
and
push
jecxz
shll
mov
cmp
fnstsw
rorl
jno
adc
ja
mov
mov
bound
lea
bound
cmp
xchg
xlat
xchg
repnz
rcll
mov
sub
pop
xchg
lahf
lahf
jns
push
cmpsl
adc
mov
sbb
roll
pusha
fstl
in
test
cmp
loopne
int
aas
fs
xor
mov
cltd
pushf
pop
mov
js
aas
sti
push
into
jg
arpl
sti
sar
sbb
sarb
add
dec
fwait
or
iret
movsl
mov
inc
push
cli
sbb
scas
or
and
xchg
sub
pop
stos
cmpl
dec
icebp
push
imul
nop
add
cmp
add
pusha
neg
xorb
inc
loope
fisttpl
inc
xchg
pop
and
mov
js
add
js
jg
in
pop
xchg
insl
pop
push
dec
cli
and
fs
mov
sub
aad
scas
popf
in
jecxz
std
xor
sub
fcmovnu
jo
jnp
ss
pop
insb
stos
mov
movsb
ret
add
mov
dec
or
cli
xor
xchg
imul
outsb
out
sub
sub
out
cmp
add
into
div
ja
adc
adcb
fsubrl
into
adc
pop
push
stos
clc
ror
add
out
push
add
xor
mov
fisubs
inc
inc
shrl
imul
sbb
push
inc
rolb
and
icebp
aaa
fldcw
jmp
sub
lock
das
push
xor
jbe
mov
mov
sti
icebp
lock
iret
xor
loope
in
jg
cli
pop
mov
or
push
sub
jns
jno
inc
pop
jg
and
cmp
jbe
push
fmull
cmp
mov
imull
inc
push
sbb
ret
adc
imul
es
std
shl
jns
sbb
push
cmp
mov
fisubs
sbb
xlat
addr16
fsubrs
xchg
push
neg
lret
leave
rcl
ds
into
mov
mov
lds
aaa
popf
out
add
ja
push
adc
out
fldenv
sbb
add
iret
mul
pop
lods
das
int3
mov
aaa
pop
jle
fimuls
popa
lods
in
repnz
wbinvd
push
enter
lret
loopne
rcl
push
sub
sbb
test
xor
inc
lods
sbb
jns
pop
std
inc
stos
cli
mov
dec
jne
fsubrl
pop
int3
popf
push
cltd
in
adc
xor
or
adc
mov
data16
pop
das
xor
icebp
sarb
cmp
test
scas
iret
gs
mov
inc
xchg
fwait
cli
aaa
xchg
enter
es
and
out
or
dec
es
leave
xchg
outsb
inc
xor
push
stc
mov
stos
loop
pop
jg
xchg
cmc
pop
cmp
aaa
and
cmc
in
push
xor
mov
fildl
cs
xlat
jae
pop
out
fnsetpm(287
add
add
aas
popa
mov
leave
fcmove
outsb
mov
loop
lret
ss
pop
into
aam
out
inc
xchg
loopne
xor
lock
gs
lret
or
jb
push
je
and
aad
add
insb
pop
pop
mov
push
add
and
ss
inc
comiss
mov
or
sub
loopne
fxsave
adc
push
pushf
push
sub
sub
push
lds
jae
out
xchg
fwait
push
sbb
mov
shl
pop
mov
stc
push
in
iret
jno
ss
sarl
sub
and
xchg
push
xchg
out
add
adc
dec
lcall
xor
or
hlt
call
pop
mov
aam
adc
push
add
gs
sbb
ss
and
iret
orl
mov
push
ret
pop
dec
and
int
gs
sub
aas
pop
lahf
mov
jns
loope
cmpsl
xchg
xor
leave
out
stos
sbb
pop
xchg
xchg
int3
shlb
outsb
jmp
and
jns
nop
mov
pop
jg
push
fs
popf
ftst
adc
clc
insb
push
in
mov
pop
sub
icebp
and
hlt
icebp
inc
sub
out
adc
cmp
xchg
inc
inc
ljmp
jnp
inc
add
cwtl
shl
pop
mov
lret
mov
mov
dec
push
dec
mov
xchg
ret
mov
add
mov
cmpsl
cli
inc
xlat
data16
jmp
jne
xor
cmp
mov
sbb
lret
sub
xor
add
dec
pop
shll
cmp
adc
cwtl
repz
jl
push
test
in
pop
push
test
hlt
add
adc
pop
cld
push
inc
scas
ret
sub
cmc
push
js
shrb
rclb
lret
arpl
mov
ljmp
out
lea
mov
sub
mov
daa
sub
mov
xchg
xchg
add
push
push
outsl
or
pop
add
js
jg
les
inc
and
arpl
mov
xchg
mov
xchg
inc
adc
into
sub
arpl
dec
jecxz
and
sbbb
into
mov
mov
stos
xchg
enter
insb
inc
lods
cli
outsl
cs
cmp
cmp
sub
sub
xor
dec
popl
dec
mov
mov
mov
subl
fadd
cwtl
push
adc
leave
std
outsl
push
jbe
sub
sbb
cli
sub
into
cs
push
fistpll
dec
pop
in
sbb
mov
xchg
fdivs
lcall
inc
movsl
dec
leave
adcl
inc
nop
jbe
movsl
or
xchg
in
daa
out
sbb
jb,pt
in
xor
imul
ljmp
push
scas
or
das
add
lods
lea
cmp
push
mov
jmp
std
cli
xor
jmp
jg
orl
add
sbb
arpl
or
xchg
cmp
dec
xchg
sub
lret
mov
in
mov
stos
jmp
jl
sbb
pushf
xlat
lock
popf
mov
pushf
adc
mov
or
jmp
notb
mov
rorb
sbb
xchg
nop
mov
mov
push
inc
fisubrl
jg
or
add
mov
xorl
sbb
sub
aas
cli
jmp
mov
nop
adc
xor
ror
pop
jp
push
pop
imul
pop
imul
jne
inc
movsb
scas
pop
push
jge
jae
inc
pop
addl
cli
or
push
jnp
mov
test
sar
xchg
shlb
stos
dec
loope
int3
xchg
push
dec
pop
dec
leave
cmp
sbb
test
push
mov
pop
jnp
or
fidivs
loop
in
repnz
push
int3
je
xchg
loopne
cmp
cli
pop
or
negb
jmp
jmp
push
cmc
sarb
cltd
ljmp
mov
mov
and
test
and
fs
cmp
je
sarl
push
cld
ss
push
push
call
int
lret
add
repz
movsb
sub
call
add
or
dec
ret
inc
pop
fstl
and
xchg
dec
adc
dec
add
incl
mov
pop
dec
xor
xchg
inc
mov
insb
mov
fisttpl
push
aam
out
insl
xor
mov
sbbl
sti
fcmovnb
cltd
push
aad
xchg
sbb
mov
in
lods
lock
fnsave
scas
loopne
fs
shrb
adc
xlat
and
testb
or
aad
xchg
arpl
jmp
hlt
jecxz
mov
push
and
mov
jns
out
sub
xchg
stos
adc
or
push
cli
test
cld
mov
clc
ds
lret
add
cmpsl
push
cmp
dec
sub
in
int3
imul
and
mov
icebp
cwtl
lds
push
stc
and
je
push
leave
pop
sub
dec
or
pop
aad
outsl
mov
and
adc
mov
jg
mov
or
mov
stos
lods
aaa
cmpsl
sub
or
xchg
cmpsl
jp
inc
push
cmc
stc
push
push
and
es
cmp
push
jmp
frstor
jmp
or
jmp
or
negl
add
jo
jmp
addr16
es
sahf
mov
xchg
push
orb
sarl
repnz
sub
mov
inc
mov
ret
stos
shll
jl
add
lods
xchg
dec
imul
cmp
testb
or
push
insb
aad
cmp
sub
add
pop
out
or
push
and
push
dec
lahf
les
lret
and
add
jno
mov
out
mov
pop
pop
js
mov
imull
imul
xchg
shr
movb
leave
jne
and
test
rolb
ftst
popl
inc
mov
dec
andb
jo
sub
xor
movsl
mov
mov
xlat
jo
inc
cmp
cmp
cmp
test
movsb
out
hlt
jge
jnp
pop
jnp
scas
or
lods
fldt
jb
mov
fld
dec
or
lret
das
mov
sbb
int3
aad
fstpt
sbb
pop
out
lock
push
push
rorb
ds
xchg
xor
outsl
or
dec
cmp
pop
int3
sahf
adc
aam
mov
xor
out
xchg
out
dec
ds
std
mov
pop
and
mov
pusha
xor
jb
sbb
sub
aam
mov
je
cli
sub
pop
mov
push
jb
mov
sbb
xchg
push
sub
cmp
out
cwtl
js
cmp
or
jb
sbbb
fbstp
dec
sub
adc
imul
imul
fistpll
popa
jno
ljmp
addr16
adc
mov
dec
icebp
mov
pop
std
in
loop
test
or
xor
mov
xchg
out
mov
insb
push
aam
adc
sbb
dec
pop
xor
lahf
cmp
daa
popl
pusha
adc
fiadds
out
xchg
and
inc
ficompl
test
pop
sub
sahf
shrb
sbb
push
adc
cmc
out
mov
mov
leave
inc
cmpsb
pop
in
mov
or
sbb
pop
shll
pop
shlb
and
push
or
repnz
or
xchg
jo
fsubrl
push
pop
or
fdivrs
sub
fldenv
xor
pop
xor
xchg
dec
jae
cmp
add
out
mov
insl
add
dec
addr16
sarl
cmpsl
fdivr
xchg
jo
jo
stc
push
push
mov
mov
rclb
imul
leave
xchg
rcll
sbb
add
push
xchg
aas
data16
sbb
xchg
pop
ljmp
clc
sbb
or
mov
lahf
jbe
sbb
fcompl
cld
test
sub
adc
pop
mov
inc
and
xchg
pop
cmp
jle
pop
lahf
out
pop
pop
pushl
movsb
or
fisubrs
dec
test
aam
dec
aam
pop
test
jae
lret
repnz
push
popf
cmpsb
hlt
insb
jmp
out
pop
or
aas
mov
loopne
adc
adc
fwait
fs
clc
pushf
mov
aam
lcall
xchg
adc
push
sbb
rclb
jbe
fistpll
push
mov
xor
xchg
push
jbe
popf
mov
cmpsl
testb
das
push
test
mov
mov
filds
mov
jae
popf
or
inc
jb
addr16
test
cli
inc
call
dec
out
loope
mov
fs
scas
or
je
imul
xor
or
lods
pop
inc
or
test
mov
jb
repnz
or
pusha
es
xchg
jae
jnp
aaa
add
cmp
lret
xor
xchg
sub
rcl
insb
pusha
inc
faddp
dec
mov
push
jecxz
cmovg
mov
xchg
dec
aaa
xchg
and
cmp
mov
push
test
enter
cmc
cmp
dec
add
xor
cmp
sub
int
ret
dec
popf
inc
movsl
jno
jecxz
enter
cmpb
add
adc
pop
movsl
sbb
rcrb
enter
sbb
dec
jmp
xchg
push
outsb
xchg
and
cmp
lock
dec
jb
and
insl
pop
ja
and
scas
dec
ret
cmp
lret
adc
pusha
imul
lods
mov
adc
jae
mov
dec
mov
mov
subb
fsubrs
xor
ret
lods
mov
jg
std
popa
dec
ds
outsl
jno
cmp
popf
xor
pop
mov
hlt
adc
xchg
xor
sbb
fnsave
xchg
in
mov
jg
pop
shll
jo
pop
add
adc
add
int3
sbb
lcall
clc
pop
adc
test
add
fidivl
in
sub
lcall
pop
and
dec
mov
sti
jae
pop
sti
iret
fcomp
jo
test
sub
cmp
jge
xor
inc
mov
mov
mov
cmc
aam
sub
sub
out
add
dec
add
cmc
addl
pop
dec
mov
sti
pop
and
jmp
lcall
fsubr
xchg
adc
push
and
call
xchg
jne
adc
sub
mov
test
jle
sti
push
mov
xchg
pop
nop
mov
rcrb
shll
test
mov
cld
stos
pop
mov
add
lock
aas
jg
loopne
add
push
push
mov
cld
xor
dec
add
fisubrl
sarb
les
movsb
loopne
cli
inc
sub
mov
sbb
cmp
int3
js
jnp
jbe
jbe
jno
xor
das
aaa
into
sbb
jmp
mov
lret
nop
mov
cwtl
aad
js
adc
or
cmp
adc
bound
movsl
pop
xor
rclb
cwtl
loopne
insb
xor
aad
insl
cmp
sub
cld
mov
cli
test
jp
inc
pop
sbb
adc
inc
mov
or
push
dec
adc
push
aad
mov
or
mov
enter
data16
repz
mov
insw
push
popa
out
stos
add
adc
ja
jbe
arpl
shrb
add
adc
push
cld
xchg
xor
inc
out
in
xor
int
divl
shl
lock
daa
out
dec
mov
cmpsb
pop
mov
loop
push
cwtl
stos
sbb
out
test
xor
sbb
push
sbb
pop
imul
push
lods
pop
jns
mov
and
mov
add
and
insb
fldenv
sbb
adc
push
std
pop
mov
sbb
rcrb
in
push
inc
mov
pop
cmp
mov
pop
mov
dec
mov
daa
dec
inc
dec
mov
fwait
jmp
nop
dec
andb
ret
inc
lret
cmp
rcll
popa
js
repz
xchg
jnp
scas
and
jns
push
xchg
push
testl
cmp
lods
pop
push
cmpsl
xor
inc
lret
ror
mov
cmp
xor
jne
fwait
xor
dec
lret
ret
cli
mov
and
ret
cwtl
or
dec
lock
xor
mov
pop
pop
insb
jbe
dec
add
add
sub
cld
daa
xchg
lahf
xor
in
repz
scas
movsl
jnp
andl
cli
sub
enter
stos
and
cmp
inc
xor
inc
mov
xor
pushf
inc
mov
imul
rcrl
movsb
sbb
aas
mov
dec
pop
sub
arpl
sbb
ljmp
int
add
fnstenv
sbb
xchg
push
push
mov
repz
inc
and
xchg
mov
and
jns
in
and
jecxz
jno
jmp
sub
out
jbe
cmpsl
sti
bound
sub
inc
movsl
popa
fsubrs
add
rcll
repnz
or
jae
imul
xchg
and
fmuls
rcll
or
loopne
lret
ljmp
and
lods
arpl
lret
jl
repz
jne
ljmp
push
xchg
loopne
sbb
sub
flds
sar
jmp
mov
mov
mov
mov
out
lret
mov
fcmovnb
shlb
subb
je
mov
int
rol
xor
iret
test
notl
cmpsl
popf
inc
mov
mov
lods
divb
mov
aaa
mov
int
sti
enter
and
jle
arpl
lock
addr16
mulb
adc
adc
cwtl
mov
pop
iret
into
fadds
jecxz
or
pop
fs
rcr
cmp
jl
sbb
scas
lods
les
adc
shll
inc
xchg
adc
jno
sbb
mov
pusha
dec
cmp
xorb
sbb
cmpsl
mov
test
pusha
fistps
sub
cmp
cmp
dec
pop
outsb
loopne
arpl
pop
adc
movsl
or
mov
jl
call
out
push
repnz
nop
bound
js
cmp
into
and
push
cmp
movsb
popf
pop
iret
dec
or
push
mov
mov
ffreep
jnp
jecxz
dec
int
std
fbld
inc
scas
push
push
mov
xor
sahf
fs
pop
pop
xlat
orl
adc
mov
movsl
nop
lea
dec
mov
mov
js
pop
xchg
push
jg
sub
jmp
push
or
jbe
inc
sbb
sub
ss
lret
add
out
xor
and
int
fdivs
gs
sub
jbe
mov
dec
mov
ret
inc
mov
or
add
inc
jge
ror
inc
xchg
dec
scas
adc
mov
mov
lcall
ljmp
cmp
add
pop
jp
insl
push
imul
mov
add
insl
mov
mov
or
dec
lret
movsl
pusha
hlt
jne
xor
mov
mov
fs
stos
adc
sub
mov
lods
push
sbbb
pop
dec
in
out
push
js
mov
dec
mov
adc
dec
push
xchg
mov
adcb
shlb
bnd
clc
sahf
ss
pop
fwait
imul
add
cli
nop
inc
test
mov
lds
xor
lock
ret
xor
sub
push
pop
hlt
cli
xchg
pop
popa
test
sub
cmp
push
cmc
fwait
mov
popa
sbb
mov
xchg
lret
cmc
and
fcmovnbe
pop
test
loop
jno
add
sti
pusha
sbb
adc
adc
jo
fiadds
cmpb
out
cltd
popa
and
rep
jae
xor
sub
in
fisttpll
push
int
push
jb
aas
popa
add
xchg
pop
push
mov
push
lcall
xchg
push
imul
add
mov
jle
adc
xor
add
inc
shrb
push
mov
js
mov
inc
dec
ret
xchg
cmpsb
out
loope
sti
cmp
mov
out
sbb
mov
stos
cld
lahf
subl
ja
popf
icebp
adc
mov
std
subb
mov
mov
loop
cmc
pop
add
or
jns
mov
jmp
mov
js
jns
jo
and
mov
mov
xchg
in
push
sub
xchg
pop
jb
nop
pop
dec
xchg
sub
cmp
pop
pusha
push
jle
pop
outsl
jo
adc
loopne
cld
cmp
int3
inc
add
push
mov
xor
inc
and
test
ror
and
mov
push
or
shlb
fs
jns
scas
mov
inc
mov
jp
add
fcompl
adc
mov
jmp
or
jle
pusha
mov
sarb
mov
test
mov
out
ret
call
mov
push
or
dec
cwtl
andl
mov
pop
in
divb
adc
ficompl
push
xor
scas
mov
icebp
pop
jne
in
adc
add
int
mov
addb
stos
and
popf
cmpsl
cmc
pop
bound
pop
fildl
out
push
cltd
sbb
cmpsl
and
xchg
cs
cltd
xor
mov
lods
outsb
jbe
push
ret
pop
shl
inc
lock
filds
imul
out
jecxz
jecxz
into
call
cmpsl
pop
lods
mov
fnstsw
and
lret
clc
jb
ds
jle
ret
xlat
push
scas
push
xchg
lods
push
or
sub
mov
add
shlb
mov
sbb
mov
decb
and
aas
push
fs
mov
push
mov
out
repz
cmpb
iret
lock
out
jl
fistpll
push
xchg
sti
sahf
mov
mov
cli
mov
mov
imul
dec
outsb
mov
data16
or
fcmove
mov
sub
pop
pop
mov
jg
cmpsl
xor
cmc
jecxz
orl
and
pop
xor
jg
and
call
or
sub
aam
add
dec
loope
mov
scas
jno
pop
imul
popa
pop
push
push
out
sub
mov
cltd
in
inc
mov
ljmp
lock
arpl
movsl
mov
pop
xor
pushf
and
fucompp
adc
mov
push
int
push
push
stos
cld
xor
xchg
sbbl
sbb
and
xor
xor
out
jl
push
mov
mov
out
or
fnstcw
mov
pop
jae
mov
jns
scas
xchg
cmc
aam
sahf
testl
cmp
sbb
add
pop
lcall
cmpsb
loope
xchg
xchg
push
cltd
push
dec
mov
jecxz
dec
addl
insb
sub
aam
jne
dec
adc
adc
dec
xchg
mov
lahf
and
fmulp
in
push
push
sub
es
je
sbb
mov
lds
sub
shr
leave
cmp
fistl
in
fisubrl
fndisi(8087
out
push
rolb
sbb
movsb
ret
jae
test
add
fimull
push
aas
sbb
sbb
inc
sbb
mov
subb
lahf
insb
mov
arpl
mov
loopne
insl
inc
insl
lret
ljmp
jecxz
out
add
push
mov
and
fmulp
scas
pushf
lods
loopne
test
dec
xchg
mov
rol
xor
popf
clc
jecxz
call
push
pop
or
cmp
add
mov
addr16
frstor
mov
cmpsl
iret
push
ss
icebp
push
in
outsl
call
mov
pop
cwtl
in
mov
mov
xor
bound
dec
lea
andl
mov
xchg
pop
aam
jecxz
lret
pop
or
jle
lock
push
sbb
xlat
pop
dec
pop
fisubrs
jns
mov
fistpll
sub
sub
test
insb
movsl
push
shrl
out
sbb
mov
jmp
sbb
xorb
and
pusha
call
mov
loop
je
cli
adc
push
clc
sarb
jge
push
fcoms
ss
out
jl
push
insb
cmp
push
pop
jge
lea
outsl
mov
mov
aaa
xchg
mov
sbb
or
mov
loope
cmp
or
or
test
aas
js
mov
into
inc
add
stc
add
cmp
js
inc
inc
mov
sub
sarl
lock
lret
insb
mov
cwtl
sbb
xchg
fs
pushf
or
stc
add
mov
aas
mov
negl
sub
jle
sub
std
cmp
sbb
adc
cmc
xor
outsb
cmpsb
jbe
cmp
push
mov
dec
das
fbstp
jb
test
push
insl
xchg
add
and
pop
test
push
cmp
mov
lea
orl
ljmp
and
push
lret
stos
je
std
pusha
pop
pop
movsb
dec
xor
pusha
cmc
out
mov
cmp
loopne
les
int
jo
push
es
push
rep
imul
xorb
imul
and
pop
inc
push
and
inc
movsb
fs
add
out
movsl
mov
insb
in
repz
fs
sub
pushf
xchg
mov
inc
push
out
lock
and
cmovnp
lea
sub
mov
adcl
bound
cs
rorl
mov
adc
outsb
cmc
mov
loopne
sahf
pop
addr16
sub
xor
dec
into
adc
test
adc
cmp
pop
je
adc
lods
cmp
mov
cmpsl
push
or
fs
in
lcall
mov
sub
jmp
xchg
lcall
add
jle
fs
jae
subb
pushf
lea
inc
cmpsl
ja
mov
cli
loope
rcll
sub
lcall
add
xchg
call
lock
sbb
sbb
mov
loop
dec
inc
sub
sbb
add
imul
xchg
xchg
add
pop
jge
xchg
rol
mov
pop
daa
ds
scas
add
int3
lret
cltd
xchg
xchg
adc
sarl
cli
sbb
or
call
inc
andl
and
and
popf
adc
jns
ret
ds
jg
imul
loop
mov
lcall
in
outsb
sbb
lock
out
or
or
add
insl
xor
testl
mov
mov
mov
pop
test
mov
enter
adc
dec
stos
fildll
or
cmp
mov
push
rep
js
xchg
lods
mov
sbb
sahf
and
leave
stos
stos
hlt
and
xchg
adc
iret
cmpsb
daa
outsb
pop
outsl
arpl
mov
dec
push
lcall
sbb
push
jno
in
push
jnp
jecxz
adc
ljmp
or
or
icebp
shrb
iret
loop
xchg
aad
dec
imul
mov
push
push
adc
nop
xchg
mov
mov
cmp
cmpsl
mov
mov
jno
or
ret
fdivl
movsb
sub
and
aam
inc
stc
xchg
fisttpll
test
and
ljmp
cmp
rolb
jmp
jnp
mov
xchg
das
jbe
mov
ret
inc
out
les
push
cmpsb
ljmp
dec
or
das
xor
sub
mov
scas
xor
and
push
pop
cmp
sub
pop
jecxz
jmp
pop
and
int
lahf
insb
inc
pop
jae
addr16
adc
lods
sbb
nop
loope
cs
das
mul
cmp
xor
xchg
xor
and
fistl
cmp
push
sbb
add
fadds
arpl
addr16
out
mov
xor
mov
mulb
mov
dec
ret
es
imul
sub
imul
mov
xchg
movl
repz
aaa
push
xchg
jnp
jecxz
nop
push
pop
mov
sub
adc
aad
fwait
mov
cli
into
shlb
jo
and
mov
rcr
rorl
sub
pop
mov
ljmp
jg
leave
jmp
ret
push
popa
sbbl
xorb
jle
loopne
cmp
fsubp
xchg
shlb
adc
movsl
ss
cmpsl
dec
ds
mov
in
dec
push
push
push
cmp
fisubl
mov
jns
pop
inc
in
add
aad
leave
xchg
ja
outsl
xor
sub
cmc
push
sar
shrl
dec
dec
shl
div
ret
pop
xor
shlb
mov
push
inc
lret
stc
push
inc
nop
lcall
pushf
push
roll
adc
sub
ret
ja
nop
pop
cmp
xor
sbb
add
call
loope
jecxz
cli
jb
pop
jmp
jmp
repnz
sub
lods
add
lret
adc
lods
shll
mov
or
inc
mov
loope
push
movsl
aaa
cmp
cwtl
mov
cld
shrl
xchg
mov
mov
push
aaa
jmp
daa
dec
pop
cmp
pop
fsubrs
test
mov
sbb
in
mov
mov
idivb
and
or
mov
cmp
jl
mov
aam
repnz
das
rcll
fsubs
cmp
jp
cwtl
mov
shr
inc
xchg
data16
mov
jns
push
push
pop
add
push
push
jge
xchg
stos
das
ds
sbb
or
in
aaa
and
into
lcall
mov
xor
xchg
jg
mov
jae
fsubrs
xchg
pop
mov
push
lcall
sahf
test
stos
pushl
xor
xor
sbb
xor
int
jmp
pop
aaa
je
jb
in
shll
int
mov
jno
xor
adc
inc
xchg
pop
mov
outsl
aaa
insb
stos
mov
xchg
jno
scas
popa
je
movsb
jge
mov
sbb
out
add
loop
popf
adc
enter
mov
mov
lret
mov
dec
aaa
xor
jmp
mov
outsb
cmp
mov
and
andb
adc
call
fstpl
and
mov
out
mov
jecxz
cmp
pop
hlt
push
imul
cmp
lahf
bound
js
dec
pop
and
mov
push
push
or
scas
bswap
add
lods
sbbl
dec
addr16
xor
or
and
add
ljmp
jp
mov
mov
int
loope
test
dec
sub
pop
xor
adc
adc
call
mov
shlb
mov
mov
movsl
sub
loope
insl
in
imul
adc
and
int
test
icebp
or
stos
out
fistps
add
xchg
xchg
shl
add
dec
and
cltd
ja
push
xor
scas
jb
xchg
lock
dec
jmp
pusha
and
lock
aam
lret
pop
loop
lock
in
pop
out
dec
jp
das
inc
jb
lods
je
sub
adc
fwait
rorb
stc
dec
ljmp
addl
adcl
mov
sbb
push
out
shl
out
or
sbb
loopne
jp
dec
and
push
insl
test
popf
jecxz,pn
pop
icebp
pop
shlb
sub
arpl
jge
fnstenv
and
push
push
jo
enter
jmp
ficoml
jmp
xorl
loope
ss
xchg
or
adc
sbb
cmp
rep
in
add
es
sbb
shlb
dec
pop
mov
add
or
and
cmp
dec
mov
popf
xor
push
mov
pop
sbb
int3
ja
or
xchg
xor
loope
adc
fcoml
cmpsb
in
cmp
ds
std
je
xor
sti
adc
and
xchg
clc
jg
in
imul
outsl
addr16
cmp
sahf
das
sahf
cld
lods
pop
jns
ret
in
das
lds
push
clc
cmpsl
pop
aam
icebp
les
shl
add
inc
pop
lea
inc
push
rorb
xorb
lcall
mov
in
jnp
jb
divl
insl
call
insb
ficoml
fstl
pop
icebp
aas
jbe
lahf
jb
iret
sbb
jno
mov
adc
pcmpeqd
mov
pop
mov
outsb
out
add
stos
js
mov
xor
xchg
add
inc
mov
xchg
out
test
jo
jle
iret
add
push
pop
xchg
pop
lock
out
push
dec
add
jp
sub
pop
xor
pop
or
dec
inc
loop
fisubs
jge
jmp
psubsw
lds
cmp
push
pop
rclb
iret
sbb
xchg
and
or
or
arpl
fistps
mov
xor
fwait
xchg
lret
fcoml
xlat
add
aam
mov
xor
popa
mov
stos
jnp
push
mov
and
or
xchg
iret
jo
cwtl
aaa
arpl
cmc
mov
in
push
enter
fsub
push
hlt
stos
ds
lret
rcll
fnsetpm(287
mov
push
xor
dec
jmp
das
pop
xchg
imul
xchg
xlat
mov
mov
clc
mov
cld
sbb
roll
fsubrl
subl
push
or
bound
ret
mov
mulb
andb
mov
rorb
lret
test
leave
jnp
jne
mov
push
inc
je
mov
xor
stos
loope
loope
pop
jne
nop
push
mov
dec
jp
push
js
adc
stos
sub
jbe
mov
xlat
dec
clc
fmuls
movsb
in
inc
or
push
outsl
xorl
es
outsb
repnz
cltd
xor
cli
pop
mov
jecxz
sarl
dec
nop
movsb
sub
vmovups
sub
pop
fildll
jne
cld
inc
jb
in
xor
inc
pop
cli
shrl
std
xor
insl
add
push
loopne
fneni(8087
or
inc
cld
mov
in
imul
push
jbe
sbb
mov
xchg
or
adc
push
xor
xor
cmp
dec
cmp
pop
xor
mov
pop
xor
add
xchg
in
xor
aaa
sub
mov
cmc
xchg
adcb
ret
bound
stc
cmc
addr16
fsubl
mov
mov
jp
ds
aas
dec
mov
sbb
loopne
lock
push
bndldx
mov
xchg
push
movl
xchg
rcl
mov
and
xor
imull
aaa
mov
sub
repz
push
cmp
mov
mov
lock
ds
aam
popa
add
or
xor
adc
mov
scas
aaa
cmpb
inc
fstpt
mov
adc
scas
insb
or
into
add
scas
jne
addr16
mov
xchg
xlat
push
ret
pop
inc
ss
adc
repz
pop
push
dec
or
ret
ss
push
cld
repnz
dec
jg
stos
inc
push
das
push
mov
stos
xor
mov
icebp
orl
jp
dec
xor
sti
xchg
mov
push
sub
into
jb
xor
and
aas
xor
mov
fcompl
mov
insl
adc
loop
mov
ss
fucomp
jns
into
mov
dec
dec
mov
or
pop
xor
and
jge
ljmp
push
adc
pop
cmp
push
fstl
mov
ficompl
pushl
pop
mov
jg
insb
out
test
cmc
pop
int
das
cmp
int
enter
inc
pop
popa
xor
fiaddl
and
inc
xor
dec
aaa
xor
psubsw
out
frndint
fildll
int3
mov
roll
or
clc
dec
mov
sub
cli
push
nop
add
pusha
cmp
add
mov
movsb
sbb
sarb
sbb
add
mov
int
sub
and
sbb
push
pop
mov
dec
mov
or
mov
hlt
push
std
xchg
test
dec
lds
enter
sbb
dec
push
and
aam
popa
bound
aam
jle
or
outsb
adc
pop
test
xchg
mov
test
jno
into
inc
test
psubusw
and
adc
mov
fcmovnu
and
fucomp
or
adc
dec
pop
jnp
adc
mov
out
inc
fiadds
sub
pop
sbb
iret
int3
add
mov
lods
xor
cmpsl
adc
pop
inc
pop
or
mov
scas
cwtl
or
xor
scas
inc
bound
imul
outsl
push
call
cmp
sti
xchg
mov
divl
bound
push
pop
push
imul
mov
mov
test
jmp
pop
xor
cmp
jns
ds
adc
in
aam
add
lods
jne
pusha
rcrb
mov
pop
pop
imul
jge
pop
mov
cmp
push
fs
fsubrl
int
push
push
mov
jl
push
cmp
xlat
fadds
cltd
adcb
fwait
cmp
es
pop
pop
cmpsb
add
and
jne
lock
inc
xor
push
jg
test
mov
xchg
xchg
sub
inc
mov
cld
or
xor
sti
mov
mov
es
push
movsl
pop
loope
mov
ret
mov
repnz
adc
adc
dec
sbb
push
fdivl
adc
cltd
mov
xchg
cmp
xchg
cmpl
imul
in
lea
mov
lock
xchg
push
stc
jno
pop
push
loope
les
pop
daa
cltd
mov
or
lods
outsb
sbb
xlat
popf
loopne
mov
cld
pop
xchg
aad
popa
xor
lea
lcall
pop
fucomi
mov
push
jecxz
ficoms
repnz
push
pop
push
mov
mov
shl
inc
mov
or
into
mov
and
or
iret
lret
loopne
in
mov
fwait
sbb
lcall
mov
cli
and
icebp
lahf
int3
and
push
sbb
mov
mov
xchg
cmpsl
cmpsb
filds
sbb
shrb
mov
out
negl
nop
adc
xchg
mov
rorl
inc
clc
out
popf
dec
int3
test
leave
sbb
loope
test
inc
inc
sub
xlat
xchg
fwait
stc
gs
dec
dec
jns
decb
sbb
or
fisttpl
ljmp
xchg
insb
lret
fcmovu
and
add
das
enter
out
adc
pop
ja
mov
and
add
jbe
dec
mov
add
and
jecxz
pop
pop
imul
insl
movsl
pop
xchg
in
xchg
jmp
iret
inc
push
shll
adc
stos
dec
aam
xchg
ja
cld
adc
movsl
ret
mov
sbb
push
ljmp
lea
rclb
pop
int3
jne
mov
rorb
test
sarb
and
loopne
jns
sub
mov
cmc
push
sbb
testb
and
lods
pop
enter
ror
or
rorl
outsb
icebp
and
stos
mov
in
cltd
xor
loopne
inc
pop
aaa
jp
dec
jae
cmp
sbb
les
aaa
stos
dec
imulb
dec
dec
xlat
xchg
pop
imul
pop
sahf
fnstenv
jo
shll
push
jg
sar
in
repnz
mov
data16
pop
into
push
xchg
add
movsl
in
sub
inc
outsl
sbb
mov
inc
call
jl
ffreep
leave
repnz
push
les
pop
sub
cmpsb
ret
cmpsl
fdivr
and
jl
inc
mov
ja
jae
jne
jbe
lahf
lcall
push
xor
add
push
and
jae
fists
nop
out
mov
push
shll
mov
lds
lock
add
scas
int
or
mov
mov
adc
mov
push
testl
inc
fmuls
insl
cmp
cs
shll
cmp
mov
enter
lret
sub
adc
fidivs
clc
adc
ds
loop
lock
mov
jge
aad
jl
in
jnp
stos
xchg
les
push
leave
jbe
push
mov
xchg
into
cmp
outsb
xchg
sbb
int3
xlat
mov
push
xor
inc
or
and
stos
jge
clc
lods
faddl
jo
push
pop
data16
fmuls
repz
add
mov
movsl
jns
gs
dec
fistl
sub
dec
outsb
push
cmc
fnsave
in
test
outsl
ret
or
sub
inc
jge
add
test
pop
mov
mov
bound
mov
mov
cld
popf
mov
sub
out
push
cwtl
arpl
popl
mov
push
negb
jg
pop
adc
testl
outsb
or
divb
mov
or
loopne
jo
xor
inc
add
mov
mov
push
pop
add
rorl
jbe
and
icebp
dec
push
test
mov
pop
iret
add
xchg
pushf
push
fiaddl
pop
jecxz
or
adc
inc
int
xchg
rcll
jb
pop
dec
sbb
xchg
pop
push
cmp
sub
jecxz
cmp
mov
je
sub
sub
sbb
dec
fmul
adc
mov
jge
push
pop
fnstcw
jo
mov
pop
inc
push
sbb
mov
xor
pop
jns
push
dec
mov
jmp
and
lcall
nop
cwtl
jno
leave
adc
pop
mov
xor
xchg
inc
jno
fcomip
into
in
jne
call
cli
fnstenv
adc
pop
sbb
mov
mov
pop
xchg
or
dec
pop
lahf
lcall
stos
pop
cmc
sbb
iret
test
jns
ret
xchg
mov
push
int3
out
js
fmuls
xor
out
adc
cmp
mov
shll
jp
mov
movsb
mov
mov
jbe
cmc
insb
cwtl
rorb
loop
popa
and
push
pop
push
inc
rcrb
cmp
or
mov
cmp
orb
inc
cmp
in
js
out
fildl
in
pop
mov
addb
add
mov
std
mov
lret
leave
jmp
cli
pop
jmp
inc
dec
shll
pop
sbb
sbb
mov
xchg
lock
xchg
in
ret
xchg
dec
and
mov
sbb
pop
sub
adc
scas
cli
and
int
cmp
rolb
jp
jecxz
popf
nop
cli
jbe
outsb
push
pop
cmp
jle
pop
scas
movsl
or
imul
lret
imul
inc
or
lcall
or
lcall
mov
fisubrs
add
mov
insl
sub
outsb
jbe
loope
inc
lcall
pop
push
test
lods
ljmp
jp
jle
bnd
pop
jns
ret
push
sti
mov
xchg
pop
mov
xor
movsb
add
jge
inc
pand
push
cmp
lods
inc
fildll
cli
pop
test
sti
cmp
es
mov
cmp
cmp
pop
ja
icebp
and
pop
cmp
mov
adc
mov
outsb
add
xor
out
jecxz
data16
jge
mov
push
mov
pop
roll
or
xchg
pusha
mov
fdivrl
cs
add
dec
jl
pop
mov
push
mov
xchg
push
jbe
pop
xchg
addr16
lods
mov
pop
mov
in
push
test
stos
fs
xchg
adc
push
push
data16
pushf
xor
add
fidivrl
mov
jnp
ds
xor
jmp
jp
scas
jno
insb
cmove
daa
int
dec
mov
hlt
sub
inc
xchg
dec
bound
push
mov
push
ja
add
jnp
pop
mov
pop
je
lods
out
and
test
cltd
add
add
enter
outsb
hlt
loop
cld
xor
adc
cltd
inc
pop
imul
clc
mov
jnp
in
push
movsl
pop
and
sti
sbb
jae
jmp
dec
add
insl
xchg
sahf
ss
out
inc
push
out
out
add
repz
sbb
xchg
sub
out
es
nop
incb
pop
jg
xor
call
adc
mov
mov
gs
cmp
mov
mov
ja
sahf
jo
aam
fwait
mov
bound
gs
xchg
adc
mov
out
je
lods
xor
mov
pushf
cwtl
in
jnp
cwtl
rol
and
jbe
cmpsl
xor
enter
test
dec
jo
je
loopne
push
inc
bound
push
jb
loope
cmp
dec
mov
lcall
inc
mov
or
ret
pop
adc
push
daa
lea
xchg
popa
dec
cli
data16
fisubrl
subb
cmc
adc
test
in
pop
lret
shlb
out
aaa
mov
sahf
jl
push
into
daa
jp
sarl
fiadds
ja
sahf
adc
mov
loop
clc
xor
repz
push
clc
clc
mov
xor
cltd
cld
pusha
cmp
xchg
inc
xlat
mov
leave
xchg
js
cld
push
inc
into
insb
iret
or
imulb
adc
push
inc
clc
in
sub
pop
jb
jl,pn
sbb
xchg
adc
lods
xchg
jb
mov
loop
out
mov
mov
rcrl
xchg
cs
fwait
stos
mov
and
movsl
jne
xor
sub
add
lret
in
mov
int
frstor
sar
dec
sbb
aaa
cwtl
adc
xchg
push
pop
push
add
lds
adc
arpl
das
jecxz
mov
lahf
pop
push
pop
pop
push
push
jle
adc
lea
push
test
insb
mov
ds
rol
xchg
mov
clc
mov
dec
mov
ret
add
or
sbb
test
std
repnz
add
mov
cwtl
out
mov
pop
outsb
mov
out
fmuls
outsb
adc
packuswb
or
lret
add
lods
loop
das
test
ljmp
mov
or
adc
je
fwait
mov
hlt
les
push
mov
mov
arpl
and
rcrb
fwait
mov
in
sbb
ficoms
sub
int
push
pop
loope
mov
in
loop
mov
mov
add
fcmovnu
cmp
stc
xchg
loope
or
movsl
les
jb
mov
cmpsb
push
fchs
aaa
and
xor
pop
sub
lret
push
push
shrb
ret
lcall
test
pmullw
push
stc
out
in
sub
cs
pop
xor
xchg
cmp
cwtl
iret
insb
fstl
jno
jl
in
hlt
fcoms
jbe
jp
or
hlt
fdivs
std
or
or
push
mov
pop
jmp
mov
nop
test
arpl
or
cmc
fisttpll
ja
inc
daa
jp
and
mov
xchg
jl
xchg
jno
loope
int
add
sub
cmp
push
jne
rolb
leave
stos
lret
mov
insb
sub
mov
repnz
push
aam
shll
fsubl
cmp
stos
sub
or
lahf
lcall
lods
ljmp
add
sub
lcall
in
mov
sbb
inc
jge
stos
mov
faddl
pop
sbb
adc
inc
icebp
jns
stos
pop
inc
sbb
pop
mov
stc
mov
and
push
adc
push
cmp
fiadds
les
daa
sti
push
and
push
sbb
jge
cli
out
mov
enter
sub
mov
ret
filds
jb
stos
jns
pop
jo
xor
inc
mov
shrb
push
lods
sub
cmp
xchg
mov
fwait
dec
jo
fwait
sar
cmc
in
pop
jnp
inc
push
and
cli
scas
clc
mov
and
push
cmp
push
inc
inc
cmp
shll
in
jl
add
sahf
mov
repnz
into
sub
imul
mov
pop
adc
addr16
sahf
fldl
xchg
iret
xchg
test
push
out
test
cmpsl
bound
push
divl
push
cmp
xchg
mov
inc
xor
iret
mov
xlat
in
lds
add
sqrtps
jmp
in
sbb
icebp
stos
inc
pop
pop
xor
and
out
cmp
push
pop
cmpsl
or
xchg
jne
adc
xor
outsb
in
iret
test
pop
mov
mov
andl
cmpsl
mov
mov
testb
insb
jne
cli
add
sub
fidivrl
mov
jp
sbb
leave
xchg
pop
xor
movb
adc
pop
sub
mov
scas
cltd
xlat
mov
cmp
pop
and
pop
pushf
adc
lcall
std
std
pop
dec
icebp
fiadds
loopne
bound
lock
int3
sbb
jbe
cmp
xor
cltd
sub
xchg
pop
ror
ret
insl
xor
jbe
shrl
int3
xchg
mov
mov
sbb
cmp
js
push
imul
adc
add
mov
and
fwait
mov
outsb
fwait
insl
cmp
push
fdivs
cmp
mov
dec
cmp
xlat
jbe
lods
sub
scas
sbb
scas
cmp
and
or
add
jg
rcrb
fsub
in
inc
sti
loope
pop
xor
cs
inc
mov
sub
movsl
cs
sub
pop
add
push
mov
push
jmp
jg
xor
sbb
cmp
in
xor
ljmp
in
jo
scas
push
mov
clc
jmp
adc
insb
fwait
mov
xor
fistl
adc
mov
insl
cmpsb
push
sub
arpl
xor
cli
mov
sub
push
or
imulb
pusha
je
icebp
sti
mov
and
aad
pop
dec
fsts
adc
mov
mov
inc
pushf
test
jecxz
or
inc
dec
sbb
inc
mov
or
sub
add
data16
fcmovnu
adc
mov
xor
fsts
lock
rorb
mov
or
sub
ss
and
aam
ljmp
lds
lock
mov
sbb
bound
push
mov
dec
addr16
outsl
bound
mov
add
xchg
addl
adc
cmp
dec
je
rcrl
adc
jb
xchg
clc
and
add
cmpsb
sub
sar
jge
dec
pop
mov
mov
in
mov
popa
push
rorb
leave
xor
movsl
mov
pop
xorb
loop
push
lods
xchg
in
out
pop
jl
divl
sarb
out
lods
fsubrp
lahf
mov
xchg
dec
mov
pop
daa
je
inc
testl
negl
xlat
ret
fstpl
repnz
cltd
dec
mov
insl
loop
push
jno
in
xor
sub
add
fildl
pop
cwtl
js
sub
adc
xor
add
iret
pop
xorl
stos
lods
mov
jae
int3
or
lret
push
pop
and
xchg
das
jnp
stos
repz
sar
in
xor
mov
and
or
and
add
test
dec
mov
and
scas
loopne
mov
hlt
push
add
ja
sahf
rorb
pop
iret
xor
cmp
cmp
mov
pop
rcr
jnp
cltd
arpl
jl
movsb
ret
sub
jg
aam
lds
iret
cld
xor
mov
ljmp
cmp
addr16
cltd
or
sub
sahf
xchg
jecxz
dec
jge
and
outsl
jge
repnz
mov
lret
adc
daa
sub
mov
adc
xor
jb
popf
nop
xchg
cmp
mov
es
stc
lahf
jg
loope
hlt
lods
mov
mov
mov
cmp
gs
pop
ret
into
push
es
push
lds
adc
xchg
adc
sub
push
leave
push
addr16
bnd
jno
fldenv
push
add
pop
mov
ret
or
or
jb
push
mov
sub
mov
inc
mov
sub
jnp
test
inc
shl
or
gs
subps
aam
pop
ja
sar
cmc
enter
and
test
imul
ds
fidivs
sbb
pop
dec
insb
jb
insb
or
and
andl
adcb
mov
push
inc
inc
lret
sahf
lahf
stos
xor
sub
and
lds
ret
cmpl
sbb
adcl
sbb
ret
mov
jne
push
xchg
mulb
jb
sahf
lret
cmc
push
fstl
pop
adc
push
test
dec
dec
pop
push
lret
in
xor
adcb
cmp
jns
xor
cmp
pop
mov
dec
sti
inc
cmpsb
insb
mov
bound
xchg
lret
inc
in
js
insb
out
push
lea
or
jmp
mov
and
xchg
imul
cmp
or
les
and
push
je
rolb
jne
xor
jno
outsb
lret
in
mov
push
push
push
jae
jl
iret
cmp
xchg
std
adc
fidivrs
je
movsb
push
mov
fnstcw
test
ret
add
jge
fwait
stos
push
stos
mov
movsb
popf
mov
cmp
jb
dec
xor
sub
imul
xor
xor
addl
cmp
rorb
sbb
imul
sub
add
push
cmp
sub
repnz
cmp
std
dec
adc
bound
lcall
and
iret
popa
gs
gs
das
ficompl
aaa
dec
push
rcll
test
ds
inc
sub
jb
pop
sti
repnz
sbb
push
fs
push
xor
ret
pop
outsl
in
sti
push
sub
push
test
fwait
decl
push
xchg
sahf
hlt
sarl
enter
aam
mov
movsb
in
in
and
rcll
xchg
outsl
jp
push
fcmovnb
fsubrl
das
cmp
jb
xchg
shlb
lahf
ds
fsub
shl
scas
pop
roll
pop
jp
xchg
inc
aam
mov
and
inc
sbb
aas
cltd
cwtl
int
pop
xchg
pop
xchg
movsl
adc
fsubrs
fnstcw
aad
push
fs
into
cli
mov
mov
hlt
fnsave
dec
je
push
mov
fistpll
fs
mov
xchg
xchg
stos
addr16
jl
add
or
add
outsb
or
lret
add
push
call
dec
test
imull
das
dec
jecxz
pop
aam
in
out
stos
nop
cmc
pop
in
push
test
out
xor
xchg
sub
cwtl
cltd
or
push
adc
push
and
fsubp
loop
pop
repnz
ljmp
lret
cmp
push
sarb
or
data16
push
rol
je
push
js
in
fs
andb
outsl
xchg
rcr
aaa
cmp
push
repz
jecxz
popa
adc
pop
jl
xlat
or
adcl
in
cmp
mov
or
or
sbb
popf
pop
xchg
or
sub
lret
mov
cmp
mov
adc
cmp
lea
inc
mov
mov
loope
jg
orl
scas
xor
mov
into
xchg
repnz
frstor
js
xchg
stc
xlat
out
or
mov
outsl
test
xchg
int
sbb
lcall
aaa
clc
inc
mov
std
push
outsb
addr16
aad
icebp
inc
xor
cmp
sub
add
push
mov
jecxz
inc
cwtl
mov
mov
aam
add
lods
sub
addr16
push
lcall
lods
divl
aam
adc
mov
imul
dec
in
jl
push
mov
dec
into
int
mov
fcmovnbe
lret
aaa
imul
loop
or
shl
shrb
adc
insl
jmp
sbb
push
mov
xchg
arpl
or
xor
movsl
add
aaa
and
jnp
fisttps
jbe
jle
jecxz
jl
out
or
aad
sbb
pushf
imul
rorb
jae
mov
jbe
sbb
rolb
clc
pusha
mov
inc
cmp
lret
inc
cmp
sbb
cmc
mov
shrl
test
mov
ret
out
push
mov
test
in
fbld
test
stc
mov
stc
mov
lcall
xchg
addb
or
pop
inc
mov
into
and
mov
test
addr16
adc
dec
sbb
lods
dec
aad
xchg
mov
out
cltd
inc
sbb
js
jb
and
push
push
les
inc
inc
scas
fidivrl
enter
popa
and
jmp
lahf
mov
jmp
shlb
jmp
rorb
jae
in
loopne
dec
mov
lds
sub
aas
sub
rorl
adc
btl
pop
icebp
jg
jb
gs
cmp
jge
inc
push
add
mull
and
or
das
call
ljmp
rcl
inc
fldenv
push
sbb
js
mov
into
pushl
xor
sahf
mov
pop
push
insl
ljmp
pusha
addr16
out
pop
ret
movsl
lods
sbb
jno
nop
lret
xlat
addb
cmc
push
js
nop
lahf
push
dec
push
inc
xor
hlt
imul
popa
sti
nop
out
jle
push
mov
xlat
fcomp
out
or
mov
scas
mov
scas
testb
rclb
lret
daa
sbb
outsl
ja
jo
add
dec
or
inc
mov
inc
sub
mov
js
mov
sbb
lds
sbbb
int
adc
push
orb
int3
rcrb
cmp
dec
jnp
cli
mov
ja
push
cs
mov
les
add
dec
add
inc
cld
push
fimull
push
cmp
imul
jl
int3
mov
out
ljmp
stos
imul
fwait
test
add
push
xchg
jbe
inc
lods
mov
popa
sbb
adc
data16
hlt
xor
fadds
ret
ficompl
cli
add
out
test
pop
adc
or
enter
lods
mov
cmpsb
and
cmp
ljmp
fstps
mov
in
sbb
mov
fdivrl
sbbl
fucom
cwtl
sub
mov
ret
inc
push
je
in
xor
leave
mov
outsl
xor
outsb
rolb
test
xlat
movsl
pop
mov
push
scas
push
inc
loope
outsl
push
adc
into
test
mov
mov
ficoml
fprem
and
xchg
push
jne
test
mov
nop
lret
out
jecxz
out
xchg
cmp
inc
inc
mov
jae
push
loopne
les
mov
lods
pushf
dec
lcall
mov
iret
or
movsl
pop
idivb
pop
cli
and
xchg
sub
fstl
outsb
xchg
das
sti
lock
push
cwtl
stc
sbb
jmp
cmp
sub
stos
dec
scas
push
sbb
sub
test
aad
dec
jge
mov
testl
ja
jns
jae
in
jno
mov
sbb
pop
in
push
mov
push
loopne
xchg
cmp
push
mov
popa
jb
pop
and
add
or
sub
pop
mov
jbe
rcl
push
inc
jge
fistps
jb
adc
clc
js
jp
mov
push
movsb
lahf
or
or
xchg
sub
cmpsb
and
loop
cmp
into
pop
add
lret
in
std
popa
push
cmpsl
mov
pop
jbe
out
and
sbb
inc
dec
mov
mov
sub
pop
xlat
and
lret
mov
push
popf
or
sbb
fcmovu
push
mov
adc
inc
mov
mov
cmp
jbe
pop
popa
imul
hlt
pop
add
fistps
adc
test
jl
adc
lret
mov
lods
add
mov
or
jg
fnstsw
bound
addr16
xor
dec
sbb
call
inc
loope
es
cmc
mov
xorl
xor
std
fst
inc
ljmp
pop
stc
push
pop
push
iret
and
fldt
add
sub
mov
or
lret
mov
xchg
movsb
adc
gs
push
test
hlt
shl
xchg
ss
lcall
jl,pn
push
xor
adc
pop
and
sub
or
ja
popf
jae
insl
outsl
test
adc
or
mov
iret
fbld
aaa
icebp
rcrb
or
fdivl
jl
dec
xchg
add
add
iret
jle
sahf
xchg
icebp
in
mov
xchg
dec
loope,pn
stc
inc
jle
cmp
lods
int
mov
jo
xor
pop
ds
and
outsb
jge
mov
dec
jle
jle
or
test
xchg
push
jmp
pop
stos
push
xchg
xchg
pop
jo
push
fisubs
gs
xlat
or
push
mov
sbb
es
cld
ret
inc
loop
andl
xchg
mov
xor
test
popf
bnd
mov
jmp
sbb
pop
in
repnz
mov
xlat
mov
out
push
dec
dec
jp
xchg
gs
xchg
sbb
out
push
mov
xchg
push
xorb
adc
pop
repz
lret
std
mov
xor
arpl
adc
push
inc
test
div
ret
test
mov
cmpl
out
or
outsb
push
cmpsl
mull
inc
inc
jb
fidivrl
jns
inc
fisubrs
clc
mov
mov
inc
and
mov
adc
push
xchg
or
fdivrs
cwtl
lahf
loopne
je
push
lcall
pop
sarb
jl
jge
fildll
icebp
std
out
lds
adc
add
pop
ss
mov
xor
stos
rcl
mov
inc
dec
fistpll
sbbb
inc
jo
cmp
imul
popf
int
mov
inc
mov
jp
cmp
sahf
inc
push
lret
mov
aam
fnsave
xor
clc
inc
cmc
sti
outsb
insl
fidivrs
adc
rcrl
imul
xchg
mov
jge
add
je
jnp
jle
pushf
add
or
lret
lcall
fsubrl
mov
imul
mov
fisubrs
push
xchg
mov
adc
jae
aaa
loope
dec
inc
mov
loopne
insb
lret
out
insl
in
movsl
fisubrl
test
or
or
and
xor
sarb
xor
aas
mov
fmull
divl
push
mov
push
sub
cmpsl
and
or
mov
xchg
test
in
xchg
lahf
jo
ds
inc
pop
cmpsb
stos
cltd
mov
adc
push
fmul
mov
or
mov
mov
clc
mov
cmp
lret
mov
jge
es
dec
inc
in
ss
fs
push
and
test
dec
aas
mov
add
or
pop
jb
cmp
mov
xlat
jecxz
lret
jmp
cmp
aas
xchg
adc
dec
fadds
repz
lcall
xor
lcall
int
pop
ret
jb
les
cmp
hlt
aaa
imul
xlat
movsb
movb
pop
xor
add
fimull
mov
push
sbb
xor
cmp
mov
pop
hlt
or
fisubrl
lcall
push
sub
in
hlt
addr16
sbb
test
jb
jns
xor
push
js
fidivrs
fsubs
mov
xor
insl
jle
les
mov
dec
ficompl
out
cs
xor
divb
gs
jge
adc
sub
mov
bound
or
arpl
pushf
cld
cltd
lods
repz
jmp
sbb
push
lea
pusha
test
loope
bound
test
enter
into
add
push
rcrl
cmp
mov
cmp
in
insl
jno
std
or
jne
adc
lods
sar
mov
lock
les
aaa
loope
sub
in
lret
xor
pop
aas
cld
outsl
fcmovb
inc
rclb
jp
push
ret
mov
out
out
cwtl
divl
cmpsl
sbbb
pop
jae
testb
mov
scas
jle
addr16
jmp
and
push
rorl
hlt
cmp
xor
dec
and
mov
mov
mov
mov
pop
pop
inc
pop
inc
jmp
gs
xor
mov
sub
mov
lret
mov
or
or
ljmp
nop
mov
xor
adc
cmp
popa
and
mov
or
rorl
inc
pop
push
sbb
scas
push
test
shll
cmpsb
push
lods
inc
mov
movsl
sub
jae
adc
ret
fs
aam
lods
and
sbb
insl
pop
jnp
lret
or
jle
mov
daa
xor
xchg
adc
rcll
mov
shll
loope
insb
mov
sbb
scas
xchg
jo
cli
jp
test
iret
movsl
pop
xor
jmp
sub
jmp
sbb
xor
fs
jno
mov
call
jb
mov
lret
and
test
insb
pop
scas
inc
xchg
or
dec
shlb
mov
lods
inc
xchg
icebp
mov
mov
iret
loop
lahf
pop
dec
xchg
add
jno
repnz
out
subb
pusha
call
mov
push
test
sub
je
aam
jl
lret
pop
cmp
loop
mov
and
push
insl
push
dec
inc
xchg
out
stos
popf
btr
stos
mov
jmp
and
daa
cmp
movsl
xor
mov
mov
aad
add
out
adc
mov
mov
and
pop
or
adc
sarl
stos
arpl
scas
mov
rcr
adc
xchg
enter
ja
jecxz
add
xchg
iret
cmc
loope
inc
push
and
cmc
push
test
fs
pop
mov
dec
into
rcl
das
mov
scas
aaa
or
gs
jae
cwtl
xlat
fsubr
add
cld
mov
in
mov
rolb
dec
js
loop
repz
in
inc
cli
pop
insb
rol
aad
lods
addr16
decb
mov
arpl
jnp
or
pop
push
rcr
fstpt
lret
mov
jo
xor
xchg
xorb
adc
xor
pop
and
aam
jmp
mov
mov
je
mov
cmp
mov
xchg
sbb
push
ss
mov
adc
mov
test
mov
adc
pusha
mov
out
sub
mov
dec
int3
push
rolb
pop
jg
out
mov
imul
mov
mov
scas
in
mov
in
js
pop
jle
lahf
lcall
sub
dec
xchg
out
xor
adc
in
adcl
xor
dec
adc
clc
pop
adc
mov
in
sub
mov
mov
or
jae
fcmovne
test
lock
jnp
mov
loope
fwait
or
push
aad
pop
add
inc
outsb
addr16
subb
cmp
jge
arpl
outsl
lret
pop
dec
sub
data16
dec
lahf
and
cmp
ja
pop
lods
xchg
push
cwtl
or
mov
add
inc
jl
sub
inc
or
icebp
push
mov
je
mov
mov
lods
cli
add
fcomi
addr16
in
inc
xchg
push
movsl
mov
hlt
pop
ljmp
add
lea
push
sti
icebp
movsb
mov
dec
jnp
loopne
cmp
bound
popf
jecxz
or
mov
inc
pop
cmp
mov
xchg
jne
xchg
push
push
popf
cmp
test
movsb
mov
das
std
push
sbb
push
pop
pop
mov
xchg
mov
fdivrs
jle
xor
pop
insb
stc
stos
push
dec
inc
pop
imul
or
jno
push
leave
sbb
sbb
mov
xchg
pop
dec
fidivrs
iret
pop
jmp
ljmp
lea
push
mov
dec
hlt
xor
adc
inc
and
xor
out
inc
sub
or
mov
inc
loop
xchg
push
out
scas
out
inc
mov
aas
cltd
mov
mov
cmp
sub
xor
push
mov
mov
int3
push
mov
ficomps
dec
and
adc
dec
fcmovnu
fwait
push
jle
inc
jns
pop
cmp
gs
iret
lcall
jmp
aad
cli
loope
ljmp
test
add
and
cli
or
dec
mov
out
imul
fwait
xor
adc
cli
mov
dec
mov
jmp
jmp
ret
adc
dec
xchg
stos
add
mov
outsl
stos
mov
sbb
push
out
out
popf
sub
popf
cli
es
int
not
mov
cli
dec
push
scas
test
cmpsl
pop
jmp
cltd
dec
add
push
xor
cwtl
pop
cmp
loopne
push
fnstcw
imulb
inc
inc
iret
je
and
insl
jge
and
jle
cmp
pop
sbb
outsl
xchg
shrl
add
cmpsl
adc
sbb
out
or
sbb
ss
sarl
in
in
les
pop
cmc
int
dec
or
stc
ljmp
adc
aam
inc
cmp
outsl
push
xchg
je
out
adc
adc
mov
adc
test
adc
xchg
sub
lcall
dec
rclb
lcall
fcom
jg
push
fidivrl
dec
testl
fcomps
stos
pop
pop
lds
pop
jns
icebp
les
adc
loopne
xchg
pop
sbb
ds
jle
dec
sub
das
data16
sub
arpl
popa
ret
jecxz
push
or
add
or
bound
or
add
and
xchg
call
sbb
dec
xor
sub
jno
xchg
iret
and
aad
add
fisttpl
aam
sbb
add
adc
lcall
sbb
or
pop
imul
mov
xchg
call
mov
testl
sbb
inc
cltd
push
mov
cmpsl
mov
mov
push
std
jl
test
enter
std
sub
outsl
push
iret
fnsave
or
jbe
push
jmp
hlt
mov
add
xchg
les
fdivrl
mov
and
sbb
fs
inc
jl
adc
addr16
clc
aaa
push
sbb
mov
add
push
jno
mov
mov
xchg
pop
fistl
sbb
jge
sub
addl
mov
jb
fmull
sti
push
cmp
jns
loop
stos
data16
push
int3
push
pop
scas
sahf
fmul
add
sub
repnz
les
rclb
fidivrl
inc
mov
ret
dec
or
stc
or
insb
lds
lret
dec
mov
jg
stos
movsb
mov
sbb
call
fdivrl
jle
push
sbb
popf
es
push
leave
cmp
jecxz
or
mov
inc
int
push
outsl
inc
or
pop
sti
mov
mov
mov
mov
sbb
push
xor
sub
insl
push
mov
ficoms
adc
inc
sbb
pusha
test
lods
sub
rcrb
pusha
aas
cld
mov
fcom
testb
push
mov
in
adc
rorb
push
adc
int
sbb
cmp
push
lahf
dec
xchg
sub
cmp
sub
jl
popf
mov
xchg
emms
jp
xchg
sarb
mov
pop
jns
sub
pop
popf
ja
pushf
adc
mov
pop
lock
mov
jb
lods
inc
inc
xchg
dec
push
std
ja
push
push
ljmp
inc
sub
enter
or
sub
lcall
ja
repz
in
jecxz
lret
roll
cwtl
test
sub
mov
cld
pop
inc
push
push
ror
mov
popa
movsl
dec
aaa
hlt
leave
lcall
mov
fidivl
movl
das
jnp
xor
insb
inc
mov
push
loopne
add
sbb
pop
dec
sbb
xchg
in
xor
adc
loope
inc
pop
das
std
mulb
dec
orl
loopne
fistps
in
js
clc
xchg
sub
sbb
test
adcl
aad
add
xchg
out
test
add
jle
or
add
inc
jns
add
adcl
sub
inc
dec
nop
aas
aam
lcall
pop
xor
or
shl
cmp
sbb
sahf
pop
insb
xchg
sbb
outsl
and
jns
jb
jmp
dec
imul
sahf
and
js
les
movsl
icebp
xchg
lret
andps
cmpsb
xchg
seto
mov
cs
ss
mov
mov
cmovae
lods
les
fwait
xchg
das
repnz
leave
or
fisubs
sti
lods
outsb
push
add
je
push
sbb
out
aad
xor
addl
push
push
mov
loop
sti
inc
mov
cmp
out
dec
repz
add
add
cli
loopne
fcomi
push
in
xor
lds
lret
xchg
lds
mov
fwait
rcll
inc
xor
jbe
lods
push
pop
xchg
xor
push
je
and
in
int
jg
or
pop
xchg
rolb
es
lret
in
imul
enter
arpl
movsb
push
mov
movb
add
gs
pushf
cmp
into
jecxz
popa
sahf
roll
cmp
inc
mov
cmp
or
movsl
mov
int3
int
loop
out
adc
dec
sbb
shl
push
mov
pop
das
pusha
in
test
dec
mov
je
divl
sbb
repz
jecxz
jnp
mov
hlt
lahf
roll
jnp
lahf
in
int3
lret
iret
ror
push
or
xor
lods
into
outsb
sub
pusha
stos
out
lds
loop
pop
dec
dec
les
ret
dec
out
in
cmc
jns
lods
iret
popa
cmc
inc
mov
lea
adc
aas
test
pmaddwd
mov
gs
movl
ljmp
jp
outsb
outsl
mov
test
and
and
pop
pop
aas
cmpsl
mov
fs
pop
stos
das
ficoms
inc
dec
in
cmpl
mov
and
dec
cli
mov
and
cltd
andl
scas
jge
lea
or
cmp
pop
add
lock
ljmp
push
leave
daa
adc
jae
and
andl
movsb
jbe
orl
cmp
mov
ljmp
les
es
jno
or
popf
data16
cmp
dec
in
push
add
fildl
out
fisubl
xor
jge
int3
hlt
or
dec
or
xlat
hlt
sub
shrl
mov
push
dec
fwait
mov
mov
aaa
pop
dec
xchg
pop
jmp
add
lock
mov
jg
out
data16
mov
mov
sbb
pop
mov
jae
inc
pop
test
sahf
jnp
mov
movsb
jae
adc
rolb
push
jg
pushf
sbb
int3
das
in
xor
repnz
pop
cwtl
push
sti
je,pt
jne
add
adc
mov
push
aam
sbb
sub
into
adc
xchg
sub
movsb
cmpsl
mov
xor
sti
add
outsb
incb
push
lods
mov
ja
mov
das
lcall
movsl
pop
dec
pushf
mov
mov
lret
popf
orl
pop
cli
add
ja
cld
inc
and
shr
pop
sbb
sub
xchg
xchg
sarl
movsb
and
fildll
out
lcall
xor
dec
cld
cmp
fcompl
lods
lea
adc
mov
lahf
mov
fdiv
pop
mov
es
xchg
jp
jb
incb
mov
sbb
dec
and
add
std
out
pop
lods
sub
lods
xchg
fimuls
faddl
clc
ret
jno
cmp
std
addr16
mov
sahf
mov
call
xor
outsb
loope
sub
arpl
test
icebp
sbb
testb
lea
movsl
add
mov
cli
ret
mov
call
inc
mov
cmpsl
out
sub
scas
fmuls
lret
mov
pop
repnz
adc
pop
and
adc
dec
in
ret
jg
stc
addl
outsl
int3
fcoms
aas
jl
aas
test
pop
ja
int
mov
ljmp
mov
pop
cmp
add
iret
adc
rcr
xor
lock
mov
popf
mov
adc
adc
hlt
xor
out
jnp
movsl
inc
insb
mov
je
lock
outsl
ja
jp
testb
inc
stos
repnz
int
clc
jle
test
cld
arpl
addr16
add
lret
mov
ds
into
repz
in
scas
mov
std
lock
cltd
in
outsb
sbb
xchg
cmp
aas
daa
push
jmp
movntq
out
and
mov
and
mov
push
add
popf
inc
ror
test
lcall
xor
sbb
sub
dec
insl
je
sbb
in
cmp
repnz
in
adc
jnp
out
and
rclb
mov
push
inc
fistpl
call
jmp
aam
daa
in
ljmp
fisttpll
adc
inc
cmp
daa
pop
dec
sbb
mov
push
mov
iret
mov
pop
mov
popa
xor
dec
dec
push
push
scas
ret
mov
cmp
sbb
mov
scas
mov
xor
call
cmp
lcall
cs
clc
popf
sub
mov
mov
mov
add
lahf
jg
lock
jns
or
mov
cltd
test
cld
jb
adc
lods
xor
test
xlat
stos
pop
mov
jge
sti
std
mov
testb
lock
loope
shll
jae
and
gs
mov
lret
cmc
sarb
mov
pushf
int3
and
push
dec
pop
mov
adc
imul
loope
jne
xor
dec
mov
mov
in
jmp
nop
push
jno
scas
mov
sbb
in
out
add
add
xchg
or
notb
mov
jmp
cmp
dec
cld
call
add
mov
idiv
sub
jmp
push
jo
mov
in
sub
jmp
out
nop
sub
cmp
testl
fstpl
sbb
push
xchg
jp
pop
dec
ficompl
cli
and
bound
pop
mov
cmp
aaa
dec
es
and
loopne
sub
popa
inc
cli
mov
mov
xchg
fldl
je
out
cltd
pop
mov
cmpsb
stos
xchg
pop
cmp
push
mull
xor
out
jnp
push
xor
stos
call
adc
jno
jnp
movsl
aas
adc
mov
fwait
ljmp
xchg
inc
in
sarl
xor
sub
leave
int3
stc
add
push
sbb
add
mov
push
loopne
or
mov
loope
and
add
fldcw
cmp
cmp
jbe
je
xor
adcl
lods
inc
int
sbb
mov
ss
stos
insl
and
dec
push
loope
aaa
inc
push
ja
mov
rcrb
es
dec
pop
push
int
jge
sub
shll
dec
popf
push
popa
insb
test
adc
rcll
and
and
xor
push
mov
or
xor
adc
xorb
orb
aas
push
mov
mov
mov
or
lods
in
add
bound
rcl
stos
out
fnstsw
mov
push
cmp
mov
add
imul
pop
in
stos
cmp
setbe
call
mov
lods
mov
loopne
btc
ret
mov
das
add
push
repnz
insb
das
pop
popa
cli
dec
imul
sub
and
test
fstl
movsl
sbb
add
es
jp
mov
pop
dec
ljmp
push
xchg
insl
jmp
inc
dec
pop
cmpsb
sti
clc
push
pop
ss
mov
adc
or
movsb
inc
dec
not
rcrl
xorl
xlat
icebp
xchg
lcall
sbb
pop
push
test
sbb
outsb
mov
ja
cli
jno
rol
sbb
bound
nop
dec
and
pop
lcall
mov
mov
lahf
test
and
mov
or
ja
dec
lret
nop/reserved
sub
call
mov
out
pop
cmp
dec
fsubp
mov
push
cmp
xor
pop
int
loopne
jge
repnz
loope
dec
icebp
mov
xchg
push
adc
push
mov
cwtl
movaps
sub
ret
sahf
pop
xchg
lcall
mov
push
xor
scas
mov
sbb
leave
xor
or
adc
push
mov
iret
in
pop
jns
sub
das
push
add
pop
lahf
es
jp
lods
dec
push
mov
rol
lods
xor
subb
xor
push
andb
mov
rcl
into
mov
fsubrp
jae
cmp
psrad
int
xchg
int3
ljmp
mov
cmp
scas
pop
roll
adc
dec
or
test
popf
call
repz
jns
and
push
xchg
cltd
shl
add
xchg
push
imul
cs
jle
mov
jge
int
pop
arpl
lods
sbb
sbb
stos
add
mov
daa
ja
and
push
push
push
inc
clc
stos
mov
pop
das
inc
jne
fwait
vucomisd
cs
daa
aaa
sbb
xchg
xor
adc
push
fisubl
fdivs
addr16
push
and
sub
imul
inc
icebp
or
xchg
fdivrl
jae
inc
dec
test
notb
mov
movsl
test
sub
lds
adc
sub
mov
adc
dec
sarl
int
or
or
or
and
mov
ja
cld
stos
mov
dec
sub
call
jmp
ds
or
mov
xlat
inc
fnstsw
es
dec
int
loope
push
dec
sarl
arpl
and
sub
xchg
lea
push
hlt
fimuls
out
xchg
or
scas
mov
out
or
cmp
push
loopne
cwtl
or
jns
mov
dec
add
dec
es
fstpt
loope
dec
mov
adc
dec
rorb
in
cmp
adc
push
mov
mov
inc
clc
loope
push
fidivs
or
inc
mov
into
push
xchg
push
in
push
and
das
and
cltd
popa
in
sub
stos
or
inc
and
test
nop
push
insb
cld
movsb
movsb
leave
cmp
and
push
inc
mov
push
pop
sbb
icebp
cmpsb
mov
adc
xor
addl
push
mov
fstps
cmp
mov
lock
push
add
mov
lahf
sbb
jge
xchg
push
xor
adc
cltd
das
adc
mov
mov
sbb
jb
xchg
jecxz
jge
mov
xchg
mov
lds
hlt
mov
pop
push
adc
sub
nop
jo
out
push
mov
fscale
std
shl
mov
push
fdivp
mov
adc
fistps
push
ja
and
aas
fwait
xlat
or
or
mov
xor
movsl
xor
loope
and
lods
xor
iret
and
add
orl
movsl
mov
sub
add
adc
mov
aaa
sahf
cmp
jne
mov
or
repz
int3
fdivrp
hlt
das
mov
pop
sti
mov
fistps
insl
cld
add
rcrb
sbb
cs
fildl
ret
jle
add
sbb
inc
into
sbb
aad
dec
inc
dec
test
jbe
inc
sub
sbb
sub
dec
loop
xchg
adc
jl
push
push
aaa
push
pop
pop
mov
xchg
sbb
stos
sbb
lods
in
push
and
popa
adc
mov
stos
shrb
aam
xorb
subl
dec
movsb
cmpsb
inc
xchg
stos
and
iret
push
xchg
jg
push
mov
xchg
xlat
xchg
test
or
fstpl
sbb
leave
push
mov
xor
or
nop
jecxz
sarb
int3
nop
lret
nop
test
rorb
fadds
shlb
jge
cmp
daa
add
cmp
popa
inc
or
test
mov
cmpsl
scas
pop
adc
int3
mov
outsl
push
adc
or
popf
mulb
inc
sub
js
popf
cmp
pop
and
int3
rorl
mov
xchg
and
test
lahf
cmp
lds
mov
sub
sbb
shll
cmpsb
sbb
pop
outsb
data16
lea
push
jge
out
pop
cmp
outsb
movsb
popf
or
hlt
mov
andb
xor
orb
aaa
fcomi
xchg
push
stos
inc
pop
clc
push
mov
mov
adc
push
xchg
push
sbb
outsb
pop
sbb
js
mov
mov
mov
das
scas
fidivrs
int
mov
ficoms
fcoml
insb
test
loopne
xor
add
cwtl
pop
add
push
lods
les
mov
and
in
fsub
xor
mov
daa
xchg
inc
dec
frstor
cs
dec
hlt
ja
movsl
sahf
pop
sbb
inc
addr16
dec
lods
in
ljmp
sbb
fs
jb
cltd
das
cltd
mov
imul
and
jnp
out
in
mov
fcom
in
mov
mov
sbbb
js
out
arpl
in
cmp
mov
fisubrs
in
dec
lods
aaa
pusha
in
pop
lret
and
aas
imul
aaa
push
add
mov
add
mov
inc
pop
movsl
pop
das
dec
call
clc
mov
popa
fiaddl
sti
jg
cltd
div
or
andb
xchg
push
test
adc
scas
mov
pop
jns
or
mov
cmpsb
dec
mov
inc
xor
cmp
out
out
loop
push
inc
loopne
in
or
dec
push
leave
push
test
mov
fdivl
test
rolb
or
xor
inc
ja
inc
xchg
fnstcw
mov
xor
adc
ret
adc
fdivrs
jne
xchg
enter
not
xchg
add
enter
aas
dec
pop
ss
cmc
sahf
lret
hlt
jns
push
jnp
loop
popa
push
sbb
cmp
lods
push
cmc
mov
leave
aaa
fs
imul
add
cmp
mov
push
xor
or
sub
in
orl
mov
fstpl
sti
xchg
adc
mov
daa
les
cmpsl
dec
vcomiss
out
jb
and
sti
cli
cmp
cmp
outsl
sbb
sbb
sub
sub
push
in
sbb
mov
sub
sub
push
push
jb
cmp
clc
or
lock
or
inc
fmuls
ret
mov
inc
mov
xor
xor
arpl
and
ds
sbb
or
xchg
xor
bound
and
in
xchg
lret
into
mov
push
or
xchg
dec
and
fs
push
xor
sbb
divl
push
aam
stos
dec
pop
les
hlt
sahf
add
jmp
clc
leave
lea
add
cmpsb
repnz
or
push
out
mov
dec
mov
add
adc
sub
cmp
test
sbb
arpl
in
pop
xchg
mov
push
aaa
movsb
pop
bound
xor
and
ficoml
test
shll
addr16
push
insl
sbb
daa
inc
in
jmp
push
sbb
lds
fldl
ss
fsubr
mov
incb
int3
push
call
mov
jns
push
push
orb
mov
ljmp
lahf
bound
inc
adc
gs
mov
daa
mov
cmc
xor
dec
orl
test
or
addl
cmp
ljmp
mov
adc
push
jb
pop
std
mov
cmp
push
add
pop
addb
and
dec
pop
or
inc
test
xor
inc
or
popl
lret
add
adc
and
lahf
xchg
fdivrl
ja
mov
fwait
cld
sub
test
aam
stos
jl
sbb
and
out
pusha
jb
add
sbb
mov
jle
test
shl
mov
lret
push
sbb
cld
dec
pop
mov
movsl
xchg
dec
push
xchg
jg
sbb
lahf
in
nop
fldt
std
jl
idivl
inc
adc
mov
arpl
enter
push
dec
int3
adc
xchg
or
lret
int3
insl
jns
pop
jne
and
stos
and
push
in
test
push
add
jl
add
and
push
js
into
lcall
ret
inc
test
daa
shlb
pop
cltd
push
xchg
mov
adc
int
mov
aaa
mov
and
das
orl
jmp
mov
fdivs
sti
mov
or
leave
frstor
sub
and
cld
inc
and
and
imul
inc
mov
xchg
jp
jge
cmc
lods
fstpl
cmp
fdivl
push
cltd
leave
mov
mov
loopne
pushf
fcmovbe
adc
and
sub
push
xchg
add
neg
dec
xchg
mov
repz
outsb
add
inc
scas
jae
sbb
dec
lahf
adc
or
inc
sbb
int3
xchg
fcmovbe
jg
jb
sarl
out
push
movsl
fisttpll
mov
or
cli
aam
add
jno
add
fisubrs
push
mov
out
clc
jne
popf
cltd
pop
fcmovbe
test
es
pushf
adcl
cmp
push
xorl
push
lea
dec
and
xor
jnp
cmp
inc
dec
cmp
inc
pop
push
and
xor
out
lods
jecxz
mov
or
pop
lret
mov
std
sub
dec
mov
pop
cli
out
lds
and
decl
outsl
aas
fidivrl
jmp
dec
test
cltd
iret
bound
or
movsl
daa
lods
pop
add
sub
call
cmp
sbb
xchg
arpl
sub
out
sbb
fs
push
mov
neg
call
or
jge
pushf
push
ret
dec
enter
jne
and
cmpl
push
pop
push
fwait
cmpsl
push
pop
inc
jl
inc
lret
and
sbb
lock
adc
cltd
leave
inc
aad
dec
sub
xchg
gs
xchg
inc
dec
push
sbbl
jl
mov
ret
mov
loop
lds
push
jo
stos
sub
movb
data16
outsl
xchg
lret
mov
jmp
fxch
clc
leave
leave
adc
pop
dec
aad
xor
jmp
push
inc
and
jnp
adc
out
xchg
fisttps
xchg
bound
pcmpgtw
das
int3
popa
mov
jb
loopne
push
push
jnp
loope
sub
mov
les
mul
les
mov
gs
inc
mov
jnp
mov
ficoml
popf
xchg
es
movsl
and
rclb
dec
iret
enter
adc
lahf
or
out
cmpsb
sbb
rorl
iret
sub
mov
fcoms
lds
inc
mov
mov
fbld
sbb
jnp
mov
rcr
pop
inc
inc
or
loope
xchg
sub
pop
cmp
iret
out
xchg
lret
daa
mov
or
or
or
ficomps
loop
push
jecxz
loopne
lcall
nop
push
call
xchg
lret
test
imul
les
xchg
imul
imul
xor
outsb
lahf
sahf
loope
add
cld
sub
push
lea
xor
repz
lods
popa
lods
mov
lcall
enter
fstl
icebp
addl
sub
popa
cmp
inc
mov
loopne
rcrl
leave
xor
imulb
push
adc
sbb
popa
mov
daa
xchg
pushl
cmpsl
fildll
dec
ret
mov
jne
sbb
imul
inc
imul
aad
cmp
fdivrs
das
add
das
mov
mov
adc
xor
loope
mov
fistps
lret
loopne
cmp
jg
jb
ss
adc
stos
jae
or
mov
imul
or
mov
pusha
mov
mov
or
pop
dec
sbb
cld
rorb
pop
sbb
lret
add
lret
adc
test
inc
stos
push
movd
js
inc
leave
lret
shl
xlat
js
xor
les
mov
sahf
lods
in
movsl
mov
hlt
sqrtps
and
ljmp
jo
xchg
mov
push
and
mov
sub
jmp
mov
and
pop
sbb
dec
jge
pop
in
stos
jmp
ret
fcmovu
jl
add
popa
add
jnp
xchg
pop
ss
xchg
movsb
fwait
shlb
ja
test
mov
lds
subl
scas
mov
dec
arpl
lcall
les
aam
jmp
xor
sti
sarl
sub
xor
aaa
and
xchg
testb
xchg
movsl
push
es
lea
sub
sub
push
mov
out
lcall
stc
inc
pop
shlb
or
loope
fwait
pop
lret
es
or
mov
xchg
add
test
mov
je
mov
repnz
fmul
pusha
lea
push
ds
mov
mov
sub
sbb
mov
call
pop
shll
xchg
mov
jp
add
sbb
push
mov
out
ror
stc
pop
dec
adc
dec
add
pop
mov
pop
insb
fstl
push
jnp
cmc
insb
jae
cmp
out
iret
leave
pop
lea
mov
mov
xchg
out
jl
aad
jne
or
adc
sub
add
jns
push
inc
lea
dec
push
out
mov
das
add
jno
xorb
jg
mov
sub
stos
mov
in
cmp
fbld
in
pushl
push
mov
pop
das
loop
dec
sbb
cld
jb
jno
or
pop
nop
out
adc
cltd
mov
jae
xor
std
ja
xchg
shrl
push
pop
shlb
mov
xor
notl
adc
jmp
popa
push
lock
aaa
aam
xchg
test
mov
push
call
xor
imul
cwtl
lea
out
out
stc
pop
sbb
int
dec
sub
jmp
int
sub
cmpsb
push
mov
scas
fcoml
js
bound
push
jmp
cmp
enter
loopw
xor
sub
xchg
jns
out
pusha
test
idivb
repz
lret
int
outsb
jge
stc
add
push
push
sbb
mov
ds
aaa
mov
insw
jbe
lret
js
push
movsb
sti
adcl
jns
mov
mov
ljmp
popf
jne
insl
fldt
dec
cmp
jns
and
call
testl
cmpsl
jbe
jmp
iret
mov
cltd
loope
je
cltd
repz
aad
dec
add
bound
jmp
lcall
sub
inc
out
rol
or
cli
mov
sub
dec
mov
push
bound
in
movsl
adc
lods
push
push
sub
je
xor
stos
repnz
jp
push
cld
and
mov
or
cli
xchg
xchg
ret
dec
outsl
pop
dec
add
addl
cs
dec
xchg
jnp
insb
out
out
jne
xor
daa
inc
test
in
test
xor
sbb
inc
fsubs
insb
sbb
imul
dec
xlat
push
mov
ss
and
mov
pop
pop
imul
arpl
das
icebp
nop
sbb
sbb
mul
mov
inc
cmp
insb
pop
adc
pop
sbb
sub
cmp
nop
mov
jb
push
push
mov
adc
fcmovb
inc
or
jnp
sbb
xor
xabort
xor
je
cmp
xchg
adc
shr
loop
sarl
and
movsb
in
mov
outsl
adcb
rclb
cmc
cmp
jo
ficomps
mul
push
mov
sarl
filds
dec
xor
mov
test
and
lahf
push
loop
sbb
jecxz
incl
dec
pop
sbb
jne
mov
and
push
inc
lret
mov
xchg
cmp
mov
mov
pop
rorb
clc
mov
das
negb
jge
inc
and
jo
nop
std
or
dec
popa
mov
aas
scas
jge
shll
arpl
call
mov
subl
mov
mov
stos
xchg
addr16
fs
aam
adc
pop
std
ss
lahf
cmpl
sub
cmpsb
shll
aaa
test
popf
push
addl
pop
imul
adc
popa
inc
lods
shrb
lcall
test
xor
mov
insb
jno
fldcw
jle,pn
fimuls
pop
or
xor
lret
fmuls
jae
jns
cwtl
or
and
pushf
jmp
or
push
and
mov
xchg
add
mov
jb
and
inc
fildll
ss
cmp
pop
out
dec
dec
std
lcall
add
insl
gs
scas
sbb
push
lods
inc
add
rep
repz
popl
lret
mov
bnd
jle
and
push
rclb
aas
pop
xor
scas
add
inc
or
in
pusha
xlat
iret
push
jmp
push
aad
mov
xor
adc
jo
fiaddl
int
push
ds
cmp
rcll
or
sub
sbb
into
cmp
out
shrb
andb
push
push
push
sbb
enter
sbb
in
sub
inc
or
sbb
or
lahf
xchg
fnstenv
pop
inc
mov
ret
dec
ja
test
xchg
mov
jmp
cmp
arpl
cmp
aad
xor
leave
loopne
push
and
fbstp
cld
inc
aam
push
sub
movsl
pop
xchg
xor
push
xchg
mov
scas
int
rolb
decb
sub
lahf
push
xchg
cmp
xor
jle
pop
cmp
sub
sub
stc
in
fwait
cmp
int3
jg
or
lret
sub
jmp
shl
fs
mov
data16
in
xor
repz
das
test
cld
mov
scas
stos
sub
mov
xchg
rcrl
cmp
loopne
fiaddl
adc
dec
mov
lcall
dec
shufps
mov
gs
push
mov
call
dec
jae
fmull
pop
daa
or
adc
js
loope
sbb
dec
mov
nop
add
out
inc
pop
dec
add
jecxz
mov
data16
stos
jne
pop
sarl
ds
inc
add
gs
cmp
mov
fsubrl
popa
fsts
sbb
xor
cli
pop
shrb
into
insl
push
cmpsb
inc
ja
pop
fnstenv
mov
push
call
popa
add
push
push
ss
clc
in
push
adc
or
sahf
sbb
rcrb
cli
aaa
insb
xchg
mul
jle
add
ret
xchg
orl
pop
or
test
sbb
fsubrl
ret
add
lods
jae
in
dec
das
stos
xor
xchg
ja
cmc
std
testb
or
in
inc
inc
test
enter
push
push
mov
mov
inc
bound
cltd
add
outsb
or
mov
stc
add
xchg
popa
pop
nop
lret
adc
outsb
neg
int3
out
mov
sbb
xor
push
adc
cmp
or
jno
mov
sub
mov
mov
rcrb
cmc
dec
gs
test
out
shll
jmp
test
cli
scas
push
adc
fwait
mov
inc
push
xchg
mov
jecxz
arpl
mov
sbb
dec
std
popa
mov
lock
cmp
clc
sbb
orl
shrb
jle
push
push
mov
or
out
ret
add
imul
mov
inc
jnp
insl
in
insl
sub
fst
inc
mov
int3
cmp
nop
cld
lods
lds
ficomps
scas
fsubs
jle
cld
das
pop
mov
or
cmp
adc
ljmp
mov
jae
jg
mov
inc
out
fistpll
or
or
cmc
aas
lods
pop
scas
aam
jecxz
or
pop
ret
mov
jmp
inc
fistps
stos
pop
in
es
into
shrl
js
jno
cmp
fcmovbe
mov
xchg
out
imul
das
aas
fistl
ds
cmpsb
movsl
or
xor
ss
jmp
je
mov
pop
push
in
add
clc
mov
dec
icebp
mov
cli
fdivp
int
and
lret
in
mov
inc
push
paddusb
fnstenv
mov
fwait
stc
daa
push
adc
cmp
jmp
sub
xor
je
clc
push
jmp
cmpsl
mov
faddl
lcall
in
and
mov
lds
inc
add
and
adc
cmpsl
cwtl
push
cmp
sbb
les
hlt
cld
icebp
ss
dec
sub
jae
je
jno
pop
sti
in
ficoml
repz
push
sbb
flds
sub
jmp
test
lahf
test
repnz
dec
fcompl
and
xor
inc
push
into
push
loopne
jl
fcmovnu
jbe
inc
std
sti
cld
inc
shl
iret
sti
ret
xor
insl
fdivs
jmp
pop
shrl
jns
inc
mov
jno
aad
add
xchg
leave
cmp
mov
mov
push
jl
xchg
bound
xchg
push
xchg
in
leave
cli
sarl
xchg
or
fwait
nop
adc
jg
loopne
sbb
adc
xor
shll
mov
jmp
loop
xor
ja
cmp
jl
cmp
mov
in
les
mov
mov
mov
pop
mov
pop
jae
rorl
mov
rol
sub
stos
sub
addl
daa
out
pop
adc
clc
clc
inc
out
aas
xor
mov
divb
cmp
pushf
fwait
pop
loope
and
mov
cmp
jle
xlat
sbb
jge
mov
incl
test
data16
inc
adc
jnp
push
cwtl
clc
andb
mov
shrb
jns
into
leave
lret
ds
add
mov
out
jecxz
test
cmp
cmp
jbe
and
ljmp
int
sahf
in
out
sbb
sbb
adc
jbe
mov
jp
push
jnp
push
pop
stc
cmp
pop
mov
xor
loope
loope
mov
pop
scas
adc
ljmp
es
sub
insl
xor
stos
pop
mov
push
nop
jne
add
xchg
cmpb
sub
push
cmpl
leave
out
sub
mov
lds
sub
lods
or
shll
fsubs
adc
mov
lahf
ds
stos
ret
xchg
cmp
cmp
xor
jbe
mov
mov
push
test
push
bound
adcb
and
xor
adc
adc
dec
add
adc
add
mov
dec
aam
pop
or
jns
pop
push
xor
mov
jmp
cs
or
jne,pn
inc
sbb
ret
mov
push
or
inc
cmp
call
data16
mov
out
pop
adc
lods
outsl
int3
jp
in
pop
lods
jae
xor
cltd
push
adcb
jge
in
aad
sbb
add
aam
imull
or
and
pop
inc
mov
fisubl
pop
sahf
popf
adcb
dec
adc
push
sub
jg
adc
mov
out
fiadds
in
sbb
bound
cwtl
xchg
xor
imulb
mov
push
mov
pop
adc
xor
stos
orb
cli
dec
pop
inc
push
subb
sbb
sub
xchg
scas
inc
out
test
in
cmp
scas
lret
cmp
dec
mov
dec
cli
test
jne
dec
std
pop
pop
das
mov
xor
data16
and
push
mov
xor
push
push
mov
push
and
fildl
mov
mov
movsl
into
cmp
mov
push
mov
mov
jno
add
and
push
or
leave
cmp
sub
fdivrs
loop
xchg
lock
xchg
or
jb
mov
and
enter
sub
out
lret
cmp
test
xchg
xchg
jnp
cmp
sbb
push
sub
jle
adc
fimull
test
jnp
dec
mov
and
xor
jp
imul
mov
aam
shlb
ret
cwtl
mov
imul
outsb
push
rcr
mov
xchg
jecxz
xchg
mulb
xor
icebp
das
sub
jg
js
mov
shll
push
mov
push
test
cmp
lods
decl
or
lret
and
subb
ret
mov
outsl
incb
daa
push
test
aaa
and
cmp
ja
inc
outsl
xor
pushf
cs
inc
int3
test
clc
add
imul
mov
inc
dec
in
dec
sub
subl
xchg
dec
mov
sub
lahf
xor
sbb
loopne
sub
mov
xor
nop
inc
mov
cmpsb
mov
pop
sbbb
popl
js
imul
mov
out
in
in
scas
movsl
dec
outsl
mov
std
jb
out
fildll
xor
sub
cmpsl
xchg
orb
xchg
lods
sbb
mov
fdivp
repz
jbe
pusha
bound
stos
std
cld
into
aas
movsl
and
adc
int
pop
aas
addl
out
stos
mov
sub
and
insl
pop
je
lahf
int
push
leave
hlt
out
stos
mov
roll
and
cmc
push
hlt
cmpsl
xlat
imul
test
dec
dec
cmpsb
arpl
jns
stc
addr16
ds
leave
push
scas
mov
jae
sbb
inc
inc
sbb
sub
cmpsl
cli
mov
hlt
and
fwait
popa
jecxz
ljmp
mov
pop
sti
leave
aad
mov
push
xchg
rorl
fmuls
xchg
sbb
lcall
loopne
xchg
rcrl
scas
into
fistpll
ror
int3
mov
jp
jg
subl
inc
rcr
xlat
push
push
lcall
fstps
cmp
stos
divb
lds
push
scas
mov
adc
hlt
arpl
lock
aam
pusha
mov
or
inc
nop
jecxz
stc
pop
xor
adc
jp
and
push
xchg
aam
add
decb
in
and
dec
or
xchg
pop
mov
ds
cmp
fadd
and
cmp
xchg
xchg
enter
jg
add
nop
adcb
cmpsl
out
adc
xchg
pop
mov
xor
or
data16
in
aaa
gs
push
sub
call
jmp
outsb
sahf
clc
xor
xlat
sbb
push
add
fiaddl
imul
jb
popf
clc
fnsave
in
or
ja
daa
push
in
hlt
mov
lret
in
popa
iret
and
and
mov
ror
dec
push
xchg
dec
push
iret
pushf
jle
nop
or
das
fiaddl
js
and
pop
out
out
arpl
and
movsb
in
popa
add
jmp
push
inc
dec
cmp
mov
push
outsb
insl
mov
scas
and
pop
outsl
inc
lods
imul
out
mov
in
add
loopne
and
leave
xchg
test
stc
daa
lret
mov
lcall
subb
loope
scas
stc
jb
inc
dec
jae
movsl
sti
neg
fisttpl
pop
push
orb
mov
cmp
outsb
lret
movsl
pop
sub
and
insb
xchg
adc
inc
je
mov
nop
ja
pop
aam
cmp
pop
je
sti
dec
fdivr
jg
stos
jno
icebp
roll
sbb
adc
js,pt
add
pop
or
incl
cmp
fistl
mov
lret
cmp
out
lcall
paddusw
and
jmp
data16
cmp
sbb
mull
xor
sti
iret
popf
cmp
cld
push
divl
pop
add
adc
js
ljmp
and
movsb
xor
bound
push
and
mov
lret
lcall
adc
dec
mov
sbb
or
out
jae
and
fmul
sahf
cld
orl
clc
xor
fiadds
and
push
insb
popf
mov
pop
scas
loope
js
mov
aam
inc
xchg
dec
mov
in
stos
call
pop
push
scas
test
xor
bound
mov
cmpsl
inc
je
jb
fsubs
mov
into
dec
cmpsb
lcall
pop
sbb
mov
mov
ljmp
xor
push
int
movsb
xor
adc
inc
mov
push
or
in
pop
jne
jno
fwait
and
sbb
jmp
inc
add
and
dec
mov
mov
pop
shll
jne
add
popa
mov
sbbb
les
lods
pusha
pop
xchg
out
mov
movsl
fstpl
sub
mov
mov
mov
mov
lret
jg
icebp
gs
pushw
jo
test
cli
push
jno
mov
push
mov
fdivrl
sbb
stc
clc
sti
add
out
jno
pushf
addr16
inc
clc
push
imul
in
iret
push
in
xor
sbb
xchg
mov
test
jl
jbe
mov
das
ret
int
xchg
cmc
push
movsl
or
inc
and
jle
sbb
inc
pop
lahf
out
mov
push
mov
dec
jl
out
mov
call
mov
lods
out
lock
test
rorb
outsl
popf
in
push
adc
pop
mov
test
push
pop
sub
cmp
shll
add
cmp
shlb
mov
sbb
les
xchg
mov
lds
push
test
pop
mov
jge
clc
sbb
lret
xchg
mov
insl
cltd
cld
mov
xchg
ds
mov
inc
mov
jne
inc
pop
and
push
add
movsb
rcrl
imul
mov
fs
cmp
cmp
jb
sub
filds
dec
clc
jbe
dec
fimuls
dec
cwtl
notb
dec
es
std
fsts
inc
test
mov
icebp
cli
aaa
xchg
push
pop
in
push
std
xor
fstl
lret
adc
push
cmpsb
sub
sub
jle
pop
stos
cwtl
inc
cmpsb
movl
xor
shll
rolb
repz
pop
xchg
in
in
leave
dec
push
jno
dec
pop
sahf
stos
addb
outsl
pop
mul
mov
inc
or
jl
aas
loope
gs
sbb
lock
pop
in
jno
jl
add
push
mov
shlb
into
push
push
mov
push
sbb
lods
dec
push
and
mov
adc
lds
push
test
leave
dec
mov
pop
mov
sbb
lahf
sub
cmp
sub
jb
cmpsb
dec
sbb
mov
jbe
fwait
mov
mov
pop
push
repnz
mov
adc
adc
push
mov
pop
jne
cltd
inc
pushf
pop
mov
pop
fstpl
call
mov
incb
call
mov
test
push
jg
adc
clc
mov
loopne
sbb
repnz
addr16
pop
stos
push
into
pop
loopne
cs
xchg
mov
lahf
hlt
pop
popa
lods
inc
aam
fs
rolb
cmc
pop
out
mov
popa
sbb
enter
pop
mov
mov
fmul
ljmp
mov
fwait
es
bound
sub
test
jne
les
mov
and
adc
addl
movb
cmpsb
test
loope
js
add
adc
dec
pop
addr16
inc
shll
xor
cmpl
pop
adc
dec
das
pop
cld
add
popa
pop
das
test
adc
pusha
lods
stos
mov
adc
and
nop
sub
mov
stos
ss
aaa
lods
in
or
pusha
xchg
pop
movsl
popa
dec
mov
dec
xor
sbb
inc
lds
pushf
insl
xchg
mov
jl
jno
mov
xlat
pop
ja
js
inc
dec
mov
and
dec
in
jne
xor
test
sti
xchg
das
divb
inc
jg
inc
add
dec
shlb
fidivrs
ds
ret
rcrb
inc
test
rcll
mov
fdivs
mov
shr
ss
rcl
fs
rorb
ror
rcl
mov
cmpsl
movsl
mov
mov
inc
cmp
leave
mov
sub
pushl
enter
jns
cmp
xor
sub
and
and
cli
cmp
xor
jp
push
sub
sbb
das
inc
mov
xchg
cmc
add
cli
cmp
xor
out
sub
pop
pop
sub
hlt
pop
sub
mov
pusha
das
mov
outsb
ret
div
inc
dec
jp
pop
mov
repnz
dec
push
das
push
pop
mov
jp
sti
and
cmpsl
test
xchg
leave
call
mov
or
jecxz
ror
xchg
xchg
add
jb
sbb
inc
lcall
push
jge
mov
xor
jmp
shll
ja
sbb
je
int
aad
sub
aas
push
imul
setnp
fmull
scas
push
cmp
rcll
nop
addr16
jg
lret
and
es
pop
add
pop
pop
add
push
push
dec
push
jecxz
cmc
enter
xor
in
xchg
push
mov
outsb
push
inc
neg
int3
negl
sbb
push
xor
movsb
aaa
out
inc
scas
pop
jle
and
cmp
jge
lcall
mov
jmp
nop
jnp
adc
fmull
ret
popf
mov
sub
mov
pop
popf
lret
movsb
push
and
nop
push
hlt
cmp
jmp
dec
mov
rcrb
out
xor
lret
cs
xor
jbe
fcomps
call
jmp
jl
incb
data16
out
mov
test
add
test
mov
mov
lret
leave
ds
cli
aas
sar
or
push
adc
adc
nop
test
cmp
mov
movsb
rclb
inc
jl
inc
repnz
aam
fisttps
inc
bound
aam
push
push
testb
dec
xchg
fnstcw
test
push
sub
idivb
lret
fwait
arpl
addb
fsubp
bound
sbb
and
iret
pop
or
add
xor
inc
ja
lret
add
mov
pop
loope,pn
cwtl
stc
jmp
xchg
pop
aas
jae
popf
mov
stc
sahf
sbb
cmpsb
inc
es
push
xchg
dec
pop
leave
mov
adc
shrb
cmpl
out
sti
xchg
inc
sarb
sub
js
cmp
cwtl
mov
jg
fs
pop
addr16
push
xchg
push
pop
mov
mov
adc
dec
lcall
ficomps
xchg
aaa
adc
or
xor
scas
in
xchg
cld
in
push
pop
call
adc
in
pop
fld1
push
je
xchg
in
and
fcmovbe
mov
sbb
mov
lea
cmp
cltd
sbb
xchg
cmp
mov
adc
cwtl
hlt
cmpsl
fcoml
adcb
fwait
inc
add
mov
pusha
fbstp
mov
jo
sub
mov
jg
lods
inc
int3
xchg
mov
das
aas
mov
lea
cld
test
pop
filds
xchg
and
sub
lock
add
add
fdivs
movsb
rorb
and
popa
pop
clc
xlat
sub
lcall
xchg
jns
sub
push
push
mov
int3
imul
jecxz
dec
not
repz
in
sbb
and
mov
adc
imul
cmp
es
push
or
inc
in
dec
aam
ret
fdivrs
mov
stc
jmp
jle
div
inc
mov
mov
add
or
hlt
lea
dec
inc
shrb
stos
out
sbb
cmpsl
mov
fdivs
int
jcxz
jae
sub
adc
mov
xchg
sbb
add
cmc
adc
jno
std
push
fucomp
shl
cmp
sub
jno
movsl
mov
in
les
or
in
mov
pop
sub
scas
adc
inc
jae
push
mov
imul
and
and
cmc
aad
in
fcoml
ljmp
push
add
jnp
jo
mov
cltd
imul
add
push
lods
pushf
in
xor
sarb
pop
mov
lahf
dec
loopne
adc
mov
xor
cld
and
and
push
insb
mov
inc
sub
inc
cmpsl
ficomps
pop
push
jo
mov
mov
iret
ljmp
mov
in
mov
push
inc
fcomps
lods
xor
loopne
inc
cmc
push
inc
xchg
cmp
mov
repz
sub
repnz
mov
movsl
out
mov
cli
push
adc
mov
push
jge
nop
es
mov
daa
add
outsb
lret
pop
and
roll
inc
rcll
pop
das
lcall
orl
sub
iret
mov
dec
mov
ret
lahf
inc
mov
dec
cmpsb
adc
nop
or
movsb
jge
leave
or
jmp
xchg
addl
das
pop
enter
mov
imul
cld
cmp
ljmp
pop
push
or
call
and
pop
into
push
subb
xchg
mov
ds
mov
jge
mov
sub
iret
jg
inc
push
cmp
xchg
daa
sub
push
mov
loopne
fisubl
push
das
jg
fwait
pusha
std
aaa
aaa
mov
mov
outsl
mov
xchg
insb
les
pop
jnp
test
stos
xchg
add
std
or
mov
pop
mov
dec
push
inc
mov
pop
out
data16
clc
mov
pop
mov
jp
insb
sbb
out
int
stc
in
negl
mov
jl
stos
inc
mov
mov
inc
mov
stos
dec
jl
or
adc
push
adc
pop
stos
iret
sbb
rorl
jo
stos
push
ret
or
mov
lret
sbb
sub
repz
pop
xor
jb
sbb
sub
sar
dec
test
or
push
and
iret
aas
in
test
enter
mov
jge
lods
popa
outsb
js
les
cltd
repnz
or
mov
test
or
dec
leave
dec
cmpsl
jo
mov
pop
out
rcrl
mov
adc
lahf
cmpsb
mov
or
cmp
add
add
pop
fisttpll
mov
xor
rsqrtps
dec
inc
shl
sahf
mov
xchg
sbb
out
xchg
inc
sbb
or
popa
aam
cmp
fs
out
jbe
mov
xor
orl
mov
std
pop
ds
ror
mov
dec
arpl
negl
scas
pop
mov
ja
pusha
cmp
fcoml
repnz
sbb
dec
scas
and
repz
adc
js
out
or
sbb
mov
cltd
push
cli
add
cli
cmp
lods
insl
pop
in
mov
or
stc
xchg
xor
dec
cmpl
inc
aaa
outsb
add
test
addr16
xchg
dec
push
add
sub
adc
mov
aad
and
test
mov
inc
pop
lods
jbe
and
aad
loop
fsubrp
cltd
mov
dec
lods
push
pushf
repz
jo
into
lods
inc
out
pop
inc
sbb
aad
mov
push
lcall
lcall
inc
stos
sti
jecxz
dec
rcr
or
pop
rcl
mov
arpl
jcxz
hlt
and
test
xor
lds
fcomp
popa
or
enter
dec
jno
clc
mov
sahf
mov
ds
cmp
dec
mov
jo
add
sbb
lahf
js
mov
aam
jne
sbb
aad
mov
inc
cmp
mov
stc
add
dec
mov
subl
mov
mov
xor
add
lock
mov
and
test
ds
lcall
daa
xor
mov
push
movsl
shrl
dec
ret
daa
or
xchg
adc
mov
mov
cmp
sar
jecxz
mov
mov
scas
push
sub
sub
xor
pop
fildl
outsb
xchg
sbb
cmpl
scas
inc
sub
inc
lret
dec
push
mov
mov
loop
test
rcll
gs
loope
sub
cld
lret
dec
xlat
enter
xor
push
dec
add
jmp
xchg
or
repz
imul
jmp
dec
mov
fmulp
mov
pop
xlat
or
mov
cmpsb
or
or
loop
jecxz
ror
mov
inc
ss
cmp
ss
data16
jbe
jecxz
and
mov
ror
pop
in
mov
xchg
lods
sbb
inc
dec
mov
xchg
mov
test
dec
pop
scas
outsb
in
rcrl
cmp
sub
out
mulb
pushf
lds
cwtl
push
cld
test
sbb
jl
insl
ficoms
clc
gs
mov
jae
and
ret
mov
xor
dec
es
test
lock
adc
jnp
adc
xchg
out
pusha
cwtl
js
repz
cmp
mov
sub
cmpl
mov
dec
cmpsb
dec
or
movsl
mov
cltd
sub
adc
push
add
push
sbbb
mov
sub
jb
jns
jne
inc
test
adc
xor
xor
sti
pop
cmp
mov
inc
add
jb
adc
aam
fmul
aad
daa
xchg
push
js
out
fldt
jle
incl
dec
mov
and
sti
mov
sarl
fmull
adc
mov
ss
sub
cmp
add
mov
mov
scas
mov
or
adc
dec
sti
lret
lock
sub
out
jg
cmpl
leave
adc
pushf
cli
sub
or
popl
into
fs
out
imulb
mov
add
mov
cmc
adc
xor
push
xor
jp
sub
xor
pop
mov
adc
pop
cmpsb
adc
sub
ret
test
xchg
jg
cmp
dec
repnz
or
cmp
test
cmp
adc
das
std
mov
roll
icebp
or
and
xor
push
dec
lock
sbb
cmp
add
data16
mov
jb
adc
sbb
test
cmc
jns
divb
jns
imul
push
ret
push
pop
outsl
sbb
cltd
fidivl
adc
clc
loop
imull
jge
and
xchg
das
and
lcall
out
stos
jmp
mov
and
aas
inc
xchg
mov
or
dec
sbb
xchg
inc
mov
pop
mov
insb
jecxz
lock
and
dec
dec
std
lret
xchg
push
add
cwtl
clc
outsl
or
mov
sahf
imulb
push
dec
sub
cmp
clc
in
jmp
pop
pop
cmp
mov
ret
ljmp
sub
xchg
dec
cmp
lahf
ds
notb
mov
lods
xchg
push
xchg
js
jg
icebp
les
and
inc
inc
mov
mov
jno
dec
push
sub
cwtl
xor
xor
xchg
js
cmp
dec
xchg
inc
xchg
int
and
pushf
das
cmp
pop
cmp
pop
xor
pop
sar
imull
jg
sbb
stc
mov
test
inc
inc
andl
xchg
jae
jg
ss
aas
movb
xchg
cmpb
jbe
inc
xlat
dec
das
xchg
mov
stos
enter
sub
xchg
rol
inc
xchg
jbe
mov
ss
imul
arpl
popa
in
movl
mov
mov
jp
pop
call
movsl
sbb
ds
ljmp
iret
and
jbe
add
and
cmp
js
clc
insb
mov
sti
jae
mov
mov
je
xchg
ret
cmp
pushf
pop
std
xor
mov
aam
adc
mov
pop
out
lods
push
pop
cld
mov
dec
jo
sub
scas
jnp
add
push
xchg
cmp
ja
adc
test
stos
cmp
jp
shll
ss
roll
leave
fsubrl
sub
popf
dec
mov
int
test
xchg
xchg
push
dec
and
test
lcall
ljmp
out
sbb
mov
and
insb
loop
in
or
adc
test
std
insl
pop
cmp
sub
xchg
out
clc
data16
jbe
mov
mov
popf
fs
mov
jge
jle
and
cmpsl
loope
movsl
shll
push
sub
mov
pop
ret
pusha
sub
fists
ds
push
fs
fadds
sbb
dec
pop
push
push
jbe
xchg
mov
in
cmp
std
pop
mov
arpl
add
int3
shrl
in
push
sbb
aaa
push
pop
jnp
leave
cmp
out
push
add
and
rcl
out
pop
push
xor
add
dec
mov
sbb
loope
adc
imul
push
xchg
fldpi
notl
sbb
add
jp
aas
movsb
cmp
xor
fcomps
lahf
mov
subl
adc
sub
out
sahf
dec
push
clc
mov
adcl
imul
test
xchg
in
mov
push
js
lcall
adc
pushf
ja
push
jnp
imul
cmpsl
sub
pop
subl
subb
fistl
add
add
divl
jae
dec
xchg
das
and
loopne
sub
in
or
pop
scas
jle
aaa
pop
ret
sbb
mov
and
mov
js
pushf
divb
loope
icebp
xor
sub
push
rolb
jno
pop
inc
dec
repz
push
in
inc
or
fbstp
addr16
cmpsl
aad
push
cmp
xchg
lock
das
les
pop
dec
mov
jg
adc
div
mov
in
nop
sub
jnp
inc
scas
movsl
pop
pop
cmp
pop
jb
push
dec
xchg
int
mov
add
sub
aaa
popf
xor
mov
push
out
cmpsb
or
push
ds
sub
mov
mov
insl
mov
popf
pop
adc
pusha
push
movsb
clc
mov
movsb
jo
jnp
arpl
inc
out
lods
mov
fdivl
test
sub
pop
shl
mov
adc
adc
pop
les
pushf
aam
dec
jmp
popa
addr16
sarl
adc
subb
js
adc
mov
push
cmpsb
mov
mov
loopne
fs
bound
lcall
flds
push
dec
sub
xchg
sbb
shrl
push
mov
mov
cwtl
or
mov
add
xor
mov
ja
mov
nop
mov
inc
in
mov
ds
fimull
jno
cmp
out
cmp
call
xchg
xlat
rclb
xchg
xor
mov
mov
mov
lea
dec
out
dec
jne
pop
std
xchg
pop
pusha
add
mov
add
pop
shll
ja
pop
pusha
bound
rol
adc
and
pusha
xchg
aaa
clc
inc
loop
out
cmp
xor
test
ret
mov
or
mov
jo
in
xchg
aaa
movsl
pop
in
add
aas
jne
dec
ror
pop
imul
dec
mov
call
ljmp
icebp
sbb
cmpsb
je
dec
xchg
lahf
insl
push
in
es
push
les
sub
cltd
scas
mov
mov
imul
sbb
setnp
mov
cli
int3
mov
cld
push
sub
and
lea
push
push
mov
repz
jp
mov
data16
shll
mov
mov
jne
push
sarb
into
jnp
jns
rorb
or
imul
repnz
and
or
pusha
mov
je
iret
or
adc
inc
inc
cmp
je
jmp
pop
dec
sub
cmovs
and
jg
in
scas
cmp
jge
jns
lcall
jg
mov
xor
lret
std
pop
mov
cmpsl
cmp
dec
mov
dec
clc
subl
xor
mov
daa
add
mov
rcll
adc
sub
bnd
mov
lcall
sub
pop
inc
cmp
loop
lahf
or
cld
inc
orl
or
push
adc
xor
pusha
sub
shrb
pop
xchg
adc
jnp
push
cltd
bt
jno
enter
jg
cwtl
adc
xchg
daa
mov
cmpsl
sbb
xchg
sbb
iret
jbe
jo
notl
xchg
cmp
pop
mov
out
or
bnd
imul
lods
mov
aas
sub
ss
mov
insb
rcrl
inc
mov
push
sub
push
dec
fsub
add
sub
push
shll
pushf
sbb
aam
stos
cmp
mov
icebp
mov
pop
mov
dec
sbb
shl
mov
mov
and
mov
ss
jmp
mov
push
cmc
mov
xor
mov
mov
aaa
jns
stos
and
aam
pop
je
adc
jo
jne
pop
lds
imul
dec
arpl
testl
loope
scas
stc
mov
inc
mov
dec
xchg
cmp
into
sbb
lods
gs
push
imul
and
inc
stc
lahf
jns
repnz
mov
push
mov
dec
hlt
xor
jp
sub
inc
xchg
and
push
pop
inc
lock
dec
mov
push
xchg
ret
adc
aaa
mov
repz
sub
mov
fsub
cmpsb
jp
mov
cmp
bound
push
ds
dec
and
mov
addb
pop
add
jbe
outsb
add
pop
cmp
or
mov
sbb
mov
sbb
mov
fimuls
scas
sbb
out
push
or
leave
xchg
out
dec
cmp
call
dec
dec
jecxz
aas
pop
jo
mov
out
pop
scas
fwait
sbbl
negl
cmp
and
je
pop
shl
ljmp
mov
inc
dec
ficoms
sub
push
cmp
fnstcw
push
pusha
xor
cmp
int
in
and
andb
js
int3
stos
xor
rorb
mov
fcmovu
sti
sbb
adc
inc
lea
xchg
fwait
jne
mov
je
and
push
out
bound
bnd
fsubl
xchg
pop
subl
out
shrb
push
dec
add
in
sub
shll
xchg
adc
dec
sbb
loopne
sub
mov
test
or
push
mov
sub
mov
test
cmp
nop
cs
sbb
sub
adc
inc
stos
jns
call
ss
or
test
dec
test
cmp
negl
test
sub
lahf
mov
xor
push
fs
loop
or
inc
sub
push
mov
orl
sub
les
insb
rcll
mov
ret
lret
in
xchg
xor
mov
jbe
cld
add
insl
aam
das
xchg
icebp
and
fwait
jge
sbb
push
push
cmc
into
pop
ret
loop
pop
pop
mov
call
loope
add
out
add
mov
and
jno
lcall
jmp
or
shlb
test
pop
mov
mov
jae
cmp
mov
ja
push
sti
repnz
loope
sbb
ror
mov
repz
xor
addb
icebp
dec
stos
mov
jbe
mov
mov
pop
les
int3
pop
xor
or
adc
insb
out
xchg
pusha
or
sbb
add
lds
adc
mov
iret
nop
mov
adc
pop
movsb
in
cltd
inc
xchg
xor
movsl
or
and
ret
scas
call
push
xor
jge
jne
js
mov
loopne
stos
dec
ja
jecxz
cmp
pop
inc
ret
test
int
pop
shlb
clc
xchg
xchg
pop
push
shll
movsl
in
xchg
in
mov
push
decl
add
mov
cmp
xlat
mov
mov
inc
add
in
push
pop
fwait
xor
nop
sbb
dec
imul
cmp
in
sbb
sbb
sub
and
outsl
rcrb
inc
in
mov
or
cli
test
stc
ljmp
sbb
pop
ret
out
js,pt
dec
data16
mov
lahf
ret
xchg
or
push
lock
inc
addr16
js
je
repnz
cltd
push
cmp
mov
jle
ficoms
movsl
adc
and
jp
mov
xor
js
adc
popf
dec
idivl
and
orl
stos
push
das
xchg
adc
fildll
call
addl
rcrl
adc
jb
mov
pop
je
mov
arpl
and
xlat
aas
xchg
or
jne
fwait
jne
neg
movsb
fcoms
push
pmulhw
out
and
out
cs
sbb
and
dec
push
fdivp
and
fdivrl
sbb
popa
sub
xchg
mov
dec
addb
cmpsb
adc
movsb
lcall
cwtl
pop
mov
gs
cmp
or
pop
mov
cmc
hlt
adc
cmp
xchg
out
cmp
mov
clc
mov
inc
int
sahf
enter
mov
or
jg
gs
sub
loop
mov
psraw
dec
std
sbb
stos
mov
insl
xchg
push
shll
cmpb
aad
jge
mov
mov
pop
cwtl
cs
mov
and
in
mov
or
and
mov
sub
push
lock
and
add
das
push
inc
sbb
stos
call
enter
cld
pop
xor
movsb
sbb
mov
es
pop
push
xchg
inc
bound
shrb
xchg
hlt
pushf
fimull
adc
dec
mov
arpl
and
push
mov
xchg
xor
and
adc
lea
stos
jge
data16
sahf
push
jmp
jg
dec
sbb
jnp
lods
mull
lret
sub
mov
push
sbb
mov
push
mov
fwait
in
pop
cmp
xor
rorl
jge
shl
xchg
sbb
faddl
movsb
int
inc
jmp
stos
xor
dec
sahf
rcrl
ret
into
push
hlt
hlt
add
in
add
movsl
les
jp
fildl
inc
or
mov
push
add
and
push
sbb
test
push
cmp
ret
cmpsb
pusha
daa
andl
adc
pop
add
cmpsl
scas
inc
fwait
pop
rcr
jne
jmp
mov
mov
test
out
fcmovb
xchg
imul
scas
xchg
scas
lock
fisttpll
xor
xchg
pop
and
jno
inc
jns
cmp
push
mov
dec
and
add
imul
and
mulb
pop
inc
and
adc
mov
mov
loopne
enter
push
test
mov
jbe
sub
sub
sub
sbb
push
fimull
movl
repz
mov
sub
jno
pop
sti
pop
push
mov
adc
gs
int
jae
cmp
call
daa
sub
aad
aad
cmp
popa
push
or
xor
push
xchg
xor
adc
mov
mov
jnp
aas
mov
insb
ss
fsubr
lret
test
lcall
pop
inc
and
mov
cwtl
js
in
cmpsb
xchg
les
repz
iret
pop
movsb
and
sbb
je
popf
clc
loope
cmp
or
jno
or
jno
and
jnp
mov
push
push
daa
mov
sti
fimuls
or
xlat
inc
dec
insb
xchg
dec
and
mov
movsb
inc
inc
cs
cwtl
cmp
dec
push
cmp
sti
cmc
imul
sub
popa
add
add
lods
inc
mov
add
fdivrl
xchg
and
out
push
mov
mov
daa
push
jo
mov
nop
or
sbb
and
lock
in
lods
inc
std
xchg
sbb
out
insb
mov
arpl
mov
scas
aaa
je
push
loop
adc
sub
ss
sub
aaa
stc
fisubl
ret
icebp
int
cs
xchg
in
push
push
movsl
scas
mov
xor
imul
push
movsl
lahf
sub
int
scas
lret
mov
mov
inc
je
push
aaa
lcall
push
cwtl
jmp
shrl
ja
popa
movsl
xchg
jns
cmp
lock
pop
xorl
jle
and
testb
cmp
or
aam
mov
lds
in
insb
push
aas
and
xchg
das
inc
xor
push
xor
rorb
jae
int3
in
adc
pop
add
add
sbb
scas
fiadds
popf
lods
dec
push
push
mov
dec
pop
dec
scas
or
cmp
sbb
sti
xchg
sub
into
mov
dec
stc
popl
scas
fs
sbb
icebp
and
jo
cmp
adc
mov
in
or
jge
fbld
mov
movb
out
clc
lods
push
movsl
mov
fnstenv
lret
test
xchg
inc
lret
jge
pop
pop
push
loope
xor
pop
movsl
pop
in
xor
insl
sbb
xor
push
shll
push
mov
roll
or
pop
loopne
inc
ret
loop
pop
ret
and
mov
cwtl
sbb
pop
je
clc
fildll
pop
xor
mov
test
stos
push
sub
or
inc
or
pop
repz
adc
sbb
mov
test
and
sti
ret
cmp
jmp
imul
cmpb
call
repnz
int3
sbb
add
mov
pop
cmp
cmp
add
mov
xchg
call
or
fwait
ret
jno
popa
sub
es
jo
imul
out
xlat
outsb
mov
jl
ljmp
jae
add
sub
pop
gs
insl
hlt
movsb
pop
or
or
and
add
lods
inc
dec
gs
aam
pop
lods
outsb
pop
arpl
leave
je
pop
add
mov
rorl
add
mov
sbb
cld
cld
cmp
mov
push
rorb
add
in
mov
mov
imul
dec
pop
fwait
ljmp
lock
xchg
lret
inc
pop
int
sarb
cld
addr16
adcb
add
gs
mov
leave
std
ljmp
movsb
pushf
sahf
addb
test
mov
les
aaa
cltd
xchg
xor
sub
inc
jge
lahf
inc
jbe
mov
fdivs
fstpt
mov
shlb
sub
ret
rorl
add
pop
ror
mov
xor
jmp
mov
stos
test
dec
push
sbb
mov
test
mov
xor
push
cmp
mov
cwtl
and
imul
fwait
pushf
lds
add
cltd
inc
add
inc
dec
adc
imul
push
xchg
andb
mov
sbb
push
inc
rorl
push
es
adc
dec
add
push
in
pop
jb
or
jmp
les
in
out
aaa
sbb
aaa
xchg
jno
iret
xchg
dec
inc
push
xor
dec
jg
popf
leave
jp
fistl
imul
pop
lcall
mov
in
testl
jnp
jge
shll
mov
pop
stos
rol
jns
and
jbe
lahf
testl
or
pusha
jns
jecxz
lea
sahf
cltd
stos
or
popa
in
cmp
add
mov
clc
pop
jl
inc
xchg
je
xor
cmpsb
pushf
addr16
sub
mov
cmpsl
sbb
js
shlb
pop
dec
adc
and
xlat
out
jmp
data16
xor
ja
push
call
mov
add
sub
mov
mov
pop
nop
adc
pop
clc
sti
xchg
sbb
adc
sar
fdivrl
cmp
cmpsb
dec
popa
in
jle
lds
aas
fcompl
jo
outsb
shlb
mov
stos
inc
jnp
ds
sub
lahf
in
xor
addl
adc
clc
jnp
lods
ljmp
xchg
push
jmp
mov
in
sahf
cmc
push
sbb
bound
and
adc
mov
enter
enter
movsl
daa
scas
pop
add
pop
arpl
push
mov
shl
and
addr16
repnz
cmp
scas
mov
sahf
test
push
into
xor
fistps
push
add
xchg
hlt
push
insb
mov
lods
inc
push
mov
mov
rcl
scas
pop
andl
adc
aas
dec
sub
loope
adc
in
mov
mov
mov
xchg
lds
xchg
mov
imul
jle
push
das
js
roll
stos
das
inc
iret
in
jmp
jp
add
iret
xchg
sti
mov
and
cmpsl
psubw
sbb
lret
inc
int
mov
jle
iret
jb
pusha
add
sti
push
popf
dec
or
dec
xchg
notb
insl
mov
push
pop
testl
jb
inc
repz
jmp
daa
push
movsl
mov
aad
mov
pop
out
mov
ficomps
mov
add
cwtl
sbb
arpl
fstpt
adc
clc
mov
idiv
push
mov
and
mov
xlat
and
cmp
insl
mov
es
mov
shlb
mov
mov
cld
and
mov
mov
scas
or
outsl
inc
pop
cmp
cld
cmp
aad
add
push
shll
mov
mov
gs
sbb
sub
pop
sub
int3
push
cmpsl
mov
pop
push
jmp
push
jmp
cmp
jge
adc
into
test
addl
jae
rcl
test
lods
data16
sti
ljmp
mov
cwtl
imul
pop
imul
int
daa
inc
es
ljmp
dec
mov
mov
sbbl
pop
add
movsl
test
sbb
push
mov
mov
mov
push
nop
push
int3
mov
push
popf
and
fs
loop
mov
popa
roll
push
mov
push
out
iret
mov
cmp
in
aaa
mov
nop
inc
lods
sti
sub
add
in
mov
mulps
or
pop
mov
fildll
xor
lret
or
jle
mov
xor
out
adc
movsl
mov
xchg
xchg
lea
jne
lret
push
clc
cld
pop
xor
cmp
xchg
shll
push
pop
mov
insl
arpl
mov
cmp
mov
sti
fwait
imul
push
ror
and
push
xchg
lahf
cmp
mov
inc
cmpsb
pop
in
pop
ljmp
pop
aaa
push
dec
gs
test
filds
xchg
inc
lret
enter
shll
lret
movl
push
inc
or
les
xchg
arpl
inc
sbbl
sti
es
push
inc
mov
sub
mov
cmpsl
jg
mov
cli
xor
pop
adc
adc
std
mov
mov
inc
inc
mov
jne
clc
xchg
daa
adc
jge
xchg
out
mov
jns
pop
pop
xor
xor
dec
rorl
lret
mov
lea
lock
fnstenv
or
int
push
out
icebp
lea
adc
enter
jnp
xor
test
push
ficoml
sub
xor
lea
popl
and
adc
into
and
fsubr
push
adc
inc
ja
adc
adc
push
mov
int
fmull
mov
lock
jle
popa
mov
push
push
test
sub
mov
lahf
cmp
sahf
or
sub
test
xchg
cs
or
adc
in
inc
add
mov
jmp
fdivrs
sub
aas
fdivl
sbb
lods
jge
adc
inc
int3
jae
cmc
sbb
scas
lcall
and
dec
inc
cmp
mov
adc
pop
mov
push
mov
mov
mov
sub
jno
pop
mov
push
clc
scas
aad
adc
flds
xchg
dec
test
pop
clc
outsb
or
jg
jne
pop
aad
xchg
jbe
test
inc
pop
push
ss
loop
hlt
lret
rorb
cwtl
into
in
jg
jbe
fisttps
pop
mov
and
and
xor
push
jmp
mov
and
in
sar
ljmp
js
add
dec
jl
mov
into
out
ss
cli
fcom
std
push
ds
mov
nop
je
int3
sbb
lock
js
mov
les
add
test
pop
push
xchg
inc
jmp
push
leave
icebp
loope
push
lret
pop
lods
cmp
mov
enter
sbb
lock
pop
xchg
iret
cmp
xor
cmp
pushw
xchg
repz
loop
in
adc
loopne
dec
nop
xchg
cmp
cld
xor
ja
lcall
call
pop
fidivrl
xchg
and
jge
sbb
cmp
popf
dec
cld
std
mov
xchg
lods
jle
sahf
cld
jns
jmp
shlb
outsl
movsb
gs
sub
mov
sbb
mov
jecxz
das
pop
xchg
dec
cmp
test
cs
push
je
dec
addr16
aam
fsubrp
bound
xor
xchg
loop
sub
rcr
int
mov
pusha
into
orb
shll
jmp
mov
adc
xchg
lret
dec
add
mov
loopne
imul
sbb
gs
cmp
lock
jnp
lds
add
mov
leave
push
lea
enter
pop
shl
stc
scas
and
mov
inc
xchg
pop
inc
xchg
push
or
repz
mov
pop
push
mov
push
inc
push
jne
mov
mov
cmp
cmpsl
mov
xlat
adc
jge
push
lret
jnp
push
aad
xorb
mov
add
pushf
stos
ja
mov
pop
mov
pop
inc
sub
add
lock
es
loope
pop
jmp
inc
dec
xlat
mov
call
test
fisubs
mov
std
fistps
icebp
ss
test
and
fcmovb
lods
mov
jmp
add
push
call
xchg
pop
pop
shll
dec
clc
daa
aaa
dec
sbb
test
sbb
adc
xchg
mulb
imul
mov
sub
pusha
je
push
or
sub
test
push
mov
add
lea
xchg
lods
mov
cmp
jg
loopne
jnp
xor
pop
push
fstps
stos
pop
repz
shll
xor
pop
aam
leave
pop
insb
jge
or
inc
jns
xchg
mov
lock
fstl
xor
dec
dec
cmp
stc
aaa
cmp
test
fwait
dec
fbstp
jnp
bound
pushf
mov
inc
loope
stos
mov
xchg
or
repnz
mov
es
outsb
gs
cmp
call
xor
addr16
scas
xlat
xchg
fwait
hlt
sbb
clc
xchg
fisubs
ret
sub
lea
pushf
jecxz
insb
aad
pop
je
push
clc
adc
sub
fisttpl
cwtl
and
stos
xor
in
xchg
dec
lea
add
ss
jle
out
mov
jp
scas
cmp
xchg
out
leave
push
push
loope
pop
stos
mov
and
test
pop
cli
js
idivl
and
adc
xchg
dec
insb
roll
sbb
add
xchg
test
xchg
mov
imul
adc
inc
rolb
push
inc
sbb
or
mov
arpl
xor
loopne
out
xchg
andb
pop
idivb
rcrl
sub
jb
jg
sbb
mov
sub
mov
jns
sbb
test
pop
sarb
mov
cmpsl
in
and
mov
cmp
bswap
psrlq
rolb
ss
cmp
xchg
jo
fld
push
or
mov
lret
cmp
mov
add
xor
js
add
jo
pop
cli
dec
leave
push
lea
cmpsb
and
lahf
repnz
jo
push
jno
aaa
dec
xor
outsl
stc
adc
sbb
add
cmpsb
inc
and
inc
fbstp
stos
dec
loop
push
inc
push
xor
pop
int3
cmp
das
js
insb
aaa
test
orb
xor
xchg
outsb
insb
loopne
sti
in
insl
in
jl
lock
testb
sub
and
fistpll
inc
xchg
stc
fdivrl
lcall
mov
ficomps
in
mov
xor
adc
out
xchg
stos
lahf
addr16
jmp
dec
xor
push
mov
or
inc
and
inc
push
and
in
and
add
sbb
scas
fwait
mov
or
lret
nop
rcl
sarl
xlat
in
inc
inc
aaa
pop
ds
and
addr16
test
enter
dec
cld
jnp
sbbb
mov
mov
jne
mov
loopne
add
and
jmp
mov
push
push
add
rcrl
aaa
mov
or
dec
cmp
jns
jo
lds
pop
pop
ss
psubq
add
pop
cltd
and
fwait
cmpsb
mov
fisubrs
fdivr
sbb
inc
movsl
clc
pop
xchg
sarl
or
movq
lahf
jo
addb
outsb
roll
push
xor
mov
outsb
not
popa
sbb
cwtl
mov
cmp
rorb
pop
jno
das
dec
enter
data16
jne
sub
or
xchg
addr16
and
jp
je
inc
aad
add
push
jb
and
adc
fsubrl
int3
mov
add
push
jbe
adc
jnp
mov
test
mov
test
sub
adc
sbb
adc
jbe
mov
fsubrs
jl
mov
xchg
cmp
outsb
out
add
add
sti
insb
lret
push
std
inc
xchg
loop
into
push
cs
inc
xlat
xchg
ret
or
cltd
fcoms
add
js
cli
sub
imul
es
dec
xor
jo
mov
adc
test
push
xchg
es
mov
fbstp
jno
cmp
aam
pop
dec
and
xchg
mov
xor
xchg
push
mov
in
jno
enter
sahf
jno
test
in
add
and
insl
pop
in
hlt
mov
adc
jns
cld
or
xor
inc
and
lods
push
std
cmp
shll
xchg
test
jne
xchg
movsl
inc
in
bound
cmp
push
pusha
push
scas
pop
xor
in
test
in
inc
jg
jne
fnstenv
xchg
lods
fisubl
adc
in
sub
sub
lret
push
mov
test
jne
pop
and
jo
pop
push
movsl
pop
xor
pop
outsb
ror
test
add
pop
loopne
ss
fucomp
xchg
jp
mov
es
sub
pop
cmp
int
cmpsl
cmp
loope
push
jo
sub
xor
les
cli
outsb
ret
add
sbb
ret
ficomps
sbb
cmp
call
mov
call
subb
xchg
sar
gs
add
call
add
xchg
mov
xor
call
int
cmp
aad
fs
fcoml
xchg
loope
jb
test
lods
push
imul
in
popa
shll
lret
cmp
sbb
pushf
repnz
rorl
stos
nop
cwtl
add
pop
jge
inc
les
fs
jno
xchg
cmp
push
jle
repz
pop
push
loope
pusha
cmp
mov
ljmp
sbb
mov
pop
fwait
cld
jno
and
mov
mov
mov
ret
das
push
adc
mov
or
dec
out
inc
jne
add
sbb
adc
ret
enter
iret
fldcw
jbe
shr
out
stos
jmp
inc
push
cli
mov
fisubs
sbb
add
adc
mov
sub
notl
pop
sbb
les
adc
fcos
jns
iret
mulb
cmp
inc
sub
gs
or
mov
ret
cs
cmp
xor
leave
ljmp
jge
popa
imul
insb
push
outsb
hlt
push
daa
sbbb
loop
rorb
pop
popf
cmpsl
add
mov
mov
bnd
shl
lods
testl
loop
ljmp
les
lds
mov
mov
pop
xchg
mov
mov
dec
stos
or
in
pop
dec
cmpsl
int3
mov
xor
popf
push
cs
mov
nop
cltd
cmp
lahf
jecxz
jmp
insb
sub
repz
clc
jge
ds
inc
test
outsl
imul
fwait
dec
cli
mov
xchg
nop
dec
popa
or
adc
clc
iret
cld
jo
out
out
push
cmpsl
cld
iret
sub
adc
xor
push
outsl
push
stos
add
js
cmp
add
jge
cmpsb
sub
push
sbb
scas
shll
jno
adc
lret
cmc
das
mov
cmpsl
cmp
dec
insb
xor
gs
daa
cmp
popf
idivb
push
cmp
test
cmc
popl
orb
push
xchg
push
jae
push
mov
or
rclb
idivl
sbb
push
or
adc
in
lea
stos
pop
sti
jne
out
outsb
dec
stos
mov
adc
je
or
das
loopne
sub
push
shlb
push
out
clc
in
xor
lea
inc
xor
movsb
push
or
test
jle
out
jle
mov
push
pop
fbstp
or
push
cmp
push
leave
mov
rol
loopne
rcrb
loop
test
dec
inc
sub
xchg
pop
mov
cmp
aam
cwtl
cld
and
pop
in
popa
pop
fwait
int
enter
nop
dec
jecxz
in
cmp
inc
mov
hlt
sahf
daa
sbb
lret
das
jne
or
enter
sahf
out
stc
incl
xchg
mov
jae
sti
sbb
insl
adc
ret
adc
ficompl
das
scas
adc
out
fldenv
gs
mov
jmp
mov
mov
test
fwait
lock
icebp
sub
mov
imul
cmp
push
mov
push
popf
loope
ja
mov
jno
je
icebp
sub
adc
pop
mov
inc
jne
inc
movsb
jne
pop
divb
scas
pop
add
mov
cmp
jb
call
shlb
sarb
aad
shr
ljmp
cmpsb
mov
cld
bound
pop
gs
jne
test
mov
out
ljmp
mov
cmc
rcll
and
cmp
fdivr
sbb
sbb
imul
leave
loope
mov
mov
mov
ret
or
dec
jl
sti
mov
push
sti
cmp
inc
pop
or
jl
stos
imul
sub
xchg
push
xor
sbb
mov
adc
and
sub
inc
lcall
int
adc
loop
cmp
jne
cmp
adc
inc
jb
add
push
dec
or
jno
jne
pop
mov
pop
pop
jno
arpl
iret
cltd
adc
shlb
roll
test
arpl
clc
shl
aaa
add
cmp
inc
pop
cmp
xor
xchg
shrl
out
xchg
dec
cmp
popa
mov
xor
es
jo
xchg
lods
insb
rcrb
xor
add
inc
pusha
sahf
adc
fwait
popl
xor
je
loop
ljmp
bound
out
je
incl
insl
rolb
out
and
xchg
sarl
sub
cmpb
ds
jns
adc
insl
mov
adcl
jb
add
fdivr
mov
addr16
sbb
jl
sbb
and
cmp
jmp
sbb
push
leavew
dec
fwait
loope
jmp
int
and
sbb
leave
push
test
cmp
cmp
inc
dec
push
push
insb
inc
inc
dec
xor
mov
insb
mov
cmpsb
in
ss
test
fmuls
ja
jae
dec
testl
out
ss
and
in
pop
mov
jbe
arpl
aas
mov
add
cltd
jo
jbe
out
push
xchg
xor
xchg
xchg
push
xchg
outsb
cmp
sti
imul
mov
cs
aaa
jge
jge
xchg
inc
shr
xchg
movsb
loop
jb
sbb
test
movntq
out
jno
push
or
shrb
xchg
inc
inc
cmc
test
cmpsb
mov
fcoms
js
mov
cli
jo
and
fstps
icebp
sub
xchg
mov
dec
adc
pop
addr16
ror
and
fsubl
mov
shlb
push
psubq
insb
fisubrs
mov
or
pop
add
jno
push
fsts
pop
xchg
inc
cmp
test
imulb
adc
test
or
or
mov
adc
in
xor
adc
jl
dec
ja
mov
jp
add
pop
les
mov
mov
sub
test
inc
aas
popa
mov
int3
call
dec
pop
mov
testl
inc
cmp
jne
jmp
mov
dec
cmpsb
int
inc
inc
cld
and
sbb
std
icebp
pop
inc
or
add
in
mov
ljmp
inc
dec
push
cmc
xor
push
mov
inc
and
sub
fisttpl
mov
and
insl
mov
fwait
rcll
in
icebp
or
sbb
dec
and
jg
int
or
jp
pusha
or
roll
jo
xchg
jnp
jo
into
or
fstpt
mov
icebp
das
out
add
lock
xor
mov
pop
sbbl
ret
pop
data16
and
dec
movsl
and
jno
mov
pop
jle
dec
outsl
cmpsl
sbb
sbb
lods
xor
jns
adc
rclb
mov
iret
inc
sbb
lds
aam
sahf
jo
adc
jg
and
fs
mov
mov
test
dec
outsl
and
jne
dec
test
and
xchg
pusha
mov
inc
xor
ljmp
ret
mov
jne
jp
fstp
add
incl
stos
in
mov
and
xor
sub
pusha
add
xchg
aas
insb
mov
scas
enter
ret
lds
add
dec
xor
xor
pop
and
test
lret
sbb
adc
das
mov
xchg
dec
repz
cmp
arpl
mov
and
xchg
bound
mov
adc
enter
shrl
lahf
mov
sub
lahf
cmp
mov
jmp
std
xchg
adc
loopne
addr16
inc
pop
lods
adc
cli
movsb
push
mov
scas
jns
aas
outsl
cwtl
xor
mov
out
fidivl
add
push
int3
inc
lcall
xchg
out
jmp
out
xchg
in
lahf
cmpsb
popa
ret
pop
dec
int3
out
mov
cli
cwtl
das
add
jl
sbbb
gs
adc
inc
and
xor
fwait
push
pushf
mov
sbb
cmc
xor
cmpsl
fs
rorb
dec
jne
sub
jnp
in
jmp
mov
test
rcrb
out
cld
inc
mull
add
lcall
lret
adc
scas
fdivrl
mov
jo
xor
cwtl
icebp
nop
stc
shr
add
out
or
shr
push
adc
adc
fucomi
jecxz
mov
in
jno
adc
aaa
xorb
adc
dec
jmp
or
aad
fmul
ret
test
sbb
leave
jnp
pop
rorl
lret
xchg
xchg
sti
push
mov
xor
xor
mov
pop
lods
lea
aam
nop
scas
outsb
je
cli
and
mov
sub
out
mov
out
xor
sar
ja
pop
push
jnp
dec
push
inc
lods
outsb
dec
dec
pop
stc
mov
mov
inc
rclb
js
cmp
lds
or
cltd
mov
xchg
enter
push
fs
sbb
xor
xor
sub
test
int
popa
aam
add
xchg
stc
dec
jle
sbb
mov
popa
lods
adc
ss
mov
dec
out
fmulp
mov
inc
adc
jmp
add
or
fwait
enter
adc
iret
loope
das
nop
ss
icebp
fists
ds
sbb
push
dec
inc
dec
lret
es
sbb
in
data16
and
mov
jne
fadd
jnp
inc
cmp
jb
mov
cmp
test
lret
push
mov
aam
or
pop
popf
in
add
stc
pop
jge
shlb
shr
pop
call
mov
jl
aad
fs
movsb
and
in
sbb
sub
push
lret
orl
push
pop
pushf
in
rcr
pop
addr16
nop
jg
sbbl
xor
push
loopne
cmp
and
adc
add
inc
fiadds
cmp
mov
pop
adc
andb
push
int
mov
jno
dec
fidivrl
mov
dec
es
mov
aad
testl
aam
xor
bound
dec
dec
push
inc
into
lds
pop
lret
out
imul
adc
jmp
cmc
dec
stos
in
out
cwtl
cs
push
mov
in
sub
nop
or
les
and
adc
loope
push
add
or
leave
mov
sub
es
lcall
xor
cmp
repnz
or
push
insl
call
xor
add
hlt
nop
pop
jns
adc
xlat
in
mov
push
mov
std
sub
movsb
repnz
mov
shr
aas
jecxz
push
and
fisttpll
rep
stc
jp
in
inc
and
call
fdivs
mov
sub
jae
shll
jnp
in
adc
int
ret
shll
cmc
ds
jo
push
rcll
aaa
push
inc
inc
arpl
rolb
adc
aaa
ja
add
xchg
xchg
cmpsl
add
addr16
xchg
rcl
push
loope
push
push
jg
jp
arpl
cwtl
ds
mov
lods
adc
addr16
mov
sub
out
sub
ret
inc
ret
push
loope
push
xchg
mov
jg
jg
mov
out
xor
add
imul
cmp
xchg
sbb
dec
cltd
and
lods
cmp
aam
dec
cmp
mov
mov
inc
jp
shll
scas
xor
out
sti
movsb
dec
leave
push
xchg
mov
or
dec
mov
dec
jmp
sti
xchg
jge
add
addr16
mov
sub
test
sub
xchg
mov
aam
sahf
mov
test
sub
test
or
push
pop
mov
lahf
lcall
push
xor
mulb
js
rcrb
mov
and
xchg
sbb
stc
push
mov
xor
mov
aaa
js
pop
push
lods
xchg
cmc
aad
insb
sbb
inc
sbb
movsl
xor
cmp
shrl
xchg
ret
mov
jle
sbb
cs
pop
popf
fnstcw
cwtl
adcb
cmp
outsl
cli
dec
cmp
mov
mov
xor
scas
dec
cmp
add
lcall
jp
push
mov
idivl
popf
push
push
adc
movsl
lods
mov
jge
test
push
or
inc
ljmp
mov
mov
dec
cmp
sbb
notb
push
mov
sbb
mov
sbb
imul
sbb
dec
mov
sub
cmp
dec
mov
aaa
sahf
movsb
and
adc
add
in
imul
mov
cmpsb
inc
mov
adcl
xchg
sub
mov
inc
cmp
sub
fiaddl
cmp
int3
lret
ja
lahf
in
std
aam
push
mov
xor
jecxz
pop
js
push
imull
adc
pushf
pop
jle
sbb
xchg
jmp
cmpsb
aam
jnp
inc
mov
testl
lea
je
sub
loopne
aaa
nop
sub
es
xor
dec
mov
lods
push
push
pop
inc
pop
sbb
or
and
aam
inc
cmpsl
add
je
popf
insb
dec
pop
lcall
ljmp
cli
lods
int
cmp
push
test
mov
lcall
popf
cld
jp
enter
lods
in
stos
mov
arpl
fnsave
sub
mov
or
dec
cld
orb
cld
push
insl
jbe,pn
jno
pop
sub
lods
xor
sbb
addr16
jne
cltd
movsb
icebp
ret
insl
push
outsb
movsb
add
shlb
lods
sbb
dec
scas
cltd
xchg
aad
call
inc
pusha
loopne
lcall
pop
mov
outsb
and
sbb
push
pop
lods
insb
or
dec
insb
sti
pop
outsb
call
and
dec
xchg
dec
dec
and
mov
out
dec
or
adc
std
in
dec
or
mov
jmp
push
xor
cmp
or
cs
cmp
repz
testb
ljmp
lods
popf
dec
sub
dec
imul
bound
les
test
sarb
es
clc
sub
mov
lods
das
mov
xchg
mov
mov
mov
jns
fildl
outsl
xor
in
inc
daa
mul
test
mov
aad
sahf
in
ds
leave
bnd
cs
add
xchg
xchg
rorb
push
push
mov
jbe
sbb
mov
adc
mov
sbb
cmpsl
push
icebp
test
mov
std
jnp
in
mov
addl
sbb
popf
cmp
fisttps
or
xchg
out
popa
sbb
jns
leave
sub
pop
addr16
jl
mov
dec
sub
fs
mov
mov
xchg
push
fsubr
jns
mov
dec
or
jl
rol
movsl
cmp
pop
movsl
testb
fdiv
lcall
xor
lock
xor
mov
xchg
inc
out
aad
data16
sahf
and
pop
mov
orb
fimuls
jnp
jo
or
push
sbb
mov
cld
jnp
outsl
iret
aas
rorb
clc
xchg
jb
xor
add
pop
xchg
add
push
js
mov
call
adc
pop
mov
push
mov
mov
add
adc
es
in
icebp
and
sub
cmpb
and
pop
cmpsb
pop
pop
xor
mov
xchg
inc
mov
dec
test
mov
mov
fbstp
cld
sbb
and
sub
mov
and
out
stos
fcompl
dec
jb
sub
xchg
je
outsl
push
vrsqrtps
cs
or
add
mov
outsb
ja
push
icebp
insl
into
sub
add
mov
mulb
adc
mov
test
xor
push
out
jg
inc
sbb
mov
out
mov
addb
adc
xchg
aam
into
cltd
sarl
mov
push
enter
std
push
lret
das
add
sub
jmp
aam
mov
hlt
pop
and
pop
mov
aam
push
push
shll
lret
repnz
inc
imul
into
mov
scas
push
out
cmp
jb
in
iret
leave
jb
mov
repnz
jnp
cmp
out
lret
rcrl
jmp
inc
sbb
xchg
das
sbb
out
sbb
test
in
outsb
daa
arpl
fildll
inc
jmp
shrl
in
xor
mov
lahf
ds
sbb
ret
popf
subps
cmp
lock
mov
ret
out
add
ljmp
inc
lods
insl
or
cltd
xor
mov
ret
insb
bound
loop
cwtl
cmp
xchg
cmp
shlb
sbb
push
inc
mov
sub
adc
aad
cmp
in
sub
inc
add
outsb
cmpsb
ret
jmp
out
xchg
xlat
fcoml
push
lahf
pusha
pop
push
popa
fldcw
jmp
mov
adc
inc
add
sti
push
popa
fstpt
in
ror
mov
js
cmp
mov
mov
jmp
jp
pop
js
mov
test
xchg
mov
push
int3
shlb
ficoml
shl
ret
shll
movsl
inc
popf
push
ja
test
ret
push
mov
jle
push
jle
and
add
inc
pop
decb
jmp
into
xor
pushf
push
jp
push
test
mov
jl
mov
lret
pop
or
cs
mov
fisttpll
mov
cmp
dec
sti
ret
lock
add
pop
sbb
iret
inc
data16
cmp
sbb
mov
shrb
mov
cmp
sub
loop
pop
lock
fs
jge
dec
pop
stc
sub
xchg
dec
mov
dec
pop
xchg
add
flds
mov
test
adc
ljmp
popf
add
sbb
loop
movsb
pushf
outsb
dec
cltd
push
icebp
pop
add
sub
inc
push
aas
jecxz
pop
xor
hlt
push
pop
jb
pop
xchg
dec
push
roll
fwait
dec
sbb
jb
inc
rclb
js
xor
adc
sub
xchg
push
jecxz
leave
dec
mov
leave
lea
lret
xor
dec
int3
stos
push
mov
shl
jns
jns
in
testl
in
add
dec
insb
mov
push
stos
pop
pop
rcrl
enter
shll
ds
mov
icebp
fwait
mov
shr
jbe,pt
and
push
out
lahf
outsb
ja
fnstcw
xor
imul
jge
cltd
inc
int3
in
cmc
xchg
dec
dec
shrb
jo
ficoml
mov
mov
mov
les
inc
xchg
or
inc
xchg
sub
test
jns
enter
pop
out
call
cs
sbb
mov
test
jle
icebp
nop
imul
jbe
das
adc
scas
cmp
inc
cmp
xchg
test
pop
cmp
push
cmpsl
push
arpl
jecxz
int3
mov
out
push
shrb
mov
mov
iret
ja
lcall
push
push
sub
test
sub
ljmp
jo
sub
jp
out
push
sub
sti
dec
pop
add
mov
mov
push
cmpsl
jp
add
xchg
jp
mov
popf
cmc
or
vrcpss
sahf
stos
sbb
mov
call
xor
out
pop
mov
loop
es
xchg
sbb
in
jne
jb
sahf
adcb
pop
into
ljmp
cmp
dec
fdivrp
inc
adc
push
pop
shll
lcallw
cmp
mov
sub
cmp
pop
add
jns
jmp
lret
add
dec
rclb
jg
loop
dec
je
iret
mov
or
mov
xchg
movsb
call
inc
subb
jecxz
and
pop
mov
cmp
xchg
xchg
mov
add
xor
or
andl
sub
xchg
xor
inc
test
mov
jnp
inc
fldl
fldcw
add
outsl
fmuls
xchg
pop
xor
pop
xchg
enter
and
roll
lcall
call
xlat
call
add
cli
lret
sarb
xor
test
lock
push
shrb
xor
xor
jecxz
push
pop
ret
std
jnp
jns
mov
sti
je
lods
sub
jnp
jb
aas
bound
pop
addr16
add
int
sub
lret
push
cmp
mov
popl
xlat
stc
jbe
imul
scas
mov
xor
mov
xchg
xchg
dec
sub
dec
pop
push
mov
dec
jno
and
cwtl
mov
pop
fidivs
mov
cs
push
cli
rcrl
pushf
cli
push
test
test
stos
jbe
jp
push
repnz
xor
and
cmpsl
lahf
pushl
xchg
jecxz
decl
add
clc
sub
push
or
mov
push
ss
mov
out
clc
loopne
test
push
ret
sub
in
mov
inc
cmp
sub
add
xor
sbb
das
pop
leave
xchg
pop
xchg
adc
addr16
xchg
arpl
sbb
jnp
push
pop
jbe
mov
adcl
icebp
std
add
sub
sbb
add
cmpsb
scas
sbb
dec
or
loopne
add
cmc
dec
sbb
or
jbe
mov
out
cmp
xchg
test
or
xchg
ds
fmull
inc
ds
outsl
pusha
std
jo
lods
sbb
jle,pn
rcrb
xchg
sarl
notb
jecxz
sbb
int
sub
adc
push
nop
rcrl
or
mov
jecxz
mov
xchg
sub
cmp
movsl
clc
mov
jle
mov
cmpxchg
sbb
addr16
sub
out
cmp
ret
cmp
push
or
out
mov
pop
in
lds
int3
inc
adc
fwait
ret
mov
ljmp
mov
pusha
pusha
shr
call
ja
aad
mov
lea
mov
mov
fsub
insb
ss
pop
bound
dec
cmp
ja
pop
jg
sub
pop
cwtl
cld
cmp
lds
inc
ljmp
mov
in
xchg
jbe
cmp
outsl
leave
cmp
out
lcallw
xor
xchg
sbb
dec
push
shl
mov
dec
mov
dec
lods
and
adc
or
sbb
mov
icebp
movsb
sbb
inc
daa
or
and
adc
rcrl
ljmp
sub
je
jecxz
cwtl
in
stos
jmp
sub
cli
outsb
sub
mov
cmp
inc
push
ret
adc
xchg
shll
incb
stos
or
xor
out
cmpl
xchg
das
mov
neg
sub
xchg
shrl
xchg
adc
jno
sbb
or
dec
out
sub
mov
pop
lret
jae
rcrb
xlat
push
jle
mov
mov
icebp
and
and
cmc
sub
cmc
gs
aad
sub
mov
test
and
cmp
insl
jno
push
inc
jl
and
jbe
pminub
stos
dec
sarb
sti
jecxz
lods
mov
call
mov
mov
dec
pop
clc
sarl
and
add
hlt
mov
enter
scas
imul
rcll
lret
push
shrl
sbb
mov
jg
addr16
push
push
xor
inc
out
jno
sbb
lret
filds
imul
xor
xor
pushl
inc
push
and
sar
push
jmp
jbe,pt
push
push
stos
js
aaa
cmp
cwtl
sub
cli
ficoml
and
add
pop
mov
dec
out
test
stc
xor
fisubl
or
daa
and
xchg
xor
push
andl
inc
xor
mov
lret
adc
mov
jge
test
ret
jo
jp
push
arpl
xchg
mov
ds
push
sub
mov
mov
lea
push
std
scas
inc
jbe
add
xor
jp
or
ret
lods
cmp
mov
sub
pop
xchg
arpl
inc
xchg
iret
scas
es
pop
xor
sub
mov
bswap
in
fiaddl
and
incl
mov
sub
adc
pop
push
int3
repz
mov
mov
cmp
dec
inc
and
or
push
data16
sbb
xor
cmp
xor
loop
clc
sub
lds
sbb
ljmp
fisubs
or
pop
xor
shlb
xor
mov
lea
repnz
mov
movsl
push
cmp
adc
aas
add
dec
nop
imul
mov
test
or
or
rol
movsb
pop
xor
outsl
jmp
ret
lret
pop
mov
push
shlb
sub
clc
mov
jg
rolb
out
loope
sahf
rol
lahf
mov
cld
sbb
add
push
adc
pop
xchg
cmp
lods
mov
push
inc
shrb
jge
or
pop
int
push
mov
sbb
push
and
jmp
mov
mov
push
mov
inc
fadd
sti
sbb
loope
cmpsl
or
adcl
dec
dec
dec
es
ss
xlat
mov
dec
cmp
jbe
mov
hlt
lcall
in
mov
loop
jecxz
out
insl
lock
or
jl
push
das
cmpsb
repz
imul
mov
pop
cmc
cmc
cs
push
arpl
lahf
jge
sbb
mov
xchg
in
test
js
popf
stos
scas
pop
mov
mov
outsl
repz
jl
sti
mov
dec
xor
test
cmpsb
cmp
out
rcr
popf
xrelease
leave
outsb
cli
push
dec
nop
xor
cmp
in
andb
cs
and
dec
ror
xchg
adc
mov
inc
aas
mov
imul
jg
int3
popa
inc
mov
mulb
andl
or
mov
xchg
mov
mov
mov
js
xchg
imul
push
mov
pop
xchg
lock
xor
ja
add
mov
aad
inc
inc
inc
jns
stos
es
sbb
push
cmpsl
cltd
mov
mov
cmp
jp
fcompl
lods
cld
jb
movsl
cmp
stc
pop
arpl
mov
pop
and
andb
test
aad
push
out
insb
cwtl
adcl
sti
adc
repz
adc
adc
addr16
sub
addb
add
dec
xor
fwait
aad
idivb
cltd
dec
mov
sahf
inc
iret
sbb
cmp
pusha
fs
sbb
pop
sub
dec
add
pop
cs
sarl
pop
dec
push
dec
or
or
push
jmp
pop
push
test
add
xchg
pop
mov
lock
lret
fstpt
pop
inc
lods
inc
jbe
jo
xor
push
inc
cmp
adc
popf
ja
ds
and
push
aas
ret
xor
cld
out
sbb
fisubrs
mov
jp
test
lds
ret
ss
lock
xchg
lea
dec
cmpsl
dec
fldt
mov
mov
frstor
jns
sbb
add
push
mov
mov
repz
inc
add
sbb
cltd
cmp
fs
lds
and
in
xor
jno
out
dec
pop
mov
daa
inc
icebp
pop
adc
fbstp
lea
xor
and
inc
or
cmp
fsubrs
cmc
or
jno
jle
std
jg
mov
call
push
inc
stos
sub
jmp
pushf
mov
mov
call
mov
push
lcall
out
loop
sbb
and
dec
push
mov
push
lods
shlb
cmp
addb
mov
mov
cmpsl
xchg
xorl
mov
dec
mov
mov
int
dec
pop
mov
pop
mov
iret
std
and
icebp
repz
dec
subl
cmpsb
xchg
dec
out
rorb
pop
add
push
jmp
dec
fildl
imul
hlt
inc
and
movsb
shrb
push
jmp
jmp
dec
jl
test
addr16
mov
in
pop
outsb
les
xor
stos
sbb
fwait
in
push
mov
jns
mov
outsb
push
ja
xchg
ret
fxch
add
mov
jle
stos
fistpl
sahf
jo
lds
jg
mov
push
dec
popf
adc
sbb
pop
repnz
dec
into
lret
ret
fbld
lock
inc
push
rclb
xchg
repz
pop
stos
and
xchg
xor
icebp
rol
repz
dec
or
push
xor
fldcw
xchg
xchg
cmpsl
xchg
or
lahf
push
in
pop
push
add
mov
cmp
popa
jae
pop
cmp
and
addr16
xchg
popf
mov
lds
movsb
int
sti
rcl
clc
lcall
mov
repnz
jno
test
cmp
mov
out
inc
dec
pop
mov
ljmp
ss
add
into
dec
jl
jne
cmp
fcmovnu
pop
jae
in
std
push
xor
adc
clc
inc
imul
out
sub
mov
adc
ret
fimuls
insl
ja
aas
adc
pop
aam
testl
pop
mov
sub
jns
jnp
int3
popf
xor
stc
push
fdivs
cli
jb
mov
cmpsl
xor
sbb
adc
push
cld
cmp
ja
inc
test
test
xchg
jbe
jp
sbb
mov
sahf
jns
shl
add
into
js
stc
adc
push
stc
aad
in
fdivrl
lahf
cmp
lods
mov
dec
xor
test
rolb
call
push
pop
je
add
push
or
insb
adc
xchg
fcompl
mov
jge
mov
sbb
cli
rolb
daa
jmp
push
insb
mov
cmp
add
in
jne
xchg
int
pusha
insl
inc
pop
sub
dec
shll
mov
stc
xor
fmul
ror
aad
xchg
arpl
or
in
imul
and
jno
lods
scas
fmuls
loopne
cltd
lret
pop
lcall
push
inc
or
inc
aad
add
lret
lret
rcrb
mov
jb
js
or
push
lcall
pop
pop
sahf
push
adc
outsl
sub
mov
pop
mov
std
push
mov
rclb
mov
jbe
int3
js
adc
outsb
jl
mov
lcall
sarb
push
and
and
fadds
icebp
in
cld
aas
cmc
test
movsw
pop
inc
mov
aas
push
sub
leave
sub
insb
insl
loope
cmp
in
pop
sbb
push
lcall
xchg
sub
arpl
xor
les
outsb
xor
add
repnz
pop
sbb
xor
insl
adc
stos
push
ss
xor
xchg
mov
jp
cmpsl
lahf
xor
out
or
out
cmp
jne
out
dec
xchg
xchg
sbb
pop
jo
aam
inc
push
pop
cld
lds
in
pop
fimuls
arpl
xchg
mov
and
xchg
stos
js
or
inc
cltd
lret
push
aas
pusha
loope
arpl
dec
stos
or
mov
fwait
mov
pop
mov
dec
mov
call
pop
inc
into
addr16
in
mov
cmp
pop
and
outsl
jge
inc
push
xchg
inc
lods
sub
fsubrs
js
sbb
fdivl
in
pop
arpl
push
mov
aad
pushf
rorb
loopne
repz
ja
sbb
icebp
adc
sbb
fs
outsl
push
imul
jne
inc
mov
daa
cmc
lods
fs
pushf
outsl
imul
movsl
ds
out
sub
aas
sbb
in
insl
add
adc
insl
popa
add
dec
iret
loopne
shrl
dec
mov
mov
dec
pushl
data16
roll
outsb
fwait
out
mov
inc
cmp
mov
lret
push
adc
mov
push
push
mov
sbb
int3
movsl
ja
inc
and
testl
data16
jns
push
xor
popf
mov
jg
mov
imul
jl
insl
mov
leave
nop
hlt
mov
pop
mov
mov
xor
fldcw
push
sahf
ljmp
inc
cltd
dec
leave
aas
mov
lret
mov
call
std
leave
int
dec
fimull
out
pop
add
les
push
cmp
mov
popa
mov
cli
mov
and
mov
pushf
sbb
xchg
pop
adc
xchg
fdivrp
outsb
jo
xor
pop
sbb
bound
push
and
mov
cltd
scas
push
arpl
mov
bound
neg
scas
mov
add
jge
adc
jb
jp
push
cld
loopne
ret
mov
add
into
xor
xchg
jne
pop
pop
pusha
sbb
pop
in
js
cmpsb
add
jp
jns
sahf
cltd
mov
icebp
push
pop
fiadds
pop
dec
les
movl
mov
mov
inc
mov
add
divl
fists
mov
or
inc
cmp
xchg
jge
push
pusha
mov
add
adc
push
mov
and
aas
and
dec
pop
mov
pop
popa
jbe
sbb
test
cltd
repnz
inc
mov
lahf
adc
dec
jp
mov
fldcw
cltd
iret
sub
or
dec
add
mov
stc
add
add
loopne
jae
xchg
and
mov
jae
outsl
jno
sub
rclw
neg
mov
xchg
das
mov
and
nop
sub
cld
mov
test
cmp
cmpl
xchg
mov
ds
pushf
and
into
pop
ja
mov
add
sbb
xchg
dec
sbb
cmp
ret
scas
nop
lock
add
push
lds
rcrl
lods
insl
lret
sbb
or
cmp
lods
mov
sbb
shrb
dec
jo
out
xchg
daa
mov
push
inc
xor
xchg
cli
stos
jmp
fnstcw
nop
repnz
mov
sarb
scas
jbe
mov
pop
pop
fnstcw
clc
fwait
mov
data16
popf
cmpsl
cmpsb
in
repnz
in
push
test
xchg
pop
das
sub
or
test
pop
rorb
js
xchg
mov
or
or
adc
nop
test
out
lock
lds
push
push
xchg
pop
sbb
xor
pop
sbb
mov
sub
movsl
std
ds
push
insb
inc
lods
inc
es
shrl
mov
xchg
xor
adc
inc
lcall
mov
fwait
xchg
dec
push
lret
ja
or
mov
loope
imul
pop
pushf
pop
mov
rolb
or
sti
or
dec
jge
mov
scas
cli
dec
ds
scas
add
int3
jmp
mov
or
aad
popa
jae
addb
cmpsb
fwait
outsl
adc
xchg
movsb
insb
sub
mov
add
repnz
jl
push
icebp
inc
xchg
mov
cltd
inc
push
das
push
rolb
xchg
scas
dec
rorb
and
fsts
inc
sub
xchg
jl
aad
cmp
in
insb
popf
fcoms
mov
jno
test
cs
cmpb
mov
mov
or
sahf
fwait
in
cmc
insl
sbb
lds
lods
out
fistpl
push
cmp
imul
sahf
mov
jbe
xchg
fwait
movsl
loope
jae
leave
push
sub
dec
mov
jns
mov
and
fistps
lock
sub
insb
jecxz
test
mov
and
mov
mov
xchg
jne
lods
test
mov
mov
push
in
or
popa
mov
xor
jp
sub
jle
dec
adcl
int
jns
lods
pop
push
inc
inc
adc
int3
cmp
mov
lds
fcom
lret
into
xor
sub
ljmp
pop
into
maskmovq
divl
bt
sbb
lret
jb
out
jo
ljmp
push
pop
fsts
mov
les
fistpll
adc
lcall
loopne
sub
aad
dec
subl
xchg
outsl
stc
jmp
lds
xor
bound
xor
pop
addl
xchg
mov
daa
pop
stc
cli
xor
stos
fs
iret
das
sti
inc
fistpll
jg
das
sub
loope
fwait
or
xchg
sbb
pushf
dec
je
fisubrl
sub
pusha
fbstp
mov
xor
cltd
jle
shrl
sarb
outsb
push
lods
rcrb
fdivs
add
xor
mov
lahf
push
mov
inc
gs
fbld
xlat
mov
jp
loop
xor
sbb
sub
xchg
cs
add
add
sbb
or
das
stos
std
mov
insb
popf
and
add
rcrb
pusha
mov
push
pop
mov
gs
push
das
pop
lds
repz
cwtl
iret
outsb
fcomps
lahf
mov
and
and
cld
adc
mov
lods
movsl
xor
mov
mov
push
push
xor
cld
or
into
into
faddl
adc
leave
cli
inc
divb
cld
ret
rcl
mov
jbe
mov
out
push
sbb
pushf
xchg
sti
mov
bound
lea
insb
mov
jno
aas
mov
jl
mov
ret
sub
in
pop
les
shlb
fcoml
leave
or
mov
push
lds
mov
pop
mov
cmp
in
push
cmpsb
xor
mov
jecxz
push
sbb
mov
pop
jle
jp
lock
jecxz
sbb
sbb
mov
pop
mov
inc
cwtl
nop
faddl
push
xor
aas
xchg
mov
push
push
hlt
mov
repz
scas
cmp
dec
test
mov
sub
rcr
lcall
sbbb
adcb
aam
dec
lods
push
cltd
or
cmp
mov
xchg
jbe
jnp
mov
pop
jo
and
sub
sbb
xor
stos
add
or
add
jae
cmp
add
adc
push
mov
jg
out
pop
scas
mov
scas
push
stos
adc
jecxz
cmpsl
adc
iret
test
xor
and
jg,pn
loop
pop
mov
popa
sbb
mov
inc
cli
sub
push
insb
xchg
sti
push
dec
hlt
loop
daa
iret
orl
bound
push
sbb
shl
insb
hlt
mov
xor
lods
pop
out
dec
lahf
sbb
xchg
mov
mov
add
into
push
dec
cmp
xchg
push
ja
inc
sub
sbbl
das
inc
push
dec
scas
inc
out
cmp
mov
inc
ja
jg
jp
cmp
int3
jle
cwtl
mov
mov
jmp
bound
inc
ja
inc
adc
mov
popa
lahf
imulb
fdivs
mov
xorl
dec
xchg
fsubrs
xchg
jne
fcoms
push
mov
data16
cmp
jno
mov
sub
int3
or
inc
lcall
shl
xlat
and
or
xchg
inc
push
jae
jbe
loope
fidivrs
xchg
inc
stos
jg
lcall
lds
push
out
xlat
cld
loopne
mov
repz
lods
cmpsb
sub
xlat
imul
scas
cs
push
push
xchg
test
push
adcb
mov
lods
and
sbb
int
insl
cwtl
sbb
iret
mov
aad
mov
loop
mov
rcrl
sbb
mov
sbb
mov
jge
jno
cmp
cli
dec
lcall
mov
mov
sub
sub
fs
ret
adc
loopne
sub
add
movsl
xchg
jg
scas
dec
ficomps
jae
mov
pop
push
lret
popf
dec
add
jp
repnz
mov
insb
call
lcall
aas
push
aas
push
sbb
mov
in
pushf
dec
popf
fdivrl
inc
mov
xchg
and
or
enter
aad
xchg
pop
xchg
xor
inc
jl
imul
ds
bound
mov
pop
fimull
sub
pop
mov
sbb
shrl
push
pop
xchg
sub
cltd
inc
mov
jmp
add
dec
dec
adc
lods
xor
xchg
jl
push
mov
dec
inc
fadds
ja
pop
mov
xchg
adc
lahf
push
stos
mov
nop
add
mov
das
inc
dec
nop
pushf
adcl
in
out
adc
sbbb
sub
mov
sbbb
mov
pop
cmp
sub
pop
inc
pushf
jle
xor
mov
out
scas
mov
test
jo
lret
fcmovnu
and
inc
mov
addr16
jb
inc
xchg
xlat
add
mov
les
cmp
out
push
pop
aas
fstps
jmp
jle
jp
sub
test
iret
lds
lcall
js
lods
hlt
ficompl
cld
ds
loopne
out
mov
imul
or
lods
xlat
cmpsb
sub
daa
sbb
fs
mov
inc
outsl
adc
push
int
aaa
rolb
sub
fisubl
daa
add
idivb
adc
mov
in
sbb
push
and
lods
icebp
and
mov
iret
rcll
mov
push
jae
mov
sub
xchg
inc
scas
or
push
mov
jmp
mov
cmp
and
je
or
pop
pop
cmpsl
mov
rcll
and
shll
into
inc
sbb
mov
dec
dec
or
shr
shr
es
into
and
ss
out
inc
inc
sbb
rcr
jbe
cltd
inc
test
jmp
pop
sbbb
lret
pop
data16
scas
mov
jl
cmp
jp
fnsave
xor
pop
insb
pop
mov
or
or
adc
lea
cmp
scas
sbb
cli
rorb
hlt
in
pop
fs
inc
pop
ret
outsl
xchg
in
inc
jg
adc
sarl
sbb
das
stos
push
xchg
mov
sbbl
cmpsb
mov
stos
mov
push
sub
dec
push
sar
lcall
mov
add
and
mov
xchg
cmp
mov
cmp
mov
cld
imul
std
jmp
filds
shll
std
jle
stos
add
std
mov
aad
in
add
jmp
jae
cmp
xlat
jne
imul
dec
outsb
jb
add
or
scas
add
mov
ds
mov
pop
mov
out
and
adc
loope
pop
jb
jno
or
mov
nop
testb
cli
dec
popa
cmp
add
cmc
ds
lods
sub
testl
mov
stc
xor
dec
lds
dec
cli
lcall
insb
jnp
fbld
insl
jbe
or
adc
fcmovbe
and
mov
sbb
mov
mov
test
mov
lahf
cmp
add
loope
dec
add
insl
cmp
aam
xchg
jl
sti
and
lds
scas
aaa
dec
inc
pop
sarl
dec
cwtl
inc
loope
sbb
and
mov
or
xchg
lcall
mov
shll
mov
fs
add
cmp
add
std
mov
push
aaa
xchg
mov
mov
outsb
adc
sti
pop
or
cmpsb
mov
aas
adc
lret
mov
mov
dec
cltd
std
and
cmp
js
pop
jno
sahf
mov
rol
jle
cmp
lock
imul
xor
ljmp
sub
inc
les
test
mov
into
xor
les
lea
add
pop
neg
add
cwtl
bound
fucom
mov
dec
jbe
ss
repz
and
test
push
lds
dec
jle
ficomps
mov
inc
scas
sbb
add
outsl
and
scas
dec
xchg
dec
cmp
sahf
lahf
inc
mov
in
je
fnstenv
add
lret
xchg
stos
push
dec
into
add
movsb
push
aaa
push
add
sbb
or
inc
sub
xor
inc
pop
xchg
push
dec
ljmp
push
loop
pop
mov
cltd
cmp
test
cmc
decl
sahf
sti
pop
hlt
jbe
test
loop
fsubs
ds
loopne
add
je
xchg
jae
scas
mov
icebp
out
in
mov
stos
xchg
stos
mov
ret
mov
out
bound
xor
inc
inc
or
adc
dec
insb
les
pop
inc
call
sbb
push
std
jnp
mov
jo
fst
xor
cmpsl
stos
cmp
inc
test
jns
fisttps
push
or
rcrl
xchg
lock
mov
mov
lds
divl
int
jmp
sbb
add
je
in
push
adc
clc
daa
insb
adc
in
arpl
daa
inc
cmpl
cld
jp
into
xor
lock
cmp
pop
out
shll
shlb
mov
or
rcr
cmpps
push
mov
ds
mull
out
adc
stc
mov
mov
je
push
xor
fucom
xchg
pslld
imul
rcrl
cmpsb
ljmp
inc
shll
push
cmp
and
aas
xor
jle
push
insb
lret
cmpsb
clc
das
fsubl
jne
mov
sub
mov
push
cwtl
or
ficomps
pop
dec
shlb
pop
mov
xchg
sub
int3
sbb
imul
jecxz
iret
test
idivl
cs
dec
std
insl
jno
sub
pop
subl
jge
popf
mov
add
or
xchg
dec
push
inc
push
lcall
or
xor
fadd
and
xor
xchg
into
mov
les
mov
jp
push
test
sbb
cmp
adc
xorl
cwtl
popa
insl
prefetchnta
cli
sbb
in
push
outsb
aas
cmpsl
add
or
mov
push
mov
ss
loopne
jae
js
add
outsl
pop
cs
scas
xor
mov
dec
outsl
jmp
mov
shl
xchg
outsb
jg
lret
add
das
test
mov
inc
inc
rcll
shl
stos
mov
add
mov
insl
ret
cmc
sub
fs
jns
test
jle
sarl
ds
mov
adc
cs
jo
jmp
idivb
repz
shll
xor
sahf
dec
add
dec
xor
jl
test
and
push
jmp
jno
jecxz
js
mov
jmp
lcall
loopne
jbe
andb
subb
and
aam
ret
sbb
sub
pusha
notl
js
mov
dec
or
jns
lock
insb
ds
fisubrl
or
inc
jle
inc
push
scas
inc
pop
or
jns
push
push
xor
pop
xchg
jl
shll
mov
ja
loop
icebp
cmpxchg
inc
nop
cmp
mov
stos
outsl
mov
push
stos
decb
xchg
mov
or
fwait
cmpsl
adc
sahf
std
leave
es
add
mov
data16
or
ljmp
mov
ret
fdivrp
sub
push
jp
bound
leave
mov
rclb
lret
adc
and
push
bswap
cmp
in
lock
prefetch
mov
sbb
lret
jne
lods
push
jle
in
sub
ja
and
lret
push
cmp
into
xchg
imul
push
and
testl
mov
pop
dec
js
inc
xlat
add
cwtl
shlb
popa
jl
dec
xor
pop
aaa
dec
in
add
jnp
xchg
inc
fildl
mov
imul
imul
and
sub
addr16
popa
sub
mov
mov
pop
lds
adc
stos
jge
add
mov
rcrl
les
pop
in
jbe
sub
xchg
mov
in
scas
into
jle
or
out
mov
jno
mov
sub
add
fdivr
mov
mov
ja
adc
pop
out
jnp
in
cmp
mov
nop
daa
jne
mov
fdivrl
loopne
popa
bnd
adc
test
xor
ds
mov
push
sbb
jae
mov
outsb
lcall
ds
orb
add
cmp
js
insl
hlt
adc
xchg
xor
mov
ss
jmp
js
or
cmp
mov
mov
jp
fsubp
sub
and
sub
and
mov
pop
out
dec
cli
cmpsl
adc
jp
iret
cld
pop
ficompl
mov
inc
call
rol
cltd
js
and
mov
pop
out
loopne
cmp
ficoms
mov
cmp
or
cmp
and
call
xchg
mov
and
or
mov
or
xor
sahf
jge
shll
cmp
rcll
aad
and
clc
adc
repz
push
loope
pop
dec
nop
shlb
fwait
dec
mov
pop
lcall
insl
dec
push
sub
xchg
or
push
mov
push
xchg
jmp
mov
dec
aam
scas
loopne
push
push
lock
xlat
into
dec
mov
xchg
ret
inc
inc
push
loop
je
pop
test
leave
add
lea
lahf
pusha
push
or
mov
jae
cmp
in
lock
das
leave
xlat
add
pop
mov
adc
popf
cmp
or
or
jae
and
cmp
ds
push
sti
mov
pop
mov
xor
mov
insb
adcl
push
adc
shr
mov
mov
adc
dec
dec
sbb
mov
push
int3
xor
add
in
dec
cmc
cmp
cmp
pop
xlat
jl
xchg
fs
cmc
rcr
mov
lods
cmpsl
cmp
xchg
dec
mov
mov
sub
mov
je
dec
loopne
arpl
loop
and
loope
orl
mov
les
mov
inc
mov
cmp
jne
jecxz
lret
push
cmp
mov
jnp
xchg
mov
jnp
dec
sbb
ja
std
loopne
lcall
xchg
inc
sub
jne
mov
add
lcall
bound
repz
pop
add
and
hlt
pop
adc
mov
es
jb
stos
les
mov
imul
cld
and
aam
out
movsb
add
das
pop
xchg
xchg
cmpsb
jge
push
jb
sbb
or
pop
mov
inc
mov
cmp
jne
pop
in
movl
fmul
adc
pop
or
ja
fnstenv
add
js
fs
imul
js
push
addb
outsl
mov
add
push
cmp
xor
add
out
leave
es
push
mov
cmp
addr16
negb
inc
lods
imul
or
xchg
adc
negl
leave
je
shlb
cmp
push
test
pusha
cmp
popa
fs
cmp
mov
pop
out
jp
cmp
mov
inc
rorl
iret
loope
inc
cmp
dec
repnz
jo
test
pop
stc
ret
sub
mov
mov
out
insl
mov
mov
pop
pop
jnp
xchg
sbb
fldenv
mov
bound
int3
fldt
jae
mov
pop
inc
lahf
mov
pop
lcall
cwtl
pop
pop
xchg
iret
push
stos
inc
and
sbb
mov
push
or
into
pop
sbb
scas
pop
add
jle
stos
movb
inc
mov
inc
cltd
loope
jnp
mov
scas
std
cmp
rol
repnz
rcrb
fxch
cs
mov
lahf
pusha
outsb
sti
lods
mov
gs
mov
cmc
ret
push
mov
imul
xor
roll
popa
clc
sub
push
inc
and
pop
xchg
inc
dec
xlat
or
sbb
add
or
cmp
daa
push
mov
cmp
nop
adc
jae
dec
loop
call
add
bound
psrlq
add
sahf
sbb
and
mov
inc
addr16
cmpsb
mov
add
push
and
cld
jnp
add
int
inc
mov
clc
cwtl
push
sub
push
ss
inc
push
cltd
jmp
fistps
cmp
mov
adc
and
jg
or
daa
int3
push
add
sti
loopne
mov
out
xchg
test
inc
inc
fs
inc
inc
sbb
sahf
dec
dec
cmovo
mov
fimuls
sarl
push
xchg
in
cs
xlat
fsubl
adc
jbe
cmp
cs
nop
lea
adc
test
dec
test
shll
test
lds
dec
xchg
js
popa
mov
cwtl
sub
push
loop
inc
push
fldenv
jne
inc
scas
stc
xor
push
or
addr16
pop
roll
aas
push
or
xchg
push
outsb
insb
mov
lahf
jno
push
lods
dec
cmp
into
push
popa
jmp
or
shlb
dec
push
lea
stos
lods
mov
mov
rolb
lret
mov
mov
sti
jle
cmp
shlb
sti
adc
or
fwait
dec
ret
inc
adc
push
fwait
push
out
or
out
das
hlt
push
pop
jo
sbb
call
xlat
sub
mov
xchg
pop
and
data16
inc
call
push
mov
aas
fcomps
xor
dec
arpl
mov
int
pusha
fcoms
xor
or
daa
pop
fidivrs
cmp
bound
lcall
cld
push
add
or
in
pop
test
mov
es
sub
mov
out
adc
cmpsb
xor
pop
cmp
cmp
push
dec
outsl
mov
test
mov
dec
push
loop
xor
ret
jns
dec
fucomi
inc
int3
pop
aad
rcr
data16
dec
aam
fwait
les
mov
aas
sbb
stos
jo
arpl
fcomps
dec
mov
inc
mov
push
or
sub
cltd
out
xor
fisubs
movsl
pop
push
shll
inc
or
loopne
idivb
out
xor
jmp
test
add
push
loope
call
xchg
pop
inc
rcll
stos
mov
push
sub
push
pop
fcmovnu
movsb
loopne
xchg
repnz
push
out
adc
aad
and
inc
lret
stos
repz
push
sub
shrl
xor
fistps
jnp
fists
mov
dec
cmp
pop
xor
popa
cmp
cmpsl
cmp
cmpsb
ds
pop
pop
jg
adc
jae
add
std
popw
inc
insl
shlb
mov
push
es
popa
mov
popa
mov
jge
lret
push
popf
popa
jo
jb
in
jns
dec
insl
pushl
jle
lcall
adc
sub
mov
mov
cmp
out
roll
xor
mov
sbb
add
mov
mov
iret
sarl
popf
pop
lret
loop
jg
fisubrl
xchg
into
adc
sbb
or
mov
jb
cmp
stos
ljmp
out
jge
mov
in
lret
mov
mov
push
or
mov
push
push
aad
aad
ss
dec
das
into
and
xchg
popa
rcr
mov
inc
arpl
repz
xchg
cmc
jmp
sbb
xor
mov
mov
aas
mov
hlt
push
popa
or
pop
dec
sub
popl
sarb
jge
cmp
je
cmp
push
inc
notb
xor
fisubrs
jg
hlt
inc
sbb
xorb
mov
inc
push
popf
sub
ds
push
outsl
dec
mov
fidivs
push
incl
or
scas
test
rolb
and
mov
push
mov
shrb
cltd
mov
adc
push
mov
dec
fs
xor
jnp
mov
xorl
push
mov
fwait
sub
xor
push
push
in
adc
rorb
ljmp
pop
fdivs
push
jae
or
and
or
and
divl
xchg
inc
lods
daa
cmp
jg
mov
outsl
int3
fmull
ret
push
pop
fwait
es
or
js
call
pop
mov
aas
jle
push
icebp
lahf
cli
or
pop
sbbb
or
std
mov
stc
xor
loop
or
mov
adc
pop
cs
push
push
out
xchg
xlat
js
ficoml
cwtl
lcall
sbb
push
mov
adc
js
insl
sarb
cmpsb
pop
xor
mov
clc
jecxz
inc
cmp
and
and
loopne
jmp
lds
and
mov
inc
stc
lods
les
mov
cmpsl
movsb
xchg
xor
jb
insl
sub
xor
xchg
push
repz
push
pop
mov
int3
jl
xchg
push
shrl
sub
insl
dec
or
aam
inc
lock
jb
jns
sbb
push
mov
jp
add
inc
sbb
dec
ret
xor
ret
dec
push
push
mov
lock
xchg
mov
data16
lret
mov
rcl
push
mov
xchg
pop
adc
push
cltd
lea
cltd
mov
cld
jmp
pusha
pop
std
test
add
stos
hlt
jle
js
inc
mov
testl
dec
sbb
push
insl
pop
shrb
jmp
add
repz
mov
pusha
in
scas
mov
lods
das
pop
sbb
movsl
jns
mov
inc
out
les
je
lods
lcall
mov
mov
dec
push
ja
xor
mov
jge
mov
in
mov
lods
lret
ja
inc
inc
mov
bound
dec
jecxz
out
push
icebp
mov
outsb
outsl
cwtl
pop
gs
mov
push
push
arpl
rcrb
xorl
ss
mov
push
sti
sub
mov
push
clc
or
lret
jno
pop
sub
scas
in
stos
std
mov
dec
sub
cmp
mov
mov
clc
xor
outsl
xor
int3
cmp
std
add
and
pop
cmp
add
xor
pusha
out
push
fs
mov
movsl
inc
je
cmp
add
stc
ds
dec
push
push
jo
sbb
hlt
sti
lods
inc
pop
dec
adc
dec
mov
je
pop
cmpsl
adc
xchg
aaa
mov
fistpl
movsl
cmc
push
cmp
out
movsl
mov
add
out
push
icebp
test
iret
ret
adc
addr16
xor
cmp
movsl
lods
mov
in
fcompl
xchg
inc
lds
xchg
cmp
jno
sarb
test
push
fsubs
jne
sarl
loop
sahf
cmpsb
xor
push
pop
das
xchg
shrl
addr16
xchg
hlt
arpl
or
sar
or
sbb
cmp
cld
xor
xchg
dec
out
aaa
xor
loop
push
xchg
mov
cmp
inc
or
fiadds
pop
add
cmpb
sbb
std
sahf
push
fadd
addr16
fs
jae
push
movsl
js
jbe
sub
shlb
xchg
dec
xor
push
xchg
addr16
stos
cmp
outsl
mov
or
negl
jnp
xchg
fidivrs
add
popf
hlt
addr16
pop
ds
aaa
sub
jecxz
sub
bound
fwait
push
repnz
sbb
dec
sbb
pop
sub
lahf
lahf
xor
cmpsb
ret
cltd
adc
jnp
movsb
or
lcall
mov
lret
lea
adc
lds
add
dec
adc
or
xor
push
or
push
and
add
pop
push
testb
pop
nop
in
ss
scas
aad
sub
or
push
xor
fbld
fimuls
in
xor
xchg
enter
cmpsl
mov
out
jecxz
loope
test
fwait
adc
xor
pop
loop
add
pop
je
inc
insb
jecxz
cmp
lret
or
fs
daa
mov
pop
push
ja
xchg
out
inc
dec
cmp
xor
jno
fisttps
clc
or
sbb
cmp
les
fsubs
cmpl
dec
pop
cmpsb
pop
lods
sub
movsl
out
outsb
ficoml
cmpsl
fbstp
jne
mov
or
mov
fdivl
push
lods
pushl
xchg
stos
in
xor
pop
rcll
cld
or
xlat
ret
aad
scas
je
ja
mov
cmc
ds
adc
scas
lea
test
mov
or
fcomps
push
jb
addl
loop
pop
loop
ljmp
inc
scas
enter
xchg
aad
fldln2
cmp
add
mov
xchg
ss
mov
jecxz
cmp
test
je
ret
and
sbb
xchg
pop
add
popa
ds
mov
sbb
add
adc
imul
pop
out
in
push
mov
push
lds
wrmsr
jb
pop
subb
jne
aam
add
cmp
mov
bound
or
cwtl
sbb
pop
cmpsb
and
gs
pushf
into
jbe
pop
lds
sub
pop
jp
mov
fadds
sbb
lcall
test
cmp
sbb
movsl
popa
cs
jbe
nop
and
lea
mov
dec
scas
pop
in
or
push
xorl
mov
mov
jge
mov
push
mov
mov
xchg
popf
sub
outsl
test
or
push
sbb
repnz
dec
xchg
adc
ret
pushf
inc
adc
pcmpgtb
out
xchg
dec
insl
ds
rcl
push
sub
push
push
shlb
loopne
sbb
or
fldt
adc
lea
fcmovnbe
inc
shlb
js
in
in
pop
pop
sar
xchg
daa
aam
pop
lahf
add
repnz
ficompl
mov
push
cmpsl
jb
test
xchg
rcl
xchg
or
mov
movsb
loope
or
sub
dec
test
imul
mov
push
or
subb
fadd
dec
inc
rorl
mov
jp
aad
pusha
xor
mov
mov
inc
mov
cmp
pushf
in
stos
insl
jg
or
out
aam
dec
ds
out
stos
inc
icebp
stc
adc
sbb
lds
ror
mov
shl
mov
mov
insl
nop
xchg
bound
enter
xor
xlat
mov
inc
xchg
pop
ljmp
movsl
call
adc
jnp
cmp
adcl
ret
sbb
aad
popf
cld
jg
xchg
imul
icebp
arpl
mov
js
lds
cmp
scas
xorb
push
jmp
or
push
push
lahf
call
frstor
outsl
mov
cmpsl
dec
add
int3
push
into
mov
pushf
loopne
jae
imul
lcall
xchg
sahf
ret
leave
int
mov
clc
push
fildll
fisubs
cwtl
add
sbb
je
data16
je
int
lods
hlt
out
jnp
mov
stc
je
cmpsb
flds
icebp
inc
mov
loopne
dec
in
repnz
les
test
vpsrlw
ret
mov
rol
ja
inc
pop
sbb
lret
scas
dec
pop
movsb
add
xor
mov
cld
adc
cmp
or
arpl
mov
daa
popa
xor
pop
pop
push
push
pop
nop
int
push
orb
push
push
cmp
or
push
inc
inc
ret
dec
jbe
addb
sbb
xor
and
xor
call
xchg
xchg
xor
xlat
xchg
adc
fs
das
mov
xor
mov
outsb
sbb
outsl
xchg
pop
mov
rcrb
fwait
std
add
pop
aam
sbb
jnp
inc
xor
iret
in
sbb
mov
xchg
cmpsb
in
aas
add
stc
div
dec
add
and
sbb
cmpsl
cli
out
inc
xchg
adc
rorl
adc
mov
data16
ja
xchg
and
add
dec
sbb
dec
aam
movsb
jmp
mov
mov
ljmp
push
nop
dec
scas
imul
or
dec
mov
adc
mov
jbe
mull
jno
mov
xor
push
push
jnp
dec
test
cmp
mov
push
sub
outsb
and
dec
push
ret
sbb
xchg
cs
mov
lock
cwtl
loopne
xor
out
jne
mov
hlt
dec
cmp
pop
jne
xor
out
inc
adc
inc
xchg
stos
xor
push
in
pop
vmovntps
mov
lds
rcl
insb
fisubs
adcb
mov
xor
push
xor
popf
in
push
push
xchg
xor
mov
and
stos
sbb
and
lods
push
push
cmc
out
hlt
imul
cmp
ds
out
pushf
inc
cmpsl
cmp
inc
cmp
jno
cmp
and
hlt
lods
or
aas
jns
stos
pop
popf
iret
pushf
lea
movsb
ret
stos
mov
push
push
scas
insl
test
xor
mov
or
pop
addr16
mov
pop
daa
ljmp
clc
ror
jns
pushf
push
add
jp
insb
leave
fisttps
sbbb
popf
mov
pop
xlat
push
in
mov
and
mov
out
mov
jbe
fdivs
stc
mov
sbb
or
in
fstl
pop
ret
out
pop
xor
or
rolb
scas
mov
cltd
imul
add
cwtd
push
cltd
loope
and
add
mov
loop
out
xchg
leave
popa
lret
out
test
xchg
fisttps
dec
loop
insb
mov
mov
xchg
scas
fwait
js
mov
adc
lods
xor
push
pop
pop
or
and
xlat
aad
fs
data16
in
push
test
mov
cltd
outsl
ja
push
push
and
add
lret
xor
int
ds
dec
inc
xchg
mov
push
fsubs
fstps
mov
sub
imul
dec
mov
xchg
popf
cmpsl
xchg
pop
xchg
lods
pushf
test
adc
rcll
stos
movsb
leave
dec
out
sub
addr16
sbb
jecxz
shrb
cmp
andl
imul
movsb
mov
pop
hlt
lcall
xadd
fisttpl
stc
jecxz
test
shlb
mov
lods
in
fsubrs
inc
lret
xchg
imul
add
add
jae
ss
mov
sub
or
imul
pop
and
das
out
push
lods
std
or
jmp
sub
pop
shlb
jp
mov
xchg
pmaxsw
pop
loop
jne
repnz
add
sbb
add
pushf
pop
test
pop
xor
shl
ljmp
movsb
mov
push
adc
push
icebp
imull
mov
jno
pop
pop
loope
sbb
push
pop
xchg
pushf
or
rclb
js
or
ret
or
or
push
inc
jge
lcall
int3
and
sub
frstor
or
dec
test
sub
faddl
cmc
inc
or
movsb
inc
loopne
mov
ss
xor
mov
scas
shlb
push
cmc
aaa
adc
xchg
imul
test
clc
cltd
out
out
call
int3
add
fisubl
mov
or
fcoms
push
leavew
or
test
into
ret
xor
cmp
sub
xchg
and
dec
in
in
stos
outsb
pop
jg
movsl
rcll
and
inc
lods
inc
js
rcrl
in
and
adc
dec
testb
jno
add
lret
sti
int3
and
jne
andl
call
xchg
fs
jmp
pop
inc
rolb
xchg
sarl
bound
rcrb
out
or
lcall
mov
jbe
mov
adc
mov
int3
cmp
push
mov
sbb
jno
inc
fwait
ds
xor
sbb
jmp
xchg
les
bound
gs
packuswb
add
ret
leave
cbtw
push
jo
loopne
cmp
test
push
cwtl
inc
push
rorb
inc
daa
sub
dec
pop
cmp
shrd
xchg
es
sub
or
lahf
fadds
outsb
dec
bound
adc
mov
xchg
out
push
sahf
pop
and
mov
xchg
bndstx
fistps
scas
push
cs
addr16
jmp
cmp
xchg
outsl
or
jg
movsb
inc
mov
push
mov
iret
lds
lods
imul
shrb
cmpsb
sbb
aaa
mov
cmp
sub
daa
js
ror
inc
aam
mov
dec
stos
cmp
sub
data16
out
dec
sub
push
jne
jb
cltd
and
aad
mov
push
ds
pop
inc
xchg
mov
aas
xor
repnz
lock
push
enter
sahf
sbb
or
pop
and
call
cmp
test
push
ja
sub
ljmp
into
mov
or
xlat
xchg
xchg
dec
insl
mov
jne
je
sarl
sub
dec
movsb
pop
pop
ret
pop
mov
mov
fstps
and
jns
cwtl
dec
and
fists
negl
imul
leave
sub
cmpsl
sub
jnp
and
lea
icebp
adc
nop
mov
ret
imul
cli
pop
imul
js
mov
xchg
add
mov
sub
jbe
sbb
mov
jne
fisttpll
dec
test
gs
mov
mov
subb
das
outsl
sub
mov
sub
sub
sahf
popf
push
add
cmp
imul
or
jne
lds
add
push
dec
loope
stos
mov
adcl
push
adc
loop
jb
out
mov
push
dec
arpl
lock
and
jno
mov
push
fadds
push
sbb
sbb
jg
mov
inc
mov
ja
out
ja
xchg
xor
ljmp
jecxz
sbb
mov
mov
jns
mov
push
scas
inc
mov
test
cmpsl
and
jle
push
cmp
fisubrl
test
sbb
cmp
popa
add
push
sahf
push
ja
xchg
adc
dec
clc
adcb
mov
mov
xor
cmp
inc
cs
push
popa
ljmp
aad
dec
mov
cmp
push
jae
xchg
dec
xchg
imul
sahf
into
mov
mov
push
daa
cmp
jle
in
xorb
movsl
pop
stos
scas
scas
inc
sbb
daa
dec
jp
mov
jb
cmp
repz
dec
dec
jbe
in
ds
push
mov
and
or
ficomps
lahf
cmc
dec
subl
pop
or
ja
fucomi
orb
mov
adc
fmull
loopne
int
and
js
or
or
imul
adc
adc
repz
stc
pop
mov
pop
rclb
test
mov
scas
pop
je
dec
sbb
xor
aad
and
pop
jge
push
add
stos
jb
cltd
adc
jge
mov
and
mov
out
imul
jno
lods
xlat
mulb
push
dec
dec
inc
loope
lahf
aas
lcall
fstpl
js
mov
xor
xor
xor
mov
cmp
cmp
orb
addr16
sub
jmp
test
lcall
pop
jge
dec
xchg
rcr
push
push
xchg
xor
loopne
push
out
xchg
aas
mov
test
dec
jno
pop
arpl
lahf
pop
jle
sub
dec
mov
sbb
mov
subl
dec
xchg
aad
push
pop
dec
mov
adc
pop
daa
dec
jns
pop
sub
dec
test
pop
inc
and
sbb
fstpt
andb
dec
sbb
popl
imul
nop
ror
fbstp
sub
mov
imul
insl
verr
std
add
clc
cli
xor
jbe
mov
or
test
in
cmp
and
data16
jno
inc
scas
lcall
shrl
mov
rcrl
mov
flds
dec
dec
fld
pop
sbb
and
add
aas
add
push
andl
mov
mov
pop
call
in
stc
scas
jb
sub
mov
scas
xchg
decb
ret
push
mov
pop
mov
jp
jne
dec
pop
dec
jge
in
sub
inc
jno
ret
xor
add
daa
fstpl
repnz
dec
xor
and
mov
jns
xchg
pushf
sti
mov
xlat
enter
int3
lcall
sbb
pop
leave
or
loopne
push
and
sub
cmc
xor
fwait
hlt
dec
fwait
xlat
push
mov
xor
adc
imul
sbb
fnstenv
xchg
in
push
cs
nop
nop
aad
push
lret
daa
xor
daa
pop
jg
in
mov
fbld
movsl
dec
xchg
xchg
aas
stc
pusha
shl
add
lods
sbb
and
and
int3
stc
xlat
ss
arpl
arpl
je
outsl
or
mov
xor
push
sbb
adc
fsubl
add
ret
jg
out
xor
into
fsubl
popf
push
pop
adcb
adc
lahf
mov
pop
in
aas
pop
inc
mov
imul
push
std
popa
rcrb
stc
or
mov
cmpsb
push
push
in
jbe
shlb
lret
adcb
pop
pop
pop
push
or
outsb
mov
push
pop
and
mov
xchg
or
pop
inc
or
jae
mov
mov
repz
and
fbld
pop
push
and
fimuls
adc
mov
divl
movsl
not
adc
mov
jnp
mov
pusha
clc
sahf
mov
into
mov
add
popf
fs
jmp
push
mov
adc
cmpsb
fimull
cmpsb
cmpl
lcall
lret
repz
cmp
mov
movsb
cmp
mov
sub
in
in
jnp
lret
adc
iret
out
mov
mov
and
jg
push
mov
mov
dec
clc
cmp
jno
push
cmpb
cs
rcrl
and
cmp
das
aas
sub
xchg
inc
mov
imul
add
sbb
dec
mov
ds
xor
cli
adcl
adc
cli
les
inc
addr16
shl
pop
out
cmpsb
mov
lock
or
cmpsb
pop
mov
and
mov
jnp
scas
enter
add
mov
jp
push
sub
out
shrl
cmp
cmp
fsubrs
fwait
xchg
jecxz
jl
mov
jns
xor
sub
push
mov
ret
arpl
into
cwtl
mov
xor
mov
into
icebp
mov
into
pushf
xchg
jo
insl
daa
fcomps
inc
dec
push
pop
add
add
scas
xor
push
cmp
mov
adc
jae
xchg
mov
sahf
mov
xor
add
aaa
xchg
in
cmpsb
mov
inc
and
cmpb
jp
imul
xor
ror
mov
and
dec
cli
sbb
pop
arpl
std
inc
xor
pop
jbe
cmpsb
xor
pop
jae
jl
jno
sti
pop
dec
and
lret
aam
pushf
xchg
jg
push
xlat
xor
adc
dec
hlt
sbb
mov
adc
inc
jp
out
and
push
mov
jl
bound
sub
rcr
or
outsb
pop
cmp
lcall
lcall
xor
pop
inc
cmp
arpl
push
xor
sub
mov
and
cmpb
ss
and
xchg
nop
adc
fidivrs
mov
or
int
mov
out
xchg
mov
mov
pop
mov
add
adc
pop
jnp
aas
xchg
in
mov
test
into
cli
push
cmc
sub
cmp
outsl
aaa
stos
fstpl
lahf
pop
adc
add
fcmovnu
mov
arpl
mov
push
cmp
add
loope
xbegin
ja
xor
dec
icebp
cmp
ret
and
imul
in
bound
daa
dec
pop
mov
sbb
xor
push
adc
aad
ds
dec
mov
lods
sbb
scas
xchg
mov
test
sbb
lock
sbb
pop
cmp
imul
add
daa
inc
fidivl
pushf
fcmovb
aas
enter
xchg
stos
cmpsl
sar
pop
ret
add
dec
outsb
push
mov
fdivr
pop
mov
mov
xor
adc
sub
sar
and
sbb
xor
clc
popa
movsb
xchg
lea
pop
dec
mov
das
cmp
les
mov
inc
pop
xchg
or
cltd
sub
jbe
mov
mov
xchg
loopne
mov
and
int
xlat
push
dec
xor
popf
jmp
jle
push
std
loope
pop
es
sub
inc
dec
lock
sti
pop
inc
xorb
sbb
or
jo
sbb
in
mov
sbb
les
popa
sub
pop
sub
mov
pop
aad
pop
adc
pop
jno
pop
sub
xor
repnz
and
insb
xor
int
xchg
add
rcr
inc
sti
adc
xor
xor
jbe
push
inc
lock
pop
imul
jmp
xor
xchg
xchg
daa
movsb
or
mov
aad
sbb
mov
repnz
addr16
push
sub
jnp
jg
js
pop
lret
and
fsubp
xchg
adc
cpuid
sahf
js
add
mulb
and
sub
sub
lds
push
sbb
cmp
test
arpl
add
jne
jmp
leave
or
cs
xchg
inc
xchg
mov
push
ja
std
inc
lods
in
cmpsl
jmp
xchg
sbb
jb
mov
test
mov
inc
lea
mov
xchg
rcl
cmp
push
fistpl
mov
xchg
out
xor
into
add
mov
pop
jne
inc
mov
jge
mov
inc
mov
mov
es
insb
mov
insl
mov
sahf
insl
xor
loopne
mov
ljmp
cmp
mov
ficompl
xlat
cltd
mov
outsb
mov
mov
faddl
xchg
insl
jns
fimull
stos
adc
add
cltd
ljmp
nop
fdivs
inc
sub
xor
push
and
out
imul
xchg
cmc
sti
cmp
xor
dec
call
scas
xlat
aad
and
pop
xor
cwtl
add
lds
dec
fsub
ficompl
and
pop
mov
sarb
inc
inc
icebp
cld
xchg
mov
popa
lret
sub
lea
das
stos
ljmp
in
pop
repz
xchg
into
xchg
ds
jmp
ret
mov
repz
pop
pop
lock
jnp
cmp
jge
pop
sbb
addr16
push
mov
dec
movsb
pop
mov
adc
inc
xchg
aaa
mov
outsb
test
sub
roll
jae
cli
add
add
mov
repnz
ja
out
adc
pusha
arpl
shrl
fisttpl
loop
and
jo
jnp
cmc
or
cmpl
call
aaa
stos
es
rclb
push
cltd
jne
dec
or
or
add
xchg
xchg
iret
or
or
aaa
mov
stos
push
aas
or
mov
test
mov
loope
div
add
sbbb
testb
cld
movsl
or
outsb
push
stc
pop
cmp
dec
or
xor
or
outsl
mov
inc
add
pop
incl
add
lods
jecxz
pop
xlat
and
jmp
lret
xchg
cmp
pusha
leave
sub
sbb
pop
pop
inc
mov
lcall
cmp
jge
leave
push
sti
mov
mov
sbb
enter
clc
or
add
mov
lret
jp
lds
push
std
into
cmc
adc
fcomip
fcmovnu
in
popa
push
outsl
jle
xor
push
dec
scas
xor
adc
lea
jbe
lock
lock
push
mov
rcll
pop
cmc
xchg
scas
punpckhdq
sbb
xchg
inc
mov
pop
cmp
pop
ud0
push
or
adc
mov
pop
xchg
in
data16
sub
xor
sbb
div
loop
xchg
lods
insb
scas
push
cmp
outsb
inc
add
mov
cmp
xor
aas
repnz
cmovl
xor
jmp
outsb
xchg
pop
xchg
stc
add
sbb
ffreep
popa
fildl
pop
pop
sbb
pop
adc
jno
adc
adc
inc
js
jno,pn
mov
and
and
pop
ss
jo
enter
sti
jecxz
fstps
jbe
cmp
cltd
clc
lods
int
das
sbb
jae
lcall
imul
adc
test
clc
mov
pop
push
cli
cmc
das
and
iret
into
aam
cmpsb
aad
pushf
pop
jmp
adcb
dec
xchg
inc
mov
mov
jmp
in
stc
inc
insl
inc
pushf
cmpl
repz
call
xchg
in
inc
mov
pop
and
xchg
push
jg
fimuls
pop
xor
gs
inc
xor
loop
xor
mov
mov
fldl
fsubr
out
iret
icebp
sub
sbb
frstor
loop
repnz
or
adcb
aam
ss
mov
js
movb
sub
nop
pop
adc
movsl
popa
cmp
pop
adc
cmpsb
cmpl
daa
mov
aam
cmpl
ficompl
and
cmp
inc
mov
and
adc
mov
push
add
mov
lds
aam
sub
cs
sbb
out
sub
xchg
cmp
push
mov
scas
pop
cmp
test
mov
xchg
sub
andl
scas
mov
cwtl
mov
addr16
inc
mov
adc
cs
jecxz
jmp
push
jge
add
fcoms
jne
daa
inc
xchg
aaa
jl
lret
cmp
and
mov
insb
xor
insl
adc
movsb
dec
insb
test
mov
add
lcall
test
fdivl
cwtl
add
sbb
popf
and
xchg
dec
add
movsb
icebp
subl
sbb
lcall
inc
and
sub
rcr
cmpsl
test
xchg
sub
lahf
mov
out
shl
call
in
cli
stos
faddp
cltd
push
scas
mov
out
pop
mov
dec
in
mov
nop
imull
fsubr
add
dec
lcall
insb
sarb
out
mov
adc
cmpsb
stc
ret
pop
lahf
pop
fsubs
push
jnp
mov
inc
inc
sahf
mov
lea
xchg
lret
mov
imul
xor
add
cmp
scas
loope
in
sbb
or
pop
lods
push
sbb
pushf
xor
xchg
shll
mov
out
into
repz
pop
jb
into
mov
aaa
cld
dec
or
fstps
sbb
inc
inc
sub
repz
add
mov
imul
jno
mov
pusha
test
out
push
or
mov
mov
mov
mov
sbb
ret
fsubrl
arpl
mov
aaa
testb
ret
xor
insl
mov
add
sub
add
out
mov
mov
push
push
add
inc
and
and
mov
sbb
rcll
mull
dec
daa
fcmovb
mov
subb
pop
imul
leave
mov
cwtl
orb
push
add
jmp
hlt
aad
popf
mov
divb
cmc
cs
test
push
sub
notb
jns
adc
cmp
mov
in
pop
jo
pop
fidivs
movsl
cli
jg
stos
fbstp
cwtl
popf
mov
xor
cmpsb
push
or
xor
mov
sub
mov
sahf
jp
jo
dec
xor
inc
test
dec
mov
test
adc
ret
add
push
lret
dec
mov
daa
dec
push
scas
loopne
adc
inc
les
sbb
mov
scas
push
movb
cmp
mov
call
pusha
push
xchg
cmpsl
jmp
ret
or
aam
ficompl
jb
stos
xchg
pushf
sarl
push
loope
cmp
aas
imul
pusha
aas
mov
jg
jno
loope
inc
sub
xlat
aaa
or
pop
mov
sbb
dec
std
pusha
into
pop
lock
les
hlt
ljmp
ss
sub
lds
cs
mov
adc
push
cmp
in
out
push
or
arpl
xchg
pop
ljmp
mov
insb
sub
and
pop
hlt
and
popf
lahf
loop
jae
call
outsl
mov
inc
cli
push
jl
dec
inc
outsl
cli
pop
aas
xchg
insb
pop
fildll
sbb
and
loope
xor
adc
pop
cmp
cmp
add
stc
pop
repz
pop
mov
sub
push
imul
bound
int
mov
fildl
xor
jmp
imull
inc
mov
jg
sbb
push
xchg
in
test
and
icebp
fmul
pop
mov
dec
mov
pop
js
outsl
mov
add
js
aad
addr16
out
mov
mov
xchg
iret
aad
cltd
pop
pusha
aaa
or
sub
xchg
xchg
enter
xor
fisubl
mov
test
xchg
icebp
dec
sbb
bound
xchg
sub
and
iret
fistl
pop
out
inc
into
pushf
inc
sub
ja
fsts
cmp
call
xchg
xchg
xchg
push
add
push
xchg
fwait
push
xchg
cmp
ret
lods
out
pop
mov
bsf
iret
xor
pop
mov
or
push
push
xchg
movsb
clc
test
mov
inc
sub
mov
aad
je
cmc
fdiv
sbb
cmpsl
pop
add
jge
inc
jecxz
int3
les
out
lret
or
or
out
mov
sub
in
pushf
mov
add
xor
mov
adc
mov
cmp
cld
cmpsb
mov
dec
xor
sub
int3
rorb
push
adcb
mov
das
data16
jbe
testl
or
xchg
rclb
fwait
push
jmp
std
outsb
in
mov
push
leave
test
shrb
cmp
imul
mov
dec
fwait
pop
movq
fistps
repnz
dec
cmp
dec
xor
dec
sub
adc
imul
xor
imul
mov
leave
push
imul
testl
jb
dec
sbb
lock
add
adcb
xlat
sub
adc
mov
xor
adc
jmp
scas
cmp
mov
pop
sub
push
push
repnz
push
sbb
jp
mov
xor
push
imul
push
push
scas
pop
mov
jmp
cli
xor
jg
aaa
cwtl
push
rorl
cs
repnz
push
cmpsl
lods
jno
lods
shl
pop
lods
push
test
call
push
ss
arpl
out
cmp
ja
movsl
iret
or
in
inc
or
push
mov
mov
dec
xor
mov
and
inc
mov
or
push
xchg
inc
addl
cmp
cmp
add
adc
popf
xchg
in
and
fwait
push
jae
mov
dec
and
lret
shlb
fistpll
xor
stc
pusha
imul
inc
jp
ret
fwait
daa
pusha
push
cmp
inc
cld
arpl
jmp
lods
leave
mov
fnstcw
mov
in
cmp
inc
sbb
and
mov
sub
inc
nop
mov
xchg
pop
cld
push
dec
mov
sarl
add
outsl
loopne
pop
fisttps
dec
into
mov
sbb
pop
jg
mov
pop
daa
xor
adc
xchg
or
mov
pop
ss
test
xchg
cmp
in
pushf
popf
mov
ret
movsb
fsubrs
scas
or
lods
or
sti
or
mov
enter
insb
mov
cwtl
imul
adc
mov
cwtl
dec
pop
or
mov
jecxz
or
jne
cmp
mov
stos
xorb
cld
je
adc
xor
jbe
jge
test
and
scas
lret
sub
aam
adc
mov
ret
sbbl
jecxz
lock
jmp
jg
cmp
push
mov
xor
int
fcompl
stc
test
mov
inc
insl
sub
adc
loope
in
xchg
outsl
mov
inc
mov
lahf
xchg
xchg
cmp
jmp
mov
xor
pminsw
pusha
xchg
jl
insb
inc
cs
sbb
jle
and
sub
gs
adc
ficompl
lock
pusha
das
ds
mov
aad
push
jg
jmp
jnp
or
pop
mov
loopne
fwait
push
pop
xorl
inc
mov
jne
adc
sbb
lds
sub
cwtl
sub
outsl
xor
test
clc
testb
aas
fcoms
lret
fnstsw
push
pop
call
fnstcw
adc
xchg
lds
pavgw
mov
fs
pop
mov
mov
and
std
pushf
xlat
or
sarb
and
ds
push
mov
imul
or
xchg
std
jns
ljmp
jae
mov
mov
mov
jo
xchg
out
add
mov
jecxz
mov
lds
mov
cwtl
inc
cmp
xor
push
mov
push
scas
and
jno
jo
jecxz
dec
adc
mov
dec
xor
hlt
sub
cs
out
sahf
mov
or
mov
loopne
dec
shl
push
xlat
mov
pop
sti
roll
call
daa
repz
push
addr16
push
imul
es
pop
inc
das
cmp
lcall
dec
enter
jmp
adc
push
or
cmp
add
test
mov
jmp
pop
pop
popa
imul
push
sbb
mov
loopne
mov
stos
andb
pop
dec
ret
sbb
rorl
popf
in
test
mov
xchg
dec
insb
push
arpl
adc
or
xor
dec
sub
ret
imul
xchg
mov
push
mov
adcl
pop
shrl
push
out
rcrb
loopne
lahf
fstps
jp
popa
fidivs
mov
mov
cltd
ja
sbb
test
mov
inc
xor
or
in
sub
rcr
push
jae
and
adc
in
add
cmp
pop
xchg
pop
cmpl
sbb
cwtl
sbb
out
sub
inc
shlb
rcrb
rclb
ror
movsl
jecxz
mov
int3
xchg
mov
imull
mov
inc
data16
dec
adc
fnstcw
push
ret
add
cwtl
add
aas
or
arpl
movsb
rcpps
sbbb
add
pop
hlt
dec
or
sbb
and
popa
add
or
mov
and
fisttpl
push
pop
or
pop
pop
xchg
add
sub
fs
cwtl
enter
adc
cmp
stos
cmp
pop
jmp
jmp
int3
push
adc
jnp
push
sbb
jmp
jmp
push
imul
cltd
sub
pop
subl
scas
pop
mov
xor
inc
aaa
fs
icebp
dec
les
popa
cmp
fnstsw
push
repz
mov
cmp
hlt
mov
push
cmp
in
stos
and
xchg
pop
mov
jmp
das
es
mov
jle
cmpl
arpl
call
int
pop
test
mov
mov
mov
mov
test
mov
jp
cmpsb
xchg
bound
push
xor
xor
ljmp
jo
mov
sbb
sbb
js
cmp
mov
and
add
adc
sbb
cmp
subb
js
arpl
dec
and
out
stos
lods
test
mov
int
or
fmull
jne
dec
ljmp
inc
ds
push
mov
test
fnsave
repz
mov
pop
popf
out
sub
or
ret
out
xor
xor
lea
sbb
or
jle
sbb
sbb
test
outsb
and
sub
inc
clc
idivl
repz
push
addl
push
pusha
insl
xor
cmpsb
pop
xchg
jge
jb
sbb
jne
je
xor
int
xchg
int
lret
shrl
mov
repz
test
mov
lods
mov
fisttpl
dec
rolb
pop
push
add
sub
jp
push
and
negb
sahf
cltd
subl
add
fistl
sahf
addr16
mov
mov
dec
cmp
cmpb
pushf
sahf
stc
cmp
pop
pop
pop
ret
cli
ja
lea
cmp
inc
jge
xchg
inc
mov
sarl
fs
or
pop
and
mov
mov
xor
rolb
into
or
scas
arpl
jae
fwait
lahf
mov
outsl
inc
arpl
jl
cmp
mov
inc
dec
push
jmp
xchg
jge
cltd
cmc
pop
xchg
jge
and
push
and
je
cmp
jp
imul
or
aad
out
adc
mov
xlat
pmulhw
adc
ss
mov
cmpsl
jl
iret
das
mov
add
ja
and
cli
mov
mov
scas
stc
jo
or
lods
and
stos
dec
inc
xor
je
adc
push
incl
xchg
ljmp
and
aas
and
sbb
pop
and
cs
scas
mov
fmul
push
dec
and
out
pop
mov
imul
push
push
mov
mov
cmpsb
test
scas
push
adc
xor
fisubs
or
lcall
pop
mov
test
das
pop
das
xchg
in
xchg
inc
and
repz
loope
fs
jg
insb
hlt
orb
mov
lcall
loop
jns
jge
mov
loope
pop
inc
sti
xor
and
aaa
mov
es
icebp
xor
iret
and
shl
shl
aad
les
cmpb
cmpsl
shrl
jmp
xlat
push
iret
ds
push
jo
stc
xor
mov
call
daa
lret
lret
adc
add
cld
pop
imul
lds
clc
loopne
and
lcall
movsl
or
or
cltd
adc
jnp
mov
sbb
popa
lahf
outsl
arpl
bound
jmp
and
and
repz
cwtl
dec
subl
mov
inc
xor
in
pushf
jg
jne
test
lock
ficoml
push
rcr
xor
cmp
add
xchg
cmp
arpl
test
addr16
testl
hlt
cmp
js
pop
sub
push
data16
mov
xor
or
push
mov
adc
jmp
cld
hlt
inc
mov
data16
xchg
ret
arpl
mov
jne
jp
mov
repnz
in
in
std
arpl
aaa
push
mov
push
mov
fidivrs
inc
mov
mov
sbb
scas
ds
loopne
xchg
mov
fs
xchg
mov
flds
jb
aad
fbstp
xor
push
inc
cmp
add
cmc
rcll
dec
xor
dec
repz
icebp
dec
push
imul
xor
in
popf
sub
mov
mov
pop
das
out
aad
mov
dec
clc
sarb
in
les
int3
adc
dec
mov
and
ret
iret
scas
ds
jmp
addr16
inc
push
lock
adc
sbb
in
xorl
fcomps
jae
gs
mov
and
mov
mov
loope
dec
cmc
out
arpl
arpl
add
sti
dec
cmc
push
adc
jp
dec
sub
subl
rcr
adc
popf
adc
js
std
fistl
mov
pop
stos
shrb
inc
mov
push
and
and
add
cmp
mov
pop
rcrb
arpl
mov
xchg
imul
pop
xchg
sub
data16
inc
pop
fists
fistl
jge
cwtl
gs
inc
push
xsave
sbb
insb
lret
pop
pop
xchg
add
dec
inc
cmp
add
out
pop
adc
jae
movsb
xchg
mov
stos
mov
lahf
test
sub
insl
xorl
push
stc
mov
xchg
sbb
ficoms
ljmp
imul
shl
or
xchg
idivb
xor
popf
or
lods
jmp
imul
xchg
popa
pop
xchg
fisubl
inc
xchg
stos
and
add
in
pop
pushf
and
and
push
outsb
dec
mov
mov
rcrb
cmp
shl
adc
int
push
arpl
sub
es
hlt
fs
subl
icebp
jnp
mov
test
cmp
push
sub
das
pusha
loopne
out
adc
stos
adc
adc
or
mov
rorl
cwtl
test
js
fs
cmc
jns
popw
stc
add
cmp
test
pusha
imul
mov
out
jmp
lods
xchg
sub
incl
outsl
or
pusha
stos
popa
xor
loop
arpl
cmpsb
aad
notl
lahf
push
dec
test
movsb
repz
mov
clc
lret
or
jo
stc
or
gs
inc
push
mov
pop
out
xchg
pop
xchg
and
incl
popf
pop
loopne
ljmp
int
inc
sarb
pushf
xchg
rol
mov
xor
neg
movsb
dec
xor
pop
xchg
movsb
andb
mov
xor
sbb
loop
arpl
jecxz
xchg
and
jmp
jno
fadds
sub
fnsave
adc
les
jl
cwtl
xor
dec
outsb
add
mov
lea
inc
cmp
cwtl
push
call
cmp
in
cmp
push
mov
test
shll
mov
mov
jns
push
pop
mov
lock
pop
sbb
sub
dec
mov
stc
test
pop
jge
and
dec
or
shlb
mov
mov
es
xchg
xchg
ljmp
push
xchg
and
jecxz
mov
sti
cltd
jecxz
pop
and
fldt
aaa
adc
add
cmp
gs
aas
outsb
insb
mov
sbb
sarb
rcrl
fisubl
aam
lock
or
xchg
outsb
std
icebp
movsl
inc
shl
leave
rol
jns
mov
add
or
fnstcw
rolb
dec
roll
jmp
add
and
fs
lret
mov
mov
adc
xor
jo
nop
xchg
add
popa
mov
xchg
lcall
and
mov
mov
rcrl
push
dec
jecxz
stos
cmp
xchg
dec
dec
popf
fneni(8087
pop
scas
jg
fisubrs
aaa
int3
shl
pop
sub
and
jg
inc
cld
jecxz
fs
aad
add
in
leave
insl
ds
mov
mov
sub
mov
ds
imul
mov
or
rorl
cmp
loop
or
imul
mov
mov
pop
jle
mov
xor
jp
pushf
xchg
jl
dec
pop
or
int3
jecxz
fidivrl
sbb
and
cmp
push
daa
inc
fisttpll
pop
pop
push
call
rclb
xchg
testb
cld
ss
xchg
vpcmpeqd
add
fs
dec
add
push
lret
cs
push
orb
out
xchg
mov
adc
shll
sbb
into
adc
ss
mov
test
sub
pushf
dec
add
push
and
jbe
xor
sbb
shrb
inc
loope
jne
ret
pcmpeqb
cmp
dec
mov
pusha
jno
xchg
lds
mov
pusha
pop
jg
fmul
and
inc
push
or
sbb
std
test
push
jmp
jg
ds
pop
roll
sahf
cmp
outsl
addr16
pop
ret
xchg
jae
jo
das
mov
sub
sbb
push
mov
xlat
insl
jmp
mov
jne
shll
test
xchg
daa
in
cmp
addr16
cmpsb
push
sub
fcoml
mov
fimull
es
ret
sub
int
test
mov
std
mov
out
xchg
rcr
pop
push
je
rolb
dec
push
stos
fcompl
testb
fldt
mov
xchg
xor
lods
push
std
in
and
nop
sub
mov
cmpsl
adc
popl
or
pop
dec
xchg
add
jge
mov
jecxz
cmp
int
mov
lock
mov
fsubl
mov
adc
imul
push
mov
fsubs
loop
xchg
xchg
out
dec
pop
shlb
push
repz
dec
in
sub
fwait
mov
pop
xor
xor
inc
add
xchg
push
push
xlat
xchg
sbb
sub
enter
mov
xchg
push
jne
add
xchg
sub
mov
dec
inc
push
mov
or
xchg
into
lret
das
loop
mov
sub
cs
mov
cmpb
mov
jno
pushf
sbb
inc
daa
dec
jl
pop
fidivl
bound
pop
lahf
in
sbbl
bound
xchg
mov
arpl
add
aad
adc
fwait
jecxz
divb
xor
and
mov
xchg
add
jno
mov
pop
jno
xor
jo
cmp
add
hlt
mov
clc
rcll
xor
lock
push
imul
inc
aam
cs
mov
stc
popf
adc
cmp
cmpsb
sbb
cmp
inc
fwait
mov
cld
jne
fisubl
shrl
aas
in
sub
stos
inc
mov
inc
inc
aas
mov
rcrb
pop
mov
mov
enter
inc
pusha
divb
repnz
movsb
lret
xor
mov
mov
setl
sbb
sbb
dec
sbb
lea
test
sub
loopne
lret
and
and
inc
sbb
jbe
mov
imul
xor
mov
hlt
push
cltd
push
push
mov
jae
mov
xor
js
pop
lock
sub
cs
scas
scas
mov
xor
dec
sub
add
in
outsl
into
mov
dec
mov
mov
jbe
push
shlb
sub
adcb
shl
add
stos
mov
add
and
or
and
mov
loopne
arpl
faddl
iret
fsubr
jns
push
outsb
xor
jo
pop
mov
jmpw
cmp
sub
push
cmpsl
fistpll
mov
orb
or
mov
pop
ss
aad
out
jmp
fwait
addr16
jmp
mov
dec
mov
mov
add
clc
cmpsl
outsl
sub
add
jg
inc
sarb
fsubrp
mov
rclb
cmc
pop
ljmp
fstpl
ss
jg
jge
push
sbb
mov
jl,pn
mov
mov
xchg
stc
mov
js
inc
lret
cmp
fildll
mov
and
pop
mov
or
insb
fs
ret
icebp
dec
jecxz
jb
jne
sbbb
sbb
gs
pop
sbb
xorl
pop
jle
mov
mov
cmp
sbbl
dec
mov
sbb
mov
add
in
rclb
jae
cs
xchg
and
flds
inc
pop
sbb
dec
aaa
jae
pushf
jne
mov
dec
sub
stos
lahf
aaa
inc
ss
or
sub
into
push
lea
fstpl
xor
popf
pop
repnz
loopne
mov
jb
movsb
adc
shrl
andl
pop
xor
cmpl
in
imul
adc
add
stos
mov
inc
jl
out
pop
fwait
add
in
lret
mov
scas
sbb
and
call
test
pop
popa
test
in
push
pop
or
stos
and
cmp
xor
mov
lock
scas
loope
cmp
rolb
mov
mov
sub
dec
xor
aas
call
adc
mov
loop
in
fmuls
sbb
lret
jnp
pop
inc
push
dec
cld
adc
hlt
dec
pop
xor
shlb
subl
jb
test
daa
mov
cmpb
lahf
fs
pop
in
lret
adc
repnz
leave
pop
lahf
cmp
adc
sar
and
mov
int
sbb
pop
push
jae
xor
add
mov
push
arpl
xor
inc
mov
shlb
repz
dec
test
aad
sti
jae
pop
push
subl
mov
std
jno
sub
mov
cmp
jle
dec
jge
into
pop
out
jle
insb
xchg
or
cmp
pop
loopne
dec
lds
inc
lcall
gs
cmc
and
clc
fcomi
inc
add
or
lret
mov
shrb
mov
sahf
test
jmp
movsb
or
cmp
inc
fmulp
in
xor
jl,pt
adcb
call
shlb
addr16
push
cmp
sbb
cmpl
mov
pop
xchg
shr
or
sbb
fwait
sbb
test
pop
mov
xchg
aas
mov
inc
aad
fadds
pop
sbb
fistl
push
jns
frstor
xor
push
sub
push
data16
or
in
jge
jle
adc
cltd
mov
sub
pop
hlt
push
sub
mov
sar
mov
xchg
test
stos
or
testb
insb
add
xor
push
out
jl
and
jg
lds
test
dec
movsl
lret
jle
mov
xor
sbb
fwait
call
inc
jge
stos
icebp
arpl
js
jmp
cmp
adc
sbb
xorl
xchg
adc
xchg
lods
dec
xor
jns
das
sbb
mov
add
sub
stos
es
cli
mov
daa
and
cltd
add
pop
lret
push
icebp
push
int3
sarb
mov
fmuls
repnz
sbbl
pop
sti
add
mov
arpl
ret
mov
xor
call
add
inc
mov
in
adc
popa
pop
nop
dec
pop
dec
nop
clc
sbb
ss
call
pushf
call
jns
or
lds
addr16
out
out
sub
inc
mov
mov
cmpsb
and
mov
dec
pop
sub
insb
mov
ret
dec
add
pop
mov
or
xor
push
mov
test
mov
test
mov
fwait
pop
stos
adc
mov
outsb
xor
xchg
insl
inc
cld
push
ljmp
mov
xor
xor
dec
mov
test
xchg
lahf
mov
adc
cmpsb
jp
push
outsl
adc
mov
cmpsl
mov
jmp
in
leave
or
jno
jecxz
mov
popf
test
incl
sub
push
stos
es
xor
mov
adc
ret
pop
mov
cld
xor
mov
jle
outsl
sub
shrb
idiv
jmp
stos
pop
aas
aaa
mov
ret
out
test
xchg
popa
cmpsl
cmovl
xchg
inc
stos
mov
lods
test
mov
mov
bound
sbb
add
or
jmp
dec
insb
sub
sbb
xchg
pop
sub
inc
rcr
in
cmpsb
sub
test
cmp
scas
or
sbb
mov
mov
mov
jne
sub
inc
or
stos
pop
adc
fistps
mov
mov
xor
mov
push
pop
sub
fldcw
cmp
roll
push
mov
pop
jge
lock
loopne
fstp
xchg
daa
cmp
lea
test
and
pop
std
cmp
mov
lret
pop
xor
or
add
adc
adc
jp
mov
int3
jge,pn
je
lods
jne
push
pusha
add
lret
pushf
divb
pop
dec
cmpsb
pop
and
xchg
cli
mov
sub
nop
pop
adc
mov
out
gs
sti
sbb
daa
movsl
sbbb
nop
or
dec
arpl
movsb
and
outsb
das
cltd
daa
int3
nop
lods
jb
das
das
xchg
pop
cmpsb
xchg
push
insb
in
mov
sbb
out
xor
mov
outsl
out
stos
mov
push
mov
dec
imul
nop
out
mov
orb
sub
lret
das
lea
push
pop
js
jmp
jnp
clc
fldt
fildll
mov
sub
mov
dec
jae
or
cmp
xchg
or
fwait
sub
mov
aaa
and
mov
out
pop
dec
js
push
ret
add
dec
loopne
xchg
jle
out
shl
pushf
cltd
mov
adc
or
dec
in
inc
mov
xchg
inc
mov
push
inc
sub
mov
inc
js
lfs
arpl
push
push
mov
add
flds
jecxz
lahf
push
scas
in
add
movsl
and
jecxz
push
mov
lea
jg
arpl
idivb
testl
mov
gs
call
in
jmp
ret
ja
xor
pop
inc
xchg
mov
ds
iret
dec
aas
mov
loopne
data16
in
aad
or
xchg
mov
cmp
orb
mov
into
and
push
js
repz
jge
icebp
leave
cmp
stc
insl
out
push
cmp
cmp
popa
xor
or
mov
fwait
aas
adc
push
gs
test
fldl
or
jns
scas
pop
xchg
xchg
jecxz
add
pop
into
jns,pn
jmp
mov
mov
inc
test
in
outsl
cltd
sbb
cs
shlb
out
in
mov
imul
test
xor
push
nop
push
push
adc
and
push
xchg
and
icebp
andb
data16
insb
mov
es
mov
lods
sbb
sub
in
imul
shr
cmc
sub
mov
filds
push
add
hlt
inc
and
stos
xor
push
jl
inc
push
pop
add
jle
adc
sbb
xor
push
imul
shrl
insb
pop
dec
loopne
ljmp
pop
sarb
jbe
xchg
jns
and
in
xchg
mov
daa
push
mov
bound
xchg
mov
add
or
cmp
cmp
or
inc
daa
addr16
test
sbb
subl
push
fbstp
adc
mov
push
pop
lods
ret
xor
aad
mov
ja
sarb
jecxz
imul
add
repz
add
sub
fstps
decl
cmpsl
data16
loopne
push
push
push
mov
add
cltd
xor
mov
scas
and
mov
int
ss
pop
mov
sbb
push
or
sub
shl
xor
mov
jnp
out
mov
mov
stc
jno
and
rol
pop
fildll
testb
mov
movsl
inc
mov
jge,pt
loopne
fldl
mov
sbb
add
mov
mov
cltd
pop
cmovae
out
dec
jns
jo
lret
fs
out
pop
and
cmp
aam
jmp
lret
cwtl
iret
dec
adcb
sbb
add
mov
sub
mov
data16
xor
cmp
ret
mov
mov
mov
fnsave
adc
jae
xor
into
ret
cmpl
sbb
push
sbb
and
icebp
jle
mov
xchg
sbb
sbb
and
xchg
es
pushf
jb
xor
cli
mov
inc
arpl
cld
mov
push
test
mov
outsb
add
mov
imul
in
shll
cwtl
insb
jmp
mov
mov
enter
jg
and
stos
push
inc
mov
popa
imul
stos
add
xor
mov
push
mov
cmp
jg
sbb
add
mov
bound
xor
jmp
adc
add
jne
adc
sbbl
imul
jmp
xchg
inc
inc
das
mov
inc
mov
out
sub
fmuls
gs
push
aam
cmpsl
cmp
in
add
adc
adc
add
andb
cmp
sub
fstps
adc
stc
leave
or
lods
mov
dec
ss
mov
dec
pop
xchg
sub
scas
mov
jg
lret
dec
or
imul
fidivs
mov
je
mov
sbb
roll
or
jno
std
jb
daa
aaa
dec
sbb
dec
fdiv
add
mov
push
mov
dec
lods
jle
js
hlt
cmpl
jle
scas
movsb
pop
push
fsubl
pop
xor
in
mov
xchg
and
daa
hlt
int3
cmp
imul
sbb
inc
shrl
mov
insb
loop
lock
inc
mov
adc
sub
dec
lods
sub
mov
cltd
xor
les
push
andb
push
bnd
push
addr16
rclb
sub
adc
insb
in
adc
ror
repnz
dec
ret
dec
push
aas
sbb
inc
je
add
mov
in
push
lods
jmp
cmp
inc
cmpsl
push
pop
adc
mov
mov
movsb
inc
inc
addr16
push
mov
jl
hlt
add
addr16
pop
xchg
inc
push
xor
xor
cltd
popa
repnz
repnz
add
in
add
iret
out
mov
sub
push
bound
das
adc
incl
dec
bound
sbb
mov
jbe
aaa
jo
jo
cmp
cmpsl
xor
lods
push
lock
push
les
xor
pusha
imul
divb
fnsave
or
pop
lcall
roll
cmpl
inc
sub
cmpl
sahf
cltd
stos
xchg
pop
push
adc
pop
fnstcw
pop
lret
cmc
cs
jnp
adc
pop
leave
mov
aam
mov
jne
cld
in
xor
aad
in
lahf
add
inc
and
mov
adc
orb
rol
std
gs
and
jae
mov
xor
cltd
rorl
loop
pop
out
xchg
stc
sbb
aas
mov
jbe
movsl
outsb
dec
jp
xor
adc
daa
push
lahf
ret
fmull
cmpsl
movsl
add
cmpsl
or
mov
inc
cmp
cmp
mov
sbb
dec
adc
movsl
out
xor
mov
inc
outsl
repz
or
fs
out
push
loope
subl
idivb
bound
inc
fwait
repz
xchg
push
adc
xor
lret
cmp
out
aaa
js
mov
adc
cmc
out
out
sub
iret
or
or
push
daa
in
add
xchg
pop
lret
jno
and
stos
dec
mov
inc
xor
jae
mov
jno
or
in
cmp
dec
mov
aas
jns
lea
es
pop
xor
pop
aam
jle
jmp
mov
test
scas
stc
and
and
fbld
push
mov
xchg
cld
cmp
dec
insl
jle
dec
gs
movsb
sbb
xlat
out
shrb
jo
push
xchg
dec
pop
leave
cmpsl
xor
pop
movsb
mov
xlat
adc
repnz
xor
pop
loopne
ds
dec
jp
out
jmp
jmp
jb
ljmp
dec
xchg
scas
daa
jns
fdivl
das
jne
dec
mov
in
fsubl
jmp
in
jne
dec
add
and
hlt
arpl
push
sub
icebp
jle
and
sbb
stos
mov
int
or
mov
es
js
mov
cmp
gs
inc
enter
mov
xor
push
xor
lahf
fmull
xor
sti
lods
out
xchg
cmpsb
std
and
lds
lods
xchg
cmpsb
fistps
mov
push
add
mov
lcall
jge
inc
cmpsl
dec
lcall
cli
sub
jno
push
push
lods
mov
ret
mov
jg
insb
mov
mov
jecxz
pop
test
iret
lea
jmp
sbb
loopne
and
sbb
mov
scas
cmp
pop
mov
ljmp
es
sbb
mov
popf
dec
push
roll
loope
xchg
int
aas
cmp
xlat
lods
cmp
push
xor
movl
call
inc
orb
and
iret
cmp
jg
int3
arpl
fldcw
movsl
push
jp
or
cmp
notl
out
sub
add
sbb
push
arpl
add
imul
mov
pop
xor
adc
hlt
imul
mov
jno
or
out
mov
sub
cli
test
ss
pushf
add
mov
pushf
add
repz
and
and
nop
push
mov
sbb
sbb
mov
fadd
mov
cmp
pop
jecxz
test
lret
jmp
jno
push
out
scas
push
pop
dec
mov
fs
rcll
xchg
push
sbb
mov
cmp
cmpsl
call
dec
or
mov
lods
or
mov
sub
stos
unpckhps
jp
xchg
jl
int
gs
test
cwtl
andb
faddl
pusha
or
jmp
dec
call
hlt
lds
je
add
cmc
mov
xor
cmc
mov
scas
ret
dec
mov
jno
push
test
cmpb
mov
sub
mov
cs
mov
cltd
cld
jno
add
and
pop
jl,pt
pop
outsb
mov
sub
mov
sub
mov
fnstenv
cmp
in
push
fidivs
mov
xchg
pop
in
mov
xchg
add
dec
sbb
jae
jae
dec
fsubrs
insl
jne
dec
mov
lock
dec
and
hlt
xor
pop
xor
fidivs
pop
jecxz
xchg
add
andl
mov
xor
mov
fs
lods
pop
div
xchg
js
sub
push
ret
push
jge
shrl
iret
ficompl
add
pop
ret
lret
mov
xchg
mov
pusha
iret
sub
ret
xchg
inc
cmp
das
lcall
or
xchg
xor
sbbb
fisttps
enter
dec
fwait
sti
mov
pop
sub
mov
and
or
mov
push
out
repnz
jno
into
sub
mov
lcall
push
bound
add
sti
div
jae
mov
add
sarb
into
bound
inc
add
cs
fisubrl
iret
lock
lcall
fabs
jb
test
insl
ret
and
mov
cmp
aas
cmp
mov
sarl
pop
js
xlat
loop
dec
xor
cwtl
xchg
fmuls
xchg
rolb
jbe
mov
jae
push
ss
hlt
mov
mov
push
inc
shlb
ror
int
cmc
js
pop
sub
dec
push
faddp
aad
cmc
sbb
out
mov
xchg
stos
xchg
fwait
xor
stc
clc
xchg
mov
cltd
shl
inc
push
lret
fdivl
es
inc
sti
sbb
or
jg
aad
jge
xor
push
lock
jnp
adcb
lcall
faddl
lcall
mov
arpl
lret
pop
mov
sub
xchg
pop
push
jmp
subb
fildl
pop
jnp
mov
jmp
mov
push
lds
push
lods
mov
mov
setle
daa
inc
push
mov
jg
xchg
and
cmp
mov
sar
mov
sub
pop
out
fbstp
push
data16
leave
sbb
dec
je
insb
or
and
loope
mov
xchg
mov
fwait
paddusw
ljmp
bound
mov
cmc
insl
mov
lea
push
cmpb
addb
push
loope
inc
dec
cmpsl
dec
cld
cld
xlat
test
test
cmp
imull
cmp
loopne
dec
mov
lods
pop
push
sub
mov
add
adc
popa
outsl
add
xor
fsts
mov
inc
mull
mov
das
mov
inc
into
pop
ret
pop
xchg
dec
xchg
sti
loopne
das
jno
fdivrl
xchg
mov
shlb
xor
out
push
mov
or
loopne
mov
pop
mov
and
push
push
outsl
lret
testb
orl
arpl
cmp
sti
mov
sub
iret
nop
rcrl
lret
mov
add
lret
test
adc
mov
sahf
jl
call
push
dec
xchg
in
cwtl
sti
cwtl
or
xor
ja
data16
ljmp
scas
push
add
ds
scas
and
int3
int
cmp
sbb
pop
or
jmp
test
mov
ret
mov
inc
int
fwait
pop
xchg
jecxz
in
fstps
rcr
add
js
jp
mov
insb
hlt
jns
sbb
test
int
mov
adc
cli
jnp
in
and
pop
pop
adc
mov
jg
sub
fwait
add
js
cltd
movsb
imul
inc
inc
and
mov
fsubrl
decb
int
std
dec
adc
orb
inc
pop
dec
dec
mov
iret
and
loopne
sub
mov
ja
inc
dec
dec
andl
addr16
push
dec
fldl2e
adc
in
xchg
aas
jbe
xlat
ljmp
sub
xor
test
ds
jl
or
and
and
jo
loope
js
xor
jp
sbb
dec
mov
add
addr16
sti
imul
test
dec
cmp
cmpsl
sarl
add
and
test
xor
or
bound
pop
fnsave
mov
xor
sbb
jmp
sbb
adc
xchg
ficomps
in
dec
xor
cmpsl
push
cs
mov
or
mov
inc
fwait
cmp
cwtl
decb
add
orb
mov
arpl
repnz
insb
xor
shll
push
dec
lea
icebp
or
sbb
xor
push
sub
xor
mov
xor
loope
mov
jbe
ficompl
int3
in
arpl
into
popa
les
add
jge
xor
pop
lret
icebp
aaa
in
push
inc
xchg
sti
xchg
and
jae
out
sbb
int
pop
fwait
sbb
arpl
mov
dec
and
fcoms
arpl
andb
icebp
jg
arpl
lea
mov
xor
add
jge
and
lods
bound
lods
jmp
lcall
fsubl
xchg
out
cmp
mov
jp
sbbl
imul
outsl
xlat
pop
sbb
lock
std
loope
mov
mov
or
dec
xor
add
jno
fcoml
sub
sbbb
out
out
jecxz
add
inc
xchg
mov
add
and
ljmp
in
and
mov
or
cmc
pop
xchg
test
xor
mov
dec
adc
dec
ret
sub
shl
loopne
mov
enter
push
js
mov
pop
sbb
cmp
addb
ss
mov
pop
or
loopne
push
cmp
sbb
push
fisubl
mov
fwait
cwtl
jne
xchg
pushf
testb
inc
mov
roll
outsl
or
sti
sub
xchg
jle
dec
mov
pop
jg
sbb
sbb
js
ja
int3
lock
mov
scas
mov
jp
shrb
cmpsb
popf
push
test
add
pop
mov
mov
lds
push
into
push
mov
and
mov
jmp
xor
xchg
addb
hlt
popw
lods
into
int3
add
adc
popa
out
popf
xchg
out
mov
dec
iret
mov
into
xlat
jbe
pop
in
xchg
lcall
jmp
cwtd
lds
inc
lds
push
mov
dec
dec
pop
cmp
les
xchg
push
jg
lfs
adc
mov
pop
jle
xor
mov
sbb
jg
mov
cmp
and
cmpsl
movsb
sbb
rcl
jle
in
push
icebp
mov
xor
mov
andb
jae
cwtl
pop
jns
gs
push
sbb
int
in
dec
int
mov
sub
mov
cltd
inc
dec
pushf
in
sub
add
cwtl
and
test
jge
test
rorb
mov
or
add
in
add
xor
fcmovne
cmpsb
sbb
sbb
gs
mov
push
popf
int
mov
decl
cli
jmp
iret
repz
in
andl
fsubr
sar
sbb
fs
push
dec
or
jbe
mov
pop
jmp
adc
push
jae
pop
hlt
xchg
cs
popf
adc
leave
lds
cltd
mov
repnz
dec
test
lea
mov
mov
les
xchg
imul
gs
mov
sub
jmp
xchg
mov
jb
or
mov
mov
xchg
cmp
jae
ficompl
mov
jnp
or
push
js
ja
sub
pop
dec
lods
out
lret
cs
ljmp
out
xor
lea
stc
stos
sbbl
js
pop
lea
fdivl
jns
call
add
inc
jae
cmc
inc
mov
fs
sbb
inc
das
adc
add
and
jmp
pushf
adc
jne
int3
dec
incl
mov
lock
xlat
and
and
rcr
das
mov
gs
mull
out
mov
loop
ret
adc
icebp
xchg
mov
pop
xchg
in
mov
mov
ljmp
pop
mov
push
xor
daa
sbb
push
mov
push
inc
sub
push
loopne
sbb
repz
neg
ror
stos
mov
in
jb
mov
int3
mov
cwtl
mov
pop
inc
lock
rolb
jne
insl
pop
jnp
jg
in
mov
mov
mov
movsl
ss
and
out
jmp
enter
mov
sbb
sub
leave
fldenv
mov
clc
fadds
jae
rclb
fldt
mov
cmp
dec
outsl
xchg
mov
mov
sbb
shl
sub
std
push
fsts
jae
jno
jg
sub
mov
in
mov
xor
dec
sti
push
sarl
inc
clc
movsb
mov
mov
std
aas
push
inc
sbb
insl
push
mov
mov
shl
cmp
loopne
movsb
push
in
sahf
stc
mov
aad
and
push
jb
and
jne
dec
scas
outsl
xlat
outsl
xchg
adc
into
mov
call
mov
mov
xchg
pop
push
push
pop
mov
ret
rorb
dec
push
int3
dec
lea
js
lock
pop
insl
dec
or
inc
loope
dec
xchg
mov
movsb
fcoml
push
into
xor
jg
loope
push
mov
std
mov
cmpl
mov
gs
test
mov
jmp
mov
aam
adc
inc
or
mov
sub
sub
add
xor
out
adc
cld
loop
mov
mov
cwtl
pop
fs
rcl
aad
sbb
inc
jl
lahf
cmpsb
cmp
xor
insl
es
jno
push
cmp
inc
add
notb
lock
xchg
fcoms
jg
leave
xlat
lds
mov
cltd
mov
xchg
cmp
ftst
fwait
imul
popa
fildl
iret
sub
xchg
xor
sub
add
push
jo
movsl
pop
lods
ljmp
scas
cmc
popf
in
mov
cmp
mov
push
sub
jnp
dec
outsl
pop
rclb
shll
xor
inc
cld
push
push
jecxz
mov
out
repz
call
sbb
sar
mov
or
sbb
cltd
jg
or
adc
das
les
fmull
mov
mov
push
mov
sub
ljmp
das
cmp
sbb
adc
xchg
js
push
ja
movsb
movsb
sub
inc
in
mov
repz
cmp
pop
mov
cmp
mov
pop
mov
jae
jecxz
fldcw
loope
cld
cs
inc
sbb
scas
stos
outsl
xchg
xor
mov
sbb
push
cmpsb
mov
pusha
cmp
cmp
mov
jmp
jmp
xchg
bound
xor
sahf
xchg
cmpsl
sahf
pop
xor
push
out
mov
jg
inc
pushf
insl
and
inc
fildll
xor
aas
sbb
adc
test
mov
pushf
mov
jne
rcrl
dec
sub
sbb
jo
and
js
movsb
or
fidivrl
add
data16
je
in
xorl
jp
fdiv
xlat
aad
ljmp
pusha
cltd
add
inc
bound
and
je
mov
jmp
mov
or
xchg
or
sub
xor
and
mov
and
cmp
pop
mov
mov
xchg
pop
in
jge
dec
sbb
ret
sbb
mov
clc
sbb
dec
aad
pop
dec
stc
outsb
adc
dec
mov
ficompl
sbb
push
jbe
or
movsl
jns
cltd
in
scas
sub
xor
pushf
loopne
push
or
test
push
mov
jno
in
fnsave
fcmovne
lret
mov
sbbb
ficompl
pop
loop
jecxz
sarl
out
cmp
fsubrs
cld
test
push
dec
lret
shll
nop
fldenv
mov
js
and
adc
pop
dec
addr16
cmp
and
xchg
je
mulb
xlat
cmp
pop
aas
insl
addr16
adc
jecxz
push
lock
cmpsl
pop
lret
inc
cli
in
sbb
dec
or
push
andl
pop
inc
pop
push
pop
or
stos
sub
jl
sbb
jecxz
mov
dec
out
push
in
leave
out
xchg
xor
pushf
xor
fldl
jg
inc
mov
fcomps
push
fs
rcl
jae
add
mov
lea
hlt
pusha
outsl
mov
add
xchg
shr
cltd
mov
lret
fsub
mov
inc
cmpsb
jge
jl
add
adc
push
dec
xchg
and
dec
fisttps
aad
cmpsl
push
dec
loopne
mov
jge
mov
shl
fstp
cmpsb
mov
xor
xchg
sub
sub
dec
pop
push
ret
lea
sarb
inc
shrl
aas
sub
mov
xor
push
mov
int3
xor
arpl
push
pop
in
xchg
xor
jno
or
lds
mov
shl
in
testl
xchg
and
pushf
outsb
cmp
movsb
inc
jae
dec
lea
xor
sti
insl
loope
test
inc
sahf
arpl
push
movsb
test
mov
or
add
add
dec
cmp
mov
adc
push
loop
movsb
rorb
test
jns
inc
fcompl
sub
fwait
repz
into
call
fld
push
mov
rclb
mov
fs
outsb
mov
incl
icebp
popa
push
xchg
push
xchg
pop
iret
sub
movsb
lret
mov
imul
sub
es
addb
jnp
repnz
test
popf
and
jl
dec
insb
or
jmp
and
enter
std
lds
add
addr16
add
sub
scas
rolb
push
dec
fildll
xor
mov
mov
cld
inc
pop
pushf
jno
pop
orl
pop
cmpsl
or
and
gs
fldenv
ret
lods
shrl
cli
sub
fistpll
imul
ret
cmp
lea
nop
push
push
mov
jb
jno
push
pop
lds
out
cmc
lea
push
xchg
ljmp
std
mov
js
mov
ret
pop
rcrl
subb
or
xchg
push
push
jmp
sahf
outsl
shll
orb
mov
push
mov
jecxz
out
out
or
xor
rorb
adc
movsl
movsl
pop
rep
fsubs
es
jmp
push
add
test
movsl
or
or
test
adc
mov
jle
das
fadds
pop
jg
clc
xor
xor
fsubs
mov
loop
dec
aam
daa
inc
push
mov
sbb
out
test
cmp
nop
jmp
idivl
imul
push
iret
add
mov
pop
ljmp
lahf
in
ret
mov
mov
mov
pop
push
cli
inc
adc
mov
bound
jg
in
enter
xor
jo
mov
lret
pop
outsl
jmp
adc
ja
out
insb
bound
bound
adc
inc
gs
or
repz
mov
dec
xor
push
mov
fisubs
push
adc
mov
pushf
cs
xchg
mov
and
fwait
add
mov
test
or
cli
lcall
or
inc
sahf
xchg
push
mov
mov
inc
or
inc
push
and
push
cmp
jne
cmp
test
pop
cli
repnz
mov
in
and
xchg
out
mov
inc
cli
adc
and
sub
iret
in
inc
push
outsb
insb
scas
fnstsw
adc
mov
loopne
xchg
cwtl
sbb
pop
shrl
push
divl
bswap
inc
xor
sbb
inc
xorl
clc
inc
pop
dec
shrb
jle
mov
push
fisubs
and
out
mov
cld
mov
inc
mov
lods
cltd
inc
fwait
inc
shrl
mov
sbb
test
cmpsl
call
jp
rep
mov
cmp
mov
inc
add
sbb
mov
or
and
sub
push
imul
and
mov
add
lock
and
scas
pop
shrb
enter
lcall
fcoms
addr16
cmp
imul
jmp
jno
and
mov
ljmp
inc
in
cmp
popa
sbb
sbb
adc
test
cmp
loope
or
lock
xchg
std
xor
ljmp
cmp
pop
xor
rcr
js
aaa
popa
sbb
mov
cwtl
test
scas
popa
jb
sbb
xor
mov
sbb
lock
es
jg
xlat
in
lea
test
lret
insb
shl
loop
and
jb
adc
push
jbe
ss
pop
repz
push
push
scas
pop
test
jge
push
xchg
sbb
jmp
pop
sub
mov
jge
stc
aaa
pushf
adc
cmp
xchg
mov
jge
mov
movsb
shrl
mov
inc
add
ds
lcall
insb
iret
jge
ficoml
cmp
pop
ss
out
fwait
into
aad
add
rcr
mov
add
fmull
arpl
or
and
sub
in
shrl
mov
lods
lcall
adcl
cmpl
mov
adc
js
xor
mov
jnp
inc
or
es
push
gs
xchg
lea
aad
aam
xor
and
dec
out
rorb
sbb
adc
adc
cli
vmovupd
lret
pop
add
test
mov
aaa
pop
mov
and
jg
out
mov
mov
movsb
mov
push
cmp
dec
fs
push
mov
adc
ja
push
jge
clc
leave
or
sbb
dec
das
dec
sbb
and
xlat
xor
jp
insb
xor
adc
add
jne
sbb
inc
push
seta
sub
ss
inc
mov
cmp
je
bound
inc
sub
adc
sub
push
mov
dec
loopne
addr16
push
jno
test
mov
xchg
mov
push
push
js
sub
sbb
pushf
fdivr
in
cltd
add
push
dec
pop
repnz
sbbl
es
bnd
out
xor
or
int3
add
xor
ficoms
stos
sbbl
fcomi
mov
mov
mov
aam
lods
out
sbb
test
jbe
pop
mov
cmp
mov
imul
out
out
int
fucomi
xor
mov
test
pop
enter
mov
cmp
mov
sbb
mov
and
adc
mov
shll
jne
mov
mov
test
xor
cmp
sbb
test
dec
jmp
jecxz
pop
mov
cmp
sub
xchg
mov
in
mov
cmpsb
or
pop
hlt
dec
cmpsb
movsb
cmp
arpl
in
cltd
sahf
addr16
ret
das
out
pop
dec
and
insb
dec
fcomip
mov
les
xchg
sub
sahf
cmc
in
jb
mov
mov
dec
mov
xchg
cmpsl
push
dec
lahf
mov
push
add
sub
push
fs
mov
inc
out
lds
and
sarb
pop
xchg
jo
and
mov
in
and
jecxz
testl
repnz
call
cmp
je
scas
cmc
test
cli
inc
push
push
test
push
mov
dec
dec
mov
neg
out
hlt
outsl
lret
loop
sub
into
movsl
cmpl
pop
push
adc
das
andl
lods
test
sub
popf
or
lahf
sbb
adc
jns
pop
or
lods
in
push
out
cmc
or
or
loope
inc
jg
aad
sub
inc
cmc
faddl
stc
or
push
jge
jg
aaa
and
filds
loopne
xor
inc
in
pop
std
outsb
push
add
inc
jno
movsb
adc
sub
lock
adc
pusha
clc
ss
lods
inc
loopne
jns
dec
sub
in
leave
int3
notl
frstor
das
sub
mov
mov
lock
and
test
sub
lret
cmp
negb
imul
mov
mov
ret
lret
leave
test
xchg
repnz
mov
fists
shll
mov
jbe
outsl
mov
lcall
dec
out
jbe
lret
shrb
sbb
adc
push
imul
shll
mov
enter
int
into
addb
pop
and
pop
pop
subb
loopne
loope
sbb
adc
js
adc
cmp
adc
pop
in
pop
push
cmp
pusha
std
out
jle
hlt
dec
dec
test
aam
inc
sub
andl
dec
dec
add
push
mov
xor
sub
lret
and
push
mov
test
dec
mov
mov
pop
jno
pop
xchg
iret
mov
pop
mov
mov
sti
rol
inc
xor
cmpsl
xor
add
xor
repz
mov
cltd
dec
shlb
lret
push
sub
lret
nop
cld
hlt
addr16
jl
call
mulb
xor
pop
test
into
dec
adc
repnz
stos
cs
mov
cmp
std
cmpsl
lods
xor
pop
aad
pop
dec
ljmp
push
aas
xchg
aam
mov
popl
mov
pop
jns
xor
cmp
push
push
add
xor
cs
xchg
sbb
int3
jno
xor
jle
jle
out
lret
push
pop
mov
andl
adc
jp
xchg
enter
ljmp
fidivs
les
cs
xlat
incb
adc
pushf
clflush
daa
lds
cmc
jecxz
push
inc
jnp
pushf
add
inc
push
outsl
cmp
add
arpl
xor
rcpps
push
push
dec
mov
mov
cmp
push
out
mov
pop
cmp
push
add
jo
xchg
push
mov
cmp
mov
pusha
fsubrs
pop
jne
mov
cmpsl
xchg
roll
push
mov
inc
cld
daa
ret
and
push
aas
mov
negb
jle
xor
and
ds
mov
push
mov
jge
add
in
mov
adc
in
test
mov
out
or
dec
sub
int3
add
lahf
pop
add
pop
out
loopne
add
mov
mov
js
adc
pushf
mov
add
sub
dec
cld
mov
in
jae
xchg
jno
icebp
das
in
imull
push
mov
adc
outsb
cmp
xchg
push
rolb
fildl
mov
add
mov
inc
pop
cmp
mov
jo
ret
mov
dec
fbstp
mov
mov
push
fsubrl
jle
and
sarl
adcb
stos
or
inc
leave
jne
inc
mov
idiv
adc
add
mov
fstpt
cwtl
std
dec
aas
mov
into
in
jmp
popf
push
mov
mov
cmpl
dec
or
inc
or
ss
xchg
rorl
imul
in
and
daa
pop
mov
or
sub
jg
xchg
dec
clc
sub
lods
aas
rcr
dec
xchg
pop
xor
insl
adc
sbb
push
or
sete
dec
ss
sbb
cltd
pop
mov
adc
cmp
sub
mov
js
mov
or
test
push
pop
sti
jecxz
rcrb
mov
scas
rclb
mov
ret
inc
push
cmp
cmp
dec
lahf
or
sbb
adc
mov
pusha
mov
js
lock
xlat
jge
inc
sti
dec
in
xor
addl
sbb
lret
push
pop
inc
out
jp
mov
stos
push
sarb
pop
xchg
ja
movsl
xchg
dec
out
icebp
lahf
cmpsl
aaa
mov
enter
decb
add
pusha
je
xor
jb
jae
sub
int3
push
fnstcw
add
lea
pop
out
dec
sbb
stos
xchg
xchg
sub
pushf
xchg
mov
sub
test
pop
gs
ret
or
cli
fistpll
sbb
and
pop
int3
fwait
and
cmp
xor
negb
push
enter
aam
lahf
scas
jge
cmpsb
cmpsl
sbb
in
and
adc
mov
pusha
lods
into
or
or
inc
dec
imul
mov
sbb
xchg
icebp
fildll
mov
sub
adc
or
mov
xor
inc
pop
lods
aas
sbb
jp
cs
jl
jl
scas
rol
cmp
leave
stos
or
and
scas
lock
lea
mov
imul
cmp
out
and
mov
pop
xchg
sbb
push
jl
imul
fbld
mov
push
sbbb
in
in
ss
jmp
xchg
je
lret
out
dec
movsl
add
mov
push
inc
rorl
xor
mov
cmc
dec
pop
or
in
lret
rcl
and
mov
and
daa
rcrb
push
rep
jno
sub
in
dec
mov
xor
imul
mov
rcr
scas
test
push
dec
rorl
jno
fisubrl
int
push
push
scas
xor
leave
fwait
sbb
mov
sbb
out
xor
jmp
fdivl
fisubl
jno
imul
shlb
pop
add
pop
inc
ficoms
push
pop
jecxz
andb
sub
stc
enter
hlt
adc
outsb
mov
daa
stos
daa
rorl
sub
mov
pop
jecxz
or
movsb
and
push
mov
out
cmp
cs
push
test
mov
addb
cmpsl
sbb
repnz
mov
repz
int
sub
outsl
xor
or
jge
fnstsw
fcomi
push
mov
pushf
lret
insb
and
jb
roll
aas
sbb
inc
push
dec
in
js
movsl
out
and
repz
mov
shlb
pop
pop
cmp
mov
sub
inc
inc
jmp
fs
push
movb
or
aaa
repnz
lcall
xor
mov
jmp
xlat
sbb
fnstenv
mov
test
loope
jp
push
xor
rdtsc
loopew
inc
mov
fwait
loop
rcll
call
fidivs
jnp
sub
test
xor
icebp
in
jnp
cli
add
xorb
and
les
incl
inc
mov
jmp
jnp
lods
push
cmp
loop
fwait
imul
xchg
stos
cli
inc
movsb
xchg
jle
insl
jbe
cmpl
xor
loopne
fisttpll
insb
xor
dec
push
mov
dec
adcb
dec
gs
clc
mov
jmp
pop
divl
mov
push
ss
cmpb
push
pop
filds
popf
push
sbb
xor
and
in
movb
mov
cmp
dec
jb
pop
scas
push
call
adc
mov
cmp
cmc
xlat
icebp
mov
mov
sbb
jb
fidivl
mov
scas
xchg
call
clts
loope
out
data16
cmp
test
xchg
mov
adc
xchg
lods
pop
add
out
cmpsl
iret
stc
dec
or
stos
pop
or
cs
sub
cltd
dec
repz
cmpl
mov
out
mov
lods
mov
jl
fisttpl
out
mov
inc
adc
mov
cmpsb
ja
cli
mov
xchg
ljmp
std
iret
sub
mov
xchg
shrl
add
add
adc
or
mov
popf
pop
in
test
pop
outsl
stos
test
lcall
cmp
inc
xchg
mov
mov
imul
xchg
inc
jp
mov
push
fcmovbe
push
mov
nop
xchg
xchg
pop
fst
sbb
or
mov
sub
pop
mov
inc
xor
push
and
dec
lock
int3
ja
add
lret
pop
or
addb
xor
inc
add
push
cmpsb
aas
int
pusha
jae
dec
fs
jl
add
pop
fs
int3
sbbl
mov
das
sbb
sbb
add
inc
shll
sbb
adc
mov
daa
inc
lret
and
xchg
addr16
adc
add
jnp
std
test
push
adc
add
pushf
leave
push
jge
shr
fists
daa
shrl
mov
mov
mov
push
out
pop
push
pushf
xchg
adc
sbb
mov
lods
decb
pop
fimuls
cmpsb
xchg
sti
xchg
repnz
fisubl
stos
mov
shlb
push
cmpsl
aam
les
lahf
fildl
fs
fidivrs
clc
sti
icebp
jmp
mov
hlt
dec
ret
out
mov
pop
or
subb
mov
xchg
jns
adc
push
rorl
push
frstor
jbe
mov
mov
enter
cli
ja
lret
dec
or
dec
xor
mov
imul
hlt
cmp
repz
stos
cmp
add
cmpl
fwait
mov
into
mov
or
dec
inc
jmp
fld
pop
xor
cltd
add
in
mov
int3
push
fcomp
rol
stos
cs
into
shrb
fwait
cwtl
inc
fimuls
jns
sub
sub
stos
stos
cmp
lret
mov
xchg
inc
adc
jae
xchg
movsb
mov
inc
cltd
adc
xchg
cmp
push
lcall
ljmp
push
or
int3
add
cld
xchg
in
imul
les
in
push
shr
loop
adc
movsl
lcall
imul
icebp
into
sbb
mov
dec
dec
dec
mov
push
and
inc
mov
mov
lret
testb
in
in
jmp
fnsave
mov
lock
mov
loop
add
or
cli
ficomps
xchg
outsl
or
push
cmp
xor
fbstp
cmpsb
outsb
mov
mov
mov
lock
das
jbe
les
aad
and
fsubrs
movsb
dec
cmp
pop
movb
push
or
adc
add
mov
cmp
lret
subb
mov
sbb
outsl
in
push
jl
shlb
inc
int
int
dec
push
inc
in
dec
aaa
ljmp
repnz
loop
mov
pop
rcll
sbb
add
xchg
sbb
xor
popf
mov
ljmp
js
push
xor
dec
testl
pop
xchg
cltd
in
pop
inc
test
mul
fs
dec
push
lock
ss
test
sbb
mov
enter
enter
push
out
pop
cwtl
jo
loope
mov
pop
mov
sub
ret
xchg
push
add
adc
mov
sub
mov
in
aad
and
fistpl
das
pop
ds
out
dec
mov
arpl
mov
lods
jecxz
lods
out
in
pop
pop
inc
not
outsl
mov
cmp
rclb
pop
mov
dec
in
or
inc
inc
daa
out
stc
push
cwtl
sub
or
xchg
push
fldcw
jg
or
pop
mov
lahf
shr
adc
ds
xor
or
xchg
pop
lret
push
add
fidivrs
mov
mov
and
leave
cmp
mov
mov
inc
pop
jo
jae
ss
aad
inc
scas
mov
dec
cs
inc
mov
xor
pop
mov
scas
inc
push
pop
xchg
ljmp
test
fisttps
imul
rcrl
sbb
test
inc
fnstenv
and
enter
aad
sub
inc
das
test
add
stos
cmc
mov
arpl
test
and
loopne
outsl
mov
leave
adc
fists
lar
out
and
fistl
dec
jae
iret
movsl
arpl
aaa
mov
sbb
jge
mov
enter
inc
cmp
pop
cmp
jmp
aam
leave
xchg
xchg
shlb
out
and
jbe
xchg
jmp
cmp
fbstp
dec
or
mov
add
lds
and
mov
lods
mov
outsl
pop
dec
fcomip
inc
int3
or
mov
mov
test
pushf
das
mov
inc
or
mov
mov
sbb
mov
add
lret
shl
cwtl
push
mov
in
in
mov
enter
data16
fisubl
ja
or
outsl
sahf
shlb
dec
sub
sbb
mov
in
in
fcomps
dec
xor
mov
xchg
mov
jecxz
jecxz
mov
xchg
sub
aaa
push
leave
out
pop
jno
mov
ljmp
std
mov
push
sbb
or
cmp
jg
dec
cwtl
or
adc
js
icebp
mov
sahf
test
mov
push
dec
dec
repz
pop
pop
out
xlat
adc
test
out
adc
cld
mov
cmp
je
push
std
sub
out
clc
lock
pop
fsubrp
jle
mov
pop
mov
mov
in
mov
or
mov
pop
pop
rol
or
push
or
inc
adc
xchg
mov
add
xor
cmp
es
dec
shll
xchg
dec
or
sbb
sbb
pop
dec
xor
xor
sti
and
outsl
xor
inc
rcl
dec
sub
fisttps
les
ret
push
jae
mov
aas
arpl
testb
pushf
sub
rorl
in
cmp
fistl
cmpsb
mov
cmp
in
cmp
push
rclb
mov
pop
inc
bound
push
push
push
sbb
push
pop
scas
mulb
movsl
cmp
mov
xchg
fistl
fdivrl
pop
push
push
nop
inc
jo
inc
xor
cmp
fisubrs
scas
aaa
cmp
shlb
nop
leave
insl
jg
mov
test
ja
out
daa
add
xchg
ret
stos
sub
icebp
hlt
clc
loope
imul
out
into
mov
ret
out
mov
mov
jb
add
xchg
subb
cmpl
fcoml
pop
fadds
mov
out
es
mov
lcall
inc
add
push
dec
rcl
add
mov
cmpb
shlb
cltd
mov
pop
into
fwait
mov
iret
and
sti
pop
shl
aad
mov
je
sbb
cltd
mov
inc
test
rcll
jg
push
clc
ds
in
in
daa
imul
ds
sbb
jl
out
pushw
ljmp
lret
cmp
push
addl
jge
jmp
cltd
cltd
pusha
adc
sub
jne
inc
and
lea
push
dec
inc
divl
inc
push
inc
mov
inc
mov
jg
adc
xor
lods
into
out
stos
repz
and
dec
in
rclb
mov
or
int
lret
pop
arpl
sub
mov
jg
shlb
dec
aaa
inc
out
push
mov
push
popa
shrb
cmpsb
or
xor
cmp
mov
mov
in
insl
pop
fwait
sti
gs
sahf
sub
nop
outsl
mov
jns
mov
dec
xor
sbb
and
mov
sbbl
lock
int
adc
push
lods
adc
pop
xchg
adc
test
xor
xchg
sbb
or
xchg
out
out
scas
sbb
arpl
mov
xor
cmp
mov
pop
push
jl
xor
decb
mov
pop
inc
sub
inc
cltd
mov
bound
adc
xchg
lahf
cmpsl
sbb
test
jmp
loope
icebp
orl
std
mov
divl
push
out
xchg
aas
leave
sbb
mov
je
mull
dec
cltd
int3
ljmp
dec
outsl
test
cmp
cmp
xchg
inc
scas
int
dec
roll
add
lcall
and
fcoms
ficoms
loopne
hlt
or
sub
inc
xchg
push
xchg
arpl
nop
cmpsl
jge
mov
mov
inc
sarb
xchg
in
icebp
jo
fs
dec
and
aaa
loopne
imul
imul
stos
jbe
push
addr16
push
decb
pushl
cwtl
aaa
push
adc
std
test
aaa
jo
xor
cwtl
enter
jle
mov
and
rol
aas
xorb
and
pop
inc
loope
jg
pusha
sti
mov
lret
and
sbb
cmp
and
popa
lret
movsl
cmpsl
setnp
imul
daa
daa
sub
sub
fnstenv
arpl
daa
mov
inc
aam
cmp
push
es
or
push
mov
xchg
push
sub
add
stos
xchg
daa
subb
sbb
hlt
js
cld
jmp
xchg
push
xor
out
filds
or
into
std
call
mov
jne
hlt
test
shl
ljmp
xor
sbb
out
push
iret
push
popa
push
int3
jno
sar
nop
or
cmc
iret
or
shrl
jns
xchg
ss
push
popa
inc
xor
subl
into
and
jo
inc
movsl
arpl
pop
lds
aad
dec
add
incl
subl
dec
adc
cltd
repnz
rcll
and
sbb
mov
cmp
adc
mov
xor
push
fcmovnb
or
or
enter
xchg
int3
or
inc
pop
jbe
jmp
pop
aam
jmp
xchg
or
and
stc
loope
sbb
cld
push
out
jge
leave
insl
dec
or
add
mov
xor
mov
test
lcall
fsts
pop
dec
imul
cltd
add
daa
sbb
sbb
std
or
and
repnz
adc
sbb
lds
mov
sbb
adc
xchg
push
les
bound
pop
sbb
inc
jae
add
lahf
mov
inc
xor
rcr
es
das
add
iret
addl
shrb
jecxz
mov
dec
fimuls
testb
pop
mov
cmpsl
enter
xchg
push
fsubp
loope
push
pusha
pop
mov
ret
cmp
je
int3
insl
and
aam
adc
pop
sahf
fs
cmc
std
dec
xor
mov
test
adc
dec
repnz
add
pop
pop
inc
les
insl
lods
inc
sbb
lret
les
cmp
cmp
sub
mov
nop
fcoml
mov
test
xchg
xchg
mov
gs
aaa
jl
adc
cli
mov
mov
sub
sti
cltd
adc
sub
push
and
mov
movntps
push
cmp
std
sahf
fsub
sbb
xor
mov
lds
outsb
aaa
xchg
dec
push
stos
sub
lods
enter
insl
addl
fisttps
jmp
jg
sbb
je
pop
cmp
pop
rorl
sbbb
xchg
arpl
lock
popa
sbb
insb
mov
jne
movsl
imul
arpl
mov
mov
jno
push
inc
mov
add
popa
repnz
xchg
stc
or
aam
add
sbb
inc
lods
fsubrl
cwtl
in
ret
leave
gs
inc
mov
cmc
and
and
mov
and
or
add
push
scas
shlb
mov
mov
push
push
or
jae
dec
pop
lock
leave
jg
dec
addl
cli
dec
push
and
jb
inc
xchg
mov
pop
pop
and
add
push
adc
push
addr16
out
negl
push
sbb
call
mov
shll
movsb
outsb
sub
sub
daa
rclb
cmp
lret
mov
testl
negl
lcall
sub
fimuls
jno
out
loope
sti
stos
pop
mov
arpl
filds
mov
imul
cltd
mov
lock
dec
test
cmpl
jno
pop
nop
push
fwait
mov
mov
sub
pop
xor
mov
jnp
gs
mov
das
divb
push
mov
pusha
shrd
inc
dec
xchg
into
inc
shll
dec
repnz
ret
mov
rolb
mov
mov
sti
and
cmpsl
aam
lahf
xlat
xchg
sbb
and
leave
cmovae
cli
cld
xor
enter
mov
mov
inc
xlat
sbb
adc
popa
cwtl
dec
outsb
imul
int
mov
add
hlt
push
sbb
add
or
aad
xchg
mov
sbb
in
je
negb
inc
sub
fldpi
xchg
stc
mov
push
pminub
jne
mov
fiaddl
sti
xchg
lea
test
jge
es
aaa
lea
aad
fimull
data16
cmp
outsb
jp
and
pop
jge
scas
arpl
cmp
divl
imulb
ljmp
pop
dec
inc
je
ja
xor
or
cmpsl
mov
pop
and
xchg
fldt
test
xor
mov
jae
clc
jns
in
jnp
rorb
call
or
jne
fcomps
pushf
stc
in
lods
pop
jp
mov
movsl
fcmovu
in
mov
push
les
xor
inc
nop
mov
scas
dec
es
cmpsb
push
mov
jae
cmpsb
sar
mov
push
or
test
inc
and
mov
xor
aad
outsl
mov
pop
sub
inc
fcomps
lds
push
mov
mov
mov
les
ret
mov
inc
cmp
je
mov
pop
jg
xchg
stc
sub
hlt
int3
xchg
and
and
test
add
loopne
pop
or
mov
cmc
inc
pop
addl
pop
dec
jns
pop
jp
outsl
jbe
arpl
cmp
aas
dec
jno
push
push
lcall
rcrl
int3
cmp
dec
and
scas
xchg
sbb
ja
repz
mov
pop
loop
xchg
inc
test
xchg
stos
xchg
cwtl
neg
push
fs
or
adc
sahf
adc
inc
jg
cld
and
rclb
cmp
cltd
ret
imul
xlat
jmp
shll
mov
sbb
stos
bound
add
adc
outsl
dec
arpl
lcall
push
mov
inc
push
lods
out
lahf
push
scas
dec
das
xor
stc
mov
add
mov
ror
sahf
xchg
cmp
hlt
aad
push
cmp
fildll
add
cld
xchg
cmp
inc
jnp
jecxz
mov
pop
fiadds
lods
mov
lds
mov
icebp
add
outsl
in
jo
mov
pop
fs
cmc
lods
arpl
mov
and
pop
sub
mov
jg
test
cmc
nop
fwait
enter
push
pop
pop
pop
outsb
lock
inc
add
stc
jno,pn
sbb
arpl
mov
inc
rorl
testb
or
lock
fistpl
jg
xchg
or
push
aaa
inc
adc
pop
fldt
inc
mov
aas
rorl
divl
in
fisubrl
in
add
adc
sub
jbe
repnz
aas
stc
mov
add
cld
test
aad
cmpsl
cwtl
mov
mov
push
fisttpll
outsl
xchg
jmp
daa
jne
fwait
repnz
xor
and
inc
mov
xchg
mov
mov
js
sbb
popa
mov
adc
inc
jno
enter
xor
xchg
jns
test
sbb
jo
nop
or
adc
jle
xlat
xor
pop
data16
icebp
loopne
push
mov
out
imul
mov
jbe
jg
push
ret
dec
std
jmp
test
rol
pusha
test
rolb
das
mov
in
and
int3
adc
pop
sub
or
sub
cwtl
sarb
addr16
es
push
cmp
inc
sub
cmp
push
xor
sub
daa
pushf
mov
fsubl
sbb
mulb
andb
fs
xchg
adc
mov
rorl
movsl
into
test
movsb
inc
push
in
mov
add
pushf
outsl
in
ds
xor
sub
dec
hlt
in
jp
mov
and
push
push
adc
jecxz
mov
mov
xchg
out
sbb
cmpsb
fmulp
mov
sbb
dec
movsl
sub
pop
mov
popa
or
adc
mov
arpl
ret
and
scas
xlat
mov
mov
bnd
add
push
les
pusha
or
jmp
icebp
mov
stos
stos
mov
ljmp
mov
aad
add
pop
mov
mov
mov
dec
xor
call
mov
lret
push
call
bound
pop
pushf
out
call
insl
pop
ret
outsb
aad
loope
popf
in
ret
clc
push
add
xchg
jecxz
shl
jge
push
mov
sub
sbb
ficoml
int3
jmp
sbb
loopne
dec
add
pusha
mov
mov
iret
push
push
ja
fbld
sub
rorl
lcall
pop
arpl
loopne
not
jbe
sub
pushf
jmp
dec
jge
imul
roll
sub
xor
xchg
dec
rcrb
sub
xor
roll
rcr
adc
lock
insl
jne
in
dec
inc
push
fidivrl
int
mov
and
cmp
lret
in
outsl
sti
mov
xor
mov
sub
jae
mov
fwait
or
pop
cmp
subl
ss
call
les
scas
into
repnz
dec
iret
cwtl
jmp
inc
subb
pop
shlb
es
fcmovb
lcall
arpl
cmpsb
pop
mov
mov
adc
dec
xchg
sub
ret
jecxz
pusha
push
cwtl
sub
adc
dec
xchg
fwait
popf
dec
mov
jns
hlt
dec
hlt
pop
test
or
iret
mov
ljmp
mov
jecxz
xchg
sub
mov
lea
add
mov
and
dec
push
mov
push
test
int
mov
mov
cld
out
fwait
loopne
pop
xchg
mov
mov
idivb
sbb
jecxz
inc
out
xor
sahf
cmc
xchg
xchg
hlt
ja
outsl
push
sahf
mov
sub
mov
xor
pop
repz
and
dec
add
and
mov
mov
enter
lds
lahf
and
fisubs
lea
jae
add
inc
hlt
data16
repz
jbe
pop
mov
into
mov
jl
or
dec
ljmp
hlt
mov
loop
cld
cli
adc
sbb
loop
xchg
ljmp
mov
add
mov
xorb
repnz
mov
shlb
xor
roll
pop
add
push
push
inc
xchg
add
daa
rep
sub
insb
shrl
std
jmp
xor
and
pushf
mov
push
add
or
mov
test
in
sbb
call
xor
stc
cmpsb
jp
out
test
jecxz
mov
mov
ret
lea
sub
dec
cmp
mov
cmpl
push
rcl
jmp
cmp
or
sub
sbb
shll
sahf
or
mov
mov
iret
ficomps
lret
movsb
frstor
lea
mov
adcb
adc
mov
xor
fsubrp
test
and
push
loope
lea
aad
sub
movsl
popa
addl
dec
lods
jo
sbb
cmp
aad
sti
hlt
dec
add
mov
outsl
stos
push
jns
pop
add
icebp
popf
sbbb
lods
inc
sbb
xchg
mov
xchg
inc
in
cltd
pushf
jg
sub
in
mov
and
mov
or
sub
cmp
icebp
push
notb
inc
push
add
scas
xchg
push
inc
push
pusha
pop
dec
in
sti
jg
jmp
push
sbbl
lcall
sub
pop
pop
test
jmp
mov
js
jp
inc
data16
pop
loopne
pushl
aaa
int
hlt
cmpsl
imulb
lds
cmp
insb
xchg
add
mov
in
mov
scas
in
test
cmpsb
xchg
loop
xor
imul
pushw
lahf
push
sub
cmpsl
add
out
push
mov
push
jl
xorl
dec
pop
fnstcw
cld
subb
nop
in
lods
pop
jnp
push
icebp
sbb
stc
aad
dec
xor
inc
in
mov
inc
cmpl
add
divl
in
cmp
sbb
push
pop
sub
js
pop
aas
jb
mov
pop
sbb
rcll
jp
outsb
push
fbstp
cmp
sub
mov
cmp
push
or
dec
lahf
stos
pop
and
sbb
mov
into
imul
push
aam
lahf
and
sbb
jb
std
sbb
inc
inc
sub
ret
sahf
pop
sbb
jecxz
dec
mov
push
xchg
stos
pop
sti
stos
gs
mov
outsl
leave
stc
mov
pop
std
imul
mov
sub
cltd
pop
cltd
pop
sbb
or
mov
jb
jle
mov
jo
add
jns
push
int3
adc
jmp
fnsave
sub
mov
pushf
cmp
shll
inc
inc
sub
arpl
cmp
test
bound
or
or
xor
sub
jge
movsb
push
push
add
xchg
fiadds
pop
adc
test
aaa
adc
mov
mov
lahf
test
pop
cwtl
rcl
cmp
mov
neg
fidivrl
push
aaa
in
or
insl
icebp
pusha
and
aas
lods
orl
imul
xor
add
push
add
test
and
dec
or
popf
jl
sbbl
jmp
xor
xchg
pop
sti
mov
shr
pop
xor
cli
sub
push
int
pop
mov
and
mov
rolb
lahf
ficompl
lret
inc
mov
shrl
in
adc
mov
mov
sub
pop
ret
xor
idivb
inc
mov
movsb
imul
cmp
lahf
xor
jb
jb
pop
xchg
rorb
in
dec
mov
scas
mov
shlb
cltd
in
sbb
xchg
nop
popf
sub
inc
scas
fs
sub
notl
outsl
inc
cmp
lahf
fmull
rol
addr16
sbb
and
add
xchg
stc
fistpll
pop
sub
mov
in
cwtl
and
faddl
shlb
push
ret
pop
test
jle
lods
mov
ret
hlt
dec
jp
push
aam
push
inc
mov
stc
jns
xor
mov
push
je
xor
fmuls
stos
cltd
xor
sub
xchg
mov
dec
push
hlt
ja
or
jle
cmpsl
jb
lret
rcl
and
jb
orb
jle
fdivrl
call
jae
jge
icebp
add
pusha
loop
or
rcr
sub
inc
mov
out
loope
roll
and
dec
cltd
jmp
or
ret
xor
insl
insb
or
jl
loope
insb
jp
outsb
rorl
into
dec
sub
push
lret
lods
loope
daa
mov
imul
cmp
adcl
cmp
pop
mov
xchg
mov
ret
push
fisttpll
push
jecxz
lret
movsl
icebp
mov
adc
in
xchg
pop
loop
rcrl
mov
mov
loop
pop
in
adc
pusha
sbb
add
lods
fimuls
inc
inc
ss
jmp
mov
lock
add
in
push
aad
jle
bound
add
incl
dec
in
shl
xor
cmp
pop
leave
adc
sub
ja
ds
xchg
or
jnp
lret
dec
adc
and
dec
xlat
add
and
fistpll
mov
daa
cmpb
jb
shrl
adc
pop
cltd
cld
fistps
jle
imul
add
loopne
xor
shll
and
mov
adc
test
mov
in
mov
in
aaa
jg
sub
dec
and
mov
mov
pop
xchg
test
clc
inc
dec
sbb
inc
cmc
mov
out
jbe
jnp
mov
xor
dec
jl
rcr
add
dec
adc
mov
jnp
sbb
push
xchg
fstpl
pop
jmp
pop
out
jecxz
push
or
pop
cmp
mov
inc
clc
adc
dec
pop
or
mov
pushf
out
push
mov
imul
shlb
dec
sub
insb
ja
xchg
cmp
adc
add
sub
lret
xchg
mov
outsb
jecxz
or
rol
adc
cmp
or
pusha
lods
and
dec
popa
adc
and
pop
pop
push
xor
cmpsl
cmpsl
jecxz
daa
pusha
rcll
popa
lcall
mov
and
mov
pop
icebp
dec
cmp
addb
cmp
xor
insl
add
sti
adc
sar
xor
loopne
outsb
inc
inc
inc
mov
outsb
add
jae
pop
add
mov
iret
dec
cmp
out
xor
daa
push
mov
lahf
adc
or
lea
std
icebp
repnz
xor
jge
sbb
mov
test
test
ljmp
push
test
jo
jo
pop
shrb
leave
inc
jb
imul
cmp
inc
mov
jp
shl
stc
xchg
sahf
loopne
inc
sub
loop
jp
int3
sbb
or
das
pusha
add
pop
rclb
xchg
mov
push
mov
rclb
pop
enter
cmp
push
stos
mov
jae
dec
mov
jno
pop
sbb
cmp
inc
fstl
sti
loope
ficompl
and
sub
sub
jmp
repz
ljmp
popa
xor
pop
sahf
pop
lcall
je
jmp
dec
lods
sti
pop
mov
in
nop
in
or
in
and
rcrb
scas
clc
pop
mov
adc
bnd
mov
jecxz
push
sub
scas
jns
xchg
mov
ja
mov
pop
sub
iret
pop
cmpsb
lods
out
sti
popf
cmp
push
push
imul
fstpl
inc
pop
int3
mov
fbstp
ljmp
xor
mov
scas
lds
jne
jns
mov
dec
bound
mov
push
into
nop
add
int
add
stc
pop
sarl
movsl
dec
xor
jb
movsb
adc
and
pop
loopne
addl
xchg
mov
inc
test
dec
push
lods
test
and
lahf
add
adcb
movsb
jp
push
daa
hlt
out
xchg
add
movb
xchg
jo
fisubrl
adc
sbb
sub
subl
inc
xor
inc
roll
popf
pop
fildl
test
fistl
fiaddl
add
xor
adc
sbb
or
jp
xorl
or
in
jl
fbld
dec
add
push
and
mov
jg
pop
push
mov
xchg
mov
jb
clc
jo
sbb
jbe
gs
jno
mov
cmp
rorl
fimull
sub
jno
scas
push
xorb
xorl
push
xor
stos
pop
jg
test
sbb
mov
dec
cltd
test
lods
jnp
bound
leave
xor
in
ljmp
rclb
sub
push
push
lods
add
mov
mov
sbb
lret
add
loop
insb
push
inc
xor
aas
out
lods
mov
mov
out
lcall
pop
mov
in
sbb
data16
push
test
fsubrs
jno
dec
mov
arpl
mov
pop
in
xchg
lock
xor
inc
lds
mov
fnsave
andb
cmpsb
mov
xlat
push
add
loopne
stos
out
mov
mov
dec
inc
div
ss
stos
movsb
fidivl
pop
inc
popa
lahf
jecxz
flds
scas
pop
or
ja
mov
sti
lcall
arpl
adc
mov
cs
and
in
pop
lahf
push
sub
jno
cmp
test
sub
aam
ret
jl
mov
arpl
lock
jge
mov
mov
std
data16
pop
addr16
or
dec
movsl
lock
dec
iret
jae
push
in
sub
dec
dec
mov
push
test
jge
pop
mov
sub
cmp
xor
mov
mov
int
adc
mov
lock
jg
or
jmp
add
jb
sti
ret
cli
inc
ret
fldt
mov
pusha
lret
mov
push
mov
ja
ds
std
xchg
sbb
fidivl
jmp
jo
inc
aam
out
aad
cmp
push
pop
jns
sub
push
pop
pop
jmp
popa
or
adc
cld
mov
ljmp
push
iret
push
cmp
mov
cmp
in
in
pop
clc
clc
inc
enter
scas
int3
mov
das
mov
es
pop
mov
or
push
popa
xchg
adc
jb
mov
jns
xor
xchg
das
sub
int
cli
int3
out
xlat
fcmovnb
jmp
add
mov
cmp
jnp
jo
ljmp
mov
das
cmp
pop
cmpsb
xor
out
mov
mov
call
int
lds
daa
sarb
mov
into
push
cmp
add
out
cmp
push
int3
cmp
mov
xchg
int3
cltd
ja
cld
shrl
loope
test
addr16
mov
add
ss
bound
mov
idiv
enter
imul
xor
scas
push
test
pop
cmp
lahf
mov
cmp
xchg
incl
sub
xchg
sub
out
cmp
jne
in
or
jle
pusha
imul
push
adc
sbb
fwait
inc
push
fs
movsl
sbb
or
shrl
fs
xchg
mov
enter
pop
lods
xor
cmpsb
pushl
add
scas
std
adc
out
pop
dec
push
imul
iret
mov
pusha
ret
lods
out
or
xorl
inc
and
inc
les
mov
data16
dec
mov
jno
bsf
cltd
mov
shrb
pop
mov
jb
scas
xchg
mov
insb
test
nop
sbb
inc
push
and
jmp
xchg
mov
adc
fcmovnb
imul
jge
pop
out
add
cld
xorl
js
sub
ss
leave
out
fisubl
loopne
ret
cmpsl
inc
mov
hlt
mov
data16
stc
push
xchg
xchg
out
or
add
ljmp
cmp
jg
shlb
subl
inc
push
xchg
sbb
xchg
and
inc
aad
popa
sbb
pop
mov
imul
hlt
fdivl
outsl
xchg
hlt
cld
pop
mov
and
jg
dec
aam
cmc
xor
scas
aad
cli
cld
data16
gs
pop
pop
cs
push
and
cmp
loop
dec
adc
mov
out
je
lret
mov
jl
or
sarl
shll
or
push
mov
xchg
jmp
jmp
pop
mov
nop
xor
aad
mov
inc
sub
das
jmp
sbb
aam
xor
pand
shrl
or
push
popf
mov
fucom
movsb
adc
rcr
cmp
ds
clc
cmpsl
aad
push
mov
out
mov
sub
jp
push
xorl
dec
push
mov
mov
xor
lods
mul
in
push
cmp
scas
in
leave
jmp
fnstenv
inc
leave
bound
and
pusha
sub
in
fmuls
and
xchg
gs
aaa
inc
xor
cmpsl
jns
frstor
les
imul
and
pop
add
cmpsb
mov
xor
adc
xor
cmp
mov
jge
fdiv
repnz
aaa
or
enter
mov
or
hlt
sbb
fnstcw
xor
shrl
and
into
or
cwtl
fcmovne
and
rcrb
test
xchg
cwtl
fdivrl
ljmp
fisubrs
addps
pop
push
icebp
lcall
in
repz
cmpsl
fs
out
out
mov
push
aas
out
aam
stos
xchg
lea
mov
in
sbb
testb
pop
fldt
cmp
jecxz
aaa
adc
and
ret
mov
pop
or
push
repnz
and
loope
cmp
xchg
xchg
lret
adc
sbb
enter
lods
dec
mov
bsr
pop
jge
xor
rol
mov
jne,pt
stos
ljmp
mov
mulb
xchg
xchg
into
dec
add
add
jb
inc
leave
mov
pop
inc
repnz
or
stos
int
fildll
adc
inc
ja
mov
mov
xor
out
xchg
jno
xchg
xorl
cmpsb
add
xchg
test
addl
nop
push
int3
js
and
dec
push
scas
sub
adc
dec
lds
jne
fmul
loop
mov
cltd
push
fsubp
pop
push
add
shlb
pop
sbb
jg
fs
mov
sub
popf
dec
sub
pop
push
jmp
xchg
and
xchg
xchg
mov
cmp
adc
in
adc
push
scas
add
jns
pop
nop
push
or
hlt
in
sahf
push
call
inc
jl
xchg
adc
lcall
std
shl
test
mov
jne
cmp
xchg
aam
mov
add
xor
shl
frstor
mov
push
push
mov
lret
push
in
dec
or
xlat
mov
xor
clc
imul
fcomip
lea
stc
fldcw
rolb
push
sub
movsl
sub
leave
sbb
mov
push
test
cmpsl
call
adc
mov
or
cs
enter
je
inc
and
sub
jns
mov
or
incb
mov
popf
mov
mov
stc
clc
ss
decb
mov
pop
jno
pop
pop
aaa
cmp
jmp
test
cmp
fildl
js
dec
xor
iret
lock
aad
jg,pt
lods
add
cld
jb
jb
rolb
push
mov
push
sub
lret
dec
sbb
push
mov
dec
adc
mov
mov
xchg
loop
push
xchg
sbb
and
add
jbe
mov
lret
jno
jmp
aam
xor
inc
mov
inc
sbb
xchg
xchg
mov
lock
lret
pop
mov
mov
out
ret
loop
jbe
dec
xchg
scas
cwtl
out
mov
in
fmul
push
pop
add
sbb
mov
or
jmp
pop
cmc
cmp
mov
imul
pandn
push
push
std
push
xchg
daa
push
aaa
pop
add
jbe
ror
cmc
mov
out
or
lock
lret
cwtl
mov
jecxz
stc
sub
dec
xor
int3
inc
fbld
ja
xchg
pushf
in
movsl
mov
scas
gs
out
fnstsw
push
mulb
movsl
mov
or
inc
sbb
mov
adc
sub
push
call
push
loope
int3
popf
pushf
mov
iret
hlt
xor
int
pop
test
mov
cmc
aaa
in
test
mov
cmp
out
fnstsw
inc
dec
pop
push
popf
sub
andl
mov
pop
jp
sub
mov
rol
je
jbe
xor
inc
mov
jle
lods
mov
test
addl
mov
sbbl
aad
inc
mov
mov
ja
sub
movl
lods
xchg
shlb
imul
js
cmp
adc
push
mov
xchg
stos
sub
push
push
roll
popf
jecxz
into
icebp
cli
stc
inc
adc
sbb
mov
pop
call
popf
mov
scas
addb
inc
fmull
cmp
enter
mov
push
icebp
cmp
pop
mov
lcall
xor
pusha
mov
mov
int
lret
mov
call
inc
adc
cmpsb
icebp
mov
ret
cmp
mov
mov
mov
cld
in
add
mov
lea
shrb
dec
loope
adc
cli
xor
cmp
add
jb
mov
sahf
sub
mov
cmp
mov
sti
cmp
sbb
xchg
imul
movsl
jb
gs
imulb
sub
loopne
cmp
out
shufps
push
mov
xor
pop
adc
rcrl
mov
or
sarb
cmpsl
inc
ds
popf
pop
or
cmpsl
cwtl
ret
mov
add
in
jl
test
dec
sub
add
in
movsb
movsb
mov
inc
loop
test
push
fdivs
ret
and
mov
mov
lahf
mov
xor
cmp
ret
mov
std
sub
xchg
pop
adc
pop
sub
jno
xor
imull
loopne
test
mov
inc
jle
out
jmp
popf
mov
or
leave
jmp
mov
pop
lea
ret
pop
jb
aam
adc
lret
sbb
fucomip
adc
cmp
adc
aam
test
mov
push
les
addl
xchg
xchg
xchg
std
ret
jl
stc
ret
lret
dec
or
sbb
jnp
repz
mov
pushf
imul
add
cld
and
add
rolb
in
inc
lret
fimuls
xor
outsb
cwtl
test
hlt
cwtl
adc
cmp
xor
mov
dec
mov
add
push
repz
sahf
push
inc
outsl
add
mov
xchg
mov
dec
scas
imul
out
mov
mov
inc
int3
mov
orb
fldt
fildl
xor
xchg
push
mov
sarb
jg
xchg
in
sub
push
aam
das
adc
test
sahf
cmp
cmpl
test
jmp
mov
idivl
mov
cmp
push
push
mov
in
loope
mov
addr16
inc
inc
pop
cwtl
inc
fdivs
inc
push
add
pop
dec
jge
pusha
mov
repnz
stos
repnz
mov
ficompl
xchg
inc
aad
add
int
cwtl
mov
js
adc
js
cmp
pusha
xorb
pop
push
pop
jns
mov
lea
lahf
xchg
loopne
leave
add
ret
cmpsl
sarl
lds
xchg
or
sti
push
incl
or
adc
inc
ret
pop
iret
xchg
xor
sub
pushf
int3
lahf
add
mov
xor
push
ret
decw
arpl
adc
out
stc
lds
mov
mov
inc
repz
add
add
add
ja
das
jl
or
negb
xchg
test
fimull
imul
hlt
or
fdivrp
mov
and
loopne
pop
and
and
dec
leave
mov
pop
jmp
insl
adc
push
and
mov
lds
in
lcall
xorb
leave
mov
push
adc
es
mull
pop
fcmovnu
loope
mov
mov
xchg
sbb
xchg
shlb
imul
push
cmp
std
or
jg
xor
mov
leave
lds
sbb
popf
or
xchg
bound
bswap
inc
dec
and
imul
ja
outsl
scas
mov
bound
xchg
sbb
inc
test
jb
jns
inc
push
nop
repz
mov
sbbl
out
fisubs
lret
mov
loop
or
ss
and
arpl
subl
mov
xchg
or
jns
jp
adc
mov
inc
jae
aaa
dec
movsb
lods
mull
test
and
lcall
add
push
je
jnp
dec
fisubrl
sub
repz
pop
fs
mov
addb
out
adc
jo
jno
test
loop
xchg
adc
push
icebp
mov
movsl
inc
mov
into
repz
push
mov
or
lcall
mov
jp
mov
cwtl
add
int
les
push
adc
loope
cwtl
xor
iret
stos
fmuls
shl
mov
or
or
std
push
dec
sti
pop
scas
stos
shrb
int
call
push
push
sbb
jae
lods
popf
aam
jbe
jge
lods
inc
fildl
xchg
test
and
or
rclb
mov
lds
notl
and
ret
and
in
mov
lock
cmp
js
dec
gs
lods
push
int3
sbb
mov
lret
subl
in
dec
xchg
dec
outsb
stos
out
jb
mov
xchg
enter
xor
test
xchg
or
imul
pusha
dec
adc
scas
mov
js
pop
mov
sarb
sub
icebp
mov
push
pop
ret
sti
and
lret
or
xlat
outsb
fxch
inc
out
das
or
push
imul
stos
ja
mov
push
dec
mov
lods
jmp
xorb
inc
test
sub
inc
mov
std
imul
xchg
addl
sbb
jg
pop
jbe
pop
lahf
roll
enter
push
or
pusha
dec
icebp
je
testl
or
jae
cmpsb
inc
jae
mov
icebp
movsb
notl
jo
jl
fwait
out
sub
adcl
pop
or
dec
aad
gs
jg
aas
mov
jmp
cmpl
cltd
sarb
fwait
rcl
iret
jp
mov
sti
iret
mov
aaa
mov
int3
or
mov
xor
test
hlt
push
pop
adc
rcr
mov
push
mov
in
imul
stos
sbb
andl
or
sahf
xchg
pop
xor
ja
xor
nop
xor
mov
dec
cmp
repz
ss
jecxz
sub
rolb
jno
pop
mov
orb
jne
sbb
ret
mov
ds
adc
loope
jne
mov
insl
aad
pop
cmpl
push
or
movl
mov
lods
popa
mov
cld
test
jnp
outsb
mov
jp
adc
jbe
addr16
sub
mov
jmp
shrl
cmpsl
mov
stc
inc
into
jl
push
arpl
arpl
jmp
dec
aaa
mov
fs
mov
adc
fwait
mov
adcb
dec
push
movsl
or
fisttpll
mov
adc
inc
lret
ret
cmpb
and
lods
dec
push
xchg
sub
jmp
sub
pop
xor
or
pop
mov
push
pop
lahf
aas
das
jne
out
push
lds
test
jmp
out
push
pop
fldt
jge
mov
int
enter
adc
push
sbb
pop
pop
ret
sbb
fsub
loopne
xchg
push
mov
mov
sub
cmp
mov
addr16
out
push
hlt
clc
rorl
pop
popa
fsubrs
adc
sub
lahf
add
lods
adc
push
enter
cwtl
push
imul
jb
inc
push
arpl
mov
mov
and
inc
jo
adc
mov
xorl
xchg
pushf
cmp
xchg
ja
jecxz
mov
filds
dec
mov
outsl
inc
and
mov
call
jb
leave
and
stc
pushf
jb
jnp
hlt
sub
sbb
insb
dec
xchg
sub
dec
sbb
ss
out
push
lret
stos
repnz
dec
mov
adc
xchg
adc
and
gs
pop
jp
ret
xor
inc
ret
mov
fiadds
aaa
mov
inc
movsb
in
and
lret
mov
xchg
add
or
adc
xor
pop
out
xchg
inc
mov
sub
dec
dec
cmp
dec
push
scas
pusha
mov
fsubr
aaa
js
das
test
xchg
dec
scas
cmp
xor
pop
mov
xchg
xorb
test
lods
sub
push
inc
inc
mov
sahf
lret
sub
pop
or
push
inc
adcb
clc
jb
out
rorl
mov
sub
or
cld
daa
xor
jmp
adcb
push
dec
jb
xor
fidivrs
mov
pop
ret
push
daa
xor
adc
dec
adc
cmc
popa
jecxz
cmp
mov
nop
fidivl
inc
je
or
imul
mov
mov
xor
and
jle
xor
jmp
aad
test
dec
cli
dec
cltd
mov
xchg
adcl
jbe
dec
lds
cmp
fstp
cmc
mov
mov
cld
pop
jne
xlat
test
jae
or
inc
test
xchg
jnp
pusha
fsubrl
shrw
fsubrl
in
add
inc
cmc
imul
adc
cltd
mov
insl
aaa
xchg
sub
das
sub
or
jnp
insb
fistl
repnz
nop
or
inc
adc
aaa
and
arpl
mov
mov
jns
push
sbb
je
inc
rolb
push
arpl
or
inc
sub
jbe
repnz
std
sub
mov
out
andb
add
pop
sbb
sbb
out
ret
xchg
ljmp
xchg
mov
mov
testb
mov
sub
je
sti
cmpsl
int3
push
ret
lcall
inc
imul
and
es
sub
sub
mov
xchg
cltd
xchg
xchg
dec
push
mov
pop
sub
inc
dec
cwtl
and
sub
out
jne
sub
dec
js
push
sub
test
cwtl
lds
sahf
mov
push
fs
cli
loope
mov
pop
adc
inc
xor
out
fsubrl
scas
testl
dec
stos
je
call
pop
ja
js
adc
add
andb
sbb
or
mov
sbb
scas
lea
pop
dec
mov
jns
jl
xchg
cmc
daa
fld
push
xchg
lret
in
pop
ret
fcompl
shll
fcompl
mov
lahf
xchg
test
enter
in
lahf
andps
pop
outsl
sub
mov
xchg
test
cmp
xchg
jg
push
clc
cmp
leave
push
sub
rolb
and
fcompl
pop
pop
nop
adc
sub
add
popa
and
stos
push
repz
or
test
or
add
inc
sub
xor
mov
dec
push
inc
push
cmc
adc
xchg
call
xor
mov
pusha
mov
inc
shl
in
scas
xor
ljmp
nop
pop
movsb
or
fs
lods
int3
lcall
pop
sub
inc
push
mov
jle
mov
arpl
jg
insb
imul
and
ret
xchg
pop
dec
mov
jae
or
xchg
push
movsl
movsb
xchg
bswap
enter
xchg
sahf
arpl
push
dec
fsubr
loope
loope
pushf
or
jl
adc
nop
imul
add
lcall
lea
test
jl
xor
in
clc
pop
adc
or
sub
jecxz
mov
jnp
cwtl
sbb
hlt
xor
mov
jo
out
mov
mov
mov
pop
adc
outsb
cmp
cmp
dec
push
cmp
pop
push
ss
leave
add
cmp
int3
mov
fwait
in
je
adc
out
mov
pop
or
jbe
arpl
xchg
sbbb
cmpb
inc
or
jbe
inc
adc
sbb
cmpsb
xchg
inc
bound
stc
pop
add
sub
jmp
or
push
int
or
push
push
arpl
inc
cmpsl
ja
bound
and
cmp
test
rcrl
sub
xchg
and
or
xchg
in
cwtl
xchg
push
jle
inc
and
pushf
pushw
xchg
jge
in
pop
orl
fs
mov
adc
ss
fcompl
ds
jbe
fmuls
pusha
aas
jl
call
stos
das
push
fildll
lcall
cmc
andl
cmpsb
add
dec
jle
call
add
stc
pop
into
sub
adc
jecxz
xor
aam
inc
out
jb
add
mov
push
sbb
in
stc
scas
inc
pop
push
aaa
push
in
pop
into
sti
push
cli
push
movsb
rorl
add
adc
es
mov
cmpsl
mov
mov
lret
ljmp
jle
rcll
adc
leave
js
es
adc
repnz
push
and
push
xchg
dec
call
jmp
scas
pop
lods
mov
int
imul
clc
test
sbb
cvtps2pi
jmp
movsb
push
lock
faddl
mov
pop
xor
push
das
fstpl
bound
cwtl
cmp
jbe
dec
test
push
das
adc
les
stc
jbe
mov
push
xchg
iret
push
out
mov
sarb
mov
movsb
dec
cld
pop
and
and
sbb
dec
cmc
xor
insl
outsl
hlt
inc
out
fisttps
jae
mov
scas
or
repz
inc
mov
mov
and
movq
inc
jnp
sahf
or
inc
cmc
dec
xor
push
jne
fnsave
imul
cmpsb
xchg
nop
adc
jmp
sbb
lret
add
pop
fpatan
xor
fistpl
stos
sbb
jnp
cmp
dec
add
cmp
test
out
jb
mov
or
sub
fidivs
mov
cmpsb
arpl
mov
cli
stos
xchg
aad
mov
cmpsb
push
pop
dec
dec
outsb
ja
xor
rorb
or
jo
stc
jecxz
rclb
inc
pop
sub
out
stos
mov
inc
dec
imul
or
imul
xchg
push
adc
push
popf
push
fadd
stos
push
mov
pop
imul
jle
sub
int3
adc
mov
stos
jp
stos
mov
push
pop
and
outsb
or
cmpsb
mov
mov
xchg
stos
push
mov
xchg
mov
pop
pop
aas
repnz
pop
ja
adc
movsl
or
stos
incb
nop
push
aad
pop
scas
popa
push
inc
pop
lock
xchg
jl
addr16
faddp
orb
mov
lods
or
mov
cmpsl
shlb
sub
mov
push
imul
inc
jo
decb
ja
mov
test
fsubs
ror
sbb
cmp
lods
xchg
mov
sub
push
not
xchg
aam
mov
mov
dec
jns
cmpb
fnstenv
fldl
sbb
pop
cmp
mov
les
rclb
shl
mov
fistl
imul
cmp
sbb
mov
sub
and
cmp
push
push
addr16
hlt
ljmp
push
rcrl
mov
jl
xor
ficoml
sbb
mov
lock
or
fstps
xchg
jae
aas
gs
shll
add
push
mov
sub
lcall
jnp
dec
scas
pop
insl
jne
push
adc
push
stc
in
repz
ljmp
scas
adc
es
push
add
mov
sbb
jnp
dec
mov
daa
push
pop
push
xorl
fsubr
rol
repz
xorl
insb
rcrl
mov
stc
popa
pop
loop
call
js
or
aas
aam
sbb
repnz
in
adc
mov
jl
hlt
push
fwait
dec
in
xor
in
xchg
enter
imul
jmp
jge
ss
cwtl
call
or
inc
scas
cmp
xchg
fldenv
add
jp
xlat
mov
aad
test
pop
sub
pop
xor
jg
les
inc
lds
adcl
dec
mov
cs
jb
pop
aad
xchg
xlat
lods
xchg
insl
dec
cmp
sbb
push
adc
sbb
push
fidivl
xor
xchg
aam
inc
les
ljmp
adc
mov
outsb
add
mov
imul
xchg
xchg
aaa
int
add
cmp
or
mov
fwait
pop
xlat
dec
in
adc
or
sub
cwtl
daa
xor
and
jmp
xor
xchg
popf
sub
jbe
loope
and
cs
loopne
inc
sub
sarl
sbb
jmp
xchg
mov
or
add
fstpl
in
out
pop
outsl
xor
or
fwait
int3
subb
add
pop
pop
in
xor
and
or
inc
pop
dec
jb
in
mov
addr16
jp
aaa
jno
subb
jnp
andl
cmp
sbb
cltd
and
pop
push
enter
cwtl
nop
je
push
and
sarb
xor
adc
popa
outsl
xchg
pop
pop
fistl
lds
stc
dec
xor
or
arpl
imul
or
dec
add
lock
insl
jmp
daa
je
mov
cld
outsl
cmp
std
inc
xor
mov
xor
adc
rcrb
lods
std
aam
inc
cli
cli
jo
cmp
or
test
push
push
mov
ja
and
push
mov
xchg
daa
xor
mov
cld
cli
icebp
daa
movsb
mov
xor
xchg
aas
inc
add
inc
sub
mov
es
xor
dec
sub
sahf
aaa
dec
and
mov
outsl
push
test
pop
aad
xor
mov
push
and
pop
or
ret
dec
add
jno
les
fidivrl
je
mov
inc
out
push
lcall
adc
add
repz
out
fwait
call
dec
repnz
sar
jo
push
add
jl
es
mov
adc
loope
xchg
sahf
test
lahf
ljmp
adc
xchg
push
xor
pop
insl
loopne
testb
inc
lahf
mov
hlt
xchg
mov
mov
shrl
leave
xor
mov
int
dec
lea
fdivrl
jnp
jnp
mov
js
adc
push
aad
insl
andb
and
scas
shrb
outsb
xchg
movsl
cli
gs
mov
test
popa
inc
movsb
enter
popf
add
popa
int3
mov
shl
out
xchg
cwtl
ja
ss
xor
dec
or
cli
sub
ss
mov
and
mov
loopne
and
ss
sbb
inc
cwtl
ss
rclb
movsb
loop
jp
mov
dec
jns
insb
in
push
or
dec
gs
mov
inc
ficompl
mov
xchg
sbb
dec
scas
jo
push
stos
sahf
adc
sbb
add
popf
jo
repnz
sarb
aad
gs
movl
cwtl
inc
cmpsl
sub
data16
jl
cld
popa
pop
das
jbe
pop
into
ljmp
mov
jge
jnp
mov
dec
cmc
mov
sbb
mov
cmp
ljmp
xchg
je
pusha
cmp
push
aam
jmp
push
outsb
mov
fld
jp
ss
repnz
jns
and
sbb
iret
imul
test
sub
xchg
je
imul
loopne
pop
sahf
jbe
int3
repz
out
dec
ja
into
clc
sahf
out
mov
sti
loopne
mov
xor
std
or
xor
adc
pop
and
dec
daa
fldcw
aaa
cmp
flds
inc
out
and
dec
cmpsb
or
ror
lds
xor
mov
clc
jecxz
push
or
ds
cltd
sbb
loopne
int3
jge
or
jo
aaa
mov
and
mov
add
into
in
mov
daa
negl
ror
sub
ljmp
aas
dec
and
or
test
mov
mov
mov
fsubl
mov
jle
nop
add
mov
out
sahf
mov
pop
lock
push
adc
pop
or
pop
repz
mov
mov
cs
aaa
cmp
testl
insl
sahf
adc
pusha
xchg
sub
cld
mov
stos
sbb
out
cmp
and
inc
jl
es
mov
stos
sbb
or
adc
mov
pop
leave
mov
and
sahf
fs
sbb
mov
shll
arpl
je
std
xor
cmpsb
inc
or
push
scas
add
mov
pop
push
out
sub
sbb
push
pushf
add
xor
test
jne
outsb
jmp
jge
shll
cmp
dec
adc
mov
jno
xchg
test
test
sbb
mov
mov
push
les
scas
pop
mov
mov
mov
sub
or
push
out
mov
lods
xchg
cmp
stos
mov
les
pop
xor
or
dec
ret
jle,pt
cli
and
pop
jae
into
mov
rorb
fcom
insl
imul
out
cli
pop
rclb
push
out
jp
or
adc
mov
jne
mov
lea
packsswb
fimull
lods
mov
call
inc
inc
aad
cli
push
lret
pop
cmp
jns
mov
cmpsb
in
in
pop
and
cs
popa
pop
inc
jl
and
aam
mov
sbb
sub
and
jbe
movsl
jne
mov
mov
push
scas
rol
movsb
xchg
xchg
mov
js
xor
popf
in
xor
in
xchg
out
ja
out
loop
mov
cmp
out
in
mov
out
push
xor
subl
ss
mov
test
ret
cwtl
jle
mov
mov
fsubrs
arpl
stc
pusha
cmc
aad
faddl
dec
dec
lcall
jg
ljmp
pop
test
loopne
xchg
mov
push
adcb
mov
addl
lock
mov
dec
push
mov
adcb
pop
mov
mov
roll
rcrl
xchg
aam
ficompl
fwait
mov
in
outsb
ja
mov
xchg
int3
sbb
pop
mov
xchg
push
inc
adc
mov
ds
jno
and
std
loop
push
inc
lret
fstpt
push
mov
push
mov
jg
xchg
dec
addr16
mov
mov
xor
cld
aaa
mov
dec
dec
cld
gs
out
inc
int3
cli
dec
xchg
aam
mov
mov
cld
xchg
stos
add
cmp
ficoms
inc
cli
lcall
cmp
ds
sbb
xchg
xchg
jb
fwait
push
cmc
mov
jecxz
pop
jle
adc
xchg
repz
lock
mov
jge
cmp
test
sarl
jbe
xchg
ret
xchg
xchg
and
in
vmovaps
jo
mov
cmp
not
dec
mov
loopne
ds
pushf
push
lods
xlat
inc
xlat
aam
stos
mov
inc
push
xchg
dec
push
leave
andb
mov
jae
xchg
sub
and
pop
lock
add
mov
pop
cmp
enter
fdivl
push
lret
inc
xchg
mov
js
sub
leave
subb
jno
fldenv
out
scas
scas
push
jmp
mov
dec
test
inc
fistl
add
inc
clc
jl
lret
std
ret
inc
jae
test
ret
add
or
pop
dec
dec
xor
push
js
jb
dec
pop
pop
ficoml
mov
pop
dec
stos
dec
insl
aaa
mov
sbb
shr
or
mov
jecxz
push
loope
das
mov
sbb
jl
repz
popa
cltd
mov
nop
xchg
pop
jb
jmp
cld
sbb
movsl
push
iret
outsl
jbe
xchg
inc
clc
in
pop
xor
adc
ss
jno
popl
into
inc
mov
push
int
fs
inc
jnp
xchg
nop
push
jmp
scas
adc
ret
push
ret
int3
mov
nop
jb
arpl
mov
in
add
mov
sbbb
fwait
out
loop
in
dec
mov
cltd
mov
mov
adc
push
jg
fimuls
out
ja
inc
jno
xchg
data16
in
and
sbb
cwtl
and
or
in
mov
mov
fstps
popa
decb
subb
sbb
mov
and
xchg
push
scas
loope
pop
xor
inc
cmpsb
mov
mov
out
scas
out
sti
imul
mov
std
sbb
fs
sbb
stos
pop
lds
xlat
lods
sarl
jae
lahf
xor
popa
mov
dec
arpl
sbb
shl
jne
xchg
shlb
pop
dec
sbbl
std
xor
imul
push
cmp
mov
cmp
repz
insb
into
add
or
inc
mov
clc
ds
jp
push
and
sahf
fcmovu
jg
sub
in
cli
fcom
jae
sbb
das
insb
or
out
mov
repnz
xchg
sbb
mov
jno
fidivl
adc
and
pop
shlb
inc
dec
cli
pushf
cli
clc
inc
mov
dec
or
incb
mov
addl
cmp
das
std
cltd
sbb
sbb
je
cs
out
in
mov
into
mov
js
fsubrl
out
dec
arpl
push
jb
mov
cmpsl
push
shll
fldenv
add
mov
inc
test
cld
mov
loop
insl
filds
xchg
xor
cmc
dec
shr
jns
lcall
and
cld
pop
jns
pop
push
jbe
pop
imul
or
and
dec
out
daa
jmp
xchg
psubb
mov
push
leave
and
add
add
cmp
xor
roll
sub
mov
lret
gs
call
inc
daa
aas
int3
clc
mov
inc
or
mov
mov
jne
mov
cld
lods
pop
es
pop
loop,pn
inc
jae
aam
insl
in
jp
and
pop
add
pop
add
and
and
in
std
pop
dec
test
mov
loope
scas
dec
leave
cmp
pop
mov
out
fs
mov
adc
dec
push
out
addr16
aad
mov
cld
push
mov
lcall
fidivs
sub
sub
pop
sub
pop
sbb
ret
jo
sti
add
mov
mov
pushf
cli
pop
test
mov
and
xor
mov
dec
shr
inc
ja
jbe
mov
mov
jb
sub
imul
lods
inc
inc
sbb
push
popf
mov
fstpl
add
dec
sub
fsubrp
movsl
cmpsb
mov
cld
jg
out
or
fstps
cmpb
adc
mov
aas
pusha
lds
adc
jne
jno
pop
fs
push
imul
sbb
insl
les
mov
mov
std
mov
adc
jne
test
mov
ror
pop
cmp
fadds
insb
mov
xchg
sub
ljmp
add
je
mov
lock
jge
repnz
pop
mov
sti
int3
out
mov
and
fcmovnb
mov
adc
adc
sarl
test
or
imul
dec
jmp
out
fs
push
iret
mov
mov
jns
xchg
xchg
leave
sub
xchg
push
mov
scas
aas
add
pop
mov
ret
insb
jns
mov
gs
sbb
test
aam
push
icebp
aad
xchg
xchg
cmp
mov
insl
push
aas
fdivs
arpl
es
add
pop
add
mov
push
negb
imul
mov
lods
test
jecxz
and
pop
sub
in
lcall
push
or
and
imul
in
pop
test
loopne
gs
or
insl
xor
je
popa
test
scas
cmp
xchg
and
jp
cwtl
push
movsb
pminsw
outsb
fistl
lods
cmp
icebp
outsl
jmp
mov
in
mov
in
mov
mov
push
sub
or
int3
xlat
stc
mov
ret
jno
xchg
lods
clc
xchg
lock
sub
cmp
push
push
divb
jb
lock
fisttpl
aam
push
enter
cwtl
xor
jge
and
mov
push
hlt
pop
mov
jge
mov
cmp
scas
cmpsb
loop
mov
cmp
jne
sbb
lock
nop
fwait
dec
hlt
leave
nop
test
mov
popl
adc
xchg
inc
lahf
enter
mov
rclb
ret
insb
mov
jb
jns
test
mov
and
jle
cli
into
dec
std
cmp
adc
fs
rorl
mov
mov
aam
fwait
int3
or
mov
rorl
std
pop
and
lods
push
mov
pop
imul
mov
js
mov
cli
dec
push
into
out
push
shll
lret
dec
jnp
xchg
mov
jne
subl
xchg
mov
and
enter
popf
arpl
jb
xchg
out
test
adc
int3
fldcw
lods
rclb
int
shlb
pop
inc
outsl
mov
or
cmp
jnp
push
aas
dec
pushf
mov
or
pushf
cmp
cmp
sbb
adc
push
imul
add
push
sub
jmp
add
inc
or
pop
subl
jecxz
mov
fdivrl
adc
js
pop
loop
inc
inc
mov
cmp
shl
sti
data16
adc
sbbb
or
jg
in
rcrb
stc
lock
jmp
cltd
xor
sub
out
jnp
add
mov
xchg
arpl
pusha
stos
jbe
sub
imul
ficoms
xlat
ret
arpl
xchg
sbb
loopne
clc
sarl
fnstcw
or
cmp
dec
jp
fwait
arpl
cmpl
clc
adc
sahf
test
cli
dec
dec
gs
jmp
lret
fiadds
ljmp
xor
dec
bound
mov
mov
sub
dec
iret
ffreep
sbb
xchg
jmp
inc
adc
mov
int
cmp
aas
popf
push
mov
pop
lods
arpl
inc
inc
jno
icebp
jle
divb
push
push
cli
cmp
mov
lret
jns
movsl
repnz
mov
mov
push
jb
aaa
mov
dec
js
int3
and
test
cmpb
sub
mov
pop
jb
rcll
and
mov
out
mov
in
mov
aam
xchg
les
add
je
push
lds
or
jns
mov
das
jbe
inc
or
sub
adc
adc
push
jno
call
in
and
je
push
push
lea
daa
in
dec
lea
mov
push
out
xor
push
dec
cmp
add
movsl
xor
addb
and
and
add
jns
mov
leave
jne
lahf
fmul
mov
inc
mov
out
call
push
cmpl
adc
sub
xchg
fcomps
inc
or
faddl
push
sti
xchg
and
push
enter
aaa
cmc
in
mov
sub
pop
add
push
pop
leave
xchg
lahf
orb
mov
or
mov
cmpsl
or
inc
repz
mov
cmp
sbb
cmpsl
fst
frndint
pop
cmpl
insl
stos
outsb
rorl
and
cmpb
imul
xchg
das
sbb
sbb
dec
mov
callw
xor
sbb
inc
xlat
or
sub
jbe
sub
sti
loopw
nop
int
pop
jge
iret
inc
arpl
jnp
addr16
xchg
shll
mov
add
push
fisubrl
adc
or
adc
testl
mov
or
inc
add
loope
fnsave
push
std
adcl
pop
add
outsb
lds
cmp
mov
xchg
mov
jb
addb
adc
test
sub
inc
xchg
mov
adc
push
or
in
popf
inc
mov
clc
cmp
sub
sbb
jle
and
xchg
shlb
ds
sub
sti
shll
push
pop
xchg
rol
adc
xchg
jmp
add
add
sbb
push
or
jp
pop
pop
mov
xchg
inc
or
push
in
xor
and
mov
and
movsl
jle
in
leave
pop
pop
rcr
es
xchg
int3
push
nop
test
into
xor
daa
cmp
rcrb
out
mov
std
test
cld
cs
push
repz
inc
inc
xor
insb
add
rol
clc
sbb
stos
repz
les
fmul
and
sahf
shrb
push
iret
mov
mov
fidivs
push
call
jb
lea
inc
shrb
dec
jp
xchg
cli
pop
push
pop
xor
cmp
cmp
mov
lock
ds
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
sbb
stos
stc
jmp
lret
mov
xor
mov
outsl
pop
or
dec
add
pushf
fisubl
push
andl
rorl
loope
push
insb
rcl
xchg
or
daa
xchg
mov
adc
xor
imul
fildl
adc
sahf
das
repnz
inc
mov
repz
and
ret
mov
fwait
jle
adc
inc
mov
push
cmp
jne
jne
or
cmp
lahf
fnsave
lea
nop
cmp
lcall
push
mov
shrb
mov
divb
pop
in
jge
dec
fisubrl
mov
adcb
or
fstps
xchg
pop
mov
fisubrl
cmp
mov
jecxz
shll
popa
scas
lret
es
cmc
movsl
out
shrl
push
popf
fiaddl
inc
int3
adc
dec
cmp
sub
rolb
xor
adc
insb
scas
inc
shrl
push
sub
jb
mull
imul
outsb
mov
push
push
iret
cmp
mov
push
dec
sti
push
mov
fdivl
call
pop
js
dec
sbb
xchg
sub
jmp
xor
add
adc
pop
fsubrs
push
adc
or
fs
cmp
stos
jle
jbe
fnstsw
sbb
cmp
je
jno
pushl
std
rcrl
aam
dec
cmc
or
cmc
lcall
cwtl
fs
testb
je
fs
cmc
adc
or
repnz
fninit
outsl
mov
test
xor
cwtl
mov
jae
pushf
adc
nop
das
lahf
mov
fimull
add
das
add
jae
aam
shlb
add
outsl
cld
push
das
mov
jne
push
cs
mov
in
jmp
cwtl
stos
daa
hlt
mov
push
sbbl
xchg
sti
cmp
or
aas
add
mov
cmc
outsl
jle
jae
xchg
ret
mov
aad
mov
pop
popf
add
lea
xor
lea
mov
cmpsb
push
fucomi
or
push
pushf
in
adc
push
cmp
imul
mov
pop
mov
ss
sbb
jl
adc
mov
into
pop
fmull
icebp
push
out
cld
stos
stc
fcmovbe
sti
in
xchg
jo
in
sub
and
shrb
ljmp
push
pop
fimuls
mov
sub
arpl
jbe
out
and
aad
xor
cmp
mov
and
mov
lret
es
es
mov
popf
ss
clc
rorl
daa
test
loopne
ds
cmpsb
in
add
pop
dec
loopne
test
loope
jmp
ljmp
xchg
imul
adc
dec
mov
and
std
bound
pop
xorl
or
rcr
ds
test
mov
es
mov
inc
popf
adc
xlat
push
dec
popf
cmc
sti
sarb
stc
sub
idivl
xor
in
adc
jbe
sahf
xchg
add
outsb
mov
sub
sbb
insb
and
scas
stos
add
mov
pop
test
pop
sbbb
mov
test
test
call
sbb
cmp
scas
dec
and
fwait
xor
push
sbbb
ja
dec
add
inc
loop
enter
adc
mov
inc
push
cwtl
sar
lahf
fistpll
ffreep
int3
mov
imul
dec
push
or
pop
testl
test
xor
rol
insb
aad
cld
cmp
popa
out
psubsw
jnp
fnsave
insl
fsubl
adc
mov
aad
jge
insb
add
out
aam
out
out
pop
mov
out
sti
loope
xor
or
push
out
dec
andl
and
ja
mov
stc
push
enter
dec
add
inc
imul
mov
lcall
push
add
cmp
sbb
lret
andb
or
les
fsubp
cmp
js
fmul
scas
jo
adc
pop
dec
adc
xlat
mov
mov
cmc
pop
sub
mov
loopne
cwtl
pop
scas
adc
or
fldcw
sub
ret
add
or
or
iret
inc
mov
lcall
push
pop
dec
pop
cmpsb
test
inc
mov
fstps
les
lods
lret
push
bound
out
pop
in
iret
scas
push
inc
lahf
mov
push
dec
loop
mov
icebp
fbstp
loope
cwtl
jb
sub
mov
les
dec
ja
push
out
mov
xchg
dec
fucomi
mov
fwait
push
ja
pop
inc
add
cld
jge
daa
popf
popa
mov
pop
stc
repz
fistpl
imul
mov
fs
js
push
mov
adc
jb
jne
push
mov
shlb
std
xchg
call
int3
ficompl
adc
mov
mull
and
sti
or
push
in
mov
xor
fcoml
into
inc
xor
jg
in
ja
sub
fmuls
mov
cmp
dec
push
popf
addr16
icebp
sahf
rclb
mov
shrb
add
pop
add
mov
pop
clc
jns
cwtl
cwtl
stos
out
out
iret
push
out
cmp
sub
xor
movsl
or
cld
je
std
mov
cmp
pop
sub
xchg
test
ds
or
lods
add
cmpsb
adc
insb
sub
negl
pop
sub
push
dec
cmp
stos
dec
or
pop
push
xor
inc
daa
outsl
fwait
xor
pop
or
adc
loop
movsl
shrb
inc
out
xchg
jns
std
and
mov
mov
or
or
mov
mov
xchg
imul
roll
xor
xor
fstpt
mov
pop
jno
or
cmp
mov
and
pop
xlat
add
subb
mov
mov
clc
add
cmp
push
sub
ljmp
adc
fildll
jecxz
inc
sbb
sarb
sbb
movsl
in
stc
fists
mov
out
or
or
pop
cld
fidivs
cmp
cmp
inc
pop
jl
and
jae
movsl
jle
cmp
jbe
shll
in
mov
cmp
mov
nop
loop
sbb
and
ja
xchg
and
in
test
fadd
xchg
xlat
aad
adc
cmpsb
mov
sbb
and
pop
add
rcrb
movsl
lds
cltd
jp
hlt
mov
test
xlat
mov
push
lods
lea
mov
push
imul
fadd
xchg
cs
sub
cwtl
push
insl
xchg
lcall
test
out
mov
stos
jo
lahf
pop
inc
cld
mov
pop
push
mov
ret
das
scas
cs
movsl
xor
pop
jb
sbb
or
push
scas
adc
xchg
mov
lds
mov
outsb
leave
jno
aad
leave
push
aas
or
mov
jp
mov
adc
into
dec
jmp
mov
xchg
xchg
push
scas
sub
jne
fdiv
jecxz
fldenv
cmp
rorb
mov
jbe
out
sbb
mov
mov
push
insb
jno
mov
cmp
add
push
scas
rclb
pop
ret
sti
repnz
mov
int3
imul
inc
mov
test
xchg
cmp
call
mov
push
fs
outsb
mov
sti
xor
je
mov
and
lds
int
into
nop
leave
pop
mov
nop
xlat
sub
jns
loopne
addb
sbb
mov
test
inc
push
cmp
dec
mov
pop
jle
push
outsb
xor
ret
das
inc
and
or
insl
jle
cmp
cwtl
pop
adc
gs
jge
ret
fimuls
packuswb
sti
dec
js
lret
mov
push
push
imul
cmp
aam
fiadds
daa
mov
sub
test
pop
jne
fbld
and
into
stc
jne
xchg
in
scas
clc
mul
push
and
sbb
or
test
and
mov
pop
mov
fstps
rol
inc
test
sbb
sbb
repz
pop
pop
arpl
dec
mov
adc
jae
dec
jnp
mov
int3
rclb
bound
lcall
pushf
inc
int3
orl
popf
mov
pop
int3
sarb
andl
pop
imul
mov
imul
adc
mov
sbb
add
xchg
pop
jo
lea
repnz
lcall
inc
mov
fs
cmp
lods
test
adc
into
lea
cltd
enter
jl
or
sahf
xchg
mov
mov
cmp
lods
mov
mov
outsl
xchg
dec
inc
enter
cli
imul
scas
xlat
mov
sub
dec
push
cld
seta
mov
pop
adc
or
dec
loop
sub
mov
jno
sub
maxps
mov
sub
and
ror
or
pop
add
or
pop
mov
hlt
movsb
adc
adc
sti
mov
loope
adc
jl
test
popf
push
iret
lock
mov
jle
push
mov
fwait
lcall
sub
adc
aas
popf
adc
rcrb
fistpl
mov
lret
push
sbb
fnstcw
jnp
stc
dec
cld
mov
dec
and
nop
inc
mov
add
xor
inc
sub
test
idivb
mov
mov
push
sub
movsb
and
jmp
jecxz
sbb
xlat
das
std
jb
insl
dec
sbb
bound
sbb
scas
cwtl
pop
push
add
inc
popf
mov
jo
xor
cli
pop
insl
call
jg
sub
aaa
mov
iret
add
sahf
rol
push
fwait
mov
pop
out
cmp
stos
inc
and
pop
or
flds
xlat
cmp
add
aad
mov
and
movsb
push
mov
mov
xor
fildll
adc
mov
sti
cmpb
jae
ret
enter
out
add
roll
dec
cmp
out
push
hlt
gs
pop
pop
es
icebp
pop
jp
xchg
scas
test
adc
std
insl
and
adc
mov
xchg
pushf
push
in
test
mov
add
mov
enter
cltd
add
aaa
adc
jmp
or
call
dec
mov
xchg
jns
into
std
bound
push
sbb
adc
in
stc
jb
mov
push
fsubl
add
mov
xorb
inc
xor
or
fmuls
je
mov
outsl
sbb
nop
pop
leave
jo
sbb
and
lret
push
and
mov
sarb
push
out
and
imul
shlb
inc
popf
sub
pushaw
addr16
pop
sub
mov
xor
push
stc
bound
decl
fistl
sbb
pushf
sbb
into
int
add
mov
mov
adc
gs
cmp
imul
dec
fisttpl
pop
les
loope
cltd
jbe
loop
cmp
sbb
out
pushf
push
rclb
xchg
into
lock
push
loopne
cmp
fdivl
adc
test
push
and
mov
popl
adc
jl
inc
aas
sub
imulb
lods
out
nop
imul
push
movsl
ss
dec
cmpsl
cmp
and
cmp
xchg
pop
stc
aad
std
sub
mov
test
pop
sub
rorl
inc
mov
xor
jo
fisttps
pop
pop
cmp
ss
fistpll
imull
iret
iret
outsl
pushf
inc
mov
jecxz
inc
adc
add
lret
jp
ss
jns
std
push
push
sub
jge
test
adc
notl
in
adc
mov
in
mov
popf
ja
sarb
adc
pop
std
test
push
inc
repnz
mov
bound
ljmp
dec
xchg
jo
je
add
add
pop
add
inc
xchg
sub
test
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
push
fisubrs
mov
insl
add
insl
