jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
sbb
enter
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
push
and
and
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
movsb
push
inc
add
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
sbb
add
addb
pop
inc
add
add
or
lea
mov
add
mov
add
pop
inc
add
add
push
add
add
push
add
mov
add
add
add
add
add
add
or
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
jle
inc
add
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
int3
and
jne
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
sub
inc
add
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
pop
inc
add
add
mov
add
in
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
push
and
xor
cmp
je
mov
loop
inc
add
call
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
test
inc
add
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
addb
add
inc
and
mov
inc
and
dec
pop
inc
add
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
mov
inc
add
add
mov
mov
push
push
call
test
js
lea
lea
inc
or
rorb
xor
add
sub
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
lock
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
xor
adc
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
cs
add
mov
lea
cmp
add
decl
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
add
lds
test
decl
or
adc
lock
incl
dec
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
add
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
add
jno
adc
add
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
add
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
subl
and
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
mov
inc
add
or
push
add
inc
and
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
cmp
add
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
cmpl
push
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
call
lea
mov
call
push
mov
mov
call
pop
pop
ret
mov
test
je
push
call
pop
xor
ret
andl
inc
mov
mov
test
jne
mov
cmpl
push
je
pushl
mov
call
mov
test
jne
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
jmp
cmpb
jne
push
lea
call
mov
call
pop
movb
jmp
int3
mov
sub
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
or
add
cmpl
jge
mov
mov
push
push
push
call
mov
add
cmpl
mov
jge
mov
mov
sub
mov
add
addl
je
test
jle
mov
mov
add
adcl
mov
push
call
add
test
js
test
jle
mov
push
call
int
inc
add
inc
add
add
push
stc
popl
loope
jbe
mov
push
add
mov
mov
jns
je
into
add
add
mov
fildl
pushf
filds
mov
cmpsb
outsl
cmpsb
mov
add
adcb
call
add
pushf
fchs
add
cmp
push
push
push
push
push
push
lea
push
call
mov
mov
test
aam
ret
mov
faddl
pusha
add
jno
mov
cwtl
aad
add
add
add
popa
add
fdivr
lcall
inc
in
push
push
push
push
push
lea
push
push
push
push
push
call
add
test
pop
stos
lds
jnp
add
loop
add
add
add
loopne
mov
add
xchg
movb
jb
fildl
movsl
imul
out
mov
ja
xchg
add
add
add
add
add
add
pop
push
push
push
push
push
call
add
fwait
add
subb
add
add
add
loope
rolb
roll
push
popa
add
pop
pop
add
add
in
hlt
pop
push
push
push
push
push
call
add
movsl
fildl
xchg
repnz
clc
add
add
push
lods
add
jmp
mov
stos
pop
add
stos
pushf
enter
jl
int3
add
fiadds
add
add
mov
mov
shr
jo
lahf
mov
sub
pop
call
push
push
push
push
lea
push
push
push
push
call
pusha
lret
add
push
stos
add
lods
add
add
in
xchg
imul
add
mov
add
add
add
jle
add
add
mov
add
add
roll
fwait
mov
popf
add
outsl
pop
add
xchg
jno
push
sti
sub
pop
call
push
push
push
push
push
lea
push
push
push
call
les
imul
ror
shrl
add
push
add
bound
push
je
imul
mov
mov
add
sub
pop
push
call
push
lea
push
push
push
push
lea
push
lea
push
push
call
push
add
xchg
cmpsb
aad
sahf
add
add
test
add
ret
cltd
add
test
mov
add
add
add
sar
outsl
mov
faddl
add
add
mov
fiadds
add
fnstcw
add
test
jge
cmc
lret
pusha
mov
imul
sub
pop
jmp
push
push
push
push
push
push
push
push
lea
push
call
xchg
add
jl
cmpsl
jbe
add
add
cli
add
mov
add
add
shr
mov
stos
add
lcall
mov
push
push
lea
push
push
push
push
push
push
lea
push
push
call
stos
push
loope
sarl
pusha
add
xchg
ret
movsl
jge
sub
iret
je
add
je
mov
scas
add
add
roll
popa
jecxz
xchg
pop
add
mov
pop
push
add
add
ja
add
cmpsb
add
mov
test
sub
pop
mov
add
push
lea
push
push
push
lea
push
call
cmpsb
js
hlt
add
add
mov
jge
pop
add
add
out
cli
loopne
add
mov
add
add
jbe
add
add
in
in
lcall
ret
add
add
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
push
add
pop
test
mov
mov
jns
ljmp
add
add
js
add
add
mov
add
fdivr
lcall
ret
cmpsl
add
mov
push
push
lea
push
push
call
add
jecxz
mov
pop
fiaddl
movsb
add
push
fwait
add
clc
pop
lods
add
faddl
add
push
mov
testb
add
fadds
add
mov
add
add
add
popl
xchg
push
push
stos
add
mov
push
loop
add
iret
sti
add
lock
data16
in
hlt
lcall
sbb
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
add
cmc
cltd
add
fwait
mov
popa
popf
add
nop
add
mov
adc
add
add
mov
test
into
add
jb
add
add
fdivr
lcall
les
int3
sub
lods
push
rol
push
or
not
add
add
not
sub
lea
add
pop
dec
inc
pop
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
out
out
stos
add
add
stc
rcrl
add
add
gs
lcall
shll
lds
gs
pop
pushl
push
push
lea
push
push
push
push
lea
push
call
add
push
jb
mov
in
jne
roll
jno
jl
test
in
add
xchg
fs
jae
fsubr
mov
filds
mov
add
lret
add
mov
add
push
add
movb
lcall
inc
pop
add
push
push
push
push
lea
push
push
lea
push
push
call
je
mov
add
add
int3
add
push
add
jno
mov
fwait
add
add
fidivs
scas
cld
mov
add
sti
mov
mov
movl
push
push
lea
push
lea
push
call
repnz
add
mov
scas
add
jecxz
int
cmpsb
jecxz
popa
add
push
add
jae
add
cld
push
shl
add
js
fcmovnbe
add
add
rcll
outsl
adcl
cmpsl
data16
sub
pop
lea
push
lea
push
push
push
push
push
lea
push
call
movsb
mov
mov
outsl
push
pusha
loop
cli
add
enter
add
mov
fdivrp
push
add
add
push
jecxz
push
mov
mov
jmp
add
add
iret
lock
mov
jmp
pop
push
pushl
push
push
push
lea
push
push
lea
push
push
push
push
call
add
shl
add
into
add
ja
add
pop
xlat
loopne
add
mov
clc
add
add
add
add
xchg
xchg
pop
rolb
sub
pop
pushl
push
push
push
push
push
call
add
js
add
xchg
jnp
lock
add
add
in
add
lret
add
add
fdivr
lods
add
add
call
pushl
push
lea
push
push
lea
push
push
call
dec
add
popf
mov
insb
in
xchg
add
sarl
lods
std
movsl
add
lret
lcall
push
add
mov
out
imul
add
jnp
mov
push
mov
fs
mov
loopne
pop
add
push
add
add
mov
pop
fs
xchg
movsb
lret
fmul
sub
pop
pushl
push
lea
push
push
push
push
call
mov
push
scas
les
mov
mov
in
add
add
ja
clc
fiaddl
xchg
add
mov
scas
shlb
roll
pop
cmc
aam
add
testl
icebp
lcall
jecxz
sub
pop
call
push
push
dec
sub
push
xor
add
sub
add
sub
dec
ror
inc
pop
sub
add
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
jl
add
aam
addb
add
jmp
mov
add
pop
enter
jecxz
mov
loopne
add
imul
in
fcomps
jne
push
push
push
push
push
push
call
add
add
fcompl
sti
jno
pop
addb
add
mov
add
add
add
mov
roll
mov
arpl
add
xlat
mov
xchg
into
add
add
loope
add
js
mov
call
add
jne
fdivp
mov
call
add
push
push
push
shl
rol
dec
not
push
and
add
sub
rol
sub
add
ror
inc
pop
shl
inc
pop
push
lea
push
push
push
call
in
add
add
mov
add
mov
bound
add
add
add
test
add
add
jo
add
add
enter
mov
rolb
loopne
add
push
push
lea
push
push
push
call
xchg
cld
jno
add
mov
mov
xchg
add
jle
jns
mov
mov
rclb
add
add
push
add
add
mov
pop
add
in
push
add
xchg
add
rcll
add
add
stc
add
add
les
push
push
push
push
push
call
push
add
push
add
test
add
add
add
xchg
pop
sar
add
lds
jle
mov
lock
call
push
push
push
lea
push
push
push
call
addb
add
mov
push
add
add
fiaddl
add
add
add
add
add
out
neg
mov
jl
imul
pop
ffree
xchg
mov
roll
pusha
pushf
add
add
add
in
call
push
push
push
push
lea
push
push
push
lea
push
push
call
push
add
jbe
cmpsl
mov
out
add
jecxz
movsl
out
add
fnsave
add
add
add
in
xlat
add
add
pop
add
gs
add
lcall
push
push
push
push
push
push
lea
push
push
push
call
jne
add
enter
mov
add
mov
mov
insb
hlt
pop
add
imul
into
js
jne
arpl
mov
add
mov
add
push
lea
push
push
call
scas
out
ret
mov
out
imul
loopne
add
add
add
imul
jae
jecxz
enter
std
mov
push
cmpsl
add
pop
add
push
add
xchg
negl
lret
add
loope
push
mov
gs
cwtl
sar
mov
stos
add
lock
pop
mov
add
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
add
in
add
lret
lcall
add
iret
add
enter
add
ja
in
jns
mov
push
cli
add
mov
add
push
jge
add
test
clc
stos
add
in
stos
imul
popa
out
push
add
ret
add
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
flds
add
loop
test
sbb
roll
cmc
cmpsb
cmpsb
leave
xchg
add
test
add
fxch
mov
lret
addl
add
add
xchg
add
lret
push
mov
data16
add
add
ret
pop
mov
lcall
in
fdivr
lcall
ret
cmpsl
add
push
lea
push
push
push
lea
push
push
lea
push
call
add
jle
jge
jge
add
add
add
test
add
add
fldcw
add
add
add
add
add
add
mov
add
mov
hlt
mov
add
pop
mov
push
push
lea
push
lea
push
push
push
push
push
push
call
fisttps
add
push
pushf
popa
testb
add
add
lock
pop
scas
mov
mov
xchg
jl
add
mov
loope
add
int
xchg
lcall
xor
push
push
push
push
push
lea
push
lea
push
push
push
call
xchg
iret
add
jmp
pusha
frstor
add
jl
add
out
mov
mov
test
mov
push
mov
add
add
stos
add
into
cld
cmpsb
in
js
add
add
push
push
lea
push
lea
push
lea
push
push
call
mov
addb
int
add
aad
pop
mov
add
mov
lea
mov
addr16
jns
add
add
loopne
fldl2t
add
add
test
lock
lcall
jne
push
lea
push
push
lea
push
push
push
call
insb
add
cmc
cltd
ljmp
cmc
popf
mov
add
fisubl
add
mov
rcl
add
icebp
int3
add
popf
push
add
add
mov
bound
fmull
add
filds
lcall
mov
push
push
lea
push
push
push
call
outsl
fldl
xacquire
fcompl
out
icebp
fisttps
add
add
sahf
add
rol
add
mov
add
add
fucomip
add
mov
add
fdivrl
jnp
add
add
ror
mov
mov
mov
push
add
add
ret
je
add
in
lock
lcall
add
push
push
push
push
push
push
push
lea
push
call
jnp
add
into
add
add
add
add
cld
push
int3
add
add
stc
push
ret
in
add
mov
jns
aam
lcall
call
lret
add
clc
add
les
lea
push
push
push
lea
push
call
in
mov
icebp
loop
add
nop
add
cmpsb
imul
add
push
add
push
jge
jae
mov
out
pop
popl
lret
add
bound
in
in
lcall
lock
push
push
push
call
add
je
pop
js
xchg
ret
pop
add
mov
add
stos
add
add
stos
add
roll
add
popf
push
add
lock
test
in
hlt
pop
mov
push
push
push
lea
push
call
mov
jmp
add
add
loope
add
add
lret
scas
add
add
loop
pop
lret
push
mov
add
add
push
jge
jecxz
fldl
insb
fists
mov
add
fwait
lock
xlat
xchg
push
aam
add
mov
lcall
or
push
lea
push
call
add
imul
add
add
add
jno
add
pop
add
xchg
popf
add
fisubs
lock
add
ja
hlt
roll
add
add
add
jl
fwait
in
push
add
test
test
nop
add
mov
mov
in
scas
add
scas
add
lcall
les
add
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
mov
mov
loope
add
lahf
nop
add
add
movsb
clc
xchg
push
roll
add
mov
xor
movsb
add
addb
add
add
xchg
add
cmc
jne
stos
mov
loop
test
fnstenv
aad
outsl
mov
sub
pop
push
mov
push
push
lea
push
push
call
int3
out
add
int3
add
pop
add
add
add
add
movsb
lea
add
add
xorl
adcb
jae
pop
divb
jns
jle
fiadds
xchg
add
shlb
pop
pop
add
lret
cmpsb
mov
add
lcall
add
push
lea
push
lea
push
push
push
push
call
mov
pop
add
aam
stc
mov
int3
ficomps
cmpsb
fld
lahf
xchg
mov
add
mov
rolb
add
ljmp
add
adc
add
add
ror
shrl
in
call
add
add
push
push
lea
push
call
pop
add
cmc
mov
mov
add
clc
jbe
add
add
fwait
jecxz
shrl
add
add
push
gs
add
cli
add
lret
sbb
je
addr16
pop
sub
push
push
push
push
push
push
push
push
call
fstpt
add
add
add
hlt
movsb
add
hlt
jp
pushf
add
push
add
add
add
add
mov
scas
pushf
in
mov
sub
pop
pop
rep
push
push
push
push
lea
push
call
movsl
add
movsb
addr16
add
ret
pop
mov
xchg
mov
lret
lret
add
add
pop
add
jbe
adc
ljmp
add
nop
sub
pop
pop
mov
push
lea
push
push
push
call
add
add
add
xchg
add
cmc
fs
add
mov
addb
out
mov
cmpsl
scas
add
add
aam
add
add
testl
mov
add
std
sub
pop
add
push
xor
ror
add
pop
add
add
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
hlt
arpl
call
add
pushf
add
xchg
in
add
add
mov
add
pop
lret
add
mov
add
fdivr
lcall
inc
and
pop
jae
push
push
push
lea
push
push
push
push
lea
push
push
call
jmp
jp
roll
add
stc
xchg
out
mov
add
loop
mov
popf
add
popf
jl
add
add
push
lahf
xchg
or
add
add
add
add
add
cwtl
iret
add
xchg
add
jge
cli
lea
add
pop
push
mov
subl
fdivr
lcall
add
push
push
lea
push
push
push
push
call
test
arpl
add
mov
rcll
roll
ljmp
mov
fadds
add
sarl
xchg
add
sub
pop
add
push
rol
inc
sub
shl
pop
mov
xor
push
pop
mov
push
push
push
push
push
call
add
fldt
add
add
add
jno
testb
roll
movsl
mov
enter
jl
lods
lret
mov
add
jecxz
push
mov
push
les
aad
add
rcll
popa
mov
addr16
push
in
add
jecxz
out
cld
test
add
add
test
or
push
push
push
push
push
push
push
push
lea
push
push
call
add
pop
nop
sti
push
rcrl
addl
push
xchg
mov
add
pusha
loopne
add
add
add
mov
add
js
mov
add
hlt
add
jmp
iret
add
add
in
test
pop
sub
pop
add
push
inc
pop
add
add
push
add
pop
mov
push
push
add
lea
shl
rol
push
or
not
add
sub
not
add
pop
ror
sub
pop
push
inc
pop
pushl
push
push
lea
push
push
push
push
push
call
loope
add
add
enter
cmpsl
add
add
mov
xchg
add
lret
mov
movl
iret
pop
add
cmpsl
addl
je
mov
add
add
add
mov
roll
in
push
add
push
push
push
push
or
inc
add
sub
inc
sub
dec
lea
pop
pop
push
xor
pop
push
push
sub
sub
sub
pop
push
push
lea
xor
dec
pop
call
mov
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
fadds
add
scas
add
add
loope
jae
je
jno
push
add
xchg
in
add
addl
lods
outsl
hlt
mov
mov
into
lods
aad
test
lcall
lcall
push
sub
lea
add
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
add
je
lods
pop
add
lds
outsl
nop
mov
add
add
jns
add
push
add
addb
add
std
mov
int3
add
loopne
lcall
pop
hlt
push
pop
add
push
add
ror
pop
add
push
push
push
push
push
push
push
push
push
call
movl
rclb
mov
add
add
push
sar
not
pop
mov
pushf
mov
mov
push
popl
out
in
add
fwait
add
fiadds
loope
in
fcompl
ret
cmpsl
add
push
lea
push
push
push
push
push
call
sti
loopne
mov
loop
xlat
int
mov
add
lock
roll
push
add
xchg
lock
cltd
xchg
xchg
add
add
jne
add
andb
out
test
push
add
jo
push
add
add
sahf
xchg
jae
xor
push
inc
add
pop
add
push
sub
pop
push
push
shr
ror
pop
mov
push
push
push
push
push
push
push
push
push
call
jl
add
add
jecxz
add
add
add
mov
jb
testl
fldl
add
outsl
mov
lock
jge
fcmovne
jb
roll
add
push
add
jae
nop
pop
enter
pop
add
sti
mov
test
push
scas
add
add
lcall
add
push
push
push
push
push
push
push
call
mov
jo
rolb
andl
add
add
fidivrs
pushf
cli
into
faddl
add
xchg
lods
push
add
add
add
in
add
push
xchg
int
add
add
push
sub
pop
add
push
lea
push
lea
push
call
rolb
mov
arpl
repnz
loop
add
clc
add
out
add
add
mov
add
lret
mov
add
mov
add
add
lods
lret
hlt
lcall
push
rol
pop
mov
push
push
push
push
lea
push
lea
push
call
lcall
bound
aad
add
in
add
add
add
ja
shlb
push
push
roll
xchg
add
lahf
jle
jb
mov
jmp
clc
not
jmp
orb
xchg
add
out
mov
data16
test
add
in
pop
xor
push
push
push
push
call
pop
add
add
mov
int
add
scas
iret
cmc
mov
stos
add
add
xchg
jae
add
xchg
addl
add
add
add
fwait
mov
idivb
mov
add
stos
add
sub
pop
add
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
add
bound
pop
lcall
add
jns
xchg
jge
pop
int
add
popf
pop
lcall
add
cltd
cmpsb
lods
pushf
xchg
mov
mov
add
push
lret
mov
mov
mov
add
leave
mov
in
add
movsb
push
push
lea
push
push
push
push
call
add
jle
jmp
rolb
stos
add
mov
add
mov
pushf
cwtl
sarl
add
imul
lds
add
mov
test
mov
mov
in
call
xor
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
cmpsb
push
add
add
mov
lret
add
nop
mov
add
clc
jnp
add
mov
add
jnp
imul
loope
push
fistps
mov
test
sahf
aad
add
mov
xchg
xchg
nop
add
add
add
mov
in
fdivr
lcall
leave
je
push
push
push
push
call
add
call
sahf
lods
sti
add
bound
jae
sahf
add
xchg
push
movsb
cmpsb
add
ljmp
jmp
sti
std
cltd
add
add
add
lcall
xor
push
push
push
push
call
mov
xchg
enter
add
iret
add
mov
push
jge
bnd
popf
add
nop
lret
add
popf
addb
add
add
push
push
mov
sub
pop
mov
xor
push
inc
shr
pop
add
add
push
push
push
push
push
lea
push
push
call
add
test
mov
pop
mov
in
add
popa
fimuls
lock
mov
add
add
add
lods
add
mov
add
in
add
sub
pop
push
mov
xor
push
add
sub
rol
pop
add
pop
push
lea
push
push
push
push
push
lea
push
lea
push
call
push
cld
add
mov
stos
add
add
jmp
xchg
add
add
add
rolb
mull
add
jge
add
incb
push
jle
mov
add
mov
add
mov
test
sub
pop
rep
push
rol
add
ror
shl
pop
mov
push
push
push
lea
push
push
lea
push
call
in
add
mov
pop
xchg
pushf
leave
xlat
rolb
add
mov
add
add
lea
lret
lds
mov
add
cld
add
mov
add
add
lcall
push
cmpsb
add
xchg
add
fbld
ja
add
lret
push
cmpsl
add
mov
add
sub
pop
xor
push
push
call
pusha
jbe
out
add
add
in
xchg
add
add
add
add
add
push
out
add
mov
lock
scas
mov
fs
fidivrs
addr16
mov
pusha
push
add
in
clc
lcall
les
push
lea
push
push
lea
push
call
add
lods
stos
neg
add
add
lods
push
add
les
add
lods
scas
addr16
mov
aam
fldl
add
add
test
mov
add
sub
pop
or
je
mov
push
push
lea
push
push
push
push
push
call
add
mov
add
popf
add
js
add
add
mov
lods
mov
add
roll
add
add
add
add
add
mov
popf
in
mov
add
jns
jp
add
pop
mov
ljmp
pop
add
add
push
xor
sub
pop
rep
push
push
lea
push
push
push
push
push
push
call
mov
lcall
add
mov
lods
andl
mov
hlt
add
push
push
scas
add
test
hlt
pop
push
mov
mov
add
xchg
add
fiaddl
out
mov
xchg
add
lcall
push
push
inc
sub
shl
add
push
or
inc
add
add
rol
sub
add
ror
ror
pop
not
xor
sub
pop
push
xor
shl
add
add
pop
pop
push
lea
push
push
push
push
push
call
add
mov
movsb
jbe
jl
imul
add
add
mov
rcrl
add
lahf
stos
ret
mov
faddl
add
insb
add
pop
imul
add
clc
add
mov
add
movb
ret
dec
stos
add
jne
push
pop
mov
push
push
call
fwait
cwtl
add
push
int
add
fcoml
mov
mov
les
flds
xchg
out
mov
add
cmpsb
cmpsb
mov
add
nop
movsl
xchg
fwait
xchg
outsl
add
add
jp
aad
jne
imul
jae
xchg
test
add
cwtl
shlb
add
add
add
lods
out
xchg
out
aam
imul
and
push
lea
push
push
push
call
aam
je
mov
nop
int3
xchg
add
filds
cmpsl
out
aam
jle
add
shl
add
rcr
out
mov
mov
loopne
lods
test
cltd
sbb
jp
add
loopne
add
addb
mov
add
add
bound
add
test
aam
xchg
push
stos
cld
sub
pop
jmp
push
push
push
lea
push
push
lea
push
push
call
add
mov
cmpsl
aam
pop
lahf
xchg
add
in
test
fadds
pop
lods
ficoml
ljmp
jbe
bound
imul
mov
in
jecxz
rolb
add
mov
xchg
add
movsb
add
pop
arpl
add
in
add
push
push
push
lea
push
push
lea
push
push
push
call
les
pop
add
stos
gs
add
data16
scas
add
mov
addr16
hlt
push
mov
lret
fildl
add
lea
in
push
add
add
mov
add
nop
rol
jmp
mov
sahf
add
add
sub
pop
push
push
dec
pop
push
push
lea
push
push
push
push
push
push
push
push
lea
push
call
insb
add
out
add
add
add
add
add
stos
int3
add
xchg
add
cmpsl
ror
add
fwait
add
lahf
out
lods
mov
mov
add
add
add
sahf
xchg
add
fadds
fwait
add
loop
add
add
lcall
push
push
push
push
call
add
add
xchg
push
add
roll
add
out
out
add
ljmp
add
out
mov
mov
add
movsl
cmpsl
faddl
mov
mov
rcrl
test
in
hlt
lcall
inc
cld
push
not
shr
shl
lea
pop
pop
push
sub
inc
add
pop
pop
pop
push
ror
sub
pop
pop
push
lea
push
lea
push
push
push
call
jle
mov
push
fs
add
pop
rolb
mov
add
in
add
mov
add
pop
jmp
add
iret
pop
add
sub
pop
leave
push
dec
shl
pop
ret
push
push
push
push
push
lea
push
push
push
call
add
testb
cmpsl
add
out
xchg
add
nop
add
rolb
movsb
andl
lods
push
cld
test
sti
add
sbb
out
les
lods
jne
je
mov
add
movsl
ljmp
push
fscale
lock
pop
push
mov
push
not
sub
pop
add
push
push
lea
pop
push
push
ror
add
pop
push
push
xor
rol
add
ror
pop
push
movl
push
push
push
call
cwtl
popf
add
hlt
xchg
iret
fistps
add
test
fadds
mov
add
add
add
lret
add
cwtl
add
mov
lock
add
pop
mov
add
pop
add
add
movl
movl
pop
push
push
lods
push
lret
mov
mov
in
hlt
pop
addl
test
je
push
not
pop
mov
pop
push
push
lea
push
push
call
mov
cld
mov
in
push
std
shrb
clc
ret
data16
rolb
add
ljmp
js
jecxz
mov
add
add
add
aad
add
add
add
scas
aad
add
imul
imul
push
push
push
call
jne
push
push
add
mov
addb
out
xchg
add
add
push
sti
mov
je
cwtl
add
add
add
clc
mov
add
popa
mov
push
cmc
add
shrb
jl
add
js
mov
add
add
out
loop
jmp
add
add
pop
jl
push
add
mov
pop
push
push
lea
push
lea
push
push
lea
push
push
call
mov
ja
push
add
add
add
add
add
div
cwtl
mov
add
add
push
imul
jl
mov
loop
aad
add
sub
pop
pop
push
rol
pop
leave
ret
push
push
push
lea
push
lea
push
call
lock
mov
add
add
lods
fiadds
cmc
mov
sub
add
pushf
repnz
jne
mov
in
in
lcall
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
add
add
les
mov
insb
add
push
add
scas
xchg
push
add
jp
add
xchg
pop
mov
cmpsb
scas
call
add
repnz
add
in
mov
int3
add
je
into
out
loopne
mov
add
lods
add
mov
lds
sub
pop
mov
push
push
lea
push
push
push
push
push
call
hlt
icebp
aam
addb
rcll
mov
add
stc
add
lods
add
out
add
mov
sub
pop
add
push
push
push
call
add
add
add
xchg
add
idiv
mov
mov
add
mov
push
adcb
add
arpl
push
sti
jge
roll
add
popa
add
add
mov
xchg
add
lods
aad
sub
pop
push
push
push
push
lea
push
push
call
add
add
add
cli
add
testl
add
jecxz
ljmp
add
cld
add
bound
pop
leave
fadds
add
mov
lock
lahf
pop
add
mov
cld
add
mov
into
data16
popa
cwtl
xchg
push
in
in
in
pop
push
push
push
push
push
push
push
push
push
call
add
xchg
hlt
add
movsb
mov
xorl
add
add
jns
jno
add
add
hlt
add
mov
test
enter
mov
pop
mov
add
movl
lcall
mov
add
mov
mov
in
loopne
push
push
push
push
push
push
push
push
push
push
call
add
add
fbld
add
add
add
jle
cli
xchg
add
add
loopne
ljmp
in
add
sub
pop
testl
addl
push
add
pop
push
push
shr
dec
pop
call
mov
push
sub
pop
pushl
push
push
push
push
lea
push
push
push
push
push
push
call
mov
add
add
mov
cmpsl
lcall
mov
jecxz
lret
add
mov
add
stos
rolb
add
add
add
jne
fs
add
push
mov
xchg
fwait
add
push
je
cmc
data16
outsl
add
mov
add
loop
xchg
scas
stos
add
xchg
sub
pop
push
push
add
shl
dec
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
repnz
popf
jecxz
or
jns
xlat
jne
add
add
int3
add
xorl
fists
popl
mov
leave
sub
pop
call
push
push
push
push
push
call
cld
mov
add
mov
mov
leave
add
stc
xorl
out
lret
jmp
add
jecxz
lret
loope
je
popf
sahf
xchg
clc
add
push
mov
add
push
jnp
int3
add
stc
add
jge
add
test
sub
shl
ror
sub
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
enter
add
flds
jmp
add
add
jp
andb
add
add
add
leave
roll
rolb
add
sub
pop
pop
pop
push
push
push
push
push
push
call
mov
lret
jns
lcall
push
add
mov
add
fildl
jecxz
lret
add
sub
pop
pop
leave
push
push
call
add
mov
jmp
add
add
push
add
mov
pop
fs
scas
add
xchg
test
push
add
add
sub
pop
ret
push
push
inc
not
dec
inc
pop
mov
add
push
inc
ror
shl
rol
pop
push
push
rol
pop
push
push
push
push
push
push
push
call
sti
push
xchg
repnz
jmp
mov
les
out
cld
fisubrl
add
add
mov
add
fistl
cli
mov
xchg
lds
add
scas
add
lock
add
in
lcall
movl
push
push
push
push
call
iret
in
int
add
mov
jo
lods
movl
cmpsl
mov
add
jae
fadds
add
aad
pop
add
xchg
hlt
jle
clc
push
add
add
add
add
js
add
pushf
xchg
addr16
in
sub
pop
push
push
lea
pop
call
push
push
dec
add
xor
pop
call
subl
push
rol
sub
pop
cmpl
jne
pop
push
inc
ror
dec
pop
pop
push
push
push
push
push
push
lea
push
call
lds
mov
scas
addr16
cwtl
add
sarl
mov
pop
mov
out
add
les
stc
in
sub
push
add
add
roll
ljmp
filds
lcall
push
ror
sub
pop
pop
push
push
lea
push
push
push
push
push
push
call
in
push
add
sub
test
add
popa
movsb
fs
lahf
stc
xchg
add
add
add
xchg
add
add
mov
add
add
pop
add
add
fldl
add
jl
lock
filds
add
std
roll
add
les
pop
leave
push
rol
pop
ret
push
add
pop
push
push
push
push
push
push
push
push
push
push
push
call
xchg
add
add
add
movl
stc
add
add
pop
repnz
ja
xlat
shrl
jmp
popf
push
js
push
add
out
cwtl
fucomp
out
scas
enter
sub
pop
mov
push
lea
push
lea
push
push
push
push
push
push
call
add
imul
cmc
xlat
addr16
int
add
lods
arpl
shr
add
loop
ror
stos
bound
insb
test
add
rolb
subb
add
add
jl
jne
jecxz
push
mov
add
xchg
add
mov
sub
pop
add
push
not
rol
xor
add
pop
push
push
push
call
add
add
add
add
add
mov
jnp
add
add
add
add
jno
add
add
je
sti
arpl
call
jmp
ljmp
lret
pop
pop
fwait
ret
clc
pop
push
push
pop
push
push
push
lea
push
lea
push
lea
push
push
push
call
xchg
lods
fadds
add
movsb
mov
add
mov
jne
jecxz
pop
add
jne
xchg
add
movsl
leave
add
push
jne
out
add
push
testl
add
add
mov
in
push
push
push
push
call
push
add
mov
jne
icebp
loop
pushf
cwtl
hlt
mov
add
jae
xlat
ljmp
mov
mov
addl
test
cltd
add
aam
in
icebp
jnp
movsb
push
add
fiadds
add
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
push
call
mov
stc
add
nop
jl
add
add
add
rcrb
mov
xchg
add
add
lods
jae
add
mov
mov
add
push
add
enter
and
xchg
popf
cmpl
pop
lcall
loopne
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
add
out
rolb
add
add
imull
add
roll
xchg
add
add
cmpsl
popa
pop
fidivrl
nop
shl
add
cld
jns
popa
add
cmpl
add
xchg
pop
stc
cmpsl
pop
stos
add
jbe
mov
add
mov
push
add
lret
roll
in
fcompl
call
cli
sub
sub
xor
pop
mov
push
lea
push
call
aad
mov
pushf
xchg
add
add
add
add
add
leave
imul
test
jo
xchg
xlat
nop
add
jmp
leave
int3
mov
movsb
add
fwait
lahf
scas
test
add
shr
push
push
push
push
lea
push
push
push
push
call
xorl
clc
rclb
arpl
pusha
add
push
add
shll
jo
add
mov
pop
ror
pop
add
arpl
js
add
out
js
iret
add
in
add
pop
add
push
add
add
add
repnz
pop
add
push
lea
add
rol
pop
mov
push
sub
not
rol
shr
pop
mov
add
push
push
lea
push
push
push
push
call
mov
fsubr
nop
sti
add
add
lea
push
pushf
cli
je
mov
stos
mov
popa
shl
pop
adcb
add
add
add
lods
cmpsb
shr
jge
add
add
add
pop
mov
pop
push
jnp
jecxz
push
lods
add
lcall
shlb
inc
add
add
pop
sub
push
lea
push
push
push
push
call
cwtl
mov
jp
int
add
add
add
add
add
popa
mov
add
add
sahf
mov
jne
add
add
sbbb
mov
push
xchg
in
jl
sub
pop
mov
push
sub
xor
pop
cmp
jne
cmp
jne
push
shr
inc
pop
mov
movl
push
push
push
call
add
std
cltd
fs
call
mov
sti
les
jne
add
add
add
in
hlt
pop
jmp
push
sub
not
pop
mov
mov
push
sub
not
pop
sub
jne
mov
push
shl
sub
pop
movl
jmp
push
push
push
push
push
lea
push
push
call
jle
add
xchg
add
mov
movsl
jecxz
add
add
pop
pushf
cltd
test
ja
jnp
aam
add
add
scas
mov
xchg
push
add
add
add
add
xchg
imul
add
jno
add
add
addl
icebp
lahf
push
cmc
in
arpl
add
in
in
mov
mov
push
ror
sub
sub
pop
cmp
jne
push
sub
lea
pop
mov
push
push
call
add
add
into
mov
mov
aad
add
loopne
fucomi
sti
mov
imul
stos
add
add
jns
stc
xchg
flds
in
jge
rcl
cmpsl
loopne
mov
mov
add
incb
add
lcall
add
add
add
pop
or
add
faddp
jmp
pop
mov
cmpw
jne
push
lea
push
lea
push
call
push
test
add
pop
cli
fs
sti
add
pop
lcall
add
call
jecxz
mov
jno
add
jecxz
add
jne
mov
mov
add
pop
mov
in
imul
in
hlt
lcall
inc
adc
add
push
lea
push
push
push
push
call
mov
add
fiadds
add
arpl
mov
addb
jge
add
add
add
test
out
mov
test
add
repnz
add
in
call
add
push
shl
not
pop
pushl
pop
push
push
push
call
add
hlt
iret
add
out
repnz
add
add
add
add
add
push
add
jns
out
movl
fidivs
scas
jnp
shrb
jl
xchg
lods
add
push
imul
scas
loope
std
push
hlt
pop
mov
push
lea
push
push
push
lea
push
lea
push
call
clc
jbe
aad
fimull
pop
in
movsl
imul
push
add
fwait
pop
push
cmpl
mov
sahf
add
stos
arpl
add
mov
gs
pop
mov
in
ja
leave
add
arpl
addr16
pop
mov
push
push
push
push
push
push
push
push
push
call
pop
add
popl
pop
stos
add
mov
testl
stos
add
movsl
add
add
loopne
icebp
test
movsb
add
push
bound
adcb
call
mov
add
mov
pop
lock
add
add
mov
int3
pop
sub
pop
mov
push
push
lea
shl
xor
push
or
inc
add
add
not
sub
sub
lea
lea
pop
sub
pop
push
inc
pop
push
push
push
push
push
push
lea
push
lea
push
call
add
push
add
loopne
nop
pusha
loope
je
jge
add
lret
add
clc
enter
clc
add
mov
ja
add
jnp
add
call
jp
cld
aad
add
fistpl
add
add
mov
out
add
in
in
call
push
rol
shr
sub
pop
cmpl
je
push
push
xor
push
and
add
shl
sub
shr
ror
sub
pop
sub
xor
pop
push
sub
sub
shr
pop
push
push
push
push
push
lea
push
push
push
push
call
rorl
add
add
cltd
add
add
push
mov
lds
add
add
add
add
add
std
jbe
add
jmp
add
cli
xlat
sub
pop
call
cmpl
je
push
push
xor
push
or
not
add
ror
sub
ror
sub
pop
rol
pop
push
sub
add
pop
push
call
push
sub
pop
cmpl
je
push
push
dec
push
or
inc
add
sub
lea
sub
add
inc
pop
dec
add
sub
pop
push
push
push
lea
push
call
lcall
fiaddl
fiaddl
mov
lods
add
leave
add
push
add
leave
add
mov
lock
roll
xchg
insb
add
leave
add
push
push
push
push
push
lea
push
push
push
push
push
call
mov
add
add
add
mov
pop
add
outsl
jmp
scas
popa
test
in
jae
add
sti
lds
add
add
push
ret
jecxz
add
add
stos
cli
push
add
sub
pop
call
cmpl
je
push
push
shr
rol
push
and
add
inc
rol
sub
add
pop
not
shl
rol
pop
push
push
lea
push
push
push
lea
push
push
push
call
add
add
ja
test
add
add
add
lods
mov
add
add
into
add
out
add
add
add
in
add
in
loopne
lcall
push
push
push
call
std
cmpsl
add
out
add
push
cmpsb
add
flds
add
cltd
lods
movsb
add
out
add
jnp
loop
add
add
mov
aam
fildl
add
bound
mov
add
popa
sub
pop
call
push
add
xor
pop
cmpl
je
push
push
rol
push
xor
add
sub
xor
sub
pop
add
shl
pop
push
lea
push
push
lea
push
push
call
je
xchg
test
test
pop
add
out
mov
add
outsl
into
add
test
mov
mov
mov
mov
pusha
nop
add
push
pop
std
out
mov
js
mov
gs
lahf
mov
add
add
push
mov
add
std
add
pop
push
add
jecxz
pop
add
push
pop
call
cmpl
je
push
push
ror
rol
push
push
pop
add
xor
sub
shl
pop
xor
sub
ror
pop
push
add
dec
sub
dec
pop
push
push
push
lea
push
push
push
call
push
sahf
add
in
testl
add
addb
jecxz
sahf
push
lahf
stos
popa
mov
jle
into
add
mov
call
cmpl
je
push
push
shr
add
sub
sub
push
xor
add
dec
inc
sub
dec
pop
shl
pop
push
xor
pop
push
call
push
inc
sub
shl
pop
cmpl
je
push
push
not
not
xor
rol
push
xor
add
not
not
shr
sub
lea
ror
dec
pop
add
sub
dec
dec
pop
push
push
call
add
add
cmpsl
int
add
add
add
add
movl
add
add
add
jne
repnz
cld
repnz
add
add
out
add
sub
pop
push
push
add
ror
sub
not
pop
call
push
lea
push
push
push
push
push
call
lahf
add
out
scas
fwait
mov
add
gs
in
add
mov
je
add
jne
add
mov
mov
mov
sahf
outsl
cltd
add
int3
movsl
add
add
add
hlt
add
leave
push
test
add
add
pusha
add
add
add
sub
pop
cmpl
je
push
push
ror
push
push
pop
add
sub
shl
add
add
sub
ror
add
not
pop
ror
rol
sub
pop
push
sub
xor
pop
push
push
ror
sub
pop
call
push
pop
cmpl
je
push
push
rol
push
push
pop
add
not
rol
sub
sub
rol
add
pop
lea
pop
push
shl
dec
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
roll
loope
add
pop
push
add
rolb
les
pop
int3
into
add
add
pushf
nop
cmc
add
add
jmp
ja
les
mov
lcall
add
mul
add
add
sub
js
xor
ret
test
add
add
mov
and
add
shl
sub
sub
inc
add
lea
pop
rol
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
popf
add
fst
testb
add
add
add
xlat
fdivl
jb
roll
add
addr16
add
add
jp
sub
pop
push
push
lea
push
push
lea
push
lea
push
push
call
mov
add
stos
xchg
add
fbstp
add
add
mov
in
mov
mov
pushf
lods
add
iret
data16
test
fldcw
ljmp
add
scas
xchg
add
cld
fwait
ret
add
push
repnz
add
mov
add
add
movsb
add
sub
add
push
lea
ror
dec
not
pop
cmpl
je
push
push
not
push
or
not
add
shl
sub
xor
sub
not
rol
shr
pop
sub
pop
push
push
call
xchg
jp
jns
add
loop
loop
mov
data16
jnp
add
add
int
sahf
add
add
call
add
scas
scas
lods
add
out
jl
arpl
push
xchg
loop
sub
pop
push
call
push
lea
add
pop
cmpl
jne
push
push
lea
push
push
push
push
push
push
push
push
call
lea
add
cld
outsl
mov
js
add
movsl
insb
addr16
add
add
test
add
add
mov
add
in
fcomps
inc
adc
add
add
add
repnz
jmp
xor
push
not
xor
pop
pop
pop
push
xor
shl
pop
pop
pop
push
sub
inc
pop
leave
push
lea
push
push
push
lea
push
call
pop
mov
popf
mov
add
push
clc
sahf
add
add
fidivs
aam
mov
jmp
scas
push
loope
js
je
pop
jb
push
icebp
imul
loopne
int
add
jo
add
mov
mov
in
pop
ret
push
shl
pop
push
mov
push
xor
pop
add
push
sub
sub
add
pop
cmpl
jne
push
push
rol
push
xor
add
dec
sub
not
pop
lea
shl
not
pop
push
push
push
lea
push
call
into
pop
popl
mov
stos
cmpsl
xchg
popl
jns
scas
shlb
mov
cli
add
add
sub
add
xchg
cwtl
out
add
add
add
cld
add
add
in
lock
pushl
push
sub
pop
call
push
push
push
push
push
lea
push
push
push
lea
push
call
addb
leave
add
sahf
bound
pop
lret
add
mov
add
rorl
add
repnz
push
pop
add
sub
pop
call
push
ror
inc
rol
not
pop
jmp
push
add
pop
cmpl
je
cmpl
jne
push
lea
push
push
call
add
add
addb
mov
add
mov
lcall
add
in
popa
add
test
jl
scas
cmp
js
cltd
lret
add
add
test
stos
add
add
mov
leave
push
inc
pop
add
pop
push
push
lea
push
call
mov
add
mov
add
gs
add
add
add
add
jnp
add
add
add
lods
icebp
add
icebp
add
sub
movsl
add
cltd
cli
add
mov
add
mov
mov
mov
cmpsb
add
pusha
add
in
hlt
lcall
push
push
push
push
call
jo
add
mov
cli
nop
mov
pop
lret
add
add
push
add
push
add
loope
add
movsl
push
bound
pop
jns
int
add
mov
jle
xchg
cltd
add
xchg
jno
add
imulb
add
mov
add
add
pop
push
add
rol
sub
ror
pop
leave
push
lea
push
lea
push
lea
push
call
jge
add
enter
rolb
movl
add
loopne
add
test
stc
faddl
out
xchg
out
xchg
push
jnp
in
lock
lcall
les
push
lea
push
push
call
int
call
push
test
ljmp
into
add
add
xchg
shll
jmp
mov
fsubs
repnz
fldenv
xchg
mov
out
sub
pop
ret
push
push
push
lea
push
call
push
mov
mov
add
fabs
push
add
add
add
into
add
testl
add
push
push
testl
in
lock
lcall
adc
add
test
mov
rol
ret
jg
and
add
sub
ror
sub
sub
sub
shr
pop
shl
not
lea
pop
push
xor
pop
pushl
push
rol
pop
call
push
shl
xor
pop
push
push
add
not
sub
pop
call
jmp
push
push
push
push
lea
push
call
clc
lret
push
fldl
stos
fildl
jbe
shll
jno
jge
xchg
pop
cmpsb
out
fidivs
movsb
bnd
testl
add
add
fidivrs
in
in
lcall
jge
add
test
add
push
shl
ror
pop
mov
push
lea
push
lea
push
call
add
add
mov
fcmove
mov
add
fs
add
fcmovnbe
push
lods
add
aad
lods
mov
add
add
lcall
add
add
push
pop
jmp
push
lea
pop
push
push
push
push
xor
add
dec
inc
sub
sub
lea
pop
ror
shr
add
sub
pop
push
dec
pop
pushl
push
xor
shl
lea
add
pop
call
push
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
roll
pop
into
pop
mov
data16
jle
repnz
add
add
add
add
filds
add
in
ja
add
call
push
push
xor
add
push
push
pop
add
sub
sub
sub
dec
rol
rol
pop
sub
not
pop
push
dec
ror
ror
pop
pushl
call
push
push
push
call
je
add
add
add
ja
add
iret
add
add
add
lret
mov
test
imul
add
icebp
mov
add
add
in
pop
add
push
gs
sub
pop
call
push
push
lea
push
sub
add
xor
sub
xor
sub
pop
add
pop
push
push
lea
push
push
lea
push
call
add
add
add
add
cwtl
add
add
add
rolb
add
jbe
add
xchg
add
mov
jl
add
addl
add
mov
lds
outsl
add
jnp
add
add
cli
jp
add
out
sub
pop
pushl
push
not
sub
sub
pop
call
push
push
push
push
push
push
push
push
push
push
call
fstl
push
add
add
rolb
leave
add
add
gs
add
pop
rcr
lods
roll
aad
lea
add
add
leave
mov
add
fiaddl
add
add
add
mov
jns
jae
add
cmpsl
add
lcall
shrb
icebp
push
dec
push
lea
push
or
inc
add
sub
sub
shr
dec
pop
pop
push
sub
sub
lea
dec
pop
pushl
push
push
push
push
lea
push
push
call
sbb
mov
mov
mov
add
out
scas
into
mov
add
add
add
add
jge
lods
add
xchg
cmpsl
mov
mov
add
xchg
pop
in
mov
into
std
mov
xchg
sub
pop
call
call
push
push
add
push
and
add
sub
shr
pop
add
dec
shr
shl
pop
push
shl
shl
pop
pushl
push
push
push
push
lea
push
push
push
lea
push
push
push
call
leave
jne
sbbb
loopne
add
mov
add
pop
jbe
cli
out
add
mov
pop
add
mov
ja
xchg
cwtl
add
jecxz
pusha
in
add
add
add
and
scas
add
add
mov
enter
mov
mov
add
in
fcomps
ds
call
push
push
dec
push
xor
add
shr
sub
not
pop
xor
pop
push
push
push
push
call
lret
lea
hlt
add
jno
movb
arpl
jo
cmpsl
fstps
jnp
lods
add
xchg
lea
xchg
test
mov
xchg
add
mov
sub
pop
pushl
push
pop
call
push
push
push
lea
push
call
push
ret
add
pusha
addb
mov
in
gs
mov
xchg
add
add
add
pop
ja
in
lock
call
push
push
rol
shl
ror
sub
push
or
not
add
xor
sub
dec
sub
xor
inc
pop
add
pop
push
lea
push
push
call
add
add
add
out
push
add
out
add
add
icebp
add
pushw
add
addb
add
cltd
push
add
scas
loop
mov
push
notl
in
add
mov
add
add
sahf
rolb
add
add
movb
add
lcall
jne
call
push
ror
pop
call
push
push
ror
add
sub
ror
push
sub
add
lea
sub
rol
shl
sub
pop
sub
pop
push
inc
sub
pop
pushl
call
push
ror
pop
call
push
push
shl
xor
lea
push
push
pop
add
not
sub
add
sub
add
sub
pop
dec
rol
pop
push
add
shr
pop
pushl
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
aam
cmc
add
add
imul
xchg
scas
mov
in
pop
in
xchg
mov
add
mov
add
xchg
push
add
pop
test
scas
add
add
mov
add
add
add
lcall
lret
and
add
pop
dec
add
push
push
push
push
push
push
call
mov
jo
mov
pop
xlat
scas
lods
add
jnp
mov
add
add
out
data16
add
in
xchg
call
add
add
add
push
push
push
in
rcll
add
jno
add
lcall
shrb
je
mov
inc
push
or
inc
add
inc
ror
sub
not
sub
dec
ror
pop
add
pop
push
sub
sub
pop
pushl
push
not
pop
call
push
push
lea
push
push
call
mov
mov
add
add
cli
add
in
add
add
xchg
nop
bnd
add
add
mov
add
stc
xchg
jo
add
add
ja
cmpsb
fistl
out
insb
cli
add
leave
popa
loop
add
ficomps
add
xchg
add
loope
mov
fiaddl
stc
outsl
add
add
lcall
pushf
and
call
push
push
call
add
testl
pushf
jl
pusha
mov
add
push
in
stos
add
add
add
jecxz
leave
add
add
je
add
xchg
add
xchg
add
add
out
addb
jnp
sub
pop
call
push
push
not
push
sub
add
sub
ror
inc
sub
inc
ror
pop
shr
pop
push
push
push
lea
push
push
push
call
repnz
test
add
lods
lret
fisubrs
lods
fsub
push
insb
add
add
out
mov
xchg
mov
jnp
push
add
add
shrl
mov
add
mov
cltd
ret
pop
add
xlat
lods
jmp
add
arpl
xchg
add
add
ja
sub
pop
pushl
push
lea
shl
pop
call
push
push
call
add
add
pop
into
pop
add
mov
mov
hlt
repnz
xchg
fildl
stos
add
add
cmc
add
aad
mov
jmp
push
jmp
jbe
add
cmpsl
lds
data16
add
scas
add
add
push
jle
add
fstl
add
lcall
shrb
ds
out
inc
shr
push
xor
add
lea
sub
sub
inc
not
pop
rol
lea
pop
push
add
shl
sub
pop
pushl
push
lea
push
push
push
lea
push
push
push
call
les
add
add
add
add
add
lods
mov
out
mov
add
lods
jno
stos
ljmp
sub
pop
call
call
push
push
push
or
not
add
add
sub
dec
inc
add
shr
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
lret
add
jo
mov
add
add
pop
add
mov
mov
and
pop
add
sub
pop
pushl
call
push
sub
pop
call
push
add
inc
ror
pop
lea
push
push
dec
push
push
pop
add
shr
shl
xor
sub
shr
rol
pop
add
pop
push
not
dec
ror
dec
pop
pushl
call
push
shr
pop
push
push
shl
pop
call
push
push
shr
shr
not
push
xor
add
lea
lea
sub
sub
inc
pop
shr
shl
pop
push
dec
pop
pushl
call
push
lea
push
lea
push
call
jbe
add
data16
xchg
jecxz
ljmp
add
out
lods
scas
lret
out
cmpsl
popf
imul
add
out
add
pop
repnz
imul
add
lcall
rclb
jo
out
inc
ror
dec
pop
mov
push
push
sub
xor
push
and
add
inc
sub
not
pop
ror
dec
pop
push
lea
shl
xor
pop
pushl
call
push
sub
pop
push
pushl
push
lea
push
call
iret
add
add
add
fiaddl
cmpsb
add
lods
gs
add
push
lods
add
aam
add
add
bound
fistl
add
cld
push
jp
mov
mov
lea
mov
je
lret
fidivs
pop
into
imul
in
clc
lcall
shrb
sub
add
push
sub
add
xor
dec
lea
sub
xor
ror
rol
shl
pop
add
pop
push
add
dec
lea
pop
pushl
push
shr
xor
inc
pop
call
push
push
add
shr
push
sub
add
add
shr
sub
shl
add
add
add
pop
ror
pop
push
push
shl
lea
push
and
add
not
sub
shr
ror
rol
pop
inc
not
ror
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
add
add
jmp
lea
imul
pop
add
mov
int
add
in
lcall
shrb
leave
imul
mov
enter
incl
shr
add
sub
shr
sub
dec
add
add
dec
pop
add
pop
push
lea
push
push
push
push
push
lea
push
push
push
call
rcl
repnz
pop
pop
lret
add
jle
add
mov
add
pop
add
sti
add
add
sub
pop
pushl
push
push
push
call
mov
scas
add
jo
mov
add
add
xchg
clc
cltd
push
pop
lret
mov
addl
mov
movsl
pop
imul
subl
add
call
push
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
int3
mov
mov
fwait
add
cld
add
add
out
mov
add
add
mov
fisubrl
add
mov
mov
gs
roll
hlt
hlt
lret
push
roll
roll
fwait
add
push
mov
add
add
inc
hlt
push
rol
lea
pop
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
loop
pop
jo
add
add
ret
ficoml
add
lods
testb
add
int
add
push
add
add
add
lock
add
xchg
add
add
mov
pop
lea
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
add
popf
ljmp
in
fsubp
cld
pushf
fwait
add
add
add
add
cmpsb
ljmp
pop
fdivs
out
in
add
loopne
outsl
lds
pop
jo
add
incb
pusha
mov
mov
pop
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
in
lock
cmpsl
cmp
add
addl
lods
xchg
add
mov
mov
add
add
lcall
add
push
lea
pop
push
push
ror
pop
push
push
push
push
push
call
mov
add
xchg
add
sti
icebp
jl
scas
int3
jb
lods
arpl
mov
lock
xor
add
xchg
outsl
add
add
add
lret
add
push
fisttpl
jnp
add
add
out
jno
iret
jb
in
hlt
lcall
add
xlat
pop
pushl
push
push
push
lea
push
call
enter
clc
cwtl
add
add
add
outsl
add
call
mov
lock
mov
add
mov
pusha
shll
add
jnp
popa
lods
add
add
test
ror
enter
add
add
add
lea
lcall
lcall
push
hlt
push
push
inc
shr
xor
push
sub
add
sub
rol
sub
rol
pop
sub
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
mov
gs
mov
add
add
cmc
roll
add
in
add
lock
pop
in
pop
add
popa
scas
mov
fadds
sahf
push
xchg
add
push
add
loope
add
mov
mov
push
roll
add
enter
fdivr
lcall
jne
push
rol
ror
inc
pop
call
push
push
push
push
push
lea
push
call
add
add
add
mov
add
jp
subl
jle
add
loop
cwtl
add
add
add
test
add
mov
fwait
and
jnp
sub
pop
call
mov
push
sub
pop
pop
push
inc
pop
dec
jne
push
push
push
push
push
call
add
scas
fnstenv
jl
add
push
add
add
add
add
rclb
mov
add
jp
jo
add
lods
add
cld
push
in
add
add
sub
pop
call
push
push
add
ror
xor
push
xor
add
xor
xor
ror
sub
sub
add
xor
pop
shl
shr
pop
push
sub
pop
pushl
push
push
push
push
push
lea
push
call
add
scas
clc
push
add
add
mov
add
fwait
lods
mov
cmpsb
add
stos
add
xchg
lds
shl
fwait
sub
pop
call
push
sub
rol
ror
pop
push
call
push
xor
xor
pop
mov
push
rol
pop
lea
push
push
xor
not
sub
push
push
pop
add
sub
sub
lea
ror
pop
not
pop
push
lea
push
push
push
call
add
add
mov
add
out
fwait
add
mov
lret
enter
add
jl
push
push
mov
add
add
add
add
add
in
lock
pushl
push
lea
push
lea
push
push
call
add
add
lds
jns
in
add
push
stos
add
add
xchg
in
adc
hlt
add
add
add
cltd
sub
pop
call
push
push
rol
pop
call
push
push
rol
inc
add
shr
push
push
pop
add
not
sub
shr
pop
sub
pop
push
sub
shr
pop
pushl
call
push
push
push
push
call
add
fcomps
add
stc
add
add
mov
lahf
mov
pop
add
add
add
in
mov
data16
mov
out
jecxz
push
ja
jecxz
xchg
jo
int
repnz
lock
lcall
rclb
jns
shl
sub
add
pop
mov
push
push
push
call
push
add
test
outsl
add
je
or
mov
ficompl
add
add
enter
jmp
xchg
add
bound
filds
add
movl
lods
fadds
add
mov
call
je
popa
xchg
add
jle
add
out
add
hlt
lcall
pushf
and
ljmp
test
enter
push
rolb
add
push
and
sub
not
pop
sub
sub
pop
push
not
pop
pushl
push
xor
pop
call
lea
push
lea
pop
push
push
shr
sub
dec
shr
pop
push
push
push
push
push
call
add
add
roll
les
mov
add
add
cld
mov
int
xchg
push
xchg
cltd
add
add
add
add
add
pop
hlt
add
out
add
add
sub
pop
push
push
push
push
push
push
call
xchg
test
add
jne
out
mov
std
test
add
jno
add
add
add
add
in
fdivl
jmp
in
lcall
jne
push
push
rol
sub
sub
push
or
not
add
dec
sub
shl
sub
sub
pop
xor
add
pop
push
sub
add
lea
pop
push
call
push
push
lea
ror
push
or
not
add
shl
shr
sub
sub
not
shl
lea
pop
sub
shr
sub
pop
push
push
push
push
push
push
lea
push
call
add
aad
imul
into
add
jno
aam
add
repnz
xchg
add
pop
add
outsl
lahf
jl
add
add
arpl
lods
add
add
mov
mov
add
cwtl
push
fadds
lea
mov
add
fwait
lods
add
add
pushf
add
out
shlb
add
jne
call
push
push
push
lea
push
call
insb
push
mov
fcoml
add
les
add
fs
xlat
aad
in
in
add
movsb
add
stos
add
aam
add
add
cmc
test
movsl
je
add
mov
std
add
add
lds
lcall
call
push
push
shl
sub
rol
sub
push
sub
add
xor
sub
dec
xor
dec
not
pop
not
shr
shl
shl
pop
push
lea
push
push
push
lea
push
call
loop
test
fst
cmpsb
add
add
mov
imul
shrl
add
add
sub
pop
pushl
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
add
mov
add
push
add
cmpsl
add
out
stc
add
pop
ljmp
mov
lds
add
in
fdivr
lcall
iret
adc
add
rclb
aam
inc
pop
jmp
pushl
push
push
lea
push
lea
push
lea
push
push
call
add
in
mov
stc
test
add
ja
push
pop
add
add
mov
xchg
mov
roll
add
test
subb
add
arpl
add
rolb
jnp
adcb
add
std
mov
add
lea
incb
mov
call
mov
push
lea
ror
pop
jmp
push
push
add
push
sub
add
xor
shr
sub
lea
add
pop
shl
lea
rol
pop
push
pop
pushl
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
push
xchg
mov
mov
ljmp
add
in
add
jge
lahf
xchg
push
movsb
xchg
add
int
add
add
imul
pushf
add
mov
in
fcomps
je
add
push
push
push
lea
push
push
lea
push
push
push
call
pop
jmp
add
loopne
add
pusha
cwtl
iret
pushf
add
rolb
mov
int
ficoml
add
sub
pop
push
push
push
call
test
pop
jmp
in
add
lret
add
shrl
add
loope
loope
add
mov
scas
push
stos
add
ret
add
jecxz
mov
cmc
test
sarb
add
sub
pop
call
push
push
push
or
inc
add
dec
shl
sub
xor
inc
pop
xor
shr
pop
push
add
shr
sub
pop
pushl
call
push
pop
push
push
lea
push
push
push
push
push
call
mov
ja
pusha
add
jbe
mov
add
jne
sarb
jp
mov
mov
add
push
mov
lcall
rclb
out
pop
leave
add
push
lea
push
push
push
push
push
call
add
mov
lock
ja
add
xlat
int
add
leave
add
jb
int3
ret
add
test
shlb
scas
mov
mov
push
add
mov
add
add
add
arpl
movsb
add
xchg
add
push
push
lea
push
call
add
rolb
cwtl
pop
pusha
lahf
add
add
fwait
movl
add
neg
sub
pop
pop
push
rol
pop
pop
pop
push
push
push
call
add
add
andl
add
fsubs
mov
pop
add
jl
clc
add
add
add
push
add
arpl
loope
out
pop
rorl
stos
add
sti
mov
mov
in
hlt
pop
leave
push
rol
inc
pop
add
ret
push
dec
ror
pop
leave
push
lea
push
push
push
push
push
push
push
push
push
call
cmpsb
add
push
imul
enter
add
stos
add
fadd
testb
add
xchg
add
pushf
add
add
ret
push
push
lea
rol
pop
mov
push
pop
cmpl
jne
mov
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
leave
add
add
outsl
add
stc
jle
add
imul
scas
add
add
ljmp
outsl
mov
scas
fstp
mov
push
add
add
lea
push
push
push
push
push
push
push
call
popa
add
xchg
mov
add
add
add
xchg
int3
push
add
roll
icebp
jae
std
les
int3
add
sub
pop
and
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
jbe
flds
imul
xlat
lea
add
add
enter
push
add
mov
lret
push
add
push
push
xchg
cld
sarl
incb
pop
xor
push
sub
shr
ror
pop
xor
push
push
push
push
push
call
mov
add
add
add
loop
push
jno
in
add
add
add
add
add
jmp
xchg
pushf
add
addb
lcall
push
aam
pop
add
in
push
add
rolb
cltd
into
mov
add
sub
pop
add
xor
push
lea
pop
dec
sub
push
sub
pop
jmp
push
sub
dec
ror
pop
sub
pushl
push
push
push
lea
push
lea
push
push
push
push
push
push
call
iret
add
add
mov
add
push
add
add
addr16
add
add
sar
pop
imul
fdivr
lcall
push
sub
pop
sub
push
push
push
push
push
push
call
gs
pop
outsl
cmpsl
add
mov
cmpsl
add
cmc
jnp
add
call
icebp
add
jmp
fisttpll
add
pop
int
mov
add
push
add
rolb
add
mov
add
scas
add
add
cltd
add
add
cmp
jne
push
push
push
push
push
lea
push
call
nop
xchg
mov
ljmp
cld
add
aad
add
mov
into
js
fildll
lods
iret
push
add
popa
add
sti
fcoml
mov
pop
jne
mov
imul
xchg
icebp
pop
test
add
fiaddl
jae
orl
jge
leave
sub
pop
mov
lea
push
xor
pop
sub
mov
push
sub
dec
shl
pop
shr
add
push
add
inc
xor
pop
sub
pushl
push
push
push
push
call
push
add
cmpsb
add
add
mov
pop
add
imul
add
add
push
nop
add
pop
add
add
lock
lcall
push
rol
pop
shr
and
push
shl
pop
sub
push
ror
rol
shr
pop
cmp
jne
push
lea
push
push
push
call
add
add
add
mov
jle
add
lea
add
test
add
add
add
xchg
add
add
lcall
ret
push
sub
sub
sub
pop
push
push
push
push
lea
push
push
lea
push
call
jge
add
jnp
scas
fwait
ja
scas
jl
icebp
arpl
push
pop
lods
test
pusha
cld
les
popf
add
mov
add
add
aad
lods
fst
add
add
xchg
add
add
test
add
mov
jecxz
data16
add
sub
pop
mov
push
lea
rol
sub
pop
add
push
not
rol
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
mov
jae
in
add
mov
out
cmc
int3
addb
add
mov
pop
testb
add
xchg
add
fists
add
add
mov
push
rcr
mov
in
fdivr
lcall
push
push
xor
pop
push
push
shr
lea
pop
push
mov
push
push
lea
push
call
test
add
lret
add
pop
add
sti
mov
lds
xchg
int3
lea
cltd
fmulp
scas
into
scas
loope
add
push
call
add
add
add
pop
add
jae
cmpsl
add
add
mov
push
stc
add
xchg
add
roll
add
pop
out
out
add
fiaddl
filds
lcall
push
cmp
lea
push
push
push
push
lea
push
lea
push
push
call
scas
add
add
cwtl
cwtl
add
js
add
mov
add
add
enter
mov
movsl
add
hlt
lods
lahf
cwtl
pop
push
movl
pop
lods
imul
jns
js
in
ljmp
sub
lcall
ljmp
pop
push
lea
push
push
push
push
lea
push
lea
push
call
pop
out
jb
hlt
movl
int3
pop
popa
movsb
add
into
add
mov
add
imul
mov
add
shlb
push
push
add
movl
pop
sahf
pushf
hlt
sbb
add
sub
pop
mov
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
add
xchg
push
mov
add
aad
je
mov
popf
pop
add
add
mov
pop
mov
lcall
ljmp
push
call
push
filds
add
loope
add
xchg
out
add
test
add
jge
mov
movsb
int3
add
add
mov
xchg
add
testb
popa
push
sub
pop
add
push
pop
mov
add
push
push
call
add
push
cmpsl
int
sub
iret
add
ret
pop
add
add
mov
add
add
add
test
mov
add
xchg
shll
add
mov
add
sub
pop
mov
add
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
push
add
pop
add
lds
add
test
jno
pop
jecxz
imul
add
xchg
int
add
imul
adc
pushf
add
sarl
lcall
testb
add
pop
and
push
lea
push
push
push
push
push
push
push
push
push
call
xchg
sti
fidivrl
in
jb
add
add
add
jmp
add
jmp
add
add
mov
in
fcomps
rolb
test
push
call
xchg
fadds
popf
shrb
add
mov
mov
add
push
jge
movsl
shrl
lahf
mov
loopnew
add
add
imul
add
pop
fs
ja
add
pop
add
lahf
cmc
call
clc
pop
xor
push
push
lea
push
push
push
push
push
call
hlt
gs
push
incb
jbe
in
scas
add
ja
mov
pop
add
js
add
mov
imul
scas
mov
mov
les
mov
add
xchg
lods
mov
push
stos
hlt
add
add
fildl
push
lea
push
push
push
push
push
call
mov
xchg
push
xchg
add
ja
cmpsl
push
rolb
ror
add
rcrb
mov
add
lret
add
imul
aad
incb
icebp
aad
clc
jle
add
add
int
push
jne
sub
pop
cmpb
jne
push
push
push
push
push
push
push
lea
push
push
call
add
addr16
sti
mov
push
add
adcl
lods
clc
lds
add
add
mov
push
add
sub
pop
add
push
sub
sub
sub
pop
cmp
je
push
shl
xor
shl
sub
pop
add
push
xor
pop
cmpl
jne
push
push
call
add
push
fldl
add
cltd
lahf
add
mov
add
mov
rcl
add
int
fdivrs
add
add
les
add
push
fnsave
pop
push
shrb
add
add
cmpsb
mov
stos
sub
pop
xor
push
dec
pop
pop
pop
push
lea
push
push
call
fcmovu
mov
add
mov
mov
mov
add
add
mov
xchg
mov
test
add
xorb
sarl
int
lret
push
add
hlt
lcall
push
add
add
inc
shr
pop
pop
push
pop
pop
push
add
pop
leave
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
mov
add
add
xchg
add
add
roll
mov
mov
lret
add
add
add
scas
pop
lods
add
add
nop
add
add
lcall
or
mov
push
lea
push
push
push
lea
push
lea
push
push
call
push
pop
add
stos
jmp
pop
fadds
roll
cmpsl
in
xchg
or
add
add
lock
stc
out
add
cmc
mov
cmpsb
add
fildl
in
adcl
pop
add
push
push
add
sub
pop
push
push
lea
add
xor
sub
pop
add
mov
push
rol
shr
pop
testw
pop
push
add
rol
pop
pop
mov
push
push
push
lea
push
push
call
add
into
add
stc
jnp
add
shll
icebp
xchg
add
add
add
add
rorb
repnz
push
jge
push
gs
scas
orb
add
fdivp
mov
pop
add
sub
pop
push
call
push
push
call
popf
mov
into
xchg
add
add
add
movsl
pop
jb
clc
mov
scas
xlat
mov
add
sub
pop
xor
pop
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
xchg
add
aam
push
push
loop
xor
shl
add
mov
lock
lahf
add
jmp
mov
jne
les
add
pop
add
add
add
lret
add
add
lods
add
jae
add
pusha
add
lea
add
loopne
pop
pop
push
lea
shr
pop
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
cwtl
push
sahf
aam
pop
add
pop
add
fiadds
lods
lds
pop
add
div
mov
arpl
jae
ffree
add
ljmp
fdivr
lcall
push
lea
push
lea
push
lea
push
push
push
push
call
add
mov
fs
xchg
mov
arpl
je
jecxz
mov
stos
add
into
fs
out
add
mov
movsb
xchg
pop
pop
add
jmp
in
pop
jmp
testb
in
in
leave
ret
push
push
lea
push
push
push
call
add
jp
add
add
add
add
ljmp
movl
pusha
outsl
push
testb
add
mov
add
icebp
lcall
pop
add
js
mov
add
mov
add
aam
jb
stos
add
add
pop
push
mov
push
push
push
push
push
push
call
pop
add
add
sarl
xchg
rolb
enter
sarl
out
cmpsb
icebp
cld
push
jbe
add
xorl
aad
js
stos
shl
ljmp
lcall
hlt
push
push
push
push
push
push
call
lcall
add
imul
push
add
nop
xchg
add
lods
std
mov
fsts
cmpsl
add
out
loop
in
call
std
add
lods
shlb
add
cwtl
add
add
sti
jecxz
add
in
call
push
push
push
inc
inc
pop
push
push
push
push
push
push
push
push
push
call
add
mov
xchg
add
loopne
ljmp
add
xchg
scas
subl
cli
test
add
add
add
mov
add
add
js
in
in
lcall
pop
or
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
add
mov
push
add
pop
add
push
fwait
add
mov
pop
mov
add
fisubrs
pop
aam
ror
push
fldl
popf
pop
jnp
mov
movsl
add
mov
sub
pop
push
push
pop
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
xchg
ja
add
jmp
xlat
add
push
mov
out
ja
lock
jle
jns
test
flds
add
jmp
movsb
test
add
xlat
mov
out
xor
add
cwtl
push
add
add
fadds
add
out
add
rcrl
in
fdivr
lcall
push
cmp
ljmp
shr
push
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
data16
pop
rorb
add
testb
add
pusha
mov
add
mov
clc
mov
pop
add
clc
add
add
add
mov
fdivr
lcall
fimull
repnz
pop
add
push
rol
sub
pop
pushl
push
push
call
pushf
scas
add
mov
mov
add
mov
loopne
loope
ja
pop
call
add
add
arpl
add
int3
add
add
les
add
add
mov
arpl
xchg
sub
pop
popl
mov
push
lea
push
lea
push
lea
push
lea
push
call
xchg
mov
data16
add
add
add
iret
push
add
je
loop
add
scas
mov
push
add
add
icebp
add
fs
jae
pop
outsl
jmp
loopne
add
add
mov
add
pushf
flds
xchg
mov
in
in
pop
add
xor
push
lea
push
push
push
push
call
add
add
out
fcmovnbe
test
push
add
add
mov
add
push
add
out
add
add
movsl
mov
fbstp
sub
pop
lea
push
push
call
pop
add
add
add
add
mov
add
ret
add
add
add
jle
add
int
add
pop
add
rcrb
in
in
js
fildl
push
xchg
add
add
add
pop
add
bound
cwtl
pop
mov
add
mov
mov
add
push
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
fwait
add
add
lods
rorb
test
enter
jmp
xchg
fnsave
add
mov
andl
fsubp
add
add
pop
add
icebp
add
lcall
rol
pop
push
push
push
push
lea
push
call
cwtl
mov
cltd
jo
std
arpl
push
add
add
add
add
add
in
add
xchg
mov
mov
add
icebp
les
nop
push
push
push
push
call
jnp
mov
add
cli
out
test
add
test
push
rcrl
jecxz
mov
addl
lods
mov
bound
add
sahf
loope
mov
add
add
shr
into
flds
add
js
sub
pop
nop
xor
push
push
push
push
push
push
lea
push
call
clc
testb
add
sahf
lods
add
add
add
add
add
lret
scas
add
mov
sub
divb
xchg
orb
add
rol
call
sub
pop
nop
push
inc
dec
ror
pop
nop
push
ror
pop
inc
push
rol
shl
pop
nop
push
lea
push
push
push
push
lea
push
push
call
popf
popf
mov
cmpsl
add
jnp
add
add
mov
jecxz
add
roll
fildl
mov
add
roll
out
add
add
lea
add
jge
notb
mov
sub
pop
nop
push
not
pop
cmpb
jne
push
push
push
call
fcmovu
rcl
add
add
add
add
rcrl
push
add
roll
add
mov
loopne
lds
hlt
add
lret
xlat
mov
add
add
sub
pop
add
push
add
dec
sub
pop
nop
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
mov
add
test
fidivrs
add
add
add
lcall
pop
mov
push
jl
jno
add
lcall
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
jae
add
addb
add
fsts
add
hlt
xchg
nop
add
add
roll
lods
lahf
pop
movsl
add
add
push
add
mov
pushf
add
fsubrp
add
pop
jecxz
xchg
mov
add
add
add
outsl
add
into
sti
add
enter
pop
cmp
je
push
push
lea
push
push
call
testl
add
add
addr16
mov
add
or
jo
icebp
add
in
add
add
out
add
cld
mov
add
add
test
hlt
popl
nop
push
rol
pop
inc
nop
push
dec
pop
nop
push
lea
push
lea
push
push
push
push
push
call
stos
add
mov
mov
add
scas
push
add
nop
sahf
mov
loop
mov
decb
roll
xchg
add
add
add
add
faddl
sub
pop
cmp
jb
push
push
push
push
call
add
add
in
lds
mov
sahf
iret
xchg
outsl
lods
add
add
int3
add
in
add
in
lock
lcall
shr
add
add
adc
push
push
call
jbe
add
sarl
add
add
cmpsb
xchg
popa
outsl
add
pop
out
testl
ret
add
mov
test
mov
lret
mov
mov
push
inc
shr
pop
add
push
shr
inc
pop
movzwl
push
rol
pop
mov
push
push
push
push
push
push
push
call
add
mov
add
push
ja
fdivp
xchg
hlt
add
mov
add
add
fidivrs
lds
addl
add
xchg
sahf
mov
into
add
in
in
lcall
rcll
pop
mov
push
ror
pop
xor
xor
push
push
push
push
push
push
lea
push
call
add
pop
icebp
cmpl
imul
mov
lahf
mov
cwtl
jo
add
mov
mov
outsl
add
add
cltd
jb
fs
xchg
mov
add
mov
mov
fdivrs
lods
add
add
bound
push
add
repnz
faddl
out
test
loope
push
not
ror
rol
pop
xor
shl
push
lea
push
push
push
push
call
pop
testl
add
int3
add
cltd
roll
add
add
fldl
add
sahf
lcall
jl
mov
mov
loop
bound
add
sub
pop
xor
push
push
call
aad
add
out
lods
lcall
clc
jnp
std
cmpsl
in
hlt
add
in
add
xchg
jb
data16
sbbl
stos
jp
nop
jmp
icebp
add
std
in
xchg
rcrl
add
pusha
pop
enter
add
fdivl
sti
xchg
out
imul
add
sub
pop
shl
push
push
push
push
push
push
call
xchg
insb
jno
add
popa
add
add
add
pop
lret
push
scas
add
add
push
cwtl
lods
pop
add
jmp
mull
add
call
mov
push
push
lea
push
push
push
push
push
push
push
call
add
add
ret
aad
add
add
jp
scas
add
add
addr16
rcrl
insb
push
addb
mov
pop
out
mov
xchg
push
add
clc
xlat
jae
mov
add
mov
sub
pop
add
push
push
push
lea
push
call
jge
fwait
cld
mov
add
add
je
add
add
jno
add
add
push
add
fiaddl
push
add
fisubs
add
scas
mov
add
pop
imul
mov
add
sub
pop
pop
pop
push
lea
push
push
push
push
call
add
add
add
add
test
add
add
mov
xchg
add
in
push
mov
add
xchg
add
add
add
add
add
testl
add
add
lcall
pop
xlat
mov
data16
add
in
in
lcall
push
lea
push
push
push
lea
push
push
push
push
push
call
xchg
jecxz
add
out
out
xchg
arpl
pusha
add
xchg
ljmp
add
add
lods
imul
add
leave
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
push
int
mov
add
mov
add
ja
mov
add
add
jae
div
cwtl
pop
add
xchg
add
mov
iret
add
mov
add
mov
fidivs
pop
add
jmp
sub
pop
ret
push
rol
pop
push
mov
push
lea
push
push
lea
push
call
add
fwait
xchg
mov
add
add
add
popa
add
enter
jo
aad
push
shll
add
leave
add
add
add
add
test
roll
push
pop
nop
mov
add
add
testb
test
fdivrl
pop
push
push
add
add
pop
push
push
add
dec
sub
pop
push
push
push
lea
push
push
lea
push
call
std
add
add
mov
iret
jge
cmp
pusha
add
lahf
data16
mov
std
add
add
jne
jecxz
out
add
in
add
lock
movl
rcrl
out
mov
arpl
fadds
movsb
xchg
lahf
addr16
add
mov
mov
sub
pop
push
push
push
push
push
push
push
call
jmp
add
add
push
ror
add
outsl
add
imul
cli
cli
add
out
stos
popa
xchg
add
roll
sub
pop
mov
push
push
lea
push
push
push
call
cwtl
mov
add
xchg
cltd
repnz
mov
add
xchg
lret
subl
cmpsl
testb
roll
fs
add
mov
jmp
add
add
push
icebp
xchg
fimull
loopne
stos
shlb
add
add
incb
sub
pop
mov
mov
push
not
rol
sub
pop
test
je
push
push
push
push
push
push
push
push
call
add
insb
arpl
test
jnp
add
data16
add
xchg
add
in
add
xchg
fidivrl
push
rolb
cltd
push
xchg
add
int3
cwtl
sub
pop
mov
push
add
pop
test
je
push
push
push
push
push
push
push
push
call
cli
mov
add
add
aad
scas
gs
xchg
mov
add
push
add
add
sbb
fsub
add
push
filds
push
sti
pushf
mov
add
scas
mov
sub
pop
mov
push
not
shr
shr
shr
pop
mov
mov
push
rol
add
lea
pop
inc
push
lea
sub
sub
pop
cmp
je
push
push
push
lea
push
push
call
add
add
add
mov
popf
cld
cli
mov
cld
cmpsl
jns
add
add
add
jb
pop
add
cli
add
in
in
lcall
rorb
rolb
add
mov
push
push
call
faddl
add
mov
fildl
nop
push
lcall
mov
lock
add
ja
mov
in
add
jge
pop
jp
addr16
add
mov
add
loop
add
lcall
push
inc
inc
sub
pop
cmp
je
push
shr
add
dec
sub
pop
test
jne
push
push
push
push
push
push
push
push
push
call
add
mov
add
repnz
jns
mov
add
add
add
add
in
add
rcrb
in
fdivr
lcall
rclb
lret
push
push
push
push
push
call
add
cli
mov
lock
xchg
jmp
mov
cmpsb
add
add
add
sar
add
cli
add
push
mov
fiaddl
mov
stc
jne
stos
jge
sub
pop
pop
pop
push
push
push
call
fisubl
mov
loop
push
xlat
sbb
cltd
mov
add
add
stos
add
insb
add
stos
sahf
out
je
rclb
mov
pop
add
add
add
lcall
leave
push
sub
dec
xor
pop
ret
mov
push
shr
ror
sub
add
pop
inc
push
dec
pop
cmp
jne
push
push
lea
push
push
push
push
push
call
jle
test
arpl
lea
mov
add
jno
add
xchg
mov
mov
add
mull
sahf
add
repnz
add
mov
add
mov
lret
add
pop
add
clc
add
mov
mov
in
in
lea
push
lea
push
push
lea
push
call
clc
xchg
lcall
testl
push
outsl
mov
add
add
jno
push
cld
incb
rcrb
in
leave
lcall
jl
add
in
lock
mov
push
lea
push
push
call
add
jl
add
add
add
xchg
add
lret
jnp
pop
je
test
push
mov
add
addl
out
sti
sub
pop
test
je
push
lea
push
push
push
push
lea
push
push
call
add
mov
rorb
jmp
in
add
push
pop
xchg
fldl2e
popa
add
les
jl
add
clc
add
ja
int3
xchg
add
sahf
popf
add
mov
lcall
add
mov
push
ror
shr
dec
sub
pop
add
push
push
push
push
push
push
push
call
push
add
in
add
in
add
add
andl
out
call
add
jle
jmp
add
popl
cwtl
add
addl
lcall
loopne
test
cld
decl
call
mov
leave
sahf
add
out
mov
shl
add
add
add
addr16
jmp
in
add
out
jle
add
outsl
cltd
std
mov
ja
push
mov
add
lcall
rorb
lcall
shl
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
add
mov
xchg
xchg
shlb
add
out
flds
int3
jne
mov
add
add
stc
mov
scas
fstl
sub
pop
add
cmp
je
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
xchg
mov
add
frstor
add
add
loop
int3
add
mov
add
add
add
add
add
nop
loopne
jp
add
pop
roll
lahf
lret
sub
pop
jmp
push
inc
rol
xor
pop
xor
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
jno
js
mov
add
pushf
add
popf
jns
loop
add
jne
fwait
mov
xchg
pop
mov
add
lods
rolb
mov
add
add
mov
clc
enter
add
lcall
push
lea
push
push
push
call
shr
add
add
mov
add
add
add
fiaddl
add
into
loope
lods
mov
cld
add
fildl
pop
push
lea
dec
add
pop
pop
leave
push
inc
shr
ror
pop
ret
push
inc
inc
pop
lea
push
lea
push
push
push
push
push
push
push
call
add
add
mov
fiadds
pushf
in
add
test
out
lret
jp
add
mov
add
push
lods
test
leave
loopne
add
subb
test
xchg
lahf
mul
mov
cld
int
add
lcall
push
push
call
fildl
test
mov
cmpsl
add
mov
push
add
xchg
push
add
mov
add
add
add
sti
sub
pop
pop
push
lea
push
lea
push
push
call
lea
add
add
pop
popa
add
stos
jbe
add
add
adcb
mov
les
movsl
lret
add
mov
mov
push
mul
jmp
jno
add
add
add
jb
jno
add
movsb
add
jne
pusha
cld
jge
add
add
lods
mov
add
lcall
push
push
push
push
push
push
call
div
mov
out
add
out
movsb
test
lock
add
std
movl
add
add
jne
mov
add
fadds
insb
add
add
lea
pop
add
mov
add
js
add
leave
lea
push
add
lds
lret
sub
pop
pop
push
rol
ror
sub
dec
pop
leave
ret
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
add
mov
add
xlat
add
lock
imul
add
loop
out
add
arpl
add
mov
testb
push
movsb
add
idiv
add
add
pop
add
push
push
push
call
js
repnz
scas
jns
out
add
mov
fs
leave
lcall
add
fdiv
mov
push
add
jno
mov
stc
addb
add
cld
mov
add
jnp
add
add
jbe
add
pop
pop
push
push
push
push
call
testl
mov
xchg
add
mov
add
add
addb
aam
andl
jns
sub
pop
pop
pop
push
pop
pop
push
push
push
lea
push
lea
push
lea
push
push
call
add
mov
push
add
addl
hlt
aam
add
add
jp
mov
insb
add
shl
pop
data16
pop
gs
pop
add
add
jne
repnz
pop
leave
push
sub
dec
rol
pop
ret
test
push
test
jae
xor
jmp
push
test
push
imul
arpl
jae
test
jae
insb
mov
add
movsb
xor
mov
loop
sbb
ja
fcoml
mov
jecxz
xor
dec
adc
push
mov
jnp
push
xorb
dec
test
xchg
cwtl
out
popa
jb
shlb
dec
in
aam
fdivrl
mov
sbb
push
out
mov
pop
stc
cld
mov
dec
xchg
sbb
popa
rorb
xchg
jnp
xchg
fmuls
xchg
outsl
xor
sbb
push
xchg
mov
add
loopne
leave
out
hlt
xor
cmp
pop
iret
inc
push
scas
scas
fsubs
popa
xchg
stos
inc
add
loope
fstpl
fs
lods
out
aaa
int
data16
mov
inc
inc
sbb
mov
pushf
cmc
push
and
inc
mov
out
iret
sbb
adc
aam
fs
cwtl
mov
lea
fstp
and
xor
push
pop
mov
push
push
add
hlt
hlt
inc
push
sbb
aam
add
int3
adc
movsl
pop
cmovg
test
repnz
inc
mov
adc
rcll
adc
imul
repnz
in
dec
mov
cmc
cli
cmp
or
push
out
xchg
xchg
ss
sub
aam
mov
xor
sub
mov
add
cwtl
cmpsb
in
jmp
orb
popa
fs
push
stc
sbb
xchg
sbb
mov
sbb
lds
mov
pop
cmp
and
stc
or
xor
jmp
stc
xor
mov
repnz
xor
sbb
jmp
popa
push
inc
cmp
test
call
cs
dec
sub
pop
stc
inc
cmp
mov
xor
into
inc
rcrb
mov
jnp
icebp
imul
out
hlt
movsl
jle
mov
inc
jb
sarb
xor
xchg
ss
and
sahf
je
movsb
pop
mov
xchg
push
and
xchg
fildl
ss
fucom
out
movsb
das
jno
js
add
inc
dec
mov
cmp
ljmp
jge
mov
jb
scas
jne
sub
xor
icebp
xchg
clc
out
lods
jno
mov
cmc
mov
fisubl
dec
addr16
jno
lcall
and
mov
adc
dec
push
sbb
cs
xchg
cmpsl
inc
or
pop
push
xlat
jge
mov
add
pusha
push
mov
out
fwait
jmp
jae
pop
push
push
push
sbb
sbb
jnp
out
mov
pop
scas
sbb
xchg
lock
adc
push
loope
int
cld
sub
lret
xor
xorb
lea
loopne
insl
jnp
rcl
sahf
push
sbbb
mov
subb
inc
mov
mov
dec
inc
outsb
pop
mov
das
add
icebp
pop
js
and
in
xor
sub
mov
push
push
xchg
shl
jnp
pop
add
jo
xor
xor
push
rcll
adc
xchg
pop
push
jecxz
pop
repnz
push
inc
not
imul
xor
xchg
push
repnz
cmpsb
push
add
in
add
jge
dec
lret
repnz
jecxz
jle
adc
sub
xchg
lahf
dec
inc
out
std
daa
aaa
add
lods
jbe
lret
or
jp
push
pop
ljmp
xlat
jp
into
jmp
mov
lahf
idivl
add
dec
rep
sub
lods
int3
xchg
sub
cwtl
ds
mov
jg
mov
fiadds
mov
jo
pop
sbb
icebp
cmp
push
sub
ss
repz
jecxz
xor
xchg
push
in
mov
cs
and
pop
fidivl
mov
inc
sub
dec
outsl
adc
push
xor
fisubs
stos
inc
inc
mov
stos
scas
lea
and
mov
dec
bound
bound
sub
and
mov
int
test
stos
sarl
idivl
or
jmp
sub
out
sahf
ret
cwtl
push
leave
mov
add
sbb
test
rorl
inc
fidivs
dec
adc
sbb
shll
or
in
repz
divb
popl
into
cmp
mov
sbb
sub
sti
adc
push
mov
andb
in
cmp
mov
push
jp
sub
sub
in
dec
scas
dec
or
arpl
or
and
sub
dec
in
pop
and
xchg
lret
sahf
fcmovnb
jo
pop
mov
jo
mov
cld
pop
fcompl
sub
cmp
sarl
testl
sub
cltd
jle
movzwl
push
or
pop
ljmp
dec
mov
add
into
xor
sub
int
pop
lds
outsl
les
lret
repnz
xchg
sbb
xchg
adc
dec
lods
lods
xchg
cld
pop
adcl
mov
mov
add
hlt
mov
lcall
add
mov
sub
push
adc
aad
cld
adcb
add
in
mov
adc
jbe
loopne
out
push
nop
rcrl
js
cmpsl
xor
insb
jmp
inc
out
jg
ret
test
push
and
lcall
pop
xchg
and
push
sbb
or
jmp
int
push
adc
mov
jnp
cli
mov
fdivrs
add
in
andl
lods
xor
movd
lods
push
repnz
mov
ret
push
js
lock
lcall
xlat
or
in
loopne
repnz
jg
shrl
mov
jp
mov
lea
loope
xorb
xchg
pop
push
cmpsb
push
and
dec
lret
fadd
dec
xchg
xlat
pop
mov
xchg
push
cmpsl
mov
add
into
mov
in
and
fsubr
mov
mov
mov
outsl
inc
pop
xchg
sub
pop
outsl
add
dec
mov
add
test
xor
xor
aas
rclb
mov
lret
lret
pop
js
inc
fsubl
jo
xchg
imul
mov
notl
mov
or
dec
jns
pushf
mov
shl
scas
arpl
imul
bound
rcrb
xor
or
adc
cmp
rorl
stos
fs
sub
in
jge
stos
movsb
jno
stc
dec
pusha
or
bound
addr16
lret
dec
jmp
xor
fcoml
shlb
imul
push
aaa
mov
cmp
add
inc
sbb
jl
fldt
sbb
push
xorl
jge
xchg
icebp
pop
mov
inc
pusha
add
mov
ficompl
push
push
inc
add
mull
fucomip
aaa
ficoms
jp
es
mov
xor
sub
outsl
imul
clc
lahf
pop
xchg
inc
mov
cmpsb
mov
cmc
dec
adc
pop
sti
jns
mov
fisubl
jecxz
dec
xchg
out
add
sub
adc
jg
sbb
adc
cwtl
mov
int3
dec
xchg
mov
insb
mov
stc
cmp
lds
outsb
repz
mov
shrl
repnz
mov
sbb
push
xchg
dec
and
mov
xorl
rclb
movsb
mov
cmpsb
cmp
mov
pop
mov
cmp
ret
inc
aam
fs
xchg
icebp
lcall
fwait
popa
cmp
test
pop
mov
mov
scas
loope
sbb
stc
xchg
fsubp
dec
mov
pop
scas
mov
or
sbb
and
lds
sbb
push
mov
and
imul
cld
pop
jecxz
ficompl
adc
lea
fildll
loope
sbb
sbb
add
out
fsubl
adc
sahf
imul
mov
jnp,pt
enter
xchg
or
fldcw
xchg
es
push
xlat
adc
pop
call
sub
out
mov
fists
stos
bound
inc
dec
dec
lods
mov
call
pusha
xor
adc
notl
sub
sub
mov
mov
push
mov
inc
mov
mov
cmp
push
cmpsl
fucomip
mov
cmpsl
subb
ja
dec
xor
loopne
dec
into
jge
jnp
sbb
mov
sub
dec
into
je
and
sub
popa
lods
add
lret
into
test
ficoms
and
decb
notl
mov
add
jb
in
clc
adc
jns
nop
sar
mov
cmp
lods
sub
adc
rcrl
lods
pop
ss
pop
not
ret
and
ret
mov
inc
jmp
jnp
xor
jp
mov
dec
cli
idivl
inc
iret
shll
jecxz
arpl
movsb
adc
lret
push
pop
jle
pop
and
pop
or
inc
dec
dec
lcall
imul
cmp
xchg
ja
mov
cmp
repz
inc
fisttpl
sub
sub
mov
ror
push
enter
mov
and
and
xor
jbe
xchg
loope
pop
into
pop
mov
popa
fdivl
cld
pop
rcr
pop
adc
fsubl
test
sub
adc
bnd
add
pop
xor
sub
pop
mov
xchg
cmp
pushf
jne
ret
lret
lcall
outsl
mov
cltd
hlt
addr16
cmp
bound
das
fs
pushl
adc
cmpsl
add
mov
ljmp
xchg
enter
add
jmp
push
pop
adc
jle
test
lcall
loop
adc
rdtsc
ds
xchg
xchg
and
movsb
pop
ret
jno
repz
sbb
or
std
or
dec
scas
std
loope
cli
cwtl
fbld
push
loopne
mov
bound
fstl
mov
adc
mov
add
movsl
cltd
xorb
pop
jg
mov
jecxz
es
ds
movsl
sti
mov
lahf
ret
into
outsb
jbe
or
int
test
arpl
ds
jecxz
rdmsr
push
shlb
mov
into
dec
lahf
sbb
push
test
mov
shl
in
add
and
ds
sbb
shlb
addr16
mov
sbb
mull
sub
jbe
popf
popf
xchg
dec
cmp
mov
sbb
push
or
xchg
jae
cmp
js
mov
xchg
insb
lds
jmp
testl
and
mov
xchg
cld
inc
and
and
leave
insb
stos
sbb
inc
sub
add
inc
inc
or
mov
hlt
cs
pop
pop
dec
push
sbb
dec
fdivrl
es
sub
dec
add
pop
inc
cmpsl
jns
scas
jecxz
pop
dec
cmp
xchg
cwtl
push
add
push
sarb
fucomi
push
sahf
fisttpl
aaa
xor
insl
cmc
adc
xorl
call
mov
pop
xchg
pop
cltd
mov
std
add
xor
rorl
cld
clc
lock
loope
ffree
rcrl
add
cmp
sub
and
push
outsb
cmp
cmp
push
dec
push
lea
ja
cld
inc
adc
hlt
dec
push
mov
push
sahf
pop
dec
push
test
lea
fwait
mov
cmp
arpl
inc
mov
xor
movsb
push
out
mov
push
xchg
cmp
imul
jl
imul
mov
dec
loopne
loope
shrb
divl
scas
xchg
bound
sub
fidivl
addl
push
and
inc
test
hlt
sub
lret
inc
cmp
inc
incl
mov
sbb
xchg
mov
push
dec
xchg
cmp
out
push
push
mov
mov
add
cltd
std
ret
std
stc
inc
dec
inc
jl
dec
dec
imul
adc
inc
ja
rcl
leave
idivl
mov
xor
test
outsl
mov
xchg
jmp
pusha
mov
and
sub
leave
jne
pop
out
rorb
pop
push
xchg
clc
cmp
mov
push
sbb
sti
dec
jge
mov
jns
imul
mov
jg
dec
xchg
pop
inc
sbb
push
adc
jbe
nop
xor
jmp
setp
cltd
sbb
mov
imul
in
pop
lahf
daa
cmc
test
out
cmp
aas
sbb
addr16
icebp
gs
mov
xlat
mov
adc
loop,pn
sub
leave
and
out
fadds
add
inc
fmul
call
insb
roll
pop
jmp
cs
mov
mov
rolb
cmc
in
pop
in
inc
sub
pop
xchg
not
or
pop
cmp
sarb
push
mov
cwtl
xor
fcoms
out
cmp
dec
andb
xor
int
pop
adc
fucomip
cs
pop
mov
les
xor
scas
inc
sarl
insl
xchg
cwtl
pop
ljmp
pop
or
rorb
aad
dec
arpl
push
nop
mov
cltd
lods
and
inc
push
push
add
rclb
mov
xchg
incb
fcmovbe
mov
push
jge
dec
or
outsl
mov
mov
or
int
mov
shlb
cltd
fcmovb
std
sub
cmpsb
and
adc
adc
jge
jl
cltd
dec
jb
shll
loopne
xor
cli
inc
pop
xchg
outsl
loope
pop
mov
notb
sub
and
int3
jbe
out
fisttpll
cmp
mov
shll
ret
inc
cmp
mov
or
inc
icebp
lds
mov
adc
pop
mov
outsl
fcom
addr16
mov
jae
mov
mov
xchg
mov
or
xor
or
sub
mov
or
ljmp
jno
outsb
insl
lcall
xor
mov
or
adc
rcrl
fcoml
push
sub
lea
jne
adc
cmp
add
cmp
fldl2e
sub
or
icebp
scas
cli
subb
add
sti
push
fmull
movsl
jle
es
dec
sbb
popf
sahf
pop
sbb
jl
mov
mov
dec
test
fdivr
push
sti
call
fists
sbb
mov
sub
add
adc
call
andps
jp
rorb
mov
ret
lds
sahf
xlat
push
xchg
std
jne
dec
movsb
lahf
dec
lret
mov
dec
and
sarl
aas
lea
leave
push
mov
push
inc
ds
cmpl
das
fistpll
adc
cmp
repz
inc
push
faddl
roll
adc
or
mov
aad
pop
lcall
cmp
inc
mov
leave
cmc
popa
jl
inc
lcall
popa
inc
fwait
repnz
call
rcll
rolb
xor
inc
and
imulb
les
mov
mov
cli
out
xor
clc
add
stc
mov
shlb
sub
cmp
xor
call
push
js
mov
adc
mov
mov
ffreep
ja
pop
hlt
mov
dec
jge
xchg
sbbl
jns
cltd
and
jne
xor
int
dec
mov
es
xchg
add
pop
inc
sub
mov
roll
inc
es
lret
les
xor
dec
lods
mov
jg
xchg
inc
out
lret
insb
imul
pop
lea
dec
lret
in
jl
push
mov
icebp
cmpb
int
into
pop
wbinvd
pushf
andb
mov
popa
inc
pop
mov
cmpsl
mov
and
out
xchg
sbb
pop
xor
inc
movsl
xchg
xchg
inc
and
or
adc
lret
outsl
add
jb
clc
fs
push
push
and
pop
dec
sarb
flds
lock
in
arpl
cmp
test
pop
mov
inc
dec
push
psadbw
mov
ror
mov
data16
ja
in
jp
loopne
aam
je
sub
aam
mov
data16
adc
mulb
xchg
push
sub
mov
cltd
aad
popf
mov
adc
lahf
sarb
movl
dec
push
outsl
test
imul
mov
fdiv
sub
ficomps
pop
xchg
std
ds
xor
icebp
and
popf
fdiv
shl
fs
int
xchg
sahf
aad
cmp
in
sbb
dec
dec
imul
push
xchg
cmp
mov
sahf
add
jl
dec
inc
mov
sbb
xor
pop
out
push
hlt
xor
stos
ljmp
data16
lahf
mov
fnstenv
popf
or
xchg
dec
mov
cmc
jp
mov
pop
arpl
call
mov
xor
movsb
lods
mov
clc
ds
pop
aas
jnp
and
fidivl
repnz
pop
ja
push
jle
add
das
push
mov
adc
mov
out
fcomps
or
push
mov
clc
mov
lods
mov
sbb
cmp
mov
sahf
inc
test
incl
cmp
mov
or
jo
adc
mov
test
sub
hlt
jne
adc
les
inc
pop
mov
pop
fwait
arpl
clc
or
dec
fwait
mov
cmpsb
mov
aad
xor
inc
push
jne
in
lcall
fsubl
enter
xchg
fdivrl
test
pop
inc
push
ss
sbb
fs
lret
jns
repnz
ficomps
mov
pop
xor
ss
cmp
aas
xchg
jae
jp
mov
or
inc
or
pop
add
lcall
ja
cmpsl
popa
arpl
push
into
ss
inc
add
loop
int
sub
test
mov
pop
out
cwtl
jmp
leave
and
lods
mov
cmpb
mov
fs
jecxz
mov
popa
or
fiaddl
or
push
in
adcl
imul
aaa
inc
test
mov
popa
adc
cmc
dec
ljmp
mov
jbe
jo
pusha
inc
xorb
jb
test
int3
and
loopne
fimuls
xlat
adc
shrb
daa
and
je
outsl
js
cmpsb
js
mov
add
mov
xchg
push
shrl
pop
neg
push
jae
stos
scas
jae
adc
imul
scas
fcompl
inc
add
cmpb
repz
leave
mov
iret
cltd
insb
push
js
mov
cld
dec
std
fwait
mov
sbb
mov
lods
mov
mov
dec
adc
movsl
mov
scas
enter
mov
adc
jecxz
cmp
add
icebp
fbld
sbbl
xor
or
std
push
jnp
shrl
in
sbb
out
jb
cmp
and
stos
sahf
cmp
and
pop
imul
mov
pop
iret
cmpsb
nop
mov
scas
nop
jno
mov
mov
xor
jne
sar
jns
ljmp
movsl
push
cmp
lods
mov
inc
sbb
jae
mov
jno
jne
mov
jae
xchg
sbb
or
rcll
in
jb
je
or
xchg
repnz
repz
mov
mov
js
add
fs
push
gs
jnp
sub
xor
inc
enter
push
fcmovnb
je
xchg
subb
in
aas
aas
sub
dec
mov
mov
or
mov
dec
mov
cmp
and
sbbl
inc
fisttps
int
add
sub
stc
jecxz
jp
sysenter
sbb
inc
sub
dec
insl
je
xchg
sbb
fcoms
cs
push
cmp
sub
cmp
pop
lret
push
or
mov
shlb
and
pop
xor
cwtl
and
je
repz
lock
inc
inc
jg,pt
add
into
into
or
aam
fbstp
lds
leave
fstl
or
out
add
mov
scas
mov
adc
pop
pop
cmpsl
sbbl
inc
shll
enter
mov
add
int
dec
lods
sbb
xor
cmp
stos
gs
arpl
faddl
roll
sbb
movsl
das
cmpsl
movsb
aas
in
addr16
sarl
repnz
and
pop
adc
push
dec
pop
imulb
inc
or
mov
sahf
xor
and
loopne
jbe
push
in
lret
mov
sbb
stos
pop
cmp
sub
jne
xlat
dec
fbstp
dec
aam
out
xchg
mov
xchg
test
lahf
hlt
ss
mov
enter
hlt
clc
test
cs
mov
mov
fcomps
mov
stos
cmp
loopne
out
xor
mov
or
ss
dec
test
jle
outsl
cltd
xor
in
cli
and
or
mov
push
mov
into
push
scas
mov
mov
jp
jl
pop
ficoml
fs
js
ret
aas
push
mov
add
test
int3
imul
out
mov
mov
in
jp
mulb
mov
cmp
cmpsb
lahf
cmp
pop
rorb
mov
push
mov
push
jge
mov
push
ss
insb
sbb
or
jecxz
and
jge
fs
sub
dec
fcom
insb
rclb
jl
movsl
arpl
sbb
and
xor
mov
imull
mov
sub
jmp
lods
popa
push
int3
dec
jmp
inc
mov
ss
xchg
pop
cmpsl
rolb
lds
lret
adc
cmp
ljmp
hlt
xor
push
mov
xchg
sub
mov
out
push
jo
add
adc
fsubrl
mov
sub
scas
cli
jno
rclb
pop
mov
xchg
sbb
xchg
jnp
scas
aam
sub
adc
cli
pop
and
xor
outsb
les
sub
pop
int
mov
popf
mov
adc
add
mov
cmpsl
lea
call
add
jg
subl
cwtl
inc
popl
push
jp
ret
cmp
in
dec
pop
or
and
inc
aas
test
xchg
mov
je
push
and
sbb
and
lahf
popf
cli
xor
pop
js
push
std
stos
mov
sbb
mov
pop
adc
stos
cmpsl
test
leave
cmp
xlat
rcl
notl
dec
aam
aad
ffreep
ffree
lock
push
pop
inc
jno
int3
and
cmpsl
stos
mov
pop
push
adc
fwait
mov
and
push
or
ja
pop
addb
mov
into
cltd
imul
dec
mov
enter
je
mov
jg
add
sarl
jmp
loopne
ret
rcl
outsl
mov
lret
int
dec
mov
test
jb
or
jp
rcrb
popa
mov
es
roll
push
mov
rcr
fstpl
mov
adcb
js
jno
leave
scas
or
and
test
insb
repz
lahf
ret
xchg
aas
adc
nop
xor
int3
ss
dec
inc
add
divl
mov
imul
or
jne
imul
push
pop
js
or
add
out
dec
cmp
dec
push
push
sub
xchg
or
cmpsl
jmp
scas
imul
xor
mov
add
movsb
cmpsl
and
inc
js
mov
cmp
xchg
inc
mov
jg
and
or
rcll
lock
cltd
jne
stos
jo
cmp
sti
xor
rcr
clc
addr16
loop
pop
jo
sahf
sbb
cltd
jae
adc
fsts
rcrl
test
sub
popf
mov
les
cmpsb
lcall
inc
mov
jb
push
pop
shll
outsb
sahf
sub
mov
jl
cmp
adc
addr16
mov
test
into
mov
mov
mov
add
cmp
std
int
add
lea
fstpl
arpl
subw
add
jge
mov
sub
bound
push
xchg
test
nop
mov
adc
jne
pop
jno
mov
sahf
sbb
adc
pop
data16
es
pop
mov
sub
adc
jg
cltd
sbb
mov
adc
les
stos
nop
cmc
ljmp
mov
pushf
popf
mov
jl
lods
fsubl
incb
pop
dec
xchg
je
cld
outsl
dec
mov
xchg
ja
lret
sbb
cmp
dec
push
mov
xchg
jp
arpl
push
rcpps
pop
dec
roll
movsl
dec
frstor
pop
ja
pop
xlat
add
jge
in
sub
lret
mov
inc
sub
mov
rorb
clc
push
sub
push
pop
and
repnz
adc
jno
shr
gs
dec
aaa
or
clc
jmp
mul
out
enter
js
adc
xor
mov
cmpsb
or
jns
test
mov
xlat
lds
adc
pop
xchg
adc
and
sbb
in
rcr
push
mov
pop
pusha
jne
pop
aaa
aas
daa
dec
inc
inc
in
jmp
outsb
mov
push
jb
sbbl
in
sub
mov
and
lods
jp
xchg
orl
jg
dec
and
or
cmpsb
mov
repnz
lods
sbb
sbb
or
ret
aad
jae
mov
pop
push
ret
lods
dec
xlat
dec
adc
pop
fnsave
adc
mov
inc
jae
flds
sub
or
push
adc
fneni(8087
mov
push
or
ret
mov
out
cld
data16
add
bound
repz
imul
pop
pop
pop
push
lcall
arpl
pop
inc
out
mov
gs
and
or
and
xor
movsb
mov
fldt
aad
jmp
scas
les
xchg
nop
insl
inc
fcos
outsb
lahf
mov
push
sahf
cltd
push
sub
je
mov
insl
aaa
mov
jne
roll
decl
and
and
sbb
into
scas
dec
pop
je
push
cmpsb
jne
out
or
adc
adc
testb
int3
jge
add
sbb
sbb
insl
jo
rolb
testb
cmpsl
inc
outsl
mull
fidivrs
ret
hlt
xorl
xchg
in
sub
scas
test
popa
mov
in
jge
lds
stos
fsubrl
mov
push
sarb
shll
jg
nop
xor
mulb
cmp
enter
xchg
test
add
testl
test
daa
arpl
in
xlat
call
scas
mov
leave
mov
lods
mov
lret
xor
cmc
inc
mov
test
push
jae
in
dec
add
and
jmp
or
lods
xor
cmpsb
imul
xor
sub
jne
fmull
bswap
add
lock
std
xchg
pop
pop
lock
fisttpll
sbb
loopne
ret
mov
leave
out
arpl
leave
rclb
xchg
xlat
pop
lea
aaa
out
xchg
jp
mov
call
sbb
push
adc
out
add
sub
mov
add
js
test
mov
inc
push
jns
pop
sub
invd
test
lock
jbe
adc
jl
stos
out
stos
jbe
pusha
jne
pop
ja
jne
sbb
ret
sbb
sbb
jb
dec
cmp
lret
adc
out
stos
cmpsl
bound
pop
js
sti
popf
leave
sahf
cmp
dec
dec
sub
xchg
gs
jo
clc
loopne
pop
ret
cmpsl
or
out
les
clc
sti
sbb
les
dec
shrb
ret
insl
inc
leave
jge
fisubl
and
inc
neg
dec
fstpt
ljmp
ret
xchg
jno
popa
mov
mov
adc
ffree
push
pop
jns
mov
xor
cmpsb
cltd
inc
push
adc
leave
data16
lcall
jp
pop
fnstsw
shll
aas
sub
into
mov
adc
arpl
neg
and
fsubrp
push
imulb
cli
jecxz
sahf
mov
xchg
call
ret
shl
fisttps
lret
pusha
or
and
jmp
aas
into
cmp
pop
mov
repnz
sbb
inc
and
xchg
and
mov
orb
filds
xchg
mov
xchg
push
mov
jecxz
gs
dec
out
inc
adc
jp
faddp
xchg
jae
icebp
out
roll
mov
icebp
xchg
sub
into
sbb
mov
cli
or
lret
out
outsl
mov
jp
shl
popf
stos
in
push
data16
push
cmc
mov
mov
jmp
pop
inc
rorb
adcl
ljmp
insl
mov
dec
mov
into
cli
cmp
dec
push
mov
daa
cmp
adc
call
out
std
das
jno
fnstcw
pop
jo
out
mov
mov
stos
fdivl
shl
mov
int3
push
cmp
sarl
imul
fnsave
mov
dec
movsl
cmp
jo
push
and
cwtl
in
mov
jg
test
repnz
cmp
mov
insb
inc
bound
in
movsb
cwtl
imul
push
ljmp
sub
push
dec
mov
mov
std
push
push
and
loop
jg
mov
jae
mov
ret
mov
movsb
leave
lds
and
out
pop
push
stos
mov
mov
loope
int
push
mov
xchg
insl
xchg
sarb
cmc
sub
stos
jne
push
pop
sbb
test
pop
pop
dec
mov
pop
outsl
scas
jp
cwtl
fadds
jns
or
or
adc
lock
pop
jne
dec
test
xor
sub
mov
pushw
mov
cmp
xchg
mov
inc
pop
sbb
sub
fisttpl
jp
cmp
aad
mov
subl
inc
xrelease
popf
addr16
jns
mov
lret
pop
fildl
xchg
push
push
lahf
pop
jbe
and
push
xchg
push
mov
sti
xor
push
sti
fstps
push
adc
rolb
clc
inc
and
dec
push
mov
arpl
test
fcmove
movzwl
pop
rcl
in
mov
cli
frstor
push
fs
cltd
push
sub
repz
lret
lods
aam
pop
pop
or
cwtl
inc
sbb
negb
out
jp
clc
fcomps
fwait
mov
mov
mov
sbb
inc
cmp
in
jmp
daa
out
mull
xor
loope
outsl
push
sub
test
mov
lods
daa
dec
bound
in
jb
xchg
out
cmp
or
iret
cmp
fwait
loopne
or
pop
and
clc
inc
mov
push
or
push
popf
out
jb
mov
adc
xchg
loop
jmp
out
test
mov
cmp
popf
addb
leave
cmp
mov
pusha
adcb
dec
ds
rcrb
je
jb
addl
xor
dec
push
popf
mov
pusha
sbb
pop
pop
sbb
push
and
movsl
aad
mov
pop
cmc
nop
push
push
dec
mov
sti
jmp
lcall
js
mov
jl
mov
push
cmp
scas
mov
push
ret
vmovsldup
adc
stos
das
pop
in
fsts
loope
das
out
push
lret
xchg
cmp
and
xorb
aam
pop
out
cmp
ja
push
cmp
mov
jnp
xchg
adcl
push
jne
inc
fists
sub
lea
mov
scas
idivb
pop
bound
adc
mov
sbbl
add
aas
and
pop
iret
rorl
xor
sti
or
cmc
cmp
aad
aas
and
in
sahf
pop
push
add
sub
sub
mov
imul
or
ret
scas
or
pop
testl
aas
arpl
xchg
pusha
stc
xlat
dec
pop
fiadds
mov
into
icebp
cs
dec
adc
ds
lret
and
push
sub
xor
in
jmp
xchg
xchg
movsb
cmp
mov
jg
addr16
fcmovbe
sti
orb
jmp
sbb
lock
test
out
cmp
adc
mov
movsb
aaa
out
cwtl
insb
xchg
jge
dec
cld
fnstenv
std
jmp
movsl
cld
out
lret
loopne
mov
sub
lods
sub
sbb
xor
mov
or
andl
cli
iret
xor
lods
xchg
xchg
ja
inc
and
rorl
outsl
cli
pmaxub
adc
add
xor
ja
push
push
sub
test
jns
dec
cld
pusha
push
adc
hlt
sti
cmp
add
jp
ret
lds
scas
xorl
pop
jb
xchg
leave
sbb
enter
cmp
mov
dec
scas
mov
outsl
icebp
mull
into
xchg
rcrl
xchg
push
lods
cmp
outsb
pop
sub
cmp
ss
fldenv
fistpl
pop
cli
int
push
aam
mov
or
and
jmp
popa
dec
and
das
shr
lea
jle
sbb
jmp
push
mov
ret
adc
call
adc
clc
mov
add
es
sub
leave
adc
sti
pop
mov
dec
in
aad
mov
pop
add
lods
pop
lods
pop
jb
jge
jns
ja
movsb
xor
sbb
je
pop
jmp
inc
out
push
adc
cwtl
mov
xchg
jo
hlt
xor
rol
fwait
inc
and
mov
or
fs
and
in
or
divb
mov
pop
and
sub
hlt
xor
sub
repnz
inc
in
int
andl
out
sbb
push
mov
lods
cmp
jae
jb
jbe
inc
cmp
mov
add
hlt
insl
cld
cmp
test
sbb
xchg
arpl
push
inc
mov
sbb
inc
sbb
pop
mov
push
pop
inc
add
sub
hlt
movsb
inc
mov
push
test
ja
dec
fiaddl
and
fwait
and
mov
ret
inc
call
icebp
and
jns
push
test
ja
sbb
jbe
adc
les
push
xor
gs
aas
lret
mov
sub
and
and
mov
pop
pushf
sub
mov
loop
sbb
into
dec
scas
js
sub
or
lds
sbb
sub
mov
ja
rcl
movsb
lret
fnstsw
push
mov
pusha
lock
xor
jle
or
push
sub
inc
std
cmp
pushf
inc
test
subb
loop
sbb
fildl
xor
mov
jnp
jmp
xchg
adc
sbb
mov
scas
adc
add
imul
repz
and
pop
ret
xorb
pop
mov
mov
mov
repz
xchg
jge
inc
loope
mov
inc
push
dec
xchg
not
fdivs
xchg
and
pop
int3
scas
push
addr16
inc
ds
ret
sub
es
dec
or
fwait
cmp
xchg
push
push
xor
loopne
jns
pop
enter
cmp
stc
xchg
dec
in
and
or
orl
xor
dec
adcb
inc
stos
loopne
push
rclb
xchg
outsl
stos
rorl
xor
pushf
sbb
ss
out
pop
push
sub
rcrb
insl
add
pop
iret
add
icebp
in
iret
lods
mov
ss
shrl
jmp
in
lds
mov
inc
scas
adc
mov
pop
repz
jo
xorl
jno
in
push
sub
push
dec
sbb
ljmp
movsb
mov
enter
pop
pop
push
cmpsl
push
pop
divb
fwait
popf
push
fs
cmp
sub
mov
xorl
ss
cmc
add
scas
and
xchg
mov
jl
ja
add
insb
adc
cmpsl
xor
push
ret
mov
push
jp
sub
jmp
lahf
cli
or
insl
dec
lahf
iret
inc
std
or
shlb
outsb
icebp
mov
orb
fadd
pop
imul
dec
jle
insl
js
loope
bound
aad
sbb
sub
cmp
sub
xor
mov
cwtl
jp
repz
xlat
cltd
pop
movsl
xchg
cld
nop
int3
leave
enter
divb
push
push
shl
fadd
sbb
out
push
test
test
stos
ss
nop
mov
add
enter
ret
push
dec
push
out
ret
push
add
adc
and
and
lahf
in
lahf
push
mov
xchg
jge
cmp
scas
sbb
mov
shll
js
sub
inc
stc
ja
or
in
std
jb
nop
int3
xor
pop
fbstp
push
ljmp
or
xor
mov
mov
les
mov
adc
push
mov
movsl
fucomip
ret
and
jns
bound
sub
sarb
cmpsl
adc
push
into
ret
lret
js
fwait
sub
push
dec
outsb
aad
aas
xlat
cmp
lahf
cmpsl
mov
xchg
les
rcrb
das
push
sbb
in
fwait
inc
scas
loope
mov
cmpsl
pop
pop
mov
push
fsub
test
fnstcw
sahf
cltd
pop
mov
jle
sbb
mov
sub
cmp
sbb
test
cmpl
mov
mov
lahf
dec
mov
inc
and
popa
cmp
xchg
inc
cmpsl
sbb
jno
adc
sbb
mov
roll
lea
out
dec
xlat
js
or
push
sbb
mov
inc
hlt
cmpsl
ljmp
or
ret
mov
jge
fs
movsb
jo
daa
popf
lea
add
outsb
mov
push
rcrl
in
dec
lds
lret
pop
stc
enter
mov
shr
pop
hlt
outsb
lret
mov
outsl
into
ds
inc
pop
sub
divb
dec
repz
cwtl
lods
adc
test
adc
cmp
xor
dec
loop
add
cmpsl
sbb
ret
movsb
push
pop
movsb
pop
or
lret
xchg
repnz
inc
and
jecxz
stc
pop
cmp
shll
push
pop
sbb
sub
xorb
sbb
ja
lock
cmpsb
test
mov
or
andl
ret
add
ficoml
jo
mov
flds
sbb
imul
cmpsl
nop
and
mov
movsl
bnd
xchg
dec
or
mov
arpl
loope
jmp
or
and
enter
leave
pop
mov
aad
pop
gs
cmp
xchg
adc
xlat
xchg
jne
inc
and
push
pop
push
adc
mov
xor
add
pop
and
pusha
adc
dec
mov
out
sub
cmp
or
push
movsb
ret
mov
fnsave
bound
lret
je
cmpsl
mov
mov
in
jns
xchg
mov
call
cmp
sbb
js
scas
xor
rorb
cmp
mov
sub
divb
add
imul
mov
mov
jne
fs
adc
sbb
push
in
xchg
sub
sbb
or
jl
sbb
mov
cmp
enter
test
push
add
cmpb
dec
add
cmpsb
and
pop
mov
mov
jge
loop
in
test
jmp
mov
arpl
lcall
imul
cld
xor
or
mov
sbb
lahf
ds
push
mov
pop
call
scas
mov
sbb
cld
das
stos
sbb
mov
add
cmpl
cmpsl
cld
mov
jo
mov
into
sub
pop
push
push
in
add
lea
fldcw
xchg
stos
cmp
pop
and
xchg
pop
dec
mov
sbb
cwtl
xor
in
scas
aaa
fxtract
insl
fidivrs
add
loope
test
cmp
jp
adc
and
mov
iret
lret
das
push
in
fbstp
ljmp
mov
data16
faddl
push
pusha
lds
sti
and
push
pop
into
push
dec
or
popf
adc
fsubr
push
jp
nop
adc
clc
xchg
lcall
out
movsl
pop
out
cmp
jmp
dec
sub
mov
push
orb
and
addr16
fiaddl
in
mov
or
mov
xchg
les
rol
pop
subl
sbb
mov
lock
and
dec
sbb
xorl
dec
pop
jnp
xchg
and
jnp
divb
or
pop
sti
jo
dec
xchg
sahf
ds
jae
lods
or
incb
or
stos
jno
sahf
mov
stos
mov
fildll
out
push
out
js
and
int
add
push
sbb
xchg
out
int
fsubrl
dec
ja
lock
lods
mov
mov
lahf
or
divb
stc
adc
nop
hlt
cli
nop
cmp
mov
fistps
xchg
ret
sahf
nop
sub
xchg
jmp
cmp
fcmovb
or
add
hlt
mov
jl
mov
in
mov
insb
add
mov
cmp
jnp
jmp
xchg
jbe
inc
cmpl
or
jl
mov
xor
testb
mov
cwtl
pop
pop
pop
pop
push
lods
aad
sbb
ss
and
pop
jle
shlb
pop
aad
clc
cwtl
pop
in
arpl
sar
xchg
jbe
inc
stc
lods
xchg
mov
insl
mov
repnz
jl
jl
jecxz
clc
rcrb
pop
fwait
mov
jae
sbb
mov
sub
ds
xor
sub
mulb
shlb
sub
lds
jae
lret
sub
cmp
mov
dec
fidivs
pop
lcall
push
shrb
mov
jo
sbb
cld
pop
loopne
pop
imul
push
or
in
sarl
inc
push
in
data16
mov
push
push
jge
scas
inc
and
aam
add
arpl
popf
dec
mov
pusha
stos
mov
leave
dec
js
cmp
add
in
lods
push
pusha
or
mov
adc
adc
pop
dec
incb
int3
addb
js
out
push
pop
inc
or
adc
pop
addr16
stos
repz
add
pop
sbb
mov
mov
sub
push
xchg
call
jns
test
mov
cwtl
xchg
pop
dec
adcb
jmp
push
lcall
mov
popa
mov
push
jb
popf
imul
mov
mov
hlt
inc
jbe
mov
or
dec
iret
and
pop
push
or
mov
mov
insl
icebp
adc
sbb
out
xor
jb
sbbl
es
add
mov
push
sbb
adc
outsb
fmuls
ja
pop
adc
push
xor
jmp
lock
jno
enter
add
pop
dec
xchg
pushf
loop
mov
pop
add
pop
call
aad
in
jg
or
cli
jne
data16
dec
dec
or
jmp
jmp
bound
mov
xor
bound
pop
xchg
xor
adc
addb
cmp
xchg
roll
loope
call
repnz
xor
sbb
adc
in
in
loope
in
push
pop
and
sub
push
xchg
cmp
sub
dec
mov
in
mov
mov
jo
iret
sbb
sub
lds
clc
jne
pop
xchg
lds
jp
fadds
adc
inc
cmp
sub
jb
js
call
into
sbb
mov
fisttpll
mov
test
sbb
push
or
repnz
add
pop
cmpl
or
pop
and
mov
xchg
jmp
pop
sub
pusha
orb
aad
mov
and
movsl
movsl
mov
sbb
je
fneni(8087
jp
pop
cmp
ss
cmp
cmpsb
andb
pop
cmp
cmp
gs
test
movsl
xor
push
ja
pop
and
and
sub
adc
sbb
add
xor
inc
lahf
ret
sbb
mov
or
stc
rolb
ds
mov
mov
sbb
std
insb
cmp
movsl
push
insl
mov
push
ja
cmp
icebp
test
fsubs
cmp
xor
iret
out
mov
pushl
sbb
inc
aas
mov
lret
mov
mov
xchg
fstl
sbb
adc
mov
mov
adc
sub
in
lahf
mov
ja,pn
or
pop
cmp
push
or
sub
bound
hlt
les
inc
xor
xchg
add
popf
ss
adc
push
adc
cli
test
push
popa
sub
dec
inc
or
add
iret
into
and
pop
mov
xchg
insl
out
push
or
pop
add
clc
push
xchg
or
inc
aam
fisubs
sub
js
stos
outsb
setae
jne
sbb
outsl
imul
mov
cmp
enter
das
xor
sbb
mov
adc
or
mov
sti
cmp
jno
pop
lahf
sub
xchg
nop
pop
repz
inc
mov
mov
push
sub
roll
fwait
and
mov
mov
cmpsl
cmp
dec
in
add
lods
cmpb
sub
inc
fsubrl
dec
mov
sbb
fldl
mov
add
fmuls
pop
sub
pop
pop
pop
scas
mov
arpl
add
icebp
jns
and
ret
dec
adc
fucomp
mov
bt
sub
stos
sbb
je
pushf
fisttps
inc
mov
ss
movsl
jns
or
ficompl
xor
xchg
iret
dec
lret
push
or
jo
mov
les
test
in
inc
inc
jno
mov
outsb
sub
xor
stos
and
xchg
pand
sahf
rcrb
pop
cld
ret
cmp
jge
pop
push
ljmp
sbb
cmp
sbb
xor
hlt
dec
out
jo
pop
imul
mov
loopne
in
sbb
lea
mov
mov
xor
jp
jne
fidivrl
scas
in
adc
jne
add
mov
aad
stos
out
sbb
or
mov
inc
push
outsb
or
test
push
mov
xor
jb
cmc
loope
lcall
pop
int
pop
insl
lds
movsb
lods
repz
aaa
mov
call
iret
ljmp
mov
fcompl
dec
mov
push
xlat
xlat
xor
mov
add
or
inc
adc
xor
sub
testb
mov
lcall
dec
xor
dec
adc
mov
pop
mov
mov
jmp
dec
or
xchg
push
imul
pop
add
test
xor
jecxz
call
adc
fmuls
gs
xor
and
rclb
push
pop
jl
inc
add
outsb
mov
jg
hlt
jbe
xor
push
in
push
arpl
fbstp
addr16
outsb
sbb
jmp
jg
mov
mov
daa
pop
inc
fcmovbe
lret
adc
xchg
and
push
pop
mov
lahf
or
shl
call
outsb
dec
xchg
jo
test
test
cltd
icebp
jo
jge
pop
flds
call
mov
adc
inc
dec
pop
jmp
jmp
xor
inc
imul
cmp
adc
inc
test
adc
xchg
rcrl
lret
out
aas
push
xlat
sbb
mov
pop
cltd
adc
add
fnstcw
mov
cmp
mov
and
arpl
or
shll
xlat
mov
mov
jl
xbegin
pop
jecxz
outsl
test
sub
sub
outsb
xor
xor
insl
pop
lds
ljmp
int3
adc
or
lds
movsl
jbe
jmp
mov
mov
jmp
or
cmc
and
mov
je
rolb
adc
push
outsb
xchg
imul
pop
pop
sub
es
and
aad
add
ja
jp
push
push
bound
xor
adc
test
in
cld
sub
or
or
or
insl
enter
cmp
and
mov
sbb
jae
insl
out
insl
repnz
sub
scas
icebp
mov
push
out
popa
pushl
mov
dec
or
jnp
jmp
pop
sub
mov
pop
pop
lea
xor
xchg
mov
pop
jno
das
jbe
mov
inc
or
in
js
arpl
xchg
sub
cmp
xchg
mov
xchg
out
mov
in
mov
adc
rorl
loope
mov
push
mov
inc
jns
jne
mov
stos
faddl
fistpl
jmp
jecxz
dec
sahf
es
cmp
stc
inc
outsl
hlt
mov
push
addr16
mov
push
gs
sbb
shrb
popf
xlat
hlt
adc
xchg
pop
add
icebp
dec
jmp
sub
test
ret
mov
fsubrl
pop
loope
js
addr16
scas
bound
jnp
fistl
cmp
fsubl
jl
pop
add
mov
cmp
and
sarb
lret
arpl
pushf
test
fbld
pop
insb
jmp
mov
sti
shlb
sub
aas
push
cld
mov
setl
nop
neg
xor
in
test
mov
les
ret
pusha
mov
ljmp
mov
loope
sbbb
mov
dec
cmpsl
jg
sub
lock
or
add
faddp
popf
cmp
and
pop
sbb
and
mov
xchg
mov
rcr
leave
xchg
stos
mov
mov
inc
push
push
js
in
xor
mov
pop
inc
fwait
shl
add
sahf
jg
xorb
sbbb
jne
pop
xor
fwait
insl
insb
inc
mov
shrb
mov
xor
mov
insb
pop
pop
das
bound
pop
clc
addps
cmc
jns
out
cmc
xchg
xchg
mulps
sbb
jp
sbb
mov
outsb
ja
test
and
or
lahf
fdivl
mov
mov
xchg
andb
pop
mov
push
xor
inc
inc
and
sahf
add
out
add
mov
and
sbb
dec
pusha
add
mov
out
mov
pop
mov
pop
lds
leave
mov
mov
cmp
inc
lcall
clc
test
push
sbb
xor
dec
mov
mov
cmpsb
sbb
sub
cli
loop
sbb
sbb
scas
mov
lods
dec
or
test
inc
dec
or
push
push
xor
push
jae
shrl
xchg
fiaddl
cltd
pop
jbe
add
cmpsl
sbb
jl
fdivrl
loope
subl
add
jge
or
dec
xor
das
lods
adc
push
stos
or
test
xor
xor
inc
sti
in
ja
push
inc
inc
je
adc
sarl
ljmp
rclb
push
repz
push
mov
cmp
push
insb
repnz
inc
int3
mov
cmp
mov
mov
or
cmp
push
pop
mov
test
push
pop
mov
test
xchg
dec
mov
rcl
xchg
inc
pop
mov
xchg
mov
add
mov
xchg
pop
jno
cld
lods
stos
pop
test
daa
push
gs
pushf
loopw
jmp
sahf
popf
nop
xchg
sub
leave
jmp
pop
outsl
rcrl
xchg
mov
fisttpll
ss
fcmovne
cmc
ret
mov
sub
xchg
popa
mov
repnz
pop
inc
stc
idivb
xor
dec
and
nop
mov
jmp
jb
sub
pop
xor
fidivrl
lret
arpl
scas
out
ret
jns
test
insl
cmp
adc
enter
enter
js
add
pop
pop
sub
xchg
lcall
mov
scas
mov
push
insb
nop
fstpl
aam
xor
fnsave
aad
xchg
loop
in
fists
lock
loope
mov
xchg
loop
int
mov
xchg
xlat
nop
in
add
sbb
and
mov
into
bound
lds
mov
test
sub
sbb
inc
stos
push
lret
roll
xchg
fdivs
dec
lret
mov
imul
mov
or
outsb
mov
out
sbb
inc
mov
lods
paddd
pop
and
out
add
inc
inc
push
ficompl
clc
sbb
dec
sbb
and
into
mov
xor
pop
and
and
mov
in
imul
sbb
jecxz
push
call
inc
sub
mov
iret
cmpsl
or
lret
cmp
test
or
negl
xor
lahf
loop
add
imul
push
lods
or
lahf
dec
add
scas
mov
mov
mov
imul
fwait
mov
cmp
aam
or
inc
cmp
mov
xor
jecxz
fstpl
and
mov
mov
and
mov
xor
add
fidivs
ljmp
jbe
jge
daa
push
add
negl
mov
pop
scas
movsb
movsl
mov
les
sysenter
jl
jge
or
mov
popf
push
sbb
inc
sbb
popf
xor
jae
into
aad
mov
les
add
fwait
inc
jns
mov
push
dec
fadds
subb
fidivl
outsb
xchg
jmp
test
pusha
pop
stc
lods
cld
pop
and
mov
inc
pop
dec
fisubrl
sub
ret
popa
dec
cld
pop
repnz
int3
push
push
mov
push
scas
repnz
aas
pop
mov
leave
mov
and
sub
in
jg
test
pop
cmc
inc
xor
xchg
pop
scas
pop
lahf
out
or
jno
cmp
lret
mov
adc
repnz
jo
stos
push
xchg
adc
ret
cmp
and
mov
xor
sbb
jmp
shlb
pop
imul
imull
decl
pop
sbb
jle,pn
sub
push
hlt
lret
lods
mov
fistl
cli
xchg
mov
outsl
divb
add
or
mov
sub
pop
sub
mov
fwait
or
fidivrs
jb
push
nop
sub
je
pop
rorb
xor
mov
xchg
sbb
outsl
pop
fs
sahf
sbb
inc
subb
mov
jae
jl
loopne
popa
stc
push
lods
stos
mov
into
scas
push
inc
fs
mov
lock
pushf
nop
jns
jb
pop
test
xchg
mov
outsb
mov
dec
or
adc
cwtl
push
mov
stos
inc
pop
aaa
adc
jnp
sub
stos
out
loopne
push
jmp
xchg
mov
sti
gs
in
cmp
lret
cmp
mov
icebp
xchg
jg
in
mov
xchg
repnz
push
mov
aas
in
add
cwtl
mov
mov
dec
faddl
fisttpl
sbb
flds
loop
inc
test
iret
andl
push
adc
popf
or
or
dec
enter
jne
xchg
frstor
inc
add
icebp
add
cmc
popa
jecxz
cmp
cli
sub
add
dec
nop
enter
xor
into
adc
xchg
sbbb
pop
fsubrs
mov
test
push
fs
andb
dec
gs
mov
repz
pop
shll
cld
loopne
les
inc
shlb
push
dec
mov
jb
ret
call
enter
xchg
aaa
in
out
push
movd
std
push
jecxz
setg
adc
xor
daa
pop
mov
or
xchg
stos
imul
or
mov
not
ret
movsl
mov
push
ret
add
mov
lds
nop
stc
xor
jnp
enter
pop
add
inc
push
sets
pop
xlat
fs
stos
mov
and
inc
and
cwtl
aam
inc
mov
cltd
roll
fists
or
inc
or
movsl
adc
sub
out
adc
lods
inc
adc
fsave
cli
in
call
xor
mov
sbb
mov
loope
xor
add
or
fs
pop
call
add
ret
bswap
adc
mov
mov
jle
or
add
jg
adc
sbb
jp
xlat
push
cmpsl
or
cmp
inc
inc
cmc
je
test
sub
xor
cmpsl
and
push
lea
lcall
out
into
and
dec
push
push
sbb
xchg
into
cmc
cs
cmpsl
jge
roll
fistps
out
jl
adc
xchg
add
pop
inc
and
xor
or
fcoms
jl
mov
mov
outsl
mov
push
jg
inc
and
lcall
imul
xorb
push
fisubrl
out
sbb
pop
and
fwait
dec
mov
or
insb
mov
and
imulb
or
adc
sbb
arpl
in
fdivrp
mov
out
clc
bound
cli
das
js
repz
cltd
xor
cltd
in
push
push
lods
sbb
jne
pop
shrl
js
add
loopne
pushf
jmp
push
testb
cmp
add
push
xor
cwtl
idivl
fdivs
jle
loope
xchg
xchg
out
into
cmp
iret
adc
pop
out
mov
push
dec
les
hlt
and
dec
mov
and
cmc
and
test
or
and
pop
sub
and
jno
cmpsl
fcom
and
sti
sbb
fisttps
scas
fimuls
jg
movsl
mov
mov
mov
adc
add
cmpsl
push
sub
in
in
mov
lods
andb
dec
xchg
dec
xchg
fisubrs
add
xchg
cmp
cwtl
jnp
scas
cmp
and
mov
xor
push
jae
mov
mov
mov
adc
mov
mov
in
sbb
addl
xchg
outsb
sbb
mov
mov
add
jne
sub
adc
aas
dec
sbb
neg
pop
add
popa
sbb
push
jl,pt
or
ljmp
mov
cmpsl
xchg
push
clc
mov
cmp
pop
dec
test
fistl
jo
lock
fwait
and
and
stos
dec
sub
stos
adc
in
outsb
fldcw
jno
inc
dec
mov
daa
add
out
mov
mov
loope
ret
pop
aaa
sub
imul
mov
scas
movsb
cmc
xchg
shll
sti
cld
add
xchg
cmpsl
ret
add
jp
popf
sub
or
and
pop
repnz
sbb
test
mov
cld
lret
loope
jb
int3
push
das
dec
adc
call
gs
sub
fs
fnstsw
cmc
dec
shrl
bound
fwait
ljmp
rorb
and
aad
jmp
cmp
pop
stc
inc
out
lea
data16
cmp
jp
int
cmc
cltd
cs
or
faddp
leave
movsl
add
mov
mov
loope
jp
negl
pop
push
or
xor
test
mov
or
push
jns
dec
xchg
inc
mov
cltd
mov
insl
mov
arpl
dec
or
push
lods
pop
jmp
cmp
add
mov
adc
ja
ljmp
lahf
repz
lods
xchg
jl
loop
push
add
xchg
call
pop
mov
inc
lret
pop
test
or
fistpl
dec
jnp
sub
fisubl
lret
fdivrl
jp
xor
dec
les
mov
cmp
jns
fnstenv
inc
pop
xchg
and
pop
xchg
mov
mov
dec
loope
jbe
push
ljmp
loop
in
xor
and
inc
repnz
dec
sub
sub
fiaddl
enter
idivl
or
jle
xor
dec
jb
icebp
xchg
xchg
sarl
or
add
outsb
xchg
or
fdivrs
inc
cmpsb
loope
add
es
dec
jno
in
inc
mov
test
dec
sbb
or
stos
pop
dec
pop
int3
jb
sbb
sahf
cmpl
mov
xchg
cmp
ljmp
fs
iret
sbb
in
or
and
sub
or
in
pop
je
xor
daa
sarb
inc
dec
jecxz
in
call
xchg
das
adc
int3
inc
add
scas
call
into
dec
data16
fwait
mov
mov
je
adc
jmp
movsl
cmp
test
cld
and
repz
cmpsl
aad
dec
sub
daa
fsubl
sbb
push
in
mov
add
inc
mov
pop
outsb
cmpsl
mov
mov
scas
fisubrl
adcb
adc
fdivp
lcall
push
jl
fdiv
mov
dec
push
cmp
fimull
xor
lds
adc
lods
xor
adc
mov
add
cld
push
int3
cmp
push
adc
adc
aas
inc
sbb
loope
fildl
loope
push
ds
test
cmp
adc
in
mov
push
sbbl
stc
mov
lock
sub
and
sbb
sbb
mov
cmp
inc
push
push
cmp
jg
mov
in
cmp
fdivl
rorl
or
adc
xor
mov
xor
pop
jb
mov
xorl
mov
xchg
loop
jg
jne
andl
dec
imul
inc
bnd
lret
and
hlt
pop
lea
cld
and
push
mov
imul
sarb
sti
bound
das
loop
mov
sub
cmpsb
sbb
mov
cmp
dec
out
lea
shld
pmovmskb
mov
jl
sarb
jge
dec
je
stos
pop
jns
xor
fmul
xlat
mov
in
adc
cltd
cmc
xor
aas
mov
mov
and
sti
inc
xchg
push
popf
xchg
insb
mov
dec
dec
jg
loop
lcall
jecxz
inc
ror
aaa
push
xor
cmp
in
jmp
ficomps
or
fcomip
xchg
xchg
dec
dec
inc
or
das
cmp
push
add
sub
mov
ja
out
out
push
add
and
add
and
or
mov
iret
dec
mov
sbb
sahf
cli
out
and
cmp
cmpsl
pop
and
cwtl
mov
sti
sbb
cmp
and
xchg
loop
xor
int3
stos
add
mov
inc
xor
mov
loope
mov
cmc
pop
repz
pop
adc
sub
es
push
fs
jae
xchg
pop
mov
mov
out
jl
bound
pop
adc
dec
sti
insb
pop
insb
fimuls
mov
sub
dec
out
jle
imul
lock
dec
loop
roll
testl
fidivl
or
cmp
aam
fcmovnu
lcall
jo
jp
cmpsl
cmp
popf
arpl
push
fs
lds
lcall
push
fldl2t
lods
fbstp
and
jmp
std
sbb
or
gs
movsb
testb
sbb
in
mov
mov
add
dec
fistpll
or
in
xchg
push
xchg
or
and
je
popa
cmp
jmp
daa
das
sahf
xlat
dec
icebp
mov
rcr
and
jg
dec
sub
adc
push
sbb
xor
dec
icebp
cmpsb
fldcw
sarl
sub
std
adc
in
insl
mov
ret
jne
pop
decb
mov
jbe
rcrl
out
sub
mov
xchg
jnp
jle
add
adc
push
xchg
sahf
sub
or
lds
cmp
out
out
sub
call
jae
popf
cmp
repnz
call
cs
xchg
in
and
sbb
test
popf
or
jbe
inc
jg
and
add
adc
sub
mov
rcrl
in
jbe
push
leave
lods
ret
aad
jmp
fwait
inc
insb
adc
scas
mov
jge
sub
xor
ss
mov
add
fimull
cmp
push
rolb
xchg
xor
and
push
lcall
movsl
pusha
clc
jecxz
jae
stc
dec
and
scas
aaa
pushf
inc
fcmovnb
xchg
sbb
sar
pop
clc
or
inc
and
xchg
or
and
ja
push
outsl
aas
clc
sahf
sbb
addl
adc
mov
xor
lods
xor
jmp
shrl
mov
jbe
jns
jne
mov
jnp
testl
rolb
stc
loop
mov
out
mov
sub
dec
repnz
push
xchg
push
subl
dec
push
nop
push
iret
inc
shll
pop
cld
fucomp
push
out
ja
outsl
adc
mov
pop
jo
das
jns
stos
and
adc
push
out
sbb
dec
jo
push
xchg
add
mov
cmp
sbb
loope
or
pop
mov
xor
nop
jbe
or
inc
orb
out
xor
sbb
into
outsl
rclb
fcoms
push
inc
lahf
popf
ss
sti
jl
sub
fldpi
test
outsl
pop
lock
cmc
adc
mov
cmp
je
stos
dec
or
push
push
cmp
sub
lahf
out
int3
push
orb
cmp
cmpsb
cmpsl
jle
stos
jmp
inc
lea
repnz
adc
xchg
in
mov
sub
push
mov
jmp
movsb
repz
xchg
push
and
xchg
fwait
and
ss
jbe
cmpsl
int
inc
sarl
push
mov
imul
lea
cmp
xchg
push
adc
lret
roll
pop
int
ret
mov
jbe
loope
addl
cmp
mov
inc
add
idivl
xchg
mov
cmc
jb
sub
out
adc
jecxz
popa
gs
loopne
loop
sarl
xor
add
outsl
dec
cltd
mov
sub
imul
cmpsl
and
jne
popf
lret
clc
mov
or
into
jbe
cmp
jecxz
in
push
repz
xchg
out
sub
pusha
aaa
xchg
mov
loope
aad
xor
mov
mov
mov
pop
add
in
stc
cmc
lea
inc
add
mov
shlb
iret
dec
sti
imul
sbb
inc
cmp
add
into
mov
cmp
and
inc
sub
popf
and
repnz
fucom
lret
cwtl
jno
lret
and
mov
rolb
nop
pushf
into
cmp
jp
cli
mov
fwait
dec
mov
adc
dec
shll
dec
ljmp
mov
sbb
xor
data16
mov
fs
sub
cmp
dec
les
stos
dec
fwait
dec
cmc
enter
cmpsl
xchg
or
test
pop
sub
sub
fiadds
cli
sub
add
inc
inc
xchg
aam
jns
mov
mov
push
sub
xchg
repnz
aad
inc
imul
sub
jmp
dec
sub
pop
mov
int
data16
adc
cmp
dec
adc
push
aam
jmp
pop
xchg
or
fldl
test
push
mov
addr16
mov
adc
mov
adc
aaa
in
ds
sbb
fs
rol
add
arpl
and
repnz
pop
lods
sub
push
jno
paddsw
ret
and
jb
xor
cmpsb
adc
imul
xlat
cmp
test
int3
lods
mov
mov
xor
mov
dec
nop
push
xor
aad
mov
mov
imul
adc
pop
jae
inc
adc
enter
dec
data16
cmc
xchg
pop
mov
pop
popa
shrb
mov
add
push
int3
lret
and
scas
shrb
sahf
dec
mov
outsb
cli
xchg
ss
pop
stos
xchg
ret
lds
push
adc
enter
jae
jne
mov
or
push
mov
push
xor
mov
jo
mov
push
roll
bound
lock
inc
mov
and
sub
cmp
hlt
mov
aam
push
hlt
pop
xor
les
dec
add
repnz
inc
push
lret
daa
or
jne
pop
xor
js
mov
jge
pop
sub
mov
push
les
insl
mov
dec
cmpsl
inc
sbb
lcall
mov
jbe
inc
ficomps
jno
movsl
push
dec
stos
sub
cld
cmp
cltd
pop
sti
or
cmp
addr16
xor
rclb
sbb
sbb
call
adc
out
or
xor
adc
dec
xchg
jo
cmp
test
xchg
mov
mov
ficompl
insl
push
jns
shrb
push
sti
adcb
bound
jne
gs
push
add
inc
out
adc
rcrl
test
add
insl
daa
push
loope
pop
ljmp
aas
iret
out
inc
inc
paddsb
stc
imul
jmp
divl
ja
xor
jb
adc
gs
mov
jge
xor
cwtl
movsl
add
lea
hlt
mov
xchg
les
pop
add
jb
xchg
push
bound
loop
dec
pop
rcl
mov
adc
jb
pusha
and
mov
adc
xor
and
pop
in
fidivs
outsb
and
inc
xchg
imul
fwait
sbb
push
insb
lods
sub
gs
jns
pop
push
push
in
dec
adc
fs
dec
clc
jns
frstor
adc
js
clc
test
mov
mov
push
call
fistl
jne
and
lods
loope
mov
xor
or
insl
mov
aam
push
dec
test
iret
cwtl
xchg
cmpsl
mov
lret
or
in
xor
sub
aas
pop
mov
in
push
lds
test
mov
adc
xor
mov
das
out
cmc
stos
repnz
push
rorb
xchg
inc
jge
push
popa
xchg
neg
add
sbb
icebp
icebp
int3
xchg
es
dec
and
mov
add
dec
push
mov
cwtl
fidivrs
ret
sbbl
mov
test
or
leave
mov
xor
dec
test
cmp
fbld
pop
push
das
or
les
cmp
fcmovbe
lds
movsl
push
mov
mov
nop
push
or
dec
scas
jecxz
push
ja
jg
iret
sbb
out
ret
js
jo
cli
daa
jne
bound
dec
cmp
loopne
ss
jg
add
movsl
inc
test
xor
or
insb
insl
dec
lods
pusha
sub
add
frstor
faddl
inc
add
ret
ja
sbb
mov
fstpl
or
xor
adc
xchg
das
jge
cwtl
scas
testl
or
and
inc
stos
sbb
test
jns
push
mov
and
sub
add
xchg
stos
xchg
mov
xlat
dec
add
sbb
std
and
inc
dec
scas
pop
and
mov
sub
paddw
scas
jne
push
stos
jl
add
movsl
imul
movsb
fadds
movsb
int3
arpl
mov
push
out
andb
xchg
dec
pop
xchg
por
jne
push
cli
dec
loopne
sbb
inc
push
push
call
add
fadds
les
push
lods
arpl
mov
dec
xchg
sub
add
mov
gs
mov
adc
insl
mov
psrlw
adc
xchg
repnz
in
jae
push
lret
out
push
dec
inc
ret
cs
iret
test
sarb
fxtract
std
adc
mov
iret
ja
mov
lret
data16
cmp
scas
dec
fdiv
adcl
test
cmpsb
jo
jo
nop
xor
inc
inc
xor
fidivs
adc
in
scas
push
mov
inc
adc
mov
pop
loopne
mov
out
or
jmp
stos
in
repnz
sub
loopne
pop
push
loope
add
cmp
test
xor
ja
jg
dec
mov
cmp
mov
fistps
sub
jno
ret
xchg
xchg
popf
and
fisubrl
iret
mov
repnz
int
adc
or
scas
add
sub
roll
pop
pop
sbb
push
enter
stc
pop
scas
xchg
adc
jns
int3
hlt
jmp
add
mov
call
movsl
dec
mov
hlt
cmc
and
mov
add
fs
mov
pop
xor
adc
cmpsl
inc
in
dec
mov
or
xor
cltd
push
pop
pop
push
xlat
mov
push
jo
in
dec
or
bound
aaa
cmpl
lods
push
mov
flds
out
pop
into
imul
and
sub
jne
ds
cli
out
or
js
xchg
imul
sub
cmp
xlat
lock
push
mov
cmp
pop
inc
outsl
xor
mov
mov
pop
mov
mov
cmp
nop
pusha
arpl
fisttpll
out
sbb
ret
orl
or
stos
sar
movsl
addr16
push
mov
iret
ja
in
lods
lcall
or
cmpsl
pop
out
fadds
es
add
fldl
push
fcmovne
mov
mov
lret
pop
jns
xor
in
push
orb
add
jg
xchg
cltd
or
sub
cmp
lock
loop
or
dec
cmpsb
rolb
push
es
or
ja
mov
add
xchg
adc
dec
data16
js
inc
jae
xlat
add
scas
in
cmp
in
jns
shll
jns
adc
stc
mov
ret
mov
lahf
repnz
iret
sbb
xchg
cmp
je
mov
xchg
and
lock
insb
mov
dec
xor
and
out
jmp
repz
xor
xchg
mov
test
push
xlat
push
sbb
cmc
aaa
scas
out
push
iret
push
loope
xor
daa
xor
push
dec
mov
cmp
push
shlb
xchg
imul
or
dec
repnz
insb
std
xchg
je
or
inc
mov
inc
scas
test
push
jg
shrb
fmuls
pop
sysret
cmc
inc
movsl
ja
dec
ja
pop
fwait
insl
shll
negl
gs
imul
push
mov
and
scas
lods
fwait
mov
rcr
mov
push
pushf
imul
repz
or
pop
shlb
inc
dec
aad
adc
or
leave
push
mov
in
cmp
jne
mov
add
int3
cwtl
mov
mov
xchg
aas
mov
or
and
stos
scas
cmp
fidivrs
jmp
push
mov
pop
fs
jecxz
mov
cmpsb
and
rcll
addl
ja,pt
dec
dec
out
ljmp
pusha
jno
aas
icebp
outsb
or
mov
adc
xchg
push
popa
ret
mov
fstl
pop
ror
fwait
lcall
mov
inc
push
sub
sub
sahf
loopne
xor
pop
mov
ljmp
icebp
aaa
sbb
mov
icebp
adc
and
outsb
adc
pop
sbb
push
iret
cmp
popf
cmpsl
sbb
mov
rcrb
mov
les
pop
stos
clc
out
pop
jmp
fstps
cmp
insb
dec
mov
pop
xor
mov
dec
cld
call
and
push
cmp
mul
push
push
jnp
hlt
adcb
sbb
pop
aam
xchg
test
and
or
cmc
sub
fndisi(8087
scas
xor
adc
mov
xchg
iret
es
fistpl
adc
mov
imul
pusha
insl
push
xor
push
roll
std
mov
pop
loope
push
mov
mov
sbb
aam
out
imul
repz
mov
xor
mov
or
mov
inc
dec
aaa
adc
xor
sub
cmp
loop
jl
push
sti
daa
or
add
push
push
push
adc
dec
jl
or
mov
cltd
push
jmp
mov
jp
jg
lods
cltd
unpcklps
cmp
lods
lret
mov
mov
imul
gs
imul
ds
std
jae
lahf
lret
and
fists
push
in
cltd
xchg
push
hlt
pavgb
inc
cmp
lahf
imul
push
data16
dec
gs
out
jae
add
loope
flds
cwtl
dec
rcrb
adc
mov
js
nop
cmc
test
mov
daa
stos
enter
sub
and
push
pop
xor
xchg
testl
sub
jns
data16
xchg
and
hlt
daa
cmpsl
fidivrl
jo
mov
and
cmpsl
jg
jmp
cmp
pop
dec
sub
pop
pushf
cli
rolb
js
inc
pushaw
mov
dec
scas
push
or
test
cmp
mov
imul
mov
int3
push
sbb
push
pop
mov
adc
push
ljmp
data16
mov
out
fcmove
pop
jecxz
adc
xor
push
dec
jle
aaa
lods
add
add
inc
jbe
pop
cwtl
jae
inc
cmc
push
lods
sub
test
out
push
orl
daa
rcr
lret
pop
or
call
push
cmpsl
aad
shlb
loop
stos
push
add
mov
mov
orb
adc
sbb
lret
testb
loope
sbb
pop
jns
xor
dec
add
mov
xchg
aam
adc
push
ds
xchg
lret
inc
sbb
inc
jmp
ds
mov
xor
sbb
push
sbb
dec
sti
adc
jl
xchg
cmc
mov
insb
push
xchg
mov
shll
lea
mov
pusha
cs
xor
cli
lret
or
adc
lcall
sbb
push
insl
ljmp
mov
adc
inc
mov
lcall
cmp
lret
scas
cld
repz
gs
mov
test
loop
ret
mov
inc
fnstcw
sub
mov
mov
movsb
out
inc
jl
pop
push
xchg
push
int3
loopne
jne
outsb
dec
xor
sub
mov
mov
stos
xchg
cltd
inc
or
xor
decb
imul
dec
mov
mov
jl
insl
push
pop
int3
mov
add
inc
ret
mov
mulb
jp
in
jne
movsb
push
or
pop
sbb
cmc
nop
ror
decb
in
pop
add
imul
mov
mov
shr
sbb
ficomps
mov
enter
mov
mov
xor
dec
mov
dec
add
cmp
lods
mov
rcll
jne
mov
out
xchg
push
or
fs
mov
mov
cmp
lret
lea
aam
or
call
inc
shrl
xor
push
sbb
or
pop
mov
loop
test
lods
and
cmpsb
push
jne
mov
sub
test
movsb
jno
cmp
sub
or
mov
int3
popf
add
inc
add
sbbb
and
cmc
ja
bnd
data16
fsubrs
fdivrs
cmpsl
aam
aam
cmp
mov
sbb
mov
xchg
sbb
scas
orb
and
rclb
sbb
jg
mov
add
push
flds
mov
jle
dec
mov
xchg
cmp
mov
xchg
scas
lods
or
mov
cwtl
mov
mov
jmp
dec
mov
into
scas
std
cltd
push
mov
mov
sbb
clc
push
mov
les
jmp
sub
mov
repnz
leave
ds
lods
sbb
mov
pop
xor
jp
mov
popa
mov
shll
cli
rolb
into
push
dec
mov
mov
mov
sub
les
test
xor
xchg
mov
jne
rorl
out
mov
aam
pop
adc
in
jl
movsl
outsl
sbb
movsb
loope
mov
sbb
xchg
rorl
push
mov
test
cwtl
cmp
sub
jb
jb
out
and
call
test
adc
sbb
filds
call
inc
cmpl
sbb
cmpsl
scas
cltd
divl
xlat
push
jnp
xchg
lods
sub
cmp
clc
lds
faddp
addr16
inc
addr16
pop
cwtl
lcall
dec
test
jo
jae
imul
ja
and
inc
mov
inc
shrb
xor
pop
pop
icebp
adc
inc
push
xor
aas
insb
sbb
test
inc
lret
iret
dec
jecxz
insl
lods
hlt
test
mov
jge
insb
push
scas
add
adc
loope
xor
xchg
int
mov
lret
push
insb
push
mov
es
insb
bound
and
repnz
orl
loop
out
lods
inc
mov
mov
push
lcall
jne
mov
sub
sbb
scas
pop
dec
sahf
pop
mov
and
cmp
pop
aam
daa
jle
in
imul
push
fdivrl
push
jns
push
fnsave
mov
mov
sub
popf
mov
jb
lods
stc
push
pusha
xor
mov
push
sub
adc
test
sbb
aas
mov
insl
imul
push
xchg
mov
push
jecxz
adc
leave
jbe,pn
xor
imul
inc
in
mov
mov
or
into
push
fstps
sbb
jbe
cmpsb
outsb
popf
mov
data16
mov
data16
mov
sbb
stc
cmpsb
jo
mov
flds
and
pop
call
pop
sbb
inc
mov
inc
clc
mov
into
fsts
decb
out
aaa
outsl
pop
fincstp
nop
adc
push
add
pop
adc
jb
inc
pop
bound
pop
add
xchg
sbb
call
mov
inc
cmpsl
test
mov
lcall
js
sahf
pop
js
jg
fwait
loop
mov
fsubrs
sub
loop
daa
fs
imul
outsl
leave
dec
fstpt
pop
ficoms
or
repz
jae
jbe
popa
xchg
inc
pusha
into
fwait
and
dec
xor
js
dec
and
jl
ret
lahf
stos
mov
jecxz
arpl
mov
adc
pop
sub
add
pop
pop
pop
mov
mov
sub
xor
inc
ja
jp
fs
xor
cld
stos
xor
mov
xchg
out
sbb
movsb
xchg
leave
add
mov
xchg
push
xor
push
dec
dec
xchg
push
xchg
mov
and
cmc
pop
mov
sbb
adc
je
cmp
inc
sbb
movsb
adc
mov
lods
dec
jno
lods
cmp
incl
add
out
xchg
and
xchg
ss
xchg
pop
rcll
add
push
add
xchg
subb
or
dec
jmp
mov
aas
ljmp
nop
inc
push
mov
test
inc
insl
pushl
push
push
stc
or
mov
bound
push
aad
icebp
mov
inc
push
pop
sbb
iret
jmp
xor
das
cmp
push
fists
push
dec
and
mov
push
pop
sbb
addl
mov
push
test
or
test
add
test
xchg
jno
cmp
xor
and
in
dec
pushf
cld
pop
lods
cmp
mov
add
jl
or
and
mov
cmp
das
pop
addr16
xor
dec
dec
jae
gs
mov
mov
pop
mov
ds
cltd
push
xlat
rorb
jb
pop
and
fiadds
int
mov
sub
and
aam
mov
dec
pop
popa
popf
test
cmp
fs
push
clc
inc
lahf
loopne
sbb
push
incl
test
xchg
fnstsw
ja
push
dec
mull
mov
aad
cwtl
pop
and
mov
xlat
sub
insl
mov
jb
aam
nop
outsb
inc
sbb
inc
xchg
mov
jns
cmpsb
gs
iret
dec
nop
jl
xlat
cmpsb
pop
shlb
pop
ret
xor
out
add
cmp
lds
push
push
jecxz
out
pop
cmc
popf
lcall
or
mov
in
les
popa
add
push
inc
std
sbb
push
out
sti
test
jg
mov
sbb
inc
inc
ret
dec
dec
inc
jo
bound
out
xor
push
mov
hlt
mov
cwtl
inc
cli
mov
mov
sbb
mov
push
mov
notb
add
enter
aaa
push
in
jo
enter
mov
pop
repnz
push
iret
or
cli
int
xor
ss
add
mov
xor
mov
imul
mov
mov
push
iret
pop
lds
sbb
sbb
add
cmp
add
icebp
pop
jecxz
jge
jns
imul
ret
and
mov
xor
daa
mov
pusha
push
dec
stos
mov
dec
dec
fucomip
cwtl
fisttps
or
jne
cli
outsl
inc
popf
imul
pop
dec
pop
push
mov
mov
shrl
loope
adc
rcrl
lods
mov
fldl
repz
xor
push
jns
inc
add
sbb
lcall
sbb
test
inc
cmpsl
stos
cmc
mov
push
fnstenv
insl
or
xor
rcl
lea
xchg
mov
dec
test
push
adc
xor
mov
test
repnz
xor
xchg
pop
push
adc
adc
fnsave
les
sbb
pop
hlt
icebp
mov
push
mov
and
mov
mov
pop
movsl
mov
pop
mov
test
adc
cltd
jl
std
outsl
mov
dec
push
adc
addr16
cmp
das
cmp
and
sub
sbb
fcmovnu
pop
pop
shl
cmpb
jl
test
adc
call
mov
push
andl
cmp
imul
cmp
mov
mov
adcl
lcall
jb
or
mov
jnp
mov
lock
push
in
hlt
imul
add
xchg
out
or
sub
lods
xlat
inc
xchg
mov
mov
lret
jno
std
fbstp
rclb
pop
ljmp
sub
push
dec
cmpsl
dec
jg
push
mov
cmpsb
mov
imul
aaa
cmc
adcl
filds
sbb
mov
push
cltd
push
mov
mov
xchg
adc
mov
xor
cld
mov
dec
loope
repz
mov
pop
mov
push
ret
movsl
sub
push
or
adc
out
push
cmp
cmpsl
iret
xor
pop
mov
mov
xchg
mov
lcall
mov
adc
push
xlat
or
lret
daa
lea
arpl
push
jnp
jle
xchg
xor
add
stos
test
int
lcall
enter
int3
push
arpl
push
je
lods
icebp
dec
clc
gs
fildl
xchg
pop
lea
psubsb
push
loope
ljmp
dec
aaa
pop
sbb
and
pop
andb
aaa
xchg
pop
mov
pop
loope
push
imul
sti
scas
in
jmp
xchg
jge
mov
jbe
xor
push
pusha
mov
push
push
insl
xchg
push
xchg
cmp
in
inc
rolb
jmp
insb
out
std
icebp
test
adc
clc
mov
cs
movsb
lret
outsb
dec
dec
enter
lahf
xchg
movsl
into
ret
pop
arpl
push
popf
push
lds
pop
outsb
fst
mov
mov
imul
lahf
push
in
js
inc
insb
out
loope
dec
scas
jle
jp
clc
dec
cmpsb
jg
stos
jnp
out
out
bnd
pop
out
fmuls
lcall
cwtl
icebp
vmptrld
movsl
fcmovnbe
fidivrs
imul
enter
daa
outsb
pusha
outsb
sub
inc
outsb
cmp
sub
sbb
xor
stos
aam
dec
pop
cmp
pop
cmc
addl
adc
pop
mov
imul
aaa
pop
xchg
out
lahf
dec
sti
test
dec
ss
out
aam
and
in
jp
lds
lock
stos
push
xor
cmp
insb
jb
imul
cmp
mov
inc
jnp
pusha
imul
adc
or
mov
fcompl
pop
cmp
nop
mov
inc
stc
rcrl
ret
cmp
adc
dec
pop
gs
aas
ror
ja
andl
adc
sub
pop
push
into
sbb
jg
inc
sbb
push
xor
insb
jle
nop
xor
mov
fsubs
adc
or
in
mov
mov
out
inc
out
xor
cltd
roll
xchg
hlt
mov
add
sti
lret
lea
add
dec
push
js
sti
cmp
out
push
xlat
stc
dec
cmpsb
out
inc
mov
push
jno
adc
jo
mov
pop
outsb
jle
jne
ds
sbb
insl
and
stos
mov
and
mov
scas
stos
sub
push
loope
arpl
add
mov
mov
xor
mov
rcll
cmp
shll
mov
push
lret
mov
push
dec
in
gs
push
sar
mov
sarb
push
fcompl
sbb
cmpsl
orl
jle
pop
int3
mov
test
xchg
lcall
call
fstpl
idivb
jnp
mov
outsl
jle
sub
mov
insb
inc
stc
or
pop
cmc
dec
xorl
push
sahf
test
ds
ret
out
mov
xchg
andl
nop
pop
jl
je
shrb
or
sub
cmp
or
enter
ret
xchg
aaa
jge
dec
jbe
neg
push
rcl
sub
insl
pop
cmp
decb
add
xor
add
test
int
arpl
gs
lock
nop
xchg
mov
fldcw
cli
inc
cmp
fdivrp
jbe
dec
adc
xchg
adc
jno
setnp
dec
xor
push
adc
mov
push
jbe
xchg
scas
es
dec
jmp
pop
dec
cwtl
lahf
xor
adc
imul
push
fs
gs
cmp
scas
ljmp
aas
sbb
inc
scas
aaa
lds
pop
leave
lcall
test
xchg
aaa
hlt
pusha
lahf
bound
jno
jp
loop
cld
scas
xchg
and
lret
mov
ret
lock
or
inc
test
pop
ret
mov
mov
mov
or
iret
popa
negl
push
sbb
loope
cwtl
adc
adc
mov
in
loope
and
add
push
sti
fst
out
cltd
cmpsl
push
es
sub
ljmp
xchg
cwtl
mov
insl
xchg
pushf
lret
push
lret
repz
dec
cmpsb
in
cmpsb
and
lods
scas
outsb
jge
mov
imul
in
cmc
mov
enter
mov
in
daa
or
sarl
ds
lods
rolb
mov
mov
inc
roll
and
je
push
or
mov
pop
mov
xlat
fs
push
inc
or
lret
mov
cmp
or
push
stos
dec
inc
sub
and
push
fsubs
mov
aad
lods
dec
or
jge
int3
inc
fwait
push
or
push
pop
mov
sarl
nop
arpl
mov
sbb
fadds
shll
popf
hlt
fwait
pop
jmp
out
dec
jle
add
sbbb
loope
pusha
mov
adc
test
dec
mov
sub
andb
aas
mov
add
sub
ret
shll
mov
scas
push
xchg
jmp
mov
xchg
pushf
sbb
maskmovq
divl
imul
shlb
lock
nop
js
out
mov
ds
subb
sbb
xlat
mov
fcoms
mov
jns
cmp
jno
inc
adc
outsb
inc
in
dec
sbb
arpl
dec
out
adc
imul
dec
mov
or
adc
sub
clc
adc
fists
push
mov
mov
stos
xchg
xor
and
mov
test
pushf
xchg
cmpsl
and
add
push
orl
stc
gs
psrad
adc
lcall
pop
push
push
mov
xchg
es
mov
pop
out
push
xchg
shlb
and
hlt
xor
xchg
dec
and
xchg
push
add
outsb
pop
mov
fs
pop
out
or
rorl
sbb
jb
sbb
sbb
add
sub
mov
and
out
popa
shlb
cltd
adc
ret
mov
fidivrs
or
imul
adc
jb
mov
imul
adc
lods
push
mov
cmp
and
nop
jg
leave
hlt
xchg
int3
adcb
imul
outsb
push
shl
inc
popa
xchg
and
cmp
jbe
mov
mov
inc
dec
sahf
ret
arpl
imul
xchg
cmp
xchg
popa
mov
adc
sbb
cmpsl
mov
insl
fsubrl
sbb
test
xchg
testl
js
pop
insb
aas
stos
subl
in
scas
mov
pop
outsl
push
inc
mov
adc
jl
inc
or
cld
xchg
std
adc
and
popf
ja
test
ret
push
xlat
push
or
lret
or
into
push
lcall
ljmp
fiaddl
cwtl
xchg
daa
pop
and
nop
data16
cld
outsl
loopne
mov
stos
mov
bound
outsl
mov
dec
pop
lret
out
insl
shlb
sti
sarb
mov
test
lock
mov
or
cmp
sbb
sbbb
insl
sub
xchg
call
shlb
loop
daa
mov
in
cmp
or
lds
ret
idivb
leave
outsl
clc
pusha
xchg
sub
sub
mov
xchg
cmc
mov
stos
jecxz
pop
mov
out
aas
push
ret
movsb
out
scas
push
mov
and
outsl
pop
cmpb
pop
lods
lods
fbld
jne
dec
pop
pop
pop
sti
loope
adc
pop
cmovo
or
stc
push
xchg
mov
shll
lods
or
hlt
inc
ss
icebp
jnp
loop
xlat
fst
jl
je
das
xor
or
inc
std
sub
cmp
dec
mov
shrb
add
aad
dec
jbe
ja
arpl
mov
aam
mov
popa
sub
mov
jae
rcr
insb
jmp
adc
pop
sub
into
adc
sarl
dec
fbld
movsl
fsubl
cltd
cmp
jns
xor
push
std
imul
hlt
mov
add
insl
sbb
lods
jo
dec
or
or
stos
mov
mov
sbb
stos
cmpsb
cmp
es
push
and
repz
out
sub
inc
aaa
push
adc
mov
add
adc
jp
sub
test
lea
cmp
sti
push
imul
popf
adc
and
lret
out
or
fistps
movsb
inc
mov
push
mov
pop
int
idivl
and
sbb
imul
das
clc
jl
cmp
daa
push
into
dec
cli
int3
xchg
xchg
xor
mov
mov
pusha
test
enter
sbb
jmp
jnp
hlt
inc
daa
insl
pop
outsb
fwait
push
mov
add
hlt
movsb
cwtl
push
pop
pop
and
movsl
xchg
jp
xor
inc
inc
push
push
mov
sti
sti
pusha
das
mov
and
push
lods
lret
call
mov
cmp
lods
xchg
test
inc
addb
inc
inc
lock
mov
push
je
movsl
cli
xchg
sti
jecxz
and
or
or
ss
fs
fmull
inc
orl
ret
adc
mov
mov
pop
mov
mov
pop
lret
scas
and
hlt
insl
lds
jno
out
pop
inc
push
mov
scas
adc
movsl
xchg
ret
mov
negb
pop
inc
add
push
les
in
pop
jp
sub
stc
adc
jae
push
xchg
jo
xlat
cltd
fildl
std
adc
out
mov
ret
push
sbb
test
mov
daa
test
push
dec
test
loopne
je
push
mov
jecxz
and
sbb
xor
xchg
aam
push
sbb
xlat
pop
or
lcall
ds
mov
jecxz
insl
mov
jns
repnz
cwtl
xchg
ret
dec
mov
mov
ret
jmp
test
xor
and
incb
decb
add
sbbb
out
cmp
bound
jg
mov
push
stos
stos
xchg
testb
sbb
mov
push
xchg
rcl
push
bound
stos
lret
sub
push
pushf
scas
add
loopne
inc
mov
jns
xchg
inc
mov
lods
arpl
mov
xchg
mov
imul
fdivs
dec
sub
pop
mov
aam
push
adc
mov
in
adc
enter
mov
ret
ja
ficoms
push
mov
int
or
fisttps
cmpsl
lods
mov
cmp
outsb
inc
mov
in
popf
outsl
xchg
xchg
sub
jnp
adc
in
movsl
mov
mov
and
std
nop
rcll
jae
push
outsb
mov
xchg
mov
test
fwait
inc
arpl
adc
ljmp
add
add
mov
adc
imul
daa
shrl
jg
shl
push
jmp
xor
sbb
sub
jle
pop
cmp
mov
sti
sbbl
fcompl
call
dec
or
aam
div
mov
xchg
adcb
mov
adc
rol
mov
mov
pop
inc
loop
out
clc
sub
stc
mov
notl
sarb
out
test
ret
lcall
out
idiv
push
les
test
push
inc
mov
iret
sbb
push
jne
enter
jno
pop
shl
and
orb
shlb
mov
aaa
in
stos
pop
and
out
outsl
lret
cld
inc
mov
mov
out
shl
sbb
inc
int3
fwait
inc
ret
inc
inc
int3
dec
cmp
and
sbb
cmpsb
bound
test
xor
jl,pt
ds
mov
xchg
mov
or
data16
cmp
sub
test
loope
lahf
dec
dec
dec
xchg
mov
push
shl
fwait
push
inc
add
scas
fcompl
pop
xchg
fs
lea
dec
ds
xchg
out
sub
mov
das
jo
sti
lret
add
gs
movzbl
dec
jbe
outsb
mov
push
dec
mov
pop
lret
shlb
or
lea
cwtl
es
adc
arpl
pusha
sbb
pop
cld
pop
shrb
loope
or
ja
mov
outsb
ret
sub
xchg
and
cltd
jns
arpl
pop
jnp
mov
mov
ss
xchg
mov
stos
or
mov
or
jge
mov
test
shr
daa
fstpl
stc
bnd
jno
pcmpgtd
orb
sub
lods
aaa
xchg
aad
fisttpll
std
ja
jmp
sbb
adc
jl
loop
dec
das
cltd
lods
pop
fidivrl
push
cmp
imull
push
xor
popa
cwtl
sbb
xor
aas
and
lret
in
aad
sbb
dec
ret
cmovl
shll
push
js
les
fdivrl
xor
pushf
fbstp
cli
xchg
push
divl
mov
or
pushf
inc
out
xor
mov
repz
fnstcw
cmp
pop
jecxz
lds
pop
xchg
lahf
cmpsb
adc
repz
int
push
xchg
dec
mov
test
xchg
dec
pop
cmp
daa
lods
ljmp
outsb
pusha
int3
stos
dec
mov
rclb
mov
aas
icebp
test
fwait
in
push
cmp
mov
pop
sbb
repz
aas
push
mov
mov
popl
popa
movsb
cmpsl
js
fcomps
loop
push
xchg
push
fnstsw
scas
repz
pushf
addr16
add
cmp
movsl
cltd
mov
stc
add
sti
mov
push
pop
push
cli
leave
jp
mov
sbbb
mov
test
call
cmpsl
inc
lcall
pop
outsl
hlt
repz
sbb
mov
pop
out
cmp
and
sahf
lret
mov
mov
xor
jns
imul
int
mov
jle
push
and
je
inc
shll
decb
cmp
in
sub
add
cmp
jo
addl
push
mov
push
cmp
adc
xchg
mov
adc
jno
out
sbb
add
callw
adc
stos
sbb
mov
scas
out
or
clc
xchg
push
outsb
stos
es
lret
mov
xchg
mov
lods
cld
stc
xor
pop
add
mov
aad
je
xor
scas
push
dec
lret
xchg
out
mov
in
pusha
xlat
ja
mov
stos
dec
xor
and
adc
jno
sti
push
sub
lock
out
filds
jmp
sahf
ljmp
incl
aaa
mov
push
jnp
adc
outsl
mov
adc
test
loop
ret
and
pop
pop
dec
int3
fistpl
subl
imul
fisttpl
mov
add
pop
xchg
cld
xchg
cli
ljmp
imul
inc
jl
fisttpl
adc
push
inc
sti
lret
ret
adcb
sbb
push
icebp
push
lcall
and
in
ds
sbb
leave
mov
push
and
and
or
add
and
add
repz
mov
je
jp
push
and
and
mov
out
sub
pop
jae
call
and
out
outsl
mov
and
xor
imul
adc
js
xchg
fisttpl
shrl
sub
imul
stc
sbb
and
cmpl
push
xlat
push
ds
cmpsl
ret
dec
add
dec
mov
andl
xor
inc
xor
rcrl
sbb
inc
outsl
out
cmpsl
ljmp
iret
push
jl
out
dec
inc
xchg
jmp
mov
adc
dec
ficompl
mov
in
loop
push
adc
pop
jmp
sub
sbb
aam
sbb
push
jl
mov
in
in
push
jbe
push
xor
mov
push
test
lcall
cmpsb
mov
je
scas
push
ss
jbe
ror
cmp
xchg
pop
dec
hlt
sub
fstpl
inc
push
pop
call
adc
push
sub
mov
das
je
in
adc
out
cmp
fisttpl
jmp
js
and
push
and
in
cli
lret
push
sub
xchg
iret
imul
cmp
lret
pop
test
lea
xsavec
inc
dec
jmp
cwtl
adc
cmp
and
outsl
addb
pop
in
jl
cmc
cmp
jbe
ret
enter
mov
push
push
mov
jae
xor
lock
ds
or
xchg
movsb
pop
divb
push
adc
mov
fnstcw
push
outsb
loope
pop
mov
mov
into
add
mov
jmp
jle
stc
out
les
mov
sbbl
fidivrl
aaa
cmp
ficomps
push
cli
cmpsb
fstps
imulb
out
bound
jge
cmp
xor
lret
std
xchg
mov
bound
xchg
shlb
add
inc
jno
pop
jnp
dec
jmp
mov
mov
imulb
mov
dec
inc
fcom
cmp
das
xchg
rcr
loop
in
adc
ljmp
imul
cmpsb
add
xor
outsl
es
and
jne
je
out
push
cmp
hlt
pop
fistps
leave
sub
jns
pmaxub
lret
sub
loop
lock
push
les
mov
subb
xor
push
aad
jg
mov
xor
pop
push
jb
xor
repz
dec
pop
cmp
stos
mov
push
test
js
or
jae
cli
out
divl
aad
lods
pop
pop
jl
lods
and
mov
add
in
shl
repnz
sbb
mov
ja
and
iret
adc
cmp
pop
mov
popa
xor
cltd
jg
outsb
push
or
aas
sub
or
fidivrl
or
fs
shlb
or
test
mov
lret
sbb
xchg
jmp
cmp
aas
dec
mov
pop
int3
add
add
lret
loop
inc
xor
adc
int3
in
mov
mov
int3
dec
cmp
ds
pop
fistl
repz
mov
insl
inc
adc
lds
adc
cmp
adc
je
test
fwait
movsb
fistpll
and
push
and
aaa
mov
int3
xchg
fcmovnu
cmp
push
sub
inc
xor
es
jne
int3
insb
or
mov
jb
xchg
mov
out
mov
mov
add
fldl2e
nop
inc
sbb
pop
outsb
or
in
pop
movsl
int3
sbb
lret
xor
call
mov
daa
inc
nop
mov
pop
enter
fistl
mov
arpl
rorl
ret
test
pop
add
add
aaa
sbb
aas
inc
xor
pushf
adc
xchg
testl
push
outsl
data16
sti
pop
sub
xor
sbb
insb
inc
pop
cld
nop
cltd
loopne
add
lea
cmpsl
pop
lods
test
jg
inc
ja
dec
adc
ret
sbb
repz
daa
mov
pop
adcl
xor
cmp
test
jmp
imul
push
stos
xchg
xor
and
push
ja
xor
push
jecxz
iret
int
in
nop
or
inc
sbb
in
ss
out
xchg
xchg
stc
scas
pushf
sbb
mov
scas
loop
les
jne
cld
mov
and
add
je
xchg
popf
mov
push
jne
js
add
sti
es
ljmp
insb
mov
cmp
mov
dec
mov
push
popf
test
xchg
jae
jmp
andb
lret
addr16
pushf
push
aaa
idiv
lods
ds
pop
adc
add
or
pop
jmp
aaa
sub
lock
or
inc
add
insb
iret
mov
out
nop
dec
sub
cmp
das
mov
test
mov
adc
sbb
add
pop
jb
xlat
sahf
sub
ja
push
mov
out
imul
add
out
mov
pop
xchg
jbe
push
repz
and
push
mov
push
cltd
sub
push
jne
clc
pop
neg
or
jp
outsl
mov
dec
mov
mov
mov
push
mov
iret
pop
add
repz
adc
or
lds
mov
sbb
aas
lods
icebp
push
lods
out
sub
adc
xorb
or
iret
or
rol
call
stos
hlt
jl
xchg
cmp
mov
mov
and
loopne
aam
js
jp
sub
or
add
push
adcb
push
push
push
push
sbb
stos
add
popf
shrb
xor
dec
maxps
mov
arpl
clc
icebp
in
lds
push
inc
cs
pop
push
dec
xchg
out
scas
dec
or
cwtl
dec
mov
inc
test
imul
dec
pop
addr16
sbb
pop
jle
jo
jo
jp
stos
dec
mov
mov
sub
jge
inc
mov
pushf
push
decl
hlt
mov
push
jno
mov
and
popf
out
cmpsl
cmp
push
inc
sbb
push
int
add
or
cmp
xchg
icebp
and
sbbb
xor
mov
movsb
add
ret
out
cmp
xor
xorl
push
inc
jns
mov
and
inc
lea
dec
cmp
pop
sbb
inc
test
xchg
pusha
in
lcall
aaa
cmp
mulb
lock
out
jmp
dec
lcall
adc
lods
ljmp
mov
add
xchg
cld
mov
mov
sti
lahf
xor
andb
push
cltd
ret
mov
test
std
das
out
dec
mull
outsb
insl
dec
jb
test
mov
or
or
int3
xchg
jmp
adc
mov
inc
outsl
lcall
inc
shll
mov
mov
sub
push
xchg
adc
insl
fwait
aam
mov
pop
mov
sub
jle
mov
fists
add
sub
lods
push
xor
cmp
mov
dec
push
pop
sub
mov
xor
gs
fnsave
mov
sub
mov
sbb
xlat
sub
dec
movsb
xlat
dec
aam
xchg
insl
aam
push
or
mov
arpl
pop
adc
xor
push
cmp
push
push
in
test
cmpsb
dec
mov
xor
cli
cltd
mov
lock
test
or
xchg
pop
pop
dec
movsb
xchg
arpl
mov
cmp
adc
testb
fmulp
movsb
dec
mov
pusha
xchg
push
into
scas
cli
aam
jb
jmp
mov
push
ds
aad
addr16
test
cli
jle
out
push
call
inc
and
pop
mov
adc
push
and
add
sub
cmp
dec
sbb
cltd
in
and
loope
dec
push
mov
pop
fs
stc
lret
pop
lret
xchg
adc
xchg
incl
out
inc
popf
jmp
xor
sbb
stos
hlt
rorl
pop
fcoms
dec
scas
jne
ret
inc
push
out
mov
sub
pop
pop
jo
orb
loope
js
popf
dec
pop
sbbb
out
lods
mov
cmp
sar
ret
dec
int
inc
push
xor
xor
nop
ret
jb
jbe
adc
call
nop
xchg
mov
dec
mov
das
and
pop
pop
mov
push
hlt
jnp
push
push
repz
mov
pushf
xchg
xchg
fdivl
mov
fstpl
xchg
push
and
adc
jmp
jecxz
loopne
aad
aad
arpl
push
lds
mov
jecxz
int3
cli
jl
inc
pop
mov
add
and
mov
orb
pop
ret
dec
push
test
popa
int
cmp
lret
or
mov
leave
dec
mov
enter
les
shll
cmpsb
jb
sub
cmp
xor
adc
sub
push
sub
es
insb
fbstp
cmp
xor
jo
xor
mov
aam
mov
out
rol
outsb
mov
sahf
inc
xchg
mov
out
ja
or
dec
sahf
lcall
sti
cmp
iret
push
push
shll
xor
mov
mov
xchg
xorl
gs
cs
fildl
push
xchg
ud2
mov
mov
lock
enter
xchg
mov
mov
mov
mov
adc
dec
sub
in
jge
xor
scas
pop
loop
pop
push
and
sub
inc
je
sub
daa
pop
int
jge
ds
add
outsl
or
push
pop
mulb
jg
fmulp
inc
pop
daa
xor
idivb
insl
xchg
subb
sti
push
enter
mov
fistps
mov
jmp
push
out
xor
mov
mov
movsb
add
add
divps
xchg
sbb
shl
xor
fdivrp
mov
xchg
fiadds
test
and
subl
pop
lods
pop
roll
fsubrl
sarl
adc
ret
inc
cmc
inc
ret
cltd
pop
xchg
and
pop
cmp
push
sbb
mov
sub
movsl
adc
mov
dec
push
push
call
push
mov
test
mov
mov
sahf
push
mov
cmpsl
jl
and
inc
ljmp
and
add
pop
lds
inc
shll
cmp
aad
lret
xor
xor
cmp
fsts
les
jg
cld
imul
das
andl
lock
test
add
xor
pop
in
pop
das
mov
int
test
and
mov
push
sub
or
xor
sbb
mov
mov
shrb
out
sti
sbb
bound
mov
xchg
std
or
les
mov
int3
and
invd
mov
xchg
lret
outsl
fdiv
mov
daa
dec
adc
sub
leave
add
daa
bound
sub
in
ret
jbe
loop
or
inc
sahf
mov
push
mov
std
mov
outsb
imul
leave
pop
ret
mov
mov
in
testb
or
mov
adc
xor
push
imul
pop
movsb
push
outsl
xor
sbb
movsb
or
les
push
pop
or
jmp
jl
add
jl
mov
lds
mov
sbb
pop
push
loop
pop
test
ss
cmp
sub
fidivrs
xchg
push
roll
push
lcall
lea
adc
or
dec
xchg
loope
cmpl
ss
cmp
cld
mov
ljmp
in
test
shll
sbb
or
mov
cli
imull
andl
xor
mov
add
shrb
hlt
pop
cli
aaa
pushf
xchg
out
fs
jnp
adc
bound
addr16
xor
sbb
dec
in
mov
push
inc
cmp
scas
rorb
inc
out
mov
pop
ss
cmp
dec
pushw
cli
imul
stos
mov
jp
rolb
sub
mov
adc
fdivs
not
jmp
ret
fs
out
xchg
xchg
stos
mov
xlat
xchg
outsl
lds
out
movsb
lcall
sbb
sub
in
add
pop
pop
sbb
xor
aas
repz
fidivrl
call
imul
inc
jl
test
into
outsb
ss
out
stos
mov
pop
inc
inc
mov
xchg
push
dec
mov
or
pop
jbe
add
pop
pop
out
jb
add
add
jnp
addr16
shr
hlt
lret
ljmp
cli
fimuls
pop
jnp
mov
xchg
leave
hlt
jb
jo
out
cmp
scas
das
cwtl
int3
and
cmp
lods
icebp
push
mov
push
sti
aad
addl
or
stos
xor
and
ficomps
ja
std
sub
leave
push
pushf
adc
cmp
gs
ljmp
mov
in
mov
icebp
leave
xchg
neg
addr16
pop
aaa
xor
fsub
xor
or
aas
mov
test
movsl
push
mov
pop
xorb
jnp
stos
andl
cli
sub
aam
test
add
dec
xchg
bound
inc
out
dec
es
iret
add
inc
mov
sub
dec
loop
ret
repnz
push
mov
jg
dec
out
iret
add
or
fisubrs
cmp
cli
loopw
ffreep
std
xchg
gs
out
mov
int
cmpsb
cmp
dec
rcrb
je
or
adc
xchg
in
mov
in
mov
or
repnz
popa
mov
inc
add
xchg
sub
imul
mov
rol
jge
inc
adc
pushw
ds
jo
sbb
rcrb
and
movsl
xchg
push
push
test
and
clc
insb
xchg
in
pop
sbb
mov
aaa
outsb
mov
pushf
aam
in
testb
out
in
xor
adc
xlat
and
push
insl
stc
fwait
xchg
insb
xchg
push
add
jne
mov
mov
or
xchg
test
mov
inc
inc
and
lahf
fsub
sahf
call
push
push
adc
popf
xchg
adc
xlat
sbb
ret
mov
popf
arpl
out
int
loop
pop
cmp
lahf
jo
fldcw
icebp
jmp
mov
dec
mov
imul
and
or
and
pop
les
mov
movsl
adc
inc
push
aas
xor
xlat
cmp
iret
mov
mov
push
mov
cs
mov
pop
jp
adc
mov
outsb
sub
mov
push
xchg
xor
sub
push
pushf
or
imul
popa
jae
fdivrl
mov
dec
mov
jl
insl
lret
mov
jne
outsl
sub
xchg
mov
dec
mov
jns
push
and
or
lahf
leave
sbb
insb
fdivr
add
dec
orl
or
xchg
inc
inc
push
rorl
xchg
pop
cmc
mov
dec
xchg
inc
xor
jne
ljmp
pop
push
push
test
lcall
jmp
push
push
enter
es
pop
imul
mov
imul
push
lods
or
test
add
jecxz
push
dec
int
mov
cmp
mov
movsb
repz
mov
pop
jmp
dec
dec
inc
dec
fistps
push
pop
ss
shlb
fnsave
mov
or
lods
fcoml
rorl
lcall
mov
loop
loope
pop
in
mov
push
aam
test
sbb
fsub
or
jns
enter
add
jae
pusha
int
add
mov
ja
push
mov
add
jae
aaa
dec
mov
in
jne
jo
mov
repnz
mov
fs
outsb
adc
jl
sub
cld
jo
jmp
and
and
mov
shlb
jl
std
mov
daa
mov
inc
imul
add
jae
and
and
mov
std
sbbl
or
jo
aam
shl
mov
adc
rcl
mov
inc
in
or
pop
pop
jg
adc
xchg
mov
stos
push
aam
jae
test
insb
add
push
pop
icebp
xchg
push
lahf
or
ljmp
pop
mov
out
jmp
insl
pop
aas
movsl
xor
pop
sub
pop
popf
loop
and
push
xchg
inc
je
pusha
cmp
rol
shr
pop
push
fadd
mov
push
push
enter
add
jnp
inc
xlat
loop
or
call
pop
pop
pop
inc
movsl
jo
mov
xchg
add
mov
data16
dec
mov
sbb
in
dec
cmp
xchg
pop
stos
rol
inc
adc
xchg
mov
ficoms
and
push
in
lea
sub
jp
cmc
pcmpgtw
movsb
mov
out
mov
sub
jle
xchg
sub
xchg
lahf
add
nopl
icebp
cmp
and
push
pop
jmp
cmp
xchg
jecxz
dec
mov
rcrl
leave
call
adc
and
xchg
jge
xor
lahf
std
mov
jl
imul
pop
stc
mov
inc
xchg
cmp
xchg
and
push
and
fistpl
aas
mov
pop
jmp
movsl
ja
pop
test
sub
and
or
test
push
pop
leave
mov
gs
cmp
out
js
adc
xchg
xchg
or
inc
jg
stos
pop
sbb
daa
inc
cmp
push
insb
popa
sahf
inc
pop
adcb
jecxz
jb
xchg
cmp
mov
add
pop
or
add
mov
cmp
inc
add
xchg
fsincos
stc
adc
aas
sti
xchg
loopne
add
mov
xorb
into
lret
gs
mov
jg
jnp
or
popf
arpl
mov
lret
xchg
xor
adc
orb
loopne
dec
cltd
pop
mov
call
mov
jecxz
cld
cmp
xor
mov
mull
mov
and
cld
addr16
sub
aas
push
pushf
mov
jp
je
outsl
nop
fsub
in
ss
outsl
cmpl
xchg
scas
adc
dec
cmp
andps
xchg
push
dec
jge
jecxz
push
popa
std
sbb
jmp
stc
imul
incl
push
push
inc
and
adc
popa
bound
dec
dec
cmp
add
inc
mov
iret
and
push
int3
rolb
sub
aad
dec
dec
test
aas
leave
scas
scas
push
rcr
orl
mov
addb
int3
adc
mov
jae
mov
xor
cmpsb
bnd
out
sbb
mov
pcmpeqw
aad
scas
aam
popa
inc
jg
mov
test
jae
mov
lcall
jbe
loop
in
mov
fistl
rep
mov
test
mov
adc
cmpsl
test
mov
stos
clc
test
cmp
dec
movsb
pop
inc
or
call
out
adc
pop
loopne
push
sub
fisubs
push
mov
mov
push
in
adc
stos
dec
mov
sub
adc
lea
and
test
sbb
out
dec
cld
lods
insl
movsl
pushf
call
cs
mov
addr16
pop
jmp
rcll
sbb
inc
or
lds
clc
das
je
mov
clc
mov
push
push
sbb
lret
push
lds
call
mov
shrl
xor
mov
xorb
push
fiadds
cwtl
adc
in
inc
pop
mov
rcr
jmp
sarb
iret
mov
daa
add
imul
cli
mov
inc
jle
xchg
dec
enter
cli
add
movsb
std
pop
cmpsb
iretw
pop
jg
mov
push
mov
push
add
in
les
adc
sub
and
roll
outsl
xchg
push
int
jbe
mov
adc
cmc
mov
pop
into
pop
sub
repnz
xor
in
jnp
dec
into
xchg
leave
mov
inc
mov
shr
mov
mov
cmp
push
sbb
inc
sub
cmpsl
adc
sbb
or
pop
hlt
ja
sub
gs
push
and
mov
cltd
xor
inc
lret
xchg
pop
mov
loop
test
mov
adcl
mov
scas
test
xchg
xchg
and
test
jae
dec
mov
loop
sahf
dec
or
imul
sbb
out
lods
jno
mov
lods
int
push
cmp
pushf
sub
loop
mov
xor
leave
xchg
and
inc
cmp
ja
adc
inc
push
jno
mov
mov
ret
sub
das
fcmovu
jae
or
idivl
inc
pusha
cvtpi2ps
inc
push
or
lret
mov
xchg
fwait
sub
cs
xchg
jle
pop
leave
xchg
jns
mov
daa
subl
mov
cmp
sub
xor
cmpsb
xchg
sar
pop
push
notl
mov
inc
mov
inc
icebp
in
xchg
push
pop
cmc
jbe
jnp
ret
cmp
es
xorl
bound
adcl
sbb
pop
jb
mov
test
cmpsb
jne
mov
jp
mov
ret
ret
je
push
pop
or
into
sahf
daa
push
inc
jb
push
stos
pushaw
or
int3
daa
and
shll
cmp
add
clc
inc
sbb
fsts
mov
stos
shrl
push
jns
jb
dec
js
or
in
out
dec
bound
mov
loope
into
outsl
push
popw
mov
xor
sar
jge
push
inc
xor
out
pop
ret
insl
addr16
imulb
add
stos
adc
sbbl
push
out
jo
imul
sbb
incl
imul
xchg
ja
repz
jg
scas
add
ficoml
jb
push
outsl
xchg
dec
inc
imul
lahf
mov
mov
sbb
ret
dec
insl
push
xorb
inc
and
and
mulb
push
sub
ss
mov
xchg
cmp
mov
or
arpl
jle
inc
sbb
and
mov
xlat
lret
cmpl
js
push
inc
xchg
inc
cli
enter
cmp
pop
sbb
mov
jge
movlps
test
out
sub
bound
loopne
cli
das
test
push
repz
or
mov
xchg
js
out
orb
xor
adc
jae
outsl
je
pop
sub
pushf
mov
inc
add
adc
aad
das
icebp
lcall
or
pop
addb
cmpsb
cmp
cmpsb
notl
sbb
lcall
lcall
mov
test
in
decl
push
rclb
enter
loopne
cmp
popa
scas
imul
sub
enter
int3
mov
pop
mov
push
fidivs
sub
data16
pop
xor
pop
jns
pusha
out
imul
mov
int3
fisttpl
in
outsl
push
jne
cmpl
in
aas
cmp
hlt
cmpsl
loope
aam
iret
mov
jns
call
les
popa
lds
outsb
mov
fsubp
xlat
push
pop
roll
adc
imul
xor
dec
and
pop
pop
test
inc
sub
push
orb
repz
push
imulb
add
ljmp
sub
fnsave
or
lret
lret
loope
dec
int
in
in
add
mov
mov
std
popf
test
test
sub
sbb
icebp
mov
fwait
mov
add
les
adc
xchg
push
into
movsl
sbb
sub
push
or
pop
dec
out
sub
lcall
test
fisubs
out
fwait
imulb
test
lret
sbb
dec
adc
pop
push
or
add
lret
pop
sub
dec
inc
ret
pop
les
dec
dec
jg
repz
add
dec
fs
jg
jecxz
sahf
push
sti
rolb
xchg
mov
push
xchg
xor
notl
mov
int3
add
lods
sub
ds
cmp
xchg
psubw
push
sahf
popf
push
mov
mov
rolb
dec
aaa
loopne
lods
subb
inc
pop
addl
out
and
scas
fsubrl
sbb
inc
mov
adc
aaa
xor
cli
mov
insl
sarl
cmc
imul
lods
out
cli
loope
ret
push
mov
stos
stc
mov
or
scas
and
xor
inc
fadds
loop
outsb
in
sbb
xor
outsl
dec
addb
inc
dec
in
loope
xor
mov
pop
or
inc
inc
cwtl
stos
xchg
stos
inc
aas
xchg
or
adc
aam
sub
movsl
call
pop
and
xchg
shrb
loope
mov
test
lods
xor
enter
stos
daa
nop
sbb
jg
loopne
mov
mov
aas
mov
inc
fimull
shll
out
mov
mov
xchg
inc
jnp
rcrb
dec
mov
pusha
int
fsub
in
pop
jg
jp
cmp
push
iret
jne
pop
pop
dec
xchg
and
js
xlat
lea
shl
mov
std
pop
cmp
imull
mov
test
popf
add
iret
pusha
imul
sub
cmp
cld
xor
dec
mov
fistpl
jno
pop
xlat
ror
mov
nop
push
add
xor
hlt
negl
push
inc
mov
jge
or
cmp
sub
sub
push
inc
flds
jns
icebp
cmp
mov
fstps
pop
and
adc
mov
cmp
aaa
cmp
fcmovbe
es
orl
xchg
into
out
cmpsb
fcmovnb
ss
fisttpl
mov
in
loope
out
and
push
jmp
inc
mov
rorb
repnz
fnstenv
lahf
gs
lcall
out
cmc
xchg
pop
xchg
pcmpgtw
cltd
adcb
popl
adc
xor
out
clc
je
xlat
xlat
fs
mov
inc
mov
sub
loope
rcrl
std
jno
lret
int
ds
add
add
enter
lidtl
mov
sub
sbb
mov
ret
or
scas
cmp
roll
inc
iret
andl
push
xlat
aas
xor
mov
lret
sbb
imul
inc
xlat
out
lock
mov
add
int3
mov
fnsave
call
xchg
pop
pop
push
xchg
inc
or
dec
sbb
mov
je
jle
dec
cmpb
dec
pop
loope
imul
jno
imul
jle
and
mov
imul
xchg
out
sbb
mov
test
rol
in
testb
mov
mov
sahf
xor
int
xchg
lods
lock
jl
dec
and
mov
add
jno
cmp
sarb
das
mov
clc
imul
into
aad
aad
js
dec
and
add
insb
movsl
stos
rcrb
aam
xor
dec
or
and
decb
cmp
fsubr
mov
and
shrl
mov
stos
fdivrs
adc
inc
xchg
cmp
int
jbe
jae
fcompl
stos
pop
push
inc
ljmp
jbe
mov
shrb
in
scas
test
jg
push
loopne
lods
add
shrb
inc
rcr
dec
jbe
ret
mov
push
pop
cmpsl
test
frstor
int
lahf
pushf
ljmp
sub
xchg
in
stos
aad
adc
testb
push
lods
out
out
mov
dec
or
sar
mov
push
outsl
imul
push
fdivr
sbb
icebp
sbb
lahf
lods
and
inc
mov
ljmp
gs
shl
push
repnz
insl
jbe
dec
xchg
sbb
es
add
push
les
testl
lret
mov
movsl
in
test
mov
clc
dec
xor
add
out
or
adc
jae
add
repnz
jno
sub
push
sarl
xchg
les
rolb
hlt
or
clc
pop
sbb
xchg
adc
add
or
mov
mov
adc
xchg
sahf
and
cli
setge
daa
aam
nop
cld
adc
stc
pop
adc
ss
jmp
stos
int
iret
or
mov
ret
adc
jmp
jno
int3
in
lods
pop
outsl
pop
call
outsl
mov
ret
out
imul
aaa
mov
pop
das
lret
cmp
and
ja
adc
xchg
mov
loopne
mov
cmp
push
jp
dec
mov
dec
cmpsl
sub
pop
sarl
nop
sub
hlt
shl
dec
xchg
cmpsb
roll
pop
in
push
jge
mov
xchg
sahf
popf
lea
push
cld
loop
movsb
test
les
pop
roll
and
mov
insb
mov
and
sub
dec
push
test
aam
mov
jns
rolb
adc
push
shrl
mov
sub
movsl
jl
sbb
jbe
dec
lret
and
iret
data16
cmpsb
pop
es
or
adc
sub
sarl
inc
mov
jle
test
sub
popf
outsb
mov
pop
pop
adcb
les
out
add
inc
data16
jecxz
sbb
loope
and
jb
in
int
pop
sub
popl
addr16
mov
inc
imul
out
inc
pop
inc
xor
sbb
fucomp
cmp
xor
popa
mov
insl
xchg
and
rorl
mov
pop
aad
adc
xor
repz
popa
adc
pop
mov
inc
mov
xor
sub
and
shrb
mov
test
test
xchg
xchg
and
jle
sbb
and
mov
lret
inc
into
mov
xchg
bound
sbb
test
and
cmp
outsl
movsb
cltd
cmp
xor
sub
jno
or
les
push
xchg
out
repnz
loop
fst
in
jp
sbb
sbb
mov
jae
arpl
jl
and
mov
mov
dec
pop
xor
ds
movsb
jne
push
mov
enter
mov
push
scas
insl
nop
dec
lods
sub
fidivl
jns
adc
popa
cwtl
gs
mov
pushf
dec
cmp
das
cmp
out
cmp
sarl
push
out
pop
dec
inc
fcomi
addr16
icebp
gs
pop
lods
jecxz
mov
inc
fwait
pop
cld
stc
jo
repnz
mov
and
sub
rcrl
pop
inc
int
mov
popa
test
clc
xor
sahf
aaa
in
jl
stos
in
loop
mov
xor
andb
imulb
call
push
xlat
add
cmpsl
push
adc
jbe
inc
pop
sbb
jo
xor
inc
cwtl
jge
jle
bound
or
add
es
sti
scas
in
mov
loopne
cmpsb
les
outsl
negb
jge
lock
loop
and
lahf
fidivs
inc
ljmp
sub
jp
xchg
mov
dec
shrb
test
sbb
push
and
dec
jecxz
jbe
jge
pop
xor
shrb
adc
xor
dec
xor
jbe
sub
and
clc
dec
xor
jnp
stos
dec
or
jg
lods
daa
in
push
clc
mov
in
shr
mov
aas
cmp
sub
mov
push
lods
mov
dec
stc
xor
movsb
repnz
mov
aaa
lock
in
cmpb
xchg
pop
mov
push
or
dec
mov
cmpsl
jnp
in
loop
push
mov
xor
incl
ret
jb
mov
mov
cmc
jp
mov
mul
lret
mov
cmpsl
sub
pop
loop
xor
dec
xchg
popa
imul
ja
pop
cmc
in
mov
ja
adc
sarb
add
sub
inc
pop
fnclex
int
enter
add
cwtl
pop
sub
mov
call
dec
das
test
cmp
fisubl
mov
inc
mov
in
push
xchg
iret
stos
mov
or
xchg
mov
add
int
mov
mov
sti
sub
insl
addr16
lods
and
ss
sti
pop
ss
add
je
in
mov
pop
pop
push
test
jge
dec
cwtl
xchg
fidivs
sub
jae
sarl
stos
sub
fiadds
int3
dec
mov
cwtl
jmp
repz
push
ja
test
xor
or
xlat
aaa
jbe
pop
icebp
popf
xchg
mov
pop
iret
scas
push
rorb
and
jb
je
or
jno
xor
nop
pushf
inc
push
xor
rorb
mov
movsb
and
xchg
cli
mov
js
insb
mov
jae
add
imul
mov
xchg
adc
jecxz
data16
and
xchg
pushf
inc
add
mov
inc
insb
and
pop
cmp
scas
xchg
das
push
cmp
jno
adcl
sbb
cmpsl
testb
aas
lcall
push
mov
lret
andb
jmp
sbb
inc
daa
mov
xchg
lds
adc
or
adc
cmpsb
daa
data16
imul
pusha
pushf
pop
lea
mov
mov
div
push
data16
jge
lea
hlt
pop
push
dec
sub
ret
cmc
test
sbb
push
or
cli
xor
movsl
mull
sti
out
xchg
lods
les
inc
test
mov
into
jno
jl
lods
add
xchg
pop
sbb
xchg
pop
and
sub
mov
xor
mov
sbb
add
xlat
add
call
mov
mov
jae
push
and
cmp
mov
lret
adc
aas
xchg
fwait
and
and
in
loope
xchg
call
out
sub
test
cli
and
fucom
push
jle
mov
mov
or
shl
pop
les
pop
push
mov
rorb
pop
repz
dec
and
add
and
adc
fistl
push
rcl
mov
push
vpsraw
xchg
mov
inc
jb
pop
mov
out
xor
stos
jmp
xchg
popf
cmp
sub
lret
cmp
push
loop
xchg
adc
mov
mov
fs
out
out
xor
add
adc
lcall
sbb
add
pop
in
pushf
inc
repz
rorl
sti
iret
stos
push
push
fidivl
jno
jne
jne
push
add
or
xchg
inc
repnz
sbb
andl
pop
ss
xlat
add
xor
xor
mov
inc
cld
shll
sarb
loopne
int
jo
daa
mov
insl
lds
fmul
inc
xlat
insl
bound
mov
int3
push
xchg
dec
xchg
out
add
push
je,pt
add
pop
roll
test
push
cmp
jg
fs
adc
adc
inc
add
jnp
icebp
int
pop
xchg
or
cmp
rep
mov
into
adc
fnsetpm(287
or
pop
and
stos
jns
cltd
mov
pop
hlt
jb
rclb
mov
popf
push
iret
and
or
fwait
mov
ja
lock
mov
iret
lds
cmp
roll
and
rorl
jmp
loope
test
cmpsb
or
add
std
mov
enter
test
push
inc
addr16
mov
or
test
out
movsb
jno
or
xchg
sahf
xchg
mov
inc
sub
rcrl
xor
out
test
push
repnz
or
xlat
jmp
hlt
aaa
add
pusha
sub
negl
xchg
pop
cwtl
mov
out
push
cli
and
les
sub
cmp
mov
fnstcw
xchg
mov
es
mov
jns
inc
pop
pmaddwd
push
push
fwait
mov
mov
pop
push
pushf
add
xor
inc
push
into
cwtl
pop
test
cvttps2pi
pop
sbb
xchg
jle
inc
mov
xchg
mov
add
xor
and
cwtl
xchg
cli
outsb
or
vpshlq
push
mov
test
stos
cmp
hlt
and
mov
es
gs
ljmp
inc
pop
pop
filds
jbe
pop
dec
scas
push
adc
mul
lret
lds
mov
jl
xchg
mov
sbb
xor
stos
push
cmpsl
push
mov
sub
cmpsl
cmpsl
popa
cmp
test
bound
inc
cmp
jle
mov
rcrb
arpl
dec
xor
jb
xchg
and
fistl
ja
xor
add
fsubrs
stos
mov
mov
mov
addb
pop
ds
pop
scas
xchg
lret
mov
cmp
sbb
push
add
dec
mov
in
fildll
inc
fs
daa
outsb
into
inc
add
add
mov
fcomi
shll
mov
loope
or
ljmp
lods
out
aad
mov
mov
cs
push
push
test
cmp
mov
hlt
in
arpl
imul
and
xor
push
or
and
jmp
call
or
mov
rorb
xchg
pop
and
aaa
pop
jnp
popa
inc
adc
push
dec
cvttps2pi
sbb
imulb
xorl
push
sbb
xchg
push
mov
inc
cmpsb
cwtl
cmp
cmp
rclb
je
jb
fdivr
out
cmp
pushf
adc
or
xchg
test
mov
sub
inc
in
pop
fimuls
jl
and
icebp
ficomps
mov
sub
sbb
in
stos
ss
pusha
sub
rcl
mov
clc
std
pop
nop
jmp
lcall
imull
jbe
mov
jp
and
mov
leave
sub
sbb
out
xchg
je
in
pop
xchg
and
sub
sbb
shlb
call
sarl
js
data16
movsb
and
repnz
mov
mov
in
sar
das
mov
dec
push
test
push
jg
in
sbb
dec
lock
shl
mov
inc
pop
shlb
pop
mov
pop
in
les
sub
mov
dec
out
fs
mov
xchg
push
push
outsb
pop
test
mov
std
add
mov
adcb
push
loop
mov
jo
repnz
push
jae
out
insb
leave
or
fs
js
lods
out
adc
push
stc
and
xorl
xor
add
shrl
and
test
adc
inc
out
sub
adc
outsb
inc
nop
sarl
mov
and
andb
dec
cltd
scas
lret
leave
int3
jns
fisttpl
mov
pop
xor
std
jb
std
stos
and
and
sahf
xadd
lods
mov
lcall
xor
int3
popf
cli
inc
test
dec
push
xchg
inc
bound
ret
adc
or
jnp
inc
push
loope
dec
push
repnz
adcl
push
mov
mov
cmp
dec
xor
mov
imul
cmpsb
xchg
imul
or
leave
addr16
cli
add
roll
fmull
mov
test
jo
mov
bound
out
mov
push
push
mov
test
mov
into
rcrl
ja
in
pop
adc
fcoms
adcb
adc
faddl
or
inc
push
test
jns
arpl
add
jnp
rolb
xchg
mov
xchg
push
leave
and
cs
mulb
push
and
repz
out
cmp
ds
int
sub
cli
add
fsubs
cmpsl
inc
scas
out
aad
pop
jmp
add
loopne
out
enter
popa
cmpsl
int
xchg
sbb
pop
ss
xlat
mov
inc
xor
push
ffree
cmp
inc
orl
adcl
inc
pop
faddp
jl
mov
lahf
stos
add
mov
ljmp
mov
xchg
inc
and
int
stos
xlat
jge
cmpsl
loopne
loopne
pop
mulb
or
xchg
hlt
sarl
jbe
int
mov
pop
aam
call
loopne
xchg
xchg
popa
mov
add
mov
and
icebp
lock
cmp
stc
inc
sub
jnp
push
sub
jge
hlt
push
aas
imul
rolb
sbb
rcrl
out
cwtl
pushf
sub
dec
lea
in
hlt
sbb
pop
and
jmp
fistl
decl
mov
pusha
ja
inc
scas
mov
adc
ret
ja
xchg
jmp
xchg
mov
in
imul
ret
fisubl
loop
cmp
test
lahf
cmpsl
fwait
stos
andl
mov
push
pop
nop
in
mov
mov
mov
sub
pop
lcall
pop
movsl
divb
inc
or
dec
orl
sub
or
fmull
jnp
test
repnz
imul
cli
xchg
lahf
clc
scas
sti
dec
mov
xchg
mov
and
imul
dec
cmp
int
inc
je
mov
and
mov
enter
jbe
enter
arpl
and
sub
out
mov
xchg
or
push
fwait
out
push
fdivrl
stc
out
rclb
cmp
hlt
add
ret
push
sub
mov
scas
push
and
mov
leave
cld
pop
or
jmp
dec
pop
mov
psllw
or
out
sub
push
xchg
dec
mov
loope
jne
push
imul
add
idivl
lcall
repz
bound
nop
call
enter
pop
xor
push
mov
pop
dec
in
movsl
sahf
jb
mov
ficomps
inc
dec
push
loop
mov
mov
sahf
jp
in
add
cmp
cltd
ja
push
dec
dec
ret
je
jl
lret
in
mov
fwait
sahf
add
div
loop
mov
mov
pop
cwtl
cmpsb
sbb
loope
in
mov
test
scas
push
scas
and
jecxz
sbb
aad
dec
xor
js
push
xor
push
jecxz
pushf
ficomps
mov
lahf
inc
cltd
jb
push
loope
test
inc
mov
cmp
in
cli
inc
out
aam
mov
js
jle
leave
test
sub
dec
icebp
outsl
pop
xchg
test
and
loopne
cmp
push
inc
or
inc
into
adc
insl
sub
inc
bound
outsb
std
fildl
cmp
push
mov
iret
jge
rcrb
fstpl
negl
cmp
and
das
jns
or
adc
push
jle,pn
stc
movsl
mov
mov
scas
push
lret
cmp
jae
sbb
std
cmpsb
daa
fisubrs
inc
xor
lods
cwtl
inc
out
inc
mov
clc
mov
in
fiaddl
loopne
adc
les
pop
inc
enter
mov
enter
sbbb
das
in
pop
pop
and
inc
adc
dec
or
pop
rol
xchg
lcall
out
xchg
test
adc
into
pop
daa
mov
bound
add
mov
shlb
mov
js
out
sar
fcompl
scas
mov
pop
jo
stos
leave
stos
sub
dec
fs
adc
mov
jb
fldcw
cld
jge
dec
scas
lods
cmpsl
jb
or
xor
mov
jnp
out
fmuls
fstpl
lods
jp
and
push
lahf
mov
mov
lahf
data16
ljmp
push
mov
xlat
inc
pop
push
test
out
daa
je
repnz
ret
stos
shlb
sub
adc
mov
mov
cmpsb
out
sbb
mov
insb
lods
add
cltd
sahf
adc
and
inc
xchg
cmp
push
bound
sbb
arpl
mov
inc
sub
into
cmp
pop
cwtl
mov
adc
in
bound
in
and
inc
cmpsb
and
jmp
in
push
popf
push
cmp
and
lret
sbb
sub
push
pop
rcrl
pop
pop
and
sub
stos
outsl
stos
mov
pop
adc
test
mov
scas
je
aas
sbb
xchg
sbb
daa
cmp
cmpsb
les
or
rolb
cmpsl
cmpsl
and
pop
mov
inc
out
repnz
or
sbb
sub
mov
xor
push
push
out
roll
xor
xchg
out
dec
and
mov
cmpb
pop
iret
mov
sub
mov
aam
push
mov
leave
push
clc
popa
mov
mov
or
push
je
scas
inc
clc
mov
cltd
sarl
je
xchg
mov
fcoms
aam
subb
xchg
mov
dec
pop
dec
rcr
and
ret
lea
pop
pop
in
cmp
jbe
lret
movsl
sbb
xchg
insl
jle
mov
lods
or
int
out
adc
hlt
aas
add
lret
lahf
inc
sub
jne
ja
mov
ret
sub
or
pushf
add
frstor
in
cmc
into
mov
iret
das
add
sub
movsb
jp
clc
push
add
idivb
push
out
in
pop
mov
adc
push
pop
enter
sbb
add
lahf
mov
xchg
sahf
pop
cltd
pusha
adc
daa
sbb
out
in
pop
bound
enter
xchg
inc
adc
mov
das
enter
fldl
std
xchg
pop
inc
lret
add
push
mov
adc
cmc
addr16
loop
cltd
cmp
es
adc
adc
sbb
sbb
cltd
ljmp
add
mov
inc
mov
movsl
test
jg
push
lret
popf
fstps
lret
or
call
fsubl
xchg
xchg
aam
nop
das
mov
out
stos
dec
cmpsl
and
push
xor
addr16
pop
push
mov
sbb
rclb
stos
movsl
mov
push
inc
cmpsb
dec
in
xchg
gs
sbb
xor
add
ficoml
lret
mov
mov
mulb
xchg
ljmp
rorl
mov
sbb
lods
imul
push
loop
roll
cmp
addr16
loopne
aaa
mov
cmp
jo
push
ret
sbb
fstps
and
mov
insb
ds
jbe
push
and
add
cmp
xor
dec
fcomps
push
mov
sbb
mov
cwtl
outsl
jns
xor
xor
fmull
pop
stos
jb
sbb
stos
and
stos
push
lahf
ds
fidivrs
mov
jae
mov
mov
aaa
scas
xchg
lcall
lret
xor
mov
adc
sub
repnz
and
rcl
ret
mov
lock
cli
sar
push
jo
arpl
std
adc
or
pop
ret
pcmpgtw
mov
xchg
addr16
sbbl
mov
push
sbb
cs
test
inc
jne
jns
imul
mov
inc
rcll
enter
mov
add
out
int3
cmpsl
inc
cmp
mov
pop
lahf
loopne
sub
shll
scas
pushf
int3
xor
xchg
lds
inc
jnp
insl
jbe
cmp
xchg
push
sbb
cli
pop
mov
push
out
xchg
push
inc
icebp
out
xorl
scas
sub
push
jb
xor
ficoms
jns
int3
adc
push
inc
push
es
mov
cmc
mov
mov
cmc
jg
push
aad
push
dec
xchg
sbb
popa
mov
movsl
adc
bound
popf
sbb
xor
aam
xchg
sub
ret
pusha
jl
and
ljmp
jns
mov
sub
mov
ret
inc
and
into
dec
pop
mov
call
ds
test
mov
mov
dec
dec
add
fisubrs
test
sub
mov
shrl
adc
iret
in
movsb
sahf
sbb
pop
mov
enter
xchg
lods
or
outsl
sti
test
rcrb
xchg
dec
xlat
js
popa
push
enter
adcl
jb
out
insl
shr
jnp
inc
movsb
and
dec
xor
je
lock
out
sbb
push
jmp
or
and
ficomps
push
push
adc
sbb
rclb
inc
and
int
lock
test
loop
and
jmp
bound
xchg
inc
add
adc
pop
dec
and
gs
stc
pop
lea
adc
les
lret
and
pop
ja
popf
push
mov
int
icebp
popf
in
mov
es
push
xor
mov
jge
add
enter
out
cmpsl
cmp
outsb
adc
mov
daa
shrb
sub
adc
sahf
loop
jmp
xchg
out
nop
call
inc
jmp
pop
push
in
or
mov
fbstp
jo
test
mov
in
stc
repz
popa
sub
lods
fnstcw
xor
daa
into
fucom
dec
and
movlps
mov
mov
lahf
rcrl
out
orl
add
jp
out
in
ds
cmp
int3
and
aas
or
xchg
xchg
pushf
jl
cld
cmp
mov
gs
mov
inc
push
mulb
dec
fnstcw
out
sub
imul
mov
ljmp
loop
mov
xchg
dec
mov
cs
jbe
pop
cmpsl
sahf
pushf
inc
cmp
roll
sub
xor
lahf
add
int3
dec
adc
adc
dec
outsb
stos
or
and
adc
cmp
sbb
push
aaa
mov
jne
mov
and
in
lret
mov
sti
jb
xchg
mov
loop
cmpsb
sub
adc
inc
pop
imull
push
xchg
fmul
outsb
xlat
test
sub
add
std
mov
pushf
push
inc
mov
hlt
jb
aas
stos
shl
cmpsb
push
call
lret
xor
ret
and
dec
testl
xchg
popf
in
ja
fs
cmpl
clc
mov
lds
cmp
sbb
in
mov
divl
push
xbegin
sti
mov
pushf
mov
shll
push
cwtl
jge
insl
xor
js
stos
pushl
cmp
cmp
cmovs
cmp
pop
fisttps
cs
cmp
xchg
fisttpll
mov
jnp
repz
or
inc
fsubrl
push
je
lret
adc
pusha
out
loop
addl
hlt
dec
ficoms
imul
bound
cltd
lret
scas
loop
ja
sbb
pusha
cmc
addr16
aas
sub
std
rclb
sarl
imul
pop
jb
cli
adc
mov
mov
xor
pusha
sub
xchg
arpl
in
mulb
cmc
and
pop
subl
fnstenv
sbb
push
fisubl
jp
xchg
xor
daa
call
out
xor
fwait
pop
mov
aas
or
and
xor
adcb
lret
addr16
std
cmc
push
mov
in
push
lods
out
popf
mov
insb
nop
inc
testl
negl
lcall
icebp
cwtl
and
cltd
sti
call
inc
fldl
push
or
arpl
shrl
aas
mov
nop
daa
rcrl
repnz
cmp
mov
lret
sub
mov
fildl
xchg
sub
dec
je
hlt
out
cmpsl
cmp
push
inc
fwait
sbbb
xchg
xor
or
sbb
sub
mov
js
mov
pusha
popf
add
mov
cs
bound
inc
pop
decl
pop
sbb
aaa
adc
cmp
xor
adc
cltd
jns
sbb
push
shll
mov
pop
cmpl
inc
pop
xchg
mov
repz
xlat
xor
cmc
rorl
xchg
jno
js
sbb
inc
cltd
dec
and
in
jno
mov
out
mov
jecxz
negl
xor
imul
aas
and
jnp
push
out
test
es
cmp
cwtl
mov
jns
pop
rorl
jecxz
push
lds
out
xchg
mov
push
icebp
out
dec
iret
pop
jb
lahf
sub
inc
mov
jecxz
push
xor
cmp
xchg
nopl
and
dec
cmp
cmp
test
stos
fstpl
mov
jg
negl
movsb
pop
cld
fcoms
jmp
pop
jge
ret
inc
sbb
mov
mov
mov
inc
int3
push
and
and
ret
pop
mov
push
test
stc
mov
jno
mov
xchg
cmpsb
sub
sbb
xor
mov
sub
inc
int
test
mov
ss
imul
xor
ds
lock
int3
outsl
nop
rcr
mov
mov
mov
test
adc
xchg
pop
imul
jbe
test
rcll
dec
jmp
cld
cmpsb
pop
lds
xlat
cmp
scas
add
sub
loop
mov
cld
loopne
mov
push
inc
test
mov
sbb
cmp
dec
add
jmp
cmp
sahf
cli
loopne
sbb
mov
jle
xchg
sub
in
mov
les
unpckhps
jge
jecxz
and
inc
arpl
adc
mov
div
repnz
dec
xor
sub
push
push
fdivrl
call
in
mov
mov
out
jmp
sub
or
mov
xchg
xor
or
push
bound
in
mov
aas
es
mov
push
ja
cltd
fisubs
jl
scas
gs
lea
xor
call
or
mov
and
inc
aam
jl
sahf
sub
mov
push
dec
test
outsb
ret
jo
push
inc
shll
or
cltd
sub
jno
shll
loopne
aaa
dec
les
jns
xlat
pop
idivb
pop
jp
aam
test
outsb
rol
jno
jle
movsl
sbb
xor
testl
mov
lret
add
push
jge
fsubrl
mov
test
inc
mov
pop
pop
mov
fwait
mov
fst
mov
shlb
gs
in
mov
dec
mov
push
pop
mov
xchg
cmp
mov
ret
jecxz
lahf
loopne
rcll
dec
sub
fs
fs
sub
in
pop
mov
addr16
rcr
xor
into
add
pop
or
stos
add
lahf
xchg
cmpb
jb
xchg
lods
aaa
stc
loopne
fldenv
jo
andl
xor
push
jp
rcll
test
inc
lds
icebp
cld
fisubl
incl
jg
nop
rclb
and
or
in
pop
in
push
cmpsl
and
aaa
push
xor
xor
cli
and
adc
ret
popa
or
test
xor
xchg
lods
shl
push
and
lods
sbb
inc
fwait
sbb
and
jae
inc
push
and
outsb
push
sub
pop
shlb
sbb
addb
ret
and
lcall
fwait
xchg
aad
pop
pop
and
stos
imul
adc
je
xorb
mov
into
mov
and
stos
ja
mov
pop
test
and
iret
ja
aas
push
test
and
jns
pop
or
loop
je
xor
xor
dec
add
xchg
lcall
movsl
adc
adc
call
aas
jl
jp
add
jl
adc
mov
xchg
add
or
ds
mov
fdivs
dec
rcrb
enter
cwtl
jnp
xor
or
jns
pop
sub
repnz
push
lock
out
sub
stc
push
or
imull
call
jb
cmp
sbb
dec
mov
leave
mov
repnz
ja
pop
jns
pop
jne
pop
jne
rcr
ds
fildll
imul
mov
shlb
jle
cmp
test
into
out
inc
cld
jp
cmp
jg
test
mov
orl
push
fcomi
loop
sbb
test
xchg
out
aam
mov
addl
pop
xor
jge
pop
imul
push
aaa
mov
ljmp
mov
sarb
sahf
push
mov
insb
inc
add
out
cmpsl
insb
aam
sub
fcomip
adc
dec
add
cmpsb
sub
pop
fdivrp
or
sbb
pop
call
mov
adc
lahf
xchg
int
insl
add
mov
testb
mov
pop
pop
out
mov
and
ret
ficoml
pop
cmc
cmp
divb
in
sti
enter
push
bound
ret
ror
mov
mov
mov
mov
jg
daa
sbb
dec
addl
jne
in
inc
xor
mov
dec
repnz
push
push
out
js
pusha
or
sarl
jns
dec
pop
pop
push
sub
push
sbb
and
mov
ja
sbb
out
lods
ds
adc
int
dec
cmp
jae
mov
jl
pop
jle
inc
leave
dec
inc
add
std
fucom
dec
adc
sub
cmp
imul
adc
add
insb
cltd
xchg
sarb
xchg
dec
mov
aas
cmp
cmp
mov
push
mov
mov
pop
sub
out
cld
pop
xchg
scas
fisttpll
adc
loop
subb
inc
adc
dec
insl
inc
data16
mov
xchg
cmp
lret
add
mov
out
xlat
mov
mov
dec
rol
cmp
fisttps
std
mov
pushf
sbb
sarb
jb
jl
xchg
iret
data16
movsb
std
in
jo
pop
mov
int
test
cmp
sarb
test
sbb
xchg
cmc
inc
sbb
mov
pop
push
mov
pop
jl
lret
or
cmp
js
mov
mov
clc
imul
fdivrl
push
dec
loopne
fpatan
lock
push
sub
dec
test
fimull
and
mov
mov
mov
test
push
out
sub
or
call
cmp
push
in
or
add
cmpl
cmp
inc
jb
inc
mov
arpl
mov
pop
sbb
dec
lods
jae
push
mov
aad
test
dec
push
fimuls
mov
inc
scas
popf
adc
cmp
out
adcb
mov
adc
mov
cmp
sbbb
js
mov
js
pshufw
sbb
and
jmp
pop
in
test
es
outsl
add
fisubl
dec
pop
stc
push
push
or
xchg
push
scas
adc
test
sbb
iret
mov
sub
lods
pop
lock
pop
dec
xchg
jge
pop
fcompl
idivb
mov
cmp
adc
cmp
nop
add
or
iret
je
pop
push
out
push
mov
fcom
pop
or
dec
or
mov
cmp
dec
cmpsl
lods
mov
lea
mov
subb
cs
cmc
nop
movsb
in
jo
xor
push
pop
jecxz
lcall
sbb
aaa
cmp
dec
cmc
or
mov
mov
mov
inc
jl
sahf
inc
lret
push
inc
xchg
call
jne
stc
dec
sub
clc
or
out
gs
in
push
fcomp
pop
jecxz
ret
fcoms
jns
out
push
push
popf
lea
gs
mov
pop
mov
popf
sbb
pop
or
mov
aam
mov
dec
sub
mov
fstpt
dec
sbb
sbb
lret
gs
rorl
pop
std
xorl
sti
ret
loope
call
jge
hlt
and
lods
movsb
cld
mov
dec
rolb
lret
xor
addl
dec
jbe
pusha
pusha
add
fbld
push
andb
lret
sbb
xchg
or
sub
jne
push
mov
shlb
sets
and
push
or
mov
mov
cmp
mov
in
cmp
stos
orl
cmp
scas
inc
loop
fs
push
ljmp
or
cli
jecxz
popl
jmp
adc
adc
xchg
mov
fcompl
repnz
xchg
xor
fsts
pop
int
ret
sbb
or
inc
ljmp
xor
out
sbb
int
repnz
js
mov
imul
sahf
lret
mov
or
pop
pop
push
push
add
popa
in
or
leave
and
and
and
and
lahf
idivl
push
shlb
mov
add
aam
mov
out
push
adc
sub
push
push
out
xor
fnstsw
dec
or
into
sbb
inc
xor
js
push
or
imul
pop
jp
insl
mov
les
adc
or
or
fwait
and
in
xor
or
push
rolb
pop
jmp
pop
dec
movsl
ja
or
xchg
lcall
gs
sbb
pusha
outsb
test
xchg
xor
pushl
xor
movsl
jno
sbb
mov
test
daa
xchg
sub
or
sarb
sub
push
push
out
mov
fidivs
fisubrl
mov
and
mov
mov
xchg
mov
loopne
push
lock
jecxz
scas
popf
xor
mov
gs
cmp
testb
ljmp
int3
popa
push
adc
jle
gs
dec
xor
test
jne
dec
mov
push
jmp
int3
ljmp
lods
inc
lock
push
out
mov
mov
jp
scas
xor
dec
jns
xlat
imul
test
xchg
ret
or
adc
dec
xchg
rcrb
in
jle
sbb
lock
mov
xor
sub
xchg
rorb
loopne
jno
xor
sbb
jns
ljmp
fldt
mov
xor
push
test
and
inc
and
xchg
mov
cmc
cmpsb
jne
gs
xor
cmp
xchg
add
mov
dec
in
inc
mov
aam
mov
mov
push
adc
and
nop
jg
push
mov
add
pop
arpl
add
aaa
out
jns
mov
mov
loope
and
xchg
push
adc
frstor
ljmp
jnp
add
mov
xor
xchg
fldcw
jb
loope
sarb
cltd
psllq
popa
bound
adc
lret
clc
mov
sbb
cmp
dec
in
out
insb
cmpl
loopne
faddp
jo
fs
or
dec
fs
lock
out
sbb
mov
sub
enter
xchg
inc
dec
gs
mov
loopew
les
mov
xchg
outsb
cmp
outsb
and
jae
arpl
xchg
pop
adc
subb
inc
cwtl
repnz
jge
or
les
xchg
mov
out
cli
rcrb
mov
popf
jbe
repnz
and
mov
or
dec
cltd
addb
addr16
movsl
mov
cmpl
movsl
inc
mov
xor
out
int3
mov
movsl
inc
fistl
loop
ds
test
cmovbe
mov
cli
pop
movsb
or
cmc
push
pop
inc
adc
addl
lret
aas
iret
fildl
iret
and
cmp
test
inc
cmp
pushf
les
jle
cld
outsl
pushl
out
and
shlb
cmp
mov
push
sbb
enter
mov
imul
nop
in
inc
fcmovb
sbb
jmp
cmp
imul
jae
or
mov
jo
mov
dec
loop
jl
xor
lods
mov
xor
pop
adc
test
sarb
es
call
popa
jecxz
je
icebp
in
mov
cmp
lods
test
gs
and
sbb
fistps
cmp
xchg
xor
stos
incl
dec
outsb
inc
jg
fcmovne
mov
fcomps
cmp
pop
cmp
mov
jno
cmp
mov
mov
iret
mov
movsb
test
in
les
fs
push
push
addr16
pop
es
lods
ljmp
movsb
lea
mov
inc
insb
pop
dec
or
mov
cmp
out
ljmp
push
stc
xchg
push
rolb
pop
or
adc
in
mov
and
repz
inc
mov
ficoml
jp
lahf
divl
dec
imul
xchg
outsb
repz
xchg
jne
push
and
int3
push
repz
lcall
pop
icebp
fisttpl
sub
iret
lods
imulb
add
insl
icebp
rorb
in
add
int3
xchg
ret
xchg
sub
adc
xchg
pop
mov
pop
fdiv
mov
movsl
fadd
les
push
mov
addr16
push
or
test
push
push
sbb
mov
push
pop
xchg
aam
fcmove
jp
int
jmp
js
je
cmp
popl
push
insl
mov
inc
in
add
mov
jo
into
outsb
aam
mov
pop
dec
or
add
inc
xor
dec
pop
addb
mov
iret
adc
pop
sti
daa
add
xor
movsb
scas
pop
jo
bound
and
pop
xor
stc
cli
push
xor
jns
adc
popf
cli
dec
jle
mov
dec
cli
sub
cmc
les
das
mov
imul
adc
and
inc
pushf
or
sbb
sti
jecxz
or
sub
mov
mov
xlat
out
cltd
insl
scas
mov
lea
imul
call
lock
mov
or
push
or
das
in
push
movnti
sbb
jbe
lock
test
shl
ljmp
lds
addr16
iret
mov
jmp
sahf
mov
push
mov
ds
int
inc
and
jle
mov
out
jg
dec
neg
std
sbb
push
sub
pusha
xchg
pop
or
mov
cmp
shll
mov
ret
in
push
push
add
repnz
in
enter
fidivl
scas
mov
xor
jg
stc
xchg
adc
movl
push
enter
out
test
xor
popa
inc
adc
cmc
cmpsb
xchg
je
aad
mov
bound
mov
test
popa
jns
pop
sahf
xor
popa
jle
incl
mov
jb
or
push
ljmp
insb
push
push
and
adc
les
push
test
dec
std
push
jg
cmp
ljmp
cmp
jnp
xor
xchg
out
dec
mov
adc
es
das
and
int3
inc
lahf
cmp
fldl
xchg
cmp
adc
ja
pop
and
jmp
pop
int3
xchg
xchg
dec
push
out
mov
js
sbb
loope
xchg
sbbl
aaa
lcall
pop
adc
leave
inc
jbe
lock
and
gs
add
jo
pop
dec
adc
dec
mov
pop
mov
mov
lahf
fdivl
pop
movsb
jb
cmp
xor
fnstsw
xchg
sub
pop
sbb
test
push
jecxz
cltd
cmp
call
fcoml
dec
pop
push
inc
lret
icebp
or
dec
daa
imul
xor
pusha
je
cmpsb
sbb
adc
xor
pushf
sahf
mov
mov
out
imul
divl
jbe
cmpsb
out
push
inc
push
mov
roll
inc
push
fnsave
xchg
inc
repnz
iret
cmp
scas
imul
shll
pop
pop
inc
dec
ljmp
lea
arpl
or
mov
dec
xchg
out
cwtl
pushf
adc
fildll
cli
in
fistl
lea
xchg
and
add
fwait
lcall
inc
out
out
shlb
test
or
add
mov
jns
test
mov
insb
or
add
xor
pop
adc
add
dec
adc
adc
loopne
sub
jne
pop
clc
mov
push
je
fistps
daa
outsl
push
cmp
jbe
xchg
testl
inc
bound
enter
push
sti
mov
bound
mov
into
sbbb
lea
add
dec
cs
jge
add
jg
lcall
sub
leave
xor
icebp
adc
sub
or
pop
aaa
fisttpl
xchg
inc
xor
daa
pusha
out
popf
xor
das
lods
sub
data16
jmp
xchg
and
js
jno
jle
dec
incl
lds
adc
fdivl
sub
pop
lods
pop
pop
mov
jo
jmp
testl
inc
pop
movsl
jmp
inc
mov
push
clc
rorl
popf
cmp
or
loope
jne
jmp
nop
dec
cmp
mov
xchg
out
cmp
std
enter
loop
aas
into
adc
icebp
mov
pop
fsts
sar
jo
and
xchg
or
pop
push
xor
fldl
inc
mov
add
adc
dec
cmpsb
xor
push
lret
dec
std
lods
or
and
std
and
xor
xchg
inc
push
mov
cmp
mov
rep
add
pop
pushf
sahf
and
mov
xchg
addl
sub
xor
adc
jo
jns
sub
into
movsl
inc
rol
out
test
cmp
sub
mov
clc
cmc
sub
imul
add
and
sahf
xchg
pop
icebp
nop
lds
fcompp
xor
jp
into
add
or
mov
lret
mov
rolb
das
xor
in
jae
negb
inc
mov
xor
xor
pushf
jae
std
and
or
sbb
fsub
xchg
data16
mov
mov
bound
scas
hlt
jnp
mov
inc
cmp
jmp
mov
adc
or
out
xlat
sub
in
inc
or
das
add
lods
jecxz
sub
mov
js
add
popa
loope
sti
adcl
mov
jecxz
jno
in
fistps
aas
jae
loop
clc
mov
and
or
sti
cs
push
jle
xchg
add
jle
shrl
loopne
push
fs
xchg
cmpsl
pop
jp
lret
xor
mov
aam
idivb
lods
fldl
lahf
test
sub
add
add
adcl
dec
addb
mov
fsubrl
pop
add
xor
insl
in
andb
pop
mov
adc
jo
add
jne
ret
inc
das
pop
inc
rorl
adc
loopne
dec
cmc
jae
inc
add
ss
daa
aaa
lret
enter
jo
xchg
add
jae
pop
pop
fstpl
push
lods
cld
sbb
jb
xor
jbe
fnstsw
test
dec
pop
mov
add
lahf
mov
lods
js
pop
jg
dec
jecxz
fnstsw
xor
rcrl
mov
rcrl
fwait
movsl
jnp
mov
adc
pop
mov
stc
cmp
data16
lds
inc
xchg
push
fisttpll
pop
sahf
xorl
xchg
in
xchg
inc
in
cmpsl
test
cmpsb
dec
mov
cltd
jmp
movsb
pop
stc
push
xor
dec
jmp
movsb
add
addr16
sbb
cmp
std
lret
or
sbb
out
mov
bound
loope
lret
sbb
sub
mov
sub
pop
xchg
or
int
adc
pop
insl
pop
pusha
mov
pop
jbe
adc
push
sbb
jo
pop
mov
rcrb
out
add
mov
sbb
rcrl
insb
out
loope
jmp
pop
enter
sub
mov
cld
iret
jbe
jecxz
stos
jg
adc
mov
ret
jle
adcl
adc
arpl
xorb
ja
or
push
jb
mov
pop
pop
jmp
pop
stos
xabort
in
xchg
add
je
aaa
sbb
test
out
sub
ds
sub
shll
test
lret
call
inc
dec
out
lcall
shrd
xchg
iret
push
sub
push
subl
imulb
adcl
scas
mov
dec
ja
add
mov
mov
cld
or
pop
inc
adc
mov
cmp
outsb
inc
mov
into
loop
pop
sbb
pop
push
xchg
or
adc
jmp
nop
ljmp
sub
hlt
das
out
xchg
jae
lds
leave
pop
push
or
pop
inc
stc
dec
or
mov
scas
scas
add
mov
jbe
jnp
pop
inc
add
jo
push
and
ljmp
mov
add
cmp
lret
add
cltd
out
jns
pop
jmp
pop
lods
sbb
enter
fsubr
dec
bsr
lds
or
addr16
outsl
pop
mov
sub
test
adc
lods
out
in
pop
lds
push
iret
stos
mov
xchg
dec
in
call
adc
loop
out
lcall
mov
nop
jecxz
push
xchg
cwtl
sub
mov
loopne
mov
sti
dec
popa
add
rcr
pusha
inc
pushf
sbbl
imul
int3
xor
lret
add
pushf
das
sbb
jb
pop
inc
xchg
adc
pop
aas
or
cltd
jns
xchg
xchg
pop
cmpsl
lret
xor
push
push
xlat
or
lods
repz
das
cmp
lcall
pop
andb
or
jns
repz
pop
repz
jg
pop
add
mov
mov
test
pop
mov
dec
data16
insb
xchg
and
mov
push
fiaddl
outsb
mov
or
mov
je
sbbb
mov
jge
sbb
ljmp
inc
js,pn
push
inc
push
cmc
xchg
adc
movsl
pop
ret
cmpsb
hlt
ja
pop
and
sbb
leave
fwait
jo
lahf
inc
aas
mov
push
dec
aam
inc
fwait
js
cmc
cwtl
es
sbb
daa
scas
pusha
bnd
dec
cld
or
fdiv
iret
lods
adc
test
cs
pop
jmp
stc
pop
leave
add
mov
in
stc
jb
sahf
or
test
and
out
sub
or
dec
dec
xor
pop
repz
sahf
fstl
cmp
orl
add
jle
decb
inc
jmp
cld
sub
push
ret
test
cmp
jno
test
xor
iret
mov
lahf
fmull
sbb
cld
stos
add
add
mov
jl
push
adc
fidivs
ds
sbb
mov
and
addb
sar
jnp
addb
std
int3
push
ss
mov
inc
pop
xchg
sub
mov
adc
roll
int
out
push
mov
push
fsts
fmul
cmp
js
mov
addr16
sarb
cmp
sbb
sub
hlt
mov
dec
shrl
inc
cwtl
mov
lods
jnp
pushf
xchg
scas
dec
or
es
das
push
adc
std
add
lcall
aam
mov
mov
add
sub
es
fs
inc
outsb
cs
pop
xor
mov
inc
dec
ds
adc
out
jg
fiadds
loopne
xor
in
out
test
mov
dec
and
call
cmpsb
loope
lcall
cmpxchg
adc
shll
mov
add
mov
push
clc
cld
cwtl
mov
adc
es
mov
lods
out
dec
iret
adc
aam
and
fwait
add
out
dec
mov
dec
mov
sbb
stos
out
xchg
sahf
xadd
push
es
adc
mov
pop
jns
lea
fcmovu
aas
mov
pop
pop
mov
in
imul
fimull
sbbl
sbbb
push
out
je
sbb
push
mov
sub
stos
jmp
dec
loop
jns
push
push
sbb
rep
popa
leave
int
mov
add
addb
sbb
mov
test
mov
sbb
stos
sbb
dec
aad
aam
lods
cs
sub
fsubrs
lods
xchg
push
ficoms
dec
icebp
ror
and
les
jnp
sub
popf
dec
shl
popf
push
pusha
jne
sti
call
aas
loope
cmp
in
cli
loopne,pt
mov
pushf
test
pusha
fsubrs
pop
push
push
and
negl
and
pop
lcall
mov
push
pop
lea
sbb
sar
pslld
or
xchg
cld
mov
outsb
pop
clc
push
stos
mov
icebp
xchg
out
cmpsl
inc
jp
jo
sub
mov
jne
inc
cs
ja
mov
daa
lcall
xchg
in
lock
in
nop
add
jmp
inc
aas
icebp
lret
int3
xchg
push
push
mov
fsub
repz
xchg
xadd
mov
lods
into
mov
in
ljmp
lock
aam
mov
mov
dec
mov
adc
call
inc
push
jne
jmp
jnp
jae
mov
dec
rorb
pop
sbb
cmp
pushf
mov
fistpll
subb
jmp
pop
xor
imul
push
sub
sub
xchg
mov
mov
cmc
imul
daa
jne
push
push
hlt
jae
das
sbbl
addb
test
sbb
scas
faddl
lds
pop
test
sub
lods
push
dec
dec
push
sub
lret
pop
xchg
jbe
sbb
sahf
rorb
pushf
nop
cmpsl
fwait
in
pop
pop
jle
push
add
notl
in
and
lods
sti
or
filds
jno
dec
rcrb
bound
mov
fs
pushf
lock
adc
push
es
lret
mov
int3
mov
fmull
sti
dec
leave
xorb
roll
mov
sbb
xor
hlt
test
rcr
stos
mov
sub
pop
jae
inc
dec
addr16
jecxz
movsb
pop
sti
scas
xlat
adc
imul
shrl
xor
scas
pop
es
lock
inc
xchg
rcl
dec
inc
pop
out
out
dec
cmpsl
pop
or
mov
out
cmp
push
movsl
cmp
push
fdivs
sbb
aaa
xchg
inc
bts
jo
test
call
sbb
add
pop
mov
inc
cmc
mov
gs
jg
in
adc
or
add
push
sub
std
jmp
push
rcrl
and
lret
dec
cmp
dec
pop
leave
mov
sbb
mov
push
addr16
add
mov
push
pop
and
aas
xchg
movsl
push
movsl
out
push
push
shll
cmp
stos
cwtl
inc
out
cmp
add
inc
fbstp
adc
jae
mov
mov
dec
sahf
pop
jo
mov
cmp
sub
fwait
pop
aas
pop
inc
repz
das
and
mov
xchg
push
jg
xor
cli
pop
mov
mov
mov
jecxz
jecxz
cld
stc
in
adc
mov
fdivs
push
ja
mov
movsb
mov
xchg
push
jecxz
xor
lahf
pop
test
bnd
mov
in
popf
mov
add
pop
fs
iret
out
mov
add
aad
call
mov
jmp
mov
test
ljmp
fwait
mov
xor
sbb
daa
pop
xchg
outsb
and
rcrl
subl
popf
mov
test
xor
lea
xchg
cmp
repnz
sub
popa
jge
jns
outsl
add
dec
push
into
sti
sub
fsubl
mov
andb
add
inc
dec
xor
out
push
add
invd
cld
std
cs
cmp
nop
mov
rcrl
inc
sbb
push
jecxz
adc
xchg
push
in
mov
mov
jnp
jb
or
adc
add
mov
adc
call
cmp
mov
ja
and
xchg
scas
loope
jmp
and
sub
mov
int
fwait
pop
mov
es
subl
xchg
scas
imul
inc
sbb
movsl
mov
adc
fcoms
mov
icebp
xrelease
and
stos
in
sbbl
sbb
or
into
in
push
setl
sub
dec
test
cmpsl
mov
sbb
sbb
lahf
lods
or
cmpsb
jno
imul
sbb
and
in
imul
or
iret
call
jecxz
jbe
mov
jge
mov
out
ret
cwtl
jo
dec
xchg
adc
push
lret
push
rcl
lret
je
inc
pusha
les
mov
je
je
jge
add
icebp
outsl
out
mov
mov
xor
pop
mov
jle
iret
jge
mov
mov
in
lds
ds
cmpsb
cmp
xor
jle
imul
lcall
lcall
push
fldenv
mov
data16
js
xor
pop
cwtl
fsubrl
push
inc
jae
push
mov
push
dec
and
decb
cmp
fimuls
mov
push
mov
sbb
mov
pop
popa
or
xchg
cwtl
or
or
push
lock
in
jo
xor
mov
mov
int3
dec
xchg
mov
ds
mov
pop
xchg
cmp
xor
shr
xchg
mov
xchg
jae
dec
mov
in
push
ffreep
and
add
xor
jne
lahf
or
pop
bound
stc
insb
mov
imul
mov
pushf
cmp
imul
add
mov
push
cmp
movsb
into
jl
mov
mov
pop
jne
in
push
xchg
sbb
add
inc
out
pop
mov
daa
inc
aaa
push
sub
cmp
mov
ds
cs
xchg
mov
push
mov
into
pop
pop
aad
xor
add
xor
out
cli
jmp
dec
or
cmp
shlb
xlat
xchg
dec
xor
rcrl
dec
aad
sub
pop
dec
cmp
lock
dec
decb
pop
hlt
cmp
je
mov
pop
push
cmp
or
push
fmull
fwait
imul
mov
popf
sbb
xchg
das
sub
cmpsb
pop
nop
push
fstl
stos
sub
jmp
xchg
lcall
scas
add
mov
mov
lret
insl
xchg
mov
xchg
std
sbb
xor
or
or
lods
insb
loope
fmull
stos
loop
in
push
pop
jno
push
mov
fwait
jl
mov
xchg
push
pop
push
int3
mov
cmp
ds
div
cmpsb
push
xchg
xor
mov
cmpsb
xchg
push
mov
adc
lcall
jge
inc
lock
push
add
mov
push
mov
lret
push
es
mov
mov
adc
xor
jb,pt
xchg
js
cmpsl
sub
jmp
mov
lods
push
add
mov
pop
incl
cmp
xchg
and
sti
rcrl
push
imul
dec
pusha
mov
adc
std
cli
insl
imul
in
scas
daa
in
pop
pop
xor
js
dec
hlt
cltd
popa
ret
and
or
test
mov
fistps
xor
scas
mov
jp
lcall
lods
mov
dec
in
push
sbb
test
shll
jne
jns
xlat
add
dec
lock
mov
popf
out
adc
adc
gs
daa
cwtl
pop
mov
imul
cmp
repz
xchg
push
iret
jl
test
pop
loopne
and
lcall
js
adc
outsb
push
inc
loope
insl
and
sbb
out
push
icebp
jb
inc
push
jl
adc
cmp
stc
mov
add
ss
cld
mov
dec
arpl
add
fldcw
leave
bound
prefetch
das
jb
inc
ret
mov
mov
cld
dec
xor
xchg
in
pop
cltd
hlt
fisubrs
scas
loop
mov
lods
mov
push
push
dec
inc
ret
xchg
lret
adc
add
sahf
in
pop
cmp
dec
lods
lods
cmp
dec
jge
pushf
mov
sar
or
sbbl
popa
mov
clc
pop
mov
inc
add
jne
mov
jbe
loope
mov
ja
imul
or
adc
ja
in
xchg
leave
mov
jo
add
jb
cwtl
rcr
out
and
dec
incl
ficoml
sbb
inc
stc
sbb
adc
inc
adc
sub
inc
sti
cmp
iret
fnstenv
mov
test
shrb
cmp
dec
xor
insb
ds
mov
leave
cli
sub
aaa
jl
clc
or
push
jge
xor
and
mov
rcr
into
push
fmul
adc
imul
or
xchg
dec
and
leave
mov
push
mov
inc
cmp
add
xor
repnz
pushf
xor
adc
lods
mov
push
and
cwtl
int
jno
push
inc
jo
lock
push
mov
sub
int3
sahf
aam
test
lret
clc
push
jp
insb
mov
lahf
or
jmp
enter
sub
pop
push
push
iret
lcallw
pop
jbe
cs
lds
lds
inc
mov
clc
jne
orl
stos
adc
dec
mov
imul
adc
stos
jae
and
stos
mov
mov
in
add
fs
mov
mov
and
das
push
mov
push
shlb
fisubl
es
loope
testb
or
inc
sti
gs
ds
push
pop
into
lods
add
mov
push
xchg
or
xor
fdivrp
fsubrp
xchg
sahf
jl
add
ja
rcrl
add
imul
adc
test
scas
int
add
lret
sub
lods
std
outsb
sbb
sbb
cmp
mov
in
or
pop
sbb
cmp
add
pop
dec
faddl
cli
faddp
xchg
and
scas
xchg
shlb
in
pop
in
push
push
cmp
xchg
sbb
cmpsb
or
movsb
and
or
test
js
cmp
cmp
mov
pop
sbb
lods
xchg
idivl
mov
push
jp
dec
ret
into
ret
rcrb
add
mov
push
or
pop
scas
out
fmuls
jnp
mov
jg
xchg
movsl
sub
jae
mov
fbstp
pop
stos
das
mov
daa
mov
add
incl
aas
adc
sub
cli
add
mov
leave
push
testl
test
mov
stc
adc
xor
fisubrl
mov
mov
and
mov
test
je
cmp
pmuludq
je
add
int3
imul
pcmpgtb
aas
data16
inc
dec
sti
jp
cmp
subl
lcall
mov
push
clc
mov
dec
sub
movsb
insl
cltd
adc
sub
cwtl
dec
dec
pop
add
dec
jl
mov
imul
rclb
push
xor
dec
xor
jecxz
cmc
xchg
add
lret
cmc
mov
xor
lock
adc
aaa
and
push
subb
out
or
mov
adc
jecxz
popf
and
pushf
hlt
sbb
mov
hlt
jp
shr
push
push
daa
xlat
mov
pushf
mov
dec
stos
cltd
test
adc
add
pusha
mov
mov
and
add
pop
stc
and
inc
jge
sbb
aam
mov
enter
inc
fistpll
mov
enter
sti
shl
stc
fs
fnsetpm(287
pop
mov
lea
cmp
mov
mov
push
testb
push
cs
push
or
pop
jp
jae
int3
in
mov
xchg
cld
movsb
xchg
push
mov
mov
sbb
mov
pop
and
in
mov
js
inc
icebp
pop
or
fdivrp
push
add
xor
xchg
mov
mov
repnz
popa
loopne
daa
or
add
sub
lret
fsubrl
add
pop
inc
push
out
aad
inc
call
sub
fwait
lods
push
jae
in
jge
repnz
sub
insb
rcrb
jmp
aaa
mov
xchg
sub
cmp
adc
fimuls
enter
shlb
stc
inc
cmpsl
xor
data16
repnz
ja
fistps
sarb
lock
popa
lret
add
or
shlb
pop
xor
push
scas
mov
add
add
dec
ficomps
mov
xchg
movsl
jp
mov
stc
sub
jnp
push
fcoml
loop
mov
rol
cmpsl
mov
xchg
mov
cmp
cmp
sbb
sub
popf
mov
stc
cli
in
mov
inc
mov
pop
mov
frstor
adc
incb
xchg
punpckhbw
cmp
add
cltd
fdivl
rclb
or
xchg
fsubrp
adc
adcl
jns
aaa
sahf
pusha
xchg
and
addr16
xchg
fsubp
sbb
repz
mov
mov
xchg
xchg
inc
push
and
and
jmp
mov
loopne
jo
and
pop
xchg
inc
push
sub
push
lahf
adc
popa
test
in
sub
dec
xchg
xchg
outsl
dec
pop
std
pushf
jno
sti
xor
repnz
push
push
addr16
lods
and
icebp
enter
fcoml
push
sub
xchg
fdivrp
adc
push
cld
jne
fwait
xchg
ss
push
stos
in
xchg
push
pusha
loope
jl
insb
xchg
lret
push
mov
xor
or
xchg
inc
jle
pop
xor
pop
iret
rolb
adc
ja
scas
pop
loop
or
lret
mov
jbe
das
cmp
push
ljmp
dec
mov
xchg
pop
adc
push
adc
sbb
dec
inc
lds
fsub
inc
hlt
roll
mov
test
rorl
push
mov
xchg
adc
adc
lcall
mov
mov
stos
jbe
out
bound
mov
enter
inc
pop
nop
mov
int3
es
add
clc
sub
mov
xor
mov
adc
mov
and
jg
addr16
mov
in
inc
mov
jl
ja
add
imul
inc
cmp
jb
push
int3
incl
lret
icebp
daa
cmp
xor
pop
mov
hlt
sar
cmc
clc
dec
adc
inc
cmp
insl
nop
xor
sub
inc
mov
loopne
mov
cmp
enter
cwtl
xlat
push
mov
jbe
pop
dec
push
mov
add
mov
add
push
sub
inc
aas
sub
mov
loop
les
hlt
ja
jg
push
iret
add
lret
xor
divb
mov
ret
add
sbb
inc
in
mov
stos
fwait
adc
mov
cmpsl
cwtl
adc
sbb
xchg
loop
lret
cmp
iret
dec
popa
sbb
push
ljmp
dec
pop
arpl
les
adc
xchg
sbb
cmp
adc
cmp
data16
cmovbe
add
add
imul
add
sbb
lret
adc
and
stos
sbb
adc
int
mov
cmp
dec
xchg
cmp
clc
in
fdivl
fstl
out
clc
cmpsb
mov
cmp
ja
add
xchg
cwtl
outsl
and
jge
sub
pop
mov
popf
mov
popa
mov
mov
mov
aaa
mov
push
adcb
jnp
jp
pop
and
mov
outsb
xor
cmp
lds
shll
je
jp
pusha
or
popf
mov
outsl
adc
daa
iret
jecxz
jne
roll
sub
sbb
cmc
ja
dec
adc
daa
sti
lret
jecxz
mov
repz
xor
xchg
cwtl
inc
jecxz
or
mov
mov
or
insl
out
push
mov
lock
mov
inc
jge
inc
mov
push
xchg
jecxz
loop
lods
sub
movsb
ss
iret
sahf
xchg
xor
in
gs
stos
out
sarl
push
sub
jo
jnp
les
mov
cwtl
pop
std
push
pop
pop
cli
cmc
push
cmp
cmp
test
ds
or
data16
cwtl
repnz
push
mov
sub
jl
sarb
push
mov
insb
cmpsl
outsl
jno
dec
dec
or
aaa
ror
xchg
jmp
inc
mov
std
cltd
sbb
sbb
mov
daa
test
repz
mov
xlat
jbe
rclb
mov
pop
aam
cwtl
lods
dec
je
jecxz
test
into
cmp
cmp
sbb
xchg
inc
mov
stos
stc
push
call
stos
mov
push
fadds
or
xor
push
das
movsl
pop
sub
stos
outsb
pop
mov
js
lcall
fisubrl
movb
es
enter
sahf
fimuls
pop
mov
in
pop
aaa
jle
mov
loope
xor
ret
js
xchg
dec
ret
jns
out
fidivs
and
jge
cmp
in
pop
insb
fsubrl
movsb
outsl
inc
cmp
jns
int3
loopne
into
inc
lret
shll
xchg
cltd
insl
adc
faddl
aad
test
xchg
out
cmp
data16
sbb
addr16
popa
lds
fwait
mull
jle
jae
pop
xchg
cmp
mov
jecxz
mov
or
jb
and
fst
sub
cmp
sahf
movsb
fdivrs
enter
xchg
mov
adc
scas
mov
loope
and
pop
enter
cmpsl
fbld
test
movl
cmp
mov
add
jbe
sbb
aam
aad
dec
jmp
daa
cmpsb
xchg
dec
sub
inc
and
mov
iret
or
inc
xchg
push
xacquire
push
test
push
jnp
out
in
fs
inc
fisubl
pop
or
in
cmpsb
mov
dec
jne
insl
sub
pop
push
or
es
testb
fwait
sub
inc
mov
push
pop
je
mov
outsl
or
cmpsb
subl
dec
cltd
mov
mov
cmp
mov
repnz
or
mov
daa
fs
push
dec
or
pop
mov
fst
adc
gs
mov
fisttpll
je
xor
xchg
push
adc
nop
jmp
stc
jns
jecxz
or
out
pop
or
mov
lret
jge
fmul
sub
mov
pop
xchg
cmp
dec
js
mov
fsubr
adc
ror
fisubrs
push
roll
in
scas
mov
pop
fsts
fs
cmp
in
cwtl
std
addr16
pop
lds
mov
inc
sti
dec
cltd
inc
es
and
add
notb
das
imul
lods
adc
dec
mov
or
mov
jp
push
or
ljmp
std
lea
test
leave
add
scas
mov
clc
cmp
movsb
add
fiaddl
in
in
xchg
imul
fistpl
mov
js
jle
mov
adc
sbb
ljmp
dec
cmp
repnz
repnz
inc
cmp
xchg
pushf
sbb
int
cmp
das
pop
xor
adc
push
hlt
enter
add
lods
rcrb
ljmp
add
lods
nop
pusha
xor
in
or
nop
loop
jmp
adc
aaa
xchg
xor
xchg
pushf
loopne
data16
adc
mov
lahf
lcall
mov
xor
pop
mov
cmp
test
std
shl
sahf
outsl
xlat
repz
or
or
xor
lcall
cmp
push
jns
test
bound
xor
mov
jmp
mov
call
call
push
jo
in
fwait
or
cmp
sbb
push
sti
dec
jo
sbb
jns
aas
aam
lahf
jb
dec
dec
and
cmpsb
imul
jnp
cmp
pushf
inc
mov
bound
inc
outsb
inc
js
adc
icebp
jae
jmp
xor
fcomip
addr16
push
sub
pop
push
data16
fmull
lcall
into
mov
jmp
jb
aam
xor
dec
rcll
addl
movswl
bound
and
pop
sbb
mov
insl
lds
jnp
pusha
push
mov
fsts
roll
and
and
and
mov
inc
and
pusha
mov
mov
pushf
aad
je
sbb
add
pop
jle
stos
jle
cli
popa
orb
dec
push
lods
sbb
aaa
push
or
enter
inc
cmpl
mov
movsl
js
jle
xlat
into
pusha
ss
inc
or
js
cmp
mov
vpsrld
popf
test
aam
popa
fisubs
aaa
fnstcw
ret
shlb
dec
fwait
xchg
in
pop
in
sub
ffreep
mov
mov
shll
and
or
cmp
mov
frstor
adc
stc
lods
and
inc
or
pop
jg
xchg
push
or
mov
add
sub
fwait
out
icebp
adc
rcpps
lcall
push
mov
es
dec
cwtl
aaa
lods
outsl
frstor
sbb
test
cmp
out
sub
out
lret
inc
jg
and
mov
sub
outsl
lahf
enter
xlat
pop
ret
xchg
stos
outsb
movsl
sub
cmp
mov
mov
add
jge
jle
inc
sub
aam
and
out
negb
cmp
lea
ds
flds
insl
pusha
sub
mov
add
or
pop
jnp
outsl
xor
ss
jbe
push
in
jns
inc
mov
test
xorb
sbb
fiadds
fwait
gs
loope
inc
mov
mov
fcompl
popf
mov
cmp
and
lds
cmp
fwait
jno
pop
es
repnz
fs
pop
fildl
fldt
negb
cmp
int
dec
ds
jbe
pop
int3
xor
mov
push
add
push
mov
loopne
mov
negb
xor
popf
fdivs
loope
adc
popa
xchg
mov
gs
stos
inc
sub
or
js
inc
les
cwtd
push
adc
lret
shrd
cmp
leave
mov
shlb
lahf
mov
imul
sub
aas
xor
lret
loope
dec
hlt
loopne
loop
and
aam
jb
ret
sahf
loope
pop
xchg
push
jb
push
push
sti
jp
sbbl
add
je
cltd
mov
push
pop
inc
ss
jb
das
push
adc
cwtl
mov
mov
adc
pop
sbb
xor
xor
outsb
ja
ljmp
xchg
aaa
jg
mov
ret
shl
andl
int
test
test
dec
cmp
mov
inc
xor
cmc
pop
imul
decb
adc
pop
loop
xchg
pop
pop
mov
fsubl
and
int3
cmp
cmp
mov
mov
mov
cmp
mov
mov
sub
aam
imul
push
dec
scas
push
outsl
int3
fwait
inc
ds
xorw
push
jne
dec
outsl
mov
les
pop
test
les
rol
jnp
ss
gs
out
mov
popf
ja
mov
push
mov
pop
or
or
or
pusha
lret
sub
add
push
test
movsl
fsubs
mov
sbb
shll
fucomip
pusha
or
cmp
mov
notl
adc
mov
lret
popf
mov
sub
fildl
outsl
mov
dec
rep
mov
pop
fstpt
mov
int3
ficompl
fistpll
adc
push
push
je
sbb
xchg
imul
or
jnp
adc
mov
fwait
dec
in
push
scas
mov
repz
push
dec
aam
repz
xor
pop
mov
aaa
ret
add
imul
idivl
inc
cmp
pushf
rol
mov
xor
dec
xorl
scas
sti
outsl
iret
or
pushf
sub
push
mov
or
dec
sub
xlat
pop
and
repz
jb
inc
pushf
shr
mov
pop
xchg
lcall
adc
movsb
adc
pop
xchg
mov
lods
mov
xchg
mov
test
push
inc
movsl
rcl
sbb
sbb
push
fidivs
std
into
arpl
push
test
stc
nop
ljmp
insl
dec
lea
outsb
outsl
lock
jbe
das
mov
lock
adc
cmp
pop
jl
push
aaa
or
xchg
enter
xchg
push
pop
fs
aad
jecxz
addr16
pop
jl
xchg
cmp
push
mov
mov
pushf
mov
notb
rcrl
mov
cmp
inc
add
mov
outsb
in
or
lods
lcall
mov
mov
adc
ljmp
xchg
bound
sub
enter
repnz
sub
cld
pop
pop
scas
imul
loope
outsb
pop
arpl
fbld
lcall
in
dec
aam
mov
insl
dec
cltd
inc
repnz
cmp
dec
xor
jg
mov
pop
subb
inc
inc
mov
mov
rorb
outsb
push
and
cmp
clc
je
push
loopne
aad
scas
repz
stos
jbe
notl
and
in
jbe
mov
push
sbb
test
repnz
sub
jb
out
rcrl
aas
dec
rorl
rcrb
xorb
loope
aam
imul
sub
stos
out
in
sbb
pop
adc
cmp
jns
jg
orl
test
out
push
pop
sbb
int
adc
testl
rep
push
cld
in
paddusw
dec
cmp
or
pop
xchg
mov
shl
xor
add
xor
or
out
cli
mov
jne
ss
mov
pop
push
mov
pop
jle
sub
inc
das
sbb
hlt
jae
xor
jno
push
push
mov
and
xchg
test
and
mov
sub
xchg
push
sub
push
lea
mov
inc
jb
loopne
loope
push
sbb
cwtl
mov
and
adc
mov
lock
push
dec
shrb
cli
sti
push
rorb
mov
fldl
pop
mov
or
mov
scas
insl
push
sub
add
push
sbb
int
sbb
xchg
mov
movsl
mov
xor
outsb
insb
xchg
sahf
adc
dec
jns
comiss
imul
notl
xchg
add
push
out
xchg
add
sbb
sti
cmp
push
idivl
mov
outsb
sti
inc
insl
jnp
add
mov
cld
jb
icebp
cmp
jmp
aad
bound
sbb
cmp
out
mov
add
mov
push
sub
fidivrl
inc
fcmovbe
dec
je
rcr
xchg
mov
out
test
cld
jno
arpl
xor
je
push
in
xchg
pop
mov
ss
js
cmp
sub
add
icebp
mov
add
aaa
lcall
cmp
outsl
jb
jno
in
dec
sub
stos
ljmp
out
inc
daa
pop
xor
rcll
push
iret
mov
cmp
out
lcall
mov
mov
sub
dec
mov
dec
scas
or
insl
push
fidivs
loop
jno
cmp
xchg
mov
ret
iret
push
scas
cs
pop
jne
data16
or
daa
enter
inc
pop
mov
addr16
ss
addb
rcll
nop
insl
pop
push
sub
loop
je
jo
sub
add
cld
mov
push
jno
xor
pop
pause
adc
negb
xchg
rcrb
sub
das
bound
jne
scas
dec
fildl
xor
inc
xchg
push
lea
movsb
leave
push
pushf
fdivrl
divb
lods
pop
push
lret
std
mov
mov
mov
mov
aad
xchg
mov
xorb
xchg
pop
push
rolb
lahf
mov
clc
xchg
add
test
sbb
shl
and
shl
out
sbb
or
sub
out
pop
xchg
test
stc
aam
cld
push
test
xor
sbb
in
test
xor
stos
dec
mov
mov
int3
stc
out
in
scas
loopne
cmp
push
and
jae
repnz
fwait
cmpsl
mov
frstor
pop
divb
leave
mov
out
mov
cmp
pop
xchg
test
mov
adc
dec
jo
dec
push
adc
clc
mov
js
out
lods
adc
pusha
lods
and
ret
mov
dec
dec
sbb
jmp
out
mov
and
sbb
jne
add
adc
sbb
insl
inc
jge
mov
leave
jns
xchg
mov
jle
add
sarl
iret
cwtl
or
add
mov
lods
or
ss
test
pop
push
pop
mov
cmp
lahf
ljmp
mov
js
cmp
dec
xor
mov
add
push
cmc
push
mov
xor
and
int3
out
loope
cmpl
cmc
adc
xor
sbb
roll
jnp
daa
push
aaa
pop
arpl
out
add
adc
push
and
mov
xlat
mov
mov
jmp
mov
jg
fisubrs
adc
push
jae
xchg
test
notb
cli
sub
mov
test
into
jecxz
xlat
jp
and
mov
mov
ljmp
or
inc
push
ljmp
add
jge
dec
pop
add
ja
dec
test
jle
cwtl
dec
xor
pop
aam
sbb
int
push
das
arpl
push
ret
jns
subb
rclb
push
or
clc
pop
push
cmp
lret
es
sbb
inc
loopne
mov
nop
test
in
icebp
mov
jmp
je
xchg
nop
pushf
cld
adc
mov
cmpb
fisttps
cmp
adc
pop
xor
mov
es
nop
iret
cli
xor
push
xchg
std
fbstp
or
ret
pop
xor
in
push
mov
xchg
push
popf
mov
mov
test
ds
test
and
or
dec
and
lock
push
lock
stc
adc
mov
repz
imul
mov
dec
mov
sti
test
sahf
test
adc
in
aaa
jecxz
fcomi
shll
adc
ret
fnsave
es
loop
lods
pop
int3
addl
andb
dec
shlb
outsb
stos
rcll
pop
imul
mov
add
out
cld
dec
mov
jmp
dec
push
adc
push
pusha
int
push
dec
cli
loope
pop
add
ret
cmpsl
sbb
loope
inc
xchg
or
lcall
cli
test
push
test
clc
or
movsb
sbb
and
adc
scas
ds
push
ja
sar
stc
pop
out
xchg
stos
mov
clc
inc
rorl
iret
movl
roll
jae
stos
lret
push
pop
lods
xchg
mov
jle
jle
mov
andl
pop
jnp
aaa
or
out
or
jo
aam
jno
lcall
icebp
fstpt
mov
push
sbb
je
decl
imul
sub
and
and
lds
inc
jmp
gs
out
inc
les
jb
testl
jae
xchg
shlb
out
aam
aam
lds
fwait
psubd
jge
aad
fmul
pop
mov
and
xchg
test
inc
cwtl
insl
mov
das
scas
fidivrs
sub
and
fidivrs
adc
xor
rorb
stos
push
mov
add
cmp
fists
mov
into
cwtl
icebp
push
xor
mov
daa
lods
arpl
loope
sub
cld
xorb
mov
lods
mov
shr
les
jns
call
jns
test
dec
mov
shl
xchg
sub
xlat
loop
test
pop
pop
or
jbe
scas
mov
dec
mov
inc
xchg
pop
xchg
daa
bound
mov
xchg
dec
push
pop
in
aas
inc
adc
xchg
shll
cld
stc
push
sub
daa
dec
pop
addr16
adc
hlt
mov
lea
addr16
subb
xchg
mov
mov
insb
and
lret
xchg
icebp
shlb
mov
rorl
mov
and
addl
mov
call
daa
dec
sbb
arpl
test
pop
cli
insl
test
xorl
jg
mov
adc
std
mov
sbb
adc
std
add
add
mov
push
sahf
xchg
dec
jmp
inc
mov
subb
pop
stos
jae
push
into
and
aam
stos
pop
orb
sbb
or
push
les
adc
flds
repnz
cmpsl
push
in
mov
adc
add
sbbl
pop
sbb
mov
ficoms
jmp
push
push
rorb
leave
and
sub
fwait
and
or
paddq
push
xchg
shl
mov
push
shrb
fstpl
lahf
xchg
and
int
cwtl
dec
mov
lret
scas
add
arpl
idivl
lcall
sarl
iret
pushf
jns
pop
mov
inc
in
mov
mov
push
repnz
and
sahf
jns
movsb
jns
sub
or
push
push
xchg
sub
int3
mov
data16
js
dec
int3
addr16
fildl
cmp
push
lcall
jne
mov
adc
jge
xor
jecxz
fdivr
add
sti
pop
sub
cmpl
mov
add
pop
cmp
jl
ja
out
cmp
rorl
pop
aad
out
into
mov
xchg
push
sahf
std
aam
std
jle
iret
push
test
fdivr
and
fnstenv
xchg
iret
jp
aam
repnz
js
mov
es
mov
shlb
divb
addb
outsl
ret
dec
stos
xor
inc
mov
xchg
mov
leave
jge
sahf
mov
dec
cli
insb
or
sub
xor
enter
sbb
inc
out
lods
add
jl
adc
loop
out
pop
sti
push
jb
fldcw
cmp
pop
or
cmc
cmp
cmp
idivl
cmpsl
xchg
xchg
add
sbb
iret
push
scas
pop
inc
pusha
push
aaa
pop
lea
xchg
dec
bound
xchg
lock
sub
lret
push
sbb
ds
nop
xchg
les
int
and
inc
testb
test
sbb
and
push
push
dec
fisubrl
mov
jge
mov
push
add
adcb
inc
jns
adc
adc
add
xchg
mov
fbld
lcall
fcmovnu
cmpl
aaa
mov
or
pop
aaa
or
jge
andl
pushf
cmp
mov
dec
sbb
out
ds
and
pop
fiaddl
dec
mov
sub
dec
icebp
pop
pop
inc
lcall
xor
inc
mov
leave
lahf
mov
mov
mov
or
sub
enter
ljmp
sub
cmp
mov
mov
into
loop
sub
outsb
mov
push
cmp
cmp
jns
sub
xor
xchg
pop
mov
mov
sbb
leave
ds
xchg
cmp
popf
jbe
leave
add
popf
sbb
cmp
jbe,pn
xchg
add
mov
xchg
in
jp
ljmp
es
fnstsw
outsl
cmp
cltd
inc
cld
mov
mov
movsl
test
cmpsb
bound
call
aad
and
jmp
fistps
clc
cmpsl
push
das
mov
repz
lods
insb
sub
xchg
and
pusha
xchg
ljmp
mov
aaa
xor
out
cwtl
insl
mov
popa
ljmp
mov
call
push
push
daa
mov
jp
rcr
and
sar
mov
insb
sar
sub
push
jge
out
shr
addb
gs
lret
xchg
cmpsl
cs
imul
popa
mov
adc
adc
sub
lods
pop
fbstp
inc
iret
push
std
mov
and
push
aas
mov
or
cmp
pop
xchg
sbbb
ficoms
lea
cmp
push
xchg
pushf
jecxz
or
sbb
sub
xor
cmp
xor
push
mov
and
fiaddl
or
xchg
xor
into
popa
xor
aas
fnstcw
pop
pop
xor
cltd
ljmp
sti
xchg
push
movb
dec
ret
mov
sub
in
lods
add
sbb
mov
ret
enter
stos
stos
imul
sar
test
push
adc
add
and
dec
mov
rorb
lods
ret
dec
dec
and
test
rcr
jle
mov
test
ds
xor
pop
jge
gs
xchg
sub
sbbl
lahf
pop
fcmovnb
cmp
mov
add
push
lods
test
mov
loop
xchg
pop
dec
pusha
sbb
cmpsb
mov
xor
cli
push
mov
fcompl
jecxz
xchg
mov
or
in
loop
fistpll
add
fidivs
pop
pop
les
ds
add
add
or
movsl
mov
inc
sbbb
push
and
aaa
mov
aaa
int3
out
cli
aam
xlat
int3
aaa
cmp
js
je
and
das
dec
notl
aam
jp
fistl
or
fisubrl
mov
orl
dec
aas
cmpsl
vsqrtsd
negl
push
sub
ja
push
loope
adc
mov
push
push
in
out
mov
insb
xchg
fmuls
dec
aaa
xchg
sbbb
xor
ss
sub
add
ret
cld
fs
xchg
jnp
sahf
cld
icebp
ret
dec
pusha
mulb
mov
loopne
dec
push
jnp
dec
psubsw
stos
pop
imul
xchg
repnz
shl
ss
adc
das
adc
jl
cld
loop
imul
add
ljmp
gs
push
leave
std
add
sub
pop
jp
push
rolb
stos
pop
cltd
insb
mov
add
bound
jno
mov
sub
out
out
add
add
insb
popa
pushf
fists
aas
cwtl
mov
imul
sub
dec
jle
fisttpl
inc
push
ret
repnz
shlb
outsl
xchg
je,pt
popf
outsb
pop
gs
in
lock
hlt
data16
adc
call
insb
out
repnz
in
in
mov
ja
xchg
int3
aaa
pop
push
fwait
jg
add
rcll
sub
fnsave
out
cmp
ffreep
mov
adcl
and
test
cld
in
shrl
sbb
dec
or
pop
or
mov
adc
arpl
dec
and
or
outsb
seto
into
ret
jbe
in
xacquire
jb
jae
mov
cmp
and
js
pop
push
clc
lock
mov
mov
adc
shl
cmp
ret
adc
ffree
lods
dec
scas
cwtl
xchg
add
js
or
lahf
ja
mov
mov
inc
and
jle
loop
mov
xchg
xchg
scas
popf
jno
popa
sbb
int3
mov
pop
ljmp
xor
xor
fidivs
pusha
fcom
outsw
sub
xchg
push
movsl
int3
dec
test
shlb
mov
frstor
sbb
pop
gs
push
lock
test
dec
cmp
xor
and
xchg
and
jg
mov
xlat
gs
inc
lds
arpl
mov
jge
mov
test
in
mov
fs
pop
push
jb
in
and
mov
adc
cmpsb
mov
pop
xchg
cmp
dec
cli
xchg
lret
nop
sbb
cltd
ficoms
sub
xor
movb
shl
rcl
pop
insl
repnz
pop
xor
or
or
lahf
xchg
insb
mov
xlat
add
sub
cmpsl
mov
in
adc
jne
lret
push
test
add
das
push
iret
push
inc
cltd
sti
in
outsb
ss
pop
push
xorl
leave
aas
iret
jecxz
push
jle
xchg
and
push
leave
xor
int3
pushf
and
sbb
push
or
add
mov
xor
idivl
insb
incb
lds
xchg
mov
into
jg
test
pop
loopne
adc
sbb
adc
cmp
mov
adc
sti
adc
push
ss
dec
pop
jo
inc
daa
jp
push
js
cld
outsl
popa
adc
dec
push
in
sbb
pop
ficoml
pop
mov
add
xor
lret
sub
and
and
xchg
repz
push
cmc
ficoml
clc
pop
push
fidivs
test
mov
nop
xor
add
inc
stos
pop
cmc
stos
mov
filds
ret
mull
aaa
out
jle
das
cmp
mov
mov
aam
inc
pop
push
ds
arpl
divl
mov
cmc
int3
movsl
mov
xor
adc
dec
scas
jp
das
jle
imul
jne
mov
ret
xlat
or
fimull
ds
cmc
mov
push
mov
imul
in
repz
adc
fidivrl
jl,pt
in
mov
cmc
into
xlat
lahf
repnz
xchg
andl
ljmp
pop
fsubrs
nop
sahf
or
rcrb
push
repz
out
scas
inc
pop
fsubs
mov
icebp
lretw
loopne
mov
mov
add
or
outsb
mov
out
pop
jne
addr16
xchg
les
lea
scas
nop
jae
add
int
pop
and
mov
mov
adc
add
insb
adc
push
test
adc
mov
nop
push
xchg
scas
mov
in
jnp
xchg
dec
mov
or
or
cli
test
in
pop
or
in
and
pop
cmpsb
pop
mov
notb
mov
sbb
adc
mov
sub
mov
lea
inc
xchg
mov
lret
incl
xor
mov
mov
jmp
inc
sub
repnz
cli
push
mov
mov
and
out
cli
cmp
mov
cwtl
pop
and
stos
outsb
sbb
mov
rclb
out
pop
in
inc
dec
xchg
je
adc
fdivrl
jmp
or
insb
mov
insl
movl
movsb
mov
movsl
fstps
dec
ja
lods
jmp
fnstsw
cmc
pushw
jle
mov
sbb
je
iret
icebp
les
addr16
inc
inc
mov
or
std
push
jo
pusha
or
in
sbb
jo
arpl
sub
int3
ror
adcb
or
dec
or
je
divb
test
xchg
roll
cmp
cmp
leave
jge
movsl
scas
mov
inc
jmp
mov
jecxz
xor
xchg
dec
jo
adc
popa
cmpsl
push
cmp
mov
inc
or
lret
test
ficoms
mov
lret
js
aam
arpl
xchg
cmp
and
lret
adc
dec
xor
shll
fnstsw
and
pop
cmc
jne
or
lea
mov
inc
sbb
mov
mov
stos
sub
xchg
pop
cmc
andb
mov
pushf
js
cwtl
out
iret
or
cli
out
or
mov
idivl
or
jo
mov
fistpll
fistps
jnp
cmp
pop
push
insb
loop
filds
cld
sub
insb
xor
mov
pusha
testl
subb
fdivl
shll
popf
xchg
shlb
pop
test
popa
leave
mov
xchg
cmp
mov
out
adc
ret
lret
sub
pop
rorb
sbb
pop
lahf
pusha
jnp
add
cmp
enter
cmp
daa
sbb
inc
add
pusha
jo
cmp
inc
inc
ds
shlb
addr16
shr
cli
in
push
outsb
xor
out
lret
jb
mov
scas
sub
ret
aam
push
into
mov
xchg
fucomi
pusha
int
movsl
outsl
adc
mov
cmp
pop
or
les
lahf
and
hlt
xchg
pusha
push
cli
scas
out
add
fcmovnu
mov
cmpsl
mov
arpl
adc
lahf
mov
fdivl
inc
ljmp
adc
push
lret
cltd
jecxz
scas
jb
lods
mov
roll
push
ljmp
cmc
adc
mov
sub
cwtl
mov
inc
add
jle
and
dec
cmp
jb
jecxz
call
lock
push
in
jno
or
push
mov
int
and
out
ja
push
push
add
add
add
push
dec
pusha
push
stc
mov
push
out
inc
sbb
and
push
insl
xlat
inc
cmc
enter
sbb
ret
outsl
mov
in
lods
shrb
sub
ficompl
iret
push
int3
xlat
clc
ds
and
cmp
test
notl
push
pop
aas
sub
mov
dec
lods
sub
push
mov
jp,pt
jecxz
jnp
fwait
jo
ljmp
add
add
xchg
out
orl
mov
sti
pop
ds
lea
les
das
aaa
fidivrs
fwait
arpl
bound
shll
stos
dec
cmp
cmpsb
out
jg
shr
inc
negl
stc
aas
add
and
movsl
lret
mov
push
xchg
repnz
xchg
fimull
mov
ret
fisubs
gs
xor
sarl
add
jg
movsb
les
out
test
out
popl
mov
sahf
mov
fidivl
dec
pop
inc
js
rclb
pop
sub
add
lods
add
xor
push
or
in
sub
sub
fdiv
mov
pop
mov
pop
test
test
cwtl
fadds
dec
fwait
imul
leave
mov
add
sbb
xchg
les
xchg
scas
mov
ja
es
ret
cmp
sahf
popa
add
int3
cld
and
or
dec
bound
or
sub
daa
adc
push
test
cmp
xor
jg
dec
fistps
xlat
sahf
pop
inc
xor
insb
ret
push
lock
mov
aas
sbb
xchg
lods
inc
mov
aam
push
or
mov
aad
lds
leave
fisttpl
not
in
sbb
add
stos
jg
add
mov
dec
sbb
ret
stos
mov
loop
dec
mov
fs
fs
lods
and
sbb
pop
mov
pop
add
popa
pop
ret
lret
ffreep
pop
movsl
dec
sub
and
mov
and
mov
xor
inc
sub
push
and
scas
pop
xor
and
mov
roll
lds
lock
insl
fs
leave
sub
dec
or
adcl
int3
mov
mov
xchg
pop
popa
sbb
sbb
mov
subl
and
insl
in
and
repz
xchg
and
mov
movsb
xor
adc
cltd
ss
andb
add
dec
insb
adc
popa
and
push
sbb
pop
std
addr16
fcmovnb
jle
add
add
es
lret
pusha
or
and
lahf
adc
out
insl
cli
add
leave
jge
pop
dec
inc
scas
adc
push
fnstcw
fdivrs
mov
cs
cmp
mov
enter
insb
pusha
pop
cltd
sahf
in
push
lahf
push
and
andb
inc
fstl
adc
lock
out
scas
cli
cmc
mov
das
push
sbb
or
mov
adc
insb
jnp
repz
xchg
jne
xchg
xor
lods
repz
mov
cmpb
dec
jbe
rclb
ret
mov
jle
cmp
push
and
mov
aad
adc
sub
fiadds
mov
popf
addb
pop
sub
jb
jo
orb
nop
movsb
cmova
cmpsl
or
sbb
jno
adc
pop
das
aam
jle
push
mov
fsub
insl
mov
mov
rolb
xchg
push
imul
repnz
aas
add
cmpl
mov
xchg
or
adc
into
mov
pop
jae
sbb
or
lock
outsl
test
pusha
pop
lret
and
lretw
inc
fwait
fs
sbb
jb
mov
ja
push
jbe
jmp
jns
pushf
stc
mov
mov
das
iret
ret
das
mov
icebp
mov
adc
cmc
xorb
insl
or
and
shll
pop
in
mov
scas
scas
in
cld
xlat
test
insl
ja
or
add
scas
mov
jl
sub
fistpll
adc
fdivs
adc
and
lods
push
pop
pop
xchg
or
ss
lcall
cltd
fldenv
pop
sbb
test
negb
add
mov
inc
mov
or
mov
mov
dec
cmp
or
mov
sbb
sub
xor
jb
mov
push
mov
mov
mov
sub
imul
dec
and
ss
outsl
andb
shlb
cmp
push
jae
cmpsl
sbb
mov
adc
cld
call
movsb
out
mov
lea
in
pop
ret
mov
popf
mov
jmp
pushf
inc
sbb
jp
out
xor
fidivs
sub
lcall
mov
pmovmskb
loope
popa
divl
aaa
pop
stc
mov
cmc
push
xchg
lock
add
mov
xchg
adc
xchg
int3
pop
cmp
push
in
jae
hlt
adc
cmp
mov
jecxz
pushf
mov
xchg
div
cmpsl
push
dec
clc
loopne
jns
and
ja
push
cs
int
push
add
xchg
mov
cltd
enter
mov
pop
xchg
push
add
in
nop
shl
cmc
mov
repnz
arpl
mov
sbbl
mov
imul
jo
push
push
push
daa
sub
std
dec
ja
pop
lods
xchg
add
or
jle
andb
dec
lds
filds
dec
in
js
sub
add
clc
pop
test
mov
cmc
imul
bound
decl
mov
xchg
sti
call
or
iret
int
test
adc
loopne
int
fadd
sub
lret
std
in
test
sbb
je
or
xchg
aam
xchg
jne
popf
lcall
out
mov
or
pop
rcll
aas
sub
ds
es
mov
dec
mov
xchg
call
sbb
and
sub
mov
mov
xchg
mov
pushf
mov
rolb
mov
jge
andl
adc
jns
cmpsb
or
or
sbb
sbb
cmp
adc
mov
and
sbb
pop
sub
daa
cmp
push
in
pop
push
mov
cmpsb
mov
jecxz
hlt
dec
test
add
lock
imul
adc
popf
xor
call
lock
das
sub
cmp
hlt
ret
add
xchg
maskmovq
negl
jb
add
sub
adc
cmpsl
xchg
ljmp
or
adc
jns
loop
cmp
jno
jns
sbb
sti
pop
cmpsl
push
xor
push
xchg
sub
mov
nop
sub
rolb
stos
adc
rcll
and
ret
mov
pop
push
andl
inc
inc
iret
or
sub
iret
lcall
ret
les
pop
scas
ret
out
push
bound
jmp
and
mov
out
gs
aaa
cmp
xlat
clc
cmp
loopne
iret
jle
sbb
cs
and
ffree
popfw
inc
sub
test
dec
sbb
outsl
sub
aaa
popa
sbbb
jl
mov
dec
data16
add
les
fcomps
sbb
push
pop
cmpsl
mov
mov
inc
cltd
cs
fldcw
sub
pop
cmp
and
adc
inc
mov
xlat
das
sub
push
mov
cltd
sbb
or
aaa
inc
cmp
test
test
jp
sbb
cmp
int
mov
repnz
cmp
sub
outsl
cwtl
and
out
shl
fisttps
xchg
sbb
mov
mov
add
out
int3
jo
and
outsl
scas
add
sti
daa
push
js
aaa
es
movsb
movsb
lret
in
dec
fbstp
mov
shl
mov
fs
pop
jecxz
mov
push
mov
sbb
jp
adc
ficoml
jnp
mov
pop
mov
sbb
pop
mov
cmc
call
pop
mov
les
mov
inc
mov
and
push
popf
int
pop
jle
xor
jne
mov
lahf
or
push
and
xor
jge
push
cli
lahf
inc
push
mov
sub
in
xchg
add
pop
mov
lds
add
mov
movsb
mov
jge
les
andl
xchg
das
inc
movsb
pop
int
dec
xchg
fimull
push
xor
pop
push
in
adc
movsb
stc
xchg
xor
inc
lock
je
movsb
mov
inc
fsts
hlt
mov
push
jbe
xor
rcr
out
out
jmp
cmc
in
fdivl
xor
bnd
mov
aad
push
test
fdivp
loopne
cli
jns
pop
out
mov
jmp
mov
in
jb
aam
and
leave
sub
cld
adc
call
push
and
stos
cmpsl
mov
les
jmp
pop
cwtl
loopne
leave
int3
addr16
ficoml
fistpl
sub
in
add
test
add
mov
je
sar
sub
xor
push
popa
add
sub
popf
pusha
inc
cmp
setnp
push
js
xchg
pop
int
int3
jb
pop
aam
push
lcall
int3
mov
scas
jmp
or
push
frstor
lods
push
cmpl
and
pop
inc
cld
mov
sub
pop
gs
lea
sbb
jne
in
lcall
mov
mov
std
push
nop
pusha
popa
pusha
pop
leave
sbb
pop
call
inc
and
xor
loope
std
cld
or
stos
mov
loope
cld
pop
xchg
ja
inc
and
repnz
sti
mov
cli
cmp
xor
popf
and
mov
and
push
mov
fidivrl
popa
rcll
into
lds
clc
xor
jle
mov
arpl
leave
cmpb
xchg
call
ret
lds
or
sbb
bound
sbb
aaa
repnz
push
out
lret
xchg
or
repz
aad
out
mov
xchg
shll
icebp
or
fisttpll
push
dec
jae
mov
insb
test
fstpt
addr16
out
pop
push
mov
sbb
push
sahf
pushf
mov
or
mov
lea
icebp
mov
sahf
adc
mov
out
mov
inc
outsb
sub
fimull
jl
fdivs
mov
mov
or
pusha
sbb
andl
lret
cmp
mov
pop
adc
inc
popf
mov
mov
sbb
jo
pop
dec
adc
ret
xchg
or
out
fucom
xchg
in
sub
test
push
icebp
xor
stc
push
dec
inc
pushf
pop
or
dec
cmp
in
jo
aam
cmpsl
cmp
cmp
cmp
xlat
cs
sbb
sub
mov
add
imull
jno
add
adc
sub
mov
repz
push
aas
data16
mov
sbb
xchg
inc
cmp
mov
outsb
mov
lea
xchg
or
es
and
pushf
test
mov
mov
lcall
dec
out
push
scas
fisubl
sub
mov
sub
fsubrs
outsl
dec
or
cmpsl
lret
aad
aam
adc
popf
xchg
xor
cmp
jno
jns
cmp
mov
shrb
into
in
and
inc
testb
adc
or
pushf
push
xchg
cmp
aam
mov
lods
movsl
cmpsl
test
inc
loopne
sbb
mov
sti
cld
in
and
xchg
call
or
mov
ss
mov
mov
out
cmp
shl
mov
mov
out
pop
jnp
out
xchg
fs
lret
add
xor
xor
repnz
mov
mov
jg
jle
outsb
cs
sbb
or
test
in
popf
in
pop
inc
daa
mov
dec
movsb
dec
pop
addr16
mov
in
dec
mov
add
pushf
push
cmp
pop
repz
pushf
nop
pop
daa
ret
push
xchg
sbbl
ja
mov
addl
mov
scas
dec
icebp
inc
call
xchg
jge
push
push
jae
or
pop
rolb
sti
cld
mov
cs
in
sub
add
xchg
adc
and
mov
pop
out
out
inc
add
xchg
mov
and
lcall
cld
pop
inc
add
in
push
lea
sub
sbb
lods
sarb
mov
std
push
aad
loop
mov
sub
push
leave
push
adc
in
js
movsl
or
push
sbb
leave
cmp
dec
scas
add
jmp
fidivrs
frstor
jmp
sti
mov
lcall
mov
cmp
jbe
out
sbb
js
int3
cmp
xchg
or
cmp
repnz
add
stos
and
xor
or
loope
pop
scas
hlt
dec
fcoms
sahf
test
adc
mov
pop
je
jb
dec
pushf
add
inc
pushl
mov
xchg
xchg
pop
fs
lea
jb
movsl
mov
pop
fdivrs
adc
mov
mov
mov
pusha
in
jae
or
adc
pop
pop
inc
stos
test
in
mov
ret
fstpl
dec
popa
dec
mov
mov
pop
lret
lret
sub
dec
rorb
push
imul
mov
and
jno
aad
icebp
sbb
rcl
mov
sub
notl
inc
xchg
adc
leave
pop
das
mov
mov
xchg
aad
stc
mov
sahf
push
into
pusha
jns
mov
xchg
fwait
and
and
ficompl
sub
adc
out
test
xor
fimuls
shrb
add
mov
repz
push
dec
sahf
dec
jb
mov
je,pt
cmp
and
nop
cmp
mov
mov
push
adc
or
lock
movsl
std
inc
mov
ljmp
mov
jl
bound
out
sub
shlb
fcomps
mov
xchg
cwtl
aam
mov
cmc
mov
adc
fcomip
jp
pop
xlat
subb
jecxz
addr16
sbb
jmp
xchg
xor
xchg
cmp
jmp
add
push
fs
add
mov
mov
inc
daa
and
in
pop
hlt
aam
push
cmp
xlat
pop
xorl
daa
pop
mov
mov
idivl
inc
sarl
aaa
fldcw
fst
dec
mov
push
push
or
dec
xor
and
jnp
addr16
ret
sbb
jo
mov
xchg
pop
inc
loopne
fisubl
xor
and
sub
cmp
rcr
je
data16
iret
jge
xor
inc
mov
sub
xchg
mov
jo
mov
loopne
mov
out
in
cs
mov
sbb
sub
xchg
daa
sub
ret
test
dec
insl
test
int
movb
ret
mov
lods
jb
inc
imul
lods
sbb
push
and
aas
xor
cmpsb
or
mov
popa
sub
daa
inc
push
cmp
rorl
adc
sbb
inc
xchg
sbbb
mov
dec
dec
aam
lcall
loope
lods
in
mov
mov
fs
jmp
scas
popa
es
in
lahf
sub
adc
loopne
sbb
mov
add
test
push
push
mov
lock
gs
fstpt
es
int3
push
and
ss
or
sub
lods
sub
push
and
loope
aaa
lcall
pop
mov
sub
lahf
int
sar
out
fbld
sub
push
mov
cmp
push
int
sti
test
sbb
xlat
jmp
mov
jo
in
inc
mov
stos
addr16
andl
push
inc
dec
loope
fistpll
ljmp
fcmovu
pop
cmp
sbb
xchg
movsb
add
push
pop
dec
pop
and
test
fstp
push
push
or
ja
push
adc
adc
mov
cmc
fsubrs
lret
fisubrl
pop
and
cmc
jp
fldenv
out
sbb
mov
lods
daa
sub
lea
mov
sahf
add
adc
enter
xchg
frstor
scas
ret
fmul
and
jo
or
insl
incb
jle
rolb
lahf
inc
jp
movsb
ret
push
jb
ja
and
mov
and
dec
inc
int
andl
push
push
pushf
xchg
push
dec
cmp
sbb
daa
sub
mov
imul
popa
jecxz
insl
mov
fsubs
jle
xor
mov
icebp
sub
xlat
cld
mov
cltd
rorb
push
push
adc
jmp
lret
scas
imul
xchg
mov
fdivrl
cmpsl
call
fmull
pop
jne
adc
mov
mov
pop
out
mov
mov
cs
dec
jnp
jo
rcr
inc
rcrl
sbb
jnp
cmp
push
cmp
lods
lcall
mov
push
push
sbb
test
bound
pop
xchg
andl
mov
in
mov
pop
ficompl
jo
cli
add
mov
dec
icebp
push
mov
pop
push
mov
adc
repz
int
repnz
test
sbb
xchg
mov
add
aam
mov
adc
lea
hlt
imul
mov
mov
pushf
lds
test
fistpll
pop
mov
fldcw
or
mov
loopne
ljmp
or
mov
outsl
add
call
je
ror
aas
jnp
ds
inc
orb
popa
cltd
mov
mov
mov
mov
xor
push
xchg
mov
into
push
fmull
push
aas
dec
push
bound
add
pop
mov
sub
push
lret
insb
insb
sub
scas
es
inc
dec
insl
pop
jg
sarl
data16
sbb
dec
and
sbb
cmpxchg
ret
pop
outsb
push
add
mov
shlb
loopew
repnz
pop
pop
cltd
adc
aaa
mov
sarl
ret
pusha
adc
arpl
cmp
mov
inc
mov
hlt
pop
scas
gs
inc
sahf
inc
pop
ret
xor
fistps
pop
sbb
and
mov
and
jmp
inc
xchg
cli
shrb
mov
inc
mov
dec
lods
jle
notl
aam
sbb
into
push
and
inc
and
in
adc
jae
cmp
es
cmp
rcrl
jo
add
icebp
or
shll
daa
mov
mov
pop
stc
js
ret
xor
out
popf
inc
mov
sub
sub
and
les
es
dec
dec
mov
push
addr16
in
daa
push
mov
mov
push
movsb
pusha
ja
push
cltd
and
and
sbb
mov
mov
push
gs
push
mov
adc
mov
dec
and
in
push
or
insl
pop
jp
lret
mov
and
dec
cmp
movsb
sub
andl
sbb
cmp
inc
idivb
in
sub
test
fildl
sbb
dec
aad
push
mov
push
imul
incb
fidivs
and
add
pop
or
jl
pop
xor
and
xchg
pop
mov
lock
cmc
cmpsb
mov
stos
ret
test
jge
cmc
and
mov
test
sarb
push
mov
cltd
aas
cwtl
adc
ljmp
cmp
dec
loopne
loopne
pushf
in
xchg
arpl
pop
aad
icebp
adc
loope
lds
jmp
lea
add
dec
arpl
mov
imul
jb
mov
dec
fsubs
add
out
out
iret
inc
add
mov
stos
enter
and
and
mov
xor
or
mov
sarb
leave
test
dec
push
fwait
adc
sbb
dec
in
xor
cmp
lret
sub
mov
push
pop
out
orl
mov
or
push
rcl
repz
push
and
clc
push
mov
fisubrs
inc
mov
inc
jae
cmp
lahf
popl
xchg
popa
sbbb
sub
and
or
pushf
addl
fistpl
ss
inc
push
aaa
cmc
aas
js
lock
push
clc
add
and
xchg
pop
jl
out
or
sbb
adc
imul
jae
adc
aaa
jns
mov
push
mov
shlb
leave
xchg
xor
fldenv
fisubs
scas
shll
and
movsl
or
xor
jne
dec
inc
add
ds
outsb
lret
jecxz
mov
xor
pop
adc
sbb
or
sarl
pop
repnz
adc
decb
add
ds
cmp
in
dec
cwtl
cmc
movsl
xchg
xchg
mov
jmp
neg
push
test
xlat
lcall
adc
das
add
movl
inc
mov
rorb
ja
shr
add
sbb
pop
dec
mov
aad
fbstp
cmp
add
cs
clc
sub
fcmovb
pop
cmp
sub
lods
jp
es
dec
sub
int3
mov
pop
imul
fisubrs
out
pop
push
test
dec
push
scas
adc
pusha
shrb
jmp
aad
or
sbb
jmp
sbb
push
loop
or
aaa
jmp
mov
and
add
xor
aaa
pop
call
lcall
leave
inc
imul
insl
or
jg
imul
mov
rcr
loop
jne
sub
lahf
pop
adc
or
jbe
mov
jl
dec
and
and
and
mov
mov
repz
adc
xchg
aaa
mov
dec
out
mov
fs
cmpsl
cmp
mov
mov
ret
test
rcll
stos
add
sbb
fcoms
in
adc
test
push
dec
call
in
ret
xchg
shl
subl
add
divl
ret
dec
movsb
sub
daa
push
rol
data16
cs
sub
inc
mov
mov
adc
jge
das
pop
nop
insb
cmp
nop
lret
mov
cli
ret
pop
mov
clc
addl
sub
fisubrl
adcl
mov
loope
xor
icebp
jg
mov
cmp
push
xor
adcl
push
dec
sbb
popf
cmp
cltd
addr16
mov
sahf
or
test
mov
adc
scas
xchg
sbb
inc
jecxz
es
shll
das
jo
pop
xor
cmp
std
out
call
mov
cmp
add
ja
lds
sub
ret
ja
orb
outsb
adc
dec
adc
cmp
test
dec
loopne
mov
xchg
cld
pop
mov
xor
sbb
mov
mov
jl
dec
mov
repz
movl
mov
shlb
adc
xor
pop
addr16
pusha
xchg
and
push
cmc
xchg
dec
push
mov
xchg
mov
dec
adc
mov
sbb
sti
subl
pushf
lods
fistpll
pop
flds
fadd
loopne
aaa
clc
pusha
into
and
ret
out
fimuls
xchg
in
lock
dec
lods
fdivs
push
cli
adc
lock
xchg
ss
pop
cwtl
shl
into
fldt
jo
mov
test
mov
or
adc
pop
outsl
inc
mov
test
insl
cs
or
shlb
xchg
mov
idiv
leave
in
push
rclb
scas
mov
test
push
add
in
aad
mov
fisubrs
sub
packssdw
cvtps2pd
xor
sbb
and
jg
push
mov
addr16
insb
in
mov
arpl
data16
shrl
xchg
lahf
add
call
and
jb
inc
stos
and
fimuls
or
repnz
test
mov
dec
shlb
sub
lea
cs
arpl
dec
insl
mul
hlt
push
adc
or
dec
mov
pop
inc
mov
xchg
pop
dec
sbb
push
ja
dec
sti
dec
dec
dec
cmpsl
popf
xlat
push
movb
fcoml
mov
repnz
pop
inc
pop
add
sbb
or
cmpsb
xchg
inc
bnd
or
fcmove
pop
xchg
ja
sbb
add
shll
jp
sub
pop
imull
jbe
rol
mov
test
aaa
pop
jno
cmp
fbld
fbld
enter
jmp
inc
or
sub
pop
sete
jb
ss
rolb
jo
outsl
testl
dec
mov
add
xchg
in
out
in
sub
pop
lods
dec
movsl
inc
adc
mov
jns
pop
inc
in
xchg
mov
dec
int3
push
cmp
clc
mov
jnp
loope
jg
scas
stos
xor
stos
cmp
ret
or
lret
jns
lret
stos
inc
dec
rol
mov
mov
mov
outsb
test
cmp
in
xchg
pop
sub
jns
cs
xchg
arpl
aas
or
inc
rcll
xlat
xchg
adc
jae
inc
shll
jge
fcomps
negl
jl
add
jl
or
je
fcmovbe
sbb
loop
or
popa
repnz
dec
adc
mov
testl
sub
cmp
and
call
stos
adc
jp
movl
adc
jne
push
mov
mov
adc
daa
sub
xchg
outsb
test
fimuls
inc
mov
dec
aad
pop
lods
adc
sbb
or
mov
dec
aam
scas
pop
ficompl
jbe
inc
xor
mov
xor
arpl
cmpsb
xor
out
bound
xchg
add
cmp
cmp
and
jnp
cmpsl
mov
sub
fs
repz
jmp
mov
daa
push
nop
sub
dec
pop
nop
jne
sub
adc
dec
inc
and
scas
push
adc
cmpsl
clc
add
popf
lods
orb
or
gs
gs
cld
mov
je
jb
clc
sbb
xchg
mov
jne
rolb
push
popa
adc
enter
pusha
iret
xor
rcrb
arpl
or
in
rcr
lds
pop
adc
pop
fdivl
daa
lods
pop
or
arpl
sub
mov
aam
clc
xor
arpl
mov
xlat
gs
push
mov
shrl
aaa
cmp
sub
push
mov
dec
mov
pop
and
jl
cld
cli
sub
sti
es
mov
repnz
fadds
mov
aas
dec
xor
pop
inc
cltd
lock
cmpsl
inc
les
jge
dec
test
mov
push
hlt
pop
push
mov
subl
iret
jo
aad
shrb
dec
insb
xchg
test
xor
sub
lret
pop
sub
cmpsl
movsb
sub
movsb
mov
cltd
mov
mov
cmpsb
call
rolb
outsb
stc
das
or
sub
xor
ficompl
mov
cmp
sub
push
adc
jl
lock
cmpsl
ja
mov
sub
jg
mov
sbb
mov
aaa
rolb
add
push
das
stos
out
cmp
mov
pop
and
mov
cmp
fdivrs
mov
jno
divl
cmp
or
cmp
sbb
xchg
mov
in
mov
inc
das
insb
test
fst
bnd
inc
xchg
mov
cwtl
lret
jbe
popf
enter
repz
lds
stc
subb
inc
mov
lds
push
stos
pop
xchg
outsl
and
ds
lahf
hlt
ds
icebp
add
aas
sub
jmp
mov
addr16
mov
ljmp
or
pop
mov
stos
popa
pop
fcmove
mov
mov
xor
inc
xchg
jne
pmuludq
push
xchg
fidivl
or
in
iret
jg
ds
pop
les
xchg
imul
cmp
pop
fsubl
hlt
pushl
fnstcw
ljmp
les
iret
loope
adc
jp
push
jmp
push
push
push
and
pop
xor
aas
pop
fisttpll
hlt
das
scas
adc
sbb
xchg
mov
stos
mov
mov
testl
and
xor
mov
push
xor
xor
lock
xchg
sbb
ds
dec
push
imul
mov
cld
dec
mov
orl
push
sub
jo
popa
xchg
and
in
mov
testl
inc
mov
sub
dec
xchg
xchg
pop
ljmp
insb
or
xchg
loop
jle
icebp
out
sahf
jnp
sti
or
mov
xor
inc
mov
xchg
xchg
mov
ret
jmp
andb
mov
clc
add
mov
ror
shrl
add
add
inc
dec
addr16
or
mov
mov
mov
imul
push
xor
pushf
jle
insb
shll
hlt
outsb
ret
xor
cwtl
aam
mov
xlat
idiv
mov
or
frstor
push
jnp
sbb
pop
inc
fdivrs
hlt
fwait
pop
enter
pop
lock
and
jmp
gs
or
lahf
dec
lods
or
xchg
std
sub
ss
jecxz
xor
add
sub
idivb
pushf
clc
cmc
jb
cmpsb
aam
jmp
xor
outsb
loopne
rcrl
repz
inc
push
pop
or
push
jmp
jmp
mov
pushf
xchg
jbe
cli
iret
shll
sbb
sub
xor
push
ficoml
and
mov
inc
pop
xchg
push
xor
mov
or
ja
subb
cmpsl
mov
in
daa
xchg
xchg
mov
inc
pop
mov
pushf
sub
nop
jmp
sbb
mov
dec
aad
fsubrl
xlat
mov
and
xchg
pop
icebp
iret
jns
jl
loop
bound
fldl
xchg
stos
xchg
jb
loope
mov
out
mov
xchg
dec
xchg
add
inc
popa
lret
in
inc
pop
mull
stc
fbstp
add
sub
dec
and
dec
clc
and
outsb
or
xchg
sub
sbb
push
sub
cmp
pop
inc
into
or
mov
xchg
jge
sbb
add
mov
and
sarb
cmc
mov
or
dec
sub
cmp
jo
sub
pop
mov
pop
sbb
xor
push
das
mov
and
mov
gs
loop
cmp
push
js
stos
notb
push
mov
das
out
pop
jno
sbbl
pusha
hlt
in
movsl
mov
pop
aad
fnstcw
clc
xchg
loope
leave
pop
sub
stc
arpl
cld
or
aaa
sbb
into
sub
aaa
fisttpl
inc
sub
fdivrl
and
xchg
sbb
jo
adc
stos
inc
adc
jl
ficoms
inc
loop
fnsave
fidivrl
out
adc
push
ret
sti
xchg
aam
js
outsb
bound
cs
push
cmp
ja
add
aam
and
rolb
lahf
ret
mov
jns
lret
cs
cmpsl
xor
pop
and
filds
sub
ss
fs
push
xchg
xchg
ss
pop
in
lahf
jle
xor
sbb
lahf
inc
mov
inc
pop
cmc
pop
ss
xor
loop
sbb
insb
mov
mov
cmp
sarl
jl
leave
mov
jae
mov
pusha
mov
and
in
pushf
push
jbe
push
fcmovnbe
sbb
sbb
jmp
mov
loop
nop
addr16
in
xchg
test
mov
mul
mov
int
mov
int
sbb
xchg
pop
push
nop
xor
lock
push
mov
xchg
daa
xchg
ds
aas
cwtl
ds
imul
jbe
inc
push
cmp
hlt
jae
add
rcr
orb
push
das
dec
inc
adc
dec
dec
xchg
in
add
int3
push
jno
push
rcl
jle
and
pop
outsl
cmp
xchg
outsb
dec
xchg
adc
xchg
mov
cwtl
rcr
sub
fsub
jge
adc
js
and
mov
orl
pop
or
jns
mov
faddl
daa
movsl
dec
and
mov
insl
push
jae
mov
into
cli
push
dec
push
test
xor
mov
mov
inc
push
mov
lods
mov
loop
sub
push
push
fs
mov
or
es
hlt
jns
enter
mov
inc
or
int
fwait
inc
call
dec
mov
or
cmc
xchg
push
dec
add
dec
das
iret
jno
fcmovnbe
enter
jbe
jbe
fwait
push
pop
fdivl
xchg
pop
test
add
jmp
push
lret
and
sub
xchg
xchg
lahf
mov
les
mov
dec
ja
popa
icebp
sub
cltd
cld
and
test
cwtl
lods
pop
add
lods
inc
insl
mov
fidivrl
and
sub
shlb
das
ja
and
scas
loopne
in
dec
mov
mov
pushf
xchg
mov
fbld
cmp
mov
mov
xor
popa
mov
dec
movsb
pop
adc
cli
gs
mov
mov
jp
out
pop
and
repnz
inc
push
jmp
mov
pop
mov
cmpsl
outsw
push
mov
jge
sub
push
testb
mov
jl
leave
and
adc
jle
iret
sub
ja
icebp
lahf
mov
pop
push
cmc
decl
and
mov
or
lahf
cwtl
xlat
je
mov
pop
xor
shll
push
jle,pt
in
cmp
std
rcr
flds
sub
add
in
pop
add
inc
fcomp
lea
psadbw
fs
cmp
push
pushl
cltd
pop
fucomp
out
fs
mov
call
add
mov
pop
or
rclb
testl
sub
out
inc
add
sbb
xchg
mov
loope
push
sub
and
xchg
cmpsb
or
adc
adc
into
jl
popa
pusha
scas
mov
addl
xor
inc
mov
jg
fdiv
inc
fsubrs
out
fisttpl
and
repnz
test
cmp
into
and
out
cmpsb
xchg
test
push
jo
aam
popf
dec
pop
fisubrl
hlt
insl
adc
inc
mov
outsl
xor
dec
test
arpl
xor
std
xor
out
mov
jae
sub
inc
cmp
pop
push
push
mov
pop
pop
aam
and
xchg
pop
pop
jmp
popf
enter
inc
imul
fisttpl
inc
mov
cmp
sub
mov
adc
aad
cmp
pop
mov
cld
andl
dec
xor
sub
aaa
arpl
sbb
adc
xor
aam
lret
jg
jno
shrb
out
and
mov
or
cmc
fistl
divl
inc
push
lods
adc
dec
pop
popf
testl
jge
sub
int3
mov
dec
js
or
jb
aas
xchg
sti
pop
movsl
inc
stc
sbb
adc
fimuls
sub
cmpsb
adc
daa
and
test
xor
test
rorb
hlt
in
out
mov
mov
push
mul
popa
sub
out
mov
rolb
mov
or
das
in
fists
pusha
add
sub
fwait
cmpsb
jmp
xor
mov
jecxz
push
mov
cmp
mov
mov
pop
ret
xchg
arpl
inc
jbe
inc
sbb
mov
mov
cmpsl
jge
lret
daa
push
mov
adc
pop
pop
or
std
jo
fcmove
jl
call
lock
sub
adc
ja
rcl
mov
mov
adc
sub
mov
fbstp
arpl
pop
inc
dec
pop
jb
inc
xchg
mov
sahf
sarl
adc
nop
add
pop
das
pusha
jle
addr16
adc
jle
and
dec
mov
popa
add
ja
adcb
lods
push
popf
inc
ja
add
mov
pushf
imul
xchg
pop
or
push
mov
dec
xor
mov
aam
or
fs
pop
add
out
xchg
lods
inc
pushf
sarl
mov
leave
shr
pushf
add
repz
pop
test
sbbb
lret
push
daa
pop
xchg
mov
push
jb
pop
xchg
push
push
iret
xor
xchg
mov
cmc
sub
push
mov
sbb
push
rcll
mov
cmp
mov
jnp
popa
or
cmp
leave
jge
inc
jecxz
rcl
pop
fcom
lahf
cwtl
and
mov
pop
xchg
mov
shl
in
in
and
call
repz
pop
fnsave
out
sbb
repnz
insl
shll
pop
aad
in
aad
or
fs
and
sahf
mov
sbb
int
mov
sub
add
pop
leave
loope
pop
mov
sub
cmpsb
xor
iret
inc
pop
fcoml
sahf
cmc
fsubrs
int3
or
setne
pusha
nop
subb
jne
inc
inc
pop
lea
inc
scas
inc
ret
bound
mov
sub
shrb
mov
imul
mov
ljmp
inc
fst
push
sarl
or
push
push
lahf
iret
jecxz
jle
or
scas
xorb
xchg
jmp
jo
and
movsb
ret
lods
inc
add
xor
cmp
add
bound
enter
test
mov
xchg
mov
mov
gs
lcall
sahf
lds
ret
mov
xchg
shl
fisubrl
dec
xchg
shlb
lret
dec
mov
pusha
inc
scas
mov
movsl
lods
mov
or
xor
mov
mov
inc
mov
daa
push
jne
mov
jg
mov
jmp
int3
aad
addl
loopne
push
mov
in
movsl
movsb
sbb
pop
fisubs
sbb
loop
xor
scas
subb
sbb
fidivrs
cs
sti
xchg
jle
xchg
cwtl
sbb
add
iret
pop
in
or
in
sbb
insl
test
or
xchg
jmp
add
inc
je
add
xor
lock
mov
or
out
das
les
sbb
aam
aad
cmp
inc
bound
dec
mov
sub
stos
dec
push
fisubs
das
les
hlt
push
mov
or
mov
insl
insb
test
shl
jo
pop
fwait
idivb
mov
out
cmp
mov
sub
jne
push
cmp
lahf
push
pop
outsl
inc
pushf
cmp
xor
pop
fs
addr16
scas
push
add
test
pop
inc
in
xchg
pop
mov
inc
shlb
add
jae
outsl
sub
into
flds
insb
adc
scas
xchg
rclb
push
adc
xchg
jno
jle
and
cmp
lds
xchg
lcall
jmp
and
xchg
outsl
add
idivl
outsb
xor
punpckhwd
aam
imul
stos
lods
bound
fbld
or
jecxz
inc
sub
into
pop
sbb
cltd
imul
test
fs
jbe
push
icebp
pop
xor
jge
arpl
adc
js
xchg
dec
rorl
ret
inc
xchg
push
jmp
sub
ret
jnp
jbe
sti
fistl
js
mov
cs
add
cmp
aam
in
in
sub
pavgw
dec
add
add
and
addr16
jns
lret
movsb
cmp
into
sub
lods
sub
scas
add
xchg
dec
out
xor
cld
mov
in
sub
js
xlat
iret
add
movb
push
mov
push
push
mov
mov
mov
mov
mov
es
inc
sar
movsl
dec
adc
sbb
mov
sub
test
inc
std
dec
sub
dec
jae
inc
jnp
cmp
jl
sbb
sbb
xchg
and
loope
js
test
aam
mov
nop
sub
mov
xlat
int
hlt
inc
ret
or
ret
add
roll
pop
jecxz
mov
hlt
shll
into
cld
sti
push
das
dec
adc
push
lods
push
mov
daa
push
dec
daa
mov
add
mov
jmp
mov
or
push
xchg
shrl
and
int3
push
icebp
ret
in
lcall
jbe
int3
sbb
shll
xchg
xor
cs
push
mov
push
dec
faddl
push
inc
add
dec
jns
ss
mov
scas
outsb
and
mul
push
hlt
xchg
xor
inc
and
dec
ret
lcall
fiadds
inc
push
lods
sub
sbbl
pushf
sbb
test
shll
mov
and
loopne
in
lahf
push
outsl
data16
dec
mov
ret
shlb
test
jecxz
push
mov
lcall
sub
pop
push
cmpsb
mov
xor
movsb
fld
loopne
rclb
sbbl
out
push
mov
jecxz
fsubrp
add
xor
test
lds
fisttpll
push
loop
sar
cmp
mov
push
dec
int
lret
movsl
dec
popa
sbb
mov
int
shrb
mov
shll
outsl
orb
out
sub
push
cmovns
mov
inc
or
lods
test
std
mov
lcall
outsb
das
mov
mov
push
aas
ret
push
insb
cld
jae
jle
subb
out
stc
ret
lds
cmp
lcall
out
inc
jl
and
mov
cs
in
shlb
jge
xor
add
dec
adc
mov
pushl
cltd
loop
mov
jmp
decl
xchg
or
xchg
jle
and
sbb
movsl
dec
push
sub
jle
mov
notb
roll
shr
cmp
ds
mull
scas
scas
sbb
js
cmp
hlt
jo
out
add
cmpsb
nop
popa
jg
insl
cmp
sub
vhsubps
int
jbe
and
cld
mov
dec
in
imul
push
test
sbb
daa
scas
inc
in
sub
outsb
mov
push
fdivrp
js
push
xor
out
lods
mov
mov
dec
push
xchg
movsl
insl
movsl
mov
fisubrs
aaa
out
mov
mov
popa
ljmp
repz
aas
shl
jae
roll
dec
mov
jne
movsl
xchg
push
mov
mov
dec
sub
jmp
pop
pop
xchg
imul
sub
inc
push
inc
xor
dec
lea
mov
mov
stos
shl
ret
sti
movsb
in
push
mov
push
pop
dec
jmp
mov
and
jecxz
out
mov
cmp
mov
pop
daa
add
dec
pop
cld
and
cmp
gs
jne
aas
in
xor
ljmp
or
cmp
lahf
jmp
bound
mov
adc
es
fstps
mov
inc
sbb
sub
pop
enter
arpl
lods
icebp
stc
lods
jne
and
jno
popf
xchg
outsl
pop
out
scas
pusha
mov
mov
sbb
js
ja
fisubs
into
leave
fimull
pop
hlt
add
out
inc
jo
lahf
or
cmc
pushf
dec
dec
test
pop
into
inc
stos
mov
lock
xchg
cmp
xchg
in
xchg
xchg
adc
decl
jmp
xchg
push
rcr
inc
push
mov
xchg
pop
sbb
leave
xor
push
cmpsb
fistpll
cmpl
shll
dec
sub
daa
push
mov
sub
or
mov
orps
or
jne
imull
mov
push
fwait
bound
cltd
pop
test
subb
push
mov
inc
jnp
jne
leave
out
movsb
add
addr16
in
mov
fidivl
es
in
and
lods
inc
dec
pop
mov
sub
mov
sti
test
faddl
fmull
or
sbb
mov
pop
xchg
mov
leave
fwait
push
fwait
jmp
pop
lods
jge
js
adc
sti
repnz
movsb
lea
ljmp
cmpsb
hlt
imul
mov
in
test
outsb
lret
je
mov
rclb
mov
pop
xchg
mov
cwtl
das
cs
pop
and
inc
add
jno
adc
es
aam
jle
jns
pushf
pop
repnz
jp
mov
adcb
mov
pop
push
sbb
xchg
mov
pop
fwait
dec
xor
xchg
mov
sti
and
mov
ret
xor
fnstcw
dec
xchg
enter
xlat
or
fucomp
inc
pop
mov
das
movsl
out
and
fstl
in
add
shlb
out
scas
leave
mov
inc
jb
and
int3
xchg
and
xchg
sbb
testb
into
out
shl
and
ret
pushf
cmp
lock
and
pushf
sbb
mov
lcall
shl
mov
jge,pt
dec
dec
mull
xlat
imul
mov
cmpsb
pop
cmp
aam
adc
mov
lret
push
sub
fucom
xorb
xor
mov
jne
ljmp
cmp
imul
mov
loopne
out
adc
mov
data16
adc
rorl
jno
into
lret
mov
pushf
mov
cwtl
mov
adc
arpl
addr16
pop
test
pushf
cmp
xchg
dec
test
xchg
mov
mov
cmpsl
repnz
icebp
popf
mov
cmp
or
out
leave
push
inc
ret
xor
adc
pop
insb
mov
cmp
mov
mov
mov
jg
adc
inc
in
out
fnsave
ss
data16
lods
test
jnp
and
xchg
lcall
xchg
jo
out
mov
cmp
lret
mov
imul
cmp
sub
adcl
fsubrp
ret
push
orl
mov
ja
fs
xor
xor
aad
pop
or
push
stos
cld
jl
and
push
outsb
ret
jmp
jbe
pop
push
xchg
push
mov
fiadds
xchg
pop
xchg
mov
cli
xchg
xor
push
mov
add
cmp
insl
mov
pop
jp
lea
dec
pushf
movsb
dec
sti
aaa
dec
daa
ljmp
mov
sub
div
ret
push
inc
push
xor
or
mov
scas
and
mov
adc
mov
sub
sub
movsl
hlt
jmp
loope
iret
insb
outsl
adc
fstpt
test
lds
orb
ljmpw
sbb
jg
mov
push
ss
lahf
jge
jl
pop
adc
es
xchg
daa
fdivrl
cmp
enter
sub
xchg
int
or
addr16
test
mov
cli
mov
and
cmp
cmc
xchg
push
cmp
mov
push
cmc
jmp
ljmp
mov
aas
stos
outsl
cmp
sbb
flds
leave
and
or
push
aas
dec
cld
cmp
fisubs
lcall
cli
jg
add
pop
cli
in
jno
sbb
lock
mov
dec
ds
jnp
cmp
sbb
ljmp
fs
incb
gs
jae
sbb
mov
cmp
jo
insl
popf
sbb
and
shr
cwtl
add
movsl
inc
jne
addr16
sti
xchg
cli
push
xchg
mov
shll
cmpl
or
and
dec
mov
push
jle
push
cmpsl
push
and
dec
push
fiadds
cmp
pop
aad
jno
popa
movzwl
xchg
lcall
inc
imul
jb
xchg
ds
and
in
in
icebp
jge
pop
outsl
pop
lret
inc
aad
and
call
bnd
pop
mov
push
ja
in
inc
pop
sahf
jne
dec
js
jmp
add
cmpsl
dec
cmpsb
aas
inc
fmuls
ret
mov
aad
adcl
dec
stos
test
xor
mov
lods
pushf
repnz
inc
sbb
inc
push
test
push
and
push
cwtl
test
repnz
leave
pop
mov
push
xor
imul
ja
loop
in
mov
loopne
into
and
add
sbb
pusha
jg
idivl
mov
sbb
xor
mov
repnz
loop
nop
pop
and
iret
out
add
pop
mov
dec
inc
lcall
xchg
loope,pt
xchg
es
movsb
out
mov
std
mov
mov
jnp
adc
out
mov
in
lock
testl
jae
fdivp
es
out
pop
stos
clc
or
test
lahf
mov
fidivrs
pop
movsb
enter
mov
movsl
push
mov
push
inc
out
lcall
xor
fildl
leave
outsb
hlt
push
push
loop
or
shl
subb
int3
cld
je
adcl
fsubrs
add
mov
xchg
jae
out
gs
mov
xor
push
jmp
insl
fdivs
mov
arpl
cmp
rcr
mov
cmp
insb
pop
inc
rclb
stc
mov
jnp
popf
movsl
aas
jnp
pop
insl
or
pusha
sbb
jl
pop
pop
dec
mov
mov
jb
inc
pop
cwtl
test
loopne
mov
adc
cmpsl
lcall
xchg
add
mov
mov
dec
ja
pop
loop
sub
sti
ljmp
push
lock
mov
push
int
mov
xchg
lock
test
inc
push
inc
nop
lahf
movsb
mov
cmp
mov
popf
stc
cmpb
test
scas
adc
xor
lsl
mov
xchg
xchg
out
cmp
clc
int3
aaa
sbb
pop
mov
decb
shll
jge
fnsave
data16
scas
lcall
addr16
mov
mov
sarb
push
loopne
dec
fldenv
jp
jle
bound
lea
cmp
popa
cmp
je
and
data16
adc
rcll
aad
cs
in
cmpsb
ret
sbb
dec
outsb
icebp
and
ret
and
sbb
jle
pop
pop
mov
fists
lods
mov
nop
xor
sub
pusha
lods
incl
in
das
mov
xchg
sub
dec
sbb
loop
push
daa
add
repnz
xor
xorb
mov
aam
lock
cmp
or
cmp
xor
imul
sub
mov
sahf
rclb
repz
je
pop
fdiv
mov
fcom
mull
into
dec
iret
mov
out
mov
test
push
cmpsl
pop
das
pop
iret
int
faddl
je
clc
inc
lahf
ret
mov
pop
imul
cmpsb
cmp
in
scas
nop
push
cmp
cmp
pop
inc
mov
mov
xchg
inc
push
loope
shlb
movsl
pop
pushl
inc
sbb
xor
repz
and
cmp
inc
xorl
sub
popf
ja
sub
ja
or
mov
jne
movsb
xchg
lcall
jb
in
mov
lods
adc
cld
sbbb
sub
jno
cmp
or
std
mov
xor
in
pop
push
fisttpll
pop
dec
add
push
xchg
repnz
movsb
out
outsb
or
popa
sbb
pusha
sti
xor
fildll
sbb
mov
inc
push
in
mov
das
int
mov
in
xchg
lock
aaa
mov
ret
leave
outsb
adc
stos
jge
fs
sub
mov
fcomip
or
lods
shrl
mov
sub
or
mov
cmp
xchg
in
sub
pop
out
test
or
incb
jmp
lock
and
loop
mov
jp
divb
outsb
pop
push
and
repz
inc
int3
ret
inc
fidivrs
mov
push
pusha
lret
add
cmpsl
ror
pop
aas
jno
mov
and
xchg
dec
xchg
mov
mov
xor
mov
ficoms
xchg
inc
mov
das
adc
sub
out
push
sti
pop
pop
dec
jp
sbb
flds
sub
scas
push
js
and
mov
push
xchg
mov
orl
sub
mov
aad
enter
in
jg
jnp
call
jl,pt
jp
mov
mov
jmp
pop
add
fidivrs
xchg
notb
gs
sbb
or
fwait
pop
fnsave
xchg
fbld
adc
movb
int3
add
leave
jns
arpl
push
out
xor
loop
dec
ret
pop
inc
sub
jo
es
int
pop
mov
mov
jmp
or
aaa
aam
push
push
dec
add
or
pop
fstpt
push
and
xchg
pop
dec
or
pop
stos
cmpsl
and
inc
es
and
js
lret
aam
lret
inc
movsb
fbld
dec
lcall
fsubrl
in
data16
push
sti
mov
cmc
mov
sub
jb
repnz
mov
cmpsl
ret
pusha
lret
in
sar
mov
ss
int3
mov
cmpsb
xchg
stos
lds
mov
pop
nop
mov
mov
adc
mov
into
jne
ja
nop
pop
in
push
or
and
cwtl
mov
stc
sbb
mov
into
xchg
pop
push
aad
pop
push
and
pushf
jge
loopne
push
mov
call
out
outsb
and
popf
sbb
inc
pop
dec
inc
push
add
mov
int
insl
pop
movq
jb
into
int3
mov
loopne
xlat
sbb
xchg
mov
adc
out
cli
or
xchg
lea
dec
jp
and
mov
fmuls
sbb
cmp
lahf
pop
stos
xor
hlt
push
pop
inc
mov
push
sub
pop
rorb
push
cld
fimuls
lcall
and
popa
sahf
and
outsb
test
xor
mov
dec
in
bound
movsb
testl
pop
push
fnstsw
mov
cmp
cltd
in
lcall
sub
xor
xchg
jns
repz
lds
pushf
or
xchg
aaa
add
aaa
sub
inc
mov
in
sub
sub
cmp
movsl
or
test
lock
jns
xchg
cmpsb
ss
nop
xor
outsb
inc
std
jle
cmp
ja
orl
out
mov
mov
add
ljmp
cld
sub
xchg
cs
popa
sti
mov
inc
insb
popf
in
cwtl
lret
ret
sub
ja
jecxz
mov
mov
outsl
dec
sbb
mov
cmpsb
es
js
daa
std
loopne
test
mov
addl
fs
notl
ret
ja
mov
or
stc
mov
sti
aas
jno
xor
subl
fsubs
dec
mov
sub
cmp
arpl
imul
in
imul
ret
sbb
movsl
enter
test
lret
inc
cmp
dec
xchg
xor
icebp
jecxz
imul
cwtl
cmp
sbb
in
fildl
xchg
pop
fidivrl
lcall
ss
dec
ljmp
mov
aam
mov
std
pop
ret
iret
cli
sti
xchg
je
dec
inc
adc
int3
sub
in
and
rorb
mov
gs
ds
fisubrl
in
adc
adc
push
and
cmpsl
out
loopne
dec
call
jmp
xor
lahf
bound
pop
call
in
mov
cmc
imul
aaa
mov
adc
outsb
in
mov
mov
rcrb
add
repnz
aad
cmpps
jo
cmp
inc
push
mov
push
subb
test
mov
imul
pop
jno
popf
xor
repz
jo
dec
mov
pop
sbb
subl
sbb
lock
mov
ss
pushl
addb
jge
andl
xchg
mov
sarb
sarl
enter
sub
xor
and
mov
push
popa
loop
xchg
fsubl
pusha
push
xchg
xchg
nop
scas
mov
lahf
and
dec
aad
sbb
rcll
adc
fwait
jecxz
pop
popa
repnz
call
rcll
int3
xchg
imul
jne
inc
ret
or
ret
aas
add
push
cmp
mov
pop
cmpsb
fstl
inc
cmp
jns
out
popf
ss
pop
arpl
test
and
sbb
shll
rcll
adc
jge
fwait
scas
mov
xchg
adc
les
imul
iret
pminub
repnz
dec
mov
mov
aam
sub
mov
or
and
xchg
mov
xor
loop
sbb
imul
lods
data16
sarl
mov
or
or
push
and
loope
cmp
rorb
aaa
into
pop
sbbl
pop
lahf
cmpsb
out
stos
lret
mov
loop
sbb
js
mov
pop
pop
or
stc
or
sbb
jl
mov
aaa
scas
mov
test
testb
dec
xchg
jecxz
jnp
xchg
dec
mov
xor
enter
filds
subb
jbe
adc
add
pop
xor
cmp
js
insb
incl
mov
mov
or
sbb
pushf
xchg
filds
je
je
inc
cmp
adc
and
mov
ss
lcall
dec
and
ljmp
xchg
subb
sbb
mov
loopne
lock
mov
sbb
jo,pt
jno
lea
js
cltd
pop
dec
inc
mov
push
popa
jbe
aam
in
adc
imul
out
pop
pop
jg
daa
call
call
mov
push
push
add
test
jge
outsl
and
pop
jecxz
test
vhaddps
daa
sub
loopne
fdivs
inc
jmp
sub
xor
push
outsb
sar
aam
pop
shrb
pop
mov
lds
lods
mov
or
mov
mov
in
pusha
mov
popf
xchg
sahf
cmp
or
addl
and
jb
jne
push
jmp
outsl
and
dec
inc
xlat
sbb
rcl
cmp
pushf
lods
cmp
out
lret
add
cmp
jg
lods
cmp
mov
pop
out
jecxz
adc
push
lds
or
add
addr16
dec
and
mov
mov
adc
or
lods
loop
cli
mov
call
mov
lahf
ficoml
sbb
out
outsb
push
je
pop
cmp
sbb
xor
out
mov
lods
cmp
xchg
call
cmp
jnp,pn
dec
enter
push
cltd
cmp
add
jg
or
aad
sahf
fldt
movb
or
or
subl
lods
lods
sahf
out
mov
adc
push
mov
jmp
insb
mov
in
add
pop
stos
rcrl
mov
mov
mov
cmp
xlat
mov
fstpt
mov
dec
or
xor
push
sub
fisubrs
push
fnstcw
mov
mov
mov
xor
mov
fistl
or
cmpb
sub
xchg
cmp
cltd
cld
adc
inc
int
push
repz
outsl
xchg
or
icebp
mov
jmp
mov
push
xor
jbe
aaa
cwtl
lods
mov
out
in
xor
stos
ljmp
stc
adc
sbb
lock
pushf
aaa
and
lahf
enter
aad
adc
adc
dec
jno
mov
add
push
inc
cwtl
xor
cwtl
xorl
test
lcall
dec
hlt
mov
lods
popa
sub
aaa
fldenv
mov
lods
clc
push
xor
push
xchg
mov
in
xor
mov
dec
and
push
shll
pop
notl
out
test
adc
pop
sbb
push
add
sub
sub
mov
push
clc
hlt
xchg
inc
xor
dec
dec
dec
arpl
aad
loopne
mov
cwtl
cmp
xchg
lds
xor
inc
pop
stos
mov
dec
adc
and
or
mov
adc
jb
bound
lret
scas
divl
jle
enter
mov
test
mov
test
add
fwait
lret
cmp
inc
mov
mov
or
and
mov
ja
dec
fwait
adcl
iret
ja
aad
movsl
ficompl
lea
jo
mov
adc
inc
lods
fs
fidivs
cld
xorb
push
add
ror
fisubrl
xchg
push
mov
out
in
jg
mov
sarl
mov
jl
repnz
or
sub
jecxz
jb
mov
xchg
adc
or
loope
sub
jmp
and
add
insl
cmp
dec
popa
outsl
jmp
xor
js
push
out
stc
mov
sbb
call
dec
popa
rorb
test
dec
jbe
andb
test
test
mov
rorl
sub
jecxz
push
mov
push
clc
aam
jp
mov
shrl
cwtl
rolb
hlt
popf
lret
pusha
enter
ljmp
xchg
xchg
into
pop
inc
xor
add
cmp
xor
mul
into
sarl
sub
movsb
fsub
mov
and
jnp
cmp
dec
lahf
hlt
sub
out
js
jecxz
xchg
aam
daa
icebp
nop
popa
lock
push
int
insl
inc
push
mov
popf
rcrb
imul
bswap
iret
dec
adc
and
test
push
lea
jne
pop
push
push
sbb
mov
data16
push
and
xlat
idivb
stos
out
rorl
xor
rclb
loopne
mov
cmp
and
imul
mov
add
pop
arpl
popl
das
cmp
push
movsb
push
fucom
adc
jnp
lods
sub
and
mov
or
and
pop
cmp
pop
adc
sti
sahf
inc
sub
mov
lret
fiaddl
mulb
cltd
dec
fcmovnbe
stos
les
test
or
fcom
aam
xchg
xchg
and
fstps
pop
call
mov
sbb
and
mov
xchg
xchg
xor
jnp
sbbl
in
enter
lea
xchg
xchg
jne
mov
stos
movl
loop
mov
dec
push
sti
mov
leave
dec
movsb
test
add
cmp
cld
in
mov
in
cld
sub
addr16
decb
roll
sbbb
xchg
orl
out
push
nop
cmp
iret
push
xor
rcr
enter
pushf
out
add
movsl
lds
mov
mov
jne
mov
or
and
std
add
in
inc
mov
mov
inc
addr16
or
add
popa
in
adcl
sbb
loope
and
sbb
sbb
out
movsl
and
leave
lahf
hlt
mov
sub
add
pop
adcb
mov
in
ja
fs
jg
clc
inc
sahf
mov
mov
and
add
pop
add
fildl
fs
mov
stc
dec
mov
mov
ss
dec
inc
sub
outsl
mov
mov
xchg
out
xchg
inc
bound
add
pop
jae
pop
lock
inc
js
stos
xlat
sarl
scas
js
lods
outsb
mov
das
loopne
mov
inc
fstpt
lcall
lods
jb
daa
dec
push
rclb
sahf
in
iret
or
jns
cld
add
or
ret
add
dec
sub
inc
test
xchg
inc
lds
push
sub
jecxz
and
sbb
add
mov
nop
or
iret
pop
sub
lret
stos
cmpl
sbbb
mov
sub
push
pop
inc
lret
mov
scas
or
sub
iret
xchg
and
sub
test
lods
stos
leave
jo
and
adc
gs
xor
push
push
adc
pop
mov
in
sub
xor
sub
lods
aam
inc
call
sbb
cld
fsubs
bound
jecxz
cltd
rclb
jge
push
xchg
addr16
stos
inc
enter
jne
sbb
adc
inc
xchg
lcall
xchg
add
out
lea
movsb
push
stos
imul
sub
pop
push
push
js
inc
in
lahf
fnstcw
mov
sbb
cmpl
pop
and
xchg
push
mov
jb
loope
or
loop
scas
je
sti
movsl
lahf
fnstenv
outsb
ret
jmp
int
pop
add
and
push
xor
gs
jecxz,pn
std
push
scas
add
out
or
imul
enter
das
push
gs
xor
push
stos
inc
sarb
jmp
test
icebp
out
aaa
mov
mov
inc
test
pop
scas
gs
jge
insb
sbb
or
in
add
loope
jl
fdivrs
stc
xchg
out
cmpsl
das
arpl
cli
sub
or
and
enter
jg
in
and
sti
jne
int
int3
pop
movb
loope
stos
sub
push
imul
out
mov
leave
hlt
inc
jge
sub
dec
pusha
pushf
lret
dec
mov
xchg
scas
mov
mov
cmp
push
jp
mov
mov
jmp
in
rcr
mov
adc
mov
out
addr16
popf
out
sub
stos
andps
push
lahf
pop
mov
fiaddl
cltd
push
test
cmp
and
xor
dec
xor
mov
jae
mov
daa
outsb
xor
inc
jae
jo
adc
iret
or
out
popl
mov
dec
inc
cmp
lret
or
leave
dec
pop
mov
js
push
xchg
xor
notl
jmp
cmp
sahf
adc
jecxz
int3
mov
jle
push
sahf
sbb
mov
aaa
negl
fdivrs
rcrl
add
loop
xchg
cmp
popf
xor
add
xchg
cmpsb
lds
jns,pt
jne
xchg
mov
stos
pop
mov
enter
popa
outsb
pop
adc
aad
push
add
xchg
lret
push
sub
ret
pop
lods
lret
popf
mov
fistpl
test
inc
scas
shr
jl
insb
xchg
push
push
and
pop
mov
mov
xlat
stos
mov
push
mov
cmp
clc
sbbb
mov
into
fs
adc
mov
mov
fucomp
pop
inc
jbe
scas
mov
mov
in
adc
out
cmp
loopne
rcrb
and
add
outsb
subl
out
mov
mov
iret
push
shrl
mov
push
mov
push
cmp
and
leave
hlt
data16
sub
stos
cmp
test
or
jnp
and
into
jge
sbb
lret
xor
xorl
in
or
lods
mov
hlt
inc
cmpsl
xorl
and
movsb
mov
sbb
icebp
aaa
mov
mov
xor
lahf
shlb
jnp
shlb
xchg
cmp
leave
xchg
notl
icebp
mov
xchg
xchg
fdivrl
fistpl
mov
inc
popa
adc
fs
inc
xorl
push
mov
imul
sbb
cmp
fwait
xor
mov
fwait
push
into
inc
out
xchg
roll
mov
rcl
dec
loop
cmp
jp
mov
xchg
jne
jbe
pop
cli
mov
fidivrs
test
mov
jp
mov
inc
or
add
xchg
pop
push
xchg
inc
sub
xor
push
jns
xor
ficoms
jle
mov
ja
mov
aam
call
cld
sbb
inc
adc
jmp
lcall
adc
add
sub
inc
popa
push
sub
leave
xor
inc
aas
in
mov
dec
ja
mov
lcall
add
cld
movsb
fs
shll
mov
test
insl
xor
pop
in
add
dec
xor
xor
scas
sbb
pop
bound
push
repnz
imul
push
sbbb
out
push
mov
shll
mov
or
adc
jecxz
cmp
lret
scas
xchg
and
int3
aaa
adc
push
inc
xchg
jnp
sbb
fs
push
jecxz
ja
fnstenv
ds
sbb
stc
inc
add
jb
dec
jle
push
test
mov
mov
lds
mov
cmc
rolb
lock
cmpsb
ljmp
mov
xchg
jg
testl
cwtl
insl
outsb
pop
lahf
sub
dec
out
daa
mov
mov
fsubr
jmp
dec
sbb
xchg
cmp
nop
lock
out
je
lret
popf
mov
jne
jl
arpl
pop
loop
or
sub
xchg
popa
push
mov
cmpsl
repnz
push
ljmp
xchg
mov
jp
xor
mov
sti
mov
ret
dec
js
ret
push
xor
sbb
outsl
pop
imul
iret
xor
jp
mov
insl
rolb
aam
xchg
jne
cmpsl
outsb
bound
sub
repz
outsb
mov
stc
xor
stos
add
inc
ret
jmp
enter
jmp
insl
test
xchg
jl
sub
pushl
jne
rorb
ljmp
imul
shrb
or
pop
jle
inc
push
movsl
sub
jne
sti
or
mov
fnstenv
andb
sub
push
sub
push
adc
test
subb
enter
not
insl
stos
fs
mov
xchg
jge
aam
shll
push
int3
out
or
or
stos
xchg
aas
jne
mov
orb
sbb
jns
roll
popa
xchg
jno
ret
data16
or
xchg
inc
pop
cmp
jge
gs
inc
add
cli
cmp
leave
adc
bound
inc
mov
hlt
sub
xor
dec
test
aas
fcmovnu
movsb
sbb
dec
test
shlb
xor
or
mov
data16
pop
and
add
mov
or
cmp
movsb
xor
pop
inc
shll
repz
movsl
pop
loop
jae
pop
cmp
out
ret
adc
sub
sbb
xor
sbb
mov
mov
mov
fdivrl
mov
mov
lcall
jecxz
inc
and
push
fistps
loop
lret
push
mov
loopne
subb
out
out
nop
sbb
orb
fwait
jl
xor
stos
add
sbb
adc
adc
sbb
push
out
test
mov
setbe
fs
mov
scas
lods
add
push
pop
jbe
test
adc
out
pop
dec
dec
js
sbb
sbbl
rcrl
and
out
pop
cmc
push
imul
into
gs
sbb
movsl
lods
fwait
mov
xor
xchg
inc
in
imul
sub
ret
inc
imul
scas
jge
lcall
les
dec
fdivrp
aam
lods
jns
lahf
arpl
or
xor
imul
arpl
add
sbb
js
mov
iret
dec
arpl
push
subb
dec
or
pop
xor
xlat
fdivs
cwtl
in
out
inc
xor
jb
in
mov
cwtl
jno
fcmovnb
adc
pop
xchg
xor
mov
test
sub
lret
jno
jle
cs
jp
in
bound
jne
cmp
jae
cltd
ss
cs
test
nop
and
mov
arpl
xor
and
add
sbb
and
cmp
enter
inc
into
dec
out
fisttpll
jo
adc
aam
inc
jle
ret
aad
in
mov
sbb
cmc
and
ds
lahf
aas
pop
ret
xchg
pusha
addr16
les
aas
push
xor
clc
xor
and
sti
xchg
ja
add
add
cpuid
inc
jne
mov
push
xchg
das
jns
cmp
or
xor
push
loop
cmpsb
mov
jmp
aam
cld
xor
xchg
push
xor
mov
jg
mov
fwait
gs
mov
pop
hlt
out
dec
push
push
or
dec
addr16
arpl
xor
mov
cmp
push
jb
mov
pop
out
das
addr16
shlb
sbb
out
lock
in
cwtl
inc
les
adc
das
mov
iret
popf
or
cltd
push
icebp
or
fiaddl
fnsave
mov
xor
dec
ret
push
sub
sub
push
and
cmp
insl
and
lock
jmp
js
push
mov
sahf
loope
jae
or
insl
jp
sbbl
clc
mov
sbb
push
push
imull
or
js
mov
sub
shlb
push
jle
lahf
outsl
jg
fildl
mov
in
test
lods
pop
and
or
addr16
push
adc
or
xchg
sub
mov
push
add
in
icebp
xlat
divb
adc
jns
lahf
in
push
xor
push
push
outsl
mov
je
sub
mov
dec
or
sbb
inc
adc
lcall
into
scas
pusha
inc
mov
in
sub
loop
stos
push
and
jns
fyl2x
push
les
mov
xchg
mov
xorb
shr
lods
push
sbb
call
dec
iret
stos
mov
cltd
iret
inc
notl
outsl
lock
loopne
insb
out
xlat
adc
aad
and
outsl
subl
cmc
dec
hlt
call
in
push
mov
faddl
fldt
xor
addr16
pusha
mov
xor
xchg
sub
cmpl
adc
mov
xchg
push
popf
mov
popa
sbb
outsl
xchg
mov
xchg
cmp
xchg
pop
orb
sub
dec
pop
stos
in
and
mov
loopne
jno
dec
jle
rcrl
in
or
in
sbb
das
mov
shl
or
pop
xor
out
push
adc
test
fsubs
hlt
mov
loop
fdivrs
mov
movsl
inc
adc
mov
dec
dec
out
scas
sbb
mov
mov
cmp
insl
push
or
adc
lods
pop
xor
out
xor
inc
pushf
xchg
cmc
stos
push
adc
xor
pop
ljmp
adc
dec
add
xor
xchg
dec
lock
ss
push
shr
stos
test
pop
ss
ret
cmp
jmp
add
in
mov
mov
xchg
sub
mov
xchg
sti
test
xchg
es
cmp
dec
cmpsl
sti
mov
outsl
cmp
pop
fistpll
push
mov
sahf
mov
ror
jb
scas
pop
ja
sarl
outsb
sub
mov
or
cmp
push
fnstcw
loopne
clc
decb
testb
jecxz
dec
rcrb
out
mov
push
ficompl
push
orb
jae
xor
inc
inc
insb
xchg
dec
scas
std
push
fnstcw
mov
jae
xchg
mov
inc
inc
cmpl
jge
jno
out
loop
aad
jle
mov
xchg
adc
inc
sbb
adc
imul
sbb
int3
or
push
scas
and
jge
loop
daa
mov
mov
enter
jmp
jne
sub
sub
adc
cmc
xor
or
lds
ja
sbb
into
out
add
pop
mov
jno
jle
insb
xor
stos
into
lods
int
and
insb
lret
jmp
data16
pop
and
mov
push
add
adc
xor
inc
idiv
fidivrs
divb
aad
mov
dec
stc
push
dec
sub
dec
mov
je
fwait
xchg
lcall
outsb
icebp
fistpl
rclb
jo
or
push
fistpl
and
clc
adc
mov
push
xchg
sbb
rorl
sub
outsb
call
and
leave
orl
aam
fldcw
mov
aam
pop
into
adc
mov
xor
xor
andb
test
pop
outsb
lods
jne
lcall
jne,pt
lock
adc
or
mov
jno
in
test
push
jae
pop
push
xchg
sti
pop
repnz
jae
lret
adc
js
cli
aas
xchg
pop
ret
or
push
movhps
mov
sarl
sahf
fbld
shll
jge
push
and
out
xchg
std
rol
add
pop
xchg
fistps
mov
cld
gs
cmp
jnp
and
dec
add
mov
fcomi
jo
sbb
mov
sub
dec
and
sub
ror
or
pop
xchg
push
leave
arpl
jp
push
and
push
arpl
fsts
xor
push
negl
icebp
xchg
mov
pop
int
dec
jns
aam
dec
shrl
icebp
jecxz
enter
xlat
sub
adc
ds
push
jecxz
jmp
push
xchg
xor
aad
and
cli
arpl
movsb
in
or
ror
pop
aaa
shl
mov
mov
xchg
test
shr
adc
out
dec
or
sub
add
sub
in
daa
or
pop
and
push
scas
xchg
fmul
adc
or
scas
sbb
repnz
ds
enter
mov
jns
ret
jecxz
xchg
sbb
inc
adc
sub
addr16
ja
sub
aad
outsl
add
sti
lods
filds
test
ss
and
jmp
dec
sub
cs
ret
test
jmp
jp
dec
push
mov
sbb
dec
cltd
jmp
sub
and
sub
lret
push
xor
dec
fmul
out
xchg
sub
or
xchg
push
std
xor
mov
fisttpll
es
and
lcall
inc
rep
mov
iret
dec
je
incl
orb
push
push
adc
and
lret
fstpl
pop
fucomp
push
gs
cmp
mov
bound
stos
or
into
xchg
dec
in
and
int
adc
outsl
or
lret
mov
mov
ret
mov
sub
xchg
push
shrl
mov
jp
imul
pusha
or
loopne
sarl
jp
cmp
and
inc
cmpsb
mov
fbstp
mov
xor
mov
fxch
cmp
adc
loopne
daa
in
push
sub
mov
repz
les
push
test
pop
std
adc
std
mov
insb
add
add
jecxz
dec
movsb
pushf
insb
inc
mov
cmp
dec
lahf
shll
push
mov
aam
sbb
ds
scas
sbb
into
xor
aam
inc
into
xchg
lret
outsb
xchg
lods
rclb
fnstsw
into
add
push
div
int3
dec
lock
cmp
int
daa
xchg
out
repnz
daa
out
cwtl
lahf
fcomi
add
arpl
xchg
cmpsb
dec
icebp
outsl
lret
loopne
pop
or
add
aaa
add
push
arpl
xor
repz
inc
lahf
out
cmp
rorb
push
nop
xchg
xchg
test
sub
int3
addr16
cvtps2pi
and
jg
sub
xorb
popf
pop
fst
xchg
mov
hlt
test
push
addr16
cwtl
movsb
pop
push
pop
out
icebp
jo
dec
lcall
bound
sbb
mov
mov
mov
popa
das
xchg
cwtl
addr16
cs
adc
std
or
cld
pusha
and
mov
add
or
and
xchg
pop
inc
enter
outsl
ljmp
add
lret
ds
scas
jecxz
push
push
jge
fldenv
inc
jns
pop
or
jb
dec
insb
out
add
and
xchg
pop
lea
js
push
gs
pop
iret
mov
outsb
mov
xchg
adc
int
les
xchg
je
int
xchg
int3
sbb
inc
sbb
push
lds
push
push
mov
cs
pop
fcmovnbe
fs
dec
loopne
insb
mov
test
xor
mov
push
add
xlat
dec
or
adc
stos
or
xor
dec
insb
fs
out
dec
pop
pushf
pop
aam
aas
mov
push
insb
inc
jle
cli
int
mov
push
sub
dec
cmpsb
fdiv
je
xchg
inc
inc
out
sar
orb
sub
in
lea
sbb
out
gs
cmpsb
outsb
mov
push
std
mov
mov
mov
mov
lcall
dec
bound
das
jp
andb
mov
iret
jmp
stc
aas
pop
movsl
pop
xor
mov
cmc
iret
and
push
mov
ja
xchg
lock
iret
leave
pop
movsl
cmp
inc
push
add
pop
lock
int3
xchg
enter
sbb
jle
paddusb
add
test
scas
or
in
or
mov
jns
loop
les
sub
stc
mov
addr16
adc
pop
imul
notb
popa
addr16
jl
jge
sbb
aas
push
or
aad
add
pushf
sub
cmp
dec
and
pushf
shl
and
ja
and
fcom
cwtl
sbb
mov
fistps
mov
jl
add
data16
subl
rcrb
cltd
push
mov
scas
jmp
push
sbb
aad
xchg
xchg
aad
stos
addb
insl
adc
jmp
pop
and
push
adc
and
xlat
lea
jmp
cld
push
xor
divl
jae
xchg
mov
dec
rolb
cwtl
into
popf
xor
sub
fisubs
rcr
fdivl
lods
cmp
sbb
mov
pushf
das
cmp
push
jmp
movsl
pop
mov
inc
ss
adc
lea
into
les
mov
xor
adc
and
pushf
xor
mov
pop
inc
cld
daa
jb
aam
repz
mov
in
mov
cmpxchg
mov
ret
sbb
inc
or
xchg
arpl
xor
inc
fs
pop
mulb
jge
addr16
aaa
sbb
pop
dec
shl
aam
rorl
insl
enter
rol
sti
adc
aam
out
leave
pop
pop
jbe
fimull
into
in
xchg
int3
cmp
xor
in
pop
out
xor
iret
cmpb
xorl
mov
xor
sti
shlb
dec
jl
push
outsb
cmp
push
test
int3
mov
call
jmp
je
push
pop
dec
inc
imul
push
push
and
adc
sbb
inc
sahf
aad
bound
mov
int3
dec
fmuls
mov
cmpb
adc
xchg
mov
xchg
aam
stc
test
mov
and
gs
inc
cmpsb
out
adc
ja
pop
popf
mov
push
sarb
jb
or
mov
add
cltd
js
cmp
dec
insb
inc
inc
cmpsb
mov
adc
rcrb
mov
paddw
and
inc
je
and
popf
sub
push
push
repz
or
mov
inc
xchg
data16
hlt
fs
lret
inc
shl
xchg
adc
adc
pushf
daa
addr16
jmp
mov
adc
xor
sbb
scas
push
inc
push
movsb
or
add
and
xchg
mov
cmc
push
in
mov
push
cmpsl
stos
mov
mov
je
cltd
xchg
ja
divl
bound
scas
cmp
xchg
jae
mov
out
sub
loope
lods
xchg
mov
repnz
and
dec
movsb
xchg
call
inc
pop
push
arpl
imul
fidivrs
cmp
cmp
dec
stos
push
dec
js
out
lea
mov
mov
addb
bound
fwait
xchg
incl
push
in
inc
pop
sub
dec
dec
test
cmp
inc
hlt
add
lea
sar
lcall
dec
xchg
mov
fsts
or
xchg
inc
shl
aas
cmc
adc
es
adc
pop
rcrb
mov
in
setp
mov
fsubrp
cwtl
ret
gs
sbb
adc
pop
fisubs
xchg
or
scas
or
jl
daa
ds
or
push
leave
push
adc
xchg
ss
pushf
mov
loopne
cmp
add
enter
pop
cmp
adc
adc
arpl
xorb
loopne
add
lret
push
lret
cmp
movb
insb
setl
mov
sub
add
add
rorb
hlt
mov
pop
sbb
icebp
mov
pop
pusha
js
mov
fiadds
mov
scas
subb
mov
cmp
and
iret
and
add
cmpsb
adcb
sub
xchg
cltd
jl
mov
icebp
enter
ucomiss
mov
adc
test
adc
push
mov
fdivrl
daa
stc
fidivrs
in
outsb
popf
fldl
aaa
subb
jle
rcrb
xor
push
sub
xor
in
jno
in
ja
stos
inc
outsl
outsl
test
cmp
cmp
in
cmp
dec
mov
jge
decl
or
out
pop
iret
adc
sbb
aad
les
adc
mov
mov
rcr
adc
addr16
rorl
pop
fs
loop
out
aad
and
mov
cmp
dec
stos
mov
pop
push
dec
int3
jl
inc
loopne
sbb
sub
sub
jae
popf
sub
mov
inc
and
cltd
divl
or
xchg
arpl
sub
mov
stos
cmc
test
push
jns
jo
cwtl
dec
test
mov
lds
cmp
add
enter
subb
push
or
out
outsb
hlt
sub
mov
or
sbb
out
and
sbbb
dec
daa
jge
inc
pop
adc
sub
lcall
xchg
shlb
ss
mov
inc
cli
repnz
lcall
fiaddl
faddp
dec
push
idivb
cmpsl
push
push
mov
mov
or
sub
sbb
in
loope
fadds
in
mov
ss
lods
sbbb
dec
mov
pop
pusha
imul
iret
pushf
mov
cltd
lahf
cmp
lret
lds
dec
rol
lods
mov
std
push
lahf
adc
sub
mov
mov
rcrl
outsb
ja
or
mov
out
pusha
cmc
cmp
push
aaa
iret
fmuls
xchg
xlat
cmc
dec
mov
iret
ret
in
pusha
jp
loopne
test
push
and
ja
imul
xor
adc
clc
or
jg
icebp
cmpsl
icebp
mov
insb
sbb
jge
lret
add
daa
lret
mov
outsb
cmc
adc
shlb
mov
popa
mov
out
or
pop
push
mov
es
jno
movsl
and
xor
lods
cmp
jbe
loope
or
mov
shlb
sbb
dec
and
adc
insl
pop
push
xchg
push
push
clc
jno
cmpsl
mov
xor
and
jl
jle
mov
or
pop
fists
sub
and
or
push
daa
int3
out
lods
orl
popa
push
outsb
es
xchg
jns
inc
mov
imul
rorb
scas
sub
pop
adcb
aaa
mov
jbe
adc
outsl
pop
xchg
out
int3
and
orl
push
loope
fdivp
es
enter
loopne
jno
negl
fsubs
jecxz
push
lcall
cli
jmp
movsb
int
je
sahf
dec
leave
and
add
ljmp
mov
inc
cmc
repnz
fidivrs
and
xor
mov
xor
repz
das
fsubrl
mov
mov
mov
ds
xchg
in
in
adc
mov
xchg
xor
pop
mov
lea
inc
cli
sub
fwait
push
mov
dec
in
aam
outsl
or
int3
inc
lahf
push
outsb
into
ljmp
xchg
in
fstl
lods
in
pop
mov
inc
jecxz
popa
pop
fcmovb
mov
out
stos
pop
inc
jp
xchg
xor
pop
jbe
and
xor
add
adc
xchg
mov
and
push
loop
mov
out
testb
inc
add
fcomi
ss
push
jmp
dec
shrb
scas
sbb
es
push
jns
cmc
add
imull
cmp
lea
pop
inc
jle
pop
int3
insb
out
push
mov
rclb
jnp
out
cmp
fmull
repnz
adc
xchg
push
push
add
adc
dec
call
push
ljmp
push
pop
rcrb
stc
xchg
or
mov
shlb
pop
por
adc
test
pop
out
mov
dec
push
xor
add
and
dec
push
sub
and
pop
stos
cltd
data16
sub
dec
bound
xchg
jb
sbb
push
std
outsb
xor
pusha
or
or
mov
dec
ljmp
sbb
or
cs
mov
ljmp
hlt
jmp
rcr
cwtl
int3
push
xchg
mul
fsubr
cmp
xchg
imull
push
sbb
leave
jno
rep
cld
mov
sbb
loop
scas
xchg
je
pop
jo
pusha
lahf
mov
mov
cmc
and
int
fbstp
je
sub
lret
xor
aam
insl
mov
mov
xor
out
shlb
mov
sub
lahf
push
stc
aad
scas
xchg
mov
inc
mov
jae
or
je
icebp
je
mov
imul
imul
and
adc
push
insl
int3
fstps
xchg
xor
mov
lret
jno
xor
mov
mov
sbb
test
out
jbe
std
cld
lock
dec
mov
stc
outsl
rcrl
fs
repnz
out
jbe
rorl
loopne
popf
push
test
in
inc
in
lock
dec
cmp
jg
mov
sbb
pop
jecxz
jecxz
movsb
arpl
es
insl
mov
lcall
cmp
in
mov
leave
in
jne
clc
dec
xchg
iret
stc
ret
addl
cld
mov
pop
adc
adc
xchg
pop
push
xor
in
push
repz
js
icebp
adc
add
not
jae
daa
mov
por
jae
out
mov
outsb
loope
add
push
rep
cmp
imul
cs
push
adc
pop
jl
mov
sbb
cmp
cltd
or
outsl
cmp
push
inc
repz
jnp
loop
pop
loope
mov
subl
mov
dec
out
idivb
shll
repnz
loopne
pop
dec
lret
cmp
and
xchg
hlt
cltd
insl
ret
push
dec
arpl
push
dec
jl
mov
in
xor
mov
mov
hlt
pop
xchg
mov
xor
inc
rcrl
xchg
les
mov
jle
or
fcomi
aad
sbb
jnp
mov
gs
jo
sbb
dec
rolb
xor
scas
mov
loop
cmp
popf
push
test
pop
cmpsb
xor
or
jl
push
iret
mov
out
es
cld
daa
xor
adc
jmp
rol
jg
repz
fistl
pushf
fldt
daa
aas
in
std
push
sbb
sti
aaa
sbb
cltd
xor
jns
pop
inc
aad
and
out
test
in
scas
sarl
push
inc
push
test
lret
or
adc
mov
push
ja
mov
enter
inc
out
inc
popf
jbe
out
adc
mov
scas
pop
in
mov
lcall
xchg
xchg
mov
popa
push
mov
jo
mov
adc
adc
or
mov
outsl
push
xchg
jl
je
xor
dec
pop
push
mov
mulps
cmpsl
jns
sub
xor
cmpsb
mov
dec
dec
inc
add
mov
mov
out
jmp
lcall
xchg
add
fs
mov
lret
es
fistpl
dec
aad
adc
addr16
cltd
cmp
mov
rcrb
xchg
fdivl
out
loop
mov
fsubp
dec
enter
mov
xchg
inc
popf
popa
jo
ja
mov
add
pop
xchg
pop
sahf
shrb
add
fisttps
in
dec
sbb
repnz
rcr
push
jecxz
ss
icebp
mov
inc
cmp
pop
daa
adc
push
pop
cld
dec
nop
push
cmp
add
pop
mov
dec
insb
nop
faddl
iret
sbb
lock
movsb
or
xchg
pushf
cmp
aad
sbb
mov
mov
jl
std
mov
dec
adc
enter
jnp
jmp
dec
dec
sub
sbb
xor
cli
pop
cwtl
adc
fsubrl
xor
sbb
fistpl
test
mov
pop
test
test
pop
pop
mov
pushf
mov
popa
cmpsl
lds
lock
and
adc
sbb
sub
cmc
scas
ret
mov
xchg
addr16
aam
xchg
jecxz
adc
ljmp
pop
or
out
lock
mov
push
cmp
rol
xchg
push
lret
icebp
movsl
andb
xor
add
xchg
hlt
sub
outsb
enter
call
out
mov
cmp
xchg
inc
leave
sti
jne
and
mov
in
scas
jecxz
and
notl
cmp
int
hlt
mov
rorb
sbb
push
cmc
pop
inc
adc
cmc
movb
push
pop
rolb
xor
clts
lods
jb
push
or
xor
loope
clc
add
cs
jnp
inc
fdivr
enter
jl
mov
push
inc
pop
out
jae
cwtl
sbbb
cmp
fisttpl
mov
cmp
stos
gs
fistps
adc
mov
pop
cmp
fwait
imul
std
push
cmp
jae
jbe
lret
push
js
push
stos
scas
add
fwait
negb
cmpsb
or
fisubrl
lahf
arpl
pop
sarl
data16
push
inc
dec
or
and
fdivrs
push
mov
ds
mov
jp
lret
pop
sub
repnz
push
fcompl
xchg
aas
xchg
in
mov
aas
pop
test
stos
stos
and
adc
sarb
dec
test
mov
and
test
mov
xchg
inc
pop
clc
movsl
xchg
cmp
jle
sbb
lods
aas
or
add
push
arpl
mov
xchg
lods
iret
xchg
testl
cmpb
in
lahf
shlb
fstps
xchg
inc
lock
test
xchg
out
pop
push
or
fildl
lret
fdivr
jae
sub
js
arpl
sub
aas
mov
shrl
enter
pushf
dec
divl
sub
or
push
call
arpl
out
xchg
out
daa
sub
popf
adc
in
mov
fsts
fadds
test
dec
shll
pop
mov
daa
dec
jg
test
aaa
mov
sub
sub
push
cmp
daa
sbb
push
inc
iret
xor
push
clc
mov
mov
push
sbbb
xchg
test
lea
lock
shr
add
or
add
and
mov
ss
or
and
ds
inc
fisubrl
cmp
ret
out
mov
adc
push
mov
push
int
ret
ret
push
ja
fiadds
in
add
cmp
cmp
adc
lea
mov
cmp
mov
stos
subb
faddl
push
push
cli
int
insb
std
stc
mov
shrb
cmpsb
mov
pop
pop
mov
pop
adc
das
xor
mov
jo
mov
mov
cmp
test
fcomps
and
ljmp
cmpsb
loopne
loop
adc
ficoms
or
call
mov
in
mov
dec
sub
cmp
add
cmp
stc
cld
fs
in
add
mov
lea
mov
sub
push
sarb
add
sub
cmpsl
popa
repz
lcall
out
and
xor
xor
into
xchg
xor
cmp
test
ja
and
pop
mov
push
mov
xchg
push
daa
cmpsb
lahf
rcrb
arpl
adc
jl
mov
jecxz
data16
sub
test
jne
push
lods
cwtl
hlt
pop
inc
fimull
test
arpl
cmpsb
lcall
jno
xchg
cmp
ret
xor
mov
mov
add
test
push
sbbl
xchg
pop
call
xchg
je
ljmp
cmp
jp
arpl
loop
sub
fldln2
sbb
subl
in
xchg
sub
inc
adcb
leave
mov
jmp
mov
pop
inc
or
jo
ljmp
push
jb
dec
ja
push
hlt
pop
pusha
pop
pop
or
add
dec
inc
push
leave
dec
fdivrl
outsl
mov
testl
inc
pop
pop
lea
hlt
rcr
lret
sbb
ds
inc
jae
mov
ret
jmp
cmpsl
xchg
mov
je
aas
jmp
fidivrl
nop
ja
push
push
mov
xor
add
js
add
lcall
cwtl
cmp
stos
adc
xchg
loope
lea
dec
ss
ror
pop
lret
pop
into
std
aam
mov
jmp
decl
lea
cltd
mov
dec
lds
mov
xor
jg,pt
adc
push
pop
cmpsl
pop
testb
inc
adc
loopne
or
mov
aas
xchg
sbb
fildll
and
pop
sbb
rcr
jb
sbb
fwait
sub
movl
bound
jbe
mov
mov
mov
call
pop
push
pop
pop
mov
int
adc
sub
dec
test
add
dec
mov
ror
pop
adc
and
cmpsl
sbb
jns
out
inc
cmp
xchg
outsl
adc
xchg
cmp
sbb
mov
jbe
add
lods
cmp
xor
jnp
pop
add
xchg
in
push
repnz
push
aas
int3
loope
pop
es
pop
sbb
gs
in
pushf
and
cwtl
inc
loop
divl
mov
inc
lods
sub
pop
loope
lret
xchg
arpl
insb
fs
add
clc
mov
adc
in
mov
inc
mov
inc
cltd
add
jp
mov
cmp
push
das
ss
stc
mov
in
nop
inc
pop
jle
subl
jne
lret
sub
lahf
dec
sbb
daa
xor
lods
ret
test
loopne
mov
imul
hlt
inc
jmp
jmp
push
into
pop
nop
or
lcall
je
ficoml
sub
mov
and
jg
repnz
add
sub
loopne
push
push
and
lcall
ljmp
mov
add
add
fldcw
inc
mov
cli
mov
and
pop
cli
ret
xchg
fildll
mov
loopne
sub
hlt
nop
mov
jp
orb
sbb
sbb
mov
jns
xchg
xchg
mov
xor
in
mov
pushf
dec
in
data16
popf
mov
cmp
lret
xor
daa
sub
std
popf
mov
rorl
pop
pop
aam
cmpb
pushf
mov
clc
add
lea
cmp
ja
popa
fcos
and
mov
jecxz
insl
cmp
adc
cmp
ret
mov
movsl
inc
adc
mov
repnz
pushf
stc
sbb
enter
adc
pop
mov
mov
push
jae
lods
push
mov
rcr
mov
push
aaa
jp
push
mov
int3
mov
mov
loopne
cmp
pop
sub
push
nop
cmp
push
mov
icebp
cltd
ret
mov
enter
int3
sub
and
pop
arpl
in
stc
xchg
mov
adc
call
xabort
cmp
outsl
out
mov
jp
mov
and
pop
imul
popf
inc
xor
or
in
inc
pop
adc
pop
bound
fmuls
sbb
test
orl
inc
dec
dec
mov
sahf
jecxz
xor
adc
stos
sub
cmp
jno
jecxz
push
std
scas
popa
test
mov
inc
mov
sti
cli
push
and
add
sub
inc
in
mov
shll
sbb
add
pusha
ret
pop
roll
sbb
xchg
adc
rolb
addl
ret
test
pop
xor
pop
std
ja
js
adc
cmp
pop
les
sarl
xor
mov
jge
outsl
sbb
shlb
sub
adc
jl
setae
pop
lods
adc
cmp
jno
mov
add
lcall
shrl
dec
sahf
sub
fisubl
ret
rorb
test
shll
mov
addr16
xlat
jge
inc
jns
fisubrs
lahf
adc
divl
imul
daa
fidivl
sbb
cmp
push
xor
cmp
lret
test
push
and
fmull
cmp
mov
add
std
inc
cmpsb
psrld
add
mov
outsl
pop
outsb
aam
cmp
mov
gs
mov
mov
mov
cmpsl
xor
pushf
push
cld
mov
pop
movsl
push
push
cs
mov
cmpl
inc
or
pop
rol
nop
jg
push
jmp
ficoml
xchg
xchg
pop
movsl
out
mov
xchg
js
pop
icebp
mov
adc
imul
lret
mov
and
popa
dec
mov
sub
pop
ficoml
mov
imul
loope
pop
imul
or
jp
push
dec
mov
loop
sub
rolb
xchg
mov
mov
inc
add
inc
cmp
mov
call
adc
cld
sti
cmpsb
mov
or
push
jle
aas
lods
dec
mov
imul
mov
pop
and
cmc
mov
mov
mov
or
pusha
inc
jns
imul
adc
daa
or
push
pop
push
jmp
repnz
lret
movl
cmpsb
call
dec
lahf
xchg
mov
cli
repnz
sub
lcall
inc
ja
mov
and
or
sub
mov
inc
jbe
shlb
imul
adc
jg
xlat
push
fcompl
sub
insb
mov
jge
fildl
stos
xor
inc
imul
inc
daa
sbb
out
dec
sbb
sub
xchg
xchg
mov
cmpsb
mov
jecxz,pn
xlat
jnp
sbb
sarb
cmp
cmp
adc
addb
fidivrs
xchg
int3
pop
jbe
mov
push
mov
jbe
sub
mov
inc
pop
lcall
inc
sub
idivl
pop
xchg
out
mov
mov
cs
adc
lcall
mov
sbb
sub
adc
ja
popa
push
scas
push
lods
and
in
jl
mov
aam
add
les
jbe
jl
cmp
and
mov
loopne
jb
test
arpl
test
dec
fsub
jecxz
dec
scas
lret
dec
cmpb
imul
mov
mov
mov
pop
js
inc
stc
dec
push
xor
in
mov
xor
out
orb
into
cmpsw
sbb
es
xor
xchg
sbb
cmp
mov
clc
popf
mov
bound
es
cwtl
ret
les
mov
xchg
cmp
inc
sub
mov
pop
or
ds
sub
mov
add
xchg
push
mov
mov
into
jnp
fmull
leave
mull
push
push
dec
lock
leave
sar
ss
mov
push
push
outsl
sub
jge,pt
mov
mov
mov
jp
jmp
push
inc
pop
push
sub
sub
mov
jnp
and
mov
fldenv
xorb
movsb
mov
sarb
push
push
fisubs
and
mov
sbb
jne
cltd
mov
aaa
cld
int3
and
add
push
and
inc
jp
pop
sub
jge
or
mov
out
push
xor
xor
sbb
push
pop
int3
mov
dec
push
sti
sub
xchg
inc
push
sbb
ret
gs
lcall
dec
mov
pop
push
ror
in
enter
jne
daa
push
mov
filds
int3
daa
in
mov
or
jo
pop
rcrb
sti
inc
lods
or
cltd
mov
dec
inc
xor
andl
ret
aaa
add
mov
movsl
lcall
mov
mov
jnp
ds
sbb
dec
inc
dec
adcl
sti
jbe
lret
pusha
andb
imul
dec
aad
push
pop
in
add
js
fsincos
and
push
add
jne
cmp
pop
mov
in
jae
out
mov
dec
push
out
xor
sbb
inc
imul
pop
mov
cld
sub
out
in
stos
xchg
mov
rol
mov
push
mov
imul
push
fmull
and
mov
icebp
dec
adc
fisubs
xor
jae
inc
pop
add
jb
push
cmp
jne
lea
cmp
enter
add
cwtl
jp
adc
out
sahf
push
int3
scas
mov
xchg
and
fidivrs
enter
xchg
imul
cmp
mov
add
aas
inc
push
adc
mov
arpl
jne
repnz
scas
pusha
pop
mov
sub
pop
inc
jbe
jmp
sub
sbb
xchg
dec
jmp
sbb
mov
xor
nop
or
cmp
or
or
mov
fstp
ss
or
pop
clc
push
arpl
sbb
std
mov
jmp
mov
inc
test
enter
dec
dec
pop
adc
adc
rol
push
xor
stc
push
lret
jl
sarb
test
xchg
jae
mov
jle
xchg
fisttps
sub
fstpt
cmp
dec
imul
in
inc
fisubrl
xchg
sub
cltd
mov
pop
lret
fwait
ljmp
mov
adc
add
dec
iret
and
into
iret
js
and
stos
sub
push
or
idivb
jno
push
push
sti
lret
adc
stc
mov
mov
icebp
mov
jns
fistps
pop
pop
outsb
ja
outsl
fnstenv
aaa
jecxz
xor
mov
xor
push
out
push
xor
rolb
add
sub
push
mov
mov
dec
mov
xor
mov
mov
push
lock
xchg
sbb
cmp
mov
jge
xor
cmp
pop
adc
jmp
pop
ja
fwait
and
mov
xlat
pusha
int
jge
jp
setno
cmp
and
fdivp
push
decl
sbb
jno
adc
ret
add
xor
dec
shrd
sbb
repz
sub
dec
xchg
dec
xor
adc
add
stc
inc
dec
mov
mov
data16
mov
or
subb
add
ret
popa
ret
or
inc
push
push
mov
lock
cld
sahf
xor
dec
mov
mov
data16
fisubs
dec
or
dec
packsswb
les
enter
inc
push
fwait
stc
iret
jle
hlt
sub
mov
jl
rorl
iret
mov
mov
pop
push
je
dec
xor
pop
lea
fcomip
mov
sbb
lar
adc
out
cmp
neg
imul
xchg
cwtl
jle
out
daa
cmc
xor
test
loop
ret
fmuls
test
cmp
sub
add
fcmovb
fsubrs
and
dec
cmp
and
leave
jbe
fsubr
fidivrl
cli
mov
jmp
or
pop
test
repz
fwait
cmp
fdivrs
into
or
ja
ljmp
sub
rorl
enter
pop
out
icebp
mov
xchg
inc
mov
call
cs
mov
das
out
and
rcrb
ljmp
stos
lret
movsl
dec
pusha
sbbl
leave
mov
sub
mov
push
add
in
aaa
mov
andl
cmpsb
jmp
mov
rcll
out
adc
daa
sbb
xor
inc
pop
fs
jae
insb
in
imul
push
scas
add
sbb
jl
bswap
and
das
addb
in
xchg
lods
or
pop
mov
sub
push
inc
xchg
push
sub
mov
and
push
imul
pop
scas
mov
out
mov
ljmp
mov
ljmp
lcall
ret
mov
outsl
xchg
inc
rorl
xchg
sbb
sbb
pop
cmpsb
pop
fnstenv
mov
lea
pop
dec
mov
mov
push
push
inc
mov
xchg
das
sarl
inc
or
mov
cmp
and
sub
cmpsb
mov
insb
shufps
mov
insl
push
xchg
inc
adc
fidivrl
test
mov
fisttps
jb
xor
sbbl
cmp
mov
mov
lds
sbb
mov
movsl
jne
out
mov
test
xchg
sbb
inc
loope
pop
out
test
pop
or
jle
pop
pop
sbb
nop
xchg
xor
test
jbe
jae
mov
shlw
mov
inc
xchg
leave
rcrl
pop
popf
stos
fstl
lods
fsubrl
pop
movsl
ret
shll
je
pop
sbb
xchg
mov
inc
mov
cmp
lea
xor
clc
stos
and
not
sbb
sub
add
and
fwait
add
adc
loop
in
mov
gs
pop
xchg
jne
xchg
pushf
daa
mov
rcl
fnstcw
int3
clc
pop
in
xchg
in
fistl
in
push
test
fs
jmp
cmp
pop
pushf
xchg
icebp
xchg
fs
nop
cmc
stc
adc
push
insb
mov
push
sbb
or
and
add
das
scas
pushf
aas
sbb
mov
jge
in
rdtsc
pop
ffreep
inc
pop
or
add
xchg
push
test
enter
and
sub
jns
inc
movsl
lcall
and
jbe
in
in
decl
mov
nop
mov
dec
dec
jne
add
xor
in
sub
popa
mov
test
lret
fistpll
lea
adc
or
adc
lret
and
mov
jecxz
sti
mov
cs
orb
adcb
add
loop
lahf
inc
orb
push
push
mov
bound
push
mov
movsb
jne
enter
test
jns
mov
sbb
cmpl
cmp
stc
or
xchg
jo
and
loop
mov
mov
mov
cwtl
insl
ds
xchg
movsl
dec
and
bound
negl
clc
sub
push
adc
push
cmp
xchg
xor
repz
cmp
push
mov
movsb
and
push
mov
cmp
xor
mov
hlt
addr16
pop
pop
jge
fadds
cmp
std
roll
loopne
nop
jnp
sbb
sub
out
lahf
into
cmp
mov
sub
pop
jp
and
into
fistpl
jmp
scas
mov
cmpsb
ljmp
xor
data16
lret
mov
adc
xchg
div
adc
jae
lret
pop
aam
jno
daa
fstpt
addr16
or
and
arpl
sub
or
loopne
mov
flds
test
sahf
fwait
rcrl
xchg
iret
call
outsl
dec
pop
orl
inc
popa
ficompl
jmp
pushf
rcrl
mov
stc
pushf
sarb
sbb
aaa
add
sarl
mov
jae
xor
jle
lret
pushf
xchg
pushf
imul
xchg
gs
outsl
mov
mov
and
push
hlt
sahf
xchg
popf
nop
or
sub
mov
outsb
xor
mov
xchg
adc
aaa
xchg
test
and
pop
add
ljmp
andb
dec
push
shlb
in
jae
pop
stc
fnsave
and
fwait
jns
es
push
jle
repz
shll
popf
sti
inc
inc
aad
xor
sbb
fwait
jo
dec
in
mov
dec
xchg
mov
cltd
xchg
cs
fmull
jbe
pushf
mov
sti
out
jg
int
xor
lds
lahf
js
xlat
mov
out
push
add
pop
inc
push
ja
push
imul
xlat
stos
or
insl
cli
icebp
es
in
divb
push
cmpsl
das
jecxz
mov
das
mov
jnp
xchg
mov
test
mov
divl
push
pushf
pop
push
pop
mov
mov
cmpsb
fwait
repz
push
in
leave
push
xor
imul
sar
std
dec
adc
push
xchg
dec
lods
push
inc
fstpl
lods
out
outsl
sti
jmp
int
xchg
imul
int3
pop
pop
daa
jmp
sub
pop
push
hlt
mov
aad
sahf
aaa
sbb
pop
in
lret
pop
leave
push
dec
pop
aas
test
les
jp
mov
loope
mov
lcall
aaa
icebp
mov
imul
inc
in
xchg
insl
push
call
push
push
into
adc
and
mov
dec
jbe
jno
cmp
shll
and
jmp
inc
scas
or
sbb
outsb
test
test
push
cli
fisttpl
mov
sbb
adc
mov
xchg
pop
int
mov
std
enter
aad
mov
lock
fbstp
sub
mov
out
jns
idiv
mov
inc
dec
scas
pop
inc
insb
lods
test
scas
jne
shrb
cli
mov
mov
adc
and
lcall
ss
xor
dec
cmp
mov
fdivrl
dec
fimuls
pop
int3
xchg
stos
dec
push
rcrb
push
icebp
mov
dec
inc
pop
push
movsb
out
inc
fnstcw
sub
jb
push
cmp
ss
xchg
push
xor
test
insb
mov
in
filds
ret
int
fisttpll
and
adc
add
rolb
insb
sub
sarl
cmpsb
gs
int
les
dec
add
scas
cmpsb
iret
jno
mov
mov
xor
lret
adc
les
imul
lods
jg
pop
push
out
sbbl
push
sbb
xchg
add
sub
mul
pop
adc
jecxz
mov
mov
and
jecxz
stc
fldenv
dec
add
fnsave
fisttpll
jg
test
aas
neg
lea
mov
int
je
popa
cmp
popa
dec
inc
addr16
in
sbb
mov
or
mov
cmp
call
xchg
cmp
mov
lods
and
dec
fdivr
push
dec
sbb
int
push
add
stos
negb
or
movsb
enter
lea
mov
jnp
xchg
push
cwtl
mov
adc
movsb
xchg
cmp
cmp
mov
sti
lret
mulb
adc
pusha
sbb
stos
out
int3
adc
hlt
movsl
leave
or
xor
test
mov
xor
pop
ljmp
cld
cld
inc
mov
pop
pop
cmpsl
mov
test
push
lods
sub
hlt
imul
push
jle
xchg
adc
pop
fbstp
aam
mov
adc
mov
jecxz
test
sbb
cmp
mov
dec
mov
cs
cmpsl
cmpsl
aad
pop
nop
sbb
gs
sbb
mov
mov
repz
jb
lock
push
test
sub
fcmovne
push
xchg
adc
jns
ljmp
jp
and
mov
pop
out
xchg
pop
and
aam
jae
sbb
xor
mov
cmp
add
push
mov
lods
sbb
lcall
sbb
sti
test
mov
and
sub
xchg
mov
xlat
dec
hlt
sub
inc
rorl
sahf
loope
pop
loopne
dec
nop
inc
stos
in
les
mov
outsb
add
push
leave
fs
and
shr
jl
pusha
das
push
scas
cmp
xchg
mov
cmp
shll
xlat
imul
xchg
dec
mov
inc
lahf
push
lcall
outsb
test
mov
add
out
test
pusha
outsb
adc
lock
sahf
xchg
ret
cmp
jbe
jae
mov
mov
sbb
lock
inc
pop
jno
add
mov
bound
ror
dec
sbb
add
test
sbb
loop
xor
jecxz
mov
adc
lods
shlb
adc
aam
mov
icebp
repz
insb
out
lcall
shlb
jnp
test
rorb
xchg
mov
push
cmp
in
ljmp
int3
outsl
adc
stos
inc
and
push
shr
ret
inc
lods
sub
int
sti
dec
jo
fbld
jae
pushf
sbb
add
int
clc
rcr
and
add
fisubs
ret
add
outsl
pop
js
cmp
sub
or
faddp
xor
movsl
ds
add
inc
std
pop
imul
filds
ror
mov
cmpl
cmp
orl
or
jecxz
dec
lods
shrl
adc
insb
or
xor
out
out
jb
push
iret
add
mov
xchg
dec
push
lea
outsb
js
fldt
fisubl
and
mov
cmpsb
mov
sub
sbb
arpl
jge
inc
loopne
xor
in
lds
call
xchg
cmp
cltd
push
test
fcmovu
cmc
add
sbb
jo
ljmp
rolb
sbb
sub
xchg
sbb
dec
insl
jecxz
lret
and
andl
fnstenv
sbbb
jb
mov
sub
jbe
jmp
fs
fsts
int3
popf
call
hlt
roll
pop
adc
mov
popf
outsl
hlt
mov
test
call
arpl
stos
imul
insl
dec
ljmp
fldcw
cwtl
xor
leave
cmp
jbe
or
push
and
sti
xchg
and
js
or
pop
adc
and
mov
hlt
fs
push
adc
mov
push
inc
mov
xor
adc
lcall
std
fmull
inc
out
gs
out
inc
jb
inc
cmp
xchg
mov
and
adc
cld
pop
mov
cmp
cltd
dec
xor
js
push
mov
xchg
jno
js
push
popf
sub
push
sbb
xor
fdivs
in
js
xlat
add
lock
mov
sti
fldenv
xchg
jge
add
daa
call
xchg
xorl
movsl
fs
scas
or
out
repnz
mov
rcrl
xchg
fcomi
sbb
ljmp
cmp
and
mov
add
rsqrtps
cmp
cmpsb
call
fs
int
and
cs
cltd
lret
cs
imul
out
sahf
jb
loope
roll
or
mov
mov
ja
lock
push
repnz
jecxz
mov
and
pop
sbb
adc
adc
jb
pop
mov
xlat
dec
dec
daa
push
jbe
push
sbb
out
xlat
out
int
push
cmpsl
cmc
lods
sub
and
push
ficoms
or
std
pop
incl
mov
sbb
shll
add
lock
pop
out
out
int3
fstps
in
add
in
mov
pushf
add
les
neg
cmp
test
inc
jbe
movsl
xchg
in
data16
mov
outsl
addl
fists
pop
xlat
or
js
pop
out
bound
xor
test
sbb
test
pop
jp
inc
jnp
sbb
and
pop
jl
test
mov
pushf
xchg
es
insb
pop
sbb
sub
mov
nop
push
jb
sbb
dec
xlat
ret
jno
and
lahf
push
jns
lcall
jmp
and
cmp
mov
jg
lods
cli
orl
mov
add
lret
es
mov
addr16
ret
pop
das
lahf
mov
cmp
and
call
inc
cmp
pushl
mov
into
fs
push
in
imull
inc
sbb
mov
loopne
pop
xchg
mov
sub
inc
inc
jl
adc
pushf
push
sbb
jb
pop
mov
xor
into
and
insl
mov
mov
jbe
mov
and
add
leave
arpl
movsb
and
testb
jb
jecxz
imul
xchg
bound
bound
sub
jecxz
cli
mov
imul
pop
out
imul
sahf
push
pop
ljmp
cmpsb
lods
mov
outsl
andl
xor
pop
pop
imul
jnp
roll
cli
push
test
repnz
int3
stc
jbe
lods
mov
pop
and
repz
lret
movsl
arpl
sbb
ret
out
popf
adc
aaa
mov
or
rcrb
dec
inc
pop
cmp
sub
mov
mulb
add
xchg
adc
push
xchg
and
hlt
jae
popf
cmp
push
out
aas
jp
cmpsb
fdivrs
pop
cld
jle
push
daa
xorl
ljmp
jae
adc
sti
lods
xchg
mov
mov
pop
and
mov
ljmp
or
cmp
outsl
test
pusha
out
mov
pop
mov
xor
test
arpl
je
adc
or
jae
lret
ds
lret
movsb
xchg
push
xchg
pop
mov
add
popf
xor
repz
mov
nop
repnz
jb
mov
and
pop
xchg
decb
jno
cmpsb
stos
add
xchg
cmp
das
fildll
jns
lcall
pop
out
inc
adc
mov
shlb
sbb
mov
leave
and
mov
stc
add
mov
cli
push
pop
call
jg
mov
repnz
leave
push
mov
pop
lds
inc
pop
add
mov
push
mov
cmpsb
adc
add
outsl
sub
or
hlt
into
lahf
lahf
aam
testb
shl
and
into
xchg
mov
mov
mov
cwtl
test
pop
dec
xchg
sbb
sub
int
in
aaa
ljmp
iret
daa
in
faddl
cmp
lea
adc
mov
outsb
sti
xchg
int3
leave
scas
and
and
mov
divb
pusha
loop
rorb
aam
mov
and
mov
into
iret
sbb
xlat
ror
fstpt
fimuls
sub
dec
sbb
outsl
ficomps
mov
or
test
bound
jmp
aam
inc
pop
enter
mov
sub
int
sbb
popf
push
adc
and
test
jp
pop
sub
stos
ljmp
ds
lret
in
mov
adc
sarb
mov
movl
popa
inc
enter
leave
pop
out
into
into
insl
push
stc
clc
fnstenv
pop
not
out
xor
and
adc
fidivs
divb
jecxz
dec
addr16
outsl
sub
pop
daa
sub
push
and
jnp
and
mov
mov
aad
outsl
xchg
xchg
fisubrl
mulb
pop
xor
in
fimuls
pop
ss
mov
mov
fnstenv
mov
xchg
mov
cmp
es
cmc
jae
iret
andb
xor
nop
fsts
and
inc
jo
sbb
xlat
sahf
push
cli
add
scas
das
int3
dec
mov
cmp
jmp
dec
and
add
pusha
mov
sahf
pop
ss
hlt
sub
pop
pushf
push
or
mov
jb
xorl
and
stos
pop
in
fisubl
ret
aam
mov
fcoml
xchg
nop
jmp
jne
int
jp
iret
pop
test
sahf
pop
mov
loope
mov
pop
or
add
xchg
lds
lods
mov
shrl
sbb
mov
pusha
testb
dec
inc
jmp
iret
into
xor
aaa
out
popf
or
subl
sar
pop
arpl
xchg
inc
mov
push
mov
test
int3
dec
insl
sbb
jns
lret
xchg
bound
aaa
ret
nop
rclb
lahf
jnp
dec
fcomps
testl
cmp
mov
pop
lcall
or
cmp
out
xlat
pop
mov
push
mov
sub
xor
sub
dec
mov
dec
mov
out
mov
imul
cs
push
mov
hlt
aam
mov
and
divb
jg
add
lds
add
into
cmp
sub
insb
mov
stc
fsubrs
pop
leave
stc
movsl
sbb
inc
mov
xchg
lock
push
sbb
dec
cmpsl
sbb
mov
dec
imul
inc
cmp
push
xchg
xor
inc
mov
or
test
loope
enter
push
std
lcall
dec
fwait
jecxz
push
outsb
or
mov
sbbb
sub
js
add
lret
add
shlb
imul
xchg
or
in
pushf
jle
push
into
sub
push
stc
aam
or
ret
jno
mov
xor
jne
es
ja
adc
mov
push
mov
sbb
jbe
mov
add
pushf
out
jge
dec
pop
int
fisttpl
pop
in
int
aad
lock
lret
shll
xchg
data16
mov
into
cli
aad
sar
je
jnp
lea
dec
xor
sbb
nop
xchg
sub
enter
mov
sti
mov
outsl
sbb
sbb
add
in
xchg
mov
out
xchg
xor
adc
adc
std
push
mov
or
sbb
push
xor
std
xor
xor
add
push
push
fwait
adc
rep
dec
lods
xor
outsb
lret
imul
les
pop
sbb
and
sub
push
fwait
repz
scas
or
xor
adc
es
ret
out
pop
mov
or
and
shrl
dec
ss
fst
dec
adc
in
push
push
imul
dec
xlat
or
mov
cmp
lcall
in
jbe
shll
jns
push
dec
sub
test
xor
fdivl
lret
adc
or
ds
jp
pop
mov
jo
adc
xadd
call
cwtl
push
mov
jae
jbe
cmc
repnz
mov
sbb
fnstcw
scas
jge
lret
dec
xor
xor
cltd
loop
imul
rolb
aas
sahf
cmpsl
inc
pop
test
mov
pop
mov
add
test
negb
mov
adc
imul
dec
sahf
daa
cld
cld
fsubrp
and
mov
pusha
push
push
ja
outsl
xor
adc
mov
mov
lods
outsl
icebp
dec
push
popf
gs
pusha
xor
cmc
insl
inc
cmp
pop
mov
negl
sub
test
adc
and
dec
ljmp
test
mov
and
adc
popa
mov
mov
jbe
add
jg
int3
fcompl
dec
mov
es
aad
cwtl
mov
stos
sbbl
sub
out
rcrb
jbe
movsl
andb
jo
and
pop
mov
jle
sub
idivb
pop
aas
xchg
add
out
sub
xchg
hlt
mov
lods
mov
fisubrs
and
clc
xchg
dec
ret
sbb
jp
jecxz
outsb
xor
lret
dec
out
lods
add
sub
nop
sti
nop
sbb
inc
daa
inc
out
adc
xorb
fstp
idivb
xlat
or
aas
inc
push
mov
fists
lock
inc
adc
xchg
and
add
cmpsb
jmp
xor
cmp
fidivl
in
scas
std
sub
jmp
arpl
aas
stos
cld
out
sub
mov
sbb
xchg
jo
inc
sub
gs
add
arpl
adc
aas
or
cmp
addr16
lea
jns
xchg
sub
dec
fimull
test
xor
mov
aam
push
outsl
hlt
cmp
ljmp
adc
fcompl
iret
movsl
dec
sbb
mov
addb
and
cmp
jno
mov
cmp
xchg
add
es
sbb
cli
add
and
test
outsb
frstor
mull
sbb
outsb
push
mov
ss
iret
sbb
adc
jnp
test
je
into
ret
xchg
shr
subb
lods
and
mov
pop
push
scas
cs
fidivrl
rcr
xchg
nop
xor
sub
mov
mov
sub
cmpsl
out
cltd
lahf
and
mov
stos
es
stos
mov
xchg
xchg
jns
pop
push
push
adc
pop
cli
lahf
fnstcw
popf
sbb
ret
rclb
test
daa
sub
dec
insb
enter
push
fdivrl
aad
or
xchg
pop
les
outsl
ljmp
xchg
jbe
push
jno
cli
adc
subl
scas
in
dec
cmc
adcb
xlat
cld
adc
sub
sbb
xchg
mov
loop
sub
stc
mov
mov
sub
xor
repz
cli
mov
scas
sub
lods
push
jecxz
pop
push
mov
and
mov
cmpsb
scas
jmp
loope
or
sub
mov
cltd
mov
sbb
xor
rclb
out
int
outsb
jns
pop
dec
xchg
add
jns
pop
movb
mov
jp
call
fcmovnb
pop
cltd
into
mov
loop
sti
adc
sbb
push
sbb
push
mov
js
fidivrs
inc
xchg
inc
cmpsb
push
pop
pop
push
orb
lods
sub
jmp
sub
sbb
repz
push
sbb
jg
lods
cmp
xor
lds
orb
mov
ret
insl
xchg
pop
adc
jo
xchg
push
cli
pop
add
sub
rorl
call
pop
cmp
pop
fcmovnu
jno
adc
fisubrl
loop
lods
push
pop
jns
aam
push
pop
addl
or
sbb
dec
std
add
sbb
dec
pop
sub
test
imul
or
mov
xchg
ss
insl
test
cmp
inc
icebp
sub
mov
pop
inc
add
fldcw
es
mov
push
shr
add
cmp
and
lcall
decl
sbb
mov
xchg
sbb
mov
xchg
jo
fwait
cltd
leave
mov
mov
int
add
out
adc
cmpsl
fdivrl
addr16
fisubrs
loopne
pop
clc
xchg
pop
pushf
les
nop
adc
je
js
stos
jnp
scas
add
cmc
pop
fcmovnbe
push
dec
dec
push
mov
pop
out
pop
sbb
popf
push
jge
cmp
or
adc
sti
xlat
roll
or
jns
cwtl
sbb
lods
fsubs
ljmp
inc
fdivs
test
faddp
lahf
pushf
data16
mov
xor
mov
jle
adc
adc
cmp
sub
fimull
fcmovne
xor
sub
aaa
xor
pop
es
add
jb
add
or
or
cmp
sbb
pop
int3
shr
movsb
rolb
ljmp
les
lds
cmc
xor
outsb
and
insb
ret
aaa
xor
inc
adc
movsb
cmpsb
jns
jle
mov
add
add
sti
inc
xchg
insl
xor
loop
lret
ss
popf
or
jle
cmpsb
jne
adc
mov
pushf
jl
inc
xchg
cmpsl
pop
arpl
xchg
cli
clc
cmp
out
xor
mov
or
cmc
out
into
es
sti
dec
pop
and
adc
daa
pop
iret
jae
cmp
int3
repnz
into
out
pop
lds
dec
adc
dec
jle
sbb
xchg
inc
mov
aam
daa
jmp
inc
mov
xor
imul
pop
sbb
leave
xchg
xor
xchg
mov
push
test
shrb
mov
or
push
add
inc
mov
pop
pushf
add
gs
sahf
lret
call
adc
sub
pusha
inc
insb
call
xchg
call
shrl
and
filds
shlb
xor
in
dec
inc
jge
mov
pop
fdivrs
mov
jle
fstpl
cmp
popa
dec
cmc
icebp
stos
loope
sub
shll
mov
xchg
xor
or
sahf
movsl
or
dec
sbb
pop
orb
movsl
cmp
sub
push
mov
fwait
int3
subb
leave
out
fs
movsb
outsb
movsb
stos
jle
jl
push
fdivs
push
mov
icebp
adcb
dec
lods
scas
dec
sub
pushf
xchg
inc
loope
test
cs
loopne
repz
mov
pop
shr
cli
gs
sbbb
loope
addl
sbb
jb
icebp
mov
and
mov
lcall
cmpsb
sub
or
imulb
into
jno
add
mov
stos
mov
inc
arpl
arpl
cmp
add
sbb
cmovge
lahf
push
pop
mov
cli
push
js
les
rolb
es
addr16
test
push
or
xchg
cmp
jo
jge
test
insl
mov
std
mov
outsl
xlat
cmc
lcall
jmp
call
or
std
mov
out
mov
xchg
and
cmc
test
and
xchg
xlat
xchg
loopne
enter
add
jecxz
mov
inc
dec
jge
or
outsb
jne
vmovq
fwait
mov
ror
xchg
mov
pop
xor
outsb
sbb
cmc
cmc
cmp
inc
mov
add
mov
into
aas
push
mov
rorb
pop
movl
push
mov
insl
imul
sub
mull
mov
loop
bound
or
push
push
lcall
das
in
mov
mov
sub
and
cld
jge
adc
dec
inc
cmp
xchg
jbe
cmp
add
fidivl
xchg
or
xor
dec
mov
mov
add
insb
daa
cli
movsb
movsb
pop
mov
push
or
repz
push
mov
xchg
mov
or
ljmp
das
mov
mov
lcall
dec
mov
out
aas
pusha
inc
imul
jl
push
cmp
pop
pop
adc
add
mov
mov
or
push
fstps
jns
ds
mov
js
fldl
cmpsb
and
jno
jp
xchg
pop
mov
repnz
ret
cmpb
mov
sub
sub
mov
xchg
test
sbb
fisttps
pop
or
mov
cmp
inc
jmp
sub
fmull
es
movl
fdivrs
pusha
int
cmpsb
adc
mov
or
push
dec
out
sbb
mov
aam
outsb
and
popf
iret
and
sbb
nop
and
into
test
js
mov
pop
mov
mov
xor
js
in
jecxz
sub
mov
shrl
inc
sub
mov
push
rorl
nop
jbe
mov
jae
aam
pusha
out
add
pop
mov
or
pop
push
inc
imul
inc
mov
insb
cld
sahf
push
dec
mov
not
xor
xchg
cmp
push
and
aaa
dec
and
sbb
mov
jg
sbb
fldenv
shl
icebp
sbb
adc
enter
inc
jl
add
lret
rcrl
ja
mov
push
xor
loope
xchg
daa
adc
xchg
shll
pop
lret
jp
mov
dec
imul
imul
mov
int3
inc
mov
insb
je
sbb
jo
pop
pop
mov
add
pop
mov
aam
addr16
testb
enter
cltd
push
xor
xor
out
rorl
jae
xor
arpl
xchg
jp
mov
adcb
or
or
movsb
mov
mov
sbb
pop
in
test
and
out
sub
out
mov
cmp
push
cltd
push
shl
out
mov
rclb
push
aaa
shrb
mov
test
inc
lahf
pop
fiaddl
pop
adc
repz
push
dec
repnz
test
push
xor
movsb
or
ja
rcll
xor
iret
cltd
repnz
addr16
mov
cmc
mov
mov
xchg
jns
adc
ret
sahf
add
lret
repnz
repnz
or
dec
push
sub
mov
out
out
push
pop
fs
xor
cwtl
adc
cld
enter
out
adc
cmp
lods
les
scas
test
inc
push
push
push
fwait
inc
std
mov
fs
sbb
pop
adc
dec
pop
push
lahf
xor
cmp
sbb
repz
xchg
ret
loop
xor
ret
push
lds
sub
sub
xor
jle
mov
xlat
fisubrs
push
mov
rcll
popa
or
mov
fcmovnbe
push
cmp
pop
sbb
negl
sbb
xor
adc
jb
jle
arpl
xchg
iret
jbe
adc
mov
repnz
aaa
pop
dec
dec
fistpll
lret
dec
cli
sbb
mov
repz
fbld
stos
ret
in
adc
idivb
loopne
jle
arpl
mov
pop
ds
and
xchg
out
hlt
push
stos
add
pop
shlb
aaa
imul
sbbb
stc
sub
dec
mov
clc
sub
xchg
xchg
xlat
pop
cmc
out
sub
xor
sbb
lret
push
data16
cmp
xlat
pop
mov
xor
nop
insb
ret
jne
mov
out
jmp
cli
repz
push
jns
out
int3
movsb
xchg
loope
cmp
lahf
fisttpll
inc
in
push
ret
or
push
pop
cwtl
add
js
shr
xchg
xchg
xlat
loop
out
pshufw
adc
fs
shl
xchg
lock
popa
ror
xor
and
mov
adc
mov
aad
ss
shrl
stc
jge
dec
or
iret
xchg
je
cld
out
or
mov
cli
das
repz
cmpsb
sar
popa
loop
in
jmp
lds
test
pusha
scas
mov
lods
mov
pop
cmpsl
cwtl
lock
xchg
pushf
xor
fdivs
arpl
add
xchg
pop
shlb
xchg
sbb
std
pushf
xlat
add
sub
aam
dec
dec
hlt
push
int
and
bnd
mov
jmp
cmc
push
popa
or
sbb
push
ss
lea
cs
pop
xchg
rdtsc
mov
sbb
call
test
jl
ret
push
push
xchg
fistpll
cmp
lret
pushf
das
call
xchg
stc
es
inc
xchg
cmp
mov
xchg
mov
mov
xor
jns
icebp
ja
imul
notl
sub
outsb
lods
pop
jnp
stos
imul
add
je
xabort
lods
outsb
movsb
xchg
aad
push
inc
fstpt
xchg
dec
push
fbld
mov
add
cmp
in
int
pop
fisubrl
dec
loope
rcll
lret
or
mov
fwait
clc
sbbb
mov
es
jmp
lock
inc
sub
adc
mov
call
cld
mov
adc
push
push
adc
outsl
jl
xchg
repz
pop
pop
jne
mov
pop
push
xor
mov
mov
andl
mov
lcall
pusha
and
xor
mov
mov
push
sbb
fcmove
inc
sbb
rclb
jnp
sbbl
push
cmp
xlat
jmp
pop
pop
xchg
fstpl
or
scas
loopne
aad
push
sbb
mov
pop
xchg
imul
and
mov
arpl
andl
xor
mov
mov
xchg
testl
adc
mov
mov
in
jle
inc
xchg
jns
pop
mov
pop
sub
out
and
sub
cs
das
lret
and
std
jge
outsb
sbb
jl
inc
fcmovu
jb
cmpsb
inc
repnz
outsl
lret
and
sahf
out
faddl
pop
aad
add
in
ret
xchg
xor
das
sub
mov
test
and
xlat
fiadds
push
cmp
sbb
or
xchg
cmp
stc
jno
or
pop
sbb
or
lds
clc
mov
ror
lea
popa
dec
cld
push
cmp
inc
lock
subb
add
cwtl
fstl
pop
xor
jle
hlt
idivl
call
mov
enter
sub
cmpsb
mov
out
mov
and
pop
and
ret
das
pop
adc
fcomi
inc
loopne
xlat
xchg
xchg
int3
xor
cmp
mov
inc
les
mov
dec
sarl
repz
into
addb
cmp
data16
xor
mov
adc
ljmp
and
scas
inc
mov
sbb
mov
mov
stos
push
decb
mov
mov
push
jae
mov
lock
push
adc
add
lahf
scas
sbb
std
xchg
cmpb
mov
cmp
dec
lods
je
pop
mov
lock
xor
mov
push
fmulp
stos
lock
mov
popf
add
jg
add
loop
jmp
mov
clc
xchg
das
shll
cmp
test
xlat
lods
sub
test
rep
stc
lret
pop
and
fwait
std
pop
mov
pop
inc
pop
shrb
movsb
sti
test
daa
scas
mov
mov
lods
cli
mov
popf
xchg
pop
inc
cmp
or
mov
loop
fildl
stos
dec
ljmp
rcrb
xor
dec
cmp
push
or
push
jns
and
push
aam
lods
jl
xchg
outsl
iret
in
and
pop
pushf
fisttpll
jb
dec
push
push
add
xchg
or
mov
icebp
jno
iret
mov
test
push
cmc
push
stc
icebp
and
add
sub
orb
pop
scas
xor
add
dec
repz
sbbl
ret
xchg
fsubl
xor
icebp
call
xchg
jmp
out
repz
fisubrs
pusha
pop
cmp
xchg
nop
ljmp
dec
add
mov
xchg
mov
and
push
xchg
jecxz
aam
ret
dec
xor
xor
mov
dec
push
xor
notl
xlat
std
call
stos
adc
cmp
cwtl
sbb
int3
icebp
fs
imul
arpl
xor
lea
jne
repz
mov
loopne
imul
mov
into
push
jmp
daa
sub
out
cmp
jbe
adc
cmc
xchg
dec
aaa
sti
mov
mul
bound
scas
adc
jecxz
sub
mov
js
loope
dec
aas
mov
stos
jg
add
mov
mov
or
mov
adc
adc
jecxz
dec
xlat
sarb
xchg
lock
addr16
mov
insl
stos
adcl
cwtl
lea
xchg
je
cmp
xchg
push
jbe
aad
sub
xor
or
aas
adc
gs
dec
jge
mov
mov
sbb
stc
dec
mov
fdivl
pop
cwtl
pop
ljmp
inc
cmp
and
and
jl
mov
push
or
or
inc
stos
add
lods
fadd
mov
xchg
mov
mov
xor
adc
adc
add
outsb
imul
les
mov
imulb
pop
xor
mov
pop
fistpll
ljmp
mov
cmp
stc
je
sub
loopne
mov
and
aam
fs
loope
jp
insb
iret
call
test
insl
lret
xchg
pop
into
jbe
push
stos
rcl
dec
sbb
push
sarl
xlat
ficomps
adc
push
push
in
scas
lock
pop
and
shlb
out
insl
jg
push
ret
mov
orb
or
mov
adc
loopne
mov
sti
cltd
sbb
or
mov
dec
jecxz
adc
fisttpll
lock
dec
jmp
ficompl
push
xlat
pop
cmpsb
aam
cmp
mov
adc
add
aad
repz
loopne,pn
sti
stos
rcrb
in
int3
mov
sarb
xchg
add
outsb
or
inc
pop
xor
sarl
mov
adc
add
cmp
loopne
push
rcrl
xchg
mov
jl
aas
std
mov
aaa
xor
push
loop
jne
jno
pop
xor
ret
sbb
sahf
arpl
jns
mov
sub
jmp
stc
mov
es
sub
ret
stos
mov
dec
sbb
xor
icebp
sbb
scas
dec
leave
outsb
push
leave
lods
pusha
int
fincstp
ja
sahf
rorl
push
push
pop
sti
mov
nop
divb
or
jmp
xchg
cwtl
dec
loop
and
lret
lret
adc
dec
mov
lret
testl
xchg
movsb
test
sbb
inc
test
mov
out
mov
cmc
clc
fidivs
adc
push
das
dec
clc
stc
movsl
push
lock
mov
pop
mov
je
movsb
js
cmp
mov
xor
lea
inc
xchg
sar
cs
mov
imul
mov
sub
out
std
push
pop
clc
cmp
add
mov
test
cs
test
insb
xchg
frstor
push
adc
or
xor
pusha
push
mov
sti
dec
dec
fnstcw
adc
cmp
call
mov
adc
es
mov
outsb
sti
adc
das
stos
into
cwtl
jg
outsl
cmc
mov
ja
popa
into
adc
arpl
mov
cmp
lods
jo
mov
movsb
xchg
scas
in
or
aas
pop
mov
jnp
adc
repnz
xchg
pop
mov
mov
adc
out
add
and
scas
rolb
pop
adc
xchg
rolb
fldenv
pop
xor
add
inc
jg
add
das
xor
cltd
and
dec
movsb
outsb
push
jae
fmuls
mov
insl
sti
xchg
sti
xchg
mov
lea
pop
lock
fistl
xchg
fmul
dec
mov
jne
xor
jno
dec
movsl
push
inc
adc
dec
out
aas
std
lea
mov
push
lcall
scas
push
jnp
rcl
xchg
xchg
adc
pop
dec
cmp
fdivs
add
mov
rcrl
add
daa
hlt
int3
pop
xchg
push
and
jae,pt
jle
xchg
jmp
shlb
setl
enter
lahf
ja
push
cmp
inc
mov
pop
aas
push
cwtl
les
ret
jae
ficoms
filds
imul
sub
push
shrl
in
outsb
and
fwait
mov
jns
popf
cltd
lds
fcoml
imul
fs
inc
jo
add
loop
sbb
test
xor
loope
lahf
inc
fdivrl
fcompl
aam
pop
lret
popa
fildl
inc
arpl
cmp
test
rclb
xchg
pop
ret
and
negl
sti
inc
and
jne
add
jecxz
adc
mov
inc
inc
xchg
stos
mov
sbb
lds
movsl
mov
adc
fiaddl
inc
and
imul
popa
out
stc
rcl
rol
or
scas
hlt
adc
out
inc
or
and
lahf
enter
out
mov
xchg
and
jmp
lds
push
mov
sbb
out
cmp
imul
or
leave
jbe
push
cmp
les
or
lcall
faddl
in
aad
aaa
out
jae
cmc
jl
orb
push
sbb
sbb
rcrb
mov
xor
test
or
outsb
stc
daa
push
ret
bound
daa
imul
pop
add
loopne
loope
ja
cmp
fcmovnbe
sbb
xorl
cmp
jmp
or
sbb
or
xchg
inc
jle
enter
movb
xlat
cmc
std
dec
in
xor
push
mov
dec
rolb
outsb
idivb
gs
inc
addr16
xchg
mov
xor
enter
cltd
push
imul
sub
dec
or
or
or
pop
jae
fimull
cmp
inc
sbb
xchg
and
and
test
pop
scas
shrb
scas
sub
ja
bound
xchg
sbb
sub
test
mov
push
xlat
rcrl
dec
inc
outsb
je
cmp
out
js
or
xchg
xor
cmp
loopne
imul
push
ficoms
mov
sbb
bnd
xor
pop
movsl
dec
jae
push
in
or
nop
pop
push
jns
jmp
pop
jp
adc
cltd
pop
and
subps
dec
mov
adc
xlat
push
sub
add
loope
out
jl
sub
rorl
sub
inc
repnz
mov
insl
adc
test
cmp
xchg
inc
shrl
mov
dec
ds
mov
adc
scas
sub
orl
jle
lret
sbb
outsl
push
or
sub
aaa
pop
sbb
push
mov
test
xchg
and
add
xor
fcmovnu
xchg
xchg
xchg
repz
out
inc
rol
call
mov
pushf
and
in
movsb
jae
outsb
and
push
xchg
jb
sbb
mov
in
xchg
pop
cmp
ds
sub
icebp
ja
jne
js
adc
push
mov
fisubl
jno
inc
cmc
pop
out
mov
jno
outsl
into
adc
push
jnp
into
lods
dec
sub
or
ret
and
sbb
scas
mov
incl
jp
shrl
loope
lds
dec
xor
fadd
xchg
int3
lret
aam
jmp
imul
roll
mov
lss
cmpsl
les
mov
add
insb
adc
int3
stos
add
push
loope
movsb
stos
inc
jb
into
mov
mov
inc
repnz
test
dec
bound
dec
add
sub
inc
jg
ss
push
mov
ja
outsl
pop
cmp
xchg
xor
mov
and
in
dec
add
or
jne
mov
cwtl
push
pop
stc
jb
xchg
ret
pushf
jg
int3
sub
aad
insb
cmp
insb
roll
fldcw
lock
imul
out
ret
sarb
mov
popa
or
sub
pop
test
jnp
push
data16
mov
jmp
fsubrl
int3
dec
bound
push
sahf
and
mov
fstl
in
in
inc
xor
jle
lret
in
pusha
icebp
pop
ja
or
jp
les
pop
push
inc
add
add
hlt
push
aam
dec
nop
cmp
out
push
icebp
idiv
addr16
cs
xchg
adc
push
xor
add
push
les
add
ficompl
dec
js
mov
rorb
jle
add
daa
sbb
mov
int
mov
jae
test
and
push
test
push
or
ja
sbb
push
test
out
cmp
sbb
mov
mov
mov
xor
push
xor
and
dec
repz
adc
pusha
or
sbb
leave
std
popa
scas
orb
dec
aas
add
mov
ficoml
lock
cmc
xchg
cmpsb
jne
shl
fs
dec
sbb
xor
push
add
cmp
sbb
gs
flds
xlat
or
daa
ret
push
cwtl
roll
dec
cmp
adc
add
jmp
in
pop
xlat
addr16
xor
and
jg
iret
lods
inc
inc
js
xlat
push
rolb
pop
mov
insl
or
xor
push
add
mov
xor
fwait
adc
movsb
ljmp
lock
mov
push
xor
aas
push
pusha
les
divb
push
leave
jne
imul
test
push
fwait
in
or
das
xlat
lahf
inc
dec
mov
mov
sbb
xor
repnz
pop
pop
mov
bound
jo
cwtl
pop
loopne
std
xchg
aas
adc
ret
cmp
or
mov
xor
pop
out
out
mov
cltd
lock
pusha
mov
pushf
test
stc
ja
sbb
pop
int
push
dec
scas
cmp
cmp
mov
fiadds
rcr
imul
mov
mov
xchg
xchg
out
mov
movsb
push
xchg
js
jl
and
call
test
fxam
mov
scas
add
js
out
jbe
cmp
sahf
inc
and
insl
xor
in
and
hlt
test
insb
in
aaa
pop
add
fists
inc
pusha
sti
inc
sub
adc
loop
ret
aas
insb
ret
rcr
sub
and
pop
loopne
movsb
sbb
mov
pop
outsb
jb
sahf
sti
xor
pop
add
xchg
popf
push
cmp
imul
aad
lock
mov
sub
in
sbb
lret
out
mov
aam
movsb
sar
and
pop
int
pushf
cwtl
sub
jae
mov
adc
ja
addb
and
pop
lods
xchg
lcall
testb
and
mov
and
gs
sar
jp
out
add
pop
aam
cmp
or
icebp
xor
jmp
iret
rorl
jnp
jmp
loopne
add
js
and
pop
pusha
popa
scas
scas
ficomps
adc
dec
pop
les
pushf
fwait
inc
lcall
and
add
jecxz
dec
dec
pusha
mov
push
cmp
scas
mov
in
insl
nop
leave
sbb
xor
jo
lret
cmp
push
inc
mov
push
int3
cmp
loope
sub
out
testb
adc
hlt
sbb
pop
rolb
repz
pusha
xor
rcr
pop
xor
out
lcall
cli
xchg
dec
dec
out
mov
pop
fisubrl
aaa
fcmovb
shl
pop
xchg
and
inc
push
pop
in
fldl
fs
and
cwtl
push
push
roll
inc
xchg
std
bound
call
push
adc
test
retw
adc
movsb
frstor
add
xchg
mov
imul
mov
jg
push
testl
pop
mov
adc
ja
adc
or
sbb
push
xchg
and
in
shlb
lods
add
outsl
add
sub
std
fwait
mov
xor
es
mov
sbb
pop
pop
scas
adc
popa
mov
sbb
sbbl
mov
mov
mov
test
lret
adc
sbb
jnp
fnstenv
ficoml
aam
pop
loop
pop
jb
sti
adc
scas
aam
imul
mov
pop
inc
aad
jmp
inc
out
movsl
jg
xor
xchg
test
loop
or
shrb
dec
xor
sub
sub
incl
test
jle
enter
xor
stos
and
mov
push
ss
jmp
das
jp
xor
test
in
sbbb
adc
or
pop
inc
mov
xor
dec
pop
fistps
adc
testl
push
lods
repz
sbb
mov
shl
lock
ret
stos
js
call
xor
movsl
mov
xchg
mov
or
js
xor
xchg
call
ja
pop
sbb
insb
pop
inc
cmp
aad
or
in
inc
pop
inc
test
pop
outsl
mov
pop
int
add
jb
pop
xchg
imul
das
cmpsb
mov
push
push
fwait
out
xchg
std
sbb
imul
mov
cmp
inc
cmp
push
cs
mov
out
pop
mov
push
push
add
fistpl
inc
inc
incl
mov
cmp
rorb
loop
mov
xor
xchg
xchg
sbb
mov
dec
test
ja
fsubr
imul
fdivs
ffreep
push
inc
xchg
push
popf
xchg
mov
dec
jno
repz
out
das
rcrb
sub
sub
sbb
jmp
sub
rorb
inc
xchg
xor
inc
jecxz
cmp
sbb
push
push
rol
ss
xchg
popa
mov
cmp
hlt
xchg
pop
sbb
sahf
and
nop
ficoml
rorl
lods
cli
cmc
and
les
and
push
out
mov
rorl
subl
cmpsl
xchg
pusha
lods
mov
push
jae
call
leave
stc
jnp
sbb
push
mov
and
mov
ficomps
addr16
push
outsl
and
aaa
jbe
rcll
call
aam
xor
movsb
pop
mov
aas
aas
push
enter
cltd
mov
repz
sbb
jmp
pop
mov
push
shll
cmp
or
inc
sub
insl
test
cmp
add
addr16
ss
ror
jne
xor
xor
dec
inc
mov
mov
xor
push
outsl
mov
cmp
insl
fsubrs
ret
imul
push
icebp
mov
cld
pop
mov
mov
and
mov
add
inc
scas
nop
repnz
arpl
pop
jno
jae
xorl
pop
cmp
mov
cmpsl
mov
or
push
movsb
das
sti
xor
push
cs
sarb
mov
jne
outsb
xchg
mov
and
inc
mov
add
adc
cmp
lret
add
in
xor
xor
jo
sbbb
push
rcll
inc
xor
jnp
jmp
int
xchg
lret
mov
movb
cmp
shll
xchg
sub
mov
mov
xchg
and
jg
subl
test
push
push
jae
pop
mov
aam
ljmp
in
insl
cmp
mov
inc
iret
add
inc
mov
sarl
hlt
jo
jns
dec
inc
push
popf
mov
scas
mov
pop
and
imul
sub
fsts
add
in
mov
inc
xor
arpl
mov
ja
fwait
loopne
or
and
rclb
push
and
in
out
fisttpl
xchg
sti
outsl
movsl
jno
push
push
adc
push
add
jecxz
cwtl
add
repz
sub
and
orl
sbb
add
decl
movsb
and
mov
leave
shlb
fmuls
push
sub
or
inc
in
into
fcoml
sbb
and
add
leave
jbe
jmp
je
xchg
xchg
cmp
rcrl
or
leave
lock
sbb
inc
js
in
jle
mov
fdivs
rorl
out
mov
and
stos
jb
ja
and
mov
xchg
xchg
sbb
and
popa
cmc
rcrb
sahf
cmp
nopl
cmp
fsubrs
jno
loopne
cmpsl
in
mov
pop
out
fcomip
pop
jmp
inc
out
sahf
pop
pusha
out
pushf
xchg
les
pop
in
mov
or
js
sub
cmc
mov
inc
jnp
arpl
mov
in
sbb
sbb
fcmovnbe
xchg
jmp
stos
mov
cs
mov
or
stos
out
mov
outsb
lea
shlb
sarl
jo
mov
mov
adc
imul
gs
sbb
iret
jmp
lret
mov
outsb
push
shll
cld
add
in
mov
pusha
xor
add
sbb
cmpsl
sub
sbb
imull
mov
je
pushf
cmp
cmp
xchg
cmp
in
outsb
xchg
or
and
xchg
add
repnz
mov
orps
pop
inc
sbb
sbb
sbb
jg
js
and
add
xchg
ljmp
sbb
test
pop
cld
mov
mov
fisubl
enter
stc
dec
fisttpll
push
cwtl
xor
gs
or
adc
xor
sub
xchg
dec
lret
push
pop
scas
pop
xchg
mov
inc
or
xchg
or
clc
mov
sbb
shrl
in
scas
out
xchg
xchg
cs
pop
sub
push
or
xchg
cld
xchg
mov
fsubrs
int
fdivr
nop/reserved
outsl
mov
ds
pop
pop
jns
popa
xchg
inc
pop
push
test
xchg
cld
xchg
sarb
addl
or
dec
and
je
fdiv
into
jno
sub
sub
add
mov
mov
add
push
push
cmp
add
adc
mov
testb
xchg
and
lods
icebp
cli
gs
stc
pop
loope
sbb
add
xor
xor
push
inc
cmp
push
pop
push
dec
jg
mov
stc
sbb
nop
rorl
cltd
into
inc
ret
insl
pop
jo
or
mov
cmp
sbb
jl
jge
mov
int3
decb
repnz
mov
and
lcall
ja
roll
mov
adc
mov
xor
jne
push
or
insb
cwtl
loope
add
mov
jnp
pop
xchg
mov
scas
hlt
mov
mov
add
pop
jno
mov
cmp
les
aaa
mov
lea
in
sub
xlat
cmc
push
sbb
or
bound
mov
mov
cmp
add
add
xor
cmpsl
mov
jle
fildll
or
jnp
pop
dec
pop
insl
or
mov
fcoml
adc
jmp
jnp
xor
sub
push
mov
and
xchg
add
jl
cmpl
iret
xor
inc
pop
sub
mov
enter
adc
mov
repz
nop
mov
in
and
push
and
pushf
popf
add
mov
flds
jo
cmp
lahf
push
arpl
ja
outsl
jge
pop
sbb
fwait
test
js
loope
and
repnz
xchg
push
push
mov
sub
or
sbb
sbb
adc
shrb
lret
fstpt
xchg
subb
loope
xchg
pop
ljmp
add
int
hlt
shl
mov
cmpsb
mov
mov
adc
mov
lods
inc
scas
test
cmpsl
sub
sub
imul
jbe
jmp
std
cmp
call
cmp
outsb
jge
fcomip
pop
dec
add
lds
repz
rcl
or
xchg
and
nop
jo
pop
shr
adc
or
mov
test
out
jp
rcl
and
pop
idivl
add
rorl
push
push
lahf
pop
mov
ja
jae
inc
dec
cmp
xor
aad
push
sarb
mov
dec
xor
adcl
out
cwtl
xchg
sarl
rcrb
pshufw
mov
inc
mov
push
inc
lea
int
adc
adc
pop
rcr
dec
stos
pop
mov
iret
jne
push
cmpsb
out
adc
push
lods
sbb
cmp
jo
repz
pop
add
push
xchg
fsubrl
xor
lcall
jb
insb
fstl
mov
gs
fsub
dec
mov
outsl
loope
xchg
test
or
pop
dec
mov
test
add
rorb
pop
das
movsb
arpl
lcall
dec
sahf
inc
xchg
xchg
cmc
xor
or
or
hlt
ljmp
mov
cmp
sub
icebp
sbb
pop
sbb
insl
fdivrl
and
jge
int
pusha
js
jg
inc
push
sbbb
dec
arpl
push
jle
xor
mov
insl
xchg
mov
mov
jne
sbb
add
push
mov
cmp
and
pop
sbb
fcmovnbe
inc
aas
jmp
les
pop
xor
push
test
addb
cmp
push
gs
test
dec
push
lret
push
inc
ds
lods
icebp
imul
cli
mov
push
stc
inc
mov
or
mov
dec
mov
lock
aaa
push
decb
insb
loop
iret
jmp
mov
stos
test
and
jmp
imul
shll
add
jbe
stc
or
xchg
jno
pop
xchg
mov
les
bound
ret
dec
inc
add
xor
hlt
jb
cld
mov
into
jmp
ficoml
bound
mov
and
push
jmp
adc
adc
pop
imul
inc
imul
sub
push
or
or
aam
mov
jnp
paddd
bound
xchg
inc
stc
cwtd
xor
pop
nop
push
fwait
jns
stos
ds
push
in
mov
mov
rorb
mov
adc
jnp
push
repnz
int3
std
push
jns
xchg
jp
addps
jmp
aas
push
pusha
shlb
test
ss
data16
cmp
xchg
out
and
mov
test
leave
cmp
iret
cmp
cmpsb
decl
subb
enter
std
xchg
test
lea
repnz
cmp
into
popl
or
divl
cmp
mov
jge
stc
pop
jmp
mov
lret
jb
sarb
xor
mov
jbe
mov
pop
mov
push
aaa
ja
mov
inc
aad
insl
push
inc
or
in
mov
imul
jbe
pop
fcomps
lahf
js
in
mov
out
and
push
js
cmpsb
cmp
cmp
mov
mov
push
adc
out
mov
adc
dec
push
fstpl
dec
dec
jge
jbe
push
decb
jecxz
push
andb
inc
cmp
ljmp
enter
xor
push
add
dec
repnz
scas
jmp
cltd
repnz
sub
or
inc
and
hlt
icebp
xchg
push
or
jae
outsb
cli
cmp
cmp
and
cld
cmp
cltd
sahf
push
and
jne
pushf
mov
dec
or
jg
es
repnz
test
into
jmp
jbe
rcpps
loop
bound
sub
outsb
cmpsl
gs
jnp
mov
cmp
fs
inc
push
push
mov
movsl
out
or
adc
pop
adc
rorl
mov
pop
or
inc
sub
push
lret
test
inc
daa
push
gs
push
loop
enter
xlat
imul
jnp
jmp
dec
leave
mov
cpuid
jbe
fdivs
pusha
cmpsl
mov
sub
mov
adcl
scas
sbb
sbb
ret
xchg
fs
xchg
mov
mov
shll
xor
sbb
push
loop
inc
add
loopne
iret
sub
stc
divl
ret
xchg
mov
inc
dec
popa
or
inc
loop
inc
lret
scas
jne
insb
sub
push
adc
push
cmpb
loopne
ds
jl
ret
pop
jne
hlt
outsb
fs
xchg
jbe
push
jl
push
push
gs
xchg
mov
fwait
inc
xchg
idiv
cli
fnstenv
mov
and
clc
sbb
push
pop
sbbl
xchg
pop
orl
std
fdivr
mov
fstl
jb
xor
add
loopne
cwtl
fsubrl
dec
loop
mov
xor
mov
fsubr
test
in
popa
jo
lret
subl
leave
pop
jae
outsl
adc
scas
clc
cmp
mov
cmc
es
or
and
pop
xlat
xor
mov
imul
icebp
sbb
test
mov
sub
sbb
and
int3
xchg
outsb
mov
mov
fwait
or
fbld
adc
ds
imul
jnp
mov
filds
sub
inc
enter
adc
jmp
call
sahf
test
push
and
cmp
inc
jo
int3
pushf
movaps
aad
popf
fwait
inc
xchg
test
and
dec
loopne
insb
je
jb
mov
jecxz
mov
mov
sbb
out
loop
ret
bound
fstp
imul
pushf
imul
or
mov
and
inc
cld
lcall
mov
enter
ret
scas
add
int
iret
mov
cltd
and
mov
mov
push
int3
out
mov
xchg
jle
gs
push
cmp
jne
jae
xor
sbb
and
jnp
adc
les
mov
ror
or
bound
mov
xchg
xor
sub
sbb
mov
jbe
mov
mov
mov
xor
negl
fwait
pop
lods
enter
xor
jbe
ds
faddl
dec
jp
mov
mov
pop
insb
mov
es
add
dec
add
insl
test
or
push
sbb
hlt
jge
cli
les
and
sti
es
popf
or
mov
push
sub
leave
mov
repnz
outsb
xchg
stos
xchg
std
xor
pop
dec
push
test
cmp
pop
adc
jg
mov
and
sar
cli
fwait
mov
cmc
push
rcrb
jg
in
mov
es
jle
fcmove
bound
loope
imul
lock
mov
divb
test
decl
inc
xor
into
scas
xchg
stc
sbbl
pop
or
sub
mov
test
or
mov
jno
lret
div
mov
rorb
cmc
into
flds
rcrl
mov
rol
xorl
xchg
dec
jnp
adc
aas
lea
inc
pop
lret
xor
cmp
push
jp
push
push
xlat
pop
popf
adc
mov
stos
xchg
decl
cmp
stc
popf
ret
ret
xchg
push
pop
add
and
xchg
loop
jae
testb
xorl
mov
mov
xor
call
cmp
adc
gs
mov
xchg
maskmovq
idivl
stos
out
lock
jg
pop
lock
lret
mov
mov
daa
outsb
ret
arpl
xchg
fsub
int3
mov
pop
cmpsl
jb
dec
fstl
pop
and
adc
dec
jo
sbbl
int3
and
dec
call
mov
loope,pn
jns
adc
cli
xor
adc
out
cmp
dec
mov
push
mov
push
out
mov
mov
daa
gs
cmpsb
insb
lea
sub
sbb
mov
adc
pop
popa
vmovss
je
sub
aaa
mov
mov
pop
sbb
sub
xchg
jbe
pop
sbb
test
cmp
adc
push
fsubl
mov
rorb
jns
xor
repz
xor
or
faddl
sbb
dec
push
pop
ret
not
mov
fmull
lock
mov
xor
xlat
inc
rolb
lcall
js
testb
push
pop
mov
mov
and
dec
pop
push
mov
pusha
aam
xlat
xchg
mov
or
in
push
sahf
or
repz
jg
mov
ljmp
pop
mov
into
fmuls
popf
dec
jl
and
and
cwtl
cmp
mov
add
sahf
lea
mov
int3
inc
idivb
insb
out
xor
push
in
pop
lea
push
push
push
cmp
inc
nop
in
pusha
ja
cmp
sbb
ljmp
sbb
std
in
push
in
fsubr
and
sbb
lods
cmpl
pop
pop
xchg
jbe
mov
nop
sti
pop
inc
nop
add
sbb
outsl
lcall
mov
jno
nop
sub
inc
sbb
arpl
xchg
jmp
xor
xlat
push
popl
out
aaa
adc
shll
aam
gs
dec
mov
mov
inc
pop
add
or
xchg
pop
insb
aas
mov
cli
andl
fldenv
xor
inc
inc
aaa
test
rolb
mov
hlt
aad
mov
lret
pop
test
push
inc
and
pop
jne
sbb
popf
jmp
jnp
das
das
pushf
scas
outsl
int3
in
jnp
add
in
loopne
xchg
fwait
inc
jl
mov
adc
mov
xchg
test
orl
in
imul
loopne
dec
pop
repnz
xor
cmp
andl
les
dec
mov
xchg
or
aas
outsl
fcmovb
lods
ret
mov
xor
iret
and
jmp
pop
dec
mov
or
int3
int
cld
lea
pop
outsl
xchg
pop
pop
mov
rcrl
pop
and
jp
cmp
push
aas
loopne
in
in
push
inc
fdivrl
repnz
mov
in
cs
notl
jno
pop
in
popa
mov
imul
call
push
cmc
nop
pop
sub
lods
or
sahf
sub
and
je
pop
fcmovu
movsl
ret
aaa
pop
inc
pop
push
dec
xor
loop
imull
out
sub
ljmp
repz
jnp
icebp
or
push
cli
xor
pop
mov
imul
push
mov
daa
adc
stos
xchg
das
mov
jmp
hlt
pop
sub
mov
ja
push
lods
test
mov
test
mov
js
imul
mov
push
add
divl
test
or
mov
scas
daa
aam
jno
mov
mov
xchg
inc
pop
xor
js
inc
or
sub
test
add
xchg
ss
jecxz
pop
xchg
lock
lock
cltd
pop
subb
xor
sbb
int3
sti
cld
aaa
jmp
mov
les
das
sub
dec
mov
imull
xchg
aam
clc
mov
int
dec
dec
jo
mov
lcall
cmp
and
inc
xchg
aam
mov
jns
psrlw
and
mov
jmp
sub
lret
pop
ja
ror
cwtl
or
ds
test
aas
push
cmpl
sub
adc
cmp
lahf
roll
push
cmp
lds
pop
mov
push
or
rcll
mov
pop
aam
stos
jb
push
les
xor
jecxz
or
rcrb
sub
cmpsb
psubw
xor
loop
mov
in
iret
cmpsb
pop
pop
xlat
sti
sbb
pop
xor
sarb
mulps
jns
outsb
adc
pop
out
and
out
ljmp
dec
loopne
loop
mov
lret
push
mov
sub
test
pop
add
and
std
loope
cmp
push
addr16
dec
pop
nop
xlat
imul
inc
xchg
std
aas
mov
dec
cwtl
aas
sub
mov
adc
sbb
sbb
and
bound
idiv
xor
dec
inc
dec
adc
fisubs
hlt
mov
insb
popf
mov
push
imul
mov
rcrb
mov
cmp
dec
cwtl
sub
lods
int3
aaa
and
jmp
aaa
push
jmp
dec
adc
xchg
pop
ja
mov
fsubl
lods
out
jae
lds
jecxz
pop
cltd
mov
xchg
lea
and
andl
add
xchg
cmp
gs
pop
add
rorl
jns
popf
shll
sub
add
mov
fists
mov
dec
lods
ss
push
cmp
push
dec
pop
dec
gs
out
add
clc
sub
or
pusha
enter
and
jne
inc
imul
test
xchg
aad
add
addr16
jnp
and
leave
jnp
mov
cmp
imul
jno
pop
shl
inc
ja
movsl
dec
pop
sub
idiv
lea
push
mov
shlb
push
and
jbe
popf
mov
cltd
push
push
adc
test
mov
sbb
or
test
push
out
lahf
push
idivb
aad
jecxz
daa
pop
lcall
cld
and
fiadds
or
test
inc
test
pop
aad
cmp
mov
dec
or
mov
imul
jle
icebp
fmull
or
daa
sub
lods
cs
jmp
xchg
ja
sti
jmp
mov
fcoms
test
jno
xor
add
fcomi
adc
jbe
repz
aam
sbb
mov
popf
jbe
sbb
je
cmp
push
int3
xor
lods
bound
xchg
es
mov
sbb
pop
mov
adcl
jle
pop
mov
in
or
cld
xor
mov
dec
lods
stos
mov
mov
jno
add
in
aas
mov
jb
xchg
adc
dec
push
mov
popa
dec
pop
and
xor
cmp
add
out
cmp
xchg
add
bound
sahf
xor
sbb
cmp
xorl
push
add
arpl
sbb
cld
mov
ss
lret
testb
pushf
outsb
xchg
aad
negl
stos
push
or
popa
cmp
pop
int
or
adc
pop
pushf
es
mov
lahf
push
js
pop
lret
daa
cmc
es
dec
jmp
xchg
stos
prefetch
or
adc
mov
adc
outsl
dec
gs
pop
adc
lods
mov
aas
fwait
lea
in
int3
cmc
push
sub
dec
mov
shrl
sbb
xchg
jns
frstor
imul
xlat
add
inc
xchg
sbb
test
dec
adc
lea
repz
pop
inc
enter
xchg
test
xchg
mov
or
pop
rclb
jp
inc
adc
pop
movd
or
sahf
ficompl
cld
pop
scas
xor
outsl
mov
enter
in
cltd
xchg
inc
xchg
or
shll
pop
jbe
xor
iret
push
cmp
sub
mov
push
icebp
fidivrs
jmp
cltd
jb
orb
sbb
test
xor
or
sub
push
mov
mov
jnp
je
mov
lahf
adc
cmp
inc
insl
jmp
cli
pop
fdivl
ret
jle
je
jecxz
push
test
ret
push
adc
or
arpl
add
sbb
insl
xor
inc
adc
cmp
movsl
lahf
fnsave
add
pusha
and
iret
adc
jbe
xor
stos
push
push
das
push
mov
mov
ljmp
js
pushl
data16
mov
ja
jecxz
add
push
mov
adc
mov
arpl
loopne
push
mov
or
jmp
icebp
leave
imul
lods
out
int3
xor
add
dec
jne
sub
enter
inc
jg
jae
or
sar
mov
ds
sub
fs
int3
bound
adc
push
fldcw
sub
add
inc
test
or
cmp
xorl
sar
adc
add
sbb
inc
test
inc
push
out
inc
mov
insb
js
adc
ficoml
mov
xor
fdivl
lahf
lret
push
push
lods
notl
icebp
cmp
fldcw
jno
lea
sbb
fmuls
int3
inc
lcall
lods
dec
out
pop
lcall
in
fsubs
cmc
xchg
and
fwait
sbb
push
lcall
jmp
loopne
or
aas
ljmp
aas
je
xchg
stos
enter
aad
ja
mov
push
mov
and
jo
fstpl
popf
xor
xchg
and
cmpsl
out
xchg
pop
sbb
sbb
sub
testl
test
pop
in
xchg
adc
leave
inc
insl
mov
lcall
or
xor
popa
mov
and
adc
xchg
cmp
rcll
cwtl
xchg
cmpsl
scas
scas
int3
mov
or
push
movhps
imul
mov
test
cmp
push
out
out
xor
pop
cmp
push
cmpsl
movsb
shrl
iret
push
dec
out
pop
lds
mov
fsub
xchg
xchg
mov
jmp
pop
mov
dec
clc
movsb
mov
repnz
xchg
adc
mov
mov
inc
mull
add
fadds
imul
dec
call
push
xor
shl
cs
pushf
outsl
inc
push
inc
fsubs
xlat
xor
adc
jnp
sbb
push
stos
inc
dec
int3
pop
imul
xchg
sbb
daa
fisubrl
push
std
mov
dec
shrl
sbb
push
add
inc
dec
out
shlb
rorl
mov
scas
pop
pop
adc
sbb
test
int
add
gs
rcrb
inc
sbb
arpl
movsl
sub
jne
pop
xor
aaa
mov
or
mov
sbb
push
mov
or
andb
push
rol
jg
fcoml
jbe
es
std
dec
std
jge
inc
in
xorb
sub
inc
les
daa
add
iret
repnz
pop
mov
aas
scas
push
pop
lods
stc
and
test
test
jnp
cmpsl
and
xchg
lds
sub
or
jne
mov
push
xchg
cmpl
sbb
stc
sbb
cmp
rolb
addr16
mul
inc
int
js
outsb
xchg
stos
mov
enter
in
mov
xor
push
fnsave
cmpsl
cs
dec
mov
cmpsb
out
js
ret
fistpll
mov
jecxz
mov
out
loop
call
aad
stos
lret
pop
sti
jp
mov
adc
xlat
sbb
sti
mov
test
jle
mov
pusha
push
cmp
mov
cmpsb
or
mov
mov
push
mov
adc
add
inc
pop
sahf
or
lock
dec
mov
nopl
cs
hlt
movsl
int
and
cmp
loop
test
incb
mov
int
out
ret
inc
pop
cmpl
sahf
xlat
mov
scas
aas
leave
pusha
ljmp
xlat
es
lock
jmp
popf
jecxz
cmpsb
shrb
inc
sarb
loop
fcmove
push
orl
fs
xor
cmp
lods
test
insl
xor
jnp
xor
add
cmpsb
jge
sahf
mov
sbb
pop
test
lret
sbb
bound
hlt
into
inc
lea
sbb
jnp
xor
sahf
push
push
in
jno
pop
add
xchg
incb
xor
fdiv
cmpsl
insb
outsb
xchg
fstpt
mov
lahf
xchg
mov
lea
lret
aam
sbb
pop
inc
ds
insb
add
fstpl
icebp
dec
mov
add
into
ret
mov
int
fcmovnbe
mov
fwait
mov
mov
test
lret
push
sub
subb
mov
shlb
push
xchg
fiaddl
add
dec
jmp
lods
inc
insb
jb
sbb
sbb
test
insb
jns
scas
add
repz
inc
test
dec
mov
and
xor
movsl
or
cltd
inc
adc
enter
adc
sbb
inc
bound
adc
dec
in
lret
xor
lahf
xchg
fsubrl
fisubrs
ss
sub
divl
push
lock
xchg
sbb
jns
mov
data16
mov
and
in
imul
lea
fs
pop
out
pop
adc
fwait
je
or
insl
outsb
repz
xchg
mov
mov
adc
roll
repnz
add
into
mov
sbb
test
adc
fistl
movsl
sbb
mov
mov
jl
inc
popf
jmp
test
aam
pop
jno
cltd
pop
aad
mov
into
outsl
mov
bound
hlt
pop
xor
sbb
mov
repz
pusha
or
lcall
subl
nop
mov
mov
cs
push
cmp
daa
pop
mov
push
mov
sti
xchg
inc
pop
sub
mov
jns
pop
ss
mov
xchg
rol
icebp
jle
sets
aaa
or
adc
les
dec
push
fistpl
push
scas
mov
std
inc
iret
adc
cmp
cmp
es
xchg
fisubrs
pop
push
fsub
lret
lock
lcall
sbb
lods
out
cmpsl
cltd
int3
cmp
ror
add
push
scas
pop
lahf
jp
inc
mov
mov
or
sbbb
subb
das
test
xchg
mov
sti
outsl
push
popw
lea
cmp
sti
clc
push
insb
adc
and
mov
lods
fpatan
les
out
inc
fucomp
cmpsb
outsl
stc
scas
sbb
push
push
scas
inc
and
es
fs
iret
subl
cs
arpl
or
dec
popa
outsb
or
cltd
cs
xchg
push
cmp
jg
cmp
sbb
adc
outsl
cmpl
xorl
and
shll
add
popa
leave
or
cli
clc
lds
lods
icebp
je
jnp
push
and
push
test
jnp
xchg
adc
loopne
cld
je
ret
sub
int3
dec
out
insb
fisttpl
call
cli
and
push
lods
mov
jp
loopne
mov
stos
int3
andb
and
int3
sbb
stos
push
inc
jg
fs
push
cmp
cmp
pop
mov
pop
dec
jns
movl
mov
gs
andb
jne
pop
pop
inc
push
mov
add
add
int
fwait
jbe
sub
sub
mov
ret
jl
inc
mov
mov
rolb
movsl
cmp
sub
shll
xchg
in
and
push
adcl
int
pop
fidivs
aaa
sbb
stos
jo
faddp
pop
out
enter
iret
js
pop
sahf
pop
leave
fcmove
lock
mov
orl
shl
shr
adc
lods
sub
adcb
or
xor
push
adc
aas
pop
mov
sub
cmp
std
pop
jb
adc
dec
pop
out
int
fnstcw
jb
xchg
mov
into
sarl
es
jo
outsb
fcmovne
jp
mov
or
inc
loope
bound
mov
loop
or
dec
mov
pop
cmp
lahf
lea
inc
pop
addr16
push
and
cmpsb
lret
ss
xor
ret
sarb
js
insl
adc
mov
xor
pop
jno
and
push
pop
xchg
bound
ss
xor
rorb
mov
das
mov
mov
sbb
stc
data16
test
inc
test
xchg
test
cltd
addr16
push
xchg
adc
adcb
lock
lock
jmp
call
test
in
lds
faddl
pop
sbb
sbb
jmp
lahf
push
ficoms
test
mov
jb
sub
cmp
inc
mov
out
pop
bound
js
shrb
fstpl
push
imull
add
jne
pop
icebp
mov
cmpsl
or
insb
sub
mov
nop
sub
insb
lods
pushf
mov
stos
xor
pop
out
adcb
cmp
mov
cmp
das
pop
mov
lea
jno
dec
bound
add
push
ret
out
outsl
mov
jo
sbb
mov
enter
pop
mov
xor
ja
push
mov
mov
rcrb
push
ret
xchg
jge
push
and
rcrb
mov
mov
pop
sar
mov
sar
push
loop
cmpsl
cli
cmc
xchg
mov
outsb
in
xor
adc
inc
push
inc
pop
add
fcmovnb
sbb
inc
xchg
xor
out
movsb
mov
xchg
out
xchg
movsl
xchg
dec
in
inc
icebp
xor
nop
and
sbb
mov
les
insb
cld
adc
lret
pop
enter
roll
sub
push
in
or
sbb
add
in
pushf
ja
jmp
add
xlat
loop
stos
mov
pop
mov
inc
mov
fwait
pop
dec
mov
jecxz
add
sub
in
ss
mov
xor
negl
mov
test
lds
test
and
movsb
mov
xchg
add
loope
xor
sbb
andl
or
test
ljmp
sbb
add
cwtl
fidivrl
dec
js
xor
push
push
fbstp
pop
scas
fstl
sahf
cmp
and
dec
mov
dec
xorl
out
jae
mov
sbb
mov
push
rcll
leave
test
out
ds
jp
mov
push
lea
adc
mov
cld
add
repnz
sar
jb
repnz
dec
ficoml
jmp
push
fisttps
push
dec
cmp
push
or
leave
rcl
aam
jl
loop
rcrl
jbe
dec
mov
push
cltd
clc
jnp
leave
mov
push
enter
push
testb
xor
aas
dec
push
and
aaa
adc
mov
adc
mov
out
cmpsl
pop
loop
push
mov
inc
push
adc
outsb
shll
sub
add
add
cmp
or
orb
mov
shl
sbb
ss
dec
fisttpll
push
adc
inc
dec
mov
rcrl
divb
adc
pop
outsl
int3
push
inc
cmp
cmp
out
lahf
je
inc
bswap
loopne
jae
out
jmp
in
and
mov
lcall
lret
mov
icebp
subl
sbb
cmp
cmp
push
mul
inc
gs
jbe
mov
loop
mov
mov
push
push
xchg
add
repz
test
xchg
cmp
cmp
fwait
test
push
dec
loopnew
xchg
push
out
xchg
pusha
cwtl
fs
outsl
inc
aad
test
adc
add
aaa
dec
es
stc
bound
test
rcrl
outsb
push
push
push
js
cmp
mov
or
push
es
adc
mov
xor
sbb
pop
cmp
divl
mov
adc
mov
adc
leave
inc
scas
gs
insl
or
pop
loopne
idivl
pop
pop
add
cld
shrl
int3
pop
cmpsl
jge
mov
cmc
hlt
inc
mov
cli
add
sbb
test
push
lea
loopne
mov
fdivs
test
push
mov
adc
decb
jmp
not
xchg
insb
dec
ss
adc
aad
icebp
lea
xor
dec
movsl
xor
in
enter
push
or
cwtl
insb
cwtl
mov
or
js
cmpsb
ja
mov
mov
push
and
or
idivb
repnz
stc
test
cmp
arpl
push
sarb
mov
lods
add
pop
fwait
in
push
out
pop
insb
pop
jnp
push
pop
push
adc
orb
enter
in
xchg
stos
leave
es
add
out
std
pop
subl
in
in
cmpsl
aad
xor
sahf
or
push
sarb
lret
dec
std
and
sbb
cmp
cld
out
lods
sbb
inc
xchg
mov
mov
sahf
into
mov
lds
xor
mov
jmp
leave
adc
mov
push
xorl
jp
movsl
xchg
lds
mov
repz
jo
pop
call
dec
jne
or
sub
testb
inc
or
or
loop
cmp
imul
movsl
mov
clc
cld
mov
fs
sbb
lock
push
in
stos
adc
shlb
pop
xor
inc
add
call
push
cwtl
test
sub
inc
jl
push
xorl
xchg
pop
sbb
dec
rorl
fxch
in
xor
ret
cmpl
inc
out
shlb
icebp
push
cltd
mov
jmp
lds
or
mov
inc
inc
jns
cmp
cmpsl
ss
push
lea
jl
nop
nop
add
sti
inc
and
push
movsb
sbb
shlb
lods
mov
sub
sbbl
xchg
sti
arpl
add
pop
and
clc
inc
cmp
jmp
dec
int3
jnp
call
je
sar
mov
push
add
out
repnz
inc
fmulp
ja
mov
pop
xchg
xchg
fiaddl
sub
pop
daa
in
dec
fs
outsl
sbb
mov
mov
lods
add
mov
cmpsb
lcall
cld
sub
addl
mov
mov
into
mov
and
mov
dec
cwtl
mov
sarb
int3
mov
test
mov
xor
ret
add
push
outsl
xor
push
mov
xorl
jl
pop
mov
xor
popa
xchg
pusha
sub
test
sbb
add
dec
inc
sub
jno
gs
ss
and
inc
adc
or
xchg
ficoms
mov
loope
loop
les
loop
arpl
pop
sub
pop
loop
add
or
mov
in
fidivrl
scas
dec
dec
push
mov
inc
pop
jp
int3
adc
rclb
xor
test
push
jnp
xchg
pop
pop
in
and
add
sub
iret
in
push
add
pop
hlt
mov
cmp
jmp
push
and
mov
add
movsl
push
sub
jne
movsb
enter
xchg
sbb
lret
xorb
lods
push
fcomi
pushf
inc
push
mov
lcall
push
iret
sub
and
in
dec
ror
cmp
sub
cmp
mov
push
or
and
push
adc
jne
xor
or
scas
out
icebp
jecxz
cmp
cli
adc
in
xchg
or
movb
pushf
push
icebp
mov
test
ja
aaa
push
icebp
lahf
shlb
insl
in
outsl
mov
inc
mov
push
jbe
xor
xor
xchg
pextrw
xor
adc
hlt
jns
pop
or
scas
dec
inc
out
inc
mov
into
lret
push
add
rcll
dec
fldenv
xor
dec
les
push
in
xor
lahf
push
scas
jp
add
nop
jae
mov
lcall
test
scas
inc
call
mov
cmp
lds
dec
adc
testl
inc
jg
add
mov
int3
mov
jecxz
inc
jle
setp
dec
addr16
pop
negb
adc
pop
std
sbb
or
int3
mov
xchg
icebp
aam
aas
mov
les
out
shl
lds
fiadds
pop
cs
sub
loope
ss
orl
xorb
cltd
push
fisubrl
adc
sbb
cmpsb
call
mov
scas
adc
xchg
pop
cmp
rdtsc
pushf
cltd
popa
add
ljmp
loop
repz
jbe
sbb
jg
jb
xor
add
mov
hlt
inc
out
std
insb
ljmp
dec
mov
sub
jg
lds
and
mov
add
fdivrl
lret
pop
test
std
sbb
adc
test
mov
push
arpl
dec
aam
xor
adc
xor
testb
out
pop
xor
gs
sbb
lcall
lret
xor
loop
sbbl
mov
xor
data16
dec
repnz
sbb
mov
pop
mov
sahf
add
pop
pop
outsb
inc
pop
push
mov
or
call
int
add
pop
jmp
add
lods
fcompl
and
mov
js
push
dec
movsl
sub
mov
fcmovne
jns
mov
bound
sbb
jge
and
pop
insl
inc
das
lret
aaa
push
int3
test
mov
fnstenv
in
cmp
sub
outsl
push
sbb
mov
mov
test
jbe
mov
jae
xor
mov
outsl
pop
sub
pop
dec
mov
in
or
mov
rorl
out
movsl
stc
cmp
xorl
pop
aad
loop
sbbl
cmp
mov
jo
hlt
push
popf
mov
jbe
sub
loope
mov
mov
ds
fisttpl
jge
add
mov
addr16
inc
popa
cwtl
or
push
xchg
rcrb
and
or
xor
mov
sbb
sti
lret
test
jl
add
push
into
xchg
call
add
jae
cld
adc
stos
popa
out
roll
sbb
subb
cli
xchg
fistps
nop
jnp
pushf
mov
out
pop
adc
clc
xor
stos
imul
mov
shl
xchg
idivl
jo
mov
imul
xchg
and
das
movsb
pop
xchg
sti
push
inc
in
jl
xchg
ret
lret
cld
and
and
mov
out
pop
ficomps
pop
dec
push
aaa
xchg
push
lock
push
add
imul
aad
adc
into
inc
mov
jne
lahf
or
call
sub
testb
cmc
mov
arpl
jg
repnz
aad
pop
xchg
loop
outsb
aam
out
jmp
mov
inc
adc
mov
jecxz
add
pop
pop
jne
mov
push
cmp
ja
add
dec
jmp
sti
fildl
or
pop
and
sub
push
mov
imul
cmp
mov
icebp
mov
xor
divl
jg
arpl
and
and
sub
add
repnz
cmpl
rcl
aas
loopne
fistpl
fisubrl
cmp
mov
sbb
iret
jmp
xor
mov
in
xchg
cmp
pop
stos
sbb
dec
jmp
mov
in
mov
sbb
xor
push
inc
int
pop
mov
or
pop
mov
cmp
insl
and
mov
mov
ds
mov
mov
xchg
popa
push
mov
sahf
outsb
jg,pn
cltd
popa
idivl
inc
or
out
insb
pop
add
popa
jl
jle
movsw
jbe
add
insb
fs
or
movhps
bound
scas
mov
rorl
adc
or
imul
sbb
add
daa
outsb
adc
inc
xchg
xor
jge
dec
cmp
xor
pop
fwait
imul
jne
fstcw
mov
pop
adc
xor
xchg
dec
pop
xor
jbe
mov
imul
mov
fistpll
inc
sbb
sahf
pop
mov
lret
dec
sbb
dec
and
js
add
jl
push
and
push
fsubs
outsl
and
xor
gs
ljmp
inc
sahf
inc
dec
dec
adc
repz
inc
sti
jp
sub
mov
mov
mov
out
mov
out
dec
mov
push
ret
sub
xchg
outsb
mov
dec
loope
rcrl
in
nopl
cmp
mov
xchg
mov
push
aaa
scas
test
pop
leave
sub
imul
sub
and
or
or
push
xchg
xor
pop
xor
call
pop
call
mov
cmp
imul
or
add
lret
jne
pop
jp
push
lret
sbb
divl
pop
aad
mov
scas
dec
dec
add
les
in
insl
jmp
repz
sbb
jecxz
nop
adc
sarl
push
ss
