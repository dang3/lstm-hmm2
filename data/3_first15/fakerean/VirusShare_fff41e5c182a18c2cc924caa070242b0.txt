sbb
add
mov
sbb
push
into
mov
incb
imul
adc
cwtl
dec
roll
sahf
push
addr16
mov
pop
cmp
je
mov
inc
inc
in
push
pop
fidivl
mov
out
jmp
jne
scas
cmpsl
dec
push
push
xor
lods
leave
js
daa
mov
js
int
or
mov
sbb
iret
hlt
sbb
jb
popa
mov
stc
mov
out
and
mov
cltd
dec
cld
add
or
scas
out
sahf
aad
inc
or
icebp
pop
inc
hlt
or
incl
xchg
lahf
jecxz
sub
and
in
and
fldt
sub
std
push
inc
cltd
dec
in
lods
sti
cmp
push
and
jb
inc
jns
or
sbb
test
clc
xor
mov
pop
lds
cmp
aad
fstpl
in
jg
cmp
dec
arpl
fwait
scas
pop
inc
scas
lock
inc
push
movsl
scas
push
lcall
ret
aaa
pop
mov
mov
dec
cmp
leave
call
inc
jecxz
jl
iret
lret
int
out
loope
loop
mov
inc
mov
stos
jbe
push
test
jns
loopne
shr
repz
inc
setbe
push
dec
ljmp
mov
lods
into
push
sbb
jp
loopne
xchg
out
and
call
push
or
and
xor
std
les
push
push
cmpsl
push
sub
cwtl
mov
dec
mov
fdivl
inc
and
or
pop
jl
icebp
into
cmp
dec
enter
sub
sub
sub
dec
nop
push
mov
sbb
int
hlt
movsb
leave
shl
gs
cmp
lcall
fs
mov
dec
cmp
out
fwait
data16
push
orl
push
sub
adc
push
cmp
jbe
pop
mov
xor
stos
testb
add
aam
cmp
dec
adc
lods
in
sti
pusha
jne
mov
mov
mov
adcl
jb
adc
ds
xor
addr16
dec
ss
pop
bound
mov
daa
jp
fmuls
xorb
test
sub
xor
xchg
das
and
add
pushl
insl
mov
sbb
sub
ficoms
mov
inc
out
pushf
cltd
sarb
fs
les
stos
sbb
push
iret
cwtl
push
pop
mov
bound
sbb
pop
aaa
cmp
push
dec
dec
xchg
pop
xlat
mov
mov
mov
push
cs
mov
ficoms
data16
hlt
mov
or
pop
jae
or
mov
lcall
std
cmp
aas
test
enter
inc
imul
fs
mov
inc
js
mov
inc
cmpl
int
gs
mov
xlat
pusha
mov
inc
xchg
negl
push
inc
dec
pop
cmp
sbb
mov
push
adc
jle
je
insl
cmp
and
stos
pop
call
movb
fcom
idivb
inc
dec
sbb
push
jmp
xlat
stos
xchg
mov
sub
popf
in
mov
push
xchg
lds
ja
push
xchg
lock
push
push
hlt
data16
daa
mov
daa
xchg
dec
aam
lds
lock
pop
inc
cmp
repz
cmpsb
bound
xchg
leave
sub
stc
sub
ds
nop
ja
lahf
aad
jbe
lods
mov
xchg
cmp
xor
sbb
mov
int
push
fcompl
int
cmpsb
pop
adc
adc
pop
adc
mov
ret
and
fdiv
stos
mov
repnz
arpl
cmpsl
movsl
daa
lock
and
pop
mov
xor
stc
notb
in
push
mov
add
add
or
pop
stos
pop
cmp
mov
icebp
sub
dec
mov
sub
addb
xor
mov
mov
enter
fcom
hlt
dec
xchg
mov
dec
negl
dec
fldt
cmp
jbe
mov
test
jo
xor
cmp
sub
jno
xchg
mov
data16
adc
test
mov
inc
pop
mov
inc
clc
popf
jg
jp
add
inc
add
sbb
lcall
cmp
in
xor
lar
aaa
and
pop
jg
daa
and
daa
cld
mov
adc
and
add
pop
es
inc
in
adc
rolb
pop
pop
sbb
jb
aad
mov
xchg
jne
sbb
xlat
cmc
mov
sbb
sbb
xchg
push
stos
sbb
jmp
sahf
or
mov
xor
inc
inc
outsl
inc
lcall
loop
andb
mov
in
data16
xchg
cwtl
inc
adc
jns
cs
push
dec
mov
into
add
test
mov
rep
mov
pop
scas
push
jnp
pop
out
ret
hlt
jb
aad
pop
push
dec
stos
add
inc
fildll
mov
aad
push
scas
add
fsub
jecxz
mov
je
fwait
cwtl
cmp
cltd
orb
orl
icebp
mov
xor
xchg
pusha
sub
loop
jmp
or
fadd
std
hlt
jp
push
int
andb
jl
fistl
scas
add
les
or
test
xchg
fisubs
mov
mov
xchg
cwtl
lods
pcmpeqw
xor
mov
enter
data16
adc
loop
int3
mov
subb
push
sahf
fwait
jle
sti
add
xchg
add
fisttpll
repz
jle
inc
pop
push
xchg
dec
inc
leave
xchg
test
xchg
dec
add
repz
lea
or
cltd
popa
cli
sbb
push
std
lock
aam
imul
aam
mov
cmc
adc
xor
test
icebp
mov
in
mov
in
mov
xchg
outsl
pop
push
lcall
dec
addr16
into
mov
jmp
dec
mov
xor
loope
rcrl
daa
jl
push
push
test
and
dec
push
and
rol
dec
into
lods
arpl
aad
push
inc
int3
pop
dec
repnz
jecxz
mov
gs
decl
out
fistpll
mov
adc
sub
adc
mov
fs
imul
mov
and
and
ret
js
pop
pop
shll
add
mov
sub
int
mov
mov
in
fdivs
std
cmp
push
lods
rcrb
ss
pop
jecxz
xor
pop
sbb
clc
xor
mov
call
sbb
sbb
cld
fistpl
rorl
xchg
in
int
hlt
pop
mov
bound
dec
push
rorb
js
out
repz
leave
xor
enter
cmp
pop
popf
clc
test
dec
cmp
and
ljmp
xchg
fndisi(8087
lcall
add
mov
je
sub
mov
fadds
leave
subb
in
xchg
sti
mov
xchg
mov
jge
pop
mov
mov
push
std
push
outsb
icebp
movsl
pusha
rcl
adc
das
test
popf
stos
mov
dec
out
mov
and
jle
inc
lods
repnz
add
or
xor
shll
cmp
or
mov
loope
addb
repnz
xchg
adc
sti
jge
cltd
sbb
dec
pop
cli
stos
lret
ljmp
ret
sti
and
mov
ljmp
add
or
sarb
ja
cmp
in
inc
hlt
push
mov
pop
dec
mov
outsb
nop
stc
cs
mov
in
mov
pop
sub
push
pop
loopne
xlat
xchg
es
fidivrs
mov
lret
repnz
mov
xchg
cmpsb
pop
add
push
push
add
mov
adc
pop
or
scas
fs
outsb
das
sbb
pop
xor
rcrb
add
cmp
je
cltd
imul
push
xchg
arpl
adc
xor
pop
mov
fld
mov
pop
popf
mov
ret
lea
or
xchg
sbb
xchg
or
mov
mov
out
jae
les
push
dec
into
pusha
jg
or
ret
lock
cmp
sub
and
daa
mov
jns
mov
imul
adc
cmpsb
lcall
jb
sbb
dec
push
xchg
adc
movsl
int
ret
cmpsb
arpl
xchg
mov
sti
xadd
cld
lock
mov
hlt
dec
in
sub
add
ja
push
fcmovbe
jb
mov
mull
xor
dec
mov
xchg
inc
je
jg
dec
data16
xchg
addl
pop
orl
lods
das
xchg
add
test
jae
test
gs
js
adc
js
push
fucomp
dec
cmp
and
shlb
adc
push
dec
ss
repnz
daa
jecxz
pushl
push
roll
ret
test
lret
out
pop
imul
sbb
inc
in
lock
inc
stc
leave
cmp
push
and
out
fs
jno
jecxz
mov
out
add
cltd
pop
adc
inc
lea
and
xor
jno
pop
mov
mov
push
clc
out
xor
imul
lea
stos
push
add
imul
and
aaa
movsl
pusha
fwait
dec
xchg
xchg
inc
pushf
jno
xor
pushl
aaa
jmp
sahf
fsts
and
pop
movsl
mov
dec
or
pop
out
adc
cmp
cs
and
adc
imul
pop
jne
jnp
fiaddl
lret
mov
xor
inc
pushf
jae
mov
ret
add
ss
cli
jecxz
js
adc
cwtl
imul
call
jns
popa
call
pop
ja
jno
push
cmpsb
mov
clc
sub
ja
push
out
and
pop
fs
mov
pushf
mov
mov
inc
lret
pop
js
and
in
in
mov
lds
xor
inc
cmp
iret
test
cmc
xlat
mov
cwtl
push
jo
dec
inc
jae
sbb
shll
dec
mov
sub
fisubl
sub
xchg
inc
out
and
pop
imulb
add
stos
jne
jle
mov
sub
jge
ja
fs
insb
xchg
test
xor
out
mov
inc
xor
mov
xchg
pop
aam
orl
sub
xchg
jbe
ds
dec
add
mov
mov
or
ret
fisubrl
insl
out
adc
mov
call
mov
incl
in
adc
pop
hlt
cltd
addl
mov
imulb
stos
insb
jp
hlt
sbb
das
cs
fwait
lea
cmp
inc
xor
stos
roll
test
pop
pop
subb
lret
sub
add
adc
sub
mov
stc
or
vcvtdq2ps
pop
add
aaa
sbb
insl
cmpsb
pusha
push
int
adc
xchg
in
jns
aad
inc
add
mov
inc
mov
mov
sub
bound
lock
push
sub
or
or
dec
fildl
es
ss
or
mov
or
imull
and
mov
lret
inc
xor
fwait
stos
loope
pop
pop
clc
mov
testb
bnd
jg
jecxz
or
sarb
xorl
pop
call
xor
hlt
into
push
inc
sahf
jne
jge
into
stos
movsl
jecxz
pushf
push
cmpsb
jb
shr
pop
mov
or
or
mov
push
mov
jb
stos
les
sahf
mov
mov
in
push
fcoms
inc
mov
mov
test
add
lods
cmp
mov
jae,pt
jle
adc
shl
sbb
repz
fisttps
pusha
adc
sbbl
orb
shll
fs
sub
rolb
aas
push
xchg
stc
enter
adc
rorb
loop
les
jmp
sub
sbb
int
dec
lahf
inc
shrl
clc
cltd
pop
ret
sbb
call
or
mov
test
adc
icebp
test
scas
mov
fadds
xor
pop
mov
dec
movb
arpl
repz
sbb
lahf
xchg
jmp
bts
into
inc
adc
cmp
das
xchg
mov
mov
cwtl
outsl
push
xor
jb
clc
flds
testl
jl
std
loop
push
in
xchg
lock
icebp
subl
lea
push
jne
sub
std
dec
or
fcoml
push
lret
adc
cmp
cmp
icebp
or
fxch
hlt
js
into
mov
push
rcl
pop
dec
out
pop
fdivr
mov
mov
adc
cmp
ljmp
bound
lods
inc
cmpsb
push
add
ja
js
fdivrl
es
shrb
ljmp
mov
push
cmp
xlat
dec
enter
mov
jmp
inc
sub
leave
popf
in
jne
jno
dec
ret
xchg
inc
push
cli
adc
or
lahf
nop
gs
adc
fyl2x
pusha
fs
in
sbb
jnp
inc
add
xchg
xchg
adc
mov
std
cli
inc
test
dec
jmp
inc
pop
pop
cmp
add
pop
sub
movsl
jmp
adc
aas
xchg
scas
xlat
adc
fidivrs
sbb
out
je,pt
cmp
gs
adc
in
jmp
mov
mov
pop
adc
rcll
pop
xchg
or
push
xchg
mov
or
xor
push
jl
lret
mov
adc
xchg
std
cmp
int3
pop
jne
leave
cli
sbb
mov
and
sbb
pop
pop
mov
sbbl
pop
lods
sub
cmp
ljmp
jecxz
pop
movsb
loopne
or
lock
insl
jae
pop
into
lds
rcll
shlb
sub
jns
sbb
mov
jecxz
push
les
xor
mov
pop
bound
je
mov
push
out
push
xor
cs
mov
or
xchg
imul
sti
repnz
dec
scas
adc
addr16
ret
push
xor
mov
mov
shlb
add
outsl
lea
leave
pop
push
nop
mov
pushf
xchg
pop
daa
inc
clc
mov
loop
jmp
into
fsubl
push
jle
frstor
out
push
pop
inc
pop
je
xor
cmp
sar
stos
jno
pop
sub
popa
es
bound
cmp
xchg
or
mov
pop
int3
and
jle
push
ljmp
adc
adc
xchg
cmp
push
cmc
call
xchg
fisttpl
dec
scas
pop
jg
in
ret
rcrl
ret
add
aam
mov
pop
xchg
dec
or
xor
movl
test
pushf
nop
cmp
jecxz
lret
adc
in
repz
mov
outsl
adc
imul
pop
cmpsl
icebp
push
out
inc
add
inc
sub
cmp
andb
scas
fsubs
fisubl
adc
mov
repz
aas
pop
daa
fcompl
pop
sahf
mov
mov
cwtl
pop
mov
adc
scas
gs
sub
xlat
lds
jnp
pop
loop
cmpb
and
lods
shr
enter
sbb
sbb
stos
aad
lea
fstpl
mov
or
cmpsl
sahf
adc
data16
pop
sub
inc
shl
inc
cwtl
push
ljmp
jo
mov
xor
insb
sub
jp
mov
mov
cmp
lcall
push
mov
add
leave
push
jbe
jo
testl
jne
add
ja
outsl
ret
push
cli
lds
testb
jnp
incl
sbb
inc
rcl
mov
xchg
xrelease
push
or
out
and
notl
call
and
jg
outsb
scas
jne
aaa
movl
cmp
add
imul
inc
stos
jecxz
insl
inc
pop
leave
cmp
test
int3
mov
into
pop
lret
pop
jns
xor
data16
xlat
ret
popf
ljmp
cs
je
daa
cltd
inc
mov
or
cmp
popa
sbb
lea
cmp
ret
orb
out
nop
or
cwtl
inc
cmp
push
es
sbb
movsb
adc
stc
pop
mov
jmp
cs
hlt
jne
cmp
ljmp
shrl
lret
clc
fs
or
dec
scas
xor
or
adc
xor
mov
cwtl
das
cmpl
imul
xchg
imul
dec
cmpsl
icebp
mov
insl
cmpsb
mov
or
xchg
sbb
out
stos
adc
cmp
push
das
ret
shrl
not
int3
push
in
inc
nop
repz
ss
ljmp
std
lret
mov
shl
mov
addr16
pusha
cmc
pop
cmp
pop
push
lods
ljmp
add
out
mov
lock
fisttps
lcall
xlat
test
fnsave
pop
xchg
xchg
mov
in
sarl
cld
das
mov
xor
enter
ds
insb
xchg
mov
hlt
cmp
jbe
pop
aaa
outsb
xlat
cmp
jns
ret
jbe
push
data16
xchg
jg
rolb
xchg
dec
jno
adc
nop
jg
mov
out
xchg
hlt
jl
adc
pop
pop
dec
enter
rclb
sub
imul
xchg
int3
pop
xchg
xor
or
or
jae
dec
jecxz
xchg
movsb
fildl
popf
jo
sbb
sbb
push
shl
mov
leave
xor
xchg
jl
out
sbb
add
cmpsl
sbb
mov
shll
test
adc
dec
xchg
jne
daa
scas
adc
or
jne
and
sbb
ljmp
arpl
and
cmpsb
xorl
dec
test
mov
imul
dec
cmpsl
and
lods
loopne
push
add
and
dec
loop
add
push
adc
jae
xor
adc
dec
in
imul
add
dec
sbb
fistpl
pop
sahf
leave
aas
dec
sub
nop
xchg
dec
daa
call
mov
dec
mov
xchg
es
pop
sarl
lcall
je
dec
lods
cwtl
push
outsl
orb
push
pop
mov
movsb
pop
and
xor
aad
lret
leave
mov
sbb
mull
adcb
scas
in
sub
sub
dec
jne
push
inc
aaa
or
test
nop
jae,pt
mov
js
jge
and
jl
lret
outsb
pop
stos
jmp
inc
int3
jo
pusha
lret
mov
and
clc
hlt
imul
addl
in
jo
movsl
add
rolb
mov
lods
sbb
jp
xor
cmp
jbe
popf
js
dec
mov
fs
add
xor
es
xchg
cmp
icebp
sbb
mov
and
clc
negb
push
cmpsb
fcoml
les
and
stos
fstpt
xlat
mov
adc
arpl
add
aam
lret
pop
divb
scas
xchg
int
movsl
and
nop
pushf
jnp
adc
xor
icebp
mov
lods
loope
dec
inc
loopne
mov
or
into
or
idivl
lods
or
cmp
int
dec
data16
lock
mov
ftst
push
stos
jl
ss
push
sbb
dec
fldt
sub
mov
sarb
push
mov
xor
in
xchg
in
pop
aaa
imul
in
sahf
add
bound
sub
jae
inc
or
cmpsl
frstor
dec
aam
or
test
dec
movsl
mov
mov
jl
push
sahf
lcall
add
aam
cmp
inc
icebp
adc
lcall
push
hlt
mov
mov
jecxz
add
jmp
push
cmpl
lods
and
mov
out
fisttps
femms
in
sbb
jmp
iret
test
xchg
rdmsr
add
icebp
cmp
pusha
push
jp
mov
andb
inc
test
fldenv
jecxz
setbe
jp
call
push
adc
and
jg
mov
repz
jno
data16
jmp
mov
sbb
int3
orl
daa
lret
jl
or
push
adc
dec
dec
aas
or
pop
fisttpll
das
loope
push
addr16
jno
sub
jle
cs
xchg
jne
addl
sub
or
lock
in
jl
enter
mov
xchg
fs
aam
jecxz
push
das
dec
mov
add
jbe
repnz
or
xchg
pop
in
jae
addr16
jb
inc
xorb
jg
push
insb
gs
mov
mov
sti
fnstsw
js
nop
cmc
sub
data16
fdivrl
in
mov
test
out
xlat
fdivr
sub
pop
fldenv
lcall
jl
mov
push
add
fsubp
stos
sub
add
mov
into
mov
and
or
sbb
neg
fs
or
lahf
cmp
mov
call
or
cwtl
mov
subb
mov
mov
test
dec
es
add
jecxz
int
cmp
sub
ret
xor
mov
loope
lret
icebp
ffreep
adc
int3
iret
sarb
enter
into
inc
scas
fdiv
or
cmpsl
xor
mov
mov
cmp
ds
mov
cld
sbb
jnp
adc
sbb
and
lcall
push
jl
mov
sbb
pop
cmp
in
cmpsb
cmpsb
mov
xor
addr16
ret
movsl
cwtl
seto
and
aas
mov
xor
aam
ficoms
push
or
dec
rclb
arpl
subl
adc
add
outsl
mov
fwait
push
sub
into
inc
loop
mov
inc
lahf
pop
mov
cmp
fimull
mov
leave
cs
jo
sbb
out
sub
pop
cmp
sub
sbb
in
stos
scas
sahf
cmp
pop
cmp
fs
ljmp
cmp
jge
enter
pop
call
loop,pt
push
push
push
or
dec
fldt
enter
and
jns
mov
movsb
pop
pop
dec
shll
pusha
push
in
test
call
jecxz
dec
rcrb
dec
pop
mov
leave
in
cltd
dec
in
mov
mov
sahf
es
les
roll
sbb
adc
movsb
js
push
bound
push
fs
aas
pop
es
lock
push
add
push
jb
mov
sbb
es
popf
mov
mov
xchg
mov
call
hlt
cmp
inc
imul
pop
test
jg
add
sbb
ret
les
fdivs
rolb
pop
jle
xchg
fdiv
shlb
cmp
xor
and
jle
mov
lahf
test
and
mov
arpl
inc
negb
dec
movsb
adc
je
or
sub
jle
push
fists
into
call
mov
clc
ret
insl
dec
inc
adc
or
scas
sub
fdivl
xchg
pushf
mov
ret
lea
dec
hlt
repnz
mov
call
sub
daa
jp
icebp
bound
jne
sub
or
cwtl
xor
cmp
lods
cld
add
mov
imul
testl
aad
xchg
cmp
cwtl
cmc
mov
xor
or
pushf
les
adc
int
in
fs
pop
lret
out
lods
fwait
mov
xchg
mov
lds
int
int
adc
xchg
sub
imul
lock
fs
insl
pop
lods
dec
das
dec
nop
shr
je
arpl
cwtl
scas
adc
outsl
sub
pop
adc
sub
mov
or
inc
into
es
std
inc
pop
inc
fs
add
pop
and
adc
adc
pop
mov
cmp
mov
das
pop
cmp
sahf
in
sbb
jp
or
clc
add
pop
gs
push
movsl
sub
mov
loop
shlb
mov
xor
lds
cltd
inc
test
cmpsb
gs
inc
mov
fs
mov
test
cmc
in
movsb
jae
or
ds
popa
bound
pop
test
lock
nop
out
sub
hlt
and
js
lds
test
lret
and
or
xchg
jae
push
sub
scas
pushf
leave
cwtl
andb
or
pop
cld
mov
or
mov
pop
lock
or
push
jae
pop
mov
cmpsb
lahf
lock
jne
addr16
mov
inc
dec
cwtl
daa
cwtl
sub
sarb
push
sarl
in
stc
ljmp
andb
mov
pop
push
je
xor
cmp
cltd
mov
mov
xor
push
in
xchg
pop
out
or
enter
pop
int
jne
test
cmp
jne
pop
incb
iret
push
jmp
xchg
orl
movb
pop
xchg
mov
lret
clc
xchg
xorb
aaa
mov
xlat
int3
mov
pusha
fs
sub
subb
lcall
pop
and
inc
push
adc
xchg
push
sahf
sbb
cmp
inc
pop
out
decb
jg
ss
hlt
clc
cmpsl
inc
xchg
frstor
mov
pusha
dec
test
sub
popf
js
mov
adc
push
adc
pcmpeqb
loopne
xor
mov
xchg
sahf
jae
adc
and
cs
pop
or
mov
xor
and
and
mov
stc
or
arpl
pop
lea
imul
jae
inc
subb
cmp
or
imul
ret
pop
cwtl
adc
test
lar
mov
xchg
std
test
loope
cmpsl
in
testb
xor
xor
xor
or
cmp
push
adc
or
js
fwait
add
mov
inc
vmovd
andb
sub
mov
icebp
sahf
movsb
shll
push
xchg
or
pop
xchg
icebp
sbb
and
add
inc
pushf
gs
xor
rcr
ljmp
cld
mov
xchg
and
in
dec
jne
xor
push
fs
ljmp
sub
fists
add
lcall
loopne
shll
push
xchg
nop
mov
pop
loope
jg
imul
adc
add
xor
sub
cmpsl
into
arpl
shrl
test
xchg
cmpsl
sbb
ja
cmpb
js
sbb
sbb
scas
mov
dec
or
int3
dec
or
lahf
shll
lahf
xchg
test
adc
inc
lret
std
push
mov
jle
hlt
xor
pop
or
cmp
rcr
jl
xchg
sbb
mov
xchg
xchg
pop
mov
enter
adc
hlt
stos
xchg
mov
stc
xchg
or
xchg
lock
push
and
adc
mov
pop
adc
imul
cmp
xchg
in
fdivl
sbbl
or
call
sub
add
cmp
ljmp
jae
shlb
and
je
mov
sub
popf
pop
shlb
iret
pop
pandn
lret
in
dec
dec
mov
add
ja
ja
mov
popl
vpaddsw
sbb
test
lock
loopne
mov
push
fidivrs
mov
push
cmp
cmp
in
sub
scas
jmp
fisubrl
sbb
mov
test
aad
pusha
lock
xor
test
cmp
lcall
xchg
xlat
loopne
jmp
push
xchg
cmp
sti
ret
leave
or
push
sbb
xor
push
push
loop
mov
fsts
xor
xchg
inc
jo
inc
lods
cmp
inc
pop
mov
cmp
cld
and
negl
out
imul
mov
and
adc
mov
mov
into
jle
test
dec
dec
mov
push
ja
pop
push
clc
pop
add
jnp
ljmp
pop
loop
jp
fs
pushf
jg
popa
ds
xchg
cmpsl
addb
adc
fsubs
sahf
loop
inc
in
sbb
mov
jecxz
pop
mov
sub
cli
lret
mov
cmp
jecxz
or
sbb
fldenv
aad
repnz
cmp
cmp
in
test
xchg
cld
sbb
iret
pushf
jmp
xor
icebp
xor
and
sub
xchg
loope
lds
divl
mov
test
cltd
lea
adc
mov
fsub
test
mov
es
xchg
adc
sbb
mov
sbb
inc
jl
mov
sbb
movsl
movsl
dec
mov
push
cltd
pop
lea
loope
lcall
rcrl
cmp
inc
aaa
sahf
push
mov
outsl
sub
or
push
jne
xchg
inc
test
sub
cmp
mov
add
outsl
repnz
or
loope
pop
mov
popf
jne
fcoms
dec
dec
sub
push
or
and
vmovups
dec
clc
push
jo
cmp
dec
rorl
sub
pop
movsb
das
adc
xchg
xor
std
loopne
cmp
xchg
mov
adc
push
imul
xor
mov
push
hlt
mov
aas
or
push
and
scas
sub
ret
aaa
sbb
lock
add
add
jo
sub
fwait
pop
adc
mul
xor
push
or
fisttpl
jecxz
test
repnz
call
stos
shll
mov
scas
add
test
jb
test
jnp
stos
mov
lods
pushf
mov
sahf
mov
adc
or
call
idivb
sbb
aaa
and
sbb
mov
cltd
cwtl
add
pop
lods
dec
icebp
and
jo
ficoms
in
adc
hlt
cmp
adc
mov
scas
and
cmpsl
push
scas
xchg
mov
in
dec
aaa
cli
scas
mov
jns
arpl
or
push
jmp
in
popf
push
pushf
jb
mov
pop
sbb
sub
or
sbb
sub
jb
adc
cmpsl
push
jb
mov
sbb
pop
add
lods
int3
fstps
cmpsb
dec
xor
pop
notb
lds
pop
rclb
cmp
xor
popf
add
jmp
popf
int3
imul
mov
fcomps
into
scas
adc
int
in
arpl
and
adc
mull
pop
ja
shrb
inc
into
sbb
xchg
mov
dec
shll
mov
mov
arpl
movsb
or
repz
adc
fistl
add
dec
je
ffree
aas
xor
andl
sbb
testb
jle
fs
or
in
cmp
insb
xor
add
sbb
push
cs
pop
lret
or
aad
movb
pop
push
inc
leave
dec
add
and
insb
inc
fwait
in
jle
push
jp
lret
test
mov
cltd
and
call
popf
popa
xchg
jle
lods
sbb
loope
pop
sbb
cmpl
mov
or
and
xor
sbb
dec
js
sub
rcr
dec
imul
popf
mov
push
insl
cld
push
xchg
pop
out
dec
arpl
xor
and
scas
into
jo
push
add
sbb
test
lret
sub
andl
data16
push
sub
clc
push
inc
stc
data16
sub
rorb
mov
inc
xchg
cmp
dec
push
pop
mov
ret
loop
xchg
jne
adc
test
loop
ror
sarb
out
cmp
loope
push
cmpsl
mov
insl
icebp
gs
or
mov
mov
enter
iret
xchg
jp
test
push
call
dec
pop
pop
dec
lahf
mov
sub
jp
lcall
das
fdivl
or
jle
enter
cmp
mov
adc
addl
stos
push
push
add
pop
sbb
and
inc
dec
les
and
aas
sub
aam
test
or
fdivr
in
aas
lods
loopne
push
push
jnp
mov
mov
push
shll
hlt
call
inc
ja
inc
add
pop
ret
adc
or
and
outsb
pop
hlt
mov
cwtl
loop
push
adc
test
pop
lret
push
scas
xor
ret
loope
and
gs
stc
jb
test
sahf
mov
nop
ja
addb
stos
pop
nop
rol
daa
xchg
int3
out
notb
xchg
nop
test
dec
or
ljmp
fisubl
sub
iret
into
or
and
ljmp
ja
test
sub
outsl
mov
mov
sarb
ds
aas
adc
and
sub
cmp
jnp
iret
sti
sub
ficoml
add
data16
or
repnz
pop
ss
fs
push
cmp
jle
fimuls
sub
out
in
sarl
sub
loopne
loop
into
add
cmp
mov
dec
insb
push
fcomps
adc
jge
cwtl
mov
mov
popa
fwait
push
shll
xor
popf
daa
cmp
jns
dec
xchg
and
hlt
sub
mov
cmp
andl
test
inc
sub
test
adc
pop
packsswb
inc
int3
mov
jo
rcrl
jecxz
sub
push
add
mov
inc
js
icebp
sbb
gs
or
mov
mov
fsts
sbb
mov
dec
aam
rcr
xor
or
les
fstpl
iret
mov
movsl
and
outsl
fldt
xor
das
aad
jno
cmp
mov
test
or
or
insl
fs
jne
insb
dec
cmc
push
lea
setb
sbb
in
sub
adc
xchg
cltd
lea
sub
scas
push
ds
call
sub
push
pop
cwtl
ret
mov
insl
jns
fnstsw
fiaddl
push
or
mov
hlt
shrl
insl
or
add
dec
jne
add
ljmp
shr
inc
add
es
push
cltd
add
test
mov
lcall
inc
in
push
cld
jns
cmpsb
inc
pop
je
jne
jnp
jbe
add
bsf
inc
lods
ret
pop
mov
or
stos
add
pop
movsl
sahf
aad
adc
rcrb
mov
and
out
nop
mov
es
out
or
jno
into
xchg
call
int3
sub
cmp
dec
mov
cs
aam
test
shr
sub
fbstp
es
cs
shlb
testl
inc
mov
adcb
or
cmp
mov
rcrl
sub
cmp
js
arpl
jl
xchg
mov
jp
adc
pop
test
xor
sarl
pop
decl
clc
jo
jne
scas
aas
jle
and
lret
xchg
fldenv
mov
jmp
sbb
shll
or
mov
dec
mov
pop
inc
sbb
cli
jl
in
mov
push
movsl
sub
add
dec
testb
in
sub
aam
sbb
sub
inc
sbb
sbb
into
rcrl
push
mov
es
xchg
and
repz
js
jbe
gs
ret
clc
fcoml
xchg
enter
call
mov
push
mov
ret
adc
sub
imul
cld
dec
pop
cmp
cmpsl
push
mov
popa
jle
cmc
iret
jno
es
fidivl
xchg
arpl
xchg
mov
inc
aas
outsb
mov
aad
inc
sahf
add
cmp
fmuls
mov
cltd
jbe
mov
out
mov
inc
cmpsb
pop
sar
or
subl
and
movsb
bnd
sahf
sub
icebp
push
ja
insb
in
and
and
jb
pop
fstps
ret
std
lahf
jno
data16
dec
in
movsb
je
sub
lcall
leave
lahf
jb
mov
dec
pop
jno
pop
mov
push
or
mov
or
sub
loopne
lret
outsl
pop
sahf
sbb
ficoml
jg
cmp
add
dec
jns
push
add
jp
mov
cs
addr16
cmp
inc
add
dec
aaa
xor
jo
cmp
iret
mov
push
rcrb
movsl
fwait
into
repz
cmpsl
sub
popf
or
xlat
adc
bound
or
arpl
and
in
test
cs
pop
mov
and
jno
in
inc
sub
insb
adc
icebp
dec
outsb
pushf
stos
pushf
aaa
or
out
dec
dec
outsb
push
dec
sub
cmpsl
xor
scas
mov
push
movsb
jnp
sub
mov
stc
ret
inc
and
imul
xor
sti
call
xchg
js
ljmp
es
pop
hlt
std
repnz
test
push
inc
rcll
sub
jmp
pop
sbb
sub
xchg
test
pop
sub
or
jl
or
mov
inc
ljmp
xchg
icebp
jmp
and
es
lret
xor
cmp
les
mov
pop
push
cmp
dec
cs
jge
push
jge
sti
ds
out
pop
ja
sbb
into
cmp
inc
xchg
push
loop
sub
dec
fstpl
or
or
fldt
add
cs
jmp
shrb
lret
cltd
xchg
imull
pop
and
dec
sbb
aad
pop
pop
loope
outsb
add
or
xor
xchg
mov
mov
xchg
adc
mov
aaa
mov
push
test
inc
test
mov
cmpb
lods
daa
cmp
xlat
adc
fadds
jae
fsts
and
cmp
jle
push
jo
arpl
and
mulb
cli
push
repz
add
scas
cmc
jecxz
es
cmp
jae
stc
xchg
fisubrs
push
sahf
adc
unpcklps
lods
push
ja
xchg
shlb
shll
jge
addr16
xchg
aaa
adc
loop
jne
mov
adc
jp
push
push
lods
lret
pop
insl
jmp
fdivs
gs
mov
jnp
dec
outsb
inc
pop
or
out
sub
sbb
imul
inc
pop
jge
cmc
pop
push
or
sub
jae
jle
push
aam
fldl
mov
xchg
jp
mov
outsb
add
cld
and
loopne
aaa
add
mov
dec
imul
pop
mov
fisubl
mov
psllw
rcr
mov
push
call
iret
dec
out
cwtl
ljmp
hlt
xor
inc
aas
outsl
mov
pop
fmull
sbb
xor
into
rol
xor
sbb
xchg
ret
jmp
jno
mov
sub
clc
pop
mov
sbb
push
lret
and
das
sarl
and
jl
and
sti
cmp
in
idivb
js
rcr
and
aas
jbe
sbb
mov
xor
loope
jg
mov
and
xchg
inc
ret
test
iret
dec
data16
scas
and
roll
push
fs
push
mov
lea
and
mov
and
sub
jno
mov
push
xchg
movsb
scas
jmp
stc
cmpsb
jnp
fdivrs
sub
dec
push
fsubl
xchg
sub
cmpsl
test
andl
jl
push
data16
mov
sbb
popf
mov
ficompl
rcrb
jg
insb
sub
arpl
mov
jbe
std
notl
and
pop
mov
int
xlat
lret
mov
push
loopne
sub
sbb
xchg
dec
in
push
add
nop
rcrb
push
inc
xor
cs
cmp
pop
fwait
lock
or
cli
sarl
sub
ror
iret
test
cmc
sub
std
xchg
pop
dec
cmpb
inc
push
jl
decb
dec
xor
inc
mov
push
inc
push
cmp
mov
or
jl
in
popa
pop
sti
lcall
push
adcb
and
sbb
sub
push
adc
push
add
cltd
fdivs
cli
js
loop
xchg
mov
fisubs
sub
outsb
sub
cwtl
inc
js
cmc
inc
lea
jno
lahf
movl
mov
mov
daa
add
fldl
es
cmp
pop
jae
xchg
sub
pop
dec
jns
fcmovne
lret
mov
and
xor
test
shrb
push
dec
fcmovb
jp
mov
pop
cmc
or
shlb
or
stc
sub
gs
sbb
addr16
xchg
scas
das
push
cmp
aad
push
fwait
inc
cltd
fsubrl
int3
in
ficompl
shrl
add
add
or
inc
rolb
test
add
cwtl
sbb
loop
mov
inc
ja
and
in
cmp
int3
mov
lods
inc
sub
xor
mov
dec
push
add
inc
push
inc
dec
out
fisttpl
dec
mov
inc
cs
jecxz
ror
jl
aad
out
cmp
mov
mov
sbb
ds
dec
mov
test
cmpb
pop
cmpsb
jl
jo
and
rcll
mov
mov
adc
pop
cmpsb
inc
push
repnz
mov
jge
adc
stc
mov
xchg
fdivrs
mov
mov
mov
mov
sub
mov
aam
cltd
pop
or
xor
mov
cs
and
xchg
cmp
add
sub
add
jno
xchg
push
ffree
pop
icebp
jg
sbb
dec
popf
shrl
push
leave
xchg
mov
or
enter
or
sub
cmp
pop
xor
test
mov
push
pop
adc
mov
int3
movsb
jle
popa
and
adc
std
mov
std
or
mov
jecxz
and
pop
pop
xor
sahf
pop
inc
xchg
inc
add
xchg
cmp
jns
repnz
inc
ljmp
push
dec
pop
repnz
loope
sbb
cli
or
pop
cs
rcll
iret
std
cmpsl
add
sti
pop
jecxz
mov
xor
aaa
adc
push
adc
scas
in
mov
ret
idivl
mov
int
sbb
mov
dec
dec
cmp
sub
cmp
mov
leave
cwtl
jp
out
dec
ds
add
cmc
ret
mov
pop
cwtl
imul
lahf
mov
inc
sub
inc
aas
push
imul
aaa
movsl
std
andl
lcall
fprem
sbb
hlt
push
mov
xor
adc
movsb
and
lret
xor
pop
mov
push
cmc
xor
mov
xchg
jg
lea
adc
ficomps
sub
mov
lcall
sti
cld
pop
pop
adc
add
cmp
movsb
cli
push
loopne
scas
inc
jle
inc
scas
les
imul
ret
repz
and
jne
adc
imull
fs
shld
pop
fs
mov
cmpsl
pop
mov
add
pop
xor
cmp
jl
xorb
xor
or
lcall
add
or
aam
pusha
das
xorb
inc
scas
sbb
icebp
mov
push
dec
mov
adcb
fmull
inc
adc
xchg
xchg
push
inc
cmpsl
lds
pop
dec
xchg
cltd
mov
adc
lods
out
fwait
fs
xchg
out
aas
push
aad
inc
mov
inc
repz
cld
ret
insb
xor
int
or
stos
fsts
clc
lock
test
mov
stos
stos
xor
cmp
imul
in
fdivs
stc
addb
shlb
mov
movsb
jmp
les
hlt
clc
or
stos
lea
pop
lret
je
cmp
sti
vphaddwq
adc
cwtl
inc
adc
sub
dec
cs
lret
xchg
push
movsb
inc
jo
mov
or
mov
add
popa
mov
test
jmp
dec
xchg
add
dec
rolb
test
pop
enter
insb
dec
mov
and
punpckhdq
lahf
inc
in
leave
xchg
and
outsb
sub
push
cld
lahf
pop
test
movsl
inc
xlat
lods
notl
fstps
lcall
data16
into
inc
inc
outsl
jno
notl
clc
sbb
xchg
lods
sbb
mov
sub
sbb
stos
mov
cltd
inc
mul
jg
decb
dec
xchg
fisubrs
aas
std
add
cmp
mov
inc
cmp
pop
mov
mov
popf
adc
daa
sub
xchg
rolb
pop
xor
cli
std
pop
inc
push
sub
push
xchg
adc
sub
push
adc
daa
push
xchg
loopne
dec
cld
sbb
movsl
sbb
and
cmpl
cwtl
add
mov
leave
in
sbb
and
cmc
pop
popf
outsb
lods
dec
cli
pop
push
imul
test
adc
sar
int3
aaa
mov
inc
fs
xchg
inc
push
out
pop
nop
pop
lock
sti
inc
cmp
mov
sahf
xchg
mov
jl
and
comiss
cmpsb
popl
sbb
sub
das
jecxz
bound
and
dec
push
xchg
ret
loop
add
jle
outsb
subb
sbb
fdiv
bound
cltd
xchg
pop
ficoml
dec
jb
lea
xlat
push
pop
xchg
and
mov
sub
arpl
inc
scas
sbb
scas
adc
aaa
and
dec
fdivrl
adc
test
xchg
xor
jg
dec
popf
in
call
or
mov
mov
loope
adc
cmp
test
cmp
sbb
shlb
cmpsb
mov
dec
dec
out
or
flds
fsts
lret
test
iret
cs
inc
fsubrp
xor
cli
mov
mov
push
pushl
fstpt
cmpsl
scas
xlat
mov
sub
xchg
pushf
jmp
mov
mov
mov
add
outsb
and
mov
les
negb
sub
enter
cmp
in
xchg
add
sub
ret
mov
movsl
pushf
sarl
sbb
adc
ret
add
xchg
inc
leave
repz
std
mov
pop
movsb
mov
lock
pop
lock
mov
xchg
mov
pusha
and
pop
cs
lea
mov
mov
int3
pop
and
ljmp
into
stc
mov
jl
sbb
push
stos
xchg
stc
loope
arpl
adc
movl
loopne
shll
sub
stos
aaa
jo
jo
hlt
push
adc
fdivrs
ja
mov
mov
stos
addr16
inc
cli
hlt
jo
push
cmp
jmp
xchg
adc
jmp
pop
ret
test
imulb
jl
das
js
fidivl
lock
lods
and
jle
loope
jmp
repz
clc
mov
adc
jbe
setl
adc
inc
jnp
push
lds
imul
mov
or
pop
jg
pop
fiadds
mov
movsl
sahf
scas
popa
add
dec
aas
je
inc
sti
mov
insb
or
cmpl
ljmp
scas
test
popa
mov
push
mov
push
cs
jle
gs
pusha
xor
jbe
into
scas
sub
lds
imul
xor
movsl
sub
in
ljmp
xchg
add
add
xlat
dec
out
fs
sahf
into
sub
mov
push
jo
scas
mov
mov
and
add
imul
push
sarb
fwait
push
xor
xchg
mov
pop
or
ljmp
popf
push
sti
sti
mov
mov
aaa
mov
pop
push
cmp
push
cwtl
fcmovnu
pop
stc
nop
out
mov
stos
jp
or
bnd
dec
sub
movsb
mov
pop
cmp
ret
add
popa
dec
sbb
adc
test
dec
jle
pop
sbb
cmp
jb
mov
outsl
add
mov
ljmp
test
ret
push
mov
jno
clc
pop
adc
sbbl
int
xchg
das
or
push
daa
pop
jae
sbb
add
mov
pop
dec
jmp
jno
mov
iret
mov
mov
adc
push
mov
rcrb
and
dec
loopne
cmp
fnstsw
sti
fsub
mov
in
popa
adc
and
ret
pop
xlat
sbb
imul
xchg
imul
adc
mov
xor
adc
out
inc
data16
std
jp
pop
xor
scas
and
mov
lods
cmp
lods
loope
cmp
sub
loope
in
cmpsl
xchg
xor
leave
icebp
inc
push
and
mov
outsb
jmp
jl
xchg
jb
jne
mov
hlt
push
pushf
mov
sbb
mov
cmp
sub
cmp
cmp
rcll
call
daa
pop
xor
test
lea
and
dec
jg
dec
lods
cltd
push
fsts
sub
mov
mulb
push
xor
mov
sbb
dec
sti
pop
stos
out
test
xor
jb
cmpsb
mov
jns
adc
pop
ret
push
cwtl
mov
pop
out
mov
adc
jp
dec
push
cmc
loop
loope
sbbl
incb
adc
push
adc
cmp
pop
and
xchg
loop
pop
lock
in
shlb
pop
jp
dec
or
pop
push
dec
sub
jmp
add
dec
lea
imul
aad
sbb
adc
testl
xor
test
loopne
ljmp
mov
pushl
insb
jns
dec
ss
mov
mov
dec
sub
and
sti
fidivs
xor
stos
fistpll
gs
xor
daa
enter
or
and
jge
sub
jno
jns
dec
bound
cli
lcall
mov
sub
cmp
aas
lea
dec
fnstsw
mov
lock
cwtl
clc
sbb
xchg
cmc
sub
sbb
popf
xchg
outsl
adc
xchg
sti
nop
pop
sub
jg
std
push
jge
bound
mov
push
sbb
xor
sti
out
in
push
lea
sbb
jo
movsl
inc
mulps
sahf
pop
xchg
add
inc
test
addr16
jbe
mov
ret
test
mov
add
xchg
inc
dec
and
jecxz
adc
adcl
test
sbb
dec
jp
testl
mov
imul
or
stos
and
test
bound
pop
cs
gs
fmuls
cli
lea
fbld
or
xlat
out
in
cmpsb
test
jg
je
lret
into
mov
ljmp
xor
shr
cld
pop
popf
outsl
mov
push
push
jae
mov
adc
cs
pop
dec
insb
out
not
fidivl
mov
cwtl
ss
pusha
js
and
mov
adc
jecxz
jg
pop
dec
xchg
sub
popf
sbb
pop
sbb
sbb
xor
sub
js
or
daa
xchg
jnp
jo
out
jb
xor
dec
lcall
and
shl
pop
cmp
xor
or
movsl
idivl
pop
popf
hlt
fcmovu
scas
dec
sbb
movsb
cmp
or
fs
cmpsb
pop
je
subb
pop
sub
mov
adc
xchg
in
stc
mov
push
dec
dec
out
pop
or
sub
mov
bound
xchg
insl
mov
pop
stc
xchg
cld
aam
pop
cmp
inc
fbld
push
pushl
insl
sbb
pushf
lret
cs
fs
iret
push
lods
jne
inc
cmpb
or
loopne
adc
adc
push
cmp
cld
sysret
mov
cmp
jmp
ret
xor
hlt
fisubl
jae
lods
xchg
xlat
mov
xchg
xchg
outsl
arpl
cld
push
mov
pop
fwait
movsb
loopne
lea
push
in
enter
jae
pop
loopne
pushf
lcall
or
outsb
sbb
push
dec
clc
mov
rolb
sbb
xchg
push
daa
imul
arpl
fimull
inc
fisubrl
jbe
aaa
int
insb
pop
xchg
movsb
aas
mov
nop
rcl
dec
mov
push
cmp
cli
data16
pop
in
aam
add
or
dec
or
clc
popf
stc
jnp
xor
pop
inc
sarl
jl
jb
callw
inc
lcall
xchg
mov
push
test
or
add
int
pop
mov
roll
rcrl
repnz
nop
mov
pushf
out
inc
inc
push
pop
mov
fmul
push
mov
test
scas
jge
dec
jns
pop
lret
xor
iret
pop
sub
push
hlt
mov
aaa
cmp
mov
cmp
dec
cli
movsl
ficoms
xor
sub
lods
push
outsb
sbb
push
mov
xchg
pop
or
iret
test
inc
shlb
add
jae
push
ja
pop
sti
pop
mov
shlb
and
jns
xchg
das
insl
andl
push
cmpl
cld
mov
or
inc
jb
and
jb
mov
push
lea
call
sarl
sub
xchg
imul
push
xchg
jno
lahf
sub
mov
dec
les
or
push
mov
pop
jnp
adc
jle
shlb
cmpsb
lea
pop
lcall
lret
push
lods
xchg
int
rdmsr
cltd
jbe
repz
xor
shlb
pop
mov
inc
btc
fs
out
push
add
or
imul
lahf
aaa
test
xor
inc
mov
mov
and
jb
decl
push
in
sub
mov
push
inc
dec
xchg
mov
pop
jb
out
push
jg
imul
repz
out
cmpb
jle
mov
testb
add
jle
js
popf
push
cmp
jno
mov
jns
and
mov
pop
mov
xor
jbe
gs
int3
fwait
dec
inc
lcall
lahf
or
xor
lret
insl
inc
push
test
insl
addr16
std
shrl
aas
repnz
aam
xor
movsb
cmp
mov
div
and
jns
and
or
out
inc
loope
outsb
cmp
addr16
mov
adc
shll
xchg
xchg
js
xchg
bnd
sbb
xor
movsl
rcrl
sahf
aad
inc
fwait
sahf
cmp
orb
lods
loop
fistps
mov
cmpl
pop
mov
das
stos
std
add
push
int
iret
xor
jae
mov
sbb
adc
cmp
and
shl
sbb
insb
dec
xchg
xchg
xor
cs
iret
add
repnz
lock
xor
pop
sub
dec
or
push
sub
fists
dec
out
xlat
je
pop
fistps
and
mov
inc
sub
jno
sbb
push
filds
decb
inc
adc
push
xchg
imul
jno
rolb
movsb
push
sahf
mov
andb
xchg
mov
pop
push
dec
mov
movsb
xor
sub
inc
clc
outsb
sub
mov
mov
mov
sti
jo
mov
aas
inc
imul
sar
xchg
jbe
int3
je
sub
into
aas
push
mov
out
xchg
jae
imul
mov
jle
loope
mov
sahf
insl
dec
xlat
rcl
adc
fs
xorl
and
push
repnz
cmp
push
call
lahf
xchg
push
mov
test
mov
movsl
xchg
dec
roll
jo
sarb
dec
inc
aad
addr16
push
push
mov
dec
adc
leave
sahf
mov
xchg
push
mov
cmp
xor
sub
cltd
int3
insb
cmp
in
adc
add
dec
ss
pop
sub
inc
sti
mov
mov
in
mov
pop
sub
push
mov
dec
nop
ljmp
jae
inc
fbstp
or
in
dec
dec
fimull
push
test
jl
xchg
mov
adc
fiadds
push
aaa
rcrb
and
lahf
dec
xchg
cmpsb
mov
scas
sbb
iret
dec
push
xchg
je
stc
cli
js
test
imul
xor
out
in
test
ljmp
jmp
sarl
xchg
inc
mov
inc
mov
push
test
test
add
sbb
cwtl
enter
or
push
lret
negl
jmp
push
jb
dec
insl
xchg
cld
rolb
jge
mov
gs
aas
push
ret
stos
and
enter
ss
and
dec
pushf
xchg
notb
mov
in
xlat
aas
add
cmc
cmp
les
sbb
frstor
les
cmp
test
dec
add
out
stos
xor
sahf
xchg
iret
cmp
cmp
xor
aam
sub
mov
push
leave
and
or
add
fidivl
addr16
arpl
mov
dec
inc
rcl
test
scas
mov
js
test
or
or
out
xchg
lods
xor
fmuls
call
pop
sub
lock
add
mov
cmp
inc
mov
adcl
inc
or
mov
lods
cmp
jbe
adc
jg
sahf
lret
shrb
sbb
mov
imul
push
cli
rolb
lahf
fidivrs
lahf
sbb
inc
aaa
ret
lahf
mov
frstor
test
lds
movl
into
cmpsl
je
adc
jo
xchg
js
and
adc
push
cmp
imul
sar
fs
les
out
jb
cmp
aam
xchg
xor
lods
pop
jmp
jns
insl
movsb
inc
fbstp
push
and
ret
in
fistl
cmp
mov
fbld
jae
push
mov
add
in
shl
inc
popa
pop
ret
movsb
sarl
jne
push
jno
push
mov
sub
fistps
pop
jo
fwait
jb
mov
daa
push
xor
pop
add
cs
out
jns
repnz
jnp
mov
aam
or
add
sti
sub
das
mov
push
mov
mov
mov
stos
add
scas
or
xor
bound
inc
jne
bswap
sbb
outsl
jne
add
jae
das
and
sub
or
xor
mov
mov
sti
xchg
test
dec
push
std
sbb
jns
cwtl
mov
push
iret
inc
push
lods
and
out
repnz
jge
sub
sahf
xlat
sub
or
sahf
popf
mov
mov
mov
push
data16
sub
sub
stos
shl
dec
out
ljmp
and
in
hlt
mov
xor
mov
jle
pop
sub
loopne
inc
push
negl
jp
jae
aam
adc
nop
pop
sub
scas
mov
lods
xlat
mov
jle
sbbb
sbb
inc
lock
je
bound
cli
std
xor
pop
stc
sbb
pop
cmp
movb
out
movsl
lods
sbb
mov
sbb
sub
cmpsl
push
sbb
roll
mov
mov
popf
adc
subb
imul
mov
fisttpl
sti
inc
ja
stos
xchg
xchg
sar
push
inc
andl
sub
lods
fnsave
loop
mov
decl
add
xor
fdivrp
jns
sub
rclb
lahf
mov
lods
sbb
pop
push
fdivrp
cmp
cmp
test
in
dec
xchg
mov
pop
dec
mov
pop
call
lods
outsb
hlt
dec
out
jp
adc
cmpsl
ss
and
scas
jl
aas
sbb
sub
out
and
inc
fisubrs
ljmp
sub
mov
adc
in
or
xor
or
dec
lods
sub
sub
cmp
adc
inc
test
pop
sbb
call
or
pushf
iret
xor
loop
mov
roll
push
aaa
pop
shl
ret
test
movsb
out
jns
icebp
inc
jae
jmp
jg
ret
mov
push
and
daa
push
cmpsl
adcl
adc
adc
pop
arpl
shrb
clc
sub
xchg
arpl
inc
xchg
adc
jmp
mov
push
daa
fwait
test
ret
cmpsb
xor
pushl
scas
sarb
xor
cmp
mov
mov
mov
push
pop
stos
cld
add
mov
icebp
mov
inc
iret
inc
xchg
cmpsb
and
xor
jl
lahf
mov
push
in
mov
es
into
out
fs
loop
ja
sub
push
mov
dec
add
enter
push
pop
scas
dec
push
call
cmp
call
mov
mov
cmp
push
push
ds
mov
xchg
arpl
sbb
pop
dec
pop
cld
fildll
out
sbb
mov
sbb
lret
testb
push
push
xchg
roll
mov
or
jecxz
pop
pushf
and
int
test
pop
push
testb
mov
inc
mov
loopne
testl
xor
adc
jo
xchg
jmp
stos
sub
scas
rol
xor
sbb
mov
xchg
incb
pop
mov
xchg
lea
out
mov
test
in
cmp
pop
mov
int
adc
hlt
enter
mov
cltd
mov
jno
pop
jo
or
aaa
mov
add
dec
out
add
push
aad
jle
sbb
rcrl
lods
jae
vrcpps
push
mov
outsl
bound
pop
icebp
mov
sub
xchg
out
push
enter
outsb
hlt
jbe
add
in
iret
in
faddp
out
adc
jle
jbe
test
lea
hlt
into
cwtl
repz
sub
push
mov
popa
sub
adc
enter
cmpsb
lahf
jle
andb
aad
jl
in
jns
pop
andl
out
shll
adc
mov
sbb
rol
push
sub
imul
inc
shll
cmp
decl
mov
mov
into
insl
sti
dec
mov
jb
xchg
cs
mov
cs
psrlq
inc
ss
pusha
das
dec
mov
xchg
mov
mov
cli
pop
mov
adc
dec
dec
sub
or
sub
inc
pusha
add
xor
or
mov
jge
bound
addl
sub
inc
lock
stos
sbb
into
xchg
in
mov
ror
pop
mov
pop
sarb
std
ret
xor
xchg
aam
add
faddp
ror
ds
jmp
adc
cltd
mov
pop
adc
xchg
dec
ds
mov
ss
cli
pop
cmp
mov
push
int3
fucom
dec
pushf
lods
fists
out
rcll
xlat
rolb
mov
hlt
inc
mov
aad
in
jg
mov
lahf
push
dec
inc
mov
pop
je
add
ret
cs
aam
mov
push
fs
xchg
ds
mov
mov
add
addr16
insl
adc
fadd
dec
xchg
dec
mov
shll
or
stc
inc
push
xor
sub
lds
pop
ljmp
sbb
and
cltd
pop
aaa
mov
repz
cltd
push
push
push
jae
or
daa
xchg
xchg
mov
es
add
test
icebp
cmpsb
roll
stc
dec
fildl
xchg
jo
sub
rorl
ror
bound
adcl
outsl
sbb
cltd
out
sbb
sub
inc
leave
jbe
and
add
lcall
push
jmp
pop
push
push
jne
or
notl
mov
xchg
jo
icebp
and
xchg
mov
sti
repz
bound
into
fwait
sub
dec
pcmpgtw
ret
inc
jecxz
mov
push
aas
test
movsl
add
adc
mov
inc
fwait
scas
sub
jle
or
mov
sub
testb
add
fidivrl
idivl
lods
mov
or
out
hlt
dec
push
mov
int3
adcb
jbe
int3
cmpsb
mov
jmp
inc
dec
fcoms
cwtl
mov
in
test
add
pop
in
dec
xor
mov
dec
lods
cmc
ret
ljmp
ficoml
pop
push
xor
mov
in
cwtl
loopne
aam
dec
pop
and
mov
or
push
sbb
sbb
or
push
xchg
cli
test
loopne
push
push
xchg
loope
mov
xchg
or
lods
les
push
mov
xchg
icebp
or
cltd
xor
out
out
and
mov
ret
pop
xchg
mov
call
pop
cmp
sub
bound
xor
mov
or
fidivs
sub
sub
out
and
lods
xchg
cmpsb
push
or
add
lods
fistpll
push
in
shlb
add
jbe
add
jl
fiadds
rorl
fwait
insl
ret
das
add
mov
mov
enter
pusha
and
push
xor
fs
lea
test
ljmp
pop
xor
test
xchg
sti
int
cmp
divl
ret
cs
fildll
push
rcr
xchg
cltd
stc
xor
or
xor
stc
cli
dec
les
ljmp
test
popf
mov
adcb
sbb
js
fidivrs
popa
adc
adc
sbb
repz
rcrl
stc
xchg
sbb
sbb
push
jo
and
adc
fldenv
pop
cltd
imull
push
dec
mov
mov
mov
dec
mov
pop
jmp
pop
inc
ss
jl
add
adc
lahf
jo
aad
aam
inc
cmc
scas
js
jo
hlt
mov
movl
cmp
mov
or
fnstsw
xchg
fcomip
xchg
mov
call
mov
sub
jb
add
testb
xlat
mov
jae
add
mov
mov
xchg
mov
mov
clc
push
jnp
inc
jns
mov
cmp
pop
test
mov
cltd
inc
fists
adc
inc
pop
ret
sbb
push
fld
jmp
xchg
mov
loop
int3
add
mov
pop
jmp
testb
jp
lock
nop
push
jl
add
pop
mov
imul
adc
cld
pop
mov
fs
fs
cld
das
pop
test
and
cmpb
mov
int3
sub
fcoms
rcr
notb
adc
xchg
insl
adc
stos
in
xor
and
push
and
andb
movsl
add
sub
mov
arpl
lods
sbb
scas
shl
stos
inc
stos
or
fbstp
push
aad
add
or
dec
out
jge
inc
outsb
movsl
sbb
xor
stos
add
and
mov
rorl
inc
fstps
cmp
sub
push
adc
inc
sbb
mov
notb
push
fsub
xor
push
out
icebp
push
lret
push
xchg
mov
push
adcb
dec
dec
fsubs
adc
call
call
es
insl
add
mov
loopne
adc
test
mov
das
popa
inc
addr16
movsb
mov
cmc
inc
push
sub
add
adc
adc
adc
add
pop
outsl
xchg
mov
mov
sbb
lahf
out
adc
sbb
pop
xchg
cmp
in
js
fs
sbb
or
mov
aad
decl
dec
fiaddl
fst
jns
sbb
mov
cmp
sub
cmc
or
mov
lretw
imul
insb
or
subl
mov
and
xchg
and
push
into
push
stc
dec
in
mov
cmp
scas
xor
sbb
sub
std
mov
and
ret
lret
and
iret
jle
pop
xor
cld
hlt
inc
int3
pop
adc
and
cmc
dec
pop
js
push
in
mov
int3
in
xor
int
mov
stos
mov
pusha
cmp
sbb
adc
cli
sub
mov
xchg
ret
and
and
das
sub
cmc
ljmp
movl
nop
pop
sbb
xchg
push
int
fistl
out
inc
insl
inc
int
out
repnz
pmuludq
in
outsl
pop
pand
adc
xchg
mov
push
push
sbb
and
rcl
adc
and
cmc
mov
fdivr
movb
out
inc
pop
xchg
cltd
sbb
fiadds
int3
ret
movsb
sahf
in
add
or
inc
or
xor
scas
pop
inc
xlat
iret
aad
add
sbb
into
mov
cltd
mov
or
lods
jnp
push
push
shl
outsb
add
cld
pop
pop
and
mov
dec
imul
cmpsl
std
lea
jne
aam
and
clc
pop
popl
scas
pop
mov
fs
dec
xchg
jae
popa
xchg
pusha
xlat
jne
out
idivl
xor
and
jno
sub
addr16
andl
or
aas
mov
add
adc
fildl
mov
sbb
jg
push
jecxz
inc
jo
pop
ljmp
and
xchg
mov
fisubs
jbe
popf
push
fisubrs
int3
into
loopne
aas
stc
jbe
imul
inc
rcrl
cmp
push
inc
pop
sti
xchg
int3
cmc
push
push
aas
loopne
jge
xor
mov
lea
in
sub
mov
xchg
insl
bound
scas
pop
push
sbb
mov
mov
cltd
movsl
mov
add
fcmovu
adc
rolb
fildll
dec
rcrb
rolb
mov
loop
aad
mov
pop
sub
xchg
push
mov
flds
scas
dec
lret
xor
xor
mov
nop
pop
das
mov
inc
nop
lods
fisubs
xor
push
sar
sbb
lods
popa
jge
mov
cmp
aam
push
es
in
dec
inc
pushf
push
inc
xor
test
rcr
sbb
pusha
imul
test
out
xchg
adc
adc
dec
shll
cmpb
test
xchg
add
cs
aaa
cmpsl
xor
xor
cwtl
lods
dec
jae
xor
mov
scas
test
les
push
xchg
imul
xchg
push
ret
outsl
cmpsl
xchg
mov
aad
out
cli
and
mov
sub
les
lcall
insb
xchg
scas
lcall
mov
mov
push
aas
lret
or
mov
pushf
or
cmp
and
rcrb
push
nop
and
push
sbb
jle
ljmp
call
xor
nop
jnp
jmp
notb
jno
out
mov
jns
inc
xchg
xchg
and
cmp
popa
ljmp
fucomp
xchg
ljmp
mov
testl
inc
lret
dec
lock
pop
and
out
pop
addb
sbb
mov
aam
xchg
cmp
and
aaa
xchg
cmp
jmp
fnstsw
dec
pop
or
daa
test
jo
push
pcmpgtd
adcb
negb
adc
ljmp
xor
jmp
cld
mov
and
popa
inc
movsb
pop
call
icebp
dec
dec
pop
das
mov
inc
aaa
bound
xor
dec
rolb
addr16
and
ffree
mov
xchg
add
popf
sahf
aaa
jmp
icebp
adc
fs
mov
sub
mov
inc
fwait
into
nop
aaa
sahf
subl
mov
ss
mov
insb
scas
lds
inc
outsb
enter
imul
sub
inc
xchg
jo
movsb
insb
rolb
loope
cmpsb
push
ret
notl
cwtl
add
mov
int3
dec
in
sahf
fmuls
xchg
dec
cmp
int
ja
sbb
push
repz
aad
mov
pop
stos
xchg
mov
xchg
mov
or
jno
mov
inc
cmp
pop
ds
loop
adc
sbb
into
lcall
ret
xchg
addl
mov
jne
fbld
xor
mov
add
movsb
arpl
test
adc
push
xchg
xchg
jns
test
dec
sti
das
dec
pop
lea
fstpt
xchg
in
sbb
and
aas
jle
push
add
adc
pop
mov
xchg
and
inc
int3
sbb
movsb
and
mov
cwtl
test
mov
les
fdivl
stc
pusha
stos
adc
jmp
test
sbb
jne
test
and
jp
push
nop
pop
push
xchg
cwtl
leave
fidivrl
pop
scas
mov
push
inc
arpl
rcl
push
mov
pusha
cmpb
push
dec
adc
std
aas
xlat
imul
sub
loop
cmp
aad
cmpsl
adc
sub
mov
dec
stc
dec
fldt
jecxz
dec
sbb
pushf
sub
fsts
into
cli
fcomps
or
fwait
stos
push
xchg
push
inc
mov
rcrb
add
adc
adc
mov
aas
daa
ds
lcall
inc
push
imulb
rcll
mov
jo
mov
aas
js
and
dec
mov
flds
cld
mov
cmc
shlb
movsl
pop
fildl
aad
mov
pop
movsl
enter
adc
stc
mov
movsl
test
jmp
scas
mov
lret
cmp
rorb
adc
je
loope
jmp
jo
xor
jle
lds
mov
mov
xchg
xor
push
shl
sbb
call
hlt
pop
mov
shl
sbb
loopne
clc
orl
pop
dec
rcrl
enter
mov
inc
or
cmpsl
insl
cmp
add
movsl
ds
cwtl
arpl
sbb
shl
ret
fyl2xp1
pop
inc
adc
out
and
mov
es
dec
mov
push
jmp
mov
mov
sub
jp
mov
xchg
or
fs
out
pop
jnp
or
std
add
mov
lock
jle
xchg
insb
addl
mov
sub
push
sbb
jo
cs
xchg
inc
cmp
inc
sub
mov
outsb
pop
shlb
cmc
mov
push
sbb
int
sbb
cmpsl
adc
lds
imul
data16
add
shlb
sbb
push
xchg
mov
jne
sub
xchg
mov
cs
loopne
movsb
sub
subb
in
sbb
or
pusha
leave
faddl
loope
lock
and
into
xchg
dec
pop
fnstcw
pushf
or
test
jp
in
xor
jae
mov
leave
je
pop
gs
idivb
clc
adc
clc
scas
cli
test
fwait
ret
call
or
pop
clc
jmp
mov
or
sub
fmuls
dec
frstor
cli
cmpb
sub
dec
adc
dec
push
inc
xor
pop
clc
sbbb
jle
xchg
insl
hlt
add
xchg
sbb
jle
cmp
mov
mov
and
adc
and
cmpsl
repz
mov
outsb
jbe
out
dec
mov
xor
or
ja
push
inc
push
stos
ret
sbb
dec
sub
fs
cltd
pop
sahf
xchg
pop
enter
mov
pop
mov
sub
jl
xchg
ja
mov
and
sbb
ret
lds
jne
mov
sub
fbld
fadds
scas
jmp
xchg
lods
pop
aas
inc
mov
inc
into
cmp
push
data16
cmp
mov
jns
jge
cli
push
out
cmp
popf
fcmovb
inc
dec
aam
dec
dec
cmpb
jo
jbe
fisubrl
xchg
sub
cmp
icebp
popa
pushf
nop
push
das
push
repz
cmp
sub
shll
dec
and
mov
and
movsl
sarb
fimuls
imul
and
and
mov
movsl
add
cmp
int
das
add
and
enter
mov
sarb
inc
push
push
nop
out
fiaddl
outsl
mov
negb
adc
pop
ss
loope
in
jae
inc
cs
mov
inc
add
push
cmp
movsb
andb
jo
push
es
lods
pushf
sbb
test
mov
adc
in
pop
repnz
loope
popl
arpl
rcrl
cwtl
ds
dec
or
and
cwtl
inc
sub
sbb
cmp
movsl
sbb
cmc
fsubr
repz
xchg
lds
push
test
push
movsl
push
mov
dec
dec
and
dec
sarb
xchg
data16
dec
insl
jnp
mov
xor
push
popa
aaa
pop
iret
add
push
test
leave
mov
inc
adc
stos
les
pop
push
rclb
xchg
mov
pop
bound
iret
aas
mov
repz
mov
es
push
icebp
loop
fadds
fstpl
insb
pop
xor
in
mov
mov
jmp
std
mov
jge
pop
stos
outsl
mov
in
fsubrs
imul
pop
and
add
ljmp
add
dec
adc
mov
mov
stos
cmp
fwait
mov
or
rcl
xchg
and
divl
mov
sub
cmp
xor
push
clc
popf
rorb
adc
fdivrl
rorl
lea
addr16
inc
pusha
pop
pop
loopne
mov
xchg
cmp
lock
cmp
or
xchg
in
or
jmp
iret
aam
arpl
mov
icebp
jb
nop
jo
pop
push
push
test
mov
adc
sbb
mov
and
mov
sbb
je
call
rorb
mov
decl
out
leave
popa
out
inc
int3
mov
pop
jecxz
popf
imulb
scas
decl
push
cmp
adc
pop
mov
bound
stos
sbb
dec
dec
stos
pop
and
push
jmp
mov
lret
jle
push
in
aam
mov
out
or
popa
xor
fildll
pop
aas
aad
aad
testl
cli
lret
push
mov
sub
or
stc
push
movsb
sub
imul
and
push
mov
call
sub
mov
jno
mov
add
daa
arpl
inc
sahf
xchg
jmp
mov
mov
stos
lahf
sahf
enter
mov
add
into
pusha
pop
xor
sbb
mov
jo
sbb
pop
cmp
std
sahf
add
add
jno
mov
push
mov
enter
cwtl
cmp
mov
inc
fs
in
lcall
notb
cmp
out
push
fildll
shll
mov
loopne
xlat
bound
loope
lods
sbbl
adc
jmp
or
pop
je
mov
aam
popf
fucomp
repz
inc
popa
fldcw
mov
push
xchg
add
aad
cli
rcll
mov
add
lds
mov
dec
mov
dec
inc
movsb
xlat
in
cmp
les
pop
rcrl
mov
ficoms
inc
mov
sarb
mov
test
data16
mov
testb
xor
ja
jb
iret
mov
in
aaa
lods
sbb
adc
cmp
fmuls
mov
bound
inc
idiv
inc
fisubrs
or
pop
fisubs
mov
add
xor
outsl
lahf
adc
cmpsb
testl
es
out
and
outsb
int
jecxz
out
pop
ds
pusha
retw
scas
aas
test
adc
pop
loop
subb
ja
pop
rcll
xchg
inc
jmp
and
test
es
push
adc
jns
repnz
mov
fsts
push
test
xchg
sbb
push
les
dec
push
inc
mov
daa
cltd
pop
mov
pause
scas
push
int
lds
loopne
das
aam
dec
sbb
scas
xchg
js
aas
paddusw
das
jns
inc
inc
cs
push
sti
fsubrs
pushf
inc
or
pop
lahf
push
mov
jl
jae
repnz
popf
out
or
lock
sbb
jnp
adc
ffreep
sbbl
pop
xchg
insb
pop
xor
insl
neg
lret
in
arpl
je
test
scas
mov
mov
push
xorl
mov
cmp
jb
cld
addr16
adc
mov
jmp
jns
pop
test
pop
movsb
lret
push
push
pop
loopne
sbb
stos
jne
jmp
dec
fs
cs
pop
mov
adc
jbe
dec
int3
out
sbb
dec
fdivs
mov
or
insb
in
rorb
add
inc
in
add
bound
adc
sub
pop
clc
mov
xor
adc
jecxz
stos
scas
mov
imul
or
iret
ljmp
mov
pop
or
stc
sbb
outsl
sbb
cld
dec
xchg
clc
xor
mov
out
jns
jle
or
arpl
adc
mov
inc
dec
mov
test
inc
int3
lds
shlb
jb
sbb
imul
andb
sbb
out
iret
mov
cmp
roll
mov
inc
ret
mov
btc
hlt
jnp
loopne
test
fildl
cmp
test
cltd
sbb
push
aaa
mov
mov
xchg
xchg
or
sbb
sbb
scas
add
sarl
or
movsb
pop
push
xchg
fiaddl
stos
sub
push
inc
mov
fs
xorl
push
cltd
idivb
jnp
iret
lea
xor
mov
mov
mov
dec
inc
nop
leave
or
push
loop
inc
cwtl
sbb
icebp
inc
gs
loopne
iret
pop
out
cmovp
scas
or
inc
lods
fstpt
pop
adc
aam
cmp
mov
push
mov
ret
dec
fcomps
ret
pop
dec
outsl
or
imul
add
cmp
fidivl
sub
rcrb
pop
repnz
adc
push
int
sbb
pop
cmp
jno
int
hlt
out
cmp
nop
ret
in
inc
into
nop
jmp
sbb
js
sahf
pop
push
sub
dec
push
add
lahf
mov
sahf
gs
or
dec
ljmp
or
and
inc
adc
call
scas
add
sahf
xchg
mov
arpl
hlt
and
out
adc
adc
xchg
cltd
das
mov
and
push
push
cmp
sbb
clc
popa
mov
dec
add
into
fwait
sbbb
mov
pop
xor
xor
jns
cmp
xorl
lcall
aad
pop
inc
jl
xor
cmpsl
lea
mov
pop
sub
std
mov
fisttpl
jnp
in
adc
jecxz
xchg
repz
mov
xchg
sub
inc
mov
scas
mov
icebp
cltd
cmp
popa
mov
shl
mov
lock
aaa
and
ljmp
ss
cli
pop
mov
xor
xchg
xor
sub
daa
mov
in
test
lock
xlat
sub
or
mov
cmp
int
xor
xchg
add
mov
or
push
orl
leave
rclb
test
int3
mov
cmp
sub
test
movsl
test
aaa
imul
mov
and
fs
jns
ss
test
in
in
pop
ljmp
gs
bound
call
pop
mov
popa
mov
es
in
es
dec
mov
enter
pop
iret
in
inc
and
arpl
lret
jb
adc
pop
jmp
cmp
add
rcrb
aam
pop
push
push
jle
add
fistps
xchg
inc
aad
jle
daa
call
fdiv
jns
mov
out
sbb
push
pop
sarl
call
or
xor
xor
and
push
leave
lret
fbstp
jl
lcall
into
or
js,pt
jl
jecxz
shll
cmpsl
xchg
mov
sbb
mov
push
stos
push
jne
insb
adc
aas
fwait
push
std
add
imulb
pop
ja
jl
fldenv
sub
out
jne
aas
iret
inc
push
mov
pusha
pop
das
jns
gs
ja
lods
stos
imull
stos
cmpsb
cltd
insl
push
imul
or
cmc
addr16
out
outsb
push
mov
add
sub
shlb
dec
adc
mov
dec
outsb
jo
mov
jg
xor
movsb
pop
das
lret
mov
cmpsl
mov
and
push
push
mov
sbb
loop
aam
push
les
jl
in
loopne
dec
notb
or
imul
jno
es
ss
mov
xlat
sub
cmc
daa
or
gs
int3
mov
insl
xlat
mov
test
cmpsb
mov
scas
cmp
pop
movsl
sub
sub
xor
icebp
insb
sbb
mov
pop
and
icebp
push
test
push
sub
cwtl
inc
insb
inc
daa
pop
mov
mov
test
daa
xor
shlb
pop
pop
dec
les
mov
icebp
leave
mov
mov
push
adc
cltd
add
push
inc
pop
fisttpl
sbbb
outsl
add
icebp
or
sbbl
and
jnp
mov
insb
sub
call
mov
fnstcw
lea
sub
xchg
xor
pop
lock
push
nop
addr16
fimull
pop
movsb
adc
jg
xchg
sub
mov
xchg
and
push
jb
pop
ret
push
ja
test
xchg
loopne
lret
mov
push
popa
push
lcall
xchg
mov
mov
insb
outsb
out
sbb
sbb
xchg
sbb
loope
jbe
lahf
andb
add
stc
dec
cmp
ss
xor
pushl
loopne
fstps
push
fildl
test
adc
nop
arpl
push
jmp
jle
subl
fsubr
imul
ficoms
xor
xor
cmp
cmp
into
mov
mov
pushf
fsts
jmp
or
mov
dec
jl
cld
mov
adc
popf
xchg
mov
aaa
push
andb
and
or
add
lock
stos
xchg
push
ffreep
and
push
in
ret
insl
std
xchg
cmp
fisttpll
cli
dec
mov
jb
repz
leave
fisubrs
pop
mov
in
ret
xor
gs
cmp
fiaddl
cwtl
les
or
imul
daa
inc
sbb
jl
stos
fdivl
mov
and
or
mov
mov
inc
or
push
inc
test
inc
loop
inc
enter
iret
or
mov
in
in
dec
push
lods
stos
loope
cmpsb
das
mov
sub
test
pop
pop
addr16
and
xlat
pop
loop
scas
sub
aas
stos
mov
movsb
sbb
nop
xlat
insl
test
repnz
enter
shl
push
push
sbb
popf
jbe
das
leave
pop
pop
push
push
mov
out
fisubs
fisttps
add
add
cmp
push
mov
sti
inc
and
sub
mov
sub
sbb
push
enter
pop
mov
lods
test
mov
imul
or
popa
test
leave
mov
xchg
lods
scas
mov
mov
xorb
xchg
inc
dec
lcall
sbb
adc
xchg
sbb
adc
stos
in
xchg
icebp
or
std
popa
mov
enter
mov
ljmp
cltd
je
in
js
hlt
test
aad
and
jecxz
mov
cs
mov
jns
jb
jns
mov
dec
lock
dec
cmpsl
xchg
add
scas
test
mov
out
les
mov
lods
mov
int3
sub
in
je
xor
pop
lock
push
inc
push
lods
insl
fwait
jnp
xor
push
add
xor
ss
xor
lahf
jge
cmpsl
add
test
inc
and
mov
cmp
fsubp
fcomps
dec
push
ja
inc
cmpsl
jb
pop
imul
roll
iret
mov
leave
jae
aam
bnd
push
or
negl
lods
int
sub
jle
sbb
cmp
jle
hlt
and
add
mov
push
or
arpl
fcomi
jbe
daa
fisttpl
int3
push
hlt
cltd
int
bound
test
ds
jecxz
stos
mov
jg
xchg
loopne
cmp
xchg
ret
loop
mov
aas
popa
sbb
loope
xor
sub
push
cmp
shl
push
sbb
jecxz
inc
in
mov
push
push
jne
jp
rcrb
mov
lcall
add
or
add
or
sbb
or
mov
dec
xchg
fistps
push
and
cmc
pop
fcmovb
push
pop
push
sub
into
loope
or
std
pop
fs
sahf
xchg
ret
lea
and
mov
xchg
fnstcw
push
lret
gs
add
jge
loope
mov
jns
mov
ficompl
and
adc
cwtl
stos
das
dec
fdivrs
and
pusha
jnp
jae
adc
push
inc
ficomps
push
mov
stos
mov
cltd
jb
inc
ret
out
or
mov
jo
loopne
mov
fsubs
into
filds
push
and
dec
jmp
jp
inc
mov
into
dec
pop
rcll
fcmovb
inc
frndint
dec
imul
ja
enter
or
fwait
cwtl
cmpsl
xor
xchg
xor
cmp
enter
pop
xor
mov
sub
mov
pop
inc
repnz
arpl
inc
test
rcrb
and
xchg
push
out
mov
mov
lods
dec
and
jge
xor
cmpsb
cmp
or
add
nop
xchg
adc
add
push
scas
in
iret
inc
xchg
inc
cmp
dec
in
mov
or
dec
sbb
adc
out
push
cmp
mov
or
jbe
jmp
insb
mov
loop
inc
lock
addb
sub
add
sbb
sub
dec
aaa
xor
clc
in
stos
mov
xor
pop
pop
inc
sub
mov
sbb
jp
pop
pop
push
pop
dec
repnz
mov
push
sbb
mov
in
cld
lahf
pop
xchg
mov
lea
pushf
cmpsb
dec
mov
fcompl
sar
lods
jne
add
addl
xchg
and
test
int
icebp
cmp
je
mov
int3
ja
push
addb
pop
flds
jne
cmp
pop
cmp
sub
mov
in
ficomps
sub
fistl
dec
push
shlb
lret
mov
xchg
mov
mov
dec
jecxz
in
mov
ds
sarl
inc
push
pop
mov
sub
xor
leave
add
lret
xor
fcoml
repz
pop
rol
pop
leave
xchg
ret
inc
sbb
data16
pop
test
add
xchg
out
push
jecxz
insb
mov
test
adc
out
fldt
ds
outsb
xchg
inc
lahf
adc
pop
fildll
test
pop
outsl
popf
in
adc
dec
aaa
jb
push
and
shr
int
lods
push
and
jmp
out
xchg
fimuls
int
adc
roll
pop
lcall
and
js
insl
pop
lea
mov
out
test
mov
jmp
lahf
cmpsl
add
in
jl
push
jo
add
ja
insb
jno
out
jb
add
mov
add
push
repnz
add
pop
mov
imul
push
std
mov
rolb
xchg
mov
lods
ret
mov
int
stc
xchg
in
rcll
faddp
loopne
in
add
out
mov
mov
test
dec
mov
cltd
popa
mov
and
insl
mov
aaa
icebp
rcrb
xlat
mov
out
xchg
aas
and
mov
pop
ljmp
sbb
mov
or
ss
sbbl
jo
in
mov
iret
dec
imul
rorb
jmp
fisttps
add
xchg
lret
out
fcmovbe
sti
lock
sti
in
icebp
int3
push
xchg
aam
js
insl
cmp
push
sub
shr
xor
jnp
xchg
sbb
push
fcomps
dec
inc
inc
ficoml
push
cli
lods
xor
das
sub
jge
push
out
or
push
sbb
pop
rcll
stos
jae
out
fs
cwtl
pop
jg
or
and
inc
in
cli
dec
jecxz
enter
or
ret
test
sub
xchg
xchg
aam
aaa
add
mov
loopne
insl
ss
ret
call
mov
test
stos
adc
or
les
call
fwait
outsb
test
inc
mov
das
ljmp
ljmp
es
mov
pop
sbb
std
inc
or
in
xlat
mov
ja
pop
out
push
lcall
push
mov
fisubrl
in
jb
dec
jmp
pushf
cmp
sub
push
nop
jne
jae
add
or
jnp
int3
shll
and
cmpsb
cltd
ss
fcmovnu
xor
das
icebp
add
lock
scas
pop
dec
and
mov
adc
lock
xchg
sub
test
je
sub
ljmp
imul
movsl
repnz
scas
pushf
arpl
std
pop
insl
mov
sti
sub
imul
jmp
dec
lret
stos
cld
ljmp
jns
cs
adc
int
leave
cmpsl
pop
addb
in
enter
imul
fcomi
stos
fldt
je
sub
jb
lea
js
or
add
xor
mov
outsl
push
pushf
hlt
or
sub
or
repnz
jns
sbb
cs
sbb
insb
cmp
sbb
lahf
mov
cli
push
xchg
cltd
dec
addr16
jbe
push
dec
jo
jae
adc
insb
xor
daa
jb
push
mov
cmp
dec
xchg
mov
sub
lahf
jns
jne
push
outsb
cmpsb
mov
lods
arpl
cmp
cwtl
in
xchg
int3
push
fisubrl
xchg
hlt
lods
loop
iret
mov
movsb
jb
and
repz
test
push
push
pop
mov
xor
repz
aaa
out
pop
add
icebp
lods
ja
jl
sub
arpl
jmp
sub
or
sti
or
clc
scas
push
nop
adc
loope
fidivrl
xor
and
adc
xchg
sbb
mov
jp
xchg
outsl
sbb
cltd
mov
inc
inc
sbb
out
push
ds
mov
inc
idivl
fstps
outsl
fisubrs
shll
cmp
test
xor
rcrl
mov
and
and
push
pop
sbb
cmp
sub
add
sbb
adc
inc
or
loop
mov
xor
in
sub
cmp
aas
sub
mov
sub
pushf
mull
mov
mov
lods
lcall
add
push
xadd
dec
xchg
push
sahf
aad
push
adc
cmpl
jmp
es
dec
popf
orb
imul
dec
dec
in
inc
in
jb
lret
out
int
or
add
in
in
adc
or
lcall
fsubrs
xchg
es
stos
in
mov
push
mov
xchg
mov
adc
jmp
push
inc
popf
push
and
out
cltd
addb
mov
mov
dec
loop
dec
pop
xchg
ja
cmp
and
loope
xchg
adc
push
pop
push
mov
pushf
pop
popf
fimull
cli
cwtl
ds
mov
popa
adc
stc
jle
out
mov
push
test
bnd
aas
inc
cmp
aas
lret
xchg
ja
sbb
mov
andl
mov
mov
sbbb
xchg
pop
das
arpl
andl
pusha
sub
adc
aaa
jge
in
test
xlat
dec
fidivs
pxor
jo
add
test
jecxz
jbe
xchg
das
add
xlat
jae
test
or
and
loopne
fbld
lock
ja
sub
and
sbb
add
subb
jp
in
cwtl
jp
xchg
push
arpl
movsl
out
xor
mov
jo
push
dec
aam
fcomps
pop
outsl
inc
sub
cld
inc
add
pop
fistl
dec
cmp
aam
push
mov
cmp
mov
ret
pop
and
mov
pusha
jae
test
and
ret
mov
arpl
pusha
testl
into
push
cli
out
xchg
ljmpw
push
loope
ret
mov
mov
pop
cmp
adc
cmp
sub
mov
jo
pop
loopne
nop
addl
and
xchg
shll
jb
pop
xor
xor
aam
jo
xor
pop
shr
fnsave
lret
jno
test
rcll
test
pusha
cld
jl
inc
hlt
imull
mov
imul
adc
pop
notl
scas
aaa
add
add
fcmovnbe
mov
and
mov
jnp
mov
cmp
in
in
mov
aam
cmp
outsb
inc
or
je
jecxz
jb
inc
in
mov
cmc
popa
aas
ljmp
push
loope
loope
sti
dec
fstps
outsl
push
bound
clc
outsl
int
sub
pop
mov
int3
mov
xor
dec
ss
cmp
pushf
pusha
push
mov
pop
adc
clc
lods
mov
xchg
rcl
insl
and
aad
icebp
mov
pop
pop
sub
adc
mov
fucomi
es
xor
call
imul
ror
into
push
dec
xchg
stos
sbb
outsb
stos
pop
or
mov
jns
cmpb
out
push
jp
add
add
adc
shlb
cli
push
pushf
and
in
in
sub
cmpsl
jmp
xchg
xchg
repnz
dec
mov
and
mov
sbbb
fisubrl
inc
sbb
in
pop
jno
pop
sub
movsl
shll
sub
lret
jns
or
mov
in
and
into
jp
add
adc
movsb
cmp
jne
mov
test
and
add
rcl
aam
ret
enter
rcl
je
xchg
or
lret
dec
outsl
jg
mov
sbb
xchg
lcall
sub
in
cmp
ficoml
mov
int3
movsb
push
inc
pop
dec
popa
mov
inc
ss
xchg
loope
pop
dec
les
mov
push
sarl
xlat
lahf
push
jno
adc
jp
fcomp
out
inc
jae
inc
pusha
pop
lret
cwtl
mov
mov
fldl
scas
add
mov
xorl
fwait
inc
fisubl
lret
mov
imul
jno
std
and
mov
lret
jge
dec
mov
hlt
sub
sub
aam
imul
cli
lock
dec
bound
cmpsb
ret
add
and
adc
add
sub
aad
das
fwait
adc
xchg
inc
sub
clc
cmp
test
es
jl
test
cmp
jle
popf
add
iret
cltd
mov
jbe
icebp
ja
add
push
push
pop
out
pop
cmc
dec
and
addr16
pop
add
add
add
jb
mov
pop
xchg
xchg
inc
ret
out
stos
lcall
cmp
nop
test
loope
test
imul
pop
mov
lcall
add
fldcw
xchg
addr16
or
adc
push
and
push
dec
lods
or
or
lret
inc
mov
cmp
sub
mov
lret
jp
xlat
into
fstpl
cmp
xor
adc
jl
icebp
in
dec
push
lods
cltd
popa
nop
cmp
and
jmp
std
jp
sub
repz
mov
xchg
pop
or
aam
dec
dec
xchg
je
data16
pop
in
mov
movhps
mov
jmp
sbb
cmp
aam
lods
and
add
pushf
pushf
mov
xchg
push
shr
push
ja
dec
adc
call
aas
stos
les
inc
sbb
gs
cs
ficoml
or
jb
shrl
push
sub
test
test
xchg
pop
mov
adc
xchg
lock
fsubs
dec
popa
pop
das
nop
pushf
daa
dec
stos
jp
lock
enter
mov
mov
daa
push
mov
push
je
push
cmp
adc
mov
adc
out
and
je
out
pop
pop
notb
adcb
imul
mov
pusha
les
push
add
jmp
loopne
stc
push
and
add
push
inc
sbb
cmp
test
testl
std
fdivrl
mov
or
imul
imul
std
fwait
jnp
lock
xlat
inc
pop
out
jg
fs
shrb
cmp
xchg
das
jg
push
dec
inc
outsb
lock
jp
cmp
andl
xchg
xor
ret
add
fdivrs
jnp
xlat
xor
sbb
or
imul
adc
lcall
testl
popf
dec
gs
fwait
shl
std
and
mov
mov
mov
incb
pop
nop
fs
pop
inc
cmp
dec
sbb
mov
mov
mov
icebp
cli
push
jae
rcr
out
xchg
out
frstor
mov
test
cmc
jle
cmp
in
sbbb
lahf
popa
pop
push
xor
or
fs
sbb
iret
outsl
out
jo
lds
mov
fidivrs
loope
push
call
lret
sbb
cmp
nop
aam
pushf
cmp
sub
cmp
mov
mov
mov
add
and
addb
repnz
and
jecxz
mov
mov
fnsave
outsl
jl
fwait
push
cs
pop
jo
adc
xchg
mov
fdivs
mov
mov
aaa
xchg
inc
cmp
mov
popf
stc
dec
pushf
mov
jg
daa
cwtl
sbb
dec
mov
sub
pop
cmp
je
nop
into
push
pusha
mov
out
sarl
jecxz
shl
jmp
push
push
or
mov
out
daa
inc
mov
in
ja
call
push
push
cld
filds
adc
mov
cmp
imul
enter
aam
shrl
js
sub
add
ljmp
add
pop
stos
imul
sbb
push
dec
fwait
xor
icebp
or
aas
jmp
lds
hlt
adc
cmp
pop
and
mov
ret
and
loopne
xchg
std
test
ja
imul
sarl
mov
insl
sbb
and
mov
pusha
jmp
mov
cltd
and
mov
lock
xchg
inc
xchg
inc
test
in
add
dec
mov
mov
std
sub
mov
jns
push
add
sti
in
and
add
sub
je
into
hlt
sahf
es
fimuls
sub
push
fs
mov
fisttpl
cmp
add
lds
xchg
xor
mov
fcompl
jmp
loope
sbb
pop
mov
fwait
loope
loopne
cmp
mov
inc
popa
sub
and
xchg
xchg
sti
sub
cmpsb
cmp
push
mov
adc
cmpsl
int
or
mov
out
push
inc
in
ds
cmp
mov
in
std
int
sti
push
xor
les
or
int3
out
mov
sbb
int3
iret
test
adc
xchg
mov
iret
fldenv
xor
add
andb
pusha
in
dec
test
mov
jns
mov
jnp
call
in
xchg
fmull
mov
pop
mov
and
into
loopne
sbb
dec
add
xchg
imul
sbb
cmpsb
or
jp
pop
in
push
stos
cltd
lock
out
and
cmp
cmovne
cwtl
decl
adc
mov
cmp
int
imul
push
jp
loop
sbb
cs
mov
out
pop
add
adc
cmp
bound
mov
outsb
fs
cltd
ljmp
es
mov
cli
pop
adc
mov
inc
push
jae
aad
ficomps
sahf
in
pop
xor
shlb
jg
ret
mov
fwait
hlt
inc
sub
stos
jmp
xor
mov
and
mov
jno
cmpsb
xor
add
mov
jns
fsubrs
ss
cmp
pop
xlat
cmpsl
out
orb
ret
rclb
adc
lahf
leave
inc
test
dec
cli
test
mov
roll
dec
pushf
mov
sarl
scas
movsl
push
inc
mov
lea
sub
xor
pushl
xchg
jb
push
mov
addb
adc
pop
jmp
xor
mov
loopne
pop
mov
repnz
fcomps
jp
fsubrl
test
out
push
pop
dec
sbb
psadbw
aad
push
jbe
and
pop
dec
sbb
pop
jo
mov
adc
mov
push
push
sub
in
dec
outsl
mov
pop
ss
out
out
lods
aam
in
es
push
cwtl
mov
xchg
pop
add
sarl
mov
movsl
rcll
xchg
pop
fcmovb
jae
data16
call
ljmp
cltd
mov
popa
scas
in
gs
sbb
bound
enter
push
pusha
lahf
jg
fiadds
pop
in
int3
or
imul
popf
mov
pop
les
sub
xor
mov
mov
test
imul
stos
pop
imul
xchg
push
sti
jo
adc
xchg
mov
lds
in
mov
pop
pop
or
das
cmp
int3
and
jnp
daa
je
cmp
in
inc
ret
adc
ret
fstps
arpl
in
repnz
mov
cmpsb
pop
lcall
mov
sbb
sub
pushf
mov
jbe
sti
and
dec
stos
mov
iret
xchg
xor
sbb
sbb
aad
popa
push
imul
push
sbb
mov
cmc
mov
mov
mov
add
xchg
xor
clc
push
leave
pop
or
sub
sbb
jae
mov
outsb
fwait
test
inc
lea
stos
cmp
in
sub
out
aaa
xchg
pushf
ret
in
pop
in
daa
jge
out
sti
pop
adc
in
sub
push
push
pop
mov
je
push
mov
lahf
add
fbstp
xchg
orb
insl
loop
lahf
nop
dec
imull
xchg
cmp
mov
outsb
add
sbb
add
insl
daa
add
xchg
mov
jns
sbb
test
loope
adc
fs
cmp
jecxz
scas
jl
cmp
sahf
cmp
jb
outsl
cmp
pop
add
mov
and
aas
ljmp
jecxz
jg
jne
int
jp
pop
arpl
pop
shlb
sub
inc
sub
sahf
inc
mov
sub
and
push
push
mov
mov
jl
xchg
adcl
js
int3
outsb
insl
int3
mov
mov
or
fmull
movsb
or
stc
out
punpckhwd
jecxz
add
sbb
cmpl
push
je
int
ds
push
popa
xor
lods
shrb
icebp
jne
adc
mull
lret
xor
cmpsb
push
int3
adc
mov
sbb
xchg
mov
or
data16
dec
daa
xchg
imul
add
cmp
xchg
shll
div
daa
js
adc
mov
dec
sub
or
cli
cwtl
popf
push
jae
or
pop
sti
dec
lock
jb
je
lods
dec
jge
mov
or
push
fildl
in
sub
movnti
loopne
sbb
out
inc
mov
cmp
ret
ret
sbbb
fists
pop
xor
push
loop
iret
pop
and
jl
sub
and
ret
movsb
and
jmp
inc
xlat
rcr
lret
scas
and
pop
fimuls
pop
adc
xlat
notb
add
pop
sbb
mov
lock
aaa
adc
pop
or
dec
xchg
mov
pushf
out
cmp
std
aam
ljmp
mov
cmp
cs
fidivl
mov
into
and
sbb
testb
inc
call
cmp
pop
jg
mov
ds
int
inc
cmpsl
leave
mov
outsb
mov
sbb
out
mov
push
int
insl
ja
test
jmp
pop
popf
jo
jg
pop
or
orb
aam
mov
das
ss
sbb
jno
mov
scas
xchg
test
pop
pop
cmp
scas
movsl
fucomi
mov
arpl
rolb
aaa
mov
in
mov
insb
fdivr
or
jmp
call
mov
jge
and
xchg
pop
push
mov
dec
push
push
cmp
mov
cmp
jle
int3
adc
mov
cmp
ret
add
lds
mov
divb
mov
int
xchg
idivb
xchg
cwtl
div
pusha
test
mov
int3
xchg
nop
into
mov
lock
dec
testl
jae
inc
pop
ret
stos
fisubrl
dec
jge
pop
fstl
ficompl
mov
stc
dec
sbb
mov
jg
sub
loopne
inc
sti
xchg
and
lcall
fimull
fs
sbb
mov
cli
inc
rclb
js
gs
or
adc
xchg
je
push
inc
cmc
push
sbb
mov
jns
mov
fnstsw
xor
adc
int3
sub
pop
stos
mov
icebp
ret
cmovne
test
addb
mov
outsl
sbb
inc
push
mov
je
mov
dec
xchg
mov
mov
ja
iret
and
jnp
cmp
jnp
xlat
push
shrb
popf
and
fiadds
adc
cmpsl
jmp
sbb
mov
inc
daa
dec
cmp
movsb
in
add
daa
jb
out
icebp
scas
mov
cmpsl
xor
fstl
push
pushf
repz
aam
inc
mov
pop
out
xchg
scas
lahf
fimuls
push
ljmp
inc
pop
dec
add
cmp
adc
mov
imul
pop
insl
mov
imul
sub
mov
hlt
out
addr16
pusha
sbb
sahf
cmpsb
notl
insl
repnz
call
sbb
xor
repnz
ljmp
js
call
aaa
xchg
rorl
adc
xchg
cmp
mov
xchg
push
out
add
scas
cmp
shrb
mov
dec
into
sbb
aaa
std
lcall
xchg
add
les
xor
hlt
movsb
mov
mov
mov
ds
mov
fbstp
mov
and
clc
inc
push
test
out
xor
mov
mov
jg
inc
sbbb
sub
mov
std
inc
aam
xchg
or
iret
and
or
adc
cmp
cmp
xlat
sti
lcall
push
xor
ror
inc
pop
dec
push
ss
cmpsb
sbb
ss
ds
xlat
lret
push
ds
aas
mov
iret
clc
or
sub
in
aam
lea
imul
cmp
and
stos
sti
test
cltd
adc
stc
adc
movsl
out
cli
push
adc
jnp
mov
outsl
gs
ret
adc
mov
xchg
push
fisubl
frstor
xchg
sbb
sub
aad
stos
cmp
sub
xor
in
leave
ljmp
mov
push
fadds
in
outsl
scas
fdivs
shr
mov
push
dec
cs
hlt
cmp
adc
sub
dec
ljmp
cmp
pop
test
add
push
sub
dec
fs
popf
jle
rcr
jmp
mov
lret
loop
mov
pop
iret
xchg
jge
lret
dec
push
xlat
es
sub
add
push
shrb
sbb
loop
movl
and
and
cmpsb
aaa
outsl
jae
xor
hlt
mov
popf
aaa
mov
sub
adc
nop
gs
jg
cmp
cmpsl
mov
xchg
insl
cmp
mov
jecxz
fistl
movsl
dec
icebp
mov
cmp
xor
sub
outsb
lea
je
fisubrs
sub
pop
daa
dec
jb
inc
push
mov
cwtl
sbb
fldenv
shl
out
xchg
inc
mov
push
rorl
or
test
push
sub
shl
mov
sub
or
adc
lret
xchg
scas
shlb
pop
push
xor
jns
cs
mov
rorl
leave
jp
and
fcoml
sahf
sbb
push
fldl
adc
pop
inc
lret
in
push
sub
sbb
cmpsl
scas
lret
adc
addr16
int
mov
out
jle
xchg
repnz
or
sub
jl
adc
mov
jp
fsts
or
and
push
push
es
xchg
add
je
xchg
and
shlb
pop
lock
pop
ds
fmulp
adc
cwtl
jecxz
std
sbbb
jns
xor
fsubl
adc
xlat
dec
xor
in
mov
and
add
into
mov
loop
ret
adc
xor
jmp
mov
jo
jb
jle
dec
mov
inc
imul
pop
out
cmp
pop
dec
stc
dec
test
aam
call
push
sub
sub
jnp
or
adc
jns
adc
add
int
or
jae
andl
les
dec
or
jecxz
sti
test
mov
and
cmc
or
loop
xorb
and
hlt
xchg
cs
or
stos
rclb
popf
push
clc
inc
andb
push
lock
sbb
inc
cmp
stc
cmp
xor
jecxz
push
fistpll
xor
inc
fstpl
popf
ljmp
inc
mov
inc
inc
bswap
ljmp
ss
push
mov
scas
push
stos
shlb
adc
fwait
in
xchg
out
inc
inc
sbb
adc
pop
in
lods
xchg
sbb
xorl
add
out
adc
dec
fwait
aas
sub
inc
ljmp
add
and
xchg
sbb
mov
out
push
out
dec
aam
dec
in
sbbb
mov
cli
xchg
mov
jge
call
inc
outsl
xchg
mov
or
aaa
jbe
sbb
pop
jnp
add
inc
incl
call
and
inc
inc
push
cwtl
ret
mov
ret
out
inc
fdivrp
pop
adc
jmp
loopne
call
bound
xor
bound
aad
fldt
ret
lret
jo
add
mov
pop
dec
scas
inc
aas
fldenv
and
dec
mov
mov
inc
mov
inc
pop
dec
bound
pop
stos
gs
jge
sub
dec
fisubl
mov
mov
shlb
sbb
imull
mov
sbb
aas
or
mov
stc
dec
test
cli
imul
data16
cli
xchg
sub
sub
imul
fwait
cmpb
sbb
jbe
sbb
leave
and
mov
js
add
push
int3
and
sti
leave
in
adc
xchg
add
jbe
xor
sbb
fdivp
xchg
cli
add
lahf
jne
xchg
dec
inc
iret
je
aas
lock
rolb
mov
scas
mov
pop
fsubr
pop
fmuls
and
addr16
clc
mov
sbb
into
pop
mov
aam
cwtl
test
add
adc
inc
cmp
jl
mov
adc
cmp
loope
pcmpeqb
pop
mov
aaa
mull
sub
push
roll
sub
mov
and
jbe
mov
push
mov
sbb
in
stos
jmp
cli
dec
orb
and
pop
cmp
nop
or
push
addl
mov
les
aaa
stc
andb
add
push
scas
add
cli
dec
mov
or
sbb
or
adcl
repnz
jmp
test
jle
stos
imul
jp
or
cmpl
or
dec
test
cmp
push
push
lret
gs
pop
idiv
mov
xchg
dec
mov
jmp
lods
xchg
lods
pushf
sti
mov
add
les
pop
idivb
adc
pop
fildl
push
fwait
enter
fistpll
lods
push
jno
cli
push
push
and
ss
ror
loopne
lahf
fwait
sbb
mov
mov
cwtl
call
pop
movsl
out
jo
fbstp
dec
jle
adc
xchg
mov
dec
incb
jmp
xchg
push
daa
imul
push
and
mov
sub
mov
and
xor
push
call
jmp
lods
or
scas
adc
xor
or
or
aad
push
loop
stc
idiv
subb
ficomps
jne
mov
mov
sbb
jbe
les
js
or
fldenv
sbb
call
xchg
inc
xchg
jno
cmp
mov
pop
in
jmp
fstpl
sar
mov
ss
in
insl
imul
sub
xor
push
push
lret
mov
enter
aam
ret
inc
or
outsl
jecxz
pushl
in
add
sarb
jge
imul
xor
das
adcl
sbb
loope
sub
jne
jo
xor
inc
sub
xor
lea
fwait
jle
jno
insl
xor
icebp
mov
lcall
lret
ljmp
out
xchg
data16
sub
aas
test
pop
pop
add
bound
lret
or
sub
adc
fs
mov
fs
mov
out
movsl
stos
fwait
stos
inc
or
gs
xchg
rcll
repnz
add
and
dec
jo
mov
add
int3
mov
rcrb
shlb
jb
cmp
pop
xchg
pop
xor
cltd
mov
mov
repnz
sbb
clc
xchg
mov
addr16
and
mov
push
mov
loope
inc
flds
sub
mov
loopne
stc
cmp
jge
jno
fwait
inc
push
cs
int3
sub
adc
in
xchg
push
mov
and
jno
pop
push
fdivl
adc
subb
aam
sub
adc
and
inc
cld
push
and
pusha
xchg
jg
mov
dec
xchg
xor
cmp
ds
adc
out
aas
imul
ret
movsl
outsb
cmovl
sbbb
mov
push
add
mov
xchg
leave
rcll
lret
loope
sbb
dec
sbb
pop
xor
dec
push
shrb
mov
xor
push
cltd
xor
jp
push
int3
cmp
cli
push
add
shlb
xchg
xchg
popa
pop
inc
and
mov
cmp
orb
jb
push
pop
fwait
mov
cli
fs
xchg
sub
fstpl
repz
pop
dec
mov
movsl
xchg
cltd
or
fisttpll
push
and
dec
outsb
sbb
push
arpl
mov
out
js
adc
fcmovb
xor
nop
xlat
jecxz
sub
xchg
xor
insb
push
inc
aas
adc
jo
sub
pop
das
aam
dec
into
sub
inc
rorl
ja
push
ficoms
test
mov
std
push
addl
cmp
pop
xchg
jne
or
ret
dec
mov
sbb
pushf
pop
lret
inc
fdivs
and
push
mov
xchg
jg
mov
scas
pusha
fs
sub
push
xor
cmpsb
inc
repz
push
fst
call
popa
enter
xchg
pop
mov
notl
pop
push
pop
out
out
inc
adc
xor
jne
jnp
scas
jbe
inc
ljmp
sub
sbb
pop
sar
fstpt
leave
sbb
dec
jmp
int
mov
push
shlb
dec
out
add
nop
cmpsb
pop
enter
stc
add
ret
pushf
add
das
dec
je,pt
clc
push
pcmpgtw
enter
pop
or
push
mov
es
sub
xchg
add
rolb
fcoms
repnz
dec
pop
test
aam
or
hlt
popf
sub
xor
xchg
sbb
lahf
loopne
arpl
jge
inc
movsl
loope
or
ss
and
cmpsl
jnp
scas
push
and
clc
lret
fnstenv
mov
cltd
sub
mov
fstl
loop
rcrb
lret
and
dec
fisubrl
sti
adc
sti
arpl
nop
mov
imul
jno
push
test
lcall
mov
gs
ljmp
bound
out
repz
pusha
imul
je
and
or
jle
push
mov
mov
in
ds
les
movhps
xor
mov
jp
int
out
mov
test
push
sbbl
aam
xchg
lds
mov
sbb
jbe
xchg
cmp
and
mov
dec
mov
adc
xchg
addr16
inc
inc
shll
call
out
xor
ret
popf
addb
gs
mov
sub
jnp
imul
push
xlat
clc
xor
inc
das
daa
std
out
mov
mov
push
push
pop
pop
xchg
jmp
lret
outsb
cmp
mov
fmull
pop
add
xchg
or
pop
imulb
and
fucomip
fisttpl
cwtl
adc
mov
sub
aaa
mull
scas
add
test
cmpsl
mov
cld
lods
jmp
adc
inc
sub
jbe
add
test
xlat
cmpsl
lea
in
insb
cmp
in
dec
and
push
bnd
enter
sarl
sub
aam
stos
int3
ds
mov
cmp
push
ret
xor
jbe
sbbl
or
das
add
cmp
ret
xor
pop
jb
movsl
cmpsl
pushl
jo
jo
mov
and
nop
lcall
jmp
nop
rcr
rolb
pop
pop
not
scas
loopne
leave
adc
mov
cmp
mov
daa
push
inc
cmp
js
push
or
sbb
inc
xchg
jmp
push
sti
ss
cmp
iret
aam
lds
aam
rcrb
sahf
adc
mov
test
xchg
lods
and
sbbb
popa
sbb
sub
pusha
mov
sbb
lcall
inc
out
into
scas
dec
cmp
jnp
mov
jle
jns
gs
sub
mov
mov
in
insb
adc
sbb
js
cwtl
push
fcomps
xor
dec
test
movsl
dec
shlb
xor
fldcw
jo
mov
sub
loopne
insl
dec
xchg
jle
cmp
loopne
xchg
inc
pop
dec
addr16
xchg
fimuls
movb
inc
cmc
push
cmp
mov
cmp
outsl
addb
adc
out
imul
pushf
mov
inc
ljmp
pcmpgtb
and
jge
adc
lret
js
sbb
pop
sub
sahf
mov
jge
jmp
out
pushf
lret
sub
push
mov
xor
mulb
imul
push
mov
dec
sti
mov
sbb
xchg
stc
in
push
call
lods
mov
stos
pop
in
lods
lds
or
jnp
mov
add
shrb
jecxz
jl
xor
lahf
fisubl
js
in
flds
sbb
cmp
inc
cld
sbb
cwtl
rol
mov
mov
in
mov
cmp
inc
and
bswap
cmp
lret
enter
dec
pusha
adc
aaa
out
inc
popf
scas
xor
in
inc
js
in
nop
cli
scas
in
pop
jl
clc
scas
pop
xchg
jnp
hlt
test
loope
cmp
sbb
loop
adc
mov
into
xor
jl
ret
insl
adcl
jne
and
jno
loope
imul
ds
mov
push
xor
icebp
ja
ljmp
xchg
aam
mov
inc
pop
adc
push
sub
rorb
rclb
mov
xor
jno
dec
test
and
mov
sbb
mov
adc
std
or
aas
mov
adcl
mov
cmpsl
or
cmpsl
jge
stos
iret
dec
lds
dec
sub
sub
jno
sti
adc
adc
cmp
add
sbb
push
xlat
decl
sub
dec
cmc
xchg
in
sub
push
adc
js
sub
fwait
push
mov
xchg
or
shl
ret
add
and
int
jge
push
push
sti
jnp
cmp
outsl
xchg
stos
es
push
aam
or
mov
push
loop
push
jl
dec
inc
jbe
mov
cmp
dec
cmpsl
es
mov
jmp
mov
sahf
jl
cmpsl
push
sbb
mov
in
cltd
xor
popa
vmwrite
nop
pusha
dec
mov
cmp
xor
shrl
rcrl
cmp
fwait
or
mov
jns
cld
out
cltd
in
mov
xchg
mov
sahf
sbb
push
adc
mov
xchg
push
popa
pop
cld
sahf
or
addr16
fidivs
jnp
popf
xchg
xchg
pop
loop
sub
mov
mov
sbb
xchg
jp
dec
sti
out
xor
jae
fwait
push
mov
xchg
popa
xchg
ficoml
lea
cmp
xchg
je
mov
or
repnz
sbb
push
sbb
mov
mov
mov
xor
movsb
pop
jecxz
and
add
gs
lea
sub
cmp
mov
out
rcrl
ja
nop
icebp
adc
cmpsl
incb
shll
inc
inc
imul
or
inc
daa
mov
add
addb
repz
or
daa
xor
and
add
add
fdivs
inc
xor
jle
xchg
jp
cmpsb
xchg
mulb
loop
mov
jle
add
cld
pop
and
frstor
pusha
mov
int
ja
jo
and
xchg
mov
push
les
rolb
loope
xchg
adc
test
adc
popa
inc
stc
shrl
fisubrl
fadds
into
pop
in
cld
and
xlat
gs
shrl
dec
and
outsb
shll
pop
and
jne
mov
dec
inc
addb
cwtl
fdivp
mov
not
xor
repnz
fimull
mov
out
in
mov
xchg
movsb
xchg
rcrl
leave
or
mov
cwtl
icebp
sub
jno
mov
dec
push
fisubl
loope
inc
push
mov
mov
pop
push
xchg
int3
mov
sub
fucomip
into
adc
pop
daa
lds
aam
cli
xor
in
pop
sbb
sub
mov
mov
in
icebp
xchg
das
mov
vmwrite
daa
int
xchg
cltd
addr16
push
loopne
popf
pop
pop
push
mov
and
rolb
out
sahf
popa
ds
xor
push
push
cli
stos
call
loope
pop
roll
dec
xchg
adc
push
negb
xlat
jns
mov
and
push
push
inc
jo
lahf
mov
std
es
repz
adc
cmp
outsl
sti
xchg
jecxz
xlat
mov
arpl
gs
push
test
loope
imul
test
xor
jmp
jecxz
mov
pop
mov
or
bound
dec
mov
lea
orb
push
or
movsl
sub
adc
outsb
std
fstp
loop
xchg
inc
dec
es
dec
int
shlb
mov
loope
jg
pop
in
jbe
and
pop
sub
cmp
gs
push
adc
and
pop
outsb
dec
test
sub
cmp
dec
push
sub
xchg
dec
lods
imul
pop
sbb
sub
roll
fmull
dec
push
mov
popf
xor
sbb
jae
sbb
rcll
or
aam
push
mov
adc
outsb
fiadds
add
lcall
xlat
and
pop
xor
jae
inc
add
cli
inc
and
addr16
or
sbb
pop
fildl
ljmp
push
mov
inc
movsl
fisttpl
shlb
inc
adc
das
and
lahf
pop
dec
and
cs
sbb
and
xor
pusha
fwait
xchg
test
sahf
xorl
lcall
movsb
mov
mull
add
data16
sar
pop
ljmp
aaa
stos
ror
pop
push
rorb
in
jns
sub
fnstsw
ss
pop
push
decb
and
imul
xchg
jo
stos
into
adcb
fs
pop
jecxz
and
pop
shl
daa
sbb
das
xor
fstpt
mov
and
pop
and
and
punpcklwd
pushf
aas
mov
scas
out
dec
enter
cmp
ds
fdivrs
push
data16
mov
aad
cmp
and
scas
clc
fldenv
rcrb
and
jmp
cli
and
xchg
aas
pushf
push
outsb
mov
movsl
xchg
sub
out
jne
mov
popf
or
aad
dec
fs
ret
xchg
in
pushf
inc
and
lods
jle
mov
hlt
xor
ja
out
mov
aam
mov
out
js
push
fisubrl
xor
adc
cmp
das
xchg
push
pop
pop
pop
cmpsb
inc
fmull
inc
mov
mov
sub
pop
mov
mov
fcoms
movsb
jb
sub
nop
or
jg
mov
test
cwtl
pop
adc
xchg
repz
cmp
xor
in
inc
mov
in
fdivs
out
push
insb
inc
outsb
pop
cmpsl
push
fildl
repnz
std
movsl
popl
ret
push
pop
jle
xchg
in
cs
mov
es
and
mov
sbb
bound
jg
addl
out
das
std
mov
mov
pushf
mov
outsl
xor
xor
xchg
aam
jmp
jl
mov
daa
jnp
sub
movsb
cmc
push
repnz
into
inc
dec
ret
mov
pop
in
sbb
adc
jne
push
or
adc
orb
pop
scas
cmpb
mov
fistl
mov
nop
mov
push
les
std
jnp
lret
cmp
jmp
sbb
cmp
outsl
adc
dec
add
fs
push
pop
out
in
sbb
outsb
hlt
cmpl
push
leave
stc
je
iret
std
cli
adcb
call
ficomps
mov
arpl
sbb
sti
pop
sti
xchg
pop
decl
jl
mov
out
cmp
mov
shlb
cmp
inc
aas
mov
mov
sub
das
inc
aam
cmc
push
pop
sub
insl
ds
repz
testb
sub
lea
iret
mov
adcl
add
push
jnp
or
popf
adc
jmp
scas
mov
test
loop
xchg
in
int3
ss
cld
cmp
jae
push
cmp
mov
int3
add
imul
fcmovnb
pushf
rcll
addl
jb
add
inc
test
repnz
repz
out
cld
xchg
cmpsb
push
idivb
cld
add
imul
adcl
dec
movsb
mov
loop
std
stc
cmp
inc
movl
and
loopne
dec
rcrl
push
xchg
adc
stos
xchg
scas
rcrb
mov
sbb
stos
out
mov
mov
rcr
cmp
repnz
cmpb
xchg
js
inc
sti
xor
stc
test
frstor
lods
fimuls
jnp
sub
rcl
jae
jmp
dec
lret
test
fwait
imul
gs
inc
adc
and
rcll
rorl
int
xor
jmp
test
cmc
bound
enter
pop
push
hlt
mov
cltd
faddl
pop
sbb
push
push
aas
inc
mov
mov
call
pop
mov
mov
lds
leave
ss
inc
insl
adc
lcall
ss
mov
mov
sbb
xor
pusha
cld
add
cmp
sbb
xor
adc
cvtps2pd
sbb
sub
push
arpl
xor
add
cld
mov
mov
aas
call
jp
daa
jmp
sub
push
push
jmp
pop
lret
lahf
lock
jbe
jbe
addr16
inc
jge
pop
outsb
push
mov
fcmovnu
push
mov
lahf
pop
sarb
or
jne
mov
sub
jo
jp
sub
mov
push
in
xor
incw
jns
test
outsl
sbb
mov
push
gs
push
push
pop
popa
lds
test
cwtl
sbb
mov
sub
jmp
aas
pop
and
in
stos
imul
jno
movsb
mov
popf
or
mov
out
test
je
inc
push
mov
adc
mov
inc
popa
jbe
or
push
adc
sub
xchg
pop
adc
cmp
sti
cli
into
jl
xlat
inc
movd
mov
inc
shll
ret
dec
aaa
mov
cld
push
into
pop
pop
pop
jo
add
loop
xchg
movsl
push
bound
and
mov
inc
data16
ret
insl
insb
stos
mov
xor
push
ja
leave
into
xor
add
push
mov
sbb
jae
mov
ror
dec
xchg
rdpmc
sub
dec
and
xor
mov
scas
xor
pop
add
cmp
imul
hlt
sahf
ja
cmovo
adc
pop
out
pop
push
fs
sub
add
sbb
dec
sub
jecxz
inc
dec
ljmp
daa
iret
fldl
jp
sarl
sbb
mov
sahf
add
into
fsubl
scas
cmp
mov
adc
lea
int3
xor
call
xchg
mov
jge
cmp
or
movq
dec
sub
jle
and
push
fdivp
cltd
sub
dec
test
cmpsl
outsb
mov
aas
insl
lcall
rcr
repz
adc
mov
insb
pop
in
sub
nop
out
or
and
lret
fs
gs
lods
push
imull
insb
adcl
enter
mov
lock
jbe
gs
xchg
sbb
xchg
les
and
loope
sbb
icebp
pop
inc
cltd
mov
lret
adc
add
add
or
add
lcall
mov
push
movups
push
outsb
lods
or
pushf
cltd
push
mov
xlat
xor
or
fistl
push
pop
outsb
sbb
fcmovnb
cmpsb
or
pop
pop
push
insl
add
cmp
rorl
pop
mov
or
ffree
sub
add
mov
aaa
lods
push
or
and
or
test
cmp
xor
sub
lcall
imul
call
stos
out
loope
incl
ret
xor
movl
jne
ds
fnstsw
lods
xor
iret
in
jmp
dec
movb
sub
aad
mov
das
sub
scas
sub
dec
lock
dec
sbb
mov
jnp
test
xchg
lcall
cmpsb
xor
dec
rcl
pusha
sbb
xor
xchg
aas
and
pmullw
push
adc
mov
add
xchg
adc
js
push
pop
hlt
fistpll
xor
xor
movsb
into
cmp
lds
test
dec
xchg
jp
mov
or
loope
cld
cmp
jle
out
das
in
add
addr16
jl
aam
in
lahf
jl
pushf
cmp
and
xchg
ss
mov
jbe
mov
push
jecxz
pushf
ret
inc
mov
ja
pop
out
xor
mov
mov
and
je
inc
enter
cli
adc
rclb
je
pop
mov
loope
sahf
call
cmp
cmp
ljmp
pop
je
inc
arpl
outsb
push
cmp
xchg
repnz
push
pop
push
xor
leave
int3
sbb
cmp
inc
cmp
ret
stos
pop
cltd
xorl
imul
repz
push
scas
dec
sahf
and
lock
pop
sub
or
cs
negb
mov
add
mov
rcl
addr16
movsl
mov
jbe
xor
adc
test
cltd
jnp
push
xchg
je
insb
adc
jge
int
in
ja
add
lods
repz
roll
frstor
movsl
mov
scas
xchg
sbb
call
adc
imul
push
mov
pop
test
imul
sti
pop
sbb
stc
xlat
pop
imul
das
frstor
and
divl
mov
adc
fimull
mov
jl
fwait
test
sbb
cmp
and
scas
daa
dec
mov
jne
push
fisubrs
xorl
dec
pop
int3
xchg
jo
and
dec
mov
sbb
adc
cwtl
xchg
notb
cmp
add
fidivrs
lods
lods
xor
cmp
icebp
ret
push
xor
push
pop
mov
mov
mov
loope
sub
enter
push
cmp
fnstsw
xchg
mov
and
sarb
sub
in
test
adc
jmp
and
pop
shlb
pop
or
iret
mov
es
cs
fimull
mov
mov
xor
stos
xchg
pop
sbb
js
jnp
movsl
mov
aad
rcll
out
cli
xor
adc
add
push
mov
xchg
negl
scas
rorb
sub
mov
mov
stos
in
je
lods
hlt
mov
std
scas
xchg
mov
ret
ret
mov
cmp
pushf
jbe
idivl
push
sahf
inc
jne
std
rorb
mov
push
xor
mov
cld
and
jno
imul
adc
mov
jne
push
sbb
in
loopne
push
and
xor
inc
dec
dec
xchg
ficompl
adc
leave
ds
cmp
or
rol
jns
mov
dec
das
ljmp
mov
data16
inc
movsb
cmp
lods
lds
outsb
mov
sbb
dec
outsl
mov
dec
mov
add
test
popa
cld
dec
push
loope
jno
rcl
lods
sti
aad
inc
cmp
inc
notl
cmc
sbb
jb
movsl
add
sub
and
mov
fmuls
loope
bound
mov
or
jns
xchg
lods
rclb
mov
leave
push
faddl
std
jns
mov
test
out
stos
lds
enter
cs
inc
dec
inc
cmpsl
divb
dec
cmp
out
je
test
cmp
pop
xchg
mov
push
fildl
adc
mov
jno
popf
mov
inc
xchg
dec
insl
jae
cmpl
mov
dec
push
xor
or
nop
dec
aad
lock
dec
lods
add
adc
mov
xchg
insl
push
clc
sub
dec
xchg
adcl
jecxz
js
sbb
mov
sub
jnp
cs
push
xchg
stos
test
inc
pop
fidivrs
xchg
cmp
imul
xor
mov
iret
sbb
and
or
pop
es
cmp
or
jp
dec
aam
pop
jmp
hlt
add
mov
clc
rcrb
imul
mov
fisttps
jb
xchg
test
mov
fisubrs
in
mov
mov
add
ja
insb
jge
xor
les
jp
jg
es
addb
push
mov
outsb
dec
cmovb
testb
call
pop
shr
mov
mov
outsb
push
mov
mov
out
lea
sbb
and
push
in
push
xchg
adc
and
fnstcw
shlb
out
test
test
jae
sbb
pop
dec
int
sub
dec
rcll
xor
fs
mov
iret
and
mov
aaa
jae
push
mov
mov
das
jae
shrb
sbb
test
pop
rcll
inc
daa
mov
mov
std
shll
mov
movsl
mov
push
test
pop
dec
mov
pop
lret
ja
out
xchg
iret
push
xor
popa
mov
repz
ljmp
mov
or
inc
outsl
ss
sbb
arpl
add
jg
pushf
mov
xor
int3
nop
pusha
fdivs
jp
jecxz
inc
mov
jmp
test
in
and
movsb
imul
xor
add
push
out
pop
xor
cld
pop
out
pop
fldcw
adc
test
lods
add
xlat
xor
sbb
mov
push
cld
xchg
inc
repz
xchg
les
jne
aad
and
or
ret
mov
roll
daa
mov
dec
out
mov
ret
mov
insb
pop
inc
rorb
adc
shld
push
push
adc
sahf
sub
aas
inc
aas
lea
stos
lods
int
sub
adc
enter
push
lret
mov
add
push
mov
fistpl
rcl
jmp
fstps
mov
or
ss
mov
pop
insl
xchg
cmp
push
jbe
inc
call
fdivrs
fidivrl
mov
scas
cmc
cli
mov
das
mov
lahf
mov
xor
mov
cmc
mov
lret
outsl
repz
jbe
inc
mov
fidivs
sub
loopne
jmp
std
sahf
mov
je
push
rolb
sbb
iret
ja
fildll
imul
mov
les
mov
fcomps
shrl
push
fisubrs
sub
sbb
enter
aad
ret
js
into
sub
dec
shl
aad
pop
mov
stos
sbb
mov
xlat
mov
lock
jmp
bound
add
add
push
mov
dec
js
sbb
cmp
mov
mov
ds
fiaddl
test
mov
adc
pop
lds
in
push
push
or
sub
dec
xor
repnz
vmovdqu
cltd
jg
dec
add
add
rolb
test
aas
sbb
sbb
loopne
jo
das
out
popf
mov
ds
out
mov
shr
push
inc
mul
orb
stos
push
sub
sbb
or
sti
inc
mov
ja
inc
mov
in
sti
mov
dec
ret
jecxz
cwtl
mov
xor
sbb
cmpsb
fs
xor
mov
je
aad
jns
insb
fimull
lods
and
lock
int
mov
loope
lret
lea
aas
ljmp
push
cs
pop
or
mov
in
inc
test
repnz
push
or
or
cmc
sbb
push
gs
pop
inc
pushf
repz
push
movsl
jmp
outsb
jnp
cmp
aas
mov
enter
sbb
jno
push
mov
pop
int
loopne
js
dec
es
adcl
into
pop
sub
testb
mov
push
shrl
pop
push
sub
push
bound
cmp
pushf
pop
xchg
sub
xor
in
into
enter
adc
push
cmc
ret
mov
add
jp
ljmp
inc
movsl
mov
mov
cmp
fwait
push
adc
ret
pop
jbe
inc
and
out
inc
test
xor
fsubr
fisttpl
sbb
xchg
std
dec
xchg
sahf
sbb
fxch
cltd
mov
cmp
daa
push
scas
xchg
arpl
lcall
movsl
lock
xlat
gs
aad
loopne
notl
mov
in
mulb
xchg
das
push
in
sub
cmpb
out
push
adc
gs
push
mov
inc
push
notb
sub
or
ret
push
xchg
test
dec
jne
out
inc
in
add
cmp
cltd
jae
mov
dec
lods
rolb
add
cs
cmp
clc
out
sbb
imul
daa
in
repnz
pop
je
rclb
sub
add
push
cltd
nop/reserved
and
jle
cmp
pop
push
mov
pop
daa
lcall
pop
sub
cwtl
jae
push
shll
sbb
push
dec
mov
sub
imull
mov
pop
movsl
addb
fld
mov
xor
xlat
add
xor
in
fcompl
mov
scas
movsl
push
jmp
pusha
adc
mov
push
in
repnz
lock
pop
push
into
adc
push
lahf
xlat
icebp
mov
xchg
cmp
test
adc
cltd
stos
loope
sbb
mov
out
and
outsb
clc
in
cltd
or
movsl
insb
push
adc
pop
cmp
pop
pop
mov
jp
scas
sbbl
and
xchg
dec
inc
les
fs
lock
mov
sahf
loop
dec
mov
mov
jle
pop
leave
mov
mov
adc
jge
inc
cli
mov
pop
or
icebp
lret
or
outsb
data16
add
fwait
mov
dec
mov
inc
sahf
inc
clc
fcomip
xchg
sub
cmc
pop
stc
mov
mov
rol
sti
dec
xchg
iret
dec
push
xor
xchg
push
pop
ljmp
xchg
dec
in
pop
ret
and
mov
outsl
mov
and
and
insb
mov
out
inc
xchg
adc
adc
cmp
xor
aad
mov
cltd
mov
push
adcb
scas
add
sbbb
fwait
xor
je
xor
jge
jno
push
ds
rclb
shr
cmpsb
xchg
xchg
mov
add
inc
pop
jle
test
mov
clc
outsl
shl
xor
sahf
cmp
ficomps
rep
cmp
inc
mov
pop
inc
imul
pop
loop
mov
aad
mov
and
or
lds
mov
add
ret
das
sub
int
shrl
pop
movsl
repz
pop
sbb
out
adc
mov
pop
leave
jne
jecxz,pt
sbb
xchg
fisubrl
mov
or
xchg
xchg
test
aad
addr16
lods
dec
pop
aaa
imul
jmp
mov
scas
mov
aad
mov
push
fdivs
idivb
add
cmp
push
xchg
stos
pop
and
ja
xchg
cmp
cwtl
out
std
lods
sub
jb
stos
xlat
ret
fdivs
jmp
ja
int
xor
or
ret
push
jmp
cmp
and
ja
xor
ret
sbb
sbb
adcb
dec
push
add
fbld
mov
hlt
pop
dec
and
cmp
sub
arpl
pop
fcmovne
mov
or
pop
adc
fcompl
pop
add
jae
aad
pop
pusha
sahf
mov
xchg
out
mov
pop
pop
imull
cmc
fisttpll
hlt
int3
xor
xchg
pusha
add
jno
xchg
add
and
xor
test
test
sarb
mov
stos
xor
dec
loope
mov
xchg
push
lods
lret
dec
xchg
rcl
xor
mov
push
test
rol
sbb
dec
mov
arpl
xlat
xor
cmp
or
stc
test
push
insb
mov
ljmp
out
push
hlt
mov
repnz
cmp
sarb
pusha
sbb
sub
jle
ret
mov
sub
sbb
xor
stos
cmp
cmp
xlat
mov
sbbb
add
mov
les
ds
shlb
sti
lcall
inc
and
lods
shrb
pop
es
dec
jbe
jno
cmpsl
pop
into
jmp
loop
push
dec
xorl
dec
mov
cmp
lods
mov
mov
leave
mov
andb
inc
push
and
outsb
lret
add
imul
pop
and
sbb
mov
inc
cmp
aas
mov
sub
add
xchg
mov
fstpl
mov
ljmp
out
and
pop
cmp
or
jo
pop
sti
add
das
scas
inc
test
pop
xor
insb
rcrl
in
pop
fsts
popf
iret
push
jo
mov
mov
push
pusha
sub
stos
fs
fcoms
pusha
pushf
jp
pushf
and
and
mov
mov
xchg
out
aad
sbb
popf
fstps
push
mov
xchg
test
pop
outsb
sbb
inc
adc
cs
and
adcb
pusha
lcall
jne
pushf
pop
shll
jb
pop
mov
sub
leave
stc
cltd
pop
mov
jmp
movnti
int3
xchg
push
and
cmp
enter
xchg
cmp
xchg
inc
xchg
and
push
adc
in
sbb
push
xchg
ficomps
jmp
inc
hlt
mov
in
repz
ret
sbb
out
fldenv
jne
test
jns
lcall
pop
cmp
fs
test
xchg
out
rolb
insb
jg
cmp
jg
pop
xlat
jg
lock
xchg
mull
pushf
push
xchg
push
sub
dec
out
sahf
and
sub
push
adc
pop
in
movsb
addr16
iret
dec
cli
sub
repnz
mov
cmpsl
and
adc
cmc
xor
aas
jg
lods
sub
and
push
cld
sti
pop
imull
call
inc
pop
ffreep
call
setg
aad
sbb
mov
jge
push
lock
mov
jb
fcmovbe
pop
or
aad
ljmp
loopne
clc
sti
enter
sub
cmc
mov
pop
out
push
xchg
ficomps
cmp
mov
inc
jnp
xchg
adc
pop
cli
sub
and
gs
inc
subb
pop
adc
lret
or
mov
pop
imul
sti
mov
mov
pop
mov
sub
sarb
push
jl
in
out
pop
cmc
stos
xchg
sarb
inc
out
imul
stos
out
loope
mov
and
dec
movsl
inc
stos
inc
mov
ds
mov
dec
push
fldln2
mov
pop
sub
jae
out
ret
lret
inc
add
notl
aaa
jmp
mov
je
xchg
scas
aad
fidivrs
add
outsb
push
rolb
in
mov
es
xor
outsb
cmp
pop
push
mov
iret
mov
push
mov
push
mov
ret
and
ds
cli
jge
cmpsb
push
sbb
xchg
mov
sbb
mov
es
fstpt
das
stos
push
mov
xchg
xor
mov
or
mov
testl
out
sub
arpl
lea
ficoms
push
sti
pop
stos
jne
loopne
bound
loop
cmc
push
mov
sbb
jmp
fstl
stos
popa
or
lahf
push
dec
hlt
cmc
mov
mov
inc
push
subl
insb
mov
cld
pop
rcrl
mov
cli
ds
push
fsubp
sbb
cwtl
jp
shr
out
xlat
xor
rol
or
stc
push
mov
xchg
mov
ds
cmp
icebp
ja
scas
inc
lret
fdivl
rorl
jle
jo
stos
into
in
mov
inc
out
fwait
push
xchg
sbb
mov
push
lea
cmovno
popf
xor
aas
sbbb
out
hlt
or
dec
or
push
movsl
inc
test
push
data16
add
sbb
cmc
rolb
pop
xor
movsb
es
test
sub
scas
xor
cld
dec
jecxz
leave
dec
jb
les
aam
pop
test
pusha
mov
push
pop
repz
mov
sbb
xor
cs
mov
lret
jmp
outsb
pop
call
fisttpll
lods
xchg
inc
mov
adc
mov
jl
inc
jne
push
mov
fs
mov
sbbb
sahf
or
aaa
xlat
int
popa
cmp
outsl
testl
xor
pusha
and
pop
sbb
adc
xor
jecxz
inc
js
cld
repz
movsl
push
or
ds
lock
decl
stc
pop
xor
cmp
lretw
sbb
test
xchg
cltd
leave
xor
das
xchg
std
xor
mov
or
mov
test
jo
fbstp
mov
cld
xor
inc
xlat
push
sub
ljmp
fs
push
jle
repz
pop
mov
sub
loop
adc
mov
mov
add
int
ret
jp
lods
fdivl
mov
xor
mov
subb
das
fnstcw
negl
dec
xor
test
xchg
fwait
movsl
jbe
fwait
es
cli
outsb
pop
dec
out
jb
psrld
aas
call
pop
mov
sub
pusha
test
adc
stc
popl
test
int
push
xor
ret
sbbl
sub
mov
fs
add
push
shr
xor
bound
jno
push
jmp
imul
lods
in
pop
mov
in
clc
sbb
cwtl
push
adc
adc
jmp
dec
clc
repz
pushf
push
flds
mov
push
jge
movsb
and
mov
out
inc
xor
shr
pop
adc
mov
fdiv
cmp
hlt
lea
loopne
push
cmp
loop
mov
xlat
mov
ljmp
xchg
or
and
out
repnz
jno
shr
mov
push
jp
sbb
cmp
loopne
sahf
jns
movsl
mov
jno
add
out
push
in
in
gs
add
repnz
repz
imul
ret
std
xor
xor
in
push
movb
int3
aaa
rcr
sti
jno
dec
iret
pusha
shlb
rcrl
adc
cvtps2pd
int
scas
cmp
jp
and
repnz
ds
jne
sub
jmp
or
movl
pop
dec
enter
dec
cmp
pop
bound
movb
jnp
mov
push
mov
xor
stos
enter
xchg
rorb
and
jle
jnp
push
lret
insb
stos
test
or
outsb
cmp
lea
test
fsubs
fisttps
xor
movsl
jmp
sbb
dec
bound
repz
int
fbstp
push
xor
xor
dec
in
jno
cmp
adcl
push
xchg
outsl
mov
pop
sbb
imul
movsb
jo
dec
lock
push
lret
dec
fmull
sbb
push
das
jb
or
dec
stos
outsl
lret
adc
dec
fwait
daa
push
jp
sbb
dec
adc
in
push
mov
xlat
popa
adc
or
out
adc
and
dec
fwait
lret
pusha
cmpsb
rcrb
lret
mov
mov
xlat
push
push
adc
pop
cmp
mov
jp
cld
adc
cmp
or
mov
mov
movsb
xchg
es
pop
jno
insb
sbb
push
leave
mov
cwtl
and
ret
enter
bound
and
out
jge
popl
push
in
jecxz
mov
imul
cmc
push
mov
mov
xor
jg
cmpsb
and
sbb
fnsave
add
add
pusha
loope
rcll
push
pop
sti
or
pusha
pop
inc
adcl
cs
les
xchg
cmpsb
push
push
icebp
ret
popf
jmp
mov
movsb
movsl
subl
sub
push
add
push
ret
mov
jne
lret
fisubrs
js
xor
jl
push
pop
or
ror
gs
sub
popa
mov
stos
scas
ret
scas
insb
das
jp
or
cmc
sbb
mov
in
inc
fmuls
lret
pop
or
or
shl
hlt
xchg
cmp
xchg
add
stc
adc
mov
mov
lret
mov
mov
loope
pop
jo
lahf
pop
or
push
out
lea
dec
nop
adc
ljmp
ret
mov
movsb
add
xchg
mov
and
daa
cmp
pop
loopne
into
pop
jp
ljmp
pop
dec
add
mov
sub
and
insl
shld
add
mov
or
scas
ds
test
lret
cmp
cmc
mov
cmpb
sahf
orb
lahf
xor
lahf
mov
xlat
xchg
repz
repnz
or
clc
or
imul
pop
lahf
adc
gs
les
sbb
mov
loope
pop
in
jp
sar
add
loopne
xchg
or
int3
add
adc
jge
cmpsl
sti
test
fidivl
adc
js
fisubrs
and
cmpsl
test
cmp
jnp
ljmp
leave
pop
inc
mov
inc
add
fs
fildll
int3
add
push
out
mov
cwtl
loope
repz
xchg
out
gs
and
sbb
xor
inc
pushf
xor
cmpsl
push
cld
jne
sub
push
jecxz
fisubl
mov
std
xlat
push
daa
loopne
mov
xlat
pop
jns
and
sbb
dec
fsubrl
pusha
pusha
das
dec
jns
inc
aaa
mov
stc
push
popf
scas
pusha
pop
sar
pushf
sbb
mov
pusha
iret
mov
popf
jle
add
in
add
int
cmp
inc
sub
call
stos
xchg
adc
and
push
push
lods
jo
sub
mov
sbb
cmp
dec
es
push
dec
xchg
pop
push
dec
pop
test
sbb
mov
jmp
dec
movsl
inc
mov
cmp
test
cli
pop
movsl
hlt
mov
mov
fnstenv
vaddpd
test
cmp
stos
pop
lock
nop
xlat
pop
mov
std
cltd
cmpsl
lcall
stos
mov
cmc
or
adc
daa
out
and
add
jle
insl
mov
pop
cmp
dec
xor
cltd
jo
mov
or
add
popa
adc
mov
cmp
scas
leave
dec
out
into
sbb
mov
cltd
test
ljmp
jl
dec
pop
push
jbe
imul
lret
inc
int
cmpsl
movsb
cld
push
rcrl
jg
stos
xchg
outsl
inc
dec
lcall
lahf
aam
stc
push
repz
xchg
dec
jne,pt
fsubrl
insl
push
das
jge
scas
cs
scas
pop
imul
xchg
cmp
int3
lret
rclb
sbb
pop
cwtl
es
pop
es
lcall
push
test
scas
sbb
sub
ficompl
mov
add
jmp
mov
call
xor
add
jo
mov
xchg
pushf
or
leave
mov
sub
pop
call
dec
or
pop
inc
mov
mov
divb
outsb
inc
scas
push
jp
mov
movsb
or
xchg
mov
test
inc
xchg
mov
push
mov
stos
xchg
mov
iret
dec
icebp
ljmp
ds
xor
sub
mov
ficompl
mov
push
pushf
addr16
stc
fwait
mov
sub
sbb
dec
mov
aam
lret
fsubrl
xor
inc
mov
cli
daa
sbb
data16
xor
nop
inc
push
mov
pop
and
push
icebp
sub
push
out
mov
lahf
test
pop
push
lahf
pop
dec
pop
or
mov
je
cmpsb
xchg
fwait
pop
xchg
jne
cmpsl
es
popf
pusha
rol
mov
imul
divb
jecxz
test
lret
push
add
jnp
sbb
lahf
mov
inc
cmpsb
mov
mov
hlt
adc
cmp
mov
shll
in
xchg
sbb
push
imull
fadd
loopne
inc
scas
sbb
or
repnz
add
fistps
inc
and
cmp
fcoms
int
mov
mov
test
cmp
std
ret
loope
fisubrs
mov
loope
in
sub
out
lds
xor
call
or
sti
mov
orb
xor
leave
dec
inc
enter
add
dec
rcrb
mov
pusha
insb
repz
jmp
in
add
adc
jbe
daa
push
insb
popa
sub
sub
cmpsb
xchg
mov
loope
punpckhbw
mov
int
and
lods
movsl
cmp
adc
xorl
mov
or
mov
ss
ret
in
push
rorl
out
mov
hlt
jae
fwait
pop
shrb
jg
jne
jge
jmp
loop
cmp
jmp
clc
aam
sti
insl
jnp
push
xor
ds
jp
cmc
sbb
and
xlat
dec
filds
cmpb
hlt
push
arpl
lea
stos
xor
mov
sbbl
dec
dec
mov
sub
das
out
imul
jo
sub
loopne
xor
mov
psrlq
insb
pop
in
sbb
mov
aad
push
mov
stos
push
cwtl
cmp
pop
jge
in
shlb
mov
out
push
xor
cmp
jb
cmpsl
stc
ret
lahf
cmpsb
fisttpll
xor
pop
incb
dec
dec
mov
adc
hlt
mov
and
rcrl
lahf
mov
inc
lods
dec
mov
push
test
inc
sbb
dec
out
lahf
inc
enter
movsb
cmc
or
and
bound
xor
lods
cmp
xchg
popa
cmpsl
cmp
xlat
dec
scas
out
push
pushf
xchg
dec
sahf
mov
or
rorb
sbbb
jns
pop
test
push
insb
sub
ret
xchg
dec
pop
jp
lea
add
cmp
and
sbb
mov
pop
test
jge
mov
push
mov
loopne
lea
arpl
daa
inc
and
fistl
mov
mov
cmc
inc
pop
jnp
xchg
dec
aas
rorb
vcvtdq2pd
scas
push
jg
pop
pop
add
inc
sbb
cltd
js
pop
jne
xor
sbb
jge
dec
cli
pusha
xor
mov
sub
das
inc
loopne
fstl
lahf
or
xor
fbld
push
shlb
and
cwtl
sbb
mov
dec
cs
ret
xchg
mov
fidivl
fistpl
fcoms
test
cld
lea
das
ljmp
push
adc
out
dec
inc
mov
sahf
sahf
mov
ret
fimuls
fdivp
mov
fld
leave
sbb
xor
shr
mov
pop
mov
bound
mov
mov
mov
add
cwtl
lds
test
mov
lea
mov
cmpsl
mov
scas
out
mov
push
repnz
cltd
sub
dec
ds
inc
push
pop
aad
pop
mov
pop
dec
cmp
clc
xchg
dec
pop
jmp
je
mov
xchg
lret
ds
mov
cs
xor
adc
lret
inc
inc
clc
jge
xchg
ja
xchg
icebp
xchg
in
and
cmpsb
mov
xlat
insl
add
cmc
aam
arpl
push
jl
ja
jns
test
enter
cmp
cld
jle
push
in
inc
mov
test
fldl
xchg
pop
pop
mov
das
push
adc
pop
add
or
mov
sub
mov
xchg
jbe
ljmp
test
insb
add
sub
jecxz
mov
dec
enter
movsb
leave
add
push
ret
inc
inc
mov
jae
fs
icebp
adc
push
mov
sbb
mov
mov
out
stc
imul
aas
cmp
add
sbb
fs
data16
pop
ja
repz
loopne
addr16
mov
push
dec
sub
int3
xchg
cmp
or
sti
adc
in
cmp
and
mov
jb
incb
dec
xchg
xchg
pusha
or
dec
fsub
lahf
gs
iret
jp
mov
inc
mov
lods
adc
out
dec
xchg
aad
adc
push
inc
ljmp
sub
jne
cmp
jge
ja
or
mov
cmpsl
pusha
or
aas
jo
cmp
adcl
orl
sbb
or
jg
adc
cmc
icebp
addl
mov
ret
sub
std
sbb
inc
addl
repnz
shr
mov
fwait
je
push
outsl
lcall
xchg
push
sbb
mov
popf
push
sub
sbb
add
push
outsb
inc
push
nop
or
and
pop
pop
arpl
adc
dec
pushf
sahf
in
lods
je
and
and
out
add
xorl
int3
mov
lret
into
jns
arpl
xchg
xor
data16
jo
sbb
inc
xchg
ljmp
in
and
in
pop
pop
call
hlt
or
jnp
mov
mov
xchg
sbb
lea
lahf
mov
stos
hlt
pop
xor
push
mov
rcrl
mov
lahf
aam
xor
fidivrs
out
out
icebp
dec
mov
mov
and
xchg
pushf
dec
jge
push
inc
sub
jge
lret
lret
scas
mov
lods
dec
scas
mov
inc
stc
scas
fldenv
les
cltd
jl
mov
lds
inc
mov
cmpsb
cmc
mov
lods
int3
mov
clc
fildl
dec
push
js
mulb
orl
cmp
popa
aam
xor
hlt
movsb
gs
mov
jg
stos
scas
jmp
push
out
cwtl
inc
jnp
jle
push
sar
mov
lret
and
add
xor
pusha
test
mov
add
test
jecxz
cmp
ret
adc
cld
mov
aad
pop
add
push
pop
push
jecxz
ret
je
testl
sarb
in
pushf
adc
jl
and
push
dec
icebp
push
dec
nop
jo
shll
enter
mov
inc
int3
sbb
imul
xor
stc
lcall
pusha
in
or
loope
jns
mov
push
test
xchg
xor
stos
popa
jl
data16
push
shl
xchg
imul
lcall
fwait
jmp
in
and
sarl
gs
xor
cs
jmp
enter
pop
out
mov
jmp
cmp
cmp
push
xor
cmp
push
push
mov
push
add
xor
cmp
jae
addr16
arpl
imul
adc
loop
or
xchg
jg
jae
gs
iret
decb
push
outsb
std
dec
shll
pushf
outsb
flds
notb
push
xlat
cmp
js
movsl
rcll
add
sbb
filds
sahf
add
xor
js
andb
ret
sub
mov
das
repnz
dec
jl
jmp
mov
push
fistpl
imul
int
jo
jns
aas
arpl
cmp
mov
xchg
mov
lahf
xor
shll
lds
sub
dec
out
mov
popf
inc
dec
dec
addb
repz
mov
mov
cmp
mov
push
adc
shrb
inc
xor
cmpsb
and
cmp
mov
lods
insb
cmpsb
add
push
cmp
push
inc
or
cwtd
arpl
mov
decb
mov
pop
xchg
or
push
jnp
fsubrl
inc
sub
adc
cmp
enter
xor
add
jg
inc
sub
cld
dec
roll
mulb
lods
jne
push
lock
sub
stos
and
xor
lea
aaa
xor
mov
or
mov
jno
mov
aas
fstps
dec
mov
inc
inc
add
push
imul
ja
imull
push
adc
sub
adc
mov
outsl
rorl
icebp
or
dec
dec
mov
adc
dec
and
popl
jae
minps
mov
jbe
add
repnz
cld
fwait
jecxz
inc
dec
insb
imul
xor
pop
mov
out
xchg
mov
fdivs
xchg
push
leave
and
sbb
push
into
cld
push
push
aas
push
and
into
cmc
sub
sub
arpl
jne
stc
cs
ljmp
lods
xchg
xchg
sbb
push
int3
mov
stos
jge
loopne
or
sub
mov
jge
sub
insl
roll
sbb
jne
and
push
xchg
mov
sbb
and
bound
sti
cmc
dec
ds
jecxz
and
push
lods
mov
sub
fistpl
test
fs
lock
mov
aaa
inc
cmp
adc
xor
pop
push
das
push
mov
dec
aaa
cmpsb
popa
call
push
aam
lods
ds
jbe
mov
mov
stos
sahf
xchg
int3
jns
push
push
in
popl
jns
test
and
std
imulb
xor
jmp
push
fsts
mov
sahf
cmp
in
jecxz
add
shlb
movsl
mov
sbb
fndisi(8087
fisubrl
cmp
push
xor
jae
dec
pop
mov
mov
dec
fildl
in
dec
imul
mov
adc
xchg
adc
xor
push
clc
addb
xor
push
shlb
sbb
leave
sub
or
xchg
ficoml
jo
int3
scas
pop
sbb
test
and
shll
jmp
addr16
fists
jl
fcomps
jmp
xlat
in
fcom
sub
fimull
and
insb
loope
shrl
test
mov
jecxz
lret
aam
sub
fnstcw
push
add
test
je
cmpsb
jb
stc
lock
jo
jmp
push
repnz
in
incl
and
in
mov
jle
mov
pop
cs
int
ds
mov
insb
mov
sub
xchg
sti
sti
push
jp
add
insl
xlat
push
je
rorl
push
adc
insl
shl
nop
cmp
pushl
mov
mov
insl
icebp
sub
jne
ds
icebp
push
inc
push
and
test
cmc
loopne
mov
icebp
dec
popf
jge
cmpsl
or
hlt
in
int
and
outsb
dec
jmp
adc
sub
jb
out
or
repz
cmp
push
mov
add
hlt
xchg
dec
cmp
mov
jge
rcl
cwtl
cmp
and
movsl
xor
mov
js
mov
or
fisttps
jecxz
pop
mov
jo
mov
bound
inc
stc
jbe
push
cli
arpl
fists
inc
fldt
cltd
dec
out
enter
decb
sbb
popf
adc
rep
lock
test
fwait
imul
mov
or
jp
inc
outsl
mov
pop
movsbl
jmp
mov
dec
xchg
gs
test
cmp
xor
or
add
mov
call
inc
movsb
and
das
cmc
cmp
inc
pop
xchg
sbb
jg
push
inc
mov
xor
push
aaa
mov
add
mov
jae
adcb
bnd
popa
in
aad
jecxz
jmp
cmc
lahf
fsubrp
ja
mov
fwait
pop
jmp
dec
aam
nop
cli
icebp
jae
jns
out
adc
ss
dec
and
sbb
mov
test
jae
and
enter
std
dec
and
out
cmc
lds
int
sub
pop
repz
mov
adc
pushf
aas
mov
jle
jb
mov
ja
clc
xor
dec
and
and
xorb
addr16
ret
pop
mov
cmc
popa
movsb
cmp
pop
mov
lds
inc
fwait
mov
sbbb
arpl
ljmp
mov
push
jg
mov
xchg
addb
or
xchg
jae
mov
fwait
xchg
iret
es
or
pop
ret
fwait
and
fistpll
jno
call
dec
sub
sub
mov
mov
pop
fs
sbbb
mov
mov
add
iret
stos
pusha
aaa
popf
je
ljmp
orb
push
je
outsl
pop
push
or
jae
pop
xor
sub
sbb
or
in
pop
es
out
es
lret
aaa
adc
mov
mov
hlt
cli
mov
cmpsb
mov
mov
jnp
xor
into
jnp
cmp
inc
rorl
shl
jns
int
xorl
jbe
mov
pop
xchg
mov
xchg
mov
dec
fwait
daa
mov
pop
and
scas
mov
cld
mov
insb
adc
pop
jle
mov
mov
pushf
pop
mov
cmp
stos
mov
sti
xchg
rclb
jle
loopne
movsl
adc
push
aaa
pop
inc
mov
ja
subb
pop
dec
fcoms
push
push
test
adc
jl
and
pop
pop
xlat
int3
dec
gs
outsb
scas
sbbb
lret
jnp
mov
sbb
and
inc
ds
cmpsl
out
jno
cmp
mov
subl
shrb
and
mov
mov
sahf
mov
jnp
sub
mov
scas
dec
outsl
in
pop
cmp
jmp
gs
jb
aad
mov
jecxz
shll
mov
mov
aaa
imul
add
or
clc
insl
or
add
stos
lea
adc
rorl
mov
andb
inc
test
imull
aam
call
imul
aaa
jg
pop
nop
xor
pop
and
inc
cs
adc
fmull
cmpsb
xchg
add
xchg
popf
scas
clc
xor
mov
mov
add
roll
incl
lods
dec
repz
addr16
and
add
jae
pusha
adc
mov
cmpsl
mov
stos
cld
pop
sub
negl
xchg
pop
push
les
jmp
enter
pop
aaa
std
xor
pop
dec
ds
call
pop
hlt
add
andl
leave
xor
popf
es
mov
pop
cmp
jge
fidivrl
jmp
xlat
or
dec
xchg
adc
fidivrs
scas
lds
inc
and
cmpsb
nop
jge
out
adc
mov
out
popa
outsb
ljmp
jmp
nop
pop
movsb
movb
pop
stos
in
stos
enter
jge
lods
insl
adc
out
test
fs
push
leave
dec
negl
std
inc
add
les
ret
xchg
insb
lods
adc
outsl
test
mov
lcall
mov
jae
frstor
jg
sbb
and
nop
pop
push
aas
xchg
and
test
mov
inc
sti
and
dec
mov
loope
in
and
adc
fidivs
mov
xchg
ja
cli
fdivrs
insb
lret
fcoms
loop
lea
jb
fildll
nop
push
rcrb
xchg
inc
or
jp
push
out
lret
rcrl
sub
push
cmp
cwtl
add
lock
inc
cmp
stos
jne
pop
fs
fwait
dec
dec
stos
ficomps
shrb
loopne
cmp
jle
test
inc
push
gs
mov
ss
pop
pop
sub
push
repz
jne
daa
add
std
push
ficompl
daa
dec
xchg
mov
mov
notb
adc
inc
mov
insl
gs
push
jo
dec
mov
out
pop
jmp
adc
or
add
and
cmpsl
setbe
lock
xchg
dec
fisubs
popa
sub
mov
mov
cli
cmp
jo
mov
dec
pop
dec
loop
push
std
xchg
and
dec
cwtl
loop
aad
xor
adc
jno
popw
in
in
adc
mov
out
mov
xchg
test
es
mov
rolb
arpl
lods
xor
insl
call
cmp
sub
in
aam
adc
addr16
into
mov
pop
cmp
int3
stc
call
cmpsb
dec
jge
popf
sub
push
mov
push
std
inc
rorb
dec
add
pop
gs
pop
inc
out
push
lret
xchg
outsl
mov
loopne
adc
mov
adc
inc
shll
dec
dec
cmp
out
rcrl
subl
nop
add
inc
les
cwtl
fldenv
imul
xor
cmp
inc
mov
in
push
inc
out
mov
fdivp
out
stos
movsb
pop
cli
jb
adc
xchg
add
adc
addl
mov
xlat
add
mov
nop
pop
pop
pop
jne
lret
sub
sub
insb
pop
add
jmp
aas
dec
mov
stc
fwait
fs
and
adcb
jb
aaa
add
sbb
jne
cmp
stc
repz
iret
cmp
inc
or
or
jb
mov
cmp
ja
lret
inc
int3
gs
cli
das
es
aam
push
pop
and
push
mov
pop
inc
inc
div
out
out
scas
inc
mov
adc
popf
jb
cs
xchg
jns
pop
call
mov
lods
arpl
pusha
clc
cmp
inc
pushf
push
ret
push
mov
lods
mov
outsb
rclb
ret
inc
iret
out
pop
sbb
jp
in
xchg
mov
inc
int
pusha
cs
pop
jl
push
xchg
mov
and
sub
cmp
xorl
sbb
fisubs
xchg
or
outsl
pop
sahf
fistl
hlt
fisttpll
into
push
dec
pop
mov
cmp
sbb
stos
jl
or
ds
aaa
adc
mov
pushf
stos
jp
mov
loope
inc
adc
jecxz
sub
push
rcr
xchg
adc
mov
mov
dec
in
mov
mov
cmpsl
je
cmp
jb
xor
ljmp
sub
rcrl
push
loop
shlb
es
sbb
add
push
jle
and
add
movsb
cmpsb
je
mov
test
jl
sbb
pop
sti
dec
xchg
adc
cmp
ja
or
imul
mov
je
clc
je
xchg
ds
push
popa
cs
out
xor
jae
mov
ds
xor
movsl
mov
jne
sbb
or
cmc
cmc
cmp
imul
adc
push
inc
lea
stos
jg
push
or
xor
ret
pop
xlat
jne
dec
sub
stc
pop
lcall
cld
clc
aaa
adc
shl
jae
fcompl
xchg
mov
mov
adc
cmp
dec
jle
cmp
jl
xor
test
lds
xorl
and
xor
cs
lcall
aaa
mov
out
push
push
inc
imul
jb
ret
cmc
fldenv
xor
pop
cwtl
popf
andl
mov
xchg
lea
mov
mov
aaa
movsb
adc
mov
xchg
scas
inc
and
fildl
inc
es
jp
imul
es
aad
xor
mov
lret
mov
bndldx
pop
mov
jle
inc
adc
scas
push
add
lock
or
jmp
out
jl
test
mov
and
pop
lds
adc
pop
out
sub
hlt
push
mov
inc
mov
sbb
movsl
push
cmpb
pop
jne
xchg
call
jle
push
aam
dec
test
add
fmul
icebp
dec
test
mov
push
or
rolb
mov
dec
push
jnp
js
arpl
cmpsl
push
lods
adc
cld
test
stos
inc
outsb
nop
es
iret
cltd
adc
sub
lahf
insb
jno
adc
imul
mov
push
das
into
mov
jno
add
fs
and
push
rol
jne
pop
cmp
in
out
sarb
roll
cmp
in
aam
xchg
lahf
jns
sbb
xlat
shll
shll
subl
xchg
cmp
stos
mov
xchg
mov
call
jmp
and
into
add
and
lret
pop
icebp
test
push
pop
jg
xchg
insb
lock
sti
fiadds
scas
cmpl
cmc
cwtl
fiadds
mov
or
mov
test
or
in
mov
popa
adc
pop
mov
mov
adc
cmp
lods
xor
xor
cmp
push
in
xchg
or
dec
iret
and
das
mov
fcmovnbe
js
enter
inc
lds
test
xchg
mov
imul
test
fcompl
mov
fbld
mov
jecxz
pop
cmpsl
and
dec
sub
stos
mov
sbbl
pop
jns
jp
and
inc
mov
cltd
inc
mov
jb
xor
jbe
push
les
jp
or
icebp
aam
repz
and
dec
fcoms
xor
mov
push
push
cmpsb
cld
xor
arpl
inc
stc
or
cmpsl
sub
daa
mov
in
cmc
sub
push
push
mov
cmp
ds
mov
mov
ljmp
icebp
mov
aaa
aad
lret
cmc
leave
aam
xchg
inc
fsub
pop
in
popa
insl
mov
fbstp
into
leave
ja
sbb
stos
out
shl
push
test
cmp
js
adc
or
fdivrp
outsb
mov
fnstcw
xor
call
lret
scas
dec
daa
jl
cmpsb
pop
jmp
stos
mov
sbb
jo
repnz
cmc
adc
int3
inc
call
sbb
push
and
loop
mov
mov
orl
data16
pop
adc
adcb
enter
push
dec
or
orl
mov
cmp
add
sub
jnp
loope,pt
mov
xor
lds
push
cltd
push
push
lea
lock
pop
xor
pop
cmc
xchg
sti
add
loopne
mov
xchg
inc
dec
cmpsb
subl
xor
cwtl
push
jle
rcrb
lret
aam
mov
dec
xlat
cltd
jne
push
stos
xor
sbb
or
and
orl
pop
push
jns
addr16
add
movsb
jle
fs
sub
mov
dec
bound
ja
outsb
outsb
add
adc
rcrb
and
loope
sub
popf
xchg
mov
push
sub
js
mov
sub
push
xchg
cmp
icebp
pop
and
push
inc
cmp
pop
aad
ret
popa
es
fmul
and
adc
jne
sbbl
and
or
xchg
loop
mov
cmp
xchg
sbb
push
imul
cmp
icebp
push
xchg
out
bnd
or
mov
insb
clc
dec
xlat
mov
or
in
mov
inc
or
adc
mov
fildl
xlat
push
inc
loopne
inc
div
xchg
cltd
mov
sub
push
push
rolb
cwtl
mov
adc
outsl
jnp
call
xlat
scas
in
je
icebp
fsubrp
lcall
cmp
lock
push
sub
pusha
orl
jne
and
inc
inc
and
stos
popa
cmpsb
push
fidivs
mov
pushf
imul
xchg
xchg
pop
hlt
movsb
add
lock
stos
fbstp
xor
lahf
clc
adc
and
cmpsb
arpl
out
fdivr
adc
add
fdivr
sbbl
jno
leave
xor
sti
mov
iret
ljmp
push
insb
push
push
in
xchg
movsl
cld
adc
sub
mulb
rcrl
xchg
pop
sub
pop
popf
leave
jne
push
insl
lret
add
and
pop
xchg
mov
inc
xchg
xchg
ss
mov
jmp
lods
or
in
jne
sbbl
clc
xlat
mov
adc
dec
out
dec
sbb
push
sbb
cmpsl
push
enter
scas
neg
mov
sarb
hlt
movsb
fdivl
fs
adc
shll
rclb
or
test
and
dec
sub
mov
cli
pop
jmp
out
mov
lds
dec
or
scas
imul
mov
cmpsb
mov
bound
scas
adc
orl
iret
rorl
cmpsb
out
add
jae
add
mov
mov
scas
ljmp
adc
and
dec
outsb
dec
mov
out
aas
sbb
inc
fs
lret
repnz
fstpt
adc
xor
or
adc
xor
or
and
jmp
mov
pop
lahf
aam
int
and
adc
pop
lods
jecxz
stos
aam
das
aam
cmp
lcall
es
or
iret
pushf
les
push
test
sti
jle
xorl
add
clc
mov
pushf
jp
hlt
js
push
sbb
adc
pop
pop
addb
loopne
into
cmpsl
icebp
xchg
add
mov
mov
cwtl
pop
inc
mov
aaa
add
or
push
movsl
sub
jmp
push
sub
cmp
ljmp
dec
fadds
lods
dec
das
push
sbb
add
icebp
xor
add
insl
inc
dec
hlt
jmp
das
jg
insb
pop
jp
adc
iret
rcrb
xchg
mov
clc
or
add
xchg
mov
popa
or
inc
jae
xchg
mov
sbb
fnstsw
mov
hlt
mov
push
les
jmp
add
lods
pop
sbbb
pop
and
adcl
ds
dec
sub
lock
rcrl
bound
addr16
mov
mov
inc
xor
popa
jae
mov
int3
dec
aam
test
add
or
mov
push
mov
push
aaa
test
pop
and
or
clc
push
and
mov
dec
lcall
repz
or
faddl
jno
adcb
repnz
push
test
cmpsb
mov
js
fisttps
xchg
jnp
ret
in
push
and
ja
pop
aaa
sub
fsubs
imul
insl
dec
mov
and
movsb
popa
popa
sbb
lea
and
dec
pop
xchg
lcall
push
adc
adc
jl
push
les
in
stc
cs
jnp
ljmp
aam
push
mov
xchg
imul
push
push
xorb
cmpl
mulb
das
shlb
loop
push
mov
cmp
and
jmp
mov
out
mov
and
std
les
xor
xchg
out
ja
adc
xchg
or
xor
orl
into
jmp
push
sub
or
lock
xlat
add
loopne
aam
mov
rcll
rolb
in
sti
int3
pop
arpl
cmpsb
clc
push
inc
inc
and
sbb
push
sub
pop
lods
or
in
clc
and
push
repnz
push
pushf
xchg
push
mov
xchg
push
cs
ror
add
insl
push
cmp
jne
jnp
loope
mov
adc
jae,pn
sbbl
or
lea
sbb
jb
cmp
cwtl
test
and
or
addb
inc
jb
ss
add
sub
dec
inc
imul
jb
into
push
or
cwtl
jmp
xor
xchg
int3
lcall
fwait
enter
and
mov
sbb
mov
aaa
sbb
or
mov
mov
scas
pop
adc
xlat
adc
jno
pushf
loop
enter
ret
movsl
mulb
loope
pop
mull
rorl
pop
push
popf
push
insb
sub
shlb
mov
popf
push
dec
imul
out
inc
xlat
pop
ret
ja
xchg
sub
adc
mov
outsl
mov
jecxz
int3
arpl
jne
push
sbb
pop
push
rolb
xchg
pop
dec
popa
ret
add
xchg
cli
and
mov
enter
in
xor
cmpb
fwait
cmpsb
jns
jge
cmc
and
sbb
xchg
outsl
pop
mov
dec
adc
xchg
pop
ljmp
inc
roll
ds
inc
mov
test
sbb
mov
cmp
mov
cmpsb
outsl
or
arpl
xchg
out
mov
int
int3
popa
js
int
pop
divb
call
fsubs
dec
sub
lds
dec
add
mov
ss
movsb
test
xchg
es
outsl
xchg
pop
push
movsl
add
jp
aam
bound
mov
push
mov
cmp
test
adcb
inc
add
sbb
adc
or
cmp
cmp
leave
fldenv
in
fcoms
aad
iret
inc
and
xor
sbb
dec
push
adc
ror
sarb
into
mov
or
jl
jp
test
push
push
rcrb
mov
ret
sub
cli
jb
or
out
mov
mov
idivb
popf
out
sub
fiadds
aad
out
out
cmpsl
cs
dec
push
mov
and
adc
std
adc
sub
jle
xchg
mov
push
out
test
mov
sbb
jp
mov
sahf
dec
frstor
fisubl
xchg
data16
jne
push
push
mov
mov
test
mov
lret
insb
adc
call
shrl
mov
push
imul
and
jle
mov
scas
dec
int3
fsubrl
loop
mov
outsl
pop
in
pop
movsb
and
ficoml
dec
sbb
or
mov
mov
insl
xchg
roll
les
movsl
pop
idivb
pop
mov
das
pop
stc
jae
mulb
mov
lcall
insl
es
icebp
movsb
aaa
sub
pop
sub
sbb
inc
xchg
in
cmp
subl
add
test
inc
adcb
mov
sub
adc
mov
das
cmp
cwtl
dec
inc
icebp
mov
cli
push
insb
mov
mov
sbb
push
cmpb
repz
lods
sub
je
cmp
inc
lret
sbb
fwait
insl
xchg
fimull
shrb
mov
fistl
xor
popa
jg
xor
sub
xchg
lods
mov
ljmp
or
lock
mov
pop
orb
inc
sub
cmp
aad
int
lods
mov
rolb
and
mov
push
fs
outsl
inc
xchg
mov
jne
stos
xor
ficomps
pop
or
add
inc
add
rcll
out
adc
movsb
xor
dec
xor
pop
dec
inc
aad
cmovo
xor
outsl
inc
das
stos
insb
sub
ss
lret
iret
testl
xor
dec
push
mov
idiv
in
shl
pop
mov
test
fcoms
mov
pop
push
lret
sti
jg
arpl
add
in
lcall
push
and
movsb
into
push
scas
sti
mov
jnp
shll
into
lcall
mov
xor
pop
xchg
sbb
mov
xor
hlt
cmpsl
push
xchg
add
jno
inc
cmpsl
inc
mov
outsl
xlat
xchg
push
or
pop
xchg
push
call
pop
sbb
in
nop
xor
dec
mov
mov
mov
cmp
xor
xor
or
sub
cmp
fwait
push
hlt
push
clc
xor
sbb
jno
out
mov
cmp
jmp
fdivl
icebp
test
das
jae
cld
mov
jg
into
push
sbb
jbe
mov
movsb
pop
pop
psraw
fiaddl
ss
xor
das
xchg
outsl
inc
icebp
stos
sub
mov
or
mov
arpl
loope,pt
repnz
or
mov
rolb
cmp
push
mov
pop
popa
out
cli
cltd
adc
imul
xchg
mov
pop
js
jno
xor
ds
xchg
mov
xor
scas
pop
add
jle
xor
mov
jmp
xlat
pop
enter
xchg
mov
adc
cwtl
stc
int
sbb
xchg
cmp
cmp
or
out
icebp
jae
aas
jecxz
fdivrl
repz
sahf
out
and
push
clc
lret
mov
adc
xchg
sub
inc
imul
and
mov
cmpsb
mov
dec
hlt
jno
cmp
sbb
or
or
mov
or
dec
bnd
stos
loopne
imul
notb
mov
int
mov
std
add
data16
mov
push
inc
ror
xor
jo
or
mov
imul
daa
test
pop
pop
cmpsb
jle
mov
outsb
mov
nop
lods
testl
lods
fwait
test
xchg
push
repz
repnz
sti
push
cli
push
stos
push
jl
jno
bound
push
inc
xlat
xor
pop
shrb
fwait
clc
mov
pushl
xchg
sbb
mov
dec
int3
cmp
popa
pop
mov
out
xchg
adc
cmp
je
pushw
adcl
cmp
lret
clc
push
xor
mov
ds
and
roll
push
mov
scas
xchg
dec
or
and
mov
mov
push
cli
mov
nop
inc
xor
imulb
daa
out
mov
sbb
clc
and
cmp
ds
xchg
test
hlt
jne
xor
inc
and
sub
inc
pop
xlat
sbb
test
es
idivb
push
out
call
sub
cmc
inc
mov
arpl
into
xchg
insl
loopne
cli
sub
out
sbb
jb
xchg
xor
mov
add
ds
mov
or
imul
mov
or
xor
insl
rorb
adc
add
ss
adc
mov
cmpb
mov
add
adc
jp
mov
adc
jg
int3
lret
push
push
mov
and
decb
xor
inc
and
js
out
jno
fldt
mov
hlt
insl
test
pop
xchg
push
dec
push
or
les
out
fs
icebp
inc
shr
mov
repnz
mov
out
fwait
aaa
dec
dec
mov
add
mov
adc
add
test
pop
dec
jo
dec
cmp
adc
sub
fimull
mov
pushf
push
mov
sbb
sbbb
cwtl
in
xorl
xor
push
mov
nop
sbb
das
jae
inc
adc
xchg
mov
mov
add
and
mov
cmc
imul
and
lahf
mov
push
mov
data16
sbb
inc
mov
jle
jle
lcall
pop
int
int3
pop
daa
data16
rolb
sub
int3
xor
mov
jno
xchg
mov
mov
imul
dec
fiadds
lds
inc
in
shlb
mov
jns
mov
je
cmc
sbb
addb
jb
or
insl
mov
lea
mov
mov
xor
pop
mov
iret
jp
mov
push
ror
sti
ret
lea
add
mov
data16
mov
adc
and
mov
adc
movsb
leave
sub
in
dec
jae
scas
xor
or
fisubrs
insb
lods
repnz
aam
pushf
mov
shr
fsubp
dec
or
adc
xor
in
cmpsl
and
fs
pop
xchg
arpl
mov
mov
cwtl
xchg
xor
and
jecxz
and
cmp
fldcw
fbld
jno
inc
aas
sbb
mov
fiadds
xchg
lahf
ja
neg
enter
test
adc
adc
cli
inc
shrb
inc
cmp
andl
incb
lods
movsl
mov
fldt
cmp
push
mov
dec
add
hlt
mov
push
pop
lcall
es
nop
inc
sub
repnz
insl
inc
mov
pop
dec
jecxz
xorl
xor
cmp
mov
xor
cmp
push
fimull
sarb
push
imul
pop
and
out
lds
pop
push
aaa
add
mov
add
sarl
sub
adc
lret
movsl
mov
jecxz
adc
jne
divps
inc
xchg
jecxz
test
adc
pusha
xorb
push
aaa
xor
into
dec
sbb
fstl
xchg
adc
ucomiss
loopne
jne
xchg
in
inc
lods
fcoml
addb
adc
mov
push
arpl
dec
int
lret
das
add
cmp
test
fsubrl
jmp
inc
mov
data16
out
cmp
ror
adc
inc
jne
pop
xor
test
and
daa
dec
inc
data16
dec
call
out
ret
ret
jnp
lret
jbe
flds
scas
sbb
aaa
js
push
outsb
push
aaa
xchg
outsl
cmp
jle
sarb
cmc
enter
push
mov
sbb
fcomps
sub
dec
or
and
mov
outsb
scas
data16
dec
and
sub
mov
cmp
out
scas
out
dec
sbb
cwtl
popf
add
cld
sub
and
dec
inc
dec
mov
fisttps
fmuls
xchg
aam
aaa
sub
insl
mov
lods
jp
icebp
xchg
cmpsb
aaa
inc
out
cmp
jbe
pop
mov
shlb
popf
ds
sbb
loopne
mov
shlb
xchg
lret
out
insb
xchg
pop
loopne
out
insb
ficoms
mov
lret
pop
push
fcom
push
or
scas
decb
popf
jo
and
pushf
mov
es
dec
mov
push
inc
fidivrs
les
loopew
icebp
andb
insl
std
mov
fstpt
clc
inc
lret
fiaddl
lahf
je
mov
jb
jp
and
xchg
mov
sub
xchg
ss
test
js
lods
mov
adc
lret
inc
mov
daa
cmp
loopne
lods
add
jo
mov
jae
inc
cmpsb
pushf
and
clc
and
pop
or
shl
int3
sbb
gs
push
mov
or
mov
add
pop
hlt
in
fildl
push
adc
adc
int
into
and
sub
fcoms
sub
rclb
push
mov
rcll
inc
loope
xchg
in
insl
xchg
inc
xchg
pop
xor
sbb
add
mov
push
pop
cmpsb
pop
out
mov
sbb
or
cld
cmp
push
out
dec
cmpsl
inc
rorb
cwtl
out
push
xor
lock
xlat
and
jb
push
jmp
cmp
js
loop
mov
cli
push
xchg
or
cmpsb
xchg
jmp
sub
mov
xor
mov
xor
mov
stos
jae
fisttpll
dec
cltd
stos
sti
addr16
jmp
push
bound
mov
loopne
test
sbb
cmpsl
jno
jg
jl
push
mov
gs
dec
lods
jns
jne
cld
add
insl
jb
sub
pop
ror
add
cmc
inc
std
push
adc
ret
adc
leave
xchg
js
sub
leave
pop
inc
lock
loope
xlat
and
pop
pop
jl
inc
jbe
mov
mov
xchg
push
cld
mov
or
xchg
insl
lods
add
fbstp
clc
mov
xlat
xlat
out
pop
jmp
fs
lock
pmaxsw
gs
mov
popa
mov
jecxz
sbb
leave
test
add
aaa
sub
pop
jae
dec
jp
sub
mov
es
cmp
cld
stos
add
sti
incl
fisttpl
sbb
xor
mov
mov
loopne
or
ret
stc
and
movsl
cmp
fistpl
fsubrs
mov
jge
mov
cmp
add
adc
mov
lock
jmp
daa
sub
mov
lods
aad
arpl
icebp
jbe
xor
lods
jbe
mov
jg
sub
push
loope
xchg
rol
cmp
dec
push
mov
insl
push
xchg
aam
sub
and
ret
xchg
in
mov
mov
jp
or
add
inc
outsb
insl
daa
or
mov
jbe
xchg
in
sub
dec
repnz
outsb
js
movsb
in
jp
scas
sbb
cmpsb
test
mov
jno
jae
aas
add
sub
push
lahf
and
sub
popf
divb
fsts
bound
in
in
push
jecxz
cmpb
out
popa
push
sbb
jnp
add
enter
addr16
mov
mov
or
mov
inc
mov
lds
test
xor
nop
aam
jae
sbb
mov
jge
shlb
and
sub
jecxz
add
adc
insb
or
jns
fsubl
lcall
gs
cld
inc
addb
aad
xlat
cwtl
push
pop
mov
inc
jb
or
cmpl
jmp
xchg
cmp
into
clc
add
jb
push
bound
ja
and
mov
cld
insb
aad
push
jae
mov
sbb
and
je
xlat
mov
dec
fwait
mov
pop
jl
cwtl
lock
stos
ret
and
sub
dec
mov
adc
mov
arpl
and
sahf
insl
pop
ljmp
repz
rcrl
jb
aam
push
dec
jecxz
call
add
fistpll
arpl
aad
sub
push
push
pop
inc
pusha
pop
push
fstps
ret
fidivl
inc
pop
addb
or
jp
push
sub
add
ficompl
pop
or
jne
aaa
inc
add
test
popa
or
std
movsb
xor
out
loop
stc
mov
in
mov
test
out
shll
dec
sbb
add
mov
lds
cmovle
mov
fsubr
jge
in
aam
xchg
sub
pop
xchg
jecxz
les
jne
or
loope
jae
inc
or
sub
pop
dec
pushf
fwait
mov
and
sub
jl
movsl
push
pop
adc
xchg
int
lods
push
mov
xchg
fwait
mov
mov
test
imul
shrl
aad
jbe
xor
dec
mov
cmpb
inc
mov
inc
movsl
outsl
int
arpl
data16
inc
ljmp
ds
sub
shll
xor
mov
arpl
mov
inc
arpl
decl
sbb
jo
jnp
cli
sbb
inc
push
incb
mov
adc
iret
xor
ss
jnp
cli
lret
dec
into
push
das
push
sbb
adc
lea
and
fstps
cmp
cli
xchg
jbe
push
out
lahf
xor
int3
add
xor
push
fcomps
pop
mov
inc
test
fsubrs
xchg
add
lods
loope
push
fwait
aam
sub
xchg
call
cli
loope
into
scas
jns
stos
popa
stos
or
mov
inc
dec
mov
out
adc
lea
jp
stos
xchg
add
xchg
je
in
cmpsb
push
lahf
xlat
ss
fcomi
orl
and
testl
daa
sub
rcl
sub
lods
jne
adc
sarl
daa
test
stos
add
fcmovnu
add
jns
scas
inc
cmp
inc
aaa
sub
jnp
cli
in
scas
jno
cmp
xlat
adc
sbb
xor
jmp
adc
arpl
dec
pop
test
xor
jbe
xchg
shll
pop
and
sbb
jl
fistpl
cmc
call
xchg
or
pop
add
sub
mov
jp
push
clc
std
inc
movsb
test
test
mov
inc
jp
inc
dec
test
cmpsb
nop
in
mov
and
mulb
fsubl
mov
fwait
push
in
popa
or
cmp
jno
push
push
sbb
je
jg
mov
mov
cs
jo
ffree
add
shll
lods
jae
push
cli
fwait
cmpsl
test
jbe
test
nop
fcmovbe
out
in
out
imul
lock
jae
pop
dec
ds
not
mov
out
mov
cmp
inc
or
into
ds
xchg
sub
loope
fisubs
mov
and
cld
mov
cmc
dec
xor
add
or
scas
inc
mov
mov
push
sahf
add
xchg
add
mov
jno
adc
outsb
imul
jo
es
add
lcall
outsb
and
adc
or
push
sbb
lcall
daa
push
mov
or
aam
sbb
sarb
outsb
dec
ja
loop
ret
sub
mov
add
mov
sub
je
or
mov
pop
jne
sub
aas
sub
call
ss
das
cmp
cmp
cmp
mov
mov
scas
xchg
dec
inc
lods
and
sahf
test
outsb
loop
sub
rcll
gs
lds
push
sahf
push
mov
dec
cmp
inc
jns
jae
xchg
dec
push
ja
push
mov
sbb
mov
mov
jmp
mov
lahf
mov
cmpl
or
lret
insb
push
cmp
adc
pop
lock
push
pop
in
mov
inc
mov
mov
xchg
push
mov
pop
ss
xchg
test
mov
js
mov
test
xchg
sbb
jl
lea
outsb
xor
xchg
lret
in
jb
jb
out
push
rcrl
aaa
add
outsl
fsubs
loop
cmp
ret
add
mov
pop
xor
mov
cmpsl
mov
push
xchg
test
testb
dec
push
add
mov
sbb
aas
mov
and
jno
std
out
lret
mov
lds
pop
push
leave
add
orl
and
std
sub
repnz
icebp
push
enter
adc
mov
into
mov
cld
cmp
xchg
add
and
jp
cli
pop
jo
call
enter
mov
repnz
jb
mov
out
iret
aas
mov
xor
jmp
dec
inc
scas
clc
xor
push
jge
xchg
pusha
in
rolb
xlat
call
xor
fstpl
or
mov
jmp
dec
lret
loopne
test
and
pop
mov
icebp
jbe
sarb
mov
call
loope
enter
inc
xorb
and
pop
adc
ss
mov
pop
mov
sbb
je
fsubrl
sub
push
xchg
repz
loopne
cmpsl
sub
cmpl
sbb
cmp
push
push
lcall
stos
sbb
inc
jp
aad
sub
pop
cltd
mov
loop
fstl
jae
sbbl
mov
and
outsl
sub
ds
sahf
sub
enter
push
icebp
in
mov
cmp
andb
movsl
inc
test
and
scas
fiadds
adc
test
mov
mov
mov
ds
out
push
and
call
sbb
ja
inc
dec
fsubrp
pop
out
pop
rclb
lods
jno
mov
mov
sarb
lret
xchg
fcoms
scas
mov
or
aaa
dec
gs
cmp
sbbl
mov
out
fadd
jne
stos
scas
js
gs
sahf
int3
leave
dec
arpl
pop
push
cs
sub
inc
jecxz
dec
push
stos
fsubrl
stos
xchg
insl
mov
popa
ret
pop
jae
andb
ret
es
pop
adc
lea
jno
fidivrl
xor
leave
pusha
mov
cmpb
mov
daa
shr
dec
pop
lret
imul
xlat
fisttpll
push
jbe
fcompp
add
dec
lret
in
adc
hlt
popa
sahf
pushl
mov
sub
xchg
ljmp
out
cmp
sti
out
xchg
pop
mov
sub
dec
mov
aaa
lea
mov
dec
out
sub
or
pushf
xchg
hlt
int
cmp
mov
sbb
ds
shll
push
ds
dec
loopne
arpl
movsb
dec
xchg
cmc
out
neg
loopne
out
mov
aas
push
mov
inc
lods
daa
iret
faddl
mov
rolb
adc
out
pusha
mov
sbb
jnp
test
pop
repnz
gs
shlb
pop
push
arpl
push
js
add
movsl
leave
pop
fdivl
push
cld
movsl
icebp
sbb
or
dec
cmpsl
jl
mov
sub
gs
mov
xchg
push
xchg
insl
into
jnp
lods
adc
int
push
mov
mov
cmp
add
fs
xchg
fildl
fisubs
sbbl
jge
push
orb
imul
fwait
popa
mov
adc
testl
adc
fstl
in
mov
pop
push
leave
shl
or
movntq
and
movsb
pop
mov
ret
insb
mov
out
movsl
pushf
dec
scas
xchg
cmp
adc
dec
mov
ljmp
iret
xor
shl
add
mov
pop
mov
or
lea
sub
lcall
pop
insl
xchg
mov
sub
inc
jno
mov
into
and
xor
mov
xor
sub
arpl
cmp
rcrb
ss
notl
dec
out
xchg
jmp
xlat
pop
mov
add
mov
xchg
push
or
xor
mov
int3
sub
jno
cmp
nop
inc
dec
sbb
in
pop
xor
xor
shrl
adc
andb
movsl
ret
sbb
jmp
cli
and
popa
xor
lret
fstpt
xchg
clc
cmp
pop
nop
ss
push
fs
mov
dec
aas
faddl
xchg
add
sbb
loopne
sbb
pushf
mov
mov
iret
mov
in
dec
imul
xchg
in
aad
pop
scas
shlb
push
inc
xchg
test
outsb
fmuls
dec
int
fucomi
xchg
and
mov
lret
sub
fstpl
sub
insl
mov
mul
jno
xchg
jo
fimull
mov
pusha
mov
jg
xchg
pushf
rclb
mov
push
push
or
mov
ret
popa
adc
test
inc
jb
mov
fcom
cli
cwtl
xor
push
sbb
int3
pop
int3
arpl
out
hlt
movsl
sub
dec
bnd
mov
mov
lea
adc
sbb
lahf
in
sbb
xor
mov
inc
dec
hlt
leave
mov
repnz
mov
push
mov
mov
sbb
inc
xchg
cltd
in
jg
xchg
sub
into
sbb
dec
stc
jmp
dec
cmp
ret
mov
movsl
push
mov
xor
pop
mov
loopne,pt
leave
sub
test
test
scas
dec
rorl
sar
sbb
sub
adcb
xor
mov
xchg
shl
mov
cmc
add
out
inc
ret
cld
cmc
dec
sbb
fwait
push
pop
mov
push
adc
or
shrb
dec
xor
pop
sbb
jno
mov
dec
dec
inc
jp
lods
nop
filds
in
ja
popf
test
sbbb
mov
sub
mov
xor
daa
out
add
insb
mov
xchg
fadd
push
jg
movsl
pmuludq
cwtl
call
repnz
or
cld
ror
and
and
or
mov
inc
mov
out
arpl
dec
lock
into
cmpsl
inc
sbb
adc
mov
jnp
test
data16
ror
pop
cwtl
sub
fwait
cltd
gs
inc
test
mov
fidivrs
mov
rcr
insb
leave
test
les
scas
pushf
pushf
gs
adc
loope
fwait
push
xor
mov
movsl
es
loop
pop
dec
shrb
mov
repnz
les
mov
pop
push
push
lock
mov
adc
xchg
loopne
cld
pop
push
scas
pop
xchg
mov
mov
mov
jp
adc
mov
push
mov
arpl
and
pop
or
add
sti
movsl
cmpsl
dec
push
out
push
mov
fs
ss
and
stos
test
pop
hlt
sbb
cmp
movsb
ret
push
xor
stos
cmp
cwtl
push
sbb
bound
pop
faddl
push
jle
mov
cmp
lock
jae
dec
ds
jbe
mov
imul
divb
scas
sahf
xchg
mov
mov
sarl
jns
adc
data16
mov
pop
fnstenv
stc
lods
push
enter
imul
cmp
adc
add
dec
icebp
pop
test
add
push
test
cmpsb
out
lret
popf
and
and
jns
push
sbb
dec
dec
jne
adc
jae
push
mov
xchg
xlat
aad
mov
je
jno
cmp
cld
dec
adc
icebp
cmp
add
fidivs
mov
mov
test
repz
xchg
sahf
ret
sub
mov
iret
leave
mov
jae
into
jecxz
or
imul
push
xor
jl
or
cmc
lock
jae
ja
cmpsb
outsb
rclb
dec
sub
stos
push
jae
mov
mov
daa
xorl
sbb
add
arpl
fnstcw
sbb
sub
aad
mov
sbb
fs
push
sub
scas
adc
aas
push
arpl
insb
lret
insl
jge
add
mov
sub
dec
test
mov
mov
and
add
push
stos
pop
sarb
mov
pop
mov
enter
add
pop
sub
sbb
mov
and
push
mov
loopne
jle
lods
mov
cmp
mov
mov
adc
out
das
ja
push
pop
pop
loopne
xlat
add
dec
inc
sub
xchg
jbe
mov
or
pusha
int
mov
pusha
inc
leave
push
sub
rorb
cwtl
rolb
pop
pop
sub
call
loop
jle
hlt
ffree
test
ss
pop
es
enter
hlt
ret
push
mov
push
mov
aas
mov
dec
jae
mov
sub
in
mov
into
nop
cmpsb
scas
xchg
adc
push
xchg
xchg
mov
inc
mov
sub
or
inc
fbstp
sti
test
stos
fwait
push
or
pop
xorb
mov
cmc
and
inc
je
aad
mov
pop
push
xor
xchg
jg
dec
leave
and
repnz
xchg
mov
or
adc
sahf
push
and
dec
popf
pop
xchg
sbb
cmc
mov
lds
push
dec
or
xchg
mov
mov
jge
pop
repz
hlt
or
sub
cmp
mov
xchg
mov
mov
sub
ud2
frstor
xor
mov
add
test
and
jl
sbb
cmpsb
push
je
lods
subb
ds
inc
gs
push
leave
mov
pop
cmp
in
mov
movsl
sbb
pushf
icebp
fsts
push
pop
and
sahf
dec
or
mulw
adc
adc
pop
cmovp
sahf
cs
jbe
mov
jo
cmp
loopne
push
stos
sbb
push
andl
nop
add
popf
std
push
fcomps
mov
into
out
xchg
or
xor
pop
shl
mov
sbb
mov
cmc
inc
push
aas
push
nop
jp
ret
pop
adc
fsubrs
push
push
dec
sbb
mov
fildll
cmpsl
out
sub
mov
sub
push
xchg
xor
add
jne
inc
pop
fidivrl
dec
inc
jnp
fs
cmp
push
jge
outsl
in
addl
sub
cmc
dec
fidivs
inc
sub
push
stos
push
pushf
outsb
in
cli
and
negb
fbstp
adc
aad
divb
mov
es
lcall
mov
xor
adc
loop
xchg
fcoms
push
and
cmc
cmp
adc
cmpsb
xor
rorb
fwait
lock
clc
mov
xor
and
jb
sbb
cmp
and
fsub
add
in
push
pop
push
mov
jno
dec
or
pop
sarb
imul
push
test
add
pushf
imull
das
test
mov
mov
in
lcall
cmpsl
rorl
data16
xor
mov
dec
jecxz
pop
stc
cmc
popf
js
call
outsb
insb
cmpsl
sub
les
adc
fstps
ljmp
outsb
pop
imul
cs
setnp
mov
dec
mov
lretw
xchg
ret
int
shlb
and
daa
mov
cmp
inc
ret
pusha
jno
jmp
and
cwtl
pop
push
test
or
fiaddl
fidivl
mov
daa
dec
int3
xlat
sbb
sbb
sbb
imul
inc
inc
rolb
and
inc
cmpsl
mov
inc
adc
fdivrl
popf
in
dec
inc
sub
jecxz
or
leave
mov
inc
rorb
mov
std
dec
not
sar
in
jb
daa
add
pop
pusha
in
lock
mov
jmp
stos
adc
lods
in
enter
or
jp
popf
xchg
rolb
outsb
push
roll
jle
addr16
push
cwtl
lods
inc
jae
pushf
add
jecxz
mov
push
xor
jnp
add
sub
inc
add
xor
or
adc
out
and
and
fisttpl
push
mov
cmp
js
inc
xchg
xchg
mov
ja
add
cmp
mov
xchg
mov
mov
loope
mov
imul
mov
fwait
and
jmp
xor
inc
les
and
shll
loope
push
and
sbb
test
sbb
popf
jo
sub
mov
lcall
jle
andl
repz
movsl
add
es
xchg
imulb
mov
data16
rcrl
pop
jnp
mov
mov
jp
mov
cld
pop
rcrb
lahf
pop
aaa
dec
mov
es
in
cmc
fwait
and
sti
inc
mov
movsl
and
mov
xlat
pop
pop
lret
hlt
fnstcw
sub
std
adc
mov
pushl
adcl
imul
pop
orb
xchg
and
cli
push
dec
xor
imul
xchg
or
in
adc
mov
mov
jmp
nop
loope
or
test
sbb
inc
mov
dec
clc
push
scas
nop
push
cmp
js
add
pop
rcr
sbb
mov
int3
loope
sub
rorb
mov
push
push
ss
push
cmc
fsubs
jle
xchg
mov
add
loope
dec
add
inc
sub
imul
dec
ss
inc
cmp
in
xor
pop
lcall
lods
sbb
inc
loopne
xchg
adc
shll
lcall
pop
lcall
add
out
aas
and
sub
enter
sub
mov
or
lea
mov
rorb
ud1
aad
imulb
push
sahf
mov
pop
in
js
xchg
scas
gs
inc
cmovle
mov
shl
cmp
ja
and
repz
xor
and
lret
cltd
or
push
or
ds
setbe
inc
insl
mov
dec
stos
int
aas
rcrb
scas
sub
and
in
mov
or
ss
dec
fimull
mov
arpl
enter
pop
mov
sbb
sar
rorl
jg
addl
mov
mov
inc
mov
popa
mov
add
icebp
sbb
mov
inc
push
adc
push
test
sbb
xor
call
jge
call
bound
dec
dec
push
pop
inc
lods
bound
jmp
sbb
add
pop
cmpb
inc
fisttps
popa
lods
leave
sahf
sub
xor
add
inc
sub
inc
aaa
mov
loopne
int
sbb
ret
jmp
cs
jmp
push
adc
push
daa
popa
pop
in
out
sub
lret
mov
adc
test
es
ds
cmp
stc
das
test
aad
adc
cwtl
dec
xor
pop
or
xchg
mov
lods
in
mov
dec
imul
cmc
rolb
cli
mov
out
js
or
sbb
fisttpl
movsl
in
rcrl
dec
ss
sarl
loopne
loop
sti
pop
push
adc
mov
and
pop
inc
push
push
sahf
cli
adc
pushaw
sahf
int
fldenv
pop
jnp,pt
jbe
rorb
daa
xor
adc
cmp
xor
outsl
ret
das
adc
push
je
pop
xor
imull
add
les
fmull
mov
flds
push
mov
iret
rcl
scas
inc
movsl
test
fidivl
mov
adc
mov
push
mov
les
lahf
or
cmp
shll
cmc
mov
adcb
jae
dec
cmp
fwait
aam
in
sbb
dec
pusha
das
imul
xor
sub
ds
mov
pop
jbe
mov
xor
xchg
imul
cltd
call
je
mov
cmpsb
xlat
mov
outsl
popw
xchg
cltd
xchg
mov
add
stos
adc
pop
add
sub
sbb
mov
mov
lods
jp
sbb
ret
jno
out
aad
clc
rcr
inc
imul
xchg
and
pop
cwtl
mov
lret
test
jle
jg
out
lods
aam
fidivrs
xchg
adcb
xchg
stc
sub
push
aaa
test
push
ljmp
stc
push
inc
jmp
ss
xchg
pop
lds
enter
stos
cmpsb
xchg
add
xchg
adc
push
inc
andb
subb
stos
lock
ss
outsl
stc
iret
push
cmpsb
pusha
jge
xor
lock
add
loopne
leave
add
push
pop
dec
push
xchg
jl
jbe
loope
mov
cmp
or
pop
pop
repz
scas
test
sbb
js
jecxz
push
fidivrs
push
leave
add
xor
mov
push
pop
push
push
stos
or
add
sub
lcall
cmp
mov
cmp
out
mov
scas
aam
aas
jbe
lock
aaa
xor
aaa
fwait
sbb
mov
fadds
and
adc
sbb
fmull
cmc
pop
push
sub
xchg
cltd
jae
mov
mov
jg
addr16
cmp
ss
add
push
lds
jp
pusha
das
mov
adc
sbb
adc
sbb
pop
sbb
add
lea
clc
imul
dec
dec
push
and
lods
push
ljmp
outsl
in
push
sub
xchg
mov
imul
push
fst
push
andb
push
sbb
and
pushf
add
cmc
or
hlt
xor
mov
aaa
shll
popf
ficoms
sti
mov
outsb
mov
sub
enter
pop
sub
jne
imul
cmpsb
popf
add
add
sti
gs
mov
adc
xchg
push
in
xchg
add
push
xorb
roll
jb
or
daa
cmp
orl
xor
insl
jge
popf
dec
out
test
jmp
int3
aam
in
cwtl
inc
mov
push
aas
daa
in
xor
int
xor
das
cvttps2pi
sar
xor
rol
cld
jmp
push
mov
pop
sub
pop
jg
jge
sub
inc
mov
iret
lock
inc
aam
roll
leave
jl
lcall
mov
and
xchg
cltd
pop
sub
out
cmpsl
in
pop
jne
cli
imul
out
ds
add
pop
mov
cmc
stos
test
cltd
xor
jnp
shrl
and
push
adc
test
or
sbb
clc
cmpsl
icebp
or
push
pop
test
out
out
add
bound
fwait
mov
or
icebp
sub
dec
push
pop
xorl
or
or
xor
dec
or
in
mov
inc
nop
xor
mov
cmp
push
and
dec
int
xor
addr16
adc
sbb
lds
mov
dec
or
xchg
aaa
icebp
cmp
xor
arpl
push
xor
xor
and
mov
sbb
pop
xor
xchg
adc
mov
repnz
pop
pop
jns
test
ficomps
dec
adcl
fst
shr
mov
shll
stos
test
mov
pop
mov
in
mov
fdivs
sbb
subb
out
repnz
lock
movsb
sbb
dec
inc
pop
js
stos
add
and
push
cmp
jae
cmp
outsl
dec
mov
jmp
jle
shr
fnstenv
xor
lea
mov
es
fildl
in
movl
lock
push
int
cmp
cmp
ret
push
leave
dec
hlt
mov
in
movl
cli
sub
int3
lahf
aaa
adc
push
xchg
xchg
pop
adcb
jnp
mov
jecxz
repz
int
push
push
ficomps
and
loop
or
mov
jns
sub
jecxz
dec
cmp
xor
imul
adc
leave
fwait
aad
imul
insb
dec
test
dec
pop
std
mov
sarb
fs
int3
scas
inc
andb
popf
jg
inc
add
sarb
dec
idivl
lahf
gs
int
scas
xchg
ret
imul
push
test
xor
dec
fimull
mov
pop
cmp
mov
push
lret
jnp
test
aad
out
shrb
ret
std
clc
jne
inc
sahf
loopne
scas
mov
jl
fdivrs
inc
sub
fst
xchg
fildll
cmp
mov
push
add
push
lods
add
std
dec
cli
mov
add
push
jp
stos
push
push
dec
mov
cltd
xchg
pop
js
xor
mov
cmp
xor
push
pop
push
dec
lcall
mov
push
cmp
and
out
ret
xor
and
jecxz
inc
push
add
or
mov
popf
lret
push
js
or
and
mulb
movsl
jl
jle
rorl
clc
cmc
sarl
stc
out
mov
cmpsl
outsl
rcr
daa
jmp
add
dec
rorl
xchg
sub
dec
enter
into
fs
in
in
xlat
shrb
cmp
dec
xchg
dec
xchg
inc
push
adc
addr16
aaa
xchg
daa
stc
xchg
daa
cwtl
or
mov
out
jp
in
stc
jne
out
out
hlt
mov
pop
jecxz
jb
insb
pop
lea
cmp
out
and
sbb
jno
pop
push
fmuls
push
pop
sbb
leave
add
sub
jg
mov
push
orb
fndisi(8087
jmp
nop
mov
lods
mov
xor
jmp
stos
mov
in
sahf
xchg
or
jns
xchg
arpl
mov
cmp
test
sub
fwait
mov
outsl
jg
test
pop
andl
adc
rcl
inc
popf
and
jmp
pushf
testl
xchg
push
jb
and
clc
sbb
inc
int
loopne
mov
add
movsl
cmpsb
dec
imul
jmp
scas
or
sbb
ljmp
cmp
sub
cmc
mov
pop
push
add
pop
outsb
mov
out
cmp
aaa
mov
es
sbb
inc
cmp
mov
and
mov
dec
jg
mov
xchg
jge
out
mov
or
in
iret
sbb
xlat
xchg
add
out
shl
mov
ret
push
mov
cmp
insb
jno
daa
and
lock
xor
xor
stos
pop
xor
pop
loope
adc
out
out
mov
fcoms
scas
ss
xchg
inc
movsl
aas
mov
and
jae
adc
hlt
mov
das
ss
out
dec
stc
cmp
sbb
cs
mov
sbb
ds
mov
add
mov
pop
jl
dec
sub
mov
sti
inc
adcb
setnp
enter
mov
cs
aaa
idivb
mov
call
pop
lods
xchg
lods
jb
jb
dec
mov
fsubl
xchg
in
push
out
push
inc
mov
push
xchg
and
leave
lock
add
dec
or
mov
lods
jae
inc
addr16
or
push
xor
and
xchg
jo
fldt
pop
stos
jbe
cmp
lcall
js
imul
sub
and
sub
gs
arpl
mov
jns
mov
mov
call
sbb
adc
repz
shrb
sahf
stos
scas
ret
pop
cmpsb
lds
mov
outsl
push
insl
out
push
xor
outsl
xchg
dec
rol
mov
mov
add
aam
push
dec
or
testb
fbstp
push
rorb
int3
mov
xchg
mov
cwtl
cmp
push
outsl
testl
fidivs
lsl
sub
mov
popf
or
sets
or
movsb
cmp
mov
push
push
sbb
mov
addr16
imul
bound
mov
inc
sbb
les
push
fldl
pop
sbb
adc
sbb
pop
sbb
cs
mov
sub
jge
fisttps
repz
dec
test
ficoms
cmpsl
or
adc
rep
add
fwait
mov
sbb
cltd
push
lret
repz
or
jnp
jl
xchg
inc
push
mov
fsubrp
aad
jno
hlt
shrb
sbb
and
call
jmp
add
filds
fmul
imul
les
dec
rcr
cli
lldt
mov
jbe
shrb
lahf
nop
or
dec
push
leave
and
sub
sub
pop
movsl
je
icebp
aaa
int3
pusha
push
jbe
addr16
dec
xchg
popf
pop
xchg
push
leave
sbb
fcoms
pop
pushl
iret
push
or
loopne
push
aam
cmc
push
inc
into
pop
sub
loopne
cli
rolb
inc
pop
pop
and
dec
outsl
ret
and
mov
repz
cmpsb
das
es
lret
stos
sub
gs
xor
or
sub
mov
xchg
clc
ja
das
out
std
outsb
jns
sub
jnp
rorl
pop
xchg
mov
aas
jg
das
pop
sub
enter
rcrl
pop
add
xchg
mov
pop
cmp
fiaddl
mov
sub
fistpll
outsb
ja
sbb
loopne
ficoml
and
dec
jnp
inc
dec
std
cwtl
push
mov
les
push
addr16
push
ret
and
sbb
arpl
mov
mov
or
bound
stc
jbe
in
sub
push
pop
cld
loopne
rdtsc
sbb
mov
dec
cmp
pop
cltd
sub
fisubl
stos
jl
inc
xchg
jns
or
fstl
mov
add
dec
int3
and
push
push
cwtl
jg
cmp
loop
insl
push
pop
lret
dec
movsl
xlat
test
cmp
into
pop
ss
xchg
mov
xor
mov
js
dec
int3
fdivrp
imul
jg
gs
int
repnz
mov
push
pop
je
das
pop
jnp
lret
add
clc
jae
push
push
repz
ds
int
mov
insl
sub
into
pop
shrl
and
lcall
js
jne
xchg
mov
pop
cltd
fists
repz
sub
sbb
cwtl
loope
mov
leave
rcrl
adc
adc
lock
mov
leave
mov
inc
arpl
cmpsb
mov
or
fdivrs
int
push
jmp
stos
mov
cmp
cmp
inc
stos
out
jne
scas
and
inc
fwait
xchg
mov
aaa
in
mov
bound
push
pusha
repnz
fldcw
mov
pop
scas
sti
ret
subl
sti
aam
dec
and
push
orl
pop
rolb
lds
cmpsl
dec
xlat
test
ss
das
iret
xor
dec
mov
xchg
pop
pop
loop
lea
pop
push
in
nop
push
jbe
mov
in
repz
lock
mov
sbb
popf
jo
cmp
xor
fdivrl
mov
notl
loop
out
pop
xchg
fucomip
stc
movsl
dec
sub
jo
push
out
loopne,pn
cld
mov
pop
mov
jg
inc
adc
mov
cmpsl
stos
lret
pop
xor
sbb
inc
hlt
div
jo
or
jge
sbb
xchg
pop
mov
jecxz
outsb
inc
mov
cmp
and
mov
dec
test
sbb
cld
cltd
test
adc
insl
mov
std
sahf
mov
push
mov
xlat
and
in
cld
mov
repnz
mov
add
mov
pop
fisttpll
jae
pop
iret
sbb
je
fcmovbe
sti
cli
pop
std
mov
mov
cs
pop
test
loopnew
adc
mov
hlt
les
out
jg
insl
push
pop
cli
mov
sbbl
movsb
cmp
push
dec
jnp
mov
mull
popa
add
xlat
lcall
jmp
js
add
loop
iret
or
cmpsl
push
cmp
jg
in
add
adc
fcomi
mov
test
and
push
inc
push
or
out
sbb
loop
add
push
out
adc
into
jnp
cmp
lds
addr16
cli
inc
mov
xorb
xlat
cmp
pop
negl
ljmp
mov
stos
xchg
mov
cmp
lds
dec
and
mov
out
jo
or
inc
jns
xorb
dec
imul
in
popa
bound
icebp
and
mov
or
sbb
dec
mov
mov
mov
xorb
dec
andl
loopne
hlt
or
add
cli
cmpsb
repnz
and
push
sarb
iret
in
stos
fimuls
sub
test
mov
lds
or
sub
loop
repnz
aas
sbb
mov
iret
enter
xchg
pushf
mov
hlt
xchg
mov
lods
mov
ret
cwtl
sub
dec
pop
lods
lret
dec
aaa
iret
push
mov
sbb
xchg
mov
inc
es
sarb
mov
push
popf
scas
push
jmp
orb
jp
loope
repnz
pop
push
jle
or
call
xchg
scas
adc
rcl
mov
aas
mov
pop
stos
movsl
mov
xchg
mov
or
js
push
jbe
gs
loopne
dec
pushf
aad
push
sub
mov
movsb
jge
shll
pop
jno
shlb
lretw
hlt
insb
xchg
daa
das
push
enter
push
inc
or
xorl
imul
dec
dec
or
dec
mov
aas
cwtl
push
sub
insb
fsubrl
cltd
and
pop
loop
std
jno
arpl
mov
ja
push
mov
rorl
mull
mov
mov
jge
jno
inc
mov
loopne
lds
dec
xchg
imul
mov
sub
notl
out
xor
in
std
xchg
pushf
sub
adc
push
in
sbb
adc
scas
faddl
jg
jp
push
rcrl
push
je
scas
ljmp
cmp
bound
mov
les
xor
fcoml
lods
arpl
adc
mov
cs
ss
xor
add
jge
mov
cmovle
jecxz
stc
sub
add
sbb
jmp
dec
mov
movsb
daa
cmp
ret
loopne
jne
fnstsw
out
leave
fidivl
pop
rcll
xchg
dec
mov
das
push
inc
data16
adc
or
push
in
gs
cs
inc
mov
ljmp
add
cmp
pop
movsl
ds
orb
add
mov
lods
push
ja
rclb
sub
mov
das
jne
inc
ja
icebp
push
cmp
and
call
jg
add
push
inc
ja
and
add
test
and
xchg
test
fcomps
ret
adc
ret
in
jl
lret
test
mov
movsl
sub
add
pop
cltd
je
addr16
out
lods
adc
mov
int3
movsl
into
mov
and
xchg
mov
dec
fnstsw
pop
mov
adc
shlb
inc
mov
xchg
ret
xchg
pop
jecxz
lret
cs
mulb
cltd
outsb
push
push
adc
repz
cmc
bound
fadds
cmp
cltd
sbb
push
iret
js
xchg
lea
aad
or
or
sbb
and
fs
jl
jl
xor
repnz
ss
add
cmpsl
cld
shll
sbb
mov
sub
mov
aaa
push
dec
xchg
imul
nop
sti
rolb
sub
pop
test
jbe
pop
mov
sbbb
aam
adc
push
hlt
pop
xchg
hlt
sub
cmp
add
add
push
jp
and
out
lahf
mov
pop
add
jno
xor
mulb
ss
cld
xor
scas
add
ja
mov
or
pop
pop
mov
inc
pop
xlat
mov
lds
xchg
xchg
cmp
fcmovnb
mov
adc
inc
xchg
stc
aad
mov
sbb
add
xor
jbe
ret
mov
mull
inc
jns
testl
insb
ret
and
repnz
fdivs
mov
js
cmpsb
mov
cwtl
into
lds
inc
dec
mov
xchg
sbb
cmp
jne
pop
add
out
push
jno
adc
inc
mov
les
sar
cmp
insl
jae
lret
inc
push
nop
mov
mov
xchg
outsl
jmp
push
stc
adc
pop
adc
pop
and
lea
int
cmpsl
mov
adc
pop
push
dec
outsl
lock
and
push
or
add
jae
repz
pop
pop
into
sbb
adc
daa
push
pop
outsl
out
repz
in
scas
insb
stc
mov
xlat
inc
dec
fildl
jmp
xor
cmpsl
iret
lock
sti
mov
movsl
pop
mov
fmuls
in
push
outsl
adcl
int3
pop
adc
cmp
inc
inc
popf
fdivs
mov
es
push
adc
sbb
mov
xor
xor
inc
aam
cmp
lahf
mov
mov
imul
add
insb
sbb
mov
scas
push
rcr
cmc
jo
push
out
dec
aaa
pop
xor
dec
add
out
push
lods
xlat
mov
xchg
iret
lret
mov
rol
into
adcl
pop
fs
mov
es
cmp
jl
push
sub
lea
cmp
pop
inc
in
leave
jge
mov
xor
sahf
das
push
push
js
sbb
inc
mov
push
aad
les
sub
mov
xchg
sbb
cld
testb
scas
ds
ret
xchg
jns
out
inc
push
ss
xchg
jge
jae
xlat
arpl
mov
mov
xchg
cmp
dec
and
xchg
adc
cmp
push
xlat
orl
mov
push
mov
cmpb
xor
je
test
sub
movsb
movl
add
push
jmp
adc
stos
mov
cmc
divl
push
sbb
std
imul
test
imul
push
hlt
or
jae
ss
dec
adc
daa
dec
mov
aam
out
test
imul
leave
sbb
push
push
cmpsl
push
jno
add
mov
das
test
ss
sbb
sahf
and
cs
xor
push
cmpsb
xor
es
stos
sbb
sbb
jno
cmp
cmp
xor
sub
xchg
mov
dec
mov
xchg
test
jmp
daa
fnstsw
out
lods
xchg
lret
pop
mov
xor
inc
xlat
xchg
nop
mov
sub
sbb
push
jg
aad
addr16
in
pop
mov
adc
or
inc
clc
cmp
arpl
sub
pop
or
push
rolb
add
daa
std
push
or
lock
out
or
movsb
mov
dec
clc
cmp
push
negb
mov
xchg
sbb
mov
jno
pop
cwtl
cmpsb
stos
aad
cmp
adc
mov
in
incb
pop
xor
lods
jae
test
xor
adc
inc
sbbl
add
mov
pop
and
inc
dec
jae
dec
adc
or
xor
or
jle
add
cld
shrl
xchg
imul
lahf
mov
and
xor
test
andb
inc
and
shr
push
ret
rcr
lock
mov
enter
jno
ret
push
cmp
movsl
push
and
xchg
ret
aad
popf
sbbb
mov
fwait
mov
fisubrs
cmp
push
fsub
mov
cmc
es
push
xchg
lret
pop
and
into
insl
sbb
mov
loope
stos
dec
loop
xor
dec
and
popf
push
loope
stos
mov
shlb
ds
dec
in
pop
pop
pop
mov
ja
cltd
fsubrp
lahf
test
xchg
cmp
pop
lds
sbb
pop
iret
sub
gs
test
js
jmp
cmp
test
je
insb
arpl
mov
cli
adcl
inc
mov
sbb
jge
das
or
ret
sbb
dec
xchg
and
and
mov
mov
jg
ffree
lods
sbb
or
push
push
mov
cmp
dec
fwait
xorb
xor
sub
jecxz
loope
dec
sti
subl
lock
add
leave
push
adc
in
imul
mov
test
cmp
mov
inc
fs
push
stos
mov
notb
mov
sahf
dec
add
inc
adc
sbb
and
cmpsl
sub
addr16
add
xchg
jne
adc
cmp
les
mov
or
push
mov
out
pop
sarl
sbb
aas
inc
or
js
push
add
adc
mov
shrb
cmpsb
ss
rorl
mov
push
cs
std
inc
hlt
mov
pop
outsl
or
push
xchg
out
jle
jl
jne
in
repnz
pusha
insl
call
into
imul
sub
std
std
adc
jle
xchg
dec
into
out
dec
fists
fsubl
pop
mov
pop
pop
jnp
iret
xchg
je
in
cmp
adc
jns
cwtl
pop
pop
sbb
jb
sbb
stos
push
mov
lods
adc
loope
cmp
ret
stc
out
inc
sbb
and
enter
lods
ja
rclb
mov
sbb
adc
hlt
dec
dec
xor
mov
push
test
iret
mov
lock
push
inc
mov
stc
adc
bound
gs
push
icebp
orl
and
dec
push
and
sub
inc
mov
fadds
movsl
push
out
xor
push
xchg
mov
push
lcall
mov
dec
cld
add
nop
and
adc
out
scas
or
and
cmpsb
dec
push
xorl
jno
mov
add
and
rolb
outsb
roll
jl
xchg
cltd
repnz
mov
fstpl
cltd
aas
stc
ljmp
sbb
ret
jo
push
sub
dec
mov
mov
sbb
cmp
aad
add
repz
jle
xchg
orb
push
jge
mov
lahf
or
cs
stos
push
movsl
and
out
or
out
or
and
pop
pop
cmpsb
jp
daa
xchg
pop
scas
mov
mov
out
pop
and
cmpb
cmp
ret
cmp
cmc
or
mov
cmpsl
insl
shrb
mov
fwait
aas
xor
or
or
sbb
pop
push
jle
ret
jo
xchg
aaa
cli
in
lret
outsl
mov
push
lock
lret
imul
jbe
jb
sbb
ja
or
das
jae
jecxz
testl
ja
cld
inc
sti
mov
sbb
roll
not
cmp
dec
ss
mov
add
pop
sahf
jbe
push
pushf
aas
arpl
xlat
int
shlb
fstpt
enter
data16
push
cwtl
push
add
sti
daa
lea
inc
scas
dec
outsb
and
lea
mov
ds
idivl
fidivl
xor
xchg
lahf
xchg
jp
es
xchg
and
sub
and
call
push
popf
fsubrs
cmp
sbb
call
pusha
jge
out
lret
inc
xchg
sar
aas
je
out
jne
test
inc
repnz
shlb
mov
ret
sahf
xchg
pop
fbld
jle
jb
aad
and
test
cmpsb
stos
add
loope
out
andl
jbe
push
repnz
mov
xchg
repnz
jb
cmp
negl
out
add
mov
cmpsb
scas
iret
push
cmpsb
sub
rol
ss
lds
cmc
bound
test
scas
aam
and
xor
mov
popf
scas
stos
pop
jae
xor
mov
xlat
add
mov
pusha
loopne
xlat
mov
shll
or
add
and
add
inc
test
out
xor
xchg
or
adc
iret
lret
out
fwait
orl
out
aam
adc
pop
imul
sbb
mov
and
xchg
pop
ror
mov
mov
mov
jge
push
pop
out
push
adcb
pushf
push
movsb
aas
inc
mov
mov
sarb
sahf
bound
ss
and
xor
xchg
push
jb
adc
xchg
add
lods
repz
jb
inc
popf
or
mov
pop
and
xchg
lock
jo
push
test
jns
dec
sarb
mov
fnstcw
jne
sub
mov
dec
dec
sub
out
sub
dec
out
push
xchg
loopne
pop
push
rcl
mov
loop
daa
cmc
mov
loope
nop
lcall
aas
rorl
mov
icebp
inc
les
xlat
push
xchg
add
adc
cs
fidivrs
cmp
dec
mov
loopne
xor
and
roll
cld
sub
es
inc
inc
mov
dec
sub
cmp
stc
mov
aaa
jne
hlt
xchg
mov
add
aam
jb
into
and
cmp
addb
add
je
ret
sbb
aas
adc
ret
ret
inc
jb
mov
dec
in
xchg
rclb
sbb
aad
jae
mov
mov
sub
mov
pusha
wrmsr
jns
mov
push
clc
subb
xchg
sub
push
mov
scas
mov
shl
stc
cmp
add
mov
push
inc
in
cwtl
or
test
pop
stc
enter
add
insl
sub
lcall
test
stos
jp
push
fisubl
jb
mov
mov
sbb
pop
mov
hlt
mov
stc
sti
lcall
xlat
fcos
or
xchg
sbb
xchg
jbe
xchg
pop
push
out
sbbl
insb
mov
add
lahf
hlt
arpl
sub
sbb
cs
das
mov
push
arpl
sbb
das
dec
mov
popa
jbe
xchg
lds
negb
inc
rorb
shlb
add
xchg
push
pop
pop
int3
ficoms
mov
fcoml
xchg
push
lret
dec
jl
ficompl
xchg
sub
jecxz
fidivrl
repz
mov
sub
xchg
xchg
je
fidivs
add
fcomp
sbb
enter
adc
mov
pop
pop
dec
sub
inc
test
sbb
adc
rcrb
aam
lcall
iret
fdivl
imul
mov
fwait
into
mov
inc
icebp
dec
mov
xchg
rorb
mov
push
mov
repz
mov
push
cmp
cmp
mov
xchg
iret
xchg
or
jmp
pop
mov
lahf
sub
hlt
loope
fwait
mov
mov
mov
mov
lret
lock
fwait
xchg
mov
in
aam
adc
mov
je
jnp
inc
lea
inc
stc
pop
or
xchg
mov
push
xor
and
mov
incl
dec
cmp
arpl
iret
ret
inc
nop
push
pop
jmp
push
xor
into
adc
pop
jo
dec
cmpsl
pop
dec
cmp
xorl
pop
lcall
pop
daa
fadds
jge
jp
fwait
dec
push
scas
cmc
les
mov
inc
outsl
mov
ja
loope
aas
add
or
mov
lods
rol
in
or
push
in
sub
adc
lds
dec
pop
adc
ljmp
xchg
inc
scas
scas
stc
ss
loope
and
push
xor
xchg
xchg
out
call
imul
loopne
int
aam
ror
push
imul
jp
push
lods
push
bound
addr16
adc
mov
sbb
mov
in
xchg
in
cs
das
push
int3
add
scas
stos
xor
xor
pop
in
and
cmp
mov
jle
jae
cmpsl
test
movsb
cwtl
mov
sbb
fstl
or
push
mov
fnstsw
xchg
lahf
dec
fadd
das
aas
daa
xor
les
or
loopne
and
xacquire
inc
repnz
jnp
mov
jecxz
push
sub
ljmp
xchg
popf
dec
sahf
jbe
add
ss
jl
push
nop
cmc
push
test
mov
sub
mov
inc
adc
push
or
mov
cwtl
xchg
vmwrite
and
das
jnp
frstpm(287
pop
sbb
cltd
push
xchg
mov
movsb
or
frstor
cmp
mov
out
jecxz
insl
mov
arpl
cmpsl
idivb
rcl
gs
hlt
inc
int3
inc
cmp
pop
popf
mov
jo
add
mov
sahf
ret
scas
dec
mov
push
push
mov
dec
mov
inc
pop
pop
mov
adc
data16
push
out
adc
or
xor
imul
mov
sbb
mov
fiadds
mov
popa
sbb
adc
add
and
sub
mov
fstp
inc
pop
and
enter
dec
cs
rep
sub
xor
and
pop
nop
pushf
fwait
scas
pop
mov
cmp
cmpsl
jae
push
sbb
andl
mov
xor
ficoms
xchg
jle
push
jo
in
sub
push
rorl
xor
lcall
lret
jmp
movsb
pop
mov
lret
pop
sub
and
lds
push
stc
cmp
loopne
lcall
inc
shrl
mov
xchg
add
adc
popf
stos
aam
fcoml
mov
push
je
push
add
ret
std
aas
cmp
dec
inc
aas
sarl
dec
pushf
or
mov
std
in
push
sbb
adc
mov
je
lahf
pop
shrb
jne
rclb
jmp
stos
loope
lock
and
and
inc
mov
roll
frstor
mov
fisttpll
xchg
jne
pop
adc
or
pop
sub
jae
adc
stos
mov
push
std
insl
add
jo
or
adc
and
in
sub
stos
insl
and
rcrl
jecxz
testb
pop
push
rcr
call
fcompl
mov
ret
push
ret
add
xchg
push
xor
dec
pop
ret
roll
xchg
bnd
fisubl
mov
sub
clc
orb
mov
std
fisttpl
xor
and
xor
xor
xchg
xlat
lods
or
jmp
or
mov
adc
jo
mov
inc
jne
add
movsb
pop
mov
cltd
or
inc
cld
mov
cmp
and
xor
out
in
sbb
add
test
pushf
js
fiadds
mov
dec
rcrb
popa
jmp
push
jg
mov
imul
orl
or
xchg
jecxz
add
mov
xorb
bound
loop
and
sahf
push
hlt
and
push
cmp
aad
and
sbb
je
mov
dec
push
popf
decb
sbb
dec
stos
in
xchg
out
adc
xchg
stc
mov
xchg
pop
test
xchg
push
imul
loop
mov
ss
std
dec
lods
out
data16
and
roll
inc
push
cmc
lods
pop
out
cld
ss
xchg
arpl
nop
in
arpl
es
dec
mov
test
cmp
data16
push
pop
mov
pop
mov
mull
loopne
pop
sub
out
in
dec
push
inc
adcb
les
test
dec
es
and
into
pop
rcrb
popa
ss
push
scas
fbld
xlat
pop
data16
pop
loope
mov
outsl
es
insl
pop
sbb
call
mov
cmc
mov
adc
pusha
inc
int
out
mov
ljmp
add
dec
push
cmpl
shll
xchg
pop
xchg
jle
out
sub
fnstcw
stos
scas
mov
notl
jns
insb
push
cmp
add
out
mov
lods
sub
data16
adc
mov
rcrb
xor
pop
lret
mov
es
xchg
pop
imul
imul
dec
push
ss
call
dec
jl
les
mov
scas
mov
add
push
stos
scas
mov
out
mov
in
mov
bnd
cmp
jo
sub
repz
xchg
dec
mov
sbb
lahf
into
push
test
cli
lods
push
nop
and
into
inc
ret
aad
push
sbb
push
mov
add
pop
call
xorb
sub
xchg
cli
imul
fisttpll
sarl
insl
cmovb
cltd
jmp
cmp
outsl
or
push
pop
sbb
mov
in
lret
scas
jle
rorb
mov
inc
divl
or
fs
xchg
add
sub
pop
ljmp
lcall
rcr
cmpsl
mov
jne
sbb
leave
pushf
inc
pop
sbb
inc
mov
jae
pusha
dec
xor
lea
dec
or
or
ret
hlt
adc
xchg
adc
and
push
jmp
xchg
sbb
mov
add
mov
outsl
xchg
scas
fcomps
lods
mov
jns
fcoml
push
inc
fwait
mov
imul
xchg
clc
fs
xor
jo
ss
inc
mov
push
push
js
test
xchg
inc
mov
jno
xor
inc
aas
enter
ficompl
cli
cmp
cmp
adc
insb
mov
je
cmc
inc
mov
sbb
sub
mov
push
add
sub
sti
int3
es
popa
lods
stos
sbb
inc
cmpsl
mov
add
xchg
roll
xchg
shrb
nop
push
or
bound
sbb
inc
ret
xchg
les
es
subb
negb
dec
inc
andb
daa
xchg
mov
push
sbb
add
or
pop
add
pop
mov
imul
lock
pop
cmp
sbb
stc
lea
mov
or
cmc
mov
adc
stos
fsubrs
lea
pop
pusha
mov
outsb
push
and
cwtl
nop
mov
enter
dec
lcall
rorb
cmc
mov
xor
add
rclb
sbb
pop
fiaddl
inc
xlat
js
inc
rcll
loopne
inc
push
out
inc
rcrl
sub
mov
addr16
sarb
xchg
call
ljmp
in
push
or
in
xchg
cmpsl
sarb
xor
or
cwtl
rcl
jo
jmp
movsl
addr16
inc
adc
ds
jge
iret
dec
lock
jmp
in
xchg
call
push
pusha
imul
sub
dec
ret
loop
sahf
mov
and
stos
cmpsb
in
push
cmp
aad
pop
sbb
push
lret
int
mov
cmp
mov
ds
or
lcall
sbb
xor
push
int
fstpl
shl
fimuls
or
shl
outsb
inc
cld
mov
mov
inc
popa
rcl
cmp
dec
pop
inc
mov
test
pop
dec
mov
mov
push
lods
pop
mov
sbb
xor
scas
push
dec
insb
aad
inc
jo
sbb
inc
ljmp
inc
mov
mov
xchg
jl
shl
and
or
jae
xchg
mov
je
inc
aam
int3
jae
mov
mov
out
enter
lock
pop
dec
mov
dec
or
mov
lcall
dec
bound
enter
mov
ljmp
mov
frstor
adc
cmc
icebp
and
jl
jge
mov
icebp
mov
mov
clc
addr16
jle
add
sub
mov
cmp
dec
pop
inc
ja
dec
movsl
lcall
fnsave
ljmp
dec
cli
push
cltd
inc
rorl
inc
xor
cmc
outsl
insl
cs
lcall
aam
mov
dec
js
and
aad
ret
lds
mov
sub
jl
jb
mov
gs
jns
pop
jb,pt
repnz
insb
or
pop
pop
jle
cmp
in
leave
or
jp
and
mov
in
dec
imul
insb
sti
rcr
jle
notl
jne
inc
dec
sub
mov
push
cmp
pushf
icebp
cmp
pop
inc
sbb
inc
mov
mov
lahf
std
fisubrs
sub
iret
sub
test
incb
adc
jp
repz
push
jmp
cmp
pusha
in
mov
jmp
push
pop
dec
ljmp
push
dec
fisubrs
sbb
je
pop
cmpsb
sbb
xor
cmp
and
mov
pusha
cmp
jecxz
in
ret
mov
arpl
xor
in
mov
and
out
stc
push
outsb
outsb
in
mov
adc
sbb
into
out
pop
push
inc
movsl
cs
hlt
loop
inc
mov
jbe
sbb
das
shrl
ret
pop
sbb
lea
clc
in
enter
cli
rol
test
push
ret
xchg
sbb
xor
fstpt
pusha
xchg
xor
pop
mov
dec
add
cwtl
int
filds
pop
xchg
decb
push
or
pop
sub
int
loop
aam
lret
daa
jns
test
xor
nop
test
mov
cld
pusha
dec
fistpll
enter
cmp
test
les
imul
or
xchg
xor
orb
fisubrl
xchg
rcrl
fisttpl
cmc
xchg
and
test
mov
and
insl
and
movsl
hlt
dec
add
int
mov
push
shlb
dec
push
fisttps
adc
clc
or
xchg
pusha
jns
bound
and
es
ds
mov
lahf
push
sbbb
mov
ret
adc
shlb
shlb
mov
xor
iret
outsb
scas
clc
adc
mov
adc
sarb
nop
sbb
out
pop
shrb
rcll
push
pusha
insl
aam
inc
repnz
mov
scas
push
into
lea
fsubr
push
jp
pop
sbb
push
shrl
ds
das
mov
push
mov
inc
xchg
clc
pop
loope
lahf
shll
xor
pop
push
pop
mov
shr
icebp
sbb
rclb
mov
and
insl
add
push
mov
psrlw
ljmp
add
push
cmp
sub
test
xor
mov
lret
idivl
ss
scas
loop
inc
out
adc
mov
mov
into
iret
call
outsl
xchg
lea
adc
incl
lds
jmp
xchg
pop
das
ret
lods
movsl
test
addr16
ljmp
fisubl
mov
outsl
loopne
in
out
jp
out
cmp
gs
push
pop
lock
push
cld
and
sahf
addr16
push
jle
hlt
cld
jmp
pop
ja
jnp
cmpsl
xor
push
push
mov
mov
pushf
lcall
add
mov
xor
cmp
xchg
sarl
gs
insb
lods
mov
push
xor
inc
and
test
or
pop
or
fwait
imul
aaa
xchg
ja
movswl
out
ja
rcrb
and
addr16
shr
and
in
leave
xchg
sub
and
movsb
xchg
hlt
movsl
sbb
xor
sti
std
and
lds
enter
dec
mov
or
icebp
lods
jmp
xchg
loope
shrb
mov
test
cltd
xor
js
pop
xor
and
fldt
lods
test
mov
and
cmp
pop
hlt
add
jo
add
fbld
idiv
jp
mov
hlt
out
es
mov
pop
addl
jo
repnz
push
lret
outsb
jbe
mov
add
scas
out
mov
mov
pop
xchg
jp
push
mov
imul
out
cmpsl
xchg
dec
inc
and
scas
add
arpl
sub
inc
sbb
mov
aaa
sub
xchg
inc
jl
or
ret
leave
jmp
test
pop
or
xor
in
nop
mov
xchg
jle
fistps
lds
and
push
ljmp
adc
xor
ret
out
adc
fcomi
mov
push
cmp
std
movsb
in
arpl
bswap
test
shlb
xor
and
mov
dec
xchg
in
fistps
mov
push
into
sahf
call
daa
fistpll
add
shll
addr16
aad
cltd
fdivrs
mov
out
and
jp
into
jge
stos
lahf
test
cmp
adc
cmp
daa
add
adc
xchg
popf
xorb
pop
xor
xchg
outsl
inc
fdivrs
mov
iret
mov
scas
pmaxub
lods
adc
adc
cmp
imul
cmp
mov
adc
mov
icebp
jle
xor
notb
push
pop
js
sbb
outsl
js
inc
inc
push
mov
add
jle
jbe
push
mov
stos
inc
outsl
add
dec
repnz
push
dec
jmp
mov
sbb
cmp
fdivl
pushf
sti
roll
or
xor
jb
inc
cmp
xlat
in
xchg
fst
mov
lcall
imul
pop
pop
rep
sahf
xor
xor
xchg
popf
sub
cmc
std
ret
pop
sub
dec
pop
lods
inc
aad
mov
pop
jne
aam
out
sub
insb
lock
sbb
imul
fstpt
mov
pop
lods
aam
adc
cmpsl
imull
mov
ljmp
pop
add
popf
and
orl
sub
ret
sti
clc
push
inc
mov
jns
mov
lret
outsl
imul
pop
dec
mov
ret
mov
inc
inc
outsb
push
pop
adc
xchg
mov
jae
pop
adc
insb
call
mov
mov
xor
add
nop
into
fidivrs
jnp
movb
mov
das
adc
sub
push
jmp
push
imul
jmp
push
jge
cli
mov
add
repnz
jb
repz
add
xchg
fs
push
pop
add
fldl2e
loopne
rcll
add
push
insb
jne
and
mov
xchg
jo
out
and
ss
stc
sbb
mov
ret
fidivrs
cmp
lret
sahf
mov
jae
jno
loop
aaa
jno
data16
add
mov
pop
cwtl
push
adc
dec
mov
jmp
sbb
xchg
push
or
testl
pop
jbe
sti
add
ficoms
xor
xchg
cmp
jae
adc
dec
adc
jno
lret
or
mov
mov
push
in
loope
cltd
ja,pn
dec
sub
adc
test
daa
mov
and
or
out
dec
push
stos
arpl
mov
cld
add
and
sub
jno
into
stc
adc
jno
xchg
bound
and
mov
xor
leave
sub
dec
push
and
or
shrb
out
inc
jmp
mov
pop
mov
movsl
cmp
in
jp
adc
jo
and
addr16
mull
aas
bound
cltd
xchg
push
loopne
sbb
and
pop
pusha
out
add
pushf
xor
dec
xchg
mov
push
ret
jae
cmp
mov
loop
aad
xchg
fisttpll
rcl
negl
or
pop
and
test
inc
cmp
adc
scas
popa
add
push
mov
mov
push
adc
add
test
sarb
pop
mov
add
pusha
xor
bnd
xchg
xor
js
in
adc
sub
inc
sbb
mov
or
test
push
daa
push
adc
lds
sahf
add
mov
lods
fldenv
in
lret
and
mov
stc
push
mov
std
data16
jbe
mov
add
add
pop
out
xor
in
mov
dec
xchg
ja
mov
sbb
clc
je
jb
lahf
mov
mov
sbb
dec
into
push
pop
pop
add
sbb
push
ret
popf
mov
add
xlat
or
scas
push
sbb
lock
je
lock
ret
or
sahf
movsb
insl
leave
iret
mov
sub
addr16
sub
xchg
dec
mov
test
sahf
jo
jno
pop
lcall
xor
out
mov
dec
out
sub
sbbb
ds
nop
pop
lods
cmp
inc
lock
jne
sbb
pop
add
pop
rclb
cmpsb
insb
aas
in
in
rclb
pusha
pop
jnp
movsb
cmp
push
jnp
pop
out
iret
mov
stos
adc
aas
addr16
inc
cmp
sub
mov
imul
lock
mov
xor
push
dec
inc
push
arpl
fldl
cmp
jle
mov
adc
sbbb
mov
push
mov
push
ds
out
sub
in
xor
decl
nop
test
jb
movsb
in
jb
push
lods
pop
mov
sbb
sbb
test
inc
lods
or
gs
xchg
clc
inc
dec
gs
repz
mov
or
fimuls
mov
pop
jg
xor
xor
lea
pop
adc
cmp
and
loope
add
fdivp
jle
jle
in
je
cli
jo
ljmp
sub
je
out
dec
cwtl
or
int
stos
or
std
bound
xchg
xlat
lock
adc
scas
mov
jne
gs
mov
xchg
sbb
cs
and
lret
and
lret
xchg
jl
fsubrs
jnp
xor
xor
arpl
popa
dec
in
sbb
loope
hlt
ret
and
cmp
cmovno
orb
jg
sbb
inc
rcrl
xor
or
jmp
sar
cld
lret
in
sub
xchg
sbb
enter
sbb
pop
lret
sub
je
push
cs
in
imul
sub
stos
cmp
mov
jnp
pop
inc
cwtl
fdivp
mov
pop
decb
or
push
dec
jg
out
andl
mov
push
add
call
and
aas
xor
in
dec
enter
sub
push
je
out
cmp
icebp
pop
loopne
clc
scas
cmc
mov
pop
jae
mov
ss
jnp
out
loop
divl
call
pusha
sbb
addl
xor
insb
xor
xchg
cmp
xchg
and
clc
scas
mov
test
fistpl
xchg
icebp
fidivrs
lahf
mov
mov
cmpsb
icebp
or
inc
movsb
mov
int3
adc
xor
outsl
cld
xlat
shl
lea
sub
addr16
jbe
adc
sar
ljmp
mov
jbe
rcll
push
mov
xor
xor
cwtl
pop
add
cmpsl
cmp
xor
das
add
mov
out
mov
fs
in
loop
xchg
xchg
lcall
dec
add
xchg
sub
movsl
pop
shlb
mov
jae
data16
in
out
and
int3
mov
or
xchg
mov
es
push
pop
xor
out
jmp
and
fsubrl
js
jnp
and
ret
jmp
insl
fildll
inc
cmp
sub
scas
xlat
insb
jnp
mov
inc
mov
stc
push
popf
lods
lahf
int
cwtl
mov
repnz
mov
jge
dec
inc
or
mov
andl
xor
repz
pop
cmpsl
jne
imul
adc
fsubs
mov
imul
xor
lea
mov
inc
imul
sahf
cmp
jmp
pop
xchg
xchg
push
out
dec
cs
sub
cmpb
cld
into
fsubrs
fcom
aas
into
sub
jb
xchg
pop
sub
loop
ja
stc
pop
jecxz
pop
test
sti
inc
push
xchg
mov
pushf
or
insl
cmc
adc
shrb
fucomi
jl
std
js
aas
je
jl
aam
ja
inc
int3
sbb
mov
push
mov
xor
lods
rorl
pusha
loope
and
add
stos
jb
cltd
mov
xchg
push
add
sbb
push
xor
sub
lret
inc
xor
cmp
pop
adc
mov
bound
mov
or
arpl
icebp
idivl
movsb
or
popa
scas
out
fmull
cmp
fwait
arpl
loop
in
rol
data16
mov
cmpsl
nop
cltd
add
jb
aas
xor
ret
sahf
push
mov
xchg
add
setns
add
push
cmp
sbb
test
adc
mov
pop
cmp
movsb
movsb
adc
loope
push
push
imul
lods
loopne
xchg
dec
jne
pop
hlt
lds
inc
sti
cmp
iret
mov
cmp
jp
sbb
dec
jnp
sub
jne
and
outsl
add
push
pop
inc
jb
push
stos
rcll
xchg
xchg
fidivs
andb
mov
cld
and
jmp
inc
xor
adc
and
hlt
pop
cmp
in
push
push
xchg
imul
or
dec
xor
popa
daa
mov
or
sahf
sbb
outsl
push
pop
cmp
mov
test
js
mov
mov
aaa
jmp
inc
jecxz
rcrb
mov
mov
mov
rol
jmp
mov
cmp
test
scas
xchg
cmp
in
nop
test
ret
in
dec
jae
jns
mov
xor
push
adc
insl
inc
frstor
shrl
shlb
pop
adc
jae
add
cli
imul
cli
aaa
xchg
cld
sub
dec
fs
movzwl
jecxz
lods
lods
push
jb
ret
mov
popa
cltd
dec
push
cmpsb
mov
push
and
lods
adc
and
push
sbbb
jb
fstps
mov
mov
test
xchg
sbb
ret
das
xchg
jae
mov
cld
fmull
cmc
mulb
stos
icebp
jg
xor
inc
into
push
cmp
sub
sub
outsl
xor
xlat
fsub
push
dec
mov
jle
mov
jp
ret
mov
clc
fnstenv
subb
test
and
call
inc
mov
mov
es
stos
gs
sbb
mov
inc
mov
and
cmp
inc
pop
loopne
or
shrb
mov
clc
dec
adc
es
xchg
stos
lds
sar
cmc
pusha
push
pop
mov
movsl
cwtl
inc
scas
pushl
lods
xchg
cmp
fildl
adc
inc
xor
pop
and
leave
adc
rolb
mov
dec
or
mov
add
xor
xor
push
or
out
mov
ret
rol
mov
sbb
lahf
cmp
pop
cmp
sahf
fnstenv
lret
lods
push
popf
xchg
jb
orl
out
adc
jae
add
je
lods
imul
sub
cwtl
clc
cmc
jo
inc
mov
and
mov
sub
js
or
pop
inc
loopne
out
lret
push
ret
mov
jg
repz
dec
outsb
js
mov
lods
test
mov
insb
pop
ret
adc
adc
cs
std
in
mov
testb
mov
push
pop
dec
and
aam
mov
sbb
mov
sub
adc
ljmp
dec
dec
dec
mov
cmp
js
jns
ret
jge
out
xchg
xchg
pop
fidivl
sub
dec
jmp
sbb
xor
mov
lahf
add
xchg
xchg
mov
mov
add
rorl
push
stos
fadd
mov
mov
je
outsb
jge
cmpsb
insb
jl
das
out
adc
jge
inc
pop
ja
pop
pop
cli
sub
pop
add
sub
imull
cmp
inc
jle
mov
cmp
dec
xchg
std
jmp
pop
repz
push
shrb
inc
cltd
pusha
mov
sahf
negl
xor
lods
mov
and
aam
dec
mov
xchg
jmp
shr
repz
leave
fucomp
push
out
push
pop
stos
xchg
add
in
nop
loopne
xchg
popa
mov
and
cmpsb
ss
jecxz
dec
push
and
mov
rol
shr
nop
clc
lock
ficomps
dec
sbb
mov
mov
xbegin
enter
jae
fcmovu
sbb
rorl
pusha
cltd
add
test
mov
fdivrp
pop
pop
push
lret
xor
fdivp
xchg
out
sar
popa
repnz
or
fsubl
xlat
jl
inc
push
mov
out
out
or
cmp
mov
data16
push
dec
cmc
test
outsb
mov
and
loopne
ss
daa
pop
xor
or
repz
jecxz
push
mov
mov
out
push
test
adc
pop
and
sbb
outsb
xchg
xchg
push
dec
push
push
sub
push
lock
jecxz
sbb
xor
dec
cmc
ds
xor
jmp
or
popa
outsb
jmp
sub
sbb
faddp
out
js
aad
mov
stc
xchg
divb
cwtl
rorl
and
out
pop
stos
rolb
and
push
push
stc
rclb
adc
shrb
loope
jmp
daa
xor
sub
mov
xor
enter
call
dec
fistl
ret
ss
out
jl
or
cmc
inc
xorl
push
pushfw
sub
mov
jmp
mov
cld
aas
aam
out
imul
mov
xchg
pop
push
adc
cltd
lods
out
mov
pusha
pop
dec
jnp
mov
and
sahf
inc
cmp
and
leave
mov
cmp
lret
xchg
into
call
outsb
mov
pushf
adc
fstl
xor
jge
popf
into
dec
vmovlpd
enter
rcl
and
or
sub
aaa
cmc
sub
cld
xchg
aad
sbb
mulb
xor
pushf
shlb
push
mov
cld
scas
into
in
add
mov
repnz
xchg
es
mov
pop
test
push
dec
shlb
or
adc
incl
add
or
and
sbb
lcall
push
sbb
inc
dec
push
mov
xchg
add
testb
sbb
imul
jno
jp
popl
orb
push
les
mov
push
add
dec
xor
mov
push
inc
sbb
mov
xor
and
jae
shl
movsb
cmp
inc
push
push
test
cltd
outsl
xchg
test
fbld
aaa
sbb
xlat
pop
jbe
lock
jns
cmpsl
mov
fistl
pop
cwtl
xchg
cli
push
cltd
stos
mov
jae
jl
sbb
mov
test
fistpll
aad
jb
cmp
loopne
inc
icebp
sbb
mov
cld
fistl
lock
pop
pop
cmpb
lock
jp
aam
pushf
testl
inc
shlb
xor
popa
clc
push
lcall
push
adc
das
in
lret
lahf
sbb
lock
aad
jp
add
ss
dec
jae
push
sub
aam
ficoml
insl
xor
rcl
sub
xchg
sbb
sub
push
das
fnstcw
cmp
stos
mov
push
sub
mov
addb
es
xchg
or
mov
imul
jg
ss
movsl
leave
fs
pop
jmp
add
rcr
inc
imul
inc
jp
ret
or
rol
cs
push
sarb
cmp
call
jnp
sarl
xor
or
scas
andl
and
sbb
out
mov
dec
iret
cwtl
andl
movsl
xor
sub
mov
mov
mov
arpl
in
inc
xor
cmpsl
jge
cpuid
bound
repz
xchg
pushl
sub
stos
add
inc
inc
push
inc
in
jnp
insl
cli
jle
ret
adc
les
iret
outsb
jmp
or
or
inc
mov
mov
push
sbb
jo
movb
adc
xor
add
dec
add
roll
push
addr16
add
leave
adc
test
dec
add
jno
pop
sbb
lcall
fildl
cmpsb
xchg
cmp
aad
fs
sub
pushf
stos
dec
aaa
pusha
pop
inc
subl
xor
inc
pop
daa
shlb
imul
dec
ss
pop
arpl
adc
jg
xor
mov
cmp
daa
inc
lahf
loope
mov
inc
shlb
pop
arpl
add
dec
ret
cmp
repnz
xor
imul
mov
ret
lea
or
push
cmp
adc
mov
push
imul
fs
xorb
pop
nop
adc
jno
mov
addr16
and
test
dec
xor
daa
movsb
ds
fcomi
scas
call
jmp
mov
dec
insl
rcl
lahf
push
pusha
ds
cs
scas
mov
sub
das
es
mov
gs
xchg
cmp
out
clc
mov
rcrb
pop
xor
insb
lahf
fsubrs
push
clc
into
sub
mov
lcall
mov
inc
aas
daa
lcall
dec
jae
inc
mov
cmp
imul
mov
dec
jnp
cmpsl
stc
mulb
add
xchg
rorl
jne
mov
pop
push
mov
into
mov
sbb
jle
sbb
and
in
fstl
pop
pop
or
push
hlt
mov
sbb
stos
cmpsl
jb
xor
test
xor
sbb
leave
aaa
mov
jns
adc
push
adcl
pop
adc
push
sbb
or
push
mov
add
and
jne
adc
jns
ret
imul
negb
cmpsb
adc
sub
imul
xchg
jg
dec
push
je
fcomps
pop
into
incb
and
das
int
sub
scas
aam
push
push
xlat
out
loop
jmp
pop
subb
xchg
jg
aam
scas
jmp
adc
mov
sub
xlat
les
or
testb
or
lds
out
movswl
xor
lahf
xchg
imul
fildl
data16
outsl
add
dec
mov
leave
icebp
pop
jmp
jb
jp
repnz
dec
pop
outsl
or
fidivl
fcoms
movsb
cmpsl
fs
out
cmp
test
popf
add
adc
xchg
in
pop
movsl
jnp
fstps
add
cmp
push
sahf
fidivrl
mov
daa
cmpsl
outsb
xor
frstor
addr16
bound
scas
repnz
jnp
dec
cmp
xchg
lcall
and
jmp
jmp
enter
ds
ret
or
daa
mov
aas
test
push
lret
sbb
call
mov
jmp
xor
loope
lret
jo
dec
clc
cli
lds
jl
jnp
jb
std
fsubrl
hlt
outsb
dec
into
mov
test
std
add
es
mov
mov
pop
loopne
rorb
sub
pushf
sbb
leave
pop
jecxz
pop
lods
popf
nop
dec
push
jecxz
scas
imul
adc
jbe
lods
pop
in
jne
cmp
mov
push
dec
jnp
cmp
adc
imul
xor
inc
adc
clc
clc
inc
or
lds
pop
pop
clc
cli
loop
daa
push
mov
movsb
inc
pop
popf
push
sbb
daa
mov
sbb
xadd
pop
std
jnp
in
aam
lds
add
les
dec
ds
push
insb
add
add
inc
rcrl
loop
test
in
pop
mov
stc
call
and
dec
cmc
inc
test
je
mov
out
shl
popf
scas
xchg
push
jae
gs
pop
frstor
xor
test
jmp
lcall
icebp
add
scas
repz
divb
jno
pop
and
loope
pushf
push
popa
jnp
pop
je
add
sbb
adc
icebp
add
xchg
xor
negl
or
negl
fsubrs
push
outsl
adc
mov
mov
ja
pop
cmp
fwait
mov
inc
dec
jecxz
add
fwait
push
push
rorl
inc
mov
stos
aam
loope
mov
je
loopne
mov
sbbl
dec
lods
imul
xchg
popf
stos
sti
cmp
sub
xor
jle
dec
loop
daa
mov
cld
jo
arpl
sub
cmp
and
xchg
and
pop
cmp
data16
mov
cmp
es
add
and
fimuls
aas
inc
pop
inc
adc
in
add
into
ja
iret
in
push
inc
outsb
push
xchg
ret
int
sub
jp
cld
jne
xor
push
test
pushf
push
inc
cmp
mov
add
mul
sub
mov
xchg
jbe
nop
mov
mov
push
loopne
movsb
jno
or
mov
push
sub
mov
in
into
push
repz
fldpi
mov
jbe
jl
pop
or
popl
cmp
mov
movsb
adc
and
inc
xlat
push
sbb
jnp
les
notl
insb
mov
enter
mov
adc
hlt
nop
pusha
mov
dec
sbb
insb
mov
push
sbb
leave
adc
dec
fimuls
fbld
push
pop
mov
jge
adc
enter
xchg
sub
push
data16
dec
ret
push
dec
icebp
xor
pop
stos
cmpsl
sub
sbb
add
enter
aad
jnp
mov
insl
mov
loop
enter
or
fwait
movsb
int
inc
inc
imul
rclb
pop
loope
repz
adc
push
repz
pop
outsl
lea
jno
fisubrl
fistps
and
mov
inc
repz
fs
jb
adc
cmp
xchg
movsb
cmc
inc
int
mov
pop
pop
test
lds
xchg
int3
xchg
cmp
sbb
test
andl
addr16
ljmp
out
or
movsl
xlat
or
jbe
dec
das
jle
cmp
stos
in
ljmp
adc
ret
gs
inc
mov
sub
push
add
fcom
aaa
sbb
daa
daa
dec
sub
clc
push
out
ds
rep
lea
push
cmpsb
enter
in
stos
jbe
sbb
or
mov
mov
cld
cmp
insl
inc
and
cmpsb
lods
xchg
or
sbbl
jae
sub
mov
inc
das
mov
xor
fidivs
xor
je
rorb
outsl
call
adc
jp
test
jge
jb
not
stc
or
repz
mov
push
in
pop
dec
dec
aad
xor
mov
jl
mov
inc
push
pop
lcall
lea
jl
imul
inc
mov
jmp
xor
aaa
iret
and
pop
jmp
pop
pusha
jns
and
insl
movsl
or
rcl
sbb
mov
xchg
outsb
arpl
mov
loopne
pop
inc
sbb
adc
scas
mov
jmp
xchg
xor
fcmovb
addr16
pushf
jg
jno
sbb
mov
call
sbb
adc
mov
scas
jb
in
je
inc
into
insb
cli
aaa
lds
pusha
out
push
rolb
mov
bswap
out
insl
push
xor
dec
ss
popa
mov
das
outsl
jns
in
aas
sbb
scas
push
mov
in
dec
iret
cli
and
jge
mov
in
cmc
sarl
mov
dec
cmp
fadd
or
sub
jb
push
loope
push
test
cmp
jp
addr16
add
adc
call
lret
adc
xchg
inc
aad
xor
orb
shrb
inc
add
or
pop
cld
sbb
insl
add
fdivrs
mov
cltd
popf
into
mov
mov
sti
mov
and
push
fdivrs
cltd
movntq
xor
fcompp
jmp
rolb
cwtl
leave
in
out
jmp
js
xchg
ret
sbb
ds
cmpsb
mov
dec
xchg
mov
cmp
and
mov
es
movsb
dec
push
mov
mov
jae
loope
add
jns
scas
add
arpl
xchg
pusha
imul
mov
sub
adc
jns
cwtl
ret
xchg
cmpps
push
push
orl
in
fsubrp
ja
sbb
test
add
fadd
xor
pop
pop
cwtl
jmp
pop
hlt
js
mov
mov
rcll
shl
scas
aam
xlat
in
jbe
mov
lahf
lret
stos
jmp
pop
sbb
inc
gs
and
ds
mov
xchg
rolb
das
add
pusha
pop
fimull
adc
cmp
rcrb
dec
xchg
push
jb
jg
xorb
mov
lahf
bound
jnp
int3
test
fbld
es
jmp
push
callw
into
into
push
pop
mov
insb
vpackssdw
js
lods
adc
xchg
sahf
pop
xchg
dec
adc
push
insb
cmp
mov
sub
inc
lods
adc
into
push
sbb
dec
imulb
dec
pop
lods
icebp
push
out
xchg
mov
xor
mov
and
cmp
adc
xchg
addb
inc
test
inc
push
in
sahf
cmp
inc
mov
mov
or
cmp
cli
add
mov
es
dec
ds
jo
sbb
and
sbb
sbbw
and
push
xchg
vorps
jge
cltd
sub
and
lcall
cmp
test
jl
mov
inc
in
inc
aad
mov
xchg
xor
push
add
sbb
mov
push
test
cmp
xlat
and
adc
jg
adc
mov
xor
and
pop
dec
fsubrl
sbb
popa
leave
lret
test
push
mov
and
cmp
push
es
inc
xor
jns
mov
or
add
gs
and
aaa
push
pop
sub
rorb
enter
mov
loope
shl
inc
mov
ljmp
popa
fcoms
mov
xchg
jnp
jecxz
inc
and
in
imul
pop
inc
cmp
repnz
jg
xor
cltd
lods
mov
sarb
add
sub
xchg
xor
pop
add
cmp
jns
pop
and
dec
mov
jns
pop
pop
pop
out
jnp
sub
stos
jg
mov
loope
lcall
loop
sbb
pop
cmp
dec
pop
cmp
cmp
daa
push
cld
inc
in
mov
xchg
pop
stos
dec
pushf
ret
jmp
pop
mov
shrb
je
push
cmc
push
loop
mov
push
mov
repnz
mov
and
dec
add
in
bsf
inc
loope
fcomps
fs
mov
fsub
push
or
inc
sbb
mov
test
leave
jnp
jmp
inc
in
xchg
pop
xor
inc
xlat
rclb
mov
scas
adc
mov
fistps
and
stc
sbb
cmp
jns
popf
xchg
psubd
mov
loop
lea
jb
jg
push
or
adc
mov
sti
sbb
push
dec
icebp
imul
aaa
push
fcomp
or
jecxz
daa
inc
dec
out
mov
mov
stc
inc
inc
pop
fisttps
adc
adc
rorb
sarb
nop
dec
lret
cmp
jae
aaa
pop
sub
leave
out
push
cs
imul
mov
popf
sti
jae
push
inc
and
xchg
inc
test
dec
push
test
xchg
mov
stos
mov
cli
add
test
or
icebp
sarb
mov
adc
xor
or
psubd
adc
jb
jb
pop
aaa
and
into
mov
mov
rcll
push
adc
xor
push
pop
mov
inc
aaa
xchg
cmp
mov
js
pop
mov
inc
dec
fdiv
dec
mov
popf
inc
adc
add
sbb
mov
orl
add
pop
popf
rcrb
inc
xchg
cmp
and
out
dec
enter
dec
push
daa
cld
xchg
push
adc
scas
es
mov
sbbl
jbe
cld
es
inc
xor
jecxz
jecxz
and
shrb
imul
js
cmp
inc
and
cmpsl
pop
in
lret
xchg
movsb
cli
adc
inc
mov
sti
cmpsb
addr16
mov
push
cltd
push
sub
daa
gs
scas
std
pop
jo
or
inc
jb
ljmp
sbb
sbb
test
dec
sahf
mov
jnp
xchg
add
nop
stos
lret
inc
sub
fisubrl
pop
pop
sahf
add
stos
and
or
mov
fwait
test
ljmp
mov
pop
outsb
xchg
ja
clc
inc
outsl
mov
aam
or
dec
xor
iret
mov
mov
xor
loop
addb
dec
pop
roll
dec
push
xlat
std
in
push
add
xor
aas
dec
or
sahf
and
jle
pop
inc
pop
dec
imul
sbb
int3
cld
into
rcr
mul
xchg
fsubrs
jge
mov
cmp
loop
ret
cltd
test
mov
or
stc
aas
addr16
pop
push
aam
iret
jae
fs
sub
sbb
cmp
jns
pop
outsl
add
sbb
dec
and
sarb
outsl
aaa
jmp
inc
sub
fisubrl
out
and
xor
pop
or
pop
aaa
cmp
lea
adc
negb
dec
test
insb
addb
xor
loopne
mov
outsl
mov
in
or
rcll
push
rcll
mov
inc
inc
jge
mov
std
in
mov
int3
call
or
or
addb
mov
or
inc
dec
aas
xor
adc
in
sbb
sbb
outsl
dec
mov
fildll
sbb
cmp
in
rcl
lret
loope
in
mov
mov
in
enter
jno
gs
inc
sbb
es
out
sbb
test
insl
popf
sbb
cmp
mov
iret
fwait
shlb
dec
inc
or
out
jecxz
inc
jecxz
cli
or
and
sti
in
scas
rcr
in
cmc
cs
into
adc
cmpsl
sbb
aaa
outsl
and
jmp
lds
andb
push
in
cld
idivl
cs
mov
outsl
inc
mov
aaa
in
in
insl
push
inc
in
push
pop
out
adc
pop
pushf
outsl
imul
subl
push
pop
xor
inc
popa
mov
nop
inc
xor
les
out
test
add
inc
fisttpll
dec
push
stc
clc
cltd
sbb
jg
bound
jl
dec
dec
push
lahf
leave
mov
jae
xchg
mov
inc
xchg
jno
mov
cltd
push
aaa
jmp
test
xchg
xchg
sbb
lret
std
push
pop
cltd
jbe
xor
aad
or
int3
addr16
lds
xor
or
cmp
or
push
je
and
push
xchg
lcall
or
xchg
scas
sub
adc
push
sarl
daa
cli
xor
pop
ja
or
cltd
fwait
and
aas
fsubs
cwtl
lea
dec
mov
jbe
lods
sub
xchg
in
stos
repz
and
ljmp
and
stos
xchg
dec
xchg
loop
xlat
mov
aaa
jp
aas
cmp
cltd
leave
dec
test
pop
push
mov
arpl
xor
int
and
ror
dec
or
pop
rcrl
test
loopne
and
sti
pop
dec
ss
adc
stc
pop
lea
and
mov
pop
xor
cmc
sub
xor
test
ret
cwtl
out
inc
imul
sbb
mov
or
cwtl
lods
ljmp
test
aas
or
or
pop
cmp
fsubrs
mov
pop
mov
mov
add
adc
jo
sbb
jae
ss
mov
lods
sarl
test
out
fdivs
movsb
push
or
call
sbb
stc
fcompl
mov
fisttpll
cmp
shrl
pusha
cltd
fsts
adc
sti
adc
mov
mov
ret
cmc
fldenv
adc
mov
lds
roll
fdivrs
call
test
loope,pn
add
test
ja
mov
pop
fidivrl
push
xchg
fs
fldenv
mov
sbb
or
loop
les
icebp
out
or
cmp
mov
jne
mov
stos
ds
xchg
fisttps
jp
daa
jbe
shll
out
mov
dec
dec
shll
hlt
outsb
mov
push
lahf
xchg
push
fs
mov
jo
xchg
cmp
jb
mov
sbb
lods
cmp
adc
cmp
xchg
mov
push
insl
mov
aad
cmp
into
std
lret
sub
mov
xor
icebp
pop
arpl
fcoms
out
and
clc
mov
mov
imul
dec
xor
inc
ret
and
xchg
mov
mov
shl
loope
notl
and
data16
push
push
rclb
lcall
mov
lods
lcall
dec
outsl
rorl
js
or
jge
loop,pt
cmp
je
ss
repz
ret
sub
stos
loopne
stos
push
xor
mov
movsl
rcl
add
jae
jg
add
repz
outsb
leave
cmp
sub
mov
cmp
jb
insb
fs
push
jne
xchg
in
push
sub
pop
loop
sbb
inc
aad
test
mov
les
std
in
leave
push
lret
cmc
xchg
testl
sbb
loope
xor
and
clc
and
fcompl
mov
cld
popf
jle
call
std
mov
and
inc
sub
dec
stc
les
rcll
insb
in
cmpsl
rol
out
xor
mov
loope
sti
xchg
xor
andb
aas
mov
jbe
lahf
mov
jne
rorb
in
fsts
sbb
hlt
xchg
cmpsb
mov
bound
dec
mov
mov
jno
fimuls
xchg
lret
mov
push
shl
jmp
push
fistpl
inc
cli
stos
mov
std
cld
mov
inc
push
into
sub
bound
cld
dec
lea
xchg
lock
adc
mov
loop
add
test
sahf
mov
ds
dec
enter
fxch
shll
cltd
pop
xchg
in
push
aam
ljmp
mov
jb
push
cli
xor
stos
jbe
cwtl
mov
push
out
dec
stos
push
stc
pop
or
imul
push
jae
push
push
ret
and
out
ja
cmp
jmp
cmp
mov
lret
xchg
mov
inc
pop
inc
fcmove
push
xchg
scas
inc
pop
cmp
mov
add
xor
adc
pop
ss
sub
dec
arpl
push
xchg
rcrl
movsb
cmpsl
lods
enter
or
in
inc
or
lods
pop
sub
dec
sbb
js
je
mov
xchg
xchg
dec
cvtdq2ps
jns
test
out
clc
sahf
mov
cmp
loopne
xchg
jge
pop
push
out
mov
lds
pslld
push
xchg
mov
sbb
mov
inc
orl
jecxz
push
iret
mov
sbb
dec
xor
inc
pushf
ds
bound
enter
leave
scas
mov
insl
mov
mov
je
fcmovbe
icebp
or
hlt
movsl
nop
cmp
ja
test
dec
mov
int
jecxz
jg
cmp
and
jge
cmp
test
mov
mov
hlt
push
jg
jg
mov
lret
out
arpl
test
mov
mov
mov
push
js
mov
loop
aas
xor
shlb
sbb
pushf
mov
jnp
adc
arpl
push
dec
and
in
jecxz
or
in
sahf
mov
lret
mov
jb
stos
ret
in
xchg
pop
mov
ljmp
mov
enter
ljmp
push
xchg
mov
out
adc
lea
cmpsl
popa
dec
adc
cmp
push
shll
sbb
pop
dec
mov
and
lea
inc
scas
cltd
push
addr16
shrb
lcall
lea
mov
hlt
repnz
aad
scas
mov
pop
add
mov
jmp
mov
xchg
fcmovne
cmp
aas
xlat
bound
fistl
pop
ja
sub
ss
xchg
loope
or
adc
fisubrl
mov
in
and
movsl
sbb
or
pop
dec
xchg
mov
xor
fs
mov
dec
ja
xchg
dec
mov
mov
stc
jg
lea
sbb
shll
jp
inc
cmp
jge
stos
bound
sub
jnp
mov
movsb
pop
cmp
shll
sbb
xor
xchg
icebp
imul
iret
push
out
lahf
loop
roll
call
shll
ljmp
mov
mov
pusha
and
inc
or
stos
repnz
pop
cmp
hlt
mov
mov
jle
jb
out
inc
pop
aad
push
adc
into
pop
inc
nop
jb
add
xlat
pop
loop
xor
bound
ljmp
movsb
pop
cmp
lds
shr
pop
mov
popf
dec
xlat
mov
int
test
jb
push
and
mov
or
bound
jp
fs
in
adc
cmp
dec
imul
xor
outsb
and
sbb
push
push
mov
mov
sbb
dec
push
bound
mov
dec
cld
dec
mov
loopne
ss
lods
mov
addr16
pop
ret
mov
pop
insb
out
popf
cmpsb
adc
bound
xchg
cs
and
icebp
test
rcrb
mov
repz
dec
idivb
fs
mov
out
inc
adc
rcl
mov
mov
cs
cmp
sahf
lock
xchg
push
fistl
pop
cltd
mov
pushf
out
fsubs
iret
cmp
sub
cmp
test
cmpsb
inc
mov
ss
jbe
cmp
pushf
icebp
adc
dec
test
leave
shlb
ret
xchg
incl
sbb
adc
add
insb
sub
sub
ja
ljmp
mov
inc
out
js
or
popa
enter
mov
rcrb
aas
scas
imul
shll
jge
sub
movsb
xchg
mov
aad
in
mov
int
jge
adc
int3
or
pop
xchg
scas
arpl
loop,pn
dec
pop
ficoml
add
sub
add
add
outsb
sarb
dec
mov
mov
mov
cmp
ret
adc
enter
mov
out
sbb
lods
cmp
fists
add
imul
xchg
lods
mov
lcall
ficoms
loop
psrad
lret
add
or
xor
mov
std
xchg
jge
push
ja
jmp
and
mov
jnp
push
pop
sbb
mov
jo
pop
lahf
and
jge
mov
es
xchg
jns
pop
xor
insl
pop
movsb
or
test
jo
les
sti
ljmp
pop
mov
pusha
push
lcall
scas
pop
imul
inc
jo
push
jno
push
pop
jb
or
jb
add
pop
jns
dec
dec
in
rcll
and
test
cmp
xchg
push
mov
xchg
dec
lahf
mov
xchg
mov
add
dec
divl
scas
outsb
or
add
push
sub
adc
stc
js
adc
mov
fistpl
gs
fsubs
mov
stc
and
cwtl
ret
repnz
pop
xor
es
mov
aaa
pop
std
pop
ljmp
mov
loope
ffreep
imull
iret
push
aas
fists
add
xor
push
xorl
fdivrl
xchg
insl
cmpsl
int
or
dec
pop
out
imul
xchg
add
jl
jae
push
sub
add
lret
int3
adc
and
test
sub
movsl
fldcw
enter
sub
cmp
xchg
daa
push
stc
lret
jl
outsl
dec
dec
shl
divl
mov
dec
ret
push
jo
add
cmp
push
shl
ret
dec
fimull
addr16
mov
xchg
out
add
pop
loope
pop
shrl
pop
adc
movsb
sbb
mov
xchg
loopne
mov
cli
lock
rolb
mov
ret
outsl
imul
lret
cltd
mov
es
loopne
andb
lret
dec
ljmp
or
inc
mov
clc
imul
lret
or
lds
cli
das
ret
or
mov
shrb
decl
dec
sub
cmpsb
xchg
pop
mov
xchg
aas
lea
push
out
mov
out
inc
xchg
inc
iret
mov
mov
mov
inc
mov
into
lods
loope
sub
push
xchg
mov
cmp
cmpsb
jecxz
push
shlb
cmp
mov
outsl
push
add
pop
pop
movsb
cmp
mov
or
mov
cltd
vpmadcsswd
std
into
xor
shlb
pop
js
ret
pushf
in
mov
sahf
out
or
inc
dec
jp
insl
in
cmc
in
std
pop
pop
mov
popf
lcall
mov
pop
scas
fisubrl
lock
in
loopne
mov
out
stos
loope
or
repz
or
fsincos
xchg
ljmp
jb
or
xchg
mov
pop
rorl
or
mov
pushf
xor
addr16
test
push
add
jg
jno
sbb
dec
popa
mull
push
mov
push
testl
mov
xor
pusha
nop
aaa
enter
dec
mov
push
adc
rolb
and
dec
testb
add
pop
das
jb
jg
sub
fidivs
pop
fwait
sti
out
sarl
and
jbe
add
in
and
or
loope
inc
sbb
sub
xchg
dec
mov
dec
jge
icebp
lods
push
fst
xor
cltd
jbe
mov
fnstsw
test
mov
ljmp
xchg
cmp
sbb
subb
je
jo
sahf
pop
std
sti
aam
adcl
add
mov
mov
sub
pop
push
dec
and
mov
inc
mov
scas
scas
sahf
mov
popa
outsb
ret
subb
sub
lea
and
gs
mov
inc
jle
mov
mov
jo
test
cmp
mov
pushf
inc
xor
mov
mov
jo
xor
cmpb
adc
popf
pop
xchg
dec
and
dec
xchg
mov
inc
pop
dec
out
jbe
pop
inc
xchg
sbb
aaa
pop
dec
lods
test
sbb
adc
scas
leave
sbb
popa
and
outsb
or
mov
mov
mov
mov
jbe
mov
int3
add
mov
mov
jl
stos
inc
dec
dec
jb
clc
inc
pop
jno
adc
or
shrb
fcomp
testb
mov
pop
stc
adc
jg
mov
fisttpll
clc
ret
pop
dec
andb
xchg
std
mov
pusha
mov
cltd
mov
ja
shl
call
mov
daa
adc
rcrb
shlb
leave
cli
stc
sub
fistpll
into
xor
or
mov
arpl
pop
or
nop
pop
adc
sti
dec
out
aaa
mov
dec
andl
arpl
jmp
clc
sub
in
mov
xchg
clc
xor
aad
cs
cs
cmp
xchg
jmp
dec
arpl
pop
mov
sub
mov
cwtl
or
cmpsb
push
mov
pop
or
outsl
aaa
stos
jno
mov
xlat
push
aam
xor
mov
out
mov
lods
imul
aam
cmp
push
adc
fsts
cmpsl
and
sbb
fisubl
ljmp
enter
mov
pop
pushf
ds
call
cltd
mov
mov
jae
imul
ja
jbe
aas
ficompl
and
push
sub
fimuls
cmpsl
into
sbb
and
jge,pn
fmull
js
outsl
lret
leave
or
inc
mov
mov
clc
dec
test
rorb
fbstp
in
movsl
sub
int3
xchg
lahf
mov
lds
push
out
inc
subl
or
inc
in
jnp
jmp
out
insb
adc
lret
movsl
push
xlat
mov
cmpsl
push
dec
insl
cmp
cmp
sbb
xchg
mov
or
or
cmpsl
lods
xorb
bswap
sbb
in
fiadds
movsb
in
xchg
test
stos
lret
stc
addr16
jg
cmc
or
testl
sti
adc
out
mov
popa
dec
test
cmp
and
xchg
inc
es
testb
add
loope
cs
xor
imul
jno
movsb
lret
jae
sbb
enter
addb
sub
pusha
add
ljmp
mov
jge
or
aam
sub
jo
fldenv
pop
push
pop
push
aad
dec
cmp
pushf
sub
jge
dec
mov
stc
pop
mov
popa
dec
xchg
push
sub
aas
mov
test
inc
popa
insl
imull
dec
mov
push
dec
call
cli
ja
push
mov
clc
sti
jle
inc
test
mov
inc
sub
rcrb
shll
and
pop
xchg
dec
xor
xchg
sbb
iret
add
push
sub
jp
cmpsb
arpl
mov
movsb
out
dec
sarl
mov
scas
xchg
sub
jle
inc
out
mov
mov
cltd
pusha
lods
and
push
lret
pop
fmull
stos
pop
fidivl
jg
dec
orb
push
dec
xchg
push
repnz
mov
inc
cmp
inc
and
pop
pop
sbb
cld
leave
push
mov
pusha
stc
mov
iret
loop
imul
xor
dec
dec
dec
rcr
cs
jo
push
test
pop
pop
or
pop
or
inc
push
clc
mov
sti
add
in
mov
jge
cmp
jbe
xchg
imul
es
call
in
out
push
mov
cmpsb
daa
rcrl
xlat
adc
xor
std
lcall
dec
or
add
cld
and
inc
scas
in
clc
cwtl
cmp
dec
cli
xlat
sub
std
mov
adc
scas
int3
mov
cli
test
jbe
mov
cmp
lds
sub
cmpsb
mov
test
movsl
in
mov
cmc
or
popf
push
fnsave
jb,pt
ss
cmp
dec
mov
push
xor
mov
repz
sub
xlat
aam
adc
dec
inc
or
scas
sub
cs
xor
or
inc
fs
fdivrl
out
loope
xor
cmc
cwtl
push
mov
jae
fwait
pop
out
xor
mov
cmp
lret
dec
inc
repz
rorl
adc
jno
add
lea
xchg
cli
jecxz
pop
scas
sar
scas
mov
cmpb
icebp
fmull
or
cwtl
lods
bound
mov
jp
imul
in
adc
insb
ds
sbb
xor
idiv
lahf
into
add
aaa
push
leave
mov
js
shl
dec
mov
mov
mov
sbb
mov
push
inc
stos
or
xor
out
dec
pop
ficompl
pop
sbb
pop
in
outsb
sbbl
popf
inc
sbbb
mov
fmulp
inc
scas
cld
lahf
xchg
repz
jl
out
ret
and
je
mov
dec
xor
lcall
in
shll
lds
mov
mov
mov
call
add
rcl
push
pop
popa
sbb
dec
lods
test
mov
rolb
or
stos
dec
scas
sub
inc
sbb
jmp
shll
inc
int3
jae
pop
fmul
xchg
addb
sahf
xchg
mov
adc
inc
inc
sti
insl
cmp
popa
jb
jle
push
jb
xor
rolb
rorb
or
int3
cmp
push
jb
adc
fiaddl
fs
sub
inc
leave
popf
sub
gs
cld
jae
xchg
push
cltd
pop
iret
dec
lods
pop
enter
ds
mov
mov
test
xchg
popa
xlat
dec
sti
scas
xchg
mov
jbe
mov
imul
mov
or
and
pusha
and
mov
adc
pop
in
lret
adc
and
frstor
and
dec
lcall
movsl
idivl
test
adc
dec
inc
ljmp
sub
mov
clc
test
jecxz
push
loope
cmpsb
and
jp
xchg
mov
or
in
test
or
cld
out
mov
pop
add
pop
push
jno
and
outsl
push
rcl
lcall
mov
test
fsave
jb
mov
leave
adc
or
in
sti
jno
leave
mov
or
daa
pop
fwait
pop
mov
jo
sub
hlt
fimuls
adc
repz
loopne
jo
mov
push
jae
test
std
jne
mov
cltd
mov
mov
dec
push
rorb
adc
xor
add
cmp
jo
mov
jne
xchg
popa
push
paddd
ds
sub
aaa
test
mov
push
pop
not
sbb
xor
jns
in
add
movsl
and
ss
adc
stos
scas
inc
hlt
pop
pop
jno
xor
das
ss
addb
or
sar
xchg
das
repnz
fs
cmpsb
call
xlat
mov
pushf
adc
jmp
xor
pusha
arpl
dec
call
cld
jmp
sub
lret
rcr
cmp
push
cmpsb
jle
mov
xlat
and
loop
inc
insb
loopne
icebp
mov
mov
xor
mov
hlt
inc
inc
cmpsb
mov
fsubl
or
jns
fwait
sbb
or
rcrb
in
out
add
sub
loopne
out
popf
je
pop
adcb
xlat
aad
and
sbb
adc
addr16
clc
stos
dec
test
lods
sub
lods
push
mov
insl
data16
push
sbb
pop
out
clc
ds
cmc
jb
push
mov
stc
pop
ss
test
push
ds
mov
lret
rolb
lods
unpcklps
add
push
les
fnstenv
arpl
in
lds
shlb
mov
jmp
and
imul
jae
test
ds
xchg
popf
outsb
es
test
pop
xchg
add
cmpsl
enter
and
hlt
es
or
lcall
outsl
and
xchg
xchg
rolb
and
sar
and
and
or
stos
out
jne
div
jl
jl
adc
lds
push
lcall
jl
or
divl
or
rcl
jbe
mov
testb
cmc
xchg
fidivrl
inc
loope
push
out
scas
scas
inc
mov
sbb
add
push
push
inc
pushf
shld
cwtl
stc
jns
push
mov
in
jg
in
ljmp
sbb
lods
fcoms
push
leave
fisttps
and
inc
inc
loopne
inc
push
jnp
lret
xchg
outsb
repz
inc
orl
mov
dec
mov
fcompl
enter
in
pop
repz
pop
push
xchg
fwait
push
hlt
sub
mov
lods
jle
jo
sbb
mov
jns
xor
test
imul
fwait
add
inc
lds
scas
adc
inc
imul
dec
std
rol
testb
mov
add
xchg
pop
gs
lret
add
lret
cmc
cltd
lcall
test
push
adc
sbb
push
jnp
cs
ds
lahf
pop
lahf
push
loope
ret
jo
insl
mov
pop
into
in
push
add
aad
sbb
mov
inc
movl
and
xor
data16
mov
jp
push
negb
mov
jmp
pushf
popf
adc
push
mov
add
fisttpl
pop
movsl
lret
in
idivl
or
push
setno
loopne
inc
push
cmp
lods
inc
pusha
fldt
fdivrs
test
cld
sti
adc
movsb
movsl
sti
sbbb
movsb
pop
orb
inc
movb
xor
imul
fldenv
je
jne
dec
in
scas
xor
mov
aam
in
xor
test
gs
into
push
test
pop
xor
loopne
adc
std
pop
xchg
jle
lea
pop
cmp
hlt
xor
cmc
pop
shrl
sub
jge
ficoml
inc
pop
pop
mov
push
stos
fldenv
cli
xorb
ds
mov
mov
imul
or
gs
or
jbe
lea
mov
rcrb
mov
dec
mov
adcb
pusha
inc
and
and
aaa
loope
insl
mov
xchg
inc
jno
arpl
dec
das
stc
mov
shld
lods
ret
notl
mov
mov
arpl
aam
bndstx
mov
push
cmpsl
inc
call
imul
addr16
ja
in
enter
jle
mov
pop
cmc
dec
adc
icebp
imul
mov
jle
outsl
je
mov
xor
ds
cmp
stos
out
pop
mov
pop
xchg
inc
adc
mov
jbe
repnz
dec
mov
mov
push
or
fdivl
inc
and
push
test
dec
push
mov
lds
out
test
shrl
test
jmp
rorl
fistl
xor
inc
add
or
adc
imul
mov
js
imul
mov
fsubrs
test
scas
xchg
pop
pop
mov
mov
jg
scas
cmpsb
mov
lret
outsb
fs
jmp
insl
ljmp
pusha
cli
fstpl
insl
pop
lret
testb
add
inc
mov
icebp
mov
cli
sarl
loope
adc
sbb
leave
add
xchg
mov
cltd
fildll
mov
mov
aaa
inc
aam
cmp
fwait
xchg
sub
adc
lret
lods
xchg
and
insb
dec
cmp
shrl
aas
shr
jle
mov
mov
call
stos
rorl
sub
fdivrl
int
les
jae
add
scas
mov
movsl
cli
inc
sti
mov
test
lods
cmp
not
shlb
pop
add
sub
xchg
push
jg
add
dec
cmpb
mov
add
imul
inc
arpl
inc
daa
ds
mov
inc
insb
pusha
push
loop
sub
scas
es
mov
in
lea
sbb
adc
mov
fstsw
lcall
mov
dec
sti
inc
fdivr
in
cs
add
lea
jmp
mov
sbb
shll
insl
popa
sub
mov
aas
test
xchg
fcoml
lret
mov
lret
pop
cmp
out
add
cmpsb
scas
faddl
test
shld
push
push
xchg
jmp
dec
nop
std
cmp
push
fstps
dec
mov
lock
inc
out
inc
scas
jmp
pop
fdivs
jns
sub
adc
sub
repnz
pop
add
fistl
push
push
xor
std
push
mov
jno
mov
push
rcrl
and
mov
pusha
dec
add
xor
add
and
clc
pop
fisubrs
pusha
add
int3
inc
lods
add
pop
jmp
push
add
cmp
sbb
jecxz
xor
mov
push
hlt
sbb
dec
and
mov
imul
loopne
inc
rol
and
lret
mov
pop
pop
addr16
jnp
adc
aaa
lds
aaa
xor
in
fmull
jg
mov
pop
bound
stos
mov
push
orb
and
mov
inc
outsb
and
xchg
pop
mov
push
lds
loop
or
pop
or
test
psubq
pusha
adc
subb
or
sbb
es
lret
inc
add
push
sete
sbbb
mov
fcomps
dec
xchg
cs
pop
mov
cld
or
insb
fiadds
hlt
pop
dec
aaa
pop
sbb
jo
pop
lahf
push
mov
mov
sbb
je
jge
outsl
and
xchg
lret
mov
dec
fwait
popa
jns
xchg
imul
imul
push
xchg
cmp
sarl
outsl
int
fistpl
cmpsl
push
ds
repz
dec
cld
add
add
negl
jg
xlat
sarl
sbb
test
je
pop
ret
cmp
push
mov
stos
bound
pop
xchg
out
or
fdivrl
jge
xor
mov
imul
lea
xchg
aas
testl
movsl
or
and
rcr
adc
adc
outsb
ret
test
movsl
mov
pop
movsl
in
sti
enter
incb
or
inc
popa
sbb
mov
sub
push
xor
stos
adc
and
push
add
xchg
sub
stos
xchg
mov
fcmovnb
addr16
les
cli
lcall
cmp
add
stos
or
mov
sbb
movsb
orl
fldcw
dec
out
ret
adc
inc
sub
push
pop
sbb
jle
movsb
shll
das
mov
das
pop
push
pop
in
push
aas
add
sti
inc
shlb
pop
xchg
in
movsl
push
jl
sub
push
xchg
mov
push
std
int3
in
out
ljmp
dec
stos
cwtl
test
push
cmc
cltd
fldt
dec
loopne
xchg
mov
subl
ljmp
ss
out
pop
mov
scas
push
lret
les
fimull
xchg
xchg
leave
jl
and
jbe
decb
xchg
divb
push
rolb
ja
adc
cwtl
in
insl
mov
movsl
call
imul
and
pop
inc
inc
inc
cmp
cmp
inc
xchg
clc
add
les
sbb
xchg
push
sarl
ret
pop
aam
pop
insb
or
std
inc
or
and
loop
sbbb
int3
fucom
es
dec
add
pop
int
les
xchg
je
fwait
jmp
std
pop
lcall
and
mulb
fistl
sub
lods
imull
add
sub
add
pop
adc
scas
insb
sub
push
scas
adc
std
sub
or
popf
mov
push
pop
mov
cli
cmpsb
cld
and
stc
fucomp
or
xchg
xor
lret
outsb
xchg
and
push
adc
sbb
iret
rorb
push
ljmp
shrl
and
gs
cmp
dec
das
jns
jp
das
out
add
repz
mov
dec
and
jb
popa
mov
loope
shll
std
adc
cmp
movl
addr16
mov
into
rorl
stos
rcr
mov
aas
sbb
int3
jmp
lds
jnp
mov
int3
idivb
lcall
push
outsb
jge
ss
inc
negb
pop
xchg
arpl
mov
or
lcall
xor
aaa
loop
mov
rorl
push
mov
mov
jnp
test
inc
sbb
idivl
into
scas
xor
cli
push
test
sub
pop
and
ja
pop
add
xchg
and
mov
push
fstps
sbb
mov
dec
mov
xchg
jle
std
ret
test
daa
add
fisubs
dec
push
js
leave
popf
mov
fsubr
adc
xor
fnsave
in
cmpsl
popf
jb
and
cmp
cmp
fs
lods
mov
sti
shll
lahf
je
aaa
incl
cs
lcall
cltd
xor
hlt
ja
loopne
ja
cmpsl
adc
pop
test
pop
cmpsb
shl
fistps
dec
dec
ds
mov
ljmp
sbb
sarb
cmpsb
dec
loop
insl
pop
mov
sub
repnz
sub
movsl
pop
ja
cmp
mov
fs
pop
imul
cmp
mov
xor
nop
cmp
iret
cmp
sbb
int3
sti
mov
ljmp
mov
jl
jno
out
dec
inc
imul
fstpl
inc
add
ja
pop
dec
ljmp
dec
or
fmul
xor
inc
out
fldenv
xor
pop
test
pop
jecxz
or
icebp
aad
rdtsc
mov
jmp
movsb
push
mov
inc
and
sub
jno
dec
xchg
int
pop
jge
cmpsb
cmpsb
sbb
push
enter
sbb
subl
adc
insl
pop
pop
mov
push
adc
sahf
jae
lret
xor
loopne
and
loope
sbb
clc
push
fistpl
sbb
test
int
sub
xor
cli
mov
insl
clc
in
stos
adc
and
insb
jecxz
jne
stos
jle
ss
push
fsubrs
pop
adc
xchg
inc
jno
xor
or
test
pop
and
jge
cwtl
ret
mov
pop
push
mov
fdivl
loop
mov
mov
pop
testl
mov
movsb
jnp
pop
xchg
pop
lahf
imul
stc
lods
mov
pop
dec
call
popf
xor
in
sub
fstp
mov
jae
mov
sub
or
xchg
inc
add
cvtps2pi
adc
sub
cmp
aaa
mov
xorl
imul
and
ret
and
mov
aam
loope
xlat
or
cmp
or
dec
outsb
or
sub
mov
popf
pop
mov
jo
ja,pt
mov
daa
push
andb
cmp
dec
mov
lcall
into
dec
and
jmp
cmp
mov
lret
negb
outsl
jecxz
jbe
sub
mov
in
lock
push
push
negb
jg
addr16
addr16
ficoms
xchg
xor
cmp
in
mov
mov
mov
mov
pop
sbb
or
xchg
out
adc
roll
ret
inc
repz
cpuid
aam
jb
fnop
call
and
jge
mov
push
cld
jge,pt
jl
movsl
mov
in
fisubs
loopne
insb
imul
test
rolb
cmp
xor
cmc
xchg
jl
sbb
aam
cmpsl
or
push
fsubs
cmp
and
or
ja
adc
jecxz
or
adc
mov
aam
out
mov
es
movsl
das
mov
mov
inc
mov
xchg
and
popa
stos
or
sub
stos
xchg
xchg
jp
ret
jbe
xchg
movsl
xchg
dec
pop
xor
push
mov
add
out
je
lods
cmpsl
pop
loopne,pt
pop
test
cmp
aam
push
cmp
and
mov
leave
fcomps
pop
vpavgw
xchg
lds
jae
lcall
inc
jae
cmp
mov
push
push
cmp
loopne
jne
sub
push
stc
shl
imul
mov
adc
nop
in
iret
jmp
jnp
mov
aad
leave
mov
mov
in
js
ret
jmp
pop
int3
dec
add
push
jno
inc
outsl
iret
add
mov
mov
add
data16
jl
insb
hlt
pop
ret
adc
les
ss
insl
inc
enter
add
sub
shl
shl
insb
sub
mov
mulb
fsts
mov
out
cmp
scas
add
xchg
popa
movsl
fimull
add
push
lock
ds
fwait
sub
sub
scas
sahf
and
xchg
xchg
mov
sbb
pushf
ret
inc
add
inc
xchg
push
das
jbe
jnp
imul
xor
shll
dec
sbb
jno
lds
rorl
add
pop
jecxz
mulb
cmpsb
sbb
mov
mov
xor
inc
or
xor
nop
adc
mov
sbb
sbb
xor
xchg
xor
loop
lcall
mov
sub
sbb
jp
lcall
cmc
loop
repz
xor
and
sbb
pushf
test
push
test
xor
mov
push
jle
outsb
ja
or
cmp
or
mov
add
jo
imul
xor
insl
int
lea
pusha
sbb
xchg
pop
mov
sub
lcall
jnp
movsl
fildll
sub
xor
js
ss
mov
vpaddq
sbb
enter
je
filds
mov
push
sbb
fidivs
js
decb
out
stos
out
inc
dec
pop
scas
pop
cmc
testl
add
sub
jge
or
or
jmp
and
stc
jge
ret
and
dec
cmc
adc
fidivrs
hlt
push
ret
push
push
inc
addr16
ljmp
jae
cmpsl
sbb
ja
inc
or
add
dec
sbb
je,pn
in
pop
jbe
fucomi
add
mov
stos
jns
jmp
mov
push
push
sahf
xchg
por
xchg
sbb
xchg
gs
lds
test
imul
jns
loopne
in
out
lcall
daa
and
mov
dec
setae
ds
icebp
rcll
lret
cli
mov
mov
aas
cmp
dec
fs
std
lds
add
pushf
pop
push
scas
sub
jo
push
xchg
nop
and
mov
pop
inc
fmuls
pushf
rclb
mov
orb
dec
std
dec
and
and
jl
adc
cld
and
mov
or
stc
pop
pop
in
mov
cmc
dec
ret
aaa
into
mov
adc
xchg
cltd
lods
lock
dec
fs
inc
jge
mov
xchg
repnz
xor
imul
and
jl
xchg
or
orb
inc
push
push
jbe
add
insb
mov
mov
lret
lods
rolb
pusha
popa
sbb
xor
pop
lea
push
cmp
xchg
add
add
rclb
je
mov
dec
xor
imul
or
popa
jle
clc
push
dec
ss
leave
bound
sub
iret
dec
cwtl
out
out
inc
subb
sub
loopne
xlat
loop
pop
cmp
rorb
xchg
jne
mov
inc
mov
pop
ja
sub
fsubs
push
orb
or
or
cltd
dec
sub
cmp
or
inc
adc
cmpsb
or
cltd
data16
orl
iret
xchg
mov
dec
adc
cli
inc
fidivrl
stc
fs
fiadds
xchg
jb
inc
xchg
jg
sub
nop
pop
sbb
xor
push
pop
fnsave
inc
or
fs
lock
outsl
test
inc
mov
lcall
sarb
inc
push
stc
add
test
fdivr
dec
xchg
orl
pop
ja
and
xchg
std
pop
pop
mov
push
fcmovbe
jmp
arpl
mov
push
xor
cmp
fstpl
jns
push
mov
sbb
jmp
pop
enter
dec
iret
jle
push
push
sarl
ds
xchg
push
pop
xchg
push
adc
cmpsb
jbe
sub
mov
rcll
dec
bswap
loope
mov
jo
repnz
dec
inc
sub
out
inc
and
jbe
pop
fldenv
xchg
outsl
cmp
icebp
jg
testb
push
shrl
sti
add
test
test
cmp
lock
sub
out
lcall
outsl
rorb
ja
jmp
repnz
mov
loop
mov
mov
mov
jecxz
jg
add
cld
push
xor
outsl
cld
mov
adc
insl
sbb
pop
push
nop
movsb
rorw
loope
fidivs
pop
sub
push
out
mov
cmc
in
rcll
popa
in
cmp
shl
mov
bound
jge
add
push
mov
cmp
dec
mov
int3
ja
cltd
jmp
shlb
sar
outsb
cmpsb
jl
out
cli
loopne
mov
leave
pushf
sub
call
out
je
call
jge
cs
sub
cmpsb
push
outsb
fwait
sbb
aaa
or
mov
sub
xor
pop
pushl
in
adc
sbb
call
insb
add
dec
insl
dec
leave
xchg
sbb
sbb
fisubs
mov
std
out
pop
shrb
ljmp
lahf
adc
sub
aad
pop
in
push
sbb
jne
jne,pn
dec
popf
rol
and
scas
insl
fwait
push
outsl
pushf
test
in
cmp
jae
sbb
pop
sar
push
sub
mov
out
and
scas
fs
cmpsb
add
mov
adc
cmp
sbbl
in
pop
jnp
pop
mov
sub
mov
sbb
sbb
gs
and
push
call
into
push
cld
add
or
iret
xchg
xchg
push
andb
ret
in
cmp
fldcw
stos
insl
dec
inc
lahf
iret
in
and
jp
arpl
sbb
gs
into
sbb
pop
lahf
jno
cmpsl
push
cmp
daa
pop
ret
push
je
or
aad
xor
hlt
mov
jg
scas
pop
js
cld
insb
loope
sbb
jge
jb
xor
inc
ret
xor
jp
in
jbe
cmp
je
lcall
lods
dec
pop
jns
in
mov
mov
fistpll
in
mov
mov
xchg
in
hlt
pusha
or
orb
cmpb
cmpsb
sub
cmpsl
clc
aas
jne
rclb
mov
shlb
dec
and
mov
push
mov
pop
inc
fldl
shrl
lock
ror
mov
jae
cli
cmc
dec
inc
push
xor
movl
xor
sbb
fmul
pop
or
nop
push
mov
out
jp
dec
icebp
std
xchg
lods
mov
arpl
stc
xor
inc
fcoms
ja
inc
pop
jns
les
hlt
xchg
add
pop
daa
cmp
ds
or
jmp
xor
add
push
sbb
dec
add
jns
leave
pop
cs
out
mov
je
ds
and
push
mov
pusha
adc
mov
mov
sub
es
push
dec
insb
aad
mov
push
outsl
push
pop
movsl
ret
test
mov
mov
inc
cwtl
pop
dec
mov
xor
jmp
add
jo
adc
iret
loopne
mov
push
cmp
lock
scas
cld
mov
mov
and
outsl
lahf
ret
sub
mov
mov
loop
scas
mov
mov
jnp
add
xor
adc
xchg
dec
mov
xchg
xchg
movsb
out
sbb
daa
jge
and
out
jecxz
inc
ficompl
into
xchg
ljmp
and
jae
mov
aam
bound
xchg
mov
stos
sarl
lods
mov
cmp
inc
push
popa
sti
cwtl
in
or
adc
das
add
adc
lock
clc
out
or
xlat
and
pop
cld
popf
stos
sti
jbe
or
jbe
pusha
es
pop
add
pop
out
repz
or
mov
adc
das
jmp
fists
mov
nop
pop
out
xor
adcl
arpl
movsb
inc
leave
or
clc
jle
and
pushf
dec
xor
pop
sar
mull
ficoml
inc
push
mov
pushf
and
xlat
push
add
jecxz
clc
pop
xchg
daa
push
out
mov
push
xlat
push
cs
sbb
mov
add
push
cs
xchg
dec
inc
sti
out
sub
imul
imul
xadd
push
adc
aas
loope
adc
push
sbb
xchg
sub
scas
mov
xchg
cmp
lods
mov
hlt
sbb
je
popa
lods
mov
inc
add
sbb
or
fimull
cmpsb
pop
cmp
das
in
adc
into
xchg
jl
sub
adc
lock
sub
xchg
adc
ret
ja
sub
or
mov
ds
fistps
and
jbe
push
stos
push
sldt
gs
xchg
insb
scas
mov
fsubrs
gs
sbb
mov
and
stos
lock
sub
dec
pop
into
or
shrb
fistps
cmp
add
sbb
xchg
cmpsl
mov
adcl
loopne
pop
adc
aaa
test
adc
bound
or
bound
inc
sbb
faddl
clc
mov
jb
xor
cwtl
fcomi
sbb
outsl
inc
pop
inc
cmpsl
adc
mov
into
ja
rcr
subl
call
mov
xor
or
xchg
cltd
push
mov
push
push
je
lods
loope
jle
cli
pop
cmp
icebp
inc
loope
adc
xchg
test
pop
cmp
cmpsb
and
test
mov
xchg
add
lea
aaa
aaa
ficomps
mov
xchg
test
pop
inc
adc
outsb
out
pop
out
lods
mov
xchg
jbe
movsl
push
inc
push
or
or
push
gs
pop
out
shrl
hlt
jg
movsl
and
pop
mov
mov
add
push
movsl
inc
stc
idivl
fst
jl
aas
int3
cwtl
mov
mov
xor
sub
call
add
jnp
repnz
inc
mov
pop
push
sbb
rorl
adc
in
ror
clc
jae
pop
dec
or
xor
mov
ret
and
imul
pushf
lea
add
add
or
cmp
xor
cmp
inc
jecxz
leave
jmp
inc
dec
dec
clc
push
or
xchg
inc
lods
jp
adc
pop
enter
ret
invd
hlt
fildll
mov
pop
adc
add
testb
data16
xlat
mov
mov
loop
aad
adc
dec
test
fidivrl
mov
scas
movsb
or
mov
stos
fnstcw
lods
jecxz
and
inc
outsl
push
jno
mov
jecxz
js
cmp
push
out
or
dec
jae
sbb
xchg
fisubl
pop
adc
dec
into
cmpsl
pop
cmc
pop
gs
arpl
nop
mov
cmp
leave
mov
jae
mov
sbb
rclb
jb
jae
xor
adc
shll
cmpsl
pushf
loop
stc
xchg
imul
fdivs
std
push
push
fucomp
rcl
sbb
popa
push
mov
cmp
push
adc
push
int3
adc
in
add
mov
inc
mov
ds
ja
cmp
push
mov
xchg
imul
mov
cmp
add
dec
mov
movsl
arpl
sti
mov
in
xor
adc
scas
addr16
cmp
adc
cmpsl
and
jno
push
insl
dec
jp
cmpsl
data16
imul
mov
push
loop
popf
mov
rep
stc
comiss
push
imul
ja
sub
pop
rorl
inc
or
fbld
push
cmpb
sub
lcall
int3
iret
rcrl
js
jo
test
lods
cmovbe
dec
stc
add
adc
jmp
mov
scas
pop
cli
stos
mov
lods
xchg
xor
pop
dec
mov
stc
fimull
fimuls
mov
jb
adcl
scas
dec
inc
std
lods
fld
aaa
sub
fildll
xchg
aas
imul
add
cmp
jmp
insl
or
sub
shlb
shlb
lahf
scas
pop
adc
sbb
mov
ss
stos
mov
sbb
lahf
int
dec
subl
dec
inc
sti
iret
jo
push
addr16
jae
mov
jns
mov
movsb
jp
mov
adcl
xor
das
push
sub
cmp
into
sub
push
and
bound
sub
xor
pop
in
xlat
inc
cmp
sbb
lret
inc
cmp
scas
ss
xchg
and
aad
js
lea
mov
adc
jo
jmp
stc
push
push
pop
xchg
and
sub
xchg
lret
jp
dec
and
or
mov
fiadds
xchg
xlat
daa
push
add
out
lock
in
jno
mov
jmp
iret
test
lahf
ss
lret
and
xchg
xchg
mov
xchg
xor
sbb
test
popf
in
pop
movsl
dec
stos
and
aam
sahf
mov
test
mov
mov
lods
push
and
xor
push
sub
orl
jno
loop
inc
ret
scas
lods
adc
and
ss
add
pop
push
popa
sub
inc
out
ss
mov
mov
outsb
jp
ja
add
ss
lret
fildl
faddl
adc
push
fstp
js
repnz
enter
out
xchg
sarl
daa
cmpl
or
cmp
notl
lock
inc
fcmovnu
dec
mov
mov
mov
xchg
add
xchg
jg
mov
sub
xchg
lret
or
push
loope
mov
xchg
pop
push
cld
mov
jne
adc
loop
lea
sub
test
adc
cli
into
fbstp
int3
in
inc
movsl
jle
lds
ret
pop
sub
xchg
lock
mov
arpl
or
xorl
sub
push
pusha
push
aas
fiaddl
lret
push
ret
in
sbb
xorb
insl
jecxz
push
inc
push
pusha
mov
mov
cmpsb
add
ret
add
jp
cmp
xchg
leave
push
sbb
imul
and
sub
movsl
inc
call
jbe
lea
dec
dec
aas
mov
aaa
push
fcompl
imul
push
add
cmp
adc
scas
clc
gs
sub
dec
ds
movsb
sbb
mov
adc
outsb
jl
pop
andl
dec
and
testb
sar
dec
lds
push
pop
xorb
add
rolb
cmpsl
mov
mov
add
das
mov
and
mov
jl
lret
xchg
xchg
sbb
mov
outsl
add
pop
inc
in
mov
sbb
ret
sti
fcmovb
and
jmp
mov
insl
mov
fdivl
fisttpll
imul
mov
jmp
mov
dec
jp
adc
and
cmp
add
dec
cmp
pop
xor
filds
sbb
sti
sbb
fdivrl
inc
push
mov
jp
adc
clc
mov
enter
jo
inc
xchg
xchg
adc
fwait
xor
shll
data16
cmp
sbb
push
mov
jecxz
imul
int
jb
add
xor
fimuls
cmp
aam
pop
outsl
test
mov
out
daa
inc
enter
and
fisubl
add
mov
aad
push
hlt
add
cmpb
in
adc
dec
push
xor
dec
dec
test
inc
push
clc
add
push
in
mov
fisubrl
jg
std
pop
sub
jo
and
aaa
scas
jo
pop
stos
rorl
stos
or
sahf
xchg
jmp
xor
leave
sbb
bnd
push
and
int3
sahf
push
xchg
popf
call
shl
stos
aaa
lret
das
sbb
sub
les
mov
jnp
push
insb
xchg
sti
mov
dec
popa
mov
lea
dec
ljmp
pushf
sbb
lods
mov
dec
fadd
cmc
xchg
inc
test
xor
test
vpavgb
mov
jno
mov
sub
push
imul
test
xchg
or
inc
pop
out
mov
mov
test
or
or
insl
push
mov
or
push
subb
sub
mov
lret
nop
outsl
ja
out
push
sbb
enter
push
sub
jns
mov
inc
clc
push
lock
arpl
xchg
rcrl
sti
test
es
xchg
mov
xor
dec
das
push
pop
mov
jle
rclb
shlb
xchg
daa
out
test
arpl
jecxz
dec
into
mov
outsb
xchg
aas
aaa
cmp
add
xlat
adc
es
jecxz
inc
and
dec
clc
clc
fbstp
push
push
mov
push
xlat
in
mov
addb
xor
inc
inc
lcall
aam
int
pop
fdivs
inc
jns
scas
insl
fmuls
dec
idivb
jns
push
mov
xchg
test
fisubs
fcompl
mov
clc
pop
inc
shlb
std
mov
cmc
out
arpl
fistpl
inc
outsl
jp
shl
imul
pop
into
fwait
mov
mov
aaa
xor
mov
jnp
adc
ret
rol
repz
imul
xchg
in
lcall
adc
test
xchg
push
js
push
mov
add
dec
jmp
es
hlt
clc
push
fcomip
addr16
mov
mov
scas
orb
push
push
xchg
jge
in
push
or
cltd
aaa
adc
inc
mov
repz
inc
pop
sbb
push
xchg
dec
mov
adc
inc
and
cmpb
adc
scas
cmpsb
aad
add
mov
inc
rcl
test
out
pop
xor
and
cmp
sub
sbb
adcl
ds
pushf
cltd
data16
inc
insb
cmpb
sbb
out
out
ss
xchg
push
popa
cli
mov
add
xchg
push
mov
mov
mov
or
stos
test
loop
loop
fisttps
adc
es
mov
divl
and
adc
xlat
push
orl
iret
bnd
adc
ja
mov
push
sbb
or
lahf
xchg
cmp
bound
scas
cltd
mov
pop
aam
lds
adc
js
gs
movsb
pop
ja
std
mov
dec
cwtl
add
and
fdivs
enter
and
add
or
movsw
or
pop
lahf
ret
mov
mulb
test
cmp
cmp
dec
rcr
push
xchg
hlt
xchg
test
fisttps
mov
dec
xlat
add
insb
aad
ret
leave
xchg
push
or
jp
out
subl
pop
insl
jnp
mov
mov
lea
in
shrb
out
inc
mov
daa
pushf
push
jp
jp
push
cmpsb
push
cmpsl
lret
fs
mov
cmp
inc
out
repnz
rorb
icebp
push
jecxz
add
pop
xchg
mov
loope
clc
loope
pop
sbb
aaa
mov
sub
cmpsb
push
jae
pop
movsb
test
mov
sbb
mov
stos
popl
mov
cmc
xorb
mov
inc
sub
mov
dec
call
add
inc
push
fsqrt
lahf
idivb
fildl
insl
push
hlt
and
hlt
std
add
cmp
cld
les
enter
stos
in
mov
imul
cmp
sbb
mov
or
pop
cmp
adc
inc
fdiv
jl
testl
push
pop
in
cmpsb
js
int
cli
aas
rclb
add
imul
orb
loope
inc
fcomip
inc
push
repnz
dec
movsb
shrl
ret
lret
sti
lds
xchg
aaa
stos
aaa
xor
xor
push
jle
or
fwait
and
push
cltd
popl
adc
daa
out
mov
and
add
cmp
push
add
lret
imul
fstpl
fs
cmpsb
jae
stos
push
rcll
pop
int
lahf
add
inc
adcb
cli
scas
jg
push
cmpsl
mov
ja
mov
push
test
adc
fidivrs
mov
mov
xchg
or
or
adc
fldl
mov
add
mov
add
test
and
sub
mov
jae
dec
mov
xor
pop
inc
insb
inc
pop
dec
out
dec
xorb
mov
sbb
inc
pusha
lds
call
paddb
mov
pop
mov
push
addb
decb
iret
xchg
arpl
adc
aaa
jb
scas
inc
sub
cmp
adc
iret
std
adc
cmp
jl
mov
sbb
cmovnp
inc
xchg
pop
xor
cwtl
xchg
lods
jp
fldcw
cmpsb
jl
ja
mov
push
mov
sbb
test
adc
add
hlt
mov
xchg
mov
dec
sbb
aad
adc
or
cmp
xor
lcall
adc
fwait
pop
xor
cmp
pushf
sub
push
or
js
xchg
push
sbb
std
adc
pop
mov
test
stos
inc
pop
dec
push
mov
push
scas
lret
test
rol
push
addl
imul
mov
cs
fsts
stc
pop
fs
jg
dec
sub
mov
jl
xchg
push
mov
dec
out
xchg
cltd
mov
test
mov
lods
cmp
hlt
push
dec
sub
repz
push
push
pop
push
adc
cltd
mov
in
inc
xor
enter
jge
popf
repz
stos
mov
in
push
mov
ljmp
inc
int
add
cmpsl
imul
push
push
and
std
clc
inc
mov
aam
mov
cmp
pusha
pop
mov
addl
xchg
xchg
mov
movsl
pop
pop
fcom
test
mull
enter
in
mov
add
ss
cmc
mov
mov
pop
and
cmp
jbe
push
jae
mov
push
jns
add
and
cmp
xor
lret
popf
fucomip
into
inc
sbb
rcrb
xchg
aad
jmp
test
mov
ret
mov
movsb
mov
sbb
jmp
sub
pushf
jne
popa
sub
lds
adc
stos
ret
jb
imul
pop
fwait
push
xchg
mov
dec
jl
cmc
movsl
dec
xchg
jbe
mov
pop
call
dec
and
jbe
orb
xchg
adc
mov
adc
shlb
dec
scas
or
cmc
mov
adc
lea
in
scas
hlt
sti
fcmovnu
repnz
xor
in
loope
inc
insl
inc
popf
outsl
jae
mov
sub
pushf
ss
add
out
aaa
push
rorl
mov
aaa
in
xor
cmp
lret
push
pop
lahf
ret
push
pop
lds
push
dec
mov
xchg
push
ret
adc
in
rolb
mov
sub
cmpsl
jno
xor
lods
pop
int
push
shrb
jecxz
and
pop
push
or
jp
xlat
jmp
jnp
pop
mov
fs
sahf
and
xchg
or
xchg
dec
add
outsb
outsl
xor
repnz
lahf
mov
stos
orl
bound
int3
pop
dec
mov
adc
xchg
in
lods
xor
loope
cmpsl
arpl
outsb
pop
imull
push
lock
scas
sbb
dec
sub
imul
pop
push
xchg
mov
pop
outsl
je
jmp
push
je
shrb
sub
loop
ss
pop
push
mov
jp
imul
pop
ret
arpl
call
push
xchg
cs
xchg
je
dec
mov
aas
nop
aaa
add
add
cs
jae
and
inc
shl
xor
les
mov
cli
out
stos
fistps
lahf
xchg
mov
adc
jo
lods
jbe
push
aam
push
stos
stos
inc
pop
sub
bnd
sub
push
cs
pop
jecxz
daa
mov
mov
mov
fsubs
dec
pop
negl
mov
or
lock
xchg
adc
jmp
and
into
adc
ret
xchg
ret
pop
loop
daa
sbb
mov
inc
cmp
xchg
rcr
sbb
cmpsb
nop
aam
aad
insb
mov
aaa
mov
popl
mov
call
cmp
scas
hlt
cwtl
test
cmpsb
adc
or
cs
pop
lods
pop
push
inc
xchg
sbb
ja
sbb
jl
xor
loopne
cld
mov
cwtl
enter
nop
inc
mov
enter
push
mov
mov
fnsaves
push
mov
push
jb
and
stos
iret
hlt
leave
fnstcw
ret
out
out
jg
cmpsl
enter
adc
xor
cmp
mov
frstor
mov
mov
or
cmp
jmp
and
addr16
adc
cltd
mov
incb
inc
xchg
mov
sbbb
leave
repnz
inc
stos
and
mov
xchg
test
shr
sti
or
push
movl
imul
call
dec
inc
fsubp
xchg
inc
in
push
push
push
xchg
cmp
sub
sar
dec
subb
ds
inc
andb
mov
dec
or
add
add
inc
bound
fcmovb
out
test
ds
pop
jge
xor
mov
xor
ror
inc
mov
sub
ud2
pop
fadds
or
scas
or
ss
stc
outsb
and
add
ret
xor
sbb
dec
push
jmp
xchg
adc
into
cmc
sbb
xchg
negl
lret
xor
repnz
or
or
pop
test
bound
shl
je
and
push
xchg
mov
or
and
outsl
lock
shll
xchg
xlat
nop
stos
dec
mov
std
mov
push
jmp
pop
mov
pop
mov
mov
fdivs
push
into
nop
je
lock
in
cltd
mov
xchg
jmp
jmp
pop
sub
repz
test
xchg
and
cmp
ds
cmp
neg
xor
xchg
test
pop
fistps
and
orb
push
lods
push
sub
mov
int
pusha
loop
xor
loope
int3
mov
fisttpll
cs
adc
sub
jnp
jno
movsl
cwtl
leave
fs
sbb
je
mov
test
fisubl
movsb
push
scas
mov
ljmp
pusha
mov
popa
xchg
neg
dec
dec
test
stc
adc
pop
dec
dec
loopne
pop
lahf
cli
jecxz
mov
in
push
fcom
in
loopne
push
pop
or
or
pushf
imul
sbb
jne
or
test
stos
jne
xchg
int3
push
xchg
cmp
or
daa
hlt
pusha
mov
push
pusha
add
and
jmp
mov
pushf
mov
in
add
cmp
inc
and
daa
lret
pop
nop
shll
sbb
cmp
push
mov
add
push
mov
pop
std
shl
inc
pop
pop
and
pop
in
ret
push
cli
popf
fldenv
xor
iret
shrl
inc
in
sbb
popf
in
inc
mov
jnp
push
xlat
mov
inc
pop
stc
sub
mov
mov
add
sbb
push
mov
call
push
and
adc
mov
jp
insl
xor
mov
cld
lcall
cmc
fdivrl
xor
iret
pusha
loope
and
sbb
push
aas
pop
pop
cmp
mov
dec
call
orl
loope
mov
jmp
or
xor
mov
dec
je
fldenv
sbb
xchg
negl
addr16
jecxz
mov
mov
shlb
cmp
popa
std
out
jae
stos
lods
or
mov
into
push
push
jne
shl
mov
in
shll
int3
dec
outsb
divb
jg
jg
pop
test
inc
sub
and
push
adc
adc
add
mov
and
shrb
add
sub
lret
dec
cmp
dec
scas
adc
push
cmpsl
cli
cmp
inc
aad
out
push
jg
popa
jge
jae
hlt
ljmp
sub
sti
push
insl
inc
cmp
leave
rcrb
or
sub
pop
outsb
xor
outsb
sarl
outsb
repz
jl
in
imul
dec
dec
loope
sub
in
dec
mov
xchg
cmpsl
mov
mov
divb
arpl
jb
cld
aam
mov
mov
jl
dec
and
mov
xchg
repz
loop
mov
xor
lahf
in
data16
pop
pop
aaa
or
lods
scas
jge
aad
jo
sbb
inc
call
icebp
mov
call
mov
xchg
add
incl
cmpsl
and
jmp
fst
cli
cmp
out
sub
stos
sbb
or
divb
out
mov
fdivrs
scas
sbb
push
adc
inc
jecxz
sub
rolb
ret
imul
mov
iret
je
add
daa
into
fisubrs
mov
lahf
lahf
mov
dec
or
adc
lahf
mov
add
loopne
test
icebp
add
jae
dec
pop
shlb
pop
rol
aam
int3
roll
mov
cmp
pop
pop
mov
daa
pop
adc
mov
pop
ljmp
adc
inc
loop
lret
fdivrl
mov
data16
jecxz
in
and
or
push
or
movsb
dec
push
mov
test
add
fidivs
mov
cmpsl
daa
mov
lahf
xlat
ja
pop
add
mov
cmp
cmp
pop
or
jne
icebp
popl
roll
xchg
jl
roll
pop
jne
adc
mov
mov
lds
nop
sti
shr
xchg
pop
repnz
jle
mov
jecxz
out
je
sub
ficomps
mov
lds
daa
xor
int
cmpsb
leave
stc
add
xor
in
fistpl
cmpsb
jnp
dec
repnz
xchg
adc
pop
sbbb
pop
loop
es
mov
es
fs
aaa
push
ret
imul
push
cltd
leave
clc
pop
sbb
pop
pop
out
add
leave
xchg
sub
stos
mov
out
aad
repz
mov
popa
dec
xchg
bound
movsl
and
outsl
xor
scas
push
cmpsl
adc
inc
in
shlb
add
xor
out
cmpsb
mov
jo
in
jbe
xor
and
lret
out
mov
sbb
insl
add
aam
fdivs
adc
out
stos
mov
ret
dec
sub
adc
mov
add
push
dec
xchg
xor
jle
outsl
pop
mov
stos
mov
jae
sub
out
ror
pop
sub
adc
iret
mov
xchg
nop
cs
bound
jmp
xchg
sbb
imul
std
or
add
cmc
into
fcmovbe
push
push
push
call
shlb
cwtl
clc
xchg
pop
sarl
movl
and
dec
sbb
mov
pop
inc
jno
push
aad
leave
nop
sbb
hlt
mov
ja
push
hlt
call
xchg
xchg
enter
fst
loope
xchg
mov
popf
pop
add
xchg
push
lods
cltd
and
add
push
cwtl
leave
mov
inc
xchg
das
dec
xchg
sbb
jg
test
fwait
in
push
sbb
xchg
cmpsb
inc
insb
test
scas
adc
xchg
or
jbe
or
lea
stc
dec
lahf
lret
mov
mov
sar
popa
push
test
mov
add
int3
test
adc
jnp
lods
lea
sbb
inc
fnstenv
push
pop
sbb
lods
mov
iret
mov
sub
sub
mov
cmp
or
mov
dec
adc
pusha
sub
cmp
mov
and
daa
outsl
pop
push
jnp
jae
push
inc
iret
jno
jns
sbb
cmp
push
adc
mov
inc
lret
dec
cld
stos
test
xchg
cmpsb
pop
lock
jbe
cmc
ja
mov
clc
or
mov
clc
fcomps
fs
sub
ds
mov
mov
push
jnp
repz
push
in
cmpsb
aaa
test
rol
mov
jo
test
repz
int
repnz
aam
push
pop
int3
add
mov
jge
stos
das
repz
into
cmp
and
int3
idiv
jne
mov
push
icebp
mov
out
nop
jg
nop
xchg
jecxz
sub
lods
in
popa
push
aas
cli
out
sub
and
jne
ljmp
jb
push
out
mov
and
sub
jmp
push
rol
orl
mov
scas
insb
pop
cli
repnz
inc
and
outsb
repnz
ss
xor
fs
addr16
pop
mov
jp
push
and
and
cli
sbb
pop
sahf
fidivs
mov
int
inc
enter
ret
loopne
into
jno
xchg
adc
mov
mov
push
cwtl
es
lcall
enter
insb
dec
adc
dec
sub
icebp
push
ss
cmp
pop
jno
xchg
and
sub
cltd
icebp
int3
mov
xchg
std
scas
xchg
pop
jne
pusha
mov
or
jnp
lds
and
push
jl
mov
mov
inc
data16
dec
in
ret
cmp
int
jge
xorl
out
cmp
push
add
push
test
mov
fstpt
sbb
jp
mov
pushf
dec
enter
call
lds
mov
fstps
lcall
aas
mov
inc
lahf
fldt
xchg
push
out
lcall
nop
mov
fdivrs
fldcw
fcompp
aaa
cmpb
sti
pop
add
out
push
xchg
imul
repnz
aas
scas
in
fmuls
jl
pop
pop
xchg
test
iret
orb
push
stc
mov
icebp
out
aaa
mov
cli
sub
ja
aam
xor
push
add
ljmp
xor
fists
pop
jns
aam
out
and
cmp
imul
cmp
xchg
aas
adc
dec
lret
sahf
or
lret
jl
iret
push
add
clc
lahf
or
pop
outsb
push
mov
repnz
aam
cmp
stos
lret
repz
imul
sbb
and
mov
add
inc
mov
ds
lcall
dec
mov
out
push
pop
cwtl
jg
call
int
push
mov
js
pop
faddp
push
fsubr
popf
adc
xor
dec
mov
aaa
fnsave
push
flds
xchg
and
or
mov
arpl
mov
jb
std
test
and
out
adc
pop
sub
or
jno
addr16
xor
add
es
les
or
mov
int3
fiadds
mov
or
lahf
roll
clc
jl
gs
push
gs
repnz
adc
mov
and
sub
cmpsb
jl
scas
dec
lret
negb
fnstcw
hlt
hlt
cmp
gs
subb
jo
push
lret
cmp
dec
ror
fimull
fdivp
fstpl
ss
in
and
add
scas
lods
mov
add
ljmp
sti
sbb
xor
das
sbb
add
add
shll
fstpl
popa
inc
xchg
mov
sub
jp
xor
push
xor
jp
push
rorl
mov
push
and
repz
and
pop
shrl
fildll
leave
into
inc
jge
aam
bound
stos
loopne
xchg
das
mov
inc
mov
outsl
jmp
push
lock
js
mov
dec
or
push
or
hlt
fs
in
ljmp
add
dec
ljmp
out
imul
jbe
lret
repnz
or
out
mov
inc
sbb
xlat
add
dec
push
in
ret
aad
shll
scas
lcall
sub
mov
xchg
and
pop
lahf
sub
mov
pop
lods
jns
popa
xor
es
scas
out
imulb
icebp
add
sub
add
xor
sbb
cld
push
lret
inc
mov
call
rcr
xchg
sbbb
scas
jecxz
xchg
or
xchg
into
push
xchg
lods
mov
pop
scas
pop
cwtl
mov
pop
cmp
mov
xchg
jnp
dec
mov
shrl
cmp
jge
add
lock
out
adc
rep
movsb
sub
push
icebp
dec
mov
sub
sub
dec
mov
jb
fisubrl
into
mov
push
or
out
sub
lods
divb
lods
mov
hlt
sbb
repnz
outsl
mov
stos
add
movsl
loopne
xor
xchg
mov
push
ss
hlt
mov
loope
into
lock
push
loope
cmp
lods
xchg
es
xchg
mov
aam
mov
stc
rcrl
sub
add
pop
test
fsubrl
jecxz
add
xor
arpl
je
test
mov
cld
fstl
dec
pusha
xchg
mov
xchg
pop
dec
sbb
push
shl
outsb
xor
push
and
icebp
test
nop/reserved
sbb
inc
xor
inc
sub
sbb
test
insb
dec
push
cli
mov
aaa
push
das
outsl
jg
jns
popa
movsl
adc
and
subb
in
ror
sub
mov
jae
shll
sub
inc
xor
test
in
imul
push
lret
jg
sub
leave
stos
adc
dec
dec
andb
hlt
add
mov
repz
jge
mov
ja
iret
push
leave
pop
fsubrs
pop
add
ret
rcr
cmp
js
js
call
mov
loopne
in
add
arpl
loop
lret
jns
into
cmpsl
call
dec
and
pop
push
pop
push
adc
daa
dec
jbe
inc
mov
sub
and
popf
cmpsb
push
popa
dec
in
xchg
shlb
mov
fbstp
test
aam
out
sbb
dec
mov
loop
and
cmp
lcall
lock
cmp
in
push
cmp
enter
xchg
rorb
mov
mov
sub
dec
lret
mov
aam
and
xchg
arpl
pop
jle
repnz
jbe
pop
adc
mov
push
loope
rclb
fadds
iret
sub
push
cld
jns
int3
mov
loopne
mov
xchg
jge
cmp
add
xor
adc
push
add
scas
sbb
in
mov
mov
fbstp
pop
and
pop
gs
imul
jo
nop
ss
cmp
cli
cwtl
test
lea
stos
pop
cltd
nop
mov
loope
or
sub
xchg
lret
rol
sub
add
inc
mov
xlat
mov
mov
sub
adc
xor
imul
pop
fistps
mov
jecxz
mov
jg
push
outsl
inc
adc
or
lock
jb
sti
cmp
adc
xlat
xor
imulb
jno
jbe
xor
andl
gs
out
rcl
pop
push
nop
xchg
push
add
ret
in
rcrl
cli
mov
inc
cmp
cltd
flds
xchg
and
cli
or
xor
out
call
dec
lcall
mov
xchg
push
pop
mov
xchg
popa
adc
in
add
and
stos
xor
out
cs
push
mov
fs
jo
shr
sub
mov
or
outsb
sahf
aam
adc
fcmovbe
sbb
cmpsb
neg
mov
pop
aas
inc
cmpsl
js
xchg
stc
mov
dec
arpl
dec
push
fidivl
scas
leave
add
dec
or
in
aas
cmpsb
pop
and
dec
xor
and
into
jmp
push
fwait
lea
sbb
stc
xor
aad
cmovge
daa
ror
lds
pop
leave
lds
dec
icebp
mov
lods
xchg
dec
dec
inc
insb
inc
jge
dec
bound
mov
adc
fmulp
jmp
sub
fldl
loopne
je
jl
hlt
xchg
jns
arpl
push
int3
sti
outsb
cli
xor
js
sbb
ja
pop
jp
or
push
mov
mov
pop
int3
mov
fwait
sbb
push
jg
fisubrs
mov
lret
push
dec
push
cmp
xlat
pop
stos
mov
pop
or
out
pop
lret
repnz
xchg
and
mov
ds
add
mov
mov
ds
loope
sbb
mov
gs
addr16
repnz
add
ss
mov
mov
pop
out
and
add
adc
imulb
mov
xor
ret
out
or
sub
repnz
out
adc
push
xlat
or
pop
repnz
movsl
adc
push
mov
pop
adc
test
scas
jo
pop
test
adc
outsl
inc
sar
movsl
andl
repz
mov
out
xor
inc
sbb
cmpsl
fsubl
mov
xchg
mov
xlat
cmp
je
dec
push
jge,pt
es
js
int3
jne
inc
mov
cmpsl
in
roll
aas
xchg
mov
mov
popf
out
ja
mov
pop
jl
push
jnp
pop
stc
add
aam
pop
pop
cwtl
push
pop
add
pop
enter
add
movsb
cwtl
dec
jl
mov
mov
mov
andl
outsb
pop
dec
xorl
subl
push
inc
scas
scas
xchg
loop
cmp
ss
test
popa
mov
out
inc
xor
adc
sub
lcall
pop
das
push
pop
aad
orl
jp
jl
mov
cmp
mov
cmp
es
jno
jnp
mov
or
push
adc
pop
loop
pop
enter
pop
lret
data16
add
addb
ss
cltd
mov
in
xor
jmp
test
push
paddusb
inc
xchg
inc
ret
arpl
sbb
sub
and
cmp
and
cmp
adc
imull
inc
or
jge
scas
add
into
in
fadds
test
sub
or
dec
dec
dec
pop
mov
xchg
sti
fldl
push
cmp
xchg
mov
js
sahf
test
or
mov
in
sub
dec
aad
push
dec
in
popf
pop
sbb
or
push
mov
repnz
fdivl
adc
mov
int
and
cmc
cmpl
pop
sbb
mov
sbb
jbe
fdivl
roll
lcall
push
addl
stos
cwtl
imull
movsb
mov
cld
xor
add
aad
pmulhw
outsl
or
jge
test
lds
or
sbb
xor
pop
sbb
mov
out
jnp
dec
jmp
jmp
adc
fsubl
mov
insb
adcl
xor
push
sbb
mov
dec
cmp
in
cmp
pop
into
sbb
cmc
std
mov
add
mov
cs
imul
inc
lcall
push
movsb
movsb
dec
xlat
pop
cmpsb
and
push
jecxz
sbb
fwait
push
pop
cmc
mov
push
sarl
icebp
push
enter
lea
cmp
lret
lods
addr16
imul
push
jmp
stc
dec
dec
inc
aas
pop
out
cwtl
test
push
xchg
in
mov
fst
sbb
mov
test
aas
cmpl
movsl
xor
jb
add
mov
aam
push
jns
mov
dec
jb
aas
addb
std
dec
mov
call
inc
xchg
pop
aas
insb
clc
dec
mov
ja
imul
sahf
ret
pusha
enter
pop
in
xchg
mov
iret
or
pop
jns
aam
mov
cmpsl
sub
mov
jle
inc
movsb
push
ss
mov
xchg
fidivrl
inc
sbb
mov
push
stc
fcmovnb
stc
nop
icebp
mov
xchg
outsl
jbe
xchg
sarl
dec
pop
mov
sub
and
stos
inc
and
cmp
pop
pop
push
cmc
sub
mov
hlt
inc
fwait
iret
in
hlt
arpl
movsb
ret
arpl
dec
sub
push
inc
sbb
xor
cs
shr
pop
scas
mov
pop
cmp
popf
movsb
lret
test
jmp
or
adc
hlt
jp
add
repz
xchg
imul
hlt
mov
pusha
ret
insl
jae
insl
cmp
leave
stos
leave
fildl
push
fcom
dec
lret
sbb
daa
mov
cwtl
jmp
sbb
in
mov
and
addl
rol
sub
scas
push
lea
ljmp
mov
pop
ja
das
cmp
popa
xchg
cltd
inc
jle
mov
dec
popf
dec
jo
popa
inc
push
mov
add
adc
push
push
sahf
loop
fildl
rolb
outsl
jp
sub
out
loopne
sub
sub
in
mov
pop
mov
in
jnp
lea
lret
sub
ljmp
call
aaa
adc
clc
adc
stc
jmp
cmpsb
sarl
or
mov
jno
xchg
push
cs
stc
pusha
icebp
lods
sbb
jecxz
pusha
sarb
lea
ret
sbb
dec
icebp
and
mov
outsl
das
or
pop
stc
and
sbbl
mov
sahf
lock
sub
inc
lcall
mov
test
aam
push
xchg
lahf
shll
push
test
gs
jl
fs
cmp
fistpl
mov
dec
les
jp
add
jbe
mov
outsl
mov
dec
push
jmp
test
jbe
lret
inc
pushf
and
mov
jg
bound
push
add
fwait
pop
xchg
and
fnstenv
imul
or
cmp
test
cmp
scas
and
dec
jbe
out
movsl
cmp
dec
fld1
je
jae
adc
xchg
popf
imul
popa
int
dec
rcll
aaa
sub
rolb
cmp
dec
adc
int
test
jmpw
ja
mov
lret
xchg
sbbl
out
jae
push
jmp
mov
or
mov
in
xor
mov
sub
dec
dec
dec
mov
push
int
les
adc
cli
sbb
jle
xchg
leave
into
mov
mov
cltd
pushf
adc
push
push
add
jp
mov
fadds
stos
imul
adc
jl
and
xchg
into
jmp
sub
movsl
or
push
sbb
sbb
test
andb
jns
and
loope
xor
adc
sbb
and
faddl
fstpl
jo
pop
mov
repnz
and
cmc
inc
push
jb
fidivrl
mov
mov
jb
lcall
js
out
rorb
mov
dec
jno
jno
lcall
and
aaa
and
stos
mov
std
pop
icebp
sbb
in
fcoms
pop
cmp
loope
js
aam
and
andl
fnstenv
rolb
rcr
mov
sahf
arpl
xchg
cmp
inc
call
xchg
movsb
pop
adc
out
and
fsubrs
jns
scas
pop
dec
inc
or
mov
aas
mov
out
xlat
outsb
test
mov
mov
les
in
insb
xor
cmp
je
lret
push
push
xor
cli
cmp
xor
test
jp
stc
dec
rcrl
repz
fwait
push
xor
fldcw
adc
jmp
jno
das
sub
ja
repnz
ret
pop
sbbb
fisttpl
scas
icebp
mov
out
addr16
shll
mov
bnd
ret
add
mov
jp
out
xchg
std
sub
mov
dec
mov
ret
push
cltd
repz
pop
jbe
inc
xchg
jb
sbb
subl
push
mov
les
cmp
and
call
mov
lods
jmp
and
outsl
mov
cmp
ja
loope
push
dec
das
push
pop
aas
shll
scas
imull
add
and
mov
jb
push
loopne
push
nopl
pop
adc
lret
push
dec
or
adc
imul
mov
cmp
dec
push
in
pop
mov
inc
and
inc
cmp
inc
outsb
mov
xchg
sbb
or
add
insb
les
pusha
pop
loop
dec
jns
push
in
add
pusha
or
and
push
or
jbe
fwait
ljmp
fsubl
mov
fucom
hlt
pop
mov
inc
in
add
je
push
dec
jle
jo
in
adc
push
cmp
push
in
leave
fidivrl
mov
outsl
sub
fistl
mov
xchg
xchg
pop
mov
mov
jns
cmpsb
or
call
scas
mov
sti
dec
loopne
aam
loop
fbstp
adc
ljmp
xor
nop
icebp
mov
or
jl
push
rcl
push
inc
out
xchg
aad
or
inc
sarl
in
andl
mov
fwait
dec
lea
shll
std
fstp
dec
push
xchg
or
icebp
push
inc
mov
sahf
mov
stos
sar
xchg
mov
in
sti
mov
shrl
inc
stos
lcall
nop
and
xchg
loope
sbb
mov
jne
cmc
in
dec
jmp
jnp
enter
add
addr16
fcomi
out
popa
out
ror
shl
insl
movsb
jmp
test
sarb
xchg
xchg
outsb
mov
stos
and
sub
fisubrs
daa
or
stos
sub
xor
loopne
movsl
aaa
jg
fisubl
dec
or
addr16
xlat
clc
jne
adc
jp
in
out
fimull
cmp
orb
mov
lahf
xor
imull
aas
mov
xchg
xchg
xor
pusha
adc
cmp
pop
dec
enter
sub
gs
icebp
inc
ret
loopne
dec
outsl
mov
adc
outsl
jbe
dec
outsl
testb
fistpll
push
clc
daa
mov
sub
in
and
sbb
adc
sti
mov
jmp
cmp
xlat
xchg
outsl
dec
sbb
cmp
into
mov
out
add
mov
and
jp
or
jne
mov
outsl
pop
dec
test
aas
pop
scas
or
or
mov
jmp
push
jnp
mov
dec
adc
loop
fdivl
xorb
cmp
dec
aad
or
xchg
pop
in
testb
xor
pushw
test
daa
mov
push
or
inc
add
or
xor
dec
rclb
dec
sub
loop
add
in
adc
fisubl
inc
xchg
outsb
sti
xchg
inc
push
adc
stos
insb
pushf
sub
arpl
lret
mov
cld
jle
movsl
gs
push
icebp
ja
xor
sub
dec
orb
sysret
cmp
stos
pop
loopne
movsb
test
fisubrs
or
data16
xor
scas
popf
pop
cmc
icebp
mov
enter
adcl
jne
dec
xor
jg
sti
in
mov
mov
pusha
sub
loopne
fadds
xchg
add
mov
repz
cmp
xchg
dec
or
lret
cmp
mov
adc
sahf
push
repz
and
incl
or
dec
outsl
cs
rcrb
pop
mov
xchg
jbe
sub
xchg
sbb
push
xor
stos
arpl
jo
inc
test
push
pop
pop
jno
mov
adc
movsl
dec
mov
adc
sbb
pop
lea
xor
sti
xor
lret
jns
mov
mov
adc
xchg
xchg
sbb
mov
sub
in
jnp
call
cld
and
add
jmp
xchg
push
loop
mov
pop
dec
mov
sbb
ds
andb
enter
arpl
gs
sub
pop
out
cwtl
dec
mov
push
imul
lods
xor
aam
pop
das
cmpsb
divl
jns
movsl
in
cmc
add
mov
pop
adc
xchg
mov
mov
adc
mov
mov
pop
pop
test
je
fidivrs
enter
mov
movsb
and
sbbl
push
lret
xchg
lcall
aaa
and
imul
lret
pop
fsubl
mov
jae
lds
cltd
and
addr16
jae
fcom
mov
add
jmp
lahf
mov
or
sbb
loopne
dec
or
bound
cmpsl
cwtl
arpl
pop
mov
stos
or
dec
fidivrl
and
lods
adc
mov
mov
out
cld
mov
jmp
lds
add
arpl
out
test
push
sbb
ficoml
js
mov
cmp
shll
mov
scas
or
add
std
mov
ds
out
loope
leave
test
jnp
xchg
jge
inc
inc
into
icebp
or
loope
sbbl
out
jmp
in
lea
and
push
sbb
fistpll
outsl
repz
sbb
and
ljmp
xor
rcrl
jmp
sbb
push
mov
pop
mov
sbb
mov
lcall
cmpsb
pop
sub
in
mov
push
xor
or
ss
cli
cld
sarl
dec
stos
jne
fildl
jecxz
add
js
out
adc
sub
das
xor
pop
arpl
adc
sub
xor
add
cli
pop
scas
in
fs
pushf
push
popf
adc
jecxz
inc
stc
dec
faddl
fwait
jo
push
bound
dec
lcall
repnz
pop
jae
pop
out
out
push
mov
insb
sbb
pop
push
or
adc
popa
hlt
outsl
fs
lods
cmp
lahf
add
add
push
imul
aas
jnp
ja,pn
inc
or
xchg
stos
les
add
sbb
push
and
sub
cmp
aaa
and
push
pop
jecxz
push
neg
inc
dec
dec
cmp
or
mov
js
stc
outsl
scas
xor
push
ss
add
and
filds
and
sbb
sbb
addr16
daa
sti
fcoms
sub
or
pop
add
cmp
call
fucom
into
das
or
or
and
fdivrs
nop
jbe
sbb
mov
enter
xchg
imul
js
or
fwait
aaa
push
pusha
aad
out
xchg
cmp
test
sub
icebp
and
push
cwtl
xlat
loope
fs
add
sub
gs
jne
test
add
ss
adc
fdivrs
add
xor
mov
cmpsb
stos
js
sub
and
icebp
mov
add
push
xor
std
push
andb
mov
mov
xor
mov
cwtl
adc
ljmp
aad
pop
xchg
inc
test
lldt
dec
je
icebp
das
addr16
cmp
pop
sbb
mov
sub
hlt
test
in
xor
cmp
lcall
ret
push
outsl
js
repz
addl
popa
jge
sub
xchg
push
bound
in
pop
mov
je
or
add
inc
bound
push
cmp
data16
sahf
dec
nop
cmc
stos
xor
ds
mov
ljmp
in
sbb
dec
comiss
pop
clc
jecxz
js
xor
bnd
adc
cs
jge
sub
add
out
pop
cmp
jmp
lret
jl
cli
scas
adc
cld
fsubs
xlat
and
out
push
int3
inc
pop
push
add
push
lea
sub
cmp
mov
sbbb
mov
pop
push
cwtl
test
xchg
dec
loop
sti
lcall
mov
or
inc
enter
xor
xor
sbb
imul
jecxz
nop
aad
aad
sbb
bound
push
mov
xor
std
das
jecxz
adc
aad
inc
cmpsl
pop
addb
inc
outsb
out
sbb
stc
scas
bound
mov
ficompl
inc
mov
lea
outsl
jnp
xchg
popa
jns
mov
push
rorl
cli
movl
mov
cmp
adc
hlt
inc
or
dec
xlat
mov
xlat
aas
sub
inc
fcoml
jl
push
lods
pop
lods
call
pop
xchg
hlt
or
mov
inc
sub
in
pop
aad
loop
cmpsl
data16
movsb
in
cmp
or
jb
cli
int
xorl
mov
lea
lret
lods
xchg
mov
outsl
loop
popf
lret
stc
dec
insl
xchg
negb
bound
stos
scas
and
les
cmp
sbb
flds
cwtl
pop
pop
xchg
mov
sbb
jecxz
iret
xchg
push
xor
cmpb
bound
jecxz
outsb
out
repz
movups
int
fwait
dec
std
in
mov
ret
mov
rcl
push
sbb
cltd
stos
mov
adc
mov
and
xchg
js
cmc
add
push
mov
pop
dec
sub
jbe
jae
aas
mov
xor
dec
add
mov
in
or
sbb
xchg
scas
out
mov
mov
pop
xchg
addr16
push
movsb
enter
popa
cmpsb
pop
int
movsl
mov
or
das
cwtl
rcrb
dec
mov
mov
push
fs
sub
outsl
cli
hlt
mov
nop
sbb
cmp
jecxz
pop
sub
subb
mov
mov
push
sub
push
notl
jge
jno
xchg
inc
ja
mov
sub
and
out
jne
push
js
adc
sti
aad
fdivs
lods
xor
sub
shr
lea
repz
fnstcw
xor
ja
stos
and
inc
xor
push
xor
jge
xchg
or
insb
sbb
xchg
fiadds
test
aam
jg
les
inc
inc
mov
add
dec
mov
mov
pop
lds
jp
out
sub
xor
pop
cmp
pop
addb
jg
xchg
push
aam
inc
sbb
cmp
lock
cs
fsubrs
xchg
cltd
jae
ficomps
jmp
loop
push
jg,pt
or
cmpsb
cmpl
fmuls
cmp
int
scas
pop
cmp
cld
jecxz
mov
ds
dec
jbe
cli
jle
xor
mov
fld1
popa
xchg
adc
insb
and
outsl
push
sbb
jae
push
mov
mov
mov
cbtw
inc
mov
fsubrs
aad
and
pop
aaa
cli
call
mov
mov
lods
repnz
jno
mov
aaa
mov
cs
repz
jg
sbb
jno
inc
pop
xchg
jb
mov
xchg
jns
cmp
dec
into
dec
incb
test
or
lods
lea
cmp
add
sub
mov
adc
pop
in
loope
popf
fisubrs
testl
xor
xchg
cmc
mov
and
pop
pop
adc
xchg
dec
out
mov
pop
mov
ss
cmp
mov
xchg
rorb
mov
icebp
add
fs
es
repnz
insl
jo
outsl
jo
out
xor
ljmp
mov
mov
push
inc
rcr
adc
sub
das
arpl
sti
fsts
sub
fstpl
mov
nop
sbb
sbb
add
lods
push
jbe
fbld
push
shrl
outsl
push
in
test
aas
sbb
out
inc
push
nop
mov
test
dec
and
shll
sub
jae
addr16
cmp
jmp
pop
inc
popf
fisttpl
mov
movsb
jns
adc
inc
sti
mov
mov
sub
imul
jmp
orb
cmpl
inc
lret
xchg
in
inc
es
cwtl
sarw
jg
mov
cmpsl
rep
add
or
aam
inc
add
shr
leave
dec
cmpsb
pop
and
inc
sbb
xchg
jae
mov
sub
jno
and
or
and
push
mov
jp
jg
xchg
push
inc
out
sbb
aas
add
pop
aam
fldcw
mov
adc
pushf
dec
push
adc
sbb
inc
add
add
sub
mov
addl
test
addl
sbb
xor
jmp
imul
movsb
lea
cmp
lods
push
and
adc
sti
dec
pusha
jecxz
fs
dec
test
cmp
fisubl
jg
hlt
add
inc
in
das
ljmp
es
pop
cmc
call
and
fists
mov
popf
stos
imul
ja
lods
ret
sbbb
cwtl
jnp
pop
fnstenv
out
shl
test
imul
and
gs
sub
into
fiadds
xor
pop
shrb
bound
cli
cli
lret
cld
fcom
test
xchg
imul
in
fsubl
sar
movsl
push
fisttps
je
sub
dec
jae
pop
stc
rorb
cmp
mov
dec
jns
xchg
mov
push
xor
lcall
push
jl
mov
aas
xor
loop
inc
xchg
fimull
pop
testb
inc
jge
movsl
xchg
int
and
dec
jne
lret
dec
pop
inc
or
es
mov
call
inc
aaa
or
mov
pop
mov
in
jno
cmp
adc
shll
icebp
loope
es
aaa
enter
fstl
or
mov
ja
mov
inc
sub
outsl
cmp
out
cmp
mov
stc
adc
pop
cli
lock
imul
and
mov
aad
sub
jle
push
cmp
outsb
jp
jnp
adc
cli
lds
jae
jo
pmaxsw
idivb
xchg
test
jle
push
jmp
fcomi
pop
push
push
add
pop
xor
loop
cmp
dec
data16
jmp
cmp
outsb
ret
cmp
movsb
cmp
in
movsb
icebp
cld
enter
add
jno
inc
adcl
push
xor
push
inc
ror
sbb
lds
ja
nop
push
in
jne
lods
jno
outsb
lahf
enter
pop
mov
sbb
out
es
jg
out
xor
adc
or
dec
pop
into
imul
ljmp
sub
xchg
add
out
in
xor
xchg
or
cwtl
jb
out
mov
pop
jae
adc
addr16
cmp
pop
stc
ss
push
testb
int3
inc
adc
jne
sub
adc
jge
jl
sbb
or
fildl
adc
enter
scas
sub
pop
cmpsl
jmp
inc
sub
loope
push
hlt
hlt
mov
mov
mov
inc
xor
out
rcrb
call
xchg
xchg
mov
dec
ficoml
stos
mov
out
fstps
popa
bound
icebp
cmp
js
adc
clc
imul
iret
scas
mov
mov
lds
cltd
enter
push
stos
daa
or
fldenv
icebp
aad
andb
pop
fists
mov
mov
ljmp
push
stc
cmp
xchg
xchg
testb
enter
adc
cmp
push
mov
or
and
push
jge
mov
jle
popf
aaa
xlat
cmpsb
jae
mov
jmp
cwtl
mov
dec
mov
loope
scas
sbb
jae
aaa
mov
add
sbb
test
xor
popf
adc
popf
or
xor
sub
mov
adc
add
test
sub
xor
bound
jnp
pop
or
sub
addr16
stos
movsb
dec
mov
es
loope
mov
jo
mov
lds
or
and
add
loope
outsl
cs
bound
sti
add
and
repnz
inc
insl
jge
sbb
loope
call
popf
sub
pop
jo
sbb
sbb
mov
lods
dec
mov
adc
lock
push
jmp
inc
jae
mov
leave
pop
mov
mov
pop
pop
mov
mov
jge
daa
jg
std
mov
outsl
pop
pop
jg
or
int3
lods
add
test
jns
out
outsl
mov
lret
add
adc
icebp
mov
insb
xor
hlt
stos
int3
fmuls
es
out
or
cmp
lahf
inc
in
ja
pop
inc
xor
cmpsl
cmpsb
xchg
cmp
lods
leave
push
xchg
pushf
mov
xlat
mov
mov
in
nop
sbb
adc
push
add
add
stos
stos
xchg
iret
lret
lods
and
call
push
jne
rol
jge
mov
mov
aad
lods
cmp
sahf
ss
adc
out
inc
daa
jbe
fs
push
imulb
mov
dec
iret
push
out
outsb
mov
jnp
lea
hlt
adc
fwait
xor
stos
pop
roll
jnp
lock
adc
mov
rcrl
ds
sahf
fisubrl
rcrl
stos
push
bound
and
inc
cmpsl
jno
mov
push
xchg
sub
dec
aas
lea
mov
jge
das
add
ret
into
jge
sub
ficompl
lods
fistps
xor
pop
int3
movb
mov
mov
sub
imul
or
push
sbb
insl
cmp
hlt
xchg
or
mov
enter
pop
lret
outsb
mov
and
mov
add
cwtl
int3
test
lods
mov
jg
lret
jns
loopne
push
jecxz
in
test
push
sub
mov
gs
clc
jl
outsl
ss
or
cmp
pop
ja
dec
push
int
jno
or
cmc
push
cli
add
add
inc
jp
mov
imul
arpl
add
arpl
js
adc
xchg
cmp
or
out
adc
add
mov
mov
stos
jg
xor
sahf
jo
mov
mov
push
push
imul
out
jo
dec
cmpsl
inc
repnz
fdivrs
mov
in
jb
jge
ja
xlat
add
xchg
adc
lods
adc
daa
ja
jae
mov
sbb
icebp
xchg
xorl
jo
out
into
mov
enter
xor
xor
push
cmc
out
lahf
mov
mov
adc
mov
inc
sub
sbb
repz
notb
in
loopne
dec
stos
push
add
fcompl
rclb
dec
adc
lods
iret
pop
cmpsl
inc
into
pop
lcall
jmp
adc
pop
mov
fbstp
mov
mov
push
pop
cwtl
add
loop
imul
scas
sbb
lods
std
add
addb
mov
and
push
mov
mov
sub
testl
cmp
je
stos
lcall
stc
addl
aam
xchg
xchg
ds
push
jl
and
sub
xchg
jecxz
jg
push
loope
mov
cmp
adc
mov
sbb
shrb
and
adc
test
cmp
mov
mov
idivl
callw
inc
jo
sbb
jo
cltd
xor
cmpsl
jb
out
jnp
xor
inc
arpl
stos
fcoml
jp
xchg
xor
sbb
leave
xor
mov
pusha
std
icebp
mov
addr16
mov
mov
out
lea
adc
filds
insl
xchg
std
test
aam
adcb
out
mov
cmp
fsubl
jg
cmpsb
sub
pop
repnz
imul
xor
shll
aad
push
push
inc
mov
ret
pop
shrl
dec
xchg
lret
jbe
ficompl
inc
imul
ljmp
test
daa
int
pop
jg
fs
loopne
ja
ja
mov
xchg
adc
data16
cmpsb
popf
adc
xorb
mov
xor
dec
sbb
in
cli
loope
icebp
inc
xor
xor
push
mov
fdivr
jecxz
dec
cmp
dec
je
pop
loope
sti
lret
ljmp
adc
pop
call
repnz
dec
or
sbb
pop
in
xor
js
inc
sub
push
push
push
xlat
or
cmpl
push
add
mov
das
icebp
adc
sbb
es
inc
push
jle
mov
cmp
aaa
sub
lock
arpl
popa
sti
push
pop
jo
movsl
lahf
xor
cmp
or
dec
inc
outsl
loope
mov
push
xchg
clc
je
xchg
fsubs
bound
dec
inc
shr
or
xor
daa
mov
jne
scas
loop
scas
mov
imul
mov
lods
test
xchg
mov
mov
xor
popa
stos
rol
jb
xor
rcl
repz
data16
hlt
je
test
sbb
dec
add
push
push
mov
mov
pop
fs
sbb
adc
or
mov
cli
es
adc
pop
in
cmpsl
sbb
sti
and
arpl
dec
cld
packssdw
popf
pop
cmp
adc
push
cltd
test
decl
xor
mov
scas
test
pop
xor
jecxz
iret
and
pop
iret
or
mov
dec
lret
or
lcall
ja
pop
jnp
jnp
mov
and
imul
xor
lods
mov
out
stc
mov
aas
test
lahf
aad
std
in
mov
int
pushf
je
pop
mov
out
xlat
push
ficomps
adc
sub
arpl
shlb
push
xchg
dec
addr16
pop
sub
jl
fs
xchg
dec
or
xchg
mov
jb
sarb
pop
shll
inc
sbb
fistl
stc
push
ss
jb
xchg
loope
dec
aas
and
aad
orl
add
xchg
sbb
adcb
lcall
mov
or
jg
push
mov
inc
pop
out
jge
popf
adc
jecxz
aaa
push
cmp
daa
movsl
sbb
and
or
test
push
sub
in
sub
mov
jno
es
xchg
jne
xchg
popf
sbb
pop
fwait
adc
adc
movsb
sub
xorl
adc
sub
aaa
mov
lea
mulb
adc
sub
and
push
mov
movaps
getsec
mov
add
js
and
xchg
hlt
lea
adc
sarb
sub
out
and
out
js
ja
iret
inc
xchg
decb
cmp
sarb
or
cs
pop
mov
xor
stos
and
or
or
ljmp
roll
test
pop
mov
or
addb
and
out
test
fmulp
xchg
std
out
clc
arpl
arpl
push
iret
ds
imul
and
xchg
mov
aaa
add
xchg
lret
inc
mov
testl
xor
pop
xchg
stc
xor
adc
dec
call
push
pop
testl
lret
push
push
cmp
aas
jecxz
in
mov
jmp
pop
mov
push
lods
xlat
or
cld
int3
pop
lret
call
clc
sub
int3
outsb
adc
es
fcmovbe
and
mov
inc
clc
xchg
jmp
fstps
out
pop
andb
push
rdtsc
notl
jle
pop
fimull
sub
adc
in
orb
std
rclb
mov
stc
aad
sahf
mov
push
add
jmp
inc
cli
imul
sub
pop
fldl
fdivr
cmp
sti
or
jle
repz
hlt
stos
sti
add
dec
pop
enter
add
adc
inc
ds
xchg
jl
xor
imul
jnp
pusha
sbb
stos
faddl
jge
sub
jmp
sti
add
jnp
xor
test
xchg
add
rcl
clc
fnsave
mov
fistl
and
push
cmpb
jne
xor
and
aam
mov
arpl
xchg
and
mov
cmp
lahf
pop
sub
outsl
mov
lahf
das
ss
xor
data16
push
mov
fsts
dec
insl
jecxz
sarb
xchg
push
and
movsl
inc
adc
adc
cmp
data16
testb
lock
fldcw
dec
mov
mov
or
ss
sarl
jo
pop
dec
inc
cmpsb
nop
test
fcoms
out
ret
pushf
and
jmp
fnsave
mov
loope
sbb
add
jae
addr16
iret
jne
loope
inc
fadds
je
popf
inc
jnp
mov
inc
scas
in
out
cmpsb
insl
xor
or
gs
sarl
pushf
dec
xor
xor
dec
push
lret
sbb
sub
das
sub
pushf
jmp
imul
out
inc
adc
jmp
aad
mov
stc
mov
pop
cmp
aam
xchg
gs
test
push
push
dec
sub
dec
dec
xchg
negb
sub
add
fildll
cmp
dec
fbstp
xchg
loop
out
adc
jb
mov
scas
and
mov
add
or
lahf
psubw
mov
xchg
popf
fisubrs
xchg
lahf
add
pop
xchg
cli
push
pop
aaa
add
icebp
cltd
jbe
dec
mov
dec
maxps
inc
fmulp
repnz
xchg
adc
or
faddl
mov
out
sbb
add
dec
mov
sub
pop
sbb
mov
lods
xchg
pop
dec
xchg
inc
ret
xchg
sti
popf
nop
js
jmp
xor
jo
add
test
in
clc
mov
sbb
cmp
xchg
jns
lret
dec
div
sbb
push
arpl
adc
ja
les
sub
clc
fistpl
rcll
loop
jg
pop
dec
les
enter
test
orb
push
out
mov
into
pop
ds
ja
pop
movsb
es
pop
out
or
mov
in
pop
jp
cmp
mov
iret
mov
les
loopne
cltd
pop
dec
xchg
add
pop
xor
pop
aas
lret
outsb
loop
dec
les
ljmp
jb
aas
fwait
outsl
imul
xchg
mov
ret
fcoms
push
ror
mov
jg
or
cmp
adc
mov
push
jb
dec
xchg
aad
fcoms
inc
xchg
mov
popa
sub
fisttpll
scas
lock
loope
sbb
std
into
lret
clc
sub
enter
aas
arpl
add
cmp
cmp
add
push
add
and
movsl
pop
scas
jg
cmp
ret
dec
andl
mov
loop
sti
push
cltd
cmp
imul
mov
leave
sub
imul
inc
mov
jbe
cmp
pusha
sbb
mov
push
mov
xchg
arpl
sti
dec
mov
mov
mov
or
enter
mov
mov
cmp
jge
and
or
jp
jne
repnz
rol
dec
scas
lods
call
test
cmpsb
addr16
add
int
outsl
ja
loope
push
cmp
mov
sub
out
nop
push
loopne
jmp
cmpsb
ds
jl
cli
mov
movsl
jecxz
repnz
jo
call
fdivl
int3
in
mov
push
lea
xchg
addr16
cmp
lods
scas
inc
xchg
sub
insl
dec
lret
icebp
jb
xchg
insb
mov
cmp
inc
mov
iret
mov
xor
cmpsb
inc
jb
sbb
and
xchg
xor
mov
push
cmp
sahf
push
add
mov
pop
lahf
xchg
and
fsubrl
dec
mov
sbb
pop
xor
add
jb
or
xor
push
add
inc
lret
dec
sub
jb
push
mov
sbb
push
jg
inc
ss
js
and
xchg
jbe
mov
adc
jmp
ret
cmp
adc
mov
leave
push
push
dec
or
xor
repnz
cmp
out
mov
lds
sub
xchg
data16
loope
je
dec
pop
cmp
lods
xor
popa
jmp
push
faddl
addl
cmp
popf
mov
lock
fs
mov
pushf
aad
mov
ffree
cmp
lds
mov
and
push
or
add
cmpsb
xor
scas
mov
add
xor
adc
imul
les
icebp
sbb
test
int
sub
iret
js
xor
mull
dec
dec
rcll
nop
cvtpi2ps
imul
movsb
cmp
nop
sub
mov
sbb
and
pop
sub
sub
insl
push
add
push
jmp
mov
mov
int3
mov
test
pop
sti
push
int
dec
xchg
ret
xchg
push
ljmp
fisttpl
loope
stos
xor
push
repz
iret
fwait
pusha
inc
stos
das
pop
xchg
dec
or
pop
shll
aam
cmp
aam
nop
mov
in
xor
sub
je
xor
push
aaa
mov
add
roll
ja
mov
arpl
ss
mull
lods
cmpsl
push
cli
mov
sbb
lret
jbe
into
sbb
fs
pusha
jmp
dec
lret
mov
jge
aas
add
sub
cmp
call
ret
mov
popf
add
stos
loop
fcom
popf
mov
in
sar
mov
fs
sub
pop
jbe
rol
cwtl
and
or
enter
jb
jp
call
mov
rcrb
shll
repnz
mov
and
lods
xchg
fstps
and
mov
repnz
fnsetpm(287
cmpsl
test
je
dec
loopne
pop
int3
sahf
stc
pop
add
arpl
and
inc
outsb
mov
jl
mov
dec
mov
ret
aam
shl
lret
cmp
add
fadds
mov
in
lret
inc
xor
xor
addr16
fsubrp
jnp
dec
scas
sbb
pop
or
push
mov
add
add
mov
xchg
dec
shlb
insl
push
push
or
mov
and
sub
shr
daa
dec
sarl
pop
popf
inc
mov
loopne
inc
aas
aaa
mov
jne
jne
orl
xchg
out
mov
les
lock
enter
and
cltd
pop
jne
std
flds
mov
xor
ds
ret
mov
push
je
inc
jle
jns
popa
clc
or
mov
out
xchg
mov
push
in
add
adc
je
test
xchg
out
mov
mov
mov
xchg
aaa
stc
outsb
lds
repz
into
cmp
imul
mov
addr16
jb
mov
sub
sbb
lods
arpl
mov
sbb
jle
pop
pop
jae
sahf
in
pop
mov
daa
fcoms
addr16
out
subl
les
or
insl
fidivrs
sbb
or
xor
mov
call
adc
jecxz
andb
insb
std
imul
and
loopne
and
loop
sbb
cmp
inc
repnz
lret
jns
loopne
sbb
loope
out
mov
hlt
sub
adc
lahf
or
mov
sbb
fsub
dec
mov
mov
xor
outsl
pop
mov
xor
jecxz
in
rclb
lcall
xor
and
mov
cwtl
mov
ljmp
lret
mov
scas
gs
lea
mov
dec
mov
cmpl
loope
push
mov
jmp
pop
adc
and
das
cld
jecxz
xchg
je
lods
test
push
pop
jecxz
cmp
fs
inc
in
xor
jge
inc
inc
lock
push
pop
es
mov
imul
push
sbb
mov
inc
incl
push
daa
push
mov
sub
push
out
mov
jecxz
and
add
cmc
adc
push
mov
jo
loopne
and
sbb
repz
dec
clc
inc
lods
jb
sbb
mov
push
add
mov
cmp
out
pusha
xor
mov
scas
mov
loope
fimuls
sub
jne
pop
in
stc
mov
xor
jo
sub
cmp
mov
xor
movsl
pop
cmp
xchg
std
jle
shlb
lods
movsb
xor
cwtl
mov
pop
std
jnp
xchg
ja
xchg
std
jbe
aas
add
dec
pop
movsb
xchg
or
daa
cmp
cmp
cmp
sbb
addr16
hlt
test
cmp
adc
dec
mov
lret
jne
cmp
out
daa
ficomps
mov
loope
stos
test
xor
sar
ret
fisubl
gs
je
daa
sub
nop
ret
sahf
mov
xchg
in
sbb
mov
xchg
sbb
cli
push
push
xchg
loopne
push
pop
dec
inc
ja
rcll
add
aam
sbb
push
sbbb
sahf
pusha
jge
jmp
mov
xchg
adc
xorb
cmp
mov
add
fwait
sbb
jbe
and
or
daa
lcall
and
aad
xor
xor
in
cmp
cmpb
and
xorl
mov
sub
lods
cltd
dec
nop
mov
dec
inc
ja
clc
dec
clc
dec
lahf
sti
mov
xchg
clc
mov
or
imulb
xchg
test
xchg
jp
lds
xlat
xchg
sub
aas
push
cltd
jmp
sahf
xchg
cmpsb
pop
mov
test
mov
pusha
jmp
mov
xchg
push
mov
inc
or
sbb
push
and
insl
mov
push
jno
lock
push
sbb
shrb
mov
push
lea
inc
jbe
xchg
lock
xor
dec
inc
sbb
popa
enter
scas
leave
fcmovnb
aaa
rcl
cmp
in
add
and
adc
repz
pop
repnz
push
mov
jbe
rolb
imul
lea
testb
pop
mov
sub
test
mov
lret
sbb
pushf
rolb
loope
icebp
sahf
out
xor
clc
mov
mov
xor
cmpsl
call
xor
adc
cmp
xchg
sbb
out
jg
add
ljmp
cwtl
mov
ret
pop
mov
outsl
add
jp
push
rolb
outsb
dec
adc
aas
dec
cli
repnz
mov
mov
pop
pop
cmp
sbb
xor
pop
int3
call
testb
fcmovnu
idivb
imul
sarb
jg
adc
popl
fmulp
pop
add
sub
ja
js
or
test
xor
push
leave
aad
nop
stos
mov
sbb
hlt
repnz
imul
out
push
mov
popa
mov
xorb
sbb
push
pop
insl
lea
pop
jle
sbb
mov
ja
push
out
das
fdivp
ja
cmpsb
add
mov
das
or
mov
orb
dec
adc
sbb
dec
sub
ss
hlt
jmp
sub
xchg
push
push
mov
into
jo
or
ja
add
jnp
add
mov
int3
js
sbb
stos
scas
jge
jns
idiv
jge
mov
loopne
fnstcw
js
shlb
or
out
call
pop
cmp
loop
lock
mov
pop
sub
jnp
ret
xor
gs
and
outsb
xor
pop
sbb
adc
pop
lret
sbb
jg
fstpl
stos
or
and
cmp
andps
stos
jl
adc
dec
ret
lret
sub
test
xchg
sub
mov
cmp
mov
mov
mov
jge
add
xor
call
mov
pop
js
mov
cmp
ja
call
dec
mov
lcall
int
int3
inc
shlb
arpl
das
push
or
movsb
xor
jge
push
lret
pop
pop
cmpsl
lea
push
lods
aas
dec
into
out
fstpt
mov
dec
leave
cmpsl
dec
mov
and
jge
xchg
cmp
mov
jns
clc
jge
jno
mov
ss
push
pop
pop
pop
mul
test
shrb
xchg
cmp
cmp
fcoms
xor
sarl
jae
repz
push
xchg
sbb
sub
jecxz
cmpsb
stos
cld
sbb
or
sbb
mov
push
mov
jno
xor
xor
enter
add
loop
inc
and
pop
add
pushl
mov
leave
jmp
cld
pop
outsb
pop
xor
mov
or
mov
adc
jnp
push
adc
jl
ljmp
mov
pop
mov
push
or
inc
xchg
dec
aad
clc
and
or
adc
jl
inc
insb
loopne
pusha
push
inc
pop
push
sbb
push
stos
rclb
inc
out
out
xchg
mov
inc
leave
mov
pop
mov
mov
scas
in
inc
aam
jnp
stos
mov
push
mov
outsb
mov
in
decb
pop
sbb
xor
or
shlb
mov
mov
mov
out
pop
into
cmc
daa
in
jp
adc
ds
sbb
dec
aas
nop
mov
xorl
push
test
shll
jae
xchg
or
xchg
mov
mov
daa
lea
push
xchg
jnp
rolb
lea
aad
cwtl
fdivrs
inc
jno
insl
inc
cmp
push
jp
sub
stc
push
mov
inc
jl
flds
push
inc
pop
mov
lods
mov
ljmp
and
js
adc
sbb
std
jge
fisttpll
sti
loop
lods
push
push
adc
aas
scas
add
enter
adc
sbb
hlt
movsl
mov
cs
fwait
incb
and
std
out
or
mov
inc
xor
adc
xor
and
testl
mov
and
mov
icebp
mov
xlat
out
out
push
cmp
sbb
lret
jno
addr16
outsb
lcall
insb
je
int
outsl
lcall
pushf
mov
orl
mov
cwtl
add
inc
in
jo
or
je
xor
adc
xchg
push
sub
cmp
jmp
or
pop
mov
in
pop
dec
push
fimull
xchg
or
dec
sti
sti
scas
loopne
cmp
filds
cltd
xchg
jns
std
enter
mov
jb
cli
push
cs
cmp
es
lahf
mov
test
loopne
lds
push
jmp
nop
xor
push
jle
adc
and
xchg
or
fists
and
push
or
out
hlt
mov
aad
jae
fildll
mov
mulb
adc
jnp
sarl
gs
push
fstl
mov
dec
push
cltd
mov
in
dec
push
idivl
jno
push
mov
testl
pop
mov
jo
sub
mov
mov
imul
xlat
sbb
mov
push
mov
sub
aad
and
test
loope
lea
mov
roll
adc
iret
xchg
insb
ss
mov
jns
pop
mov
and
inc
sub
into
addr16
adc
pushf
into
out
mov
je
xchg
out
pusha
movsl
outsb
fsts
test
into
push
adc
loop
push
push
adc
mov
in
or
das
jnp
sahf
lret
jle
sbb
cli
sbb
jo
or
mov
or
jae
cmc
test
jmp
ret
mov
out
fcmove
in
hlt
pop
and
mov
pop
lds
pop
repz
cmp
loop
dec
mov
or
ret
dec
shlb
repz
lods
aad
push
push
ret
cld
movsl
mov
scas
js
movsb
pusha
and
lock
pop
and
dec
shlb
push
fwait
or
ja
pop
xchg
add
mov
call
xlat
add
incl
gs
jmp
fidivrs
mov
xor
mov
lods
sub
pop
lea
adc
dec
mov
loop
xchg
ds
push
daa
cmp
imul
in
shrb
shll
jp
fcmovnu
xorl
aad
mov
xadd
or
rolb
shll
std
dec
mov
test
fwait
leave
adc
push
mov
xchg
int
pop
mov
and
popf
pop
mov
and
aam
lret
fistpl
and
sti
push
nop
jbe
inc
pop
out
cld
jecxz
shlb
mov
bound
adc
inc
push
inc
jne
jbe
mov
popa
movsb
addb
xchg
loope
fwait
ss
push
shr
dec
pusha
jns
mov
ds
loopne
lret
jns
and
sbbb
push
push
sub
dec
or
int3
cs
fiadds
sbb
or
fists
pop
push
xchg
dec
fcmovb
jl
popf
ror
push
and
xor
insb
mov
rolb
dec
push
mov
push
sub
into
jo
aas
adc
stc
adc
daa
stc
xchg
and
xor
cs
mov
lea
aaa
out
dec
pop
and
leave
jl
and
popf
mov
pop
or
adc
sub
cmp
int3
jecxz
and
mov
aam
popf
arpl
pop
hlt
loope
xor
jno
xchg
aad
mov
and
jp
push
imul
jge
das
mov
je
scas
xchg
jbe
out
or
out
mov
lea
add
mov
loope
inc
out
xor
int3
sbb
fwait
mov
jl
clc
ds
cmp
les
insl
pop
jns
xchg
xchg
andl
sbb
dec
les
stos
sbb
enter
adc
loope
scas
mov
mov
jns
mov
or
data16
sub
mov
enter
pop
or
lods
mov
xor
ret
loop
lret
mov
lods
and
and
and
mov
shll
ljmp
pop
ffreep
jno
xchg
shrb
ljmp
imul
cmpb
shlb
ljmp
dec
enter
ffreep
adc
jle
fs
lods
adc
popa
jecxz
mov
push
shlb
inc
ficoms
or
adcb
addl
icebp
add
insl
mov
scas
adc
lret
lret
test
les
in
sbb
jo
push
ss
dec
ret
mov
or
hlt
cmpsl
mov
lret
xor
sbb
xlat
lret
imul
xor
popf
cld
jmp
scas
loope
lea
bound
add
in
cwtl
out
aaa
outsl
mov
addr16
sub
mov
pop
hlt
stos
push
pop
popa
add
cmpsb
sub
roll
mov
cmpl
ss
mov
inc
xchg
shl
test
cmp
fsubp
pushf
add
fnsave
xorl
test
xlat
add
push
aam
fists
pop
add
inc
cmpl
push
mov
xor
inc
jge
jle
bound
hlt
or
xchg
xor
cs
push
iret
repnz
or
fldl
rep
std
push
xor
shl
pop
jne
aad
mov
add
mov
in
mov
sub
push
or
mov
cmp
or
pop
jge
ret
ror
mov
cmp
jg
mull
mov
lcall
sar
lock
stos
xor
jns
push
hlt
imul
cmp
pop
scas
mov
shlb
mov
in
push
mov
inc
mov
nop
roll
shll
xorl
pushf
subl
xor
pop
aam
shll
adc
jle
pop
rcrl
jge
ret
fs
mov
arpl
cmpsb
xor
outsb
mov
push
xor
pop
adc
das
dec
cmp
mov
outsb
mov
scas
push
out
mov
pop
lods
push
inc
jno
rcll
inc
shl
push
mov
ficoml
insl
test
mov
call
jo
and
xor
sahf
fcmovne
inc
test
add
fldcw
dec
rcrb
jle
adc
inc
inc
sarb
aas
mov
pop
fs
rcrb
in
cmp
push
pop
adcb
test
jb
inc
icebp
shl
test
lret
test
bnd
pop
outsl
adc
pop
inc
mov
jno
imul
or
dec
push
jp
inc
and
ret
mov
push
xor
test
hlt
push
jns
cmp
adc
xor
out
cwtl
sub
dec
mov
fbld
pop
dec
or
repnz
push
pop
ret
push
fcomi
scas
js
js
dec
mov
repz
mov
mov
fadds
sar
sub
xor
mov
imul
lret
mov
jecxz
sti
insb
pop
cmpsb
stc
xchg
jp
repz
or
enter
loope
pop
pop
and
icebp
fisubrl
jecxz
std
daa
push
fsubr
shlb
xchg
sub
sub
daa
inc
add
jno
dec
cld
jne
sbb
lock
outsl
jmp
mov
push
shlb
out
add
inc
and
in
into
les
loopne
pop
lcall
mov
fstpl
xchg
jl
pop
mov
movsl
sbb
pop
mov
mov
sti
sti
daa
mov
add
das
push
mov
xchg
mov
sub
pop
add
push
add
flds
mov
and
dec
jge
lds
aas
sarb
cmp
adc
cmp
jge
shll
leave
rcrb
mov
mov
sub
add
cltd
loopne
nop
dec
insb
xchg
jl
adc
or
push
mov
jmp
les
shlb
in
insl
mov
adc
sbbl
pop
add
dec
xchg
sahf
sub
push
inc
or
jno
lahf
cmp
jl
repnz
cmpsl
mov
mov
xchg
push
lock
pop
rol
ss
fmuls
add
das
mov
push
mov
bound
mov
add
sbb
cmp
xor
test
mov
pop
dec
not
cmc
xchg
fstpt
cmp
cltd
mov
xor
pop
fisttpl
std
dec
jae
jge
push
mov
cmpsl
pop
pop
repnz
and
inc
xchg
hlt
repnz
insb
js
shl
xchg
dec
push
hlt
cld
daa
sahf
roll
cmpsb
ds
add
cmpb
adc
aam
test
xor
dec
adc
xchg
jns,pn
orl
fwait
add
fldl
stos
inc
ss
dec
jne
inc
popa
dec
leave
push
xchg
addr16
xor
xchg
and
pusha
xor
pop
jl
int3
daa
shr
xor
outsb
test
pop
xchg
imul
sbb
daa
das
mov
cwtl
aam
lods
mov
dec
push
push
pusha
dec
mov
mov
lods
stos
inc
push
adc
hlt
fnsave
xchg
fidivl
mov
xchg
or
mov
mov
dec
outsl
outsl
cmp
mov
mov
popf
xorl
pop
idivb
fisttpl
xchg
lods
enter
jo
mov
and
sub
aad
cmc
sbb
loope
add
mov
btsl
in
js
fnstcw
out
clc
mov
je
push
sbb
adc
cmp
push
js
xchg
pop
inc
or
xor
lds
movsl
lea
and
xor
inc
add
dec
xchg
lret
mov
frstor
jle
fwait
cbtw
shrl
fldlg2
sahf
es
dec
or
aaa
lods
insb
or
pop
cmpsl
inc
jno
and
fimuls
inc
cmpsl
sti
and
dec
pop
and
xchg
xchg
dec
insb
adc
shl
dec
cli
lods
test
and
fiaddl
xchg
pop
mov
int
lods
mov
push
mov
fwait
or
and
int
in
sarl
fidivrs
cmpsl
je
push
ds
fcoms
mov
aad
cli
jecxz
xchg
inc
sbb
ss
cltd
btl
in
mov
leave
mov
xor
or
inc
cmp
sti
sbb
mov
jmp
lcall
sbb
xchg
jns
pop
rorb
push
lods
mov
adc
cli
insb
lret
cmp
mov
jnp
jmp
sub
ror
iret
sbb
shrb
popf
add
adc
lds
mov
inc
in
sbb
dec
jne
cmp
or
sub
into
scas
jae
cld
push
mov
pop
inc
aaa
and
insb
push
test
sbb
jg
lds
mov
je
cmp
sbb
dec
pop
cmc
stos
ret
ljmp
movsl
xorb
xor
call
jbe
ljmp
add
pop
add
ja
call
mov
bound
bound
and
testl
add
fildl
into
ljmp
out
mov
aas
jnp
sub
jne
test
scas
subl
pop
test
es
mov
shrl
inc
mov
push
bound
jns
xchg
cmp
or
clc
sti
std
rcrb
pusha
sbb
and
testb
inc
mov
pop
movsl
xchg
mov
jl
fsubrp
pop
dec
inc
cmp
dec
sbbl
test
std
xchg
cmpb
pop
jnp
arpl
and
fcompl
into
cmp
pop
xchg
sbb
inc
jo
xchg
jb
sub
add
std
loope
bound
push
push
push
inc
not
inc
push
leave
jg
mov
mov
das
jmp
and
lods
mov
or
mov
mov
xchg
push
jae
sub
aaa
data16
ss
sahf
cwtl
lret
scas
xor
lahf
out
add
pop
sbb
and
xchg
and
cmp
fwait
mov
cmp
or
out
dec
mov
cmp
ja
outsb
int3
xchg
ret
dec
xor
mov
sub
and
and
push
cmp
mov
mov
sub
mov
mov
sbb
dec
and
xchg
mov
test
shlb
adc
bound
mov
sub
cli
lret
aaa
add
repnz
lcall
and
push
xor
ret
push
sahf
lds
jo
mov
ds
das
pop
cmp
jge
xor
sub
iret
cmc
pop
adc
inc
clc
mov
ljmp
mov
mov
push
std
cmpsl
jbe
inc
dec
pop
dec
pop
inc
fcmovne
les
outsl
push
jp
jmp
lock
xor
dec
cmp
fidivrl
aaa
and
inc
inc
mov
add
repz
imul
mov
cmp
xchg
movsl
in
arpl
in
mov
sti
mov
inc
cmp
std
jle
push
bound
xor
mov
jle
mov
mov
cmp
call
push
je
xor
cmpsl
data16
sub
xor
mov
cmc
sahf
int
pop
inc
mov
pop
adc
dec
sbb
nop
lock
in
xor
and
outsb
or
test
mov
loop
cltd
jecxz
fisttps
xchg
rclb
data16
arpl
ljmp
mov
mov
test
insl
adc
fisubrl
pop
cld
push
insb
data16
inc
push
mov
jecxz
or
cmp
scas
pop
sub
push
stc
mov
hlt
sbb
pop
mov
add
inc
incl
loop
adc
inc
dec
cwtl
leave
and
fwait
mov
add
es
mov
cmp
mov
ror
mov
cmp
push
loopne
out
jl
mov
sub
ret
jo
out
mov
cli
cmp
ret
fcompl
stc
xchg
loopne
cmpsl
fcomps
int
leave
jbe
pop
daa
lahf
jmp
shll
fisubrs
aad
mov
jle
ds
and
adc
mov
into
xchg
or
in
mov
or
and
push
pop
arpl
adc
icebp
icebp
jno
sarb
add
push
js
ja
and
fs
fisubrl
test
xchg
mov
mov
jmp
mov
add
add
enter
mov
testl
lahf
adc
out
arpl
lods
das
adc
and
jae
call
fwait
push
icebp
xchg
mov
or
imul
ljmp
in
sbb
aam
inc
xchg
shll
xchg
xor
inc
push
xchg
sub
xorl
push
fxch
mov
cmp
out
sbb
push
loop
mov
jle
jno
sysenter
dec
outsl
cli
aad
inc
mov
fnsave
mov
xchg
enter
sarl
mov
pushf
cmp
cmc
jecxz
xchg
sbb
lods
in
dec
pop
jecxz
pop
jnp
adc
xor
xchg
fldcw
pop
cmp
mov
ror
xchg
loopne
js
cmp
mov
outsb
aam
lods
stos
sahf
jmp
sar
in
mov
pusha
daa
mov
push
enter
imul
sub
lret
leave
xor
fdivl
sbb
mov
test
pop
sub
and
aaa
mov
jecxz
pop
repz
cmc
cld
fs
inc
push
sahf
dec
sahf
pop
push
lret
sub
sub
xchg
data16
push
fdivrs
sub
xor
idivl
jne
repnz
xchg
cli
sahf
sub
shlb
lods
outsb
data16
popa
mov
mov
pop
push
pop
rorl
fldenv
clc
mov
add
aas
jbe
out
sub
fmull
mov
xchg
andb
xchg
call
outsb
or
hlt
mov
and
imul
repnz
or
sub
dec
inc
popf
std
bound
xor
lds
out
mov
aaa
fiadds
or
dec
mov
out
sub
imul
mov
mov
lods
lret
loopne
mov
adc
lcall
jp
frstor
lds
out
jle
add
movsb
daa
push
mov
dec
ret
pop
js
into
sub
loopne
xor
stos
cmp
xchg
sti
xchg
insl
cmp
insl
xchg
mov
popa
fsubrl
out
pop
push
and
loop
aas
push
shl
add
or
gs
fstpl
mov
rcll
scas
in
fildll
pop
and
xchg
dec
xchg
lea
inc
cs
std
dec
setnp
dec
mov
sbb
mov
jge
cs
test
pop
mov
cwtl
xchg
pushf
mov
lea
mov
adc
dec
filds
imul
fadd
mov
in
in
out
xchg
jecxz
mov
lahf
mov
cmp
inc
and
xchg
xor
icebp
shl
mov
loopne
lods
les
pushf
imul
sbb
les
ss
or
out
jp
push
outsl
fisubs
push
mov
mov
cld
cmp
arpl
sbb
push
mov
dec
fwait
adc
out
inc
jle
sbb
jge
rorb
pop
push
cs
cmp
pop
mov
ljmp
cmp
leave
xor
push
jp
data16
mov
adc
cmp
insb
mov
pop
test
sbb
push
xor
mov
stos
and
lcall
movsl
sub
es
imul
outsb
jbe
mov
add
mov
scas
outsb
add
outsl
gs
sub
jbe
les
sbb
mull
dec
leave
ljmp
bnd
mov
mov
sbb
mov
outsb
inc
call
pop
outsl
jbe
sbbl
jg
and
push
aam
fidivrs
inc
pushf
jmp
add
and
cmpsl
mov
lea
push
out
rol
jns
mov
scas
pop
add
fwait
cmp
int
sub
mov
jle
fcoml
loopne
mov
mov
vpmulhw
imul
xorl
outsb
cmp
xchg
cmp
cli
and
lea
mov
das
push
cmp
mov
inc
enter
cltd
lea
iret
lods
dec
cmp
ja
out
rorl
lods
push
xor
shll
leave
adc
in
jo
xchg
lret
lcall
mov
jbe
jg
mov
fnsetpm(287
incl
cmp
or
pop
ss
popf
ror
loopne
push
xchg
icebp
dec
jp
xchg
pop
push
imul
ss
adc
lret
test
push
in
gs
mov
jg
into
and
stos
jg
cmc
add
cmp
clc
mov
dec
mov
xor
dec
add
pop
fstps
sub
or
or
sbb
add
xor
mov
popf
daa
mov
lret
sub
push
lods
icebp
mov
inc
jbe
pop
xor
fs
and
push
push
and
inc
add
out
mov
pop
and
add
lods
adc
pop
mov
jns
xchg
adc
shlb
push
ret
sub
lret
xchg
imul
dec
and
cmc
and
std
and
add
lahf
jae
dec
xchg
dec
or
in
aaa
xor
inc
pop
xor
nop
mov
rorl
inc
popa
mov
lea
leave
xchg
sub
xor
dec
adc
rsm
dec
ja
adc
mov
js
and
insb
inc
cmp
rcll
jp
js
idiv
fsts
mov
lods
sub
mov
sbb
sbb
fisttpl
jbe
clc
push
cmp
pop
outsl
mov
dec
xor
mov
loop
and
mov
arpl
xchg
add
out
mov
repnz
adc
or
mov
mov
into
mov
mov
ds
aam
or
pop
flds
leave
pop
lock
sahf
xlat
inc
fstpl
andb
imul
ljmp
mov
inc
pop
push
dec
ss
sbb
dec
mov
adc
sbb
jno
mov
mov
aaa
roll
shll
cld
es
ljmp
dec
fcomps
popf
movsl
mov
pop
jecxz
lret
gs
sub
dec
mov
mov
mov
outsb
pop
mov
mov
repz
pop
daa
subl
jg
sub
in
pop
pop
jge
mov
cmp
mov
cli
push
mov
push
js
mov
xchg
test
mov
mov
push
mov
cld
mov
inc
xor
lret
stc
fs
test
ret
fisttps
nop
add
mov
mov
test
dec
push
aad
cmp
push
dec
adc
shll
inc
rcl
sub
or
mov
and
lahf
push
lods
lods
out
outsl
or
lcall
mov
stos
cmp
cmp
into
shrb
pop
sub
pop
sti
out
insb
lahf
mov
dec
push
movl
xchg
sub
lods
cli
pop
outsb
les
stc
scas
jge
jle
xchg
rcll
in
jae
pop
leave
xchg
pcmpeqb
xchg
mov
jmp
add
pop
xor
and
mov
or
pop
imul
stos
lods
cmp
je
push
and
mov
fwait
and
fwait
push
add
js
les
mov
jbe
cmp
int3
ret
mov
inc
pop
lds
inc
imulb
das
xor
pop
scas
jae
pop
inc
mov
pop
lret
movsb
pop
jge
out
ljmp
in
sbb
mov
xchg
adc
movsb
or
adc
xrelease
fmuls
sti
jp
lods
shrl
pop
mov
and
or
xor
push
xor
pop
sbbl
inc
lcall
stos
mov
dec
pop
adc
divb
lods
shr
sahf
rorl
rorb
mov
mov
pusha
test
xchg
movsl
pop
test
ret
stos
push
xchg
xchg
push
mov
pop
shr
pop
and
push
scas
icebp
lea
push
xor
jp
dec
push
cmpl
sbb
mov
mov
pop
nop
scas
mov
lods
into
movsb
cs
push
and
add
out
mov
rcrb
loope
mov
mov
out
test
insb
frstor
clc
and
push
push
sbb
pop
adc
insl
inc
bnd
xchg
xor
mov
mov
sti
push
leave
enter
int3
jp
push
cltd
in
gs
xor
bswap
mov
cwtl
rolb
or
adc
and
adc
roll
popf
dec
shll
out
lret
sub
lahf
cli
mov
mov
mov
aas
bound
aad
xlat
lret
xchg
les
sbb
inc
mov
loop
clts
jbe
jns
ret
dec
pop
cwtl
jg
movsl
in
adc
add
faddl
outsb
imul
cmp
in
test
insl
pop
push
push
dec
lret
jns
int
scas
shll
adc
inc
out
pop
dec
mov
cwtl
mov
ja
addr16
sub
sbbl
aam
cmpsb
sbb
shll
push
in
xchg
add
insb
clc
cmp
das
fstpt
imul
add
mov
scas
sbb
icebp
rep
mov
clc
pop
into
inc
sub
imul
dec
ret
outsb
nop
sbb
push
jb
xchg
push
mov
sbb
mov
sbb
sub
jnp
mov
fnstenv
inc
xchg
push
sub
jo
add
in
inc
push
loope
in
cmp
mulb
popf
ja
push
lock
add
icebp
incl
push
lods
mov
adcb
shlb
rcrb
fsubl
dec
inc
rolb
cmp
adc
cmp
pop
inc
in
mov
fiadds
pop
ret
jecxz
stc
jne
add
sbbl
mov
cmpsb
loopne
hlt
cmpsb
mov
dec
inc
or
xor
jne
sub
add
adc
cltd
dec
imul
int
push
dec
sbb
push
xlat
add
das
add
enter
stos
aam
adc
clc
sub
sub
cltd
pop
ss
sbb
sbb
mov
mov
sbb
dec
fld
xor
lea
int3
or
das
dec
push
jle
imul
push
sbb
pop
and
mov
mov
inc
outsb
push
pop
stc
cltd
mov
pop
push
push
rcl
dec
popf
cwtl
lret
mov
loop
lea
or
pusha
fdivrs
pop
jl
lds
mov
ss
nop
lcall
jbe
mov
mov
pop
or
cwtl
mov
sbb
lea
mov
sti
dec
sub
adc
pop
xchg
mov
push
test
and
aam
sbb
stos
fwait
hlt
andb
in
jge
fwait
push
lods
loop
mov
mov
adc
sbb
mov
or
sub
movsl
fdivrl
dec
push
and
loope
imul
mov
out
inc
inc
jae
lods
jae
jmp
es
outsb
xor
mov
mov
loope
or
mov
adc
mov
dec
pushf
pop
or
ja
scas
dec
push
xchg
outsl
push
mov
push
ret
imul
or
dec
cmp
mov
or
and
push
xor
jmp
stos
push
data16
sti
sub
repz
je
mov
xchg
inc
xchg
cld
mov
and
aad
push
hlt
sbb
xorl
pop
xchg
cmp
pop
jb
lods
test
test
adc
xor
test
mov
ja
cltd
repnz
aad
std
push
inc
call
lock
cmp
push
bound
jnp
fstps
push
and
bound
dec
mov
push
adc
aad
out
loop
mov
int3
dec
adc
out
mov
iret
jmp
adc
shr
orb
mov
popa
adc
test
cmp
xor
sbb
std
sub
push
insb
pushf
xor
xor
dec
pop
push
cltd
roll
ljmp
adc
inc
pop
test
push
jae
inc
fwait
xchg
jl
dec
addr16
push
scas
mov
popf
enter
and
incl
pop
inc
pop
cmc
imul
xchg
or
ficompl
mov
xor
mov
icebp
lcall
sub
cmpsb
push
sbb
scas
sbb
mov
movsb
xchg
xchg
cmc
test
push
and
xlat
sub
inc
mov
push
adc
sti
cmp
cmp
sbb
cmpsb
push
xchg
lcall
nop
pop
bound
cmpsl
movsb
shlb
xorl
push
mov
xchg
lret
jbe
out
gs
cmp
mov
and
mull
loop
loop
xorl
iret
mov
movsb
dec
xchg
ljmp
xchg
aaa
adc
enter
and
mov
xlat
ja
pop
cmp
pop
push
add
fadd
dec
xor
jmp
test
mov
sar
adc
and
push
scas
push
icebp
shlb
cli
sbb
and
pusha
into
lret
rorb
stc
and
hlt
lret
loop
dec
or
sbb
mov
sbb
mov
mov
cmp
popf
cmp
pop
jnp
hlt
add
movsb
aas
je
pop
movsbl
outsb
push
push
movsb
jnp
movsl
pop
stos
gs
adc
cmp
add
pop
sub
xchg
daa
mov
jnp
sarb
cs
mov
push
pushf
xor
mov
mov
daa
pop
dec
fdivrs
pop
jo
popf
shll
sbb
sub
je
test
shrb
pop
imul
rol
mov
jl
and
call
ss
sub
xchg
dec
jmp
xchg
mov
mulb
push
iret
hlt
loopne
fdivl
pop
xchg
push
xchg
jmp
cli
pop
cmc
push
movb
scas
cwtl
mov
dec
into
push
xchg
shll
in
mov
es
insb
dec
jl
aam
dec
mov
faddl
mov
fsts
xor
cli
push
mov
jbe
adc
shr
and
shrd
das
cmp
jge
in
test
call
je
out
aad
or
loope
mov
lods
aas
cmc
hlt
xor
adc
mov
pop
lds
push
fstp
in
sub
js
aas
and
sub
mov
add
xchg
int
push
fisubl
out
jb
adc
fiaddl
and
lods
push
mov
out
xor
jmp
adc
fnstcw
into
xor
push
inc
in
jo
inc
xor
aam
adc
and
cmp
testb
cmp
lea
sbb
jno
pop
xchg
aad
cmpsb
aaa
pop
movl
mov
jp
mov
nop
pop
aam
ljmp
outsl
int3
sbb
out
adc
ret
add
in
and
sbb
fisubrl
cld
je
jp
lcall
mov
mov
cmp
lock
mov
xchg
insb
add
sar
loopne
dec
in
std
pop
enter
outsb
and
call
add
push
mov
push
push
daa
inc
sti
xchg
dec
clc
sbb
dec
inc
lods
ret
or
jle
xchg
jae
aaa
pop
lahf
and
into
inc
cmp
std
stos
mov
push
push
cli
sub
cmp
insl
pop
insb
and
xor
scas
push
in
ret
cmp
cmpsl
push
or
into
scas
cmp
dec
jg
cmp
bound
or
mov
shll
inc
dec
dec
lea
mov
fldcw
lock
pop
inc
ljmp
lea
daa
pop
fs
loop
jae
cltd
or
xchg
xor
mov
inc
decb
push
jno
pop
pusha
pop
jo
mov
ret
mov
stos
mov
mov
push
loopne
mov
and
cmp
subb
cli
inc
sbb
sbbl
push
pop
mov
and
js
or
jo
ror
jbe
mov
mov
sub
jae
fstl
sub
dec
mov
mov
orl
movq
cmp
cld
daa
lea
inc
inc
xchg
int3
pop
push
jmp
out
iret
sub
into
in
sbb
sub
inc
icebp
mov
pop
adc
ss
mov
jo
testb
and
popf
popa
jb
mov
rol
add
stos
fwait
cmp
lcall
popa
xchg
inc
dec
mov
or
lods
or
cmp
leave
fdivrp
je
test
xchg
jecxz
or
xor
jmp
orb
lret
lock
pushf
popf
aad
sbb
idivl
jns
fdivr
mov
push
testb
push
sbb
xchg
xchg
pop
sbb
cs
dec
popf
xchg
cmpsb
sahf
aad
jl
jo
xor
cmp
andl
or
js
xchg
jbe
cli
repz
mov
test
jno
cld
push
xchg
scas
and
mov
in
int3
xchg
in
mov
jb
dec
push
pop
imulb
push
xor
sub
mov
add
sub
sub
jnp
dec
jb
flds
mov
adc
or
mov
ss
mov
mov
sbbb
push
leave
pop
cmpl
jb
shrb
insl
lret
mov
cs
push
test
rcll
xlat
and
popa
mov
fsts
out
jmp
push
popa
mov
fsts
jg
sub
insl
adc
call
les
jp
sub
mov
mov
xlat
gs
iret
sub
jbe
mov
das
fstl
leave
adc
and
push
arpl
jl
pop
dec
or
and
or
inc
sub
arpl
jnp
inc
pusha
roll
mov
jg
test
cmp
lock
mov
jp
nop
jg
mull
adc
mov
cmp
iret
cmc
mov
in
fsubp
jne
cmp
sbb
dec
adc
xchg
pop
add
xor
xchg
sub
jecxz
pusha
mov
cld
xchg
das
or
hlt
pop
mov
negb
mov
bound
gs
push
sbb
adc
mov
cmp
mov
xchg
or
daa
pusha
in
xchg
fstpl
push
movlps
mov
fisubl
cmp
inc
stc
jmp
pop
mov
fs
xor
iret
roll
jno
inc
add
fimuls
aam
adc
nop
mov
fsubrs
inc
fcoml
pop
in
icebp
or
add
mov
shll
es
jl
inc
adc
mov
je
mov
loop
mov
imul
lock
dec
lcall
int
cltd
xchg
xchg
sub
jle
aas
sahf
cwtl
sub
push
mov
icebp
cli
cmp
shlb
xor
popa
or
add
lods
lcall
mov
popa
cs
mov
xchg
cmp
std
push
lock
dec
pop
adc
cltd
shrl
sbb
inc
and
ds
sbb
and
pop
xchg
mov
ss
icebp
imul
mulb
xor
stos
cltd
pop
mov
xchg
ret
outsb
xor
lea
mov
les
cli
inc
ds
jge
inc
repnz
adc
push
xor
ret
popa
cmc
in
jp
cmpsb
sub
push
push
inc
cmpsl
sti
mov
std
mov
lods
aas
cli
inc
shl
test
imul
mov
add
out
cmp
imul
xchg
add
jecxz
in
push
lock
xchg
adc
enter
nop
shrb
push
in
push
inc
jb
ds
pop
stos
push
adc
sub
sub
dec
loope
or
addr16
rcrb
or
out
pmuludq
adc
mov
rorb
xor
xor
push
sbb
cmp
or
mov
lret
pop
sub
data16
aas
lea
shlb
xor
xor
sahf
xchg
lcall
sbb
and
sti
aad
imul
fwait
lahf
and
xchg
mov
push
cmp
add
movsb
lahf
push
and
test
pop
push
jmp
sbbl
jb
pop
fisttpl
testl
cmp
pop
cmp
cltd
or
pop
add
mov
pop
cld
fstps
or
push
insl
arpl
or
in
fidivrl
scas
jo
dec
jns
mov
sbb
pop
ds
jl
in
mov
lret
mov
iret
dec
je
xor
icebp
inc
jle
rorl
cwtl
mov
mov
xchg
xchg
push
lock
pop
imul
lds
shlb
into
sub
loop
cmp
sbb
fildl
dec
jo
clc
sti
out
in
or
mov
mov
cmp
jle
dec
push
imul
pop
ret
inc
xor
inc
xchg
aad
push
dec
movsl
jmp
int3
fwait
stos
andb
shrl
imul
fwait
mov
inc
pop
bound
dec
andl
sub
mov
leave
ret
pop
outsl
fstl
jns
sbb
ds
les
das
inc
bound
sub
fs
push
add
xchg
jl
jmp
call
inc
out
inc
imul
push
mov
fcmovnbe
adc
mov
pop
inc
loopne
cli
repz
xchg
xor
cmp
in
aad
and
inc
test
mov
mov
sub
push
push
lea
mov
inc
out
pop
js
mov
sti
outsb
cltd
mov
adc
jne
cld
xchg
lcall
in
pop
pusha
pop
in
pusha
popf
sbb
pop
out
lock
in
push
dec
ret
sub
scas
xchg
push
mov
add
jecxz
ss
mov
push
mov
outsb
mov
jl
xchg
mov
or
sub
cld
inc
and
addr16
je
cmpsl
into
cli
test
ss
ja
daa
cmp
lods
mov
notb
add
lock
outsl
sarl
jbe
adc
push
out
out
shlb
xlat
aam
ret
sub
pop
jnp
testb
ret
dec
jno
mov
aas
popa
xor
jo
mov
jle
sub
ss
sbb
jp
mov
insl
out
ss
xor
jo
addl
std
pop
ss
xchg
ljmp
jge
xor
adc
inc
hlt
jg
std
dec
in
and
mov
and
xchg
fs
xchg
xchg
jp
mov
pop
adc
mov
andb
and
fcom
daa
xlat
dec
dec
or
sub
mov
mov
nop
ljmp
mov
aad
or
mov
mov
cmc
dec
adc
sub
mov
out
aad
lock
sub
xchg
xchg
filds
sbb
loopne
adc
xchg
mov
into
movsl
mov
cmp
push
jns
and
xor
je
push
sbb
and
add
fwait
sbb
stc
pushf
xchg
inc
into
xor
fwait
jmp
outsl
jge
xor
enter
push
iret
dec
cmp
sbb
push
jle
imul
movsb
lret
jo
inc
jl
and
push
lea
mov
rorl
or
in
loopne
sahf
in
in
popa
lea
hlt
sbb
xor
xchg
mov
sahf
inc
lret
imul
jo
dec
adc
pop
out
mov
adc
push
xchg
jge
sbb
sub
outsl
mov
shrb
pushf
pop
jmp
pop
fstpl
xchg
inc
sbb
cmp
out
push
xchg
imul
sti
xchg
xor
jp
rcrb
shll
aam
xor
cmp
xchg
stc
pop
popf
push
bound
cli
outsb
inc
addr16
add
fimull
sbb
jno
xchg
push
lret
jae
xchg
dec
cmp
jb
cs
stos
sbb
jge
mov
mov
ror
ja
subl
mov
or
sub
mov
push
dec
dec
adc
mov
shll
hlt
push
push
sbb
pushf
jmp
shr
inc
xor
sarl
out
push
cmc
ror
dec
inc
mov
xor
inc
inc
out
iret
incl
jno
pop
add
sarb
mov
mov
mov
aas
incb
pop
mul
addr16
sub
fs
mov
repnz
cmpsl
sahf
shlb
jle
push
std
out
cmp
cmp
or
stos
outsl
fcoml
leave
jns
mov
movsb
inc
or
pop
push
rorl
repnz
andl
ret
mov
dec
lret
sub
dec
mov
mov
sbb
sub
lods
dec
xchg
mov
int3
rcll
loop
rcll
lea
add
cmp
push
mov
dec
pop
je
xchg
inc
xor
outsb
xlat
and
movsb
test
add
cmpsl
js
mov
push
mov
iret
jecxz
cmp
loopne
xchg
push
test
pop
leave
adc
sbb
into
lahf
ja
jnp
adc
popf
popa
bound
out
add
xchg
mov
xor
jmp
lcall
adc
jbe
cmp
and
mov
stos
leave
xchg
bound
sbb
and
aam
adc
enter
addb
sbb
sub
sbb
stc
jl
sahf
sub
xchg
jg
in
shll
fnstcw
or
xchg
cwtl
push
and
push
ret
scas
bound
jb
pop
fs
mov
stc
iret
out
les
push
out
jo
dec
test
ljmp
and
mov
fsubl
pop
insb
mov
aaa
and
ds
or
jbe
or
arpl
icebp
inc
lods
imul
inc
lcall
mov
or
outsl
test
push
enter
and
mov
sub
aas
insl
jecxz
bound
or
pop
xor
add
mov
les
movsl
add
jp
sbb
pop
xchg
inc
or
jg
sti
inc
cmp
jecxz
cwtl
jb
add
xor
mov
inc
mov
adc
je
mov
mov
mov
push
es
pop
xor
data16
in
mov
fildll
xor
jne
cmc
mov
repnz
ja
popl
fisubs
push
ret
adc
notb
mov
inc
test
cwtl
xchg
and
jo
loopne
loope
fstpl
mov
and
pop
push
nop
jecxz
pusha
test
dec
test
add
or
mov
lock
addr16
cmp
add
jbe
cmp
sbb
sub
xchg
lods
in
mov
xor
out
addr16
jo
sub
xorb
subb
sbb
cmpsw
jmp
xor
emms
hlt
es
arpl
test
push
test
sahf
jae
ds
sub
or
sub
xor
scas
das
mov
add
ds
jecxz
adc
insl
cltd
jmp
ret
add
mov
mov
mov
icebp
push
rcrb
dec
loope
xchg
push
outsb
daa
push
aad
jno
lret
mov
xchg
sub
inc
push
mov
cmp
jbe
push
sub
clc
into
int
or
outsl
lods
fisubrs
cmpsb
nop
cld
jbe
out
cmc
fiaddl
xor
dec
jge
dec
inc
or
pop
js
sbb
mov
psubsb
cli
andl
add
sub
jnp
cmp
jl
idivl
int
cmp
sbb
cmpl
shl
add
lret
pop
mov
call
aaa
enter
faddl
aam
jge
mov
sarb
iret
rcr
mov
xorb
js
push
movsb
mov
push
or
movsb
inc
adc
xchg
add
lea
mov
rorb
cli
inc
push
sub
xchg
movsl
in
mov
push
jmp
insb
ret
repnz
jo
mov
fmull
inc
stos
mov
xchg
xor
out
add
jg
fcoml
mov
jmp
jmp
and
pop
flds
mov
ficoml
stc
lahf
add
rorl
ret
mov
jg
ss
std
dec
insb
movsl
cmp
in
cmp
lret
sbbl
ss
int
lahf
sub
xorl
cmp
mov
rcrl
push
mov
lods
xchg
sbbl
test
scas
dec
adc
jmp
jbe
loope
je
loop
mov
and
rcll
or
push
dec
cmp
dec
push
or
mov
xchg
hlt
or
mov
icebp
daa
enter
pop
jbe
bound
cmc
out
xchg
mov
js
mov
loope
adc
add
loope
pop
jg
sbb
jae
lahf
mov
xor
repz
mov
leave
js
mov
ret
xchg
jne
cltd
out
xchg
movl
inc
mov
add
not
shll
jnp
mov
loope
fnstsw
add
clc
pop
push
pop
jb
adc
cmp
repnz
xchg
fmull
jo
sbb
leave
ucomiss
test
sbb
mov
rcrb
push
mov
cmp
jo
repnz
sbb
in
jno
xor
push
mov
push
dec
cs
jb
sarl
xor
cltd
popa
adc
push
out
sahf
mov
in
scas
sbb
sar
sahf
add
fstps
mov
add
cmc
xor
pushl
sbb
out
pop
or
icebp
out
pushf
sbb
pop
cmc
mov
cmc
xor
enter
xor
mov
out
cmpsb
aas
lock
push
inc
inc
push
mov
dec
pop
dec
jo
mov
sbb
stos
push
das
addr16
mov
test
push
mov
sub
mov
mov
fbld
add
jno
xor
loopne
in
or
sarb
jmp
std
mov
add
clc
jg
shll
loop
int
mov
outsb
orl
je
adc
xchg
xchg
arpl
std
cmp
ficoms
mov
mov
jle
out
pusha
pop
dec
pop
popf
in
ss
mov
mov
inc
aad
loope
jmp
repnz
pop
call
xchg
or
xchg
or
sub
out
adc
or
sbb
xchg
mov
dec
scas
je
mov
cs
push
imul
or
ss
fwait
out
adc
loope
dec
inc
jb
mov
jnp
cmpl
mov
sbb
add
mov
std
daa
xchg
sbbb
ja
lock
pusha
fsubrl
dec
xor
mov
sub
imul
test
xchg
aad
mov
inc
rorl
push
or
data16
xchg
lahf
imul
ja
adc
xchg
sub
insl
mov
or
mov
mov
sub
scas
arpl
sub
pop
pop
mov
ret
jmp
je
and
std
mov
jb
sbb
xor
mov
mov
xchg
aam
por
dec
jg
sub
iret
cltd
or
jns
and
mov
adc
lods
sti
xchg
cmp
xchg
nop
mov
add
in
imul
inc
out
fsubrl
push
dec
ds
movsl
pushf
push
mov
mov
std
mov
mov
pop
pop
lret
pop
push
mov
out
dec
shrb
aas
or
cmpb
mov
push
push
sbb
dec
or
adc
testb
lcall
mov
or
loopne
mov
pushf
push
arpl
add
xchg
mov
in
xchg
adc
lcall
inc
rorb
icebp
adc
into
inc
adc
ror
jbe
mov
roll
cmp
push
mov
orl
in
pop
mov
shrb
fsubrl
adc
iret
dec
cs
add
clc
int3
decb
mov
call
push
push
fcoml
stos
dec
sub
in
int3
out
push
clc
xchg
fsts
xor
mov
xchg
sbb
or
lret
mov
in
dec
inc
outsb
xchg
mov
pusha
data16
inc
leave
mov
mov
xchg
data16
sub
push
fsubrs
adc
mov
xor
cmp
mov
and
xchg
mov
data16
mov
sbb
fisubrl
icebp
fstpt
aas
out
jo
pop
cld
pop
mov
push
and
fdivrl
fldt
push
pop
cmp
push
aam
sbb
shll
add
jno
mov
fstps
jb
sbb
imul
aas
pop
aaa
sbb
out
test
jno
ficomps
sbb
cmp
loop
xchg
push
mov
add
mov
sub
out
adc
test
out
cmp
ss
cmpsl
fnsave
pop
jnp
cmpsl
and
inc
xchg
pop
jae
jmp
repnz
ficoml
xor
inc
jnp
ret
jge
adc
inc
mov
jno
out
es
fildll
lods
shll
push
mov
js
fdivrl
jp
xor
add
enter
rorl
aad
outsb
sarl
push
sub
fdivrs
clc
jae
cmp
cs
pop
mov
cmp
sub
hlt
mov
sbb
mov
xor
pop
fs
test
adc
out
shr
sub
gs
push
das
lods
dec
call
push
mov
filds
jns
testl
testb
cmc
js
xor
fdivl
push
or
mov
lods
dec
mov
clc
adc
stos
dec
movsb
sbb
push
sub
pop
orb
inc
xchg
int
add
test
dec
dec
gs
and
sti
push
xchg
cmp
sbb
and
test
mov
jae
int3
lods
mov
call
fldcw
sbb
add
stos
sbb
mov
pop
xor
addb
mull
and
inc
xchg
push
lds
clc
mov
or
cld
loop
mov
cmpsb
push
add
loope
adc
cs
gs
fisttpll
pop
push
pop
cli
dec
mov
hlt
jp
xchg
sbb
fprem
ret
popf
mov
jge
rcrl
or
outsb
or
out
and
xlat
and
stc
loop
pop
sti
lret
and
fdiv
pop
imul
mov
mov
dec
sahf
loope
lahf
movsl
xor
pusha
pop
enter
mov
daa
in
mov
xor
stc
push
xchg
aas
inc
in
movsl
mov
test
outsl
in
movsl
pop
jecxz
mov
push
fiaddl
mov
insl
jno
out
pop
into
push
jg
mov
cmp
sub
sbb
cmp
jp
in
cmp
loope
fcomp
mov
inc
pop
mov
dec
lock
js
mov
pop
aaa
shlb
mov
cmpsl
popa
jmp
int
in
adc
xor
cmp
in
mov
jae
lcall
insl
movsb
mov
mov
sub
aas
lahf
inc
add
pop
lds
lahf
sti
fsubrl
inc
inc
sub
cmp
cmpsl
rorb
lods
sahf
out
mov
cmp
and
repz
bound
jl
jae
loop
repnz
bsf
xchg
call
push
es
das
cmc
dec
cmp
sub
xor
and
stc
aas
push
sbb
or
or
fldl
or
faddl
shlb
mov
mov
bound
insl
insl
fwait
push
and
nop
sbb
fldcw
addl
cmp
mov
divb
movsl
and
inc
gs
lods
inc
aas
test
cld
sub
adc
adc
shr
bound
adc
mov
xchg
cmp
dec
rcl
push
mov
cmp
xchg
ljmp
fimuls
pushf
negb
mov
push
mov
push
stc
push
shll
into
xchg
dec
mov
mov
shrl
jmp
in
jns
fstpt
xchg
mov
inc
cmc
dec
punpckldq
loop
adc
mov
pop
and
add
cmc
fucomip
mov
dec
loope
gs
jnp
mov
inc
jle
and
cltd
pushf
pop
pop
jmp
pop
adc
lds
pop
fs
adc
lret
cmc
and
and
adc
sub
hlt
jl
fs
push
jmp
cmp
sbb
scas
jns
cmp
icebp
jo
mov
mov
sbb
cmp
add
mov
add
pop
jns
sti
push
ds
cmpsb
dec
inc
push
push
test
push
das
mov
add
dec
jb
pop
push
ja
clc
lods
pop
daa
xchg
mov
sahf
pop
pop
imul
mov
fistps
mov
hlt
stos
dec
ja
les
jg
adc
lahf
ror
pop
stos
aaa
aas
cmp
rolb
aam
mov
hlt
mov
mov
cmp
mov
jae
cwtl
int3
orb
xor
cli
mov
outsl
push
popf
add
lea
imul
mov
sub
sub
ljmp
xchg
je
sti
jae
addb
inc
push
rolb
fildl
pop
xor
xor
pop
sahf
sbb
aaa
or
sbb
xor
fstl
add
sbb
sbbl
sub
mov
inc
mov
inc
shlb
cs
mov
mov
add
fdivl
iret
cltd
cmp
es
movsb
js
enter
push
mov
aam
test
stos
mul
imul
rcll
rolb
add
mov
and
push
fwait
add
verw
out
cwtl
xor
dec
std
add
scas
scas
aas
mov
or
sub
xor
shlb
popf
imul
jno
es
and
insb
push
mov
sub
cli
dec
cs
cmpsb
and
test
imul
xlat
xor
adc
cmp
jmp
into
ficompl
and
in
sbb
dec
pop
shlb
inc
test
addr16
gs
es
lret
mov
stos
adc
shll
test
lock
shrb
cltd
scas
lahf
or
sub
mov
into
push
lcall
fstpl
and
and
sbb
mull
sub
pop
jmp
jp
mov
fsubrs
icebp
lret
dec
and
ljmp
jo
sbb
inc
dec
jnp
push
dec
mov
lret
xchg
repz
mov
in
lahf
loope
jecxz
sbb
or
addr16
or
vmread
out
pop
pop
int3
sbb
mov
call
jnp
push
sbb
aad
mov
in
mov
or
push
inc
cmp
lods
fnsave
sub
dec
int3
aad
mov
cmpl
xchg
mov
rorb
lods
shlb
pop
rcrb
mov
fdivrl
sbb
iret
mov
scas
icebp
fstl
je
pushf
aad
roll
data16
decb
lods
mov
pop
clc
jmp
xor
dec
das
or
jno
cwtl
popa
mov
mov
xorb
jecxz
sti
stos
xor
in
push
xchg
lahf
xchg
aaa
pop
sub
sbbb
dec
jecxz
cmp
mov
imul
mov
shr
test
xchg
mov
fdivr
fyl2x
jge
xor
shrb
push
adc
and
mov
inc
clc
lea
in
sub
push
jns
insb
das
adc
int3
jne
sub
imul
mov
inc
xchg
jo
lock
xlat
shrb
in
lods
popl
loop
iret
popa
jne
jne
sub
push
aas
push
push
rcll
pop
pop
data16
scas
std
dec
cmp
mov
fwait
inc
add
cmpsb
pop
cmp
add
cmp
pop
add
mov
cli
or
dec
push
add
xchg
pop
add
inc
mov
mov
stos
or
lds
lahf
mov
xchg
rol
movsb
in
pop
add
push
push
cmpb
mov
stos
sub
aam
sub
jl
aad
or
movsl
into
movsl
les
jne
lods
jp
xor
inc
xor
popa
and
cld
test
add
insl
test
scas
lcall
mov
out
push
add
xor
inc
loopne
insl
scas
std
mov
imul
xchg
pop
and
test
outsb
mov
imul
nop
xchg
stc
adc
rcrl
test
fwait
das
test
mov
add
call
pop
and
pop
dec
jns
addr16
jno
leave
and
ficoml
sarl
push
in
push
movsl
daa
enter
into
mov
outsb
push
icebp
aam
lahf
cmp
aad
cli
xchg
nop
fdivs
syscall
lods
mov
leave
cmp
xchg
mov
inc
cltd
cwtl
sub
mov
mov
jmp
nop
xacquire
repz
insl
repz
lret
outsl
xlat
push
or
push
dec
or
mov
ljmp
outsb
inc
cmp
inc
fidivrl
clc
pop
ds
fldl
stc
testl
sbb
andb
mov
icebp
mov
mov
cmp
inc
xor
popf
jno
loope
pop
jecxz
sub
push
data16
aad
push
cmpsl
insb
data16
fs
popa
jl
lea
movsb
and
mov
cmp
call
mov
mov
mov
and
cmpsb
xor
test
sbb
sub
dec
loop
xchg
mov
sub
cltd
mov
test
or
add
jmp
sub
xchg
xchg
out
xchg
push
xor
mov
mov
xchg
insb
xchg
add
xchg
int3
mov
mov
sbb
leave
arpl
jmp
les
scas
pop
pop
gs
shl
lret
add
sbb
and
xchg
mov
cmp
cmp
mov
inc
add
insl
push
lock
pop
inc
xor
or
fdivrl
cmp
mov
xor
je
mov
idivl
les
test
out
in
das
cli
jg
add
stos
in
ljmp
pop
test
inc
arpl
lahf
xor
mov
in
aas
sbb
enter
inc
scas
add
imul
cwtl
ror
jmp
lcall
jecxz
ss
iret
sti
rcrb
jmp
pop
cmp
movsl
scas
dec
test
into
ss
and
out
outsl
pop
pop
and
pop
jno
sbbl
dec
jle
cmpb
push
push
lahf
fcoms
jne
cmp
cli
mov
cmp
jmp
add
jge
into
inc
test
enter
shr
mov
test
insb
mov
cli
mov
jle
jnp
hlt
mov
push
mov
les
add
dec
and
inc
mov
jb
fs
mov
xlat
enter
stos
ds
sub
lock
addr16
pop
dec
jmp
insb
repz
cld
scas
or
jnp
inc
and
and
lods
out
adc
dec
inc
add
sbb
mov
sub
push
cs
ss
add
out
xchg
ret
inc
into
stos
ss
sbb
fistps
sub
cmp
push
out
rol
jo
and
xor
inc
or
add
add
test
pop
xchg
ret
and
shrl
adc
sub
jg
lods
add
push
out
shlb
test
shrb
cwtl
mov
pop
jne
pop
xlat
js
rorl
mov
cmp
mov
stos
pop
shrb
mov
cmp
mov
std
test
in
push
adc
add
jnp
xor
mov
out
insb
xor
bound
inc
push
test
mov
fimuls
icebp
getsec
and
xchg
xchg
int
arpl
pusha
sub
ljmp
xchg
insb
pop
jp
add
mov
jmp
jecxz
inc
das
mov
clc
and
xchg
sbb
outsb
mov
jmp
and
sti
xor
xlat
sbb
popf
dec
mov
pop
and
sbb
adc
push
and
fstps
xchg
sub
xchg
or
sbb
dec
fimull
lods
orb
stos
dec
cmpsb
movsb
jmp
leave
mov
ds
mov
mov
mov
leave
mov
and
cmp
push
jecxz
mov
xchg
mov
movsb
pop
adc
jb
out
clc
aaa
push
rcr
roll
mov
mov
jnp
push
repnz
aas
in
or
mov
leave
ffreep
cmpsb
int3
jne
inc
int3
xlat
push
aas
sbb
adc
sub
sub
push
std
inc
inc
push
cmp
push
push
and
push
cwtl
xchg
xor
cmp
scas
out
out
mov
ja
les
adc
or
push
sbb
loope
mov
out
jmp
fxch
xorb
cli
mov
jmp
out
sbb
add
cmp
dec
cld
mov
xchg
cltd
sbbl
aaa
das
sbb
or
push
popf
mov
lcall
inc
test
and
imul
cli
mov
fistpll
xchg
inc
cwtl
jecxz
in
sub
adc
jns
repnz
adcb
out
bound
int3
in
mov
jae
mov
insl
icebp
xchg
lea
data16
xchg
addb
adc
inc
xor
call
ret
or
pusha
adc
push
dec
mov
mov
ss
sbb
mov
jne
fsub
sub
orb
pusha
mov
scas
mov
jns
xor
outsl
cmp
or
pop
call
cmc
dec
inc
xchg
fisubs
lds
push
dec
cs
jecxz
xchg
dec
mov
xor
aad
test
xor
call
testb
leave
push
adc
mov
push
inc
cmpsl
jnp
sar
mov
dec
xchg
mov
or
in
jbe
inc
imul
inc
mov
test
out
mov
stc
jmp
push
int
push
daa
jae
pop
mov
popf
outsl
mov
ficoml
mov
sbb
or
push
push
fcmovbe
in
mov
daa
add
cs
push
and
in
and
lock
inc
fsubr
test
sub
add
and
mov
cmpsl
and
inc
movsb
mov
jae
adc
outsb
sub
test
addl
out
ret
fst
fcomi
bound
jo
mov
sarl
scas
add
xchg
inc
imul
sub
push
leave
and
mov
ficoml
cmc
inc
mov
xchg
jp
negl
or
cmp
cmpsb
inc
mulb
inc
xchg
movsb
fcomps
movsb
push
stos
es
jns
cmp
xchg
or
repnz
roll
iret
mov
push
push
ss
or
aaa
in
out
dec
lret
dec
and
adc
sahf
fwait
cmp
lahf
js
push
dec
cmp
pop
pusha
js
jmp
xlat
jno
loope
jle
hlt
and
pushf
cmp
dec
rorb
aad
cli
xchg
ficomps
inc
and
cmp
rolb
pop
in
cli
fsubrl
loop
pushf
jecxz
or
sbb
jg
rcr
addl
sub
leave
pushf
fistpl
insb
out
clc
mov
ret
pop
icebp
ss
insb
cmpsl
dec
mov
xor
stos
andb
pop
out
push
jmp
lret
aad
add
cli
lods
add
add
stc
xchg
fcoml
push
dec
cltd
lea
adc
jb
push
or
stos
ds
das
or
cltd
leave
arpl
pop
push
rcr
in
pop
out
or
jo
insb
sarb
insb
sbb
jp
add
fisubs
fisttpll
xor
out
jg
lahf
dec
cwtl
cmp
sub
in
mov
jge
out
sbb
jp
adc
dec
dec
fs
pop
movsb
pop
dec
aaa
inc
dec
adc
sub
xchg
jb
xchg
addr16
stc
std
adc
cmp
inc
adc
es
adc
lods
fimuls
adc
sub
repnz
insl
dec
cmc
lock
cwtl
adc
dec
push
rcrb
loope
mov
jmp
cmp
lds
cli
sbb
sahf
std
xchg
adc
mov
dec
add
cmpsb
sbb
mov
sbb
add
add
clc
jle
cli
mov
popf
jp
sbb
stos
mov
push
pop
jle
mov
or
adc
pop
fcmovne
loop
add
adc
mov
sub
mov
es
js
dec
jne
pop
out
int
hlt
jbe
pop
and
sbb
mov
das
mov
adc
fwait
lret
pop
adc
out
fiadds
lahf
clc
pop
mov
sahf
rol
lret
dec
out
dec
push
xor
inc
or
cld
je
xchg
add
fidivrl
mov
inc
or
insl
fstl
loopne
push
shl
mov
jl
lcall
jecxz
ds
mov
jmp
xchg
test
loop
dec
stos
xchg
sub
and
or
xchg
inc
adc
xchg
test
cmp
xor
push
cmpsl
or
add
pop
cld
in
fcomps
sub
xchg
js,pn
popa
push
adc
inc
inc
lahf
into
pop
push
push
scas
sub
mov
adc
int3
ret
jb
dec
jbe
push
rcll
dec
xor
xor
push
add
pop
test
add
mov
pop
mov
pop
jne
test
or
lahf
cmp
repnz
xlat
jecxz
bound
sarb
push
pop
xchg
scas
xor
adc
cmc
outsl
mov
push
lea
jae
jbe
add
jl
xor
stos
push
ret
out
stc
adc
aaa
jne
ret
push
sbb
push
cmp
jmp
inc
mov
cmc
push
pushf
add
repnz
cmpsl
ret
adc
repnz
jg
mov
movsb
std
mov
jecxz
mov
lds
mov
push
sbb
sub
leave
inc
sbb
sbb
push
std
xor
je
push
mov
flds
adc
xor
nop
push
outsb
mov
orb
loopne
nop
jno
jle
xchg
out
cmpsl
add
data16
and
lcall
sahf
negl
ret
ds
in
jae
movsb
add
mov
imul
sub
lret
mov
sarl
mov
pop
aaa
push
hlt
lea
or
dec
scas
hlt
rcr
out
sub
xor
and
xor
test
subb
aaa
inc
jp
inc
xchg
lea
mov
nop
ja
aaa
xor
cmp
ret
adc
sbb
cmc
aaa
inc
fs
in
ja
popa
addb
xchg
adc
mov
mov
push
or
orb
jmp
lahf
pop
jecxz
fptan
shrl
es
addr16
mov
push
arpl
repz
cmc
jp
je
xorb
int3
cs
lds
adc
xchg
adc
xchg
pop
mov
mov
in
or
fiaddl
dec
mov
dec
sti
adc
or
les
bound
adc
shll
subb
lea
push
mov
xchg
xchg
add
mov
in
jmp
fistpl
or
pop
adc
rcrb
je
in
ljmp
jo
push
xchg
mov
push
sub
jge
flds
cmovno
leave
ror
mov
xchg
adc
outsb
add
int
jecxz
mov
fisubrl
inc
add
inc
rolb
addr16
pop
or
bound
imul
iret
sub
pop
dec
loopne
int3
dec
inc
iret
js
push
out
sbb
adc
ret
setae
stos
insl
and
mov
jo
repnz
enter
add
add
addr16
mov
push
add
xor
loope
aaa
adc
sub
pop
mov
or
cmp
notb
lods
dec
int3
rclb
arpl
mov
fwait
and
pop
and
adc
mov
test
pop
das
fisubs
mov
sub
btr
or
aad
imul
push
mov
jmp
xchg
clc
inc
and
das
sbb
sbb
repz
pushl
lock
dec
pop
xor
daa
pop
arpl
insb
push
jo
popf
xchg
or
jg
test
push
pusha
xor
add
loopne
inc
pop
subl
nop
xor
push
jle
cmpsb
mov
push
xor
lcall
xor
in
dec
cs
mov
clc
lods
pusha
int
mov
mov
ret
cs
cmp
sbb
push
mov
lret
aas
call
and
out
lock
orb
mov
bound
push
mov
or
adc
push
push
faddl
outsl
sub
xchg
pop
dec
sbb
dec
test
mov
pusha
jle
push
jno
xorb
out
xchg
lods
bnd
add
jg
fldt
lds
out
mov
or
popl
adc
fimull
mov
xlat
jbe
adc
aaa
out
inc
mov
loopne
add
push
mov
adc
mov
mov
stos
jae
clc
mov
sbb
nop
xchg
mulb
ret
enter
imul
and
push
mov
sub
xchg
and
and
mov
pop
int3
and
add
pop
enter
and
push
and
push
filds
mov
mov
ja
clc
add
roll
push
in
movsl
stc
cmp
mov
push
testb
call
cmp
and
add
xchg
arpl
sbb
jge
rcrb
sbb
mov
push
mov
icebp
sbb
sub
mov
sbb
pop
mov
sub
mov
dec
loopne
mov
loop
fnstcw
push
and
mov
notb
ljmp
cmp
pop
and
xor
lahf
sti
in
out
mov
xlat
mov
xor
lret
rclb
pop
fmuls
jb
hlt
insl
xor
jl
jb
mov
push
dec
scas
cmc
jmp
inc
dec
sub
lret
pop
cmpsl
xchg
out
inc
cmpl
into
cmp
lret
push
sbb
test
fdivrs
fists
rcl
xchg
inc
inc
test
push
outsb
fisubrs
xor
inc
sub
ljmp
jo
iret
das
aaa
out
in
scas
mov
into
jns
sbb
scas
fistpl
xor
cmp
arpl
int
xchg
cmp
je
pop
xchg
stos
mov
jo
inc
inc
push
sbb
fstsw
xchg
pop
jbe
mov
xchg
push
xchg
orb
and
or
push
or
pop
xor
pushf
dec
sub
out
test
jns
mov
test
out
adc
sub
imul
dec
fmul
mov
cmp
sbb
das
enter
idivb
fwait
pusha
sub
pusha
lahf
push
adc
aad
lods
sub
subps
aaa
pop
icebp
shll
dec
lcall
add
inc
mov
mov
cmc
dec
lea
fidivl
sar
ret
popa
dec
or
shlb
mov
mov
jmp
popa
call
or
call
fnstcw
inc
flds
cli
cmpsb
mov
idivb
into
xlat
scas
ds
push
xchg
testl
fldenv
add
in
xor
mov
sti
fucomp
fnsave
outsl
xor
jmp
xor
jmp
aam
int3
aaa
nop
pusha
dec
push
gs
push
aas
fstl
clc
out
shrb
xchg
cmp
aam
pop
add
xlat
popf
xor
push
jo
add
in
lock
sbb
dec
in
call
scas
jge
push
push
inc
mov
popf
sbb
clc
or
ljmp
mov
cltd
vmwrite
sub
mov
cwtl
rol
or
icebp
mov
adc
movsl
repz
sbb
sbb
xchg
mov
mov
inc
clc
stc
add
mov
inc
sbb
stc
das
mov
and
push
xor
dec
leave
and
dec
jns
pop
stc
ret
cmp
jns
jo
jne
cmp
inc
inc
add
jg
xor
daa
mov
inc
lods
stos
mov
clc
mov
cltd
cmp
mov
mov
jno
push
cmp
lret
push
fidivrs
sbb
xchg
daa
jnp
inc
mov
and
sti
add
inc
fs
mov
cltd
in
data16
test
scas
sub
repz
or
mov
jno
sub
jae
movsl
mov
clc
adc
ja
mov
stos
pop
jp
sub
inc
fprem1
fs
xchg
lods
int
loope
cltd
lods
dec
and
pop
aaa
adc
call
sub
xlat
dec
and
jle
test
inc
fsts
push
loopne
cs
push
push
arpl
xor
fs
adc
arpl
daa
or
jle
pushf
test
pushf
mov
sub
push
into
pop
xchg
pop
lds
ret
push
dec
mov
xor
and
aad
jle
xchg
insb
jle
xor
jge
mov
mov
push
into
imul
divl
mov
push
pop
data16
xor
mov
sbb
imul
xchg
and
lret
pop
lahf
ret
adc
test
pushf
push
ret
packuswb
mov
adc
adc
and
jmp
jb
pop
push
sbb
add
inc
lret
icebp
mov
xor
cmovne
loop
cmpsb
or
or
mov
jmp
cmp
inc
ss
mov
jb
in
jo
pop
mov
pop
sbb
inc
testl
or
mov
mov
sti
ret
pop
test
mov
push
lea
xchg
or
insl
popa
jns
mov
cmc
add
cmp
xor
test
test
stos
stc
js
hlt
jbe
mov
pop
sahf
add
cmpsb
mov
push
cli
pushf
and
cli
stc
jno
xor
test
add
sti
inc
dec
adc
jo
cmp
ret
into
jo
sub
aad
adc
test
jno
pop
loopne
dec
mov
lds
mov
enter
mov
push
push
mov
and
push
cs
pop
push
das
push
pmaxsw
mov
ljmp
push
push
and
fidivrl
mov
pop
mov
lea
popf
mov
dec
fstps
push
ret
pushf
lcall
stos
xchg
scas
hlt
mov
cmp
imul
out
mov
xchg
bound
fsub
int
cmp
js
outsl
sbb
insb
mov
mov
sub
shrb
mov
pop
adc
pop
mov
mov
jo
lret
mov
xor
pushf
test
stos
imul
cmp
xor
xchg
repz
adc
and
loop
in
gs
loop
mov
pop
rcl
clc
cs
test
inc
sbb
sub
jnp
add
stos
cmc
shl
xchg
jbe
loopne
out
mov
in
sbb
add
aas
mov
andl
mov
dec
mov
sbb
std
ljmp
mov
shl
xchg
inc
fmuls
xchg
ljmp
std
shlb
mov
adc
in
and
xchg
xchg
jae
mov
dec
repz
ja
dec
mov
mov
jo
stos
aaa
sub
add
mov
sub
mov
dec
mov
jl
lret
scas
scas
sbb
subl
adc
arpl
fs
bound
pop
mov
in
and
fistps
push
push
rcll
or
and
cli
inc
jb
and
pop
pop
ret
inc
inc
mov
jo
pop
pop
adc
add
push
inc
push
sub
mov
pop
jbe
and
hlt
dec
std
jmp
cwtl
jnp
arpl
lret
aam
mov
cmc
jecxz
mov
mov
push
fnstcw
orb
inc
xchg
iret
daa
xchg
jae
aad
push
movsb
xlat
pusha
mov
andl
sti
push
mov
movsl
push
mov
xchg
call
imul
inc
sub
mov
adc
xor
loop
jge
push
pop
jnp
movsl
jnp
out
ss
cmp
mov
sbb
push
pusha
test
cld
push
das
cltd
push
call
test
add
repz
in
and
jp
xchg
push
testb
pop
cmp
roll
neg
iret
fwait
ja
out
rcl
push
testl
fcmovb
lcall
lcall
cs
outsl
test
addr16
xor
adc
test
mov
xor
push
fs
pop
push
pop
scas
push
inc
int3
in
mov
test
incb
adc
push
lods
push
push
icebp
and
enter
dec
push
push
sbb
lcall
mov
xor
scas
cs
scas
sub
mov
xchg
fst
xchg
arpl
xor
scas
aaa
leave
pusha
clc
mov
and
jnp
dec
and
les
lock
sbb
jb
xchg
dec
insb
enter
insl
movsl
xchg
lea
dec
cmp
out
add
dec
jmp
inc
lds
xchg
mov
inc
pop
add
lret
pop
fldl
xchg
rcrl
adc
and
and
loop
xchg
mov
fldcw
cvtpi2ps
fs
popa
pop
adc
icebp
sub
mov
ret
mov
pop
push
inc
sub
push
imul
cmp
icebp
adc
xchg
insl
or
jns
sub
inc
jle
stos
xor
sbb
out
popa
add
outsl
movups
inc
pop
mov
sti
push
mov
rep
or
sbb
xor
xchg
imul
pop
push
xor
xchg
add
mov
out
add
push
mov
sti
enter
pop
jl
pop
xor
stc
js
iret
cltd
ljmp
insl
xchg
imul
mov
or
scas
mov
mov
inc
dec
xor
sbb
jmp
add
mov
add
pusha
mov
lock
stos
mov
icebp
add
sbb
mov
fprem1
xchg
adc
pop
dec
stc
add
repz
mov
ror
ret
dec
stos
xor
xchg
xor
mov
outsb
outsb
sub
jp
aad
ret
jle
popf
jmp
inc
mov
xor
dec
adc
adcb
sti
mov
adc
fldenv
leave
push
push
vmovddup
leave
pop
add
fldenv
leave
jnp
sub
aas
lock
shr
mov
xchg
divb
xchg
mov
sub
dec
rorb
xor
cltd
aam
inc
xchg
cmpsb
popa
inc
cltd
or
xchg
cld
pop
cmp
imul
stos
jno
icebp
add
imull
dec
fwait
push
jp
add
addr16
jge
mov
adc
sub
xor
aam
das
fimuls
cmp
std
sbb
pop
mov
push
fidivs
pop
add
inc
sub
int3
aas
pop
jnp
gs
loopne
ja
in
xor
imul
in
mov
push
int3
rclb
and
xchg
insb
or
lcall
aaa
das
sbb
cmp
arpl
cmp
mov
adc
xchg
and
push
mov
ret
push
push
icebp
mov
in
insb
aam
add
arpl
fsubrs
or
sub
cli
jle
inc
pop
mov
pop
dec
and
loopne
hlt
mov
push
jp
fsts
dec
std
mov
loopne
insb
jno
cmpb
stos
ss
or
push
push
lahf
mov
cmpsl
sub
dec
sub
pop
mov
sahf
fldenv
sub
sbb
js
lock
pop
cwtl
inc
lock
mov
adc
ss
clc
mov
in
aaa
mov
orl
push
bound
pop
push
xor
cmc
inc
mov
ret
inc
les
addr16
or
gs
sub
fldcw
les
aaa
dec
insb
mov
ljmp
xchg
cs
data16
pop
push
js
imul
xchg
ja
pop
adc
testl
lock
jmp
mov
inc
jge
out
rcrl
test
inc
call
and
mov
sti
or
push
mov
pop
popf
jecxz
dec
sbb
dec
jmp
stos
cmp
xchg
pushf
iret
das
mov
in
add
pushf
nop
mov
nop
cltd
rolb
mov
aad
mov
mov
mov
leave
mov
sbb
push
inc
rorb
shlb
shr
xor
add
add
xchg
roll
lods
ret
sub
jmp
mov
scas
out
sub
fstpt
lret
and
mov
sbb
rclb
adc
or
adc
jl
mov
xor
xchg
sbb
scas
andb
sti
out
mov
adc
adc
jmp
mov
push
mov
rcl
dec
out
inc
adc
xor
loopne
jnp
add
testb
and
sbb
das
std
lret
jmp
lods
push
sti
inc
mov
pop
mov
xor
call
test
dec
adc
pop
inc
mov
and
sbb
mov
add
push
dec
mov
js
push
ja
out
push
adc
pop
call
adc
mov
sbbl
pop
mov
xorb
out
cmpsb
or
inc
es
ss
dec
push
jno
xchg
or
mov
sub
clc
xchg
lret
adc
inc
loopne
fdiv
iret
sub
push
or
push
popa
cld
pop
int3
test
xchg
push
ja
inc
adc
stos
mov
xor
jno
sbb
jb
lahf
lea
pop
dec
cmp
sbb
jp
inc
dec
scas
sbb
popf
push
sub
sbb
mov
jo
and
jnp
cmp
push
js
rcrb
dec
clc
negb
ljmp
negb
mov
push
mov
dec
sbb
icebp
xchg
mov
pop
inc
jb
mov
int
out
and
dec
orb
aaa
jg
pusha
mov
xchg
sub
jl
xchg
ret
jbe
mov
pop
in
inc
sub
or
ljmp
insb
adcl
adc
iret
mov
jg
movsl
pop
repz
xor
fs
jp
pop
push
lret
ret
or
inc
in
dec
cmp
mov
cmp
mov
inc
cmp
scas
jne
aas
cmp
pop
neg
add
or
negl
xor
and
test
xor
jmp
filds
pop
cmp
jmp
rclb
std
sahf
pushf
shl
fisubs
subl
dec
addb
and
out
in
test
imul
les
rorb
ds
push
cmp
mov
cmp
add
jl
outsl
in
mov
das
out
fsts
ljmp
fs
scas
inc
nop
pushf
push
cmp
mov
int
fstl
sub
pusha
jo
sbb
out
incl
xor
sbb
out
cmp
in
sbb
inc
rorl
out
jne
sarl
out
push
mov
dec
xlat
sbb
loopne
mov
jo
cmpsl
mov
aaa
or
dec
fsubrs
fdiv
lahf
cmp
inc
rol
out
lret
add
dec
adc
sub
or
test
xorl
cltd
adc
arpl
outsb
add
gs
jg
int3
ljmp
and
adc
aas
cld
loope
xor
cmp
scas
jle
and
inc
addr16
mov
push
incb
test
jo
add
lea
sub
jmp
lea
inc
lahf
add
cmpsl
jp
xor
das
cmp
jns
aad
cmpsl
xlat
stos
cmpsl
lahf
mov
add
loop
lock
adc
dec
out
cmp
inc
pop
aaa
xor
scas
movsb
pop
pop
xchg
pop
in
push
mov
in
cmpsl
stos
lea
pop
mov
faddl
movsb
inc
jne
and
cmp
out
jg
jno
ss
dec
fs
push
cmp
mov
push
movsb
std
sbb
nop
cmc
cs
or
mov
call
aam
daa
pop
jge
add
ret
aas
fnstenv
cmp
mov
inc
loopne
clc
mov
fmuls
add
jae
and
xchg
mov
dec
add
xchg
lret
subl
xor
and
rcrl
mov
pop
insl
adc
cltd
ret
mov
xchg
sbb
out
inc
adc
jg
and
pop
fwait
mov
leave
lahf
xchg
test
pop
xor
mov
loope
in
popa
mov
sbb
lcall
inc
inc
push
mov
cwtl
adc
pushf
shrl
mov
lea
dec
test
out
enter
stos
movsl
sbb
cmc
test
lret
aad
leave
pop
dec
xchg
dec
sahf
mov
into
outsb
mov
xchg
or
pop
in
dec
cmc
cmp
xchg
jl
scas
daa
ss
ret
pop
pop
lea
stc
push
push
add
jge
data16
mov
lret
xchg
in
iret
pushw
enter
sub
faddl
and
xchg
popf
loop
repnz
fistps
xor
out
xor
repz
fisubrs
in
xchg
stos
jp
mov
push
icebp
shrl
js
ffreep
fadd
call
mov
mov
mov
jb
iret
sub
aaa
add
ja
xchg
dec
jno
dec
cmpsl
mov
sbb
push
cmc
pop
jnp
repnz
gs
lea
mov
bound
xchg
sbb
sub
xor
push
add
mov
stos
sub
mov
idivb
daa
mov
stc
fistl
mov
push
je
sbb
into
in
repz
dec
xchg
xchg
jnp
scas
call
mov
addb
sbb
sbb
or
adc
sbb
xor
icebp
or
push
dec
pusha
add
push
adc
cmp
pusha
or
movsb
pop
cmpsl
push
cltd
jno
orb
jb
add
stos
xchg
imulb
or
in
sbb
sub
bound
inc
in
add
fcmovb
mov
pop
mov
jmp
fsubl
inc
jb
clc
insl
movsl
mov
mov
mov
mov
dec
xchg
cs
dec
call
imul
aas
sub
jb
sbb
fistps
aad
push
adc
loopne
aam
arpl
cli
sub
push
shlb
adc
lret
shl
imul
xor
xor
and
in
and
cwtl
sarl
pop
inc
and
pop
ficompl
dec
leave
push
out
les
push
or
shrb
push
cli
hlt
dec
in
test
adc
and
data16
or
add
pop
jne
mov
mov
jmp
lods
stos
sbb
btr
rcrb
rorb
mov
push
mov
scas
imul
pop
test
pop
pushf
push
or
loopne
repnz
or
movsb
xor
inc
or
add
js
test
add
pop
adc
mov
daa
xchg
jae
loope
dec
dec
xor
hlt
adc
mov
pop
cmpsl
xor
inc
and
and
jo
jg
clc
sub
cwtl
imul
and
xor
push
pop
push
xor
lock
in
push
out
test
pusha
sbb
imul
mov
jge,pt
loopne
enter
push
add
xchg
cmpb
std
loop
pop
cltd
cmpsb
int3
sbb
push
mov
cmpsl
add
pop
mov
lods
fistpll
das
push
cmp
incb
jnp
pop
fildl
sbb
dec
cs
pop
dec
iret
xchg
mov
push
das
pop
push
loopne
ljmp
and
pushl
lods
pop
mov
jl
repnz
out
mov
test
rcr
pop
cltd
mov
mov
fs
cmc
or
mov
fwait
outsb
mov
mov
xchg
jmp
mov
popl
push
sbb
es
test
call
jp
xor
ficompl
je,pt
roll
stc
mov
ret
dec
jo
les
adc
push
mov
mov
push
inc
ss
push
out
mov
or
loope
adc
xor
int
fwait
lock
sarl
xchg
addb
outsl
and
add
insb
xchg
jge
aaa
pop
sbb
cmp
and
mull
inc
sti
rcrb
push
jne
test
das
imul
mov
repz
cld
pusha
aas
xchg
jno
jno
or
push
leave
cld
jnp
pop
sbb
cs
push
jge
jg
out
mov
xor
fisubrs
cmp
jg
mov
sbb
xor
or
xchg
lret
add
xchg
cld
inc
mov
rcrl
push
aad
mov
adc
lods
dec
mov
mov
xor
andb
imul
mov
mov
dec
xor
leave
jecxz
push
outsl
pop
xchg
hlt
jno
sbb
adc
mov
arpl
popa
inc
int3
inc
out
xchg
sbb
int3
add
push
xor
frstor
adc
and
xchg
popf
das
lret
fstps
or
add
xchg
cld
pop
dec
lods
push
adc
data16
rorl
mov
mov
scas
jne
pop
std
inc
jmp
jo
sbb
mov
ja
cmp
cmpsl
mov
lcall
jns
xchg
dec
push
fstl
cmpb
movsl
daa
testb
xor
es
imul
push
push
out
jb
push
out
call
inc
or
inc
cs
add
out
sub
ret
sbbb
pop
in
stc
shl
sahf
jns
fimull
xchg
sub
add
insb
pop
test
into
jo
iret
cmp
ret
gs
aas
pop
push
push
in
jge
or
addr16
test
std
cmc
sahf
imul
xchg
ret
repnz
cld
fstpl
dec
cltd
or
inc
and
imul
pop
sub
scas
jg
cmpsb
fcompl
pop
je
adc
inc
es
inc
push
sub
imul
data16
mov
sbb
mov
mov
add
jmp
push
sub
sahf
icebp
jae
xchg
fcomps
test
sbb
mov
mov
sub
movsb
add
rcll
xor
arpl
in
push
mov
addr16
cld
push
je
fs
in
dec
into
adc
jecxz
or
repnz
lds
test
mov
or
jo
mov
jno
xlat
or
testb
adc
mov
out
xchg
outsb
decl
mov
mov
sbb
mov
cmp
pop
ds
leave
sub
jnp
add
iret
in
sbb
dec
mov
das
sbb
test
xchg
in
mov
lock
sbb
inc
test
sbb
push
push
rdpmc
bound
jo
inc
loopne
loopne
sub
xchg
in
pop
jnp
and
outsb
jle
xor
lds
mov
les
and
inc
push
stos
icebp
push
lret
cwtl
pop
stos
pop
imul
xchg
test
sbb
bswap
scas
pop
clc
inc
cmpsl
cmp
leave
jo
lret
cmp
inc
aad
dec
cmp
mov
insl
outsl
std
movsl
or
call
bound
loopne
add
sbb
into
fs
leave
or
xchg
add
inc
adc
in
repnz
cltd
scas
or
std
dec
mov
ss
sti
adc
pop
sub
pushf
decb
xchg
cmp
jg
xchg
pusha
in
aad
out
and
pop
lret
pushf
or
aaa
adc
xchg
xchg
mov
cltd
movsb
and
add
and
mov
dec
pushf
jg
pushf
repnz
push
mov
push
sbb
fdivrs
leave
aaa
dec
sub
gs
and
jnp
jbe
rcrl
fdivrl
fcoml
cmpsb
sbb
mov
inc
dec
loopne
ss
adc
sub
push
dec
inc
xchg
sub
js
mov
ret
stos
pop
iret
shlb
jnp
les
and
les
adc
mov
test
adc
pop
jae
sub
cld
in
test
and
setae
call
and
push
xchg
inc
sub
loop
inc
in
push
and
jbe
and
add
out
mov
popa
pushf
loope
int
std
insl
xlat
incb
pop
pop
mov
fldenv
push
jge
jbe
adc
pop
ds
sub
nop
mov
popf
movsb
xchg
test
mov
int3
adc
fwait
inc
or
mov
cwtl
or
xchg
das
mov
test
pop
shlb
mov
in
xchg
das
fadd
cs
cmp
movsb
pop
cli
or
test
jmp
push
loope
jnp
dec
lret
and
test
xchg
lcall
pop
fsubs
std
jb
ret
mov
or
js
aas
dec
xchg
jns
in
popa
mov
push
sbb
mov
add
aad
ret
call
ret
shl
iret
icebp
aaa
in
sbb
mov
add
xchg
xchg
pop
and
mov
inc
lahf
mov
cs
lahf
aas
int
pop
in
cmc
sbb
sbb
mov
jmp
xchg
add
push
cmp
sbb
addr16
stos
insl
dec
push
dec
out
into
movsl
or
mov
popf
mov
adc
xor
xlat
daa
xchg
cmpl
shll
mov
iret
jecxz
shr
add
jne
scas
adc
sbb
arpl
inc
or
sub
dec
and
jmp
add
shll
sub
dec
out
xlat
sub
gs
sbb
xchg
fadds
jmp
mov
out
push
punpckhwd
push
fldcw
xchg
cmc
fistpll
mov
inc
xchg
ds
cs
int3
lret
fdivrl
xor
je
mov
js
insl
stc
push
pop
mov
sbb
int
jne
int
xchg
stc
or
out
sbb
jne
iret
lcall
mov
mov
mov
pop
xor
icebp
sub
in
dec
sub
inc
dec
mov
push
push
push
adc
jnp
pop
and
sti
ja
jne
sub
xor
loope
out
pop
or
dec
add
neg
xor
bnd
pop
nop
outsl
pop
push
pop
adc
leave
into
imull
mov
cmpb
pop
jae
add
andb
cmp
mov
xor
pop
gs
inc
ja
cli
pop
ljmp
outsl
jp
das
test
xor
insl
dec
sub
lods
jns
sub
mov
dec
in
js
in
fnstsw
mov
cmp
js
dec
or
lcall
xchg
rclb
pop
dec
xchg
aaa
push
sbb
aas
aam
int
pop
mov
sub
faddl
jg
pop
jmp
mov
and
icebp
mov
fisubrs
negl
movsl
hlt
stos
shrb
dec
nop
push
jle
fstps
addr16
sub
cmp
sub
cmp
in
xor
mov
xchg
adcb
cmp
cmp
rcrl
hlt
and
xchg
mov
push
fwait
ljmp
movsl
popf
sarl
es
ss
js
inc
dec
pop
push
cs
lods
loop
push
cmp
fisubs
or
jns
mov
sbb
std
add
lock
test
jnp
mov
lret
mov
inc
in
ljmp
rcrb
xchg
in
lahf
jecxz
stos
test
or
push
lock
int
xchg
data16
mov
xchg
jno
mov
pop
popf
stos
jecxz
pop
ret
jle
lods
outsb
repnz
inc
pop
push
popa
add
lods
push
gs
add
lods
movsl
arpl
pop
in
test
sbb
cmpb
gs
jmp
fwait
sub
xor
int3
or
lahf
iret
xor
rcll
sbb
dec
xchg
pop
faddl
outsb
out
js
push
mov
sbb
cmp
sahf
push
fadds
sub
repz
inc
or
loopne
repnz
cmc
jns
js
push
lods
inc
rcll
cmp
mov
inc
fildl
pop
mov
inc
sbbb
inc
ljmp
pop
lahf
jle
mov
mov
mov
sbb
hlt
repnz
ret
nop
sub
jg
inc
add
pop
in
in
jne
inc
fdivl
loope
pusha
push
into
push
cld
jp
dec
in
lret
gs
push
cmp
sahf
out
mov
push
cmp
push
ljmp
push
jo
jne
add
fsub
or
hlt
outsl
add
ret
out
or
inc
add
adc
lock
pop
je
xor
sahf
nop
popf
ja
mov
and
adc
xchg
and
or
dec
xor
jl,pt
mov
loope
jns
mov
icebp
in
je
push
fdivs
int3
aaa
mov
mov
lret
cmp
sahf
movsb
sahf
mov
cmp
movsl
insl
mov
push
es
jle
jmp
adc
sub
jle
and
shlb
outsl
mov
sbb
push
popf
cs
mov
mov
hlt
push
scas
aad
or
jp
and
jno
in
inc
push
cmp
dec
sbb
pop
mov
and
test
dec
xchg
sub
cmp
fiaddl
xchg
jecxz
rclb
scas
xchg
push
xchg
or
jle
sahf
scas
add
sub
xchg
sub
shlb
nop
mov
inc
pop
xor
cs
pop
add
dec
es
adc
loope
inc
mov
add
jmp
mov
out
daa
sub
adc
mov
data16
loopne
aas
gs
lret
repz
mov
jg
addb
out
push
xchg
mov
cmc
mov
iret
push
shll
fstpl
push
jns
mov
jo
rcrb
loopne
loop
mov
loope
roll
loopne
push
aad
jl
icebp
rcll
pushf
es
ret
mov
and
mov
pop
dec
sub
cmpsl
lock
xor
xlat
test
push
div
fisttpl
cmpsb
leave
mov
sbb
int
cmpsb
lods
jae
add
xor
jb
and
mov
cmp
push
pop
daa
xor
ret
push
std
and
stc
bound
jmp
dec
sub
pop
lock
cmpsb
orl
imul
mov
cmpsb
jmp
in
lods
cmpb
sahf
lea
or
adc
mov
hlt
popf
sub
xor
daa
or
repnz
cs
out
loop
pushf
faddl
xchg
pop
ret
or
std
call
fldcw
or
out
cwtl
in
mov
movsl
inc
or
into
lods
js
sbb
dec
sti
dec
mov
push
jns
dec
push
cwtl
cmc
idivb
xchg
fwait
aad
cmp
cmp
insl
mov
sub
fidivs
je
xchg
or
add
repz
xchg
mov
std
std
movsb
xchg
jle
fildll
and
pop
add
sub
mulb
or
cltd
mov
jnp
outsb
jno
fidivrs
mov
push
addr16
inc
sub
cld
adc
or
enter
inc
mov
jl
je
mov
js
xor
mov
out
cmp
sub
pop
xchg
pop
out
adc
push
cltd
cli
pushf
adc
push
daa
sub
xor
inc
sti
cmpl
andl
cwtl
adc
xchg
bound
pop
mov
push
lds
sbb
and
push
jmp
jbe
mov
lds
nop
sub
cs
cmpsb
lods
ljmp
adc
sbb
enter
xchg
lds
stos
js
dec
inc
inc
into
or
lret
push
test
lock
fists
dec
aad
adc
cmpsb
xlat
add
pop
mov
idivl
leave
mov
xchg
fbld
push
dec
xor
das
frstor
popa
das
cmp
fisubs
or
cwtl
das
adc
sti
inc
jecxz
jg
inc
cmpsb
scas
int
or
cmp
and
orb
scas
ret
aam
jmp
adc
iret
lods
into
and
cmp
in
mov
push
inc
jmp
and
data16
pusha
add
dec
clc
inc
lods
fcmovu
jno
mov
fdivl
hlt
js
pop
xor
hlt
xor
fmul
js
jmp
pinsrw
dec
test
push
mov
bound
mov
enter
push
add
loope
lret
sar
andl
mov
inc
sub
sub
loopne
cmp
data16
lea
xor
arpl
mov
jb
mov
dec
xchg
push
xor
cpuid
mov
divb
xchg
jae
testb
movsl
insb
pushf
popa
arpl
xor
iret
push
lds
leave
lret
dec
or
mov
jmp
sub
xor
mov
xor
xor
or
stos
jb
outsl
stos
mov
and
jb
mov
setns
loop
cld
adc
inc
mov
xor
jmp
xchg
shl
jno
aas
mov
push
jle
gs
insl
mov
lock
nop
movsb
push
xchg
aas
cmp
sbb
dec
push
popa
gs
test
mov
jno
ljmp
jae
and
jo
popa
sbb
ret
gs
adc
call
adc
mov
jl
xchg
add
lods
inc
push
data16
icebp
int
mov
jmp
mov
call
insl
addl
push
aaa
xor
cmp
cmp
ljmp
pop
hlt
cs
ds
mov
mov
push
pop
mov
cmp
push
in
dec
addr16
ret
pop
inc
lahf
pop
xor
push
push
inc
gs
shlb
inc
and
test
ja
test
enter
rcrb
xchg
pop
fs
dec
adc
and
sbb
push
jle
jb
and
mov
daa
hlt
dec
sahf
cwtl
addr16
enter
and
movsl
js
in
stc
or
out
adc
mov
sub
ret
popf
jnp
dec
or
insl
dec
arpl
popa
cmpsb
into
cmpsb
mov
adcl
jbe
push
pop
into
lds
testb
scas
movsl
add
test
scas
jb
sub
push
ljmp
fidivl
xchg
test
and
insb
test
aaa
lcall
sub
test
jne
xchg
dec
xor
loopne
xor
icebp
in
outsl
je
mov
ret
adc
loopne
add
outsl
jns
cs
add
insl
mov
pop
fcmovnbe
push
xor
xor
cmp
adc
push
jge
imul
add
loope
or
or
add
add
sahf
jge
mov
scas
mov
adcl
ja
mull
test
std
scas
jno
int
add
mov
xchg
adc
repnz
xchg
sbb
push
cmp
test
and
ret
inc
cmpsb
adc
sub
mov
adc
cmc
mov
mov
jae
xor
sbb
mov
cmp
leave
pop
inc
xlat
cmp
add
mov
mov
lret
and
push
mov
out
lret
cmp
in
mov
mov
pusha
cmc
lds
std
je
jle
push
rcll
aaa
fadds
jo
movsl
fcoml
dec
in
mov
mov
or
loope
mov
xchg
lret
sti
std
push
push
imul
xchg
sbb
insl
insl
push
adc
inc
adc
push
xchg
mov
add
pop
in
or
pop
lods
lock
push
push
push
add
adc
out
mov
fucomp
inc
std
push
push
cli
push
out
sahf
xlat
out
js
mov
push
sahf
lcall
xlat
ds
xchg
jge
push
mov
fwait
sbb
xchg
loopne
or
das
andl
stos
mov
notb
scas
jmp
enter
dec
call
jo
daa
cmp
ljmp
dec
sbb
xlat
aas
add
mov
ds
or
sub
xchg
notl
sbb
jge
mov
xchg
aam
in
jae
sbb
cmpsl
cmp
test
stc
loop
and
not
inc
lods
mov
fdiv
sub
sub
lods
js
lock
xchg
cmp
pop
stos
mov
sub
enter
jge
cmpb
pop
mov
std
clc
test
and
push
jg
daa
pop
pop
cmp
es
or
adcb
insb
sbb
cmp
jge
ret
into
mov
xlat
dec
inc
cmp
inc
xor
mov
add
xchg
loop
js
or
fnstenv
repnz
test
cmpsb
dec
mov
xchg
jp
test
popf
mov
clc
or
mov
sarl
pop
dec
stos
and
ret
lea
dec
jb
lods
mov
inc
dec
adc
shrl
mov
subl
mov
and
sub
outsl
mov
in
or
inc
dec
dec
and
clc
xlat
mov
sbb
sahf
repz
les
dec
rcl
pop
stc
cs
sbb
mov
imulb
push
or
bound
in
push
xchg
mov
dec
push
orb
mov
std
adc
mov
dec
pop
add
pop
fsubr
leave
mov
mov
or
iret
dec
dec
mov
sbb
imul
push
add
sub
lcall
insl
fcmovne
inc
inc
jle
subl
mov
cmc
in
pop
pop
lahf
aas
push
mov
push
push
pop
outsl
push
dec
enter
adc
sub
shrl
loope
pop
fcompl
add
shlb
pushf
aas
mov
and
or
cmpsb
fisubs
cmp
stc
rcl
sub
dec
and
jge
mov
pop
enter
in
jge
andl
and
mov
rcrl
les
jge
pop
bound
dec
adc
mov
mov
enter
or
lock
and
mov
jmp
cmc
dec
and
out
es
ret
cmp
stc
dec
xchg
mov
lret
jnp
movsl
sldt
rcrl
cmp
jl
cmp
or
ret
mov
and
stos
out
lods
pusha
je
mov
call
add
adc
cmpsb
insb
xor
pop
mov
xlat
push
scas
jno
mov
push
inc
jecxz
push
cmp
lock
repnz
mov
jo
lcall
lret
addr16
iret
jg
fs
cmp
fdivrs
push
sbb
inc
stos
jl
in
xchg
popa
jae
fimuls
stos
dec
sub
fwait
jnp
mov
hlt
fimull
cwtl
adc
nop
aad
ds
jns
xchg
mov
jne
test
push
daa
add
fisubrs
push
shll
xchg
test
les
test
jl
add
xchg
sub
xor
add
enter
cmpsb
iret
and
dec
fadds
xchg
lahf
popf
inc
scas
es
jmp
sbb
xchg
and
dec
jns
jg
mov
outsl
inc
cmp
ret
lea
out
loope
jbe
xchg
inc
jle
sub
call
mov
cmpsl
and
jl
and
push
lods
push
ret
jge
or
inc
mov
cmc
adc
cs
adc
and
mov
sub
pop
adc
ja
lret
ds
lahf
push
call
in
adcl
add
cli
mov
cli
push
cltd
jl
in
pusha
cs
ret
call
decl
add
and
xchg
daa
int
stc
into
mov
jmp
aam
jmp
push
or
or
jne
push
push
mov
cmp
cmp
push
push
jnp
sbb
push
or
sahf
in
push
das
inc
xor
xchg
xchg
xchg
addb
pop
sti
add
jg
repnz
shll
iret
mov
push
cltd
into
xlat
cmp
loop
adc
loope
dec
push
fs
xchg
outsl
adc
sbb
add
adc
insl
pop
in
and
repz
push
inc
sbb
adc
xor
push
je
mov
mov
sahf
ss
std
dec
es
les
in
loop
mov
and
or
out
cmc
outsb
jp
test
stc
das
dec
popa
push
sub
aas
ja
or
and
std
into
testl
in
movsl
xchg
lcall
fsubs
push
or
test
leave
jae
test
out
inc
lods
jg
test
mov
xchg
lock
push
jge
js
jl
notb
xchg
clc
xchg
or
fdivrs
dec
shrb
ret
jns
inc
sub
pop
fisttpl
push
lret
out
inc
mov
cmpsl
xchg
pop
sarb
inc
scas
loop
pusha
sub
mul
mov
imul
mov
in
dec
jno
fldcw
popa
popa
add
cmp
push
mov
cmp
int
adc
sbb
lock
adc
sbb
sub
dec
pushf
push
dec
gs
cltd
push
lods
mov
jmp
push
mov
xlat
stos
cmp
fstpl
jb
cmp
imul
out
push
ljmp
mov
mov
scas
pusha
mov
int3
and
add
mov
inc
shll
andl
and
insb
push
adc
addr16
adc
adc
mov
imul
jp
fldenv
shl
jae
lods
mov
div
call
outsb
cwtl
daa
pop
rorl
cmp
rcrb
jnp
mov
lcall
jl
ljmp
arpl
sub
ja
jg
cmp
mov
dec
test
push
movsb
imul
arpl
sarl
or
shll
js
aas
push
test
loop
in
xchg
std
dec
push
pop
sbb
call
lock
ja
roll
mov
out
psrld
bound
push
pop
pop
inc
pop
negl
adc
or
pop
dec
dec
shll
popf
fists
xchg
add
xor
rorb
sub
lcall
out
xchg
and
hlt
cli
mov
cltd
xor
inc
enter
sbb
dec
fadd
sbb
int
mov
or
lods
sti
rcrl
repz
pop
in
popf
push
ds
or
fcmovnbe
lret
jl
jbe
repz
add
dec
pop
fcomps
or
pusha
and
and
call
xchg
add
call
add
scas
jmp
cmp
push
sbb
das
mov
xchg
inc
add
cmp
addr16
and
xlat
sbb
pop
stc
loope
adcb
outsl
mov
pop
iret
repnz
imul
xor
fildll
aad
sbb
jg
shrl
add
pop
fisubs
cmc
mov
orb
push
popa
xor
xchg
pop
dec
dec
mov
mov
imul
mov
mov
call
jb
decl
loopne
fidivrs
ds
stos
std
push
fldt
xchg
in
jae
mov
jmp
adc
add
or
out
or
rclb
lret
add
jne
jae
xchg
ss
stos
cmpsb
mov
push
jo
push
lahf
adc
dec
inc
xchg
scas
xor
pop
cmp
aas
stos
fmull
mov
popa
dec
push
cli
bound
cld
and
in
insl
leave
faddl
popf
pop
sub
mov
shll
push
imul
xchg
xor
loope
outsb
adc
mov
dec
cld
adc
xchg
jmp
xorb
and
sub
ja
loopne
xchg
scas
nop
pop
push
cmp
xlat
iret
aas
adc
repnz
sbb
aas
scas
aam
shll
xor
mov
cmpsb
mov
xlat
xor
jmp
ret
push
xlat
push
ss
jl
xor
lahf
shrb
out
push
pop
pushf
sub
arpl
xchg
pusha
inc
mov
fptan
xor
gs
inc
jge
sbb
sub
push
jl
loope
lret
sbbb
es
mov
sub
xchg
xor
shll
mov
mov
outsb
idivb
aas
mov
mov
and
jo
inc
jb
mov
decb
mov
dec
mov
ja
push
and
mov
mov
jmp
int
pop
add
ja
xchg
add
loope
scas
lret
lods
cld
xor
shl
pop
das
xor
sbb
xchg
into
inc
aaa
sub
cld
lods
les
mov
mov
aas
stos
cld
sub
rcrl
clc
shlb
cld
xor
and
test
lods
inc
add
fs
pop
xchg
mov
and
or
loope,pn
pop
mov
xchg
ja
mulps
adc
int
pop
es
repz
jno
adc
ss
cmp
mov
mov
pop
cmp
add
jne
inc
add
push
pop
movsl
sub
scas
pop
iret
sub
test
cmp
and
inc
sub
sbb
cli
dec
shrl
iret
sub
data16
add
es
loopne
push
fs
cmpsl
push
jno
imul
jo
jno
dec
aam
mov
push
daa
aam
imul
jge
adc
lsl
into
jle
arpl
std
mov
adc
xchg
mov
mov
fadd
adc
std
insl
xchg
cs
out
scas
pop
stc
lcall
jg
vphadddq
popf
movsl
xor
xchg
loopne
and
aad
clc
sub
pop
out
mov
xchg
jb
lret
arpl
fisubs
enter
clc
je
dec
push
cwtl
xor
das
ja
sbb
sub
cmp
arpl
pop
out
lret
mov
jge
xchg
mov
pop
das
jne
or
jge
or
lods
jl
xor
push
mov
faddl
jo
push
cmp
or
outsl
sbb
dec
lods
stc
lcall
adc
mov
imul
call
jno
shll
jb
cli
repz
jbe
mov
mov
xchg
pop
mov
nop
aam
adc
test
rcll
mov
addr16
cmp
arpl
je
sub
shrb
mov
dec
xchg
and
cmp
jnp
sbb
inc
pop
nop
push
and
mov
pop
ret
add
mov
aad
dec
int3
jl
push
lock
xor
mov
sub
adc
jb
enter
arpl
rorb
mov
mov
cwtl
sbb
xor
aad
shr
push
mov
popf
jae
dec
dec
add
out
push
or
sub
mov
out
fdivr
dec
popf
add
ret
mov
roll
stos
out
add
xor
outsl
mov
lock
inc
bound
and
jbe
dec
testb
mov
icebp
mov
rcrl
push
fsts
mov
jne
ret
xor
lcall
adcb
add
cmp
push
push
int
add
int
mov
inc
inc
enter
mov
repnz
aam
mov
fwait
pop
call
aad
xchg
sbb
and
inc
dec
daa
das
add
add
imul
xchg
loope
inc
jge
sti
dec
pop
ss
cmp
in
inc
sub
pop
xorl
js
push
cmpsb
add
in
bound
inc
or
lret
stos
subb
mov
movsl
push
fldl
in
pop
fwait
cmp
xchg
mov
adc
and
mov
mov
cmp
or
sbb
sbb
movsb
ret
imul
inc
sub
inc
or
pushf
mov
lcall
fidivrl
xlat
jns
sarl
push
aad
out
xchg
imul
mov
push
pusha
mov
mov
fcomp
sub
ja
or
mov
jnp
or
pop
cmp
mov
adc
nop
dec
jge
mov
pop
dec
mov
lods
out
ret
mov
fisubl
fwait
insl
aaa
jle
shll
mov
mov
outsb
sub
lds
ds
xchg
push
cmpsb
mov
sub
repz
lock
dec
add
aas
popa
aaa
in
pop
push
push
cs
sbb
sub
fcoms
inc
gs
adc
dec
ret
sbb
and
rcll
fchs
es
inc
clc
sbb
test
stos
jne
add
xorb
inc
xlat
pop
push
xor
add
xor
mov
in
cmp
ret
aas
sarb
add
jb
dec
adc
or
cli
sahf
adc
add
push
jl
mov
push
neg
jmp
dec
mov
xchg
and
xchg
pusha
cmp
add
pop
mov
pop
cmc
mov
mov
lret
jb
cmp
into
enter
test
and
push
inc
cltd
mov
jne
push
shlb
inc
add
cmp
or
add
xchg
adc
xchg
aad
jno
stos
mov
test
jnp
mov
mov
sbb
clc
push
sbb
sub
cmpsb
ljmp
cmpsb
add
repz
fstps
pop
fisubrs
jne
add
dec
jmp
insl
jae
test
sbb
push
dec
or
pop
outsb
dec
mov
or
aas
dec
out
push
jmp
imulb
push
es
pop
pop
pop
mov
and
push
push
inc
mov
or
push
jno
gs
mov
mov
daa
dec
xchg
pop
ss
cmpsl
jno
scas
cmpsb
lods
mov
mov
or
add
jle
cmp
dec
lret
push
adc
xchg
repz
add
fwait
and
pop
into
dec
fs
jecxz
add
js
jle
cmpsl
push
pop
lret
outsb
inc
jae
insl
xlat
or
xchg
push
push
imul
and
insl
adcb
jmp
test
mov
in
rcr
scas
fcomps
pop
stc
inc
adc
lea
xor
pop
lret
leave
aam
ljmp
sbb
andl
sub
mov
jae
int3
pushf
sub
jo
pop
inc
adcb
shrb
xor
fwait
dec
pusha
adc
ds
mov
xchg
push
fadds
cmc
sub
mov
mov
lods
sbb
sbb
adc
xchg
shll
mov
loopne
jb
loope
or
daa
xor
push
mov
test
xor
ret
sarb
push
and
xchg
sub
jo
jle
popa
add
fdivp
pop
jno
sbb
fcomps
rdtsc
xchg
fstp
enter
adc
out
inc
push
je
test
mov
push
inc
fsubrs
mov
popf
dec
or
outsb
rcl
mov
cmp
pop
dec
add
and
loop
mov
push
cmp
sbb
adc
jb
sbb
dec
dec
cmp
test
xor
jne
push
in
insl
sub
inc
xor
pop
mov
lret
testb
cmp
push
lea
adc
adc
lock
cmp
cld
fcmovnb
jmp
shll
adc
fisubs
mov
mov
xor
push
js
mov
xchg
pusha
cmp
jne
mov
cli
test
data16
pop
or
push
adc
mov
scas
push
and
push
shr
xor
outsl
outsb
lods
idivl
adc
test
xor
jg
cmp
pop
inc
ljmp
cli
xor
rcll
out
adc
arpl
arpl
aaa
call
push
test
xchg
inc
ljmp
insb
ret
pop
std
call
ss
test
mov
cmp
out
bswap
inc
dec
jno
xchg
mov
outsb
xor
add
lret
repnz
movsb
or
movsl
or
leave
cld
add
mov
push
jnp
mov
cmp
scas
cmp
cmp
retw
pop
sbb
cld
repz
mov
jmp
into
lock
inc
mov
mov
aam
push
cmp
cmc
mov
outsb
mov
into
cmpsb
in
es
les
dec
pop
jmp
push
jnp
push
push
in
int3
or
inc
dec
je
inc
jecxz
xorb
push
jo
push
fs
jmp
sub
inc
lods
jp
in
and
jecxz
xor
xor
pop
fidivs
jp
lret
mov
add
cmp
xchg
add
mov
jnp
xor
lea
sbb
add
adc
daa
in
jp
and
xor
outsb
pop
fsub
xor
rolb
add
or
lds
xor
fistpl
test
fwait
inc
imul
lds
ja
cmp
mov
sbb
gs
loop
movsb
popf
aas
pop
adc
ja
adcl
outsl
mov
scas
pop
pop
dec
xor
adc
adc
adc
cmpsb
pop
pop
or
scas
dec
ds
add
imul
mov
sbb
dec
pop
in
stos
scas
pop
dec
scas
int
xchg
xchg
out
jo
or
cmp
jne
dec
add
push
cmp
rcr
or
aaa
nop
mov
sbb
sbb
pop
push
je
inc
cmp
outsl
popf
push
addr16
inc
jae
sarb
jg
add
pushf
jecxz
mov
xor
in
jle
jmp
jno
adc
sub
cmp
dec
or
dec
popa
es
stos
jae
inc
pop
arpl
xchg
xor
aad
lea
push
jb
jp
popa
neg
das
sub
sub
pop
lret
add
aam
jp
je
lods
aas
neg
cmp
sti
ljmp
stos
mov
push
jg
lock
fmuls
ss
jmp
icebp
jle
insb
jg
xor
les
pusha
mov
mov
fstl
roll
jl
icebp
enter
xchg
inc
cwtl
push
sub
psubw
in
shrl
shll
cmp
push
xchg
sbb
scas
lcall
and
movsb
cs
push
dec
or
sub
push
test
test
aad
iret
pop
dec
or
loop
in
ret
outsb
filds
faddl
rol
xor
lsl
rcr
out
addr16
test
and
inc
out
add
jmp
arpl
dec
js
insl
sti
pusha
nop
imul
mov
iret
push
jge
pand
cmp
pop
into
push
mov
lret
shrl
iret
dec
icebp
stos
je
mov
stos
xchg
lods
xor
popf
push
pop
and
mov
xchg
xor
push
imul
push
pop
mov
jge
into
mov
and
xor
jne
sbb
outsb
add
push
xor
test
mov
mov
xchg
cmp
mov
fidivs
cli
and
bound
sbb
sti
push
xchg
sbbw
roll
inc
mov
mov
cs
js
push
gs
lahf
inc
pop
orl
mov
ret
sub
push
sbb
cld
or
add
lds
cmp
adc
loopne
and
hlt
mull
es
mov
pop
imulb
or
aad
loope
pop
add
xor
ljmp
aas
mov
movsb
adc
mov
repz
cwtl
pusha
xor
pop
shrb
loopne
sub
or
xchg
ja
jmp
leave
lock
addr16
push
int3
fdivl
jp
xchg
xchg
loopne
popa
add
ret
push
sbb
jl
cmpsb
cmp
jge
outsl
fcoml
ljmp
rep
mov
sahf
sbb
push
stos
popf
flds
mov
daa
arpl
jecxz
cmp
mov
in
push
sbb
movb
divb
leave
movsb
scas
or
ds
lret
inc
fisttps
or
mov
mov
jp
cmp
xor
sub
test
repz
xor
jle
pop
addr16
sbb
movb
jb
pop
call
sub
fists
jecxz
pop
popa
mov
jp
mov
test
cld
sbb
mov
jmp
sbb
stc
aas
xchg
pop
call
and
sbb
add
pop
xchg
mov
ljmp
rolb
or
cld
xchg
in
dec
out
dec
xlat
push
jno
sub
pop
cwtl
sahf
mov
add
push
and
enter
push
xchg
and
xchg
inc
mov
scas
cwtl
mov
pop
lock
je
jecxz
mov
mov
jge
push
mov
jge
pop
addl
stos
int3
inc
pop
out
jl
lods
testb
jecxz
in
and
push
and
fdivrs
lahf
pusha
sub
test
test
sbb
jle
cmp
ds
push
in
in
ljmp
push
les
mov
ja
mov
out
stos
jmp
sbb
frstor
and
mov
jne
arpl
es
dec
inc
adc
push
jns
cltd
cmp
dec
jg
addl
out
rcrb
jnp
xor
xchg
mov
pop
jae
jp
cmp
leave
in
subl
lret
int3
sbb
cli
xor
in
stos
loop
pop
fldlg2
inc
mov
jp
mov
cmp
fdivrs
stos
movl
pop
and
add
cmp
xor
jo
push
mov
or
push
insl
out
aas
xchg
jae
addr16
or
jl
mov
dec
adc
dec
fisubs
mov
sahf
or
out
inc
push
scas
xor
mov
push
cmpb
scas
pop
push
daa
lods
cmp
sbb
jp
nop
scas
int
pop
lods
push
lods
or
mov
fstl
adc
jmp
pop
insl
pop
pop
shrb
cmp
push
inc
lock
or
insl
xor
ret
mov
mov
jmp
aaa
clc
pusha
pop
ffreep
pop
inc
adc
fisttps
sub
cwtl
cmc
mov
dec
sbb
mov
repz
sbb
fwait
notb
sbb
sbb
loope
mov
push
xchg
rcl
out
sub
sbb
mov
push
aaa
jb
xorl
cmpsb
movsl
push
jo
inc
daa
lret
push
push
inc
es
fs
sbb
fldcw
and
lahf
push
and
test
inc
and
data16
lret
cmp
js
or
out
test
je
xchg
cs
dec
pop
aam
cmc
idivl
jmp
clc
lcall
sahf
inc
ss
jnp
pop
popa
pop
push
pusha
fdivl
fstpl
pop
pop
jno
mov
test
mov
pop
cs
mov
sarl
cltd
mov
mov
pop
push
loope
xchg
mov
cld
sub
lahf
addl
call
xchg
rorb
xchg
call
xchg
mov
aas
or
jne
in
ja
sbb
test
lds
push
mov
push
adc
fisttps
fbstp
lcall
movsl
jns
pop
push
or
or
es
popf
out
sbb
rep
icebp
pop
jae
sub
adc
and
stos
push
cmpsb
dec
xchg
inc
cs
push
mov
jae
inc
in
fwait
xorl
stos
ja
cwtl
fsincos
imull
jecxz
push
or
mov
inc
cmp
dec
dec
sbb
outsb
call
fs
mov
and
pop
adc
pop
mov
test
sub
je
lods
loope
fdivs
xchg
xor
push
out
and
scas
adc
dec
push
jecxz
js
xchg
icebp
movsl
cmc
jle
aam
stos
sub
fwait
mov
cmc
adc
test
pushf
cmp
hlt
xchg
pop
xchg
pop
sub
test
addr16
push
inc
mov
or
jp
mov
imul
push
and
add
mov
cmc
fnstcw
mov
iret
cmpsb
push
arpl
imul
dec
aaa
pop
cltd
mov
subb
roll
fnsave
jge
pop
std
aas
push
int
pop
aas
jo
mov
xchg
jae
inc
pop
pop
pop
repz
cmc
xchg
ja
mov
sbb
adc
push
hlt
push
aad
and
sub
adc
shl
mov
mov
mov
repnz
sub
dec
sbb
cmp
stos
insl
ljmp
jp
push
ret
cmpsl
adc
mov
dec
mov
int
in
jl
mov
out
xor
pop
xor
test
popf
adc
sbb
pop
mov
fdivl
scas
mov
sti
movsb
ljmp
mov
aad
imul
pop
mov
pop
ret
xchg
rolb
fsub
ret
lods
arpl
inc
xor
jbe
sub
icebp
xchg
xor
pop
in
dec
xchg
pushf
jle
adc
scas
or
add
adc
ljmp
jbe
jne
jns
inc
test
test
filds
fadds
adc
xchg
add
xchg
mov
jno
mov
add
or
scas
or
sub
push
mov
cmc
scas
loope
loope
js
mov
aam
adc
loopne
hlt
dec
out
fsubrl
subl
or
repz
loope
jmp
sub
lahf
mov
mov
and
push
jne
pop
mov
or
into
pop
aam
andl
in
lea
add
cld
xor
rolb
and
movsl
push
push
jl
nop
push
jbe
pop
lret
add
and
daa
xor
push
cmp
jmp
dec
jnp
push
decl
sahf
cmc
test
mov
pop
xor
hlt
aas
adc
mov
jb
popa
outsb
jle
icebp
lea
mov
jmp
test
pop
icebp
ja
lds
lahf
or
pop
daa
mov
mov
push
lret
cmpsb
imul
loop
imull
aas
pop
pop
inc
stc
sub
xchg
cmp
and
push
scas
inc
ds
inc
fs
and
inc
rcll
hlt
adc
lea
xchg
shrb
push
dec
ret
movsl
fidivrs
lret
inc
je
ret
test
sahf
call
push
sahf
shrb
filds
jge
leave
sub
pop
adc
push
fmuls
mov
les
inc
mov
jecxz
ds
insb
mov
imul
mov
es
repnz
fcmovbe
test
mov
popa
nop
mov
jg
jns
outsl
cltd
mov
or
inc
dec
push
sbb
rcr
mov
lods
mov
sbb
jle
mov
or
lcall
and
mov
aam
push
or
aaa
insl
adc
fldl
in
shl
jnp
fnstenv
jbe
xorb
mov
or
subl
mov
inc
jns
dec
test
push
jns
test
repz
pop
mov
xor
pop
xchg
int
push
icebp
mov
mov
ret
lods
xor
sti
or
mov
arpl
repz
jne
xchg
fcompl
aaa
in
push
sub
dec
or
std
push
rcr
in
cmp
movl
int3
jl
jmp
fwait
or
jg
sub
fsubrl
imul
js
xorl
mov
mov
fucomip
ficoms
xchg
dec
fnstcw
mov
push
fsubs
mov
cmovae
fwait
loop
mov
pop
xor
ja
pop
sub
out
ret
or
push
push
lcall
xchg
pop
xchg
xchg
push
or
sub
dec
jne
fildll
stc
adc
add
shlb
adc
jl
mov
push
mov
je
test
mov
cmp
sub
lret
ja
adc
dec
cmp
or
in
mov
adc
add
mov
add
push
sub
int
jge
mov
insb
jns
lds
mov
leave
pop
mov
push
adc
test
arpl
addr16
push
push
ret
lret
ret
rcrb
sbb
pop
and
adc
push
mov
xchg
inc
data16
push
or
into
add
cmpsl
aaa
or
loope
aaa
ds
out
loope
stos
or
pop
mov
pusha
scas
pop
xor
jno
mov
and
fs
push
or
decb
dec
jb
rorb
scas
cmpsl
ret
mov
sahf
xchg
shrl
push
daa
or
stc
hlt
fsubrs
int
sbb
or
xlat
push
out
adc
scas
popa
scas
mov
jae
jge
loop
or
push
jmp
int
add
mov
xor
sbb
mov
and
ljmp
and
cmp
push
ret
leave
dec
jle
test
mov
inc
jle
fimull
hlt
xchg
add
adcl
and
sbb
ds
fistl
sub
mov
and
es
jo
inc
sbb
insb
stos
insl
sbb
addb
popa
xchg
and
pop
jo
xor
scas
inc
hlt
lret
mov
testb
bound
inc
xor
mov
push
xchg
or
stc
add
push
dec
ret
jne
pop
daa
rolb
out
hlt
sub
adc
adc
mov
mov
popf
lods
sub
push
jecxz
sti
flds
loop
add
cmpb
dec
sub
sub
pop
sarl
cmc
mov
mov
stos
mov
addr16
ja
mov
aam
int
into
inc
test
mov
fcomps
xor
lods
add
das
pcmpgtd
sbb
mov
and
pop
std
stos
dec
add
jp
jp
orb
push
popf
mov
cmp
call
data16
es
mov
adc
testl
sbb
loopne
loope
shll
mov
aaa
shr
add
jbe
mov
xchg
adc
sub
cmp
into
popf
arpl
jge
sub
insb
aam
pop
outsl
add
pop
pmaxub
popf
adc
mov
loop
lock
pop
xor
popa
in
lret
mov
dec
pop
jo
mov
cmpsb
rorb
repnz
and
mov
in
inc
sbb
test
cmpsb
adc
xchg
xorps
jg
mov
and
mov
sbb
gs
pop
xchg
mov
mov
mov
cmpsl
inc
sbb
sbb
mov
and
inc
pop
iret
aad
fmuls
outsl
sub
popf
sti
repz
push
int
xchg
repz
mov
xor
xchg
or
xchg
add
push
inc
inc
push
pop
dec
pop
pop
ficomps
inc
mov
adc
pop
mov
push
ja
jbe
inc
pop
cwtl
je
stos
pop
pop
sarb
push
cs
icebp
mov
gs
cmpsb
leave
fldl
and
das
adc
jbe
adc
loopne
nop
push
outsl
mov
mov
push
icebp
xor
dec
mov
jp
mov
mov
nop
bswap
lcall
xchg
xor
push
push
and
loop
fwait
lret
mov
jae
leave
int3
loop
repz
add
in
cmp
ficoms
in
add
cs
mov
icebp
adc
lahf
jg
add
movsb
push
aad
sbb
stos
lea
mov
adc
fstps
movsb
push
sub
fs
mov
mov
out
inc
ror
push
fsubrl
pop
mov
rol
inc
adc
add
xorb
xchg
adc
pop
pop
shl
mov
sbb
ret
push
push
les
int3
xchg
push
lock
and
xchg
xchg
jns
xor
mov
or
imul
ss
mov
aaa
ja
xlat
int3
dec
cmp
mov
xor
jmp
ret
fcmove
xchg
das
cmp
sbb
lods
jg
ret
in
andl
xorl
ljmp
bswap
imul
xlat
ret
sahf
in
xchg
je
pusha
mov
cmp
lret
push
pop
inc
pusha
popa
xchg
loopne
xor
aas
inc
add
shrb
jge
mov
sub
sbb
fisttps
cmp
shlb
dec
cld
cmp
cld
lcall
xchg
andb
decb
insl
mov
repnz
push
xchg
mov
push
mov
dec
jp
xor
pushf
std
movsb
pop
sbb
out
leave
and
dec
push
mov
jo
jmp
mov
jge
sbb
bound
sbb
inc
cmpl
xor
or
test
mov
or
notb
movsb
lods
jne
mov
mov
mov
mov
sub
stos
fdivs
stc
cmp
or
test
xchg
mov
fwait
xchg
movsl
shlb
hlt
ss
repz
add
ljmp
cmp
xchg
mov
mov
sub
adc
pop
aas
pop
lcall
jg
pop
rcll
je
orl
jp
xor
xor
mov
and
mov
sbb
fwait
aad
in
sarb
loopne
sub
jle
sub
add
sub
cmp
push
mov
jge
loope
int
fisubs
xor
push
adc
fs
aas
js
push
xchg
and
xor
mov
push
stos
int3
push
pop
xchg
push
and
lea
cli
scas
ja
cli
push
pop
mov
add
or
and
sub
inc
in
fwait
stos
and
xor
out
mov
cmp
xchg
adc
aaa
repnz
push
add
xchg
jp
fisubrs
inc
test
dec
adc
lock
cmp
out
aam
xor
scas
mov
mov
loope
cmp
repnz
pop
popa
add
jo
stc
fmuls
outsb
and
xchg
sti
mov
xor
std
or
mov
sub
dec
cmc
mov
adc
jae
lods
imull
scas
xchg
test
or
sbb
xlat
cmp
inc
or
out
lret
pop
mov
push
cmp
test
rcrb
mov
stc
mov
jo
inc
sti
test
mov
jno
das
mov
sahf
xchg
data16
dec
loope
test
sub
aad
inc
sarl
cmp
lds
jno
or
push
not
pop
jmp
mov
insb
push
adc
pop
aaa
mov
stc
dec
int
mov
jecxz
xor
pop
pop
idivl
je
insl
mov
fwait
jp
aam
push
jne
sbb
adc
test
test
cmp
mov
inc
inc
fs
rcr
pop
inc
mull
je
push
stos
aam
out
pop
loopne
shll
subl
xor
test
mov
insb
in
add
inc
adc
je
rolb
add
xchg
xchg
lret
sbb
in
les
sub
out
lea
mov
outsb
and
sbb
or
fcoml
fistpll
cmp
or
adc
dec
jns
sub
arpl
cmp
add
jmp
mov
mov
push
sbb
dec
ret
lahf
fsubrl
adc
adc
mov
jnp
std
les
jns
dec
lret
lret
hlt
aas
inc
jmp
ds
shll
jecxz
inc
mov
ret
push
movsl
movsl
fnstsw
or
int3
je
dec
cmp
adc
cld
and
sbb
mov
outsb
push
and
enter
mov
sbb
mov
or
rorb
or
mov
fstps
idivb
ret
pop
mov
in
xlat
scas
cmp
into
addr16
inc
scas
loopne
adcl
cmpsl
mov
xchg
sub
cmp
cmp
sbb
in
divl
mov
jmp
pop
jns
cmp
icebp
pop
insb
jge
aaa
es
int
sahf
push
or
jp
shlb
xor
outsb
dec
xchg
or
outsb
mov
fwait
mov
dec
inc
xchg
push
mov
ds
stc
ds
mov
ret
ret
subl
je
data16
fdivrs
gs
xchg
jne
aaa
add
pop
push
mov
mov
pop
insl
push
xor
popf
dec
mov
imul
cli
lcall
jns
outsb
and
lret
or
lods
lds
add
insb
or
iret
jg
shll
and
sahf
pusha
cmc
lahf
int3
movsl
fsts
jno
sub
repz
dec
stc
cmp
scas
fmull
sbb
pop
loop
out
cmpsb
mov
xchg
mov
add
fistpll
and
pushf
pop
jno
add
cmpsb
pusha
sub
pop
call
inc
inc
or
iret
inc
jno
add
testl
fldl
test
mov
pop
stc
xchg
inc
mov
aad
dec
test
cwtl
test
je
stos
xor
sbb
repnz
fwait
mov
or
add
aam
call
or
ja
out
lea
out
mov
lds
or
sbb
sti
shrb
fwait
inc
and
mov
push
jne
or
je
xchg
lret
int
push
sub
pop
or
add
jl
jecxz
rcrb
out
cli
cmp
in
lahf
loop
jne
jle
xchg
sbb
sbb
mov
xchg
add
out
pop
mov
popf
dec
mov
sbb
mov
stos
push
sbb
push
xor
jle
and
lea
jle
jp
mov
push
push
xor
aad
out
aam
mov
out
cld
push
and
mov
xchg
cs
push
cmpsl
jae
lret
xchg
pushf
xor
pop
loopne
frstor
enter
jecxz
cmpsw
imul
and
or
stos
push
repz
pop
lods
je
cmp
xchg
cmp
negl
ret
inc
xchg
dec
xchg
xchg
mov
dec
neg
aam
mov
out
mov
pop
jne
scas
daa
lods
add
push
or
call
or
hlt
adc
push
xlat
inc
and
push
dec
and
lea
push
or
cwtl
popf
push
jbe
orl
adc
pop
aaa
jns
bound
test
xor
push
shll
sub
or
insb
mov
push
sbb
dec
push
xchg
fidivrl
add
add
aad
imul
xor
cld
sbbl
mov
sbb
and
sub
jp
fisubrl
jl
loop
cmpsl
out
pop
add
sub
mov
jg
test
xchg
adc
test
movsb
mov
fisttps
xor
jno
aas
jns
shrl
aad
xchg
push
loopne
dec
hlt
mov
test
in
sbb
lret
and
nop
mov
jmp
sahf
xchg
les
pop
cmpb
inc
inc
fldt
jecxz
roll
push
push
inc
inc
pop
and
lret
shr
cmp
fs
dec
mov
lret
call
ja
pop
push
push
fs
push
test
xor
inc
dec
jae
aaa
pop
mov
mov
les
mov
fadds
das
and
pop
ljmp
or
mov
out
iret
fstpl
loope
fisubs
push
out
cli
jl
mov
loopne
lcall
or
push
pop
push
into
mov
pop
movsl
mov
and
in
inc
cwtl
push
xor
ss
loope
js
inc
pop
sub
xor
inc
int3
inc
adc
or
shrl
sbbb
pop
add
mov
dec
scas
ss
mov
xor
ror
mov
sbb
aaa
shrl
bound
push
cmp
repz
pop
xchg
pop
outsl
mov
fildl
xchg
or
add
jne
and
es
xchg
mov
pop
fwait
mov
js
dec
mov
cli
sbb
pusha
xchg
insb
adc
xchg
stos
cmp
xchg
aad
and
mov
xor
enter
out
ss
cmp
jb
aas
mov
cltd
int
nop
ds
aam
enter
cwtl
xlat
xor
inc
or
dec
push
out
add
aam
stos
mov
mov
and
xor
adc
xlat
push
push
pop
test
in
ret
and
rep
nop
mov
mov
imul
jecxz
pop
cmpsb
mov
dec
int3
gs
out
scas
adc
les
lock
jg
es
cmpsl
and
dec
add
inc
xlat
aas
mov
jb
pop
xor
mov
xchg
movsb
jmp
xchg
push
sub
cmp
cmp
call
push
and
xchg
xor
adc
xor
pop
cli
shll
cmp
sbb
lcall
push
shrb
sbb
push
and
inc
mov
lods
test
jl
cmp
std
lret
dec
cmp
out
scas
mov
cwtl
mov
xor
je
add
jae
aam
mov
xor
cmpsl
jno
inc
fsts
rcl
mov
cmc
lahf
popf
mov
ljmp
inc
iret
out
in
dec
xor
aas
and
mov
or
xchg
sahf
ss
imul
sti
mov
pop
mov
push
mov
mov
repz
mov
ljmp
das
loop
push
andb
in
jno
mov
push
lret
arpl
jecxz
int3
add
adc
sbb
mov
sub
mov
aad
pop
scas
ja
push
mov
sbb
inc
push
addr16
push
out
jbe
inc
in
adc
add
mov
mov
jge
sbb
cmpsb
jbe
inc
add
cmp
mov
fimull
popa
jp
pop
hlt
mov
gs
dec
popa
mov
dec
xchg
outsb
cmc
insl
imul
cld
xchg
sub
test
pop
std
outsl
mov
add
xlat
popa
in
jo
test
clc
lods
dec
or
cmc
pop
mov
aaa
add
dec
lods
inc
xchg
fdivs
repnz
insb
addr16
js
out
nop
outsb
mov
push
mov
inc
enter
pushf
xor
leave
push
mov
xor
pop
add
lds
loope
or
aas
lods
mov
dec
aad
push
loopne
mov
ret
adc
or
les
data16
xor
aad
sub
mov
mov
icebp
test
pop
nop
add
stc
adcl
mov
jle
push
push
mov
cmpsl
mov
pusha
pop
or
and
leave
arpl
mov
mov
pushf
mov
sub
outsl
loope
mov
jmp
cld
in
add
add
outsl
clc
push
inc
sub
push
aas
rol
outsb
imul
lods
jp
mov
mov
push
jmp
mov
and
inc
test
out
and
mov
adc
sbb
mov
xchg
mov
fstpt
jge
xchg
in
dec
imul
cmpsb
push
add
xchg
xchg
dec
add
sbb
mov
jl
xor
loop
cmp
mov
stos
imul
mov
pop
popl
outsl
cmp
stos
mov
mov
fsubrs
stos
mov
xchg
pop
fistps
add
mov
mov
jns
pop
outsb
cmp
xchg
add
clc
sub
insl
outsb
mov
pop
ret
lret
clc
sbb
push
stos
and
xor
push
shrb
pop
jo
mov
jb
cli
sti
fildl
lock
rcrl
mov
mov
mov
or
xor
dec
cmp
test
hlt
bound
lock
movsb
pop
dec
mov
jno
scas
outsb
aad
ds
add
fiaddl
lea
and
pop
sti
and
repnz
adc
mov
push
xor
fadd
outsl
je
sbb
xor
lahf
cmp
xchg
mov
imul
jle
xor
xchg
adc
lcall
movsb
xchg
or
das
adc
test
adc
iret
out
aad
pop
add
add
push
aaa
inc
and
xor
push
pop
sbb
jge
and
cld
mov
adc
mov
pop
cmpb
add
cmp
pop
xchg
cli
dec
es
mov
std
clc
int3
xchg
das
test
and
out
jecxz
mov
mov
jp
mov
sti
js
lahf
add
dec
aad
jle
fiaddl
and
mov
sub
lods
rclb
addr16
or
adc
dec
push
lods
add
adc
es
std
daa
jecxz
popa
lcall
pop
sub
movsl
das
fs
xor
adc
imull
or
jecxz
daa
and
andl
das
xchg
in
pop
dec
or
xchg
icebp
jp
mov
nop
jl
ret
je
mov
lret
jae
sub
sarb
jns
pop
les
xchg
mov
inc
xchg
test
sti
int3
stos
mov
sbb
xchg
mov
mov
fmuls
sbb
hlt
js
cmpsl
jmp
js
jge
pop
movsb
adc
std
out
sarb
das
xchg
int3
xor
push
mov
loope
aas
cmpsl
add
sub
clc
dec
sbb
jg
cmp
insl
scas
stos
mov
outsl
gs
je
and
push
in
and
ljmp
ret
or
pop
lods
add
pop
adc
fstl
xor
and
outsb
push
mov
pop
pop
mov
inc
repz
arpl
jns
test
cmc
dec
test
scas
lret
les
roll
lock
sub
xchg
xchg
pop
adc
mov
push
test
xchg
cld
xorl
xor
pop
leave
lea
mov
data16
and
push
in
scas
dec
aaa
in
lock
mov
out
scas
and
pushf
gs
mov
fisubrl
adc
dec
cmp
jnp
xchg
cmpsb
hlt
mov
icebp
xchg
out
stos
les
insb
repz
aam
dec
in
xchg
incb
cltd
and
fcomp
xor
adc
les
add
xor
add
mov
subl
out
loope
fistpll
pop
movsb
or
ljmp
pop
lret
dec
mov
xor
enter
shll
insb
mov
mov
stos
mov
and
mov
sub
jmp
test
push
fnsave
call
add
mov
pusha
pop
ret
les
xchg
push
iret
incl
mov
pop
dec
test
sbb
arpl
or
push
test
xor
gs
hlt
ds
adcb
mov
add
in
or
inc
test
mov
rorb
lds
das
jl
sahf
pop
ljmp
sub
lods
pop
mull
loope
add
sbb
xchg
jnp
or
pop
neg
mov
fistpl
and
fistpll
jns
icebp
inc
jl
paddw
push
mov
push
clc
inc
iret
lret
jb
movsl
in
and
push
bswap
xor
aas
mov
push
daa
leave
dec
pop
leave
push
aam
lret
sbb
dec
enter
aas
fnstcw
fimuls
out
dec
cltd
ljmp
adc
mov
mov
inc
shrl
pop
out
mov
out
outsb
ffreep
pop
outsl
aam
and
lods
xchg
cmpsb
jno
scas
sbb
xor
inc
pop
push
movsl
pop
or
jne
pop
jmp
cmp
dec
iret
inc
scas
mov
mov
mov
call
push
popa
sbb
fcoml
dec
scas
sub
jo
inc
leave
xorb
decb
stos
or
inc
cmp
push
sub
jle
or
mov
cmp
or
add
into
pop
clc
inc
mov
in
clc
rcrl
cwtl
leave
adc
lret
fistpl
daa
adc
imul
stos
mov
push
hlt
lods
sub
test
stc
push
sbb
adc
in
movsbl
hlt
push
in
push
pop
enter
jmp
mov
inc
jmp
pop
adc
sbb
jbe
push
js
insb
mov
add
push
mov
insl
jo
je
mov
mov
repz
jo
call
mov
test
int
ljmp
bound
dec
pop
sub
in
sti
leave
notl
push
push
lock
test
fnstcw
push
dec
lods
push
loop
lcall
or
push
cmp
ja
cmp
mov
add
mov
lret
dec
jae
sbb
mov
mov
inc
out
jno
lret
add
int
lret
out
dec
pop
ret
loopne
or
dec
inc
leave
adc
and
mov
push
or
fstps
stc
shl
shlb
jne
pop
and
sbb
mov
scas
xor
and
inc
mov
adc
fadd
hlt
and
jmp
daa
and
or
dec
push
mov
jnp
cmpsl
mov
pop
inc
push
stos
mov
shlb
push
adc
les
out
jg
jbe
sub
pop
pop
cli
or
stos
jnp
ss
adc
pop
sbb
out
lea
idiv
pop
pushf
sub
aaa
out
dec
jo
mov
test
adc
inc
push
mov
std
imul
mov
and
sub
xor
jecxz
scas
inc
inc
movsb
pop
mov
stc
inc
dec
adc
add
inc
jle
pop
or
call
fsts
clc
fs
movsl
ficoml
in
jl
xor
cmp
mov
adc
ficoms
popa
subl
in
push
data16
leave
mov
adc
inc
sbb
fnstenv
jl
push
ret
fdivrl
push
movsl
sbb
or
jnp
jg
cmp
mov
push
ja
cltd
push
fwait
out
stc
adc
push
sub
mov
out
push
mov
enter
xor
jno
dec
mov
shrl
inc
mov
and
jge
call
call
pop
inc
pop
xchg
lods
mov
outsb
out
popa
imul
ret
ret
mov
or
cmp
cmc
lret
aam
leave
add
dec
inc
mov
add
scas
imul
test
into
xor
and
shl
aaa
mov
xor
push
add
mov
and
outsb
aad
xchg
cmpsb
test
inc
dec
jmp
xor
rcrl
pop
loopne
push
push
inc
fwait
jo
scas
int3
iret
jmp
or
or
nop
inc
mov
mov
push
fisubl
xor
cmpb
pop
or
in
fs
sub
in
cwtl
pop
jnp
iret
adc
pop
nop
dec
jo
inc
sbb
fldenv
push
sbb
or
sbb
pop
arpl
cmpsl
arpl
into
mov
mov
stc
fwait
pandn
pop
pushf
jbe
jmp
mov
ljmp
jecxz
and
xor
sbb
xor
out
lret
sub
or
and
add
jae
arpl
fidivrl
int3
aas
push
xorb
cmpsl
mov
and
xor
mov
add
push
gs
cld
ja
mov
mov
xchg
dec
mov
inc
pop
inc
shll
sub
or
imul
cmpb
inc
mov
iret
fildl
pushfw
cmp
lds
stc
sarl
xchg
xchg
adc
xchg
out
cld
and
in
lods
push
cmp
rorb
inc
lret
outsl
stos
stos
inc
in
mov
ss
ror
jmp
mov
cmp
push
cmp
fidivrl
jl
jle
cmpsl
dec
rcrl
and
sub
dec
push
out
xchg
arpl
cs
xor
popa
test
and
sar
jl
cwtl
int
xchg
rolb
or
cs
adc
and
out
call
push
mov
jno
cld
xchg
cmp
mov
add
pop
out
pop
sub
add
jecxz
out
mov
push
insl
and
loope
or
sub
mov
mov
lods
lahf
sti
xor
subb
scas
ljmp
and
out
inc
popl
out
dec
mov
rol
adc
ja
mov
sub
ret
adc
hlt
fcoms
movsl
aaa
leave
sahf
mov
adc
inc
sbb
xchg
imul
xchg
test
out
dec
xor
jge
in
jne
push
or
test
addr16
inc
jb
fs
ja
out
pop
jo
test
cmc
dec
sbb
xchg
or
push
cmp
fcomps
push
imul
pop
fisttpll
bound
les
ret
mov
shrb
mov
mov
sar
or
mov
cmp
xor
mov
js
dec
cmp
shll
dec
cmpl
mov
push
sub
je
cli
lock
pop
sub
pop
sub
push
and
cmp
int3
or
xchg
mov
pop
sbb
cmc
lea
jge
loope
je
inc
pop
push
stos
jp
and
mov
add
in
in
push
pop
repnz
test
or
inc
dec
or
and
sub
jg
push
mov
aaa
sti
mov
pop
add
add
lahf
in
jmp
cmp
pop
adc
mov
das
adc
mov
pop
subl
adc
jmp
xchg
int3
push
sub
js
sbb
cmp
lahf
scas
jmp
and
cmp
mov
cmc
icebp
sbb
sbb
xor
jne
inc
into
sbb
aas
add
inc
xchg
mov
sub
xor
clc
sbb
cs
jbe
sub
jg
cwtl
sbb
test
jp
push
scas
lret
push
xor
call
jmp
mov
sti
xchg
sub
lock
ret
lods
inc
jle
mov
test
ret
push
fcmovu
pop
mov
ljmp
loop
fidivrs
cmp
sarl
lret
sub
icebp
inc
cmp
mov
repnz
mov
adc
imul
daa
in
fistpl
mov
sub
mov
or
bound
or
inc
jo
cs
mov
inc
inc
inc
stos
mov
outsl
call
into
push
popf
xchg
inc
pop
push
xor
fimuls
inc
sub
gs
pop
loope
test
pop
mov
pop
cmp
or
ss
jae
sbb
call
mov
inc
fnstcw
cmpsb
xchg
dec
jns
cmc
push
and
pop
xchg
lods
cmp
fsubrl
repnz
mov
in
jo
mov
inc
repnz
mov
fidivrs
mov
dec
adc
sbb
cs
inc
rcr
rclb
adc
inc
xor
setae
orb
fbstp
push
inc
xlat
in
mov
or
fmuls
sbb
orb
sub
imul
scas
cld
lcall
lcall
cmp
ret
pop
inc
and
shll
or
jo
or
dec
dec
imulb
push
repz
sub
dec
es
iret
xor
fmuls
adc
ja
bound
pop
les
jge
adc
and
es
cmp
push
in
mov
jge
or
sbb
xor
repz
and
mov
push
ret
sub
mov
jle
push
cmpsb
data16
int3
loop
dec
dec
adc
fwait
xor
adc
out
sarl
cmc
dec
add
rcr
into
add
sti
push
rorb
cwtl
call
aam
jnp
xchg
rorb
insb
push
add
fscale
das
ljmp
aam
sti
lcall
gs
rcrl
fists
mov
pop
bnd
sbb
xchg
or
ss
jge
and
dec
push
in
repz
and
iret
push
push
pop
aaa
callw
sbb
or
or
pushf
jle
mul
push
sarl
sbb
dec
inc
pop
push
xlat
pop
sub
mov
shrb
mov
add
pusha
sarb
test
lret
add
sbb
outsb
jo
sbb
enter
or
rcl
mov
mov
pushf
loop
cmpsl
jg
or
scas
dec
scas
dec
clc
fcmovnu
lods
inc
push
repz
std
dec
xor
out
pop
or
aad
pop
lret
or
mov
cmp
lds
pusha
push
pushf
xor
cmp
mov
dec
adc
or
fcmovnu
mov
xchg
dec
fcoml
daa
mov
dec
stos
jae
movsb
inc
sbb
pop
inc
fdivl
mov
jle
add
lcall
bnd
xchg
fstpt
fdivl
lds
sub
lret
dec
push
jbe
ror
into
cbtw
stc
cmp
test
mov
fldl
jbe
jl
popa
in
jae
repnz
dec
bound
xor
add
adc
mov
jns
imul
loope
add
jne
mov
cmpsb
add
pop
cmc
sbb
loop
mov
stos
in
xchg
sub
jp
pop
xchg
pop
idivl
dec
cmp
mov
test
xor
and
mov
insl
gs
rcll
mov
lahf
mov
mov
sti
in
jae
xorl
jns
xor
xchg
cmp
mov
mov
sub
popf
ret
in
xchg
call
mov
movsl
cld
cmp
movsl
jne
je
jb
jae
fst
std
aas
sub
mov
loop
dec
push
sbb
push
std
stos
into
jno
in
adc
mov
and
mov
xorl
test
loope
push
xchg
addr16
sub
xchg
mov
inc
je
negl
jge
xchg
mov
jnp
imul
jns
xor
std
mov
enter
lahf
mov
add
aam
inc
mov
test
rol
movsb
dec
mov
imul
daa
arpl
mov
stos
sarb
in
in
cmpl
lock
hlt
cltd
mov
mov
sbb
sbb
or
pusha
frstor
test
dec
pop
loope
mov
mov
sbb
inc
into
mov
hlt
adc
lret
aad
outsb
pop
jmp
addr16
insl
dec
sti
add
sub
roll
sub
adc
loopne
setl
ret
lret
ret
inc
sysexit
pusha
mov
and
pop
or
cld
push
cmp
lret
stos
out
pop
inc
push
or
in
xchg
cld
xchg
adc
cld
pop
loope
notl
sub
pop
pushf
scas
lea
cmp
ret
in
push
jmp
repnz
int3
adcl
adc
aaa
repz
and
aaa
andl
pop
ret
sub
fldt
shll
shll
push
sub
js
aad
pop
jns
push
push
cmc
in
and
cmp
jmp
cmp
pop
cmp
int
jne
arpl
jl
and
jbe
mov
dec
ficomps
dec
cmp
push
dec
gs
gs
lds
cmp
mov
inc
inc
mov
push
stos
dec
rcrl
xchg
outsb
scas
test
mov
push
xchg
inc
dec
xchg
xchg
popa
cli
lcall
pop
or
cltd
pop
dec
and
xor
ret
add
inc
lahf
jne
jg
rcrb
fcmovne
push
cmp
addr16
out
and
stos
push
lret
lahf
and
mov
push
push
mov
testl
or
ret
das
add
fwait
icebp
gs
movsl
mov
inc
and
add
repnz
pop
aad
adc
rcll
out
mov
rcl
out
loop
pop
or
or
and
push
adc
inc
lret
pop
fsubs
cli
adc
andb
xlat
wrmsr
push
or
stos
xor
dec
daa
pop
cmp
loope
int
jp
sti
test
cld
inc
shll
xchg
adcl
shrb
and
sbb
pushf
pop
cs
sbb
imul
sub
sbb
btr
jbe
repnz
adc
xor
add
jge
xor
test
add
xchg
shrl
xchg
xchg
outsb
cmp
icebp
cmp
std
ss
add
sub
add
mov
xorl
mov
mov
mov
jns
push
pusha
vmovd
adc
mov
sbb
in
xor
and
inc
cwtl
mov
mov
pop
bound
jp
int3
mov
movsb
xchg
and
stc
xor
sbb
dec
in
es
jmp
cmp
push
aad
add
pop
inc
and
xchg
mov
and
push
fstpl
lea
sbb
cwtl
insb
dec
mov
aam
mov
jle
adcl
xor
repz
scas
ja
jmp
mov
pop
aaa
cmp
lcall
pop
es
jne
mov
bswap
js
aas
mov
cmp
vmovapd
mul
dec
cmpsb
jmp
sbb
in
inc
popl
orl
mov
jbe
mov
and
sbbb
add
cmpsb
jecxz
push
cmpb
mov
xor
imul
fdiv
aad
push
jecxz
jb
xchg
aas
cmp
push
cmpsb
cmp
sub
lahf
dec
inc
stos
loop
loop
add
cmp
pusha
popf
lret
mov
les
mov
dec
fs
mov
rol
int
lret
mov
mov
sbb
push
xchg
pop
xchg
xor
and
sub
dec
lds
mov
push
clc
dec
inc
jg
and
mov
in
lock
imulb
scas
and
mov
ret
sbb
and
adc
push
aaa
sarb
aaa
decl
aas
cmp
push
sahf
stos
dec
and
jp
mov
lahf
push
mov
je
leave
add
es
jae
shll
dec
iret
lds
mov
dec
rcl
inc
dec
int3
add
jp
lock
xchg
lret
cmpb
pop
inc
stc
mov
dec
xor
repnz
fbld
out
sub
in
xchg
jne
leave
sti
jmp
rcl
fistpll
pop
cmp
xor
xchg
jg
scas
xor
addl
ja
data16
andl
mov
adc
jp
and
and
lret
cmp
in
dec
rolb
andb
inc
xor
daa
enter
lock
test
shrb
jecxz
push
sub
xchg
dec
mov
pushf
sub
jp
ljmp
inc
pop
and
lods
lret
adc
inc
or
inc
push
fsubrl
rclb
pop
push
test
xchg
scas
add
jne
jne
pop
sbb
pop
mov
dec
xor
xchg
lds
xchg
stos
xchg
push
sbb
fsub
mov
xor
outsl
movb
popf
mov
push
in
cltd
stos
iret
push
movsb
mov
push
pop
adc
sub
pop
sbb
test
cmp
mov
mov
inc
pushf
je
adc
pop
int3
and
add
stc
inc
add
jns
push
push
push
daa
jge
dec
cmc
scas
loop
dec
pop
sub
faddl
xlat
cld
shrb
test
lods
cli
outsb
fwait
in
sub
call
lea
subl
fsubs
mov
lcall
sahf
push
sub
push
scas
push
cmpsb
xchg
test
jbe
jp
cli
int
enter
inc
jg
adc
cmp
ja
and
rclb
sub
cwtl
jae
arpl
inc
mov
movsb
mov
sbb
rclb
jge
cmp
addl
rep
jno
adc
jnp
popf
scas
cmc
mov
fldt
xchg
leave
mov
mov
mov
bound
ret
fmull
dec
imul
mov
arpl
mov
nop
jae
inc
and
addr16
daa
test
sbbl
add
push
pushf
push
lods
mull
push
sarl
in
fst
shll
or
rcrb
out
in
push
xchg
or
and
scas
and
ret
push
jne
movsl
das
lcall
cld
dec
test
mov
push
imul
jp
rep
shl
rorb
int3
insb
leave
je
jg
xlat
push
stos
and
xchg
xchg
xchg
sub
jnp
jmp
sbb
je
in
fs
fnsave
inc
call
add
pushw
daa
mov
cli
shlb
out
pop
mov
sub
test
sbb
xor
mov
loop
aam
pop
in
cmpsb
push
outsl
sub
lods
sbb
jo
scas
popa
push
mull
test
fidivs
lret
pushf
mov
jnp
xlat
add
lret
mov
mov
xor
cwtl
fnstenv
cmpsl
mulb
enter
sbb
mov
data16
inc
xor
pushf
cltd
loop
inc
adc
sub
scas
fildl
dec
xchg
ljmp
test
loop
push
scas
sub
push
in
insl
loop
sub
outsb
ljmp
sub
lods
jne
test
and
pop
mov
into
ja
and
rep
mov
fnstsw
or
sbb
lret
jl
mov
jge
out
xchg
lock
enter
or
dec
imul
push
dec
cmp
stos
jge
sbb
add
pop
sbb
mov
jae
inc
add
inc
loopne
aaa
push
lret
xchg
push
movsb
sahf
ja
and
sub
xor
xchg
int
mov
mov
dec
gs
add
inc
pop
jecxz
xor
insl
xchg
mov
mov
mov
imul
fldenv
lods
bound
mov
mov
lods
sbb
mov
push
push
out
mov
movsb
mov
inc
bound
adc
adc
cwtl
xlat
xor
loope
jle
dec
push
aaa
rorb
cmc
imul
xchg
push
lahf
xchg
sbb
movsb
cld
in
lods
xchg
in
jge
add
xor
mov
in
mov
out
xor
lods
test
adcl
add
push
or
mov
and
jmp
mov
ds
sarl
xchg
pop
add
jno
pop
je
ror
mov
mov
cmpsb
cltd
push
pusha
xchg
nop
fldt
in
xor
add
ljmp
addl
mov
mov
push
mov
daa
or
outsb
popf
adc
mov
xor
loope
sahf
sbb
test
mov
push
sbb
push
jns
lcall
push
arpl
mov
push
lds
jbe
lret
into
inc
fistpl
sub
movsl
fwait
inc
inc
jne
out
fcmovnbe
sub
or
sbb
test
das
sub
addr16
and
in
mov
mov
jne
fbstp
mov
int
pusha
fnstcw
pop
shr
dec
mov
je
aas
mov
je
sbb
inc
and
test
sub
and
pushf
jmp
xchg
dec
pusha
scas
mov
imul
xlat
cmpsb
dec
inc
cmp
xchg
scas
cltd
mov
xlat
aaa
jnp
mov
imul
lock
jo
mov
sahf
cmpsb
stos
movsl
cld
push
mov
ljmp
mov
aaa
push
sbb
mull
rcr
jg
out
insl
fs
sarl
rolb
leave
pop
outsl
mov
sbb
scas
jl
sbb
int3
adcb
dec
out
pushl
insl
std
jecxz
cmp
mov
test
clc
loope
add
mov
dec
clc
fsubr
push
dec
lds
imul
mov
xchg
int
jno
adc
call
clc
or
imul
imul
mov
push
pop
or
cld
shlb
out
sub
xchg
adc
mov
push
push
or
pop
in
add
jmp
pusha
out
xchg
mov
leave
inc
sub
nop
repnz
add
stos
fs
test
jns
jno
fs
out
mov
enter
mov
inc
dec
repz
or
rcl
das
insl
in
and
push
lcall
cmp
cld
fcompl
insb
xchg
mov
cmp
lods
ljmp
ds
jmp
mov
insl
mov
addb
test
lods
cld
imul
stos
leave
mov
mov
xchg
cmc
lcall
pop
mov
or
shlb
mov
dec
mov
jg
push
enter
shlb
add
mov
and
push
dec
fbld
inc
cmpsb
xchg
push
xchg
mov
lret
xchg
jecxz
gs
xor
ss
or
sbb
adc
and
add
fisttps
sbb
mov
lea
aam
ja
inc
mov
mov
ret
mov
mov
and
sbb
and
xor
pop
insb
out
movsb
add
jmp
xchg
sub
sbb
cmp
gs
sahf
push
dec
mov
fdivl
xchg
in
adc
mov
pushf
pop
cmpb
enter
ss
mov
popf
and
sub
dec
adc
adc
jbe
in
cmpb
sub
ret
bnd
lret
dec
fwait
mov
xorb
rolb
inc
daa
fiaddl
insl
push
bound
add
mov
mov
in
mov
es
xlat
sti
fwait
test
push
inc
cmp
enter
enter
mov
mov
mov
pushf
or
inc
fdivrs
popa
sarl
data16
or
inc
sub
jle
jecxz
test
push
xor
lret
dec
fsubl
addr16
leave
aas
sbb
xor
cwtl
xchg
xlat
xchg
mov
jo
test
xor
push
lods
pop
mov
sbb
push
and
xlat
pop
xchg
dec
xchg
xadd
push
sub
add
dec
push
jmp
or
mov
xchg
mov
cmp
addr16
add
or
dec
inc
inc
or
pusha
mov
mov
or
cmp
inc
stc
movsl
daa
inc
ljmp
inc
in
and
fisubs
sub
ljmp
add
fwait
push
add
push
push
shrl
dec
loope
ret
add
mov
xor
xchg
cltd
and
int3
movb
outsl
jle
movsl
faddl
xor
fs
test
sbb
scas
pop
imul
imulb
and
fs
mov
mov
lret
sbb
jo
insl
popa
add
pop
sbb
stos
xorb
sbb
push
in
sahf
inc
nop
int3
pop
fiaddl
in
mov
pop
jp
pop
cmp
nop
dec
pop
cmp
push
incb
add
movntq
xchg
add
into
std
clc
dec
push
add
das
sub
push
mov
out
popf
jg
lcall
and
out
mov
imul
loopne
into
lods
shrl
cld
out
pop
gs
iret
sbb
out
mov
aam
jno
xchg
and
xor
mov
fbstp
pusha
mov
dec
jle
movsl
sub
mov
cld
nop
ret
test
push
lcall
rcrb
xor
call
cmp
lcall
or
in
xor
lahf
push
inc
cmp
nop
std
and
xor
fwait
and
pushf
addr16
pushf
repz
cmp
inc
or
cs
lret
inc
inc
arpl
test
and
gs
inc
data16
cmp
mov
add
arpl
pop
xor
outsl
adc
jne
pop
push
jg
mov
ss
sub
sbb
call
frstor
dec
hlt
xor
inc
loopne
movsl
cmp
mov
dec
lahf
xlat
sbb
mov
cs
pop
out
dec
std
repnz
daa
inc
andl
mov
lret
mov
mov
pop
adc
adc
outsl
adc
nop
nop
or
push
lea
lret
xor
pop
pop
dec
mov
inc
cwtl
jg
dec
mov
int3
xor
xchg
arpl
sub
push
mov
push
pop
cli
inc
xchg
sahf
mov
push
xchg
arpl
call
and
mov
pop
ret
aam
out
sub
adc
adc
and
pop
mov
pop
test
sbb
xor
lahf
andb
mov
repnz
dec
pop
pop
neg
cmp
and
pop
cwtl
imul
mov
cmc
enter
inc
je
stos
clc
mov
xchg
jo
push
cs
mov
shrb
lea
sbb
lock
mov
sub
jmp
dec
cmpsb
xor
push
xchg
adc
daa
clc
fisubrs
pop
cmp
xchg
js
stos
icebp
js
xor
mov
xor
fcoms
mov
adc
outsl
jo
ljmp
jecxz
aas
into
imul
push
out
xorps
in
add
and
pusha
xchg
cmp
mov
ftst
push
repnz
pop
lret
jnp
loop
xchg
sbb
int3
lcall
jbe
loop
jne
fists
ds
pop
fwait
add
divl
aad
mov
pop
ss
bound
imul
sahf
dec
dec
xchg
ds
ljmp
arpl
vpavgb
test
aad
das
ss
les
mov
mov
cmpsl
mov
jmp
jno
mov
ss
mov
adc
xor
cmpb
dec
into
lods
xchg
shll
fs
pop
es
push
in
jl
jmp
or
scas
ja
jnp
xor
mov
xor
and
xor
test
xchg
push
sbb
add
int3
out
xchg
dec
out
int
sub
cmp
sub
jl
inc
cmp
add
xchg
adc
adc
jb
mov
sbb
jae
nop
movsb
xor
lods
push
and
push
imul
cmpsl
loopne
and
mov
xor
inc
mov
maskmovq
lret
out
lods
jns
xchg
sbb
xchg
shrb
cmp
mov
cmp
pop
fiaddl
outsl
and
orb
lret
mov
test
pop
jmp
popa
sbb
je
mov
lds
push
xchg
dec
adc
jge
loope
daa
xchg
xchg
clc
pop
sub
push
stos
or
mov
mov
pop
push
pop
push
inc
mov
inc
mov
jne
and
sbb
push
xor
out
xor
and
add
pop
adc
sbb
aaa
mov
pusha
lods
mov
adc
sbb
repnz
jnp
push
cmp
scas
push
mov
fdivl
mov
adc
cs
icebp
shrb
or
divb
add
jmp
lahf
mov
and
sbb
xlat
jns
mov
clc
fnsave
fsubrs
cmpsl
sub
imul
dec
and
aas
adc
sbb
mov
negl
lret
scas
fldt
sub
push
daa
lds
pop
and
loopne
aaa
cmp
push
jmp
loop
push
lods
mov
inc
outsl
test
shrb
sub
aas
push
and
fisubs
xlat
xchg
sbb
popf
pop
scas
cmpsl
bound
jno
cmp
sub
test
sbb
cmp
in
sbb
mov
imul
pushf
nop
prefetch
sarl
sbb
call
mov
call
and
adc
adc
jbe
pop
aam
push
inc
pushf
lods
rcl
aaa
cmpsl
jbe
and
jecxz
aas
ds
fstl
mov
push
lock
adc
xchg
mov
adc
mov
mov
xchg
inc
mov
outsl
imul
xor
xor
adc
push
adc
lcall
dec
fdiv
mov
pop
jo
sub
cmp
cltd
and
adc
test
push
pop
pop
jg
sub
pop
or
pop
in
ret
xor
add
fwait
imul
aas
xlat
dec
test
mov
adc
mov
sub
cmpl
add
mov
xchg
sub
fcoml
pop
mov
seta
jnp
int
arpl
pop
jp
sbb
rcrl
inc
xor
or
scas
mov
mov
inc
add
fcoms
add
pop
repz
add
and
sbb
cmc
push
mov
repz
fdivrs
xor
inc
jl
sahf
dec
xchg
lret
push
pop
test
push
cmp
fidivrl
fsubs
in
in
aad
lock
aam
int3
adc
xlat
sub
mov
and
mov
jnp
jbe
rep
add
stos
adc
call
std
mov
adc
sub
or
movsl
adc
sar
dec
dec
mov
ret
add
mov
mov
and
sbb
ds
mov
enter
sbb
test
orl
lock
add
in
rolb
orl
pusha
aaa
mov
mov
outsb
adc
mov
daa
ss
addr16
lcall
or
ret
cmc
mov
bound
rorb
aaa
fidivl
add
movsl
push
mov
stos
adc
sub
xlat
inc
ljmp
scas
mov
ja
dec
mov
mov
xchg
fdivrp
mov
rclb
jne
mov
xchg
sahf
xor
push
jns
aam
ja
cs
cmpsb
jecxz
fsubp
push
cmp
sbb
adc
stos
sahf
clc
or
insl
sbb
lock
and
xchg
das
mov
mov
fcoml
mov
call
pop
stos
test
lock
inc
jo
push
mov
jle
sbb
orl
or
xchg
lret
cmp
mov
int
pop
jae
clc
mov
add
lea
jb
sub
mov
jo
fnsave
addb
xchg
push
popa
dec
dec
cld
aam
sub
dec
xor
subl
sbb
mov
push
lret
and
adc
cmp
les
adc
incl
xor
sbb
cmp
add
or
je
cld
mov
xor
shrb
addb
mov
in
sbbb
stos
mov
and
jne
into
cmp
sbb
cld
cmpsb
mov
cwtl
push
xor
gs
pop
inc
insl
repnz
jmp
aaa
jecxz
movsb
jo
insl
cld
ds
jbe
pop
nop
push
or
mov
fiadds
inc
das
dec
push
lea
add
add
enter
fbld
insb
dec
inc
push
xchg
jbe
pop
sbb
ss
push
mov
daa
jno
in
and
sub
data16
jbe
lcall
pop
addr16
dec
xchg
xchg
icebp
in
cmpsb
inc
cmp
cli
xchg
sub
das
mov
mov
loope
adc
imul
push
cmp
les
inc
pop
jp
aaa
aam
inc
xor
loopne
cmp
imul
cmp
ss
push
sub
pop
fdivrp
xchg
loope
into
push
mov
mov
repnz
inc
insb
cltd
insl
jp
cmp
sub
aam
out
and
mov
mov
pusha
adc
mov
pop
das
dec
setl
lcall
shrb
rolb
fsubrp
push
fsubs
dec
jmp
push
lods
push
arpl
pop
push
clc
call
inc
leave
jg
cmp
testl
mov
lods
push
pop
jo
loope
imul
cmp
jno
imul
xchg
mov
addl
push
push
leave
inc
xorb
adc
mov
movsb
inc
notb
aas
cs
inc
ret
into
adc
loope
mov
adc
or
outsb
pop
mov
push
jmp
lds
inc
mov
adc
imul
jp
jns
adc
xor
aad
jge
add
imul
mov
lret
xor
or
fadds
xor
test
repz
jle
xor
fisubrs
mov
adc
lahf
in
adc
add
gs
bound
xlat
push
mov
into
cwtl
inc
add
call
out
dec
iret
push
jns
jns
lret
je
nop
ds
mov
xchg
cmp
cmc
loopne
sbb
repnz
push
cltd
lcall
sub
xchg
cmp
sbb
ljmp
lret
dec
shr
hlt
imul
xlat
sbb
cmp
xor
push
dec
pusha
jne
and
push
cmp
inc
mov
xlat
dec
addb
pop
xchg
lret
mov
jecxz
gs
adcl
xchg
in
sub
cmp
test
push
adc
popa
xchg
xor
lahf
int3
pushf
pop
fdivs
xchg
jl
or
push
mov
adc
pop
mov
xchg
clc
jle
push
xor
rcrb
mov
dec
lea
and
sbb
mov
mov
jb
mov
icebp
stmxcsr
xchg
xchg
sbbl
mov
enter
cmp
dec
pop
sbb
xor
jg
pop
addr16
inc
cmpsl
daa
adc
stos
popa
movsb
inc
push
pop
push
mov
leave
pop
pop
add
dec
xor
inc
mov
dec
mov
cs
mov
das
pusha
dec
test
ret
dec
shlb
out
xchg
adc
insl
jb
push
scas
mov
adc
xor
push
sarl
cli
or
add
pop
outsb
dec
xor
loopne
mov
leave
addr16
cs
push
iret
out
loope
cmp
sbb
ljmp
sub
loop
loopne
inc
sbb
cmc
pop
lcall
popa
std
cmp
popa
lock
daa
cmpsl
cltd
lods
in
test
push
cmp
inc
insb
cltd
clc
adc
sub
jg
mov
and
pop
pop
fcomp
aas
icebp
scas
mov
mov
repnz
fsubl
sti
dec
ret
test
xchg
in
mov
push
insb
stos
sub
stos
adc
fwait
sbb
insb
rol
cli
and
cmp
pop
out
cmpl
cs
in
testb
mov
and
sub
out
adc
sbb
inc
jnp
inc
out
loope
inc
cwtl
popf
push
xor
cmp
dec
aad
lds
inc
push
xchg
in
shlb
jl
push
add
stc
lea
inc
and
push
adc
test
fs
dec
fildl
cmc
and
mov
movb
rclb
pop
jae
xchg
imull
adc
jne
and
stos
pop
out
cld
cmpsl
lgs
sub
mov
sbb
inc
enter
out
outsb
xchg
stc
inc
mov
dec
int
mov
pop
inc
xchg
push
pusha
add
push
mov
inc
inc
sub
or
mov
cmpsl
mov
test
lret
mov
xchg
in
jnp
pop
aad
add
lcall
mov
int3
in
leave
stc
clc
stos
stos
inc
faddl
jns
das
xor
fimuls
test
repnz
xchg
jae
testl
mov
cmp
and
push
sub
pop
andl
in
cmc
jno
xchg
or
fcoml
pop
punpckldq
cs
jmp
fsubrl
dec
fs
jg
xor
adc
adc
xchg
pop
push
mov
adc
dec
xchg
xchg
jg
mov
mov
clc
xor
jmp
jg
scas
repz
addr16
dec
movsb
fdivrp
mov
idivb
in
add
mov
mov
cmp
inc
mov
iret
aas
mov
icebp
sub
adc
sti
and
xchg
or
pop
insb
stc
cld
xchg
add
mov
rclb
sbb
js
add
mov
es
push
xor
dec
adc
xchg
inc
call
push
nop
pop
mov
inc
clc
push
out
dec
xchg
push
sub
js
jno
mov
mov
aas
lcall
icebp
mov
push
lret
test
test
sub
arpl
mov
test
mov
sbb
xor
scas
outsl
cld
aad
mov
cmc
pop
jl
mov
inc
orb
xor
sbbb
incb
shlb
add
fwait
adc
les
mov
mov
ret
aas
jno
call
lret
jns
xor
fldenv
push
jnp
fwait
mov
adc
push
test
clc
sub
mov
fimull
sbb
adc
shrl
sbb
sahf
jb
lahf
scas
cltd
test
mov
enter
jl
out
sbb
in
cmc
imul
inc
adc
jl
jl
xchg
in
clc
out
es
sbb
sub
mov
sub
pop
fs
in
gs
ljmp
and
push
add
stos
std
movsl
and
pop
cmpb
ret
repnz
push
or
push
mov
sarl
cmp
shl
jmp
mov
xor
push
dec
pushf
std
mov
xchg
or
mov
dec
sbb
or
cmc
push
inc
in
movsb
mov
loopne
outsb
js
adc
ret
jecxz
enter
js
je
jp
dec
in
xlat
xor
call
jnp
push
icebp
mov
loop
adc
fsubp
gs
xchg
push
cmpsb
xor
repnz
stc
jae
lock
popf
xchg
aaa
imul
scas
ficoml
clc
dec
xchg
stos
xor
sbb
xorb
push
xchg
fisubs
push
bound
mov
mov
ds
das
adc
adc
jl
leave
sub
ret
or
pushf
fs
test
jg
ja
mov
inc
xchg
out
pop
enter
inc
jge
test
xchg
fistpl
dec
push
dec
lea
pop
inc
lret
cltd
adc
pop
lods
pop
sti
dec
ror
outsb
jmp
les
sbb
push
repz
call
enter
pop
mov
push
stos
pop
cltd
inc
adc
ds
sub
xlat
xchg
pop
mov
popf
subb
clc
mov
jo
inc
push
jg
dec
pop
in
cld
sbb
push
dec
ss
dec
rcrl
setnp
ret
fcoml
jl
xor
rcrl
and
out
inc
loopne
addl
or
sbb
cmp
clc
out
mov
stos
je
repz
sub
xor
xorb
add
xor
lahf
cmp
adc
xor
push
push
cmp
sbb
sub
mov
jle
jb
lods
and
js
xor
adc
fdivl
push
pop
dec
scas
dec
cmp
fiadds
je
movsl
pop
dec
sub
call
lea
lcall
insl
and
inc
setp
in
or
lods
dec
sbb
jb
call
in
push
mov
add
push
mov
rcll
in
xchg
push
add
inc
push
dec
push
ret
jl
mov
gs
cmp
repnz
jnp
jle
and
xorb
adc
sub
add
test
movsb
testb
dec
sub
popf
jecxz
cmc
es
out
dec
out
aas
aas
pop
adc
push
adc
out
pop
clc
mov
sbb
jno
dec
mov
scas
std
sahf
push
iret
shll
sbb
add
and
pop
and
push
sub
pop
add
sbbb
ss
outsl
jne
outsl
pop
or
mov
inc
hlt
adc
sbb
lods
cmp
hlt
inc
aam
and
js
orl
pop
js
mov
mov
or
pop
fwait
xchg
outsb
xlat
mov
in
test
and
mov
imul
icebp
xorb
inc
pop
pop
xor
hlt
imul
dec
sub
dec
inc
sub
add
cmp
movsb
clc
cmc
sub
push
cmpsl
jae
xchg
out
xor
xchg
cmp
cwtl
lock
sub
pop
lcall
mov
adc
rorl
test
push
push
jns
jl
iret
mov
jp
sbb
cwtl
push
pop
jmp
mov
pop
repnz
scas
xchg
mov
enter
loop
test
cli
icebp
and
add
mov
movsl
push
dec
cmp
xor
and
icebp
mov
in
mov
pop
jb
in
inc
bnd
xor
adc
sti
lods
sahf
call
xchg
fstpt
lods
inc
sub
enter
fucomi
sub
adc
call
arpl
adc
jnp
movsb
cmp
or
fs
push
push
js
xchg
sbb
pop
xorb
mov
shll
xor
incb
test
out
push
mov
mov
and
fistps
jo
mov
inc
cmpsb
out
mov
imul
cmp
cmp
cmp
sbb
inc
add
sbb
stc
add
out
pop
mov
data16
lahf
xorb
stos
mov
mov
outsl
mov
add
movsl
or
mov
adc
inc
mov
jo
rcll
cmpsb
and
mov
push
pop
repnz
inc
ja
out
mov
adc
push
or
pop
add
sahf
or
xchg
das
movl
loop
dec
mov
mov
pop
pop
cld
popa
movsb
cmp
sti
cwtl
popf
addr16
xchg
popf
xor
in
cld
or
lret
mov
xchg
hlt
hlt
pop
cmp
mov
and
movsb
mov
mov
xchg
pop
lret
push
xchg
jecxz
mov
leave
xor
notl
xchg
pop
aad
pop
shrl
lahf
mov
mov
xor
loop
jg
push
lcall
mov
fistl
in
neg
or
sahf
mov
lcall
fiadds
jl
jmp
push
in
popa
jnp
inc
hlt
stc
mov
push
out
hlt
jae
xor
je
jns
jmp
ja
inc
repnz
test
and
mov
mov
bound
les
add
aam
roll
out
or
orb
or
sub
xor
shll
enter
sbb
mov
mov
cmp
loope
lods
xor
sub
outsb
mov
inc
lods
icebp
jmp
inc
dec
adc
xor
clc
push
lock
push
cmpsl
fs
gs
push
jp
outsl
or
pop
sub
xor
push
jle
lahf
fwait
and
mov
dec
stos
insl
fwait
cltd
mov
push
test
loope
xor
mov
mov
push
cmp
sub
ds
xchg
std
xor
stos
hlt
adc
mov
mov
mov
pop
mov
sbb
fld
fs
test
test
mov
cltd
pop
cmc
enter
dec
scas
or
ds
roll
sahf
jl
cmp
movsb
lods
js
inc
loopne
xlat
dec
repz
adc
outsl
and
sbb
adc
dec
jbe
fisttpll
fsubs
rolb
out
add
cmc
lret
das
dec
cmp
addr16
cmp
call
cld
les
sub
ret
mov
das
ret
psubb
xchg
mov
xchg
roll
and
cmp
xor
sub
pop
xlat
mov
in
outsb
mov
add
inc
adcl
xchg
jecxz
mov
loopne
jmp
in
jo
mov
lods
in
mov
lods
arpl
je
jle
adc
sub
jl
jo
mov
jecxz
repnz
lods
das
das
shl
pushf
test
mov
cmpsb
insl
and
mov
lret
pushf
and
or
mov
shll
mov
shll
xchg
pop
sbb
aas
cmp
inc
nop
jb
insb
cwtl
mov
out
rolb
aas
sub
test
or
sbb
sub
scas
push
out
test
dec
aas
pushf
cmp
rcll
mov
inc
cmp
loopne,pt
adc
add
adc
xchg
inc
and
pushl
ja
xchg
sahf
inc
inc
sub
out
daa
dec
mov
push
fdivrl
inc
sub
pop
adc
push
sub
xlat
mov
adc
jge
loope
mov
xor
in
in
pop
cltd
dec
mov
push
es
inc
into
lods
mov
jae
add
ret
and
and
sub
sbb
cmp
xchg
inc
jge
cmc
outsl
lds
mov
cwtl
fists
push
add
fcoml
mov
fimuls
xor
jmp
jle
or
xlat
and
int3
xor
sub
and
test
clc
push
sub
xchg
je
icebp
cmpsb
in
lret
add
dec
fstps
cmp
notb
jae
outsl
push
clc
aam
mov
adc
cmp
std
xchg
add
sbb
push
push
data16
out
inc
xor
inc
aad
push
inc
push
inc
cmc
cmp
insb
push
in
sbb
in
or
ja
into
stc
pop
aam
jnp
aam
mov
lahf
xchg
xchg
pop
out
mov
xchg
pushf
shll
adc
mov
popa
and
insb
scas
add
jb
out
in
xchg
lds
mov
xchg
sahf
rcll
test
mov
mov
xor
dec
hlt
xor
fimull
pop
pushf
fwait
and
jae
xchg
lret
or
adc
nop
das
add
sbb
xchg
hlt
arpl
movsb
hlt
jae
repnz
jmp
xlat
pop
das
add
push
int3
ret
or
sbb
mov
jns
push
xlat
lods
jb
jbe
mov
mov
push
or
jb
xchg
push
xlat
adc
stc
mov
cmp
cld
bndstx
rol
pop
lahf
fisubrl
lods
ret
int3
mov
dec
jae
jae
adc
andl
inc
std
mov
inc
test
fucom
insl
scas
rclb
test
cmp
cmp
push
loop
sti
movsb
fdivs
pop
in
push
xchg
mov
adc
add
dec
cmpsb
or
cmpsl
gs
lea
cld
clc
cmp
clc
jg
lea
adc
cmp
sbb
cmp
mov
fidivs
jmp
add
xor
or
pop
and
nop
outsb
adc
mov
mov
xchg
add
jo
dec
xchg
jmp
ds
mov
sub
cmpsb
lock
mov
loopne
rcrb
sbb
and
out
and
jns
fstpt
loop
or
in
mov
xchg
push
or
xchg
adcl
jbe
xchg
or
mov
mov
push
xchg
adc
mov
adc
jo
imul
push
xchg
and
idivl
stos
fisttps
add
pushf
sbbl
std
cmpsl
cmp
push
jne
push
pop
push
gs
int3
sti
jae
cmc
movsb
insb
or
or
in
cmp
cmp
es
imul
gs
stos
lret
pusha
adc
sbb
ljmp
pop
push
inc
icebp
in
and
cmpsb
movb
sub
and
lcall
mov
pop
in
xor
loopne
sbb
addr16
push
adc
les
xor
push
mov
or
adc
or
push
push
add
stc
lret
int3
adc
inc
das
push
add
add
sbb
jge
mov
xor
xor
dec
xor
ss
mov
in
jns
gs
add
in
or
cld
push
enter
hlt
pop
cmpb
xchg
mov
es
lea
push
loope
inc
daa
dec
addr16
enter
pop
mov
pop
rcl
in
rolb
int
loop
cli
std
cld
mov
adc
adc
sahf
repnz
and
inc
ljmp
add
mov
push
xchg
push
rorb
xor
fcoml
adc
or
aaa
lods
filds
jp
jg
popf
stos
inc
pop
or
pop
pop
add
mov
inc
orl
loope
add
scas
es
fbld
insl
lods
mov
push
movsl
push
or
add
mov
sti
aam
rcrb
insb
pop
inc
cs
sub
scas
mov
scas
mov
lea
mov
xchg
pop
xor
in
add
cwtl
scas
push
mov
andb
xlat
jo
je
imul
iret
cwtl
mov
mov
les
pop
test
es
xchg
cltd
xor
int3
xor
or
xor
mov
nop
and
or
jecxz
lea
adc
int3
push
or
xchg
call
icebp
and
ljmp
mov
xchg
nop
pop
sarl
fcmove
mov
mov
mov
cmovae
sbb
gs
ret
sbb
cmp
push
push
mov
sti
dec
add
popf
lahf
cmpsl
push
dec
lcall
dec
cwtl
clc
arpl
sub
popl
fisttps
pop
test
push
add
sbb
inc
add
cmp
mov
push
in
repnz
jne
das
mov
pop
xor
and
mov
inc
out
cmp
in
cmp
sbb
xchg
add
cmc
xor
xchg
adc
mov
stos
cmp
mov
arpl
sbb
xor
jp
imul
stos
movsl
xlat
or
pushf
hlt
dec
sub
loope
mov
cmpsb
mov
nop
cltd
pop
jb
in
jge
repnz
lret
daa
dec
cmp
xchg
js
sub
aam
inc
pop
and
fsts
and
jne
xlat
fcompl
sub
adc
sti
fdiv
cmpsb
fcomps
arpl
sbb
xor
loopne
fldcw
imul
nop
movsb
mov
mov
ja
nop
bound
lcall
insl
pop
scas
stos
mov
les
xlat
jp
sbb
mov
jmp
xlat
sub
andl
dec
mov
icebp
mov
fldenv
loop
in
ret
ret
pop
cmp
in
filds
ret
call
addb
mov
mov
aam
sub
mov
mov
adc
and
xor
pop
push
jl
push
mov
jae
ljmp
int3
fistps
insl
jl
popa
add
test
xchg
or
loope
xor
sbb
inc
mov
aam
push
lods
nop
ds
sub
cmpl
dec
dec
arpl
daa
adc
rep
xor
iret
xchg
shl
or
fsubr
in
or
cmp
mov
in
jnp
data16
sub
lds
pop
mov
xchg
xor
dec
jge
push
mov
push
insl
inc
fsubs
xchg
es
mov
adc
inc
xchg
jbe
adc
insl
sub
data16
jmp
push
xor
jne
lods
and
sub
xchg
fdivrp
pushf
ret
or
pop
and
xor
xlat
loopne
test
lahf
add
mov
loope
cmp
into
mov
ja
sbb
inc
orb
notb
mov
pop
fdiv
test
out
or
imul
dec
fsubr
push
adc
scas
js
pop
aas
push
adc
sub
and
popf
inc
ret
shrb
enter
adc
jp
lcall
cmp
test
cwtd
sbb
hlt
mov
inc
rcr
test
mov
or
test
hlt
dec
test
xor
mov
cld
ljmp
and
rolb
xor
dec
xchg
sti
loop
xchg
scas
outsb
xchg
test
call
and
sbb
adc
jae
push
lods
rcl
cmp
lret
mov
push
xor
mov
inc
inc
sarl
loop
hlt
scas
xor
addl
gs
loope
push
mov
out
call
mov
pop
and
and
sub
mov
andb
cmc
inc
insl
stos
jb
cwtl
ret
mov
rorl
test
ds
and
push
ja
or
lds
jecxz
imul
mov
cmp
cmp
test
cli
gs
jo
dec
cli
fwait
jecxz
and
idivl
jl
arpl
dec
shlb
mov
int3
and
and
mov
fisubrl
dec
xchg
lret
stc
mov
mov
sub
js
push
pop
xchg
pop
inc
mov
addr16
xchg
js
pushf
repnz
and
repnz
sbb
fbld
cmp
inc
or
xchg
in
add
inc
mov
jp
shrb
das
je
pop
nop
mov
add
and
and
xchg
lds
gs
dec
fistpll
inc
in
mov
mov
out
and
pop
inc
outsb
mov
adcl
stos
cs
xchg
hlt
lahf
dec
mov
or
add
addb
loopne
mov
pop
inc
into
mov
mov
and
push
ffree
into
in
popa
xchg
aas
nop
filds
mov
je
jnp
pop
dec
mov
push
push
movsl
ljmp
shrl
add
adc
pop
les
push
sub
outsb
or
cmpsb
js
add
add
ljmp
movsb
ja
sub
mov
push
add
outsb
inc
mov
cmpsl
loop
and
shll
je
xor
shlb
xor
pop
push
out
xchg
push
inc
rorl
lcall
xchg
insl
scas
jl
stos
sbb
mov
sub
mov
mov
movsl
dec
jmp
jl
push
push
stos
cmpsl
test
cmp
or
ud1
pop
xchg
out
sarl
aad
or
add
or
or
xor
jle
xlat
mov
jo
popa
inc
hlt
push
sbb
int
jns
sub
cmp
cli
cmpsl
sub
cmc
xor
fidivrs
bound
jp
jne
repnz
aaa
push
imul
cwtl
cmc
lds
outsl
inc
shll
xchg
adc
push
dec
pop
dec
sahf
lret
int3
stos
adc
movups
mov
adc
int
mov
repnz
aas
das
test
rorb
popa
sub
es
inc
repz
mov
mov
daa
pop
and
mov
imul
xlat
fldl
pop
xlat
clc
sub
or
push
pushw
xchg
pushf
sbb
sarb
out
pushf
cli
dec
je
adc
bound
fsubs
add
push
lods
jle
out
mov
mov
lods
push
insb
and
adc
mov
push
and
xchg
pushf
fsubs
mov
int
push
lret
sub
sbbl
adcl
hlt
fisttpl
or
mov
ss
dec
test
mov
aas
add
sub
data16
mov
sbb
movsl
les
and
jmp
mov
xor
movsb
fcmovb
scas
cmpsl
stos
sbb
data16
cmp
fwait
dec
pop
pusha
sub
jbe
movsl
iret
lods
lds
outsb
sub
out
mov
jle
or
sbb
int
fiadds
mov
insb
inc
pop
sti
stc
cmpsb
and
jae
sub
pop
lea
sbbl
sub
sub
add
add
adc
and
hlt
jno
push
cmpsb
jnp
mov
into
lret
repnz
insl
add
icebp
out
imul
int
cmp
mov
add
ljmp
sbb
scas
les
dec
sub
dec
mov
je
repnz
xchg
cmp
jns
xor
insl
mov
cld
call
push
jecxz
jnp
mov
cmp
mov
dec
aad
out
sub
inc
xchg
mov
jp
jnp
xchg
mov
fs
jmp
xchg
mov
div
sbb
cltd
cltd
cmp
xor
insl
mov
popa
call
mov
ret
or
mov
pop
movsl
fnstcw
out
dec
sbb
call
pop
inc
mov
pop
cmp
mov
ret
inc
jne
dec
hlt
or
aad
mov
fidivrs
xchg
pop
mov
es
pop
pop
inc
ret
add
imul
push
lcall
mov
mov
xor
inc
cmp
jl
arpl
sub
int3
dec
test
call
insl
les
push
lock
mov
bnd
mov
cli
and
outsl
pop
into
cld
or
jne
fildl
mov
xchg
popa
stc
sub
imul
loop
adc
inc
pop
sbb
pop
movsb
pop
lcall
out
pop
and
scas
mov
jl
xor
je
les
xchg
cli
popf
outsl
mov
sahf
gs
stc
sahf
sub
mov
cmpl
leave
pusha
xlat
stos
add
mov
xchg
mov
sarl
stc
ja
aad
adc
push
jmp
imul
andb
sub
pop
add
mov
add
in
adc
inc
movsl
xor
lcall
addb
int
aas
data16
repz
cltd
pop
push
adc
aad
cwtl
dec
xor
xor
add
loope
or
xchg
pop
xchg
scas
stc
loop
out
scas
cmp
push
push
sub
dec
call
stos
mov
and
loopne
xor
out
icebp
sbb
mov
xchg
xor
pop
sbb
adc
jnp
sbb
push
xchg
or
xor
loope
rorb
mov
mov
mov
out
movsb
lea
cltd
test
je
sub
in
dec
mov
dec
jecxz
mov
ljmp
jmp
xchg
pop
fstpt
sbb
sbb
xor
cmp
jge
mov
ss
clc
pop
test
sbb
add
pop
pop
cmpps
push
jg
sub
xchg
mov
sbb
lret
roll
xchg
lods
jb
inc
lret
popf
cld
loope
mov
mov
lea
shlb
ret
mov
sbb
sar
das
add
push
pop
push
adc
jg
dec
gs
fidivrl
cmp
push
sub
jp
lods
movsl
ficomps
iret
fxch
into
pop
mov
push
xchg
push
popf
add
sbb
cmp
cmp
lds
lods
leave
aam
mov
fs
nop
lret
enter
push
and
adc
cmp
ds
outsb
cwtl
jno
push
push
std
test
push
iret
pop
dec
sub
lock
pop
into
xchg
outsb
cmp
xor
add
lahf
mov
fwait
cmpsb
xor
ljmp
xchg
mov
add
adc
push
jmp
lcall
fwait
data16
push
std
mov
filds
pop
xlat
pop
mov
out
jle
std
and
leave
pop
idiv
movsl
jg
test
push
daa
dec
or
jp
movsl
js
jno
jp
cltd
movsb
cmp
shll
and
pop
xor
pop
pop
or
pop
je
pop
aaa
mov
mov
iret
sub
call
hlt
sbb
xchg
insl
xchg
cmp
and
cmc
cli
sbb
je
pop
cmpl
push
mov
pop
pop
subl
and
aaa
std
addl
aam
stos
insl
das
sub
loope
sarb
dec
inc
sbb
shr
pop
pusha
or
fadds
xchg
lock
jae
mov
mov
jne
stos
xor
add
dec
jns
idivb
push
insl
push
dec
int
and
mov
push
in
sahf
mov
aaa
mov
sbb
push
jl
jnp
fwait
cld
and
mov
stos
out
rolb
or
repnz
movnti
fxch
sub
cmc
test
fcmovu
or
imul
js
ja
jge
push
and
je
lahf
inc
xchg
jns
subb
testl
cmp
stos
add
add
aad
sarl
sub
push
push
aam
ret
out
aaa
repz
xchg
and
mov
lret
jl
mov
das
das
cmp
inc
pop
test
xchg
repnz
hlt
mov
jbe
ja
pop
add
scas
cmp
sti
inc
jmp
xchg
aas
ja
pop
jmp
sbb
xchg
ljmp
push
pusha
xor
pop
in
insl
hlt
mov
jb
xchg
cmc
mov
maxps
pop
hlt
xchg
cmp
cmp
loop
jl
pop
inc
inc
loop
les
jp
jg
lock
cmp
and
mov
push
xor
xor
push
and
andb
lea
popl
lahf
ljmp
xchg
icebp
sahf
fnsave
and
rclb
push
xchg
or
push
add
mov
aas
sbb
sub
push
fstpl
xchg
mov
mov
popa
cmc
aam
sbb
dec
xor
fdivrp
push
xchg
inc
repnz
inc
dec
xchg
jnp
push
xor
test
aaa
inc
call
xor
in
pop
adcl
xchg
sub
in
int
inc
iret
out
leave
push
insl
push
sbb
mov
inc
xchg
sbb
lea
call
fsubrl
cs
mov
shr
icebp
fwait
pop
pop
mov
mov
sbb
cmp
mov
and
lret
int3
lcall
xchg
cmp
js
xchg
dec
ds
mov
cmp
add
sbb
sbb
aas
sbb
mov
jbe
dec
jle
add
jl
loop
bound
inc
sbb
and
fidivl
test
xchg
add
xor
addr16
add
add
rclb
out
jp
scas
push
inc
jle
fnstcw
push
fcomps
and
int
addr16
test
or
add
add
imul
maskmovq
idivl
push
out
in
push
scas
add
inc
orl
addr16
ljmp
pop
aas
out
das
pop
idivl
xchg
xor
adcb
mov
inc
xor
idiv
or
je
push
mov
add
jle
js
push
stos
sarl
or
cmp
nop
ss
das
rolb
sbbl
aaa
fnstsw
aad
sbb
clc
es
pop
popf
ljmp
stos
lods
test
push
cmp
pusha
push
outsl
int3
aam
pop
popf
insb
je
iret
cwtl
push
sbb
hlt
dec
mov
sub
mov
push
test
add
repnz
fimuls
sub
mov
mov
leave
mov
mov
sahf
test
fs
jp
nop
aad
mov
fcmovb
cmp
mov
negl
add
jbe
out
xchg
pusha
call
or
rclb
fsubrs
jae
push
push
cmp
aam
mov
mov
enter
and
fwait
dec
pop
testl
clc
insl
dec
test
jns
cmp
lods
mov
clc
xchg
jnp
ljmp
or
out
ret
inc
jp
fidivrs
cmp
add
or
cmc
test
rcl
sahf
dec
sub
cmp
pushf
dec
mov
outsb
cmp
push
cs
jg
addb
aaa
dec
shrl
sbb
outsb
xchg
inc
hlt
mov
mov
shll
cmp
push
pop
stos
xlat
movsl
inc
mov
pop
xchg
lcall
mov
adc
decl
cli
xor
sub
adc
das
jmp
adc
ss
nop
cmp
xchg
push
das
das
fwait
adc
xchg
push
push
jmp
imul
xor
cmp
roll
cmc
addr16
int
jb
sbb
sub
fistps
inc
daa
or
mov
aam
or
push
inc
jbe
inc
leave
add
cmp
adc
dec
or
cmp
insl
xlat
daa
popf
gs
push
pop
xchg
or
ss
or
orl
and
enter
push
dec
add
sub
lret
lahf
fs
nop
test
jecxz
push
xor
loopne
aaa
iret
mov
je
cmp
ss
clc
testl
fists
idivl
test
stos
and
mov
or
xor
inc
fistpll
sbb
push
in
sub
mov
and
jne
cmp
sbb
xor
sub
out
xchg
fstps
pop
mov
cld
cmp
adc
xchg
jns
push
and
lcall
mov
xor
in
scas
inc
inc
xchg
popa
cmp
mov
pop
xchg
mov
mov
jb
xor
xor
movsb
mov
push
dec
cmpsb
notb
sub
add
dec
push
lods
lock
incl
int3
clc
daa
in
sub
mov
dec
daa
push
inc
outsl
mov
xchg
sbb
jg
test
daa
aas
gs
or
cmp
add
dec
mov
inc
cwtl
out
sti
popa
add
shlb
xchg
mov
inc
test
in
sahf
in
out
negb
mov
jle
notl
push
andb
xchg
and
pop
jmp
in
cmpsb
mov
std
ja
leave
xor
and
aas
pushf
aas
ret
sub
and
mov
pop
mov
mov
shlb
pop
fstl
clc
mov
lea
idivb
push
cmp
aad
lods
out
jo
mov
dec
jo
sbb
lods
outsb
dec
mov
mov
or
jb
pusha
stos
cmpsl
sti
ja
loope
loop
push
push
pop
aad
testl
push
mov
or
dec
sub
push
rcrb
inc
sbb
shrl
ds
sbb
mov
push
mov
ljmp
and
popf
push
leave
sarb
repz
clc
jb
dec
pusha
dec
mov
push
mov
lods
lcall
push
cmp
pop
mov
iret
in
rcl
and
into
lods
lret
ss
out
cmp
cltd
addr16
mov
inc
jae
lods
addr16
lret
pop
adc
gs
mov
dec
xor
cltd
jecxz
push
mov
jnp
cmp
sub
jg
adc
pushf
add
and
loopne
push
xchg
push
out
std
test
add
or
fs
add
sub
int
dec
test
sub
jle
inc
mov
adc
dec
andl
cmp
cmpsl
jns
faddl
movsb
mov
out
cmpsb
cmpsl
lret
sti
push
fwait
sbb
fiaddl
xor
nop
xchg
lock
cwtl
mov
jne
cltd
push
in
mov
hlt
movsb
sbb
mov
jp
mov
mov
sub
cmp
addr16
stos
cmp
pop
jg
mov
popa
mov
dec
jae
imul
ret
jnp
sbb
fbstp
inc
push
sbb
test
mov
xchg
cmp
cltd
xchg
insb
pushf
cmc
xchg
roll
mov
sub
sbb
je
mov
inc
mov
cmp
sarl
or
xor
jge
jg
out
mov
les
cmp
sub
leave
sub
pop
cmp
mov
adc
mov
jnp
add
or
mov
repz
push
ljmp
movsb
dec
mov
stos
add
cwtl
push
or
and
ret
call
mov
pop
add
cmp
ss
test
push
push
jae
mov
dec
jbe
or
sbb
fcmovnb
mov
jns
pusha
lods
pushf
inc
xchg
and
xor
mov
shll
outsb
mov
repnz
pop
idivl
mov
fidivrl
cmpb
mov
fsubrl
jge
lods
push
or
mov
mov
push
jno,pt
inc
pop
out
into
jbe
ljmp
rorl
fldl
cmc
out
fidivrl
push
sahf
int
stc
lds
enter
dec
and
movsl
or
ja
xlat
lea
ss
mov
mov
ljmp
push
pop
repnz
hlt
shl
push
cmp
daa
scas
or
dec
stos
jg
in
add
int3
dec
dec
aaa
inc
std
inc
or
dec
cld
cmp
test
xlat
pop
xchg
and
inc
push
mov
push
les
nop
mov
adc
imul
mov
xor
test
ss
shlb
nop
lret
mov
xchg
aam
push
xchg
mov
jno
push
daa
fst
jecxz
fisttpll
xlat
mov
pushf
cli
jle
sbb
pop
jo
jle
bound
pop
mov
push
adcb
and
movq
fs
push
adc
jle
repz
cmc
xchg
lret
nop
int3
ds
or
inc
inc
fs
push
push
sub
or
mov
fs
xor
pusha
stos
dec
divl
sub
mov
jne
shlb
cmp
lahf
or
mov
mov
mov
mov
paddsw
jmp
repz
push
pop
addr16
data16
mov
cmp
stos
xchg
xchg
ss
scas
mov
ret
lahf
lret
mov
mov
pop
dec
xchg
push
xor
pop
push
outsl
dec
stos
hlt
adc
das
mov
mov
ss
cmp
pop
or
mov
nop
subb
pop
adc
and
mov
push
mov
dec
inc
mov
rcrb
cltd
out
loopne
ret
pop
add
lret
sub
mov
inc
pop
inc
neg
jmp
es
mov
ja
dec
and
jnp
sarb
mov
mov
jmp
jo
ud2
aad
les
push
dec
and
sar
leave
icebp
loop
fadds
sub
cli
xor
bound
repnz
ja
xchg
xor
mov
xor
iret
lret
pop
ret
adc
pop
movsb
mov
add
lret
dec
cli
int3
pop
shlb
psadbw
nop
jmp
loopne
dec
mov
out
lock
fwait
mov
inc
xor
sub
test
xor
cmp
and
sahf
xchg
shrl
add
mov
clc
hlt
mov
loope
jnp
cltd
sahf
mov
sar
add
mov
sarl
stc
xchg
mov
inc
sub
ja
aas
ret
test
jecxz
subb
mov
js
mov
mov
dec
pop
divb
cs
push
jge
adc
sbb
xchg
push
jnp
loopne
outsb
adc
sub
cld
add
hlt
pop
enter
inc
mov
inc
lea
sub
fiaddl
sub
push
sub
lea
mov
or
stos
imul
jnp
lret
add
adc
add
ds
inc
pop
mov
cld
imul
xchg
and
mov
jmp
cmp
pop
xor
push
leave
sub
xchg
stos
jno
mov
xor
push
cs
xchg
in
cld
push
push
jno
sbb
mov
xchg
dec
xor
xor
mov
mov
mov
roll
jb
mov
arpl
xchg
jp
out
stos
cli
jle
sbb
std
shr
mov
pop
and
pusha
data16
jno
test
pushf
jl
js
fdivrs
xor
mov
mov
outsl
adc
cmpsb
jb
xchg
adc
inc
and
hlt
leave
cmp
xchg
fistps
mov
mov
ss
ss
push
addl
inc
or
mov
dec
or
sbb
or
cli
sub
bound
es
movsb
xchg
test
sub
cmpsb
xchg
xor
mov
xchg
xor
loope
dec
sub
icebp
out
mov
and
lds
push
js
sahf
gs
dec
sbb
ja
inc
test
aam
or
sbb
push
stos
stc
mov
dec
add
bound
test
in
cmp
mov
pop
loopne
arpl
jne
lahf
cmc
pop
inc
test
ljmp
enter
imul
xchg
inc
rcr
push
pop
bound
sbb
mov
in
adc
jo
mov
xlat
add
jnp
cmp
imul
and
in
pop
pop
addr16
mov
ret
xor
mov
aas
imul
push
hlt
xor
and
fisubl
cmp
shll
fisubs
xchg
stos
scas
add
add
and
scas
int
mov
lret
je
xchg
sub
stc
push
andb
sub
imul
fsubr
dec
push
lcall
lcall
test
jl
adc
int
addr16
das
leave
add
push
fsubl
jbe
clc
loope
mov
mov
aam
mov
mov
mov
in
ss
mov
cmp
hlt
pusha
jbe
mov
push
push
sub
mov
in
add
adc
dec
jne
nop
mov
rcl
stos
mov
iret
pusha
or
inc
pop
sarl
mov
mov
cmp
xchg
enter
dec
sbb
sub
hlt
dec
out
lds
or
pop
adc
push
push
sbb
into
addr16
outsl
pop
mov
or
loopne
sub
cltd
jecxz
iret
cwtl
dec
dec
sub
out
add
inc
or
out
xor
fnstenv
cmp
fcomi
sbb
lds
jmp
cmpsl
iret
push
add
sub
fsts
cmp
in
jmp
jle
in
lea
aam
shlb
mov
pop
cld
or
adc
push
xor
outsb
out
pop
outsb
daa
aaa
repz
sub
rcrb
jns
dec
mov
dec
in
lahf
fneni(8087
sbb
xlat
test
dec
scas
cmp
cwtl
push
outsl
sub
mov
cld
rclb
or
lret
cmp
cmpsb
and
call
push
sub
jg
mov
jmp
mov
popf
lods
or
mov
xchg
mov
les
inc
add
and
outsb
cmc
addr16
mov
pop
orl
fnstsw
xor
fdivrs
fld
mov
sub
repnz
pop
in
cs
negl
sub
inc
sbb
inc
pop
sub
mov
xchg
popa
push
cmp
bound
pop
bnd
sti
adc
xchg
sub
in
inc
or
sbb
sub
mov
cld
add
cmpsb
cmp
push
xchg
and
test
insb
fstl
lock
lds
mov
mov
cld
arpl
dec
ret
pop
mov
in
and
fs
cmc
push
mov
roll
cld
insl
arpl
dec
push
sbb
test
pop
adc
ds
sbb
jg
test
arpl
out
popf
lahf
push
push
fwait
jmp
ds
dec
popa
or
lds
sbb
sbb
movsb
sub
dec
sub
ret
outsl
lock
in
mov
movsl
cwtl
mov
adc
ret
or
imul
mov
jge
dec
dec
pop
cmc
cmpsl
mov
sbb
in
inc
mov
push
mov
xor
push
mov
leave
outsl
xor
scas
jle
mov
xlat
inc
jnp
dec
into
jb
js
imul
mov
pop
xchg
jnp
or
es
sub
add
imul
mov
xor
xchg
aaa
or
js
mov
mov
inc
aam
xor
ds
imul
pop
dec
imul
sbb
cmp
sub
inc
lock
stos
insl
adc
sbb
inc
repnz
dec
das
ret
or
cmp
mov
cmp
aam
sahf
repz
pop
mov
inc
mul
add
push
push
add
mov
aaa
aas
rcl
insb
sbb
pushf
push
and
pop
dec
mov
sub
push
cmp
xchg
mov
pop
data16
imul
or
cmp
lods
mov
sub
xor
inc
xor
test
insb
movsl
or
mov
repnz
in
sbb
inc
pusha
test
push
push
push
orb
mov
push
dec
pop
js
pop
cmpsl
cmp
out
xchg
push
repz
inc
mov
push
dec
dec
jle
lds
ds
xor
and
outsb
jg
outsl
imul
jne
sbb
lock
in
xchg
pop
gs
insl
xchg
mov
sbb
push
xor
into
loopne
xlat
in
mov
leave
mov
mov
inc
pop
xchg
xchg
jne
xor
or
pop
aas
ljmp
mov
and
jg
xchg
xor
xor
inc
test
pop
push
jp
addb
mov
imul
nop
mov
mov
add
out
jp
push
mov
lods
mov
jae
mov
mov
outsl
les
jbe
subl
inc
mov
cmp
cmp
sbb
das
sbb
lods
clc
sbb
sbb
outsl
loope
aam
xor
ljmp
or
xor
sub
das
xor
frndint
testl
xor
or
xchg
push
sahf
xor
andb
mov
jae
je
xchg
or
xchg
mov
insl
cmpsl
notl
cmp
scas
shrl
sub
adc
cmp
out
cmp
es
xchg
or
out
mov
dec
mov
dec
add
or
stos
ja
mov
mov
or
mov
mov
aam
in
mov
addr16
or
push
rcrb
xor
fsubs
mov
addr16
fs
pusha
popa
jb
out
xor
fidivl
jge
xor
xchg
nop
ret
push
scas
jb
pop
xor
imul
ja
sbb
mov
or
adc
dec
mov
cli
pop
or
les
je
shr
addr16
adc
int3
sub
mov
inc
insb
out
je
insl
fwait
dec
or
out
mov
in
jno
daa
mov
loope
jg
and
and
and
adc
loopne
sub
mov
jmp
out
pop
jbe
xor
fldl
inc
mov
in
mov
popa
mov
sub
mov
mov
cwtl
fidivrl
scas
lea
adc
popa
icebp
sub
sub
sbb
cmp
cmpsb
pop
xorb
add
mov
xor
lods
sub
imul
pop
sub
adc
js
and
mov
xchg
pop
mov
mov
stos
pushf
cmc
cmpsl
cmpsl
adc
mov
dec
xchg
daa
std
jo
xchg
jle
xlat
out
cwtl
adcl
and
jae
aam
mov
jb
das
mov
pop
cmp
jnp
lret
mov
fcoms
negb
mov
mov
fsts
cmp
adc
jo
adc
mov
pmaddwd
push
mov
std
je
xlat
sbb
jl
inc
lret
hlt
in
popf
cwtl
push
inc
or
cli
lcall
outsb
test
andl
lret
data16
xor
pushf
xchg
addr16
cmp
repnz
or
push
jp
cmp
jnp
xorb
xlat
loopne
dec
and
adc
cltd
js
pop
or
lods
popf
ds
push
lock
daa
sub
sti
rolb
cmpsb
into
adc
loopne
jecxz
jmp
push
sub
xlat
mov
fst
lods
xchg
rclb
jb
dec
pop
fcmove
jg
add
lods
jg
in
jle
and
sahf
and
inc
cld
xchg
xchg
aas
lods
aaa
jp
adc
out
or
xchg
mov
mov
add
xchg
aas
mov
cmc
dec
mov
adc
lret
jbe
push
and
cmc
call
dec
push
add
mov
iret
mov
insb
scas
cmp
loopne
shll
popa
enter
xor
pop
mov
xor
int3
mov
adc
aam
jbe
pop
cmpb
fiadds
int
fistpl
cld
es
pop
aam
push
add
cli
rclb
adc
cmpsb
or
movsl
cmpsb
mov
pushf
dec
pop
bound
xbegin
jl
add
adc
pop
call
or
sarb
decl
xchg
inc
mov
movsb
jmp
cmp
popf
fwait
push
fildll
hlt
jno
cli
mov
push
imul
scas
mov
popf
sarl
lds
stos
adc
mov
sub
and
movsl
js
pop
mov
and
fimuls
fdivl
pop
sbb
lahf
test
sub
jle
in
push
jae
mov
jecxz
add
jb
mov
push
xor
adc
lea
adc
jne
push
testl
adc
movsb
inc
ret
hlt
stc
inc
mov
inc
or
dec
movsl
mov
mov
dec
sbb
add
pusha
loopne
enter
and
dec
jmp
sbb
testb
icebp
jmp
out
cmpsl
or
je
ficomps
inc
ret
and
mov
inc
pop
xchg
repz
jmp
mov
out
cli
jmp
addb
push
jbe
ljmp
ja
outsb
cmp
in
out
sarb
jnp
push
fmul
pop
sub
in
mov
pop
clc
cmc
jecxz
stos
mov
in
adc
sahf
sbb
xchg
jae
add
stos
stos
adc
xchg
mov
test
or
das
js
mov
movsb
pushf
bound
push
movl
fimuls
fbld
data16
sub
mov
scas
test
adc
addr16
je
ja
insl
lods
mov
push
popw
js
push
jno
fisubl
ss
adc
ds
jb
mov
mov
inc
mov
sub
addb
cmc
push
mov
fsubrl
sub
dec
ret
pop
jbe
scas
icebp
fisttpll
xchg
mov
xchg
cmpsb
mov
pop
ja
repz
push
jae
out
mov
rcl
mov
cmp
push
jle
js
dec
lds
stos
adc
scas
mov
jmpw
push
sbb
rcr
sub
test
sbb
jle
or
popf
cmp
jnp
pop
jge
sbb
jecxz
outsb
mov
inc
int
cli
push
mov
sub
mov
pop
imul
jno
or
clc
mov
call
jo
pop
inc
push
jnp
dec
sub
adc
pop
sbb
je
and
leave
xchg
bound
push
outsl
and
pop
lock
shl
mov
inc
cli
arpl
jne
sbb
xchg
gs
push
jae
ja
jp
fnstsw
pushf
ss
into
jo
mov
adc
out
insb
jge
outsb
mov
lock
negl
ljmp
jecxz
movsb
push
jge
fbld
mov
test
inc
stc
lock
adc
aas
xchg
pop
jno
inc
pop
xchg
loop
in
adc
iret
push
sbb
push
out
ret
sub
lret
outsl
xor
dec
and
push
push
inc
jne
lock
push
add
hlt
mov
vcvtsd2si
dec
inc
jmp
decl
dec
add
dec
mov
sbbl
lahf
sbb
test
add
jb
fisubl
sub
scas
test
jle
imul
pusha
ljmp
cmpsl
inc
es
dec
jecxz
shlb
jbe
adc
jno
ja
add
cld
mov
mov
aam
scas
adc
das
insb
decb
xchg
lahf
push
mov
pop
mov
add
ds
xchg
cmp
insb
xchg
cltd
dec
daa
dec
dec
xchg
stc
inc
iret
dec
adc
stos
insl
xchg
mov
cmp
int3
xor
and
insb
leave
mov
testb
addr16
xchg
mov
in
push
pushf
sbb
cmp
push
andl
out
inc
mov
add
and
or
sbb
lret
sti
aam
popf
sbb
ljmp
cmp
cmp
movsl
lock
std
mov
insb
push
stos
cmp
pusha
push
add
insl
pop
push
scas
popf
dec
in
sub
in
mov
push
cltd
stc
pop
leave
mov
ret
pop
mov
push
jns
push
push
test
movsl
lahf
repz
xor
pushf
js
movsb
sub
pop
daa
rclb
xchg
outsb
imul
les
stc
shl
sbb
xchg
pop
cmpsb
std
push
popa
sbb
xchg
cld
std
fiadds
sbb
jmp
addb
pop
inc
cmpsb
pusha
fs
jl
dec
aaa
sub
xchg
and
inc
cmpl
fxch
sub
cmpsb
imul
adc
insl
adc
push
out
dec
cmpsl
push
imul
push
test
or
add
push
push
sub
xor
cmp
jge
and
add
insb
stos
std
repnz
or
stc
sub
or
jl
loop
jmp
cmp
in
adc
or
push
dec
jns
xor
push
fdivr
out
mov
mov
hlt
dec
imul
cmp
pop
fidivs
aam
ljmp
test
dec
fiaddl
insb
ret
push
mov
pop
cwtl
mov
jle
repnz
or
adc
cld
push
or
mov
pop
adc
mov
outsl
push
and
cmp
xchg
adc
ss
movsb
cli
je
push
ret
hlt
hlt
jp
sbb
inc
inc
cmp
in
mov
mov
pop
fldcw
das
mov
negb
pushf
je
sbb
ja
ret
inc
pop
leave
arpl
jle
xchg
mov
aaa
bound
jae
fimuls
mov
mov
xor
inc
std
push
push
imul
pop
mov
ret
adc
jmp
fs
jns
popa
mov
xor
lret
sbb
faddl
inc
rorl
flds
loopne
cmp
add
icebp
aaa
mov
xchg
into
mov
scas
dec
hlt
sbb
aad
lea
sbb
push
mov
mov
sbb
lret
and
sub
push
mov
mov
jb
fisubl
mov
push
in
mov
mov
xchg
cltd
xorl
dec
pushf
icebp
subl
jbe
or
pop
arpl
push
xchg
jl
into
jns
lock
daa
call
mov
repz
xchg
mov
dec
xchg
dec
sahf
jg
or
fisubl
fisttpll
mov
cmc
out
ds
fidivl
addr16
cmp
and
pop
xchg
mov
mov
xchg
and
cmp
push
lcall
sub
cmpsl
cmpsb
test
lret
icebp
repz
sbb
add
je
cmpsb
adc
sbb
test
lock
or
xchg
shll
out
aam
lahf
pop
iret
std
mov
pop
mov
in
bswap
xchg
inc
shrl
enter
in
bound
cmp
in
into
push
inc
xlat
setp
or
arpl
push
dec
push
dec
pushf
pop
shll
mov
sub
mov
ds
add
ja
mov
jo
jnp
inc
test
xor
or
cmpsl
nop
dec
or
lds
daa
fbld
sub
cmpsb
out
push
dec
test
ds
sub
jb
fbstp
ffreep
int
dec
adc
add
ds
pop
movl
adc
aaa
adc
cmpsb
movsb
out
fdivr
fnstenv
push
xchg
lret
ljmp
and
dec
dec
rcll
add
dec
incl
jmp
js
and
mov
push
cli
fisubrs
fldcw
das
aam
mov
or
fisubrl
mov
xchg
sbb
fimuls
cmp
daa
dec
test
add
and
repnz
jbe
or
add
jae
mov
xchg
xchg
add
in
pop
orb
ficompl
push
inc
dec
outsl
test
popf
mov
fcmovu
jg
test
ss
addl
mov
cmp
jno
mov
shrb
push
and
fadds
add
test
mov
mull
or
stos
pop
cld
jecxz
lret
push
xchg
stos
fistps
mov
pop
fidivl
inc
mov
mov
xchg
lcall
pop
xchg
andb
in
enter
pop
ret
mov
fstl
aad
iret
dec
lock
out
mov
dec
cmpsb
mov
mov
lods
mov
xchg
std
lock
mov
ficoms
cld
cwtl
pop
cs
sub
sbb
jmp
cmp
and
xchg
arpl
hlt
das
mov
or
out
popf
push
das
scas
mov
ja
pop
sub
sub
lods
int
jnp
test
xchg
mov
add
dec
push
loop
pop
repz
pop
ja
fistps
sub
popf
repz
aas
inc
mov
clc
out
or
add
stos
fisttpll
mov
out
inc
nop
ret
jmp
sub
inc
popa
cwtl
gs
xor
and
add
pop
jb
cmp
mov
mov
pusha
in
pop
in
fstpt
xlat
aas
inc
adc
cmpsb
dec
mov
sub
pop
clc
mov
sti
jae
jae
pop
pop
jbe
out
sahf
aam
jbe
xchg
in
ss
dec
out
jl
or
dec
lret
push
sti
popf
cmp
test
pop
push
inc
stos
mov
jbe
dec
movsl
mov
and
mov
inc
inc
mov
mov
in
xor
je
jae
push
jns
icebp
inc
dec
imul
sbb
sub
sub
hlt
mov
inc
hlt
or
jp
into
negb
mov
push
subb
dec
jnp
mov
aas
sbb
scas
in
clc
mov
push
hlt
in
jg
nop
das
pushf
sub
push
test
nop
in
mov
xchg
mul
jecxz
pop
gs
ret
es
insl
cmpsl
out
jbe
int3
mov
xchg
inc
js
dec
push
inc
add
test
xor
shlb
xchg
cld
mov
sbb
cmp
hlt
leave
das
jb
stc
cmp
xor
insb
jb
xchg
mov
repnz
je
scas
adc
mov
mov
ja
insb
inc
rcll
outsb
sub
inc
mov
lret
rcrl
xor
push
jo
sbb
das
xchg
inc
fdiv
iret
mov
test
xchg
mov
pop
xor
sbb
or
jl
fldcw
mov
cmp
dec
push
cwtl
cmpsb
inc
inc
ja
fdivrs
js
push
inc
or
push
in
pop
xchg
push
jecxz
out
add
shll
cmp
sub
sbb
stc
enter
xor
mov
incb
jp
jle
mov
pop
pop
xlat
or
pop
inc
xchg
roll
xchg
imul
xchg
in
rorl
inc
shll
add
int
lods
aad
xor
jmp
ret
jecxz
repnz
aas
mov
dec
pop
sub
mov
pop
xor
mov
dec
jae
mov
lret
andb
test
add
pop
sar
out
popa
aaa
xchg
or
nop
inc
loop
jb
jecxz
add
cmc
stos
cmpsb
daa
sahf
pop
push
js
mov
shrl
sub
xchg
mov
jbe
sbb
xchg
mov
mov
gs
xor
and
hlt
cmpsl
and
cmp
ds
fidivrl
mov
pusha
lock
movsl
jne
xor
add
add
out
sbb
push
mov
andl
xchg
rolb
inc
inc
pushl
outsb
outsb
movsb
mov
fistl
mul
out
jmp
clc
outsl
jae
nop
dec
je
mov
lret
int
jge
pop
xchg
lock
orl
jo
mov
adc
or
test
pop
mov
mov
cmpb
or
jne
mov
aas
fld
aaa
push
lret
icebp
or
push
loopne
cld
jmp
pop
lea
adc
nop
or
and
ss
dec
sbb
je
arpl
test
loop
sbbl
jb
faddl
add
into
rcr
aaa
in
lea
sbb
out
pop
test
out
movsb
pop
imul
xor
jge
stos
xchg
int3
cmp
cmp
ret
inc
sub
push
xor
outsl
xor
sbb
lret
jl
xlat
inc
cmpsl
pusha
cmp
mov
push
mov
cmpsb
incb
xchg
std
aaa
addb
hlt
adc
int
mul
pop
out
testl
imul
notl
xor
sbb
outsb
xor
mov
dec
push
popf
movsb
xor
fistpll
lcall
sub
test
mov
pop
mov
loope
flds
movsb
dec
aas
or
outsb
scas
sbb
jp
dec
mov
insb
jno
xchg
hlt
cld
cmp
jge
stos
enter
mov
sub
iret
push
es
pop
test
mov
fs
enter
sbb
mov
insb
or
cmp
daa
push
stc
ljmp
push
aas
icebp
out
jbe
filds
outsl
ror
arpl
leave
outsl
or
sbb
out
sbb
jnp
inc
je
sti
ja
inc
and
inc
cmc
mov
inc
out
stc
add
cmpsb
xor
fildll
stos
xchg
xor
dec
adc
subl
adc
push
dec
test
mov
mov
arpl
dec
pusha
push
jne
push
lods
bound
mov
lcall
push
fisttpl
icebp
mov
mov
add
inc
sbb
jecxz
pop
pop
push
pop
ret
inc
cmpsl
out
int
lahf
pushf
pushf
mov
dec
pushf
imull
jbe
or
stos
cmp
rorl
aam
ss
pop
shrl
fsts
adc
pop
sbb
mov
test
mov
inc
sub
adc
je
lret
ret
out
aam
cmp
mov
ss
adc
fistl
push
aas
cmp
ret
pop
jne
inc
jg
movsl
lods
mov
push
hlt
mov
add
fwait
jno
sub
jl
pop
mov
jae
ss
pop
jae
push
xor
flds
aad
adc
jns
test
mov
popf
xchg
in
lods
cwtl
dec
and
mov
sbb
sarb
inc
daa
adc
push
outsl
pop
mov
cs
addr16
pushf
xchg
sub
jbe
ljmp
xorl
scas
gs
lds
push
mov
rolb
aam
wrmsr
dec
imul
ret
jns
mov
or
mov
push
fwait
xchg
adc
loop
cmpl
sbb
jecxz
xchg
scas
fnsave
mov
dec
xchg
cmp
push
stos
rcrl
stc
pop
sbb
mov
cmpsl
daa
and
sub
mov
cmpsb
mov
outsl
aam
fistpll
lods
cli
adc
nop
cmc
xchg
pusha
mov
mov
xchg
cltd
fsubrl
adc
mov
loop
jmp
enter
sub
mov
xor
or
bound
sarb
imul
pushf
add
mov
push
mov
add
mov
xor
mov
lea
jae
mov
dec
push
inc
inc
sbb
sti
cmp
mov
xor
jle
fucomp
add
shlb
xor
lcall
pop
cmp
jbe
add
cmp
out
xchg
insb
pop
pop
push
sbb
pop
sar
mov
pop
pushf
jne
add
loop
sahf
cmc
jecxz
rolb
inc
loope
and
pop
stos
xchg
mov
cmc
cli
jle
dec
fwait
pop
inc
les
sbb
push
int
mov
test
jle
dec
int
imul
and
pop
jle
add
lock
insl
lcall
scas
and
stc
int
pusha
bound
jge
adc
lock
xchg
mov
dec
push
xchg
inc
jno
and
sbb
jmp
sub
out
cwtl
add
cmpsb
jae
sbb
sub
rclb
cmp
daa
xchg
xor
pop
or
icebp
ds
out
cwtl
hlt
pop
pop
dec
sbb
sbb
stos
push
fisubrs
jnp,pt
add
xchg
pop
adc
loopne
and
scas
out
lahf
sbb
add
mov
sub
jae
sub
sub
outsl
lods
gs
insb
jge
or
jmp
fnsave
stc
cwtl
pop
xor
rorl
pop
cltd
jp
sub
mov
lock
gs
mov
sbb
aaa
pop
dec
push
leave
popf
jg
inc
mov
mov
fistl
jmp
out
out
pop
repz
mov
push
inc
stos
pop
dec
xlat
je
loope
fdivr
divl
ficoms
nop
data16
ja
xchg
lcall
fisttpl
push
add
pop
cmpsl
add
mov
xor
mov
insl
aas
out
dec
push
stos
dec
inc
dec
loop
push
movsb
push
adc
int
test
shlb
push
loope,pn
pusha
jb
inc
sbbb
push
cmc
cmpsl
xor
std
or
add
ret
xorl
mov
pop
ljmp
cmp
sbbl
mov
cmp
je
sub
and
popa
test
lea
push
mov
leave
in
pop
or
arpl
in
scas
fdiv
pand
mov
insl
dec
add
fdivrl
xchg
addl
jae
cmp
movsl
or
adc
jecxz
cmp
lock
and
bound
push
add
pop
push
lret
test
arpl
and
dec
pop
xchg
sub
mov
mov
sub
sbb
insl
sbb
fsubr
fs
jmp
cmpsb
cmpb
incl
mov
cmp
movsl
int
xchg
pop
dec
loop
scas
lds
insb
push
pop
fsubl
in
xlat
out
inc
bound
icebp
clc
add
insl
push
dec
nop
fistpll
mov
xor
je
mov
pop
mov
js
push
bound
inc
xor
aaa
jle
jmp
cli
daa
shl
jle
outsl
push
jp
mov
lret
mov
push
push
jmp
cld
fsubr
jg
push
or
imul
sub
je
mov
pop
test
rcrb
pop
xor
cmpsb
push
dec
aam
sub
int
pop
inc
or
repnz
fmul
or
adc
sarl
cltd
sub
push
push
lret
pop
mov
enter
mov
test
es
sbb
xchg
add
pushf
push
fcoml
test
outsb
push
ret
test
mov
mov
inc
xor
inc
cmpl
mov
mov
ja
and
ljmp
and
lods
xchg
lea
mov
outsb
inc
test
repz
add
push
js
jbe
cmpl
aam
or
ror
loope
sti
jne
in
xor
scas
push
imul
lods
pop
fwait
adc
push
jge
sbb
adc
push
xor
lods
into
shll
add
shrl
sbb
ja
push
lret
dec
adc
sub
pop
arpl
loopne
call
fistpl
icebp
inc
test
in
mov
push
xchg
xchg
sbb
shl
xor
dec
retw
shlb
jbe
xchg
in
push
insb
jnp
loope
xchg
std
ret
push
mov
mov
push
xchg
mov
mov
loopne
pop
or
imull
fldcw
stos
adc
mov
fildl
dec
mov
add
test
jbe
push
mov
sbb
or
aad
pop
jp
pop
xor
mov
pop
mov
sub
stc
sahf
cltd
cltd
sbb
pop
pop
dec
and
aaa
insl
addr16
inc
add
js
and
ret
xchg
cwtl
xor
popl
pop
inc
xchg
jmp
dec
rcll
add
adc
outsl
shll
and
clc
loopne
bound
mov
mov
stos
mov
add
scas
pop
int3
out
or
iret
add
cmp
sub
jns
scas
sub
pop
iret
pop
xor
fsubrl
rclb
jle
ss
dec
push
inc
cmp
add
pop
nop
pop
jmp
fsubr
ret
fimuls
int3
sub
cli
sbb
dec
xor
cmpsl
mov
insl
movsb
pop
mov
sbb
jg
not
lds
mov
mov
imul
jmp
mov
in
addb
jns
sub
mov
push
xor
mov
notl
enter
hlt
xor
push
pop
push
mov
mov
notb
pusha
xor
inc
leave
xor
dec
xor
jge
dec
sbb
loopne
rorb
or
dec
sar
xchg
sub
sub
pop
and
push
sahf
sarb
inc
xchg
addr16
pushf
adc
loope
out
lahf
jno
xor
cmpsb
fidivl
inc
inc
sub
cmp
jle
push
dec
lds
sbb
or
cmpsl
fwait
repnz
and
push
push
pushf
add
jne
push
ljmp
addb
inc
pop
add
inc
cmp
cmp
jo
jb
test
shl
cmp
dec
xlat
jecxz
push
ljmp
lock
jns
data16
sahf
dec
lods
mov
fs
cmp
add
sub
mov
ror
cmp
mov
or
loopne
aam
xor
mov
push
ret
scas
into
and
adc
mov
repnz
out
imul
stos
gs
aaa
xchg
jecxz
adc
mov
imul
data16
hlt
pop
mov
xchg
cmp
xor
and
push
adc
je
lcall
xchg
push
flds
leave
jb
push
or
pop
mov
testb
mov
out
fninit
das
mov
xchg
and
das
cs
inc
mov
pop
movsb
xor
js
ss
shrb
rcl
nop
pop
jle
sub
push
lods
repnz
fstp
add
lahf
or
test
jl
negb
jmp
paddw
pop
mov
jne
call
les
out
cmp
push
fwait
bound
xor
dec
scas
fnstcw
jno
cmp
push
or
xchg
push
sbb
jecxz
adc
dec
jne
popa
je
outsl
add
xchg
xchg
or
push
divl
imul
in
mov
add
mov
test
cmp
sarl
mov
mull
sub
inc
sbb
mov
loop
jno
cmpsl
jne
ja
in
inc
push
outsb
adc
dec
mov
or
jmp
cmp
fldl
and
push
shr
adc
push
mov
cmp
in
je
cmp
or
out
xor
pusha
xor
leave
ds
or
aam
rcll
fsubl
and
adcl
pop
sbb
lret
mov
cli
jo
push
and
add
cs
add
pop
lcall
xor
push
pop
mov
mov
int
inc
mov
sahf
add
or
sti
repz
xor
xchg
xor
jnp
lret
mov
push
pop
test
cltd
mov
mov
enter
mov
call
xlat
jecxz
in
fimull
mov
in
mov
pop
insb
lds
sti
ss
push
shll
shrl
cli
imul
fisubl
sub
sub
pop
clc
pop
fisubl
and
jae
cmp
inc
pop
xlat
add
fildl
pop
cmp
sbb
or
inc
cmpsb
push
and
hlt
cld
push
pop
sbb
mov
rclb
xchg
rcll
fs
out
push
int3
test
push
push
das
mov
out
sub
pop
lret
cmp
add
push
ss
dec
fsubrs
and
cmp
inc
add
addr16
loopne
inc
ret
pop
push
cmp
cmp
adc
mov
cmpsl
mov
jne
push
scas
ljmp
testl
push
sbb
mov
ds
daa
pop
loopne
std
inc
mov
cld
outsb
jecxz
sbb
xor
mov
jb
jmp
shl
dec
icebp
sbb
scas
or
daa
rorb
jge
sub
bound
push
or
jle
aaa
push
pop
pop
sbb
into
inc
dec
popf
sub
add
daa
cmpsb
push
lods
xchg
outsl
cmc
rcl
sahf
stos
adc
movsb
cltd
add
fdivp
or
testb
addb
push
jmp
push
out
rolb
loopne
cmp
mov
ja
packssdw
loopne
popa
daa
mov
outsl
mov
insb
sub
jmp
stc
iret
jae
movb
int
push
in
mov
aas
push
inc
rclb
testl
and
movsb
loopne
loop
add
dec
mov
adc
xchg
cmp
xchg
mov
mov
pop
dec
lods
cmpsl
inc
out
out
int
xchg
in
ja
cmpsl
test
cmp
cs
jle
mov
sbb
and
xor
nop
mov
cltd
stos
mov
sahf
sahf
jp
fisubl
sti
adc
pop
sbb
in
pop
xor
dec
mov
ret
std
aaa
lods
or
fisubrl
pop
jp
sbbb
es
cmp
cmp
inc
add
loop
aad
loopne
arpl
rcrl
shl
jne
aaa
loopne
mov
mov
imul
sub
scas
adc
sbb
std
pushf
adc
arpl
mov
sti
push
cmp
stos
cmp
aaa
mov
pop
fwait
jle
test
xor
push
jmp
imul
in
leave
xor
aam
dec
adc
jnp
lcall
mov
inc
xor
and
test
stc
jno
jo
cmp
jecxz
lods
inc
pop
roll
dec
push
add
sti
push
ret
fisubl
gs
inc
push
shrl
pop
xchg
and
loope
shll
jp
add
jne
scas
cld
mov
xchg
cmpl
push
and
and
mov
or
dec
adc
cmp
enter
adc
push
in
int
jnp
adc
jo
mov
fstl
out
dec
ds
and
mov
test
test
jbe
dec
push
add
sub
push
or
push
add
jmp
sub
into
jp
call
cs
lcall
popf
xor
into
dec
mov
add
nop
out
sub
cli
cmpsl
push
divl
pop
gs
xchg
mov
outsb
insl
cmpsl
sbb
pop
dec
sub
inc
clc
rolb
xchg
add
and
loopne
std
outsb
push
loope
or
sub
sub
out
inc
pop
hlt
inc
fs
jbe
jns
dec
loopne
fnstsw
iret
inc
leave
je
push
sub
in
scas
ficoml
or
inc
fadds
adc
inc
adcb
pop
mov
adc
inc
dec
jb
fsubrl
adc
pop
aam
cwtl
jg
lds
lds
mov
mov
mov
jo
push
scas
inc
pop
dec
push
dec
pop
imul
stos
test
ljmp
mov
sbbl
cmpsb
push
sbb
cmp
outsb
lret
in
fwait
aas
add
aam
pop
pop
roll
push
repz
sub
pop
cli
shl
sub
pushf
mov
or
sub
mov
out
shrb
or
pop
aam
in
fwait
xor
stos
clc
aad
into
xor
or
and
or
movsl
out
or
sub
leave
popw
repz
push
ret
fisubrl
jbe
sbb
or
loope
fdivl
xchg
dec
pop
and
std
loopne
xor
ret
mov
dec
mov
and
sub
xchg
pop
push
mov
add
lret
push
in
mov
and
aam
data16
cmp
inc
and
call
lds
mov
insl
mov
cli
dec
mov
inc
push
push
adc
mov
outsl
loopne
enter
or
into
push
sub
andl
pop
cmpsb
push
clc
and
cmpsb
push
dec
xchg
test
test
into
and
cmpsl
adc
gs
popf
das
inc
movsl
mov
sbb
out
cmp
sub
iret
shl
cmp
inc
scas
nop
sarb
shl
mov
in
pop
sub
sbb
sbb
in
inc
fdivr
xchg
mov
xchg
adc
lcall
fisttpl
and
or
mov
imul
aaa
test
mov
inc
jnp
adc
ret
ljmp
pop
cmpsl
sbb
xor
outsb
gs
add
xor
sbb
fs
dec
xor
dec
cltd
addr16
lea
adc
inc
out
dec
shlb
rcr
divb
aaa
je
data16
loop
mov
andb
jmp
xchg
jns
test
push
and
adc
adc
hlt
ja
stos
mov
add
xor
lcall
mov
mov
aam
mov
xchg
add
sti
ret
sti
jle
rcl
gs
in
shlb
clc
jecxz
xor
pop
daa
mov
pop
pop
outsl
dec
paddq
out
iret
cmp
pop
adc
jbe
in
insb
fisubrl
loope
lahf
xchg
pop
inc
stc
xor
push
jmp
scas
xchg
incb
xorb
stc
jns
into
mov
cmp
dec
adc
rcl
fmull
sti
into
out
cmp
dec
movsb
mov
subb
rorl
mov
sub
cmpsb
shrl
add
jno
mov
pop
rorb
lret
jmp
push
daa
int
adc
jmp
push
roll
int
mov
lock
std
inc
lret
call
add
sarl
mov
aas
lret
ficoms
push
sti
mov
sub
test
pop
dec
sbb
pop
fldl
lock
fs
fisttps
movb
in
jbe
fiadds
sub
pop
in
mov
pop
mov
leave
jecxz
xchg
ss
sti
loopne
repz
dec
sbb
mov
mov
in
push
fucomp
sub
sub
divl
sbb
rcll
push
push
std
arpl
push
out
sub
and
inc
jo
mov
inc
pop
dec
pop
test
jp
jle
gs
notl
inc
and
jo
jge
cmp
je
scas
test
scas
repnz
or
loop
push
xor
enter
adc
lea
or
mov
pop
dec
cmp
scas
out
movsl
adc
lods
bound
aam
frstor
pusha
mov
test
jae
insl
mov
pop
push
test
sbb
mov
int
stc
cmp
aam
mov
imul
jno
sub
loop
popf
mov
add
or
arpl
addr16
sub
into
in
aam
mov
push
testb
and
in
sbb
push
inc
xchg
sbb
sbb
sub
or
in
sarl
push
sbb
inc
bnd
in
mov
jb
inc
and
adc
inc
mov
inc
subl
lea
cmp
outsl
dec
mov
bound
or
mov
mov
outsb
or
jg
sbb
in
test
out
xchg
mov
mov
mov
icebp
arpl
stos
stc
notb
jb
aam
loopne
dec
es
addr16
jl
inc
jle
mov
mov
xor
mov
lahf
mov
es
imul
jb
xchg
adc
adc
ja
jb
mov
pop
jne
sbbb
pop
cmp
xchg
sahf
pop
cs
iret
jg
cmpsl
dec
les
mov
or
dec
loop
lock
out
iret
les
sub
add
xchg
cmp
inc
cmpsb
sti
ret
loope
cmp
xchg
jbe
xchg
jge
cmc
rcrb
aad
pop
icebp
mov
bndstx
cmpsl
jnp
add
fistps
ss
les
push
leave
jle
clc
lods
pop
add
setb
pop
outsl
ljmp
sub
flds
fsubs
out
push
out
push
sub
lret
add
mov
int3
cmpsb
loope
dec
arpl
push
pushf
xor
test
imul
or
sbb
mov
stos
jmp
insb
mov
in
repz
popf
test
js
dec
and
adc
cmp
pop
sub
nop
jl
inc
addl
iret
imulb
out
mov
jmp
ret
loope
popf
sti
je
bound
mov
mov
sbb
mov
inc
jnp
mov
nop
out
orl
sub
push
or
aad
dec
pop
cmp
add
jmp
aad
pop
mov
cs
mov
mov
ret
inc
jmp
push
dec
pushf
pop
orl
inc
movsl
dec
mov
push
das
mov
inc
cld
mov
xchg
add
ret
cmc
sub
out
jmp
push
adc
or
mov
jmp
mov
fstl
adc
les
push
adc
leave
jp
sub
and
int
mov
jno
or
push
pusha
push
mov
stc
jns
mov
cmpsl
mov
sub
lret
inc
sub
sub
cmp
sbb
cltd
daa
push
aas
in
or
xchg
loope
adc
sub
lods
cmpsl
cltd
xlat
xchg
jbe
call
data16
out
adc
xchg
push
xchg
roll
pusha
add
xchg
mov
or
repz
int3
scas
sbb
ss
addr16
pop
sarb
popf
and
sbb
movsb
and
adc
flds
mov
imul
sbb
mov
loopne
ds
adc
inc
sub
ficompl
xor
es
test
pop
jae
out
idivl
mov
inc
adc
jge
mov
or
xchg
mov
arpl
mov
adc
out
dec
mov
jp
inc
or
ret
sub
mov
ret
inc
adc
push
rcrl
cmpsl
dec
cmp
data16
cmp
daa
in
mov
loope
xor
sbb
mov
inc
xchg
jmp
push
or
and
pop
dec
scas
mov
pushl
mov
pop
aaa
mov
jmp
in
jns
sub
xchg
lahf
add
xchg
jl
mov
jb
rol
js
mov
sbb
push
jle
sbb
fdecstp
inc
test
repnz
inc
scas
clc
in
leave
in
inc
ds
repz
lret
inc
cmc
bound
mov
mov
push
adc
push
gs
jge
xor
xchg
jnp
stos
enter
and
or
cmp
adc
fdivs
daa
mov
gs
cmc
add
cmp
std
pop
hlt
std
mov
leave
je
mov
push
jbe
out
cmpsb
rorb
rcll
xchg
pop
add
jb
ret
jle
lds
das
cmpsl
sub
call
jae
sub
xchg
bound
push
icebp
adc
fdivl
jge
cltd
fisubs
aam
bound
movsl
outsb
push
hlt
adc
xchg
popa
push
popa
jge
imul
js
push
inc
mov
mov
adc
mov
mov
and
mov
mov
cwtl
xchg
pop
lds
or
dec
jno
sbb
cmp
shrl
or
mov
cli
movb
adc
and
xchg
mov
sbbl
es
lcall
lods
clc
stos
sub
cld
inc
mov
mov
inc
sub
lea
scas
jg
mov
dec
pop
lods
inc
push
stos
lcall
sbb
xchg
push
shrb
icebp
cld
dec
sbb
xchg
and
mov
mov
or
inc
adc
dec
xchg
aad
daa
mov
lcall
rcr
sbb
stos
xchg
dec
pop
call
push
jb
jo
subl
sti
push
pop
addr16
push
enter
inc
shrb
test
cmpsb
js
xor
arpl
push
rorb
mov
sbbl
mov
data16
movsl
inc
les
sub
pop
nop
movsb
ret
cmc
adc
mov
cmp
hlt
aas
mov
sbb
scas
xchg
push
dec
js
lea
stos
sti
call
and
mov
xor
hlt
lret
jbe
daa
xor
orl
sbb
fwait
xchg
cmp
int3
shrl
in
out
sti
aas
push
mul
lret
or
adc
leave
aaa
xorl
jnp
add
push
stos
test
dec
pop
or
sti
dec
push
sahf
dec
pop
cmc
jnp
repz
sbb
xchg
aaa
or
or
outsl
mov
cmp
sbb
inc
sbb
cmp
js
dec
and
jg
cmp
mov
cwtl
cmp
out
dec
and
sub
mov
xor
pop
lods
cmpsl
xor
scas
scas
pop
cmc
mov
jl
mov
xchg
xchg
mov
je
adcl
mov
or
push
mov
or
into
imul
and
sub
ret
ret
xor
or
mov
mov
mov
jmp
or
mov
and
data16
add
into
add
mov
roll
mov
js
mov
lahf
cmp
inc
sub
pop
xchg
inc
lret
pop
fistps
or
data16
inc
mov
popf
lahf
push
cs
nop
lea
mov
inc
outsb
test
or
stos
rol
test
add
sbbb
adc
repnz
stos
lret
push
inc
in
aad
les
mov
js
lret
pop
sbb
pop
mov
jb
mov
ljmp
scas
mov
cld
mov
pop
push
sbb
ror
xor
cmp
mov
stos
push
mov
jecxz
shll
out
pusha
sbb
pop
jne
sub
cs
out
repnz
and
in
sbb
fwait
ret
mov
repnz
sub
ljmp
in
test
pop
cmpsb
and
loop
insb
popa
aaa
cmpsb
pop
stos
insb
cvtdq2ps
lock
xchg
pushf
cmc
hlt
fnstcw
mov
addb
add
lods
add
aaa
xor
shr
push
fmull
and
pop
dec
dec
push
in
add
and
push
lahf
insb
mov
loope
fsubr
xchg
inc
cmp
inc
fcomps
ja
jnp
xor
sbb
xchg
pop
mov
mov
jg
hlt
cmp
nop
or
inc
and
je
fs
fistps
in
sub
mov
fcomp
pop
xor
xor
hlt
fiaddl
push
xor
mov
scas
arpl
xor
inc
test
cld
mov
dec
cltd
call
test
mov
inc
jbe
shll
xlat
sbb
adc
dec
enter
xor
pop
mov
mov
pop
mov
mov
sub
jl
aas
cltd
jmp
in
call
adc
fisubrl
outsb
add
fwait
mov
push
outsb
js
cmp
mov
xchg
adc
movsb
jg
rcll
pop
jbe
js
adc
adc
sbb
pop
orl
gs
cld
push
shrb
mov
mov
test
mov
push
nop
cli
xchg
inc
imul
dec
ds
fdivrl
aas
and
ss
push
cmp
bound
mov
stos
pop
mov
sub
ret
jae
ds
pop
push
shlb
js
mov
sbb
sar
mov
or
mov
jle
and
push
cmpsb
add
out
lahf
xchg
sbb
adc
xchg
mov
pushf
sub
ja
jle
shrl
push
dec
sub
stos
push
push
dec
adc
lret
mov
mov
cmp
std
enter
pop
pusha
fwait
xchg
loop
inc
or
test
divb
mov
cmc
mov
aam
repnz
xlat
int3
jbe
cs
fucomi
add
cmp
add
int
outsl
dec
push
and
and
mov
cwtl
negl
pop
or
in
and
call
mov
cld
dec
pop
fwait
sub
mov
fisubrs
pop
or
imul
into
pop
roll
in
jnp
jbe
cmp
mov
fs
ffree
jge
arpl
or
add
push
bound
pop
sbb
sbb
push
fcoms
pop
lock
pusha
lods
clc
and
inc
push
push
push
sarl
cltd
mov
jmp
pop
iret
lahf
dec
push
mov
cmp
cld
and
or
mov
sti
jo
mov
les
mov
pusha
mov
in
outsl
roll
inc
dec
dec
lods
dec
ljmp
aaa
xor
out
and
rcr
popa
incl
aad
dec
cwtl
add
cmpsl
jecxz
lods
data16
push
mov
mov
pop
or
fiadds
mov
mov
push
jmp
into
pop
incb
jae
or
xchg
dec
sub
push
ljmp
push
rcrb
lea
mov
in
jle
sbb
mov
daa
flds
pop
cwtl
mov
and
orl
dec
cmc
inc
rol
or
and
mov
lds
mov
inc
push
and
shl
fisubl
dec
cs
leave
shrl
enter
insb
lahf
fmuls
sbb
mov
push
mov
bound
std
xor
cmpsl
xor
pusha
inc
xchg
push
pushf
push
and
xchg
ret
jae
pusha
ja
fdivs
rcrl
push
xor
adc
cmp
jl
shll
loopne
dec
scas
int
jo
xchg
shl
les
lret
pop
scas
int3
rorb
lret
and
xorl
add
stos
mov
cmp
dec
dec
ds
stos
aaa
jp
lcall
in
mov
sbb
xor
dec
cld
adc
mov
dec
inc
ljmp
into
insb
mov
sub
in
mov
movsb
xor
je
inc
push
fstps
xlat
sub
inc
or
push
mov
nop
cmp
mov
bound
jg
push
or
lret
jns
iret
fidivrl
call
sub
jge
fs
in
addb
push
jne
rorl
xchg
dec
sub
mov
repnz
mov
mov
pop
mov
push
cltd
mov
ret
cmp
dec
dec
push
push
out
popf
cmp
dec
fsubl
cld
dec
pop
movsl
lcall
mov
and
ficompl
sub
mov
insb
insl
mov
sahf
jmp
in
popa
sub
scas
enter
mov
push
xchg
inc
outsb
leave
and
add
add
jecxz
out
xchg
repz
inc
push
ret
fadds
fsubrs
and
lods
cld
dec
push
outsl
mov
or
sub
sbb
daa
mov
cwtl
mov
sahf
and
in
fidivrl
jmp
sbb
push
adcb
add
mov
scas
xchg
out
int
dec
sub
jno
jnp
xchg
jns
test
fisttpl
hlt
icebp
data16
and
iret
and
sub
cmp
mov
mov
decb
inc
stos
and
add
popf
gs
xchg
outsl
pop
xchg
sub
in
inc
scas
shrb
push
pop
adc
cmp
rclb
push
xchg
jle
dec
xor
sub
mov
movsb
or
loop
dec
mov
cmp
dec
add
adc
daa
mov
ja
rcr
loopne
jge
imul
insl
push
sub
in
stc
mov
cmp
rol
mov
xor
sti
jo
enter
mov
mov
nop
je,pn
repnz
int3
hlt
xchg
ljmp
jg
rorl
dec
daa
mov
inc
fwait
dec
andl
sbbl
cmp
xchg
lods
cmp
cltd
ja
hlt
and
fcomps
into
loopne
sbb
lret
push
pop
lock
dec
and
mull
mov
inc
push
pop
sub
inc
test
outsl
mov
or
pop
inc
andl
into
push
call
adc
pop
std
cld
pop
aad
cmc
inc
jg
mov
outsb
pop
pop
dec
loope
inc
xor
xor
mov
scas
jne
ret
add
lret
pop
jmp
hlt
lret
cmpsb
stos
or
insb
xchg
test
push
clc
push
dec
and
adc
mov
sub
shufps
fucomp
movsl
test
or
std
jge
frstor
div
pop
jbe
xchg
cld
lock
rorl
cmpsb
lock
enter
add
and
aaa
jnp
stos
call
cmp
mov
ret
mov
push
mov
insl
lret
dec
xchg
xchg
sbb
out
test
addl
xor
test
inc
inc
sbb
insb
pop
jns
add
cltd
testl
sub
mov
pop
decl
cmp
mov
push
or
in
fidivrs
dec
mov
mov
adc
aaa
fbld
add
xor
jg
ret
jno
movsb
sbb
xchg
dec
cmp
jae
inc
xchg
jmp
push
or
rcll
jle
mov
xorl
and
and
adc
cmpb
and
outsb
vfrczps
std
jl
insl
lret
pop
adc
adc
shrl
rcr
scas
fidivs
sbb
pop
sub
xchg
push
repz
data16
mov
sub
mov
inc
iret
xor
scas
jmp
pop
das
clc
cltd
loopne,pt
sti
push
jmp
enter
mov
mov
enter
jae
addr16
lret
aas
shll
cld
and
fdivs
adc
sub
lods
iret
jecxz
mov
sarl
sbb
sub
dec
and
ja
mov
inc
fsubrl
mov
mov
sub
loop
shll
into
pop
sbb
data16
jg
sub
mov
sar
iret
or
adc
xor
add
test
push
bound
lds
lcall
inc
imul
xor
dec
jp
fcmovnbe
inc
sbb
sbb
ljmp
insl
clc
push
add
mov
rclb
mov
subl
inc
decb
adc
stc
xchg
xchg
shrb
and
lret
jbe
dec
sbb
fnstcw
addb
xlat
enter
mov
pop
je
add
lcall
roll
mov
jo
scas
xlat
dec
mov
aas
scas
ljmp
std
cmp
scas
outsb
or
cld
mov
sahf
fisttps
ret
jle
mov
xchg
sub
ss
push
push
aam
jne
sub
xor
xchg
adc
ret
or
or
nop
inc
xchg
dec
or
movsl
inc
mov
mov
xor
or
lock
push
mov
mov
outsb
cld
mov
and
insb
dec
jo
lods
dec
jns
dec
inc
inc
cmpsb
out
inc
mov
xor
popf
mov
sub
inc
push
int3
repz
cmp
lcall
xchg
and
out
cltd
inc
jmp
hlt
ror
mov
dec
fnstenv
hlt
addr16
les
mov
mov
mov
mov
sbb
stc
mov
int3
js
outsb
int3
mov
int
inc
xlat
push
push
in
lock
nop
mov
xor
mov
inc
push
pop
fdivrs
lret
or
hlt
pop
mov
cmc
pusha
sub
in
dec
dec
int
dec
and
jbe
movsl
pop
movsl
pop
fdivrs
xchg
push
xchg
mov
popf
sbb
inc
cltd
jo
ja
pop
out
add
std
mov
mov
ret
sbb
lods
adcl
movsb
push
and
pushw
fdivrl
add
ret
mov
lret
xor
cmp
and
add
lcall
dec
xlat
dec
cmpsb
mov
into
fcoms
call
or
das
leave
mov
subl
push
mov
sarb
push
test
mov
or
cmp
push
cmpsl
pushf
sub
cmp
in
jne
dec
call
pop
pusha
ds
call
xchg
mov
fdivs
lret
mov
dec
test
imul
shll
add
mov
adc
sbb
mov
mov
insb
push
xlat
sub
shl
sti
push
into
loope
adc
pop
scas
pop
cmp
jbe
jg
in
xor
add
lods
mov
cs
adc
adc
ret
adc
or
pop
iret
lret
clc
inc
cmp
sub
mov
das
lcall
stc
push
mov
bnd
call
cmp
add
int3
in
mov
dec
push
call
movsb
mov
mov
jbe
aas
add
lock
dec
imul
aad
add
out
sub
pop
fsubs
push
andb
lahf
incl
cs
fwait
sub
adc
lods
sub
repz
hlt
inc
out
mov
pop
jns
lock
je
xchg
aaa
repz
repz
dec
push
jbe
mov
lea
test
lret
jl
int
push
inc
pop
leave
inc
roll
ss
test
inc
dec
sbb
pop
mov
mov
mov
xchg
or
out
and
push
stos
xchg
jg
out
cmpsb
mov
mov
pop
test
dec
xchg
and
sub
add
sbb
adc
sbb
mov
ret
out
sbb
jmp
adc
les
mov
xchg
ret
mov
mov
cmp
xor
inc
test
mov
sahf
jecxz
sub
in
fadds
mov
iret
jg
cld
add
sub
out
push
push
xchg
shrl
arpl
into
mov
pop
arpl
add
cmp
mov
jmp
inc
lret
push
fiadds
out
ds
das
and
inc
sarb
fldt
adc
lock
push
sub
daa
insb
push
test
je
cmp
fistl
aaa
inc
imul
call
das
loopne
adc
aaa
sahf
adc
xchg
add
add
cltd
out
pop
fiadds
mov
roll
jb
xlat
mov
xor
jge
inc
outsl
cld
pop
imul
aas
testl
movsl
fidivrl
jno
outsl
test
bound
sbb
sub
push
stos
push
xchg
sbb
jns
cmp
mov
iret
or
fiadds
lods
xchg
xchg
mov
hlt
aad
jl
xor
pop
sub
int3
hlt
and
dec
repz
sbb
push
mov
adc
nop
adc
test
mov
ljmp
cmp
scas
xchg
icebp
cmp
mov
add
mov
fsubl
pop
ret
leave
mov
pop
cmp
lret
xor
dec
aam
movsl
bound
inc
cli
add
or
leave
in
dec
ja
pusha
test
leave
cmpsl
dec
sbb
xchg
push
les
movsb
jo
jle
push
popf
popa
popa
adc
jae
push
mov
das
or
jno
arpl
pop
inc
mov
inc
movsl
das
lock
push
sub
cmpl
cli
jnp
cmpsb
arpl
mov
xor
mov
pop
add
adc
push
lds
call
fcmovb
dec
cltd
in
dec
into
dec
orb
loop
lcall
imul
mov
xor
and
dec
push
ds
mov
aaa
lret
lods
push
test
sbb
cmp
dec
pop
cmp
je
sbb
mov
bound
push
out
mov
jle
xlat
pushf
jae
dec
mov
push
pop
clc
out
sbb
in
or
icebp
fisubrl
repnz
inc
pop
mov
cwtl
adc
popa
jo
sarb
push
mov
hlt
sub
cmp
shl
out
dec
xchg
and
loopne
lods
push
pop
and
mov
out
mov
xchg
or
jecxz
pop
xchg
movmskps
popf
and
sub
push
push
or
imul
jne
outsl
mov
fcoms
mov
imul
dec
dec
in
lock
jns
pop
or
imul
push
or
cld
mov
mov
stos
mov
jns
pushf
ds
test
jne
adc
movsl
mov
and
or
mov
push
aam
nop
xor
or
jle
mov
dec
xchg
scas
jge
cli
cmp
push
sti
scas
dec
test
subb
in
dec
cld
mov
jle
mov
sar
cmp
pop
test
and
jmp
mov
pop
into
jmp
dec
mov
rorb
shlb
push
pop
dec
in
push
nop
mov
aam
cmpsl
in
into
dec
mov
mov
andl
xchg
jl
and
jecxz
data16
jo
and
sub
push
fistl
inc
cmp
cld
xlat
divb
mov
mov
aaa
ret
shrl
sti
divb
hlt
pop
xchg
test
cmp
jge
sbb
add
imul
mov
jp
inc
addb
xor
mov
stos
mov
clc
dec
push
sub
jae
push
xchg
outsl
or
cmp
pusha
inc
push
mov
xchg
ret
mov
jo
xor
cltd
mov
fcomps
mov
xchg
lods
popa
xor
pop
aas
adc
mov
lods
repnz
dec
or
stos
push
push
sahf
mov
in
iret
cld
inc
pop
lods
sub
out
sub
pop
sti
aad
hlt
push
xor
nop
sub
lret
push
cmp
outsl
mov
mov
outsb
mov
shrl
jge
push
dec
paddsb
xchg
sub
sbb
pop
aad
inc
jno
enter
ret
push
pop
jne
test
fdivrs
call
push
loope
mov
xlat
adc
inc
pusha
adc
push
xor
add
xlat
in
lds
cmp
push
shl
jl
lahf
push
aaa
mov
xor
sub
or
enter
leave
ss
insb
cmovne
pop
mov
dec
adc
call
outsb
inc
pop
std
jmp
iret
mov
dec
nop
jle
push
ds
insb
dec
jns
sub
inc
mov
jmp
stos
push
mov
aam
orb
add
fucomip
jb
sarb
es
mov
insl
xor
pop
push
or
rolb
cltd
cmovge
xlat
fisttps
jge
mov
sbb
add
enter
dec
inc
and
rorl
cmc
addr16
test
pop
jno
mov
jnp
in
roll
fisubs
lahf
push
jg
sbb
xchg
or
mov
push
xor
shr
lea
sbb
cli
or
and
pop
add
es
or
je
mov
loope
loopne
out
adc
dec
sbbb
mov
or
popa
sti
mov
cmp
loopne
sbb
outsl
pop
lahf
subb
inc
fisubl
sahf
int
movsb
aad
pop
stc
stos
out
outsb
leave
add
ret
cmp
popa
cmpsb
sbb
pusha
cli
push
mov
mov
sub
shlb
xchg
lret
imul
fwait
stc
lcall
adc
pop
mov
add
enter
aad
pop
pop
inc
daa
mov
adc
or
inc
and
dec
and
ret
fstpl
cmpsl
out
push
and
insb
ret
mov
nop
mov
jl
sub
mov
push
mov
or
push
push
lods
mov
sub
stc
arpl
fdiv
jbe
sti
mov
mov
jecxz
scas
lods
clc
cltd
adc
sub
lret
xor
push
xchg
stos
popf
pop
movsl
inc
stos
lods
push
add
jb
and
push
jecxz
ss
xor
stos
or
out
xor
jg
mov
scas
fnstsw
aad
ljmp
dec
jnp
jl
pop
push
les
pop
add
aaa
cmpsb
lret
inc
xchg
adc
mov
test
sbb
mov
pop
lods
bound
xor
pop
js
aaa
int
icebp
ret
or
loop
andl
dec
xchg
xchg
xchg
rorb
insl
sbb
jg
int3
xchg
xor
push
cmp
cmc
orb
cmp
adc
push
pop
pop
fidivrl
movsl
idivl
das
ja
loopne
cmp
fbstp
pop
out
pop
xchg
xchg
or
jmp
mov
testl
lcall
mov
or
mov
jno
mov
push
ret
dec
in
pop
leave
xchg
or
xchg
popa
jg
adc
stos
mov
stos
test
rorb
add
and
mov
push
divb
sahf
lret
sub
sarb
sub
bswap
sub
add
mov
fs
dec
cwtl
mov
pop
push
in
test
adc
sahf
sahf
cmpsb
cltd
jne
test
call
jle
cmpsb
dec
pop
mov
aas
icebp
push
pop
mov
lea
outsl
sarb
test
clc
sbb
xor
mov
pop
add
lods
not
lahf
and
sahf
jo
cwtl
es
pop
incl
stc
jns
loopne
sbb
jb
mov
jecxz
jg
insb
xor
jne
repnz
push
loopne
pop
sarb
jno
shrl
clc
mov
dec
bound
gs
into
jmp
cmp
lock
repnz
cmp
in
add
jnp
cmp
notl
xor
mov
push
out
negb
pushf
inc
jb
pop
mov
mov
pop
cli
in
mull
xchg
movsl
cmp
sbbl
jp
fcompl
dec
out
aaa
cwtl
or
jns
cmp
sbbb
pop
adc
jmp
shlb
mov
pop
rcr
push
aas
int
mov
mov
in
xchg
sbb
push
daa
cmp
and
daa
lods
sub
mov
scas
fcompl
mov
push
xor
out
pop
pop
jg
pusha
sbb
iret
mov
lods
imul
and
pop
sub
ljmp
xchg
inc
into
cmpsb
arpl
cltd
inc
jge
test
in
es
movsb
xchg
call
push
pop
dec
add
and
lcall
pop
fdivs
les
loop
lods
gs
xchg
mov
pop
leave
xchg
clc
cli
mov
out
jne
in
into
mov
insb
xchg
jno
lock
adc
mov
jne
dec
imul
ds
repnz
jg
cmp
sbb
or
pop
das
cld
mov
dec
test
pop
mov
dec
xchg
jg
bnd
cmp
sti
mov
inc
cmp
lcall
enter
sbb
je
sbb
cmp
jne
fcmovbe
push
sbb
add
push
aad
mov
insl
sbb
inc
sub
test
divl
mov
ds
cmovle
mov
push
test
mov
pop
pop
insb
or
idiv
jno
jno
lret
dec
outsb
or
jecxz
ret
test
fdecstp
or
inc
push
xchg
mov
push
xchg
dec
cmp
sbb
sbb
aas
ret
negl
adc
inc
add
adc
xchg
lahf
mov
nop
and
mov
out
xchg
lds
lods
cwtl
out
aam
jns
sbb
xor
pusha
xor
iret
mov
push
mov
mov
gs
ror
push
add
ja
pop
les
mov
jmp
add
mov
cltd
lret
sbb
cmpsl
jae
dec
dec
xchg
pop
sub
pop
jbe
dec
sbb
repnz
shl
scas
test
xchg
or
sbb
std
mov
add
pop
mov
mov
cld
clc
shlb
sbb
in
rorb
dec
pop
xor
ret
aas
repnz
push
lret
test
sub
add
std
bound
cmc
sbb
mov
pop
xchg
inc
popf
cltd
mov
out
adc
out
xchg
dec
push
adc
inc
mov
pop
push
es
das
and
fmul
int
popf
shlb
es
jmp
dec
fiadds
xor
mov
ret
push
loopne
leave
lcall
inc
adc
pop
adcb
sbb
push
shl
pop
cmp
mov
adcl
push
mov
int3
psubsw
jnp
test
sbb
fmull
adc
aad
add
mov
xchg
fsts
aad
lods
push
loopne
lock
xlat
mov
and
scas
push
cs
mov
sbbl
or
pop
aad
outsb
and
lea
and
rorb
add
push
and
xor
push
jbe
mov
pop
fstpl
mov
sub
daa
int
or
andl
ljmp
or
adc
jmp
mov
in
push
aam
outsl
in
cmpsb
adc
aas
lret
mov
adc
rorl
adc
mov
jo
jbe
add
cmp
test
pop
aas
dec
jb
mov
lds
test
push
adc
aad
mov
jbe
lcall
add
test
push
call
inc
cmp
gs
scas
std
dec
inc
lcall
add
repnz
fld
add
in
mov
pop
jno
pop
in
and
mov
dec
shll
ficoms
sbb
xchg
packsswb
cwtl
mov
inc
js
enter
add
xchg
jb
insl
push
mov
pop
aaa
jmp
cs
shl
cltd
ffree
scas
cmp
or
lret
xchg
aad
ret
jmp
ss
ror
add
mov
add
jno
inc
push
sbb
out
repz
push
jmp
lock
mov
mov
xor
les
adc
ja
push
mov
roll
js
mov
cli
ss
jge
cld
xchg
ret
loopne
xor
es
mov
push
lret
pop
jnp
pop
cwtl
comiss
pop
shrb
out
roll
js
scas
pushf
adc
mov
cmp
dec
adc
cmp
in
in
in
shlb
stos
mov
icebp
loopew
adc
and
inc
movsb
mov
out
jp
in
js
push
mov
loopne
mov
jp
fcmovu
jbe
loope
ja
mov
mov
les
mov
es
in
bound
andb
dec
int
xchg
mov
xchg
popf
scas
mov
cmpsl
popa
sahf
mov
addr16
push
inc
lret
ja
loopne
int3
sahf
repz
push
jp
arpl
fsubrl
xor
mov
or
mov
dec
or
movsl
scas
les
mov
cmp
cmpsb
fstpt
cmp
inc
push
subl
mov
xor
lahf
pop
mulb
jne
mov
cmp
pusha
rclb
cmpsb
ret
cmpb
bound
gs
fcoml
and
xor
fcoms
mov
movsb
aad
push
push
sub
in
jmp
bound
mov
test
popa
jnp
cmp
cmp
movsb
inc
addr16
test
dec
jae
jle
je
jb
ficomps
jl
mov
or
mov
repz
add
sbb
xchg
sti
aas
ror
pop
mov
cltd
mov
pop
add
negb
jle
js
inc
mov
outsl
in
cld
mov
mov
push
push
cmp
cmp
dec
std
cs
push
cmp
setl
push
mov
adc
push
and
push
adc
inc
aas
xchg
nop
add
mov
sbb
add
cmp
jg
outsb
aad
cld
xchg
add
pop
adc
push
bound
repnz
or
inc
enter
adcl
cmp
nop
mov
pop
push
movsl
sub
jge
push
or
jmp
pop
push
inc
gs
xor
xchg
cmpsl
icebp
inc
leave
sbb
push
sub
cwtl
cli
data16
xchg
stos
rcll
scas
jb
out
sbbb
add
add
clc
xchg
filds
ja
lcall
mov
jmp
pop
lods
daa
mov
arpl
mov
jb
test
shrb
pushf
inc
orb
test
sahf
enter
dec
iret
sub
outsl
xchg
adc
cmp
pop
dec
xor
stos
imul
push
mov
ret
xchg
mov
mov
cltd
push
ret
jae
scas
rorl
or
jo
push
adc
loopne
mov
mov
and
mov
std
das
stos
pop
ffree
jle
jp
test
ret
mov
es
jg
and
add
or
adc
jns
lret
icebp
daa
xchg
out
jl
bound
out
add
cmp
add
shll
jns
mov
cli
cwtl
ja
pop
leave
xor
in
push
pop
sbb
pop
fadds
jb
roll
rorl
mov
test
xchg
mov
sbb
fsts
push
sbb
popf
shll
mov
popf
ja
es
dec
mov
cmpsb
cmp
arpl
or
xchg
imul
leave
and
sbb
pop
push
fwait
mov
aam
and
loope
pop
sub
or
shll
or
nop
jecxz
loope
test
movsb
addr16
adc
in
push
fbld
fcmove
mov
push
pusha
stos
test
jg
stos
mov
jae
lret
xchg
rorb
xchg
icebp
gs
je
xor
mov
popf
insb
push
cmpl
sub
push
roll
and
iret
loopne
ja
mov
xchg
lea
inc
cmp
sub
cmc
faddl
out
xchg
add
ds
pusha
xor
pop
mov
or
and
mov
shrb
mov
cli
movsb
iret
xor
mov
enter
xlat
addr16
cltd
mov
mov
mov
js
mov
mulb
ret
je
mov
push
cltd
sahf
in
jecxz
mov
nop
cmp
pop
push
mov
ss
pusha
pop
push
loope
pop
popf
lods
fidivrl
ret
mov
push
push
mov
pop
pusha
jnp
pop
or
movsb
and
enter
pop
mov
and
stc
arpl
clc
push
xor
dec
cmp
shll
mov
push
sarl
sub
push
cmp
adc
jnp
in
sbb
shlb
or
ret
mov
lds
jns
test
sarl
adc
ret
out
dec
inc
std
jb
fisttpl
inc
frstor
pop
in
fwait
and
sub
mov
adc
jbe
xchg
cs
cmp
cmc
cmp
and
pop
and
enter
adc
pushf
push
lods
pop
dec
xor
push
cmpl
clc
sbb
xor
mov
sti
mov
stos
pop
aam
std
pop
sti
aam
notl
mov
mov
inc
je
jmp
test
cli
aam
stos
jno
adc
sbb
push
xchg
int
jp
jg
and
add
jmp
lcall
in
mov
cmp
jnp
sarb
mov
subl
mov
jbe
and
xchg
jnp
jae
pop
jmp
jbe
psrlq
shr
inc
xchg
or
jmp
xchg
xor
test
test
dec
add
bound
decb
call
dec
inc
pop
repz
mov
or
ss
lret
sub
fcmovb
mov
imul
and
shl
push
push
sti
sti
sbb
lock
lahf
or
dec
jo
cmp
cld
mov
out
movsb
xchg
les
insb
mov
mov
js
fimuls
stc
insl
adc
icebp
xchg
popf
or
adcb
xchg
pushf
fstps
out
inc
in
jbe
addr16
adc
xor
sbb
popf
jmp
or
cmp
lret
adc
dec
mov
shrl
sub
cmpsl
sbb
adc
cli
int3
test
lret
testl
or
and
fidivrs
les
fidivl
ljmp
into
imul
sbb
and
adc
mov
fnstenv
lods
adc
fwait
in
dec
sbb
adc
mov
inc
mov
xchg
sbb
loop
ret
adc
in
test
jo
pop
mov
pop
sub
clc
bound
jmp
ds
mov
sbb
stos
stos
jbe
testl
loope
movsl
insl
fsub
pop
in
add
sub
and
in
add
pop
cmp
int3
add
repnz
jnp
outsb
dec
int
adc
repnz
data16
stos
and
popa
dec
jmp
sarb
cmpsl
xor
inc
clc
sbb
mov
pop
push
out
das
or
pop
sub
jae
cwtl
sub
add
out
dec
pop
rcl
xchg
leave
cli
in
adc
aam
mov
xlat
hlt
and
sub
mov
nop
add
ljmp
mov
sti
jo
cltd
dec
mov
pop
inc
lea
jp
add
imul
inc
aad
xchg
cmp
xchg
ret
js
enter
xchg
rcr
fisubl
out
dec
sbb
mov
inc
loope
push
sbb
xchg
movsl
pop
sarl
outsl
adc
push
push
push
pop
rorl
mov
iret
pushf
in
rorb
iret
fimull
push
mov
push
lcall
test
cltd
lds
ret
pushf
sbb
or
aam
pop
mov
fdivp
xchg
leave
dec
cmc
cmpxchg
or
gs
inc
xchg
fbld
jmp
gs
movsl
aaa
nop
or
je
orb
or
add
push
inc
dec
xorb
arpl
cmp
fbstp
inc
mov
sti
xchg
stos
adc
xor
mov
jecxz
xchg
and
in
in
repz
mov
clc
jl
rol
sub
dec
mov
sarl
test
loopne
lret
xor
int
push
xlat
scas
in
mov
into
orl
ljmp
cmpsb
jl
push
pop
dec
imul
js
mov
aad
ds
push
push
mov
dec
xchg
inc
mov
outsb
inc
xlat
fmull
dec
mov
dec
imul
or
cwtl
xchg
add
pop
pop
xor
mov
outsl
sub
inc
cltd
aaa
call
test
jo
or
in
out
mov
ret
mov
mov
mov
cld
fisubrl
loopne
loop
push
cmpsb
add
dec
push
sbb
add
or
jle
in
cmp
mov
lods
fildll
stc
in
jne
insl
jp,pn
mov
jmp
add
jo
sbb
clc
fisubrl
xor
in
ret
dec
gs
mov
scas
lret
jge
sub
ljmp
xchg
aaa
mov
push
stc
jmp
mov
imul
out
insl
test
into
sbb
jb
outsb
xor
fdecstp
jl
aas
mov
inc
and
xchg
jp
pand
test
pop
adc
sub
inc
mov
dec
inc
test
lcall
inc
out
push
iret
pop
in
mov
push
sbb
test
clc
bound
ss
arpl
daa
test
ljmp
mov
cmc
xor
push
sub
mov
gs
inc
dec
cmp
bound
in
insb
ds
sbbb
adc
aas
adc
lods
fisttpll
mov
mov
mov
and
popa
in
push
cmp
repnz
cld
ljmp
mov
dec
or
mov
and
jmp
out
into
xchg
xor
data16
mov
sbb
ds
aam
mov
out
sbb
insl
lods
mov
es
push
mov
add
xchg
sbb
pop
inc
pop
sbb
pop
lods
scas
xchg
stos
dec
je
cmp
jle
adc
add
rcr
inc
lods
adc
mov
cld
cmp
cmp
out
cmp
aad
mov
jp
jns
pop
in
lock
sarb
cmp
js
sbb
js
and
jmp
xlat
shrl
sbb
outsl
fcomps
sub
pop
loop
out
mov
testb
sti
lret
jmp
add
push
jns
mov
dec
cwtl
fwait
popf
sahf
stos
push
les
lfs
push
sub
inc
jle
inc
enter
jge
rcll
icebp
dec
pop
sbb
lret
shrb
imul
pop
or
lds
into
xlat
sbbb
gs
ja
adc
shlb
cwtl
leave
mov
dec
sbb
pop
mov
nop
pop
mov
es
xchg
push
sbb
stc
xor
fdivr
iret
shll
iret
pop
cmp
sbb
mov
fdivl
inc
call
fists
cmpsb
inc
xor
add
pushf
xorl
int
adc
fst
stos
int3
dec
es
pop
fcoms
gs
dec
pop
repnz
jne
dec
loopne
shll
cli
data16
ret
fwait
mul
ljmp
leave
stos
xchg
mov
dec
push
cmpsl
jb
dec
xchg
push
decl
ljmp
loopne
pop
aam
popa
aas
stos
inc
mov
neg
inc
ret
das
outsl
or
jp
lret
fmuls
push
lea
push
jno
sti
in
fstl
dec
mov
push
lret
cs
mov
add
jmp
ljmp
mov
nop
xchg
xchg
mov
mov
cmp
leave
xor
lret
mov
clc
insl
aam
pop
push
pop
stc
sahf
hlt
call
sbb
jo
inc
xor
adc
sbb
dec
push
outsb
gs
jnp
add
push
lret
xchg
xor
add
ljmp
mov
movsl
pusha
aad
movb
in
xchg
roll
lcall
add
mov
push
sub
cmc
jg
add
sbb
dec
scas
pop
and
xchg
cmpsl
stos
clc
test
mov
call
pop
dec
js
inc
sub
mov
mov
mov
divb
xor
push
mov
repz
icebp
imulb
gs
xchg
mov
pushl
ds
pop
std
push
int
inc
lret
cmp
mov
and
cmp
lods
dec
xor
mov
cltd
mov
loope
int
testb
testl
imulb
ret
dec
dec
sub
mov
fcom
push
fwait
popa
push
add
ficoms
pop
iret
pop
cmpsb
cmp
ss
pop
or
cmpsl
sub
push
decb
mov
xor
push
pusha
push
subl
mov
insb
or
inc
aaa
jp
mov
aaa
scas
xor
mov
and
into
loopne
jp
inc
mov
sbb
inc
in
push
inc
pop
inc
pusha
shlb
les
xor
fdivl
aam
mov
nop
push
mov
call
xchg
mov
jecxz
adc
xor
push
out
push
ljmp
enter
lods
call
daa
ret
fcompl
inc
out
sarb
fsubl
dec
dec
and
insb
and
mov
outsl
sti
inc
sbbl
add
adc
jg
inc
movb
sub
add
jmp
popf
popa
hlt
stos
add
fiaddl
ss
xor
pop
cwtl
jne
push
inc
jnp
xchg
andnps
arpl
inc
mov
out
mov
and
add
push
popa
mov
sbbl
lds
cmpl
cwtl
or
lahf
pop
icebp
mov
sbb
sub
inc
dec
into
cmp
add
shl
sbb
ret
fldl
mov
test
mov
fmull
xor
out
push
xchg
adc
imul
lahf
pop
dec
inc
cltd
push
int3
mov
stos
idivl
andb
das
ss
addr16
push
mov
cld
adc
xor
jae
push
jno
add
mov
push
ja
out
push
add
push
mov
data16
and
and
clc
scas
sub
xlat
mov
es
jl
cltd
jbe
push
pop
mov
mov
sbb
pop
sub
add
jns
shrb
shrl
inc
add
cltd
mov
das
cwtl
popf
mov
cmp
loope
aam
cmc
add
hlt
fidivs
nop
jmp
sbbb
jmp
push
in
rcl
in
icebp
add
jge
jb
fwait
addr16
fidivl
xor
pop
mov
sub
xchg
ficoml
test
cwtl
aaa
mov
and
cmpsl
xor
je
mov
jne
adc
shlb
bound
or
cmpsl
pop
mov
stos
scas
sbb
fildll
adcl
jmp
in
and
and
mov
lcall
xchg
popf
incb
jecxz
xor
push
icebp
je
jmp
daa
sbb
loop
xchg
pop
sbb
sbb
stos
scas
enter
fdivr
pusha
xor
jl
cwtl
aas
xchg
jg
push
outsl
ja
mov
cmpsb
cmpsb
push
pop
aam
sub
fcomp
int
mov
xor
test
push
jp
xlat
push
pop
lret
stos
jmp
xor
imul
cmpsl
cld
push
lret
jecxz
cmc
fstpt
cmp
imul
test
sbb
and
or
sub
xor
cld
xchg
jns
pop
pop
jnp
cmpb
xchg
push
insl
dec
xor
js
aad
lret
out
es
xorl
jns
inc
inc
add
cld
lods
daa
jl
mov
add
jmp
pop
in
cmpsl
inc
lds
jbe
add
lea
rorb
jae
es
stc
adc
out
xlat
sti
mov
jp
sarl
hlt
in
adc
les
rcll
in
iret
or
push
inc
push
add
call
shlb
push
lods
dec
mov
fnstcw
test
mov
mov
lock
stos
lods
fists
sub
push
jmp
rclb
xlat
cmp
sbb
adc
testb
repz
insl
pop
sti
lods
fcmovnbe
xor
cmpsl
arpl
out
ret
adc
xchg
jae
or
xor
xchg
fdiv
inc
sbb
or
clc
adc
mov
fwait
or
jge
lods
push
inc
mov
js
repz
or
ds
lahf
add
faddl
mov
outsl
cmpsb
ja
jne
mov
je
je
stc
and
out
xorb
out
lret
inc
out
mov
idivl
adc
repnz
push
xchg
iret
call
push
dec
mov
or
outsl
inc
fwait
cmpsl
lret
ficompl
mov
mov
nop
fwait
adc
cmp
pop
push
push
imul
sub
fcomps
push
mov
hlt
push
aas
adc
xor
cwtl
sub
sub
jmp
xchg
xor
dec
fldl
adcb
pushf
mov
mov
in
cmpsl
or
mov
fs
shrl
xchg
in
fistpll
jp
sbb
popf
in
dec
and
lret
cmpsb
scas
test
xchg
pop
add
insl
cmp
testl
pop
sahf
addr16
xchg
aad
mov
jg
add
aad
loope
in
pop
mov
fs
xchg
sahf
mov
or
lret
fldenv
adc
add
fdivr
inc
pop
add
sub
or
xor
pop
lds
movsb
mov
outsl
stc
ljmp
out
jae
shll
enter
mov
testb
setg
jno
mov
rcr
loope
movsb
mov
mov
scas
shl
jmp
pop
mov
cmp
push
ds
dec
sbb
loop
mov
jo
repnz
pushf
adc
xor
mov
lahf
mov
mov
jmp
dec
lea
xchg
cmpl
and
jo
pop
and
pop
xor
or
cmp
mov
mov
loope
call
stc
and
call
sbbl
std
xchg
enter
adc
lahf
push
push
xor
add
adc
jnp
loopne
jge
jno
mov
jbe
lcall
xchg
mov
test
or
xchg
insb
xchg
adc
iret
dec
sbb
out
lahf
cmovg
mov
mov
ret
and
pop
ja
mov
cmpb
xlat
fiaddl
adc
das
scas
test
xchg
lods
sub
dec
dec
mov
mov
push
insl
retw
nop
in
mov
adc
cmp
xor
xchg
fwait
stos
adc
stc
mov
xchg
lods
inc
sbb
aad
lahf
aas
dec
andl
sub
cli
scas
shl
in
dec
pop
dec
in
or
pop
mov
jns
sti
sub
push
adc
add
cmc
xchg
hlt
xchg
xchg
pop
mov
dec
stos
out
jb
outsl
adc
scas
jmp
push
cwtl
outsb
fsubrl
xlat
jl
rorl
xchg
int
nop
vbroadcastf64x2
cmpb
xchg
jg
jno
jae
inc
adc
adc
dec
test
pop
jae
pop
cmp
inc
ret
sub
pusha
push
lcall
call
pop
pop
inc
mov
push
data16
push
jo
pop
push
ds
fsubr
xchg
xorb
lcall
xchg
adc
les
xchg
xor
jae
cs
call
out
popa
xor
test
mov
in
push
lret
lods
mov
push
pusha
insb
das
lcall
xchg
inc
mov
divl
pop
and
jae
orl
ret
idivb
in
jle
addl
xchg
cmp
cmp
gs
ljmp
imul
or
sahf
jecxz
or
pop
cmc
cmpsl
stos
repz
mov
mov
cmp
loop
mov
inc
push
xlat
test
in
xchg
push
inc
sub
jbe
mov
pop
loop
lahf
pop
mov
les
sbb
mov
sub
sbb
addr16
cli
push
mov
stos
or
mov
sbb
out
mov
xchg
pop
push
pusha
jmp
push
push
pop
sub
pushf
add
mov
test
movsl
push
fcompl
sbb
pop
dec
sti
xor
inc
shl
lock
sbb
icebp
push
bound
jnp
pop
pop
jg
push
mov
jbe
aam
mov
xchg
xchg
xor
mov
xor
arpl
jmp
aas
lea
fcomps
inc
mov
jno
rolb
popa
push
dec
jp
mov
mov
pop
ret
int
inc
sub
mov
fldcw
loope
adc
cmpsl
and
dec
dec
jne
lds
pop
ja
cmpsl
scas
inc
ja
jmp
sub
cltd
push
dec
sub
enter
xchg
je
je
outsl
add
mov
sub
cmpb
int
lods
daa
dec
lods
lret
aas
inc
je
pop
mov
add
add
sbb
loop
or
lret
out
ss
imul
lods
cli
mov
fidivs
js
adc
lcall
mov
push
out
lahf
sbb
or
aas
push
call
add
mov
xchg
push
mov
or
and
push
shll
inc
lods
xchg
sbb
mov
stos
shll
dec
cmp
or
add
nop
xchg
dec
xor
inc
repz
xchg
and
loop
inc
shlb
adc
inc
fisttpll
sub
jmp
or
xor
add
dec
push
mov
rcl
xor
mov
aas
pop
fst
pusha
add
fwait
and
push
cli
enter
add
stos
jae
sub
sbb
es
std
flds
icebp
jl
rcr
outsl
add
inc
pushf
lcall
inc
adc
test
add
in
adcb
js
xchg
clc
out
ds
jns
cmpsb
cmpsb
aad
std
sbb
push
clc
adc
arpl
dec
mov
out
in
dec
jl
push
jmp
inc
adc
out
dec
or
aas
arpl
inc
ja
mov
aaa
dec
icebp
imul
pop
push
shrb
cmp
push
inc
ret
addr16
aam
aas
sti
cmp
inc
adc
inc
pop
test
or
or
or
dec
paddsb
xor
mov
mov
call
test
inc
fucomip
add
stc
rorl
int
scas
mov
inc
xor
cmp
roll
inc
jno
cmp
decb
jnp
sbbl
aaa
ljmp
mov
subb
aad
pop
int3
cmpsl
dec
lret
push
dec
icebp
push
ficomps
cli
or
jmp
inc
push
loop
sbb
fs
je
mov
rcrl
and
aad
xchg
out
iret
jb
lret
push
nop
stos
dec
add
loop
idivb
lret
mov
add
pop
push
cmc
shlb
shl
adc
xor
xchg
pusha
dec
in
daa
fwait
jno
dec
sbb
lahf
cli
outsb
addr16
pop
or
sub
push
xor
jmp
add
push
adc
outsb
mov
sub
and
adc
ret
hlt
fldcw
dec
arpl
outsb
mov
insl
dec
and
jb
insb
or
stos
xchg
xor
push
sbb
shrb
sti
repz
icebp
xchg
cmp
sub
jmp
data16
je
aam
loop
mov
jle
in
fstps
stc
outsl
mov
jne
push
mov
push
push
aas
adc
sbb
fisttps
xchg
inc
adc
scas
and
xchg
loop
and
xorl
mov
add
js
mov
or
mov
mov
test
sbb
xchg
std
dec
add
fdivl
adc
add
pop
roll
sub
mov
mov
mov
adc
sub
neg
lea
int3
fisubrs
jo
pop
pop
lds
cli
cmp
lods
cs
mov
xor
loopne
test
add
mov
mov
mov
je
cmp
ret
rcll
out
pop
rol
mov
add
or
inc
pop
inc
and
mov
bound
cwtl
cmc
push
stos
push
adc
sub
push
mov
dec
jns
repnz
cld
test
bound
push
dec
jb
arpl
pop
add
jae
int
aam
or
hlt
mov
xlat
sar
scas
jne
je
sbbb
in
push
sbb
xchg
push
sub
pop
and
push
in
and
mov
ret
test
sbb
push
or
jg
mov
cs
outsl
lea
mov
pop
add
add
scas
xchg
outsb
lods
sbb
movsl
mov
iret
adc
mov
and
jl
push
in
in
inc
aaa
mov
or
xchg
sbb
clc
ret
jmp
cmp
fistps
inc
cmp
insb
sub
rol
fs
push
jl
fnsave
movsl
nop
and
mov
test
sbb
out
outsb
shll
loopne
dec
jb
dec
and
daa
mov
mov
dec
lret
hlt
or
cmp
test
sarl
mov
pop
inc
stc
scas
xchg
push
test
stos
pop
jecxz
es
sahf
arpl
pop
jno
jecxz
mov
test
xlat
lret
xchg
mov
andl
cmp
mov
mov
pop
out
arpl
gs
decb
sti
mov
jns
imul
cmp
push
mov
and
out
popa
adc
mov
out
push
cmp
enter
arpl
xor
movsb
imul
push
out
xor
push
in
adc
frstpm(287
xor
lahf
jmp
add
mul
adc
fcmovnb
pushl
jb
add
sub
loope
repnz
jg
lods
test
inc
out
pop
mov
push
in
ja
pop
adc
mov
push
xchg
push
sbb
adc
mov
push
test
rcll
jo
sub
or
mov
test
xor
les
add
pop
stc
mov
xor
popf
jecxz
mov
int3
cmp
or
mov
push
add
push
jecxz
f2xm1
mov
push
push
adc
push
dec
and
int
inc
insl
and
sub
fstpt
fcomps
sub
push
cmpsb
push
mov
sahf
out
xchg
aam
bound
outsl
inc
out
or
xchg
fwait
xchg
dec
mov
dec
pop
xchg
xor
sub
adc
leave
sub
dec
adc
shl
mov
push
in
inc
repz
scas
cmp
inc
imul
push
movsl
sub
xchg
sbb
or
pop
subl
sbb
test
shrb
leave
mov
outsl
or
mov
lea
mov
repnz
test
fisttpll
iret
enter
iret
inc
out
push
daa
cwtl
loop
rorl
xor
adc
pop
bound
dec
and
out
stos
out
or
or
lcall
ret
xlat
mov
pop
movsb
jmp
push
out
popa
jge
jge
pop
dec
aad
sti
pop
dec
mov
push
or
adc
add
insb
mov
mov
nop
lods
push
sahf
fldcw
or
xchg
lock
fcoml
inc
lods
cli
pusha
inc
jno
sti
loope
dec
fistps
popf
test
xor
sbb
jp
mov
iret
lea
dec
mov
mov
xor
iret
inc
int
push
push
ja
push
aaa
jno
ret
movsl
adc
push
jl
mov
xchg
mov
out
or
and
outsl
sarb
push
bound
jno
pop
dec
lret
and
mov
pushf
popa
pusha
stos
outsl
aad
dec
inc
fsubs
push
mov
les
mov
dec
cmp
ljmp
and
and
cltd
jae
ficompl
ret
lahf
add
mov
adc
xchg
push
mov
pop
in
adc
jecxz
lods
into
mov
sub
pop
jnp
rclb
dec
lahf
out
jbe
pusha
mov
add
stos
roll
dec
dec
mov
orl
jne
out
mov
sub
mov
xor
mov
test
test
lea
aas
xchg
jecxz
pop
jmp
push
mov
das
cmp
cs
mov
xor
out
xchg
jp
das
sbb
xor
lock
jns
cmp
out
inc
jge
je
std
sarb
dec
divl
xchg
rorb
ficompl
fsubrs
push
or
insl
les
cmpsb
cmp
sub
leave
mov
push
jbe
mov
cli
add
xor
out
ja
jnp
add
xor
xor
pop
lret
lret
arpl
and
arpl
ret
imul
adc
std
mov
insl
xor
push
rolb
xor
int3
orb
rcll
dec
fs
pushf
dec
add
imul
loopne
cmc
or
dec
fstp
outsl
mov
pushl
inc
fistps
mov
or
jb
negl
movb
jno
enter
fidivl
in
mov
mov
mov
add
and
mov
mov
xchg
and
pop
mov
ret
dec
pop
movsb
sub
xor
aaa
dec
push
ret
fsts
dec
icebp
sbb
orb
scas
adc
mov
int3
movsl
mov
rorl
inc
xor
pop
lods
xor
or
cli
xchg
xor
xchg
jl
xchg
cmp
rorb
into
dec
sbb
adc
xor
mov
int3
rcll
in
std
pushf
pop
lea
or
aad
dec
sbb
ds
inc
pop
mov
arpl
add
push
mov
push
push
sub
xor
pop
fwait
adc
insb
ret
fstps
aaa
and
mov
outsl
mov
inc
mov
pop
cmp
sub
icebp
andl
pushf
fcmovne
fsubrp
jge
mov
add
mov
or
dec
and
push
adcb
or
insb
mov
nop
xchg
lods
rolb
xchg
or
xor
imul
push
ja
mov
mov
xchg
xor
sub
xor
sub
inc
and
stc
pop
cmp
sbb
or
aas
push
adc
outsb
mov
in
ficomps
mov
insb
sar
jae
scas
push
adc
movsl
and
push
sbb
stos
and
sbb
in
jmp
adc
call
jae
inc
lds
xlat
rorb
test
test
pop
sarl
ds
stc
xchg
test
add
mov
mov
push
sbb
cmp
pop
mov
ljmp
jge
dec
jg
stos
inc
test
and
lcall
addr16
dec
inc
xchg
jae
mov
cmc
mov
lahf
sar
std
pop
sub
xchg
stos
xor
push
inc
or
jnp
and
leave
call
or
lea
insb
ljmp
repz
movsb
lret
mov
ljmp
leave
add
mov
xor
out
pop
sub
repnz
enter
inc
mov
mov
repz
lock
cmp
lods
test
or
repnz
int3
jo
cmp
cli
cmp
movsb
mov
jbe
aas
sub
adc
push
pusha
mov
xchg
jecxz
jecxz
lds
orb
dec
nop
gs
iret
shrl
xchg
sub
jl
and
inc
push
pushf
leave
das
sbb
mov
inc
std
pop
xlat
dec
mov
lret
movsl
sbb
mov
adc
bound
ret
leave
jno
xor
xchg
push
sub
andl
push
push
subb
ja
loopne
mov
fdiv
inc
add
repnz
dec
fnstsw
pop
lcall
mull
add
leave
sbb
pop
clc
dec
int
jp
push
sub
mov
pop
jne
dec
add
cld
xlat
daa
xchg
data16
adc
adc
fs
xchg
adc
cwtl
sub
mov
push
popf
cs
shl
test
iret
cmp
xor
mov
mov
adc
sar
mov
adc
pop
push
fidivrl
into
dec
leave
int3
dec
dec
cmpb
xlat
mov
inc
ret
es
mov
adcb
or
pop
mov
popf
movsl
or
sub
jae
push
aaa
movsl
popf
mov
out
mov
pop
push
jns
add
mov
xor
dec
repz
mov
or
leave
sub
shlb
popa
ja
jl
lcall
cmpsb
out
fsubl
push
and
repz
stos
fisubrl
popf
mov
adc
xchg
mov
jb
lea
jle
sbb
bound
pop
inc
sub
out
mov
sahf
icebp
lahf
or
out
inc
cmp
fsubl
add
icebp
lahf
test
mov
loopne
mov
icebp
cmp
or
outsb
rcrl
xor
jle
push
andl
push
repnz
insl
int3
xchg
fnstenv
push
adc
dec
hlt
call
fucomp
je
jbe
cmp
shrb
lcall
mov
jecxz
push
je
setp
push
roll
cwtl
fldt
jae
dec
mov
push
ja
mov
push
mov
je
add
mov
cmp
notl
ja
inc
or
mov
xor
jb
pop
push
lcall
fstpt
sbb
push
cli
mov
ret
cmpl
push
ret
shlb
mov
and
loopne
js
negl
pop
xchg
arpl
test
mov
icebp
sub
and
mov
jae
cwtl
inc
fsubrl
cli
add
gs
loope
insl
mov
nop
pusha
aam
mov
mov
add
cmp
insl
jg
in
inc
sub
add
xchg
insb
loopne
aad
test
pop
fisttps
popa
mov
lahf
add
addr16
push
xor
lds
mov
fistl
insl
mov
mov
mov
lret
jecxz
cmpsb
jb
jmp
les
mov
inc
cmp
push
mov
pop
jns
pop
add
fsub
in
adc
xor
adc
jl
push
push
and
or
and
pop
and
push
xor
sub
cmp
jmp
stc
cwtl
movsl
xchg
push
fstps
insl
inc
cmpsb
adc
leave
cltd
pop
pop
push
loopne
xor
xor
sbb
aad
adc
rcl
xlat
xor
sub
addr16
std
mov
cmpsb
mov
lcall
mov
dec
bound
add
pop
adc
mov
and
cmp
bnd
enterw
adc
adc
enter
repz
iret
insl
ret
lret
mov
shr
add
jl
shll
sbb
xor
int3
xchg
pop
repz
je
outsb
xchg
add
mov
insb
xchg
jle
dec
pop
popf
push
mov
xor
int
add
push
add
loope
xchg
or
adc
cmp
test
add
sti
pusha
mov
mov
xchg
inc
pop
sub
int3
jg
repnz
jecxz
int
scas
es
ja
lret
insl
inc
repnz
sbb
addl
cmpb
je
mov
xchg
jl
push
addr16
addr16
jg
pop
std
sarb
iret
xchg
xchg
mov
das
sbb
fisubs
pop
mov
call
adc
jo
int
fsubl
xchg
popf
fbld
push
sbb
call
dec
push
out
pop
sub
aam
je
gs
mov
mov
hlt
lock
mov
xor
ror
push
adc
mov
mov
and
in
stc
jmp
dec
int
test
adc
pop
cmc
sbb
mov
sbb
xlat
rcrb
mov
call
hlt
mov
lock
outsl
aaa
roll
push
es
popa
push
or
notb
mov
add
or
mov
test
or
mov
loopne
fdivp
test
insl
jmp
outsl
cmc
adc
call
sub
mov
dec
mov
xorb
and
mov
filds
sub
xchg
mov
mov
xchg
cmpsb
in
movsl
add
nop
popa
test
fimull
in
pop
std
loop
jmp
es
mov
not
mov
push
mov
dec
inc
inc
ja
xchg
jmp
into
jle
jge
mov
out
dec
mov
outsb
cmovs
xchg
xchg
xor
xorb
int
inc
das
sbb
sbb
mov
in
pop
add
and
in
dec
pop
pop
adc
pop
repz
lret
pop
aad
push
and
loopne
test
jno
in
push
stos
test
xchg
popf
jb
cmpsb
outsb
pusha
sti
jl
rolb
mov
and
dec
aaa
enter
insb
shll
repnz
pop
test
inc
dec
sub
bswap
push
xchg
rol
sub
enter
or
pop
xchg
pop
stos
ss
mov
pop
in
and
and
pop
rclb
fiadds
clc
notb
stc
cmp
xor
repnz
push
fcomps
rcl
xchg
hlt
aam
jmp
inc
leave
cmpsl
jne
mov
enter
mov
test
dec
push
cltd
mov
or
xorb
in
sub
movsl
cmp
movsb
push
sub
cmp
jmp
sub
mov
clc
fwait
jne
fnsave
fcoms
cwtl
jns
mov
out
stos
add
mov
or
jecxz
fmull
subl
mov
mulb
flds
xchg
out
outsb
fildl
decb
subb
in
setae
popa
out
pop
outsb
fisubrs
icebp
pusha
jbe
xor
jo
xchg
lock
jecxz
mov
fsqrt
lret
xchg
scas
stos
sub
inc
push
adc
or
and
ljmp
out
hlt
sub
cmp
dec
pop
popa
adc
in
popa
cmp
and
cmpsb
cwtl
cli
inc
in
sahf
inc
sbb
lahf
arpl
inc
push
into
out
cmc
mov
cmp
movsl
sbb
xor
add
sahf
mov
ja
mov
fdivs
sub
sub
fwait
aad
xor
aas
xchg
int
sbb
mov
leave
mov
jne
je
adc
and
push
lods
mov
xchg
js
or
les
and
mov
and
test
pop
mov
or
jne
bound
andl
jno
repnz
test
popf
inc
mov
mov
test
add
sbb
cmp
sti
dec
loope
cmp
les
sbb
cs
inc
jmp
sub
shl
iret
add
movsb
inc
push
das
push
ficomps
outsl
test
xchg
sbb
aaa
mov
jmp
pop
push
movsb
xchg
jle
jp
xchg
ret
mov
mov
or
movsl
xor
lods
xor
pop
mov
scas
pop
pop
xchg
daa
mov
fadds
pop
adc
and
adc
and
orl
mov
sub
lock
inc
jno
push
mov
cmp
enter
orb
jmp
xchg
mov
sub
es
xchg
rcrl
mov
out
es
push
inc
mov
sbb
xchg
xchg
int3
fdivl
adc
lret
mov
inc
sahf
and
mov
and
mov
stos
dec
int
xor
icebp
mov
xor
pop
mov
cmpsb
adc
dec
xchg
push
lds
movsb
mov
aaa
test
mov
scas
aad
mov
pop
outsb
loopne
push
pushf
inc
outsb
push
sbb
mov
inc
xchg
fdivr
xor
sbb
mov
dec
cmp
rorb
icebp
aaa
je
xlat
paddw
adc
out
in
frstor
jae
popa
jo
push
lret
cmc
mov
push
dec
leave
pop
cmpl
cld
loop
mov
test
or
sub
or
lret
and
inc
out
test
out
pop
mov
add
push
shll
pop
pop
sub
loope
pop
rolb
push
mov
and
out
mov
push
xchg
jae
fcom
cwtl
or
cmp
aam
xor
adc
sahf
inc
fiadds
jo
jmp
jno
push
or
fistpl
movsl
jle
mov
lcall
xlat
repnz
mov
push
shlb
test
sbbl
inc
xchg
cmp
inc
lock
dec
xchg
mov
imul
jbe
je
jo
enter
les
pop
or
stos
and
jbe
pop
stos
mov
xchg
push
push
jno
pop
xchg
cmpsl
mov
into
jns
push
scas
in
sub
imul
inc
call
or
popa
das
dec
push
push
xor
or
sti
sbb
icebp
pushf
addr16
scas
push
pop
jg
das
int
add
lcall
add
pop
test
inc
or
test
mov
cmp
in
mov
insb
into
jmp
lret
ficoms
scas
and
and
subl
mov
and
mov
in
jno
movsb
jg
mov
aad
mov
and
inc
mov
decb
sbb
subl
pop
sarb
nop
in
nop
aad
dec
mov
inc
xchg
int
add
xor
sub
lock
shlb
or
adc
xchg
sub
inc
test
cmpb
jno
add
xlat
cmp
sarb
bound
cmp
jle
dec
bound
mull
adc
xchg
xor
xchg
pop
and
mov
xchg
sub
push
adc
movsl
or
xchg
mov
inc
imul
jnp
int3
popf
les
jl
mov
shlb
movsl
popf
das
mov
shl
in
sti
mov
jnp
sub
in
scas
ds
cmpsb
pop
fxch
mov
sbb
jnp
mov
stos
mov
les
into
jo
adcb
sbb
movsl
movb
and
loope
scas
loop
mov
ljmp
xchg
push
mov
in
push
ss
imul
sbb
mov
and
idivb
aas
xchg
and
cli
sub
pushf
lock
int
loop
lret
pop
outsl
test
mov
xchg
stc
lock
ljmp
cmp
mov
int3
rcll
xorb
shll
xor
mov
mov
ret
add
mov
jl
mov
fadd
es
pop
xor
xor
mov
out
pop
mov
ss
out
ficoms
cs
into
stc
lods
push
lret
test
stc
js
jae
fcoms
loopne
jbe
popa
pusha
cli
mov
fs
mov
mov
mov
aas
dec
stos
jg
in
loope
xor
test
xorb
jg
hlt
sahf
xchg
popf
pop
imul
pop
jecxz
jmp
cmpsl
mov
push
push
shrl
mov
or
cmp
add
xor
mov
and
or
mov
xchg
mov
mov
into
stos
inc
mov
dec
ds
and
mov
xchg
stos
cld
adc
sub
lahf
adc
inc
ret
cmp
pop
cwtl
cmpsl
ret
and
aad
cmp
mov
scas
stos
aas
ret
leave
xchg
jecxz
fs
sbb
inc
int
mov
test
jecxz
cmp
mov
jbe
adc
adc
xchg
out
je
mov
sti
xchg
lret
pop
decl
xchg
lret
mov
and
test
pop
repz
out
aaa
dec
pop
scas
aas
int
lret
mov
dec
pushf
movsl
push
add
je
pop
fadd
and
jecxz
mov
insb
gs
bound
add
daa
fmul
cwtl
cld
imul
cwtl
ja
push
mov
xchg
icebp
jecxz
add
lea
inc
fs
in
popf
xor
push
xchg
add
repnz
ljmp
pop
push
iret
cpuid
notl
pop
xchg
ror
xor
addb
or
add
or
jge
and
dec
clc
push
daa
adc
stc
ljmp
or
and
mov
xor
data16
sbb
js
sahf
lret
addr16
inc
lret
sbb
insl
push
jp
push
pop
sub
jle
les
mov
test
mov
mov
mov
insl
imul
cmpsb
inc
mov
loop
aam
sbb
jl
jg
rcr
mov
sti
test
data16
jecxz
ja
cmpsl
clc
jae
lea
inc
test
out
sahf
movsb
pop
jecxz
add
dec
stos
xchg
push
pop
insl
int3
fs
push
pushf
dec
das
sbbb
sub
repnz
inc
ljmp
dec
imulb
inc
in
inc
adc
imulb
mov
into
jb
xchg
jns
xor
test
add
inc
mov
cmc
mov
cmp
cltd
pop
mov
in
mov
cltd
push
xchg
jp
cmpsb
xchg
fildl
jb
sub
mov
cli
lret
jae
pop
imul
shrb
lcall
lcall
xor
xchg
pop
jmp
cmpsb
push
fstl
pop
mov
jge
jnp
cld
cmp
xchg
push
mov
and
std
dec
movsl
jnp
outsb
pop
das
lock
xchg
shl
xor
rolb
out
stos
repz
sbb
mov
xor
mov
scas
bound
dec
cmc
imul
cmp
iret
mov
xlat
rorb
cmp
jb
push
adc
cmpb
mov
xchg
orb
jl
cltd
add
inc
pop
or
icebp
arpl
and
leave
cld
aad
cmpl
push
push
or
leave
rcrb
ljmp
out
rolb
sbb
push
in
dec
sub
jns
ds
ret
dec
pop
inc
mov
push
outsl
imul
push
or
jl
daa
leave
jbe
xor
sbb
inc
mov
xchg
dec
ret
push
repnz
xchg
stos
test
pop
and
or
popf
loope
xchg
cmp
adc
inc
xchg
inc
push
xor
jge
pusha
add
cmp
dec
inc
adc
jmp
xchg
pushf
into
adc
or
sti
xchg
mov
aam
sahf
nop
mov
sarl
stos
or
fdivs
in
lods
inc
pop
mov
rcr
add
adc
sbb
cltd
rcrb
push
leave
jmp
popa
add
sarl
nop
mov
int3
jmp
sbb
adc
bound
in
pop
push
test
in
adc
xchg
shll
movsb
outsb
andl
mov
lods
mov
ficompl
fnstsw
ds
jae
pop
stc
cmpsl
cmp
sbb
push
mov
adc
je
jae
pop
mov
insl
mov
pop
dec
xor
sub
sbb
xchg
in
fldcw
fs
sbb
sbb
mov
jae
cld
inc
sahf
js
mov
push
lock
cmpsb
add
and
insb
mov
sar
xor
and
sub
das
fildl
sub
mov
xchg
icebp
rcrl
lcall
je
sub
std
cmp
sbb
jle
outsb
sbbb
dec
lahf
daa
jge
pop
scas
pop
out
dec
sub
fwait
out
fsubl
sub
call
inc
ret
and
loope
popf
mov
orb
push
insl
int3
push
jg
sub
test
clc
cwtl
inc
pop
adc
inc
adc
pandn
adc
popf
lret
mov
sub
dec
repnz
mov
lds
mov
xor
sub
and
xor
pop
fildll
and
lods
and
xchg
out
cli
shrl
outsl
mov
aad
pop
inc
add
mov
xchg
push
mov
push
imul
ja
adc
dec
mov
inc
xchg
mov
popa
adc
clc
in
pop
push
loopne
xor
and
es
mov
jge
mov
cmc
out
mov
lods
rcrb
xchg
call
mov
adc
popf
ret
js
push
xchg
mov
js
repnz
clc
push
cmpsl
dec
dec
popl
lds
lret
adc
popa
sub
adc
lret
repnz
adc
push
adc
fidivl
pop
stc
mov
push
cmp
xor
xor
add
out
rcrl
in
popf
loop
addr16
cltd
rorb
shl
call
roll
adc
inc
das
aaa
test
lods
xor
popa
jecxz
into
cltd
cwtl
aaa
and
mov
popa
sarb
xchg
imul
mov
sbb
shrl
push
ret
pop
lret
arpl
mov
mov
in
xchg
sub
fstpl
sub
popfw
mov
pop
fsubs
bound
pusha
imul
xor
lods
inc
pop
sti
in
dec
mov
xchg
into
jl
sbb
call
sbb
add
addr16
cmp
dec
icebp
sub
sti
outsl
dec
test
outsb
sbb
daa
jns
lahf
shlb
mov
aam
in
push
mov
or
sub
adc
and
out
jge
iret
add
mov
pop
dec
aas
add
ret
sahf
add
movsb
xchg
ret
nop
xchg
push
sbb
xchg
xor
sub
pusha
cmp
aas
jecxz
test
and
xchg
addr16
adc
mov
sbb
jl
push
aam
cmpb
xchg
cltd
movl
xchg
xor
je
lcall
mov
mov
movsb
ds
lret
lahf
push
mov
and
add
cmpsb
push
sbb
push
dec
out
jecxz
fsubrl
mov
adc
test
sbb
into
cmpsb
dec
fs
sbb
jae
mov
aad
dec
push
arpl
jmp
jne
lock
inc
push
mov
or
mov
shll
call
popa
das
mov
ss
xchg
popf
mov
mov
add
jmp
mov
aaa
loope
mov
mov
roll
sbb
pop
pop
or
xor
push
fstpl
cltd
outsl
dec
pop
fnsaves
xchg
notb
fsubp
mov
adc
and
out
shlb
lahf
pop
out
jns,pn
adc
lahf
loope
mov
push
and
fidivs
dec
add
rcll
lods
dec
add
ljmp
cmc
scas
and
xchg
inc
mov
jno
leave
adc
loop
dec
or
lods
repnz
or
cltd
xor
inc
lret
mov
or
and
jbe
pop
repz
nop
xchg
xlat
xchg
das
pop
out
xor
adc
sbb
int
movsl
or
xchg
fdivrs
inc
inc
adc
xor
adc
in
insl
push
fs
mov
insl
cmpsb
sbb
shrl
mov
jbe
fistps
jae
mov
xorb
dec
sub
sahf
cmpsb
xchg
mov
sbb
dec
pop
outsb
ljmp
ret
push
scas
cmp
sub
dec
adc
in
mov
sub
mov
lsl
push
loop
dec
fldt
xorl
inc
pop
in
subb
mov
cmp
std
inc
fcmove
xchg
mov
fisubl
cmp
aam
or
aam
adc
in
popa
pop
in
xchg
dec
cli
mov
cmpsl
dec
cmp
rcll
js
into
ds
mov
inc
imul
popf
in
jns
sahf
sar
js
ja
mov
sbb
inc
cmp
nop
inc
inc
mov
and
mov
popf
lret
or
mov
mov
xchg
fisttpll
sbb
mov
sbb
mov
cmpsb
add
repnz
lock
pop
outsl
gs
xchg
mov
xor
cli
sub
je
add
fistps
dec
mov
adcb
sub
mov
mov
push
jmp
push
sbbl
push
jae
ja
sbb
clc
sbb
pop
pop
addr16
cmp
ret
lods
push
daa
jmp
leave
mov
test
mov
sub
mov
xor
push
sti
sbb
sub
mov
jno
and
loope
cmp
mov
outsl
addb
sbb
stos
jge
orl
add
xor
cmp
mov
rol
gs
jp
sbb
xor
add
cmp
shrl
inc
xor
sahf
pusha
out
dec
push
push
push
negb
test
cmpsb
xchg
fcmovbe
inc
push
dec
sub
insl
mov
mov
inc
arpl
mov
iret
jns
cwtl
je
jp
dec
push
repnz
aad
pop
addl
cmp
add
call
jno
xor
push
jae
stos
mov
and
adc
ljmp
iret
mov
jp
jb
outsl
pop
lcall
add
or
xor
mov
xchg
and
fisubrl
mov
xchg
cmp
scas
dec
shll
inc
outsl
fwait
ljmp
jg
push
and
cli
add
in
add
lahf
lods
popa
jp
ret
cwtl
out
and
jmp
push
mov
and
push
pop
les
lods
notb
jg
push
enter
dec
or
pop
cli
mov
push
gs
in
push
add
dec
lock
scas
test
push
jne
inc
andl
ja
and
out
testl
cmc
xchg
cmp
out
scas
lock
inc
pop
jmp
je
outsl
xchg
xor
sbb
nop
ret
mov
xchg
cmpsb
popa
xor
out
mov
in
test
add
aaa
add
jnp
add
je
bound
popf
loope
and
adc
imul
in
es
xor
xchg
jle
loop
popf
lock
inc
mov
ss
and
adc
out
or
and
iret
add
lock
bound
mov
or
icebp
addr16
xchg
jb
iret
pop
adc
lcall
testb
or
aaa
xchg
stos
out
es
sahf
xor
mov
stos
sbb
aas
cld
fimull
lods
adcl
xor
popf
lret
jmp
or
mov
mov
out
mov
pop
cmp
mov
pop
cmp
sbb
out
out
rclb
pop
add
cs
mov
mov
pop
cmp
cwtl
adc
jle
fs
pop
push
stc
repnz
cmp
jnp
sbb
mov
in
mov
sbb
out
sbb
mov
push
lds
in
mov
adc
sub
sbb
sarb
clc
fistl
ja
inc
xor
jns
rcl
push
dec
pusha
out
clc
cmp
inc
dec
lea
fs
dec
push
push
lret
push
sbb
sbb
sub
cmpsl
add
or
les
das
pop
push
sub
pop
fwait
or
mov
cmp
and
mov
scas
cwtl
movsl
ficompl
into
xor
mov
cld
mov
add
fwait
xchg
icebp
or
das
hlt
fcomps
jo
test
test
ficompl
lahf
std
mov
pop
xchg
sub
pushf
rcll
cmp
pop
push
lret
sbb
je
and
xchg
rol
call
mov
ds
repnz
aaa
cmp
insb
mov
push
mov
in
js
aad
xlat
lock
sti
loopne
xchg
push
sub
aam
xchg
mov
mov
fwait
adc
mov
test
mov
jb
jmp
loop
daa
fstps
push
mov
xchg
fcompl
push
loopne
out
fwait
clc
sbb
mov
dec
push
push
fmull
adc
mov
in
jb
ds
addl
pusha
out
lahf
pop
xchg
sub
push
dec
sbb
cli
mov
sbb
mov
pop
add
lret
push
add
pusha
popa
aad
mov
jmp
sbb
push
xchg
pop
mov
mov
sbb
pop
inc
mov
jmp
inc
movsb
pop
cwtl
pop
imul
insl
xor
iret
jl
loop
test
rorl
and
bound
xor
cmp
push
daa
lds
mov
rcl
xchg
jg
cmpsl
mov
push
add
pop
pop
rolb
ret
mov
push
cmpb
call
sub
dec
xorb
or
mov
xchg
or
xchg
ja
testl
cmp
std
jmp
jo
or
les
cltd
pop
mov
mov
mov
ljmp
and
pop
xchg
dec
push
mov
xchg
dec
inc
scas
xchg
in
mov
dec
cmp
fs
into
js
mov
inc
sub
sub
xor
aad
loope
jmp
sbb
add
lods
add
in
jnp
jo
inc
cwtl
aaa
mov
cli
test
jae
add
xor
mov
sub
adc
mov
movsb
leave
fs
cld
xchg
sub
adc
ja
mov
pop
or
adc
xor
inc
jge
repnz
adc
loop
jae
sub
sub
cmp
or
sbb
stos
mov
mov
leave
mov
xor
sbb
pusha
mov
mov
sbb
lods
out
insl
pop
jno
lods
stc
daa
push
sbb
inc
jg
les
mov
or
ds
fwait
rorb
aaa
fs
mov
adc
push
dec
mov
push
sbb
xor
ljmp
add
cmp
push
push
mov
insl
or
xchg
mov
xor
rcrl
cmpsl
mov
dec
add
cmp
lcall
push
aad
orl
mov
in
sahf
jge
sub
sbb
and
xor
jge
dec
add
fbstp
pop
adc
jmp
test
lods
insl
and
mov
adc
jne
leave
bound
jge
icebp
xor
pop
or
sbb
pop
sub
or
movsb
xchg
pop
lods
dec
fnsave
xor
int
xor
icebp
xchg
cmp
xchg
ljmp
cltd
pop
jge
and
lahf
dec
jmp
dec
xor
adcl
leave
pop
mov
push
xor
pop
cmp
sub
int
push
mov
mov
jmp
cli
stos
subb
sbb
add
dec
stc
pop
inc
jns
stc
mov
out
xchg
lret
into
mov
popf
outsb
and
insl
mov
fisubs
testb
push
fs
push
fimuls
mov
mov
cmp
aam
xor
jl
xchg
and
push
stos
cltd
adc
sbb
push
or
push
das
jmp
pop
or
xchg
movsb
cmp
sbb
jae,pn
mov
jp
stc
call
and
push
add
and
push
lret
inc
mov
cld
mov
mov
pop
sub
rcll
lods
dec
mov
mov
mov
andb
mov
cmc
je
xrelease
mov
fldenv
dec
je
xchg
push
xchg
add
cld
popf
xchg
cmpsb
cmovge
mov
push
cmc
scas
arpl
fmull
add
aam
arpl
lds
dec
push
shlb
fidivrs
jb
push
out
push
jg
cld
in
xchg
rorb
outsl
mov
adc
xor
xlat
out
jbe
incl
mov
sbb
outsb
dec
rorb
rol
xchg
and
outsw
sahf
jo
and
dec
xor
mov
sub
imul
mov
mov
fucomp
mov
call
jbe
and
jae
popf
mov
xchg
and
fnstenv
mov
clc
sub
pop
mov
dec
lret
mov
add
or
sub
cmp
fstps
mov
in
bound
fwait
lods
cmp
mov
pop
jl
dec
pop
scas
and
outsl
lods
popa
gs
add
sbb
shlb
iret
jns
add
ljmp
lcall
cmpsl
xor
jb
test
test
jge
hlt
fsubrp
mov
outsb
xchg
nop
push
loop
sbb
roll
les
jl
pop
add
mov
fbld
push
je
adc
mov
sbb
loopne
out
push
loope
push
icebp
mov
stos
ret
scas
jmp
push
aas
mov
adc
dec
addr16
inc
popf
je
stos
int
les
or
rorb
daa
stos
rorl
fcmovne
lcall
jno
and
idiv
mov
test
adc
push
cli
iret
jne
aad
mov
inc
mov
mov
lock
int
leave
push
insb
icebp
out
std
mov
shlb
aam
dec
inc
inc
outsl
cmp
popa
xchg
jle
jo
jb
push
inc
ds
dec
shl
das
pushf
adc
inc
mull
ja
mov
dec
mov
out
sbb
lods
mov
lahf
aaa
in
lea
dec
cld
jecxz
jl
xchg
and
or
or
js
adc
pop
aad
or
mov
ljmp
mov
out
push
and
pop
out
in
cmc
lret
shlb
cwtl
xchg
fdivs
in
repnz
aad
sub
inc
adc
xor
or
scas
cmp
mov
lcall
mov
sbb
sbbb
mov
cmp
mov
scas
fldenv
xchg
pop
fwait
lods
pop
jmp
inc
mov
hlt
mov
call
pop
in
and
mov
jae
stos
andl
and
and
sbb
push
pop
int
pop
adc
rcl
cmpsl
ret
pop
cmp
and
xlat
mov
enter
mov
lret
xor
gs
fsub
push
mov
inc
dec
pop
sbb
or
lods
push
js
xchg
jno
ss
aad
lcall
or
xchg
inc
inc
mov
in
mov
scas
mov
popa
cld
rcll
cld
push
js
mov
xchg
xchg
fsubrl
pop
cmp
ja
jb
mov
aam
xchg
mov
dec
arpl
inc
dec
dec
dec
repnz
testl
pop
bound
xchg
jnp
push
andl
movsl
pop
inc
testb
xchg
in
das
repnz
lock
lahf
cwtl
ss
adc
je
in
pushf
xchg
xchg
enter
mov
pop
cmpsb
mov
sub
ja
mov
les
add
adc
icebp
imul
pop
xchg
scas
scas
sub
mov
mov
outsb
push
nop
mov
and
push
mov
mov
xchg
cli
cmp
xchg
outsb
mov
cmp
mov
pop
out
outsl
out
xchg
scas
push
xchg
pop
insl
psrlw
sbb
rcrb
insl
xor
jge
test
push
adc
scas
lret
stos
loope
add
dec
popf
inc
or
out
cmc
ljmp
jp
outsl
mov
int3
clc
dec
inc
add
cmp
pop
jae
or
bnd
scas
lcall
hlt
xchg
adc
push
inc
enter
test
jp
insl
add
fninit
das
leave
rolb
mov
inc
sbb
xchg
jnp
jge
repnz
dec
ficoml
mov
arpl
in
int3
sub
xlat
mov
add
mov
repz
mov
pusha
xchg
mov
test
push
xchg
pop
enter
jb
jns
pop
arpl
jg
cmpb
sbb
scas
adc
adc
rorl
gs
or
cld
mov
dec
jae
and
jg
xchg
push
js
loopne
stos
cmc
fs
mov
jb
mov
push
mov
push
movsl
mov
notb
adc
inc
stc
fwait
or
fmuls
enter
pop
push
or
lds
enter
jo
pop
push
addl
push
lods
lret
dec
mov
in
add
loope
jle
insl
pop
add
out
lret
test
push
add
dec
or
adc
bound
out
pop
add
push
das
ljmp
xchg
in
xlat
jno
test
adc
add
sbb
add
jnp
rol
mov
xchg
notl
pop
mov
jne
test
fnstsw
ljmp
lcall
add
dec
cli
or
loopne
in
cmp
inc
jns
inc
dec
mov
and
mov
fimull
jg
add
insl
out
jg
and
lods
xchg
cmp
movb
rcll
add
push
lret
inc
shll
shll
test
xorb
stos
pop
clc
sbb
jb
inc
push
ds
jbe
mov
push
inc
mov
add
mov
jg
mov
rclb
dec
sub
inc
or
mov
mov
enter
fwait
mov
cmp
inc
out
out
mov
jmp
negb
mov
jae
clc
dec
add
sbb
jl
xchg
add
sub
int
pop
pop
adc
xchg
cmp
outsl
sbb
and
push
imul
mov
leave
insb
mov
adc
xor
out
inc
icebp
pop
inc
cmpb
sub
mov
mov
and
outsb
push
lds
lahf
cmp
enter
mov
mov
sti
imul
je
adc
add
cmpsl
sub
pop
and
call
cld
push
ljmp
sub
scas
add
enter
test
sbb
xor
xchg
les
jge
push
mov
xchg
test
adc
cmp
imul
push
jl
push
xor
dec
xchg
xchg
adc
lods
dec
scas
xor
ja
push
adc
pop
cmpsl
fsubs
add
stc
fwait
mov
add
fistl
lret
mov
or
outsl
clc
adc
icebp
push
sub
push
sti
dec
and
fildll
xchg
jecxz
popf
lods
das
sbb
scas
lods
pusha
nop
test
jle
push
addr16
mov
dec
iret
push
movsl
lahf
sbb
sub
cs
int
jmp
dec
mov
aas
sbb
and
clc
sbb
btcl
ret
mov
into
hlt
rcl
add
pop
inc
adc
ja
pop
movsb
push
dec
in
mov
fsubl
mov
sbb
in
adc
mov
incb
push
and
loop
mov
mov
movsb
data16
adc
out
xchg
cmp
out
iret
or
xor
pop
popf
addr16
jne
mov
rcr
jecxz
addl
aam
shrb
sub
inc
negb
out
addr16
xchg
test
cmp
jecxz
out
jo
clc
add
cmp
pop
movsl
fisttps
in
cli
pop
das
adc
scas
cld
jae
jb
cvtdq2ps
fldcw
xorl
es
mov
add
jno
cli
mov
xchg
push
jecxz
and
mov
ljmp
sub
add
mov
push
div
divb
lcall
testl
lcall
pop
jp
out
aam
fidivl
inc
sbb
adc
clc
push
pop
jb
mov
loope
clts
mov
add
cmpsb
outsb
nop
cmp
add
mov
xchg
imul
push
mov
cmp
out
sbb
push
jle
cmpsb
xchg
inc
jmp
sub
int
add
lods
jg
sub
out
push
fbld
xor
pop
test
fimull
jl
adc
dec
js
popf
jg
cmp
dec
pop
icebp
jl
out
stos
clc
xchg
sbb
repz
imul
cmpsb
sub
out
jo
jno
mov
inc
js
or
ret
add
sarl
and
sbb
xor
and
mov
addr16
ja
inc
jecxz
mov
inc
insl
int3
mov
lret
mov
push
pop
mov
jp
in
mov
jno
pop
mov
push
dec
push
jnp
xchg
lods
pop
loop
adc
pop
mov
out
fucom
aas
pop
pop
int
sbb
cmpsl
push
leave
xor
in
sbb
and
jb
jp
sub
ds
aaa
aad
fimuls
fwait
pop
sbb
adc
sbb
xor
mov
xor
jbe
pop
sbb
adc
ja
mov
jae
push
cld
pusha
or
loop
cli
sbb
test
push
dec
repnz
int
test
fisubs
ljmp
mov
shll
inc
das
or
pop
iret
mov
push
push
stos
addl
es
fcoms
mov
sarl
jecxz
cmp
lcall
repnz
ljmp
jns
and
pop
pop
jb
jne
mov
push
cwtl
sub
pop
mov
pusha
leave
jno
cmpsb
loopne
pusha
inc
sbb
inc
mov
mov
rcr
jne
xchg
cmc
iret
cmp
loope
cmp
addr16
mov
gs
add
push
inc
into
repz
fildl
stc
int3
jl
stc
or
frstor
dec
clc
inc
cmpsl
fadds
or
sbb
out
inc
sbb
test
test
add
in
cmp
xchg
jnp
mov
incb
pushf
and
fimull
xor
mov
out
and
mov
or
inc
pop
fnsave
aaa
sub
mov
pushf
mov
or
cmp
push
hlt
xchg
xor
hlt
aam
inc
add
fwait
out
das
lea
push
movhps
orb
scas
mov
push
mov
dec
jge
sub
lret
xchg
sbb
xlat
cltd
adc
push
pop
jbe
xor
add
xchg
adc
pusha
ss
xor
sbb
fs
pop
or
mov
aam
xchg
loopne
push
leave
xchg
insl
into
mov
dec
test
mov
mov
xchg
lret
in
stc
jns
mov
aam
mov
imul
dec
mov
sti
mul
loope
hlt
leave
push
int3
dec
imul
imul
lds
addl
dec
xchg
mov
jl
je
in
jp
xor
imul
rcr
jb
mov
mov
rol
lock
addb
jbe
or
dec
jns
jg
subl
insl
outsl
mov
jle
adc
cltd
or
mov
data16
mov
add
daa
shlb
in
cmpsb
and
pop
adc
xchg
int
in
inc
jmp
testb
jl
pop
cmp
and
cltd
movsb
cmpsb
xchg
mov
inc
inc
xchg
popa
daa
hlt
cmpsl
push
dec
xchg
mov
cmp
dec
scas
pop
js
jne
push
xor
pop
lock
loopne
je
leave
sub
daa
stos
fsubl
lock
mov
iret
inc
mov
dec
pushf
xchg
sti
aam
jno
pusha
cmc
inc
xor
arpl
pop
push
js
fidivrs
mov
orb
fs
xor
mov
insb
mov
pop
adc
fstpl
sbb
mov
dec
push
dec
in
adc
and
mov
push
cmc
ret
sar
push
je
rcl
sub
cmp
jmp
notb
jno
fsubl
in
mov
mov
inc
lahf
pop
imul
stc
fisubl
jecxz
cli
stos
and
imul
mov
shr
adc
lret
mov
repz
ds
ss
push
iret
in
cmp
pop
into
cli
and
mov
in
push
aaa
cmp
xor
clc
nop
push
sbbb
enter
fwait
pop
mov
movsb
and
sbb
pop
adc
clc
jnp
add
clc
and
cs
pushf
aam
xchg
adc
push
fidivl
push
cli
cmp
push
adc
mov
js
vsubss
movsb
cmp
or
out
mov
mov
ficompl
adc
jae
jge
fnstcw
cld
lods
je
inc
mov
add
lock
mov
negb
test
arpl
test
xchg
pop
push
scas
loope
add
inc
ret
sbb
push
cmp
mov
or
lahf
out
ja
inc
sub
arpl
jle
inc
sub
xor
xor
aam
inc
mov
push
mov
jl
jmp
push
sbb
fcoms
in
gs
jmp
push
dec
push
aas
jns
pop
xor
jl
inc
movsb
jle
ja
popf
jmp
or
inc
add
in
aas
sbb
iret
push
test
adc
movsb
dec
jbe
jnp
xchg
adc
lahf
sub
lea
cmpsb
shlb
sbb
int
pop
in
sbb
lret
pop
sub
xor
scas
adc
mov
mov
das
lcall
sub
icebp
orl
add
aaa
mov
cltd
out
test
sub
call
lcall
aad
mov
hlt
cmpsb
fsts
xor
bound
jg
xchg
sub
ljmp
lds
push
lcall
scas
xor
jge
rep
je
scas
aam
push
xchg
jo
dec
cmp
outsb
jg
leave
push
fildll
call
bound
outsl
xchg
xor
loop
cmp
inc
xor
dec
mov
mov
sub
fisttpl
subl
mov
loop
scas
add
push
int
xchg
inc
mov
and
rclb
jl
aad
mov
xchg
dec
and
mov
lock
pop
jg
pop
mov
xchg
imul
xchg
movsl
stc
mov
iret
cmp
inc
pop
mov
cmp
lcall
dec
int
imul
out
test
scas
mov
push
shr
clc
push
push
es
imul
rclb
jnp
adc
rcll
enter
fcmovbe
ds
ds
filds
mov
or
jb
mov
pop
pusha
sbb
int3
iret
bound
inc
add
adcl
test
and
mov
jb
sub
sbb
or
repnz
jp
in
mov
mov
push
mov
pop
xchg
sbb
cmp
ret
adc
icebp
sbbb
notl
lods
cmp
pop
fmull
sahf
sbb
cwtl
ljmp
sbb
fdecstp
mov
fldcw
xchg
mov
adc
jbe
outsb
mov
dec
adc
sub
enter
push
push
sub
lret
outsb
in
pop
push
or
rclb
adc
enter
gs
pop
pushf
mov
and
iret
movsb
or
xchg
cwtl
cmp
xor
add
jl
scas
cmp
loop
xor
sbb
add
jne
cmp
imul
sub
aas
push
pop
ds
adc
xor
pop
lret
xchg
pop
xlat
sarb
cmpb
adc
xor
icebp
sbb
xchg
sti
adc
inc
dec
repnz
ja
dec
arpl
stos
mov
sbb
mov
lret
mov
pop
push
hlt
fwait
cmp
adc
push
jno
sahf
cmpsb
dec
lods
xor
iret
xorb
les
lea
dec
dec
fbstp
cmp
add
mov
testb
dec
ds
add
inc
fisttpll
loope
mov
inc
pop
sub
pop
mull
inc
pop
idivl
pop
sbb
add
mov
fsts
jp
push
bound
xchg
pop
cmp
xor
fcmovne
mov
daa
sub
and
arpl
int
ja
dec
pushl
shlb
xor
imul
and
adc
loopne
xlat
inc
add
xchg
dec
sub
lods
enter
xor
cwtl
ja
lods
jl
mov
out
jp
fdiv
jecxz
sbb
pop
pusha
sub
adc
test
jle
jne
sahf
adc
mov
jo
push
cmp
cmpb
pop
xchg
in
sbb
cli
leave
push
inc
mov
xchg
shrb
roll
dec
dec
push
out
or
imul
push
fadds
pop
decl
adc
xchg
pop
leave
arpl
inc
dec
pop
mov
sbb
stc
mov
fdivrl
mov
xchg
insl
or
inc
add
ds
cmp
sbbb
div
xor
or
dec
test
and
adc
jge
rclb
xlat
loope
cltd
push
xchg
inc
in
push
lods
ret
pop
nop
repnz
arpl
add
insb
mov
jl
ljmp
idiv
xchg
mov
subl
fstpl
sbb
test
pop
mov
or
mov
pop
push
mov
mov
nop
sbb
fstps
aad
jg
mov
pop
mov
jnp
psraw
cltd
cmc
pop
and
imul
test
je
cmp
xchg
popa
loop
in
jg
das
es
out
mov
bound
in
outsb
mov
mov
test
movsl
mov
out
sub
adc
dec
dec
sbb
andl
sbb
pop
insl
cs
mov
jmp
sub
arpl
aad
jmp
gs
push
scas
adc
je
clc
dec
mov
mov
pop
mov
in
push
xchg
jbe
mov
pop
add
lods
add
inc
xor
cmpsl
mov
int
aad
push
nop
out
in
and
xchg
rcll
push
mov
loope
push
add
sbb
in
jo
pop
mov
lahf
add
test
xor
xchg
scas
outsl
repnz
divl
in
xor
ret
hlt
jmp
fwait
mov
out
dec
in
adc
repz
mov
push
pop
lret
sti
sbb
pop
fs
mov
jle
das
das
jl
jmp
push
in
arpl
or
xchg
mov
inc
sub
ret
cmp
ret
push
push
pop
or
mov
and
mov
adc
lods
push
sahf
cmp
ret
push
dec
sbb
dec
or
mov
xlat
jno
pusha
nop
pop
out
cld
das
addr16
pop
push
cli
dec
cld
push
xor
fstl
mov
mov
inc
jmp
fnsave
test
mov
push
lahf
dec
inc
ss
shlb
sbb
mov
scas
scas
xor
icebp
cmc
mov
negl
nop
jns
cmp
cwtl
push
fldenv
inc
mov
adc
popf
mov
ret
stos
inc
push
movsb
pop
fistps
in
and
mov
xor
lahf
lock
dec
and
test
cmc
pop
sahf
incl
orb
mov
add
lods
mov
cld
dec
loopne
out
mov
mov
test
xor
je
xchg
push
lock
ret
xchg
push
jne
scas
idivb
test
sbb
jmp
sbb
es
sbb
pop
mov
lahf
insl
sbb
negl
xor
aad
xchg
movsb
jno
ret
into
sarb
jno
xchg
fstpl
push
loop
pop
sub
icebp
add
ljmp
dec
jae
inc
lods
push
mov
outsl
and
push
add
lahf
pushf
popa
dec
stos
stos
das
pop
jmp
mov
sti
push
daa
xchg
add
lcall
mov
lret
sbb
sti
iret
bound
pop
dec
int
inc
hlt
enter
cmp
fwait
sbb
fldenv
push
hlt
movsb
stc
inc
jmp
push
mov
mov
mov
push
pop
clc
lods
gs
add
test
jae
cld
inc
jo
sbb
cli
mov
dec
cld
les
mov
out
jecxz
xchg
xchg
imul
add
fstps
xor
push
mov
lods
into
aad
and
cwtl
lret
dec
mov
xchg
inc
rcrb
mov
dec
movsl
scas
xor
xor
es
test
scas
push
jo
cwtl
aam
inc
mov
std
xor
enter
sbb
xor
cmp
outsb
inc
clc
inc
mov
jmp
cmp
repnz
cmp
xor
movsb
daa
mov
hlt
out
addl
jns
adc
movsl
mov
loope
add
fildll
sub
fwait
jg
jo
popl
rorl
roll
add
addb
mov
adc
or
lret
dec
fimuls
mov
or
movsb
popa
insl
pushf
mov
mov
sahf
push
sub
push
or
inc
push
adc
testb
arpl
and
enter
and
insb
das
cmpsl
pop
call
pavgw
push
loopne
cltd
and
in
sbb
push
dec
clc
cli
push
push
sti
das
cli
fdivp
std
daa
mov
shlb
inc
dec
adc
and
cmp
lret
jl
jle
inc
aas
mov
dec
adc
sti
or
lods
xchg
out
jnp
insb
sub
dec
pop
push
push
shrl
dec
add
pusha
xlat
or
and
in
out
cli
aad
ljmp
cmp
xchg
fisubs
xor
pushf
sbb
repz
lahf
sub
xor
fs
dec
and
push
xchg
push
dec
mov
test
sbb
jmp
outsl
int
or
subb
xor
es
shl
pop
movsl
js
push
xor
mov
add
xchg
mov
loope
repz
fsubrp
ja
mov
adc
shlb
sbb
fildl
adc
lcall
dec
rcrb
mov
add
enter
mov
popl
or
aad
ss
jmp
lcall
cmp
push
push
out
or
sub
outsb
jmp
add
xchg
ret
ds
pop
lcall
test
imul
inc
cmp
nop
xorl
mov
mov
lock
push
in
sbb
mov
rol
ror
fdivl
mov
int3
insb
and
inc
sub
sbb
loopne
int3
add
jmp
dec
push
lock
dec
xchg
shrb
lahf
imul
loop
int
nop
sbb
adc
in
stos
pop
or
jle
add
addr16
xchg
out
dec
ds
sbb
daa
iret
push
cmpsl
sbb
pushf
scas
shlb
push
scas
fnsave
in
sub
dec
ljmp
icebp
daa
jbe
mov
ds
or
std
fcomps
mov
mov
mov
mov
dec
sbb
mov
inc
shrb
and
sub
repnz
or
jbe
dec
icebp
lea
test
dec
add
out
push
ljmp
daa
dec
push
sbb
clc
nop
sub
inc
add
inc
push
mov
outsb
call
pop
arpl
add
iret
xor
fcomp
cmpl
xor
adc
test
add
fcomi
and
lock
imul
push
filds
stos
out
faddl
cmpsb
jg
dec
sub
pop
in
sahf
loopne
jnp
addr16
xchg
hlt
pop
dec
sub
mov
xor
sub
lret
test
loope
rcrb
out
orb
filds
mov
and
or
xor
imul
mov
adc
cmpb
sarl
and
sar
push
fstpt
gs
arpl
and
dec
xor
mov
sar
mov
mov
dec
arpl
adc
adc
cmp
or
data16
jbe
mov
sub
stos
xchg
ljmp
adc
icebp
xchg
div
mov
or
divl
and
shlb
scas
enter
popf
adc
jecxz
fnstcw
pop
iret
loop
test
fbstp
test
insl
cli
fs
or
in
mov
dec
mov
daa
add
icebp
lea
popa
enter
cmp
enter
andb
push
or
ds
je
fsubp
pushf
fdivl
pop
jge
mov
sarb
int3
lods
bound
or
push
pop
push
ds
sub
mov
and
int
mov
popf
imul
leave
in
imul
test
inc
shl
cmp
jo
adc
in
dec
jne
xchg
les
jecxz
jle
std
jg
xchg
rol
jo,pt
popa
xor
push
cmp
xor
rorl
out
sub
mov
dec
inc
push
mul
out
sub
jl
dec
or
ja
fwait
xlat
mov
adc
push
jge
sub
orb
cmc
aam
rorb
movl
jno
fdivl
stc
xchg
sbb
fldt
dec
dec
or
ja
xchg
pop
xor
inc
shrl
nop
pop
mov
fistpl
pushf
out
jno
or
cmp
add
sarl
mov
or
cltd
subl
and
xchg
sbb
adc
arpl
add
mov
ljmp
dec
and
adc
pop
xor
sbb
mov
add
mov
enter
aas
sbb
and
xlat
dec
mov
dec
jns
mov
je
and
jge
lds
rcl
scas
insl
arpl
insl
lea
mov
imul
and
mov
jg
cmpsb
test
push
arpl
sar
xchg
or
jo
flds
adc
loop
daa
adc
jb
mov
or
add
xchg
sbb
notb
mov
jge
movsb
xchg
dec
shrb
pop
or
loope
sahf
movsl
dec
data16
cmpsl
mov
fs
and
jg
jmp
std
dec
roll
movsb
inc
out
cmp
push
cmp
and
dec
mov
or
add
push
adc
add
mov
mov
jle
mov
mov
xor
xchg
loope
pop
jle
adc
xchg
test
cltd
data16
stos
sub
sub
cmp
dec
xchg
outsl
add
ljmp
cld
jmp
test
shll
inc
sub
and
inc
push
call
scas
inc
push
andb
mov
insl
xchg
sub
xor
insb
adc
testb
scas
cpuid
pop
mov
jle
push
jmp
jnp
push
dec
sbb
pop
pop
sub
call
jbe
cmpsb
sub
pushf
jmp
jnp
popa
pop
popl
int
das
data16
loopne
stos
inc
and
jne
adc
fimuls
inc
adc
sub
rcrb
popa
shlb
or
pop
fsubrp
mull
mov
int3
dec
add
mov
fdivrp
mov
cltd
fiaddl
jb
repnz
mov
dec
imull
imul
sbb
sbb
jecxz
mov
call
mov
mov
aas
pop
aas
cmp
push
nop
xchg
cltd
push
mov
andb
mov
shll
rol
cmpsb
shlb
jg
sbb
mov
out
int3
push
out
movsb
lods
movsb
mov
fwait
mov
and
lahf
rcrl
mov
xchg
sbb
jmp
outsl
shll
fs
stos
adc
fadds
roll
mov
xchg
out
test
adc
in
add
ja
or
loopne
cmc
pop
das
arpl
jne
cmc
pop
cs
cmpsl
mov
sbb
andb
fldl
sahf
mov
cs
clc
in
dec
mov
cld
mov
sub
out
incb
jo
cmp
lcall
sbb
jmp
xor
push
popa
adc
pop
psubw
test
ficoml
loope
dec
or
out
es
mov
sbb
sub
or
js
xor
ror
enter
add
ja
cmp
enter
xchg
and
inc
test
inc
test
sbb
dec
adc
sbb
inc
adc
test
out
fstps
ja
ret
and
jo
scas
sbb
jno
movsb
or
jo
jne
test
push
mov
push
add
cmp
pop
inc
and
sbb
leave
push
testl
inc
mov
cmp
inc
lret
push
xchg
frstor
xchg
aaa
rorb
sbb
pop
add
fdivr
jo
dec
xchg
sbb
adc
pop
push
mov
jmp
xor
test
repz
jns
push
imul
lods
mov
daa
loopne
and
or
out
and
sbb
repz
cmp
aad
idiv
cmp
add
ja
mov
lods
mov
push
add
jp
bound
mov
mov
fisubrs
pop
pop
jmp
insb
pop
nop
mov
jl
out
mov
adc
lods
stc
push
push
inc
xchg
dec
or
inc
fcomps
pop
jnp
fldcw
pushf
pop
or
sub
cmp
lcall
lods
mov
iret
mov
mov
in
xor
stos
ret
sbb
jo
js
mov
dec
lds
cmp
mov
sub
adc
pop
shl
mov
std
or
fdivl
dec
dec
sbb
fidivrs
inc
xor
and
jo
mov
sub
adc
stos
fnstcw
arpl
dec
mov
dec
pop
xchg
add
lock
cmp
cmc
outsl
andl
sarl
mov
sahf
dec
xor
enter
push
mov
and
mov
or
popf
mov
sbb
decb
lea
insb
lods
loopne
mov
repnz
icebp
push
loopne
push
aam
jecxz
stos
jnp
jns
pop
mov
in
lahf
push
jne
jnp
popf
pushf
mov
fsub
pop
shrb
insb
push
lret
pop
pop
movl
shrb
sbb
sbbl
inc
push
int
mov
adcl
inc
cmpsl
or
ljmp
jl
sbb
push
hlt
pop
mov
mov
in
or
mov
imull
cwtl
mov
arpl
mov
mov
int3
aas
xchg
fnstcw
aaa
stc
mov
cmp
push
mov
cmp
outsb
ret
fidivrs
popa
push
fildl
and
lret
mov
iret
repz
xor
xor
xchg
and
dec
mov
fdivl
movsl
les
cltd
das
orl
jp
mulb
sti
xchg
in
scas
sbb
or
sbb
rclb
inc
xchg
dec
icebp
and
push
sub
lret
xchg
cmpsl
mov
xchg
mov
movl
rolb
cmc
scas
cmp
sahf
sbb
dec
and
gs
push
out
bound
cs
fisttpl
jae
ret
mov
push
outsl
fs
cmp
push
out
fisubrs
lret
mov
sbb
mov
lret
pop
lods
iret
cmp
add
stos
inc
jge
arpl
ds
and
or
fsub
jns
loopne
jnp
imul
xor
mov
xchg
or
xchg
sbb
dec
clc
mov
dec
adc
push
jno
scas
icebp
mov
push
dec
insl
mov
or
data16
pop
mov
pop
lcall
fdiv
jmp
cmp
mov
xor
jmp
xor
cmpsb
stos
push
fdivl
xchg
lahf
int3
sbb
mov
sbb
imul
dec
lahf
jp
inc
cmp
mov
fsubs
std
test
mov
in
jnp
in
cs
and
in
jmp
shll
jbe
and
imul
sti
jnp
mov
push
jp
jge
and
idivl
and
xor
jmp
retw
push
push
xchg
movsl
lcall
addr16
out
imul
inc
xor
nop
test
repnz
andl
jne
lea
neg
sbb
mov
or
dec
popa
sub
mov
push
std
mov
fiaddl
clc
fs
shll
lock
dec
into
in
jbe
sub
lahf
addr16
xchg
into
pop
or
xor
pop
lea
adc
dec
and
push
inc
mov
nop
scas
cmpb
jg
jo
stc
add
nop
xchg
andb
jmp
and
enter
mov
mov
sbb
sub
add
mov
jbe
cmp
ret
dec
pop
mov
in
jo
add
test
cmpsb
mov
loope
aad
js
in
push
pop
xor
push
repnz
fwait
rol
test
xor
outsl
in
call
roll
lds
fadd
out
sti
jecxz
cs
cmp
das
adc
pushf
cli
add
sbb
cs
adcb
rol
movsb
stc
lods
movsb
loopne
jmp
mov
jge
shlb
cmovg
stos
test
leave
sbb
pop
add
fcmovnu
mov
neg
xlat
sub
lcall
rol
mov
xor
test
lret
lock
mov
lds
inc
xchg
lret
ljmp
jg
imulb
pop
pushf
das
aad
shlb
ss
xchg
jmp
xor
sub
add
mov
scas
aas
popa
cmp
mov
and
mov
test
jne
jp
rorl
imull
imul
call
subl
pusha
sbb
sbb
fs
xor
jge
es
daa
adc
enter
fstl
imul
adc
and
repz
sbb
pop
add
cmp
dec
lea
cmp
pop
testb
stos
cmpsl
jl
js
ljmp
jcxz
addr16
shll
hlt
inc
dec
xor
adc
rclb
into
rcrl
push
sub
mov
stos
cmp
imul
cld
test
idivb
sub
fbld
inc
shrl
daa
test
arpl
cwtl
aaa
cmpsb
pop
cmp
push
xor
jg
mov
jae
pop
lock
test
jmp
jno
push
and
and
fwait
or
leave
shrl
xchg
outsb
out
int
sbb
dec
dec
push
pop
insl
mov
xchg
cmpsb
push
mov
cmpsb
lea
sub
pusha
ss
sbbb
cmp
mov
mov
mov
inc
lahf
and
mov
mov
push
cmc
jno
ss
jecxz
pushf
shl
pop
loop
loope
lods
pop
test
das
es
adc
jmp
scas
push
stc
rcrb
shl
mov
or
popa
dec
adc
jae
outsb
push
popf
xchg
adc
dec
and
sub
sahf
in
cmp
dec
lods
cwtl
stc
fsts
sbb
loope
cmpsl
loop
inc
in
jb
push
pop
dec
fwait
push
fidivs
loopne
pop
adc
popf
xchg
mov
mov
jg
sbb
pop
xchg
cmpsl
adc
dec
into
hlt
fisubs
dec
andl
stos
xchg
sbbb
cli
mov
xchg
out
add
dec
fmul
pop
stos
jo
stos
jle
pop
idiv
sarb
mov
or
lret
rep
pop
sbb
test
xchg
dec
jae
call
push
add
cmp
into
inc
adc
in
cmp
pop
mov
xchg
mov
jecxz
fdivrp
daa
add
std
pop
mov
addr16
lret
cmc
aaa
outsb
add
dec
jle
test
cmp
outsb
xchg
std
or
push
mov
add
fs
pop
test
mov
sub
data16
inc
aam
fldcw
sub
das
mov
pushf
fsub
or
push
xor
movsl
add
sub
gs
mov
rorl
sub
dec
xchg
insb
das
mov
into
cmc
lcall
pop
xor
jo
add
push
pusha
push
dec
push
in
iret
jbe
push
jns
mov
scas
or
xlat
mov
lods
ret
mov
xchg
pop
xor
stos
jo
or
hlt
mov
daa
and
les
push
mov
in
xlat
push
cld
jo
rclb
add
dec
xchg
jmp
lods
insb
out
add
mov
dec
mov
add
fistps
je
push
popf
dec
out
bound
js
push
fmull
and
jp
mov
sub
sub
xchg
inc
test
aam
or
jp
fmull
inc
imulb
rorb
push
je
lret
dec
xor
out
xchg
xor
sbb
push
inc
insl
and
push
mov
mov
jb
fcmove
outsl
div
fs
ret
int
rcrb
lret
cmc
sub
enter
add
xchg
and
daa
xchg
xchg
xchg
and
in
pusha
leave
fistpl
jp
mov
idiv
xor
cmp
cmpsl
dec
jecxz
gs
cltd
mov
inc
xor
sarl
sahf
loop
jo
cmc
aam
idivl
gs
stos
shll
mov
push
inc
fs
mov
jno
bound
daa
adc
push
xchg
mov
and
mov
inc
xchg
dec
fimuls
pop
ja
cmpsl
les
lea
orb
ret
add
jns
sub
cmp
or
popf
add
push
mov
jg
sub
cmpsb
shrb
sbb
push
in
adc
dec
add
fisttpll
das
pop
inc
inc
insb
mov
aad
jl
in
pop
cltd
data16
ret
lcall
fstpt
sub
dec
cmp
aas
and
push
repnz
add
rolb
cmpsl
dec
movsb
jmp
xchg
dec
dec
or
lock
pop
sub
data16
xlat
inc
push
xchg
inc
sbb
dec
push
imul
arpl
out
frstor
inc
repnz
cld
xchg
in
xchg
add
jb
adc
scas
xlat
adc
and
jle
push
xor
mov
or
jg
adc
pop
cmp
out
sbb
dec
adc
and
mov
popf
inc
in
dec
sbb
mov
inc
aas
cwtl
and
dec
xchg
dec
jge
or
add
mov
and
push
fmull
xchg
dec
or
sbb
and
rcll
test
pop
dec
inc
sbb
loop
ja
cwtl
mov
xlat
into
and
jl
insb
repz
push
in
jle
xor
cmp
xchg
jno
xchg
sub
mov
sbb
jne
outsl
test
out
addr16
or
cltd
fwait
xor
xchg
mov
mov
insb
sub
jo
or
out
pushf
call
pop
insl
icebp
sarb
sbb
sbb
pop
xor
or
js
imul
inc
test
xchg
mov
es
ja
push
mov
xlat
add
pop
mov
push
cli
popf
push
in
adc
pop
das
mov
inc
pop
gs
cmp
and
or
int
xlat
cs
or
push
ja
jmp
and
fcoml
xchg
daa
jne
ja
das
push
dec
mov
aad
faddp
pop
hlt
roll
js
cli
add
dec
loopne
cld
repnz
test
push
movsl
pop
mov
scas
cmc
arpl
adc
or
push
fsubr
inc
ja
mov
imull
je
adc
adc
stos
cli
xchg
or
cmp
push
push
insb
pop
mov
sbb
aas
imul
and
xchg
test
repz
lcall
popf
movsb
add
ja
ja
fnsave
cwtl
mov
insl
jbe
mov
shrb
push
mov
jg
movsb
mov
xor
cld
and
or
mov
push
je
mov
shll
pop
xchg
push
sub
scas
push
rclb
iret
add
xchg
daa
movsb
sub
and
mov
mov
call
sub
adc
xor
inc
pop
iret
rcll
fs
sbb
shl
lea
test
sti
add
fwait
sub
mov
jns
repnz
ja
inc
xchg
movsl
cmp
cmpsl
ljmp
jl
outsb
add
pop
sub
out
or
or
fsubrs
push
inc
adc
push
ret
out
loopne
adc
dec
and
test
dec
loope
sbb
mov
pop
dec
fwait
jb
inc
lods
daa
or
add
push
stc
cmp
ja
aam
sbbb
sub
mov
imul
sbb
neg
jp
ret
clc
je
dec
cmc
mov
test
cwtl
cmpsl
inc
mov
orb
sbb
and
movb
cmp
and
arpl
dec
test
inc
subl
push
adc
or
inc
dec
jl
mov
cmp
scas
movsb
pop
or
adc
shll
in
jnp
fldenv
mov
push
jno
fdivp
movl
cmpl
xchg
mov
repnz
add
and
mov
cmp
pop
mov
lea
jmp
dec
addl
dec
mov
mov
outsl
mov
add
jne
ja
dec
cltd
mov
sbb
ds
iret
sbb
or
push
xchg
addr16
cmpsb
adc
push
ljmp
add
jmp
outsl
sbbb
mov
mov
adc
push
push
insl
push
imul
pop
shr
and
jmp
jne
add
cs
adc
sub
xor
adc
xchg
dec
xchg
iret
inc
enter
shr
scas
rclb
jbe
adc
jno
adc
inc
jmp
and
mov
int
xor
mov
xchg
sbb
pop
jl
leave
fucom
out
fcomi
pusha
push
popf
lea
repz
xchg
jno
cmp
sub
rolb
mov
mov
int3
mov
sbb
mov
cmc
dec
sub
xor
mov
mov
int
mov
dec
push
das
fs
sbb
inc
inc
inc
dec
jle
adc
pop
cmp
inc
ret
jge
xchg
out
pushf
xchg
push
stos
or
mov
movsb
push
in
dec
pop
mov
data16
enter
les
out
enter
pop
orl
and
mov
cmpsb
es
lahf
aad
add
jle
rorb
fwait
push
mov
sub
sub
cmp
xchg
test
add
jg
lods
fildll
xchg
mov
jae
in
add
out
mov
lea
xor
enter
sbb
jne
sbb
lahf
fcomps
sub
lcall
mov
shlb
es
sarb
ret
fs
adc
loopne
or
lods
or
add
daa
mov
rcll
sub
cmpsb
sbb
or
inc
xchg
out
cmp
mov
scas
sub
daa
cmpsl
cmovno
mov
lahf
daa
or
xchg
cmc
ret
adc
cs
sti
xor
xchg
das
sahf
and
mov
ret
jl
and
cmp
bound
pop
jne
and
or
out
push
mov
lods
xor
repz
pop
lahf
in
clc
lret
fcomps
and
xchg
leave
mov
adc
push
push
dec
xor
fsubrs
xor
pop
cli
loope
in
js
jae
lods
loopne
das
test
fwait
pop
push
and
add
inc
jb
mov
and
jle
movsl
loope
andl
mov
add
sar
lds
inc
mov
xor
dec
sub
pop
xchg
push
je
dec
push
xchg
sbb
xor
out
jne
and
stos
pop
shll
adc
xor
or
jge
cmp
js
adc
addr16
ret
int3
sub
mov
pop
fisubl
rcr
xor
in
orl
mov
sbb
shrb
dec
clc
mov
cmp
sti
inc
jmp
mov
mov
sbb
nop
or
and
push
and
jmp
sbb
mov
arpl
dec
shlb
jns
xor
push
movsl
cmp
adc
lods
cmpsb
pop
int
enter
aad
les
aas
push
lret
push
inc
gs
mov
mov
mov
or
cwtl
cltd
dec
inc
push
enter
adc
mov
mov
int
loop
push
rcrb
stos
int3
cltd
pop
lock
inc
mov
mov
addl
fsubl
loop
add
push
pop
movsb
add
push
std
test
movsl
and
cmp
sub
mov
cmp
ds
data16
mov
push
ja
xlat
xchg
add
pop
push
or
lcall
cltd
cmp
adc
inc
lds
aad
call
daa
pop
sub
and
or
fbld
lret
mov
mov
add
shl
mov
xor
insb
mov
adc
jle
sub
out
cmp
iret
cmpsb
xchg
dec
pop
or
jmp
lcall
cmp
into
shr
cwtl
lret
fbstp
popf
sub
mov
push
mov
popf
sbb
popf
dec
and
xchg
cmp
leave
add
cmc
and
xor
add
pusha
jbe
repnz
sbb
push
mov
pop
push
sarl
xor
rorl
pushf
push
sub
lahf
insb
stc
mov
mov
xor
lret
mov
shl
and
cmp
adc
mov
jp
clc
add
cmp
jecxz
aad
sbb
leave
inc
movsl
sbb
adc
push
leave
cmp
xchg
sbb
push
push
les
je
popf
sbb
scas
dec
in
add
shr
in
push
mov
add
div
jae
pop
sti
rcrb
insb
or
mov
cld
mov
addr16
in
push
push
in
imul
int3
dec
sbb
sbb
push
aam
pop
dec
or
push
mov
in
jb
jp
push
sbb
ljmp
mov
push
mov
adc
xor
or
push
lcall
into
pop
fistps
lods
sbb
dec
testl
and
mov
pusha
inc
roll
mov
jns
mov
repz
mov
das
sti
cmp
loop
mov
or
cmp
push
popa
cs
push
adc
ret
mov
inc
sbb
push
xchg
and
movsb
pop
pop
lret
xchg
mov
in
dec
lret
gs
lahf
nop
sbb
and
clc
or
mov
notl
shll
push
test
into
mov
mov
mov
outsl
ja
cmp
lahf
pop
icebp
mov
sbb
fs
faddl
and
and
mov
fwait
xor
loop
mov
or
idivb
daa
dec
rolb
pop
cmp
pop
daa
or
rcll
stos
inc
dec
stos
mov
arpl
out
outsl
sub
jecxz
lock
movsl
rcl
aas
rcrl
inc
stos
mov
mov
adc
out
adc
sub
sbb
lods
mov
ds
sbb
popa
and
stos
mov
cmp
mov
push
mov
pop
push
sti
shl
lods
test
xchg
mov
and
adc
negb
das
andl
adc
into
xchg
or
fs
or
aad
xchg
mov
adcb
lods
sub
ret
gs
das
fcompl
mov
lahf
cmpsl
push
xchg
ljmp
and
xchg
cmpsl
inc
adc
loopne
jle
or
daa
xor
test
inc
lcall
sti
in
mov
mov
arpl
rol
popf
shll
fsub
xchg
and
bound
mov
cltd
lret
ret
xchg
dec
sbb
xchg
clc
cmp
sarl
and
pop
mov
push
fidivrs
adc
cmp
dec
cmp
mov
push
loopne
ljmp
call
push
ret
xor
pusha
fidivs
cmp
incb
jge
cmpsb
adc
xchg
adc
shlb
pop
aad
dec
adc
cli
loope
sbb
xchg
pop
fdivp
fwait
mov
adc
lcall
clc
mov
sub
je
mov
shll
pop
add
cli
test
test
mov
xchg
mov
hlt
jno
xchg
inc
jecxz
fwait
pop
jne
dec
xchg
mov
pop
jge
dec
call
icebp
inc
mov
pusha
mov
jmp
rcrl
sbb
add
push
in
sbb
int3
inc
pushf
insb
xchg
es
lcall
mov
push
inc
nop
notl
outsl
mov
jbe
or
ljmp
int
call
or
arpl
lret
mov
pop
mov
push
mov
jbe
mov
pop
sub
jp
enter
mov
sbb
lret
xor
adc
inc
lock
fucomi
cwtl
xor
out
xlat
add
in
roll
push
shrl
adc
pop
sti
xor
pop
jl
push
mov
fcmovnb
cmc
scas
push
mov
and
jo
shrb
jns
pop
xchg
adc
mov
in
lods
mov
jbe
lcall
push
adc
je
dec
cmpsb
roll
mov
wrmsr
mov
stos
daa
aas
sahf
mov
jae
ljmp
xchg
movsl
cs
add
add
adc
mov
inc
cmpl
mov
mov
out
jno
dec
shl
in
xor
hlt
imul
orb
jmp
xchg
in
xchg
add
mov
mov
pop
cwtl
add
into
scas
out
mov
adcb
xchg
xchg
jmp
ja
mulb
repz
jmp
sub
daa
rcl
gs
out
leave
xor
cmp
testb
lahf
iret
lds
mov
pusha
or
push
jns
mov
test
lods
xchg
xlat
ds
xorl
cmpsl
jae
outsl
adc
add
or
leave
inc
idivb
cmc
scas
in
arpl
std
std
cmp
das
cmp
mov
rclb
xorb
adc
call
jo
mov
push
lea
repz
dec
jg
fidivl
adc
es
andb
mov
add
lcall
int3
mov
add
mov
adc
lcall
in
jno
mov
pusha
leave
sbb
add
cmp
rcll
sbb
cltd
mov
in
push
mov
push
sbb
mov
inc
lret
xchg
out
xor
sub
inc
rep
jno
cmpb
pop
aad
inc
fcomip
shll
popa
js
invd
aaa
jo
lea
bound
into
sbbb
push
std
fistpll
jns
lcall
cmp
stos
je
test
xchg
in
or
pop
xchg
mov
jmp
inc
loopne
jo
mov
push
push
dec
call
lods
lret
std
cmc
shrb
lods
fiadds
daa
xchg
daa
adc
and
mov
mul
movsl
ja
arpl
dec
aaa
es
lods
inc
mov
sbbl
out
scas
std
mov
imul
roll
outsb
arpl
sub
xchg
pop
ja
xchg
es
sub
mov
pop
mov
add
push
in
pop
outsb
inc
data16
dec
jle
mov
mov
inc
std
movsb
lods
jg
mov
inc
mov
mov
mov
insl
jb
sbb
cmp
or
addr16
or
leave
mov
filds
cmp
clc
pop
adc
fsubr
fcoms
fists
cmpsb
lcall
hlt
jb
dec
lods
sub
push
sbbb
push
jae
in
cmp
jnp
dec
scas
jne
sarl
mov
aas
pushf
cwtl
inc
dec
mov
push
ret
pop
imul
push
fnstenv
add
fldt
scas
add
popf
push
std
mov
enter
lods
push
mov
inc
outsb
test
insl
push
adc
fdivl
mov
jg
pop
cli
jbe
stos
daa
test
dec
or
dec
push
inc
addr16
repz
stos
loopne
movsb
pop
rcrb
lea
sub
ljmp
adc
call
aad
sbb
jns
dec
pop
loop
sbb
push
xchg
push
adc
push
sahf
xchg
call
jae
lcall
fnstsw
xchg
sbb
je
pop
and
fidivl
int3
inc
inc
mov
ss
aas
je
fisttpl
push
pop
push
add
xor
mov
sbb
mov
mov
mov
jbe
push
mov
outsb
rorl
aas
mov
clc
scas
inc
sub
jg
xchg
jbe
xchg
xor
sbb
mov
and
dec
inc
and
cmp
pop
and
sti
inc
cmpsl
xlat
js
add
sbb
into
sub
aaa
or
in
or
xor
loop
push
mov
testl
sub
or
and
xchg
sub
jmp
adc
xchg
pop
xor
ret
iret
lcall
scas
jne
sub
int
dec
xor
push
lret
je
hlt
clc
leave
jno
mov
mov
jae
fstps
sbb
int
sbb
fmull
mov
lret
cltd
ret
xor
or
push
mov
inc
daa
mov
in
mov
pop
jp
and
sub
cmp
mov
or
jle
movsl
xchg
jae
and
push
jae
in
enter
mov
outsl
push
jb
and
or
stc
nop
xchg
sbb
add
lods
inc
adc
stos
inc
pop
pushf
and
dec
pop
sbb
mov
mov
mov
imul
js
mov
into
xor
stos
sub
hlt
or
cli
mov
or
mov
jo
call
nop
dec
addr16
fimuls
pop
push
scas
add
add
je
dec
mov
jmp
filds
aad
addr16
jmp
xchg
jnp,pn
and
fnstcw
mov
dec
adc
inc
rclb
and
das
sub
int
rcrl
test
or
das
or
jp
inc
std
les
aas
sahf
jecxz
out
std
es
mov
add
stc
mov
jb
ficoms
push
sub
sub
shrb
sub
fidivrl
mov
je
int3
jbe
pop
mov
push
es
pop
loop
push
sti
pop
adc
jg
inc
lock
sarl
rcrb
rcl
arpl
sub
sub
sbb
lods
dec
xor
pop
jmp
into
pop
dec
sbb
and
shll
aad
xorl
pop
popa
in
leave
xchg
in
addr16
or
xchg
mov
mov
xchg
mov
xchg
cmp
xor
lock
loop
jge
insb
cmp
iret
js
sbb
inc
std
ret
xor
cmp
stc
fdivr
sub
xchg
cli
icebp
adc
pop
xchg
mov
cmp
adc
pop
mov
je
pop
addr16
test
jns
fsts
pushf
gs
rolb
ficoms
jno
ficompl
loope
adc
jge
push
push
test
orb
pop
jle
add
mov
cmc
sbbl
push
pop
dec
and
inc
sahf
mov
jbe
cmp
push
mov
mov
sbb
cmp
mov
addb
addr16
cmpsl
sub
inc
xchg
jp
xor
and
cld
mov
pop
mov
popf
sahf
ljmp
xor
jo
inc
sub
aad
inc
fwait
lea
pop
push
adc
cmp
fcom
dec
jno
enter
mov
in
and
imul
push
repz
adc
cmpsl
aad
mov
loope
addb
ds
jge
shrb
repnz
cmc
adc
movsl
in
mov
sub
dec
adc
int
or
leave
jl
cwtl
and
stos
int
bound
jmp
lret
inc
mov
xchg
test
loopne
scas
pop
loop
adc
pop
pop
and
mov
lret
adc
inc
shll
mov
jo
pop
sahf
enter
xchg
hlt
scas
sahf
push
cwtl
repz
fidivs
rcrb
adcl
roll
mov
sbb
and
mov
movsb
cld
mov
scas
xchg
xchg
lods
mov
loope
icebp
jmp
lock
mov
mov
mov
mov
lea
add
fisubl
movsl
in
mov
data16
push
xor
ja
out
dec
ret
add
add
mov
dec
lods
call
sbb
adc
pop
mov
mov
xchg
in
fiaddl
out
xchg
out
cmpsl
push
outsb
int3
jecxz
insb
xor
xchg
mov
jb
fwait
or
adc
push
cmp
xchg
popf
pop
mov
sbb
subb
enter
and
mov
mov
stc
mov
push
shll
ljmp
cwtl
lock
pop
dec
rolb
test
out
mov
clc
mov
cmc
xorl
jb
adc
or
xchg
loopne
jbe
in
dec
icebp
dec
and
cltd
sub
stc
lds
daa
lcall
lea
adcl
sarb
push
fucomip
ja
cmp
jmp
xchg
cmc
loop
lahf
jae
mov
sub
int
dec
mov
xor
mulb
iret
xchg
or
dec
loopne
loop
xlat
ret
in
testb
andb
push
inc
jecxz
movsb
sbb
inc
cmp
cmp
loop
cmp
mov
lods
ja
push
push
add
insb
rcll
mov
out
sbb
add
push
idivb
mov
stos
or
fistps
fisttpl
insb
sub
test
iret
es
enter
es
push
ret
or
imul
and
shrl
pop
mov
ja
jle
or
lock
std
ss
repnz
out
mov
popa
cs
sbb
jmp
cltd
out
cmc
stos
dec
aam
movsb
mov
sarb
into
jne
mov
inc
or
iret
popf
shrl
or
or
lea
push
pop
push
inc
pushf
or
push
cmp
in
rcl
jmp
cmpsl
push
in
dec
dec
pusha
xor
es
stos
jecxz
jmp
push
jecxz
push
scas
cmp
and
xor
loopne
jecxz
xchg
loope
popa
lods
or
test
cli
jbe
fidivl
jg
cli
xor
inc
lods
ret
nop
sbb
popf
ljmp
lods
cmc
and
push
pop
jmp
fisttps
in
std
add
pop
mov
mov
push
mov
sbb
mov
xchg
cmp
out
push
mov
stc
mov
adc
aaa
insb
bound
and
mov
cmp
out
insl
cmc
lret
push
pop
xchg
push
loopne
mov
fcomps
xor
push
in
icebp
ret
pop
push
mov
push
lahf
inc
jecxz
sub
lea
in
xor
dec
adc
lods
xor
cmpsl
pop
mov
loop
movsb
sbb
popf
ja
hlt
jle
inc
inc
jne
or
jbe
jbe
and
and
dec
lret
adc
mov
push
cmpsb
and
push
divb
decl
sbb
ds
sahf
in
add
adc
out
mov
add
mov
push
adc
mov
or
sub
cmp
test
insl
out
dec
jp
lock
and
mov
adc
cltd
bnd
imul
dec
pop
repz
dec
pop
xor
jge
fldcw
ljmp
or
push
inc
push
insl
add
fiaddl
je
sbb
mov
sahf
and
ret
cmp
stc
mov
lret
mov
das
ljmp
movsl
sbb
jbe
clc
mov
cmpsb
cltd
mov
popa
xor
stos
xor
mov
pop
setno
popf
loop
mov
aam
xchg
sbb
shlb
outsl
adc
dec
push
lret
inc
push
jnp
cmp
push
mov
mov
add
ret
inc
in
mov
mov
mov
pop
into
sbbl
jnp
mov
loope
push
out
sub
cmp
xorb
jg
int3
push
cwtl
insl
xchg
sbbb
xor
je
popf
fisttpll
push
sti
xchg
lods
mov
add
and
ret
jae
xchg
xchg
js
jecxz
pop
xchg
test
pop
xchg
push
mov
es
mov
mov
stos
aas
add
jne
mov
add
pusha
or
scas
xchg
jnp
cmc
push
xchg
in
lds
pop
xchg
push
ljmp
rclb
dec
adc
mov
sub
dec
aaa
add
aas
mov
xor
repz
and
xor
fs
cmp
je
inc
aad
jno
cld
sub
adc
into
sbb
lods
lock
inc
xor
pop
push
push
test
sub
arpl
sub
add
push
push
aaa
dec
movsl
hlt
cld
push
and
xor
testb
cmp
mov
mov
jl
xchg
movsb
jg
test
dec
jg
jle
cmpsl
ret
sbb
nop
rclb
daa
xor
xor
xchg
mov
mov
and
shll
int3
jne
or
jns
mov
sub
mov
push
mov
cmp
idiv
nop
flds
scas
xchg
sbb
and
add
arpl
jbe
fstp
mov
lret
push
or
xor
in
repnz
dec
push
mov
shl
mov
popa
testl
mov
testl
adc
fadds
stc
sbb
scas
mov
icebp
mov
into
pop
hlt
push
push
jg
repz
sbbb
ljmp
jmp
fs
mov
adc
jbe
fxch
xor
and
movhlps
xor
das
cs
mov
xchg
sub
int
sti
mov
subl
and
pop
sub
ss
imul
sub
push
jge
rcrl
xlat
cli
movsb
shl
mov
push
ljmp
lods
fdiv
test
jmp
xchg
in
xchg
sub
in
xchg
sbb
cmc
les
and
je
inc
xchg
fs
push
xchg
fnsave
cmpsb
ss
aas
sbb
mov
and
outsl
rorl
shlb
test
adc
shrl
jns
lahf
xchg
xor
test
das
addb
outsl
or
cmp
pop
and
cmpsl
dec
inc
and
inc
ds
or
push
fnstenv
or
add
jo
push
mov
push
arpl
mov
outsb
xlat
stos
sbb
cld
mov
insb
xor
cwtl
pop
idivb
out
jg
out
nop
movswl
xchg
orl
jno
inc
flds
bound
inc
bound
mov
jecxz
sbb
pop
or
arpl
int
js
pop
out
jae
xor
stos
or
daa
fistpl
insb
lock
jecxz
test
sarb
std
stc
test
insl
hlt
flds
ljmp
roll
pusha
or
sti
fs
je
jg
cmpsl
inc
cltd
mov
dec
adc
inc
mov
mov
cmp
jae
or
mov
add
xor
lahf
in
addl
inc
stc
out
out
les
repnz
jmp
xor
or
mov
into
cltd
sbb
test
mov
adc
in
mov
fucomi
jae
or
stos
out
xchg
repz
xchg
add
clc
fildll
sbb
lods
popf
popa
push
test
pushf
testl
lods
jecxz
pop
lahf
xor
mov
add
and
stc
fistpl
mov
sub
mov
iret
out
call
push
jae
lret
js
rolb
mov
dec
xchg
cmp
fwait
int
mov
pushf
cmpsb
pop
xlat
jno
mov
adc
mov
cmp
loope
getsec
cmc
mov
inc
int3
imul
push
imul
pop
pop
mov
mov
ja
mov
mov
mov
aad
cmp
sahf
push
pop
enter
mov
pop
out
xchg
int3
out
outsl
enter
shrb
stc
ret
fadds
fstl
add
adc
fcmovb
jge
or
sbb
movsb
xchg
lahf
and
repz
jno
neg
lods
ss
mov
in
inc
ljmp
cmpsl
sti
test
cmp
je
insl
adcl
stc
xchg
lret
jbe
fistl
xchg
cmp
xlat
repnz
mov
add
andl
mov
out
and
add
pop
push
out
ljmp
int
push
loopne
stos
adc
les
push
sub
dec
xor
ja
mov
orb
repz
jp
cmc
jnp
sub
repnz
pop
add
ds
daa
sahf
sub
rclb
pop
cmp
sahf
mov
jecxz
out
adc
dec
inc
cmc
sub
sub
mov
dec
cmpsb
jbe
divb
mov
testb
jge
das
imul
push
jbe
xchg
or
sbb
fldt
add
dec
lcall
xchg
dec
test
imul
jae
mov
imul
stos
lds
cli
fldt
ds
in
fdivs
int3
lret
add
mov
rolb
mov
gs
or
pusha
add
aas
xor
sarl
scas
aaa
pop
dec
dec
std
fidivs
cmpsl
bound
std
sub
sub
sub
cmp
fidivrs
mov
es
cld
inc
inc
jmp
stos
repnz
ljmp
and
fmuls
adc
jmp
cmp
sbb
sti
jo
popa
pop
xor
inc
pop
in
jno
xor
insb
stc
push
sub
scas
jmp
adc
es
ljmp
lahf
xor
inc
ljmp
jbe
mov
arpl
lret
imul
aas
sbb
mov
cs
push
call
push
mov
call
xor
jle
stc
push
and
sbb
ds
or
nop
mov
jge
xor
cli
or
jbe
sub
sbb
xlat
mov
lret
mov
or
sbb
dec
push
mov
mov
dec
mov
pop
inc
mov
hlt
outsl
mov
es
movsl
inc
fcompl
fcmovnu
fs
addr16
or
or
icebp
add
add
xor
mov
mov
in
or
lcall
cltd
and
ja
mov
out
push
fmull
sarl
cmp
push
mov
push
aad
stos
fstl
xchg
mov
fidivl
testb
imul
mov
add
push
mov
jmp
inc
dec
pop
fs
bound
sub
add
dec
sbb
mulb
sbb
push
push
iret
addr16
mov
jg
xor
sbb
jae
mov
mov
xor
cmp
sahf
sub
push
push
outsl
push
inc
push
aam
add
add
es
xor
ret
sub
mov
pusha
and
inc
or
arpl
lret
push
jae
insl
mov
ds
ret
xchg
mov
enter
mov
adc
dec
cwtl
pop
fistpl
mov
gs
pushf
push
and
in
mov
or
aas
sub
ja
cmpsb
xchg
xchg
das
popa
fstl
fsts
jge
pop
lcall
mov
pop
push
push
cmp
mov
cwtl
adc
jae
push
sub
daa
enter
sub
movsb
ds
pop
and
dec
jnp
dec
addr16
jnp
lods
sbb
adc
repz
subb
in
pop
fstpl
aas
bound
mov
jg
xor
xchg
insb
dec
dec
movsl
fisubrs
sbb
jge
dec
loop
mov
push
bswap
in
mov
shl
mov
mov
cs
cmp
xchg
xor
out
cld
push
push
clc
pop
xorl
add
out
lret
jo
cmpsb
je
dec
lock
cli
leave
mov
ds
dec
sti
jbe
or
fdivrl
sbb
jo
popf
enter
pop
neg
sbb
jno
sbb
fdecstp
je
mov
lea
and
adc
cmp
test
pop
dec
xchg
pop
lock
bound
loopne
and
mov
add
xor
push
mov
xchg
popf
xchg
fdivp
cmp
push
fisubs
adc
dec
mov
insb
sbb
cwtl
adc
fcmovne
outsb
dec
leave
inc
jbe
or
or
xor
xor
add
mov
int
mov
mov
mov
loop
lret
add
mov
ret
sub
pop
clc
dec
js
out
cmp
mov
sbb
or
out
sbb
sarl
or
xor
fistps
gs
cmp
notl
mov
xor
nop
sahf
addl
sub
xchg
cmp
sahf
loopne
sub
or
add
mov
clc
in
and
mov
das
cs
inc
adc
test
mov
adc
stc
stos
out
add
xchg
stos
mov
xlat
xorl
or
icebp
outsl
loope
js
mov
pop
push
cmp
cmp
ja
cmpsb
mov
dec
fstpt
mov
push
jae
jp
lds
movsl
cmc
movsl
lahf
cld
or
push
sbb
das
cmpsb
lahf
lods
push
shrl
pop
cmp
insb
rcrb
sub
lret
jle
cld
or
cltd
jno
dec
cld
mov
mov
test
xchg
mov
aas
sbb
push
xchg
mov
add
dec
jmp
cmp
lcall
push
popf
leave
xchg
push
xchg
push
adc
lds
data16
fistpll
in
les
jg
cmpb
das
int
ss
sahf
fldenv
jmp
dec
and
es
sbb
test
sub
jge
xchg
shr
cmpsb
rolb
jb
cwtl
in
and
mov
mov
xorb
daa
adc
decb
rcrb
mov
inc
es
shl
sbb
dec
pop
ljmpw
mov
sbbb
ret
nop
and
inc
push
mov
andl
adc
out
sub
lcall
sbb
js
or
mov
mov
adc
or
inc
shrb
inc
xor
sbb
dec
sub
inc
inc
ss
and
inc
add
mov
pop
lret
fistl
sub
mov
fisubl
dec
shlb
and
fstpt
arpl
test
dec
cs
mov
adc
push
adc
in
pop
mov
adc
mov
aad
or
int
sbb
aaa
xor
mov
mov
inc
lods
sub
sub
lcall
repnz
jbe
rcrb
push
popf
sidtl
ljmp
test
std
xorl
sub
push
jle
mov
xor
shrl
push
jno
add
and
pop
mov
mov
jae
adc
call
push
lret
test
pop
push
lcall
or
jmp
repz
jmp
xchg
movsb
mov
gs
test
lret
adc
xchg
jb
xor
push
out
or
mov
add
fdivs
in
xchg
popa
and
in
fildll
movsl
xchg
jae
cmp
out
sub
es
sbb
push
and
sub
push
rcr
imul
mov
xor
rcll
jmp
pushf
int
add
insb
add
into
inc
mov
lods
and
inc
das
push
and
shlb
xor
and
lahf
mov
cwtl
pop
std
data16
sbb
dec
out
cmp
mov
scas
xor
arpl
sbb
cmp
movsl
inc
sub
xor
xchg
inc
lret
adc
jae
int
jne
add
popf
nop
cs
mov
cmp
xor
jg
cmp
mov
fwait
cmp
jl
adc
shlb
mov
push
xchg
icebp
ljmp
lock
and
js
test
mov
int
aas
int3
or
push
jp
sti
cs
and
mov
push
sub
xor
enterw
pop
addr16
xchg
push
roll
inc
iret
imul
inc
xor
xchg
lds
add
add
std
push
in
aaa
call
xchg
sbb
sub
push
xchg
inc
and
lret
mov
push
push
and
add
jmp
das
or
out
inc
sub
out
jae
mov
int3
cmp
and
xchg
inc
fstl
jbe
cmp
push
in
sbbl
ret
adc
xor
icebp
or
pop
movsb
iret
mov
lahf
jae
pop
push
push
pop
orl
scas
sbb
les
mov
inc
mov
inc
mov
cmpsb
test
repz
push
shrl
sub
mov
sbb
jns
out
inc
in
push
pusha
mov
leave
lods
xchg
adc
mov
push
jb
ljmp
ds
iret
fstpt
mov
push
mov
or
inc
inc
rcl
movsl
mov
dec
or
sub
xchg
divl
ret
xchg
cmpsb
ljmp
xchg
or
test
ss
mov
jecxz
pop
decb
clc
add
mov
or
das
mov
call
ret
jae
jnp
inc
fstpl
adcb
rcl
ss
sub
push
sbbb
jmp
add
cltd
xchg
xlat
adc
push
out
pop
pop
dec
aaa
mov
test
rolb
cmc
incb
or
sbb
push
loop
ss
xchg
scas
cs
pop
pop
fwait
jae
ss
int3
gs
call
xchg
xchg
mov
cld
lcall
popa
jns
mov
ret
and
push
cld
mov
jns
cmp
xchg
jns
mov
stc
sbb
xlat
jae
pop
sahf
mov
daa
dec
lock
into
cmpsl
call
insb
cmp
mov
jmp
xchg
xorl
mov
inc
mov
adc
mov
enter
and
clc
and
jne
jle
add
pop
inc
jnp
leave
shr
mov
int
and
add
mov
loopne
imul
push
sub
jle
or
addr16
push
jns
mov
jp
fwait
lahf
call
adc
dec
or
cmpsl
mov
lds
xor
push
test
gs
cs
push
mov
bound
adc
push
int
sbb
mov
shrb
pushf
jnp
int
aad
pop
scas
or
jae
push
iret
xor
clc
mov
fidivs
cmp
xor
maxps
sub
mov
or
popa
or
mov
ja
fsub
fisubl
jecxz
xor
insl
jmp
shlb
jge
sti
addl
popf
push
inc
jne
push
int
out
push
arpl
dec
imul
test
and
inc
cmpb
outsl
dec
jg
shll
mov
shl
inc
das
cmp
movsl
push
xor
or
or
daa
cli
stos
das
xor
sti
enter
dec
and
lahf
push
jne
xchg
add
popa
repz
das
push
lret
cmc
xchg
dec
mov
jo
mov
xor
pop
idivl
sbb
rcrl
or
jmp
insl
jbe
cmpsl
cmp
stos
jle
stos
ds
xor
ljmp
sbb
xor
add
dec
mov
popa
aam
mov
out
push
push
rep
mov
lret
sbb
adc
maxps
addr16
scas
add
loope
push
push
jge
cmp
xchg
push
and
mov
fcompl
mov
into
out
pop
imul
dec
sub
enter
jne
call
jmp
sub
or
ret
adcb
xor
pop
pop
cmp
jnp
and
test
inc
popa
jns
and
mov
repz
adc
fildll
sbb
jno
iret
lock
lea
fwait
in
popf
or
fiaddl
cmpsb
cli
aaa
sub
test
adc
nop
adcl
dec
gs
pop
ljmp
out
xlat
lock
xor
adc
flds
jecxz
xlat
mov
sub
mov
gs
pusha
mov
cld
loope
mov
fwait
testl
xchg
daa
or
test
clc
pop
mov
shl
std
repnz
xor
and
popa
mov
in
testb
fbstp
jge
jecxz
ficoms
inc
jne
mov
xchg
fdivl
cmp
in
shll
xor
dec
mov
or
jp
sarb
or
push
icebp
inc
pop
repnz
pop
loop
jb
ss
push
or
shr
adc
popf
jno
jns
pop
gs
popa
enter
mov
pop
or
xlat
addl
sub
sbb
adc
sti
pop
sub
test
mov
cmp
pop
add
mov
gs
jmp
pop
lds
leave
bts
dec
enter
jl
je
rcrb
dec
scas
dec
lcall
and
and
mov
in
scas
inc
lret
jmp
iret
lret
jge
mov
into
inc
sbb
mov
mov
or
push
inc
cmc
sar
pop
sbb
ds
inc
test
out
sarb
or
pop
enter
sahf
sbbb
rcl
and
negl
sbbb
loopne
cmp
sub
pusha
dec
sbb
push
sahf
jl
ret
or
fcmove
inc
and
jp
pop
ja
in
cmp
arpl
ds
lods
leave
xor
cmpsb
mov
add
jb
jmp
and
adc
sbb
dec
mov
cmp
loopne
push
dec
cmp
cs
int
push
in
and
add
scas
in
pop
lahf
pop
jae
sbb
in
mov
cmp
cltd
movsl
xor
and
lods
xor
push
pop
pop
pop
fildll
jnp
jbe
mov
stc
cmp
hlt
cmp
adc
inc
cli
es
jo
sub
cli
mov
outsb
fstl
mov
sub
mov
mov
or
add
jecxz
jb
sub
data16
add
push
into
stos
jne
scas
adc
xor
pop
sbb
shll
xchg
movsl
dec
jnp
aaa
in
cmp
adc
pop
ret
jae
push
mov
roll
push
cmp
mov
dec
aam
add
adc
cmpsl
hlt
fisubs
cmp
cwtl
test
iret
sbb
pop
ss
jo
or
push
cmc
dec
mov
cmp
cmpsb
mov
mov
add
lods
dec
mov
scas
es
pusha
mov
nopl
int3
fs
in
ja
lahf
adc
dec
add
push
fs
pop
shrb
jne
cmp
out
jb
ret
push
cwtl
adc
inc
push
dec
xchg
push
push
test
cmp
mov
out
les
cmp
mov
test
adc
nop
lret
loop
nop
popf
add
pop
call
sbb
in
stos
jle
xchg
mov
lret
adc
inc
test
enter
cli
jns
push
push
or
or
pop
out
add
fldt
xchg
push
out
push
mull
and
xchg
aad
xor
mov
or
addl
mov
leave
fdivs
daa
shrl
outsb
adc
cmc
or
jo
stos
inc
setb
pop
or
inc
xchg
sub
std
fsts
jmp
push
jg
xlat
push
sub
push
jae
pop
add
xor
jno
xor
clc
and
push
cmp
call
cli
mov
lods
jns
ljmp
test
jae
xchg
in
mov
imul
mov
mov
pop
xchg
mov
cmpsl
loope
sbb
jb
xchg
movups
sti
int
push
std
stos
fldcw
xchg
and
inc
jg
inc
inc
jmp
inc
dec
leave
jo
popf
xchg
xor
in
shrd
gs
lret
stos
inc
subb
hlt
cmp
add
and
mov
dec
add
or
es
inc
movsl
xchg
ret
das
fnstenv
mov
enter
xchg
sub
xor
fcomps
mov
testb
in
jmp
rcrb
shll
iret
aam
iret
lcall
push
pop
add
leave
cmp
cli
loop
xor
inc
and
jne
add
dec
out
aam
inc
ds
adc
and
adc
js
stos
inc
mov
repz
loop
jge
pop
cmp
iret
in
aaa
add
shrb
divl
push
pop
cmp
pop
mov
in
es
add
nop
sbb
stc
mov
jecxz
bound
fdivp
addr16
mov
in
xor
jg
out
mov
pop
mov
lahf
jae
pushf
push
call
push
xchg
xchg
inc
rol
mov
or
in
imul
jns
mov
push
imul
es
xchg
mov
fcmovbe
cmpsl
or
mov
jo
mov
loop
cmc
decb
mov
sub
pop
jge
decl
das
xor
mov
push
and
mov
jge
add
adc
ds
push
lods
jae
insb
aas
pusha
cmc
sub
sub
xchg
lcall
xor
lock
sub
cwtl
inc
cld
out
fstps
xor
sbb
push
xor
movsl
sbb
push
lock
push
xor
fidivrl
es
jo
push
push
mov
mov
shr
ljmp
test
pxor
adc
push
lcall
ja
push
lret
addb
movsl
xchg
ss
sahf
cmp
sub
mov
inc
bound
es
adc
shrb
adc
fdiv
dec
jae
imul
push
push
lcall
in
cmp
add
into
dec
outsl
aad
outsl
sub
pop
pop
or
pusha
mov
into
test
jle
push
fcoml
cs
arpl
xchg
stc
xchg
scas
jmp
mov
sbb
xchg
jmp
or
sub
ss
jno
pop
dec
loope
or
xchg
cmp
mov
shlb
inc
lea
sbb
push
dec
cmp
and
mov
ja
xor
iret
cmp
lds
mov
sbb
and
or
lds
push
pop
fs
fistps
push
inc
jmp
xor
inc
mov
pop
out
das
pusha
jp
jns
in
es
jecxz
outsw
mov
aam
das
inc
mov
or
mov
ret
pop
cltd
mov
shll
das
pop
aas
pushw
push
adc
and
jp
xlat
pushf
fildll
cmpsl
mov
xchg
in
pop
or
aam
rorl
lods
cmp
nop
outsl
into
push
sahf
cmp
adc
out
inc
movsl
xor
je
lods
mov
jb
and
ret
lea
fs
aaa
jne
incl
mov
fildl
lea
int3
jns
scas
fiadds
mov
mov
xchg
insl
ds
enter
iret
jg
movsl
push
gs
aam
sub
insl
sti
add
repnz
out
inc
mov
adcb
add
lahf
or
cmp
jo
lret
cld
scas
jo
test
inc
add
mov
in
div
repnz
jnp
push
pushf
cmp
or
cwtl
pop
sbb
fldt
and
jle
cmp
lods
mov
mov
sub
lahf
dec
stc
mul
in
lret
mov
stos
jne
iret
mov
notl
pop
inc
ja
fcoms
jge
scas
fldenv
or
push
and
into
adc
add
popa
and
std
andl
push
jo
ret
je
mov
stc
push
ljmp
dec
mov
pop
adc
xlat
or
loopne
mov
int3
inc
mov
jle
sti
inc
pop
in
mov
jnp
inc
adc
adc
adc
fcomip
mov
and
mov
mov
lahf
adc
movsb
mov
pop
cwtl
mov
mov
mov
sahf
jecxz
dec
xchg
mov
ja
jno
imul
fwait
sbb
fs
sub
stos
faddl
mov
pop
mov
add
adc
test
ficomps
cmc
aas
daa
pop
out
les
mov
dec
int3
leave
filds
repz
jbe
dec
cli
fadds
adc
mov
dec
push
movsl
push
scas
and
mov
cmp
inc
push
adc
xchg
pop
dec
mov
movsl
dec
sub
out
fs
and
xor
outsb
adcl
rcr
inc
lcall
sub
icebp
mov
xchg
mov
outsb
sarb
and
sub
movsl
xchg
inc
stos
clc
inc
and
jp
gs
test
sti
lcall
pop
push
repnz
and
dec
pop
leave
cmpsb
in
imul
sbb
clc
xor
mov
mov
out
jne
inc
imul
mov
shr
fsts
and
shlb
pop
cltd
mov
fwait
add
mov
sbb
mov
and
or
xor
in
and
mov
popa
pop
xor
test
sub
xlat
xchg
or
out
xor
inc
aad
mov
pop
hlt
inc
and
push
mov
cmp
inc
or
divl
daa
pop
ss
push
fidivrl
and
aaa
in
out
loop
lret
cmp
push
mov
clc
xor
mov
adc
dec
adc
es
mov
push
mov
xor
dec
inc
xor
sbb
out
dec
jg
jecxz
inc
push
sti
nop
sub
aas
cli
into
test
or
xor
xor
xchg
add
scas
sub
dec
scas
mov
xor
out
cltd
dec
inc
data16
cmp
cmp
add
icebp
jae,pn
adc
pop
mov
or
mov
into
stc
sub
imulb
repz
popf
stos
jge
lock
xor
lods
xchg
mov
add
xchg
mov
gs
mov
dec
or
fldl
jle
movsb
sub
imul
xor
push
in
pop
rolb
rorl
lret
xchg
inc
add
add
jmp
addr16
js
mov
movsb
popf
cmp
sub
adc
pop
or
int
jge
lcall
mov
out
in
sub
enter
mov
jnp
js
push
stos
cmpsb
dec
push
inc
gs
popf
pop
xchg
ja
arpl
sar
popa
adc
dec
push
notl
popf
push
push
ljmp
lods
loopne
xchg
iret
fsubs
addr16
jae
movsl
inc
imul
push
fs
sbbb
xor
test
cli
icebp
aad
jmp
push
xor
cs
adc
rorl
push
sub
xor
outsb
xor
nop
rorb
pop
lahf
into
pop
std
push
popf
in
xor
sahf
rcr
mov
push
scas
adc
add
fs
and
lret
fstps
sbb
ja
inc
ljmp
adc
pop
push
jo
jl
push
mov
out
push
je
pop
pop
xor
loope
mov
jne
push
jnp
push
sbb
test
and
testb
stos
psubq
xchg
in
lret
adc
xor
xchg
pop
and
dec
test
cs
adc
sbb
out
mov
sbb
add
in
xchg
xor
inc
fwait
add
inc
popf
popa
cmc
fnstenv
sub
jle
add
in
jne
js
ret
fisttps
dec
jbe
or
or
addr16
cmpsl
add
iret
pop
out
cmc
mov
cld
fldt
aam
repnz
push
in
pop
cmp
sbbb
pop
dec
add
push
pop
xchg
sub
mov
aas
pop
jge
loope
sbb
mov
gs
add
mov
imul
lahf
mov
adc
mov
enter
cmpsb
fisubs
sbb
push
xchg
dec
push
xchg
vpsubd
movsl
iret
sub
cmp
pop
stos
add
jp
push
sub
cmp
outsl
inc
ret
call
dec
sarl
dec
mov
and
pop
ja
adc
jecxz
xchg
out
dec
inc
mov
xchg
cmp
xchg
mov
test
cmc
mov
sub
daa
xchg
fadds
push
test
or
out
mov
data16
shr
outsl
sbb
xchg
mov
subb
aaa
ljmp
xchg
mov
out
dec
andb
hlt
rcrb
inc
aaa
mov
and
add
xlat
cmp
scas
cmpb
mov
and
push
lcall
push
xchg
arpl
and
ja
sbb
test
xchg
and
movsb
pusha
mov
test
out
in
pop
and
jnp
add
xor
std
jle
int
in
jge
shr
or
shrl
sti
out
je
push
pop
int
jbe
and
hlt
mov
lock
and
or
decl
sbb
inc
adc
dec
xchg
addl
rcll
js
pop
lock
leave
xchg
inc
faddl
xchg
lds
jno
sbb
push
mov
aad
push
shll
mov
and
cmpsl
cmp
sub
xchg
fcomip
in
cli
mov
xor
xor
dec
enter
loopne
jle
outsl
flds
insl
ss
mov
adc
mov
mov
sbb
or
dec
cmpsb
stos
imul
mov
pop
nop
addr16
xlat
sub
inc
mov
js
pusha
and
daa
inc
pop
push
xlat
popf
les
loope
enter
hlt
rorb
pop
in
add
orl
ret
push
fs
imul
iret
xchg
mov
ss
fistpll
subb
jbe
adc
jo
pop
sub
popa
loope
xchg
in
iret
fdivrs
lea
xchg
inc
push
sbb
popf
cs
mov
nop
mov
stos
push
std
push
neg
cmp
add
jg
pop
imul
bound
call
xor
push
ret
decb
pop
pop
cmp
mov
fsts
sub
fsubrs
sub
repnz
popa
pop
out
cmp
pop
rcrl
or
outsb
push
pop
scas
mov
das
mov
mov
roll
and
js
xchg
xchg
imul
test
fcoms
clc
push
jge
leave
push
xor
icebp
sahf
push
pop
or
pop
pop
sbb
push
aad
insl
lret
mov
add
adc
lret
add
pop
adc
sub
mov
fisttpll
shrb
push
pop
adc
outsb
mov
jns
inc
es
into
mov
icebp
stc
mov
or
cld
mov
xor
sbb
ljmp
ficomps
in
cs
and
repnz
mov
inc
into
imul
mov
fimull
pop
inc
in
shll
add
in
fwait
in
dec
mov
out
dec
out
jne
inc
lods
mov
leave
and
xchg
fbld
stos
jae
mov
daa
push
je
cltd
clc
js
xor
sub
outsb
fdivrs
mov
popf
cmpsl
adc
add
jo
dec
sub
push
gs
mov
clc
sub
cli
jmp
jle
sub
pusha
pop
and
lea
mov
mov
popa
inc
xchg
lock
jae
mov
pop
imul
pop
cmp
push
sub
clc
add
pop
gs
and
ret
xor
fs
outsb
popa
lret
pop
dec
add
aas
or
xlat
or
ficomps
and
mov
push
sbb
mov
lcall
in
cmp
iret
and
jle
jecxz
aaa
jae
sub
mov
sbb
popa
and
frstor
lea
subb
out
sub
mov
mov
setno
addr16
lods
out
dec
data16
divl
cmp
in
test
or
pop
cltd
imul
fsubrl
push
icebp
mov
jno
adc
mov
out
pusha
jmp
cmpsb
test
bound
mov
fwait
xchg
jne
mov
pushf
dec
add
pop
mov
pop
mov
cmp
arpl
sbb
jp
shl
pop
xchg
lret
jecxz
xchg
int
pop
push
js
or
dec
and
jb
add
movsb
jmp
dec
stos
imul
mov
leave
sbb
clc
mov
idivl
xchg
imul
mov
pop
lds
cs
mov
fstps
icebp
cmp
mov
xor
mov
fldenv
add
les
xchg
imul
rorl
pop
xor
cmc
xor
insl
out
add
outsb
mov
test
dec
mov
std
lret
jne
jbe
add
testl
xchg
xchg
or
jns
jmp
add
xor
sbb
sahf
test
test
xchg
ficoml
cli
push
cli
xchg
jge
adc
xchg
sarl
imul
pop
loop
inc
ja
sbb
jle
sub
and
lcall
fs
jmp
repnz
mov
adc
inc
movsb
or
mov
out
scas
test
pop
push
test
and
jge
jns
jge
out
mov
pop
loopne
adc
sub
inc
xlat
fdivl
push
xchg
loopne
cmpsb
sub
fdivs
dec
and
imul
out
inc
outsb
push
or
adcb
loopne
push
mov
stos
rcl
mov
cltd
push
jge
ljmp
fs
pop
stos
mov
test
inc
nop
jb
mov
cmp
xchg
fildl
mov
test
repnz
in
mov
add
jne
shl
dec
dec
es
rorl
in
test
stos
dec
push
sbbb
sbb
or
test
dec
add
jge
inc
orl
inc
call
icebp
jmp
pop
or
notb
pop
push
or
int3
cs
push
aaa
rorl
sbbb
in
sbbb
push
leave
or
mov
dec
mov
test
imul
rorb
add
icebp
xchg
leave
cli
cmp
ret
mov
fimull
pop
iret
xorl
dec
xchg
pop
subb
adc
jne
adc
outsl
xchg
lods
xchg
mov
jne
test
test
cwtl
outsl
stos
sahf
js
mov
lcall
inc
out
clc
sub
push
lods
imul
in
and
cmpsl
jmp
into
adc
rclb
pusha
inc
jns
pop
or
jmp
clc
cmpsb
xor
jg
stos
fcom
adc
inc
push
cmpsl
into
pop
pop
ds
inc
xor
sub
movsb
mov
ret
xor
mov
cs
add
push
jp
cmp
ljmp
jae
in
in
adc
mov
fisubs
mov
or
cmp
and
sti
sub
shlb
fidivrl
jae
pop
sbb
ficomps
xchg
sbb
in
adc
lea
push
bnd
xor
aas
jecxz
and
shll
mov
aas
xchg
cwtl
jns
call
rclb
cli
gs
std
jecxz
int
xlat
fstpl
out
adc
movsl
das
test
jge
mov
repnz
movsl
inc
mov
xchg
xor
sub
add
js
pop
push
daa
pusha
in
je
fdiv
pop
jmp
aam
in
jle
xchg
sbb
xorl
xor
icebp
shll
leave
int3
push
in
ror
cmp
repz
mov
add
std
lret
fdivl
sarb
mov
mov
pop
and
popf
add
xchg
sbb
cmpsb
jne
pop
testb
and
aad
mov
shll
inc
pop
jb
xor
cli
gs
xchg
fsts
orl
test
dec
in
jno
cmpsl
xchg
and
jae
mov
xchg
cmp
int3
push
loope
push
add
movsl
or
and
lock
ja
call
sbb
das
cmpsb
xchg
popf
xchg
imul
int
fadds
pushl
stc
scas
insl
cmpsl
jg
push
or
dec
lea
pushf
lock
cmpsb
mov
adc
pop
stc
cmp
push
mov
stos
ficoml
in
or
xor
cmp
push
cmpsl
test
and
dec
jmp
and
call
incb
mov
or
std
into
icebp
movl
cmp
jl
loop
je
mov
ds
sarb
lds
xchg
mov
cmpsb
mov
mov
loope
push
push
cli
mov
ds
clc
mov
dec
lcall
cmpl
gs
sbb
sub
mov
push
in
dec
dec
and
dec
je
mov
dec
icebp
xchg
adc
repnz
mov
cmp
pushf
add
inc
pop
sbb
dec
pop
or
lcall
test
in
popf
mov
mov
pop
add
jp
enter
mov
dec
adc
cmp
je
xor
stc
into
mov
hlt
clc
mov
fucomi
out
mov
mov
fcomip
mov
aaa
mov
ljmp
and
ja
in
cltd
flds
xlat
inc
fildll
adc
pop
bound
stos
aam
cltd
xlat
or
imul
pop
loope
addb
inc
inc
in
adc
outsl
sub
in
add
in
rcrb
cmpsb
push
and
aad
lods
movsl
rclb
ds
aaa
jmp
xchg
mov
sti
xchg
xchg
fstpt
push
xlat
dec
aas
inc
inc
jb
xor
add
pop
sbb
dec
loopne
into
out
dec
aam
aam
add
data16
or
mov
scas
cmp
jne
xchg
dec
ja
mov
in
jle
xor
lahf
adc
out
adc
shll
aaa
push
testl
rcrl
lock
lods
xchg
es
push
xlat
add
mov
stos
rcll
xchg
xchg
xor
paddusw
bound
xchg
std
push
insl
mov
jbe
mov
jo
test
push
mov
popa
sbb
push
in
cmp
sbb
push
idivb
pop
out
rcr
mov
mov
pop
rcll
cmpb
idivl
cmpsl
inc
adc
sub
ret
xchg
mov
jp
mov
imul
ja
sub
dec
aad
cld
in
cltd
and
xchg
adc
lret
pop
stc
inc
cmc
sbb
push
mov
sbb
cmp
sub
out
loope
movb
or
icebp
pop
mov
lahf
nop
sub
and
ret
pop
push
mov
sub
add
enter
adc
adc
fmul
cmp
divl
xor
leave
jbe
flds
add
mulb
cwtl
sub
shlb
dec
idiv
inc
aas
xchg
fdivr
mov
dec
dec
dec
ret
test
and
aad
dec
in
add
fiadds
mov
das
repnz
call
and
das
scas
xchg
mov
xor
jb
out
mov
fwait
mov
gs
cmp
xor
adc
mov
lret
fs
loopne
inc
je
inc
mov
lea
cli
lods
pop
daa
dec
cmpb
aaa
jo
mov
jne
mov
daa
xchg
hlt
icebp
inc
sahf
test
add
cmpb
imul
test
fisubl
test
in
push
int3
incl
test
les
loopne
mov
stos
jge
cmp
in
in
inc
ret
shrb
outsl
dec
repz
push
pusha
repz
les
dec
cli
inc
pop
ss
jp
and
rep
movsb
call
insl
cli
jmp
push
dec
fcomp
jnp
dec
lods
icebp
scas
mov
adc
adc
pop
push
dec
scas
inc
scas
hlt
mov
push
pop
insb
push
jg
pop
cld
cli
cmp
das
lea
cltd
fs
adc
pop
mov
and
jecxz
push
stos
and
pop
mov
jns
mov
aad
scas
and
inc
dec
or
mov
nop/reserved
stos
mov
sti
mov
mov
pop
xor
inc
rorl
rorb
push
cmc
add
inc
pop
and
xadd
jno
xor
test
sahf
jnp
jmp
das
pop
ret
inc
leave
push
jo
or
inc
outsb
push
cld
sub
push
jl
repnz
popl
mov
inc
stc
js
lahf
out
adc
lock
pop
in
lret
mov
nop
jp
fld
sti
arpl
ret
int3
test
movsl
xor
lret
jecxz
rorl
add
rcrl
or
mov
cmpl
dec
adc
xchg
push
aad
and
lods
add
fnstcw
loopne
cmp
pop
dec
inc
scas
xchg
in
lret
xchg
pop
test
lret
shl
push
or
dec
std
mov
js
mov
adc
jl
es
dec
jmp
int3
add
xor
pushf
push
mov
scas
mov
or
mov
inc
jo
push
sbb
roll
jg
je
out
mov
popf
les
xchg
test
mov
add
pop
ja
push
leave
xor
dec
sbb
ss
add
fnsave
js
adc
shl
rcrb
and
adc
sbb
popa
scas
jo
push
jge
lcall
aaa
jle
mov
dec
sub
ret
es
scas
xor
jae
sbb
jg
xchg
aad
ret
xor
sbb
mov
pop
or
adc
cmp
push
gs
jle
xor
sub
xchg
inc
filds
xchg
push
sbb
iret
push
adc
push
test
jne
arpl
inc
movzwl
adc
cmc
mov
jns
mov
fcompl
sbb
les
test
xchg
test
int3
stos
jne
shlb
cmp
aaa
js
or
mov
js
jb
fs
dec
and
outsl
sub
push
inc
fisubrl
stc
outsl
ret
mov
mov
mov
test
push
push
jne
or
stos
inc
cmp
push
js
addr16
movsb
cmp
xor
insl
ds
icebp
mov
popa
push
inc
and
sbb
scas
mov
push
add
xchg
mov
mov
movsl
fadds
xor
movsb
repnz
xor
adc
sub
ret
call
dec
sub
mov
dec
or
lds
mov
out
mov
daa
pop
negb
cltd
ja
jb
dec
loop
dec
jnp
jmp
xchg
decb
pop
out
mov
bound
in
rclb
mov
int3
outsl
pop
push
cmpsb
clc
sub
mov
imul
pop
jmp
popa
cltd
lea
arpl
jmp
mov
mov
ljmp
insb
push
leave
jne
sbb
iret
or
pop
adc
fsub
xchg
sbb
es
xchg
pop
cld
sbb
das
sbb
fwait
adc
out
out
movsl
repz
test
push
dec
push
das
xor
mov
aas
out
mov
push
lcall
inc
and
push
push
addb
mov
pusha
dec
xchg
adcl
jns
leave
popf
bound
fwait
push
jne
pop
ret
icebp
xor
dec
and
int3
sub
sub
jo
cwtl
or
inc
mov
sti
and
cld
inc
pop
pushf
repnz
sub
pop
mov
int3
jb
push
xor
nop
ret
xor
or
jp
enter
push
bound
mov
add
lods
lds
in
mov
adc
mov
repnz
fwait
jo
loop
mov
jecxz
xor
jbe
int
dec
add
cmp
fldt
inc
cltd
add
outsl
int
mov
lock
sub
stos
push
imul
xchg
fcomps
es
rep
pop
xchg
mov
or
push
addr16
sub
jmp
js
cmp
cmp
movsb
call
adcl
cmp
sbb
cli
cmpsb
pop
jmp
sub
loope
inc
aaa
jns
loopne
sbb
repz
idivl
push
pop
adc
adc
addr16
lods
iret
or
repnz
in
insl
jmp
fidivrs
ds
xor
int3
jmp
cmpl
aas
xorb
lahf
cld
cmp
aaa
pop
pop
lahf
in
push
ret
sub
lcall
xor
data16
out
cmpsl
push
push
sub
es
notl
int3
push
aam
and
int3
sti
les
mov
xor
cmp
pop
data16
cwtl
mov
repnz
movd
dec
shll
fs
mov
jnp
mov
add
pusha
popf
inc
std
xchg
fimull
imul
rorl
mov
mov
push
lcall
sbb
jle
mov
pop
lcall
test
inc
dec
sahf
icebp
pop
inc
fcmovnb
xlat
lea
mov
lret
and
sub
roll
fwait
xor
mov
repnz
mov
xchg
aas
sub
lds
popa
xorb
repnz
add
std
or
out
pop
pop
xor
inc
cmpsl
jp
iret
push
pusha
or
pop
jnp
mov
adc
daa
inc
pusha
jo
repz
sbb
cld
popa
mov
mov
in
loope
shrl
jmp
ret
pop
loopne
jns
in
push
and
sbb
push
or
fwait
xchg
inc
push
mov
add
insb
rcrb
jmp
mov
mov
rorl
inc
test
clc
repz
mov
aam
les
push
sub
shrb
movsl
add
xchg
push
and
cmp
pop
in
out
cmpsl
mov
das
xorl
inc
loope
mov
mulb
mov
adc
in
iret
pushf
push
repz
push
or
insl
and
das
mov
push
cmp
cltd
or
xor
add
jne
mov
nop
push
lret
xlat
jns
mov
rcll
call
test
fcoml
adc
and
aas
gs
leave
cmc
fimuls
imul
xorl
xchg
mov
sahf
push
scas
inc
dec
cs
cli
xchg
add
inc
inc
jno
jle
test
das
adc
pop
dec
shrb
ds
mov
ljmp
repz
and
inc
jp
pop
xchg
xor
xor
cmpsb
lock
mov
and
jg
lock
push
xchg
leave
movsl
and
pop
repnz
sub
repnz
std
shl
mov
inc
add
test
mov
loopne
xlat
lods
in
sbb
xchg
out
cmpsb
xchg
sub
aas
cmp
pop
jl
jb
test
xchg
stc
jne
test
lcall
das
mov
and
lahf
shrb
xor
mov
dec
and
sbb
popf
das
fld
imul
xor
cmp
mov
jmp
mov
xlat
int3
stos
lds
push
cmpsl
inc
in
ljmp
scas
loop
or
les
insl
jp
sbb
xor
or
pop
nop
jg
clc
outsl
mov
outsb
push
cmpsl
dec
or
xchg
adc
or
fidivrs
jns
mov
mov
js
push
ror
sub
shll
jl
testl
push
sbbb
inc
ja
int
cmp
gs
add
sub
test
ret
imul
jno
push
sahf
push
idivb
int
mov
enter
jae
or
movsb
sub
fimull
jne
cmp
in
or
or
adc
ja
pop
add
data16
pop
sti
sti
adc
je
dec
shll
sbb
jnp
sub
fidivrl
xchg
scas
frstor
fwait
hlt
or
adc
mov
jg
filds
and
jge
pop
mov
jb
push
sbb
pop
inc
or
lock
mov
cmp
outsb
push
dec
ds
pushf
popa
mov
and
insb
sub
cwtl
sbb
cmpsl
cli
xlat
sbb
adc
or
sbb
xor
mov
or
adc
cmpl
add
sbb
out
testb
xor
jp
mov
stos
adc
add
mov
mov
ficoml
leave
arpl
aaa
lcall
push
bt
push
dec
cld
cmp
pop
fistl
xor
mov
inc
mov
or
mov
pop
pop
ret
cmpsb
pop
mov
mov
and
in
cmpsl
inc
les
inc
mov
and
fists
xlat
cwtl
inc
lods
and
mov
jle
dec
fs
pop
repnz
lcall
push
push
enter
mov
and
add
in
daa
icebp
ss
fidivrl
jnp
xchg
rcll
dec
das
sbb
orl
daa
xchg
mov
sub
push
std
mov
out
aas
jb
dec
jl
mov
mov
cli
cs
in
test
repz
mov
add
in
cmp
rcrl
jno
xchg
cmp
rorl
add
push
imul
dec
bound
fwait
imul
pusha
decl
arpl
rcrl
adc
insl
sbb
mov
out
div
leave
dec
push
adc
mov
dec
mov
insl
ret
jns
jl
pop
push
into
cmp
nop
add
sub
cld
in
cmp
fdivl
pop
cmp
cmp
xchg
push
xor
jns
dec
jecxz
jge
pop
xor
cmpsl
js
or
movsb
movsb
aaa
out
sub
adc
imul
and
lcall
mov
cmp
daa
mov
out
cmpsl
enter
out
scas
iret
mov
pop
add
stc
ficoms
ljmp
sbb
lds
or
sbb
ss
adc
cmp
jmp
aaa
jg
test
mov
leave
in
sub
and
pop
inc
and
or
sbb
popf
mov
ljmp
mov
adc
mov
movb
jg
enter
lret
jl
or
pop
insb
outsb
ds
or
mov
std
imul
sarl
daa
aam
push
add
dec
cld
int3
jae
or
repnz
pop
pop
loope
loope
es
neg
clc
lahf
ss
dec
add
lock
xchg
gs
dec
mov
or
pushf
int3
and
or
test
mov
sub
int3
adc
push
jb
pop
pop
pop
sbb
jns
jmp
cmpsl
and
push
add
jecxz
ficompl
jne
inc
add
out
push
dec
hlt
inc
xor
jns
outsb
test
test
fisttpl
movsl
bound
and
push
or
xchg
mov
imul
repnz
dec
cmp
das
les
inc
cmp
lods
in
popf
mov
inc
mov
loope
jecxz
sbb
mov
adc
icebp
pusha
mov
mov
fmuls
adc
andl
pop
xchg
add
jg
push
mov
jmp
xchg
mov
cli
jae
fiaddl
pushf
mov
orb
loopne
sub
and
mov
cmc
repz
mov
cltd
mov
daa
sbb
push
sbb
push
adc
sub
mov
lahf
cltd
jp
pop
sub
hlt
mov
jne
cmp
fnsave
push
and
xor
xor
mov
mov
or
popa
dec
adc
cld
arpl
cmp
pop
outsb
jno
aas
and
jns
mov
ficompl
das
or
and
push
in
ds
addr16
lret
add
add
nop
clc
inc
lret
lods
stc
or
cmpsb
cmp
je
sar
rcrb
test
mov
dec
push
push
adc
sub
pop
shll
cmp
cmp
scas
add
or
seta
add
mov
jmp
adc
insl
cmc
pusha
and
pop
push
pop
push
loop
bound
cmp
out
bound
mov
cmp
push
stos
pop
push
testl
jne
rolb
les
xor
cmpsl
enter
pop
int
dec
popa
arpl
pushf
stos
hlt
loop
xor
in
dec
mov
cmp
fs
xchg
fsubr
jle
call
outsb
xchg
inc
ljmp
std
mov
jge
push
and
rorl
cmp
mov
jns
pop
jle
in
mov
ljmp
mov
dec
imul
or
add
dec
and
lret
pop
mov
cmp
pop
mov
xchg
jne
scas
imul
stos
push
fwait
cmp
mov
shll
stos
pop
add
xchg
int
insl
sub
lret
pushf
xchg
sub
shlb
jnp
test
dec
arpl
imul
pop
inc
mov
ds
loop
cmpsl
lods
shrb
cmp
rcrl
arpl
call
add
mov
pop
mov
popa
fnstenv
in
cmp
mov
subb
movsl
mov
mov
and
insb
push
sub
rcrl
jp
jne
xor
jb
mov
stos
enter
sbb
out
stos
mov
stc
push
sub
std
pop
push
jne
iret
jo
adc
imul
pop
jp
xchg
loopne
bound
movsl
js
out
loopne
mov
dec
or
sub
sub
mov
repz
sahf
inc
jae
or
add
dec
sbb
sub
mov
pop
xchg
xor
enter
out
cs
hlt
xchg
sbb
mov
aas
dec
sbb
push
test
popa
dec
cmc
dec
jbe
jmp
int3
mov
adc
push
cmpl
repz
or
hlt
pushf
bound
mov
sbb
jle
fucomip
sub
divl
mov
xchg
adc
loop
push
dec
mov
xchg
ret
fdivr
lret
test
cs
xchg
sub
outsl
ds
ret
mov
cwtl
mov
in
push
push
fs
push
cmpsl
ds
and
ja
icebp
call
cmp
jne
adc
pop
call
jl
cmp
jb
movsb
clc
dec
xchg
imul
lock
push
test
cli
les
inc
cli
arpl
std
mov
bound
and
jno
or
add
setno
pop
iret
hlt
inc
ret
mov
push
dec
adc
jbe
push
fadds
mov
jecxz
xchg
push
outsb
adc
loope
jg
repz
sbb
push
das
sbb
cmp
inc
std
pusha
enter
jg
inc
es
aad
hlt
add
in
sahf
lds
outsb
mov
mov
pop
cmp
call
leave
std
outsl
lea
icebp
mov
out
sbb
sbb
test
xchg
mov
dec
fnstsw
push
add
pop
inc
ds
not
or
stos
push
out
pushf
in
cmp
sub
dec
xor
movsb
dec
cmp
push
aam
jl
mov
imul
mov
push
dec
cli
aam
cmpb
in
cs
fucomip
sbb
cmp
movsl
adc
in
cs
jb
mov
lret
lret
inc
jb
sbb
mov
or
mov
push
xchg
scas
rcl
insb
imul
push
mov
jno
adc
mov
sbb
idiv
pop
cmpsl
or
lods
mov
lds
adc
push
mov
push
jnp
leave
bound
test
inc
push
addr16
pop
mov
lock
inc
out
mov
jmp
jmp
inc
xor
nop
jg
daa
dec
sbb
mov
outsl
fstpl
pop
xchg
outsb
xor
jbe
popf
fldl2t
orb
cld
pop
pop
lret
sub
add
lods
sar
popf
fwait
mov
dec
hlt
repz
int3
xchg
clc
fldenv
cmpsl
scas
sbb
push
insb
shrb
push
mov
jbe
push
jp
je
notl
sahf
xor
adc
ljmp
jl
mov
cmp
subl
or
jmp
aas
imul
jle
adc
and
xchg
dec
fcmovu
sbb
hlt
in
dec
adc
xchg
inc
lock
jmp
sub
mov
lds
xor
sbb
idivl
popa
mov
cmp
repz
fstpt
push
push
pop
dec
xor
aas
jg
push
arpl
idivl
mov
loop
dec
sbb
setae
mov
and
mov
mov
mov
jbe
push
stc
pop
sarl
push
mov
xchg
ja
sbb
xchg
cld
sub
pusha
ficompl
sub
dec
dec
repz
in
inc
orl
cmp
mov
fsubrp
repz
add
push
loopne
adcb
roll
or
daa
mov
call
repnz
pop
sub
pop
imul
lods
xor
out
test
and
inc
adc
adc
push
inc
dec
sub
pop
cmp
out
fdivr
out
pop
mov
pop
imul
int
mov
mov
adc
push
lret
ret
mov
inc
test
pop
mov
inc
pop
adc
jg
mov
push
fisubs
mov
cmpsb
push
fdivs
xor
xchg
popf
ljmp
push
lods
lahf
daa
sub
sub
sub
icebp
xor
and
mov
sbb
adc
pop
mov
fnstcw
adc
jo
mov
sbb
mov
push
popf
cwtl
imul
arpl
sbb
sbb
or
sub
cwtl
or
int
cwtl
imul
aam
imul
push
adc
jo
das
out
in
pop
icebp
adc
mov
dec
mul
jb
mov
ficoms
push
repz
shll
sahf
add
dec
and
mov
jno
sbbb
aas
ds
adc
pop
fstpt
lret
mull
es
int
les
fisubrl
or
lods
enter
sar
jno
les
aas
flds
out
adc
or
cmpsl
push
adc
js
pop
iret
jo
xchg
andb
add
mov
cmp
mov
jmp
lret
mov
and
and
pop
pop
jmp
clc
fwait
sbb
cmpsb
mov
push
fnsave
lock
pop
pop
ja
decb
dec
test
lcall
aas
sbbl
clc
sbb
pop
lods
xchg
loopne
mov
jae
shl
out
cmpsb
jmp
push
loop
lock
mov
or
cmp
push
mov
sti
push
inc
mov
dec
adc
mov
mov
sbb
push
dec
cmpsb
and
pusha
sub
outsb
scas
inc
xchg
push
outsl
cmp
jns
imul
enter
test
push
js
sti
cmpsb
inc
movsl
xor
mov
sbb
jg
mov
jmp
inc
inc
and
cmpsb
iret
int
or
jns
rorb
imul
loope
or
dec
xchg
pop
outsl
in
out
add
int
jbe
cmp
xchg
outsb
add
push
sub
ja
adc
dec
dec
push
jecxz
mov
or
pop
sbb
dec
lods
jmp
xchg
xor
mov
sbb
call
dec
aam
xor
ljmp
sbb
pop
xchg
test
xchg
push
jb
ret
inc
mov
daa
mov
push
sahf
xlat
xor
ja
sar
or
xor
pop
mov
cmp
sti
mov
inc
aad
jecxz
imulb
add
adc
mov
std
and
sbb
insl
sbb
arpl
out
sub
push
pop
jmp
xchg
or
fwait
pop
cmp
loope
jbe
es
orb
rolb
jbe
mov
and
rcrl
jge
jl
adc
in
test
enter
in
pushf
push
data16
imul
in
call
cmpsb
xchg
xchg
mov
out
pop
mov
push
mulb
xchg
cmc
sub
ss
and
ljmp
sub
xor
adc
stos
dec
jno
jecxz
adc
sbb
in
aaa
sub
xor
mov
sbb
cltd
add
xchg
cmp
inc
sbb
in
cld
std
cmc
lds
cmp
jmp
adc
mov
mov
cmpsb
pop
sub
out
stc
out
fistps
or
cmp
enter
mov
dec
insb
jo
imul
xchg
pushl
call
enter
mov
leave
out
out
incl
xor
push
addb
insl
mov
test
subl
xchg
call
not
sbb
inc
sbb
push
es
les
aam
mov
xor
or
sbb
xlat
jmp
dec
lret
lahf
adc
push
adc
pop
outsl
pop
and
mov
or
aad
inc
sub
push
pop
call
xor
loopne
cltd
xchg
inc
insb
adc
sarl
loope
je
and
cmp
loop
inc
aad
lcall
in
jecxz
mov
inc
add
add
dec
mov
or
push
in
adc
jns,pt
push
jmp
cs
arpl
mov
or
aaa
xor
notb
lret
das
push
inc
and
cmpsb
jae
into
sub
jno
inc
ffreep
jecxz
jmp
bswap
pop
cmpsl
mov
cli
or
pop
mov
xor
and
movsl
cmpsl
shll
xchg
imul
and
sbb
aas
and
or
inc
insl
cwtl
in
in
dec
pop
dec
xchg
cmpb
jmp
sub
add
mov
xchg
das
add
mov
dec
ficomps
inc
dec
sbb
xorb
test
lret
loop
outsb
test
sub
pop
mov
inc
dec
sbb
sub
movsl
mov
fimull
cli
daa
js
xchg
orb
scas
cmp
dec
stos
fs
fldl
adc
xchg
stc
fucom
cltd
in
mov
and
sahf
cli
dec
repnz
mov
ljmp
icebp
jno
sub
mov
push
sbb
stc
mov
repz
mov
iret
and
mov
inc
xchg
mov
jecxz
xlat
notl
cltd
mov
imull
mov
dec
test
es
jg
cmpl
idivl
or
aam
mov
lock
testb
clc
in
arpl
fidivl
out
jle
mov
les
xchg
dec
decl
mov
xor
popf
loop
mov
icebp
ljmp
shr
imulb
jl
jns
je
add
cmpsl
icebp
mov
es
push
test
jo
mov
xor
jae
mov
test
movsl
ret
and
add
in
jg
std
aas
xchg
or
lcall
pop
les
dec
in
xchg
leave
sub
cmc
or
dec
sub
in
out
lcall
subl
and
xchg
call
inc
mov
mov
inc
pop
push
movsb
fdivrl
addr16
inc
mov
xor
popf
xchg
loopne
repz
dec
out
jp
aaa
inc
aam
and
sub
inc
arpl
and
lcall
hlt
mov
push
pop
lahf
add
dec
pop
frstor
mov
pop
iret
xor
mov
test
and
hlt
jb
aas
subl
xor
in
jb
and
jno
add
sub
push
inc
dec
cltd
xor
add
movsb
gs
pop
mov
mov
inc
dec
xor
and
mov
subl
scas
or
mov
jmp
xor
sub
sub
cs
adc
mov
xor
and
mov
mov
insl
push
lock
xor
orb
mov
sbb
test
rcrb
dec
mov
mov
mov
pop
sub
repnz
push
add
and
adc
sbb
xor
sahf
adc
icebp
inc
fcomip
push
add
and
subb
jno
sbb
shll
adc
push
sub
jns
mov
in
fsts
lcall
and
inc
cwtl
ljmp
rorb
andb
xchg
jb
add
sub
mov
adc
or
inc
cmc
mov
xlat
int3
test
mov
push
sbb
icebp
xchg
inc
and
cmp
mov
aad
pusha
outsl
mov
inc
pop
push
nop
fdivr
xchg
out
jg
xor
sbb
xlat
not
mov
inc
jb
out
cmp
cmpl
ficoms
add
mov
testl
mov
rcrb
add
adc
add
or
gs
stos
pop
xchg
cmp
in
mov
xlat
jns
dec
ret
push
movsl
lcall
sbb
push
lea
ret
sub
push
pop
lret
add
cs
cwtl
inc
push
sti
pop
fnstenv
jmp
dec
int
cmp
std
mov
neg
daa
jbe
pop
xchg
les
iret
imul
mov
push
jg
mov
pop
lret
imul
dec
into
sub
push
gs
out
out
in
jl
xor
cmp
movsb
add
cmp
xchg
out
adc
xchg
adc
dec
mov
sbb
mov
dec
jge
or
cltd
add
out
iret
xchg
sub
into
lods
dec
mov
push
in
pop
bound
xlat
out
daa
jnp
jb
push
push
cmp
ds
stc
mull
or
pop
sbb
push
xor
and
xlat
inc
mov
sub
iret
and
cmp
cmpsl
iret
ficompl
dec
aaa
sub
sub
pop
xchg
xor
loope
mov
cwtl
fidivrs
test
dec
or
push
pusha
sub
add
mov
adc
jl
mov
in
and
lock
sbb
jp
jg
push
push
aad
stos
pop
jmp
icebp
dec
mov
mov
fsubs
jl
movsb
int
pop
inc
dec
adc
mov
push
fcomp
fwait
stos
mov
cmp
jmp
outsb
mov
stc
dec
je
cld
xor
xchg
adc
mov
nop
loop
push
pop
imul
cmp
cmp
imul
testl
sub
jbe
dec
mov
push
and
outsb
push
shr
xchg
iret
daa
adc
push
mov
lcall
and
je
aam
insb
jl
and
xorl
insl
pop
lcall
cmpsl
adc
mov
add
sub
loope
rep
jl
outsl
pop
data16
or
inc
rcr
dec
mov
rcrb
loopne
outsl
mov
or
xor
ljmp
popa
in
jno
pop
fstpt
sahf
or
outsb
fisubl
push
test
sub
dec
andb
push
or
addl
push
repnz
pushf
xor
push
xchg
clc
sbb
int
pop
movsl
jo
add
dec
popf
fld1
mov
xor
xor
or
rcrl
in
push
rcl
lret
cmp
dec
ds
or
dec
ja
popa
into
xchg
dec
and
lods
fidivl
leave
cltd
shlb
xor
jbe
sub
das
cmp
sahf
add
test
xlat
or
repnz
ret
xchg
mov
inc
pop
loop
or
dec
loop
jecxz
fiadds
arpl
out
jl
push
xchg
dec
inc
and
pop
lahf
les
fninit
movsl
lret
push
and
sub
bound
pop
xor
add
mov
ret
pop
sub
ret
lods
xchg
negb
push
subl
push
rcr
dec
out
jno
test
pusha
pop
lods
clc
call
and
clc
dec
inc
pop
jp
ss
mov
aas
ja
mov
inc
mov
scas
jae
pop
fldt
insb
cmp
or
fimuls
jecxz
inc
pusha
push
testl
ret
and
xor
test
sbb
cmp
add
out
or
jne
stos
and
mov
push
loope
ss
push
ja
daa
pushf
mov
aad
in
jmp
dec
pop
pop
push
sbb
adc
dec
clc
repz
xchg
push
ret
sub
pop
sbb
das
xchg
dec
out
adc
ja
pop
sti
xor
loopne
outsl
sub
addr16
push
mov
cmp
ret
cmc
jl
jns
add
fidivl
nop
rorl
fnstsw
mov
jbe,pn
std
xchg
div
sbb
fsts
rorl
dec
dec
pand
popa
das
loope
div
fldln2
dec
pusha
sahf
adc
inc
pxor
fwait
aas
sbb
push
lea
addr16
mov
jmp
ljmp
int3
and
or
scas
rol
sub
test
jae
add
gs
addb
mov
cmpsb
fldenv
cmc
pop
leave
shlb
popf
mov
dec
pusha
jge
mov
pop
test
mov
jle
dec
jmp
cmp
mov
movsl
mov
adc
out
into
sbb
push
sbb
xchg
xchg
hlt
clc
popa
ljmp
cltd
cmpb
ds
loopne
rorl
cmpsb
cmp
cmp
dec
fsubrp
stos
sub
shr
ret
adc
add
in
add
stc
mov
std
ja
pop
cmp
cmovno
sbb
or
pop
inc
cmp
sbb
testl
jg
push
and
jae
add
nop
xchg
out
jl
cltd
xorb
pop
mov
xchg
pop
lock
stc
pop
add
cmp
mov
jne
and
mov
ds
xchg
out
fdivr
dec
cld
inc
mov
and
scas
in
pop
dec
push
addr16
add
mov
jb
cli
jnp
adc
push
fldl
mov
js
add
inc
lcall
adc
sbb
mov
call
pop
mov
aaa
add
xlat
push
in
cld
mov
push
lahf
dec
push
add
adc
loopne
push
mov
fidivl
enter
out
popf
in
pop
sbb
or
sbb
jno
adcb
add
xchg
pop
mov
hlt
shlb
orl
and
or
clc
addr16
push
fmuls
xchg
cmp
jae
gs
xchg
lock
pop
push
jbe
das
pop
sbb
popa
pushf
sarb
stos
jne
lods
lods
dec
rcll
test
xchg
pop
push
or
pushl
cmpl
sub
mov
mov
cmp
xlat
pop
ds
imul
add
pusha
ss
imul
push
mov
addr16
mov
and
xor
out
adc
mov
push
and
lea
push
xchg
or
push
shll
push
fisttpl
cmp
fcompl
enter
nop
test
ss
jmp
stos
add
push
cltd
int
inc
iret
dec
ret
lods
add
in
fstpl
and
imul
or
dec
adc
shll
or
sbb
leave
leave
test
out
adc
lret
adc
sub
jecxz
add
adc
push
rcrl
cmc
out
push
or
dec
repz
ja
insb
push
shll
outsl
jge
aas
and
lods
test
clc
cmc
sti
sbb
out
inc
pop
mov
not
add
or
dec
mov
mov
aas
xor
ljmp
push
push
push
aam
in
mov
xor
mov
jae
dec
pop
icebp
xchg
pop
outsb
sbbb
shrb
jbe
fildl
js,pt
ret
into
std
sbb
push
clc
mov
aam
adc
repnz
cwtl
dec
orb
in
jl
push
out
jmp
or
call
cmc
mov
cmp
outsb
test
and
jb
fisttpll
mov
leave
mov
lds
cld
imul
das
xor
int
inc
fwait
pop
je
nop
into
enter
xchg
pop
cli
push
xchg
or
imul
test
nop
ss
and
sub
cmpl
sbb
pop
ss
add
sbb
mov
dec
mov
fsubrl
mov
pushf
and
sub
inc
stos
sahf
mov
jecxz
mov
iret
dec
mov
sbb
lea
mov
adc
jle
mov
xor
and
jne
cmpsl
arpl
cs
mov
stos
fs
sete
or
jecxz
xchg
in
aam
imul
call
cmc
lret
dec
cmpsb
shrb
pop
orb
stos
std
ds
dec
sub
movsb
movsl
mov
mov
mov
mov
bound
out
mov
insb
pop
rcrl
je
adc
push
jmp
jno
mov
lods
sbb
add
and
in
dec
mov
jge
jl
ja
push
int
or
xchg
dec
test
insl
push
sub
jnp
jnp
xchg
loop
sub
push
add
lahf
aad
add
adcl
and
aam
dec
stos
fistps
les
ja
enter
scas
push
clc
jp
ljmp
setns
insb
mov
in
aas
addr16
jnp
fldenv
inc
xchg
aad
lcall
push
mov
outsl
mov
filds
sti
push
pop
clc
int
mov
mov
adc
lret
cli
movsl
xchg
out
xor
cmpsb
subb
dec
imul
rcll
jbe
or
push
jo
adc
test
clc
cmp
fstpt
pop
mov
or
jno
jge
cmp
in
cmp
je
or
or
icebp
loopne
ljmp
out
std
jle
lret
in
es
pop
mov
nop
cmpsb
lret
xchg
aas
sahf
gs
push
loopne
push
push
enter
setns
dec
ret
and
faddp
pop
xor
adc
or
fadds
scas
ret
mov
repz
cmc
push
jle
test
push
inc
clc
cmp
negb
shlb
orl
mov
fcomip
sarl
gs
inc
inc
push
and
mov
lods
dec
frstor
add
pop
mov
jle
sbb
add
daa
and
jecxz
fisttpll
call
sub
inc
jmp
shrb
dec
pop
test
sarb
mov
inc
cmc
test
roll
enter
jnp
and
ret
std
ljmp
jns
cmc
fwait
pop
sarb
lahf
scas
mov
pop
mov
fistl
rorb
mov
hlt
mov
mov
or
adc
les
test
dec
mov
js
or
sbb
inc
push
nop
sub
aaa
xor
push
cmpsb
mov
lret
imul
imul
test
nop
add
fldcw
add
sbb
adc
call
sub
imul
xchg
sub
cs
xor
subl
mov
lods
push
push
out
jmp
xor
js
pop
mov
sbb
aas
rcrb
add
cs
icebp
mov
or
mov
pop
inc
mov
sti
jb
in
loopne
jae
xchg
inc
imul
sti
jmp
push
in
das
or
test
inc
mov
jg
adc
je
out
jnp
jns
xor
imul
adc
xor
pop
lret
scas
mov
imul
xchg
push
jp
data16
cmp
ljmp
movsl
xlat
repnz
cmpsb
jb
jecxz
fs
stc
out
or
repz
mov
push
inc
jle
stc
jnp
fcomp
inc
fdivrs
orl
sbb
negb
cmp
xor
ret
or
add
fs
lahf
movsl
jle
adc
xchg
das
hlt
out
pushf
repnz
gs
inc
dec
insl
and
fidivl
icebp
es
mov
jbe
or
clc
into
aad
mov
jno
outsb
and
pop
jo
call
daa
rcrl
decb
cwtl
cmp
pushf
stos
mov
ss
popa
ret
or
xor
div
add
pop
mov
enter
or
aas
in
sub
mov
insb
jne
mov
cmc
jg
or
xchg
sahf
cmp
add
je
dec
mov
das
lret
xchg
loop
push
mov
xchg
outsb
outsb
fs
add
dec
in
dec
aad
cld
shrl
mov
loope
xor
stos
xor
icebp
divb
xchg
loopne
xchg
aaa
and
pop
mov
loop
xchg
push
enter
dec
jne
mov
cltd
mov
push
mov
push
inc
sub
xchg
dec
outsb
xchg
std
push
js
jno
mov
aam
popf
cli
popa
inc
iret
js
inc
sbb
sti
sub
out
push
stos
adc
push
ss
and
add
mov
adc
repnz
or
aas
sub
sahf
dec
popa
xchg
testl
mov
sbb
lret
stos
inc
adc
aas
fiadds
sub
in
addr16
test
sbb
pop
inc
cltd
lcall
popa
xchg
sub
inc
scas
fwait
sbb
jmp
jp
cld
popl
or
sub
das
cs
comiss
mov
sbb
jno
enter
cmp
cld
in
pushf
sbb
xchg
pop
mov
daa
ss
fdivrl
adc
dec
sub
cmpsl
cmp
scas
movsb
insl
fdivrl
pop
or
lahf
xchg
ffreep
mov
mov
jb
pop
jmp
mov
sbb
push
fwait
bound
push
mov
fs
jecxz
stos
negb
iret
pop
scas
je
jmp
cmpl
into
jb
mov
xchg
fistpll
hlt
mov
sti
loope
cwtl
dec
cs
and
xchg
sbb
aas
mov
daa
ja
sahf
out
fildll
rcll
gs
sahf
fsubrs
pop
jmp
mov
repz
popf
and
pop
add
shr
lock
loop
inc
inc
out
movsb
cmc
popa
sub
sahf
loop
std
jbe
mov
jbe
push
dec
into
cmpl
daa
xor
pop
sahf
popf
xchg
mov
fistpl
mov
xchg
repz
fdivp
fistpll
push
or
popl
jbe
fisttps
movsl
ret
in
hlt
pop
mov
push
cmp
out
loopne
inc
adc
imul
mov
arpl
cmpsb
adc
mov
adc
jecxz
adc
push
jbe
leave
sub
nop
add
fidivrs
or
sbb
jo
adc
cmpsb
inc
mov
push
push
push
pop
out
imul
jp
loop
insb
or
jae,pt
xor
push
adc
and
loope
popa
stos
lret
or
and
cli
dec
push
push
push
xlat
sbb
xchg
popf
sbb
shlb
sub
mov
xchg
push
jp
mov
scas
sbb
ljmp
push
push
cmp
call
orl
test
dec
stos
daa
fwait
or
cmovo
add
pusha
mov
dec
pop
mov
mov
cltd
mov
mov
mov
lahf
fisttpl
push
push
sarl
sub
add
cltd
sub
xor
or
sti
push
and
shl
stos
cmp
fnstenv
cmp
mov
hlt
daa
pop
pop
and
mov
das
jp
pop
cli
lcall
mov
or
adc
lret
nop
push
lock
adc
jl
cld
dec
jle
mov
lock
icebp
push
fwait
outsb
popf
push
fnsave
in
xor
xchg
out
les
pop
fsubrl
pop
mov
cmc
fwait
lock
add
movsb
adc
cwtl
xor
cmp
and
int
fisubs
sti
loope
cmp
cmpsl
data16
jae
daa
enter
dec
cmpsb
fiadds
push
sbb
adc
adc
xor
jmp
int
push
fmull
lahf
mov
xorb
xchg
pusha
aam
fwait
lahf
cmp
pop
sub
xor
push
push
pusha
rcll
or
into
int3
cs
popa
jg
mov
aad
and
or
mov
repnz
lods
jo
adc
dec
lcall
lods
mov
push
xchg
push
lret
testb
adc
dec
into
ljmp
orb
ret
cli
mov
aas
and
insb
mov
int3
sub
test
testl
data16
or
and
mov
pushf
xchg
mov
sbb
rep
sahf
stc
dec
jg
mov
push
in
pop
pop
test
aam
out
ret
xor
xorb
jae
sub
sub
sbb
or
orb
cmpsl
xor
add
mov
cmp
test
jecxz
test
popa
test
fisttps
repnz
mov
lret
sbb
push
adc
and
popa
lret
push
lods
daa
movsl
cltd
mov
jae
xchg
inc
push
jle
aaa
xchg
mov
mov
shll
mov
inc
mov
sarb
ss
fimuls
aam
mov
dec
inc
fiadds
dec
lret
lea
arpl
push
pusha
fcomip
rol
dec
hlt
sub
cmp
imul
in
cltd
add
xchg
jecxz
push
or
ret
clc
cmp
hlt
mov
data16
jle
fstps
push
into
xor
stos
sbb
lret
movsl
insb
jbe
jp
call
aam
fimull
adc
je
les
add
pusha
cmp
int3
lds
loop
arpl
jo
xchg
cmp
mov
xchg
cmpsl
add
insl
ficoms
push
outsb
push
shlb
lods
and
lock
sbb
xchg
jg
jg
inc
add
jge
loopne
pop
push
aam
pushf
fisttps
jmp
dec
mov
fnstenv
insb
imul
outsl
xlat
orb
insl
popf
jb
test
pop
jle
andnps
jae
adc
into
movsl
jmp
or
pop
loope
push
jo
or
add
out
rol
xor
insl
inc
ret
mov
sub
out
cmpsb
pop
fcomip
jns
cmpsl
push
dec
lods
scas
push
aam
add
push
into
dec
sbb
mov
xchg
in
mov
loope
bound
and
sub
mov
sub
daa
sbb
xor
inc
ds
data16
mov
testl
pusha
test
enter
or
cmp
inc
outsl
add
loope
mov
mov
das
fldl
inc
adc
fisubs
xor
and
sbb
and
mov
bound
cmp
mov
pop
xchg
movsb
int
and
call
mov
les
imul
icebp
or
pcmpgtw
mov
sti
sub
in
or
fbstp
lret
js
add
cmpsl
push
iret
jecxz
aas
sti
mov
inc
sbb
pop
in
ds
cmp
mov
jg
add
jg
pushf
push
lea
repnz
mov
xlat
jbe
sbb
aam
das
jge
jb
lea
cmpsb
sub
xor
jns
push
or
sub
rcrb
mov
in
ret
repnz
push
repz
mov
dec
pop
stc
sarb
pop
shr
arpl
push
or
imul
sbb
mov
jnp
xor
lcall
stc
call
arpl
and
lods
loope
jmp
jnp
xchg
inc
gs
inc
scas
jb
inc
gs
and
cs
aam
push
scas
xchg
mov
cmp
movsb
pop
or
push
fwait
std
push
xchg
inc
and
sub
enter
std
js
out
inc
mov
incb
mov
pop
inc
mov
mov
pop
cmp
push
add
lret
mov
add
lcall
jl
xor
cli
mov
orb
dec
inc
mov
push
imul
push
xor
jb
cwtl
dec
dec
xchg
sub
ret
je
cmp
sub
dec
test
sbb
inc
pop
jge
push
jne
mov
out
cmp
mov
sub
int3
fwait
inc
adc
mov
push
sub
clc
lods
or
adc
sbb
js
jg
loopne
xsavec
cmp
into
jle
iret
dec
add
sub
aad
mov
sbb
mov
cwtl
push
jbe
aas
out
mov
test
sbb
and
inc
lods
jne
sbb
gs
imul
sahf
mov
sub
lds
gs
and
or
cmp
add
mov
pushf
xchg
jb
into
insl
adc
fcoms
inc
cmp
call
enter
mov
in
test
pop
jns
dec
add
sbb
xorl
jge
xor
mov
adc
xorl
test
push
das
lock
divl
and
loop
ljmp
shll
sbb
lcall
sti
loopne
hlt
stc
mov
dec
out
jns
and
push
adc
and
movsb
jbe
and
cmp
pushf
icebp
ljmp
mov
insl
cwtl
sbb
mov
test
or
adc
push
mov
test
enter
dec
test
out
fwait
push
imul
push
jb
cld
and
cmp
or
aaa
rcrl
and
jae
insl
pop
outsb
push
loope
push
test
into
mov
or
or
push
and
jg
std
mov
push
adc
jae
xchg
icebp
adc
movsb
pusha
ss
enter
push
fnstcw
daa
fwait
pop
dec
outsl
jns
rep
cmp
cltd
shlb
jp
icebp
pop
out
in
aam
decl
push
sbbb
xchg
cmp
lahf
int
fcmovu
add
xchg
pop
cmc
push
sbbl
cmpsl
or
stos
in
jnp
jbe
idiv
pop
mov
imul
xor
adc
push
or
or
insl
fcompl
adc
or
out
movsb
mov
shrb
dec
inc
adc
popa
xchg
xlat
ljmp
jmp
mov
pop
adc
adcl
mov
mov
rcll
sbb
insl
movlps
iret
push
mov
cmp
insb
addl
pop
sub
xchg
xlat
das
sbb
leave
nop
jns
xchg
lds
dec
sub
mov
stos
jl
xor
shll
pop
iret
enter
dec
push
and
xor
sbb
daa
in
fcoml
jbe
xlat
xchg
addl
push
in
js
or
sbb
mov
push
pop
inc
and
sahf
adc
sbb
ss
xchg
pop
ret
push
stc
push
mov
mov
jo
mov
jecxz
sub
in
rclb
push
dec
into
subb
add
sbb
arpl
mov
add
cmpsl
or
movl
movsb
mov
mov
ljmp
jl
push
cmp
repnz
cmc
jne
dec
mov
pop
adc
ret
aaa
sub
shlb
inc
out
xchg
and
xchg
sarl
pop
or
shrl
jg
into
hlt
das
fs
cmp
jnp
jnp
lret
mov
xchg
stos
jae
xchg
jmp
inc
or
andb
adc
mov
into
jno
cmp
cmp
sar
cmp
cs
add
sbb
mov
pop
das
push
out
cmc
lods
insb
ljmp
movsl
push
inc
push
pusha
xchg
add
xchg
mov
enter
inc
push
add
rolb
add
bound
adc
mov
pop
push
leave
inc
pop
arpl
nop
add
jmp
ret
mov
jmp
sub
pop
test
jnp
fnstenv
mov
xor
cmpsb
and
shr
inc
stos
pusha
push
sahf
fisttpll
dec
push
rclb
cmp
popf
or
or
xchg
jmp
mov
xor
jecxz
rolb
loopne
xchg
jne
inc
mov
push
insl
cmp
add
and
test
inc
sub
movsbl
dec
roll
ss
cli
and
mov
cmp
scas
lret
es
xor
dec
xor
adc
leave
nop
rclb
out
dec
out
cmp
dec
dec
push
es
push
je
cmp
mov
iret
pop
ret
dec
mov
loop
sub
das
adc
xchg
add
leave
sbb
out
mov
test
pop
in
pop
lahf
mov
xor
lods
scas
daa
adc
push
xlat
mov
shrb
pop
lret
addr16
in
sub
jle
lcall
sub
clc
enter
push
iret
and
adcb
pop
xor
sub
adc
push
xchg
sub
dec
fidivrl
movntq
lods
jae
xor
add
arpl
insl
pop
xor
lock
xchg
sbb
icebp
cld
daa
jns
imul
cmp
out
and
arpl
jo
inc
mov
test
adc
and
movsb
sub
fwait
mov
jns
and
int
sub
std
cmpsl
and
mov
int
sbb
jle
movsl
ret
stos
xor
xchg
and
cmc
call
xchg
xor
in
sub
insb
movsb
rorb
std
adc
adc
orb
push
or
jle
loop
mull
or
pop
mov
mov
inc
mov
adc
sub
lcall
int3
xchg
ja
and
jmp
leave
jp
inc
aaa
sbbb
inc
dec
mov
sti
cmc
subl
dec
int
and
adc
cmp
lods
push
lret
adc
je
add
je
mov
sub
inc
jns
jecxz
or
inc
test
loop
lods
cmp
sub
mov
mov
call
loop
inc
popa
mov
hlt
sbb
add
jno
dec
push
inc
aas
out
pusha
mov
push
sahf
ret
xor
in
es
cltd
or
mov
repz
cmp
daa
sbb
inc
mov
test
mov
mov
jno
pop
jnp
push
jbe
mov
or
xchg
lret
rorb
lock
sub
icebp
and
jbe
je
xor
sbb
bound
mov
xorb
loop
add
jle
insb
retw
ljmp
fdivs
aaa
mov
xor
sub
test
pop
or
out
shlb
dec
sub
shlb
hlt
jns
or
stc
loop
cli
test
lods
shr
pop
out
mov
out
xchg
rolb
loope
xchg
mov
mov
lahf
out
jecxz
test
lret
fs
imul
std
mov
aas
jmp
in
scas
xchg
xor
fdivrl
loop
out
out
pop
movsb
popf
data16
lret
inc
ret
mov
mov
imul
out
movsb
fildl
sub
cmc
jo
jb
mov
in
ret
adc
sarb
inc
ja
test
mov
imull
pop
lret
cmp
outsb
pop
and
mov
stc
and
fsubrs
mov
mov
movsl
add
imul
cmp
mov
mov
mov
dec
jno
sti
dec
sub
pop
outsl
addb
dec
xor
or
pop
fs
push
out
shl
jbe
imul
pop
pop
xor
push
dec
cmpsb
mov
push
ja
inc
mov
test
lret
sbb
sbb
jne
mov
pop
bound
stc
mov
mov
pop
imul
and
fcoms
xchg
loop
lds
xchg
sub
scas
lock
sbb
ds
cltd
imul
leave
mov
mov
push
pop
add
stos
or
mov
sub
jbe
lods
and
add
cmpsl
ret
scas
icebp
sub
sbb
es
mov
jle
jmp
cltd
out
repz
rcl
cltd
add
and
call
roll
sub
dec
inc
inc
adc
mov
nop
mov
ret
loopne
jne
mov
push
fcoms
rcr
test
jmp
callw
jb
aas
loopne
pop
je
mov
xchg
out
test
iret
sub
frstor
add
mov
insb
and
jb
ja
int3
mov
mov
daa
repz
out
adc
in
into
addr16
jl
sub
mov
mov
mov
stos
ss
mov
inc
push
imul
adc
xchg
and
out
jb
pop
lcall
inc
adc
in
lods
xchg
das
sub
repz
fwait
ss
cs
cmp
cmp
popa
das
aas
xor
jnp
mov
repz
pop
push
pop
jmp
leave
and
add
jmp
outsl
fnsave
leave
vpmaddwd
fs
icebp
bound
add
mov
mov
xchg
push
and
sbb
cmp
push
outsb
fsubrs
mov
int
dec
xlat
lods
pop
jo
and
push
pop
fadd
inc
jo
cmp
xlat
sub
lret
jno
or
push
jl
ljmp
dec
sbb
stos
loope
add
into
shll
push
daa
int3
aaa
inc
dec
out
add
out
in
cmpsl
add
into
dec
inc
xchg
ret
adc
mov
pop
data16
nop
mov
lahf
leave
adc
fildll
pop
push
bt
in
jg
sub
fistl
out
dec
outsl
xchg
cmc
inc
dec
xchg
add
stos
jbe
into
sar
mov
es
jne
bound
insl
cmp
pushf
mov
jge
jns
jne
cli
push
add
jecxz
push
repnz
fldcw
adc
push
or
int
popa
adc
and
hlt
push
adc
dec
imul
lea
push
pop
sbb
and
fucom
inc
hlt
dec
aad
cmc
mov
mov
scas
mov
inc
mov
je
or
outsb
popf
mov
xlat
movsl
adcl
jno
aam
jmp
shlb
loope
cwtl
stos
push
bound
jno
or
mov
add
loop
ss
pop
mov
aam
cmpsb
clc
sub
lcall
sti
lea
xchg
je
test
lds
inc
add
fdivrl
inc
push
mov
sbb
xor
add
stc
ret
int
push
xchg
test
or
or
mov
add
ss
dec
lods
mov
push
mov
sub
and
cwtl
mov
or
fidivs
scas
in
mov
scas
cmp
jp
and
loop
mov
call
repnz
pop
and
add
mov
popf
shrl
pop
iret
lods
pop
aaa
je
xchg
in
daa
shll
and
jno
lret
dec
push
cmp
mov
cmp
rcrl
mov
push
clc
pop
pop
mov
add
dec
sarb
sarb
js
cli
fistps
push
mov
inc
mov
adc
iret
add
and
loop
xchg
stos
icebp
filds
mov
mov
inc
dec
fdivrs
sub
push
sbb
int
inc
inc
pop
jae
xor
negl
in
lret
cmp
xchg
fimull
sbb
icebp
jecxz
lcall
jns
and
mov
jo
ja
sub
fucomi
mov
jl
insl
lods
pop
cmp
xlat
or
movsl
dec
and
push
sub
lahf
pop
pop
je
jno
inc
lods
jg
xor
pop
dec
jns
xchg
xchg
add
inc
cmpsb
fadd
leave
inc
rcl
ds
inc
pop
dec
seto
mov
jnp
scas
inc
popf
sbb
mov
cld
aad
adc
imul
aas
scas
and
ljmp
mov
mov
jg
push
pop
cli
jbe
pop
add
adc
adc
sub
ja
or
xchg
cmp
cwtl
mov
fcompl
movsb
mov
subb
push
orb
sub
jb
aas
into
sahf
ret
xchg
lret
pop
popa
adc
and
sbb
and
jnp
aad
rol
mov
jmp
push
mov
cmp
dec
lods
push
ja
dec
out
pop
xchg
pop
jl
mov
pop
dec
or
mov
and
movsb
pop
adc
add
push
sub
xor
into
push
cli
aas
loopne
imul
add
aam
sub
fwait
or
xor
cmpl
pop
stc
add
popa
mov
or
fcmove
call
cmc
das
sbb
xor
push
wrmsr
scas
and
push
mov
adc
movsb
add
out
sbb
test
push
fwait
mov
add
mov
test
cmp
cmc
pop
hlt
pop
movsl
push
fiaddl
xor
in
scas
js
subl
fstpt
inc
cli
das
and
sub
outsl
stc
dec
xor
xchg
sub
inc
cld
in
push
jmp
sbb
xor
insl
mov
cld
popf
lods
lret
push
aad
mov
bound
rcr
push
jp
sahf
push
sbb
pop
sbb
movsb
and
xorb
pop
push
popa
cmp
fs
mulb
mov
lods
inc
pusha
arpl
pop
inc
inc
shl
js
push
jl
aad
mov
push
mov
inc
fstp
and
stos
fdivp
aaa
jge
and
inc
fistl
in
cmc
mov
fsubp
jge
adc
pushf
push
cmp
push
fs
lock
sarl
lods
jmp
test
cwtl
lret
gs
jne
lret
repz
dec
mov
test
in
dec
nop
fcmove
jb
add
xchg
in
dec
out
ds
add
ss
jns
fdivrs
jne
jecxz
ss
dec
adc
sub
out
int
ljmp
sub
movsb
test
jno
pop
in
movsb
cmc
jne
dec
cmp
lock
cltd
je
stos
sub
add
mov
inc
lods
pop
andl
jbe
mov
pop
add
not
push
inc
mov
jg
inc
jb
enter
cmc
or
mov
mov
fucomi
mov
mov
cmpb
push
jecxz
lods
jecxz
jns
aas
out
push
rcrl
xor
fcoml
xchg
filds
jne
pop
and
xchg
fwait
lcall
fnstcw
mov
xor
mov
cli
jmp
ljmp
mov
stc
adc
xchg
sub
push
js
add
mov
das
cli
enter
mov
adc
mov
aaa
jge
jo
sbb
rorl
js
pop
in
xor
xlat
out
jne
jmp
outsl
jo
clc
push
pusha
fcoml
sub
mov
lcall
inc
mov
jecxz
arpl
into
xchg
fdivp
fwait
xor
xor
lock
test
or
out
push
out
sbb
cmp
insb
lret
movsl
mov
mov
push
fstpl
sbb
data16
scas
inc
xlat
jne
mov
push
cmp
icebp
incb
and
addr16
out
lret
dec
cmp
push
cmp
aam
fists
sahf
and
mov
fs
outsb
out
cmp
or
loope
xchg
jo
sar
lods
das
mov
cmp
icebp
xor
cmp
lods
cli
cmpsl
xchg
dec
aad
out
pop
xor
pop
dec
adc
sub
outsb
xchg
xchg
test
imul
in
clc
xchg
xor
sbb
imul
pop
mov
dec
pop
inc
das
hlt
pop
mov
ficomps
sub
inc
push
xor
shr
popf
mov
and
into
data16
imul
pop
add
add
xor
pop
in
movsb
popa
outsl
fsubrs
add
lock
loopne
add
test
jae
inc
adc
in
add
repnz
lret
iret
cmpsl
pop
jns
jl
in
ljmp
loop
xchg
add
mov
lea
jae
sub
push
addr16
or
dec
test
inc
add
bound
imul
inc
dec
adcb
cmpsb
pop
nop
inc
adc
popf
adc
mov
xchg
inc
movsl
push
mov
js
mov
les
mov
push
pop
lods
mull
decl
aad
xor
lcall
mov
mov
aad
into
fstp
and
flds
inc
stos
movsl
imul
into
jp
repz
lcall
sub
and
rcll
mov
inc
sbb
xchg
fs
jle
jbe
sarb
push
sub
enter
ficompl
adc
sub
lahf
loopne
shl
lahf
es
scas
jbe
and
pop
mov
push
clc
mov
bound
pop
outsb
into
xor
xlat
stos
lock
loope
mov
out
mov
pop
lods
mov
mov
push
in
test
ret
ret
stc
or
xor
stos
sbb
adc
in
sarb
cmp
push
mov
mov
push
dec
aas
push
inc
out
jbe
faddp
cmpsl
push
lods
mov
negl
add
jo
push
push
sbb
sub
inc
mov
gs
test
pop
into
sbb
add
jl
or
out
jb
sahf
mov
xor
fwait
in
cltd
cltd
and
jno
and
mov
lock
dec
lods
stos
imul
dec
xchg
pop
xchg
jp
pop
lods
loop
cmpsl
sahf
add
adc
les
pop
adc
dec
movsl
mov
jns
sub
lods
cs
out
mov
shll
fs
ljmp
roll
xrelease
ss
mov
or
movsb
into
mov
push
or
mul
pop
jo
cmp
inc
push
sub
loopne
loope
jge
out
call
sub
imul
movsb
mov
icebp
aam
dec
aad
mov
xchg
pop
addr16
inc
insl
sbb
pop
imul
jge
out
les
setle
mov
inc
jecxz
or
outsb
mov
adc
mov
cmpsb
mov
pop
scas
cmc
xchg
xor
sbb
mov
push
sub
testl
mov
push
pop
fcmovb
inc
addl
jb
dec
test
fisubrl
jb
adc
sbb
adc
adc
mov
mov
push
lods
data16
je
out
mov
movsl
inc
cmp
xor
xor
je
call
insl
dec
xchg
lahf
push
mov
test
stc
dec
mov
fwait
pop
jo
aam
sahf
icebp
adc
mov
push
sbb
push
adcb
loope
orl
sub
cmp
cmp
add
and
nop
push
add
daa
in
mov
mov
jmp
arpl
or
or
add
ret
les
cmp
pop
lret
sub
jp
outsl
and
lahf
fwait
adc
mov
loop
push
das
in
pop
mov
jecxz
inc
dec
push
mov
pop
inc
jge
xor
js
mov
imulb
sbb
aaa
xchg
fnsave
sbb
inc
jno
hlt
add
mov
arpl
cwtl
cld
push
shrl
push
out
mov
mov
mov
fstl
adc
test
jb
mov
or
roll
add
or
sub
icebp
cmp
jb
or
cmp
mov
fmull
push
or
pop
mov
leave
dec
sti
popl
add
mulb
mov
pop
adc
mov
stc
int
popa
jecxz
push
jne
stc
jns
cld
dec
out
lcall
push
sbb
cmp
cwtl
or
jg
test
rep
mov
repz
outsl
jl
mov
xchg
test
dec
push
or
inc
adcl
fdivrs
int
mov
pop
jns
outsl
jae
or
mov
mov
add
pop
xor
pop
arpl
sub
or
test
fwait
jbe
jmp
jmp
or
orl
adc
sub
fistl
lods
dec
push
insl
fsubrl
jp
aas
lods
adc
and
lods
ds
and
mov
imul
stc
jmp
outsl
xchg
mov
mov
or
inc
dec
pop
xor
mov
sbb
lea
pop
sti
or
clc
mov
mov
sub
pop
jle
fidivrl
push
movsl
addb
shl
jmp
sbb
xchg
mov
push
push
je
testb
mov
repnz
cmp
jbe
jmp
mov
out
adc
mov
mov
sub
loop
fs
pop
pop
add
lock
out
and
fiaddl
test
ss
and
jns
mov
adc
popf
insb
adc
inc
mov
jns
or
cltd
or
xor
xchg
push
jno
fwait
loop
push
loop
or
dec
imul
call
decl
in
shlb
mov
adc
lret
mov
data16
sbb
aaa
cwtl
es
je
sti
pop
icebp
fcomip
sti
dec
outsl
xchg
negl
cmp
nop
sbb
mov
shll
sub
mov
xchg
outsb
mov
decl
addr16
pusha
inc
aad
xchg
lret
mov
es
repnz
mov
adcl
gs
add
loopne
push
add
inc
or
cmpsb
int3
mov
mov
mov
sarl
sub
orl
out
gs
ds
addr16
mov
inc
lods
mov
mov
add
mov
xchg
std
adc
jge
mov
jo
decb
sub
int3
dec
lahf
pop
or
pusha
bound
addb
pusha
icebp
repnz
adc
pop
xchg
inc
mov
xlat
push
rcrb
push
pop
test
fsubp
imul
test
or
outsl
enter
mov
imul
loopne
mov
xlat
in
das
inc
js
sbb
push
jmp
add
cli
xor
pop
xchg
nop
add
sbb
leave
and
les
popf
fildl
or
mov
or
jno
aaa
shlb
push
je
mov
inc
cli
mov
adc
xor
popf
xchg
mov
addb
jle
test
sbb
inc
pop
imul
mov
orl
or
dec
mov
clc
xor
ret
sahf
je
and
push
inc
dec
int
in
cwtl
mov
fs
xor
dec
imul
mov
xchg
ljmp
lock
lock
clc
adc
shll
sbb
fsubrs
cwtl
movsl
or
aad
popf
addr16
movsl
stc
mov
push
jmp
mov
in
ljmp
push
aaa
mov
add
shrb
jne
jnp
out
movsb
add
push
push
ret
xchg
ja
adc
mov
fstl
repz
or
cltd
xor
mov
lahf
sub
in
inc
lods
pop
cmp
add
or
daa
lret
adc
sbb
cli
bound
mov
jecxz
push
ror
daa
adc
test
xor
sbb
test
arpl
sbb
mov
and
xor
push
and
cwtl
fnstenv
imul
loop
or
iret
out
lods
mov
insb
stos
mov
negl
and
dec
inc
xor
divl
sbb
aam
cpuid
pop
or
in
imul
or
jne
dec
ljmp
mov
jmp
and
add
es
imul
xchg
faddl
mov
jo
leave
pop
icebp
ljmp
jno
shlb
inc
push
adc
pop
cmc
inc
push
and
xchg
and
repz
repnz
push
js
xchg
addl
mov
into
aaa
and
cmpsl
imul
cmp
inc
xchg
sti
xchg
lret
dec
mov
mov
or
cmpxchg
xchg
daa
mov
xchg
pop
sub
inc
inc
cli
sbbl
mov
xchg
into
jo
sub
orl
nop
mov
push
mov
dec
imul
clc
add
jle
push
mov
adc
xchg
out
xchg
pop
jle
dec
inc
test
jb
add
adcl
outsb
mov
bound
push
in
jb
mov
mov
lret
test
stc
dec
lcall
dec
pop
loope
out
xlat
jmp
mov
repz
mov
push
xorl
cmp
jne
cmp
xchg
mov
dec
sub
jb,pn
test
xchg
sub
aas
lcall
push
call
aaa
repnz
dec
cmp
push
fimull
xchg
fisttpll
lea
repnz
jp
fldl
pop
test
imul
and
rolb
sbb
jb
sub
dec
enter
sub
pop
imul
mov
scas
and
xor
sahf
es
leave
das
cmc
add
test
push
adc
mov
ds
mov
mov
dec
mov
js
or
ja
out
mov
fidivl
pop
mov
xor
lret
pop
sub
popa
jecxz
adc
pop
sbb
andb
jle
mov
xor
or
mov
fdivrs
lcall
outsb
cmpsb
gs
xor
aaa
movsl
stc
std
ljmp
jge
jmp
and
xchg
cmp
jmp
setbe
xchg
cs
pop
arpl
push
mov
sub
xchg
lock
xchg
cs
outsl
xor
aad
cmpb
sbb
and
pop
pop
pop
cmpsl
cld
lods
gs
into
js
and
jo
fcomi
xchg
loope
divb
push
xchg
xchg
mov
adcl
and
mov
adc
mov
not
dec
mov
cmp
xchg
movsl
movsb
decl
repnz
in
loop
push
push
jge
jle
test
cmp
jmp
data16
jae
mov
jp
jmp
ret
mov
xor
mov
pcmpeqd
cmp
shrb
int3
addb
je
dec
dec
into
int3
lods
std
dec
dec
fisubs
xchg
sub
jp
xchg
pop
add
sub
mov
inc
sbb
or
xchg
dec
jl
dec
mov
fwait
les
inc
aaa
sbb
bound
xor
inc
outsb
stc
inc
mov
jmp
xor
mov
xor
cs
pop
sub
lds
jmp
mov
mov
arpl
or
mov
scas
andl
adc
pusha
sbb
cwtl
xchg
cmpb
push
mov
test
mov
xchg
ljmp
mov
fbld
and
or
lods
scas
mov
fisubrs
pop
rolb
mov
xlat
mov
sbb
dec
pusha
js
orb
sub
mov
push
xchg
and
ds
push
and
ffreep
and
mov
xchg
push
or
pop
stos
shll
sub
push
push
arpl
cmc
sub
incl
xor
jae
push
mov
pop
push
test
test
imul
mov
rorb
call
scas
add
cld
mov
mov
pop
pushf
mov
sbbl
fiadds
push
out
mov
sub
xor
ljmp
pop
jl
and
jmp
xor
cmp
cmp
jp
pop
mov
ja
lea
mov
cmpsb
iret
rorl
popa
dec
es
or
mov
and
daa
int
shlb
mov
xchg
push
add
jmp
xor
or
push
cmp
pop
gs
push
jne
sbb
lahf
in
xchg
daa
lea
orb
jecxz
mov
and
xchg
mov
sahf
mov
mov
rorb
aad
dec
imul
aam
hlt
mov
pop
pop
xor
cs
mov
call
arpl
cli
lahf
loop
or
dec
cld
lret
push
inc
insl
add
add
cmpsl
jle
mov
lret
iret
mov
imul
and
lods
lea
sub
notb
dec
rorl
lock
js
jb
aam
jl
inc
ja
mov
inc
dec
movsl
ret
daa
or
sbb
fsubl
mov
jg
cmp
pop
push
leave
jge
cmp
lock
and
out
jb
mov
into
xchg
loope
pop
pop
sub
in
ss
adc
jo
movsl
jl
nopl
imul
jb
or
aaa
mov
out
mov
jno
jge
leave
out
sub
add
fisttps
jnp
sti
mov
dec
xchg
pop
and
pusha
cmc
cli
mov
dec
xchg
test
ret
dec
aam
int
sub
addr16
sub
std
iret
jbe
sub
or
data16
jecxz
cmp
inc
adc
int
inc
mov
push
pop
jns
les
cltd
mov
nop
jb
jne
arpl
sbb
faddl
mov
mov
lock
push
or
push
nop
sbb
rcr
and
or
pop
cmp
les
das
sbb
arpl
ficompl
adc
testb
fidivs
mov
sti
add
jo
push
sbb
subb
adc
sbb
repz
ret
jne
xor
imul
mov
scas
mov
dec
or
pop
mov
xor
xchg
mov
fdivrl
sub
mov
lar
jae
inc
fimuls
in
or
adc
dec
leavew
mov
mov
clc
call
ffree
push
cs
imul
sub
cmp
ror
pop
mov
cltd
cmp
add
lods
xor
bound
inc
stc
jnp
jle
insl
mov
loop
add
mov
imul
imul
mov
push
mov
clc
add
mov
jnp
and
jne
sbb
popa
jmp
and
dec
dec
das
rolb
cmp
stos
mov
pop
lcall
cmc
xchg
sub
xchg
ja
dec
mov
pop
dec
mov
mov
pop
iret
mov
sbb
inc
stos
jns
xor
pusha
jge
cmp
incw
push
inc
je
popf
dec
add
rcr
daa
out
pop
cmpsl
adc
je
inc
popf
outsb
sbb
fcomps
add
popa
dec
int
push
mov
push
hlt
push
repnz
mov
je
sarb
inc
lcall
test
mov
bound
out
or
push
lret
int
xchg
xor
in
orb
sbb
inc
in
cmpsl
pushf
cmp
push
popf
addr16
jnp
repz
out
or
cmpsl
add
xchg
les
push
mov
bound
fnsave
test
les
push
sar
imul
movb
andb
andb
mov
subl
fsubrl
mov
testl
pop
xor
mov
mov
nop
outsl
or
cmc
inc
xchg
mov
mov
sbb
subl
jns
pop
inc
sbb
push
ss
xor
or
clc
jb
pop
rcrb
fsubrl
and
xchg
mov
scas
loopne
fbld
je
xchg
xor
jmp
mov
push
xchg
push
pop
notb
push
ret
add
xor
jbe
movsb
pop
pop
jle
push
mov
mov
mov
cmp
scas
mov
fidivrs
aas
add
sbb
sbb
jl
insl
dec
mov
add
shlb
adc
or
outsb
inc
loopne
outsb
ror
sbbl
mov
pushf
fs
movsb
ds
mov
dec
sub
mov
out
jp
xchg
dec
mov
rcl
aam
sbb
repnz
inc
sahf
sbb
mov
xor
fisubl
mov
fsubrp
jnp
push
xchg
cmp
das
mov
mov
mov
leave
stos
aad
ds
out
pop
adc
mov
orl
push
rolb
jns
xor
fidivrs
or
repnz
mov
test
movsl
mov
or
je
xor
mov
fisubrl
sbb
xor
insl
xchg
inc
dec
lret
fisubs
popf
scas
rcrl
xchg
dec
inc
sahf
mov
clc
jle
mov
stos
pop
lahf
add
out
pop
repz
test
inc
in
test
es
cmp
rorl
mov
xlat
add
push
int3
ljmp
repz
pop
leave
pop
sarb
sub
icebp
jge
mov
push
ss
cltd
jbe
push
mov
lret
mov
push
mov
loope
pop
mov
ret
inc
cli
scas
sbb
mov
xchg
or
sbb
les
sbb
jbe
jnp
sub
push
movsl
outsl
ss
aaa
fbstp
cs
mov
cmp
sub
xor
sti
push
outsb
push
cmp
gs
cli
push
and
mov
int
cmp
adc
incl
add
add
dec
test
int3
xor
pop
inc
sub
fnstsw
mov
push
leave
push
add
and
adc
jo
int3
lea
dec
cmp
cmp
stos
cwtl
dec
outsl
adc
and
push
stos
mov
jne
xlat
out
mov
xchg
adc
ret
fucom
ret
imul
xchg
mov
daa
cmp
xor
icebp
int3
insl
cli
dec
pushl
sbb
add
movsl
and
pop
arpl
pushf
inc
sahf
push
lret
mov
jo
xchg
xchg
out
cwtl
dec
cmpsb
loopne
je
rcr
mov
adc
stc
jecxz
sbb
xor
out
push
sub
sbb
es
sub
nop
je
test
adc
arpl
sbb
push
cmp
push
sub
rolb
popa
pop
fs
aaa
cmp
add
repz
sub
mov
inc
ret
adc
pop
fwait
rcll
fmull
inc
lock
adc
adc
pop
mov
nop
push
and
jl
cmc
mov
dec
cmpsl
in
mov
adc
notb
cmc
sub
stc
out
or
clc
xor
pusha
xchg
push
out
adc
insb
out
arpl
stos
mov
xor
adc
inc
xchg
stos
ss
imul
jo
push
pop
xchg
addr16
push
scas
popf
pop
cli
ret
xor
jb
int
rorb
aam
loope
dec
jno
mov
mov
iret
push
or
in
subl
sub
dec
xor
std
jno
test
xor
fcmovu
or
or
xor
imul
dec
jno
dec
fmuls
push
mov
add
adc
call
mov
add
fnstsw
adc
mov
jne
fdivl
adcb
inc
ficoml
push
movsl
aam
fidivl
pop
sub
in
shr
pop
pop
xchg
push
jge
cmpsl
daa
div
mov
in
int
dec
dec
ds
xor
adcb
push
cs
mov
lret
clc
jmp
das
ja
pop
add
xor
jle
push
fwait
or
pushf
mov
dec
fs
push
dec
add
cmp
mov
xchg
pop
add
roll
gs
aas
push
sbb
test
or
mov
sub
mov
movsl
lods
not
pushf
dec
add
xchg
out
sbb
xchg
jmp
mov
inc
inc
aam
orl
lahf
add
filds
cmc
je
xchg
stc
add
ss
fadds
adc
fs
sub
fsubl
xorl
xchg
jb
push
int3
ss
pusha
out
cmpsb
cwtl
inc
adc
int
int3
enter
sub
pop
and
and
lods
push
hlt
dec
mov
pop
imul
sub
imul
lret
js
xor
jecxz
or
fs
fstl
pop
jecxz
and
push
dec
sbb
shr
mov
sbb
push
or
jns
mov
or
inc
pushw
das
fstpl
mov
push
sub
or
or
outsl
in
scas
adc
sub
or
sbb
sub
sbb
adc
int3
mov
push
jle
mov
pop
iret
in
addr16
add
aam
xchg
stos
fs
mov
cs
loopne
pop
xor
aam
sbb
imul
sbb
pop
cli
pop
lea
insl
mov
out
inc
jno
xchg
xor
data16
into
jmp
jp
inc
cmp
les
rclb
leave
cmc
loopne
cmp
push
call
loope,pn
test
dec
add
repz
ja
stc
sub
xchg
mov
pop
mov
stos
xor
js
icebp
ss
imul
sub
push
dec
insb
lret
dec
jecxz
cltd
outsl
xlat
pop
sbb
inc
ja
cmp
xchg
mov
nop
lcall
and
int
push
outsl
mov
mov
outsl
jns
dec
lock
dec
subps
hlt
mov
xchg
xchg
gs
inc
mov
push
sbb
jp
sbb
mov
out
fists
inc
jnp
pop
jl
push
pop
pop
add
xor
or
pop
rep
lods
es
fs
movsb
sbb
ret
dec
scas
adc
lea
add
cwtl
outsb
pop
lds
xor
mov
test
push
test
pop
sbb
imul
or
pushf
loopne
jge
loop
dec
addr16
movsb
inc
loopne
cwtl
mov
pop
lock
add
jecxz
sub
push
gs
imull
jae
mov
xor
sub
xchg
xlat
sbb
std
mov
out
dec
call
sub
mov
sbb
lods
mov
lock
iret
mov
popf
mov
push
push
sub
push
pop
enter
int
xorb
je
push
mov
jnp
mov
cmp
ja
dec
and
sub
and
adc
ljmp
in
cmp
sub
outsl
imul
rorb
into
dec
loop
xchg
and
inc
fwait
inc
inc
push
shr
dec
mov
mov
mov
iret
aas
sbb
out
insb
stc
inc
mov
gs
push
jp
cmp
mov
mov
out
outsb
inc
pop
cltd
inc
scas
outsl
cmc
faddl
push
mov
fdivr
ljmp
cmp
lods
pop
mov
and
cmpsb
sahf
pop
pop
adc
pop
sub
out
or
and
xorl
xchg
jle
aaa
imul
ret
dec
popf
je
popa
jp
dec
enter
pop
std
xor
pop
inc
add
sub
cmp
lcall
pop
ja
push
push
popf
push
filds
push
mov
js
and
sub
shrb
xor
xor
mov
es
out
jge
and
and
sarb
xchg
jns
or
out
sbbb
sub
fsubrs
mov
jge
xchg
mov
loopne
iret
fnstenv
sub
pop
fs
mov
es
mov
aad
xchg
into
in
mov
outsl
jmp
daa
jecxz
push
lds
nop
shll
jg
jp
sahf
scas
popa
cli
push
fidivl
sub
shrl
jl
mov
cli
ficoml
jmp
nop
cmc
daa
sbb
pop
jns
js
dec
dec
pop
xor
xor
sub
sbb
outsb
sahf
testl
push
jnp
sbb
outsb
sub
inc
pop
lret
pop
gs
xor
rorb
pop
or
xchg
jns
push
aam
mov
rcr
cmpsb
dec
sub
popa
xor
inc
insl
sarl
inc
cwtl
out
stos
aaa
in
cmp
push
rcrl
cmpsl
xor
or
shll
dec
aas
fcoms
loop
xchg
sub
mul
cmc
je
pop
icebp
cs
lea
mov
shrb
js
pop
decl
cltd
jp
stos
lret
imul
cld
cmp
inc
xor
mov
cmp
dec
sbb
push
xor
fcomi
movsb
in
jle
jno
add
dec
leave
jnp
push
sub
fs
pop
push
mov
lret
adc
push
fidivs
rol
test
out
cmp
es
or
and
jb
jmp
or
cmpsl
pop
xchg
jae
add
int
push
test
shl
lahf
jecxz
push
sub
jle
and
jle
imul
push
pop
xchg
in
sub
imulb
or
jae
or
dec
adc
test
cmc
adc
mov
ss
xchg
test
fmull
insb
aad
aam
lock
lahf
sbb
jg
scas
jp
ss
inc
xor
sti
shl
and
pop
cmp
cmpsl
push
push
cli
loopne
stos
pop
hlt
fucom
cmc
mov
sub
xor
push
push
sub
add
cltd
or
loopne
adc
inc
cmpsb
insl
push
pop
loopne
addr16
xchg
fstl
fs
fwait
mulb
adc
jge
outsl
movsb
and
mov
mov
mov
sbb
nop
pop
repnz
dec
push
scas
jo
out
dec
and
cltd
xor
xchg
and
mov
pop
pop
push
cli
mov
adc
imul
ljmp
cmp
es
cmp
cld
out
mov
mov
pop
stc
fstps
mov
xchg
mov
ret
stc
aas
out
sahf
lret
shlb
cmp
xor
lods
das
xchg
test
pusha
imul
in
dec
mov
lret
bound
push
jae
adc
add
test
pop
mov
and
pop
pop
mov
and
or
jno
sbb
lods
std
in
lret
incb
jle
test
lods
bound
fmull
les
adc
pop
mov
dec
mov
stos
lret
xchg
inc
mov
stos
push
jle
out
lret
sbb
dec
jns
fstl
mov
fldenv
and
cmp
pop
in
test
lock
test
sub
mov
mov
cmp
add
sub
jbe
cmp
incl
jle
mov
ds
xchg
mov
scas
aaa
or
in
in
and
push
inc
adc
inc
out
call
push
shl
dec
cmc
sbb
outsb
dec
lods
sub
cmp
scas
fnstcw
adc
mov
dec
jo
mov
aad
push
jbe
xor
aaa
jbe
les
fs
sbb
arpl
push
mov
and
das
cmp
mov
cmpl
aam
push
js
cmp
addb
test
daa
or
push
mov
data16
push
inc
adc
add
xor
test
mov
inc
daa
push
clc
pop
push
int3
es
js
adc
jb
icebp
imul
cltd
xor
bound
push
dec
xchg
jno
mov
jl
xor
ljmp
mov
add
out
icebp
nop
and
jo
iret
pmullw
dec
push
in
loop
xchg
cmp
jmp
mov
mov
xchg
aam
sub
outsb
loop
jmp
fdivrs
cli
mov
xchg
and
repnz
punpcklwd
cwtl
adc
fisttpll
xorb
mov
sbb
mov
sbb
stc
jp
dec
cmp
xchg
mov
mov
aas
cwtl
rolb
mov
popa
xor
icebp
sbb
xor
push
out
test
js
fxch
adc
fstl
or
push
movsb
mov
xchg
jg
jge
jge
pushf
mull
dec
xorl
pushf
rcr
insl
into
push
or
xor
and
xchg
cmp
cvttps2pi
add
mov
addb
or
sbb
xchg
das
dec
rorl
cmp
addb
inc
adc
rcl
push
in
pop
sbb
xlat
and
adc
pushf
push
cs
pop
mov
sahf
stc
push
ja
arpl
push
inc
xchg
xor
out
jg
inc
push
ror
mov
fsubl
imul
xchg
sbb
shll
imul
pusha
jae
scas
add
ffree
sub
leave
mov
push
sbb
jno
add
jae
push
inc
shlb
mov
dec
cld
push
loopne
data16
cmp
pop
imul
or
pop
fsubp
pusha
adc
lret
add
push
add
push
in
adc
call
push
sbb
cmp
arpl
or
mov
dec
dec
pushf
cld
mov
and
scas
test
loope
jno
push
lods
mov
mov
hlt
and
loope
adcl
pop
and
insb
int3
adc
insl
out
push
pop
push
xchg
jns
or
cmpb
push
sub
jb
stos
lods
cmpsl
or
je
hlt
aad
jne
stos
sub
imul
xchg
xchg
jp
pusha
lods
xorl
lock
xlat
jo
addl
sub
sbb
bound
cmp
call
repnz
test
add
pop
into
add
xchg
jmp
es
inc
stos
push
dec
inc
cmpsl
adc
push
stos
stc
xchg
sbb
cmpsl
insl
sub
pop
xor
pop
loope
and
fwait
cs
ret
jmp
xchg
xor
and
jmp
ret
sti
loop
pop
pop
xor
dec
pop
jne
push
inc
and
and
mov
and
sub
adc
mov
fsubl
mov
andl
int3
dec
add
xor
xchg
mov
xor
sarl
cmp
lock
out
sub
mov
mov
test
negb
test
mov
mov
xor
outsl
cmp
xchg
repz
push
cmp
fwait
in
and
mov
js
loop
xchg
iret
in
fcomps
aad
movsb
in
imul
sbb
sarb
and
pop
rorl
pop
ljmp
sbb
leave
push
je
fdivrp
repnz
cwtl
mov
test
sbb
mov
jmp
pop
mov
push
mov
jns
pop
dec
aaa
or
gs
inc
pop
aaa
mov
cmpsb
not
repz
push
adc
enter
xchg
xor
and
xor
cmp
popf
xlat
xor
xchg
dec
jmp
jp
popa
jg
dec
mov
push
mov
or
or
and
outsb
rorb
sbb
fiadds
dec
add
xlat
inc
mov
ret
out
push
jmp
stos
les
cli
out
or
and
sbb
repnz
mov
les
jl
fsubs
cmpsl
sbb
scas
int3
pop
mov
jo
mov
mov
cld
push
cmp
mov
loop
pop
leave
cwtl
jae
pop
sub
popa
push
lahf
push
sub
out
cli
call
data16
pop
faddl
add
lock
out
push
jmp
insl
in
sub
mov
stc
xor
xchg
mov
into
pop
xor
and
add
lcall
ss
fsubrl
aaa
mov
jb
aaa
ret
mov
les
rcll
enter
aam
fdivrs
loope
dec
outsl
lods
lret
mov
mov
fcoms
sub
cmpsl
das
fiaddl
das
push
gs
sub
dec
fs
movl
jmp
subl
sar
sub
sub
pop
add
fisubrs
jae
aad
in
cmp
imul
cwtl
repz
les
mov
cmp
mov
repnz
data16
jp
pop
add
or
inc
pusha
inc
cli
sub
cld
inc
rcr
outsl
or
cmp
cwtl
int
push
in
sbb
sbb
das
icebp
dec
divb
jo
dec
add
in
rorl
mov
cmc
jmp
ret
data16
ss
or
into
add
xchg
jns
mov
push
andl
sarl
loope
leave
push
ja
pop
cwtl
and
pushf
or
xchg
cmp
cmp
bnd
adc
incb
pop
inc
ljmp
add
clc
jae
lds
cs
imul
out
stos
imul
jecxz
inc
lods
andb
cmc
cs
or
sub
xchg
fisttpll
and
call
mov
xlat
adc
lea
fldcw
dec
sti
lods
pusha
jne
jmp
dec
lret
sbb
in
adc
in
fldlg2
inc
hlt
int3
insl
xchg
fcmovu
sbb
insl
clc
stos
popf
jo
push
mov
shlb
and
mov
adc
jbe
rcl
mov
mov
lret
inc
add
or
sub
mov
or
jge
cmp
lahf
push
mov
fcomps
mov
fnsave
in
dec
cmp
cmpsl
std
push
dec
lret
sti
push
lods
push
clc
pop
wbinvd
imull
pop
xchg
inc
ret
int3
lds
movsl
cmp
mov
rcrl
loop
ffreep
call
cmpsb
fsubrl
pop
mov
fidivrl
hlt
adc
xor
fistl
aam
mov
sti
sub
std
fiaddl
fldl2e
sbb
pop
cmp
push
xchg
sub
push
sbb
test
push
orps
cmp
imul
lahf
shl
mov
jns
lods
ja
lds
xor
shll
mov
js
pusha
stc
xor
or
sub
gs
add
mov
daa
xchg
dec
lahf
adc
dec
or
pop
ret
and
outsb
mov
das
js
into
jne
xor
cmpb
jnp
or
leave
fs
repnz
fs
mov
or
sbb
mov
jle
pop
pop
into
fidivrl
in
add
aas
dec
jp
stos
inc
lea
movsl
cwtl
add
mov
mov
test
lods
loopne
sub
jno
jmpw
and
push
addr16
ret
imul
jbe
imul
cwtl
imul
inc
fsubrl
sbb
outsl
jge
stos
ljmp
mov
movsl
push
mov
xlat
cltd
rcrl
dec
addr16
dec
je
loopne
testb
in
mov
scas
ret
js
xchg
dec
adc
xchg
add
icebp
xor
add
adc
aam
mov
and
fldt
ljmp
minps
sahf
imul
sarb
pop
mov
pop
dec
std
js
push
shlb
inc
jno
pop
mov
xchg
add
mov
lds
dec
enter
jnp,pn
adc
mov
nop
movsl
jl
sbb
cmpsl
dec
stos
pop
aam
dec
out
push
lods
push
jmp
xor
repnz
mov
stos
fs
fsubp
or
lret
lret
call
xchg
int3
fisubl
cwtl
sarl
sti
cmp
pushf
or
push
clc
stos
lret
dec
jo
lds
outsl
loop
or
in
jge
ficoml
ja
test
or
jp
mov
lock
push
mov
or
in
fs
and
mov
icebp
mov
aas
gs
mov
ja
jb
mov
lcall
and
push
mov
js
mov
dec
mov
push
movsb
les
insb
xchg
sarb
mov
popa
aaa
fsubs
add
cmpsl
pop
insb
cmp
and
cltd
fcmovnb
xchg
mov
rol
xor
mov
and
imul
push
in
push
and
pop
jp
xchg
sbbb
mull
xchg
mov
push
clc
repz
aam
mov
jecxz
xlat
inc
mov
inc
jp
adc
leave
or
cmp
shr
bnd
hlt
insl
cltd
inc
shrb
movsb
into
add
nop
inc
jge
xor
gs
mov
call
dec
push
push
insl
arpl
xchg
mov
add
mov
mov
ret
inc
jmp
or
xchg
push
fst
jmp
pusha
mov
arpl
popl
popa
loop
inc
in
test
xchg
cwtl
adc
scas
push
dec
mov
xor
iret
adc
sbb
ss
dec
jl
cltd
adcl
stc
into
scas
dec
int
xchg
in
imull
push
add
test
sbb
je
out
adc
pop
jno
jb
add
push
sbbb
push
je
shll
xor
ss
out
dec
pop
pop
sbbb
fwait
dec
or
mov
or
sub
cltd
test
fadd
mov
cmp
arpl
adc
fadd
sbb
jl
dec
add
dec
sbb
jge
js
addr16
jnp
inc
lods
leave
xchg
jb
adc
test
cmp
push
adc
inc
dec
xor
shlb
jmp
ret
outsl
lret
cltd
mov
xlat
mov
inc
or
inc
xor
mov
jge
clc
sub
and
add
pusha
rcr
pushf
clc
push
adc
jb
cmpsb
scas
repnz
push
adc
or
cltd
outsb
pop
clc
test
fsubrl
shrl
inc
jnp
add
and
test
add
push
sbb
repnz
cltd
push
scas
or
shrl
adc
jle
ja
xchg
pop
sbb
iretw
enter
cwtl
pusha
lds
cli
sbb
mov
xor
test
mov
mov
mov
pop
mov
test
das
cmpsl
or
inc
cmpsl
pop
and
pop
xor
out
aaa
add
test
sub
mov
xlat
inc
pop
lea
dec
clc
mov
mul
popf
scas
push
roll
xor
add
movsl
sti
call
xchg
pusha
aam
pop
test
pop
int
pop
cmp
std
adc
fsts
sub
popa
mov
pop
sbb
lcall
sbb
dec
jae
pop
xchg
arpl
mov
push
nop
popa
adc
sbb
sbb
jbe
add
mov
xor
xor
jne
push
jbe
jne
mov
mov
in
sbb
shll
pusha
flds
jecxz
push
shrl
pop
xor
loop
ffreep
loopne
fisubs
adc
xorb
notl
xor
out
pop
sti
cmp
sbb
lods
inc
jbe
xchg
inc
aad
inc
idivl
iret
loope
fsubrl
jno
iret
scas
rcrb
ljmp
pop
xchg
pop
popf
mov
enter
sbb
movsl
mov
lods
daa
cmpsl
lret
fadd
push
xchg
stos
jno
mov
cmp
sbb
inc
iret
push
adc
cmpsl
mov
arpl
pop
sar
and
push
dec
and
pop
add
loop
loop
test
loope
test
mov
arpl
dec
jl
xorl
mov
lahf
ss
push
cwtl
jo
nop
mov
sbb
into
test
lcall
push
cmpsl
mov
loope
jecxz
push
pop
xchg
popa
xchg
mov
jns
push
nop
scas
mov
in
shll
outsl
lahf
xchg
pop
jmp
mov
adc
pop
inc
adc
dec
in
sbb
dec
fldcw
xor
push
dec
pop
lcall
data16
or
daa
sbb
and
mov
dec
insb
xchg
xchg
ficoml
push
lods
mov
mov
xorl
mov
in
test
jle
or
aaa
arpl
push
inc
pop
lock
mov
push
and
push
push
lods
mov
xchg
lahf
pop
and
sti
xlat
cmp
pop
xor
movsb
mov
data16
icebp
mov
imul
idiv
nop
aaa
xlat
scas
xchg
clc
out
pop
jae
arpl
pushf
or
push
push
cmc
inc
mov
movl
push
mov
mov
sub
or
mov
insb
rcl
sub
lret
sar
mov
jnp
fsubp
push
mov
test
push
sub
cmp
mov
int
out
mov
jl
icebp
xchg
adc
lahf
test
sahf
imul
lret
test
hlt
insb
arpl
arpl
jmp
or
jae
movsl
cmp
fdivrp
insl
cmp
jbe
dec
mov
ds
cmp
sbb
js,pt
sub
test
int
rclb
add
jmp
cmp
aas
cli
mov
cwtl
inc
loop
js
movsl
scas
dec
ret
mov
into
lret
ret
insb
add
dec
mov
in
in
test
pushf
aaa
daa
jns
sbb
push
clc
cld
imul
xchg
xchg
aaa
push
cmp
lcall
mov
push
and
push
push
int
movsb
inc
dec
xchg
pop
sbb
test
les
push
jmp
hlt
repz
cli
pop
jno
scas
out
movsl
out
cmp
fcoms
fwait
int
lods
jns
loope
mov
push
and
sbb
lret
test
pop
cmpsb
cmpl
popa
cmc
add
mov
push
add
ljmp
push
arpl
fidivl
sahf
sti
aam
fistps
jp
inc
lahf
pop
add
adc
adc
mov
mov
setae
in
mov
mov
cmpsl
jmp
xor
sub
sub
dec
ret
or
pop
mov
test
fdivrs
or
mov
fdivs
push
adc
add
inc
xchg
jbe
sbb
andb
into
jge
arpl
sbb
xchg
mov
inc
aaa
xor
mov
push
or
out
pusha
dec
stos
push
roll
mov
orb
leave
rclb
mov
jno
and
jnp
push
in
stos
jae
inc
lds
adc
push
cmp
js
mov
gs
push
jge
inc
add
popf
int
sub
icebp
or
xchg
arpl
jno
fcompl
pop
mov
pop
add
test
sub
or
fcmovu
fisttps
aad
adc
out
and
mov
fcoms
sub
and
jl
push
pop
jmp
arpl
cmp
cmc
mov
mov
es
sbb
fistl
dec
sub
add
pop
leave
in
ljmp
dec
dec
iret
dec
mov
and
mov
jl
dec
lea
sbb
sti
jp
jecxz
addr16
scas
fistpll
push
mov
aam
add
jno
es
xor
sbb
pop
mov
push
add
mov
mov
and
mov
repnz
inc
in
pop
jbe
rcr
cmp
pop
outsb
roll
pushf
mov
cmpsb
inc
pop
pop
inc
mov
add
adc
add
loop
xor
bound
fsub
dec
movsb
xor
add
inc
test
add
sbb
out
pushf
mov
adcl
enter
js
add
cmc
xchg
push
jge
and
cmp
aad
out
fcoml
xor
sarb
dec
ss
std
xchg
jmp
push
sub
and
imul
jge
pop
std
sub
add
rcrl
call
jo
scas
xchg
mov
fs
std
arpl
repz
mov
xchg
jns
push
scas
pushf
xor
mov
mov
cld
test
jb
fcom
movsl
or
add
jge
adc
cmc
sub
push
cs
xchg
lea
cmc
mov
pop
fcompl
outsb
aam
stos
je
ljmp
sub
adc
and
lea
xor
sbb
js
loope
dec
cmc
arpl
repz
or
dec
test
iret
dec
mov
pop
clc
inc
pop
sub
outsb
push
sbb
call
jns
mov
mov
or
movsb
mov
das
xchg
and
jno
fimuls
rorb
loope
mov
mov
mov
mov
inc
sub
dec
dec
mov
fs
fwait
push
push
test
out
push
testl
adc
sbb
mov
adc
aam
jns
xor
mov
mov
cltd
test
in
mov
sbb
add
sti
stc
mov
stos
stc
mov
add
mov
inc
mov
in
sub
repnz
pop
push
or
popa
rol
pop
mov
jae
sbb
pop
rorl
nop
jns
adc
xchg
fidivs
repnz
test
lods
lahf
mov
popa
shll
adc
pop
unpckhps
fimull
cld
cld
js
pop
mov
ja
xchg
sub
jle
cmp
in
js
sahf
lcall
ljmp
arpl
sub
xchg
pushf
jecxz
into
xchg
je
sahf
mov
es
mov
hlt
gs
outsl
shll
push
shll
mov
fucomi
testb
loopne
aas
lea
sbb
lock
movsb
iret
and
inc
jge
sub
shlb
jg
jmp
mov
inc
ret
jle
push
leave
jns
repnz
mov
int
inc
xchg
cltd
mov
stc
cld
push
sti
mov
xor
sbb
sbb
mov
lock
xchg
cmc
ret
mov
add
out
sar
aam
xor
in
inc
imul
mov
mov
push
push
stos
push
pop
loope
je
addr16
fisttpll
inc
jnp
jmp
cmc
xchg
stc
mov
mov
in
cmc
std
ds
cmpsl
sub
ds
jle
jo
xchg
sti
cmpsb
sbb
add
push
inc
ljmp
mov
jp
pop
cmpxchg
and
push
mov
or
fcompl
dec
test
pop
leave
dec
sbb
push
pop
and
scas
cltd
sub
inc
out
fs
test
ljmp
sbb
cmp
repnz
mov
mov
aad
mov
mov
ret
movntps
in
cmpsb
fidivs
loope
xlat
inc
int3
sti
inc
adc
bound
fstl
out
or
cltd
cmp
dec
inc
add
sbb
test
stos
negb
adc
inc
fs
shrl
sti
jo
or
insl
and
das
cmc
in
ljmp
lret
call
ja
pop
cltd
xchg
lds
fisubl
pusha
jp
in
xor
cli
js
jg
sub
mov
lods
aam
test
jge
ret
and
and
cli
dec
push
push
lcall
mov
sub
imul
or
pop
xor
cmp
and
add
jl
and
sbb
lcall
ss
js
pop
aas
insl
stos
push
movsb
int
pushf
out
inc
mov
sti
idiv
stos
mov
mov
sub
adc
addr16
dec
arpl
cmpsl
fiadds
lcall
or
jmp
mov
loopne
gs
ss
cmp
loope
fcomp
fwait
lock
lcall
rcll
push
sarb
hlt
mov
cmp
xchg
ljmp
imul
mov
mov
dec
fucomip
xor
jnp
dec
dec
test
outsl
cmp
sbb
mov
ficomps
add
lea
jecxz
dec
xchg
jle
mov
jl
cmp
pop
jbe
cld
jno
sbb
shlb
jg
mov
out
pop
and
orl
adc
jbe
dec
popf
sub
xchg
stos
dec
mov
xchg
xlat
pushf
mov
es
xchg
xchg
push
shr
sbbl
scas
lock
jbe
mov
fstpt
aaa
popf
inc
push
dec
and
leave
insb
inc
ret
dec
push
ds
js
pusha
mov
push
cmp
or
insl
fs
add
and
sub
xchg
or
iret
dec
fsts
sbb
shll
push
dec
stc
sub
lret
fwait
outsl
out
and
outsb
cmc
and
popa
sub
mov
lret
or
dec
add
inc
ficompl
jno
inc
into
or
dec
popa
cmp
icebp
inc
lret
sub
daa
jle
scas
or
hlt
mov
popf
cmp
aas
dec
ret
sub
and
lods
pop
mov
js
fnstsw
xchg
pop
jne
movzwl
das
repz
push
js
mov
test
lock
adc
xchg
add
dec
push
cmpsb
cmpsb
push
sub
xchg
cld
ljmp
pusha
outsl
mov
pop
out
bound
or
cmp
xor
adc
or
in
insb
shll
dec
add
pushf
lea
ljmpw
ror
mov
fldt
fsubrp
fisttpll
mov
loope
movsl
mov
jno
jl
lret
lods
jge
enter
push
mov
movb
mov
jns
stos
cmp
mov
testb
xchg
mov
push
pop
sub
je
std
dec
sbb
call
or
out
cmp
dec
les
xor
push
gs
adc
fstl
std
loope
xchg
enter
cmp
into
jno
nop
push
addl
push
pop
and
arpl
repz
ds
cltd
xlat
shlb
lar
sbb
pop
mov
adc
fs
out
imul
lret
arpl
or
loopne
decl
sarl
outsl
and
ljmp
rolb
jo
adc
mov
inc
inc
icebp
cmp
cmpsl
mov
in
testb
fdivrl
push
lea
sbb
jbe
stos
jnp
lock
inc
or
ss
push
jg
lea
sarl
dec
xchg
push
dec
bnd
je
shlb
pushf
xorb
je
inc
inc
stos
data16
inc
push
pop
xor
mov
test
sbb
xchg
jge
psrld
out
jno
jl
mov
xor
ljmp
inc
mov
lcall
push
rcrb
js
sbb
mov
or
sub
mov
pop
clc
std
popf
push
ljmp
inc
lret
stos
fidivrs
mov
icebp
shll
xor
push
rol
push
mov
sbb
mov
push
push
hlt
sbb
adc
push
ljmp
pop
imul
dec
mov
or
push
bound
mov
xor
mov
mov
xchg
xor
stc
fs
repnz
ljmp
mov
mov
jnp
mov
in
in
lods
mov
outsb
or
ds
push
mov
incl
sbb
jecxz
cli
push
xchg
ss
mov
jle
jmp
cld
push
fdivrp
pop
hlt
or
dec
xor
sbb
adc
aad
out
mov
or
push
xchg
mov
das
lret
cmp
test
aas
scas
in
scas
pop
aas
cmp
add
sahf
das
cld
leave
mov
mov
jle
stc
pop
mov
mov
repnz
dec
pop
jecxz
push
adc
mov
sbb
pop
xlat
ret
and
push
xchg
mov
and
jg
sbb
shlb
outsl
push
mov
jnp
pop
pushf
adc
mov
dec
out
imul
imul
bound
shl
stos
pop
jno
adc
sarb
fsub
push
sbb
xchg
mov
mov
mov
jle
sahf
jmp
ret
and
xor
cmpsl
test
gs
aam
std
inc
shll
or
dec
fdivrs
shrb
in
addr16
movsl
pop
fildll
in
aad
pop
fildl
iret
xor
in
incb
mov
fstpl
cltd
cmpsb
insl
shrl
inc
adc
push
imulb
rorl
daa
and
enter
cmp
in
push
sbb
fistps
mov
pop
jecxz
movl
xor
sarl
aad
je
js
cmc
fdivrl
pop
lea
mov
or
and
cmp
stos
lcall
fdivs
jecxz
jno
data16
or
or
xchg
push
fwait
jae
xchg
add
mov
in
call
roll
jle
xor
repnz
rcr
movsb
adc
out
xchg
sub
lock
cld
pop
xor
pushf
repz
aas
fsub
ret
or
test
pop
cmp
jnp
pop
out
ljmp
das
popa
test
mov
pop
sub
jno
mov
bound
xor
push
xor
pop
pop
jne
loop
ljmp
xor
xor
andb
addl
xor
inc
jg
push
outsb
sbb
pop
mov
loop
inc
popf
add
lret
addr16
sub
lods
test
ret
in
xor
or
outsb
sub
into
sbb
sahf
mov
mov
lods
or
and
inc
fwait
xor
push
push
inc
aad
rcl
jl
out
push
lret
out
mov
mov
xchg
push
xor
leave
cmp
xchg
jb
and
pop
repz
gs
jl
jg
or
xorb
add
mov
cwtl
int
lods
push
dec
cli
ficoml
movsl
shl
push
sub
or
mov
int3
adc
cmp
xor
or
mov
outsl
rcrl
xor
mov
pop
mov
inc
sarl
push
mov
sbb
test
push
mov
scas
cmpsb
inc
mov
out
mov
mov
and
xchg
mov
fidivl
mov
mov
pop
out
bound
pushf
int
pop
add
enter
mov
lret
mov
xor
sub
fdivs
in
and
sar
jo
add
xchg
arpl
pop
xor
push
mov
push
movsl
mov
pop
pop
jmp
aad
call
enter
mov
dec
mov
lock
mov
scas
fisttpl
cmp
jo
std
gs
mov
leave
push
push
inc
cmc
sbb
clc
hlt
es
pop
xor
or
fpatan
repz
daa
cmp
fsubrp
pop
lahf
movsb
jae
icebp
stos
orl
mov
nopl
or
push
lds
mov
jne
loop
push
push
insl
sbb
mov
aad
cmpsl
imull
mov
addr16
out
xor
mov
icebp
shl
sbb
in
inc
push
lock
pushf
push
cmp
add
adc
dec
lret
mov
inc
mov
xchg
test
jae
rorb
sbb
or
mov
imul
test
inc
mov
int
sarl
lahf
sub
xchg
jnp
jg
inc
mov
fists
sbb
dec
shrl
aaa
adc
xchg
fnstenv
pop
adc
repz
xor
mov
cmp
movsl
sahf
mov
mov
jg
mov
sub
push
xchg
pop
inc
fisubl
stc
call
adc
and
push
fwait
mov
in
outsl
mov
cmp
iret
jl
orl
in
nopl
scas
xor
sbb
mov
sbb
sbb
jnp
mov
mov
dec
mov
arpl
or
aam
mov
push
jns
inc
mov
and
and
mov
fs
push
imul
push
add
test
negb
push
add
jmp
stos
adc
aam
pushf
jo
dec
scas
or
in
in
mov
out
vcvtsi2ssl
inc
popa
push
lock
shr
push
popa
inc
mov
cmovnp
xchg
pushf
lods
into
or
jns
dec
ss
fcoml
int
add
lret
cltd
lret
imul
xor
lock
xchg
fnstcw
icebp
call
cwtl
add
add
pop
push
int3
mov
addr16
cmpsb
pop
pop
push
xor
lock
xchg
or
xor
push
cmp
insl
roll
push
sub
cld
cmp
push
pop
iret
dec
sub
cmp
cmpsl
inc
and
out
xchg
sbb
outsl
and
pop
jns
stos
repnz
jbe
jmp
xchg
cltd
jo
and
or
int3
ret
dec
cmc
rcrb
aam
movb
or
jb
mov
push
sbb
aam
into
das
cmp
mov
mov
sahf
cmp
imul
subb
xor
sahf
and
adc
xchg
push
and
and
cs
or
lods
pop
or
xor
cmp
clc
lahf
js
and
out
fisttps
push
xchg
ror
mov
hlt
in
xchg
jecxz
xchg
mov
cs
test
dec
lahf
sub
enter
shlb
push
aas
push
push
push
add
dec
out
inc
add
lcall
mov
pop
mul
sub
and
pusha
dec
jl
dec
repnz
jg
loopne
loope
inc
pop
xor
inc
cmp
leave
fildll
out
mov
leave
xor
rcrb
pusha
jle
pop
std
jne
clc
jecxz
push
sete
add
adc
inc
xlat
xchg
test
out
dec
int3
in
lea
out
arpl
idivb
mov
mov
jl
clc
inc
test
jb
dec
add
jecxz
xor
adc
jno
cld
bound
daa
xchg
pop
cmp
pop
inc
cs
imul
dec
popa
movsl
mov
mov
andb
mov
jne
mov
lds
cmp
mov
shll
cmpsb
mov
inc
inc
jp
add
daa
xchg
arpl
inc
imul
data16
jo
lods
dec
push
and
loopne
icebp
jle
imul
cmp
cmp
fnstsw
lock
and
lds
enter
sarb
push
fwait
rcr
xchg
arpl
enter
insb
xor
pop
daa
mov
repz
scas
ds
jg
push
pop
lahf
in
inc
popf
mov
mov
insl
lret
xlat
jae
or
sub
sarb
mov
xchg
hlt
push
rcrb
dec
dec
inc
in
mov
xchg
jp
sbb
jae
lock
or
pusha
ljmp
pop
sub
test
pop
mov
or
pushf
and
jge
mov
sub
adc
jnp
insb
cwtl
aad
adc
jmp
cmp
jb
mov
cmp
sarl
cli
cmp
lret
mov
es
fwait
cld
mov
dec
adc
insb
imul
ret
into
fsubr
shl
test
test
mov
fcmovnb
or
mov
or
int3
fldcw
mov
and
push
dec
pop
outsb
pop
cmp
add
mov
push
cltd
fisubrs
repz
mov
aaa
das
jmp
sub
add
adc
cmp
addr16
negl
jns
adc
cmp
and
push
test
or
sbbl
adc
mov
and
xchg
or
sti
ret
jecxz
xor
sub
in
dec
xchg
stos
xchg
ret
call
pop
pushf
inc
jle
into
xor
std
adc
sub
sbb
pop
xchg
inc
lods
pop
adc
mov
fists
or
mov
or
das
shlb
mov
inc
nop
push
int
fistpl
and
mov
ficoml
pop
and
xor
push
push
test
xor
sub
sbb
std
addr16
mov
mov
aas
fdivl
ss
jo
imul
pop
adc
mov
cmp
adc
daa
jnp
push
lods
fwait
jp,pt
daa
outsb
adcl
outsl
inc
xor
stc
pop
divb
jae
sub
rcrl
sub
or
mov
in
imul
mov
in
push
inc
sub
adc
test
sarl
insb
nop
mov
ss
mov
cmpsb
mov
jnp
fistl
sub
push
mov
and
int
jge
cvtdq2ps
xor
add
dec
jae
cmp
add
aam
scas
cs
into
mov
clc
cmp
add
pop
int3
lds
ds
rorb
pop
cli
mov
cli
js
stc
dec
insb
shll
inc
mov
xchg
push
fsubl
aam
or
mov
push
iret
inc
jo
ja
test
cltd
push
lret
ja
push
pop
mov
fs
adc
or
mov
mov
les
push
xor
mov
push
cmpsb
ret
sbb
loopne
rcl
jnp
sahf
xor
divl
mov
jl
loopne
inc
jo
testb
frstor
shl
dec
and
loopne
fnstcw
idiv
loop
mov
lret
mulb
fldcw
jns
pop
cmp
aas
cmp
fs
fstps
push
daa
test
pusha
aas
sub
addr16
adc
ret
mov
jl
fiadds
dec
mov
push
sub
mov
add
push
jns
in
dec
cld
lahf
push
out
mov
outsl
or
cmc
fidivl
fs
mov
fimuls
call
push
jno
mov
cwtl
adc
xor
jle
push
sbb
xchg
shll
push
and
clc
push
dec
cmp
inc
jns
repz
ss
insl
imul
dec
jmp
jnp
clc
lret
push
or
gs
xor
je
ret
push
xchg
adc
xchg
sbb
push
lods
pop
insb
push
sub
ds
idivb
pop
paddw
cmp
pop
shll
aas
dec
xlat
lods
cmc
jns
jle
inc
shll
test
incb
mov
sub
adc
inc
xor
and
lock
pop
jmp
stc
xor
cmp
push
xlat
cmp
pusha
inc
dec
jle
mov
nop
jecxz
in
cmp
in
or
pop
gs
pop
nopl
shl
rolb
lea
out
arpl
jbe
inc
pop
in
jb
out
mov
ret
cmc
push
cmp
and
cmpb
add
push
sbb
cmp
fists
int
inc
sbb
add
cmp
lds
sbb
jmp
pushf
add
popa
dec
fsubs
idiv
int3
or
das
mov
iret
scas
js
rsqrtps
nop
scas
fnsave
stos
lcall
inc
mov
mov
out
hlt
lahf
mov
pushf
icebp
add
fnsave
pushf
inc
xchg
sub
jne
push
repz
pop
adc
ljmp
pop
arpl
into
lea
shl
imul
lcall
inc
add
ret
sarl
je
jle
add
les
divl
cmp
mov
int3
sbb
int3
loop
cmpsb
jne
shrl
nop
arpl
cmp
lahf
push
or
inc
jns
pop
push
and
test
cli
fnstsw
loopne
jno,pn
and
dec
mov
ja
add
mov
mov
ss
popf
push
lret
mov
leave
rcr
ret
ffreep
push
lock
jne
inc
or
push
push
test
inc
addr16
mul
lods
sbb
int
int3
dec
ret
sub
jecxz
mov
cmp
xor
xlat
jb
cli
dec
faddl
rcrb
and
cld
jl
inc
cmp
and
xchg
sahf
dec
fcompl
stc
jge
xchg
sub
jne
xchg
je
and
sub
popf
repz
sbb
xor
fmulp
sub
jno
lret
scas
mov
mov
cltd
add
lret
lock
pop
jmp
pop
mov
xchg
cmp
jb
and
mov
pop
pop
stc
mov
shlb
sbb
popf
movsl
xchg
mov
xor
stos
dec
inc
pop
mov
mov
mov
dec
iret
cld
and
in
and
dec
mov
push
in
cmp
inc
lret
stos
in
jmp
push
adc
and
cli
aaa
insl
loope
xor
mov
or
pop
xchg
insl
jge
adc
neg
stos
lret
and
xchg
add
sub
pop
dec
icebp
push
or
and
jbe
sbb
push
movsl
lods
popf
rcrl
mov
gs
gs
dec
sbb
cmpsl
adc
addr16
lahf
sbb
or
jnp
pop
or
ret
xor
jno
sub
xchg
mov
dec
ret
push
mov
adc
ret
int3
enter
adc
out
mov
jecxz
mov
ret
mov
dec
xor
sbb
cwtl
popl
mov
das
test
aad
sbb
xchg
fwait
sub
fs
add
aam
ficoms
adc
pop
mov
cmpsl
add
sarb
cmp
and
cmp
add
xchg
aas
jge
inc
cmpl
sbb
mov
inc
sub
xorl
rcll
mov
stos
out
ja
popf
jae
jo
mov
dec
aad
fisubrs
jb
add
adc
test
test
rorl
shll
repnz
call
push
xlat
insb
push
pop
cmpsl
out
repnz
aaa
mov
pop
out
xchg
mov
lret
in
or
std
les
sbbb
insl
mov
jecxz
mov
call
xor
shl
add
ljmp
sub
mov
mov
jae
iret
sbb
lret
idivl
popf
jae
pop
xchg
leave
out
jae
jns
sub
loop
mov
mov
sbb
into
in
out
mov
jmp
mov
out
test
aaa
test
push
push
xchg
in
pop
or
subl
shlb
call
push
out
cltd
dec
cmp
mov
stos
xorl
lahf
ret
pop
jns
fldcw
adc
inc
adc
sub
fcompl
jae
pop
aad
cmp
pop
pop
adc
nop
cmp
pop
xchg
es
jl
movsl
fnsave
bound
xlat
xchg
inc
or
push
cmp
lret
add
jnp
out
xlat
icebp
out
push
xchg
pop
lret
in
fwait
inc
fucomi
mov
xlat
int3
inc
cmp
daa
sub
imul
outsb
insl
dec
pop
ss
xor
mov
rcll
jl
adc
sub
ds
sbb
add
push
mov
enter
fistl
sti
push
pop
xchg
xchg
xor
mov
int
pop
int3
and
pop
adc
decb
cs
hlt
sub
les
push
and
fs
stc
cmp
mov
and
lds
cli
lcall
xchg
jb
inc
pop
xchg
out
aam
loop
inc
push
test
arpl
das
addr16
xchg
subl
and
add
cs
sarl
fbld
iret
js
stos
xlat
inc
cmp
lods
das
add
insl
inc
add
jb
out
jmp
and
xchg
test
mov
adcl
mov
loope
cmc
or
xor
push
cmp
and
icebp
xchg
jae
jge
pop
jle
pop
xor
sahf
xor
test
and
dec
mov
or
xlat
test
call
ss
pop
int3
sub
inc
sbb
mov
add
les
dec
cmpsl
rcrl
cmpsl
mov
arpl
dec
imul
iret
xchg
mov
sub
into
outsb
mov
es
and
test
test
mov
shl
and
add
and
jge
test
divl
imul
mov
mov
jnp
orb
or
repz
je
in
mov
dec
test
mov
adc
dec
jns
je
addl
les
aaa
sarb
ja
push
xchg
push
push
rcr
sahf
fwait
test
pop
mov
adc
inc
out
jbe
cmp
rcrb
and
mov
popf
cmp
ljmp
dec
adcb
jmp
lds
push
cmpsb
scas
mov
lock
xor
mov
scas
insl
loop
mov
push
pop
cli
cmp
pop
pop
xchg
and
pop
cmc
pop
xchg
xor
jg
push
sub
xor
mov
push
into
pop
scas
test
lea
push
stc
push
data16
xor
cli
cmp
subb
mov
int3
arpl
stos
nop
mov
mov
mov
fdivp
insl
add
cs
cmp
jecxz
sbb
push
and
mov
sub
fmuls
add
gs
aas
out
mov
jg
into
nop
sub
iret
pop
add
pop
pusha
push
lock
add
push
jp
mov
inc
sbbb
cltd
mov
or
jnp
push
jns
insl
sahf
rorl
call
sub
pop
std
rclb
pop
sub
mov
xor
push
ljmp
push
pop
divl
xor
mov
shl
jecxz,pn
push
mov
jb
cmp
and
lock
pop
loopne
jge
inc
jno
cmp
ror
jne
lea
sub
shlb
inc
add
pop
cmp
or
cmc
sub
or
in
outsb
call
and
mov
sti
pop
jne
mov
mov
cmpsl
mov
sub
outsl
add
movlps
rol
mov
leave
sub
xor
iret
dec
cmc
push
mov
xor
lret
mov
fmul
dec
filds
sahf
jl
xchg
icebp
pop
and
dec
arpl
sub
mov
cs
ret
cmp
jne
mov
adc
int3
cmpsl
add
mov
lret
scas
cltd
or
je
lods
inc
mov
sbb
or
push
aas
mov
dec
rclb
cmpb
inc
sbb
push
or
das
or
xchg
jnp
push
negl
add
push
test
fs
mov
or
add
pop
xor
out
in
adc
jnp
lret
lea
push
mov
push
pushf
inc
xchg
dec
sub
sahf
xlat
cmp
mov
cs
pop
daa
and
sbb
pusha
movsb
ret
fnsave
cmp
sbb
mov
mov
lods
sar
iret
lret
fdivrl
jo
insl
xor
pop
popf
loop
das
adc
mov
loope
lods
jle
ljmp
cs
xchg
adc
fcoml
cmp
adc
or
sbb
cli
and
jae
and
dec
out
shll
jmp
push
std
test
inc
les
rolb
imul
movsl
shll
sbb
out
rcrl
inc
aad
cmp
pop
imul
movb
pop
pop
mov
sbb
les
jge
mov
lods
mov
insb
shl
outsb
xchg
fs
or
or
push
enter
pusha
test
push
inc
jbe
mov
inc
jns
xchg
mov
sbb
push
stos
stos
jmp
dec
aaa
add
cli
in
fldt
or
push
mov
adc
pop
popf
in
imul
lcall
dec
sbb
add
scas
pop
pop
movsl
mov
inc
pop
push
imul
or
jg
lret
mov
insl
stos
dec
out
or
mov
dec
popf
mov
aas
fs
pop
je
pop
sub
add
jmp
sahf
sub
adcb
ds
xor
leave
add
jbe
xchg
ret
insb
outsb
stos
sbb
cmp
icebp
call
xor
push
pop
xchg
push
jl
push
aaa
shl
add
je
out
push
dec
pop
jo
test
rcr
test
adc
mov
mov
lcall
mov
and
jno
mov
sbb
divb
jl
inc
mov
rorb
mov
adc
aas
push
lcall
lahf
pop
in
cmpsl
daa
movsl
in
cld
mov
les
into
stc
xlat
mov
ss
xor
rorb
fisubl
jo
cmova
aaa
pop
push
push
scas
test
js
xor
push
stos
add
adc
or
mov
mov
inc
shl
mov
sub
loop
enter
cltd
xchg
lfs
xor
insb
popa
xchg
push
icebp
jecxz
arpl
cmp
shlb
orl
adc
sbb
and
aad
negl
inc
inc
call
rol
pop
xorb
jmp
push
scas
pop
adc
scas
je
sbb
xchg
inc
cli
daa
push
dec
fistpll
in
jge
inc
out
jbe
imul
cmc
adc
add
pop
pusha
aad
jne
mov
or
pushw
cltd
clc
xlat
pop
negl
dec
hlt
punpckhwd
dec
jl
insb
pop
mov
fsubr
js
and
mov
dec
std
pop
add
add
out
pop
stos
addr16
lock
clc
adc
mov
pop
add
mov
mov
or
jmp
popa
decl
dec
shlb
pop
and
in
jnp
scas
or
inc
lods
cmp
sar
ds
push
xchg
ret
dec
mov
inc
ds
jecxz
pop
add
mov
jno
loop
mov
jp
and
out
add
dec
dec
popa
or
jge
push
rcl
and
out
push
jg
xchg
stc
cwtl
clc
clc
push
loop
mov
sbb
xchg
jmp
or
int
cs
mov
sarl
xchg
xchg
insl
test
mov
and
hlt
das
or
insb
imul
sti
lcall
xor
push
and
imul
mov
add
mov
cmc
cli
aas
mov
call
pop
test
mov
xchg
and
jp
mov
xchg
mov
pop
xchg
or
sub
adc
hlt
sub
push
arpl
rcl
in
insb
jns
push
dec
jo
or
lds
dec
or
lret
inc
mov
xchg
xor
push
icebp
ret
lock
fxch
xor
xchg
cmp
sbb
sbb
pop
js
xchg
mov
movsl
movsl
mov
stos
lret
dec
int
cwtl
and
fsubrl
fsubl
ss
sbb
lods
divb
mov
fists
into
lret
fwait
jbe
js
rep
push
and
inc
aam
int
sbb
mov
fwait
mov
jns
nop
xchg
pop
push
inc
stos
enter
lea
jg
add
push
out
int3
mov
mov
mov
inc
xor
into
fs
jge
outsl
or
cmc
dec
cmpsb
mov
subb
pop
push
call
push
test
lahf
inc
jmp
fwait
enter
mov
addr16
cwtl
cmp
jae
adc
stos
clc
push
mov
mov
mov
ljmp
outsl
icebp
call
mov
add
clc
int
sbb
pop
mov
pop
ret
inc
shrb
pop
and
add
imul
imul
cwtl
add
fidivl
cmp
lret
inc
negl
std
cmp
mov
sub
cmpsb
andl
mov
test
pop
mov
out
and
jl
mov
imul
ds
pop
shlb
or
pop
inc
xchg
sbb
jns
jo
mov
sbb
jmp
out
iret
aaa
and
cmp
popf
data16
sahf
inc
insb
xchg
cmc
pusha
movsl
sub
pop
push
dec
xor
out
pop
popa
cmp
sbb
lock
bound
in
lret
mov
inc
jp
jbe
jl
jp
mov
sahf
inc
imul
shlb
orb
pusha
call
cs
mov
xor
mov
int
jl
test
or
dec
xchg
fbld
decl
inc
xor
or
repz
ficompl
xchg
xlat
mov
xchg
jl
ss
ds
jle
cmp
adc
daa
loope
hlt
mov
mov
pop
jns
add
xor
jg
fs
push
mov
or
out
push
xchg
sbb
adc
xlat
popf
imul
out
push
xchg
cmpsb
push
push
ss
cmp
dec
test
je
in
pushf
je
into
ret
into
es
xchg
out
push
xchg
dec
mov
out
mov
adc
ljmp
sub
sti
mov
fisttps
cmp
jp,pt
sbb
dec
or
ja
lds
add
test
push
or
iret
imul
dec
inc
sbb
test
cmp
mov
xchg
pusha
inc
inc
leave
imul
pop
cmpsb
hlt
call
movsl
and
sub
scas
movsl
in
lock
push
ja
aas
scas
push
jecxz
mov
push
clc
es
orl
call
repz
sbb
test
outsl
cmp
push
lcall
push
cmp
in
aas
jge
in
inc
rolb
xor
mov
outsb
xchg
test
movsl
loop
xor
rclb
push
mov
jae
das
insb
xchg
adc
movups
popl
ja
push
cld
inc
mov
pop
adc
jns
gs
jge
lods
out
sub
fiadds
push
fiadds
mov
add
jl
dec
add
addl
sbb
inc
add
aam
out
scas
mov
ds
sti
les
xor
mov
lret
jne
aaa
add
hlt
pop
ret
cmpsb
push
cltd
jne
xor
pusha
bound
sbb
jge
dec
jo
and
dec
push
hlt
xchg
fstl
daa
repnz
mov
mov
imul
jne
rclb
gs
sahf
mov
mov
stos
adc
jp
fbstp
fsubl
test
jbe
jns
call
fcompl
cmpsb
pushf
test
mov
fiaddl
adc
jo
mov
or
sub
mov
rcrb
cmp
orb
les
mov
shlb
adc
mov
andl
gs
and
inc
shll
xchg
adc
iret
rol
adc
sub
pop
jmp
inc
mov
cmp
xchg
subl
adc
push
xchg
add
lret
popf
xchg
pop
lds
in
push
sarl
stos
iret
lock
mov
mov
popf
xchg
dec
sbb
dec
movsl
mov
ret
add
decb
mov
add
sub
lods
and
and
outsb
std
out
loopne
outsl
sub
pop
xor
ret
out
xchg
faddl
xchg
aam
jnp
cltd
das
into
jge
sbb
inc
lock
jbe
sbbl
in
mov
lcall
mov
push
sbb
push
push
outsl
test
sub
call
icebp
cmpsl
int
mov
and
jecxz
push
std
jp
ljmp
inc
jmp
xor
pusha
adc
imull
rolb
lock
jmp
inc
cmp
inc
xchg
sub
cmp
ret
jmp
int3
pop
push
push
xchg
into
cld
xchg
mov
and
dec
and
sarl
add
pop
pop
adc
stos
lds
daa
xchg
mov
repz
mov
les
sar
repnz
push
aad
mov
jns
push
fsubrs
mov
xor
insb
cld
mov
scas
pop
in
jle
test
push
in
xchg
daa
and
sbb
aas
stos
jecxz
in
int
mov
les
mov
or
adc
fidivs
sbb
jg
fisttpl
push
cmp
notb
imul
sub
pop
int
push
jge
or
mov
xor
mov
imul
mov
mov
add
or
and
mov
add
je
sbb
jae
stos
enter
sub
dec
jecxz
shl
out
push
repnz
outsb
mov
aas
or
dec
outsl
push
dec
xorb
jnp
dec
rorl
das
insb
loopne
out
mov
pop
outsb
cmp
cmc
cmpsb
pop
leave
lret
aaa
je
popf
clc
jbe
mov
aas
jmp
mov
push
xlat
in
inc
insl
in
mov
sbb
out
cmp
outsb
loopne
dec
dec
push
mov
mov
mov
fdivl
lahf
jae
int3
aaa
mov
cmpsb
add
cwtl
loope
stc
loop
stc
fs
adc
inc
jecxz
xchg
cmpsl
ret
inc
cmp
push
xchg
test
or
xlat
add
sahf
mov
sbb
int3
popa
sbb
fcompl
out
cmp
xchg
add
xchg
add
pop
loope
in
and
dec
aam
add
andb
test
dec
mov
sbb
xor
test
addl
cmp
xchg
lret
cmp
or
shr
lock
daa
sar
inc
jb
add
cld
adcl
pop
push
sub
dec
sub
dec
inc
push
xchg
fcomps
jecxz
lret
xchg
sahf
lea
stos
movsb
mov
xor
aad
test
scas
mov
out
nop
or
daa
pop
xor
imul
jae
loop
mov
scas
or
mul
rolb
push
xchg
div
test
pop
sub
mov
ret
les
sti
jl
xchg
call
pop
xchg
xchg
add
mov
add
xchg
lds
adc
in
jno
jne
mov
dec
cmc
ljmp
adc
push
fwait
add
inc
out
dec
sub
sbb
xlat
and
ret
aam
rolb
add
xchg
and
adc
and
leave
jnp
pushf
or
or
push
jge
je
jnp
stos
cmp
mov
mov
xchg
pop
ljmp
lods
std
bound
add
dec
std
stos
ss
push
fdivs
dec
mov
lods
fcmovne
out
stc
aaa
hlt
pop
pop
dec
daa
pop
xor
inc
inc
xchg
xchg
outsl
pusha
or
je
and
xor
mov
jno
xor
test
xor
je
push
js
add
rol
stos
add
fidivrs
ja
dec
lahf
xchg
cmpl
in
mov
and
add
dec
outsl
xchg
adc
cmpsl
stc
mov
stos
push
adc
adc
enterw
xchg
fninit
or
pop
xor
sbb
inc
inc
fldcw
cs
test
negb
into
ljmp
and
mov
mov
pop
jbe
xor
pushf
mov
movsb
jne
fldcw
outsb
inc
data16
rcrl
fsubs
xchg
mov
mov
adc
cmpsb
pop
inc
xchg
sbb
cmp
sub
aam
xchg
out
ljmp
xchg
out
mov
or
lcall
inc
ret
gs
js
xor
mov
jmp
movsb
mov
sub
xchg
es
xchg
ret
ljmp
cld
push
xchg
jne
cmp
xchg
test
add
push
sub
sub
mov
scas
sahf
js
jle
cmpsb
pop
cld
mov
inc
fldenv
pop
xorl
pop
jl
adc
lret
addr16
add
js
jmp
inc
or
fdivl
jg
xchg
adc
cltd
and
sub
lods
lahf
lahf
loopne
xchg
xchg
sub
cli
ret
rclb
jmp
inc
xchg
cmc
lock
enter
addr16
jp
rcr
xorb
cmp
pop
pop
test
setbe
push
sbb
gs
cmc
mov
sbb
mov
test
pop
push
into
lcall
stos
cltd
sbb
stos
xchg
test
les
les
into
or
jmp
divb
lret
imul
mov
mov
mov
or
pop
push
cmp
ret
shl
and
sub
sub
mov
mov
fwait
icebp
sub
push
mov
fcomps
popa
xchg
and
call
xchg
cmp
push
incb
inc
mov
scas
pop
cmp
clc
jns
inc
imul
cmpsl
js
or
out
inc
subl
xor
rcr
xchg
sbb
adc
sub
sub
sbb
arpl
jge
xor
shrb
mov
ret
or
lahf
int3
xchg
fistpl
jp
mov
mov
imul
sahf
cld
inc
lods
fistpll
mov
mov
gs
pop
mov
outsl
movsl
sub
mov
pop
cmpl
and
and
cmp
dec
scas
sahf
push
aam
inc
imul
lock
cmp
nop
dec
jno
data16
pop
icebp
int3
xor
cmp
and
xor
add
cmpsb
xchg
cs
clc
add
jecxz
dec
pop
cmp
cs
or
pop
sbb
pop
jl
test
std
addb
test
pop
mov
stos
mov
icebp
int3
push
xchg
lock
rcrb
jo
call
rcrb
xor
lcall
hlt
sub
sbb
cmc
push
sbb
jns
aas
sbb
or
int
inc
pop
sti
nop
dec
xchg
test
sub
cmp
adc
mov
ret
into
aaa
cltd
notb
testl
fwait
push
mov
push
adc
imull
mulb
mov
fwait
mov
bound
push
dec
insb
sbb
cmp
push
lahf
aam
mov
pop
clc
cli
mov
inc
or
sbb
mov
int3
add
outsl
jno
or
dec
ret
jns
idivb
cmp
insb
jns
arpl
pop
mov
mov
test
inc
pop
add
xchg
add
loope
dec
pushf
loope
jo,pt
imul
push
sub
inc
popa
lcall
lret
sarb
mov
sbb
adc
sbb
ja
lods
je
jp
add
jmp
dec
ret
mov
pand
pop
imul
sar
shll
stos
cld
fisubrs
sarl
scas
loopne
scas
mov
push
and
cmp
inc
dec
sub
bound
sub
jmp
test
aad
jbe,pt
enter
cld
lret
and
push
insb
xchg
dec
dec
lahf
mov
inc
shll
push
mov
sub
fsubr
out
data16
inc
movsb
arpl
leave
cmp
jae
inc
repz
rcr
inc
data16
pop
test
or
test
ds
mov
shlb
jle
cmp
movsl
jno
jbe
enter
add
out
mov
ficomps
mov
in
addr16
icebp
pop
adc
and
or
cmc
stos
xor
jne
fcompp
addr16
outsl
pushf
mov
int
lods
jns
sbbl
and
push
or
push
xchg
lock
dec
xlat
pusha
xchg
rorb
cmpsb
outsb
and
scas
push
lock
iret
pop
cmc
mov
xchg
mov
adc
jg
dec
add
mov
mov
inc
pop
mov
mov
mov
shrb
pop
jp
hlt
cmp
cmp
cs
popf
pop
int3
shrb
mov
fsubrl
lods
popa
push
xchg
sub
mov
js
sti
cli
mov
push
lcall
mov
sbb
mov
pop
cmpb
mov
jl,pn
and
call
hlt
xchg
xorl
pop
cmp
push
add
mov
clc
push
dec
adc
sbb
add
and
add
lea
adc
pushf
daa
call
adc
sbb
aas
dec
in
mov
cmp
aas
movzbl
sub
push
or
ret
mov
daa
inc
idivl
pop
lret
mov
adc
dec
idivb
push
movsb
jecxz
sahf
shlb
push
sub
inc
addr16
xchg
mov
test
xchg
nop
xchg
test
push
push
add
aad
mov
mov
cmpl
incl
imul
jl
cmp
dec
xchg
inc
mov
iret
sbb
lret
outsb
ret
popa
add
popf
mov
ljmp
pop
inc
hlt
sub
mov
jnp
inc
adc
xlat
repnz
stos
mov
outsl
popl
inc
or
xchg
inc
push
xor
dec
and
adc
mov
adcb
scas
pop
or
push
in
inc
nop
xchg
xadd
add
iret
push
arpl
inc
inc
aas
mov
or
inc
pop
mov
mov
mov
loope
stos
mov
cmpsb
gs
mov
xchg
shll
std
shll
adc
mov
cmp
dec
popa
test
outsl
aam
push
jo
shrb
test
xchg
pusha
hlt
jnp
lock
xor
in
jae
insl
in
xchg
jo
mov
test
sarb
enter
cli
push
mov
and
jge
pop
add
es
mov
loop
shll
std
scas
fxch
push
push
jbe
cmpb
call
stc
sbb
lea
rclb
xor
xor
xchg
rcrl
and
into
jmp
xchg
fisttpll
les
add
mov
dec
jnp
std
fmull
insl
mov
pop
sbb
ret
cmp
sub
mov
mov
testl
mov
clc
xor
outsl
mov
sbb
outsb
sbb
ret
and
test
cwtl
out
das
fwait
push
outsb
cmp
cmp
aas
jle
out
inc
addl
cmp
sub
push
fsub
add
fwait
test
pop
out
mov
mov
cmp
pop
xchg
add
mov
pop
lds
pop
fwait
aas
mov
arpl
dec
inc
or
dec
mov
add
xor
pop
adcl
outsb
jecxz
push
push
or
rcrb
lods
nop
mov
das
adc
cmp
xchg
inc
mov
adcb
test
mov
jle
cmp
jae
xor
data16
inc
or
inc
adc
repz
shll
data16
push
mov
out
jbe
cmp
and
sbb
out
add
xchg
pop
cmpsl
mov
stos
out
inc
jle
mov
sub
mov
xchg
fldenv
jmp
or
mov
bound
xchg
mov
adc
test
or
sahf
mov
ret
lea
sub
pusha
in
ret
cmp
mov
jecxz
push
mov
loope
in
pop
or
inc
cmpsb
mov
mov
in
and
inc
mov
popf
push
push
or
xchg
scas
push
andb
add
ds
shlb
push
int3
add
xor
arpl
inc
out
and
invd
add
cli
in
shl
and
fwait
jnp
cwtl
cmpsb
xlat
lds
mov
inc
insb
or
push
adc
in
mov
adc
mov
test
mov
push
mov
loopne
inc
pop
idivb
leave
xor
xor
mov
popf
rcr
test
andb
ljmp
or
mov
lahf
sbb
cmpsl
js
stos
and
lock
leave
leave
sub
pusha
pop
gs
ret
mov
mov
pop
movsl
mov
imul
aam
test
call
pop
sub
pop
jecxz
shrb
mov
ja
mov
inc
and
popf
out
jl
xchg
popf
aam
push
daa
sbb
cmp
add
lods
adc
jb
cmp
xor
call
mov
hlt
dec
inc
mov
push
pop
adc
jo
adc
add
push
std
jmp
inc
loopne
ss
dec
or
daa
outsl
sti
push
mov
mov
enter
push
adc
adc
mov
mul
push
dec
icebp
and
lahf
or
fs
test
mov
in
test
aad
arpl
sti
in
inc
lcall
jnp
jmp
or
push
mov
xchg
jg
jne
push
popa
sub
jge
bound
inc
test
push
add
or
push
data16
cmp
pusha
int3
insb
inc
and
xor
or
fiadds
jb
iret
mov
movsb
dec
sub
jb
addr16
adc
jge
jns
fs
lcall
out
jno
fnstsw
jmp
in
mov
jle
inc
rcrl
xor
push
cmpsl
or
mov
fcom
stos
and
nop
mov
lods
or
xor
pop
push
push
pcmpgtb
jbe
cmpsb
fnsave
ret
loopne
add
mov
daa
push
mov
inc
ja
inc
push
std
test
push
sub
push
jbe
or
mov
xor
popa
cmp
dec
or
lea
inc
xor
lods
xor
inc
lret
inc
lcall
clc
cs
aas
jns
jae
mov
pop
jl
add
lods
xor
jg
pop
mov
lret
xchg
fnstenv
inc
xor
cli
xchg
jecxz
mov
es
inc
pop
dec
push
repz
push
cltd
or
bound
ss
inc
out
push
ds
mov
mov
pop
pop
pop
out
add
cmp
dec
mov
dec
jp
andb
mov
jbe
mov
inc
xchg
inc
sti
dec
loopne
sbb
inc
push
lahf
add
inc
inc
dec
test
or
inc
adc
fmulp
and
inc
ret
sub
pushf
xchg
xlat
rolb
sbb
aad
mov
jbe
and
icebp
and
inc
mov
fdivr
jp
sub
pop
nop
sub
int3
push
sbb
es
jmp
push
sub
sbb
or
fisubs
add
sbb
dec
xchg
shlb
and
push
inc
shll
out
cwtl
out
and
mov
shlb
lods
sbb
inc
data16
mov
xchg
push
dec
mov
sbb
pop
mov
popf
clc
cmpsl
mov
shr
pop
xor
roll
mov
fld
xor
in
ret
and
insl
sbb
repz
or
iret
adc
clc
ret
xchg
ret
add
add
les
dec
inc
push
pop
or
test
nop
fwait
das
test
in
mov
and
xor
push
neg
gs
lods
loopne
mov
bound
lret
or
outsl
es
movsl
push
ds
pop
sbb
cmpl
sub
sbb
aaa
scas
sti
addr16
dec
pushf
cmp
pop
add
push
das
cs
xchg
sbb
pop
mov
jl
leave
jbe
addr16
dec
mov
addr16
out
push
daa
adc
adc
cmpsl
push
cmpsl
jmp
mov
subl
hlt
jge
jbe
add
loope
fdivs
shl
pop
shll
stos
mov
xorb
jp
popl
jmp
lret
in
flds
addr16
out
bound
xor
mov
test
daa
arpl
pop
shlb
test
dec
sub
cmc
popf
pop
mov
addr16
and
mul
popf
dec
pushf
loope
add
imul
sub
mov
loop
dec
dec
sbb
movsl
lahf
imul
mov
aas
inc
lods
dec
pusha
test
testb
orl
cltd
inc
mov
inc
lock
xor
filds
popa
inc
jbe
sahf
mov
push
pop
or
pusha
lock
jb
and
mov
ret
push
inc
sub
push
sbb
and
xchg
jae
inc
cmp
dec
xor
dec
push
and
push
bnd
and
hlt
xor
pop
inc
aas
adc
mov
jnp
negl
lahf
in
jnp
jne
mov
das
pop
pop
push
arpl
sub
scas
jnp
mov
mov
scas
movsb
sub
jg
scas
adc
data16
ret
or
xchg
mulb
test
dec
sub
or
and
inc
xchg
adc
push
or
leave
ss
inc
imul
jns
fistpl
orb
data16
mov
aam
xchg
js
and
imul
xchg
add
shl
and
lods
cli
jg
enter
pop
mov
int3
bound
xor
mov
sbb
mov
pop
xor
sub
cmp
and
mov
loopne
cwtl
fidivrl
or
push
roll
jp
rcll
scas
adc
mov
ficompl
mov
adc
push
in
outsb
aaa
dec
inc
pop
std
fdivr
clc
addl
sbb
adc
push
loopne
cmp
iret
cld
aam
mov
xor
push
pop
js
std
or
jl
add
xchg
out
xor
mov
cwtl
or
lret
repz
popa
leave
in
movsl
mov
push
xor
pop
pop
cmp
fs
jo
xlat
pop
data16
mov
xchg
xchg
pusha
outsl
movsl
pop
nop
orb
scas
nop
jmp
call
cmp
out
xor
pusha
std
fisubrl
les
sbb
pushf
add
push
cs
int
cwtl
mov
call
and
xchg
xor
or
jnp
adc
sub
jnp
push
push
pop
jbe
les
sub
loopne
mov
cwtl
dec
fnsave
mov
or
jl
adcl
cmpsb
mov
push
inc
lods
pop
lahf
jnp
sub
sbb
rorl
sub
nop
jle
adc
pop
mov
mov
mov
iret
mov
add
push
jnp
lahf
cmp
shll
mov
js
stos
xchg
push
jnp
and
dec
jecxz
mov
xor
std
mov
movsl
je
cltd
popl
push
pop
ret
mov
sub
jge
inc
shll
rcrl
add
inc
xchg
jnp
lret
and
in
aas
mov
cltd
int3
push
mov
rcrl
jecxz
aam
mov
xor
cmpsl
rcll
jno
lock
mov
inc
ja
ret
mov
cmp
gs
mov
pop
lcall
cmp
jno
cld
inc
dec
stos
cmp
lock
pop
in
sti
inc
sub
in
or
and
aaa
es
fisttpll
inc
inc
movsb
aam
mov
push
mov
xchg
movsb
adc
push
out
xchg
xor
in
sarl
xchg
out
sti
cmp
std
mov
adc
inc
and
aas
pop
fsts
pop
int
dec
insb
pop
cli
xor
shlb
jle
fcompl
cmp
jmp
push
xor
jae
add
and
xchg
sub
mov
add
pop
xor
mov
mov
and
pop
ja
mov
fcoml
lock
sbb
sbb
cmp
adc
jnp
push
popa
pop
rcrb
xchg
sbb
ror
movsb
movsb
scas
adc
iret
into
test
insl
sbb
adc
ss
nop
leave
sub
cmp
out
es
sbb
jne
test
xor
pusha
ficomps
jmp
fmull
pop
dec
dec
lds
in
push
push
ret
xchg
sub
push
mov
aas
mov
xlat
lret
orl
clc
jge
lods
cmpsl
pop
push
test
sbb
repnz
fsubr
mov
pop
mov
out
xchg
aaa
aaa
mov
insl
lahf
out
mov
das
ds
xchg
mov
cli
les
pusha
add
mov
pop
rcl
xor
dec
jle
out
cmp
les
push
in
xchg
xor
das
mov
lock
pop
in
enter
pop
sub
cmp
in
xchg
je
dec
sbb
jae
ret
or
mov
mov
fwait
xchg
mov
insb
adc
ds
enter
test
mov
inc
add
lods
jl
subl
jne
lods
mov
and
and
pushf
out
fsts
les
mov
in
mov
lcall
dec
mov
push
hlt
sbb
xchg
mov
fdivrs
dec
in
pop
and
arpl
mov
shrb
push
or
or
jle
mov
in
add
lcall
lret
cltd
cwtl
xchg
loopne
outsb
cmpl
test
mov
test
cmp
mov
push
mov
ret
adc
jno
ss
or
aad
scas
mov
rcr
lahf
mov
and
rorl
mov
dec
cltd
xchg
or
ljmp
jecxz
pop
sbb
out
fstl
and
jp
xchg
xor
adc
and
add
push
or
mov
push
fnstcw
and
mov
xor
add
or
pop
bound
adc
mov
gs
hlt
jmp
fists
adc
sbb
add
fwait
mov
cwtl
repnz
add
sbb
cld
cmpsl
outsb
adc
inc
hlt
adc
or
mov
scas
inc
mov
push
push
lahf
cld
adc
sub
xor
mov
test
daa
mov
mov
loop
dec
sub
sbb
ljmp
out
and
adc
test
repz
lods
jb
mov
adcl
cmp
xor
in
cmc
or
popa
mov
push
add
cwtl
cmpsb
or
movsb
add
push
or
xor
les
pop
aaa
sub
mov
add
rolb
cmpsb
mov
mov
pop
repz
je
push
push
mov
ljmp
push
xchg
xor
aad
inc
fadds
push
pop
daa
pop
inc
and
pop
mov
mov
sbb
dec
and
mov
call
push
push
out
add
mov
cmpsb
in
mov
fbld
jmp
adcl
jno
adcl
inc
out
out
sbb
repnz
lcall
inc
xchg
jbe
add
popf
sub
pop
imul
xor
ret
cmpb
shrl
add
and
cmp
mov
lods
aam
xorl
pop
dec
sbb
scas
inc
push
add
push
ret
imul
or
arpl
xchg
movsb
sub
mov
imul
movsl
cltd
jge
out
iret
cmp
je
mov
imul
cmp
sbb
xlat
push
sub
nop
inc
and
xchg
cmp
mov
fstpl
mov
and
push
inc
lods
xor
inc
in
push
jb
jecxz
sbb
add
leave
orb
or
pusha
cmp
or
ret
or
xor
dec
cmp
cmp
testl
fwait
je
stos
xchg
inc
movsb
inc
mov
add
pop
or
sbb
push
adcb
insl
cmpsb
out
subl
cmp
pop
movsb
or
clc
cmp
stos
lea
idivb
enter
int3
scas
xor
cmp
test
pop
movsl
pushl
sub
rcl
movsb
ljmp
movb
inc
pusha
sub
popf
lods
scas
popa
lds
dec
cwtl
je
enter
in
inc
pop
cmp
cs
and
or
push
insl
fbld
std
in
lcall
inc
into
push
nop
pop
mov
xor
sti
outsl
or
mov
shl
or
jbe
inc
sbb
imul
fisttps
sahf
in
mov
sub
imul
insl
aam
popf
xor
test
scas
loop
jnp
sbb
popf
movsb
incl
iret
mov
imul
mov
lods
xlat
std
lods
add
push
cli
xchg
add
orl
add
shll
mov
clc
mov
test
mov
mov
xchg
loopne
ds
pop
pop
aad
rorb
pop
pop
sub
pop
mov
inc
repnz
popa
mov
xor
mov
xchg
jnp
or
mov
rcr
icebp
clc
jl
rorl
iret
xor
mov
xchg
xlat
ror
adc
fiaddl
xchg
push
test
popa
pop
push
mov
mov
imul
push
xchg
int3
add
lods
cltd
popf
mov
cmp
subl
lahf
cltd
or
pusha
lds
add
push
xor
std
or
test
dec
les
push
xor
pop
popa
xchg
out
jp
out
or
pop
out
cmp
mov
sbb
cmp
or
cmpsb
xor
shr
or
dec
shrb
inc
push
pop
cmpsl
repz
scas
push
ja
addb
out
fisttpl
aaa
add
inc
and
mov
mov
scas
push
dec
imul
sbb
movsb
mov
sub
push
jecxz
daa
nop
lcall
inc
cmpsb
test
repz
jae
sub
data16
sub
push
test
scas
cltd
mov
out
xchg
inc
sub
push
sub
add
push
and
fidivrs
popf
sub
out
adc
inc
push
dec
roll
dec
ljmp
mov
xchg
sub
mov
shlb
lods
pop
mov
cmpsl
and
lret
cmp
inc
pop
push
mov
loop
sbb
bound
adc
into
mov
inc
les
dec
sarl
push
cmp
push
jecxz
shrb
jae
mov
push
pop
test
cmpsl
jae
cmp
mov
mov
jg
mov
fcoml
or
loope
daa
aas
pop
rcrl
mov
add
dec
fs
mov
cmpsl
dec
mov
jb
inc
mov
sbb
aam
out
push
push
xorl
jp
add
mov
sbb
imul
jge
or
or
into
cmp
in
clc
fidivrl
popf
add
ljmp
arpl
adc
xchg
or
or
sub
adc
pop
sub
cli
arpl
dec
mov
sub
dec
and
scas
data16
sub
pop
or
mov
jecxz
outsl
decb
andl
mov
aad
gs
mov
movsl
inc
dec
dec
dec
lahf
inc
jns
out
push
or
cmp
mov
pushf
push
mov
jmp
mov
shll
sub
add
scas
push
pop
ret
inc
and
push
sub
dec
ret
inc
dec
lock
and
andl
push
das
sub
push
add
clc
cmpsb
daa
jg
inc
mov
das
cmc
imul
ja
jle
mov
mov
repnz
aaa
mov
dec
cmp
add
and
out
sti
sub
scas
mov
enter
mov
cs
lea
adc
mov
sti
mov
jp
pop
sbb
sbb
pop
jo
sub
mov
fldenv
cmp
mov
dec
rcrl
decl
and
cmp
aam
pushf
pop
sub
sbb
push
out
or
popa
aad
ljmp
and
cmp
xlat
push
roll
cmp
aas
mov
xchg
jg
mov
mov
test
int
addl
pop
loop
test
lds
push
stc
cwtl
mov
push
jb
pop
pop
lcall
adc
fsqrt
and
sub
adc
pop
lock
in
ret
inc
cld
into
dec
or
jbe
fimuls
out
adc
add
mov
in
pop
sti
jl
add
nop
cltd
or
pop
jp
negb
pop
push
pop
lock
std
mov
inc
fcoms
cmp
daa
push
jl
fisttps
sbb
scas
and
xchg
int
and
nop
pop
lock
mov
iret
sub
clc
pop
les
popa
push
std
imul
mov
add
pushf
mov
mov
rorb
std
enter
dec
and
fxam
sbb
jecxz
cmp
mov
rolb
das
ljmp
lds
sbb
addr16
in
xchg
cwtl
cmp
xchg
ss
rolb
inc
cmp
jmp
lret
push
lcall
jb
popf
fdivrl
arpl
pop
mov
dec
or
mov
out
int
inc
loop
xor
into
sti
mov
sub
xchg
in
add
dec
test
shlb
test
push
dec
adc
repnz
adc
movsl
or
xchg
ljmp
gs
vpsubusb
loopne
mov
adc
lods
call
sbb
out
add
test
in
mov
jge
push
rorb
aam
xchg
daa
push
pop
sub
popa
movsl
mov
fbstp
push
imul
cmp
int3
inc
inc
inc
push
mov
shrw
xchg
icebp
inc
ror
fisttpl
out
jmp
sbb
xchg
or
sub
sbb
icebp
ret
ret
dec
cs
scas
shrl
adc
clc
je
mov
xor
adc
out
repnz
scas
in
test
xor
enter
dec
test
cmp
in
adc
popl
mov
mov
sbbb
mov
and
sahf
in
push
adc
dec
pusha
int3
cmp
leave
rcr
cli
movsb
and
mov
or
pop
jmp
loope
into
out
rcrb
addr16
pop
int3
cwtd
mov
sbb
int3
jbe
sub
fnstenv
scas
movsl
fbstp
or
xchg
mov
testb
shll
movsb
notl
mov
iret
fbstp
mov
dec
mov
stos
in
push
dec
lret
loope
mov
adc
jnp
pop
xchg
xor
pop
lret
cmc
sbb
and
into
sub
mov
rcr
fdivrl
add
dec
sbb
inc
ljmp
std
dec
jle
mov
lret
sbb
lods
mov
andb
in
or
ja
insb
xor
push
add
or
adc
nop
test
add
fstl
sub
sub
and
movsl
movsl
in
mov
shl
cmp
test
lahf
inc
rorb
icebp
pop
popa
dec
xor
xlat
mov
clc
mov
mov
jmp
pop
dec
ss
cmp
mov
xchg
imul
dec
fdivrp
jmp
movsb
add
int3
sbb
push
xor
mov
jmp
enter
xor
lcall
or
lods
xchg
xor
add
push
mov
push
sub
inc
imul
add
stos
pop
jecxz
mov
repnz
leave
fisubrs
loop
sbb
clc
cmpsb
mov
and
idivl
ljmp
mov
test
mov
push
test
repnz
push
or
scas
xchg
add
xlat
xchg
jbe
push
or
rclb
dec
fiaddl
insl
xchg
sub
in
and
les
xchg
and
aam
ja
adc
aad
add
cmp
repnz
mov
adc
dec
jmp
xlat
pop
lret
xlat
pusha
in
jg
sbb
mov
ljmp
stos
mov
ret
and
sbb
sub
inc
pop
rcr
arpl
or
mov
adc
cmp
shll
shll
adc
outsl
sub
push
mov
sbb
add
clc
add
dec
aam
std
xchg
jbe
cmc
mov
pusha
jl
lahf
and
cmovae
out
call
iret
mov
fisubl
cmp
ret
movsb
aas
out
es
jbe
fnsave
xchg
ljmp
pop
insl
push
hlt
sbb
bound
pop
mov
sub
sbb
mov
xchg
andl
fcompl
dec
rolb
mov
jmp
in
cmpsl
out
pusha
mov
sub
push
icebp
aam
cs
adc
pop
jp
mov
fcompl
ljmp
xor
lea
mov
movsb
mov
loopne
ds
push
jmp
jbe
icebp
lcall
adc
pop
gs
push
dec
jmp
ret
pop
out
mov
xchg
into
jle
inc
lret
jne
mov
push
les
jle
mov
pop
add
pop
jmp
xor
push
xor
dec
lret
adc
rsm
out
sbb
jb
or
mov
fistpll
lock
into
inc
and
mov
imul
add
mov
in
xchg
popa
xchg
imul
sub
mov
cli
ljmp
movsl
mov
scas
pop
popf
mov
scas
lea
stc
call
enter
mov
jl
adc
testb
popa
clc
push
xchg
fdivs
jmp
mov
lods
cmp
jg
pop
mov
shrb
mov
dec
mov
lds
or
jae
es
cmp
pop
dec
jns
enter
mov
cmp
idivl
xchg
push
nop
subb
xor
rcl
xor
shrb
fsubr
inc
add
cld
ljmp
cmp
loope
sbb
push
iret
adc
mov
cmpsl
xchg
or
mov
rcrb
jle
sub
jmp
pop
stos
stos
aam
fstpt
inc
lcall
push
mov
mov
pop
push
into
pop
pop
cli
ffreep
adc
and
inc
int3
call
incl
inc
xchg
mov
into
push
push
sar
mov
call
and
shr
mov
push
out
mov
test
les
xlat
mov
leave
pop
jns
and
mov
cmp
jns
insl
pop
rcrb
je
dec
add
jns
sub
xchg
mov
pop
add
loope
ja
mov
jg
or
inc
lods
lcall
pop
test
loope
sarl
inc
icebp
popf
repnz
push
loope
movsl
mov
xor
inc
int
cs
xor
xchg
pop
nop
shl
adc
das
cmp
mov
dec
out
mov
adc
mov
jecxz
aam
fmul
cmp
lods
test
out
xor
push
std
rorb
and
fsubrl
aad
jge
adc
and
in
in
xlat
mov
and
fwait
enter
mov
call
push
inc
dec
adc
cld
shl
push
loope
sbb
push
jb
jnp
test
xlat
add
and
cld
lcall
push
sbb
pop
les
ds
cmp
ficoml
addr16
inc
repz
mov
out
test
jecxz
stc
out
stos
out
add
add
mov
or
negl
fcomp
les
mov
insb
or
ja
jae
pop
cmp
cli
mov
pushl
sahf
jg
aaa
int
or
sub
les
aaa
xchg
mov
or
sbb
push
ja
out
cmpsb
mov
ss
ret
sub
int3
mov
shr
movsb
or
std
fsts
lock
repz
xchg
popf
dec
fucomp
arpl
mov
outsl
xor
sbb
das
and
mov
jns
insb
mov
adc
jae
rcrb
mov
and
movsl
adc
test
lods
inc
xchg
push
cmp
jp
je
insb
sub
jmp
data16
aad
rcrb
or
xor
iret
faddl
push
mov
andb
mov
xor
jae
lcall
lods
scas
shll
aam
adc
push
cmp
xchg
mov
fisubs
push
leavew
ret
jmp
xchg
dec
cltd
ja
repnz
insl
cld
roll
lods
ss
test
js
pop
neg
jg
inc
adc
in
bound
ja
repnz
rorl
jno
hlt
popa
xchg
adc
test
shr
xor
inc
aaa
test
fisubrs
xchg
lds
pop
mov
push
jg
pop
repnz
jmp
cmp
arpl
add
in
mov
lret
xor
or
pop
adc
clc
int
mov
add
sbb
ds
or
out
dec
data16
movsb
cltd
in
sub
sbb
sub
cld
inc
cmpsl
mov
cs
jp
push
sbb
lahf
clc
sub
pop
iret
ret
sbb
ss
daa
ret
repz
movsl
xor
arpl
aas
xchg
sbb
and
pop
jns
ljmp
inc
out
mov
pop
mov
mov
mov
lar
ret
mov
jae
or
push
subb
imul
jnp
adc
inc
or
inc
sub
pop
sahf
inc
jns
jmp
gs
dec
push
and
iret
clc
jnp
nop
add
shl
scas
pop
repz
pop
sbb
cltd
sbb
add
ljmp
outsl
into
jecxz
pop
aad
dec
fdiv
in
daa
mov
ret
fs
sub
test
leave
inc
add
cld
add
adc
js
insb
jle
std
sub
push
pop
xchg
pop
shl
and
xchg
les
imul
mov
jge
repz
cmp
andl
pop
and
push
mov
aas
lcall
push
daa
sbb
lods
les
imul
xchg
test
or
mov
ror
mov
in
fwait
mov
arpl
repnz
xor
pop
mov
imul
push
mov
movsl
out
mov
jecxz
out
or
and
rolb
push
sbb
iret
clc
shr
jb
sub
lds
cmp
add
mov
or
pusha
mov
push
add
add
cltd
bound
fnstcw
shr
jbe
jl
movsl
xchg
adc
inc
inc
push
mov
sub
lods
adc
xchg
cmpsb
xchg
stos
lret
movsb
jbe
in
movsl
xchg
les
clc
cltd
lods
shll
sub
ljmp
notb
mov
inc
cmpsb
cmpl
xor
pop
or
outsl
fs
outsb
clc
inc
ret
add
ret
mov
lret
sub
push
push
mov
das
clc
sbb
mov
lods
inc
mov
add
xchg
sti
jle
aad
xchg
cmp
stos
xlat
xor
inc
jle
lods
enter
bound
sub
mov
cli
dec
mov
sub
popw
dec
jg
sbbb
fmull
or
pop
dec
sub
dec
leave
dec
jnp
pop
es
in
movsb
in
jno
fsubl
int3
xchg
loop
ss
mov
lods
push
pushf
lahf
dec
push
adc
and
and
pop
adc
xchg
hlt
stos
pop
xchg
das
lds
xchg
rorl
xlat
pusha
dec
lret
jo
pop
insl
sub
std
and
loopne
nop
fcoms
sub
cltd
inc
imul
aad
pop
or
cmpsl
mov
aas
mov
inc
push
sahf
hlt
lret
jnp
stos
add
sub
push
aam
dec
jg
mov
adc
enter
cmp
xor
fmuls
pop
adc
push
mov
fldcw
jb
cmpsb
mov
fs
pop
out
pop
scas
popa
xchg
popf
mov
sbb
dec
shrb
fsub
lcall
add
mov
fmull
add
loop
push
out
dec
xor
dec
sahf
lds
aad
call
push
lret
clc
out
mov
dec
cmp
mov
out
inc
call
push
push
stos
mov
push
pop
mov
lock
movsl
insb
loope
push
cli
fs
scas
nop
iret
jne
xor
fstpl
inc
sub
cmp
lcall
shl
and
or
mov
push
xor
daa
xchg
sahf
rcrb
sub
rcr
idivl
lret
xchg
inc
rorb
xor
mov
ds
dec
sub
arpl
mov
inc
jg
stos
xor
cwtl
push
lcall
mov
jns
cmp
pop
mov
ljmp
xor
lods
pop
daa
jne
push
push
int
add
inc
in
cltd
push
leave
sub
sub
mov
bound
dec
nop
xchg
push
ljmpw
sub
aas
push
dec
ret
ret
adc
int
das
pop
in
divl
data16
push
repnz
dec
add
daa
stc
inc
loopne
sbb
mov
pop
adc
fmul
xchg
push
mov
aad
cmp
aas
into
add
xchg
shll
into
xchg
or
mov
xlat
in
inc
xchg
orl
add
loopw
jo
or
in
fstps
cmp
mov
imul
loopne
test
add
inc
int3
push
jae
out
imul
push
mov
aaa
pop
adc
bound
cmpsl
mov
or
sub
out
mov
pop
dec
xchg
push
xor
out
es
clc
pop
sub
pop
lret
cmp
mull
lcall
dec
xor
adc
adc
loop
or
add
xchg
mov
xor
lcall
rolb
dec
push
cmp
in
or
dec
or
inc
dec
add
imul
cmp
inc
je
gs
and
mov
jg
push
es
xor
xlat
add
lcall
xchg
jmp
aas
xchg
pop
mov
sub
repz
mov
es
cmp
iret
clc
xor
sub
sub
daa
push
jmp
movsb
sbb
jae
cmp
cmp
imul
pop
xor
adc
sub
ret
add
jne
fsts
test
adc
mov
sarl
and
jo
mov
pushf
out
cmp
xchg
xchg
out
xchg
sub
insb
aad
fstpt
xchg
and
shrb
or
dec
ljmp
xchg
adc
scas
pop
into
xchg
sbb
cmpsl
addl
push
lock
nop
aam
or
cmp
in
ds
ljmp
sbb
std
pushf
fildl
inc
xor
aas
jg
cmp
fwait
mov
sub
ss
lds
push
dec
add
repz
cmp
and
mov
popa
push
loope
cli
sbb
iret
mov
pop
jg
mov
cltd
mov
vpsllq
xor
mov
movsl
inc
or
sub
addl
lahf
or
mov
push
jne
js
cli
inc
lds
sbb
lods
push
lods
sub
sbb
cmp
scas
xor
adc
pop
mov
in
fdivs
inc
xchg
cs
dec
rol
shll
jbe
mov
xchg
dec
lcall
pushf
xor
dec
andl
jecxz
inc
mov
je
jbe
movsl
lods
mov
jle
push
add
inc
jmp
aaa
xor
jle
aaa
call
in
mov
mov
fmull
ds
sub
lret
fimull
sahf
das
jb
dec
and
mov
dec
jns
xchg
mov
mov
dec
and
das
addr16
pop
stc
stos
add
test
ja
xchg
sbb
test
mull
dec
mov
hlt
jl
divb
out
repnz
and
sarl
mov
inc
mov
out
sub
mov
ficompl
dec
dec
add
inc
sub
cmp
and
xor
leave
lcall
xor
push
shlb
or
pop
and
imul
lcall
rolb
mov
aaa
in
ss
adc
sub
lds
mov
add
pushf
call
jbe
xchg
pop
pop
xor
mov
cwtl
mov
jg
gs
fs
add
cs
fsub
push
mov
or
movsb
mov
icebp
test
inc
sbb
stos
loop
push
push
out
popf
call
imul
test
push
lcall
dec
xor
ljmp
pop
dec
lahf
sarb
out
mov
pop
xchg
ror
sbb
push
stc
cmpsb
arpl
fnstcw
jecxz
test
imul
jge
outsb
in
push
adc
push
mov
scas
je
ja
insl
movsl
bound
in
addl
cmp
add
adc
lahf
jno
mov
and
js
mov
fcom
outsb
pop
negb
or
lock
mov
cli
movsb
repz
pop
out
cmp
mov
scas
inc
movsb
pop
mov
sqrtps
popa
movsb
cmpsl
dec
pop
jecxz
mov
xor
mov
adc
push
push
clc
fists
out
lock
inc
inc
pop
dec
mov
loopne
xchg
clc
sub
rolb
in
pushl
fmull
and
add
aas
outsl
pop
dec
gs
movsb
xor
int
repnz
pop
and
sub
mov
or
jmp
sub
push
or
or
ret
pop
cmp
test
pop
inc
jp
mov
sbbl
and
cld
pusha
imull
sahf
add
sbb
inc
adc
hlt
sub
and
inc
gs
test
lcall
jle
shlb
popa
push
dec
cltd
fsubl
jb
dec
rorl
mov
jno
and
ja
icebp
outsl
inc
sti
sahf
mov
add
push
mov
mov
or
mov
and
je
xchg
int
dec
nop
jb
leave
cld
out
adc
push
jbe
xchg
mov
mov
out
int3
addr16
insl
push
mov
call
sub
daa
out
jle
dec
lods
push
mov
das
lret
fsubrl
jecxz
ja
or
int
fadd
jo
and
ret
div
or
out
repnz
xchg
xlat
mov
arpl
gs
cmpsw
inc
jno
push
stc
mov
xor
insl
jmp
iret
data16
push
pop
ljmp
push
add
mov
popf
outsl
jnp
dec
imul
xchg
imul
sub
mov
iret
xchg
xor
shlb
mov
sarb
dec
xchg
mov
cmc
stos
jmp
lods
mov
daa
mov
add
xor
in
xor
jo
fsubp
add
in
sub
fwait
cltd
outsl
mov
dec
adc
pop
pop
sti
dec
and
std
shl
cltd
scas
xlat
mov
or
dec
dec
mov
adc
and
test
mov
cs
nop
fadds
sub
add
adc
test
inc
lods
cmp
mov
cltd
dec
xor
rol
ja
rclb
cmp
cmp
scas
int3
pop
cli
jl
jp
roll
aam
push
jne
aad
cmc
mov
pop
mov
adcl
jp
add
ret
dec
sti
jbe
add
xor
ja
cs
push
fwait
inc
mov
lret
imul
mov
jmp
inc
test
cmp
push
inc
in
fs
mull
adc
mov
jle
push
pop
jne
in
lret
sbb
test
lods
jle
inc
les
add
ret
insl
test
iretw
sub
sbb
pop
lds
bound
scas
rolb
jp
mov
xchg
mov
sbb
xor
enter
sti
shrl
mov
or
mov
arpl
dec
and
mov
adc
ljmp
xchg
addr16
push
es
jno
aas
lret
mov
adc
movsl
mov
push
sub
mov
pushf
insb
mov
cmc
xor
mov
cld
add
mov
stc
call
test
pop
iret
in
mov
cli
sub
sbb
lret
pop
jns
push
cld
xlat
dec
push
js
cmp
cmpsl
lret
add
dec
adc
sbbl
jecxz
pop
xor
mov
push
fidivrs
cmpsb
sbb
mov
jo
sub
subb
cmp
loop
or
insl
fldcw
mov
cmc
xchg
outsb
and
mov
or
mov
repnz
int3
aas
and
jmp
and
sahf
pusha
call
mulb
test
mov
arpl
repz
mov
pop
inc
add
xor
push
fwait
ljmp
rolb
sub
cld
add
cli
aam
or
sub
ret
loope
dec
ror
jp
push
and
aaa
cltd
popf
adc
mov
dec
movsb
xor
add
cmp
hlt
xor
xchg
insl
fadd
inc
cmpsb
ret
lock
aam
iret
dec
mov
or
pop
cmp
dec
mov
pop
dec
lods
ret
rcl
imul
xchg
out
scas
lock
mov
sarl
idivb
add
lea
test
mov
inc
sub
adc
xchg
mov
inc
call
dec
out
les
pop
loope
jno
mov
ret
dec
cmp
push
or
inc
lock
lock
sbb
dec
popf
sub
in
push
pop
mov
icebp
add
mov
into
loop
sub
sub
push
cltd
pop
jmp
inc
mov
out
adc
data16
pop
cld
rclb
add
xchg
push
stc
aam
mov
iret
ucomiss
pop
xchg
into
pop
xchg
fstp
cmpsl
icebp
mov
and
or
mov
imul
into
xchg
pop
mov
mov
dec
outsl
scas
xor
inc
pop
divl
popa
in
aaa
das
push
das
aas
cmp
mov
sbb
call
pop
xlat
pop
pop
sub
shrb
sbb
sub
fists
dec
or
imul
add
inc
mov
inc
lcall
mov
lods
pop
push
pop
mov
stc
cmp
xor
jg
cmp
xchg
fnstcw
das
cltd
test
mov
js
andb
adc
xchg
mov
insb
pop
into
sub
jns
dec
enter
and
push
aaa
outsl
inc
shll
xchg
or
std
sub
cltd
inc
push
push
xchg
or
xor
pop
je
lds
repz
and
clc
inc
mov
rcll
test
sub
scas
iret
inc
pop
pop
lret
mov
aas
aaa
jecxz
imulb
xchg
adc
jae
mov
lea
cmpsb
cli
or
push
inc
mov
outsb
push
mov
sub
dec
push
sti
push
push
push
lret
addb
mov
push
ljmp
jp
fcmovbe
imul
push
stos
xor
frstor
pop
pop
shrl
mov
xchg
push
icebp
add
mov
fadds
hlt
inc
out
testb
mov
int3
and
push
mulb
dec
and
and
push
call
out
sub
inc
sbb
jge
mov
push
adc
scas
cmpsl
mov
pop
dec
and
aas
rorl
stc
int
jecxz
push
dec
pop
adc
mov
cmp
or
mov
loopne
int3
adc
sub
das
nop
sub
cltd
mov
xchg
out
outsb
inc
mov
mov
push
lds
sub
push
cwtl
and
xor
inc
ds
fwait
inc
dec
mov
or
loope
cltd
pop
mov
push
fsubs
or
js
pusha
js
mov
fnstsw
aad
xchg
jmp
mov
add
inc
int
repz
sub
mov
mov
xchg
dec
jnp
cs
sti
mov
std
or
cmp
outsl
movsb
les
test
mov
shrl
cld
fildl
not
repz
jge
sub
movsl
mov
sub
int3
lods
leave
push
cltd
xchg
push
cmp
inc
sar
pop
push
jle
push
stc
stos
shl
cltd
ret
bound
mov
fnstenv
jg
lcall
push
call
clc
insl
iret
jns
lcall
mov
orb
mov
movsb
inc
or
push
push
inc
mov
mov
dec
inc
mov
es
jbe
out
pop
push
int
sub
dec
test
and
jo
cmp
into
call
daa
push
mov
jo
shrb
sbb
data16
dec
ficomps
adc
push
cmpsb
addr16
stos
push
repz
pop
adc
movsb
push
mov
and
fs
cmp
xchg
addr16
outsb
clc
mov
xor
jg
push
dec
or
sahf
into
inc
mov
mov
mov
scas
xchg
push
pop
subb
das
cmp
pop
push
adc
loope
jb
mov
inc
xchg
fiadds
pop
cmp
clc
add
jo
out
mov
mov
jle
in
or
lods
in
inc
lcall
in
je
jp
mov
ljmp
iret
gs
mov
sarb
pop
sarb
movsl
adc
cmpsl
inc
xor
and
mov
mov
jmp
lcall
mov
mov
sbb
xor
hlt
inc
sti
fwait
in
xor
stos
pop
arpl
and
stc
or
shlb
cmpsb
jg
pop
and
add
repnz
pop
push
mov
mov
add
lea
xchg
push
nop
jmp
push
sbbb
fistps
lock
jmp
out
add
test
popa
out
adc
fstpl
pop
and
outsl
cmp
popa
push
push
or
out
pop
andb
cmp
mov
mov
inc
push
inc
fbld
icebp
in
mov
mov
inc
inc
jbe
cmp
sar
arpl
dec
ljmp
jge
sbb
mov
enter
jo
adc
jecxz
adc
out
mov
inc
and
insl
jo
mov
pop
scas
je
insb
and
inc
jns
jae
ja
movsl
mov
lcall
gs
push
cmp
xchg
je
pop
int3
pop
or
testl
das
loope
add
sub
dec
jmp
nop
push
daa
test
xchg
xchg
push
mov
mov
sbb
xchg
insb
cmp
sti
push
jno
push
sbb
mov
cmc
pop
mov
pushf
sub
popf
mov
pop
repz
sub
adc
aaa
xor
inc
popa
mov
int
mov
sub
add
call
cltd
pop
rcrl
push
in
movsl
pop
lods
push
rcr
stos
jle
movsb
jae
xlat
adc
or
or
sar
sub
mov
imul
adc
inc
stos
aad
and
dec
arpl
mov
fdivrs
jnp
pushf
arpl
and
sub
cmp
test
lea
push
or
pusha
push
divl
rorl
inc
in
push
rorl
pop
es
add
dec
inc
xor
mov
or
in
pop
or
fisubl
loop
mov
fs
data16
mov
lods
mov
data16
divl
xor
pop
shl
add
adc
daa
jg
dec
jo
xchg
out
insl
inc
dec
divl
jo,pt
jne
pop
mov
xor
dec
mov
inc
test
jge
pop
iret
orb
push
push
push
out
pop
repz
mov
lods
inc
fstps
and
andl
xchg
or
out
mov
call
mov
movsl
fnstcw
sbb
subb
pop
gs
cld
aaa
pop
push
aas
inc
ror
pop
loop
jnp
pop
test
dec
ror
scas
fsubl
insl
push
sub
jp
aam
and
mov
loopne
sbb
dec
fldenv
push
negb
push
bt
and
push
pop
sub
jmp
mov
jecxz
lcall
inc
call
jmp
cmp
ror
pusha
insb
cmpsb
das
enter
or
push
push
sub
dec
sbb
jnp
xlat
adc
jbe
mov
jmp
scas
lock
movsb
mov
or
scas
sarl
push
ljmp
dec
and
mov
in
jg
shll
cmp
jae
or
lods
loopne
jne
push
xor
xchg
or
ret
pop
sub
pop
outsl
mov
ror
add
test
add
mov
ret
or
fidivrs
sar
popa
fsubrl
pop
enter
je
push
shl
out
cmp
lcall
mov
outsl
sub
int3
in
jg
in
ja
call
mov
push
insb
sbb
addr16
rorl
subb
mov
push
mov
call
jne
dec
stc
or
adc
out
sbb
iret
mov
or
xor
xchg
fisttpl
fnsave
pop
xchg
out
adc
cmpsl
out
cmpsb
or
nop
push
sbb
aaa
xor
jbe
clc
shll
and
xchg
sub
je
loope
add
mov
or
into
jno
in
jo
push
inc
shll
mov
cld
xor
push
xor
ficomps
stos
mov
dec
push
xor
and
std
pop
mov
xchg
mov
push
movq
mov
pop
pop
ds
pop
and
nop
xlat
shrl
or
pop
test
fisttpl
cmpsl
jmp
rorb
mov
adc
in
imul
mov
mov
addr16
out
push
imul
cltd
push
sub
call
data16
push
js
dec
stos
leave
xlat
ficoms
ret
push
xor
je
bound
and
fidivl
flds
xlat
bswap
push
outsl
and
sbb
test
pop
movl
sbb
and
jo
insl
mov
js
sahf
xor
jnp
sbb
cmp
pop
xchg
add
add
jae
or
push
daa
adc
mul
lods
dec
xchg
subl
cmp
cli
lods
cmpsb
pop
push
fimull
sub
cs
int3
adc
pop
mov
cmp
es
push
inc
mov
pop
or
cwtl
fldl
fnstsw
mov
mov
push
ffreep
cmp
sbb
cmp
pop
int
shrb
inc
mov
sbb
xchg
push
jp
xor
test
push
andb
push
mov
fidivrl
inc
mov
add
es
dec
jno
push
pop
jnp
add
cmp
dec
inc
fidivrl
fs
call
repnz
mov
push
ds
ljmp
sbb
andl
hlt
mov
fwait
inc
push
out
and
mov
ret
stos
cmp
sub
subl
cmc
xchg
pushf
jne
es
lretw
js
cmpl
or
ret
jp
into
loope
jo
je
and
icebp
das
icebp
cmpsl
mov
push
mov
mov
rorb
mov
adc
les
and
mov
bound
cwtl
sbb
popf
sbb
cmp
and
jl
inc
movsl
call
inc
in
xchg
and
sar
lods
addr16
xchg
jne
sahf
daa
adc
dec
jne
or
jb
adc
mov
hlt
jmp
sub
mov
and
cmp
das
hlt
pop
icebp
out
xchg
cmp
jg
test
mov
pop
in
push
lea
gs
sub
out
int3
or
cmpsb
add
dec
jge
jnp
mov
mov
fmuls
daa
sti
movsb
movsl
repnz
dec
lea
sub
fsubl
adc
sbb
ss
mov
aad
js,pt
jg
lret
pop
xor
adc
dec
rcl
add
cmp
dec
and
add
cmc
test
mov
mov
std
sbb
push
inc
insb
rcll
push
scas
cmp
mov
mov
lret
inc
inc
xor
addr16
cmp
pop
mov
divb
int3
xor
testb
aam
aam
or
jl
mov
mov
clc
out
push
inc
jp
inc
jp
xor
xlat
orl
push
mov
mov
mov
cld
sbb
adc
cmp
mov
and
fwait
std
cwtl
push
add
jecxz
fsts
test
jl
mov
jnp
lahf
aaa
ljmp
lods
in
mov
ds
incb
lods
mov
jmp
xchg
xchg
push
es
das
pop
mov
sbb
in
gs
insb
xchg
mov
inc
mov
in
mov
in
stos
notb
push
mov
adc
scas
notl
xorl
into
adc
inc
iret
mov
ret
leave
sub
icebp
lock
dec
addl
in
pop
loope
cmpsl
ss
jno
repnz
adc
popf
pop
pop
test
fs
mov
cmp
fsub
movsb
cmp
mov
mov
lock
int3
ret
push
lods
or
ljmp
movsl
lods
testb
cmc
mov
icebp
leave
pop
aad
or
repz
ja
pop
in
cmp
xchg
pop
dec
ss
clc
shll
push
sub
jecxz
pushf
leave
mov
xchg
jae
xor
push
pop
imul
inc
pop
xchg
lds
jmp
sub
inc
aaa
pop
xchg
jnp
lcall
cmpsl
aam
hlt
mov
xchg
shll
outsb
xchg
js,pn
mov
add
pop
mov
dec
imul
fisttps
dec
sti
loopne
cli
sti
dec
sahf
pop
mov
lock
or
xchg
ret
jl
in
xchg
inc
mov
jmp
push
test
mov
in
imul
pop
pop
out
inc
jns
jle
push
adc
mov
andb
jl
mov
mov
inc
cwtl
adc
xor
inc
scas
jp
out
mov
sub
in
ds
jb
repz
outsl
adc
fbld
sbb
xchg
jne
call
mov
inc
mov
fistpl
subl
push
xchg
or
mov
push
stos
pop
inc
loope
shll
addr16
fbld
xchg
pop
adc
pop
inc
lcall
mov
mov
loope
notb
lock
xor
in
out
loop
mov
int
or
cmp
lods
cmp
push
cmp
outsl
outsb
jle
lret
mov
and
xor
dec
xchg
dec
inc
jb
mov
cmp
out
inc
pusha
jg
push
mov
and
sti
aaa
mov
call
xor
push
lahf
sbb
loop
mov
jb
dec
add
or
ljmp
pop
ficoms
daa
fisttpl
addr16
xchg
jbe
xor
push
jne
sbb
mov
push
stos
add
out
xchg
mov
push
adc
xlat
ss
out
sub
shll
ss
aad
icebp
cmp
pop
rclb
cmp
movsb
cmc
xlat
push
in
call
ret
hlt
cmc
jbe
mov
pop
adc
das
adc
imul
lods
loopne
mov
mov
jno
into
sbb
fnsave
fisubrl
xor
in
mov
cmp
pop
outsb
dec
nop
or
fisttpl
popa
add
push
xchg
xor
cld
inc
jge
loop
aam
sub
dec
jne
enter
sbb
rcrb
jp
jne
mov
cmp
pop
hlt
mov
mov
mov
fisubl
mov
lahf
gs
dec
and
xchg
in
fisubrl
pop
cmp
loop
push
cwtl
pusha
nop
addr16
jae
inc
incb
subl
call
cli
idivb
push
ret
pop
or
dec
mov
sbb
loopne
out
andb
fwait
mov
js
int3
aas
fisubs
not
push
es
mulb
int3
add
dec
xor
inc
arpl
push
in
call
cmp
cmp
movsb
and
pop
push
or
nop
aas
sub
mov
arpl
fstps
fidivrs
inc
cmp
shl
lock
std
jg
xchg
les
cld
pop
hlt
fcompl
lahf
lods
ds
sbb
fwait
lea
subl
mov
mov
pop
clc
das
roll
fmuls
and
xchg
add
fildl
sub
aaa
adc
pop
mov
les
mov
lea
inc
jp
sub
pop
clc
orb
iret
dec
addr16
fsubrp
add
add
cli
es
repz
outsb
xor
int3
sub
mov
scas
in
or
push
jmp
popf
outsl
lods
movsl
pop
jl
cli
and
xchg
andl
cmp
loope
into
aaa
xor
fwait
ljmp
xchg
push
loopne
outsb
into
add
pop
mov
ficoml
mov
pop
pop
add
clc
mov
pop
pop
mov
js
pop
inc
shlb
pop
cmp
and
ret
rcl
lods
cmp
add
stc
cmc
mov
fldcw
stos
dec
dec
mov
mov
adc
dec
mov
or
pusha
das
pop
jmp
xchg
sub
sarb
outsl
lods
or
cmp
xor
inc
iret
mov
sub
mov
rcrl
movsb
stos
ljmp
pop
sbb
cmp
xor
rolb
pop
sbb
lods
out
adc
jnp
and
js
add
lret
xor
xor
into
pop
fdiv
and
adc
inc
dec
mul
mov
cmp
dec
daa
pop
add
inc
stos
sarb
aam
in
jbe
je
adc
repz
dec
jne
sbb
scas
cmp
rorl
or
sti
mov
lea
loop
push
add
xchg
add
push
ljmp
sub
sub
js
aam
mov
or
or
iret
dec
imul
push
ja
loope
xor
mov
inc
je
sbb
stos
pop
testl
orl
and
into
into
sub
loop
push
pop
stos
roll
nop
clc
or
sub
call
lods
lahf
data16
fwait
sbb
seto
sub
mov
lcall
ret
jle
movsb
insl
sub
inc
sub
xchg
pusha
and
imul
je
rorb
xchg
pop
pusha
mov
shlb
movsb
xchg
sub
adc
xchg
es
test
xchg
mov
mov
pop
push
fs
fcomp
mov
shlb
sub
dec
jnp
mov
into
xor
out
add
cmpsb
pushf
ss
xor
and
inc
xchg
data16
mov
jg
mov
xchg
xchg
fstps
fcomp
mov
loopne
jbe
mov
in
fidivrs
jnp
das
popf
jb
leave
mov
ds
mov
jmp
mov
xor
rolb
data16
rolb
test
in
mov
pusha
aad
in
outsb
or
movups
mov
xchg
gs
pusha
dec
or
test
out
mov
cmp
stos
pushf
adc
ss
repnz
jle
pop
repnz
int3
out
add
adc
imul
dec
xcrypt-ofb
cmpsl
outsl
test
jae
out
bound
popa
mov
in
sbb
mov
mov
fwait
outsl
clc
inc
push
js
inc
or
pop
mov
and
xchg
pop
sbbb
scas
xchg
das
jl
outsb
aas
jb
popa
jl
lods
loopne
dec
jmp
in
push
loopne
icebp
imul
inc
push
rcrl
and
cmp
repnz
ficoms
hlt
in
cmc
push
scas
mov
cmp
push
xchg
mov
xchg
sbb
mov
and
cmp
mov
add
and
nop
lock
inc
shlb
mov
out
sti
fidivrl
mov
or
lods
lahf
fs
adc
mov
or
stc
fstl
lock
mov
stos
shufps
jg
dec
in
cwtl
adc
enter
sbb
movsl
cwtl
aas
fadds
movsl
jns
jp
icebp
jne
jg
mov
push
push
cmpsl
adc
mov
test
aas
mov
pop
pop
push
mov
pop
jnp
call
das
push
sarb
adc
shll
lret
mov
jns
inc
nop
out
fcompl
in
cmp
mov
aad
sub
sti
dec
inc
lret
in
add
adc
sub
sub
cmp
xlat
popa
js
mov
int3
xchg
fistl
pop
nop
test
mov
leave
into
divb
es
and
sbb
pushf
scas
lea
aas
push
or
pop
lcall
inc
mov
or
push
add
icebp
dec
movsl
clc
ret
xor
loop
cmp
xor
push
je
xor
cwtl
test
clc
xor
pop
add
outsl
lcall
lahf
xchg
lret
mov
popl
testl
push
andb
test
jg
xor
push
add
andb
mov
mov
or
inc
jne
les
push
sbb
test
inc
sbb
xchg
pop
push
push
push
push
into
insl
xchg
sub
repz
lock
scas
inc
lcall
daa
enter
int3
jg
mov
dec
and
add
in
aad
mov
add
sbb
dec
sar
sbb
jae
mov
gs
adc
sti
lret
sub
inc
loopne
and
xor
xor
xchg
mov
jo
idivl
push
rorl
add
nop
cmp
jmp
xchg
push
dec
clc
in
aas
mov
mov
nop
dec
bsf
lea
dec
in
and
and
jecxz
mov
lock
andb
mov
or
pop
nop
push
repz
xor
xrelease
mov
out
sub
sub
jns
insb
mov
xchg
mov
imul
popa
push
iret
out
leave
sub
push
sahf
jo
sub
fsubrs
push
out
sbb
mov
repnz
push
nop
shll
adc
cmp
and
or
inc
scas
cmp
inc
dec
mov
xor
cs
push
push
cmp
sub
inc
movsb
movsb
in
gs
push
push
fistpll
lea
sub
cmp
pop
testl
pop
mov
cmp
sub
stos
adc
add
mov
dec
jge
mov
repnz
dec
out
call
sbb
jg
mov
shr
pop
xor
jae
xlat
fs
repnz
dec
cmpsb
mov
dec
fs
rorl
jbe
and
jle
std
mov
xchg
pop
pop
pop
xchg
add
jecxz
rcrb
cwtl
jo
lret
pop
pop
stos
jno
sbb
cmpsl
and
ds
dec
push
mov
fiadds
xchg
pop
aas
mov
aas
call
sub
sbb
lahf
mov
and
mov
mov
mov
adc
add
pop
imul
jge
test
jnp
mov
les
lea
cltd
add
mov
in
dec
lret
inc
out
add
inc
pop
pop
xchg
fmul
in
mov
pop
cmp
adc
or
test
mov
inc
into
dec
cmp
xchg
adc
pop
int
mov
test
sub
js
sub
inc
leave
adc
cwtl
stos
stos
out
pop
jb
cld
jge
and
in
xchg
in
stos
fisttpll
push
dec
push
xchg
cwtl
sbbb
scas
inc
mov
mov
mov
dec
into
xor
and
ljmp
or
lret
leave
pushf
and
jbe
mov
movsbl
call
hlt
push
fdivrl
sub
sti
xchg
cmp
aam
jl
mov
push
or
aaa
out
adc
pop
push
push
in
fs
aam
push
inc
insl
mov
call
cmpsb
adcl
pop
jbe
pop
loope
stos
lahf
push
push
or
into
mov
xchg
pop
dec
dec
push
scas
cmpsb
cmc
cld
jmp
fisubs
pushf
cmpsl
aad
ret
outsl
clc
adc
insb
les
in
push
mov
pop
jno
mov
dec
push
xchg
mov
sbb
xor
jae
mov
sar
mov
pushf
xchg
or
daa
pop
jecxz
sahf
in
mov
sbb
out
dec
inc
adc
sub
push
es
adc
jne
sahf
or
fistpll
or
mov
ja
jns
push
push
out
jne
sub
xor
in
bound
cmp
arpl
inc
out
add
lahf
jb
or
xchg
mulb
pusha
sti
inc
enter
mov
mov
adc
mov
and
mov
adc
adc
shlb
inc
pop
jno
les
lock
mov
test
dec
cmc
pop
adc
pop
sbb
mov
jnp
xchg
loopne
xchg
adc
push
out
adc
mov
cmp
xor
or
lea
push
xor
push
das
sti
mov
ds
mov
out
push
and
mov
xchg
cmp
shr
mov
je
push
mov
and
jl
mov
jge
cmc
cmp
mov
cs
xor
in
mov
out
pop
js
inc
mov
test
in
and
dec
sub
cmovbe
sbb
outsl
cmpsb
insl
xor
fsubl
xchg
pop
dec
pop
mov
ds
dec
stc
push
cmp
mov
scas
imul
or
cltd
jns
das
cli
stos
dec
stos
dec
adc
adc
sbb
mov
jnp
shr
scas
lods
inc
cmp
mov
sbb
jg
push
xchg
jle
sbb
push
out
adc
mov
sub
lods
ret
into
lret
mov
dec
arpl
movb
and
test
jbe
nop
int3
adc
and
cmp
sub
add
mov
int3
popf
leave
cs
pop
pop
out
in
ljmp
mov
insl
pop
jge
outsl
pop
pop
inc
shlb
cmpsl
lods
icebp
pop
imul
daa
sbb
fwait
add
mov
mov
dec
dec
jp
leave
int3
mov
inc
and
sub
scas
outsb
pop
and
fisubs
icebp
inc
outsb
adc
fisubrl
imul
bound
push
jle
mov
sub
lahf
add
repnz
lcall
mov
xchg
xchg
outsl
sbb
mov
movl
lahf
xchg
inc
push
xchg
sbb
inc
jecxz
pushf
xor
push
movsb
mov
iret
outsb
sti
jae
mov
ret
popf
mov
and
mov
arpl
adc
pop
out
push
mov
jmp
je
loope
and
ret
jne
jne
and
filds
xor
push
sahf
jmp
pop
xor
inc
int3
ret
dec
push
lahf
arpl
push
fnsave
ss
stc
sbb
or
xchg
lahf
fisttpll
in
mov
sub
push
stc
push
out
pop
js
insl
test
enter
pop
fcomp
shlb
sti
adc
mov
dec
xor
aam
adc
aad
fdivrs
out
iret
sti
adc
sbb
fcmovnb
ja
pop
sub
xchg
lock
adc
adc
aad
mov
xchg
mov
mov
mov
pop
pop
adc
test
xlat
xchg
sbb
jnp
icebp
add
popf
insb
sub
jae
push
int3
mov
cmp
pop
stos
push
loopne
call
jo
xor
cmc
imul
and
push
pop
mov
in
jl
mov
rorb
das
jb
push
cmp
inc
shll
in
mov
push
mov
data16
cs
jbe
pop
rclb
and
aas
xor
loope
and
mov
vptest
push
std
aaa
xchg
in
sbb
lods
add
xor
sarb
fcmovnu
andb
shlb
imul
push
adc
inc
cmp
xchg
jnp
push
mov
sbb
mov
test
pushf
sti
mov
iret
sbbb
xor
enter
fsubrs
pop
cmp
add
dec
sub
pop
insb
sbb
jecxz
lods
and
mov
mov
and
into
or
pop
clc
pop
pop
push
push
xchg
xlat
xorl
adc
enter
aas
scas
mov
xchg
into
adc
push
xor
shll
jae
mov
das
jp
into
outsb
cwtl
jno
push
push
push
inc
fisttpl
arpl
mov
popa
cmp
cmp
mov
je
mov
adcb
int
cmp
xlat
or
lret
xchg
movsb
xor
push
mov
xchg
lahf
add
xchg
inc
aam
test
lcall
mov
dec
and
mov
push
ljmp
bound
adc
mov
das
repnz
pop
mov
fucom
or
add
or
dec
mov
sahf
arpl
add
jl
cwtl
fmulp
int3
and
jne
out
lock
jb
or
xchg
call
enter
out
imul
add
jmp
call
rcll
cld
xor
mov
xor
pop
cmp
xchg
or
les
ja
clc
iret
scas
xchg
fisttps
cmp
xlat
jle
jb
pop
cmp
mov
mov
cmp
ljmp
out
insl
lds
and
jl
sbb
in
bound
and
adc
mov
cmc
cmp
out
lods
sub
mov
shl
mov
jnp
mov
iret
and
icebp
push
in
cmpsl
mov
xchg
cmp
aad
pushl
popf
lods
xchg
jno
cmp
xor
imul
icebp
cld
js
cmp
push
lea
mov
or
adc
jg
or
push
pop
cmpb
push
insb
adc
push
in
jle
loopne
enter
mov
xchg
jge
test
or
std
lret
outsb
fdivr
or
inc
push
xrelease
push
sahf
inc
mov
push
dec
fwait
popa
call
and
fsubs
test
es
pop
sbb
std
push
imul
push
mov
jnp
loopne
aas
dec
xor
fsubp
aad
dec
xchg
insl
pop
dec
xchg
sbb
jb
mov
inc
xor
sub
movsb
xchg
ret
in
adc
pushf
xchg
xchg
jecxz
mov
jecxz
mov
pop
sti
push
jno
cltd
dec
jge
add
andl
dec
pop
rolb
jp
adc
addr16
mov
sbb
pop
lds
roll
dec
out
lods
fstpt
icebp
push
dec
imul
pop
mov
mov
xor
jnp
pop
and
xchg
jge
jp
lock
sbb
cld
fisubrs
pushw
loopne
add
dec
in
dec
inc
push
ljmp
sti
add
or
sub
inc
sbb
iret
push
add
adcl
or
int
dec
sbb
pop
test
stc
stos
clc
sbb
sti
lock
lock
inc
add
push
je
imul
ss
pop
pop
pop
adc
push
jl
int3
lea
cwtl
imul
jle
fcoms
lea
xchg
jo
adc
cmp
aam
and
and
sub
mov
jo
mov
cmpsl
jecxz
xchg
inc
cwtl
mov
sahf
roll
sbb
push
dec
insb
testb
pop
popl
subl
clc
sbb
rcr
enter
movlps
pop
pop
jbe
ss
lret
fs
cs
jp
out
or
cmpsl
inc
int
insl
inc
push
pop
adc
mov
push
push
push
outsl
dec
gs
adc
arpl
imul
pop
add
paddsw
lds
fildl
fidivrl
sub
outsb
and
sbb
inc
pusha
push
push
fbld
mov
mov
shrl
adc
shll
or
popa
dec
loopne
xor
sub
mov
mov
pop
je
adc
jns
jecxz
enter
cmp
cli
sbb
xchg
in
rol
or
or
mov
or
iret
clc
mov
scas
mov
inc
xchg
popf
adc
aaa
inc
dec
jbe
sbb
push
or
push
popa
dec
xor
add
test
xchg
je
lock
cmpsl
cwtl
xorb
movsb
ret
jne
je
xchg
pop
les
icebp
and
test
xor
jle
dec
inc
mov
lds
sub
shrb
adc
es
push
mov
ljmp
inc
push
scas
xchg
adc
sub
aaa
jnp
popf
stc
or
cltd
mov
sbb
popf
mov
xor
mov
stc
mov
mov
sub
jl
jae
add
mov
repz
filds
int
cmpsb
sbb
push
jmp
into
mov
push
es
xor
jle
push
jne
jmp
cltd
rcr
es
daa
sub
aam
repz
ss
imul
fnstcw
dec
lea
cs
xchg
jnp
lds
xchg
push
mov
das
or
insl
iret
mov
adc
ds
and
shrl
and
outsb
or
jne
inc
lods
mov
ret
ficompl
addr16
push
rcrb
adc
mov
sub
jno
jns
jne
and
adc
push
or
sarb
fidivrl
xlat
cmp
mov
xchg
out
cmp
loop
cltd
xchg
pop
sbb
mov
pop
or
cmpsb
cld
repnz
add
mov
push
outsl
or
or
pop
add
push
push
mov
ficomps
cmp
stos
cmp
lods
out
pop
jnp
xchg
jge
dec
loopne
jle
mov
jae
cmp
pop
loop
push
xchg
js
and
jge
sbb
clc
adc
add
mov
or
jg
fs
test
sub
out
inc
dec
mov
cltd
fldenv
or
aaa
test
lds
je
add
popa
pusha
sbb
int3
loopne
xchg
xchg
cwtl
pop
add
mov
clc
ror
std
lock
lods
call
rol
ret
push
adc
adc
inc
xchg
mov
cs
add
push
lds
pop
sub
mov
pop
and
inc
iret
mov
fucomp
sahf
jns
aaa
mov
in
jno
xchg
dec
mov
arpl
xchg
add
inc
lods
repz
cld
test
sbb
inc
std
mov
outsb
and
add
cmpsb
sahf
xlat
pop
and
pop
mov
test
xchg
and
in
xor
out
and
aad
and
test
cmp
ds
sub
jo
mov
std
fidivl
ret
cs
pop
ljmp
cwtl
movsl
dec
mov
ds
inc
push
loop
sbb
and
in
idivb
shlb
insb
inc
and
test
arpl
inc
arpl
adc
and
or
les
dec
push
xchg
iret
xor
and
jns
fadds
pushf
dec
xchg
out
call
inc
cmp
jl
jmp
lods
movl
movsb
xor
mov
dec
push
lea
sub
jns
mov
fwait
pushf
or
test
and
add
call
adc
imul
jp
adc
cmp
mov
insl
stos
insb
ljmp
push
xor
pop
xlat
jp
arpl
sbb
outsb
and
aam
xor
test
iret
out
hlt
sbb
jmp
fs
sbb
dec
std
pop
sbb
pop
xchg
adc
jbe
imul
or
add
cmp
fmul
scas
mov
movsb
cld
inc
adc
shll
add
inc
cltd
fwait
mov
lcall
adcl
rolb
dec
les
add
push
dec
push
cmp
mov
aam
adc
lods
push
jne
aas
int3
jl
inc
sbb
lcall
out
popf
pop
lods
fdivr
mov
xchg
fcompp
jmp
idiv
pop
ds
dec
loopne
cs
sbb
test
es
adc
nop
push
sbb
inc
mov
sub
loopne
or
stos
psubw
add
sbb
push
xchg
fisttpl
pop
lods
cmp
cmpsl
push
inc
push
xor
cmp
je
xor
xor
into
sub
adc
mov
mov
or
out
popf
and
xchg
push
pop
iret
les
or
jl
pop
insl
insl
js
sbb
add
fsubs
or
add
outsl
lods
stos
dec
out
rcrb
sub
movsb
aad
or
inc
icebp
push
pop
imul
push
sbb
mov
loopne
add
jmp
sbb
xor
addb
add
test
cs
mov
call
mov
jae
sub
je
stos
sti
cmc
lds
nop
dec
xlat
mov
out
inc
sub
inc
repnz
push
popa
sbb
lds
fmull
add
lcall
cli
add
lods
inc
shl
xchg
jnp
data16
faddl
push
clc
into
popf
addr16
add
mov
mov
add
xchg
das
mov
cmp
cmp
jns
fisubrs
sbb
int3
push
enter
in
xchg
add
mov
xor
push
add
fwait
sarb
out
push
fstpt
hlt
push
enter
push
mov
loop
mov
push
push
mov
cmp
mov
lret
jmp
xorb
inc
or
jns
xor
cs
outsb
pop
xor
pop
repz
xor
xor
mov
in
jbe
push
test
frstor
aad
or
ret
dec
dec
mov
leavew
popf
fistpl
xor
test
mov
mov
dec
icebp
fld
popa
inc
jns
sbb
jno
fadds
mov
cmp
lcall
or
cltd
mov
test
hlt
outsl
cltd
jmp
jnp
es
lret
cmpsl
lcall
test
or
pop
xchg
ret
cmp
arpl
push
lret
fs
xor
mov
adc
mov
bound
test
and
call
jecxz
sbbb
adc
imul
pop
fidivs
movsl
lret
jge
xchg
mov
pop
sub
ljmp
out
sub
int
repnz
insb
subl
mov
xchg
adc
pop
xchg
mov
sbb
xor
cmpsl
jg
sub
scas
pop
inc
xor
dec
scas
push
and
outsl
xor
rcll
mulb
js
xlat
iret
or
sbb
pop
fwait
xchg
mov
pop
sbbb
call
jge
push
enter
or
jl
or
xchg
aas
rolb
push
pop
sub
lods
test
loopne
push
insl
mov
jg
scas
sbb
xchg
cmpsb
mov
dec
dec
out
repnz
push
imul
pop
hlt
and
adc
aam
push
sub
cmp
call
int
loope
stos
pop
imul
xchg
int
xor
xchg
mov
add
filds
cmp
push
roll
insb
xor
gs
divb
xor
cmp
ss
cmpb
jbe
and
sahf
cmp
fsubr
cmpb
pushf
mov
out
xchg
scas
pop
mov
pop
mov
jecxz
ja
xor
aam
mov
cmpsl
cmp
aam
fmull
repnz
jle
pop
xor
sbb
mov
cmp
cmp
mov
lcall
mov
test
sub
nop
mov
addl
push
cmp
xchg
inc
jb
or
xor
sbb
mov
xchg
mov
push
inc
in
push
outsb
pop
mov
mov
nop
rcrl
nop
cmpsb
adc
roll
lea
fdiv
jmp
push
lock
jnp
outsl
stos
jmp
sbb
dec
add
and
daa
ret
int
mov
or
add
unpcklps
sarl
push
loope
push
int3
xor
add
addr16
xchg
xor
lcall
in
in
sub
cltd
cwtl
shll
jns
in
mov
xchg
dec
sbb
fdivs
popf
popf
add
pop
mov
mov
adc
flds
xchg
mov
int
scas
push
mov
push
out
jle
stos
sarb
push
leave
stos
sub
adc
out
cmp
mov
ret
inc
pop
shlb
mov
adc
das
pop
sbb
mov
mov
cs
xor
xor
push
imul
dec
repz
inc
cli
push
dec
xor
mov
and
das
inc
add
rcr
pop
out
into
mov
xor
or
pop
scas
imul
aam
xor
mov
int
sbbb
xchg
cld
sbb
mov
sub
jg
add
add
pop
icebp
pop
movsb
inc
pop
dec
inc
dec
cli
repz
pop
sbb
out
mov
fld
int3
sbb
dec
jbe
or
inc
adc
lcall
cmp
cmpsb
ret
in
push
sti
icebp
mov
test
lret
sbb
inc
repnz
xchg
addr16
jo
shll
mov
or
or
test
movsl
mov
pop
and
add
mov
cmp
cld
call
sbb
mov
inc
xor
lret
js
inc
push
push
stos
test
in
xor
and
call
les
push
out
arpl
inc
adcb
mov
in
cli
push
fisubrl
pop
pop
es
jge
mov
aaa
adc
jp
lcall
xchg
xor
call
and
repz
mov
mov
and
shl
or
lcall
mov
cmp
test
out
mov
insb
jmp
hlt
ret
inc
aam
pop
mov
fs
xchg
jp
repnz
shrl
cmc
pop
mov
sbb
cmp
je
repz
or
repnz
and
call
adc
xchg
imul
shlb
je
add
mov
in
shrl
cmp
xor
ret
lahf
js
int
cltd
jge
subb
emms
pop
xchg
add
cmp
or
cmp
fimuls
aam
cmp
lret
out
data16
rorl
mov
sub
movsl
aaa
push
fmul
mov
jge
rol
mov
insl
in
leave
outsl
sbbl
cmp
and
cmc
sti
mov
adc
sarb
jne
xchg
int3
mov
or
pusha
shll
sbb
addr16
jns
pop
mov
mov
cmc
mov
test
lods
xor
add
sbb
pop
lret
jo
pop
popf
dec
lcall
dec
inc
movsb
loop
fwait
shrb
jl
adc
push
and
or
push
jge
or
and
cmc
pusha
out
jl
cwtl
adc
sub
lock
pop
push
loopne
mov
daa
fsubrs
in
mov
popf
daa
sbb
rcll
or
jb
mov
pop
xlat
jl
sahf
sub
push
mov
bound
test
cmpsb
cwtl
cmpb
cs
das
jbe
xchg
jbe
fiadds
insb
scas
jnp
sbb
and
xchg
mov
popf
inc
pop
xor
adc
gs
mov
push
mov
xstore-rng
cmpsl
lds
inc
mov
les
stos
cmpsb
in
sarb
jno
lock
jge
lock
and
lcall
lret
dec
jmp
xchg
je
loopne
mov
xchg
mov
xorl
jl
jbe
mov
mov
xchg
push
and
pop
pushf
or
xor
xor
outsl
fstl
sub
jae
shrb
ja
int
adc
call
adc
inc
mov
pop
push
ror
std
mov
dec
sbb
mov
fnsetpm(287
es
imul
cmp
sub
xor
push
push
int
cmp
mov
xchg
or
cwtl
pop
xchg
and
ljmp
push
sbb
mov
gs
jo
es
popf
pop
mov
pop
bound
mov
cld
push
jmp
lods
adc
sbb
or
add
std
in
scas
mov
in
push
jno
lcall
int3
pusha
pop
out
dec
repz
mov
jns
je
pop
fcomi
out
daa
icebp
dec
in
out
mov
data16
push
leave
out
ja
pop
add
adc
add
xor
mov
xchg
cld
mov
roll
pop
sbb
xchg
out
xchg
xor
ss
imul
inc
xchg
pushw
sbb
decl
or
push
inc
sub
lds
enter
cmpsb
pop
addb
pop
inc
ss
jle
into
mov
sbb
lret
jne
mov
stc
in
push
adc
mov
inc
daa
in
or
inc
lret
jae
sbb
idivl
pop
cld
mov
pop
loopne
add
fiadds
or
mov
pop
push
inc
test
xor
in
ljmp
popa
stos
enter
ljmp
xchg
fisubrl
mov
dec
repz
xor
fisttpl
loope
lret
popf
xchg
fs
outsb
aaa
lock
push
scas
inc
scas
dec
je
jle
push
inc
inc
movsb
rcr
jbe
xor
stc
test
ja
pop
jecxz
adc
in
adc
and
fcompl
aaa
outsl
mov
cltd
mov
xor
test
clc
mov
pop
mov
mov
out
jne
mov
movsb
jl
lret
xchg
bound
pop
fadds
scas
lret
cmc
mov
inc
xchg
add
stos
mov
popf
lods
insl
dec
or
adcl
jnp
cmp
in
ret
stos
inc
fisubl
xchg
jge
inc
sub
into
mov
fists
and
cmpsl
popa
mov
jno
lea
dec
fnsave
popf
shlb
test
lcall
in
dec
sbb
or
pop
jg
cld
es
fwait
sub
pop
and
cmp
test
jb
sub
adc
or
in
and
add
icebp
call
push
add
cmp
cmp
test
in
sub
adc
dec
andb
inc
cmp
popa
adc
xchg
jge
nop
ja
xchg
mov
push
push
ljmp
push
rorb
test
xchg
and
add
cwtl
cmp
loop
xchg
mov
jne
mov
into
mov
adc
cli
add
in
fwait
cmp
and
dec
shr
jne
xchg
sti
dec
mov
push
push
icebp
xchg
mov
vmovupd
repz
cltd
outsb
das
shll
jns
xchg
sbb
call
ljmp
mov
pop
sbb
cmp
and
xor
and
xor
outsb
divb
test
jne
cli
sbb
jle
mov
das
nop
sbb
rorl
sbb
shl
fs
xchg
jmp
inc
loop
sbb
cli
cmp
lock
cltd
rolb
add
or
pop
addr16
enter
mov
mov
sub
dec
ret
and
fwait
sarl
fidivrs
dec
test
cwtl
call
or
cs
sarb
inc
popf
xor
gs
imul
in
inc
cmp
cmp
rcrb
scas
xor
xor
sbb
int
ret
push
mov
iret
test
adc
aam
scas
sti
popf
pop
movsb
dec
mov
xor
mov
insl
adc
mov
int
mov
xchg
pusha
or
cmp
lods
cmp
mov
ds
sub
pop
sahf
pop
or
adc
insb
mov
mov
xchg
bound
in
aaa
cmpsb
roll
jns
xlat
dec
mov
outsl
xor
cmpsb
insl
fwait
nop
rclb
and
fisubl
cwtl
dec
pop
adc
sub
pop
adc
les
icebp
xchg
mov
jmp
ror
roll
jp
rep
dec
add
bound
xor
aas
inc
scas
insb
out
in
movsb
stos
pop
pop
cmp
popw
fwait
inc
js
movsl
dec
mov
ja
roll
dec
popa
stos
outsb
subb
js
pushw
jno
je
push
fnstcw
mov
test
xchg
cmc
sub
sub
jae
je
das
mov
mov
fnstsw
xchg
adc
sub
mov
inc
jae
pop
or
cmp
dec
xchg
pop
movsb
cmpsl
rcr
sbb
in
jp
push
add
xchg
add
push
xlat
clc
sbb
cmp
aaa
lea
out
xchg
push
push
into
or
call
jle
in
hlt
insl
push
mov
adc
ljmp
shlb
rol
adc
pop
sub
mov
ret
fidivrl
gs
lock
and
mov
jmp
sub
repz
int3
mov
jecxz
ror
cld
and
mov
daa
test
loop
sbb
daa
mov
mov
rolb
test
mov
cmc
nop
jns
in
jno
xor
add
push
in
popa
stos
pop
push
ret
push
push
xor
adc
pop
gs
loop
lods
outsb
sub
mov
lods
sbb
inc
fsubp
sub
inc
dec
xchg
adc
xchg
fucomp
sbb
lods
in
pop
addr16
in
fisttpl
sub
test
scas
push
cmp
rcrl
std
xchg
mov
outsl
mov
and
sbb
enter
andl
push
mov
repnz
cli
inc
xchg
dec
add
push
xchg
xchg
dec
xlat
add
fisubrl
mov
push
cmpsl
mov
rolb
aaa
loope
mov
xchg
mov
test
xor
scas
xchg
xor
dec
mov
cmpsb
add
push
movsl
das
mov
jne
gs
bound
xor
mov
jl
or
pop
inc
gs
cmc
dec
pop
add
leave
cmp
sahf
sub
testl
sbb
or
xchg
mov
enter
and
mulb
add
cmp
shrl
nop
sub
fistl
inc
ljmp
xchg
push
add
movsb
lret
pop
fisttps
jae
sti
cmc
rcrb
lret
out
pop
out
pop
jle
pop
sbb
sub
or
lds
cmp
mov
xchg
push
scas
in
data16
loop
sub
std
popf
aad
rcll
test
push
inc
dec
sarb
gs
xchg
pop
mov
clc
push
mov
mov
cli
scas
jg
push
sbb
cmpsl
push
outsb
cmp
stos
rcpps
movsb
pushf
xor
daa
loop
cmp
lock
shll
jb
insb
sub
iret
rcr
xchg
repz
pop
or
sbb
push
imul
inc
loopne
imul
push
cltd
adc
mov
mov
shrb
testl
inc
pop
sub
jmp
jno
int
mov
inc
inc
imul
aas
or
js
mov
xchg
mov
loope
push
das
pop
inc
jo
inc
stc
popf
gs
mov
gs
mov
cs
xor
icebp
ds
mov
fwait
test
test
pop
aas
lods
shlb
rorw
mov
test
add
sub
xor
shlb
mov
or
mov
data16
sub
sub
testl
dec
mov
and
mov
and
push
enter
mov
pop
sbb
aad
popf
lods
ror
mov
daa
lret
fdiv
inc
test
pop
and
lcall
cmp
and
les
das
jae
dec
shlb
mov
or
test
xchg
pop
daa
jbe
adc
dec
rcll
and
dec
daa
inc
addl
iret
aaa
mov
test
bound
push
call
mov
add
push
out
into
and
sti
pop
es
movsb
pop
and
push
jno
adc
cmpsl
lahf
shl
inc
into
lcall
xor
std
test
sub
data16
or
insb
mov
xchg
mov
xchg
dec
cli
lds
inc
mov
dec
in
or
jno
mov
or
jg
or
mov
lret
insb
pop
frstor
int
stos
xchg
sbb
jl
out
fwait
and
adc
into
adc
push
cmp
loope
andb
sub
ret
orl
aaa
jge
dec
cli
jne
sub
pop
xchg
jl
dec
inc
in
nop
in
sub
cmp
sbb
inc
cs
jns
dec
or
orl
push
imul
sbb
mov
xor
test
call
jmp
mov
lret
push
je
and
push
dec
inc
inc
xchg
leave
rcrl
cli
xchg
shrl
dec
lods
sahf
xor
and
and
sbb
aam
jecxz
pop
lea
push
xchg
icebp
movsb
cmp
add
sarl
jmp
stos
xchg
out
dec
out
inc
je
adc
roll
cmp
jne
dec
sbb
add
addb
push
cmp
movsb
cltd
out
xor
leave
push
adc
lock
jmp
or
mov
in
dec
hlt
adc
xchg
fldl2e
inc
loope
inc
sub
int
push
aaa
or
sbb
rcll
xchg
cmp
orl
add
pop
and
push
sar
mov
inc
dec
xchg
push
pusha
xor
pop
or
add
jbe
xor
and
stos
mov
push
cmpl
rcll
jle
adc
or
jmp
dec
dec
aad
int
inc
cltd
arpl
ja
or
xchg
cmp
jle
adc
xchg
xor
mov
jle
adc
push
idivl
or
add
ret
jecxz
mov
aaa
fwait
enter
aam
mov
pop
out
fisttpll
jl
fldl
pop
loope
xchg
mov
pop
mov
insb
imul
mov
push
cmp
negb
push
sub
jno
xchg
or
mov
pop
dec
mov
add
in
mov
jae
cmc
cld
pop
adc
cmp
lea
lret
nop
hlt
xlat
mov
into
cmp
mov
clc
push
pop
iret
xor
loopne
sub
xor
push
in
stc
repz
mov
or
into
or
call
rcrl
jmp
mov
xchg
les
jns
js
adc
push
push
andl
inc
pop
push
data16
out
or
xchg
mov
icebp
cmp
push
push
adc
mov
xchg
adc
push
dec
ja
mov
js
popf
aad
addr16
pop
fistl
pusha
lcall
sub
int
imul
faddl
iret
pop
gs
cli
enter
sub
out
xor
jns
imul
loope
jge
mov
pusha
jecxz
arpl
sub
lock
mov
pop
mov
mov
dec
and
adc
insb
in
fnop
inc
cmpsl
ret
dec
addr16
mov
mov
pop
enter
sbb
daa
jbe
loopne
in
pop
imul
push
test
inc
or
jno
scas
sub
sub
daa
lcall
cld
fistps
jp
add
mov
lock
rolb
inc
mov
test
mov
outsb
lcall
mov
js
jne
jne
cli
fldl
aas
test
fildl
lods
test
das
sub
lcall
adc
jo
adc
mov
and
lea
sub
lds
lahf
sub
outsb
jae
pop
cmpsl
mov
div
lret
sbb
mov
loop
jg
adc
sahf
sub
in
inc
addr16
popf
fwait
popf
mov
out
sub
mov
nop
cs
xorl
xor
and
data16
and
and
in
clc
adc
in
mov
adc
xchg
push
int
inc
out
repz
js
popa
push
xchg
mov
idivl
mov
mov
mov
dec
scas
push
loope
mov
mov
aas
imul
lret
sahf
lds
lds
movb
xchg
inc
shrl
test
dec
add
dec
lock
mov
jmp
push
dec
into
adc
rclb
mov
nop
loope
cmp
mov
outsb
lods
lods
bound
or
cmp
je
push
xchg
rorb
adc
mov
and
je
inc
jg
dec
dec
jae
das
mov
test
mov
out
es
sbb
sub
xor
sub
int3
push
lret
dec
xchg
fiadds
aad
into
jo
mov
cwtl
xchg
adc
fidivl
sub
ret
pushf
repz
jg
lods
xor
dec
out
into
mov
mov
cwtl
mov
cmp
daa
lcall
or
pop
jnp
adc
cmp
jecxz
cmp
notl
add
push
cwtl
push
aas
pop
push
and
xor
push
mov
lods
fnsave
lea
cltd
nop
fnstenv
lds
cmpsl
xchg
pop
fwait
jae
data16
sub
sbb
xchg
mov
sbb
and
ljmp
or
cmpsl
outsb
out
jl
mov
mov
ljmp
add
test
sub
pop
lods
daa
jo
mov
xchg
int
jae
mov
decb
pop
fldenv
jmp
and
ficoms
push
loope
pop
aad
push
rcl
call
mov
inc
mov
stos
gs
mov
add
cmp
push
out
push
fcoml
sub
arpl
xchg
sbb
hlt
scas
mov
sub
jmp
cmp
sbb
jmp
add
in
mov
xor
jmp
mov
ret
out
jmp
bound
out
in
aas
push
jns
xchg
cmp
test
jbe
nop
adc
das
out
lcall
dec
xchg
inc
les
inc
in
sbb
sbb
or
inc
pop
mov
popf
mov
mov
dec
add
and
hlt
mov
cwtl
push
addr16
ds
or
inc
jnp
xlat
cmc
xchg
in
lret
cmpsl
stos
sbb
imul
mov
addl
gs
and
jl
int
mov
rolb
lds
roll
stc
sbb
add
lock
push
ret
push
ljmp
repnz
xchg
mov
xor
push
ret
addl
call
jp
jb
rcl
push
arpl
shll
je
mov
ds
or
mov
mov
movsl
jae
stos
scas
xchg
adc
jae
mov
dec
sbb
es
repnz
dec
sti
or
lahf
and
addb
cwtl
pop
ret
add
out
sbb
jo
ljmp
popf
pop
jnp
fsubp
sbb
lahf
insb
jbe
cmpsb
ficoms
xchg
xchg
dec
imull
jg
or
add
adc
inc
popa
call
data16
popa
sub
inc
mov
fidivs
jne
mov
push
rcrl
push
mov
cmc
fdivl
mov
mov
adcb
lods
or
cmpsl
popf
push
inc
iret
xor
add
pop
cmovbe
push
xchg
shr
xor
mov
jae
add
sarl
xchg
and
xchg
jnp
fwait
sbb
push
call
int
pop
sub
adc
scas
add
jle
xchg
int3
sub
push
cmp
lods
inc
dec
clc
subb
cmp
or
or
fildll
loop
pop
les
stc
filds
cmp
out
push
pmullw
loopne
xor
xchg
lret
cmpsl
enter
jg
bound
adcl
mov
fisubl
jno
inc
jnp
sub
movsb
pusha
fisttpll
jne
std
ret
hlt
inc
into
mov
int
pop
mov
outsl
push
mov
push
inc
setge
fstpt
scas
popa
and
dec
out
iret
shlb
jno
dec
jg
pop
xchg
mov
cs
push
dec
mov
cmp
test
push
jmp
ffreep
cmp
push
std
in
mov
mov
insl
fistpl
js
divb
lret
xor
sbb
pop
roll
xchg
repz
inc
imul
sbb
dec
js
mov
jl
movsl
add
xor
cmpsl
loopne
mov
loope
sti
mov
xor
lods
sub
add
into
sub
outsl
push
dec
fstp
inc
cmp
cmp
loopne
push
pop
adc
jbe
mov
push
jmp
imul
jl
sub
dec
xor
xchg
lods
leave
movsl
mov
les
or
cmpsb
push
stos
jecxz
jne
jmp
sti
in
bound
mov
adc
imull
jmp
shlb
mov
xchg
sub
std
push
xchg
inc
xor
incl
and
push
mov
or
pop
dec
xor
popf
jne
jae
stc
sbb
lock
pop
jl
jnp
or
out
push
in
adc
xchg
cmp
arpl
or
sbb
ljmp
jo
mov
pop
adc
std
mov
lret
ja
sub
jns
jg
or
pop
jnp
test
div
dec
push
aam
leave
xchg
test
jb
mov
inc
mov
sbb
inc
insb
icebp
lret
sub
in
pop
in
and
xor
mul
lock
call
adc
mov
lcall
aaa
insl
aam
ljmp
jp
or
mov
xor
rcr
push
rolb
lahf
dec
or
mov
and
ret
loope
and
add
filds
mov
movsl
xchg
mov
jp
mov
imul
clc
fs
sub
pop
adc
xlat
jmp
arpl
adc
das
jnp
cmpsl
testl
mov
mov
push
dec
push
push
pop
and
push
stos
pop
stc
sub
fs
xchg
mov
jbe
jg
out
mov
cmp
aaa
push
inc
out
rorb
cltd
mov
shlb
sub
inc
push
imul
pop
sbb
gs
stos
mov
repz
inc
mov
lds
adc
cs
add
mov
out
jo
jmp
jg
pop
sbb
ljmp
xor
mov
inc
mov
in
ja
adc
inc
inc
dec
add
iret
inc
call
jnp
std
call
jns
or
test
addr16
adc
ret
inc
pop
mov
and
pop
xchg
dec
jno
pop
xchg
xor
outsb
xchg
fisubrl
adc
fwait
cltd
int3
dec
repz
or
shrl
xlat
pop
lahf
outsl
ret
in
jle
adc
fldcw
push
adc
xchg
imul
adc
mov
mov
mov
push
test
push
mov
cmp
sub
sub
or
mov
add
sbb
pop
or
test
sbb
adc
cmp
push
repnz
test
cltd
shrl
jecxz
cmpsb
sbbb
data16
cmp
push
outsb
pop
xor
or
daa
ret
je
adc
pop
inc
clc
movsb
mov
mov
out
push
sub
sbb
dec
xchg
jae
lahf
loopne
movsl
add
les
add
add
ret
mov
mov
test
shl
rolb
popa
xor
push
loop
inc
sub
in
fisubs
adc
xchg
pushf
in
div
outsb
pop
sbb
fsubl
push
mov
out
std
mov
insl
mov
cmc
push
cli
loopne
pop
fwait
arpl
mov
test
lods
divb
fldcw
inc
add
inc
test
ja
mov
aas
push
jb
mov
cmp
adc
orl
mov
insb
xchg
jmp
sub
dec
mov
jae
mov
loopne
xor
cs
xchg
or
cmc
inc
aas
xrelease
xchg
push
push
arpl
aam
jge
sti
jnp
dec
out
add
xor
add
pop
dec
pop
jo
adc
outsl
mov
mov
inc
ror
lret
pusha
add
add
or
fwait
cmpsb
stc
push
xchg
adc
sbb
xchg
sahf
xchg
mov
cld
pop
sub
push
inc
lret
in
inc
push
out
sbb
fnstenv
push
lcall
push
lods
mov
stc
cmp
xchg
iret
notl
movsl
lahf
lcall
xor
mov
push
mov
ror
add
into
loope
mov
cmp
or
sub
mov
js
nop
repz
push
test
mov
movsb
insl
popf
pushf
es
aas
xlat
sar
daa
fmulp
pop
test
stos
inc
mov
movsl
mov
test
fcoml
inc
sbb
cmp
call
cmpsb
call
sbb
cmpsl
mov
adcl
mov
sub
ret
and
popa
clc
sbb
jb
inc
push
mov
shl
in
xchg
dec
mov
and
xchg
pushl
lcall
or
jne
test
jo
outsb
cmc
enter
in
bound
or
fisubrl
hlt
mov
cmpl
adc
data16
push
test
xchg
dec
xchg
mov
push
ds
adc
daa
mov
ljmp
mov
sub
jo
lods
pushf
test
mul
jge
std
lea
movsl
ss
in
jl
lcall
fstpl
dec
ja
fsubr
orb
fisubl
mov
movsb
out
call
and
xchg
cli
cmp
cmp
push
mov
xchg
xchg
ret
mov
test
pusha
rol
shrb
cmpsl
push
out
in
shrb
cmp
mov
push
into
mov
sbb
cmp
inc
rcrl
xor
cmpsb
je
cwtl
stc
test
xor
jno
sub
fsub
sbb
sbb
out
jno
aad
mov
jo
mov
ljmp
sbb
addr16
jns
push
pop
ffree
test
test
jns
pop
cmpsb
roll
jge
ss
test
push
das
xchg
and
std
sti
xchg
movsl
and
push
lock
inc
jg
push
mov
cmp
xchg
imul
mov
mov
jnp
cmp
loope
push
inc
int
cmp
and
data16
into
les
jecxz
jecxz
dec
fbstp
push
icebp
cmpsb
add
xchg
add
inc
adc
lods
xor
scas
stc
jl
js
xchg
and
adc
movsb
adc
arpl
iret
lret
aam
xchg
fidivs
jae
nop
sbb
sahf
testb
push
scas
jle
fwait
int
jb
jmp
data16
xchg
adc
mov
push
add
fstpl
mov
push
xchg
out
iret
idivl
xor
in
push
dec
inc
scas
fdivr
xor
push
stc
and
xchg
lods
dec
mov
adc
insl
cmp
fidivs
push
cltd
and
sub
inc
cmpsl
xchg
xchg
xor
jmp
push
xchg
jmp
arpl
push
rcrl
xchg
pop
sub
repz
and
maxps
imul
faddl
addl
xchg
int
aad
scas
push
lods
test
filds
xor
mov
fwait
or
jo
loope
xor
pop
jne
cmpl
fwait
arpl
or
add
orb
pop
mov
popa
jmp
mov
cltd
mov
mov
or
cmp
das
sbb
dec
leave
xchg
lock
in
and
add
push
out
popf
adc
lret
stos
jl
sti
inc
xchg
pop
std
dec
mov
gs
mov
pusha
insl
sub
mov
mov
mov
adc
aaa
jle
cmp
or
rcrb
push
scas
mov
jne
sti
rorl
pop
cmovb
dec
jne
dec
xchg
adc
les
xchg
lods
shr
imul
adc
aam
shll
repnz
pop
mov
add
sub
rclb
xchg
xchg
aam
inc
stos
leave
fstl
xchg
aas
in
mov
mov
nop
lea
lods
pop
imul
je
and
out
lahf
xchg
or
idivl
mov
int3
sbb
arpl
sar
ficoml
and
push
add
push
lock
movsl
pop
sub
push
movsl
sub
lret
fs
or
mov
dec
sbb
adc
and
mov
cwtl
fmulp
sbb
add
in
jge
pop
icebp
inc
dec
jns
mov
mov
loop
pop
or
xor
cmc
lea
imul
stos
jmp
data16
inc
shlb
inc
hlt
mov
and
mov
mov
cmp
jb
xchg
jmp
xlat
fistpl
xorb
mov
out
cmpsl
subl
xchg
sub
loope
sub
negl
aam
mov
dec
ja
add
cwtl
sbb
mov
nop
or
or
stc
mov
loopne
in
iret
push
and
fbstp
jae
adc
add
inc
int
fsubrs
push
ja
gs
sub
adc
adc
outsb
jmp
data16
dec
mov
std
insl
mov
add
mov
xor
movsb
pop
dec
popa
and
stos
dec
push
xchg
ja
aad
aas
popa
fisttpll
test
test
cmp
fldl
lret
dec
adc
lock
xor
jg
ljmp
pop
jge
jge
icebp
test
add
cs
leave
xor
imul
dec
pop
nop
jne
fimuls
clc
dec
pop
jo
jnp
xchg
cs
outsb
test
mov
mov
lods
add
jne
fwait
insl
adc
xor
cmp
mov
xchg
or
xor
jno
cmp
and
or
jl
sbb
xlat
repnz
mov
jo
dec
shrl
add
ss
pop
and
outsb
adc
hlt
push
sub
popf
xchg
inc
pop
outsb
std
inc
mov
loope
ja
xor
jecxz
sub
xor
aam
loopne
leave
ret
test
pop
mov
pop
push
sbb
hlt
mov
sbb
ss
bound
cmp
sbb
mov
dec
lret
adc
into
pop
sbb
add
pop
xor
dec
lcall
mov
shrl
aaa
jmp
pop
sub
dec
push
gs
out
jle
stos
test
lret
das
mov
and
xor
dec
in
fisttpl
jns
xchg
push
je
jns
xor
int3
mov
and
in
sahf
fbld
jg
add
loopne
pop
mov
ja
fwait
call
addr16
inc
jns
sub
popa
or
popa
pop
out
int
mov
subl
scas
lcall
outsb
mov
pop
shrb
jmp
sub
imul
add
lods
dec
sub
sarb
repz
lret
jmp
or
adc
loop
mov
fimull
dec
mov
clc
pusha
push
mov
xchg
sbb
cmp
push
mov
std
std
mov
rcrb
or
or
outsb
imul
sbb
gs
dec
jle
pop
in
mov
not
add
faddl
sahf
ret
ficoml
ret
dec
dec
addr16
movsb
int
scas
dec
xchg
mov
xor
dec
out
das
dec
ret
hlt
mov
push
lods
icebp
inc
and
cmp
adc
or
loope
je
fsubrs
pop
andl
scas
addb
cmp
pop
sbb
mov
or
mov
push
scas
imul
cwtl
imul
sub
orl
bound
iret
mov
lret
dec
adc
push
dec
mov
and
in
mov
setns
pushf
pop
ret
mov
mov
into
mov
scas
aam
mov
push
xlat
stos
addr16
mov
movsb
jl
or
lret
inc
cs
hlt
xchg
xchg
aas
lods
testb
push
mov
push
repz
dec
icebp
push
sti
push
sub
loopne
push
lods
mov
xchg
cwtl
mull
pop
mov
test
lds
pop
adc
mov
pop
xor
jo
adc
out
push
fwait
rcrl
xchg
pusha
mov
and
pop
mov
inc
cmpsl
test
jbe
or
fwait
out
push
popf
insb
jne
rorl
add
or
jecxz
jl
aaa
daa
add
scas
mov
sahf
aaa
loopne
cltd
lods
in
add
movsl
std
or
test
or
xlat
loopne
mov
sub
es
rorl
popa
scas
arpl
testl
push
sub
sbb
dec
sub
int3
lahf
sbb
mov
mov
jne
loope
push
ja
xor
sbb
inc
mov
dec
or
sub
sub
or
sbb
push
shl
movsl
mov
push
mov
jb
inc
insl
jb
out
and
lret
arpl
cmp
imul
pushf
mov
ljmp
sub
dec
rorl
jno
in
dec
dec
dec
and
xor
sbb
sub
add
arpl
int
jmp
mov
mov
rcrb
out
inc
sbb
jns
rorb
sub
xchg
xlat
mov
and
out
in
jo
mov
jae
cwtl
cs
sbb
jecxz
push
icebp
adc
es
mov
shrb
sbb
outsb
or
push
sub
add
jnp
ficompl
mov
int
repnz
sbb
out
aam
add
push
push
add
outsl
push
aad
loopne
out
adc
aas
imul
sarl
mov
adc
js
fbld
in
pop
inc
cmp
pop
jbe
idivl
pop
mov
cld
inc
sbbb
loop
pusha
dec
mov
inc
sarb
sahf
std
pop
and
in
int3
sub
stos
push
test
je
xor
mov
loop
outsl
push
call
popf
and
imul
mov
inc
adc
jo
add
test
les
iret
jp
pop
sti
push
es
pop
jge
sub
addr16
jecxz
or
jne
pop
jp
jmp
stos
dec
jne
xchg
sarb
mov
out
xor
inc
jbe
arpl
in
sbb
sbb
inc
pushf
mov
cmc
cmp
mov
sub
pop
ficomps
xor
imul
jg
lcall
push
xor
push
cmp
jge
shrb
jne
pusha
and
rol
push
rcrb
add
jb
in
ljmp
lret
xor
jbe
cltd
and
inc
add
sub
jecxz
add
cmpb
xchg
or
push
inc
ret
lret
dec
mov
push
out
cmpb
loopne
cmp
gs
lahf
lods
fldcw
stc
jp
fidivs
xchg
mov
in
testb
outsl
mov
cmc
orb
xchg
fcmovne
hlt
push
mov
mov
std
imul
iret
mov
sbb
cmc
xor
or
mov
adc
xchg
mov
sub
arpl
bound
test
getsec
ljmp
or
xor
pop
daa
cmp
std
mov
mov
call
addr16
fiaddl
movsl
lret
cmp
add
cld
or
sbb
add
imulb
fdivrp
cld
mov
xchg
or
sub
aam
lock
insl
mov
mov
bound
adc
xchg
and
enter
xchg
sarl
sbb
insb
in
enter
jge
adc
cmpsb
in
jg
je
test
sbb
cmc
push
cmp
int3
mov
inc
cmpsb
rcl
push
push
add
sbb
test
add
addr16
cmp
andb
xorb
cli
aaa
xor
int3
repz
mov
fidivl
loop
inc
fbld
lret
clc
stc
ret
clc
fisubl
dec
out
adcb
mov
xchg
xchg
icebp
xor
pop
orb
fldenv
ret
ss
aas
jno
bound
popa
inc
add
cmp
cmp
or
sub
bswap
and
jb
push
std
sbb
ljmp
hlt
jae
js
jg
int
cli
aas
jo
mov
loopne
in
xchg
orb
xor
push
pop
int3
or
nop
jns
rclb
test
mov
adc
loopne
push
pop
loop
scas
insl
aas
mov
push
aas
scas
adc
testb
lahf
lret
cwtl
inc
xor
cld
scas
out
dec
add
pop
mov
mov
iret
inc
arpl
cld
or
inc
xchg
adc
outsl
mov
xchg
cmpsb
sbb
clc
adc
js
imul
and
in
mov
mov
xor
cmpsb
gs
inc
in
cmp
movsb
mov
add
test
lds
cmp
and
push
dec
add
mov
mov
xchg
sbb
mov
sub
pop
mov
mov
cli
shl
lcall
mov
adc
pop
sub
mov
adc
adc
push
xchg
out
scas
jp
adc
cltd
push
mov
cmp
inc
cmpsl
push
flds
jmp
pop
mov
add
repz
push
jl
mov
cwtl
add
pop
cli
and
push
dec
mov
mov
or
fimuls
fsubrl
imul
out
sub
cmpsb
pop
lret
hlt
call
sbb
repnz
loopne
sbb
xor
add
inc
xor
scas
stos
push
mov
xor
insb
aad
push
add
dec
sub
lods
dec
in
cmp
mov
dec
xor
leave
xchg
jne
rcr
dec
and
or
loopne
dec
out
jmp
popf
pop
out
call
stos
loopne
movsbl
std
xchg
xor
jns
cmpsl
jae
mov
out
or
mov
adc
cmp
adc
cmc
mov
push
lcall
sbb
mov
sub
out
sbb
mov
sub
addr16
sbb
mov
dec
adc
ljmp
and
push
jne
hlt
fs
pushf
xchg
fdivs
rcll
mov
mov
sbb
push
mov
dec
shrl
push
outsl
sbb
and
adcl
mov
dec
xchg
xchg
xchg
xor
cmpsb
and
push
shll
mov
in
add
popa
test
cmp
xor
shlb
ret
jge
push
rorb
dec
aaa
mov
or
loopne
sti
adc
push
addr16
mov
sbb
das
in
gs
and
cmp
mov
mov
out
dec
adc
mov
cmp
cmp
out
dec
fstps
mov
mov
sbb
stos
inc
les
push
inc
sbb
sbb
xchg
mov
cmp
lret
les
ret
mov
and
fwait
pop
sub
std
dec
xor
add
push
outsl
mov
jp
or
sbbb
pop
in
cltd
std
insl
inc
aam
test
ror
jbe
cmpsb
test
lcall
lods
cld
maxps
repz
lds
add
sub
mov
adc
lds
cmc
mov
lea
dec
movsl
mov
in
jns
mov
mov
pop
icebp
adc
sbb
xchg
mov
fsubrs
lods
incl
jno
lock
xchg
inc
or
stc
hlt
rcr
divb
jae
clc
inc
jl
movb
in
cmc
out
cmpl
movsb
mov
mov
lods
mov
ret
xchg
mov
push
jne
iret
xor
test
rolb
subl
out
sbb
sub
mov
mov
adc
adc
iret
mov
sub
pop
cmp
add
fldz
mov
or
mov
mov
stc
push
shlb
cmp
inc
cmp
and
leave
xchg
mov
jb
add
mov
mov
or
movsb
or
aam
mov
shlb
dec
leave
test
pusha
jnp
lea
pushf
mov
sub
mov
jb
cmp
mov
xchg
jl
imul
cmp
mov
addr16
xchg
stc
sub
sub
jl
roll
ffree
push
enter
cld
fisubrl
jo
lret
in
and
popf
into
inc
xchg
mov
pushf
push
jecxz
les
aam
mov
mov
dec
das
movsl
pusha
aaa
fmuls
lock
cmp
jge
cwtl
or
or
jge
cwtl
inc
and
xchg
pop
xchg
pop
pusha
xor
dec
and
sbb
mov
jo
imul
leave
sub
sub
push
push
movsb
dec
inc
sbb
xor
in
out
adc
mov
fimull
cmpsb
sub
mov
mov
rolb
int3
push
push
enter
jl
pop
sub
int3
and
jl
or
cmpsb
int
inc
jbe
scas
dec
mov
nop
in
leave
ret
aaa
lock
repnz
out
icebp
les
jp
sub
mov
add
scas
jecxz
inc
divl
adc
es
ja
xchg
andl
jnp
jle
outsl
pop
sub
icebp
inc
fnstenv
out
repnz
lret
std
cmp
imul
decl
add
stos
cld
test
int3
jecxz
into
push
stos
mov
push
bound
ficoms
sub
xor
or
daa
arpl
fnstenv
mov
sub
rolb
popf
dec
xchg
enter
push
stc
sti
push
mov
aas
mov
icebp
jae
jl
cmp
jne
shrl
or
pop
icebp
pop
bound
hlt
fwait
lea
std
mov
ficompl
mov
popa
iret
mov
sub
scas
and
and
xor
jmp
ret
repz
xchg
addr16
lods
add
mov
sbb
pushl
lds
lock
loopne
daa
sub
pop
repnz
or
sbb
push
scas
into
into
jp
push
test
push
cmp
mov
pop
mov
lods
ss
dec
inc
out
or
popf
push
rsm
pop
lods
sbb
cli
rorb
and
fcoms
mov
stos
cmp
rcrb
xchg
push
jg
adc
pop
mov
subb
or
sahf
loope
mov
mov
outsl
mov
js
sub
and
pop
std
fxch
mov
clc
xchg
fmul
xchg
push
add
aas
jecxz
les
popa
sub
test
lcall
pop
stc
scas
insl
ret
cmp
arpl
push
xchg
aam
xor
push
popf
mov
or
and
dec
ror
add
sbb
inc
popf
adc
jno
adc
cs
add
lret
test
lahf
jns
pop
cmc
push
dec
icebp
popa
mov
sub
adc
mov
cmc
adc
in
daa
pop
xchg
jns
jns
mov
adc
pop
das
iret
mov
insl
hlt
js
dec
pop
daa
xchg
fidivrl
mov
mov
mov
lea
add
mov
or
sbb
push
adc
aam
insb
icebp
adc
pop
cmp
and
cwtl
in
mov
jno
xor
mov
out
out
cli
sub
sbb
lret
ljmp
mov
xor
sarb
in
xorb
cmp
jne
int
inc
inc
stc
shrb
loope
inc
cmp
insb
mov
mov
mov
cmp
shrb
out
mov
faddl
xchg
ficompl
mov
rorb
cmpl
push
jae
sti
pop
cld
orl
xor
adcb
or
push
mov
mov
nop
aas
mov
or
push
add
mov
adc
andl
popf
fcompl
xchg
pop
fcmovbe
mov
push
hlt
jns
stc
jmp
ljmp
dec
daa
mov
add
jle
mov
cmp
dec
jbe
pop
lods
and
cmp
jne
insb
pop
pop
rorl
out
stos
scas
dec
shll
mov
xor
mov
mov
mov
add
or
jo
pop
sub
mov
xchg
aaa
push
add
push
xchg
sarb
mov
sub
jmp
test
les
push
data16
movhlps
adc
and
add
sbb
in
push
and
pusha
sbb
push
jnp
inc
lods
into
jmp
ds
push
jl
dec
push
ja
jns
push
jnp
call
sub
and
jecxz
jae
push
lods
mov
adc
xor
dec
es
push
add
nop
xchg
pop
xchg
dec
rcrb
sar
scas
jno
out
mov
loopne
fcomps
and
out
jle
dec
lods
scas
sbb
aas
loopne
cli
mull
aam
jae
aaa
push
fisttps
mov
out
cmp
bnd
cmpsb
and
cmp
xor
aad
ret
sbbl
testl
mov
outsw
ds
inc
mov
pusha
repz
mov
sub
mov
inc
inc
ss
aaa
fsubrl
or
or
or
or
outsl
imul
dec
movsl
inc
xchg
aas
dec
cmp
cmp
fnstenv
loopne
sub
scas
rcl
jmp
jbe,pt
dec
dec
sub
sbb
pop
xchg
inc
push
jno
aas
mov
out
pop
mov
xchg
scas
jb
inc
hlt
and
arpl
add
sbb
ret
out
xchg
or
mov
xchg
subl
repz
cs
jle
rorb
mov
mov
cmpsl
ret
mov
lea
push
shll
mov
aam
icebp
rep
test
pop
pop
mov
fucom
sbbl
add
sbb
xor
pop
cli
cltd
test
imul
insl
das
cmp
rclb
call
cmp
xchg
pop
into
icebp
inc
pop
lds
cmp
push
mov
pop
lret
push
out
fcoml
fwait
push
stc
cmp
es
sbb
pop
cs
int3
fdivl
out
push
jb
std
mov
adc
or
jg
les
adc
vandps
pop
add
xchg
push
jne
pop
xchg
cltd
data16
mov
inc
cli
adc
add
mov
arpl
std
mov
dec
cmpsl
push
adc
xor
jp
loop
and
icebp
cmp
add
bound
add
fimull
dec
xchg
mov
cmp
loopne
hlt
xchg
daa
push
addr16
outsl
mov
out
jae
or
lret
dec
adc
sbb
jl
rcl
dec
mov
dec
iret
jns
gs
xor
mov
enter
jo
repz
addr16
cmp
inc
xlat
ret
lods
sti
jg
ds
rcrb
les
arpl
fsubr
dec
out
cmp
xchg
cmp
jb
mov
lods
sub
mov
add
and
push
cs
pushf
xor
pop
cmpsb
ja
push
mov
sbb
mov
lahf
adc
add
les
out
mov
aaa
jae
in
jmp
in
and
mov
sahf
fildll
jnp
push
dec
push
mov
inc
mov
shll
rol
sub
mov
sub
cmpsb
inc
inc
int3
stc
xor
pop
sti
fidivl
mov
aam
mov
mov
jmp
stos
sub
test
outsb
pop
or
mov
and
dec
jb
xchg
pop
push
push
or
sub
sbb
xchg
int3
mov
lahf
or
add
lods
pmulhw
leave
adcb
jno
add
push
xchg
pop
std
pop
inc
outsb
repz
jo
loop
insb
mov
sub
cwtl
mov
gs
push
mov
shlb
jae
hlt
mov
cmp
or
mov
pop
sub
mov
inc
adc
in
adc
fsubrs
ret
outsb
dec
xchg
fscale
adc
fildll
jbe
push
push
xor
mov
fimull
ljmp
mov
cmpsl
mov
adc
lcall
sbb
sti
add
mov
push
imul
and
inc
outsb
jecxz
jle
daa
fdivs
popa
in
push
call
andb
es
ret
mov
outsb
xlat
pop
icebp
dec
xchg
into
pop
nop
fs
mov
cld
pop
mov
repz
ljmp
and
push
cmp
dec
test
pop
add
mov
dec
in
push
daa
mov
dec
xor
test
aam
add
mov
jns
movsl
sub
and
in
rolb
popa
aas
mov
or
push
gs
mov
xor
ljmp
inc
lret
lds
insb
push
push
sbbb
or
lds
dec
call
add
mov
nop
out
or
jnp
loopne
jno
into
add
adc
dec
in
mov
addr16
jb
adc
xchg
fdivl
movsl
movsl
fsubr
out
push
sub
dec
ja
xchg
je
pop
outsb
sbb
pusha
jmp
pop
cmovae
sbb
cli
shlb
pop
movsb
daa
mov
xor
out
dec
inc
adc
test
ss
arpl
inc
ds
in
psllq
pusha
mov
cwtl
mov
or
dec
lock
cmp
mov
into
push
and
das
sub
mov
jno
add
inc
add
stos
mov
ss
xor
in
mov
cltd
andb
push
inc
adc
outsl
dec
cmp
mov
rcrl
scas
mov
aas
push
orl
sub
pop
jo
jnp
mov
outsl
push
or
cltd
imul
cmc
push
repnz
enter
out
fwait
lods
cmpsb
sub
imul
pop
fmull
cmp
mov
and
push
add
jnp
jae
sbb
int3
std
cmpsl
movl
jecxz
sti
cwtl
sub
xor
outsl
jae
or
inc
in
jne
sbb
push
scas
sub
mov
mov
pop
xchg
adc
pop
push
daa
test
fdivl
dec
nop
imul
aam
cmp
popf
fstps
dec
out
test
pop
les
test
xchg
adc
fstpt
cwtl
repz
jae
fmuls
lea
sbb
mov
pop
repnz
inc
mov
jle
cmp
cs
cwtl
enter
in
jnp
or
dec
outsb
add
jle
ror
or
xor
dec
cltd
lahf
mov
in
sub
in
xchg
mov
jp
xchg
cmp
jo
jl
jbe
es
jns
popa
inc
int
insw
mov
lods
add
mov
cmp
sub
jbe
iret
test
pop
add
xor
jl
push
and
adc
fstps
mov
lock
dec
mov
mov
and
scas
cmc
sub
aaa
push
jno
ljmp
addr16
repnz
pusha
mov
ljmp
lcall
jns
das
mov
scas
insb
fs
in
scas
pop
lods
dec
inc
dec
cs
xchg
or
enter
pop
and
or
es
cmp
lds
cmp
outsl
mov
sbb
mov
inc
shll
rcl
jle
fldcw
adc
lret
arpl
mov
ds
dec
lret
outsb
pop
push
inc
cmp
lea
mov
out
fs
and
adc
nop
jmp
sub
pop
fsubr
test
loop
pusha
addl
les
mov
cli
pop
mov
mov
cmp
test
pop
fbld
imul
nop
je
enter
sub
lods
jg
sahf
negl
loope
and
sahf
int3
mov
sub
fsubs
mov
rol
imul
add
pop
dec
call
dec
push
mov
ret
push
leave
jns
dec
cwtl
mov
xchg
and
xchg
andb
int
insb
pop
mov
ret
shlb
dec
in
adc
xor
nop
cltd
mov
outsl
jle
setl
jmp
sbb
sub
fsts
popa
push
cwtl
xchg
xchg
xchg
outsb
lods
stos
orb
sub
cltd
mov
int
mov
imul
fs
adc
add
jmp
repz
aam
sbbb
jp
daa
out
lods
push
lds
sub
rcrl
xchg
shrb
int
xor
xchg
out
imul
mov
hlt
scas
cs
mov
fld
aas
push
jb
pop
enter
fnstenv
xor
daa
out
jbe
mov
sub
je
xchg
xorb
cli
mov
imulb
mov
inc
loopne
mov
push
filds
jge
lods
sub
xor
test
je
fsubrs
and
arpl
jmp
cmpsb
fwait
push
jmp
mov
pushf
or
icebp
dec
inc
xor
pop
fs
sbb
lret
sub
sbb
fsubr
jmp
fbld
lcall
ret
xor
xor
jge
adc
lahf
icebp
test
shrb
lds
pop
mov
lea
add
in
jns
int3
dec
xchg
pop
sbb
lcall
dec
or
push
xchg
ljmp
imul
dec
insb
sub
mov
mov
psrld
in
movsl
lods
cmpsb
outsl
inc
nop
push
push
daa
fimull
inc
out
push
push
inc
jne
fnsave
insl
cmp
icebp
push
ds
push
sarb
jge
stos
pop
cmp
repz
xor
popf
xorb
hlt
loope
cmpsb
cld
dec
cmp
cmpsl
sbb
fdivrs
mov
xor
orl
cmp
stos
lahf
jmp
jmp
fs
cmp
xchg
mov
aad
xchg
dec
mov
popf
xchg
outsl
ja
sarl
enter
test
subb
daa
adc
pop
or
inc
jl
or
jnp
cli
shl
mov
adc
dec
inc
cmp
mov
cld
mov
dec
scas
jo
aad
setno
movsl
aaa
xchg
or
addr16
outsb
sti
pushf
cld
xchg
xchg
lock
stos
pop
out
jo
rcr
lea
loopne
sbb
cli
mov
lods
scas
dec
or
jecxz
mov
inc
or
cmp
adc
mov
add
adc
pusha
fsubr
adc
fnstcw
jle
or
aas
in
imul
and
rorl
jne
inc
xchg
mov
clc
xor
mov
add
imul
fwait
sahf
xchg
cmp
mov
ljmp
mov
fistl
push
cmpl
pop
pusha
aad
nop
jns
mov
jno
sahf
loope
into
stos
cmp
popa
jmp
xchg
dec
mov
adc
loopne
leave
or
jns
popa
enter
jp
dec
hlt
pop
mov
mov
aas
inc
mov
outsl
in
lods
or
mov
xchg
into
sbb
xchg
arpl
push
or
movzwl
mov
jl
pop
xchg
out
in
adc
fidivrl
lods
jmp
nop
clc
int
sub
loopne
push
in
mov
push
inc
cmp
inc
mov
and
cmp
mov
inc
mov
insl
cmp
add
pusha
push
loop
xchg
ret
sbb
dec
jecxz
fwait
cmp
mov
inc
and
mov
mov
imul
inc
ljmp
jns
arpl
and
or
outsl
push
jnp
fidivrl
inc
jne
rcll
movsb
adc
cwtl
or
mov
mov
xchg
jb
or
stos
pushf
mov
lea
pop
and
mov
cmp
rorb
xor
add
or
mov
daa
dec
test
mov
mov
mov
inc
push
mov
pop
sbb
pop
decb
push
ja
ljmp
inc
cld
or
sbb
add
inc
cmp
jo
outsb
lds
push
and
pusha
mov
dec
push
sahf
daa
cmp
pop
imul
adc
in
mov
inc
lods
pop
out
jns
dec
sbb
xchg
pop
testl
xchg
sarb
insb
xchg
cmp
leave
pusha
jl
xor
mov
mov
test
lret
dec
jge
xchg
std
sub
outsl
xchg
fimull
int
fdivs
add
addr16
cli
and
mov
call
and
pusha
cmpsb
push
mov
lahf
imul
mov
sub
push
add
lahf
push
add
outsl
leave
cmp
fldenv
mov
and
mov
mov
cmp
and
fistl
pop
add
sbb
mov
fwait
in
ds
mov
mov
movsl
ret
in
test
fcmovu
maxps
inc
xor
popf
cmp
push
sub
xchg
sahf
jg
cmp
push
imul
aad
mov
aaa
mov
lahf
mov
in
add
add
enter
lahf
icebp
loop
fnstenv
jmp
or
das
fstpl
xlat
call
data16
movsb
cmpsl
addr16
xchg
xchg
xchg
add
gs
loope
out
ss
xchg
int
popa
pop
dec
mov
orb
lock
mov
push
scas
inc
aad
mov
push
xchg
dec
add
in
icebp
jmp
xchg
clc
scas
adc
fbstp
cwtl
cmc
les
jmp
stos
repz
loop
or
jns
sub
pop
xchg
jb
and
test
xchg
addl
dec
mov
testb
jb
jp
std
fcomi
fistpll
sbb
in
xchg
cltd
cwtl
xchg
push
pop
cwtl
mov
fnsave
push
data16
lods
aam
ret
xchg
rolb
and
inc
ss
or
push
inc
jbe
mov
pop
jp
cmp
lock
mov
xchg
cmp
xor
jns
aad
push
and
in
xor
jbe
lods
cmc
sub
pushf
lea
hlt
mov
sub
clc
pop
cmp
shl
ror
into
mov
inc
mov
sub
sub
xchg
pop
adc
popa
std
mov
mov
sub
hlt
sub
xor
lcall
jp
mov
lcall
xchg
out
lahf
out
insl
pop
xor
push
fdivs
mov
lea
aad
stc
loop
pop
push
cs
ret
popaw
xchg
les
iret
xor
std
xchg
fcoml
sub
jnp
sub
fistps
xchg
push
mov
and
cmp
sub
dec
shrb
cltd
repz
pop
mov
lea
mov
inc
mov
push
xchg
push
or
jae
dec
push
cmpsb
clc
pushf
repnz
inc
inc
out
fwait
into
in
repnz
jno
add
jecxz
addb
adc
xor
and
arpl
push
rorl
arpl
into
shr
push
sbb
shr
adc
rorl
outsl
ds
fisttpl
jp
and
push
inc
xchg
mov
mov
inc
das
and
mov
negb
push
mov
dec
jecxz
add
and
cltd
fistps
dec
cmp
inc
sbb
popf
je
jae
jp
test
lock
out
clc
shl
pushf
sub
xlat
stos
xor
fwait
push
mov
sub
arpl
rcl
add
out
sbb
enter
lcall
dec
icebp
je
jp
sbb
mov
ficompl
aas
pop
and
icebp
fadd
mov
xchg
jne
scas
adc
inc
inc
inc
xlat
push
or
mov
mov
push
arpl
jle
jnp
fisttps
jo
adc
dec
or
imul
jle
jp
push
loopne
sti
addr16
adc
and
bound
mov
sbb
mov
test
imul
push
lahf
xchg
ret
lock
jg
xor
pop
into
inc
pop
psubusw
daa
push
dec
sbb
cld
insl
add
lret
daa
jmp
frstpm(287
push
add
xor
adc
jp
inc
or
arpl
clc
pop
call
lahf
std
shll
mov
pop
popa
lret
ja
sbbb
movsb
push
cwtl
mov
sub
cmp
jl
out
fimuls
jp
fisubrs
push
xchg
scas
ds
cmpsl
test
scas
inc
jae
cltd
jbe
test
xchg
mov
inc
xlat
mov
test
push
stc
fcomps
pop
xor
lcall
ss
and
mov
mov
sbb
into
push
fstpt
dec
nop
es
leave
lret
adc
out
int3
xlat
imul
scas
in
push
mov
jo
popf
xchg
jne
in
dec
push
dec
mov
cmp
xor
daa
arpl
aad
cmp
jo
bound
lock
mov
scas
xor
push
pop
jne
hlt
sbb
loope
pusha
cs
push
pop
cmp
jne
daa
flds
and
je
mov
bound
jbe
out
movsl
jne
out
hlt
aaa
dec
cwtl
bound
ret
dec
sahf
adc
add
popf
jl
scas
movsb
mov
ja
ds
and
mov
fcoms
enter
rcll
pushf
mov
mov
stos
mov
bound
xorl
sti
sub
cmp
movsb
pop
xchg
or
movsb
sub
test
dec
fidivrs
fisubs
outsl
push
cmp
in
sbb
fwait
jl,pt
pop
jg
out
les
cmp
mov
xorb
dec
fmull
push
sub
shll
imul
jmp
es
xchg
mov
push
lea
sti
mov
std
sub
xor
dec
fnstsw
or
pop
xchg
xchg
pop
xor
add
mov
push
hlt
test
nop
outsb
mov
dec
mov
jo
in
enter
sbb
daa
int3
mov
test
mov
mov
mov
adc
lcall
inc
dec
movsb
test
lock
fcomps
sbb
ss
lret
pop
aad
xor
mov
jae
and
ljmp
push
ret
dec
insl
sti
lcall
dec
rorl
pop
adc
lcall
dec
into
fsincos
insl
adcl
in
movsb
pop
jle
mov
xchg
mulb
push
sbbb
push
push
std
jb
add
andl
xlat
adc
stos
add
je
mov
push
pop
pop
icebp
jle
push
call
stc
push
insb
cmp
ss
in
xor
sbb
dec
push
ret
ret
mov
adc
sbb
sub
cltd
cmp
imul
testb
pop
popa
add
cmp
call
pop
jmp
mov
faddl
pushf
or
loopne
fistps
mov
adc
fisubrl
lcall
stc
adc
scas
mov
cmp
mov
push
sub
add
and
out
pop
cwtl
and
jmp
test
lret
pop
in
mov
aam
mov
call
or
mov
pop
ror
lahf
cli
outsl
xlat
fisubrs
imul
sub
lahf
push
adc
add
fstpl
adc
scas
aaa
jbe
pop
cmpsb
push
pop
xchg
out
lock
xchg
shll
xor
arpl
or
sbb
or
movb
push
mov
jp
adc
imulb
data16
xchg
out
repz
notb
xor
sbb
mov
mov
sbb
daa
adc
inc
js
mov
xchg
call
stc
idivb
repnz
popf
adc
int
xchg
pop
sbb
sbb
mov
lods
lret
push
jmp
test
test
cmp
xor
popa
jecxz
mov
lret
gs
and
movsb
jl
fucom
mov
mov
pop
jl
add
pop
scas
sti
dec
adc
imul
mov
jle
jl
sub
into
jmp
sub
lahf
pop
inc
cmp
add
inc
mov
test
or
mov
call
test
jg
cmp
je
jbe
outsl
jo
in
jge
jno
and
cmp
mov
outsl
fcompl
push
movsb
cmp
scas
fildl
xor
dec
popa
pop
rclb
pop
into
mov
out
ror
je
sbb
pop
outsl
repz
jbe
sbb
test
ret
mov
in
aad
out
dec
cmp
pop
mov
and
or
ljmp
adc
lcall
pop
sbb
inc
cli
adc
inc
adc
xchg
mov
cmp
cli
mov
xchg
sahf
jge
push
inc
sub
push
pusha
cli
mov
ret
mov
sub
test
jne
ret
push
imul
push
addr16
mov
mov
xchg
lahf
cmp
icebp
mov
nop
jb
frstor
jmp
icebp
push
jb
mov
dec
mov
push
shr
pop
dec
mov
xor
scas
xchg
cmp
add
inc
gs
dec
int3
popl
pop
fcom
insb
movsb
ret
fcompl
ljmp
test
pusha
les
pop
sbb
sub
in
fstpl
fimuls
mov
push
adc
movsb
xor
cli
mov
cmpsl
cld
outsb
ja
pop
xor
test
cld
test
divb
cmp
push
out
cli
hlt
xor
xor
and
cmpsb
jbe
mov
mov
sub
sbbl
jno
aad
cmpsb
pop
lret
ljmp
cmp
fcom
adc
in
push
dec
mov
mov
cmp
push
ss
lahf
sbb
pop
movd
out
dec
mov
xor
pop
in
jae
mov
jg
pop
add
aad
mov
cmp
and
out
xchg
lahf
jp
jl
cmp
inc
mov
or
pop
data16
jmp
dec
dec
pop
icebp
es
clc
leave
xchg
add
cltd
movsl
xchg
int3
mov
test
aaa
out
enter
daa
cmp
lcall
sub
push
stos
pop
mov
negl
push
push
or
adc
push
push
int3
mov
mov
jl
mov
aas
cmp
imul
pop
xor
test
push
jno
mov
cmp
push
cmp
aad
mov
lds
sbb
cmpsb
stc
mov
or
sbbb
outsb
fs
or
sbb
js
add
pop
lahf
std
push
mov
cmp
sbb
lea
xchg
fadd
xchg
xchg
mov
xor
les
sbb
mov
push
mov
aas
jne
sub
mov
jecxz
inc
dec
nop
sub
jle
sub
pop
mov
lret
sub
cmp
and
push
out
negl
mov
int3
add
jecxz
lock
fs
mov
ja
mov
push
pop
pop
imul
cmp
shll
mov
jp
sbb
dec
pop
testl
push
loope
cmc
xchg
aam
mov
add
inc
test
bound
bound
scas
xchg
jmp
and
mov
hlt
or
jb
or
adc
sub
sub
xchg
out
movsl
ds
xchg
nop
mov
rol
mov
into
adc
dec
cmc
jns
stos
dec
jl
jo
cs
sbb
pavgb
xor
xchg
mov
cltd
out
cs
jnp
out
adc
dec
mov
push
lods
adc
cld
inc
ret
pop
cmp
sbb
push
loop
das
xchg
cmpsb
les
jae
adc
sub
pop
popl
pop
add
ret
ljmp
inc
jmp
data16
mov
xchg
dec
mov
dec
shll
xchg
add
stc
in
lret
lock
mov
cwtl
mov
xor
lea
jecxz
mov
cmp
into
addb
lods
or
test
scas
mov
sub
mov
add
sahf
repnz
mov
movsb
enter
xor
xchg
or
push
fisttpl
adc
fidivl
push
push
ret
sbbb
fs
pop
pop
fists
cwtl
add
popa
pop
push
pop
sbb
fiaddl
mov
xor
lock
or
xchg
cld
xchg
stos
pop
inc
pushl
sub
adc
jb
push
mov
push
jbe
push
inc
lods
scas
cwtl
sbbb
loope
and
lods
pop
daa
xchg
je
rcrl
rorb
sbb
fiadds
stos
cli
xor
cs
xchg
mov
scas
cmp
mov
push
mov
fisttps
out
lret
pop
out
xor
mov
pop
shll
mov
dec
pop
fiadds
cmp
dec
adc
insl
fstl
or
push
xchg
mov
or
mov
mov
jno
sbb
push
xor
add
imull
sub
xor
into
xor
es
push
mov
xor
fwait
cmc
cli
or
mov
mov
or
push
jg
ds
cmp
xor
mov
mov
and
repnz
xchg
and
ret
loopne
dec
jae,pn
loope
nop
pop
mov
ljmp
dec
lods
dec
test
lock
out
aam
push
lock
call
mov
sbb
fsubs
pop
scas
int3
xchg
subl
lods
enter
enter
fwait
testl
push
sbb
jbe
mov
shr
outsb
add
outsl
lret
mov
xor
popa
ja
rcrl
lret
push
and
sbb
add
push
push
push
pop
imul
scas
out
or
push
insl
jns
cmpsb
lea
push
xchg
jmpw
sbb
sti
popf
or
mov
and
ror
and
std
jbe
jb
cltd
push
sub
xchg
jg
scas
imul
cmp
or
pop
jne
mov
push
sbb
pop
jecxz
cmp
cltd
jg
movsb
mov
mov
repz
mov
xchg
mov
sub
cmp
dec
add
jne
jb
cmpsl
xchg
push
ljmp
imulb
pop
enter
adc
add
mov
outsb
jb
leave
out
out
loop
xor
push
jge
xor
adc
shl
fdivrs
adc
mov
int
cmp
ss
mov
pop
pusha
dec
outsb
jo
jae
ljmp
adc
cld
cmpsl
cwtl
sbb
pushf
jns
mov
jb
push
fdivr
and
pop
mov
xchg
inc
jne
mov
sub
jae
or
fwait
cltd
jmp
imul
inc
clc
push
fs
outsl
push
outsb
shrl
loopew
aad
lcall
cltd
fcom
outsb
and
sahf
or
jae
dec
cmc
mov
jno
imul
shl
sbb
cmc
repnz
push
inc
in
iret
je
sbb
fs
in
pop
ret
insl
pop
mov
stos
xchg
mov
mov
jbe
ss
flds
sub
or
mov
repz
je
aam
jle
inc
mov
jo
sub
imul
mov
subb
lods
cmp
das
shl
cmp
fadd
sahf
aad
stos
ficompl
insl
je
sub
mov
pop
es
je
add
clc
cmp
push
xchg
xchg
sbb
sub
cmp
sub
movsl
sti
adc
push
clc
movsb
inc
adc
jb
sbb
dec
add
aam
pop
jnp
dec
push
mov
sbb
ret
dec
fcmovnu
mov
push
ret
pushf
lods
xchg
cmpsl
dec
mov
pop
and
pop
movsb
call
or
mov
rcrl
out
loopne
push
fcmovu
jne
dec
dec
int3
or
mov
flds
mov
ror
imul
or
cmp
insb
xorb
push
icebp
mov
ss
cwtl
imul
fwait
inc
jne
repz
xor
mov
dec
cmp
inc
jmp
out
stos
out
stc
stc
movsb
addl
pop
stos
inc
jnp
cmp
aaa
bound
aam
sub
shll
mov
push
cmp
je
push
cmp
xor
in
fimull
rcl
add
std
pop
andl
out
repz
sbb
pop
je
imul
sarl
jmp
cld
and
lods
sbb
mov
dec
repnz
fcoms
mov
or
inc
in
out
sbb
mov
and
sbb
xor
xchg
adc
out
mov
imul
sar
mov
mov
sti
cltd
ret
cld
mov
lods
or
fwait
mov
xchg
fiaddl
xor
cs
sub
lea
adcb
mov
testb
pop
insl
test
test
arpl
cli
inc
enter
fimull
hlt
mov
bnd
js
jns
push
jmp
sub
pushf
loop
aas
add
outsb
jmp
mov
or
mov
rclb
sahf
iret
fdivr
mov
test
mov
jle
and
ds
mov
mov
popf
mov
inc
std
adc
mov
test
jecxz
adc
dec
clc
negb
lahf
stos
jb
movsl
bound
notb
aad
sbb
test
or
inc
ja
into
aad
sub
pop
negl
aad
in
lds
addl
xchg
xlat
sub
repz
mov
cltd
inc
mov
dec
mov
je
in
jae
lods
inc
cmc
and
cmp
ds
xchg
sub
outsl
leave
xchg
add
push
or
ret
xchg
xchg
lods
mov
fmull
jp
pop
inc
pop
lods
mov
dec
push
mov
adc
out
popa
inc
inc
ds
shrl
outsb
rcrb
icebp
negb
loopne
dec
and
fcmovb
sub
or
data16
pop
sti
pop
dec
adc
shrb
mov
out
dec
jnp
out
or
push
repnz
adc
jp
xchg
out
mov
pop
xlat
xchg
ficomps
in
jl
cmp
js
add
out
outsb
xchg
xchg
out
and
sbb
cmp
lret
outsl
jo
jne
inc
mov
out
jg
ss
xchg
jmp
xchg
sub
ret
inc
dec
shll
int
in
sub
ficoms
and
adc
in
dec
jecxz
xor
loop
xlat
jmp
fsubrs
out
jecxz
push
pop
and
mov
or
jp
jl
xchg
fdivrl
sbb
add
iret
in
or
xchg
xchg
sbb
xor
bound
icebp
nop
pushf
aam
scas
jb
jbe
and
shl
pusha
aas
xlat
sbb
sub
mov
out
add
jnp
or
loopne
add
mov
addb
popa
xchg
std
cs
jp
adc
xlat
cmp
cmp
adc
push
mov
or
cli
lea
pop
int
adc
mov
fcompl
dec
jo
or
push
xor
xor
popf
or
sti
shlb
scas
cmp
pop
sbb
jns
xor
fdivp
pop
jp
outsl
stos
repnz
jl
into
push
insl
stc
movsb
jne
test
and
dec
popf
mov
sbb
dec
xchg
shl
xor
mov
jg
push
stos
int3
and
pop
cmp
or
adc
lds
cli
jbe
xor
fstpt
sbbb
int
mov
js
push
xor
jne
cld
sarl
lds
sbb
ljmp
sbb
xor
pop
inc
xchg
enter
ljmp
pushl
fdivl
sub
incb
mov
xchg
mov
andb
mov
dec
test
bound
aam
and
addr16
jmp
test
push
mov
push
inc
stc
pop
pusha
cmp
dec
rolb
dec
mov
icebp
push
pop
aaa
popf
out
push
lahf
inc
ret
insb
out
push
mov
jns
push
shll
jns
enter
jle
aas
inc
jns
sub
sti
mov
clc
and
bound
mov
test
dec
sti
nop
dec
or
pop
xor
xor
hlt
xchg
pop
cmpsl
stc
imul
adc
cli
push
cmpsl
jmp
stos
imul
push
roll
jge
rol
dec
push
xor
lods
movb
cmp
and
pop
cmp
xchg
jae
pop
outsl
xchg
int3
inc
pop
andb
popa
push
push
adc
jns
pop
insb
dec
js
arpl
xchg
in
ss
cmp
pop
cwtl
pop
push
mull
jbe
mov
icebp
dec
ljmp
jno
les
mov
pushf
sub
sub
aam
sbb
je
aam
test
add
inc
or
test
adc
inc
push
dec
mov
pop
rolb
enter
loope
flds
or
mov
adc
adc
arpl
push
push
inc
jle
jae
cltd
adc
xchg
lcall
xor
adc
xchg
or
adc
jns
cmp
push
in
jo
mov
push
fbstp
xor
rcrl
stos
test
xchg
mov
jle
jne
jb
mov
pop
out
cmpsl
or
insl
xchg
lret
cmpsb
cmp
cwtl
out
into
pop
cmpsl
and
mov
add
jp
cs
das
push
mov
xchg
pop
jmp
loop
push
lret
push
das
imul
jnp
or
dec
imul
pop
mov
mov
dec
aas
test
test
sti
mov
mov
shll
subb
cmpb
nop
mov
out
sub
dec
mov
xor
fbld
xadd
shl
add
scas
lcall
inc
mov
fwait
shll
lods
pop
out
sbb
test
stos
loop
jbe
mov
jp
js
inc
out
sub
inc
clc
mov
pop
jecxz
add
out
cld
popa
sub
mov
jnp
aas
mov
sbb
mov
fimuls
popa
mov
insb
lea
lds
out
push
mov
mov
inc
dec
jno
lock
mov
and
or
push
int
mov
wbinvd
movsl
jno
addl
jb
pushf
neg
sub
outsl
mov
hlt
cltd
int3
jne
mov
cmp
pop
ljmp
loop
daa
std
jno
push
movsl
clc
aam
cmp
divl
loop
nop
lcall
stc
adc
and
sbb
cmp
lret
mov
jl
push
repz
lods
cmpsb
sub
loop
cmp
and
rol
fisttpl
scas
out
fwait
stos
cwtl
aad
xchg
push
aam
lea
push
icebp
xor
mov
jecxz
movsb
mov
aam
lret
sbb
mov
daa
shl
enter
mov
xchg
scas
mov
fdivr
test
cmpsb
dec
fisubrl
jl
push
mov
das
jle
and
xchg
sub
mov
repz
data16
pop
imul
mov
dec
sub
mov
aam
sub
jns
inc
or
dec
shlb
dec
inc
dec
sub
xchg
sbb
js
lock
jno
leave
sbbb
and
mov
hlt
notb
add
mov
sbb
lret
movsl
push
bound
popf
add
inc
cs
mov
pop
xor
in
fcompl
shrb
in
add
sbbb
cmp
and
xchg
test
mov
inc
arpl
imul
jbe
stos
or
fmuls
adc
loopne
dec
cmc
push
loopne
jmp
fnstenv
outsl
pop
pop
pop
loopne
aam
push
jmp
pop
mov
mov
stos
mov
xor
sbb
jecxz
in
mov
pop
dec
xchg
daa
mov
mov
shlb
in
xchg
cltd
dec
pop
mov
faddl
push
cmpsl
xor
out
pop
xchg
cmc
sbb
mov
leave
repnz
mov
in
xchg
lock
sbb
and
pop
cmp
loope
rcrb
movsb
push
sbb
dec
or
in
jae
lret
dec
bound
js
pop
test
test
sub
icebp
xor
icebp
pop
sub
pusha
les
mov
mov
xchg
push
cli
add
jbe
fildl
out
int3
pop
push
orl
adc
mov
adc
pusha
push
imul
into
movsb
xor
divb
or
mov
je
adc
push
mov
test
mov
pop
je
mov
jl
lods
je
and
xor
into
aad
cmp
jecxz
mov
push
shrb
sbb
shlb
xchg
jmp
icebp
mov
inc
sbb
adc
cmp
cmpb
out
xor
sbb
push
loopne
ret
xchg
add
ss
mov
dec
mov
xor
aad
scas
mov
fcoms
rorb
pop
xor
mov
jg
mov
sub
sbb
inc
and
cmp
movsb
fs
pop
faddp
out
movsl
loope
mov
icebp
mov
out
fwait
jg
adc
sub
jle
jmp
pop
in
pop
sti
loope
jno
xchg
cmp
and
movsl
stc
inc
fiadds
inc
dec
sbb
movsb
shl
popa
cmpsl
xchg
mov
adc
in
jb
in
pop
ds
pop
jns
cmp
cwtl
mov
outsb
cwtl
or
ret
ja
sub
lods
inc
fdivs
dec
jae
push
push
cmp
and
leave
jnp
movsb
in
add
out
cltd
repz
xor
mov
mov
test
add
test
xor
outsl
mov
pop
cli
sub
les
sub
xchg
repz
mov
test
mov
push
inc
into
in
repnz
mov
hlt
cmp
in
shlb
mov
in
xchg
mov
pop
or
pop
outsl
push
jl
lcall
cmpb
jae
add
test
adc
sub
ret
mov
inc
ja
or
sub
mov
adc
js
dec
mov
xchg
fstps
jg
mov
sbb
hlt
popa
sbb
loop
add
and
sbbl
in
mov
xor
pushf
nop
pop
add
out
pmulhuw
xchg
dec
ficoml
push
outsl
lcall
mov
clc
inc
insl
adc
rcrl
dec
pop
sub
lret
nop
cmp
xlat
lea
sbb
inc
div
lret
xchg
icebp
mov
inc
scas
ja
or
and
rorl
add
loop
fdivrs
mov
push
push
lret
pop
jb
les
or
or
ss
or
jl
popa
pop
dec
inc
into
mov
fsts
int
fldt
pop
cmp
cmpsb
and
dec
pop
enter
or
insl
xchg
frstor
adc
or
mov
and
inc
mov
xor
inc
pop
cmp
icebp
inc
pop
sub
test
jo
lods
fistps
arpl
mov
mov
adc
mov
cmp
push
lret
ljmp
mov
cwtl
fistpll
ss
in
pop
dec
rcrb
popf
sbb
in
pop
aad
test
shlb
daa
cmpsl
ljmp
inc
mov
pop
test
or
clc
push
and
jle
mov
popf
roll
cmpsb
sbb
xchg
in
addr16
dec
adc
mov
jbe
imul
cmp
add
cmc
fwait
mov
mov
adc
inc
ss
sti
insb
cltd
negl
jnp
fsubl
mov
xchg
jecxz
fistl
xchg
je
in
or
lea
idiv
pusha
pop
jp
in
mov
mov
xchg
cmc
lock
mov
adc
frstor
hlt
scas
arpl
add
dec
sbb
xchg
sub
jg
andb
pop
sub
cmp
adc
bound
mulb
cltd
je
ret
lods
push
push
in
push
xor
and
int3
jno
stos
xor
aaa
and
iret
mov
or
push
pushf
rcll
out
adc
ret
xchg
pop
hlt
dec
out
shl
shlb
mov
aas
orb
or
sbb
imul
or
push
dec
or
sub
out
in
fcoms
push
lahf
mov
or
ret
sarl
xor
or
fwait
add
les
jb
int
cltd
fcoms
mov
push
dec
dec
shrb
pop
mov
in
jne
inc
sub
and
test
cwtl
dec
fidivrs
movsb
add
cli
cs
push
or
aam
sahf
cmp
ffreep
pop
cltd
pop
das
stc
add
clc
in
imul
dec
loope
add
out
pop
sbb
lahf
icebp
popa
dec
ret
call
cmp
pop
pop
fstl
popa
pop
fsts
jnp
call
adc
dec
pushf
cmp
ss
movl
jo
dec
movsl
jp
lcall
sbb
jg
and
push
mov
sbb
in
pusha
scas
outsl
aaa
loope
jge
sub
and
cmp
pushf
out
pushw
jg
inc
jg
ret
or
jecxz
jno
jbe
movsl
cmp
push
mov
sbb
bound
sub
push
jle
rcrl
lds
mov
test
lods
push
xchg
push
pop
inc
or
sti
adc
pushf
pop
cmp
ljmp
xchg
pop
sahf
xor
dec
adc
xor
test
pop
or
pop
cmp
jne
xlat
or
scas
pop
push
ss
xchg
fnsave
mov
cld
out
push
loopne
cmpsb
lock
iret
sub
addl
sub
and
dec
or
mull
scas
sbb
test
lods
mov
mov
adc
loopne,pt
jae
jno
cmp
jle
inc
dec
mov
ljmp
int
out
xchg
mov
arpl
out
fnsave
push
arpl
gs
pop
rorb
js
pop
jbe
and
dec
aam
push
aam
adc
adc
nop
or
cmp
cs
shlb
sub
xchg
iret
dec
test
jne
das
mov
or
fcomi
in
mov
lret
mov
cmpb
aas
jmp
sub
and
mov
inc
cmpsl
add
lret
mov
add
pop
sbb
fisubrs
dec
add
mov
mov
push
sbb
cld
sub
sarb
pop
lods
cmp
mov
xchg
dec
idiv
popf
pushf
mov
test
imul
daa
jp
cmp
sbb
aaa
ljmp
cwtl
sub
dec
jp
or
jp
popf
push
add
cmp
in
pop
mov
mov
mov
fldenv
clc
add
xchg
xor
xor
cld
aaa
push
scas
and
pop
cmp
mov
push
add
mov
xor
imul
add
mov
sbb
mov
mov
das
xor
sbb
mov
aas
jae
inc
jb
aaa
or
sbb
das
xorb
and
or
imul
daa
or
clc
out
lahf
mov
loop
mov
dec
and
popa
subl
push
push
jne
or
les
insl
dec
add
inc
lods
rolb
and
sbb
or
add
int
or
mov
repz
es
xchg
mov
push
lret
xchg
and
mov
dec
fistl
lds
xchg
inc
mov
xor
jno
inc
cmp
mov
call
fsubs
inc
sbb
cmp
cmp
jo
nopl
data16
jae
scas
xchg
pop
loop
inc
jne
les
je
mov
mov
inc
lahf
lea
gs
adc
rclb
xor
out
xchg
xchg
outsl
mov
pop
jbe
add
in
fs
pop
or
jmp
cmp
scas
divl
inc
jmp
pop
movsl
xorl
gs
mov
iret
sbb
jecxz
mov
pop
mov
or
in
xchg
mov
mov
mov
jmp
sub
test
orl
shll
jne
jecxz
or
mov
je
jb
hlt
cmp
cwtl
and
cmp
adc
sbb
in
sbb
jns
sub
and
scas
push
jmp
nop
cld
adcl
scas
pop
bnd
sbb
data16
mov
out
ljmp
aaa
rcrl
push
adc
and
rorb
inc
jo
fisubrs
mov
and
stos
add
push
sbb
xor
daa
pop
cmpsb
inc
mov
add
pop
adc
repnz
lock
cmp
lock
xchg
mov
dec
mov
lahf
aaa
adcl
call
xchg
jns
cmp
ss
pop
add
pop
dec
mov
int
push
inc
inc
and
mov
fs
test
js
add
sbb
dec
mov
push
incl
lea
or
cmp
mov
push
mov
cmpsb
and
insl
sub
arpl
or
inc
dec
out
pop
lock
mov
mov
pop
rcrl
or
out
mov
add
xchg
out
fists
xor
xchg
faddp
xor
rcll
arpl
cmp
jp
repz
imulb
xor
add
adc
pop
dec
orl
rol
pop
shll
jecxz
outsb
xchg
xor
cmp
push
cli
add
jecxz
add
xchg
imul
sbb
mov
fdivrs
cmc
or
loope
mov
and
or
pop
jnp
inc
int
pop
lahf
jo
lret
scas
adc
push
xlat
roll
push
push
aam
or
jmp
scas
or
pop
ror
hlt
sub
jmp
mov
cmpl
fists
adc
xchg
pop
out
xchg
fs
testl
ja
imull
and
mov
in
push
cmp
mov
test
pop
cmp
and
inc
push
loope
add
out
xchg
pop
lahf
adc
bound
lret
std
push
sbbl
iret
inc
jecxz
mov
out
inc
mov
jne
mov
sub
out
bnd
dec
lock
lret
cs
cltd
push
test
xchg
out
inc
cmp
inc
aas
stos
cmp
sub
add
dec
hlt
push
jg
jno
mov
mov
js
divl
sbb
pop
rcrb
paddsw
inc
mov
test
jmp
repnz
jb
jl
or
lcall
test
cmpsb
loopne
wrmsr
xchg
cmp
and
mov
add
push
stos
out
fistpll
cmp
mov
adc
out
sbb
std
jne
cmpsb
cmp
fisttpll
inc
jg
inc
jnp
fmuls
pop
jecxz,pn
xchg
or
gs
iret
loopne
inc
mov
adc
push
pop
cs
pop
fwait
adc
daa
jb
sbb
lea
cmp
and
bound
lods
dec
dec
pop
pop
ret
add
enter
les
push
les
stc
fstpl
cmp
out
aas
jne
aam
inc
fsubr
stos
aaa
fisttpll
loope
das
int3
and
insl
mov
mov
and
das
or
add
cld
shlb
ret
movsl
dec
out
mov
outsl
rorl
insl
adc
add
clc
adc
fsubrp
dec
mov
andb
xor
xchg
dec
hlt
mov
je
lcall
mov
inc
cmpsb
nop
sbb
xlat
imul
push
mov
push
xchg
cmp
test
sti
xchg
fistl
outsl
mov
fs
sub
or
test
gs
push
pop
mov
cmp
lock
daa
dec
int3
int3
push
shl
lret
mov
out
dec
cmp
mov
nop
mov
xor
sbb
dec
xor
call
aad
sub
cwtl
data16
sbb
add
xor
arpl
pushf
sbb
xchg
daa
loop
out
pop
fucom
or
lcall
test
daa
xlat
shlb
daa
mov
xor
movsl
rcrb
shll
shl
js
mov
lea
in
fsubs
mov
cmp
scas
cmpsb
enter
or
data16
pop
cmp
ja
inc
hlt
add
push
push
xchg
dec
dec
sub
mov
nop
inc
mov
cld
lret
nop
orl
and
or
unpckhps
push
je
lahf
rcrl
push
cmp
out
shll
stos
sub
enter
repnz
pop
mov
mov
in
aad
inc
and
pop
mov
adc
sbb
icebp
rol
add
pop
jp
dec
push
popa
jg
mov
mov
add
jno
nop
js
sub
pop
mov
lret
jmp
jl
mov
fisubrs
hlt
push
sub
push
int
add
loope
push
movsl
iret
fidivl
aad
adc
scas
out
cmp
add
adc
gs
sarl
add
pop
xchg
stos
inc
xchg
sub
or
andl
xlat
test
jno
pop
pop
call
push
call
iret
push
mov
cmp
in
adc
dec
loop
or
sub
inc
and
adc
pop
iret
in
int3
inc
xor
push
jl
cwtl
cmp
sub
dec
leave
xor
mov
nop
cmc
fs
pop
or
jmp
xchg
xor
dec
xchg
ror
pusha
push
repnz
mov
dec
iret
cltd
scas
push
mov
repz
lea
push
movsb
shll
daa
arpl
push
pop
cmp
loop
movsl
cmc
cld
add
mov
cmp
int3
test
int3
frstor
adc
and
inc
mov
xchg
je
xchg
iret
mov
imul
icebp
ds
out
pop
dec
pop
inc
repnz
frstor
hlt
out
xor
push
fwait
sbbb
pop
aad
in
jae
push
cmc
cmp
pop
cmc
int
test
pinsrw
clc
jmp
inc
mov
popf
sar
xor
lret
jmp
push
jp
sbb
mov
shll
dec
pop
mov
dec
stos
add
jo
inc
xor
mov
jae
jns
push
jle
ficompl
ret
lahf
pop
dec
xchg
jmp
out
sahf
leave
push
loopne
adc
out
fwait
mov
bound
in
fmulp
xchg
xchg
mov
sub
mov
xor
sti
ficoms
movsb
jge
icebp
or
sbb
jnp
test
push
in
cs
xchg
rcl
test
mov
jle
pusha
in
jl
in
mov
mov
mov
jnp
test
inc
pushf
lret
es
xchg
sarl
int
aam
loopne
adc
jae
fwait
lret
iret
insl
and
icebp
shrb
je
imul
ss
notl
add
out
test
sarb
and
outsb
add
in
or
insl
mov
or
nop
mov
jbe
lock
sbb
mov
add
outsb
clc
cli
dec
vandnps
or
mov
mov
sarb
xchg
in
movsl
jle
fwait
stos
cltd
pop
in
mov
call
out
xchg
mov
push
dec
mov
ficoms
jp
xchg
repnz
repz
leave
add
xor
and
jle
dec
push
fs
cmc
xchg
aas
out
test
popa
sbb
mov
pop
ss
sub
ret
xor
mov
push
jbe
cmp
scas
add
and
leave
dec
xor
sbb
jle
adc
xor
push
mov
lcall
daa
test
xchg
add
push
pusha
lds
mov
inc
out
mov
jmp
fwait
inc
dec
and
xchg
imul
xchg
stos
mov
movsb
fcoms
mov
fldt
or
outsb
sub
repz
pop
inc
ficomps
sbb
loop
imul
xor
aas
cmp
cli
je
sti
jge
pop
cmc
sbb
push
sub
mov
jp
cli
dec
out
aam
mov
leave
mov
out
mov
dec
push
cld
mov
pop
and
or
sub
mov
xchg
mov
and
xchg
add
pop
iret
xchg
add
or
pop
add
pop
nop
mov
pop
pop
mov
push
int
pop
lcall
jg
pop
sahf
cmp
mov
popf
ficoml
cld
fs
push
dec
testl
nop
jg
mov
hlt
les
inc
mov
dec
rcl
rcl
loopne
xor
or
loop
into
pop
pop
inc
and
jecxz
cltd
jbe
stos
out
test
xor
dec
xor
and
cwtl
out
cld
loop
push
xchg
in
sar
rcr
lds
add
mov
imul
mov
mov
push
xchg
mov
dec
stc
sub
cmp
mov
gs
in
mov
in
pushf
fstps
jecxz
lcall
loopne
lods
pop
testl
push
xlat
adc
push
xor
jmp
pop
adcb
iret
mov
popf
dec
xchg
in
inc
fs
dec
pop
mov
mov
jb
dec
das
inc
popf
imul
sbb
movb
xchg
mov
call
in
into
lret
shlb
add
push
aad
cmpsl
push
cmovg
cs
add
xor
mov
adc
vsubpd
aam
dec
jl
adc
fdivs
shl
and
fidivs
les
xchg
lods
push
pop
pop
cmp
stc
add
cli
cmp
xchg
fisubl
stos
enter
mov
sbb
dec
and
leave
lea
roll
loop
pop
div
shrl
push
ret
dec
adc
cmc
sbb
pushf
inc
mov
and
inc
xchg
bound
xor
push
xor
fcmovnu
dec
mov
jg
push
jbe
das
es
aad
pop
mov
sub
or
ret
outsb
add
and
bound
rcl
mov
fnstcw
sahf
dec
add
jl
add
add
je
and
cmpsb
je
lods
inc
xchg
and
mov
pop
lret
xchg
and
mov
aam
mul
sub
xlat
dec
cmpsl
mov
mov
push
insb
dec
push
sub
sbbl
add
fs
sub
je
jg
mov
jecxz
sbb
lds
ljmp
inc
lret
imul
inc
sbb
inc
gs
icebp
push
lds
outsl
and
stos
mov
dec
cmp
clc
jmp
testb
ret
mov
jno
jle
xor
aaa
inc
inc
pop
sbb
dec
adc
movsl
stc
push
jbe
daa
mov
cmp
cwtl
push
nop
xchg
out
icebp
lods
repz
mov
xlat
sbb
fiadds
movsb
scas
test
mov
lahf
xor
outsb
cmp
cs
jge
pop
xchg
mov
cmp
jne
push
adc
fbld
add
decb
sbb
lds
xor
pop
push
add
xchg
loope
and
cmpsb
scas
es
and
insb
test
pop
add
mov
lds
and
fsubrl
fimull
cmp
push
push
inc
mov
arpl
pusha
ss
dec
and
pop
pop
loop
pop
add
add
pop
cmp
fld1
cmp
mov
ret
dec
insb
filds
clc
xchg
sbb
outsb
outsl
xor
mov
gs
mov
mov
popf
adc
lea
pushf
xor
fiadds
inc
pop
xor
je
pusha
rolb
into
and
mov
or
xchg
jp
leave
loop
or
sub
ret
data16
sbb
subb
or
iret
adc
data16
das
xchg
mov
loopne
pop
cmp
loopne
dec
lods
mov
jle
push
sub
lds
dec
jb
dec
std
or
popa
jno
fiadds
dec
lds
jecxz
mov
push
popa
push
sbb
fldl
lods
mov
xor
push
bound
test
iret
push
xlat
xchg
fsincos
lock
sbb
xorb
pop
pop
pop
notb
inc
push
cmp
push
add
and
sub
push
aas
sbb
pop
jge
pop
jbe
mov
test
stc
imul
jl
dec
mov
sahf
xor
xor
mov
adc
cmp
push
stos
cmp
in
loopne
aaa
xchg
lret
clc
jg
shlb
jne
jle
inc
pop
xchg
rcr
sbb
mov
lods
in
test
out
xor
lds
out
mov
pop
cmp
mov
lea
pop
xor
or
addr16
int3
out
cmp
push
std
rcr
xor
jns
or
sbb
iret
int3
cmpsb
push
pop
js
scas
call
mov
xchg
sbb
outsb
adc
lea
or
sub
mov
cld
aas
or
mov
lods
movsl
outsl
repnz
sub
lods
cmp
push
data16
sub
test
addr16
mov
cld
test
outsl
xchg
shr
dec
push
testb
cmp
dec
insb
ja
sub
and
inc
rorl
ret
mov
mov
addb
roll
mov
inc
jge
xchg
addr16
dec
inc
sub
loop
and
inc
push
sub
ret
fdivrl
cld
jecxz
jbe
adc
lds
inc
lret
out
sbb
sub
cmp
outsb
mov
cmpsb
pop
add
roll
sbb
and
xchg
push
ret
mov
cmp
pushf
adc
jno
mov
add
ss
lcall
insl
jb
jecxz
imul
mov
dec
jae
mov
sub
lahf
sub
mov
rcl
push
rclb
pushfw
les
pop
inc
sub
inc
add
dec
loop
sbb
jg
int3
out
pop
enter
fildl
jns
mov
dec
push
jl
arpl
mov
mov
push
ss
xor
aad
movsb
shrb
cmp
xchg
mov
push
push
out
sub
pushf
aaa
xor
fimull
in
inc
out
imul
enter
aam
fwait
and
rorb
test
pushf
pop
stos
mov
cld
stos
in
sbb
mov
and
cmp
or
add
mov
lret
test
jle
inc
pushf
test
jne
inc
add
stos
imul
rol
aad
int
lock
ljmp
sub
aaa
xor
fsubl
dec
xchg
fdivrl
dec
mov
fstl
scas
push
inc
shl
ficomps
mov
js
cmp
inc
shl
sahf
add
test
adc
arpl
sti
cmp
mov
in
mov
cmp
pop
icebp
sbbb
ss
mov
mov
fnstcw
mov
lea
loope
xchg
sbb
outsb
mov
mov
inc
jae
mov
dec
fcmovu
and
pop
dec
jge
xor
je
insb
into
popa
sarl
cmp
sbb
push
pop
fsubp
mov
pop
lds
jne
rcl
andl
cltd
stos
push
repnz
test
scas
jmp
ret
imul
add
xor
enter
hlt
pop
cmp
jle
sub
sub
xchg
sbb
or
stos
mov
push
mov
cmp
inc
adc
mul
pop
sbb
xor
push
inc
nop
dec
mov
sbb
sbb
lds
js
inc
pop
sbb
inc
dec
addb
movsl
adc
or
mov
mov
sar
or
mov
add
adc
mov
popa
insb
fs
jns
pusha
aaa
iret
jp
push
sbb
mov
in
cmp
mul
cwtl
xchg
outsl
push
inc
pop
dec
shrb
or
or
jle
std
mov
roll
xchg
push
test
sbb
inc
cwtl
push
and
pop
push
inc
xor
sbb
iret
bound
jp
sbb
mov
je
mov
pop
adc
mov
or
shl
lcall
mov
jl
enter
enter
std
jl
pushf
inc
lock
aad
pop
push
mov
inc
pop
cli
jp
xor
les
cld
xchg
jmp
inc
mov
out
jmp
mov
or
push
jnp
xlat
clc
aad
inc
cld
jecxz
js
adcb
dec
fdiv
repz
cli
ret
shlb
test
fcompl
shrb
jno
dec
jns
adc
jbe
int3
inc
out
mov
daa
pop
cmp
xchg
xchg
push
sub
inc
push
cltd
fnstsw
mov
daa
cld
out
and
fcmovb
jns
add
xchg
lock
test
adc
jne
shlb
adc
push
dec
add
jo
pop
adc
and
adc
push
or
push
test
outsb
push
cmp
movsl
or
inc
mov
jno
xlat
or
in
frstor
jg
inc
int
rcl
outsl
ljmp
mov
fbld
lea
push
sub
mov
icebp
xor
add
xor
subb
test
movsl
mov
outsb
data16
xchg
icebp
push
mov
jl
in
xor
push
mov
loopne
or
mov
push
mov
push
jle
dec
cs
mov
jns
mov
xchg
imul
rcrb
aad
test
inc
ret
xor
sub
test
jb
xor
dec
outsl
inc
pusha
es
mov
mov
repnz
cs
mov
push
or
mov
pop
pop
adc
cld
sub
leave
or
pop
aad
add
sti
jmp
ret
pushf
in
mov
mov
ljmp
sbb
rol
jbe
adc
push
inc
xor
rorb
inc
mov
sub
or
dec
je
fs
arpl
jbe
divb
cmc
addr16
cld
imul
rolb
add
iret
dec
dec
scas
add
and
movsb
mov
jle
sbb
jno
int3
loope
inc
sahf
hlt
jg
push
popa
fldl
jmp
stc
icebp
movsl
out
mov
cmp
xor
cmp
sub
std
sbb
rorb
sti
push
xchg
pop
add
divb
in
bound
cmpsb
fisttpl
fcmovb
fnstenv
mov
out
and
mov
pop
mov
mov
pop
add
out
sti
pop
test
push
leave
xchg
dec
fstps
pop
xchg
movsl
mov
mov
lahf
ret
pop
pop
movsb
inc
adc
shlb
scas
icebp
insb
repz
shlb
lcall
leave
icebp
cltd
stos
push
aaa
push
divl
mov
pushf
add
jl
or
mov
aam
sbb
imul
adc
adc
daa
mov
adc
scas
push
and
rcrl
push
pop
js
and
cs
nop
mov
rcll
jg
and
or
or
sbb
dec
xor
scas
hlt
stos
mov
ret
pop
pmaxsw
sub
je
mov
fdivrs
and
dec
and
pushf
xchg
pmullw
js
mov
lods
xor
mov
sbb
sub
in
cli
ds
mov
fnsave
add
and
inc
adc
pop
xchg
pop
dec
mov
and
dec
mov
push
pushl
or
int
xorb
pop
jb
notb
cld
or
arpl
or
clc
push
ljmp
iret
ljmp
xchg
sub
out
adcl
inc
dec
push
push
lods
out
cmp
mov
mov
mov
pop
dec
dec
cltd
sbb
inc
ja
pop
popf
aas
jge
mov
xor
mov
xchg
lods
idivb
lea
lods
add
lahf
sbb
sub
jp
lock
xlat
adc
iret
outsb
jno
and
pop
jae
cmp
sahf
xchg
add
scas
jne
dec
mov
sbb
pop
fnsave
adc
add
and
mov
ss
jg
adc
imul
mov
outsl
ret
dec
lods
jno
enter
loope
cs
popf
inc
daa
inc
mov
dec
repnz
sbb
jb
pusha
daa
ret
shll
lods
enter
stc
mov
mov
inc
mov
test
cmp
arpl
mov
out
rcl
arpl
in
fldl2e
fistl
add
push
xchg
test
lahf
jae
int
orl
ss
lret
sub
cli
ret
das
adc
lret
jbe
faddl
mov
add
mov
outsl
aaa
xor
jns
jnp
and
out
sbb
mov
insl
nop
lcall
call
pop
rolb
mov
inc
dec
or
pop
push
shlb
sbb
js
jb
aaa
mov
fldcw
ret
mov
dec
lret
addr16
jl
stc
ror
daa
repz
or
or
xor
pop
aas
rcrl
in
insb
in
sbb
cli
daa
pop
sub
lcall
lret
fidivs
cmp
xor
sarl
out
sbbb
add
aas
test
or
and
adc
in
fstps
sub
push
movl
lcall
sarl
cs
jb
mov
sbb
lea
or
orl
cs
loop
mov
leave
ficoml
sub
add
stos
js
fsubl
popa
jae
xor
ret
mov
xchg
add
push
xor
xlat
stos
popa
inc
sbb
xor
test
jae
pop
lcall
inc
jne
cmpsl
aam
mov
mov
add
jnp
test
sbb
je
cld
int3
popa
inc
fmuls
sub
arpl
jb
ds
push
mov
xor
testb
movsl
fstpt
xchg
push
fcmovu
lods
je
pop
cwtl
or
push
out
les
mov
popa
inc
and
int
and
pop
mov
movsl
cmp
into
outsb
mov
mov
mov
and
aaa
add
idivl
jae
popa
add
adc
sbb
sub
decl
sbb
addr16
mov
and
push
int
xlat
pushf
xor
jmp
push
loopne
sub
into
test
push
shll
int3
ret
add
pop
pop
and
pushf
jl
std
call
and
rorl
es
xor
jmp
mulb
push
inc
mov
repnz
pop
dec
jns
or
lea
sbbb
sub
mov
aad
pop
enter
cltd
and
sbb
jge
xchg
std
push
cmp
mov
movsb
xor
sub
cld
test
or
push
sub
sti
mov
shlb
add
jecxz
xchg
sub
fstpl
jge
push
out
in
aaa
aam
std
mov
dec
push
out
popf
out
mov
fwait
aaa
jno
jnp
lods
in
push
insl
push
das
xacquire
insl
cmp
lea
sub
jnp
xor
sub
cmp
sub
adc
jle
pop
in
pop
add
sbb
cmp
mov
std
lods
js
rcll
cltd
in
arpl
xor
hlt
mov
lds
loop
add
outsl
inc
pushl
daa
hlt
add
out
int
mulps
mov
adc
and
lods
lret
xor
daa
add
add
cltd
add
fsubrs
mov
sbb
jnp
xchg
sbb
jle
pop
rcrb
ss
pusha
add
stos
frstor
xor
mov
cmp
pop
clc
out
adc
add
lret
cli
hlt
mov
sbb
ja
outsl
sub
and
stos
inc
pop
and
fwait
cli
cwtl
add
cmp
and
ss
addr16
jae
xor
ret
mov
test
das
ret
push
shr
fsubp
mov
js
xchg
or
jbe
pop
mov
iret
lds
test
and
push
pop
clc
push
jo
sub
sbb
shl
hlt
xor
push
sarb
aas
sbb
xchg
test
aad
xor
icebp
shl
scas
sub
fs
jl
fs
xor
xor
lcall
mov
bound
mov
gs
push
dec
fsubrs
mov
lea
fbld
daa
xlat
push
cltd
stc
ljmp
in
lea
xchg
mov
inc
mov
push
in
out
mov
loop
fwait
push
jmp
test
pop
pusha
cli
mov
xor
js
inc
mov
add
cmp
sbb
inc
jno
mov
clc
sub
jae
nop
dec
jo
inc
jns
xchg
das
aaa
push
std
aaa
daa
mov
cmp
or
mov
or
pop
ja
jne
ds
jae
mov
cmpb
inc
dec
mov
mov
enter
mov
popf
pop
repnz
add
std
mov
jne
jl
push
shlb
add
in
pop
mov
lahf
jnp
and
leave
std
push
mov
or
lds
inc
insb
pop
mov
ss
in
pop
cmp
fs
call
mov
cmpsb
lock
lcall
xchg
std
jnp
dec
mov
std
enter
pop
loope
in
pusha
push
ret
mulb
fildl
dec
pushf
xchg
popf
icebp
mov
mov
pop
dec
mov
add
jnp
rcrb
xor
push
dec
pop
fwait
sti
and
clc
leave
add
pop
add
pusha
jns
sbb
sbb
je
outsl
fcmovne
dec
pop
ljmp
outsb
or
push
pop
js
test
cmpl
shll
lock
insl
add
push
ret
lods
cmpsb
sub
dec
xor
dec
mov
jmp
push
push
mov
mov
ds
jp
sahf
cmp
sbb
fwait
lcall
mov
mov
pop
sub
lods
js
mov
or
imul
test
test
lds
mov
and
and
pop
jl
fs
sbb
data16
imul
lret
dec
and
sub
shl
and
mov
mov
jo
in
out
pop
sub
jns
addr16
das
lahf
xchg
adc
cmpsb
jmp
cmp
mov
fdivrl
psubd
mov
add
outsl
cmc
mov
adc
rorb
cli
push
xchg
lahf
enter
push
shrb
inc
pop
jg
push
xlat
pop
xor
cmc
add
call
sub
in
xchg
sub
jge
out
mov
addr16
pop
rol
cmp
inc
cmpsl
push
jne
lahf
pusha
lcall
in
mov
data16
xchg
sub
out
leave
push
mov
and
stc
ror
or
dec
jg
or
jecxz
movsb
push
mov
adcl
push
push
xor
repnz
or
jg
repnz
lds
sbb
pop
sti
jo
dec
or
xlat
imul
mov
cmp
dec
imul
lock
xchg
or
out
adc
popa
cmp
iret
popf
sar
push
push
outsl
fldcw
and
sub
fsts
enter
in
adc
movsl
dec
lods
sbb
in
jg
jae
jmp
fisttpll
vbroadcasti32x4
repnz
out
jmp
mov
ss
subl
lea
std
dec
pop
and
xor
outsb
lods
jle
mov
pop
mov
out
cmp
push
or
lret
pop
or
push
inc
adc
push
sbb
js
lds
add
add
push
lock
loope
jbe
in
mov
xchg
out
xor
lds
mov
lcall
add
pop
js
xchg
adc
pop
or
or
adc
dec
xor
popf
lret
mov
xor
mov
lods
enter
shll
sahf
pop
popa
cli
lds
aad
pop
or
jmp
xchg
jge
jp
lock
jno
dec
das
faddp
xor
popa
mov
outsl
fsubl
imul
pop
outsl
fbstp
add
cmp
push
pop
or
xor
sbb
outsl
xchg
into
ret
in
xor
lahf
imul
inc
icebp
jnp
xlat
jp
in
rcrb
adc
lods
or
push
and
lahf
sbb
lret
dec
dec
add
testl
cmpsl
sbb
iret
mov
lret
xchg
lock
sub
push
sbb
push
dec
lds
dec
enter
insl
inc
dec
inc
xor
and
adc
adc
add
lcall
and
popa
mov
pop
cmp
and
cs
xchg
in
imul
pop
and
push
subl
cmpsb
add
inc
cmp
and
mov
mov
cmp
into
outsl
xor
fs
add
xchg
ja
mov
ret
aas
fsubr
xchg
call
les
loope
and
xchg
clc
stc
push
filds
cmp
cmpsl
add
sub
mov
cmpsb
std
fdivl
and
movsb
adc
xlat
cmpsl
xchg
rcl
push
movsl
stc
jg
mov
out
sub
adc
out
rorb
jg
cwtl
dec
popaw
gs
ret
dec
arpl
notb
movsb
cs
lods
mov
mov
out
sarb
jae
cltd
cmpb
push
rclb
or
dec
pop
mov
push
jmp
inc
mov
fdivl
dec
and
je
sbb
xchg
push
xor
jb
sbb
xchg
cmp
ljmp
or
xchg
ja
lretw
and
jge
cmp
cmp
adc
jle
lahf
je
fiaddl
and
push
test
negb
imul
jp
push
add
mov
add
mov
imul
inc
insb
fstps
je
or
and
cmp
and
xchg
pop
pop
jp
mov
and
movsl
subl
imul
xchg
rcll
pop
rcrl
sub
mov
and
add
jnp
adcl
inc
cmpsl
inc
mov
add
sahf
daa
imul
xchg
fimuls
mov
jae
decl
filds
je
xor
pop
jp
pop
in
ret
cmp
pop
je
xor
fnstcw
cwtl
rolb
in
mov
fs
push
jle
add
jmp
mov
imul
jecxz
add
test
add
adc
jb
jae
xor
fisttpl
mov
out
in
stos
push
decb
lret
int
pop
dec
xor
adc
int
into
xchg
fiadds
jne
push
jb
addb
aas
jbe
mov
arpl
enter
out
out
sbb
xchg
fistpll
xor
psubsw
inc
jae
sti
aad
test
add
mov
lret
fisttpll
mov
sbb
psubsb
fcompl
cwtl
sub
std
adc
mov
xorb
cs
pop
or
pop
ja
ljmp
cwtl
adc
addr16
adc
xorb
dec
das
repz
test
bound
aam
call
les
loop
cmp
mov
jae
inc
push
in
cld
loopne
and
shlb
icebp
add
jg
jp
mov
inc
sub
sbb
aas
add
leave
cmp
adc
adc
push
push
icebp
fbld
add
pop
rcrl
jmp
lret
push
shll
cmp
sub
mov
dec
dec
ss
pop
int
shl
rclb
sbb
mov
ss
xor
lcall
jecxz
pushf
or
xor
mov
shlb
rol
in
bound
or
inc
nop
add
jp
fdivr
xor
or
push
adc
xor
dec
ror
and
push
mov
lahf
in
stos
test
push
jae
xor
jle
das
pop
sub
dec
mov
loope
sub
ja
fdiv
fsubs
and
inc
or
scas
sar
lret
jg
xchg
cmpsb
pushf
xchg
dec
and
les
in
sbb
cli
ja
andb
mov
cmp
shrb
pop
xchg
nop
push
stos
cmc
pop
lods
fcomi
xor
movsl
nop
cmp
sbb
adc
xchg
cld
mov
leave
push
sub
adcb
dec
pop
xlat
jle
lahf
icebp
rorb
sbb
lods
push
hlt
flds
decl
rorb
fstl
sti
je
sub
scas
bound
aaa
cmp
push
xchg
mov
inc
push
js
js
cwtl
push
jmp
iret
divl
cli
dec
test
daa
int
cld
pop
pop
sub
adcl
fsts
inc
dec
push
ror
adc
ss
movaps
iret
in
cmp
stos
inc
sti
mov
dec
repz
push
jle
arpl
pusha
pop
jae
adc
mov
and
les
int
inc
sahf
push
les
arpl
cli
xchg
in
add
leave
push
mov
icebp
inc
mov
cmpb
or
mov
inc
xor
inc
stos
roll
xor
adc
pop
fdivp
xchg
fidivl
mov
or
fs
iret
mov
jo
sahf
gs
jb
xor
push
cld
mov
xchg
std
pushf
popa
cmc
mov
dec
je
iretw
mov
xchg
cmc
mov
sub
cmp
pop
xchg
xor
sub
pop
int3
mov
cmc
enter
hlt
loop
fisubl
in
mov
pop
or
xor
out
mov
insl
pop
cs
pop
xor
jno
and
clc
rclb
int
mov
inc
inc
scas
fwait
dec
loop
mov
adc
seta
mov
pop
loope
imul
ret
cmp
ds
lock
and
add
push
nop
mov
adc
jbe
popa
pop
rcrb
sub
mov
cmp
stc
jle
mov
imul
mov
jmp
repz
sbb
or
pushf
enter
ds
sbb
test
xchg
add
jae
pop
les
or
or
mov
adc
call
add
add
push
hlt
jno
lret
fnsave
mov
iret
lahf
xor
ja
pop
inc
or
sub
pop
mov
in
ret
sub
cmpsl
das
sub
jmp
pop
fidivl
cltd
pop
fisttps
btc
or
add
insl
ja
pusha
das
xchg
sti
mov
test
cltd
push
pop
cmp
cmc
sahf
sub
pop
jl
sbb
inc
stos
sarb
jno
movsl
imul
out
push
ret
std
adc
aas
adc
inc
dec
and
and
fisttpll
dec
inc
cmc
add
and
add
aaa
scas
inc
sub
mov
lcall
xchg
pop
cmp
dec
incb
enter
nop
cli
sbb
adc
ja
outsl
shrl
adcb
or
fisttps
sub
sbb
cmp
inc
repz
jp
push
idivb
jno
jae
es
std
sub
xchg
das
ret
xlat
xchg
mov
rorb
push
adc
jecxz
je
fmuls
sbb
push
sub
jns
cltd
out
arpl
push
or
mov
ret
out
lret
sarb
pop
mov
xchg
cmc
sbb
jl
sub
ffreep
iret
add
sbbb
and
lods
loop
fld1
fcoml
sbb
cmp
orl
js
fcmovbe
jnp
jle
adc
imul
pop
sub
clc
push
outsb
lds
push
push
mov
in
pop
daa
daa
xlat
xorb
pop
decb
inc
nop
negb
jecxz
ljmp
cld
dec
push
pop
push
aas
inc
cmovge
push
add
bound
xchg
mov
frstor
in
bound
ds
dec
or
dec
cmpsl
rolb
lods
cmp
mov
cwtl
push
sub
inc
push
sbb
dec
ficompl
push
inc
in
rcll
add
movsb
or
dec
push
je
cmp
push
sub
stos
cmpsl
push
pop
sbb
mov
loopne
outsl
sub
push
push
lret
lcall
das
hlt
sbb
sub
jle
outsb
and
cltd
vpunpckldq
cld
out
daa
das
ljmp
iret
int3
jge
jge
and
or
outsl
cltd
pop
inc
imul
and
ja
lods
cwtl
rcll
cmp
insl
enter
popf
sahf
mov
je
lods
jbe
pop
push
pop
dec
push
xchg
mov
mov
repnz
ret
daa
pusha
hlt
mov
ja
jns
xchg
xchg
pop
mov
and
xor
jo
push
and
dec
popa
lret
mov
mov
stc
lock
push
mov
xchg
adc
mov
pop
loop
jae
ffreep
je
xchg
mov
in
ret
fimull
push
mov
daa
cmp
mov
cli
dec
or
mov
out
shl
sbb
push
push
xor
ucomiss
sub
out
sbb
fbstp
pop
cmp
xor
shl
xchg
imul
int3
test
lods
lahf
push
jle
push
cmc
adc
pop
xchg
in
out
adcb
sub
push
sahf
aaa
test
mov
xor
and
cwtl
icebp
lods
dec
add
or
add
into
fnstsw
pop
dec
cli
xorl
cli
das
aas
cli
or
fwait
ss
xchg
sub
shlb
jge
out
fnsave
push
jmp
loopne
or
dec
scas
test
nop
loope
cmpl
xchg
ret
fldt
out
mov
push
test
xchg
xchg
fcmovnu
aaa
xchg
pop
xor
push
xchg
inc
aaa
scas
mov
and
test
addr16
repz
and
ret
nop
cmp
lds
adc
cmc
push
add
stos
mov
jl
jp
cmp
xchg
mov
popa
jp
inc
jmp
dec
sub
inc
xchg
in
in
fisubrs
cmp
inc
sbb
dec
push
das
mov
ret
inc
fimuls
and
outsb
aaa
cli
cmpsb
xchg
xchg
leave
or
adc
dec
test
scas
sbb
jecxz
push
cs
scas
cmp
jp
add
or
lods
cmpsb
lock
jmp
pusha
scas
cwtl
pop
push
or
scas
pop
jl
stos
ljmp
mov
mov
call
jns
xor
sti
inc
push
mov
jae
pushf
mov
mov
and
cmpb
test
lock
cmp
add
xor
stos
mov
jb
xchg
or
adc
movsb
bnd
test
lods
cmpsb
dec
mov
sub
jmp
jne
out
xchg
fnstsw
scas
stc
mov
or
inc
and
lcall
cld
and
push
fiaddl
aas
sub
mov
pop
ds
lret
cmpsw
cwtl
cli
mov
movsb
or
xor
insl
lock
pop
test
stos
xchg
adc
mov
cli
sbb
fwait
cmpsl
das
in
repnz
rcr
insl
imul
lcall
adc
test
adc
outsl
lock
cmp
inc
or
adc
les
mov
and
ret
scas
pusha
cmc
push
test
pusha
jp
inc
fsubr
cmpsb
push
fisubrs
fbstp
cmc
nop
inc
outsl
ss
scas
dec
xor
cmp
pop
psubw
cmp
mov
es
add
fwait
or
or
mov
mov
addr16
mov
mov
pop
movsl
repnz
std
push
and
idiv
test
pop
imul
je
push
jbe
sub
enter
movl
push
pop
and
fwait
inc
jg
test
stc
sbb
out
inc
cli
sub
rorl
rcrl
jnp
dec
adc
and
dec
jl
ljmp
dec
mov
xor
pop
mov
cmp
cmpl
jnp
loop
inc
in
xor
sahf
mov
pop
pop
addr16
out
mov
jp
repnz
shrl
and
out
mov
lock
pushf
sbb
sbb
mov
addl
fnstenv
sbb
xchg
or
es
or
pop
dec
das
in
mov
or
push
pop
enter
xchg
fcmovbe
jbe
mov
cmp
cmp
xchg
xlat
std
inc
sti
addr16
sub
outsb
jle
cwtl
inc
cltd
fistpll
lahf
lret
aas
sub
sahf
addr16
in
mov
add
lock
lds
push
out
pop
test
pop
push
dec
sbb
movsb
inc
xor
iret
cmp
jo
insb
loop
cmp
jg
push
mov
jmp
popa
bnd
test
mov
adc
in
hlt
loope
jno
mov
fadds
fbld
adc
dec
sbbb
out
adc
fwait
loope
xor
and
and
xor
sar
mov
add
mov
jge
xor
loop
mov
popa
and
cs
adc
scas
fildll
xchg
pop
and
mov
imul
adcl
into
cmp
subb
jmp
mov
dec
data16
enter
fmull
roll
sub
push
testl
test
jle
dec
leave
out
ret
sub
and
imul
adc
int3
push
out
cmpsb
aad
mov
test
sub
adc
out
aas
iret
pop
sarb
push
dec
test
mov
pop
mov
pusha
mov
jne
jnp
push
int
sub
insb
push
mov
mov
insl
dec
add
inc
aaa
push
out
ja
in
cli
fdiv
outsl
test
data16
loopne
dec
cmpsl
pop
add
popa
or
xchg
fisubl
dec
dec
repz
push
push
mov
add
adc
and
cmp
adc
pop
xchg
stos
jl
sbb
loope
inc
jno
cmpsl
xchg
andb
aam
adc
imul
ds
adc
fldt
cli
mov
cmp
inc
outsb
inc
jle
popa
jo
inc
lret
lahf
test
sbb
sub
add
int
dec
mov
xor
mov
jb
mov
popa
hlt
jb
mov
or
filds
les
mull
out
mov
dec
movsb
add
mov
mov
stos
push
mov
loop
lods
clc
iret
cmp
fidivl
sahf
pop
out
test
xor
psubusb
cmp
rcl
insl
std
mov
pop
mov
and
mov
push
outsl
pop
or
dec
add
sbb
pop
inc
adc
stos
pop
sbb
dec
cmp
icebp
lock
test
sbb
sbb
lock
sub
inc
jb
sbbl
loopne
rcl
jecxz
in
xor
lahf
int
mov
mov
hlt
pop
jb
sbb
mov
xchg
mov
addr16
data16
push
mov
shlb
stos
pusha
pop
sub
daa
fbld
jno
das
ret
or
lahf
andl
enter
mov
out
mov
fsincos
push
sahf
fcmovbe
stos
sti
add
cld
inc
mov
push
dec
add
imulb
xchg
pop
xchg
pop
addr16
stc
rcll
dec
shrb
or
jno
xlat
loope
pop
popa
stc
stc
rcrl
push
ljmp
xchg
xchg
in
jge
cmp
xor
mov
fwait
jg
out
add
inc
lahf
xchg
mov
mov
imul
inc
sbb
lcall
mov
pop
mov
in
test
lods
and
decb
sarb
fldenv
dec
inc
ficompl
ret
imul
popf
pop
or
pop
lock
cmp
imulb
fiaddl
int
jns
inc
loope
push
push
inc
push
stc
push
insl
xchg
gs
jecxz
push
lods
adc
xchg
hlt
jns
jns
inc
cmpl
nop
fsubs
cmp
hlt
xchg
stos
pop
iret
mov
adc
out
and
fcoml
push
nop
cmc
sbb
lock
fsubs
dec
dec
sub
test
pop
pop
xchg
fmul
clc
in
int
dec
out
mov
xchg
jg
inc
shl
fbstp
nop
cmpl
das
mov
adc
hlt
repnz
sti
dec
int
dec
mov
or
sbb
bound
lcall
cmp
sub
jae
lock
fdivl
xchg
cmp
movsl
dec
pop
adc
call
lcall
rcr
fsubrl
lods
clc
cmp
lret
stos
out
dec
dec
int
xor
jmp
inc
arpl
xchg
enter
loope,pn
sti
xor
xor
sbb
cltd
fldt
ret
pushf
imul
jg
push
and
mov
arpl
pop
mov
jl
xor
and
dec
or
dec
add
cmp
outsl
mov
inc
push
or
dec
pop
mov
sub
or
cmp
daa
sbb
icebp
jp
dec
pop
xchg
push
jno
test
lret
out
icebp
insb
mov
push
popa
push
imul
push
movsl
loopne
pop
or
add
and
xor
cwtl
cmpsl
out
popa
iret
es
or
xlat
xchg
mov
mov
lret
add
push
and
cmpsl
outsl
pop
mov
xlat
arpl
sbb
and
jmp
pop
imul
adc
repnz
imul
mov
jp
fsubl
sub
adc
fldcw
repz
pop
jp
inc
mov
mov
cwtl
mov
xor
mov
test
dec
push
loopne
lahf
test
loop
xor
ror
ja
xor
adc
dec
fldcw
insb
fwait
mov
mov
cmp
mov
call
loop
lods
add
ret
inc
pop
jb
mov
and
inc
push
in
pop
testl
cli
push
jecxz
mov
clc
mov
adc
mov
movsb
mov
outsb
mov
adc
push
mov
loope
pop
inc
in
nop
xor
mov
aad
dec
imul
sbb
lock
in
pop
gs
std
push
in
cltd
mov
orb
jnp
jle
cmp
jecxz
outsb
into
aad
repnz
jg
push
push
cld
xchg
scas
dec
insl
cmp
cld
fnsave
xor
idivb
shl
insb
push
jle
mov
mov
xchg
pop
incl
insl
mov
pop
adc
pop
testb
jne
lret
ret
int
aam
in
xor
out
add
stos
adc
bound
add
push
mov
jnp
andl
cmp
cmp
pushf
pop
cltd
dec
in
xchg
mov
addr16
int3
xchg
test
dec
outsl
push
and
lods
rcrb
iret
dec
dec
fdivr
push
leave
and
sbb
cmpsb
es
nop
ret
mov
mov
and
rorb
and
sbb
dec
je
out
out
mov
cmp
in
icebp
jp
loope
dec
xchg
push
lahf
mov
clc
std
sbb
mov
pushf
push
aaa
cmp
dec
push
xchg
add
jl
shll
aaa
outsl
cld
jno
movsl
mov
int3
mov
outsl
js
or
leave
ljmp
mov
and
pusha
pushf
stc
sub
pop
test
hlt
add
adc
ret
xchg
xchg
add
popf
das
sub
push
mov
jge
lds
mov
pusha
push
add
xchg
push
mov
insb
dec
push
mov
es
dec
mov
add
icebp
mov
shll
incl
xchg
jge
add
insl
pop
push
or
xchg
inc
jg
inc
sbb
call
loop
test
adc
das
jle
wbinvd
push
ret
jp
ds
jb
and
mov
xor
sbb
mov
aad
adc
xor
fnstsw
sub
ds
scas
andb
or
mov
loope
lcall
inc
outsl
out
jl
fs
popa
mov
push
fildll
add
jns
cmp
mov
aaa
xlat
in
dec
pop
lock
aas
aad
pusha
iret
imul
cmp
dec
bound
nop
int
xlat
adc
ret
sbb
mov
add
mov
js
jno
cmpsl
push
fidivrs
inc
hlt
stos
dec
add
ret
jmp
cmp
loope
shlb
add
push
dec
mov
jl
shl
je
jo
mov
loope
mov
sbb
mov
push
fcomi
sbb
jo
dec
fisttpl
mov
mov
lret
enter
cmp
adc
pushf
pop
sti
daa
sbb
xchg
daa
push
sbb
inc
inc
imul
out
mov
test
in
bound
or
mov
out
mov
imull
jle
inc
das
jle
lods
mov
or
divb
int
shr
xchg
mov
jo
xor
pop
aas
fdivrs
es
gs
lock
fsubr
pop
xchg
cmp
pop
lods
mov
insb
ljmp
ret
mov
sarb
push
mov
add
int3
ljmp
pop
or
into
sbb
ljmp
pop
mov
mov
test
mov
je
mov
mov
int
and
movsb
mov
mull
and
mov
ja
mov
adc
adc
mov
add
pop
inc
inc
lock
jno
xor
hlt
cld
jmp
jg
rorb
jecxz
pushl
xor
std
sar
mov
jg
or
stos
in
mov
jecxz
xchg
xchg
xchg
xchg
insb
xor
xor
push
daa
adcb
jns
mov
mov
mov
repnz
fidivl
ficoml
test
adc
xchg
sbb
dec
insl
xchg
add
arpl
push
mov
sub
xchg
nop
das
sbb
jnp
jae
outsl
and
insb
push
lods
add
push
xor
stos
lret
sub
out
movsl
push
test
inc
xchg
subl
les
push
nop
fildll
xchg
mov
xor
scas
inc
cs
repz
inc
pop
jns
mov
mov
xor
clc
xchg
jae
test
pusha
xor
fs
cmp
push
icebp
pcmpeqd
and
mov
leave
mov
jg
int
cwtl
das
cmp
push
test
xchg
cmp
cmp
xor
in
mov
cmc
aad
iret
lahf
leave
cmpsb
mov
ljmp
in
out
mov
popa
cmc
mulb
test
push
es
hlt
push
jg
and
adc
test
and
mov
cmp
roll
loop
mov
inc
jmp
loop
sbb
scas
dec
lods
mov
ffree
push
gs
jp
cmc
push
ja
or
xlat
pusha
mov
popf
cli
jge
xor
repz
and
insb
out
sub
dec
in
div
or
loopne
mov
sbb
out
mov
pushf
sub
mov
int
sbbb
jle
jnp
popa
mov
inc
pop
jns
test
aam
lods
or
sub
push
cmp
mov
sub
cld
movsl
cmp
dec
aam
shl
dec
mov
fwait
orb
loope
ficoms
inc
lret
es
lods
mov
paddsw
adc
fnstsw
dec
mov
dec
fidivrl
outsl
sub
call
or
add
push
in
or
sub
insb
iret
fs
stc
test
adc
and
pop
adc
or
jnp
push
mov
adc
add
ljmp
jae
push
test
cmc
pop
and
lea
jb
fucom
sbb
nop
es
sub
sbbl
lea
into
adc
and
cmp
cmpsb
dec
ficomps
bound
or
xor
cwtl
sub
jo
aad
sbb
xchg
nop
shll
sarb
xchg
adc
xor
inc
repz
dec
je
jbe
mov
fisubl
add
in
inc
stos
movsb
stos
outsl
lds
mov
ret
dec
rol
jnp
test
incl
or
jl
mov
cs
loope
icebp
testl
shlb
je
fstps
std
shrl
movsl
in
sub
dec
jmp
push
sub
aas
mov
in
jle
xor
cmp
jo
hlt
push
and
xchg
push
or
xchg
cmp
iret
cltd
jnp
pop
shll
and
fs
data16
aas
cmovge
mov
pop
push
mov
and
out
sub
mov
sub
fwait
xor
push
mov
aas
fsts
aad
sbb
lock
cld
data16
jo
push
std
neg
xor
imul
xor
pop
cmp
jecxz
inc
sbb
pop
in
dec
lods
negl
and
pop
dec
cld
aaa
jg
cmp
cmp
pop
int
jmp
xchg
sbb
mov
jbe
mov
xor
daa
mov
sub
cmc
shrl
pop
jnp
pop
lret
dec
inc
xchg
in
cs
es
mov
xchg
std
xor
lret
fmull
icebp
sbb
add
fstpl
jae
jo
aam
mov
jne
mov
arpl
out
mov
mov
daa
dec
dec
inc
gs
jmp
mov
daa
or
ds
dec
repz
fbstp
popa
sbb
adc
and
adcb
movups
pusha
out
fcoms
jmp
mov
jae
pushf
push
test
nop
pop
call
pop
or
pop
lods
pop
mov
push
push
insb
ss
ja
inc
push
aam
sbb
adc
pop
push
jl
jnp
push
mov
mov
adc
loop
dec
je
lahf
sti
loop
and
cmp
fwait
scas
jb
ret
sub
pop
cld
sti
je
ds
jbe
cmpsb
insl
and
and
nop
xchg
fisttpl
add
test
xchg
cs
enter
cwtl
add
ds
sti
push
and
mov
scas
pop
inc
mov
in
jb
mov
adc
cmp
in
add
and
popf
in
loop
add
shlb
outsb
fwait
mov
les
imul
mov
xchg
mov
jbe
or
cld
jo
pop
sbb
lods
pop
push
sub
outsb
adc
adc
rcrb
sub
rcll
cld
add
sbb
sarb
dec
clc
sbb
stc
std
jmp
test
icebp
cmc
movsl
insb
mov
push
sbb
xchg
xlat
lods
jmp
push
push
arpl
gs
add
xchg
push
ret
cmc
aaa
push
in
sub
ljmp
addb
jge
in
out
sub
lea
std
imul
rcll
pop
insb
mov
repnz
jle
mov
insl
and
cmpsl
push
in
sub
xchg
jmp
inc
cmp
sahf
testl
lret
and
dec
jmp
mov
or
adc
das
mul
test
test
sbb
xchg
xor
mov
cld
add
les
out
sbb
or
xchg
inc
jo
xchg
add
inc
fwait
sbb
movsl
call
mov
imul
test
jmp
pop
xchg
mov
daa
insl
jo
enter
cmc
xchg
mov
cmpsl
mov
in
dec
cmp
ja
mov
je
sarb
add
inc
add
pusha
ds
das
sub
sahf
dec
mov
mov
dec
into
repnz
adc
dec
adc
imul
cmp
jnp
push
add
lods
ja
add
clc
xor
and
clc
je
add
ss
ljmp
cwtl
mov
fdivrp
jae
cmp
test
mov
aad
or
mov
push
imul
cmp
cmp
inc
shlb
fiadds
mull
mov
inc
jne
icebp
dec
dec
mov
cltd
mov
dec
xchg
bound
lahf
xchg
out
cli
push
cmc
cmp
mov
in
leave
and
out
mov
stos
sti
movsb
push
push
xor
pop
mov
mov
adcl
imul
mov
lds
ljmp
and
ds
pushf
aad
add
sub
movsl
std
inc
stos
jbe
push
push
mov
je
mov
out
ss
or
bound
mov
sbb
pmullw
cmc
push
in
mov
dec
mov
mov
mov
pusha
sete
into
hlt
ret
subb
push
mov
sbb
out
sbb
shlb
in
sahf
popf
dec
lret
mov
push
sbbl
sti
lock
iret
mov
lahf
adc
cwtl
adc
jb
lea
sti
fcoml
inc
ret
faddp
fbld
es
adc
cs
sub
mov
and
loopne
push
cmpsb
adc
lock
hlt
adc
fwait
addl
sub
pop
iret
pop
jae
popf
xchg
aad
inc
stc
mov
mov
pop
add
jle
jo,pt
add
shlb
push
lds
adc
cmp
es
xchg
sub
fisubl
pop
stc
dec
dec
mov
stos
jmp
sti
inc
jno
out
jns
call
jb
pushf
pop
fildll
inc
and
jnp
add
adc
ss
clc
inc
rcrb
sbb
sub
mov
dec
ljmp
xchg
ret
sub
inc
scas
ror
sbb
sub
sahf
mov
adc
pop
test
xchg
icebp
fisubrs
xchg
push
iret
fs
dec
inc
mulb
jle
pop
leave
xlat
lods
js
js
rorl
sbb
fisttps
mov
jnp
jo
pop
imul
fstpl
ss
adc
mov
negl
inc
pop
xor
pop
mov
arpl
pop
jae
xchg
push
in
aad
jne
arpl
scas
gs
into
inc
mov
add
add
mov
sbb
inc
fldt
mov
mov
add
mov
and
stos
and
cmp
mov
xlat
sub
fs
xchg
call
push
pop
push
repnz
mov
jl
xchg
aad
sub
jae
movsb
cs
pop
mov
xchg
inc
pop
cli
xor
mov
add
pop
pop
pop
mov
popa
add
ret
push
add
shrb
out
jbe
or
inc
sbb
inc
dec
rolb
out
xor
mov
sti
sarb
xorb
and
fnstsw
fwait
lods
dec
inc
rclb
push
add
lahf
mov
xchg
int
jmp
adc
mov
ffreep
repnz
mov
outsb
push
lods
outsb
rclb
mov
and
cmp
mov
test
ret
fwait
imul
adc
xor
sub
jo
sbb
mov
jbe
push
mov
or
adc
aaa
sub
lods
sub
push
fucomip
push
movsb
sub
subl
aad
and
into
xchg
icebp
jecxz
jecxz
push
pop
scas
icebp
xchg
mov
push
sbb
in
jp
or
in
xchg
push
jg
sub
and
xchg
inc
jp
imul
xchg
xchg
jo
cld
ja
lret
sub
fistl
push
mov
je
outsl
cmc
dec
aas
push
xor
push
mov
sbb
jmp
jl
sti
fwait
lcall
ret
xchg
loopne
fucomip
fwait
es
mov
pop
and
cmp
fcmovnu
and
and
xor
push
shrl
jae
popf
mov
inc
aad
pop
mov
xor
xchg
ret
push
jl
jae
cmp
and
jb
sbb
aaa
sbb
pop
jno
movsl
jo
jecxz
out
inc
adc
ret
adc
neg
cmp
inc
mov
sub
push
pop
inc
push
xchg
add
or
inc
dec
js
aaa
xlat
stos
dec
xor
mov
sarl
or
jb
test
test
loop
mov
nop
lods
dec
adc
inc
loopne
stos
pop
cld
lret
xlat
sub
dec
jb
ljmp
sub
jg
lods
push
in
rclb
mov
jb
mov
in
int
fwait
stos
fldcw
pop
call
lods
sahf
idivb
das
shrb
in
dec
sarl
dec
sub
sti
sub
call
cmp
inc
data16
ljmp
pop
or
sub
repz
fimull
es
adc
add
dec
cltd
sub
jle
pop
dec
pop
fsubrs
je
mov
das
xor
cwtl
and
loopne
lock
jb
and
ret
dec
ss
hlt
xor
pop
cltd
or
mov
xchg
add
or
clc
jns
cmpsl
jno
add
xchg
jge
xor
ficompl
jecxz
insb
xchg
jnp
jb
push
jl
xchg
dec
repz
daa
push
adc
push
out
sbb
ret
fisubl
cli
or
push
icebp
insl
fidivs
dec
cli
xchg
add
dec
addr16
loope
lcall
add
cmp
dec
repnz
xchg
lods
insl
lds
add
divb
push
mov
in
cli
outsb
or
mov
repnz
push
xchg
inc
dec
fwait
jnp
hlt
pop
cld
mov
daa
jbe
pusha
outsl
fistpll
aad
ss
adc
int
mov
pushf
ljmp
dec
sub
faddl
rcl
cmp
xor
ss
push
cld
outsb
daa
movsb
scas
or
adc
mov
mov
xchg
pop
outsl
or
sbb
push
in
aam
loope
lret
stos
call
adc
pushf
pop
push
xor
rolb
lcall
push
pop
loopne
stos
lods
add
and
pop
lock
mov
in
pop
inc
flds
sub
mov
mov
push
icebp
xor
xchg
movsb
sarb
cmpsl
scas
ret
subl
movsl
icebp
outsl
cmpsb
out
lods
adc
xor
ljmp
or
or
lahf
fldcw
into
push
ljmp
movsl
mov
inc
or
subb
imul
stos
sbb
and
ficoml
fldt
popa
icebp
es
adc
xor
jmp
sub
mov
or
stc
rcrl
jno
jns
data16
ja
out
movsl
mov
mov
lret
test
or
ret
xor
add
dec
xor
jns,pt
repz
int3
daa
cmp
repz
jmp
fists
inc
push
lock
rcrb
lret
cmpsl
fmuls
test
into
push
sub
add
enter
push
pop
sub
scas
or
adc
in
lcall
mov
sbb
jns
out
pop
xor
xor
je
fucomp
sarb
lea
ret
push
and
fistl
nop
mov
into
into
and
and
imul
movsb
xor
fs
mov
out
outsb
push
push
mov
cmp
cmp
cmp
nop
sbb
xchg
aaa
xchg
clc
mov
aaa
push
jo
fisubs
adc
adc
mov
push
insl
xor
xor
mov
fcomps
insb
imul
jnp
roll
cltd
rolb
repz
cwtl
mov
dec
adc
das
data16
movsb
ret
and
outsb
and
sahf
push
cmp
sbb
insl
ljmp
aaa
loope
adc
sbb
mov
pop
pop
add
or
ficomps
fs
sbb
mov
cld
ds
mov
movsb
arpl
sub
xchg
sti
pop
cmc
and
int3
inc
mov
mov
scas
or
mov
xor
ret
sbb
mov
pop
pop
sbb
push
inc
push
cmp
pushf
inc
push
rol
ss
shlb
cmp
fsubs
insl
push
popa
push
and
sbb
ret
les
cmp
test
cmpsl
andb
loopne
out
fldenv
ret
stos
push
cld
lret
mov
and
in
adc
lret
mov
add
js
outsl
sub
mov
out
lds
cwtl
clc
mov
das
pop
leave
leave
sub
icebp
add
cld
sub
inc
mov
movsb
jns
mov
xchg
fcomi
ret
ret
cltd
repz
xchg
imul
mov
jne
clc
sub
sahf
mov
mov
rcll
ja
ret
add
lods
sub
jmp
aas
jg
xlat
mov
push
adc
add
inc
fs
cmpsb
sub
sub
out
shlb
push
or
call
mov
aas
mov
fiadds
mov
repnz
cmp
stos
dec
loopne
jnp
pop
aad
pop
dec
dec
shlb
mov
mov
leave
dec
inc
aaa
fyl2xp1
cmp
xchg
dec
mov
inc
push
push
sub
mov
inc
push
sub
jp
or
bound
mov
addr16
imul
mov
test
push
adc
sarb
out
mov
xchg
imul
fdivs
cltd
lcall
and
inc
and
clc
mov
and
and
cs
or
clc
lods
fistl
adc
mov
push
pop
jne
mov
loopne
inc
aas
jne
icebp
std
pop
inc
insb
loope
adc
inc
sub
and
sbb
or
sbb
mov
cmp
mov
pop
test
or
mov
xchg
repz
inc
cmpsl
sbb
dec
les
mov
imul
mov
jo
ror
iret
shlb
jne
xchg
inc
push
mov
mul
and
mov
aam
adc
pop
out
aad
out
mov
fs
lds
xchg
sub
pop
fwait
loope
pop
scas
xor
adc
icebp
stos
adc
push
rcl
push
adc
imul
jge
dec
pop
or
mov
dec
imul
lret
into
imul
lods
mov
pop
and
jle
hlt
xchg
sub
or
xchg
cmp
popa
fiaddl
inc
push
psubb
adc
mov
jl
add
mov
mov
rorb
loopne
scas
call
jle
out
mov
loopne
jo
jmp
lock
nop
lods
aas
out
push
push
aad
xchg
icebp
test
xchg
icebp
cmp
adc
sbb
lret
dec
pop
sbb
and
mov
push
sub
and
ret
adc
arpl
cli
and
jmp
jle
jno
pop
add
aam
jae
xlat
imul
into
fdivr
sahf
subl
push
popf
insb
adc
lock
sbb
ljmp
or
movsb
insl
stos
pop
sub
outsl
cmp
jnp
loope
xorb
stos
dec
and
or
cmp
inc
xchg
enter
shrb
xchg
out
pop
sub
push
nop
pushf
sub
iret
ficoms
inc
adc
outsl
mov
adc
sub
lret
iret
and
xor
jns
push
inc
mov
movsl
xchg
cmp
ret
fcmovnb
or
in
loop
mov
cmp
inc
leave
fcoml
je
ja
add
cli
sub
repnz
lods
push
xchg
in
mov
xchg
pop
je
dec
loope
pop
flds
test
sbb
or
pop
cs
aaa
jp
daa
inc
jns
xchg
sti
dec
fcmove
sub
test
jmp
jg
mov
add
sub
jecxz
push
jg
loop
xor
jecxz
jecxz
dec
icebp
or
mov
std
add
adc
xor
xlat
and
je
jne
mov
and
lcall
repnz
xor
inc
xor
pushf
mov
cmp
cld
push
cmpsl
shrl
inc
or
test
push
add
mov
adc
jae
incl
ficompl
adc
in
mov
shll
jl
ds
mov
pop
mov
ficomps
movsl
rcrb
out
scas
mov
ss
es
inc
pop
mov
out
mov
fs
cld
jl
push
cld
cltd
xchg
nop
insb
sub
shrb
adc
jecxz
js
test
std
jmp
sub
sbb
inc
add
andb
xor
xchg
scas
sarb
outsb
mov
push
xchg
scas
in
aam
jg
shlb
mov
decl
xor
aam
icebp
aaa
jne
mov
cwtl
movsb
jnp
nop
mov
cmp
outsb
out
sbb
pop
xchg
pop
arpl
and
xchg
xor
movsl
jmp
push
pusha
subl
cmp
pop
or
sub
clc
lret
xor
btc
mov
mov
sti
sub
lds
xchg
dec
outsb
outsb
dec
cmc
mov
push
loop
xor
hlt
out
and
cmp
inc
xchg
add
or
jne
add
xor
pop
xchg
insl
data16
adc
les
and
pop
pop
push
inc
leave
sbb
push
mov
push
fmul
inc
int
dec
les
adc
sbb
fcmovnb
loope
or
push
adc
roll
scas
int3
xor
arpl
rcl
mov
ljmp
xchg
in
les
push
xor
out
movb
cmp
cmp
add
test
cmpsb
les
xchg
into
add
popf
cmp
lcall
outsb
mov
cmc
sub
mov
inc
or
pusha
cltd
xchg
addr16
push
push
rolb
mov
xor
in
rorb
mov
inc
mov
jl
stc
sbb
inc
jp
pop
jae
out
mov
mov
outsb
aam
mov
push
fcomi
push
popa
xor
sbb
and
loop
bound
jmp
jo
pop
sbb
push
add
insl
cmp
mov
or
in
rcrb
roll
lahf
sbb
cmp
sub
test
ret
loope
jnp
dec
les
test
cmp
mov
out
xchg
shl
cmpsl
cmpb
or
faddl
or
lret
cmp
push
mov
sbb
sbb
sbb
pushf
xor
in
repz
mov
ret
loopne
ljmp
or
mov
jbe
fs
aad
mov
mov
je
nop
sbb
lock
xchg
pusha
ret
test
mov
jp
dec
sbb
dec
notl
aad
in
jno
mov
stc
mov
xor
fs
xor
push
mov
in
cmp
and
lcall
mov
fdivs
and
pop
ds
bound
lcall
add
out
test
dec
dec
dec
or
ss
addb
arpl
jne
dec
fnstenv
and
and
sub
dec
xchg
hlt
insl
aas
mov
jp
out
dec
xor
jne
sti
fcomps
outsb
mov
pop
xchg
cld
outsb
les
ds
or
or
outsl
pop
xor
xor
fists
push
jns
gs
inc
test
jge
xchg
mov
sahf
sbb
mov
mov
test
adc
push
lods
and
cld
pop
dec
lea
shr
shlb
pushf
or
loop
mov
int3
pop
sub
cmp
xor
xchg
push
xchg
sbb
sub
mov
push
pop
xchg
pop
pop
lods
int
add
mov
pop
add
in
mov
mov
mov
mov
movhlps
aad
cmp
into
sub
test
jae
push
clc
cmpsl
insl
shr
stos
sahf
pushf
pop
xlat
push
int
scas
dec
aam
xchg
lret
mov
imul
mov
sub
fcompl
push
sbbb
inc
dec
imul
out
mov
inc
push
sbb
dec
loop
mov
je
ss
add
or
imul
cmpsl
pop
dec
xchg
push
cmp
cmc
movsl
not
cwtl
sbb
cs
push
insl
sbbb
and
xor
js
xor
adc
shl
loope
cmp
xor
mov
test
or
sub
fisubs
add
jge
inc
ljmp
jge
hlt
imul
dec
jnp
hlt
movsb
into
lret
out
loope
in
dec
mov
xchg
ret
jo
mov
mov
sub
scas
xchg
jne
int
lods
or
fstl
inc
pusha
outsb
adc
rclb
dec
in
andb
mov
xchg
xor
jb
mov
jecxz
leave
imul
mov
dec
push
ljmp
clc
and
in
pushw
mov
push
xchg
dec
mov
and
ret
fistps
inc
icebp
jb
test
in
dec
fimull
fwait
push
xor
mov
scas
adc
push
xor
pop
aam
sysexit
shlb
lret
out
jnp,pt
push
pop
cli
fwait
scas
outsb
jnp
in
mov
mov
and
daa
and
enter
adc
stos
mov
sub
outsl
imul
and
pop
push
pop
lods
test
xor
aad
fs
mov
and
push
out
adc
mov
cltd
fiaddl
dec
or
dec
cmp
lds
scas
pushf
push
mov
gs
mov
cmpsl
pop
repnz
in
cwtl
mov
push
add
jecxz
faddl
xor
cmpsl
push
movsb
bound
int3
test
sub
mov
push
mov
out
add
lret
mov
insb
sbb
dec
cmpsb
nop
mov
sbb
or
sub
in
mov
jnp
pop
stos
push
and
mov
mov
ficompl
pop
and
out
mov
inc
in
jecxz
cs
dec
nop
dec
mov
xchg
ds
ja
movsl
pop
test
xor
nop
cmp
loope
fwait
pop
sub
pop
adc
lods
sbb
sub
and
jno
push
jmp
std
lods
test
sbb
rclb
nop
outsb
adc
imul
cli
test
mov
or
adc
pop
fistps
ljmp
jbe
dec
repnz
sbb
ret
les
movb
mov
leave
push
mov
push
ret
cmp
aas
orl
dec
jno
aaa
sbb
mul
mov
fisttps
aaa
fmul
inc
jg
sbbl
notl
sbb
xor
rcrb
bound
test
aad
mov
lods
popa
pop
pushf
mov
sbb
js
leave
lea
adc
jae
lahf
mov
pop
or
fisubl
xchg
mov
je
pusha
shll
jo
loopne
aad
stc
xor
add
sar
jecxz
jb
rcrb
xchg
mov
enter
pop
arpl
lahf
cmp
sub
call
mov
idiv
cwtl
inc
mov
lahf
pop
push
or
mov
jbe
icebp
out
mov
jne
test
xor
out
clc
mov
or
xchg
pop
cmp
insl
cmpsb
pusha
loop
aad
fdivrp
leave
mov
xor
cmc
fidivl
lcall
es
shll
repz
mov
outsl
and
jne
add
inc
cwtl
movsl
pop
push
stos
sarb
movsb
shrb
cmpsl
add
es
inc
dec
dec
test
cld
fcom
rcr
addb
jmp
emms
in
mov
cmp
push
adc
in
sarb
dec
lret
roll
or
loop
dec
outsb
std
in
fs
dec
dec
adc
int
stos
sub
pop
sti
jo
push
sub
mov
popf
repz
loope
mov
gs
not
pop
cld
xlat
lahf
jge
push
sub
mov
and
movsl
into
dec
outsl
scas
sahf
push
lods
pop
xor
les
and
pop
mov
mov
mov
outsl
mov
dec
add
out
adc
in
cmpsb
sbb
cmpsb
mov
daa
sbb
sbb
mov
push
call
fsts
jne
cmp
int
jo
in
jmp
push
or
div
lea
getsec
leave
xor
adc
pop
scas
add
fwait
adc
movntps
jbe
std
lahf
pop
sbb
mov
into
adc
mov
rolb
dec
push
incl
clc
cld
stos
and
and
cld
cmp
fwait
push
call
add
loopne
xchg
jmp
fwait
out
arpl
or
sbb
jmp
mov
std
cmc
repnz
xchg
movsb
mov
adc
fmul
xchg
xchg
mov
pop
ljmp
push
sbb
jg
imul
iret
ret
inc
leave
rolb
scas
pop
mov
mov
pushf
rcll
sub
movsb
mov
jmp
cmc
cltd
mov
or
fmulp
mov
pop
push
xlat
enter
add
push
sub
sub
jmp
ja
and
or
std
inc
jmp
xchg
cmp
sti
loopne
aas
cmp
lock
scas
push
cmp
and
sbb
mov
adc
sbb
ret
or
call
adcb
mov
mov
jmp
xchg
je
in
pop
cmp
add
ss
sub
inc
nop
cli
sar
sub
fstpt
repz
repnz
gs
pop
sub
dec
dec
pop
pushl
fwait
test
and
jg
cmpsl
inc
sti
popa
dec
sub
fidivs
out
scas
mov
outsl
mov
mov
scas
pop
aad
cwtl
cmp
xor
xchg
xor
xor
jmp
adc
or
push
mov
jne,pn
sbb
xor
push
cmp
cld
ds
push
mov
aam
ret
adc
jmp
shrl
loop
or
mov
push
mov
bound
push
xchg
loope
push
or
push
cmpb
mov
and
movb
adc
adc
out
xor
pop
inc
idivl
shll
cmp
loopne
stc
fdivl
les
inc
test
mov
data16
cmpsl
lcall
leave
mov
scas
mov
push
das
mov
test
into
inc
cmpl
adc
lcall
push
jno
xchg
mov
mov
xchg
ret
add
hlt
add
repnz
mov
dec
dec
push
xor
mov
push
inc
sar
ja
xorb
shrb
pop
jnp
dec
push
pop
sub
aad
or
cmp
lcall
mov
lahf
ror
mov
pushf
push
pop
or
scas
aaa
mov
lcall
cmc
mov
lret
mov
mov
or
sub
xchg
pop
rolb
insb
mov
cwtl
lret
test
mov
and
lods
cmpsl
fcompl
and
mov
jo
shrb
fisubrl
adc
mov
push
imul
xchg
xchg
inc
stos
mov
popf
int
into
in
cmpsl
fisttpl
ret
pop
test
or
jp
not
test
imul
add
or
popa
lcall
and
or
jns
xchg
scas
xchg
add
icebp
movsl
adc
inc
scas
insl
stos
mov
dec
addr16
das
cmp
mov
or
mov
mov
add
aad
sub
outsl
jb
loopne
jnp
stc
mov
mov
mov
pop
dec
push
insb
pop
hlt
pop
inc
and
pop
inc
sbb
mov
mov
or
cltd
daa
mov
adc
out
movsl
in
or
and
add
cmc
sbb
pop
rorl
jecxz
in
sbb
imul
jle
out
jmp
rcrb
into
popf
test
in
xor
aad
xor
jne
int3
sub
dec
outsb
cltd
lahf
sub
stc
iret
addr16
repnz
pop
xor
jle
pop
ret
xchg
xchg
insb
test
jae
icebp
push
adc
inc
dec
and
int
das
or
in
adc
dec
or
jne
xchg
lcall
inc
in
pop
cmc
and
daa
xlat
loope
mov
jb
jg
xchg
imul
nop
fistl
lock
repnz
shrl
adc
shlb
and
popa
rcrb
pop
xor
mov
pop
jb
hlt
push
dec
push
add
and
or
sub
lods
cmp
aaa
inc
push
and
xor
lock
in
jl
je
les
lret
pop
push
daa
inc
ret
lea
movsb
outsb
lock
lcall
jge
xor
pop
and
icebp
test
in
jp
push
inc
in
jno
jbe
mov
call
decb
and
push
mov
adc
push
cwtl
mov
jge
mov
rol
add
cwtl
add
and
cmp
hlt
mov
inc
add
mov
in
pop
aaa
mov
aad
adc
lret
and
insb
addb
pushf
mov
in
das
into
test
fdivp
or
mov
pop
and
sub
in
xlat
mov
fmull
bound
pop
loopne
dec
cmc
div
repz
int
push
mov
repnz
and
xrelease
inc
aam
xchg
add
xor
dec
pusha
arpl
adc
popf
mov
sbb
xlat
in
and
mov
sti
pop
mov
jbe
sub
jl
dec
popa
pop
sbb
dec
cmp
mov
pop
popa
pop
inc
adc
sub
cmpsl
mov
aas
insl
mov
cltd
pop
leave
adc
adc
clc
sahf
dec
icebp
sbb
cmp
pop
sbb
push
in
push
xchg
repz
jb
xor
inc
and
sub
mov
mov
outsb
stos
fildll
xor
xchg
lret
lcall
sub
ja
lret
adc
in
sti
fsubrs
fwait
pop
or
out
dec
popa
shl
pusha
ds
lcall
adcl
dec
fdiv
movsl
cmpsl
nop
pop
mov
pop
scas
test
mov
jg
cli
stc
pop
repnz
mulb
jns
sub
in
fs
outsb
into
pop
push
lcall
sub
sbb
adc
test
mov
mov
mov
lods
cli
sub
lock
inc
mov
pop
cmpsb
push
icebp
lods
and
lock
cmp
pop
sbb
push
enter
push
in
inc
push
xchg
cld
fdivs
shlb
sbb
in
xchg
or
xorb
sbb
mov
cmp
or
repz
pop
nop
mov
bound
sub
shr
lods
aas
inc
mov
lea
xor
mov
jns
shr
sbb
jg
add
xchg
in
das
mov
repnz
into
outsl
mov
xchg
push
outsl
imul
iret
xor
fsts
rol
mov
pop
rorb
or
push
ret
bound
clc
lret
sbb
pushf
jmp
cmp
push
arpl
call
test
das
jl
ljmp
popf
inc
ret
loop
lret
das
jg
iret
ss
adc
pop
out
pop
inc
hlt
add
dec
outsb
xchg
daa
lods
xchg
sbb
data16
inc
add
cltd
xchg
mov
les
insb
cmp
and
iret
negb
xchg
cld
cmp
lahf
dec
int3
test
jle
sbb
mov
std
imul
inc
aas
xchg
jno
xchg
daa
jns
push
mov
in
inc
or
push
imul
mov
jle
es
subl
out
lea
lahf
lock
mov
push
jae
in
fldenv
adc
dec
sbb
push
scas
sub
push
lea
das
fucomip
fxch
or
pushf
adc
xchg
mov
scas
sub
cmpsb
or
jns
ljmp
adc
mov
leave
add
test
ljmp
psrlw
and
mul
and
and
arpl
fdivrl
iret
pop
xchg
pcmpeqb
movsb
add
repz
out
jo
jmp
mov
sbb
pop
push
mov
lret
add
inc
fs
xchg
jbe
lcall
popa
cmpl
pop
gs
jo
stc
mov
cli
and
fdivrl
clc
orb
jae
mov
inc
and
pop
jp
mov
pushf
cld
es
mov
loope
cmp
fdivrp
cmc
and
fmuls
arpl
inc
jbe
ss
mov
and
mov
xchg
nop
cs
into
dec
dec
data16
inc
cmp
fdivr
imul
dec
inc
jns
xchg
je
loope
repnz
stos
js
icebp
mov
stc
icebp
or
adc
in
mov
gs
lcall
and
mulb
adcb
mov
in
and
loopne
minps
push
enter
jg
xchg
adc
into
cmp
lock
jl
mov
inc
adc
fbld
enter
mov
mov
and
aas
mov
sub
andl
cld
push
cmpsl
loopne
fsubs
rorl
addr16
scas
mov
mov
mov
lahf
jg
xor
add
sbb
push
xchg
sbb
repz
or
pushf
dec
push
xchg
xchg
cmpsb
icebp
sbb
jp
in
sub
cld
arpl
cmp
or
sbb
les
mov
xchg
aaa
dec
dec
sti
cmpb
iret
sti
cltd
push
stos
inc
pop
vpunpckldq
inc
shr
repnz
push
xchg
mov
mov
loopne
push
stc
push
in
sub
adc
jecxz
outsb
and
push
jae
test
hlt
jmp
inc
sbb
ret
sbb
sbb
xor
stc
aam
in
jp
insb
or
or
and
xchg
lods
jno
ljmp
outsb
jae,pn
push
rorb
and
jp,pt
and
fnstenv
lret
aam
stos
sub
pop
push
pop
xchg
jo
loopne
into
or
xor
adc
pop
lock
lock
sbb
orb
pop
lds
pop
mov
lods
movsb
adc
aam
das
push
or
cmp
rcr
cmp
pushl
ds
dec
cmp
pop
xor
cli
jmp
fwait
fs
add
cltd
movsb
fldt
daa
insb
add
cmp
aam
mov
pop
add
sub
pop
jg
rcr
inc
xchg
arpl
ja
loop
shrb
xor
aas
ret
fisttpll
mov
cmp
popa
stc
pop
pop
sbb
pop
pop
pop
stos
push
cld
sbb
push
pop
mov
mov
push
test
rol
leave
adc
jmp
inc
mov
mov
lods
mov
outsl
rcrl
out
adc
push
fdiv
imul
cwtl
repz
mov
sbb
les
jmp
cmp
jae
loope
rol
jmp
pop
mov
lods
dec
jp
mov
inc
dec
adc
fsubs
cmp
dec
jl
les
fwait
cmp
cmpsl
xchg
daa
mov
xchg
data16
cmpsb
cmpsl
jb
jge
pop
stos
fcomi
subb
adc
sahf
out
jnp
jae
rorl
and
popf
xchg
leave
pop
data16
dec
aaa
xor
hlt
cmc
lods
jmp
sbb
out
out
sub
cmp
roll
into
dec
testl
and
sbb
or
sbb
es
xlat
sub
js
dec
addr16
fisubrl
daa
push
add
in
and
inc
xor
add
sbb
mov
insl
addl
inc
cli
jl
aaa
push
cmpsb
aad
xchg
nop
bound
inc
mov
add
imul
cmovne
rolb
out
mov
mov
inc
int3
mov
dec
push
xchg
pop
in
mov
lcall
mov
push
lcall
add
pop
jno
pop
sbb
shrb
rcr
pop
xchg
xchg
sbb
mov
push
or
pop
inc
mov
add
shr
das
in
in
push
out
aad
call
aam
xchg
dec
jmp
mov
jmp
xor
xchg
int
mov
inc
or
mov
popf
es
sbbl
lret
cmpsl
aaa
push
shll
insb
out
clc
inc
adc
mov
pop
push
adc
or
xor
push
stos
jbe
aad
popa
fwait
jo
sub
mov
push
rcrl
lret
leave
mov
imul
sub
sti
sub
xchg
adc
mov
cmp
cmp
lret
int3
shll
test
jne,pt
or
xor
mov
inc
andl
inc
xor
shlb
cmpb
lcall
pop
or
mov
jbe
cmp
pop
mov
in
out
rcrl
cwtl
add
mov
mov
mov
add
repz
jbe
out
push
lds
mov
xchg
into
insl
mov
movsb
jne
dec
jo
add
jbe
in
gs
je
push
bnd
dec
mov
fwait
mov
les
or
fbld
lock
push
cltd
and
jge
push
adc
stc
or
aaa
aad
sbb
shl
aad
or
mov
popa
fstpt
mov
cmp
mov
nop
popa
es
aaa
data16
pop
inc
movsb
mov
jae
push
lret
sbb
inc
loop
jns
adc
adc
cmc
lock
adc
mov
or
mov
jcxz
pushf
popa
add
iret
mov
fldcw
mov
xor
mov
sub
add
fistl
add
jmp
mov
in
sub
lock
or
adcl
hlt
mov
push
imul
adc
insl
jo
movsl
xchg
or
mov
repnz
mov
dec
fs
xor
popa
cmp
add
daa
adc
lret
repnz
pusha
das
imul
jns
pop
in
hlt
cmc
cmc
xchg
lods
xchg
cwtl
mov
or
hlt
dec
aam
cmpsb
sbb
xor
mov
mov
stos
in
and
arpl
adc
jb
sub
out
push
mov
ja
movzwl
pop
loop
push
sbb
cmpsl
xor
insl
loopne
mov
fldl
in
divb
mov
sub
cmp
rcrb
xchg
dec
into
int
arpl
inc
in
pop
sbb
or
sbb
push
sub
mov
push
xabort
push
inc
push
xchg
add
add
int3
push
inc
inc
sbb
outsl
sub
sti
add
mov
pop
ds
mov
push
xchg
js
bound
xchg
push
aam
or
push
pop
mov
adc
xor
cmpl
xchg
sbb
out
aad
dec
push
faddp
fildll
rcrl
aad
or
es
sub
jns
push
mov
push
mov
xor
dec
int3
sub
xor
xchg
hlt
stos
mov
sbb
test
push
out
ljmp
and
fcoms
jo
seto
jno
ds
mov
mov
loop
hlt
mov
add
lods
and
roll
pusha
jnp
or
adc
pop
add
mov
mov
dec
and
leave
into
inc
hlt
xor
lret
add
pop
negl
adc
fldenv
mov
xor
pop
js
cwtl
mov
and
cmp
fisttpll
and
and
jle
jge
test
push
mov
push
sbb
test
push
xchg
mov
in
jecxz
insb
cmpsl
pop
out
xor
mov
aad
loop
mov
jge
add
mov
sub
je
out
add
pop
std
hlt
push
shlb
jae
jb
ljmp
dec
cmpsb
repz
cmp
mov
push
je
jae
and
insw
jg
lcall
lods
out
dec
sbb
lret
xchg
scas
mov
dec
dec
inc
sub
enter
fwait
mov
int
jp
loop
enter
inc
lds
rcll
loopne
adc
mov
add
cmp
and
dec
xchg
push
mov
jl
aas
mov
jno
and
xchg
sbb
xchg
lods
hlt
fidivrs
mov
xor
jl
jecxz
fidivs
adc
mov
bound
dec
xor
shll
repnz
jmp
and
mov
dec
mov
xor
or
fnsave
scas
and
gs
sbb
and
leave
test
sbb
lea
out
mov
sbb
xchg
sub
jne
dec
mov
sbbl
adc
mov
and
dec
sbb
jb
push
rclb
cld
add
lods
cmpsb
jo
cmp
pop
or
pop
push
adc
pop
adc
push
adc
xchg
ljmp
jg
iret
into
xchg
mov
pop
incb
jge
push
jmp
pop
xor
fsubrs
adc
lahf
push
lcall
pop
pop
inc
mov
fsubs
js
mov
hlt
daa
jp
arpl
shll
add
jecxz
call
jl
push
push
popa
push
xor
adc
test
fadd
insl
fcmovnbe
stos
pop
cltd
sbb
push
or
jl
imul
push
and
xchg
loopne
xlat
rcrb
sub
xlat
scas
adc
push
jp
jmp
movsb
daa
or
sbb
adc
inc
divb
lods
inc
orl
subl
fsubr
cmpsl
sbb
jp
mov
inc
imul
mov
pop
orb
push
mov
lods
addr16
and
mov
shrl
push
lds
ja
push
sbb
inc
mov
inc
cs
jle
movsl
cld
or
push
dec
dec
add
xchg
sub
mov
cmp
aad
xor
mov
push
or
das
icebp
jmp
push
scas
std
jbe
stc
into
inc
movsl
adc
mov
lods
pop
adc
inc
push
mov
adc
bnd
jns
cmp
push
pop
out
mov
cmpsb
jnp
mov
repnz
jmp
cmc
push
dec
sbbl
cli
cmp
notb
daa
fcoms
call
xor
push
insl
test
adc
mov
int
mov
push
xchg
mov
stos
out
shrl
pop
movsl
cmp
fcoml
jle
insl
mov
or
gs
es
xchg
aaa
sbb
xorb
dec
loop
xchg
xchg
ja
jmp
daa
arpl
and
je
cmp
les
scas
pop
daa
or
adcl
ja
pusha
leave
and
fnstcw
fsubl
aad
movsl
push
call
adc
mov
lcall
xchg
xchg
mov
xchg
in
mov
xchg
mov
rcll
dec
imul
loopne
push
xor
cli
jl
repz
jecxz
xchg
stc
shrb
cmpsl
enter
subl
icebp
cwtl
dec
aaa
aam
bound
or
fldl
cmp
lret
lds
jnp
pop
aad
push
daa
icebp
push
lret
rolb
mov
inc
mov
lds
fldl
push
mov
aas
xchg
mov
sub
fldt
cmp
push
outsb
movsl
jl
mov
imul
hlt
xchg
lcall
xlat
loope
stc
cmpl
inc
out
sahf
pop
je
pop
out
add
inc
xchg
hlt
mov
cmp
test
mov
lods
daa
test
imul
adc
add
cwtl
aaa
pop
dec
xchg
addb
sbb
inc
movsb
push
jne
and
cmp
roll
push
outsl
orl
lods
push
in
inc
cmp
push
stos
in
stos
ret
push
in
cs
xchg
push
outsb
sbbb
stc
imul
mov
mov
mov
push
push
lcall
adc
mov
faddl
data16
pushf
pop
dec
sbb
xchg
enter
addr16
and
gs
jbe
fs
xchg
fmul
sub
xchg
mov
fdivp
and
xchg
or
scas
and
cmp
hlt
jns
loop
or
rcrb
add
mov
sub
adc
scas
bound
mov
movsl
inc
cwtl
pop
aaa
mov
push
out
cli
test
jg
xor
cmc
aad
jbe
stos
insl
or
jmp
enter
imul
xchg
popa
mov
ja
push
dec
jmp
sti
jecxz
adc
out
out
push
aam
ret
sub
out
push
dec
bound
data16
cmp
gs
rorl
cmp
sbb
mov
inc
add
push
aad
in
and
int3
ret
add
pop
jmp
test
or
insb
repnz
pop
mov
out
lods
push
xor
sub
fdivrs
sbb
and
sbb
pop
cmp
hlt
icebp
test
cwtl
push
mov
pop
aas
mov
cltd
bound
xchg
lcall
or
cmp
ja
xor
sub
fimull
ss
out
repnz
sbb
imul
cmpsl
nop
add
sub
outsb
inc
add
jmp
ljmp
jmp
aas
sbb
bound
push
in
jmp
subb
push
int3
inc
and
mov
or
sub
lock
sub
or
adc
mov
repnz
push
in
add
test
lds
test
stos
idivb
xor
lret
adc
js
loope
repz
push
call
or
adc
stos
ja
bnd
xor
addr16
inc
cmp
and
cs
movups
push
scas
xchg
fnsave
ss
in
fmull
xchg
push
loopne
sar
xor
push
bound
cmp
mov
push
pop
add
jne
aas
sti
mov
pop
clc
sbb
cld
stc
push
add
aas
nop
push
in
mov
mov
in
lock
fldenv
pop
mov
lods
dec
insb
xchg
xlat
and
mov
lods
mov
ret
add
push
imul
dec
jle
stos
aaa
aaa
mov
sub
scas
lret
or
adc
lahf
cld
in
shlb
sbb
pop
test
popa
and
fs
sbb
xlat
mov
sbb
add
jmp
stos
mov
sbb
mov
lds
add
fs
and
adc
fcmovu
outsl
inc
lahf
mov
add
push
sbb
stos
xchg
clc
fsubl
insl
jle
lret
or
shrl
sahf
jg
sbbl
jnp
push
mov
iret
je
cmc
push
push
or
push
xor
inc
fcom
in
xlat
or
xor
pop
in
notl
pop
mov
repz
mov
orb
mov
mov
pusha
pop
dec
jbe
and
xor
fdiv
ret
and
jnp
loopne
sbb
fisubrs
cmpsl
jnp
push
inc
scas
xchg
and
xor
cld
push
dec
enter
mov
lds
xor
aas
dec
lahf
jnp
push
les
pushf
stos
pushf
orl
cmp
dec
test
rclb
iret
or
mov
jae
shll
push
in
scas
cmp
sub
pop
pushf
mov
cli
mov
ljmp
leave
adcb
adc
add
jcxz
insl
or
mov
push
xor
sub
push
fwait
lods
lcall
fstpt
lcall
in
inc
push
inc
lcall
lds
lea
or
cmp
inc
cmp
cltd
cltd
out
or
dec
ret
lods
es
hlt
mov
adc
xchg
jo
outsb
push
mov
and
insb
cs
xchg
and
aaa
mov
pop
mov
xor
hlt
cmpsb
or
add
mov
push
popf
mov
loop
imul
icebp
pusha
xchg
push
or
sti
mov
xor
lods
aaa
push
jle
jno
mov
lock
xor
add
sub
aaa
sub
fisubs
mov
or
addr16
add
mov
dec
arpl
sarl
mov
pop
sti
xor
adc
out
pusha
idiv
mov
push
iret
add
and
mov
fisubrl
add
and
jbe
imul
es
rcr
arpl
in
fadd
icebp
aam
loop
sahf
mov
sub
test
sub
and
test
mov
fcmovne
xchg
fadd
repz
add
outsl
push
jns
mov
pop
adc
push
xchg
mov
sahf
mov
stc
imul
xor
lahf
dec
push
movsb
jns
xor
push
sbb
jo
cmpsl
add
or
sbb
or
out
or
push
ret
jmp
pop
dec
push
icebp
loope
push
adc
popa
lock
fcomps
dec
pop
das
mov
leave
aad
mov
xchg
movsb
inc
jno
add
ljmp
lret
sbb
lea
in
into
cmp
mov
pop
es
push
mov
and
iret
lods
repz
cwtl
jmp
mov
hlt
ret
inc
lods
push
fs
sbb
jmp
xor
daa
mov
insl
add
je
dec
pop
jae
insl
adcl
subl
xchg
xchg
sbb
dec
push
mov
and
or
imul
sbb
inc
and
xchg
sub
shll
inc
es
and
into
jge
xchg
inc
xchg
por
jp
and
es
out
iret
out
add
cmpsl
lods
fimull
inc
ljmp
add
push
xchg
mov
imul
hlt
pop
pop
fldenv
dec
insl
sarl
scas
jne
out
lea
insl
push
push
push
adc
das
and
push
lret
icebp
leave
aas
inc
cmp
inc
sti
adc
fdivrl
pop
fists
and
jle
push
insl
je
fsubrs
and
adcl
sbb
or
jno
and
push
mov
gs
movsl
or
pop
or
mov
idivl
cmp
jae
push
sar
xor
xlat
jl
push
dec
in
mov
test
add
nop
mov
and
sahf
dec
or
push
loopne
test
mov
inc
repz
in
repz
adc
sti
leave
ljmp
mov
fdivl
mov
fcoms
mov
push
lock
stos
xor
jge
ljmp
ljmp
scas
ss
ss
inc
cmp
adc
inc
jcxz
inc
mov
dec
rcll
pop
mov
mov
mov
insb
pop
es
pop
adc
push
dec
push
mov
jo
push
mov
xor
push
cmp
or
lret
pop
xlat
jg
cli
xor
mov
and
lret
mov
test
xor
mov
shl
push
mov
xor
mov
cmc
adc
jmp
popf
jo
mov
xchg
push
pop
sar
cmpsl
inc
and
fnstenv
xchg
pop
mov
cmp
std
inc
dec
pop
xchg
dec
imul
movsl
mov
add
js
gs
arpl
lahf
inc
xchg
in
push
pop
icebp
mov
lcall
mov
loop
shlb
lret
push
cmp
es
lcall
mov
add
mov
int3
mov
mov
push
sub
popf
ss
cmp
push
adc
adc
inc
orb
sbb
push
xor
jns
push
xor
pop
jns
mov
popf
add
negl
inc
xchg
fwait
pop
mov
fildl
and
pop
jp
icebp
aad
xorl
xlat
in
mov
add
jo
mov
pop
pop
ret
add
addl
ljmp
jl
lcall
dec
inc
mov
bound
xchg
cmp
xor
adc
pop
fcmovnb
dec
mov
daa
shlb
mov
xchg
and
sub
leave
cltd
add
lret
test
xor
cmp
out
mov
push
insl
out
push
sub
sti
shlb
push
push
mov
mov
mov
jae
cld
cmc
stos
cmp
fdiv
scas
arpl
push
loop
jno
xchg
loop
pushf
push
sbb
add
mov
push
dec
jno
push
in
pusha
or
xchg
inc
jle
xor
mov
insl
xchg
xor
clc
xor
imul
sub
cmpsl
inc
xor
jp
repz
or
xchg
cmc
dec
xorb
cwtl
adc
push
pop
out
movsb
inc
inc
mov
dec
cmp
mov
int3
repnz
daa
mov
gs
jmp
imul
mov
cli
insb
inc
jg
pop
jbe
push
inc
sub
cmp
mov
add
push
sti
xor
lea
adc
cmp
mov
xchg
ss
and
inc
push
mov
pop
test
xlat
stos
lret
push
xchg
out
cli
sub
push
adc
sbb
addl
push
push
xchg
lods
inc
lret
call
roll
fldcw
cmp
mov
data16
add
enter
icebp
loope
push
adc
popl
subb
push
das
push
lcall
loope
popf
lock
pusha
inc
inc
mov
add
fdivp
std
xchg
repz
cmp
pop
enter
fldl
jb
sub
clc
loop
pop
jl
jge
je
iret
mov
push
jnp
and
pop
xchg
gs
push
mov
fwait
andl
in
insb
popf
loope
xor
xor
mov
and
repnz
cmp
fiadds
call
cmp
mov
mov
aas
adc
test
xchg
insb
jg
out
cmpsl
jl
xchg
cmp
imul
je
stos
and
movsb
adc
jp
xor
stc
pop
push
xchg
push
lods
lcall
mov
mov
dec
push
mov
movsl
xchg
cmc
ret
sbb
mov
rcrb
jge
fildl
mov
fs
xchg
bound
cmc
xchg
int
ficoml
mov
mov
push
cmpb
sbb
xor
fiaddl
xor
je
out
push
inc
sub
cmp
push
test
xchg
inc
push
idivl
test
test
mov
in
in
jp
enter
push
xchg
and
inc
stos
hlt
xchg
je
or
sub
lock
rorb
xor
jns
add
mov
roll
add
lock
jnp
and
rep
stos
sbb
lds
mov
clc
cltd
or
cmp
pusha
mov
jmp
into
into
lea
mov
std
lock
insl
lods
and
sub
jnp
mov
mov
lds
or
lea
xor
add
and
lcall
mov
leave
dec
add
xchg
jp
std
cltd
cmp
pop
mov
out
xor
sub
mov
jne
fnstsw
jne
and
jbe
dec
dec
push
push
ja
mov
push
in
mov
shl
cmp
into
pop
mov
dec
inc
inc
adc
fisubrs
pop
jo
sbb
movsl
out
xchg
mov
sub
dec
lret
scas
cs
push
mov
cmpsb
sub
negl
jnp
in
test
int3
dec
xchg
repnz
imul
enter
jmp
test
rep
jg
push
mov
shl
dec
sub
xchg
mov
jge
aas
mov
ret
aam
mov
mov
cmc
test
xor
dec
int3
adc
adc
nop
lret
or
into
dec
cld
add
inc
pop
bound
arpl
mov
sbb
xrelease
ljmp
jno
leave
mov
mov
lcall
jecxz
aaa
rcrl
xor
repnz
dec
enter
cmp
nop
loopne
mov
or
jo
adc
imul
repnz
filds
sbb
pop
ret
xchg
xchg
pop
dec
and
mov
iret
mov
je
out
es
or
mull
or
push
and
sub
loopne
btr
aam
push
call
push
xchg
fbld
xlat
test
insl
push
mov
add
leave
inc
adc
mov
lods
test
mov
leave
add
lods
or
je
mov
test
push
dec
int3
and
test
pop
pop
and
and
push
push
mov
jmp
dec
in
mov
je
pop
stos
loop
inc
imulb
cmp
mov
cli
test
repz
imul
stos
lods
jle
adc
pop
pop
xlat
mov
test
adc
scas
into
jno
push
lea
and
pushl
cmp
jecxz
cltd
inc
jbe
jle
adc
push
pop
mov
popl
inc
or
cmc
daa
xchg
push
outsb
sub
xchg
pusha
jo
out
arpl
loopne
das
clc
jne
and
sahf
sub
push
fbstp
sub
add
jo
lahf
jmp
outsb
jne
or
fistpl
dec
mov
and
xchg
imul
sahf
imul
out
outsl
jmp
enter
int
pop
fimull
popa
mov
leave
aas
repz
in
inc
push
in
sub
icebp
pop
inc
xchg
push
mov
sub
lret
inc
add
mov
pop
movsb
push
mov
cmp
jmp
add
pop
jae
sbb
pop
mov
jp
sbb
pop
lret
sub
in
scas
dec
push
mov
sarl
push
test
pop
leave
fadds
out
dec
jns
xlat
cmpl
mov
test
imul
mov
iret
and
lahf
insl
and
add
add
pop
add
divb
and
or
sbb
leave
das
pop
out
pusha
mov
lahf
inc
notl
dec
int3
mul
int
xor
imul
mov
add
mov
xor
xor
push
aaa
push
cmp
stc
sub
mov
inc
and
js
gs
or
testl
dec
in
inc
ret
xchg
test
mov
scas
sbb
sbb
lds
adc
lret
ficompl
dec
jno
adcl
add
pusha
insb
lea
jae
xchg
adc
xchg
lcall
and
sbb
xor
mov
jl
adc
mov
loop
adc
xchg
fidivrl
daa
xor
sbb
add
inc
std
js
mov
repz
inc
push
pop
pop
and
repz
fxch
jae
iret
jns
lret
mov
imul
jge
cmp
aad
jl
stos
or
ja
inc
jb
add
mov
test
ret
test
mov
push
cmpb
fdivrl
mov
insb
and
xor
mov
test
scas
sbb
xor
xchg
jmp
data16
push
push
adc
push
mov
sub
sub
inc
cwtl
lods
in
dec
sbb
xchg
ret
pop
inc
movsb
hlt
inc
rcll
inc
or
imul
lcall
pop
popf
fsubs
ljmp
test
pop
push
fisttpl
in
sbb
cmpsl
jae
xor
popa
sbb
xor
inc
gs
mov
and
mov
inc
or
gs
int
xor
daa
mov
mov
mov
adc
int3
cld
imul
jnp
inc
notb
scas
mov
adc
sahf
enter
mov
loop
or
mov
jno
addr16
ja
outsb
cwtl
daa
and
or
bound
dec
js
popa
mov
xor
mov
mov
push
daa
loopne
loop
pop
ljmp
mov
fwait
and
aad
filds
es
jg
mov
jns
stos
in
mov
cli
xchg
test
cltd
popf
aad
andl
sub
out
lock
cmpl
inc
sbb
or
mov
pop
scas
rorb
clc
out
dec
adc
lcall
or
stos
int3
xor
ds
pop
xor
in
mov
fwait
pop
push
test
xor
out
je
lret
xchg
test
push
mov
jge
cmp
cwtl
data16
jge
xchg
and
xchg
lret
in
pushf
dec
mov
add
mov
xchg
out
insl
cmp
jns
mov
push
mov
lods
or
cmpsb
aas
jb
jb
xor
data16
xor
scas
test
ss
mov
loope
add
iret
or
jg
in
fwait
adc
sub
mov
aad
dec
jl
sarl
dec
aas
test
xor
jo
cmpsb
leave
rol
fwait
movsb
stos
jae
mov
dec
inc
bnd
gs
dec
jae
cmpb
andb
movsb
idivl
fucomip
add
inc
cwtl
shl
sub
mov
pop
pop
fsubrs
movb
mov
mov
loopne
jno
jl
sub
dec
enter
adc
pop
adc
mov
xlat
divl
cmp
sub
xor
xchg
mov
call
adc
or
ds
stos
icebp
dec
leave
cmp
aaa
sahf
ss
movsb
inc
fsubrs
lret
aam
test
bnd
or
sbb
xchg
std
dec
cwtl
push
pop
jno
xor
in
lahf
jmp
cmpsl
xchg
cld
dec
out
sbb
loopne
inc
mov
or
arpl
leave
out
mov
xor
mov
out
lahf
inc
adc
push
cmpsb
mov
mov
mov
stos
dec
or
and
mov
fldenv
sbb
in
add
mov
in
imul
cmp
pop
cmp
lcall
ljmp
aad
popf
add
jg
cs
cmp
hlt
add
jmp
mov
mov
loopne
les
xor
mov
mov
and
idiv
das
dec
adc
push
dec
pop
cld
nop
imul
ljmp
loope
xor
insl
fsts
jnp
lea
loopne
and
inc
pusha
add
std
sub
mov
stos
push
pop
mov
jp
popa
mov
adc
add
xor
dec
loope
stc
repz
sahf
sbb
sub
jb
dec
repnz
ja
mov
jne
mov
loop
pop
jo
lods
popa
jne
dec
xchg
sti
ret
incl
in
shlb
xor
adc
jne
fcmovnb
in
xchg
push
lahf
xchg
sahf
jb
pop
cmp
cmp
adc
push
add
arpl
mov
fldenv
imul
pop
mov
pop
and
scas
test
pop
xorb
lea
cld
xor
cmp
test
push
cmpl
jo
jmp
inc
sub
and
xchg
lds
jne
fldt
xchg
lcall
xchg
loop
cltd
and
adc
or
mov
mov
and
mov
push
lods
cld
nop
jbe
cmp
rol
inc
mov
add
fstl
and
xchg
repz
call
push
mov
inc
rol
stc
cwtl
jae
pop
iret
xor
mov
leave
je
jae
je
pop
or
shlb
pop
pop
subl
stos
xchg
lds
dec
mov
fiaddl
and
int3
xor
mov
lret
xchg
popa
notl
jb
adcl
aad
daa
push
jbe
pushf
push
cmp
lea
fidivl
and
repz
push
sub
clc
xchg
addr16
mov
cwtl
lret
pop
cltd
scas
mov
sbb
pop
sbb
dec
imul
mov
push
mov
test
ss
pop
and
outsl
popa
dec
sub
sahf
inc
sub
sub
in
leave
jmp
sub
push
inc
jb
rclb
clc
fnstsw
mov
push
arpl
xchg
mov
mov
int3
xchg
mov
into
sub
push
xchg
jmp
adc
sub
pop
jbe
pop
movsb
test
mov
inc
xlat
mov
mov
mov
in
mov
out
call
jno
movsl
inc
mov
pop
add
jl
adc
pop
stos
sbb
lods
or
push
jo
int
and
cs
and
cld
fildl
ss
mov
mov
jno
gs
ja
add
inc
aad
divl
arpl
push
test
push
dec
pushf
pop
mov
mov
mov
push
push
shlb
cmp
push
fcmovnbe
and
mov
sbb
iret
sub
sbb
lock
xchg
int3
scas
sub
pop
jb
fisttpll
push
sbb
dec
outsb
inc
fistpl
notl
enter
arpl
pop
sub
cmpsl
hlt
orl
push
stos
repz
push
cld
fnsave
data16
dec
clc
lret
add
dec
sbb
daa
out
iret
dec
inc
imul
scas
and
fadd
ljmp
push
fisubl
and
aad
and
iret
xorl
xor
sahf
dec
stos
insb
imull
inc
js
adc
cwtl
sub
mov
outsl
push
popa
cli
nop
sub
sti
mov
negl
fcom
xlat
mov
aam
fcoms
mov
insb
and
mov
sub
mov
sbb
mov
pop
iret
fcomps
jb
cltd
out
mov
cltd
adc
stc
xchg
cltd
push
sbbb
pop
loop
mov
or
push
mov
mov
mov
aam
mov
mov
add
notl
daa
mov
xor
insl
xor
sbb
adc
jne
cmc
movsl
xor
pop
insl
enter
adcb
pop
mov
mov
les
adc
pop
xor
rorb
es
out
sbbb
test
fimuls
pop
mov
adcb
xchg
rcl
fdivrl
popa
incl
adc
jmp
lsl
sahf
cs
aaa
out
jge
or
iret
les
pop
fnsetpm(287
es
adc
addr16
cmp
inc
cwtl
sbb
out
int3
das
mov
imul
cmpsb
sahf
mov
aas
xor
ja
addr16
cmpsl
or
pusha
cmpsb
mov
cmp
mov
pop
addr16
imull
arpl
jae
inc
inc
test
pop
mov
out
sbb
pusha
add
cwtl
mov
loope
xchg
adc
mov
adc
stc
sub
mov
ja
pusha
inc
push
bound
push
jg
pop
xchg
sub
add
cmp
inc
lret
cmpsl
test
pop
adc
adc
data16
jno
out
pop
test
push
shll
push
inc
mov
jb
imul
add
cli
and
xchg
pushf
mov
sbb
std
std
mov
rcrb
dec
aas
mov
and
ss
repnz
shll
lods
call
mov
lods
push
dec
cmp
xchg
adc
sti
adc
pusha
sarb
sub
js
jo
cmp
jb
in
adc
adc
pop
arpl
out
das
push
cmc
and
pop
dec
std
sub
push
popa
sbb
add
repz
jne
dec
lods
cmp
adc
dec
rorb
addr16
pop
stos
mov
jae
mov
lods
sbb
outsb
jnp
cmpb
shl
xchg
outsl
and
pop
and
insl
push
xchg
adc
sub
mov
add
mov
jae
sbb
addr16
inc
fists
fsub
mov
and
aaa
mov
mov
mov
or
jecxz
lcall
shrl
push
xor
rclb
lods
pop
xchg
xchg
or
loopne
roll
push
in
mov
negb
push
popa
mov
adc
cmp
flds
cmp
rcrl
lret
mov
sub
fadd
test
push
roll
movsl
cmp
inc
sti
xor
aas
push
sbb
pop
inc
addr16
clc
ficoml
mov
mov
daa
stos
mov
das
mov
sbb
lret
add
jo
pop
mov
dec
jnp
stc
iret
cmp
lret
mov
ror
mov
cmp
out
icebp
push
and
arpl
inc
scas
ljmp
push
add
sub
lods
push
leave
mov
inc
and
sub
sub
sbb
xchg
pop
jnp
xchg
sub
imul
rolb
sub
mov
xchg
xor
jae
adc
and
int
jnp
ljmpw
dec
or
les
sub
gs
push
sub
stos
leave
call
pop
fildl
xchg
and
clc
push
fisttpll
mov
fcmovu
xchg
outsb
daa
sub
or
test
bound
aad
or
sub
imul
fimull
lcall
cwtl
es
jge
push
or
sub
sub
popf
add
mov
js
mov
les
mov
enter
mov
test
clc
cwtl
ret
dec
addr16
int3
dec
lahf
push
push
ljmp
xor
jge
mov
xchg
jae
in
ds
adc
lret
inc
rcrb
cld
sbb
sbb
push
sub
je
arpl
sbb
int
fisubl
js
and
inc
ret
mov
or
jecxz
fidivrl
ljmp
out
inc
and
sbb
push
in
rolb
xorl
inc
out
clc
loopne
mov
outsb
daa
inc
stc
push
xchg
jns
es
pushf
push
cmp
sbb
jmp
mov
adc
xchg
xchg
outsl
shrb
lcall
popa
fisttpl
sbb
sahf
cmp
stos
out
dec
cmp
mov
ds
sbb
dec
jnp
sbb
adc
push
xchg
movsb
mov
push
inc
dec
leave
ss
in
xchg
pop
bound
loope
ss
int
inc
xor
and
in
mov
jmp
stc
jge
add
cmp
jl
outsl
pushf
fcompl
in
pusha
cmpl
jns
mov
add
pop
cld
mov
adc
mov
addr16
and
imul
push
sbb
rolb
sub
ficomps
sub
or
xlat
call
inc
out
cli
popa
add
jg
scas
dec
and
sub
sbb
mov
out
out
xchg
dec
cmp
mov
jo
push
js
mov
and
roll
inc
je
dec
sub
add
push
sbb
jno
adc
jmp
adc
adc
cltd
mov
inc
pushf
inc
xor
cmc
mov
adc
sbb
test
les
mov
pop
fcompl
and
lcall
pop
lret
mov
rcll
dec
and
shrb
xlat
inc
movq
popa
in
hlt
cs
fadds
push
and
dec
fmul
es
dec
mov
lock
pop
das
popa
cmp
repnz
cmp
in
inc
insl
sub
mov
xlat
mov
out
xchg
sub
inc
or
popf
lods
ret
movsl
je
pop
xor
aam
cmp
or
mov
shlb
mov
js
adcb
or
xchg
mov
ret
push
shlb
shlb
inc
xor
rorb
push
inc
mov
add
into
xorb
in
js
scas
push
inc
mov
mov
negb
pop
out
inc
ret
ffreep
push
jl
in
rcrb
xor
sbb
dec
arpl
stos
rcll
add
cli
mov
frstor
adc
ret
push
bound
pop
hlt
or
ljmp
inc
in
cmp
or
pop
pushf
stos
jne
imul
mov
dec
push
jo
push
loopne
enter
test
mov
add
cmp
stc
out
adc
jecxz
stos
das
enter
add
and
or
adc
jg
xchg
push
jnp
sub
and
shrb
loope
int3
scas
in
ret
icebp
mov
jno
jae
movsl
pop
jmp
and
mov
mov
push
data16
cli
inc
push
or
cld
icebp
pop
xor
leave
inc
sub
mov
sub
dec
fsubrs
push
cwtl
push
sub
inc
in
sti
jg
push
mov
fs
scas
inc
ja
stc
fwait
ss
ja
rcll
dec
add
out
dec
push
lds
shrb
fstl
adc
push
ljmp
jg
inc
cmp
das
sbb
cli
mov
ret
movsb
pop
add
jl
cmp
mov
aam
loop
mov
into
pop
add
mov
cmp
popf
jns
cs
xor
push
cmp
movsb
test
in
xor
sbb
sbb
popa
stos
leave
outsb
fisubrl
fcoms
adc
cs
fs
sbb
sbb
hlt
jge
inc
lahf
or
mov
test
cmp
stc
xor
adc
jne
push
pushf
push
adc
mov
negl
push
add
mov
shll
ja
daa
cld
pushf
ret
repz
xchg
push
leave
stc
mov
sub
cmpsb
or
dec
or
out
xchg
decl
push
sbbb
add
mov
rcrb
aas
test
repnz
mulb
sbb
sbb
mov
jp
pop
jl
bound
outsl
jbe
sbb
out
push
es
jle
or
mov
call
mov
lahf
iret
mov
insb
fcmovnu
add
fsubs
rclb
ss
mov
push
inc
testl
inc
push
adcl
mov
sahf
inc
push
sbbb
xchg
js
push
sbb
adc
lahf
in
xchg
int
mov
jns
or
xlat
pop
stc
into
mov
shlb
cmc
scas
xchg
cmp
push
lea
pop
adc
push
sbb
push
push
fscale
dec
xor
pop
leave
push
add
stos
negl
shr
push
aad
ds
pop
jl
fs
pop
and
punpcklbw
adc
and
mov
add
sub
test
xchg
sahf
test
cmp
sub
dec
adc
divb
mov
in
mov
adc
test
movsl
daa
repz
xor
mov
xor
fs
lods
fsubl
shrl
push
xchg
cmpsl
xchg
sti
or
xchg
enter
lods
bound
das
adc
inc
push
dec
adc
ss
mov
mov
cmpsb
lret
xchg
dec
inc
mov
out
mov
sub
and
loope
sbb
mov
sub
cmpsb
jnp
dec
stc
pop
ror
or
mov
push
fcmovbe
ret
clc
repnz
cmp
xlat
fs
ljmp
add
fistps
imul
int
and
cwtl
cmp
and
fistpll
or
test
dec
call
pop
inc
sbb
jne
xchg
mov
pop
inc
ficoml
stos
fsubp
rcrl
loopne
fs
outsb
dec
add
sahf
lods
fnstsw
jecxz
or
cmpsb
mov
mov
sbb
xlat
movsb
cmp
xchg
test
push
out
and
pop
addr16
into
mov
push
jnp
jmp
in
or
cmp
out
or
sub
nop
nop
ss
sbb
jo
jle
aas
out
repz
sbb
xchg
les
push
scas
ja
mov
hlt
int3
shrb
into
sbbl
shll
data16
cltd
lods
mov
int3
cmc
push
xchg
loop
xor
push
daa
inc
cmp
movsl
fnstcw
adc
push
js
rclb
jae
or
push
push
nop
push
lret
sbb
aaa
jecxz
sarl
mov
repnz
in
push
jp
adc
loop
add
int3
clc
out
mov
xor
lcall
jne
or
cli
or
cs
rclb
add
pop
push
bound
aad
mov
pop
jb
and
cmc
adc
and
dec
shlb
cmpsb
sti
in
xchg
sub
das
stos
lods
movsl
inc
jge
aaa
push
mul
shl
insl
lea
ljmp
imul
mov
inc
lret
rorl
sti
pusha
jmp
sub
xor
adc
fstps
pop
in
push
ret
fsub
cltd
adc
cmp
stc
mov
or
mov
in
cmc
hlt
mov
mov
pop
test
mov
push
fcmovu
inc
lret
jge
repz
pop
jecxz
cmp
or
cli
mov
or
inc
and
roll
xchg
aas
xchg
nop
sbb
jae
outsb
fsubrl
test
add
push
push
into
hlt
clc
inc
cmp
mov
push
int3
push
outsb
in
mov
jbe
and
leave
adc
push
mov
push
and
jb
aad
fsubp
mov
incl
ljmp
out
or
fldt
or
dec
cmc
push
sub
xchg
lret
xchg
lret
lds
mov
stos
test
pushl
pop
lods
pushf
and
push
jbe
and
or
and
sti
cmp
push
aaa
fcoml
pop
pop
pop
and
jnp
sbb
and
jge
push
mov
mov
push
inc
scas
int
sbb
or
and
scas
adc
cwtl
xor
scas
pushf
mov
adc
int
jae
sbb
add
mov
xchg
xor
mov
enter
fcoml
insl
add
mov
pop
cmp
in
test
dec
cmp
pop
cmp
data16
jecxz
pop
test
push
push
addb
insl
cmpsl
push
pop
lahf
rol
push
dec
ficompl
mov
dec
add
mov
loope
add
test
int
andb
mov
aas
ret
xchg
sarl
outsb
lods
mov
inc
aad
sub
mov
dec
cwtl
sahf
fld
push
dec
jmp
int
jns
hlt
pop
repnz
dec
stos
mov
popf
mov
cmpsl
insl
in
jmp
mov
xchg
mov
es
popf
stc
cmp
inc
pop
loop
mov
xchg
xchg
push
push
loope
cmp
rclb
mov
add
lahf
test
bound
dec
xchg
rcrl
mov
pop
push
or
out
mov
push
xor
jmp
sahf
sbb
in
sbb
xchg
or
cmp
in
mov
ret
mov
loop
into
ds
cld
bound
xchg
inc
in
mov
sbb
mov
mov
pop
lahf
iret
mov
loopne
cwtl
mov
aam
pop
mov
pop
sub
imul
pop
pop
js
dec
sbb
sets
mov
arpl
adc
fcompl
mull
es
inc
lds
xlat
push
addb
mov
scas
das
dec
mov
add
or
lds
sub
leave
shrb
inc
mov
fnstcw
inc
jp
mov
pop
std
cmp
shlb
mov
popf
add
adc
cli
inc
push
cmpsb
cmc
insb
aam
mov
in
sarl
comiss
addr16
jge
sbb
xchg
pop
aad
clc
cwtl
out
std
stos
popf
rolb
inc
lods
mov
shll
aam
ret
into
jb
mov
mov
push
push
pop
sub
call
bound
xor
outsl
cs
mov
stc
ret
mov
ja
mov
ja
aam
or
rcll
add
movl
cmpsb
negb
inc
sub
inc
or
loope
repnz
adc
inc
xor
mov
cmpb
loop
jo
mov
mov
xchg
cmpb
xor
inc
ret
mov
lea
scas
loopne
cmc
push
add
and
out
sub
lock
fimull
push
mov
fs
pop
cmp
enter
js
dec
fdivl
test
dec
push
nop
into
push
push
popf
xchg
add
icebp
and
ret
das
and
pusha
rolb
mov
std
mov
inc
dec
nop
movsb
xchg
js
jns
cld
mov
scas
adc
mov
pop
dec
pop
and
insb
arpl
cmc
addr16
loop
jbe
sbb
mov
add
mov
push
arpl
xchg
inc
mov
jns
bswap
cmp
xchg
mov
jmp
jbe
das
repnz
jo
lahf
mov
mov
clc
lock
push
pop
sub
mov
or
jae
and
leave
mov
loop
adcl
fs
mov
clc
cmp
dec
lods
and
outsl
inc
push
test
in
xchg
pop
push
fiaddl
pop
sbb
dec
xor
lods
sub
xchg
jbe
xor
adc
cmc
jmp
inc
push
push
inc
shlb
xchg
mov
push
fcomps
cmc
sahf
or
push
mov
insb
shr
or
inc
and
xor
loopne
mov
add
push
cmp
and
mov
pop
int3
sti
add
sub
dec
fwait
sub
cmpsb
xor
xchg
xorb
stc
insl
inc
add
jmp
je
lea
int3
lds
lret
aam
mov
stc
adc
mov
adc
cmp
cmpsb
mov
sbb
sub
rcrb
repnz
or
pop
lods
xlat
les
fisttpll
sub
or
arpl
cs
mov
pop
aam
stos
nop
out
cmpsl
mov
ret
pop
xchg
mov
xchg
mov
es
mov
imul
js
sbb
push
data16
out
fucom
repz
jns
jne
imul
sti
xlat
loopne
or
mov
stc
les
jo
aas
inc
aad
sarb
test
pop
lods
test
aas
pop
in
adc
lds
push
lahf
pop
mov
aaa
inc
add
test
fs
std
test
jo
mov
outsb
sahf
and
push
xlat
lea
xchg
jno
das
insl
cmc
stc
int3
jmp
ljmp
push
loopne
std
inc
pop
ret
movsb
mov
mov
stos
pop
xchg
mov
or
sub
xchg
xor
push
in
pusha
lahf
dec
mov
cli
movsl
mov
ja
out
clc
hlt
ljmp
push
inc
test
repz
jmp
stos
cmp
popa
stos
leave
mov
inc
imul
xchg
or
xchg
mov
cs
sub
add
jnp
and
rol
pop
and
nop
pop
push
jmp
mov
adc
aas
push
adcb
sbb
or
jae
mov
push
jmp
std
mov
adcl
bnd
loop
sti
stos
mov
mov
adc
insb
mov
imull
pop
js
stos
sbb
int3
rolb
sti
and
or
into
jg
aad
sub
sti
fdivrl
jno
es
lret
mov
mov
xchg
pushf
inc
jmp
aas
pusha
daa
xchg
nop
rorb
shlb
test
lods
ljmp
cmp
push
push
dec
pop
push
jne
hlt
popf
or
jecxz
dec
cmpb
cmpsl
outsb
rcll
or
cmc
mov
pop
push
sub
xlat
or
mov
inc
sahf
dec
fsubr
xor
clc
fwait
aad
xchg
ljmp
sub
adc
mov
or
xchg
inc
add
inc
cmp
sub
pop
bnd
adc
pop
incl
popf
lea
out
aaa
xchg
pop
paddsw
out
aad
adc
jo
rcll
pop
scas
lret
jno
mov
je
dec
mov
test
xor
out
or
fxch
sub
mov
pop
or
jl
adc
mov
lea
jge
mov
pop
push
lods
fsubr
mov
cwtl
fiadds
lcall
pop
loop
pop
adc
mov
inc
sbb
aam
repz
stc
mov
lods
push
sbb
pop
mov
and
in
push
sub
mov
scas
adc
dec
mov
jmp
inc
push
mov
xchg
xor
and
pop
xchg
or
or
scas
popa
mov
and
jmp
scas
int
mov
or
xor
lcall
iret
push
repnz
popf
jnp
xchg
gs
push
sti
mov
movsl
out
or
out
movsb
mov
inc
add
loop
pusha
outsl
push
fmul
push
mov
cmc
bound
sbb
cwtl
and
hlt
fisubl
movsb
ret
add
inc
cmp
jnp,pt
popa
fiaddl
in
repnz
les
mov
pop
mov
lret
repz
sbb
pop
and
dec
das
popf
mov
rorb
jno
sub
jl
pusha
es
sbb
pop
xlat
mov
or
jo
pop
cltd
xor
lods
ds
xchg
lea
or
and
loop
or
dec
scas
push
push
test
push
adc
add
mov
ja
dec
sbb
push
fidivl
icebp
sub
pop
push
pusha
outsl
pop
incb
cmpsb
in
negl
rorl
div
les
pop
or
dec
ret
aam
dec
bound
mov
outsb
push
in
xlat
or
dec
andb
addr16
test
and
jnp
mov
xor
xchg
and
popf
mov
and
xor
dec
movsl
int3
fildll
sub
fdivp
xor
jnp
es
std
sbb
popf
addr16
dec
dec
cmp
es
fwait
cmpsl
jle
xchg
mov
mov
adc
push
pusha
fadd
cli
jmp
lds
aam
adc
xchg
pop
push
lret
inc
mov
mov
sti
in
ret
outsb
xor
in
or
mov
mov
push
insl
shlb
fwait
mov
movsl
push
inc
adc
faddl
sbb
mov
push
jae
push
mov
jp
cmc
add
xor
mov
sbb
push
pop
movsl
sarl
add
sar
adc
or
decl
push
ret
stc
and
xlat
adc
out
cmp
fmul
and
xor
lret
mov
xchg
daa
cmp
or
lret
sbb
sbb
adc
rcll
addr16
rcl
in
dec
roll
pop
pop
lahf
or
pop
add
push
and
inc
leave
sub
sub
xchg
mov
decb
xor
scas
pop
data16
mov
xlat
xor
dec
push
sbb
in
push
inc
mov
push
int3
cmp
mov
jne
sub
sub
cltd
testb
lock
lret
mov
jge
mov
and
lock
out
rorb
pop
sub
lds
gs
add
movsl
and
xorb
inc
add
scas
add
aas
add
mov
int3
mov
pusha
je
es
std
rclb
pop
mov
jle
lock
xorb
sbb
jno
enter
aaa
aam
and
lds
std
bound
pop
mov
lahf
pop
imul
fdivr
fxtract
jb
cmp
pop
xchg
fwait
imul
lea
sti
pop
fnstsw
bound
xchg
add
push
add
cmp
mov
hlt
mov
mov
inc
test
cs
sti
xchg
mov
loop
ret
gs
lods
jmp
push
mov
mov
dec
jne
inc
popa
stc
adc
mov
inc
inc
sti
bound
popa
mov
mov
sub
cmp
shr
pop
in
mov
sub
inc
outsb
mov
rolb
in
adc
adcb
and
addr16
jmp
or
shlb
popf
or
ljmp
xor
push
mov
add
notb
mov
cmp
loopne
testb
or
imul
dec
cmp
daa
jl
adc
pop
push
test
into
popa
pushl
xorb
mov
xor
popl
push
les
push
rcrl
adc
int
aam
push
outsl
jne
les
rorl
std
mov
pop
or
ds
fnstcw
mov
lahf
adc
and
sti
scas
movsb
sub
add
xchg
adc
test
jl
stc
sahf
dec
lock
ljmp
mov
sub
pop
jle
mov
add
mov
sbb
mov
inc
lods
mov
jne
aas
dec
or
adc
push
dec
gs
addr16
dec
push
and
lods
and
sub
dec
dec
xor
fnstenv
sbb
push
sbb
lret
ret
and
ret
or
das
fs
out
iret
adc
test
sbb
ds
enter
push
ljmp
daa
add
mov
jbe
cmpl
out
cli
pop
pop
and
stos
pushf
xor
cmpsl
sbb
imul
fsubrs
fwait
ljmp
inc
cld
ljmp
scas
call
orl
mov
adc
ror
ss
lds
push
mov
lods
or
or
mov
mov
pusha
push
adc
or
jg
and
mov
shlb
push
mov
pop
push
int
ds
pop
push
test
push
sub
xchg
xchg
ret
lods
push
xor
pushf
ja
jno
stos
lahf
dec
add
pop
outsl
std
adc
sbb
xor
iret
popa
mov
iret
cwtl
mov
fs
inc
sub
cmp
fildl
in
ret
insl
pop
mov
out
and
push
addr16
add
ja
mov
cmp
push
inc
mov
jo
jg
jo
pop
or
sbb
mov
mov
pop
dec
data16
inc
stos
nop
sub
xchg
xchg
nop
cmp
cmp
fdivs
subl
xchg
imull
and
data16
mov
inc
jmp
dec
sbb
jo
popf
adc
or
int
adc
dec
lcall
pusha
sub
jl
dec
mov
into
mov
push
xchg
int3
jae
cltd
sub
mov
enter
sub
and
pop
mov
dec
testb
xchg
cwtl
mov
mov
add
sbbl
fwait
les
leave
ja
shll
xchg
cs
in
push
and
xlat
push
mull
sub
pop
adc
lods
xorb
scas
int3
push
push
addr16
adc
ss
je
cwtl
aad
in
xchg
leave
pushf
clc
xor
lahf
adc
or
sarb
leave
xor
dec
out
mov
lcall
rcll
mov
or
mov
inc
iret
fldt
rcl
adc
pop
mov
mov
jl
fbstp
mov
push
xchg
jb
jo
dec
sbb
push
fnsetpm(287
in
addr16
ffree
or
jl
pop
shll
in
stc
je
pop
rep
lods
pusha
pop
sub
dec
adc
jns
daa
imull
inc
push
jge
into
ja
adc
andb
xchg
pop
fwait
scas
mov
xor
nop
fs
inc
aaa
in
inc
sbb
ret
je
pop
push
pop
pop
fnstenv
sbb
or
ret
cmp
test
pushf
adc
cmp
mov
std
ljmp
call
icebp
adc
ficompl
and
inc
sbb
pop
push
inc
lds
int
mov
nopl
cmp
shl
inc
cmc
dec
jo
cltd
ds
xchg
mov
jo
imul
inc
ficoml
xor
push
lret
cld
stos
push
loopne
outsl
aaa
jp
adc
mov
xor
push
jno
sub
enter
sub
out
sub
jecxz
push
clc
pusha
aad
push
xor
and
and
cs
push
dec
or
scas
andb
xchg
lahf
pop
mov
mov
sarl
pushf
andl
insl
add
add
lahf
jecxz
dec
stos
mov
in
sbb
adc
inc
out
rcrl
int3
cli
ja
mov
pop
jae
push
jno
mov
mov
adc
xchg
xor
xchg
push
scas
ja
sbb
repz
aas
mov
cmpsb
lea
add
addr16
push
push
cld
cmp
jp
and
mulb
push
mov
mov
dec
and
int3
jmp
mov
sub
in
fbstp
repnz
sbb
push
shlb
pop
jge
add
lcall
notb
enter
xchg
lods
pop
clc
mov
jnp
push
inc
cmpsb
jmp
push
dec
or
push
imull
mov
xor
xchg
adc
hlt
test
cmc
xchg
sub
xor
xchg
cmpsb
jns
jb,pt
lods
mov
sbb
lret
call
movsl
xor
dec
repz
iret
outsl
fildll
in
je
pop
enter
test
xchg
aas
fildll
mov
mov
mov
push
inc
sti
pusha
rolb
mov
xchg
lret
ljmp
pop
lock
inc
into
sbb
cmp
inc
xchg
ret
iret
arpl
pop
add
movzbl
in
fs
loopne,pt
inc
test
sub
orb
jg
sahf
popa
cmp
movd
mov
fsubs
aaa
xorb
aas
cmpb
pushf
mov
shll
test
sbbb
fisubrs
xor
push
imul
pop
dec
ss
ret
arpl
mov
mov
sub
and
mov
xor
into
jecxz
sbb
int
imul
daa
sahf
stos
mov
insb
inc
stos
dec
notl
mov
lahf
pop
cs
mov
mov
xor
js
push
add
stos
xchg
sub
adc
inc
lds
mov
push
sti
jno
jb
insl
addl
jne
adc
xchg
adc
xchg
fstps
pop
xor
fwait
sahf
or
mov
push
push
xchg
cmpl
mov
sbb
xor
mov
jne
jmp
sbb
dec
test
test
imul
mulb
call
mov
push
pop
subl
testb
push
dec
cmpl
int3
je
push
mov
sub
iret
cmpsl
into
std
loopne
mov
inc
and
pop
shlb
inc
subb
pop
sub
xorl
jp
xchg
sub
jae
leave
pop
lock
push
inc
lret
jns
test
in
pop
mov
scas
icebp
sub
sub
fldcw
and
xchg
add
lcall
lods
stos
xor
ret
jmp
insb
rep
pop
push
lret
add
jb
leave
test
push
add
ds
pop
dec
mov
push
jae
cmp
js
adc
push
call
or
mov
mov
iret
lcall
cmp
and
mov
pop
hlt
repnz
dec
ds
fistl
push
jecxz
jmp
pop
cwtl
mov
mov
lahf
xchg
daa
mov
adc
jmp
and
mov
ret
fdivs
jp
xchg
mov
sti
xchg
add
in
push
push
negb
ss
or
adc
xchg
inc
mov
or
add
lret
xchg
imul
add
bound
bswap
popf
adc
pop
and
adcb
fisttps
mov
frstor
hlt
loopne
adc
cmpsl
mov
cmpsb
and
scas
jbe
push
dec
lret
fnsave
jbe
or
push
call
jmp
xchg
push
jle
or
fnsave
inc
push
cld
inc
cmp
scas
sub
adc
dec
sar
jecxz
daa
ret
fistl
mov
push
js
loopne
enter
jbe
hlt
mov
cli
add
or
dec
jbe
sub
mov
jae
xchg
jne
mov
cmp
test
jge
in
cmpsb
cs
lret
sbb
jl
data16
loopne
sbb
lahf
aaa
adc
mov
mov
rclb
out
pusha
jg
sbb
fiadds
es
cmp
or
sbb
cwtl
push
data16
inc
out
test
repz
cmp
mov
pop
jl
je
cmc
orl
test
pop
cmp
push
and
imul
mov
data16
mov
stos
fwait
xchg
pusha
mov
std
adc
ret
mov
push
scas
scas
xchg
stc
push
jge
push
subl
mov
bnd
comiss
sbb
jnp
pop
adc
or
pop
sbb
dec
outsl
int
xchg
jle
adc
pop
dec
or
outsb
insb
loop
int
out
pop
lods
test
mov
pop
outsl
xchg
xchg
fisubrl
gs
sub
cmp
stos
lret
mov
das
dec
push
and
int3
cld
fstpl
jmp
cld
and
jmp
pop
cmp
jno
mov
jb
xchg
jno
enter
adc
mov
aaa
mov
rorl
cmc
aam
stc
adc
add
mov
scas
adc
es
cmpsl
cmp
in
in
movsb
sbb
mov
mov
daa
or
and
adc
testl
pusha
xchg
movsb
jb
inc
inc
push
add
and
out
jp
mov
jae
fcoms
bound
lret
addl
jne
push
rcrl
and
orb
repz
xchg
enter
or
loope
jecxz
inc
xor
xor
out
je
sbb
cmp
sbb
daa
jns
mov
jb
repnz
ret
jb
mov
add
jecxz
dec
jmp
ds
cltd
jg
in
and
inc
mov
dec
repnz
or
mov
jo
pop
lcall
cli
rorb
or
repz
mov
call
adc
adc
xorb
mov
and
ja
ret
outsb
rolb
xchg
or
scas
out
test
hlt
xor
mov
mov
mov
xchg
idiv
mov
pop
sub
xlat
lcall
cwtl
dec
inc
sbb
cli
sbb
pop
push
arpl
xchg
mov
fstl
flds
jmpw
xor
xor
int3
adc
repz
xor
or
ret
dec
jmp
adc
ret
mov
int
jnp
xchg
pop
sbb
add
clc
sahf
jbe
sbb
rcll
es
movsb
insl
outsl
push
pusha
adc
movsb
fnstsw
inc
push
mov
loop
push
or
sahf
dec
pop
shll
xor
pusha
xchg
xchg
outsb
add
or
push
nop
hlt
sbb
inc
add
pop
fdivrp
cmp
test
xchg
push
xor
addr16
insb
adc
adc
loopne
shll
outsb
sar
push
pushf
cltd
outsl
jnp
add
fcomps
pusha
jecxz
subb
aam
ljmp
push
mov
pop
enter
and
cmpb
mov
std
decl
ljmp
jae
iret
ret
xchg
adc
arpl
cli
jmp
pop
push
mov
mov
xor
and
dec
xchg
xor
fwait
les
mov
rolb
inc
int3
iret
jecxz
jbe
mov
sbb
ret
mov
sbb
shll
mov
sti
loopne
cmp
repnz
dec
icebp
dec
shrl
mov
xor
daa
clc
jmp
sub
fstl
inc
test
fnsave
add
call
in
loop
cmp
ljmp
mov
aaa
sbb
enter
adc
jns
or
inc
leave
or
out
add
mov
xor
push
lods
xchg
cltd
mov
mov
movsb
cmpsl
and
jg
cmp
mov
outsl
or
lret
push
xor
add
gs
lock
lock
js
adc
scas
rcl
mov
hlt
js
jb
fstps
into
cmp
sub
ss
stos
lods
in
push
pushl
sub
sahf
push
sahf
in
sub
mov
aaa
std
daa
jmp
out
dec
mov
mov
xchg
pop
add
mov
pop
cli
lods
xor
rcrl
xchg
inc
xchg
jle
adc
adc
adc
fidivrl
mov
shr
call
lret
out
sub
or
sbb
lret
pop
test
add
dec
xchg
je
mov
inc
jecxz
out
dec
pop
adc
fildll
xchg
in
mov
mov
lock
inc
push
or
pop
xchg
lahf
sti
dec
jnp
mov
lret
sbb
fidivrl
mov
pop
push
push
mov
mov
cmp
fcoms
sbbl
das
xchg
push
push
sbb
popf
push
pop
push
lcall
mov
out
xchg
xor
dec
stos
xchg
push
jbe
lahf
push
xor
mov
cli
scas
or
push
cmp
mov
mov
dec
push
cmc
test
mov
push
emms
add
jecxz
out
mov
inc
ljmp
or
jo
dec
aam
push
stc
push
dec
test
cmpsl
lods
lret
pop
add
cmp
testl
dec
xchg
imul
jecxz
sbb
sahf
mov
sahf
mov
sbb
scas
inc
scas
sub
sti
addr16
cwtl
out
lods
jbe
cmp
imul
sbb
dec
in
das
inc
jnp
push
push
pushf
dec
mov
es
test
push
fistpll
pop
pop
loop
sbb
xor
mov
mov
sbb
insl
mov
mov
xchg
notb
or
or
mov
aam
rcrb
scas
or
mov
and
pop
pushf
add
mov
fdivl
mov
mov
jmp
push
xchg
ja
popf
adc
mov
addl
fucomi
fdivl
inc
jo
inc
shl
xchg
xor
aad
loopne
adc
xor
lahf
xor
pusha
pop
cld
loopne
jp
lds
aam
lods
filds
xor
cmp
enter
fcmovne
out
fldcw
adc
popf
cmp
sbb
pop
inc
mov
repz
pop
outsl
xor
and
mov
testl
pop
fsubr
cmp
mov
imul
or
bound
sahf
cmp
outsl
iret
test
or
mov
movsb
add
mov
lea
clc
repnz
xchg
scas
stc
imul
jns,pn
pop
ret
cwtl
or
repz
push
mov
push
sub
sub
lcall
es
or
mov
mov
jge
xor
js
add
and
or
inc
mov
push
scas
insb
pop
jle
insl
mov
jns
mov
cmp
shl
cmpb
add
insl
mov
xchg
movsb
lea
pop
jae
fsubl
push
cmp
pop
loope
sbb
xor
int
jl
jo
push
rorl
adc
jle
bound
jg
lock
sub
iret
xchg
cmp
push
ret
mov
fldl
stos
add
faddl
pop
cwtl
mov
xor
fildl
sbb
push
out
fnsave
imul
out
xchg
xor
pop
movsl
xchg
xor
stos
push
jne
push
es
ss
andb
push
inc
es
add
lock
sbb
into
mov
outsl
mov
push
jnp
cmpsl
push
or
mov
addr16
cs
lods
inc
xor
push
add
fwait
hlt
mov
je
sub
pop
test
lcall
sub
inc
outsb
ret
xchg
das
inc
shr
out
aad
mov
jo
cwtl
pop
push
jecxz
inc
stos
rorb
mov
shll
repnz
mov
movsb
insb
fdivrs
popf
mov
xor
push
push
je
outsl
mov
push
leave
testb
adc
dec
mov
sbb
movsb
mov
adc
jmp
sbb
mov
push
mov
add
das
bound
cmp
xlat
mov
jle
fcom
mov
arpl
les
dec
add
adc
mov
fstps
add
push
dec
call
push
mov
mov
fsub
shlb
mov
jo
inc
movsl
cmpsb
popf
int
sarb
inc
loopne
jg
arpl
insb
xchg
xchg
xor
cmp
movsb
push
add
test
cmpsb
xor
movsl
iret
inc
push
call
shlb
adc
and
lds
stos
xor
cmp
push
movsb
push
ja
popa
push
arpl
adc
imul
dec
sahf
lea
dec
ffreep
pop
lcall
pop
jl
cli
test
sub
loope
out
push
ucomiss
pop
xchg
xlat
sahf
fcmovnb
jbe
push
adc
div
in
mov
dec
les
push
arpl
sbb
fcomi
stc
outsl
insb
fstps
jp
adc
scas
and
push
je
cmp
roll
push
jle
push
mov
aad
sbb
fidivrl
rolb
mov
mov
mov
adc
cmpsl
fcomip
mov
sub
ja
scas
jmp
sbb
or
cmp
adc
mull
or
call
sub
mov
adc
pop
inc
in
shll
or
jmp
test
aaa
inc
in
insb
nop
cmp
dec
sub
jg
lret
xchg
outsb
push
in
dec
aaa
ja
mov
and
jbe
test
in
cmp
xchg
sbb
out
xchg
push
mov
stos
or
push
out
sub
sti
jecxz
add
pop
pop
xchg
lock
sbb
and
adc
inc
xor
sub
add
movsb
mov
das
xchg
mov
push
rcl
mov
cwtl
arpl
sbb
das
fidivl
addr16
and
outsb
out
adc
adc
mov
cmp
jb
test
push
sub
and
and
mov
push
scas
fiaddl
testl
loop
in
sub
xchg
lret
xor
sub
sbb
int
fdivl
test
sahf
sub
les
add
sub
pushf
xlat
add
test
inc
ds
or
sbb
pop
dec
pop
xorb
mov
jecxz
neg
lret
daa
mov
cs
jle
mov
lods
test
int
jle
pop
cli
pop
mov
jle
mov
pop
add
jmp
adc
jno
pop
and
and
xchg
inc
and
aaa
icebp
lods
inc
in
out
inc
dec
jge
lcall
xchg
fstps
and
xchg
mov
in
xor
sarl
addb
aaa
pop
mov
mov
inc
movsl
scas
arpl
leave
xchg
jb
adc
imul
popa
or
and
mov
jecxz
stos
jmp
out
sbb
add
lahf
and
and
mov
cmpsb
xchg
mov
pop
pusha
je
mov
addr16
lret
cwtl
rcll
mov
inc
lods
sbb
adc
ds
inc
pop
mov
mov
jb
outsb
add
leave
sbb
cli
stos
les
xor
xor
das
push
inc
mov
roll
add
shrl
push
imul
pop
lods
and
shll
mov
jnp
sub
mov
icebp
mov
dec
cwtl
push
pop
adc
adc
jns
inc
inc
cmp
aas
sub
jbe
inc
imul
adc
scas
and
stc
pop
mov
pop
pop
and
dec
arpl
movsb
mov
out
fwait
xor
mov
sub
lret
add
mov
dec
rclb
mov
loopne
das
xchg
fdivl
negb
fistl
je
inc
insb
mov
pop
insb
dec
dec
jo
lret
addb
aaa
out
lock
push
enter
filds
dec
outsl
clc
je
orl
push
xor
sahf
sub
and
mov
pop
popa
arpl
push
push
jl
add
jno
lret
rcrl
repnz
jne
insb
or
out
leave
and
xchg
xchg
test
pop
outsb
fcoms
or
dec
xor
das
mov
out
movsb
xor
or
gs
mov
and
xor
fidivs
mov
andl
scas
test
scas
mov
ds
xchg
jge
xchg
jge
cmp
fs
int3
push
inc
inc
sub
xor
pusha
mov
nop
jp
pop
into
fwait
mov
out
dec
push
pop
fmuls
aam
test
test
lods
or
jp
cmp
add
or
and
and
pop
sahf
mov
or
xchg
or
inc
rclb
fdivp
dec
loopne
test
add
lods
inc
pushf
mov
sbb
lcall
adc
mov
inc
mov
sub
popf
pop
mov
subl
dec
repz
mov
and
outsb
sub
mov
std
push
jbe
adc
rcrl
ljmp
ret
mov
add
cltd
xchg
xor
sbb
daa
jns
inc
pop
testb
xchg
push
sbb
inc
lea
call
je
in
in
test
jnp
mov
adc
lcall
add
mov
clc
jo
xor
and
xchg
mov
jnp
js
gs
imul
inc
movsl
pop
push
rcrl
or
loopne
sbb
clc
pop
ret
sbb
xlat
int3
inc
xchg
or
mov
xchg
stc
push
xor
dec
pop
int3
jge
lea
clc
pop
psubsw
in
mov
roll
pop
sbb
cmpsl
push
repnz
lock
aaa
ds
inc
or
jno
cmp
pop
xchg
inc
outsl
cmp
push
xchg
jbe
xchg
rcll
and
dec
rclb
mov
mov
cmp
shrl
jo
xor
pop
fldl
fs
ja
push
pop
dec
pop
pop
stos
ds
push
insb
fucomi
nop
test
mov
divb
xchg
js
xchg
cmp
push
mov
xchg
cwtl
inc
out
pop
inc
push
mov
stos
xor
cmovge
stos
mov
mov
add
lods
dec
or
push
mov
fadds
or
mov
push
push
and
push
dec
lods
sarl
sbb
jae
stos
add
in
mov
fisttps
adc
test
into
push
lahf
outsl
xchg
sub
iret
cmp
dec
inc
int
out
pusha
push
mov
jo
mov
sti
pop
mov
jle
xor
xorl
xchg
cmpsb
mov
enter
dec
mov
mov
fs
inc
mulb
inc
push
sbb
xchg
pop
dec
pop
cmpsb
adc
cmpsb
cld
pop
cmc
sbb
sub
mov
jg
cmpb
fwait
mov
mov
dec
test
dec
fadd
adc
cld
dec
mov
ret
or
adc
scas
and
icebp
and
sbb
aam
outsl
fdivl
pop
jmp
inc
or
lods
jmp
sub
scas
jmp
add
rorl
or
sbb
test
push
fldenv
fcmove
inc
sbb
enter
sahf
jne
outsl
xor
mov
fnstcw
adc
inc
insb
pop
adc
addb
arpl
mov
loop
ret
iret
aad
cltd
icebp
pusha
mov
dec
add
xchg
xlat
mov
jp
outsl
add
das
movsb
aas
fs
jne
sbb
cltd
in
in
jg
inc
addb
iret
ja
sarb
ja
mov
dec
into
addr16
mov
daa
add
inc
popf
fdivs
loopne
dec
testl
add
psubb
inc
pop
hlt
push
xchg
mov
xchg
push
nop
pop
lods
mov
popf
enter
aas
rcll
outsb
cmp
mov
mov
jle
aas
pop
adc
xchg
test
test
mov
cld
pop
insl
or
cmpsb
mov
cmp
push
push
mov
mov
or
dec
aad
add
stc
xchg
fmull
lret
ljmp
gs
stos
jnp
mov
or
sti
shl
icebp
adc
out
jnp
jecxz
fstl
js
imul
pop
jns
adc
scas
push
pop
adc
test
icebp
cmpsl
inc
push
out
in
orl
push
jns
test
in
mov
fisttps
nop
inc
xor
add
mov
sbb
ret
imul
dec
jp
xchg
inc
stos
sub
sbb
in
xchg
shrb
jo
pop
bound
cmp
cmp
jmp
icebp
in
push
repnz
pop
xor
dec
pcmpgtd
cmp
popa
les
pop
stos
sbb
hlt
loop
aad
movsb
xchg
inc
cmpl
mov
out
inc
cmc
into
mov
je,pt
dec
adc
push
and
xchg
sti
xor
xchg
push
mov
daa
pop
gs
in
dec
nop
lcall
push
shlb
test
sbb
xchg
loop
clc
inc
inc
ds
push
sbb
in
xorb
dec
sbb
testl
dec
xor
ret
jge
and
and
sahf
cmp
cmpsb
jne
adc
lods
mov
add
test
mov
pop
jns
mov
scas
pushf
outsb
out
fchs
daa
stc
cltd
rcl
inc
cmp
inc
inc
loopne
lods
cmc
aad
stc
adc
mov
pop
sbb
jb
ret
notl
cmpsl
mov
mov
aam
mov
aas
popa
mov
clc
adc
lcall
imul
adc
sbb
les
aam
lret
push
inc
out
cmp
mov
inc
xor
pop
daa
movsl
fnstcw
imul
aad
or
aaa
or
adc
fs
clc
add
enter
inc
jae
out
sahf
aam
in
rcll
mov
fisttpll
or
enter
mov
and
lcall
jge
jo
push
aad
pop
movsb
cvtdq2ps
lea
xchg
scas
lcall
lret
insb
push
mov
ja
lea
outsl
lret
fdiv
push
mov
jp
xor
dec
aaa
test
jne
sbb
sbb
pusha
divb
es
or
pop
adc
dec
std
ret
cmp
mov
cmp
repnz
jns
in
lea
pop
and
dec
pop
inc
push
mov
fiadds
inc
add
mov
and
xchg
mov
jo
daa
fwait
out
jg
and
inc
pop
mov
testb
xlat
adc
jae
mov
xor
mov
mov
mov
pop
nop
xchg
mov
mov
or
mov
clc
xor
pushf
mov
imul
lods
adc
daa
pop
xor
gs
loop
pop
mov
dec
fsubr
xchg
and
scas
shl
lds
inc
lds
inc
std
mov
lea
in
ja
adc
mov
inc
push
and
iret
sarl
pop
xchg
mov
fcompl
shll
push
loopne
ss
mov
mov
dec
lods
pusha
dec
xor
dec
push
inc
mov
mov
xchg
inc
negb
sbb
testb
cmpsb
dec
mov
fbstp
add
int3
insb
nop
jl
dec
enter
lds
xchg
cmp
paddusw
xor
in
aad
adcl
adc
push
xchg
jl
inc
nop
ss
daa
rcrb
sub
lea
xor
in
mov
lret
dec
ret
repnz
icebp
cmc
mov
lret
jge
fwait
inc
pop
ja
xor
xor
psrld
inc
das
dec
dec
dec
adc
jecxz
fnstcw
cmpsl
xchg
push
dec
lods
cmc
sub
mov
or
sub
mov
int3
xor
imul
test
data16
and
xchg
outsb
pop
js
cmp
imul
cmpsb
jo
int3
sti
pop
mov
cwtl
xor
rcl
sub
xor
add
les
jge
push
inc
and
jo
cmpsb
jg
sub
pushf
jb
pop
inc
jge
pop
loopne
arpl
mov
mov
movsl
pop
lods
mov
pop
mov
orb
pop
mov
mov
sarb
xor
js
repz
shll
pop
add
pop
sbb
mov
int
xor
sub
lods
xchg
xchg
lea
incl
pop
mov
int
in
imul
adc
mov
fwait
xor
push
es
pop
push
push
mov
scas
sarb
stc
lds
push
jb
cmp
in
test
add
push
pusha
sbb
mov
push
pop
bnd
cmp
test
in
pop
and
adc
mov
cmp
scas
or
fnsave
mov
pusha
inc
shl
lods
stos
imul
shlb
mov
stos
ret
call
or
add
mov
cmp
int
pop
movsb
and
fcompl
inc
xlat
fisubrl
andl
sbbl
fimuls
arpl
cmpsb
sbb
inc
jl
mov
stos
push
fdivs
dec
popa
repnz
repnz
mov
adc
or
xchg
repz
and
in
adc
or
cmpsb
lahf
aam
ljmp
cld
in
cmp
cmp
push
mov
mov
jae
dec
pop
push
xorl
hlt
les
mov
or
cs
add
adcl
pop
test
cld
sbb
push
mov
stos
jecxz
jmp
add
add
or
movsb
sub
pop
data16
inc
xchg
mov
js
sbb
push
rorl
adc
xor
sub
gs
xchg
fiaddl
mov
pushf
sarb
push
rorb
inc
cmpl
adc
fistl
addr16
pushf
push
sub
sbb
mov
jns
faddp
lds
sub
out
bound
pop
push
xchg
wrmsr
jo
pop
imul
lock
cmpl
jo
pop
or
pop
sub
mov
push
cmpsb
xchg
fcmovbe
sub
dec
adc
lods
lds
decl
shll
icebp
icebp
mov
add
ja
jne
icebp
and
push
jp
sub
stos
mov
mov
adc
mov
mov
push
jnp
inc
mov
popf
ss
xchg
dec
int3
mov
fbstp
jge
imul
aas
into
iret
lea
fcoms
cli
into
mov
in
scas
int3
sbb
icebp
enter
push
fists
arpl
jns
out
sahf
adc
xor
push
push
mov
adc
dec
mov
mov
mov
pusha
pusha
mov
fs
aas
fwait
xchg
out
scas
loop
jecxz
sub
stc
fists
xchg
lcall
mov
repz
aad
add
lods
mov
ljmp
rorl
and
popa
stos
jnp
xchg
lret
fcoml
pushf
add
mov
loope
xor
lret
sbb
add
fcomi
sub
loop
dec
arpl
jnp
mov
dec
add
mov
cli
adc
shrb
stos
or
js
out
jge
aad
imul
add
push
push
push
xchg
stos
mov
adc
sbb
outsb
jmp
cmc
movsb
aad
ret
jge
sbb
mov
mull
fwait
dec
push
lds
stos
sub
or
xchg
sti
in
pop
std
push
es
ljmp
sub
push
or
loope
dec
cmc
jecxz
jnp
mov
sti
into
pop
push
pop
push
or
inc
dec
cmp
push
jne
into
ficomps
push
fstpl
xchg
pop
pop
jecxz
sbb
pop
add
fnstcw
push
clc
cmpsb
cld
popf
fildll
mov
movsb
inc
xchg
mov
stc
xchg
lcall
xor
ss
sbb
jg
stos
mov
jo
arpl
pop
int3
cmp
inc
cwtl
data16
scas
mov
inc
mov
jge
add
push
cmpsb
ja
rcll
aas
inc
test
mov
xchg
jo
xchg
add
pop
inc
call
and
pop
jno
daa
jp
xor
inc
jb
xchg
xchg
int3
lea
clc
jno,pt
dec
int3
mov
xor
mov
mov
aaa
in
test
sub
xchg
js
jge
add
cmp
out
aad
dec
in
jbe
outsb
xchg
mov
or
lods
jb
rol
int3
fstpl
enter
int
ljmp
xchg
push
xor
insb
nop
outsb
mov
jg
test
out
sti
jnp
fldl
and
fidivrs
adc
loop
cwtl
movsl
in
sbb
subl
push
sbb
adc
fmuls
bound
cwtl
sub
les
lahf
out
mov
inc
xor
outsb
add
fimuls
push
jne
movsb
cs
mov
xchg
popl
sub
sbb
sub
fstpl
xor
add
mov
mov
jb
and
test
decb
jae
fstl
test
iret
sub
mov
add
test
cbtw
pop
xchg
jl
out
sub
in
push
mov
pop
or
inc
clc
dec
negb
mov
push
loope
push
loop
add
fs
push
push
push
aam
shrl
rorb
rcrb
je
pop
ja
rcrl
sub
imul
ja
out
jecxz
jb
lea
mov
out
and
mov
cmpsb
mov
jp
or
and
test
in
mov
push
xchg
addr16
mulb
or
dec
cmp
in
inc
sahf
adc
jb
push
jne
push
inc
scas
fdivrl
test
js
mov
cmpsb
stos
xchg
lret
dec
adc
cmovge
andb
outsb
repz
je
icebp
jns
daa
xor
sbb
lea
out
ficoms
shlb
in
ficoml
or
xlat
adc
lea
out
inc
jecxz
mov
scas
popa
les
or
int3
inc
enter
jnp
sub
cmpb
and
mov
xchg
or
jne
mov
mov
adc
adc
dec
adcl
mov
sbb
stos
xor
or
or
das
jge
mov
sti
mov
mov
sub
xchg
push
cld
jl
pop
outsl
scas
scas
jae
cmp
mov
xchg
jle
mov
pop
sub
sbb
sahf
sbb
cmp
es
fldl
ret
and
test
push
jle
add
inc
mov
mov
sub
in
cli
repnz
sbb
inc
fmull
cmp
pop
repz
mov
pop
mov
repnz
xor
out
les
lock
jbe
lds
or
add
call
mov
iret
shl
xor
cwtl
push
call
xchg
mov
fisubs
sub
cmp
mov
mov
ljmp
push
jno
jge
push
leave
lcall
add
jge
lea
stos
dec
cwtl
mov
push
inc
dec
xor
ljmp
mov
mov
mov
xlat
add
aas
into
jns
movsb
lret
mov
ret
dec
stc
fadds
call
shr
xlat
shll
sbb
or
pop
push
mov
push
and
add
or
roll
out
call
and
inc
mov
aas
mov
roll
arpl
in
lea
pop
out
pusha
mov
add
sbb
sbbb
adc
popf
mov
or
frstor
jbe
xchg
ror
ds
insl
mov
push
ja
negb
ds
jmp
fsub
pop
add
push
add
pop
push
lcall
mov
pop
pop
push
or
js
insb
mov
das
test
cmp
xchg
xchg
popa
aam
vpsubb
dec
jl
pop
dec
and
pop
sub
sub
movsl
sbb
das
or
xchg
sbb
or
add
dec
int3
or
addr16
loope
mov
dec
xor
ss
jbe
adc
xchg
cmp
lock
cmp
icebp
xchg
sbb
icebp
pusha
stc
je
and
push
jne
lret
mov
pop
sub
mov
add
cli
addl
leave
scas
and
ja
pusha
into
mov
popa
daa
mov
xchg
or
and
das
pop
xlat
pop
inc
add
pop
leave
repz
gs
sar
stos
mov
or
popa
out
dec
andl
xchg
sub
adc
out
sbb
cld
clc
adc
sbb
mov
jecxz
add
jbe
mov
jmp
sub
and
dec
enter
mov
cmpsl
sahf
lock
fs
jo
and
jae
pop
popa
sub
mov
lods
pop
fcmove
gs
fsubs
xor
mov
inc
sahf
fxch
dec
pop
mov
xchg
jae
outsb
test
xchg
mov
je
enter
arpl
push
xor
xchg
int
mov
sarb
shrb
inc
jecxz
inc
push
cs
loop
adc
dec
imul
and
lret
xchg
out
addr16
ss
sbb
pop
jbe
mov
inc
jb
dec
les
jno
int
mov
or
cmp
dec
pop
mov
cli
mov
jmp
sub
in
lods
pop
jb
insb
clc
lds
xchg
pop
popa
mov
aaa
push
fsubrl
mov
xchg
sti
inc
jnp
scas
fnstcw
xchg
jae
adc
pop
or
outsl
lods
cmp
xchg
sarb
loope
push
faddp
int3
jecxz
pushf
push
pop
test
imul
push
jbe
rcll
cld
sbb
jo
rolb
lret
arpl
fmul
testb
inc
add
ret
pusha
imul
push
clc
pop
inc
jecxz
out
pmuludq
jo
inc
xchg
mov
jnp
test
inc
push
out
push
pop
xchg
xchg
inc
jbe
cmp
test
clc
push
xor
sahf
push
arpl
jle
mov
repnz
in
les
and
sbb
and
fwait
addb
lock
outsl
aaa
outsl
sub
in
inc
int3
inc
stos
dec
scas
lret
repz
push
add
syscall
dec
mov
jb,pn
or
cmp
in
mov
pusha
push
mov
pop
and
inc
sarl
bound
icebp
into
sbb
imul
mov
cmp
out
pop
pop
mov
inc
mov
clc
adc
cmp
cmpsl
out
mov
fldl
inc
aas
pusha
dec
and
or
je
and
popa
pop
add
mov
sbb
pop
add
jge
imul
out
addb
dec
insb
scas
push
mov
shlb
push
fsubr
pop
jg
or
leave
into
es
mov
cmc
xchg
pushf
pop
mov
cmp
mov
pop
cmc
push
mov
icebp
arpl
lret
pushf
ljmp
xchg
daa
fidivrs
sahf
mov
jae
icebp
jnp,pt
sbb
ss
jnp
fnstenv
data16
push
jne
inc
jnp
fistpl
js
loopne
push
mov
jae
jg
mov
mov
sbb
iret
pop
xchg
xor
data16
cmp
ror
add
mov
js
outsb
mov
or
push
aam
dec
fxtract
push
movsb
sahf
das
mov
fisttpl
mov
mov
xor
pop
int
push
mov
cwtl
fwait
mov
test
cmc
push
pop
mov
cld
cmp
mov
in
shll
jns
add
inc
mov
repz
addr16
lods
sub
sub
push
inc
pop
fs
arpl
cmp
sbb
and
add
test
xchg
and
pop
mov
mov
bound
xlat
enter
dec
add
popf
js
xor
daa
push
pushf
sbb
and
fisttpll
cmpsl
inc
mov
in
cmpsl
inc
jle
mov
jns
mov
sub
dec
int3
in
nop
or
inc
jb
jo
rolb
cltd
out
lock
es
push
ret
aas
pop
push
testl
insb
imul
add
mov
pop
int3
icebp
pop
sahf
into
xchg
js
pop
loopne
fidivl
push
lret
in
insl
xchg
sub
mov
jo
push
int3
cltd
dec
popa
add
mov
xchg
notb
outsl
in
roll
test
mov
dec
xor
iret
cltd
ss
enter
iret
jae
ret
pop
pop
add
cmpl
cmpl
mov
les
orb
and
mov
movsl
jne
icebp
das
mov
inc
popa
add
arpl
push
add
into
adc
lahf
pusha
sbb
test
dec
jnp
jmp
mov
ds
loope
or
pop
cmp
das
or
mov
xchg
rcrl
adc
movsb
pushf
mov
sahf
mov
jmp
in
jmp
xor
icebp
outsl
repz
xor
lea
divl
in
notl
pop
mov
adc
mov
xchg
adc
dec
cmp
inc
or
add
in
mov
push
test
frstor
cmp
jmp
inc
xchg
cmp
lods
pop
test
jg
stos
ds
test
jns
js
mov
jmp
jb
dec
repz
sub
stos
add
gs
mov
lock
push
mov
pop
jb
adc
lock
fs
daa
aaa
in
imul
sub
or
mov
test
pop
leave
in
shrl
das
cmpb
in
loop
fimull
pushf
push
push
gs
cmp
add
pop
xchg
cmpsb
cwtl
lock
cmp
sbb
pop
push
loopne
rclb
shll
insb
jg
push
pop
mov
cmp
mov
fwait
or
sub
int
cmp
jg
cmp
es
mulb
dec
in
pop
add
imul
cmpl
xor
lds
sub
divw
jne
aas
pop
mov
mov
jns
lret
scas
adc
cmp
sbb
inc
dec
hlt
mov
xor
scas
jb
addl
dec
sbb
es
out
fistps
jle
int
lods
ljmp
sahf
xor
cs
sub
jb
rcrl
xor
outsl
xor
mov
xchg
leave
test
push
xor
pop
mov
lahf
pushf
lret
or
add
jge
push
push
pop
dec
adc
mov
xchg
mov
jne
ja
test
pop
inc
and
je
das
sbb
push
icebp
jmp
adcb
lret
add
sbb
addl
push
add
gs
pop
add
add
mov
xchg
addr16
addr16
aam
ss
xor
mov
push
or
fcmovbe
mov
push
cmc
loop
fnstsw
push
pop
ret
test
xchg
mov
lods
cld
xchg
add
aas
dec
mov
jge
loopne
test
cmc
push
mulb
pushf
dec
shr
ds
rorb
ss
sub
in
sarb
jo
sbb
mov
cld
lds
jle
and
jge
xor
aas
push
subb
sbbl
mov
lcall
shll
jmp
lock
xchg
ficomps
sahf
cmp
inc
inc
sub
jae
je
xchg
pusha
pop
stc
enter
xor
mov
cmp
fidivl
icebp
fisttpl
std
das
dec
or
push
push
mov
ror
ds
in
int
mov
xor
mov
sarl
push
jns
adc
mov
and
jge
bound
ret
or
pop
fcmovb
clc
inc
test
scas
adc
testb
adc
loope
jno
das
cmpsl
jns
ja
cmp
cld
cmp
xchg
jmp
xor
scas
push
push
loope
jnp
fstpt
fxch
out
popf
insb
bound
sub
xor
aad
inc
daa
aaa
mov
adc
jae
jae
repnz
insb
inc
sub
out
push
mov
jle
mov
shl
xor
mov
xor
cmp
sub
imulb
nop
and
adc
cltd
ret
loope
jmp
test
add
cmp
pslld
dec
out
int3
je
mov
or
loopne
push
out
imull
outsb
mov
dec
das
jns
cli
or
push
call
lds
jle
mov
push
int
in
nop
ds
xchg
scas
push
stos
cli
fprem
fsub
mov
xchg
xchg
and
in
inc
xor
mov
pop
jae
mov
enter
insb
imul
add
pop
test
sarb
adc
fimuls
sbb
push
lcall
movsb
out
inc
mov
push
add
aad
cmp
mov
cwtl
or
std
test
mov
jb
sub
sbb
dec
push
int
les
cs
xchg
jbe
popf
sti
shrl
aaa
popf
xchg
in
pcmpeqd
ret
ds
xor
cmc
mov
out
add
dec
jnp
adc
sti
add
mov
sub
sub
mov
jnp
or
icebp
dec
mov
push
dec
mov
fsubs
mov
inc
out
in
dec
mov
mov
xchg
subb
sbb
dec
test
mov
sub
pop
add
jecxz
sahf
cld
xor
jmp
sbb
mov
incl
shlb
sub
cld
js
cmp
insl
dec
incb
sub
lret
jg
mov
lds
cmp
xchg
pushf
bound
rol
cmpsb
push
stos
dec
imul
or
clc
mov
aas
adc
xchg
lahf
stos
aam
xchg
lret
icebp
insb
push
std
xchg
jg
cmp
mov
in
aam
fdivs
nop
cmpsb
loop
aam
push
push
xor
mov
ds
out
jl
es
insb
xchg
add
insb
mov
sbb
lea
xchg
jne
dec
sbb
es
lds
jle
pop
stos
aam
add
pusha
mov
adc
out
cmc
sarb
stos
cwtl
mov
and
and
xor
jge
aas
xchg
cmp
call
add
pop
aaa
sbb
out
stos
test
inc
sahf
shr
loop
dec
int3
iret
sbb
daa
mov
jmp
shr
xor
das
inc
sub
int
pop
jno
adc
adc
rolb
nop
pop
push
in
loopne
repz
icebp
add
xor
xor
cmp
and
aas
shrl
bound
aaa
loope
pop
push
or
leave
add
xor
loope
push
aam
notb
nop
shlb
sub
jp
shrb
out
lret
decl
xchg
xchg
pop
push
xchg
sbb
stc
jns
xlat
lea
sbb
add
std
pop
insb
pop
bswap
into
push
sbb
push
or
lret
xchg
daa
dec
push
lahf
arpl
xchg
and
sar
bsr
popa
out
pop
test
fsubs
mov
adc
outsl
out
cmp
clc
cwtl
mov
jl
lods
int
pop
jne
mov
xor
outsl
push
push
lcall
fwait
inc
jo
jbe
add
aaa
lret
pop
or
daa
mov
ljmp
test
xchg
pop
or
inc
xchg
mov
ja
jb
insb
pop
cmp
cmp
pop
xchg
lcall
pusha
inc
insl
fucomip
inc
xor
pop
inc
jg
xlat
mov
add
stos
add
sub
pusha
jb
imul
bound
movsl
int3
mov
outsb
lock
scas
into
stc
out
cmp
mov
test
mov
pop
xor
ja
mov
sbb
jp
arpl
and
icebp
lcall
pop
ret
or
pop
jle
div
xor
rcl
xor
or
shll
cmpsb
addr16
sub
sub
fs
xchg
sub
or
or
or
and
test
ss
adc
loop
sti
fistl
cwtl
dec
xor
adc
daa
sbb
add
add
lret
mov
mov
rolb
ja
xor
sbb
inc
lea
ds
insl
call
pop
push
loop
mov
bound
psubsb
jg
insl
or
jns
mov
and
dec
loope
aas
enter
xchg
and
sub
fildll
clc
xchg
mov
sbb
lret
xor
into
push
imul
sbb
jmp
mov
imulb
adc
mov
enter
leave
sbb
adc
mov
pop
ficomps
roll
adcl
lcall
lret
pop
cmp
insl
mov
imul
fdivp
les
push
adc
scas
lods
mov
lcall
and
arpl
sbb
int3
fdivs
xchg
fdivrl
xchg
cltd
push
imul
movsl
arpl
jnp
roll
pop
in
sbb
shr
adc
jo
scas
ret
in
shlb
popf
pop
mov
nop
js
lea
leave
call
shlb
mov
stc
mov
sbb
sub
das
pop
pop
dec
int3
jae
into
cmpsb
mov
mov
out
xor
or
jl
mov
mov
ss
in
dec
out
mov
decl
lods
cmp
mov
push
mov
divb
leave
cmp
data16
test
xchg
cli
or
dec
push
jp
fdiv
fdivrp
dec
adc
mov
nop
mov
insb
sbb
xchg
in
scas
in
int3
push
scas
loop
add
cmp
cmp
sbb
test
arpl
into
fmul
sub
sbb
mov
pop
sahf
rorl
mov
sbb
mov
mov
dec
mov
sub
cld
int3
and
sbb
shrb
imul
sbb
push
test
adc
pop
pop
lcall
or
mov
call
ss
jg
iret
arpl
loopne,pt
shlb
outsb
dec
pop
pop
or
lods
stos
sub
mov
sbb
add
adc
data16
jno
fidivrl
sbb
loop
dec
mov
xor
jmp
scas
mov
and
lock
cwtl
push
sbb
add
cmp
or
test
outsb
popa
sub
jecxz
mov
mov
inc
sub
xchg
insl
mov
lods
cltd
xor
cmp
pusha
mov
push
addr16
and
xchg
popa
pop
adc
mov
sub
mov
mov
icebp
leave
dec
adc
fstps
roll
push
or
aad
imul
ret
add
sbb
int
rolb
cmpsb
inc
ljmp
sti
pop
sub
mov
bnd
xchg
sub
sbb
in
iret
push
dec
xor
sbb
int3
mov
in
push
cltd
insb
pop
and
fwait
hlt
pop
dec
push
cmc
and
scas
ds
fisubrs
adc
or
dec
mov
and
jns
sarb
push
daa
mov
dec
dec
pop
rcrl
fcomps
in
call
jp
inc
cs
orl
sti
xlat
hlt
jae
and
push
clc
dec
aad
inc
je
add
add
in
push
fwait
pop
and
dec
mov
push
mov
cmp
cmp
mov
and
dec
xor
pop
loopne
or
jo
cmc
ret
mov
out
loop
inc
jns
pop
aam
pushf
jns
mov
cltd
cld
shr
out
push
lahf
fnstenv
clc
push
mov
push
sbb
ret
pop
pop
mov
sub
dec
lahf
push
lahf
outsb
aaa
push
inc
rorb
xor
pop
fs
test
stos
sti
cwtl
nop
cmpsb
fldt
fnstenv
frstor
mov
add
xchg
jns
imul
addr16
jns
sarl
dec
dec
imulb
ror
cli
jne
lods
inc
inc
xchg
pusha
pop
dec
rclb
and
mov
cltd
jp
xchg
mov
aam
lret
lret
icebp
andl
dec
pop
mov
out
jae
je
mov
jne
xchg
sub
xchg
mov
cmovs
pop
out
xorb
test
shrl
mov
insl
sub
lret
je
xchg
out
scas
push
xor
jle
outsl
xchg
fistpll
call
inc
repz
or
out
insb
sbb
loop
test
or
ds
xchg
loope
cld
sahf
sahf
lret
xor
xchg
fistpl
jne
push
inc
dec
jae
scas
sub
push
lds
daa
mov
jnp
test
sbb
mov
jne
orl
dec
ffreep
loop
out
adc
mov
sahf
addr16
cmp
add
sbb
mov
push
sbb
xlat
arpl
mov
xchg
and
mov
outsb
cmc
push
sub
cmpsl
sbb
cmpsl
in
dec
ljmp
and
fidivrs
push
xchg
rorb
jecxz
pop
cmpsl
and
inc
or
rclb
lods
sub
mov
sub
xor
xchg
lock
rcrb
negb
dec
mov
jo
aad
push
ret
cmp
jns
imul
dec
mov
out
or
push
leave
jecxz
jmp
pop
mov
push
mov
adcl
push
shl
xchg
sbb
cmp
movsb
popf
loopne,pt
add
adc
push
inc
sub
movsl
call
add
imul
mov
inc
pusha
les
add
pop
cmc
cmp
subl
sbb
nop
mov
lods
adc
adc
mov
jo
aam
add
lods
cmp
cs
sub
movsb
inc
sub
inc
loopne
fwait
test
xchg
pop
or
in
popf
in
push
in
xchg
movb
das
sahf
out
ljmp
mov
push
cmp
icebp
repz
in
or
js
cmc
xchg
sbb
or
out
pop
inc
enter
adc
jmp
int3
and
push
mov
pushf
jmp
inc
dec
js
cmp
xchg
add
push
das
daa
std
jl
or
fxch
jecxz
icebp
lods
pop
xlat
ret
jl
test
std
cmp
xor
and
jge
jl
cltd
jmp
jo
insb
or
mov
lock
fcompl
jle
mov
sub
cs
cmp
imul
js
aad
lock
pop
lds
lcall
jmp
faddl
stc
dec
rcrb
sti
mov
mov
rolb
push
xchg
inc
aam
pop
nop
mov
cmp
xlat
in
loopne
dec
sarb
or
ret
mov
std
adc
pop
stc
lea
in
loopne
hlt
xchg
ja
outsl
cmovns
sub
jl
insb
push
cmp
xchg
gs
push
sahf
sbb
cmp
mov
gs
or
inc
or
cmc
bnd
sub
sbb
pop
call
loopne
fsubrs
mov
imul
loope
pop
xor
sbb
pop
push
mov
dec
test
fwait
test
ds
sbb
dec
adc
addr16
fwait
mov
cld
in
rolb
jg
pop
pop
cltd
mov
xlat
loope
xchg
adc
pop
fiaddl
stc
sub
cs
pop
add
adc
ss
cmp
mov
jp
test
mov
popa
mov
fisttpl
lods
imul
mov
arpl
mov
fimull
jns,pt
sub
call
pop
or
and
mov
sub
push
hlt
gs
jp
subb
pop
mov
enter
call
popf
add
call
pop
xchg
js
xchg
cmpsb
rorl
fistps
ret
pop
lods
bound
mov
xlat
iret
cmp
mov
jae
dec
mov
sti
call
and
sub
movsl
mov
add
mov
pop
sub
jmp
les
sbb
cli
data16
pop
aas
mov
rolb
mov
and
fisubs
push
jnp
gs
mov
mov
outsl
dec
testl
loop
ficoms
sub
popa
fnsave
out
sub
leave
ds
pop
mov
adc
addl
cld
mov
movsl
imul
fcoml
rorb
jle
mov
int3
mov
loope
bound
shrb
outsl
mov
gs
faddl
sbb
movsl
iret
lcall
or
fs
das
or
add
and
outsl
icebp
bound
inc
xor
pop
cs
cmp
lds
dec
push
mov
mov
pop
mov
inc
push
icebp
imul
dec
push
dec
add
and
xor
adc
shrl
in
jae
pop
psrad
int
mov
jg
lock
sub
mov
mov
adc
mov
adc
dec
iret
cmp
shll
sahf
cmpsb
sahf
cltd
fwait
pop
std
mov
gs
addl
jge
repnz
push
lcall
mov
fldl
dec
sarl
pop
and
popa
xchg
xchg
cltd
data16
jmp
mov
fstps
stos
mov
mov
xor
xchg
mov
loop
pusha
outsb
adc
shrb
dec
imul
add
inc
lret
or
dec
xchg
iret
in
jg
mov
jns
jnp
mov
adc
cmpsl
adc
mov
test
gs
fcoms
add
fs
lcall
and
leave
stos
and
shr
and
aam
lret
addr16
mov
jbe
push
lds
mov
xor
arpl
mov
mov
jno
jg
xor
bound
scas
sarl
clc
adc
xlat
rolb
in
stc
dec
and
or
repz
popl
pop
ss
iret
lods
inc
or
jo
jns
incb
test
ficomps
pop
xchg
sub
in
xor
jmp
bound
lods
adc
adc
push
scas
mov
mov
pop
fildl
push
xor
rcll
lahf
rep
je
loop
leave
or
xchg
jbe
ljmp
xorb
adc
push
repz
ljmp
lods
cmp
mov
push
cld
das
xchg
mov
flds
mov
or
fimull
cmpb
add
mov
addb
push
dec
dec
jmp
addr16
repnz
adc
clc
xchg
dec
push
xchg
loopne
inc
ljmp
sbb
dec
inc
das
fbstp
pop
mov
xor
icebp
push
xor
movl
lock
scas
pop
pop
arpl
out
imul
cs
cli
repz
fs
push
es
jne
dec
insl
jg
mov
pop
cwtl
outsb
shll
test
mov
in
xlat
pop
xchg
ficompl
adc
xchg
loopne
pop
xlat
pop
sbb
shrb
clc
sub
sub
push
mov
push
dec
ja
stos
push
ret
mov
mov
adc
inc
or
fwait
cmp
xchg
or
stc
jns
sbbb
js
testl
fistpll
xchg
jmp
fsub
mov
stos
sub
and
dec
scas
aad
adc
mov
mov
test
inc
jno
popf
adc
push
flds
sbbb
or
loop
call
pop
idivl
aas
out
fs
xlat
lcall
lods
insl
pushf
mov
jns
fisubs
sahf
out
insl
sub
mov
lret
adc
repz
xor
das
movsb
mov
addr16
outsb
out
xchg
loop
movsb
inc
pusha
popa
dec
shr
and
pop
mov
sarb
or
cmpsl
lods
sbb
das
fistl
inc
sub
ljmp
add
mov
push
push
mov
je
mulb
outsb
sbb
push
mov
out
repnz
rcrb
jg
xchg
and
mov
cmp
jmp
rclb
or
push
xlat
repz
repnz
pop
addl
cli
incl
idivb
es
dec
lods
call
mov
mov
mov
in
and
mov
pop
push
not
mov
aaa
mov
or
push
push
mov
fcomi
mov
cmpb
mov
ret
inc
faddl
add
ljmp
lods
cmp
mov
fwait
jle
stos
and
sbb
lods
mov
dec
push
sbb
icebp
movsl
mov
in
out
cmp
imulb
fistpll
sbbl
push
testl
inc
lea
ret
fcoml
pop
jp
lds
cli
test
sbb
addb
clc
cmc
dec
dec
fimull
into
fs
dec
or
mov
adc
aad
pop
inc
push
cli
sbb
scas
es
push
jg
sbb
add
arpl
arpl
inc
neg
sbb
mov
mov
orl
adc
xchg
pop
fcomps
lahf
dec
in
xor
inc
mov
xchg
or
pop
mov
loope
and
jo
test
lds
xchg
ret
loop
mov
inc
fsin
lods
int3
inc
pop
fstps
rcr
leave
or
sbb
cmp
dec
jl
test
adc
insl
lret
push
dec
cmp
jns
add
xor
push
mov
cltd
xchg
pop
push
cmp
movsbl
es
sbb
in
mov
ljmp
repnz
rol
mov
mov
out
sub
repz
sub
fcmovu
rclb
data16
insl
xor
mov
pop
xchg
cltd
cld
shll
clc
jp
pop
pop
push
mov
mov
gs
ja
add
test
sbb
in
dec
imull
sub
ja
insl
orb
lret
fcmovne
push
into
jnp
dec
xchg
lock
rorl
int
push
cmp
push
and
test
sub
out
mov
jo
or
xchg
push
sti
insb
and
dec
mov
add
in
mov
jle
jns
or
jb
imul
outsl
out
and
mov
inc
cmp
mov
or
lds
cmp
stos
shl
xchg
insb
cli
xchg
push
push
rorb
jns
xchg
pusha
pop
sbb
pop
mov
add
mov
outsl
jl
je
dec
adc
les
sti
and
dec
repnz
call
mov
addr16
and
mov
mov
add
pop
lahf
inc
and
xor
mov
stos
outsb
or
shl
push
ret
jg
loop
push
xor
int3
pop
repz
icebp
pop
scas
outsl
add
xor
mov
pop
or
sub
lea
int
xchg
stos
adc
imul
les
sub
xor
stos
arpl
jge
fstpl
int
lock
dec
xor
cld
add
xor
sahf
test
jecxz
popa
and
mov
jns
xchg
cs
scas
cmpl
mov
sarb
mov
gs
add
dec
xor
hlt
xchg
adc
dec
out
fisubs
cmp
int3
xchg
add
push
gs
fimuls
jae
cmpb
testb
or
sarl
xchg
pop
xor
pop
xchg
aam
pop
rorl
xor
out
inc
inc
mov
jb
xchg
jne
dec
push
xor
insl
cwtl
int
xor
xchg
cmp
outsl
adc
mov
scas
std
fs
mov
sub
mov
cmp
or
jnp
add
sahf
adc
xor
daa
inc
jp
fdivl
pop
insl
mov
add
mov
hlt
mov
jno
stc
aad
push
jl
sub
aas
inc
xchg
adc
jge
or
repnz
jecxz
dec
leave
add
lahf
jae
cmp
imul
jns
fiaddl
dec
lea
lds
addb
roll
lcall
je
and
lahf
test
xchg
sub
push
pop
rolb
mov
rorb
int3
ljmp
addr16
cmp
cmpsb
repz
jnp
mov
cmp
cmc
sarb
add
lods
ljmp
jns
add
dec
cld
mov
nop
jle
push
pop
bound
aaa
pop
push
cwtl
jnp
lods
les
dec
lock
jle
push
mov
mov
or
inc
sub
lret
dec
icebp
push
push
sahf
cltd
sbb
gs
pop
xor
popf
push
rcrl
stos
aad
or
jne
dec
push
fistpl
cmp
shrl
mov
arpl
js
int3
push
decl
jle
nop
add
and
cmpb
mov
or
fsubl
xchg
into
test
nop
jge
xchg
test
js
push
xchg
repz
scas
insl
loopne
leave
mov
xor
mov
push
dec
xchg
gs
icebp
and
jb
jno
push
je
and
cli
imul
adc
cmp
test
pop
push
test
imul
sbb
jns
dec
push
adc
and
sub
xor
fisttpl
sti
pop
sub
dec
sbb
or
data16
mov
sub
fbld
nop
loope
stos
cmc
cmpsb
add
cs
jno
mov
mov
dec
scas
pop
cli
setno
or
jnp
and
xchg
inc
mov
in
mov
mov
rclb
add
add
sti
aad
mov
lret
xor
jge
jo
test
pop
mov
scas
std
fnstsw
sub
mov
push
and
xor
sarb
cltd
inc
rcr
push
popf
sbb
fnstcw
jecxz
xor
imul
jnp
ss
fsts
outsb
enter
imulb
icebp
sbb
sbb
stos
fs
jo
mov
mov
add
push
adc
mov
push
stos
test
dec
dec
fs
mov
and
xlat
dec
lock
xor
nop
jb
jmp
dec
jno
inc
jb
adc
mov
call
xchg
movsl
test
xor
sub
je
icebp
push
mov
stc
dec
push
stc
loopne
add
xchg
movsl
test
lds
push
add
mov
mov
addr16
adc
negb
cmp
aam
repz
or
into
xor
imul
and
mov
xchg
xchg
or
dec
push
mov
scas
addb
mov
mov
add
dec
inc
jbe
xchg
or
mov
shlb
inc
push
aad
test
adc
jno
dec
repz
and
add
ret
insb
lds
fists
adc
push
dec
jne
test
ja
gs
loopne
push
jo,pn
pop
insl
adc
rorb
bound
xchg
js
fadds
popf
cltd
mov
mov
mov
push
lds
push
xchg
lods
iret
sbb
pop
pop
and
jae
push
jno
pop
bnd
ret
jge
lret
jmp
popf
cmp
js
rcrl
cmp
mov
sub
cmp
mov
hlt
mov
cmpl
push
dec
cmp
shlb
out
sbb
syscall
fnstcw
out
inc
mov
sub
add
or
cmp
movsl
divb
into
jae
test
das
mov
icebp
loop
aam
inc
push
or
xchg
pop
mulb
push
mov
loope
adc
popf
test
jg
shll
sub
je
push
and
xchg
inc
je
or
shrl
dec
fs
das
dec
fcoms
fcompl
ljmp
lea
sbb
xor
mov
cmpsl
subl
jo
stos
ret
cmc
mov
cwtl
and
sub
pushf
xchg
ds
sti
adc
adc
andb
fwait
repz
jle
and
int3
xchg
sarb
jae
jle
dec
jne
je
inc
leave
cmpb
sbb
cmp
cmpsl
sub
pusha
sub
jl
cmp
jg
mov
xor
cwtl
mov
sbb
scas
int3
out
adc
repnz
in
fdivrs
aas
sbb
clc
out
jb
mov
sbb
imul
xchg
jns
les
push
and
push
cltd
repnz
aas
xchg
aam
mov
dec
iret
xchg
jp
gs
mov
pop
call
in
jae
mov
adcl
pop
jbe
and
mov
scas
pop
cwtl
mov
addr16
es
and
cmp
dec
xchg
add
leave
sub
out
dec
xchg
mov
icebp
and
in
jl
inc
inc
inc
idivl
mov
jnp
inc
pop
and
es
xor
mov
hlt
ret
inc
jge
call
adc
sub
imul
xchg
inc
mov
jne
fiadds
ja
mov
cmp
pop
cmpsb
and
bound
in
jg
jl
adc
mov
cli
jno
int
and
fnstcw
jns
shrb
rclb
fiaddl
daa
imul
ret
mov
lds
fisttpl
push
inc
jmp
and
mov
pop
mov
jbe
sub
xor
xor
daa
or
fisubrl
xor
jns
sub
out
mov
adc
rcrl
adc
neg
jp
loope
movsl
push
push
mov
fwait
dec
jo
or
mov
push
push
mov
mov
push
cmp
xchg
jns
subb
pop
out
pop
inc
sbb
sbb
sub
and
mov
sub
adc
les
imul
jae
push
into
scas
dec
out
sub
or
pop
dec
pop
mov
sub
pusha
nop
and
loope
mov
ljmp
je
sub
movsl
jno
cmp
out
bound
in
movsl
aam
ret
adcb
cmp
loopne
xor
iret
cmc
bound
sub
ror
pop
xchg
inc
add
das
jae
xor
pusha
lret
sbb
in
int
adc
test
xor
stos
or
jmp
sbb
out
xchg
xor
mov
jle
les
filds
cld
imul
jbe
jg
stos
adc
mov
sbb
jno
jae
icebp
mov
cli
movsl
sub
shlb
push
es
repz
mov
out
test
mov
imul
pop
xchg
push
cmp
js
xor
cmp
dec
out
in
repnz
jecxz
inc
out
mov
lods
clc
and
in
pop
push
push
hlt
or
dec
dec
xor
repnz
arpl
push
inc
mov
gs
mov
shr
das
dec
cwtl
test
and
lds
loopne
add
xor
in
ds
shlb
pop
cmp
shl
movl
push
mov
push
sub
jno
xchg
test
jno
roll
lods
ljmp
cmp
hlt
add
addr16
xchg
fstps
dec
stos
gs
sbb
aaa
es
pop
mov
cmp
nop
push
ss
xchg
sbb
out
divl
pop
getsec
xor
ret
fs
jmp
loop
and
std
insl
mov
and
notb
call
mov
aad
in
cmp
stos
pusha
pushf
daa
xor
mov
inc
repz
je
sbb
mov
cmp
hlt
jne
es
mov
insb
lea
sbb
pop
or
sarb
pop
or
adc
sub
imul
aad
xor
adc
xor
add
inc
adc
lods
cmp
fnstsw
add
popa
dec
movsl
lret
xchg
push
adc
in
push
cmp
das
lds
sub
out
add
outsb
cmpsl
push
mov
pushf
adc
outsb
cli
dec
out
inc
inc
ds
leave
jnp
in
test
lea
clc
mov
mov
aam
add
sbb
xchg
mov
in
sbb
cmp
jg
pop
mov
jge
imul
aad
paddsb
dec
cli
aam
rcr
inc
and
cmp
push
pop
adc
xor
icebp
jne
iret
mov
jecxz
cmpsb
mov
hlt
adc
xor
cwtl
lea
xor
int
push
mov
push
loopne
push
call
push
lock
iret
sbbb
lds
sbb
mov
lahf
pop
and
aaa
xchg
lret
rcrl
int
imul
adc
push
test
iret
and
int
cld
jmp
sub
fiaddl
xchg
ljmp
xchg
adc
lods
xchg
ss
lods
loop
sbb
in
pop
push
aad
movntq
cli
test
mov
rorl
dec
stc
push
lahf
mov
mov
and
pop
jmp
fidivrl
cmp
jge
mov
xor
insb
xor
inc
xor
xchg
popl
stos
pushf
dec
lcall
pop
outsb
pushf
loop
jmp
or
js
inc
ja
push
pop
scas
jo
dec
ja
pusha
xchg
cmpsb
jg
cmp
jg
mov
pop
hlt
or
push
out
stos
jae
adc
fistps
mov
rclb
mov
xchg
out
cltd
das
je
xchg
fldl
in
xor
cmp
jmp
insb
mov
cwtl
pop
loopne
cmpsl
mov
push
rcrb
mov
test
mov
sub
or
mov
into
or
mov
mov
lret
rorb
push
mov
pop
pop
add
mov
mov
pusha
lods
fwait
dec
shlb
and
cltd
dec
add
jg
mov
pop
popa
int3
sti
and
stos
out
lret
test
adc
pop
pop
or
in
movsb
lods
jo
sbb
add
xor
adc
stos
loope
fldcw
jno
out
lods
xor
out
aad
fists
pop
dec
mov
or
push
jmp
xlat
push
cmp
xchg
xchg
std
cmp
adc
pop
sti
in
scas
inc
or
mov
insl
inc
pop
add
out
dec
dec
mov
sbb
ja
gs
rorb
jne
rcr
sbb
pusha
nop
stos
mov
pushf
roll
out
dec
sahf
sbb
loope
cmp
out
lods
les
jecxz
xchg
fs
int3
das
xchg
xor
pop
jns
addr16
insb
and
nop
sahf
jo
orb
mov
das
xchg
clc
jge
jb
sub
mov
les
push
dec
mov
dec
das
lea
leave
enter
jmp
jge
jbe
pop
pop
push
inc
out
in
sbb
iret
mov
ljmp
scas
ds
push
xlat
xchg
or
and
scas
sti
push
pop
outsb
mov
sub
pop
cmp
out
testl
mov
xor
cmp
and
repnz
push
push
pop
adc
lahf
pop
loopne
ret
std
adc
test
std
xor
mov
das
shll
pop
mov
jge
js
in
sbb
movsl
imul
lds
adc
xor
jb
and
push
scas
hlt
repz
xorl
cwtl
ss
out
rcl
and
ror
pop
mov
sbb
popa
push
jnp
sub
dec
jnp
ret
in
enter
push
push
sti
cmp
ror
push
cmpsl
sub
or
inc
jo
cwtl
xchg
lods
add
insb
xchg
addl
sbb
subb
daa
jne
bound
test
ss
mov
xorb
jns
ds
pushf
adc
and
inc
xchg
sub
xchg
vpunpckhbw
or
mov
inc
into
xor
sbb
ds
mov
add
int3
negb
add
mov
lods
dec
adc
mov
out
mov
adc
xchg
mov
sbb
dec
jae
icebp
jp
push
repz
xchg
or
add
jle
out
pop
popf
and
out
hlt
inc
jns,pt
jno
mov
mov
sub
mov
jge
pop
jno
fstl
stos
jle
fidivrl
pop
sbb
sub
pop
mov
rcll
imul
and
clc
inc
mov
imul
cmpsb
sub
cli
mov
pop
adc
mov
cwtl
mov
sbb
arpl
imul
icebp
stos
jo
jmp
enter
fbstp
cmp
mov
dec
movsl
mov
neg
push
lods
add
lret
and
je
in
jbe
sbb
xchg
repnz
pop
lcall
in
add
pusha
mov
lea
xor
shlb
fwait
repnz
add
cli
in
jbe
inc
cwtl
xchg
dec
repz
cli
sbb
push
push
ficomps
inc
mov
ret
dec
sub
inc
sub
xchg
fildll
jp
mov
jecxz
andb
shll
dec
into
das
bound
mov
out
xchg
je
lods
test
or
mov
in
mov
cmp
pop
xchg
out
add
sub
mov
and
movsl
movb
sub
std
rcr
push
add
cmp
xlat
imul
xchg
inc
jecxz
xchg
addl
in
outsb
mov
movsb
xchg
jmp
xchg
sbb
mov
mov
fs
mov
decb
test
test
push
pusha
lods
es
mov
adc
xchg
mov
stos
xchg
roll
mov
jmp
daa
icebp
sbb
xchg
mov
mov
jmp
mov
dec
dec
jge
add
iret
fisttpll
and
lret
sub
lods
lods
cli
imul
out
scas
lret
fldenv
std
rcr
mov
or
out
bnd
ficompl
sub
jp
jbe
sbb
mov
jmp
in
in
mov
movsb
mov
cmp
popf
jp
mov
push
jecxz
and
or
ret
inc
ficoml
out
inc
cltd
aas
loop
gs
sbb
add
cmp
jno
test
loop
sti
pop
push
out
lahf
xchg
dec
jo
and
sub
mov
pusha
cltd
cmp
aaa
mov
and
sub
andl
mov
jge
pop
xor
popf
add
arpl
mov
inc
pop
jmp
add
insb
pop
or
add
lods
dec
or
or
mov
pop
repnz
into
pushf
into
repz
rclb
fldt
in
and
mov
sub
mov
xchg
xor
mov
xor
adc
je
mov
adc
cmpsb
ret
cmp
xchg
movsb
icebp
daa
mov
inc
push
push
repnz
xchg
jae
xchg
bound
fildl
xchg
xor
in
lods
jecxz
mov
add
cld
out
das
cld
push
xchg
lods
sbb
adc
lods
orl
pop
dec
sub
sti
nop
push
repz
bound
pusha
jb
popa
mov
mov
scas
out
mov
int
adc
data16
inc
adc
mov
inc
ret
sub
inc
pop
mov
mov
dec
pop
push
push
insb
push
test
inc
or
pop
xor
outsb
orb
xor
and
int3
pop
iret
push
pop
cmp
push
in
icebp
add
mov
fadds
pop
jg
mov
call
movsl
lea
sbb
repnz
jo
das
mov
adc
stc
push
enter
push
lock
or
mov
les
inc
rclb
dec
sbb
add
inc
in
sbb
cmpsb
push
packssdw
loope
mov
or
cmp
dec
dec
pusha
std
pusha
xchg
inc
sub
push
iret
and
ss
fldcw
rcll
aaa
cmc
mov
add
add
xchg
xor
mov
pop
lods
test
and
lahf
jp
jne
push
mov
lahf
mov
jns
test
roll
aad
out
mov
pop
in
out
movsb
jmp
sahf
xor
jae
mov
shrb
rcrb
aas
andb
ds
and
cmpsl
dec
movzwl
cmp
aad
stc
push
mov
and
in
rorl
inc
into
es
lahf
pushf
movsl
rcl
mov
insl
insl
stc
cs
mov
mov
test
leave
jne
add
test
dec
outsl
insl
hlt
iret
add
stos
fisubrs
jbe
jmp
enter
mov
roll
mov
lock
stc
pop
in
and
sbb
in
cmpsl
dec
je
and
jbe
stos
jl
mov
dec
andl
push
ret
mov
push
sbb
dec
arpl
xor
mov
cltd
rclb
and
xlat
hlt
pop
movsb
aam
mov
and
out
fbld
mov
xorl
aas
aas
mov
pavgb
mov
xchg
fcomps
push
into
leave
xor
lock
xor
pop
addr16
dec
xchg
out
mov
adc
scas
cmp
pop
incb
mov
sub
scas
pop
jnp
fldl
cld
sti
adc
inc
shr
aas
or
rolb
and
inc
mov
push
ret
leave
ljmp
mov
in
sahf
and
cld
add
xor
aaa
xchg
fcmovne
lock
fnstcw
mov
adcb
mov
repnz
xor
scas
mov
push
sub
out
adc
cmpsb
mov
xchg
popa
or
adc
dec
dec
inc
mov
add
and
inc
pop
push
mov
xor
push
mov
test
or
test
loopne
stos
jnp
push
mov
xchg
shrl
aam
stc
sbb
loope
xchg
jle
mov
cmp
aas
rclb
ljmp
xchg
xchg
les
jae
sub
xchg
out
test
fnstenv
int3
nop
xchg
jle
jle
or
jle
aad
pop
addr16
add
mov
dec
xchg
in
ss
mov
mov
mov
aam
mov
std
xchg
push
scas
cmp
aam
jae
push
mov
icebp
jp
push
add
jb
pop
cmp
popf
lock
xchg
mov
iret
loope
gs
fwait
push
push
adcl
out
sbb
sti
cld
xchg
xchg
mov
neg
insb
jge
xor
lret
enter
decl
repnz
das
pop
cmp
imul
mov
adcb
jmp
std
fidivrl
push
jg
sub
push
mov
push
xor
xor
cmc
cmp
rolb
mov
enter
fldl
std
js
xchg
sub
out
movsl
cmc
xchg
add
jg
pop
mov
pop
jno
inc
and
fidivs
cmp
es
std
inc
aas
sbb
nop
jb
pusha
pop
cmp
cmovnp
mov
cwtl
sub
and
and
dec
inc
outsl
xor
loop
clc
hlt
mov
loop
add
iret
jo
sbb
dec
cwtl
mov
addr16
scas
cmp
push
popa
cld
mov
clc
mov
or
mov
jg
adc
push
scas
xchg
ret
aad
jb
ret
out
xchg
xor
insb
xor
gs
in
xlat
imul
or
lock
adc
pop
push
int3
mov
lret
in
mov
xchg
add
jmp
xor
cmpb
cmp
push
loop
das
and
scas
rorl
scas
popf
jae
inc
stc
and
rcrb
xor
rcl
or
or
mov
fcoms
hlt
pop
pop
cld
jnp
sbb
and
ror
scas
pop
lcall
jns
pop
dec
lret
pop
popw
sub
lods
ja
jge
sarl
adc
pop
dec
aas
sub
into
sub
jns
sub
jae
fistpll
pop
cmp
sub
imul
imul
push
xchg
xchg
mov
ficoms
mov
sbb
int3
and
gs
xchg
adc
inc
sub
ljmp
xor
cmp
rorb
les
push
mov
cmp
pop
iret
movsb
insl
enter
shll
test
xor
mov
push
sahf
cmp
stc
sub
mov
ret
inc
jmp
das
andl
divb
and
js
mov
mov
test
in
mov
out
mov
jp
jge
in
outsl
shl
mov
stos
idiv
cli
mov
mov
test
xchg
inc
fs
dec
cmp
iret
dec
add
fmul
jg
sbb
je
ret
pop
js
lods
mov
dec
insl
test
pusha
xchg
aad
cli
fucomip
push
pop
pop
add
sbb
adc
adc
stos
dec
mov
or
inc
test
sti
mov
push
aas
sub
data16
in
push
mov
push
jnp
in
testb
fs
lea
out
cmp
push
pop
scas
or
sbb
push
push
js
xor
mov
dec
inc
scas
cld
outsb
push
inc
fs
mov
inc
cli
scas
in
ljmp
pop
cmc
mov
cmp
ja
xlat
add
out
push
mov
cld
add
stos
push
imul
ljmp
das
add
fnsave
pop
push
sbb
enter
or
cmpsb
dec
adc
jl
jmp
test
les
les
lods
test
push
repnz
ljmp
inc
xchg
cwtl
dec
sub
inc
inc
cmc
ss
faddl
out
jl
lahf
add
stos
dec
dec
sub
les
insl
adc
roll
sbb
divl
movsb
mov
test
mov
inc
or
pop
and
icebp
dec
pop
push
xchg
pop
into
pop
xorb
push
xchg
cwtl
int
mov
js
roll
adc
sub
push
add
testb
int
inc
cmp
rorb
mov
mov
add
xchg
into
lret
add
push
jnp
pop
cmp
adc
hlt
pusha
inc
pop
mov
rcll
dec
iret
js
mov
aas
push
push
aad
dec
xchg
ljmp
cmp
out
xchg
cmp
push
jae
add
add
xchg
xor
adc
cmp
pop
aas
push
xor
je
not
imul
inc
mov
inc
xchg
in
push
aad
out
movsl
pop
cmp
xor
mov
add
pop
addr16
pushf
push
or
bound
xchg
out
jo
in
sub
adc
into
les
inc
sbb
sbb
and
dec
fstpt
rcll
repz
sub
fdivl
cld
or
and
push
nop
jnp
pop
jno
xor
jbe
es
sbb
outsb
ljmp
stos
shlb
xorl
enter
mov
shll
gs
divl
mov
jb
scas
pop
xlat
decb
inc
aam
movsb
arpl
scas
shlb
adc
out
in
ror
aam
in
mov
cmpsl
mov
lods
lods
fcomps
or
push
scas
ds
adcl
cli
mov
shlb
xchg
mov
pushf
or
scas
or
and
and
lret
sbb
pop
ss
inc
movsl
xchg
into
or
adc
dec
xchg
xor
repz
jecxz
stc
cmp
inc
push
and
movsl
jmp
pop
xor
xchg
sub
mov
iret
mov
mov
mov
ss
fcomps
insb
sub
dec
and
loop
fwait
inc
mov
lret
jp
pop
sbb
sbb
and
enterw
mov
add
xchg
xchg
sahf
adc
in
arpl
add
or
push
outsb
xchg
lods
hlt
push
adc
xor
add
jns
inc
lcall
xor
mov
test
in
mov
mov
int3
xlat
cmpsb
cmc
sub
ret
shrb
cmp
jno
cmp
adcb
insl
call
sub
daa
xchg
das
xchg
mov
fdivrs
popf
repz
test
test
sbb
inc
xor
mov
dec
push
xor
addr16
adc
enter
cwtl
fldln2
in
xor
aaa
ficomps
mov
ficompl
jno
into
xchg
mov
xor
sub
movsb
adc
fcmovne
data16
in
xor
loop
xor
mov
xchg
arpl
shrb
add
arpl
mov
mov
push
test
dec
jns
or
xor
mov
xor
cli
dec
test
cmp
jne
loopne
push
or
clc
pop
insb
movsb
xchg
shr
js
mov
adc
icebp
mov
push
imul
js
mov
ja
shrl
test
pop
adc
sbb
mov
stos
xlat
and
xchg
mov
pop
sub
popa
in
mov
cmpsl
add
xchg
clc
xchg
xchg
mov
mov
ret
xchg
iret
mov
lret
add
pop
adc
scas
sbb
xchg
mov
cmp
push
and
sbb
dec
sbb
pop
xchg
sbb
lret
loope
data16
jnp
push
jbe
push
and
jg
push
jmp
dec
mov
std
push
addr16
push
fimull
adc
adc
pop
mov
pop
aam
jns
pop
scas
jmp
push
mov
dec
or
xlat
lret
pop
fs
je
sbb
mov
in
and
aaa
sbb
sub
divl
cs
out
mov
sub
repnz
mov
sub
mov
arpl
add
xchg
or
and
dec
imul
mov
shll
adc
rorb
sbbl
outsb
aaa
sarb
mov
test
fimull
sbb
addr16
adc
sbb
sub
out
and
aas
leave
lcall
or
in
aam
ljmp
jbe
or
sbb
sbb
or
dec
shrl
repnz
pop
hlt
mov
dec
sbb
pop
sub
shll
repnz
xlat
mov
mov
xchg
xor
fdiv
mov
inc
jecxz
stos
int
out
addr16
add
lods
scas
dec
mov
jle
xor
ret
daa
push
repnz
inc
jg
push
sub
loope
aaa
leave
sub
out
push
push
mov
mov
arpl
cmc
mov
or
fstpl
xchg
jbe
push
in
ds
sti
sti
adc
dec
loop
mov
and
rorb
cmp
mov
outsl
popf
andps
push
push
inc
xor
or
in
shlb
jns
fldlg2
in
jl
xchg
test
xor
jl
ret
in
fisubrl
ret
lock
adc
cmovg
pop
ss
cmp
js
js
andb
or
sbb
mov
adc
adc
dec
scas
cltd
push
das
push
test
adc
xchg
xor
int
mov
jp
movsl
jl
ljmp
popa
and
mov
cmpsl
jecxz
xor
sub
in
push
inc
arpl
pop
sub
adc
aam
enter
push
test
and
pop
push
mov
andl
icebp
sarl
int
popa
sub
mov
in
fnstenv
ret
cmp
cld
xor
cmc
or
xlat
ret
xchg
lds
in
cmc
lret
add
das
sbb
enter
push
lcall
mov
xchg
lods
push
mov
nop
ret
daa
sarb
xchg
dec
dec
aad
sub
jg
xchg
rcrl
int
fidivrl
mull
std
mov
adc
repz
in
das
sub
js
mov
int3
lret
outsb
push
xchg
in
add
into
and
adc
fsubl
mov
pop
and
jno
arpl
dec
pusha
mov
gs
mov
mov
rolb
ja
add
fistpll
xor
fstl
jns
mov
fiadds
push
pop
or
cmp
fldcw
iret
and
popl
push
or
aaa
rcr
lods
sub
push
mov
iret
xchg
push
pop
sub
xchg
xchg
cmp
pop
mov
jae
scas
pmaxsw
outsb
mov
inc
cmp
into
push
push
repnz
fisubl
lcall
mov
dec
mov
loope
pushf
mov
mov
mov
xor
pop
mov
sub
mov
pop
icebp
inc
ret
mov
pop
orb
and
hlt
mov
pusha
mov
sub
in
dec
enter
in
movsl
push
movsb
cmp
sbb
imul
sti
pop
xor
push
mov
jne
or
lahf
lods
or
jle
insl
mov
std
cli
adc
mov
mov
jno
mov
dec
popf
out
fcmovbe
and
lret
mov
mov
jnp
and
jnp
jmp
sub
int
dec
sbb
or
int
or
dec
push
out
int
add
and
mov
lods
decb
subb
arpl
scas
xor
mov
std
subb
orb
icebp
jne
cmp
mov
pop
test
jmp
cmc
adc
sub
inc
scas
jmp
insb
xchg
movsl
inc
fwait
push
xchg
sbb
push
sbb
fimull
in
xchg
scas
mov
or
dec
xor
xchg
xor
cli
repnz
mov
ljmp
jae
hlt
sbb
stos
insl
mov
lahf
mov
mov
xchg
push
sub
add
pop
test
shl
loopne
shll
or
sbb
mov
dec
stc
cmpsl
stc
mov
xor
stos
es
xor
hlt
outsb
jno
mov
fiaddl
imulb
pop
adc
push
outsb
subl
xor
sbb
movb
pop
and
out
jae
fstl
mov
push
mov
cmpsb
mov
ds
es
sub
sbb
lcall
sbb
add
movl
ffree
dec
decl
sbb
add
lea
leave
and
lds
push
jne
mov
xor
sbb
add
sub
or
fdivs
add
pop
pop
dec
mov
pop
sti
out
or
shrb
orl
insb
mov
mov
jl
sbb
in
repz
jmp
dec
mov
sub
shr
and
pop
xor
add
add
mov
jmp
adc
push
ds
mov
out
inc
mov
pop
or
push
dec
cld
loop
pop
sbb
pusha
jno
mov
hlt
pop
cwtl
call
cmp
xor
or
xchg
xchg
adc
xchg
inc
test
mov
movb
cmp
addr16
lods
fmulp
fldl
cmp
fsub
jle
stos
pusha
imul
mov
ds
sbb
and
inc
inc
cmp
jmp
pop
fisttpll
sub
sti
pushf
cld
fsubrl
call
test
sbb
aas
lea
pop
in
and
xor
mov
mov
inc
adc
xchg
int
mov
aam
sub
sbb
inc
mov
xchg
mov
mov
xchg
in
xchg
add
je
pop
ja
mov
repz
mov
mov
lcall
lea
fsubrs
std
in
and
rorl
repnz
movsl
loop
adc
push
insb
call
dec
pop
ja
add
popa
insl
and
cli
jg
iret
insl
insb
push
push
mov
pop
inc
or
test
sahf
test
xchg
jns
inc
sub
jmp
lods
sbb
fisubs
in
gs
jno
and
add
xchg
push
lahf
mov
inc
adcb
mov
insb
sbb
sbb
mov
or
mov
jnp
cmpsl
dec
mov
mov
jo
popa
aas
xchg
inc
lahf
adc
pushf
stc
inc
xlat
cmp
cmpsb
daa
and
dec
popa
insl
gs
xchg
pushf
in
test
lods
orb
divb
push
xchg
fwait
dec
dec
insl
in
push
push
hlt
cli
fisubl
je
ds
sub
enter
aad
add
jnp
dec
adc
jl
dec
cmp
adc
mov
jnp
aad
xchg
add
dec
fwait
cmp
outsl
fdivr
shlb
xchg
int3
mov
in
aad
rorb
dec
inc
push
aaa
lock
jo
lods
push
pop
and
int3
cmp
insl
rcl
mov
rclb
pop
cmp
xchg
adc
in
mov
out
test
jecxz
call
push
push
aaa
cmp
mov
pop
ja
sub
push
out
fdivrp
addl
or
add
popa
jne
div
sarl
push
mov
mov
dec
js
scas
and
movsl
inc
jmp
cmp
mov
out
call
pop
aaa
out
cli
in
adc
inc
loope,pn
in
xchg
lcall
pop
cli
add
xor
inc
and
aad
cmp
xchg
or
shl
lcall
xchg
sub
cld
mov
sub
enter
ds
ficompl
dec
nop
addr16
inc
cld
xchg
lock
cs
fists
push
test
pop
and
and
pop
cld
fisubs
jmp
stos
mov
dec
mov
fs
pushl
and
imul
jns
and
jmp
add
dec
push
enter
lds
or
inc
mov
das
mov
shl
int
enter
out
fisubs
pop
xor
mov
daa
xlat
lret
push
cmpl
jne
int3
jno
fstps
mov
stos
push
inc
mov
or
mov
fnstsw
mov
stc
enter
xchg
pop
fwait
negl
jbe
cltd
push
inc
pushl
inc
out
test
inc
imul
jmp
inc
xor
mov
jb
mov
mov
sub
fiaddl
cmp
jne
mov
mov
test
shlb
pop
into
ds
pop
mov
cmc
or
mov
addr16
loop
lret
movsb
add
in
xor
mov
aam
mov
loopne
pop
xorb
insb
pop
mov
sbbb
push
xor
out
fidivrs
jb
cmpsb
inc
sbb
xchg
sub
loopne
int3
adc
fs
mov
cmp
push
fnstsw
cmc
add
mov
adc
ror
adc
cld
vpaddd
adc
mov
sarb
jmp
repnz
cmc
jge
int3
lcall
lcall
mov
xor
adc
pusha
cmp
imul
daa
sbb
cmp
cmp
mov
sahf
xor
dec
call
adc
ss
sub
mov
lods
into
je
xor
shl
pusha
pop
adc
add
inc
mov
cmp
lods
mov
iret
jge
xor
add
mov
dec
sahf
push
pop
pushf
ret
jnp
xchg
add
mov
inc
lock
adcb
iret
add
out
int3
fiadds
je
inc
std
in
fsubrl
orl
mov
into
xor
aas
jp
mov
mov
mov
lock
inc
mov
test
aaa
cli
aad
out
sub
das
dec
mov
out
mov
sub
rolb
add
nop
lret
jl
mov
pop
sbb
mov
lcall
dec
or
pop
aas
test
lret
add
mov
insb
cs
mov
fadd
jne
mov
xchg
xor
leave
and
inc
flds
push
push
shrb
add
sarl
push
aaa
in
imul
cwtl
push
int3
mov
push
loope
ss
push
or
cli
sbb
adc
in
orl
imul
lds
ljmp
fstpt
mov
or
out
mov
enter
jns
filds
fs
mov
mov
inc
sbb
and
into
pop
aam
dec
lods
icebp
mov
jae
or
xchg
inc
mov
sti
dec
in
sbb
outsl
push
not
mov
pop
cmp
cli
sahf
rcr
stc
mov
fstl
cli
dec
cld
push
decl
out
lock
and
cs
jle
push
nop
fadds
cwtl
rcll
sbb
inc
jmp
push
add
jb
int3
ljmp
adc
sub
sub
mov
sub
fisttpl
sahf
js
cmp
mov
mov
fistl
sub
push
mov
fdivrl
cmp
xor
ret
sahf
push
mov
sbb
inc
dec
out
into
div
cwtl
gs
inc
mov
mov
test
shll
sub
and
push
pushf
cwtl
push
test
jge
inc
nop
mov
push
xchg
sbb
repz
mov
stos
std
inc
sub
and
int3
mov
mov
insb
fldt
scas
xorb
add
jle
push
cwtl
sbb
or
sbb
bound
push
out
mov
jge
adc
cs
mov
lcall
mov
sub
mov
or
rorl
arpl
cmpl
out
inc
adc
push
pop
stos
rorb
mov
outsl
inc
xchg
inc
jge,pn
into
dec
xor
adc
pusha
cmp
mov
hlt
mov
mov
sbb
lcall
xchg
push
xor
into
stos
add
setp
dec
push
add
popf
jbe
movsb
xchg
testb
sbbl
sub
lods
enter
mov
iret
push
dec
adc
mov
cmp
mov
jle
std
lret
adc
jo
in
pop
lods
rcr
fstpt
repnz
shlb
mov
es
into
adc
std
dec
jnp
push
sar
jp
dec
mov
aas
xor
test
mov
in
sti
lea
pop
ret
into
push
pop
cmpsb
jmp
aam
dec
xor
mov
test
addr16
mov
fwait
insb
ss
jo
sub
push
outsl
and
cmpsb
loope
mov
mov
inc
cli
jmp
mov
loopne
into
lea
cmpsb
jne
repz
cltd
dec
fidivs
mov
in
cmp
sbb
filds
rol
dec
fadd
push
and
stos
int3
pop
in
jl
jmp
lock
push
pop
inc
xor
or
pop
fwait
aaa
in
addr16
pop
inc
incl
icebp
add
sbb
jb
pushf
std
push
jae
loope
lock
pusha
js
lret
fistpl
xchg
xchg
lgs
mov
or
jmp
cmpb
rolb
fs
nop
pop
aad
sbb
gs
xchg
xchg
jg
cmp
mov
inc
push
mov
adc
inc
inc
cld
loope
mov
push
push
pop
imull
xlat
sub
ljmp
jb
and
call
clc
mov
rolb
and
int
cltd
mov
mov
js
cmp
add
mov
arpl
loopne
bound
xlat
or
pusha
aas
call
test
sub
or
ja
pop
jmp
xchg
jecxz
mov
outsl
fmull
stos
mov
mov
in
dec
xor
inc
jg
dec
test
jmp
aam
xchg
addb
in
mov
int3
test
add
mov
in
mov
xchg
fwait
inc
jne
inc
addb
in
sbb
pop
and
add
jne
cld
cwtl
rcll
rcll
aad
loope
seta
sbb
mov
imul
inc
and
movsb
push
testb
mov
sbb
test
les
push
xor
mov
inc
int3
push
xlat
xchg
mov
aaa
push
in
clc
sub
xor
imul
jl
icebp
sub
jecxz
mov
mov
fidivl
insl
or
imul
mov
mov
ret
pop
dec
int
xchg
repz
test
cltd
dec
enter
fnstenv
jmp
fists
outsb
add
push
fisubrl
push
into
inc
movsl
lods
mov
mov
jns
out
fstps
mov
and
mov
lods
xor
xchg
sbb
add
or
adc
icebp
cli
repnz
popf
lret
mov
jbe
ret
rcl
shr
mov
std
dec
repz
add
hlt
and
int3
repnz
pop
push
pop
xchg
add
mov
ret
dec
cli
ss
or
adc
xchg
or
pop
cmp
push
xchg
mov
and
pop
and
sub
test
jns
pop
lock
mov
out
mov
mov
mov
adc
lods
aam
pop
mov
pop
flds
push
xorl
mov
inc
cmpsl
dec
aam
adc
jnp
dec
mov
loopne
xor
shlb
fisubrl
stos
gs
mov
push
xchg
dec
lcall
nop
repnz
jns
sbb
adc
fnsave
lcall
sub
sub
into
jp
nop
cmp
and
push
inc
xchg
and
dec
pop
sar
insl
aam
add
iret
sub
dec
aad
and
xchg
xor
pop
jmp
movb
mov
cmp
add
xor
sti
xchg
pmaxsw
sti
and
adc
mov
push
lock
adc
mov
stos
pop
leave
mov
adc
lock
mov
into
nop
ss
sbb
sbb
xchg
sub
xchg
pop
adc
int
mov
es
push
icebp
js
mov
adc
setne
inc
mov
mov
pushf
lret
into
push
stos
pop
or
jno
mov
push
shrl
sbb
movsl
scas
mov
xchg
and
cmc
loopne
xchg
jp
imul
or
pushf
lock
iret
inc
cwtl
rclb
addl
js
inc
add
out
pop
or
push
nop
scas
ss
loop
outsb
arpl
dec
cli
xor
push
int3
sbb
inc
cmp
xor
roll
jnp
push
cmp
sub
rcll
rorb
or
insl
sti
adc
add
lea
dec
mov
cli
adc
stos
inc
mov
jne
and
add
or
sarb
jg
inc
pop
sub
cmc
dec
ficoml
sbb
jb
subb
cmpsb
pushf
bnd
xor
lods
push
pop
mov
sub
jno
dec
dec
push
insl
push
push
dec
dec
add
push
push
loope
mov
mov
in
cltd
push
sbb
jno
mov
adc
sar
jo
or
loope
adc
mov
pop
jno
shlb
repz
popa
jge
stos
add
test
jnp
mov
cmpsl
outsl
sub
lods
jecxz
mov
or
out
and
aas
jle
cli
dec
mov
mov
pop
add
inc
ror
push
mov
push
std
xor
push
xor
out
cmp
cmp
mov
mov
outsl
xchg
push
cmp
sbb
cmc
data16
xchg
outsl
call
adc
add
call
sub
cmpsb
mov
loop
out
jp
jb
sbb
mov
mov
push
or
sahf
mov
mov
in
push
xchg
mov
push
inc
sarl
jl
dec
popa
sub
inc
in
push
cmp
jo
pop
ljmp
push
xchg
mov
je
pop
arpl
lcall
jecxz
xchg
xchg
pushf
in
xchg
pushf
inc
dec
je
pop
shlb
cmp
sub
mov
adc
adc
push
shl
and
cwtl
and
pop
mov
mov
or
aaa
mov
lods
mov
and
mov
mov
pushl
gs
outsb
jl
stos
dec
stc
xor
orl
mov
sub
xchg
ret
xchg
out
stos
andb
stos
loopne
jns
or
xor
aas
pushf
insb
test
and
loopne
outsl
jmp
pop
add
and
int3
lret
test
cmp
movsl
dec
std
inc
xor
aad
lods
data16
adc
pop
int3
dec
out
enter
dec
int
les
ret
out
clc
mov
and
lock
repz
sbb
add
inc
lcall
adc
pushf
jp
pop
dec
repnz
dec
push
push
pop
inc
push
imul
pop
in
pop
icebp
pop
rsm
cwtl
mov
mov
push
mov
daa
sub
frstor
cmp
les
dec
gs
cmp
repz
jg
jge
inc
imul
or
push
outsb
xchg
mov
fimuls
sub
lcall
repnz
dec
jecxz
and
jns
repnz
inc
rcrb
push
add
lods
xchg
push
lds
out
xchg
push
and
ss
daa
cmp
scas
and
mov
hlt
orb
sub
roll
and
fwait
popa
mov
pop
pop
and
jb
gs
jnp
xchg
faddl
call
xor
adc
insb
and
clc
out
ret
xchg
jnp,pt
pop
xchg
lea
aam
mov
in
and
shll
adc
jns
nop
xchg
addr16
ja
add
data16
iret
xchg
jp
or
imul
fnsave
pop
addr16
ljmp
inc
imul
push
sub
sarb
adc
imul
xlat
sbb
lcall
mov
xor
out
adcl
mov
adc
sub
imul
incb
repz
subb
cli
fildll
cmp
inc
out
mov
xchg
mov
imul
inc
or
mov
sbb
int3
call
xchg
or
pop
es
sub
lret
xchg
lahf
pop
clc
mov
push
es
push
dec
or
daa
pushf
movsl
mov
ret
dec
fcmovb
add
iret
ds
pop
dec
mov
and
cwtl
ja
and
or
and
jl
stos
jle
fs
test
insl
out
dec
ffree
pop
psllq
cmp
mov
add
xor
and
mov
stos
subb
shrl
xchg
mov
ja
lods
les
sahf
into
push
mov
popa
cli
enter
xchg
xlat
fscale
pop
jno
mov
push
repnz
outsb
nop
push
add
in
or
ja
lds
scas
push
les
lahf
adc
xchg
mov
mov
or
xchg
mov
jmp
imul
push
dec
add
or
lret
push
lock
cld
add
movsb
add
not
pop
daa
add
mov
inc
and
xor
jp
cld
call
popf
push
inc
ret
scas
int3
fisubs
xchg
cmp
lods
sub
xchg
mov
adc
sub
xor
jecxz
mov
in
shll
push
mov
in
or
push
fs
mov
push
stos
imul
ret
push
pop
clc
lret
loope
jae
add
pop
pop
mov
and
pop
sub
mov
or
bound
bound
je
xchg
into
mov
aaa
or
or
aad
imul
test
insb
test
mov
add
push
aam
std
lds
fisubrs
cmp
jne
cwtl
fcomps
pop
cmp
and
mov
lea
pop
das
lahf
lods
divb
mov
int
es
imul
pop
clc
call
ss
or
add
cmp
mov
or
inc
adc
imul
adc
inc
pop
or
pop
inc
mov
pop
sbb
mov
xor
sub
shll
mov
cmp
jmp
sub
sbb
clc
inc
loopne
dec
aaa
mov
mov
and
adc
adc
popf
add
inc
stos
push
sbb
dec
add
adc
lahf
adc
movl
inc
inc
pusha
push
xor
mov
dec
test
lahf
sub
cmp
pop
mulb
or
outsl
aas
xchg
jmp
jg
sbb
insb
jg
jmp
sbb
test
loop
movsl
mov
cld
mov
sbb
mov
fldenv
adc
mov
ret
dec
lret
inc
stos
sti
dec
or
scas
jns
mov
pop
and
pop
mov
loope
jmp
rcl
push
std
and
rcl
mov
mov
rcrl
fldenv
mov
adc
cmp
push
cmpsl
cltd
xor
sbb
sahf
sbb
enter
cmp
jno
inc
mov
xor
into
cmc
push
push
push
mov
and
and
repz
jge
xor
fcomp
inc
cmp
imul
daa
bound
mov
add
jge
mov
inc
ret
shrb
push
pushf
mov
add
push
push
shlb
repz
dec
shrl
les
popf
push
fwait
sub
cwtl
push
mov
in
pushf
ret
xchg
fcomip
mov
or
jb
int
lea
test
push
push
loop
mov
mov
fstl
nop
ja
dec
ljmp
and
adc
jne
test
cmpsb
in
stc
or
lret
sti
js
cltd
repz
jp
push
mov
push
dec
aas
fwait
pop
cltd
adc
pop
ds
mov
les
inc
clc
jb
subl
xchg
shrl
inc
bound
dec
dec
je
mov
dec
fcoml
in
outsl
push
lea
mov
mov
push
cmp
mov
jbe
dec
push
adc
iret
cwtl
mov
clc
divl
call
cmp
clc
test
stos
mov
rcr
push
dec
push
mov
movsb
lret
cwtl
push
sbb
jmp
push
clc
add
push
jmp
in
mov
aad
pop
rorl
mov
jo
push
fildl
pushl
mov
cld
xor
aaa
sbb
jae
cmpsl
addl
cld
rorb
mov
hlt
jge
adc
or
sahf
jbe
mov
xchg
orb
jmp
dec
std
jnp
jg
jecxz
popf
mov
push
sub
aas
cmpsl
push
or
jg
sub
or
sahf
add
cmpl
add
lds
cmp
pop
ja
inc
push
mov
adc
mov
arpl
iret
movsb
mov
out
sbb
adc
insl
leave
lock
repz
pop
sub
inc
rcpps
add
rol
adc
daa
sbb
cmp
push
call
std
inc
cmp
test
or
test
addl
test
test
lock
xor
xor
mov
xchg
adc
cli
xchg
cmpsb
pop
jno
in
sbb
out
js
popa
repnz
mov
outsl
cmp
cmp
icebp
sbb
shl
sub
jmp
cmp
mov
and
ret
insl
dec
stos
or
sbb
notb
ja
push
xor
cmpsb
sbb
push
rclb
inc
and
jo
inc
cmpsb
and
jnp
jge
fidivrs
inc
iret
sbb
pop
test
push
pop
or
sub
cmc
out
scas
lret
mov
jl,pt
mov
call
dec
das
sbb
in
cmp
lret
or
pop
ret
aam
hlt
cmpsl
aaa
rolb
std
sti
cmpsb
and
mov
lods
test
mov
inc
ffree
inc
popa
in
fidivl
lcall
cmp
dec
jae
inc
xor
ljmp
xlat
cmp
pop
and
pop
js
inc
test
icebp
pusha
stos
pop
outsb
adc
push
dec
aad
in
sub
mov
insb
dec
xchg
mov
sub
shll
mov
mov
sub
sub
add
xchg
popa
dec
mov
std
ja
les
xchg
push
out
andl
decl
fwait
xor
mov
jge
scas
cwtl
jb
daa
push
data16
iret
push
inc
sbbb
adc
xorb
dec
fidivrs
jle
lods
popa
jns
ja
cmc
xchg
mov
test
out
jno
jge
lahf
and
or
mov
adc
mov
sub
or
ljmp
xchg
es
mov
cs
hlt
push
ljmp
cltd
popa
fbstp
pop
je
xor
testl
and
push
leave
adc
jle
mov
gs
add
inc
push
jecxz
fs
inc
popl
cmpsb
jg
ja,pn
ss
dec
add
cmp
mov
jg
shll
adcl
sti
adc
cmp
rcr
mov
dec
aas
xchg
and
cmpsb
sbb
fwait
lret
mov
and
mov
cmp
and
or
popa
icebp
fstl
jmp
sahf
and
jecxz
jmp
or
fs
aad
scas
sub
dec
cs
mov
cmp
xor
cmp
dec
mov
add
jge
xor
inc
cltd
in
pop
std
xor
fistps
neg
add
inc
adc
iret
dec
adc
hlt
imul
dec
adc
mov
ja
dec
mov
jecxz
xlat
popf
or
xchg
cmpsb
and
pop
outsl
xor
jnp
lock
out
outsb
aam
fsts
test
push
xchg
xlat
aaa
push
xor
mov
daa
insb
decl
jmp
fimull
and
enter
add
aas
pop
fstpl
cld
loope
xchg
sti
fsubrs
into
sar
mov
loop
xor
push
inc
adcl
lods
pop
dec
inc
fistpl
aaa
sub
andl
push
repnz
cli
cmp
aam
aad
bound
repz
lds
je
push
repz
sub
jp
pop
add
movsb
jmp
dec
loope
in
inc
jge
inc
mov
sub
idivb
xorb
movsl
aaa
lock
and
sub
mov
bndldx
xchg
jbe
int3
jcxz
movsl
fildll
inc
pop
inc
mov
lods
jnp
divb
dec
int
test
xor
jl
jl
mov
mov
mov
lea
mov
jne
ss
inc
adc
jle
test
jnp
adc
mov
lea
cs
cmpsl
sbb
xchg
push
test
mov
xchg
pop
cmpl
jne
push
add
add
in
test
lcall
mov
inc
les
loopne
pop
pusha
outsb
in
ja
orb
clc
jg
dec
imul
xchg
cmpl
pushf
jge
mov
cld
adc
dec
xchg
push
aaa
push
ljmp
mov
and
in
cmpsb
ja
xchg
mov
mov
lahf
lret
insb
das
bound
jne
mov
mov
add
and
lods
add
loope
jnp
and
add
or
pop
arpl
push
into
dec
jle
stos
mov
fwait
and
mov
mov
mov
mov
adcl
enter
jmp
leave
mov
pop
loop
mov
cltd
jmp
es
ja
sbb
xchg
mov
test
xlat
dec
imulb
jne
aam
sub
dec
dec
repnz
mov
mov
or
cmp
int3
sahf
cwtl
jno
jno
fwait
stos
mov
jg
mov
sbb
ret
jmp
subl
jl
js
and
lret
ret
pop
mov
mov
jl
and
jb
pop
imull
add
ljmp
push
pop
lock
mov
loop
shlb
mov
lcall
mov
lret
ret
or
adc
in
sub
pop
outsb
test
jae
mov
imul
movsb
fcoms
or
mov
and
js
jle
xor
das
push
mov
mov
out
leave
stos
pop
mov
je
aam
cmp
push
add
popf
ja
push
ret
aas
or
iret
fisubrs
int
push
pop
rcl
nop
pushf
mov
mov
lcall
pop
call
xor
mov
xchg
pop
add
mov
and
adc
add
pop
or
xchg
test
ja
push
loopne
jmp
shl
pop
xor
mov
int
add
loop
xchg
xor
jge
hlt
pop
mov
nop
mov
cmp
pop
dec
js
pop
xor
subb
test
dec
adc
jl
sbb
and
data16
out
push
and
inc
mov
mov
and
sbb
or
or
roll
lea
mov
out
ret
add
pop
imul
pop
cmp
test
mov
push
push
and
aad
daa
adc
and
hlt
js
test
outsb
call
cs
lahf
xchg
test
sub
mov
cmp
outsb
mov
popa
movsl
arpl
inc
repz
ds
in
push
jl
mov
mov
push
and
push
push
pop
pop
pop
mov
xorb
mov
pushf
leave
and
adc
push
into
subb
lcall
leave
inc
jmp
cmp
imul
xchg
imul
push
inc
adc
xchg
add
ds
xor
mov
repz
xor
out
daa
lahf
adc
std
jo
test
in
inc
and
shrl
roll
add
arpl
in
dec
jne
mov
movsb
dec
adc
sarb
xchg
dec
test
mov
inc
cli
mov
add
imul
xchg
sbbb
sub
sub
fimuls
cld
mov
repz
mov
cmp
cmp
mov
push
sbbb
stc
mov
cvttps2pi
out
jae
xor
jb
lahf
ljmp
cmc
push
in
les
mov
fwait
inc
mov
mov
mov
add
fisubrs
jmp
bound
scas
fs
and
enter
xor
test
insb
cmp
sub
rol
rclb
mov
xor
cmpsb
lods
xchg
bound
mov
or
loope
dec
aam
pusha
dec
inc
repz
jg
nop
adc
lea
pop
dec
cmp
test
xorb
jb
jl
out
or
outsl
repnz
out
leave
or
mov
jbe
dec
xchg
jg
add
mov
inc
xor
lret
hlt
insl
jecxz
xchg
imul
xor
mov
xchg
dec
data16
test
pop
scas
sbb
inc
data16
popw
dec
lahf
inc
lods
push
enter
test
xchg
mov
addb
movsb
mov
sbb
int3
std
jecxz
js
andb
pshufw
pop
outsb
jae
sti
push
addr16
jo
dec
shl
scas
pushf
and
and
daa
lret
cmp
dec
push
daa
jbe
mov
in
ljmp
mov
icebp
mov
loope
inc
jle
mov
sarl
and
icebp
pop
adc
lret
out
pop
data16
gs
ljmp
test
shl
jo
sub
out
cwtl
aam
aas
mov
lds
gs
adc
jne
mov
imul
fsub
mov
cltd
lahf
cwtl
fs
mov
in
insl
mov
sbb
fs
jp
inc
ror
ss
fildl
faddl
lock
xor
jns
jmp
push
cmc
xchg
ljmp
dec
pop
jecxz
cli
inc
movsl
jge
int
mov
test
mov
push
pop
or
inc
fdivs
mov
cmpsl
cmp
fiaddl
mov
cmp
or
xor
sahf
std
lods
xor
inc
das
sti
mov
xchg
sbb
jle
ds
xchg
lods
inc
jp
fs
out
pop
stc
imul
pop
jecxz
ss
pop
enter
mov
pop
cmpsb
add
jo
imul
xor
fnstcw
bound
xchg
gs
addr16
xchg
push
push
mov
adc
cmpsb
jg
pop
repz
jp
fsubr
mov
repnz
mov
cmp
aam
cmp
pop
lock
sub
sub
sarb
push
inc
dec
in
inc
add
add
push
icebp
test
arpl
scas
imul
jmp
mov
add
call
sarl
es
ret
fndisi(8087
pop
jmp
loop
lods
mov
sub
cmpsb
into
push
les
jl
leave
leave
or
cs
in
outsl
testl
sbb
jns
inc
xchg
imul
ficoml
push
int3
pop
out
mov
cmp
cld
iret
jns
in
xchg
dec
xor
loope
jle
aam
mov
test
lret
xor
pushf
stos
push
cltd
out
sub
pusha
insl
adc
adcb
inc
xchg
loope
dec
fistpl
insl
ljmp
subb
imul
sub
jo
jne
test
add
cmp
or
mov
cmp
mov
xor
pusha
fistps
aam
pop
adc
test
andl
mov
jno
sub
clc
icebp
subl
test
push
adc
xlat
fcoms
stos
pop
xor
sbb
mov
aad
jmp
mov
jb
rcrb
inc
and
inc
mov
or
pushf
add
push
pop
inc
hlt
lret
dec
cwtl
push
ljmp
outsb
fadds
jns
popf
aad
push
sub
push
rcl
mov
es
and
push
mov
adc
enter
jns
int
xor
lret
les
lcall
stos
mov
push
dec
sub
cmpsb
lret
insb
jne
cs
nop
pushf
imul
jmp
push
das
out
cmp
cmpsl
xor
clc
fmulp
ret
push
push
enter
and
mov
xor
mov
adc
mov
adc
std
adc
cmp
jbe
push
adcb
xchg
das
sub
cs
test
idivl
scas
push
loope
dec
std
adc
insl
and
mov
inc
mov
lcall
dec
sub
ret
mov
push
ret
ror
sub
loope
pop
mov
shrl
pop
pop
leave
lret
xor
jns
push
mov
loop
sub
and
xorb
adc
jmp
ss
mov
lds
mov
in
xchg
aaa
push
add
fadds
cmpsb
dec
fstl
jmp
inc
sbb
insl
add
adc
adc
xor
stc
cmp
mov
sbb
sub
lcall
xchg
pop
or
cmp
daa
leave
adc
int3
pop
orb
dec
adc
divb
mulb
pop
pop
test
cmp
rclb
ret
shr
mov
adc
leave
mov
outsl
sub
cltd
stos
push
lds
shl
add
std
loopne
ss
icebp
test
sbb
add
mov
pop
or
dec
and
xchg
in
xchg
ds
rclb
sbb
cmp
ja
inc
push
jo
and
lods
pop
push
pop
inc
ret
push
dec
push
test
mov
scas
push
inc
dec
fs
lcall
incl
cmp
push
notb
xchg
ret
push
mov
jae
cmp
fwait
mov
ss
push
cwtl
and
orl
rol
lods
push
push
add
jno
cmpsb
cs
xchg
inc
pop
dec
or
rcrl
mov
pop
jg
and
incl
leave
mov
push
movsb
les
push
sub
adc
ds
jne
insl
cltd
or
pop
dec
insb
pop
sbb
daa
jne
cld
es
pop
hlt
call
insb
je
xor
push
call
and
lret
mov
js
xchg
dec
outsl
int3
int
movsb
pop
mov
adc
sahf
insl
or
popf
ror
xchg
dec
jle
addl
and
stc
lods
jae
popf
adc
jl
imul
adc
outsl
and
sahf
popf
movsb
fmuls
clc
or
shlb
out
push
gs
sbb
nop
jmp
add
jle
mov
mov
or
add
mov
in
rcr
jmp
les
ret
notb
rcrb
hlt
cwtl
fnsaves
add
out
in
in
xchg
int
pop
repnz
ss
pop
faddl
and
xor
jo
enter
aas
jne
das
cmp
rolb
add
repz
test
xchg
push
out
pop
dec
push
dec
scas
jae
lahf
fidivrs
sub
pop
dec
add
stos
mov
and
jecxz
dec
mov
and
loope
sysenter
fisttps
push
sub
push
jae
out
adc
jb
repz
push
xor
lds
gs
lret
stos
cmp
pop
pop
push
inc
fnstcw
pop
cmp
or
push
fldl
or
lcall
xor
sbb
daa
addr16
xor
mov
inc
mov
mov
xchg
into
inc
cs
pop
pop
scas
cmp
fsub
dec
push
ficompl
mov
sahf
fadd
sbb
xlat
xor
and
dec
cld
arpl
mov
ret
cmpsl
enter
rclb
call
stos
stos
jb
mov
fisubs
into
inc
icebp
xor
jbe
pop
fstpl
ja
push
dec
xor
punpckldq
cmpsb
add
js
test
dec
push
clc
xchg
add
fwait
mov
sbb
inc
lock
xor
sahf
xor
stos
xchg
ficoml
adc
js
push
sub
pop
add
xchg
je
cmpsb
insl
pop
and
int3
push
jbe
addr16
outsl
mov
xchg
fisubrl
mov
pushf
lcall
arpl
negb
inc
mov
push
dec
dec
mov
cmp
popa
test
sbb
cltd
scas
imul
mov
ljmp
andb
aaa
iret
and
adc
mov
push
adc
xchg
out
xor
dec
xchg
cmp
dec
or
sbb
adc
xchg
pop
and
mov
das
xchg
insb
lea
and
dec
test
std
cmp
dec
xchg
push
movsb
dec
add
out
rcl
xor
mov
iret
mov
mov
loop
jecxz
test
cmpsb
in
imul
adc
in
xchg
xchg
sub
sti
ror
add
push
imul
cmpsl
inc
nop
out
cmp
push
sbb
sub
pop
lret
xor
dec
mov
das
aas
int3
xchg
dec
in
xchg
pop
or
sub
ret
pop
dec
outsb
aas
fs
pop
arpl
inc
sbb
jl
push
aad
add
ret
lret
roll
add
cld
push
mov
fsubl
cmp
inc
lahf
and
fsubs
popa
dec
or
adc
out
adc
clc
xor
cmp
lret
imul
lods
push
xchg
or
test
hlt
cmpsl
mov
lods
outsl
dec
lret
pop
scas
rcl
xor
sbbl
xchg
cmpsl
or
dec
sub
aaa
mov
movsb
call
loopne
lret
jae
push
movsl
adc
pop
push
sbbb
jne
push
add
gs
movsl
xor
xor
cltd
mov
adc
pop
pop
dec
mov
repnz
or
ret
loope
push
jbe
testb
pop
mov
cld
xchg
lret
cmpsl
pop
pop
ficomps
sti
fsub
inc
cmp
sahf
test
lahf
mov
xchg
ja
xchg
cmp
outsb
addb
pop
jp
loopne
lret
in
jg
jno
sbb
mov
clc
out
inc
fstpt
jno
jno
or
out
fstl
outsb
cmp
xlat
xor
cld
stc
in
int
or
push
jo
sarb
fistl
mov
mov
addr16
fisttpll
cmc
pop
xor
push
hlt
push
xchg
and
sbb
shrb
add
mov
cmp
in
int
mov
mov
fwait
shrb
jns
add
push
mov
testb
cmpsb
test
push
mov
imul
jno
cmpsb
jecxz
sbb
inc
cmp
ret
jge
xchg
in
cmp
push
and
mov
and
stos
adc
mov
xlat
sbb
or
call
lock
xor
sbb
idiv
pop
dec
mov
cmp
jo
inc
inc
xchg
cmpsl
push
jmp
mov
std
jmp
pop
jp
jecxz
xor
in
dec
add
lea
pushf
push
fiadds
rcrl
mov
inc
inc
iret
outsl
push
loopne
addl
xchg
dec
sub
ja
aam
inc
das
nop
repz
sbb
xchg
mov
test
pop
aad
or
call
mov
or
xchg
mov
xchg
outsb
add
adc
mov
jno
xor
shrb
and
mov
jne
mov
xchg
dec
in
jnp
push
iret
int3
inc
in
mov
add
xchg
inc
mov
out
pop
xchg
xorb
push
xchg
int
dec
shlb
push
push
cld
add
push
cmp
js
or
push
xchg
pop
mov
push
std
les
dec
ss
out
or
enter
cmp
jb
push
cmp
shlb
mov
sub
fsubr
sti
lods
and
push
or
mov
rcr
add
fsubl
sub
or
mov
insl
pop
and
mov
ss
and
sarb
mov
sub
push
xor
addr16
push
daa
inc
push
mov
sbb
repz
daa
dec
pop
sbb
sbb
mov
inc
push
sarb
bound
dec
sub
aaa
test
add
inc
jae
jns
mov
je
mov
lea
popf
jmp
mov
fadd
sbb
fwait
cmp
cld
inc
mov
add
outsl
sbb
push
std
xchg
addb
xchg
xor
shl
adc
sub
mov
mov
fadds
and
inc
push
cwtl
iret
cmpsb
leave
cmpsl
in
push
xchg
inc
sub
xchg
imul
shll
nop
pop
jbe
adcl
or
lock
ljmp
lods
or
outsb
in
or
ds
jg
pop
cltd
push
pop
mov
inc
adc
push
test
xor
lret
or
xor
das
shr
mov
stc
in
mov
stos
mov
jecxz
ds
mov
ja
lea
push
sub
loopne
repnz
ja
les
cld
pop
inc
stos
jns
jno
lock
pop
mov
sub
sbb
mov
jne
enter
xor
sbb
add
push
icebp
adc
mov
jg
push
mov
push
xor
cmp
clc
mov
dec
xchg
jge
test
push
dec
repnz
dec
mov
dec
sti
pop
push
mov
xor
sbb
ror
sti
mov
ret
xor
mov
aas
adc
and
sti
xchg
frstor
cmp
xor
push
xchg
adc
push
cmp
xchg
xchg
arpl
das
and
fdiv
inc
mov
add
mov
pop
sbb
cli
cmp
rol
sub
shll
dec
roll
cwtl
rorl
and
sahf
paddq
outsb
sarl
je
lds
cmpsl
mov
cwtl
jnp
mov
out
inc
mov
mov
ja
loop
lock
imul
xor
lret
mov
sub
dec
sbb
push
in
rcrb
into
pand
test
je
push
or
adc
mov
dec
adc
lret
xor
cltd
mov
push
popa
loop
je
mov
movsb
ret
popf
mov
jl
fwait
in
xchg
adc
lods
shlb
lods
dec
movb
ss
xor
xor
insb
mov
fnsetpm(287
fimuls
js
push
cli
mov
mov
sub
xchg
sub
cld
ret
enter
sub
shl
in
add
add
nop
in
out
mov
cltd
xchg
jne
mov
inc
push
dec
mov
push
mov
stos
in
xchg
lcall
or
lods
bound
cltd
arpl
sbb
pop
inc
ds
fs
mov
mov
iret
call
hlt
popf
push
inc
cmp
pusha
jo
aaa
loope
dec
daa
fnstenv
mov
mov
and
rcr
jnp
fsubl
lods
push
jae
xchg
jg
add
sbb
push
stos
xchg
int3
outsl
jmp
ds
rclb
dec
jb
push
mov
xor
ret
adc
ret
and
push
mov
lret
lret
fcmove
lcall
movl
lods
adc
fcoml
xor
jno
aas
mov
int
iret
add
lret
pop
fstl
cmp
sub
mov
dec
js
mov
push
sti
xchg
lods
lahf
xchg
and
sub
cltd
cmc
repnz
push
cmp
sbb
movsb
dec
adc
ret
sub
push
pop
jns
push
or
hlt
xchg
fwait
inc
xor
mov
sub
je
adc
das
nop
dec
and
iret
mov
popf
lcall
roll
mov
xchg
add
sbb
fidivs
es
int
movsl
xor
test
nop
fisubrl
pusha
sbb
es
sub
scas
addr16
mov
leave
push
fprem1
sahf
xlat
and
popf
dec
addr16
sub
pop
xor
xchg
inc
xchg
mov
outsl
xor
adc
jg
cli
insb
jp
lahf
push
adc
nop
add
mov
rorb
call
nop
adc
lods
or
loop
jg
testb
ds
jbe
pop
xlat
aaa
xor
add
stos
cmp
icebp
mov
test
xchg
sub
mov
repz
movl
sub
xchg
xchg
push
cmp
xor
and
mov
jle
or
cmp
dec
cmp
jne
mov
jb
push
adc
cmp
inc
push
lret
mov
mov
mov
movsl
pop
sub
mov
pop
ds
sub
push
les
cmp
roll
or
mov
aas
inc
xor
sahf
pop
jnp
aad
mov
int3
in
filds
sub
and
lds
pop
fxch
xor
mov
inc
stos
push
sub
sbb
insb
inc
fs
add
inc
push
mov
jmp
ds
dec
sbb
jb
lods
inc
cmp
mov
insl
shr
cltd
jge
fistl
push
mov
mov
push
cmp
mov
dec
lock
stos
adc
loop
cmp
xchg
pop
int
or
movsb
inc
lea
addr16
popf
lret
in
mov
in
lret
in
mov
add
ja
jp
jnp
std
mov
mov
cltd
out
shl
out
fidivs
sbb
jp
and
add
divb
lea
mov
rcrl
pop
movsb
test
or
std
cmp
xchg
leavew
ret
mov
mov
shrl
test
cmc
iret
fistl
mov
push
lret
outsb
mov
mov
dec
js
sarl
loope
rolb
cmp
add
mov
jg
mov
stos
mov
jo
jnp
addl
imul
inc
xor
pop
cmpl
sub
js
pop
push
mov
jbe
ljmp
push
loope
lds
adc
ja
incb
dec
mov
addr16
mov
hlt
mov
movsb
jno
xchg
roll
jo
es
lcall
mov
or
dec
add
xchg
insl
rcrl
inc
push
xor
int3
cwtl
mov
clc
test
adc
mov
inc
stos
repnz
sahf
xlat
jmp
and
out
les
cld
cmp
push
pop
leave
push
jo
dec
xor
add
sbbb
ss
enter
xor
lret
sti
cmp
call
mov
dec
lret
xchg
fidivl
jne
dec
adc
packsswb
push
mov
cmp
cmpsb
inc
lahf
jg
fidivrl
lods
ljmp
push
inc
loop
cmp
cmp
nop
add
lods
fdivrs
xchg
and
repnz
xchg
aad
jl
cmpsl
lret
ret
and
mov
imul
sub
push
out
and
xchg
adc
sbbl
xrelease
mov
fisttpll
mov
test
add
inc
stos
pusha
fimull
das
ds
mull
std
sbb
inc
xchg
popf
data16
and
push
pop
imul
jb
loop
pop
cmp
test
adc
mov
xchg
test
sbb
add
dec
ret
jo
pop
xchg
fwait
rorb
cmp
lret
mov
mov
inc
js
jecxz
or
test
adc
pop
mov
mov
or
call
pusha
mov
push
sbb
cmpsb
dec
adc
pop
ret
cmp
pop
push
and
ljmp
lods
or
out
test
loop
out
lret
mov
inc
fdivrs
sbb
mov
push
sarb
outsb
icebp
jmp
jb
andb
adc
pop
pop
nop
dec
add
in
cmp
insb
or
dec
xor
dec
jo
inc
cmp
jg
push
cmp
pop
mov
out
push
bound
lods
cmp
lret
add
cmpsl
sbb
pop
push
mov
stos
push
pop
mov
lods
adc
cmp
mov
dec
leave
and
andnps
sub
stos
iret
shl
flds
sbb
shll
fistl
xlat
add
inc
int
idivb
push
mov
sub
pop
test
mov
xor
aad
sub
sti
and
stos
loopne
movsb
adc
std
mov
jo
arpl
push
out
std
jmp
mov
fdiv
sbb
inc
lret
dec
pop
adc
sti
in
iret
mov
mov
ja
push
lcall
jae
sub
fs
call
mov
xor
adc
dec
pop
pusha
adc
pop
inc
dec
cltd
addr16
cmc
jne
mov
mov
adc
jle
shrl
cltd
jg
inc
jp
mov
push
cmp
and
repnz
mov
inc
out
daa
test
insb
xor
push
dec
insl
les
push
imul
frndint
cmp
jl
pop
mov
fcoml
bound
mov
test
jns
cmp
in
push
in
pop
mov
adcl
outsb
and
or
pop
and
and
cmc
add
lods
shl
xor
out
aas
and
ret
push
cmp
dec
sub
repnz
sub
into
cmp
loopne
jmp
pop
scas
mov
mov
shll
mov
std
ror
nop
je
mov
lods
inc
sahf
mov
mov
dec
xchg
pop
mov
out
test
or
inc
stc
and
jecxz
dec
jl
and
rolb
lahf
rolb
mov
mov
lret
pop
xchg
jo
fcoml
pushf
fimuls
sbb
xor
fdivp
cmpsl
aam
insb
mov
nop
and
lods
mov
and
xchg
push
imul
sub
cmp
imul
cmp
sbb
lahf
inc
and
lds
pop
push
or
sub
rolb
popa
or
test
lea
and
and
pop
je
cs
mov
mov
or
gs
test
jnp
jb
mov
int3
mov
cmpsb
push
add
jl
xchg
cwtl
pop
popa
outsl
jge
aaa
add
bound
adc
mov
scas
movsl
aaa
sub
xchg
xchg
dec
cmp
and
jmp
mov
pop
sahf
mov
jmp
stc
jne
dec
addr16
pop
sub
bound
aas
int
mov
xchg
outsl
mov
push
cs
pushf
lcall
dec
repnz
dec
fidivrs
fildl
lds
lods
out
pushf
inc
cmp
or
insb
ficomps
add
rorl
xor
mov
cmc
int
and
and
and
jl,pn
es
pop
sub
out
mov
mov
imul
sub
repz
push
push
gs
mov
lahf
xor
mov
jo
into
das
xchg
add
jbe
jnp
stos
push
xchg
xor
int3
push
cld
movsb
je
adc
mov
mov
pusha
enter
or
or
push
jae
mov
pop
push
dec
mov
out
into
adc
sbbl
jmp
pop
test
pop
movsl
cmpsb
mov
test
fs
test
adc
push
sbb
dec
mov
xchg
mov
out
push
cmpsb
hlt
loope
repnz
in
push
stos
sub
add
and
jecxz
movsl
aas
test
xchg
xchg
jge
add
or
mov
mov
in
in
es
inc
cmp
dec
xor
mov
cmp
scas
mov
pushl
mov
xor
loope
mov
xorb
mov
ja,pn
jl
xchg
sti
aas
xor
inc
aad
pop
in
std
mov
aaa
or
jecxz
inc
pop
aas
mov
xchg
arpl
cli
aam
sbb
sub
push
add
je
data16
or
sub
fdivr
out
or
inc
out
sarb
mov
mov
cs
mov
dec
push
push
loopne
es
mov
in
xchg
and
aam
lret
scas
rcr
pop
push
mov
testl
mov
cmc
mov
mov
mov
ffree
xchg
out
add
subb
add
xchg
xchg
pop
fistps
outsb
sbb
cwtl
adc
aas
inc
es
mov
loope
nop
cmp
jae
xor
lds
and
mov
mov
mov
out
cmpsb
loop
popf
mov
mov
cmc
paddsw
outsb
xchg
sub
xchg
inc
stc
hlt
sbb
xchg
xor
add
imul
sub
jo
xor
xor
xor
or
paddd
fisttpl
in
fsubrl
das
dec
sahf
sbb
icebp
jmp
sti
mov
sbb
cmpb
sbb
add
mov
mov
xchg
in
sub
pop
lret
push
out
lds
testb
pop
imul
inc
jmp
xchg
xor
jg
and
movsb
jb
pop
push
js
mov
js
or
jl
jmp
mov
lcall
lds
insb
jle
fisubs
xor
sbb
pop
shr
mov
pop
or
push
cmp
lahf
push
pop
mov
adc
outsb
hlt
pop
inc
xor
repz
sub
cmc
pop
jbe
jge
jge
rorb
adc
idivl
add
push
push
xor
mov
mov
sbb
pop
adc
add
aad
stc
adc
sub
or
out
ret
and
cmpsb
jne
mov
call
movsb
cwtl
pop
repz
int3
mov
xchg
dec
in
xchg
popa
or
mov
cmpsb
jb
daa
or
pop
inc
mov
sub
inc
aaa
mov
pusha
das
cmp
jo
scas
add
sbb
insl
dec
adc
sub
repz
outsb
cltd
repnz
jns
pop
test
push
mov
enter
fildll
mov
mov
lahf
hlt
stc
pop
rolb
xor
push
outsl
lcall
ficoms
mov
hlt
jp
je
cltd
out
out
lods
jg
and
push
jnp
xchg
jge
mov
aas
sub
dec
sahf
mov
movsl
push
movsb
add
xchg
aam
shll
insb
in
push
hlt
or
mov
out
or
adc
mov
cltd
rclb
cmp
js
loope
fs
dec
push
gs
roll
mov
and
push
mov
xor
scas
ret
fcmovnu
sbb
lock
mov
jb
test
sub
shrb
fidivl
pop
lcall
xchg
outsl
sarl
sbb
aaa
add
xchg
xor
ljmp
or
sub
dec
fdivrs
int
mov
sbb
lds
jnp
imul
or
aas
sub
testl
lcall
adc
repz
push
fidivs
repz
es
mov
inc
xchg
mov
es
add
sub
repz
into
imul
inc
xor
cld
jae
adc
mov
fisttpll
imul
sbb
mov
add
add
test
and
jbe
add
in
or
decl
fcompl
sbb
fisubl
sub
lahf
xchg
dec
cmc
pop
lret
push
gs
pop
stc
mov
sarl
lea
mov
mov
jp
outsl
jle
mov
and
pop
inc
and
sti
sbb
xchg
popa
scas
ret
mov
mov
and
mov
sahf
dec
mov
jb
incb
and
and
out
loop
movsl
xlat
or
out
ficompl
jg
ja
mov
nop
orl
push
ja
mov
cmp
arpl
dec
add
daa
iret
stos
je
sbb
dec
jge
ds
lahf
insl
sub
sbb
jnp
mov
pop
jecxz
sbb
lock
shlb
dec
or
fsubr
xchg
inc
push
xchg
divb
xchg
ds
xor
sub
xchg
aad
mov
mov
aaa
xchg
test
js
stos
or
test
add
clc
pusha
jmp
scas
pop
cld
pusha
je
ja
or
jge
sub
fisubs
push
dec
mov
fcomp
mov
fiaddl
adc
pop
hlt
lds
sbb
leave
jns
xchg
sbbl
sbb
daa
mov
pushf
in
sbb
add
dec
mov
inc
dec
xor
fdivl
sti
jge
add
xor
mov
in
cmp
jp
sahf
test
outsl
cmpsb
dec
jo
pop
add
pop
ljmp
outsl
lock
mov
lcall
aad
es
xor
int3
fwait
lcall
push
enter
mov
push
mov
scas
aas
aas
xor
inc
xor
fst
xchg
lock
lahf
push
mov
mov
cmpsl
ss
enter
pop
or
xlat
push
stos
je
mov
repz
shr
hlt
faddp
lret
mov
push
push
mov
imul
adc
mov
pop
push
lret
xchg
jge
sti
arpl
pop
mov
jo
jno
adc
shl
cmp
pop
add
js
push
jle
mov
adc
aad
mov
dec
aas
dec
jp
int3
test
or
repz
jle
push
dec
mulb
sub
adc
or
rcrl
fneni(8087
arpl
testl
lock
jb
xchg
sbbb
push
cmp
gs
xor
jbe
ds
imul
xchg
sub
jge
xchg
data16
les
jns
and
add
std
in
adcl
jp
ret
push
inc
sub
imul
movsl
and
ja
in
sbb
jb
xchg
in
sub
stos
mov
nop
cmpsb
or
popa
dec
enter
push
aam
pusha
into
test
mov
int3
test
ss
clc
pop
sub
jns
xchg
loope
hlt
cmp
divb
mov
repnz
xlat
je
jmp
or
add
aad
repz
xchg
lods
aad
pop
push
dec
mov
gs
and
mov
out
sbb
xlat
dec
sbb
cmp
popf
ret
jmp
addr16
ljmp
pop
sub
ss
dec
sbb
das
out
mov
int
idiv
xor
mov
test
pop
lods
jecxz
test
xor
int3
imulb
stos
pushf
jl
inc
es
pushf
dec
adc
mov
cmp
hlt
jo
loop
xchg
mov
gs
in
leave
xchg
in
cmpl
sarb
mov
xchg
sarb
sub
shll
test
ret
xor
lcall
pop
fdivrl
addr16
insb
push
pop
lds
frstor
rcrl
xor
lret
hlt
movsl
mov
pop
push
or
adc
push
pop
jnp
inc
loopne
sahf
xor
mov
cltd
or
mov
inc
jle
insl
outsl
and
adc
push
fbld
and
push
mov
xor
pop
mov
fisttps
idivl
lea
insb
mov
cmp
inc
xchg
pop
push
mov
cmc
aaa
jne
loop
xchg
mov
insl
push
fcomip
xor
stc
mov
aad
aas
adc
or
pop
mov
add
dec
mov
mov
adc
es
ds
mov
add
in
je
cmp
pop
sbb
sub
push
pop
xor
mov
or
sub
cmpsb
lock
or
xor
repnz
icebp
stos
ljmp
inc
iret
dec
insl
mov
loop
inc
iret
xchg
test
das
outsl
clc
cmp
decl
and
cmp
out
mov
ja
dec
in
pop
cmp
in
lret
adc
mov
xchg
cld
pop
pop
repz
pop
pushf
sub
stos
jmp
ret
scas
jae
mov
pop
dec
pop
test
mov
sahf
cmp
add
cmp
and
mov
cs
push
out
inc
iret
ss
xor
cltd
mov
out
xrelease
negl
ds
cmp
push
push
add
jmp
pop
xchg
in
repnz
jns
jo
sbb
mov
ds
pop
pop
cltd
xchg
jle
jle
fdivrl
and
test
pop
xlat
fcompl
les
inc
out
into
push
dec
sub
cmpsb
psllq
movb
pushf
jmp
outsb
xchg
inc
sub
enter
push
cmp
bound
in
stos
int3
lret
int
aad
xor
testb
inc
push
sbb
dec
mov
pop
hlt
stos
cmp
je
xor
xor
sub
sar
jle
cs
cli
mov
into
sbb
inc
mov
inc
push
xchg
ret
xchg
data16
fildll
out
or
std
push
sub
stc
jecxz
xlat
shr
cmpsb
or
mov
mov
popl
nop
jne
mov
and
mov
cmpsb
scas
mov
jmp
sub
test
in
mov
cmp
push
nop
push
xchg
dec
movsb
mov
push
dec
xlat
pushf
outsb
push
out
push
mov
xchg
es
int
pop
inc
jbe
mov
out
cltd
jge
scas
xor
jo
or
lret
es
jo
mov
nop
test
jmp
test
xor
pushf
fcomip
out
mov
leave
mov
rcll
dec
outsb
adc
inc
pop
sub
mov
das
das
fldcw
xor
push
jl
out
pop
cmpsl
loopne
arpl
into
xchg
cs
movsl
mov
pop
aaa
jb
pop
adc
adc
xor
addr16
push
lods
inc
xor
lods
es
xor
and
rorb
rcl
inc
inc
adc
fisttpll
pop
dec
mov
or
push
fimull
xor
clc
or
pusha
adc
xor
mov
sbb
sahf
jl
mov
jmp
divl
cmp
roll
clc
or
mov
data16
pushf
and
loope
shll
in
mov
mov
ss
mov
xchg
inc
pop
jg
aad
cmpl
sbbb
add
inc
xor
js
mov
popf
mov
sbb
out
cld
mov
jg
fs
mov
int3
push
mov
xchg
leave
dec
lds
mov
jmp
xlat
xchg
fs
test
dec
imul
out
stos
adc
iret
test
mov
repnz
test
enter
mov
adc
fidivrl
lahf
jne
ja
gs
fistl
orl
repnz
xor
mov
pop
lds
xchg
js
test
ret
testl
leave
mov
pop
mov
pop
sbb
add
inc
mov
dec
dec
sub
pop
leave
xchg
mov
sub
add
imul
jns
pop
push
shrl
insl
jmp
inc
mov
call
popa
lds
mov
lea
jmp
dec
adc
adc
add
mov
popf
jbe
xor
sub
sub
orl
sahf
pop
mov
adc
out
dec
xor
jnp
add
in
mov
inc
dec
cmp
inc
stos
imul
cmp
dec
outsl
mov
pop
cmc
out
sub
dec
xchg
scas
push
jg
jl
gs
scas
lret
dec
call
movsb
imul
cs
push
add
sbb
inc
ljmp
insb
sub
shrl
pop
and
xor
sub
cli
call
cmp
dec
iret
push
cmp
or
mov
pushl
mov
das
sub
cltd
lea
jno
stos
jo
ss
in
jle
push
int
mov
mov
es
xor
ret
mov
add
cli
xor
jae
cs
ss
pusha
orb
mov
subl
loopne
or
inc
jmp
pop
and
sbb
cs
sbb
cli
in
or
mov
xor
and
adc
mov
adc
popf
pop
enter
mov
cwtl
shll
in
fwait
cmp
mov
mov
jp
andb
mov
addl
xor
popa
adcl
dec
daa
movsb
inc
aad
les
test
lcall
daa
pushf
mov
lock
scas
pop
mov
sub
lahf
pop
lock
in
add
out
jl
jns
jns
inc
loop
jb
pushf
sbb
xchg
test
sub
sub
sub
fmul
lahf
das
xor
sub
push
icebp
rorl
orb
mov
imul
cld
cmpsl
dec
mov
add
mov
push
jecxz
sub
sub
sub
jne
adc
cltd
insb
fildl
cmc
or
inc
or
push
les
mov
sub
xchg
mov
mov
sbb
sarb
enter
xchg
ret
orl
dec
jno
or
sbb
jl
or
outsb
push
push
lods
mov
or
pop
adc
xor
or
xlat
push
xchg
scas
pop
dec
and
negl
addr16
push
imul
fwait
test
push
cld
rcrl
pop
clc
or
dec
nop
mov
lret
in
in
dec
mov
popf
into
adc
popf
faddp
lea
pop
fcoms
lret
icebp
cmp
pop
cmp
fs
in
scas
jae
fildl
jae
aas
xor
bound
fistl
sahf
cmp
mov
aam
lcall
ljmp
sub
shr
push
bound
mov
in
call
cmc
outsl
or
xor
rolb
call
sbb
out
adc
cmp
sahf
std
jp
loope
jae
cmp
sbb
mov
leave
xchg
incb
or
aas
lock
lret
xchg
insb
mov
ljmp
jmp
cmp
adc
aad
mov
mov
pop
jmp
xchg
push
mov
jmp
cmp
sub
dec
push
dec
hlt
scas
loop
popf
gs
inc
dec
mov
jmp
scas
js
dec
pop
push
mov
push
xchg
dec
mov
mov
push
test
loop
lock
or
cs
bnd
mov
movsb
xor
jl
cmpb
into
add
sbb
cli
test
testl
cltd
and
jno
popf
dec
test
pop
and
test
test
pusha
imul
pop
out
scas
in
iret
lret
test
cld
xorl
lods
xchg
lods
fldt
pusha
xchg
ljmp
inc
add
lret
push
std
lcall
rclb
in
push
insb
xlat
cli
pushl
add
jnp
jge
xchg
push
cmc
jb
leave
adc
xor
pop
aad
sbb
in
mov
push
mov
vsqrtps
xchg
inc
in
out
mov
ret
pop
add
mov
int
fnsave
int3
mov
dec
ljmp
pushl
in
jmp
lea
int
loopne
ja
subb
adc
fs
lcall
mov
mov
adc
mov
xor
jbe
push
xor
dec
mov
popf
add
stos
js
dec
or
add
jo
xchg
or
ror
sub
incb
pop
dec
jno
xor
xchg
jg
fs
cwtl
mov
push
rorb
scas
fmul
rcr
fwait
rolb
outsb
or
fstpt
xchg
mov
cmp
ret
call
popf
pop
popa
ja
lret
mov
gs
rclb
adc
sbbl
and
mov
vmwrite
cltd
imul
inc
mov
inc
add
add
test
lcall
sub
lods
jo
xlat
shrl
test
stc
pop
mov
pop
mov
das
arpl
sbb
push
xor
ss
inc
adc
fldenv
ficoml
mov
adc
sbb
inc
aad
lods
int3
sub
xor
mov
inc
lds
pop
pusha
insb
ja
push
imulb
int
push
pop
or
cmpsl
les
xchg
mov
pop
js
lret
mov
aad
sub
mov
ljmp
fs
and
sub
sbb
mov
sbb
cmc
repnz
mov
stos
xor
lcall
cmp
cmpsb
lds
imul
mov
push
inc
je
mov
jge
lock
mov
movsb
arpl
mov
mov
movntq
mov
mov
xchg
mov
xor
cld
jle
inc
add
lds
insl
clc
sahf
mov
mov
or
cmp
jb
gs
lret
cmp
outsb
pop
jns
jmp
fistl
das
mov
mov
sar
mov
bound
sarb
mov
lcall
flds
adc
out
stos
shll
fwait
test
leave
sub
sarb
in
xchg
mov
lods
mov
in
test
out
inc
adc
aaa
pop
icebp
mov
aam
mov
push
cltd
int
cli
cwtl
js
xor
sub
sbb
scas
sbb
xor
adcl
mov
je
push
aas
sbb
jge
dec
imul
xchg
or
mov
jne
sub
mov
aad
inc
stos
pop
pusha
fwait
pop
mov
xchg
and
add
mov
mov
bound
scas
mov
cmpb
sbb
jmp
xor
sub
mov
hlt
insb
jo
push
jb
pop
test
cmp
in
imul
js
sar
ret
jae
mov
mov
test
cmp
and
popf
cld
fcoml
in
push
dec
mov
cs
jno
cld
cmpsl
adc
mov
cs
dec
add
jno
shrl
inc
inc
xchg
mov
rcrb
sbb
in
insl
nop
data16
add
mov
stos
sub
jle
jo
mov
stos
scas
mov
inc
adc
subl
xlat
gs
fwait
dec
xchg
push
scas
sbb
push
pop
fdivs
aad
cmpsb
in
jns
cmp
dec
sub
push
and
or
sub
sub
popf
nop
aaa
xchg
loope
sbb
popf
cli
push
xchg
aas
dec
mov
fs
xchg
jmp
jbe
subl
inc
mov
cmp
fsubr
adc
add
dec
xchg
repnz
push
and
xchg
movsl
lret
dec
adcb
adcl
xchg
imul
pop
jne
inc
lret
ret
pop
push
mov
or
mov
in
and
js
aaa
ljmp
pop
sarl
sbb
xchg
mov
or
pop
fisubrl
mov
aam
xchg
imul
fucomi
mull
pop
push
loope
jmp
inc
jecxz
jae
jo
sub
std
push
jnp
movsl
dec
jno
out
and
pop
dec
push
pop
mov
jns
sahf
push
inc
loop
mov
imul
cwtl
xor
xchg
add
sub
out
loopne
xor
sahf
adc
pop
push
fsubl
mov
xchg
enter
testb
inc
out
das
fbld
jge
cmc
std
repz
lret
mov
daa
push
dec
ljmp
sub
push
cmpsb
adc
jge
aas
push
cmp
pop
inc
lret
fwait
ret
loope
scas
cmpsl
out
into
inc
xchg
mov
mov
xlat
arpl
or
jecxz
xchg
ss
fs
das
mov
int3
imul
test
inc
add
push
jle
mov
sbb
xor
mov
popa
mov
in
cld
mov
call
sbb
rcrb
mov
sbb
mov
in
push
push
sub
dec
mov
ret
test
dec
rcll
add
fsubs
int3
add
sbb
cmc
pop
inc
mov
inc
scas
mov
pop
rorl
sarb
leave
cmpsb
shrl
das
lea
lahf
and
pop
mov
cmp
mov
pop
xor
in
mov
in
lds
xchg
les
repnz
jl
je
lret
fistpll
add
xor
popa
pop
lahf
lods
lahf
sub
out
addl
sarl
inc
add
fisttps
pop
add
jae
adc
and
jecxz
xor
cwtl
inc
cmpsb
out
or
aaa
lret
data16
lahf
jle
mov
pop
loope
sub
cmp
aam
ret
nop
pop
push
imul
stos
leave
ficomps
cmp
ljmp
cwtl
loop
insl
add
gs
mov
sbb
jo
cltd
stos
cltd
mov
pop
int
add
imul
inc
push
fsubl
jae
ljmp
push
mov
rcl
push
mov
sbb
lret
pop
fistl
push
push
fucomi
cltd
mov
das
in
pop
loopne
stos
sub
mov
xchg
sub
lret
jecxz
mov
sub
outsl
sbb
jne
arpl
mov
xchg
int3
mov
testb
and
outsb
lahf
mov
add
mov
mov
popf
dec
mov
dec
jb
cs
ret
rorb
push
cltd
mov
call
outsl
fstpt
ljmp
inc
outsb
inc
mov
push
mov
cmp
push
subl
jecxz
mov
out
js
lret
jb
out
leave
xor
cs
leave
mov
and
int3
notb
cltd
jl
adc
xor
icebp
sub
test
in
add
int3
mov
adc
ret
in
and
mov
xchg
adc
add
mov
adc
jg
stos
scas
jl
inc
inc
and
ret
ja
inc
test
aas
cld
mov
fimull
push
xor
push
xorl
jno
sbb
test
outsb
mov
push
and
data16
jmp
cmp
mov
mov
sub
jae
mov
add
inc
test
subb
xor
jge
jg
mov
dec
jl
cmpsl
xor
imul
sub
repz
cmp
ja
ds
inc
lea
sbb
sub
pushl
call
push
in
jbe
ja
mov
sbb
arpl
pop
test
xchg
scas
sahf
adc
cmpsl
gs
lea
jecxz
aaa
pop
mov
or
rcll
punpckhbw
ret
iret
daa
sub
movsb
adcl
sub
or
cmp
cmp
jne
add
mov
fiadds
fs
mov
adc
pop
push
stos
daa
jle
jmp
inc
lods
sub
and
sbbl
int
pop
js
fs
stos
inc
cmp
dec
or
notl
xchg
and
cld
dec
inc
push
in
sbb
and
inc
repz
enter
into
cmp
aad
in
sub
outsl
aas
std
hlt
jge
call
insb
jbe
ret
fdivs
test
es
cmp
popf
xor
call
rcrb
test
jge
call
dec
mov
push
push
lock
mov
pop
pop
das
stos
loopne
sbb
lods
fdivp
add
xor
xchg
aad
cwtl
mov
decb
scas
jbe
loop
fbstp
outsl
test
sbb
pop
cmp
dec
pop
pusha
fcoml
cwtl
xchg
shlb
popf
jp
mov
rcll
dec
push
daa
shrb
scas
enter
lret
push
out
add
shll
cld
lock
push
mov
mov
mov
jp
xchg
stos
int
mov
mov
jg
fildll
adc
int
aad
aas
sub
push
mov
or
jnp
or
dec
in
xchg
scas
mov
in
incl
imul
dec
push
push
push
and
pop
out
lret
ljmp
jle
insb
dec
into
aam
ficoml
pop
jbe
repz
push
ljmp
push
pop
out
sub
sbb
and
js
pop
mov
pop
imul
cmp
xchg
mov
or
leave
aas
ret
mov
or
rcrl
mov
cmp
ss
adc
das
test
dec
sbb
push
push
xchg
add
shrb
add
mov
cmpsl
stos
dec
scas
xchg
js
and
lds
mov
outsb
and
bound
cli
add
inc
arpl
pop
ret
out
adc
push
fwait
mov
fistpll
test
imul
cmp
cli
or
mov
inc
adc
pop
std
mov
hlt
fadds
and
fdivrl
dec
jle
js
je
mov
addr16
repz
jg
rolb
gs
jg
add
ret
ljmp
js
int3
mov
mov
call
insl
jp
cmpsl
fiadds
cmpsl
arpl
call
outsb
icebp
jno
sub
xchg
cltd
dec
sbb
xchg
icebp
into
jmp
jge
loope
push
push
mov
push
fcomi
adcl
mov
pop
vpunpckhqdq
aad
data16
push
adc
sbb
int
xchg
xorl
cmp
cmp
push
lds
xchg
jno
sbb
adc
pop
clc
dec
shrl
inc
mov
mov
mov
stos
leave
testl
adc
clc
xor
dec
or
cli
das
aas
and
sub
inc
fcompl
cs
lock
mov
cmp
push
xchg
xchg
cmp
ss
es
movsb
fbstp
cmp
inc
xorl
sbb
cmp
rcr
dec
mov
pop
pusha
lds
mov
daa
loope
pushf
ret
outsb
callw
sub
push
divl
mov
enter
jle
sbb
gs
pop
jp
sub
adc
inc
inc
popf
cmp
xchg
dec
or
mov
das
lods
adc
std
stc
push
inc
loopne
js
mov
and
lock
mov
pop
cmp
push
jne
daa
mov
inc
push
push
test
xor
gs
pop
push
add
sahf
sub
cmp
cmpsl
mov
jne
jb
test
lret
test
sbb
or
popl
xchg
xor
dec
mov
cs
in
ftst
ret
pop
mov
enter
fisttps
test
and
pop
lods
mov
stos
inc
test
pop
cltd
mov
cwtl
testl
inc
std
pop
inc
jns
xor
adc
lods
into
scas
pop
data16
mov
outsl
jb
hlt
mov
ficompl
lea
xchg
sub
sub
lret
cmp
cmp
stos
leave
repnz
es
jge
add
mov
jno
jo
mov
push
push
xchg
daa
jg
jp
mov
pop
pop
lock
cmp
bnd
mov
mov
test
insl
cmp
insl
hlt
jns
inc
sbb
dec
movsb
sub
shrb
and
daa
stos
sub
sahf
ret
sub
fldpi
filds
adc
push
int
jecxz
dec
jns
add
add
push
dec
jnp
push
out
jecxz
xor
pushf
jno
xchg
push
or
inc
sti
or
fneni(8087
fdivrl
sbb
cmp
sbb
loopne
xor
sub
inc
scas
mov
jmp
adc
ret
dec
mov
aad
popf
cmp
push
xchg
fisttpll
xchg
out
arpl
push
push
mov
mov
faddl
inc
or
lret
imul
sete
or
imul
mov
test
mov
int3
pusha
mov
popf
push
stos
xor
stos
mov
xchg
or
mov
lret
xor
shll
les
or
hlt
inc
mov
sarl
fadds
lcall
stc
ret
bound
int
or
loope
mov
dec
test
cmpsb
out
cmpsb
mov
pop
add
cmp
xchg
sahf
sub
mov
je
and
push
jecxz
test
add
mov
pop
lods
inc
adc
lcall
pop
cmp
push
cmpsb
mov
ret
fwait
mov
xor
insl
add
daa
pop
data16
jno
mov
or
pop
sbbb
sub
sub
cltd
pop
and
mov
add
imul
cwtl
sub
cmp
dec
jnp
loopne
cmpsl
call
lock
cli
jecxz
loop
pop
cmp
lret
push
icebp
imul
xor
adc
fmuls
ja
insl
stos
mov
push
sar
xchg
mov
cmc
cmpsl
push
cltd
and
sar
jg
popa
lahf
in
adc
sbb
aam
pop
imul
fistpl
mov
shll
and
aaa
pop
aad
repnz
mov
xorl
sahf
out
cmp
mov
or
pusha
sub
std
test
dec
sbb
xor
sbb
inc
cmc
cmp
in
inc
mov
jge
hlt
push
dec
std
jnp
jmp
jecxz
stos
and
int
inc
lret
fistpl
insb
adcl
fistpl
jl
jecxz
or
sbb
jl
lcall
pop
pushf
jo
push
jp
repz
hlt
sub
cmp
cs
imul
out
sub
jno
cltd
mov
roll
and
cmp
cmp
pop
icebp
pop
repnz
aam
xchg
test
inc
pop
jns
push
mov
cld
pop
or
adc
stos
arpl
push
push
sub
inc
and
sub
inc
out
test
icebp
movsl
sti
jmp
pushf
mov
loope
and
inc
imul
clc
lods
es
jp
push
dec
int
sub
sbb
mov
int3
pop
es
mov
sbb
xchg
ja
or
pop
fdivrp
lea
test
ldmxcsr
imul
sbb
jmp
push
cwtl
movsb
clc
pop
fwait
inc
in
fcoml
inc
xchg
aad
in
insb
sub
inc
push
mov
xor
movsb
rcrb
mov
xlat
ljmp
cltd
gs
rcll
sub
and
pop
xchg
push
adc
fisubrs
fldcw
in
fisttpl
lcall
leave
inc
fcoml
div
cmp
incb
movsb
cli
cmp
inc
lcall
shrl
xchg
aad
mov
addr16
daa
or
mov
dec
sub
jbe
pop
scas
in
mov
adc
arpl
dec
iret
mov
jne
and
loope
mov
jg
lret
mov
rorb
mov
das
inc
cmc
cs
inc
jae
aaa
mov
xor
mov
mov
filds
mov
cmp
mov
movsb
fcmovnbe
scas
adc
xor
data16
sbb
inc
lcall
mov
dec
ret
mov
in
test
imul
stos
push
outsb
js
cmp
mov
sti
roll
shrb
and
js
pop
std
pop
je
pop
adc
fimuls
aas
test
test
adc
movsb
xor
jbe
pop
dec
out
ret
dec
mov
fdivs
sahf
flds
jae
mov
adc
bound
cli
repz
cmp
pop
popl
lods
lret
in
in
and
mov
inc
push
mov
jo
jae
xor
fs
pop
add
sub
mov
pop
test
adc
lock
or
pop
fdivl
imul
int3
add
rolb
sti
cmp
or
sbb
dec
jl
lcall
sti
sub
stos
xchg
adc
sub
xlat
push
sahf
inc
lds
and
int
fs
nop
sub
fstpl
mov
dec
cld
xchg
sbb
leave
push
xchg
stos
testl
pop
js
aam
or
sti
pushf
xchg
scas
jo
inc
add
push
lods
xchg
xchg
sbb
cmc
cmp
das
inc
fdivs
lods
fwait
enter
movsl
shl
les
pop
sbb
adc
fisttpl
imul
push
stc
and
cmp
jno
and
shl
jne
scas
pop
insl
add
pop
jle
and
data16
and
sbb
sahf
mov
dec
test
enter
lea
pop
dec
ljmp
adcb
repz
negl
sbb
scas
cmp
pop
cmpsb
es
adc
jnp
pop
jb
ja
int3
jmp
dec
sub
or
rolb
push
das
jae
pop
shrl
das
sbb
arpl
fidivrs
icebp
stos
aaa
and
jp
movsl
adc
gs
lds
jae
stos
or
movsb
xchg
xor
insl
sbbb
int3
sahf
mov
lock
es
test
sbb
inc
inc
scas
jge
mov
sub
sbb
mov
in
push
insl
out
andb
paddusw
lret
dec
lds
cmp
pop
mov
xchg
cld
out
or
mov
mov
add
outsb
and
loope
jle
inc
shll
shlb
or
loope
cli
dec
xchg
mov
pop
add
ljmp
int
mov
xchg
cltd
sbb
addr16
test
pusha
rcll
push
mov
adc
pusha
flds
mov
xor
cli
out
lock
sub
add
stos
add
push
add
dec
xchg
in
test
and
add
or
inc
push
xorb
cwtl
push
lahf
jne
arpl
xchg
in
lcall
and
xorl
xor
fs
cmp
xorb
sbbl
ja
push
hlt
lret
addr16
insl
add
or
mov
mov
or
inc
sti
adc
jo
sbb
out
ret
jns
insl
shl
xchg
lcall
outsl
in
inc
jno
add
cmp
ret
jo
aam
xor
enter
push
mov
out
fnstsw
stc
pop
sub
push
push
xor
adc
ror
leave
sbb
sarb
xor
jle
pop
iret
jns
test
stos
jb
pusha
fwait
or
mov
mov
fistpll
fildl
je
sahf
add
jns
pushf
mov
xchg
add
or
sbb
inc
pop
dec
cli
popf
sub
add
jno
pop
in
dec
inc
jb
ljmp
cmp
into
pop
out
add
dec
mov
mov
movsl
cmp
cmpsb
mov
jle
jbe
mov
int3
pop
push
fistl
lahf
std
or
fbstp
shl
mov
mov
jle
adc
add
decl
lcall
adc
ljmp
shlb
hlt
je
mov
mov
in
xor
push
mov
jns
lret
frstor
jp
push
mov
jmp
or
mov
gs
cmp
add
inc
nop
test
or
fcmove
jo
fsub
mov
jle
or
mov
insb
hlt
add
mov
scas
add
xchg
xchg
mov
push
mov
adc
cltd
sbb
or
test
mov
out
mov
lods
mov
inc
adcl
outsb
ret
in
mov
mov
cs
jmp
xchg
adc
mov
mov
mov
add
push
ds
aas
jle
shlb
dec
data16
notl
je
leave
in
addl
jbe
mov
loop
sbb
ss
push
and
sub
inc
out
cmc
fcomps
clc
imul
js
sub
inc
arpl
xlat
push
jo
flds
stos
das
mov
stc
inc
or
cmp
test
mov
out
insb
and
test
ret
fmuls
pop
outsb
clc
mov
push
jns
cmp
jo
inc
jmp
and
leave
push
cmp
movsb
daa
loopne
inc
lahf
sbb
out
icebp
mov
and
rcr
movsl
test
movsb
dec
lock
sbb
adc
adc
cmc
xlat
dec
loope
aaa
fstps
cwtl
call
cmp
aaa
mov
and
xchg
outsb
fldcw
sbb
test
push
imul
scas
scas
mov
xor
pop
cli
sti
in
mov
xor
dec
mov
in
mov
ret
ret
dec
mov
sbb
mov
arpl
mov
cs
or
sbb
inc
movsl
sbb
shl
clc
dec
pop
xchg
imul
and
xchg
ror
jl
inc
pop
outsl
inc
jle
adc
into
pop
pop
push
jle
lret
popa
mov
lret
std
push
or
call
sub
adc
mov
mov
mov
fistl
cld
sbb
loop
addb
pop
push
lods
xlat
push
adc
dec
fsubs
adc
aad
fsts
loopne
pop
stos
dec
push
pop
push
mov
inc
sub
xor
jg
int3
scas
jo
insl
xchg
push
call
cmpsb
lret
cltd
lret
and
lahf
scas
jge
lret
xor
xlat
xchg
push
push
jg
pop
pop
add
int
cmc
inc
subl
idivl
jg
and
xor
inc
mov
add
fisttpl
fnsave
dec
arpl
jbe
push
test
lea
cmp
cmc
cmpsl
mov
imul
add
jecxz
jne
mov
lret
jne
hlt
cmp
inc
pop
or
xchg
je
xchg
lock
jge
stos
ss
ret
inc
mov
mov
mov
dec
aad
or
fs
dec
xor
mov
vcmpss
xchg
int3
push
fistpll
push
inc
dec
jnp
mov
push
popa
cmpsb
inc
sahf
xchg
fistl
test
push
lock
hlt
adc
dec
aaa
mov
cs
test
dec
jno
mov
std
lds
pop
inc
subb
jmp
je
nop
mov
jno
stos
test
cltd
aad
sbb
adc
adc
stos
aam
jb
ss
in
jae
mov
into
adc
mov
loope
dec
insb
fdivr
or
shrd
adc
sbb
pusha
popf
testb
bound
test
enter
fidivrs
adc
or
pop
mov
xchg
jbe
pop
push
pop
jbe
loope
stc
sub
inc
and
inc
xchg
leave
imul
adc
addr16
popa
movsb
dec
sub
fcom
repz
out
dec
ret
jg
repnz
jne
outsl
sbb
cmp
pop
mov
or
mov
push
mov
inc
or
push
xor
dec
outsb
add
mov
sub
testl
mov
mov
push
push
scas
or
xchg
xchg
and
int
pop
iret
rcrb
fsubr
in
push
sahf
in
in
dec
sti
arpl
xor
jbe
jbe
popa
std
jns
mov
arpl
mov
cmp
faddl
aam
sarl
pop
xchg
mov
adc
mov
mov
pop
inc
cmc
daa
imul
pop
sub
outsb
and
xchg
imul
daa
dec
jae
dec
arpl
imul
mov
cli
jecxz
enter
cmp
xchg
movsl
and
add
mov
call
fadds
sbb
mov
outsl
inc
js
dec
add
jb
sbb
cli
xchg
test
cmc
adc
out
pushf
sbb
lds
jp
sbb
pushf
mov
iret
push
mov
adc
mov
or
sbb
inc
xchg
div
nop
xor
inc
inc
jb
sub
fs
leave
inc
mov
std
out
and
or
ret
push
das
loop
mov
sbb
cmp
cmpb
jno,pt
xchg
ret
ss
loopne
repz
daa
dec
cmp
js
cmp
and
stc
mov
adc
aad
dec
hlt
fmuls
jne
mov
inc
lret
xor
negb
mov
imul
lcall
jg,pn
push
push
and
xor
test
xchg
fisubrs
bound
stos
leave
adc
aam
xchg
add
inc
cmpsb
and
jae
dec
mov
jl
inc
or
jmp
sub
cmp
int3
adc
in
sub
xor
lods
push
mov
lock
mov
imul
mov
mov
int
mov
xchg
xor
mov
inc
rolb
pop
push
iret
scas
les
mov
sub
ljmp
jbe
jge
mov
mov
ja
and
aas
cmp
cmp
je
mov
mov
imul
arpl
adc
push
dec
cmp
sbb
xor
inc
enter
xchg
lret
jg
sahf
cwtl
cmc
sbb
shr
sti
xchg
push
sahf
pop
rclb
pop
pushf
lods
mov
jnp
xchg
cmp
enter
jmp
in
dec
mov
popa
ljmp
daa
cli
popa
testb
mov
lcall
mov
test
adc
push
data16
mov
ja
mov
add
cmc
out
insb
push
mov
sub
je
pop
enter
cwtl
jb
leave
out
shrb
jp
dec
pushf
adc
aam
bound
jne
stos
dec
push
push
cld
shll
inc
xchg
movsb
mov
push
shlb
mov
xor
stos
in
jl
push
mov
ret
pop
jmp
enter
pop
push
add
into
push
ljmp
dec
pop
sbb
sbb
leave
sbb
in
ds
cli
insl
jle
inc
call
xchg
add
mov
ds
insl
hlt
sbb
movsb
fwait
lock
mov
and
pop
inc
repnz
push
sbb
adc
dec
sti
sbb
lcall
pop
lods
rcrl
ret
cmpsl
pop
mov
mov
pop
adc
sub
repnz
mov
push
hlt
add
mov
mov
sub
push
ds
mov
or
shl
mov
aas
popa
ljmp
clc
outsb
mov
ficoms
cmpsl
addr16
push
mov
inc
cmpsl
inc
stos
jb
ljmp
jns
outsb
cmpsl
lcall
aam
sbb
cltd
nop
xchg
addr16
or
mov
sub
xchg
shll
inc
incl
lcall
jmp
mov
ja
enter
dec
out
loopne
sarl
imul
addb
and
iret
adcb
mov
mov
fistpll
inc
push
pop
lock
cmp
xor
fisubrl
dec
push
loopne
je
xchg
mov
in
fisubl
cli
dec
mov
jae
dec
mov
cmc
dec
enter
adc
test
mov
ret
mov
jnp
xchg
and
daa
mov
dec
test
mov
push
pop
push
ret
xchg
movsb
outsl
cmp
mov
mov
mov
aad
mov
inc
fidivs
out
insl
enter
test
stos
push
negb
or
in
stc
outsb
stos
push
add
lods
out
cltd
or
jo
shl
mov
fldcw
out
sbb
or
inc
and
xchg
lahf
adc
aaa
sahf
test
push
adc
fistpll
xchg
insl
scas
lea
sbb
mov
inc
int3
mov
or
iret
jmp
jns
pop
sub
mov
mov
jnp
into
pop
dec
sbb
jne
lds
insl
pop
inc
inc
pop
jecxz
push
jp
dec
push
aam
cltd
mov
xor
ret
mov
xchg
fildl
mov
mov
lahf
mov
xor
sub
lds
dec
or
and
sub
sbb
sbb
sbb
bound
jp
mov
mov
scas
add
hlt
cmpsb
ja
mov
iret
cmpsb
stos
pop
decb
or
jge
sbb
int
pop
out
lahf
and
popf
test
js
push
push
stos
mov
stc
cmp
inc
pop
out
push
mov
inc
inc
jns
nop
lods
xchg
xor
jns
insl
shll
xor
mov
aam
pop
or
mov
xor
lods
jecxz
push
fsub
xor
push
test
int3
ja
adc
mov
mov
adc
rorb
jmp
mov
mov
push
sbbl
div
ret
push
cmp
imul
sub
mov
and
gs
inc
mov
push
sbb
sub
test
rcr
fnstsw
cld
imul
adc
out
mov
or
lret
repnz
mulb
sarb
jp
push
adc
lea
shlb
lods
clc
aas
push
push
xor
shl
push
mov
jle
scas
cmp
stc
jnp
fwait
idiv
and
mov
pusha
jo
pop
fdivs
mov
inc
mov
test
add
int
aas
xor
outsl
dec
cmp
jb
push
dec
test
fmuls
jb
or
leave
cmpsl
fldenv
cmp
mov
xchg
sahf
jmp
push
test
sbb
inc
fwait
js
out
lea
mov
add
std
jnp
fidivl
push
or
adcb
cmp
cmpsb
idiv
mov
into
adc
lock
mov
xchg
jmp
cmp
and
xor
ja
and
xchg
sub
push
in
rcrb
insl
out
add
mov
mov
push
in
inc
xor
ljmp
fnsave
out
test
inc
cli
ja
in
sbb
sbb
es
aas
mov
cmpsb
js
mov
push
rclb
jecxz
mov
rorb
testb
inc
lods
pop
rep
sti
out
mov
mov
das
sub
addr16
add
sub
mov
adc
or
pop
mov
pop
push
inc
pop
scas
mov
popa
mov
cmp
cmp
dec
test
repnz
xor
out
cmc
ret
lret
mov
mov
sub
jno
push
pop
or
outsb
jmp
and
dec
jnp
cmpsl
fldcw
sub
test
in
xchg
iret
dec
es
inc
std
xchg
xchg
xchg
pushf
and
aas
fnsave
enter
mov
shll
jg
pushl
dec
lcall
hlt
inc
dec
leave
out
out
jbe
fmuls
and
in
push
mov
cmp
jle
push
push
enter
lods
adc
sbbb
lahf
xchg
pop
mov
inc
fimull
lcall
out
xchg
inc
mov
xlat
mov
mov
sbb
dec
or
in
lods
add
cmp
ret
int
movsl
pop
mov
jno
sub
mov
push
rcrb
loop
test
imul
popf
out
lret
stc
gs
sti
rorl
int3
pusha
mov
aad
enter
iret
divb
add
dec
enter
cmp
jecxz
shlb
mov
push
mov
jp
aam
jge
cmp
mov
call
fsubr
shrb
outsl
aad
insb
push
cmp
gs
out
lcall
and
pop
fidivs
in
pop
sbb
mov
adc
xor
xor
jmp
dec
xor
pop
sbb
sbb
push
popf
or
mov
fldl
xchg
je
inc
cwtl
mov
or
sahf
movb
cmpsb
push
or
cmp
test
fucompp
push
mov
cwtl
subb
sbb
inc
inc
or
and
cmp
neg
xchg
ds
jns
xchg
xchg
fidivrs
test
push
loopne
mull
xor
sub
or
repnz
sub
xor
pop
and
pop
stos
js
shrl
xor
jp
int3
mov
sub
add
shll
into
cld
icebp
pusha
xor
loope
push
mov
pop
and
out
push
rcll
mov
popa
jne
insl
pop
dec
aas
lea
push
clc
dec
add
add
mov
inc
dec
and
stc
lcall
inc
fldl
adc
mov
mov
fdivrs
popf
xchg
mov
rol
xlat
rcr
outsl
add
pop
cmc
cli
mov
cmp
inc
and
repnz
pop
adc
dec
dec
push
movsb
lea
adc
cmp
or
es
jo
push
mov
loop
cmp
sub
gs
rolb
xchg
or
mov
rcrl
iret
mov
sbb
enter
cmp
out
or
bound
dec
add
xor
pop
push
sub
call
jae
adc
push
dec
leave
mov
and
mov
xor
rorl
push
aaa
pop
pop
inc
faddl
mov
mov
jbe
popf
jle
xor
inc
js
xchg
lret
pop
add
fistpll
xor
cld
out
jmp
lea
nop
push
push
daa
add
jb
cmc
subb
inc
aad
mov
add
cs
push
xor
jmp
popf
and
jnp
cmp
iret
lock
sbb
and
push
mov
push
push
flds
enter
mov
mov
mov
and
mov
jne
int3
pushf
fwait
aad
les
jle
subb
push
adc
push
bound
inc
mov
fs
scas
data16
sbb
adc
push
push
pop
rolb
sub
sarb
jmp
fs
cmp
iret
sbb
jb
jnp
enter
inc
test
or
sbb
rol
mov
add
xchg
loop
xor
or
mov
xorl
leave
push
jae
or
push
jl
pop
jns
xchg
std
mov
sbb
mov
jmp
adc
jbe
lds
xchg
push
adc
push
daa
push
add
pop
test
or
jno
jl
insl
fimuls
fwait
and
xor
in
push
and
shr
daa
push
loop
je
ja
adcl
xchg
and
cs
xor
test
mov
inc
mov
inc
int3
rcl
pop
jae
sub
pusha
imul
in
xchg
mov
mov
orb
lret
adc
jp
mov
push
jecxz
call
add
adc
mov
fmull
jle
nop
daa
or
and
es
adc
add
data16
cmc
out
fisubrs
mov
and
fidivrs
lcall
fldcw
aam
jge
jne
and
ds
in
fnstcw
inc
mov
xchg
sbb
pop
or
popf
ret
ficoms
in
int3
pop
sub
add
cs
repnz
and
jne
fimuls
mov
mov
enter
iret
add
inc
clc
cmp
scas
enter
cld
jno
adc
fwait
cld
clc
loope
xor
fs
stos
cmpsl
and
in
lahf
cmc
fdivrs
pop
addr16
jle
stos
js
cmpsb
ljmp
add
jg
add
pop
push
lock
pop
and
jmp
cs
bound
pop
mov
add
stos
bound
or
call
mov
or
movsb
stc
loopne
mov
jo
or
cld
jp
add
push
inc
in
inc
xor
mov
xchg
xor
jge
sub
vprotb
push
push
mov
test
stos
add
and
and
jle
js
add
ds
mov
lret
imul
outsb
insl
sti
mov
ljmp
mov
mov
stos
mov
and
fwait
pop
loopne
pop
push
out
repz
repz
iret
sbb
dec
js
iret
jns
mov
xor
mov
ja
ficoml
mov
cmpsb
nop
push
or
hlt
rcl
lret
cmp
test
pop
cmc
jge
aam
dec
dec
xchg
xlat
mov
lret
test
or
add
into
xor
icebp
out
lea
fmuls
lcall
adcb
test
nop
mov
mov
ficomps
push
test
sbb
addr16
mull
inc
loop
fnsave
push
ja
out
loopne
adc
sahf
mov
push
mov
jp
notl
pushf
or
cmp
sbb
mov
and
or
lahf
mov
je
into
test
fldt
dec
dec
jp
aas
push
or
cmp
inc
add
subl
cmpsb
cltd
dec
pop
in
loopne
imul
xchg
pushf
xchg
arpl
sbb
stc
xor
stos
or
lds
negl
out
or
cwtl
int
addr16
mov
hlt
jnp
lods
sub
push
sub
lahf
mov
jp
aas
pop
dec
cld
mov
and
loope
shlb
xor
cltd
test
inc
cmp
not
or
sbb
jb
jmp
scas
les
mov
push
push
adcb
stos
roll
xchg
enter
mov
sbb
mov
xchg
add
and
sahf
and
js
js
ret
pop
inc
pop
inc
lcall
icebp
rorb
dec
outsb
mov
mov
pop
mov
lret
movsl
stc
mov
repnz
hlt
jnp
mov
out
sahf
jns
pop
push
daa
fst
xor
xchg
ret
into
xor
rcrb
mov
cmp
hlt
xchg
xor
adc
inc
filds
out
fnstsw
and
ss
mull
push
dec
cmp
adc
mov
xor
addr16
pusha
testb
pop
mov
mov
add
sub
sbb
sbb
push
xor
test
sahf
mov
movsl
jb
hlt
adc
lret
xchg
xchg
aad
push
adc
pop
xlat
add
test
fistl
mov
fmull
fwait
pop
jle
xchg
fisttps
lods
in
sub
sbb
subb
arpl
pop
ficoml
gs
or
icebp
cwtl
sti
ljmp
imul
in
mov
or
sbb
cmp
fcoml
xlat
lea
dec
cmc
lds
into
mov
xor
jo
cli
outsl
sbb
jnp
sub
les
push
movsl
cld
jno
cmpsb
xchg
sbb
dec
and
xor
icebp
mov
imul
xor
mov
in
inc
xor
push
mov
idivl
sbb
cmp
and
pop
in
sbb
into
xor
or
pop
mov
dec
stos
sti
or
test
iret
stos
xor
in
idivb
mov
inc
je
cmp
add
pop
ja
inc
das
sbb
out
ljmp
ja
icebp
jnp
push
push
lret
outsb
add
popl
cmp
bound
movsl
jmp
or
js
push
fprem
or
push
adc
sbb
fcoml
mov
clc
jmp
sub
or
xchg
in
pusha
jmp
sub
xor
mov
aaa
sbb
sbb
rcl
test
repz
mov
pop
pop
inc
imul
or
jbe
mov
out
mov
test
sbb
fstps
popf
outsl
and
sbb
mov
dec
dec
cmp
bound
pusha
push
or
inc
dec
push
into
pop
xchg
inc
arpl
aaa
jo
shlb
add
cmp
push
push
ss
mov
sub
into
mov
pop
fmull
fadds
dec
mov
rolb
loope
and
sub
push
aas
pushf
subl
inc
jne
or
aad
xchg
addl
ret
fdivl
sbb
imul
fnstsw
subb
sbb
jmp
lock
add
xchg
cmp
fdivrs
and
dec
fsubrs
jle
cmp
mov
popf
push
xor
sbb
mov
add
and
xor
xor
cltd
xor
mov
mov
lahf
icebp
jno
cmp
lods
lcall
mov
sub
aaa
aam
and
mov
gs
sbb
out
test
outsb
add
lods
xor
aam
aam
cmc
lret
inc
lcall
cmpsl
int
mov
cmp
clc
sub
cs
cltd
mov
jns
leave
xchg
das
cmpsb
push
les
std
mov
xchg
cmc
loop
inc
lock
and
or
fimull
scas
add
cmp
sub
mov
jno
adc
into
xor
pop
cmovb
mov
shlb
and
outsb
sbb
xchg
out
loope
lret
sub
cmp
mov
dec
dec
adc
xor
ret
mov
or
inc
faddl
enter
jmp
inc
pop
sti
sti
lods
dec
push
jle
xchg
mov
imul
out
sub
repnz
pop
xchg
adc
cmc
mov
repnz
ds
idivl
das
sti
cwtl
mov
les
jb
in
dec
cmp
test
jae
aad
dec
mov
clc
imul
aam
dec
mov
imul
cmp
dec
mov
ret
mov
and
movsb
andl
mov
add
pop
lret
loopne
sahf
and
xchg
mov
lods
adc
ds
mov
mov
sahf
loopne
lods
inc
add
mov
int
push
imul
ret
mov
mov
iret
sti
jecxz
scas
into
pop
shll
jns
mov
out
inc
ja
jmp
iret
dec
xchg
jo
movsb
outsb
mov
pop
loopne
add
and
js
sahf
mov
movsl
sbbb
adc
stc
notrack
mov
jns
mov
cwtl
push
adc
in
mov
ret
sub
frstor
pop
fsts
pop
ret
or
cmc
dec
aad
inc
ds
inc
incb
mov
pop
dec
ss
xchg
sbb
and
and
fldl
incb
in
outsb
lret
xchg
fstps
dec
mov
cmp
ja
popa
mov
ficomps
adc
in
and
bound
xor
inc
xchg
and
sub
rcrl
push
mov
sub
add
push
and
sub
pop
sbb
cmp
mov
mov
jmp
cld
dec
push
mov
dec
movsl
xor
fidivl
out
stos
add
into
dec
pop
push
ret
sarb
stos
sti
adc
imul
cltd
sahf
int3
mov
xchg
iret
rcr
ret
orl
leave
sarl
or
fs
mov
push
push
push
push
nop
in
aaa
jle
sub
dec
lcall
add
add
dec
pop
jecxz
dec
add
test
cmpsl
xor
jg
rolb
jae
sub
insl
jecxz
push
test
push
pop
lds
popa
aas
mov
fistps
mov
sub
loope
inc
int3
addr16
addr16
and
adc
bnd
pop
dec
pop
repnz
jmp
or
pop
andl
sarb
xchg
xor
adcb
out
fstps
repz
jg
pop
out
sbb
mov
mov
inc
mov
inc
xor
clc
mov
mov
cmpxchg
xchg
cltd
mov
insb
push
lahf
xchg
mov
pop
adc
ja
mov
lahf
into
in
or
dec
sar
mov
inc
nop
ja
enter
mov
or
add
cmp
pushw
mov
mov
fisttpl
cs
fwait
leave
movsl
add
xchg
fbld
sbb
aam
mov
xor
jp
push
mov
sbb
lds
push
add
sub
ljmp
or
jo
testl
aad
test
inc
jg
jo
cmpsb
mov
cs
cld
test
in
stos
out
sbb
test
jne
mov
inc
xlat
fldl
cmp
sub
mov
addr16
jmp
dec
jnp
sub
sarl
ljmp
hlt
jmp
and
xlat
aad
inc
jmp
adc
fcos
scas
dec
add
stc
pop
scas
cmp
jl
pop
int3
loopne
push
sarw
daa
push
dec
fisttpll
sbb
lods
dec
xchg
lods
push
push
cltd
mov
scas
dec
mov
or
sbb
xchg
mov
fidivrs
xor
jno
inc
inc
push
push
aad
scas
lods
push
rclb
pop
xchg
sbbl
lret
je
negl
jnp
sub
cld
jg
jno
pushw
push
andb
pop
dec
aaa
lock
and
ja
test
movsl
xor
add
mov
dec
dec
sbb
pop
jecxz
push
jg
ljmp
push
mov
ljmp
sbb
lds
mov
movb
or
jne
jo
shlb
or
jb
add
pop
icebp
and
or
out
mov
mov
out
push
cwtl
push
test
xchg
nop
jo
fs
and
mov
into
xchg
add
xor
pusha
std
sbbb
and
mov
jno
pop
cmpsl
sbbl
xchg
call
fucomp
push
mov
das
addps
sub
daa
xchg
sub
out
ljmp
adc
mov
in
repnz
leave
sub
cmp
pop
imul
dec
push
loope
mov
dec
gs
xor
out
aad
adc
in
adc
iret
lods
lock
psubsb
push
or
inc
xchg
or
fwait
dec
aaa
cmp
aaa
sbb
xchg
test
add
mov
sub
cmp
pushf
pop
xor
ja
xor
pop
xchg
xchg
imul
cmpsl
mov
das
jmp
mov
cmpb
pop
mov
jno
inc
sbb
push
lret
out
pop
xchg
inc
xlat
and
jno
test
sbbl
cli
xor
andb
lcall
scas
subb
add
loop
xor
xchg
or
mov
fldl
frstor
nop
jg
ficomps
lret
lret
shlb
mov
cli
std
cmp
pop
filds
mov
stos
dec
test
in
inc
lock
push
int3
std
dec
jnp
addb
test
push
mov
sub
mov
sti
lock
incb
nop
lods
add
cmp
call
fmuls
or
jmp
push
jl
mov
dec
mov
pop
out
push
add
xchg
and
pop
sub
daa
cmpsb
idiv
lock
cmp
fisubrl
sub
out
push
inc
or
ds
cmc
mov
mov
movsb
pop
leave
test
mov
and
push
mov
push
mov
mov
sarl
rclb
sbb
sarl
add
fistpll
xchg
fcmovbe
jb
ficoms
inc
push
fnstcw
jae
pop
jp
jmp
cs
test
stos
sar
sbb
ljmp
addb
xchg
ret
sbb
mov
push
movsb
shl
push
jbe
jns
je
sti
jae
lods
push
jae
jnp
dec
jne
ret
push
dec
popf
inc
enter
or
test
stos
sub
or
or
mov
and
outsb
or
xchg
lds
ja
lret
pushf
xchg
push
xchg
sub
out
insb
int
push
in
out
sbb
pop
pop
inc
icebp
into
pop
aas
cwtl
pop
cmp
mov
ret
in
std
in
cmp
cmp
cld
lret
lds
push
jne
xchg
inc
cmp
adc
dec
leave
jmp
fs
jns
data16
xchg
dec
push
test
pop
xchg
sbb
movsl
jno
ret
adc
sahf
sub
push
in
dec
es
dec
loop
andb
subl
sub
fdivrl
jbe
sbb
rcrl
xchg
icebp
mov
push
sbb
sub
xchg
addb
fcomps
jle
idivl
or
inc
test
xchg
out
cli
jle
pop
pop
int3
xor
lds
push
dec
cmp
mov
sbb
ficomps
dec
repnz
out
js
ljmp
notb
pop
lods
mov
jne
mov
inc
xor
lea
fists
jecxz
cmpsl
iret
lret
paddsw
or
jmp
test
xchg
cs
dec
daa
hlt
shrb
sbb
std
sub
push
idivb
popf
ss
jae
xchg
add
mov
jg
push
andl
xchg
inc
dec
push
iret
xchg
jge
jo
test
test
add
fnstcw
cli
cmp
test
xor
sub
sub
cli
xchg
jno
add
sub
jbe
or
fwait
inc
in
hlt
clc
jno
add
cmpsb
lret
dec
mov
mov
lods
xor
mov
sbb
push
rclb
push
sub
mov
add
xchg
test
xchg
sbb
sub
das
mov
lcall
out
or
aad
std
or
lods
stos
dec
lcall
jecxz
in
inc
andb
scas
ror
rorl
std
cs
pop
mov
cwtl
inc
push
int
add
cmpsb
hlt
pop
nop
or
ds
lahf
loop
in
fidivrs
das
pushf
adc
mov
sbb
imul
inc
cltd
adc
mov
out
leave
adc
inc
mov
dec
ds
xor
bound
js
push
jmp
jne
scas
pop
test
mov
sub
sahf
cmp
mov
mov
icebp
data16
fadd
and
jmp
push
cwtl
mov
in
adc
mov
std
fisubrs
mov
dec
mov
test
jmp
dec
pop
inc
movsb
fmulp
into
dec
pop
sti
cmp
clc
movl
mov
push
cmpsb
dec
cmp
divb
lea
mov
lret
push
and
sarl
dec
pop
push
or
mov
aam
xor
push
rcll
or
rcll
test
aaa
lock
sub
gs
or
jo
fadds
comiss
fists
bound
jecxz
pop
inc
fcompl
cmp
cli
clc
sbb
out
sub
mov
and
shrb
shrl
push
test
sbb
aaa
cmp
cmp
int
xor
shrb
dec
cmp
jno
xor
out
inc
jl
movl
add
mov
or
mov
push
out
or
ljmp
aam
ret
xor
jl
inc
pop
push
outsb
xchg
mov
xchg
bnd
call
mov
sub
fiadds
pop
xlat
fimuls
dec
and
notl
adc
ja
xor
jle
xor
pop
pop
sbb
xchg
addr16
jnp
cs
xchg
mov
dec
add
mov
outsl
cmp
cmp
mov
sub
cwtl
inc
push
xchg
clc
test
add
scas
rolb
xor
jg
or
jp
dec
push
sti
dec
arpl
inc
dec
push
and
jge
pop
xor
push
xchg
mov
cwtl
pusha
push
out
push
push
xor
popfw
jns
sbb
cmp
jge
shll
or
out
xchg
push
lods
sarl
shll
subl
mov
pop
movhps
jnp
add
stos
int3
and
add
jb
std
adc
xor
xchg
rcl
xor
inc
jbe
stc
mov
insb
sub
fmulp
fsubrs
inc
out
hlt
add
mov
jge
fs
bound
xor
jle
jg
push
and
dec
addr16
sbb
mov
outsl
jno
mov
call
mov
div
dec
flds
jnp
movsb
jb
sub
add
test
mov
jb
sbb
aas
dec
jmp
aaa
jns
push
fdivr
and
aam
insl
imul
pusha
pop
jae
jno
imul
pop
movl
mov
mov
inc
pushf
cmp
bound
shl
lcall
mov
mov
jecxz
ror
mov
push
repz
mov
sbb
out
inc
and
mov
les
movsb
cmc
jne
stc
out
push
cltd
sysret
pop
jge
mov
mov
test
cmp
cmpb
ret
int
pop
inc
and
inc
add
add
mov
sbb
shrl
adc
mov
xor
mov
jbe
pop
les
xchg
jbe
nop
popa
daa
in
push
add
add
out
pop
jbe
mov
in
pop
and
out
jae
jecxz
xchg
cmp
pop
xor
sbb
cmp
dec
xchg
mov
shll
push
ret
push
sub
inc
add
or
cmp
ret
lcall
mov
jle
aad
xchg
lret
dec
insb
test
mov
sub
outsb
out
das
jmp
add
pop
movsl
iret
cltd
inc
jo
adc
inc
inc
outsl
push
cltd
das
daa
sub
dec
jns
cmp
testb
pop
aam
ss
lods
jmp
pop
and
mov
or
and
fimull
cmp
push
sti
int
add
test
cmp
sbb
aad
jecxz
jo
mov
sbb
add
out
iret
rorl
push
insb
cmpsl
push
push
sub
mov
push
fucomp
in
mov
fidivrs
dec
xchg
mov
clc
sub
cmpsl
fidivs
imul
and
inc
ljmp
mov
stc
pop
mov
dec
inc
and
out
push
mov
jb
bound
mov
rcrl
cmp
sbb
jae
mov
pop
test
ret
xor
out
in
rcll
movsb
out
pop
imul
mov
insl
push
insb
repz
cwtl
sahf
push
movsb
lret
mov
xchg
clc
popa
xchg
filds
out
jg
mov
jl
nop
xlat
or
sub
imul
add
xor
lods
das
or
pop
ds
or
inc
sbb
lods
mov
sahf
mov
std
push
lret
add
test
xchg
gs
lock
dec
ret
loope
jne
sbb
int3
mov
fs
sub
jp
fucom
pop
pop
or
add
inc
mov
adc
ljmp
push
insl
xchg
fstpl
fnstsw
adc
mov
push
inc
mov
add
sub
popf
or
xor
shl
stos
ljmp
sbb
pop
enter
cmp
pop
pusha
lahf
and
mov
jl
dec
or
inc
ds
in
sbb
loop
cmp
imul
cmp
lret
and
mov
inc
lds
mov
int3
outsb
push
push
shlb
leave
rcr
sbb
in
sbb
daa
es
fistl
out
ss
or
or
pop
test
clc
cli
mov
in
repz
int3
jbe
and
fsub
cmp
in
repnz
xor
pop
pop
rclb
orl
mov
arpl
cltd
sbb
xor
cmp
sub
dec
and
push
adc
insb
popa
ud1
pop
leave
loopne
test
sbb
dec
fimull
mov
push
test
jle
daa
movsb
xchg
jo
clts
subl
mov
push
int
test
je
xchg
jnp
cs
and
and
test
test
cmp
nop
dec
push
pop
cmp
ret
mov
xchg
into
mov
test
sub
outsl
and
or
mov
lods
push
xor
lods
in
lods
jne
stc
lods
stc
bound
xor
ljmp
daa
add
xor
je
push
mov
fsubrl
and
xor
jb
aad
test
pop
mov
sub
mov
inc
add
repz
js
dec
lcall
clc
outsl
sub
inc
hlt
lea
pop
cmpsb
jmp
jno
rcrl
addb
out
or
dec
pop
mov
or
jbe
push
dec
dec
xor
sar
mov
aaa
mov
cli
cmp
lea
dec
rcrl
sub
imul
add
xchg
into
jae
mov
xchg
pop
push
xorl
add
scas
pop
dec
cmp
sbb
call
jns
mov
or
incb
fs
push
imul
dec
add
scas
lcall
pusha
xor
movsb
xor
and
mov
xchg
pop
push
jo
lret
sub
push
adc
gs
out
fildll
sbb
pop
pop
mov
enter
mov
lds
pop
ss
mov
inc
jns
cmpsb
pop
adc
sub
and
xor
fistpl
outsl
or
cmp
insb
sub
xchg
pop
pop
or
hlt
jns
outsl
movsl
xchg
stos
add
sar
mov
sub
xchg
repz
sbb
adc
lds
xchg
xchg
iret
dec
sti
popa
cmp
popa
sbb
mov
push
in
fimull
lods
loop
inc
push
or
aas
ja
cmc
lea
mov
xor
xchg
jae
inc
mov
loope
frstor
loopne
xor
pop
std
xchg
or
jae
sbb
test
add
add
jmp
dec
popf
flds
cs
scas
pop
or
push
das
adc
jle
add
pop
add
add
gs
jg
sahf
dec
push
cmp
pop
pusha
inc
cmpsb
dec
mov
sub
adc
mov
dec
push
cld
sahf
shl
mov
insl
rorb
cli
mov
lock
dec
jmp
xchg
bnd
fimuls
inc
adcb
lahf
icebp
jg
mov
inc
stos
fucomp
in
xchg
xchg
xor
or
js
xorl
testl
inc
call
push
sub
jp
fidivrs
xchg
lds
and
lea
sti
xchg
in
inc
jge
mov
scas
and
inc
ret
popf
mov
dec
in
mov
fs
outsb
cmp
mov
sub
in
mov
jecxz
adc
mov
sbbl
adc
cmp
mov
mov
sbb
jmp
ss
outsl
jns
mov
in
xor
test
push
testl
jae
ffree
dec
lea
and
test
repnz
jl
inc
sahf
test
sub
push
into
cmp
pop
jnp
pop
push
cwtl
outsb
insl
sub
xor
mov
push
repnz
es
sub
cmp
add
mov
cmpsb
inc
fnsave
inc
loope
jno
inc
iret
outsl
and
test
and
jbe
imul
adc
fiaddl
lods
mov
adc
cltd
mov
sbb
mul
mov
xchg
ds
int3
repz
out
xchg
icebp
lahf
jmp
sbb
or
out
mov
dec
xchg
jg
mov
fdivr
scas
arpl
insb
sbb
jae
sub
repnz
xor
in
fcoml
jae
rcl
sub
out
adc
cmpsl
int3
jle
push
xor
test
cmc
cmp
clc
xchg
pushf
pop
or
mov
push
ss
sub
cwtl
hlt
cltd
xchg
sub
cmpsl
test
dec
aas
mov
mov
push
cmp
enter
jno
lret
mov
testl
pop
imul
popf
std
imul
sbb
in
xor
jg
mov
xor
dec
aaa
out
jp
pop
sub
clc
xor
mov
sar
pushf
mov
mov
jae
sbb
mov
and
cli
or
sub
in
in
rcrl
call
push
out
loopne
inc
xlat
and
sbb
scas
imul
mov
call
sub
push
bound
pop
cmp
or
in
nop
dec
in
loope
mov
add
imul
xchg
inc
and
xchg
in
out
inc
dec
in
ja
test
mov
lods
gs
add
xchg
jge
jl
jmp
xchg
adc
lds
fnstenv
jl
insb
nop
mov
and
cltd
xchg
int3
pop
xchg
and
push
bnd
ljmp
jns
loop
ds
xchg
aad
in
sub
cmc
out
xor
sti
fwait
aaa
lret
xchg
jl
xchg
mov
outsb
ffreep
and
push
aam
test
pusha
or
xchg
push
out
mov
xchg
mov
add
and
icebp
sbb
mov
xchg
xchg
add
outsl
xchg
mov
scas
imul
rorb
push
ljmp
sbb
stos
lods
rcrl
mov
add
sbb
push
pushf
sti
mov
ss
adc
xor
std
popa
jecxz
das
mov
cs
push
sbb
xchg
xchg
aam
cmp
enter
enter
bound
xor
pmaddwd
in
in
in
lret
inc
mov
cld
sub
pop
mov
dec
jmp
lret
inc
imul
je
pop
cltd
fsubl
les
roll
mov
xor
add
inc
pop
or
shl
mov
ss
jbe
dec
inc
fsubrl
cmpsl
jle
mov
js
mov
sbb
insb
rolb
cmc
insl
cs
jae
xlat
sub
cli
sbbb
mov
aam
mov
dec
mov
jb
mov
xor
sub
adc
pop
xchg
dec
and
stc
adc
pushf
dec
or
add
or
push
sbb
cli
aas
shll
inc
ljmp
jle
pop
shlb
int
mov
clc
dec
loop
cmp
repz
mov
push
into
adc
and
lds
inc
xor
and
cld
cmc
stc
jne
sarl
loope
jo
ret
mov
cli
or
xchg
add
jno
sub
or
jmp
lock
inc
ss
xchg
push
repz
mov
int
sti
jae
in
sbb
mov
test
mull
cmp
jg
cmp
mov
sbb
std
and
adc
add
outsl
fstpt
stos
ret
scas
cs
loop
fld
inc
leave
es
mov
fstpt
cwtl
aad
pop
out
add
xchg
push
sub
insl
xchg
mov
cld
dec
movl
sbb
and
push
mov
or
aad
and
mov
mov
pop
ja
loopne
jp
add
mov
pop
sub
shrl
xchg
aad
clc
inc
std
bound
das
adc
pop
push
inc
das
fmul
jns
adc
sbb
cmp
or
dec
nop
ss
ljmp
je
test
jns
fidivrl
lock
std
imul
inc
ret
stos
or
rorb
jb
sbb
push
ss
jne
aas
sbb
stos
sti
jmp
xchg
testl
cltd
shlb
add
in
movsb
xor
stos
out
cmc
add
adc
lea
ja,pt
xor
cmpsb
mov
lods
jne
xchg
dec
cli
pushf
imul
cltd
jne
dec
rcl
loope
jns
sub
pop
jno
sbb
lret
cmp
out
enter
fisubl
xchg
icebp
inc
imul
movsb
call
pusha
xchg
in
lods
pop
add
xchg
cld
mov
seta
xor
cmc
jb
or
sbb
iret
or
rdpmc
rcrl
in
insl
aas
xor
test
or
les
mov
adc
roll
mov
mov
ja
xchg
xchg
aas
push
mov
in
cld
xor
pop
int
mov
jge,pn
jge
inc
pop
jl
cmpsb
adc
mov
repnz
lods
dec
jno
dec
sub
adc
push
aaa
push
gs
mov
jno
into
outsb
rorb
or
sar
mov
adc
or
fistpll
jbe
call
daa
jb
repz
roll
and
sarl
iret
dec
test
jmp
mov
rolb
stos
mov
roll
cmp
daa
or
adc
stos
xor
and
mov
jnp
dec
movsb
shll
adc
nop
dec
add
out
je
push
cmp
or
mov
and
pop
ljmp
rorl
es
sar
mov
sub
lret
add
pop
xchg
and
inc
cmp
imul
mov
jne
mov
pop
sbb
adc
pop
inc
mov
or
pop
in
sbb
jb
repz
pop
shl
shlb
push
xchg
pop
mov
ljmp
sbb
jecxz
jge
xchg
sbb
adc
aaa
cmpsb
fistl
lret
push
rcrl
dec
lahf
push
popa
lret
adc
fadds
movsb
popf
cmp
ss
sbb
shl
testl
pop
mov
lret
arpl
xor
push
in
and
pop
scas
loop
and
fiaddl
jns
movsb
and
stos
daa
out
aas
sbb
jmp
mov
mov
dec
jb
ret
mov
xchg
mov
dec
mov
fdivrp
add
mov
adc
cmp
sbb
inc
fsubrl
popf
dec
out
cmp
bnd
inc
mov
mov
sti
and
inc
inc
or
push
lea
sbb
xchg
insb
int
lods
mov
sahf
push
wrmsr
push
fdiv
jecxz
sbb
jb
xor
movsl
jne
rcl
dec
jmp
inc
lds
lret
cmp
test
aad
je
ffreep
popf
pop
sbb
pop
and
jb
pop
sti
jb
loope
pop
and
sub
stc
dec
sub
lods
ds
mov
mov
inc
and
faddp
into
push
test
and
add
push
arpl
outsl
in
fisttpll
jp
adc
push
fimuls
pop
arpl
jae
adc
mov
mov
and
insb
cs
cltd
jg
jp
in
jno
dec
add
pop
das
fwait
enter
adcb
lret
mov
into
and
inc
mov
je
fs
pmaxsw
push
icebp
pop
xor
rcrb
jge
mov
or
adc
push
or
test
mov
pop
mov
shr
lods
xchg
fsubs
fwait
sub
dec
pop
cs
shr
fildll
pusha
or
mov
fwait
cmpsl
jb
pop
xorb
cmp
jae
mov
sahf
xlat
inc
xchg
out
dec
lahf
xchg
pop
dec
ficomps
cwtl
or
add
add
jne
clc
dec
lret
filds
test
sbb
pop
sbb
pop
test
andl
sbb
jmp
stos
lods
cmp
mov
cmp
mov
adc
imul
dec
pop
xor
cs
roll
fdivr
and
or
mov
sbbb
sbb
xor
jne
test
popa
call
pop
je
mov
add
sub
js
insb
fcmovu
ret
mov
fisttps
lret
cmp
push
fdivs
fisubs
adc
in
mov
cmpsb
mov
push
cmp
clc
or
scas
xor
mov
sahf
sbb
test
mov
mov
ljmp
dec
xchg
rol
push
sub
pop
dec
mov
xchg
rcrb
dec
mov
mov
dec
push
pop
dec
jp
scas
loop
cli
inc
mov
inc
add
push
fucomi
cmpl
jbe
shll
test
out
add
out
adc
xchg
inc
int3
cmp
lock
push
xor
xor
iret
jnp
cwtl
mov
jmp
sub
movsl
dec
mov
push
out
jp
fs
cmp
int3
ret
flds
dec
pushf
jae
push
xor
aam
add
call
daa
mov
jp
rcl
xchg
icebp
cmp
icebp
jecxz
add
fnsave
push
mov
icebp
jmp
in
add
movsl
ret
mov
sub
xchg
movsl
jge
jno
and
mov
pop
lret
and
stos
idiv
inc
mov
mov
mov
push
mov
ljmp
mov
cmp
mov
xchg
add
roll
xchg
in
pop
in
sub
das
scas
add
pusha
mov
xchg
push
xor
data16
daa
nop
lods
jbe
jmp
std
push
mov
push
adc
fisttpl
mov
lea
dec
and
add
aaa
popf
adc
pop
sbb
imul
lret
mov
add
mov
add
jecxz
push
pop
pop
into
popf
push
lods
or
mov
and
add
nop
loope
bound
xor
insb
mov
lods
sub
mov
movsl
dec
sbb
xor
fisttpll
pop
jae
push
dec
leave
std
and
lret
dec
cmp
std
inc
ffree
cmp
add
lea
lret
dec
pushf
hlt
out
in
mov
pop
and
jo
fsubrs
cmp
dec
xorb
imul
mov
jnp
xor
into
and
pop
stos
or
or
repnz
fucomi
mov
dec
mov
pop
mov
push
cmp
cmpsl
adc
add
scas
push
cmp
cmp
cli
ror
adc
nop
andl
leave
or
jg
dec
and
push
imul
mov
xor
ret
xor
sub
dec
jge
push
dec
jp
adc
mov
cmp
cmc
mov
js
mov
add
and
jns
stos
mov
in
int3
fistps
fdivl
or
insb
imul
dec
ficoml
mov
shrb
js
sahf
sbb
jge
rcll
xchg
and
gs
iret
das
inc
mov
clc
movsl
sbbb
mov
xchg
jno
add
cmp
or
xor
push
rcll
add
cltd
es
sbb
ret
mov
sub
enter
je
fldenv
fnstenv
dec
popf
jb
cmp
xor
mov
faddp
outsl
push
or
pop
mov
push
es
mov
daa
mov
pop
push
imul
arpl
push
cmp
lret
jecxz
sbb
aad
mov
fsubrl
icebp
movsb
lea
inc
enter
hlt
dec
nop
mov
sahf
popf
bound
and
cs
inc
mov
push
movsl
jle
stc
xor
outsl
mov
sbb
pop
outsb
mov
jmp
inc
je
pop
mov
jecxz
add
lret
lahf
push
stc
call
loope
aam
rclb
lds
popa
clc
mov
push
jae
sub
sbb
ret
mov
jae
mov
or
std
cmp
outsb
daa
fldt
jo
add
lock
sub
push
jmp
mov
in
jb
shll
stos
mov
push
xor
movsl
lahf
xor
sbb
mov
sub
jge
test
inc
ss
rol
fidivl
sub
lcall
jge
mov
add
repz
pusha
loop
xlat
inc
loope
pop
leave
add
pop
fs
int
cmpsl
mov
bound
std
les
lahf
adcb
push
and
xchg
mov
test
lahf
adc
jmp
cltd
pop
pop
and
cmp
div
lea
mov
loopne
jnp
popf
cmpsl
or
punpcklwd
xor
sti
sti
pop
pop
nop
mov
and
jle
xor
out
je
and
mov
push
or
test
cmpsl
hlt
mov
or
xchg
fisttps
xchg
cmp
mov
insb
or
loope
aas
cltd
shll
pop
jle
xlat
fisttps
ficoms
fildll
iret
dec
stc
xchg
mov
std
stos
repz
or
cmpsb
inc
mov
insb
sub
popa
lret
mov
adc
sbb
clc
mov
in
adc
or
lock
in
rcrl
nop
into
mov
call
xchg
or
imul
js
insb
lds
out
mov
or
sub
stos
mov
out
mov
mov
mov
out
xor
mov
pop
fwait
pop
fnsetpm(287
ljmp
aad
hlt
xchg
cmpsl
xchg
cmp
pop
cld
xchg
ret
mov
jl
ds
push
cmp
pop
cmpsb
loopne
xor
in
jg
out
add
push
mov
icebp
jb
mov
xchg
inc
pop
adc
jl
xchg
xchg
jmp
repz
in
imul
xor
jecxz
in
or
sub
push
and
ret
cmp
mov
enter
fidivrs
aas
imul
pop
pop
dec
xor
pop
call
push
bsf
xchg
leave
xchg
cmp
outsb
adcl
ret
cwtl
shl
mov
arpl
scas
test
jno
andl
in
adc
mov
sbb
es
imul
enter
jae
and
push
xchg
mov
movsl
fdivr
sbb
lock
sahf
lods
popa
pop
jno
aaa
push
scas
jbe
xor
ficompl
jae
jge
je
push
movsb
xor
in
in
aam
call
iret
lds
jmp
mov
adc
insl
je
mov
decb
mov
cld
or
aas
sti
test
les
nop
aas
cmp
repz
adc
inc
sbb
jle
popf
popa
popa
and
jge
into
mov
pushf
sub
js
mov
cmpsb
nop
push
mov
or
in
mov
push
jo
lahf
dec
jne
mov
jae
and
or
dec
imul
loop
loopne
aas
bound
mov
es
adc
and
push
jne
movsb
dec
jmp
and
call
adc
out
mov
push
frstor
mov
into
test
icebp
fs
mov
test
pop
sub
adc
push
push
pusha
sub
negl
jle
mov
loop
push
loop
stos
xchg
insb
mov
mov
jne
fcompl
popa
jmp
decb
mov
dec
pop
adc
mov
or
into
loop
daa
add
je
fbstp
mov
cmp
jne
pusha
outsb
inc
jmp
icebp
lret
pop
loop
dec
mov
mov
jl
pop
imul
mov
fisubrl
test
cwtl
cmp
cmpsb
stc
mov
pop
xor
ret
lea
movsl
imul
cld
push
sub
mov
inc
xchg
jnp
and
inc
push
cmp
and
scas
mov
js
faddl
mov
pusha
ret
sub
gs
sarl
xor
or
mov
jecxz
or
lahf
mov
stos
test
pop
xchg
test
cmpb
inc
jae
dec
fisttpll
xchg
into
jb
in
pop
leave
or
out
xlat
xchg
push
jmp
fst
dec
ret
data16
shll
and
in
repnz
or
cwtl
xor
imull
mov
sub
fwait
push
aam
in
push
sub
stc
addr16
sti
pop
hlt
cmpsl
adc
push
in
jae
jb
loop
xchg
cli
lock
push
mov
push
test
sti
pop
jp
mov
xchg
xchg
std
sub
pop
call
cli
inc
dec
xchg
inc
aaa
adc
inc
shll
or
push
pop
nop
daa
jo
out
shrl
pushf
mov
push
pusha
out
lds
mov
pop
mov
loop
negb
pop
and
hlt
mov
pop
cmpsb
out
mov
and
mov
add
jg
xchg
sar
ret
stc
out
cmp
adc
cmp
sub
jno
or
jmp
aaa
test
jo
push
in
pop
test
pop
inc
fcomi
shrl
repnz
pop
xchg
or
sub
jmp
lds
add
add
and
inc
aaa
mov
inc
dec
or
outsb
sub
push
fcoms
jp,pn
inc
or
sbb
stc
in
dec
enter
mov
data16
cmp
and
addl
dec
sub
inc
lahf
orl
cmp
jnp
rcrb
sub
mov
push
mov
aad
cmpsb
jb
std
aad
cmp
aas
push
cmc
fisttps
cmc
dec
push
add
idiv
jb
mov
pop
jge
mov
add
sbb
ficoml
mov
inc
rorl
outsl
xor
in
add
mov
mov
in
or
dec
pop
stos
dec
shrb
mov
xchg
scas
mov
jecxz
fcom
pop
popl
lds
testb
cld
lea
xor
mov
mov
or
sbb
mov
sbb
test
cmp
loopne
mov
stos
sbb
inc
inc
xor
adc
pop
push
clc
mov
stc
pushf
rorb
mov
xchg
stos
mov
icebp
mov
mov
gs
sbb
negb
call
mov
push
divl
stc
adc
adc
jmp
fwait
test
and
test
sti
inc
dec
lcall
je
cmp
out
mul
stos
lods
jo
daa
push
aas
in
jbe
cmp
pop
bound
loope
dec
cli
pop
mov
mov
or
cmpsl
jo
push
in
mov
bound
out
mov
sub
call
jno
stc
test
repnz
hlt
mov
hlt
addr16
imul
fnsave
filds
test
fisttpll
cmc
mov
jge
pop
into
loop
mov
mov
sbb
out
mov
cmp
in
pop
jbe
xor
add
js
xchg
cmp
int
cmp
aam
in
push
push
fildl
gs
lock
adc
jmp
fsubrs
mov
add
or
les
pop
or
pop
jno
rcrl
jp
push
fnsetpm(287
lahf
inc
lret
out
cmpb
lds
sahf
add
stos
fidivrl
dec
dec
or
mov
inc
fcmovne
loop
add
fadds
cmp
int
mov
pop
aaa
mov
inc
add
insl
lcall
loope
sahf
mov
push
aam
sbb
ret
push
loopne
jecxz
pushf
add
xchg
insl
fstpt
add
jp
sub
xchg
rcr
sub
or
ret
add
ja
gs
fmuls
aas
inc
ret
das
or
sub
enter
lods
jne
frstor
leave
iret
ss
sbb
cmp
je
or
mov
cmp
sbb
sbb
xchg
xor
cmp
jl
scas
sbb
cmp
or
stc
pop
lcall
incb
ljmp
fwait
and
mov
push
mov
sbb
cmc
fnstcw
pop
mov
push
sub
daa
and
int3
outsb
pusha
cmp
ss
add
dec
pop
or
inc
fisubl
sbb
sarb
mov
push
outsb
iret
rep
fistl
jno
push
mov
fidivrl
incl
rorl
movsl
xchg
shr
aam
xor
loopne
pusha
push
push
in
sbb
subb
jo
fs
adc
adc
jbe
mov
shrl
push
pop
dec
stos
cltd
mov
push
frstor
jmp
mov
cmpsb
test
clc
mov
or
jb
xor
fwait
and
js
inc
xor
xchg
mov
jle
movsl
mov
loope
add
or
xchg
stc
jle
pop
sbb
movsb
fsts
dec
xchg
cmp
sbb
adc
insb
cs
nop
ja
ficompl
pop
add
mov
popa
sbb
push
flds
cli
rol
mov
psllw
sahf
les
loope
std
inc
test
cwtl
cmc
cmpsb
cmp
or
sbb
aam
pop
mov
add
jg
jecxz
and
int
add
or
cmp
inc
cld
cmpxchg
fs
push
leave
pop
imul
insb
mov
lds
mov
out
dec
bound
ret
mov
mov
idivb
mov
movsb
sti
jl
icebp
mov
push
sub
insl
adc
int
or
mov
arpl
lret
movsl
rcrb
mov
dec
popf
sbb
addl
add
cmpsb
pop
or
rcl
sub
adc
out
pcmpgtb
loop
or
repnz
push
adc
mov
adc
push
sub
cmpsl
mov
adc
or
dec
test
lods
leave
dec
push
ret
push
pop
sqrtps
insb
adc
mov
lret
std
test
cmc
jne
jbe
sbbb
cmpl
or
fcoml
test
sahf
addr16
dec
sub
popf
mov
or
dec
mov
lcall
add
movb
pop
pop
lods
pop
aam
add
sub
gs
xor
test
pop
lods
out
rcrb
aad
add
rorl
dec
nop
add
push
lret
mov
push
xchg
and
in
aas
xchg
outsb
dec
sbb
inc
in
test
pop
add
sbb
or
cli
or
scas
imul
and
jge
xchg
icebp
out
mov
adc
push
mov
popf
out
lods
cld
out
and
push
jo
pop
mov
inc
pop
dec
jecxz
fnstsw
mov
inc
cld
sub
push
jg
add
clc
dec
iret
in
loopne
xor
std
or
out
jo
cmp
push
mov
inc
imul
pop
pop
dec
gs
scas
fmuls
and
jnp
outsl
jl
add
adc
loopne
push
mov
xchg
or
inc
cmc
fbld
inc
pop
lea
in
mov
in
sahf
pop
nop
sahf
push
mov
pop
xchg
or
xlat
out
mov
cs
xchg
ss
cmpsl
fstpt
xchg
fsubrl
xchg
lcall
int
cmp
mov
scas
xor
mov
subb
sub
fistpl
add
lahf
xlat
lahf
sti
push
dec
adc
repnz
sub
push
test
add
adc
inc
dec
loope
and
xchg
out
lods
sbb
dec
sub
dec
xchg
sti
fdivs
inc
imul
sarl
jle
mov
and
sti
pop
adc
arpl
mov
mov
mov
repz
leave
push
lods
gs
into
push
inc
loope
dec
pop
add
fsubs
fs
or
sbb
call
push
sahf
getsec
mov
jno
sti
push
jnp
enter
daa
xchg
mov
pop
cmp
xor
popa
mov
and
outsw
add
add
dec
into
ljmp
in
or
mov
jne
sti
test
cli
iret
out
popf
inc
or
push
and
mov
popa
cld
cmc
jnp
sub
dec
mov
push
sub
sub
mov
and
adc
int
popa
std
imul
jmp
jno
mov
cli
fimuls
or
lock
dec
mov
jae
mov
pop
iret
sahf
mov
cmpsb
dec
mov
mov
aaa
push
pop
stos
test
sbbb
sahf
jb
push
mov
or
jecxz
xchg
out
xor
sbb
jo
push
push
pushf
mov
mov
mov
stc
mov
gs
lret
inc
cmc
out
cld
stos
pop
imul
ja
mov
arpl
xorl
jmp
mov
movlps
or
xchg
and
or
out
fdivrp
add
jnp
out
sbb
int3
sbb
jecxz
pop
movsl
aad
imul
pop
mov
xchg
xchg
ds
ja
je
out
sub
or
push
mov
je
scas
clc
add
dec
adc
add
pop
loope
mov
mov
scas
test
sub
mov
push
lea
leave
xlat
xchg
sbb
in
xor
mov
jp
mov
lret
pop
jnp
xor
lea
jae
cmp
mov
mov
jle
and
shl
in
rep
sahf
ds
test
jmp
pop
stc
jbe
aas
jo
push
jns
and
addss
fnsave
mov
adc
sbb
dec
lret
lret
in
or
imul
pop
outsl
xchg
pop
std
ss
push
mov
dec
fs
adc
add
into
loopne
mov
fwait
pusha
jne
mov
adc
push
into
add
mov
inc
jg
mov
addr16
jns
push
mov
pop
adc
popl
or
popa
xchg
dec
dec
popf
dec
cmpsl
jge
lret
lret
fistpl
out
aam
je
mov
imul
pushf
push
sub
lea
leave
das
pop
loope
popa
sti
ss
pop
nop
inc
lods
adc
dec
mov
and
arpl
inc
jb
loop
nop
pop
jl
inc
and
popf
mov
pop
sti
xor
or
or
mov
cmp
mov
inc
jg
pushf
ja
cmpsb
sub
dec
adc
movsb
into
xor
stos
rcrb
cmp
aad
movsl
or
dec
aas
mov
push
fldcw
andl
cmpsb
ret
shlb
cmp
inc
xchg
pop
and
pop
xor
sbb
fimuls
and
pop
lahf
sub
clc
fmull
xchg
rorb
lods
sub
pop
aaa
outsb
pop
mov
out
out
ficoml
add
lock
mov
insl
adc
in
gs
pop
sti
mov
and
xor
pop
pop
xchg
iret
sbb
adc
xorb
es
xchg
mov
and
scas
pop
xchg
test
int3
ja
enter
rcll
addl
aam
mulb
push
call
mov
arpl
cmpsl
pop
fcoms
push
pop
shlb
insb
movsl
loope
fsts
fidivs
sub
stos
ds
and
ret
seta
pmulhuw
xchg
push
inc
adc
jae
into
frstor
cmp
pushf
push
xchg
push
add
xor
cld
jecxz
xor
cmc
push
out
mov
loopne
adc
adc
fld
mov
ret
xchg
dec
adc
lea
push
mov
mov
mov
mov
cwtl
cld
mov
rcrl
xor
cli
push
push
xchg
sub
jl
mov
ds
sbb
cmpsl
imul
mov
dec
dec
stos
sbbb
push
push
mov
imul
movsb
mov
enter
aaa
pop
cmp
pop
jmp
pusha
jnp
or
dec
dec
imul
push
sub
xchg
fnstcw
dec
sahf
add
sti
mov
movsb
insb
notb
and
jmp
imull
mov
js
shl
fisttps
pop
xchg
jno
cs
sub
cs
mov
sbb
cmp
out
pusha
jl
gs
mov
add
xchg
repz
sarb
mov
aaa
xor
bound
pop
push
in
xchg
mov
adc
lgs
sahf
outsb
pop
loop
shll
mov
and
mov
les
xchg
fcoml
into
arpl
jp
mov
sti
dec
sbb
and
enter
jbe
cwtl
bound
aas
push
adc
iret
outsb
jo
jle
adc
daa
dec
xor
cmp
xchg
je
out
les
sti
nop
out
push
sbb
stc
jge
stos
out
inc
xchg
in
stos
notb
mov
push
push
jmp
daa
lds
ret
pavgb
lods
jmp
iret
add
fsub
test
adc
ljmp
and
fdivrl
pop
adc
and
mov
ss
mov
in
dec
and
test
call
mov
or
pop
je
sbb
push
adc
mulb
dec
cmp
cmp
cmc
mov
inc
adc
rol
into
pop
push
or
adc
aad
sbb
sbb
dec
loopne
hlt
lods
inc
lods
popf
stos
or
pop
in
lock
cli
aaa
nop
movsl
lea
add
xchg
mov
cmp
aas
arpl
mov
int
in
cs
and
lret
push
adc
sbb
jnp
mov
dec
das
roll
jb
adc
popf
notl
mov
mov
insl
or
sbb
sbb
fidivs
dec
pop
enter
lock
rcr
mov
sub
aam
into
mov
mov
inc
xor
xor
inc
jmp
insb
push
js
and
inc
dec
cltd
or
repnz
xchg
fisttpl
cltd
in
test
nop
push
sbb
faddp
dec
nop
mov
mov
mov
mov
test
fldl
pop
push
xchg
test
pop
sbb
pop
sub
data16
mov
sarb
push
mov
mov
sub
jae
les
lret
push
jmp
daa
xchg
jo
mov
ret
pusha
and
cmp
dec
adc
aas
dec
xor
xor
mov
adc
push
repz
jbe
fwait
dec
fldcw
stos
gs
sbb
cwtl
stc
popa
lds
mov
sbb
addr16
xor
jle
sub
loopne
xlat
lret
lret
xchg
or
inc
das
inc
lgs
sbbl
jmp
cwtl
mov
mov
push
lahf
fcomps
sub
pop
bnd
jp
ja
test
rolb
mov
je
and
das
xchg
in
insl
mov
setp
arpl
push
lods
mov
lods
fs
cld
js
mov
mov
dec
adc
jmp
hlt
jecxz
jg
add
push
aad
nop
adc
test
adc
mov
jbe
insl
or
mov
xor
inc
fcompl
insl
sub
xchg
fldenv
cmp
add
adc
adc
popfw
pop
cmp
out
or
loopne
ficoml
add
and
in
jnp
cmp
loopne
jle
xchg
test
jp
xchg
aaa
jmp
jno
or
bnd
lcall
mov
jge
insb
mov
jo
fwait
add
cmp
iret
arpl
dec
dec
fld
add
sbb
int
lahf
pop
or
mov
pop
mov
pop
mov
mov
bound
insl
cld
popa
lods
ficoml
push
push
shlb
aaa
push
cmp
sti
shrb
mov
test
sub
cmp
jp
sti
adc
jle
adc
lahf
push
sub
leave
std
sbb
cmp
sbb
xchg
andl
push
lret
outsl
xchg
xchg
imul
pop
jmp
inc
jle
sub
mov
jmp
das
lock
mov
or
push
pop
call
mov
stos
cmp
push
add
xorl
mov
xchg
add
aam
xor
sbb
cmp
pop
xor
push
inc
adc
pop
or
daa
push
ljmp
jmp
aam
ret
aas
dec
sti
push
mov
mov
inc
ret
out
dec
mov
lods
add
sub
push
sahf
daa
rcr
and
notl
data16
out
imul
cmp
daa
fwait
lds
sbb
ret
push
jmp
roll
stos
out
lods
and
into
inc
lcall
test
pop
jecxz
add
call
push
je
xchg
ljmp
adc
cmp
add
stos
cmpsb
adc
dec
pop
pop
sbb
adc
xchg
scas
aas
loop
pop
shr
cli
and
daa
sbb
mov
sbb
dec
imul
xchg
aaa
ret
leave
pusha
push
lods
mov
inc
lcall
mov
and
cmpsb
out
shrl
push
cli
into
cli
insl
xchg
orl
or
leave
in
jl
fisubl
sub
std
cmp
imul
out
out
dec
arpl
imul
jle
mov
and
xchg
inc
jnp
jge
jne
out
pusha
rcrl
adc
adc
aaa
cs
xchg
xorl
pop
out
dec
inc
jle
jl
and
mov
pop
das
cli
gs
push
rcrl
mov
or
out
sahf
in
mov
xchg
push
ja
mov
sahf
adc
adc
mov
jmp
cmc
mov
jl
lret
cmpsb
push
mov
pop
mov
jge
push
dec
push
lods
add
ds
push
and
inc
xchg
scas
outsb
inc
icebp
cmp
insb
hlt
insl
dec
gs
sbb
inc
fiadds
loop
inc
push
cs
lds
leave
rclb
mov
pushf
jo
out
or
xor
and
js
xor
push
and
mov
jl
psubusb
aas
pop
fsub
sub
xchg
in
sub
cmpsl
insb
pusha
dec
cmc
cmc
dec
sbb
pop
xchg
cmp
cmp
mov
mov
push
mov
add
lcall
jns
sub
mov
shlb
mov
in
jnp
mov
mov
sub
xor
aam
jno
arpl
fdivp
push
or
test
and
je
dec
jmp
jae
mov
push
sub
xor
mov
dec
inc
xchg
fisttpll
hlt
outsb
icebp
push
icebp
push
push
filds
stc
or
dec
addr16
xor
out
cmp
push
lcall
stc
sbb
xor
xchg
cmpsb
lods
imul
mov
repnz
mov
icebp
pop
test
and
int3
test
mov
mov
push
hlt
xchg
leave
jl
inc
loopne
pop
xchg
and
movsl
lods
hlt
pop
rcrb
add
inc
fisubs
add
jbe
dec
mov
pusha
mov
pop
test
cwtl
or
push
push
cmp
mov
adcb
nop
roll
lea
in
or
or
jl
dec
or
int
sbb
mov
pop
call
mov
cmp
push
cmp
repz
std
xor
push
push
pop
rol
ret
add
dec
inc
ret
movsb
sub
sbb
test
inc
cmp
out
and
outsl
or
lds
icebp
inc
testl
int
loopne
ss
lds
stos
sbb
shl
jno
int3
adc
scas
pop
inc
jge
sbb
mov
dec
jl
mov
or
sbb
push
out
sub
push
adc
push
cmp
xchg
and
popa
push
data16
loope
sub
add
xchg
inc
or
rcrl
fisubrl
mov
ds
pop
hlt
fcompl
test
inc
mov
ret
inc
int
dec
add
jbe
sub
mov
arpl
idivb
pop
imul
sbb
push
insb
es
sub
push
lods
test
mov
dec
sub
loope
sbb
or
loope
sub
xchg
mov
icebp
aas
mov
adcl
loope
cmpsl
mov
or
and
stc
xchg
adc
aas
andl
xor
jecxz
jl
addr16
shlb
arpl
int
sbbl
push
data16
mov
outsb
fisubl
xlat
test
daa
adc
jle
lock
fs
out
and
inc
cs
std
push
add
mov
push
or
mov
ficoms
lock
adc
out
dec
aaa
ret
xor
cmp
loop
out
cmp
dec
pop
in
jbe
xor
cmp
mov
repz
dec
xor
mov
cmp
into
mov
xor
push
fwait
add
daa
or
xchg
insb
lret
pop
shll
cs
ret
mov
icebp
push
xchg
cmc
stos
cmp
fdiv
mov
cmp
sub
push
and
es
add
jns
cmp
jg
push
jl
arpl
adc
jecxz
add
inc
mov
mov
out
push
mov
xorl
mov
loopne
pop
cmp
daa
adc
int3
or
call
jle
repz
dec
jb
leave
mov
and
mov
jecxz
rol
rcll
sub
adcb
xor
jecxz
mov
cmp
fistpll
jle
jl
dec
add
scas
xchg
or
mov
or
gs
mov
lds
imul
mov
lods
xchg
mov
push
out
push
sub
sbbb
jno
xor
add
fsubs
pop
dec
mov
or
outsb
sub
mov
pop
sub
out
mov
inc
inc
sahf
adc
hlt
jecxz
pop
jbe
mov
test
sbb
mov
imul
and
adc
push
jae
ret
xor
xor
push
mov
test
test
and
movl
push
inc
shl
jge
pop
fnstcw
outsl
or
mov
push
dec
rclb
inc
addr16
hlt
jge
das
and
pop
cmp
pop
popf
clc
sti
int
leave
xor
out
adc
cs
xor
push
xchg
dec
inc
das
insb
or
addr16
testb
shrb
push
adc
es
pop
inc
imulb
fcmovb
and
ret
mov
movl
iret
dec
cmp
test
dec
jg
pop
cli
push
outsl
inc
je
cld
test
xchg
adc
xor
sub
repnz
or
sbb
fists
mov
inc
xchg
stos
push
out
pop
daa
mov
lret
sbb
out
sbb
lret
xchg
jle
iret
dec
jae
rcrb
mov
sub
shll
imul
pop
adc
xchg
arpl
pop
jl
mov
pop
ja
imul
flds
fisttpl
lods
imul
int
or
push
xchg
push
jmp
lahf
mov
push
mov
push
xlat
pusha
gs
adc
mov
in
or
push
adc
mov
jno
fcomip
pop
xor
adc
jnp
sub
fwait
negb
inc
mov
cld
pop
mov
push
jo
mov
inc
mov
stc
shlb
inc
push
ret
pop
insb
dec
mov
or
add
sub
idivl
mov
cli
in
xor
mov
shlb
loopne
pop
in
icebp
mov
push
mov
jnp
pop
lcall
fimull
add
mov
test
cmpsb
jb
dec
push
in
xchg
add
cmp
cmc
insl
cmp
into
ds
jae
pop
in
add
out
sub
bound
inc
adc
dec
inc
push
out
ja
fldt
lea
xchg
pushf
ret
push
mov
in
xor
iret
lret
sbb
lods
loope
fsubp
aad
lods
testb
mov
mov
ficomps
push
mov
mov
mov
and
pop
jo
push
shr
mov
or
add
test
pop
sub
jle
and
mov
sub
rcrl
int
aaa
clc
fisubrl
cli
dec
xchg
mov
mov
pop
popa
rolb
loope
outsl
out
call
xor
cmp
test
mov
imul
data16
mov
xchg
aaa
mov
push
out
sub
faddl
test
ja
pop
lds
or
in
fbstp
mov
pushf
sub
adc
dec
pop
shll
clc
jo
pop
fimull
adc
aad
push
xchg
loopne
insl
or
adc
cli
fisubl
cld
dec
packssdw
jle
cli
fisubs
cwtl
add
lcall
lds
sub
fists
mov
mov
xor
dec
mov
or
pop
lods
and
shl
xchg
cltd
sbb
out
push
test
fs
cmc
data16
es
xor
jnp
dec
lds
inc
sbb
cmp
pop
add
inc
cmp
push
and
mov
add
xor
and
sti
push
pop
jecxz
hlt
icebp
mov
or
in
xchg
mov
push
aaa
jl
rcll
nop
test
sbb
out
sbb
dec
jns
sbb
pop
cmpsl
sbb
scas
xor
mov
adc
mov
jns
aaa
jp
inc
xor
mov
push
rcrl
cmp
pop
js
cli
push
roll
sbb
xlat
pop
cltd
pop
add
push
pop
mov
cli
sub
test
pushf
pop
adc
mov
push
mov
pop
in
loope
jg
or
pop
add
cmpb
add
mov
inc
xchg
in
hlt
fistpll
pop
stos
inc
repz
cld
inc
and
xchg
xor
shl
xor
mov
push
lahf
push
add
fdivr
dec
ds
int
push
xchg
dec
nop
or
xchg
mov
ret
add
mov
push
call
adc
sbb
pop
std
ror
ss
add
imul
loope
outsb
or
bound
insl
gs
movl
loop
push
fidivs
mov
dec
cmp
mov
mov
cltd
inc
sti
cmp
jmp
sub
outsb
aad
xor
aaa
sbb
icebp
or
pop
ret
xchg
xchg
dec
inc
and
shlb
mov
jmp
scas
enter
xor
mov
inc
test
adc
ljmp
pop
xchg
dec
pop
push
sti
cwtl
add
rcrb
stos
iret
out
lahf
movsl
es
jo
pop
dec
loopne
xor
call
ficompl
gs
cmc
in
add
sub
out
lods
ljmp
xchg
arpl
andb
and
out
cmpsb
dec
into
ds
sub
test
pop
xchg
lahf
int3
adc
pop
xchg
les
mov
pop
ds
test
cmp
jle
mov
ds
movsl
scas
inc
cltd
cld
loope
pop
dec
jp
jns
inc
sub
testb
xchg
in
xchg
jmp
or
inc
rcr
mov
xor
gs
loop
fiadds
sbb
popf
sbbb
pop
das
mov
insb
cmp
cld
lods
jbe
cmp
or
into
stos
dec
je
push
push
and
mov
cmp
jne
jmp
ret
mov
nop
adc
add
push
pop
xchg
sarb
jnp
sub
inc
mov
loop
stc
sbb
inc
mov
fsubrl
push
inc
or
pushf
fwait
inc
out
and
inc
mov
test
jae
je
inc
adc
loop
sub
pop
imul
enter
push
rclb
fadd
sbb
pushf
sbb
repz
mov
sub
adc
lret
mov
pop
test
enter
or
movsl
mov
ret
rorl
clc
fistpl
imul
je
sub
mov
cmp
outsl
cmp
test
jae
and
clc
adc
negl
or
icebp
test
lods
stos
mov
xor
out
cmc
dec
push
sahf
iret
pop
aad
sti
push
adc
out
jne
lods
add
movsb
imul
gs
leave
xchg
popf
xchg
push
cmp
addr16
push
jmp
lods
dec
repz
pop
xchg
xchg
aam
loop
pop
push
xlat
nop
ret
lahf
je
mov
filds
push
sub
lret
iret
fcompl
sub
fsubrs
loopne
data16
push
adc
mov
pushf
stos
inc
inc
cwtl
hlt
xchg
popf
fadds
movsw
adc
mov
lret
push
xchg
and
scas
and
inc
and
dec
imul
or
jl
lods
rclb
out
in
dec
shr
dec
mov
fstl
stos
add
adc
and
pop
mov
dec
jns
paddusw
into
jle
bound
push
push
sub
add
sub
cmp
jp
push
xchg
jb,pn
mov
lods
adc
cmp
xchg
addr16
lret
xchg
int3
mov
pusha
sub
lock
data16
outsl
nop
cmpl
rcll
scas
jmp
sub
xchg
fs
push
ss
push
inc
imull
mov
cmp
jnp
cli
das
scas
daa
cli
addr16
aam
std
mov
hlt
mov
pop
movhps
cli
ret
mov
cmc
aad
xor
mov
xchg
pop
or
mov
fs
cs
outsb
sahf
and
mov
sub
xor
dec
sahf
ret
jecxz
fiaddl
jl
jns
xor
jne
adc
test
je
or
lds
popa
arpl
jmp
adc
shl
sbb
dec
jecxz
out
cmp
lds
js
add
jno
popa
cmp
shll
cmc
aam
mov
jb
jbe
aaa
mov
jne
daa
imul
push
cmc
pop
push
inc
inc
add
pop
lret
mov
and
sbb
push
clc
and
add
cmp
sub
inc
rcrl
in
sub
mov
ss
jl
xchg
dec
pop
mov
fucom
mov
mov
add
push
out
or
mov
outsl
dec
cmp
fmul
dec
adc
in
test
xchg
sbb
push
or
rcll
and
leave
dec
out
add
mov
mov
push
pop
mov
les
aam
daa
jnp
mov
je
adc
sar
and
adc
sub
inc
mov
pop
sbb
aas
add
out
mov
add
fimull
sti
pop
mov
xorl
mov
lds
push
sbb
cmc
hlt
bnd
xchg
lret
outsb
pusha
and
stc
rcrl
or
sbb
fwait
push
push
mov
dec
cmp
les
call
push
mov
rcl
shll
jmp
sbb
test
jge
popa
jmp
movsl
fldcw
test
or
idivb
or
pop
mov
subb
mov
and
adc
fimull
or
mov
jmp
mov
mov
jmp
or
push
ljmp
cmova
mov
addr16
jb
fimuls
test
pop
in
mov
jb
and
repnz
stos
mov
insb
mov
jbe
or
movsb
jnp
test
loopne
mov
dec
sub
dec
xchg
jbe
adc
lea
or
popa
loope
pop
jb
int
jb
std
dec
push
das
clc
mov
stc
or
stc
sahf
or
jl
scas
sub
cmp
das
fs
shlb
movsl
inc
inc
and
dec
test
rcrb
pop
dec
mov
popa
std
fldt
into
sbb
outsb
xchg
inc
scas
mov
xchg
loopne
pop
push
inc
lods
or
pop
ljmp
mov
cld
bound
sar
int
sub
cmpsl
and
push
fstpl
cmpsb
mov
loope
fdivrl
or
stos
out
add
cmp
cli
adc
jmp
loope
lea
pop
mov
mov
adc
pop
loop
mov
sbb
movsb
or
sti
adc
div
push
insb
adc
inc
xchg
scas
and
xchg
fistpll
in
xor
shll
pop
ljmp
inc
mov
ret
jns
roll
shrl
jb
mov
out
in
mov
popf
aam
cmc
xlat
mov
orps
popf
mov
and
xor
lea
incb
sbb
popa
add
xor
rcrl
cwtl
mov
push
mov
fistpll
jmp
pop
call
mov
dec
dec
jmp
enter
in
xor
pop
lahf
pop
add
clc
xor
dec
jnp
cltd
mov
lods
testl
shlb
inc
xor
pop
outsl
push
or
cmc
leave
out
jmp
stos
push
push
or
mov
inc
pop
in
mov
js
inc
mov
mov
ja
call
stos
enter
cs
gs
int
inc
xchg
outsb
pusha
adc
lret
mov
cld
adc
and
daa
ret
idivb
fcomps
insl
cld
inc
sub
jp
movsb
das
pop
ror
and
xor
out
pop
mov
rclb
nop
cmp
gs
lods
jmp
cltd
aam
sbb
push
jl
sbb
push
data16
mov
push
jb
pop
xchg
loop
movl
int3
pop
test
xor
adc
popf
xor
movsl
in
test
lret
xor
int3
cmp
inc
mov
imul
inc
pop
inc
jecxz
mov
adc
lea
ficomps
mov
inc
dec
jmp
iret
jle
fildll
lods
mov
jbe,pn
sub
xchg
adc
es
daa
cs
out
jns
add
cld
int
or
test
lds
sahf
fadds
mov
push
ret
add
dec
stos
mov
sub
lret
aaa
insl
add
or
mov
xchg
sub
test
mov
ffree
pop
pop
push
clc
out
lret
scas
in
xchg
dec
xchg
out
push
in
jbe
lea
test
or
pop
mov
sub
sub
je
jno
mov
or
repnz
xlat
jmp
testl
call
js
push
fcomp
add
push
pop
out
adc
cmp
push
fcoms
pop
adc
pop
test
je
out
mov
adc
fmull
fistl
fmul
hlt
pusha
rcrb
add
faddp
cld
shll
sbbb
in
out
adc
jno
and
sub
inc
mov
clc
mov
cwtl
adc
out
cmp
xor
jmp
sahf
test
add
daa
xor
lods
daa
outsb
ljmp
shlb
add
mov
push
and
adc
call
pop
xchg
cmp
inc
inc
ret
aas
add
pop
adc
xor
mov
mov
cli
loope
jbe
pusha
or
lock
mov
jb
fists
in
mov
inc
fucom
ja
fadds
rcl
lahf
mov
add
push
into
fidivrl
cwtl
movsl
inc
bound
cmc
pusha
sahf
ret
je
jb
cmpsl
pusha
lods
andl
and
and
call
data16
nop
mov
pop
fiadds
xor
mov
dec
icebp
lret
arpl
cmc
cs
mov
xchg
pop
and
jbe
inc
dec
sahf
fisubrl
mov
scas
aas
dec
push
test
lret
add
sub
fstl
rcll
mov
jg
test
inc
sbb
addl
fcomps
sub
mov
lock
mov
mov
out
pop
popf
sub
push
pop
test
fsubr
imul
loop
add
lods
pop
ret
data16
sbb
xor
sbb
add
shl
in
add
dec
mov
mov
out
mov
push
jge
mov
sbb
fsub
pop
int
dec
mov
xor
push
lods
cmp
push
xor
push
lea
fldln2
addr16
pop
xor
les
rcrl
sti
cs
dec
ljmp
and
gs
push
icebp
mov
xchg
xchg
pop
push
sti
xchg
movsb
and
incb
mov
daa
mov
cltd
xor
iret
cmp
mov
ja
sub
call
fstpt
add
ror
xor
jo
hlt
pop
jle
cmp
adc
xchg
jge
jge
adc
lods
ret
push
fadds
stos
scas
std
or
or
mov
lret
data16
sub
in
fistl
mov
rcrl
stos
cmp
movsb
mov
push
or
sbb
lahf
cmp
cld
out
test
addl
icebp
push
mov
fmuls
imul
sbb
or
dec
sahf
lcall
cmc
sub
out
xor
roll
icebp
sub
sbb
cmp
adc
jmp
rcl
loope
adc
or
xor
ss
roll
popf
sbb
pop
adc
lods
or
sahf
sbb
push
loopne
sbb
movsl
jo
lret
and
aas
and
pop
ljmp
add
mov
xchg
lret
imul
jo
test
rcrl
fimull
inc
pop
mov
jnp
sahf
sub
xchg
push
add
pop
movsb
xchg
push
lea
mov
ljmp
stc
xor
sbb
roll
into
dec
or
popa
push
jb
dec
mov
mov
jl
leave
lea
sarb
mov
jnp
xor
xchg
je
in
push
xchg
pop
mov
inc
dec
call
xchg
call
sbb
mov
out
scas
sbb
jb
jne
cmpb
pop
pusha
or
jo
add
lock
out
dec
ds
popf
or
add
or
lret
sbbl
jo
icebp
lods
pop
pop
push
adc
out
fnstenv
pop
and
add
fsts
xor
outsb
int
push
mov
subb
leave
pop
dec
cmp
xor
pop
sbb
xor
call
popa
loope
jg
jl
adc
xor
icebp
mov
out
repz
pop
testb
or
mov
mov
mov
cmpsb
cli
jne
mov
jmp
test
fisttpll
mov
js
push
cmp
xchg
cltd
jb
add
sub
outsl
mov
mov
mov
push
jl
mov
in
mov
push
lods
pusha
xor
mov
or
in
test
jg
xor
add
insl
jno
outsl
dec
cld
mov
sbbb
fnstsw
pop
push
xlat
push
adc
adc
loope
test
adc
out
sub
pushf
jne
push
and
sub
jne
cmp
pushf
push
push
xor
in
cmc
mov
inc
push
xchg
movsl
mov
pop
pop
mov
xchg
cmp
addb
scas
mov
add
pop
ljmp
out
jle
or
fwait
pop
inc
jmp
mov
iret
mov
or
ret
iret
fwait
push
scas
sbbl
nop
mov
addr16
adc
mov
jge
ss
fcoms
xor
insb
mov
push
repnz
xor
sub
inc
sahf
aaa
inc
pop
flds
pop
inc
sbb
lea
ja
test
hlt
out
mov
jmp
pop
jp
cmp
push
lds
mov
pop
push
push
sarb
pop
rcl
loope
cmp
mov
in
xor
jne
stos
inc
cs
sti
push
mov
fstpt
shl
je
clc
ljmp
cmp
stc
fcomps
adc
test
dec
mov
or
push
iret
scas
lret
inc
aas
sbb
xchg
jl
mov
vmwrite
jb
pusha
ret
out
mov
adc
mov
and
mov
xchg
mov
jge
adc
add
scas
mov
fcom
and
scas
cli
sub
arpl
pop
lahf
jnp
cmpsl
jecxz
jno
enter
out
inc
js
push
pop
ret
int3
cmpb
lds
test
pop
pop
dec
ret
sub
sbb
loope
mov
mov
xchg
lcall
adc
mov
imul
aad
mov
js
leave
lods
mov
xchg
leave
ret
inc
lods
and
loope
or
lods
xchg
adc
jno
ret
call
leave
push
stos
mov
xchg
mov
or
fnsave
outsl
or
clc
add
imul
sub
jl
loopne
sub
xchg
push
stc
inc
xor
mov
xor
jp,pt
mov
nop
mov
mov
shll
adc
test
jbe
inc
pop
mov
fwait
es
jmp
subb
dec
sub
cmp
mov
test
lcall
xchg
mov
test
jnp
mov
jo
pop
add
pop
lret
add
divl
sahf
cmp
ja
scas
xchg
mov
fs
lods
cmp
jmp
lock
aam
jmp
pusha
outsb
sbb
jecxz
test
inc
inc
dec
pop
jecxz
and
jp
xor
arpl
dec
add
pusha
shrb
cmp
pushf
cmp
lods
sub
xchg
insl
and
into
aas
scas
lods
sbb
repz
pusha
pop
and
mov
lret
jns
stos
cmc
lds
sbb
lock
popa
arpl
push
or
rcrl
xchg
pop
leave
xchg
lret
pop
ljmp
sahf
push
pop
pop
cli
adc
fdivrp
adc
adc
push
es
daa
inc
xchg
jno
xchg
je
es
lods
push
sbb
fbld
jmp
pop
js
outsb
hlt
push
imul
adc
dec
aam
xchg
mov
mov
aaa
cli
sbb
sub
xchg
pop
fcmovbe
fistps
sbb
mov
test
fs
int3
adc
mov
orb
pop
jne
mov
dec
shll
mov
ds
sbbl
das
popa
shr
or
mov
xchg
jb
jp
sbb
and
sub
setg
push
inc
pop
jae
jno
push
data16
or
adc
sub
dec
pop
cmp
aam
inc
icebp
jp
mov
push
in
or
or
mov
mov
inc
in
pop
mov
mov
cmp
jg
ja
mov
int
les
push
test
mov
mov
push
xchg
addr16
add
dec
stc
xchg
pop
scas
push
hlt
insl
outsb
icebp
mov
mov
jns
mov
mov
scas
cmc
lret
add
sbb
jmp
nop
adc
ss
and
xchg
imul
inc
jmp
xor
rorb
add
xchg
inc
out
or
ret
sub
jbe
repz
sbb
xchg
les
loope
cltd
cmp
dec
addr16
jo
out
inc
add
inc
xchg
lahf
xchg
lods
mov
push
int3
test
ret
add
inc
das
iret
fiadds
dec
inc
xchg
cmpsb
push
into
jno
xchg
xchg
jmp
sbb
cltd
fists
fcoml
addr16
scas
sbb
cmp
inc
jne
popa
jo
rcl
mov
fnstenv
out
cmp
adc
push
in
xchg
mov
and
cmc
or
jmp
lock
or
inc
mov
loopne
cmc
arpl
dec
dec
or
rorl
mov
push
xchg
call
in
push
out
jne
in
push
dec
mov
fadds
dec
ljmp
lea
jle
pop
pop
pop
lea
paddsb
pop
cmp
jecxz
out
dec
mov
in
mov
mov
scas
adc
cmp
roll
add
loope
mov
jno
push
popa
inc
xor
fcoms
push
test
adc
in
mov
jne
int3
pop
outsb
jae
adc
scas
out
adc
jnp
sub
inc
fwait
rol
sub
test
sub
les
out
cmc
rclb
int
das
sub
notb
jmp
lahf
xor
jmp
add
or
mov
mov
rolb
sbb
jl
jl
mov
inc
xor
add
mov
pop
ret
std
add
lods
sbb
dec
mov
xor
and
mov
xor
cmp
sub
jnp
insb
inc
add
and
jecxz
jle
hlt
cmp
jl
add
sbb
cltd
add
imul
test
inc
cwtl
or
ficoms
cmp
loopne
gs
jl
pop
jnp
stos
fldenv
lcall
sub
mov
rorl
popa
ret
pop
mov
xchg
je
insl
sbb
pop
inc
ret
mov
push
sbb
inc
negl
mov
clc
dec
cltd
lods
sbb
enter
sahf
mov
push
nop
mov
mov
mov
cld
negl
fs
or
call
std
popf
push
mov
push
insl
inc
inc
jle
mov
addl
pop
in
dec
jne
lock
sti
mov
mov
cmp
adc
dec
cwtl
jnp
push
xor
dec
or
adc
imul
jae
out
mov
dec
mov
inc
sahf
rcll
pop
daa
les
out
push
mov
repz
inc
nop
call
hlt
mov
xchg
jbe
inc
dec
out
insb
out
xor
or
outsl
shr
push
hlt
enter
call
mov
push
hlt
jecxz
lods
mov
and
push
rcrl
subl
and
dec
lahf
mov
adc
sub
dec
insl
push
mov
shll
jb
sbb
add
lea
mov
movsl
cmp
xor
jmp
rep
icebp
mov
leave
push
es
stc
cmp
ror
ljmp
or
jns
add
add
or
dec
xchg
sahf
sarb
jmp
pusha
cwtl
jg
xchg
pop
orl
in
dec
add
mov
sbb
lea
mov
pop
std
mov
mov
loope
mov
cmpsb
lret
loopne
imul
and
lcall
aad
xchg
out
dec
adc
cmp
imul
mov
pop
pop
ja
xchg
in
hlt
dec
pusha
cmpsb
mov
lret
or
sub
pusha
adc
pop
sub
and
icebp
imul
xor
push
mov
inc
jl
adc
xor
js
mov
stos
xchg
xor
adcl
test
xchg
pop
out
mov
jge
pushf
cmpb
xor
scas
fcompl
sub
test
fidivrs
insb
pushf
lret
dec
xor
clc
pop
lcall
mull
pop
pop
mov
sbb
xchg
xchg
or
orb
loope
mov
lret
repz
dec
je
sarb
pusha
jecxz
es
mov
mov
dec
mov
add
jl
or
push
fstpl
call
push
cmpsl
inc
mov
cmp
incb
add
aas
cmp
push
mov
hlt
ds
jns
adc
shl
out
xchg
jo
fistps
pop
fnstenv
inc
jmp
andl
mov
stos
adc
dec
inc
lret
mov
outsl
add
add
aaa
stos
mov
jg
iret
or
repz
cmp
adc
les
dec
adc
jle
pop
cli
cmpw
das
mov
push
push
mov
movsl
add
inc
mov
test
or
out
add
pushf
lds
mov
jo
stos
inc
fmull
stc
fisubl
sbbb
mov
and
push
cld
cmp
imul
inc
sub
dec
or
sbb
addl
xlat
jne
add
ret
jns
imul
popa
jge
scas
jl
mulb
jae
shrl
enter
inc
lods
inc
inc
and
cmp
fadds
xchg
mov
fidivrl
inc
sub
add
movb
add
jo
in
mov
je
imul
loop
sbb
mov
fs
inc
movsb
mov
inc
std
loop,pt
jae
cli
push
add
add
adc
jmp
insl
test
outsb
mov
test
jno
fsts
xchg
dec
pop
sbb
jno
jl
dec
cwtl
sbb
test
mov
rcrb
inc
les
popf
and
pop
or
lds
test
sub
mov
push
aas
lods
std
data16
clc
and
lods
add
xchg
testb
fwait
cld
xor
jns
insb
dec
sbbb
stos
mov
cwtl
cmp
rorb
stmxcsr
push
or
lods
pop
mull
sbb
sbb
fs
sbb
mov
in
pusha
inc
jo
xor
clc
lcall
inc
mov
sub
popa
adc
mov
ds
loope
call
and
cmp
iret
dec
pop
test
in
iret
scas
adc
jo
push
rcll
adc
sub
sbb
ds
shl
inc
xchg
mov
xchg
pop
add
popa
fadds
adc
mov
xchg
pop
pushf
and
or
cmpsb
jns
loope
ja
pop
loopne
inc
nop
mull
clc
mov
insl
aaa
inc
shl
lcall
data16
xor
out
sub
dec
xor
pop
mov
nop
outsl
rcr
adc
lahf
jns
sahf
and
inc
nop
dec
jne
sbb
xorb
lret
push
dec
addr16
iret
cmp
xchg
sti
pop
xlat
movsl
or
and
test
arpl
cmpsb
lahf
jecxz
pushl
std
pop
dec
push
cmp
fisubrl
xchg
lods
cli
mov
inc
and
fstps
jl
dec
test
call
mov
jnp
xchg
jbe
fldenv
and
mov
mov
jbe
loope
daa
jl,pn
mov
xchg
ljmp
fsubrs
jae
mov
mov
pop
lock
xor
inc
xor
ss
js
stc
lret
adc
xor
pop
push
insl
in
push
xchg
sub
fwait
sub
sub
shlb
adc
push
push
pop
ret
xchg
fadd
popa
push
inc
and
fmuls
xchg
inc
stos
cmc
outsb
aad
test
push
jae
addr16
in
ljmp
pop
push
pop
xchg
adc
ret
fidivrs
jl
es
xor
testb
cmpsb
subl
fs
cmp
in
lret
pop
iret
dec
add
sar
in
ficoml
mov
add
xchg
test
icebp
mov
aam
inc
pop
inc
cmp
mov
in
sbb
clc
push
dec
fs
xor
stc
cbtw
test
jb
xchg
push
sbbl
jp
insb
cmc
adc
jge
push
ret
xor
cltd
andb
push
out
xor
jg,pn
mov
addr16
fimuls
nop
ret
xor
ja
xchg
inc
pop
jle
ds
jne
adc
fdivs
or
mov
lock
push
rcll
in
sahf
jno
into
das
inc
les
sub
testb
cmp
lock
sbb
imulb
in
mov
pop
pop
outsl
fadd
push
outsl
push
test
sub
pop
lock
xchg
add
lahf
enter
rcl
mov
mov
sbb
xlat
sub
loop
mov
push
lds
inc
push
push
sub
adc
repz
cmpsb
ljmp
clc
stos
out
jg
cmp
xor
dec
loopne
mov
sti
push
subb
mov
incl
add
stos
xchg
add
jo
rorl
int3
in
fadds
inc
ds
and
mov
cmc
lea
fimull
xchg
dec
shlb
outsl
cltd
inc
pop
mov
jb
int3
loop
mov
sahf
jecxz
fbstp
fists
xor
jns
pop
dec
or
stos
data16
sbbb
jg
add
mov
sbb
push
push
pop
mov
xor
es
lahf
out
mov
fldl
mov
lods
test
adc
popf
loop
test
out
and
inc
xchg
mov
jae
jmp
mov
lret
cwtl
shlb
gs
inc
and
mov
push
insl
adc
mov
fsubs
inc
adc
sub
pop
outsb
adc
pop
jecxz
inc
sbb
xchg
lahf
or
push
push
adcl
pop
stos
cltd
mov
push
movsb
mov
mov
dec
jl
insl
sub
daa
pop
cld
dec
xchg
pop
shl
fldenv
in
dec
jb
mov
dec
out
adc
lods
sub
inc
pop
push
popf
mov
xchg
stos
fistpl
dec
leave
sbb
jmp
aad
popf
inc
aaa
jne
push
lock
mov
popa
fidivrl
sbb
mov
dec
jmp
ljmp
sub
mov
or
sti
test
sbb
sbb
adc
sbb
xchg
jge
jbe
inc
sbb
int3
icebp
jns
outsl
loope
fs
sub
xchg
mov
call
in
push
xor
mov
push
push
cld
sahf
fbstp
dec
scas
rcl
adc
inc
adc
testb
gs
aam
sarb
mov
add
stc
sbb
mov
add
js
xor
enter
loope
lds
fimuls
sub
push
negl
lea
xor
or
xchg
mov
dec
push
cmpsb
lahf
inc
nop
stos
push
sbb
xchg
mov
cwtl
cmp
daa
or
jbe
movsb
mov
xor
jnp
mov
bound
loopne
inc
fldt
int
adc
mov
mov
mov
cmp
dec
and
neg
dec
daa
and
pop
mov
gs
jne
push
das
add
pushf
mov
xchg
adc
adc
sbb
lret
clc
sbb
mov
stos
das
out
repz
xor
push
int
push
push
dec
mov
decb
ja
inc
in
and
mov
jo
pop
add
push
je
jg
and
lock
adc
mov
xchg
dec
jne
xlat
xchg
xchg
push
es
addb
mov
cmp
loope
rcr
js
push
mov
add
lahf
or
ret
and
scas
push
and
scas
fcoml
pop
or
pop
inc
imul
lods
add
rcl
es
jle
test
pop
rolb
clc
shl
in
push
into
inc
pop
cmp
ret
push
push
clc
dec
inc
push
mov
push
test
push
fsubr
ret
cmp
dec
cld
mov
movsl
loope
test
aas
pop
inc
mov
stc
sub
or
stos
out
sbb
xor
mov
rcll
sarl
sbb
aas
pop
frndint
jns
pushf
jnp
nop
xor
push
fstps
sub
push
pop
popf
loope
xor
mov
call
in
pop
lea
imul
sub
popa
andb
stc
orl
cmpsl
sub
loope
arpl
ss
out
jmp
xchg
arpl
mov
pop
incb
test
daa
cmp
dec
adc
or
push
ret
in
mov
dec
xor
int3
mov
gs
dec
in
cmp
sbb
out
fdivs
add
call
mov
adc
sbb
in
std
out
dec
mov
mov
add
imul
xchg
sub
aas
push
jnp
jno
cli
xchg
mov
mov
jmp
popa
jecxz
add
adc
mov
aaa
test
dec
push
lock
aam
je
sahf
dec
out
mov
cmp
jp
sub
push
push
jp
jo
mov
in
sub
imul
ficoml
mov
xchg
push
out
clc
jne
xor
into
sub
lahf
inc
lock
mov
adc
fucompp
loop
and
subb
cmp
add
xchg
mov
mov
jmp
mulb
jns
inc
fdiv
and
inc
movsb
add
cli
add
fdiv
or
add
sarl
stc
add
adc
mov
fsubrl
loopne
js
js
or
ds
shrl
sub
xor
mov
adc
bound
repz
jge
dec
mov
sub
cwtl
mov
sbb
jne
outsl
and
out
stc
push
ja
add
lret
sub
jle
rorb
hlt
lret
mov
pop
clc
and
pop
dec
jle
das
and
in
xor
fdivrl
add
push
imul
inc
insb
lea
mov
ss
push
test
test
lods
mov
loopne
notb
fwait
sub
lahf
push
stos
pop
mov
js
push
dec
fmuls
lods
jg
xchg
sub
inc
xchg
je
push
ret
cmpsl
leave
cld
orl
sbb
loope
dec
lods
mov
jae
nop
jmp
jle
push
outsb
je
xchg
cs
fdivl
or
cs
inc
pop
jns
shll
inc
pop
ja
add
popl
mov
jge
mov
cmp
mov
pusha
insb
push
repz
popa
mov
push
xlat
jmp
xchg
outsl
je
mov
iret
mov
test
sti
pop
cld
mov
cmp
scas
adc
xchg
mov
int
stos
ja
mov
inc
or
addr16
pop
jp
pop
popf
cmc
sahf
icebp
sub
popa
scas
sahf
int3
lods
scas
adc
cmp
jl
stc
in
inc
daa
and
je
add
into
mov
into
cmpsb
xchg
fnstcw
insl
scas
aad
pop
inc
dec
mov
push
fidivrl
xor
or
hlt
sbb
repnz
ss
pop
or
cmp
in
adc
cmp
call
insb
movsl
pushf
imull
cmc
jmp
pop
push
pusha
imul
mov
add
clc
icebp
loope
lods
dec
adcl
mov
or
and
jmp
adc
cld
xor
jb
movsb
cmp
sbb
jp
setne
in
mov
das
sar
jmp
enter
insb
fistl
lods
mov
in
adc
lret
addb
shll
arpl
sbb
call
mov
sbb
add
sbb
mov
inc
lds
add
addr16
stos
xchg
mov
mov
loopne
aaa
jge
fidivrl
mov
je
xchg
je
mov
mov
sub
inc
xchg
enter
mov
dec
ret
out
push
pop
sti
jle
add
push
and
push
adc
pop
orb
ret
mov
ljmp
jnp
pop
ljmp
dec
push
sub
inc
mov
mov
fbstp
jne
mov
and
mov
and
push
arpl
add
lods
xchg
pop
mov
mov
xor
push
ret
mov
pusha
jp
mov
into
sbb
call
jmp
push
sti
dec
add
jmp
ud0
bnd
inc
or
cmp
sbb
js
adc
xchg
mov
inc
loopne
push
shr
sbb
shr
adc
and
test
fs
xchg
decl
hlt
aaa
add
jnp
pop
add
es
stos
inc
jmp
in
arpl
das
sub
xor
cs
mov
jb
jo
mov
mov
mov
adc
outsb
and
mov
or
mov
sub
push
mov
out
fcmovne
imul
int3
push
lods
cmp
pop
mov
cli
sti
pop
aam
fdivs
cmp
and
jg
scas
inc
sahf
xchg
test
jbe
int3
xchg
jne
aaa
xor
sbb
cmpsl
lea
outsl
test
pushf
push
inc
pushf
cs
cmp
ds
mov
push
and
xor
pop
into
push
cmp
sub
rorb
movsb
mov
data16
cmp
and
mov
pushf
push
repz
dec
test
pop
and
fnsave
sub
iret
mov
xorl
call
imul
hlt
addr16
cmp
jno
mov
std
add
orb
push
inc
pop
pop
test
rcll
cli
cld
lea
sub
pop
mov
xchg
fstps
xor
push
jecxz,pt
add
dec
mov
cmp
punpckhbw
xor
scas
add
arpl
and
add
and
cld
cmp
pop
fidivl
xchg
je
addr16
fstpl
dec
nop
mov
pop
aam
clc
decb
test
jbe
pop
add
add
or
je
add
pop
and
jle
pusha
lock
push
cmp
and
shl
mov
rolb
mov
inc
lock
ljmp
enter
jns
mov
test
incl
inc
das
mov
pop
pop
or
mov
in
orl
push
cmp
iret
jmp
nopl
jl
outsb
cmp
icebp
add
cmp
push
es
sub
popf
jbe
pop
jmp
in
push
and
inc
push
add
clc
cmp
lret
adc
lock
mov
jns
mov
aas
imul
push
jns
cmp
dec
cmc
in
xchg
pop
xchg
jns
inc
jno
gs
pop
adc
cltd
inc
imul
cmp
push
nop
mov
push
les
dec
hlt
mov
xor
pop
loop
jecxz
mov
sub
movsb
loop
sbb
ret
hlt
ljmp
movsl
sahf
mov
fxch
sbb
push
push
xor
xchg
pop
push
test
jecxz
in
mov
mov
mov
push
add
or
cmp
inc
dec
mov
inc
cmpsl
in
les
cmc
subb
mov
adc
scas
push
in
pop
jmp
cli
fadd
and
hlt
push
movsl
rclb
jecxz
orb
cld
fcoms
fimull
jnp
divb
sarb
mov
fisubrs
mov
movsb
pop
leave
movsl
fwait
mov
leave
fidivrl
pushf
mov
mov
je
and
jne
inc
sti
movsb
xor
jnp
es
loopne
xchg
push
jnp
mov
cmpsb
inc
bound
and
jmp
mov
mov
loopne
pop
cmp
test
mov
or
faddl
pop
cwtl
dec
nop
test
push
xchg
call
aas
je
in
into
or
clc
pop
mov
ss
clc
push
sbb
ds
cmp
shrl
xchg
xchg
cld
mov
pop
in
add
loop
xchg
aas
movsl
jo
and
divb
movl
xor
je
addb
xlat
fidivrs
into
mov
je
sub
and
enter
pop
mov
mov
in
ret
ja
outsb
and
aam
jns
pushf
mov
fbstp
adc
sub
jns
pop
adc
cltd
ret
cmp
mov
mov
lret
lock
jns
or
int3
in
dec
arpl
jo
or
inc
jl
fdivl
jnp
lea
add
lcall
cld
into
sti
pop
fcom
cld
pop
mov
sti
not
inc
pop
test
cmc
cwtl
pop
sub
cmp
imul
ss
xor
data16
mov
xchg
jb
dec
sarl
pop
aam
dec
push
out
fstpl
mov
clc
xchg
enter
ds
fnsave
push
dec
shll
lock
adc
cmc
jp
dec
cs
divb
pop
mov
jge
xorb
xor
data16
push
ret
push
test
add
push
mov
dec
subl
mull
lahf
inc
call
lds
push
loopne
push
icebp
loopne
fcmovbe
jns
stc
or
xchg
push
lods
jno
filds
jno
je
std
xlat
push
in
cmpsb
clc
jecxz
cmp
call
aad
inc
ret
adc
push
cmp
push
insl
mov
shr
movsb
repz
lret
dec
push
mov
pusha
or
adc
aaa
pusha
mov
leave
jae
dec
aad
cltd
xchg
sbb
das
ficompl
arpl
cmpsb
in
mov
dec
jo
scas
insb
mov
sub
xchg
enter
inc
lods
lock
or
fists
adc
jo
sbb
sub
outsb
jecxz
lds
or
mov
sbb
faddp
mov
dec
fwait
loopne
imul
cmp
fstpt
rol
popa
mov
inc
test
xlat
rorb
xor
into
fisubrs
add
jge
out
cmp
sub
popf
lahf
pop
jg
movsl
xchg
int
ja
in
mov
inc
mov
pusha
xchg
xchg
lcall
dec
and
rcr
mov
test
mov
test
push
clc
dec
dec
inc
or
or
dec
push
mov
in
sahf
pusha
add
rcll
scas
pop
pop
dec
mov
inc
mov
push
pushf
sarl
sub
cmp
sbb
ret
dec
push
std
in
mov
outsl
daa
mov
mov
adc
jae
mov
mov
sahf
jp
pop
bound
lock
adc
in
cmp
icebp
ret
addr16
jmp
cmc
ljmp
and
push
clc
test
popf
add
or
push
jle
fsubrs
inc
int3
mov
xor
aad
adc
pop
popa
fiaddl
in
shlb
hlt
lahf
push
dec
sub
in
push
cltd
jecxz,pt
bound
add
call
dec
cmpsb
lea
mov
shll
and
jmp
fcoms
int3
mov
loopne
test
cmovns
push
imul
and
in
pushf
sahf
dec
adc
mov
and
jae
ljmp
xorl
jg
jne
dec
sub
push
or
xor
loopne
or
iret
sbb
xor
cmp
stc
sbb
inc
pop
leave
outsb
inc
push
push
jae
aaa
adc
test
sbb
mov
adc
mov
add
jecxz
in
movsl
dec
aam
xor
out
enter
movsl
popf
out
out
mov
rclb
dec
xchg
ror
call
xchg
addl
push
or
mov
jl
int3
movsl
mov
jo
or
movsl
jno
outsl
cwtl
repnz
scas
push
fstpl
cld
jnp
fsts
mov
addb
add
xchg
xchg
das
xlat
push
sbb
mov
and
lock
jne
out
or
lcall
dec
xchg
dec
add
push
popa
add
imul
sbb
scas
jo
aad
cmp
sarb
inc
cli
dec
leave
jb
pusha
pusha
or
outsl
rcrb
inc
clc
pop
cmc
lods
neg
mov
push
mov
sbb
popa
adc
sub
dec
lea
add
xor
andl
xor
push
lock
out
cld
cmp
and
enter
lcall
addr16
xchg
aas
cmp
xor
sbb
mov
mov
inc
lods
rorb
call
xchg
lods
insb
int3
jge
mov
sahf
add
adc
xor
add
hlt
xchg
enter
ss
or
shl
ss
nop
rclb
fcomps
ret
sub
cmp
cmp
xchg
add
hlt
cli
cmpsb
out
pop
jns
inc
mov
cli
xor
arpl
sub
and
sub
push
push
into
leave
adc
and
jns
jae
mov
mov
rclb
outsb
pop
clc
dec
scas
add
jg
arpl
push
push
fwait
lret
mov
in
imul
and
lds
icebp
push
xchg
mov
pusha
leave
xchg
lods
add
imul
ss
cmp
lods
adc
movsl
mov
data16
enter
add
mov
in
fwait
xchg
cmpb
mov
mov
lahf
sahf
test
lods
pop
jae
and
js
inc
or
insb
in
aam
bound
mov
push
jl
in
outsl
xor
dec
pop
and
ljmp
mov
xor
jge
dec
mov
add
pop
imul
inc
cmp
mov
andb
jmp
rclb
je
pop
ret
jp
ja
insb
imul
and
es
xchg
js
mov
mov
mov
scas
sub
pop
out
stos
xchg
mov
orb
xchg
push
jecxz
xor
out
pop
or
iret
pop
rorb
jmp
xor
adc
sub
fwait
cld
insb
jae
insb
fs
popf
adc
xor
dec
sbb
pop
mov
cmpsb
repz
sti
nop
test
sti
mov
cmp
rorb
xor
xchg
push
or
dec
lret
addl
mov
xor
shl
cld
push
sub
jp
xchg
out
dec
xor
jmp
lea
test
pop
pop
mov
cmp
shll
enter
addr16
das
mov
adc
xchg
sub
fcomp
rcll
xor
push
or
mov
sbb
mov
jp
imul
push
scas
pushf
clc
inc
mov
adc
sub
pop
pop
loopne
arpl
adc
jg
mov
cmp
xchg
or
rorb
aaa
sub
shl
into
fstpl
repnz
mov
adc
loope
and
mov
imul
and
jp
nop
mov
stos
cmpsb
sub
xchg
ljmp
mov
and
outsb
pop
das
and
xchg
jge
mov
enter
push
inc
outsl
das
inc
and
sub
into
adc
mov
mov
mov
scas
and
add
xlat
das
sti
sbbl
aaa
sbb
push
mov
jle,pn
imul
out
inc
imul
pop
sbbb
add
dec
mov
inc
sub
mov
xor
add
aas
mov
jbe
scas
popf
add
jns
mov
pop
gs
ffree
pusha
and
inc
pop
xchg
adcl
fst
xchg
push
out
pop
and
or
ret
cs
add
fistl
setge
sti
mov
adc
xchg
cmpsb
jns
jae
roll
mov
nopl
ss
ss
fs
cmpsl
shlb
imul
add
cli
or
add
mov
xchg
lcall
test
notb
cld
lret
not
xchg
popf
nop
jno
inc
not
pop
cmc
icebp
test
cs
xchg
push
adc
in
std
jp
imul
cmp
adc
mov
jge
jp
fidivrs
aaa
into
adc
scas
fsubs
mul
push
movsb
mov
mov
add
xor
and
push
mov
or
cmp
push
jb
jno
or
mov
aad
pop
cmp
sub
negl
sub
push
std
xor
push
cmp
add
jbe
mov
aas
aad
sbb
xor
imul
dec
enter
sbb
jb
rcrb
movsb
add
xrelease
sbb
xchg
push
sti
negb
mov
fnstenv
testb
xchg
sub
push
loope
shlb
xrelease
scas
scas
sbb
add
fsubl
mov
aam
adc
dec
jg
mov
inc
jno
mov
or
lds
pop
orl
mov
push
and
in
sbb
mov
push
xchg
fsubs
pop
fcom
sbb
cmpsl
cmp
test
xchg
xchg
dec
pop
lahf
shll
ljmp
mov
cwtl
pop
fnstenv
sub
jns
push
sbb
in
fs
out
mov
add
and
xor
sahf
mov
cmp
jge
jmp
mov
faddl
lock
xchg
scas
pop
xor
xchg
adc
inc
mov
iret
push
inc
fisttps
cld
movsb
stos
pop
pop
mov
mov
and
and
lock
pop
xchg
sbb
mov
adc
pop
adcb
pop
addb
push
inc
daa
aaa
pop
cltd
pop
mov
mov
mov
pop
push
jb
outsl
in
adc
jae
mov
sti
mov
ja
testb
cmp
push
lcall
and
ljmp
outsb
daa
loope
pop
inc
push
sarl
pop
push
xor
ljmp
leave
xor
ja
lock
sbb
mov
jge
xor
jge
pusha
fsubrl
add
push
fnstsw
fs
and
xor
cmpl
lea
repnz
hlt
arpl
mov
repz
mov
call
insl
dec
add
and
hlt
adc
push
aad
shll
add
mov
pop
inc
sbb
pop
pushl
mov
lock
mov
sbb
pop
jmp
sbb
push
into
aaa
mov
xor
sarb
inc
sbbl
in
ficomps
mov
popfw
mov
push
pop
lret
or
call
mov
movsl
xchg
repz
dec
rorl
popf
push
les
lret
pop
test
test
imul
cwtl
mov
dec
es
xchg
mov
mov
lret
add
icebp
pop
js
dec
mov
or
xor
pcmpgtb
inc
es
fnstsw
and
repz
mov
cmpsl
movsb
aam
jns
fcomip
imul
int
pusha
std
aas
pop
and
inc
fwait
push
mov
adcl
dec
aas
mov
popf
callw
jno
imulb
mov
inc
mov
lahf
lods
inc
lahf
scas
fisttpl
dec
dec
lret
dec
jb
nop
pop
cwtl
cwtl
mov
inc
pop
xor
push
js
call
je
aad
fistpl
push
cmp
stc
or
xor
xor
cli
mov
jl
or
ljmp
pop
xchg
add
fstl
or
xlat
test
nop
test
lock
das
lods
pop
mov
fisubrl
lret
mov
mov
dec
xor
mov
mov
pop
daa
sub
fwait
lds
mov
out
ja
add
outsl
add
pushf
sbb
and
push
mov
jle
stos
je
jl
pop
loope
cmp
jge
sub
jecxz
xchg
cmpsb
sarl
mov
xor
push
insl
movsb
xchg
and
add
nop
mov
xchg
add
sub
xchg
cltd
je
sbb
shlb
sti
jb
mov
sub
mov
push
frstpm(287
pop
add
lahf
add
or
mov
insb
outsb
rolb
movsl
pop
jno
dec
fildl
adc
aaa
andb
aas
test
testb
inc
inc
jo
lods
push
sbb
and
jo
xlat
fmul
inc
lcall
rcr
fs
aas
outsb
loop
or
add
mov
jo
and
jg
fsubrs
iret
nop
or
jle
push
inc
shlb
cmp
dec
push
mov
push
ss
aam
jae
xor
out
and
fwait
lods
cmp
addr16
movsl
mov
bswap
add
push
jl
push
dec
dec
rclb
pop
add
mov
and
std
insb
mov
stos
xchg
xor
xor
popa
lret
in
sti
inc
stos
out
push
loop
jmp
subl
test
aas
mov
jbe
cmp
js
scas
push
and
bound
cmp
xor
call
adc
dec
jb
ret
sub
pushf
popa
sarl
mov
pop
imul
bound
inc
out
adc
aaa
add
ret
jge
out
popf
cmp
loope
cltd
icebp
push
pop
sub
out
or
test
push
xchg
jecxz
cmp
inc
jmp
or
mov
movl
mov
mov
icebp
sbb
pop
fsubrp
jbe
dec
jge
pop
cmp
and
roll
or
lea
in
in
jp
loopne
es
jp
inc
je
lret
stos
xor
rcll
aas
ss
adc
dec
sbb
fcmovne
aad
dec
rcrl
rcll
xchg
ret
pop
insb
jmp
cmp
sub
push
jp
cmp
daa
ret
sarl
inc
xchg
testb
loopne
dec
mov
clc
mov
xor
icebp
sub
sbb
inc
scas
je
pop
sub
aam
fwait
push
push
adc
push
sbb
std
divb
inc
mov
fdivr
push
sti
inc
xchg
icebp
cmp
js
pushf
cmp
adc
popa
xlat
sub
push
or
mov
push
repnz
xchg
xor
cltd
js
xor
mov
jno
mov
ficompl
mov
mov
imul
and
arpl
pop
daa
jae
ret
in
jmp
add
sahf
jns
aam
mov
popa
xorb
lea
dec
out
lods
lock
loop
arpl
insl
out
arpl
bound
adcl
xchg
dec
clc
fmul
mov
popf
pop
pop
lock
gs
sbb
jo
mov
xchg
dec
jg
shlb
xchg
mov
xchg
arpl
jno
lcall
mov
ret
mov
add
repz
sarb
loope
les
aas
andb
push
jmp
int
cmp
fxch
mov
mov
out
mov
lods
xor
stc
movsb
dec
inc
dec
mov
test
add
cmp
test
iret
add
mov
push
sub
sbb
sbb
jge
or
das
aas
push
into
stos
loope
sub
adc
add
jge
enter
in
cmp
sbb
loop
sbb
subl
push
arpl
push
cmp
jae
cmp
rolb
xor
lahf
les
scas
leave
pop
sbb
jmp
in
les
sahf
mov
xchg
cmpsb
test
jp
adc
pop
pop
in
ja
mov
neg
sub
cmp
out
add
jno
lahf
imul
pop
mov
lahf
stos
mov
pop
fxsave
add
ficoms
dec
jae
bound
jo
add
push
jno
clc
movsl
dec
fistpl
jp
pop
mov
add
rolb
jo
mov
mov
and
sub
leave
jg
adc
hlt
lret
rcll
in
hlt
inc
out
fistpll
aad
out
push
lahf
sub
sbb
xchg
cmpb
and
jle
addr16
or
icebp
lock
mov
es
arpl
addl
shlb
mov
sub
orb
lcall
mov
imul
push
test
loop
enter
je
imul
jmp
sbb
aad
in
pop
mov
movsb
rclb
mov
jbe
jecxz
jecxz
jp
mov
push
fidivrs
dec
lods
mov
push
pop
lcall
addr16
jle
dec
imul
fdivrl
mov
inc
jmp
add
rolb
jo
out
int
mov
in
xchg
cmpl
sub
iret
cli
jne
push
test
xchg
loope
in
xchg
dec
mov
pop
stos
mov
mov
jl
ret
iret
mov
inc
push
push
loope
mov
negl
je
or
ss
ds
inc
fs
daa
movsl
into
rolb
iret
xchg
gs
dec
cmpsb
sub
pushl
in
mov
pop
mov
pop
lahf
repz
cmp
mov
lods
pop
mov
mov
mov
xchg
or
push
xor
in
insb
xchg
xchg
or
ljmp
xchg
cltd
scas
jecxz
jne
pusha
je
les
xchg
jno
loopne
out
mov
xor
push
das
ljmp
xor
push
frstor
adc
fcomps
bound
rcrb
push
mov
imul
mov
fwait
add
shlb
outsb
imul
push
and
js
loop
lock
push
cmpsb
imul
je
das
popf
int
pop
xor
inc
stos
mov
in
scas
int3
mov
xor
es
pop
cmc
loopne
enter
xchg
scas
pop
inc
stos
lahf
inc
fadd
leave
ja
clc
cwtl
loop
xchg
or
xchg
sub
out
xor
cmp
movsb
push
sbb
adc
cmp
lea
jg
jo
in
add
push
insl
pop
sbb
cmp
inc
sbb
cmc
into
push
shll
add
cmp
push
mov
or
daa
lods
cmp
xor
mov
mov
push
jge
ret
mov
fs
push
outsb
and
lods
adc
hlt
xchg
mov
jnp
in
add
xchg
arpl
or
das
jo,pt
int3
rorl
ja
insl
in
dec
dec
lcall
std
bound
insb
aas
xor
push
addw
shlb
mov
and
jge
mov
push
inc
xor
pusha
in
inc
hlt
pop
or
fildll
sbb
test
inc
xchg
xor
push
loopne
enter
cs
pop
aaa
xlat
dec
dec
test
sub
push
pusha
fnstsw
pop
sub
outsl
jge
push
adc
mov
inc
sti
mov
aas
insb
sahf
insb
mov
call
mov
in
xor
pop
jb
sbb
cmp
test
sub
pushw
inc
mov
xchg
testb
mov
xlat
js
push
aaa
lods
dec
outsb
aaa
bnd
pop
push
sbb
icebp
jbe
in
loope
iret
cmc
sti
pop
add
and
lret
ret
shll
jbe
int
fwait
inc
out
lret
jecxz
xchg
add
adc
adc
mov
inc
sub
fwait
or
cltd
jne
jno
popa
fwait
mov
mov
aam
lret
inc
push
cmpsl
xor
sti
mov
je
lahf
aad
sub
pop
mov
out
push
sub
add
testl
add
mov
and
out
inc
call
fnstenv
pop
aam
add
sub
push
push
test
cld
and
sahf
add
sahf
pop
lahf
roll
popf
add
rorb
mov
mov
mov
add
mov
fldt
inc
mov
dec
js
fstpl
lret
xchg
push
sub
mov
in
cmp
adc
jae
cltd
add
out
sub
orb
jns
aam
mov
jo
ficoms
push
mov
xchg
pop
loope
jge
pusha
movsb
fwait
mov
sub
ja
test
add
push
jg
jnp
aam
push
das
mov
adc
sarb
in
pop
cmpsl
and
sbb
xchg
jbe
xchg
sti
jo
jle
or
in
xor
inc
or
jb
mov
cmp
sahf
or
stc
cmp
popa
jne
or
lods
push
adc
aas
sub
out
or
push
mov
cwtl
sbbb
jne
loop,pn
sbb
xchg
inc
scas
div
pop
scas
add
lock
push
mov
sub
sub
pop
mov
jmp
faddp
rcrb
orb
jmp
jmp
or
sub
sti
aad
outsl
or
mov
bound
or
dec
dec
outsl
pusha
mov
hlt
dec
xchg
and
and
stos
pop
pop
jmp
lock
mov
test
fwait
dec
mov
mov
shll
xor
imul
and
repz
int3
and
pop
enter
lret
les
int
outsl
popa
bound
js
cmp
sbb
sub
inc
inc
jecxz
jl
lods
jno
pop
pop
mov
adc
pusha
in
pop
inc
test
and
pop
lret
xchg
popf
out
and
rorl
and
or
jmp
cmpsb
cmp
cwtl
dec
adc
mov
fcoms
xor
fs
dec
lret
xchg
movsl
lock
xchg
push
mov
and
push
inc
xor
outsb
in
add
mov
bound
mov
xor
aas
bound
mov
cld
pop
pop
lret
int3
and
cmp
subl
sbb
repnz
sbb
adc
aaa
mov
clc
cld
cmp
outsl
push
push
sbb
mov
aam
repz
andb
xor
test
sbb
lret
mov
mov
push
ss
cmp
mov
adc
adc
pop
xor
mov
cmp
pop
enter
push
ja
mov
adc
call
jnp,pt
sub
xchg
jecxz
fimull
shll
stc
nop
les
mov
xchg
jp
imul
imul
push
ss
sti
adc
in
jl
ja
xchg
into
js
push
mov
in
sub
push
xchg
cmp
dec
cmc
outsl
lahf
jnp
push
cli
sti
mov
sbb
cmp
stos
shrl
inc
xlat
mov
lcall
cli
or
aam
push
or
icebp
sar
insl
sbb
sub
aas
xchg
sbb
and
xlat
js
out
or
pmaxsw
push
xor
fisttpll
cli
daa
lea
jp,pt
inc
movsl
sub
pop
je
jne
cmpsl
jecxz
mov
fwait
or
fwait
icebp
dec
mov
inc
scas
push
js
decb
add
xor
out
movsb
jno
bound
xchg
dec
push
stc
cwtl
xchg
out
lock
and
xchg
fdivrl
mov
or
es
cmp
fsubs
repz
int
push
push
or
pop
mov
jecxz
sbb
lods
mov
mov
add
fnstenv
cltd
arpl
mov
dec
sti
sbb
mov
sub
je
shll
inc
mov
adc
addb
mov
testb
insl
mov
dec
in
push
out
pusha
adc
test
xor
or
mov
out
and
aad
adc
push
lods
adc
mov
sub
xchg
lea
adc
dec
inc
adc
xchg
push
and
mov
sub
or
shlb
insb
repz
fidivs
mov
jle
adc
aam
ja
out
sbb
push
pop
setae
imul
dec
in
loop
dec
out
aas
and
mov
daa
popa
addr16
pusha
cmp
cmp
ss
xchg
sub
sub
and
adc
and
sbb
fisubrl
call
push
dec
int3
push
push
lea
adc
mov
mov
aad
in
aaa
or
xchg
adc
xchg
xchg
je
hlt
and
xchg
scas
mov
lret
pop
sarb
jns
mov
add
into
jp
out
mov
cltd
sub
push
cmp
and
mov
hlt
out
movsb
adc
out
nop
lret
dec
xchg
in
xchg
loopne
lods
sub
dec
test
stos
mov
cmpsb
jl
xchg
lea
fcoms
rol
aas
into
movsl
push
jle
dec
push
jb
lock
popa
mov
jp
mov
js
test
mov
add
or
add
and
dec
pop
xchg
test
mov
cmp
inc
add
push
dec
mov
lods
mov
add
jae
in
mov
push
xchg
out
mov
mov
fsubs
mov
add
dec
fildll
hlt
mov
push
push
cmpsl
mov
xor
jmp
repnz
ret
fistps
or
insb
push
stc
push
mov
dec
push
sbb
lods
push
shlb
mov
out
fcmovb
and
int3
or
inc
add
pop
cmp
lret
push
js
cmp
add
inc
lods
nop
loopne
adc
mov
arpl
xor
out
lds
xchg
mov
stos
ret
dec
pop
add
hlt
inc
or
jecxz
sbb
jl
cli
add
add
mov
int3
clc
ss
jae
cmpsb
mov
pushf
jnp
in
mov
push
lret
jno
daa
adc
fcoml
pop
fwait
sub
divl
dec
outsb
fcompl
test
in
inc
xchg
inc
mov
mov
jne
cld
into
pop
xchg
push
clc
adc
fimuls
inc
cmp
sahf
idivl
mov
cltd
enter
sarb
pop
pop
mov
popf
je
mov
shr
bswap
rol
or
jno
mov
cmpsb
and
mov
fwait
out
xchg
inc
inc
cmp
mov
in
sti
imull
adc
clc
frstor
jg
push
pop
sbb
mull
and
adc
imul
xor
inc
jmp
adcl
in
repnz
daa
xor
adc
adc
adc
inc
pop
mov
push
cwtl
add
sbb
mov
insb
xchg
xor
sub
jno
mov
sub
scas
mov
add
lret
lods
inc
pop
sub
pop
jge
cmp
fucomi
cs
movsl
xlat
sbb
mov
dec
hlt
jae
sub
mov
pop
dec
inc
sahf
xchg
mov
adc
inc
and
jnp
loope
inc
mov
in
mov
icebp
ds
insb
jge
mov
adc
rolb
int3
mov
add
sahf
mov
dec
push
mov
jge
icebp
les
xchg
outsb
in
pop
mov
fucomp
cmpsb
mov
lock
jno
testl
add
out
jno
jno
out
pop
jnp
push
test
aad
inc
pusha
jb
ds
rcr
jbe
shll
movsb
aam
pop
sub
in
inc
aam
add
xor
mov
stc
jmp
out
sub
bound
mov
jb
push
pop
mov
rcrl
outsb
mov
popa
arpl
and
jge
and
sub
pop
adc
mov
mov
sbb
dec
mov
fs
mov
loope
xlat
ds
mov
add
sub
es
cmp
adc
or
xchg
inc
xor
or
mov
aaa
and
push
push
dec
or
ds
pop
sub
and
rcr
cmp
je
lock
lcall
push
mov
imul
mov
push
mov
add
pop
shr
testb
pop
fs
lcall
xor
movsl
je
adcb
mov
cwtl
and
mov
jg
popa
jno
into
jae
or
dec
jmp
or
and
pop
xchg
sub
sub
xchg
insb
mov
or
mov
inc
loope
mov
inc
icebp
pop
js
subb
xchg
jno
js
lahf
mov
fldln2
jle
movsl
sub
test
adc
fwait
sti
lds
xchg
adc
divb
mov
nop
mov
push
or
mov
cmc
stos
bound
cmp
push
and
push
sub
adc
out
aas
mov
call
xchg
add
stos
adc
fwait
mov
xchg
arpl
cltd
call
int3
sarb
lods
push
lds
pusha
sbb
fs
out
cmp
mov
ds
pop
loopne
repz
rorb
lahf
mov
call
push
sbb
sbb
fists
lods
push
nop
repnz
int
fcmovu
je
mov
jge
jb
je
fbstp
pop
test
mov
jg
sub
mov
aad
inc
cltd
cld
insb
sub
push
sbb
push
mov
or
and
xchg
inc
push
xor
or
mov
xorl
inc
arpl
in
adc
enter
insl
pusha
popf
mov
pop
lret
xor
rorb
adc
cmpsb
adc
bnd
pop
mov
mov
push
fs
fiadds
shr
push
pop
xor
and
pop
aad
jne
mov
push
xor
pop
mov
movsl
std
inc
pop
repnz
repz
data16
mov
pop
push
pop
jmp
roll
in
std
in
shll
sbb
negl
loop
daa
in
hlt
dec
push
sbb
and
xchg
es
pushf
sub
pop
popf
popf
shl
xchg
push
adc
movsl
out
mov
inc
push
mov
insb
mov
fldcw
adc
sahf
mov
popf
dec
lock
xor
out
mov
movsb
jns
sbb
in
mov
lahf
ret
xorl
dec
cmp
xchg
adc
adc
out
in
pop
mov
lock
cmpsb
jmp
ljmp
ljmp
out
stos
ret
inc
imul
xchg
mov
push
imul
outsb
jne
cli
subb
xchg
mov
adc
add
repnz
jmp
out
push
in
mov
loope
stos
js
insb
clc
mov
mov
pop
mov
cwtl
jno
jnp
xor
mov
xor
xor
popf
or
sti
mov
jecxz
adc
mull
cmpsb
outsl
xchg
js
std
jge
idivl
icebp
add
adc
cmp
sub
xor
mov
cmp
push
dec
pop
jb
sbb
mov
loope
arpl
loope
sbb
jnp,pn
out
shll
out
add
rol
adc
jo
cmpsb
pop
leave
add
push
mov
fwait
jle
pop
outsl
add
xchg
gs
adc
je
sub
in
inc
aaa
xor
inc
scas
push
pop
adc
popa
movsl
inc
pop
mov
fwait
lahf
mov
xor
push
movsl
lock
call
or
ss
mov
mov
js
inc
cli
and
call
xor
pusha
rol
adc
push
cmp
popf
xor
movsb
mov
pop
pop
xor
mov
sub
sub
push
loope
daa
mov
lock
cmpsb
or
xor
mov
mov
fstl
dec
dec
jns,pt
xchg
jo
out
xchg
in
fdivrs
repz
lret
mov
loopne
nop
arpl
pop
jmp
lcall
loopne
pop
cmp
or
add
mov
movsb
repz
fwait
mov
out
pop
repz
xchg
inc
imul
in
or
or
loope
xor
ret
mov
std
pushf
fstpl
cs
sti
pop
fnstenv
pop
push
pop
mov
xchg
lret
aas
ds
sub
lods
lds
mov
jo
les
xchg
daa
sahf
pop
int3
or
pop
ja
mov
jb
scas
inc
mov
ja
xor
das
fwait
std
bound
pop
inc
in
cmp
lods
mov
or
fadds
mov
aad
pop
mov
sbb
out
xor
pusha
cltd
out
pop
inc
mov
jle
xchg
lahf
xor
mov
jl
ret
out
stos
lds
pop
imul
pop
mov
call
jns
aam
arpl
xchg
mov
or
xchg
setnp
test
fstps
xchg
push
sub
mov
daa
sub
fwait
jg
daa
nop
cmp
je
xor
das
or
xchg
movsb
sbb
dec
std
lret
push
push
mov
bswap
inc
jecxz
iret
test
add
sbb
mov
enter
popa
cmp
sub
jg
popf
ret
adc
inc
push
nop
sub
imul
jmp
in
out
pop
push
sbb
in
imul
loope
adc
out
or
dec
adc
add
adc
bound
sahf
aaa
and
icebp
push
aas
push
mov
test
nop
sub
fstpl
push
orl
pop
cmp
mov
loopne
dec
ss
je
mov
test
in
and
mov
aas
sub
sarb
push
mov
dec
pusha
js
stc
cmc
push
enter
pop
jno
add
mov
inc
cli
incb
sbb
fists
sbb
arpl
dec
cmp
or
xchg
nop
loope
sbb
int
lods
mov
dec
xor
out
cwtl
pop
fcoms
jmp
and
imul
xchg
push
js
iret
mov
mov
aaa
aas
shr
push
xchg
xchg
ds
and
pop
popf
jmp
aam
lds
int
mov
or
or
pop
jns
cltd
mov
dec
test
js
sub
test
inc
ja
jbe
pop
ja
in
mov
int
jg
lret
push
cwtl
push
insb
lock
dec
insl
push
pop
lret
or
inc
sbb
arpl
bound
or
dec
mov
test
filds
enter
call
mov
dec
push
lret
inc
pushf
incl
cli
push
mov
or
mov
ds
xchg
inc
and
cmpsb
repnz
jo
sub
xchg
sub
jle
dec
sub
mov
push
or
pusha
or
or
out
mov
jmp
stc
dec
in
cmp
out
mov
xchg
sbbl
jae
cmp
test
lods
mov
add
inc
inc
scas
divb
bound
adc
test
jae
add
enter
pushf
xchg
mov
adc
jnp,pn
ds
ds
int3
cmp
and
add
xchg
sbb
movsb
addr16
xchg
aam
andl
adc
xor
test
inc
ficoml
movsb
lock
into
lahf
pop
sub
dec
adc
repz
sub
or
fcmovbe
push
mov
cltd
les
add
cld
mov
cmp
rcl
xchg
test
imul
sub
decl
pop
mov
fstpt
insb
loopne
or
push
divb
lds
std
sub
fbstp
dec
out
sahf
sbb
cmp
push
aaa
jnp
iret
cmp
shl
jle
mov
sbb
xor
cmc
in
es
cmc
jge
and
gs
mov
adcb
inc
xchg
jns
adc
mov
ss
adc
prefetchwt1
cmp
loope
mov
sbb
mov
aad
add
or
cmpl
cltd
pop
mov
push
mov
adc
add
stc
aaa
sbb
out
push
add
and
mov
or
sub
push
addr16
loop
shll
cmp
in
cmp
stos
xchg
mov
cmp
mov
pop
shrl
pop
mov
les
int
lcall
inc
sarb
mov
xchg
pop
loop
inc
aam
popa
repnz
or
arpl
and
cmp
mov
fldcw
shlb
fcoms
push
inc
out
adc
cwtl
fimuls
repnz
lods
sarb
js
stc
lods
or
shll
dec
lcall
push
and
jmp
std
idivl
daa
push
incb
sar
mov
call
mov
pushf
cld
mov
rcr
scas
sub
fidivrs
dec
popf
pop
hlt
jmp
inc
test
mov
fldcw
add
jae
dec
jb
lock
ds
shr
movsb
mov
pop
inc
shl
ret
or
push
jbe
dec
fidivrs
fnsave
out
dec
fiaddl
sub
sbb
add
testl
cmp
xchg
ja
rorl
sub
and
pop
jb
enter
das
sub
cltd
jne
out
gs
xchg
popf
jnp
frstor
and
dec
fistpl
push
mov
xchg
je
sub
and
or
addr16
push
xor
pop
push
adc
jns
jecxz
and
js
mov
jp
mov
or
sbb
lods
cmpsl
in
nop
int
insb
jo
or
mov
scas
imulb
add
loope
mov
icebp
add
pop
je
and
jne
add
pop
jecxz
nop
xorb
mov
or
jmp
sti
jmp
daa
inc
cmp
cmp
jecxz
jb
sbb
mov
add
movsl
mov
je
mov
adc
incb
pop
loopne
movsl
and
mov
push
sqrtps
nop
in
out
sub
ds
imul
push
fdiv
lea
int
mov
mulb
xor
xchg
and
test
nop
gs
loopne
sub
dec
mov
xor
aad
pop
icebp
cmpb
mov
mov
mov
mov
mov
aas
popf
xor
pop
mov
jge
add
jge
pandn
push
insl
mov
jb
mov
xor
iret
pop
xchg
imul
and
movsb
test
jg
mov
repz
cmp
nop
jle
adc
mov
jp
sahf
imul
inc
mov
dec
out
movsl
mov
shlb
jnp
icebp
scas
pop
cmpsb
inc
pop
dec
adc
loopne
aaa
xchg
sub
xor
lret
jg
fidivl
js
mov
dec
fbstp
inc
dec
push
jle
test
stos
pop
xlat
ljmp
and
adc
int
ret
imul
push
stos
cmpsl
sbb
mov
adc
dec
into
enter
aaa
add
sub
aad
popf
pop
gs
sbb
mov
adc
inc
fistps
or
jmp
dec
jo
int
mov
scas
xor
ret
imul
repz
cmc
sahf
sar
push
addr16
sbb
jo
xor
enter
mov
add
pop
mov
dec
shrb
cmpsb
dec
loope
cmp
shrl
dec
aas
out
aas
daa
loop
dec
and
pop
lock
je
sbb
pusha
inc
mov
in
or
cmp
push
xchg
add
sbb
fcomp
mov
testb
cmp
in
jg
gs
push
cs
popa
out
mov
sbb
jecxz
movb
cmp
sbb
and
jmp
rclb
popf
add
daa
clc
addl
mov
addr16
sahf
pop
mov
cmp
cmp
fdivp
mov
aas
sbb
fisubrs
mov
fnstenv
divb
dec
sbb
push
out
dec
cmc
mov
lea
push
dec
mov
push
xor
adc
out
pop
out
mov
enter
shll
subl
add
jmp
mov
lods
fstl
das
inc
mov
dec
sub
fidivrl
jns
loop
xor
push
push
icebp
fidivs
imulb
jbe
loopne
outsl
loopne
dec
les
mov
fldcw
in
mov
and
gs
fcmovbe
adc
mov
test
add
subb
adc
mov
add
lahf
xchg
inc
stos
mov
sub
xchg
inc
push
decl
pop
in
xchg
mov
mov
fsts
push
push
movsl
jo
dec
das
sbb
adc
dec
cmpsl
into
pushf
inc
loop
sub
loope
or
lock
ret
stc
mov
sbb
cmp
notb
mov
insb
bound
and
dec
mul
pop
int
jmp
ss
jo
add
pushl
hlt
xor
test
sbb
xchg
arpl
pusha
rorl
jmp
int
mov
push
inc
xor
pop
orb
ljmp
mov
mov
popf
jbe
arpl
mov
cs
push
sbb
insl
lock
cmp
jbe
jmp
push
push
push
xchg
pop
push
aaa
xchg
adc
mov
dec
add
cs
mov
test
inc
inc
jo
movsl
dec
mov
mov
sub
jg
loopne
or
decb
pop
ror
stos
push
shlb
imul
mov
sbb
imul
imul
add
mov
mov
sub
fidivs
inc
cmp
xchg
jne
push
fwait
jae
jg
and
int
idivl
adc
aas
xchg
sbb
sbb
push
mov
jbe
mov
fwait
pop
pusha
inc
in
je
ret
jbe
adc
push
pop
mov
add
inc
pop
mov
or
add
jnp
in
push
jo
mov
rorl
cmp
aaa
and
popa
adc
push
ljmp
cltd
mov
in
xor
push
mov
fcompl
adc
dec
imul
test
aas
and
clc
fiaddl
addr16
fisttps
xchg
push
rcr
push
hlt
add
mov
mov
lret
pop
scas
sub
xor
add
leave
cmp
cmp
mov
add
pop
lcall
rcl
test
faddl
mov
addr16
xor
sbb
dec
nop
loopne
mov
daa
addr16
pop
cmpsb
jno
push
loop
mov
push
jae
pop
push
xor
add
pop
in
inc
iret
loop
std
pop
xchg
call
sub
pop
push
gs
lret
jb
out
mov
mov
jecxz
xor
shrb
xchg
dec
mov
ret
inc
jne
dec
adc
fdivrl
lea
mov
outsb
daa
inc
in
sub
and
lret
add
sti
in
xchg
shl
sbb
cmp
cmp
jge
and
xchg
lret
sub
pop
cmc
mov
jb
in
lret
enter
jmp
shl
in
loope
std
and
mov
jmp
out
mov
out
aas
push
xchg
adcb
mov
push
sub
sub
test
xor
mov
xchg
xchg
push
push
pop
xchg
les
jb
sbb
or
sbb
out
repz
nop
mov
aaa
mov
dec
lods
repz
mov
adc
mov
sbb
shrl
lds
cs
sti
sub
xchg
ret
clc
pop
or
rolb
dec
aad
movsl
fstpl
in
cmp
fldenv
adc
es
mov
fimull
lahf
xchg
lea
rcll
inc
rcrl
nop
sub
push
ficoml
call
or
xor
lods
and
push
out
push
test
push
clc
shll
outsb
or
imul
mov
sub
shlb
push
add
mov
insb
sti
dec
lret
mul
mov
jns
jg
addb
stos
stc
jo
cmp
ljmp
mov
popf
rorl
dec
sbb
mov
xchg
ficoml
lahf
movsb
in
imul
or
jb
cmpsl
xor
sbb
add
dec
stos
ss
or
jnp
cmp
sbb
adc
or
std
es
cmpsb
lods
ljmp
sbb
fs
shrb
mov
pop
test
daa
imul
inc
movsl
cmp
inc
lock
mov
and
xlat
pop
inc
test
out
jge
jg
mov
cmpb
push
xchg
cltd
xor
mov
outsl
scas
xor
imul
pop
xchg
enter
pop
and
adc
sub
fwait
sbbl
stos
dec
shr
fmulp
scas
mov
test
idiv
dec
mov
ret
mov
dec
mov
bound
xchg
adc
ljmp
daa
add
mov
and
dec
jg
mov
adc
add
ds
out
ds
mov
push
stos
inc
sbb
mov
push
xchg
lea
lret
cld
jnp
adc
dec
and
call
cmpsb
jae
mov
push
das
jle
xchg
cmp
cmp
pushf
lods
pop
arpl
enter
repnz
nop
dec
xor
sub
popa
loope
sbb
mov
nop
adc
xchg
ss
inc
cs
xor
test
inc
scas
inc
mov
movsb
dec
ds
hlt
mov
inc
pushf
mov
hlt
pop
add
sbb
inc
push
lcall
shrb
out
mov
jl,pn
jmp
adcl
inc
add
subb
lret
lods
cltd
jns
lret
xchg
pop
xchg
ljmp
push
in
sbb
and
sar
push
and
rcl
mov
das
adc
loope
popf
mov
out
fidivrs
mov
mov
or
cmp
sbb
and
inc
scas
sbb
add
test
mov
mov
repnz
in
testl
sbbb
push
dec
push
pushf
sahf
and
or
inc
pop
pop
fcoml
cmp
jnp
addr16
jns
lea
jl
cli
sti
push
mov
mov
sbb
insb
cmp
mov
leave
sbb
pop
pop
mov
or
aaa
cld
sub
outsl
aam
repnz
fists
daa
frstor
addr16
jnp
mov
imul
pop
repnz
xchg
addb
jne
jns
cmp
cmp
mov
insb
xor
repnz
es
outsl
push
mov
aam
es
cmp
bound
mov
shrl
arpl
fwait
sbb
sub
aaa
stc
iret
fcomps
shlb
jns
sbb
fadd
sub
ret
adc
cld
xor
pop
push
test
cmc
mov
adcb
cmc
adc
mov
add
add
mov
cmp
mov
and
or
into
jnp
scas
jo
pushf
sub
imulb
and
fwait
mov
lds
rorb
dec
mov
cmp
dec
lock
mov
into
popf
inc
jecxz
push
mov
js
mov
cli
or
sbb
int
jg
mov
lret
pop
dec
sti
into
movsl
xlat
int
add
jge
inc
repz
dec
push
pop
mov
mov
xorb
fdivr
lds
clc
fiadds
jg
mov
xorb
or
aad
or
mov
cmp
add
push
jle
sub
pop
enter
or
cmp
cmovns
cwtl
lea
mov
in
cltd
push
adc
jo
jnp
lods
testl
sbb
push
aas
sarl
out
xor
or
jne
and
outsb
add
in
lret
and
ljmp
les
xchg
icebp
inc
mov
popf
jno
adc
mov
andb
outsl
xchg
mov
xchg
cmpsl
xorl
jno
outsb
sbb
push
sbb
pop
mov
iret
add
sub
dec
outsl
pop
stos
cld
mov
outsl
insl
std
pop
adc
and
faddp
lcall
fwait
cli
dec
xorb
std
aad
jno
out
clc
in
test
push
jnp
lods
loopne
mov
sub
jp
mov
jo
mov
scas
nop
clc
lds
cwtl
and
cmpsb
loopne
cld
push
xlat
add
mov
fcomi
xor
addr16
fldcw
repnz
shl
jmp
adc
js
jecxz
loope
pop
xor
xor
es
jp
mov
inc
mov
fildl
in
cmp
repz
xor
ss
mov
popf
shll
inc
lcall
pop
in
xchg
pop
lret
shlb
and
mov
and
jge
jbe
dec
pop
sub
pop
imull
div
mov
cmp
dec
test
addb
popf
subb
xchg
stos
pop
lods
jbe
or
mov
and
gs
cmpsl
xor
push
cwtl
aaa
lret
mov
adc
subl
fwait
dec
pushf
shl
pop
fistpl
push
psubusb
or
call
stc
dec
push
mov
test
pop
dec
lods
arpl
jg
cmp
xchg
fadds
add
jmp
xor
inc
adcl
and
out
dec
mov
adc
outsb
loop
sbb
xchg
mov
or
outsl
ss
imul
push
sbb
dec
stos
insb
xor
or
enter
into
adc
sbb
bound
xor
and
jge
inc
scas
mulb
add
push
push
js
push
jecxz
fisubrl
cmpsl
int
add
aas
dec
push
or
pop
xor
into
add
mov
mov
loope
xor
xchg
mov
dec
jbe
scas
jg
aam
insb
mov
mov
and
mov
xor
jl
scas
dec
mov
xchg
fistpll
mull
fs
pop
dec
mov
aad
push
jne
cmpsb
aaa
inc
repz
hlt
imul
sbb
sub
xor
pop
cwtl
aam
mov
outsl
xor
das
push
outsb
cli
xlat
mov
inc
jecxz
jl
or
jl
div
jne
push
adc
push
cwtl
movsl
and
cmpsl
nop
inc
subl
cmp
dec
popf
add
fsubs
adc
aaa
js
add
fwait
mov
mov
or
icebp
pop
sbb
mov
mov
insl
add
mov
xor
mov
or
inc
dec
sub
enter
jp
shrl
out
lahf
mov
jmp
sahf
sub
xorb
push
je
les
cmpb
dec
sbb
sub
iret
pop
test
mov
dec
movsb
fbld
leave
cwtl
in
xchg
in
test
test
sub
jne
lret
repnz
mov
mov
fs
pusha
and
pop
xor
ret
cmc
fldenv
repnz
mov
or
mov
in
or
mov
sub
fwait
jne
pop
or
aam
xor
in
decb
fsubr
and
cltd
das
push
std
xor
mov
xchg
mov
sbb
mov
jle
cmpsb
aam
mov
leave
or
xchg
xchg
inc
bound
sbb
lret
inc
push
sbb
and
cmpsb
scas
lcall
out
pusha
sbb
xchg
pop
dec
sti
inc
or
sub
ss
inc
rorb
ja
push
mov
mov
inc
inc
inc
and
inc
add
shl
add
mov
lahf
loop
lret
mov
mov
cmpsl
and
js
jge
shl
movsb
mov
jns
xor
fidivs
movsb
mov
dec
lret
mov
mov
mov
test
cmpsb
or
fsubrl
pusha
xchg
cmc
push
cmc
mov
pop
inc
xlat
cmp
aas
js
mov
add
pop
cmp
push
adc
lret
lock
pusha
fucom
movsb
inc
dec
jbe
repnz
mov
pop
mov
push
insb
and
push
out
and
xchg
push
insl
icebp
xlat
mov
adc
dec
enter
orl
rolb
dec
stc
inc
xlat
ret
xchg
into
ss
cmpsb
jo
lock
push
out
push
push
adc
mov
clc
dec
iret
out
mov
add
mov
mov
inc
aaa
sub
imul
in
test
adc
fstl
ljmp
adc
mov
jae
fstl
aad
xor
aam
cmp
shlb
aaa
negl
in
and
sbb
push
cmpsl
jp
js
pop
ja
and
push
jge
jg
mov
pop
rorb
cmc
mov
inc
push
inc
xchg
push
jmp
repnz
mov
leave
or
mov
pushf
aam
faddl
std
movsl
adc
fmuls
bound
push
pop
aad
std
mov
mov
mov
and
pop
fisttpll
or
mov
sbb
adc
cld
adc
aas
xchg
mov
inc
test
and
into
dec
xchg
fldl
mov
lds
ret
outsb
sbb
mov
xor
insl
sbb
jg
mov
jl
adc
addr16
or
scas
cmpsb
outsl
rolb
jo
arpl
mov
inc
jns
in
adc
call
ja
inc
fsubl
mov
arpl
movsb
cs
pop
push
pop
xchg
test
pop
adc
jns
testb
add
xor
lahf
loope
cmp
mov
adc
inc
xor
aam
int3
xchg
jmp
rorl
push
int
jne
xchg
jae
push
ljmp
dec
and
fs
mov
cmp
xor
sub
mov
mov
les
lahf
div
jbe
xchg
and
mov
mov
adc
cmp
or
cmpsl
test
adc
iret
jp
jmp
dec
or
add
push
dec
sub
out
out
sti
push
cmpb
aad
dec
pop
rcll
xlat
lcall
sub
sbb
inc
std
add
and
jb
mov
jg
nop
push
dec
loopne
hlt
xchg
mov
cmpsl
jg
aam
cmp
into
mov
lret
test
out
dec
mov
pop
je
push
cmc
xor
jge
inc
add
mov
inc
mov
frstor
cld
out
jnp
mov
add
ret
lahf
enter
popf
jae
and
xor
dec
sbb
and
mov
inc
cmp
ror
std
aad
or
xorb
jmp
adc
nop
lea
pop
sbbl
mov
jns
lea
push
xchg
jmp
push
scas
jne
cmp
lret
xor
mov
and
add
sub
int
pop
cmp
mov
sub
sub
push
or
jae
jmp
shrb
jo
mov
mov
xor
lods
test
mov
fwait
and
jne
loop
sub
movsb
xor
add
sub
and
push
adc
mov
ret
mov
push
mov
jo
push
test
fdivrl
inc
push
movsb
lods
inc
ljmp
test
jns
dec
insb
mov
icebp
fwait
gs
into
xor
sub
clc
xor
xchg
shl
repnz
jb
xchg
jecxz
jg
xchg
insl
add
gs
mov
hlt
data16
fstpt
out
and
hlt
and
test
ja
ret
aaa
or
xchg
ljmp
jnp
xchg
imul
loope
cld
or
add
xor
sbb
xchg
insb
adc
pushf
adc
xchg
add
movsb
outsl
mov
int3
ret
mov
nop
arpl
clc
lds
into
imul
inc
mov
rep
fstps
and
popa
out
daa
mov
loop
ret
imul
lcall
adc
orl
adc
mov
xor
outsl
add
outsb
loop
adc
mov
cmp
jge
js
sbb
inc
dec
icebp
jl
fs
sbb
sub
dec
imul
cmpsl
lds
xchg
ja
pop
inc
xchg
mov
imul
loop,pt
filds
aas
and
pop
pop
and
lods
nop
sbb
pushf
scas
adc
outsl
lret
adc
mov
idivb
jne
mov
dec
mov
fcmovnbe
add
or
push
lret
lds
aas
addl
mov
add
loope
rorl
hlt
or
mov
adc
and
mov
xchg
lahf
xchg
push
fimuls
jmp
lods
sub
add
jb
popa
xorl
mov
fwait
movsb
and
bound
mov
pop
sbb
or
shll
dec
mov
jno
pop
cmp
xchg
movsl
mov
test
repz
ss
out
incb
push
stc
test
dec
icebp
pushf
xchg
clc
inc
in
or
push
xchg
adc
lds
ljmp
xlat
xchg
lock
xchg
push
cs
scas
movsb
into
outsl
outsb
fmulp
fcoml
shrb
xor
iret
cld
dec
inc
sbb
hlt
or
jb
lds
popa
mov
mov
sbb
lods
imul
cmp
mov
popf
mov
in
pop
adc
lods
cld
xchg
aas
popa
fwait
cmp
loopne
mov
imul
pop
pop
mov
xchg
and
stc
imul
mov
data16
mov
jecxz
lahf
inc
inc
je
pop
push
jbe
and
hlt
push
push
mov
cltd
enter
mov
loope
je
adc
adc
insb
sub
mov
aaa
outsb
mov
notb
fisubl
mov
negb
and
lcall
add
pop
ds
push
int
push
imul
pusha
lahf
out
cmp
out
pop
and
fists
push
cmp
xchg
xor
sbb
mov
pop
add
xor
adc
clc
cmp
xor
and
inc
popa
cmp
div
mov
popf
jbe
lcall
pop
pusha
or
jno
shrl
inc
xchg
orl
movb
inc
cmpsl
bound
and
divb
in
in
aaa
icebp
insb
nop
jmp
std
es
xor
or
hlt
fdiv
push
arpl
or
js
mov
rorl
push
adcl
loopne
inc
add
mov
inc
jb
cmpl
inc
popf
and
fadds
xor
mov
cmp
jae
and
jl
sbb
sbb
sbb
or
xchg
xchg
xor
sub
in
jnp
fnstenv
repz
hlt
lret
jg
mov
fwait
movsb
dec
jmp
je
rorb
leave
data16
sbb
xchg
aad
mov
jb
cmp
push
mov
es
int3
xor
cmp
push
xor
cmp
xor
and
gs
leave
lret
jg
fidivrs
xor
cltd
sub
fcoms
push
sahf
jbe
jbe
adc
out
inc
addr16
and
xchg
jge
std
inc
xchg
xor
ds
jae
aas
movsl
cli
ljmp
pop
lcall
inc
mov
xchg
mov
mov
mov
lea
mov
imul
or
sbb
test
stc
push
jge
pusha
cltd
fstpl
inc
mov
stos
insb
or
dec
mov
sbb
cmp
inc
cmp
aam
mov
lcall
dec
out
aad
sub
ss
sbb
icebp
popf
stos
bound
dec
lea
mulb
inc
call
insl
js,pt
pop
and
lock
mov
xchg
leave
mov
loopne
mov
movsl
pop
out
push
rcrb
sbb
clc
xchg
mov
or
out
mov
xlat
mov
pop
fs
aas
pop
out
sub
mov
mov
std
jnp
push
sbb
push
add
inc
cwtl
shll
shrb
jge
add
mov
scas
dec
std
mov
pop
andl
adc
cmp
popf
sarb
mov
dec
cld
mov
dec
loopne
xchg
or
mov
test
add
xchg
aaa
adc
out
fisubl
mov
and
das
cli
mov
scas
xlat
cltd
cmp
mov
rolb
mov
and
lret
cmpb
or
ljmp
shll
movsl
stos
imul
inc
negl
push
movsl
sti
adc
ss
enter
sub
ja
or
inc
into
adc
adc
pushf
fstpt
mov
repnz
xchg
xor
out
inc
adc
mov
fcoml
add
testl
int3
and
pop
call
or
xor
rolb
lahf
jge
cmp
arpl
fwait
jno
lods
pusha
cmp
in
ficompl
and
mov
mov
cmpsb
shr
imul
xor
sub
jno
movsb
lods
cmovno
and
and
lahf
loop
push
fistps
and
shrl
or
outsb
cmp
ljmp
jp
inc
adc
repnz
jb
mov
mov
mov
mov
pop
cltd
jns
aad
lret
cld
sbb
pop
aad
cld
sbb
fwait
mov
mov
mov
xor
fmull
rcll
xor
sub
add
xor
lods
pop
dec
mov
adc
push
pop
ret
xor
mov
ret
mov
ficompl
icebp
aaa
xchg
xchg
push
cmp
je
repnz
mov
jnp
icebp
xchg
jge
inc
cltd
xor
arpl
mov
sbb
movsl
xor
mov
jmp
sbb
fwait
xchg
fnstsw
xchg
data16
repnz
dec
addb
lahf
loopne
inc
js
push
mov
sub
xchg
xchg
or
pop
mov
inc
lret
xchg
jmp
jl
movsb
in
sahf
push
iret
add
fs
out
daa
icebp
xlat
inc
xorb
sbb
gs
xor
shr
hlt
lods
add
xchg
mov
arpl
js
or
mov
add
fwait
dec
flds
les
sub
inc
fldenv
jecxz
je
sbb
and
mov
out
pop
xor
icebp
push
andb
imul
add
ja
ljmp
hlt
cmp
cmp
sarl
outsb
xlat
pop
adc
pop
ljmp
adcb
sub
into
push
push
mov
aas
lods
test
mov
iret
loope
lcall
cltd
jecxz
mov
sbbl
cld
lahf
cmp
das
push
sub
pushf
dec
out
sbb
xchg
pop
test
imul
repz
not
ss
and
jbe
mov
pop
mov
out
out
pusha
fucomip
xchg
jne
add
adc
in
fwait
movsb
inc
loop
and
inc
jl
subb
fwait
cmp
pop
in
inc
mov
or
xor
push
dec
lea
mov
add
mov
cmp
cmp
adc
mov
cmp
or
orps
push
mov
mov
bound
call
outsb
dec
jne
xor
or
test
sahf
xor
lahf
shll
add
fisttpll
mov
xor
pop
dec
repz
inc
sub
arpl
adc
pop
movsl
test
aam
ret
adc
sub
push
push
cmp
pop
lock
xchg
fisubrs
fs
call
cmp
add
jle
mulb
lods
rcl
imul
dec
cmpsl
loopne
imul
and
mov
xorb
daa
mov
aas
and
mov
and
inc
lods
fldcw
mov
xchg
ss
fcomps
les
sub
jo
add
int3
lods
fidivrs
mov
cmp
cmpsl
adc
and
cli
adc
xor
jmp
cmp
sub
call
push
adc
lds
das
xchg
mov
jp
lock
or
lret
sub
xchg
imul
cld
ss
aaa
je
lock
jmp
jnp
cmp
push
jge
ljmp
int3
mov
fnsave
fldenv
mov
jnp
shlb
sub
in
sbb
mov
rolb
lret
das
popa
jbe
lods
popf
loop
mov
adc
cmpsl
pop
xchg
aad
jo
inc
lds
mov
leave
pop
movsb
popf
aaa
fwait
sub
mov
psubd
xchg
mov
mov
lcall
cmpb
push
mov
pop
mov
ljmp
scas
push
mov
out
inc
mov
pop
mov
sahf
fs
cmp
stc
ss
rcll
mov
divl
push
loope
lahf
pop
xchg
int
xchg
insl
sub
cli
cmp
xor
sbb
outsb
inc
inc
dec
mov
aaa
push
mov
mov
cmp
scas
inc
ds
jge
stos
in
das
jge
aaa
xchg
sarl
nop
add
pop
pop
add
mov
es
idivb
and
push
lahf
je
cld
rorb
jbe
adc
pop
in
jnp
xchg
push
aam
and
jnp
fistpl
xor
in
in
into
inc
xchg
xor
or
ds
xchg
test
testl
inc
sbb
imul
xlat
gs
sub
fmull
mov
hlt
aad
push
cmpsb
add
pop
mov
dec
cld
xchg
in
loopne
fisubrl
xchg
insb
lds
xchg
mov
aam
jno
pop
dec
adc
pusha
or
pop
mov
xor
test
adc
sub
inc
ds
lea
sbb
ds
dec
addr16
or
push
or
sbb
mov
cmp
imul
xchg
jp
pop
adc
inc
lret
adc
xchg
rcll
xchg
xor
mov
bound
pop
orl
sbb
gs
adc
fcom
mov
push
inc
fildl
cmp
fisubrl
sbb
je
dec
sti
loop
nop
lahf
push
repz
dec
es
mov
lds
fildll
inc
dec
fbstp
inc
pop
ja
mov
lahf
dec
or
into
jp
mov
jp
loope
out
inc
mov
fsubl
jbe
add
lods
mov
std
xlat
test
inc
add
dec
mull
xlat
jecxz
scas
rolb
out
jle
mov
jg
nop
dec
mov
mov
into
sbb
push
or
imul
outsb
add
mov
and
ljmp
jno
xor
int3
les
mov
pushf
stc
mov
sub
mov
jb
xor
loopne
xor
lret
sbb
popa
dec
ss
inc
fs
jae
fiaddl
mov
mov
and
sbb
incl
subl
std
adc
inc
cmpsb
cs
fidivl
fimull
imul
jnp
lods
mov
jno
clc
jns
aaa
test
filds
add
mov
sbb
mov
xor
les
loopne
add
xchg
and
pop
ret
mov
xor
out
dec
int3
cmp
imul
adc
fbld
inc
insl
inc
sub
jp
lahf
fwait
jo
or
mov
nop
xor
sbb
pusha
ret
outsb
cmp
imul
pop
add
fdivrs
or
sbb
outsb
xlat
jmp
popa
pop
aam
jp
cltd
sbb
ret
or
cmp
pushf
ljmp
les
stos
sbbl
ljmp
enter
out
mov
mov
mov
mov
xor
leave
pop
inc
xchg
inc
lock
push
and
dec
aam
andb
xchg
rclb
xchg
stos
lock
push
les
not
rorb
sub
shll
mov
fsub
jecxz
insl
push
pop
push
sub
packsswb
dec
aaa
add
fildl
pushf
dec
fcoms
popa
inc
pop
test
ss
xor
scas
xlat
cs
jmp
sub
and
testl
jns
fisubl
and
sbb
mov
or
jne
fsubs
in
mov
mov
sub
xor
dec
cmc
stos
adc
mov
xor
mov
push
inc
dec
movsl
clc
aam
push
mov
hlt
lcall
fstpt
cmp
or
jg
cwtl
sbb
pop
repnz
in
int
add
and
insb
es
lock
cmp
jno
divb
sub
std
les
inc
pop
xor
lds
cs
lret
inc
push
je
mov
sbb
dec
out
mov
test
cs
xor
sub
cld
ljmp
cltd
adc
sbb
jbe
pop
sub
jg
ret
out
or
mov
stos
test
out
call
and
mov
dec
pop
pop
std
push
ljmp
dec
enter
inc
daa
or
and
pop
push
and
adc
out
xor
dec
or
dec
pop
adc
adc
insb
fisttpll
jbe
mov
lret
xor
sub
cli
rcrb
xor
cs
ret
fdivs
add
inc
mov
xor
mov
push
add
imul
xor
mov
sbb
jno
fs
or
cmp
push
std
stos
add
jecxz
jo
sbb
aas
mov
xchg
push
jmp
mov
push
dec
mov
jg
cmp
mov
dec
push
enter
pushf
adc
adc
sbb
inc
mov
sub
pushf
call
ljmp
mov
int3
stos
and
and
pop
dec
jne
inc
push
xchg
int
pop
lcall
ror
jecxz
mov
mov
push
inc
nop
leave
cmp
cs
lahf
pop
and
rol
mov
pop
loope
push
out
filds
ret
idivl
fwait
sub
std
dec
adc
loop
adc
mov
ds
enter
and
scas
dec
jl
mov
pop
das
imul
xchg
adc
fcmovnbe
out
push
ret
pop
lock
movsl
dec
lods
fcompl
dec
mov
xchg
sbb
add
imul
jae
fcoms
xor
js
xor
mov
fwait
leave
rorb
adc
in
jle
icebp
cli
dec
ret
negb
scas
cmp
enter
les
push
sbb
or
and
fldcw
jbe
sbb
repz
test
jp
add
sbbb
int
cli
and
mov
imul
stc
cs
dec
dec
inc
clc
mov
adc
scas
xchg
cmpsl
add
jecxz
xor
mov
jmp
add
mov
sub
add
xchg
jl
xlat
xor
dec
sarb
dec
xchg
or
xchg
and
sarb
inc
testb
fwait
rol
push
enter
push
in
ds
js
ja
mov
mov
rorb
or
dec
lods
je
out
lcall
fsubs
repz
out
lcall
and
inc
rcrl
mov
jbe
mov
sub
xor
aaa
adc
test
push
shl
dec
pop
shrl
mov
xor
and
enter
mov
adc
adc
mov
inc
jae
push
cli
or
bnd
mov
mov
ficompl
push
ds
pushf
xchg
sbb
jmp
out
outsb
int
cld
xor
mov
xor
sti
or
dec
test
mov
jnp
fwait
pop
rclb
in
in
sub
sete
and
add
push
mov
lahf
push
xor
mov
jo
push
insl
push
bound
mov
repnz
je
int
out
and
mov
adc
jg
and
cwtl
mov
jl
iret
insl
mov
mov
inc
jge
sub
es
xchg
rolb
aaa
push
movsl
adc
test
jge
leave
sub
push
dec
rcr
push
aas
push
inc
popa
aam
jns
xlat
xchg
int3
dec
jo
gs
cmpsl
std
adc
dec
shll
stc
push
das
outsl
dec
repz
mov
aam
pop
cld
lock
pop
ljmp
xlat
lds
int3
std
rcrl
xor
jmp
cmp
inc
pop
add
mov
stos
or
push
inc
pop
imul
mov
adc
scas
nop
xchg
sbb
clc
mov
fimull
ret
pop
dec
sub
lods
cwtl
sub
adc
dec
add
in
sahf
or
cld
and
add
and
rcl
shlb
mov
repnz
jno
fcoml
inc
mov
or
sbb
fmulp
inc
leave
shrl
test
sbb
mov
pop
xchg
ja
movsl
push
rcrb
add
insb
ret
and
mov
xchg
jp
sub
jns
dec
mov
cwtl
or
orb
mov
mov
notl
sub
rorb
xor
leave
mov
or
jbe
or
adc
mov
hlt
xor
data16
insl
fwait
mov
in
add
pop
push
and
push
test
lods
loopne
out
mov
push
pop
add
dec
adc
and
mov
out
lret
fistps
jmp
movsb
dec
xchg
mov
das
dec
pushf
jnp
xor
dec
daa
pop
or
mov
jge
xchg
mov
movsl
xchg
pusha
jecxz
cmpsb
enter
test
lcall
inc
mov
mov
testb
sti
push
pop
mov
out
bound
mov
jne
in
push
movsb
lahf
movsl
ss
jle
mov
aad
dec
lret
mov
lds
fists
jp
cmp
addb
xor
pop
inc
push
inc
data16
or
sbb
adc
pusha
testb
ss
add
push
sti
loopne
sub
push
sbb
or
ror
imul
cmpsb
sbb
push
pop
mov
sarl
jmp
aad
cmpsl
pop
mov
push
faddl
insl
push
jae
shl
push
pop
or
les
cmpsb
sub
jnp
pop
insl
inc
cmp
out
gs
inc
cltd
mov
sub
ja
fwait
or
ljmp
add
test
mov
jbe
pop
jae
out
mov
pop
xchg
loope
cltd
data16
push
push
fadds
or
ficompl
xchg
mov
ret
rcrl
mov
xchg
inc
lahf
mov
cmp
mov
shll
std
or
jno
push
add
xchg
fsubrl
hlt
cmp
pop
mov
mov
mov
add
cli
or
cltd
test
test
stos
xchg
push
and
pop
fsts
dec
ret
push
xchg
int
imul
arpl
xchg
lock
shl
sub
je
sbb
mov
ret
pop
nop
fsubrs
int3
jae
push
lahf
or
xchg
push
fwait
adc
mov
shlb
outsb
stc
mov
fcmovnbe
cmp
stos
pop
xor
adcl
rorb
les
sbb
pop
or
lock
data16
rcl
mov
icebp
pop
dec
or
aad
add
xchg
imul
mov
in
jbe
push
inc
xchg
xchg
test
adc
shlb
add
lods
xor
out
or
lds
xor
sbb
dec
cmp
lea
mov
roll
sbb
cli
lea
test
or
xor
pop
call
mov
adc
xchg
or
jl
fldt
adc
xchg
and
jb
xchg
scas
fsqrt
fwait
loope
jb
iret
stc
jp
mov
dec
and
sbb
in
push
lcall
mov
inc
mov
daa
aam
or
repnz
cmp
mov
out
inc
adc
dec
movsb
fs
pop
cltd
rorb
ds
mov
adc
lea
test
inc
mov
add
cld
sahf
nop
dec
movsl
cmp
or
xchg
decb
push
int3
sbb
inc
push
imul
and
fisttps
addr16
gs
sbb
push
dec
push
lock
fistps
sub
push
add
repz
sub
jg
iret
nop
add
sub
outsb
cli
clc
adc
stc
push
dec
lret
jl
add
and
cmpsb
xor
jp
sub
sub
shr
hlt
mov
xchg
rclb
loope
pop
cmc
fwait
sub
ss
lret
xor
add
jle
outsb
xchg
xchg
in
das
pop
jl
pop
nop
sub
sub
jp
xor
in
adc
gs
cmp
mov
cmp
in
mov
nop
ss
outsb
aaa
mov
aaa
dec
movb
ja
mov
inc
fs
lcall
test
out
push
jle
inc
xchg
mov
sub
and
pop
cmp
cmpsl
ret
inc
sub
negb
sbb
test
cmp
inc
js
dec
sub
xchg
jbe
or
test
or
xchg
std
lea
mov
xchg
and
aaa
sbb
sub
shl
cwtl
sbb
lcall
push
int
pop
mov
in
out
sbb
ds
iret
mov
imul
test
jge
mov
nop
jmp
out
lret
popa
test
pop
cwtl
mov
cmp
push
push
push
inc
call
daa
fmull
pop
mov
xchg
insb
gs
jno
call
fistl
je
mov
test
ja
jns
xchg
sarb
popa
inc
out
out
call
lret
out
mov
xlat
pushf
js
jne
xorl
push
repz
int3
push
test
ss
mov
add
cmpl
pop
insb
cmpsb
sbbb
jns
push
mov
xchg
mov
sbb
inc
shr
stos
fs
xchg
xchg
nop
jo
xchg
dec
das
dec
gs
dec
lahf
cli
pop
push
sbb
mov
or
std
iret
std
mov
shlb
xor
pop
bound
mov
mov
test
pop
aam
cld
orl
xor
popa
test
aad
push
and
sub
mov
jl
psllq
les
enter
daa
pop
add
es
mov
mov
out
jb
les
movsl
or
ljmp
imul
ret
and
fwait
scas
xchg
jl
xchg
out
xor
int
pop
lods
cs
scas
icebp
mov
movsl
cltd
cmp
jmp
ret
mov
ficomps
fistl
mov
mov
std
jb
fmuls
lods
adc
sbbb
xchg
jno
pop
scas
jae
dec
pop
xchg
sub
add
jae
gs
orps
outsl
and
mov
jae
loopne
nop
shl
sub
mul
mov
add
aaa
arpl
push
pushf
in
push
mov
stos
push
lret
cmpsb
push
cmp
mov
mov
loope
gs
dec
jne
inc
shll
aas
daa
push
ret
ss
xchg
dec
mov
popa
ret
lret
aad
insl
inc
mov
mov
sub
jne
and
repz
mov
push
sub
jl
js
sbb
xorl
gs
adc
cmovle
push
sahf
enter
sub
push
out
fisttpll
aas
sbb
les
adc
mov
push
in
cwtl
neg
push
xchg
and
cmc
inc
dec
ret
adc
call
sub
sbb
sbb
xor
push
xchg
popf
movsb
sti
mov
fnsave
sbb
aas
inc
xor
mov
scas
outsb
xchg
into
push
mov
mov
pxor
mov
and
push
test
aas
jmp
loopne
mov
adcb
push
bound
mov
cmp
adc
jnp
add
mov
xchg
xlat
jb
jb
xchg
shr
adc
pop
cmpl
outsb
test
jmp
sbb
xchg
mov
xor
adc
mov
test
push
sbb
mov
addr16
bextr
ja
pop
daa
jo
add
pushf
or
mov
jns
nop
add
sub
mov
inc
test
dec
cs
std
push
nop
popl
push
push
in
popw
int
adc
add
dec
lret
loope
xor
shll
pusha
mov
jmp
sub
and
mov
push
and
jne
adc
outsl
loope
outsl
repz
jl
fimuls
cmp
jo
or
xor
dec
sub
jns
popf
adc
xchg
xorl
push
sub
sub
push
mov
cmpl
aaa
stos
in
mov
mov
movsl
jle
xchg
push
pop
fsubl
sbb
fcmovnu
pusha
mov
jecxz
or
bound
rcll
jo
aam
test
stc
leave
call
mov
pusha
leave
push
sub
mov
lcall
and
scas
sub
test
add
dec
addl
int3
pop
jns
xor
xor
pop
iret
fmull
mov
je
das
mov
mov
popa
inc
sbb
inc
rcll
inc
enter
push
xor
ret
mov
jp
push
sbb
add
lock
push
rol
lret
or
sub
cmp
dec
mov
inc
stc
loopne
out
leave
leave
roll
aad
rolb
xchg
and
push
loopne
dec
stc
mov
inc
les
adc
imul
jle
sbb
and
mov
out
mov
out
aaa
and
iret
inc
cltd
sahf
cmp
mov
xor
add
call
sub
mov
call
and
jns
popa
cwtl
add
mov
push
leave
rcr
push
jp
pop
xchg
jg
js
xchg
jg
fdivr
sub
jb
pop
and
ret
sbb
sub
outsb
out
bound
jns
pop
call
test
fidivrl
js
push
mov
aas
mov
jp
dec
or
iret
push
xchg
fwait
ret
rclb
cmp
mov
pop
xlat
daa
xor
sub
mov
fcomi
divb
paddw
xlat
mov
repnz
movsb
ret
mov
leave
sub
fwait
jnp
xchg
jno
inc
or
int
mov
dec
pop
int
ret
inc
rclb
inc
loope
imul
enter
addl
into
rcrb
jne
in
xchg
pop
lcall
lea
scas
jg
hlt
movl
scas
mov
adc
push
sub
hlt
add
icebp
xchg
ljmp
sbb
call
push
test
push
rcrb
jp
add
pop
outsl
sub
fst
mov
xor
fs
roll
inc
xchg
test
in
outsl
aaa
pop
cmpsb
cmp
dec
xchg
cmp
call
sbb
dec
mov
mov
push
mov
out
cmp
add
push
lds
mov
xlat
lcall
loop
scas
sbb
not
cmpb
dec
mov
jecxz
push
mov
dec
adc
arpl
lcall
ficoml
push
mov
jnp
dec
lock
jmp
jb
fwait
push
sbb
aad
pop
add
mov
rcrb
dec
pop
dec
fninit
ljmp
in
lahf
xor
or
cli
insl
repz
push
into
shrl
push
xor
mov
aaa
sbb
mov
in
test
sbb
mov
insb
dec
add
fstpt
xorb
stc
pop
dec
cltd
pop
dec
dec
sarl
xor
aad
in
cmpsl
mov
xor
and
inc
pop
push
pop
push
call
adcl
out
leave
inc
test
inc
cs
enter
cmc
mov
leave
sub
push
mov
divb
xchg
pop
jle
mov
mov
mov
lcall
xor
mov
xchg
mov
mov
xchg
push
movsl
push
shlb
test
xchg
adc
cwtl
leave
mov
xor
rcl
inc
xchg
push
mov
lcall
push
mov
pusha
fistps
fsub
ret
mov
adc
jbe
jo
push
cltd
mov
ljmp
das
push
sub
jns
mov
cwtl
enter
push
dec
mov
imul
dec
jge
inc
stos
or
testb
and
sbb
pushf
inc
cmpsl
cmp
cld
mov
andb
push
insb
cmp
sub
mov
outsb
dec
dec
pop
xlat
subb
xor
mov
ja
iret
add
xorl
imul
gs
and
dec
jecxz
das
jb
push
pop
lds
fidivrl
jle
ljmp
mov
jo
mov
decl
loope
popa
xchg
popa
out
adc
fwait
cmp
pusha
test
orb
mov
push
popf
popf
push
xor
arpl
sub
ret
aas
mov
test
mov
and
pushf
push
mov
pop
adc
vunpcklps
mov
ljmp
int3
pusha
cmp
loopne
sbb
movsl
and
cmc
jecxz
dec
iret
rclb
mov
and
aas
fdivs
les
aaa
aas
icebp
test
data16
bound
repnz
mov
mov
add
sub
add
pusha
push
lds
divl
push
cltd
int3
in
lock
jo
jle
loope
xchg
inc
pop
leave
mov
loope
ja
inc
test
fs
ret
popl
cmp
mov
add
imul
mov
jmp
scas
addr16
adc
dec
negl
mov
fnstsw
mov
adc
cs
inc
mov
rcrb
test
insl
mov
add
aaa
call
idiv
dec
loope
je
xor
mov
fs
stos
mov
cmpsb
stc
pop
incb
ja
mov
mov
mov
add
and
push
adc
ljmp
nop
mov
add
and
jecxz
les
mov
pop
jmp
in
sbb
popl
jae
jae
xor
ja
cmpsl
sbb
push
push
lret
movsb
lcall
cmp
and
dec
xchg
nop
mov
shr
push
ds
cwtl
int3
pop
clc
pop
addr16
cmpsl
ret
adc
enter
xlat
cltd
andb
imul
enter
xchg
jp
inc
and
mov
inc
xor
mov
jge
lds
ret
dec
arpl
dec
adc
push
leave
aad
push
xor
mov
pusha
stc
pop
mov
fcoml
mov
push
gs
xor
cs
and
push
and
cs
outsl
xor
mov
inc
mov
inc
sbb
pop
mov
sub
shr
or
test
loop
ret
sti
outsl
push
push
mov
mov
inc
mov
dec
pop
jp
leave
push
sbb
dec
insb
and
xchg
add
into
sbb
push
xchg
sub
test
dec
pop
cmpsb
push
mov
ret
fldl
fistpll
test
adc
outsb
ljmp
mov
cmc
jg,pn
adc
pop
out
cwtl
inc
js
hlt
movsb
roll
jge
jns
outsb
cmp
cmp
and
into
sub
fstl
or
sub
fisubl
fwait
icebp
mov
clc
pop
sub
test
pusha
sub
mov
and
lds
stos
js
ffree
or
pop
push
and
dec
out
or
mov
mov
loope
pop
std
dec
adc
cmp
imul
ds
inc
loope
push
subl
xchg
dec
imul
add
mov
pop
subb
mov
sub
not
push
je
xchg
dec
insb
lret
mov
pop
pop
xchg
mov
iret
int
mov
add
lea
in
gs
jl
jne
icebp
mov
in
sbb
in
mov
les
iret
call
subb
pop
and
movsl
and
lods
add
out
jne
in
in
movsb
pop
mov
pop
xlat
mov
xlat
xor
jbe
in
sbb
inc
inc
cmp
xchg
push
call
shl
fdivp
mov
je
or
out
mov
mov
dec
enter
push
in
stc
cmp
inc
jp
pop
movsb
fstpl
mov
mov
inc
sub
jecxz
sub
sub
lods
je
adc
sbb
lahf
cli
test
mov
scas
pop
shll
sbb
sub
das
cwtl
cmc
paddsb
out
movsl
rorl
mov
aad
mov
or
int3
push
fdivp
dec
lcall
mov
leave
fildll
cltd
cs
les
xchg
test
popl
adc
pop
fs
adc
and
adc
ss
mov
in
or
ljmp
and
icebp
xor
int3
cmp
mov
mov
cmpb
inc
mov
and
cmp
fcom
xor
lcall
les
nop
pop
pop
cli
icebp
and
shl
nop
mov
mov
imul
adc
divl
cmp
jbe
xchg
shll
ljmp
inc
lret
test
into
int3
cld
or
push
pop
mov
cmp
xchg
js
loop
hlt
sub
jne
aam
shrb
inc
sub
movsl
cmc
xchg
hlt
xor
fstpt
movsb
ss
sbb
mov
pop
jnp
aas
test
loop
add
loope
daa
bound
aam
ret
in
pop
push
xor
mov
push
push
lds
imul
div
push
adc
inc
mov
xchg
cmpsl
ret
scas
jns
jl
mov
out
or
inc
inc
or
cmc
test
out
push
jbe
aam
jne
insl
inc
sub
pop
jl
sub
lret
mov
mov
lods
gs
movsl
test
mov
cs
test
push
cmp
inc
add
in
dec
loopne
movnti
into
cs
les
cmp
pop
imul
js
ffreep
adc
jne
and
dec
push
cmpsl
push
insb
push
shlb
inc
and
mov
addb
test
lret
lahf
push
push
int
xor
insl
sbb
mov
das
and
mov
jp
jo
or
andl
mov
shrb
sbb
fdivl
fwait
jp
sti
jbe
pushf
fiadds
xorb
jp
push
lock
mov
incl
inc
das
les
insb
and
sub
xchg
ds
push
loopne
mov
add
xor
xchg
aam
lret
popf
fsubl
xlat
mov
sbb
hlt
xor
dec
dec
add
sbb
dec
mov
jae
ljmp
stos
jg
jg
cmp
mov
daa
mov
js
pop
add
aas
lret
sub
and
and
inc
addr16
push
jo
push
and
adc
insl
add
ret
cltd
pop
cmpsl
dec
fbld
pop
xchg
push
xchg
dec
or
mov
lret
or
dec
loop
pushf
inc
sbb
int
jnp
mov
movsb
inc
stos
ss
xchg
aaa
arpl
and
wbinvd
add
mov
int
xor
jmp
xor
in
mov
scas
clc
addr16
push
cli
sbb
and
or
mov
or
cmpsb
mov
mov
mov
cwtl
repz
bound
sahf
imul
loope
pop
cmovne
cmp
jb
ror
in
dec
fistl
inc
fildl
scas
xchg
xlat
pop
add
push
mov
cmp
sahf
js
movsl
cmc
jle
dec
mov
clc
lds
jg
test
pusha
stc
xchg
pop
push
outsl
dec
popf
add
adc
xchg
inc
xchg
and
aad
nop
sub
adc
bound
dec
push
jecxz
sti
mov
cltd
shll
mov
jae
mul
inc
push
fld
mov
adc
insl
loopne
jnp
jnp
insb
lret
cmpsb
shll
into
ror
cltd
push
rcrl
inc
mov
scas
inc
movsb
cmp
inc
ficomps
pop
dec
push
ret
mov
repnz
cmp
mov
outsb
ss
lock
add
mov
inc
mov
cmp
ds
andb
in
mov
mov
or
mov
stc
out
lret
iret
mov
mov
cmp
movaps
push
jg
pop
aas
sarl
pushl
inc
mov
daa
movsb
dec
mov
mov
sub
mov
inc
push
imul
mov
add
adc
inc
jns
pusha
andl
adcl
rcrl
aas
cmc
ss
divb
movsl
xchg
loopne
loope
lret
mov
nop
fwait
in
loope
add
mov
push
push
xor
cmp
in
mov
test
fdiv
jl
adc
shrb
fwait
arpl
inc
addr16
jae
dec
xor
repnz
and
cld
rolb
in
wrmsr
sbb
xchg
xchg
inc
ficomps
ds
test
out
mov
mov
repz
fisubs
dec
movsb
cmp
popa
ss
pmaddwd
dec
xlat
mov
lds
dec
add
mov
or
notb
mov
insl
lds
in
pop
pop
dec
adc
jne
sbb
js
add
jbe
mov
pushf
int3
adc
xor
mov
mov
xlat
push
lret
lcall
out
mov
dec
popf
loopne
nop
xchg
lods
cmp
xchg
xor
adc
adc
fs
cmp
inc
xchg
repnz
imull
push
ja
sbb
inc
jnp
pop
or
or
jp
push
push
inc
sarb
push
and
add
repnz
lcall
cmpb
add
sbb
je
test
mov
lret
jg
mov
out
jno
pop
mov
and
outsl
push
pusha
js
inc
xlat
mov
pop
xlat
ljmp
jns
mov
xchg
add
push
jb
aas
shlw
adc
repnz
pop
out
stos
sub
into
out
leave
mov
mov
repnz
stos
mov
dec
out
ret
push
lock
mov
mov
jne
cmp
dec
or
imul
sub
jmp
imul
sbb
dec
test
pop
fisubrs
jmp
add
loop
add
inc
scas
lcall
mov
dec
and
adc
xor
dec
insb
jae
push
shlb
fwait
shrl
nop
mov
cltd
ret
dec
cld
push
pop
outsb
fnstcw
cmp
ficomps
out
fs
lds
push
mov
mov
pop
xlat
fidivl
mov
xor
gs
pop
aad
stos
movsl
movsb
push
mov
xor
imul
and
in
das
sub
xorl
jb
cmp
fmull
fldcw
fisubs
mov
in
mov
xchg
mov
jae
rorl
mov
sub
cwtl
mov
xor
sahf
mov
sbb
jne
mov
cld
mov
xchg
or
rcr
cltd
mov
cli
xchg
mov
movsl
lret
xor
lock
add
fstps
test
fisttpll
jno
push
movb
cmp
in
cmp
or
fwait
jns
xor
fldln2
dec
in
mov
inc
aam
mov
and
sub
mov
pusha
xchg
imulb
sahf
mov
rolb
es
icebp
ss
push
ss
push
lahf
dec
int3
xor
push
dec
xor
shl
xor
add
or
pop
cltd
es
xor
xor
and
test
sub
pop
xor
dec
add
inc
sarb
or
jae
push
leave
int3
sub
bound
add
fs
xorl
mov
cmp
out
add
pop
negl
js
sahf
test
adc
and
cltd
jbe
pop
adc
fs
dec
xor
orl
addb
lcall
pop
out
dec
cmp
ret
cltd
fs
shrb
xor
outsb
fidivrs
xchg
pop
test
mov
or
sub
into
inc
mov
mov
xor
cmovno
cmp
mov
dec
push
out
inc
fisttpll
dec
aam
out
imul
and
add
jno
hlt
cs
cmp
pop
xor
or
push
int3
test
adc
inc
subb
mov
xchg
jg
fiadds
sub
xchg
test
jmp
cmp
es
les
jne
pop
fsts
add
lret
test
rclb
cmpsl
nop
decb
outsl
xor
push
pop
sbb
std
rcrb
or
mov
jnp
ret
inc
or
xchg
push
insl
pop
xor
inc
fbstp
push
push
rol
aas
add
std
xor
in
xlat
inc
ds
cmpsb
mov
pop
xchg
sbb
push
fimull
push
ret
or
push
out
sti
loope
out
or
xlat
cmp
call
ljmp
lods
pop
addb
xchg
adc
xchg
sub
scas
jl
mov
int
dec
mov
dec
mov
imul
xchg
fmull
cltd
cmc
shll
bound
lret
pop
in
mov
push
out
adc
jl
out
inc
enter
aas
pushf
fsubl
aas
fisttpl
fwait
inc
jp
mov
mov
lahf
fsub
repnz
inc
mov
imull
xor
or
movsl
pop
cli
clc
stos
gs
and
sbb
stos
xorb
push
dec
cmpb
push
jae
add
scas
shlb
xor
pop
mov
in
sub
xchg
or
in
xchg
loope
mov
in
stos
lahf
and
jo
mov
mov
adc
addr16
lret
sarb
dec
outsl
xchg
sub
ds
or
cmp
cmc
mov
hlt
jno
enter
imul
lret
add
cmpsl
mov
popa
enter
les
push
pop
push
mov
add
sbb
jne
cmp
xchg
nop
push
sub
or
fiadds
js
repnz
adcb
jge
inc
in
mov
push
outsb
scas
inc
insb
lahf
sti
into
push
push
cmp
or
insl
in
pop
cmp
push
jp
and
mov
or
jecxz
or
mov
sbb
in
cmp
mov
test
sahf
jmp
xor
jns
push
roll
and
pushf
lret
xor
push
jb
pusha
fs
decb
mov
and
addr16
jnp
dec
jo
sbb
sub
push
jo
test
or
push
cmp
xchg
cs
sub
mov
sbb
lea
dec
les
sub
scas
adc
bound
fsubrl
sub
sub
xchg
jge
cmp
mov
sub
jmp
sti
mov
repz
adc
scas
lock
mov
lret
push
xchg
ljmp
or
out
mov
sub
jae
jae
hlt
inc
push
scas
lods
fwait
pusha
or
pushf
cltd
and
xchg
mov
ret
cmovns
inc
lods
mov
sbb
pop
inc
adc
imul
enter
pop
pcmpgtw
inc
push
mov
dec
movsl
pop
jb
add
cli
xchg
cmpsb
dec
je
inc
jmp
loop
push
mov
fldl
mov
icebp
jl
in
outsl
repz
scas
cmp
pushf
ret
scas
rcr
lcall
pop
popf
stos
into
and
jmp
std
aas
ja
test
fiaddl
xchg
or
aaa
jne
fnsave
xchg
cld
jmp
out
mov
xchg
cmp
sbb
lods
outsb
adc
or
lret
jmp
es
call
jge
add
hlt
mov
inc
dec
rclb
pusha
icebp
data16
cmp
push
mov
add
scas
xchg
ljmp
adc
push
lret
sahf
in
push
leave
sub
inc
outsl
push
dec
sti
and
xchg
jecxz
ds
scas
out
xchg
adc
and
faddl
lods
mov
in
lret
mov
xor
out
adc
nop
add
popa
loopne
xlat
das
add
fldcw
sti
lods
pop
adc
push
in
stc
xchg
ret
adc
stos
or
fisttpll
dec
out
sbb
sub
sbb
add
jae
dec
pop
clc
das
rorl
sbb
jecxz
mov
fcomps
or
push
xor
xor
fisubrl
paddd
lahf
out
out
dec
cmp
test
sahf
and
repz
adc
mov
add
xor
or
dec
cmpsb
sub
insl
dec
cmpsl
mov
sbb
mov
icebp
int3
adc
xchg
int3
xor
scas
insb
fldl
pop
or
pop
mov
aas
xor
clc
jbe
xlat
inc
fnstsw
in
add
std
fsubrl
and
je
daa
icebp
xlat
call
fwait
das
mov
adc
xor
mov
repz
lahf
ja
xor
adc
clc
xor
icebp
dec
adc
xchg
sub
rolb
pop
cmpsl
mov
bound
inc
in
xor
ds
cmpsb
inc
cmp
hlt
stos
mov
or
xchg
iret
rcrb
faddl
jp
cmp
or
dec
enter
mov
mov
jb
movsl
ljmp
pop
leave
cld
cli
mov
fucom
mov
jmp
xor
out
push
mov
mov
dec
xchg
fwait
js
jl
out
sbb
fstl
enter
shl
jnp
sbb
push
pusha
cmp
push
in
jnp
mov
mov
add
stos
sub
xchg
cmc
push
mov
mov
fs
jbe
adc
out
jmp
sbb
scas
jnp
xchg
xor
jp
int3
dec
sbb
mov
jge
sbb
sub
push
lret
pop
sarl
pop
xchg
pop
cmp
jnp
stos
test
and
addr16
out
rep
popl
inc
out
enter
ljmp
mov
mov
in
ret
jecxz
test
mov
pop
mov
xchg
outsl
rorl
fnsave
sahf
mov
loopne
daa
andb
stos
shrb
jg
mov
outsb
add
stc
fxch
jl
dec
xchg
xchg
jns
pop
jno,pt
xor
xchg
and
xor
imul
inc
add
aaa
and
push
inc
pop
mov
xchg
or
pop
sahf
add
insb
mov
enter
add
js
call
mov
sub
out
test
dec
scas
nop
cli
jle
inc
sbb
imul
fwait
add
test
fsubrp
adc
inc
in
jae
or
xchg
add
jmp
sbb
ror
adc
push
in
fsts
loope
mov
loopne
filds
dec
jge
addr16
pop
mov
les
mov
pop
orb
push
divb
sahf
nop
and
test
push
rcrb
cmpsl
je
es
lods
insl
addr16
outsl
mov
les
push
mov
push
imul
dec
add
in
test
iret
dec
std
or
ja
dec
adc
lret
push
mov
insl
aas
pusha
rcrl
sbb
aaa
mov
sub
cmpl
js
xor
sbb
fucomip
fiaddl
push
push
xor
rcrb
inc
ss
stc
push
pop
xor
pop
pop
loope
sbb
xor
add
cwtl
add
jge
xor
xchg
mov
out
push
mov
push
cmc
xchg
enter
orl
xor
shll
lcall
addl
xchg
jo
sbb
out
xlat
pop
in
mov
pop
dec
jbe
shlb
test
sub
ret
add
iret
fisttpll
pushf
out
pop
stos
in
scas
sub
int
sbb
ret
push
out
rclb
cmp
cmpsl
or
imul
lret
cmc
xor
push
cmp
cmp
add
xor
sub
jle
incl
outsb
cmp
cld
psubusw
out
fisubrl
div
mov
fsub
xchg
xchg
or
jne
in
mov
xchg
cmp
or
imul
mov
jo
pop
sub
movsl
aam
pop
mov
cmp
jecxz
pop
ret
mov
js
or
push
outsl
mov
push
into
add
xchg
jns
pop
dec
pop
imull
inc
inc
cmp
mov
inc
cmp
dec
inc
cmpsb
lock
rorl
mov
inc
out
xor
cmpsb
inc
lods
clc
or
movsb
sbb
out
js
loope
test
ret
insb
loope
xchg
push
mov
sahf
xchg
out
mov
adc
push
mov
fucomi
ss
jmp
push
orb
ja
inc
sbb
lock
pop
xchg
daa
test
mov
xchg
mov
lret
test
jnp
popf
and
rcrl
jnp
in
fdivs
pop
popa
mov
je
sbbb
inc
and
sub
sbb
adc
inc
mov
pop
lcall
outsb
mov
xor
adc
xor
pop
dec
inc
nop
fisubrs
cmp
test
inc
je
int3
imull
out
or
nop
dec
sub
pop
ja
testl
jnp
fsubrl
fwait
cmpsb
rclb
es
push
pop
imul
push
shll
out
sahf
into
jo
in
popa
dec
gs
xchg
orb
pusha
rclb
jl
addr16
fnstsw
int3
lcall
pmaxub
fmuls
cmpsl
inc
push
sbb
aad
jmp
arpl
xchg
push
inc
cmp
sub
test
loop
clc
stos
pop
xor
stos
fs
sub
nop
sbb
mov
out
popf
push
int
iret
push
or
inc
test
scas
jle
outsl
rolb
mov
push
stos
lods
pop
mov
lea
jnp
roll
ret
jmp
dec
dec
filds
cmp
lcall
mov
and
mov
sub
loopne
jl
or
adc
mov
or
push
or
lods
xchg
cli
insb
shll
mov
cli
mov
mov
ljmp
mov
inc
lcall
xchg
pushf
mov
push
cmp
xchg
cmp
nop
or
sbb
das
pusha
mov
xchg
jg
not
imul
fistps
push
es
jo
call
dec
cmp
ficomps
jb
push
test
xor
pop
pop
jae
push
dec
sbb
lods
or
dec
mov
push
push
iret
sub
cs
push
inc
mov
push
push
adc
jno
lods
ret
mov
icebp
pop
sahf
inc
adc
xlat
sar
xor
repz
xor
sub
jno,pt
jo
cmp
dec
outsl
push
mov
pop
bound
jge
test
add
test
rcl
stos
idivl
popa
fists
test
lods
mov
out
ljmp
aad
cmp
gs
jle
mov
aad
lea
and
pop
in
sub
pusha
cmp
int3
popf
add
mov
fwait
xchg
xchg
xchg
push
notb
jne
mov
cmp
xchg
scas
lret
push
test
xchg
mov
aaa
add
test
out
xchg
sbb
add
ret
jae
mov
and
repnz
lret
lret
incb
cmpsl
ljmp
rclb
lds
dec
cmp
clc
int3
push
fidivrl
mov
and
test
mov
movsb
pop
fninit
cmp
fadd
rcl
sbb
jp
pop
mov
insb
test
aas
sar
lods
fcomi
xor
add
push
sbb
add
push
lock
scas
or
pop
les
push
mov
push
cld
stc
add
sahf
insl
cmpsl
add
enter
outsb
imul
push
loopne
mov
adc
xor
rorb
sbb
cmp
stos
adc
lock
dec
mov
xor
sbb
mov
xchg
inc
inc
cs
sbb
sub
mov
or
and
hlt
stos
dec
or
test
lods
or
popa
mov
das
jp
in
shrl
adc
int
xchg
cmp
sbb
push
imul
sub
xchg
sahf
sbb
shrb
leave
jo
pop
fwait
les
adc
je
int
sbb
push
test
mov
mov
lock
shl
mov
cmpsb
testl
and
push
shrl
jmp
stos
push
jmp
lock
int
mov
mov
fsts
rcll
push
push
iret
rol
xor
jns
test
xchg
inc
out
add
js
data16
mov
pop
test
mov
cmp
js
sub
pop
cmp
inc
jge
enter
mov
and
jne
adc
cmc
mov
aas
movsl
mov
sahf
ss
add
or
pop
cs
iret
int3
outsb
xor
pop
imul
sub
push
negb
lea
xor
fcoml
shl
mov
sub
dec
add
inc
sbb
sbb
fmuls
mov
jne
pop
loop
pop
pop
lcall
lret
cmpsb
or
lods
aaa
int3
mov
dec
mov
sahf
in
mov
and
ljmp
pop
std
xchg
mov
xchg
jns
dec
push
inc
out
mov
cmpsb
es
pop
inc
mov
out
add
jmp
add
popf
mov
notb
fidivl
xor
dec
sbb
push
xchg
cmp
gs
orb
sbb
dec
mov
inc
sarb
rorl
daa
call
dec
push
lret
stos
xchg
scas
or
cmovo
push
dec
out
jmp
into
lods
pusha
push
adc
xchg
cli
jae
xchg
jnp
xor
mov
and
pop
mov
test
cmp
cmp
in
jae
aaa
push
popf
roll
jns
jne
and
mov
mov
hlt
xor
lods
mov
sti
dec
fistps
sub
dec
rcll
jmp
cli
add
sbb
xor
xchg
sbbl
pop
scas
popa
out
out
jecxz
lcall
or
dec
adc
push
push
roll
fsubl
cmp
pop
je
cmp
mov
call
xacquire
mov
push
mov
daa
push
ret
fucomp
fistpl
daa
mov
dec
xor
dec
stos
cmp
inc
test
adcb
mov
test
push
sti
xor
push
mov
and
nop
adc
pop
mov
add
insb
adc
mov
outsl
sub
sbb
subl
adc
mov
addr16
sbb
jb
sub
and
push
test
pop
pop
adc
adc
mov
push
lret
push
or
mov
fnstsw
push
aaa
mov
dec
cltd
adc
outsl
decb
scas
pop
add
cmp
sbb
push
cmp
pop
cs
inc
stos
push
and
imulb
int3
rcrb
gs
push
or
mov
loopne
pop
add
inc
and
pop
sbb
fimull
inc
outsb
xchg
ret
sbb
ds
mov
mov
adc
adc
xchg
xlat
inc
jbe
call
sbb
iret
mov
sbb
dec
pop
adc
fcoms
dec
pop
pusha
pop
dec
cmpsb
mov
dec
mov
bound
xchg
mov
out
and
sahf
jno
jmp
mov
xor
jno
enter
fldl
bound
push
pop
das
mov
fidivl
out
mov
ss
jae
fwait
pop
lcall
or
inc
inc
lock
dec
lcall
xor
pushf
sub
jmp
loopne
and
pushl
cli
xchg
sbb
adc
cmp
xchg
add
mov
or
inc
mov
mov
cmp
cld
adc
lret
gs
leave
inc
inc
jg
and
aam
js
sbb
stos
jg
add
pushf
adcl
hlt
xchg
cmp
sbb
pop
iret
cmpl
jle
cmp
mov
test
sub
push
sub
cs
int
add
cli
push
xlat
inc
or
js
mov
add
dec
into
pop
stc
lds
data16
pop
xor
inc
ja
scas
inc
jno
mov
inc
mov
mov
xlat
sbb
adc
jg
fadds
xchg
out
divb
shll
imul
scas
sbb
mov
cmp
add
push
push
sarb
popf
repnz
adc
cmp
or
jns
jge
in
loope
insl
and
push
inc
mov
loope
pushf
scas
pop
repnz
push
loopne
push
jb
hlt
xchg
shr
scas
add
mov
mov
dec
jo
ljmp
shrb
jmp
jo
out
push
jae
adc
add
jg
inc
jg
pop
out
or
add
aaa
mov
xor
xor
push
in
and
outsl
out
in
insb
test
sub
xchg
movsl
xchg
out
pop
push
and
jbe
adc
xchg
ljmp
scas
lret
daa
mov
adc
inc
ret
inc
mov
xchg
pushf
dec
outsl
mov
cmpsb
ja
sbb
jl
mov
dec
repz
rorl
les
jmp
mov
jne
inc
pushf
xchg
mov
pop
bound
outsl
xor
push
ljmp
xchg
mov
jo
xor
bound
enter
pushf
jb
neg
push
pop
inc
push
mov
push
shlb
jmp
xchg
jecxz
mov
cld
sti
mov
out
jns
push
data16
testb
jp
sbb
sbb
inc
bound
xor
xor
jb
xorb
loope
aaa
cmp
push
out
call
push
jp
jbe
test
mov
adc
movsl
or
aaa
xchg
or
cwtl
inc
outsb
out
call
cli
loop
cmpsl
xor
mov
into
es
pop
sbb
push
enter
scas
jae
iret
inc
lcall
jae
leave
ret
cmc
mov
int3
xor
push
iret
fdivl
je
lods
jp
int
fsubl
inc
cmc
pop
pop
adcl
dec
mov
adc
jbe
xor
scas
cmpb
mov
xor
add
push
push
insb
clc
outsl
out
and
jle
add
jmp
ror
mov
xlat
cmp
or
or
xchg
lret
aad
and
loop
add
imul
outsb
mov
cld
iret
add
jb
cmp
push
lret
or
lahf
inc
int3
pop
fwait
bound
in
int3
cmc
adc
shll
inc
sub
mov
xchg
imul
jmp
adc
jmp
sti
jnp
mov
mov
test
mov
scas
push
insb
sub
sbb
movsl
adcb
push
les
adc
sub
fwait
movups
adc
cwtl
ljmp
out
jecxz
inc
push
adc
rcrl
and
inc
sbb
repnz
shlb
sub
cli
adc
shr
sub
pop
mov
sub
enter
mov
push
lock
and
pop
mov
out
loop
call
fists
or
rorl
jg
add
cmp
scas
mov
adc
into
push
or
inc
ror
ljmp
insl
insl
or
sbb
xor
lret
in
aad
pop
out
movsl
mov
movsb
sti
and
aas
push
sbb
std
add
dec
cld
popa
fisubs
mov
sub
sar
mov
xor
in
ljmp
lcall
lcall
mov
mov
push
adc
testb
aas
or
dec
loope
lret
in
mov
xchg
scas
pop
xchg
dec
gs
bound
testb
pop
pop
adc
clc
jo
out
dec
lods
xorb
lret
push
call
shll
xchg
adc
sub
dec
arpl
ja
addr16
xor
es
jo
jae
cmpsl
std
jno
mov
fcomp
cmpsl
lea
mov
jmp
das
mov
push
sub
cs
pop
shl
jnp
into
mov
int3
in
shlb
push
sbb
adc
in
pusha
bound
shll
pop
mov
mov
call
cmp
push
xchg
add
cs
sahf
add
mov
adc
cs
pop
ret
jp
ss
mov
out
data16
inc
pop
mov
mov
push
rorl
loopne
clc
sbb
lahf
or
push
adc
sub
inc
and
sarb
and
js
pop
hlt
cmp
inc
mov
test
sti
cmpsl
lds
sub
in
cmp
mov
int3
inc
push
movsb
xchg
ja
ljmp
jno
pop
inc
jge
cmp
js
ss
sbb
rcrb
aad
in
or
frstpm(287
dec
stos
imulb
sbb
adc
cmp
mov
push
inc
adc
xchg
lret
pop
or
mov
push
fucomp
push
or
ljmp
mov
or
xor
mov
dec
iret
sub
push
cmc
pop
pushf
data16
or
lea
stc
inc
pop
push
cmpsl
test
xchg
cmp
aam
clc
push
mulb
jg
mov
shl
mov
and
in
mov
jbe
add
stos
imul
xor
inc
adc
out
and
mov
call
cld
fldl2e
xchg
xor
sbb
mov
push
cmc
in
xor
fcmovnu
jbe
xchg
xchg
jnp
mov
test
jns
or
out
mov
or
inc
dec
shll
mov
push
jmp
sti
jbe
shl
xchg
mov
sahf
lahf
mov
popf
lret
scas
test
xlat
push
jnp
and
cmp
data16
push
sub
iret
fsubrs
negb
shl
daa
sti
or
push
mov
cmp
add
lods
push
addr16
fsubr
rcrl
scas
xchg
in
fbld
mov
add
jge
mov
or
jl
iret
jo
adc
push
mov
fwait
lret
push
bound
nop
cmpps
movsl
loopne
cmp
add
mov
enter
fdivrs
cwtl
out
cld
ja
in
sti
sub
jno
out
enter
stos
sbb
mov
movsl
mov
push
popa
or
orb
jmp
imul
stos
pop
add
shr
mov
xchg
push
push
mov
jne
adc
pop
xchg
adcl
mov
fcoms
mov
push
into
movsl
or
dec
lret
in
test
imul
sbb
mov
test
add
push
lods
ret
cmc
in
stos
shll
iret
pop
cmp
ja
lcall
push
mov
inc
cmpsl
dec
jne
mov
jb
pop
sbb
xchg
shl
sbb
sbb
test
insl
enter
inc
adc
ret
jb
gs
shlb
test
jmp
es
dec
in
adc
ret
inc
mov
call
mov
insb
push
jmp
out
pushf
es
divb
addb
sub
mov
out
divb
movsl
push
add
cmp
sub
div
add
out
pop
jp
sub
xchg
xchg
in
push
dec
sub
fstpt
push
insb
ljmp
mov
jle
xor
or
jge
add
and
sti
mov
mov
sti
fnsave
rclb
sbb
sub
jae
scas
js
sti
lock
xor
sub
adc
adc
int3
add
out
mov
cmpl
xor
mov
fsubrl
or
shlb
cmp
push
mov
cmp
addb
fwait
inc
outsl
les
lods
outsl
imul
inc
sub
and
stc
test
pop
sub
adc
push
daa
fnstsw
mov
mov
dec
cmp
aaa
sbb
jp
jno
pusha
cmp
rcrl
inc
xchg
xor
aas
ret
mov
hlt
pop
fsubrl
lahf
les
nop
int3
dec
icebp
sbb
mov
ret
dec
jns
shufps
pop
lea
mov
sbb
cmovnp
ret
dec
in
mov
sub
je
leave
push
jns
mov
push
xor
jmp
xlat
sar
jl
loope
jmp
insb
pop
in
add
push
pop
xlat
stos
aaa
or
outsl
xchg
outsb
pop
ficoms
pop
cmp
pusha
icebp
sbb
popa
or
adc
addr16
in
nop
dec
mov
popf
push
sbb
cli
inc
jmp
rclb
add
arpl
mov
add
test
or
dec
rcrl
lock
mov
jne
pop
jnp
daa
dec
mov
repnz
popf
test
add
mov
adc
popa
add
ror
stos
notl
das
lret
mov
stos
mov
cmp
adcb
daa
add
fwait
rcr
jg
pusha
iret
sbb
push
add
xchg
jmp
xchg
es
sbb
fimull
adc
xor
or
mov
je
enter
pop
push
pop
dec
or
test
adcb
daa
out
sbb
jge
xchg
jnp
sbb
inc
xor
adc
or
inc
add
cltd
js
dec
xor
sub
adc
test
inc
sbb
or
cmpsl
sbb
dec
mov
pop
xor
rcrl
mul
je
sbbl
and
inc
xchg
sub
lret
mov
or
mov
daa
std
jg
xchg
adcl
in
or
or
clc
jge
lret
xor
in
xchg
andb
jl
aam
scas
scas
ss
lcall
repnz
cmpsb
repz
xor
cwtl
xor
in
popa
dec
push
cs
sub
pop
xchg
icebp
mov
je
jno
in
enter
test
leave
xor
pop
fistl
mov
push
cli
inc
adc
jnp
aam
in
mov
adc
notb
gs
jmp
hlt
xchg
ret
icebp
xor
lods
push
test
pop
sbb
int3
xchg
popa
leave
aas
sbb
xor
sbb
mov
push
sti
and
nop
jl
or
fscale
popf
mov
mull
pop
mov
xor
xchg
ficoms
mov
xlat
mov
int3
jb
loopne
lock
jne
call
insb
rcr
dec
mov
ljmp
push
repnz
pop
add
repz
pop
lahf
cmp
xor
hlt
inc
out
or
jnp
pop
outsl
cltd
pop
lods
stc
rorl
fstp
sarl
pop
in
and
fnstsw
lret
cwtl
sbb
in
add
jo
sub
inc
in
mov
xor
xor
fisubl
pop
out
cli
je
jo
sub
lret
adc
nop
fbld
pop
jns
or
xchg
pop
adc
aam
inc
xchg
stos
mov
dec
jp
sbb
arpl
cli
xor
leave
and
scas
arpl
mov
inc
mov
js
push
add
mov
dec
nop
lret
pushf
aas
sub
or
sub
arpl
sub
addr16
mov
es
adc
movsl
mov
mov
and
push
pop
adc
jmp
out
adc
mov
lea
jl
lods
mov
sti
in
or
mov
enter
pop
test
lret
pop
dec
inc
push
mov
xchg
loopne
dec
fcompl
inc
jge
sbb
push
inc
hlt
mov
lret
xchg
mov
outsl
sbb
lcall
stos
scas
lret
pop
xor
jl
aaa
cmp
add
mov
mov
jno
or
iret
xchg
cmpsl
cmp
sub
int3
test
sbb
push
xor
lahf
mov
inc
and
inc
jp
scas
lret
xchg
orb
ret
daa
mov
push
cmp
pop
fisttps
ret
inc
nop
movsl
out
mov
mov
add
cmp
pop
xchg
mov
lret
jle
inc
jl
mov
pushf
mov
movsb
and
push
jns
imul
dec
sub
ja
test
mov
cmp
jae
mov
add
push
leave
xchg
out
mov
in
addr16
mov
ret
test
adc
out
cmp
add
sub
inc
push
jns
or
cmc
stos
fsubr
xlat
or
out
pop
insl
je
shl
lret
add
cmp
push
jle
fisttpl
lcall
xchg
sub
pop
xchg
imul
pop
cli
fwait
sti
jle
sahf
jecxz
fimuls
repnz
jnp
aas
call
and
inc
add
adcl
ja
inc
jno
sbb
pushf
into
inc
lea
push
add
inc
fadd
adc
or
movsb
notb
vxorps
rcrl
ljmp
push
lds
xchg
mov
insl
pop
lea
aad
dec
leave
jne
mov
in
daa
xor
addb
adc
push
aas
mov
loop
in
fidivrs
mov
cmp
test
jecxz
fwait
cwtl
cmp
jp
jge
jg
push
xchg
aad
dec
mov
jb
nop
dec
cwtl
int3
fwait
out
dec
movswl
cmp
jle
aad
mov
fsubrl
mov
xchg
sub
lcall
pop
pushf
sti
imul
inc
xor
movsb
and
sbb
cmc
push
in
dec
mov
movsl
adc
sbb
mov
push
stos
pop
sbb
xor
sarb
pop
fs
fnstenv
daa
jge
es
push
out
mov
jp
in
inc
push
loop
inc
outsb
setle
shl
rcll
add
sub
sti
jbe
fcomp
jnp
inc
mov
push
lods
int
pop
fistps
idiv
cmp
pop
sub
jns
shlb
adc
sub
mov
xchg
jle
add
mov
sub
cmp
pop
int
xor
push
test
out
pop
xchg
pop
inc
jl
mov
mov
xor
fdivrs
testl
cmp
add
mov
aas
and
fstps
mov
push
sub
insl
ljmp
test
xor
iret
push
mov
jnp
loope
jle
xchg
sub
sub
xchg
mov
push
ret
cltd
insb
jmp
xchg
cmp
cmp
movhlps
cmc
jmp
or
roll
cmp
mov
cltd
jg
xor
adc
fimull
inc
vxorpd
out
lods
xchg
jbe
add
cld
repz
ss
icebp
add
cmc
jbe
out
sbbl
aad
movsl
sti
idivl
addr16
filds
sti
enter
jl
loope
push
icebp
mov
fsubrl
jo
add
repz
xchg
mov
ficomps
fstpt
jmp
enter
stos
push
pop
fisttpll
sti
mov
fisttpl
cwtl
mov
daa
push
mulb
stos
jle
mov
and
or
aad
adc
push
rcrb
mov
jmp
insl
bound
dec
mov
or
jmp
or
sub
pushf
cli
es
cmc
pop
lock
shrl
lock
jnp
mov
jl
cmp
mov
rcll
push
inc
or
ljmp
repz
bound
jnp
jl
mov
adc
sarl
mov
hlt
inc
inc
loope
test
cmp
lret
lcall
add
mov
mov
mov
rcr
lret
icebp
scas
jle
test
add
xchg
pop
ret
sti
jb
popa
mov
mov
add
push
push
xchg
or
sbb
leave
or
lcall
popa
icebp
gs
imul
movsl
pop
movsl
inc
mov
sarl
adc
or
fadds
push
das
or
lea
neg
jmp
inc
out
and
xor
andl
mov
sarb
push
pop
scas
push
call
lret
outsb
gs
cmp
sub
jae
fldenv
pop
jmp
stos
sbb
push
int3
mov
outsb
aaa
fdivs
lea
mov
aad
pop
loope
out
andl
add
pusha
pop
call
sub
lock
outsl
loop
popf
ds
jp
inc
push
pop
xor
jg
jmp
push
or
xchg
xchg
and
mov
xor
pop
add
jecxz
dec
adc
jp
imul
daa
push
std
push
sbb
pop
mov
push
mov
fmuls
into
insl
into
xor
orb
js
or
call
pop
rcrb
ss
test
call
cmp
ss
xchg
pop
sti
xor
movd
xchg
js
ljmp
and
and
in
add
imulb
and
leave
aad
repz
mov
ret
xor
aas
fwait
sbb
arpl
fcomip
jl
mov
fistpl
xchg
xchg
dec
movsb
jb
in
cmp
cmp
mov
or
pop
into
mov
lahf
gs
and
iret
cmc
or
sbb
andl
aam
xchg
scas
cmpsl
insl
add
repnz
ret
clc
lea
push
push
repnz
ja
mov
out
addb
add
push
movsl
cli
pop
xchg
mov
mov
test
cmp
rolb
arpl
aad
mov
mov
sub
push
xor
jno
add
movsb
outsl
fsubl
or
xorl
mov
jo
outsb
and
dec
subl
int
or
sbb
in
add
sbb
daa
xlat
adc
in
cmp
dec
test
fdivs
xchg
popf
ljmp
pop
push
xor
and
outsb
xchg
cmc
inc
out
dec
hlt
fs
popf
test
scas
mov
jmp
mov
mov
cmpsl
in
lock
xchg
sbbl
pop
pop
into
outsb
or
dec
xor
ss
mov
push
loopne
inc
xor
fsts
mov
or
test
data16
pushf
or
push
bound
orb
pop
rcl
xchg
testl
jae
test
and
int
adc
and
nop
hlt
and
mov
repnz
and
dec
or
mov
lahf
lods
je
mov
cmp
inc
adc
sub
add
out
pushf
xchg
xor
sub
sbb
gs
cmpb
mov
lret
arpl
push
repnz
adc
icebp
jno
out
xchg
sub
sub
inc
out
imul
fisubs
pop
out
lods
movsl
pop
aas
cltd
or
inc
xlat
shll
test
push
out
lcall
mov
mov
adc
xlat
push
push
adc
or
sub
sub
aad
test
ss
pop
es
les
or
icebp
cmpsb
push
and
adc
sbb
lret
cmpsb
lret
inc
sbb
ljmp
lea
popa
adc
stc
jne
xor
mov
loop
test
and
jmp
fisubrl
test
fbld
mov
pop
jno
mov
in
lock
adc
and
pop
push
stos
add
insb
xor
sahf
sbb
add
into
sbb
lods
ljmp
push
in
push
mov
mov
lods
in
dec
mov
mov
and
pop
mov
inc
sub
push
movsl
loope
fcmovne
test
xor
or
adc
mov
cmpsl
sub
xchg
dec
or
lret
push
repz
je
mov
fbld
jns
je
inc
mov
cmpsb
mov
repnz
pushl
mov
or
push
stos
cmp
ljmp
shlb
inc
loopne
jno
out
mov
and
xchg
mov
imul
cs
lret
andl
xlat
and
ss
aad
pushf
test
fs
jns
test
pop
mov
ljmp
in
popa
arpl
cltd
js
out
push
xor
addb
sbb
or
lds
mov
mov
decl
mov
cli
pop
inc
std
pop
cmc
aaa
ljmp
pop
ror
imul
mov
std
shlb
ret
push
xchg
cld
daa
sti
sbb
push
and
ror
adc
fisttps
and
ret
pop
divl
bound
add
mov
dec
fcomps
decb
add
ss
dec
jge
adc
arpl
push
cltd
iret
idivb
cmpsb
jle
fxch
sti
and
imul
jmp
dec
scas
int
in
push
jl
ret
adc
inc
cmp
in
xchg
andb
and
jecxz
jb
mov
gs
in
inc
imul
lea
cmp
je
sbb
inc
ljmp
lret
inc
xchg
fst
pop
pusha
rorb
aas
sbb
push
push
xchg
mov
data16
aaa
cltd
push
int
xor
jcxz
cmp
aaa
test
add
sbb
pop
fs
rorl
in
in
and
jb
jns
dec
push
sbb
cld
adc
mov
push
sti
mov
xor
ljmp
mov
adc
stos
clc
xchg
mov
test
sbb
mov
and
fwait
sub
jg
xchg
push
out
mov
cmp
push
push
cmp
pop
push
stc
jo
setnp
lods
pop
xor
cmp
gs
push
mov
xor
cmp
lcall
dec
aam
lret
gs
xlat
mov
push
in
sbb
jnp
mov
push
cmpsl
and
adc
in
loop
dec
test
push
jge
cmc
and
sbb
adc
dec
mov
leave
push
mov
mov
ljmp
pushf
mov
test
rcrb
or
push
out
fwait
les
lock
scas
mov
mov
mov
add
mov
in
outsb
xchg
fisttpll
sub
dec
sbb
pushf
adc
inc
mov
imul
test
outsl
push
inc
dec
jbe
pop
sub
scas
dec
dec
aam
or
mov
jp
xchg
jg
and
mov
lock
mov
ret
push
mov
mov
stc
xor
or
repz
test
pushf
outsb
out
lret
lds
filds
pop
jge
mov
cmpsl
scas
andb
cmp
sbb
jns
xchg
nop
jg
jbe
mov
mov
adc
cmp
add
int
cmp
roll
push
popf
leave
loope
pop
mov
mov
nop
cmpsb
ret
push
mov
adc
outsl
push
cmc
mov
sub
sbbl
xor
mov
enter
loope
jmp
bound
out
loopne
mov
mov
push
dec
ja
sahf
cmp
subl
pushf
mov
ss
js
adc
cmc
or
fistps
data16
lea
test
es
sbb
ds
mov
lcall
xor
loopne
xchg
or
mov
mov
cmp
gs
js
xchg
xor
iret
mov
mov
inc
rclb
dec
xor
ficoml
mov
shlb
les
xchg
movsl
or
inc
aaa
jge
xor
mov
and
xchg
rcl
mov
mov
push
adc
add
sub
repnz
jns
dec
or
push
and
inc
mov
cmp
bound
enter
xchg
cmpsl
outsl
outsb
insl
repnz
cmp
dec
mov
fwait
sub
sbb
pushf
xor
mov
xchg
out
rclb
je
dec
fldl
jns
push
data16
std
scas
sahf
sub
xchg
jnp
scas
and
das
mov
xchg
sbb
xchg
mov
sub
or
pop
cmp
cmp
jb
mov
bound
push
sub
lds
adc
cmpsl
cwtl
inc
clc
or
cmc
dec
mov
mov
and
jb
jmp
adc
ja
loopne
mov
lcall
mov
aas
jb
scas
sub
divl
call
mov
adc
jge
and
fidivs
divl
sarl
xor
imulb
js
pusha
lcall
mov
adc
sbb
cmpsl
lods
test
sub
scas
and
pop
or
mov
adc
aam
mov
cmp
mov
push
mov
cmp
lods
push
jbe
mov
mov
ret
inc
sbb
or
shrb
ss
sbb
inc
pop
dec
cmc
cmpl
loope
clc
pop
cmp
imul
dec
pop
mov
jg
jp
clc
insl
mov
mov
jne
adc
rcr
and
jne
xchg
pop
je
or
das
and
push
pop
iret
fisttps
and
xchg
lods
mov
inc
pop
and
cmc
mov
or
add
push
scas
mov
mov
add
pushf
jle
and
adc
fwait
mov
and
aad
int
mov
enter
in
mov
into
mov
inc
and
cs
cmp
dec
xchg
and
and
and
pusha
sbb
leave
ret
hlt
mov
dec
sub
mov
xchg
insl
js
mov
in
mov
jno
add
jb
push
dec
inc
push
mov
mov
sub
sub
mov
sub
repnz
nop
stos
lcall
cltd
hlt
test
dec
jae
push
lds
je
pop
cld
push
adc
cltd
or
fs
adc
into
push
js
jg
and
xchg
daa
sub
lods
iret
mov
and
push
ja
addr16
mov
lret
dec
sub
pop
ja
insl
jno
sti
push
mov
lods
shll
or
mov
fldcw
jbe
push
adc
pop
xlat
push
dec
bound
inc
inc
testl
push
sub
push
xor
aam
cltd
and
xor
lcall
lahf
or
mov
dec
inc
aas
idivl
jno
mov
loop
shlb
cmp
enter
mov
icebp
adc
fistps
fstl
das
jle
mov
enter
and
mov
cmp
jecxz
sub
sahf
push
iret
loope
fidivrl
push
ja
pop
dec
xlat
xchg
adc
out
mov
adc
adc
push
loopne
sti
mov
addl
mov
xchg
in
out
mov
cmp
bound
dec
mov
icebp
leave
mov
dec
pop
int
xchg
imul
push
int3
pop
xchg
mov
enter
iret
mov
roll
push
mov
sub
inc
fidivrs
lret
adc
iret
in
hlt
sub
mov
add
popf
sub
jne
sub
dec
cmc
leave
popa
inc
ljmp
fisttpl
mov
or
stos
mov
icebp
jo
inc
cltd
in
add
dec
push
fldl
add
hlt
aam
and
or
mov
rcl
std
push
jl
in
enter
adc
jle
popa
je
cmc
add
xchg
push
je
stos
out
cmp
pop
inc
push
pop
mov
in
adc
jp
jo
pop
je
aaa
sti
jg
pop
sbb
adc
imul
and
mov
mov
sub
jg
xchg
cmpsl
in
fistl
jbe
xchg
aaa
in
clc
push
hlt
test
js
movsb
jns
test
mov
pop
int3
cmpsb
dec
inc
iret
movb
xchg
mov
mov
and
subl
or
pmuludq
pop
imul
push
cs
stos
std
fs
test
or
and
test
cmpsl
aas
xchg
and
sub
mov
aad
dec
cmc
pusha
push
call
add
or
push
mov
lret
shl
adc
movsl
std
cmp
clc
pop
or
icebp
mov
sti
leave
mov
mov
dec
or
dec
jne
fcomps
add
add
out
mov
dec
call
pop
lea
push
push
in
ss
out
imul
xchg
dec
cmpsb
inc
push
inc
jo
dec
inc
xchg
sub
jmp
loop
inc
add
dec
imul
insl
cmp
lds
push
out
pop
add
into
push
lret
cli
mov
mov
push
ljmp
jbe
in
push
std
jmp
outsb
pushf
or
ret
sbb
jle
and
mov
in
loope
cs
in
callw
loope
and
je
int
xlat
xchg
lods
xchg
pop
ljmp
icebp
pop
adc
pushf
movb
aad
or
push
or
into
mov
dec
icebp
shll
jp
insl
inc
mov
push
inc
in
jecxz
imul
fdivrl
insb
stos
sub
test
inc
aam
lcall
jmp
ja
sub
clc
xor
push
push
addr16
in
mov
dec
lods
sbb
pop
cmc
loopne
leave
pop
shll
insl
scas
add
and
and
and
mov
fcomip
jns
mov
inc
cltd
ret
adc
push
inc
push
adc
cld
js
pop
mov
dec
out
repnz
ljmp
add
out
adc
mov
fldt
ret
les
scas
mov
arpl
push
fs
stos
pushw
cmp
shlb
lahf
pop
push
xchg
xchg
cs
xchg
rcll
adc
sub
pop
aam
pop
arpl
lret
mov
ds
mov
and
mov
sbb
pop
repz
pop
jmp
mov
mov
ds
xchg
loope
dec
subl
popa
pop
lods
xchg
mov
or
sub
xchg
inc
test
dec
je
jmp
data16
jbe
cmp
outsl
popa
inc
jecxz
adc
push
insl
mov
dec
pop
cmp
lea
xor
mov
add
mov
xabort
cmpsl
or
or
cmp
sbb
mov
mov
data16
cli
mov
or
clc
add
scas
jbe
add
and
mov
loope
in
imul
lock
adc
aas
push
divb
push
lock
outsb
mov
cltd
mov
test
xor
fisttpll
jb
xor
xor
es
mov
movsl
dec
push
add
mov
xor
rcr
lods
add
and
das
dec
ror
and
shlb
pop
aad
into
or
cltd
sysret
rcll
add
pusha
stos
inc
dec
out
sahf
inc
shrb
clc
fsubrs
or
cmc
xor
call
jne
mov
test
add
lods
mov
and
sahf
aam
push
lcall
push
out
mov
popf
jbe
mov
cmpsl
pop
xor
mov
addr16
sub
cmp
int3
xlat
jg
bound
dec
scas
push
xlat
sbbl
cmp
dec
push
cmc
jp
xchg
mov
clc
lds
push
out
aad
lods
scas
inc
sub
icebp
pushf
filds
and
insl
addr16
dec
cmp
cmp
ret
inc
inc
cmp
test
lcall
sbb
inc
mov
cli
or
out
adc
in
fdivs
jge
sbb
push
lock
xor
gs
adc
loopne,pt
daa
mov
lretw
mov
jo
jbe
popf
repnz
jb
add
xor
dec
test
fwait
pop
or
call
jo
cmp
add
bnd
es
push
jae
push
xor
es
ds
testb
sbbb
pop
inc
shll
jecxz
out
out
push
pop
cmc
call
inc
in
mov
sub
jnp
sahf
mov
mov
enter
lret
adc
cmp
mov
lcall
lcall
mov
enter
sub
rorb
sbb
push
aaa
xchg
loop
out
mov
lods
out
sub
in
out
jl
lds
mov
or
cmp
mov
ret
pop
in
and
gs
scas
and
mov
mov
sbb
movsb
setnp
jg
push
adc
push
in
mov
inc
notb
lcall
sbb
sbb
jo
subl
pop
mov
leave
dec
and
jp
into
and
push
inc
push
push
ds
scas
pop
mov
add
addr16
loop
cmp
ficompl
and
fisttpll
sub
cmp
pusha
insl
lret
gs
int
jae
push
add
dec
mov
mov
aad
lret
cs
gs
outsb
or
mov
xor
leave
or
xchg
stos
inc
jno
fs
bound
xor
cmc
mov
jle
add
and
pushf
push
xor
sbb
push
shlb
pop
aaa
loope
insb
jecxz
xlat
stc
cmp
test
fs
imul
or
out
jecxz
mov
outsl
mov
lds
pop
push
daa
in
dec
add
clc
icebp
test
sub
dec
adc
and
in
mov
add
xchg
push
cwtl
mov
in
push
xor
dec
pushf
js
push
jl
pop
dec
dec
inc
cltd
pop
dec
dec
sahf
jmp
jmp
popa
rcrb
mov
ja
mov
pop
add
into
fisttpll
adc
mov
cmp
test
fadd
mov
push
and
adc
fbld
out
mov
inc
ljmp
mov
mov
cmp
test
test
mov
push
and
push
enter
popf
adc
jg
dec
mov
jecxz
inc
and
mov
pop
and
mov
xor
out
in
adc
mov
dec
imul
sub
push
adc
lea
sahf
fstps
in
lcall
add
mov
pushf
std
jne
aad
push
mov
imull
cs
imul
sbb
das
jne
pop
push
or
adc
ja
repnz
int3
les
xchg
sbb
test
inc
cmpsb
popa
and
iret
arpl
add
xor
fistl
push
jbe
jp
mov
insb
adc
mov
testl
loope
shll
and
sarb
rcrb
mov
pusha
push
mov
and
imul
vpinsrw
or
cmovb
shl
in
jg
jns
mov
sbb
scas
pop
inc
xchg
mov
outsl
mov
dec
popa
movsb
je
push
loop
outsb
ljmp
mov
xor
aaa
mov
fisubrs
loope
enter
repz
js
cmp
test
out
outsb
dec
jge
xchg
movsb
or
orl
ljmp
mov
roll
test
cwtl
ret
cltd
push
push
dec
sar
jb
add
aad
xchg
sbb
stos
sbb
arpl
fsubs
dec
ss
mov
xlat
out
imul
popa
aas
inc
sub
mov
arpl
fimull
sbb
or
dec
cmc
lcall
xchg
inc
mov
mov
push
jnp
jnp
ja
loope
add
int3
sbbl
add
push
popa
fisttps
inc
xchg
cmpsl
aam
adcb
xorl
inc
inc
xchg
in
jns
xchg
sub
sbb
das
repnz
in
jae
rorl
icebp
pop
arpl
repnz
xor
call
xor
dec
mov
jno
cmp
xor
adc
fisubs
leave
push
sbb
rcrb
sti
xlat
imul
sub
xor
fwait
xchg
add
sbb
lods
add
jecxz
mov
dec
das
out
es
outsl
xchg
mov
push
in
mov
cwtl
fists
jmp
dec
pop
insl
or
cwtl
call
shlb
lahf
xchg
rclb
mov
cld
push
pop
in
lds
pop
dec
mov
pop
mulb
mov
cmp
xor
iret
fnstenv
fstpt
mov
xchg
mov
and
xor
adc
lods
gs
cmpsl
mov
addr16
fucom
pop
or
sbb
rol
out
ja
in
pusha
adc
jo
inc
lds
pop
movsb
daa
addr16
gs
or
push
pop
js
std
inc
andl
stos
imul
or
sub
sub
movsb
sti
pop
je
fildl
jmp
repz
jne
pop
jne
cmp
push
clc
stos
fwait
push
or
jle
and
sar
fistpl
xchg
mov
push
push
add
scas
pop
mov
and
repnz
rcrb
insb
pop
inc
jne
test
pop
aam
sarl
add
daa
add
sbb
fwait
dec
rcr
mov
aas
les
xorb
div
pushl
pop
sbb
outsl
jne
jecxz
je
push
pop
jne,pt
std
pop
aaa
pop
in
dec
cmp
push
dec
int3
insb
xchg
test
es
fdivl
push
pop
fwait
dec
add
jg
loop
cmp
or
add
and
fstp
xchg
mov
scas
mov
imulb
mov
dec
sub
push
xchg
fcmove
and
mov
sub
ss
pop
or
nop
enter
rorb
sub
in
jne
mov
mov
mov
bound
sbb
jge
test
rcrb
pop
test
xchg
jl,pt
movsb
adc
pop
xchg
decl
stc
jg
sti
xchg
jnp
jecxz
out
push
addl
std
lahf
int
jge
outsb
cmpsb
dec
fists
pop
pop
insl
adc
bound
push
sub
jae
js
lret
sub
loopne
cmp
jae
xchg
sahf
js
lods
roll
subb
mov
outsb
adc
ja
dec
sub
popa
adc
xchg
imul
mov
xor
push
repnz
jg
ret
mov
sbb
ds
aas
mov
jecxz
cmp
out
pop
stos
out
pop
sar
in
pop
jle
push
aas
insl
dec
cmp
pop
push
bound
mov
lcall
xchg
adc
mov
push
aaa
idivl
fwait
add
cs
jb
push
mov
shl
shlb
dec
and
cli
mov
cmp
rcl
push
xor
push
loop
push
or
orb
loop
or
mov
lds
xchg
in
scas
lret
mov
mov
jnp
sub
and
jae
loop
inc
sbb
xchg
pop
add
pop
mov
jo
xchg
add
call
adc
cmp
aaa
icebp
lds
pop
out
jg
cltd
repnz
test
xor
pop
add
lahf
or
nop
addr16
lret
mov
vcvttss2si
adc
mov
shrl
ja
mov
scas
cmp
jbe
data16
sub
add
movsb
mov
or
movsb
xor
inc
aas
adc
dec
cmp
xchg
mov
daa
std
imul
iret
cmp
push
mov
push
repnz
outsl
lock
popa
add
cmp
cmp
add
in
je
push
hlt
bound
and
movsl
pop
in
cmp
adc
andb
shr
out
or
lds
jecxz
mov
xor
sub
dec
fsubs
cmp
xchg
fucomi
dec
mov
add
inc
mov
mov
sbb
mov
int3
pop
or
push
mov
add
xor
lret
add
and
fsubrl
dec
or
and
ror
popf
jg
clc
shll
into
out
lods
ljmp
jae
sbbb
test
shll
insb
imul
out
sub
mov
mov
inc
cmpsb
lock
outsl
roll
movsb
incl
inc
or
out
pop
ret
aas
inc
int
rcl
das
dec
fsqrt
add
ds
sub
sbb
mov
jne
cmpsb
in
and
dec
lock
mov
mov
les
test
repz
hlt
jno
xchg
add
add
push
jne
clc
dec
sub
aam
fwait
sti
mov
jp
test
fwait
outsl
xchg
sbb
fstpt
adc
fdivrs
or
int3
xor
pop
push
jns
dec
ret
sub
or
pop
lods
fs
mov
xor
pop
adc
push
int
dec
push
jecxz
adc
xchg
shlb
mov
shlb
and
adc
ret
fildl
cmpsb
fistl
imull
ret
sbb
mov
push
cmp
push
into
shrl
push
xlat
mov
loop
sub
lret
adc
test
pop
adc
inc
rcrl
xlat
aas
mov
scas
je
mov
xor
jnp
xlat
jae
push
sub
loop
mov
inc
inc
mov
fsub
ret
xor
leave
call
mov
fs
in
cmc
lods
pushl
popa
sub
adc
not
in
call
inc
sti
sub
insl
dec
sti
sub
leave
lret
scas
shl
clc
imul
pop
add
movsl
dec
popf
aam
stc
fcomp
popa
jmp
adc
in
popl
dec
loop
ja
mov
adc
mov
into
outsl
jge
lret
push
push
cmp
lahf
jl
test
jno
leave
shll
jmp
cld
das
pop
dec
shr
xchg
data16
hlt
cld
add
add
pop
fildl
andb
sar
mov
jg
push
les
clc
adcb
mov
std
movb
jnp
hlt
jl
mov
lods
dec
pop
ljmp
inc
pop
dec
cmp
jo
xor
mov
ficompl
packssdw
loop
ljmp
scas
cmp
xor
mov
mov
fiaddl
fsubl
leave
push
and
test
repnz
insl
cmpl
cmp
xchg
cs
fdivrs
sub
fimuls
cmc
fistl
shl
arpl
jecxz
and
dec
div
adc
push
test
inc
sbb
jmp
cltd
push
loopne
lods
cmp
loopne
jns
push
dec
icebp
ja
and
arpl
pop
lahf
mov
repnz
push
dec
lret
loope
std
stc
iret
sbb
cmpb
jge
mov
int3
pop
mov
adc
cmpsb
rcll
movl
cmp
pop
test
sub
sahf
push
out
sbb
cmc
arpl
test
mov
lea
and
dec
sbb
xchg
push
test
out
loope
lods
or
aaa
cmp
push
stc
sbb
push
and
inc
ss
les
inc
add
lods
cltd
push
xor
sub
pop
cltd
xor
lods
push
scas
mulb
sti
dec
pop
scas
jg
dec
dec
cmp
and
aas
inc
popf
xor
out
cltd
push
and
iret
mov
enter
outsl
push
mov
loope
jb
and
add
outsb
adc
mov
in
dec
lahf
dec
lock
in
into
movsl
cmp
mov
inc
lahf
das
dec
arpl
leave
xchg
mov
sahf
jl
xchg
leave
and
xlat
enter
cmp
mov
dec
iret
push
mov
scas
fmul
repnz
mov
mov
or
and
sub
xor
xor
mov
mov
jecxz
push
xchg
jne
pop
adc
and
xchg
mov
ficomps
mov
pop
push
xor
adc
rcl
jbe
mov
mov
jle
lods
imull
repnz
jp
cmp
xorb
outsl
ljmp
data16
mov
and
mul
loop
push
movsl
and
lock
cmp
fmuls
pop
adcb
jb
xchg
es
js
adc
jle
or
push
dec
adc
dec
repnz
jle
shrl
push
or
sahf
call
into
popf
or
cmpsb
int3
ja
jno
jecxz
cmp
fwait
push
pop
je
xor
loop
mov
xorb
loope
xchg
scas
xor
dec
jmp
stos
out
inc
flds
pmulhuw
popf
repz
sbb
pop
lret
gs
sti
add
std
sub
scas
sub
mov
add
and
sbb
cmp
iret
sub
pushf
xchg
and
std
or
mov
mov
jnp
jnp
adc
push
cmpl
pop
popa
mov
js
mov
bound
aas
lds
xorl
or
jbe
out
clc
idiv
inc
ja
pop
mov
daa
test
adc
ss
icebp
inc
fs
out
es
lods
repnz
sbbb
mov
jne
mov
repnz
loop
stos
push
ss
mov
pop
fsubrl
jbe
xchg
add
clc
cmc
dec
movb
mov
in
test
leave
pop
jle
test
iret
push
subl
or
adc
mov
push
ds
jg
cwtl
subb
test
xchg
cmp
inc
std
push
outsb
call
jb
add
dec
mov
push
push
push
jge
add
movsl
mov
cmpsl
int
js
loopne
fwait
add
mov
sbb
and
in
out
inc
andl
je
insb
pop
and
push
stos
xor
leave
dec
jno
test
add
fcomi
test
mov
sarb
insb
xchg
sti
xchg
inc
scas
rcr
dec
cltd
lock
jecxz
push
sbb
cmpsl
mov
jg
rcll
mov
adc
jle
push
dec
inc
mov
sub
hlt
dec
filds
mov
push
mov
mov
mov
sub
jg
les
test
aas
pushf
data16
xor
dec
aad
push
scas
call
pop
mov
mov
fbstp
rclb
ficoms
xchg
fisubrl
frstor
es
pop
subl
cli
push
stos
lahf
fistpl
inc
cmc
call
xor
push
mov
insl
aas
repnz
sub
cmp
dec
ret
adc
aas
fcmovnb
add
pop
cmp
add
inc
mov
mov
pop
xor
scas
sti
imul
push
jle
in
push
jl
sbbl
and
inc
push
in
fisubl
mov
mov
xor
jl
call
xlat
lret
cs
fiaddl
cmp
lret
jo
cmc
jg
jmp
stos
aad
in
jns
add
mov
mov
mov
lcall
jp
movsb
mov
lea
repnz
jb
xchg
imul
lods
push
mov
mov
jno
pop
lock
sar
dec
popf
mov
cmpsl
addr16
imul
test
sbb
pop
out
out
sarl
xchg
mov
pop
aas
inc
loop
mov
outsb
jmp
xchg
dec
ret
sarl
shlb
int3
xor
mov
pop
movsb
xchg
mov
dec
adc
cmc
xchg
jmp
in
and
leave
cmp
cmp
jecxz
pop
inc
test
add
in
rcrl
or
js
dec
cld
mov
cmp
jmp
nop
movsb
lds
popl
cltd
lcall
ret
add
pop
sub
jl
mov
enter
cmpsb
mov
out
fistpl
out
jg
xlat
fstp
mov
mov
fxch
sarb
mov
test
xor
mov
or
lods
pushf
adc
mov
popf
jg
dec
aaa
xchg
loopne
sub
in
cmpsb
fdivrl
jp
mov
xchg
jge
repnz
and
int
and
cmp
or
fisttpll
into
cmp
loope
lahf
inc
mov
fildl
inc
dec
nop
movsb
inc
mov
fcomps
cltd
jl
test
mov
pop
into
int
sarl
pusha
repnz
in
jno
mov
stos
test
add
rcr
dec
pop
imul
jns
mov
mul
aaa
stos
adc
movsb
xchg
into
test
sub
xchg
or
incl
and
push
stc
add
jbe
add
nop
lret
adc
dec
js
xchg
les
ja
dec
pop
push
sub
call
lea
les
jp
mov
xchg
loop
xor
cld
enter
leave
push
inc
and
jecxz
scas
mov
sbb
fcomi
icebp
mov
or
leave
xchg
mov
push
out
xchg
xor
sti
push
aam
daa
xchg
lods
push
daa
out
sub
xor
jno
cmpsl
andb
sbb
dec
loop
dec
clc
fisubrl
stos
mov
lods
sarl
jns
xchg
jle
outsl
in
adc
mov
cli
xor
int3
sub
xchg
int
jo
lods
lret
roll
mov
loopne
or
pop
mov
mov
nop
pop
enter
out
pop
pop
aaa
test
pop
cli
mov
pop
frstor
mov
int3
out
ds
xchg
addr16
test
gs
dec
into
cmpsl
clc
jb
aad
xchg
mov
repz
xchg
cmpsb
sbbb
iret
lea
push
and
scas
adc
lods
mov
push
repnz
imull
nop
sub
add
call
pop
pop
mul
and
sub
inc
mov
mov
les
mov
push
data16
jecxz
adc
call
les
sub
repnz
cmp
pushf
gs
push
add
enter
xor
dec
addr16
test
or
cmpsb
sbbb
sbb
and
in
scas
xor
test
jle
mov
fcoms
scas
mov
inc
sbb
fidivrl
pop
mov
pop
xchg
mov
sbb
mov
jmp
and
fs
push
adc
lds
les
in
xchg
cmp
xchg
jl
loope
pushl
cs
cld
and
cld
jle
sub
ret
jmp
insb
repnz
jp
dec
sbb
lret
cmpsb
inc
insl
mov
xchg
hlt
cmpsb
loopne
inc
clc
in
push
push
sbb
push
shrb
push
sbb
xchg
jae
cld
cmp
or
or
incl
aas
inc
cmpsl
mov
loop
mov
pop
dec
or
add
add
imulb
incl
mov
cmpsb
std
imul
xlat
sbb
xlat
ljmp
pop
data16
cmpb
sub
cmp
cmp
shll
lods
push
or
mov
push
cmp
clc
divl
push
cs
adc
xchg
dec
movsb
mov
es
repz
xor
movsl
xchg
scas
push
dec
in
jmp
mov
mov
add
pop
mov
sbb
or
bound
adc
cmpsb
shll
add
xor
popa
xchg
inc
mov
into
ret
pop
push
and
xchg
mov
enter
inc
out
out
and
cmpsl
xor
cli
lds
jle
sbb
insl
xchg
mov
cmp
mov
lcall
jbe
mov
dec
jge
lds
mov
add
fadd
out
out
out
xlat
aam
adc
lcall
rcrl
adc
push
pop
enter
lahf
push
and
add
std
pop
sub
pop
mulb
pop
cmp
dec
inc
or
cltd
scas
dec
movsl
jb
mov
add
mov
ds
orb
push
inc
mull
fistpll
mov
cmp
mov
dec
xor
mov
xchg
dec
jecxz
cli
jg
lock
mov
mov
icebp
pop
sub
add
test
pop
xchg
dec
lods
cli
jns
mov
mov
adc
xor
into
push
or
ret
mov
in
push
lods
lods
xchg
or
mov
inc
stos
imulb
push
push
in
fisubl
push
push
subl
sub
inc
jne
sbb
rep
popf
loope
push
xor
mov
mov
or
cmpsl
mov
xor
cmp
cmp
cmp
aam
add
daa
fnstcw
cmc
fcoml
outsb
cmpsl
sar
ficoml
std
mov
and
shr
or
xor
fnsave
sub
jmp
mov
lea
jmp
push
lock
pop
pop
shr
dec
dec
out
mov
jns
into
sub
in
xor
cmpsl
and
cltd
xor
sub
and
imul
icebp
xlat
jg
js
pop
shrb
cmp
jnp
pop
mov
pop
and
sub
add
roll
pop
mov
jne
push
insl
das
push
mov
int
xchg
add
imul
pop
aas
stos
frstor
mov
sbb
pop
pop
aas
cmp
jl
xor
jne
push
fisubrl
push
add
inc
push
add
fs
jo
xchg
filds
popf
or
xor
inc
cmp
popa
and
iret
mov
in
pop
ffree
jg
shll
repz
sub
push
pushf
inc
shlb
mov
ret
popf
mov
mov
hlt
ljmp
xchg
jne
inc
jp
jb
sbb
fldenv
aaa
adc
out
add
mov
mov
cmc
ljmp
sub
mov
add
mov
adc
aam
sarb
adc
pop
and
ss
mulb
inc
dec
mov
fldl
adcl
and
cmc
pop
mov
xchg
mov
xchg
xchg
lcall
fwait
rcrb
rorb
stc
filds
pop
clc
fstpt
lock
cmpb
cli
stos
shlb
and
sbb
shll
push
adc
jg
dec
adc
mul
inc
sbb
mov
mov
jo
in
push
jge
hlt
orb
sbbb
jmp
and
jmp
stos
stc
pop
stc
add
and
fldcw
mov
sbb
cmp
mov
xchg
fiadds
stc
jae
int
cmp
ss
mov
mov
iret
sub
or
repnz
aas
mov
mov
loopw
repz
loop
mov
shld
pop
adc
fistpll
and
push
fs
sub
stc
push
jp
fdivl
adc
xchg
jbe
cmp
rcrl
and
lds
pusha
sub
jmp
cs
xor
sbb
push
xchg
xor
mov
push
pop
test
imul
sub
jmp
or
xlat
shll
ret
jns
cltd
pusha
lret
dec
mov
dec
fstps
push
aaa
clc
les
adc
fwait
pop
and
adc
lret
and
sbb
lret
sub
bnd
out
inc
popf
pop
out
fistpl
adc
testl
leave
cmp
add
mov
aam
jmp
xchg
push
jmp
and
insl
jae
outsl
stos
xchg
in
adc
jl
mov
xlat
mov
in
adc
jle
add
iret
jecxz
cli
mov
mov
xor
cmp
in
in
popf
rolb
jle
cltd
fldenv
dec
mov
pop
mov
icebp
dec
int3
je
mov
repnz
mov
xchg
ja
mov
cltd
enter
mov
jle
scas
jno
inc
mov
jno
or
stos
ror
and
mov
sub
mov
mov
stos
adc
adc
test
pop
pop
mov
out
jge
adc
jmp
ret
jle
add
jae
inc
clc
imul
mov
pop
shll
scas
stos
out
int3
enter
jbe
pop
cld
push
sub
stc
cmpsl
sahf
into
and
cmpsb
and
dec
pop
mov
lahf
fadd
jns
std
js
or
dec
inc
dec
cmp
jne
adc
js
mov
mov
xchg
adc
xchg
sbb
popf
adc
ret
fcmovbe
mov
mov
jb
mov
outsb
loop
sub
mov
sbbl
js
cs
repz
or
mov
jmp
sbb
inc
pop
adc
ret
mov
mov
xchg
mov
jp
sub
add
mov
mov
cmp
iret
jecxz
nop
cmp
fdivrs
jl
loop
lret
mov
in
or
push
insl
xchg
jge
push
mov
int3
aaa
cmp
sbb
pop
cmp
lret
jo
int
push
fdivr
bound
or
pop
test
hlt
in
adc
test
fldcw
mov
std
cmp
into
repnz
mov
aam
pop
ljmp
pop
js
xchg
dec
ret
fnstsw
sbb
cmc
mov
xchg
xor
xchg
xchg
inc
mov
sub
fstps
mov
and
aam
gs
cmpl
movsb
test
call
shlb
repnz
mov
xor
dec
jbe
lcall
popa
add
pop
lock
out
pop
push
add
into
rorl
inc
fwait
loop
aad
rorl
lods
bound
or
test
int3
imul
andl
fisttpl
inc
mov
jnp
stos
popf
das
icebp
popa
movsl
jecxz
jge
and
sahf
mov
xor
incl
into
loopne
lret
in
push
dec
shll
sub
sub
mov
sbb
shl
movsb
divb
pop
jno
mov
je
push
lahf
mov
rcr
lcall
testb
cmp
sub
iret
jle
sbb
lcall
adc
or
sub
xchg
jge
jmp
inc
xchg
icebp
push
jbe
lret
adc
add
ret
mov
cwtl
pop
jg
imull
sbb
jmp
mov
dec
addb
leave
fucomp
fisttps
pop
mov
jecxz
test
sub
mov
mov
mov
es
inc
or
lock
int
cmp
mov
popa
lods
xor
mov
test
xchg
jge
add
xchg
cmp
outsl
or
pop
jl
pusha
shlb
std
mov
mov
inc
xchg
inc
cmc
lahf
mov
movsl
and
js
cmp
into
mov
ret
mov
fwait
push
pop
loop
mov
add
fistpl
aad
add
mov
jmp
sbb
gs
inc
les
movsl
mov
dec
push
loopne
lcall
xchg
in
jnp
sub
cli
dec
insl
rolb
and
ret
leave
ret
or
inc
inc
push
inc
in
pop
add
cmc
jnp
shl
mov
push
je
sub
mov
pop
mov
jo
push
nop
add
fadds
mov
pop
jae
nop
loope
shlb
push
jae
iret
inc
bound
push
mov
out
xchg
rol
xchg
lods
mov
ja
fiadds
fisubl
fistps
xlat
into
adc
shl
enter
js
cmp
mov
rorb
pop
jmp
addr16
sub
fdivrl
mov
je
aaa
pop
push
pop
lret
mov
xor
sbb
add
outsb
pop
mov
pusha
xchg
rorb
xchg
or
loop
dec
push
rclb
and
mov
test
insl
mov
lcall
jbe
stos
inc
in
fs
push
ret
mov
xlat
cmc
lods
lods
fucom
out
int
pop
aam
sub
xchg
adc
and
daa
std
es
add
dec
sbb
or
xor
inc
xlat
out
test
mov
add
jb
dec
test
sub
add
jno
xchg
out
daa
pop
xchg
mov
mov
xchg
sbb
rorl
lea
mov
mov
mov
in
xor
gs
pop
or
sarl
push
xchg
lret
shll
jl
movsb
jns
icebp
int
add
pop
dec
loope
xor
jnp
sub
callw
mov
sahf
sbb
inc
out
sti
push
lods
sub
je
sub
xor
test
jno
mov
orb
push
dec
aas
push
das
xchg
pushf
repz
int
cwtl
xor
lods
sahf
rolb
xlat
cmpsl
call
dec
jp
mov
fadd
sbb
mov
and
adc
jne
push
xchg
aaa
sbb
rorl
pop
mov
sbb
mov
dec
sub
xchg
push
cltd
jae
add
sbb
pminub
rorb
push
or
sbb
or
cmpsl
xor
push
scas
mov
pop
int
out
call
dec
push
out
cwtl
stos
das
xchg
mov
jns
out
icebp
pop
and
outsl
and
cmp
adc
adc
add
dec
ja
push
dec
shr
movsb
push
movaps
loope
mov
mov
inc
mov
repnz
frstor
add
nop
mov
dec
or
mov
add
fdivs
fiaddl
mov
dec
popa
pop
scas
mov
les
loop
test
outsb
adc
lcall
jg
aam
mov
cli
mov
fcompl
ds
jo
bound
sub
enter
jle
loopne
nop
jbe
fwait
mov
movsl
cmpsb
mov
in
cmpsb
push
pop
cmc
push
ds
test
push
test
sahf
aas
lods
out
adc
lret
mov
jmp
cmpsb
mov
sub
stos
xchg
xor
das
ret
scas
data16
pop
lds
mov
dec
out
out
cmp
xor
mov
insl
fdiv
sbb
das
imul
fwait
mov
inc
mov
incl
mov
fwait
std
sti
aam
adc
cmp
inc
imul
outsb
bound
xor
mov
pop
test
int3
jb
pop
stos
stos
icebp
movsl
call
jge
sbb
jns
jecxz
mov
ljmp
es
lea
pop
sub
shrb
shr
shlb
cmp
aas
adc
and
ss
negl
adc
outsb
jb
xchg
fidivs
call
aaa
int
pop
in
push
mov
mov
cmp
or
ret
adc
popfw
inc
mov
aaa
leave
cmp
xchg
call
add
cmpsl
bound
movsl
inc
mov
pop
xchg
ljmp
inc
popf
dec
push
or
mov
or
cmpsl
dec
loopne
addr16
mov
aaa
xor
lahf
push
fdivrs
shrl
mov
stos
mov
mov
xchg
call
add
inc
inc
dec
push
lret
cmp
ja
lods
mov
fstpt
cld
pop
jns
loope
sub
icebp
and
cmp
sarb
lcall
call
mov
aas
fnstenv
test
xor
test
jge
aam
data16
xlat
jo
mov
sbb
push
fldt
fidivrl
pop
lcall
gs
or
addr16
stos
in
test
xchg
dec
in
loopne
jbe
pop
data16
xchg
fisttps
test
dec
ja
mov
imul
add
fwait
mov
adc
ja
mov
xchg
xchg
lods
ja
jg
daa
xor
jle
ja
sbb
imul
mov
push
sub
jl
push
add
fwait
vpsraw
mov
pop
inc
aaa
pop
sbb
aam
test
mov
jbe
push
imul
push
dec
sbb
cmp
stos
neg
cwtl
and
push
in
ss
nop
xor
out
push
mov
ds
cli
rclb
mov
adc
jmp
dec
and
cmpsb
or
jbe
cmp
ret
xor
push
add
add
xlat
insl
jnp
push
aam
add
push
lock
outsb
out
daa
push
xor
sub
sbb
ljmp
stos
cmpsb
or
das
pop
inc
push
mov
adc
inc
imul
scas
mov
outsb
jge
adc
fistps
sub
xchg
loopne
mov
sbb
pop
jecxz
xchg
sbb
and
int
xchg
cmp
lods
pushf
mov
fiaddl
pop
add
mov
in
and
inc
outsb
dec
fiaddl
xchg
aad
dec
lcall
dec
pop
cwtl
and
shrb
mov
push
aaa
pop
push
pop
jl
pushf
das
nop
or
aas
decb
push
push
jg
xchg
imull
mov
sub
fcomps
stc
pusha
xor
push
in
shrb
and
sub
and
cmp
out
mov
add
les
movsd
daa
mov
push
out
xchg
xchg
mov
jnp
movsb
mov
fs
jne
movsb
mov
push
cwtl
adc
test
push
sub
aaa
dec
push
fldenv
jmp
push
int
xor
sbb
add
sti
add
jne
gs
clc
aas
inc
cs
data16
rorl
cmp
call
cmp
mov
je
push
dec
and
mov
cltd
repz
movsb
nop
ficomps
inc
roll
imul
cmp
movl
inc
roll
dec
mov
jnp
movq
out
inc
sbb
inc
pop
xor
jl
cmp
imul
in
insb
out
ljmp
jb
roll
mov
enter
out
repz
push
popa
mov
js
dec
jo
lret
sbb
or
mov
shrb
and
add
xchg
in
mov
sub
popa
cmp
ljmp
imul
clc
push
stos
pusha
push
xchg
push
in
mov
cmp
roll
ret
push
sbb
fldl
mov
repz
mov
clc
aad
int
fistpll
out
xor
push
inc
and
pop
adc
adcl
cmp
jmp
pop
insb
jle
jno
push
mov
aas
dec
je
inc
ljmp
gs
es
jge
imulb
scas
insl
or
imul
mov
aas
fisttpl
ljmp
cmpsl
pop
cmp
cmp
dec
mov
or
loope
mov
mov
pop
and
frstor
mov
js
xor
cmpsb
arpl
movsl
adc
cltd
dec
dec
sbb
jge
xor
jle
push
xchg
lahf
jnp
out
mov
in
xchg
in
loope
dec
jp
sbb
repnz
fildl
pop
bound
insl
ret
add
pusha
gs
xchg
and
lahf
cmp
and
sbbl
pop
fdivrs
mov
lods
cmp
push
outsl
ret
mov
mov
jbe
adc
jno
and
jge
sub
jbe
arpl
jb
das
add
mov
lods
push
xchg
pusha
xorl
cmp
mov
add
dec
fildl
xchg
in
mov
adcl
jecxz
mov
pop
idivl
test
loopne
fwait
sbb
push
jle
lock
or
adc
dec
xchg
cltd
mov
lahf
nop
pop
jge
hlt
bound
dec
xchg
push
movsb
and
mov
mov
xor
xchg
cmp
shlb
cli
adc
inc
cmpsl
adc
sub
aaa
pop
test
gs
les
mov
ret
mov
jae
pop
aam
xchg
int3
leave
ljmp
pop
xlat
mov
dec
xchg
pop
fs
mov
mov
xor
je
pushf
push
and
cmp
and
jg
jnp
cmc
xchg
mov
cmpsb
and
icebp
sti
xchg
stc
mov
rcrl
mov
mov
loopne
pop
xchg
jbe
divl
out
cli
ret
test
shl
in
and
jnp
xchg
je
das
mov
imul
js
jle
xchg
repnz
leave
fidivl
pop
repz
in
cmp
dec
sbb
mov
and
xor
and
psubsw
lcall
sub
js
sbb
and
and
pop
add
lret
btl
call
jg
xor
jmp
fs
mov
or
cmp
cmp
xor
mov
push
lret
push
push
mov
dec
jo
push
imul
cmpsb
mov
nop
loope
jp
lret
loopne
stos
lods
fdivr
inc
mov
dec
jmp
pop
shll
xor
fistps
sbb
push
sbb
scas
test
add
xchg
xchg
clc
ret
adc
lock
cmpsl
xchg
push
or
push
sbb
xlat
inc
add
push
rcll
jno
sbb
cmp
cmpsb
xchg
in
lahf
cmp
sahf
sbb
je
lods
jae
aas
xor
aas
scas
in
push
mov
and
mov
mov
mov
or
mov
mov
or
out
adc
int3
adc
arpl
jae
or
jp
push
test
sub
add
lahf
pop
xor
lds
std
mov
lock
lods
stos
js
mov
sbb
aas
cli
adc
inc
in
and
mov
loop
scas
loop
scas
cs
rolb
push
sbb
je
fsubl
pop
xchg
fnsave
pushf
stos
inc
and
fdivrs
mov
mov
add
and
jle
jmp
daa
cmc
mov
cld
pop
clc
mov
vpmadcswd
and
test
loop
sub
inc
mov
rol
std
xor
addb
daa
in
mov
xor
xor
stos
dec
aas
jecxz
les
sti
cmp
mov
shrl
push
push
jle
jle
sbb
mov
sub
gs
and
push
cmp
push
fdivs
mov
fwait
leave
dec
jl
push
xlat
ja
mov
mov
jae
roll
push
add
rcl
leave
add
mov
pop
xchg
pop
fstl
xchg
mov
lods
loop
add
xor
sbb
pop
movl
sub
jno
out
xchg
xor
inc
and
dec
xlat
in
xor
mov
xchg
je
jle
and
xor
pop
scas
lret
jmp
sub
enter
dec
add
fs
cmp
popf
sbb
fistpll
jecxz
frndint
in
icebp
xor
lock
enter
aad
mov
repz
movsb
push
addl
mov
testb
divb
out
movsl
ss
and
ret
push
rol
sahf
sbb
xchg
sub
add
mov
stos
inc
decb
inc
mov
jp
add
add
pusha
jns
add
jp
mov
mov
mov
mov
mov
mov
ja
icebp
sbb
imul
push
test
insb
inc
stc
movsl
fdivs
mov
xor
or
movsl
adc
daa
stos
addb
ja
jno
pushl
pop
fmul
cmp
lds
inc
into
and
push
or
dec
cmpsl
add
popa
mov
mov
inc
shr
fistps
inc
cmpb
push
mov
lds
cmp
shlb
lret
jmp
outsb
mov
lahf
dec
add
jns
xor
sbb
loopne
sub
fldcw
enter
cmpsl
mov
rcrb
push
in
mov
push
cmp
pop
and
mov
push
mov
jmp
out
inc
icebp
pop
pop
aad
jmp
push
lds
and
in
movsb
sarb
push
mov
xchg
sub
push
jp
add
js
xchg
cmp
push
jbe
pop
push
lret
and
stc
pop
mov
mov
ret
adc
xchg
sahf
pop
cmp
idiv
dec
fcomps
xchg
push
inc
stc
mov
rcl
fdivr
pop
fcoms
les
or
popf
or
leave
jno
dec
lods
push
sub
mov
add
lret
xchg
cmpb
mov
arpl
cwtl
cmp
lcall
pop
xor
out
lea
inc
out
test
fwait
in
movsb
mov
pop
mov
mov
mov
fildll
ljmp
xchg
push
dec
mov
out
push
dec
lods
nop
es
xor
mov
fcomps
repnz
inc
aaa
or
daa
gs
inc
imul
inc
jg
orl
ljmp
sbb
lds
fistl
add
push
sub
adc
int3
xchg
add
add
mov
insl
push
cmp
jns
mov
inc
insl
cmp
insb
sbb
lds
out
add
icebp
sbb
stos
or
inc
fsts
add
test
sbb
lods
loopne
test
fmulp
rcrb
pop
ss
scas
jae
pop
clc
jae
xchg
jnp
mov
lahf
cmp
fistps
out
adcl
mov
adc
push
xor
mov
xor
jnp
es
add
or
adc
es
push
mov
jo
xchg
or
cld
cmp
mov
stos
mov
push
pop
dec
adc
xchg
push
sbbl
inc
pop
mov
sbb
aaa
dec
js
xchg
dec
or
decl
push
jo
cwtl
mov
gs
or
and
scas
loopne
add
sub
sahf
shl
cmp
mov
fidivrl
or
test
jns
hlt
fsts
push
mov
dec
rcrb
mov
mov
mov
inc
cld
adc
or
loopne
jnp
adc
dec
push
cmp
lahf
jbe
arpl
jmp
sub
jle
loope
ds
xchg
xor
scas
into
inc
pop
adc
in
inc
mov
dec
popf
adc
cs
xchg
mov
sub
jae
pop
lods
dec
jmp
hlt
pop
rcrb
les
fsubs
fs
xchg
int
mov
sub
dec
cmp
scas
and
dec
xchg
test
inc
lock
call
cmpsl
push
mov
xchg
in
mov
pop
lcall
and
and
test
lret
out
sbb
jns
js
std
je
pop
ljmp
xor
or
stos
mov
and
insl
clc
jb
jae
inc
mov
lea
imul
fsubrl
mov
pop
cmp
cmp
mov
mov
shlb
sub
push
pop
jnp
loop
xchg
xchg
stc
jecxz
sub
rorb
enter
arpl
dec
jl
pop
inc
mov
in
cmp
fsts
cmpb
jmp
cltd
push
pushf
and
push
clc
or
popa
xorl
and
les
xchg
mov
into
inc
stc
int3
movsl
add
cmpsb
in
add
scas
mov
mov
nop
shl
dec
xchg
dec
bound
mov
pop
mul
mov
fstl
arpl
lea
sbb
movsb
inc
outsb
mov
adc
add
stos
lods
xchg
icebp
inc
aam
and
imulb
xlat
mov
or
inc
pusha
scas
into
cld
xlat
mov
mov
adc
jno
shll
push
inc
scas
shll
mov
xor
mov
cmp
in
test
adc
dec
aad
cltd
and
xor
cmc
stos
fimuls
add
jmp
and
fsubrp
or
hlt
add
sbb
shll
or
pop
cmp
dec
inc
inc
out
jo
and
das
jnp
fcmovbe
jnp
mov
push
mov
cld
mov
mov
cwtl
add
mov
mov
cmc
fdivrs
xchg
jbe
out
push
xor
xchg
cmpsb
data16
mov
xchg
adc
xchg
ret
xchg
gs
fdivl
mull
dec
aam
ljmp
pop
push
cmpsl
je
pop
pop
mov
dec
ds
push
sub
cmp
jbe
dec
lret
and
push
ficoms
sub
or
add
pop
inc
push
push
inc
mov
dec
inc
arpl
das
jg
sub
shll
mov
jp
pop
sbb
xchg
sbb
xor
in
mov
and
leave
push
mov
int3
out
adc
and
and
cmp
jno
push
push
in
mov
push
out
and
pop
setb
add
mov
push
or
mull
test
popa
roll
addr16
pop
cmp
faddl
jb
iret
int
lock
xorb
sbb
outsb
inc
addr16
fmull
shll
and
ret
js
aas
adc
xchg
push
loopne
jne
sahf
outsb
adc
and
cmp
and
fcompl
bound
add
pop
out
jnp
test
push
in
adc
subb
adcb
aas
pop
sarb
xchg
addr16
lret
sbb
add
cmp
or
insb
sub
pop
push
push
mov
das
sub
mov
fstp
pop
fisubl
adc
push
push
push
fs
pop
cwtl
inc
insl
xor
and
sbb
cmp
jb
pop
shrl
adc
loop
mov
cmpsl
movb
push
mov
insl
loopne
push
scas
xchg
dec
jge
lahf
cmp
dec
adc
cwtl
add
rcll
mov
dec
les
out
cmp
mov
mov
test
dec
repz
push
cs
out
adc
dec
or
out
and
inc
fcmovnbe
ljmp
push
in
pop
push
cli
into
push
inc
lret
iret
lock
ror
das
imul
push
outsl
adc
hlt
mov
testl
and
ds
lret
leave
xchg
adc
in
jae
xchg
js
dec
out
fmull
adc
sub
sub
pop
mov
add
cld
mov
dec
mov
test
pop
jno
loop
adc
icebp
sbb
xchg
icebp
aas
mov
jmp
loopne
inc
push
mov
out
push
les
out
mov
incl
aam
in
adc
or
jmp
leave
xchg
ss
data16
sub
jne
xchg
sub
push
or
and
out
adc
ss
cmp
xorl
sahf
mov
sbb
cs
aaa
add
out
adc
dec
jl
inc
lea
jmp
jb
out
test
pop
mov
sub
dec
lret
xor
or
sar
insb
lahf
inc
and
cmpsl
cmp
jp
sub
fistl
jns
and
sub
mov
cmpsl
jg
pop
jmp
sbb
iret
stos
jmp
mov
mov
xchg
xchg
testb
into
xor
imul
mov
cmpsb
cmp
roll
pop
xor
out
push
mov
out
or
jne
lods
out
repnz
cmp
xor
aas
xorb
pushf
sbb
add
xor
lret
repz
mov
scas
mov
add
sub
xor
mov
addr16
mov
stos
adc
mov
add
cmpsl
sub
xchg
clc
inc
jl
daa
xchg
inc
inc
popf
mov
fld
adc
frstor
jg
cmp
sub
pop
arpl
dec
cmp
xor
dec
cmpsb
enter
pop
jecxz
pushf
xchg
pop
adc
or
xchg
push
aad
inc
jl
fwait
sub
and
jo
cmp
mov
aaa
call
or
subl
mov
push
les
ss
jnp
mov
cmp
inc
orl
lahf
clc
xchg
pop
jo
fldl
dec
mov
insl
fcoml
pop
adc
rol
scas
xor
mov
into
adc
cmp
sbb
movsb
in
imul
testl
xchg
mov
cmpsb
aam
xor
in
jae
popa
xchg
jo
and
jge
pop
cli
scas
scas
imul
lds
push
stos
add
and
adc
jno
es
out
xorl
aam
in
push
out
out
insb
mov
loope
xor
jae
jl
call
add
ret
inc
outsb
mov
insl
mov
scas
xor
jbe
fidivl
into
pop
imul
popf
jmp
xchg
adc
cld
insb
push
push
pop
mov
inc
pop
jbe
movsb
mov
adc
xor
into
cmp
mov
sahf
xchg
lds
cmp
lret
mov
jl
mov
imul
ror
mov
xor
mov
ds
xchg
pop
xor
dec
out
clc
lret
or
mov
jno
or
adc
jp
aas
dec
dec
incl
and
xchg
shll
jmp
ja
mov
rcrb
mov
adc
pop
in
lock
lahf
bound
fst
das
fistps
mov
mov
mov
outsl
mov
data16
insl
sbb
into
popa
fwait
psubd
push
push
aad
pop
testl
mov
je
call
cmp
cli
lcall
dec
xor
or
jne
cmpsb
mov
xchg
pop
or
mov
dec
or
hlt
jle
sbb
pop
xchg
sbb
push
pop
inc
aas
nop
stc
pop
lret
dec
je
add
outsl
jp
xor
mov
stc
notb
push
inc
ret
cld
jle
cmp
dec
fwait
pushf
jae
cmpsb
sbb
daa
or
leave
jecxz
mov
les
fstp
adc
xchg
outsl
ret
push
mov
pop
sub
movsl
jae
out
cs
stos
sbb
mov
mov
push
shll
push
mov
jne
sbb
notb
or
test
dec
test
enter
xchg
push
xor
dec
lods
jns
dec
adc
add
adc
cmpsb
fisttpl
and
mov
out
push
jbe
insl
and
ss
mov
test
jbe
mov
addr16
std
fadds
test
inc
pusha
fstl
add
or
imul
sub
mov
dec
lcall
sbb
jno
add
and
mov
mov
hlt
mov
adc
mov
mov
outsl
in
and
leave
inc
rorb
mov
jae
mov
out
add
maxps
xor
or
add
in
imul
out
and
mov
jmp
popf
icebp
inc
jnp
in
mov
push
mov
mov
jne
nop
mov
dec
arpl
inc
insl
addr16
adc
lret
push
std
lods
jne
lock
es
inc
or
jae
push
mov
add
nop
mov
adc
xor
inc
pop
mov
sbb
loopne
mov
hlt
or
jno
ss
and
mov
fldenv
dec
and
loope
das
push
push
add
imul
sbb
pop
mov
shl
lcall
push
xor
imul
mov
inc
jle
add
cmp
add
inc
xchg
into
mov
dec
inc
pop
jl
mov
mov
outsb
mov
push
leave
or
mov
add
lock
fisubrl
xchg
in
dec
sub
push
pop
sbb
push
cld
jo
and
repnz
in
adcl
sub
les
ja
inc
jl
cmpsb
addl
iret
xchg
dec
push
arpl
stos
mov
je
mov
in
mov
fwait
sub
xchg
ljmp
sbb
xchg
dec
mov
imull
nop
outsb
mov
cs
sub
push
out
sub
mov
inc
mov
jbe
jg
cs
shl
data16
dec
xchg
ds
test
mov
sub
jg
lea
fwait
xchg
insb
inc
add
aam
pop
mov
jne
push
xchg
adcl
sbb
in
jg
rcr
mov
xlat
jmp
sbb
mov
icebp
mov
fwait
xor
xor
adc
loope
lcall
jbe
pop
inc
add
sub
cmpsb
xor
adc
mov
fisttps
das
fistpll
sbb
inc
cmpl
inc
lock
or
and
xor
push
aas
repnz
xchg
sbbl
or
mov
sbb
mov
xlat
jg
rcrb
pop
jb
mov
in
je
popf
pop
add
subb
jae
dec
div
mov
test
in
movsl
xchg
imul
sub
adc
mov
jns
in
fidivs
push
dec
sbb
mov
jge
push
pop
test
sub
aad
push
in
data16
push
mov
ja
jo
xchg
loopne
sbb
push
xor
mov
xchg
xchg
and
ret
test
jmp
xor
cmc
iret
pop
in
gs
lea
mov
insb
aad
sbb
cmc
cmpsb
jbe
repz
adc
pusha
jl
sbbl
xor
aas
xorl
push
pop
cmp
jl
push
leave
and
and
add
mov
xchg
pop
in
out
jnp
mov
data16
jno
loope
out
and
jmp
xchg
xor
jg
aaa
rcr
cwtl
out
jae
data16
into
dec
ss
cmpb
pop
int
fiaddl
jns
ljmp
fbld
push
ss
jp
lea
cmp
lcall
aaa
or
inc
sub
ret
inc
jg
push
fnstcw
cli
dec
sub
insl
mov
xor
in
pop
mov
and
in
std
adc
les
je
enter
inc
enter
mov
sub
mov
icebp
sete
mov
pop
ljmp
adc
adc
imul
outsl
stc
xlat
xor
mov
fiaddl
test
pusha
mov
mov
push
cld
call
xor
xadd
lcall
push
fisubrl
mov
jne
jg
das
dec
sub
dec
push
inc
pop
mov
aas
loop
jg
cmp
lock
jp
xor
arpl
int
push
sub
dec
sti
pop
lret
push
testb
leave
jne
fisttps
xrelease
cmpsl
mov
jp
xor
or
cwtl
shlb
jae
xchg
pop
mov
shr
add
aas
cmp
call
jns
dec
and
stos
mov
mov
outsb
mov
cmp
lret
dec
push
test
out
test
cmpb
or
sub
dec
lods
pop
fists
aad
mov
adc
and
xor
mov
testl
dec
mov
sahf
jno
and
sbb
mov
inc
jle
addr16
mov
daa
into
fisttps
mov
aad
and
jno
bound
inc
ja
pop
decb
adc
scas
xchg
add
sbb
pop
jg
mov
jge
in
push
mov
sub
clc
arpl
shrb
fwait
cmc
aad
ja
enter
je
fcompp
xchg
sub
mov
dec
daa
loop
rorb
mov
jmp
sbb
ds
or
repnz
test
repnz
dec
mov
out
xor
cmp
inc
cmc
test
subl
repnz
cmp
insl
push
push
fsubl
insl
repnz
jmp
and
ficompl
mov
push
lret
jns
call
mov
sbb
jb
lahf
pop
or
xor
pop
js
aam
jle
sbb
lods
outsb
insb
inc
stos
xchg
ljmp
jae
je
inc
cmp
adc
pushf
shl
cmpsb
fdivr
notb
aas
fimull
sbb
scas
ljmp
push
mov
or
pop
lea
daa
jmp
push
out
sub
dec
lahf
outsl
sarb
enter
mov
loopne
repz
inc
push
scas
mov
jo
lods
sbb
sbb
push
movsb
add
push
mov
mov
nop
jl
add
jp
sub
in
adc
ficoms
mov
icebp
push
mov
mov
js
cmp
aaa
xchg
aas
dec
fs
out
push
inc
jecxz
lea
xchg
mov
nop
out
jp
sbbb
addl
mov
dec
add
adc
xor
mov
cmc
aad
lods
movsb
mov
jmp
or
out
adc
cmc
in
xor
and
shll
dec
in
adc
into
lret
dec
shlb
dec
leave
push
arpl
adc
xor
in
sets
push
mov
test
lock
and
cmp
xor
jecxz
mov
dec
mov
xchg
or
cmp
fwait
aad
xor
push
mov
cmpsb
leave
ret
cwtl
mov
inc
xor
ret
clc
stos
cmpsl
dec
and
out
add
mov
dec
loop
out
pushf
in
scas
hlt
jo
aas
and
in
ja
shlb
xchg
push
inc
ljmp
adc
popa
rclb
pop
mov
cmpsl
insl
fs
push
out
jns
jge
popa
scas
imul
std
pop
sar
or
es
jl
iret
dec
dec
xrelease
jno
jbe
fsubrl
mov
pop
jno
loopne
pop
sbb
sub
jge
inc
add
mov
xchg
xchg
loop
lea
add
stc
stos
xor
mov
xor
cmp
xor
or
mov
jg
and
jge
add
lods
stc
mov
adc
cmp
sbb
mov
push
lret
movsb
int
pop
push
icebp
fidivl
jg
mov
dec
das
stc
pop
std
mov
push
daa
movsb
cmpsl
mov
imul
mov
push
mov
push
fs
filds
out
lahf
mov
xchg
out
paddusb
inc
outsl
in
cwtl
insb
push
push
fidivrs
repnz
sub
sbb
sbb
lods
cs
mov
test
xchg
and
inc
lret
mov
out
xchg
ret
pusha
movl
add
lahf
jp
ret
out
jbe
bound
pop
pop
mov
out
popa
xchg
dec
lea
push
mov
adc
push
adc
sti
xchg
cmp
xchg
sub
pop
dec
cmp
pop
mov
stos
inc
push
and
call
pop
adc
cld
push
cwtl
lret
sarl
and
mov
out
push
inc
add
loope
xchg
cmpsb
sbb
int
push
add
or
fs
fldcw
shlb
das
xor
imull
sub
jle
out
data16
sub
bound
orl
inc
stos
mov
test
gs
mov
orl
fstps
cmp
mov
mov
stos
dec
jbe
xlat
sahf
sbb
xchg
or
cld
aad
pop
inc
icebp
push
mov
jge
adc
pusha
xor
pop
mov
mov
mov
push
push
sub
orl
jo
mov
push
mov
mov
cmpsb
pcmpgtd
fs
fdiv
cmp
mov
xchg
in
mov
pop
fcmove
mov
leave
cmp
xor
mov
inc
scas
inc
je
das
mov
aad
ds
adc
leave
fs
leave
jmp
out
pusha
sub
add
out
sti
cs
push
xchg
inc
int
int
sbb
hlt
aaa
sbb
lea
fsts
add
mov
fsubs
push
daa
test
jle
gs
out
int3
cmpsb
cs
insl
icebp
or
aam
push
push
add
lcall
popa
xchg
lret
enter
pop
es
lods
xor
cmp
jp
mov
cmp
loopne
inc
into
cwtl
stos
sbb
and
mov
xchg
jnp
lahf
mov
repz
and
stos
cs
testl
pusha
mov
pop
sbb
cmp
jnp
cmp
xor
movsl
lcall
xor
push
pop
bound
mov
xorl
xor
ficoms
jg
testl
cs
lcall
fisubrs
mov
mov
imul
mov
xor
adc
sub
adc
and
push
data16
sub
loope
ficoml
imul
mov
mov
inc
gs
cmp
or
pusha
push
pusha
addr16
add
xchg
xlat
stos
rcll
cmc
mov
loop
stos
ljmp
loopne
rcl
add
xor
or
push
or
fldcw
xor
es
dec
push
and
cmpsl
fildl
cmp
push
fs
mov
popa
fstl
dec
mov
jne
xchg
inc
or
jecxz
jl
lcall
fstpl
or
cmc
add
adc
cmp
nop
pushf
mov
ljmp
mov
loop
data16
xor
xor
sti
mov
jo
sahf
mov
cmp
push
and
sbb
pop
lret
movsl
and
adc
jo
push
sub
adc
scas
arpl
rolb
xchg
adc
adc
pop
jmp
pop
mov
icebp
xor
aam
roll
push
nop
mov
adc
punpckhwd
xor
lods
paddsw
ret
addr16
out
mov
inc
dec
sub
pushf
mov
or
insl
fidivrl
dec
inc
or
cmp
or
sub
stc
daa
hlt
fcomi
cmpsb
loopne
in
sar
pop
or
inc
les
inc
loope
push
adc
pop
ljmp
ss
jnp
jle
lret
mov
cmpsb
aam
sub
jb
imul
add
sbb
stc
push
pop
stos
sbb
sbb
arpl
dec
dec
fs
sbbl
mov
mov
dec
inc
xchg
inc
or
mov
popa
rclb
mov
insl
imul
pop
mov
lret
mov
scas
popf
idivl
push
push
add
repnz
xor
mov
mov
pop
aam
jnp
add
inc
repnz
outsl
inc
lcall
js
lods
lods
jmp
test
sbb
into
xor
pusha
call
xchg
cld
xchg
or
push
inc
incb
test
and
xor
ret
mov
sub
sub
adc
sbb
jecxz
or
or
ffreep
jae
xlat
mov
and
icebp
flds
sub
and
mov
loopne
cmp
or
sbb
and
iret
aad
push
daa
ret
les
sbb
adc
xor
mov
jo
mov
or
dec
repz
pop
pusha
push
mov
sub
lods
dec
in
ja
ljmp
sahf
xor
cmp
mov
jne
or
mov
ret
lret
cltd
stc
dec
sbb
sub
push
pop
sub
xchg
jae
mov
push
add
sti
mov
dec
xchg
jmp
je
cmpsb
call
test
pop
pop
int3
mov
inc
ret
les
fdivrs
or
call
lock
pop
push
call
testl
xor
stos
and
sti
cmpsl
push
xchg
pop
iret
outsb
sub
popf
mov
data16
insl
sub
cmpsb
dec
xchg
dec
adc
out
or
bound
dec
fxch
addr16
mov
mov
inc
cmp
dec
pop
sahf
xchg
mov
je
cs
or
push
mov
fcoml
adc
xchg
push
popa
xor
scas
cld
jbe
mov
jle
mov
push
and
clc
fbld
push
int3
ficoml
int
js
out
jo
push
sahf
lea
cmp
jecxz
pop
xchg
dec
dec
add
cmpsl
inc
sbb
orl
xor
push
lock
mov
sub
test
sbb
sbb
stos
adc
pop
mov
pop
fsubs
mov
cs
and
repz
pushf
cmc
pop
jl
inc
jo
dec
nop
and
mov
jecxz
xchg
mov
push
mov
jns
lahf
and
roll
mov
movsl
pop
or
mov
outsb
adc
sub
cmp
inc
andl
sbb
sub
mov
xchg
pop
or
cmc
mov
loope,pn
lods
mov
out
inc
sub
jns
call
xchg
xorb
rolb
adc
dec
add
pop
pushl
aas
ss
nop
iret
cmpsb
pop
rorl
icebp
adc
in
aad
lds
pusha
push
lods
sbb
cltd
pop
dec
rolb
popf
xchg
inc
push
imul
fucom
jno
hlt
add
and
addb
inc
aad
jg
cmp
shl
and
cltd
popf
xchg
inc
jne
jb
mov
das
loop
scas
inc
add
xchg
aam
and
icebp
add
aam
cmp
mov
push
pop
adc
movsb
xor
dec
push
sbb
sbb
mov
mov
cmp
or
sub
in
push
lods
movsb
or
push
mov
sbb
or
cmp
clc
cld
xchg
je
pushf
mov
aas
test
cmp
mov
cmpsl
sbb
cmp
lret
sti
lods
mov
jmp
mov
pop
rcr
mov
pusha
xchg
jl
sub
and
inc
mull
jl
inc
jnp
in
xchg
dec
fidivs
jp
push
dec
and
sarl
jg
xchg
jns
test
cmp
xchg
dec
repz
mov
cs
sbb
lods
cs
push
arpl
in
shrl
ja
push
imul
fldt
mov
out
xchg
pop
lods
mov
sar
lods
adc
mov
out
dec
push
and
sbb
inc
pop
adc
ss
ja
ja
bound
shll
pop
jp
lahf
add
mov
add
mov
test
xchg
rorb
rol
das
push
ds
mov
sub
enter
mov
mov
cmpsl
nop
jbe,pt
cmpsb
ret
cmpsb
and
pop
shll
add
enter
pop
mov
xchg
push
jmp
lahf
cli
jl
ss
sub
or
mov
pop
arpl
dec
pushf
push
push
enter
push
or
imul
addr16
dec
dec
pop
outsl
mov
push
adc
aaa
add
adc
testl
ror
push
dec
aas
test
imul
jmp
xchg
adc
int3
imul
mov
jo
xchg
jne
imul
lcall
jns
pop
xor
test
int
into
stc
jp
les
inc
fstpt
cmp
pshufw
or
push
or
inc
inc
xor
sub
mov
aas
sahf
push
add
adc
xchg
push
mov
sub
mov
jge
push
das
std
sub
lds
mov
ret
jl
cwtl
ret
pop
mov
into
js
fsubs
int
out
mov
jno
arpl
mov
xchg
pop
xchg
mov
fisttps
mov
jb
mov
xlat
outsl
out
outsb
or
leave
push
mov
sub
push
jae
in
sub
inc
call
subl
dec
into
mov
arpl
mov
mov
or
lods
cs
js
pop
das
je
cmpsl
xchg
jmp
cmpsl
or
xchg
jo
mov
leave
imulb
pop
pop
stos
mov
mov
or
lea
sbb
test
cmp
mov
xlat
sbb
sbb
jbe
inc
incl
popf
mov
gs
pop
pop
scas
jne
inc
inc
cmp
jno
push
imul
jecxz
aad
xchg
add
shll
shl
test
push
xchg
jne
sbb
out
dec
and
aaa
cld
lahf
add
outsl
sub
loop
outsb
fistpll
pop
lret
int
std
add
sti
dec
ds
pusha
cmp
dec
dec
popa
pop
mov
sahf
push
push
xor
stc
push
push
pusha
push
dec
popl
aas
inc
xchg
xchg
je
movaps
in
mov
lds
inc
leave
mov
or
xor
cwtl
inc
xor
int3
sti
xchg
aas
popa
add
mov
jno
cmp
orl
inc
adc
mov
filds
ret
test
adcb
dec
mov
mov
mov
cmpsb
push
hlt
sub
mov
inc
bound
sbb
cmp
cmpsl
int3
int
inc
jmp
fbld
das
leave
icebp
clc
pop
std
xchg
fs
inc
mov
mov
das
sub
mov
jge
es
popa
and
sbbb
dec
pop
dec
sbb
pop
bound
fldenv
mov
xor
addr16
ss
sti
lret
fiadds
inc
pop
pop
test
or
out
outsb
add
int
dec
ret
in
adc
push
idivl
aad
scas
lahf
popf
push
imul
sub
ss
sub
push
push
lock
call
cmc
mov
inc
sub
aad
stc
scas
push
repz
lods
je
imul
mov
add
sbb
adc
mov
jbe
shll
addr16
cmp
into
std
sbb
add
outsb
mov
fs
das
aam
rclb
icebp
out
push
mov
sub
les
inc
ds
arpl
aaa
out
push
and
mov
add
jecxz
repz
mov
dec
inc
aad
loope
push
fsubrs
xchg
push
push
lahf
push
js
adc
inc
ljmp
push
enter
filds
into
cwtl
into
mov
mov
add
std
adc
cltd
xchg
sub
test
outsl
cld
orb
jo
sub
push
inc
xorl
and
mov
call
or
clc
add
mov
push
fldenv
and
repz
cmc
add
sub
mov
js
divb
scas
popf
mov
adc
or
lahf
add
mov
adc
jne
mov
xchg
popf
lock
push
js
cmp
jecxz
loope
sbb
push
arpl
mov
enter
in
ss
fcmovnu
or
nop
add
push
int3
push
push
rdpmc
lret
gs
mov
cmp
pop
mov
xchg
or
dec
test
gs
les
stos
call
bound
or
xchg
cmp
ret
push
pop
xor
outsb
xor
pop
cmp
xor
jge
loopne
push
sub
stos
mov
adc
dec
cli
jb
lahf
xchg
jmp
dec
movsb
pop
inc
inc
ja
fldt
arpl
lcall
leave
ret
or
bound
xor
shlb
inc
pusha
int
push
mov
cmp
jecxz
subl
mov
push
loope
push
mov
jne
jg
sub
sbb
cli
adc
faddl
jbe
and
jmp
inc
cmp
jp
add
mov
push
insl
mov
mov
jg
lods
and
inc
xchg
cli
lods
adc
mov
xchg
fcomip
sub
xor
fucom
xchg
mov
jnp
fcoml
xor
mov
int3
xchg
mov
test
mov
fstpt
lds
mull
pop
mov
mov
jns
inc
sub
pop
ror
lcall
call
mov
push
cmp
xor
das
cmp
lahf
sub
pushf
sub
fnstenv
pop
and
ds
add
sub
or
out
enter
jge
addr16
jbe
fsub
sub
pop
test
cld
sub
imull
or
mov
dec
mov
icebp
pop
jmp
jns
mov
mov
mov
cli
aad
int
mov
imul
aas
cli
inc
packuswb
loope
jmp
pop
mov
add
sahf
out
jg
mov
pop
scas
out
or
mov
fidivrs
jo
fwait
nop
add
out
mov
sub
jmp
xor
sbb
add
xchg
push
lds
add
ret
shll
ja
or
fcom
jp
and
scas
pop
adc
pop
rorl
push
pop
sub
xor
jmp
push
pop
movsb
lret
mov
dec
sbb
cmp
repnz
dec
fldcw
cwtl
fcomi
icebp
lods
or
xchg
lcall
ds
clc
mov
pop
mov
popf
cmp
jns
loop
test
insl
mov
dec
mov
cmp
inc
in
add
push
and
test
xor
aam
es
test
xchg
scas
sbb
xchg
call
adc
into
insl
ret
add
jbe
dec
cwtl
movsb
and
stc
pop
push
xchg
filds
add
jecxz
lods
ret
out
imul
jmp
jne
inc
xor
ret
sbb
sub
loope
fcoml
mov
in
lods
mov
mov
sahf
sbb
push
je
mov
pusha
aam
xor
mov
lea
pop
inc
pinsrw
xchg
mov
cmp
add
test
push
mov
and
mov
and
pop
adc
sub
push
mov
je
jg
out
lret
xor
sub
andl
orb
dec
add
mov
sbb
adc
in
mov
adc
or
fsts
and
mov
mov
push
push
dec
test
mov
xor
dec
mov
jbe
mov
ret
jne
jae
mov
push
jb
cmpsl
xor
push
jecxz
out
or
jge
cmpsb
cmp
push
mov
mov
mov
jae
dec
pop
or
mov
inc
push
aad
js
rorb
or
and
cmp
add
inc
push
aas
lret
lock
fimuls
dec
mov
sbb
repnz
lds
push
mov
fmul
dec
xor
subb
pshufw
or
dec
jecxz
mov
in
dec
incb
stos
xchg
and
add
push
mov
pop
insl
sbbl
mov
lods
mov
mov
and
test
data16
jmp
xchg
mov
int
mov
jae
dec
icebp
div
push
movsl
jg
out
jecxz
mov
jmp
stos
pop
shll
mov
faddl
icebp
mov
xchg
out
lods
pop
mov
imull
rol
inc
push
xchg
mov
mov
xor
ds
in
subb
mov
jp
add
sarl
xor
lret
adc
jmp
pop
lcall
and
frstor
arpl
mov
lds
das
jle
dec
xchg
and
inc
xchg
rclb
in
mov
push
sub
andb
scas
loop
std
and
iret
daa
nop
dec
ss
inc
add
xchg
or
xchg
test
fsts
lods
push
sti
lahf
push
dec
cmp
xor
in
jg
inc
inc
mov
sbb
mov
sub
or
adc
fstl
jl
outsb
aas
cmpsl
and
imul
fstl
pop
imul
jae
push
xlat
lea
mov
or
das
inc
pop
add
notl
imul
int3
out
push
popf
mov
or
nop
jle
or
ja
jecxz
js
jp
push
jp
out
inc
push
add
inc
or
pusha
mov
add
test
sti
shrb
mov
pop
xchg
shll
mov
test
insb
cmp
insb
jge
popl
iret
pushf
and
mov
out
xchg
and
shl
or
mov
fildll
dec
cmp
in
push
xor
mov
ljmp
ss
dec
sbb
inc
or
rclb
rcrb
xchg
imul
mov
and
loop
imul
or
dec
push
mov
push
and
es
xor
mov
xor
mov
inc
shlb
mov
adc
and
dec
imul
adc
cmp
stos
std
xchg
push
push
fistpl
sub
sbb
ret
leave
fstl
and
sub
or
ret
sbb
jns
pop
cmpsl
mov
mov
aad
call
inc
mov
jae
nop
scas
mov
enter
jno
cmp
ja
and
mov
in
mov
mov
icebp
lret
xchg
and
gs
push
lock
cld
int3
test
adc
cmp
inc
mov
mov
imul
xchg
inc
lahf
mov
repz
push
cmp
xchg
add
mov
sub
jmp
dec
cmc
js
popf
cmp
mov
xchg
push
mov
enter
pop
insb
loope
js
out
jbe
mov
sub
or
push
jg
inc
in
jmp
pop
jb
xchg
xor
or
movsl
sbb
addl
inc
scas
andl
lea
jbe
mov
pop
stos
mov
sub
mov
and
repnz
pop
imul
push
and
push
fsub
or
cmp
cmpsb
pop
popa
sub
clc
popf
mov
push
push
lods
xor
and
mov
or
and
lcall
and
cwtl
test
imul
stos
dec
outsb
mov
mov
and
daa
dec
aas
pushf
stos
loopne
xchg
fs
push
int
jp
in
sbb
repz
cld
xchg
test
xchg
mov
inc
inc
fildll
clc
stos
jns
out
stos
mov
sahf
sub
les
clc
xchg
aaa
dec
or
mov
sbb
mov
out
scas
xchg
movsl
adc
xor
jp
leave
ljmp
scas
adc
inc
and
xlat
add
imul
pop
into
sar
sahf
xchg
mov
push
je
call
push
dec
jnp
mov
add
jp
pop
add
aas
out
pop
inc
roll
push
sub
aas
mov
fildll
mov
lret
popf
jns
sahf
lds
nop
sbb
rcrl
mov
and
stos
ja
aam
out
imul
push
stc
inc
jno
cmovno
gs
mov
xchg
cmp
sbb
sub
or
ret
cmp
add
cltd
int
add
jmp
and
adc
push
repnz
sarb
push
mov
outsb
stos
jecxz
aaa
in
iret
je
lea
iret
mov
mov
add
xchg
test
add
adc
jmp
jecxz
xchg
imul
mov
push
dec
loop
scas
shl
pop
or
cmpsb
jae
int
pop
aad
sbb
inc
sub
mov
cmp
jb
es
int3
and
sub
cld
enter
rcl
or
mov
lock
loope
clc
inc
jae
add
popf
dec
stc
loop
cwtl
xchg
pop
stos
mov
push
dec
jp
adc
jno
pop
xchg
lcall
dec
ljmp
cmp
std
fistl
mov
dec
sbb
stc
pop
xlat
fisubs
test
fucomi
outsl
outsl
or
xor
inc
xor
pop
std
out
movsl
xchg
cmpsl
xchg
es
push
jb
movsl
in
out
prefetch
and
ret
lds
inc
sbb
repnz
sbb
es
int
popa
int
clc
test
jno
mov
stos
fmull
jmp
and
sub
sub
jmp
pop
mov
lcall
cmp
fnsave
pop
andl
ds
inc
push
lea
mov
add
popf
xchg
pop
pop
out
sahf
cmp
add
aam
cmp
mov
xchg
push
jbe
xor
mov
es
test
ror
test
repz
or
pop
add
rcll
lock
add
or
out
mov
inc
cmp
nop
jbe
leave
pop
xor
cmp
je
or
out
je
fsincos
loopne
mov
bound
inc
and
divb
push
aaa
sbb
mov
imul
xchg
nop
aad
adc
lock
gs
or
daa
in
jle
sbb
fsts
xchg
out
inc
mov
aas
or
dec
mov
cld
xor
movsb
push
repnz
scas
fildl
add
in
out
xchg
das
jle
pop
arpl
cwtl
testb
mov
cmpsb
sub
and
push
jo
cmp
das
and
data16
test
bound
mov
dec
sub
push
push
push
mov
jg
sub
leave
loope
ret
xchg
sti
xor
lods
add
icebp
es
inc
movsb
mov
inc
sub
sub
clc
mov
roll
mov
push
xchg
les
push
js
xor
push
aad
xor
xor
adc
iret
lret
cmp
dec
iret
bound
mul
repz
and
stos
test
lods
ds
test
rolb
cs
icebp
mov
pop
sub
mov
xchg
test
enter
js
cmpsl
mov
pop
xchg
pop
cli
pop
ret
adc
mov
daa
in
jg
or
jge,pt
aaa
push
dec
xorl
pop
stc
jno
loop
out
test
rolb
mov
imul
lcall
cmp
out
scas
aas
mov
cmpsl
fsts
cli
lods
daa
adc
push
add
lret
stos
fisubrs
cwtl
ss
popf
jge
lea
add
jmp
in
xchg
test
fsubr
data16
orb
add
out
mov
xchg
out
mov
pop
aad
sub
mov
das
adc
push
aaa
add
dec
xor
mov
inc
test
add
jge
mov
lods
mov
ss
xor
stos
push
ficoms
pop
aaa
hlt
jg
xchg
lds
fdivs
mov
rcl
int3
es
adc
shll
daa
and
stos
fs
cs
fwait
cli
xor
out
call
sti
xchg
das
fs
and
lock
adc
pop
leave
cltd
ljmp
sbb
das
or
imul
xor
out
sbb
lods
out
pop
sbb
xchg
mov
jns
pushl
add
sbb
add
xor
cmp
popf
lret
lcall
mov
popf
fistpl
ret
pop
out
dec
ret
mov
loop
rorb
adc
jl
adc
mov
jl
inc
push
or
arpl
out
daa
inc
lret
add
cs
adc
pop
dec
jmp
in
loop
adc
out
aam
inc
fmull
dec
loop
jmp
fs
imul
mov
xor
xchg
int3
subl
int
adc
push
outsl
movsl
inc
or
mov
test
mov
cmp
lret
imul
ss
push
xor
jno
test
clc
mov
jae
jecxz
movsl
adc
sbb
ret
gs
fistpl
js
ja
cmp
ret
ret
rclb
inc
test
cli
mov
adc
xchg
cltd
cmp
es
or
cmc
mov
push
movsb
dec
lcall
cmpsb
sub
jb
ds
and
push
or
lock
cltd
sbb
movsl
push
cmp
mov
xchg
lcall
push
jnp
subb
push
lahf
mov
dec
xchg
outsl
cld
cmp
push
sbb
pop
xchg
inc
nop
repnz
lods
mov
insl
imul
dec
aas
and
les
mov
in
loope
inc
lahf
jne
push
and
js
mov
notl
jl
sub
mov
imul
xchg
lret
imul
mov
mov
or
test
subl
in
cmp
xchg
sbb
es
lods
jl
aad
stos
mov
iret
sub
cmp
dec
cmp
shl
sahf
push
adc
sbb
xchg
aad
insl
ret
aaa
bound
xor
jmp
rep
or
xchg
lock
push
pop
jp
sub
and
inc
inc
movsb
ja
push
sbb
test
inc
push
in
gs
cltd
in
mov
out
adc
sbb
jns
xchg
hlt
in
dec
mov
addr16
xor
sub
scas
or
sbb
add
adc
mov
or
daa
and
mulb
imul
jp
xchg
xchg
or
jns
mov
push
arpl
insl
insb
sarl
xor
xorl
gs
mov
jns
cmp
ret
in
pop
testb
dec
jo
subb
shlb
mov
mov
rcl
mov
sbb
mov
scas
mov
pusha
imul
adc
data16
testb
dec
pusha
loopne
test
or
cltd
xchg
inc
push
fwait
in
test
push
jg
mov
mov
jbe
adc
ret
pop
bnd
jp
hlt
xlat
or
pop
cli
loopne
jae
jbe
dec
adc
loopne
sbb
jle
cmp
in
cltd
push
dec
push
inc
cmpsb
mov
dec
lret
loopne
rdmsr
bound
popf
pop
lret
lock
std
mov
xor
mov
stos
shl
jbe
outsl
push
mov
aad
sbb
rol
push
test
aaa
xchg
sahf
ret
shrb
std
ret
mov
fistpll
cltd
and
aad
mov
jae
fists
sbb
popf
jecxz
ret
jne
test
leave
ficoml
and
ds
sbb
xchg
incb
leave
dec
mov
add
mov
inc
jae
mov
dec
mov
popf
mov
cli
mov
xor
fcompl
int3
sbb
cwtl
out
dec
mov
adc
jg
ljmp
dec
in
fwait
xor
mov
in
lea
test
gs
dec
mov
cli
dec
push
aaa
and
xchg
push
loop
mov
iret
out
or
mov
mov
in
sahf
addb
test
test
into
in
les
movsl
into
adc
cmp
push
bound
mov
push
or
add
cmp
mov
inc
call
push
sbb
js
mov
fcom
dec
loop
insb
and
mov
xchg
clc
imul
sbb
int
jae
lock
fs
outsb
mov
inc
jo
and
xchg
ret
xlat
enter
push
dec
ljmp
jmp
sub
and
adc
jl
add
fbstp
popf
sub
inc
jmp
push
roll
adc
adc
sbb
loopne
or
repnz
pusha
enter
dec
jle
je
mov
sbb
leave
mov
mov
ss
jmp
loopne
pop
adc
loope
inc
xor
test
mov
pop
arpl
pop
aas
icebp
xor
inc
or
adc
movsb
mov
pop
pop
mov
mov
rorl
jb
mov
jecxz
mov
push
call
dec
nop
cmp
xchg
test
xchg
nop
shll
push
leave
mov
fmull
das
jge
les
leave
fimuls
pop
jle
inc
aad
jecxz
movsl
fs
mov
or
ljmp
mov
sti
jbe
jne,pt
push
xchg
clc
repnz
loopne
inc
adc
ret
ds
jmp
icebp
inc
cmp
push
not
lcall
mov
das
ss
stos
int3
notb
push
adc
lea
hlt
js
test
dec
inc
imul
and
aam
jg
ror
ljmp
pusha
sbb
testb
sub
cmp
jp
sbb
inc
mov
negl
out
jae
imul
push
inc
mov
inc
out
std
jne
loopne
movsb
mov
test
cmp
sbb
das
jne
lea
mov
mov
mov
xchg
int
xor
add
mov
lds
xlat
shrl
in
jg
daa
ja,pt
or
jns
sub
pusha
sbb
outsl
das
mov
lcall
sub
or
movsb
xor
movsb
out
cmpsb
fcom
cltd
out
clc
test
out
pmaxsw
clc
xor
dec
daa
jo
mov
cmp
push
mov
sti
xchg
inc
mov
orb
test
test
adc
cli
mov
imul
pusha
add
xor
stos
inc
repz
xor
pop
or
mov
dec
jg
push
cmpl
jo
sarb
jo
xchg
lret
cmpsl
aas
and
fwait
rep
cmpl
sarl
xchg
mov
out
pop
cmp
cmp
das
push
clc
hlt
sbb
data16
hlt
jl
out
sub
nop
push
jecxz
or
pop
cmp
cmp
jg
xlat
movsb
pop
and
out
xor
into
jle
push
inc
fidivrs
aam
mov
loopne
sbb
fimuls
xchg
ss
dec
call
cmp
xor
addr16
jno
hlt
dec
or
popl
insb
divb
or
ret
xor
cmp
sbb
inc
xchg
cmp
pushf
cmpsb
push
loop
or
sti
aam
fmull
mov
movsl
outsl
adc
mov
popl
xor
add
cmpsb
dec
cmpsl
or
mov
call
dec
mov
divl
movsb
cmp
repnz
push
dec
in
mov
repnz
scas
scas
xchg
shrl
jmp
mov
xchg
add
shr
repz
lahf
je
inc
lds
fs
pop
xor
movsb
repnz
out
push
sti
sub
in
sbbl
imul
cwtl
aam
ds
mov
andnps
fwait
movsb
xorb
ja
xchg
sub
push
adc
imul
jmp
cmpl
movsb
ret
xchg
push
fs
movsb
test
mov
xchg
popa
or
in
int3
lcall
fdivrl
adc
into
lods
jl
mov
addr16
pop
dec
roll
adc
xchg
sti
mov
cmpsb
mov
ret
lret
and
outsb
xchg
push
pop
mov
adc
fimull
je
jnp
sbb
fstl
clc
aas
sub
mov
lods
dec
fcoml
leave
popl
addr16
pop
cmp
lods
or
fldt
ret
sub
add
jae
and
shll
mov
repz
dec
je
dec
pop
aaa
es
push
mov
nop
mov
aad
js
and
out
cs
push
sahf
jne
xchg
cltd
cmp
push
daa
or
jp
add
jbe
or
mov
arpl
fwait
push
mov
mov
jb
stos
insl
dec
mov
fs
pop
int3
lock
into
movl
xchg
cltd
xchg
fimuls
inc
fstpl
shll
xchg
pop
and
cmpsb
cltd
les
push
dec
and
cmp
test
in
cmp
xor
pop
popa
testl
or
pop
jle
or
sub
jg
xchg
stc
mov
xchg
cmp
imul
xor
pop
das
add
push
adc
jbe
xor
movsb
mov
ds
cmp
add
filds
stos
hlt
cwtl
or
lahf
ds
shr
ja
inc
dec
add
jns
add
jl
adc
fmuls
bound
dec
dec
cmp
sbb
xchg
scas
lods
out
cltd
sub
inc
mov
sbb
cmp
fcom
add
notl
mov
incl
lret
and
pop
xchg
cmp
pop
mov
out
incb
and
inc
xor
leave
cwtl
xchg
xchg
jg
cmp
pop
cmp
iret
gs
adc
ljmp
and
dec
movsb
mov
mov
repnz
jnp
pop
scas
dec
clc
repz
or
sti
inc
dec
mov
sub
jg
fisubl
clc
fsubs
repnz
mov
pop
push
mov
iret
or
jg
es
mov
or
mov
cmp
dec
push
and
mov
dec
push
lea
cmpsb
push
or
les
push
mov
mov
cld
mov
rclb
std
xor
icebp
je
push
add
leave
mov
push
mov
call
or
sbb
add
ds
mov
in
jmp
mov
sub
push
add
xchg
or
data16
fstps
add
fwait
pop
bound
arpl
ss
lds
rcll
mov
xor
jb
cmp
pushf
fs
scas
push
jg
aam
pop
hlt
mov
test
adc
sarb
loope
aas
roll
fistpll
or
sub
testb
aad
scas
out
pusha
aad
cmp
mov
pop
bound
out
push
js
push
ss
mov
bound
enter
jmp
or
push
nop
push
shlb
mov
pop
cwtl
xchg
mov
jns
leave
rolb
fiadds
mov
dec
repnz
push
aas
xchg
mov
clc
cs
mov
addb
repz
mov
loope
xchg
xchg
adc
hlt
pop
xchg
mov
or
test
dec
andl
clc
add
ds
mov
jno
and
sub
sub
push
cmp
fsubs
push
aas
sub
push
faddl
sahf
lock
mov
pop
sbbl
jb
ljmp
paddd
cwtl
and
push
add
lods
mov
fdivrl
ds
jae
arpl
mov
ss
sub
jg
jns
jb
int
shrl
xor
repnz
xor
out
imul
jp
out
mov
and
out
mov
push
push
movsb
jbe
rclb
stos
fucomp
pop
std
pop
add
fdivs
iret
cmp
add
rorb
fwait
dec
mov
divl
mov
or
xchg
cmpsl
pop
imul
addr16
pusha
push
sub
pop
loope
cmp
fdiv
pop
inc
inc
out
or
shrb
jns
inc
mov
xchg
es
add
leave
sbb
xchg
xor
dec
popf
mov
xchg
cmc
mov
mov
testb
or
lds
enter
mov
lret
dec
movsb
add
jl
stos
cmp
pop
aas
dec
adc
addr16
ds
imul
or
lret
mov
aad
les
sbb
in
push
lock
adc
in
inc
cmp
clc
lahf
pop
jecxz
add
mov
add
mov
and
test
mov
jmp
insl
dec
out
and
in
fidivs
jmp
mov
js
or
in
dec
add
out
cld
cld
xchg
adc
mov
cmpsb
add
lds
aaa
shl
mov
and
lcall
fisubrl
sbbl
mov
mov
jno
or
in
fstpl
outsl
cmpsl
sbb
je
iret
ret
or
sub
add
xor
ret
ret
dec
dec
inc
jle
and
cltd
xchg
mov
xor
xlat
pop
int
ljmp
adc
iret
jg
mov
inc
mov
lods
hlt
mov
pop
cmpsb
fimuls
ja
dec
icebp
push
decb
outsb
in
jo
or
mov
fcmovnb
xchg
daa
mov
sub
mov
fs
jno
jnp
dec
inc
jle
stos
sub
mov
mov
sarb
dec
jge
pop
fdivs
pop
jg
dec
mov
test
popa
and
cmp
rcrl
cld
lds
xor
call
pop
sub
pop
int
es
dec
xchg
add
sub
mov
xor
cmovne
sub
push
add
adc
sub
pop
into
and
cld
adc
add
fs
sub
add
mov
xchg
cmp
arpl
add
pop
pushf
sti
shlb
popa
shr
xchg
popf
std
andb
loopne
sub
in
lahf
out
insl
hlt
sub
cli
inc
jbe
and
dec
push
xchg
lea
fmull
loopne
jo
das
out
fiaddl
es
xchg
pop
cs
inc
loop
outsb
ret
inc
adc
addr16
xchg
push
mov
xchg
push
jnp
pop
fsubs
shrb
inc
mov
or
push
mov
pop
adc
jl
mov
hlt
push
or
xlat
jle
js
lds
out
stos
jmp
in
adc
ss
cwtl
in
xchg
inc
cwtl
mov
insl
cli
nop
xor
sbbl
in
cmpsb
lds
mov
lcall
imul
leave
adc
rep
fildl
mov
popa
nop
data16
int
and
inc
mov
shll
out
mov
sbb
fisubs
fstpl
cmp
push
sub
or
jmp
hlt
ljmp
cld
inc
add
xor
cmp
pop
cmp
mov
jo
pop
mov
into
ret
mov
cmovbe
roll
and
mov
and
bound
xor
dec
sub
mov
test
push
fnsave
inc
sub
out
loopne
add
push
sbb
loop
jmp
inc
cmp
lahf
pop
push
insb
lock
xor
jg
aam
loopne
adc
fs
leave
push
cmc
lcall
sbb
pop
cltd
inc
movsl
bound
lea
repnz
adcb
pop
fs
adc
mov
jns
mov
adc
cmp
mov
inc
cmp
mov
sbb
lea
xor
jle
or
imul
str
xchg
push
mov
pop
or
pop
push
jle
or
inc
js
pop
jnp
out
dec
int3
mov
les
into
movsl
repz
mov
aam
xor
mov
xchg
add
mov
hlt
jmp
das
sub
xchg
xchg
outsb
xrelease
jle
mov
repnz
or
pop
shll
fwait
je
pop
loopne
or
sbb
jge
leave
adc
dec
imul
loopne
or
cli
cli
xchg
shlb
cmp
xor
aad
xchg
jg
hlt
out
sbb
pop
jge
mov
dec
insb
jl
mov
mov
and
sub
mov
outsl
sub
test
pop
fmul
pushf
insl
lods
jmp
lea
addr16
mov
test
aaa
and
pop
dec
ljmp
mov
mov
lret
es
fst
lds
enter
adc
sub
mov
loop
mov
divb
sub
ss
scas
pop
orl
jmp
notl
pusha
loop
mov
jl
mov
jmp
or
fistpll
mov
ljmp
mov
mov
mov
loope
pop
mov
data16
dec
cs
gs
pushf
into
and
inc
mov
pop
xchg
pushf
mov
popa
adc
jmp
xlat
std
imul
pop
jmp
icebp
fldenv
js
jp
dec
rol
sub
pop
and
xor
mov
idivl
fdivl
jo
pop
addr16
insb
mov
inc
jge
addl
xchg
add
pop
lret
jecxz
les
test
orl
xchg
push
cmp
stc
sbb
adc
fstpt
test
pop
sarb
mov
pop
pop
fidivl
movsb
add
roll
in
xchg
jne
int
popa
or
xchg
ret
xor
sub
xchg
xchg
jb
in
gs
fmulp
ds
ljmp
adc
pop
mov
cmpsb
mov
sbb
inc
inc
mov
xor
pop
or
in
sahf
rcrl
sub
out
les
xor
pop
and
mov
xchg
shll
stos
js
dec
inc
das
and
push
mov
dec
pop
mov
in
out
es
jns
stc
nop
cmp
push
mov
shrb
mov
cwtl
lret
shrl
inc
lahf
xchg
repz
mov
pop
sub
sbb
in
dec
inc
mov
and
aaa
xor
shll
stos
loopne
test
mov
xor
dec
int3
ret
int
aaa
lahf
and
ret
mov
loop
sbb
sub
imul
repnz
fsubr
jno
movsl
cmp
nop
pop
mov
xor
mov
std
ja
out
arpl
pop
xchg
ljmp
add
cmc
cmp
testl
inc
add
jl
lret
rclb
into
mov
or
fs
push
mov
aaa
adc
jbe
mov
inc
sbbb
ficompl
orb
sar
add
jg
fwait
pop
sub
cwtl
xor
clc
movntq
out
inc
sarb
test
and
mov
fsts
movsb
inc
and
cwtl
xor
push
insl
fmulp
cli
add
cli
adc
outsl
out
mov
xchg
fwait
lret
jg
lahf
es
pop
push
pop
insl
leave
and
mov
adc
out
jne
and
in
stos
sbb
cmpsl
mov
dec
cs
inc
insl
aas
pushf
lahf
fwait
shll
jl
mov
or
insb
cmc
dec
jmp
aam
dec
movsl
mov
xchg
loopne
sti
dec
inc
shlb
push
mov
and
cmp
inc
xor
cli
adcl
inc
jae
gs
xchg
xchg
or
pop
cmp
lods
xor
dec
dec
mov
push
cltd
mov
mov
or
mov
jecxz
leave
inc
in
scas
dec
dec
mov
inc
jbe
insl
jecxz
movsb
loopne
lahf
push
movsb
mov
adc
jo
pop
rclb
lods
ljmp
cld
dec
mov
js
jno
in
fisubl
decl
js
lahf
push
push
pusha
add
xor
jle
hlt
scas
fstp
fs
jg
hlt
and
scas
daa
mov
mov
scas
cmp
lds
jle
cmpl
insb
test
add
dec
or
mov
rcll
rorb
leave
clc
stc
ret
add
out
inc
fistpll
jae
hlt
cmp
sub
or
mov
add
push
sbb
sarb
push
mov
arpl
not
add
xchg
rclb
fisttpll
out
dec
xorb
jbe
je
sbb
inc
sbb
rol
adc
rolb
or
xchg
sbb
mov
xchg
sti
mov
push
insl
sub
repz
push
icebp
leave
inc
sbb
mov
adc
cmp
cwtl
or
cs
cmpsl
jno
dec
call
push
cmp
rorl
jmp
mov
pop
clc
add
roll
cltd
leave
fdiv
cltd
daa
jp
mov
adc
jp
into
push
mov
xchg
adc
cmp
test
test
xor
call
aaa
jae
lods
mov
push
mov
pop
jne
ja
jo
adcl
add
pop
cmp
loope
dec
cmp
and
adc
sub
dec
dec
dec
and
insb
dec
jae
mov
hlt
pop
adc
shrb
adc
stos
scas
imul
cwtl
loop
ret
loop
push
xor
in
mov
pop
ret
or
pop
gs
pop
jp
testl
and
push
out
lret
mov
in
bswap
subl
fdivs
ds
xor
inc
and
push
frstor
mov
inc
cmp
mov
and
sahf
mov
lea
mov
mov
lods
daa
aad
push
pop
ret
jle
mov
mov
mov
sbb
pop
push
sub
cmpsl
xor
adc
mov
fnstcw
filds
pop
in
addb
lcall
push
adc
adc
sub
add
jmp
fwait
push
out
jg
xor
mov
pmullw
stos
je
mov
inc
inc
aad
sub
mov
test
stos
ds
jb
mov
push
cld
jge
idiv
imul
inc
addb
or
andb
xchg
push
and
cmpsl
mov
sub
insb
scas
sti
in
dec
sub
fwait
arpl
subl
lcall
xlat
pop
stos
cltd
mov
dec
hlt
jg
shr
repnz
xchg
pop
jg
push
repnz
sbb
bound
leave
jbe
cltd
addr16
cmp
call
jge
rcl
push
add
out
jl
xor
inc
cmc
push
jp
enter
je
adc
inc
xchg
fcmovnb
jmp
sbb
cwtl
stos
xchg
mov
or
scas
repz
add
movsb
push
push
test
lea
cmpsl
outsb
jmp
jp
pop
sbb
jb
bound
or
nop
jno
mov
aas
hlt
aaa
add
nop
cmpsl
cmc
and
sahf
add
insb
lcall
js
das
mov
sbb
mov
pop
add
and
lahf
xchg
mov
shrl
leave
mov
jb
out
fcmovb
addr16
and
mov
and
jbe
test
lock
clc
dec
jmp
or
and
pushf
sbb
in
xchg
ss
loopne
push
pop
les
insl
data16
xor
stc
lock
daa
ss
loopne
pop
xor
rcrl
loop
std
arpl
and
add
add
xlat
es
dec
mov
inc
push
fisubs
int
scas
ss
fisttps
stos
cmpl
fldcw
scas
push
test
adc
push
adc
dec
inc
repnz
mov
cmp
push
aaa
sbb
lret
mov
pop
jl
jb
xchg
sahf
mov
fmull
xor
push
mov
xor
dec
xlat
std
mov
rolb
test
repnz
mov
bound
iret
popf
cmc
stos
add
sub
hlt
loopne
lods
add
mov
mov
popa
and
roll
movb
testl
add
mov
xchg
add
ret
xchg
jns
pop
pop
outsb
popa
mov
int3
inc
cmp
loope
loop
cmp
es
mov
and
mov
js
or
push
jl
pop
into
fwait
add
mov
add
or
lea
imul
ds
inc
ror
pop
push
sub
sbb
xchg
add
cli
aas
xchg
mov
cld
ljmp
mov
cmp
jo
mov
adc
shlb
jns
sbb
pop
xchg
mov
mov
outsl
out
ljmp
mov
adc
dec
in
cltd
xor
fisubl
pusha
dec
sub
stos
add
mov
push
cmc
data16
sbb
mov
gs
out
or
mov
mov
pop
ret
sbb
push
pop
pop
in
ja
mov
and
fwait
pop
rcr
push
jl
aaa
push
cmp
hlt
mov
aad
xchg
mov
clc
pop
mov
aas
cmp
aaa
nop
icebp
insb
fistps
xchg
rorb
insl
push
sbb
xorl
lds
xlat
jae
xlat
cmp
mov
and
fwait
mov
cltd
mov
aad
insb
cmp
leave
ss
lret
fdivrl
pop
test
xor
into
jmp
addl
inc
aad
les
addr16
or
xchg
inc
repnz
push
inc
cltd
sub
in
ret
xchg
fwait
sbb
push
cwtl
cmpsb
in
in
xor
push
xor
aam
adc
outsb
pop
and
xchg
sub
scas
lret
jmp
mov
add
lahf
mov
stos
xchg
pop
shlb
vpackssdw
pushf
inc
fs
push
dec
jne
push
ds
icebp
dec
fidivl
mov
test
xor
mov
cmpsl
xchg
ljmp
stos
jb
lea
lret
pop
sub
or
add
inc
pop
sarb
xor
test
adc
imul
and
ret
adc
adc
mov
fcom
rcrb
in
aaa
or
and
stc
cmp
add
pop
jbe
cmpsb
loope
mov
pop
dec
pop
jns
shr
int3
in
pop
pop
dec
mov
movzwl
lret
xchg
sub
leave
mov
and
jg
sub
loop
ds
xchg
shll
cli
jmp
test
movsb
insb
mov
ljmp
jo
les
sbb
xor
sub
lret
fmulp
mov
orb
hlt
dec
push
ret
sbb
xor
adc
test
pop
adc
mov
mov
bound
rcr
fstl
xchg
int
mov
mov
cmpsb
fists
jns
bound
gs
cld
dec
sbb
push
popa
sub
out
sub
inc
dec
jnp
sbb
jne
je
jl
or
in
push
aas
xlat
pop
stc
insb
stc
sbb
insb
and
adc
imul
es
mov
popa
pxor
mov
pop
mov
add
sub
pop
popf
imul
mov
jle
or
sti
xor
sarl
jns
jae
in
mov
dec
lret
test
mov
or
adc
and
push
or
add
adc
inc
mov
xchg
mov
movsb
jo
adcl
ja
lods
testl
inc
pop
push
lods
push
bound
dec
jle
sbb
inc
nop
and
mov
ret
stos
ljmp
scas
add
xor
xor
int
arpl
cmpsl
mov
add
ja
aad
aad
daa
movsb
cmp
xchg
mov
aaa
jl
xor
pusha
add
jg
clc
add
sbb
loopne
jg
adc
push
ljmp
into
and
pop
mov
jl
icebp
insb
int3
adc
out
add
jle
cltd
mov
movb
push
ds
std
sbb
jl
daa
sbb
pop
movl
stos
lret
push
mov
or
jno
sbb
mov
pop
fwait
xor
sub
cmp
mov
ret
jp
xchg
mov
aad
jnp
cmp
ss
push
mov
push
outsb
adc
fisubrl
bound
aaa
jne
mov
pop
cltd
push
jl
mov
cmp
adc
and
repz
fwait
lret
sub
pop
test
loope
and
adc
das
mov
mov
push
ret
ret
xor
int
ljmp
scas
dec
pusha
jae
mov
sub
sub
mov
and
clc
pop
shrb
sbb
cmc
mov
mov
add
shl
loop
sbb
pop
lods
data16
and
addr16
sub
movsl
and
sbb
in
arpl
das
adcl
iret
sub
push
stc
push
and
add
mov
mov
xor
test
in
std
and
lret
jmp
loope
adc
cmp
pop
push
jno
xchg
mov
mov
imul
in
adc
mov
popf
shrb
mov
xchg
jmp
cmp
cld
pop
fsubl
imul
xchg
fsubrl
add
sub
mov
popf
sahf
lods
mov
pop
sbb
imull
sahf
xchg
orl
int3
cmpsb
push
stos
push
testb
cmc
iret
addl
stos
leave
mov
aaa
or
pop
or
stos
or
lods
in
out
adc
lods
fsubs
jmp
cmp
in
pop
cmp
fucomp
repnz
add
aas
lds
loope
loope
ss
mov
loope
cli
iret
pop
add
or
subb
lahf
std
add
mov
pop
scas
int3
and
and
xchg
sub
repnz
and
adc
pop
sub
jbe
and
or
pop
shl
cmp
adcl
mov
push
shll
lods
cltd
das
fidivs
inc
cmp
sbb
dec
or
outsb
pop
dec
sbb
and
mov
inc
cld
loope
dec
pop
call
cli
adc
stos
int
inc
pop
mov
mov
jb
cmp
xor
cli
push
inc
adc
jmp
xor
std
add
and
js
gs
sbb
sti
leave
inc
jmp
xchg
mov
push
lods
and
popa
mov
je
notb
je
aas
out
aas
inc
cmp
mov
jns
test
mov
xchg
or
pop
loopne
mov
push
adc
push
gs
cmc
mov
and
jae
popa
outsb
mov
pop
stos
xor
mov
mov
mov
mov
xor
je
adc
add
adc
pusha
jl
scas
hlt
and
dec
loope
leave
mov
pop
dec
inc
out
jb
mov
xchg
jg
mov
mov
xchg
push
call
outsl
sub
and
getsec
mov
sti
lret
rorl
add
push
daa
andb
pop
imul
xor
pop
push
add
ret
mov
jbe
add
dec
mov
cmp
sbb
inc
rorb
jmp
arpl
lds
and
mov
outsb
adc
mov
lock
pop
inc
into
inc
push
dec
or
fldl
dec
repz
popf
dec
hlt
jne
pop
adc
cmp
push
fwait
fs
dec
dec
xor
mov
addl
and
cmp
mov
add
push
inc
pop
dec
int3
adc
xor
mov
repnz
shlb
pop
dec
jo
jle
loopne
notb
int
leave
xchg
dec
aas
mov
xor
cmpsb
jo
jne
jmp
mov
mov
ds
subb
push
adc
mov
pop
clc
lcall
jae
loop
or
jg
and
jp
daa
mov
pushf
and
mov
sbb
jnp
scas
jnp
mov
xor
stos
js
gs
test
aad
cmp
outsl
lock
mov
repnz
lcall
push
mov
enter
jl
and
nop
pop
xor
stos
vmwrite
arpl
jbe
test
add
pop
scas
jo
jno
xlat
aad
and
rclb
hlt
inc
ljmp
sahf
cwtl
incb
repz
push
push
pop
add
pop
push
scas
lret
inc
pop
and
cmp
sub
adc
mov
rcrl
cwtl
xor
xlat
mov
xor
jb
mov
addr16
jle
xchg
roll
pop
push
sub
pop
mov
cld
and
movsb
push
je
rcll
sub
dec
repnz
aas
pop
mov
int
mov
aaa
dec
pushf
dec
ret
mov
dec
stos
dec
mov
lock
jge
add
dec
fs
mov
mov
inc
mov
scas
cmp
jmp
jle
fdiv
mov
mov
dec
inc
push
push
adc
cmp
mov
xchg
fsub
dec
dec
lahf
fs
lcall
pop
xchg
jb
push
mov
push
mov
mov
int3
enter
or
gs
lcall
int
ljmp
in
xor
inc
pop
aad
fstpl
sub
and
gs
pusha
in
stc
pop
ss
jmp
mov
or
sbb
jno
mov
test
ret
push
arpl
dec
outsb
sub
int3
in
lea
cmp
cmpsb
xor
sbb
or
jl
test
lcallw
push
dec
dec
js
pop
jnp
cmc
mov
cltd
roll
lahf
push
xchg
pushf
add
lahf
sti
movsb
testb
xchg
in
jb
pop
std
call
and
cmpsb
negb
mov
ret
xor
mov
jmp
es
scas
lret
lcall
push
xchg
and
mov
xor
hlt
outsl
addr16
mov
xor
sub
iret
std
insl
rcrb
push
dec
xchg
add
mov
loop
imul
inc
aam
pusha
push
je
or
jmp
fbld
cmp
pushl
jg
pop
mov
adc
cmp
mov
and
xor
push
mov
cmp
pop
sub
stos
ljmp
popa
mov
rorl
cmpsb
push
mov
xchg
divl
pop
add
dec
push
adc
mov
jne
addr16
or
fisttpll
or
xor
aas
push
popf
xchg
mov
xchg
mov
js
aas
pop
mov
popf
shl
pop
hlt
adcb
outsb
pop
adc
bound
xchg
sub
jo
mov
jae
mov
dec
out
lods
mov
mov
int
push
sahf
push
mov
xor
mov
inc
rclb
adc
out
cld
fidivrs
dec
jbe
mov
sbb
sahf
in
adcl
int3
loope
or
dec
adc
test
ret
adc
push
cmp
outsb
add
loop
fstl
adc
or
loopne
jp
out
stos
sti
push
push
iret
mov
push
dec
add
pop
mov
ljmp
test
xchg
sbb
mov
adc
and
jo
leave
into
cwtl
ret
xchg
movsl
sbb
or
push
sub
js
mov
jp
xchg
sbb
adc
sub
out
sub
sbb
or
push
ret
pop
jle
call
sbb
lret
push
sbb
mov
std
arpl
mov
dec
lods
pop
inc
or
fldenv
ret
add
add
sub
movsl
lret
inc
shl
lret
pusha
jno
dec
jne
fsubl
cmp
inc
adc
das
push
xchg
xchg
or
add
xor
pop
test
aaa
test
and
lods
dec
sub
hlt
pop
push
testb
mov
mov
cmp
fildl
jae
stos
loopne
dec
jno
dec
ror
dec
ljmp
shrl
jge
dec
mov
jge
and
lahf
std
push
int3
sub
nop
mov
ja
je,pn
clc
into
movsb
out
test
daa
adc
jo
stos
lea
adc
rcrl
cmp
imul
negb
mov
cmc
sti
pusha
xlat
dec
sbb
mov
insl
mov
in
mul
movsl
sbb
xchg
xor
pop
enter
fstl
mov
lahf
nop
dec
sbb
cmp
cltd
mov
ss
aam
mov
jbe
in
stc
scas
and
sub
push
sbb
sahf
pop
out
stos
or
mov
xor
out
arpl
or
xor
inc
inc
mov
cmovne
add
sub
decl
call
sub
jae
push
push
xor
pusha
dec
subl
sub
mov
sub
inc
fwait
test
mov
ret
push
add
aas
push
xchg
and
cmp
shlb
test
insb
push
bound
push
rolb
out
pop
fsub
pop
push
push
jae
xchg
ljmp
add
mov
cwtl
scas
aaa
bound
inc
scas
jl
sub
sub
in
dec
add
mov
push
add
scas
dec
xchg
sub
xor
mov
adc
fbstp
orb
add
pop
pop
aad
mov
fisubl
std
imul
mov
data16
xor
in
sbb
pop
xchg
test
mov
inc
movsb
xor
and
stos
mov
movsb
pushf
cmp
addb
cs
push
fwait
xor
or
in
sub
dec
sahf
imul
cmova
ljmp
arpl
xchg
icebp
fistpll
sbb
xchg
into
push
adc
jl
or
cmp
xor
aam
stos
push
add
jmp
push
mov
psubsb
xlat
nop
insb
pop
add
pop
push
sti
aam
sub
in
scas
adc
and
lret
rcl
push
add
add
leave
xor
test
scas
sbbb
sub
xor
inc
outsb
lahf
mov
jno
imull
push
xorb
add
cmp
in
je
inc
ds
and
inc
jmp
mov
shlb
or
mov
dec
lcall
sbb
lcall
jno
fdivr
popa
push
and
iret
mov
mov
mov
or
xor
hlt
mov
mov
pmuludq
mov
cmpsl
jns
cli
leave
and
sbb
adc
jo
dec
xchg
cmp
in
cmpsb
cmp
xchg
test
stos
mov
dec
and
or
push
mov
popf
mov
dec
adc
cmp
stc
add
jle
lock
mov
adc
dec
leave
in
inc
adc
cltd
stos
roll
pop
xchg
xchg
repz
out
fs
xchg
xchg
scas
popa
push
cwtl
dec
stos
mov
in
mov
and
or
ret
leave
mov
jl
insb
aam
jb
dec
xchg
push
scas
or
test
or
arpl
jmp
mov
fwait
add
popf
les
mov
scas
xchg
subb
push
andl
mov
mov
fcompl
cmp
fcmove
mov
cltd
mov
pop
loop
sub
lahf
jno
jb
lahf
xorb
movsl
mov
sbb
jp
mov
data16
xor
je
stos
les
jae
add
ss
es
ret
xchg
cmpsb
loopne
test
xchg
inc
fdivrl
je
lahf
lahf
movsb
adc
cmp
repnz
lock
mov
call
cmp
in
pop
push
movsl
ds
xor
mov
das
fsubrl
mov
pop
scas
in
mov
add
sbb
pop
test
jne
xor
out
mov
outsb
lds
xchg
imul
push
xor
xchg
mov
movsb
mov
ret
mov
mov
pusha
dec
xchg
repnz
push
or
xor
pop
shlb
enter
and
lret
movsb
push
adc
sbb
dec
xor
mov
sub
mov
mov
sbb
mov
push
jge
ljmp
ret
jns
aas
mov
mov
adc
dec
adc
jo
pop
and
xchg
or
pop
in
cmp
xchg
sub
lock
and
mov
lods
mov
or
dec
mov
cmc
or
clc
lds
dec
mov
std
jle
adc
or
xchg
sub
shrb
stc
push
mov
and
mov
xchg
in
jmp
jne
icebp
popl
sbb
mov
pop
sbb
xchg
in
scas
test
add
inc
in
cmc
mov
xchg
push
popf
js
es
pop
cwtl
outsl
subb
in
adc
cmc
xlat
dec
adc
loopne
ret
cltd
mov
fiaddl
bnd
int
push
mov
mov
xor
jo
or
mov
and
pop
xchg
jge
das
mov
ret
add
nop
add
push
mov
repz
daa
pop
cmp
push
dec
cmp
sbb
mov
mov
dec
pushf
inc
inc
jmp
pop
subb
xlat
jae
fiaddl
sub
clc
mov
cmp
push
fwait
fwait
rcrb
dec
adc
xor
in
and
xchg
stos
xorb
popa
sahf
loop
jg
sub
stos
xchg
pushf
inc
adc
pushf
sarb
stos
or
xlat
jmp
push
pusha
push
stos
outsl
xchg
push
mov
add
jae
repz
repz
mov
add
leave
cmp
push
xor
ja
pop
fs
pop
movsb
repz
mov
movsl
cmp
xor
fwait
xor
movsl
inc
int3
pop
mov
call
inc
notl
cmc
push
cmp
mov
mov
mov
popa
inc
shlb
data16
mov
fsubs
out
outsl
repz
or
inc
adc
or
repz
dec
cmpsb
les
rcr
cmp
ret
or
test
addl
lcall
inc
pop
xchg
adc
dec
sti
aad
je
test
sbb
in
fistl
adc
iret
xchg
das
jno
inc
mov
repnz
push
lahf
rorl
sbb
insl
pop
mov
push
stos
test
sbb
andl
push
inc
leave
sarl
cli
sbb
daa
cltd
inc
sbb
test
subl
push
lcall
sarl
push
in
pop
ret
lret
cs
xchg
or
inc
ljmp
jge
sahf
fbld
nop
insl
push
daa
cmp
into
scas
xchg
mov
xchg
pop
mov
loope
cmp
icebp
mov
xchg
mov
orb
adc
imull
lock
push
lret
loop
jo
push
mov
xchg
pop
inc
std
sub
ret
bound
je
notl
xchg
push
sbb
inc
xor
sahf
jb
push
or
jp
push
mov
add
int
pusha
fistps
mov
add
lods
arpl
lods
push
and
or
dec
xlat
std
sub
sub
mov
jl
sub
mov
imul
sub
daa
ss
and
sbb
push
lea
into
xchg
xchg
xchg
pop
popf
into
scas
push
or
push
into
push
push
xor
gs
leave
push
clc
xor
push
pop
int3
adc
xchg
mov
imul
push
mov
aaa
call
fdivrl
out
imul
lret
inc
lods
cmp
cmp
or
inc
sub
ja
pop
test
movsl
xchg
dec
scas
inc
test
imul
mov
insl
cmp
jbe
or
popf
in
out
lods
xor
sbbb
lock
push
sbb
pusha
cmp
add
arpl
test
and
push
stos
add
mov
divb
push
or
sbb
cmp
push
mov
test
push
mov
mov
jno
xchg
cs
hlt
loop
xchg
fistpll
icebp
jae
loop
ret
push
jp
adc
mov
cmpsb
push
push
jns
call
pop
lcall
dec
dec
lods
mov
test
jne
les
jecxz
xchg
add
mov
push
stos
cmp
frstor
mov
pop
into
cmp
popf
inc
sti
cmpsl
jb
movsl
fdivl
into
int
mov
jg
daa
push
andps
mov
pop
rorb
jecxz
xchg
fidivrs
imul
add
outsl
je
add
sub
xchg
arpl
sub
sub
jne
mov
mov
pop
dec
push
ljmp
inc
daa
inc
jle
xchg
xor
jae
int3
das
int
xchg
xor
jl
sub
mov
push
jge
xchg
stc
jb
cmp
es
pop
push
outsb
push
loop
dec
outsl
xor
push
cmp
jge
cmp
adc
cmp
mov
inc
arpl
push
xchg
inc
aas
dec
movsl
mov
ss
dec
cmp
mov
mov
shlb
sbbb
lods
push
jg
outsb
xor
mov
fprem
cmp
sbb
xor
pop
test
xchg
lea
mov
mov
jp
and
int3
test
adc
aad
je
pop
popa
int
cwtl
std
pop
ret
out
sub
out
and
mov
jge
adc
idivb
nop
xorl
push
add
xor
mov
jecxz
push
addr16
rorl
ds
fwait
pop
jmp
or
inc
movsb
rorb
push
adc
mov
bound
xchg
ljmp
pop
dec
push
or
test
pop
aad
sahf
jmp
dec
mov
mov
add
pop
adc
mov
idiv
daa
push
sbb
mov
sub
adc
push
dec
icebp
fnsetpm(287
lahf
add
sbb
pop
negl
jg
in
lret
inc
dec
push
andl
lock
lret
push
and
shll
addr16
dec
and
dec
out
out
insw
inc
movsl
inc
out
pop
stc
popf
xchg
sbb
roll
jmp
jecxz
movsb
inc
inc
sarb
rcll
dec
sbb
scas
mov
shll
pop
and
fcmovnb
pusha
ficomps
mov
enter
jmp
data16
test
pop
sbb
add
pop
nop
fcmovb
push
call
mov
jmp
repnz
stos
sbb
out
hlt
popa
sahf
test
loope
push
mov
sbb
jecxz
popa
dec
sbb
xchg
out
sbb
fistl
dec
andb
mov
rorl
ret
sub
arpl
es
cmp
mov
or
mov
imul
movsb
sti
sbb
jecxz
adc
aam
xchg
push
push
js
loope
cmpl
lea
and
dec
sbb
roll
jmp
fwait
jge
ret
xlat
jg
push
xor
outsl
fldt
add
cmp
add
lea
xor
outsl
je
adc
push
rcll
fcomps
push
xchg
test
jns
movsb
cld
dec
stc
inc
pop
pop
add
shrl
sbb
iret
aaa
and
and
dec
jmp
leave
addb
push
outsb
and
xchg
loop
xchg
xchg
add
inc
mov
popa
imul
fnstsw
imul
inc
rolb
cli
into
pop
mov
jno
xchg
shrl
enter
nop
or
cmp
sub
repz
push
push
xchg
lahf
ds
lret
dec
les
movsb
sub
cld
xchg
add
cmpsl
fwait
lret
mov
mov
jo
test
xor
push
cmp
adc
decl
or
cmp
or
orl
or
inc
mov
xchg
test
loopne
outsl
xchg
or
pop
mov
cmp
ljmp
add
lcall
xchg
lahf
jbe
das
jno
fcoml
loop
sbb
lret
cs
or
shlb
xchg
and
cmp
mov
or
cmp
adc
and
jle
inc
push
cmp
lods
add
sti
sbb
xchg
mov
sbb
mov
test
xchg
adc
adc
xchg
aam
cmpb
sahf
je
inc
fdivrs
cmp
jns
outsb
movzwl
jp
push
adc
test
je
das
aas
jns
in
cmp
inc
outsb
mov
in
dec
pop
push
enter
roll
std
test
mov
adc
inc
jo
xchg
adc
fwait
rorb
mov
inc
push
sbb
pop
mov
das
mov
push
mov
lds
sti
rcll
enter
inc
sub
xor
icebp
mov
in
cmp
popw
cmp
lcall
pusha
dec
mov
movsb
loopne
sbb
xchg
sub
fdivrp
aas
sbb
loope,pt
pop
jmp
aad
dec
mov
out
popf
sbb
je
mov
push
mov
mov
nopl
dec
mov
repnz
xchg
stos
icebp
push
imull
lret
jb
lock
push
dec
xor
popf
sub
out
or
cmc
pop
ss
mov
xchg
push
inc
fidivrs
jmp
mov
imul
adc
lea
mov
add
les
or
xchg
mov
lcall
sub
and
ljmp
cmp
je
sub
lahf
xor
xchg
adc
fisttpll
dec
mov
lcall
cmp
push
cld
mov
aaa
mov
jbe
daa
dec
insb
add
pop
jge
movsb
or
fadds
cli
push
orb
cmp
sub
aas
das
jg
repz
mov
sbb
cmp
shl
sub
pop
and
rorl
adc
xchg
lods
ret
mov
and
out
mov
or
je
and
pop
fdivrl
sbb
jge
push
xchg
push
sub
hlt
jmp
cmp
mov
or
cs
faddl
repz
ret
mov
arpl
mov
fsubrs
movl
push
xchg
cwtl
notl
out
adc
scas
scas
das
les
sub
inc
xchg
lahf
dec
int
daa
leave
cmc
or
jns
mov
lret
cmp
enter
lret
aam
push
out
arpl
xchg
mov
fwait
sub
subb
loopne
in
insl
cld
jg
xchg
stc
add
add
pop
or
inc
jne
aas
icebp
sbb
inc
push
loopne
ds
add
test
roll
xchg
xorl
mov
in
shll
movsb
xchg
test
cwtl
stos
js
call
and
aam
movsb
cmp
mov
es
adc
jmp
addb
or
xchg
or
mov
int
cltd
cs
add
cld
in
insb
or
inc
fnsave
in
cmc
enter
pop
rcrl
add
adc
sbb
nop
mov
testb
adc
cmp
dec
or
add
sarl
movl
loopne
es
mov
test
lcall
orb
cmp
out
ret
xor
inc
sub
push
adcl
je
loop
mov
fldl
popf
push
daa
mov
mov
filds
orb
outsb
insl
add
shlb
sub
fcoms
xchg
xchg
jg
fucomi
add
js
sti
pop
movsl
notb
fbstp
pop
mov
push
lds
inc
fstps
data16
mov
pop
push
repnz
jge
aas
jne
xor
iret
jmp
mov
dec
xor
xorb
push
mov
dec
int3
mov
stos
xor
xchg
pop
out
dec
daa
jge
push
aaa
icebp
adc
push
fnstsw
or
lods
into
xor
insl
mov
jbe
pop
mov
mov
test
mov
and
xor
leave
pusha
loop
rcr
fsubrl
xchg
mov
notl
insb
xor
xor
out
mov
jne
inc
lock
hlt
sbb
pop
adc
mov
dec
mov
into
and
and
test
test
insl
cld
mov
cltd
pop
out
xchg
imul
mov
jp
aad
shll
cmp
out
sbb
mov
in
pop
jle
ljmpw
sbb
push
imul
sbb
lds
and
jno
inc
mov
mov
popfw
test
dec
or
pop
or
push
gs
pop
push
mov
lahf
imulb
lret
pop
fnstsw
faddl
sbb
sti
popf
aam
stos
mov
fdivl
lods
das
xchg
ret
sahf
fadd
jp
push
pop
ljmp
xor
mov
push
mov
dec
or
dec
dec
outsb
jae
mov
dec
cmp
xor
lahf
andl
fs
gs
xchg
popa
lcall
mov
mov
or
int3
cmc
mov
cmc
scas
iret
xchg
mov
in
in
jecxz
sbb
push
xlat
jnp
data16
mov
lret
mov
js
cmp
and
negl
lret
mov
leave
insl
push
push
test
xchg
dec
inc
or
jmp
cmpsl
push
sbb
or
or
mov
mov
fcmovu
adcb
pushf
mov
lea
cmpb
fcompl
xchg
std
sbb
lahf
in
cld
rcrb
sbb
push
imul
mov
mov
mov
jmp
and
mov
push
loopne
rcrb
ficoms
movb
sbb
adcb
cmp
lea
cmp
xor
les
ss
mov
jbe
inc
cmp
sti
out
push
shr
sbb
jl
jg
repz
mov
fcmovne
sub
out
inc
dec
pop
aam
pop
pop
push
sbb
popf
adc
mov
jo
adc
popf
pushw
lahf
int3
cli
sbb
dec
sub
imul
push
popf
jg
mov
dec
xor
bound
out
lea
cs
cld
jmp
loopne
or
adc
adc
push
mov
adc
xchg
jmp
push
xchg
sahf
jae
jle
lea
xchg
push
cwtl
mov
mov
movmskps
in
mov
mov
xor
in
subb
lcall
loopne
into
xlat
mov
std
fidivrs
mov
cmp
test
and
jg
sbb
dec
xor
mov
xchg
xor
shll
sbb
adc
xor
sub
xchg
cld
movsb
jno
imul
out
pop
setge
adc
add
stc
imul
inc
adc
aas
xchg
dec
pop
mov
into
mov
push
insl
jge
push
push
and
sub
testl
lods
mov
pop
mov
aas
pop
cli
and
in
iret
fs
sbb
xor
sbb
out
pop
and
xchg
ret
xor
adc
shll
out
mov
xor
inc
mov
sbb
jnp
int3
cmp
iret
adc
cwtl
mov
bsf
push
jmp
movsb
xchg
jnp
dec
dec
adc
sub
std
mov
xor
dec
jb
add
es
cmp
dec
cmp
out
pop
ja
push
push
mov
sarl
insb
loopne
adc
mov
sub
sarb
fnstenv
pop
loope
dec
incb
or
jne
fisubl
adc
xor
sar
nop
mov
mov
cmpsb
jae
dec
nop
popf
repnz
dec
jp
mov
or
xorl
sbb
mov
addl
andl
push
jbe
mov
sub
cltd
pop
decl
movsb
push
xchg
xor
mulb
xor
or
pusha
and
adcb
pop
pop
call
add
imul
test
leave
jg
test
and
and
jbe
cmp
add
std
lahf
fadds
push
and
sub
mov
or
js
lret
test
push
jmp
addr16
push
jmp
fbstp
or
push
jp
out
in
pop
ret
jb
stos
sarl
and
mov
xchg
cmp
mov
imul
adcl
lea
xor
les
xchg
aaa
pop
sti
loop
jno
pop
sbb
or
inc
hlt
xlat
icebp
fbstp
out
imul
mov
xchg
rorl
andb
dec
and
out
adc
dec
into
sub
sarl
jle
xor
dec
jge
xchg
inc
les
fdivrl
loopne
insl
mov
push
movsb
xor
lcall
mov
out
adc
adc
insl
ja
pop
test
aaa
ret
mov
pop
pop
pop
jge
call
adc
mov
jae
addr16
pushf
outsl
outsl
shrb
adc
fisttps
cmp
pop
cs
scas
ja
push
pop
inc
xor
movl
add
mov
fisubl
in
int
pop
add
aaa
imulb
nop
sub
push
aas
push
aad
notb
jae
jp
xor
cmp
jbe
rorb
movsl
lret
inc
or
aam
sbb
into
push
imul
xor
and
rdmsr
dec
stc
and
fistl
call
cmp
jecxz
ljmp
push
sub
and
push
cmp
jl
cmp
xchg
insb
add
stc
or
rclb
cmp
or
inc
mov
or
mov
stos
pushf
sti
in
les
pop
call
sbbb
inc
into
mov
inc
add
popa
test
punpckhbw
ss
lock
add
lret
xchg
cmp
std
or
std
mov
cwtl
lock
adc
fnstsw
inc
shr
adc
mov
mov
sbbb
push
cmp
es
cmc
xor
lcall
js
cld
js
out
inc
movl
cli
dec
xchg
outsb
push
add
orl
out
ss
ret
sbb
mov
dec
push
pushf
jmp
jo
lods
leave
sbb
les
out
cltd
sahf
dec
dec
jno
pop
sub
mov
clc
daa
icebp
fiadds
popf
push
leave
cmpsl
pop
sub
inc
mov
inc
mov
imul
push
aaa
mov
xlat
mov
mov
pop
pop
lock
xchg
pop
push
jg
and
mov
hlt
fldl
and
and
pop
pop
and
sbb
push
hlt
out
jne
in
pop
addb
push
push
test
mov
out
cmc
push
pop
cwtl
xchg
mov
mov
aas
fistpll
test
sub
out
sbb
and
int
jge
mov
rorb
lcall
inc
xor
inc
mov
ljmp
push
xchg
xorl
jg
fwait
lcall
inc
sbb
and
leave
and
inc
stos
cs
dec
inc
mov
stos
movsb
pop
adc
mov
sbb
or
ss
mov
shll
cld
pop
mov
fdiv
adc
frstor
mov
in
mov
ficoms
bswap
add
adc
sub
scas
aad
dec
inc
or
mov
adc
pop
pop
xchg
subl
inc
call
inc
lods
pop
js
fldenv
movsb
mov
ret
inc
xor
icebp
and
xchg
jl
daa
push
sub
repz
sbb
fisubl
cmpl
push
dec
aaa
shll
lods
andb
jnp
stos
loope
lea
dec
pop
in
add
push
imul
mov
ja
leave
mov
js
add
das
dec
cld
das
cmpsl
jmp
mov
push
leave
call
bound
insb
xchg
adc
stos
mov
dec
aam
jae
push
mov
stos
dec
inc
mov
inc
repz
test
mov
mov
xorl
jg
add
pop
stos
out
mov
dec
into
mov
push
out
pop
int
test
cwtl
xor
lea
mov
push
mov
call
xor
data16
je
lds
andl
in
es
xor
repz
pop
mov
sbb
pop
cmpsl
fdivr
das
clc
mov
pop
jle
cmp
mull
gs
push
inc
cmp
and
in
mov
dec
mov
add
cmp
push
aad
out
loop
add
push
and
push
loop
ss
and
mov
ljmp
mov
inc
jbe
scas
inc
add
add
inc
cmp
pusha
out
cmp
fwait
inc
out
push
jnp
lcall
dec
cmpsl
mov
and
jmp
in
inc
inc
orb
gs
cmpsl
mov
xor
shlb
aas
popa
ret
inc
scas
inc
movsb
ds
mov
int
repz
xchg
out
mov
xchg
aam
test
dec
mov
mov
mov
int3
sbb
pushl
das
xor
jecxz
mov
imul
sbb
test
mov
dec
mov
mov
adc
adc
inc
or
in
push
std
push
jl
loope
cmp
xor
mov
addr16
xchg
fsubrs
outsb
sbb
mov
sub
inc
iret
mov
mov
and
cld
fildll
pop
fmuls
cld
loope
test
push
imul
icebp
stos
and
in
pop
filds
mov
les
push
not
cmp
clc
mov
mov
jmp
xlat
cwtl
sub
adc
jb
jb
gs
cli
mov
stos
sbb
mov
push
repnz
mov
sub
xlat
xlat
rolb
data16
and
sbb
in
iret
ss
aas
fsubr
mov
inc
popf
xlat
js
inc
jmp
lods
jp
push
cmp
mov
out
mov
sub
leave
fdivrl
push
mov
sbb
imul
xor
push
push
clts
fwait
jbe
cmpsl
mov
jle
inc
push
leave
mov
xchg
je
int
xchg
enter
mov
jo
mov
pop
jno
ret
hlt
movl
and
add
mov
push
fsub
or
pop
adc
mov
movsl
outsb
loopne
je
mov
scas
mov
xor
sbb
pop
fnstsw
jbe
adc
in
stc
fcoms
xchg
mov
sub
imul
int
xor
push
test
imul
cmp
jo
jle
push
adcb
nop
jno
push
xchg
jg
stos
lret
dec
add
jmp
cmpsb
and
adc
aas
or
cmp
and
imul
dec
in
decl
and
les
jp
popa
shr
push
faddl
movsl
pop
sbb
jne
xor
xorl
mov
or
fstpl
inc
popa
xchg
mov
frstor
ljmp
add
pop
ljmp
xor
dec
ljmp
dec
cli
sbb
mov
mov
mov
xor
jno
xchg
and
jecxz
push
lret
push
xchg
dec
pop
ss
push
movsb
xor
jg
psrlq
fidivl
mov
sub
adc
fisttps
stos
imul
fcmovbe
insb
into
addr16
mov
lret
mov
add
xchg
enter
adc
sbb
das
pop
rcrb
hlt
cmp
add
xlat
mov
ret
xchg
fildl
dec
or
movsb
mov
loop
push
pop
inc
aaa
in
pusha
cmp
int3
js
cs
sar
xchg
cmp
jne
enter
and
adc
xchg
and
mov
dec
xor
gs
pop
repnz
repnz
push
mov
aam
rcl
pop
mov
adc
fdiv
mov
imul
xchg
clc
pop
fistpl
push
ljmp
into
push
loopne
push
hlt
pop
pop
or
xchg
not
stc
jnp
mov
dec
dec
out
arpl
out
movsb
shrb
push
and
outsl
cmp
inc
jns
call
xchg
and
push
movsb
enter
jle
lds
repz
in
into
mov
xor
add
lcall
enter
lea
push
xor
js
adc
xor
and
mov
push
xor
or
sbb
clc
mov
inc
or
sub
std
mov
pop
dec
push
in
add
cltd
call
dec
sbb
xor
clc
mov
lcall
add
shll
dec
lods
or
lds
into
sbb
dec
negl
pop
add
fisttpll
inc
icebp
outsb
jmp
enter
xchg
mov
fstpt
sub
scas
jge
mov
xor
jne
sub
jae
insb
fisttpl
mov
cmp
mov
or
sbb
ja
in
subl
stos
cwtl
fistps
sti
leave
adc
jb
lods
movsl
fldt
pop
insb
addr16
mov
pushf
push
xchg
mov
or
ja
mov
mov
xchg
scas
dec
add
adc
fisubs
je
dec
mov
mov
int3
mov
lcall
mov
sbb
cmpl
cmc
adcl
xchg
sbb
popf
std
jnp
mov
shr
dec
cmp
cmp
xchg
or
in
pop
xchg
mov
sub
mov
femms
cmp
mov
mov
enter
fwait
or
dec
sub
divl
jmp
roll
jmp
push
mov
fdivrl
push
jae
loope
outsb
adc
jno
lds
ds
clc
es
inc
xor
push
cwtl
fstpt
dec
add
ljmp
xchg
js
add
jbe
shrl
or
inc
or
pop
cmp
flds
stos
popa
dec
cmp
cmp
cmpsl
movsb
push
ret
dec
popf
mov
repnz
adc
mull
loope
stos
pushl
xor
adc
xchg
inc
jo
mov
xchg
cli
mov
imul
sub
pop
or
cmp
dec
in
xor
stos
sbb
imul
loopne
rcl
sbb
ret
pop
nop
in
popa
sub
repnz
fldenv
test
test
sub
inc
pop
in
jmp
mov
in
in
xchg
sub
insb
test
adc
jg
daa
cli
mov
sti
cmpsl
inc
outsl
test
lahf
popf
ret
add
jge
lret
pop
mov
and
pop
dec
and
mov
mov
sbb
mov
and
jp
pop
adc
sub
sub
enter
mov
sbb
push
aam
aam
inc
out
into
jne
ds
xchg
stos
inc
xor
and
xor
jmp
mov
dec
sbb
call
jge
dec
push
cmp
push
rcr
xchg
push
nop
jle
sub
sub
cwtl
test
rcrl
scas
jbe
andl
jmp
lcall
cmp
or
iret
lock
mov
movb
rolb
xchg
xchg
xor
fs
sub
add
mov
rcl
jmp
jl
sub
xchg
rcrl
mov
js
dec
push
imul
jae
rorb
pop
and
or
or
push
push
dec
pushf
xchg
lock
dec
repz
push
cmpsb
popa
popf
mov
mov
push
out
rcrl
mov
dec
xchg
push
je
fiaddl
push
jb
mov
jl
cmp
and
push
bound
pop
repz
inc
cli
add
mov
aas
jns
mov
inc
fdivl
xlat
fdivrl
in
jno
bound
mov
and
negb
loop
lret
sbb
divb
jmp
inc
fwait
aas
mov
aaa
je
loop
jbe
shll
xor
sbb
sbb
push
xor
dec
clc
ja
sub
inc
jg
push
push
hlt
mov
cmpsb
and
inc
aam
or
popa
push
add
xor
sarb
adc
shll
pop
repz
adc
jmp
test
and
notb
xchg
ja
push
mov
add
fisubrl
jbe
mov
lret
and
xchg
negl
xchg
js
call
outsb
insl
and
sahf
rcll
or
xor
mov
leave
je
sahf
repz
movhps
mov
xor
cmp
mov
test
mov
pop
dec
jne
jmp
pushf
cmp
movsb
rcrb
leave
cmp
into
loop
fisttpl
andb
cmpb
lods
mov
pop
sub
dec
data16
mov
push
jbe
lret
nop
sbb
mov
dec
outsl
in
insl
push
cmp
sbb
lock
repnz
push
mov
lcall
repz
mov
pop
pop
cmp
arpl
adc
fidivs
mov
adc
hlt
push
inc
cmpsl
mov
imul
push
in
cmp
idivb
mov
pop
push
sub
or
add
int
popa
cmp
push
mov
insl
push
xor
aad
mov
sbb
sbb
sbb
mov
sub
dec
aam
pop
mov
sbb
push
sub
test
repnz
inc
sbb
or
pop
pop
pop
sbb
add
test
xchg
cmp
scas
pop
je
mov
mov
mov
pop
cmp
insb
ljmp
xchg
imulb
pop
mov
or
mov
repnz
xlat
pushf
mov
add
jl
adc
in
jmp
sub
xchg
mov
push
movsl
dec
dec
add
mov
sub
add
or
dec
xchg
movsl
adc
mov
add
add
outsl
int
and
sub
lcall
mov
push
inc
pop
aaa
mov
jmp
push
fnstsw
mov
inc
pop
pop
sbb
daa
bnd
pop
push
mov
lock
inc
inc
or
cmp
out
outsl
sub
cmc
dec
mov
or
mov
lods
ja
mov
fmuls
repnz
adc
enter
mov
jno
mov
aas
inc
cmp
int3
insl
pop
or
mov
push
sahf
mov
imul
jbe
jmp
movsl
xor
imul
push
rcl
aad
lret
sbb
mov
add
loope
cmp
jmp
xchg
jmp
push
push
push
je
fstl
mov
pop
adc
mov
mov
add
popf
or
sbb
daa
pop
rcr
or
xchg
cmp
pusha
scas
add
lret
sub
into
jg
pop
mov
inc
mov
movsb
and
and
jae
inc
adc
leave
lods
xchg
aaa
scas
sbb
xor
cld
scas
ror
repz
stos
jecxz
jno
mov
popa
push
in
stos
repz
pushf
in
aas
hlt
ret
orb
fnstsw
pop
in
mov
pushf
jp
xchg
mov
pop
push
sub
push
loope
aam
jns
dec
xchg
imul
push
ljmp
movsl
js
sbb
or
lds
sub
bound
stos
into
loopne
cmpsb
int
push
lcall
sub
iret
cmpsb
insl
loope
js
in
lds
lea
push
jno
sbb
inc
aas
dec
outsb
lock
shll
and
fidivrs
hlt
fs
int3
push
inc
adcb
add
sub
fs
mov
lods
cld
adc
xchg
shlb
clc
loope,pt
lcall
and
outsb
popf
lahf
add
test
or
out
and
mov
cld
shrl
pop
aas
dec
push
imull
push
mov
movsl
inc
ljmp
push
jno
fsubl
in
dec
idiv
fucomp
arpl
popa
mov
inc
xchg
rcrb
sub
clc
movsl
test
mov
call
pop
popa
mov
sbb
stc
jmp
ljmp
fisttpll
push
out
outsb
aad
jae
sbb
or
mov
sub
arpl
or
loop
frstor
xor
push
inc
decb
pop
mov
mov
dec
hlt
xchg
jne
pushf
inc
mov
insl
popa
shrl
jno
inc
ljmp
inc
sar
pusha
xor
test
add
push
ret
inc
and
ljmp
pop
pop
pop
push
pop
mov
xchg
cld
xchg
pusha
inc
xor
leave
xchg
in
push
or
push
bound
or
sub
xchg
push
jmp
or
mov
int3
sar
imul
or
ds
imul
scas
loope
icebp
mov
insl
pushf
ljmp
sub
cwtl
add
pushf
cwtl
push
loopne
inc
pusha
jge
fistpll
dec
adc
pop
cmp
ss
adc
push
mov
mov
inc
rcrl
das
xchg
enter
add
cmp
xchg
movsb
ret
cmp
movsl
dec
pop
fsubl
scas
lods
andb
shlb
or
cmp
aad
sub
lods
dec
inc
cmpsb
cmpsl
mul
inc
dec
mov
jg
push
pop
repz
ret
xchg
rorb
jbe
outsb
aad
pop
mov
pop
cld
xor
cmpsl
gs
test
mov
inc
sub
sbb
cmc
push
lock
mov
add
test
leave
in
roll
jo
add
adc
loope
cmp
mov
out
push
adc
xchg
addl
jns
lahf
inc
add
sahf
mov
popa
std
jmp
lcall
out
push
inc
jle
or
cli
sbb
push
shll
fimuls
inc
adc
inc
nop
lods
mov
dec
jecxz
out
rol
inc
add
fs
add
jb
jp
push
addr16
sbb
jns
or
adc
or
fbld
push
jmp
std
jg
dec
adc
sbb
notb
call
and
dec
rorb
xor
ficoms
push
adc
pop
xchg
cmp
push
imul
pop
mov
mov
adc
mov
mov
xor
jno
xchg
xor
mov
aad
insl
mov
inc
ja
aad
nop
push
mov
aaa
xchg
pop
or
out
clc
inc
push
scas
ja
xchg
pushf
sub
lret
dec
and
leave
ret
xor
call
jecxz
or
rcl
push
dec
je
rorb
movb
dec
push
ja
jg
loop
cmp
mov
inc
or
inc
in
xchg
shrb
rcl
and
stc
neg
inc
imul
pushf
addl
mov
lahf
rcl
sti
adc
adc
dec
cld
inc
call
xor
xor
jp
jne
sbb
adc
cmp
and
xchg
dec
rorb
insb
repnz
inc
lods
add
sti
mov
mov
loope
jae
sub
in
pop
aaa
jb
sbb
dec
pop
mov
dec
mov
imul
jl
and
shlb
cwtl
insb
pop
cs
cmpsb
outsb
cmp
in
push
loope
push
ss
subb
fcoms
and
lret
lcall
je
adc
mov
les
cwtl
aad
push
testl
cmc
popf
cmp
xor
shl
ds
jns
ficompl
mov
lds
lock
jo
lods
rcrb
jmp
pop
popa
hlt
movb
ror
push
popf
and
and
cmpsb
out
jmp
cmp
adc
xchg
mov
imul
addr16
in
lods
mov
popl
pop
leave
pop
sbb
mov
adc
mov
jge
inc
xor
fildl
dec
mov
icebp
shl
and
push
cmp
jmp
out
xorb
jns
mov
aam
mov
push
push
jge
jmp
mov
pop
test
and
aad
pop
cltd
out
sub
mov
insb
test
iret
mov
cmp
mov
test
pushf
sub
add
inc
jle
out
fs
lea
add
pop
loop
js
mov
fisubl
xor
stc
movsl
inc
sti
sub
rorb
insb
inc
xchg
and
bound
adc
subl
js
mov
pop
push
dec
mov
and
xchg
int
push
cmc
xchg
fstp
clc
pusha
shrl
in
add
jl
fs
addr16
mov
insb
iret
les
or
imul
int
rorb
cmp
xchg
xchg
shll
mov
xor
mov
pop
sub
pop
dec
push
movsl
scas
rclb
shrb
xchg
cs
enter
dec
pop
or
jno
mov
out
outsb
xchg
sub
fistps
push
aam
movsl
cmp
pop
adc
clc
loopne
mov
bound
push
jb
xchg
imul
sbb
push
adc
loope
sub
adc
rorl
aad
daa
xchg
sahf
cmpsl
cli
lahf
sarb
xchg
aaa
out
pop
jl
les
cwtl
jnp
sarl
hlt
jg
xchg
repnz
insb
jns
aam
sahf
sbb
push
or
insl
je
sub
iret
lods
int
xlat
dec
imul
jae
mov
mov
iret
push
mov
push
sbb
in
repz
or
stc
scas
pop
idivl
jmp
pushf
pop
xor
bound
outsl
lds
add
loope
daa
mov
pusha
push
jne
popa
lods
mov
iret
outsl
out
std
mov
cmc
inc
dec
dec
insl
dec
inc
cltd
push
out
mov
lret
jbe
enter
inc
mov
push
adc
push
adc
or
notl
lods
out
add
xchg
lcall
call
sbb
in
adc
imul
push
mov
imul
cmc
je
push
mov
push
pop
movsb
push
sbb
xchg
or
rcrb
das
mov
fs
fistpll
repz
pop
repz
repnz
adc
lock
jae
xor
adc
sahf
pop
imul
repz
or
call
mov
jae
mov
jge
rolb
aad
imul
cmp
iret
loopne
pop
jge
xor
adc
jmp
in
mov
push
in
fwait
rol
mov
rolb
xorps
ffree
sbb
movsl
shrb
xchg
xchg
pop
mov
jno
lret
int
scas
mov
xchg
sub
bnd
popl
cltd
aam
xchg
lret
icebp
sub
jb
xchg
add
sub
fwait
stos
jp
lea
stos
sti
sbb
ret
movlps
ret
pop
cmp
icebp
sub
or
pop
sbbl
xchg
jge
lods
inc
inc
xchg
cmp
inc
dec
bound
inc
mov
sti
push
push
scas
lock
mov
dec
push
xchg
pop
lods
sub
mov
sub
js
mov
pop
sub
xor
lods
lea
pop
jp
xchg
add
and
and
movsb
mov
push
xor
cltd
clc
xor
aas
dec
aaa
mov
adc
dec
add
xchg
jp
cmpb
fstpl
loope
xchg
jmp
cmp
out
sbb
inc
mov
scas
and
js
mov
dec
std
into
adc
ss
aaa
loope
das
and
mov
je
jnp
and
frstor
xor
fisttpll
dec
push
xor
icebp
inc
push
cltd
ljmp
adc
inc
fisttpl
mov
jl
adc
data16
xchg
dec
into
stc
leave
nop
sbbb
sub
fs
out
mov
inc
or
test
inc
repnz
xchg
aad
adcl
xor
sbb
xchg
cld
sub
pop
ja
or
loop
clc
dec
movsl
lret
data16
mov
testl
outsl
xor
daa
fidivrs
shr
aad
mov
jge
mov
aaa
xchg
lret
clc
in
adc
mov
in
stos
or
cmpsl
int3
cmpsl
adc
repz
push
das
cmp
and
cmp
push
je
fxch
out
or
je
push
sti
pop
sbb
jl
ds
adc
loope
ljmp
mov
cltd
xor
js
mov
mov
fwait
ss
sbb
int
xor
pop
pop
and
inc
pop
fistpl
xchg
cmpsb
les
mov
test
mov
cmp
inc
xchg
or
or
adc
insl
ret
dec
inc
out
and
sub
mov
in
fs
xchg
push
sub
cmp
jae
scas
int
add
outsb
add
mov
fadd
mov
loope
mov
mov
fisubl
cwtl
push
fadds
xchg
clc
push
sbb
pop
bnd
popf
and
xchg
sbb
xor
enter
outsb
xor
xchg
dec
mov
adc
insb
ss
in
xchg
test
mov
jae
std
movsl
test
imul
adc
pop
loop
data16
jns
clc
pop
add
inc
dec
and
adc
repnz
add
fldl
pop
repz
jge
push
decb
outsl
out
subl
imul
jbe
push
insb
faddl
arpl
aad
xor
jno
jne
add
jnp
add
xchg
popa
xchg
std
mov
into
movsl
imul
int
fidivs
xchg
insb
stos
dec
pop
or
mov
std
nop
xchg
dec
pop
xchg
iret
outsl
cltd
out
xchg
inc
les
cmpl
enter
push
push
sahf
pushf
xor
or
fldenv
imul
repz
push
lea
sti
sub
movsl
es
push
addl
add
or
xor
mov
ja
lahf
fnstcw
repz
mov
in
inc
xchg
add
xchg
pop
mov
lock
mov
and
clc
jno
icebp
lock
mov
fistpll
xlat
clc
sbb
ficoml
sbb
aaa
push
add
mov
push
fwait
xchg
cwtl
mov
dec
shr
xor
mov
imul
mov
adc
mov
daa
mov
inc
pop
in
mov
imul
test
and
pop
orb
mov
in
ljmp
mov
popa
pusha
sti
xchg
adcl
xor
and
mov
adc
and
pop
inc
repnz
pop
pop
and
xchg
push
decl
inc
int3
outsb
roll
rcrb
jle
adc
adc
outsb
shrb
push
fidivs
adc
into
je
push
cs
lea
dec
test
push
mov
setge
addr16
pop
lret
and
adc
jl
xor
mov
push
lods
xchg
and
cmp
mov
inc
repnz
stos
or
int
mov
rorl
and
test
inc
test
dec
ret
adc
adc
fmuls
jne
xchg
push
mov
push
stos
mov
sahf
push
or
push
lea
pop
psubw
inc
mov
je
hlt
aad
push
push
sbb
lds
movsb
mov
cltd
mov
je
pop
mov
into
adc
cld
jne
mov
inc
jecxz
xor
in
ffree
fdivr
daa
or
outsb
jbe
pop
mov
inc
jmp
add
dec
pop
in
cmp
mov
lock
push
sbb
xor
dec
loopne
das
cmp
mov
popf
mov
aas
rcll
stos
outsb
lahf
fisttpll
aad
pop
in
xchg
fistps
adc
adc
xor
jo
int3
jne
shrb
push
jp
xchg
test
pushf
out
or
sbb
adc
lcall
adc
and
sbbb
push
ret
mov
aas
and
lret
enter
mov
sbb
mov
cs
mov
pop
inc
rorl
adc
lea
popa
inc
shlb
das
inc
adcb
arpl
cltd
bound
data16
mov
jnp
dec
mov
xor
out
into
das
jp
mov
test
mov
scas
icebp
cmp
popf
mov
cmp
sbb
fsubp
scas
in
and
scas
push
iret
sbb
mov
inc
lret
leave
push
icebp
aad
aam
xlat
push
inc
nop
and
out
jb
icebp
mov
mov
fnsave
lock
sti
push
jp
xor
pusha
incb
orb
jge
movsl
jg
xchg
xchg
mov
cwtl
adc
push
lea
jbe
and
mov
xchg
push
xchg
enter
sub
jae
xor
mov
push
popf
or
shl
inc
mov
lock
jb
xorb
push
lods
mov
push
cmp
lea
xchg
push
cmp
xor
mov
add
push
lahf
test
inc
sbb
jg
inc
add
mov
aam
adc
adcb
loope
aam
mov
sti
test
pop
repz
jns
mov
push
in
cs
mov
adc
je
je
stos
cli
push
xor
or
shrb
jbe
pop
test
jb
cwtl
adc
xor
pop
inc
mov
push
sub
adc
mov
push
out
and
nop
inc
ja
mov
mov
inc
sahf
xor
lret
inc
jp
push
es
add
stos
cmp
and
push
ret
clc
mov
mov
inc
je
jecxz
push
mov
shrb
out
enter
test
mov
shll
arpl
gs
xchg
dec
imul
shlb
outsl
jmp
shlb
notl
dec
xor
push
cmc
and
sub
sbb
fcmovu
add
lahf
pop
shr
add
stc
sbb
jb
add
sbb
aaa
call
mov
push
fildll
int3
jae
leave
das
xor
ret
cmc
into
add
cli
sar
cmp
imul
or
enter
in
ret
mov
insb
loopne
scas
adc
adc
mov
push
mov
out
mov
es
sub
pop
sbbb
icebp
insb
or
add
int3
mov
cmp
jnp
pop
xchg
jns
je
jecxz
lods
cli
push
cmp
cli
dec
jno
adc
add
dec
lret
mov
sub
and
cmp
or
mov
inc
iret
aam
pop
or
ja
ja
iret
mov
test
test
xchg
les
xchg
leave
fisubl
mov
mov
in
ret
lea
cmp
dec
cmp
ljmp
mov
mov
ret
push
ret
insb
icebp
sti
fsubs
popf
cmp
add
cli
cmpl
cmp
lret
add
xlat
aam
in
sbb
daa
xchg
test
and
mov
repnz
int
xchg
out
iret
dec
cld
loop
sbb
pop
cmpsl
pop
lds
insb
shlb
inc
nop
jb
ret
add
dec
xchg
xor
idivb
mov
lods
pop
stos
dec
shll
inc
adc
push
jo
pop
sbbl
fdivrl
push
add
add
out
idivl
smsw
in
xchg
lret
dec
rcrl
fsubr
frstor
sub
orl
arpl
xchg
push
mov
mov
or
repnz
mov
mov
je
ret
out
xor
and
pop
xchg
sub
daa
push
test
jle
outsb
xor
and
fwait
and
push
ljmp
test
jmp
out
js
pop
and
aaa
and
frstor
arpl
cmp
repnz
stos
popa
mov
xchg
jb
and
inc
mov
pop
lds
int3
test
xchg
cmp
jecxz
popa
fs
cs
lret
ffreep
jnp
jb
xchg
sub
add
jo
cmp
add
or
pop
andb
lret
ja
daa
mov
xorb
sub
mov
push
push
push
jg,pt
fcoml
jg
addr16
push
insb
jl
or
call
rcl
jmp
adc
imul
arpl
decl
lret
xor
in
jo
daa
loopne
aaa
add
loopne
xor
adc
lods
cltd
dec
in
scas
sti
inc
mov
lods
pop
xor
inc
push
sbb
daa
hlt
ljmp
in
xchg
dec
cmpsl
negl
loop
repnz
outsb
lock
faddp
pop
push
addr16
add
insb
cmp
and
sub
cli
out
push
std
fsts
add
dec
leave
popf
lods
out
pop
and
add
jecxz
jo
int
sbb
push
nop
add
daa
ss
jbe
inc
dec
idiv
repnz
xchg
sbb
lods
in
mov
jo
mov
enter
lock
sbb
sub
mov
cmpsb
jecxz
jp
mov
lock
add
jns
and
pop
ret
pop
sbb
out
xor
imul
mov
fistpll
and
pop
jno
je
xor
sub
pushf
lock
push
rclb
dec
scas
add
push
shlb
push
stos
pop
and
sbb
mov
xchg
push
ljmp
cmpsb
inc
call
xchg
dec
xor
popa
mov
notl
jge
cmovo
sbb
sbb
notl
mov
jge
jns
mov
inc
sahf
aas
sbb
jno
dec
mov
loop
pop
push
mov
mov
push
push
fnstsw
repnz
jne
rclb
pushf
ret
aas
iret
mov
mov
adc
test
sub
pop
rorb
and
lcall
cli
out
imul
out
jle
insb
add
in
les
inc
cltd
movsb
in
outsb
flds
data16
add
inc
push
popa
adc
sbb
mov
stc
std
leave
je
xchg
mov
adc
fbld
shr
mov
and
arpl
dec
call
test
pop
imulb
cmpsb
xchg
dec
aam
scas
xor
je
inc
sbb
xchg
pushf
jns
or
js
inc
vmread
dec
xchg
ja
mov
pushf
xchg
mov
lods
sbb
inc
sub
test
sub
cli
mov
cltd
lret
das
inc
xlat
test
dec
dec
movhps
xchg
ret
adcl
stc
add
push
insl
sbb
pop
mov
mov
mov
scas
mov
mov
cli
inc
pop
call
gs
mov
or
fsub
xchg
dec
lock
add
jge
push
adc
inc
xor
xor
pop
jnp
adc
shrb
pop
pop
mov
jae
rorb
pop
cmc
test
hlt
sti
jno
push
sbb
xchg
mov
rcll
or
or
jno
adc
and
pop
in
mov
mov
arpl
cli
xor
push
cs
pop
iret
jmp
sub
or
or
shrb
enter
neg
pop
mulb
sbb
push
ljmp
xor
cltd
andb
scas
sbb
pop
add
sbb
int
cmpsb
aam
mov
and
into
ss
jg
fnstcw
ret
es
mov
push
in
mov
popf
roll
mov
pop
fcoml
nop
jb
and
or
jle
mov
ljmp
pop
psraw
mov
inc
lods
mov
iret
test
dec
test
jle
movl
mov
cmc
stc
in
aam
sbb
adc
push
loope
inc
inc
jge
outsb
mov
xor
lock
mov
adc
std
std
outsl
shlb
int3
aad
fnstsw
or
xchg
jno
pop
push
xchg
adc
push
addb
aad
shlb
movl
xchg
add
rcrl
lock
in
mov
mov
rolb
push
popa
fstpl
in
jo
mov
data16
jno
repz
and
iret
lods
add
mov
std
xchg
pop
pop
push
xchg
adc
shl
std
adc
into
clc
mov
jns
into
call
jecxz
push
inc
pop
push
mov
aad
stos
pop
adc
mov
dec
sub
cmp
adc
dec
add
mov
mov
cwtl
fwait
jge
jecxz
lods
rclb
bound
es
dec
fiadds
fisubl
imul
inc
xchg
xlat
in
mov
jb
js
testb
dec
push
mov
cmp
jecxz
or
cld
imul
dec
notl
mov
or
mov
out
dec
lea
mov
in
mov
scas
and
shlb
dec
mov
add
xor
dec
and
xor
mov
jl
adc
pop
push
mov
pop
jb
cmc
inc
fwait
pop
repnz
in
imul
js
or
leave
push
fwait
or
cmp
std
push
int
push
enter
repnz
in
in
rcll
dec
leave
rcr
addr16
aam
adc
mov
mov
das
mov
test
mov
push
and
push
lods
and
cmp
inc
das
pusha
sti
bound
clc
in
imul
jbe
xchg
leave
push
popf
cwtl
jp
in
pop
cmp
scas
hlt
test
sub
mov
mov
xchg
or
push
in
inc
mov
sub
cmpb
lods
shr
imul
push
mov
xchg
pop
jnp
cmp
mov
stc
jne
repnz
mov
adc
sbb
test
cld
xbegin
cmp
testl
out
int3
fdivrs
jg
insb
cs
movsb
mov
jns
mov
nop
mov
sti
or
xor
les
and
out
push
or
jle
dec
mov
add
pop
dec
mov
xor
inc
dec
lods
mov
je
out
sbbl
cmpsb
test
and
pushf
xor
inc
lret
xor
and
sti
adc
test
adcb
dec
addr16
jp
xor
fs
lods
mov
decb
xlat
mov
mov
cli
jl
call
leave
js
push
xchg
iret
ss
sahf
adc
std
lea
fstl
pop
pop
xchg
push
add
push
lret
icebp
xor
iret
aad
jp
addr16
or
jl
push
int3
imul
int3
jle
jbe
ret
bound
insl
pop
fldl
cmp
mov
add
sti
push
jecxz
out
pop
pop
pushf
out
jg
cwtl
dec
daa
xchg
pop
shl
js
pop
repnz
adc
add
mov
xor
iret
mov
pusha
or
ds
add
cmp
test
jbe
sti
xor
jp
outsb
adc
out
jno
sbb
rcll
jge
gs
or
insb
push
aad
dec
cld
adc
xor
push
sbb
loop
in
mov
roll
mov
test
movntps
push
mov
fmuls
dec
and
loop
pop
push
xor
shlb
cmp
jmp
daa
icebp
adcl
cmp
jecxz
int
in
mov
insb
mov
shll
adc
loopne
dec
pop
dec
in
xor
add
mov
pop
adc
rorb
push
xchg
xchg
mov
or
sbb
loope
xchg
add
fbld
mov
imull
adc
cs
pop
lahf
movsl
xlat
ss
pusha
add
xlat
fmul
cli
movb
repnz
in
pop
sub
shr
fmuls
cmp
mov
std
xchg
push
sbb
ret
or
push
ss
es
shlb
dec
push
cmp
cwtl
push
and
aaa
pop
andb
xchg
fwait
movsl
in
jp
pushf
rep
sub
push
fidivrs
imull
xchg
lret
scas
or
pop
jmp
inc
mov
test
jge
pop
push
in
dec
dec
fsubs
fdivrl
ss
imul
inc
insb
rcr
fcomps
inc
and
pop
and
loope
pop
adc
stc
es
cwtl
test
imul
sub
js
vpcmpeqw
repz
aas
lret
xchg
mov
sbb
icebp
js
lods
adc
frstor
call
mov
xor
mov
jns
mov
dec
shrb
cmp
mov
push
xor
mov
lock
imul
mov
sub
rclb
push
or
inc
jmp
pop
stos
xor
push
pop
fs
lds
aas
fstps
push
sub
dec
mov
sti
pop
je
xor
lret
xor
jle
jnp
push
lds
pusha
es
xchg
add
idiv
ja
loop
std
js
sbb
cltd
leave
mov
sub
sub
xor
mul
cmp
jae
fnstcw
inc
mov
fldl
mov
push
insl
es
nop
sarl
xor
jae
jmp
shll
fstpt
lock
dec
lock
xchg
sub
cwtl
mov
mov
xor
pop
hlt
xchg
stos
roll
dec
outsl
jns
cmpsl
and
cmc
mov
dec
pop
sbbl
iret
cmp
or
jbe
pop
cmp
cmpsb
inc
int
dec
fistps
mov
mov
jae
cmpsl
shll
sbb
shrb
adc
add
repnz
mov
or
clc
dec
fcomi
outsl
mov
ja
pop
sbb
fst
dec
push
aas
lar
mov
inc
int3
push
fsubl
inc
and
test
xchg
andb
ret
imul
hlt
cltd
mov
enter
inc
push
mov
std
test
xchg
daa
adc
inc
loope
xor
jg
dec
loopne
shrl
xor
mov
insb
sub
xchg
mov
adc
dec
inc
pop
popa
lods
into
push
adc
cmp
jae
and
in
insb
pusha
in
mov
or
jbe
push
lcall
test
xor
sub
nop
cmc
imul
push
xor
aad
imul
xchg
stos
imull
nop
add
sbb
xchg
push
popa
or
pushf
das
loope
mov
inc
cld
mov
in
inc
push
out
mov
leave
enter
jmp
inc
fisttpll
xchg
cs
dec
or
ret
out
mov
push
ret
adc
imul
lods
mov
negl
loop
mov
popf
pop
xor
inc
cwtl
or
xor
icebp
sbb
xchg
ds
loope
in
popf
aaa
lea
jecxz
inc
arpl
xchg
xchg
xor
ljmp
and
xchg
or
aad
fnsave
movsl
dec
loopne
fistps
les
popf
aad
repnz
sbb
outsb
int
push
mov
mov
das
add
add
sbb
sbbl
add
insb
mov
addl
js
or
aas
mov
jmp
leave
or
dec
xchg
pop
loop
cmpsb
fwait
push
jl
js
add
gs
pop
leave
lret
movsl
ret
xlat
aad
inc
jge
mov
test
and
mov
test
fisubrl
mov
push
mov
nop
js
loop
in
xchg
push
out
or
cmp
sbb
mov
inc
lods
cmp
push
jecxz
shll
mov
in
push
cmp
fistps
daa
lret
push
jae
jmp
adc
rorl
lcall
mov
fsubl
cmp
int3
fmuls
test
mov
stos
jle
mov
push
mov
xchg
push
dec
inc
mov
jp
cmp
dec
mov
arpl
mov
sarl
out
mov
popa
adc
jge
int
jno
cmp
xchg
mov
pop
js
dec
and
mov
or
add
add
dec
pop
jecxz
jle
paddsb
out
and
or
ficompl
dec
fnstenv
fnstcw
dec
cld
and
adc
out
sbb
cmpsl
xchg
dec
fnstenv
mov
or
xor
push
mov
xor
aas
pop
pop
mov
ficoms
out
lock
fimuls
push
cltd
leave
mov
mov
inc
clc
outsb
xchg
inc
mov
adc
jp
add
orb
ret
arpl
inc
push
push
sbb
cltd
inc
test
inc
inc
pop
xchg
and
sub
adc
adc
repnz
testb
mov
mov
fmull
and
mov
movsb
pop
push
pop
xbegin
fcmovbe
inc
add
or
ds
xchg
jbe
repnz
mov
xlat
pop
adc
aaa
in
into
sbb
stc
push
inc
jo
les
addr16
fdivrl
lahf
scas
push
out
pop
gs
icebp
jno
int3
popa
jecxz
or
pop
add
mov
fidivs
jle
cs
cmp
adc
or
pop
movsl
dec
je
outsl
inc
dec
jge
inc
call
dec
sbb
fwait
std
jno
or
sbb
out
test
cmp
push
daa
lock
add
popf
cmp
icebp
cmp
push
addl
sub
leave
data16
pop
sub
jno,pn
mov
orl
cmp
test
pop
pop
icebp
shrb
mov
les
maskmovq
testl
not
lret
outsl
pop
jle
out
aaa
dec
jne
imul
and
call
lods
add
sub
loop
pop
jmp
push
push
xchg
mulb
mov
popl
loopne
enter
cs
cmpsl
clc
sbb
pop
shr
add
pop
adc
js
adc
xchg
add
les
sbb
or
ficoms
fwait
pop
xlat
inc
emms
mov
fs
pop
and
repz
pushf
jmp
stos
mov
imul
xchg
into
test
xor
fidivrl
shr
add
xor
mov
in
pop
ss
sub
fsubrs
or
jo
fiaddl
call
push
pop
mov
xor
arpl
dec
daa
push
and
cmp
cmp
fs
xchg
push
cmpsb
dec
sub
loop
sbb
jbe
xor
outsl
push
pusha
addb
mov
cltd
incb
add
rcr
add
jmp
fists
or
pop
ret
inc
imul
outsb
push
push
mov
stos
adc
pushf
dec
ret
inc
rcrb
sbb
xor
jbe
push
int
add
cmp
insl
mov
imul
sub
pop
sbb
rcrl
push
add
xor
in
cmp
adc
mov
test
jbe
loop
mov
cmp
xorl
or
popa
push
push
jge
pushf
inc
mov
dec
push
xor
fsts
imul
ljmp
push
inc
test
mov
mov
jg
lock
jle
cmpsl
xchg
dec
inc
mov
cmpsb
or
mov
mov
inc
mov
ss
inc
je
inc
fdivrs
dec
jno
sbb
or
push
stc
idivb
out
xor
out
cld
push
dec
push
inc
aas
mov
fs
push
test
pop
inc
repnz
clc
iret
lcall
fistl
mov
mov
mov
data16
call
fdivl
jge
dec
push
jl
sbb
cmp
cmp
sbb
mov
ret
scas
sub
dec
push
mov
test
cld
in
mov
icebp
mov
push
lea
hlt
stc
sub
dec
loop
push
lea
pop
sbbb
sbb
xchg
xorb
andl
addb
stos
push
xchg
cs
dec
xor
loope
push
repz
loopne
add
mov
inc
flds
addl
cli
nop
insb
jl
leave
mov
cli
test
add
mov
int
pop
arpl
ror
in
lods
lahf
jle
negb
rolb
inc
repz
lret
or
jne
pop
jae
jle
mov
daa
pusha
ret
lret
lods
dec
mov
cmpsl
aam
loope
fstps
stc
sahf
repz
outsb
dec
cmc
jle
push
addr16
push
pop
mov
cmpsb
xchg
lock
inc
and
xor
xchg
int3
sub
pop
icebp
cld
dec
test
cmp
dec
xchg
outsl
test
and
out
lea
loopne
and
push
mov
push
out
loop
and
ror
pop
pop
cmp
xor
movsb
movsb
mov
sub
rcr
push
pop
push
ret
es
jecxz
fmuls
push
jae
xchg
divl
cmpsl
jne
pop
les
pop
cmp
ds
mov
repnz
mov
es
sbb
xor
repnz
dec
movsl
cmp
sbb
pop
clc
sbb
dec
scas
fnstsw
inc
dec
out
fistps
arpl
jge
clc
sbb
jle
lret
sub
cmp
xlat
lods
cmpb
cmpsb
jno
scas
test
mov
pop
mov
popa
frstor
or
clc
or
popf
and
push
xchg
push
push
jle
bound
push
push
or
push
sbb
push
sar
mov
std
lret
sub
push
movsb
jae
pop
hlt
in
or
int
adc
std
stos
pop
mov
repnz
out
insb
add
jle
and
jns
stc
out
cmpsb
inc
inc
hlt
ret
movsb
sbb
cmp
hlt
sbb
xchg
push
mov
mov
stos
cltd
inc
jg
std
andl
fsubrp
pop
sub
daa
popa
push
pop
loopne
pop
pusha
or
addr16
test
stc
jge
adc
inc
test
outsb
ror
xor
data16
push
inc
and
xor
lds
rcll
subb
jae
jbe
adc
inc
sub
loopne
xorl
gs
mov
loopne
rolb
ret
mov
dec
jnp
rol
pop
add
out
insl
inc
rcrl
mov
sub
popl
xor
fucom
nop
adc
add
cmp
xchg
bound
or
cmpsl
inc
gs
lret
loope
adc
sbb
mov
lcall
ljmp
fcmovbe
test
mov
mov
arpl
jg
mov
pop
push
push
xor
rclb
call
call
ljmp
fsubrs
ficompl
test
pop
inc
pop
iret
mov
xchg
push
cmp
test
fs
ret
shlb
pop
ficoms
sbb
fwait
cli
and
mov
ret
xchg
push
nop
xlat
pop
repnz
cmc
mov
enter
insl
jecxz
xor
and
in
inc
jb
adc
xor
and
xchg
mov
subb
mov
pop
shr
pop
jecxz
jmp
or
jnp
data16
or
arpl
jge
loop
or
jbe
xchg
add
lret
xor
push
sahf
sub
mov
mov
xchg
int
sub
xchg
dec
mov
and
out
dec
jns
cmp
dec
or
dec
insl
ja
cmp
mov
inc
sbb
fdivr
movsb
mov
adc
les
sub
jnp
push
jno
mov
in
xor
lock
dec
sbb
mov
addr16
rcrb
sbb
shl
dec
pushf
rorb
pusha
inc
pop
push
adc
mov
xchg
mov
mov
sahf
mov
push
adc
arpl
pop
adc
iret
aam
in
xor
push
push
in
pop
mov
les
add
or
insb
fs
andl
adc
xorl
fisttpl
pop
loop
scas
push
in
adc
lea
into
dec
mov
fistpll
std
dec
shl
xchg
rcl
push
mov
mov
test
out
or
xlat
mov
mov
or
mov
outsb
aas
jecxz
enter
testb
and
cmp
add
aad
mov
xor
movb
sbb
jnp
or
mov
inc
lret
mov
xchg
or
adc
xchg
test
js
fimuls
xchg
popa
call
sub
pusha
mov
mov
and
fiaddl
out
inc
cs
test
je
add
xchg
mov
sbb
mov
push
roll
dec
push
jns
dec
out
clc
test
inc
pop
push
and
pop
adc
mov
test
aad
mov
lcall
pop
adc
xor
nop
sbb
cmpsb
outsb
pop
stc
mov
in
or
out
movl
adc
fstp
fldl
and
outsb
or
lahf
aas
sarl
int
pop
and
inc
mov
int
push
pop
pop
mov
gs
into
jne
inc
xor
idiv
pop
xchg
mov
adc
and
movsb
mov
jns
leave
inc
ficomps
loopne
lret
pop
dec
fnstsw
dec
push
sub
fwait
sbb
adc
fldpi
bnd
subb
mov
in
and
shrl
xchg
xor
inc
mov
sub
rolb
sub
mov
into
jb
dec
gs
lds
hlt
dec
stos
jnp
cli
stos
int
test
or
movsl
sub
sub
dec
pop
pushf
jb
fnstenv
xchg
pushf
pop
repz
std
adc
pushf
sbb
and
lea
pop
ljmp
fsubrl
jp
out
sbb
sbb
ds
pusha
mov
outsb
in
sbb
addr16
out
adc
inc
push
fsubrl
out
in
repz
jp
xor
hlt
mov
add
cmp
jmp
dec
jle
add
out
lock
hlt
sbb
imul
movsl
jne
push
cmp
cmp
push
cmp
sub
lods
rclb
in
sub
xchg
jne
repz
inc
or
inc
ds
adc
cltd
lcall
sub
je
pop
push
sbb
mov
rorb
push
and
cld
adc
sbb
or
cmpsb
dec
roll
sahf
ficoml
or
push
and
push
adc
jo
xlat
mov
enter
add
xchg
sbb
adc
es
stos
push
push
xor
sbb
movsb
dec
or
sbb
rcll
ret
int
xchg
cmpsb
subl
roll
and
mov
inc
aaa
cmp
ja
adc
and
sarl
test
add
shlb
rcll
adc
cltd
outsb
mov
and
dec
jp
fs
stos
add
leave
inc
enter
lea
xchg
std
in
enter
mov
adc
sbb
mov
xlat
lret
and
jp
cmp
push
and
aad
aam
repz
out
and
repnz
incb
daa
xchg
dec
mov
xor
movsb
icebp
int3
mov
sub
test
jecxz
dec
xchg
test
xor
mov
jnp
dec
imul
divl
bound
scas
cmpsl
rcrl
pop
lea
arpl
or
addr16
outsl
adc
mov
and
xor
inc
out
adc
mov
pop
inc
orb
ss
gs
ds
xchg
push
sbb
lret
jge
insl
xor
sti
jbe
dec
xchg
jmp
insl
xchg
movsb
ret
repnz
leave
in
mov
std
jg
sbb
in
mov
popf
cltd
lret
mov
sbb
pop
and
test
negl
cmp
dec
data16
loop
loop
cmp
and
mov
mov
mov
cld
test
fsubrl
xchg
add
and
test
pop
cmp
fstp
mov
push
sub
out
js
sti
cmpb
inc
fucom
lea
mov
dec
idivl
mov
xlat
mov
jno
adc
adc
or
outsl
and
xchg
or
in
lds
int
stos
leave
shlb
insb
pop
lds
cli
out
int3
sbb
cmp
cmc
lahf
xor
call
jg
push
mov
inc
mov
imul
add
push
notl
jmp
insl
cwtl
lret
mov
cmp
es
scas
push
outsl
fidivs
imul
jo
das
movsb
pusha
xor
stos
push
xchg
mov
add
xor
push
sti
scas
push
cli
js
mov
xchg
rclb
orb
mov
lret
cmpsb
lods
adc
ja
cmpsl
pop
mov
dec
popa
cli
xchg
mov
xlat
jnp
and
ret
push
repz
xchg
call
pop
ss
push
adc
mov
es
loop
mov
aas
out
lock
test
in
or
xor
cmp
sar
call
dec
mov
fcmove
jns
and
sbb
cbtw
mov
int3
and
ljmp
xchg
fdivs
enter
bound
sbb
xchg
jbe
imul
out
jp
lret
cmp
jns
jmp
mov
ds
ret
mov
stos
aad
call
pop
stos
rcrl
hlt
pop
leave
outsl
notb
xchg
pop
rcl
or
or
xor
sub
lret
lea
loope
dec
std
jnp
cld
out
clc
xchg
in
push
sub
cmp
aam
ljmp
lcall
addr16
xor
ljmp
jl
sub
cmp
mov
cli
pop
stc
mov
cmp
sbb
cmp
sbb
fisttps
test
sbb
into
xchg
adc
es
add
xchg
stos
out
xor
test
popf
in
mov
ljmp
pop
adc
sbb
and
and
aaa
sbb
pushf
mov
cmp
sbbb
xchg
xor
mov
lret
cmp
push
xchg
jge
int
xor
sub
repz
ljmp
sbb
aaa
vpslld
cmp
inc
mov
test
rcrl
loope
push
rcl
xchg
inc
dec
jno
inc
lahf
dec
add
mov
sbb
out
add
out
dec
sti
int
push
mov
mov
repz
pop
mov
sub
mov
lea
ret
test
cmpsl
push
push
outsb
mov
pushf
sbb
dec
xor
and
fucomp
std
mov
stc
push
test
ljmp
mov
lock
push
jp
fcomps
jns
cwtl
xor
mov
out
pop
push
in
or
cltd
pusha
mov
sarb
cmc
roll
xor
iret
dec
outsl
cmp
pushf
add
outsl
mov
stc
dec
mov
fcmovnbe
xchg
ret
or
cli
cmp
adc
and
jo
test
cli
js
xor
int
scas
ror
sti
ljmp
shll
inc
int
popa
push
adc
mov
pop
fstl
push
lea
jbe
xchg
jl
add
mov
int3
adc
push
nop
stos
lds
imul
jl
fnsave
hlt
jne
orb
js
cmpsl
adc
mov
ljmp
add
hlt
adc
inc
and
leave
sbb
cmp
insl
iret
fnsave
adc
xor
lods
inc
jno
fdiv
sbb
jo
stc
jbe
jb
fs
ss
pop
int
setbe
fildl
jo
and
imul
cwtl
jecxz
jmp
mov
ja
mov
mov
xchg
je
jp
inc
outsb
outsb
xlat
xor
mov
clc
adc
dec
insb
mov
adc
xchg
pop
mov
adc
stos
fists
mov
int
lods
and
mov
imul
pop
test
in
hlt
test
sbb
mov
sub
xor
xlat
call
sbb
push
stos
and
or
enter
ds
lar
or
pusha
mov
bound
adc
les
aas
add
mov
add
in
cwtl
adc
nop
fidivl
mov
xchg
mov
das
fs
scas
cmpsl
outsb
and
xlat
pop
inc
imul
fstps
in
cmp
pop
mov
sub
sbb
leave
xchg
sub
stos
hlt
gs
xchg
sarl
cltd
movsl
and
loope
inc
push
daa
jo
popf
aaa
pop
or
gs
nop
shll
adc
adc
sub
sbb
jp
in
sahf
mov
sub
hlt
mov
fs
add
stc
inc
lret
xlat
xchg
cmpsl
jmp
sbb
or
xchg
push
mov
insl
lods
xchg
push
mov
pop
imul
xor
dec
push
jnp
jae
mull
enter
repnz
test
dec
mov
fsts
jnp
mov
mov
mov
ret
lods
clc
test
cmpsl
ret
lea
int3
imul
xor
push
add
js
inc
sarl
fimull
cltd
push
mov
fwait
enter
push
cmp
or
mov
test
cmp
scas
addb
mov
mov
loop
mov
lock
push
lfs
or
push
rcrl
lret
outsb
bound
pop
popa
push
dec
loope
lahf
or
iret
bound
es
push
cmp
cmp
jmp
mov
icebp
mov
sub
jmp
push
cmp
aad
lock
push
mov
xlat
lret
mov
roll
clc
cli
add
push
adc
jmp
jns
pusha
inc
loopne
ret
lret
rclb
cs
jnp
jo
fcmovu
dec
cs
sar
scas
negb
popa
cmc
cmp
addb
add
imull
inc
adc
mov
or
mov
sbb
pusha
sbb
enter
xor
ss
test
subl
push
mov
fcomip
push
stos
lcall
jnp
lret
push
sbb
dec
jno
fcoms
and
pop
and
rorl
int3
adc
jb
fisttpl
cmovle
inc
inc
push
xchg
and
xor
push
push
sub
and
pop
push
mov
movsl
pop
adcl
cmp
cmp
test
lahf
out
inc
xchg
add
xchg
push
mov
jbe
dec
pop
outsl
and
mov
jnp
mov
pop
or
dec
and
push
in
aas
add
cmp
mov
push
aas
lods
lds
jnp
ja
ficomps
and
pop
loope
iret
not
dec
orb
push
arpl
jne
jmp
xchg
dec
lret
mov
movsl
dec
lds
sub
push
fwait
je
mov
sub
sbb
scas
movsl
rcrl
inc
sub
test
or
stc
xor
and
outsl
sbbl
add
add
xor
cltd
das
sub
mov
ret
cli
adc
adc
loopne
or
sbb
fisubl
inc
push
and
or
pop
pusha
cmp
clc
jl
sbb
mov
lods
into
inc
insl
sbb
orl
lock
sub
inc
push
xchg
mov
fildll
mov
add
outsl
aaa
lcall
jo
and
mov
fsubp
jl
int
stos
in
out
mov
call
movsl
ficoms
jecxz
mov
mov
sbb
sbbl
rcrb
mov
data16
inc
xchg
ret
or
jecxz
cmpsb
jecxz
inc
pushf
sub
push
jno
dec
popf
xorl
fwait
lods
dec
cmp
popa
mov
jg
repnz
lret
sub
daa
push
test
int
pusha
xlat
subl
lods
or
ds
dec
xor
in
inc
mul
roll
es
pop
lahf
fnstcw
repnz
jmp
sub
in
mov
dec
or
sub
jge
and
aas
out
add
popa
xchg
jne
sti
mov
or
clc
lret
insb
testl
cmovo
pop
inc
adc
js
dec
add
and
lcall
mov
xchg
scas
sbb
notl
or
and
pop
cli
or
addr16
sbb
push
mov
adc
jne
mov
sti
aad
icebp
dec
rclb
mov
pop
sbb
mov
mov
dec
sub
repz
aam
adc
idivl
stos
cld
sub
scas
cmp
dec
mov
jl
xor
in
popf
cli
shll
cmp
lcall
addr16
fldcw
jno
adc
or
pushf
xchg
idivl
cltd
popf
int
shll
xlat
test
std
push
cmp
lcall
loopne
fistpll
or
and
aas
out
add
push
pop
adc
sub
or
pop
mov
push
push
test
mov
jmp
jo
mov
mov
push
cmc
stc
test
imul
pop
fildl
in
out
stc
das
xor
jnp
mov
add
sub
leave
push
imul
ja
out
mov
andb
pop
or
xlat
jp
popf
test
mov
aaa
mov
mov
mov
jne
popa
jge
cmpsb
fwait
dec
mov
jae
push
push
and
stos
adc
sbb
les
std
mov
imul
negb
ljmp
ror
dec
cld
sti
ret
cmp
and
inc
out
mov
fiaddl
mov
mov
push
dec
jecxz
test
dec
mov
adc
idivb
data16
and
mov
xor
test
fistl
add
fcom
mov
inc
push
jl
sbb
aaa
inc
and
jmp
pextrw
pop
inc
jp
jl
mov
in
inc
adc
jl
add
xchg
xchg
stc
lret
dec
mov
mov
mov
cmpsb
push
mov
cld
mov
movsl
fsubrs
cwtl
in
das
ja
push
movsb
adc
arpl
and
push
sub
mov
in
adc
clc
lret
cs
es
icebp
insl
icebp
add
repnz
fnstsw
sti
adc
lock
push
stc
sbb
test
xor
xor
movsl
test
fnstsw
pop
fidivl
movsl
or
inc
lahf
repz
mov
fwait
rol
lods
std
lds
or
cld
fdivrl
lock
mov
dec
add
push
push
sahf
outsl
fwait
mov
xor
call
fsubs
repnz
inc
mov
inc
filds
je
or
test
mov
jbe
sbb
ds
or
mov
dec
dec
push
push
enter
mov
mov
loope
jae
sti
dec
dec
movsb
or
loop
xor
in
sbbl
xchg
push
add
sub
or
andb
push
xor
fadds
pop
pop
into
and
mov
aas
inc
ffree
loop
jb
sahf
inc
xchg
cs
shlb
mov
inc
idivl
push
adc
adc
sahf
add
push
pop
icebp
mov
addb
xor
or
and
cmp
loope
sub
mov
sti
sahf
aad
outsl
xor
out
adc
mov
mov
into
pop
aad
inc
add
stos
jnp
cmpsb
fcompl
dec
pop
mov
xlat
hlt
jl
popa
push
push
je
jmp
nop
add
jne
xlat
xor
stc
sti
jne
inc
push
pop
addl
cmp
push
and
jbe
hlt
push
test
push
out
mov
xchg
sbb
push
push
push
dec
stos
push
dec
xor
cmpsb
addr16
mov
repnz
call
cmp
sarb
pop
pop
leave
add
pop
jge
inc
stos
call
cmove
and
test
pop
xchg
out
std
and
sbb
ljmp
dec
xor
adc
xlat
inc
fisubl
repnz
xchg
mov
scas
frstor
jecxz
push
outsb
cld
fidivrs
ljmp
add
sti
seta
popf
mov
fmull
dec
inc
mov
sahf
jmp
cwtl
mov
cld
push
pop
and
rcrl
popf
and
xacquire
jge
int3
mov
xor
pop
fdivs
and
lret
das
push
cmpsl
sbb
mov
xchg
jbe
mov
or
lret
sub
xor
cltd
sahf
leave
mov
cwtl
mov
scas
cmp
pop
nop
fwait
mov
loope
rcrl
and
fsubrl
mov
addl
adc
fnsave
je
cs
mov
mov
xchg
jno
mov
andb
lods
jmp
std
xor
andl
sub
iret
xchg
pop
push
add
stos
mov
out
inc
pop
cmp
adc
push
leave
icebp
or
xor
inc
cmp
or
add
add
insb
push
leave
xor
sub
ss
jns
mov
cli
jg
mov
xchg
lahf
add
pop
loop
inc
rcr
pop
sub
mov
dec
je
sub
dec
jg
cmp
mov
mov
fstl
mov
in
test
out
or
mov
adc
in
lods
dec
add
lahf
cmp
je
rep
out
and
pop
xorb
movsb
push
nop
dec
add
out
jb
loope
jnp
test
or
outsl
iret
pop
bound
add
push
nop
lods
fnsave
jl
ret
dec
sub
sbb
mov
rorl
sub
dec
movsb
xor
jg
data16
mov
adc
cmp
add
jnp
ljmp
jae
push
repz
call
pop
jmp
movsb
out
mov
fimull
push
and
sub
icebp
cmp
push
pop
fsubl
ret
or
mov
loopne
test
mov
js
sti
idivl
js
fldl2e
jl
cld
mov
mov
scas
test
int
or
mov
jno
mov
dec
stc
or
lcall
xor
push
jae
scas
xlat
pop
jns
pop
in
ret
das
xorl
cld
sbbb
mov
xchg
stos
cltd
or
lcall
jle
cmpsb
sub
movsb
in
imul
jmp
movsl
das
gs
data16
xchg
adc
add
ret
xor
jo
repnz
mov
sar
out
mov
adc
test
cmpsb
orb
jecxz
mov
mov
xor
mov
add
or
scas
pop
fisttpll
dec
shl
lret
mov
pop
dec
or
jns
jg
jge
movsb
iret
xchg
ret
lods
xor
mov
mov
dec
fdivl
addr16
in
enter
arpl
jmp
and
cmpb
fdivs
jmp
mov
rclb
lret
lods
mov
stos
scas
and
xchg
add
mov
push
aam
insl
or
mov
scas
xor
jmp
xchg
aad
xor
mov
gs
lods
lods
in
lret
sub
inc
insb
fsubs
shll
repnz
cmovnp
cld
pop
insl
bound
rcll
jnp
into
lds
les
sahf
pop
jl
xlat
add
inc
test
jmp
mov
cmpsb
hlt
inc
jecxz
fs
dec
and
cmpb
sub
adc
pusha
and
xchg
and
push
and
push
ret
hlt
sub
xor
jge
or
jp
cmp
pop
and
outsl
xlat
aad
and
pop
push
cmp
lds
out
xor
jg
xor
in
dec
bound
push
push
daa
mov
sarl
cmp
or
test
jne
fucom
sahf
fcoml
rclb
lods
xchg
mov
aad
or
and
sbb
mov
hlt
ret
push
and
cmp
arpl
xchg
shrl
imul
or
sbb
aam
aad
push
fdivs
lods
icebp
ss
pop
bound
into
sbb
aaa
mov
mov
fstl
xchg
xchg
aaa
movsl
mov
or
rol
pop
xor
cmp
sbb
push
pop
loope
fnsave
pusha
sar
jmp
inc
mov
in
fistl
dec
push
cwtl
rcrl
dec
sub
pop
dec
jp
loop
inc
or
cli
idivb
jae
clc
fadds
repnz
push
mov
ja
insl
xchg
sub
or
jg
popa
mov
sets
scas
int3
jo
fdivrl
pop
xchg
mov
in
xor
sarb
div
mov
arpl
mov
inc
adc
cmp
mov
xor
es
fsubrs
xchg
jecxz
dec
xor
lahf
scas
jge
pop
mov
and
fisttpll
jl
jne
jnp
rcrl
xchg
sbb
out
and
stos
adc
mov
repnz
leave
test
lret
adc
scas
movsb
in
pop
in
addl
cs
inc
out
fstl
cmp
mov
in
clc
pusha
and
repnz
scas
stc
das
cmp
mov
mov
cmp
aas
inc
pop
outsl
xor
inc
sub
adc
add
xchg
dec
mov
lds
roll
es
mov
jmp
dec
and
cmp
ljmp
data16
jmp
add
outsl
ret
sub
and
ds
pusha
jmp
sub
sarb
mov
inc
jnp
adc
cmp
pop
inc
xchg
bound
sti
mov
jo
and
push
push
in
sub
pop
inc
in
dec
pop
pop
addr16
xor
cmp
mov
fisubs
jp
push
xchg
cmp
ja,pt
jl
cmpb
xchg
inc
mov
std
mov
or
push
arpl
out
lods
xchg
inc
mov
mov
sbb
dec
pop
adc
cld
push
push
ret
mov
mov
adc
incl
dec
jmp
adc
mov
pop
mov
dec
pushf
cmp
push
jecxz
ds
push
xorb
sti
or
xor
leave
push
fcoml
pop
ret
lcall
clc
in
mov
sbb
dec
arpl
rcll
inc
cmpl
xchg
or
add
and
popf
pop
push
stos
das
fisttps
stos
movsl
jne
jge
lds
adc
xlat
jo
clc
inc
adc
dec
xchg
shlb
sub
pop
in
sub
xchg
icebp
adc
adc
movsl
rcrl
ret
or
pusha
mov
jns
cmp
lods
push
xor
dec
and
jo
add
xchg
add
pop
xlat
outsl
clc
hlt
sub
xor
cmp
hlt
pusha
pop
push
adc
stos
xor
ss
sub
jbe
mov
mov
push
loop
add
lock
xor
movsl
sub
idiv
andb
pop
pop
xchg
inc
mov
xor
cmp
mov
xchg
in
mov
aas
out
sahf
jo
cmpb
stc
fldenv
and
dec
mov
xchg
dec
sar
shll
xchg
jo
in
les
in
inc
mov
sbb
loope
mull
ja
xchg
pop
dec
and
loope
mov
mov
ljmp
or
or
inc
mov
sub
imul
mov
inc
mov
push
outsb
cld
sbb
lock
je
add
pop
inc
test
leave
lock
aaa
pop
mov
rolb
jecxz
sub
ret
inc
sti
add
lret
xor
inc
xchg
and
sbb
push
dec
scas
popa
dec
cwtl
inc
repz
jp
push
sub
inc
lds
out
repnz
shl
push
lfs
in
repz
mov
xor
dec
adc
push
gs
lods
push
xchg
imul
ja
mov
mov
cvtps2pd
ljmp
jnp
popf
push
dec
enter
push
xor
inc
shrl
or
stos
sti
daa
pop
push
push
call
jns
xchg
jne
jno
mov
or
inc
dec
jecxz
cmp
cmp
pop
test
outsb
push
push
popa
push
call
mov
add
pop
xlat
pop
mov
inc
dec
xor
jmp
pop
cmp
xchg
mov
mov
and
pop
mov
mov
push
adc
jl
std
xchg
jl
sar
dec
pop
sub
mov
call
jae
in
xor
inc
cltd
pop
in
je
adc
pop
dec
push
in
jle
sbb
adc
mov
in
ret
icebp
xor
fisubl
gs
aas
mov
iret
sahf
aaa
ror
and
inc
fwait
imul
cmp
xor
adcl
xchg
inc
aad
negl
leave
repz
cwtl
cmp
rolb
jo
pop
adc
pop
lods
iret
mov
notb
xor
mov
in
loopne
fwait
cmp
mov
xor
sbb
aad
scas
adc
push
test
sub
cld
mov
pop
ljmp
rcl
or
jno
sub
xchg
outsb
cmp
sbbb
push
push
dec
cmc
mov
xchg
fdiv
or
out
inc
js
add
mov
or
xchg
stc
dec
movsl
xor
cli
imulb
rolb
dec
mov
sub
inc
mov
xor
jge
lahf
ret
mov
pop
std
inc
test
in
movsb
push
jnp
ds
cmp
insb
xchg
jnp
cld
rcl
sub
cli
fcom
jno
aad
push
mov
shrb
adc
outsb
xchg
or
dec
and
cmp
daa
enter
mov
cmp
jle
lods
push
nop
scas
dec
and
sbb
mov
outsb
cmpsl
push
xchg
push
and
cmpsl
int3
pop
int3
adcb
imul
icebp
gs
das
push
or
pop
ljmp
pop
lods
lds
outsl
jae
jo
cmp
cwtl
lahf
rol
xor
mov
xchg
mov
add
sub
mov
jp
xlat
sbb
pop
popa
or
adc
ja
jnp
pusha
pop
cmp
jle
into
rclb
jp
inc
sub
mov
sub
lret
xchg
std
jno
mov
jae
lcall
jne
lcall
pop
mov
fwait
dec
xor
bound
in
incb
mov
aaa
mov
or
mov
mov
inc
outsb
sbb
lods
jno
pushf
xlat
outsl
jp
out
or
cmp
and
xchg
sarl
or
fidivl
into
mov
in
sub
test
outsb
dec
mov
sbb
cli
ror
imul
iret
or
mov
negb
fdivs
cmpsb
dec
xor
lock
jo
pop
pop
outsl
pop
xor
ds
fmul
fimull
leave
hlt
xchg
je
pushf
nop
xchg
cmp
mov
add
loope
in
test
in
inc
js
cmpsl
cs
out
push
jle
popf
pop
mov
movsb
adc
enter
cmp
adc
lods
push
jge
lods
popf
sbb
xor
pop
cli
mov
mov
pop
jge
es
aad
aaa
shll
or
add
fstp
mov
sbbb
testl
shufps
push
mov
xor
inc
jmp
sub
lock
jo
inc
fstpt
mov
adcl
push
enter
pop
cwtl
out
xchg
pop
repz
pop
xchg
daa
mov
push
dec
mov
mov
or
jle
add
pop
pop
orl
cli
dec
mov
adc
popf
ds
in
dec
add
enter
test
decb
and
jge
cmpsb
scas
mov
in
mov
or
add
adc
mov
mov
push
or
fwait
pop
jmp
movsl
aam
jecxz
sbb
add
sbb
pop
into
lahf
add
cli
inc
stc
stos
and
lret
addr16
sbb
push
jbe
icebp
push
xchg
adc
dec
cmp
or
leave
cmpb
out
pop
insl
add
ljmp
movsl
mov
in
inc
stos
data16
scas
shll
hlt
mov
cmpsl
ss
add
add
in
adc
das
ss
enter
cltd
mov
lea
mov
add
adc
leave
jo
mov
mov
push
or
mov
adc
cwtl
daa
decb
les
cmp
es
push
inc
mov
inc
jg
fadds
les
dec
arpl
xchg
jp
push
bnd
std
loopne
mov
and
nop/reserved
mov
push
adc
ret
dec
mov
dec
and
push
aaa
mov
movsl
mov
ja
ljmp
xor
sbb
mov
int
pop
and
mov
mov
add
pop
inc
jmp
xor
jmp
mov
sub
aad
ja
shl
mov
sub
sbb
pop
gs
dec
cmpsl
mov
dec
rorb
sub
xor
test
in
in
out
ret
jle
push
lds
dec
popa
outsl
in
lret
mov
mov
mov
xchg
in
aaa
ljmp
pop
fisttpll
icebp
mov
rorb
in
sbb
cmp
pop
leave
rclb
mov
xchg
pusha
or
and
bound
lahf
cmp
scas
adc
cld
dec
sub
lods
fadd
lcall
jl
cmpsl
cmp
or
icebp
ret
xchg
fistl
fcmovne
data16
pop
ficomps
sarb
sti
notl
inc
int3
inc
push
mov
sub
add
mov
in
xor
cmc
push
sbb
jle
adc
jle
cmc
pop
ficomps
aaa
or
sub
dec
mov
add
fdivs
ljmp
ljmp
dec
rcrb
imul
dec
imul
cmc
fisttpll
rclb
lahf
sub
push
mov
xchg
xchg
icebp
fsubrp
cmc
xchg
addr16
stc
adc
or
fcmovbe
mov
or
push
hlt
repz
sahf
dec
lock
sub
lret
cs
xchg
lea
in
lahf
adc
push
jno
push
test
jne
lcall
mov
dec
iret
add
sbb
ret
push
dec
xchg
insl
je
dec
pop
and
xchg
push
xchg
push
rolb
arpl
or
ret
push
fnstcw
xchg
add
mov
pushf
jl
andb
jmp
add
xchg
push
or
and
and
data16
loopne
mov
add
push
loope
pop
mov
adc
adc
xchg
add
dec
inc
lods
or
mov
mov
mov
shrb
test
fildl
aad
xlat
outsb
mov
mov
mov
dec
or
xor
adc
mull
add
sarb
std
jae
inc
jo
into
mov
jae
fbstp
cmp
push
mov
jns
mov
xchg
add
lea
lds
mov
or
add
stos
fs
ja
rep
push
xor
and
sub
mov
aam
fists
fwait
ds
xchg
inc
jnp
cli
push
fildl
pop
fcomps
xor
sti
arpl
jl
pushf
fstp
xchg
out
push
pop
dec
test
sbb
aam
cs
mov
cmp
jmp
call
aad
push
jecxz
rcl
sbb
rorl
data16
inc
adc
add
sub
sarb
xchg
and
mov
jmp
pop
pop
xor
clc
xchg
jg
es
arpl
insl
pop
sub
ljmp
jns
aad
pop
out
push
aam
jno
nop
pop
repz
mov
and
shlb
sub
sbb
sub
adc
dec
push
out
add
lahf
or
jno
dec
cwtl
popa
pop
cmp
in
xor
fildl
mov
fistpl
fs
adc
les
aad
jae
in
divl
shrl
js
fcomps
lcall
mov
add
jg
mov
insb
xchg
pop
push
in
cmp
adc
gs
aad
scas
mov
xor
sarb
shll
stos
fisubs
push
sti
out
push
lods
mov
cltd
mov
inc
mov
jl
int
lahf
sbb
xchg
jecxz
fisubrs
scas
inc
mov
adc
add
mov
ret
lods
and
xchg
pop
hlt
scas
pushf
pop
xchg
outsl
int
in
sar
sub
xchg
add
cmp
aam
cmp
add
into
icebp
cmp
aas
les
mov
mov
jne
cmc
gs
cmp
adc
inc
rol
cmp
fmuls
jp
sbbb
sub
inc
fwait
mov
xchg
dec
shlb
pop
ja
ljmp
std
mov
add
pop
mov
sub
xor
loop
loope
inc
mov
push
cmpl
pop
gs
ss
mov
cmc
xor
out
xchg
inc
xchg
dec
and
xor
repz
mov
sub
sub
and
xlat
cmpsl
scas
mov
dec
mov
xor
cmp
or
or
mov
dec
sar
ds
push
mov
ljmp
cmpsb
cmp
sbb
ja
pushf
dec
aaa
dec
add
lret
pop
mov
rcrb
push
pushf
test
and
sbb
push
loope
sub
scas
arpl
inc
push
leave
leave
sub
repnz
pusha
rorl
mov
scas
push
aam
sub
outsb
mov
imul
inc
and
idivl
aaa
in
scas
xchg
aam
imull
inc
xchg
mov
aad
inc
pusha
xchg
push
mov
or
and
adcb
xchg
dec
je
jb
adc
lods
test
pop
divb
adc
mov
or
push
adc
daa
jg
push
jge
inc
inc
ret
cmp
test
sub
mov
sbb
out
push
js
out
outsb
inc
mov
test
fcomi
mov
clc
sub
stos
sbb
aaa
xor
jge
repz
add
aaa
daa
mov
dec
cmp
loopne
popa
jecxz
faddl
data16
sahf
iret
jne
lret
pop
inc
or
mov
jb
xor
pop
and
jle
mov
xchg
fwait
push
imul
dec
and
out
pop
mov
cmpsl
xor
mov
adc
std
xchg
fucomi
dec
in
insb
sahf
sub
imul
lods
jbe
and
pop
push
lahf
repnz
mov
push
and
mov
inc
int
adc
popa
mov
xor
push
rol
pop
and
imul
mov
cmpsb
sbb
cs
popf
data16
les
pop
xchg
test
sub
jno
ficomps
mov
ja,pt
addr16
popa
inc
mov
lea
pop
mov
sub
ja
add
or
cwtl
je
lea
fnsave
sti
imul
and
lret
sub
or
repnz
sub
fildl
fdivs
push
lret
adc
push
outsl
mov
cli
or
jge
add
mov
sub
test
roll
imul
mov
sbb
xor
aas
out
les
jmp
scas
cmp
cld
lea
push
xchg
sub
subl
mov
inc
cltd
adc
jns
mov
loope
add
aam
push
insb
adc
sbb
movb
jns
cltd
xchg
xchg
dec
cltd
vmovddup
in
cmpsl
push
sbb
std
test
lods
jb
repz
data16
add
and
mov
cmpsb
adc
jl
loope
dec
ljmp
stos
jne
inc
ds
test
adc
pop
jmp
int3
pop
outsb
adc
lret
dec
stc
jo
fucomi
mov
imul
add
das
cmp
loopne
jne
jle
dec
xchg
repz
xor
push
outsl
iret
aaa
and
fcomps
test
ljmp
movsb
cmc
loopne
push
in
adc
dec
orb
mov
or
sub
dec
xor
adc
mov
repz
mov
jge
or
jp
jb
aaa
sbb
xchg
movsl
push
push
mov
outsb
jbe
xchg
fldl
dec
mov
mov
test
fmul
out
fldt
dec
sub
mov
dec
xchg
inc
fucomi
test
sbbl
dec
jne
sbb
imul
pop
lahf
mov
das
loopne
test
orb
cmp
and
nop
mov
jne
jnp
sbb
push
lcall
std
mov
pop
xor
or
or
pop
jno
and
pusha
cs
jb
sbb
xchg
orl
or
mulb
dec
fcmovnbe
and
xchg
push
mov
sbb
mov
sub
jg,pt
fwait
in
data16
or
pop
enter
xchg
cmc
sub
xchg
fildl
mov
int3
lock
sub
dec
fidivrl
push
mov
xchg
sub
mov
xor
cmp
sbb
dec
cmc
push
aas
out
push
or
shl
gs
jl,pn
in
cmp
stos
sbb
addr16
pop
lods
and
cmp
fptan
rcrl
loope
mov
jb
cmp
or
dec
jl
inc
shll
push
add
add
call
fcompl
bnd
lcall
jnp
loop
fwait
push
push
cmp
incl
sar
dec
fwait
xchg
add
push
inc
ficomps
cmp
fsubrs
push
insb
shll
jmp
sbb
and
sti
mov
test
mov
dec
cmp
cmp
pop
dec
in
shlb
jb
hlt
xchg
repz
adcl
push
imul
fnstenv
aam
cltd
movsl
pop
ljmp
cmp
push
inc
js
pop
or
sbb
push
test
hlt
ret
jge
pop
movsl
call
out
jo
mov
dec
xchg
icebp
mov
push
movsb
mov
pop
or
sbb
cmp
mov
inc
mov
inc
stos
xor
pusha
xchg
scas
xchg
clc
mov
movsb
dec
sub
nop
aad
int3
sub
insb
in
loop
mov
ljmp
inc
dec
pop
mov
pop
out
xchg
cmp
rcrb
cmp
pop
lret
mov
dec
sub
rcrb
int3
cmp
ds
or
push
scas
int3
push
inc
scas
push
push
adc
pop
inc
clc
daa
xchg
inc
hlt
das
mov
ficompl
lock
mov
ljmp
jmp
out
addr16
and
sahf
rcll
xor
ficomps
xchg
xchg
enter
inc
imul
sub
sbbl
mov
push
je
xchg
lock
dec
mov
repz
jecxz
xorb
jle
xchg
stc
jo
rorl
cmpsb
gs
and
push
icebp
test
gs
aas
cld
cmp
shll
mov
inc
and
ret
pop
inc
int
mov
cmp
dec
jecxz
out
pop
xlat
adc
sub
inc
xor
out
xor
dec
xchg
jle
lret
jb
into
add
popf
ficoms
dec
mov
mov
pop
xchg
xchg
cmp
sbb
es
sub
pop
imul
push
movsb
leave
inc
loopne
jg
jmp
js
lock
popf
sbb
cmp
dec
inc
mov
out
jo
call
cltd
test
add
push
repnz
xor
dec
inc
lahf
jecxz
sub
add
push
dec
push
mov
out
daa
xchg
out
or
inc
lods
outsb
dec
or
insb
popf
jnp
call
push
xchg
ljmp
test
ss
mov
cmp
or
outsl
or
in
mov
mov
cltd
xchg
xchg
les
mov
pop
xor
in
ret
jae
pop
mov
mov
pop
push
dec
sbb
xchg
lods
push
jmp
sub
pop
xchg
pop
movsl
mov
adc
xchg
and
rcrl
aam
outsl
aad
mov
cmpsb
pop
aas
push
add
sbb
dec
repz
push
lret
lret
xchg
shrl
into
aas
xchg
sti
dec
mov
cmp
les
std
and
mov
cltd
mov
push
and
or
mov
pop
xor
pop
test
adc
insb
pop
xchg
mov
pop
xor
xchg
shlb
lea
dec
add
ret
data16
stc
xor
imul
add
prefetch
mov
and
mov
sti
sub
in
sbb
call
call
adcb
xor
lods
mov
and
xchg
xchg
add
fcom
jne
dec
xchg
in
push
adc
aad
xor
xchg
push
adc
cmp
sahf
repz
leave
into
in
mov
lea
and
inc
sub
cs
push
mov
shll
dec
push
and
ds
push
test
mov
loope
push
or
sbb
leave
sbb
je
popa
pusha
pop
mov
push
or
xlat
and
inc
adc
shll
pmaxub
out
cmp
sti
int
or
mov
je
lahf
pop
loopne
sbb
xor
push
sbb
stos
add
mov
sub
loopne
nop
jns
mov
and
push
xor
mov
jmp
xor
and
jae
notb
push
mov
push
insl
mov
push
lret
incl
xor
inc
push
xchg
mov
mov
inc
dec
push
pop
or
fimull
jb
es
cmp
sub
sub
mov
stos
mov
xor
push
sub
pop
outsb
jns
hlt
jo
out
xor
lret
xchg
sub
lds
repnz
loop
xor
gs
xor
imul
pop
rcrl
cwtl
inc
shlb
les
add
fnsave
adc
cmp
mov
mov
imul
xor
stos
lods
xchg
shll
adcl
imul
cmp
cwtl
dec
stc
fiadds
xchg
bound
fisttpl
jmp
or
or
xlat
dec
lret
sbb
sub
push
xorb
test
mov
xor
jmp
dec
xor
jno
xchg
daa
inc
or
sub
dec
unpcklps
or
push
pop
jle
adcb
cmc
lahf
cld
sub
jne
inc
cmp
mov
aam
sbbl
mov
outsl
lods
cmc
out
std
sbb
lret
and
mov
fstl
mov
sub
push
insb
sub
pop
paddq
ja
sub
mov
sub
in
popl
ret
out
jle
ret
push
xor
inc
sub
sub
icebp
sbb
adc
pop
hlt
fadd
ret
popf
sub
adc
js
mov
popf
movsl
jmp
push
dec
leave
mov
pop
pop
jbe
xor
inc
shl
mov
jne
lea
pop
xchg
push
pop
cltd
movsb
cmpsl
movsl
xchg
das
int
adc
divb
sbb
rcrl
data16
xor
xor
cmp
fstps
inc
pop
js
sbb
arpl
xchg
inc
ds
jmp
dec
cld
lret
pop
dec
mov
sbb
add
test
xchg
jo
sti
jle
call
aad
imul
ret
adc
jbe
and
fs
add
insb
push
gs
data16
or
imul
repnz
and
lret
std
jo
and
pop
rclb
adc
cmp
sahf
mov
jo
aad
sbb
shlb
adc
mov
sub
enter
std
stos
loope
xor
stos
xor
jl
jp
cmpsb
or
mov
add
out
ficoms
aam
mov
roll
add
fisubrl
jmp
loopne
call
ret
or
jmp
loope
inc
cld
loope
push
scas
mov
mov
push
sbb
sub
into
sahf
mov
arpl
lods
ja
mov
iret
dec
sbb
inc
and
cs
push
loope
icebp
stc
ss
loopne
mov
rcll
lds
dec
xchg
loop
fcompl
sbb
mov
pop
or
leave
cmpsl
fs
rep
ss
fnstenv
xor
mov
mov
mov
sbb
inc
xchg
jp
xchg
xchg
in
out
sbb
mov
mov
stc
adc
mov
xor
xchg
jg
push
ret
and
xor
rcr
inc
cmp
fnstenv
mov
ret
lods
xchg
push
sbb
xor
addb
test
cmp
cmp
xchg
push
mov
adcl
jmp
push
xchg
xchg
and
sbb
aas
add
xchg
aaa
mov
xchg
sub
pop
push
cmp
jns
cwtl
push
je,pt
stc
fistpll
push
xchg
xchg
je
pop
or
sbbb
mov
pushf
imul
test
mov
test
ret
movsl
push
leave
jle
mov
lods
pop
mov
testl
cmp
out
push
sarl
pushf
mov
or
stc
addl
push
mov
imul
int
mov
sbb
out
in
in
mov
pusha
xorl
pop
pop
mov
cld
sbb
mov
adc
dec
xchg
xchg
test
sub
int3
inc
loope
push
adc
cs
push
outsb
icebp
mov
idiv
mov
xor
push
pop
or
js
dec
cs
pusha
out
dec
sbb
mov
out
mov
push
or
ss
inc
fld
jp
jge
adc
and
jnp
fsubs
mov
pop
enter
jno
or
fldl
xchg
ret
jecxz
xor
mov
test
notb
aas
dec
in
movsb
lahf
aam
jl
cs
mov
cmp
and
pop
push
pop
js
jae
outsl
mov
mov
mov
dec
lea
xor
or
mov
andb
pusha
pop
dec
mov
xor
add
dec
mov
ja
and
dec
stos
add
fwait
cld
mov
out
lods
sub
popa
pop
sbb
popf
cmp
mov
push
push
gs
rclb
jns
notl
sub
movsl
lods
cmp
pop
loop
inc
sahf
dec
addr16
es
cld
xchg
mov
and
mov
int
cltd
inc
into
push
jns,pt
mov
insb
psubb
iret
mov
add
mov
shrb
push
test
sub
js
es
mov
add
push
or
push
push
sbb
add
fbld
das
lahf
pusha
int3
jne
cmp
cs
out
cld
shlb
xchg
jo
lods
push
in
insl
repz
fmul
jp
sbbb
xor
pusha
xchg
cltd
xor
popf
out
daa
je
mov
pop
sub
xor
mov
sub
leave
call
pop
ficomps
mov
js
ds
shrb
xchg
mov
mov
insb
outsb
mov
push
jp
jmp
aad
pop
loope
xchg
das
lea
lcall
lds
dec
out
sub
cli
jle
push
cld
mov
and
jno
outsb
enter
std
out
and
lock
gs
hlt
xchg
mov
inc
iret
push
push
cmpsb
fldenv
mov
push
stos
rcrl
xchg
rcrb
int3
pop
sahf
repnz
cmp
sub
jmp
pop
sub
pop
pop
loopne
push
xor
movsl
mov
test
sub
outsl
push
int
sahf
ds
out
out
out
jmp
or
fsts
ret
loop
mov
xor
out
mov
mov
lods
inc
adc
cmpb
inc
dec
mov
aam
lds
insb
mov
and
xlat
iret
mov
or
inc
push
mov
pop
push
xor
pop
or
push
add
sbb
inc
sbb
jb
lret
or
pushf
ss
mov
inc
jp
xchg
roll
filds
not
mov
dec
jae
cmc
fldcw
outsb
scas
les
test
stos
mov
fistl
push
xor
test
cmp
mov
in
push
lods
divb
loopne
mov
xchg
ja
mov
in
add
out
pop
or
mov
dec
fldenv
lcall
sbb
aad
mov
sub
scas
inc
in
xchg
inc
stos
popa
test
repnz
rorl
test
call
mov
cltd
insb
jecxz
imul
jns
pop
test
in
mov
pop
mov
ja
xchg
popf
and
adc
shrb
pop
bnd
ljmp
cmp
xchg
in
repz
push
mov
bound
fwait
dec
push
mov
outsl
adc
sub
roll
sti
frstor
rclb
add
jl
test
in
jae
int3
adc
pusha
mov
gs
sub
sti
mov
aam
arpl
or
jle
mov
repnz
sbb
rcrb
orl
out
gs
loop
out
add
push
push
or
mov
dec
insl
add
sbb
mov
or
adc
jo
or
int
jge
push
sbb
mov
xor
jnp
je
mov
inc
cmpsl
fdivrl
sub
imul
push
shl
mov
sub
and
xchg
and
sbb
int3
je
repnz
xorl
mov
out
mov
cmp
mov
xor
jge
cmc
xorl
push
pop
ret
push
dec
pop
sub
loopne
push
push
jmp
ljmp
jbe
xor
sbbl
js
xor
xor
sbb
push
or
adc
daa
or
or
xor
push
jne
outsl
sub
lcall
or
scas
lret
mov
pop
dec
jne
inc
jo
mov
fdivr
jbe
mov
lea
cltd
icebp
add
mov
xor
adc
cwtl
jmp
pop
inc
pop
xchg
add
mov
pop
sub
mov
jp
and
mov
idiv
sub
out
mov
xor
xchg
mov
out
mov
jno
xchg
mov
hlt
aad
std
add
cltd
insl
mov
add
hlt
cmp
sbb
test
push
fildll
divb
fstpt
clc
outsb
mov
inc
xor
push
in
mov
push
insb
nop
es
mov
fisubrl
mov
fisttps
jbe
adc
inc
rorl
aad
pop
icebp
mov
stos
mov
xchg
or
sti
notb
pop
mov
sbb
pop
mov
jg
call
jl
jg
into
cli
mov
ret
mov
cltd
fistpl
adc
mov
dec
jle
cmc
push
mulb
je
repnz
std
sbb
inc
cmpsl
int
popa
aam
push
cmp
cli
or
sub
dec
fsub
pop
repz
and
mov
arpl
adc
cmp
jnp
data16
in
xor
je
fs
frstor
ds
fwait
arpl
xchg
repnz
fptan
insb
jge
loopne
js
shr
int
inc
repz
sub
push
imul
les
sub
iret
test
inc
push
fmull
loope
dec
inc
call
aam
jecxz
jle
rcl
scas
scas
outsb
adc
psubw
and
shl
mov
les
push
sbb
jb
lret
pop
outsl
outsb
cmp
or
insb
pop
adc
movsl
cli
orl
outsb
iret
inc
add
pop
xor
mov
push
add
mov
dec
mov
sbb
iret
gs
jb
lods
cmpsb
lods
cmp
addl
mov
ss
sbb
and
adc
insl
rcr
int
fists
movsb
xor
sub
movsb
push
dec
cmp
ret
cmpl
icebp
mov
sub
inc
cmp
push
pmaxub
add
and
jmp
popl
dec
insl
mov
stc
ljmp
pop
test
sbb
scas
add
daa
aad
jne
and
mov
adc
push
sbb
out
jmp
mov
sti
in
add
into
aam
add
mov
data16
out
pop
push
repz
push
int
lods
sub
popa
insl
mov
inc
xor
cmp
les
adc
mov
aas
psrlw
pushf
jl
push
xchg
popf
add
jne
mov
scas
movsl
sub
inc
jo
outsb
jp
xchg
or
int
xrelease
mov
add
sub
es
xlat
sbb
push
loopne
aad
arpl
outsl
adc
cmp
into
push
fiadds
sbb
jnp
lret
aas
jo
dec
hlt
idivl
adc
fdiv
fdivr
int
outsl
bound
jmp
sub
into
xor
sarb
mov
dec
int3
xor
xchg
cs
add
mov
rcrb
int3
xchg
and
pop
xor
addb
add
inc
mov
inc
and
fdivs
adc
inc
jno
leave
and
ret
rcrl
jge
inc
cwtl
imul
stos
xor
xor
mov
sbb
mov
cwtl
jns
negl
inc
add
and
pop
aaa
lahf
sbb
mov
adc
mov
sarl
in
cli
sti
popa
cld
push
lahf
push
push
stos
in
xlat
cmpsl
idivb
movsl
inc
cmp
sub
fnstenv
add
pusha
adc
movsl
pop
adc
movsb
adc
xchg
aas
mov
popa
xor
cmp
aaa
imul
lods
ss
mov
flds
stos
cmp
mov
inc
dec
push
lret
loope
jge
dec
pop
pop
arpl
ljmp
mov
in
sar
mov
xchg
and
sub
aaa
and
sub
ret
dec
xlat
and
and
cmpl
xchg
add
sub
arpl
lcall
arpl
lahf
jo
fucom
pop
pop
cmp
je
popa
add
test
add
push
test
jae
frstor
das
and
dec
mov
test
test
pop
mov
mov
add
xchg
inc
pusha
pop
xchg
or
add
add
add
ja
fdivrp
mov
popl
xchg
jecxz
mov
sahf
std
addb
cwtl
lods
test
loope
fisttpl
ds
bound
in
pop
inc
or
aad
xchg
pop
aaa
mov
jbe
popf
sub
lods
dec
test
push
cmpl
daa
mov
int3
sbb
das
xor
jmp
out
cmp
xchg
dec
xchg
mov
shr
jmp
lret
pop
cmp
push
mov
nop
test
pop
jg
xchg
add
cmp
jl
lret
jl
mov
pop
mov
insl
xchg
xchg
pop
scas
mov
hlt
push
mov
imul
jecxz
sub
push
sub
cli
sahf
test
jo
xchg
adc
sub
ds
shrl
punpcklbw
loop
sub
sarl
dec
xchg
mov
and
jp
sbb
cmp
xchg
scas
mov
movsb
sahf
push
test
cmp
out
mov
test
sub
fbld
call
outsb
xor
mov
xorl
dec
cmpsb
repz
cmp
test
pusha
shlb
push
mov
pop
jl
stos
cmp
jg
xlat
je
push
mov
mov
scas
das
push
inc
dec
or
push
les
mov
sti
inc
scas
lret
cmpb
dec
ljmp
imul
js
mov
test
xchg
adc
popa
nop
ljmp
pop
aad
pop
imul
push
data16
sbb
jl
xor
fstpt
mov
push
cltd
scas
stos
test
push
pop
and
imul
push
sub
xchg
xchg
and
cmpsb
pop
dec
sbb
adc
mov
xor
jne
lret
ja
in
out
jmp
adc
fidivrl
addr16
fdivs
pop
rclb
in
sahf
call
scas
cmp
lret
inc
rclb
xchg
jge
aaa
mov
push
mov
cmp
stos
lods
rcrb
in
mov
dec
inc
mov
sar
adc
xchg
mov
add
push
mov
js
ja
mov
inc
loope
pop
jle
lods
cmp
pop
mov
mov
xchg
ljmp
stos
aad
cmpsl
xchg
test
fiadds
jge
mov
sub
sub
es
xchg
movsb
divb
jb
pop
imul
das
and
inc
dec
cmp
sbb
lock
xorb
xchg
pop
jne
mov
sbbl
inc
cmpsl
xor
pop
mov
test
fsubl
test
pop
sahf
fisubl
mov
xchg
xor
int3
dec
sub
lds
movsb
addr16
cwtl
sbb
fdivs
rcrl
xchg
out
repnz
bound
cltd
cmp
jl
lret
mov
lods
adc
mov
cmp
cmp
gs
insb
mov
aam
xchg
lea
ret
adc
push
call
pop
add
ror
sub
adc
or
xorb
out
push
sahf
mov
enter
stos
test
dec
add
xor
nop
subl
hlt
xchg
pop
dec
mov
push
in
mov
insl
enter
subb
in
lods
out
sbb
or
dec
movsb
lcall
push
cs
pop
fnstsw
out
addl
call
popf
pop
and
add
xchg
bound
push
ja
icebp
shlb
push
pop
gs
jmp
daa
and
stos
popa
idiv
add
ljmp
hlt
mov
xchg
in
add
cmpsb
into
stc
shrl
sub
cmpsl
cmp
or
nop
add
push
daa
xor
xchg
pop
dec
outsl
stos
movsl
xor
into
and
ds
add
push
cmc
push
ljmp
push
mov
and
push
inc
out
inc
adc
je
sub
jl
lcall
mov
enter
in
pop
xchg
jmp
push
cld
int3
cmp
test
sub
enter
adc
sbb
sarl
or
and
dec
lock
repnz
test
or
dec
daa
std
push
sbbb
pushf
mov
ret
out
call
mov
xchg
sub
je
mov
shlb
jne
push
cmp
loop
pop
cmp
data16
sub
mov
jne,pn
jl
jae
jg
sbb
inc
mov
pop
leave
popf
pusha
push
fists
jecxz
xchg
ja
jne
cmp
je
sbb
int3
rorl
pop
push
ja
jecxz
sti
adc
ficoms
mov
push
push
adc
cmp
xlat
movsl
cmpsl
add
and
and
or
cmc
clc
inc
test
movsl
add
mov
mov
pop
inc
imul
sbb
lods
cmp
and
pop
add
xchg
jno
test
ljmp
and
fwait
sbb
jl
pop
orl
cltd
loopne
pop
sti
rcrb
xor
cmp
stc
repz
shrb
lcall
addr16
out
push
outsl
add
xchg
mov
movsl
rcr
sbb
sub
jno
iret
cmpsb
call
xchg
notb
push
fbstp
bound
bswap
and
in
shl
sub
icebp
out
sub
pop
test
dec
sbb
sbb
jbe
aam
out
out
fildl
sbb
xor
mov
hlt
add
sub
int3
loop
pop
lods
mov
data16
inc
test
push
lds
std
jecxz
jno
xchg
pusha
fld1
sti
lcall
xchg
arpl
test
scas
jg
dec
pop
arpl
lret
adc
loopne
pop
jno
sub
fcomps
ret
mov
sbb
dec
int3
fwait
pop
sbb
fisubrl
dec
outsl
rcrl
sub
subb
xchg
push
xchg
add
xchg
pop
enter
push
pop
cmp
aam
and
and
dec
sbb
mov
pop
inc
or
inc
xchg
jb
pop
xchg
icebp
cmp
dec
cmc
sub
leave
out
push
or
scas
pop
cmpsl
loopne
adc
mov
add
adc
cltd
jecxz
and
addr16
das
mov
cld
call
push
mov
sti
fldl
setp
and
decl
cmp
cltd
adc
mov
jb
cmp
push
sbb
int3
jnp
mov
rol
mov
fstl
jle
jecxz
pushf
dec
cmp
sub
adcl
sbb
into
mov
aaa
bswap
roll
push
cs
enter
dec
push
xor
and
xchg
push
dec
mov
lds
cmpsl
xlat
rorl
mov
push
mov
xor
dec
cmpsw
mov
xchg
sbb
call
mov
stos
in
jb
outsb
lahf
xor
pop
orb
in
mov
cmp
mov
adc
ljmp
push
jnp
adc
cmp
sbb
aam
sbb
mov
fld
jnp
jno
fbld
inc
jge
push
jnp
fcmovb
sub
hlt
xchg
ds
nop
lea
xchg
fs
lret
push
lods
scas
jle
scas
ss
lea
cmp
sarb
iret
xchg
rcll
pop
or
mov
iret
mull
mov
pop
jl
daa
aad
adc
push
xchg
shlb
in
mov
mov
or
xor
mov
aaa
enter
aas
sub
and
cmc
jo
pop
ljmp
push
jecxz
lahf
cs
inc
and
adc
add
add
loope
lock
es
pop
fdivrl
push
pop
or
ror
and
inc
inc
push
push
pushf
int
loop
push
inc
jge
xchg
adc
adc
cwtl
jo
sbb
fsubrl
xchg
adc
dec
sbb
in
jmp
or
push
xchg
xor
nop
sbb
test
dec
mov
push
in
cltd
imul
push
fadd
lahf
addr16
mul
ja
dec
mov
out
scas
cmpsl
add
or
test
sbb
mov
imul
lods
lods
out
mov
pop
test
adcl
repz
xchg
mov
or
cmc
jmp
or
cmp
andb
pop
mov
dec
icebp
insb
mov
mov
mov
es
cmp
sahf
call
jnp
fisubrl
sbb
push
lea
call
ss
pop
lahf
or
xor
push
cmp
pop
pop
pop
push
xrelease
scas
sbb
mov
dec
icebp
sbb
ss
mov
int
lahf
push
and
add
adc
xchg
sub
or
shr
push
popa
xlat
cmp
adc
push
in
call
mov
aad
lcall
test
mov
mov
jbe
mov
inc
pop
inc
sub
xchg
jg
or
sbb
and
fidivs
cmp
mov
fs
arpl
pop
inc
dec
je
in
ja
and
mov
fwait
mov
test
jecxz
cmp
subb
test
clc
pop
mov
sbb
cltd
push
or
mov
jmp
mov
fwait
cmp
mov
xlat
data16
pop
stos
outsb
add
aam
jle
stc
arpl
mov
mov
rol
ds
in
lret
pop
jmp
fptan
repnz
cmp
xor
mov
js
jle
ret
xor
jmp
xchg
jns
mov
cmp
packsswb
scas
out
lods
movsl
and
or
jg
xchg
xchg
punpcklwd
lret
call
int
mov
or
jb
inc
inc
sbbb
push
dec
jg
lock
dec
lods
jmp
add
outsb
stos
fwait
jmp
mov
pop
stos
mov
pop
inc
enter
cli
bound
add
add
jp
xchg
mov
adc
movsb
xchg
jns
fldenv
popf
push
sub
add
decb
push
mov
dec
add
pop
or
mov
aas
fsts
add
popl
xor
orb
jbe
mov
in
sbb
dec
mov
arpl
cmpb
pop
xchg
pop
push
xchg
xor
ss
call
jae
or
testb
pusha
jbe
test
dec
mov
cld
jb
ss
push
pop
push
add
imulb
jne
mov
push
lcall
insb
or
popf
cld
imul
cltd
lods
aad
mov
iret
icebp
cmp
ja
cwtl
fucomip
rolb
rolb
in
jle
scas
xchg
aaa
je
inc
inc
outsb
out
repnz
out
dec
add
lds
cmp
mov
data16
cmc
xlat
dec
lret
xlat
fnsave
pop
stos
test
jns
jg
fistl
and
mov
inc
cmpsb
add
loope
dec
leave
pop
mov
loop
mov
inc
stos
xlat
lock
xor
push
lods
xchg
clc
addl
jo
mov
loop
adc
cltd
arpl
sub
inc
add
stos
push
pusha
jle
das
je
test
dec
inc
popa
loopne
jns
jge
mov
jge
push
jecxz
ja
cmp
or
movsl
rclb
and
sub
jmp
sbbl
iret
cli
fdivrs
add
lea
loop
push
cmc
or
aam
int3
sbb
dec
mov
cld
loope
dec
pop
cld
or
dec
xchg
or
lea
add
mov
adc
popa
sbb
shrb
mov
sbb
add
insb
cs
das
fldcw
mov
pop
loop
adc
ljmp
jno
push
cwtl
out
stc
and
xor
cld
lods
xchg
xchg
in
jmp
mov
sub
mov
sub
into
xchg
mov
lret
push
mov
sub
sarb
mov
adc
adc
push
inc
jnp
test
jo
rclb
iret
test
test
sub
repnz
pushf
add
inc
ja
jnp
mov
cmpsl
push
ljmp
mov
xor
repnz
dec
iret
cld
shl
mov
cmp
jl
pop
xchg
and
cld
outsb
insl
out
xchg
cmpb
cwtl
xchg
mov
js
lea
cmp
mov
xor
adc
fucomp
jg
bound
push
or
adcb
mov
dec
push
in
fcomip
xchg
inc
or
je
jns
sti
inc
xor
iret
hlt
lods
call
stc
test
in
xchg
ljmp
pusha
inc
ljmp
movb
imul
pop
pusha
sti
enterw
insb
push
ss
rolb
pop
insl
sub
jns
ret
icebp
lret
int
push
notb
dec
sub
xchg
test
or
add
popf
xor
rcrb
or
lds
sbb
dec
mov
add
scas
imul
andl
add
call
xchg
loop
mov
iret
adc
jo
aas
push
flds
ror
cmp
mov
fnstsw
popa
jge
push
dec
clc
sbb
in
fwait
adc
aas
sbb
es
dec
jo
mov
ficoml
mov
xor
adc
call
xchg
jbe
push
dec
into
jae
inc
jecxz
inc
stc
add
cs
ss
adc
pop
mov
xor
mov
push
xor
pop
or
mov
pop
xchg
lahf
jmp
jp
adc
sub
ret
jmp
add
mov
xchg
stc
pop
xchg
pop
mov
sub
ret
push
sub
notb
pop
jnp
bound
push
jge
adc
mov
stos
sbb
jmp
dec
bound
inc
jbe
xor
mov
fwait
scas
dec
lahf
lds
mov
mov
lret
mov
fldl2e
mov
leave
das
andl
or
fs
jns
dec
es
adc
hlt
sub
pop
add
jmp
loope
aaa
shrl
js
pop
xorb
push
mov
jno
clc
or
jecxz
push
inc
jmp
adc
ret
mov
jnp
jmp
jg
xchg
push
std
xor
adc
inc
pop
xor
cmp
xchg
lea
mov
xchg
adc
mov
insb
je
fcompl
pushf
jo
nop
cwtl
jne
fnstsw
sub
and
mov
lcall
dec
icebp
test
jns
sbb
and
mov
sub
adc
pop
rorl
lahf
outsb
gs
jns
adc
insl
inc
cmp
rcl
shrl
scas
stos
pop
xchg
fidivrs
iret
adc
pusha
call
das
dec
aam
push
pusha
push
test
mov
call
cmp
pop
icebp
out
push
xchg
jnp
pop
inc
pop
imul
lods
into
xchg
out
pop
xor
lret
cld
les
shll
repnz
repz
shll
gs
imul
mov
les
mov
cltd
cli
and
int
out
push
ljmp
pushf
movsl
out
and
dec
pop
inc
or
enter
movl
popa
or
mov
lea
cmpsl
sbb
rorb
mov
addr16
push
xchg
or
lahf
sub
inc
das
nop
sti
jmp
aas
jns
inc
sbb
stos
das
xorl
es
jge
sti
adc
mov
jl
sbb
xor
inc
loope
scas
fs
cmp
mov
push
mov
dec
fisubs
fwait
mov
push
jns
xor
pusha
xor
dec
cltd
push
fs
arpl
data16
sub
and
push
lods
into
sub
outsl
adc
push
mov
push
xor
loopne
pushf
int3
aad
mov
ds
xor
cmp
push
mov
iret
int
inc
in
loop
insl
leave
in
loop
push
hlt
add
jns
add
popf
push
loope
loopne
pop
and
push
icebp
jg
cmp
jg
cwtl
inc
aad
jno
outsl
int
jo
and
lock
dec
pop
sbbb
mov
mov
push
inc
enter
imul
jge
loope
adc
sbb
sub
inc
and
lahf
sarb
sub
mov
dec
cmc
push
or
call
movsl
and
adc
sbb
dec
mov
insb
and
loopne
sarb
mov
or
mov
xchg
sbb
cmp
mov
pop
jne
dec
cld
daa
in
test
or
xchg
pop
stos
mov
in
out
xchg
in
jl
mov
lret
int3
movsb
negl
sbb
outsl
mov
xor
adc
jns
repnz
xor
aam
into
imul
popa
aam
movsb
in
lret
out
sub
dec
mov
push
dec
push
and
add
push
and
xor
adc
out
ja
popa
push
or
es
and
movsb
adc
mov
loope
xor
ja,pn
loope
jne
fwait
roll
daa
pop
inc
ss
cld
sub
sbb
cmp
dec
adc
out
repz
adc
mov
pop
lahf
sub
mov
hlt
add
push
push
xor
inc
ficoms
or
test
pusha
lea
int3
mov
cld
scas
or
pop
flds
cmpsl
mov
adc
add
or
pop
lods
shlb
push
lea
ja
clc
lods
aam
dec
adc
adc
mov
popf
int3
int3
pop
sarl
call
sti
movsl
inc
add
jg
rcpps
sahf
add
out
or
fistps
in
xchg
mov
fwait
sub
test
pop
adc
das
std
add
mov
das
in
in
lahf
push
gs
mov
mov
mov
lret
xor
cmpsl
rcrb
jne
xchg
xchg
sbb
sbb
cmpsl
mov
xchg
testl
mov
push
pop
jbe
xor
add
and
clc
pushf
push
jp
push
push
subl
popf
pop
sbb
push
lea
idivl
mov
imul
dec
xchg
cmp
stc
out
in
pop
pop
pop
jecxz
mov
imul
jbe
sub
cmp
xlat
lods
enter
and
ja
sub
mov
ljmp
out
mov
adc
mov
popa
mov
dec
inc
clc
pop
mov
xchg
pop
pop
outsl
in
mov
movsl
mov
inc
and
out
fs
mov
les
cwtl
mov
pop
mov
in
jns
adc
adc
push
jecxz
mov
mov
xchg
test
icebp
sub
fwait
lahf
sti
ret
mov
addb
roll
push
pop
inc
cwtl
lcall
in
add
call
mov
cmp
adcb
rcrb
sti
inc
cmpsl
push
testb
jmp
dec
icebp
xchg
bound
add
js
pop
mov
mov
ljmp
or
mov
sub
shll
mov
adcb
sahf
stc
mov
in
int
push
sbb
and
std
je
lret
push
pusha
or
or
stc
mov
cmc
lahf
cmc
fwait
test
mov
jp
shrl
xor
sbb
and
push
jecxz
popa
rcl
mov
sbb
aaa
push
frstor
stos
fidivs
jg
imul
pop
lret
daa
cld
xlat
int
inc
lods
or
push
into
cld
clc
out
shlb
inc
add
mov
inc
sbb
pop
aam
sbb
mov
lods
push
mov
pop
mov
nop
aam
movsl
add
xchg
cld
xor
sub
xchg
fsubrl
push
jmp
stc
hlt
hlt
mov
ror
jae
jbe
mov
in
xor
js
sahf
movq
xor
dec
sti
pop
hlt
mov
andl
int3
cmp
pop
jb
cmp
ror
inc
loope
push
insl
push
push
and
sti
roll
popf
sbb
cs
pop
cmp
mov
sub
insl
ds
call
fsubp
stc
push
jae
push
leave
and
movsb
scas
xor
or
xor
out
cmp
xor
fmuls
jbe
and
jne
pop
cmp
shlb
xchg
sahf
jg
pop
sub
rcr
xchg
jp
push
je
lret
imul
sbb
cltd
mov
iret
push
imull
add
lods
push
and
out
sub
ja
jns
mov
ds
pop
xchg
test
icebp
inc
mov
scas
mov
test
push
pop
stos
and
shr
fcmovnbe
lock
nop
gs
jmp
sub
or
mov
sbb
xchg
cwtl
xchg
fs
dec
lods
cltd
out
mov
inc
ficomps
sbbl
mov
cmpsb
ja
and
scas
je
ja
dec
push
data16
inc
xchg
stos
jae
pop
repnz
jo
jmp
imul
mov
aad
dec
adc
test
and
gs
sbb
test
clc
push
and
out
pop
xchg
fisttpll
shrb
push
shll
shrb
cmp
and
into
notb
mov
sbb
xor
cmc
mov
jae
outsb
mov
in
jecxz
jmp
fdivrl
inc
movsl
fdivl
stos
sub
idiv
pop
arpl
mov
icebp
xor
daa
cwtl
mov
xor
div
in
or
mov
sahf
dec
jb,pn
push
notb
pop
stc
ss
fadd
jne
hlt
jne
lcall
add
cmp
fisubrs
sub
inc
push
int3
sbb
dec
out
and
cld
outsb
std
or
bound
pop
repnz
sub
sbb
scas
icebp
das
mov
es
add
ret
es
xor
sarb
sub
xchg
es
inc
or
pop
fsubp
insl
fiaddl
and
cli
dec
pop
ret
and
or
inc
and
sbb
into
or
jge
dec
xor
lret
inc
loope
inc
subl
lds
andl
dec
and
clc
scas
shlb
into
inc
pop
std
add
leave
jno
mov
flds
pop
push
incb
cmc
inc
jne
in
pop
sbb
sbb
enter
or
daa
call
es
pop
cltd
daa
jle
push
into
loopne
xor
subl
push
mov
shrb
insl
cmpsb
jo
mov
pop
in
ss
mov
cli
out
cld
out
mov
aam
sti
xlat
cld
mov
lock
rcrb
stc
push
xchg
inc
mov
js
repnz
sub
push
cs
ret
xchg
lock
pop
mov
sti
mull
mov
jae
test
add
adc
mov
jmp
repz
or
test
mov
jmp
mov
xchg
fstpt
test
xchg
xor
sub
dec
mov
xchg
or
add
xchg
jae
insb
lea
dec
inc
rcr
test
call
pop
je
mov
inc
in
test
ror
int
add
insl
xchg
pusha
repnz
addr16
xor
lcall
jmp
je
add
insb
xlat
mov
dec
cmovs
sahf
cmpl
hlt
int3
cld
mov
test
sub
push
aas
add
and
push
fldl
sub
outsb
ror
jp
jbe
test
inc
adc
enter
pop
or
jecxz
fwait
in
jg
ljmp
lods
adcb
repnz
mov
and
xorb
sti
cli
xchg
push
dec
mov
sbb
flds
jnp
xor
adc
push
push
xchg
add
pop
in
sub
aad
jns
je
loope
jmp
and
mov
lret
mov
mov
pop
jae
test
out
es
mov
push
sti
fsubs
loopne
outsl
rcl
loop
ss
add
scas
jp
jno
mov
xchg
adc
xchg
ds
or
hlt
xchg
dec
xor
push
cmc
int
adc
adc
pop
cld
jns
repnz
cli
inc
inc
or
adc
sbb
imul
popf
mov
sarb
das
lods
fbld
push
add
scas
in
adc
sub
addb
ljmp
movsb
insb
call
push
add
testb
xchg
jo
ret
test
testl
jmp
enter
push
ret
dec
cmpl
fcmovnb
int
jne
add
add
inc
sub
dec
dec
xor
adc
add
sub
out
fdivp
test
setb
aaa
mov
test
insb
xchg
xchg
leave
jne
push
out
cmpsl
add
adc
xor
cwtl
addr16
xor
scas
cmpb
jle
sub
mov
mov
lahf
add
adc
add
fsubrs
in
push
pop
jge
xor
daa
xchg
mov
mov
stos
dec
cli
mov
mov
mov
or
mov
gs
sbb
ds
mulb
stc
push
lret
popa
mov
and
inc
jne
cmp
jg
lods
adc
push
adc
push
test
loopne
pop
test
sbb
push
pop
stos
and
repz
mov
jl
mov
mov
idiv
mov
ds
jnp
xor
xchg
jo
jno
movsl
mov
std
es
xorb
jl
insb
out
das
addr16
aam
sbb
cltd
sub
movsl
jecxz
mov
loopne
inc
mov
rcrb
insl
jae
or
lret
cmp
push
add
or
fbstp
mov
and
mov
mov
sahf
push
enter
movsl
mov
jne
out
ja
imul
sub
sub
sbb
cmp
mov
mov
add
fdivrs
sbb
mov
shll
pushf
call
testl
jl
dec
popf
mov
push
mov
das
mov
sub
mov
insb
mov
cmp
xchg
data16
dec
or
loop
imul
inc
push
jle
scas
mov
xchg
cltd
out
pop
sahf
cs
sub
sti
and
xchg
push
xchg
jbe
lret
xchg
inc
mov
sub
sub
or
mov
jge
sahf
or
pusha
pop
xor
in
imul
rcrl
push
inc
mov
mov
push
int3
call
and
lods
jle
data16
sbb
sub
sub
nop
lret
mov
fcom
outsb
push
repz
jp
iret
pushf
mov
and
sbb
pop
ret
xchg
gs
jae
cmp
enter
sub
mov
adc
frstor
out
pop
and
jnp
bound
ret
sbb
daa
mov
lea
je
ss
pop
sub
or
add
push
xchg
jl
jmp
jo
jg
jmp
leave
dec
lods
dec
xchg
fadds
fstl
cltd
ja
mov
repz
jae
mov
cltd
iret
pop
stc
xor
push
ljmp
lret
sub
xor
ljmp
pop
pop
xchg
add
fistl
mov
sarl
stc
cld
xchg
div
xor
test
imul
fldl2t
shl
pop
jbe
push
in
dec
movsl
sub
push
adc
inc
fwait
xchg
ljmp
in
or
bound
sub
in
inc
xchg
inc
js
mov
mov
cmc
das
std
sti
dec
xor
or
add
jle
mov
cmc
mov
mov
fmuls
cmp
xchg
adc
push
xchg
loope
push
pop
xor
jns
push
inc
add
cmc
and
stc
and
mov
shrb
out
push
add
not
data16
mov
fs
out
les
in
fadd
pusha
ds
fmul
cmpsb
push
adc
xor
out
nop
add
or
lds
lods
sbb
xor
cmpsb
xchg
test
dec
pop
jg
sub
aad
mov
lcall
inc
mov
clc
jle
lock
push
and
sub
mov
jb
repnz
imul
ljmp
js
mov
mov
fwait
orl
cmp
xchg
shlb
psrad
movsl
adc
adc
cmpsb
addr16
mov
aad
pop
adc
xlat
aam
in
adc
sbb
or
mov
stos
sar
sbb
cmc
fucomp
push
pop
mov
xchg
xor
cmp
push
xor
clc
and
sub
jae
aas
dec
xor
jg
js
imul
lret
ret
inc
test
jnp
xor
mov
lret
aaa
adc
std
inc
mov
andl
cmp
dec
inc
adc
fisttps
mov
sbb
sbb
cmpsb
lock
jmp
push
out
dec
flds
add
rorb
sbbb
xchg
out
fists
xchg
or
fsub
fisubrl
push
in
adc
mov
lea
fcmove
sbbb
shrl
fisubrs
pusha
dec
jp
mov
into
sbb
pusha
aad
das
push
inc
movsl
cmp
sub
loope
and
inc
sti
out
mov
and
stos
xchg
sti
xor
int
movsb
pop
ret
iret
and
xor
jns
jmp
mov
loop
mov
add
xchg
and
push
aas
jmp
and
pusha
mov
or
pop
mov
or
fdivp
push
jp
adc
xlat
inc
addl
insb
in
push
or
pushf
add
lods
xchg
testb
out
pop
out
pop
fs
cmp
fdivp
adc
lret
sbb
lea
adc
stos
jge
inc
inc
ss
adc
fnstsw
aas
adc
add
jmp
mov
fs
test
xlat
adc
xchg
loope
enter
adc
clc
ja
dec
cmp
push
sub
mov
je
cmp
fsubrl
add
jl
jbe
push
fwait
xor
xchg
mov
mov
outsl
lods
cli
or
div
out
cs
scas
pop
clc
dec
andb
js
sbb
cmp
stos
push
jae
rol
gs
pop
stos
ljmp
pop
jge
mov
call
mov
aad
je
xor
push
or
shrb
dec
xorb
pop
push
cmc
or
and
lcall
add
subl
xchg
cmp
xor
pop
adc
sub
fldenv
xchg
add
scas
dec
mov
mov
lea
jbe
lds
fs
or
nop
roll
add
ficompl
stc
sub
mov
out
xor
dec
lods
das
cli
in
sbb
mov
inc
xchg
ret
popl
mov
or
cmp
jl
xor
xor
out
xor
sbb
cmp
out
cwtl
sub
push
scas
sti
sbb
mov
push
mov
jo
or
insl
xchg
ficoms
ja
inc
outsb
lods
mov
sbbl
psrlq
clc
push
test
hlt
jl
sub
dec
and
mov
mov
push
je
pusha
push
or
fiaddl
mov
lock
daa
aaa
lret
pop
ficompl
push
sbb
push
mov
out
mov
xor
mov
mov
sbb
movsl
mov
mov
mov
mov
cmpsl
call
mov
jnp
push
cmp
cmpsl
sbb
dec
cs
sbb
xor
cmp
mov
dec
popl
jge
push
ficompl
lods
idivb
iret
in
mov
popf
into
fisubrs
or
pop
adc
pusha
cwtl
jae
sarb
inc
or
sub
adc
jg
in
mov
adc
insb
gs
in
aam
or
sub
fcmovnu
xchg
rol
sahf
and
icebp
icebp
std
inc
ret
sbb
cltd
sub
cmc
cmp
xor
push
push
jno
and
jo
leave
das
rcll
bound
and
sub
fimuls
cmpsl
repz
pop
xchg
xchg
mov
xor
xchg
hlt
push
sbb
dec
or
es
mov
xchg
stos
pop
notl
or
inc
lods
das
or
xor
cmp
rcl
dec
mov
sbb
fucomi
xlat
rcll
add
gs
cmp
fcmovbe
push
ds
loopne
push
insl
sub
xor
push
lods
leave
popf
dec
pop
sub
cwtl
rolb
stos
iret
and
xor
pushf
pop
into
scas
mov
add
sub
lahf
xchg
repnz
aad
sub
and
data16
mov
ja
xchg
stos
and
jge
inc
adc
mov
sbb
inc
popa
adc
nop
xor
mov
pop
fcom
movsb
sub
or
filds
or
lret
outsb
repz
push
inc
stos
mov
or
mov
xchg
std
mov
cmp
sub
mov
xor
xchg
adc
addr16
aam
gs
sti
test
outsb
cmp
pop
fcmovu
cwtl
dec
in
mov
sub
ret
inc
outsl
pusha
cli
mov
sub
cltd
cld
push
gs
sbb
call
cwtl
test
icebp
xchg
mov
pop
pop
or
inc
icebp
push
push
test
into
xor
xor
inc
sarl
sub
jle
fcompl
xchg
repz
js
scas
mov
pushf
mov
cmp
cli
data16
or
xor
outsb
xor
rep
cmp
popf
cmp
mov
add
pop
mov
push
cmc
notb
mov
mov
jb
repz
ljmp
movsb
push
jne
imul
sbb
fldcw
nop
sbb
xchg
int
addr16
pusha
call
push
xor
mov
cmp
mov
shr
jmp
inc
test
nop
punpcklbw
in
push
sub
mov
data16
pop
aas
add
movsb
mov
lods
inc
jle
pop
and
cltd
aaa
mov
in
fs
mov
imul
push
add
xchg
jecxz
das
adc
jg
jmp
pusha
shlb
mov
xor
jecxz
orl
out
and
shll
jg
jge
incl
adc
inc
cmp
mov
cwtl
jge
hlt
insl
shrl
jecxz
sbb
xor
sbb
xchg
jg
ret
popf
mov
insl
lret
lea
jnp
pusha
mov
jae
sub
or
scas
pop
adc
and
mov
scas
push
xchg
add
mov
leave
mov
inc
jp
ret
add
insb
cmc
mov
inc
pop
sti
out
xlat
cli
ljmp
sbb
sub
loop
lds
shll
cmp
adc
or
dec
mov
cs
call
xchg
fdiv
test
ret
lods
add
inc
dec
cmpsl
mov
fwait
or
mov
pop
icebp
mov
sub
xor
stos
add
pop
outsb
sbb
icebp
inc
add
jae
jb
test
push
test
add
and
or
add
jae
lcall
sbb
ja
add
outsl
mov
gs
test
fisttpll
lcall
dec
pop
mov
push
or
mov
lea
jne
movsb
jne
or
dec
cld
mov
sbb
pop
adc
sub
xchg
mov
into
xorb
mov
xor
das
arpl
jge
xlat
stc
add
negb
or
mov
and
popf
sahf
sub
sahf
mov
xchg
xchg
xor
xor
mov
sbb
ror
push
inc
gs
push
mov
dec
adc
sbb
mov
cld
insl
inc
jg
adc
add
je
adc
int
cmp
adcl
mov
cld
adc
jl
jae
movsl
sub
jbe
push
push
mov
add
pop
dec
int
shll
rorl
mov
pop
js
mov
cmp
add
pop
stos
imul
push
mov
int
fidivrl
cmp
inc
pop
cmpsl
mov
mov
xor
je
insb
pushf
test
mov
hlt
dec
sub
call
push
lods
xchg
mov
scas
cmp
loope
jae
jg
orb
dec
fistl
mov
lret
cmpsl
in
fwait
ss
sub
jmp
call
fbld
jnp
cltd
fxch
pop
in
push
mov
outsl
jl
jmp
imul
mov
push
fnstsw
fpatan
pop
xlat
cmc
pslld
jle
testb
mov
push
add
sbb
xlat
sub
stos
popf
mov
movsb
mov
sbb
and
add
hlt
and
pop
and
mov
jge
adcl
mov
stos
shll
cli
cmpsb
setge
movsl
mov
addr16
jno
scas
xor
or
sub
xlat
shr
lods
sub
iret
insb
jne
addr16
lret
dec
movsb
daa
leave
dec
mov
dec
inc
sbbb
aad
jmp
hlt
insb
insl
inc
mov
dec
pop
jbe
xor
outsb
xchg
and
js
push
cmp
orl
sti
mov
ja
sub
inc
popf
push
hlt
pop
iret
rcl
jns
ret
andnps
add
cli
mov
in
lea
pop
inc
and
or
arpl
ds
mov
je
cmp
adc
fnstcw
adc
popa
xlat
fs
das
inc
jnp
cmpps
insl
cmp
fstpt
dec
mov
call
jp
ret
cmp
lret
imul
fildl
mov
stos
jnp
mov
xchg
mov
fwait
aaa
sub
pushf
testl
mov
xchg
stos
cmp
xlat
add
inc
jae
out
testl
pop
jnp
cld
mov
call
mov
pop
divb
xor
stos
movsl
pop
sub
inc
sbb
add
pusha
cmpsl
push
ljmp
or
jge
inc
pop
ja
in
scas
out
test
inc
insl
jns
in
fildl
jp
imull
pop
idivl
jae
jp
push
or
fisttpl
es
or
inc
pop
int3
gs
cli
adc
jnp
xor
loopne
jae
test
xor
xchg
fs
sarl
push
into
mov
stos
inc
mov
push
jo
lods
inc
pop
jnp
mov
pop
push
xchg
repnz
mov
rclb
cmpsb
stos
fdivp
int
subb
test
shrl
ljmp
push
mov
stc
das
mov
movsb
scas
adc
pop
mov
ja
hlt
test
and
cmp
push
mov
into
icebp
cmpsl
mov
fst
pop
outsb
inc
cld
inc
inc
add
out
int3
sub
sbb
add
or
mov
dec
dec
push
xchg
xor
cmp
cmp
jb
pop
lahf
xchg
xchg
push
js
adc
pop
add
xchg
sub
adc
adc
or
dec
pop
or
cmpsb
sbb
sub
jle
mov
xchg
cli
in
add
stos
or
jns
out
xchg
imul
xor
push
stos
daa
sbb
lret
in
lods
clc
lods
movsb
jbe
lcall
cli
push
inc
ljmp
jns
lea
mull
push
lret
ljmp
shl
cmp
pop
clc
lcall
inc
adc
or
add
xchg
push
and
outsl
jae
icebp
fwait
mov
sub
rorb
int3
movl
xchg
adc
iret
fcomps
scas
push
ss
mov
jle
insb
sahf
cmpsl
out
pop
into
jge
scas
pop
outsb
lahf
stos
mov
arpl
sub
jbe
sbb
pop
jle
ret
mov
mov
fsubs
aam
xor
add
out
test
inc
pop
repnz
jb
icebp
dec
es
mov
and
push
pop
call
mov
jp
sbb
mov
push
xchg
cmp
and
imul
enter
movsb
in
adc
or
out
hlt
dec
out
data16
inc
push
outsb
cwtl
add
in
mov
and
dec
out
incl
add
cld
aas
mov
je
jae
dec
mov
jle
and
mov
jp
loopne
test
lods
sti
aad
mov
pop
or
mov
lods
cmp
jecxz
dec
ds
dec
sarl
shlb
jne
push
sub
push
loopne
repz
push
aam
adc
adc
mov
push
test
fimull
shlb
dec
dec
aas
leave
jo
xchg
ljmp
lahf
nop
xlat
xchg
sub
add
push
add
sarb
ljmp
push
add
fnstcw
inc
cli
xchg
scas
mov
testb
push
sub
adc
add
xchg
jge
das
jae
stc
test
add
inc
and
push
pushf
xchg
cmc
fwait
mov
fcom
rorb
push
imul
cli
xor
sub
adc
nop
xchg
popa
inc
fdivrs
mov
stos
aam
sbb
mov
lahf
xchg
lcall
repnz
insb
xchg
mov
pop
in
push
cli
cmp
out
jne
pop
mov
xorb
fwait
push
add
pop
cmp
pusha
mov
push
add
mov
int
inc
push
xor
pop
pop
testb
push
aad
stc
xchg
adc
mov
cmp
mov
ja
popa
mov
cmpsl
pop
mov
xchg
pop
icebp
jg
ja
jge
xchg
scas
frstor
mov
mov
ret
jg
out
and
test
mov
mov
loop
icebp
frstor
lcall
sbb
sbb
inc
enter
push
icebp
negb
push
xchg
cmp
test
push
int3
gs
lret
xchg
in
sbb
xchg
sahf
mov
cmc
movsb
add
adc
sub
lcall
xchg
insl
mov
fwait
addl
cmp
cmp
movsb
pop
movsb
movsl
das
push
clc
out
cmpsb
ret
rcrb
fst
add
insb
fadds
dec
mov
sbb
pop
push
scas
adc
fiadds
jl
test
insb
dec
subb
xchg
aam
sub
mov
and
and
loope
int3
sbb
sarb
and
addr16
je
sbb
insb
clc
sbb
cmpsb
xor
ljmp
mov
ss
xor
jle
enter
roll
push
mov
imul
jbe
into
shll
nop
push
mov
call
mov
in
push
leave
int
mov
lds
or
mov
int3
xor
ljmp
xchg
nop
cmc
dec
scas
add
scas
dec
fistpl
xor
lret
push
test
cmpsl
inc
lock
sbb
push
orb
test
add
cmp
cmp
lret
lret
outsb
lret
xor
adc
pushf
xchg
jo
adc
ficompl
pop
cmpsb
ds
add
push
cwtl
repz
inc
xchg
pop
lret
xor
sub
sub
cmpl
sbb
testl
fucomi
clc
lahf
popf
leave
out
cmc
fcoml
xchg
daa
lods
inc
es
int3
icebp
orl
xchg
add
xor
repz
pusha
sbbl
mov
or
insl
jno
push
adc
or
add
and
ss
dec
xlat
in
sub
fisubrs
dec
xchg
call
imul
cmp
pop
subb
dec
mov
mov
insb
scas
cmp
mov
push
in
data16
jmp
adc
ds
adc
push
mov
daa
testb
nop
jo
xchg
aad
cmpsl
sbb
dec
xor
xor
movsl
lock
sbb
cmpsl
sbb
fidivs
xchg
test
sar
jle
fsubr
pop
lea
ds
pop
pop
inc
jo
ret
pop
mov
loope
dec
ud1
sub
xchg
sub
in
push
push
and
daa
or
test
bound
push
jmp
add
je
cltd
stc
pop
int
call
push
xlat
into
lret
iret
ret
popf
cmp
add
std
into
jo
xor
push
lock
xchg
mov
adc
jle
shlb
cwtl
pop
test
lds
pop
push
xchg
mov
sub
popf
gs
mov
das
lcall
test
dec
push
push
testl
xor
ja
xor
mov
out
icebp
jmp
cld
call
push
subb
mov
loope
das
cmp
enter
xorl
jnp
pop
jno
mov
js
sbbb
xor
inc
or
jae
mov
scas
xchg
cmp
pop
out
bound
dec
push
or
push
add
aaa
cltd
in
mov
sub
and
xor
dec
out
push
mov
sbbb
mov
aam
inc
jp
or
xchg
push
inc
push
push
leave
xchg
dec
mov
mov
jb
sbb
sti
push
push
cs
into
shrl
or
push
mov
bound
xchg
mov
add
sbb
mov
aam
popl
jmp
movsl
sub
lds
into
jl
nop
jo
xor
divl
int3
inc
jmp
mov
pop
les
cltd
in
stc
scas
adc
mov
cld
gs
lret
test
aad
mov
dec
jg
test
fdivrl
aam
mov
icebp
in
add
mov
call
jo
pop
adc
mov
dec
jne
sahf
into
mov
comiss
in
roll
dec
inc
leave
in
fcompl
pop
fs
push
rclb
repz
sub
push
ds
dec
lock
sbb
xchg
jne
mov
mov
pop
sbb
jmp
pop
inc
ja
xchg
movsl
and
pop
ret
hlt
mov
stc
mov
das
and
loop
in
int
jmp
xchg
lock
or
sub
mov
mov
mov
sahf
out
cmp
and
cwtl
sahf
rcr
inc
das
loop
hlt
push
popf
out
sbb
add
shrb
inc
in
data16
stc
addr16
dec
daa
outsl
ficompl
gs
mov
push
movsb
mov
cs
inc
mov
and
outsl
adc
incb
push
sbb
xchg
ret
sub
dec
xor
pop
jecxz
cmpsb
add
stos
jae
inc
add
xor
loope
pop
or
test
gs
jns
xcrypt-ofb
cmpsl
push
aam
xchg
and
icebp
rolb
xchg
fwait
push
dec
or
xor
fwait
jp
xchg
lea
bound
mov
sahf
ss
rcrb
push
or
test
loopne
test
repnz
jmp
xor
rorb
dec
or
mov
loop
push
aad
rclb
rclb
or
dec
enter
inc
lods
loope
fimull
loope
or
lcall
mov
cwtl
mov
arpl
scas
pop
shl
cmp
hlt
xor
inc
aam
aas
adc
das
xlat
jle
jmp
xchg
xor
mov
mov
push
or
shrb
call
xchg
cmpsb
shll
addr16
jae
rol
inc
mov
add
sbb
cs
insl
jecxz
xchg
rorl
insl
and
xchg
es
jl
addr16
scas
adc
xor
mov
leave
jbe
and
fdivrp
jnp
loope
pop
addr16
adc
or
insb
fs
in
adc
test
es
addr16
and
dec
test
scas
imul
mov
fnsave
push
ja
push
adc
sbb
jbe
xchg
add
das
roll
pop
jo
insb
jns
scas
faddl
aam
mov
push
mov
xlat
ficoms
sbb
pusha
push
in
pushf
mov
movsb
sub
aaa
pusha
test
lret
jmp
mov
cwtl
aaa
cmpsb
into
jge
xchg
mov
mov
imul
repnz
sbb
clc
stos
popa
jo
cmp
xchg
xor
out
sub
pop
in
jno
push
in
inc
add
jle
fldenv
pop
xchg
mov
mov
es
aaa
fdiv
nop
call
into
pop
fisttps
or
adc
mov
aad
mov
and
test
add
rolb
inc
push
mov
insl
pop
dec
fisubl
sub
xchg
rolb
inc
mov
imulb
shl
shrl
mov
in
jl
ret
or
in
mov
addb
pop
or
mov
cld
jmp
inc
pusha
cmp
sub
mov
pop
rolb
xlat
test
sti
sub
push
fbstp
shrl
push
stos
dec
xchg
outsb
stos
inc
lahf
jmp
addr16
jbe
sbb
dec
gs
jecxz
cmc
lds
roll
push
je
out
nop
sub
sub
aam
sar
adc
popf
push
je
adcb
and
push
and
mov
fbld
popl
bnd
sahf
cmpsl
pop
mov
mov
cli
iret
std
sbb
dec
sbb
mulb
inc
lret
loopne
es
pop
js
cli
rclb
test
lock
mov
sub
test
decl
mov
lret
jns
mov
pop
inc
xchg
sub
push
add
andl
out
add
inc
push
push
sub
les
loop
adc
lcall
shll
shl
inc
pop
loop
out
adc
fwait
pushw
xor
lods
push
jne
aad
shlb
lock
inc
xor
jp
call
jl
dec
es
outsl
inc
icebp
cmp
jg
jge
jecxz
int3
push
imul
mov
stc
adc
mov
sbb
fistps
push
xor
repz
in
js
xor
lock
sub
sub
pop
mov
xor
xchg
test
xor
subl
lea
push
cmpsl
mov
ror
das
lahf
pop
clc
push
cmp
xor
jo
xlat
mov
test
cmc
push
in
aam
mov
mov
ds
xchg
push
cli
push
sbb
mov
adc
cmp
bnd
mov
adc
ret
daa
cmp
je
popa
daa
lret
icebp
xor
jae
test
cmpsb
push
scas
sub
lds
mov
mov
stos
push
and
sub
xchg
mov
inc
out
rorb
insl
sbb
fwait
cmp
xchg
lods
loopne
cmpsl
xchg
jle
js
cltd
lds
add
xor
inc
test
call
repz
jae
frstor
inc
test
mov
in
popf
rclb
dec
sarb
jge
loopne
into
add
mov
aas
jne
sub
arpl
in
fstpt
cld
and
ds
jo
cmpsl
and
cmp
je
jg
imul
in
pushw
jmp
xchg
out
jle
mov
add
mov
inc
insl
cmpb
setl
cmpsb
scas
mov
stc
xor
repnz
mov
cwtl
pushf
stos
push
and
jl
jmp
dec
aad
xor
inc
xchg
xlat
adc
fistpl
hlt
adc
in
push
or
mov
jge
sbb
inc
insl
push
add
shl
and
inc
in
fwait
and
ja
inc
insb
jmp
lret
mov
pop
jp
xor
xchg
cmp
mov
adc
push
in
mov
xor
xchg
cmpsl
out
cmp
inc
push
mov
sbb
dec
sti
adc
xor
out
or
mov
and
inc
data16
in
bound
inc
fst
ror
notl
fnsave
test
or
push
inc
jecxz
scas
test
lods
mov
pushf
sub
outsb
xchg
jge
xor
mov
in
xchg
mov
inc
mov
ret
pusha
std
or
mov
cs
aam
adc
popa
adc
outsl
andl
pop
les
cmc
rcll
push
adc
and
test
push
sbb
enter
xlat
faddp
pop
aad
cmp
cmpsb
adc
inc
popa
les
push
inc
jb
fimull
dec
mov
into
lahf
test
jecxz
popa
sub
adc
jne
test
cmp
sbb
inc
xchg
cmp
in
pop
xor
imul
push
jae
mov
xor
call
mov
sub
nop
nop
aas
adc
dec
xor
jle
xchg
lock
dec
test
inc
js
ret
int3
ror
rcll
xchg
rcrb
and
stc
popa
aaa
insl
dec
ja
adc
mov
in
and
stos
hlt
push
jp
cmp
fadd
fildll
sbb
iret
les
cmp
test
or
pop
std
aas
push
push
insb
sbb
adc
dec
loope
xchg
arpl
mov
es
xchg
popf
gs
cmpsl
popa
imul
bound
cmp
mov
or
nop
and
xchg
jae
lods
and
pop
cmpsb
fidivl
pusha
fsubs
and
fs
xchg
xor
aad
int3
sbb
mov
adc
test
out
rorb
inc
dec
ja
inc
pop
repz
sub
cmpsb
loop
aaa
mov
xchg
or
inc
lret
inc
fdivs
out
out
shrb
or
in
jbe
mov
popa
mov
inc
pop
faddl
adc
push
and
cmp
pop
imul
xchg
sub
cmp
xchg
cmp
fsubr
fstpt
gs
std
mov
sti
repnz
dec
mov
fisttpl
jmp
xor
test
push
fisttps
int
sbb
jae
jbe
sub
outsb
sahf
cmp
cmp
pop
flds
pop
shr
daa
stos
sbb
cmp
jb
xchg
fnstsw
sub
pop
cmp
das
fadd
bswap
push
and
push
adc
fcomps
mov
inc
mov
push
pusha
xchg
lods
shll
xchg
add
sub
sub
imul
mov
fcompl
mov
mov
enter
or
xor
xor
xor
dec
stos
add
push
sbb
jmp
mov
cmp
push
cmp
jnp
mov
ret
test
out
jb
out
loop
push
xchg
xor
popf
sahf
sub
mov
outsl
and
push
nop
pushf
sbb
xchg
inc
or
mov
shlb
cwtl
cmp
js
lods
imul
cmp
icebp
js
sbb
or
pop
sbb
mov
mov
cltd
icebp
xor
test
fnstenv
jo
pop
cmp
mov
push
iret
lret
loope
das
mov
jbe
push
mov
cmpb
lock
dec
mov
mov
inc
cmp
sub
jecxz
jp
insb
daa
jnp
sub
sub
cli
cs
or
testl
xchg
xor
imul
mov
cmovp
adc
insl
add
mov
iret
insb
adc
in
stos
int
stc
mov
lret
stos
xchg
xchg
adc
sar
xchg
bound
lret
icebp
outsb
dec
mov
sub
lods
push
lahf
cltd
enter
push
leave
inc
xchg
es
xlat
inc
cmp
adc
mov
xchg
js
fisubs
icebp
fistpll
pop
push
inc
add
shll
jo
gs
cmpsl
pop
mov
out
adc
dec
jb
or
xor
add
aaa
xor
lock
lods
xchg
mov
outsb
fwait
pop
jecxz
insl
add
mov
outsl
decb
dec
or
clc
dec
mov
add
mulb
jnp
repnz
lods
pop
je
aas
cmp
mov
ds
fnstcw
popf
mov
movsl
sbb
ret
jno
jle
add
call
mov
outsl
test
cwtl
es
add
push
mov
adc
mov
sub
push
daa
les
lods
mov
cmp
xor
jge
add
pop
mov
push
enter
sub
lret
in
mov
mov
sub
stos
cmp
jne
push
sbb
scas
xchg
imul
dec
cmpsb
rcrb
ss
pop
loop
pop
inc
mov
in
push
test
pop
ret
mov
sbb
lahf
xlat
mov
sbb
or
adc
inc
sub
daa
ficomps
outsl
fsts
test
enter
popf
fidivrs
xor
aas
mov
sbb
inc
mov
xchg
lcall
add
loop
mov
push
daa
cmpl
shlb
push
imul
incb
cwtl
cwtl
dec
mov
js
sbb
sbb
push
lock
lret
and
dec
test
icebp
sarl
push
cmpb
dec
adc
mov
enter
call
ret
test
rol
addr16
and
test
rcl
lcall
std
cmpb
adc
jo
mov
in
repnz
testl
jnp
outsl
push
and
aad
push
jp
iret
shl
lock
cli
push
fcomi
out
jg
outsb
fidivs
or
push
sahf
sbb
inc
inc
jmp
jecxz
jno
shll
movsb
push
inc
pop
scas
push
pop
pop
xlat
out
push
out
insl
mov
push
cmp
ljmp
jne
inc
aad
data16
imulb
out
jbe
idivb
in
cmp
ret
icebp
pushf
mov
ficomps
test
mov
adc
cwtl
mov
pushf
jbe
adc
test
jle
mov
inc
jg
ds
pop
fldenv
mov
sbb
mov
pop
or
adc
add
scas
mov
cmp
sbb
mov
aam
pusha
push
in
aas
jno
mov
incl
adc
cmp
sti
repnz
lods
xchg
rolb
repz
and
rorb
push
jmp
gs
pushl
jl
sbb
jp
sbb
imul
dec
pop
or
cmc
lods
out
mov
mov
lahf
xchg
and
xor
ss
into
popf
dec
in
pop
aaa
add
dec
rorl
nop
sbbb
popa
add
mov
add
flds
push
fisubrl
or
mov
fisttps
popf
adc
int
or
dec
outsb
aaa
adcl
mov
stc
xor
loopne
cwtl
out
xor
in
adc
xor
push
dec
mov
lock
push
mov
leave
adc
shll
and
push
sub
pop
jle
leave
or
lcall
mov
or
push
pop
push
out
out
pusha
push
sub
out
and
xor
mov
xor
mov
dec
mov
test
shrb
cmp
or
dec
ret
mov
sbb
fdivrp
fisubl
mov
lret
xor
jne
jno
fcomip
pop
scas
sbb
in
sbb
push
ss
pop
repnz
mov
push
decl
sbb
xor
imul
and
outsb
fcmovb
xor
xor
mov
es
jae
jne
mov
aas
jmp
outsl
dec
stos
stos
scas
inc
mov
aam
jge
and
ficoms
mov
lods
mov
mov
push
push
and
es
jns
daa
jno
dec
mov
add
inc
fs
pop
pop
pop
and
sub
ficoml
div
neg
jnp
out
sub
jg
xor
pop
xchg
cmp
scas
jecxz
hlt
adc
loope
lret
in
push
pop
dec
aas
shrb
and
out
dec
ss
ljmp
sub
dec
and
pop
jmp
or
cltd
cltd
jno
pusha
add
enter
mov
xchg
add
dec
fwait
jb
repnz
pop
dec
leave
out
fbld
test
xchg
mov
mov
or
adc
popf
xchg
cmp
mov
ret
aad
cld
xchg
xchg
mov
mov
shlb
mov
pop
rcrl
insb
pop
cmp
and
cmc
mov
out
imul
adc
sbbb
jle
push
adc
fmull
pop
sub
inc
push
adc
int
bound
jge
repz
aam
fucomp
sub
repz
xchg
cmpsb
jb
imul
ss
cmc
pop
mov
mov
repz
rdtsc
xor
mov
inc
ja
add
sbbb
fcmovnu
adc
scas
pop
cmpb
shlb
punpcklwd
pop
mov
scas
and
adc
imul
inc
je
test
neg
cmp
aaa
pop
inc
inc
add
push
dec
mov
jge
movsb
les
sub
outsb
sahf
jb
movsb
mov
test
in
sub
mov
mul
cmp
mov
or
fstpt
mov
xchg
dec
jecxz
push
enter
pushf
inc
les
enter
out
pop
cmp
ret
jns
jmp
mov
push
pop
push
add
ljmp
cmc
sti
fcoml
cmp
cmpsb
and
xchg
bound
es
pop
jns
test
jae
xchg
jg
jge
adc
ljmp
xchg
pop
mov
test
outsb
std
pop
push
mov
das
test
iret
punpckldq
hlt
sti
rcrl
dec
push
mov
cmp
sbb
fisubl
pushf
insl
mov
push
dec
imul
decl
push
mov
push
js
mov
dec
les
sbb
mov
outsb
or
data16
mov
cmovns
sbb
dec
dec
inc
cltd
lock
andb
mov
lock
cmpsb
mov
xchg
inc
inc
cmpsl
popa
in
outsl
mov
in
xchg
insb
or
out
lahf
mov
add
enter
push
dec
sbbl
test
leave
fbld
mov
pop
lcall
in
pop
adcl
add
stc
and
sahf
je
xchg
sahf
sbb
mov
pop
xlat
mov
jno
xchg
push
aaa
stc
nop
imul
jnp
popa
test
dec
adc
shlb
inc
pop
pop
inc
mov
push
loope
into
cmp
jae
cmp
sti
dec
push
lahf
adc
daa
or
out
cmp
dec
push
jp
adc
shlb
and
cld
or
inc
fdivs
xor
inc
xor
clc
xchg
fsubl
jbe
addr16
cmp
pop
xor
push
das
fdivrs
mov
pushf
mov
sub
out
ljmp
test
and
mov
enter
sahf
bound
jb
pop
lds
das
inc
cwtl
ret
test
repz
out
test
dec
sbb
std
jb
xor
adc
bound
mov
or
insb
in
add
mov
and
lret
or
cmp
popa
mov
adc
jmp
mov
dec
es
xor
inc
aaa
xor
xchg
push
pushf
enter
add
inc
cmp
divl
call
push
addb
push
in
cmpsl
fnsave
mov
xor
xchg
sbb
stos
push
jne
fcmovu
cli
in
add
and
int3
sub
sbb
push
test
mov
dec
or
test
mov
xchg
test
test
cmp
fidivl
mov
daa
xchg
sbb
repz
xchg
inc
inc
fmull
fiaddl
push
pop
js
iretw
popa
pop
mov
clc
loopne
or
or
and
jp
or
mov
fdiv
mov
je
aaa
test
daa
pushf
das
mov
xchg
fstps
test
stos
dec
xchg
mov
cmp
iret
and
stos
sbb
call
call
imul
jnp
xor
aaa
in
es
cmp
push
jns
sbb
adc
mov
fsts
out
rcrb
inc
movsl
fcoml
push
sub
pop
es
out
sbb
outsb
dec
test
aad
int3
push
mov
movsl
ret
or
arpl
test
shrl
add
dec
movsb
hlt
push
out
fiadds
xchg
or
imul
imul
int
push
push
xchg
adc
mov
sbb
mov
dec
test
dec
sub
clc
and
div
pop
fs
jl
mov
push
jg
sbb
outsl
and
mov
cmovg
sub
pop
push
je
fiadds
pop
mov
dec
push
jp
or
xchg
rep
and
into
jne
sbb
mov
dec
in
push
push
cmp
push
dec
pop
jmp
mov
cmc
bound
mov
frstor
add
imul
inc
and
enter
jo
mov
movsb
fwait
imull
mov
jno
fmuls
xor
and
lret
mov
stos
push
mov
xchg
outsb
mov
xchg
loope
mov
cwtl
push
jmp
icebp
dec
cmp
sbb
xchg
push
add
cmp
scas
cmp
repnz
ret
ja
jge
clc
cmp
gs
or
add
out
add
outsb
jns
dec
fimull
mov
jg
pushf
int
inc
adc
inc
bound
in
cmp
push
leave
loope
iret
rcr
mov
add
loope
pop
in
sub
cmp
dec
fisubrl
movsl
cs
cld
pop
mov
dec
bound
lret
add
adc
int
rcrb
xchg
mov
inc
movsl
mov
arpl
addr16
sti
add
ja
add
dec
lahf
dec
aam
xor
push
inc
push
test
call
cltd
fistpl
lock
aad
or
sub
fidivs
or
add
cmpsl
cmpsl
pop
or
dec
test
loopne
das
jnp
fiadds
xor
aam
icebp
cmp
cmp
pop
shll
imul
sub
repnz
and
add
jg
inc
pop
inc
sub
jp
sahf
pop
inc
dec
and
leave
cmp
push
mov
out
jge
add
mov
ficoml
push
push
lcall
inc
push
inc
lret
push
mov
xchg
jbe
xorb
cmpsb
outsb
ljmp
pop
adc
enter
ljmp
leave
push
add
inc
cwtl
or
pop
push
cs
sti
lcall
scas
shrl
xchg
cmp
cmp
stc
pop
jno
hlt
std
add
add
xchg
sub
jp
cmp
pop
rorb
pop
cwtl
les
js
xchg
out
push
pop
rorl
push
or
push
cmp
sbb
rorb
lds
adc
dec
cld
jne
test
jnp
adc
lret
js
or
push
lock
xor
or
aam
mov
fldl
push
int
xchg
repz
in
hlt
xor
adc
cltd
repnz
nop
or
in
push
or
mov
lock
push
scas
popa
or
sub
js
cmp
fdivrl
jnp
xchg
adc
sbb
mov
push
pop
cs
lret
lods
and
das
sbb
lea
loop
insb
pop
outsl
xor
insb
add
loope
arpl
xor
pop
add
fcoml
and
mov
pop
add
adc
dec
fbld
je
fwait
cld
cmp
inc
dec
aam
subl
pop
imul
sahf
xchg
pushf
jne
in
popa
mov
xor
loopne
cmp
mov
cltd
sub
insl
xor
call
out
in
add
sbbl
test
adc
jl
inc
sub
lcall
out
cmp
scas
sub
or
subl
cmc
add
mov
pushf
adc
sbb
mov
cli
fildl
push
xor
loope
mov
orb
jno
arpl
push
fists
sbb
mov
dec
outsb
add
pop
xchg
enter
mov
push
scas
ljmp
inc
into
popa
das
rolb
mov
enter
je
xlat
vcmpss
lret
outsb
and
cmp
and
mov
fs
or
cltd
mov
mov
mov
sub
push
and
imul
lds
cmp
jb
mov
mov
loopne
xor
nop
sti
jb
hlt
cmp
lahf
lea
cmp
roll
mov
push
inc
or
aam
lret
lock
out
or
lret
push
pushf
clc
sbb
and
xchg
inc
cmpsl
mov
ds
lcall
push
or
sbbb
cmp
add
xchg
aaa
popf
shrb
enter
pop
sbb
testb
addr16
shll
arpl
shll
adc
aad
ss
in
outsl
lret
das
sbb
jae
rorb
jne
xor
mov
mov
ficoms
mov
or
ret
js
jbe
lds
adc
ss
adc
loop
cli
lds
fwait
lods
ffree
xchg
in
loope
cs
sbb
cmp
xchg
mov
std
out
inc
popf
loopne
xchg
stos
fcompl
addl
testb
and
stc
daa
add
xchg
xlat
lret
and
iret
arpl
sahf
mov
std
les
inc
lea
sbb
fstpt
xor
pushf
cmpsb
dec
js
mov
cmc
xchg
int3
shlb
jne
and
aas
or
inc
jnp
out
mov
pop
outsb
clc
mov
je
or
dec
dec
adc
imul
lds
sbb
xchg
pop
inc
push
sti
out
adc
int
push
jno
fildl
inc
ljmp
wbinvd
pop
add
add
mov
and
mov
add
aaa
and
imul
sbb
xchg
jge
jmp
out
test
out
or
cli
mov
das
pop
mov
adc
stos
dec
repz
insl
xchg
lods
outsb
mov
dec
sti
sbb
in
add
xor
cs
outsl
dec
cmp
mov
daa
lea
sbb
cmp
push
xor
jmp
push
add
test
outsb
or
dec
arpl
loop
jb
mov
icebp
nop
adc
out
mov
push
mov
fwait
stos
inc
aas
lret
insl
and
fcom
es
jge
cmp
enter
mov
movsb
fimull
cmc
movsb
cld
xlat
outsb
jg
xchg
sbb
fmuls
pop
iret
in
push
call
fstps
dec
jecxz
adc
xor
jle
bound
jne
jmp
jmp
imul
call
sub
cs
xchg
mov
sbb
and
bound
jns
iret
and
and
sbb
loop
dec
pushf
orb
shlb
leave
imul
fstpt
mov
nop
sbb
outsl
fcomp
sbbl
mov
arpl
sub
add
and
fmuls
inc
inc
and
adc
loop
push
fsubrl
xchg
or
sbb
add
aaa
fmuls
push
js
xchg
popa
adc
mov
adc
push
xor
or
pop
fdivrs
shlb
push
jns
xchg
in
push
xchg
cmc
cmp
adc
cmp
cmp
push
jp
cmpsb
test
adc
lock
lods
cmp
jge
add
jno
movsl
call
bound
dec
lcall
jmp
push
std
loopne
xchg
push
jns
movsb
pop
pushf
sub
lods
cmp
out
cmp
in
adc
sub
daa
or
mov
in
imul
inc
jne
or
inc
mov
test
int3
repz
hlt
push
dec
pop
dec
daa
inc
lret
jmp
lea
loopne
fsubp
sbb
outsb
jno
pop
test
sub
add
add
jb
and
mov
test
addr16
out
push
and
mov
int
fldt
popf
mov
pop
push
xor
xchg
jo
mov
ja
clc
gs
sbb
mov
dec
gs
and
mov
dec
insb
mov
orb
out
outsb
mov
pop
mov
cmpsl
mov
fists
adc
hlt
dec
lea
add
sub
jecxz
sbb
jae
push
add
inc
sahf
pop
inc
stc
test
and
add
adc
adc
xchg
les
jbe
inc
xchg
adc
aad
sbb
in
lret
rcrl
cmpsl
negl
sbb
or
test
out
rcl
sbb
push
jae
and
int
push
icebp
ret
in
pop
push
push
outsl
stos
jmp
fdivrs
jns
pushw
std
adc
outsb
enter
xor
jne
or
mov
std
cmp
stc
sub
nop
pop
ja
js
dec
mov
push
jle
mov
cli
cld
inc
shll
cmp
pop
dec
jne
pusha
sbb
dec
pop
rcrb
or
outsl
jnp
and
push
rcrb
push
push
jnp
enter
and
repnz
pop
pop
pop
pop
add
jmp
jne
out
xlat
dec
movhps
jecxz
gs
mov
ljmp
mov
xor
mov
mov
add
mov
insl
in
jmp
sub
enter
add
scas
cmp
adc
cmc
fwait
arpl
hlt
mov
pop
dec
sbb
je
or
pop
push
enter
les
das
dec
rcpps
test
or
jmp
mov
roll
dec
gs
aaa
std
les
inc
or
dec
subb
dec
jle
mov
fnsave
add
shlb
test
push
cld
xor
and
adc
mov
aam
and
mov
hlt
inc
int
add
pop
inc
hlt
inc
xchg
js
cltd
std
daa
xor
bound
xchg
mov
add
jbe
out
add
cmp
jl
inc
insl
mov
frstpm(287
adcb
push
pop
jns
and
jecxz
insb
subb
inc
outsl
xchg
dec
bound
mov
int3
stc
pusha
lret
xor
or
mov
arpl
adc
inc
xchg
sti
testl
frstor
aaa
jne
or
int
add
add
ret
xor
js
jnp
inc
and
sti
fdivs
mov
jge,pt
mov
mov
rclb
call
pop
or
sbb
cmp
mov
and
out
fisubrl
push
mov
scas
jle
push
xor
inc
jmp
test
aaa
pop
in
nop
and
xchg
cld
sahf
push
add
push
jo
or
nop
add
out
lret
mov
lahf
call
mov
sub
or
mov
mov
inc
mov
cmp
std
mov
sub
jmp
movsb
xchg
pop
jg
mov
push
test
rcll
mov
add
call
dec
xchg
mov
lret
xor
jne
inc
mov
js
xchg
dec
nop
mov
mov
xor
insb
inc
adc
dec
pop
rcrb
inc
stos
mov
ds
and
mov
inc
fidivrs
sbb
xchg
scas
push
sti
pop
shrb
mov
cmp
push
std
adc
dec
adc
jg
ljmp
lods
and
fnstsw
mov
pushf
push
push
push
popa
fildll
xchg
mov
push
sub
xchg
jno
dec
sbb
cmp
push
xchg
test
xor
xor
cmp
rclb
xchg
dec
cltd
gs
mov
xor
sbb
cmp
jno
rol
add
popf
jnp
lods
je
sbb
cmc
mov
mov
xor
cld
cmpsl
in
je
imull
fstpl
mov
call
mov
addr16
icebp
addr16
daa
xchg
movsl
rorl
jge
js
ret
push
insb
popa
fnsave
cld
outsl
sub
pop
leave
inc
dec
and
ds
mov
fldl
sub
rcrl
push
cmp
subb
xor
inc
xchg
movsb
jne
in
sbb
mov
pop
jl
mov
cmpsl
jmp
lcall
add
dec
stos
fs
and
push
cmp
cltd
sub
xchg
and
dec
rcr
es
cmpl
scas
in
loope
clc
ret
adc
add
pushf
leave
insb
add
pop
push
faddp
add
inc
outsl
stos
pop
imul
cmc
inc
mov
jae
push
orb
hlt
inc
jno
mov
incl
fmuls
mov
mov
imul
adc
psubsb
mov
and
mov
lcall
fs
int
xchg
or
sub
rcrl
fsub
cmp
divb
mov
mov
and
cli
dec
das
add
jmp
inc
mov
call
ds
out
push
fwait
ss
ss
stos
add
shll
xchg
mov
leave
pop
stc
fidivrl
pop
in
mov
mov
mov
push
lods
dec
inc
add
inc
dec
outsl
dec
xchg
pop
mov
mov
sahf
es
push
decb
mov
inc
test
les
dec
enter
mov
faddl
mov
add
xor
push
lret
jp
sbb
cmpsb
push
pushf
mov
mov
out
nop
mov
in
test
push
andl
pop
imul
add
jo
push
rcl
icebp
in
lret
stos
int
pop
dec
adc
mov
int
push
lea
sub
dec
pop
lret
insb
insb
push
and
imul
mov
xchg
dec
cmp
mov
mov
dec
jle
cmp
or
cmp
xchg
sub
xchg
mov
in
push
imul
mov
scas
xor
jnp
pushl
addb
and
jae
xchg
add
and
or
jmp
sub
pop
in
bound
xchg
test
add
add
dec
add
outsl
jne
mov
fsubrl
int3
adc
adc
mov
mov
xchg
or
jno
ret
ror
testl
mov
pop
loopne
aaa
jno
imul
and
xor
ret
push
out
int
stc
mov
jnp
or
lock
adc
pop
test
hlt
pop
mov
shrb
es
mov
insb
dec
insb
jnp
lret
and
mov
nop
push
mov
out
rorb
jnp
orl
int3
xor
inc
js
repz
jb
dec
sub
in
movsb
and
out
nop
repnz
mov
fiadds
loop
sub
jecxz
add
fadds
xchg
test
inc
enter
xchg
addr16
les
aas
lods
adc
sub
jg
icebp
faddl
inc
jg
xor
shll
fwait
add
cwtl
adc
xor
leave
aas
mov
imul
iret
inc
pop
dec
mov
or
imul
inc
fsubr
inc
mov
xchg
xchg
jge
fwait
mov
jl
imul
jno
sub
mov
or
dec
vpsraw
push
add
push
xchg
repnz
mov
jg
flds
add
sbb
push
popa
inc
inc
or
adc
subl
test
ret
xor
les
adc
mov
push
and
repnz
push
inc
pop
xchg
les
dec
in
dec
insl
xchg
int3
or
ljmp
fcmovnu
sbb
popf
lods
xor
push
icebp
sub
aad
outsl
sahf
cmp
sub
inc
stc
sub
mov
aad
adc
dec
mov
sbb
ficoms
xor
fadds
popf
mov
and
cmc
in
cli
xor
shrb
and
and
rcrl
xlat
into
dec
mov
or
xor
and
sub
push
incb
jb
pop
xchg
push
adc
jns
mov
insl
test
faddl
aam
mov
rorb
gs
or
stc
jne
sub
fsubrs
repnz
test
vpmacsdd
jmp
popf
add
pop
xchg
mov
jmp
push
add
mov
mov
cwtl
roll
jbe
lea
jl
jnp
mov
and
xchg
fmul
cmpsb
popf
aaa
sub
push
dec
out
das
or
add
dec
mov
cmpl
add
addr16
fbld
gs
mov
fcmovb
push
stos
push
adc
shll
sbb
fnstsw
push
push
out
daa
jmp
adc
fs
push
lret
inc
mov
cmp
jne
out
aas
fisttpl
lock
gs
jns
ljmp
jg
dec
mov
add
loopne
fdivr
leave
or
hlt
in
add
sbb
sub
mov
adc
sbb
cld
xchg
xchg
jne
mov
dec
imul
cmpl
int
mov
rcll
xchg
mov
mov
cmp
jle
inc
or
loopne
jnp
outsl
leave
mov
mov
pop
sbb
in
xor
pop
call
inc
jo
pop
fimuls
sbb
out
mov
pop
imul
cmpsl
push
sub
mov
cli
adc
and
popa
jp
fsts
sub
repnz
sub
jae
adc
mov
mov
repz
ror
adc
sbb
inc
mov
dec
cld
scas
outsl
test
and
mov
dec
ljmp
lock
mov
sbbl
jnp
sbb
into
in
jge
push
dec
push
aaa
lea
jbe
mov
sahf
repz
dec
jl
jecxz
inc
lea
mov
mov
sti
pusha
hlt
andb
fidivrl
sbb
leave
das
cmp
fwait
push
aas
aam
lock
icebp
lahf
test
xchg
cmc
lea
pop
xor
popa
push
push
popa
arpl
inc
dec
cmpsl
mov
fiaddl
add
out
out
cmpsb
cmp
pop
daa
dec
out
call
sbb
xchg
mov
aaa
popa
or
push
jns
outsb
fcoml
fiadds
and
dec
cmpsb
das
mov
jbe
and
lock
pop
idivl
lcall
pause
mov
mov
int
jle
dec
adc
nop
jb
pop
das
sub
stc
out
sub
add
adc
in
cmpsb
dec
fwait
in
insb
in
in
jmp
je
out
movsl
inc
inc
in
xor
arpl
inc
cli
nop
sub
outsb
lahf
dec
cmp
lods
adc
ret
clc
mov
sbb
jae
inc
aas
clc
add
dec
xorl
cmc
imul
outsl
out
cmp
cmp
stc
cltd
mov
adc
push
pusha
icebp
lret
lret
push
pop
adc
ljmp
add
popf
jne
mov
mov
jbe
and
nop
ret
pop
loopne
push
xchg
or
aaa
sub
imul
xor
sbb
push
scas
lret
std
stos
push
xchg
shrl
mov
jns
or
mov
popf
jl,pt
mov
mov
daa
dec
xor
insb
clc
jbe
jae
js
aam
bound
dec
jns
add
or
jle
pop
inc
adc
popf
mov
push
gs
xor
inc
sub
cmpsb
pop
push
cmpl
add
mov
jae
sub
inc
mov
xchg
cmc
push
popa
in
cltd
push
inc
push
push
pop
pop
and
xchg
div
mov
test
mov
negl
cmpsl
push
test
sbb
xor
rolb
cmp
shlb
add
sub
sti
sbb
push
xchg
push
xchg
mov
loop
fcmovb
std
repz
or
in
fcompl
aam
in
movsb
rcll
es
and
sub
add
sti
scas
push
rorb
add
mov
mov
dec
jns
push
mov
push
cli
push
dec
daa
xchg
push
cwtl
aam
xchg
stos
mov
sub
mov
pop
out
cmp
pop
ljmp
pushf
subb
adc
jnp
lcall
aam
add
mov
dec
or
jno
je
test
iret
scas
mov
lcall
fisttpl
pop
jno
paddw
adc
pop
and
adc
sbb
jae
pop
std
ja
mov
lret
pop
lock
loope
jnp
test
into
lahf
loopne
lods
fadds
inc
and
cltd
push
push
inc
and
enter
xchg
aas
and
ss
call
add
pop
mov
inc
clc
pop
pop
mov
pop
or
fnsave
mov
adc
xchg
icebp
movsl
call
dec
jae
adc
mov
outsl
gs
adc
test
jg
stos
jp
sbb
jle
jb
fcmovb
cltd
dec
cmp
fs
sbb
bound
in
paddw
sub
into
faddp
ds
mov
add
xor
cli
jl
lea
lahf
jns
aas
adc
or
cmpsl
sub
je
js
daa
mov
push
mov
inc
push
cs
dec
pop
ret
imul
iret
push
cmpsb
or
sbb
push
mov
out
and
sbb
das
pushf
push
push
xchg
cmp
jo
add
lret
sub
int
cmpsb
out
cmp
inc
cmp
fsubrl
sub
lock
mov
xchg
jmp
aas
xlat
or
fstpt
cmp
xchg
pop
sbb
or
clc
sub
bound
shll
jle
out
cmpb
jbe
imul
divb
sbb
jnp
leave
jno
stos
insl
push
xchg
xchg
popa
pop
cmovnp
adc
push
call
insl
dec
or
lret
fwait
icebp
and
sbb
in
shll
push
sti
out
imul
cmc
mov
cmc
push
addr16
aas
loope
push
scas
es
sbbl
sub
jecxz
push
fildl
out
add
sahf
cwtl
push
rcll
test
mov
jle
int
fisubs
ss
stc
jo
repz
xor
mov
mov
pop
enter
inc
data16
cli
mov
out
into
jg
sti
sub
pop
jecxz
push
int
jno
lods
outsb
mov
leave
and
inc
data16
ljmp
fdiv
pop
sub
ret
shl
inc
dec
push
insl
aas
ret
mulb
push
outsl
outsb
push
pop
mov
xor
inc
push
shll
xchg
pusha
or
dec
pop
and
jae
or
cltd
xchg
jbe
in
fnstenv
dec
dec
mov
out
adc
add
aas
jo
or
js
movsl
sarl
push
and
xor
push
adc
enter
bound
sbb
fldl
xor
jg
push
push
jle
jo
cmpsb
loop
jp
and
pop
shl
xchg
mov
fnstcw
mov
sbb
cmpsb
aad
push
insl
xor
test
pop
mov
adc
pop
ret
cmpsl
xchg
stc
in
mov
dec
out
sbb
or
or
ja
sbb
icebp
push
scas
inc
test
mov
xor
int
xchg
xorl
sub
mov
int3
andl
and
pop
ret
mov
mov
loopne
push
pusha
or
adc
mov
jle
test
inc
mov
loope
push
jmp
mov
scas
xlat
cmpsb
es
or
inc
fsubl
sahf
pop
hlt
mov
roll
push
mov
sbb
xchg
adc
nop
sbb
xor
push
cmp
mov
sbb
sub
add
stos
mov
mov
mov
pop
in
push
in
in
pushf
inc
cmp
rcl
xor
clc
cwtl
sarb
lods
push
in
xchg
sbb
xchg
pop
lds
punpckhwd
das
fcoml
test
pop
dec
gs
rep
add
mov
mov
cmc
mov
les
xchg
pop
sub
cmp
int
mov
cmp
xor
call
sub
das
imul
fstps
sub
mov
add
cmp
mov
ja
imul
jle
lock
push
mov
mov
shrb
sahf
push
xlat
jb
fisttpl
adc
mov
out
not
std
inc
subl
pop
jne
nop
sub
sub
cmp
mov
jae
push
or
std
mov
lds
dec
subb
sti
push
dec
ret
cld
es
mov
mov
push
jp
out
iret
jnp
jne
loopne
jl
int
adc
stc
std
mov
mov
pop
xchg
push
pop
xor
xchg
jns
into
xchg
xchg
and
pop
pop
bound
and
pop
test
jge
test
js
fwait
lret
rolb
sahf
xchg
mov
int3
pop
decl
outsb
mov
xchg
cld
inc
outsb
or
cmp
loopne
cld
cmp
loop
jnp
popa
jge
xchg
shll
mov
cmp
push
add
mov
outsb
pop
clc
jmp
jno
jns
out
test
sub
fisubl
dec
shll
dec
jmp
xchg
add
push
mov
dec
es
lahf
pop
js
stc
push
pop
js
mov
es
das
js
stos
pop
int3
jo
shlb
out
inc
stc
and
popa
jne
nop
rclb
outsl
mov
dec
popf
int3
ss
push
dec
repz
sbb
insl
mov
iret
xchg
ljmp
or
out
data16
xchg
aam
rcl
mov
mov
cmp
ljmp
and
and
push
movsl
dec
push
sbb
movsb
and
mov
and
leave
dec
or
dec
xor
ret
test
jmp
xor
fidivrl
jae
and
test
ljmp
fstl
cs
imul
popw
test
lcall
dec
sbb
and
fists
dec
mov
dec
mov
and
mov
cmp
sub
imulb
mov
cmc
jo
pop
push
aam
fisubs
xor
inc
jb
sub
pop
and
js
aas
push
xchg
icebp
cli
sahf
popf
je
and
movsb
sti
xchg
cwtl
bound
mov
xor
shlb
int
adc
fbstp
and
jl
inc
movsl
push
xchg
pop
fstpl
or
sbb
into
mov
jb
test
outsb
jns
mov
sbb
and
fldt
cmc
es
jo
jo
mov
out
mov
int3
sub
fists
jb
pop
lret
hlt
sbb
mov
mov
push
outsb
cs
mov
sub
lcall
push
outsl
xchg
or
dec
repz
cli
add
jle
sbb
cmpsl
hlt
sub
jbe
sti
or
adc
shrb
arpl
sub
mov
repnz
dec
and
sahf
lahf
call
push
lods
and
outsl
mov
jnp
scas
das
xor
enter
mov
mov
inc
xor
lret
aad
pop
fidivl
xor
sbb
jnp
imulb
xchg
lods
or
pop
std
pop
sub
sbb
xor
cs
push
dec
imul
bound
outsl
pushf
push
lock
popf
xor
push
movsb
mov
push
jmp
mov
adc
sub
insl
cmp
cmp
inc
xchg
cmpsl
mov
lret
inc
mov
cmpsb
pusha
lret
das
push
daa
sbb
cmp
add
and
jnp
inc
std
pushf
sbb
lods
enter
push
pop
pop
repnz
mov
cld
shrl
mov
pcmpgtw
shlb
jns
cltd
push
into
dec
fidivrl
mov
arpl
out
sti
shr
insb
icebp
mov
adc
or
cld
xchg
pop
xchg
mov
or
push
mov
movsb
xor
xchg
ds
adc
mov
loopne
xchg
neg
arpl
adc
cmp
adc
das
dec
push
test
popf
cltd
sub
pop
pop
jne
pop
pop
or
xchg
int3
js
aad
or
movsb
icebp
imul
mov
push
scas
out
cmc
or
leave
lods
fwait
dec
gs
cmp
pushf
jne
mov
sbb
add
jnp
fs
insb
dec
inc
sbb
sub
add
push
lods
cmp
cmc
hlt
aaa
outsl
repz
shrb
sbb
lahf
sbb
pushf
sbb
fwait
jns
adc
fwait
inc
mov
xor
mov
mov
ret
fcmovb
fistpll
sbb
out
xor
fdivl
test
pop
xchg
sbb
leave
jl
and
test
mov
bound
inc
into
cmp
ljmp
dec
or
xor
inc
fs
inc
in
mov
mov
fcmovnbe
jnp
out
clc
aas
lret
adc
mov
mov
jge
imul
push
popa
js
loop
push
gs
rcrl
inc
xchg
sub
or
xchg
adc
stos
xchg
lahf
lret
loopne
ljmp
pop
dec
pop
inc
std
xchg
out
mov
xor
jg
divb
dec
test
sar
pop
icebp
je
lods
dec
call
outsb
or
mov
loop
mov
xchg
xorl
jmp
or
jbe
loope,pt
fcmove
stc
or
data16
push
rorl
and
sub
xchg
in
or
inc
das
jl,pt
hlt
pop
fsub
mov
and
mov
jno
mov
jg
call
imul
icebp
xor
sub
jg
test
mov
sahf
ret
out
jb
int
cltd
add
cld
sbb
sbb
lcall
sbb
jp
cmp
xchg
mov
inc
loopne
dec
daa
out
mov
or
in
pusha
xchg
push
adc
mov
and
mov
xor
cmp
mov
jl
push
sub
sbb
daa
jl
lods
sub
cmp
mov
out
push
repnz
push
xor
sti
push
in
lods
outsb
dec
jge
jg
cmp
push
or
pop
jecxz
fwait
inc
bound
mov
adc
mov
cld
add
sub
push
mov
fisubrs
shlb
jecxz
call
sub
out
aam
sbb
fidivrl
inc
jmp
mov
xor
cwtl
outsb
sub
xchg
cmpb
xrelease
loopew
fidivs
or
insb
xchg
rol
inc
adc
fisttpll
test
pop
mov
test
clc
rorb
pushf
xor
jne
nop
lods
fiaddl
test
push
stos
or
sbb
sar
lock
ja
mov
push
stos
jne
sbb
inc
xchg
pop
add
cs
mov
inc
outsl
push
cmp
jae
mov
addl
or
lret
cltd
cmp
rcll
push
xchg
adc
aaa
outsb
in
daa
aam
mov
ja
jp
mov
std
or
test
or
add
sbb
ror
loop
cld
jne
ja
mov
inc
lret
inc
sub
movb
inc
or
sbb
rorl
out
das
cwtl
xorps
imul
adc
cli
fdivrs
in
ret
sti
push
rcrb
adc
cwtl
inc
fcmovnb
push
add
sub
mov
les
icebp
pop
xor
enter
jb
sahf
mov
jne
jo
sub
sbb
fmuls
enter
mov
movsl
fdivrl
fidivl
test
xchg
mov
cs
and
ficomps
sti
inc
imulb
mov
inc
and
fs
pop
jmp
pushf
lahf
mov
dec
mov
fistpll
ud1
movsb
pop
cmpsb
dec
mov
sbb
push
inc
adc
add
jecxz
push
adc
jp,pt
lock
xor
nop
enter
dec
pop
icebp
loope
xor
xchg
bound
and
cmp
push
or
mov
cmp
xlat
gs
pop
out
push
out
jmp
inc
jns
mov
cld
sbb
xchg
pop
into
jmp
push
xor
nop
imul
cmpsb
adc
out
popa
jle
insl
push
pop
sbbb
loopne
inc
mov
push
lods
or
movsb
adc
cmpsl
push
js
setae
stos
mov
shll
or
popl
in
xor
sub
mov
sub
jmp
mov
in
xchg
or
stos
inc
mov
std
lods
lods
retw
adc
xlat
jg
insb
repnz
dec
cmpsb
ljmp
jle
push
out
sbb
mov
xchg
xchg
movsb
mov
adc
iret
and
xor
scas
addr16
lods
and
ljmp
mov
xor
mov
pop
sub
shlb
insb
lock
or
stos
fmull
inc
or
cmc
rcpps
test
jno
out
cmp
pop
js
imul
xor
pop
cwtl
ds
jmp
loopne
or
fisubl
inc
insb
adc
cmpsl
pushf
lahf
inc
test
les
pushf
push
jns
mov
aad
push
mov
jns
mov
test
lds
inc
adc
test
insl
fimull
test
mov
xchg
movsl
mov
cwtl
mov
push
sahf
jae
push
cld
sbb
popf
jbe
subb
rcll
int3
mov
dec
lods
lods
faddl
inc
jle
into
in
dec
in
xchg
sbb
xchg
pop
fs
subb
dec
mov
push
sub
pusha
mov
jl
pop
and
repnz
push
mov
lret
inc
cmp
inc
js
xchg
test
mov
cld
cmpsl
pop
lods
jnp
outsl
fisttpll
xor
cmp
fstpt
insl
pop
packssdw
sub
mov
pop
cmp
mov
daa
jns
add
xchg
jge
js
int3
pop
cwtl
inc
push
in
pop
dec
icebp
repnz
xchg
or
ja
cmpsb
cltd
inc
stos
mov
les
add
out
push
jbe
sbb
test
push
adcb
pop
xchg
pop
sbb
sub
es
sti
lods
lock
cmp
cs
or
push
jl
push
adc
sbb
and
out
xor
or
cmp
outsl
or
jp
leave
call
push
mov
insb
movsb
jo
push
xchg
repnz
jg
aad
enter
aas
mov
movsl
test
out
std
testl
sub
sti
xchg
inc
sbb
aad
push
adc
popa
cmp
xor
sbb
pop
insl
or
and
xchg
pop
ds
sub
fdivs
cmp
jo
std
adc
movb
out
stc
in
insb
jb
sti
scas
and
cmp
or
pop
in
sbb
imul
out
aaa
scas
jae
icebp
testb
shlb
cmp
mov
icebp
popa
mov
outsb
push
pop
lret
fwait
lds
push
or
pop
sarl
pop
call
inc
or
push
cltd
or
mov
adc
jns
and
push
std
outsl
mov
movsb
unpcklps
push
inc
test
dec
cmp
test
packssdw
arpl
jmp
fcoml
mov
in
shlb
js
cmp
jg
loopne
mov
outsl
pop
adc
xchg
icebp
sbb
xor
fldt
lea
lahf
inc
rorb
lock
push
or
mov
dec
adc
xor
lahf
or
mov
sbb
call
inc
jnp
add
in
shlb
xor
jge
sub
sbb
mov
repnz
fists
sbb
cmp
adc
data16
ljmp
icebp
lds
and
punpckhdq
sub
int
xchg
cmp
pop
xchg
fucomip
popa
sbb
push
jo
add
jo
xor
fisubrs
jnp
shll
inc
pop
call
js
mov
lahf
push
outsb
dec
or
std
in
subb
ret
out
cmc
adc
clc
leave
rorb
inc
je
jo
xchg
gs
test
add
xchg
cltd
sbb
jle
int
imul
sbb
sub
jmp
xchg
out
lds
cwtl
cmp
jo
fcmovb
sub
jno
cmp
hlt
push
pop
cmp
adc
mov
mov
push
xchg
xchg
xchg
dec
add
xor
jp
aad
dec
jp
pop
adc
out
mov
adc
jl
cwtl
push
loopne
imul
inc
mov
or
pop
divb
dec
or
sahf
ljmp
xchg
xor
cmpl
cmp
or
xchg
test
leave
mov
sbb
push
jae
loope
bound
icebp
mov
jno
or
push
lea
pop
or
sub
cmp
sbb
mov
es
sahf
mov
shr
mov
cmpsl
lds
xchg
outsb
and
push
stos
sbb
sar
pop
push
sub
jl
out
lret
sub
jb
sub
inc
sbb
cmpsl
sbb
or
jne
mov
movsb
sbb
nop
mov
pop
xor
aam
lahf
sub
and
fidivs
adc
rcll
fisubl
jle
jns
cwtl
test
shll
inc
mov
ret
int3
mov
mov
sbb
insb
jne
cmc
repz
mov
lret
rcll
jmp
xchg
arpl
xor
sti
lret
sub
xor
add
mov
gs
stos
jns
negb
dec
inc
push
hlt
jg
mov
ja
jbe
fsubs
mov
daa
fnsave
push
pop
adc
mov
xor
das
into
enter
out
cmpsb
mov
lret
lcall
add
xchg
pop
adc
pop
inc
xchg
lds
iret
inc
xor
loopne
pop
or
jo
xor
in
pop
pop
ljmp
push
xchg
test
ss
jne
ja
orb
push
pop
out
movsl
xlat
add
pop
push
into
cltd
fstpl
loope
daa
dec
ret
add
lahf
pop
cmp
mov
dec
leave
sub
jg
or
insb
nop
and
enter
sbbb
and
jl
pop
pop
inc
call
xchg
add
test
int
popa
xor
movsl
loope
adc
jns
pop
dec
mov
adc
cltd
ljmp
in
dec
lcall
mov
std
mov
sub
in
fsubrl
mov
dec
mov
jecxz
xchg
pop
mov
add
add
movsb
mov
jae
jge
lcall
push
add
inc
xchg
sub
sbb
sub
sub
sub
lret
pop
jmp
popa
or
sti
and
pop
out
jl
lcall
data16
push
mov
xchg
cmp
mov
sub
ret
hlt
lret
mov
mov
shrl
dec
ret
ja
jnp
and
adc
xchg
mov
out
xchg
inc
dec
movsl
mov
mov
sbb
sbb
cmp
pop
cmp
test
push
in
rol
add
add
mov
jnp
add
lods
cltd
out
int
add
and
repnz
repnz
xorl
outsb
adc
enter
pop
xchg
arpl
inc
out
pushf
jno
sub
mov
dec
add
vmwrite
xchg
xchg
sbb
jmp
or
nop
push
fwait
cmp
ror
fildl
xor
and
pop
inc
mov
mov
sbb
or
mov
cwtl
test
sbb
pushf
aad
fwait
daa
sbb
jnp
cmp
jmp
loopne
mov
cmp
jno
mov
add
rclb
adc
mov
push
cld
or
pop
adc
xchg
inc
test
out
dec
imul
and
mov
mov
dec
aas
nop
xlat
pop
jle
cwtl
jecxz
int3
into
adc
xlat
ss
cltd
dec
sbb
cs
sub
nop
mov
xlat
mov
iret
jae
mov
push
xor
adc
loop
cmp
popa
push
sbb
mov
and
les
scas
jmp
scas
sub
xchg
add
ja
dec
cltd
inc
add
sub
test
subl
rcrl
and
cmpsb
xchg
mov
adc
xchg
iret
outsl
mov
sub
lcall
call
cmpsl
push
icebp
lret
dec
add
negb
cwtl
mov
test
aas
jbe
arpl
pop
xchg
out
push
inc
adc
mov
push
mov
jmp
rcr
loopne
adc
mov
lea
ss
add
adc
adc
mov
cwtl
nop
rcrl
pop
in
mov
jae
mov
imul
mov
imul
mov
or
pop
insb
mov
jmp
mov
aad
xor
xchg
sub
mov
or
cmp
mov
aas
inc
xchg
ljmp
int3
aam
cmpsl
jl
imul
ret
add
cmpsl
jnp
push
fstpl
push
inc
jo
sar
xchg
scas
js
xor
xchg
std
ror
dec
insb
mov
sub
call
fldl
insb
test
into
mov
push
lret
jb
mov
flds
mov
pop
lcall
add
sar
adcl
repnz
test
inc
dec
add
pushf
clc
inc
xor
stos
aaa
mov
mov
or
inc
pop
movb
sub
mov
mov
jae
mov
frstor
pusha
rcrl
clc
pop
enter
sub
fs
int
shr
cs
arpl
adc
jno
sub
push
shl
test
sub
aaa
xchg
adc
inc
adc
outsl
repnz
push
pop
mov
mov
movntps
inc
mov
je
fldt
repnz
pop
xor
mov
sbb
sbb
mov
les
cmpsl
jmp
lods
push
lds
sub
sarl
arpl
mov
cmpb
jb
iret
sahf
or
sbb
xchg
pushl
mov
stos
ret
outsb
mov
add
pop
add
pop
adc
mov
mov
out
rorl
js
rcrb
push
rorl
push
fistpl
negl
push
sbb
sti
dec
rorb
repz
daa
sahf
popa
mov
lea
rcll
jmp
mov
fdivs
mov
jge
dec
outsl
shrb
pushf
xchg
push
xchg
pop
ljmp
xchg
xchg
or
mov
lret
dec
xchg
or
sub
cs
mov
jbe
add
dec
xor
lret
mov
sub
and
add
rol
in
call
push
xor
lret
rorl
cmp
push
fwait
and
and
sahf
lods
xor
push
dec
pusha
mov
xchg
jno
sub
inc
cmpsl
pop
sahf
cltd
mov
and
ss
scas
js
xchg
jo
div
xor
repz
mov
mov
dec
mov
or
mov
aaa
xchg
dec
lahf
inc
or
test
repz
sbb
pop
mov
mov
jb
fmul
xor
pop
call
sarb
mov
pop
adc
inc
adc
pop
das
xorb
xor
addb
dec
fbstp
ds
fsubl
aad
sub
mov
xor
dec
push
mov
jbe
cmp
and
cmp
cli
dec
mov
ja
xchg
and
and
mov
js
movsl
arpl
sub
pushf
outsb
push
jnp
shlb
jle
ret
pop
in
sahf
mov
out
dec
adc
sbb
mov
lock
das
add
push
mov
pop
sti
or
test
hlt
mov
push
fdivl
cwtl
loopne
push
xchg
aad
pop
ret
insb
mov
arpl
in
jge
inc
dec
out
insb
enter
dec
pusha
int3
enter
les
xchg
int
mov
mov
jno
scas
sbb
repnz
and
scas
enter
xchg
jne
xlat
inc
fwait
shrl
fnsave
inc
repnz
cmpsb
dec
add
scas
or
jns
cmpsb
int3
fwait
aam
pushf
jns
test
sbb
shrb
adc
jns
dec
xor
xor
repz
out
jbe
out
stos
fs
cs
call
int
out
adc
and
cli
or
mov
mov
jo
and
popa
mov
lcall
cmp
dec
pop
cmc
pop
mov
inc
mov
inc
mov
cmpl
xchg
cmpb
or
in
mov
les
lret
lahf
inc
jb
xchg
insl
ss
movsl
cmp
jle
out
fucom
xlat
mov
add
jo
pusha
push
pop
inc
jbe
mov
jl
je
ds
xchg
or
sarl
inc
mov
push
int3
or
aad
fwait
mov
dec
ss
cmpsb
cmp
push
mov
sarb
lock
mov
xchg
lahf
and
insl
cmc
add
pop
and
out
jmp
mov
jbe
ds
xorb
inc
cltd
les
arpl
cli
mov
incl
push
sahf
mov
ljmp
cmpsl
or
sub
mov
or
add
mov
add
sbb
inc
daa
sbb
ret
mov
or
add
push
out
jns
xchg
cmp
mov
stos
hlt
inc
test
fwait
leave
fbld
imul
and
test
sti
cmp
dec
pop
adc
xchg
hlt
lods
sbb
jle
ret
dec
out
sub
xchg
and
adc
movsl
pop
cmpsl
mov
mov
push
inc
rcrl
insl
test
jno
rcll
mov
call
jns
outsl
repnz
xor
push
clc
ficomps
mov
scas
das
movsl
fists
push
loopne
or
mov
test
jno
in
sub
mov
mov
test
jbe
je
cmpsl
sbb
loope
pop
loopne
xor
or
dec
fidivl
and
pop
xchg
lcall
mov
jne
inc
xchg
int
cmpsb
aas
cmp
int3
or
lcall
xchg
jl
or
vpaddq
jg
lds
sub
je
leave
inc
push
ret
inc
out
in
and
aam
jne
test
ja
dec
jb
dec
mov
aam
insb
and
jmp
pop
movsb
andl
inc
push
or
idivb
mov
mov
pop
dec
mov
shll
xor
mov
mov
cmpsl
clc
leave
lock
stc
mov
mov
jae
icebp
and
sahf
xor
push
cmp
cmpsl
ss
adcl
lcall
adc
aas
mov
pop
sub
mov
out
lret
lcall
lahf
push
mov
xchg
mov
popf
push
jns
ja
inc
ljmp
pop
jb
add
xchg
rclb
xor
mov
aaa
lcall
je
icebp
mov
add
test
inc
enter
jmp
popf
sahf
xor
xchg
das
aaa
lret
into
or
pop
mov
int
rcpps
mov
jge
es
add
xchg
cmp
mov
fnsave
outsb
in
xor
push
cltd
mov
icebp
out
mov
add
loope
pop
xchg
lods
in
sahf
test
jge
dec
daa
sahf
or
xor
dec
js
sbb
mov
test
inc
ret
mov
xchg
ds
cmpsl
dec
popa
lea
cmpsl
les
fwait
xchg
jbe
cwtl
fdivr
out
rcrl
jg
jnp
mov
in
or
arpl
les
fnstcw
pop
xchg
sub
cmp
dec
jns
sbb
fidivrl
fnstcw
lahf
push
hlt
xchg
sbb
cmc
sbbb
test
and
mov
xchg
loopne
pop
dec
pextrw
mov
mov
notb
jl
in
stos
push
and
mov
loop
lcall
icebp
adc
aaa
sbb
mov
inc
cmp
xchg
jecxz
pop
xchg
inc
inc
insl
and
in
dec
pushf
mov
jle
fldenv
pop
jo
sahf
cmp
add
cld
sahf
stc
xchg
loope
inc
in
inc
pop
pop
idivl
add
xchg
adc
mov
cwtl
shrb
and
mov
aad
jnp
aaa
or
cmc
inc
lds
outsb
push
outsb
inc
or
adc
push
mov
ret
outsl
cmc
lds
sub
sarb
mov
pop
sub
call
ljmp
pop
fsubr
inc
jp
out
insl
insb
jl
mov
jecxz
xor
jnp
fldl
mov
popf
push
lahf
inc
jnp
jge
in
into
mov
xlat
jo
lods
icebp
sub
mov
add
mov
adc
xor
or
div
les
add
shll
sub
setb
push
push
jb
movsb
rorb
imul
gs
inc
sbb
push
inc
hlt
stos
adc
or
jbe
dec
and
pop
test
mov
adc
mov
fcompl
lds
shrl
scas
adc
mov
in
cwtl
pop
les
cmp
xor
mov
cmp
adc
idiv
mov
shll
xchg
data16
das
popf
or
push
mov
mov
insb
push
mov
pop
lcall
test
int3
cmp
pop
popf
mov
out
xor
add
mov
ror
pop
dec
sbb
fdivs
mov
push
in
scas
xor
fwait
jge
push
sbb
dec
inc
sahf
out
shll
cmp
sub
jno
pop
sub
dec
mov
stc
add
pop
das
lahf
mov
enter
xor
cmc
stos
adc
arpl
lahf
jns
xchg
push
int3
lret
mov
or
push
sub
notl
pop
xor
movsb
outsl
jns
mov
lock
adc
jl
xchg
jmp
lock
addr16
cmp
std
mov
out
cmp
call
stos
mov
pusha
lea
pop
fisttpll
xchg
push
mov
push
jge
lret
sub
out
xchg
dec
jb
int
lock
jle
fstpt
mov
fwait
xor
ret
arpl
adc
fwait
and
xchg
les
mov
inc
das
jnp
jae
popf
push
in
test
push
mov
fdivl
add
jno
sbb
mov
sbb
adc
out
or
mov
in
cmp
lret
das
rclb
ror
push
push
stc
xchg
pop
in
sub
inc
mov
pop
mov
or
lea
and
jp
inc
adc
stos
stos
push
lcall
mov
stc
sahf
adc
mov
sbb
fadds
scas
xchg
popa
sbb
jle
and
mov
xor
dec
clc
jge
mov
outsb
xor
repnz
mov
rolb
pop
xor
insl
pop
mov
lods
mov
or
fbstp
sub
lods
push
call
dec
mov
jecxz
rolb
into
mov
fwait
sbb
xor
and
scas
xchg
cmp
xor
inc
pushf
fcomi
push
mov
pop
jae
shr
xchg
addr16
adc
mov
aaa
jne
imul
imul
mov
xchg
dec
mov
nop
int3
inc
sbb
xor
jbe
pop
stos
addr16
iret
cmp
mov
push
lret
xor
dec
sub
inc
mov
out
push
push
leave
dec
xor
sub
mov
aad
dec
mov
iret
dec
int3
hlt
mov
sbb
sar
push
xchg
xor
and
jbe
repz
imul
mov
xchg
aad
jp
mov
cltd
adc
ljmp
addr16
mov
scas
or
leave
cmp
mov
push
inc
popa
dec
push
push
hlt
lods
xchg
pusha
repnz
out
mov
jns
sub
fcomps
sub
push
into
sub
leave
in
push
mov
outsb
stos
mov
cli
mov
test
add
mov
sub
enter
cmp
push
xor
call
and
das
jp
rorl
pop
push
dec
sub
fs
xchg
out
inc
fsubrl
movb
pop
and
push
jnp
out
or
push
mov
int3
iret
popa
dec
mov
fidivl
lods
and
jne
push
stc
sbb
inc
addr16
stos
and
push
loope
push
cmc
xor
xlat
icebp
aad
xor
mov
jne
rcrl
iret
les
push
mov
pushf
xchg
sbb
dec
inc
mov
loopne
fcmovu
aaa
jge
adc
xchg
xchg
dec
loop
bnd
pop
std
dec
pop
xchg
jo
incl
cmpsl
stos
jmp
stos
rorb
inc
xchg
es
in
dec
pop
ja
inc
nop
subl
xchg
les
and
lods
nop
mov
inc
adc
das
cltd
push
test
mov
pop
cmp
push
jno
xchg
xor
fdivs
cmp
pop
jae
add
pop
roll
mov
hlt
lea
xchg
addr16
xchg
cmpsb
jo
xchg
fwait
adc
dec
orb
adc
sub
xchg
aas
pop
lods
jge
jns
fs
imul
lods
sbb
jns
push
idivl
cwtl
data16
mov
testl
cmp
xor
jb
push
ficomps
jnp
mov
imul
pop
jne
push
xor
incl
xchg
xor
xchg
jo
jp
xchg
mov
out
pop
mov
in
add
sbb
jbe
xchg
pop
jae
dec
add
in
adc
stos
mov
adc
movsl
or
jmp
push
and
jnp
and
xchg
or
in
pop
repz
in
daa
aam
hlt
lea
aas
sbb
ret
cmp
xor
inc
imull
das
mov
mull
neg
je
jb
xchg
jecxz
test
xchg
jg
cmp
push
jge
adc
xchg
add
add
push
cmpsl
lret
add
sub
sbb
js
pop
or
cli
je
nop
mov
jbe
or
inc
scas
insl
push
fsubl
dec
pushf
mov
sub
lds
pop
lds
inc
pavgw
jl
ret
xchg
push
iret
xor
arpl
jb
jl
dec
testl
ja
or
incl
push
push
xlat
fnstcw
adc
jmp
lahf
arpl
sbb
push
add
mov
insl
inc
mov
fisubrs
cmc
daa
push
in
push
test
lods
insl
or
xor
xlat
out
mov
inc
pop
xchg
cwtl
mov
test
jmp
dec
bound
xor
sbb
scas
sub
cwtl
faddl
ret
imul
rclb
loopne
mov
add
xchg
loope
std
nop
shlb
jne
mov
push
test
pusha
dec
mov
xor
mov
jg
lcall
int3
fwait
cmp
andb
inc
xchg
mov
into
sti
add
test
ret
mov
fisttpll
sub
mov
aad
xor
fbld
testb
popa
xchg
repnz
movsb
adc
push
pop
pop
pop
mov
fisttpl
sbb
fcoms
add
pushf
sti
and
ljmp
xor
pop
inc
mov
mulb
dec
cmpsb
lock
dec
lock
add
add
jnp
roll
lods
xor
jge
jg
pop
push
lahf
inc
enter
mov
adc
aas
cld
cmp
sub
jge
mov
adc
in
outsb
test
sub
add
dec
add
enter
ret
outsb
aad
aaa
pop
push
in
dec
mov
xor
pop
adc
fisubl
xor
jb
out
stc
xor
or
push
sahf
fisttpll
push
lods
adc
xchg
shlb
push
rolb
mov
shrl
xor
mov
imul
sub
test
ds
loope
xchg
aam
rcr
lret
jns
je
mov
into
scas
cs
mov
push
inc
adc
jns
mov
adc
pop
imul
jg
inc
push
ja
fnclex
lahf
inc
mov
push
loopne
sub
gs
inc
rcrl
cld
xor
cmp
mov
notl
xchg
mov
fbld
fists
push
or
push
lds
sub
jl
subb
mov
mov
cwtl
fsincos
fdivrl
mov
aam
ds
jle
into
repz
rcrl
sub
push
mov
es
jecxz
or
bound
loope
fs
in
rcrb
xchg
xor
lret
jbe
sbb
mov
fists
pop
std
push
ret
add
xchg
popf
jge
in
dec
sbb
lahf
in
call
inc
sbbl
mov
and
aad
push
xchg
inc
or
xchg
push
jle
test
cltd
nop
pop
sbb
sahf
rolb
jl
stc
mov
jle
imul
iret
cmp
and
push
outsb
mov
sub
sub
pop
ss
icebp
xchg
and
adc
fildl
aam
push
mov
shlb
jno
mov
aas
arpl
sbb
and
mov
add
jecxz
mov
rorb
es
loop
lcall
hlt
xlat
push
adc
scas
push
xor
mov
or
les
negl
sahf
adc
push
fidivl
pop
push
pop
cmpsl
and
jg
cli
repnz
loopne
imul
aam
push
inc
cmp
or
or
testl
jle
and
test
mov
andb
leave
ret
add
lea
jbe
and
fists
mov
mov
or
jle
push
ja
pushf
aam
sub
test
sub
andl
fadds
mov
es
sarl
aaa
mov
sbbb
sbb
shl
cwtl
and
stc
cmp
or
xchg
stos
mov
dec
sub
insb
roll
cs
lret
sbb
push
ret
mov
stc
fidivs
sbb
sbb
or
dec
push
mov
sti
call
sti
adc
push
pop
mov
out
addr16
pop
xchg
mov
mov
mov
notb
xchg
mov
cld
push
or
mov
cmp
pop
xor
cmpsl
sub
test
lock
pop
ret
push
and
pop
lock
notl
pop
ret
fidivl
cmp
inc
fistpll
into
in
mov
cmc
dec
movsb
xchg
push
jecxz
into
dec
fsubl
clc
out
insb
sbb
and
les
idivl
push
test
outsl
cmpsl
hlt
xchg
or
ja
enter
sub
out
mov
adc
test
and
icebp
dec
sbb
push
mov
out
push
push
fsubrs
xchg
iret
and
add
dec
push
pop
push
xchg
hlt
pusha
mov
dec
or
push
push
inc
mov
sub
push
mov
inc
and
cmp
mov
aam
or
pushf
pop
dec
imull
push
add
add
loope
push
outsl
outsl
nop
cmp
xor
mov
out
sahf
sub
out
ja
jo
js
std
idivb
cmp
lcall
sbb
add
outsl
scas
dec
xchg
sbb
xor
hlt
push
cld
mov
sub
dec
cmp
data16
add
inc
test
add
ss
pop
mov
sub
jae
mov
cwtl
enter
insl
push
aam
mov
adc
add
aas
rcll
xor
pop
fnstcw
xchg
repnz
mov
cmp
cld
rcll
bound
inc
call
lahf
popf
pop
dec
int
fs
clc
sti
fldcw
cwtl
dec
outsl
sbb
das
out
adc
jmp
or
cmpsl
sti
pop
enter
rcr
out
aaa
in
pushf
sbb
scas
or
push
dec
mov
or
loope
mov
cs
pop
jae
mov
in
xor
xlat
sbb
insl
cmovp
xchg
in
daa
leave
jno
stos
jbe
pop
lds
repz
movsl
xor
cwtl
cmc
xlat
movsl
push
adc
sbb
sub
xor
rol
sub
stos
stos
scas
shll
xchg
mov
ret
push
insb
mov
test
fmuls
popl
addl
and
out
dec
xor
jbe
std
pop
fmul
fmulp
js
in
push
mov
jl
inc
and
cmp
scas
aas
mov
rolb
xchg
push
jp
inc
cltd
adc
punpcklbw
test
test
mov
jne
dec
inc
dec
aam
out
popf
gs
in
or
repnz
ret
loop
pop
mov
cli
mov
push
stos
adc
sahf
jle
movsb
lcall
cmp
jb
xor
aam
sbb
ror
push
jb
movsb
out
fldt
mov
aaa
mov
jle
xchg
cmp
xor
mov
lahf
jl
add
xor
push
sub
adc
movsl
int
cmpb
and
enter
lcall
or
and
test
or
lods
and
lock
mov
mov
jnp
push
pop
movsb
push
jae
cltd
xorl
stos
jae
pop
daa
mov
pop
pop
sub
enter
fsts
or
dec
movsb
lods
movsl
testl
sbb
loope
cs
mov
ja
inc
sti
adc
test
cmc
xlat
mov
cmpsl
xlat
push
or
inc
adc
xor
fidivs
lahf
repz
xor
add
ror
stc
jge
fcoml
sbb
adc
scas
inc
mov
adc
pop
inc
cmp
sbb
mov
outsb
xchg
sahf
insb
cmp
orl
or
testb
sub
fcmovnb
clc
fs
or
shl
xchg
xchg
mov
aam
js
push
adc
sbb
repz
movsb
lret
mov
and
jecxz
add
jg
hlt
shll
inc
mov
mov
cmp
int
fadd
inc
push
xor
and
daa
jge
cmpsb
leave
iret
and
fwait
xchg
adc
fimuls
dec
addr16
test
dec
ss
insl
loope
jne
mov
xrstor
out
inc
adc
insl
push
cmp
mov
pop
out
jl
and
pop
cmp
aad
rcrl
jo
and
jae
jno
add
fldenv
xorb
push
pop
pop
das
mov
push
mov
adc
mov
push
cmpsb
jle
ljmp
insb
ret
jmp
aaa
insl
mov
int
fstpt
jo
mov
aas
or
xchg
loopne
sbb
loopne
inc
arpl
dec
rclb
cld
mov
cltd
aaa
pop
enter
dec
out
aas
fildl
push
sarl
fwait
pop
loope
insl
movsl
cmpsl
push
inc
movsb
ret
mov
adc
mov
clc
dec
lea
push
dec
dec
test
push
out
gs
out
xchg
stos
adcl
imul
push
das
mov
sbb
fidivrs
scas
dec
and
add
jge
lods
add
dec
mov
out
mov
inc
rcrb
cwtl
inc
jnp
in
sub
out
inc
xchg
add
jb
pushf
or
fnstcw
add
cmp
jmp
je
push
pop
dec
sub
movsl
sub
mov
adc
mov
sbbb
adc
lods
bound
bound
dec
pop
sbbb
adc
int3
xchg
fists
cmp
jbe
sahf
mov
cmpsb
dec
lret
cmpl
imul
fistpll
shll
leave
inc
adc
add
cmp
adc
pop
cmpsl
daa
movsb
arpl
xor
sub
fisubrs
inc
clc
mov
sbb
pop
fsub
mov
jecxz
sub
sahf
aam
sbb
lock
ljmp
xchg
adc
and
cmp
dec
and
cmp
mov
cmpsb
mull
and
scas
mov
insb
mov
push
cli
jecxz
mov
mov
sbb
mov
push
cmp
les
cmpsb
les
stos
sub
push
bound
xor
sahf
cmp
lods
adc
jae
cmp
xlat
dec
std
insl
jmp
popa
adc
adc
fmull
das
lret
dec
icebp
fwait
into
adc
fldt
sbb
xchg
mov
sub
push
mov
mov
dec
pop
movsl
xor
inc
lods
lcall
or
cmpsb
or
xor
mov
imul
mov
sub
and
or
jb
xorl
sbb
test
stos
hlt
lods
sub
cltd
push
je
push
add
push
stc
in
mov
in
push
jno
insl
xchg
inc
mov
idivb
sbb
lods
pusha
cmp
ds
mov
push
mov
mov
pop
rclb
mov
mov
pop
popa
and
notl
mov
sbb
push
rclb
test
mov
add
mov
push
ss
sti
scas
cmp
and
lds
lret
jp
ljmp
pop
iret
mov
dec
add
pusha
xor
ds
mov
ljmp
xchg
cmp
pop
inc
test
jl
movsb
lret
int
or
in
xchg
add
lods
pop
lods
xchg
xchg
test
mov
sub
cmp
js
sub
cwtl
jnp
mov
mov
mov
pop
mov
idivb
ja
lret
popa
clc
retw
sbb
shrb
inc
ljmp
or
movsl
lret
adc
jno
add
push
mov
cmp
jno
lcall
dec
lcall
xchg
iret
ret
out
adc
pop
test
dec
std
leave
adc
lock
xchg
and
imul
nop
pop
xchg
push
cmc
les
mov
imul
ljmp
inc
sub
push
add
repz
std
fnstsw
cmp
jmp
lret
mov
out
xchg
dec
push
or
mov
adc
pop
ss
sahf
jo
cmp
leave
and
arpl
mov
fcmovnu
bound
cmc
aad
mov
in
lods
out
in
mov
sbb
fdivrp
inc
mov
xchg
and
and
pusha
push
lcall
add
and
mov
pop
push
cltd
adc
out
mov
fldcw
addb
push
into
call
sti
mov
repz
push
dec
popf
stc
outsb
into
adc
push
sahf
push
scas
dec
inc
aaa
movsl
jnp
mov
das
idivl
xchg
les
mov
inc
xor
or
aam
push
pop
aas
push
pop
inc
xchg
out
aad
cltd
pop
outsl
aad
add
mov
js
or
fdiv
inc
leave
or
cmp
jle
clc
sub
lods
mov
movsb
loope
jmp
shll
pop
jmp
imul
xor
and
pop
sbb
andb
inc
and
adc
aam
mov
in
test
lock
xlat
imul
in
adc
mov
movsb
imul
leave
push
sub
loopne
lcall
adc
int3
pop
add
adc
or
dec
xchg
lods
out
pop
cmp
les
sti
jb
int3
bound
add
sahf
and
mov
movsbl
in
leave
or
test
push
mov
fidivrs
jb
and
or
movsl
test
cmp
push
cmp
dec
test
mov
or
mov
dec
or
jmp
cli
fsubs
jmp
aad
test
rcrl
fldenv
gs
dec
adc
mov
cmp
aam
lods
sbb
test
test
addr16
dec
lahf
fidivs
pop
cmpsl
int3
inc
rcrb
divb
jnp
jb
orb
sarl
mov
call
pop
cmpsb
shl
push
fisubrl
mov
pop
andb
in
mov
fmuls
push
push
xchg
jb
arpl
push
mov
sti
stc
mov
arpl
dec
sub
mov
sbb
scas
loope
inc
add
cmp
pop
or
ret
jb
lcall
loopne
sub
inc
cmp
mov
setno
mov
shll
or
or
push
xchg
daa
dec
jmp
add
ds
pop
mov
mov
cmp
mov
les
je
xchg
outsl
insl
adc
mov
pusha
insb
mov
and
mov
add
stc
inc
jo
push
addr16
flds
inc
sbb
xchg
push
mov
or
cmovno
push
or
rolb
outsb
inc
int
dec
mov
cmp
loop
push
jmp
cmp
inc
push
test
leave
lea
pop
or
popf
mov
les
xor
pop
hlt
inc
jmp
shlb
push
js
adc
in
shrb
push
cmp
push
fildll
pop
xor
jl
push
and
aas
or
sub
sahf
popa
out
fimuls
lret
xchg
fimuls
xchg
jb
xor
cld
add
cmp
cmpsl
jp
add
jae
jo
pop
cmp
jge
clc
js
sub
out
in
pop
mov
mov
das
sbb
divb
mov
mov
adc
xchg
imul
sbb
cld
pop
and
lods
sub
hlt
aaa
sarl
xchg
adc
jp
test
dec
xor
push
pop
xchg
sbb
mov
fsubrl
add
adcb
cmp
in
sbb
adc
lret
in
push
ja
in
in
addb
jmp
fsubrl
outsl
aas
nop
jne
sbb
cmp
pop
and
lahf
push
adc
cmp
pop
jnp
loope
sub
scas
jge
ja
mov
lret
into
jbe
xchg
mov
xchg
ja
inc
mov
add
std
sub
jno
pop
inc
jae
add
hlt
inc
outsb
stos
inc
mov
ret
cmp
jo
xchg
xor
ja
mov
add
imul
mov
or
scas
out
push
pusha
mov
rcrb
adc
scas
cmpsl
dec
lahf
jns
test
movsb
scas
add
mov
and
daa
fs
mov
pushf
movsb
mov
jmp
filds
mov
jns
addr16
rorl
dec
mov
dec
jge
inc
inc
inc
xlat
sub
neg
nop
decb
sub
cmp
and
jl
ret
pop
inc
jbe
test
cmp
xchg
aad
push
insl
sti
adcb
mov
dec
int3
and
test
addr16
or
mov
pop
xor
or
xchg
mov
cmp
dec
jo
int
xchg
popf
call
repz
mov
inc
mov
ljmp
mov
push
xor
and
pop
adc
jo
jg
mov
pop
add
xchg
push
ret
fcomps
add
mov
adc
fldl
push
gs
pop
dec
pushf
in
test
and
and
mov
xchg
mov
inc
sbb
rcll
in
jmp
mov
rorb
inc
fcomps
push
in
leave
cwtl
in
sbb
inc
fnstcw
mov
stos
and
adc
lods
fnstcw
adc
out
sub
jg
out
jmp
rorl
xor
lods
push
push
pop
push
mov
movsl
in
cmp
inc
pop
cltd
pop
inc
jmp
test
das
fsts
sbb
sub
jl
popa
jmp
shll
std
subl
fwait
xchg
cmpsb
gs
loopne
stc
xor
sub
int3
adc
cltd
mov
jae
int3
sbb
sub
and
mov
xor
push
outsl
outsb
inc
cmc
cmp
inc
imul
jp
jg
roll
and
ja
jle
pop
add
outsb
adc
out
btr
aad
push
mov
inc
stos
cmp
adc
mov
ljmp
or
pop
or
pop
cmp
push
or
mov
inc
data16
popf
mov
test
subb
add
dec
sbb
pop
cli
fs
inc
jl
out
inc
cmp
je
inc
out
rep
jbe
mov
movsb
imulb
cmc
test
xchg
out
xor
mov
sbb
popf
inc
cmpsb
jb
push
jae
imul
xchg
inc
imul
xchg
and
cmp
mov
loopne
jmp
xor
clc
pop
in
fs
jno
xchg
lahf
addr16
xchg
or
inc
fcoms
mov
xchg
sbb
dec
add
insl
cmp
prefetcht2
lock
jle
xor
movsb
es
inc
push
fstpl
xchg
pop
adc
leave
aaa
sub
negl
lds
daa
jecxz
and
mov
xchg
xchg
jp
subb
js
rorl
sysret
mov
mov
ret
inc
aas
sbb
adc
hlt
and
mov
dec
scas
mov
xchg
out
test
pop
pusha
popf
jae
insl
dec
adc
and
icebp
dec
and
aam
pusha
mov
jnp
js
les
test
adc
ficomps
int
sbb
cmpsl
notb
pop
rcrb
sbb
mov
dec
inc
push
shll
xlat
mov
inc
pushf
mov
and
cmp
stc
daa
jle
cmp
mov
rol
loope
pop
jmp
pop
cmp
xchg
mov
loope
loop
mov
mov
in
or
sbb
test
mov
cs
sti
sub
adc
leave
inc
sub
popf
andb
adc
sbb
xor
sbb
lods
pop
or
mov
cmp
lock
mov
mov
loope
pop
cmp
insb
mov
test
jecxz
mov
fbld
lea
sbb
fs
lock
push
insl
push
lods
push
jle
push
std
idivb
sti
dec
mov
adc
jno
gs
mov
cmp
sbb
cmp
jbe
and
lret
out
lea
cwtl
lods
rcrl
nop
jno
sbb
push
cmp
push
stos
xchg
push
add
sbb
aas
jge
adc
pushf
mov
lock
xchg
pushf
cmp
movb
fwait
sub
sbb
jbe
and
xor
or
xlat
stos
mov
imul
into
push
fildl
lcall
test
sbb
das
pop
sub
add
cmpsl
push
push
and
xchg
out
pop
or
sbb
test
in
aad
into
jl
imul
loope
sub
inc
sub
out
lahf
sbb
mov
idivb
scas
test
mov
cmp
call
inc
clc
jo
leave
test
push
adc
add
or
call
xor
sub
dec
sbb
xchg
cmp
pop
in
clc
lods
sub
shlb
pop
mov
jecxz
shll
add
and
dec
jp
aam
popa
out
rcrb
fdivrs
xchg
rcrl
hlt
les
fsubs
mov
movsl
inc
in
sahf
sub
dec
insb
movsb
lahf
mov
test
xchg
cmc
aas
jmp
sub
dec
sub
cmp
xchg
jno
mov
dec
inc
clc
sub
int
pop
addr16
incl
dec
sub
out
xchg
jle
xchg
sbb
mov
scas
faddp
xchg
jle
dec
enter
dec
mov
xchg
xor
out
push
jbe
ja
data16
mov
add
addr16
jnp
cmpsb
pop
cmp
jl
pusha
cmpsb
fdivrs
xchg
pop
jae
ljmp
rcl
lret
outsl
stc
out
add
jmp
cmp
mov
pop
and
xchg
cmpsb
nop
pop
inc
sbb
cmc
hlt
inc
nop
ret
jecxz
movsl
push
pop
aad
mov
js
sbb
call
sbb
sbb
xlat
iret
test
fcoml
rclb
in
mov
in
int
lds
jge
xchg
xchg
dec
xor
ret
push
jmp
addr16
in
inc
jbe
ljmp
add
jbe
sub
mov
pop
addr16
and
popf
leave
xor
lret
mov
mov
out
sbb
sbb
js
repnz
xor
fisttps
mov
lock
cmp
movsl
adc
test
in
cmp
ds
xchg
push
int3
insl
jp
push
lcall
jmp
push
outsl
xor
sbb
bswap
sti
or
ds
loopne
and
push
jl
and
mov
xchg
ret
in
xor
xor
pop
jge
cmpl
jl
push
lock
cmp
xor
xorl
jae
jno
sbb
imulb
inc
add
cmp
xchg
xchg
cmp
or
rorl
mov
xchg
adc
stos
pop
dec
test
out
gs
dec
scas
fistps
in
inc
js
cmp
jecxz
movsb
ret
push
ss
clc
fcomps
mov
and
int3
jge
sbb
scas
push
shll
jnp
fs
ss
mov
xchg
adc
dec
bswap
hlt
pop
jns
insl
jp
push
xchg
outsl
loopne
clc
cmc
jns
push
in
jmp
lods
push
inc
frstpm(287
dec
mov
mov
jb
xchg
add
aas
les
mov
adc
outsl
inc
test
pusha
movsl
pop
dec
test
cmp
not
std
pop
pop
mov
adc
mov
les
cltd
aaa
cs
popf
xchg
testl
push
int
enter
mov
sub
lds
pop
clc
add
cwtl
cmp
push
jno
je
flds
or
push
adc
loopne
stc
jnp
push
sub
rorb
pop
mov
xlat
cmpb
loopne
push
jp
out
sub
sub
cmpsb
sub
cld
cmpsl
ror
lds
cs
push
cmpl
mov
add
in
lahf
mov
fildll
inc
sarb
fisubrl
xchg
in
mov
popa
in
sub
xchg
test
push
push
std
sbb
sub
punpckhdq
cmp
and
xchg
mov
icebp
repz
jmp
or
jbe
inc
out
popa
mov
mov
sti
fldcw
lea
addr16
stos
sbb
rclb
sarb
sbb
nop
xlat
sahf
jmp
push
les
xor
sti
mov
mov
add
mov
and
xor
pop
sub
cmp
popa
lcall
shl
mov
stos
aam
mov
push
xchg
push
jecxz
testb
enter
into
dec
fst
rol
sub
dec
rcl
sti
jno
push
mulb
pop
pushf
xchg
test
dec
sub
add
xchg
dec
mov
jp
popa
xor
push
cmp
jecxz
pop
dec
xchg
mov
xchg
pcmpeqb
mov
dec
je
add
imul
mov
pusha
cmc
inc
pop
rorl
pop
mov
and
daa
mov
mov
push
xchg
adc
and
mov
es
fimull
jbe
cld
sbb
adc
dec
jmp
cld
and
xchg
fdiv
sub
and
cmp
pop
and
push
push
loop
sarl
xor
mov
or
in
int3
or
jne
jo
mov
and
push
insl
iret
mov
inc
leave
and
xor
in
lods
cld
mov
mov
out
mov
movsb
xor
push
shrl
adc
stc
and
in
test
out
in
mov
repz
hlt
and
enter
cs
movsl
and
leave
sahf
or
dec
pop
push
pop
mov
popa
xchg
xor
xor
notb
adc
push
ja
push
cli
dec
jp
les
sub
and
mov
or
dec
pop
sbb
in
out
push
xor
push
dec
ret
dec
in
aaa
fisubrl
or
add
dec
repz
and
jne
punpckhwd
out
mov
mov
push
pop
xor
loop
mov
push
jb
dec
js
je
ss
out
call
sub
insb
movsb
xlat
fstpl
or
sbb
loop
xchg
aaa
xchg
fcompl
cmp
xchg
mov
test
hlt
inc
pushf
xchg
stos
ljmp
stos
loop
out
in
xor
rorl
inc
stc
sub
jnp
aam
faddl
or
notl
inc
imul
jne
push
repz
mov
inc
dec
mov
mov
add
push
push
outsl
cmc
hlt
mov
bound
aad
fmull
jl
xchg
xor
rolb
inc
mov
into
push
pop
scas
xor
lds
das
addb
divl
xlat
xchg
insl
adc
idivl
cmpl
cwtl
cmpb
push
jns
cmp
add
pop
pop
movsb
and
imulb
pop
mov
ret
rclb
cmp
sbb
out
xchg
sub
mov
dec
lock
cld
sbb
xor
push
mov
lods
add
les
je
push
mov
sub
ret
lods
jmp
mov
cmpsb
loop
add
testl
jl
jns
cmp
fs
call
cmp
inc
out
push
data16
cmp
popa
in
pop
pop
dec
and
out
inc
ss
stos
in
rolw
pop
pusha
cwtl
add
out
mov
shll
int
pop
sahf
xor
andb
jge
pop
mov
mov
jge
mov
and
fwait
rorb
inc
repnz
mov
out
xchg
xor
dec
push
fs
pushf
fcompl
outsb
outsl
push
mov
js
add
aaa
mov
subl
lahf
gs
ss
mov
xchg
int3
hlt
xchg
xchg
lcall
xchg
dec
pop
mov
scas
push
clc
or
adc
xor
cwtl
out
mov
xchg
sbb
loope
inc
sbb
or
mov
cmp
int
jb
sub
sbb
sbb
jb
cmp
out
dec
xchg
bnd
mov
xchg
adc
aas
movsb
dec
test
and
cmpsb
push
inc
fsub
insl
mov
enter
mov
add
dec
and
mov
mov
sub
push
dec
fmuls
icebp
in
ficompl
addl
insb
xor
test
sbb
or
cmpsl
cmpsb
mov
sbb
fs
in
xchg
mov
les
test
ds
jecxz
adc
add
loop
outsl
or
mov
je
dec
stos
lret
add
incb
adc
lret
mov
dec
push
sub
out
dec
ja
jb
and
jbe
popf
pop
dec
cltd
push
pop
repnz
je
xor
ljmp
jo
in
fwait
cld
xor
es
jge
dec
cmp
mov
add
loop
imul
repnz
sahf
fstpt
aad
inc
jge
test
dec
xlat
xor
out
sub
icebp
sub
shlb
inc
and
stos
sbb
out
movsl
lea
push
fbld
sbb
xor
clc
fst
adc
jmp
and
insl
out
loope
call
adc
mov
jge
mov
sbb
push
mov
sub
push
fs
mov
jbe
or
testb
xchg
sub
lea
and
add
js
fstpt
jno
cmp
sbb
loop
xchg
inc
xor
jecxz
fucomp
fimull
sub
jg
gs
leave
lds
outsl
std
test
lret
into
jl
mov
rcrl
and
jnp
test
stos
mov
cmpsb
pop
aaa
rcrl
push
and
push
or
mov
rcr
cs
jnp
or
inc
pop
push
ret
mov
mov
pushl
lret
addl
dec
popa
in
sahf
fmuls
popf
or
lock
adc
lods
adc
stc
jp
adc
leave
push
and
test
loope
pop
sbb
push
dec
xchg
daa
ret
cmpsl
fs
lds
cwtl
mov
xor
jae
cmpsb
pop
and
popa
lods
mov
xchg
ret
lods
and
div
push
mov
xor
xor
pop
out
push
dec
sbb
insb
orb
clc
popf
push
lahf
sbb
jnp
dec
call
out
jne
mov
xchg
aaa
inc
jne
repnz
cmp
xchg
jbe
in
popf
imul
ret
das
mov
dec
inc
dec
jns
add
xchg
lods
into
add
ret
int
insl
mov
push
jmp
insb
inc
push
stc
add
lahf
jae
nop
int
dec
sub
push
insb
call
fstpt
cmp
addr16
stos
xor
jo
inc
sub
cmp
enter
inc
sarb
cmp
add
gs
iret
add
sub
adc
pop
jmp
loope
imul
xlat
xchg
int3
gs
dec
and
jmp
cs
dec
inc
jo
div
push
push
outsb
mov
cmpsb
ss
aam
dec
jp
xchg
sub
ds
test
xchg
adc
pop
mov
or
cs
ja
stc
das
stos
xlat
adc
mov
mov
test
adc
xor
xor
jge
dec
ljmp
mov
sbb
mov
mov
test
test
scas
cli
xchg
mov
xorl
mov
subb
push
mov
mov
or
and
mov
mov
adc
dec
xor
cli
xchg
shrb
shrl
jle
stos
push
ror
xchg
cmpsl
sbb
jns
sar
sub
xor
movsb
cmpsb
xchg
xchg
jne
aam
xchg
cmp
pop
jo
ret
pop
pop
fildll
mov
sub
rcl
dec
xchg
xlat
repnz
mov
rorl
dec
mov
mov
xor
pop
lods
cmp
mov
je
in
sbb
neg
mov
arpl
adc
incb
sti
jnp
dec
push
sar
push
fidivrl
sbb
lahf
cltd
jns
adc
shrb
sbb
xchg
sub
dec
movsb
call
push
shlb
clc
pop
in
test
out
mov
xchg
xlat
sub
dec
movsb
ror
cld
cmp
mov
outsl
pop
mov
mov
shl
sub
sbb
cmp
mov
shll
enter
dec
aaa
mov
std
xchg
nop
jmp
and
movsb
scas
test
int3
rcl
test
fnsave
or
out
xchg
push
mov
lods
test
sub
test
push
pop
sub
sti
xor
aad
loop
mov
lret
jecxz
mov
loopne
mov
sahf
stos
call
cwtl
adc
orb
pop
sub
das
pop
mov
inc
loop
sub
sbb
subb
fs
je
jo
movsl
ret
mov
enter
aas
inc
push
add
sbb
add
mov
mov
ljmp
cmp
into
bsf
push
dec
adcl
cmp
add
inc
push
sbb
fldt
enter
jmp
jmp
shrb
pop
mov
mov
add
imul
insb
dec
xchg
aam
das
mov
dec
insb
daa
in
scas
add
sbb
iret
negl
icebp
cmp
sbb
fsubr
push
dec
loope
adc
jns
sub
jbe
or
push
or
push
in
add
jge
adc
lods
or
dec
fdivrl
jecxz
out
stos
xchg
dec
mov
dec
push
xor
cmp
fxch
lret
popa
xor
pop
push
push
dec
movsb
out
fs
jle
or
pop
push
push
mov
adc
xchg
add
scas
mov
sub
call
inc
insb
inc
js
jecxz
jno
mov
mov
mov
ss
cmp
test
out
nop
nop
push
pop
shlb
sahf
and
push
add
push
dec
xchg
into
mov
push
or
or
jb
insb
push
inc
insl
leave
lods
mov
xchg
add
push
dec
push
add
add
add
push
xchg
call
add
pushf
jb
fdivrl
jecxz
ds
xor
pusha
add
or
jl
test
lahf
shlb
in
negb
icebp
out
mov
in
aaa
sarb
sub
out
rcll
and
cmp
lods
adc
dec
mov
stos
sahf
pushf
mov
pop
add
pop
es
out
pop
mov
inc
ret
shll
and
test
inc
fisubs
mov
push
clc
push
xchg
cmp
rcl
xor
xchg
cmpsl
loopne
and
ret
jnp
lds
mov
mov
out
cmp
mov
mov
or
mov
add
xor
adc
fiadds
outsb
mov
scas
iret
push
wrmsr
ds
scas
fcomps
sub
mov
outsb
mov
mov
out
mov
inc
mov
jl
test
out
rcrb
out
loope
movsl
xchg
push
popa
leave
add
ljmp
addr16
jge
test
mov
sub
xor
inc
fiadds
inc
scas
pop
and
add
and
pop
mov
adc
lds
dec
in
lods
aad
ss
sbb
popf
jle
mov
stos
mov
imul
out
lcall
or
lcall
xchg
and
fldl
pop
mov
xor
inc
ret
repnz
iret
std
inc
or
cmovs
pop
xor
xchg
sub
push
add
jbe
add
mov
rcll
stos
mov
les
shr
js
loop
add
dec
imul
sbb
jns
cmp
mov
jbe
cmc
aaa
lea
es
icebp
in
inc
popa
movsb
call
fbld
movsb
sub
pop
push
scas
or
cld
adc
mov
mov
push
scas
inc
imul
out
push
add
loopne
aam
aaa
jecxz
fld
in
inc
add
mov
or
int3
cmpsb
mov
rorl
sbb
int
sub
dec
clc
lahf
pop
mov
and
push
cli
movsb
sbb
xchg
jecxz
xchg
lods
mov
jnp
add
push
mov
lcall
cs
nop
cwtl
arpl
call
jns
popa
repnz
fcoml
out
adcb
mov
iret
xorl
xchg
add
sti
aad
cmpsb
fnstcw
call
add
test
daa
sahf
push
add
sbb
mov
cwtl
push
jo
inc
mov
jb
or
or
adc
adc
leave
je
rcrl
mov
mov
cli
push
or
aad
sbb
lods
xchg
sbb
and
pop
xor
popf
dec
mov
pop
orl
out
push
pop
xor
and
arpl
daa
mov
or
mov
adc
sti
out
jb
xor
xchg
push
push
repz
mov
jbe
add
out
push
ret
push
shll
mov
push
leave
ja
ja
pushf
test
mov
pushf
dec
stos
insb
push
andl
out
and
imul
clc
clc
lret
hlt
jmp
pop
out
adc
mov
adc
jns
xchg
hlt
gs
pop
inc
std
dec
jle
daa
ds
push
inc
mov
xchg
pop
inc
mov
mov
pop
cmp
or
adc
lea
les
daa
mov
daa
addb
push
inc
cmp
push
loopne
pop
into
and
or
mov
pop
mov
jg
insl
fs
faddl
add
push
mov
stos
out
pop
mov
push
sub
jnp
fdiv
out
add
pop
dec
arpl
push
fsubp
in
ss
lock
in
mov
arpl
popa
inc
fcmovbe
stos
nop
push
out
sub
xlat
imul
jns
mov
xchg
cmp
jl
test
adc
inc
fists
push
or
shl
jb
fists
pop
jmp
or
fs
popa
lahf
jnp
adc
test
adc
sub
and
in
lahf
lds
cmc
fisttpll
loope
shll
add
dec
scas
pusha
adc
xchg
xchg
arpl
mov
mov
cli
loope
dec
sub
jno
lods
je
ss
dec
mov
andl
inc
popf
jg
and
das
mov
jbe
fcoml
test
fdivrs
dec
stos
movsb
xchg
xchg
imul
mov
mov
in
cmc
add
ret
movsb
mov
lahf
cs
jns
inc
cmpsb
ret
iret
or
imul
int3
xchg
sub
pop
xchg
sbb
jl
jo
xlat
pop
xchg
into
adc
in
sahf
jp
rorb
aas
call
rcll
out
iret
out
push
adc
ja
pop
mov
insb
mov
icebp
or
leave
rcrb
pop
orl
sbb
bound
push
pop
outsl
mov
mov
pop
push
nop
jp,pt
xchg
loop
mov
mov
shll
pop
andl
hlt
js
push
pusha
jmp
xchg
xlat
sub
sarl
adc
jnp
inc
mov
or
addr16
sub
inc
cmp
std
sub
dec
or
std
aad
fsubs
jmp
loope
sti
inc
fstp
iret
lods
adc
and
popa
stc
xlat
in
xchg
adc
mov
pop
jle
lock
sahf
outsl
test
cmc
lahf
lea
fdivrl
add
flds
sub
jle
movsb
pop
ret
sbb
push
pop
mov
sbb
in
lcall
adc
ja
adc
push
pop
aaa
sbb
pop
sti
aad
inc
sbb
mov
add
out
iret
jg
shrb
popf
fiaddl
cmp
push
sahf
adc
push
pushf
xchg
jb
jecxz
rcrl
pop
stc
and
sub
fidivl
fs
in
push
sub
xor
ret
jae
adc
jo
in
loope
fwait
jecxz
sbb
xchg
loope
clc
cmp
pop
cmp
or
mov
iret
add
jne
mov
adc
nop
or
and
fstpl
pop
pop
xor
add
shlb
push
and
lea
xor
cwtl
lods
push
int
popa
and
les
addr16
out
sahf
mov
mov
jmp
bound
insl
jle
push
mov
shll
xor
ret
and
fs
loop
cmp
jmp
mov
xchg
bnd
add
inc
push
push
rclb
jnp
mov
or
daa
mov
adc
lret
push
divl
mov
jno
fisttpl
sti
push
lcall
mov
mov
xchg
mov
xchg
fwait
mov
out
shll
xchg
mov
xchg
dec
cmc
scas
add
dec
arpl
mov
dec
xchg
in
cmp
inc
mov
test
aas
ds
jp
lods
mov
push
in
fcoml
int
xchg
xchg
insb
cmp
rcl
in
sub
sbb
loope
lods
std
sub
bound
insb
push
pop
cld
icebp
pop
add
rcl
sbb
rcr
sbb
xlat
out
sbb
iret
or
rorb
add
stos
inc
into
out
pop
or
or
mov
jno
out
and
aas
mov
xchg
lret
xchg
lret
loopne
cwtl
and
dec
sub
push
jae
leave
push
in
jge
iret
jg
lods
pop
or
scas
jo
jmp
mov
sub
pop
mov
imul
in
ja
xor
sub
int3
enter
addb
mov
je
ja
orl
xchg
cmp
mov
fsts
loop,pn
les
push
pop
test
jle
sub
fsubs
dec
ror
daa
cld
clc
out
shll
hlt
cmp
mov
xchg
and
test
arpl
repnz
mov
cmpsl
adc
inc
pop
inc
fnstenv
mov
cmpsb
lock
jbe
push
cmp
pop
ss
fmull
mov
push
imul
loope
ret
jne
xchg
cli
setne
stos
xchg
mov
loop
push
pop
mov
dec
loopne
ret
stc
jg
lret
filds
orb
enter
jmp
xor
sub
je
cmp
xor
data16
mov
add
sub
xchg
imul
inc
lods
mov
lea
ss
add
fsts
out
fdivs
into
rclb
outsl
out
xor
mov
jne
push
jb
xchg
call
pushf
movsl
int
mov
inc
and
imul
leave
push
loope
nop
in
loope
gs
xorb
movsl
dec
push
cmp
or
push
test
in
ljmp
fistps
add
push
inc
enter
ja
mov
loopne
xchg
dec
inc
lcall
popf
mov
xor
out
js
fsubrs
mov
loopne
dec
mov
rcl
cwtl
xor
push
ja
jmp
aam
movsl
fcom
std
dec
add
xchg
adc
jge
and
cltd
adcb
icebp
cli
jmp
add
and
test
in
cmpsl
lock
add
sarl
outsb
faddl
in
inc
repnz
jge
mov
out
xchg
clc
jl
or
cwtl
inc
nop
je
mov
out
out
fs
pushl
rolb
outsb
jno
mov
aas
adc
jp
add
jmp
lea
inc
aaa
lds
push
xor
fldt
cmp
popf
mov
pop
sub
nop
out
stc
into
movsl
jno
int
jae
dec
addr16
dec
adc
shll
jbe
xor
sbb
ds
push
mov
sarb
add
and
adc
addr16
push
pop
testl
xor
or
fs
pop
jge
or
daa
inc
dec
xchg
lds
or
ljmp
mov
xor
cmpsb
push
mov
lods
mov
js
in
add
mov
addr16
lods
jns
add
js
sarb
rorb
aaa
cmp
jg
sbbb
dec
inc
data16
movsb
jg
push
inc
pusha
mov
lock
push
sbb
fldcw
test
sbb
popa
pop
sbb
popf
dec
fsubrl
xchg
das
clc
mov
jae
push
mov
lock
push
mov
adcb
shrl
fldt
mov
rol
test
or
int3
inc
add
adc
loope
mov
and
xchg
adc
mov
and
xor
clc
xchg
subb
mov
inc
add
shrl
int
and
pop
iret
in
add
pop
je
call
lods
xlat
mull
or
out
mov
or
jge
int
outsb
adc
int3
push
das
popa
scas
or
pushf
orl
jl
push
push
mov
mov
sub
loope
orl
je
mov
mov
arpl
and
jno
mov
dec
cwtl
mov
mov
arpl
cs
xchg
jne
pop
outsb
xchg
inc
xlat
push
lahf
out
mov
sub
das
fnstcw
push
mov
clc
sbb
ds
pop
loop
cmpsl
jne
inc
sbb
fidivrl
pop
rcl
cmpsb
repnz
imul
and
shlb
imul
add
bound
mov
inc
imul
cli
mov
mov
xchg
cmc
lret
cwtl
or
lods
sub
mov
js
nop
int
sbb
adc
cmp
or
sub
xchg
mov
adc
inc
js
adc
pop
lock
jne
sub
loope
inc
dec
cltd
push
fldl
xor
stc
testl
ljmp
je
pop
xor
xchg
xchg
rolb
mov
adc
xchg
inc
pop
xor
incl
adc
add
fdivrs
or
shrb
add
icebp
adc
mov
pop
jns
push
testl
insb
es
mov
mov
ss
sub
mov
mov
insb
outsl
in
mov
loope
repnz
fs
outsb
sbb
mov
adc
xchg
mov
adc
mov
inc
pop
pop
push
mov
lock
lods
mov
pop
scas
sub
jo
jecxz
fldt
pop
mov
pop
pop
cmp
mov
roll
icebp
mov
mov
dec
push
loope
hlt
orb
jns
sub
add
sbb
pop
adc
int3
mov
mov
sbb
loope
fisubl
pop
push
adc
mov
repnz
xchg
sub
cmpsl
int3
fstpt
arpl
jmp
jle
xor
shll
push
cmp
inc
sub
xchg
or
adc
ret
out
dec
adc
inc
push
and
and
idivb
ljmp
icebp
cltd
scas
outsl
fwait
xchg
inc
shl
repz
je
dec
mov
inc
aaa
fwait
aad
into
scas
imul
aas
sub
mov
sbb
mulps
push
jns
add
test
mov
orl
xor
lock
add
xor
cmpsl
movsb
repz
stos
or
mov
ror
push
ret
movsl
and
mov
sbb
out
dec
shlb
test
daa
xchg
pop
inc
in
hlt
loopne
mov
leave
xchg
or
push
imul
scas
in
sbb
div
mov
dec
mov
pop
push
dec
shr
mov
leave
jae
sub
xchg
int
or
into
xchg
mov
rcll
iret
rcrl
out
in
inc
push
shlb
cmp
mov
mov
mov
lods
mov
adc
ret
test
outsl
cli
aaa
push
clc
lcall
push
push
lret
xchg
and
adc
sbb
int3
inc
jle
mov
push
push
push
shrl
in
push
xchg
iret
jge
push
ds
jbe
ficoms
in
push
lods
push
jno
sarb
ret
mov
cmp
ret
shl
lds
mov
inc
add
out
insb
jns
jnp
mov
dec
subl
sub
or
andl
cmp
jb
stos
mov
push
sbb
je
pop
mov
dec
jl
ret
cwtl
into
addr16
mov
xchg
and
dec
sbb
dec
pop
fisttpl
jo
mov
ds
mov
jmp
jmp
mov
imul
dec
imul
mov
inc
cmp
push
popf
dec
std
shlb
aaa
loope
adc
pop
mov
sub
mov
cld
push
cmp
lahf
cmp
daa
add
mov
mov
pop
fcos
push
shlb
add
out
fsubrs
repz
out
and
adc
sub
mov
cmc
jnp
iret
jge
push
sbb
fwait
pop
pushf
dec
arpl
cmc
jle
mov
in
jecxz
rolb
stc
stos
data16
push
xor
or
jns
dec
and
add
and
std
or
fsin
into
xor
pop
into
movsl
adcb
mov
mov
xorl
inc
lods
jnp
cmp
stc
add
dec
lods
xchg
dec
xor
in
lea
add
push
dec
nop
add
push
push
fdivs
sub
xchg
test
xchg
in
cmp
sbb
lret
mov
or
push
cwtl
imul
leave
push
pop
icebp
push
movsb
jp
mov
in
sbb
sub
jne
into
mov
or
aam
mov
pop
cmc
adcb
enter
mov
pusha
adc
mov
aaa
push
lds
xor
push
adc
add
push
addr16
mov
in
fs
imul
repnz
lahf
out
inc
cmp
cmp
js
or
xchg
or
mov
jp
mov
cmp
jb
cmpsl
or
xorl
sub
inc
leave
and
and
push
lret
fiaddl
xor
inc
xchg
test
and
sub
lods
cmpl
mov
les
push
cli
out
cli
dec
mov
xorl
mov
dec
push
or
xchg
mov
push
popa
lds
lret
cmp
mov
jle
outsl
out
fwait
push
xor
cmp
xchg
mov
mov
ljmp
dec
jae
pop
cmp
adc
push
cmp
jg
addl
push
jb
pop
mov
lret
ret
inc
push
add
push
jno
bound
lds
xor
xchg
icebp
shll
jp
sub
cli
cs
ljmp
dec
sbb
or
push
add
cwtl
xor
push
test
shll
sbb
inc
inc
xor
popa
ret
push
push
leave
shr
add
ret
adc
push
out
cld
int3
aaa
sbb
fcomip
imul
or
shrb
lds
jno
pusha
xchg
loop
mov
out
ret
or
fisttpl
add
add
push
in
pop
test
add
in
and
mov
imul
inc
lahf
push
add
jns
popf
or
les
xchg
cwtl
cs
ja
sbb
dec
xor
clc
ret
pop
mov
sbb
sbb
or
mov
dec
jmp
mov
jbe
in
insl
jmp
jae
xor
out
add
sub
ljmp
call
push
adc
fs
fcomps
imul
mov
sbb
cmp
and
test
loop
aam
shrl
add
outsb
cmp
adc
outsb
ja,pt
xchg
fildl
jle
sub
xchg
rcrl
dec
aad
test
cli
cmp
aaa
inc
popf
int3
push
sbb
push
cmp
adc
xchg
ficoml
sarl
add
mov
imul
fistpll
jo
fstpl
jb
mov
or
pushf
testb
test
aam
lcall
mov
pop
dec
xchg
inc
pusha
aas
out
pushf
dec
das
jecxz
push
mov
adc
leave
and
sarb
test
mov
fdivs
jns
hlt
jp
fisttpl
mov
pop
mov
push
and
aas
mov
loop
adc
xchg
mov
int
sub
jbe
es
inc
sti
subb
mov
push
js
pop
lea
int3
xchg
cli
dec
xchg
fisubs
xchg
popf
adc
push
enter
sti
sbb
or
jnp
enter
fsts
int
and
adc
add
dec
push
clc
pop
fadds
pop
cld
push
imulb
jle
push
jle
test
aas
hlt
fwait
dec
rcrb
test
mov
cld
xchg
lods
sbb
jo
outsl
ja
sub
lds
inc
sub
imul
ret
xchg
mov
jno
aas
ljmp
adc
push
iret
outsb
add
or
xchg
add
or
push
jg
les
xchg
lea
inc
shrl
mov
int
stos
pop
pop
xor
stc
jp
cmpsb
lds
neg
cmpsb
int3
lods
push
mov
dec
sub
jge
cli
subb
lods
jle
rorb
in
xchg
imul
hlt
mov
push
xchg
jne
lret
push
sub
lahf
or
test
dec
andl
fs
sub
xchg
mov
inc
cmc
nop
inc
mov
emms
add
mov
sub
cmp
adc
sub
and
sub
adc
push
js
addl
jb
jle
nop
push
mov
sub
les
int
test
inc
dec
lret
jo
loopne
add
xor
stos
insb
push
inc
lahf
dec
cmp
mov
sub
mov
outsl
cld
inc
mov
jbe
stos
mov
fldl
leave
addr16
mov
pop
mov
xchg
cmp
inc
movsb
cs
out
lret
xor
loopne
js
lea
out
loop
cmp
ficoms
pop
pop
repz
lock
orb
lods
xchg
pop
test
cwtl
lds
cltd
push
xchg
or
or
out
test
add
stos
push
lea
bound
jno
mov
lea
lods
call
sub
ljmp
ja
inc
push
mov
xlat
jnp
sub
ret
rclb
pop
adcl
cmp
or
jp
aad
es
xor
adc
pop
jns
pop
dec
scas
sub
inc
pushf
imul
lret
dec
sti
inc
mov
inc
test
loope
jnp
lea
in
cld
aam
imul
and
scas
out
fdivs
pop
mov
adc
cmp
jbe
fcoms
lods
stc
in
xchg
mov
lcall
pushf
or
lret
or
mov
out
mov
leave
movsb
fmuls
jmp
addr16
and
popf
sahf
in
xchg
pop
and
cwtl
inc
sub
add
jnp
popf
mov
sub
ss
sub
addb
push
cmpsl
lds
jno
fistps
xchg
jbe
xchg
and
mov
add
cmp
adc
push
jae
sarw
xorl
in
stos
rorl
in
fnstsw
inc
sub
clc
fsubrp
push
daa
add
imulb
cmp
adc
fwait
call
fs
es
jbe
mov
mov
xor
adc
add
cmpsb
ljmp
ja
mov
jae
shl
mov
jecxz
or
mov
mov
ret
mov
mov
ret
mov
aaa
xchg
inc
outsl
and
ret
sbb
popf
mov
sbb
inc
pop
cwtl
and
in
jnp
arpl
or
sbb
test
pop
lcall
xchg
xchg
aam
jnp
mov
xor
push
xor
hlt
sti
fmul
js
or
outsb
and
or
jmp
xor
push
xchg
lods
out
insl
nop
inc
xchg
movsb
imul
orb
out
popl
orl
in
lods
ss
jle
iret
cmp
mov
rcll
loope
xchg
sub
sarb
cmpsl
xor
mov
popa
fistps
daa
xor
push
adc
sub
cmp
mov
jnp
mov
xchg
testl
xchg
ja
xchg
popa
dec
sbb
push
push
mov
xchg
aas
mov
add
or
adc
cmp
mov
push
sbb
imul
fistl
mov
adc
add
lock
addl
cmc
insl
push
test
jp
ja
push
pop
fistps
jns
mov
pushl
push
pop
idivb
xor
in
test
xchg
or
leave
daa
mov
xchg
out
pop
cltd
mov
std
mov
movsl
xchg
aaa
les
lods
cmp
dec
adc
push
shrb
iret
sti
ficoms
jle
xor
mov
nop
sub
nop
shrb
pop
mov
arpl
cmp
inc
mov
repz
je
aaa
lahf
in
dec
xchg
pushf
je
nop
mov
idivb
call
fucomip
push
push
and
lods
mov
ljmp
loopne
addl
mov
call
jnp
out
test
push
push
xchg
mov
movsl
lret
mov
cmp
jmp
test
lods
xchg
rcrl
pop
iret
sub
lods
scas
mov
fstl
or
lock
or
shrl
add
fisubl
aas
in
mov
cwtl
pusha
ja
leave
std
ds
aas
dec
pop
nop
push
jmp
int
mov
fmuls
mov
stos
push
inc
push
xchg
or
cltd
adc
push
lcall
push
and
ret
out
mov
rclb
push
pop
pop
int
jno
mov
sti
or
loope
mov
xor
ret
test
mov
shll
stos
dec
rcl
push
mov
mov
leave
and
xlat
fisubs
mov
testl
or
adc
or
xchg
push
jne
cmp
or
in
loop
into
or
arpl
pusha
pop
pop
push
sub
xor
lods
rcrl
sbb
ret
enter
ss
lret
mov
test
pop
sahf
dec
in
int3
jbe
stos
inc
movsl
mov
test
outsb
out
leave
sbb
fistl
xchg
adc
daa
fnsave
sbb
xchg
insl
repz
jmp
lcall
add
mov
addl
stos
push
mov
in
push
cwtl
push
mov
cmp
mov
push
je
sti
gs
pop
inc
enter
push
adc
mov
push
dec
pop
lret
and
lea
lods
out
push
or
adc
mov
cwtl
mov
mov
pushf
mov
xor
pop
sahf
or
out
leave
test
mov
repnz
jnp
and
adc
insl
adc
ds
imul
lcall
fistpl
in
in
lea
pop
loop
or
cmpsl
ja
icebp
push
sub
rcl
in
fldl
ja
inc
lds
dec
scas
mov
js
dec
pop
mov
inc
mov
movsb
jae
lcall
adc
push
dec
insb
lret
fistps
loopne
cwtl
scas
roll
inc
mov
fisttps
cmp
scas
xchg
cmp
push
out
pop
xchg
sti
sub
and
sbb
imul
cmp
cmp
in
xchg
fidivl
pop
fwait
loopne
ds
insb
imul
jl
loop
fistpll
xor
lret
cwtl
mov
popf
cmp
jo
mov
cmp
jg
enter
dec
add
fcoms
xchg
std
inc
xchg
ds
fsubs
movsl
lock
mov
repz
stos
inc
sbb
sub
jo
in
or
enter
sub
push
cwtl
mov
inc
pop
clc
sbb
mov
and
test
jo
jne
leave
mov
fxch
jnp
dec
fdivl
inc
vmovntps
js
mov
inc
aas
add
clc
sbb
inc
xor
nop
sbb
add
adc
pop
clc
add
inc
jge
push
or
pusha
mov
fnstsw
xor
sub
cmpsb
aam
jge
xor
add
mov
aad
sbb
popa
and
lret
xor
movsb
mov
cmpb
cmp
data16
inc
mov
out
iret
repz
push
sti
dec
mov
loop
xor
cmp
int3
mov
lea
pop
mov
mov
mov
shl
push
lret
cmp
dec
mov
xorb
aam
pushl
sbb
mov
sub
cmp
outsl
cmp
pmulhuw
lret
lret
cmp
mov
push
add
push
pop
shlb
and
and
lods
adc
out
test
adc
dec
push
je
popf
jae
push
mov
push
ss
add
xor
add
mov
dec
xchg
cmpsb
scas
sbb
aaa
bound
vphaddubq
popa
sbb
mov
gs
test
repz
and
xor
sti
mov
imul
fdivr
and
out
das
xchg
or
mov
pop
je
sub
push
insb
insl
lret
xor
test
pop
lds
and
mov
fs
iret
mov
or
leave
sub
leave
push
arpl
xchg
sbb
stos
stos
xchg
and
sahf
push
test
mov
hlt
dec
inc
push
mov
push
pop
push
movsb
push
orb
jae
jl
push
xchg
pop
mov
ja
dec
mov
gs
inc
mov
push
dec
push
mov
mov
xor
or
adcl
fsubrp
sub
pop
test
add
pop
add
cmp
imul
pop
cmp
ret
loopne
nop
mov
jg
mov
jg
sub
xor
shll
cmp
mov
or
adc
jmp
fbstp
push
cmp
sar
outsb
in
or
adc
cmpsb
or
mov
push
adcb
xchg
js
addb
sbb
sbb
cmp
add
arpl
inc
inc
imulb
sub
shll
mov
scas
dec
push
lods
shlb
test
jo
sub
jge
call
test
mov
test
adc
mov
data16
push
pop
mov
jno
push
or
into
cmpl
out
ljmp
push
aaa
addl
sub
daa
cmpsb
loopne
add
js
xchg
in
out
test
test
in
inc
test
loope
xor
lcall
test
add
repz
and
inc
cmp
insl
dec
mov
push
rolb
fcoml
imul
cwtl
and
iret
insl
pop
mov
mov
dec
mov
xchg
fsubrl
cs
pop
pop
inc
mov
sub
xchg
in
inc
in
in
inc
cmp
shrb
mov
and
por
addr16
ret
xchg
aam
dec
ja
in
cmp
or
into
or
je
add
inc
push
dec
fs
les
cmp
dec
fcompl
xchg
mov
dec
pop
cmp
loopne
xchg
and
pop
or
ficoms
stos
dec
adc
mov
aaa
dec
and
scas
mov
mov
std
sub
jnp
sbb
or
mov
xlat
out
inc
in
xadd
push
pop
dec
clc
cmp
hlt
pop
fimuls
sbbb
sahf
sbb
sub
and
das
mov
pop
xchg
lcall
xchg
jle
lods
sub
sahf
shrl
push
stos
dec
inc
push
ja
pop
xor
add
mov
push
lahf
pop
cmc
lret
xor
pushf
popa
push
lret
mov
in
lcall
xor
test
repnz
add
add
sub
pop
or
dec
cwtl
jns
addr16
dec
mov
fnstcw
push
and
imul
inc
popa
push
adc
int
rorb
mov
xchg
addr16
sahf
adc
cmc
data16
int
mov
add
add
lds
lahf
and
js
stos
daa
sub
xor
inc
mov
push
in
lods
popf
jge
ds
xchg
inc
jne
xchg
adc
inc
or
ja
inc
outsl
cmp
sti
xchg
push
ss
negb
loopne
dec
pop
mov
popa
inc
add
jp
aam
mov
pop
dec
mov
das
lahf
xor
mov
cli
adc
pop
gs
xchg
add
inc
nop
aad
fwait
nop
xchg
adc
cmp
xchg
clc
xchg
xchg
inc
cmp
push
movsb
dec
aam
xlat
mov
mov
pop
aas
or
insb
cwtl
lock
pop
jbe
in
or
jecxz
and
fisttps
mov
push
and
test
xchg
sbb
adc
add
push
xchg
and
xchg
in
sbb
dec
push
sub
sbb
test
inc
sub
inc
push
shlb
fimuls
pop
inc
lret
sbb
push
fisttpll
aas
rorl
popa
add
mov
in
push
movsb
inc
dec
push
imul
aaa
add
outsb
inc
xchg
into
out
clc
fdivrl
push
gs
decb
scas
xchg
jmp
mov
lods
mov
jne
inc
add
aad
fnstsw
add
xor
mov
adc
cmp
jmp
cmc
sahf
fimull
adc
ja
add
jg
push
pop
je
fisubs
icebp
jle
frstor
cmpsb
daa
adc
push
pop
addr16
dec
xor
loop
pusha
adc
imul
push
cmc
push
and
divb
push
pop
mov
sub
cmp
daa
xlat
les
mov
les
xchg
ds
and
cmp
lcall
cmp
inc
insl
jle
dec
xchg
pop
sahf
je
lock
lret
push
aam
lret
push
dec
ss
in
and
add
mov
cltd
jmp
cmc
and
cmp
adcb
cmpsb
inc
test
sub
mov
xchg
into
adc
cmp
jle
push
loope
add
sub
cmp
adc
jge
cmp
mov
mov
dec
shr
test
es
jmp
push
mov
xorl
mov
movsl
mov
pop
andl
imul
test
or
push
push
scas
jno
test
loope
cmc
fnsave
lock
ds
dec
jmp
add
or
out
add
ss
ja
add
cmp
lcall
sbb
repz
push
into
rolb
out
fnstenv
mov
orb
sahf
adc
arpl
pop
loop
popa
cmpsb
pop
adc
dec
sbb
lods
pop
ret
loopne
hlt
mov
testb
out
shrb
scas
movsb
pusha
push
inc
push
sub
popa
dec
mov
xor
mov
fistl
clc
int
xor
add
outsb
push
aad
insb
jmp
ljmp
pop
xor
mov
jmp
std
xor
and
shl
or
push
cld
adc
or
lods
out
mov
repnz
out
in
push
popa
cmp
cmpsl
dec
clc
xorb
mov
mov
xlat
mov
mov
mov
sub
aaa
cmpsl
inc
xchg
arpl
sbb
jo
mov
insb
xchg
xchg
in
mov
loop
sbb
xchg
and
lds
pop
iret
hlt
mov
inc
stos
push
jecxz
jbe
mov
int
outsb
mov
pop
xor
push
xor
inc
mov
int3
inc
mov
push
xchg
arpl
stos
xchg
pop
and
cmc
adc
and
sub
jae
sbb
sbb
adc
mov
enter
repnz
shll
pusha
cmp
mov
mov
insb
add
aas
or
add
popa
mov
ss
and
lret
lahf
arpl
inc
and
popa
add
or
mov
mov
popf
adc
dec
mov
cmp
jno
ds
xlat
test
fildl
xor
scas
mov
jb
incb
adc
aas
insb
dec
rcrl
test
shl
pop
jmp
es
lock
ljmp
xchg
je
xchg
cltd
xchg
xchg
popf
fwait
outsl
mov
cli
enter
clc
dec
pop
xchg
jnp
out
sti
addl
out
xchg
movsl
xor
dec
aad
xlat
shlb
mov
es
fidivrl
es
fcmovnu
push
movsb
dec
test
pop
enter
xchg
mov
pusha
daa
div
daa
add
arpl
divb
or
andb
cmp
fisubl
dec
xchg
mov
dec
adc
mov
inc
in
out
cltd
and
or
xchg
nop
pop
sti
dec
ss
movsl
jno
orl
lahf
leave
jg
stos
lds
pop
repz
in
dec
repz
jae
push
mov
mov
icebp
mov
mov
push
mov
and
lea
push
dec
in
and
cltd
cmp
outsb
into
or
push
sti
popf
jns,pt
push
mov
mov
jae
xchg
dec
xor
or
jl
push
xchg
mov
sbb
sub
or
pop
movsl
fbld
xchg
dec
cmp
push
push
pop
and
xchg
inc
in
or
pusha
es
rcrl
mov
cmp
test
sub
cs
dec
xor
mov
dec
jp
fsts
cmp
and
mov
pop
cmpsl
rclb
daa
add
sarb
inc
xchg
mov
iret
stos
lods
jae
daa
pop
pop
jp
mov
shrl
dec
ljmp
pop
sub
xchg
or
inc
vpsubsb
dec
push
add
pop
xor
movsl
scas
fwait
lock
in
out
mov
cmp
loopne
aaa
js
insb
mov
clc
push
ds
inc
sbb
xor
mov
icebp
jge
mov
aad
sbbl
and
cmpsl
test
mov
out
fwait
xchg
out
or
addr16
in
xchg
out
into
adc
xchg
adc
mov
out
les
popf
adc
jbe
sbbl
cld
cmpsb
aad
cmpsl
lods
ficoml
loopne
popf
xor
movsb
sbb
jns
pop
xor
fisttpll
sarb
sub
ret
into
mov
add
inc
popf
and
lock
xor
push
fldcw
xor
cwtl
xor
fisttps
test
xchg
aas
inc
dec
or
aaa
out
outsl
dec
jl
push
mov
jno
loopne
add
test
icebp
jns
inc
or
nop
stc
dec
add
sarl
aam
call
popf
xor
mov
pop
outsl
stos
adc
mov
popf
cmp
xor
pushf
mov
int
dec
pop
ret
jp
ret
stos
add
sbb
xlat
sbb
jge
divb
imul
sub
jl
mov
adc
fists
test
mov
pusha
push
pop
imul
shll
pop
or
xchg
sbb
arpl
scas
jmp
push
fucom
outsb
fldt
sahf
cli
add
push
popa
sub
shl
xlat
lods
cmp
inc
pop
test
fildl
int
xor
or
in
sbb
popa
subb
mov
shll
xchg
or
xchg
fstpt
sub
pop
jp
sbb
imul
lahf
inc
ror
into
xor
push
rcrb
and
into
repz
fldl
call
jecxz
frstor
sti
out
mulb
fwait
repz
sbb
cmp
in
adc
mov
jnp
fs
add
fisubs
jns
push
fsts
sarl
cmp
push
std
je
and
ljmp
out
pop
sub
mov
std
dec
xlat
xchg
cmp
inc
out
icebp
push
add
sti
mov
sbb
xor
xor
jno
push
into
mov
xor
frstor
mov
push
jp
ficoms
or
imul
mov
jo
push
jle
mov
push
sub
and
sbb
and
and
shrb
push
out
insb
jge
sub
pop
push
das
adc
cli
icebp
shll
outsb
or
push
adc
test
imul
push
pop
mov
sti
nop
inc
movsb
scas
idivl
xor
cmpsb
push
roll
inc
dec
add
fnsave
dec
add
je
pop
ds
mov
xlat
fcom
ret
gs
sbb
sarl
lcall
lcall
xchg
test
sub
mov
mov
cmp
iret
pop
push
scas
in
fstpt
out
push
out
jmp
mov
or
and
frstor
shlb
nopl
sub
inc
stc
pop
xor
popa
mov
add
loopne
fisubrs
addb
mov
imul
xor
ds
mov
loop
call
mov
xchg
and
popl
test
push
or
sbb
mov
fldl2e
jl
scas
aaa
nop
ljmp
int3
adc
xor
cmpsb
jae
imul
jmp
stc
jns
adc
arpl
lret
ja
fs
mov
enter
outsb
ffreep
mov
mov
add
xchg
sbb
xor
ret
or
insb
cmp
xorb
inc
jbe
fstl
imul
daa
cmp
push
imul
mov
jne
lahf
leave
icebp
popa
repnz
aaa
add
mov
outsl
lods
mov
jge
xchg
fisubl
jp
cmpsb
out
mov
iret
add
inc
addr16
add
movsb
shld
cmpsb
addb
in
cmpsl
aam
mov
scas
mov
out
jle
cmpsb
cmovs
inc
leave
and
mov
and
fidivrs
inc
dec
test
mov
pop
add
ror
addr16
dec
popf
push
and
insb
and
and
push
movsb
xchg
loop
xchg
fcomps
fmulp
cmpsb
movsl
inc
cli
push
pop
loop
fisubrl
lret
mov
dec
xor
push
sahf
aas
lcall
jo
jo
out
pop
sub
xchg
xchg
ljmp
leave
sahf
scas
roll
sbb
js
jle
xor
or
js
jl
jecxz
adcb
sbb
sbbb
cmpsb
outsl
negb
adc
jo
stos
rol
pop
rolb
or
cltd
mov
sti
jo
mov
flds
jnp
icebp
mov
mov
jge
sbb
imul
mov
mov
mov
les
out
mov
out
xchg
scas
pop
jp
repz
outsb
jecxz
cld
lods
lret
enter
fimuls
jb
xor
sub
or
in
xlat
mov
dec
lods
pop
push
or
call
popf
enter
inc
std
iret
mov
pop
xchg
out
ror
inc
shlb
inc
imul
sub
mov
jg
jmp
cmp
ret
ret
and
aaa
pop
pop
int
loop
js
mov
loop
push
rol
jle
push
sub
cld
dec
pusha
div
and
mov
sbb
sbb
fstl
test
push
repnz
test
mov
out
lds
or
push
xor
rolb
sub
dec
cmp
les
mov
adc
dec
add
add
push
jp
shl
std
mov
ret
mov
repz
push
and
pop
jb
into
adc
les
dec
icebp
add
xor
mov
add
and
clc
sub
nop
and
xor
data16
insl
xchg
inc
aaa
mov
jnp
fdivs
mov
mov
pop
or
sub
add
adc
aaa
lods
pop
and
stc
inc
lods
lods
dec
aad
enter
loop
fwait
pop
out
popf
mov
fnstenv
fwait
ds
jecxz
dec
fs
jl
lds
mov
hlt
cmp
mov
sub
nop
mov
mov
mov
xor
hlt
imul
loopne
ret
jb
in
data16
xor
mov
jg
ret
sbb
and
in
mov
and
test
mov
iret
js
jg
push
sub
popa
or
shlb
pop
addr16
add
cmp
push
push
lret
lret
leave
lcall
adc
loope
mov
out
or
lcall
sahf
adc
js
out
add
sbb
je
push
pusha
loopne
push
push
ficoml
inc
pop
aad
push
jge
jmp
xor
pop
cmpsl
dec
xchg
mov
loope
adc
fs
lret
and
or
adc
mov
test
mov
xchg
imull
cs
jl
pop
adc
push
out
int3
insb
ret
cmpsl
mov
test
mov
outsb
jne
daa
jae
sahf
or
loop
ficoml
pop
push
movsl
jo
adc
cmpl
sbb
loope
jmp
test
cmpsl
jbe
fmuls
in
rcrl
push
mov
imul
popa
fmuls
aas
pushf
dec
push
sub
cld
sub
mov
jnp
mov
das
cld
jae
push
mov
call
int3
jae
mov
outsl
inc
sarb
dec
repnz
loopne
adc
rorb
hlt
das
hlt
mov
inc
cmp
xchg
es
hlt
into
xlat
cld
cmp
jne
cmp
sub
test
push
out
cltd
rcl
adc
inc
movsl
inc
clc
sbb
imul
bound
rcl
xchg
daa
icebp
dec
pop
mov
sub
shll
mov
cltd
pop
inc
iret
sub
inc
cmp
push
cmp
jae
testb
ss
mov
and
push
mov
pop
inc
sub
push
je
aam
in
inc
imul
push
mov
pop
inc
mulb
sbb
arpl
and
jmp
lds
pop
sub
pop
mov
popf
sbb
or
sbb
jne
dec
add
sub
cmp
ds
dec
fistl
sub
mov
cmpsb
ljmp
loope
sar
mov
out
adc
cmc
dec
jno
or
lods
dec
mov
loopne
sub
flds
sbb
cmc
scas
jns
xor
in
cmpsb
and
sbb
xchg
lret
pusha
mov
inc
sahf
cmpsb
std
mov
adc
and
loope
lds
notl
popl
and
out
cmova
test
fimuls
dec
jl
or
mov
fistpll
mov
std
mov
lock
xlat
adc
inc
imul
movsl
cli
mov
div
js
call
jmp
out
bound
in
jle
push
or
and
sub
ljmp
pop
lods
adc
std
int3
loop
sub
imul
xchg
ljmp
sbbb
sarl
shrl
and
pop
push
xchg
inc
push
movsl
call
out
cmp
xor
inc
mov
add
push
push
pushf
xchg
imul
push
inc
add
lds
cmp
and
push
cmp
jne
xchg
inc
fcomps
test
ret
mov
mov
lds
fimull
pop
scas
sbb
repnz
fadd
dec
push
jo
test
dec
les
cmp
lock
jl
push
cmp
cwtl
xchg
stos
or
mov
cmc
jne
insl
clc
enter
mov
loopne
int
push
roll
cwtl
rcrb
cmp
ficomps
push
jle
jb
mov
push
es
xchg
adcl
lods
or
ret
movsl
or
popf
inc
testl
sub
imul
xor
push
leave
cwtl
xchg
inc
jns
mov
movb
sahf
lock
sbb
out
in
test
neg
jl
in
dec
cmpsb
popf
or
sbb
jmp
cmp
daa
mov
lds
test
pop
das
int
pop
jp
mov
push
out
cmp
cmp
jbe
shl
xchg
push
or
and
lea
inc
lret
js
sub
inc
pop
jg
std
push
cmp
mov
stos
sub
rorl
aas
lahf
cmpsb
shrl
sbb
sahf
mov
pusha
dec
add
sub
mov
add
lds
xchg
pop
jecxz
inc
ljmp
jb
fnsave
jmp
pop
in
adc
mov
popa
adc
orl
es
int
lahf
lock
mov
jno
mov
cld
test
int3
ror
cmpsl
mov
in
push
mov
cli
fistps
add
or
test
fwait
loope
inc
outsl
jb
xchg
bound
push
mov
nop
sbb
lahf
in
and
dec
mov
js
or
scas
xchg
or
mov
aam
cmp
xchg
xchg
shl
loop
iret
in
adcb
xchg
pop
insl
fnstenv
je
mov
push
aam
out
cmp
fcmovnbe
popf
cmp
adc
out
jle
fmulp
icebp
jne
nop
dec
xlat
push
idivl
xchg
in
mov
mov
pop
push
divb
cs
or
xchg
iret
xchg
jae
sub
outsl
ret
mov
pop
pop
jmp
bound
mov
sahf
pop
cltd
in
pop
mov
inc
enter
scas
flds
mov
lcall
xor
jecxz
fwait
pop
imul
into
add
movsb
push
aas
sub
and
jge
add
jl
mov
inc
pop
test
outsl
sbb
sbbl
idivl
or
addb
movsl
outsl
mov
mov
dec
testb
xor
cmp
inc
fdivrl
push
sbb
xchg
es
add
inc
ds
repz
push
push
cwtl
out
xor
pushf
xor
cld
push
mov
xchg
stos
iretw
inc
rol
or
pop
test
or
gs
sub
xlat
sti
stos
pusha
xor
lock
dec
mov
xchg
int3
or
repnz
pop
mov
ja
inc
pop
fwait
out
enter
imul
push
filds
mov
mov
cltd
repnz
xchg
lods
or
push
pop
fnstsw
test
jle
cmpl
rolb
sbb
pop
scas
xchg
test
int
lret
std
fisubrs
sahf
ror
mov
jge
out
lcall
inc
iret
test
out
push
add
mov
jl
mov
mov
jae
aas
add
das
xor
mov
cld
dec
jg
std
adc
fisttpl
insl
outsl
das
sub
jmp
xor
jnp
push
popa
inc
in
sub
cmpsl
out
mov
rcrb
repz
mov
fwait
mov
sub
subb
push
gs
imul
movsl
or
or
iret
lret
int
mov
and
lock
mov
fsubrl
jae
dec
cmpsb
xor
xchg
fldcw
addr16
test
fiadds
jmp
mov
xor
icebp
add
pop
sbb
fadd
xchg
mov
push
sbb
aam
xlat
fsubrp
aas
lea
xor
sbb
cmp
push
movsl
push
rolb
out
jne
add
pop
ret
inc
in
jge
dec
sbb
ss
fwait
jl
sbb
dec
movsl
das
imul
push
mov
push
call
pop
sbb
and
dec
and
fstps
lret
aam
pop
fnclex
push
mov
push
xorb
mov
dec
inc
ret
cmp
or
push
ds
mov
mov
shl
pushf
add
pop
mov
adc
stos
sub
pop
or
imul
inc
cmp
mov
jecxz
mov
xchg
mov
jge
inc
aad
cmp
loope
cwtl
xchg
lds
cmp
xchg
fdivr
sahf
rclb
cmpb
jae
das
fwait
orl
sub
cmc
mov
scas
add
mov
mov
mov
jo
mov
lods
sub
add
xchg
inc
pop
xchg
inc
and
sbb
or
in
dec
mov
scas
mov
movsl
lcall
xchg
addr16
sub
sub
int3
es
lahf
and
popa
mov
xor
xor
pop
adc
cli
in
stos
push
mov
mov
andb
les
mov
xchg
push
rcrl
ss
xor
shrb
or
push
shl
jbe
sub
fldcw
lea
dec
cs
pop
cs
mov
scas
mov
jge
or
dec
lahf
js
push
adcl
cmp
lcall
or
mov
shll
adc
add
mov
cmpsb
ds
pop
lock
cmp
dec
mov
xchg
jbe
enter
jbe
or
aas
adc
jecxz
adc
mov
or
sbb
pop
cmp
sbb
inc
or
aad
mov
bound
mov
adc
cmpsl
cmpsb
jae
jb
cmpsb
out
cli
push
fistpl
outsb
movb
fdivrl
lret
repz
jl
shl
sub
or
jbe
sbb
pop
in
jno
mov
pop
mov
and
ds
xchg
outsb
or
cmp
pop
push
dec
ljmp
lods
call
and
xlat
inc
lea
pop
xlat
ret
jg
in
mov
sub
rorb
fwait
rcl
cmc
out
fcomip
iret
sub
xor
test
and
xchg
xlat
adc
inc
loope
fidivs
bound
add
sbb
adc
push
jae
mov
cmp
std
adcb
inc
push
jecxz
aas
sbb
jl
jbe
cmp
cmc
push
xorb
ja
adc
push
mov
fdivr
push
pop
mov
aam
in
push
mov
outsb
subb
xchg
push
into
fwait
xor
inc
shrl
add
cmp
movsb
cwtl
pop
add
inc
roll
jp
in
cmp
popa
stc
imul
into
mov
xlat
out
scas
adc
rcrl
lods
ds
data16
jne
sahf
sub
mov
or
or
test
dec
cmp
test
or
add
test
call
or
or
frndint
add
fstpl
push
lds
sbb
in
xor
pop
push
out
jae
stos
pop
mov
fists
lcall
pop
lds
sub
orb
fiadds
js
mov
test
sub
pop
mov
lods
cmc
scas
popa
cmp
loope
jge
int
cmpsb
fsts
ja
mov
outsb
inc
jns
jle
rcll
mov
xorl
rclb
cmp
xchg
mov
dec
lahf
or
ret
pop
mov
loop
fwait
jbe
jne
sub
xor
sbb
sbb
cmpl
dec
std
add
lea
mov
mov
xor
pop
and
lea
sbb
cmp
test
icebp
jl
pop
and
lret
sub
mov
adc
xor
ss
stos
clc
sti
cmp
stc
cmp
shrl
ret
adc
push
jecxz
mov
test
pop
dec
data16
pop
fmul
stos
hlt
aas
sub
adc
sbb
fisttpll
mov
sub
lret
out
mov
dec
loope
mov
dec
inc
push
or
cli
movsb
mov
cli
and
jnp
fstpt
xor
bswap
inc
dec
and
lds
xchg
push
les
mov
and
icebp
jnp
mov
cmpsl
pop
into
aam
adc
and
cld
add
mov
es
movsl
into
loop
leave
sbb
push
jmp
pop
ret
imul
pusha
loope
arpl
xchg
xchg
xchg
mov
in
js
xchg
xchg
adc
je
dec
xchg
adc
cmp
ja
idiv
lret
fistpll
xor
lock
jmp
mov
xchg
jl
xlat
aam
cmp
movsb
jg
push
ja
loope
std
leave
cmp
call
adc
inc
or
cmpb
cmc
pop
mov
adc
pop
jg
xchg
adc
out
test
out
scas
inc
or
daa
xchg
fstps
mov
xor
mov
jne
sbb
pop
xchg
cld
test
sbb
stos
movsl
push
imul
mov
xor
jae
jo
sub
lods
and
scas
mov
clc
lret
cmp
stc
mov
add
ss
mov
mov
ffree
inc
es
test
stos
jne
push
mov
cmp
inc
orb
scas
stc
sbbb
adc
dec
insb
add
push
dec
adcl
cmc
xor
push
push
stos
sbb
aas
pop
adc
popf
ja
aaa
mov
es
cwtl
jge
dec
iret
mov
sbb
push
lock
cltd
out
fistpll
movsl
mov
dec
mov
popf
mov
inc
cmp
in
iret
shr
mov
fnstenv
add
jo
cmp
inc
adc
fcmovnb
jae
loope
push
mov
in
mov
adc
mov
stos
repnz
cmp
ljmp
pop
sub
stos
or
rorb
adc
adc
ljmp
fs
fdivrs
call
fprem
adc
in
pop
cmp
mov
mov
lock
pop
test
notl
sti
push
mov
fnstcw
jmp
push
fld
stc
sub
push
push
sbb
gs
mov
jno
or
cmpsb
mov
neg
sbb
out
jae
mov
sub
inc
inc
popa
out
iret
mov
jne
pop
lds
mov
inc
adc
pop
cmp
push
bound
imul
sarl
push
sub
or
inc
xchg
cwtl
test
cwtl
int3
adc
mov
xchg
rcrb
aas
es
mov
scas
es
sti
sbb
pop
addl
ficoml
sub
leave
jmp
aad
xchg
pop
jb
imul
xchg
mov
mov
or
mov
jno
sub
mov
test
popf
jb
jae
push
stos
cmpsb
les
ds
pop
aam
jecxz
imul
ret
les
xlat
sbb
mov
ja
add
sub
mov
cmpsl
push
rclb
sub
test
mov
adc
mov
adc
cmp
jg
dec
out
push
mov
inc
xchg
test
lock
mov
imul
xchg
pop
fimuls
lcall
add
ret
pop
and
mov
or
xchg
cmp
rcrb
and
into
fsubr
mov
mov
mov
lret
cld
lods
cmp
aam
mov
lea
and
pop
enter
dec
pop
cmc
jge
arpl
cmc
data16
imul
sbb
inc
sbb
ja
shl
ficoml
xor
mov
push
ret
movb
sub
out
rcll
in
jno
test
mov
adcl
pusha
pop
or
lods
movsb
imul
push
clc
rcl
jg
popf
pop
insl
iret
adc
pop
repnz
cmpsb
jno
xor
and
mov
and
out
addl
and
inc
sbb
pop
sbb
jb
cmp
cltd
mov
add
sbb
fs
dec
adc
lret
jmp
and
fistpl
gs
scas
or
aam
cmp
aam
popa
fldl
push
xchg
jne
gs
sbb
mov
popf
sarb
fldt
inc
jmp
sub
adc
sbbl
mov
out
je
push
sbb
ja
ret
push
pop
bound
aam
shrl
or
imulb
ret
hlt
out
cmp
mov
test
jg
mov
icebp
lds
mov
loopne
int
cmp
stc
push
push
xchg
scas
mov
mov
sbb
cmpsl
cmpl
daa
push
mov
or
popa
das
sbb
and
and
xchg
outsl
xor
test
xchg
les
mov
fbstp
imul
pop
jge
mov
xchg
ret
jnp
pusha
stc
aaa
inc
outsl
adc
lds
dec
push
mov
cmpsl
jp
pop
add
pop
mov
xchg
es
xchg
stos
xor
xor
push
mov
or
sub
cmp
pop
in
mov
jno
test
js
hlt
sbb
xorb
sbb
push
ret
or
add
mov
int3
mov
stos
cmpsb
sub
testl
dec
and
repnz
xor
dec
and
insb
out
mov
repnz
lods
jno
repz
mov
add
out
mov
sub
ljmp
sbb
jb
or
test
cmp
push
lds
imul
negl
call
in
daa
sti
incb
outsb
jbe
mov
xchg
lahf
add
cmp
test
call
add
sbb
xchg
xor
rcrb
stos
nop
bound
xor
mov
mov
add
lods
clc
nop
inc
push
jmp
lods
notl
mov
ja
push
fdivs
repnz
test
insb
cmp
imul
mov
mov
pop
or
xchg
insb
daa
xchg
fidivl
xor
xor
or
push
add
or
call
sub
mov
aam
sbb
cmp
hlt
les
xchg
shrl
fisubs
hlt
xchg
pop
js
add
lcall
js
and
cmp
out
fimuls
jb
popa
stos
test
and
shrb
pushl
leave
mov
arpl
push
sti
mull
pop
cmp
inc
cli
imul
sbb
pop
add
leave
mov
inc
inc
mov
mov
push
jg
xchg
pop
aaa
stos
shll
repz
sbb
iret
aaa
std
shrl
addr16
xor
dec
pop
aam
andb
add
or
sub
pop
and
das
popa
xchg
in
xchg
mov
mov
xor
mov
das
adc
xchg
mov
mov
jbe
push
and
xchg
xchg
add
cmp
mov
push
jb
or
pop
or
fidivl
adc
xor
add
rcll
add
jnp
mov
xorl
xchg
mov
jmp
mov
xchg
inc
jne
ljmp
dec
adc
mov
mov
add
test
ss
mov
fstl
mov
and
pop
cmp
adc
sahf
imul
xor
sbb
lods
mov
add
lods
push
push
and
push
fsubs
push
add
and
mov
inc
dec
mov
push
jmp
or
mov
cmp
into
inc
push
icebp
mov
inc
cmpsl
das
inc
pop
lret
sub
push
repnz
sub
dec
cmp
jl
push
in
pop
lock
in
dec
mov
push
repz
cmp
sti
mov
test
adc
pusha
fmull
hlt
lret
sarl
cltd
sbb
pop
es
inc
dec
shl
out
add
std
pop
das
adc
dec
push
sub
adc
fildl
ljmp
cmp
fs
xchg
fcomp
lcall
push
mov
pop
pusha
mov
pusha
movsb
sub
fwait
or
pop
jbe
inc
insb
cmp
push
lcall
movsl
cmp
loop
call
daa
sub
inc
push
xchg
xchg
xlat
push
adc
pop
popa
mov
pop
loope
and
or
push
je
enter
push
stos
and
icebp
or
lahf
inc
stos
ret
std
dec
lock
sub
das
rcrl
mov
sbb
hlt
xchg
dec
mov
je
arpl
dec
and
xchg
andl
sbb
int3
movsb
data16
inc
out
imul
daa
cmp
and
sub
push
out
pop
rcll
incl
jg
mov
cs
imul
sbb
scas
inc
mov
std
lcall
ficompl
push
inc
ja
jmp
mov
or
inc
pcmpgtd
inc
lret
mov
in
jle
and
sbb
out
pop
jmp
add
push
dec
ror
fisttpl
jmp
je
xchg
in
jmp
lcall
mov
xor
dec
shl
jb
dec
or
hlt
out
inc
lahf
test
mov
push
mov
out
data16
dec
mov
inc
lcall
pop
aad
mov
pop
lods
sbb
data16
push
mov
cli
push
ja
adc
and
aad
ror
dec
and
mov
dec
or
sub
pop
outsb
sub
add
mov
xor
jle
sbb
dec
or
test
into
mov
ret
xchg
js
mov
jle
faddl
fstps
lds
push
fs
hlt
loopne
rolb
cli
cmpsl
push
jl
daa
jp
xor
call
push
add
sub
out
arpl
stos
mov
jge
repz
push
out
loopne
mov
jge
hlt
add
pop
mov
aad
dec
mov
sub
js
icebp
data16
push
push
mov
jp
lret
mov
fstpt
ret
adc
stc
fucomi
loop
loopne
cmp
shl
loopne
sub
mov
xor
test
cmp
jbe
push
loope
mov
insl
sub
addb
stos
jnp
xor
repz
add
cmc
xchg
add
outsl
sahf
jb
loop
add
adc
imul
sub
icebp
pop
mov
loopne
pop
std
mov
repnz
inc
inc
add
jp
repz
cmpsl
outsb
sbb
js
inc
lret
inc
and
lret
int3
pop
xchg
rorl
add
js
fsts
fs
jl
push
test
je
xorl
bound
scas
insl
lret
push
xchg
mov
add
push
push
lcall
cmp
cs
icebp
pop
pop
sub
jne
ja
xlat
call
das
mov
lret
loopne
out
cmp
into
sbb
xor
movsl
mov
stos
popf
jo
stos
imul
shll
and
push
add
sbb
fisubrl
inc
mov
test
jmp
mov
repz
dec
xor
jo
out
adc
aas
and
mov
push
sub
xchg
jl
loope
loopne
mov
or
cltd
sbb
aas
out
sub
aas
into
sahf
sti
xchg
popa
pushf
jle
pop
subb
jb
sbbl
stc
xchg
adc
daa
xor
rorl
pop
ds
sti
mov
lea
xor
rorl
sbb
stos
in
insb
or
xchg
sbb
in
sbb
mov
xchg
divl
test
sbb
test
or
pop
sbb
add
dec
pop
mov
int3
xchg
and
je
enter
aad
xchg
jno
adc
cmp
mov
fst
dec
inc
test
popa
sbb
aam
ja
push
testb
or
addl
push
mov
sub
sub
data16
shr
or
pusha
jnp
pop
sbb
mov
imul
and
mov
push
mov
jmp
inc
pop
cmpsl
xchg
sbbl
xor
out
cltd
xlat
mov
pop
aad
sbb
mov
mov
xor
cmp
push
or
mov
insb
sbb
popa
lret
out
xor
adc
xchg
xlat
decb
jl
fsub
adc
push
mov
sti
lock
fmull
xchg
push
loop
mov
leave
inc
js
fnstenv
shrl
cvtps2pi
jmp
cmp
jne
fs
iret
jl
xor
nop
xchg
fucomi
lods
cmp
nop
out
xchg
xchg
out
jge
add
popa
push
cmp
jo
aad
inc
mov
pop
cli
xchg
sbb
aad
outsl
mov
dec
add
cmp
std
dec
adc
xchg
pop
in
dec
push
xor
test
lahf
adc
stos
fistps
daa
push
js
mov
subb
xor
sbb
mov
mov
jge
ja
es
sbbl
add
pop
jmp
leave
pop
in
push
repz
dec
cmpsl
and
add
pop
outsb
sub
stos
xlat
jae
push
sti
outsb
cmpsl
shlb
sahf
jo
pushf
flds
fwait
push
imul
scas
sbb
aas
push
scas
notl
fldt
nop
mov
push
aad
jne
jmp
gs
pop
xor
int3
rcrb
inc
jb
mov
mov
sahf
js
jno
ljmp
lahf
dec
fidivl
mov
cmpsb
cmp
adc
sub
lahf
inc
es
jecxz
fadd
push
cmp
ret
movsl
out
lret
imul
jnp
inc
adc
jo
push
mov
sbb
cltd
jecxz
add
in
out
rclb
dec
les
movb
and
jne
scas
inc
es
inc
xchg
into
pop
aam
push
sbb
and
repz
sarl
pushf
movsw
fsub
inc
pop
ljmp
fcmovne
cmp
vpaddq
sbb
enter
or
sub
add
cmp
xor
pop
outsb
gs
into
xor
add
dec
dec
cmp
or
mov
mov
pushf
cmp
daa
call
sbb
test
scas
pop
stos
add
pop
enter
leave
push
pusha
ret
xor
xor
adc
pop
jnp
mov
xchg
push
les
sahf
ja,pt
adc
cmpsb
adc
and
push
arpl
rsm
stc
adc
mov
pop
mov
cmp
into
xlat
into
out
int
shl
xchg
movsb
fbld
or
sbb
push
scas
in
lods
in
loop
pop
inc
fcmovnb
gs
dec
fldcw
mov
sets
or
sbb
add
add
xchg
inc
or
stc
inc
fwait
into
les
mov
imul
test
push
stos
movsb
lahf
pop
testl
pop
mov
jno
dec
stc
in
lret
scas
test
cwtl
mov
leave
lock
in
or
gs
xchg
in
xor
nop
sub
add
cli
ret
stos
aaa
cli
pop
dec
ss
adc
xchg
ret
mov
dec
or
addr16
add
inc
mov
and
add
dec
push
out
and
movsl
pushf
jp
mov
and
mov
test
push
pop
and
aam
pop
push
pop
xor
mov
push
inc
int3
sub
mov
or
lea
test
cli
addr16
push
push
mov
xchg
xor
push
jge
sub
add
sbb
and
push
dec
ds
pusha
inc
nop
and
add
pop
or
mov
pop
xchg
push
xor
jo
and
sbb
cmp
pushf
mov
mov
movsl
mov
xor
sarb
dec
js
dec
mov
mov
out
or
sbb
rclb
movsl
push
pop
push
cmp
xchg
adc
push
and
je,pn
mov
jne
adc
push
lret
clc
cwtl
sbb
lret
sub
pop
and
jno
adc
rolb
pop
fs
rcrl
ljmp
sbb
mov
leave
fsubrl
fcmovnu
lcall
push
in
jle
mov
jecxz
cmp
push
and
jns
jno
add
push
or
test
subl
mov
xchg
mov
mov
push
mov
test
xor
and
loopne
fs
out
popf
pop
xchg
loopne
imul
int3
scas
test
jne
xchg
push
sbb
or
je
push
movsb
popf
inc
jno
pop
scas
mov
movsb
orb
sahf
aas
push
sub
cs
jp
cmp
mov
sub
idivl
xchg
loope
push
pop
sbbb
loopne
stos
cmpsl
and
mov
shll
xchg
ds
adc
pop
out
pop
dec
adc
pop
dec
and
sar
inc
lods
adc
pushf
or
daa
cmp
adcb
int
push
push
andb
pop
mov
leave
and
xchg
add
in
fwait
jbe
xor
or
cli
rorb
dec
or
ret
add
call
adc
and
ret
adc
cltd
cmpsl
mov
inc
insb
jns
mov
jg
mov
int3
pop
pop
aaa
lret
push
lods
mov
sub
iret
pop
xchg
and
loopne
test
cmp
cmc
movsl
lods
dec
xchg
stc
or
cltd
incl
sbb
xchg
jl
fdivl
xor
cmp
xor
lcall
lret
mov
xor
in
jbe
test
lret
into
loop
push
dec
adc
inc
int3
push
sbb
and
mov
ja
arpl
mov
dec
cmp
mov
jo
icebp
repz
adc
enter
add
data16
cmpsl
data16
insl
imul
fadd
jmp
sti
xchg
cmp
adc
test
shlb
lea
scas
aas
out
jp
ret
out
push
cli
fisubrs
xchg
lds
jns
test
nop
pop
aam
push
sub
gs
push
xor
cli
xor
jg
notl
or
dec
repnz
lret
or
push
movsb
cltd
out
movsb
adc
fldt
repnz
lret
adc
mov
test
hlt
ret
pop
pop
pushf
fwait
in
mov
aas
sub
flds
rcll
xor
hlt
shlb
jecxz
inc
aam
inc
push
pop
push
cli
cwtl
inc
add
gs
subb
ret
adc
xchg
ret
and
jnp
fidivrl
mov
pop
pop
bound
fstp
xor
fwait
cmp
mulb
insb
dec
mov
pusha
lret
xor
cmp
cmpsb
fwait
cmp
adc
je
add
sbb
mov
enter
xorl
sbb
les
testb
push
jge
xchg
inc
iret
popa
push
xchg
cmpsl
in
add
xlat
negl
inc
lods
sbb
out
lock
and
xchg
push
xchg
aam
sarb
mov
aas
pop
les
and
dec
testl
ret
pop
sub
icebp
and
push
add
aaa
test
ret
pushf
out
jmp
les
andb
jle
xor
lods
fcompl
outsl
insb
jmp
sbb
sub
add
inc
imul
xchg
mov
testb
inc
and
sub
fnstcw
jnp
dec
add
mov
pop
or
or
pop
jno
test
aaa
cmpsb
mov
shrl
lret
fadd
push
mov
ljmp
pop
mov
clc
sbbb
fnstcw
repz
adc
inc
cmp
movsb
mov
pop
sbb
mov
cmp
jg
cmpsl
ljmp
mov
add
or
rcl
push
push
sbb
cmp
pop
xchg
mov
outsl
inc
jl
xor
xchg
mov
mov
cmp
mov
inc
sbb
pop
cmp
loop
cmpsb
pop
or
mov
arpl
bswap
add
out
loopne
push
mov
mov
aaa
jb
fiaddl
data16
into
stos
mov
lods
xor
inc
inc
insb
xchg
int
pop
sub
adc
xchg
jge
testl
add
sub
dec
in
fdivp
mov
lea
mov
lds
and
in
inc
subw
xchg
fistpll
daa
pop
inc
sar
movsl
je
gs
jne
insb
dec
lds
inc
lds
jecxz
scas
xchg
xor
cltd
adc
in
aad
mov
push
dec
inc
js
xor
rorl
scas
jmp
std
xchg
stos
dec
pop
sbb
push
mov
mov
shll
adc
or
popf
mov
cmp
or
pop
jp
std
xor
in
std
jmp
shrb
dec
aaa
loope
lret
testl
xor
sub
fstl
loop
bound
push
lea
cmp
movsb
pop
jbe
or
and
dec
dec
adc
sub
adc
and
in
orb
pop
and
mov
clc
xchg
and
jbe
sub
nop
setp
out
mov
pop
mov
mov
gs
jl
repz
fldt
jg
andl
rcrb
sbb
out
cmp
mov
mov
pushf
sbb
lock
rcl
shll
mov
icebp
mov
inc
pop
lea
jbe
xlat
rorb
and
loop
test
subl
sbb
push
cld
push
mov
lcall
pushf
hlt
jae
push
add
nop
pop
cs
push
push
xor
in
mov
push
cwtl
mov
cmp
cmp
dec
cmp
mov
pop
add
cmp
sbbl
or
shlb
andl
inc
jns
xchg
cltd
int3
jb
and
dec
sub
nop
add
ds
repnz
jg
pop
std
outsb
icebp
mov
inc
mov
pop
repnz
sahf
out
dec
mov
push
out
addr16
mov
jl
fmull
lret
data16
cmp
or
popa
test
jne
enter
add
push
out
cmp
mov
cwtl
jno
sbb
rorl
xchg
cmp
insb
ror
lret
dec
pop
je
test
mov
andb
add
aaa
mov
and
lods
jg
aad
out
inc
fimuls
xchg
cmpsl
xchg
lods
cmp
push
ret
push
test
loopne
sbbb
mov
jne
xor
jmp
js
pop
mov
cmp
mov
lods
sub
or
xchg
jb
and
dec
jno
test
adc
pop
stos
xor
dec
test
add
popf
clc
and
and
add
inc
mov
inc
push
add
and
xchg
adc
xchg
mov
mov
pop
add
ret
andb
add
jns
insb
inc
sbbl
repz
sbb
dec
adc
dec
xor
nop
lock
pop
out
xchg
and
sub
dec
pop
sub
jp
jne
push
mov
stos
push
add
fisubs
int3
mov
shl
addr16
mov
out
shll
sbb
push
sbb
mov
inc
push
int3
adc
jne
inc
push
push
jno
cmovno
mov
sbb
adc
or
incb
outsb
inc
dec
inc
cli
rorl
rorl
sti
mov
cmp
iretw
lahf
mov
mov
dec
std
push
dec
fisttps
ljmp
ret
sub
dec
mov
cmovo
inc
popf
rorb
push
rcl
dec
test
lods
adc
mov
imul
fnstenv
dec
mov
out
inc
cmp
gs
mov
jno
in
dec
inc
push
add
les
out
mov
lock
pop
xor
and
mov
test
aaa
cmc
add
ds
xchg
add
xchg
rcr
int3
sbb
js
xchg
lods
daa
dec
push
sub
mov
lret
push
nop
gs
neg
in
lods
into
cmp
mov
jecxz
cmpb
clc
dec
sarb
and
lea
push
fwait
sub
cs
test
adc
pop
and
sub
and
mov
ss
mov
inc
addl
int3
daa
add
movsl
inc
or
nop
in
inc
push
jnp
cld
and
fmull
adc
incb
ret
add
rolb
leave
sub
xor
xor
mov
not
loope
mov
add
jbe
and
or
push
pop
push
xchg
testl
or
mov
cwtl
rorl
int
dec
cmc
push
leave
testb
add
xor
cmpsb
je
inc
dec
hlt
out
outsl
test
lret
int3
push
inc
loopne
cmpsb
inc
faddl
fbstp
cli
mov
inc
bound
imulb
rcrl
mov
xchg
xchg
push
and
popa
push
in
and
fwait
fwait
mov
adc
cmp
ret
push
dec
mov
sub
push
outsl
push
add
push
stos
lret
mov
out
scas
cltd
cwtl
mov
aas
aad
testl
sbb
push
mov
push
out
mov
dec
stc
lahf
fsubrp
mov
dec
ljmp
mov
dec
mov
into
aas
adc
pop
xor
push
xchg
popf
push
lret
popa
inc
cmp
pop
dec
cmp
push
push
add
loopne
push
bound
in
mov
cmc
lret
ret
mov
out
add
push
int3
mov
scas
jae
xor
cwtl
sbb
xchg
add
mov
sbb
insb
andb
rorl
push
ja
negb
dec
xor
adc
xor
sub
mov
sbb
jns
sub
jo
pop
mov
add
mov
mov
cmp
dec
ret
popf
push
pop
adc
mov
fnstenv
xor
and
popf
jb
adc
nop
cs
mov
xchg
sbb
jo
test
lods
stos
mov
mov
add
add
repnz
ror
mov
sub
dec
shr
aam
mov
enter
mov
and
pop
inc
push
add
in
pop
imul
and
mov
cli
leave
sbb
shrl
adc
xchg
daa
jns
and
mov
rcr
push
mov
insl
xchg
movsl
fldcw
js
fsubrl
dec
pop
shrb
sbb
int
xchg
mov
icebp
xchg
pop
cmpsb
fcmovb
or
pop
sbb
jnp
cmp
mulb
cmp
xchg
stos
std
popa
imul
sbb
push
inc
fnstenv
sbb
push
rcrb
mov
addr16
lahf
pop
aam
ja
push
fcmove
arpl
xchg
je
insl
pop
mov
sub
xor
mov
push
gs
mov
add
jno
rcrb
cmp
call
xor
pop
dec
mov
fisttpll
out
xchg
test
add
mov
orl
xchg
lea
test
mov
dec
std
add
xchg
cli
push
mov
int
jmp
test
jae
mov
sub
stos
test
add
jb
pop
push
and
add
scas
mov
addr16
lahf
lods
shll
popf
and
jg
ss
mov
jge
xchg
pop
mov
or
mov
add
cmpsl
cld
int
cmp
pop
pop
loope
sarl
out
and
sub
sbb
inc
push
mov
out
ljmp
mov
push
mov
add
add
repz
push
cmc
mov
nop
lea
adc
cli
inc
nop
aam
push
pop
out
aas
insb
aaa
iret
sub
jae
dec
outsb
jl
xchg
fildl
repz
js
add
incl
std
inc
push
xchg
pushf
jp
fwait
push
mov
dec
repnz
andb
add
in
nop
push
pop
dec
cltd
dec
push
dec
lret
adc
sbb
lods
shr
inc
and
cmp
fidivrs
int3
das
push
jnp
clc
lret
mov
pusha
stos
daa
fidivrs
gs
lahf
shr
sub
adc
and
cmp
mov
jmp
and
inc
fdivp
imul
lods
cld
jp
cmpsb
fs
aad
test
and
scas
mov
fsubr
jno
cmp
lock
and
rclb
lock
jae
xchg
dec
jnp
xorb
jmp
push
aad
scas
loope
rep
sarb
inc
push
in
in
ljmp
push
ret
and
leave
lahf
faddl
int3
jge
inc
imul
loope
test
aad
out
dec
push
leave
jns
sbb
push
and
clc
jbe
or
call
lahf
jbe
sbb
cltd
shlb
dec
add
testl
jle
sub
orl
mov
xchg
mov
jnp
push
inc
jp
mov
xor
leave
lds
leave
daa
xchg
lahf
flds
dec
xorl
std
xchg
mov
add
clc
stos
xchg
push
test
test
jmp
nop
int3
or
aaa
ja
cld
out
filds
mov
mov
mov
mov
imul
xchg
dec
xchg
xchg
and
lcall
aas
sbb
fldcw
adc
subl
out
dec
xchg
test
jbe
sbb
xchg
shrl
int3
cmpsl
or
xor
dec
addr16
lret
or
or
lcall
jnp
scas
cmp
int
sbb
sbb
sbb
daa
and
leave
test
cmc
mov
out
mov
cwtl
pushf
data16
out
sbb
leave
xor
lcall
mov
lods
sub
inc
aaa
cmc
push
xor
ss
sahf
cmp
mov
pop
movsl
mov
pop
jge
stos
das
mov
in
sub
je
xor
mov
addr16
push
cmp
loop
sbb
xchg
imul
push
bound
out
sbb
jl
dec
inc
dec
mov
fiadds
cld
sub
scas
sub
int3
push
push
or
adc
fsubl
aam
je
jmp
sub
xchg
test
and
push
dec
sub
cmp
add
jo
sbb
repz
lret
cmp
repz
call
nop
bnd
fisubs
mov
cltd
sub
ds
xchg
mov
outsl
xchg
inc
addr16
mov
inc
pop
cld
jg
jmp
jp
rcll
aam
xchg
jno
mov
enter
adc
hlt
and
jl
icebp
clc
xchg
testb
ret
pop
mov
inc
in
add
adc
push
mov
pop
xchg
aaa
enter
loope
scas
fildll
cld
mov
test
dec
mov
xchg
xor
neg
pop
inc
xchg
ret
shr
add
scas
jne
pusha
cmc
mov
jg
mulb
pop
adc
ret
pusha
pop
mov
mov
stc
call
sbb
mov
sub
rcr
mov
cmp
mov
cmp
push
rolb
sahf
dec
insl
cmp
fsubr
push
mov
test
mov
and
scas
push
xlat
xlat
arpl
sub
lds
jp
sti
pop
mov
adc
lea
jbe
imul
sbb
in
lcall
pushf
dec
add
loopne
out
les
push
pop
sbb
mov
orl
add
xor
xorps
cmp
pop
or
dec
lcall
sbb
mov
push
movsb
dec
and
xor
mov
xor
adc
xchg
push
pushf
daa
jns
push
mov
adcb
lret
pop
roll
pop
push
aam
inc
shlb
xchg
outsb
add
popa
insl
xor
xchg
sub
out
mov
pop
or
and
sbb
or
mov
scas
js
xor
adc
test
fdivs
in
add
loope
push
js
fiaddl
insl
lods
dec
pushf
ljmp
add
xor
push
pop
mov
inc
jecxz
jbe
insl
xor
dec
in
pusha
cmp
or
insb
add
inc
andb
sub
mov
cmpsb
adc
push
pop
bnd
adc
push
sub
fimull
pop
hlt
mov
stos
sbb
sti
out
sbb
jp
inc
shlb
push
ds
sbb
sbb
int
mov
ret
jae
push
mov
pop
cmpb
add
xchg
fildll
jge
ds
xor
cld
xchg
repnz
lahf
cli
clc
test
shl
ficoml
xchg
ret
je
imul
xchg
lods
lcall
int3
scas
sbb
adc
data16
jnp
pop
out
dec
lcall
mulb
data16
adc
shl
es
sahf
dec
into
push
xorl
and
add
lahf
sti
sub
sbb
pushf
push
aad
aaa
test
in
mov
gs
pop
cmp
stos
fwait
mov
loop
into
movsl
test
cmp
loope
and
fidivrs
outsl
sub
bound
das
clc
fwait
stos
lea
fbstp
fs
jle
insl
movsl
fldenv
sbb
inc
ja
mov
ret
mov
jl
mov
dec
push
test
mov
jmp
or
mov
inc
jb
push
xor
in
mov
xorl
jnp
repz
je
lcall
jg
rorb
js
fists
hlt
mov
out
mov
je
push
pop
adc
mov
sub
faddl
inc
sub
dec
cmp
adc
lar
add
adc
mov
mov
loopne
je
or
aam
lret
les
scas
rclb
adc
or
inc
inc
jp
jge
fistps
push
sbb
ljmp
int3
popa
or
jno
out
daa
dec
push
xor
in
fldt
aam
loopne
repz
aam
push
ret
adc
mov
out
sbb
out
sub
jae
scas
movsb
mov
clc
or
hlt
mov
lea
std
xorl
lea
mov
xlat
cwtl
decb
adc
jp
popa
loop
pop
and
fs
mov
and
mov
pop
insl
adc
jp
cli
cmp
in
fistps
sub
test
xor
mov
gs
aad
iret
xchg
dec
xor
xor
add
popf
movsb
inc
lahf
push
jg
mov
inc
fisttpll
out
cmc
mov
ljmp
mov
xchg
lahf
lahf
sbb
pop
lods
dec
xchg
mov
loopne
add
or
clc
or
sub
in
jbe
cmc
in
push
lea
retw
mul
lcall
fcoml
hlt
fsubrl
jle
hlt
mov
roll
xchg
sbb
jmp
cmp
add
inc
dec
mov
pop
fsubrs
push
popf
shl
mull
es
sbb
xlat
push
xchg
inc
adc
imulb
inc
sbb
dec
loope
mov
int
push
cmpsl
aad
sub
out
or
jne
repnz
xor
cmp
jae
and
push
dec
out
cmp
add
or
cmp
inc
and
fninit
pop
cmpb
adc
lods
mov
cmp
xor
andl
test
hlt
pop
daa
pop
and
hlt
xchg
push
lds
std
pop
lret
jl
pushf
jne,pt
xor
rcrb
xchg
cmp
pop
adc
xchg
xor
mov
add
xlat
or
repnz
out
inc
out
sub
mov
scas
pop
pop
cmpsl
mov
xor
pop
jnp
je
xorb
add
xchg
mov
push
sbb
and
lods
out
gs
shrb
push
gs
rcrl
add
loop
sti
mov
std
mov
push
sub
inc
push
inc
xchg
std
fimull
mov
ljmp
push
stos
cmp
mov
movsb
aaa
sub
popf
cmc
cmp
cmpsb
mov
data16
aas
stc
iret
test
lcall
lcall
or
sub
mov
jecxz
xchg
js
repz
and
ljmp
movb
sbb
inc
aad
and
test
in
out
inc
adc
cmpsb
xchg
int3
add
dec
cs
sub
jmp
jp
jl
movsb
mov
pop
lahf
and
fistpll
sbb
stc
in
test
imull
dec
data16
cltd
in
push
mov
pop
xor
insb
adc
test
inc
popa
and
push
jecxz
pop
imul
pop
mov
arpl
mov
jg
push
mov
imul
pusha
js
xor
xor
jge
cmp
jnp
cvtsd2si
xchg
cmp
sbbb
cmp
stos
mull
icebp
lods
and
aaa
lahf
enter
jb
lret
or
inc
cmp
dec
cmp
test
or
cli
orl
push
sbb
jecxz
mov
jge
jp
xchg
inc
mov
call
out
add
popf
add
pop
shll
ret
mov
mov
xor
lahf
or
sub
cmpsl
test
insl
insb
push
add
loop
mov
sub
mov
cld
insb
cmpsl
inc
cli
mov
and
mov
and
mov
movsb
mov
js
hlt
or
sbb
sub
cli
mov
sahf
jne
lds
jno
int3
and
push
cmp
push
scas
sbb
mov
and
dec
add
test
int3
pusha
xchg
xchg
mov
lcall
divb
mulb
fbld
push
dec
adc
push
dec
inc
ja
mov
insb
and
ja
sti
or
aas
mov
adc
shll
sub
push
orb
int
mov
ret
mov
pop
in
add
ds
mov
cwtl
xchg
push
xchg
aam
sbbb
push
mov
jo
sub
pop
adc
or
outsb
fwait
cmpsl
adc
into
pop
mov
stos
sbb
jecxz
int3
cs
addl
scas
loopne
data16
roll
mov
jb
sahf
sti
mov
push
and
adc
xor
iret
jnp
jbe
bound
jns
mov
cwtl
cmpsb
xor
xchg
rcr
push
adc
pushf
outsl
mov
jecxz
sub
dec
stc
popf
cmp
in
gs
mov
pusha
lock
int3
test
jbe
adc
test
or
sbb
pop
mov
mov
cmpsb
inc
add
push
daa
adc
fisttpll
jns
or
in
call
adc
mov
shlb
xchg
scas
jmp
cmpsl
rcll
or
pusha
dec
sub
lods
sahf
adc
dec
test
inc
pop
gs
popa
aad
nop
in
dec
pop
pop
mov
mov
jg
adc
ret
jno
xchg
xor
dec
jnp
xchg
cmpsl
movsb
faddl
and
sti
pusha
cmp
dec
adc
outsl
in
mov
in
pop
xor
mov
inc
in
xchg
and
xchg
shr
add
nop
xor
pop
push
fnsave
les
sub
xchg
not
xlat
addr16
dec
addr16
popa
pop
sub
int3
add
xor
xchg
out
shll
cld
ds
xchg
and
out
push
rolb
imul
les
imul
push
roll
dec
push
rcll
jne
rcrb
pushl
lods
andl
stos
jmp
cwtl
inc
in
in
scas
sub
cmp
inc
iret
lock
adc
fcoms
mov
mov
aas
mov
les
js
fs
mov
int3
aam
push
popa
lods
or
fs
xor
add
or
nop
dec
into
mov
xor
jg
or
push
inc
dec
xchg
cltd
lea
jne
aas
jo
sbb
movsb
fdivrs
mov
rclb
mov
pop
es
in
or
add
and
int
int
mov
lods
sbb
inc
arpl
outsb
pop
insb
divb
lea
sub
xor
push
add
dec
dec
jmp
sub
shrl
add
pop
std
mov
stc
cs
or
push
adc
cmp
mov
sbb
clc
sub
aam
lahf
dec
clc
mov
jge
mov
xlat
bound
or
hlt
cs
rcll
cmpsb
js
enter
movsb
std
ds
and
sar
jecxz
neg
xchg
adc
sbbb
sbb
and
xchg
test
or
cmc
cli
enter
stc
scas
ja
insb
hlt
xor
sbbb
sub
adc
data16
outsl
push
mov
mov
mov
je
setns
popf
xchg
mov
pop
dec
adc
mov
xchg
lcall
xchg
stos
fwait
cmp
mov
repnz
mov
inc
jns
pop
inc
dec
sub
inc
pushl
scas
enter
addr16
pop
mov
addr16
into
std
xchg
and
xchg
scas
bound
in
clc
dec
xor
out
xlat
jbe
push
cmpl
movsl
andl
sarl
sub
aad
mov
xor
in
mov
sub
ss
inc
mov
pushf
pop
inc
push
sbb
jno
push
xor
cmp
stc
in
test
les
mov
lock
es
insl
hlt
sbb
in
mov
mov
and
es
cmpsl
push
inc
jb
and
ds
jecxz
cld
sub
xor
out
xor
mov
loope
mov
les
sub
adc
cmpsb
pop
fwait
mov
cmp
pop
jo
mov
sbb
and
in
push
popf
and
jmp
inc
sbb
jmp
fdiv
jge
out
in
pop
dec
dec
mov
cwtl
shrl
mov
mov
into
out
ss
and
lret
cmpsl
mov
pop
sbb
mov
test
fsubl
lods
mov
aad
in
xor
or
jle
mov
sub
xchg
pop
pop
xchg
icebp
pop
arpl
leave
jmp
inc
dec
hlt
cmp
jne
fsubrl
add
cmpsb
or
or
test
pop
inc
jp
adc
sub
cmpsl
mov
pop
iret
fisubs
testl
and
jl
and
inc
lea
jae
ljmp
mov
lret
xchg
add
xchg
lret
lret
mov
out
cli
jno
notb
jmp
es
add
inc
dec
pop
xchg
push
add
mov
sti
xchg
pop
push
aam
mov
mov
xchg
pop
stos
lods
push
adc
fs
cmp
mov
frstor
xchg
fdivs
clc
mov
out
ret
adc
popa
pop
ds
outsl
outsb
mov
inc
sub
lahf
mov
out
cmp
cs
adc
or
pop
xchg
inc
push
in
repz
mov
mov
inc
dec
pop
aam
pop
and
nop
andb
jae
jns
jne
mov
inc
sbb
xchg
scas
ss
lcall
mov
cld
sub
mov
call
mov
sahf
mov
mov
add
out
mov
lock
movsb
push
mov
cmp
ficoml
mov
fiadds
adcl
push
xchg
sub
mov
xchg
jo
je
ljmp
popf
andl
outsb
adc
sub
jge
lcall
jecxz
and
cmp
int
popl
pop
push
test
cmp
inc
jl
cli
ljmp
inc
dec
addr16
and
push
das
insl
das
cmp
pop
jle
imulb
jecxz
int3
inc
mov
dec
stos
lds
jmp
lahf
sbb
inc
fimull
xchg
and
stc
cmp
call
inc
std
loopne
jbe
sarl
xor
mov
add
jg
jnp
stos
scas
ss
ret
push
clc
dec
sub
xchg
jno
in
lods
rcll
sbb
leave
adc
cltd
mov
mov
xlat
push
add
mov
lret
add
repz
ja
add
sbb
enter
mov
jno
push
pop
fcmovnbe
push
das
out
mov
lea
jno
xchg
mov
roll
pop
adc
push
stc
rcr
aam
pusha
or
adc
mov
mov
fs
shrl
js
xchg
inc
sti
popa
inc
cmp
mov
inc
int3
add
mov
lock
stos
ss
mov
dec
push
lods
je
rcll
xlat
inc
je
icebp
mov
loop
aas
mov
shrl
mov
rorb
jne
mov
jnp
sbb
xchg
jns
movsl
ds
lods
pop
xchg
pop
shrl
and
bound
bound
in
jae
ljmp
or
outsl
cmpsb
outsb
lahf
add
stc
jne
sub
sbb
es
sub
dec
std
add
mov
inc
mov
xlat
mov
ja
push
arpl
mov
loop
jbe
jnp
jl
pop
add
add
sub
scas
xlat
sbb
cmp
testb
jmp
sub
stos
mov
and
insl
ljmp
pop
sahf
cmp
addr16
and
mov
ss
jnp
cmp
xor
jl
lea
sub
aad
loopne
sbb
or
or
lock
cli
enter
movl
adc
lds
pop
push
inc
pop
inc
mov
ja
mov
mov
mov
aam
xchg
push
std
jns
push
out
popf
xor
push
xlat
cmp
mov
cmp
inc
popa
loope
repz
mov
fstpt
mov
jmp
mov
or
jl,pn
nop
inc
ss
lds
lock
dec
add
add
int
ss
iret
or
mov
ret
inc
or
push
push
mov
jmp
cmp
xor
jge
out
cmc
lods
add
aaa
xor
imul
push
jl
or
shll
std
push
jmp
stc
xor
das
mov
test
jbe
mov
stos
cmpsl
xchg
test
mov
scas
xchg
push
arpl
mov
scas
jge
mov
cmp
sbb
repz
lcall
jnp
push
hlt
adc
sbb
enter
mov
push
int
pop
dec
or
mov
jns
neg
adc
stc
sbbb
fidivrs
mov
inc
imul
lds
repnz
and
jl
push
in
inc
push
jbe
xor
repz
adc
ss
shl
out
push
mov
lods
cmp
out
push
cmp
ljmp
jns
sbb
jg
fwait
inc
push
or
mov
mov
sbb
xchg
aaa
xor
dec
jae
cwtl
sbb
push
pop
mov
stos
inc
sbb
mov
loop
outsl
pop
dec
jecxz
out
stos
pop
scas
das
mov
sbb
xchg
sbb
in
addr16
lds
mov
in
mov
xchg
adc
jb
mov
ficoms
out
jno
nop
inc
jno
cmp
or
and
cmp
sub
subl
dec
mov
lret
shrl
in
add
jae
inc
jno
dec
bound
gs
xchg
cmpsb
dec
int3
and
mov
test
mov
lea
mov
insb
jle
test
in
inc
pop
hlt
or
outsl
fmulp
mov
pushf
inc
jp
jbe
inc
xchg
xor
mov
pop
and
dec
and
cmp
inc
push
inc
sub
sti
sub
testb
jae
xchg
outsb
xchg
mov
jae
cmpsb
aaa
loope
add
popa
andb
ficoms
cmp
pop
jge
mov
fbstp
fmull
int3
outsl
scas
mov
stos
cs
mov
decl
shll
pop
jno
jl
push
outsb
rcl
pop
cmpsl
sub
aam
cmpsb
fidivrl
ljmp
insb
xchg
shll
icebp
ljmp
mov
mov
test
push
lea
jb
outsb
inc
or
inc
pop
mulb
adc
mov
das
inc
add
icebp
je
push
lods
ret
mov
roll
xor
imulb
imul
pop
aam
or
cmovns
mov
pop
push
scas
bound
mov
cld
jge
jmp
push
test
mov
sub
test
xchg
les
and
add
lea
mov
lret
cmp
mov
popl
data16
mov
cmp
adc
fcmovbe
xor
xor
cli
insl
clc
xchg
test
xor
push
fstpl
pop
imul
daa
pop
repz
test
js
fnstcw
mov
setnp
sub
dec
shrb
or
cmp
std
cmp
sbb
jmp
ds
mov
ljmp
cmpsl
test
inc
imul
lock
int
sar
mov
xor
xchg
in
lret
cmc
test
sbb
repnz
push
jmp
dec
adc
xchg
fimull
push
jl
orb
outsb
lcall
lock
cs
rcrb
mov
mov
mov
push
inc
mov
lods
jnp
out
pop
mov
mov
add
mov
cli
lods
cmpsl
fdivl
sub
or
icebp
pushf
sahf
inc
and
mov
jbe
xchg
pop
pop
xchg
inc
dec
cmova
mov
xchg
and
cmp
jmp
cmp
hlt
loopne
push
jo
inc
xor
pop
or
mov
popf
push
test
adc
xchg
push
iret
sti
movsb
sub
dec
ret
mov
xchg
lods
jg
outsl
jbe
mov
dec
sbb
adc
xchg
test
fldl
xchg
push
hlt
dec
sbb
lcall
or
ds
pop
dec
rcll
cwtl
bound
nop
popf
pop
cltd
inc
movsb
iret
jae
imul
add
xor
mov
icebp
xchg
mov
xchg
shlb
pushf
sub
push
and
test
jo
xor
movsb
sub
xlat
aas
test
lahf
cmpsb
inc
mov
cmp
adc
mov
ficompl
enter
inc
es
call
mov
js
inc
dec
pusha
cmp
mov
mov
sbb
xchg
mov
sbb
or
les
and
inc
mov
dec
dec
mov
outsl
lea
dec
cs
xchg
jns
test
inc
push
fnstenv
sub
ror
adc
pop
addr16
sahf
dec
push
push
cs
jge
pop
adc
movsb
inc
je
inc
jo
lock
xchg
jne
mov
lock
jb
mov
sub
pushf
clc
test
mov
bound
iret
imul
js
or
inc
fs
jp
mov
push
jle
mov
lret
pop
mov
adc
jo
int3
cmp
int3
or
or
ds
out
add
nop
jmp
or
lret
arpl
xlat
bound
repz
sub
xchg
mov
movsb
xchg
stc
and
mov
pop
lods
push
xor
push
in
nop
sbb
dec
ficoml
and
decb
add
aad
push
pushf
sbb
xchg
and
fwait
mov
jg
pop
xor
lret
push
shlb
cltd
int
cltd
dec
ret
lahf
lahf
mov
stos
enter
fs
jp
data16
inc
outsb
sub
adc
add
test
stos
xlat
or
cwtl
scas
into
test
xchg
sti
fs
insb
mov
cmp
jmp
xabort
pop
sbb
sti
mov
mov
mov
stc
daa
and
stos
inc
push
sub
loope
or
jmp
xor
xor
ds
xchg
cmc
movsb
mov
sbb
daa
pop
jg
das
pop
push
jmp
aad
aad
and
xlat
cmc
inc
leave
int
insl
push
jl
test
inc
lods
std
mov
xchg
out
or
cmp
mov
mov
sub
pop
fldt
sub
addr16
mul
lock
sub
xchg
cld
xor
pusha
cld
add
es
cmpsb
inc
aaa
in
adc
int
push
pop
add
sub
out
dec
jp
jae
out
int3
out
loope
cmp
pop
or
dec
mov
lret
pop
mov
mov
cmc
mov
sub
mov
scas
pushw
and
mov
aam
xor
inc
inc
outsl
ljmp
push
push
jmp
rol
leave
movsl
or
dec
add
adc
push
in
stos
push
and
daa
sarb
add
pop
push
jno
jno
cmp
pop
adc
fs
aam
mov
jmp
sti
arpl
jno
cmpsl
inc
xor
push
sbb
mov
daa
add
outsl
sbb
inc
mov
gs
mov
mov
in
pop
lahf
rolb
mov
push
cmp
xchg
rorl
scas
sub
nop
sbb
lret
popa
lods
mov
and
jle
bound
xor
push
aas
stc
xlat
int3
add
jmp
mov
out
sbb
sbb
xchg
pop
clc
mov
push
push
aad
insb
lahf
cwtl
pusha
sbb
bnd
xor
mov
stc
repnz
adc
mov
out
movl
std
sarb
xor
loope
ljmp
lods
daa
xchg
iret
loope
std
sbbl
lods
mov
sarl
or
jb
mov
test
mov
cmp
push
shrl
mov
ret
int
aaa
das
insb
xor
jno
xchg
mov
cmp
fists
scas
fs
jbe
negb
add
cmpsl
or
inc
fwait
test
sarb
gs
xor
xor
rorb
push
pushf
push
pop
out
or
cs
ret
negl
pushf
stos
or
xor
ljmp
xor
mov
orl
addr16
mov
xchg
fidivl
loop
es
call
leave
push
and
and
aad
bound
cmpsb
pusha
stc
xor
pop
and
nop
and
scas
pop
add
and
lea
push
or
jl,pt
ret
dec
dec
xorl
sub
push
push
adc
sub
jge
outsb
sbb
mov
jae
jl
dec
bound
pop
cmp
sbb
clc
ljmp
mov
cwtl
cmp
in
xchg
inc
sub
fimull
imul
inc
decl
sub
xor
je
push
sub
push
adc
pop
inc
cs
or
lret
sub
dec
ds
sbb
xchg
fucom
or
cmp
add
cli
enter
cmp
std
lods
rcrl
pop
mov
loope
sub
or
inc
and
sbb
fdivl
dec
and
outsb
mov
sti
ljmp
dec
cli
into
fdivrs
clc
xchg
int3
push
fnstenv
and
xchg
out
push
jno
mov
insl
scas
xchg
mov
inc
repnz
loop
ds
xchg
dec
push
rcll
pop
leave
fcomp
mov
icebp
jge
xchg
lret
xchg
inc
push
popa
or
pop
mov
mov
push
xor
xchg
ljmp
outsb
inc
sub
fucomi
addr16
movsl
mov
test
mov
push
adc
inc
inc
jge
and
mov
lods
mov
jb
push
test
fs
scas
stc
leave
sub
imull
sub
scas
hlt
imull
dec
out
sbb
bnd
adc
fidivrs
add
add
xchg
lock
call
pop
fs
sbb
mov
or
inc
mov
addr16
aad
es
daa
push
and
pushf
xor
int
lds
cmp
fsts
and
aam
fs
faddl
mov
fmul
fisttpl
push
test
xlat
mov
andl
pop
andl
dec
inc
inc
push
cmpsb
jge
rcrl
aad
insb
xor
dec
ja
jg
scas
cmp
pop
push
fimull
icebp
pusha
jns
cmp
xchg
movsl
mov
jns
mov
pusha
or
repz
pushl
dec
jne
iret
stos
pushf
cwtl
insb
sub
decb
lret
cltd
mov
cli
cmpsb
outsl
xchg
loope
adc
inc
rorb
push
outsb
dec
add
xor
mov
mov
int3
mov
push
pop
mov
jnp
imul
loopne
pop
cmp
mov
bswap
pop
hlt
pop
daa
shll
in
cmp
mov
lret
mul
in
adc
lods
imul
mov
mov
loop
add
hlt
or
sbb
pop
loope
and
push
inc
xor
imul
mov
and
lds
lretw
ret
loopne
adc
sbb
cs
js
andb
add
sti
xor
push
jbe
jecxz
stc
stc
jo
mov
imull
int3
cld
adc
subl
push
inc
loope
sbb
mov
push
das
pusha
mov
fs
cmp
xchg
into
push
sbb
adc
pop
imul
sub
add
cmc
mov
cmp
cmp
mov
mov
push
inc
cli
movsb
fistpll
xor
arpl
movsb
fwait
mov
mov
mov
in
push
xor
jl
shrd
mov
iret
ss
stos
xor
ja
dec
cmp
loop
pusha
or
iret
mov
cmp
cmp
and
test
pop
push
mull
pusha
lcall
inc
orb
rcrl
jge
divl
loopne
shl
in
xlat
jo
test
daa
jno
lds
xchg
mov
addr16
push
leave
jne
test
add
add
fistpll
ss
and
scas
jno
out
push
lds
mov
jg
mov
sub
mov
add
clc
xchg
jecxz
inc
inc
mov
subb
or
xchg
push
xchg
pop
filds
mov
js
call
addr16
adc
xchg
add
enter
shrb
divl
flds
das
xlat
xor
xchg
mov
add
jl
dec
mov
inc
cmp
addr16
sub
inc
mov
data16
std
cmc
in
adc
jecxz
fsubl
push
fldenv
cld
pop
adc
sub
jecxz
mov
idivb
ret
movb
dec
idivl
mov
shll
and
icebp
cli
js
popa
call
pop
dec
mov
lahf
push
push
cwtl
lret
lcall
jnp
sbb
or
dec
inc
sahf
in
or
adc
ljmp
jp
mov
call
in
mov
pop
jge
cmpsb
lods
gs
sub
add
mov
shl
ja
icebp
mov
je
inc
stos
incl
cmp
mov
and
pop
and
and
dec
and
mull
testb
mov
dec
rcr
imul
xor
jl
pop
mov
xchg
test
mov
sbb
inc
adc
push
fsubrs
xor
jns
test
cmp
add
xor
andl
pop
lea
dec
ja
jnp
sbb
mov
out
movb
pop
sub
dec
pop
sbb
mov
js
cmp
fstpt
cli
or
cmpsl
ret
rdpmc
and
inc
mov
in
or
ss
in
mov
fcomps
fsubp
js
sbb
fiadds
inc
mov
mov
enter
mov
xor
call
mov
inc
mov
fldl
inc
ds
imul
sbb
and
cmp
push
cmp
mov
mov
scas
add
ret
inc
xor
scas
inc
jnp
add
jb
jnp
fwait
adc
mov
push
ljmp
xlat
jmp
inc
lret
mov
ds
loope
out
push
stos
cmp
or
popa
mov
sub
adc
or
cmp
inc
pop
jmp
xchg
dec
sub
aad
test
out
mov
out
je
fildll
clc
dec
popa
rcrb
xor
lds
dec
jo
rolb
dec
loopne
or
adc
insl
in
ja
shlb
bound
mov
imul
mov
gs
imul
add
stos
xor
shl
out
mov
test
xor
jns
pop
lods
xchg
xor
popf
clc
or
imul
jmp
lods
push
ret
test
rol
mov
fisubs
mov
repnz
sbb
in
andl
sbb
mov
mov
or
bound
cmp
xchg
loopne
add
ficompl
jg
lcall
arpl
dec
sub
mov
cwtl
push
mov
adcb
pop
xchg
add
pop
dec
push
cli
mov
inc
sti
mov
xchg
xchg
dec
cmp
pop
or
test
push
test
pop
sbb
mov
addl
sub
mov
in
add
shrb
jns
add
pop
xor
ret
sahf
and
sbb
cmp
push
fldcw
mov
ret
inc
jno
cmp
nop
cmc
mov
test
arpl
cli
pop
lea
jno
decl
test
adc
pop
mov
aaa
insb
jmp
ds
jl
cltd
addl
scas
nop
jnp
xchg
roll
xchg
in
mov
sbb
and
inc
jns
mov
rcll
mov
mov
fisubrs
dec
pop
push
sub
mov
pop
fwait
adc
push
push
mov
test
jle
jg
arpl
mov
enter
add
aam
pop
jbe,pn
jbe
shll
jge
or
subb
mov
jg
daa
cmpsl
movsb
daa
jne
std
push
cld
inc
insl
dec
sbb
cmc
xor
mov
jnp
into
idivb
cli
sub
sbb
sbb
enter
xchg
test
cwtl
push
mov
adc
stc
mov
adc
jns
ds
mov
call
lods
aaa
lds
inc
gs
inc
in
fcomps
cmpsb
mov
xchg
cmp
mov
sbb
ja
loop
das
out
pushf
ljmp
pop
cwtl
stc
sbb
cwtl
jb
cmc
gs
jecxz
sub
push
jo,pn
jge
xchg
psubusb
add
xchg
xchg
cmp
mov
rol
jg
mov
xor
add
add
mov
test
sbb
rcll
cli
cmpsb
sub
add
pop
jnp
fidivrl
outsb
xlat
popa
sbb
nop
sbb
xchg
mov
push
test
xchg
jne
sbb
ret
dec
xor
lahf
popa
scas
ret
movsl
imul
push
leave
adc
cmp
daa
mov
repnz
mov
sbb
sbb
fwait
push
xchg
ljmp
sbb
push
call
xlat
lock
dec
jbe
cli
xor
push
fsubrs
daa
jbe
add
add
cli
lock
push
cld
jge
pop
sti
push
je
imul
test
and
fsubrs
xchg
mov
mov
nop
jmp
imulb
dec
push
jo
add
ror
sti
mov
jbe
pop
pushf
mov
das
jns
dec
fcom
sub
jge
pop
and
testb
pop
and
fcmovne
pop
jnp
mov
lea
imul
push
add
icebp
imul
push
dec
aaa
insl
push
daa
add
rorb
mov
iret
push
jbe
negb
shrl
dec
dec
loopne
fnstenv
xchg
lock
in
pop
ss
and
lock
pop
ds
cmp
sbb
scas
push
inc
pushf
rolb
jge
sub
sub
xlat
repz
jbe
out
outsl
jmp
xlat
test
test
sub
imul
or
sbb
jle
sbb
dec
fistl
push
push
adc
push
xor
push
sub
movsl
hlt
sbb
jns
ljmp
mov
xchg
pop
fcoms
pop
outsl
lea
mov
testl
add
lock
js
xchg
mov
sub
mov
dec
jnp
xor
mov
adc
lcall
fcoms
ss
in
jmp
into
adc
or
stc
pop
popf
popf
ret
out
out
xor
and
xchg
mov
jnp
push
pop
xor
xchg
rcll
sbb
popf
mov
xchg
mov
inc
sbb
add
add
out
xchg
test
sbb
testl
jge
jae
adc
movsw
js
loope
dec
push
fcompl
lret
jno
push
cwtl
jmp
dec
inc
push
es
fisubrs
lret
sahf
iret
mov
cmp
cltd
pop
cmp
stos
shr
test
cmp
fisubs
xor
gs
jae
jns
fwait
dec
daa
in
ret
mov
pop
push
xor
pop
lock
push
dec
mov
cmp
mov
mov
add
ljmp
jb
xchg
jo
enter
jecxz
mov
ret
dec
jns
jnp
arpl
mov
imul
insb
dec
adcl
sbb
and
sub
mov
aaa
ret
pop
fildl
xchg
cmpsb
pop
mov
and
adc
addl
xchg
rcll
jle
mov
mov
xor
ljmp
sub
cs
out
sbb
xchg
out
cltd
jno
push
mov
xlat
sub
cmpsb
dec
push
leave
push
dec
outsb
fimull
or
pop
push
push
icebp
pop
cmp
inc
mov
sub
sub
sbb
push
negl
xor
in
jp
sub
sbb
pop
rorl
fmull
xlat
mov
imul
mov
xor
stos
sbb
and
pop
or
mov
adc
xor
xchg
hlt
pop
test
pop
fisubrs
push
pop
xchg
mov
jbe
fnstsw
cs
int3
jle
in
mov
inc
clc
xor
mov
or
push
dec
mov
mov
cmpsb
ljmp
jo
lods
mov
add
cmp
and
paddusw
int3
outsl
mov
outsl
sbb
pushf
fwait
testl
int
xchg
mov
xor
ret
or
xlat
add
sbb
or
xlat
lret
add
adc
outsl
pop
cmp
test
mov
jmp
or
mov
pop
xchg
ret
add
sub
push
push
test
jle
xor
xor
repnz
adc
sbb
pop
ret
or
push
mov
arpl
jle
in
dec
test
enter
lods
and
decl
jne
sahf
es
pop
imul
js
insl
mov
mov
jmp
inc
mov
mov
mov
es
cmp
in
dec
xor
cmp
es
or
adc
data16
jle
jae
imul
clc
loop
cmp
enter
jmp
mov
xchg
jae
scas
cwtl
mov
mov
jle
fistps
add
jo
xchg
into
lock
dec
sbb
fidivrs
adc
insl
adc
push
adc
jmp
cs
mov
mov
leave
adc
mov
sub
and
jmp
sbb
stos
sbb
mov
adcb
jle
mov
adc
pop
push
jae
js
sbb
push
repnz
xchg
ret
push
cmc
and
push
jle
orl
and
cmp
jp
push
mov
adc
push
das
pop
in
sbb
test
int
lods
outsb
sub
loope
scas
mov
push
mov
jnp
xor
and
mov
push
jno
dec
pop
pop
call
lods
jl
cmovae
rorb
sbb
jp
int
sti
sub
inc
js
xchg
cmp
jp
sub
inc
inc
cmp
cmp
mov
out
mov
nop
mov
lcall
jne
xchg
outsl
and
shr
mov
bound
mov
xchg
movsl
ret
push
sub
pop
cmc
sub
lods
scas
cmp
xchg
mov
mov
adc
leave
mov
cwtl
mov
outsl
stos
push
mov
cmpsb
nop
addr16
lods
add
push
lret
inc
jecxz
aaa
mov
adc
mov
push
rclb
xlat
jmp
stos
leave
cltd
lock
and
mov
jb
lret
icebp
pusha
and
pop
lcall
stos
popf
sbb
mov
add
insb
dec
mov
adc
push
jl
clc
in
test
fnsave
cmpsb
lahf
add
test
fidivl
and
ss
xchg
orl
popa
int
rorl
sbb
fidivrs
pop
pop
sub
lcall
into
adc
cmp
es
iret
adc
dec
xchg
insb
pop
jno
loope
shlb
xor
add
test
out
rcrl
outsb
or
sbb
and
cmp
cs
push
add
pop
push
rcl
lds
shll
lock
arpl
inc
xchg
cmpsb
lahf
daa
sub
mov
push
cli
push
cmp
jnp
ja
add
sbb
and
gs
adc
cs
mov
push
mov
push
add
push
js
sbb
jge
inc
fistpll
rcll
pop
imul
push
jmp
xor
popl
lods
stos
fnsave
ds
push
int
jbe
xor
jg
gs
mov
mov
pop
orb
test
faddl
aam
xchg
stc
inc
mov
cmpsb
mov
sahf
loopne
inc
cmp
pop
fcmovbe
xor
xorl
sub
cmp
xchg
stos
mov
cmp
pop
xchg
jno
xor
ret
ret
loope
imul
inc
xchg
jno
adc
push
js
mov
scas
fdivs
inc
push
aad
jns
add
out
mov
jb
lea
dec
mov
add
sti
scas
push
movsb
lock
dec
fistl
mov
scas
imul
push
shll
mov
push
and
pop
sbb
mov
mov
and
lods
or
subb
and
sub
aad
sbb
cmpl
and
out
mov
out
inc
gs
cwtl
aaa
mov
sub
jmp
mov
lcall
push
pop
jae
lcall
jg
addb
push
in
sbb
sbb
inc
into
lds
aam
push
shlb
dec
lods
and
out
mov
aas
mov
xor
mov
inc
stos
or
sbb
cmpsb
aad
cwtl
xchg
push
mov
xchg
sub
cli
mov
test
and
fwait
add
push
int
pop
xchg
cmp
je
gs
mov
or
ljmp
jge
jg
std
sahf
ja
mov
and
adc
mov
repz
jbe
adc
sub
mov
leave
inc
cmpsb
rol
adc
lahf
je
cs
leave
push
mov
and
inc
addr16
mov
pop
fisubrl
addl
push
cmp
negb
adc
repz
fidivs
clc
das
jb
and
sub
or
sub
add
hlt
dec
mov
imul
cmp
fmuls
pop
inc
data16
fisttpll
repz
rorl
jmp
push
loopne
xor
out
roll
inc
mov
repz
ret
jecxz
cmpsl
and
out
pop
or
stos
pop
cwtl
outsl
xchg
and
jne
and
fistl
add
xor
shr
ss
test
cmc
xor
aam
test
stos
jl
ja
inc
or
out
mov
xchg
xor
mov
fs
loopne
popa
call
cli
cli
mov
jae
out
fs
dec
mov
bound
insb
mov
mov
or
faddl
repz
fs
adc
mov
xchg
dec
pop
sti
inc
add
enter
push
adc
repnz
sbb
shll
jl
adc
xchg
or
jg
cs
inc
inc
mov
arpl
js
aas
out
jecxz
test
pop
loope
inc
cmp
lret
hlt
aam
inc
jge
stos
stos
adc
test
addl
adc
lahf
jmp
sub
cld
jl
dec
pop
jle
push
into
pop
cmp
cmp
add
shrb
orl
push
out
ds
cmp
jns
out
add
mov
mov
filds
add
lods
leave
xor
insl
xchg
add
addr16
loopne
lds
rolb
adc
shrb
shlb
push
inc
addr16
insl
and
dec
fcomi
add
mov
cltd
fs
dec
mov
xorb
add
stc
push
mov
adc
subb
in
push
iret
xchg
jo
push
pop
mov
push
cmp
lods
test
jmp
movsl
add
shlb
call
popf
fisubl
aam
adc
jne
lock
sbb
in
dec
subl
lcall
push
mov
in
repz
lea
out
cmp
imul
ss
xor
mov
repz
outsb
rcr
int
ror
or
or
adc
pop
inc
dec
fldlg2
aam
in
aas
sbb
mov
outsl
movsl
mov
xor
iret
add
daa
xchg
jmp
xchg
or
sub
rclb
sbb
imul
adc
jns
lea
ljmp
pusha
jge
add
sahf
and
adc
lock
pop
imul
or
or
jmp
ss
shr
mov
or
divb
jge
and
frstor
cmp
adc
mov
mov
push
mov
pop
push
mov
fdivl
es
xlat
mov
sbb
jb
inc
jae
xor
lahf
fdivl
xor
mov
mov
scas
out
xor
shlb
mov
scas
pop
sti
push
adc
hlt
mov
dec
cmpl
mov
outsl
cmp
sub
mov
jl
aad
mov
mov
pop
icebp
jbe
sbbl
jmp
ja
xchg
loope
cs
mov
xchg
mov
mov
lcall
adc
pop
xchg
jno
in
ja
mov
cmc
inc
cmp
outsb
mov
pop
mov
jg
inc
jl
dec
add
cmc
std
pop
and
cmpsl
ljmp
cwtl
scas
popa
out
jg
pop
popf
aaa
mov
loope
push
jbe
mov
sub
cmc
jle
imul
jb
add
bswap
enter
scas
xlat
adc
pop
jecxz
mov
data16
out
cmp
cltd
addr16
in
xor
sbb
jo
xchg
les
push
sbb
jo
jo
rclb
jo
lahf
shl
jns
fwait
mov
cmp
sbb
push
mov
sarb
loop
xchg
push
xchg
stos
out
stc
add
dec
fiadds
mov
std
stc
lods
add
in
sbb
sar
popa
xor
fidivl
sbb
adc
sarl
xor
pop
pushf
jbe
je
fcmovu
adc
pushf
xor
insl
xchg
lcall
dec
mov
scas
inc
into
cmp
pop
leave
test
mov
adc
scas
cmp
mov
sub
jmp
dec
dec
xchg
add
xlat
data16
stos
sub
adc
xchg
or
arpl
cs
cmc
clc
ljmp
fxch
out
cmp
loope
fildll
add
xor
mov
mov
dec
ja
in
mov
rclb
data16
fildll
and
insl
push
mov
sti
dec
dec
xor
lcall
sbb
pop
cmp
sbb
pop
inc
inc
lret
dec
add
ror
call
mulb
mov
jnp
out
pop
sahf
mov
lea
pop
mov
and
pop
xlat
gs
and
lahf
aam
cli
out
push
or
mov
xchg
std
outsb
mov
and
sbb
mov
xor
aad
popa
xor
lds
adc
ss
mov
push
in
ja,pt
int3
push
das
pop
lock
adc
lds
inc
test
and
adc
mov
push
jne
out
dec
lds
cwtl
jno
xchg
mov
shr
aam
xchg
in
adcb
xchg
lcall
loop
add
insb
push
ja
popf
xchg
cltd
cmpsl
pop
push
cwtl
jnp
xchg
xlat
mov
lea
or
je
mov
shrb
jbe
xchg
outsl
xor
mov
mov
cmp
fisubrs
mov
sarl
dec
and
aad
jno
pop
cltd
sarb
jmp
popf
inc
icebp
add
popa
hlt
sbb
push
cmp
mov
movsl
inc
fistl
test
int3
ss
xchg
or
cmp
imulb
xchg
aad
or
and
lret
dec
push
add
into
mov
mov
pop
insl
repnz
aam
gs
outsl
test
imul
adc
divb
mov
xchg
add
mov
or
call
cmc
lret
dec
int3
xchg
push
lds
negb
movsb
test
pop
ljmp
aas
push
cmp
sub
in
jle
inc
xchg
int3
add
sbb
mov
outsb
lret
loop
sub
mov
icebp
mov
sub
icebp
and
xchg
xor
mov
jge
cmp
stc
adc
das
mov
in
or
out
cltd
mov
and
sub
hlt
mov
inc
pop
sti
repnz
sub
mov
xchg
stos
sar
adc
divb
jb
mov
orb
insb
add
mov
mov
lret
repnz
or
cwtl
fs
ror
cmpsl
or
mov
sub
inc
movsl
pop
mov
imul
xchg
into
xlat
aam
and
xchg
lcall
sub
scas
pop
sub
out
fstpt
popf
movsl
bound
aas
dec
enter
adc
cltd
lret
fmul
xchg
aas
xchg
xchg
lcall
adc
lds
in
data16
leave
dec
clc
fwait
xchg
xchg
rorb
xor
jl
xchg
mov
hlt
clc
packuswb
jle
push
lret
jl
or
das
ljmp
mov
cmc
clc
popa
nop
sub
enter
es
mov
mov
shll
into
loopne
out
pop
arpl
push
pop
aam
inc
mov
or
stos
pop
sbb
mov
push
and
sub
loope
std
stos
pushf
gs
push
scas
rolb
jmp
jg
pop
add
push
xlat
data16
pop
pop
mov
cmp
sbb
add
mov
lods
mov
pop
in
jno
pop
ffree
mov
lcall
mov
jae
stos
imul
mov
fdivrs
and
dec
push
mov
sub
cmp
in
movsl
jg
xor
mov
mov
mov
outsb
icebp
sbb
int3
mov
das
add
fs
mov
scas
movsb
fsubrs
div
jle
loop
lods
cmp
cmp
inc
mov
bound
adcl
loop
jbe
cmp
ficomps
mov
push
push
mov
jle
dec
test
sti
mov
mull
jecxz
movsb
cmp
popa
in
fprem
test
addr16
xchg
in
push
les
pop
stos
sbb
subb
sub
clc
hlt
dec
in
les
mov
inc
iret
jno
in
inc
loop
fisubl
inc
mov
mov
push
les
pop
sbb
into
aaa
pmulhuw
int
cld
jmp
js
das
dec
mull
scas
je
ret
jecxz
jbe
stos
dec
and
adc
xor
lods
je
push
jne
andl
adc
cmp
inc
jg
out
xor
jl
mov
mov
adc
loope
loop
pop
mov
jae
insb
jno
adc
inc
movsl
fcompl
enter
adc
lahf
pop
xchg
sub
pop
pop
iret
xor
push
mov
insl
xchg
jge
lahf
out
push
js
out
jno
roll
imul
jno
inc
sbb
loope
sub
test
int
pushf
sbb
bound
mov
push
fsubs
mov
imul
test
and
idivl
inc
push
shlb
les
pop
pop
and
xchg
iret
outsb
pop
test
ud1
lock
call
imul
push
xor
mov
cmp
inc
in
xor
pop
push
xor
inc
push
add
and
iret
adc
pop
and
mov
roll
cmpsb
dec
ljmp
mov
adc
test
pop
mov
mov
jb
dec
lret
mov
call
jns
test
stos
out
pop
and
stc
mov
std
ss
inc
xor
mov
cmp
movsb
jno
mov
xchg
popf
mov
push
inc
xor
out
aas
push
and
add
add
xchg
fistpll
inc
std
in
or
sbb
jle
rorb
or
dec
cmpsl
or
xlat
mov
mov
int
add
iret
lock
es
sbb
jno
mov
xchg
outsl
jp
aad
popa
jbe
jae
ret
jo
xorb
aas
dec
pop
mov
icebp
mov
mov
pop
add
cmpsb
inc
inc
lcall
inc
cs
pop
or
jmp
out
dec
aas
or
movsl
push
jmp
lret
cmp
sbb
cmp
rolb
push
adc
inc
cmp
mov
cltd
inc
or
icebp
nop
mov
xor
insl
cmpsb
push
xchg
pushf
ret
xchg
out
int
inc
jmp
iret
test
add
xchg
stos
mov
sbb
les
or
mov
insb
repz
loope
daa
jae
sub
test
mov
adc
lea
or
icebp
ja
lcall
adc
adc
loope
push
lds
push
xchg
fs
aam
dec
stc
scas
popa
dec
sub
andb
add
andl
jnp
mov
mov
leave
leave
push
out
or
test
in
outsl
mov
mov
mov
or
dec
inc
ds
sbb
cli
pop
movb
sub
ljmp
shll
popf
pop
push
rcrl
cmp
jo
lock
ret
lds
adc
cwtl
iret
pop
xchg
or
xor
sbb
dec
sub
shll
int
imul
dec
adc
stc
xchg
fisttps
xchg
xchg
cld
xchg
or
or
arpl
cmpsb
jecxz
jb
jmp
lret
sahf
fisubs
add
cltd
inc
lcall
fcmove
mov
andb
enter
pop
adc
jge
cmp
rorl
aad
mov
push
mov
adcl
lods
jge
push
dec
out
pusha
in
jo
inc
and
inc
fwait
pop
mov
in
pop
pop
push
pop
ja
outsl
jmp
shl
xchg
das
test
lock
shll
stos
sbb
dec
and
xchg
aad
mov
sbb
pop
out
lret
add
enter
cld
fistpll
adc
repz
push
mov
sub
jp
std
enter
dec
push
stos
mov
pop
mov
clc
enter
mov
pcmpgtw
lea
pop
out
mov
adc
pop
shrl
push
sub
dec
mov
popa
cmc
cmp
icebp
incb
stc
push
shlb
pop
push
cmp
out
dec
jno
fnstcw
inc
lods
fnsetpm(287
outsl
lock
test
cmp
loope
ss
dec
mov
pushf
data16
lret
add
sarb
mov
add
shl
inc
aam
xor
pop
mov
out
mov
xchg
adc
pop
sbb
shll
imul
stc
insb
nop
cs
pop
gs
arpl
cmpsl
ja
xor
pop
add
int3
mov
and
push
rclb
cmp
cmp
cmp
inc
mov
push
pop
sub
xor
stos
inc
mov
sbb
push
outsl
push
aas
shlb
test
cwtl
cld
cmp
dec
sahf
cmp
insl
xchg
into
daa
pop
sbb
insb
mov
mov
aas
int3
sub
mov
loope
dec
push
add
adc
push
inc
inc
xchg
loop
adc
leave
mov
fistpl
cmpb
ret
mov
sbb
loope
sub
scas
andb
sbb
rorb
mov
mov
icebp
mov
sub
cmp
mov
pop
xor
mov
imul
pop
mov
adc
lret
or
stos
sub
addr16
adc
sbb
add
mov
divb
jbe
je
mov
rorb
lds
mov
dec
xor
rcr
dec
jmp
mov
sub
lea
add
test
mov
xor
mov
mov
inc
popa
cli
sub
jno
jl
ja
repnz
mov
xchg
pop
outsl
imul
imul
and
mov
rorb
repnz
sbb
rolb
pop
or
mov
movsb
out
dec
mov
sahf
and
adc
pop
in
push
es
rcrl
in
fs
xchg
xor
mov
ds
in
leave
clc
jnp
jecxz
dec
leave
pusha
push
mov
popa
fisubrs
loope
mov
jg
xchg
inc
xor
sbb
jle
arpl
lods
pop
movsb
les
lret
dec
ljmp
popf
fisubrl
and
sarb
outsl
inc
mov
and
movsb
mov
add
cmpsl
push
cmp
cs
mov
dec
pop
or
cmpsl
imulb
loopne
movsl
sbb
shll
out
jecxz
or
add
test
aaa
in
mov
mov
pop
push
fsubrs
rcrb
and
test
ljmp
fdivl
jno
xor
pop
mov
idivl
loopne
xchg
insb
mov
sahf
arpl
dec
and
idivl
cmpsl
xchg
ljmp
pop
ror
nop
push
mov
pushl
insb
aaa
pop
cmp
dec
std
xchg
add
out
shr
dec
add
mov
faddl
push
sub
mov
test
inc
pop
outsl
add
push
fadds
jno
or
daa
shl
cli
out
cmp
in
push
add
hlt
or
cmp
lds
loop
pop
js
xchg
popf
lahf
pop
mov
sar
push
xor
and
adc
enter
or
fidivrl
xor
pop
lods
pop
mov
sub
dec
inc
pop
pop
insb
mov
jp
rclb
jnp
inc
inc
daa
sub
orb
imul
scas
dec
movsb
adc
je
rorl
repz
xchg
movsb
mov
popf
stc
sbb
mov
jnp
test
stos
popf
ds
or
mov
mov
imul
call
push
fsubl
fisttpl
sub
fcoml
mov
dec
mov
out
or
fldcw
dec
mov
xchg
cmp
mov
jmp
pop
loop,pt
jo
jnp
mov
push
mov
mov
int3
sub
popa
in
mov
sti
add
jle
xor
frstor
nop
enter
lea
push
jle
aad
mov
bound
cmp
insl
mov
mov
or
repnz
subl
mov
ljmp
nop
inc
pop
popa
aas
jecxz
loop
jnp
sub
dec
sahf
jge
rclb
fisubl
out
lahf
mov
cmpsb
cmpsb
mov
faddl
jg
xchg
mov
ja
push
xor
sti
in
scas
dec
and
repz
imul
ficompl
add
lcall
sub
adc
ret
mov
pushl
pop
sub
daa
dec
sub
shl
rcrl
jae
ds
jae
idivl
test
adc
push
je
or
scas
mov
jns
add
mov
imul
fwait
cltd
das
call
pop
aad
data16
sub
sub
dec
fldcw
pop
jae
push
mov
mov
outsl
push
mov
scas
mov
negb
lea
push
mov
lods
xor
movsb
sbb
sbbl
push
jbe
xor
je
sbb
jle
stos
and
jmp
jae
subb
cmp
negl
popa
and
clc
adc
adc
cmp
pushf
adc
mov
dec
ljmp
rcrb
dec
push
mov
xchg
test
mov
in
jno
sub
or
pop
sub
jo
aaa
mov
or
mov
sahf
lds
and
mov
sahf
out
aam
cmp
sub
jmp
mov
lea
pop
or
xor
int
pop
mov
insl
in
rcrl
dec
das
push
out
jae
xor
xor
cli
xchg
sbb
cmc
incb
xchg
fidivl
pop
or
std
aam
mov
sbb
pop
or
add
mov
and
push
mov
lret
add
fwait
int3
and
rcr
and
mov
cmp
cmp
inc
int
adc
gs
pop
sahf
js
movsb
mov
test
jo
mov
das
pop
adc
pop
or
mov
decb
das
sub
out
jne
int
in
mov
int
repz
mov
add
and
and
jns
cltd
shlb
adc
loope
jae
scas
enter
loop
inc
xchg
mov
xchg
push
idivl
cmp
pop
ljmp
or
xchg
repz
rolb
mov
add
lret
or
scas
xchg
ror
int3
dec
fldcw
jns
cmp
or
aas
jecxz
add
jecxz
hlt
ljmp
add
dec
or
mov
mov
mov
push
icebp
aas
rcll
jnp
mulb
mov
rorb
pop
mov
loop
not
jg
push
xor
and
cld
sbb
mov
sbb
rclb
sbb
adc
mov
inc
pushf
std
jnp
push
mov
and
int3
jnp,pt
ficomps
fisubrl
xchg
adc
repz
mov
insl
mov
mov
mov
push
scas
addb
js
icebp
sbb
shr
pop
and
leave
pushf
ficoms
xlat
adc
int3
outsb
mov
fsubrs
xor
sarl
jae
and
cmpsb
fsubp
shrl
cmp
mov
pop
mov
jp
xchg
mov
xchg
cltd
outsl
stos
jo
add
decb
les
xchg
add
push
or
lahf
aas
xchg
loope
shl
push
xchg
pop
or
mov
xchg
ret
les
fucom
fcmovb
hlt
push
sub
ja
cmp
ror
sub
sbb
cli
stc
pop
sbb
cmp
loopne
fucomip
jmp
aaa
push
adc
dec
call
or
pop
mov
loopne
out
sbb
cmp
or
in
cs
mov
imul
ss
and
add
xchg
jae
push
sub
or
jmp
scas
jge
leave
ficoms
or
test
cmp
ljmp
inc
inc
mov
pop
xorl
mov
into
ljmp
jmp
add
adc
aas
add
lock
gs
add
adc
ret
test
aas
mov
les
cwtl
aaa
cli
lock
xor
xorb
add
shr
imul
mov
in
mov
ljmp
add
ret
cld
cld
iret
push
cmp
jae
ss
cmpsl
lods
mov
aas
mov
out
or
movsb
lds
xor
pop
xor
inc
scas
add
fwait
ss
mov
dec
aam
int
mov
xor
mov
inc
loope
mov
push
js
xchg
cmpsl
mov
add
out
icebp
sbb
sbb
scas
in
mov
imul
mov
xor
jg
inc
push
sbb
rcrb
clc
mov
and
jecxz
stos
push
cmpsb
jecxz
mov
and
aaa
outsb
fnstsw
popf
dec
sbbl
test
inc
loop
cli
xlat
dec
and
inc
push
dec
cmp
ret
xchg
insb
movl
pop
xorb
addb
lds
mov
ds
mov
jmp
mov
sbb
inc
sub
adc
data16
xchg
mov
cli
sbb
movsb
or
aad
xchg
xor
xchg
dec
stc
imul
int
pop
xor
mov
stc
fcomps
and
pop
pop
ret
rorb
fldt
mov
pusha
cmp
sub
aam
scas
mov
jne
aad
cmp
mov
add
ss
aad
mov
xor
es
jo
adc
out
and
inc
divl
je
mov
mov
aam
jmp
divps
lods
sub
add
fstps
xchg
out
and
movsl
test
pushf
andl
into
xchg
jbe
movsb
xchg
pop
add
push
fidivl
mov
mov
lret
fsubrs
sub
inc
idivl
cmpsl
cmpsl
cmpsb
or
mov
pop
mov
xchg
mov
mov
push
dec
fcompl
sbb
mov
pop
inc
fwait
cli
dec
shll
loop
cmpsb
js
rorl
mov
hlt
loope
arpl
and
sbb
and
adcb
dec
xor
cmp
push
jns
push
pop
fcmovnb
inc
add
sbb
es
push
dec
ret
iret
sbb
mov
dec
cltd
in
jb
repnz
dec
cld
or
xor
fcmovnu
test
push
mov
lea
push
fnsave
push
adc
pop
mov
and
inc
test
adc
lods
aas
insl
jnp
test
push
into
data16
cmp
in
insl
leave
push
js
in
jbe
jmp
sbb
popa
insb
ret
xchg
jae
shlb
call
int
shrl
xor
mov
xchg
push
push
or
cmpl
pop
pop
sub
test
repz
mov
loopne
sub
and
mov
movsb
aam
ret
xor
adc
mov
test
jnp
push
jne
or
fdivr
cltd
mov
and
jp
mov
fs
icebp
xor
xor
inc
lods
adc
sbb
fistps
std
push
pushf
jo
adc
call
push
cmpl
repz
and
mov
je
adc
mov
mov
jbe
sbb
adc
in
cmp
jmp
cmp
loope
sub
xor
mov
mov
and
data16
fdivl
cmp
loopne
push
loope
daa
sbb
inc
out
push
rcll
mov
lods
pop
ficompl
jmp
xchg
pop
cmpsb
test
sub
in
sub
int
add
dec
fxch
shr
jle
fcom
adc
ljmp
lds
enter
aaa
mov
mov
pop
inc
mov
das
jae
xchg
and
push
inc
and
push
mov
bound
mov
mov
or
hlt
mov
adc
push
out
add
jmp
mov
iret
fldt
xor
int3
jecxz
iret
mov
ljmp
cmpsb
add
int3
dec
dec
pop
mov
adc
iret
sub
test
lea
cmp
jmp
sbb
repnz
sub
rolb
mov
cmp
xlat
je
stos
dec
sub
and
popf
test
in
xor
das
leave
cmp
sbb
push
jg
enter
mov
xchg
pop
icebp
scas
dec
fmull
popa
test
pop
sub
push
icebp
sub
rorl
inc
dec
mov
inc
in
je
mov
iret
mov
aam
or
rcl
fnstenv
mov
or
xchg
push
in
xchg
xor
push
int3
leave
shlb
cmp
jns
dec
dec
mov
pushf
push
vmread
int3
inc
sbb
movsb
int3
stos
sub
aaa
leave
inc
and
sbb
test
pop
jo
or
ss
sbb
sub
mov
mov
or
xchg
insl
mov
jno
mov
testl
pushf
add
repnz
stc
sti
mov
clc
imul
xchg
pop
aas
icebp
sahf
or
jnp
pop
ljmp
incb
fs
xchg
lods
push
jle
pusha
ss
pop
repz
addr16
push
ret
xor
outsb
nop
jg
jae
cld
push
add
jecxz
mov
bound
out
cs
loopne
xorb
sbb
xor
jmp
inc
xchg
cwtl
add
mov
mov
cmp
inc
fisttpll
adc
pop
or
jp
xchg
int
jae
jecxz
sub
add
dec
xor
jg
xchg
jmp
push
scas
nop
jno
push
pop
adc
push
mov
les
mov
repnz
std
arpl
out
xor
sbb
test
push
and
incb
add
mov
mov
cmp
es
cld
xor
out
xor
lods
mov
mov
std
pop
mov
icebp
decb
add
jo
movsb
sbb
cld
push
inc
cltd
stos
pop
roll
std
and
jnp
test
scas
jle
ret
insb
inc
fwait
mov
adc
pop
movb
pop
loopne
or
xor
fstpl
hlt
fistps
push
push
adc
test
imul
js
dec
mov
jp
mov
leave
jg
mov
xlat
loopne
lret
sub
inc
mov
cmpl
cmp
pop
jb
imul
fistpll
jo
inc
push
push
pop
adc
push
fidivs
sbb
iret
mov
sahf
cmc
mov
imul
xor
std
xchg
push
and
push
jnp
mov
test
fmull
insl
fadds
mov
lods
roll
xlat
pop
inc
test
ret
cmp
sub
sbb
pop
cli
lds
mov
mov
mov
cmp
std
fs
hlt
xchg
cmp
jle
lods
les
je
sub
loope
mov
jp
mov
add
cmpsl
inc
dec
loopne
pusha
jne
std
addl
test
outsb
inc
dec
xlat
adc
pop
scas
sbb
addr16
pop
scas
sub
subl
pop
cwtl
notl
jne
cmp
mov
sbb
push
fdivr
std
adc
adc
mov
test
jb
inc
outsl
sbb
ja
iret
ss
adc
mov
xchg
aaa
jnp
jmp
or
dec
call
push
aas
and
lods
jo
cwtl
scas
adc
in
bound
mov
test
ret
iret
pop
out
inc
xchg
add
jecxz
cmp
leave
inc
cmc
out
pop
xor
inc
rcrl
mov
inc
sahf
push
cmp
or
or
in
inc
fdivrp
sub
push
daa
jae
dec
xor
xchg
out
xchg
call
mov
pop
or
inc
std
call
out
cli
mov
or
aaa
xchg
push
mov
insb
mov
lds
mov
sub
jns
loope
sub
popf
xor
adc
rcrb
aad
test
and
imul
push
mov
push
arpl
mov
mov
pop
test
inc
popf
fwait
inc
cmp
jnp
hlt
mov
mov
fmull
insl
dec
inc
adc
mov
push
push
push
je
sub
stos
mov
cmpsl
push
daa
xchg
in
in
fcoms
popa
and
mov
int3
cmp
test
jl
cli
jae
inc
and
repnz
mov
aaa
inc
outsb
mov
xchg
push
mov
out
loope
push
fldt
fsubs
int
or
xor
mov
jle
ss
sbb
std
dec
cmpsb
push
adc
sbb
rcll
add
sti
popl
dec
incb
push
iret
sub
adc
mov
adc
fildll
outsl
rol
push
mov
fdivrs
xor
cmp
jnp
adc
negl
push
cmp
sub
fsubp
scas
sahf
lea
cmp
arpl
cld
shr
cmpsb
lahf
fwait
int3
out
arpl
add
aad
in
pop
dec
mov
incl
mov
inc
stos
mov
sbb
inc
adc
sti
fstpl
inc
mov
adc
add
pop
rcrb
out
inc
or
jp
ss
mov
or
popa
dec
and
cltd
sub
xchg
mov
mov
je
stc
sbb
cmp
cmp
add
add
push
hlt
loopne
into
fwait
add
test
sbb
mov
jnp
scas
call
dec
sub
fimuls
adc
icebp
mov
insb
push
jmp
pop
in
pusha
dec
int
mov
inc
dec
popa
mov
xchg
and
cmp
push
push
inc
ret
loop
jo
popf
mov
test
mov
xchg
pop
mov
jnp
seta
mov
mov
mov
dec
aas
inc
into
cmp
adcb
sub
adc
xchg
gs
aas
stc
cltd
pushw
jecxz
adc
iret
jno
xchg
jp
aam
add
leave
mov
shr
push
addr16
lahf
dec
fadds
mov
dec
jmp
std
movsl
dec
out
mov
mov
aas
and
xchg
fstps
mov
xchg
xor
fidivrl
clc
aam
fadds
dec
cmp
jp
lock
dec
sub
jg
push
pushf
std
jp
or
adc
jae
xchg
xchg
xor
aam
cmp
push
adc
test
jb
ficompl
sub
ret
cli
fldenv
sub
mov
test
xor
popa
popf
fdivr
or
sbb
je
sub
adc
adc
sub
ret
fs
push
jle
jns
scas
fwait
shl
shrl
cmp
aam
sbb
pusha
add
out
add
pop
loop
int
out
rol
sub
xchg
std
and
jbe
jmp
cmp
gs
or
aam
push
mov
adcl
ret
outsl
and
imul
iret
lahf
rorl
or
gs
cmp
pop
or
xor
lods
subl
sti
jbe
add
stos
or
sahf
loopne
push
repnz
sahf
ds
pop
fcmovnu
nop
fs
or
mov
mov
dec
sub
scas
xchg
addr16
jge
daa
push
push
jle
call
and
or
inc
mov
test
sahf
cmp
xchg
std
lahf
pushl
call
sub
nop
js
sbb
xchg
inc
push
push
std
mov
cmpsb
mov
repnz
lret
mov
lods
hlt
ljmp
sub
js
mov
and
mov
xor
cwtl
cmpsb
sub
sarb
sar
ret
sbb
jecxz
lods
lret
scas
lahf
xchg
adc
inc
push
hlt
in
pop
mov
adc
xchg
dec
add
ljmp
sub
xchg
repnz
push
mov
jl
and
mov
or
out
aam
inc
cmp
call
jns
lret
pop
lret
addr16
xlat
loop
pop
jp
add
in
and
fildll
lock
popa
das
cmpsl
mov
ljmp
push
stc
ds
fbstp
xchg
sbb
dec
in
mov
sbb
arpl
mov
movsb
sahf
and
pop
sbb
push
dec
inc
mov
test
clc
les
adc
inc
scas
sbb
mov
in
das
jg
loope
negl
cld
ret
loope
lds
js
dec
mov
jmp
aas
arpl
sbb
cmp
adc
mov
or
mov
out
jns
rorl
pop
mov
or
test
sub
std
js
stos
xchg
pushf
sub
mov
lock
inc
push
lret
lods
leave
push
subb
stos
in
scas
inc
ret
ljmp
addb
jbe
cmp
push
cli
mov
dec
test
insb
arpl
xlat
jb
xchg
push
scas
sbb
pop
fwait
mov
dec
or
lahf
cld
in
jnp
xlat
mov
mov
cmp
sar
dec
stc
repz
sub
lds
inc
aam
out
lods
outsl
mov
push
jl
lods
sbb
clc
push
clc
out
fstl
cmpsl
lcall
pop
mov
fists
sub
notb
adc
inc
movsb
xchg
mov
les
iret
lds
addr16
insb
push
fs
sub
scas
mov
mov
lea
js
scas
and
aam
mov
or
lcall
jl
cmpsl
adc
push
cmc
push
or
pop
lret
out
cmpsb
mov
mov
dec
int3
call
fs
outsb
cmp
or
pop
inc
stos
sbb
jns
les
shlb
push
xchg
mov
out
fmul
dec
stos
sbb
mov
ret
testl
fsubrs
aas
lods
dec
cmp
hlt
divb
sub
mov
pusha
add
movsl
mov
xchg
ss
fsubr
pop
pop
or
mov
test
push
dec
and
pusha
jno
add
mov
mov
testb
fistl
mov
mov
add
push
in
inc
fwait
into
out
leave
fisubl
arpl
pop
mov
out
cmp
fnsave
xchg
es
xchg
jmp
stos
fxam
ss
or
mov
lds
mov
popa
sbb
movsl
into
sub
xor
hlt
or
je
xor
push
fisttpl
add
sbb
cld
pushl
dec
in
jge
sbb
jmp
and
cltd
jno
add
arpl
daa
jge
testl
int3
jmp
jp
cmp
cmc
mov
or
push
les
jp
cmp
add
call
push
add
mov
aam
and
fs
adc
repnz
push
popa
inc
xchg
xlat
out
cmp
imulb
insb
sub
push
enter
pop
shrl
or
sub
test
mov
in
and
mov
test
add
sub
push
adc
jge
adc
test
rcl
or
imul
mov
testl
xchg
cmc
sahf
xlat
pop
xchg
cmp
mov
lahf
outsb
adc
aam
and
dec
mov
aas
xor
lds
mov
cmpsb
les
cwtl
sub
jp
adc
das
call
sub
xor
stos
add
mov
jge
add
loop
outsb
shlb
sub
xchg
xchg
fisttpll
sbb
and
and
les
les
sub
push
cwtl
dec
andl
popa
test
loop
fcomi
addr16
inc
adc
xor
rcl
sti
cmp
xchg
or
adc
cmp
scas
test
mov
rep
fcmovbe
jb
les
mov
fmuls
add
fisubrs
push
test
jecxz
sahf
jecxz
mov
pusha
into
and
cmpsl
gs
cmp
out
shll
int
enter
sbbb
dec
and
mov
mov
inc
dec
faddl
mov
mov
lods
push
insb
mov
mov
add
pop
ja
mov
mov
ss
cmp
addr16
mov
xor
lahf
jmp
ret
push
sti
or
int
jmp
cs
ret
mov
fcompl
sbb
and
stos
push
icebp
test
mov
mov
imul
mov
pop
int
fwait
xchg
xor
fistps
pop
mov
push
mov
add
jge
mov
in
sarb
dec
je
mov
or
or
jae
xor
shll
inc
incb
adc
mov
mov
mov
int3
insb
jge
fbstp
inc
cmp
xor
das
xor
ret
std
mov
inc
cmpsl
test
hlt
cli
jge
pop
lcall
xchg
test
stos
push
mov
cwtl
mov
sbb
out
leave
in
or
sub
cltd
sbb
dec
mov
nop
push
inc
aaa
pop
fistps
push
sbb
popf
dec
outsb
jp
sub
ds
mov
out
jl
xchg
sbb
mov
sbb
lock
clc
sub
cld
xor
pop
ss
pusha
jo
pop
mov
imul
lds
ja
sub
push
or
mov
aad
insl
mov
mov
xchg
inc
mov
inc
push
inc
mov
push
mov
or
fdivrl
mov
add
icebp
and
adc
mov
push
sub
ret
push
adcl
leave
mov
pop
xlat
fisubrl
insb
and
pop
jp
loopne
fisubs
adc
out
pop
inc
mov
popf
es
or
jb
adc
push
stc
fistpl
inc
repnz
cs
stos
popa
dec
pop
inc
jbe
push
test
fwait
das
xchg
sbb
popa
popa
std
push
mov
push
pop
pop
aas
jl
add
movsl
xor
das
fs
or
imul
sub
or
mov
js
push
mov
push
xor
xchg
lods
and
lods
mov
in
add
push
movsl
sub
mov
aaa
jle
ficoms
pop
and
add
out
test
xor
fldt
mov
xor
test
mov
mov
lods
xchg
fs
enter
insb
xchg
mov
add
repz
jg
xchg
or
repnz
pop
ljmp
cmc
or
jge
push
xchg
inc
jp
pop
push
add
mov
mov
test
or
cld
ja
icebp
inc
mov
es
leave
sub
insb
iret
cli
mov
and
nop
sub
cmc
js
xor
movsb
outsl
mov
aas
xchg
je
hlt
push
jg
ss
outsl
outsl
int
out
lret
jns
pop
mov
push
mov
aam
fbld
ljmp
pop
into
mov
arpl
push
or
sub
mov
cmpsl
push
push
mov
jno
fstpl
push
inc
loop
insb
in
push
xor
pop
pop
fnstenv
fiaddl
in
hlt
fcomps
xchg
dec
insb
and
or
out
stos
imul
mov
in
dec
icebp
test
clc
jmp
cmp
js
sbb
push
inc
pop
movsl
cmp
hlt
jb
sub
pop
aas
xchg
inc
and
and
scas
fwait
movsb
pop
or
in
inc
mov
sub
adc
jp
iret
sbb
scas
or
leave
and
subb
js
add
bound
adc
or
jne
bound
test
jl
jb
or
movsb
xchg
stos
popf
and
mov
inc
aas
mov
cld
cli
dec
aaa
fbstp
pop
in
inc
xor
stos
outsb
inc
xor
shlb
sub
frstor
add
repz
popa
int3
cmp
jno
pop
pop
xchg
fabs
add
int3
or
lds
mov
and
fcmovu
outsb
cltd
xor
pop
pop
rcll
and
insl
call
ret
cwtl
xor
movsb
push
and
rol
jmp
sub
das
stos
sbb
mov
movsb
mov
add
xchg
adc
dec
dec
loope
sbbl
add
add
scas
repnz
lret
push
xlat
mov
jecxz
mov
xchg
push
int
mov
push
mov
mov
inc
in
xchg
mov
imul
pusha
inc
clc
cmpsb
lahf
push
imul
dec
xchg
out
xchg
into
jge
mov
dec
rcrl
sarb
clc
cwtl
fcoml
sub
jnp
outsb
frstpm(287
int3
xchg
rorb
jmp
cld
shl
dec
xchg
and
jnp
pop
sub
cmp
mov
ret
rcll
mov
xor
push
adc
xchg
std
xchg
cmpb
aaa
cmp
sahf
out
pusha
repz
in
mov
inc
stc
pop
pop
mov
xor
ss
pop
inc
sbb
pop
in
mov
cmpsl
mov
outsl
psrad
test
jb
test
sub
xchg
inc
loopne
in
sub
lock
rclb
push
sub
xor
push
shll
sbb
fld
aad
xor
out
jg
or
jo
bound
push
stc
movsb
or
test
daa
sbb
sub
mov
lahf
push
dec
stos
lahf
lods
sbb
xor
push
cmc
cli
ret
and
addr16
lods
add
popa
dec
push
scas
or
fcoms
cmp
mov
xchg
fucomi
das
fcoms
jp
lret
dec
fidivrl
mov
aas
push
aam
pushf
out
mov
pushf
faddl
xchg
mov
leave
or
sar
or
leave
movsb
fs
pop
adc
and
xor
sub
push
sbb
out
insb
adc
pop
sti
cli
mov
xchg
xchg
andl
push
inc
into
fmuls
cltd
lods
lret
aaa
xor
inc
roll
out
aas
pop
pushf
add
pop
xor
std
pushf
inc
cmp
push
or
or
das
sbb
push
shrb
fs
ja
lds
mov
push
fdivl
and
cmpsb
xchg
outsb
repnz
stos
js
sahf
xchg
push
xchg
sub
or
sub
in
xor
xor
jbe
cmp
fs
in
cld
cltd
data16
popf
jmp
dec
cmc
sub
jno,pn
fwait
add
test
dec
stos
add
movsl
lods
neg
cwtl
scas
add
rcl
sbb
in
jbe
jle
cmpb
fistl
sbb
cmp
jnp
pop
mov
and
xchg
out
or
cmp
iret
inc
mov
push
scas
adc
jg
cmp
popf
std
idiv
dec
cli
push
and
insb
xchg
call
adc
and
sbb
pop
das
insl
aad
and
mov
int3
subl
insb
mov
adc
mov
push
or
xor
int
inc
xchg
xchg
sbb
xchg
sub
test
mov
fmull
jmp
movsb
andb
push
mov
push
jmp
adc
flds
in
push
cmpsl
add
sub
and
xor
adc
into
push
sub
movsb
pop
pop
ss
xor
xchg
cmpsl
jp
ret
int
sub
sarl
into
and
mov
mov
mov
popa
lods
orl
push
push
insl
sti
insl
push
popl
enter
lcall
daa
imul
loope
test
dec
cwtl
inc
and
xor
dec
dec
test
fcmovnu
aas
xor
xchg
outsl
es
negl
mov
sti
and
dec
jecxz
test
lods
mov
loop
inc
enter
imul
mov
push
mov
outsb
cmp
add
xchg
repnz
adc
insl
into
aas
inc
aaa
inc
xchg
cmp
pop
std
dec
lret
mov
xchg
sub
cmpsb
mov
fs
fdivl
add
stos
pop
jg
sbb
fstps
daa
repnz
lds
stos
pop
sub
mov
sarl
ret
add
call
pop
jl
mov
mov
movsb
push
xchg
sub
push
ljmp
dec
inc
popa
lods
cmc
into
or
cmp
sbb
addl
mov
aas
sahf
push
bnd
or
frstor
mov
or
push
ficoms
xchg
aad
xchg
jnp
mov
mov
jp,pt
popf
or
dec
in
lahf
jge
mov
xchg
xchg
popf
aad
hlt
and
push
and
in
dec
xlat
in
sub
mov
adc
add
dec
xor
mov
ret
and
sub
adc
or
xlat
fnsave
out
enter
in
mov
scas
inc
adc
pushf
ret
dec
adcb
sbb
shll
sub
je
pop
loopne
inc
sarl
stc
std
dec
mov
lret
xchg
std
mov
add
into
mov
scas
cwtl
xchg
jae
lds
push
xchg
sahf
mov
bound
xor
divl
lahf
dec
mov
stos
xlat
outsb
and
push
nop
pop
and
fistpll
leave
pusha
xor
xor
pusha
push
idivl
lods
cmpsb
mov
cld
je
dec
shld
lret
loopne
imul
lea
xchg
sbb
mov
add
sbb
ret
fimull
std
out
icebp
inc
pushf
push
jmp
pop
push
inc
es
adc
inc
ja
pop
and
push
je
mov
cmp
cmc
mov
add
jg
inc
inc
mov
dec
sbb
out
jl
jnp
scas
test
xchg
loope
int3
cs
cltd
and
jo
push
cmp
cmpsl
fisttps
int3
adc
in
sub
cs
arpl
inc
popl
inc
mov
fidivrl
arpl
clc
sbb
xchg
and
sbb
mov
mov
pop
lahf
cmp
aam
pop
push
sub
jnp
test
push
rolb
mov
fsubp
pop
fcomi
test
lret
dec
add
push
hlt
mov
data16
lods
push
cmp
sub
push
sbb
mov
push
add
fwait
mov
in
scas
pop
pop
icebp
mov
sbb
aam
sbb
add
and
inc
dec
andb
xchg
jbe
mov
lret
pop
icebp
pop
fwait
mov
mov
dec
mov
add
sub
mov
add
push
pusha
aaa
popf
adc
aaa
repz
and
sarl
mov
mov
xor
fwait
lcall
leave
xor
lock
idivl
xchg
ds
shll
stos
dec
or
dec
cmp
pop
adc
cmp
xlat
xor
push
push
push
mov
imul
xchg
mov
and
sub
pop
mov
add
adc
xlat
sub
lcall
lock
mov
loop
or
or
add
gs
mov
xor
or
cmp
pop
inc
and
jp
in
jmp
fldenv
xor
rolb
rcrl
adc
repz
faddl
ret
loop
pop
cmc
testl
sub
cmpsb
adcl
bound
iret
cs
sarl
cmp
dec
xchg
xlat
shll
adc
ret
in
enter
sub
ljmp
insb
cmp
cmc
jo
stos
popf
jne
repz
dec
cmpsl
roll
rcll
je
jmp
clc
outsb
sub
shlb
subl
loope
xchg
gs
in
jno
js
out
arpl
pop
inc
pusha
push
xor
mov
jmp
pop
add
or
xor
cwtl
mov
outsb
jae
daa
movsl
rcrb
and
mov
test
pop
rcl
pop
int3
mov
test
lods
jl
jp
sub
dec
adc
adc
adc
jecxz
je
stos
lret
pushf
pop
fldt
dec
sub
add
or
sbb
lds
xchg
pop
mov
add
xor
nop
dec
add
ret
lret
aas
fcmovbe
shrb
add
or
jns
incb
cmp
sbbb
popa
fists
stos
jmp
dec
insb
sbb
xchg
test
pop
loop,pt
repz
xor
fbstp
outsl
decl
lods
cld
stos
add
fsubr
shrl
mov
int3
rcl
pop
cmp
sub
js
ljmp
mov
andl
jb
mov
mov
pop
lods
and
xchg
adc
mov
dec
fmulp
andb
repz
jmp
adc
pop
inc
std
test
les
or
mov
jb
mov
pop
leave
js
mov
pop
in
test
mov
je
push
daa
aad
ds
pop
mov
insl
aam
movsl
scas
xor
push
pop
scas
sti
psrlq
int
mov
inc
test
jne
mov
xor
lods
jae
mov
dec
loopne
shll
pushf
gs
hlt
mov
or
push
push
sbb
stc
fwait
lcall
fstp
and
xchg
mov
push
pushf
test
or
xlat
cwtl
mov
cltd
fadds
aas
mov
fadds
sub
and
loopne
das
insl
repz
sub
and
cmp
xor
stos
icebp
je
in
leave
mov
cmp
dec
xor
cmpsl
mov
mov
repz
fs
mov
mov
push
sub
dec
hlt
mov
push
outsl
stos
or
xchg
add
scas
push
repz
cmp
jp
pop
sahf
aam
push
adc
mov
cmp
pop
push
fnsave
fwait
xchg
fbstp
dec
push
and
sub
loope
xchg
or
and
popf
xchg
dec
pop
adc
cli
push
pop
jo
xlat
add
imul
cmpl
lahf
popa
repz
inc
repz
mov
in
jns
or
jae
and
out
cmpsb
push
loopne
mov
push
xor
jmp
inc
xor
or
jecxz
out
pop
push
push
dec
fucomip
pushf
push
jmp
cwtl
rcrl
cld
push
adc
scas
cs
mov
movsl
aad
jmp
mov
xor
push
fs
rcrl
inc
outsl
lret
push
jbe
rol
fwait
push
lock
hlt
add
jl
mov
cwtl
xor
sti
repnz
insb
push
or
mov
pusha
mov
cmc
adc
sbb
mov
pushf
sbb
scas
adc
fwait
in
out
popa
lahf
aaa
mov
xchg
jne
adc
into
add
and
daa
dec
or
es
enter
bound
in
pop
xor
les
add
dec
repz
add
cmp
inc
jae
into
and
pop
out
xlat
xchg
ss
jg
pop
cmpl
sbb
xchg
in
xchg
jge
push
mov
lahf
std
jle
scas
xor
loopne
cwtl
je
dec
outsl
fwait
inc
push
sbb
imul
cli
cli
out
stos
sbbl
inc
cmc
pop
sbb
pop
test
stos
mov
ret
cld
lods
mov
and
push
inc
push
loope
and
sub
xchg
daa
cmp
jl
lahf
lret
mov
mov
imul
pusha
mov
xchg
xchg
lods
xchg
into
jo
enter
or
fstps
nop
rcl
mov
pop
dec
inc
in
pushf
mov
and
repz
imul
bound
mov
inc
xchg
sub
out
negb
and
fstps
nop
popa
add
push
pusha
enter
sbbb
in
ja
mov
push
xchg
dec
add
out
aas
addr16
push
insb
fs
sahf
jle
scas
std
addr16
test
and
cmp
insl
cmp
push
lods
jne
xor
loopne
int3
hlt
jmp
lcall
daa
hlt
mov
je
push
xor
lods
sbb
fidivrl
imul
loop
mov
inc
std
stc
ficoml
and
subl
stc
and
sub
aad
out
sbb
xor
insl
ret
ret
sbb
jge
or
sbb
pop
int
inc
cld
out
xorps
push
loopne
sti
in
nop
addb
mov
bound
add
add
lods
sbb
mov
fnstsw
pop
xor
test
pop
cld
adc
ss
test
cwtl
inc
xor
jns
mov
jecxz
or
mov
adc
mov
dec
adc
jp
mov
push
sub
push
or
push
jge
sbb
shrb
xchg
rorl
mov
shlb
leave
insb
lods
popa
cmpsb
sbb
mov
push
pop
jns
and
in
jnp
mov
xlat
sub
stos
int
into
shr
pop
add
aaa
dec
cmp
stos
add
dec
loope
out
mov
adc
loop
shrl
lea
clc
or
sahf
out
jg
cmp
xor
mov
jae
and
and
pushf
cmp
jmp
xchg
mov
das
mov
mov
push
pusha
int
repnz
push
stos
pop
out
aas
xchg
adc
push
or
pop
sbb
pop
pop
cli
inc
insl
push
addr16
pop
imul
aad
inc
fdivl
jmp
test
xchg
xor
inc
hlt
dec
scas
adc
mov
in
fnstsw
loopne
push
loope
push
mov
out
lcall
xor
mov
rcll
xchg
pop
sub
xchg
sbb
inc
and
mov
gs
enter
pop
in
add
dec
imul
jmp
mov
jno
cmp
cmp
ljmp
incl
xchg
clc
push
add
adc
mov
pop
mov
ret
add
jecxz
push
lea
out
jo
cld
adc
cld
leave
loopne
arpl
icebp
andb
out
pop
or
in
and
pop
jl
cmpsb
adc
test
sarl
fwait
ret
roll
stos
sub
sbb
xor
jg
dec
or
push
jb
sub
push
adc
pushw
int3
pop
jae
insl
sbb
inc
rclb
fnsave
orl
loop
jp
adc
and
jmp
adc
sub
mov
cs
jg
cld
cmp
mov
pop
push
add
inc
popf
lods
xchg
ljmp
mov
aaa
jecxz
add
cmp
jmp
push
jmp
insb
iret
adc
js
or
cmp
mov
push
sub
jae
test
mulb
mov
mov
jle
arpl
or
testb
mov
sbb
cmc
sub
ret
in
popa
iret
sar
imul
jecxz
and
inc
in
test
cmpsb
imul
push
stos
mov
aaa
xor
dec
adc
cld
push
sbb
xor
pop
insb
inc
cmc
mov
repz
and
pop
dec
cmp
subb
iret
sub
add
ljmp
xor
aam
push
rcrl
lret
ss
out
sti
sub
cmc
arpl
gs
les
test
fwait
in
ror
jb
xchg
leave
dec
roll
push
subl
pop
fwait
repnz
sti
sub
dec
inc
std
push
repz
xchg
jecxz
xchg
adc
and
jbe
lea
dec
mov
cmp
ljmp
mov
shld
jl
dec
test
je
scas
int
int3
and
xor
xor
sbb
or
daa
dec
and
std
cmp
push
pop
addr16
es
pop
adc
xchg
adc
xchg
adc
cmp
xchg
mov
sub
cmpb
push
sahf
lods
xchg
inc
push
dec
xchg
sub
flds
push
jecxz
xor
and
pop
mov
mov
scas
fs
shll
int3
daa
fistps
mov
sbb
ret
sbb
stos
sahf
outsb
cmp
ret
shll
loopne
in
inc
hlt
lcall
setg
push
xchg
fcompl
sub
xchg
mov
dec
out
or
je
mov
out
movsl
sti
xchg
xchg
lods
xlat
xrelease
scas
add
push
sbb
mov
nop
jo
sbb
mov
cmp
sub
xchg
movb
jl
insl
addr16
mov
enter
rcl
inc
dec
push
shrb
out
sbbl
aaa
xor
jne
test
fcomi
push
adc
ja
and
lcall
aad
xor
inc
dec
int
push
push
inc
ret
dec
push
lock
stos
mov
adc
jmp
clc
out
cmp
add
add
in
scas
and
shrb
dec
fcmovnu
test
jmp
sub
fwait
lret
je
ds
dec
add
imul
mov
repz
sbb
add
xchg
sub
adc
dec
sub
or
jle
mov
lods
dec
and
mov
fisubs
add
ss
sub
jne
mov
and
pop
push
addl
sahf
nop
add
lahf
leave
sub
out
mov
in
push
mov
pop
jns
jno
popa
rcrl
stc
jns
xor
pushf
xlat
fnstenv
lahf
pop
sti
jbe
pushf
cmpsb
cli
or
in
scas
out
shl
xchg
sbb
insb
xchg
mov
clc
or
sbb
jl,pt
inc
lock
cld
mov
scas
mov
cmp
mov
jge
jmp
xchg
leave
and
ss
mov
xor
xchg
pop
dec
insl
repz
pop
add
push
mov
xor
xchg
add
and
xor
gs
dec
dec
add
jg
jge
fiaddl
sbb
push
subb
sarl
xor
pop
test
xchg
addr16
ss
xor
pop
inc
mov
popa
fxch
pop
push
jmp
mov
std
dec
sub
sbb
and
mov
fimuls
je
fnstenv
push
push
or
iret
mov
test
mov
pop
shrl
int3
mov
sub
xor
popf
iret
jge
inc
arpl
sbbb
lock
insb
fcmovu
movsl
cmpsl
in
imul
pop
mov
ficomps
mov
xor
fisubs
stc
scas
fnstsw
mov
dec
jmp
jbe
movsb
xchg
fisubl
sahf
lock
push
or
stos
lret
sti
not
inc
dec
dec
push
shrb
pop
daa
sub
aas
jmp
fldenv
pop
pop
shrl
popf
or
pop
mov
int3
repnz
adc
in
movsl
sub
aas
repnz
in
xchg
test
jo
push
or
jne
lret
rcl
xchg
mov
add
fsub
out
push
sti
jae
gs
fisubs
adc
imul
and
ljmp
dec
jb
enter
inc
or
pop
sub
inc
sbb
xlat
fstpt
or
jae
xor
add
je
push
push
test
xchg
pop
movsb
jg
lahf
test
fcmovb
pushw
scas
repnz
adc
add
int3
scas
in
push
ja
popa
cld
push
ja
jmp
inc
out
scas
insl
cmp
lods
add
xchg
or
std
jb
insl
add
xor
mov
daa
outsb
js
adc
scas
loope
into
ficoms
in
mov
mov
adc
or
push
loope
shrb
fisttpl
xchg
in
loop
adc
in
sbb
aam
setg
mov
imul
push
fisttpll
cld
push
lds
int
jns
mov
or
xorl
pop
pop
cmp
mov
jno
push
popa
push
mov
pop
or
lahf
es
pushf
sahf
xor
lea
test
dec
movsb
push
cmp
xor
fsubr
les
popa
jno
cmpsl
cmp
cmp
cmp
mov
inc
jae
cmp
mov
in
sub
leave
ret
xchg
or
push
lds
mov
xchg
test
lahf
push
mov
xor
or
loope
xchg
addb
push
cmp
aas
pop
xchg
or
mov
lcall
subb
pop
cs
adc
add
jp
sub
cmpsb
mov
push
sti
arpl
jae
call
nop
inc
gs
iret
dec
sbb
jno
adc
push
cmp
push
xchg
and
andb
sub
sbb
ror
lods
sub
mov
mov
sub
dec
ljmp
inc
stc
xor
outsb
lcall
iret
inc
dec
xchg
sbb
shl
ret
scas
xchg
fld
adc
enter
xchg
sbb
bound
fsubrs
repnz
or
adc
jnp
jae
adcl
popf
xchg
lock
inc
jp
add
js
sub
lret
mov
out
inc
xor
subl
ljmp
jae
xor
ss
mov
aas
aas
jmp
pop
mov
stc
hlt
fldl
pusha
scas
push
sar
in
push
jg
xor
inc
dec
jecxz
aam
fwait
scas
je
inc
jbe
outsb
nop
dec
xor
cmp
stos
mov
mov
popa
mov
or
mov
out
push
sbb
inc
outsl
lret
lret
mov
cmpb
popa
xor
pop
fcomps
out
push
pop
dec
push
leave
jne,pn
sarb
xchg
jb
cltd
in
fmuls
sahf
pop
lock
dec
push
fisttpll
xor
enter
jae
rorl
scas
mov
mov
fs
pop
fwait
inc
sbbb
or
divb
jl
pop
dec
mov
xchg
dec
jp
ret
push
out
leave
xor
popw
dec
rcll
adc
jnp
subb
jecxz
and
daa
push
dec
push
mov
fadds
mov
stos
push
lea
fwait
inc
out
fsubs
adc
movsb
cmpsw
jo,pn
adc
repz
lods
test
push
pushfw
fistps
sahf
outsb
sbb
mov
xchg
mov
cmp
adcl
cmp
fdivs
gs
dec
jle
out
movsb
test
dec
jo
push
enter
cmpsb
out
mov
call
shrl
xchg
das
push
xrelease
call
cmp
lahf
jno
xor
or
cmpsb
insb
inc
outsl
dec
je
mov
push
sahf
bnd
ret
cmp
add
inc
mov
mov
std
in
xor
in
loopne
push
into
xchg
mov
imulb
fisubrl
and
loopne
lret
lods
adc
pop
mov
mov
mov
mov
mov
and
cwtl
inc
pop
icebp
add
mov
jecxz
aad
sbb
push
jl
insb
add
stos
lock
add
loopne
lods
pop
push
mov
adc
cmp
mov
adc
mov
mov
in
mov
inc
out
jns
aaa
scas
decl
mov
stc
pop
push
std
insl
jmp
lcall
aad
and
xchg
fdivs
adc
mov
mov
cmpsb
imul
cmp
loop
mov
pop
adc
jb
bound
cmp
jge
sti
push
push
dec
add
rcrl
mov
test
ljmp
sbb
bnd
movsl
cmp
outsb
fwait
jg
mov
addr16
clc
or
mov
mov
push
sub
testb
add
mov
insl
aaa
ss
sub
enter
shrl
loopne
mov
push
xchg
dec
mov
or
fsts
aad
mov
sub
or
cmp
lahf
mov
lock
or
test
mov
lcall
incb
mov
mov
rol
dec
imul
negl
movsb
mov
xchg
fsubrp
jg
ss
xor
movsb
in
out
adc
int3
cld
and
lods
pop
bound
fistl
or
int
ljmp
xchg
pop
enter
gs
jae
adc
rcll
cmp
ret
sbb
xchg
hlt
insl
pop
sub
dec
push
dec
lahf
outsb
rclb
xchg
push
pushf
sbb
mov
jnp
movsb
inc
outsb
aam
ret
or
testb
push
hlt
loope
jge
fistl
out
jns
jb
in
negb
cmc
push
push
outsb
xchg
jbe
flds
lcall
lcall
inc
in
push
or
mov
dec
and
and
sub
mov
xchg
rolb
cltd
dec
mov
insl
lret
arpl
outsb
and
dec
fistl
jbe
sub
inc
andl
sbb
pop
jo
push
pop
add
scas
shl
jnp
xchg
scas
xchg
jo
pop
inc
jne
dec
loope
mov
in
in
sub
and
sbb
scas
fs
popa
push
out
adc
mov
scas
push
mov
push
xlat
cmp
inc
mov
mov
rorl
outsl
pop
stos
dec
aad
icebp
jno
or
mov
mov
mov
xchg
cmp
aam
aad
or
imul
addr16
xor
and
in
into
aam
and
and
movsb
aas
push
push
iret
sahf
mov
dec
cmpsb
add
into
cmp
dec
lahf
into
ret
inc
ljmp
loopne
int
cli
and
mov
and
jae
xor
andl
ljmp
mov
xchg
mov
mov
popf
or
mov
fsubl
xor
sub
ss
cltd
es
jnp
push
outsb
cmp
dec
cmpsb
pusha
test
cwtl
xrelease
clc
cmpsl
xor
ljmp
sbb
inc
xchg
lret
outsl
and
sub
or
insb
dec
sbb
sbb
xor
pop
mov
arpl
mov
jns
aaa
xchg
push
pop
push
or
dec
sub
inc
cli
ja
jmp
mov
cltd
pop
xchg
mov
imul
xor
push
data16
xchg
lods
fiadds
xor
mov
mov
xchg
inc
jno
adc
adc
mov
cmp
andl
jno
add
sbb
xlat
fisubrs
lds
bound
adc
jo
mov
mov
push
or
pusha
repz
test
jge
add
test
loop
gs
lock
in
lret
jno
inc
movsb
push
or
mov
rcrl
pop
push
js
cmp
ja
imul
pop
dec
pop
jno
in
loop
push
and
add
popa
mov
cmp
mov
cs
imul
and
std
adc
jge
adc
pop
int
xchg
aas
pop
int3
in
call
xchg
mov
js
push
push
ljmp
inc
push
stos
or
icebp
mov
cmp
imul
or
add
mov
cmc
daa
adc
test
nop
mov
dec
into
aam
test
es
add
pop
or
xor
jno
mov
aam
xchg
ss
test
popa
scas
pushf
shl
shll
es
enter
cli
fwait
add
xchg
sarb
loope
fcompl
dec
push
pusha
pop
test
lahf
repz
and
stos
lds
cmpb
clc
idivb
flds
and
push
push
jge
xchg
cmp
mov
cmpsl
pusha
int
icebp
stos
lods
fwait
push
inc
jmp
sbb
sub
sbb
dec
ret
pop
sbb
ljmp
xchg
inc
lret
pusha
add
inc
jno
pop
mov
fidivrl
xor
test
in
outsb
call
clc
pop
xchg
cmp
adc
dec
mulb
push
nop
mov
xchg
push
and
dec
dec
in
cli
dec
add
push
lea
mov
mov
jecxz
and
mov
jmp
xchg
adc
imul
cwtl
sbb
or
cwtl
stos
addr16
adc
aaa
push
cli
sti
lods
data16
xchg
in
sbb
xchg
jae
loop
out
scas
cli
cvtps2pd
aas
sti
icebp
pop
scas
dec
cs
pop
loop
lds
dec
hlt
adc
js
ja
lret
add
dec
and
add
shll
jbe
jb
aas
sub
mov
lods
or
adc
push
lret
pop
cmp
fbstp
xchg
inc
lods
xor
mov
scas
movsl
lea
mov
mov
or
mov
xchg
leave
jge
cmp
inc
rorb
das
adc
fstpl
sub
xchg
push
xor
jno,pn
imul
xor
sbb
movsb
cmp
adc
dec
popa
pop
push
clc
xchg
sbb
lcall
mov
call
adc
lret
enter
or
mov
inc
lock
jnp
add
clc
testb
sbb
xchg
loope
sarl
jnp
and
add
inc
pop
push
fwait
jb
mov
and
sbb
int
orl
xchg
sbbb
lahf
sarl
and
jmp
in
ror
mov
xchg
cmp
mov
in
inc
jg
aam
and
dec
fs
pop
shr
pushf
sahf
push
fcmovne
cmp
cmpsb
pop
xchg
aam
sbb
fldl
cmp
iret
cmp
out
les
and
in
mov
adc
lds
xchg
cmp
aaa
xor
and
mov
jb
fistpll
cmp
ja
or
pusha
filds
jae
lahf
stc
inc
int
lods
mov
fsts
or
lea
icebp
lahf
inc
es
aas
mov
mov
and
or
adc
ds
cmp
pop
test
pop
mov
cwtl
and
das
fst
test
mov
inc
dec
test
push
cmp
rolb
mov
cmpsb
cmp
std
aam
pop
cwtl
xchg
or
xor
pop
into
lds
mov
jge
aaa
mov
popf
adc
mov
icebp
cmpsl
push
js
or
adc
insl
pushf
inc
or
push
mov
aas
add
pop
leave
repz
adc
pop
mov
aad
fbstp
mov
ljmp
int
scas
notb
lcall
repz
jnp
sub
pushf
fsub
in
jp
mov
fsubs
in
dec
mov
movb
sbb
xchg
pop
jg
mov
lcall
insb
pop
jmp
pop
mov
aad
push
and
pusha
or
and
je
daa
dec
enter
inc
scas
push
pop
cmp
popa
or
cmp
jecxz
arpl
fmul
imul
fnstsw
push
jo
bound
inc
lcall
dec
xchg
xor
sahf
sub
sub
and
enter
test
sub
aaa
add
data16
add
pop
ljmp
mov
and
xor
xchg
les
mov
outsl
das
pop
xor
frstor
dec
shll
mov
xor
call
pop
adc
hlt
scas
fwait
lret
fwait
adc
cld
sub
mov
mov
xor
push
ftst
fnstsw
jge
stos
out
xorl
pop
fxch
dec
ljmp
jmp
leave
cmp
push
out
add
sbb
cmp
gs
sti
fdivr
insl
ds
lahf
ja
mov
pushf
sub
idiv
adc
lahf
dec
jl
movsl
mov
and
cmpsb
mov
shl
mov
stos
jo
aaa
add
loope
bound
cli
testl
pop
xor
xchg
push
aad
inc
ss
fs
lahf
add
push
jge
mov
push
adc
lcall
ja
jmp
mov
imul
cmpsb
push
std
mov
ljmp
fimuls
cmp
outsl
rcrb
insb
and
repnz
jge
mov
push
popa
imull
test
add
xor
out
push
fs
jno
dec
jp
xchg
pop
shlb
outsb
scas
fnstenv
shl
stos
sahf
jp
jle
cld
push
sbb
and
js
stos
sub
neg
lret
jbe,pn
adc
add
add
fs
mov
aad
daa
jl
out
mov
pop
sbb
cmc
dec
aaa
das
and
cmp
scas
repz
push
dec
aaa
cwtl
imulb
out
mov
das
shrb
imul
pop
ljmp
rolb
pop
rep
xor
xor
fisubrs
out
xlat
inc
mov
shll
ds
xor
cwtl
mov
insl
sub
ficomps
or
jb
sahf
divb
push
out
mov
pusha
inc
hlt
iret
push
xchg
mov
pop
lcall
push
jle
jb
mov
xor
popa
jo
scas
sub
push
sbb
push
ret
push
loopne
mov
jbe
xchg
jecxz
jmp
pop
mov
lds
sub
clc
hlt
cmp
push
pop
subl
sub
repz
sbb
fnsave
mov
sub
cmpsl
pop
xchg
or
push
int3
std
inc
pop
mov
push
sub
jmp
js
adc
bound
roll
xchg
in
rcr
call
ljmp
lret
ficoml
jmp
stos
push
repnz
cmp
xor
fs
movsb
push
repz
mov
rcrb
jmp
push
or
dec
xor
xchg
sbbb
divb
repz
cmp
in
dec
adc
jmp
mov
hlt
pop
dec
xchg
mov
mov
fimull
push
cmp
je
cmc
fsubrl
cld
mov
jl
xchg
jbe
cmp
fwait
jne
fstpt
clc
jg
test
test
jecxz
shlb
cltd
jbe
mov
push
xchg
mov
test
andl
test
data16
pop
les
push
into
data16
mov
or
stos
lock
pop
sbb
cmp
or
mov
inc
imul
sar
push
xor
pop
cmp
push
dec
pop
out
ss
in
jl
jbe
mov
ljmp
dec
test
out
out
pop
sbb
and
cmp
adc
mov
xchg
inc
and
jle
repz
sbb
ret
call
push
daa
mov
and
xor
xchg
data16
loope
leave
pop
jae
mov
enter
clc
cmp
mov
or
mov
jecxz
test
xchg
rcrb
loope
cmpsl
call
or
mov
test
xchg
negb
pusha
into
xchg
push
pop
aas
pop
dec
das
mov
jne
gs
frstor
bound
pop
or
jg
adc
jge
insb
inc
add
int3
pop
mov
notl
xor
sub
adc
mov
xchg
addr16
mov
adc
xchg
cmp
mov
daa
push
and
stos
ficoml
pop
test
pop
xor
arpl
push
in
lods
je
mov
jl
push
lret
mov
add
rorb
mov
dec
enter
bound
sbb
stos
mov
in
and
sahf
cmpl
fmull
adc
std
popa
ja
xor
mov
jle
sub
push
push
fisttpll
pusha
push
call
xchg
rcrl
movb
popf
mov
sub
div
xchg
imul
mov
mov
xlat
je
pop
cwtl
data16
xor
mov
std
outsl
sub
clc
pushf
addl
fdivp
stc
loopne
mov
adc
lods
test
pop
add
fistl
dec
jnp
jns
ss
cmp
test
adc
lahf
fidivs
sub
into
jmp
adc
cmp
divl
cmp
loope
je
ret
mov
pop
fildll
push
ljmp
out
dec
stos
cmp
and
cmp
push
pop
jne
leave
pop
stos
mov
push
sub
int3
mov
arpl
sahf
pop
hlt
das
insl
stos
pop
or
jle
ficomps
shll
and
cmp
push
lret
push
jbe
stos
xor
jge
nop
je
sub
roll
add
mov
test
sbb
aam
push
mov
cld
icebp
xor
push
sub
fsubl
or
cld
or
mov
jbe
push
push
subl
xlat
mov
cmp
fimuls
daa
int3
cmc
call
stc
pop
mov
jmp
add
and
pusha
add
pushf
mov
and
lea
jmp
loopne
and
cmp
push
adc
mov
dec
call
ss
out
adc
pop
fsubr
mov
test
call
inc
jbe
sahf
decb
out
mov
xchg
mov
movsl
mov
enter
pop
inc
aas
test
mov
cmp
mov
jg
xrelease
scas
push
popa
test
xchg
pop
push
push
mov
mov
adc
sahf
int3
lahf
mov
repz
adcl
cmp
sti
xor
clc
cmp
sub
xchg
cwtl
jecxz
inc
inc
aas
sbb
push
jmp
dec
adc
adc
jnp
jno
xchg
push
mov
and
jno
loope
arpl
ljmp
jl
pop
fidivrl
lcall
mov
insl
push
fstl
mov
or
xchg
push
mov
mov
clc
leave
imul
and
xchg
loope
sahf
lds
gs
sbb
cwtl
fst
lods
push
dec
mov
push
mov
pop
lret
xor
es
and
scas
jmp
std
inc
mov
imul
mov
sub
jl
outsb
mov
or
aas
sub
clc
mov
pop
sub
or
lods
and
inc
loopne
mov
stc
and
mov
repz
xchg
movsb
pusha
lcall
popa
push
movsb
mov
jns
idivb
stc
addl
fcomp
mov
sub
ja
pop
insl
mov
ja
inc
enter
or
das
stos
sti
lock
cmp
fcompl
pop
lea
sub
cwtl
xchg
pop
in
rcll
repz
pop
pop
int3
popa
xchg
adc
cmp
mov
sub
dec
mov
cmc
int
sbb
inc
dec
insl
ficomps
xchg
pop
sbb
nop
add
xchg
push
push
sub
lahf
mov
out
mov
mov
push
in
sub
cmp
out
cmc
inc
dec
mov
inc
and
lods
loop
or
inc
mov
pop
mov
dec
mov
and
push
outsb
add
sub
push
addr16
dec
jo
and
push
enter
jne
xor
out
xchg
pop
testl
xchg
scas
out
jb
stos
adc
adc
dec
jge
push
movsl
outsl
push
add
and
icebp
push
arpl
imul
mov
sahf
in
or
ljmp
sub
add
arpl
movsl
or
pop
jno
popl
cmpsl
mov
mov
repnz
repz
vhaddpd
nop
or
clc
or
xor
mov
mov
stos
adc
xorl
sbb
push
pop
and
mov
gs
xlat
adc
mov
sub
jne
test
add
xor
sub
repz
adc
in
push
inc
push
imul
aaa
adc
mov
or
aad
mov
lahf
mov
jno
sbb
inc
cmc
iret
adcb
xchg
mov
insb
adc
dec
fidivs
shll
fisttpll
pop
fidivl
loope
popa
fwait
xor
dec
push
mov
into
cs
in
int3
push
mov
into
and
or
test
or
or
pop
aam
mov
out
mov
in
in
cmpsb
les
fdivs
ljmp
xor
pop
mov
push
dec
pop
pop
push
or
mov
scas
and
adc
test
les
and
and
fldt
ljmp
jb
decb
mov
aam
leave
adc
lea
fs
jns
xor
inc
sahf
mov
inc
fwait
pop
add
mov
fs
iret
cmpsl
lret
sbb
mov
adc
add
pop
fs
xchg
dec
scas
and
mov
xor
sub
movsb
and
cmp
xchg
es
push
inc
and
cmpsl
sbb
mov
shll
xchg
pop
push
sub
mov
xor
shlb
les
cmp
jno
mov
lret
test
mov
cmp
dec
repz
hlt
sbb
adc
roll
push
jb
sub
pop
fistl
les
mov
jmp
jbe
sbb
xchg
dec
int3
xor
ror
addl
cmp
in
dec
mov
shll
movd
rolb
inc
or
sub
mov
call
jo
xchg
arpl
dec
out
gs
mov
dec
popf
mov
push
mov
jmp
cli
lods
push
popf
repz
mov
cs
push
pop
popf
neg
pushf
orb
inc
mov
mov
push
test
and
ja
int
and
xchg
lods
rcl
jns
jae
fcoms
xchg
js
bound
lcall
arpl
movsl
mov
loope
mov
adcb
pop
cmp
sbb
in
xchg
push
pop
or
xchg
lds
movsl
das
icebp
mov
call
adc
stos
lods
pusha
gs
cmp
movsl
add
pop
xchg
lahf
mov
rorl
sub
push
fs
mov
push
imul
cmpxchg
jg
mov
cmpsl
gs
aas
into
lret
cmp
aam
mov
stc
inc
pop
test
pusha
pop
daa
xchg
ret
mov
mov
pop
adc
mov
lods
push
ljmp
push
push
lcall
fisubrl
mov
into
fidivl
addr16
mov
pop
insb
insl
into
sbb
stc
xchg
leave
jne
xor
add
push
lods
mov
out
stos
xor
mov
inc
sub
mov
movsb
ret
jge
jno
test
mov
xchg
mov
mov
adc
into
fisubs
mov
test
cmp
xchg
flds
cmp
sub
and
sahf
mov
cmp
adc
cmp
ret
push
cmpsl
sub
shrl
xor
cmp
mov
mov
int3
std
cmp
insl
pop
or
jl
std
inc
xor
ds
repnz
ja
push
push
jns
nop
sbb
dec
test
test
data16
push
mov
sub
cmp
cltd
or
cmp
in
and
xor
imul
dec
cmpb
lds
cmpb
aam
addr16
ret
subb
arpl
pusha
pop
mov
push
push
rclb
ja
and
xchg
loopne
dec
xor
xor
cmp
hlt
iret
das
loop
jmp
jnp
data16
push
out
ss
mov
mov
lret
jns
pop
push
cltd
popf
sarl
dec
push
or
sub
lods
test
cmp
rcrb
fnsave
inc
sbb
jge
int
sub
push
int
out
imul
loop
insb
jne
ds
dec
dec
fistpl
inc
fistps
lcall
mov
adc
dec
inc
outsb
or
adc
jo
mov
cld
insl
mov
dec
pandn
stos
cmp
mov
xor
nop
shrb
mov
mov
push
inc
orl
call
mov
xchg
bnd
xchg
outsl
adc
lds
add
pop
orb
imul
cmp
xorb
into
sbb
icebp
js
cwtl
mov
xchg
mov
lcall
aad
sahf
sbb
inc
in
mov
int3
stos
lds
xlat
cli
jno
mov
jae
in
cltd
cli
inc
or
mulb
sbb
mov
rclb
jl
ds
and
imul
xchg
push
mov
aas
jae
iret
pop
pop
lahf
xchg
pushf
mov
iret
and
adc
fsubp
or
rclb
ret
cmc
mov
xchg
add
inc
pop
test
pushl
push
or
xchg
mov
out
mov
int3
pop
inc
add
push
daa
sbb
divl
cs
es
inc
dec
icebp
out
arpl
mov
mov
stc
cmc
mov
lea
loope
xor
fcomps
jmp
add
pop
inc
movsb
pop
jl
fldl2t
ljmp
ret
mov
mov
lcall
lds
orb
movsb
pop
call
call
dec
xorb
rcrl
push
mov
xchg
jns
xchg
out
repz
ljmp
mov
lea
out
cmp
dec
mov
xchg
cmc
push
xchg
shl
mov
insb
cmp
adc
rclb
addr16
incl
push
sub
stc
jae
mov
lahf
lods
lods
or
and
rorb
outsb
ret
jb
ds
dec
push
ret
sti
jo
mov
lret
adc
jecxz
ficomps
pop
add
enter
arpl
xchg
imul
and
dec
sbb
subb
fcompl
pushf
les
push
arpl
sbb
aas
push
ljmp
dec
je
fstpt
fldcw
mov
nop
push
iret
xor
dec
iret
mov
lock
adc
push
ss
xchg
cwtl
xor
outsl
or
aam
mov
add
sub
sar
jp
xor
fwait
pop
cmp
iret
andb
jg
pop
sub
xlat
cltd
data16
xchg
fwait
subb
cltd
xchg
aam
or
daa
aaa
add
sarl
ret
dec
xchg
cmpsl
into
push
jp
pop
stc
pop
fmull
pop
mov
mov
xchg
loope
clc
jb
into
xchg
or
popa
pop
ret
mov
aam
ss
and
xorl
or
mov
pop
cmp
loopne
jecxz
das
or
or
sbb
dec
enter
icebp
rcll
aas
and
adc
sbb
ja
incb
insl
pop
mov
lds
sub
add
pop
psraw
gs
inc
mov
clc
xchg
push
rolb
sahf
lods
pop
inc
sbb
cmp
pushf
aaa
mov
lret
and
xchg
jnp
fwait
jne
fadds
aad
and
ja
das
or
mov
stos
popf
movq
push
dec
mov
fsubrs
int
inc
lahf
ds
les
push
jge
push
stc
adc
fistps
inc
cli
fs
pop
xor
adc
call
ds
cmp
pop
mov
in
fcmovb
jo,pt
or
fcomps
std
jge
xor
adc
mov
jns
xchg
cmc
pmullw
xor
out
mov
mov
jne
imul
cmpsl
xchg
and
and
mov
xor
fisttpl
insl
add
dec
sub
inc
mov
jg
test
mov
sub
ds
mov
ficoml
xorl
xchg
mov
push
xchg
fadds
mov
clc
mov
addr16
adc
cmp
or
repz
lahf
jmp
mov
imul
out
sbb
adc
push
ljmp
aaa
icebp
aam
daa
cmpsl
xchg
iret
xor
bound
mov
add
arpl
or
iret
or
add
mov
mov
sbb
mov
in
leave
jno
sub
adc
stc
sbb
mov
test
cmpsb
jle
test
dec
icebp
insl
out
jg
xor
mov
fsubrs
test
hlt
push
movsl
pop
fnsave
add
jo
mov
sub
ja
sbb
xchg
pop
and
sbb
xchg
cmp
cltd
dec
sbb
ds
es
mov
xchg
fnsave
xchg
mov
add
cmc
enter
dec
aas
jb
jle
out
cmp
and
and
jge
lret
js
sbbb
outsl
gs
das
fwait
mov
add
int3
sub
jmp
pop
adc
icebp
jmp
shl
jp,pn
xor
and
mov
repz
jae
or
aad
out
xchg
popf
insb
or
pop
push
mov
sahf
repnz
fiaddl
repnz
sbb
pop
repnz
cmp
jno
mov
outsl
add
push
xor
popa
sub
push
outsl
stos
icebp
pusha
and
xor
sti
inc
lods
push
insb
fs
in
outsb
sbb
jo
ljmp
lret
sub
sarl
aad
mov
or
add
push
cmp
add
lds
fadd
bound
pop
rcrb
xor
pop
iret
popa
jae
std
and
cli
push
push
imul
sbb
dec
push
adc
jp
dec
add
pop
lods
push
sbb
adc
adc
mov
fistl
enter
xor
shrb
cwtl
jg
arpl
mov
pop
add
mov
negb
jno
rorb
and
sbb
jecxz
mov
push
xorl
xchg
dec
jg
mov
popl
or
add
fnstcw
inc
add
mov
sub
aas
ljmp
les
stos
cmp
jl
jmp
stos
imul
lods
and
sti
jns
shll
or
nop
outsl
or
and
pusha
lock
cmp
aad
jns
rcl
repz
imul
jne
fwait
add
sub
sarl
stos
jmp
sbb
rolb
adc
mov
in
xchg
nop
stos
mov
push
xchg
and
aas
xchg
stos
fmul
scas
jne
add
ds
push
push
cmp
dec
loopne
pop
xchg
jne
jae
push
aaa
xchg
loop
mov
dec
xor
dec
aaa
insb
pop
pop
rorb
xor
outsb
sbb
loop
and
mov
add
adc
mov
add
aas
push
cmpsb
cmp
adc
in
dec
mov
jp,pt
or
arpl
arpl
cld
xlat
mov
mov
sbb
cmpsb
fiaddl
iret
pop
and
iret
push
lods
xchg
adc
fdivrs
fldt
adc
lret
fldl
xchg
dec
ljmp
les
dec
dec
or
push
or
pop
mov
movsl
dec
xchg
gs
mov
xor
mov
mov
inc
inc
sub
fildll
mov
or
shrb
or
adcb
sbb
in
and
stos
or
popf
xchg
movsb
into
into
imul
call
or
dec
sahf
adc
das
shrl
cmp
dec
fists
dec
and
leave
sbb
dec
popa
scas
and
lods
sahf
outsl
pop
jle
cltd
je
add
lahf
and
pop
pop
sbbl
in
mov
push
dec
cmp
sbb
jbe
cmp
sbb
arpl
push
sbb
push
push
or
roll
push
xchg
call
jg
sbb
pop
and
mov
movsl
arpl
add
or
into
adc
cmp
dec
ja
test
add
xor
push
inc
mov
fisttpl
push
fisttpl
mov
jg
movsb
sbbb
inc
push
xchg
jge
mov
in
pop
ss
or
lds
mov
lret
sub
push
mov
popa
enter
xchg
loop
jle
xor
inc
jo
sub
fsubrl
cmpsb
fwait
lods
jle
jecxz
aas
std
cs
arpl
in
ja
dec
out
cmp
dec
std
lret
iret
stc
mov
je
decl
arpl
adc
jns
sub
iret
jl
sar
mov
inc
sub
jmp
lret
inc
mov
ss
mov
xchg
pop
and
fisubrl
mov
iret
pop
ja
and
jae
in
lcall
in
pop
push
and
lods
xchg
ljmp
push
imul
xchg
sub
outsl
lods
and
cmp
xchg
adc
ds
fists
and
jo
in
mov
stc
std
lahf
subl
pop
in
jmp
rsqrtps
aaa
pop
addr16
and
int3
adc
mov
fidivl
add
int3
sub
push
push
loop
mov
imul
inc
jmp
insl
pop
or
jo
mov
call
imul
cmp
jnp
das
pop
inc
orb
cmp
test
mov
xchg
adc
cltd
cmp
notb
xchg
pop
fadd
push
push
jge
push
daa
pop
adc
xchg
stos
in
xor
xlat
add
or
addr16
cmp
jge
pop
lea
mov
movnti
scas
je
adc
jle
rorl
mov
ret
leave
pop
cmp
mov
imul
andb
add
jns
out
sbb
mov
in
push
push
sbb
mov
cmp
aam
cmp
movsl
pop
mov
push
rol
cmpsb
cwtl
add
sbb
add
call
lcall
lock
xorl
mov
dec
sbbl
mov
ficomps
jmp
adc
inc
scas
stos
sbb
loopne
aas
lock
and
adc
pushf
push
mov
test
pop
lret
sti
movsl
or
lcall
jle
pop
gs
mov
cmp
mov
sbb
xchg
pop
test
andb
icebp
repnz
or
je
aad
stos
mov
and
sbb
ret
aad
jne
loope
test
das
je
mov
rol
lret
ljmp
pop
scas
stc
xlat
push
ds
mov
movsb
sti
pop
aas
or
aas
push
ror
les
dec
movsl
push
inc
sub
rcrb
ret
callw
pop
clc
inc
sbb
lods
fsubrs
cmp
push
adc
clc
loop
in
xchg
lds
scas
test
stos
imul
xor
jge
mov
sbb
rcll
mov
pop
iret
or
out
mov
dec
aad
push
inc
pusha
hlt
jnp
pop
fiaddl
fwait
sbb
imul
jg
add
pop
je
movsl
jb
sbb
rolb
sbb
cltd
cwtl
xchg
bound
insl
xor
xchg
scas
add
lods
aad
pop
adc
mov
pop
pop
mov
dec
adc
xchg
scas
and
dec
inc
mov
mov
imul
into
data16
dec
mov
aas
or
push
fdivrs
cmpb
jle
xchg
push
lcall
cli
cld
cwtl
sbb
ss
mov
arpl
sti
icebp
notl
cmpsl
je
inc
dec
cld
mov
sub
add
mov
out
es
mov
mov
jg
dec
rcr
sub
jg
outsb
xor
dec
scas
movsl
hlt
or
ja
xor
push
notb
std
aam
in
sub
das
std
sarl
test
lret
push
sti
mov
les
mov
jne
loop
add
and
orl
mov
add
xlat
mov
int
cmovns
aas
repnz
jmp
mov
lret
jnp
pop
xor
mov
mov
je
std
push
mov
pop
fsubrl
fimuls
leave
or
fdivs
leave
mov
fsubrl
add
cwtl
pop
or
cmp
inc
lock
add
push
lods
adc
dec
ret
in
mov
sub
dec
or
inc
fdivrl
adc
cmp
repnz
mov
popa
into
push
add
ljmp
ljmp
inc
inc
insl
and
or
or
xchg
and
test
pop
idivl
das
fwait
mov
jnp
dec
insl
sub
int3
dec
inc
mov
xchg
xor
popa
mov
fs
push
fwait
inc
test
inc
outsb
jb
sti
pop
inc
mov
mov
popf
lods
mov
add
shll
adc
pop
subl
add
push
push
push
xchg
stos
dec
cmpsl
mov
xchg
cltd
in
mov
mov
ss
stos
sub
insl
lock
mov
add
nop
xor
jne
cmp
daa
inc
mov
cmp
mov
mulb
add
add
or
das
movsb
stos
mov
push
cmp
popf
mov
rorl
mov
dec
mov
dec
push
or
in
xor
jns
or
mov
iret
imul
cmpsl
add
out
push
outsl
cmpsb
imul
rcrb
dec
repz
xor
out
icebp
pop
push
imul
xchg
ss
ds
dec
pop
xor
cmp
inc
push
dec
daa
iret
mov
xchg
mov
fidivs
xlat
and
repnz
mov
and
sahf
push
lcall
mov
xlat
stos
fwait
mov
sub
xchg
hlt
hlt
cmp
xchg
lods
mov
mov
les
mov
xchg
ljmp
adc
adc
mov
bnd
pop
cli
push
outsb
xor
hlt
mov
mov
push
xchg
pushf
inc
cld
movsl
std
pop
pop
sti
shlb
loope
daa
gs
sbb
xor
pop
outsb
data16
es
sti
std
mov
adc
dec
inc
cli
sub
test
xchg
dec
cwtl
mov
inc
push
ud2
lods
sbb
jno
ds
sahf
leave
xlat
adc
orb
test
shll
mov
mov
adc
loop
pop
fwait
or
jge
mov
mov
inc
add
cli
lahf
dec
sub
lods
sub
cmp
int3
mov
cmp
and
sbb
in
sbb
push
daa
scas
inc
dec
push
insb
fldcw
jns
dec
test
subb
adc
das
aam
and
or
xchg
xchg
repnz
xor
sub
xlat
cmp
dec
mov
pop
and
xchg
das
push
xchg
stos
in
jp
call
push
push
mulb
out
lahf
sub
mull
cli
add
dec
pop
iret
arpl
test
stos
mov
insb
jb
std
cmp
ja
divb
std
dec
sarl
jb
inc
insb
mov
or
loopne
loopne
js
fwait
cmpsl
pusha
mov
mov
push
jbe
push
test
xchg
aaa
push
into
mov
bound
mov
sbb
dec
and
aad
repnz
std
dec
sbb
aas
pop
dec
inc
and
mov
nop
push
cltd
loopne
imul
pushf
push
mov
fadds
data16
cltd
dec
push
fidivrl
aad
jo
push
int3
rclb
inc
movl
stc
out
mov
js
aas
adc
adc
setno
movsb
cltd
pop
in
insb
and
sbb
ss
jl
test
mov
out
das
xchg
ja
inc
pop
and
jo
pop
mov
cmp
cwtl
push
iret
sub
adc
stc
pop
loopne
popf
insb
lds
pop
push
test
push
adc
stos
or
ja
add
pop
out
fcomps
or
pop
add
adc
lods
decb
aad
pop
jecxz
sti
sbb
aaa
addb
loope
xchg
out
inc
push
mov
fs
or
inc
lea
cmp
mov
leave
xchg
incl
and
xchg
jnp
mov
add
mov
add
and
xchg
cmp
stos
hlt
and
fsubrl
in
push
cs
cmc
paddb
push
jg
sti
test
jae
mov
lds
je
cmpsl
inc
nop
or
dec
lcall
jbe
cltd
add
and
into
mov
cmp
mov
xchg
andl
inc
cmc
dec
adc
test
cmp
inc
pop
mov
mov
pop
fistpll
movsb
pop
jb
cmp
sbb
cmp
idivb
sub
and
ret
ds
bound
mov
push
test
dec
fdivl
xlat
pop
fldenv
fwait
subl
inc
inc
cs
pop
mov
test
lcall
shll
xchg
sub
pusha
les
push
ja
mov
lret
xchg
fidivl
clc
mov
adc
xchg
iret
inc
mov
cltd
xchg
dec
xchg
sub
int3
out
push
stos
adc
mov
cli
cmp
push
mov
jg
imul
in
insl
outsb
sbb
ljmp
xor
adc
mov
and
lcall
fisubrl
pop
sbb
pop
jne
pop
jle
add
int3
orb
xchg
pop
in
pop
pop
loopne
icebp
rclb
imul
iret
xlat
shll
add
adc
xor
fsubl
adc
in
jmp
push
push
sub
push
cmc
adc
cmp
inc
popa
mov
arpl
int
ja
dec
imul
pop
loop
in
mov
dec
mov
adc
orb
or
sub
outsl
imulb
clc
add
popf
fwait
jbe
cmc
lds
loope
and
add
es
adc
pop
in
andb
xchg
incb
je
aad
push
loopne
jbe
insb
mov
jl
jge
inc
sbb
cmp
jmp
data16
mov
xchg
shl
push
dec
jnp
stc
aas
scas
mov
js
or
add
xor
stos
add
and
ja
xor
imul
inc
cmc
movsb
dec
int
rorl
sbb
push
or
int
mov
data16
dec
mov
or
leave
leave
rcrb
jo
out
ss
and
sbb
inc
push
test
lea
cli
fsub
push
sub
in
or
popl
push
daa
cltd
mov
sti
and
shrl
push
dec
test
insl
sbbl
jbe
into
popf
xor
push
jle
and
mov
cs
jae
js
sbb
daa
popa
add
push
or
cmp
sbb
adc
cli
push
fwait
mov
pushf
xchg
ljmp
int3
jmp
cmp
sub
sub
cmp
ret
push
mov
xor
in
icebp
add
iret
cmp
inc
pop
dec
aam
sub
adc
jo
ja
dec
leave
mov
push
xchg
dec
cmpsl
pop
cltd
cs
ds
mull
dec
cwtl
push
pop
mov
xorl
mov
and
and
ds
int3
lea
sub
pop
cs
add
test
xchg
xor
inc
pop
mov
xchg
mov
mov
roll
fs
pop
ret
or
mov
or
aam
jae
adc
ljmp
cmp
je
inc
dec
dec
mov
dec
pop
xor
xor
je
lods
shlb
shlb
mov
movsl
lea
out
mov
push
push
cld
punpckhwd
mov
pop
inc
out
das
sub
jnp
push
out
outsl
mov
in
in
inc
shll
push
cld
cmp
pop
insb
or
mov
jp
inc
xor
outsl
call
imul
movsb
pop
mov
pushf
xchg
lods
cmp
push
test
xlat
rorl
pop
mov
dec
popa
mov
f2xm1
inc
in
mov
movl
ja
jp
movsb
lahf
cld
add
cmp
mov
stc
push
inc
jnp
mov
popa
fs
push
or
loop
in
push
dec
insb
mov
mov
shl
push
cli
mov
out
inc
fdiv
popf
jecxz
or
ret
outsl
xor
fisubs
jmp
imul
xchg
dec
flds
or
rep
lods
test
jb
push
jno
das
xor
cli
pop
jmp
cli
sub
push
popf
stos
call
fcompl
mov
das
push
mov
out
pop
jo
rcl
fisubrl
leave
fdivs
sti
pop
int3
lret
imul
cltd
in
int3
adc
or
clc
std
cmp
sub
out
gs
lahf
sbb
xchg
sub
sarl
mov
and
mov
frstor
repnz
lcall
aad
jae
and
movsl
popw
push
repz
scas
xchg
cltd
jo
bound
movsb
loope
xor
jp
loop
inc
fldl
mov
ret
icebp
popf
ret
repz
lock
sbb
bswap
push
or
stos
jl
popa
cs
ret
jae
faddl
mov
popa
pusha
jbe
imull
jle
test
mov
or
xchg
mov
dec
mov
pop
repz
icebp
xchg
add
insl
sarl
adc
call
or
sub
sbb
dec
sar
lock
or
rol
mov
mov
insl
fdivs
mov
push
jge
mov
or
shr
pop
dec
mov
nop
aas
inc
pop
add
sub
inc
out
inc
mov
movsb
sbb
notl
cli
pop
test
dec
xor
mov
sub
adc
rol
test
cltd
or
fdivrl
stos
std
rcll
imul
dec
xchg
xchg
ds
and
mov
fistps
es
inc
jbe
xor
mov
and
mov
push
jbe
lahf
jno
inc
scas
push
cli
js
fdivr
xchg
xchg
xchg
cli
dec
xor
repz
fcomp
mov
cmp
pop
ret
push
daa
rcrb
std
std
sti
shlb
int
adc
pop
add
or
xor
shr
xor
sub
jbe
iret
mov
lock
hlt
arpl
pushf
rcl
imul
jg
pop
dec
mov
pop
lock
mov
lret
cmp
aam
mov
jle
xor
int3
ret
stc
cld
lret
aaa
out
hlt
inc
push
lods
xchg
and
in
vpmacssdd
sbb
rcrl
jno
and
push
sub
cmp
scas
test
ss
daa
lcall
lds
or
jmp
std
pop
pop
push
loope
rcl
lock
fidivrl
sbb
clc
pop
hlt
loopne
pop
inc
mull
enter
out
jp
fadds
add
bound
jl
adc
mov
adc
movsb
push
jle
aad
iret
push
push
mov
xchg
bound
jns
lahf
test
mull
std
adc
ret
ljmp
push
push
dec
dec
sbb
out
push
int3
add
xchg
sti
dec
or
jmp
jno
jp
jae
jo
inc
loopne
inc
cli
inc
mov
or
jne
subl
xchg
jns
inc
inc
sbb
scas
data16
jg
sbb
mov
xchg
stos
sti
mov
sarb
inc
xchg
dec
mov
jmp
cmp
add
xor
inc
pcmpgtd
and
cmp
dec
ja
jge
sbb
jnp
mov
dec
cmp
loopne
cs
cwtl
and
test
adcl
sub
inc
add
ret
xor
sub
and
mov
xor
mov
push
andb
sbbl
mov
lds
sbb
adc
rcll
cwtl
sarb
test
ja
sub
popa
gs
sub
push
in
repz
pushf
inc
sub
rorb
xchg
inc
inc
lods
jmp
jge
shlb
call
leave
jno
gs
mov
fstpl
repz
xchg
fadds
jo
loop
mov
sub
das
xor
or
or
icebp
push
adc
lods
sub
cmpsl
and
mov
pop
out
adc
je
jl
fucomip
cmc
lock
jge
adc
jnp
jns
lods
ds
jnp
sub
mov
gs
outsb
sbb
arpl
jno
pusha
jl
stos
inc
cld
pop
and
fidivrl
jne
add
pop
cmp
outsb
outsb
call
fwait
pop
xchg
mov
jle
inc
cmp
mov
call
inc
push
mov
inc
adc
push
movsb
scas
mov
int
cmc
sbb
or
lea
mov
push
pop
into
jp
out
or
or
pop
int
mov
test
dec
inc
shrl
adc
repnz
pop
push
push
ret
jge
mov
btr
inc
mov
dec
imul
fisubrl
and
push
sub
inc
sub
or
add
fs
jnp
adc
inc
in
out
push
add
push
outsb
ret
mov
cmp
notb
sbb
mov
xor
lods
jmp
cltd
xlat
xchg
shrb
mov
sub
mov
cmp
add
bound
pop
lret
int
push
inc
cmc
pop
cmpb
std
dec
fsubs
test
mov
xorb
sbb
and
push
mov
mov
add
mov
jge
add
aas
pop
push
mov
add
data16
push
dec
pop
cmpps
mov
test
pop
xchg
out
ljmp
dec
sub
into
pop
xor
cmc
ret
inc
sti
cld
or
sub
les
jle
inc
push
addr16
or
js
lock
sbb
call
xchg
mov
outsl
push
mov
cmp
in
mov
idivl
mov
add
add
xchg
add
out
adc
enter
dec
push
dec
imul
mov
in
sahf
xlat
xchg
fcoms
insl
jns
push
jnp
dec
out
ja
mov
sbb
xlat
sti
mov
pop
cli
mov
cmp
hlt
mov
pop
mov
in
jo
jmp
int
fsubr
clc
filds
dec
fldcw
subb
xchg
cmp
sbb
push
cmc
int
lock
dec
arpl
xlat
insl
push
or
scas
mov
out
lods
sarb
or
aaa
fmulp
push
setbe
insb
in
ficomps
insl
and
pop
outsl
outsl
loop
xchg
pop
push
ljmp
lret
scas
hlt
test
xor
mov
mov
dec
sbb
mov
dec
js
mov
and
sub
xchg
jge
mov
mov
push
aaa
cltd
enter
int3
cmp
add
les
lods
stos
pop
fwait
iret
imul
and
fwait
inc
pop
jae
shl
and
popa
mov
xchg
dec
aam
sub
xchg
pushf
imul
test
jge
mov
push
in
xor
pop
sbb
outsb
addb
insb
sahf
pop
sub
jns
inc
inc
repz
pop
inc
outsl
dec
add
movd
out
push
out
aad
cld
jg
lock
in
in
pop
jns
fld
inc
cltd
imul
cmpsl
jno
mov
mov
dec
cmpb
in
cmpb
fildll
sbb
inc
call
lahf
loop
ret
mov
xchg
cltd
xor
sub
inc
ljmp
loop
sbb
mov
lock
rcll
or
shlb
hlt
sti
ror
dec
inc
xchg
inc
ret
stc
inc
mov
test
sbb
xchg
dec
insl
sub
add
push
nop
mov
pop
out
enter
je
cmpsl
xorl
aad
fwait
inc
lods
imul
enter
mov
pop
dec
lcall
pop
mov
scas
xor
mov
sbb
push
xor
out
push
movsb
or
mov
jnp
mov
mov
mov
aad
int
xchg
adc
dec
les
mov
rolb
mov
cmpsb
sub
insl
cmc
mov
sbb
in
lds
lret
sbb
leave
sbb
mov
shl
and
and
arpl
ja
xlat
in
dec
in
mov
ss
cmovno
push
sbb
ret
lret
mov
inc
or
cmpsb
sbb
dec
clc
mov
out
loope
or
add
in
xchg
pushf
shl
sbb
sub
cmpsb
int3
ja
push
je
shrb
mov
repz
stos
or
aaa
push
outsb
add
sub
inc
shr
inc
imul
jo
shlb
rcrl
les
xor
stos
push
lret
and
scas
dec
inc
repnz
mov
pop
fisttps
imul
testb
pop
imul
xor
packuswb
or
xchg
mov
rcrl
cmp
fcomps
sahf
inc
fidivrl
hlt
ja
dec
mov
inc
xchg
sub
jp
fcompl
push
insb
aam
push
add
jge
pop
and
rolb
aad
xchg
dec
jle
mov
cltd
mov
pushf
inc
aad
std
sbb
adc
adc
jge
sbb
xchg
dec
int
jle
jg
es
loope
push
xor
cltd
cmp
or
es
aad
inc
scas
outsl
mov
fnstenv
cmpsl
int3
jno
jge
sti
daa
and
dec
and
clc
in
jo
ret
adc
lock
sub
push
adc
adc
mov
and
stc
sbb
xchg
cwtl
stos
push
mov
imul
repnz
add
push
das
pop
push
addr16
stos
pop
in
enter
mov
sahf
mov
dec
cmp
jnp
and
mov
gs
mov
or
int3
movsl
jl
add
outsl
aam
pop
pushl
mov
mov
insb
adc
out
clc
jns
cmpsl
adc
inc
xor
rcl
jae
jne
inc
fisubrs
repnz
mov
sub
xor
mov
std
jno
push
outsb
xor
mov
xor
mov
sbb
stos
push
lcall
dec
xchg
cmp
test
and
les
iret
add
fisttps
stos
sub
mov
callw
dec
dec
mov
add
mov
mov
out
andb
in
iret
and
jbe
add
aas
out
dec
dec
jb
inc
or
inc
or
or
out
cwtl
sbb
stos
lret
or
adc
cltd
pop
imul
in
pop
push
or
cmpsb
add
fadd
out
dec
repz
push
ss
rcl
daa
pop
stos
icebp
hlt
shrb
ds
xlat
fisubs
pop
call
leave
xchg
enter
dec
es
mov
dec
cmpsl
pop
bound
xor
imul
pushf
push
jae
and
mov
fbstp
and
push
je
xchg
data16
call
mov
es
imulb
cwtl
pop
leave
rcrb
xor
out
inc
xlat
sbb
fidivl
jg
cmp
xchg
stc
in
enter
test
aam
mov
mov
bound
repz
add
jmp
add
lods
lock
add
mov
mov
cmc
pop
insb
incl
push
stc
cmpsb
push
jnp
mov
jae
lods
sbb
lods
inc
data16
orl
mov
pop
adc
in
xchg
sbb
cs
pop
loop
movb
add
jg
pandn
sub
mov
push
dec
ds
inc
imul
lret
ss
cmp
xchg
aam
lcall
dec
out
popa
loopw
imul
movswl
test
and
lods
mov
and
and
add
dec
push
xchg
jns
out
jnp
lea
movsl
adc
mov
rclb
call
into
inc
mov
call
pop
pop
or
inc
data16
add
stos
dec
inc
pop
gs
lret
mov
mov
jle
adc
aad
mov
mov
jne
cs
xlat
sub
mov
jne
xchg
fs
push
je
pop
adcb
in
mov
in
cmp
push
in
insb
les
mov
pop
sub
dec
or
cmpl
mov
mov
int3
cmp
scas
mull
adcl
mov
subl
xchg
push
lock
add
mov
dec
std
add
out
sbb
lcall
gs
and
cmp
test
push
add
aaa
xor
inc
shlb
jae
add
xchg
push
mov
sub
lahf
pop
cmp
xor
jne
mov
and
sbb
clc
aas
mov
lcall
mov
sub
dec
call
dec
test
cmp
and
in
push
mov
pusha
mov
into
clc
sbb
pushf
nop
in
xchg
sbb
jecxz
or
mov
mov
mov
iret
je
jmp
arpl
xor
jns
repz
cmp
enter
cmp
fsubrs
lock
adcl
or
push
sar
lcall
adc
loope
xchg
test
es
inc
mov
enter
out
addr16
add
cmp
xlat
pop
mov
jbe
add
xor
cmp
test
sbb
adc
inc
sub
ljmp
lcall
into
mov
add
mov
adc
xlat
pop
rcl
mov
das
loopne
or
pop
push
shrb
adcl
dec
out
lcall
mov
xor
pop
xor
mov
xchg
sub
stc
orb
dec
or
pop
cli
mov
mov
aad
jmp
test
in
xor
pop
push
aas
lcall
cmpsl
sahf
mov
lahf
adc
push
ss
add
xchg
or
rcrb
and
sar
loop
jns
or
stos
xchg
arpl
inc
sub
outsl
test
enter
sub
xchg
dec
dec
das
scas
sbb
lods
pop
movsb
scas
mov
push
dec
sub
cltd
sub
movsl
or
out
sahf
popf
jb
or
jne
mov
xchg
push
mov
pop
notb
loope
pop
mov
mov
adc
out
mov
cwtl
sbb
mov
jns
insb
mov
je
sbb
dec
pushf
add
out
js
mov
loope
adc
push
hlt
subl
scas
jo
mov
icebp
mov
and
sub
xchg
push
pop
rep
add
cmp
push
push
in
out
outsl
cmpsl
repnz
jb
fwait
cmp
mov
xor
xchg
pop
push
loopne
mov
test
sbb
adc
popa
in
sbb
cmpsb
hlt
mov
push
cmp
dec
testb
test
dec
push
lock
rorl
mov
cmp
or
add
or
inc
jge
aas
xchg
mov
ror
int
adc
aam
call
mov
sub
popa
mov
adc
xor
loopne
jmp
sti
xchg
lods
jmp
or
push
test
idivb
ds
icebp
mov
out
ss
fisubrs
clc
mov
cmpsl
inc
mov
sbb
scas
pop
or
mov
shll
dec
pop
dec
les
cmp
or
xor
jmp
pop
outsl
rolb
push
mov
stos
adcl
insb
add
and
sub
add
test
jmp
cli
or
or
pop
cmpsb
mov
aaa
fcmovne
mov
adc
loopne
xchg
mov
sti
lahf
xor
adc
mov
jmp
loope
xor
outsl
cmpsb
int3
jno
sub
mov
test
out
out
dec
jmp
jecxz
push
loop
jns
hlt
les
pop
pusha
out
dec
lods
outsb
dec
push
add
fistpl
out
insl
fcmovne
mov
mov
aad
in
aaa
ror
fcoml
call
cmp
mov
cmpsb
add
out
jae
mov
jp
pop
push
pop
lea
dec
mov
mov
push
gs
sbbl
and
jp
and
sub
mov
or
and
sahf
mov
mov
mul
loope
or
sbb
fs
sub
jge
fwait
jge
sbb
push
xor
es
orb
jno
cltd
cmp
adc
rorb
mov
sahf
pop
mov
sub
imul
daa
pop
mov
cltd
add
xchg
and
aas
cs
nop
sub
je
les
inc
mov
fildll
xchg
dec
mov
push
mov
pop
sbb
adc
shrb
add
scas
or
inc
out
bound
mov
pop
cmp
mov
jge
inc
adc
test
xchg
mov
jmp
cmp
cwtl
dec
insb
adc
ret
and
cmp
xchg
dec
cmp
outsl
dec
add
adc
push
xchg
jns
xchg
jb
out
adc
outsb
mov
xor
push
ret
xor
adc
adc
idiv
cmc
sub
ret
out
push
lea
or
fidivrs
out
push
mov
sbb
and
jl
add
push
imul
pop
push
xchg
movsb
jo
mov
sahf
or
xchg
je
test
data16
sbb
dec
pusha
test
xchg
mov
mov
xchg
imul
inc
sarb
mov
in
aam
sub
loope
push
hlt
je,pt
xor
ret
mov
inc
mov
movsb
jae
jae
popa
dec
movsl
fs
or
loopne
sahf
daa
add
ljmp
or
push
sbb
ss
addr16
adc
mov
insb
mov
sub
and
clc
cld
mov
sbb
ja
ds
aad
xor
jo
fiadds
dec
push
sub
push
pop
mov
incb
pop
ret
popf
sbb
rorb
xchg
int3
shl
pop
rcrl
mov
popa
dec
mov
scas
mov
xchg
mov
jmp
jno
add
imul
sbb
ficoms
lahf
mov
les
add
mov
fmull
imul
mov
fcmovnbe
push
cmpsb
xchg
cmpsl
push
xchg
push
lods
daa
add
pop
sbb
lcall
cmp
inc
xchg
add
hlt
test
sub
cwtl
sub
mov
cmp
lds
int3
dec
mov
stc
mov
dec
ljmp
or
loop
cmp
stc
adc
out
sbb
lock
mov
ds
scas
mov
push
dec
popa
rcrb
lods
jne
icebp
call
dec
add
stc
jge
arpl
pop
sti
cmp
and
std
dec
inc
les
xlat
mov
or
sbb
push
lret
and
incb
imul
mov
jge
sub
fistps
push
xchg
mov
inc
and
jecxz
popa
rclb
mov
outsb
sub
xchg
or
mov
sbb
je
in
pop
out
out
push
pop
and
xor
sbb
xor
cld
dec
xchg
fidivrs
mov
sahf
ss
jmp
mov
sbb
jnp
pop
add
fmul
mov
mov
inc
es
adc
das
mov
std
jecxz
roll
push
mov
mov
mov
test
dec
push
xor
pop
xchg
fadds
cli
mov
jbe
pop
and
mov
sahf
test
pop
jle
xor
inc
inc
or
aas
pop
mov
dec
lcall
push
and
pop
and
jmp
mov
aaa
repnz
dec
mov
pop
push
mov
mov
pop
xchg
adc
dec
adc
in
pop
or
ficoml
lcall
adc
iret
adc
lcall
push
pusha
xchg
jnp
jmp
adc
lea
adc
in
xor
jns
je
loop
mov
stos
test
adc
xor
jno
and
adc
xchg
mov
test
pop
loop
fdivs
lret
cmp
fnstcw
or
pop
stc
enter
clc
gs
add
push
insl
in
cmp
loopne
pop
or
jb
es
dec
jo
dec
sub
and
pop
mov
xor
pop
inc
jl
mov
inc
jge
push
push
roll
out
flds
mov
sub
into
in
mov
mov
neg
pop
mov
lret
lods
ret
pop
push
scas
inc
adc
ss
lods
andl
lahf
mov
lods
ds
sub
xor
pop
push
ud0
test
xchg
sbb
sub
stc
mov
or
and
filds
mov
stos
mov
das
mov
jns
mov
push
jle
shld
lock
push
insb
test
pusha
add
pop
mov
fimuls
inc
cmp
adc
rorb
ja
cwtl
xchg
stos
test
shrl
inc
or
adc
sub
insb
xchg
pop
sbb
sti
aad
cmp
mov
daa
xchg
xor
lcall
aad
int3
fldenv
sub
fistpl
jmp
enter
xor
dec
ljmp
jo
mov
xor
mov
jo
cmp
in
and
xchg
stc
or
mov
aas
icebp
xchg
scas
dec
and
out
xchg
aaa
neg
xchg
adc
sbbb
aad
sbb
sub
mov
fmuls
pop
mov
xchg
cli
cmpb
push
cmc
sbb
dec
movsl
cli
xorl
in
lret
and
add
add
dec
add
inc
test
xlat
cli
ss
popa
js
shlb
mov
mov
sbb
movsl
pop
out
inc
adc
push
sbb
mov
daa
fidivl
mov
mov
test
add
sub
xchg
cwtl
stos
negb
test
loopne
iretw
jb
jne
loopne
in
nop
xchg
repz
rolb
pop
pop
jecxz
jle
cmp
fcomi
sbb
xchg
or
es
xchg
xor
inc
aad
mov
inc
leave
sbb
sbb
jge
insl
hlt
dec
push
aad
adc
add
mov
pop
adc
adc
mov
lea
push
int
xchg
sbb
jbe
dec
aam
mov
mov
lcall
fldl
cmp
test
leave
mov
add
cmc
imul
xor
sbb
ret
loopne
filds
mov
sub
xchg
push
int
mov
loopne
cmp
jnp
cs
mov
or
mov
ss
sahf
mov
decb
jl
movsl
jecxz
ret
stc
cli
das
sti
jmp
ret
insl
xchg
stos
jmp
popf
js
mov
jmp
out
mov
sbb
insl
popa
mov
ja
test
popf
sbb
and
nop
sbb
ljmp
and
mov
mov
testl
xor
jp
xchg
je
pushl
mov
jo
je
fucom
pushl
cmp
mov
ja
mov
pop
fldenv
sub
xor
cmp
dec
es
lcall
lahf
iret
dec
add
sbb
nop
push
push
xchg
cmp
cli
mov
not
rolb
daa
cld
std
sub
out
inc
imul
add
mov
clc
xor
mov
jno
mov
and
cmp
out
and
xor
push
popa
aaa
jno
ret
jp
rol
and
leave
mov
nop
fnsave
xor
add
adc
mov
dec
mov
jnp
int
sbb
jg
loop
lahf
dec
jnp
lcall
or
scas
gs
xor
fcomps
aam
or
lods
adc
mov
iret
mov
insw
xchg
es
test
daa
cmpsb
xchg
adc
cmp
cs
call
sti
jmp
or
jo
loopne,pt
ficomps
leave
icebp
adcl
mov
add
dec
push
dec
dec
mov
adc
nop
ret
xchg
js
and
push
xorl
lds
rol
jbe
xchg
pushf
mov
out
nop
jb
popf
mov
adc
lea
shlb
fnstenv
push
repnz
push
sub
clc
out
and
repz
mov
dec
jmp
sbb
pop
cmp
rclb
pop
and
aaa
leave
test
jne
iret
jl
test
jb
loopne
mov
mov
cmpsl
inc
cmp
inc
sbb
push
add
lods
sahf
fcomps
mov
call
aam
lods
popf
out
xchg
ljmp
push
jae
pop
dec
cmp
xchg
and
ret
enter
mov
sti
test
pop
insb
ror
stos
dec
sbb
int3
pop
add
popa
mov
dec
fs
ret
push
adc
popa
push
jle
cmp
sahf
ret
pop
jns
push
mov
daa
and
sbb
mov
shlb
stos
int3
xchg
int
mov
arpl
xor
push
jp
sub
fs
stos
in
into
out
xchg
fadds
jne
lret
xor
inc
aam
dec
sbb
jne
test
pop
mov
mull
rcl
mov
imul
sub
jle
hlt
iret
cmp
mov
sub
cwtl
in
filds
aas
cmp
fs
mov
mov
neg
pushl
push
fiaddl
int3
jbe
lds
faddl
arpl
adc
test
or
and
dec
addr16
pop
je
or
adc
shll
push
stc
ja
arpl
daa
in
adc
xlat
sub
mov
mov
test
and
fisttpl
outsb
and
jbe
pop
loopne
adc
loope
or
push
imulb
icebp
aas
lret
mov
fnstsw
xchg
sbb
leave
xlat
ficoms
push
add
aam
jns
sub
push
xchg
xor
mov
push
xor
je
loopne
push
inc
into
push
fs
hlt
push
or
aad
add
shrb
ret
es
or
mov
xor
bnd
push
ja
test
push
in
adc
xchg
xor
je
cmp
repz
mov
lods
mov
cmp
mov
in
das
pop
xor
gs
arpl
inc
shrl
fwait
movsl
mov
pop
cmp
cmc
popf
inc
jmp
or
clc
out
popaw
xchg
outsb
push
push
inc
xchg
fstps
push
fldenv
test
testb
enter
pop
and
sbb
hlt
cmp
dec
mov
xchg
sbb
das
ret
jmp
push
adc
xchg
inc
mov
jge
je
movsb
and
inc
rcrb
ss
mov
nop
xchg
push
out
inc
xchg
popa
cs
jns
adc
loope
push
jnp
ljmp
mov
push
sbb
rcl
xor
cmp
lea
xchg
loopne
pop
mov
fwait
leave
mov
outsb
int
jno
sub
lods
rclb
iret
jo
adc
movb
push
or
pop
push
sti
inc
pop
out
fnsave
xor
cmp
cwtl
mov
addr16
lcall
or
inc
test
add
sub
push
shl
xchg
adc
inc
jecxz
sarb
fcmovb
out
test
enter
inc
mov
and
jle
outsb
cmpsb
icebp
loope
jnp
or
cmp
sbb
btc
out
repz
fwait
push
pop
shrl
and
cmp
xor
add
dec
rcl
out
mov
mov
pusha
in
subb
push
das
mov
cmp
shr
adc
or
add
in
mov
je
filds
pushf
hlt
icebp
cmp
movsl
pop
cmp
inc
dec
adc
loop
cmp
jl
mov
pushf
inc
sbb
cmp
adc
adc
ljmp
cltd
jle,pt
dec
or
imul
sub
fists
fcomp
ss
arpl
pop
and
adc
and
daa
das
icebp
cmpsl
adc
mov
sbb
int3
arpl
lcall
aam
or
cmp
pop
leave
dec
sbb
sub
xchg
rcrb
test
cs
inc
pop
mov
jl
push
arpl
or
mov
xor
orb
test
push
or
pop
loope
sub
push
and
js
sahf
lods
test
test
lods
movsb
jp
push
add
jle
cmc
loopnew
push
cmp
pop
and
loopne
sahf
testb
xor
sbb
xor
or
pop
sub
jge
push
sub
dec
jmp
mov
mov
lahf
cld
repz
pop
mov
or
ja
mov
jbe
and
int3
and
jmp
daa
sub
mov
adc
inc
xor
test
push
sub
cmp
cmp
mov
scas
push
aaa
mov
inc
inc
pop
pusha
mov
bound
adc
push
test
mov
pop
jnp
int3
jecxz
dec
inc
mov
shufps
sbb
add
push
lret
inc
mov
arpl
cmp
ljmp
out
scas
xor
icebp
mov
cwtl
xor
js
or
mov
mov
xor
stc
add
xor
sbb
sbb
dec
inc
inc
dec
scas
xor
scas
shll
sub
movsb
fwait
out
jae
xchg
cmp
bsf
nop
jge
jp
dec
adc
stos
call
and
lea
lea
ficoml
sub
call
inc
sbb
fcompl
push
inc
ret
sbb
lods
shrl
pusha
imul
fdivp
out
add
sub
push
movsl
push
or
sbb
mov
or
xchg
or
xchg
mov
fsubp
cmpsb
sub
call
out
jl
or
daa
push
iret
xchg
pop
gs
cmpsl
add
jge
rorl
sbb
push
data16
rcr
adc
adc
and
xor
movsl
sbb
popf
push
pushf
movb
sti
roll
inc
movsl
cmp
xorb
and
pop
pop
push
and
mov
mov
jns
jle
lret
mov
cmp
repz
mov
ds
sahf
mov
int
sub
insl
xor
pop
pop
xor
jmp
xor
pop
jg
sbb
mov
add
push
mov
xchg
movb
inc
es
dec
xchg
xor
je
mov
xchg
or
push
pusha
bound
sub
xchg
mov
aad
dec
xchg
and
jmp
loop
clc
fstl
rcrl
pmuludq
je
in
out
lret
inc
jbe
jnp
les
test
sbb
test
xchg
das
jne
int
lcall
fsubrs
xlat
subb
hlt
aad
out
jmp
scas
out
stos
hlt
fldl
ds
mov
out
xor
inc
fwait
test
dec
pop
in
and
inc
insl
mov
fisttps
or
or
inc
add
outsb
adc
insb
nop
into
push
sbb
rorb
jl
dec
aad
or
xor
scas
sub
dec
add
cwtl
ljmp
das
nop
insb
mov
cmp
add
test
add
scas
loop
mov
insl
std
push
daa
jns
das
add
cmp
push
cwtl
aad
jmp
fistl
call
pop
test
sub
test
fcomps
inc
mov
jl
les
mov
ljmp
sub
pushf
xchg
or
xor
xchg
clc
jecxz
scas
stos
xchg
push
dec
adc
pop
cmc
pushf
xlat
xchg
enter
test
mov
das
add
lcall
xchg
pop
rol
gs
mov
mov
clc
or
xor
push
cmp
push
sbb
mov
aaa
cmc
fwait
and
pop
enter
sub
adc
bound
gs
pop
mov
inc
sub
sbb
out
cmpsl
test
mov
push
mov
xchg
imul
sbb
sub
lods
stos
pop
cltd
mov
subl
or
sub
mov
test
sbb
jmp
insb
cmpsb
movsl
mov
out
cltd
or
cmp
fwait
and
xchg
add
cmp
test
out
pop
adc
sub
clc
test
enter
stc
jbe
and
rcl
mov
lea
dec
xor
cmp
pop
sahf
jle
sti
clc
and
jecxz
negb
inc
mov
std
mov
jmp
fstpl
and
int3
sbb
jle
mov
jne
push
aad
mov
or
jg
pop
rcll
ljmp
ja
inc
clc
test
mov
in
pop
cmpl
add
add
mov
sbb
sbb
fimuls
push
push
fsubrl
out
out
sub
add
mov
push
xchg
sbb
sarl
jne
mov
imul
xor
int
scas
aam
cli
xchg
lcall
pop
push
inc
sbb
xor
jbe
mov
mov
dec
iret
adc
xchg
mov
mov
add
push
dec
flds
push
pop
fdivrp
mov
jb
ss
sbb
ret
aad
and
insl
mov
sbb
push
shlb
inc
fstps
imul
inc
imul
cld
mov
push
jp
subl
std
dec
sbb
shrl
xlat
dec
mov
mov
sub
jo
je
hlt
arpl
jnp
xchg
mov
mov
jge
cmc
adc
pop
pusha
adcl
and
mov
dec
lahf
jle
mov
repz
movsb
jo
negb
xchg
dec
mov
repz
rclb
mov
pop
pop
mov
dec
aam
or
sub
mov
pop
xchg
outsl
pop
fwait
inc
xchg
add
in
jl
mov
cmpsl
mov
mov
push
aam
fdivl
or
jns
scas
xor
pop
pcmpeqb
push
mov
inc
insl
test
outsl
mov
mov
lret
icebp
leave
or
inc
lea
filds
pop
adc
jecxz
or
sbb
add
dec
add
mov
xchg
adc
enter
inc
xchg
cmpsb
dec
insl
sbb
add
insl
std
lcall
cli
rcrb
jno
inc
or
icebp
or
pop
push
iret
mov
dec
push
iret
pop
leave
inc
std
pop
pop
push
cmpsl
push
icebp
sbb
jae
add
shr
call
sbbl
dec
popf
xor
inc
sub
flds
mov
popa
test
shll
mov
mov
cmp
inc
mov
dec
inc
mov
in
clc
inc
mov
mov
inc
in
mov
xchg
fdivrs
sbb
stc
mov
push
fnstcw
dec
stos
xchg
xchg
push
cli
cli
xchg
lret
ret
ficoms
insb
shrb
adc
fdivrl
push
fsubrl
insb
and
adc
or
xor
jmp
and
push
insl
mov
sahf
es
std
mov
sbb
jns
fistpll
pop
jp
mov
rolb
and
push
fdivl
iret
aad
or
and
lock
ret
jl
or
xchg
test
pop
movsb
mov
mov
pop
or
and
xor
sub
in
test
push
repz
xchg
jne
bound
cmp
bound
sar
sbbl
inc
pop
ret
shlb
aad
dec
fcoms
hlt
mov
sub
xchg
xchg
sbb
cmovg
dec
imul
stos
dec
call
xchg
test
imul
xchg
xchg
fwait
aaa
int
xchg
mov
pop
or
adc
bswap
and
js
xchg
mov
lock
xchg
lret
test
in
cmp
call
jp
adc
ret
ja
xchg
nop
test
sub
mov
dec
test
test
stos
and
aas
insl
pop
mov
andps
enter
les
js
rcrb
lods
loope
hlt
enter
push
push
in
jns
bound
gs
es
xlat
and
cmp
test
pop
ffree
sbb
and
push
fisubs
cltd
or
xor
push
ljmp
sbb
leave
fdivp
popf
mov
ljmp
lret
mov
test
sti
scas
jge
negl
push
mov
std
xchg
ret
dec
adc
in
lret
call
xlat
push
cmp
into
mov
int3
dec
rorb
mov
mov
ret
scas
int
in
ja
insb
aam
popf
cs
inc
or
leave
push
fs
aam
push
repnz
sub
and
and
fwait
or
lret
pop
pop
pop
sarl
rcr
pop
or
pusha
jno
rcl
lcall
out
xchg
mov
arpl
test
in
movsl
cmpsl
xchg
testl
mov
xor
out
or
loopne
imul
pop
add
cwtl
inc
stos
outsb
xchg
into
fsubs
mov
repnz
add
mov
sbb
and
xor
sbb
and
or
aad
int3
jns
push
jg
sub
adc
mov
jg
sub
jae
ja
cmp
adc
insl
faddl
inc
mov
add
jbe
test
xorl
pinsrw
daa
xchg
xchg
xchg
insb
out
adc
into
or
and
in
xor
fdiv
cmp
push
lods
and
imul
test
dec
fldl
sti
arpl
pop
pop
push
pushf
lods
or
jle
bound
cmp
sub
pop
mov
jb
ljmp
sti
stc
gs
icebp
mov
notb
jb
mov
mov
push
cli
scas
pop
fsubp
mov
xor
std
bnd
dec
cmp
clc
insb
xchg
jo
mov
aas
pop
and
aaa
je
iret
notb
jg
daa
ja
dec
xor
jns
ljmp
fstps
movsb
ljmp
sbb
cmpsb
mov
mov
jmp
and
jne
and
push
add
aam
and
loop
out
fld
lahf
mov
outsl
aam
fsubl
test
lret
scas
rcll
jecxz
lahf
add
outsl
push
out
movsl
roll
adc
ds
pop
xchg
fst
adc
mov
rcl
roll
lcall
ss
xchg
push
scas
add
inc
dec
push
add
mov
test
xor
inc
into
inc
int
sub
mov
mov
cs
mov
sub
dec
mov
adc
jge
outsb
xchg
push
dec
movsb
dec
cs
jnp
ret
decl
loopne
dec
push
xchg
stos
jmp
pop
xchg
mov
push
js
test
cs
mov
and
ret
pop
ds
popa
inc
hlt
mov
dec
dec
adc
dec
sbbb
mov
cwtl
mov
cmp
mov
sbb
mov
sub
out
mov
mov
add
call
mov
pop
dec
sbb
mov
inc
lcall
in
jg
pop
push
ret
loop
pop
jne
fsubs
adc
xor
add
mov
mov
ret
mov
loope
cmc
negl
sub
fisttps
push
mov
inc
mov
arpl
mov
mov
ret
popa
repnz
and
mov
mov
and
xor
and
insb
pushf
mov
xor
jge
mov
fwait
jno
movb
ret
dec
jmp
xor
leave
cmpl
ret
jns
pop
sub
cmp
inc
daa
movnti
xchg
test
jbe
popf
js
je
ret
mov
mov
mov
inc
jne
sub
add
dec
sbb
lods
mov
cmp
and
sub
cwtl
push
mov
pop
fsubs
push
imul
mov
cmp
shl
test
sub
mov
or
pop
adc
cmp
jne
inc
ss
psubsw
lock
scas
lret
dec
loopne
cltd
fucomi
xor
addb
gs
mov
mov
and
aam
repnz
xor
fwait
mov
push
scas
loope
popf
leave
and
jae
cmpsb
add
aaa
cmp
pop
in
mov
xor
xor
sbb
cmp
lods
adc
imul
push
mov
push
movsb
pop
dec
fldcw
sub
push
push
in
dec
push
mov
fcompl
jge
xor
aaa
lahf
hlt
mov
pop
imul
push
add
test
and
icebp
inc
push
mov
xchg
and
cld
imul
fdivrs
test
xlat
enter
bound
insl
mov
jne
add
xchg
fs
push
stos
sbb
mov
add
std
xor
push
cmc
sbb
aaa
lds
jmp
cmp
hlt
mov
lea
ds
xchg
xchg
fmul
into
bound
or
inc
sub
std
cmc
push
push
pop
dec
xlat
push
push
sbb
lods
pop
rcll
mov
call
lret
sub
pop
jnp
cmp
push
push
popa
jae
add
mov
sahf
cld
xor
and
icebp
xchg
and
inc
mov
inc
dec
enter
add
mov
cli
jnp
dec
fst
mov
sbb
mov
pop
xchg
aad
or
adc
pop
or
fsubl
mov
jl
mov
xchg
xor
fdivrs
dec
push
ror
js
arpl
cmp
fwait
stos
xor
mov
add
mov
out
je
ss
push
les
mov
xchg
in
in
cli
mov
sbb
ds
jmp
mov
sbb
out
mov
pop
cltd
pop
push
mov
dec
pushw
nop
adc
fcompl
ret
std
mov
inc
aaa
test
or
xor
dec
out
dec
jno
pop
inc
sbb
mov
in
mov
push
in
pop
jg
fiadds
mov
cli
xchg
out
in
popa
sbb
aam
ss
fmull
mov
jle
pop
mov
inc
and
movsb
push
cmc
mov
mov
jne
leave
in
mov
mov
sub
std
lds
je
push
loop
pop
bnd
xchg
and
dec
and
pop
das
shl
add
xorb
jo
push
xor
aam
dec
nop
lcall
mov
fcmovu
ja
pop
or
test
adc
mov
fnstenv
sbb
mov
pop
test
stos
jp
shll
imul
lahf
negl
lods
mov
addr16
leave
mov
fcompl
leave
and
cld
dec
sbb
in
incb
popa
add
push
xor
in
add
repnz
fsubrl
idivl
test
dec
add
cmc
inc
mov
sti
and
aas
cmpsl
jp
ret
pop
add
adc
iret
into
ret
nop
xchg
mov
aaa
mov
rorl
jne
loope
insb
push
int
cmpsl
test
pop
fwait
lds
cmp
popa
mov
jnp
jo
fcmovu
xchg
push
out
cltd
jo
add
dec
mov
out
out
sub
sub
pop
shl
lods
xor
push
int
movsb
jae
out
xchg
sbb
inc
lea
mov
mov
pop
nop
pusha
out
jnp
push
dec
push
jo
xchg
mov
mov
shlb
popl
pop
sahf
fwait
sarb
lods
push
bound
xor
fcoms
adc
jo
xor
data16
hlt
setge
xlat
enter
xchg
mov
and
int
pop
and
aam
xlat
mov
in
test
int
mov
push
xchg
pop
fstl
xchg
push
out
push
ffree
loopne
add
sti
les
inc
add
addb
lods
shll
mov
cmpsl
push
test
das
and
fwait
pop
xchg
add
icebp
xchg
mov
test
adc
xchg
mov
cmp
je
outsl
add
sub
mov
testl
jecxz
dec
loop
mov
cmp
fs
cmp
inc
sbb
stos
fcomp
sub
out
mov
sahf
jno
bound
das
stos
out
jmp
addr16
sti
and
lahf
stos
push
inc
xor
pop
pop
mov
mov
xor
movsb
mov
mov
jge
pop
xchg
xchg
mov
cmpsl
push
jg
mov
pop
arpl
iret
sub
shll
mov
xchg
lahf
imul
jno
and
sbb
pop
fwait
adc
xor
es
popf
bound
sbb
or
dec
rorl
pop
inc
jae
and
mov
test
mov
push
sti
cmp
mov
pop
pop
aad
push
dec
push
jmp
jae
imul
xchg
outsl
mov
jle
mov
jne
and
mov
sbb
mov
xchg
aad
fldcw
js
mov
inc
fcomps
hlt
arpl
lret
add
cmp
mov
add
mov
mov
mov
mov
fstpt
movsl
pop
cmpsw
xor
push
jge
jo
sbb
dec
pop
push
fldcw
int3
pop
inc
pop
out
add
shrb
pop
push
lret
sbb
int3
jns
fcompl
in
xchg
shll
mov
pop
mov
sbb
lods
jb
test
mov
mov
cmp
out
mov
iret
xor
jp
or
sbb
outsl
dec
fs
or
push
fs
sub
lock
inc
add
lahf
xlat
mov
movsb
jne
xchg
imul
movsb
mov
pop
mov
pop
push
pop
inc
mov
pop
in
dec
mov
sbb
std
rcrl
les
addr16
mov
aad
mov
fsqrt
xor
pop
in
cmp
add
jg
ret
sub
sbb
mov
cmp
std
cmp
out
push
push
jno
jecxz
xchg
sub
in
push
mov
inc
cli
std
add
mov
jp
cmp
stos
aas
in
adc
rcll
movsl
cmpb
movsl
sbb
inc
in
stos
lret
or
test
adc
xor
repnz
mov
jl
ds
cld
mov
lock
inc
fcomp
jnp
sbb
lahf
ja
pop
cmpsl
dec
ja
push
ss
inc
push
xor
add
jae
mov
ja
cltd
mov
and
inc
pop
jns
cmp
xchg
jmp
jne
aas
jbe
or
dec
loop
stc
orl
loopne
mov
cwtl
aad
fldcw
xchg
shl
ja
loop
dec
clc
ror
or
pop
je
mov
out
xchg
mov
loopne
sbb
mov
cmp
sub
mov
aad
in
push
inc
lds
sbb
push
sahf
sub
fnstsw
into
pop
outsl
sub
loop
leave
dec
add
insb
jmp
add
ss
mov
inc
xlat
movsl
inc
push
xchg
jg
mov
xor
mov
sbb
ds
and
mov
jns
lods
icebp
inc
fwait
push
out
lds
sarl
es
push
sbb
rolb
shlb
adc
es
add
inc
xor
xchg
mov
rorb
and
scas
outsb
jae
fsubs
adc
imul
out
into
cmp
decl
outsl
push
popf
sub
movsb
dec
dec
aas
xchg
aam
subb
pop
xor
jne
pop
lret
repz
fs
inc
xchg
shrl
pop
stos
inc
dec
mov
fs
push
in
mov
pop
add
cmp
es
push
fiaddl
pop
lods
jmp
sbb
cmpsl
sub
inc
aam
dec
int
out
insl
test
adc
mov
inc
loop
std
in
mov
mov
aad
mov
pop
pop
dec
insb
cmpsb
fsts
ficompl
lahf
and
cld
and
repz
fwait
mov
xchg
sbb
lahf
jns
or
stc
imulb
jnp
mov
mov
outsb
mov
jmp
xchg
cmp
aam
sbb
jo
sbb
fcom
push
jge
std
lret
orl
adc
adc
mov
mov
push
into
aam
test
xor
in
cmpsb
push
pushf
cmp
rclb
es
fstpt
jno
push
jg
sub
ja
sahf
lcall
jne
ljmp
or
rorl
mov
and
cwtl
stos
mov
ljmp
movsl
test
hlt
add
mov
push
xor
mov
aad
icebp
mov
mov
dec
xor
cwtl
repz
cmp
jecxz
cmp
cld
imul
adc
jnp
fdivrs
add
add
adc
loop
in
jno
pushf
es
mov
in
mov
sub
sbb
int3
pop
xor
mov
sti
lret
jno
sbb
xlat
add
aad
std
jae
jg
cmp
andl
ljmp
test
sarb
push
mov
ss
jmp
xchg
mov
xchg
jno
pop
ljmp
rcrl
dec
sub
fld
or
scas
cld
pushf
pop
leave
pusha
fcmove
les
jl
mov
cmp
aas
cmc
sub
pop
push
rclb
stos
xchg
insl
mov
mov
ds
mov
pop
movsb
jmp
pop
mov
test
cld
mov
scas
push
cld
rol
movsb
adc
rcrl
pusha
xorl
int
fs
mov
lret
xor
fs
cmpsl
cmp
pop
mov
push
in
ss
test
mov
mov
in
lahf
jnp
scas
in
sub
pop
daa
push
mov
jb
jp
daa
fdivl
xchg
push
movsl
loopne
sbb
test
sub
outsb
cmpsb
or
lods
jecxz
movsb
lods
movsb
call
in
lret
mov
shrl
fisttpll
pop
scas
jecxz
cwtl
inc
or
lahf
mov
js
and
add
push
push
and
xor
sub
repnz
popa
dec
pop
inc
adc
mov
mov
ljmp
push
shrb
ficoms
pusha
fistps
cmpl
pop
xlat
cli
dec
mov
fstpl
pushf
ret
cltd
xor
int3
stc
lods
fwait
push
inc
sub
in
mov
aas
xor
repz
mov
in
in
jp
pop
adc
das
pop
mov
cli
cmpsl
loop
add
mov
mov
sub
cmpxchg
rcl
mov
data16
jle
push
mov
repnz
jmp
pop
dec
push
scas
sub
into
out
and
jle
xlat
orb
lods
cmp
adc
shlb
in
xchg
ret
insl
mov
push
cvtdq2ps
push
jecxz
mov
xor
xor
call
pop
sbbb
sbb
push
mov
jecxz
ja
out
int
mov
dec
push
ret
out
jmp
xor
push
jae
mov
push
mov
pop
jne
test
lcall
push
push
push
xchg
mov
cmp
in
enter
xchg
lock
inc
mov
add
cld
push
decb
scas
in
and
enter
xor
or
pop
cs
movsl
sub
outsl
outsl
nop
cs
rcrb
xchg
js
std
aad
ret
or
mov
xchg
push
pop
jno
add
test
jle
sahf
repnz
adc
stos
mov
mov
and
xchg
frstor
arpl
in
cmpsl
scas
das
outsb
mov
leave
call
addr16
inc
xor
adc
or
pop
xchg
add
pushf
cmp
mov
pushf
push
cmpsl
rcrb
fwait
jae
xchg
hlt
fdivrp
sbb
pop
mov
inc
sub
sbb
jle
fisubs
das
push
pusha
fidivrl
adc
fs
push
rol
dec
push
ja
orl
call
xor
sub
jne
inc
bound
repnz
or
and
dec
or
mov
fisttps
jb
mov
mov
loopne
dec
push
mov
push
icebp
ss
fistl
addr16
or
je
ret
inc
xchg
int3
sbb
iret
sbb
dec
jno
stc
jae
add
aas
adc
call
jnp
push
cmp
cld
out
xor
sub
icebp
mov
call
push
scas
jbe
xor
mov
loop
lods
xor
ficomps
mov
popa
andps
enter
lock
mov
sub
xor
push
adc
dec
jg
mov
sbb
mov
add
sub
pop
push
ja
imul
or
les
popa
dec
xlat
and
out
aaa
or
mov
or
mov
jg
inc
xchg
xchg
or
sbb
mov
add
cmp
cmp
and
das
bound
jle
mov
stos
scas
shlb
or
out
cs
jb
aas
jecxz
repz
adc
vminsd
sbb
addr16
cmpb
leave
aam
fnstsw
jo
cwtl
inc
mov
loopne
xor
sahf
or
mov
scas
xchg
adc
mov
pop
or
jge
mov
mov
ret
ja
jecxz
fs
bound
clc
adc
icebp
aaa
pop
add
mov
shl
add
pop
adc
sbb
repz
cmp
mov
add
pushf
jecxz
lret
in
int3
xor
pop
mov
fs
xchg
roll
xchg
mov
inc
inc
xor
adc
ss
incl
xlat
adc
xchg
mov
cmpsb
call
push
inc
and
and
sub
iret
in
mov
fimull
shl
daa
imul
mov
jmp
add
mov
mov
or
mov
push
leave
fidivl
iret
pop
scas
aaa
and
shlb
stc
outsb
add
mov
rorl
out
xchg
sti
scas
cmp
push
jle
int
push
insl
jnp
or
pop
cmp
cmp
add
inc
mov
adc
push
inc
popf
jle
out
scas
or
dec
xor
sbb
lret
push
xor
pop
lods
rol
jecxz
sahf
adc
xor
out
adcl
lahf
out
iret
cmp
aaa
jmp
cmp
cmpsb
xor
cmp
add
fcomp
or
add
out
mov
sbb
clc
bound
in
mov
xor
in
ja
stc
sub
adc
push
xorb
int3
push
pop
scas
push
adc
push
into
hlt
jns
lea
cmp
out
cmpsl
roll
fwait
mov
call
scas
jecxz
scas
loop
icebp
ja,pn
inc
jle
cmpsb
ss
and
notb
and
ret
jbe
popf
js
or
push
pop
lret
lea
lock
testl
sub
dec
add
ja
lret
enter
imul
movsl
in
cli
out
add
lods
cmp
fwait
dec
sbb
or
ret
cli
dec
incl
movsb
or
xchg
loopne
jno
pushf
jg
or
or
ffreep
pop
popa
mov
sub
mov
test
add
mov
jg
push
lret
push
sub
xchg
push
sbb
and
outsl
adc
inc
loop
jg
mov
xor
aad
ret
cli
cmp
cwtl
pop
mov
paddb
push
in
fsub
icebp
mov
dec
inc
cmp
sbb
xor
pusha
adc
es
mov
pop
pop
pop
push
or
iret
addr16
jg
out
mov
adc
mov
jg
adc
scas
jae
xor
push
jo
leave
xor
jecxz
je
pop
scas
sti
push
dec
in
jno
mov
into
dec
jo
add
mov
jge
adc
lods
xor
into
fwait
or
mov
mov
notl
scas
loop
ds
and
icebp
jno
push
jne
lock
jne
push
jmp
sbb
cltd
sbb
leave
test
xlat
rol
or
inc
dec
mul
int3
aam
test
andl
adc
sbb
inc
popf
push
iret
jno
fisubrs
jge
insl
mull
dec
pop
loopne
xchg
jns
es
cwtl
lret
push
call
xor
push
jg
mov
pop
pop
push
in
mov
adc
sbb
sub
jg
mov
ret
push
fs
and
xchg
or
xchg
mov
mov
dec
sbb
and
push
lcall
je
pop
ljmp
inc
sub
sbb
es
idivl
in
push
cmp
cmpsl
hlt
add
cmc
movsb
movsb
pop
fdivl
jg
dec
test
leave
jns
fidivs
jp
jo
fmul
or
jne
or
add
xor
int
mov
cmp
mov
xor
js
jg
out
xor
loope
lcallw
pop
mov
or
or
pop
sbb
fnstsw
pop
adc
insb
sbb
push
pop
lret
sub
fistps
inc
xor
dec
arpl
std
mulb
sahf
aam
push
andb
xor
aam
fiadds
sub
xlat
test
sahf
cmp
and
mov
cmp
out
cmp
cld
stos
cltd
pop
repnz
push
and
jmp
aaa
ret
pop
cmp
mov
jg
aas
jge
push
sbb
xchg
push
xchg
pop
out
xor
jo
enter
ret
and
mov
or
jge
adc
add
sub
add
or
jmp
pop
push
sub
jl
repnz
jne
xlat
rolb
cld
scas
xchg
adc
mov
data16
lret
aad
or
into
and
aas
movd
inc
je
adc
pop
xor
adc
inc
mov
xchg
mov
push
mov
dec
fwait
in
sbb
inc
adc
test
dec
mov
cmp
out
dec
mov
and
pushf
inc
pop
fsubs
nop
pop
xchg
mov
xchg
add
sbb
cs
mov
xchg
xor
fnstenv
sbb
sbb
notl
jmp
enter
daa
pop
inc
out
lods
mov
dec
sbb
aas
inc
test
icebp
pop
sbb
std
jbe
xchg
mov
dec
push
pop
arpl
clc
jg
push
mov
fmull
jp
arpl
pusha
mov
stos
add
pop
adc
outsl
stos
cli
push
stos
fldt
cmp
cmp
push
pop
mov
rcrl
cmp
mov
inc
mov
add
push
sbb
call
push
mov
cld
aad
push
test
stc
pop
test
xor
lcall
loopne
push
pop
ds
mov
adc
pavgb
jg
out
push
xchg
lcall
mov
inc
sbb
lahf
stc
mov
insb
mov
dec
dec
dec
out
pop
xchg
xor
aad
xchg
mov
pop
jp
xchg
fdivrl
mov
push
adc
sub
pop
dec
cld
mov
ljmp
mov
fistl
movsl
inc
add
out
mov
icebp
pop
daa
push
fdivrl
pushf
das
hlt
or
adc
sbbb
mov
les
pop
push
hlt
rolb
xor
and
lds
or
jno
add
jge
jmp
es
daa
pop
das
and
bound
pop
in
inc
mov
jg
adc
outsl
ret
sahf
xchg
push
lds
lods
cmp
push
pminub
iret
mov
jno
inc
aaa
mov
or
in
dec
pop
rolb
mov
leave
cltd
add
cmp
fsubp
mov
pop
and
mov
xor
jb
cmp
lock
test
lods
inc
jg
imulb
popf
test
out
add
sbb
pop
sbb
pop
mov
cld
sbb
sbb
test
outsb
loopne
mov
mov
or
xor
mov
shr
fsubrl
dec
add
mov
test
pop
lds
dec
leave
outsl
mov
mov
cmp
das
test
rcrb
leave
imul
xor
ljmp
mov
xchg
jb
aad
inc
fldt
pop
push
and
pop
pop
dec
imulb
mov
dec
or
push
xor
or
jnp
loopne
pop
sub
xchg
lcall
adc
mov
dec
aas
mov
lock
es
or
pop
test
gs
sub
mov
lds
jl
mov
mov
push
xor
lds
das
push
lods
adc
xor
mov
popa
xor
iret
xor
shrb
jbe
ds
pop
inc
std
jge
dec
subl
sub
inc
pop
cmp
push
push
fisttpl
sets
data16
bound
push
sar
stc
pop
pop
out
sub
adc
add
out
loope
push
xor
xor
addr16
xchg
and
div
mov
mov
sbb
mov
pusha
enter
adc
push
mov
gs
out
pop
clc
stos
xchg
xor
repnz
or
lods
stc
lcall
push
lods
cmc
jp
mov
mov
movsl
mov
and
pusha
xchg
mov
in
inc
flds
xchg
xor
pop
call
daa
daa
pop
add
imul
push
mov
mov
mov
push
mov
xchg
ss
jae
mov
xchg
ss
xchg
push
adc
nop
and
dec
ds
lret
or
lea
negb
rcrl
adc
ret
mov
arpl
xorb
into
xlat
mov
gs
push
pop
xchg
cmp
sub
fcoml
adc
jle
rcrl
addr16
popa
xchg
mov
jnp
or
repnz
aad
mov
fucomip
xor
push
loope
popa
fs
test
int
pop
or
and
mov
nop
cltd
pop
dec
push
pop
mov
std
pop
cmp
in
imul
sub
xorl
push
inc
jmp
test
pop
cs
pop
les
pop
jp
pop
movsb
popf
mov
and
mov
fsubrl
andl
xchg
mov
inc
mov
push
cmpl
iret
std
imulb
scas
mov
xchg
out
jmp
jge
adc
push
jmp
jp
push
cli
imul
out
inc
cmpsb
adc
sbb
xchg
andl
repnz
enter
fdivr
movsl
mov
lret
or
mov
cmpsb
shll
aad
enter
cli
cmpsl
cmp
dec
mov
xor
addr16
inc
jp
and
rcll
or
cld
cmpsl
inc
lods
imul
cmp
arpl
ret
out
lods
mov
cmp
adc
mov
scas
shll
cli
jne
or
sbb
sti
dec
test
aad
repnz
or
rolb
xchg
scas
add
inc
inc
rcr
jl
scas
popa
movsl
mov
xchg
out
mulb
lcall
sbb
jo
fwait
rcl
sub
cli
lea
push
push
dec
stos
inc
inc
xchg
cmp
cwtl
rol
adc
add
inc
lfs
mov
imul
sbb
cmp
out
clc
jnp
xchg
daa
nop
addr16
insb
mov
xchg
push
mov
sub
fnstsw
adc
and
inc
mov
or
int
cltd
cli
cmp
mov
aas
shr
jecxz
or
cltd
iret
lods
in
sub
cmpb
fcmovb
pusha
inc
out
sbb
mov
lahf
pusha
enter
call
mov
notl
lret
mov
dec
push
movsb
ret
into
push
lock
inc
sti
mov
dec
outsl
xchg
cmp
xchg
test
xchg
and
add
pop
xor
int
dec
xchg
cs
and
enter
das
dec
xchg
outsl
adc
in
and
add
push
cmpl
inc
or
lahf
xchg
nop
rcr
mov
fldl
jl
and
jnp
fiadds
push
jg
cltd
jge
test
fs
push
subl
mov
jnp
dec
sub
sub
xor
jbe
outsl
ffree
sbb
jl
testb
rolb
cmp
xor
xchg
sahf
sub
inc
sbb
push
arpl
jge
movsb
and
loop
imul
scas
stos
ror
sub
scas
aas
mov
push
roll
lret
inc
mov
push
leave
test
cmp
dec
pop
outsb
in
das
sbbl
and
cwtl
bound
fisttpl
rorb
and
push
jbe
sbb
addr16
cwtl
imul
daa
sub
ret
movsb
jb
jp,pt
out
popa
test
in
lcall
jo
push
ljmp
cmp
popa
adc
cmpb
jp
or
or
ficomps
aas
je
jle
pop
cli
mov
out
fs
xchg
or
mov
in
in
orb
lret
mov
lahf
push
scas
iret
sbb
outsl
pop
scas
jo
and
shrl
lahf
mov
mov
mov
sub
push
mov
lds
loope
pop
mov
test
jbe
add
movsl
cmp
shll
inc
inc
out
sbb
cli
jae
stos
mov
xor
lds
xchg
loop
ret
dec
adc
sub
mov
push
jl
sti
inc
in
or
leave
cld
sub
sbbb
push
or
aam
jl
aam
pop
inc
stc
or
roll
sbb
and
jmp
mov
mov
cs
leave
sub
les
cmpsb
and
pop
mov
je
insl
inc
lret
mov
out
ficoml
push
push
mov
sub
out
nop
dec
jp
pushf
mov
popa
lock
xchg
data16
push
sub
add
xchg
mov
popa
mov
jg
xor
xchg
aad
mov
cmc
cmpl
or
test
inc
xor
lcall
cmp
xchg
mov
mov
adc
pop
xor
stc
loope
adc
sub
cwtl
out
push
popa
mov
jb
ja
std
jbe
push
xor
out
inc
ret
mov
mov
mov
dec
bound
sub
cmpsl
fnstsw
or
and
mov
hlt
pop
insl
cmp
and
popf
xlat
stos
fs
sub
pop
dec
call
sbb
stc
popf
sbb
fimuls
ss
test
push
call
and
stc
out
cmp
xor
bound
adc
dec
cli
add
push
aam
mov
inc
mov
jle
push
int
stos
aad
sbb
push
xor
pop
sbb
or
and
adc
dec
scas
loop
push
xchg
inc
mov
jl
nop/reserved
mov
jecxz
or
jae
mov
pop
std
rorl
sbb
ljmp
ret
dec
lds
pop
jb
push
imul
loopne
pop
pop
imul
adc
ret
ret
in
xchg
daa
cli
lahf
push
adc
fimuls
repnz
pop
pop
out
cmp
movsb
dec
fistps
pop
aaa
cmp
paddq
adc
adc
ja
or
xor
das
lock
lods
mov
sbb
inc
rcrb
cs
adc
mov
lods
ss
aad
lods
stos
pushf
inc
es
mov
enter
inc
loope
mull
ret
fdivp
test
sahf
cld
inc
mov
int3
lcall
popa
mov
xchg
inc
inc
sahf
mov
pop
or
mov
sbb
pop
mov
sub
push
push
aad
daa
outsb
jge
cmc
jns
ja
and
dec
pop
std
or
dec
xchg
and
adc
sbb
in
insb
and
fistps
add
jo
dec
dec
pushf
jle
add
div
lods
pop
imul
mov
or
mov
out
lds
loopne
and
xchg
inc
repz
jge
xor
mov
shlb
cmc
inc
lods
call
push
mov
pop
movsb
mov
cmpsl
gs
mov
pushf
in
out
ret
mov
out
fsubl
jecxz
jo
jmp
lods
in
ds
mov
inc
std
rcrb
test
sub
jo
xor
popa
mov
bnd
sbbb
cmp
pushf
cmp
rcrl
and
cmp
insl
sbb
xor
out
jl
mov
test
xchg
push
cld
insl
jns
and
add
repz
jne
lret
aad
mov
sub
pop
inc
jecxz
ja
dec
aam
in
xor
rcrl
fdivl
outsb
push
sub
pop
ja
testb
cli
movsl
mov
mov
xor
subl
push
loope
in
gs
addl
adc
hlt
cmp
dec
mov
pusha
fst
xlat
sti
sbb
lret
xor
cmp
imul
loope
inc
lods
cmp
fsubr
dec
push
aad
pop
mov
outsb
pop
adc
cmp
jne
fsubrp
fidivrs
pushf
jo
sti
test
sahf
sub
inc
or
mov
jecxz
sub
sbb
cmp
pop
inc
jae
xor
dec
mov
jp
fsubrp
inc
or
sbb
sti
icebp
jae
xchg
ja
test
xchg
xlat
js
sarl
fildll
cmp
jae
mov
xchg
jns
pop
xlat
cltd
mov
jle
ss
jo
xor
int3
xor
jnp
xchg
mov
and
xlat
cmp
repnz
and
adc
dec
and
and
into
fsubrs
jmp
inc
stc
lahf
call
cli
mov
mov
lret
bound
or
push
std
cli
add
shll
bnd
mov
cs
divl
push
nop
int
mov
leave
cli
fstl
jecxz
adc
dec
mov
adc
cmp
jmp
es
xor
xor
cli
push
scas
popa
xchg
inc
ljmp
imul
jge
xchg
adc
rclb
sub
sarb
pop
test
popf
int3
les
mov
and
push
mov
or
dec
ljmp
adc
push
xchg
mov
xchg
sub
cltd
pop
pop
add
addr16
pop
add
pop
ret
fmuls
cli
cltd
inc
and
xchg
and
rcrb
js
jl
insb
xor
xchg
jne
lods
sbbl
xchg
dec
and
lods
dec
sub
cmp
int3
adc
mov
sahf
inc
cmp
inc
aam
mov
sub
xchg
aam
mov
xchg
jmp
dec
mov
test
shl
mov
xchg
in
fisttps
sarl
in
hlt
dec
mov
scas
aad
seto
mov
ja
jge
ss
out
add
mov
rclb
ss
inc
leave
sub
lock
cmpsl
sbb
rorb
sub
xor
loope
arpl
push
add
stos
fdivrs
out
gs
and
sub
push
and
daa
pop
sub
pop
sbb
dec
xchg
jne
movsb
out
js
push
sub
jl
push
movsl
clc
xchg
ret
push
ja
push
ljmp
mov
adc
inc
incb
fs
lret
push
push
sub
cmc
xchg
add
sahf
shlb
mov
sarb
in
mov
into
gs
mov
adc
adc
jmp
xorl
pushf
xor
mov
popa
jp
pop
mov
adc
int3
test
pop
dec
lods
inc
cwtl
pop
xchg
cmpsb
jnp
decl
add
and
add
int3
rolb
jo
xlat
sbb
push
lock
sub
fcompl
mov
sbb
in
cli
adc
jns
aad
add
or
push
scas
mov
iret
mov
mov
or
cltd
xorb
cmc
add
aam
mov
sbb
sahf
jmp
roll
inc
mov
and
test
out
xchg
imul
ret
pop
lret
xchg
insl
cmp
add
fcomi
mov
mov
xchg
push
or
dec
jle
lret
sub
loopne
jp
das
dec
mov
jb
and
mov
or
pop
lods
add
and
jp
lea
jl
sbb
xchg
pop
inc
jle
jg
hlt
sbb
and
into
cmp
popf
mov
sub
popa
mov
cmovo
xchg
pop
and
sub
fisttps
mov
iret
hlt
cmc
aam
jp
pop
loopne
int
das
lret
adc
xchg
mov
inc
cltd
sbb
adc
add
mov
popf
test
outsb
imul
ret
ret
inc
inc
pushf
movsb
lea
movsb
je
or
pushf
mov
cmp
mov
aaa
and
shr
test
inc
jecxz
mov
mov
in
lea
push
add
add
mov
fst
inc
out
dec
clc
int3
arpl
xor
jno
fdivrl
fimull
add
cmp
int
sbb
jno
xchg
sub
mov
sahf
xor
test
scas
pop
es
fldcw
pop
aaa
jo
pop
dec
add
inc
mov
imul
fisttpll
pop
sahf
dec
je
pop
fdivrs
and
jecxz
jne
imul
arpl
fs
xor
pop
pop
mov
lret
and
mov
ljmp
stos
adc
mov
push
outsb
icebp
rol
jbe
xchg
cwtl
mov
add
adc
jae
sub
insb
insb
pop
xchg
sub
aaa
mov
dec
imul
iret
nop
sub
or
xor
imul
push
bound
cmovge
repz
stos
xor
pop
sbb
dec
je
loop
data16
movsb
lea
subl
add
xor
xor
clc
int3
dec
add
xor
jns
testb
sahf
rolb
cmp
scas
xchg
cmp
jp
lds
in
out
mov
mov
sti
pop
imul
and
test
push
jp
negl
jbe
push
add
cli
add
push
decl
dec
mov
xchg
mov
and
pop
push
gs
clc
aas
imul
mov
sub
cmc
push
repnz
add
stc
cs
xor
notl
jp
icebp
mov
stos
iret
lods
in
jnp
jne
fsubp
aas
fistpll
stos
fcmovu
fwait
cwtl
lcall
loope
push
mov
fistl
xchg
mov
addr16
in
sbb
adc
jle
fcmovbe
push
xchg
loope
bnd
mov
dec
sbb
out
cmpsl
mov
dec
xor
scas
and
ss
clc
pop
pop
lds
cltd
into
xorl
xchg
fdivrs
loope
ret
inc
dec
adc
adc
or
sbb
stos
push
loopne
sti
sub
sbb
ss
mov
or
xlat
inc
mov
fnsave
or
movsb
dec
sbb
aam
popf
fstpt
outsl
les
das
mov
cltd
and
adc
sti
icebp
faddl
test
or
add
pop
les
sub
js
rolb
add
fwait
gs
sarb
and
xchg
mov
aam
andb
xchg
arpl
js
cmpsb
insb
sub
inc
ret
mov
mov
js
and
push
xchg
pop
in
jg
ja
xchg
push
js
pop
jb
addr16
sbb
insl
add
mov
fdivs
roll
sti
dec
mov
jbe
and
xlat
xor
xor
sbb
xor
ja
sbb
push
aaa
mov
mov
mov
mov
lcall
lea
xlat
and
dec
jge
lcall
sub
daa
adc
push
sub
mov
clc
push
sub
lcall
adc
jg
adc
push
mov
sahf
outsl
out
sbb
jle
add
xchg
adc
push
mov
f2xm1
or
into
xor
dec
stos
insb
loopne
cmpsb
mov
outsb
test
mov
push
inc
cmpsl
leave
add
adc
xchg
pop
add
popa
mov
push
xor
les
fnstenv
repnz
mov
and
cmp
push
leave
jno
sbb
add
fstpt
ret
and
out
xchg
sub
mov
cli
fbstp
mov
pusha
jl
or
mov
adc
cmp
popa
cmp
xchg
bnd
icebp
cmpsb
in
inc
xor
xor
mov
dec
pop
rcll
push
subb
sub
jae
pop
jb
arpl
cs
fwait
leave
pop
jnp
xchg
das
stos
ret
insb
loope
push
xchg
mov
fldt
pusha
negb
jl
cmpsl
mov
jae
jle
jae
lds
iret
mov
or
ja
in
sub
out
pop
pop
popf
cmpsb
fnsave
shrl
jns
pop
cmp
scas
jl
arpl
aam
and
push
add
ficomps
mov
or
loop
hlt
add
mov
mov
test
push
dec
sub
xlat
jo
call
mov
jnp
pop
in
std
dec
ja
dec
jb
sbb
pop
adc
pop
jae
daa
test
pop
pop
roll
lods
orps
xor
push
sub
mov
lahf
xor
call
and
push
fsubp
sbb
sub
jmp
lods
mov
mull
loope
mov
fmul
jp
jne
pop
xchg
jno
scas
fwait
inc
lret
cmp
inc
arpl
xchg
hlt
imul
loop
das
subl
fwait
add
movsb
xor
aad
push
pop
push
popa
add
sub
xchg
cli
enter
or
test
int
mov
aad
test
nop
xor
in
mov
punpckhdq
je
push
push
stos
lds
mov
pusha
out
or
mov
push
jnp
mov
sbb
cld
leave
cld
cmpsb
or
das
fistl
pushf
xchg
pop
push
jae
ljmp
cld
lret
leave
outsl
les
or
iret
mov
xchg
or
xor
in
sub
cltd
jl
mov
inc
lahf
dec
stos
cmp
sbb
test
push
dec
xor
pop
enter
in
lret
cmpsb
rclb
in
pop
pop
pop
sar
lahf
jmp
nop
mov
dec
mov
or
dec
dec
mov
inc
push
dec
add
add
ret
jb
adc
jg
cld
push
mov
popa
in
cmp
dec
jne
mov
mov
and
jge
xchg
or
insl
loopne
repnz
add
pop
sub
push
dec
outsb
mov
das
and
aaa
cmp
loop
mov
xor
mov
mov
arpl
insb
jl
push
xor
iret
and
and
mov
mov
or
leave
or
and
loopne
fisubs
pushf
mov
xlat
sbb
gs
push
lcall
pusha
inc
lock
in
in
and
mov
push
xchg
add
mov
inc
xchg
xorb
shlb
in
cli
mov
push
dec
into
or
aam
sbb
cmpsb
mov
out
jmp
xorb
aad
int3
pop
cltd
adc
push
sbb
push
stos
loopne
and
mov
addr16
stc
lcall
ja
push
mov
and
idivl
and
inc
push
sbb
fldt
dec
movsb
sub
or
mov
rcl
fs
add
cmp
dec
adc
test
mov
xor
loop
lock
and
stos
pop
pop
data16
mov
aam
push
push
pushf
hlt
arpl
repz
xor
enter
and
add
mov
js
xor
outsb
insb
test
fldenv
sub
push
icebp
add
aas
stc
outsb
push
lret
fwait
lea
int3
push
jnp
jo
add
aad
es
stos
faddl
jns
cwtl
sbbb
add
mov
cmp
jp
cmpsl
out
add
pop
dec
xchg
mov
out
imul
fs
call
jns
scas
sbbl
das
pop
in
xchg
pop
aam
inc
and
lods
jmp
cmp
je
in
imul
mov
or
xor
pop
xchg
incb
arpl
outsl
loop
mov
jb
adc
jp
fistpl
and
mov
stc
mov
loop
adc
bound
xlat
push
into
in
bound
jns
sub
scas
jg
xchg
and
jbe
mov
leave
and
jb
inc
mov
iret
xchg
push
mov
push
xor
mov
mov
lret
dec
sahf
and
call
sbb
hlt
lods
xor
adc
sbb
and
sarb
adc
and
or
add
xor
pop
adc
push
mov
iret
inc
add
push
dec
cwtl
in
ret
pop
cld
push
cmp
fisubl
fisubs
iret
sbb
inc
pop
cmp
loope
jmp
fwait
std
cwtl
cmp
xor
dec
adc
pop
inc
add
into
les
aas
dec
movsb
jl
lcall
sti
lret
lahf
push
pusha
mov
imul
xchg
cli
iret
fnsave
stc
jp
stc
push
jmp
aad
in
mov
out
imul
mov
mov
push
icebp
cmpsl
xor
mov
in
xor
xor
inc
enter
adc
sub
loope
repnz
add
push
xor
iret
lock
ds
scas
data16
into
mov
push
sbb
push
das
out
mov
test
xor
mov
call
adc
mov
mov
sub
aas
fsubrl
xor
cmp
pushw
jbe
push
xchg
rep
das
bound
out
mov
ficomps
jp
mov
arpl
mov
mov
push
push
add
mov
push
cld
fwait
rolb
jae
jae
repz
out
imul
bound
xor
out
or
mov
mov
jecxz
lcall
add
xchg
xor
pop
iret
sub
test
les
sti
cmp
pushf
sbb
jbe
ss
xorl
in
pop
and
fwait
mov
hlt
scas
xor
cmp
sbb
mov
out
popa
ja
sar
repz
sbb
mov
into
loope
out
add
ret
cmpsl
test
or
adc
sar
mov
test
jg
adc
mov
pop
push
mov
pushaw
mov
adc
adc
ja
in
cld
arpl
push
sbb
mov
lea
or
and
rcrl
cltd
pushf
mov
jbe
in
mov
adc
mov
sub
aam
in
sub
sub
mov
mov
outsl
lret
ljmp
cmp
out
in
sti
lret
sti
sbb
mov
insb
xor
mov
mov
mov
adc
mov
out
mov
addl
xlat
imul
sahf
aas
ljmp
push
mov
xchg
insl
lret
jae
push
mov
sub
cwtl
jg
enter
daa
cmpsb
lret
cmp
push
cmp
xor
insb
xchg
or
fists
idivl
sub
mov
jb
or
aam
mov
pusha
lcall
or
sbb
lods
xor
lcall
sub
or
cmp
sub
xor
sbb
repnz
push
dec
jp
pushaw
mov
cld
and
cmp
adc
mov
mov
mov
mov
mov
sbb
sub
fsubs
out
pop
dec
inc
push
std
mov
cmp
mov
pop
cli
sahf
pop
int3
and
out
pop
adc
fisttps
mov
out
adc
pop
sub
dec
dec
mov
sbb
int3
jge
xor
mov
fldl
or
gs
xchg
popa
lods
mov
xchg
push
add
push
jmp
push
into
add
or
xchg
lret
sbb
out
adc
movsb
lret
out
ffreep
mov
or
pop
jp
jb
scas
leave
aaa
aaa
imul
test
xchg
pop
test
cld
in
nop
ljmp
es
inc
inc
push
sbb
sub
scas
pop
lret
xchg
jne
push
pop
repnz
cld
in
not
out
or
mov
sub
sbb
dec
jl
rcr
movsb
cli
filds
xchg
stos
gs
and
inc
lret
mov
sahf
aaa
xchg
jb
das
pushl
das
js
mov
xor
add
test
push
ret
in
inc
xor
or
sbb
or
adc
bound
or
cs
fcoml
jne
inc
mov
inc
dec
and
lret
or
shrb
stos
iret
fwait
xchg
loope
cmp
jbe
in
xchg
decl
add
dec
fldz
sti
inc
sub
jmp
je
enter
push
or
inc
and
push
outsl
xor
cmovp
mov
stos
cmpsb
sbb
inc
push
pop
cmp
insl
ret
not
adc
cmp
add
ret
push
pop
pop
xchg
and
fisubl
push
xchg
leave
fistpll
outsl
aas
rcr
sbb
sti
xor
cmp
loop
or
push
jo
lret
insl
jne
cmp
stos
adcb
test
push
lods
cmc
outsb
lea
xor
ljmp
push
loop
lods
mov
pop
pushf
dec
stos
shll
fs
rcll
mov
cs
cmp
pop
xchg
in
mov
mov
push
xor
mov
pop
nop
fwait
and
sub
lods
cmpsl
inc
insl
mov
inc
add
mov
inc
adc
test
cmpsl
loop
repz
jb
les
dec
jecxz
pop
sub
mov
push
psubb
inc
mov
mov
mov
rcl
fisubrs
jnp
cli
mov
cmp
dec
or
int3
or
stos
add
sub
xchg
adc
mov
dec
or
pop
outsb
in
jge
hlt
movb
push
inc
xchg
imul
call
sbb
das
push
cwtl
adc
mov
jo
mov
sbb
std
lret
lods
or
mov
notl
inc
adc
in
mov
outsl
addr16
push
pop
pop
sarl
stos
xor
cld
push
xor
xchg
dec
mov
or
xchg
mov
repz
dec
adc
loopne
fbld
aad
and
outsl
sub
xchg
jecxz
repz
or
sbb
mov
mov
jecxz
and
pop
xlat
pop
sub
popf
inc
movsl
add
dec
iret
movsb
out
inc
add
data16
out
in
dec
addl
xor
cltd
mov
xor
fdivrl
pmaddubsw
adc
test
jl
adc
je
shrl
cli
add
aas
push
cmp
leave
xor
sub
or
std
fnstcw
outsl
sti
jb
push
bound
aaa
fldt
scas
xor
nop
mov
xor
push
aad
insl
aaa
subl
sub
out
ret
sub
bound
sbb
pop
mov
rorb
enter
shlb
jbe
push
pop
jbe
arpl
dec
scas
sti
push
push
dec
call
stos
inc
and
push
cmp
cmp
and
mov
inc
adc
shll
iret
pop
jg
inc
jns
repnz
mov
sub
lds
jno
pop
clc
outsb
add
insb
shll
add
popf
jle
push
fcmovnb
dec
xchg
sbb
loopne
sub
rcrl
ret
or
jle
cmp
xor
bound
test
mov
test
pop
mov
or
seta
cmpsb
lahf
pop
add
ljmp
jae
repz
test
and
fcoml
sbb
pop
into
outsl
add
sub
mov
mov
jno
inc
sbb
push
lock
decl
sbb
test
rcll
or
sbb
inc
pop
sarb
fcoms
sbb
add
aad
loop
ds
in
int
sub
dec
push
test
lods
sbb
ds
out
pushf
lcall
push
pop
push
xor
dec
arpl
cmp
sub
add
sub
mov
js
mov
add
testb
lea
mov
push
mov
mov
jle
push
sub
jle
fstl
push
stc
repnz
movsb
mov
jnp
adc
shll
loope
inc
fucom
inc
lcall
add
test
pop
push
ja
mov
inc
or
push
sub
test
adc
and
pusha
lods
inc
es
cmpsl
lret
test
jecxz
outsl
test
inc
xlat
pop
xchg
lcall
es
sarl
outsl
add
sbb
addr16
cmp
fmuls
mov
daa
and
push
shlb
test
add
or
push
jp
rcrl
notb
mov
fists
andl
xor
jns
fdivrl
inc
andb
cwtl
cs
cmp
push
and
push
bound
pusha
lret
mov
mov
or
mov
pop
call
cmpxchg
shlb
mov
mov
rcll
inc
icebp
pop
in
pusha
adc
adc
jmp
fnop
arpl
cltd
jb,pt
roll
pop
shrl
cmc
dec
pusha
push
movsl
addr16
xchg
aad
cmp
in
cmp
lahf
jno
sub
sahf
fidivs
ror
inc
roll
adc
xor
negb
sub
mov
mov
aad
outsl
mov
push
sub
pop
adc
leave
push
mov
rcll
add
cwtl
xor
jo
pop
or
sub
xchg
push
add
cmp
cmpl
sbb
arpl
add
xchg
dec
sbb
adc
scas
mov
sbb
sbb
add
out
addr16
or
les
jmp
xchg
jno
or
clc
mov
rorl
jbe
jg
adc
dec
std
cmp
sbb
or
popf
fimull
shrb
cmc
xor
pop
xchg
xor
imul
movsb
fstp
lds
fisttpll
cmp
cmc
shl
cmp
xor
mov
in
sbb
sbb
in
mov
jns
xlat
sbb
inc
int3
xlat
test
adc
stos
jns
lahf
mov
loopne
out
shlb
pop
xor
add
rorb
cwtl
out
rcrl
and
lcall
cwtl
jae
jp
cmp
fadd
jecxz
inc
je
inc
gs
mov
mov
std
dec
jb
adc
xor
pop
fs
shrl
popa
inc
mov
and
and
xchg
and
mov
jmp
out
adc
xchg
xor
push
sahf
loopne
leave
add
cwtl
or
jb
jne
test
mov
xor
adc
outsb
mov
aad
ss
mov
movsb
mov
scas
subl
dec
mov
in
pop
adc
and
nop
and
mov
add
pushf
xor
adc
sub
dec
xor
aam
inc
aaa
inc
or
inc
mov
popf
loop
outsb
add
add
pushf
mov
idiv
sbb
jp
mov
int3
leave
stos
pusha
or
push
lods
imul
outsl
pop
into
fldl
mov
test
xor
mov
test
or
mov
jmp
push
repnz
test
inc
mov
mov
fcoms
imul
add
call
adc
push
outsb
xchg
addr16
sub
out
pop
imul
push
sub
sbb
insl
pop
xchg
arpl
inc
sbb
sub
inc
iret
sbb
js
xchg
or
call
push
jb
hlt
movsb
mov
add
ds
mov
lock
dec
add
cwtl
das
pop
int
into
fwait
mov
dec
iret
out
adc
push
enter
push
mov
cmp
add
xchg
or
dec
loopne
mov
jb
xor
xlat
and
cwtl
xchg
sub
sub
and
sti
mov
or
insl
out
hlt
add
outsl
cld
xchg
push
and
scas
scas
mov
imul
push
xor
adc
mov
xchg
cmp
cmp
outsl
add
scas
std
jmp
cmp
jb
in
push
mov
sbb
imull
and
ss
pusha
cwtl
stos
cmp
push
ljmp
rorb
or
cmp
sbb
cmpsl
fistl
mov
arpl
loopne
movsl
lret
adc
add
pop
jmp
out
adc
add
sbb
pop
hlt
or
stos
stos
dec
ja
loop
pop
les
fistpl
loop
lock
mov
iret
adc
xchg
mov
pop
jnp
aaa
adc
mov
jl
jmp
mov
mov
push
pusha
inc
in
mov
sub
mov
test
xchg
ja
cmpsb
inc
sbb
testb
mov
notl
sub
rcr
fsub
xor
in
adc
lahf
xor
xor
mov
sub
out
lock
icebp
scas
dec
outsb
ljmp
add
sub
dec
push
sbb
daa
clc
cli
inc
jecxz
ret
jmp
insl
xor
stos
push
mov
cmp
adc
pop
rorl
jecxz
and
addb
movsb
lret
pop
mov
xchg
pop
xchg
sub
inc
mov
adc
subl
pushf
daa
test
out
push
daa
pop
outsb
dec
add
stos
pop
andl
mov
inc
pushl
or
ljmp
jb
cwtl
out
scas
int
imul
xlat
mov
xchg
stos
push
jb
xchg
pop
xor
out
sbb
and
cmp
push
pop
mov
and
pusha
fwait
gs
sub
gs
mov
xchg
dec
rcrl
sub
xor
loop
not
sbb
push
sub
sbb
das
test
mov
xor
lret
inc
sub
xor
sbb
movsl
dec
or
pop
push
pop
xor
and
cmpsb
cld
jle
xor
mov
xchg
scas
mov
xchg
mov
hlt
ret
xor
push
sahf
push
jmp
xchg
inc
push
fwait
addb
and
sbb
xor
ljmp
aad
inc
mov
loopne
iret
aas
sbb
push
inc
sti
push
jge
pop
xchg
gs
adc
sub
mov
call
rdtsc
xchg
mov
sub
and
xchg
push
and
roll
inc
add
clc
js
imul
and
scas
push
jmp
dec
sbb
lahf
fwait
pop
out
xor
xor
or
and
testl
pop
pop
pop
and
daa
arpl
fimuls
sbb
xchg
enter
pop
pusha
or
movsb
lea
jge
push
push
and
and
add
xlat
mov
cmp
sahf
fcomps
sub
jne
xchg
mov
or
call
cmc
mov
in
addr16
pop
sbb
cmp
push
out
jp
mov
add
xchg
ret
into
inc
inc
mov
in
lret
sub
and
adc
mov
dec
ds
inc
xchg
mov
and
fnstenv
adc
hlt
push
into
sub
jle
enter
mov
dec
push
js
fcoms
mov
add
sub
jl
out
jp
and
shlb
outsb
mov
subl
mov
sbb
lahf
cli
mov
add
testl
subl
lods
pusha
decl
mov
dec
mov
adc
adc
popf
scas
mov
lods
imul
jecxz
push
adc
mov
test
lds
gs
inc
pop
hlt
cs
icebp
cmp
jecxz
xchg
push
dec
mov
pop
addr16
aaa
inc
jbe
mov
or
sub
pop
addr16
idivl
aaa
cltd
and
es
jne
pusha
dec
inc
pop
and
pop
out
mov
lcall
mov
mov
in
xor
jns
jle
popa
and
xor
movsl
iret
xor
mov
xchg
mov
xchg
repz
add
pushf
xor
push
add
sbb
shll
mov
pop
sub
jno
movsb
xor
mov
in
fbld
pop
data16
or
xchg
outsl
cmp
ds
in
loope
pop
add
and
sub
mov
ss
mov
dec
dec
nop
roll
insb
inc
inc
mov
dec
adc
repz
adc
and
cld
adc
inc
xchg
les
adc
pop
cmp
add
dec
lea
add
movb
fxch
in
mov
mov
or
stos
sub
xchg
rolb
stos
enter
addr16
xchg
add
lock
mov
sub
arpl
cli
push
ja
mov
mov
pop
mov
shlb
call
outsb
and
jno
push
mov
mov
popf
cwtl
jno
stos
cmpsb
cmp
nop
les
nop
mov
and
add
cmpsl
xchg
mov
lret
adc
jne
xor
pop
movsl
int
cmc
xchg
jb
pop
aas
or
movb
jg
and
sub
test
mov
sbbb
xchg
mov
dec
shrl
mov
shl
roll
jno
scas
scas
mov
add
int
sbb
pop
in
in
pop
adc
lcall
popa
or
das
sbb
jmp
inc
mov
jecxz
ja
sub
adc
movlps
cmp
inc
lcall
inc
sub
pop
in
mov
enter
adc
jne
iret
dec
sub
data16
movsb
loop
cmp
mov
inc
or
sbb
js
and
arpl
sbb
in
jo
aaa
fsubrl
cmp
movsb
mov
pushf
mov
dec
cwtl
dec
dec
testl
fsubrl
inc
fnstsw
push
add
or
push
mov
test
pop
xor
loop
xsaveopt
inc
mov
pop
out
and
into
aad
rolb
jl
in
mov
out
sub
jl
push
aad
or
push
insl
dec
cmpsl
fstpt
orl
add
push
push
adc
out
out
mov
lds
jnp
add
push
sub
adc
add
and
or
mov
in
je
pop
mov
or
add
test
mov
fst
outsl
push
fs
sti
pusha
xchg
test
stos
insl
jne
pop
adc
sbb
jnp
push
in
loop
mov
stc
es
mov
jb
test
sbb
cmp
mov
pop
pop
push
movsl
cld
lods
dec
mov
sub
dec
ss
mov
sub
mov
jne
ds
sub
out
fwait
inc
sbb
adc
fisubrs
cld
or
xchg
lcall
mov
mov
aaa
lods
jo
daa
and
push
loopne
sbb
inc
fisubs
ret
rorl
cltd
je
fistl
rorb
ja
or
xor
aad
shlb
dec
enter
xchg
arpl
mov
mov
les
cmp
push
dec
add
sub
enter
dec
jno
jne
repnz
push
sarl
adcl
or
inc
test
stos
add
in
cwtl
jge
sub
imul
inc
add
adc
shlb
mov
stc
pop
shlb
lea
movsl
adc
xchg
scas
mov
insb
popf
xor
xchg
lcall
insb
push
jae
scas
adc
add
daa
sub
sti
mov
mov
add
and
nop
sub
and
scas
outsl
mov
movsb
enter
xchg
sti
nop
sub
jne
adc
inc
dec
cmp
scas
xor
js
lock
and
sbb
sbb
test
add
sub
push
rcll
in
hlt
lods
mov
js
push
sbb
add
xor
jle
test
mov
pop
int3
pushf
ljmp
cmp
icebp
mov
and
lds
xchg
loop
test
add
mov
push
repz
pop
inc
je
scas
lret
lret
jbe
pop
in
enter
ds
das
mov
loopne
inc
mov
cli
dec
call
cltd
mov
fwait
into
lret
enter
mov
jge
sub
test
leave
daa
jne
fcoml
add
sbb
mov
orb
cmp
sahf
lods
test
xor
ret
inc
cmpsl
dec
lahf
in
sub
xchg
pop
ss
lret
fnsave
cltd
mov
cmpb
sub
mov
adc
and
idivl
lret
sub
sar
lods
lret
clc
push
mov
inc
pusha
mov
inc
aaa
xor
dec
stc
dec
aaa
cmp
outsl
jnp
mov
lret
and
je
notl
add
xchg
jecxz
inc
sub
cmp
cmp
fistpll
sub
sbb
mov
test
mov
cmpl
lcall
loope
jmp
iret
xor
pop
imul
aas
and
in
mov
cltd
and
call
dec
icebp
in
xchg
rcll
mov
out
stos
cmp
adc
in
and
or
pop
sbb
fdivr
out
nop
adc
mov
mov
mov
mov
cmp
je
push
lret
push
pop
lret
pmullw
addr16
cmp
pop
lret
test
cmp
fdivrs
pop
mov
xchg
xor
movsl
ret
push
es
and
cs
outsl
mov
aad
sub
aam
add
fs
stos
xchg
repnz
mov
adcl
add
jo
sub
lcall
xchg
sub
inc
lea
mov
dec
movl
out
sbb
dec
mov
cmpsb
xor
outsl
xchg
push
push
add
icebp
or
cmp
sbb
pushf
lea
xchg
ljmp
add
cmp
ja
cmp
sbb
pop
lock
cmp
mov
scas
mov
mov
dec
add
out
addr16
mov
dec
adc
mov
jbe
jnp
lret
add
repnz
xchg
stos
je
lret
sbb
sub
fcmovu
ret
xchg
icebp
aad
imul
fwait
pop
cs
mov
or
or
mov
filds
pop
call
add
fldenv
into
mov
daa
imul
mov
outsl
lret
outsl
mov
pop
mov
fimuls
lea
dec
pushf
daa
pop
sti
mov
icebp
pop
decb
cmp
movsb
xchg
cmp
es
sub
lds
aam
push
sub
test
lods
push
push
mov
pop
iret
addr16
adc
popa
mov
xchg
loopne
push
lret
icebp
inc
decb
fidivl
pop
jle
repz
sub
mov
push
cmpsl
lret
cmp
jge
and
mov
xchg
sbb
jns
dec
push
mov
push
xor
sub
iret
sub
cmpsl
or
mov
jp
add
cmp
rcl
mov
or
jmp
pushf
sbb
test
dec
dec
push
ja
or
mov
ss
jnp
shlb
push
subb
cmp
mov
jo
rcl
add
add
subl
das
and
fistpl
jbe
mov
inc
hlt
ss
inc
push
mov
lods
movsb
std
fistpl
dec
add
xor
xor
dec
loop
cmp
js
repz
push
push
ljmp
add
fstpl
ljmp
data16
cs
push
test
mov
push
or
es
cli
cmp
adc
gs
dec
inc
mov
es
mov
sub
add
mov
adc
adc
lret
sbb
mov
xor
jae
jb
addl
fiadds
pop
cmp
icebp
test
arpl
mov
mov
cs
pop
mov
lret
scas
pop
jo
popa
add
fcmovb
inc
and
jl
fisttpl
mov
jmp
add
cltd
outsb
xor
out
lcall
pop
or
clc
stos
insb
push
push
lcall
into
xchg
cltd
add
imul
cmpsb
jmp
jns
les
dec
movsl
xchg
xor
mov
out
inc
push
cmp
in
cmp
ret
shrl
vpavgb
jmp
mov
and
pop
lds
mov
xchg
push
cs
in
dec
push
popf
je
data16
mov
ja
frstor
jl
pop
dec
jne
push
or
lret
xchg
sbb
in
or
cmp
push
iret
inc
sarl
fiaddl
sub
cs
bound
mov
ja
sub
adc
sub
mov
dec
sub
sbb
lock
pop
sub
push
xor
divb
sub
add
mov
aam
cltd
jp
mov
inc
gs
xchg
aas
sub
inc
adc
stc
and
push
cmp
ljmp
push
inc
aaa
sti
popf
int3
mov
add
fninit
mov
call
sarl
pop
lods
aas
in
xchg
mov
add
rol
clc
fsubs
adc
shlb
sarl
xchg
aaa
xor
xor
popf
aas
sbb
sub
in
in
mov
mov
sarb
out
and
cltd
aad
jns
cmp
inc
cmp
pushf
lret
rcll
shlb
pushf
sti
pushf
dec
or
cmpsl
push
push
rep
xor
dec
xor
cmpsl
xchg
sarl
fcoms
dec
jne
mov
dec
aas
repnz
sbb
bound
rcl
mov
xchg
out
push
sub
aam
ret
mov
inc
pop
xor
mov
mov
inc
pop
sbb
mov
sbb
push
push
sbbl
sub
nop
subl
dec
movsb
fdivs
insb
int3
pop
int
jle
push
aas
aas
inc
addr16
pop
cli
jmp
add
sbb
test
lret
mov
sarb
push
and
or
fmuls
push
pop
jb
pop
sbb
mov
or
inc
jg
dec
sub
mov
in
arpl
lret
mov
nop
sub
stc
jl
test
pop
stos
hlt
dec
inc
inc
aam
cmpl
xchg
inc
mov
jge
cwtl
jl
dec
jp
shl
cmpsl
out
cwtl
in
jne
hlt
xchg
stos
mov
inc
fcmovnbe
test
xorb
mov
mov
bound
js
clc
ret
cmpsl
mov
sub
xlat
shll
mov
sub
pop
in
pop
ficompl
cmpsb
jae
cmpsl
push
test
xchg
or
sbb
in
mov
cmp
mov
lahf
mov
add
std
add
pusha
insb
testb
and
cli
into
mov
dec
mov
xor
sbb
push
call
mov
lea
and
ss
and
je
mov
jnp
fimull
xlat
jge
dec
ljmp
xor
and
addr16
or
sub
push
xchg
popf
mov
leave
testl
bound
je
push
leave
in
imul
cmp
push
xchg
test
cmpsl
fdivrl
movsl
data16
dec
stos
movsl
xor
inc
adc
mov
mov
add
sbb
repz
sarl
jb
incl
iret
or
or
cmp
jb
adc
push
add
sbb
mov
xchg
in
repnz
lock
setbe
and
xchg
push
inc
cmpb
fsubrl
sbb
cwtl
aas
rolb
cltd
jmp
cmp
adc
jg
popa
mov
out
mov
dec
lods
mov
sar
lea
sbb
fists
aam
jnp
jbe
mov
and
adc
inc
xchg
fcomip
pop
ret
jns
fwait
xor
adcl
mov
adc
les
jne
sbb
pop
movsb
push
mov
pop
sbb
icebp
jle
jg
ret
cmp
outsb
sub
mov
out
cvtps2pi
je
sub
sti
sahf
shrl
jnp
sub
lret
daa
add
cmp
xchg
cmp
pop
pop
and
je
xchg
inc
addr16
loop
cmpb
clc
inc
add
cmc
fsubrp
push
outsl
push
es
adc
or
adc
push
and
es
lcall
push
pop
jno
sbb
sub
fsts
sahf
sbb
dec
xor
xlat
loopne
mov
sub
into
xchg
insl
outsl
push
inc
hlt
dec
repnz
mov
mov
fmuls
fsubr
pop
mov
mov
cmc
aad
mov
and
shlb
sub
mov
cmp
mov
and
ret
cltd
mov
jge
jns
jbe
imul
data16
cmp
sbb
xor
jno
popa
or
fwait
dec
jge
sti
mov
push
daa
cltd
stos
imul
xlat
cmp
xor
in
pop
nop
mov
inc
dec
int
gs
scas
xor
daa
out
scas
mov
lds
jnp
jl
in
pop
inc
mov
xchg
fcoms
or
jmp
out
fsubs
andb
test
adc
addr16
inc
popa
push
push
sub
adc
jmp
sub
pop
out
add
or
fs
push
lahf
or
cmc
jns
mov
fistpll
or
cmp
cmpsl
mov
lahf
and
push
xor
or
xchg
nop
scas
lds
sbb
dec
leave
xchg
rcl
sub
jecxz
div
aam
clc
int
sbb
js
and
inc
xchg
inc
add
mov
out
data16
imul
mov
mov
repnz
xor
sti
push
sti
nop
add
pop
mov
jecxz
jns
sbb
aam
imull
cwtl
lods
pop
popa
push
mov
cli
cmp
cmc
cmovae
jg
lret
inc
cmpsl
sbb
pop
test
or
in
dec
fwait
std
fidivrs
std
xor
movsl
sbb
rcrl
into
pop
sahf
cli
sbb
cmp
xor
xor
pop
insb
pop
dec
mov
mov
inc
or
ss
neg
mov
imul
jmp
jp
aam
mov
std
rorb
push
je
cmpsl
mov
js
sbb
jo
cmpsb
fwait
ljmp
push
out
loop
sbb
fmul
dec
mov
jg
insl
jne
je
mov
enter
pusha
ret
fcompl
push
xor
mov
sbb
jno
int
cmc
xor
xchg
add
scas
xchg
mov
in
pusha
mov
sub
enter
ficoms
push
or
fdiv
lods
push
xor
dec
fdivrp
arpl
inc
cwtl
jp
leave
or
jbe
ss
inc
aaa
mov
dec
and
dec
or
mov
daa
add
mov
out
in
or
aas
pop
mov
adc
mov
dec
push
xchg
jp
adc
sbb
loope
sarl
mov
sub
ret
jbe
xor
into
dec
sbb
incb
and
xchg
xchg
in
popa
test
jp
mov
sbb
cld
test
jl
fnstsw
pop
outsb
or
adcb
daa
pop
cmp
mov
das
shrl
mov
mov
jb
sbb
mov
mov
mov
or
push
loopne
imul
popf
js
shrb
jl
leave
push
lret
push
enter
lcall
add
sub
inc
xor
scas
sbb
orb
dec
aad
shr
outsb
into
fadds
pop
adc
add
inc
stos
outsl
jecxz
adc
shl
flds
jmp
xchg
adc
movsl
std
repnz
or
dec
or
shll
jmp
add
mov
sub
push
mov
insl
ret
int3
test
hlt
in
cld
pop
imul
xor
sbb
js
sbb
movlps
xchg
cli
movsl
jne
dec
clc
test
movsl
xchg
in
push
in
or
mov
repnz
ss
out
and
push
xor
repz
mov
aam
push
cmp
lcall
xorl
icebp
popf
pusha
movsb
sahf
cltd
push
sarl
lret
or
mov
inc
ds
lret
and
imul
xor
add
dec
jno
mov
enter
adc
xchg
in
push
loop
cmp
insl
cmp
call
inc
xchg
cmpsl
xchg
cli
iret
fildl
sti
dec
in
and
mov
lcall
mov
repz
mov
pusha
int3
push
ds
fnstenv
daa
js
test
sbbb
cmpsl
out
aam
jae
push
popa
add
and
mov
mov
aas
dec
lret
dec
add
mov
sbb
cmc
int
xor
xchg
inc
adc
fs
adc
cmp
pop
fidivrl
fstl
out
or
imul
popf
ret
js
flds
xchg
insb
rolb
cmp
ss
jg
mov
lahf
xchg
and
lret
xor
sbb
jb
sub
cs
sbb
xchg
mov
pop
mov
cltd
adc
es
hlt
inc
test
mov
lret
iret
insb
mov
jns
hlt
das
push
out
xchg
aas
add
in
sub
jno
adc
scas
fwait
or
ret
daa
mov
repnz
mov
sarl
or
ret
stc
addb
dec
xor
jecxz
push
loopne
xchg
shlb
xchg
mov
sbb
inc
pusha
ret
roll
dec
ror
adc
and
fistps
pop
sub
ficompl
jle
nop
addr16
push
mov
int
fwait
and
jp
xorl
outsl
mov
in
cmp
lret
aad
jp
mov
aas
rol
push
add
mov
mov
pop
std
adc
cmp
mov
inc
test
jl
movsl
cmp
dec
shll
iret
mov
dec
popa
jecxz
sbb
imul
clc
ds
xchg
mov
aaa
repz
pop
scas
dec
dec
inc
gs
arpl
mov
xlat
pop
pusha
and
mov
pop
outsl
push
add
cltd
ss
xchg
cmc
mov
in
pop
sbb
jnp
sti
jne
adc
call
aas
mov
inc
dec
push
xchg
inc
inc
fistpll
adc
dec
push
inc
pop
adc
sub
rolb
and
lds
push
dec
sahf
aad
pusha
jae
jnp
push
shlb
insb
loopne
int3
lds
addr16
cld
inc
mov
outsl
push
icebp
cmpsl
fadds
push
sar
pop
pushf
adc
adc
or
jg
cmpsb
sahf
sbb
dec
iret
pop
popf
nop
jge
scas
pop
add
addr16
and
adcb
sub
xchg
daa
jp
out
mov
testb
stos
cmp
pop
and
mov
xor
add
sbb
cli
sub
je
cld
rcrl
dec
movl
movsb
cs
and
mov
out
negb
or
test
push
push
mov
adc
mov
icebp
cltd
inc
xlat
dec
arpl
cwtl
xchg
out
and
cmc
mov
stos
jecxz
mov
and
nop
out
jne
popf
mov
jmp
pop
push
jns
popl
pop
sbb
mov
lock
sub
xor
mov
mov
xchg
pusha
jbe
iret
mov
mov
sbb
jl
push
pmovmskb
loope
jne
xchg
cmc
fmul
fiaddl
xchg
loop
leave
mov
stos
scas
push
outsl
xor
js
sub
cs
outsb
idivb
out
out
inc
inc
and
jnp
scas
pop
add
sarl
jp
rorl
adc
xor
rolb
mov
cld
and
xor
movsb
pop
lcall
ljmp
mov
sub
pop
popf
push
int
subl
cmp
pop
fstpt
mov
jno
ja
sbb
add
pop
mov
ss
je
outsb
mov
sbb
int3
mov
mov
pop
mov
loopne
jb
std
les
mov
fists
adc
xor
addl
scas
lock
pop
jmp
loopne
and
jecxz
jns
push
cmp
push
lret
cmpsl
mov
rcl
sbb
shrb
mov
popf
test
xchg
mov
push
push
jnp
stos
sub
jno
cld
sahf
fldcw
cmp
add
int
add
pop
aad
cmpsb
adc
jge
aam
lock
test
adc
lret
jno,pn
adc
jg
repz
frstor
outsb
xchg
mov
clc
jae
icebp
ljmp
loope
gs
inc
je
fcompl
mov
jg
push
push
mov
fadd
movsl
insl
imul
mov
js
imul
call
push
jae
ret
push
gs
iret
lcall
mov
nop
shll
rcll
lock
cmp
lods
sub
gs
jl
pop
sub
outsl
jb
cmc
inc
ljmp
cmpsb
xchg
add
mov
outsl
mov
jg
cmp
aad
mov
add
fistps
loop
cmpsb
cmp
out
xchg
cmpsb
daa
fmull
jp
mov
stc
nop
test
pop
cmp
hlt
cwtl
mov
subb
or
sub
insb
mov
out
stc
or
pop
jl
inc
bound
lcall
test
mov
paddq
roll
out
cli
aaa
shlb
jle
or
mov
or
cmp
or
cld
fwait
lret
clc
pop
in
mov
jns
inc
inc
xchg
mov
mov
add
mov
ljmp
mov
data16
cmp
call
xor
stos
sar
orl
push
inc
xchg
jne
lcall
test
mov
adc
jge
enter
mov
mov
pop
and
or
es
xchg
jbe
sub
dec
mov
jno
xchg
movsl
or
ficomps
pop
out
xchg
cmp
mov
push
insl
push
add
ret
into
push
aas
imul
enter
mov
push
sub
loopne
ss
xor
outsl
add
test
lock
call
mov
pop
cmp
mov
mov
roll
cmc
loop
push
sbb
popf
iret
sub
dec
into
scas
lods
jmp
mov
pop
pop
sbb
andb
movsl
push
pop
loopne
or
out
inc
lods
fiaddl
mov
out
mov
sub
stos
test
xchg
sbb
pop
adc
mov
sahf
sbb
or
sub
dec
ja
push
dec
xor
loope
movsb
mov
pop
push
cmp
xlat
mulb
int
je
push
xchg
cmp
or
sbb
jo
cmc
cmc
mov
mov
or
xchg
or
and
cli
loop
cli
push
lahf
mov
jmp
out
add
cmp
xchg
add
fsts
cs
arpl
jne
cmc
mov
or
jmp
div
pushf
sub
in
enter
add
aas
inc
addr16
mov
push
push
ja
push
stc
cmp
testl
lahf
xchg
andl
je
mov
xor
mov
xor
int
xor
mov
mov
dec
subb
jl
rcll
orl
lds
inc
les
fildll
out
pop
jp
iret
out
gs
into
out
jo
mov
fidivl
dec
iret
sub
stos
into
je
das
sbb
nop
pushf
and
jnp
xor
popf
sbb
sahf
jb
inc
lret
mov
jp
aad
jns
sbb
dec
jg
repz
adc
ret
xchg
xchg
and
movsb
inc
pop
jge
xchg
sahf
aas
sbb
outsl
in
popf
outsb
mov
pop
subps
add
inc
dec
in
movsl
sub
fiaddl
and
stc
pop
or
sti
and
xor
push
push
data16
loopne
stos
dec
jmp
mov
in
push
xchg
bndstx
fldl
jecxz
sub
adc
dec
cltd
pop
xchg
sbb
add
xor
lock
je
imul
mov
ja,pt
adc
out
xchg
js
iret
jmp
mov
inc
stos
mov
inc
shl
pop
inc
adc
cmp
and
push
jecxz
push
mov
push
lahf
fnstenv
test
leave
xchg
mov
movsb
sbb
jl
xchg
imul
add
les
lea
or
cmp
mov
gs
jo
and
in
xchg
call
push
leave
or
jl
push
mov
sti
popa
mov
stc
adcb
mov
adc
hlt
adc
xor
adc
pop
outsb
jl
lock
es
repz
lret
pop
aas
dec
lret
adc
test
fcomp
inc
insb
fidivrl
addr16
loopne
jno
je
aaa
nop
jne
or
fisttps
adc
loop
mov
push
mov
out
jo
and
mov
gs
sbb
mov
cmp
mov
and
outsl
adc
mov
pop
or
outsl
aad
or
sub
mov
sbb
pop
mov
cmc
repz
inc
jg
shrb
and
mov
ret
adc
imul
dec
add
adcb
adc
std
mov
xchg
pop
enter
cmc
adc
in
sbb
inc
lahf
pop
rolb
and
sbb
stc
pop
fmul
xchg
repz
sub
jmp
jmp
je
shlb
ficomps
or
jne
ja
imul
push
xchg
cli
mov
imul
mov
popf
aas
cltd
pop
addl
sub
ja
cwtl
xor
arpl
mov
clc
mov
and
or
jecxz
cli
fs
in
mov
lock
aaa
js
xchg
leave
xor
aaa
movsl
mov
jmp
aas
jle,pn
push
sbb
imul
push
mov
mov
mov
ds
in
push
jnp
popa
adc
sub
jne
and
or
dec
dec
mov
pop
cltd
ret
push
mov
rcrl
lock
sbb
out
fdivs
enter
pop
add
mov
cmp
dec
add
push
jg
ss
aad
mov
enter
adc
lret
dec
lea
cmp
sub
das
inc
mov
in
push
push
jbe
mov
xchg
aas
xchg
jnp
lods
popa
cs
inc
add
fdivp
divb
lods
test
push
pop
lcall
aas
or
and
ja
jno
adc
mov
and
mov
add
fidivrl
jle
and
loopne
sub
sub
and
mov
data16
add
lods
add
mov
imul
jo
or
jns
lret
push
es
dec
in
cmpsl
mov
cmp
gs
inc
mov
and
test
add
std
test
aas
jno
imul
sbb
fildll
mov
imul
dec
daa
cmpsl
adc
inc
cli
pop
or
push
and
loop
iret
out
insl
int3
aaa
lcall
cmp
mov
lcall
int3
push
adc
sbb
jg
xor
fs
cwtl
cmp
sub
sub
pop
outsb
jae
mov
or
jp
data16
add
lods
cmp
loope
xor
mov
popa
rclb
jge
loop
in
cmc
shl
xor
push
sbb
test
je
mov
aas
gs
jnp
cmp
jecxz
or
repnz
sbb
cwtl
xor
push
add
mov
movsb
mov
aas
fstpl
mov
mov
popf
jecxz
aam
cmp
test
fidivs
xchg
mov
loope
into
and
adc
xor
scas
inc
sub
sbbb
sti
mov
mov
mov
xlat
mov
mov
fnstenv
xchg
mov
les
shll
lock
pushf
jne
mov
scas
rcrb
push
cmp
lods
cmc
imul
xor
gs
repz
add
mov
push
xlat
scas
in
cmpsl
cmp
lcall
das
es
push
fisttpll
js
lret
mov
loope
adc
adc
ret
repnz
insl
jl
jae
mov
adc
cmp
mov
stos
movsl
sti
leave
xor
inc
pop
fidivrs
and
iret
ja
push
jbe
je
js
jle
aaa
mov
push
cmp
stos
adc
jne
or
ss
jle
push
lock
out
fnstsw
loop
jge
js
das
decl
dec
push
mov
hlt
imul
data16
pop
jl
pop
jb
and
jl
or
dec
sub
lea
shll
xchg
aad
mov
pop
sarl
negl
aas
push
mov
inc
ds
lea
or
mov
cmp
jecxz
cmp
xchg
fs
sub
mov
data16
pop
pop
lahf
jae
cmp
fs
jmp
icebp
orl
mov
loope
xlat
add
adc
jge
rcrl
xor
mov
outsb
xchg
pop
int3
repz
jns
sarb
jle
clc
jecxz
jge
cmpsl
outsl
adc
ss
in
sub
mov
add
iret
daa
cwtl
imul
or
pop
push
jne
sub
mov
mov
xchg
sbb
sar
push
hlt
inc
mov
cmp
pop
push
xor
or
adc
leave
mov
fucomi
fadds
jae
mov
gs
push
mov
or
hlt
rorb
repz
mov
sub
gs
add
popa
and
inc
mov
push
fcomps
dec
cmp
fisttps
cli
sti
xchg
adc
inc
in
mov
mov
xor
sub
sub
repnz
mov
sub
es
inc
inc
adc
lock
add
in
sbb
popa
push
test
das
jbe
xchg
fcomp
cmc
inc
xchg
jecxz
stos
rorb
xor
lods
xchg
inc
fdivs
fdivrl
aam
jecxz
cli
xchg
cmpsb
cltd
ja
push
in
jl
inc
movsl
jb
lret
xlat
xlat
adc
sbb
mov
xchg
clc
jge
jno
push
imul
push
and
popl
pusha
jge
or
aad
notb
int
sub
sbb
insl
sub
mov
xchg
mov
lret
ret
repnz
cmp
jbe
sbb
insl
xchg
cli
je
arpl
pushf
mov
push
das
out
mov
pop
lods
sbb
pop
mov
cld
adc
sub
jmp
push
mov
add
sub
scas
mov
gs
lods
xor
rcrl
cmpsl
pop
iret
in
lea
inc
dec
cs
mov
lods
pop
movsb
sub
out
lods
testl
cmp
in
test
xlat
xchg
loope
and
fldcw
call
nop
mov
ss
jg
outsl
movsb
add
jge,pt
xor
mov
mov
lock
pop
jb
and
cmp
icebp
push
mov
add
xchg
sub
call
or
das
pop
lret
and
mov
pop
add
dec
mov
je
out
pavgw
dec
cltd
xor
xchg
mov
fstpl
mov
push
pop
test
push
insl
fldcw
xlat
in
dec
inc
jae
push
fwait
inc
push
cmp
jo
stos
cld
jb
insl
stc
or
xchg
insl
shll
add
cli
push
das
and
jge
fsts
dec
jb
lods
jne
mov
push
dec
sbb
nop
rcrb
cmpsl
jns
loopne
push
mov
mov
imul
or
into
mov
ret
mov
push
out
popf
test
cwtl
add
es
je
test
push
pushf
or
or
aad
xchg
or
in
push
push
scas
test
or
cmp
push
and
iret
in
push
decb
mov
sub
pop
loopne
sub
fstpt
arpl
sub
xlat
jnp
push
mov
adc
jge
jne
cs
test
mov
push
xchg
xor
fidivl
xchg
cmp
loop
outsl
inc
add
shrl
fldt
sbbl
dec
cmp
or
mov
add
cmpsb
mov
sbb
ljmp
ljmp
data16
mov
addr16
jo
enter
xorl
loope
mov
xor
faddl
leave
cmp
test
xchg
ja
test
inc
mov
sti
xor
mov
or
mov
adc
mov
call
rcll
loop
xlat
stos
mov
mov
dec
xchg
sahf
push
push
andl
lods
daa
mov
repnz
inc
jle
rcrl
rcrl
sahf
test
sub
pop
xor
cmc
flds
in
scas
stos
outsb
movsb
ret
movsb
sbb
and
movsl
std
ficoms
add
xchg
out
pop
ds
out
sub
mov
insl
cmp
rorl
mov
lods
nop
cmp
cmpsl
shr
test
ds
bound
and
xor
jne
cmp
hlt
sbb
jo
in
in
push
and
mov
xor
sbbb
in
xchg
int3
dec
xchg
icebp
ficomps
xchg
int
je
xchg
xor
pop
cmpsb
cltd
add
std
push
shlb
adc
xor
gs
iret
clc
push
lea
orb
gs
xor
xor
mov
test
push
push
and
jo
jne,pt
jge
ljmp
out
push
xlat
mov
test
insb
andb
xchg
jne
inc
pop
stos
and
shrl
fcompl
in
push
sti
cmc
jp
pop
rcll
jecxz
call
mov
shl
pop
in
push
mov
cmpsl
sub
add
lret
mov
test
xor
scas
loope
gs
ja
push
ret
push
ss
add
inc
lret
and
add
aaa
push
xor
pop
mov
mov
cmpsb
fstps
sarl
ss
jne
in
rolb
inc
jne
jg
xchg
fsubr
jge
mov
dec
jbe
cmpsb
jnp
daa
dec
add
ja
adc
jecxz
mov
or
pop
adc
sub
test
cmpsl
lahf
push
imul
jp
pop
imul
push
jecxz
lahf
push
test
sbb
jl
sub
outsb
test
add
pop
sbb
jl
js
xchg
sbb
jbe
ja
jo
push
sub
mov
or
sub
enter
pop
push
lea
dec
and
inc
or
mov
rorb
je
cmpb
mov
xor
lcall
push
pop
lods
sbb
aad
pop
into
std
sbb
inc
adcb
xor
insb
outsb
xchg
mov
lret
push
outsl
dec
out
rclb
outsb
pop
add
cmp
xor
addr16
cmp
pop
outsb
mov
cmp
and
sub
shl
xchg
daa
dec
add
clc
xchg
sbb
push
mov
dec
fisubs
or
jnp
mov
jle
xor
cmp
sti
fimull
adc
jnp
xor
outsb
jl
jo
rorl
test
enter
jnp
add
push
mov
cmp
leave
sbb
and
int
mov
shrb
adc
rcrl
push
push
shlb
sbb
jp
popa
scas
dec
aas
jecxz
adc
pop
jecxz
push
push
xabort
xor
pop
negb
pop
sbb
loopne
mov
push
ja,pn
enter
inc
adc
xor
data16
nop
mov
adc
popa
push
pop
add
fimuls
ljmp
cli
movsl
loopne
mov
mov
out
inc
loop
mov
cmpsl
or
dec
adc
mov
or
xchg
xchg
stos
out
or
pop
jle
mov
and
adc
mov
orb
sub
ja
mov
xlat
in
iret
add
sbb
adc
popa
fwait
xchg
jb
xor
pop
aas
sbb
push
xlat
mov
rcll
mov
pop
and
stos
popa
dec
mov
inc
aad
jbe
mov
pop
xor
jns
pop
or
dec
sub
mov
fcomps
fidivrs
aad
sbb
add
sbb
in
ret
xor
pushf
divb
in
and
out
std
lock
test
imul
sbb
je
cmp
lock
jmp
aas
rcrl
mov
add
push
mov
xor
pop
fisubl
mov
jb
jb
and
out
sub
pop
lcall
hlt
inc
add
pop
jb
scas
mov
test
dec
jl
push
inc
nop
pusha
cs
into
lock
ds
insl
mov
bound
mov
jle
shrb
lret
enter
mov
jmp
pop
jg
jnp
cltd
cltd
popa
jb
sahf
add
jmp
jge
push
pop
in
and
sbb
xchg
movsb
and
movsb
xor
testb
inc
testl
js
jmp
xchg
cmp
push
jl
inc
jb
ds
mov
mov
jle
push
fstsw
and
inc
into
push
adc
gs
jae
leave
repz
dec
ret
repz
cmpsb
addr16
fbld
cmp
enter
jo
loopne
lcall
insl
ss
pop
inc
out
fmul
mov
xchg
pop
jnp
pop
fs
rcr
ja
sub
xchg
push
push
cmp
hlt
leave
and
sub
pop
mov
mov
mov
mov
das
repnz
jp
add
inc
xchg
inc
push
sbb
in
fildl
dec
sahf
mov
sti
jle
ja
cwtl
jge
icebp
and
mov
xchg
push
imul
pop
xchg
mov
iret
sbb
int
ss
xor
into
cmp
cld
lret
xchg
cmp
adc
mov
scas
fcmovu
jbe
mov
or
jnp
call
pop
mov
mov
xchg
push
add
push
mov
dec
int3
cwtl
inc
xchg
stos
add
pop
rcpps
cmpsl
test
add
notb
jbe
dec
pop
fwait
adc
and
sbb
insl
adc
inc
scas
push
sarl
jmp
je
or
lock
xchg
xchg
ret
jge
xchg
push
and
test
or
push
cmp
and
and
ss
test
es
adc
xchg
lcall
mov
xor
cmp
and
push
stos
insl
add
cmp
lcall
pop
sbb
cmp
push
clc
push
inc
mov
aad
mov
notl
vcvtpd2dqy
insb
clc
or
and
mov
xor
cmp
pop
adc
movsb
rclb
scas
push
jbe
lock
aad
dec
mov
ja
insl
test
mov
scas
push
add
sub
adc
divb
les
or
and
out
cmc
shl
mov
mov
cmp
cmpsl
push
or
pop
or
cmp
inc
push
aaa
sub
inc
inc
fcomi
fstpt
pop
mov
mov
in
sbb
pop
jl
jmp
cwtl
inc
inc
cwtl
lret
jl
lods
test
fdivrs
mov
inc
xchg
sbb
sbb
dec
out
pop
sbb
dec
mov
arpl
sbb
xlat
sbb
lahf
repz
jmp
pop
or
addr16
in
fdivl
adc
sub
addr16
cli
mov
cmp
jns
js
fdiv
cmp
push
popf
data16
dec
jb
fstps
push
orl
pop
and
mov
lret
sbb
mov
cs
lds
lods
pop
mov
std
cmp
push
dec
or
jg
insl
push
xor
mov
xor
jge
movsl
xor
pop
ret
push
xchg
mov
sbb
fists
stos
xlat
push
pop
fmuls
lahf
jge
shll
jne
roll
icebp
pop
cs
jl
clc
mov
mov
or
cmpsl
sub
cltd
adc
shll
scas
push
stos
lahf
fdivrl
xor
leave
out
int3
sbb
pop
cmpsb
test
cmp
pop
push
mov
or
adc
push
lret
lret
je
call
sub
lea
add
add
mov
mov
mov
fsubrl
pop
loope
cmp
jo
rol
dec
imull
int
out
mov
xchg
or
dec
pop
fsubr
mov
fldenv
push
mov
out
jmp
test
mov
or
adc
mov
fcomi
push
insl
push
add
jmp
mov
push
dec
mov
add
jnp
fcmovnb
fnstsw
js
add
push
nop
jae
mov
mov
xchg
dec
je
pop
sbb
daa
nop
out
add
das
fisttpl
cmpsb
inc
xor
xor
or
rcl
mov
aam
jg
daa
add
frstor
outsb
mov
jg
movsb
xor
mov
add
or
int3
lods
jmp
test
out
xor
addr16
jae
fwait
jae
out
in
cmp
cwtl
lret
pop
adc
mov
dec
mov
or
adc
dec
frstor
mov
fisttpll
cltd
xor
jmp
sarl
sub
imul
inc
mov
nop
subl
and
xchg
imul
lret
insl
shr
aam
cmp
in
lods
mov
sbb
mov
lret
ror
push
test
or
shr
jae
rclb
sbb
or
inc
cs
das
addr16
add
cmp
mov
decb
lea
and
pop
lods
rolb
jne
out
mov
or
ret
bound
or
jb
xchg
aad
lret
push
jbe
in
xor
adc
into
pop
sbb
dec
lods
push
add
adc
in
mov
adc
fwait
out
rcrl
inc
adc
sti
mov
loope
mov
push
sbb
cmp
lret
outsl
cmpb
push
and
arpl
xchg
lock
lret
dec
test
pop
pop
std
aam
mov
rcrb
mov
ja
mov
push
dec
daa
test
clc
aad
add
aad
inc
or
add
jae
ror
pop
mov
in
push
ljmp
outsb
lret
push
xor
xchg
sbb
jnp
test
adc
fldcw
mov
xlat
add
out
out
jnp
add
dec
test
insb
outsb
daa
scas
push
inc
int3
lods
mov
pop
cmp
inc
sub
xor
jg
jno
jno
pop
xchg
push
shl
std
enter
cld
xor
cmp
pop
inc
xchg
popf
dec
shlb
sub
xor
xchg
xchg
sti
sub
push
dec
mov
shlb
mov
xchg
out
sbb
ror
adc
and
ja
popf
and
sub
mov
and
mov
fstps
lahf
jp
xor
cmpsl
aaa
jl
gs
adc
out
cmp
roll
jge
mov
imul
ds
icebp
int3
fisubs
mov
adc
sub
shrb
test
or
xlat
mov
sbb
push
and
pop
xchg
or
cmpsb
adc
add
arpl
stos
adc
push
ffreep
insl
stos
and
xor
cwtl
adc
loop
lret
xchg
push
add
xchg
add
loopne
loopne
push
cmp
fcmovbe
mov
xchg
xchg
loop
gs
cmc
dec
jnp
jo
cwtl
or
adc
jne
push
add
pop
pop
xchg
lock
jne
mov
jns
insb
fdiv
xchg
dec
mov
mov
pop
xchg
jns
inc
outsb
call
aam
shrl
and
xchg
pop
mov
mov
aas
pop
ljmp
cs
fld
stos
inc
pop
imul
inc
enter
vcvtdq2pd
lods
sub
and
testw
dec
add
cmpsb
pop
insb
adc
mov
out
jbe
ljmp
ret
je
mov
xor
shr
movsb
xchg
out
les
das
sti
jae
mov
lahf
stc
loopne
out
div
subl
jbe
mov
inc
pop
mov
dec
sub
mov
ret
mov
sub
sbb
lcall
dec
cli
sar
roll
mov
mov
mov
mov
lea
aad
add
cltd
push
mov
das
pop
or
cmc
xorps
add
add
jp
and
bnd
test
test
xchg
mov
mov
std
outsl
notb
test
jno
jnp
test
sub
sbb
out
pop
inc
icebp
add
xor
or
dec
sahf
cmp
lock
aam
leave
inc
test
aad
data16
dec
lcall
dec
fwait
mov
pop
pop
subl
das
cmp
sub
addr16
mov
out
cmp
out
scas
push
jo
mov
scas
hlt
inc
push
test
stc
in
imulb
mov
mov
es
push
pushf
push
push
pop
das
ret
es
pop
pop
jo
sub
add
fwait
mov
push
fidivrs
adc
mov
sub
dec
hlt
fsubrs
mov
scas
imul
ret
cmp
add
sbb
xchg
pop
std
jbe
xchg
pop
adc
out
jge
pusha
mov
push
mov
mov
xchg
xchg
ror
lahf
sub
sub
scas
lret
jmp
dec
int
int3
inc
cmp
sbb
data16
fnclex
push
xor
mov
sbb
fwait
sti
mov
xchg
pop
mov
jns
mov
or
add
push
mov
mov
mov
stc
leave
or
lods
mov
cld
or
inc
je
mov
mov
mov
lea
and
pop
ja
inc
and
pusha
lcall
sti
scas
das
push
sbb
sahf
jb
shlb
test
ja
lret
cmc
jle
ret
loope
cmp
adc
rcrl
add
imul
push
jo
push
sbb
rcrl
sti
xlat
pushf
sbb
xchg
cmp
fnstenv
fsubs
sarl
cs
xor
and
test
mov
dec
cmp
lcall
loopne
mov
jnp
sbb
push
xor
pop
pop
mov
test
out
mov
inc
pop
or
cmpsl
mov
push
les
lds
add
or
pop
test
lock
pusha
adc
xchg
jbe
mov
daa
push
jp
test
jns
dec
arpl
aam
mov
shlb
add
test
or
mov
mov
lods
clc
cld
iret
xchg
rcll
popa
adc
pop
int3
pop
sub
pop
jno
mov
mov
push
mov
cmp
cmp
jmp
rorl
xor
or
sbbb
cltd
mov
ss
fldt
sub
lret
je
adc
adc
mov
daa
mov
pushf
incb
pusha
sahf
ljmp
insb
sub
fsubl
sbb
movsl
add
aad
ds
sbb
dec
cmp
into
add
and
lock
notl
cmp
cmp
dec
pop
xchg
lock
ljmp
pop
inc
in
adc
loop
cld
xchg
js
scas
cmp
subl
sbb
mov
addr16
js
cmpsl
or
pavgb
pop
pop
cmpl
xchg
xchg
xchg
lock
jb
out
rcrb
add
shll
adc
dec
pop
mov
andb
push
xchg
scas
push
xchg
imul
push
insb
push
pop
or
fldl
dec
adc
mov
xchg
dec
rclb
fwait
divb
sub
in
es
adc
daa
cltd
fwait
inc
xor
call
fsubrl
cmp
push
jmp
push
push
cwtl
or
sub
subb
xchg
inc
scas
pop
icebp
cld
adc
mov
pop
dec
add
push
xchg
cmp
push
lret
std
fisubs
sbb
mov
inc
push
mov
or
jge
pop
dec
aam
cmp
cmc
sbb
adc
int
mov
stos
cmc
insb
inc
das
mov
popf
enter
adc
imul
xor
jl
js
cmpsl
neg
mov
sub
sahf
mov
in
cmpsl
adc
divl
bt
mov
testl
pop
dec
sub
mov
in
add
jns
pushf
dec
jo
xchg
or
mov
xchg
shrl
fsubr
mov
data16
in
sahf
jae
int3
lret
clc
lcall
sti
fldl
lods
outsb
inc
imul
sbbb
fidivl
xchg
clc
cld
fs
movsl
cmpsb
in
loope
sbb
mov
cmp
sub
sbb
bound
lea
push
and
xchg
cmpl
inc
aas
addr16
dec
mov
push
pusha
int
lcall
inc
xor
pop
push
sti
or
imul
xchg
mov
rol
cwtl
fdivs
test
mov
or
adc
jo
cmp
js
out
into
or
jae
ret
fmull
push
loope
pop
lods
push
xchg
jb
xchg
add
cmp
mov
rcll
jle
lea
es
outsb
adc
mov
push
inc
xchg
mov
mov
cld
push
fcompl
iret
xchg
push
inc
and
test
mov
jg
popf
clc
push
mov
sarb
and
cld
sub
imul
fldcw
push
fdivrs
rcrl
cmp
sahf
cmp
and
sub
xor
sub
sub
aam
pop
add
arpl
sub
fstps
rolb
mov
add
sub
sub
and
mov
push
and
mov
ret
ljmp
in
and
shr
aaa
pop
fwait
dec
xchg
rcl
cmpsb
lock
lods
ja
lock
inc
adcb
int3
gs
mov
cld
iret
hlt
dec
dec
dec
fld
imul
aas
push
out
jno
lods
and
push
ljmp
ret
pop
popf
cmpsl
or
shr
and
inc
mov
aam
out
cld
mov
dec
faddl
ud2
mov
pop
lret
je
mov
out
lcall
inc
je
mov
outsl
movsl
scas
pop
xor
sarl
adc
scas
jne
insl
imul
or
adc
mov
in
lcall
xlat
fstp
lret
pop
call
out
pop
jne
or
ror
mov
in
scas
fs
les
ss
mov
aas
shll
push
lahf
xlat
jg
fidivl
mov
dec
adc
fucompp
xor
stos
js
mov
fwait
mov
push
or
movsl
fdiv
clc
mov
cmpsl
push
ljmp
daa
int
scas
mov
imul
inc
jp
movsb
pop
xchg
push
in
jns
in
push
lcall
movsl
add
sarl
pop
jle
jns
inc
xor
xchg
push
add
jge
xor
cltd
xchg
xor
fistpll
mov
jb
mov
popa
sbb
dec
xchg
movsl
shl
cmp
jbe
dec
scas
lcall
hlt
jnp
scas
int3
sbb
pop
inc
dec
add
aaa
aad
les
and
mov
imul
loop
push
lret
jp
mov
dec
sub
sub
cmp
popl
and
out
mov
mov
sub
sub
jmp
loopne
sarl
xchg
stos
and
sahf
test
rcr
sahf
pop
jnp
fcomi
xchg
mov
jmp
mov
add
and
xor
in
mov
add
out
add
xchg
cmpsl
pop
enter
addr16
sahf
jo
sbb
hlt
sar
jne
adc
movsl
outsl
sbb
test
fistpl
bound
in
cwtl
orl
mov
pop
xchg
pop
xchg
mov
xlat
int
dec
ret
lods
jle
mov
pop
aas
xchg
or
lahf
dec
lods
mov
add
mov
push
test
and
repnz
scas
aas
subb
sbb
and
sbbb
xchg
sbb
jnp
popf
pop
adc
push
jae
cltd
lods
xor
stos
ljmp
jmp
adcl
xchg
lods
into
stos
jae
aaa
and
aam
fsubrp
jns
pop
cmp
bound
cmpsb
mov
push
mov
pop
fwait
jl
dec
mov
sbb
dec
aaa
push
jbe
mov
out
sarb
or
outsb
sahf
mov
lods
mov
std
and
leave
push
push
sbb
adc
repnz
mov
push
imul
inc
das
out
ret
cmp
or
arpl
outsb
daa
mov
push
push
xchg
insl
in
jmp
sbb
and
rcll
mov
cltd
rolb
adc
adc
inc
in
data16
xor
fistpl
inc
xor
lods
ja
in
pop
push
int
or
adc
dec
xchg
repnz
loop
in
imul
xchg
mov
icebp
in
mov
jp
push
lods
cmp
adc
cmp
cmpsl
or
xchg
or
mov
mov
sbb
ret
lods
sbb
jns
xchg
cmpsl
int3
jle
addr16
iret
mov
pop
mov
mov
iret
jmp
cmp
cmpsb
aad
fisubl
fs
lds
out
sub
pop
rorb
mov
loope
or
into
add
jnp
xor
icebp
iret
pop
jb
out
in
adc
test
sbb
addr16
mov
ja
push
sbb
cmpsl
loope
jp
les
lods
jbe
xor
push
das
lods
sbb
sub
push
cmp
insb
mov
mov
push
or
mov
imul
xlat
sub
and
jg
sarl
add
loope
aam
or
add
add
mov
jmp
aas
mov
lcall
mov
mov
scas
sti
or
test
shl
jno
inc
add
fs
push
jb
insl
push
lret
inc
movsb
or
dec
and
xor
xchg
xchg
jp
cpuid
mov
or
aam
scas
pop
fsubr
jecxz
je
adc
fcomp
or
mov
out
push
scas
bound
xchg
stos
adcb
aaa
dec
sub
cmp
pusha
or
fsubrs
and
ret
aas
and
sbb
jns
xor
loope
mov
std
pop
or
or
loope
iret
mov
mov
pop
xchg
fs
xor
xlat
fcos
or
fcoms
and
test
popf
mov
pop
out
je
into
je
arpl
out
aam
mov
jg
mov
aas
jmp
cmp
je
and
xchg
and
arpl
rcll
sub
sub
sub
stos
in
ret
mov
push
xchg
mov
dec
es
cmpsl
dec
test
inc
into
imul
outsl
shll
push
xor
sub
xchg
scas
dec
popf
mov
and
dec
loopne
mov
popf
cmp
in
ja
fsts
shlb
sub
and
fnsave
add
and
ljmp
and
aad
stos
sbbb
jae
sysexit
les
inc
xor
cmc
std
mov
mov
or
xor
inc
dec
cld
cld
push
testl
les
jns
jle
push
outsb
mov
xchg
add
imul
insb
xlat
sahf
cld
dec
sub
pop
mov
into
mov
sub
inc
jnp
sub
jne
dec
mov
hlt
mov
sub
xchg
movsb
in
int3
pusha
outsl
cmp
cmp
inc
hlt
cld
mov
test
test
out
test
pushf
sbb
icebp
mov
jne
repnz
jecxz
out
add
mov
andb
cwtl
jbe
in
fstps
lcall
or
xchg
andps
andb
imul
sub
adc
pop
imul
inc
jl
stos
imull
mov
popf
pushf
jnp
outsb
cld
dec
fisubs
push
ss
ja
and
cmp
test
sub
sub
inc
mov
es
or
push
inc
push
sub
and
push
sub
stos
sub
xchg
cmp
mov
push
jne
dec
int3
in
jmp
mov
cmp
lret
inc
fcmovb
push
push
mov
scas
sub
xlat
and
movsl
pop
sbb
out
pusha
mov
adc
rolb
xor
or
aad
mov
sub
push
lcall
ss
mov
push
pop
call
mov
add
fwait
stos
ja
jle
adc
sbbb
cs
test
mov
test
pop
inc
lock
fcoms
sbbb
xchg
mov
in
das
mov
lea
or
mov
mov
pop
mov
leave
cmp
inc
push
sbb
mov
inc
sahf
fimuls
jo
lea
push
sbb
cmp
xorb
scas
fldenv
lods
cmp
fiaddl
shrl
aaa
or
loope
dec
lea
xchg
mov
mov
das
add
pop
dec
mov
dec
mov
xchg
sti
add
pop
mov
outsl
mov
iret
mov
ljmp
sbb
push
mov
jmp
sbb
adc
ss
sbb
inc
btl
adc
sbb
mov
dec
mov
push
cmp
stos
ljmp
repz
loopne
lret
jns
pushf
shll
xlat
outsl
loopne
cmp
xor
inc
shlb
mov
sahf
xchg
adc
aam
ret
ja
xor
inc
fdecstp
aad
stc
push
sub
xchg
cltd
inc
xchg
daa
repz
pop
jl
push
push
addb
xchg
adc
shl
mov
jae
adc
int
adc
sub
iret
aad
cs
xchg
cmp
lret
les
outsl
xor
xchg
sbb
movsb
lret
inc
int3
out
dec
in
lret
bound
pop
stos
arpl
test
pushf
jnp
mov
mov
shlb
pop
or
lods
cld
mov
xchg
clc
jge
fcompl
add
and
jns
adc
ret
std
push
gs
popa
lret
bound
xor
push
sub
push
scas
lods
jns
call
sbb
out
jae
jmp
or
subl
push
xlat
and
lds
fstps
lods
xor
ret
push
imul
cmp
flds
push
ljmp
das
or
mov
mul
mov
shrb
shl
mov
mov
lock
gs
jmp
lret
xchg
adc
push
mov
mov
jl
mov
push
lret
hlt
sahf
pop
add
sti
add
roll
cmp
add
push
mov
cltd
or
cmp
dec
cmpsb
xor
in
sub
mov
ret
aas
xchg
aas
mov
push
into
fwait
xor
cmpsb
ds
icebp
sub
mov
mov
imulb
mov
iret
out
adc
or
mov
xor
mov
lahf
std
imul
or
pop
mov
mov
sub
jg
mov
call
adc
push
xor
lret
dec
pop
cmp
les
push
mov
mov
push
push
fwait
cmp
dec
movsb
aad
adcl
mov
add
cld
jl
jmp
xor
movsl
aam
pop
cmpsl
sbb
dec
int3
leave
ret
sub
shlb
lahf
test
daa
divps
xchg
mov
movsb
in
add
xchg
test
in
stc
mov
dec
push
push
data16
movsl
xchg
mov
cmc
dec
inc
or
mov
cld
mov
imul
mov
daa
or
and
push
movsb
pop
inc
mov
orl
nop
ja
inc
test
or
xchg
and
inc
push
pop
push
movsb
push
pop
cmp
aaa
ljmp
daa
adc
xchg
in
push
frstor
inc
adc
mov
das
mov
xchg
jg
jmp
cld
and
mov
add
lods
mov
xorb
adc
hlt
cld
add
adc
mov
daa
stc
inc
scas
leave
out
lahf
rcrb
inc
jne
in
jle
stos
add
lock
scas
dec
gs
arpl
in
xor
paddb
out
adc
cmpsb
insb
sbb
lods
pop
cltd
pop
and
iret
push
das
sub
sbb
lock
mov
fcoml
mov
cs
int
cli
gs
test
pop
js
enter
mov
jo
jae
dec
jbe
repz
cmp
and
mov
fdivl
mov
insl
jbe
push
loope
inc
xchg
mov
jo
pop
xor
pop
pop
fstpl
or
push
mov
pop
mov
ret
push
cmp
mov
cmp
test
xchg
mov
lds
sub
cmp
aam
or
and
lahf
pop
out
outsl
subl
test
lods
test
inc
jl
stos
dec
in
pushf
cmp
jmp
mov
mov
cmpsb
repz
pop
cmc
inc
jp
daa
stc
xchg
mov
icebp
testl
push
daa
xchg
sub
add
add
xchg
fiadds
pop
xor
out
out
loope
push
cmpsl
mov
mov
scas
ret
mov
adc
cmp
cmp
add
outsl
scas
jne
lcall
clc
or
test
add
dec
dec
jmp
or
into
xchg
inc
add
mov
aas
mov
nop
aaa
subl
sbb
orb
sbb
jp
inc
sbb
sbb
push
inc
inc
fstpt
test
jl
cmpsb
into
call
js
lcall
jg
xor
repz
icebp
xchg
mov
lcall
fists
rclb
inc
xor
push
pop
cmpsl
vcmpss
jle
dec
or
push
int
ja
mov
aad
sbb
repz
mov
aaa
adc
pushf
out
les
push
inc
cwtl
inc
loop
dec
aas
add
sub
sbbb
xor
scas
cld
jnp
xchg
jecxz
push
cli
std
lahf
ret
les
stos
out
inc
frstor
das
xchg
add
fwait
mov
aaa
pop
sbb
xor
ret
mov
inc
dec
insb
sahf
mov
inc
jl
xor
push
ficoml
mov
iret
ret
lcall
add
iret
test
roll
hlt
dec
movl
in
xchg
stc
mov
cs
sub
add
movsl
lahf
pushf
add
jecxz
inc
or
imulb
shlb
jns
add
cwtl
shr
xor
jb
mov
movsl
es
movsb
into
add
lcall
out
outsl
mov
addr16
ss
or
push
push
pusha
ja
mov
or
aaa
xchg
in
cmp
fs
gs
and
in
mov
adc
call
lods
rorb
sub
decl
cmp
pop
nop
aaa
add
push
sti
push
cmpsl
jle
mov
jg
sbb
xchg
push
mov
into
inc
cmp
test
dec
out
test
jbe
shrb
xchg
dec
adc
inc
lret
xchg
sub
cmp
sub
fmuls
xchg
sub
mov
sub
xchg
in
or
mov
sbbb
sahf
repz
fwait
sub
lcall
mov
lock
in
or
pop
lahf
cmp
adc
or
push
test
enter
mov
mov
push
mov
pop
jg
stos
rorb
popf
and
push
cmpb
push
pusha
xchg
mulb
push
xlat
mov
add
xchg
into
push
nop
cmp
test
lea
push
dec
je
push
jle
adc
insl
cmp
push
jne
or
push
and
and
cmpsb
pop
repz
sti
cwtl
js
pusha
pusha
xorb
inc
popf
mov
js
xchg
or
int
lahf
jns
xor
jno
jg
xlat
and
in
cmovs
mov
mov
insb
out
pop
dec
cmp
rep
pop
sub
and
xchg
adc
and
inc
push
mov
std
arpl
std
dec
je
aaa
sub
and
out
bound
in
sbb
push
jmp
shlb
mov
and
mov
xlat
imul
sbb
cmp
push
mov
lahf
inc
sbb
lahf
xlat
fdivs
cmc
fistl
test
aas
shl
aam
leave
adc
js
jmp
insl
dec
sub
and
and
aam
popf
and
xchg
inc
lds
stc
ret
jno
fdivs
sub
dec
scas
xor
daa
xor
fidivl
cs
push
shr
int
mov
outsl
push
dec
shl
sbb
sti
sbb
lcall
mov
push
sub
leave
add
out
mov
mov
ss
pop
rcrb
xor
sub
mov
jl
add
xchg
repnz
pop
dec
insl
xor
shlb
inc
xchg
aam
es
sbb
jge
loopne
xchg
insl
sbb
popa
cmovbe
mov
idivl
pop
pop
lret
js
and
movsb
and
int3
pushl
xchg
mov
test
and
push
xchg
lds
mov
sbb
cmp
push
dec
lret
stc
push
cmc
pushf
mov
or
sar
add
popf
xor
mov
and
daa
xchg
mov
enter
arpl
lock
sbb
rcr
js
aaa
inc
rorb
jae
or
jle
add
and
fstl
jge
inc
xchg
out
push
push
ja
enter
sbb
xor
xchg
add
xchg
stos
subps
jns
xor
xlat
enter
xorb
lahf
int3
jle
pop
xorb
pop
ds
cwtl
out
pusha
nop
stc
ret
xchg
in
xor
scas
pop
imull
sbb
test
jbe
in
xor
push
pop
iret
add
pop
and
sbb
xchg
addr16
adc
mov
sub
mov
mov
add
and
je
sti
add
mov
add
mov
arpl
in
mov
popf
mov
push
pop
fistpll
lcall
cmp
sbb
clc
inc
inc
imul
mov
int3
fcompl
in
xchg
mov
out
xor
lret
sbb
mov
push
aaa
mov
lcall
shll
sbb
mov
inc
jecxz
ja
or
orl
pop
push
into
outsl
mov
xchg
repnz
add
mov
movsl
and
jnp
jmp
mov
movsl
add
fwait
rorw
jmp
mov
mov
lcall
and
hlt
jmp
rclb
loopne
or
mov
es
pushf
mov
imul
les
por
ja
adc
cwtl
mov
shl
mov
pop
xchg
xchg
shlb
in
loope
es
xchg
fsubs
dec
sub
test
std
or
scas
sub
pop
repz
add
mov
mov
jge
xorb
ljmp
call
adc
mov
les
mov
and
outsl
push
jecxz
pop
imul
arpl
and
inc
in
sub
cmc
add
sub
sti
adc
fst
stos
stos
roll
mov
xchg
adc
stos
pop
loop
mov
ss
mov
insb
stos
enter
sub
xor
stos
mov
or
lods
or
and
xlat
jecxz
sarl
cmp
cmp
rcll
scas
jb
fs
sahf
bound
imul
sub
jno
add
sub
mov
or
movsl
ja
xchg
mov
loopne
popf
fs
cmp
out
dec
cmc
mov
xor
das
inc
inc
movsb
pop
aas
imul
mov
or
or
je
and
mov
sub
dec
pop
bound
push
bound
mov
push
push
mov
arpl
in
xor
mov
or
icebp
fidivs
cltd
dec
sahf
xlat
into
mov
inc
test
sbb
stc
or
dec
shrb
fmul
mov
nop
push
ljmp
outsl
mov
imul
out
imul
mov
mov
icebp
popa
jnp
sub
mov
repnz
aas
or
inc
imul
mov
mov
and
sarl
adc
cmp
ds
ljmp
incl
sbb
xor
jne
ret
es
xchg
mov
jbe
or
cli
jg
clc
sbb
pop
add
sahf
jae
cld
int3
cwtl
mov
xchg
lahf
mov
rclb
pop
or
bound
jmp
mov
mov
incl
test
xchg
mov
xlat
ret
call
mov
or
popa
rolb
mov
js
rcl
outsl
aam
cltd
mov
lret
rclb
lahf
loope
sub
xchg
inc
inc
push
push
xchg
nop
mov
inc
cmpsl
and
add
imul
lock
mov
stos
adcb
sbb
lods
jb
add
push
pop
loopne
mov
mov
mov
in
iret
pop
fistpl
dec
sarl
popf
mov
enter
lods
sbb
adc
mov
in
aam
lock
fcoms
and
scas
mov
cmp
je
fistps
sahf
xchg
pop
outsl
movsl
push
cwtl
mov
das
jbe
les
jns
test
cli
push
stos
sarl
jo
sub
test
xlat
out
test
cmp
jnp
dec
lahf
push
mov
add
add
and
loop
aad
push
mov
mov
stos
lgdtl
mov
pop
push
inc
dec
out
mov
fistpl
pop
clc
sbb
jecxz
stos
push
imul
insb
or
stc
lret
sarl
std
cmpsb
cs
or
sbb
push
andl
test
pop
push
jbe
sbb
popa
push
adc
lcall
xor
mov
js
push
in
and
adc
push
mov
ret
insb
add
out
out
je
mov
pop
test
aas
sbb
inc
and
sahf
daa
fnsave
lods
adc
push
sub
bound
outsl
jl
clc
sbb
pop
inc
fs
nop
jg
jnp
dec
xchg
and
cmp
fistpll
xchg
or
push
add
fildl
fcomps
push
call
repnz
cmpsb
or
sbb
insb
xchg
sbb
mov
mov
in
hlt
jge
mov
and
cmp
daa
inc
adc
and
xor
dec
pop
dec
push
mov
or
loop
ss
shl
inc
adc
out
jecxz
icebp
rclb
pop
push
std
loop
out
std
mov
cmp
mov
jns
dec
push
faddl
dec
out
jbe
add
addl
mov
fmuls
cmpsb
roll
jno
lods
xchg
push
adc
and
aas
xor
adc
adc
pop
shr
in
ret
lods
cmpb
or
lods
in
lret
jg
jecxz
cmp
rorl
xchg
sbb
insl
push
in
pushf
movsl
rclb
std
jl
fimuls
lds
lret
jp
mov
pop
push
icebp
mov
mov
dec
pusha
add
mov
xchg
ljmp
pop
repnz
jnp
sbb
loopne
in
or
jnp
std
cmp
andl
lea
arpl
pushw
arpl
sbb
add
and
jmp
lock
jl
xchg
rcl
call
mov
mov
cs
jge
jne
mov
mov
mov
imull
sub
mov
jb
mov
pusha
test
pop
or
sbb
aas
or
mov
pop
xchg
aam
out
int3
test
out
and
lock
cmp
in
cmp
jle
es
inc
aaa
xchg
and
jmp
rol
fwait
int3
popf
add
xchg
mov
and
out
inc
mov
ret
inc
push
xchg
pushf
es
out
rorl
pushf
jle
add
lds
xchg
clc
test
loopne
bound
leave
or
mov
xchg
inc
pop
and
xchg
jmp
mov
aam
or
sub
mov
and
or
fs
js
ret
add
and
mov
pop
push
pushf
fs
push
mov
in
inc
icebp
inc
lret
ds
ffreep
push
pop
das
add
and
mov
lods
push
cwtl
pop
sbb
xchg
sbb
push
push
xlat
or
repnz
fs
lds
test
js
leave
sub
sub
imul
aas
into
add
push
fnstenv
outsb
out
adc
bound
into
jo
push
xor
sub
lret
dec
enter
outsl
outsl
leave
test
pop
data16
mov
lea
pop
jl
xchg
ret
adc
jg
mov
les
scas
ret
push
cmc
mov
cltd
mov
mov
ret
add
roll
test
sub
push
out
out
sbb
inc
sbb
outsl
test
jo
insl
sub
mov
sbb
mov
lret
pop
stos
jbe
fmul
test
sbb
push
sub
ja
lods
add
call
xchg
lods
popf
mov
and
cmpsb
repz
out
scas
adc
jecxz
add
ss
adc
out
sbb
pushf
mov
cmc
jg
sbb
push
pop
loope
dec
pushf
stos
pop
jecxz
scas
lea
jno
dec
test
xor
sub
fists
mov
cli
push
shr
mov
pop
cmp
fisubrl
add
stc
jge
loop
movsl
in
aas
ljmp
pop
rcr
fnstsw
fimull
insb
sbb
stos
and
clc
dec
and
mov
sub
push
movsl
outsb
mov
or
and
pop
icebp
add
out
movsb
fmul
dec
lock
push
pop
repnz
out
sbb
mov
out
push
and
and
sub
lods
jno
mov
xchg
push
xchg
ja
xchg
push
or
shll
push
xchg
jmp
sbb
jo
pop
push
out
pop
stos
imul
pushf
dec
cmp
cmp
add
add
mov
or
stos
ja,pt
incb
out
popf
mov
or
pop
inc
enter
xor
aad
mov
negb
test
cmc
mov
shl
sub
insb
mov
loopne
mov
xor
mov
jb
adc
int
repz
xchg
sbb
push
or
out
int3
out
inc
sbb
int3
out
dec
cltd
data16
fs
mov
int3
dec
mov
adc
cld
lret
inc
push
mov
mov
lret
popf
mov
or
ret
inc
mov
mov
add
xchg
or
icebp
andl
arpl
mov
ja
lods
ds
mov
adc
movsl
scas
imul
sub
push
rcll
ss
inc
mov
repz
dec
push
xchg
test
adc
mov
out
push
sbb
dec
scas
push
push
and
loopne
and
test
mov
or
mov
xor
push
and
and
lods
ret
jae
sti
popf
fcoml
dec
mov
sub
mov
flds
es
ds
imul
pop
decb
pop
lds
mov
push
xchg
mov
int
scas
xchg
push
pop
jl
fidivrl
push
sarb
pop
push
mov
jle
inc
dec
adc
lahf
inc
outsl
mov
xchg
jecxz
jmp
rcrb
insl
inc
rcr
negl
adc
out
jns
jp
clc
leave
icebp
pop
mov
fwait
int
jne
jb
sbb
pop
sar
outsb
lods
pushf
addr16
and
add
and
cmp
mov
adc
ds
jno
cmp
jo
data16
xchg
mov
cmp
call
xchg
imul
sub
out
mov
fwait
push
inc
dec
loop
jl
xor
jbe
push
pavgb
mov
shr
push
pusha
ret
add
loopne
dec
add
push
xchg
test
mov
daa
mov
lods
loopne
and
popa
out
enter
iret
mov
mov
pop
jns
add
xchg
je
cltd
pop
cs
daa
inc
adcb
stos
scas
xor
mov
sub
cmp
dec
int3
mov
push
cmpsb
mov
pop
test
adc
mov
pusha
rcll
mov
mov
adc
pop
jns,pn
mov
sbb
mov
jecxz
jne
push
daa
jmp
cli
xor
pop
pop
ret
mov
xor
mov
aad
sarl
mov
popf
lcall
stos
mov
repnz
cmp
push
xor
mov
inc
outsl
rclb
fildl
adc
leave
insb
sub
pop
push
xchg
push
test
adc
cmpsb
adc
push
adc
jns
sub
pop
inc
outsb
adc
es
xchg
jo
xchg
popa
jne
jae
and
adc
push
mov
adc
xor
mov
cs
add
adc
cwtl
cmp
cmpsl
call
imul
xor
add
cmc
es
in
mov
ljmp
ret
push
inc
push
sub
mov
icebp
and
lcall
mov
mov
jge
add
xchg
add
or
xchg
stos
shrb
dec
push
adc
mov
fstl
xor
push
aaa
movsl
cmpb
cwtl
inc
mov
dec
cs
ljmp
jg
or
lahf
into
daa
or
outsb
pop
lahf
xchg
data16
jo
movl
fwait
dec
fadd
pop
dec
push
fucomi
jo
scas
je
inc
xchg
iret
out
jl
loope
xchg
xchg
push
xchg
inc
xchg
jmp
cmpl
sbb
xor
pop
cltd
int
and
sbb
push
outsl
les
adc
jle
ficoms
imulb
sbb
pop
push
cmp
dec
maskmovq
divl
shll
inc
and
mov
pusha
dec
into
shl
dec
ss
arpl
in
cmp
dec
cmp
adc
imul
sahf
xor
sti
lcall
outsb
inc
inc
adc
jne
leave
ret
xor
sbb
rorb
jmp
sub
mov
imul
mov
xor
jmp
lret
sbb
push
dec
mov
pushf
in
inc
sti
pop
pop
adc
or
inc
in
xchg
mov
into
jmp
fbstp
mov
arpl
pop
push
cmp
fistpll
mov
or
pop
add
loope
cmp
and
cltd
outsb
fcom
add
sarl
push
test
mov
pop
mov
dec
lahf
pop
pop
enter
clc
divl
xor
mov
mov
jb
mov
jle
push
sbb
stc
push
dec
push
mov
dec
lds
imulb
jns
jge
rcr
test
or
mov
je
adc
mov
pusha
loop
popf
inc
adc
shlb
fcmovnb
mov
xchg
adc
or
pop
pop
mov
mov
out
sbbb
xchg
pushf
test
jge
jns
imul
sbb
jae
call
dec
add
outsb
idiv
popf
xchg
pop
dec
pop
dec
jp
sbb
cld
jmp
fnstsw
push
push
bound
movl
mov
sarl
pop
jbe
push
push
dec
mov
xor
ret
add
lret
aad
fld
into
fiaddl
pop
cltd
aaa
ja
iret
rcll
and
jae
mov
dec
xor
sbb
sbb
push
je
icebp
ss
ss
cmp
dec
cmp
cld
jo
scas
sub
mov
mov
jae
daa
adc
dec
dec
pop
and
mov
inc
lods
jge,pt
fisttpll
sbb
mov
cmp
test
nop
ds
test
push
xchg
xchg
xor
lods
out
cmp
xorl
pop
xor
rcrb
inc
mov
das
cmp
xchg
and
or
imul
dec
ror
push
stc
nop
push
lahf
sbb
daa
mov
addr16
inc
pop
push
cld
jo
jb
call
daa
inc
cmpsb
bound
mov
sbb
adc
dec
out
test
in
cmp
mov
gs
or
outsl
push
ret
dec
js
dec
mov
lea
out
outsb
inc
sub
aad
dec
js
stos
cmp
mov
pop
int
pop
js
and
mov
daa
es
pop
xchg
repz
mov
xor
out
pop
and
std
xor
notb
rcr
dec
or
add
mov
sbb
dec
jecxz
scas
fisttpl
xchg
into
into
jno
push
adc
nop
mov
mov
push
mov
jge
mov
push
test
cmp
iret
pop
lret
adc
fbstp
hlt
mov
out
sbb
rolb
cmp
movsl
sub
inc
mov
enter
ret
dec
fnstsw
jle
and
inc
push
cs
arpl
aaa
mov
fsubrs
sub
add
in
adc
xor
faddl
sub
test
fs
clc
movsl
out
push
aam
dec
add
mov
xlat
sti
popa
fwait
mov
and
rclb
arpl
sbb
aad
nopl
cmpsl
jg
cld
aad
or
mov
std
outsl
ljmp
and
idivl
stos
arpl
sub
bnd
xchg
xchg
inc
dec
aad
adc
hlt
notl
mov
aas
inc
lcall
adc
daa
adc
xchg
and
push
push
sarb
add
pop
rolb
lret
mov
lods
xchg
jle
pop
repz
push
pop
insl
mov
fsubrs
jmp
mov
or
add
mov
fnstcw
pop
out
pop
inc
notl
lds
pushf
xchg
repz
stos
ficoml
mov
inc
sub
mov
sbb
rcrb
pop
xchg
jp
stos
inc
pushf
popf
popf
icebp
mov
xor
addr16
mov
sub
sahf
sbb
jmp
mov
ret
fs
and
inc
xchg
or
xlat
jo
fldcw
daa
arpl
cltd
xchg
dec
leave
push
imul
std
hlt
pop
imul
jge
scas
ja
mov
pop
clc
or
repz
iret
iret
push
js
adc
fdivrl
fnstsw
test
push
pop
inc
push
dec
es
mov
aaa
cmp
mov
insb
mov
mov
in
in
mov
fwait
mov
arpl
stc
push
popa
push
fcoms
pop
sub
pop
xchg
or
sub
popa
mov
jbe
dec
dec
add
das
or
imul
dec
fldl
daa
xchg
sub
imul
inc
and
jp
jbe
imul
or
mov
loop
sub
add
ja
test
jge
dec
ret
les
xchg
mov
push
xor
cltd
fwait
test
jno
pop
push
mov
jb
out
or
push
nop
test
das
lret
test
xor
insl
sub
mov
mov
inc
int
dec
outsb
jns
inc
mov
pop
ja
add
add
fcmovnbe
bound
mov
pusha
mov
mov
clc
pop
xchg
xor
mov
xor
stos
call
fcmovne
test
mov
aas
cmc
iret
lret
pop
sub
or
pop
xchg
les
cli
cs
sahf
mov
dec
sar
sbb
aas
imul
sub
push
sbb
bound
cli
loop
mov
movsl
or
cltd
sar
push
pusha
sub
iret
loopne
push
out
mov
subb
popa
std
int
mov
int
inc
test
xor
inc
jno
test
xchg
pushf
mov
jnp
out
ja
leave
shrl
mov
stc
cmp
pop
mov
jbe
mov
xchg
sbb
lret
sbb
add
or
gs
ljmp
xor
addr16
idivl
dec
stos
pop
cld
arpl
mov
into
lret
or
xchg
loope
rolb
dec
inc
xchg
xchg
mov
js
loopne
or
xchg
shr
xchg
negb
xchg
add
ljmp
push
cmp
pop
dec
and
adc
lods
scas
aas
dec
adc
cmc
repnz
je
outsl
popa
sarb
insb
leave
stos
push
lahf
inc
mov
sub
ret
sbb
scas
or
mov
sub
add
in
xchg
int3
dec
lods
ss
lods
pop
bound
enter
dec
inc
push
imul
mov
add
and
inc
dec
xorl
pop
test
les
test
mov
les
sbb
arpl
mov
cltd
sbb
cld
js
cmove
inc
sub
rorb
fmull
pop
imull
jp
into
xchg
imul
hlt
push
push
fisttpll
hlt
mov
outsl
xchg
enter
sarl
cwtl
pop
daa
stc
repz
cmp
or
mov
movsb
das
sub
sub
push
inc
in
repz
jnp
jp
int
fwait
imulb
mov
leave
pop
shrb
add
lahf
fbld
adc
xor
fs
push
mov
or
cmp
pop
push
xor
rclb
mov
xor
add
push
jecxz
sbbl
and
sbb
je
pop
lods
fs
outsl
cltd
pop
lcall
and
movsb
cmp
xor
cmpsb
push
sub
sahf
sidtl
sahf
mov
nop
or
mov
jbe
int3
xchg
adc
adc
mov
xchg
push
imul
dec
cmp
dec
adc
or
sbb
mov
dec
loop
and
sti
fsubs
test
adc
pop
lds
aas
add
bound
mov
inc
sbb
pushf
sbb
rcrl
movsb
jns
and
push
imul
insb
mov
xor
push
aaa
and
xlat
hlt
in
fdivs
cli
mov
push
mov
pop
and
mov
inc
mulb
cltd
sub
sbb
addr16
mov
and
sbb
inc
shrw
leave
or
cmp
in
mov
mov
cmp
iret
adc
mov
xor
ffree
lods
xchg
mov
into
push
loopne
lock
addr16
mov
lret
ljmp
call
push
jle
jno
or
cmc
icebp
scas
inc
pop
mov
shl
xor
mov
orb
pushl
fcmovnbe
call
outsl
lds
or
adc
inc
add
negl
jmp
jmp
mov
add
push
subl
flds
add
xor
fsts
lea
pop
cmp
nop
in
add
inc
push
icebp
je
add
aas
fs
iret
mov
loopne
test
cmp
jnp
fstpl
iret
push
inc
jne
xchg
loop
aam
gs
nop
mov
add
xor
fcoml
adc
adc
push
add
mov
fbstp
push
loope
shrb
mov
cmp
leave
sub
ret
mov
ret
sbb
mov
inc
adc
xchg
gs
test
mov
jge
add
add
and
add
int3
cld
lods
or
inc
in
arpl
jg
sub
mov
loop
movsl
xor
negb
fwait
mov
mov
push
addr16
fcom
push
xor
lock
filds
enter
push
je
xchg
movsb
imul
fcompp
popf
loopne
rcrl
in
inc
cmc
add
lahf
outsl
jns
inc
pop
xchg
push
lock
or
das
jb
sbbl
lea
call
adc
cmp
insl
es
cmp
imul
or
out
and
adc
neg
sbb
push
in
mov
or
sub
aaa
jbe
push
jl
in
mov
mov
pop
subl
imul
fcmovnbe
sbb
sti
shl
add
mov
pop
xchg
cli
cmc
gs
push
ljmp
cmp
lret
scas
add
or
dec
popf
mov
xchg
cwtl
sub
xlat
and
inc
js
insl
jle
adc
add
pop
dec
call
loop
jae
jecxz
xor
into
inc
or
loope
mov
loop
fxch
mov
sbb
adc
pop
push
add
xchg
xor
push
cmpsl
mov
inc
sub
and
shll
push
xchg
push
pop
loope
mov
loop
shll
or
xchg
dec
sbb
test
dec
lods
pushf
into
sbb
fwait
xchg
sar
xchg
stos
sbb
testl
push
scas
test
mov
lcall
into
loop
lret
mov
nop
sub
and
mov
pop
jnp
lahf
lock
cltd
daa
icebp
incl
in
loopne
inc
pop
lods
mov
scas
out
outsl
sub
mov
lods
and
daa
jp
xor
outsl
fs
dec
je
mov
hlt
es
mov
or
into
and
stos
test
cmpsb
mov
push
or
adc
mov
rorl
js
adc
xchg
push
sub
lea
xlat
imul
enter
mov
xchg
cmp
into
gs
push
clc
je
ja
jns
insb
and
loopne
out
or
fs
xor
fsubrl
xchg
ljmp
jb
fucom
ret
decl
mov
push
inc
sahf
and
mov
mov
push
test
jg
pop
inc
negl
outsb
insb
fadd
jp
arpl
sub
and
fmuls
xorl
addr16
jae
xchg
mov
cld
jnp
loop
inc
out
add
aad
and
stc
movl
ficoml
jne
or
jge
mov
xor
mov
jno
and
ds
cmp
dec
sub
add
jge
jecxz
push
jno
test
jne
jbe
lds
fdivl
pop
sub
test
pusha
fstpl
xor
rclb
les
add
mov
sbb
add
test
adc
cmp
mov
mov
lock
daa
stos
push
les
je
aad
jno
push
cmp
xchg
shlb
mov
sbb
js
push
adc
movsl
arpl
rorb
or
lea
cmp
rcll
mov
jne
mov
jmp
cs
jle
test
jo
call
test
pop
fstpt
movlps
mov
jecxz
mov
testb
scas
sub
decb
daa
dec
test
nop
jmp
movsb
notb
mov
mov
shlb
loope
or
push
and
push
mov
push
sub
mov
jnp
imul
push
jno
mov
mov
mov
xlat
add
std
mov
sbb
or
cld
popw
sub
lods
andb
xor
jg
mov
repz
or
mov
out
fists
cmp
lret
dec
mov
pop
jle
and
es
xchg
pop
pop
addb
mov
out
insb
xor
add
dec
jo
shrb
push
xchg
aam
sub
and
hlt
adc
clc
xor
jecxz
lcall
and
adc
and
clc
push
cwtl
sub
jecxz
imulb
xchg
fsubrs
dec
mov
add
push
mov
dec
add
outsb
leave
arpl
jg
in
in
xchg
scas
xor
iret
sub
pop
sti
dec
xchg
adc
xorl
cs
push
dec
shr
xor
pop
jmp
or
sub
sbb
xchg
xor
shl
ds
test
fiadds
cmp
mov
mov
pop
mov
test
lret
push
mov
add
leave
or
lahf
outsl
push
lods
pop
xor
mov
sar
fwait
bound
or
pop
push
inc
mov
inc
es
out
adc
and
push
testl
or
sbb
stos
push
sbb
rol
fistpll
push
jo
xor
mov
mov
bound
mov
cwtl
add
fcoms
pop
push
in
cld
jns
mov
mov
fs
scas
jge
test
scas
adc
ficomps
sbb
repz
jg
lret
aad
das
push
daa
and
ret
movd
fildl
imul
jnp
or
shll
xor
sub
push
movl
cmp
pop
dec
scas
dec
mov
fstpl
lods
xchg
lahf
inc
or
jp
and
aaa
filds
cwtl
test
insl
sbb
xchg
push
movsb
mov
repz
mov
or
xchg
in
mov
cmc
cmpsb
jb
cmpsl
sbb
and
pop
jmp
fs
ds
lcall
and
movlps
jmp
and
sub
rorb
pop
es
dec
xchg
rclb
sahf
and
pop
das
repnz
jecxz
cli
inc
fst
mov
sub
sub
test
das
sub
pop
push
popf
mov
pusha
add
ret
fldt
rcrb
adc
xchg
addr16
mov
mov
aas
xor
push
mov
pop
fwait
leave
aam
add
mov
jne
or
cmp
jmp
push
sub
mov
and
jmp
loopne
rcl
ret
testb
cmc
add
fdiv
cwtl
icebp
push
pop
fwait
popf
pop
cmc
dec
mov
inc
mov
cld
pop
xchg
rorl
mov
push
cld
sub
xchg
sbb
pop
cwtl
or
sub
mov
ja
jge
push
lret
ljmp
add
cmc
fnsetpm(287
cwtl
rcr
lods
adc
sbb
cmp
sarl
inc
add
inc
xchg
into
mov
jecxz
inc
inc
or
cwtl
cmovo
sub
xor
jl
push
mov
jno
fwait
mov
push
or
mov
sub
pusha
mov
test
lods
dec
pop
mov
mov
inc
dec
in
inc
mov
aad
push
in
push
cmpsl
fs
pushf
and
popa
ret
pop
and
in
gs
pop
push
jb
out
mov
xorb
out
xchg
pushf
mov
inc
js
popa
sti
dec
pop
mov
outsb
insl
adc
or
add
mov
scas
es
pop
test
scas
lods
pop
cmpsb
xchg
aam
aad
pop
fwait
adc
pushl
sub
sub
lods
and
repnz
inc
out
aas
or
add
mov
inc
iret
push
xchg
into
jb
addr16
push
cltd
pusha
into
andl
and
jmp
outsb
mov
and
sub
in
adc
xor
ret
rcll
jo
push
jecxz
add
faddl
pop
dec
out
cmc
lods
leave
pop
lahf
out
xor
sbb
jb
adc
bts
dec
xor
xchg
mov
or
jl
loope
shl
inc
lds
lock
mov
aam
sbb
and
add
sub
dec
clc
pusha
mov
imul
mov
push
cpuid
xchg
cld
push
xor
pop
xchg
jp
mov
sub
inc
jne
out
push
in
push
mov
clc
cld
test
or
pop
ljmp
and
xor
jne
or
filds
adc
fidivs
pushf
clc
xchg
shrb
inc
ret
mov
das
imul
add
inc
shlb
shll
cli
sub
push
repz
cli
mov
addr16
lret
sub
add
imul
repz
or
insl
ret
cmc
or
xchg
xor
popa
xor
ror
inc
cmc
xor
dec
inc
xchg
xchg
std
es
xchg
mov
jae
andb
cmp
gs
cmp
xchg
pop
iret
xchg
jb
fwait
jecxz
fld1
loopne
fstpt
adc
adc
push
fidivs
das
cli
mov
popa
mov
xor
popa
cli
pop
mov
fdivrl
jp
push
cld
mov
mov
mov
adc
outsl
or
add
rorl
add
sbb
shl
mov
ret
shll
addb
push
movsb
mov
lds
popf
outsl
adc
fmulp
movsb
insb
and
dec
sti
js
and
test
out
fcmovnb
mov
cmp
mov
push
out
jbe
fnstsw
pop
jp
out
fcompl
imul
cmpsb
inc
and
adc
inc
int3
ret
jns
enter
pop
mov
dec
mov
mov
mov
ret
push
mov
sbb
pop
aaa
fwait
mov
popf
xchg
shrl
mov
fidivs
mov
cmp
pop
scas
data16
gs
les
jb
insl
jns
xchg
mov
mov
divps
insl
sub
sub
into
in
addb
cmp
or
xchg
push
xchg
fcoms
mov
push
adc
xor
mov
sub
adc
popf
jae
sbb
fdivr
adc
adc
mov
jecxz
fdiv
sub
xchg
outsl
or
in
rcll
sbb
rcrb
xchg
stos
sub
mov
push
pop
out
push
mov
mov
cmc
cltd
pop
iret
cmp
out
jl
push
pop
loopne
sub
sub
xlat
jmp
xchg
aaa
lods
push
mov
mov
sub
or
add
inc
lds
dec
fcomps
popf
mov
iret
push
adc
jnp
movsl
cmpl
insb
cmc
stos
out
adc
shlb
in
dec
xor
lcall
in
mov
sub
sti
insl
mov
sahf
pop
orps
push
std
mov
lea
lahf
insb
push
mov
aaa
pop
xchg
clc
imulb
ss
arpl
adc
add
mov
pop
push
xor
inc
js
fldl
cwtl
pop
loope
mov
sar
out
mov
cmp
fmul
jo
test
sbb
sbb
xor
xor
sbb
inc
gs
setns
add
mov
scas
popf
sbb
jo
aaa
ljmp
adc
dec
jns
sbb
sahf
lock
xchg
fisubl
icebp
mov
cmp
push
pop
cwtl
adc
xor
in
inc
or
pop
sbb
pushf
das
js
ficoml
testl
cld
leave
mov
loopne
inc
jmp
mov
imul
inc
movsl
mov
nop
jge
cmpsb
mov
adc
out
out
sbb
push
sbb
outsl
out
cld
dec
pop
std
pop
lds
enter
popf
outsb
or
push
mov
jge
push
rcrl
cmp
jb
cmp
dec
and
add
mov
push
sbbl
and
lret
jnp
nop
popf
mov
dec
jae
cmp
xchg
aam
ret
jnp
mov
push
pop
and
inc
xchg
inc
in
leave
xchg
pop
mov
mov
sub
adc
fstpl
rol
lcall
bound
cmp
mov
rcll
cli
or
sub
or
sti
test
mov
lret
movsb
inc
jae
insb
xor
cwtl
pop
mov
adc
add
mov
mov
or
std
and
stos
cmp
in
imulb
xlat
ljmp
loop
mov
arpl
lret
pop
mov
aas
ds
addb
aas
mov
push
aam
mov
outsb
xor
mov
lods
pop
test
xor
loopne
iret
cmpsb
dec
inc
dec
fsubrs
push
sti
adc
cmpsb
loope
js
stos
fwait
sarb
pop
mov
mov
ret
push
enter
jno
xchg
jo
mov
shl
inc
es
arpl
lock
xor
or
pop
in
lea
jmp
sub
ljmp
aam
inc
mov
or
in
mov
push
cs
lahf
lcall
mov
addr16
xor
out
cld
sahf
add
pusha
xchg
or
push
inc
and
sub
xlat
adc
and
mov
fdivrl
ja
in
and
repnz
and
or
mov
popf
test
jmp
aam
mov
sub
adc
in
pop
or
dec
jns
rcrl
add
lods
add
xchg
adc
sbb
push
sbb
js
mov
lahf
add
pop
dec
mov
test
push
cli
in
repnz
dec
cmp
aaa
xchg
dec
test
inc
inc
adc
inc
xchg
xor
call
push
mov
aad
cmc
mov
sbb
aaa
loop
jp
push
lret
or
jbe
xchg
mov
mov
xor
and
testl
sbb
imul
and
rcl
int3
movsl
xchg
popa
lret
add
sub
lds
cmp
insl
loope
cli
xchg
adc
insl
adc
dec
sahf
mov
adc
mov
jg
xchg
pop
xchg
inc
std
mov
ds
jo
fimuls
pop
push
sub
fbstp
mov
push
push
dec
ds
jecxz
dec
xor
movsb
adc
shll
fldl
out
sub
enter
push
xchg
cmpsb
daa
push
xchg
mov
jle
stos
mov
sbb
or
xor
out
push
or
imul
mov
jnp
jecxz
sarl
xchg
fidivrl
or
sub
mov
adc
pop
shll
xor
or
shrl
inc
mov
xor
inc
jbe
mov
pop
fwait
nop
pop
or
and
adc
adc
dec
mov
xor
insl
xor
nop
xchg
in
cmp
dec
lods
xchg
and
out
and
push
dec
mov
xor
mov
loop
outsb
insl
xlat
adc
popa
mov
mov
inc
xchg
cmp
dec
jb
adc
pop
add
push
and
frstor
mov
andl
jp
sbb
lcall
push
sub
fisubrs
ja
and
jb
popf
dec
mov
addl
ja
ljmp
fmuls
sahf
sysret
adc
push
push
andl
fidivrs
test
pop
pop
cltd
pop
sbb
sub
pop
jmp
jecxz
mov
gs
inc
pop
movl
lods
sub
ret
xor
jp
pop
adc
push
dec
insb
pop
data16
or
dec
scas
mov
outsb
push
xor
mov
add
jle
lea
push
test
jae
push
in
aad
adc
loopne
scas
xor
sbb
scas
icebp
jge
fsubrp
lret
sbb
push
mov
imul
push
ja
xchg
jmp
lods
sub
sbb
xchg
add
ret
jo
mov
and
icebp
and
jl
std
hlt
or
ss
and
push
stos
cmp
xchg
cmp
jne
dec
in
sbb
sub
jnp
pop
icebp
push
adc
loop
ljmp
xor
push
pop
fistl
fisubrs
xorl
popa
mov
stos
or
lea
xchg
mov
fisubs
jmp
test
fdivp
mov
sub
push
outsl
mov
ljmp
stc
call
movsb
or
ljmp
cli
add
bound
xchg
outsb
in
or
xor
cmp
inc
jmp
addr16
mov
lock
orb
das
mov
rcll
mov
pop
sub
rcrb
int
mov
and
lea
in
in
and
adc
pop
icebp
pop
cmp
push
subl
mov
fsubr
cmc
pop
das
adc
ret
sub
fadd
inc
mov
or
ds
pusha
push
repnz
pusha
fsubrl
push
psubq
in
dec
sti
sbb
cmpsb
mov
inc
jns
call
pusha
xor
fdivl
xchg
or
pop
in
add
xlat
js
cs
mov
jo
mov
je
sub
add
xor
hlt
out
aas
mov
mov
lds
mov
pusha
push
dec
lret
jae
aad
frstor
push
add
mov
out
xor
and
and
lret
outsl
arpl
pop
cmp
in
imul
pushl
xor
mov
adc
push
mov
insb
aad
push
inc
fcomps
dec
rolb
andb
push
and
stos
push
ret
orl
sbb
push
mov
mov
mov
sbb
push
repnz
add
loope
lahf
add
xlat
mov
add
mov
add
rcl
adc
cld
push
imul
in
ja
xchg
jbe
rcrb
imul
push
daa
mov
insb
inc
loop
fidivl
sbb
test
xor
xchg
mov
addl
xchg
sub
outsb
pushf
xor
lds
out
cli
pushf
sub
fs
mov
cmp
xchg
and
mov
push
sub
dec
mov
dec
inc
cmp
filds
mov
pop
inc
fucomi
aaa
or
jb
sub
mulb
sar
scas
andb
adc
fcmovbe
fidivrl
out
lret
fidivrs
mov
cmp
mov
in
fucomi
push
fimuls
dec
loope
mov
or
gs
mov
cmp
clc
jg
sub
adc
mov
mov
jno
push
cmp
sub
leave
insb
or
xchg
xor
push
mov
dec
pop
out
add
cmpsb
iret
nop
mov
sub
push
dec
and
sub
stc
push
xor
cmpsl
adc
sbb
pushf
fisubrl
sbb
mov
dec
std
pop
in
jae
sub
cmc
in
jnp,pn
in
jle
pop
dec
sub
xchg
inc
mov
dec
movsl
sub
sub
mov
mov
inc
shrb
add
mov
pop
jecxz
fs
rolb
shld
mov
lds
push
fstl
and
out
bound
out
mov
pop
xor
mov
bound
test
push
popf
and
mov
xorb
les
sarb
mov
mov
and
jge
fimull
push
mov
jb
aaa
dec
sar
inc
xorb
dec
ja
pop
xor
insl
xchg
jb
jo
cmp
pop
gs
ljmp
sbb
cwtl
mov
shll
jnp
xchg
mov
and
pushf
shlb
and
gs
adc
mov
loope
xchg
and
xchg
sti
and
pop
jl
pop
add
imulb
mov
ja
adc
dec
cltd
dec
sub
add
push
jmp
je
dec
loope
pushf
cmp
cs
xchg
repz
subl
addr16
jns
mov
pop
mov
cmp
add
add
adc
mov
cmp
ficoms
popa
pop
jns
sbb
and
arpl
js
data16
jb
inc
in
mov
add
xchg
rsm
mov
out
jmp
imul
dec
or
lret
pusha
fistl
adc
out
inc
push
movsl
or
iret
pop
sbb
sbb
sbb
or
mov
jns
lds
add
subb
inc
jno
add
pop
mov
jnp
aas
mov
dec
pop
out
mov
lret
scas
das
leave
les
ja
mov
mov
aas
mov
pop
mov
inc
in
cmp
dec
addr16
add
adc
cmp
fcmovnbe
jae
sahf
in
repz
fildl
or
movsb
xchg
sbb
rcrl
pop
sub
and
jne
dec
in
cmpsl
add
outsl
dec
push
ss
cmp
leave
in
dec
xor
andl
mov
repz
or
cmpsb
inc
adc
fcomip
jecxz
pop
mov
bound
pop
notl
or
jl
adc
dec
xchg
cld
enter
ret
out
xchg
fisubrs
sub
cli
das
mov
pushf
xor
aam
data16
cmc
dec
adc
popf
sbb
jae
adc
or
in
cmpsl
aas
outsb
mov
add
push
push
xchg
enter
lahf
sub
fadds
sbb
and
inc
dec
inc
mov
cmpsl
pushf
in
lret
imul
adc
movsl
mov
xchg
inc
inc
into
dec
mov
fsub
nop
pop
sub
in
xlat
outsl
sahf
popl
cmc
adc
dec
aaa
filds
movsb
and
outsl
pop
add
sub
xor
int3
neg
and
loop
out
jae
sub
pop
cli
cli
inc
out
repz
lcall
mov
cmp
int3
shl
jl
aad
jle
mov
subb
adc
clc
pop
pop
and
ja
lcall
lods
jmp
cli
clc
jnp
pop
arpl
or
add
jne
imul
pop
fdivs
sbb
addr16
fs
jecxz
and
shlb
lods
fstl
mov
xchg
mov
sti
iret
mov
xchg
xchg
pop
nop
inc
lcall
sbb
pop
sub
inc
mov
push
into
xor
xadd
hlt
loopne
cmp
aam
pop
or
mov
fstpt
jo
or
push
in
daa
outsl
pop
sub
inc
pop
xchg
scas
mov
nop
inc
add
nop
push
cltd
faddl
sub
test
jl
loope
popf
sbb
mov
rorb
in
cmpsb
jno
fbstp
mov
bound
daa
cmp
sbb
stc
ss
stc
cmp
sub
test
test
push
scas
sti
ret
and
mov
pop
dec
std
scas
or
cmp
adc
lods
cmpl
add
xor
jno
pop
out
arpl
xor
stos
push
loope
inc
imul
mov
fildll
repnz
stc
push
loop
int
mov
movsb
xchg
mov
aaa
mov
pop
xchg
jge
pop
lock
or
fcomi
mov
lds
fistpll
addr16
inc
enter
outsb
cmp
stos
push
fisubs
adc
fimuls
mov
outsl
fs
fwait
scas
mov
ret
ja
dec
enter
lods
adc
sbb
mov
lret
nop
lret
daa
xchg
lcall
cmp
cmc
xchg
cs
ret
ret
push
sub
adc
bound
dec
sub
popa
sbb
mov
pushf
and
out
push
push
cmp
js
add
pop
or
aaa
cmp
lea
push
outsl
in
mov
push
loop
je
cmp
sahf
jmp
les
idivl
stos
mov
mov
push
popf
cmpsl
ficoms
inc
aaa
cld
into
arpl
dec
adc
dec
adc
or
sub
cmp
jo
mov
inc
cmp
pop
shll
push
mov
out
int
std
mov
repz
push
mov
or
adc
adc
jae
gs
int
fmul
cwtl
ret
pop
push
fucomi
mov
jns
add
add
mov
dec
mov
mov
cmp
call
mov
mov
dec
and
jns
sar
jge
divb
roll
mov
xor
daa
push
shl
movsl
lcall
push
mov
hlt
mov
sbb
movups
prefetch
or
testb
fst
cmp
lock
push
xacquire
adc
push
aad
aad
xor
inc
in
jle
xchg
scas
mov
mov
or
xor
in
arpl
mov
jo
sahf
dec
jns
mov
cmp
popf
sub
pop
gs
lcall
xchg
mov
movsb
jne
cmp
lods
xchg
fdivrs
inc
inc
xchg
pop
pop
add
and
add
sbb
aas
jecxz
pop
mov
mov
insb
sub
dec
xchg
and
cmpsl
lods
push
leave
jge
aaa
adc
sbb
sub
pop
push
push
jnp
ds
pop
jmp
mov
clc
jl
and
lcall
sahf
inc
cmp
mov
adc
scas
fwait
sahf
mov
xor
test
or
rcr
dec
adc
mov
rclb
push
test
mov
fadds
xchg
lods
jp
in
pop
ljmp
push
push
mov
mov
push
ja
push
xorb
les
gs
int
and
xchg
push
sbb
in
sbb
leave
or
popw
pop
sub
xor
and
push
adc
or
pop
ret
inc
cmp
dec
pushf
push
test
push
leavew
call
hlt
mov
dec
add
sub
fwait
xchg
cmp
and
pop
int
popf
inc
rdtsc
mov
cld
cltd
inc
out
pusha
insl
and
fistpll
rep
ret
in
std
iret
mov
cli
fldl
rorb
in
cmp
lret
test
cmp
adc
ljmp
pop
flds
lret
push
add
mov
mov
or
sahf
cmp
mov
pop
pop
adc
pop
pusha
cmc
shlb
rcll
mov
sbb
rcl
repz
push
xchg
and
cmpsb
and
xchg
sbb
or
pop
xchg
cvttps2pi
sahf
lcall
sub
sarl
divb
and
test
movsl
dec
mov
inc
push
repz
ret
imul
adc
xchg
dec
std
fnsave
mov
mov
sbb
xorb
xor
push
pop
mov
mov
ret
inc
jp
xchg
cmp
insb
ds
aaa
push
mov
out
lock
lcall
stc
arpl
arpl
or
pop
daa
dec
fwait
rcrb
out
mov
add
out
fisttps
push
test
inc
mov
push
adcl
mov
sbb
sbb
ficoms
xchg
dec
data16
pushf
push
push
pop
test
je
rcrb
in
push
mov
dec
pop
push
das
fildl
add
dec
sbb
inc
clc
jnp
pop
mov
insl
mov
sti
nop
notb
movsb
dec
pusha
xorb
call
cmp
mov
stos
popw
cmp
mov
das
xchg
ljmp
ja
dec
adc
rclb
cmc
sbbb
pop
or
das
push
sub
enter
inc
xchg
inc
sbb
add
cltd
shll
sub
or
mov
ss
pop
vmovupd
inc
cmp
dec
test
js
dec
pop
and
push
xor
loopne
nop
js
call
negl
jns
adc
jmp
pop
lods
push
jp
inc
call
movsl
push
out
iret
adc
xor
add
imul
sti
xchg
or
pop
inc
and
daa
out
icebp
icebp
ja
dec
sbb
cmpsb
pop
adc
jno
mov
adc
xchg
jns
jl
je
pop
stc
sahf
dec
mov
ret
cmp
cmp
cmp
jae
jge
ret
les
loopne
xor
sub
mov
cld
adc
mov
or
aam
and
add
pop
sub
or
push
outsl
cmc
pop
dec
and
dec
mov
inc
jp
cltd
cld
cmp
inc
sub
add
stos
idivl
and
test
xchg
loope
ljmp
sub
lds
jb
adc
iret
mov
dec
add
inc
mov
and
cmc
jle
push
bound
or
fsts
movsl
xor
or
mov
fisubrl
int3
shr
jo
stos
test
insl
xchg
call
jge
je
daa
jbe
sbb
push
and
aas
mov
pop
or
or
or
xchg
in
stos
ja
ficoms
repnz
add
int3
jl
push
icebp
jno,pn
adc
mov
int
pop
push
mov
enter
mov
and
das
inc
cmpsb
hlt
outsb
cmp
push
insl
sbb
ja
xchg
stos
clc
mov
sbbl
cmp
and
and
les
adc
adc
dec
jns
pop
incb
mov
rorb
fwait
lahf
nop
push
out
mov
push
orl
cwtl
xor
pop
shlb
into
push
add
cli
jp
and
push
mov
clc
ja
arpl
pop
sbb
xchg
sub
mov
cmp
popa
jecxz
in
xcrypt-ofb
cmpsl
imul
iret
sbb
sarl
and
cs
ja
aad
shll
xchg
mov
push
sarl
data16
xor
dec
mov
outsb
dec
je
inc
les
mov
dec
pop
stos
out
sti
je
dec
xchg
div
adc
push
sbb
int3
push
lods
pusha
lahf
jl
push
cmp
dec
clc
xor
pop
fcmovne
adc
cmpsb
pop
push
mov
mov
push
mov
adc
or
imul
jae
aas
ret
inc
testl
push
mov
or
in
mov
add
push
sbb
and
rcl
aas
sti
lods
sub
shrb
mov
mov
test
out
cs
inc
mov
sbb
scas
mov
lods
mov
test
sub
cmpb
mov
ret
sub
mov
xor
loope
test
and
int
push
repnz
lahf
pusha
js
dec
cmc
adc
jge
jmp
iret
adc
xlat
movsb
mov
push
int3
mov
pop
int
loopne
outsl
jb
xlat
push
lods
ljmp
subl
add
into
hlt
xchg
pop
sbb
lcall
mov
dec
jmp
test
js
lods
int3
jle
cmp
lods
gs
inc
sub
and
icebp
sub
jge
inc
in
iret
sti
xchg
jl
fwait
dec
mov
add
pop
test
call
adcb
notl
loope
jmp
loop
call
into
mov
int3
lods
inc
push
daa
jno
mov
pop
push
mov
adc
mov
push
jp
shrb
pop
flds
mov
ret
dec
leave
cmovg
add
ret
leave
subb
xor
out
pop
rcl
rcl
dec
rcrl
fisubl
dec
dec
push
je
std
sub
sub
cltd
jecxz
add
mov
aaa
subb
jbe
into
sbb
dec
fsubs
int
inc
in
mov
jb
xchg
and
inc
adc
and
call
cmp
inc
jo
test
ret
inc
in
test
mov
push
adc
sub
cmp
mov
mov
pusha
or
pop
roll
pop
lret
xchg
cmpsb
rorb
mov
aam
dec
cli
fwait
movsl
addl
adc
cmc
lds
mov
sub
repnz
jge
and
pop
rolb
xor
add
sub
xlat
mov
repnz
stos
add
sub
fldt
out
je
jmp
loop
jp
das
xor
mov
test
xor
aas
sub
mov
and
jmp
stc
xor
enter
repz
jns
push
or
jo
aaa
sahf
xor
out
lret
xchg
or
pop
ljmp
in
push
addl
notb
es
push
in
arpl
gs
filds
lcall
in
into
loop
sbb
mov
shrb
xor
popf
fwait
and
xchg
lock
lods
aad
cmp
cmpb
mov
dec
and
hlt
jle
movsl
sub
inc
loope
jno
or
or
mov
popf
push
int3
mov
mov
inc
mov
xchg
cmp
jmp
ja
nop
outsb
mov
data16
push
imul
and
push
push
dec
xchg
daa
aaa
xor
movsl
add
clc
pop
es
jecxz
in
ds
and
ret
fwait
ret
or
out
les
mov
push
mov
dec
sbb
and
mov
mov
sub
adc
push
test
sbb
cltd
cmp
scas
mov
es
cmp
adc
popf
lea
test
inc
pop
aam
pop
sarl
fwait
iret
sbbb
dec
mov
sub
addr16
xchg
dec
pop
inc
sarb
and
enter
inc
inc
ret
add
push
test
mov
je
push
aam
mov
outsb
adc
inc
dec
mov
adc
mov
add
sbb
sub
sahf
hlt
jl
fcomps
test
push
xor
lret
mov
jecxz
icebp
jnp
test
xchg
out
pop
push
inc
cmp
das
adc
pop
pop
push
mov
xor
cmc
lds
xor
jmp
push
pop
test
push
jb
in
sub
push
mov
pop
repnz
jne
push
pop
in
xchg
jle
xchg
jbe
push
jae
xchg
test
mov
gs
imul
sbb
mov
add
lods
dec
push
add
mov
bnd
out
cwtl
pop
pop
dec
lods
popa
fisttpll
push
jb
sub
xchg
or
out
mov
dec
pop
cli
mov
dec
test
shlb
sub
ljmp
imul
pop
or
sub
in
int
dec
into
sub
adc
std
jl
mov
pop
insb
jb
sub
cmpsb
xlat
push
outsl
sbb
sub
adc
aad
mov
dec
lret
popl
bound
sarb
dec
in
push
mov
push
nop
fs
fisubrl
pop
movb
lret
add
jmp
push
xor
adcb
inc
push
mov
push
stos
das
jp
repz
add
add
jl
adc
adc
add
or
stos
push
cmp
pop
lahf
aad
jp
push
mov
movsb
stc
arpl
mov
enter
ret
mov
sbb
cmpsl
mov
push
arpl
movsb
inc
adc
pop
popf
cwtl
sbb
add
pop
cmp
jp
outsl
push
sub
jno
test
jp
xchg
pushf
cmc
mov
sub
pop
push
pushf
in
in
lea
in
jno
adc
or
inc
push
xchg
add
ja
out
sub
add
xor
pop
adc
popa
dec
jle
or
adc
sbbl
pop
sahf
mov
test
sub
loope
ret
or
xchg
daa
adc
scas
ljmp
rcrb
mov
cmp
adcl
mov
fdivl
mov
dec
test
loop
or
movsb
jo
out
inc
aaa
push
xchg
pushf
cmp
nopl
or
push
jecxz
mov
and
xchg
jle
mov
ret
fcomp
jne
js
call
sub
or
leave
mov
inc
push
daa
push
imul
pusha
sub
lods
xchg
dec
pop
jl
sbb
sbb
cmp
pop
fwait
adc
leave
cmpsb
pushf
cmp
push
ret
dec
mov
fldl
jb
and
aaa
int3
pop
cmp
mov
push
movl
pop
imul
repnz
fsubr
dec
hlt
jle
mov
iret
jmp
mov
fadd
pop
inc
sbb
or
push
inc
movsb
mov
leave
hlt
in
aad
mov
push
sti
cmc
aaa
lods
outsb
pop
add
gs
mov
out
mov
sbbl
mov
fsubp
loope
mov
into
xchg
push
inc
pusha
or
inc
rcr
pop
inc
jnp
mov
jmp
repz
jno
pop
sub
sub
dec
sbb
push
sbb
pop
add
or
or
loope
mov
mov
mov
repnz
enter
cmp
std
pmaxsw
pop
sbb
cmpxchg
ret
lds
and
mov
and
xor
dec
mov
cmc
ds
mov
in
cmpsb
bound
add
mov
jbe
mov
clc
stc
ja
lds
mov
lds
and
jge
rcrb
dec
jnp
mov
scas
sub
mov
jl
ret
dec
sbb
filds
jne
lahf
jmp
xor
mov
jno
pop
std
inc
ja
mov
sub
dec
adc
add
and
inc
incl
inc
movsl
pop
iret
jae
pop
pop
fcoms
imul
mov
fwait
cmp
lret
mov
fdivs
aaa
dec
subb
sbb
dec
fnstcw
fcompl
pop
xlat
push
jle
lret
adc
and
lcall
test
pop
fwait
imul
inc
stos
or
xor
cmc
mov
icebp
lret
adc
aas
cmp
pushl
or
adc
pop
cs
xchg
gs
popf
js
popa
jb
or
sbb
xor
stos
xor
pop
js
imul
xor
cmp
lods
pop
or
stos
cltd
dec
dec
dec
xor
ss
in
pop
jb
ret
movl
scas
dec
scas
xlat
popf
push
scas
aad
inc
lds
scas
and
and
popf
adc
jle
xor
sub
mov
xchg
daa
pop
and
or
daa
sub
mov
nop
mov
bound
jne
mov
dec
jmp
xchg
fbstp
call
ljmp
fmuls
inc
inc
and
dec
lods
sub
cmp
into
out
int3
int
ljmp
xchg
hlt
mov
jl
cmp
mov
in
imul
adc
in
dec
int3
sub
push
insb
test
movsl
lea
and
imul
push
stc
mov
in
inc
push
push
loope
cmpsb
fisubs
movsl
and
ds
divl
imul
mov
insl
addr16
xor
rcrl
dec
ret
fwait
cmp
dec
dec
adcb
inc
leave
cld
pop
lea
add
dec
aam
mov
pop
and
daa
cwtl
in
mov
loop
push
movsl
pushf
je
outsl
es
push
pushf
negl
repnz
leave
gs
push
cmp
sbb
lret
fdivl
sub
mov
or
aad
or
outsl
mov
mov
test
dec
adc
ja,pt
adc
adc
out
mov
dec
sbb
out
push
jmp
cmpsb
add
mov
dec
nop
pop
push
sub
sti
mov
sub
in
inc
mov
or
mov
bound
mov
int3
xchg
testb
push
std
popa
push
mov
sub
pop
fisttpl
loop
xchg
sti
int
test
movsl
add
fdiv
js
add
xchg
fstpl
xor
and
and
hlt
test
testl
jne
adc
loopne
jmp
out
dec
adc
pop
mov
shr
outsl
sub
mov
loopne
push
dec
stos
mov
add
xor
dec
mov
call
insl
jne
add
mov
pushf
cmpsb
into
inc
scas
adc
push
lahf
sti
xor
cltd
repnz
repz
xor
shlb
rorb
push
xchg
mov
xlat
mov
loope
jp
popa
repz
pusha
les
dec
sbb
rorl
in
testb
jb
pop
js
add
dec
xchg
push
in
stos
jnp
pusha
in
mov
mov
fs
div
arpl
xor
repz
mov
sarl
das
push
imul
lds
xchg
jbe
dec
mov
fldcw
dec
ljmp
mov
into
gs
iret
lahf
pop
cltd
scas
mov
lcall
aam
xchg
xchg
std
pop
sub
adc
mov
mov
xchg
lock
xchg
movl
call
xor
mov
pushf
jecxz
and
icebp
inc
inc
leave
ja
adcl
imul
fistps
mov
andb
movsb
mov
dec
xchg
xlat
push
out
or
in
sahf
inc
ds
and
inc
test
outsl
mov
xor
mov
subb
fldl
lret
mov
cmp
or
mov
cmp
xchg
jmp
ffreep
jnp
xor
popa
in
mov
test
mov
fnstcw
aad
add
add
jp
fsubrl
jge
ds
loop
cmp
xchg
mov
mov
outsb
push
ret
push
mov
dec
fwait
aaa
pop
or
test
or
cld
sti
jp
insb
sbb
bound
leave
pop
dec
push
pop
xchg
filds
ja
mov
mov
rorl
lods
add
inc
stos
mov
inc
mov
jb
or
xchg
inc
xchg
imul
lods
nop
flds
clc
add
mov
or
push
sub
fwait
dec
xorl
repnz
repnz
cmp
cmp
pop
and
dec
dec
ret
mov
repz
clc
mov
jl
mov
sub
mov
imul
cmpsb
mov
fstpl
out
xlat
sarl
xchg
xchg
push
in
leave
iret
sub
pushf
mov
xchg
repnz
push
test
in
sbb
int3
mov
test
push
and
imul
setae
sub
inc
cmp
outsl
leave
push
nop
push
std
ret
lds
cld
and
cmp
xor
cmpsb
sbbb
pop
mov
adc
mov
sub
aaa
mov
in
or
push
or
popa
imul
int3
ss
inc
sub
nop
das
enter
out
xchg
mov
mov
imul
aas
mov
call
pop
cld
push
rorb
dec
mov
aam
icebp
inc
in
hlt
sarl
sti
inc
inc
mov
dec
dec
adc
push
icebp
enter
movsb
ljmp
and
loop
mov
fildl
mov
sbb
jne
clc
pop
pop
clc
jbe
sbb
jmp
shll
sbb
push
sbb
js
add
cmp
mov
mov
icebp
or
fiadds
push
jb
xor
add
aas
sbb
ljmp
outsl
pop
push
popa
or
xlat
cmp
insb
mov
inc
add
jb
xor
and
icebp
inc
push
dec
pop
adc
daa
sbbb
mov
xchg
xor
lcall
pop
fcomi
inc
inc
popa
push
push
js
mov
xchg
fildl
mov
push
imul
or
add
sub
outsl
icebp
inc
add
mov
mov
or
pop
sbb
mov
pop
cmpsl
repnz
cmp
movsb
fimuls
ret
cltd
sub
xor
lea
icebp
sti
xor
loop
insb
xchg
mov
fldlg2
fimuls
mov
mov
sbb
and
orb
jne
fs
pop
test
arpl
loop
sbb
mov
dec
pop
fcmovnbe
mov
xor
xor
hlt
sub
ljmp
test
iret
loop
stos
xor
mov
push
mov
pop
shlb
mov
pop
cmpsl
scas
cwtl
lret
push
xor
inc
cld
sub
sbb
pop
mov
fwait
cli
lret
jbe
xor
popa
pusha
xor
sbb
lods
jno
push
fildl
sti
subl
mov
pop
fs
and
push
push
mov
in
pop
inc
nop
in
cmp
lock
mov
add
jno
in
int
andb
cs
push
and
xchg
inc
and
aam
fcoml
testb
sub
mov
notl
or
sbb
add
shlb
xchg
into
enter
fdiv
je
ret
and
mov
sub
cwtl
jl
mov
stos
xlat
xchg
in
int
in
adc
ljmp
xchg
out
pop
ss
iret
jne
int3
sahf
cltd
lock
push
lods
jae,pt
imul
pushf
cwtl
pop
add
cmp
cmpsl
int3
mov
mov
push
push
mov
mov
test
cmp
insl
push
dec
and
inc
sub
rcr
jne
pop
mov
push
gs
and
adc
int
lret
sbb
je
cli
cmp
pop
data16
movsb
jl
cmc
cmp
adc
stc
xchg
pop
rcll
jl
test
dec
movsb
aad
adc
add
test
xchg
jo
mov
sub
rorb
clc
jge
dec
scas
in
scas
sbb
popf
mov
xchg
lock
sub
adc
and
loopne
mov
cmp
cmp
lahf
dec
or
mov
xor
sarb
in
loop
mov
push
push
and
jae
or
js
into
jne
lds
ja
xor
sub
adc
inc
sub
mov
inc
sarl
iret
int3
ja
push
daa
push
adc
mov
aas
jmp
jo
imul
les
xor
push
scas
daa
cli
ret
mov
movsl
ja
daa
cs
pushf
cmp
out
sub
les
loopne
inc
mov
jecxz
jle
ror
into
test
sub
lahf
div
outsl
sbb
shlb
shlb
jae
xorb
mov
ret
push
cmp
jmp
ret
ss
inc
filds
imul
aad
xchg
mov
add
xor
popa
add
jmp
mov
lret
rclb
lock
sub
mov
ja
push
dec
mov
mov
call
xor
lcall
mov
test
aad
pusha
stc
cwtl
subl
call
lea
test
loopne
add
rclb
out
push
mov
sbb
data16
pushf
and
pop
shrl
dec
int
push
mov
mov
andb
cmp
fnstenv
push
sub
mov
insb
test
pop
pop
mov
outsb
sbb
jle
iret
movsl
dec
stos
out
out
and
fadds
dec
pop
cmp
icebp
xchg
test
mov
test
ss
sbbl
mov
mov
cmp
pop
and
inc
add
or
add
mov
xor
test
adc
pop
lods
xchg
cmc
xchg
cmp
cltd
fmuls
fisubrl
in
int
pop
je
inc
scas
jl
jb
addb
adc
pushf
loope
dec
mov
xor
push
imul
inc
dec
shlb
pop
popa
lcall
push
lea
mov
out
dec
in
push
xor
pop
in
aad
cmp
pushl
mov
mov
fs
icebp
add
jl
add
mov
enter
cmpsl
inc
mov
mov
lods
sbb
xchg
push
rcl
or
adc
lcall
cmpsl
mov
sub
cmpl
aas
push
lcall
adc
popf
add
ljmp
cs
int3
inc
mov
and
mov
jle
jmp
divb
jecxz
push
inc
push
pop
mov
jbe
adcb
fisubrl
ss
aaa
pop
idivb
mov
mov
pop
mov
test
mov
lods
outsl
sbb
testb
jnp
push
sbb
das
sti
or
jmp
jns
js
data16
loope
stos
push
mov
or
push
outsl
daa
aam
add
inc
xchg
scas
testl
paddsb
mov
sbb
push
ret
fildl
pop
add
test
ss
mov
mov
jge
add
iret
mov
cmc
ficompl
cmc
xlat
lahf
leave
sub
addr16
shll
test
fistps
sbb
das
cmc
pop
jnp
repz
and
div
lock
jecxz
mov
mov
lret
repnz
push
xchg
pop
mov
clc
fdivrl
jl
stos
lahf
jbe
std
push
bound
in
sub
add
stc
mov
and
mov
into
out
xor
xor
adc
sub
out
fcmovnu
jp
mov
mov
mov
aam
mov
pop
or
push
push
or
pop
mov
cltd
mov
add
fs
mov
test
mov
rorb
lahf
push
mov
stc
call
rolb
dec
push
mov
lahf
xchg
pop
aas
notb
iret
cvtpi2ps
std
and
xchg
pop
jle
and
push
jns,pn
out
inc
xadd
jg
cmp
hlt
repz
cld
jne
mov
pop
pop
das
pop
stos
cmp
pop
mov
push
mov
addr16
xchg
int
pop
std
cmp
sarl
cmp
jns
mov
inc
mov
adc
mov
cmp
sub
pop
pop
enter
lret
inc
rolb
scas
xchg
cli
mov
mov
mov
pop
adc
aad
and
lahf
sub
stos
lods
and
cli
mov
mov
inc
int3
cwtl
jmp
gs
inc
push
sub
sub
cmp
insl
jmp
pop
aaa
sub
mov
mov
sub
das
add
inc
mov
jbe
in
or
xor
xchg
xchg
dec
ja
push
iret
pop
cwtl
and
repnz
xor
jb
push
sbb
lods
loopne
leave
and
mov
mov
cwtl
push
and
mov
pushf
jg
sub
hlt
add
cli
sti
mov
jo
push
xor
xor
dec
push
adcw
mov
sbb
mov
les
filds
imul
push
or
cmpsb
add
jmp
outsl
xchg
push
jb
call
fldcw
nop
jae
popf
xchg
inc
xor
out
push
mov
jb
in
add
movsb
xor
xor
popa
stos
mov
subb
jle
loopne
pop
lds
cwtl
add
and
enter
ds
divl
adc
push
das
cmp
push
pop
enter
push
in
mov
lds
inc
or
add
pop
add
fwait
xor
movsb
testl
das
pop
lahf
jge
insb
lret
scas
leave
add
loop
loopne
jno
xchg
or
in
mov
inc
dec
addb
xchg
cwtl
insb
test
and
sti
out
les
push
fucom
lea
cmpsb
in
push
pop
add
and
lods
push
inc
ja
dec
xchg
sbb
loope
je
or
das
sub
jae
lahf
fcomp
mov
clc
jmp
cwtl
pop
sbb
in
andb
sub
dec
outsb
and
xchg
imul
xchg
cmp
lods
lret
mov
push
icebp
jne
xchg
add
fiadds
sub
pusha
cli
push
mov
xchg
mov
sarb
aad
dec
pop
je
mov
mov
pop
lea
cmpsb
cltd
xor
pushf
aad
xchg
cmp
dec
cmp
ja
rcl
and
pushf
push
jmp
daa
call
loope
in
xchg
fimuls
adc
pop
loope
lret
fs
push
popl
sbb
cmp
push
sbb
test
dec
or
pop
ror
pop
std
lods
inc
mov
loop
pop
xchg
lods
out
jbe
pushf
mov
jb
cmp
les
mov
imul
xchg
loop
lea
int
mov
dec
mov
ret
pop
sbb
mov
scas
pop
out
imull
popl
lret
xor
loop
stos
sbbb
mov
js
addr16
jne
mov
dec
in
xchg
inc
push
out
sti
dec
fwait
popf
push
fnstenv
in
test
pop
stos
inc
lods
loope
jbe
sub
movsbl
ficomps
mov
into
dec
mov
jle
pop
xchg
mov
stc
mov
leave
das
or
adc
add
cmpl
in
pop
arpl
jl
leave
loop
test
in
mov
mov
mov
mov
dec
stc
mov
cwtl
and
xlat
pop
into
repnz
mov
pop
mov
pop
and
hlt
int
aas
mov
cmpsb
ljmp
mov
fidivrl
dec
loopne
pop
xor
iret
push
movsb
lret
xchg
es
fldt
sub
jle
jb
jns
jbe
xchg
sarl
jl
and
iret
pop
mov
mov
mov
mov
enter
outsb
scas
mov
inc
in
inc
ud1
clc
mull
mov
cmp
dec
and
arpl
jns
ret
sub
shl
mov
add
stos
xchg
pop
dec
ss
shlb
sub
sbb
mov
mov
fstpl
adc
push
and
mov
sub
jecxz
lods
js
sbbb
and
sti
fistps
dec
in
xchg
hlt
ja
add
mov
or
xchg
or
aam
mov
lret
cmp
dec
push
jbe
and
je
dec
inc
or
aam
lret
stos
lcall
jbe
xor
jno
mov
and
add
icebp
sbb
xchg
xchg
cmp
dec
cmp
xor
je
stos
sbb
test
cld
out
add
mov
rclb
scas
loope
push
adc
cmp
repz
rcr
add
fidivs
loope
les
lds
test
push
mov
popf
js
js
jnp
and
mov
iret
rcl
mov
xor
scas
sahf
push
fcmovbe
mov
push
test
test
leave
in
pusha
sahf
addr16
mov
outsb
es
or
pop
fdivr
mov
popf
push
mov
imul
dec
dec
push
push
adc
or
and
pushf
les
cltd
push
popf
xchg
repz
pusha
xor
pushf
inc
cwtl
fdivr
mov
mov
xor
or
aad
inc
cmp
popa
sbb
stos
cld
popf
ds
hlt
adc
scas
lcall
xchg
mov
xchg
mov
lock
mov
cmp
dec
aas
jmp
mov
inc
dec
out
mov
into
dec
pop
aad
sub
fsubrl
ss
push
xchg
pop
sbb
lock
jne
xchg
xor
jmp
lret
addr16
inc
jne
push
cmc
ret
push
movsl
outsb
adc
xchg
mov
dec
stos
xchg
fdiv
adc
imul
loopne
std
and
jnp
add
fwait
test
loop
and
jle
sub
xchg
mov
and
jge
jg
ja
aas
sti
adcl
mov
pminsw
bound
push
in
adc
jo
bound
and
mov
jge
xchg
fwait
jo
mov
and
xor
jnp
into
dec
or
pop
das
ret
pop
mov
jle
cmc
and
sub
mov
mov
shll
in
sahf
adc
fstpl
rclb
push
mov
jge
mov
loop
inc
mov
sahf
mov
cmp
adc
lahf
mov
inc
int
adc
sbb
sbb
fadds
cltd
jg
mov
cld
jge
ja
imul
out
xchg
leave
mov
ljmp
jnp
inc
push
or
std
in
rol
or
sbbl
jb
loope
aaa
bound
lret
das
pop
lea
xor
in
adcl
ljmp
sub
dec
xchg
cmpsl
jmp
insl
dec
cs
push
out
icebp
cs
inc
adc
in
lea
adc
out
xchg
je
sahf
mov
mov
push
icebp
je
pop
sbb
aas
ret
sub
mov
lret
jbe
sar
pop
dec
add
sub
jns
lahf
jecxz
mov
test
loop
push
push
mov
and
adc
pop
cltd
es
inc
call
jecxz
sbb
daa
aas
outsb
mov
sbb
add
mov
cmp
jae
mov
pop
push
call
add
or
out
pop
loopne
cmp
movsb
dec
or
repz
jne
fidivl
mov
jg
push
jns
cld
mov
add
adc
cld
loopne
mov
mov
nop
out
cmp
sahf
shl
fisttpl
mov
insl
sbb
cmp
xchg
pop
xchg
pop
jmp
jle
inc
dec
add
mov
jp
or
ret
inc
ds
aad
es
fs
cmp
cmp
dec
adc
fcmovnbe
and
icebp
sub
xor
notl
and
jp
loopne
arpl
mov
inc
call
jno
ret
push
lahf
xor
das
xor
adc
in
aam
jg
outsb
or
fnstcw
data16
das
lret
push
cld
push
imul
and
andb
mov
sub
mov
mov
or
and
sub
xor
mov
mov
mov
push
lea
sbb
pop
and
cmc
rorl
or
add
inc
cmc
xchg
shrb
lds
sub
sub
ljmp
add
pop
mov
sbb
js
sahf
mov
sahf
dec
lcall
xchg
xchg
or
jmp
jl
sbb
or
movsl
pop
lea
pop
inc
leave
mov
out
int3
sbbb
mov
inc
pop
pop
pop
lock
mov
lea
mov
movsl
dec
push
push
sub
pop
gs
in
ret
sub
adc
mov
fldt
inc
fbstp
or
popf
dec
les
push
popa
std
push
adc
inc
je
and
aas
xor
inc
push
sub
xor
pop
in
add
lods
inc
out
xchg
sbb
in
test
pop
int
push
adc
lock
xor
repz
jecxz
push
cmpsb
test
test
cld
sbb
mov
add
popl
add
test
js
push
icebp
dec
or
outsb
jo
inc
sbb
adc
cltd
in
in
jmp
xchg
pushf
hlt
pop
inc
and
pshufw
cwtl
mov
xchg
jp
sub
sarl
push
jno
inc
sbb
mov
jle
imul
inc
negb
xchg
or
and
std
ds
iret
addr16
shlb
mov
push
or
xchg
push
and
imul
dec
or
push
aaa
pop
mov
scas
dec
loop
insb
aaa
adcb
sub
mov
jp
pop
sti
xchg
pop
loop
xchg
sti
shl
arpl
bound
stos
loope
pop
xchg
inc
push
lret
dec
and
adc
iret
out
lods
or
xchg
push
inc
jmp
mov
adc
add
fdivrs
push
bound
loopne
sbbl
and
mov
das
jb
test
std
cmp
mov
lret
adc
mov
aad
mov
xchg
dec
aas
cld
sbb
bound
push
mov
mov
insb
xchg
cltd
enter
rcll
adc
fisubl
add
sbb
inc
jns
or
leave
lcall
arpl
repz
stos
dec
cwtl
add
arpl
adc
mov
jbe
sbbl
lods
shlb
pusha
xlat
xor
or
ud0
push
mov
sbb
push
adc
imul
xchg
jns
test
popf
rclb
sbb
add
push
xchg
mov
inc
das
add
mov
sbbl
xchg
les
xlat
and
aas
pop
inc
and
push
xor
in
pop
das
in
dec
cmp
and
shlb
sub
decb
inc
mov
inc
popa
jg
or
or
xor
out
xor
gs
call
mov
mov
es
jge
loopne
mov
sub
pop
nop
mov
sub
or
test
pop
cmc
lods
and
cmpsb
lcall
pop
xor
repz
test
mov
icebp
leave
xor
cmp
mov
mov
mov
pop
pop
cmc
gs
xchg
mov
dec
inc
out
das
test
popf
sub
adc
push
lds
dec
std
cli
pop
mov
arpl
lret
and
pop
jg
repnz
fisttpll
scas
push
shlb
adc
mov
pushl
fcomps
sbb
enter
outsb
mov
or
or
xlat
cltd
pop
cwtl
xor
std
mov
push
es
subb
mov
pop
int3
cmp
fs
mov
mov
aas
arpl
push
insb
push
sarl
shlb
cmp
leave
mov
test
inc
insb
fcoms
pusha
mov
or
mov
je
or
in
dec
sarl
fstps
dec
loop
cmp
cmpb
scas
lock
mov
sahf
sbb
add
fadds
lock
out
mov
test
xchg
lahf
lea
add
inc
or
repnz
xchg
lret
inc
jmp
mov
jge
fdivl
iret
dec
or
outsb
jne
in
test
lcall
hlt
ds
popf
fldcw
sbbb
push
mov
push
or
push
add
stc
les
dec
test
pop
clc
mov
lods
faddl
loop
pusha
push
inc
lds
jnp
sub
call
adc
nop
jae,pn
scas
cltd
inc
jg
inc
fwait
or
cmp
jl
ja
out
dec
ds
les
sub
shl
popf
pop
daa
jg
mov
push
xchg
inc
jg
jae
xor
mov
leave
dec
mov
mov
mov
sahf
insl
xchg
push
mov
adc
dec
sub
sahf
cmc
mov
aad
add
xor
mov
fildl
lods
idivl
adcl
loop
and
mov
mov
pop
jmp
jbe
shll
inc
sbb
cmp
and
out
sub
inc
add
jo
lahf
add
sub
ljmp
inc
stos
adc
xchg
sub
enter
add
mov
cmp
inc
enter
je
mov
sub
cmp
mov
xchg
aaa
adc
scas
cli
sub
pop
xchg
sub
mov
sub
xchg
out
aad
cmc
inc
cmpsl
pop
stos
add
jb
mov
outsb
idivb
and
mov
mov
xor
cmp
std
inc
dec
mov
stos
or
sbb
std
mov
mov
dec
imul
xchg
mov
adcb
add
popf
add
imul
mov
push
fcomps
faddl
push
or
fldenv
xchg
lahf
roll
inc
mov
insl
scas
data16
pop
jo
pop
xor
aas
mov
xchg
imul
in
clc
lods
ret
lcall
push
inc
inc
out
imul
scas
push
mov
out
pushf
dec
sahf
adc
int3
mov
fsubl
int
inc
scas
ljmp
add
cmp
out
in
inc
mov
and
add
mov
push
push
adc
test
xor
sub
inc
int3
xor
lea
in
fsubrs
add
adc
outsb
xlat
mov
rclb
dec
fldl
lods
mov
pop
sub
or
mov
adc
icebp
call
fidivrl
add
inc
sbbb
pop
arpl
and
dec
inc
or
mov
add
fidivl
dec
or
stos
jp
test
jl
jns
test
mov
outsl
mov
mov
xor
jmp
dec
and
jo
push
adc
bound
sub
in
jne
cmp
cmp
mov
andl
push
stos
sub
mov
out
outsb
mov
das
addr16
out
mov
filds
add
jb
jo
sbb
repnz
push
lods
ljmp
pop
xor
jp
push
mov
xor
jecxz
jl
pushf
sbb
into
dec
fcoml
movsb
out
jo
fildl
pop
adc
mov
aam
movsb
ret
jle
sti
in
ffree
repnz
mov
mov
lahf
mov
dec
mov
jle
jae
xchg
push
and
dec
dec
inc
dec
mov
and
sti
scas
stc
mov
in
stc
sub
imul
mov
sbb
pop
data16
xor
and
rep
shlb
cmp
andl
xor
es
adc
cli
dec
cmp
add
push
test
in
or
mov
dec
mov
rcl
mov
mov
cmp
mov
xor
xor
mov
push
mov
andl
in
in
add
xchg
xor
into
fs
push
movsb
outsb
xchg
adc
stos
enter
push
inc
mov
outsl
xchg
mov
cld
cmp
pushf
and
movsb
push
iret
inc
mov
xchg
lret
movsb
xor
movsb
and
xor
subb
jno
js
push
out
push
cmpsl
lcall
jns
outsl
addl
call
lods
jne
icebp
cmc
hlt
push
clc
push
xchg
pop
cmp
sub
cmpsb
insb
lea
loope
lahf
scas
or
push
outsb
hlt
ret
call
sbb
adc
test
xchg
add
and
mov
pop
dec
mov
gs
and
fimuls
arpl
scas
pushf
enter
mov
dec
pop
jae
pop
sarb
adc
lock
imul
aas
testl
insl
and
das
out
fdivl
loop
fimuls
lods
or
jg
adc
push
cwtl
and
cwtl
push
pop
or
test
push
inc
jo
mov
xor
adcb
cmp
pop
fmulp
jne
xor
ss
loope
inc
sti
gs
and
fs
call
push
aad
je
fists
jnp
dec
mov
adcb
addr16
and
test
xchg
fdiv
jp
mov
adc
dec
ds
inc
inc
lahf
and
cmp
add
arpl
xor
sbb
mov
pop
lock
mov
mov
adc
imul
mov
fidivl
and
dec
ja
iret
ljmp
add
add
addr16
and
test
mov
cmp
lds
or
mov
xlat
lcall
adc
fwait
mov
out
sub
cltd
and
xchg
loope
sar
call
xlat
in
inc
xorb
or
nop
adc
xor
mov
mov
cmpsb
mov
lret
or
or
fmuls
scas
mov
movsl
pop
and
pusha
test
mov
mov
cmp
push
imul
testl
loopne
outsl
push
enter
push
cld
stos
cmp
insb
jmp
cmpsb
stos
loop
dec
inc
and
es
xor
add
addb
jge
and
sbb
or
dec
cmp
add
loop
stc
repz
ret
add
out
push
inc
xor
or
sub
push
or
inc
xchg
test
jle
lock
mov
jae
shll
insl
mov
out
daa
cmp
mov
rcrb
and
cltd
fwait
and
cli
loopne
lods
dec
fld
adc
push
or
mov
xor
js
ss
add
add
mov
int3
and
insb
jne
and
idivb
add
mov
xchg
jecxz
push
sub
push
dec
jae
movsb
scas
clc
jnp
xor
xor
lahf
lahf
jae
xorb
or
cmpb
out
or
fs
ret
pop
loope
loopne
adc
popf
xchg
xchg
cmp
frstor
leave
cmovl
cltd
shrb
or
lock
hlt
lods
push
cmc
sarb
pop
mov
rolb
sbb
mov
adc
scas
push
add
int3
dec
cld
mov
addr16
adc
sub
lock
and
fldl
stos
cwtl
jecxz
out
mov
mov
daa
icebp
addr16
dec
std
ret
jmp
out
pop
int
jmp
imul
sti
mov
cmp
sbb
push
adc
daa
fdivr
inc
mov
add
jbe
leave
in
shl
movsb
mov
add
or
arpl
add
push
mov
movsb
stc
sub
cmp
out
cmpsb
xchg
loope
pop
cmp
cmove
mov
xchg
repz
jge
cmpl
jns
cld
in
shrl
inc
je
cmp
sub
sub
push
clc
mov
xchg
lea
lds
movsb
jo
loope
int3
pop
lcall
push
xchg
in
stos
mov
or
shl
jnp
mov
mov
cmp
xchg
push
in
test
mov
cmp
jne
xor
dec
mov
nop
dec
pop
icebp
sub
data16
data16
push
sub
mov
cmc
nop
dec
adc
jmp
sbb
repz
jle
fxch
push
cmpl
arpl
push
pop
and
jl
xlat
daa
insb
sub
pop
jg
jle
dec
stos
ret
ds
jbe
outsb
dec
imul
clc
inc
jbe
sub
and
adc
jbe
inc
lret
fadds
xor
xlat
les
in
shrl
ds
adc
lahf
mov
fsubl
sarl
jg
in
inc
add
mov
pop
and
aam
jo
arpl
movsb
cmp
int3
rorl
out
daa
rcrb
mov
jo
popa
sub
aam
mov
mov
insb
xchg
push
xor
sub
jno
insl
jp
aaa
sbb
neg
shll
fidivrl
mov
movsb
sbb
cmpb
mov
popf
fisttpll
pusha
nop
fdivp
jge
pop
inc
xchg
mov
jmp
lods
inc
sbb
ds
nop
cmp
jp
or
movsl
xor
push
lds
cmc
adc
push
subl
addb
ds
mov
mov
or
mov
loope
adc
mov
mov
mov
sub
and
adc
movsl
fstpt
loope
mov
xchg
fstps
jns
sbb
jecxz
sarb
lcall
mov
add
mov
mov
push
rcrl
xor
push
ds
dec
mov
mov
xor
xchg
pop
das
pop
mov
jmp
pop
call
sbb
mov
mov
cld
push
xchg
loope
bound
cld
stc
dec
aaa
pop
mov
mov
xor
cmc
test
adc
mov
cs
jnp
or
push
jns
stos
lea
jno
adc
loope
fstpt
adc
and
cmp
in
xor
push
out
pop
nop
pop
pushl
out
xchg
or
mov
cs
mov
ja
add
ljmp
cmp
fs
cmp
hlt
mov
cmp
jne
jo
lock
jne
js
aaa
adc
pop
mov
popa
dec
push
movsl
mov
xchg
ret
mov
mov
jnp
pop
inc
lea
xchg
lret
aam
inc
out
cltd
or
jp
mov
repnz
pop
mov
or
gs
mov
lods
inc
data16
mov
add
push
sbb
push
jae
jg
fsubs
inc
pop
andl
push
push
jp
push
jge
test
mov
insb
das
enter
addr16
call
mov
jecxz
cmpsb
pop
mov
sbb
out
xchg
jnp
lds
sub
pop
fcmovne
xchg
jmp
xchg
inc
aad
dec
std
shrb
test
out
mov
je
xlat
mov
aad
dec
mov
shrl
jmp
nop
push
cltd
mov
shrl
rorb
jnp
dec
fs
xor
int3
rcl
fistpl
leave
ret
fsubrp
rorb
les
jmp
je
and
sub
jae
sbb
pop
adc
pop
and
xchg
repnz
add
mov
out
idivb
mov
xchg
scas
jge
jecxz
les
sbb
jne
xchg
mov
mov
icebp
inc
cltd
fisttpll
xor
cmp
lods
adc
sbb
mov
mov
and
std
insb
out
mov
aas
add
add
lds
repz
ljmp
sarl
popl
ss
dec
rorl
rcrb
fbstp
aam
xchg
or
sub
pop
ror
pop
dec
ds
mov
cwtl
into
out
or
call
xor
stc
pusha
scas
cwtl
in
fwait
mov
inc
pop
and
subb
and
xor
jmp
push
pop
inc
imul
mov
movsl
push
sub
repz
or
ficompl
add
mov
adc
mov
pop
shlb
push
add
and
xor
xchg
lret
in
cwtl
cmpsl
pop
orl
pusha
add
pusha
aad
and
cmp
push
adc
or
ret
and
cmp
popf
jno
inc
or
mov
loopne
mov
aas
xor
cmp
in
push
lods
sbb
clc
in
add
lcall
int
xchg
add
add
mov
scas
mov
sub
cwtl
iret
cmpl
clc
lods
xor
aas
cli
outsb
lret
out
pop
mov
inc
adc
sbb
mov
adc
push
jbe
cmp
mov
push
xor
xlat
xchg
je
xchg
fnsave
cmp
xchg
pop
mov
loop
dec
ret
or
imul
cmp
into
in
cld
icebp
jl
jne
sbb
adc
adc
push
ss
adc
jmp
sbb
xlat
mov
sarb
xor
mov
push
aaa
inc
jmp
in
movsl
cld
jnp
fucomp
or
pusha
xchg
push
push
mov
xchg
in
mov
fidivrl
inc
adc
sbb
inc
sbb
fidivrs
sub
int
js
idivb
fidivrl
clc
cmpsl
push
and
lods
out
mov
stos
nop
inc
ret
sbb
jae
adc
fs
fdivp
ss
and
fs
inc
shlb
xchg
das
jge
out
mov
push
dec
jns,pn
aaa
ljmpw
jbe
inc
jge
mov
jnp
js
mov
and
pop
push
fnstcw
mov
stos
scas
mov
mov
and
pop
push
inc
fisttps
les
shrb
pop
lcall
push
sbb
or
mov
loop
fldenv
or
mov
lea
aad
mov
jmp
cmp
cltd
push
or
js
adc
sbb
mov
pop
ds
les
ss
pop
sub
lahf
movsl
leave
imul
cmpsb
insb
adc
les
pusha
or
pop
lock
test
test
shr
out
xchg
out
es
mov
rcl
mov
push
and
jl
mov
das
leave
cli
xchg
push
stc
sbb
in
clc
inc
and
aad
jle
mov
inc
sbb
imul
jecxz
mov
push
push
imul
jmp
add
sahf
add
leave
jne
repnz
and
ljmp
inc
push
repz
xor
push
insb
icebp
add
dec
shll
test
mov
cmpsl
aam
jmp
bound
rcll
in
cmpsl
mov
xchg
push
mov
cli
lock
jns
and
push
into
sti
mov
repnz
test
enter
ds
loop
lods
outsb
xor
inc
movsl
add
mov
std
or
and
insb
jmp
dec
daa
pop
mov
jp
adc
ficomps
hlt
push
in
lds
dec
mov
aad
sub
mov
in
les
in
ficompl
out
cli
sbb
cs
jo
sub
decl
xor
aam
dec
sahf
and
dec
das
adc
mov
lret
lods
insb
rorl
jno
dec
int
rcrl
mov
test
sbb
push
fcoml
rorl
add
cmc
out
sub
jb
decl
jmp
dec
xor
arpl
sub
push
adc
xor
daa
jecxz
shll
loope
inc
jecxz
mov
mov
mov
add
gs
sarb
pop
dec
xor
dec
mov
cmc
mov
sti
cmp
jmp
scas
xor
mov
or
mov
adc
aas
aaa
cli
push
xor
or
and
out
sub
mov
sbb
xchg
out
mov
mov
push
lret
jno
or
pop
stc
jmp
loopne
mov
fdivr
outsl
in
popl
lea
and
and
inc
nop
int3
pop
xchg
lahf
jo
bound
xchg
pop
cltd
cmc
in
es
jno
mov
pop
fs
pop
jns
int3
ljmp
call
ljmp
aaa
dec
ljmp
cmpsl
xlat
mov
xor
call
aas
mov
jg
lcall
and
sarl
loop
clc
sbb
test
pop
push
sub
jmp
jle
lods
sbb
mov
fisubrs
and
outsl
cmp
sbb
das
loop
sti
xchg
and
jle
and
fucomi
jg
pop
push
xor
in
rorb
in
gs
in
scas
add
call
jmp
filds
inc
aaa
add
repnz
sub
jp
xchg
fimull
pop
or
daa
in
ds
fnstsw
and
adc
aas
stos
aas
insl
sbb
das
mov
jmp
dec
mov
sbb
bound
jns
mov
push
fiaddl
inc
push
out
test
sub
stc
jecxz
or
adc
jp
cmp
cs
adc
xlat
fwait
push
and
int3
xchg
mov
xchg
cmp
mov
ret
mov
enter
inc
or
mov
cmpsl
xor
xor
add
xchg
mov
and
hlt
iret
mov
out
imul
or
addr16
lcall
xchg
shrl
add
test
sbb
push
fsubp
sbb
fwait
rolb
and
and
lods
mov
adc
add
outsl
xchg
fstpl
movsb
push
dec
lea
test
adc
adc
xchg
aam
sub
mov
lcall
jg
sub
push
sbb
rorb
sbb
aas
cmp
mov
or
mov
cmpsl
cld
je
lea
add
popa
xlat
sub
cmp
inc
jns
les
out
fldenv
jmp
es
xchg
scas
cmp
jne
sbb
psubd
pop
stc
lock
push
fmuls
push
mov
push
xchg
mov
cmp
fldenv
in
rol
adc
mov
mov
pop
mov
mov
in
push
mov
xchg
sbb
stc
push
into
movsl
mov
push
and
mov
invd
in
mov
mov
xchg
and
or
and
mov
stos
pushf
push
loopne
jge
loope
dec
fildl
fisubl
shrl
pop
cmc
movsl
orl
loope
jbe
push
loope
shll
dec
mov
aaa
sub
ja
gs
sbb
pop
movsl
mov
adc
push
mov
push
sub
pop
push
push
roll
adc
dec
stos
dec
xor
lods
pop
repnz
in
mov
ret
jge
xor
leave
jle
cwtl
pop
cld
sbb
movb
pusha
mov
jo
out
test
pop
fs
loope
inc
int
dec
mov
shl
dec
mov
jno
les
xor
sbb
inc
mov
loop
sti
sbb
dec
xor
scas
cmpsb
std
add
je
mov
push
xor
mov
ret
mov
dec
cld
leave
rorl
push
mov
xlat
and
je
jno
xlat
lds
insl
add
push
lret
shrb
and
arpl
out
out
mov
xchg
jle
mov
dec
shl
jo
pop
pop
pop
mov
inc
jae
mov
fstpl
push
out
lcall
jge
dec
je
out
add
jecxz
pop
ficompl
gs
movsb
lods
fs
popf
clc
jecxz
aad
mov
jns
jo
div
mov
xchg
mov
xchg
loopne
jo
data16
and
icebp
test
loop
jo
and
and
sarb
xchg
push
shlb
mov
popa
mov
mov
xor
addr16
inc
lods
insb
roll
or
cmp
lahf
inc
push
xor
lahf
filds
add
scas
rorl
cltd
enter
fsubrl
movsl
repz
sbb
out
mov
or
leave
sub
sub
cmpsb
orb
test
mov
test
add
mov
loop
notl
shlb
adc
pop
es
inc
ja
jp
or
add
xor
inc
pop
mov
or
movsl
test
movsl
outsl
aas
jnp
adc
scas
mov
clc
outsb
imul
pop
or
cmp
les
push
sub
cmp
adc
cmp
or
int3
daa
adc
xchg
jl
jo
popf
and
sub
jno
lret
out
dec
scas
loop
inc
and
jle
fs
push
shll
out
pop
out
repz
dec
pusha
out
movl
call
xchg
pop
sti
cmpsb
push
pop
push
mov
iret
jmp
or
aad
jg
test
fucomp
cmpsl
fnstenv
and
out
bound
shlb
addr16
mov
repnz
roll
xor
mov
adc
adc
mov
pusha
lods
enter
and
negb
leave
gs
dec
xlat
cwtl
ss
add
enter
repnz
dec
mov
cmp
jg
aad
ficompl
inc
nop
fisttps
push
in
adc
sub
push
xor
popl
or
push
or
pop
cmp
into
mov
fcmovu
sbb
dec
insb
sbb
out
sub
imul
ljmp
and
jge
nop
out
sbb
xchg
stc
aad
sbb
mov
inc
ret
repnz
sbb
ficompl
arpl
movsl
xor
jbe,pt
xor
pop
mov
mov
rcr
popf
into
jae
dec
pop
frstor
push
adc
add
into
ret
mov
add
cmp
jmp
enter
cmp
push
in
stc
jne
xchg
cmp
jne
add
out
aaa
loope
lds
jge
push
inc
cmp
je
pusha
jbe
mov
or
and
iret
sub
or
and
mov
mov
scas
push
xchg
inc
inc
lahf
fistl
cmp
mov
inc
arpl
loopne
cmpsl
and
js
mov
push
sub
sbb
fdivp
xchg
lods
fistpll
addr16
sbb
stos
push
jl
cmpb
xchg
mov
dec
fiaddl
sbb
loop
popf
dec
add
sub
add
mov
xor
or
and
ror
push
stc
adc
nop
cmc
ja
xchg
testl
inc
jmp
lret
filds
pop
sarb
xor
shll
jb
sbb
jbe
push
add
mov
pop
enter
inc
cld
cmp
lret
loope
notb
aaa
mov
data16
mov
cs
lods
imul
adc
dec
pop
mov
jo
adc
nop
and
jg
cmp
shlb
addb
lahf
int
xchg
ficoml
icebp
mov
jae
js
popa
lds
scas
shll
or
pop
adc
sub
add
push
adc
xor
jb
sbb
in
test
fwait
popf
arpl
inc
push
mov
pushf
jo
adc
shl
lock
cli
idivl
adc
jle
sahf
mov
jo
inc
lahf
cmpl
imul
les
jg
icebp
call
mov
lea
jb
push
adc
cmc
jnp
sbb
popa
adc
ljmp
imulb
nop
bound
sti
pop
loope
mov
ss
popf
pusha
add
std
mov
sub
xor
mov
jo
or
mov
cld
scas
loopne
inc
jb
mov
add
inc
dec
adc
scas
dec
es
dec
sti
js
xchg
xchg
mov
mov
std
fnsetpm(287
shlb
dec
jecxz
pop
adc
fistl
adc
push
enter
cmp
mov
cld
shrl
push
lret
test
cmp
mov
loope
jl
mov
mov
nop
adc
xchg
paddsb
mov
add
arpl
xchg
sti
or
aad
cld
add
jo
pop
pop
scas
lahf
mov
jp
aad
adc
and
insb
lock
sbb
cmc
test
out
jno
inc
push
ja
lds
push
mov
push
ror
push
jg
cmp
push
fstl
faddl
or
lods
jo
rolb
add
push
push
jne
mov
pop
add
xchg
add
sub
addr16
mov
mov
pop
mov
adc
and
inc
xor
adc
test
in
push
inc
lock
sub
pop
movsb
mov
adc
dec
pop
and
sub
inc
aas
lcall
fldcw
int3
pop
lds
lea
test
fmuls
sub
in
mov
dec
pop
aam
std
aam
pop
adc
lods
stos
push
and
in
test
fists
cli
mov
in
sbb
in
repz
rcrb
xor
mov
and
xor
jae
in
ret
cmp
insl
push
int
jbe
aam
sub
cmp
cmp
vpcmpgtd
addb
sub
jne
aam
int3
inc
mov
out
insl
sub
dec
pop
and
lock
sbb
sbb
das
sub
leave
jecxz
mov
mov
pop
mov
xchg
pushf
dec
mov
fwait
data16
mov
jno
pop
in
filds
add
cmp
xchg
mov
lea
in
aad
jnp
int3
inc
xchg
mov
jb
pop
mov
adc
mov
xchg
mov
enter
mov
sbb
pop
nop
orl
sahf
sub
mov
inc
xor
mov
stc
mov
mov
lds
push
into
mov
push
ret
cli
ds
adc
sbb
rolb
and
arpl
xchg
mov
jae
hlt
add
xchg
mov
addr16
xchg
mov
add
out
movb
rclb
out
mov
add
pop
es
push
fildll
cli
into
mov
mov
shll
sbb
shrl
imull
adc
and
mov
icebp
in
sarb
mov
xor
pop
sub
sbb
mov
inc
pop
lods
stos
loopne
shl
mov
scas
lods
push
popf
gs
dec
cmp
push
or
jo
test
jnp
lret
push
repnz
sbb
xor
repz
mov
xorl
or
inc
mov
jle
ja
aad
sub
je
aaa
aaa
mov
cmp
cld
dec
push
lods
adc
and
add
adc
pop
aam
arpl
jne
dec
jle
std
mov
fldl
cmc
xchg
xchg
mov
mov
xlat
cmp
xor
mov
xor
pushf
mov
in
cmpsb
or
aam
rclb
imul
es
imul
mov
cld
fldcw
dec
scas
or
xorl
jns
cltd
ljmp
popa
mov
xchg
add
cmp
sti
cwtl
push
nop
push
call
sbb
push
dec
adc
inc
in
add
dec
mov
lods
or
mov
ss
jo,pt
jge
int3
dec
inc
lahf
sbb
xor
adc
dec
stos
dec
inc
imul
faddl
xor
push
out
mov
sub
mov
outsl
dec
movmskps
inc
mov
jbe
imul
sub
inc
movsl
sub
push
fsts
out
xbegin
daa
sbb
xchg
adc
xchg
sahf
inc
cwtl
outsl
or
jl
sbb
inc
sti
pushf
jne
jp
jne
addr16
sub
cmc
jge
fdivr
popa
sub
scas
into
and
ja
flds
sbb
out
push
jbe
mov
mov
cwtl
inc
push
mov
psubusw
push
mov
out
fwait
pop
cs
mov
jge
es
iret
shrl
ret
inc
xchg
fwait
mov
std
lods
cli
mov
add
stc
add
subl
push
xor
sti
adc
mov
mov
rcr
ds
mov
adc
push
mov
ljmp
jbe
call
icebp
xchg
and
lea
pop
mov
andb
cmp
xchg
mov
lea
fcmove
dec
stos
xchg
mov
sbb
mov
inc
cmc
jg
ja
sarb
push
call
ret
sarb
mov
lods
jl
ds
adc
lahf
movsb
sub
mull
mov
nop
sub
adc
fbld
fs
fldl
mov
and
mov
lods
pop
fwait
push
in
leave
out
push
push
movsl
sbb
cmp
lds
loope
out
or
mov
sub
shl
sbb
mov
test
pop
imul
sub
pop
ljmp
mov
lds
cmpsl
fimuls
lea
pop
jp
test
mov
xor
xlat
cmp
movsl
adc
jae
into
mov
ficoms
loop
mov
xchg
and
in
ljmp
mov
lret
push
xchg
call
inc
xor
lea
js
adc
inc
xchg
xchg
xlat
mov
cmp
cltd
pop
jns
mov
or
pushf
lret
pop
insb
mov
mov
imul
jl
jecxz
dec
in
aam
push
jle
xor
cmc
test
std
ja
mov
pop
negb
push
stc
jns
movsb
dec
pop
mov
mov
enter
outsb
test
and
insb
xchg
ljmp
cmp
into
push
call
inc
in
cltd
aam
sub
xor
ja
xchg
mov
cmp
add
jp
mov
lcall
mov
xchg
popf
or
sbb
push
sbb
add
lods
lret
mov
js
aam
jo
lods
test
fwait
inc
jl
shll
arpl
pop
xchg
push
lcall
cmp
test
in
call
sub
adc
jno
lcall
push
or
push
inc
dec
je
cld
mov
mov
mov
in
jmp
ss
jo
inc
mov
mov
loopne
cmc
push
cld
sub
jb
mov
pushf
lods
adc
dec
mov
sbb
xor
sbb
mov
push
js
shr
mov
xor
and
cmpsl
out
ror
or
mov
jb
lret
jecxz
imul
dec
jnp
cmp
arpl
inc
sbb
js
pushf
mov
push
jp
inc
push
sbb
push
jl
aas
ja
pop
inc
idiv
xchg
sti
jle
jp
mov
push
stc
dec
fbld
jecxz
sub
iret
xor
pop
imul
and
outsl
sarl
and
test
test
mov
test
sbb
fcompl
in
scas
hlt
ss
inc
loop
cmpsl
mov
flds
cmp
fidivrs
testb
imul
add
inc
loopne
inc
aam
mov
int
scas
and
out
int
mov
mov
scas
pop
mov
mov
bound
adc
dec
xchg
sub
cli
movsb
ret
xor
js
dec
pop
shl
cmpb
rcll
xchg
cmc
mov
leave
inc
or
cmpsb
cmpsl
jmp
pop
add
push
and
loop
dec
xchg
push
movsl
or
cli
shrl
ret
repz
pop
movsl
xchg
je
loope
push
sub
ret
cmp
or
negl
lock
pop
adc
lret
insl
flds
mov
sub
mov
xchg
leave
sbb
repz
dec
aam
scas
and
fwait
sbb
pop
inc
je
nop
inc
mov
sbb
repz
es
xchg
xchg
gs
jns
repz
ret
lcall
int
fwait
ret
popf
stc
iret
xlat
xor
adc
test
sti
sbb
xchg
fstpt
mov
pop
xor
inc
ljmp
xchg
inc
add
rclb
xchg
and
jl
jbe
xchg
out
fistpll
mov
repz
adc
push
mov
out
xor
jge
stos
mov
loopne
or
in
xchg
aaa
jno
xchg
sti
enter
and
outsb
rcrb
cmp
shll
or
rclb
mov
xchg
loopne
sub
sbb
das
xlat
jno
add
movsl
loopne
in
testl
dec
mov
sub
scas
sar
cli
loopne
add
xor
mov
mov
cs
add
pop
and
adc
inc
out
and
or
test
mov
inc
test
mov
je
sbb
je
int
jns
es
iret
push
jb
lods
pop
lret
jae
shrl
clc
jo
pushf
xchg
mov
cmpsl
mov
mov
push
xchg
xchg
in
popf
xchg
lcall
and
lret
dec
lock
inc
mov
icebp
adc
lea
icebp
or
jb
xchg
loope
les
fnstcw
push
enter
sub
or
ret
data16
add
ffree
aad
bound
lret
pop
pop
jnp
lods
or
inc
lods
sbb
mov
xchg
push
stc
sbb
lret
dec
loop
mov
sbb
loope
or
add
in
pop
stos
stos
adc
mov
push
sub
cmpb
pop
es
xlat
fwait
sbb
inc
lds
mov
sub
pop
in
insb
aas
mov
mov
mov
lcall
fdivrl
xchg
mov
movb
hlt
mov
jmp
mov
lret
nop
add
ds
addr16
divl
xor
and
in
and
jmp
sti
cmp
popf
in
pop
mov
sub
movsb
cmp
and
bound
mov
sbb
sub
lret
popa
repz
arpl
daa
sub
icebp
bound
imul
aam
dec
adc
xlat
scas
sbb
add
dec
mov
fisttpl
popf
pop
mov
roll
aam
imul
cmc
and
rcrb
aad
insb
mov
push
cmc
jmp
loope
jns
and
xchg
sti
das
pop
daa
push
jns
mov
out
icebp
pop
bound
hlt
push
ss
jl
adc
stos
rorb
pop
out
int3
jecxz
in
popf
in
stc
mov
ja
fisttpll
movsb
in
test
aaa
adc
lods
or
mov
in
jmp
cmp
ja
fidivrs
test
dec
inc
push
mov
dec
or
mov
sbb
in
inc
subb
or
lods
mov
popa
mov
jno
push
inc
mov
outsl
mov
inc
add
jmp
and
fcomi
scas
sbb
aas
rol
or
mov
sub
jp
das
mov
mov
mov
fucomi
pop
fscale
fsubs
lahf
int
or
add
push
mov
or
lods
and
mov
aam
sbb
inc
mov
add
in
jl
cmpsl
jbe
movsl
testl
test
jne
gs
dec
cli
mov
fistps
ds
data16
dec
out
and
dec
in
icebp
push
jg
cwtl
cltd
cmp
icebp
outsl
lds
jns
jp
fdivs
push
jg
aam
loope
outsl
ret
fdivs
pop
fiadds
dec
xchg
pop
mov
or
rorl
xchg
mov
fnsave
mov
lods
outsb
divl
cmpsl
mov
mov
aam
mov
nop
leave
cmp
or
imulb
xchg
fimull
or
mull
jle
jge
mov
jbe
dec
ss
jb
out
imul
jb
test
fisubs
sbb
fwait
aas
lds
pop
xor
lds
fisttps
leave
dec
sbb
adc
adc
push
mov
mov
and
out
faddp
mov
push
shr
mov
xorb
fld
xor
ret
mov
jbe
sbb
xchg
out
mov
mov
pop
imul
inc
je
inc
pop
js
pop
fistl
fsubrl
outsb
mul
mov
sub
inc
inc
ret
mov
lock
popa
loop
movsb
ret
orb
pop
mov
fst
addl
mov
or
lods
mov
xor
inc
ja
in
push
mov
add
es
leave
sbb
sti
xlat
xor
rclb
fldz
dec
lret
insl
push
adc
add
xor
lret
jecxz
cmp
in
xor
out
or
dec
jbe
sti
sbb
pushf
cmp
push
and
pop
pop
in
int
jmp
aad
fs
lcall
xor
repz
repz
xchg
sahf
push
sub
dec
dec
aaa
pop
mov
xor
jne
sbb
popf
sbb
into
cltd
mov
nop
mov
sub
movsb
lret
pushf
and
fisttpl
pop
imul
pop
mov
cwtl
pop
or
jl
nop
xchg
js
es
jne
cmp
mov
lea
mov
inc
ss
xchg
fcoml
in
fs
pop
xor
in
jmp
lahf
jbe
cmp
and
and
sbbl
jo
push
pop
out
dec
scas
xchg
adc
mov
icebp
mov
add
outsb
and
rorb
xor
shlb
in
cs
jl
into
jp
mov
sbb
mov
icebp
cwtl
adc
icebp
imul
inc
mov
stos
insl
adc
push
xor
jle
pushf
xor
adc
stos
jo
mov
mov
lock
pop
in
loope
pop
mov
sbb
sub
inc
iret
jno
iret
pushf
xor
or
jnp
inc
cli
fisubrs
push
hlt
outsb
mov
popf
pop
pop
sub
xchg
aad
sbb
jp
mov
ret
rol
push
dec
adc
cmp
mov
adc
mov
js
mov
push
enter
out
inc
sahf
sbb
mov
jns
jae
test
insl
xchg
or
sbb
inc
push
popa
fcompl
into
xchg
or
push
fsts
jne
jecxz
fidivs
mov
hlt
mov
jne
rcr
inc
xchg
mov
pop
jp
outsl
add
les
lods
jae
mov
sbb
sub
out
outsl
cwtl
mov
pop
add
pop
subb
push
cmp
js
enter
mov
push
ss
sub
stos
xor
iret
test
inc
loop
jne
xchg
jno
ds
sbb
add
iret
cmp
rcrb
jno
loop
mov
push
aad
jns
sub
add
or
add
lods
jb
and
rol
insl
iret
cmc
sar
je
std
je
sbb
movsl
out
xchg
pop
loop
dec
jle
stc
inc
mov
lcall
push
lock
scas
cmc
out
mov
xchg
inc
inc
roll
sar
cmp
jbe
jp
loop
jbe
dec
inc
adcl
cs
ss
cmp
iret
inc
leave
cs
inc
and
push
mov
lahf
push
pop
cmpsb
in
jecxz,pt
ret
and
mov
mov
fcomps
push
je
push
cld
add
and
inc
mov
push
jae
leave
int3
push
cmpsl
out
out
insl
fdivs
stc
lock
sbb
clc
pop
stc
pop
push
leave
movsl
sbb
test
out
add
adc
mov
movsl
aam
bsf
stc
aad
imul
xchg
jo
sub
std
les
lock
insl
jb
ret
cs
stos
ds
jae
fwait
pop
xchg
add
sub
cmp
stos
out
pop
add
pushf
push
mov
out
and
loope
loop
inc
repnz
mul
lods
adc
out
insl
loop
push
or
inc
mov
cmp
push
sbb
ret
sbb
out
movzwl
imul
iret
outsb
out
or
arpl
pop
lahf
lds
scas
sub
test
sbb
push
jbe
push
add
or
xor
and
adc
jbe
jmp
mov
or
mov
std
out
sahf
dec
xorl
sbb
pop
into
andl
mov
mov
in
out
test
js
sar
icebp
sbb
into
fldt
dec
cmc
lock
jne
push
test
add
lock
out
xor
adc
mov
cmp
popa
mov
mov
jmp
ss
sub
adc
in
popa
or
insl
loopne
enter
outsb
and
dec
xchg
fisubrl
pop
pop
xchg
int3
rcr
fcmovne
lcall
cli
mov
addr16
and
lret
mov
fldenv
stos
scas
jle
insl
push
mov
imul
movsl
dec
push
enter
add
xchg
pushf
mov
imul
mulb
out
nop
ljmp
pop
mov
cmpsb
lret
imul
aad
dec
and
xchg
push
lcall
cmp
popf
push
repz
mov
mov
xchg
jecxz
mov
fnstcw
jb
mov
in
mov
rcll
xor
push
or
aas
push
jecxz
pop
nop
aas
cmp
xchg
pop
sbb
jmp
es
xchg
jg
push
or
movsl
cmp
hlt
dec
test
fwait
add
adc
mov
xchg
mov
fistps
fldenv
pop
cmp
lahf
and
int
mov
imul
out
add
or
and
jg
dec
xchg
gs
add
push
in
popf
mov
ja
inc
fnsave
push
add
add
adc
mov
cmpsl
cmp
pop
or
cmp
add
ret
or
repnz
sub
xchg
jle
fsubrl
xor
push
movsl
xchg
outsb
xor
stos
cli
lahf
inc
std
jnp
cmp
adc
cs
loopne
dec
cltd
sbb
lcall
push
cmp
enter
mov
mov
lock
and
xchg
push
push
jmp
fwait
js
mov
pop
and
mov
orl
jo
mov
adc
xchg
push
aam
outsb
fadds
jno
popa
leave
lds
lock
lock
popa
inc
push
fsubrs
jp
movsl
lods
xchg
mov
jp
push
inc
jge
movsl
in
roll
dec
inc
nop
fimull
adc
sarl
stos
adc
mov
sbb
xor
imul
insb
mov
ja
mov
arpl
xchg
inc
out
adc
xor
test
aad
xchg
mov
pop
dec
sub
mov
popa
inc
pop
mov
aaa
cmp
leave
adc
xor
dec
and
adc
clc
subb
adc
mov
in
xchg
cs
fisttpll
mov
inc
push
pop
sti
pop
pop
jmp
sub
xlat
mov
push
or
dec
pushf
jno
fwait
push
repnz
addr16
bnd
pop
and
pop
fcmovb
adc
mov
and
bound
aaa
jae
push
addr16
pop
xor
loopne
cmpsl
stc
cmpsb
ror
lcall
cmp
clc
cmp
insl
add
dec
sarl
outsl
dec
adc
xor
stc
xor
lahf
add
push
pop
subl
cmpsb
lea
and
pop
and
pop
cld
inc
loopne
mov
daa
sbb
mov
xor
and
jbe
cmp
xor
cmpsl
mov
sbb
xchg
fmull
mov
xchg
in
jge
xchg
decb
sub
pop
pop
mov
push
ret
repnz
mov
lcall
or
mov
adc
inc
test
ret
cmpl
sbb
scas
lds
call
lcall
inc
cmp
outsl
movq
in
add
out
or
jp
js
insb
push
js
or
fcoml
rorl
loop
rclb
push
test
jae
sub
out
sbb
fucom
sub
sti
jl
clc
xchg
cli
les
out
sbb
jle
push
outsl
clc
jno
dec
sbb
mov
dec
sub
sub
out
imul
lcall
sub
sub
inc
add
sbb
sub
cwtl
aas
popf
aas
lods
clc
pop
repnz
lods
sub
call
dec
mov
jecxz
jne
cli
and
jl
mov
cmpsb
cltd
ret
dec
jns
ds
test
fs
xor
lods
loop
jmp
jae
mov
pop
pop
shrb
fs
lods
pop
scas
pusha
out
dec
inc
loopne,pt
rolb
pop
dec
scas
in
cmp
stos
rcr
inc
push
icebp
push
in
sub
inc
repz
jl
roll
call
add
pop
xor
mov
push
sarb
data16
jmp
mov
mov
rorb
mov
mov
jns
dec
xorl
xor
jmp
cld
sarl
cltd
scas
jae
push
addr16
decb
pop
inc
xchg
adc
xor
and
dec
cmc
das
add
lds
cmp
mov
rolb
dec
pop
aam
test
mov
gs
push
jp
ret
je
xchg
xor
lcall
test
lods
loopne
cwtl
sub
cmpsl
mov
icebp
pop
aas
rclb
fwait
dec
fdivl
stc
loop
stos
mov
sbb
pop
call
fwait
sbb
push
loope
fwait
dec
sub
lea
jno
pop
lea
imul
fcoms
loop
stos
sub
sub
xchg
and
in
pop
or
data16
inc
and
fildll
mov
jns
popa
std
icebp
jge
push
loopne
outsl
mov
adc
mov
incl
cmp
pop
adc
movsl
into
sbb
push
ret
lea
mov
js
pop
jl
jecxz
lock
push
stos
mov
aad
or
stc
inc
sub
and
clc
fistl
hlt
sti
jmp
mov
push
mov
xchg
loope
push
gs
cmp
xchg
push
xor
pop
repz
mov
out
dec
ret
pop
push
cmpsb
in
xor
dec
add
push
icebp
push
jne
scas
pop
ja
xorl
push
push
lods
test
pop
ret
push
sub
inc
ja
inc
pop
cmpsb
les
dec
sub
xchg
mov
sbb
or
int
stos
cmp
stos
mov
call
jae
popf
sbb
lcall
and
std
mov
int3
cmc
fsubrl
ljmp
int
int
fnsave
inc
stos
or
pop
add
or
pushf
or
xchg
call
adc
and
idivl
jge
imul
popa
popf
and
jge
test
shlb
pop
addr16
aam
cwtl
repz
or
push
jge
push
leave
jle
fcomps
fimull
jne
pop
push
movsb
in
sbb
push
andl
insb
add
adc
cmp
scas
scas
data16
xlat
shrb
int
push
xor
and
repnz
imul
sbb
std
push
push
sarl
js
dec
fisubl
or
xchg
cs
push
sahf
fcoml
pushw
shrb
xchg
call
pop
ss
jmp
push
into
mov
push
fstps
in
shrb
int
dec
shlb
insb
add
push
fwait
psadbw
mov
xor
and
mov
movsl
out
pop
or
xchg
sub
push
sbb
sbbl
mov
push
cmp
repnz
sub
pop
ja
push
dec
mov
out
xchg
scas
addr16
or
shlb
out
cld
call
sbb
flds
lret
loope
xlat
fidivrl
loopne
insb
aam
push
pop
add
nop
ret
or
pop
shlb
xchg
sbb
sub
push
sbb
pop
movsb
jl
test
pop
or
jg
aam
cmc
dec
mov
inc
imul
cmp
pop
sub
add
arpl
mov
fiadds
sbb
sbb
xchg
pop
in
cmc
rcrl
int
pop
arpl
loopne
cmp
mov
mov
mov
adc
cltd
push
test
mov
jg
and
cli
sbb
sub
add
hlt
cwtl
mov
jno
arpl
in
push
push
je
aam
fwait
test
loope
dec
imul
repnz
incl
jp
sti
jle
les
cmpsl
xchg
mov
clc
add
or
pop
inc
out
repz
sahf
mov
test
push
pushf
mov
mov
rorb
cmp
mov
mov
xchg
movsb
loop
shlb
pop
daa
mov
mov
and
insl
mov
mov
mov
jnp
mov
int3
and
lret
add
xchg
pushl
push
fcmove
and
insb
dec
inc
xor
push
fadd
dec
insb
pop
sub
enter
shrl
mov
xor
pop
jge
lods
sub
cmp
inc
outsb
mov
pop
sub
je
jmp
outsb
dec
decb
push
fidivs
adc
mov
add
ds
jl
sahf
adc
add
or
or
sahf
loopne
mov
push
xchg
xor
fsubl
fcoml
jge
test
cmp
push
sbbb
and
jae
pop
mov
mov
fisubs
mov
pop
xchg
ret
xchg
adc
adc
adc
xchg
popa
and
scas
lcall
xchg
movsb
cmp
fwait
cli
cmp
and
mov
inc
imul
mov
mov
and
add
pop
push
or
sbb
push
pushf
push
aas
es
sub
add
mov
insl
lahf
test
or
mov
std
pop
test
icebp
lahf
push
cmp
sarb
and
orb
pop
mov
and
int3
xchg
cmp
sbbl
dec
int3
push
lods
sbb
sbb
mov
cmp
pop
testb
and
push
pop
lret
je
fnstenv
les
push
jae
fpatan
cmpsb
dec
es
aaa
pop
pop
enter
lea
pop
loopne
pop
das
xchg
add
push
test
gs
push
scas
mov
outsl
test
dec
sbb
orb
std
mov
xor
mov
cmp
jecxz
inc
mov
xchg
adc
pop
or
andl
mov
lods
sarb
sub
mov
mov
test
sub
aam
jmp
jle
and
test
adcb
int3
in
dec
push
push
xlat
push
aam
pop
jmp
fwait
and
pushf
inc
xchg
mov
jbe
mov
enter
mov
mov
sbb
jmp
or
lahf
xor
mov
cmpsl
or
push
mov
xor
sahf
js
out
inc
lret
ja
movsl
fwait
pop
bnd
xchg
ret
fs
or
stc
repnz
or
fs
ret
std
push
or
cmp
fwait
jns
xchg
inc
dec
add
jmp
ret
negb
rcr
jnp
ret
fbstp
jle
das
jg
sarb
cmp
mov
movsl
pop
dec
test
enter
sub
scas
inc
and
sbb
daa
pop
pop
stc
push
jp
lock
cli
dec
jmp
int3
push
and
jecxz
cli
in
enter
jb
ljmp
cmp
adc
movsl
sbb
lds
scas
test
scas
loope
ja
ss
add
hlt
pop
test
dec
cmp
scas
push
leave
int
sarl
out
mov
add
fs
imul
popf
rcrl
popf
insb
ret
pop
loop
or
mov
sub
xchg
shlb
push
mov
stos
pop
scas
fwait
add
arpl
adc
fimull
neg
in
mov
sub
and
add
lret
jge
pop
push
faddl
mov
mov
pushf
xchg
pop
out
push
xchg
add
xor
mov
jge
sub
imul
inc
jmp
sbb
cmp
xor
sub
add
mov
add
addr16
cltd
loope
sbb
sbb
in
add
cmp
jno
les
or
push
and
shrl
pop
mov
push
adc
sub
pop
and
sbb
mov
out
in
in
and
mov
mov
stos
adc
sbb
aaa
mov
and
nop
jge
arpl
dec
rcr
mov
jns
push
call
mov
imul
lret
fsubl
ja
sbb
repnz
fstpl
sbb
push
adc
xchg
in
dec
ljmp
fstps
xlat
push
cs
xchg
xor
pop
gs
inc
dec
lds
push
sbb
popa
fcoml
shrl
pop
jb
sbb
rol
inc
pop
adc
movsl
int
roll
cmp
pop
cmpsb
enter
mov
mov
push
into
fmulp
sbb
mov
and
loop
jmp
inc
mov
push
das
sub
js
xchg
loop
in
movsb
orl
jge
mov
pop
cmpsb
push
test
nop
add
adc
jae
jae
lock
call
mov
jg
lcall
mov
cmp
cmpsl
cli
fstpl
sbb
xchg
dec
add
sbb
xchg
mov
call
jne
in
jge
dec
iret
mov
mov
dec
adc
dec
jmp
push
insl
fidivrs
mov
out
jp
lret
out
jbe
pop
xor
mov
pop
cwtl
gs
sub
lahf
aad
mov
cli
add
sub
xor
pushf
sub
mov
test
divb
fdivp
xchg
or
scas
pop
dec
loopne
out
or
cld
hlt
cwtl
push
pushf
fs
sbb
xlat
mov
xchg
cmp
sub
jae
ret
gs
xor
pop
dec
lods
lods
push
push
leave
popa
mov
pushf
mov
push
and
js
push
int
xchg
fimuls
hlt
inc
or
cli
sahf
loop
out
int3
inc
push
adc
pop
xor
mov
sarl
sub
jae
push
sbb
pusha
pop
sub
pop
mov
dec
imull
jno
mov
jge
inc
add
repz
inc
jno
imul
push
dec
hlt
xor
mov
cmpsb
repnz
shlb
hlt
repz
popf
lret
cmp
mov
inc
cmpsl
hlt
pop
das
xchg
dec
dec
out
fimull
mov
stos
pop
out
xchg
popf
sahf
loope
mov
push
push
aam
aas
in
mov
jp
mov
cmp
sahf
jnp
mov
sti
cwtl
insb
rcll
out
lods
iret
rcl
ret
test
rclb
pop
pop
mov
cmp
sahf
sub
icebp
mov
idivl
and
lret
sarb
and
mov
dec
adcb
adc
icebp
and
out
imull
mov
dec
adc
mov
popa
push
js
ret
or
jno
mull
pop
sbb
cmc
sbb
ret
mov
fnstsw
ret
cmp
mov
push
cmp
pop
push
cwtl
push
mulb
push
adc
mov
fimull
jo
call
jb
adc
fcmovnbe
lods
sbb
adc
xor
xor
int3
pop
das
aam
lahf
dec
push
push
pop
push
jns
insl
outsb
arpl
xchg
mov
xchg
dec
pop
shlb
sbb
jno
and
and
enter
jno
sbb
call
into
sbb
mov
insl
mov
ss
dec
aas
dec
or
sarl
addr16
ret
xchg
ja
loopne
add
pushf
lods
aam
lea
ret
cmpsb
out
test
rcl
test
pop
jl
sbb
repnz
movsl
mov
dec
enter
je
repnz
imul
xorb
mov
mov
or
cmp
mov
and
xor
push
inc
sbb
mov
pop
aas
cmp
jne
insb
inc
sbb
test
sub
xchg
ds
or
cli
jl
jg
fidivrs
inc
mov
push
adc
inc
inc
daa
push
inc
xchg
stos
sub
sbb
mov
enter
cmp
pop
sub
enter
pop
dec
cmp
jecxz
pushf
stos
daa
push
call
pushl
mov
xor
inc
in
push
icebp
hlt
imul
add
ffreep
add
adc
push
mov
jbe
je
cld
out
and
syscall
adc
inc
test
xchg
xchg
hlt
push
cltd
and
pop
test
ljmp
push
dec
enter
adc
inc
lcall
push
adc
inc
ret
xchg
jmp
cmp
pop
pop
mov
cli
les
add
xor
mov
scas
fisubrs
cs
cld
lcall
jmp
add
xchg
push
pop
sub
cmp
das
push
and
or
and
pop
add
enter
xorb
inc
stos
sub
sub
mov
push
mov
jbe
lret
lcall
lods
and
xchg
push
sub
ss
cmp
and
out
sub
xlat
pop
add
inc
cmpsb
xorl
push
push
inc
push
das
cmpsl
movsl
xchg
inc
jbe
cmp
cwtl
in
movsb
mov
jb
test
or
ja
mov
enter
lret
dec
cmpsb
mov
mov
scas
push
mov
push
mov
jns
sbb
test
add
data16
push
gs
mov
cmp
dec
aas
xor
mov
push
nop
or
popa
dec
adc
add
jbe
sbb
pop
pop
and
imul
loope
aad
in
aad
daa
and
push
push
lods
out
cltd
lea
cmp
dec
or
dec
leave
push
cmp
mov
pusha
mov
mov
adc
add
in
cmp
or
andb
jmp
mov
mov
mov
stos
mov
xor
xchg
shl
ret
jp
sbb
mull
ja
mov
mov
pop
adcb
loope
or
das
jne
inc
loop
xchg
pop
enter
mov
imul
clc
inc
addr16
scas
push
mov
lea
inc
jae
sti
outsl
in
sub
sub
cmp
popa
sarb
test
repz
and
sub
cmpsl
cmp
scas
mov
mov
int3
enter
mov
loope
push
mov
ret
fcomp
sbb
and
in
push
push
and
sbb
loop
mov
xor
mov
push
mov
int3
adc
or
aad
push
hlt
mov
pop
mov
enter
jge
adc
pop
jmp
cmp
xor
xor
and
add
bnd
pop
das
inc
shl
sub
pop
add
xor
imul
in
xor
sub
xlat
push
aas
mov
test
inc
punpcklwd
push
and
xor
outsl
js
pop
sbb
xor
pop
sbb
in
push
into
rcrl
xor
pop
and
inc
mov
pusha
aaa
pop
movsl
into
pop
insb
push
sbb
aam
cmpsl
into
insb
mov
push
aad
mov
fistps
jns
dec
jle
sub
in
out
mov
mov
push
lcall
or
flds
sbb
bound
pop
add
daa
or
popa
inc
push
lea
push
test
pop
cmp
adc
or
insb
inc
dec
xor
cmp
dec
ljmp
call
int
pop
dec
mov
sbb
or
outsl
pop
push
loopne
mov
push
or
push
adc
jns
nop
cmp
dec
icebp
jns
pop
and
loopne
add
aad
sbb
wrmsr
mov
daa
lcall
sti
jp
jecxz
sub
cwtl
xor
std
inc
and
mov
int
mov
xor
fldt
rol
inc
cmp
pop
jb
rcll
out
sub
sub
add
in
mov
stc
dec
cltd
int
xorb
jle
and
push
clc
cmp
jne
pop
in
jmp
nop
dec
sbb
sub
stos
outsb
sbb
dec
mov
mov
adc
mov
notb
cmpb
mov
cmp
push
orl
jns
clc
jl
push
out
sbb
cmp
mov
int
jae
icebp
jle
sub
and
sahf
sahf
sbb
rclb
int3
mov
sarl
repz
sbb
sbb
insl
mov
xchg
jns
push
in
mov
mov
movl
test
or
nop
push
mov
int3
loopne
cmpsl
sub
xor
add
adc
mov
popf
adc
test
jb
inc
mov
lcall
je
push
jmp
mov
pop
xchg
imul
neg
aaa
mov
and
mov
mov
out
mov
push
lret
nop
mov
jle
xchg
dec
push
aas
stc
cmp
jmp
mov
xlat
mov
imul
jmp
inc
in
pusha
enter
fcompl
sahf
inc
jo
jbe
jl
sub
cmp
sbb
add
dec
push
stos
scas
mov
enter
es
popf
jmp
sub
sahf
test
testl
xchg
pop
jb
repnz
dec
lcall
enter
and
lods
mov
test
in
addr16
arpl
dec
sbb
fisubrl
loop
push
adc
and
inc
insb
push
test
imul
fnstsw
add
std
fucomp
loopne
adc
and
loopne
nop
iret
xchg
cmp
test
je
lahf
mov
es
cld
mov
xchg
pop
add
js
xchg
add
xchg
pop
arpl
push
cld
hlt
shrb
dec
loop
je
jne
dec
in
call
ret
adc
lock
std
adc
xchg
jno
sub
daa
push
and
or
pop
mov
or
or
into
xor
outsb
mov
cmp
and
ja
mov
mov
nop
sti
cmp
cmp
add
pop
xchg
les
pusha
sbb
push
xor
repnz
icebp
mov
loop
or
dec
mov
or
mov
and
add
icebp
pushf
pop
inc
inc
aas
pusha
incl
and
and
or
push
lea
cli
icebp
lods
lret
cmp
adcb
sbb
or
or
sbb
je
je
sub
push
test
test
mov
xchg
push
sbb
out
repz
call
shrb
es
outsb
loopne
pop
cwtl
cmp
mov
sar
mov
pop
jb
in
adc
fwait
pop
cltd
ud0
pop
test
pushf
clc
push
cmp
xchg
sub
xchg
jmp
mov
das
and
pop
insb
cld
repnz
mov
leave
adc
sub
sub
enter
fwait
push
mov
mov
addr16
adc
sub
mov
stos
sub
orb
sub
or
pushf
int
inc
out
xchg
dec
mov
cltd
and
sets
pop
rcrb
je,pn
mov
enter
dec
int
outsb
cmpsl
mov
or
add
xchg
shrl
loopne
adc
mov
mov
dec
shl
pop
scas
mov
dec
lods
push
mov
mov
push
cmc
xchg
flds
adcb
pop
or
fidivrs
dec
sub
xchg
shl
adc
cmp
mov
jecxz
cmpb
lret
sbb
mov
xlat
jbe
mov
dec
inc
lods
rcrl
fists
fidivl
add
jnp
negb
jp
jnp
ss
mov
aad
outsb
push
dec
xchg
fnstsw
out
rcll
jecxz
rol
sbb
pop
mov
sub
jbe
das
jmp
pop
jb
xchg
fcmovnu
fiaddl
push
pop
lods
test
add
test
rcrl
into
sarl
adc
inc
pop
fnstcw
jg
cmp
aam
lods
xor
sub
pop
int
hlt
out
sbb
cmc
xor
subl
js
pop
in
dec
inc
add
or
leave
sbb
andb
divb
outsb
pop
jecxz
push
shr
mov
aaa
shll
daa
loope
fldt
into
jmp
xorb
and
or
xor
mov
cmpsb
lds
not
cli
imul
inc
aad
ljmp
push
add
int
jns
call
dec
cmpsb
add
sbb
xor
jne
lods
fisttpl
mov
mov
out
ds
aad
pop
into
pusha
divb
cmpsb
outsl
scas
xlat
popa
ficoms
and
jns
js
dec
nop
jle
je
shll
or
mov
fisttpl
or
cwtl
loope
test
fwait
jne
xchg
add
mov
es
mov
lds
or
push
jg
cwtl
pop
loopne
xor
mov
jns
repnz
adc
jecxz
sti
sub
cs
pop
adc
sbb
adc
outsl
pushf
adc
ret
cmpsb
pop
inc
out
pop
mov
xchg
inc
cmp
inc
and
jns
cmc
pop
push
sbb
xor
ljmp
out
pop
push
aaa
xchg
scas
jno
push
ss
in
xchg
mov
dec
jo
xor
push
add
je
movsb
jmp
sub
mov
mov
orb
and
add
sbb
fbld
aad
int
push
lods
push
xchg
std
rorl
push
loop
bound
xor
mov
xchg
addr16
inc
cmp
test
test
mov
and
pop
pop
push
adc
inc
arpl
test
les
out
mov
ds
cmp
xchg
pop
lods
rorb
mov
jae
xor
dec
incb
and
cmp
or
push
mov
and
fs
adc
pop
sub
ds
jge
inc
mov
cmpsb
fwait
pop
loopne
inc
jecxz
inc
add
xor
repz
icebp
and
dec
sub
loopne
enter
loopne
fcoms
fstl
lcall
mov
inc
and
sbb
test
test
sbb
outsb
xchg
enter
les
fs
adc
js
icebp
mov
repz
and
push
std
cmpsb
xchg
push
pop
rclb
mov
dec
cmp
inc
fs
jnp
xor
sbb
xor
scas
xchg
repnz
xor
frstor
imul
fisttpl
es
dec
cli
test
cmpl
daa
in
lods
mov
movsl
lods
arpl
imul
mov
in
mov
cmp
cmp
js
into
pop
push
xchg
push
mov
sbb
cwtl
mov
ss
popa
lret
fwait
cltd
fdivrs
add
inc
addb
mov
icebp
jp
lock
arpl
sub
jg
sub
int
sub
fisubl
dec
add
rcrl
ror
idivl
mov
jle
push
mov
dec
outsl
inc
shll
popf
push
sub
aaa
jge
cmp
test
rcr
lods
or
sub
adc
scas
adcb
mov
mov
xor
fldl
cmp
out
xorl
and
subb
loope
dec
lods
mov
loopnew
addr16
mov
mov
lahf
in
call
jge
dec
dec
in
enter
xchg
dec
xor
dec
or
in
movsl
fistl
test
aas
push
mov
mov
xorb
fldenv
push
jle
mov
jge
and
scas
es
sub
cmpsl
mov
inc
test
in
jge
mov
lock
loopne
xor
lahf
and
mov
lret
sbb
cmp
and
fldt
xor
in
bound
pusha
sbb
pushf
cwtl
clc
loopne
mov
adc
ret
push
sbb
scas
pop
inc
outsb
adc
xchg
adc
mov
mov
mov
call
or
add
test
movsl
imul
inc
adc
nop
xchg
xchg
sbb
xor
cs
addb
arpl
in
nop
inc
mov
adc
cltd
iret
rclb
push
dec
pop
repnz
std
fsts
sarb
push
lret
pop
mov
jno
int3
lods
xchg
mov
push
stc
sbb
enter
cld
lret
xlat
or
and
shlb
mov
cmp
jge
nop
das
xor
decl
cmc
test
test
adc
lgs
rclb
mov
outsl
adc
jle
cmp
in
lock
call
sub
adc
sub
jge
jmp
mov
test
dec
fidivl
gs
xor
push
in
fisttpl
and
pushf
mov
aam
xor
aad
push
loope
jmp
jo
dec
ljmp
les
xchg
adc
loope
lcall
xchg
xorb
dec
std
aad
repz
mov
push
cmp
cltd
scas
arpl
out
inc
aas
test
repnz
call
ss
fbstp
jecxz
pop
inc
xchg
aam
mov
es
pop
or
pxor
cmp
aam
push
mov
adc
cltd
popa
stos
mov
adc
mov
mov
dec
dec
aad
addl
daa
jge
cmp
jno
es
out
mov
mov
mov
shlb
sbb
push
orb
dec
or
fistps
test
or
pop
mov
and
lock
in
and
or
mov
add
adc
mov
xchg
sbb
daa
push
xlat
fldcw
xor
int3
fdivs
jle
inc
adc
jg
xchg
pop
lods
out
or
enter
mov
pop
repnz
sahf
outsl
mov
ss
imul
xchg
lcall
jb
mov
fwait
shrb
lods
xor
adc
dec
add
pop
test
or
add
loope
xor
dec
andl
push
xor
gs
adc
xchg
xchg
xchg
and
std
jmp
sbb
stc
aam
mov
cmp
out
pop
icebp
jno
mov
mov
movsl
dec
dec
ss
shl
scas
loope
das
adc
sbb
push
cmpsl
adc
cmp
cmp
leave
cmp
push
cmp
fstl
push
xchg
fs
or
push
xor
call
mov
push
lret
mov
add
mov
dec
inc
sbbl
mov
data16
adc
mov
mov
shr
repnz
jbe
or
fsubs
jmp
xor
mov
out
pop
js
cmp
jle
out
and
jge
loop
mov
call
fiaddl
out
fisttps
xor
mov
incl
inc
mov
jl
mov
ljmp
xor
rcll
iret
fcoml
int3
add
int
add
jnp
xchg
sub
cmpsl
cmp
insb
mov
fisubl
insl
jne
cli
and
jae
ror
lret
sbb
sti
rcr
daa
test
scas
inc
pop
push
lret
loopne
xor
into
push
adc
pushf
xor
pavgb
push
push
outsb
xor
mov
fmull
jne
test
jl
ja
int3
imul
cmp
push
ja
sub
mov
xor
sub
add
repnz
mov
push
mov
add
aas
pop
push
fwait
add
xchg
mov
push
std
imul
addb
enter
stos
xor
or
push
addr16
popf
nop
mov
cmpsl
jbe
mov
out
sub
test
loopne
add
pop
test
icebp
push
mov
outsb
jbe
dec
lds
xor
cmc
jg
aaa
pop
out
xchg
js
mov
and
mov
mov
cmpsb
and
push
fisubrl
push
push
je
pusha
lret
xchg
lahf
mov
es
mov
push
orb
ljmp
rcll
scas
scas
mov
lds
adc
push
xchg
in
inc
sub
sbb
mov
inc
jle
insb
ljmp
xor
js
icebp
pop
leave
ret
test
shr
scas
sub
jl
and
cmp
or
pop
test
sub
pop
in
inc
je
cwtl
xchg
add
fstps
outsb
jb
fisubrl
mov
loop
pop
or
sbb
popf
sbb
xchg
mov
movsl
mov
mov
jg
leave
push
ja
xchg
mov
fwait
rorb
lods
iret
lcall
rclb
filds
push
and
xlat
jb
and
andl
jnp
ja
mov
mov
stc
mov
push
das
in
fsubl
movsb
ret
cmp
out
adc
repz
js
dec
and
repz
xchg
int
scas
loop
lods
out
inc
adcl
lds
mov
outsb
jae
xor
jo
inc
out
pop
mov
xchg
ret
mov
sub
jg
or
jno
or
fwait
mov
dec
or
mov
dec
adc
inc
pop
sbb
sti
das
stos
sahf
out
test
mov
pop
xor
ret
mov
jnp
mov
test
cmpsl
outsb
das
adc
xor
jo
popa
fwait
lahf
jno
mov
pushf
dec
lds
inc
sbb
jo
adc
sub
fcoml
pushf
lds
or
in
or
inc
add
mov
scas
pop
mov
lods
cltd
cmovnp
cmp
ja
xor
daa
sub
out
xchg
lods
push
and
lahf
movsb
lcall
jnp
shl
shrl
test
push
pop
icebp
pop
movntps
or
push
arpl
inc
push
pop
xor
mov
mov
xchg
stos
cltd
xchg
xchg
mov
loopne
add
cli
mov
pusha
dec
int
mov
pusha
pop
sti
jle
mov
in
in
or
insl
ljmp
insl
mov
and
xchg
mov
adc
std
mov
imul
cltd
push
and
push
pop
outsb
sub
mov
jl
jecxz
jecxz
mov
loope
scas
les
pop
repz
cwtl
repnz
scas
push
aam
incl
cli
in
or
cltd
add
adc
mov
loope
stos
jno
js
test
xor
stos
mov
push
fcmovnu
insb
out
mov
adc
mov
das
add
mov
jne
xor
lods
rol
push
data16
jg
sbb
iret
orb
dec
add
adc
mov
cmp
or
scas
lock
xor
mov
ja
sbb
divl
mov
fs
imul
repz
loop
mov
jle
jae
addr16
cmp
addr16
sub
or
incb
push
xchg
inc
das
inc
outsl
test
mov
mov
pop
aad
cli
pop
inc
jns
std
ds
xchg
shrb
mov
xor
sbb
mov
add
scas
cmp
fstpt
js
push
stc
cmp
call
insl
xchg
xchg
dec
sub
mov
mull
pop
or
arpl
push
jns
fucomip
mov
and
out
xor
stos
rcr
loopne
xchg
jg
mov
scas
mov
mov
inc
pushf
into
push
dec
cmpsl
push
std
xchg
push
int
xor
sbb
cmpl
add
ljmp
cld
dec
and
mov
sbb
inc
subl
rorl
push
mov
jbe
stc
add
pop
mov
inc
mov
mov
mov
filds
jbe
xchg
ffreep
es
dec
mov
adc
mov
push
in
int3
in
pop
inc
xchg
mov
mov
cmp
and
sbbb
unpcklps
xor
add
jmp
fdivrs
cwtl
neg
adc
bnd
jne
dec
mov
loop
sbb
or
out
push
cmpsl
cmc
popa
iret
pushf
inc
adc
testl
push
decl
inc
sub
sub
gs
add
sbb
cmp
rol
aaa
push
and
pop
mov
adc
test
pusha
jmp
gs
cmp
or
aas
pop
mov
cwtl
test
push
mov
shll
popa
movsl
add
addr16
push
aad
adc
dec
outsb
fs
fwait
xor
sub
cmp
mov
xchg
mov
std
add
lods
cmpsb
sub
jge
andl
addr16
push
mov
sub
dec
rcll
imul
push
nopl
xchg
sti
add
mov
in
xchg
jp
sbb
rclb
mov
bound
fsub
fisubl
mov
sub
dec
adc
pop
scas
repz
les
leave
push
adc
jnp
pop
lret
les
sub
mov
mov
adc
je
and
shrb
outsb
jp
or
or
sarb
rcl
mov
arpl
xorl
adcb
inc
and
mov
inc
int3
sub
dec
mov
fcomps
lret
movsb
aam
jo
call
xor
sbb
push
outsb
adc
mov
pop
or
xchg
dec
dec
cmp
or
adc
or
inc
out
mov
fnstsw
out
pop
jno
or
fcmovne
adc
add
test
loope
adc
into
sbb
mov
push
pop
or
mov
xchg
jg
fsubrp
arpl
insl
mov
mov
in
out
and
inc
pop
fxch
aas
imul
mov
enter
rcrl
pop
push
scas
cltd
outsb
sete
fdivrs
sub
outsb
in
loopne
call
repz
in
jae
add
pop
ret
xchg
mov
lret
sbb
scas
data16
sbb
or
jmp
push
mov
insl
in
jle
subb
push
jns
stc
out
or
dec
enter
ljmp
and
jg
cmp
repz
mov
orl
fbstp
loop
push
jmp
sub
cwtl
cltd
jno
std
mov
gs
xchg
std
and
sahf
bound
push
shll
and
jo
sub
enter
mov
and
popf
sub
cmpsb
std
cs
lods
xor
adc
pop
dec
inc
sub
xchg
loopne
cmp
adc
movsl
jo
adc
jge
and
sub
imul
loopne
and
push
pop
out
scas
inc
cmp
adc
shrl
push
inc
aam
mov
xchg
push
sbb
mov
add
adc
push
hlt
andb
stc
iret
or
push
jge
jnp
movsl
sbb
and
mov
dec
mov
loop
loope
cltd
pop
adc
roll
pop
dec
call
sahf
js
aaa
jge
inc
enter
pushf
mov
leave
sub
mov
stos
cld
dec
xor
add
xchg
std
fwait
fs
ljmp
popf
dec
or
push
icebp
and
ret
pop
stc
scas
mov
sti
and
popa
in
js
into
cmp
sbb
cmpsb
sub
lea
xchg
mov
or
pop
movsb
push
lcall
add
pop
popf
pop
fiadds
jo
mov
fwait
aas
lods
xchg
xchg
dec
fidivrs
mov
and
mov
pop
xorb
sbb
in
stos
and
push
inc
push
adc
sbb
jns
aam
push
mov
out
hlt
jge
js
dec
fiaddl
jns
imul
stos
js
xchg
cmpb
mov
mov
dec
inc
dec
cmpsl
sbb
mov
aam
aaa
mov
dec
aad
sbb
mov
scas
bound
mov
je
pop
sub
push
out
scas
jne
jmp
cltd
notl
rorl
lds
sbb
addr16
push
lock
adc
lods
pop
scas
jo
fisttpl
mov
xor
test
sbb
push
xchg
mov
add
sub
cmpsb
xchg
aad
mov
ror
mov
mov
cwtl
rcll
and
daa
dec
sti
dec
xchg
cmp
mov
scas
int3
push
test
inc
lret
jg
scas
xchg
es
popf
mov
fistpl
or
popf
lds
mov
cwtl
mov
std
add
pop
jl
cmp
hlt
jno
loope
stos
push
imul
mov
mov
cmpsl
out
dec
cli
dec
inc
std
xchg
test
sbb
cmc
in
aas
cmp
test
into
fmulp
xchg
sbb
inc
add
push
pusha
fists
test
cltd
xor
xor
jle
mov
pop
loopne
in
popa
outsl
mov
movb
inc
push
scas
sar
cmp
add
pop
pop
pop
ja
xor
rcrb
adc
sub
and
cmp
sub
shrl
sbb
jbe
loope
jnp
ret
es
fldt
adc
stos
and
mov
out
cmp
daa
xor
setns
add
sbb
cli
movsl
pop
sbb
jge
add
adc
sbb
sahf
push
sbb
and
lock
mov
push
push
in
or
div
lcall
jl
xor
cmp
lock
outsb
mov
xchg
sbb
pop
lahf
ds
mov
cmp
shl
pop
enter
inc
cmp
push
mov
fadd
or
fcoms
mull
push
shlb
xorb
inc
sbbb
mov
pop
fistpll
ja
mov
faddl
rcrb
jmp
dec
aad
mov
sub
arpl
bound
dec
popf
mov
sbb
pop
out
jnp
jecxz
outsb
vpmaxub
add
sbbb
pop
test
and
jae
dec
enter
jmp
inc
je
dec
and
lret
cli
aad
mov
aam
adc
bound
mov
into
or
daa
xchg
cli
shrl
out
outsl
pop
aam
insb
daa
sbb
jg
lds
and
ret
stos
adc
movsb
and
loope
mov
aas
xchg
sbb
scas
push
pop
movsb
insl
push
xor
dec
mov
add
push
call
call
test
popf
inc
and
mov
mov
or
hlt
sbb
int3
stos
lea
std
int3
ja
cmpsb
sub
sbb
fcoms
je
insl
fsubrs
popf
and
es
cmp
jp
add
ret
in
xor
or
in
lret
mov
sbb
gs
jmp
ss
xchg
roll
loope
jle
test
jecxz
xlat
jno
or
popf
dec
idivb
iret
jns
call
add
loop
pushf
filds
add
or
cmpsb
mov
addr16
loope
in
testl
dec
les
repz
out
pop
jmp
clc
nop
sbb
fildll
push
or
andl
sbb
aam
push
dec
add
jb
stc
mov
dec
scas
arpl
test
inc
sbb
adcl
out
jmp
mov
jecxz
pop
imul
mov
loope
push
push
std
cmp
ds
addr16
push
pop
inc
lods
jge
stc
hlt
loop
dec
jp
push
sbb
jb
sub
fsubrl
imul
ds
inc
xchg
out
icebp
sub
call
mov
leave
mov
cmp
push
sub
inc
push
mov
jnp
cli
add
filds
fldt
test
sub
xor
xor
mov
clc
mov
cmp
lahf
sbb
cld
jae
sub
repnz
add
lds
cltd
and
xor
jp
into
add
loope
mov
jne
icebp
mov
xchg
fistpl
addr16
fdivs
test
fwait
mov
or
nop
jle
repz
pop
xorb
sti
js
testl
lods
insl
adcl
xchg
fst
xchg
cli
sub
pushf
ret
push
movsl
out
lods
jle
lahf
fcoms
cld
xchg
lds
popf
testl
xor
bnd
repz
std
pop
push
sbb
mov
jp
scas
or
add
scas
cmpb
in
push
jne
push
out
cltd
mov
pop
mov
inc
addb
stos
movsl
mov
dec
insb
pop
xor
inc
enter
adc
cli
fadd
in
imul
in
lcall
fs
shll
mov
and
iret
stos
dec
sahf
imul
pop
cmp
pop
cltd
push
mull
jne
leave
fwait
in
adc
addr16
add
sbb
icebp
fildl
sti
push
rol
in
pusha
cli
aad
fcmovb
mov
cmc
sbbb
inc
lahf
stc
or
push
jae
sub
xor
jecxz
stos
dec
lahf
insb
stc
addr16
divb
in
sbb
mov
xchg
pushf
lret
dec
inc
popa
add
mov
out
enter
xor
adc
mov
cmp
cmp
gs
push
mov
jle
jbe
scas
mov
xchg
outsb
lock
ss
cli
add
int3
push
insb
push
rcl
mov
or
mov
xorb
sarl
jge
aaa
in
hlt
adc
aam
sub
cmp
and
xor
xor
scas
add
mov
fimull
inc
push
mov
scas
mov
shrd
ja
pop
push
mov
aad
cmp
mov
cltd
sbb
jge
sahf
and
ds
xchg
and
rcl
mov
xchg
push
inc
movsb
leave
sub
mov
cwtl
adcb
shlb
repz
jbe
les
xchg
sbb
aaa
or
mov
sarl
lahf
lea
out
mov
xchg
fs
adc
ja
imul
mov
test
mov
xchg
sbb
lret
mov
ret
popf
scas
adc
fstl
jge
jns
xchg
out
test
and
mov
pop
inc
jno
mov
sub
ljmp
xchg
cmp
and
pop
mov
or
sub
dec
jo
fisttpl
inc
dec
push
mov
jp
pushf
adc
out
ljmp
push
adc
add
push
dec
jb
fs
inc
inc
sbb
in
add
repz
and
cmc
popf
sbb
sub
pop
hlt
or
movsb
psrlq
dec
mov
add
mov
cmp
pop
gs
cmp
div
mov
inc
mov
aaa
sbb
mov
bound
enter
mov
outsl
add
mov
pop
push
jae
inc
dec
std
loopne
sub
xor
sbb
movsl
xchg
xchg
cld
pop
jg
pop
clc
rcl
jmp
rol
dec
sbb
xor
mov
loopne
mov
jl
out
mov
sub
cmp
xor
lods
jle
lret
add
lds
jns
aam
dec
mov
movsb
push
fists
push
lods
mov
sub
shr
or
icebp
adc
jns
stos
bound
cld
ja
js
mov
cld
xorb
jge
sub
mov
mov
sub
aam
push
xchg
movsl
push
and
sub
aas
jne
push
les
pop
jp
cmp
xchg
icebp
cwtl
jg
pop
lret
popa
adc
jae
outsb
jnp
bound
sbb
aam
mov
fdivrs
jecxz
icebp
jbe
cmc
movsb
pop
dec
mov
aaa
jge
fisttps
lea
hlt
testb
mov
mov
in
fisubl
in
into
push
std
in
mov
arpl
aad
es
leave
jp
pop
and
xchg
test
push
jae
dec
lock
mov
or
cs
add
push
ja
jb
mov
rcrb
mov
outsb
jmp
sbb
sub
mov
loope
arpl
dec
or
and
dec
xor
inc
hlt
jbe
mov
pushf
lods
iret
out
add
and
into
or
inc
cmpsl
aad
arpl
out
adc
xchg
xor
dec
out
arpl
adc
cmp
cmp
add
pop
inc
sub
push
mov
sbb
push
mov
pop
push
outsb
pop
jge
fisttpl
adc
sub
mov
push
int3
xchg
pop
jno
adc
push
push
loope
lret
repnz
push
fadds
xchg
mov
add
repnz
sbb
cli
icebp
pop
shrb
cmp
ss
mov
clc
in
add
and
lea
fcmovnb
fs
lret
inc
leave
dec
popf
loopne
mov
adc
push
aam
or
ret
aam
popa
imul
imull
jno
jp
pop
jmp
xor
test
dec
in
inc
lods
adc
int
pop
xor
inc
or
sub
sub
bound
mov
fsts
cmp
mov
jg
cmp
scas
in
pop
jnp
dec
sbb
mov
add
into
divl
or
out
mov
out
inc
ljmp
push
dec
push
fld
xchg
sub
ljmp
mov
jb
stos
adc
inc
je
les
adc
fiaddl
dec
adc
mov
xor
and
add
mov
jmp
cmp
lahf
sub
sahf
imulb
add
mov
mov
or
fisttps
aam
push
aad
mov
aad
xchg
mov
ret
dec
shlb
mov
movsb
mov
push
jl
sarb
dec
jbe
loopne
imul
xlat
std
movsl
scas
dec
inc
fisubs
mov
adc
inc
lret
add
repz
mov
sbb
repz
movsb
or
dec
outsl
mov
enter
adcl
ret
pop
stc
pop
sub
pusha
add
inc
lret
sub
or
mov
push
jp
stos
out
imul
pop
das
inc
and
cli
je
or
adc
lcall
repnz
enter
and
aam
mov
imul
mov
loop
cmp
push
mov
mov
jo
add
rolb
mov
xchg
mov
popa
mov
sub
xor
jge
xchg
faddl
cmp
leave
dec
shr
sahf
mov
inc
scas
clc
push
and
filds
scas
pop
movsl
sbb
js
mov
jb
int3
icebp
push
adc
jnp
pop
lock
int3
sub
inc
ds
xor
adc
jmp
and
stos
mov
inc
pop
xchg
mov
jb
adc
mov
test
jno
movsb
adc
aad
lahf
jp
xlat
ud1
andb
mov
cmp
call
pop
xchg
adc
mov
js
mov
mov
add
mov
mov
or
inc
int3
pop
pop
xchg
dec
insl
pop
fwait
ss
int3
in
sti
add
push
jge
adc
xchg
data16
sahf
mov
sahf
addr16
popf
cltd
lcall
cmpsl
adc
or
test
inc
xor
mov
cmc
aad
adc
out
jnp
insl
sub
popa
sbb
popa
sub
rcrb
repnz
ret
xor
clc
cld
jb
jae
or
test
lret
push
mov
push
insb
sub
jne
test
cld
stos
sbb
les
lods
pop
cld
cmp
cmpsl
imul
mov
jno
insl
cli
add
stos
cli
push
sbb
arpl
adcb
lods
enter
mov
pop
jecxz
div
mov
push
xor
test
int
es
shrb
dec
inc
dec
push
xchg
xchg
pushf
add
aas
push
mov
or
rcrl
inc
push
xchg
mov
dec
push
and
pop
adc
dec
lahf
pop
fstpl
lret
sub
mov
fdivs
xchg
and
jp
inc
mov
stos
mov
dec
mov
cmp
fstps
bound
add
stos
sbb
or
sub
call
rorb
jg
jnp
cmp
sbb
adc
mov
xorl
xor
icebp
pop
in
insl
cmp
int3
popf
ficomps
push
dec
ret
sbb
mov
or
jecxz
das
or
mov
in
movsl
mov
lods
popa
mov
add
sub
cli
add
fldt
dec
xchg
push
std
xchg
or
call
inc
std
rcl
insl
inc
lcall
out
jne
scas
jp
lret
fisubl
push
lret
outsb
out
push
add
outsb
or
and
out
xor
aad
fwait
iret
loopne
and
and
pop
aaa
mov
aas
add
sbb
xchg
jmp
add
aas
movsl
jne
comiss
add
in
add
mov
sarl
testl
mov
sub
sarl
shlb
mov
int3
sub
lret
mov
xor
mov
mov
xor
add
mov
xor
ja
lahf
cs
mov
and
pop
and
popf
sbb
rcr
dec
faddp
mov
dec
sbb
aam
sub
jg
std
mov
push
inc
arpl
mov
cmpl
xchg
adc
imul
dec
scas
sbb
xor
jb
or
or
push
mov
add
or
jnp
xchg
aaa
sbb
cmpsb
and
dec
or
ret
mov
mov
into
leave
cmp
mov
lret
xor
push
mov
xor
pop
and
in
outsl
or
adc
sub
and
jecxz
jae
inc
cmp
hlt
leave
lock
jb
mov
into
sub
xor
cmc
lcall
push
adc
test
jge
outsb
js
jge
jbe
test
push
lds
push
in
push
movb
fidivrl
sub
mov
fimull
stos
popa
dec
mov
mov
mov
xchg
or
js
in
mov
mov
out
or
or
pushf
fidivl
stos
dec
push
xchg
loopne
cs
out
scas
push
ss
and
push
std
inc
imul
cmp
mov
pop
inc
je
insb
xor
sub
xor
lret
lods
cmp
pop
lods
push
and
aaa
pushf
mov
push
fistpll
cmp
test
sub
int
adc
stos
push
shrb
xchg
push
push
subb
rcll
jnp
push
mov
repz
das
sarl
dec
mov
cmp
mov
lods
add
mov
jns
pop
push
cmpsl
push
nop
xlat
jg
mov
mov
and
test
pusha
shlb
fimuls
mov
imul
xchg
lret
inc
outsl
pushf
cwtl
adc
add
in
mov
test
adcb
mov
jnp
jnp
inc
loopne
mov
out
rol
sti
sub
pop
inc
adc
push
sub
ss
or
cmp
mov
popa
addr16
pop
mov
stos
mov
loop
cs
and
push
mov
jbe
jns
cmp
push
or
push
pop
inc
jmp
test
cld
cmp
xor
test
dec
loop
data16
push
nop
fisttps
shrb
mov
push
jmp
jns
cmp
sbb
in
xorl
pushl
out
sbb
decl
mov
or
jo
mov
xchg
push
adc
sbb
mov
cmp
mov
sbb
lret
testl
xor
inc
mov
bound
jl
xchg
push
shll
mov
cmp
cmp
inc
aaa
sub
test
out
andl
icebp
test
sbbb
jbe
outsb
xchg
mul
ret
push
loopne
xchg
stos
push
in
arpl
testb
adc
fiadds
inc
dec
cmpl
icebp
jecxz
test
sub
fmuls
es
jg
push
ss
aad
andb
inc
pusha
xchg
loope
les
inc
mov
xor
cmp
in
inc
mov
push
mov
fadds
stos
leave
jne
push
add
enter
out
jnp
push
es
push
into
rcll
pop
adc
fxch
fs
es
mov
jp
testb
pop
sub
shlb
ljmp
dec
ret
xor
je
in
in
jg
repnz
mov
bound
add
mov
repz
xchg
mul
or
xchg
lcall
push
or
sti
fistpl
test
out
push
mov
lret
xlat
sahf
or
dec
pop
add
or
aam
mov
sub
mov
mov
sbb
cs
in
mov
lock
push
mov
jns
scas
xchg
fsub
pop
insb
xor
scas
push
cld
push
setae
add
add
dec
loop
ffreep
fiadds
jmp
outsl
lods
cs
insl
fwait
mov
outsb
out
mov
pop
jbe
fmulp
shll
sub
sbb
inc
mov
xchg
inc
mov
push
mov
leave
mov
cmp
pop
mov
addr16
pop
fs
inc
jge,pn
and
and
fs
lea
xchg
push
rcr
or
and
out
pop
push
push
sbb
lods
cmp
cmp
xchg
std
test
arpl
mov
adcb
xchg
pop
arpl
adc
in
into
repz
shrl
pop
cmp
adc
xor
into
push
xchg
bound
xchg
pushf
sub
dec
into
mov
mov
xor
mov
add
shlb
outsl
shl
test
das
imul
stos
push
mov
scas
jle
dec
inc
xchg
dec
lea
push
jb
and
outsb
ror
or
cmp
in
das
and
out
hlt
mov
pop
mov
push
je
mov
dec
or
inc
push
or
add
xchg
and
repnz
lret
bound
fbstp
shrl
lcall
push
adc
jle
stos
dec
bound
jne
ss
and
cmp
lods
xorb
and
dec
mov
jp
dec
inc
mov
lds
push
cmpl
shll
mov
mov
in
js
xchg
mov
rclb
repz
mov
dec
mov
sub
ret
cmpsb
xchg
jae
mov
jns
lods
xor
loope
scas
ljmp
scas
sbb
inc
dec
sub
cmp
push
fs
xor
mov
inc
es
sti
cli
push
jne
fstpl
push
stc
push
push
jne
pop
add
adc
cwtl
in
adc
movsb
inc
jl
mov
mov
divl
xlat
inc
xor
sbb
in
pop
sbb
sbbb
je
jg
add
das
fstpt
adc
lock
das
push
out
into
movsb
jbe
cmp
pusha
orb
pop
popf
cld
fistps
cmpsl
shll
mov
aad
add
cmp
fidivrs
rorb
sbb
add
imul
mov
pop
xor
or
lcall
or
dec
sub
pop
fcoms
push
cmp
into
lods
stos
inc
scas
mov
add
sbb
and
gs
xorl
inc
and
cmp
mov
lahf
mov
cmp
scas
pusha
pop
aaa
imul
cmp
cmpsl
fstpl
mov
bound
cltd
or
nop
fnstsw
push
add
inc
repz
jg
in
or
mov
mov
inc
mov
mov
hlt
jle
xor
xor
fsubrl
and
gs
inc
lcall
mov
inc
pusha
ljmp
adc
cmp
dec
fisttpll
mov
add
jp
je
fmull
jmp
imul
xchg
jle
sub
mov
dec
es
test
maskmovq
testl
jo
test
loop
dec
cmp
aad
rcrl
jecxz
sub
mov
icebp
mov
push
push
fidivrs
pop
add
mov
les
sbb
or
xchg
sub
inc
cli
mov
repnz
cli
and
cmc
jge
aam
pop
rclb
mov
sub
pop
mov
fsubrl
inc
inc
out
sbb
mov
out
sahf
sti
add
xchg
xchg
shlb
icebp
push
fwait
jge
pusha
lcall
jo
stc
dec
or
sbb
jge
sub
enter
add
inc
test
cltd
pop
mov
cmp
shrb
push
add
dec
out
insl
fildll
mov
mov
stc
cltd
mov
mov
or
fs
dec
sub
jae
cmp
mov
ds
xor
inc
hlt
or
rcrl
jne
pop
inc
mov
add
push
cmpl
mov
loope
jb
pop
test
mov
dec
jl
outsb
sbb
imul
movsb
push
pop
insl
xchg
fst
xlat
mov
out
flds
aas
scas
inc
xor
adcl
dec
push
fdivl
pop
pop
push
cmp
fildl
mov
test
mov
pop
sbb
mov
cmp
dec
or
push
icebp
xor
cmpl
xor
call
add
test
test
push
mov
and
in
mov
ret
pushf
mov
jecxz
mov
movsl
mov
and
jp
test
cmpsl
int
mov
cwtl
in
adc
jns
mov
fs
pop
xlat
out
sbb
sub
mov
push
push
cs
test
push
xlat
cmp
adc
push
add
xor
js
fs
scas
imul
das
mov
inc
fildll
bnd
out
pop
lods
mov
aam
int3
mov
data16
xlat
mov
pushf
push
in
push
pop
sub
sub
out
test
lods
xchg
add
lock
cmpsl
mov
push
pop
mov
xchg
add
or
xchg
mov
jge
movsb
mov
jns
loopew
in
clc
popa
pop
pushf
notl
pushf
shll
push
add
xlat
xor
or
sbb
lods
and
loopne
test
into
lcall
adc
jae
inc
mov
cmp
outsb
pusha
sbb
ss
shlb
mov
icebp
out
cmp
ja
or
lret
push
jns
cmpsb
mov
xchg
cmpsl
rclb
aam
push
mov
arpl
enter
repnz
mov
shl
push
jb
ja
push
test
xchg
mov
mov
lret
out
mov
cmc
aad
mov
mov
out
clc
cmp
mov
adc
bound
imul
dec
jns
aas
divb
xor
sarl
mov
repz
dec
aaa
jbe
lahf
movsb
out
fisttps
test
and
repz
add
fdivp
out
stos
mov
scas
mov
pop
lock
xor
sub
lret
stc
sbb
rcrl
push
or
lahf
push
mov
sub
mov
mov
adc
jg
mov
je
and
mov
or
pop
pop
and
filds
inc
inc
or
loop
sbb
and
scas
gs
movsb
xchg
es
in
pop
cmp
jecxz
xchg
cmc
orps
pop
arpl
ficoml
and
mov
mov
roll
dec
mov
sbb
sbb
shll
jl
jmp
jg
and
ss
int
pop
jp
mov
push
out
push
mov
iret
xchg
test
es
cli
out
adc
cmp
push
jae
mov
adc
xrelease
jp
dec
ja
push
int3
ljmp
movsb
sbb
clc
push
add
jno
lahf
or
inc
add
xlat
outsb
leave
gs
nop
mov
mov
call
rcrb
adc
daa
scas
fisubl
iret
cmp
movsb
add
movsb
cwtl
std
dec
inc
dec
js
and
jp
iret
inc
mov
pop
hlt
insl
adc
dec
insl
pop
cmp
dec
js
cli
lret
cmp
test
push
aaa
jae
ret
notl
xor
jae
sbb
add
js
pop
pop
andl
es
je
inc
add
pop
mov
cmc
dec
out
mov
sar
mov
cmp
sahf
test
add
xchg
lds
xorb
or
jnp
aaa
dec
popf
or
in
push
insb
xchg
mov
mov
sub
or
sub
fwait
jb
or
test
in
xor
xor
cwtl
ja
stos
cmp
jp
xor
push
lahf
pop
jae
ret
add
bound
pusha
mov
stc
xor
into
out
cmc
jmp
dec
imul
out
testb
mov
add
dec
cld
lahf
lret
lods
test
das
inc
xor
fucomi
lret
mov
cltd
pop
nop
shl
aam
mov
push
push
sbb
stos
ds
mov
mov
scas
flds
mov
push
enter
jnp
ret
add
adc
xchg
cmp
push
mov
lret
rcrl
xlat
dec
stos
mov
dec
les
pop
mov
dec
sub
xor
fnstsw
push
or
inc
jns
sbb
lock
cmc
int
inc
fiadds
mov
popf
push
xlat
fstps
test
lea
out
lahf
jmp
lock
pop
sub
jo
or
enter
mov
jl
pop
mov
loope
jb
mov
or
dec
cmc
pavgb
lea
mov
stos
cmp
cmpsb
sub
jecxz
xor
adc
jp
or
into
repnz
iret
xor
sub
xor
mov
fdivrl
pop
pop
inc
mov
push
adc
or
idivb
dec
mov
mov
es
push
lea
or
xchg
xchg
push
test
imulb
test
dec
fucomp
inc
xor
cmpsl
fnstenv
cmpsb
xchg
les
out
imul
push
loope
jp
cmp
push
pusha
cs
repz
mov
xor
mov
lret
popa
push
pop
xchg
add
test
xor
dec
loopne
lret
add
clc
daa
movsl
xchg
stc
push
je
inc
cmpsb
pusha
aaa
add
lods
sbb
add
dec
push
xchg
ret
push
sbb
je
lcall
insb
dec
push
pop
xchg
daa
lcall
push
or
mov
test
ja
fidivrs
fsubrl
pop
addr16
cmp
mov
sbb
xchg
repnz
ret
xchg
mov
xor
rcrb
scas
pop
add
mov
add
push
ret
adc
nop
mov
scas
aad
push
dec
roll
and
push
mov
dec
xor
nop
dec
mov
gs
xchg
ja
dec
outsb
sub
jno
xchg
xor
pop
sub
ss
fs
leave
lock
iret
xchg
ljmp
cmp
inc
fwait
sub
pop
paddb
sub
push
add
fildl
cltd
cmp
dec
test
push
hlt
fmuls
rorl
gs
xor
dec
xchg
and
xchg
dec
js
mov
fmuls
xchg
inc
or
add
sub
enter
fucomp
mov
push
lea
xor
in
int
std
jmp
fcmovnb
cmp
mov
pop
js
cmp
sbb
pop
mov
mov
mov
call
add
repz
push
mov
push
ljmp
xor
dec
mov
in
sub
fistl
jo
ss
sarb
or
lcall
sbb
sbb
xchg
cltd
sti
daa
shrl
dec
in
addr16
daa
cmp
cmpsb
sbb
ret
cld
fdivs
pop
rorb
inc
mov
mov
and
jl
and
aaa
cmp
and
std
fs
stc
ret
aaa
lcall
push
lahf
stc
sbb
mov
fwait
cmp
sbb
inc
dec
dec
jecxz
pushl
add
mov
fst
adc
cmp
ret
add
jp
cmp
imul
aam
sti
outsl
pop
jnp
jge
mov
call
inc
pop
inc
mov
std
mov
cwtl
or
xor
ret
jo
jbe
mov
arpl
xor
cmp
or
cmpsb
mov
mov
mov
jno
push
jmp
xchg
enter
dec
fdivrl
pop
aam
jg
pushf
cmp
fwait
loope
adc
and
sub
pop
push
loopne
jp
xor
adc
pop
pop
mov
hlt
dec
jb
in
sti
lcall
shll
dec
cmp
js
add
popa
jl
rorl
data16
pop
sub
out
mov
les
mov
out
jb
into
fs
dec
mov
rcr
mov
or
rep
pop
push
movnti
jl
aad
loop
ljmp
pop
add
ret
lahf
cmc
jne
aad
cmp
mov
or
into
xchg
mov
add
push
ljmp
mov
push
mov
mov
call
dec
mov
pop
inc
fmul
xor
dec
mov
inc
les
pop
jae
shlb
dec
add
push
cltd
pop
call
jg
dec
or
sub
ds
jg,pn
lahf
jbe
in
out
shr
push
fisttps
push
mov
lods
push
cltd
push
sub
push
cmpb
inc
or
xor
or
add
sbb
lods
dec
addr16
in
push
lods
sbbb
imul
or
xchg
xchg
sub
sbb
call
repz
inc
mov
add
nop
stc
pop
adc
aad
push
out
and
lret
test
outsl
inc
xor
push
push
cmp
adc
aam
mov
test
test
outsl
repnz
loop
ftst
ds
inc
sti
mov
andl
mov
mov
icebp
cmpsl
add
dec
sub
jmp
sub
or
sub
mov
cltd
in
or
push
outsb
ss
jge
pop
enter
in
xor
dec
pop
lock
xor
adc
mov
stos
xchg
mov
jno
shlb
push
imul
push
mov
outsb
pop
mov
push
fldenv
dec
ret
xchg
adc
adc
pop
push
cmp
scas
mov
frstor
mov
inc
dec
xchg
shll
enter
mov
test
out
sbb
inc
addr16
xchg
inc
test
jge
sbb
lret
mov
dec
adc
dec
pop
add
mov
jno
pop
mov
in
xor
in
aas
es
ljmp
jnp
adcl
ret
jb,pn
sbb
test
fbld
in
pop
out
js
aad
jb
ljmp
fucomp
cmp
pop
and
add
sub
mov
cmp
xchg
ret
pop
int3
mov
push
push
mov
mov
imul
cwtl
sub
hlt
mov
cli
pop
les
push
xchg
mov
clc
fstl
mov
push
jno
jo
clc
jae
dec
popa
in
fbld
jb
int
enter
push
xchg
mov
test
push
sub
fiadds
pop
insl
testb
sbb
jnp
mov
xchg
pushf
mov
jmp
fsubr
push
pop
mov
pop
repnz
cmpsb
inc
jns
sbb
xchg
jl
mov
adc
push
inc
sbb
cmp
imulb
dec
jge
js
xchg
or
cwtl
shlb
mov
aam
rol
mov
jo
cmp
sub
or
mov
test
mov
add
push
xchg
clc
dec
jmp
push
push
aad
or
ja
inc
jne
lods
jmp
push
out
xchg
cli
mov
push
mov
mov
test
loopne
cwtl
sarb
dec
cwtl
out
sbb
mov
pop
sub
mov
push
adc
cltd
or
cmp
and
dec
cmpsl
test
in
hlt
ss
imull
loop
pop
inc
in
fs
inc
jl
mov
popf
fwait
cs
mov
test
dec
int3
lahf
lds
cmp
aaa
outsl
push
inc
out
xorb
add
rcll
and
out
jnp
push
jl
mov
pop
test
xor
call
ja
ret
out
mov
pop
push
lret
fists
notl
imul
fnstenv
iret
add
and
pop
push
push
push
fwait
add
sbbb
sub
xchg
test
insl
adcb
jl
addr16
jnp
aad
xor
xchg
mov
mov
and
scas
std
int3
lcall
scas
in
out
mov
add
xchg
cld
movsl
sub
mov
subb
mov
push
dec
fisttpl
or
js
adc
dec
inc
cmp
sbb
add
in
cmp
jmp
ljmp
ret
adc
jle
xchg
in
adc
fldt
fistpll
bound
jge
sbb
out
rcr
mov
popf
out
aam
fldt
sub
pop
test
or
stos
lea
xchg
jae
sbb
daa
insl
jae
sub
xor
fldl
push
xchg
xchg
cwtl
xchg
insl
das
imul
mov
mov
sbb
xchg
pop
aam
xchg
arpl
lahf
loope
cwtl
popf
adc
xor
and
imul
sahf
in
popa
or
fidivl
mov
lods
mov
dec
or
in
xchg
push
lods
stc
movsb
pop
mov
adcl
xchg
in
lods
aas
mov
mov
fwait
add
inc
aaa
insl
push
and
js
hlt
cs
cli
dec
imul
or
lods
mov
xchg
mov
add
pop
jne
xor
sub
mov
loop
adc
dec
mov
in
rcll
les
ss
js
mov
pop
mov
popf
xor
into
mov
ss
das
out
xor
jno
and
xchg
aam
sti
in
xchg
xchg
dec
xchg
cmp
add
push
sahf
inc
jmp
pop
mov
jp
mov
inc
stos
mov
mov
ret
mov
insl
int
xchg
ljmp
pop
into
pop
mov
clc
or
fcoms
imul
cltd
mov
lods
mov
idivl
test
lret
cmp
mov
mov
mov
push
ror
or
push
les
mov
fs
xor
pushf
cld
aaa
push
or
out
je
lods
sub
lret
cmc
popa
insb
push
fstpl
clc
sbb
int3
jl
lahf
fnsave
jne
push
lds
cwtl
xor
mov
aas
jg
jbe
shrl
arpl
mov
and
ljmp
xor
pop
les
sti
roll
mov
pop
dec
jns
in
mov
pushf
dec
add
adc
lret
arpl
cltd
orb
enter
jle
mov
dec
into
cltd
jo
int3
mov
mov
es
repz
repz
das
scas
adc
adc
sti
rcr
push
mov
xchg
xor
dec
nop
pop
loopne
negb
mov
insb
dec
fildll
mov
and
sahf
lods
adc
jns
mov
adc
adc
push
and
and
sbb
mov
cmpsl
xchg
jbe
test
cmp
xor
dec
jns
loope
jne
incl
loop
mov
loopne
pop
les
das
push
in
push
mov
mov
push
mov
dec
xchg
scas
out
in
dec
push
xor
dec
rcl
repnz
cmpsb
jb
sti
jbe
addb
scas
or
cltd
aas
xchg
rcrb
out
mov
test
mov
mov
gs
jl
enter
add
mov
jl
dec
jecxz
enter
sbb
scas
mov
mov
jns
sbb
into
jnp
stos
lahf
pop
ficoml
cmpsl
jae
jmp
jmp
outsb
push
xchg
iret
xchg
cmp
mov
test
push
mov
xor
cmp
adc
lret
jge
sbb
sub
jns
sub
test
pop
mov
or
cld
shl
pop
and
nop
ds
addl
push
pop
repz
mov
jp
adc
mov
jne
jo
mov
fldcw
inc
xchg
cmc
pop
loope
push
fsub
xchg
add
mov
imul
stos
or
imul
add
jle
add
mov
fadd
into
mov
fcomp
rorl
in
enter
jb
pusha
call
adc
dec
add
ret
lock
jo
dec
xchg
inc
dec
adc
ret
pop
or
mov
sub
mov
adc
rcrb
inc
mov
pop
enter
xchg
test
das
mov
dec
mov
push
sub
into
adc
dec
les
jae
int3
pcmpgtd
jne,pn
cmp
stos
mov
xchg
add
in
cmp
cmc
cld
mov
jnp
imul
shrb
shll
and
xchg
fs
andb
faddp
mov
mov
add
or
es
push
bound
pop
loop
and
xor
lahf
or
movsb
in
jecxz
adc
adc
movsb
mov
outsb
loopne
fcmovnb
xchg
mov
popa
idiv
arpl
push
fcomip
adc
mov
mov
int3
pop
repz
je
lods
fldl
std
mov
push
lods
rcr
mov
outsl
das
inc
add
xor
iret
imul
popa
aas
mov
inc
in
test
adc
enter
stos
push
sbb
js
adc
xchg
ret
dec
or
addr16
es
mov
mov
roll
repnz
adc
dec
addr16
push
mov
sub
arpl
in
xor
sbb
xchg
and
xchg
jge
lcall
int
aam
pop
mov
inc
and
fldl
sbb
push
sub
xchg
pop
fadds
sti
lret
ret
mov
outsb
outsl
mov
mov
add
aam
xor
imulb
in
stos
pop
lret
loope
insb
xor
repnz
push
pop
xor
out
add
lahf
mov
insl
cmp
leave
ja
stos
lret
lahf
dec
scas
sbb
scas
fdivrl
sarl
push
xchg
stos
push
cmpsl
inc
lret
aas
inc
rcll
sub
pop
test
js
aad
inc
iret
adc
pop
xchg
clc
push
pop
or
mov
insb
cmc
dec
bound
cmp
dec
lds
xchg
lods
cs
test
lcall
out
inc
aad
adc
aam
xor
fcoml
cltd
in
add
inc
mov
mov
scas
stos
mov
xchg
in
xorl
xor
ds
cmp
and
ret
hlt
cmpsl
cmp
dec
cmpsb
test
movsl
cmp
mov
jg
push
mov
mov
adcl
shll
ja
aaa
adc
enter
or
sbbb
js
mov
movsl
lds
data16
jge
mov
push
pop
aam
pop
add
imul
or
fdivrl
arpl
mov
mov
stc
arpl
fwait
popa
or
popa
jle
cmc
push
fdivp
dec
cmp
cld
outsl
and
fstps
lcall
xchg
mov
jg
ljmp
lock
or
add
mov
shll
dec
mov
inc
sarl
je
and
ljmp
daa
fucomi
ljmp
jnp
add
sti
outsb
sub
xchg
pop
daa
into
mov
cmp
inc
sarl
and
add
jno
stos
in
cmpl
jle
outsl
je
pop
adc
xor
aas
nop
push
sub
mov
and
cs
repnz
outsb
jp
mov
aam
mov
jge
jbe
cmpsb
rclb
pushf
sbb
or
cmp
test
push
test
push
outsl
cwtl
xchg
inc
adc
mov
scas
xor
mov
mov
dec
adc
adc
ja
pop
sarb
pop
outsl
xor
in
lods
xchg
push
bound
jns
fisubl
dec
test
pop
lret
xchg
pusha
sbb
mov
insb
and
pop
inc
mov
ret
xorl
sbb
adc
push
dec
iret
iret
shlb
and
ss
outsl
aas
pop
sbb
in
pushf
jmp
std
int3
dec
mov
jmp
mov
mov
out
adc
mov
rcll
sarb
fcomps
pop
xchg
lret
cwtl
dec
js
xchg
mov
push
mov
cmpsl
repnz
lods
inc
push
push
ror
mov
iret
mov
cli
jl
cs
mov
mov
xor
push
rorb
xor
add
push
bound
aam
enterw
xor
mov
jne
outsb
xchg
lods
aaa
cld
in
aas
loopne
cltd
pop
sub
jg
push
jge
das
pop
add
mov
popf
adc
sub
xchg
out
fcoms
jbe
mov
xor
sub
and
adcl
adc
test
cld
jl
movsb
cmp
fcomps
inc
fidivrl
mov
mov
enter
inc
addb
loope
xchg
jge
test
dec
pop
mov
xchg
add
aaa
mov
jmp
cmp
stos
out
jge
dec
jb
pop
add
fcoms
push
xor
enter
repnz
lods
or
bound
shll
lcall
lock
sbb
inc
jg
xor
add
push
mov
push
mov
test
adcb
sar
dec
sti
addl
lahf
stos
fs
out
sub
jbe
and
push
mov
movsl
fldt
loop
cwtl
mov
sbb
dec
das
dec
aaa
pop
xlat
outsl
sub
mov
xlat
cmp
imul
adc
insl
nop
adc
ss
xor
fiadds
cmpsl
cmp
push
sub
ljmp
mov
fcoms
inc
cmpsl
mov
into
xchg
dec
push
sub
xor
cmp
add
mov
pop
adc
imul
mov
push
in
lods
hlt
jne
add
sub
mov
jb
insb
jmp
imul
stos
loope
xlat
fstpl
jno
adc
cmpsb
jmp
jge
pop
mov
scas
xor
xchg
add
mov
ficomps
cmp
jmp
and
dec
push
incb
rcrb
repnz
pop
jne
inc
repz
and
aad
leave
and
dec
dec
and
rcr
jp
xchg
cltd
shrb
andb
lods
push
push
fcomps
or
sub
mov
test
sub
aaa
cmpl
sbb
add
mov
mov
out
jbe
lods
mov
mov
dec
xchg
in
mov
jmp
movsb
popl
insl
sbb
mov
or
jne
ret
stos
mov
test
popa
jecxz
mov
outsw
clc
mov
movsl
inc
sub
pusha
mov
lea
xor
subb
xor
in
lahf
jecxz
shll
mov
xor
jno
xor
movsb
dec
pop
shll
pop
std
sbb
mov
repz
jg
xchg
fdivs
mov
addr16
inc
mov
mov
xor
sti
testl
inc
adcl
jne
inc
cmp
mov
jno
sbb
call
iret
rcrl
out
push
loop
add
sub
jl
cmpsb
mov
mov
les
fwait
mov
int3
pop
andl
rorl
dec
aas
pop
inc
and
dec
cli
pop
and
test
add
push
std
loopne
cmp
lret
pop
pop
and
or
insb
dec
ja
pop
mov
sbb
ret
sti
imul
push
mov
test
outsb
sub
insl
imul
out
cmp
repz
loop
sbb
push
push
inc
ret
outsl
out
and
cltd
add
inc
pop
or
stc
cmpsl
fsts
pop
and
sub
in
mov
loop
xchg
fwait
lret
stos
mov
icebp
adc
and
lcall
mov
rcrl
outsl
int3
mov
mov
outsl
mov
subl
pusha
mov
inc
daa
fbstp
pushf
out
jbe
push
lret
shll
fistl
lods
out
notl
jns
insb
hlt
inc
fs
push
cmp
xchg
push
mov
xchg
push
push
pop
pop
xor
add
repnz
jmp
fbstp
or
add
push
dec
incl
out
mov
cwtl
cmp
aaa
dec
adc
and
and
push
xchg
xor
out
ss
add
call
cmp
das
add
int
xor
sbb
cwtl
pop
cmp
addb
xchg
pop
mov
push
in
cmp
movsl
jns
sbb
jg
cmp
adc
scas
push
test
dec
sbb
and
dec
inc
dec
or
movl
add
lock
aas
ss
dec
ffreep
jle
in
cmp
int
in
fwait
xchg
jae
inc
ret
inc
rcrl
mov
pop
repnz
inc
xchg
cmp
push
ss
idivb
rorl
sbb
lds
outsl
pop
lods
adc
or
mov
hlt
inc
dec
jle
rol
mov
fdivl
inc
shrl
or
or
fistps
add
ds
jbe
mov
aam
mov
adc
leave
fsubrs
clc
es
pop
mov
mov
or
or
test
dec
adcl
mov
mov
loop
ljmp
pop
sub
icebp
or
insw
mov
or
push
dec
adc
xor
xchg
pop
ret
sbb
adc
xlat
rol
repz
or
mov
mov
cmpsb
scas
imul
sub
pop
xor
mov
gs
shll
jo
stc
pop
aaa
mov
sub
dec
push
or
out
push
inc
sarb
jnp
xchg
in
stos
aaa
pop
cltd
lret
jno
cmp
mov
mov
jne
pop
test
cmp
inc
mulb
out
jmp
add
inc
inc
les
pop
xchg
pmaxsw
fildll
repnz
hlt
lea
sbb
cmp
jns
push
push
ret
or
adc
sub
adc
nop
mov
push
stos
pop
and
xchg
cltd
push
jmp
in
pop
dec
dec
mov
outsb
repz
xchg
mov
loopne
mov
bound
cmp
add
cmp
mov
jge
xchg
je
inc
mov
sbb
push
sbb
int
or
mov
pop
pop
jo
popa
add
dec
cmp
dec
dec
sub
add
jo
add
xchg
arpl
pop
sahf
or
jno
insl
inc
div
push
adc
pop
adc
and
inc
dec
dec
sbb
cmpsb
mov
jbe
pop
jle
lret
jnp
movsl
test
and
outsb
xchg
xor
in
clc
xchg
in
sbb
hlt
pop
popa
push
arpl
dec
repnz
sbb
fsubp
faddl
sbb
or
mov
mov
mov
sbb
push
dec
sbb
and
and
cmp
sbb
or
mov
or
add
jnp
adc
cmpsl
push
dec
jg
mov
js
hlt
rcrl
aam
mov
mov
cmc
jno
cmp
mov
jno
jle
scas
add
mov
xor
test
add
mov
fsubs
jg
xchg
pop
movsl
cwtl
sti
ds
divps
pop
insl
sub
sbb
dec
push
add
mov
sub
mov
dec
out
dec
jmp
jmp
jl
pop
pop
push
repnz
movsb
loopne
imul
mov
mov
xchg
pop
xor
stc
pushf
xlat
mov
mov
popf
or
lret
jae
pop
inc
sub
push
and
push
fnstenv
cmp
inc
jo
jae
vmovupd
xor
add
test
in
or
mov
out
lods
sbb
add
mov
ja
gs
in
ja
mov
add
movsb
js
shlb
pop
sbb
test
lret
dec
scas
rolb
popf
stc
nop
or
and
pushf
jle
pop
fdiv
add
mov
in
in
mov
sub
xchg
xor
mov
popf
test
push
push
mov
lret
push
pop
xor
scas
int3
push
es
dec
int3
iret
mov
stos
push
popf
loop
lea
fsts
mov
mov
jb
and
xchg
and
js
mov
cli
and
dec
ljmp
cltd
mov
xchg
fisttpll
test
lahf
push
pop
and
cld
loope
ror
xor
mov
aas
pop
cwtl
test
and
mov
jne
testl
movsb
and
nop
dec
mov
lret
adc
arpl
adc
sbb
adc
xor
je
out
outsl
xchg
sub
push
mov
in
jno
and
pop
clc
sub
adc
mov
cmpsl
xchg
jmp
jns
fs
popa
xchg
out
fcom
sahf
xchg
int
jecxz
lds
out
sahf
and
cmp
mov
xor
xchg
xor
add
adc
test
stos
cs
xchg
out
adc
call
sbb
inc
dec
push
push
dec
add
lds
xlat
dec
vshufps
mov
mov
inc
push
inc
leave
sub
add
dec
mov
andl
rol
daa
dec
es
mov
notb
fisubrl
jae
and
scas
push
or
shlb
inc
pop
shrl
cmp
xchg
loopne
mov
mov
jne
xchg
jmp
mov
in
push
pop
push
pop
ds
adc
stc
fimuls
iret
pop
je
icebp
pop
dec
dec
stos
sbb
and
xlat
popa
jnp
popl
push
adc
mov
add
jle
test
inc
sahf
inc
or
stos
call
fs
in
inc
mov
sub
cmp
cli
orl
lcall
fwait
adcl
fwait
unpcklps
mov
fcompl
iret
incb
call
or
ret
pop
rcrb
pushl
mov
dec
ret
pop
mov
scas
repnz
mov
outsb
pop
lock
pushf
mov
shlb
les
js
push
lahf
pop
int3
shl
jle
ljmp
inc
fs
mov
jg
ljmp
lods
push
sub
jp
fmull
loope
test
sti
cmpsb
negb
push
aad
mov
sbb
xor
xchg
out
sub
repz
pop
cwtl
adc
or
test
cltd
inc
mov
fisttps
sbb
xbegin
shl
fsubs
daa
mov
scas
shll
add
sbb
scas
cmp
insl
in
inc
mov
test
arpl
ds
mov
cmpsb
jp
fimuls
add
push
inc
inc
add
icebp
jle
sub
icebp
ljmp
cmc
fadds
aad
pop
mov
in
into
rclb
movsl
push
je
mov
mov
out
sub
fisubs
test
inc
push
sbbl
pop
clc
xchg
andb
add
movb
sbb
fwait
mov
test
sbb
xchg
fidivl
test
shrl
xchg
xor
jg
stos
adc
pop
das
xor
lahf
pop
xor
mov
cmp
mov
sub
cmc
add
lds
cmc
or
addr16
sbb
pop
inc
incb
add
pop
insl
adc
incl
inc
pop
push
orl
adc
mov
pop
loopne
or
in
in
and
nop
adc
and
and
xchg
rolb
pop
lahf
out
add
or
movsb
mov
in
dec
push
xchg
push
add
aam
adc
dec
mov
fwait
inc
cmp
lods
jae
jb
movsb
cmp
xchg
mov
or
ds
pop
mov
mov
inc
ror
movq
lods
fwait
rcll
inc
repz
pop
icebp
mov
out
push
pop
stc
es
frstor
leave
xchg
shlb
jb
push
mov
jp
mov
stc
jmp
cltd
je
nop
sbb
fadds
loopne
xor
imul
push
les
xchg
enter
sub
sub
std
dec
je
cld
outsb
rorb
stc
add
into
adc
test
ds
js
je
push
or
int
lahf
push
hlt
jmp
fdivrs
xor
cmp
enter
imul
cwtl
cli
mov
pop
gs
nop
or
xchg
mov
sub
fldl
fstp
mov
cmpsb
dec
push
std
cld
xchg
dec
jo
mov
jg
inc
jnp
pop
cmp
cmp
dec
or
xor
aam
or
pop
out
push
pusha
dec
imul
pop
outsl
push
and
test
dec
in
pop
dec
rorl
inc
les
jle
push
inc
cwtl
mov
xchg
les
ficomps
iret
notb
in
mov
clc
inc
add
cld
aas
adc
es
sbb
or
and
lret
aaa
or
mov
repz
pop
pop
rcll
pop
ficomps
and
pop
shll
into
push
fcoms
mov
cmpsb
sti
les
fs
shlb
xor
fldt
and
cmpsl
int3
add
xlat
or
insl
ds
mov
mov
jmp
push
call
imul
test
pop
mov
or
jle
stos
nop
dec
cmp
loopne
jge
andl
push
inc
icebp
mov
movsl
in
pop
or
les
pop
mov
xor
outsl
xlat
or
stos
pop
or
and
xchg
je
cld
clc
add
pop
mov
push
cmpsl
in
in
mov
imul
push
xchg
lret
sbbb
mov
addl
push
mov
mov
negb
cmp
sub
int3
enter
pmulhw
out
adc
mov
sbb
and
sbb
jmp
dec
lcall
pop
pop
mov
inc
es
lock
mov
daa
jmp
test
cmc
mov
iret
fnstsw
sarb
sub
jne
mov
xchg
adc
cmp
enter
ss
std
aas
pusha
scas
sbb
aad
cmp
rcrb
sbb
dec
mov
xlat
repnz
inc
rcrb
sub
fnstsw
packuswb
ret
add
scas
xor
gs
pop
call
mov
dec
popl
sbb
add
aad
mov
sub
in
data16
xor
movl
das
mov
xor
test
out
sub
lds
in
mov
pop
mov
test
fldenv
cmp
and
in
adc
cmp
xor
lahf
pandn
sbb
dec
sub
roll
popa
or
xor
pop
cld
xor
mov
call
mov
and
lods
ret
lret
in
mov
cld
test
push
lret
iret
dec
out
xor
or
sarb
dec
out
and
jno
jae
hlt
inc
subb
xor
popl
pop
movsb
fucomi
jo
arpl
push
sub
pop
mov
mov
movsl
in
dec
shlb
stc
ja
dec
xchg
dec
movsb
mov
or
jecxz
fwait
scas
mov
mov
flds
inc
push
neg
insb
push
xchg
xor
pop
out
xor
cltd
mov
not
clc
push
pop
mov
pop
pushf
mov
cmp
add
iret
xor
jecxz
das
aam
mov
shrl
and
gs
je
mov
or
gs
xorb
inc
std
jl
or
into
enter
sbb
jnp
sub
jb
mov
out
adc
dec
stos
xor
mov
sub
dec
adc
les
cs
fcmovne
pop
js
fwait
mov
push
sar
sbb
push
roll
fidivrs
sbb
sbb
inc
pushf
adc
daa
scas
popf
js
add
fstpt
mov
pop
inc
mov
adc
pop
cmc
adc
xchg
je
test
lods
fdivrl
movsl
cmpsl
push
and
repnz
test
adc
dec
push
mov
sbb
sub
push
inc
cltd
push
stos
int
out
jae
jbe
std
or
gs
nop
and
pushw
cmp
jge
movsb
lahf
push
fstl
add
mov
pop
push
stos
je
jp
cltd
add
add
push
jge
and
adc
popa
or
in
pop
lahf
push
jmp
cmp
push
mov
lret
jl
xchg
aam
repnz
mov
or
adc
xchg
cli
or
notl
push
push
add
cli
pushf
out
and
inc
push
lods
push
adc
out
mov
insl
dec
cli
sub
cmp
mov
mov
jnp
je
mov
aam
inc
scas
outsl
enter
and
xchg
xor
adc
xor
mov
int3
jecxz
ljmp
cwtl
aaa
in
aam
xor
sarb
pop
inc
mov
dec
add
lret
adc
jl
cmp
aas
fdivs
stos
inc
and
inc
cmp
in
jle
mov
adc
add
sti
loop
sbbb
and
outsb
mov
imul
dec
mov
movsb
xchg
mov
pop
xlat
fldcw
jg
lahf
sbb
cmp
aas
in
dec
lds
dec
and
gs
xchg
jns
cld
push
dec
push
jg
adc
rcrb
out
sti
repnz
mov
movsb
dec
and
xor
or
mov
sub
cmp
popa
cmp
mov
cltd
sub
in
es
xchg
clc
xchg
std
sub
movsb
dec
dec
xchg
and
push
push
bound
rcrl
popf
sbb
iret
inc
int
lock
jne
pop
mov
jecxz
test
test
insb
loop
rcl
mov
xor
mov
mov
ss
lods
mov
fsts
repnz
mov
scas
cld
add
clc
sub
sarb
out
aaa
in
sub
and
inc
mulb
or
adc
stc
adcb
cmpsb
in
jno
xchg
cmp
imul
fs
mov
out
in
adc
dec
and
ret
mov
xor
lcall
xchg
push
outsb
loope
idiv
adc
and
dec
cli
pop
dec
pushl
push
inc
sub
mov
cmp
adc
bnd
xchg
stos
imul
pop
sti
inc
jmp
pop
stc
sbb
je
add
xchg
push
out
out
push
lcall
lahf
adc
mov
or
sub
sub
mov
xor
dec
fs
pop
push
mov
jno
sti
xchg
push
rorl
insb
adc
and
ret
cmpsb
push
test
dec
repnz
adc
shrl
inc
lahf
shl
addr16
xchg
sbb
cmp
or
cmp
and
pop
aam
inc
cmp
jns
dec
cltd
sbb
in
test
je
xchg
mov
les
jmp
sbb
xor
mov
scas
xor
cmp
mov
xchg
test
punpckhwd
in
repz
push
and
int3
int
pop
mov
push
and
jle
outsl
mov
and
les
adc
jb
mov
lea
rorb
loopne
cld
lock
or
pop
imul
inc
jl
lret
pop
push
das
lcall
lahf
cli
aad
and
sub
scas
in
cmp
cmp
outsl
fs
adc
loope
lcall
movl
cmp
hlt
es
test
adc
and
rcll
pop
ss
add
pop
cs
das
mov
pop
mov
cmp
das
pop
sub
repnz
add
mov
flds
dec
fsubr
insb
rolb
pop
cmp
ficoml
js
ficomps
adc
xor
push
sbb
ret
sahf
mov
in
jb
mov
push
mov
inc
fidivrl
jge
in
push
mov
jl
lea
xor
roll
pop
daa
sbb
fistpll
add
les
test
xchg
mov
out
out
dec
xchg
xchg
mov
sbb
mov
and
dec
push
mov
sahf
push
sbb
jae
push
scas
adc
add
add
sbb
es
lds
sub
into
sbb
inc
stos
jge
out
jo
add
pusha
inc
xor
sbb
jmp
repnz
mov
adc
mov
and
jno
dec
push
inc
nop
xlat
or
adc
add
outsl
cli
das
or
xorl
out
nop
das
scas
jg
or
jl
add
mov
xchg
lcall
dec
adc
mov
lock
xchg
cmpsl
cld
icebp
sbb
or
inc
pop
cwtl
js
xchg
pop
aad
sub
inc
cmpsl
dec
adc
sub
xor
push
mov
mov
pop
mov
fldt
call
cltd
shld
mov
gs
out
out
xlat
fs
mov
clc
jnp
pop
dec
pushf
cmp
test
or
fbstp
scas
jp
push
divb
mov
mov
or
int
nop
insb
jmp
outsb
add
jmp
icebp
out
cltd
cltd
ds
aaa
sub
testl
jmp
push
ds
mov
loopne
insb
roll
ss
ljmp
or
adc
cmp
adc
notl
or
sbbl
in
inc
sub
mov
inc
popf
mov
dec
clc
loop
fistpl
xor
push
pop
pop
pop
xchg
adc
mov
xchg
into
push
aaa
xor
repnz
int3
pop
jge
out
dec
inc
out
jnp
sahf
lods
stc
ret
pop
mulb
jg
filds
aad
bound
test
lock
push
jmp
or
pop
dec
pop
aaa
mov
fisubrl
imul
movsl
jb
ja
int3
add
and
aaa
into
dec
out
jmp
mov
jno
mov
inc
inc
mov
shlb
ror
adc
int
pmaddwd
in
mov
push
and
jge
das
lahf
pusha
aas
mov
into
add
cmp
xchg
push
rcrl
test
sbb
pop
in
cmp
sbb
add
pop
int
ds
cld
dec
jbe
imul
dec
mov
es
lods
pop
mov
jno
push
or
lods
dec
mov
pop
shl
int3
dec
inc
xor
loop
sbb
hlt
jb
sbb
mov
scas
jnp
popf
adc
lea
adc
out
dec
push
imul
mov
gs
loop
int
insl
insb
movsl
mov
inc
out
addl
and
jns
pushf
or
push
imul
push
cmp
cli
mov
in
aaa
imul
push
repnz
xlat
nop
push
gs
add
push
sbb
pop
inc
sti
call
inc
outsl
into
mov
push
cmpsl
xchg
dec
inc
push
push
pop
repz
or
stos
and
test
mov
adc
insl
inc
daa
pop
sbb
aad
orl
je
or
push
sub
cld
add
dec
pop
aam
ss
aad
jge
pop
inc
xchg
push
outsb
std
js
mov
mov
xor
aam
dec
sbb
push
ret
pop
dec
adcb
jns
xor
inc
repnz
movsb
sub
in
sub
jb
popf
dec
mov
enter
pop
bnd
mov
push
and
arpl
cltd
cmp
out
pop
in
enter
mov
sub
dec
mov
mov
xor
dec
sbb
dec
adc
inc
cs
dec
cmp
scas
jmp
pop
in
adc
jae
mov
and
mov
lret
test
pop
fwait
ja
inc
jne
insl
ret
mov
xor
mov
lahf
imul
and
addr16
repnz
jl
int3
cmpsb
push
cld
shlb
jl
imul
mov
sub
mov
mov
pushf
mov
andl
imul
in
inc
loope
mov
add
lahf
or
xchg
push
inc
cli
loop
xchg
test
mov
pop
add
pushf
sbb
jge
scas
lods
ja
leave
mov
sub
mov
roll
jae
dec
xlat
jo
push
outsb
sbb
pop
jbe
addr16
popa
insb
and
lods
loopne
std
adc
or
mov
pop
stos
adc
lock
adc
mov
clc
test
or
daa
aaa
mov
pop
xlat
xchg
lcall
sbb
cmc
xchg
adc
aas
mov
jmp
xchg
jns
sbb
push
sub
xchg
fldt
xor
or
rcrb
negl
mov
lock
cmpsb
leave
xor
fs
arpl
cmpsb
and
pop
sbb
pop
xchg
sub
jb
sbb
and
lahf
mov
push
mov
mov
frstor
mov
test
in
mov
push
xlat
test
sti
test
or
fs
addl
and
or
loop
xchg
out
mov
cmpsb
pop
dec
sub
lods
jnp
idivl
ds
ret
arpl
or
sub
or
xchg
imul
in
aad
mov
sub
popa
inc
mov
or
popf
sub
addr16
mov
xchg
or
mov
jecxz
or
clc
jp
mov
imul
xor
jo
jg
mov
xor
xchg
mov
addr16
jns
mov
negb
pop
inc
cmp
imul
mov
cld
es
pavgb
mov
mov
add
fisubrl
jmp
sbb
std
mov
mov
xor
xchg
lret
push
daa
fstpl
jne
and
pop
bound
add
movsb
popf
cmpl
inc
jb
movb
iret
and
inc
adc
xbegin
pop
sbb
lret
aad
dec
inc
adc
or
ficompl
mov
pop
sbb
divl
cmp
xor
jnp
cmpsb
cmp
sarb
sub
push
push
outsb
data16
aaa
adc
pop
mov
pop
out
pop
mov
sbb
mov
icebp
mov
adc
xchg
jp
imul
jp
sbb
test
inc
pop
and
cmp
imul
push
movsb
adc
cmp
pop
loop
test
pop
pop
ss
mov
es
and
cmp
push
in
cmp
jns
push
arpl
mov
js
mov
cmp
add
inc
jg
cmp
push
mov
das
inc
push
lock
rclb
xor
push
popa
jl
push
mov
jne
adc
test
jno
lods
das
aas
push
das
pop
scas
inc
loope
dec
dec
ret
xchg
add
mov
xchg
sub
rcll
cmpsb
ljmp
push
dec
fmull
dec
mov
cwtl
mov
xchg
sarb
out
push
xchg
mov
orb
push
ss
gs
and
aas
mov
ss
add
push
dec
jg
out
mov
jae
int
push
sbb
push
sub
push
cmp
dec
addb
jb
stc
out
adc
imul
mov
cmpsl
mov
mov
into
outsb
das
sub
inc
mov
ret
dec
test
add
mov
dec
or
mov
int
mov
jl
jl
test
loopne
js
or
push
ret
pop
outsb
addr16
sbb
jb
inc
and
push
loope
hlt
lret
cmp
fildl
addl
jg
adc
insl
push
mov
pop
repz
xor
test
jb
sbb
adc
ret
sbb
jnp
jg
xchg
push
push
int3
push
mov
fldcw
sub
mov
popa
mov
ljmp
mov
cmp
sub
in
rcrb
push
leave
cld
pusha
iret
incl
pop
aas
lret
fidivrl
mov
and
je
pop
loop
jbe
push
hlt
jo
das
inc
repnz
fistpll
das
shl
lret
movsl
xor
mov
aaa
mov
adc
out
jle
xlat
movsl
in
fcmovnbe
xlat
out
dec
cli
popf
neg
mov
inc
add
jl
outsb
or
sub
test
jge
movl
dec
mov
mov
lods
hlt
fs
xchg
adc
repz
scas
xor
lds
jbe
push
mov
pop
xor
stos
add
fcoml
push
pushl
jno
or
lods
add
pop
mov
mov
hlt
orl
jne
leave
sbb
popl
cmpsb
hlt
sbb
ss
ret
pop
pop
imul
or
xor
xchg
and
inc
pop
pusha
xor
sub
sub
call
icebp
int
or
bound
mov
lea
nop
outsl
xchg
lcall
ds
xchg
inc
xchg
out
lret
movsl
adc
adc
adc
sub
mov
dec
inc
leave
mov
cmp
mov
lods
pop
sbb
xor
or
or
cwtl
std
xchg
cmp
sbb
loope
test
nop
or
dec
inc
cmp
outsl
test
in
lcall
mov
mov
rcrl
mov
mov
cmp
test
sbbb
insb
adcl
adc
add
xorl
xor
dec
repz
mov
cmpsb
mov
xorb
xor
jbe
dec
scas
ret
or
mov
pop
lods
jnp
out
out
jo
in
mov
aad
cmp
es
push
cmpsb
mov
sti
cmp
mov
adc
mov
psubq
sbb
jmp
push
push
mov
ljmp
pop
test
lcall
inc
loopne
nop
dec
rcll
xchg
rcll
scas
cmp
cli
xlat
test
int3
addl
mov
dec
es
xchg
push
or
xchg
lret
mov
pusha
inc
and
cmp
jae
ja
jae
mov
dec
pop
popa
inc
stos
cmp
addr16
mov
adc
fldenv
je
push
imul
mov
pop
sbb
scas
leave
xor
cmp
mov
out
mov
cmpsl
inc
jne
lea
jo
imul
sbb
pop
cmp
add
sahf
cmpl
mov
test
scas
mov
or
push
mov
jns
imul
sub
clc
dec
push
outsb
push
jo
insl
repz
or
mov
test
ret
and
inc
mov
ljmp
std
pop
and
sbbb
dec
ljmp
cli
daa
jmp
and
sub
and
push
pop
push
pop
cmpsb
loop
dec
sbb
mov
lds
mov
mov
in
push
addr16
popa
syscall
push
sbb
or
or
dec
aad
cld
jecxz
dec
sub
jecxz
lahf
mov
fmul
pop
sti
into
jb
sqrtps
xchg
dec
adc
inc
fdivr
push
fildll
pop
mov
and
adc
loope
loopne
addr16
sbb
jp
popf
pop
das
rorb
movsb
dec
mov
inc
lcall
jo
push
int
xorl
xor
test
das
pusha
jnp
or
fsubs
notb
push
call
fwait
cwtl
cmp
jns
out
mov
addr16
cpuid
xchg
adc
sbbl
outsb
and
mov
inc
push
and
cmp
jns
or
hlt
test
jnp
test
xchg
jmp
cwtl
or
mov
mov
or
cld
dec
pop
mov
xchg
les
dec
movsb
fisubl
in
cmp
adc
jno
in
je
pop
inc
or
push
aas
in
jp
repnz
in
mov
gs
roll
jg
filds
pop
inc
push
sbb
jo
mulb
or
sbb
aaa
or
pop
data16
mov
outsl
xor
bound
push
mov
mov
mov
jg
dec
mov
icebp
dec
ret
rcrb
mov
cmp
sub
mov
nop
in
mov
fnstsw
cmc
cld
bound
roll
and
addb
adc
les
bound
call
sbb
out
push
pusha
sbbb
jmp
lret
cmc
sub
cwtl
mov
in
dec
mov
scas
jbe
jne
imul
mov
fwait
or
mov
dec
cmp
mov
sti
repz
lret
jecxz
cmc
xchg
arpl
and
sub
stos
xchg
mov
testb
add
pop
sub
cmp
lret
ret
loop
ja
daa
inc
popf
icebp
add
aas
repz
mov
mov
stos
jmp
dec
push
pushf
adc
out
int3
add
xor
iret
sub
cmp
push
cmp
addr16
cmc
sbb
and
cmp
and
jns
pop
xchg
mov
ss
mov
jne
movb
sbb
cmp
negl
cs
lods
inc
or
sub
outsb
lock
mov
xor
cli
mov
push
mov
ja
leave
lret
test
push
pop
mov
gs
out
outsl
lds
leave
addr16
repnz
push
jns
lcall
add
cmpb
add
or
out
dec
xor
or
add
fistps
les
dec
dec
push
xchg
roll
mov
cmp
mov
out
clc
mov
jno
xor
cmp
es
mov
adc
adc
test
add
std
clc
cmp
leave
ja
loopne
daa
cmp
lahf
gs
mov
movsl
in
fmuls
roll
ljmp
mov
pushf
cmp
adc
sahf
imul
pop
lcall
into
sbb
xchg
adc
pop
loope
mov
xchg
sub
out
inc
dec
fsubl
aas
movsb
nop
cltd
xchg
dec
sbb
or
bound
xchg
dec
pushf
mov
rolb
jns
pop
popa
inc
adc
cmp
aaa
addr16
dec
or
or
xchg
xchg
pop
shll
push
adc
xchg
shlb
movsl
jl
ret
push
mov
sbb
aad
outsl
cltd
xchg
imul
mov
inc
into
mov
shr
xor
into
in
testl
sarb
stos
sub
cmp
mov
cs
pop
jb
pushf
repz
adc
popf
push
xor
loope
scas
sub
mov
scas
imul
xor
cmpsb
mov
call
out
xor
adc
fsts
mov
fwait
aad
jg
mov
das
js
xor
push
sub
inc
es
jmp
jecxz
shlb
cmp
pop
xor
push
aas
inc
mov
cld
testb
push
sub
inc
sub
cmpsl
dec
xchg
divl
inc
pop
jne
pop
leave
inc
fwait
rcrl
std
add
mov
rol
xchg
mov
xchg
cmc
pop
jns
enter
into
fldt
nop
test
icebp
mov
cmp
into
add
sbbl
movsl
aam
mov
aad
loop
cltd
subl
xchg
repz
enter
clc
insl
mov
mov
xlat
adc
sub
je
pusha
mov
dec
xchg
push
xchg
push
xor
adcl
or
pop
aas
push
sub
shrl
call
pop
out
aaa
dec
xor
lock
and
fistpl
sbb
mov
xor
outsl
fnstsw
cmp
stos
nop
cmp
or
outsb
sbb
dec
mov
and
inc
subb
and
inc
jmp
repz
and
add
add
xchg
pop
test
bound
test
mov
sar
dec
in
cmp
mull
jno
dec
gs
bound
pop
mov
mov
xor
sub
aad
jl
call
fwait
cmpsl
lcall
sub
cmp
in
dec
fisttps
std
adc
js
jmp
xchg
pop
lcall
add
mov
jmp
int
fsub
test
lock
xor
std
loope
dec
jns
push
imulb
das
dec
in
push
addr16
ja
aad
pop
fnstcw
sub
ds
adc
dec
jnp
addl
inc
out
pop
mov
and
xlat
mov
mov
pop
push
js
call
cli
cwtl
push
ljmp
out
dec
int3
in
in
dec
xor
jno
in
mov
test
jge
jne
outsl
add
cmpsl
push
dec
loopne
push
xchg
adc
fistpll
into
push
negb
dec
ret
out
ret
cwtl
hlt
cmp
mov
roll
xchg
out
jecxz
loop
bound
or
add
inc
fdivl
sbb
icebp
lret
push
pop
jnp
cmp
rorl
movsb
stos
sub
push
fcomip
sub
ds
add
adc
fcom
sub
movsb
test
out
inc
push
mov
sti
pop
push
xor
or
ja
sbb
mov
cmpsl
xchg
lds
dec
lret
in
movsb
and
lods
lds
mov
mov
push
sub
jp
aas
adc
push
mov
xchg
pop
arpl
sub
mov
sar
out
and
sub
xchg
rorb
push
sub
cmp
jg
push
add
es
andb
jge
insb
dec
imul
fidivs
and
scas
test
jmp
rcr
imul
dec
int
pop
push
dec
aam
sbb
mov
popf
xor
in
lea
pop
cmpl
jae
ret
adc
sbb
sarb
xor
mov
xor
aad
pop
inc
lret
mov
xchg
aam
aam
outsl
arpl
dec
sub
or
orb
test
cmc
push
push
popf
sbb
aad
cmp
xchg
mov
outsb
loop
sbb
lods
and
movl
adc
mov
inc
xchg
cli
push
ss
fdivr
mov
out
jne
mov
pop
adcb
xlat
xchg
adc
divb
arpl
hlt
stc
imul
pop
sub
pop
cmpsl
fdivs
push
pop
jno
jmp
jge
pushl
jns
leave
outsl
sarb
icebp
jnp
sub
mov
mov
in
adc
xchg
cli
jmp
inc
jl
and
jb
cmp
pop
mov
pand
mov
push
stos
ret
sbb
xor
and
push
ds
sahf
ret
test
outsb
xchg
push
adc
scas
jae
enter
ss
xchg
andl
repnz
loop
jo
mov
sub
loopne
cwtl
add
je
clc
xlat
in
stos
push
push
clc
sbb
lods
cs
xor
adc
mov
mov
stos
fwait
xorl
dec
adc
push
data16
andl
in
gs
negb
mov
push
cmpb
rcr
das
jne
cli
mov
scas
push
into
add
adc
enter
and
push
fsubr
movl
in
push
fcoms
fwait
sti
out
push
adc
pop
leave
jne
inc
pop
out
bound
jno
mov
dec
inc
dec
pushf
pop
cli
pop
scas
sub
dec
push
cmpl
int3
mov
jo
int
sbb
sbb
mov
xchg
mov
shll
lahf
pop
xor
push
mov
rorl
and
rclb
pop
dec
sti
jp
lods
xchg
pop
pop
lret
cmc
popf
sbb
lea
arpl
cmp
mov
cmp
enter
or
popf
ds
mov
loope
pop
mov
test
add
mov
jg
xchg
lods
mov
cmpsl
sahf
clc
push
add
xchg
mov
call
popf
adc
mov
hlt
cmpsl
je
rdtsc
sahf
pusha
fwait
inc
in
sub
mov
iret
test
jbe
mov
pop
sub
mov
add
mov
leave
fs
arpl
mov
in
in
movsb
daa
dec
mov
shrb
popa
mov
stos
xor
repnz
jmp
ret
add
stos
negb
dec
jbe
mov
frndint
cli
cs
fists
xchg
dec
sbb
fscale
mov
loop
cmp
xchg
xchg
mov
sub
xchg
popaw
jae
out
jns
out
fwait
sarl
jo
mov
mov
cmp
ret
setb
sub
leave
cmp
fildl
out
push
pop
pop
xchg
lret
mov
sbb
shrl
jmp
lret
std
fs
mov
sub
daa
pop
gs
rol
mov
fisubrs
mov
fnstsw
rcrl
adc
test
iret
nop
sbb
pusha
and
push
test
lret
clc
mov
add
jmp
pusha
les
push
add
mov
sbb
lods
xor
xor
or
ror
imul
jp
pop
out
rolb
mov
jmp
adc
pop
jb
pop
jmp
xchg
loope
pop
inc
imul
daa
adc
mov
jmp
push
sbb
scas
mov
sub
lods
dec
sub
lock
mov
adc
jle
mov
mov
push
xor
adc
pushf
sub
cmc
jmp
arpl
sbb
lahf
or
movsl
dec
or
cmp
pop
and
pop
xchg
jg
mov
or
mov
or
ja
cli
mov
inc
aad
aas
ds
xor
jae
mov
or
rol
ret
dec
and
cli
fldenv
sti
xor
fcompl
sub
lret
xlat
addr16
pop
scas
das
sub
lds
loopne
cmp
xor
sub
test
push
sub
mov
negl
xchg
rorl
push
movsl
imul
clc
test
sar
pusha
imulb
jl
lret
scas
add
and
fdivrs
fwait
pop
jg
sub
mov
sarl
pushf
add
mov
lods
scas
pusha
outsl
push
mov
das
stos
jb
xchg
addr16
lahf
pop
adc
outsl
outsb
mov
cld
lahf
or
sbb
stc
add
dec
lds
repnz
push
mov
rcrl
mov
pop
mov
mov
cmpsl
ja
add
cmpsl
in
rolb
stc
inc
pop
enter
arpl
and
sbbb
call
xchg
jo
outsb
test
sbb
jns
insl
das
xchg
pop
jno
jns
call
pop
sbb
adc
cmp
adc
repz
jno
mov
jnp
popf
jp
sbb
inc
mov
add
or
imul
lret
sbb
adc
fld
int3
in
test
bound
adc
cmpsl
dec
jecxz
xlat
shll
sbb
push
in
pop
movsl
push
xor
cmp
and
mov
sbb
cmpl
push
cwtl
cmp
ret
mov
push
xchg
in
fdivr
xchg
mov
xchg
gs
push
jl
inc
fst
xchg
push
les
mov
arpl
ret
push
push
cwtl
jb
in
clc
pop
xor
std
test
mov
aas
xchg
insl
pop
and
fcmovb
adc
bnd
scas
push
push
out
mov
dec
adc
dec
and
cltd
lret
mov
dec
mov
lods
inc
jae
jo
cltd
arpl
lock
mov
xor
lods
pop
mov
stos
jp
sub
push
mov
int3
mov
divb
test
jbe
jb
push
or
add
xchg
push
into
xor
cmp
insb
or
dec
incb
out
and
shll
or
ja
gs
jb
jb
lods
sub
popf
fmul
and
popf
adc
sub
jne
push
loope
jle
dec
lcall
xlat
push
test
push
lss
push
mov
xor
rcl
lods
xor
icebp
mov
stc
cmpsl
pop
pop
mov
jecxz
jle
hlt
jno
xorl
mov
mov
divb
cbtw
inc
adc
jns
sub
and
jg
test
jo
stc
les
inc
adc
mov
std
imul
imul
cmpsl
inc
sbb
fs
xor
push
push
jecxz
ror
add
mov
or
inc
and
cmp
lea
adcb
jp
lea
and
xor
mov
stos
das
cwtl
push
add
repnz
aam
or
dec
pop
idivb
popa
fnstenv
add
idiv
mov
add
cmpb
repnz
pop
inc
push
sbb
add
add
frstpm(287
push
std
mov
push
and
inc
stos
xchg
mov
pop
mov
cmp
pop
xor
and
xor
push
pop
rcr
ret
fisttpl
push
sti
and
jmp
into
out
in
sbb
cmp
xor
xchg
inc
inc
in
xchg
repnz
mov
jns
sub
sub
sub
pop
add
pushf
adc
mov
iret
sbb
aad
fldenv
adc
sub
inc
sub
fcoms
into
fimuls
xchg
data16
test
mov
jmp
aaa
and
mov
ja
inc
in
xor
push
loop
fsts
push
call
shl
dec
cmpl
mov
aas
adc
dec
pop
cmpsb
adc
xlat
mov
pusha
loope
je
paddusb
add
mov
jge
lds
rorl
fsubrs
fucom
repnz
das
jg
mov
dec
add
push
lods
dec
mov
or
sub
jmp
jnp
pop
fs
push
mov
cmp
fwait
pop
push
push
lds
mov
shrb
mov
xchg
mov
in
addr16
ret
mov
sub
mov
mov
jle
lea
push
push
push
xchg
les
mov
pop
push
es
xlat
fstpl
lods
stos
inc
arpl
push
cmp
jno
cmp
subb
jl
fcomp
popa
pmulhuw
cmp
and
sbb
outsb
and
jmp
dec
mov
aad
jae
mov
pop
popf
add
and
xlat
in
jnp
dec
js
stos
push
dec
lods
out
pop
cmp
adc
je
lds
mov
frstpm(287
push
mov
out
mov
movsb
pop
cmp
es
inc
sbb
orl
pusha
test
mov
in
xchg
and
sub
enter
stos
in
or
pop
test
int
and
lock
ret
or
int
stos
repz
hlt
clc
xchg
addl
cli
or
xorb
fidivrl
lret
roll
dec
hlt
in
popf
mov
cmp
loope
test
add
subb
js
scas
cmc
dec
movsb
fstps
pop
pop
xchg
mov
out
dec
mov
dec
pop
sbb
pop
inc
std
int3
mov
cmpsb
or
and
sub
test
or
mov
jg
sub
cmp
or
pop
sub
jp,pt
cmp
mov
cmc
xchg
dec
pop
adc
push
pop
adc
mov
sbb
and
out
loopne
popf
and
add
or
movsb
xchg
gs
sub
sbb
addb
aas
es
and
int
pusha
mov
or
or
cwtl
mov
sub
xor
mov
fimuls
pop
push
int
mov
leave
lock
lock
stos
hlt
ja
mov
add
xor
dec
adc
pop
sub
movl
in
lods
mov
mov
pop
sub
push
imul
in
ds
icebp
jl
mov
jmp
add
push
mov
loop
or
mov
sti
add
or
ficompl
lret
jno
xor
mov
xchg
inc
arpl
mov
scas
jp
fwait
repnz
dec
mov
sub
lahf
lock
push
jno
movntps
pushf
jle
push
pushf
inc
stos
imul
fmuls
iret
mov
add
cli
xchg
nop
jnp
cmp
pop
inc
lds
mov
in
sbb
push
mov
cld
es
pop
mov
shrl
int
xchg
and
mov
in
mov
lret
adc
icebp
ds
aas
je
setg
pushf
push
out
sarl
pop
inc
divb
dec
jecxz
je
jb
cmp
enter
adc
inc
fisubl
jp
frstpm(287
std
pop
fldcw
mov
add
jno
dec
shrl
mov
jno
pop
fdiv
inc
push
dec
jns
ret
js
xor
aad
ljmp
cmp
repz
bound
jl
mov
xorb
and
mov
cwtl
push
in
cli
adc
inc
sahf
or
aad
imul
int3
and
push
sub
in
push
rclb
je
int3
shlb
clc
cmp
test
sbb
dec
pop
cmp
mov
cmp
scas
pusha
push
je
jmp
aam
adc
les
stc
and
jae
clc
push
xor
sbb
jmp
jbe
rorl
jbe
push
jl
push
jae
jge
repnz
cltd
lock
std
add
stos
xchg
pop
xor
dec
mov
or
lret
sahf
daa
subb
sbb
sub
fsubrs
jmp
pusha
jae
and
add
adc
mov
fnsave
or
cmp
and
mov
pop
pop
sar
les
das
pushf
cmp
iret
mull
pusha
aaa
xchg
push
cmp
sub
imul
aam
addb
mov
and
outsb
sub
int
int3
xor
lahf
icebp
and
inc
mov
sub
divl
and
iret
icebp
repz
scas
lods
add
in
test
fldenv
sbb
xor
lock
dec
shlb
lahf
jecxz
xchg
mov
cmpsb
cmp
neg
push
mov
stc
push
mov
mov
jecxz
adcb
sub
repz
sbb
stos
outsb
cmp
mov
sub
xchg
sbb
or
pop
push
in
ret
pop
cmpb
jbe
stos
dec
in
sbb
in
das
cmpsl
inc
add
outsb
in
xchg
fimuls
xor
fmull
mov
pop
inc
mov
out
imul
pop
mov
out
fs
inc
outsl
inc
mov
pop
adc
jl
xor
lahf
dec
ss
push
out
pop
add
js
xlat
inc
fiaddl
std
pop
inc
lcall
xchg
sub
adcb
fcoml
mov
jle
popa
jno
test
mov
nop
ficompl
mov
gs
xchg
fisubl
sbb
clc
push
push
mov
pop
arpl
std
dec
cmp
out
or
adc
shlb
and
iret
jmp
and
mov
mov
mov
cmp
scas
push
roll
mov
repz
mov
xor
pop
fadd
faddp
mov
xchg
push
jl
add
test
mov
jb
hlt
insl
leave
loope
lock
push
pusha
cmp
xor
jmp
mov
push
mov
or
mov
inc
jmp
add
pop
jle
addb
out
jns
lods
jp
ja
sbb
mov
scas
xor
jae
add
roll
lods
mov
loope
stos
inc
mov
pusha
push
pshufw
jg
cmpb
inc
push
jbe
mov
imul
jle
out
popf
cmpsl
xor
inc
or
and
in
mov
dec
cmpsl
push
mov
in
dec
cmpb
gs
mov
xchg
push
sub
inc
or
mov
rcll
mov
push
cmp
xor
lds
pop
jmp
add
add
nop
inc
ret
lds
fs
mov
cmc
sbb
pop
clc
fldt
jae
test
jne
mov
inc
call
pusha
fwait
sub
ds
push
dec
insb
stos
inc
cltd
leave
addr16
inc
xchg
xchg
adc
cmc
push
xor
mov
cmc
sti
inc
pop
clc
mov
mov
jecxz
pop
int
imul
jno
fwait
jne
sub
xlat
inc
sbb
pop
cmp
jecxz
outsl
mov
lret
lods
jno
jl
add
mov
push
cmp
outsb
outsl
ret
xchg
data16
jle
int
or
ja
push
inc
sub
mov
dec
pop
inc
mov
jmp
lea
cmp
test
xor
mov
ret
in
push
jb
jl
or
inc
js
lret
ficoml
dec
mov
icebp
sub
push
or
arpl
xor
in
scas
cmpsb
dec
pop
lods
sub
sbb
adc
sbb
repnz
mov
jb
in
add
push
fs
xor
sub
imul
fcoms
int
mov
cmp
addr16
jns
mov
xchg
popa
cmc
jmp
lcall
idiv
cli
arpl
mov
in
cltd
cltd
or
mov
cld
sbb
lret
jle
or
sbb
or
fsubrp
xchg
xchg
test
insl
popa
cmpsl
jmp
mov
adc
jns
mov
aad
push
mov
xchg
sbb
outsb
inc
jle
sbb
dec
xchg
dec
sbb
mov
in
cmp
jmp
pop
je
test
inc
xchg
mov
xchg
in
stc
sbb
mov
push
cmpsb
das
adc
loop
pop
pop
divb
dec
pop
xor
or
adc
sub
js
into
or
lock
mov
pushl
rol
mov
movsb
lods
pop
xchg
xchg
pop
xor
cli
push
hlt
and
rorb
pop
pop
aad
sbb
push
mov
and
and
daa
adc
push
mov
mov
pop
sub
sbb
xchg
loop
or
orb
or
nop
adc
out
push
jge
shll
in
incl
xor
cwtl
nop
xor
adc
pop
adc
sbb
push
add
cmp
lea
bnd
shl
add
xor
and
cmp
out
fisubs
std
out
test
pop
gs
push
cmp
mov
push
repz
mov
clc
ja
and
jne
or
mov
or
shll
lock
test
repz
pop
lods
push
dec
mov
nop
outsb
mov
fs
inc
js
xor
ret
mov
cltd
lcall
shrb
ret
jecxz
out
imul
cmp
xchg
push
subl
fstpl
dec
pop
pop
jle
test
out
and
insb
sub
pop
cmp
insl
fidivrs
dec
xchg
pusha
mov
nop
in
mov
or
pushf
mov
pop
mov
add
jmp
daa
mov
inc
dec
outsb
inc
mov
test
out
insl
mov
add
mov
jmp
loope
cmp
leave
decl
xchg
bound
jle
add
dec
sbb
push
arpl
inc
fnsave
add
xchg
subb
cmp
fildl
and
sub
sub
pop
push
loop
xchg
jns
pop
cmpsb
lret
test
cmp
sub
cmp
jae
js
mov
mov
sbb
movsb
jno
fnsave
out
int3
fldt
mov
dec
add
iret
negb
pop
in
jns
push
fcmovu
sub
aad
mov
xor
mov
push
mov
adc
adc
in
jne
inc
ljmp
mov
fs
add
or
mov
or
fcmovb
icebp
dec
aad
aaa
sbb
jns
pop
jo
push
testl
mov
lods
lods
lret
sbb
addl
es
pop
cs
inc
add
cld
pusha
and
mov
popf
fdivs
push
insb
jg
cmpsl
rolb
or
push
lret
fdivs
fsubrl
push
jmp
adc
mov
xlat
lods
lret
test
sub
imulb
sbb
rorb
inc
scas
and
mov
out
fnsave
ret
jno
cmpsl
mov
dec
push
jb
or
pop
bound
or
scas
mov
push
add
cmpsl
jno
mov
sub
jae
add
out
clc
cs
fisubrs
xor
scas
lcall
push
fmull
or
mov
jnp
sarb
clc
aam
loope
mov
or
vpaddb
adc
jns
inc
mov
xchg
int
dec
inc
icebp
icebp
popf
pop
enter
fsubl
cli
aad
popf
loopne
bound
in
test
cmc
or
adc
sub
lret
pop
inc
jge
mov
xchg
adc
inc
mov
mov
rorb
andl
mov
lret
adc
dec
add
aas
mov
sub
fisttpl
stc
movb
in
xor
scas
jecxz
push
mov
aam
push
xchg
jg
fwait
call
mov
mov
xor
lahf
adc
inc
ficomps
push
push
cmc
jae
sbb
adc
jns
mov
fldl
cwtl
fbstp
adc
pusha
inc
mov
jno
pop
cltd
gs
mov
inc
pop
icebp
out
gs
jg
cmp
lods
je
cmc
inc
ja
mov
rcll
dec
aad
shll
mov
fincstp
push
mov
cltd
or
add
ret
movsb
gs
shlb
mov
icebp
xchg
gs
jnp
xor
jmp
out
lock
pop
sahf
pop
cli
pop
jbe
test
lahf
pop
les
fdivl
lods
fiaddl
movsb
cwtl
lret
jb
inc
adc
or
cmp
cld
pusha
push
ljmp
lock
orl
lds
jmp
jae
inc
aas
or
xor
lretw
lods
push
lods
mov
xor
adc
or
scas
push
add
bound
roll
or
xor
icebp
push
mov
outsl
pop
cli
lret
cwtl
sbb
out
jmp
lods
insl
sti
mov
movb
out
add
or
pop
pop
or
pusha
pop
and
out
pop
inc
loop
pop
cli
mov
push
daa
adc
cmp
or
movsb
and
movsb
inc
adc
adc
sub
and
insb
sub
aam
jle
push
xchg
clc
mov
push
sub
insl
mov
jp
fists
jnp
pop
test
pop
mov
pop
inc
jbe
std
repnz
pop
pop
sbb
pop
arpl
call
mov
daa
lods
add
sbb
inc
in
push
rorl
daa
daa
and
pop
xchg
inc
pop
sbb
add
push
xchg
repnz
ja
pop
sub
sub
push
loope
mov
lock
sub
push
pop
add
sub
xor
mov
leave
jnp
mov
jb
arpl
mov
loop
xchg
jo
xor
test
xchg
out
mov
sub
adc
push
cmp
in
and
dec
cmp
cmp
inc
add
fisubrs
cwtl
cmpsb
imul
stos
scas
lock
cld
inc
shll
jp
clc
pusha
sub
sub
pop
inc
fcom
std
add
push
fcomps
add
les
or
add
ljmp
pop
xor
ds
jo
push
fdivl
inc
std
push
sub
mov
pushf
mov
bound
cmp
jnp
adc
push
imul
mov
fucomi
add
add
in
icebp
sub
xor
add
ja
adc
sarl
mov
cmp
int
xchg
sbb
out
testb
ret
mov
data16
sarb
repnz
push
push
mov
cs
in
popf
lea
and
push
cs
or
into
out
lea
sti
pop
fisttpll
pushl
imul
mov
or
mov
jne
adcb
sub
jp
stc
inc
cmp
inc
xchg
or
and
push
lcall
mov
cld
mov
ds
out
and
cmp
enter
sbb
adc
mov
add
xchg
xlat
out
mov
clc
push
sbb
jae
bound
jns
adc
fisubrs
inc
fwait
lret
les
mov
mov
aaa
push
mulb
aad
arpl
dec
not
add
cbtw
xchg
mov
cmp
jns
les
mov
jg
decb
pop
and
incb
out
stos
sub
mov
pusha
and
cmp
fdivs
in
add
aad
push
inc
adc
mov
or
jl
push
pop
lods
or
xor
add
out
mov
movsl
mov
js
loope
js
push
rolb
fwait
insl
add
dec
xor
test
daa
ljmp
pusha
mov
sub
lods
add
dec
sbb
loope
movsl
loopne
push
scas
and
jbe
cmpsl
or
cli
sbb
testl
mov
cli
not
lea
out
pop
aaa
out
push
bound
add
mov
inc
mov
mov
jns
or
xorl
lds
fisubrl
inc
movsl
es
out
jl
lock
stc
push
roll
loope
je
adc
stos
add
aas
in
mov
int
popl
pop
adc
cmp
jbe
jns
or
mov
xor
xchg
sarl
sbb
outsl
pop
test
dec
icebp
stc
mov
ficoms
jle
xchg
icebp
add
pop
pop
jb
sar
mov
ret
adc
cmp
mov
dec
pop
adcl
data16
ljmp
clc
and
aad
int
outsb
js
inc
enter
fwait
scas
fisttpl
xor
pop
clc
add
dec
test
sub
add
aad
push
cs
popa
jecxz
icebp
jge
dec
pop
addr16
and
pop
and
mov
int3
sub
aaa
lods
and
lret
inc
stos
pop
dec
mov
movsb
repnz
xchg
and
push
jae
sti
push
bound
mov
repz
mov
pusha
sub
and
jle
inc
in
fnstcw
and
rol
loope
arpl
adc
test
data16
imul
cltd
fisubl
xchg
incl
mov
mov
pushf
out
cmp
in
aaa
pop
repz
jge
pop
fs
xor
xor
scas
rol
and
sub
push
out
or
hlt
sub
clc
stc
add
mov
sbb
jo
out
and
mov
jb
cwtl
push
push
aad
dec
cwtd
out
jns
mov
outsl
xchg
sbb
aam
das
int3
orb
sahf
sub
adc
ret
fidivrs
rol
int3
mov
scas
lods
push
loopne
fists
adc
adc
adc
subl
out
mov
fcmovnu
je
popf
mov
sbb
sbbl
sbb
shlb
es
adc
push
dec
add
cmc
sti
repz
sti
add
xchg
out
dec
adc
imul
scas
add
cmpl
out
cmp
mov
cs
xchg
and
ret
xor
subb
sbb
shll
mov
in
int3
sub
gs
loope
xchg
adc
rolb
rcl
ds
mov
cs
pop
das
and
popa
leave
fistps
lods
cmp
and
inc
and
mov
sbb
popa
mov
int
dec
fs
stc
nop
jbe
add
iret
push
insb
int3
ret
push
jmp
cmc
mov
cmc
jl
add
cmc
je
inc
fsts
xchg
jnp
test
xchg
lea
cmc
xchg
cli
cmp
pop
cld
ljmp
or
push
push
sbb
sub
jge
xlat
push
stc
xchg
and
bound
fisubs
xchg
das
ret
daa
push
and
lret
lds
repnz
enter
pop
jmp
repnz
test
push
pop
inc
addr16
jmp
and
lods
mov
out
push
ss
daa
test
jp
or
call
stos
or
xor
and
cli
push
dec
dec
and
sbb
in
ret
xchg
and
fistpll
cwtl
mov
pop
cli
or
adc
arpl
loope
mov
lret
filds
in
or
sahf
mov
mov
mov
movsb
in
push
scas
inc
mov
mov
xchg
sbb
and
adc
sub
push
xor
cli
sub
mov
xchg
imul
lock
inc
xchg
imul
ret
ror
xlat
das
insl
cmp
lret
nop
ljmp
sub
push
xor
cli
inc
jns
pop
sbb
rcr
sbb
ret
pop
orl
or
pop
test
inc
insb
push
adc
js
loopne
data16
andl
mov
add
inc
out
insb
jge
xor
push
iret
sbb
test
out
xchg
mov
movsl
xor
fisttps
cmpsb
sub
dec
sar
jae
xlat
stc
jne
aas
stos
push
mov
adc
inc
push
out
dec
push
cmpb
cmp
lcall
repnz
hlt
bound
cmp
les
enter
and
and
mov
repz
pop
adcb
xchg
mov
or
les
test
pop
cmpsb
testb
movsl
rolb
imul
push
ljmp
scas
divb
jnp
mov
add
cwtl
mov
xchg
jb
pop
dec
jne
jbe
test
push
int3
jbe
fdivr
push
aas
cmp
pop
cmc
repnz
dec
jb
pop
add
adc
add
pop
outsl
sbb
cmpsl
inc
es
push
mov
mov
cmovb
xor
jg
das
js
loopne
das
cltd
ficoms
push
push
jne
push
jnp
int3
xchg
cltd
dec
jge
mov
xchg
jns
ret
and
push
mov
imul
repz
pusha
negb
mov
add
jbe
xchg
int
sbb
insb
fnstsw
and
fwait
or
mov
stos
and
in
loopne
xchg
cltd
loopne
pushf
out
sub
int
pop
adcb
lcall
cmp
adc
cmpsb
sbb
dec
insl
popf
mov
sbbl
push
das
mov
jbe
jns
pop
mov
pop
sub
jle
cmpsl
push
negb
cmp
pop
int3
jmp
pop
mov
mov
roll
das
ds
jbe
mov
sub
dec
xchg
xchg
pop
or
push
jnp
dec
or
sbb
scas
adc
jne
mov
hlt
cmp
aad
iret
repz
jl
not
lcall
stc
xor
push
push
xchg
popf
sub
push
and
sbb
jo
cmp
xchg
xchg
das
fs
in
inc
sbb
shr
repnz
adc
jb
out
adc
xor
outsb
mov
push
or
push
movsb
xchg
scas
pop
mov
es
jne
lds
add
jge
pop
mov
in
loopne
and
es
ds
jnp
iret
add
mov
or
adc
mov
dec
push
outsb
xchg
sbb
push
xchg
adc
push
cmp
cld
loope
ja
fldt
add
mov
xchg
adc
push
scas
outsb
hlt
push
loopne
mov
and
mov
insl
add
mov
cltd
xchg
test
cmp
inc
fmull
nop
mov
dec
je
ds
inc
push
push
mov
rol
xchg
rcrl
icebp
pop
mov
fcmovu
sub
scas
push
add
bound
aam
mov
jle
jmp
mov
xchg
mov
jmp
scas
in
jl
scas
mov
cmp
add
popf
dec
imul
call
sub
jo
dec
insl
int3
push
shrb
sub
loopne
stos
lods
iret
jmp
xor
inc
sub
xchg
or
dec
xor
adc
dec
fwait
cs
jae
sub
repnz
mov
sbb
loopne
rorl
cmp
sbbl
in
xor
dec
lahf
rcll
cs
cmc
fmull
and
repz
sbb
add
sbb
mov
cmp
cld
pop
sahf
xchg
or
push
jne
lock
sbb
cmpsb
inc
sbb
dec
push
fldenv
lods
add
mov
pop
daa
mov
mov
adc
in
and
lcall
or
cmc
out
pop
pusha
sbb
pop
jae
xlat
stc
pop
jecxz
pushf
pop
add
loopne
mov
adc
xchg
jmp
fs
hlt
ljmp
ds
push
fcompl
pop
out
je
cmc
xchg
add
lock
mov
sbb
das
inc
in
jns
inc
adc
adc
hlt
jae
inc
loopne
mov
cld
fists
popf
je
push
sbb
std
clc
mov
xchg
fstpt
xchg
ret
mov
insb
push
scas
cmp
adc
mov
push
cwtl
call
dec
sub
lret
and
jns
in
push
lea
dec
jle
cmp
or
lods
clc
stos
mov
and
jg
mov
cmpsb
xor
lods
adc
clc
inc
xlat
movsb
ljmp
mov
sub
shlb
jl
movl
gs
test
adc
push
outsl
sti
mov
mov
out
cwtl
in
jmp
and
lea
into
icebp
or
or
in
dec
aaa
mov
jp
and
js
gs
jne
repnz
leave
xorl
lcall
pusha
roll
jno
push
shr
stc
jnp
loopne
adc
sbb
cmc
outsl
cmc
andl
test
imul
dec
mov
pushf
mov
dec
xor
mov
inc
mov
xorl
cmp
xchg
inc
les
mov
ret
nop
and
sahf
aam
inc
cvtdq2ps
jno
or
stc
fcmovne
dec
sub
add
mov
sbb
cmp
arpl
frstor
imul
pop
jle
and
or
clc
cs
insb
cmp
mov
std
cmp
icebp
out
inc
sub
mov
shll
or
mov
daa
pusha
jmp
mov
jge
movsl
stos
xchg
mov
mov
pop
rolb
pop
arpl
mov
push
cmp
adc
sbb
inc
data16
out
push
sbb
sbb
sub
inc
mov
jbe
sub
fwait
pop
or
cld
scas
mov
pop
std
shlb
cmp
sub
cmpsb
jmp
or
dec
gs
mov
inc
gs
jge
cmp
out
mov
into
gs
push
jl
popa
adc
push
pop
mov
sub
popa
mov
ret
pop
and
inc
adc
pop
repz
sahf
hlt
push
pushf
lahf
out
cmp
xchg
inc
pop
ret
push
sub
clc
push
xor
inc
scas
inc
mov
incl
mov
cltd
fcompl
mov
xchg
jb
fcmovu
les
or
pop
adc
loopne
outsl
push
jg
nop
hlt
out
add
mov
ljmp
loope
xchg
rol
and
pop
leave
test
rol
sahf
stos
cmp
cmp
inc
xorl
icebp
bound
mov
xor
outsb
sbb
sub
lds
pop
fdiv
sbb
mov
das
and
pop
or
jle
adc
add
xchg
movsl
mov
pop
cmpsb
aaa
push
xchg
inc
test
out
hlt
outsl
ja
pop
mov
shrb
mov
xchg
pop
push
push
loop
test
in
pop
xor
lods
dec
adc
xor
shlb
mov
xlat
xor
lcall
arpl
pop
jl
push
ret
xchg
iret
jg
out
stos
insl
push
xchg
cmp
dec
fnstcw
les
fdiv
sub
cmp
xchg
sub
jg
mov
jnp
xchg
repnz
cmp
add
fdivs
xchg
lds
aad
xorl
leave
sub
cmp
xchg
shll
fidivrl
imul
pop
cmpsb
cwtl
cli
cmpsl
outsb
and
fwait
test
adc
insl
nop
or
dec
scas
jb
lcall
fcmovnu
xlat
setne
xchg
sub
fwait
mov
loope
pushf
in
out
pop
enter
cmp
mov
mov
jns
lcall
frstor
mov
xor
sub
push
in
popf
icebp
dec
fidivrs
mov
inc
out
xchg
movsb
cwtl
clc
pop
mov
pop
sub
mov
loope
xchg
cmp
lcall
add
fs
lods
sti
pusha
pop
dec
sbb
xchg
mov
fdivrl
xor
out
out
in
mov
sbb
lock
lcall
jae
jle
sbb
xorb
nop
aad
fbstp
add
add
inc
rcrb
jnp
scas
adc
and
in
cmp
mov
cmp
cmp
lret
arpl
lods
stos
psrad
mov
mov
daa
and
cli
jle
xchg
adc
xchg
xor
cmp
rcrl
pop
out
scas
mov
inc
sub
xlat
mov
adc
xor
movsl
test
mov
adc
ljmp
pop
xchg
xor
mov
scas
xchg
shlb
jbe
xchg
add
roll
sbb
dec
lea
jbe
imul
push
pop
fcomip
inc
xchg
enter
cmc
sub
mov
bound
push
dec
out
and
lods
cld
and
cmp
pop
xchg
cmpsb
ljmp
ret
sub
ret
fimuls
jnp
movsb
fistpll
xchg
inc
and
xchg
mov
push
adc
testb
cmp
ljmp
xor
ljmp
fwait
mov
jle
jo
mov
movsl
sub
sbb
jmp
mov
add
test
pop
pop
int
fmul
sub
test
mov
out
or
shlb
leave
pusha
fcoms
test
repnz
and
int
jbe
mov
sbb
iret
pop
arpl
xor
les
fiadds
es
or
outsb
in
cltd
mov
mov
lods
mov
push
lods
enter
push
ss
add
xchg
inc
out
les
fsubs
ljmp
cld
stos
jmp
cmpsb
cmp
arpl
out
shlb
mov
cmp
xchg
mov
scas
lea
imul
addr16
js
aam
jns
movsl
mov
adc
inc
icebp
repz
stos
je
push
mov
negb
pushf
lcall
mov
pop
add
sub
xor
mov
or
or
decl
dec
xchg
out
sbb
pop
insb
xchg
xor
adc
jbe
sub
addr16
mov
mov
and
adc
pop
mov
mov
or
jae
mov
fwait
das
pusha
stc
push
and
xchg
in
subl
mov
es
mov
jne
dec
out
sbb
mov
outsb
pushf
ret
fcmovnbe
sbb
aaa
jae
jo
popf
cmp
ds
pop
cs
popf
jecxz
data16
popa
frstor
push
stos
test
shll
insb
add
out
add
adc
nop
es
adc
lods
lods
cmc
dec
cmpsl
inc
das
mov
pop
xor
mov
or
stos
sbb
cwtl
jne
push
in
mov
xchg
scas
mov
shrl
inc
add
jecxz
mov
sub
and
in
mov
or
and
jmp
into
jge
leave
jno,pn
sti
cmp
push
add
cmp
iret
out
push
jbe
hlt
fs
fcomp
xchg
aam
mov
loopne
je
fcoml
dec
decl
cmpsl
js
sub
fidivrl
mov
leave
mov
xor
or
sub
xchg
test
mov
xchg
js
and
sti
inc
cmp
mov
dec
lock
push
push
xor
lock
mov
fildl
in
jno
mov
mov
jp
lret
into
dec
jns
insl
repz
xchg
test
roll
into
test
add
pusha
add
in
xchg
cwtl
lods
sbb
or
sbb
arpl
pop
inc
inc
push
add
cmc
xor
push
xor
dec
sub
enter
lods
xlat
mov
imul
fdivrs
jl
popf
and
and
testb
push
sub
sbb
scas
adc
lret
jae
mov
icebp
pop
mov
mov
ret
pop
dec
shll
out
sbb
push
pop
adc
xor
shlb
add
mov
mul
scas
sbb
xchg
lock
pop
and
dec
cmp
sbb
orb
fildl
add
and
rolb
lods
not
jae
fnsave
xor
add
in
jle
shl
insb
cmp
sbb
fwait
int
push
pop
mov
fildl
dec
std
cli
mov
outsl
adc
xchg
mov
sbb
pop
es
add
inc
gs
xor
movb
sbb
orl
jmp
dec
adc
jnp
es
or
mov
out
fiaddl
push
fdivl
sub
inc
ss
sub
or
popf
jns
test
sbb
mov
aas
rol
out
or
cli
int3
xor
cmp
jl
push
mov
loopne
std
imul
push
roll
fbld
push
lds
cmp
xchg
adc
xchg
push
jg
loopne
jo
pop
fucomip
cmp
xor
aaa
jbe
xor
fcoms
sbb
xchg
sub
imul
mov
es
mov
loope
adc
jle
ud0
dec
cmp
mov
stc
add
jg
lret
fwait
das
sbb
inc
jecxz
xor
inc
or
xor
mov
sbb
shrl
jecxz
jbe
mov
pop
cmp
subb
sti
cmp
outsl
stc
lret
jecxz
push
add
push
mov
jle
imul
pushf
pushf
or
les
jecxz
mov
mov
adc
pusha
dec
sbb
cld
pusha
sbb
mov
lret
ljmp
cmp
adc
pop
sar
loop
std
int
pop
and
mov
es
mov
xchg
sub
jle
add
mov
mov
sbb
and
cmpsl
xor
js
popf
divb
mov
dec
stos
fistpll
iret
xchg
jl
stos
xchg
stc
inc
mov
mov
adc
in
mov
mov
je
and
push
imul
or
stos
jecxz
or
cmp
mov
sbb
push
sub
push
outsb
in
xchg
lea
and
inc
insl
adcb
insl
movsl
cmp
das
int3
mov
sbb
xchg
mov
mov
sti
filds
add
aam
cwtl
mov
mov
mov
in
adc
sbb
push
pop
push
rcrb
add
xlat
sarb
imul
inc
ja
pop
mov
cmp
ret
dec
aaa
or
cltd
daa
jge
add
add
fs
or
lock
adc
rolb
pop
imull
dec
in
movsb
adc
mov
pop
in
adc
add
or
mov
push
sbb
xchg
mov
cs
mov
jp
leave
cs
and
imul
mov
ljmp
mov
int
push
imul
mov
inc
int3
mov
xchg
call
and
or
daa
push
outsl
pop
and
imul
in
out
jl
pop
mov
jmp
mov
popf
out
mov
xlat
sbb
pushl
xchg
dec
sub
cld
repz
pop
mov
and
mov
ja
subl
pop
xchg
in
mov
testb
or
xchg
pop
or
popa
sbb
xchg
repnz
mov
sub
mov
push
xor
adc
call
imul
cmp
cmp
pop
dec
enter
lods
test
push
cmpsl
fsub
cmpsb
pop
xchg
fmulp
xchg
jecxz
sub
push
loop
lods
xchg
push
lds
in
jecxz
fldl
sbb
das
nop
fidivrl
pop
dec
add
pop
into
inc
out
xor
popa
and
pop
mov
ror
push
xor
jmp
push
adc
and
out
push
inc
seta
enter
outsl
outsb
mov
pop
and
sahf
inc
jle
mov
add
mov
popf
aas
lret
pusha
sarb
int
fdivrs
out
insb
in
fiadds
loope
mov
push
xor
sub
pop
cli
gs
jmp
outsl
or
and
or
ss
mov
movsb
aas
fwait
push
jp
cli
dec
ds
push
int3
popf
insb
ret
cmpsl
mov
fimuls
dec
aad
fisubl
and
stos
das
mov
inc
mov
mov
arpl
push
push
out
adc
dec
ja
stos
cmpsl
jge
pop
sbb
fstpt
jmp
pushf
cld
or
adc
ret
test
mov
or
mov
jmp
or
aas
aad
lahf
mov
out
lock
test
push
loope
rcll
mov
sbb
cli
adc
es
mov
int3
imul
enter
shll
and
mov
jl
dec
aad
fcoml
xlat
jnp
cmpsl
xchg
in
xor
testl
pop
xchg
daa
inc
nop
sub
lea
fs
push
int3
imul
imul
cmpsb
out
inc
inc
add
push
shlb
lcall
mov
cld
inc
mov
mov
mov
pop
sbb
stos
adcl
push
push
mov
cmp
ret
xor
int3
push
gs
mov
fnsave
enter
inc
aaa
or
xchg
dec
or
push
sub
hlt
daa
int
xchg
add
xchg
mov
dec
aas
popf
xlat
push
mov
xchg
movsl
dec
pop
xor
lret
sub
enter
test
jl
push
xor
inc
jns
lock
or
pop
fcompl
lret
stos
enter
lds
mov
dec
pusha
rcrl
inc
fsubr
xor
mov
xlat
imul
stos
mov
add
hlt
bound
xor
imul
sub
jle
add
dec
out
inc
jno
ljmp
mov
xchg
aam
sbb
xchg
dec
cmp
jbe
pop
into
adc
imul
or
xorl
out
leave
mov
pop
xchg
xchg
and
jbe
fimuls
pop
dec
inc
dec
jnp
decb
xlat
push
mov
js
pop
stos
sub
mov
pop
sub
mov
xor
inc
nop
sub
cmpl
ss
js
and
rcr
stos
mov
outsb
addr16
arpl
sbb
pminub
jle
arpl
jl
cmp
test
cmp
pop
jl
push
dec
inc
pop
pop
std
aad
std
out
mov
adc
adc
fsubs
les
xor
jp
add
and
push
sbb
xchg
cmp
sub
or
aas
push
mov
aad
xor
cmp
subl
xchg
test
push
jl
andl
int
dec
mov
add
cwtl
call
lahf
mov
mov
push
add
loope
mov
inc
mov
xor
mov
adc
into
cmpsb
mov
jnp
pop
aas
push
add
fs
xor
lock
xorb
push
and
xchg
daa
xchg
repnz
int
icebp
shlb
push
inc
xchg
mov
mov
aaa
test
sbb
cli
bound
push
dec
mov
stc
xor
pop
xor
cwtl
push
adc
mov
in
insl
cmp
inc
aas
sahf
xchg
cmp
sub
dec
xor
sbb
out
mov
mov
and
addr16
fcoml
lahf
dec
testl
std
push
push
fadds
push
cli
push
popl
dec
outsl
aas
mov
cmp
sbb
push
mov
add
xor
in
fstpt
sub
xor
mov
pop
fidivl
xor
in
add
xchg
lods
push
jnp
mov
jecxz
cmp
mov
fwait
hlt
rorl
mov
sub
ret
loope
aas
sbb
cmp
mov
popa
das
addr16
push
sbb
sub
lods
ljmp
xor
jo
sub
ss
add
idiv
imul
dec
popa
fisubs
cmpsb
js
ret
dec
das
popa
testb
cli
mov
push
mov
push
gs
loope
inc
jmp
push
pop
sbb
out
addr16
mov
mov
cld
clc
popa
sbb
shrl
in
or
sub
imul
repz
adc
push
call
jecxz
fidivrs
test
sbbb
pushf
adc
loop
dec
push
fsubrp
adc
ss
push
cmpsb
or
popa
es
js
add
insb
mov
push
stc
adc
and
popf
mov
lea
insl
cli
test
fsubr
outsb
xchg
inc
inc
inc
iret
cmp
sbb
or
fwait
in
jecxz
in
inc
sar
add
fstpt
push
or
mov
adc
mov
jbe
cwtl
jge
lahf
sbb
mov
rorl
dec
xor
shlb
xchg
xchg
jle
pop
lods
cmp
xchg
jb
leave
pushf
es
fildll
xor
lds
fnstsw
xchg
mov
push
lods
cmp
dec
out
jecxz
cld
adc
adc
pop
inc
int3
in
mov
loop
push
jne
outsb
mov
cmpsl
mov
mov
xchg
data16
xor
jge
insb
in
inc
fmull
pop
mov
sub
or
dec
es
sbb
stos
stc
fcomps
aad
sub
add
push
loop
aad
add
lods
fimull
out
leave
pusha
add
and
sbb
push
jp
mov
mov
push
jp
inc
test
ljmp
out
stc
push
and
arpl
mov
sub
sub
mov
jb
sub
jae
dec
jo
in
mov
cld
sti
adc
jo
sub
outsb
inc
in
pop
push
imul
xor
aam
mov
dec
push
inc
movsl
push
scas
popa
enter
jmp
dec
push
aad
aaa
inc
jge
cwtl
push
dec
scas
mov
xchg
ds
jge
rcrl
cmp
mov
in
or
mov
xor
pusha
jle
stc
push
lds
add
or
fwait
lcall
push
daa
ret
ds
shld
clc
mulb
jne
test
pop
cld
add
jecxz
dec
imull
sbb
pop
jb
mov
add
push
loope
sub
pop
dec
mov
nop
jae
cwtl
mov
popa
data16
jecxz
ljmp
jle
lcall
scas
nop
cmp
cwtl
pop
aad
and
pop
out
fists
adc
dec
filds
jp
xor
xchg
cwtl
loopne
imul
arpl
dec
xor
shll
dec
xchg
push
push
xor
scas
int3
or
push
sbb
dec
add
mov
imul
xor
jb
out
fs
in
push
dec
mov
jne
push
and
ficomps
arpl
push
arpl
lock
xor
in
aad
cwtl
pop
jbe
jge
scas
loope
dec
std
xchg
loope
push
push
mov
stos
gs
adc
push
push
aad
push
add
cmovl
mov
sub
lret
dec
mov
out
mov
inc
stos
xchg
subl
jbe
fucomip
inc
sahf
mov
push
out
mov
xchg
adc
cmpsl
dec
pop
xchg
add
mov
dec
sbb
lret
lret
arpl
adc
mov
pop
mov
and
lret
inc
icebp
xor
mov
jae
into
shr
mov
xor
popf
fistpll
lods
mov
mov
into
pop
sahf
jge
sub
lds
push
aam
lahf
cmp
jnp
mov
mov
ror
mov
scas
pop
dec
cltd
scas
mov
xor
or
xchg
or
fimull
addr16
xor
aam
lahf
out
sbb
popf
inc
inc
nop
mov
jecxz
push
jb
sti
cmp
mov
inc
and
xor
push
push
icebp
sbb
iret
jb
andb
xchg
ss
xchg
movsl
sarl
frstor
push
sete
cld
repnz
push
cmp
test
mov
ret
notb
in
or
mov
les
and
mov
inc
inc
mov
cltd
in
icebp
lods
and
sarl
insl
and
mov
xor
ret
ud2
and
push
fs
lods
ret
test
xor
jl
repz
jnp
test
mov
shlb
inc
cwtl
out
loop
js
test
call
lahf
mov
sti
stos
push
fsubrl
ljmp
fmul
sub
sub
rep
sub
orl
lahf
aaa
pop
daa
cmp
aad
es
aam
ficompl
popf
dec
and
jle
jecxz
push
mov
or
sub
test
or
aaa
cltd
adc
xchg
jb
nop
fimuls
pop
jbe
shlb
push
and
fildll
insl
aam
xchg
jl
ret
xlat
nop
lret
cmpsl
mov
lds
js
or
sbbb
jo
out
jge
cli
cmp
dec
stc
mov
add
cli
stc
or
dec
cmp
je
push
ror
fisubrs
mov
ljmp
test
adc
fldcw
pop
aad
roll
test
cmpl
cmp
fistpl
and
cmp
lret
lods
mov
or
xchg
mov
adc
xor
jg
xor
pop
dec
lahf
adc
addr16
sbb
outsb
sub
push
adc
or
mov
popa
sub
jb
gs
dec
jmp
lahf
icebp
jp
mov
mov
add
test
jbe
aaa
mov
lahf
adc
imul
cmpb
out
clc
stc
jp
int
int3
or
mov
xchg
pop
fisttps
inc
push
std
aaa
js
das
sbb
cmp
clc
push
mov
xlat
sarb
mov
xor
scas
and
adc
adc
loopne
inc
test
imul
cmp
mov
cmpsl
test
sub
inc
pop
mov
dec
xchg
push
pop
xor
mov
dec
lock
paddsw
mov
mov
lock
hlt
popa
adc
imul
pop
push
sbb
test
sahf
sar
dec
mov
mov
jmp
out
js
mov
lret
mov
test
jbe
adc
xor
test
rcrb
and
sub
and
mov
push
adc
data16
jg
pop
std
mov
repnz
jl
bound
outsb
ljmp
inc
cmp
jns
xor
arpl
into
jbe
faddp
shll
jnp
pop
pop
mov
lret
lods
out
aam
clc
xor
call
imul
xor
add
fcoml
xor
daa
je
cmpsb
pop
lcall
mov
sbb
xor
sub
mov
xor
aad
adc
xor
lcall
adc
push
movl
and
inc
inc
test
xorl
sub
mov
push
int3
movsl
pushf
cltd
call
sbb
xchg
mov
inc
jbe
xor
mov
cmpl
xchg
bound
test
test
dec
addr16
push
and
lret
sub
push
inc
pop
jbe
fisttps
mov
sub
cmp
lea
jp
add
imul
mov
cmpl
fldl
dec
or
sti
dec
filds
data16
xor
int
xor
mov
push
xchg
es
mov
or
mov
bound
push
jp
mov
aas
addl
dec
add
sub
cmp
sub
cmp
test
mov
lods
mov
dec
pop
sarl
inc
filds
lret
push
sub
sub
and
pop
cmp
es
jmp
sub
js
mov
mov
mov
jno
adc
stos
insl
and
in
adc
inc
jb
push
push
or
inc
xor
mov
inc
gs
test
mov
pop
out
in
add
mov
stc
jmp
mov
rorl
xlat
sbb
sarb
xor
inc
mov
sub
mov
jl
pusha
cs
movsl
stos
loope
loop
cmpsb
mov
ljmp
jae
in
add
xchg
orb
mov
negl
insb
aad
mov
hlt
xor
int
lods
add
pop
mov
sahf
cs
mov
iret
pop
sbb
insb
push
mov
mov
stos
in
ret
fidivrs
subb
inc
push
add
insb
xchg
jnp
add
inc
inc
push
mov
dec
mov
shlb
insb
sahf
clc
sub
add
dec
dec
mov
jecxz
xor
push
inc
mov
push
mov
jge
iret
fidivrs
aam
mov
fdivr
cmp
cwtl
ret
out
sbbb
dec
out
jle
push
ljmp
sbb
xchg
xchg
out
mov
sti
dec
jns
jns
lahf
push
adc
ret
jecxz
cmpsl
mov
adc
and
sub
xlat
mov
out
stos
sbb
in
shll
cmp
jne
adc
push
xchg
call
xor
add
jl
aam
pop
cmp
cmp
call
imul
mov
test
lret
movsb
insl
cmpsl
in
addr16
fnstcw
add
in
sbb
shrl
ret
out
jg
push
iret
add
daa
jbe
lds
jmp
rorb
aas
out
mov
pop
lea
fcmovb
lret
mov
nop
or
mov
mov
das
loopne
stos
andl
mov
mov
inc
or
lods
inc
aad
out
in
das
cli
repnz
test
aad
jmp
dec
cmp
pop
int
adc
sarl
les
mov
dec
jbe
cli
and
icebp
adc
loopne
sti
add
imul
nop
xchg
mov
cmpsb
push
inc
add
sub
mov
mov
push
mov
sub
hlt
imul
xor
jg
mov
bound
sub
or
mov
in
dec
mov
in
idivl
sarb
cwtl
dec
cmp
decb
gs
cmp
xor
xor
clc
cmc
xor
sbb
mov
icebp
int3
push
fmul
lahf
out
movsb
push
rcll
div
int3
jbe
mov
fldt
mov
xchg
mov
and
xchg
mov
lahf
jae
mov
icebp
je
jno
sarb
mov
push
testl
icebp
vmovdqu
lahf
push
es
movsl
fnstcw
rcrb
push
pop
inc
cmp
inc
into
mov
ret
pop
cmp
pop
fildl
push
sbb
jb
pop
cmp
loopne
ja
mov
xor
adc
sbb
pop
xchg
out
inc
dec
pushf
imul
popf
pop
and
repnz
jg
frstor
fsubr
sbb
ljmp
xor
repz
jecxz
xlat
jmp
jmp
adc
xor
test
mov
dec
js
lret
jmp
ret
nop
fs
sub
mov
call
xlat
in
fsubrl
cmp
daa
out
cmp
xchg
pop
aad
popf
ss
mov
cld
pop
cmpsb
cmc
in
sbb
mov
out
pushf
mov
pop
loop
jae
stos
mov
push
mov
mov
jbe
add
fdivl
dec
leave
jno
int
jae
faddl
lret
jbe
addl
mov
fnstcw
mov
inc
sub
outsb
outsl
mov
xchg
mov
inc
dec
jmp
pop
repz
mov
shlb
popf
out
dec
or
sub
adc
mov
scas
orl
xchg
jae
daa
lods
out
jmp
mov
xchg
mov
lods
pop
loop
xchg
fs
xor
mov
insl
lea
sub
test
inc
bound
arpl
cmp
push
push
icebp
loopne
out
push
popa
imul
push
lock
and
std
out
movl
pop
add
inc
popa
xlat
mov
jmp
jmp
jns
xor
cltd
std
ret
or
lods
lret
and
or
imull
adc
pop
xchg
push
adc
ja
lods
sbbb
cmp
sub
addl
sbb
jno
out
mov
into
inc
or
add
lods
in
mov
mov
mov
das
cld
xlat
lea
cmpsb
xchg
pop
xchg
call
out
mov
adcl
lea
push
repnz
ret
xchg
aad
je
dec
rcll
mov
push
gs
push
icebp
mov
idivb
insb
jp
inc
mov
dec
enter
cmp
dec
ja
stos
pop
or
push
mov
add
push
adcb
andb
ret
fidivrs
inc
push
pop
movsl
sbb
push
xor
jnp
scas
inc
cwtl
mov
into
inc
jl
jnp
test
mov
xlat
cmp
mov
lea
mov
test
lds
pop
pusha
mov
mov
fbstp
movnti
inc
lods
xor
mov
and
in
jmp
add
aad
xchg
mov
mov
div
call
jne
add
or
repnz
mov
jae
pop
xchg
inc
sub
in
dec
jge
mov
cmc
cmp
mov
test
insl
in
out
fsubr
call
scas
xor
shrb
mov
and
aam
sub
cli
mov
repz
arpl
sti
movsb
jmp
dec
out
cmp
dec
stos
adc
push
xor
adc
mov
sbb
loop
dec
aam
loopne
lods
lds
fs
cmp
popa
jae
dec
add
push
imul
cltd
jne
or
jbe
jecxz
pop
mov
xchg
cmc
mov
cmpsl
pop
mov
insl
sbb
mov
imul
cltd
inc
cmp
fdecstp
loope
xlat
fildll
cmp
loope
je
fstl
lret
ret
loop
ljmp
test
cmp
fdivrl
mov
test
sub
jns
js
lds
jmp
movsl
dec
test
adc
adc
push
push
mov
sbb
mov
adc
pop
inc
jae
push
add
or
pop
xchg
mul
adc
add
add
inc
fadds
add
adc
movsl
data16
mov
or
test
js
fisttpl
sbb
xchg
mov
push
inc
add
aam
cmp
ja
xchg
fisttpll
test
sub
pop
repz
cmp
mov
and
push
mov
mov
add
xchg
iret
clc
mov
in
dec
out
jae
aad
push
mov
sti
arpl
rcrl
xor
je
out
fisubl
xor
imul
sarl
mov
idivl
daa
jns
scas
jne
jne
in
clc
inc
sbb
bound
int3
xchg
test
xchg
addl
sub
cmp
mov
lahf
sub
pushf
dec
inc
int
aad
and
int3
pusha
fneni(8087
sub
inc
test
arpl
jno
sub
adc
ja
sub
mov
in
sbb
or
push
jnp
ds
inc
imul
std
lock
sub
ds
cmp
fisubrs
jecxz
push
cmp
pop
pusha
xor
mov
push
insb
xchg
shlb
lcall
mov
xor
lcall
lods
xcrypt-cfb
cmpsl
and
inc
in
push
sub
testb
mov
icebp
push
add
in
xlat
sti
xchg
fistpl
mov
mov
dec
fdivl
ret
std
in
and
imul
push
lods
cltd
mov
int3
pop
mov
out
xlat
lods
aam
rcl
jne
cmpsl
out
jae
mov
aas
xchg
push
sub
or
pop
mov
insl
out
or
cmp
mov
test
arpl
sub
mov
inc
outsb
adc
stos
cmp
xchg
mov
push
test
jnp
push
std
push
lret
xchg
xchg
adc
lds
cmp
xchg
out
add
cmp
push
push
sahf
dec
sbb
mov
and
mov
and
push
call
mov
add
push
cli
ret
mov
int
icebp
mov
andb
subb
imul
adc
cmpsb
inc
rcl
lahf
adc
xchg
cmpsb
lcall
mov
sbb
push
sti
or
push
and
push
sbb
push
fadd
xor
bound
xlat
or
testl
test
add
jmp
lods
or
in
jbe
xor
sbb
je
inc
sahf
and
mov
cltd
movsl
xorb
sbb
cmp
data16
push
mov
or
movsl
push
and
cmp
push
in
cs
push
xchg
push
stos
pushf
es
push
dec
leave
jns
nop
xor
in
adc
lods
inc
nopl
inc
mov
mov
xchg
jb
fisttpll
repz
mov
mov
or
lock
sbb
sbb
sahf
pop
mov
add
scas
rclb
pop
out
movzbl
cs
cmpsb
cmp
scas
sub
stos
jmp
xchg
movsb
sub
out
nop
and
fmull
or
data16
subb
out
xor
popa
add
pop
mov
push
add
jle
mov
add
push
addr16
les
jg
push
mov
aas
cmpb
das
out
sbb
shll
mov
xchg
or
add
mov
mov
fisubs
inc
iret
in
pop
cmp
mov
pusha
cmp
push
stc
je
pop
push
or
adc
lahf
mov
mov
cmp
jle
push
jmp
in
sub
fs
xchg
inc
movsl
adc
lock
jbe
inc
aam
stos
es
mov
dec
idiv
movsb
in
push
mov
mov
cmp
mov
mov
mov
gs
sbb
add
push
lret
je
cmpsb
jbe
xchg
push
test
out
repnz
stc
lods
adc
mov
fimuls
in
mov
loopne
mov
add
add
dec
sbb
call
sbb
es
mov
fsubrl
data16
ljmp
or
aam
inc
pusha
mov
jno
loop
or
in
dec
jmp
sbb
test
out
cld
out
mov
pushf
test
pop
clc
rorb
fnstsw
es
or
dec
pop
mov
pop
fdivrs
cwtl
sub
out
adc
inc
scas
int3
inc
xor
adc
jmp
lret
into
cmc
out
aad
push
clc
cmpsb
fidivs
xchg
xor
les
jg
sbb
loop
scas
out
xchg
pop
shlb
mov
in
jmp
push
mov
mov
or
cmc
xchg
pop
enter
fadds
rclb
or
aaa
dec
lods
xor
jae
mov
into
mov
aam
add
jae
ljmp
mov
mov
insb
or
fstpt
and
xor
mov
pop
xchg
dec
ljmp
popa
aad
loopne
es
js
int
xchg
cmp
or
push
out
stos
sbb
je
stc
fdivs
mov
in
xchg
sbb
gs
scas
mov
xlat
fnsave
cmp
mov
es
pop
icebp
data16
sbb
and
push
inc
enter
es
pop
mov
pop
mov
cmpsb
add
cld
mov
mov
push
xor
les
loopne
je
cmp
push
sarb
pop
add
mov
mov
cwtl
aam
mov
push
cmpsl
icebp
in
lea
inc
adc
and
jl
in
pop
cwtl
hlt
lcall
sub
and
inc
xchg
sbb
daa
lock
jecxz
mov
jmp
push
jmp
jecxz
jg
leave
jbe
andl
xorb
lock
xlat
sub
dec
lret
inc
movsb
loopne
mov
or
lret
dec
xlat
dec
rcll
adc
fwait
shl
daa
js
mov
add
lock
dec
mov
rcrb
mov
enter
insb
mov
jnp
sti
xor
imul
aam
stc
in
push
bound
jle
xor
or
sub
push
sub
dec
nop
jae
hlt
push
mov
out
mov
sub
dec
enter
lods
push
fld
test
xchg
mov
jmp
imul
or
test
ljmp
and
xchg
repnz
dec
mov
loopne
cs
mov
insb
pop
ret
idivl
gs
pop
ret
or
inc
pushf
inc
push
xchg
ret
cmpsb
cmp
addb
mov
popa
stc
lea
cmpsl
jns
xchg
mov
mov
pop
pop
lock
dec
ret
call
pop
scas
cld
aad
lock
mov
orb
leave
lock
adc
sbb
xor
loopne
fisubl
xchg
pop
cmp
jmp
shrl
sub
aas
int3
test
sbb
or
clc
insb
pop
cltd
repz
inc
imul
jge
pop
aad
int3
std
mov
out
jg
mov
outsl
insl
je
daa
jbe
adcl
movsl
or
xchg
jae
aas
jle
xor
ljmp
lock
push
call
lods
pushf
jns
or
adc
push
ret
pop
pop
bound
cmp
shl
lea
sbb
sbb
inc
fiaddl
rolb
adc
and
mov
shll
movzbl
xchg
or
mov
fistl
sub
aad
ret
jae
adc
js
add
mov
clc
addl
cmpsb
or
mov
test
sbb
xchg
call
mov
in
insl
cmpsb
ficoml
xor
int
mov
xchg
cld
test
call
cmpsl
pop
hlt
es
fcoml
outsb
loope
popa
call
or
lahf
pushf
xchg
sbbl
pop
xor
movsl
shr
push
iret
sbbb
push
mov
xchg
fnstenv
cwtl
jecxz
sti
sub
mov
iret
cmp
add
push
push
cs
dec
mov
pop
or
call
gs
stos
arpl
les
ret
mov
in
cmp
mov
nop
pop
adc
sub
mov
outsl
rcll
ljmp
add
jae
stos
pop
arpl
sub
aaa
cmp
push
jecxz
push
add
in
out
je
xchg
mov
and
mov
add
lcall
cmp
cmp
dec
pop
or
and
es
ret
and
cmp
or
cmp
aaa
or
mov
mov
fcmovne
inc
sti
imul
sbb
sub
dec
push
dec
and
cmpsb
addl
inc
rol
cmpsl
push
les
cmpsl
dec
xor
pop
test
or
addr16
push
mov
mov
rcl
and
push
out
xchg
pop
jns
and
inc
and
jnp
in
lods
lods
imul
das
leave
fwait
push
xchg
push
xor
out
push
jo
lret
and
inc
lahf
mov
pushf
mov
cmp
mov
fcomi
sub
arpl
mov
push
cs
mov
fs
ja
pusha
push
lods
cs
aas
push
jo
call
cmpsl
outsb
out
cmp
sbb
jle
cmpsb
outsl
es
jge
lcall
jle
rclb
pop
xchg
cmp
fstps
rclb
pop
sub
adc
mov
jns
and
jle
sbb
jns
sbb
out
dec
xchg
fistpll
sub
sbb
repz
adc
leave
lds
rorl
movsl
xor
repnz
repz
pop
lods
and
and
xchg
mov
xor
xchg
sub
jmp
insl
enter
les
and
inc
dec
lahf
ficoml
add
fstpt
push
jno
sub
jbe
daa
mov
push
and
dec
cmp
mov
xor
es
fdivp
mov
xchg
iret
popl
in
cli
push
mov
sub
mov
push
cli
xor
aas
mov
inc
dec
push
stc
and
xor
xor
movsl
push
xor
add
aaa
ret
cmp
lcall
jmp
xchg
cmp
in
adc
mov
or
cmp
clc
inc
push
in
mov
or
pop
xor
gs
adc
movsb
add
out
lret
push
mov
stos
ret
out
xor
dec
push
sbb
movsb
inc
add
ret
in
test
sbb
xchg
push
pop
lock
xchg
subl
or
inc
add
mov
xchg
dec
or
shl
sbbl
and
imul
adc
mov
cmp
mov
lock
mov
push
ss
mov
mov
popa
sarb
adc
out
in
iret
fidivs
rcr
cmpsb
xor
inc
push
sti
in
adc
hlt
pop
sub
fwait
or
mov
add
test
and
xor
and
xor
jl
iret
xor
mov
jle
inc
loopne
and
fs
test
pop
pop
pop
shlb
nop
insb
or
mov
mov
cmpsb
or
add
cmp
cmpsl
and
mov
pop
rcll
adc
inc
cmp
insb
and
es
pop
jns
aaa
bound
sbb
and
pop
fs
jp
inc
das
lret
mov
jecxz
mov
xchg
lea
inc
imul
adc
jno
fbld
out
inc
mov
call
daa
sarl
mov
pop
push
jp
pop
jns
jnp
sbb
ja
sub
rcrb
jmp
lret
xchg
and
sub
lds
adc
sbb
and
inc
shrb
jb
jnp
adcb
gs
sbb
or
lcall
mov
and
or
movsl
mov
add
or
lock
ffree
xor
adc
test
xor
into
push
cli
cmp
iret
jle
fs
ficompl
sbb
lret
mov
sarb
sbb
cmpsl
test
push
aad
loop
imul
orl
push
frstor
xor
xchg
shlb
pop
or
subb
shrb
xor
push
mov
mov
dec
into
in
call
mov
test
adc
adc
pop
andl
cmp
jno
mov
sub
addr16
mov
add
shll
insb
mov
mov
pop
add
mov
gs
ret
pop
aam
mov
adc
mov
adc
aaa
movsb
das
inc
jbe
mov
sbb
fstpt
or
roll
arpl
xchg
aas
in
lods
adc
rcll
cmp
scas
imul
mov
cmp
xlat
xor
in
push
mov
jp
shll
in
loope
jno
out
pop
add
test
lock
xchg
int
imul
cwtl
jae
cmp
jne
adc
bound
repz
mov
lods
cmp
xchg
stos
leave
sbb
add
sub
pop
fst
mov
pusha
movsb
inc
mov
push
jbe
pop
mov
in
loope
inc
lcall
push
aam
pop
cmc
mov
iret
in
cmp
loop
popf
imul
xchg
lock
les
movsl
xchg
popf
rcll
arpl
movsb
dec
mov
mov
sub
jne
call
pop
mov
sarl
popf
gs
cmp
sti
inc
mov
loop
js
xchg
or
pop
enter
icebp
arpl
mov
add
enter
xor
or
rcrl
mov
or
adc
imul
in
test
shrl
xchg
insl
push
mov
loopne
in
mov
sub
xchg
jno
les
dec
mov
ror
mov
lret
add
jne
pop
xlat
mov
pop
pop
cmp
push
sti
add
rorb
negl
dec
into
and
jns
ss
add
enter
aam
adc
fs
daa
mov
pushf
hlt
call
jno
mov
in
or
es
iret
add
sbb
stc
or
loop
or
inc
or
fildll
inc
mov
inc
icebp
jl
xchg
insb
xchg
sub
inc
mov
dec
xchg
sbb
in
outsb
mov
pop
sub
repnz
stc
out
addr16
jmp
lcall
cmp
add
or
enter
jge
roll
push
lods
mov
loope
roll
push
fimull
jno
pop
pop
in
sub
ret
incl
inc
movsb
test
push
jmp
xchg
ds
jb
fisubrl
stc
imul
negl
push
jmp
dec
add
mov
inc
pop
mov
mov
stc
addl
cs
enter
ret
clc
shlb
es
jbe
ss
popf
inc
loopne
push
xchg
mov
hlt
bound
sahf
hlt
loop
pop
adc
inc
ds
sbb
jge
mov
xor
cmpsb
push
dec
xchg
ljmp
jae
inc
sbb
mov
cmp
pusha
ffreep
bnd
loop
dec
lock
lock
cmp
aam
mov
les
loopne
and
inc
daa
push
mov
int
ljmp
mov
pop
jnp
pop
mov
and
pop
jecxz
jne
lock
mov
dec
mov
pushf
mov
xor
movsb
or
cs
jge
and
fwait
mov
ret
stos
stos
sti
sub
bound
fnstsw
jmp
in
xchg
test
sbb
lcall
stos
dec
push
lds
mov
cmp
pusha
add
pop
je
aas
std
shrl
clc
lods
dec
mov
mov
scas
aaa
add
dec
subb
cmp
add
xchg
push
adc
fstpt
ret
xor
daa
push
inc
mov
cmp
sub
enter
cmp
jo
test
jge
test
hlt
test
inc
repz
rorl
fsubl
sub
push
jo
popf
cmp
dec
mov
nopl
pop
int
aam
shll
xchg
or
pop
dec
inc
mov
xchg
sub
js
icebp
ds
out
inc
loopne
inc
push
mov
notb
dec
mov
shrb
adc
sub
into
dec
mov
xor
and
inc
xchg
sbb
lcall
imul
scas
rcrl
int
pop
sahf
pushf
pushf
xchg
cld
das
mov
out
mov
loopne,pn
cmp
sbb
mov
sbb
jae
iret
sbb
inc
bound
dec
xchg
sbb
into
add
test
cmp
xchg
cmp
ss
mov
jge
ret
les
jle
xor
sbb
lret
xor
cmp
mov
mov
insl
ljmp
sti
sbb
add
dec
arpl
jg
or
mov
cltd
arpl
xchg
add
xor
jmp
jle
leave
and
inc
adc
fwait
out
outsl
js
sbb
test
imul
xchg
push
insl
js
in
cmp
ljmp
xchg
aad
sbb
pushf
adc
stos
xchg
sub
mov
or
mov
cmp
mov
push
mov
stos
mov
in
ds
sbb
push
jo
adc
mov
sub
sub
rcl
or
pop
mov
xor
fidivrl
cmp
xchg
popf
mov
out
pop
pop
test
mov
loop
into
inc
bound
psubq
loopne
push
test
leave
mov
enter
pop
mov
xchg
xchg
cmp
cld
xor
push
adc
scas
lcall
ret
jge
aas
mulb
in
cmp
mov
fdivs
mov
xor
add
mov
xorb
mov
cwtl
addr16
push
mov
mov
xor
sahf
cmpl
sbb
fmull
adc
dec
mov
push
lea
mov
ret
fistl
int
push
lret
mov
cmc
mov
or
out
jecxz
mov
dec
or
imul
mov
xchg
sbb
out
in
sub
scas
cmc
test
and
and
stc
lcall
jne
cs
pop
daa
repz
cmp
fcom
fisttpl
daa
sbb
xchg
sbb
xchg
stc
dec
rorb
dec
pushf
jae
adc
imulb
dec
push
xor
adc
insl
add
sbb
cmp
pop
mov
push
repz
and
cmp
dec
out
xor
in
and
movb
fsub
das
add
testl
pop
lods
ljmp
push
movsb
std
sbb
mov
and
mov
add
adc
fisubl
test
nop
pop
pop
add
mov
cmp
inc
mov
lods
movsl
shll
push
lods
push
rol
cmpsb
dec
inc
int
outsl
mov
push
sub
fstl
cmp
cmp
scas
dec
inc
mov
add
popa
aaa
or
xor
lea
int3
ss
je
int
scas
xor
push
test
mov
dec
scas
fisubl
push
jp
and
xorb
and
add
and
movb
mov
xor
xor
int3
push
or
popf
pop
roll
adc
ror
popf
rcrl
or
cwtl
jecxz
cld
add
cmp
inc
push
arpl
mov
sti
flds
sbb
mov
push
jae
jg
or
xchg
dec
push
mov
adc
movsb
xchg
outsl
popf
sub
repnz
jns
pop
mov
jo
mov
push
jae
sbb
out
cmpl
jno
mov
inc
cmc
test
or
outsl
add
cld
std
sbb
mov
jno
xchg
into
xor
movsb
and
jg
sbb
inc
movsl
pop
dec
mov
daa
cwtl
mov
mov
fisttpl
push
cmp
lods
or
add
cmp
inc
test
inc
ds
add
clc
mov
xchg
mov
scas
add
dec
jne
in
cmp
adc
leave
push
and
mull
xchg
mov
and
mul
shll
adc
pop
lds
xor
je
outsb
sub
mov
fs
inc
sti
outsl
mov
call
xchg
xchg
jle
out
movsl
repnz
divb
jle
daa
adc
cbtw
movsl
sub
pop
mov
mov
xchg
aam
rorb
insb
cltd
repnz
push
xchg
aad
iret
mov
mov
test
jmp
cmc
add
xchg
popf
ret
scas
mov
sub
jne
scas
pop
cmp
lret
adc
shl
jg
mov
sbb
push
stc
mov
subb
jbe
inc
pop
leave
movsl
ret
imul
mov
xor
mov
jmp
sbb
jno
fs
jp
mov
ret
icebp
aas
insl
aas
insl
jecxz
pop
push
mov
or
adc
cs
jp
xor
or
mov
mov
xor
pop
subb
stc
dec
sbb
push
push
jmp
push
mov
mov
adc
inc
xor
clc
pop
sub
push
daa
cmp
add
xor
xor
cmp
adc
aam
out
scas
addr16
xor
bnd
cli
mov
mov
dec
dec
sub
idiv
xchg
shl
push
and
dec
mov
fists
lods
mov
lea
jnp
ljmp
xor
sarl
call
pop
or
scas
cmp
pop
xor
push
dec
nop
cs
sbb
dec
sbb
pushf
fs
shl
ja
mov
mov
cmp
imull
repz
mov
orb
ss
ret
data16
outsb
loop
sub
pop
pop
adcb
dec
mov
push
sub
inc
jae
mov
call
sub
js
sub
push
test
dec
insl
test
add
xor
icebp
adc
sub
clc
mov
or
inc
inc
scas
sbb
clc
lcall
leave
adc
repnz
pushl
mov
mov
sbb
mov
xor
pop
lret
push
add
adc
jne
sub
add
push
out
mov
rcrl
xor
dec
add
cmp
pop
lahf
xor
xor
and
std
or
loop
fimuls
shll
das
mov
fistps
sahf
packssdw
iret
inc
rorb
push
shrl
es
mov
test
mov
or
pop
inc
faddl
lahf
cltd
mov
sbb
dec
push
fstpt
in
fiaddl
adc
push
movsl
xchg
clc
inc
dec
rorl
int3
dec
addl
pop
push
fsubr
xchg
stos
out
das
sub
rclb
loop
adc
test
lcall
pop
movsb
xor
imul
lcall
adc
test
bound
xor
push
mov
push
out
xor
decl
fiadds
and
dec
lea
pop
dec
mov
push
mov
std
scas
fs
xchg
sbb
jnp
mov
clc
fwait
push
xchg
dec
xchg
lea
adcl
nop
shlb
aas
adc
sbb
or
test
inc
and
jl
xorb
enter
test
sub
hlt
dec
sti
or
xlat
mov
mov
mov
fdivs
xchg
out
mov
test
jb
into
dec
sub
movsb
sarl
and
cli
daa
inc
ljmp
rclb
mov
xor
sub
test
ds
insl
push
scas
sbb
or
icebp
in
mov
cmp
push
shlb
pop
and
jle
arpl
mov
test
jp
mov
cli
das
xchg
std
pop
outsl
sbb
daa
pop
mov
dec
and
xchg
jle
fstl
stos
sub
jne
jbe
clc
jle
push
rcl
dec
xor
pop
mov
inc
out
mov
aad
sbb
jnp
jmp
aam
mov
xor
lock
mov
mov
lret
fs
fimuls
or
and
neg
dec
mov
movsl
xchg
enter
sahf
inc
dec
sub
dec
jmp
mov
mov
adc
add
sbb
add
enter
popa
call
push
movsl
in
or
sbb
sbb
jnp
loop
ljmp
faddp
imul
and
inc
rorb
push
daa
cmp
fcmovnbe
ret
addr16
in
pop
push
js
rcll
push
jmp
cmp
push
in
xor
mov
mov
jnp
xchg
iret
dec
addb
jnp
dec
pop
mov
sbb
dec
les
loope
mov
xor
lret
arpl
les
jmp
dec
mov
and
push
inc
shl
cli
jg
jecxz
adcb
and
cwtl
jg
enter
pop
push
cmp
cmp
xchg
aad
hlt
add
popa
out
inc
gs
jp
fstpl
jecxz
in
inc
enter
add
push
jmp
loopne
fldenv
jb
inc
inc
mov
push
leave
fisubl
sarb
ss
out
pop
mov
pop
jecxz
mov
lods
and
insl
andl
imul
call
jne
popa
ja
gs
pop
and
aad
add
mov
testb
inc
repnz
imul
xchg
loop
push
ficoml
and
add
mov
push
sarl
loop
and
int3
in
inc
test
xchg
shll
out
sub
hlt
data16
jbe
adc
scas
push
sbb
push
or
inc
scas
in
dec
icebp
mov
fmul
orb
mov
mov
imulb
adc
and
push
sbb
mov
js
pop
cmpb
arpl
outsl
push
in
pusha
adc
pop
and
add
inc
jbe,pt
inc
loope
mov
xor
call
jmp
sbb
and
jae
xor
xor
pop
xor
sbb
and
loope
adc
cwtl
loopne
ljmp
orl
jl
jge
jmp
sbb
out
sub
loopne
cmp
fmuls
ljmp
das
add
lock
xchg
rcrb
inc
jmp
test
xchg
add
out
data16
insl
pop
cmpsl
or
aam
or
in
jmp
xor
jecxz
nop
lds
testb
cs
jno
jae
adc
jns
push
adc
in
mov
or
out
lahf
fs
repz
popf
das
int3
xchg
xor
test
ror
loope
sti
push
test
pop
stos
inc
jae,pn
xor
jle
shlb
divl
and
inc
dec
push
lahf
mov
roll
subl
inc
jnp
xchg
dec
inc
mov
test
aaa
rorl
pop
sar
cwtl
nop
and
mov
dec
xor
stos
xor
fcomps
mov
lods
add
sahf
cltd
jl
in
popaw
leave
and
ds
ss
mov
frstor
outsl
adc
sbb
cld
jae
dec
adc
dec
addr16
mov
jle
pop
dec
pop
clc
pop
adc
dec
pop
mov
cli
cli
lcall
add
and
adc
cltd
sbb
xchg
out
arpl
cmp
cmovp
xchg
out
cmpsl
lds
pop
or
inc
sub
add
int
mov
rol
xor
pop
bnd
and
loopne
enter
out
xor
dec
sahf
and
sti
fwait
xor
sahf
ret
jmp
xchg
and
enter
push
cmp
fistpll
cmpsl
pusha
std
inc
arpl
ucomiss
xor
scas
pushf
mov
jl
faddl
jns
dec
in
mov
imul
add
sbb
dec
push
dec
ret
push
xchg
pop
dec
fldenv
ds
repz
push
nop
or
pop
sub
sti
ret
jecxz
mov
insl
mov
mov
popa
mov
cmp
lock
jne
add
sbb
stos
or
and
scas
mov
popf
ret
mov
jecxz
repz
stos
xchg
mov
hlt
inc
test
ret
je
fdivrs
movsb
aam
fisttps
addr16
pop
dec
adc
lock
mov
jbe
fimuls
mov
jp
ja
ja
inc
pop
das
cmp
jecxz
loop
testl
imul
lods
mov
cmp
into
popf
inc
sbb
xchg
cmp
popa
rcll
or
loop
loope
testb
push
popf
cmpsb
shrb
rolb
mov
negb
push
mov
xor
add
loopnew
dec
imul
jle
xor
mov
insb
push
repz
adc
inc
push
xchg
and
pop
out
ficoms
cmp
inc
out
add
fcomps
mov
addr16
pop
sbb
adc
icebp
and
jnp
inc
lret
mov
mov
rorb
xchg
mov
daa
out
sub
mov
shrl
jnp
mov
in
xbegin
ds
pop
pushf
imul
mov
outsl
nop
sbb
fstpl
sbb
xlat
jo
jecxz
aaa
add
push
fs
aam
inc
sub
das
add
pushf
and
insb
jo
insl
add
xor
imulb
or
sub
scas
sahf
lret
test
or
aam
cmpsb
add
in
repz
ss
out
pop
loopne
add
xchg
cs
in
sub
add
ud1
ss
test
mov
stos
or
and
mov
pusha
subb
rcl
cmp
jbe
stc
add
arpl
xchg
push
scas
pop
aad
xchg
adc
rcrb
popa
xor
in
out
push
push
cmp
mov
das
jmp
or
pop
call
cli
mov
xor
seto
stos
mov
cwtl
bound
or
scas
leave
add
inc
mov
jbe
pop
cmp
mov
or
pop
push
mov
adc
adc
fs
inc
xor
xchg
mov
mov
sbb
push
mov
and
inc
mov
pop
jno
int
pushf
stos
into
pop
adc
pop
sub
sbb
clc
add
rol
mov
push
pushf
int
fnsave
inc
scas
cs
mov
xchg
push
cmc
lret
sbb
xor
repz
ret
ss
out
sbb
mov
into
jl
ljmp
lods
leave
or
aaa
dec
jnp
mov
icebp
das
push
fldl
fdiv
rcll
aaa
negb
ljmp
cli
and
pop
out
movsb
or
cs
jmp
jmp
insb
pop
ds
fs
cmpsb
jae
imul
fildl
adc
pmuludq
lcall
jg
and
xor
jns
xor
icebp
es
icebp
out
lock
jnp
repnz
add
ss
sbb
aaa
xchg
aad
add
sbb
movsb
cs
push
aas
inc
xchg
aas
in
push
add
sbb
push
mov
inc
mov
xchg
adc
loope
jge
jge
lcall
loope
mov
jo
dec
jmp
dec
repz
dec
lods
lods
mov
fldcw
push
mov
push
pushf
jp
or
mov
daa
sbb
mov
add
arpl
dec
jmp
insb
push
iret
jmp
ret
cmpsb
ffreep
mov
adc
pop
enter
dec
ja
repnz
cs
aas
push
jl
es
mov
xchg
pop
sbb
repnz
jp
mov
mov
int3
popa
sbb
mul
xchg
mov
mov
out
or
outsb
aas
jae
cmp
je
das
stos
or
xor
and
call
xlat
push
cmp
push
dec
mov
and
xchg
mov
ficomps
push
cltd
aas
sub
xchg
jmp
or
jo
movsl
ss
fildl
lcall
ret
stos
cld
lret
mov
lock
xchg
xchg
jp
shlb
push
jb
push
outsl
mov
ss
inc
rclb
ja
sbb
sub
insb
div
and
jb
stos
jp
jne
sbb
pop
stos
mov
and
stos
xchg
xor
enter
popf
lahf
into
push
sbb
jno
mov
xchg
inc
adc
xchg
inc
lahf
push
push
sti
cmpsb
adc
loopne
pusha
adc
mov
or
gs
mov
dec
mov
push
add
cmp
int3
cmc
xor
fdivrs
pop
fisttps
cmp
mov
dec
add
outsl
inc
sahf
pushf
sti
and
icebp
sahf
sti
ret
in
shr
cmp
push
mov
mov
js
stos
push
jmp
cmp
mov
fs
cmpb
cld
push
pop
div
adc
sbb
call
xlat
jmp
nop
mov
and
mov
and
mov
loop
mov
jp
adc
fstl
pop
xchg
mov
mov
xchg
adc
sbb
cmpsl
fucomi
cmpsl
cli
jecxz
jge
in
pop
jecxz
insl
dec
rcrb
mov
sub
xchg
jnp
and
mov
inc
in
or
add
mov
fmuls
arpl
dec
or
out
mov
popf
sub
jns
dec
shlb
fidivrs
push
in
faddl
negl
mov
lahf
fwait
data16
mov
inc
adc
data16
ja
or
sbb
xchg
sbbl
mov
out
test
in
sub
mov
push
mov
inc
adcl
dec
out
movsl
adc
movsb
lret
repnz
mov
addr16
pop
add
jmp
loop
mov
add
je
in
add
mov
dec
movsl
mov
jmp
dec
push
inc
and
aas
cltd
mov
xchg
xor
mov
insl
cmp
jecxz
dec
sti
shrb
jl
xor
add
stos
gs
lahf
or
jl
test
shl
mov
inc
fdiv
sub
lahf
dec
jl
add
sbb
adc
add
das
inc
stos
mov
pop
ja
mov
mov
lea
jb
sbb
cmp
jns
lret
movsl
pop
out
sbb
imul
mov
call
push
loope
out
hlt
push
shll
mov
das
cmp
movsl
das
int
mov
or
mov
jbe
out
mov
cmpsl
push
mov
and
adc
jmp
pop
nop
push
rclb
inc
push
jae
push
dec
gs
push
popa
mov
aas
xchg
or
adc
jbe
popa
mov
mov
mov
xchg
mov
loope
add
std
cmp
mov
sbb
jae
xchg
shll
inc
pop
dec
push
imul
repz
adc
sub
dec
pop
out
mov
ljmp
into
int3
mov
add
xor
cmc
loopne
shll
xchg
jle
jb
fstps
mov
jae
jmp
jns
out
pop
sti
fisubrl
mov
add
out
push
inc
mov
jg
inc
or
sub
ja
or
jmp
or
cmp
into
or
mov
adc
pop
mov
das
shll
push
test
pop
xor
cli
hlt
addr16
test
test
jb
scas
sbb
test
or
outsl
jp
sbb
mov
lret
lret
loop
into
in
cltd
jbe
xchg
sub
add
daa
push
shlb
das
out
mov
lods
lods
dec
push
xor
loop
jno
jno
in
xchg
jecxz
push
mov
stos
popf
ss
gs
das
sbb
push
vmovupd
fiaddl
scas
stos
inc
pop
adc
mov
push
pop
mov
data16
mov
roll
xchg
or
test
mov
cmp
popaw
mov
xor
roll
jo
repz
sub
push
lds
mov
pop
sub
push
xchg
rorl
and
inc
cmp
fldenv
data16
sarl
test
dec
push
dec
xor
cmp
jo
loop
cltd
mov
sarl
int3
xchg
mov
aad
pop
in
mov
pushf
cmpsb
sahf
inc
mov
add
pop
xor
cltd
adc
imul
cmp
or
imul
scas
jp
scas
xchg
cmp
dec
and
pusha
sbb
pushf
outsb
or
sbb
mov
dec
stc
movsb
pop
and
cmpl
add
sub
loopne
jp
test
jb
adc
clc
jmp
sbb
inc
xor
cmp
adc
or
jns
mov
scas
cmc
xor
ret
dec
adc
shl
fbstp
sub
sbb
jo
or
mov
lods
dec
dec
testb
iret
xor
jle
out
adc
mov
aad
outsb
mov
enter
sub
xchg
ret
add
mov
adc
and
xorl
std
xor
stos
ficompl
jecxz
rorl
jmp
inc
clc
stc
arpl
mov
sbbl
jns
pop
xor
or
jmp
xor
insb
stos
add
pop
out
aad
outsb
mov
pop
push
icebp
sub
cs
jge
mov
adc
cmp
cltd
sbb
out
jle
ret
xor
mov
test
inc
inc
pusha
cmpsl
imull
pushf
xchg
pop
mov
xchg
cmpl
xchg
gs
cli
ja
pusha
inc
add
xchg
jo
insb
jns
adc
das
sbb
xchg
sub
mov
mov
into
mov
sbb
xchg
ds
loopne
inc
dec
loopne
fnstcw
pop
pop
loop
int
xor
nop
addr16
cwtl
test
das
sub
xchg
fucomip
adc
and
push
cmp
or
cmp
hlt
push
xchg
in
sbb
pop
jae
adc
adc
jmp
pushf
adc
enter
stc
sbb
mov
jne
insl
aam
and
fldt
cmp
lods
xchg
ja
insl
mov
scas
cmp
cmpsl
xor
jmp
push
repnz
xchg
lods
aaa
push
pop
in
push
hlt
mull
into
push
inc
outsl
out
dec
lahf
lods
inc
pop
or
pop
insl
lods
lds
out
test
outsb
jg
out
in
and
push
xchg
jmp
push
gs
repz
pop
add
lret
inc
adc
scas
arpl
pop
jle
or
lds
push
push
push
out
stc
xor
dec
das
mov
mov
test
adc
in
arpl
out
inc
lods
stos
push
ja
adc
pop
je
inc
jae
lods
mov
out
add
xor
pop
jno
movsb
pop
lods
add
lret
sbb
jae
sbb
adc
imul
mov
xchg
cmp
addl
ret
xor
stos
movsb
inc
test
push
mov
push
xchg
sbb
or
mov
fisttpl
ror
test
repz
sub
sti
xor
sbb
sarl
or
mov
xor
or
sbbl
movsl
mov
pop
xchg
bound
cmp
adc
sub
test
dec
nop
imul
xchg
inc
cmc
std
inc
xor
xchg
sbbl
add
leave
xacquire
pop
pop
adc
inc
out
leave
inc
pop
rcrb
stos
fsubrp
into
in
shll
push
lds
pop
test
scas
sub
movzwl
leave
les
rorl
test
cmp
mov
mov
jb
mov
pop
dec
movsb
ja
xchg
sub
fsubs
or
shl
call
in
out
inc
popa
scas
adc
xchg
cli
pop
pop
dec
lahf
in
cld
dec
pop
frstor
leave
iret
push
lahf
jns
dec
sbb
mov
dec
mov
outsl
push
shll
repnz
cltd
gs
mov
push
dec
xlat
ds
daa
xchg
popf
out
popf
call
lds
or
or
jne
ljmp
lea
fsub
adc
pop
xor
jbe
xchg
mov
xchg
xor
fidivrs
inc
cmp
std
mov
lret
movsl
xchg
or
lock
cmp
adc
or
rcr
and
pop
dec
push
test
mov
popf
insb
push
push
scas
in
lahf
or
cmc
jo
mov
lea
das
or
xlat
insb
in
jae
inc
push
mov
mov
shrl
fwait
push
into
sbb
xchg
sub
xchg
lods
mov
repz
dec
std
jmp
test
mov
or
iret
and
mov
sti
and
dec
jo
cmp
lds
int
sahf
add
mov
mov
dec
dec
pop
pop
push
inc
mov
pop
test
pop
or
inc
neg
dec
mov
and
outsb
dec
cmc
loop
clc
arpl
js
add
jno
aas
movsb
lods
and
and
pop
mov
jecxz
lods
mov
xor
sbb
push
je
dec
shlb
or
dec
sbb
sub
call
or
sub
xchg
arpl
div
into
inc
int
fbstp
push
divl
and
jns
xchg
insb
jbe
dec
lock
pop
jo
cmpsb
ret
jg
add
imul
pop
in
sbb
mov
jl
mov
xchg
cmp
cli
sub
js
rclb
out
ja,pn
dec
jo
adc
pop
pop
pop
xchg
shl
or
mov
in
scas
mov
mov
ret
xor
shlb
or
pushf
scas
mov
fcoml
jns
pop
xchg
jnp
sub
dec
cwtl
adc
repnz
add
cltd
test
bound
cmc
or
cmpsb
mov
cmc
iret
mov
aam
loop
pop
fst
cmpsl
dec
repz
popa
arpl
cpuid
xchg
mov
jno
jne
into
or
adc
fsubrs
adc
push
jle
or
fwait
jmp
loope
push
insb
ljmp
jns
popa
cmp
mov
dec
insl
inc
je
ljmp
lods
loopne
xchg
inc
sbb
xchg
stc
push
iret
jo
mov
xlat
mov
lock
add
fsub
shl
push
mov
sbb
and
repnz
aam
xchg
inc
mov
inc
movb
sbb
jb
orl
xor
cmpsb
sub
popa
mov
or
int
incl
test
lds
adc
mov
insb
adc
out
dec
stos
mov
movsl
adc
jp
enter
mov
mov
popa
sti
xchg
sub
lea
movsl
mov
arpl
test
movsl
ret
pop
sub
mov
cwtl
test
and
jmp
imul
jbe
mov
sub
push
mov
lods
fadd
ficoml
xor
leave
add
idivl
pushf
shl
insb
es
les
sub
dec
add
mov
adc
cwtl
stos
mov
lret
adc
mov
jb
bound
cld
jg
mov
xor
out
clc
push
pushf
sub
cld
loopne
adc
and
mov
pop
lahf
in
imul
jmp
push
pop
mov
dec
xchg
mov
outsl
pop
push
xor
sbb
cmp
loope
push
ds
jle
iret
les
xchg
pushf
in
cmovne
cmp
imul
ret
lret
xor
sahf
jle
adc
pop
adc
mov
lret
fsubs
paddb
mov
ret
repz
lcall
sub
sbb
movsb
pop
lea
dec
jecxz
leave
out
paddusw
or
or
in
orb
imul
dec
push
imul
mov
push
jne
popf
mov
loop
std
daa
lret
pop
shrl
mov
mov
aam
xchg
leave
jle
xlat
andb
mov
mov
mov
push
arpl
cmp
out
sbb
fnstenv
mov
js
cmp
jbe
xchg
mov
in
mov
push
mov
jge
xchg
test
movsl
pop
clc
daa
and
and
push
xor
mov
xchg
call
add
fwait
adc
sahf
and
fwait
xor
insb
nop
adc
fistl
into
addr16
fiaddl
movsb
pop
mov
mov
cmp
mov
adc
lcall
jnp
mov
into
notb
ljmp
insb
sbb
sbb
or
inc
cs
xchg
rcll
and
das
push
call
std
pop
mov
sub
mov
cltd
dec
inc
loopne
adc
cld
nop
jp
mov
mov
or
cli
xchg
addr16
hlt
inc
cmpsl
dec
dec
in
mov
nop
subb
aaa
ljmp
frstor
sbbl
aam
push
adc
sbb
addr16
stos
mov
xor
mov
outsb
aad
loop
cwtl
out
mov
stos
fdivrs
daa
mov
loop
stos
cmp
xchg
pop
lds
adc
mov
jecxz
out
and
aas
push
cld
add
mov
adcl
ss
fdivs
cli
in
out
add
movsl
jb
xchg
pop
aad
mov
xchg
adc
lret
test
fisubl
loope
int3
ljmp
sbb
sarb
fdecstp
scas
pop
scas
sbb
add
cmp
movsl
xor
das
xchg
scas
icebp
mov
ds
jle
mov
dec
pop
mov
ret
inc
adc
mov
std
in
jle
nop
jmp
inc
and
in
lea
cmp
in
mov
aad
add
out
movsb
loop
daa
je
movsl
mov
inc
adc
or
jnp
test
in
arpl
push
mov
scas
rcrb
out
cmp
out
shrb
jmp
push
mov
icebp
and
test
mov
sbb
stos
add
jno
inc
sarl
js
xor
and
mov
movsl
stc
and
pop
xor
cmpsb
lods
dec
cmp
adc
sbb
fwait
stc
insb
push
mov
jg
cmpsb
jge
lock
out
pop
lds
or
mov
dec
push
sbb
dec
cmp
es
and
add
cli
fmul
jnp
lcall
pop
inc
dec
jns
andl
shlb
jnp
add
mov
inc
or
outsl
nop
les
std
mov
inc
dec
pop
jg
push
mov
adc
aas
aad
outsl
pop
movsb
dec
bound
ss
xchg
pop
scas
push
sbb
ret
jp,pt
fstpt
gs
mov
cs
adc
stos
es
jecxz
jmp
into
es
and
or
jge
lods
in
shrl
ret
jl
xor
imul
enter
sahf
and
dec
mov
pop
mov
sahf
scas
in
insb
inc
das
shrb
mov
cmp
mov
and
mov
cmp
test
mov
lea
sub
stos
cmp
es
add
push
mov
test
jae
jmp
repnz
sub
mov
repz
sahf
mulb
sbb
stos
xlat
dec
mov
mov
mov
push
nop
std
stc
mov
cmpsb
daa
xor
pop
notl
fldl
fldt
popa
aaa
arpl
and
push
sub
cmp
fnstcw
inc
sub
arpl
mov
addb
stos
xchg
add
dec
mov
sahf
lea
push
shll
outsb
in
jbe
add
ja
push
and
aaa
push
subl
call
mov
push
mov
ljmp
and
push
je
xor
pop
dec
dec
loopne
mov
mov
mov
add
mov
push
xor
dec
outsb
shrb
mov
cli
inc
inc
adc
sti
lcall
into
insl
rcrl
idiv
pusha
into
and
bound
pop
xor
xchg
clc
fistl
mov
imul
lea
hlt
das
call
jno
mov
jb
pusha
insb
mov
and
xchg
jae
mov
cmp
xchg
iret
ja
outsl
xor
jae
outsb
int3
sti
fildll
bound
ds
push
mov
mov
popf
arpl
adc
cltd
adc
sub
mov
lds
pop
sahf
inc
das
pop
aad
pop
cmp
imul
jne
stos
mov
and
sbb
outsl
adc
shlb
ss
sub
and
xchg
data16
sti
xchg
loop
pop
outsl
test
int3
scas
test
pusha
push
test
lock
aaa
data16
fisttpll
faddl
mov
mov
sub
loopne
and
sub
icebp
insb
clc
pop
cmp
icebp
in
out
lods
lret
aam
and
inc
cmp
jmp
mov
insl
xor
dec
mov
adc
pop
seto
movsl
inc
jae
inc
insb
sahf
or
jno
push
sub
dec
fdivs
shrb
test
mov
test
loopne
jp
ds
and
inc
lods
ss
pop
push
dec
pop
test
repnz
and
ja
xchg
jb
push
jb
jmp
mov
mov
cli
popf
jo
xorl
mov
cwtl
inc
lret
clc
push
mov
and
test
xchg
test
es
xor
pusha
fs
fldenv
sbb
jg
xchg
xchg
insl
push
jp
mov
dec
sub
push
xor
outsl
dec
lods
mov
xor
pop
cmpsl
pusha
mov
sub
aas
jb
mov
sub
or
or
int
pop
mov
lds
scas
imul
dec
cmp
fisubl
push
xchg
add
jmp
roll
stos
sbb
sub
mov
pop
sub
lret
mov
mov
xor
shr
pop
pop
jno
cmp
jo
enter
outsl
loop
jmp
loopne
scas
pop
mov
imul
inc
pusha
aas
xchg
sub
add
cli
imul
shr
sub
or
ljmp
je
cmp
aad
mov
rcll
mov
ret
xor
aaa
xchg
sub
cmp
in
repnz
test
xchg
pop
mov
mov
mov
mov
jno
outsl
popf
sbb
adc
xchg
pop
pushf
sbb
jno
int3
mov
dec
jp
push
jno
aam
in
sbb
inc
mov
repz
test
dec
mov
into
jl
ret
inc
jae
imull
lods
cld
pop
cltd
sbb
mov
and
sbb
jb
sbb
push
pop
pop
mov
loopne
sti
pop
adc
and
add
inc
cmpsl
jns
stos
dec
dec
lock
dec
mov
xor
ret
pop
sub
xchg
fisubs
js
enter
mov
adc
sahf
nop
fstl
stos
cmc
pop
jae
adc
mov
sbb
xchg
enter
adc
pushl
movsl
jbe
orl
mov
xchg
cwtl
inc
call
sbb
and
xorl
xchg
bound
jl
xor
aas
int3
xchg
xchg
movsl
inc
shll
xor
jbe
je
fs
add
inc
fsts
stos
mov
mov
jmp
sub
dec
aaa
call
adc
xchg
in
leave
xchg
xchg
xor
dec
sar
mov
or
cmpsl
aaa
or
mov
xlat
cld
je
dec
xor
imul
mov
cmp
gs
jns
cmpl
outsb
mov
mov
rorb
mov
negl
mov
mov
pop
mov
inc
idiv
inc
pop
sbb
iret
xchg
mov
push
fsubrp
sub
ficoml
or
cmp
into
inc
in
cmpsb
jbe
out
xlat
push
push
mov
mov
push
cmp
mov
cmpsl
int3
or
pop
add
das
jp
sbb
push
mov
add
and
xor
sbb
xor
inc
cmp
push
movsl
popf
pushf
jns
sbb
adc
cltd
js
hlt
push
enter
fisubrs
sbb
test
push
xorl
and
xchg
mov
movsb
fidivrl
cmp
repnz
lds
xchg
dec
mov
stos
jo
mov
jo
hlt
fmulp
mov
fdivrs
xchg
mov
stos
xchg
push
pmuludq
xor
js
pushf
sub
inc
pop
inc
jnp
cmp
jbe
mov
inc
mov
test
in
lods
out
ret
sub
jg
mov
cmpsb
loopne
adc
cmp
mov
and
xor
xchg
push
mov
push
cmp
mov
jae
popf
or
xor
pop
aaa
jge
leave
inc
stos
push
cmp
fdiv
or
lahf
insl
aad
fdivrl
shlb
pop
jns
mov
xchg
jnp
push
add
aaa
jle
mov
stc
shll
mov
push
add
out
xor
aaa
dec
jb
xchg
imul
fmul
xorb
out
int
sbbb
push
in
ljmp
pop
cmpb
aas
cwtl
cmpsl
push
movsb
mov
push
dec
subb
daa
addr16
xchg
mov
dec
pop
jae
mov
mov
ret
inc
fadds
xchg
cmp
lods
pop
inc
rcrl
pop
mov
jno
imul
xchg
mov
fisubl
mov
mov
dec
sahf
and
cmp
shr
sub
pusha
fsubs
mov
cld
cmp
push
jno
add
sahf
pop
jae
int
cld
insb
mov
fwait
lahf
mov
inc
xchg
stos
adc
adc
pop
jo
les
mov
repz
or
jne
or
jp
aas
xor
mov
in
and
mov
fisubs
cmp
sbb
ljmp
jge
dec
xchg
adc
xor
pop
cwtl
int
mov
sbb
jmp
jle
je
aam
mov
outsb
mov
dec
adc
add
jno
push
fisubrl
call
dec
mov
xchg
jg
pop
pop
test
cmpsb
lock
out
mov
jge
mov
aas
std
jl
sarl
xchg
or
loop
lods
sbb
leave
sub
sub
push
hlt
scas
or
in
inc
push
dec
jl
and
mov
push
and
cmpb
mov
xor
jmp
ja
shll
stc
sbb
mov
xchg
cmp
push
jmp
sub
ds
mov
std
or
fldl
ljmp
nop
xchg
cmp
imul
sub
dec
test
sbb
fs
mov
cmp
test
xchg
addb
jno
dec
adc
ss
fbstp
inc
xor
sub
sahf
orl
sbb
into
je
push
xchg
icebp
sti
int
outsl
lret
ret
and
xchg
ficompl
loop
mov
sarl
pushf
cld
shrl
push
hlt
sbb
daa
movsb
and
push
repnz
cwtl
cmp
in
out
out
jo
mov
push
retw
icebp
in
pop
inc
fxch
cmp
lret
jno
cltd
dec
push
inc
pop
test
xchg
popf
pop
xor
js
cli
mov
jmp
dec
mov
cwtl
inc
int
ficompl
jp
mov
adc
sbb
int3
cmp
cli
jb
lock
lea
cmp
jne
call
mov
mov
adcb
into
shlb
dec
adc
dec
mov
hlt
inc
mov
mov
dec
xlat
pusha
sahf
jp
dec
movsl
inc
fcomi
cmp
in
loope
repnz
movsb
lcall
mov
mov
mov
pop
mov
shll
and
push
push
xchg
xor
aas
enter
inc
dec
loop
pusha
js
jo
in
imul
cmpl
clc
jb
cmp
mov
cmpsl
hlt
aad
pop
mov
inc
lahf
pop
sbb
les
ficoms
insb
mov
sub
xor
push
fwait
sub
std
push
mov
cmp
push
jmp
cmc
jg
adc
sbb
inc
repnz
imul
into
stos
decb
mov
push
repz
movaps
xchg
sub
outsb
dec
add
sbb
xchg
outsl
dec
jmp
push
push
adc
jo
dec
mov
push
ds
ja
or
mov
ljmp
je
cmp
xor
inc
cmpsb
xchg
xchg
dec
push
push
out
mov
push
xchg
mov
mov
repnz
bound
sbb
in
pop
scas
test
adc
mov
xor
jmp
gs
or
mov
in
lock
imul
mov
jecxz
int3
jl
rcrb
sbb
pop
loopne
imul
bound
add
stos
sub
mov
pushf
imul
or
sbb
push
inc
fidivrs
sbb
daa
inc
xor
cld
jle
adc
fdivr
aam
inc
cmpsl
int3
sbb
sub
jle
or
inc
inc
mov
insb
fildl
dec
stos
xchg
or
stos
movsl
loop
mov
cmc
sub
cmpsl
out
dec
xchg
sub
aaa
push
inc
push
in
mov
vdppd
adc
shrl
cwtl
sbb
and
lret
test
xchg
std
pop
cmp
loopne
cmp
mov
push
ds
jne
adc
add
lret
popf
push
and
inc
add
repz
xor
dec
xlat
movsb
js
mov
push
xor
and
int3
pop
out
cmpsl
inc
adc
fcmovnbe
mov
adc
dec
movsb
adc
mov
mov
sti
fadd
push
sti
mov
iretw
fs
sbb
out
and
rclb
ss
xchg
xchg
movl
arpl
movsb
push
clc
push
xchg
insb
in
lock
xor
test
aam
pop
test
sub
mov
cmp
ret
rcrb
pop
jge
mov
xchg
jne
bound
jp
pop
movsl
jg
sbbb
cs
and
in
dec
push
sbb
sub
fs
pop
mov
hlt
push
jno
in
hlt
pop
push
out
loop
lcall
cld
lods
adc
mov
pop
mov
mov
cs
mov
cltd
cwtl
jmp
mov
cmp
shrl
dec
in
icebp
adc
scas
repnz
add
and
mov
push
gs
inc
jbe
scas
test
push
xchg
mov
sub
adc
aas
popa
daa
lahf
jbe
cld
mov
inc
mov
xor
push
xchg
or
fistpll
jge
jo
clc
sbbl
or
cmpl
daa
jns
xchg
mov
cltd
test
mov
outsl
jb
shlb
pavgb
jle
shll
pop
push
mov
in
outsb
or
ss
sbb
out
xor
decl
addr16
daa
xchg
xchg
lret
inc
pop
jg
arpl
mov
add
cmp
mov
pop
jl
int
mov
ret
das
jno
or
sub
pop
jo
add
jl
inc
xor
sarl
adc
pop
jbe
fmul
inc
pusha
orb
into
sbb
push
mov
inc
xchg
repz
mov
xchg
adc
mov
fsubp
loopne
cmpsl
jnp
add
hlt
test
push
sub
cmp
pop
mov
js
pop
mov
test
pop
mov
adc
xor
xchg
daa
jnp
inc
add
movsl
insl
mov
dec
push
leave
jg
jmp
jne
ret
cmp
jg
movsl
sbb
or
mov
enter
mov
xchg
repnz
pop
push
loopne
jae
aad
ja
cmc
iret
enter
mov
lods
fwait
addr16
cmc
pop
aam
jae
outsb
add
loope
cmpb
je
sbbl
fmul
pop
repz
mov
jmp
ss
aam
int3
gs
movsl
xor
fildl
inc
ja
inc
add
sbb
mov
out
cltd
jae
jmp
xchg
repnz
cmp
dec
dec
mov
sub
cmp
pop
clc
jmp
cmc
stos
clc
movsb
sbb
es
sub
sbb
dec
push
jae
lods
lahf
xchg
scas
pop
jmp
or
xor
mov
insb
out
sub
pop
lahf
shlb
or
dec
ss
inc
dec
dec
fnsave
out
sbb
inc
jmp
jecxz
xor
std
mov
aaa
fs
pushf
push
roll
and
xchg
je
push
jb
fcmove
test
lock
mov
jne
aad
push
sbb
add
cwtl
jl
push
lds
lret
inc
int3
add
adc
sarl
add
sub
add
je
mov
test
xlat
fcomp
leave
notb
fs
push
pop
adc
clc
out
fs
mov
mov
dec
dec
mov
mov
ror
mov
ror
sub
pusha
mov
rorl
into
xor
pop
pop
xlat
enter
ret
push
sub
stc
push
in
sbb
decb
mov
sbb
popl
dec
sbb
outsb
lods
inc
jmp
mov
inc
add
mov
adc
in
cmp
add
pusha
pop
repnz
jb
je
mov
sbb
jb
hlt
xor
lahf
push
in
inc
cmpsb
jae
xor
xchg
xchg
lods
pusha
incb
xchg
int
jns
rol
jl
lock
dec
call
add
ljmp
push
and
and
cmp
sub
push
fildll
dec
lahf
or
icebp
test
ret
inc
mov
pop
out
imul
ss
test
xchg
sbb
mov
ja
das
fsts
and
fdivs
mov
and
or
cmp
mov
or
fisttps
std
and
in
add
test
lods
out
sub
into
aad
fsubr
mov
iret
mov
insl
aad
xchg
or
or
repz
mov
fistpl
rorl
push
jmp
jecxz
mov
jmp
in
fs
outsb
sti
and
mov
js
ljmp
inc
inc
push
aaa
cmp
lret
sub
ljmp
add
xlat
test
inc
fwait
xlat
fcmovu
xor
ljmp
dec
bound
fs
pop
xlat
nop
test
ret
std
dec
lock
sub
aaa
pop
cmc
xchg
dec
mov
pop
stos
push
adc
or
push
push
pop
ss
xor
jbe
test
pop
lds
sbb
cmpsl
ss
fistpl
sub
pop
mov
in
adc
dec
mov
jbe
dec
pop
jl
hlt
hlt
mov
add
fcoms
lods
fistpll
sub
xlat
ret
add
push
lock
aas
cli
loop
cli
aas
cmp
push
add
xchg
mov
out
clc
fildl
adc
mov
and
add
out
cli
arpl
mov
ret
push
add
xchg
lcall
out
mov
mov
xchg
add
in
push
adcl
roll
repnz
lods
and
call
lea
mov
repnz
aad
inc
inc
xor
mov
sub
movsl
mov
lds
stc
lahf
dec
adc
mov
inc
in
fdivs
sub
outsb
lea
mov
in
scas
icebp
push
das
out
pop
repz
jae
outsb
xor
shlb
stos
and
stc
daa
jns
cld
pop
mov
sub
movsb
imul
sbb
fmuls
in
sbb
lahf
gs
lds
insb
xchg
fcom
sub
mov
push
popa
dec
lods
int3
add
xchg
pop
shr
es
pop
icebp
xor
mov
fs
ss
fnstsw
xchg
sti
movsb
jle
mov
movsb
fidivs
dec
out
movsl
leave
or
sbb
push
fadd
repz
cmp
push
lods
jmp
inc
jne
lcall
into
out
cmp
xchg
jge
inc
outsl
sbb
cmpsl
adc
push
inc
enter
and
cmpsb
jb
sti
fmul
push
add
scas
test
vpunpcklwd
loopne
mov
insl
adc
lret
xor
call
xor
lods
rolb
outsl
xorb
or
addb
jmp
std
clc
fcoms
out
pusha
jmp
mov
lods
mov
sarl
cmp
imul
jg
shlb
das
mov
xlat
fcmovu
gs
in
inc
xor
lods
jmp
in
cli
jnp
push
jo
lret
jns
or
mov
std
insb
lods
sahf
cmp
imul
fimuls
sbb
mov
xor
xor
in
inc
mov
xchg
cmpsb
notb
jae
xchg
std
imul
cmc
stos
mov
add
add
add
test
sub
sbb
popa
push
xchg
jp
outsb
lret
insb
and
adc
out
iret
clc
jnp
push
imul
into
pop
dec
inc
mov
ja
cld
or
fidivl
sbb
jecxz
int
xor
xor
adc
imul
jp
push
outsl
and
hlt
add
enter
mov
shrb
push
xchg
outsl
push
cs
negb
mov
fstl
fdivrs
adc
out
clc
popf
push
inc
je
sti
jmp
push
pop
cmp
sahf
push
push
rcrl
cmpb
dec
pushf
mov
cmp
lds
inc
test
pop
sbb
cmp
sbb
xor
add
xor
adc
movsl
pop
mov
bnd
dec
adc
mov
inc
pop
xchg
dec
inc
adc
popa
and
ret
sbb
xor
mov
inc
rcrl
or
pop
bound
xor
mov
es
push
lea
adc
inc
pop
stos
ds
pop
leave
fisttpll
pop
xor
mov
mov
add
clc
rcl
shrb
inc
lods
pop
pop
movsb
jb
cltd
dec
cwtl
or
addr16
add
mov
xchg
mov
add
dec
mov
into
sbb
mov
and
ret
xor
fs
mov
mov
cmp
les
xor
inc
mov
scas
sub
shlb
jb
scas
pop
push
dec
stos
inc
outsb
fadd
add
ja
and
int3
int3
inc
rcrb
jne
arpl
out
sahf
or
xor
add
sahf
jg
push
arpl
xchg
gs
dec
daa
std
mov
arpl
mov
push
push
add
and
mov
jbe
inc
or
xchg
mov
mov
test
test
xor
iret
adc
pop
popf
fsubs
xor
mov
jl
les
leave
xchg
cmp
dec
sub
cmp
sbbl
push
int
add
inc
fnstenv
ds
mov
mov
lcall
adc
or
inc
repz
sbb
das
sub
jb
or
pusha
jae
icebp
xchg
xorl
shrl
add
fistl
push
stc
lret
mov
mull
cmpsl
inc
repnz
inc
out
sub
inc
inc
mov
ret
test
push
aam
ret
jae
xor
add
dec
mov
mov
shlb
jno
fnstsw
stc
ss
lret
dec
call
sub
push
or
pop
pop
je
xor
cwtl
mov
mov
dec
cmp
insb
push
and
sti
es
sahf
cmp
lods
fmuls
mov
and
or
lcall
out
ret
jne
mov
jecxz
shrl
cmp
out
ja
dec
popa
fwait
shl
test
xlat
or
mov
fidivrs
pop
cltd
push
mov
imul
add
sbb
jmp
pop
sbb
int3
mov
shlb
shrl
sarb
mov
aas
imul
subl
cltd
mov
aaa
lock
mov
push
cwtl
add
into
cs
aad
imul
std
imul
inc
lea
icebp
hlt
jnp
or
add
jecxz
push
mov
cmc
push
data16
fcmovnb
test
jp
hlt
rcr
jle
xchg
add
ret
sbb
push
or
fld
mov
jnp
movsb
inc
lret
scas
lods
xchg
push
inc
mov
xrelease
jmp
cwtl
rcrl
dec
out
and
mov
lods
je
repnz
adc
jg
repnz
mov
mov
test
jl
xorl
stc
mov
icebp
pop
sbb
jmp
jne
jb
lea
ficomps
movsl
stc
in
and
out
jmp
jbe
dec
je
push
mov
sub
int
mov
mov
rclb
call
pop
cmp
subl
mov
arpl
mov
cwtl
fidivrs
aaa
aas
mov
cmp
in
popf
mov
cmp
adcl
popf
int3
xlat
jno
lcall
cs
jle
xor
push
fwait
jge
adc
push
pop
scas
or
and
push
jmp
xlat
shlb
push
insl
adc
xchg
push
js
lea
cmc
pop
sbb
dec
pop
fisubrs
push
loop
xchg
sbb
pushf
inc
hlt
scas
jnp
pusha
xchg
xlat
cmpb
lock
xchg
mov
pop
xchg
sbb
shr
xchg
std
lods
out
out
aas
adc
jmp
mov
push
ss
push
jecxz
fs
sub
fldenv
jmp
hlt
iret
int3
jecxz
jns
notl
dec
inc
rorl
dec
imul
jge
rclb
loope
jmp
mov
or
cwtl
and
cmp
out
inc
xor
or
jge
cmp
adc
adcl
inc
mov
aad
xor
cmp
bound
jae
sub
cmp
and
stos
push
xchg
sub
dec
fwait
out
movsl
incb
push
inc
aad
fcomps
shl
stos
fnstsw
les
pop
jns
pop
std
rcll
data16
jne
or
dec
stc
dec
je
out
imul
outsl
shlb
push
sti
mov
cmp
insl
mull
lcall
jl
adc
rcr
adc
insl
mov
and
inc
cwtl
daa
mov
outsb
mov
outsb
lods
les
repz
addr16
mov
scas
pusha
push
xchg
cmp
rclb
cmpsl
cmp
fdivr
dec
call
xchg
pop
inc
add
mov
jne
cmp
cli
push
or
lds
stos
es
lcall
adc
mov
ret
sbb
sbbl
xchg
pop
aam
mov
rorl
stos
pop
sub
mov
inc
push
fcmovbe
lods
aas
fadd
rcrb
stos
mov
call
sub
insb
inc
sbb
repz
jecxz
and
call
fidivrl
outsb
pop
pop
movsl
popa
rcrb
mov
dec
and
add
test
xchg
xor
fmull
push
cmp
test
clc
popf
push
cmp
and
jecxz
test
or
test
test
xchg
pop
fdivrp
mov
mov
jb
rclb
pop
hlt
into
push
pop
data16
mov
xchg
lods
call
or
clc
adc
adcb
ja
and
push
sahf
ljmp
mov
and
out
jle
lds
in
cs
es
arpl
mov
je
rclb
fadds
cmp
add
push
negb
mov
mov
jns
and
insl
movsl
dec
mov
cmp
out
add
fisubrl
inc
into
pop
pusha
filds
cmp
sub
je
and
and
sti
push
jecxz
dec
inc
or
inc
int
imul
add
push
pop
mov
inc
fsubl
int
inc
stc
les
loopne
xchg
push
rolb
pop
mov
int3
in
adc
out
push
outsb
movb
outsb
mov
lcall
jmp
jge
dec
pop
mov
fdivrl
int
mov
lret
mov
mov
addr16
enter
ret
and
and
mov
push
jecxz
push
imul
test
std
dec
cmp
sub
jle
lret
fildll
popf
push
xor
rcrl
repnz
hlt
jmp
and
or
loopne
and
xchg
aas
sbb
dec
mov
es
ficoms
pop
and
enter
adc
lods
mov
test
dec
shlb
movsb
cmpsl
xchg
push
or
push
movsb
dec
les
pop
stos
testb
mulb
sub
or
jg
shll
pop
xor
pop
popf
and
sub
rcrb
call
jo
pop
fldl
lret
push
pop
fdivs
adc
movb
push
inc
sub
inc
pop
loopne
aas
add
roll
fisubl
xor
cmp
sub
pop
fimull
adc
jae
xchg
jp
mull
xchg
adc
mov
dec
mov
arpl
push
push
je
outsl
xchg
jno
mov
in
mov
in
xor
stos
scas
inc
repz
and
pop
ljmp
mov
aam
shlb
in
add
arpl
xchg
and
fs
fstpt
jecxz
pushl
imul
and
shll
insl
push
fldenv
leave
ja
cmp
cmpsl
mov
mov
call
flds
pop
lods
cmpsb
sbb
neg
jae
sbb
fildl
adc
daa
pop
cmp
iret
scas
lret
lock
stos
pop
inc
scas
inc
jg
ss
add
gs
into
inc
jbe
in
fs
xchg
jecxz
pop
sbb
mov
dec
push
jne
sbbb
dec
je
loopne
and
and
movsl
jb
jmp
adc
pop
jecxz
add
in
pop
inc
xchg
sub
negl
mov
add
xchg
fstps
mov
push
push
sbbl
shrl
imul
je
cmp
xor
push
cwtl
sub
push
xor
mov
push
sbb
sub
jg
and
jo
sbb
pop
push
sub
arpl
aaa
inc
js
outsb
sub
shl
test
inc
mov
je
or
or
cmpsb
out
ficompl
hlt
adcb
inc
sahf
addr16
and
jns
and
test
xchg
jo
jb
xor
decb
out
js
lods
inc
mov
pop
jo
mov
inc
mov
sti
outsb
push
inc
or
roll
or
sub
or
jmp
add
imul
dec
add
jecxz
mov
sub
mov
aad
pusha
add
jne
aaa
enter
ret
push
mov
fcompl
add
test
out
jecxz
jle
nop
jg
sti
aaa
cmpsb
int
rorb
div
ss
push
insb
sbb
es
testl
adc
arpl
repz
out
in
loop
xor
jl
xchg
jecxz
xor
mov
or
mov
insb
dec
lods
test
mov
in
cmpsl
mov
rolb
sub
dec
push
test
je
xor
imul
cltd
jne
cmp
xor
inc
sbb
mov
insl
flds
movl
inc
pop
add
adc
loopne
movsb
outsl
mov
mov
jle
sub
je
cld
lods
dec
adc
or
jg
lret
popa
je
and
jmp
xor
mov
lahf
mov
mov
fst
shl
mov
daa
imul
xchg
lock
popa
xor
push
pushf
mov
pop
icebp
fnsave
xchg
inc
movsl
mov
stos
lock
addb
movsl
lock
fsts
pop
mov
jbe
cmpsl
push
test
jmp
mov
test
outsb
dec
jae
ret
xchg
mov
mov
jnp
lret
loop
fdivrs
cmpsb
outsb
xlat
xor
das
xchg
or
mov
shr
aaa
push
and
lret
cwtl
or
sbb
inc
fsubp
leave
sbb
icebp
daa
jecxz
je
sub
in
mov
arpl
mov
add
inc
lock
pop
ljmp
ret
int
call
fstpl
sbbb
mul
sbb
dec
xchg
push
cmp
sbb
push
sub
mov
shll
cmc
leave
add
mov
stos
or
push
das
mov
test
adc
addr16
push
lcall
mov
movsl
jbe
hlt
fincstp
addb
dec
mov
dec
out
xchg
lahf
out
push
add
or
mov
adc
ds
jge
lds
push
lods
sbb
neg
daa
call
sti
xchg
lods
push
inc
jbe
and
addr16
mov
mov
iret
adc
movsb
mov
lea
subb
mov
sti
mov
imul
inc
and
lahf
pop
and
inc
addr16
shr
fwait
enter
mov
push
fwait
mov
into
xor
push
jge
lahf
mov
std
sub
sbb
ja
mov
aas
sbb
add
int3
icebp
lods
in
inc
xor
pop
lds
mov
sar
shrl
push
cld
mov
pop
cmpsl
orl
sahf
lret
arpl
xchg
push
shll
rorl
lods
lcall
xchg
enter
lea
xchg
mov
fcmovnb
sbb
movsb
in
addr16
push
pop
mov
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
mov
fnsave
subb
push
dec
xchg
jecxz
rcl
or
and
and
cmpsl
out
mov
cld
movsb
fnsave
dec
std
inc
sub
gs
lahf
cmp
sub
imulb
xor
test
mov
ja
mov
or
mov
xchg
pushl
jmp
adc
test
xor
adcl
pop
aad
push
cmp
mov
rolb
sbb
subl
jo
pop
push
inc
lds
insl
sti
in
icebp
sbb
stos
jae
lds
pop
pop
rcll
add
push
inc
pop
xchg
push
daa
shrl
pop
cs
mov
mov
push
xchg
sbb
jbe
pop
adc
cld
je
fwait
insl
push
pop
das
movsb
mov
std
pop
ljmp
xor
or
xor
sub
iret
stos
shrl
jp
pop
ret
emms
js
inc
cmp
or
xor
mov
lcall
sub
add
dec
inc
or
cli
pop
or
cmp
mov
sbb
inc
mov
adc
lret
insb
les
jo
pusha
dec
mov
sti
jp
push
pop
adc
pop
cwtl
lea
push
xchg
jo
inc
rclb
or
ret
pusha
out
push
lahf
mov
add
cmp
shrl
jp
ljmp
outsb
adc
push
sbb
shrb
add
movsb
nop
std
fdiv
push
std
aad
out
lods
mov
dec
xchg
cmp
push
push
add
pushf
roll
push
sahf
xchg
jno
push
or
je
adc
dec
pop
inc
imul
das
pop
pop
jb
mov
popf
pop
rolb
lods
push
mov
lret
mov
lret
inc
in
cwtl
sub
popa
jecxz
aaa
repnz
jae
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
